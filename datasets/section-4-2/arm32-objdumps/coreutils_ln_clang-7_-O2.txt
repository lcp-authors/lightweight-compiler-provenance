
../repos/coreutils/src/ln:     file format elf32-littlearm


Disassembly of section .init:

000112f8 <.init>:
   112f8:	push	{r3, lr}
   112fc:	bl	116dc <__mempcpy_chk@plt+0x4c>
   11300:	pop	{r3, pc}

Disassembly of section .plt:

00011304 <calloc@plt-0x14>:
   11304:	push	{lr}		; (str lr, [sp, #-4]!)
   11308:	ldr	lr, [pc, #4]	; 11314 <calloc@plt-0x4>
   1130c:	add	lr, pc, lr
   11310:	ldr	pc, [lr, #8]!
   11314:	andeq	sl, r1, ip, ror #25

00011318 <calloc@plt>:
   11318:	add	ip, pc, #0, 12
   1131c:	add	ip, ip, #106496	; 0x1a000
   11320:	ldr	pc, [ip, #3308]!	; 0xcec

00011324 <fputs_unlocked@plt>:
   11324:	add	ip, pc, #0, 12
   11328:	add	ip, ip, #106496	; 0x1a000
   1132c:	ldr	pc, [ip, #3300]!	; 0xce4

00011330 <raise@plt>:
   11330:	add	ip, pc, #0, 12
   11334:	add	ip, ip, #106496	; 0x1a000
   11338:	ldr	pc, [ip, #3292]!	; 0xcdc

0001133c <__getdelim@plt>:
   1133c:	add	ip, pc, #0, 12
   11340:	add	ip, ip, #106496	; 0x1a000
   11344:	ldr	pc, [ip, #3284]!	; 0xcd4

00011348 <strcmp@plt>:
   11348:	add	ip, pc, #0, 12
   1134c:	add	ip, ip, #106496	; 0x1a000
   11350:	ldr	pc, [ip, #3276]!	; 0xccc

00011354 <pathconf@plt>:
   11354:	add	ip, pc, #0, 12
   11358:	add	ip, ip, #106496	; 0x1a000
   1135c:	ldr	pc, [ip, #3268]!	; 0xcc4

00011360 <rewinddir@plt>:
   11360:	add	ip, pc, #0, 12
   11364:	add	ip, ip, #106496	; 0x1a000
   11368:	ldr	pc, [ip, #3260]!	; 0xcbc

0001136c <fflush@plt>:
   1136c:	add	ip, pc, #0, 12
   11370:	add	ip, ip, #106496	; 0x1a000
   11374:	ldr	pc, [ip, #3252]!	; 0xcb4

00011378 <unlinkat@plt>:
   11378:	add	ip, pc, #0, 12
   1137c:	add	ip, ip, #106496	; 0x1a000
   11380:	ldr	pc, [ip, #3244]!	; 0xcac

00011384 <memmove@plt>:
   11384:	add	ip, pc, #0, 12
   11388:	add	ip, ip, #106496	; 0x1a000
   1138c:	ldr	pc, [ip, #3236]!	; 0xca4

00011390 <free@plt>:
   11390:	add	ip, pc, #0, 12
   11394:	add	ip, ip, #106496	; 0x1a000
   11398:	ldr	pc, [ip, #3228]!	; 0xc9c

0001139c <faccessat@plt>:
   1139c:	add	ip, pc, #0, 12
   113a0:	add	ip, ip, #106496	; 0x1a000
   113a4:	ldr	pc, [ip, #3220]!	; 0xc94

000113a8 <clock_gettime@plt>:
   113a8:	add	ip, pc, #0, 12
   113ac:	add	ip, ip, #106496	; 0x1a000
   113b0:	ldr	pc, [ip, #3212]!	; 0xc8c

000113b4 <_exit@plt>:
   113b4:	add	ip, pc, #0, 12
   113b8:	add	ip, ip, #106496	; 0x1a000
   113bc:	ldr	pc, [ip, #3204]!	; 0xc84

000113c0 <memcpy@plt>:
   113c0:	add	ip, pc, #0, 12
   113c4:	add	ip, ip, #106496	; 0x1a000
   113c8:	ldr	pc, [ip, #3196]!	; 0xc7c

000113cc <mbsinit@plt>:
   113cc:	add	ip, pc, #0, 12
   113d0:	add	ip, ip, #106496	; 0x1a000
   113d4:	ldr	pc, [ip, #3188]!	; 0xc74

000113d8 <memcmp@plt>:
   113d8:	add	ip, pc, #0, 12
   113dc:	add	ip, ip, #106496	; 0x1a000
   113e0:	ldr	pc, [ip, #3180]!	; 0xc6c

000113e4 <dcgettext@plt>:
   113e4:	add	ip, pc, #0, 12
   113e8:	add	ip, ip, #106496	; 0x1a000
   113ec:	ldr	pc, [ip, #3172]!	; 0xc64

000113f0 <realloc@plt>:
   113f0:	add	ip, pc, #0, 12
   113f4:	add	ip, ip, #106496	; 0x1a000
   113f8:	ldr	pc, [ip, #3164]!	; 0xc5c

000113fc <textdomain@plt>:
   113fc:	add	ip, pc, #0, 12
   11400:	add	ip, ip, #106496	; 0x1a000
   11404:	ldr	pc, [ip, #3156]!	; 0xc54

00011408 <rawmemchr@plt>:
   11408:	add	ip, pc, #0, 12
   1140c:	add	ip, ip, #106496	; 0x1a000
   11410:	ldr	pc, [ip, #3148]!	; 0xc4c

00011414 <__fxstatat64@plt>:
   11414:	add	ip, pc, #0, 12
   11418:	add	ip, ip, #106496	; 0x1a000
   1141c:	ldr	pc, [ip, #3140]!	; 0xc44

00011420 <iswprint@plt>:
   11420:	add	ip, pc, #0, 12
   11424:	add	ip, ip, #106496	; 0x1a000
   11428:	ldr	pc, [ip, #3132]!	; 0xc3c

0001142c <readlink@plt>:
   1142c:	add	ip, pc, #0, 12
   11430:	add	ip, ip, #106496	; 0x1a000
   11434:	ldr	pc, [ip, #3124]!	; 0xc34

00011438 <fwrite@plt>:
   11438:	add	ip, pc, #0, 12
   1143c:	add	ip, ip, #106496	; 0x1a000
   11440:	ldr	pc, [ip, #3116]!	; 0xc2c

00011444 <lseek64@plt>:
   11444:	add	ip, pc, #0, 12
   11448:	add	ip, ip, #106496	; 0x1a000
   1144c:	ldr	pc, [ip, #3108]!	; 0xc24

00011450 <__ctype_get_mb_cur_max@plt>:
   11450:	add	ip, pc, #0, 12
   11454:	add	ip, ip, #106496	; 0x1a000
   11458:	ldr	pc, [ip, #3100]!	; 0xc1c

0001145c <strcpy@plt>:
   1145c:	add	ip, pc, #0, 12
   11460:	add	ip, ip, #106496	; 0x1a000
   11464:	ldr	pc, [ip, #3092]!	; 0xc14

00011468 <__fpending@plt>:
   11468:	add	ip, pc, #0, 12
   1146c:	add	ip, ip, #106496	; 0x1a000
   11470:	ldr	pc, [ip, #3084]!	; 0xc0c

00011474 <mbrtowc@plt>:
   11474:	add	ip, pc, #0, 12
   11478:	add	ip, ip, #106496	; 0x1a000
   1147c:	ldr	pc, [ip, #3076]!	; 0xc04

00011480 <error@plt>:
   11480:	add	ip, pc, #0, 12
   11484:	add	ip, ip, #106496	; 0x1a000
   11488:	ldr	pc, [ip, #3068]!	; 0xbfc

0001148c <open64@plt>:
   1148c:	add	ip, pc, #0, 12
   11490:	add	ip, ip, #106496	; 0x1a000
   11494:	ldr	pc, [ip, #3060]!	; 0xbf4

00011498 <getenv@plt>:
   11498:	add	ip, pc, #0, 12
   1149c:	add	ip, ip, #106496	; 0x1a000
   114a0:	ldr	pc, [ip, #3052]!	; 0xbec

000114a4 <malloc@plt>:
   114a4:	add	ip, pc, #0, 12
   114a8:	add	ip, ip, #106496	; 0x1a000
   114ac:	ldr	pc, [ip, #3044]!	; 0xbe4

000114b0 <__libc_start_main@plt>:
   114b0:	add	ip, pc, #0, 12
   114b4:	add	ip, ip, #106496	; 0x1a000
   114b8:	ldr	pc, [ip, #3036]!	; 0xbdc

000114bc <__freading@plt>:
   114bc:	add	ip, pc, #0, 12
   114c0:	add	ip, ip, #106496	; 0x1a000
   114c4:	ldr	pc, [ip, #3028]!	; 0xbd4

000114c8 <__gmon_start__@plt>:
   114c8:	add	ip, pc, #0, 12
   114cc:	add	ip, ip, #106496	; 0x1a000
   114d0:	ldr	pc, [ip, #3020]!	; 0xbcc

000114d4 <getopt_long@plt>:
   114d4:	add	ip, pc, #0, 12
   114d8:	add	ip, ip, #106496	; 0x1a000
   114dc:	ldr	pc, [ip, #3012]!	; 0xbc4

000114e0 <__ctype_b_loc@plt>:
   114e0:	add	ip, pc, #0, 12
   114e4:	add	ip, ip, #106496	; 0x1a000
   114e8:	ldr	pc, [ip, #3004]!	; 0xbbc

000114ec <getcwd@plt>:
   114ec:	add	ip, pc, #0, 12
   114f0:	add	ip, ip, #106496	; 0x1a000
   114f4:	ldr	pc, [ip, #2996]!	; 0xbb4

000114f8 <exit@plt>:
   114f8:	add	ip, pc, #0, 12
   114fc:	add	ip, ip, #106496	; 0x1a000
   11500:	ldr	pc, [ip, #2988]!	; 0xbac

00011504 <strlen@plt>:
   11504:	add	ip, pc, #0, 12
   11508:	add	ip, ip, #106496	; 0x1a000
   1150c:	ldr	pc, [ip, #2980]!	; 0xba4

00011510 <openat64@plt>:
   11510:	add	ip, pc, #0, 12
   11514:	add	ip, ip, #106496	; 0x1a000
   11518:	ldr	pc, [ip, #2972]!	; 0xb9c

0001151c <__errno_location@plt>:
   1151c:	add	ip, pc, #0, 12
   11520:	add	ip, ip, #106496	; 0x1a000
   11524:	ldr	pc, [ip, #2964]!	; 0xb94

00011528 <__cxa_atexit@plt>:
   11528:	add	ip, pc, #0, 12
   1152c:	add	ip, ip, #106496	; 0x1a000
   11530:	ldr	pc, [ip, #2956]!	; 0xb8c

00011534 <mkdir@plt>:
   11534:	add	ip, pc, #0, 12
   11538:	add	ip, ip, #106496	; 0x1a000
   1153c:	ldr	pc, [ip, #2948]!	; 0xb84

00011540 <memset@plt>:
   11540:	add	ip, pc, #0, 12
   11544:	add	ip, ip, #106496	; 0x1a000
   11548:	ldr	pc, [ip, #2940]!	; 0xb7c

0001154c <fpathconf@plt>:
   1154c:	add	ip, pc, #0, 12
   11550:	add	ip, ip, #106496	; 0x1a000
   11554:	ldr	pc, [ip, #2932]!	; 0xb74

00011558 <renameat2@plt>:
   11558:	add	ip, pc, #0, 12
   1155c:	add	ip, ip, #106496	; 0x1a000
   11560:	ldr	pc, [ip, #2924]!	; 0xb6c

00011564 <__printf_chk@plt>:
   11564:	add	ip, pc, #0, 12
   11568:	add	ip, ip, #106496	; 0x1a000
   1156c:	ldr	pc, [ip, #2916]!	; 0xb64

00011570 <fileno@plt>:
   11570:	add	ip, pc, #0, 12
   11574:	add	ip, ip, #106496	; 0x1a000
   11578:	ldr	pc, [ip, #2908]!	; 0xb5c

0001157c <__fprintf_chk@plt>:
   1157c:	add	ip, pc, #0, 12
   11580:	add	ip, ip, #106496	; 0x1a000
   11584:	ldr	pc, [ip, #2900]!	; 0xb54

00011588 <fclose@plt>:
   11588:	add	ip, pc, #0, 12
   1158c:	add	ip, ip, #106496	; 0x1a000
   11590:	ldr	pc, [ip, #2892]!	; 0xb4c

00011594 <linkat@plt>:
   11594:	add	ip, pc, #0, 12
   11598:	add	ip, ip, #106496	; 0x1a000
   1159c:	ldr	pc, [ip, #2884]!	; 0xb44

000115a0 <fseeko64@plt>:
   115a0:	add	ip, pc, #0, 12
   115a4:	add	ip, ip, #106496	; 0x1a000
   115a8:	ldr	pc, [ip, #2876]!	; 0xb3c

000115ac <fcntl64@plt>:
   115ac:	add	ip, pc, #0, 12
   115b0:	add	ip, ip, #106496	; 0x1a000
   115b4:	ldr	pc, [ip, #2868]!	; 0xb34

000115b8 <rpmatch@plt>:
   115b8:	add	ip, pc, #0, 12
   115bc:	add	ip, ip, #106496	; 0x1a000
   115c0:	ldr	pc, [ip, #2860]!	; 0xb2c

000115c4 <__overflow@plt>:
   115c4:	add	ip, pc, #0, 12
   115c8:	add	ip, ip, #106496	; 0x1a000
   115cc:	ldr	pc, [ip, #2852]!	; 0xb24

000115d0 <setlocale@plt>:
   115d0:	add	ip, pc, #0, 12
   115d4:	add	ip, ip, #106496	; 0x1a000
   115d8:	ldr	pc, [ip, #2844]!	; 0xb1c

000115dc <strrchr@plt>:
   115dc:	add	ip, pc, #0, 12
   115e0:	add	ip, ip, #106496	; 0x1a000
   115e4:	ldr	pc, [ip, #2836]!	; 0xb14

000115e8 <nl_langinfo@plt>:
   115e8:	add	ip, pc, #0, 12
   115ec:	add	ip, ip, #106496	; 0x1a000
   115f0:	ldr	pc, [ip, #2828]!	; 0xb0c

000115f4 <readdir64@plt>:
   115f4:	add	ip, pc, #0, 12
   115f8:	add	ip, ip, #106496	; 0x1a000
   115fc:	ldr	pc, [ip, #2820]!	; 0xb04

00011600 <fdopendir@plt>:
   11600:	add	ip, pc, #0, 12
   11604:	add	ip, ip, #106496	; 0x1a000
   11608:	ldr	pc, [ip, #2812]!	; 0xafc

0001160c <renameat@plt>:
   1160c:	add	ip, pc, #0, 12
   11610:	add	ip, ip, #106496	; 0x1a000
   11614:	ldr	pc, [ip, #2804]!	; 0xaf4

00011618 <bindtextdomain@plt>:
   11618:	add	ip, pc, #0, 12
   1161c:	add	ip, ip, #106496	; 0x1a000
   11620:	ldr	pc, [ip, #2796]!	; 0xaec

00011624 <getrandom@plt>:
   11624:	add	ip, pc, #0, 12
   11628:	add	ip, ip, #106496	; 0x1a000
   1162c:	ldr	pc, [ip, #2788]!	; 0xae4

00011630 <symlinkat@plt>:
   11630:	add	ip, pc, #0, 12
   11634:	add	ip, ip, #106496	; 0x1a000
   11638:	ldr	pc, [ip, #2780]!	; 0xadc

0001163c <__xstat64@plt>:
   1163c:	add	ip, pc, #0, 12
   11640:	add	ip, ip, #106496	; 0x1a000
   11644:	ldr	pc, [ip, #2772]!	; 0xad4

00011648 <strncmp@plt>:
   11648:	add	ip, pc, #0, 12
   1164c:	add	ip, ip, #106496	; 0x1a000
   11650:	ldr	pc, [ip, #2764]!	; 0xacc

00011654 <abort@plt>:
   11654:	add	ip, pc, #0, 12
   11658:	add	ip, ip, #106496	; 0x1a000
   1165c:	ldr	pc, [ip, #2756]!	; 0xac4

00011660 <close@plt>:
   11660:	add	ip, pc, #0, 12
   11664:	add	ip, ip, #106496	; 0x1a000
   11668:	ldr	pc, [ip, #2748]!	; 0xabc

0001166c <__lxstat64@plt>:
   1166c:	add	ip, pc, #0, 12
   11670:	add	ip, ip, #106496	; 0x1a000
   11674:	ldr	pc, [ip, #2740]!	; 0xab4

00011678 <closedir@plt>:
   11678:	add	ip, pc, #0, 12
   1167c:	add	ip, ip, #106496	; 0x1a000
   11680:	ldr	pc, [ip, #2732]!	; 0xaac

00011684 <strspn@plt>:
   11684:	add	ip, pc, #0, 12
   11688:	add	ip, ip, #106496	; 0x1a000
   1168c:	ldr	pc, [ip, #2724]!	; 0xaa4

00011690 <__mempcpy_chk@plt>:
   11690:	add	ip, pc, #0, 12
   11694:	add	ip, ip, #106496	; 0x1a000
   11698:	ldr	pc, [ip, #2716]!	; 0xa9c

Disassembly of section .text:

000116a0 <.text>:
   116a0:	mov	fp, #0
   116a4:	mov	lr, #0
   116a8:	pop	{r1}		; (ldr r1, [sp], #4)
   116ac:	mov	r2, sp
   116b0:	push	{r2}		; (str r2, [sp, #-4]!)
   116b4:	push	{r0}		; (str r0, [sp, #-4]!)
   116b8:	ldr	ip, [pc, #16]	; 116d0 <__mempcpy_chk@plt+0x40>
   116bc:	push	{ip}		; (str ip, [sp, #-4]!)
   116c0:	ldr	r0, [pc, #12]	; 116d4 <__mempcpy_chk@plt+0x44>
   116c4:	ldr	r3, [pc, #12]	; 116d8 <__mempcpy_chk@plt+0x48>
   116c8:	bl	114b0 <__libc_start_main@plt>
   116cc:	bl	11654 <abort@plt>
   116d0:			; <UNDEFINED> instruction: 0x00019eb0
   116d4:			; <UNDEFINED> instruction: 0x00011ab0
   116d8:	andeq	r9, r1, r0, asr lr
   116dc:	ldr	r3, [pc, #20]	; 116f8 <__mempcpy_chk@plt+0x68>
   116e0:	ldr	r2, [pc, #20]	; 116fc <__mempcpy_chk@plt+0x6c>
   116e4:	add	r3, pc, r3
   116e8:	ldr	r2, [r3, r2]
   116ec:	cmp	r2, #0
   116f0:	bxeq	lr
   116f4:	b	114c8 <__gmon_start__@plt>
   116f8:	andeq	sl, r1, r4, lsl r9
   116fc:	andeq	r0, r0, r8, lsr r1
   11700:	ldr	r0, [pc, #24]	; 11720 <__mempcpy_chk@plt+0x90>
   11704:	ldr	r3, [pc, #24]	; 11724 <__mempcpy_chk@plt+0x94>
   11708:	cmp	r3, r0
   1170c:	bxeq	lr
   11710:	ldr	r3, [pc, #16]	; 11728 <__mempcpy_chk@plt+0x98>
   11714:	cmp	r3, #0
   11718:	bxeq	lr
   1171c:	bx	r3
   11720:	muleq	r2, r4, r1
   11724:	muleq	r2, r4, r1
   11728:	andeq	r0, r0, r0
   1172c:	ldr	r0, [pc, #36]	; 11758 <__mempcpy_chk@plt+0xc8>
   11730:	ldr	r1, [pc, #36]	; 1175c <__mempcpy_chk@plt+0xcc>
   11734:	sub	r1, r1, r0
   11738:	asr	r1, r1, #2
   1173c:	add	r1, r1, r1, lsr #31
   11740:	asrs	r1, r1, #1
   11744:	bxeq	lr
   11748:	ldr	r3, [pc, #16]	; 11760 <__mempcpy_chk@plt+0xd0>
   1174c:	cmp	r3, #0
   11750:	bxeq	lr
   11754:	bx	r3
   11758:	muleq	r2, r4, r1
   1175c:	muleq	r2, r4, r1
   11760:	andeq	r0, r0, r0
   11764:	push	{r4, lr}
   11768:	ldr	r4, [pc, #24]	; 11788 <__mempcpy_chk@plt+0xf8>
   1176c:	ldrb	r3, [r4]
   11770:	cmp	r3, #0
   11774:	popne	{r4, pc}
   11778:	bl	11700 <__mempcpy_chk@plt+0x70>
   1177c:	mov	r3, #1
   11780:	strb	r3, [r4]
   11784:	pop	{r4, pc}
   11788:			; <UNDEFINED> instruction: 0x0002c1bc
   1178c:	b	1172c <__mempcpy_chk@plt+0x9c>
   11790:	push	{fp, lr}
   11794:	mov	fp, sp
   11798:	sub	sp, sp, #64	; 0x40
   1179c:	mov	r4, r0
   117a0:	cmp	r0, #0
   117a4:	bne	11a6c <__mempcpy_chk@plt+0x3dc>
   117a8:	movw	r1, #40707	; 0x9f03
   117ac:	mov	r0, #0
   117b0:	mov	r2, #5
   117b4:	movt	r1, #1
   117b8:	bl	113e4 <dcgettext@plt>
   117bc:	mov	r1, r0
   117c0:	movw	r0, #49632	; 0xc1e0
   117c4:	movt	r0, #2
   117c8:	ldr	r2, [r0]
   117cc:	mov	r0, #1
   117d0:	mov	r3, r2
   117d4:	str	r2, [sp]
   117d8:	str	r2, [sp, #4]
   117dc:	bl	11564 <__printf_chk@plt>
   117e0:	movw	r1, #40868	; 0x9fa4
   117e4:	mov	r0, #0
   117e8:	mov	r2, #5
   117ec:	movt	r1, #1
   117f0:	bl	113e4 <dcgettext@plt>
   117f4:	movw	r7, #49588	; 0xc1b4
   117f8:	movt	r7, #2
   117fc:	ldr	r1, [r7]
   11800:	bl	11324 <fputs_unlocked@plt>
   11804:	movw	r1, #43261	; 0xa8fd
   11808:	mov	r0, #0
   1180c:	mov	r2, #5
   11810:	movt	r1, #1
   11814:	bl	113e4 <dcgettext@plt>
   11818:	ldr	r1, [r7]
   1181c:	bl	11324 <fputs_unlocked@plt>
   11820:	movw	r1, #41384	; 0xa1a8
   11824:	mov	r0, #0
   11828:	mov	r2, #5
   1182c:	movt	r1, #1
   11830:	bl	113e4 <dcgettext@plt>
   11834:	ldr	r1, [r7]
   11838:	bl	11324 <fputs_unlocked@plt>
   1183c:	movw	r1, #41831	; 0xa367
   11840:	mov	r0, #0
   11844:	mov	r2, #5
   11848:	movt	r1, #1
   1184c:	bl	113e4 <dcgettext@plt>
   11850:	ldr	r1, [r7]
   11854:	bl	11324 <fputs_unlocked@plt>
   11858:	movw	r1, #42332	; 0xa55c
   1185c:	mov	r0, #0
   11860:	mov	r2, #5
   11864:	movt	r1, #1
   11868:	bl	113e4 <dcgettext@plt>
   1186c:	ldr	r1, [r7]
   11870:	bl	11324 <fputs_unlocked@plt>
   11874:	movw	r1, #42646	; 0xa696
   11878:	mov	r0, #0
   1187c:	mov	r2, #5
   11880:	movt	r1, #1
   11884:	bl	113e4 <dcgettext@plt>
   11888:	ldr	r1, [r7]
   1188c:	bl	11324 <fputs_unlocked@plt>
   11890:	movw	r1, #42691	; 0xa6c3
   11894:	mov	r0, #0
   11898:	mov	r2, #5
   1189c:	movt	r1, #1
   118a0:	bl	113e4 <dcgettext@plt>
   118a4:	ldr	r1, [r7]
   118a8:	bl	11324 <fputs_unlocked@plt>
   118ac:	movw	r1, #43336	; 0xa948
   118b0:	mov	r0, #0
   118b4:	mov	r2, #5
   118b8:	movt	r1, #1
   118bc:	bl	113e4 <dcgettext@plt>
   118c0:	ldr	r1, [r7]
   118c4:	bl	11324 <fputs_unlocked@plt>
   118c8:	movw	r1, #43557	; 0xaa25
   118cc:	mov	r0, #0
   118d0:	mov	r2, #5
   118d4:	movt	r1, #1
   118d8:	bl	113e4 <dcgettext@plt>
   118dc:	ldr	r1, [r7]
   118e0:	bl	11324 <fputs_unlocked@plt>
   118e4:	movw	r1, #42745	; 0xa6f9
   118e8:	mov	r0, #0
   118ec:	mov	r2, #5
   118f0:	movt	r1, #1
   118f4:	bl	113e4 <dcgettext@plt>
   118f8:	movw	r2, #42883	; 0xa783
   118fc:	mov	r1, r0
   11900:	mov	r0, #1
   11904:	movt	r2, #1
   11908:	bl	11564 <__printf_chk@plt>
   1190c:	movw	r0, #44832	; 0xaf20
   11910:	mov	r2, #48	; 0x30
   11914:	add	r6, sp, #8
   11918:	movw	r5, #42886	; 0xa786
   1191c:	movt	r0, #1
   11920:	movt	r5, #1
   11924:	add	r1, r0, #32
   11928:	add	r3, r0, #16
   1192c:	vld1.64	{d18-d19}, [r0], r2
   11930:	vld1.64	{d16-d17}, [r1]
   11934:	vld1.64	{d20-d21}, [r3]
   11938:	add	r1, r6, #32
   1193c:	vldr	d22, [r0]
   11940:	add	r0, r6, #16
   11944:	vst1.64	{d16-d17}, [r1]
   11948:	movw	r1, #43779	; 0xab03
   1194c:	vst1.64	{d20-d21}, [r0]
   11950:	mov	r0, r6
   11954:	vst1.64	{d18-d19}, [r0], r2
   11958:	movt	r1, #1
   1195c:	vstr	d22, [r0]
   11960:	mov	r0, r5
   11964:	bl	11348 <strcmp@plt>
   11968:	cmp	r0, #0
   1196c:	ldrne	r1, [r6, #8]!
   11970:	cmpne	r1, #0
   11974:	bne	11960 <__mempcpy_chk@plt+0x2d0>
   11978:	ldr	r6, [r6, #4]
   1197c:	movw	r1, #43874	; 0xab62
   11980:	mov	r0, #0
   11984:	mov	r2, #5
   11988:	movt	r1, #1
   1198c:	bl	113e4 <dcgettext@plt>
   11990:	movw	r2, #43017	; 0xa809
   11994:	movw	r3, #43897	; 0xab79
   11998:	mov	r1, r0
   1199c:	mov	r0, #1
   119a0:	movt	r2, #1
   119a4:	movt	r3, #1
   119a8:	bl	11564 <__printf_chk@plt>
   119ac:	cmp	r6, #0
   119b0:	mov	r0, #5
   119b4:	mov	r1, #0
   119b8:	moveq	r6, r5
   119bc:	bl	115d0 <setlocale@plt>
   119c0:	cmp	r0, #0
   119c4:	beq	119fc <__mempcpy_chk@plt+0x36c>
   119c8:	movw	r1, #43937	; 0xaba1
   119cc:	mov	r2, #3
   119d0:	movt	r1, #1
   119d4:	bl	11648 <strncmp@plt>
   119d8:	cmp	r0, #0
   119dc:	beq	119fc <__mempcpy_chk@plt+0x36c>
   119e0:	movw	r1, #43941	; 0xaba5
   119e4:	mov	r0, #0
   119e8:	mov	r2, #5
   119ec:	movt	r1, #1
   119f0:	bl	113e4 <dcgettext@plt>
   119f4:	ldr	r1, [r7]
   119f8:	bl	11324 <fputs_unlocked@plt>
   119fc:	movw	r1, #44012	; 0xabec
   11a00:	mov	r0, #0
   11a04:	mov	r2, #5
   11a08:	movt	r1, #1
   11a0c:	bl	113e4 <dcgettext@plt>
   11a10:	movw	r2, #43897	; 0xab79
   11a14:	mov	r1, r0
   11a18:	mov	r0, #1
   11a1c:	mov	r3, r5
   11a20:	movt	r2, #1
   11a24:	bl	11564 <__printf_chk@plt>
   11a28:	movw	r1, #44039	; 0xac07
   11a2c:	mov	r0, #0
   11a30:	mov	r2, #5
   11a34:	movt	r1, #1
   11a38:	bl	113e4 <dcgettext@plt>
   11a3c:	movw	r3, #43556	; 0xaa24
   11a40:	mov	r1, r0
   11a44:	movw	r0, #43807	; 0xab1f
   11a48:	cmp	r6, r5
   11a4c:	mov	r2, r6
   11a50:	movt	r0, #1
   11a54:	movt	r3, #1
   11a58:	moveq	r3, r0
   11a5c:	mov	r0, #1
   11a60:	bl	11564 <__printf_chk@plt>
   11a64:	mov	r0, r4
   11a68:	bl	114f8 <exit@plt>
   11a6c:	movw	r0, #49576	; 0xc1a8
   11a70:	movw	r1, #40668	; 0x9edc
   11a74:	mov	r2, #5
   11a78:	movt	r0, #2
   11a7c:	movt	r1, #1
   11a80:	ldr	r5, [r0]
   11a84:	mov	r0, #0
   11a88:	bl	113e4 <dcgettext@plt>
   11a8c:	mov	r2, r0
   11a90:	movw	r0, #49632	; 0xc1e0
   11a94:	mov	r1, #1
   11a98:	movt	r0, #2
   11a9c:	ldr	r3, [r0]
   11aa0:	mov	r0, r5
   11aa4:	bl	1157c <__fprintf_chk@plt>
   11aa8:	mov	r0, r4
   11aac:	bl	114f8 <exit@plt>
   11ab0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11ab4:	add	fp, sp, #28
   11ab8:	sub	sp, sp, #140	; 0x8c
   11abc:	mov	r7, r0
   11ac0:	ldr	r0, [r1]
   11ac4:	mov	r6, r1
   11ac8:	bl	15e28 <__mempcpy_chk@plt+0x4798>
   11acc:	movw	r1, #43556	; 0xaa24
   11ad0:	mov	r0, #6
   11ad4:	movt	r1, #1
   11ad8:	bl	115d0 <setlocale@plt>
   11adc:	movw	r4, #43021	; 0xa80d
   11ae0:	movw	r1, #42889	; 0xa789
   11ae4:	movt	r4, #1
   11ae8:	movt	r1, #1
   11aec:	mov	r0, r4
   11af0:	bl	11618 <bindtextdomain@plt>
   11af4:	mov	r0, r4
   11af8:	bl	113fc <textdomain@plt>
   11afc:	movw	r0, #17220	; 0x4344
   11b00:	movt	r0, #1
   11b04:	bl	19eb4 <__mempcpy_chk@plt+0x8824>
   11b08:	movw	r0, #49600	; 0xc1c0
   11b0c:	mov	r8, #0
   11b10:	mov	r1, #0
   11b14:	movw	r4, #42913	; 0xa7a1
   11b18:	movw	r5, #44576	; 0xae20
   11b1c:	mov	r9, #1
   11b20:	movt	r0, #2
   11b24:	str	r1, [sp, #20]
   11b28:	mov	r1, #0
   11b2c:	movt	r4, #1
   11b30:	movt	r5, #1
   11b34:	strb	r8, [r0]
   11b38:	movw	r0, #49601	; 0xc1c1
   11b3c:	str	r1, [sp, #16]
   11b40:	mov	r1, #0
   11b44:	movt	r0, #2
   11b48:	str	r1, [sp, #28]
   11b4c:	strb	r8, [r0]
   11b50:	movw	r0, #49602	; 0xc1c2
   11b54:	movt	r0, #2
   11b58:	strb	r8, [r0]
   11b5c:	movw	r0, #49603	; 0xc1c3
   11b60:	movt	r0, #2
   11b64:	strb	r8, [r0]
   11b68:	movw	r0, #49604	; 0xc1c4
   11b6c:	movt	r0, #2
   11b70:	strb	r8, [r0]
   11b74:	mov	r0, #0
   11b78:	str	r0, [sp, #24]
   11b7c:	mov	r0, #0
   11b80:	b	11b8c <__mempcpy_chk@plt+0x4fc>
   11b84:	strb	r9, [r0]
   11b88:	mov	r0, sl
   11b8c:	mov	sl, r0
   11b90:	mov	r0, r7
   11b94:	mov	r1, r6
   11b98:	mov	r2, r4
   11b9c:	mov	r3, r5
   11ba0:	str	r8, [sp]
   11ba4:	bl	114d4 <getopt_long@plt>
   11ba8:	add	r1, r0, #3
   11bac:	cmp	r1, #121	; 0x79
   11bb0:	bhi	12398 <__mempcpy_chk@plt+0xd08>
   11bb4:	add	r2, pc, #4
   11bb8:	mov	r0, #1
   11bbc:	ldr	pc, [r2, r1, lsl #2]
   11bc0:	strdeq	r2, [r1], -r0
   11bc4:	andeq	r2, r1, r4, asr #4
   11bc8:	andeq	r1, r1, r8, asr #29
   11bcc:	muleq	r1, r8, r3
   11bd0:	muleq	r1, r8, r3
   11bd4:	muleq	r1, r8, r3
   11bd8:	muleq	r1, r8, r3
   11bdc:	muleq	r1, r8, r3
   11be0:	muleq	r1, r8, r3
   11be4:	muleq	r1, r8, r3
   11be8:	muleq	r1, r8, r3
   11bec:	muleq	r1, r8, r3
   11bf0:	muleq	r1, r8, r3
   11bf4:	muleq	r1, r8, r3
   11bf8:	muleq	r1, r8, r3
   11bfc:	muleq	r1, r8, r3
   11c00:	muleq	r1, r8, r3
   11c04:	muleq	r1, r8, r3
   11c08:	muleq	r1, r8, r3
   11c0c:	muleq	r1, r8, r3
   11c10:	muleq	r1, r8, r3
   11c14:	muleq	r1, r8, r3
   11c18:	muleq	r1, r8, r3
   11c1c:	muleq	r1, r8, r3
   11c20:	muleq	r1, r8, r3
   11c24:	muleq	r1, r8, r3
   11c28:	muleq	r1, r8, r3
   11c2c:	muleq	r1, r8, r3
   11c30:	muleq	r1, r8, r3
   11c34:	muleq	r1, r8, r3
   11c38:	muleq	r1, r8, r3
   11c3c:	muleq	r1, r8, r3
   11c40:	muleq	r1, r8, r3
   11c44:	muleq	r1, r8, r3
   11c48:	muleq	r1, r8, r3
   11c4c:	muleq	r1, r8, r3
   11c50:	muleq	r1, r8, r3
   11c54:	muleq	r1, r8, r3
   11c58:	muleq	r1, r8, r3
   11c5c:	muleq	r1, r8, r3
   11c60:	muleq	r1, r8, r3
   11c64:	muleq	r1, r8, r3
   11c68:	muleq	r1, r8, r3
   11c6c:	muleq	r1, r8, r3
   11c70:	muleq	r1, r8, r3
   11c74:	muleq	r1, r8, r3
   11c78:	muleq	r1, r8, r3
   11c7c:	muleq	r1, r8, r3
   11c80:	muleq	r1, r8, r3
   11c84:	muleq	r1, r8, r3
   11c88:	muleq	r1, r8, r3
   11c8c:	muleq	r1, r8, r3
   11c90:	muleq	r1, r8, r3
   11c94:	muleq	r1, r8, r3
   11c98:	muleq	r1, r8, r3
   11c9c:	muleq	r1, r8, r3
   11ca0:	muleq	r1, r8, r3
   11ca4:	muleq	r1, r8, r3
   11ca8:	muleq	r1, r8, r3
   11cac:	muleq	r1, r8, r3
   11cb0:	muleq	r1, r8, r3
   11cb4:	muleq	r1, r8, r3
   11cb8:	muleq	r1, r8, r3
   11cbc:	muleq	r1, r8, r3
   11cc0:	muleq	r1, r8, r3
   11cc4:	muleq	r1, r8, r3
   11cc8:	muleq	r1, r8, r3
   11ccc:	muleq	r1, r8, r3
   11cd0:	muleq	r1, r8, r3
   11cd4:	muleq	r1, r8, r3
   11cd8:	muleq	r1, r8, r3
   11cdc:	muleq	r1, r8, r3
   11ce0:	muleq	r1, r8, r3
   11ce4:	andeq	r1, r1, r8, lsr #27
   11ce8:	muleq	r1, r8, r3
   11cec:	muleq	r1, r8, r3
   11cf0:	muleq	r1, r8, r3
   11cf4:	muleq	r1, r8, r3
   11cf8:	muleq	r1, r8, r3
   11cfc:	andeq	r1, r1, r8, lsr #28
   11d00:	muleq	r1, r8, r3
   11d04:	muleq	r1, r8, r3
   11d08:	muleq	r1, r8, r3
   11d0c:	andeq	r1, r1, ip, asr #27
   11d10:	muleq	r1, r8, r3
   11d14:	muleq	r1, r8, r3
   11d18:	andeq	r1, r1, r4, lsr lr
   11d1c:	andeq	r1, r1, ip, lsl #23
   11d20:	muleq	r1, r8, r3
   11d24:	muleq	r1, r8, r3
   11d28:	muleq	r1, r8, r3
   11d2c:	muleq	r1, r8, r3
   11d30:	muleq	r1, r8, r3
   11d34:	muleq	r1, r8, r3
   11d38:	muleq	r1, r8, r3
   11d3c:	muleq	r1, r8, r3
   11d40:	muleq	r1, r8, r3
   11d44:	muleq	r1, r8, r3
   11d48:	muleq	r1, r8, r3
   11d4c:	muleq	r1, r8, r3
   11d50:	muleq	r1, r8, r3
   11d54:	ldrdeq	r1, [r1], -r8
   11d58:	muleq	r1, r8, r3
   11d5c:	andeq	r1, r1, r8, lsr #27
   11d60:	muleq	r1, r8, r3
   11d64:	strdeq	r1, [r1], -r8
   11d68:	muleq	r1, r8, r3
   11d6c:	muleq	r1, r8, r3
   11d70:	andeq	r1, r1, r4, asr lr
   11d74:	muleq	r1, r8, r3
   11d78:	muleq	r1, r8, r3
   11d7c:	muleq	r1, r8, r3
   11d80:	muleq	r1, r8, r3
   11d84:	andeq	r1, r1, r0, lsl lr
   11d88:	muleq	r1, r8, r3
   11d8c:	muleq	r1, r8, r3
   11d90:	muleq	r1, r8, r3
   11d94:			; <UNDEFINED> instruction: 0x00011db4
   11d98:	andeq	r1, r1, ip, lsl lr
   11d9c:	andeq	r1, r1, r4, ror lr
   11da0:	muleq	r1, r8, r3
   11da4:	andeq	r1, r1, r0, asr #27
   11da8:	movw	r0, #49600	; 0xc1c0
   11dac:	movt	r0, #2
   11db0:	b	11b84 <__mempcpy_chk@plt+0x4f4>
   11db4:	movw	r0, #49607	; 0xc1c7
   11db8:	movt	r0, #2
   11dbc:	b	11b84 <__mempcpy_chk@plt+0x4f4>
   11dc0:	movw	r0, #49601	; 0xc1c1
   11dc4:	movt	r0, #2
   11dc8:	b	11b84 <__mempcpy_chk@plt+0x4f4>
   11dcc:	movw	r0, #49605	; 0xc1c5
   11dd0:	movt	r0, #2
   11dd4:	b	11e68 <__mempcpy_chk@plt+0x7d8>
   11dd8:	movw	r0, #49592	; 0xc1b8
   11ddc:	ldr	r1, [sp, #20]
   11de0:	movt	r0, #2
   11de4:	ldr	r0, [r0]
   11de8:	cmp	r0, #0
   11dec:	movne	r1, r0
   11df0:	str	r1, [sp, #20]
   11df4:	b	11e44 <__mempcpy_chk@plt+0x7b4>
   11df8:	movw	r0, #49602	; 0xc1c2
   11dfc:	movt	r0, #2
   11e00:	strb	r8, [r0]
   11e04:	movw	r0, #49603	; 0xc1c3
   11e08:	movt	r0, #2
   11e0c:	b	11b84 <__mempcpy_chk@plt+0x4f4>
   11e10:	movw	r0, #49606	; 0xc1c6
   11e14:	movt	r0, #2
   11e18:	b	11b84 <__mempcpy_chk@plt+0x4f4>
   11e1c:	movw	r0, #49604	; 0xc1c4
   11e20:	movt	r0, #2
   11e24:	b	11b84 <__mempcpy_chk@plt+0x4f4>
   11e28:	movw	r0, #49605	; 0xc1c5
   11e2c:	movt	r0, #2
   11e30:	b	11b84 <__mempcpy_chk@plt+0x4f4>
   11e34:	movw	r0, #49592	; 0xc1b8
   11e38:	movt	r0, #2
   11e3c:	ldr	r0, [r0]
   11e40:	str	r0, [sp, #16]
   11e44:	mov	r0, #1
   11e48:	str	r0, [sp, #28]
   11e4c:	mov	r0, sl
   11e50:	b	11b8c <__mempcpy_chk@plt+0x4fc>
   11e54:	movw	r0, #49602	; 0xc1c2
   11e58:	movt	r0, #2
   11e5c:	strb	r9, [r0]
   11e60:	movw	r0, #49603	; 0xc1c3
   11e64:	movt	r0, #2
   11e68:	strb	r8, [r0]
   11e6c:	mov	r0, sl
   11e70:	b	11b8c <__mempcpy_chk@plt+0x4fc>
   11e74:	ldr	r0, [sp, #24]
   11e78:	cmp	r0, #0
   11e7c:	bne	1224c <__mempcpy_chk@plt+0xbbc>
   11e80:	movw	r0, #49592	; 0xc1b8
   11e84:	add	r2, sp, #32
   11e88:	movt	r0, #2
   11e8c:	ldr	r1, [r0]
   11e90:	mov	r0, #3
   11e94:	bl	1163c <__xstat64@plt>
   11e98:	cmp	r0, #0
   11e9c:	bne	12258 <__mempcpy_chk@plt+0xbc8>
   11ea0:	ldr	r0, [sp, #48]	; 0x30
   11ea4:	and	r0, r0, #61440	; 0xf000
   11ea8:	cmp	r0, #16384	; 0x4000
   11eac:	bne	122a0 <__mempcpy_chk@plt+0xc10>
   11eb0:	movw	r0, #49592	; 0xc1b8
   11eb4:	movt	r0, #2
   11eb8:	ldr	r0, [r0]
   11ebc:	str	r0, [sp, #24]
   11ec0:	mov	r0, sl
   11ec4:	b	11b8c <__mempcpy_chk@plt+0x4fc>
   11ec8:	movw	r0, #49568	; 0xc1a0
   11ecc:	movt	r0, #2
   11ed0:	ldr	r1, [r0]
   11ed4:	sub	r5, r7, r1
   11ed8:	cmp	r5, #0
   11edc:	ble	122e0 <__mempcpy_chk@plt+0xc50>
   11ee0:	movw	r0, #49607	; 0xc1c7
   11ee4:	ldr	r7, [sp, #24]
   11ee8:	movt	r0, #2
   11eec:	ldrb	r0, [r0]
   11ef0:	cmp	r0, #1
   11ef4:	bne	11f0c <__mempcpy_chk@plt+0x87c>
   11ef8:	movw	r2, #49604	; 0xc1c4
   11efc:	movt	r2, #2
   11f00:	ldrb	r2, [r2]
   11f04:	cmp	r2, #0
   11f08:	beq	1230c <__mempcpy_chk@plt+0xc7c>
   11f0c:	add	r9, r6, r1, lsl #2
   11f10:	tst	sl, #1
   11f14:	beq	11f38 <__mempcpy_chk@plt+0x8a8>
   11f18:	cmp	r7, #0
   11f1c:	bne	12318 <__mempcpy_chk@plt+0xc88>
   11f20:	cmp	r5, #2
   11f24:	bne	1233c <__mempcpy_chk@plt+0xcac>
   11f28:	mvn	r8, #0
   11f2c:	mov	sl, #2
   11f30:	mov	r6, #0
   11f34:	b	1208c <__mempcpy_chk@plt+0x9fc>
   11f38:	cmp	r7, #0
   11f3c:	bne	11f64 <__mempcpy_chk@plt+0x8d4>
   11f40:	cmp	r5, #2
   11f44:	bge	11f64 <__mempcpy_chk@plt+0x8d4>
   11f48:	movw	r6, #44906	; 0xaf6a
   11f4c:	mvn	r0, #99	; 0x63
   11f50:	mvn	r8, #0
   11f54:	mov	sl, #1
   11f58:	str	r0, [sp, #12]
   11f5c:	movt	r6, #1
   11f60:	b	1208c <__mempcpy_chk@plt+0x9fc>
   11f64:	eor	r1, r5, #2
   11f68:	mvn	r8, #0
   11f6c:	orrs	r4, r7, r1
   11f70:	movwne	r4, #1
   11f74:	beq	11fd4 <__mempcpy_chk@plt+0x944>
   11f78:	cmp	r7, #0
   11f7c:	mov	r6, r7
   11f80:	mov	r2, #2113536	; 0x204000
   11f84:	mov	sl, r4
   11f88:	addeq	r0, r9, r5, lsl #2
   11f8c:	ldreq	r6, [r0, #-4]
   11f90:	movw	r0, #49606	; 0xc1c6
   11f94:	movt	r0, #2
   11f98:	ldrb	r0, [r0]
   11f9c:	mov	r1, r6
   11fa0:	cmp	r0, #0
   11fa4:	mvn	r0, #99	; 0x63
   11fa8:	movne	r2, #2146304	; 0x20c000
   11fac:	bl	15d88 <__mempcpy_chk@plt+0x46f8>
   11fb0:	mov	r4, r0
   11fb4:	bl	1151c <__errno_location@plt>
   11fb8:	cmp	r4, #0
   11fbc:	str	r4, [sp, #12]
   11fc0:	blt	12040 <__mempcpy_chk@plt+0x9b0>
   11fc4:	clz	r0, r7
   11fc8:	lsr	r0, r0, #5
   11fcc:	sub	sl, r5, r0
   11fd0:	b	1208c <__mempcpy_chk@plt+0x9fc>
   11fd4:	movw	r2, #49604	; 0xc1c4
   11fd8:	ldm	r9, {r1, r3}
   11fdc:	movt	r2, #2
   11fe0:	ldrb	r2, [r2]
   11fe4:	cmp	r2, #1
   11fe8:	bne	12054 <__mempcpy_chk@plt+0x9c4>
   11fec:	cmp	r0, #0
   11ff0:	bne	11f78 <__mempcpy_chk@plt+0x8e8>
   11ff4:	mov	r0, r1
   11ff8:	mvn	r1, #99	; 0x63
   11ffc:	mov	r2, r3
   12000:	bl	11630 <symlinkat@plt>
   12004:	cmp	r0, #0
   12008:	bge	12080 <__mempcpy_chk@plt+0x9f0>
   1200c:	bl	1151c <__errno_location@plt>
   12010:	ldr	r8, [r0]
   12014:	cmp	r8, #0
   12018:	blt	11f78 <__mempcpy_chk@plt+0x8e8>
   1201c:	mov	sl, #2
   12020:	mov	r6, #0
   12024:	cmp	r8, #22
   12028:	bhi	11f34 <__mempcpy_chk@plt+0x8a4>
   1202c:	mov	r0, #1
   12030:	mov	r1, #5373952	; 0x520000
   12034:	tst	r1, r0, lsl r8
   12038:	bne	11f78 <__mempcpy_chk@plt+0x8e8>
   1203c:	b	1208c <__mempcpy_chk@plt+0x9fc>
   12040:	cmp	sl, #0
   12044:	bne	123a0 <__mempcpy_chk@plt+0xd10>
   12048:	mov	sl, #2
   1204c:	mov	r6, #0
   12050:	b	1208c <__mempcpy_chk@plt+0x9fc>
   12054:	movw	r0, #49605	; 0xc1c5
   12058:	mvn	r2, #99	; 0x63
   1205c:	movt	r0, #2
   12060:	ldrb	r0, [r0]
   12064:	cmp	r0, #0
   12068:	movwne	r0, #1024	; 0x400
   1206c:	str	r0, [sp]
   12070:	mvn	r0, #99	; 0x63
   12074:	bl	11594 <linkat@plt>
   12078:	cmn	r0, #1
   1207c:	ble	1200c <__mempcpy_chk@plt+0x97c>
   12080:	mov	r6, #0
   12084:	mov	sl, #2
   12088:	mov	r8, #0
   1208c:	ldr	r1, [sp, #28]
   12090:	mov	r0, #0
   12094:	tst	r1, #1
   12098:	beq	120b8 <__mempcpy_chk@plt+0xa28>
   1209c:	movw	r1, #43249	; 0xa8f1
   120a0:	mov	r0, #0
   120a4:	mov	r2, #5
   120a8:	movt	r1, #1
   120ac:	bl	113e4 <dcgettext@plt>
   120b0:	ldr	r1, [sp, #20]
   120b4:	bl	13b20 <__mempcpy_chk@plt+0x2490>
   120b8:	movw	r5, #49608	; 0xc1c8
   120bc:	movt	r5, #2
   120c0:	str	r0, [r5]
   120c4:	ldr	r0, [sp, #16]
   120c8:	bl	133f0 <__mempcpy_chk@plt+0x1d60>
   120cc:	cmp	r6, #0
   120d0:	beq	12150 <__mempcpy_chk@plt+0xac0>
   120d4:	cmp	sl, #2
   120d8:	blt	1216c <__mempcpy_chk@plt+0xadc>
   120dc:	movw	r0, #49603	; 0xc1c3
   120e0:	movt	r0, #2
   120e4:	ldrb	r0, [r0]
   120e8:	cmp	r0, #1
   120ec:	bne	12178 <__mempcpy_chk@plt+0xae8>
   120f0:	ldr	r0, [r5]
   120f4:	cmp	r0, #3
   120f8:	beq	12178 <__mempcpy_chk@plt+0xae8>
   120fc:	movw	r0, #49604	; 0xc1c4
   12100:	movt	r0, #2
   12104:	ldrb	r0, [r0]
   12108:	cmp	r0, #0
   1210c:	bne	12178 <__mempcpy_chk@plt+0xae8>
   12110:	movw	r0, #23912	; 0x5d68
   12114:	movw	r2, #23768	; 0x5cd8
   12118:	movw	r3, #23688	; 0x5c88
   1211c:	mov	r1, #0
   12120:	movt	r0, #1
   12124:	movt	r2, #1
   12128:	movt	r3, #1
   1212c:	str	r0, [sp]
   12130:	mov	r0, #61	; 0x3d
   12134:	bl	14e40 <__mempcpy_chk@plt+0x37b0>
   12138:	movw	r1, #49612	; 0xc1cc
   1213c:	cmp	r0, #0
   12140:	movt	r1, #2
   12144:	str	r0, [r1]
   12148:	bne	12178 <__mempcpy_chk@plt+0xae8>
   1214c:	bl	190cc <__mempcpy_chk@plt+0x7a3c>
   12150:	ldm	r9, {r0, r2}
   12154:	mvn	r1, #99	; 0x63
   12158:	str	r8, [sp]
   1215c:	mov	r3, r2
   12160:	bl	123c8 <__mempcpy_chk@plt+0xd38>
   12164:	mov	r4, r0
   12168:	b	121e4 <__mempcpy_chk@plt+0xb54>
   1216c:	mov	r4, #1
   12170:	cmp	sl, #1
   12174:	bne	121e4 <__mempcpy_chk@plt+0xb54>
   12178:	ldr	r8, [sp, #12]
   1217c:	mov	r4, #1
   12180:	mov	r5, r6
   12184:	ldr	r0, [r9]
   12188:	bl	13bd0 <__mempcpy_chk@plt+0x2540>
   1218c:	mov	r1, r0
   12190:	mov	r0, r5
   12194:	add	r2, sp, #32
   12198:	bl	147b4 <__mempcpy_chk@plt+0x3124>
   1219c:	mov	r6, r0
   121a0:	ldr	r0, [sp, #32]
   121a4:	bl	1464c <__mempcpy_chk@plt+0x2fbc>
   121a8:	ldr	r0, [r9], #4
   121ac:	ldr	r2, [sp, #32]
   121b0:	mvn	r1, #0
   121b4:	mov	r3, r6
   121b8:	str	r1, [sp]
   121bc:	mov	r1, r8
   121c0:	bl	123c8 <__mempcpy_chk@plt+0xd38>
   121c4:	mov	r7, r0
   121c8:	mov	r0, r6
   121cc:	bl	148e8 <__mempcpy_chk@plt+0x3258>
   121d0:	and	r4, r4, r7
   121d4:	subs	sl, sl, #1
   121d8:	bne	12184 <__mempcpy_chk@plt+0xaf4>
   121dc:	cmp	r4, #0
   121e0:	movwne	r4, #1
   121e4:	eor	r0, r4, #1
   121e8:	sub	sp, fp, #28
   121ec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   121f0:	movw	r0, #49480	; 0xc148
   121f4:	movw	r2, #43043	; 0xa823
   121f8:	mov	r1, #0
   121fc:	movw	r7, #43031	; 0xa817
   12200:	movt	r0, #2
   12204:	movt	r2, #1
   12208:	str	r1, [sp, #8]
   1220c:	movw	r1, #42886	; 0xa786
   12210:	movt	r7, #1
   12214:	ldr	r3, [r0]
   12218:	movw	r0, #49588	; 0xc1b4
   1221c:	str	r2, [sp, #4]
   12220:	movw	r2, #43017	; 0xa809
   12224:	movt	r1, #1
   12228:	str	r7, [sp]
   1222c:	movt	r0, #2
   12230:	movt	r2, #1
   12234:	ldr	r0, [r0]
   12238:	bl	18938 <__mempcpy_chk@plt+0x72a8>
   1223c:	mov	r0, #0
   12240:	bl	114f8 <exit@plt>
   12244:	mov	r0, #0
   12248:	bl	11790 <__mempcpy_chk@plt+0x100>
   1224c:	movw	r1, #42930	; 0xa7b2
   12250:	movt	r1, #1
   12254:	b	12320 <__mempcpy_chk@plt+0xc90>
   12258:	bl	1151c <__errno_location@plt>
   1225c:	ldr	r4, [r0]
   12260:	movw	r1, #42968	; 0xa7d8
   12264:	mov	r0, #0
   12268:	mov	r2, #5
   1226c:	movt	r1, #1
   12270:	bl	113e4 <dcgettext@plt>
   12274:	mov	r5, r0
   12278:	movw	r0, #49592	; 0xc1b8
   1227c:	movt	r0, #2
   12280:	ldr	r1, [r0]
   12284:	mov	r0, #4
   12288:	bl	17534 <__mempcpy_chk@plt+0x5ea4>
   1228c:	mov	r3, r0
   12290:	mov	r0, #1
   12294:	mov	r1, r4
   12298:	mov	r2, r5
   1229c:	bl	11480 <error@plt>
   122a0:	movw	r1, #42988	; 0xa7ec
   122a4:	mov	r0, #0
   122a8:	mov	r2, #5
   122ac:	movt	r1, #1
   122b0:	bl	113e4 <dcgettext@plt>
   122b4:	mov	r4, r0
   122b8:	movw	r0, #49592	; 0xc1b8
   122bc:	movt	r0, #2
   122c0:	ldr	r1, [r0]
   122c4:	mov	r0, #4
   122c8:	bl	17534 <__mempcpy_chk@plt+0x5ea4>
   122cc:	mov	r3, r0
   122d0:	mov	r0, #1
   122d4:	mov	r1, #0
   122d8:	mov	r2, r4
   122dc:	bl	11480 <error@plt>
   122e0:	movw	r1, #43059	; 0xa833
   122e4:	mov	r0, #0
   122e8:	mov	r2, #5
   122ec:	movt	r1, #1
   122f0:	bl	113e4 <dcgettext@plt>
   122f4:	mov	r2, r0
   122f8:	mov	r0, #0
   122fc:	mov	r1, #0
   12300:	bl	11480 <error@plt>
   12304:	mov	r0, #1
   12308:	bl	11790 <__mempcpy_chk@plt+0x100>
   1230c:	movw	r1, #43080	; 0xa848
   12310:	movt	r1, #1
   12314:	b	12320 <__mempcpy_chk@plt+0xc90>
   12318:	movw	r1, #43120	; 0xa870
   1231c:	movt	r1, #1
   12320:	mov	r0, #0
   12324:	mov	r2, #5
   12328:	bl	113e4 <dcgettext@plt>
   1232c:	mov	r2, r0
   12330:	mov	r0, #1
   12334:	mov	r1, #0
   12338:	bl	11480 <error@plt>
   1233c:	cmp	r5, #1
   12340:	bgt	12360 <__mempcpy_chk@plt+0xcd0>
   12344:	movw	r1, #43180	; 0xa8ac
   12348:	mov	r0, #0
   1234c:	mov	r2, #5
   12350:	movt	r1, #1
   12354:	bl	113e4 <dcgettext@plt>
   12358:	ldr	r1, [r9]
   1235c:	b	12378 <__mempcpy_chk@plt+0xce8>
   12360:	movw	r1, #43222	; 0xa8d6
   12364:	mov	r0, #0
   12368:	mov	r2, #5
   1236c:	movt	r1, #1
   12370:	bl	113e4 <dcgettext@plt>
   12374:	ldr	r1, [r9, #8]
   12378:	mov	r4, r0
   1237c:	mov	r0, #4
   12380:	bl	17534 <__mempcpy_chk@plt+0x5ea4>
   12384:	mov	r3, r0
   12388:	mov	r0, #0
   1238c:	mov	r1, #0
   12390:	mov	r2, r4
   12394:	bl	11480 <error@plt>
   12398:	mov	r0, #1
   1239c:	bl	11790 <__mempcpy_chk@plt+0x100>
   123a0:	ldr	r4, [r0]
   123a4:	movw	r1, #43239	; 0xa8e7
   123a8:	mov	r0, #0
   123ac:	mov	r2, #5
   123b0:	movt	r1, #1
   123b4:	bl	113e4 <dcgettext@plt>
   123b8:	mov	r5, r0
   123bc:	mov	r0, #4
   123c0:	mov	r1, r6
   123c4:	b	12288 <__mempcpy_chk@plt+0xbf8>
   123c8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   123cc:	add	fp, sp, #28
   123d0:	sub	sp, sp, #252	; 0xfc
   123d4:	mov	r7, r0
   123d8:	movw	r0, #49605	; 0xc1c5
   123dc:	ldr	r5, [fp, #8]
   123e0:	mov	r4, #256	; 0x100
   123e4:	mov	r9, r3
   123e8:	mov	r8, r2
   123ec:	mov	r6, r1
   123f0:	str	r2, [sp, #32]
   123f4:	str	r1, [sp, #28]
   123f8:	movt	r0, #2
   123fc:	ldrb	r0, [r0]
   12400:	cmp	r0, #0
   12404:	movwne	r4, #0
   12408:	cmn	r5, #1
   1240c:	bgt	12490 <__mempcpy_chk@plt+0xe00>
   12410:	movw	r1, #49604	; 0xc1c4
   12414:	movt	r1, #2
   12418:	ldrb	r1, [r1]
   1241c:	cmp	r1, #1
   12420:	bne	12448 <__mempcpy_chk@plt+0xdb8>
   12424:	movw	r0, #49607	; 0xc1c7
   12428:	movt	r0, #2
   1242c:	ldrb	r0, [r0]
   12430:	cmp	r0, #0
   12434:	beq	1246c <__mempcpy_chk@plt+0xddc>
   12438:	mvn	r5, #0
   1243c:	mov	r0, #1
   12440:	str	r0, [sp, #20]
   12444:	b	125cc <__mempcpy_chk@plt+0xf3c>
   12448:	cmp	r0, #0
   1244c:	mov	r1, r7
   12450:	mov	r2, r6
   12454:	mov	r3, r8
   12458:	movwne	r0, #1024	; 0x400
   1245c:	str	r0, [sp]
   12460:	mvn	r0, #99	; 0x63
   12464:	bl	11594 <linkat@plt>
   12468:	b	1247c <__mempcpy_chk@plt+0xdec>
   1246c:	mov	r0, r7
   12470:	mov	r1, r6
   12474:	mov	r2, r8
   12478:	bl	11630 <symlinkat@plt>
   1247c:	mov	r5, #0
   12480:	cmn	r0, #1
   12484:	bgt	12490 <__mempcpy_chk@plt+0xe00>
   12488:	bl	1151c <__errno_location@plt>
   1248c:	ldr	r5, [r0]
   12490:	cmp	r5, #0
   12494:	mov	r1, #1
   12498:	movweq	r0, #49612	; 0xc1cc
   1249c:	movteq	r0, #2
   124a0:	ldreq	r0, [r0]
   124a4:	cmpeq	r0, #0
   124a8:	beq	1252c <__mempcpy_chk@plt+0xe9c>
   124ac:	movw	r0, #49604	; 0xc1c4
   124b0:	movt	r0, #2
   124b4:	ldrb	r0, [r0]
   124b8:	cmp	r0, #0
   124bc:	bne	1252c <__mempcpy_chk@plt+0xe9c>
   124c0:	sub	r3, fp, #136	; 0x88
   124c4:	mov	r0, #3
   124c8:	mvn	r1, #99	; 0x63
   124cc:	mov	r2, r7
   124d0:	str	r4, [sp]
   124d4:	bl	11414 <__fxstatat64@plt>
   124d8:	cmp	r0, #0
   124dc:	beq	12528 <__mempcpy_chk@plt+0xe98>
   124e0:	bl	1151c <__errno_location@plt>
   124e4:	ldr	r4, [r0]
   124e8:	movw	r1, #42968	; 0xa7d8
   124ec:	mov	r0, #0
   124f0:	mov	r2, #5
   124f4:	mov	r8, #0
   124f8:	movt	r1, #1
   124fc:	bl	113e4 <dcgettext@plt>
   12500:	mov	r5, r0
   12504:	mov	r0, #4
   12508:	mov	r1, r7
   1250c:	bl	17534 <__mempcpy_chk@plt+0x5ea4>
   12510:	mov	r3, r0
   12514:	mov	r0, #0
   12518:	mov	r1, r4
   1251c:	mov	r2, r5
   12520:	bl	11480 <error@plt>
   12524:	b	12b9c <__mempcpy_chk@plt+0x150c>
   12528:	mov	r1, #0
   1252c:	cmp	r5, #0
   12530:	beq	12634 <__mempcpy_chk@plt+0xfa4>
   12534:	movw	r0, #49604	; 0xc1c4
   12538:	movt	r0, #2
   1253c:	ldrb	r0, [r0]
   12540:	cmp	r0, #0
   12544:	bne	125b0 <__mempcpy_chk@plt+0xf20>
   12548:	movw	r0, #49600	; 0xc1c0
   1254c:	movt	r0, #2
   12550:	ldrb	r0, [r0]
   12554:	cmp	r0, #0
   12558:	bne	125b0 <__mempcpy_chk@plt+0xf20>
   1255c:	ldr	r0, [fp, #-120]	; 0xffffff88
   12560:	and	r0, r0, #61440	; 0xf000
   12564:	cmp	r0, #16384	; 0x4000
   12568:	bne	125b0 <__mempcpy_chk@plt+0xf20>
   1256c:	movw	r1, #44184	; 0xac98
   12570:	mov	r0, #0
   12574:	mov	r2, #5
   12578:	mov	r8, #0
   1257c:	movt	r1, #1
   12580:	bl	113e4 <dcgettext@plt>
   12584:	mov	r4, r0
   12588:	mov	r0, #0
   1258c:	mov	r1, #3
   12590:	mov	r2, r7
   12594:	bl	177b0 <__mempcpy_chk@plt+0x6120>
   12598:	mov	r3, r0
   1259c:	mov	r0, #0
   125a0:	mov	r1, #0
   125a4:	mov	r2, r4
   125a8:	bl	11480 <error@plt>
   125ac:	b	12b9c <__mempcpy_chk@plt+0x150c>
   125b0:	movw	r0, #49607	; 0xc1c7
   125b4:	mov	sl, #0
   125b8:	str	r1, [sp, #20]
   125bc:	movt	r0, #2
   125c0:	ldrb	r0, [r0]
   125c4:	cmp	r0, #1
   125c8:	bne	12644 <__mempcpy_chk@plt+0xfb4>
   125cc:	mov	r0, r9
   125d0:	bl	14558 <__mempcpy_chk@plt+0x2ec8>
   125d4:	mov	r1, #2
   125d8:	mov	r8, r0
   125dc:	bl	13c54 <__mempcpy_chk@plt+0x25c4>
   125e0:	mov	r4, r0
   125e4:	mov	r0, r7
   125e8:	mov	r1, #2
   125ec:	str	r7, [sp, #36]	; 0x24
   125f0:	bl	13c54 <__mempcpy_chk@plt+0x25c4>
   125f4:	mov	r6, r0
   125f8:	cmp	r4, #0
   125fc:	mov	sl, #0
   12600:	cmpne	r6, #0
   12604:	bne	12924 <__mempcpy_chk@plt+0x1294>
   12608:	mov	r0, r8
   1260c:	bl	148e8 <__mempcpy_chk@plt+0x3258>
   12610:	mov	r0, r4
   12614:	bl	148e8 <__mempcpy_chk@plt+0x3258>
   12618:	mov	r0, r6
   1261c:	bl	148e8 <__mempcpy_chk@plt+0x3258>
   12620:	cmp	sl, #0
   12624:	str	r9, [sp, #24]
   12628:	beq	12650 <__mempcpy_chk@plt+0xfc0>
   1262c:	str	sl, [sp, #36]	; 0x24
   12630:	b	12660 <__mempcpy_chk@plt+0xfd0>
   12634:	mov	r6, #0
   12638:	mov	sl, #0
   1263c:	str	r7, [sp, #36]	; 0x24
   12640:	b	127a0 <__mempcpy_chk@plt+0x1110>
   12644:	str	r7, [sp, #36]	; 0x24
   12648:	str	r9, [sp, #24]
   1264c:	b	12668 <__mempcpy_chk@plt+0xfd8>
   12650:	ldr	r0, [sp, #36]	; 0x24
   12654:	bl	1908c <__mempcpy_chk@plt+0x79fc>
   12658:	mov	sl, r0
   1265c:	str	r0, [sp, #36]	; 0x24
   12660:	ldr	r8, [sp, #32]
   12664:	ldr	r6, [sp, #28]
   12668:	movw	r4, #49603	; 0xc1c3
   1266c:	movt	r4, #2
   12670:	ldrb	r0, [r4]
   12674:	cmp	r0, #0
   12678:	bne	126ac <__mempcpy_chk@plt+0x101c>
   1267c:	movw	r0, #49608	; 0xc1c8
   12680:	movt	r0, #2
   12684:	ldr	r0, [r0]
   12688:	cmp	r0, #0
   1268c:	bne	126ac <__mempcpy_chk@plt+0x101c>
   12690:	movw	r0, #49602	; 0xc1c2
   12694:	mov	r7, #0
   12698:	mov	r9, #0
   1269c:	movt	r0, #2
   126a0:	ldrb	r0, [r0]
   126a4:	cmp	r0, #0
   126a8:	beq	126e8 <__mempcpy_chk@plt+0x1058>
   126ac:	mov	r0, #256	; 0x100
   126b0:	add	r3, sp, #40	; 0x28
   126b4:	mov	r1, r6
   126b8:	mov	r2, r8
   126bc:	str	r0, [sp]
   126c0:	mov	r0, #3
   126c4:	bl	11414 <__fxstatat64@plt>
   126c8:	cmp	r0, #0
   126cc:	beq	12718 <__mempcpy_chk@plt+0x1088>
   126d0:	bl	1151c <__errno_location@plt>
   126d4:	ldr	r4, [r0]
   126d8:	mov	r7, #0
   126dc:	mov	r9, #0
   126e0:	cmp	r4, #2
   126e4:	bne	128ec <__mempcpy_chk@plt+0x125c>
   126e8:	movw	r0, #49604	; 0xc1c4
   126ec:	movt	r0, #2
   126f0:	ldrb	r0, [r0]
   126f4:	cmp	r0, #1
   126f8:	bne	12764 <__mempcpy_chk@plt+0x10d4>
   126fc:	ldr	r0, [sp, #36]	; 0x24
   12700:	mov	r1, r6
   12704:	mov	r2, r8
   12708:	mov	r3, r9
   1270c:	str	r5, [sp]
   12710:	bl	12f48 <__mempcpy_chk@plt+0x18b8>
   12714:	b	12794 <__mempcpy_chk@plt+0x1104>
   12718:	ldr	r0, [sp, #56]	; 0x38
   1271c:	and	r0, r0, #61440	; 0xf000
   12720:	cmp	r0, #16384	; 0x4000
   12724:	bne	12954 <__mempcpy_chk@plt+0x12c4>
   12728:	movw	r1, #44224	; 0xacc0
   1272c:	mov	r0, #0
   12730:	mov	r2, #5
   12734:	movt	r1, #1
   12738:	bl	113e4 <dcgettext@plt>
   1273c:	ldr	r2, [sp, #24]
   12740:	mov	r4, r0
   12744:	mov	r0, #0
   12748:	mov	r1, #3
   1274c:	bl	177b0 <__mempcpy_chk@plt+0x6120>
   12750:	mov	r3, r0
   12754:	mov	r0, #0
   12758:	mov	r1, #0
   1275c:	mov	r2, r4
   12760:	b	129c8 <__mempcpy_chk@plt+0x1338>
   12764:	movw	r0, #49605	; 0xc1c5
   12768:	mov	r2, r6
   1276c:	mov	r3, r8
   12770:	movt	r0, #2
   12774:	ldrb	r0, [r0]
   12778:	cmp	r0, #0
   1277c:	movwne	r0, #1024	; 0x400
   12780:	stm	sp, {r0, r9}
   12784:	mvn	r0, #99	; 0x63
   12788:	str	r5, [sp, #8]
   1278c:	ldr	r1, [sp, #36]	; 0x24
   12790:	bl	12d90 <__mempcpy_chk@plt+0x1700>
   12794:	ldr	r9, [sp, #24]
   12798:	mov	r5, r0
   1279c:	mov	r6, r7
   127a0:	movw	r7, #49604	; 0xc1c4
   127a4:	mov	r8, #0
   127a8:	cmp	r5, #1
   127ac:	movt	r7, #2
   127b0:	movwlt	r8, #1
   127b4:	cmp	r5, #0
   127b8:	ldrb	r0, [r7]
   127bc:	ble	127f4 <__mempcpy_chk@plt+0x1164>
   127c0:	mov	r7, sl
   127c4:	mov	sl, r6
   127c8:	cmp	r0, #0
   127cc:	beq	1287c <__mempcpy_chk@plt+0x11ec>
   127d0:	cmp	r5, #36	; 0x24
   127d4:	beq	128e0 <__mempcpy_chk@plt+0x1250>
   127d8:	ldr	r0, [sp, #36]	; 0x24
   127dc:	ldrb	r0, [r0]
   127e0:	cmp	r0, #0
   127e4:	beq	128e0 <__mempcpy_chk@plt+0x1250>
   127e8:	movw	r1, #44379	; 0xad5b
   127ec:	movt	r1, #1
   127f0:	b	129f8 <__mempcpy_chk@plt+0x1368>
   127f4:	cmp	r0, #0
   127f8:	bne	12814 <__mempcpy_chk@plt+0x1184>
   127fc:	movw	r0, #49612	; 0xc1cc
   12800:	sub	r2, fp, #136	; 0x88
   12804:	mov	r1, r9
   12808:	movt	r0, #2
   1280c:	ldr	r0, [r0]
   12810:	bl	146ec <__mempcpy_chk@plt+0x305c>
   12814:	movw	r0, #49601	; 0xc1c1
   12818:	movt	r0, #2
   1281c:	ldrb	r0, [r0]
   12820:	cmp	r0, #1
   12824:	bne	12b8c <__mempcpy_chk@plt+0x14fc>
   12828:	cmp	r6, #0
   1282c:	str	sl, [sp, #20]
   12830:	beq	12ab4 <__mempcpy_chk@plt+0x1424>
   12834:	ldr	r0, [sp, #32]
   12838:	sub	r5, r0, r9
   1283c:	cmp	r5, #1
   12840:	blt	12af8 <__mempcpy_chk@plt+0x1468>
   12844:	mov	r0, r6
   12848:	bl	11504 <strlen@plt>
   1284c:	add	r0, r5, r0
   12850:	add	r0, r0, #1
   12854:	bl	18b6c <__mempcpy_chk@plt+0x74dc>
   12858:	mov	r1, r9
   1285c:	mov	r2, r5
   12860:	mov	r4, r0
   12864:	bl	113c0 <memcpy@plt>
   12868:	add	r0, r4, r5
   1286c:	mov	r1, r6
   12870:	bl	1145c <strcpy@plt>
   12874:	mov	r5, r4
   12878:	b	12b00 <__mempcpy_chk@plt+0x1470>
   1287c:	sub	r0, r5, #17
   12880:	cmp	r0, #14
   12884:	bhi	129e8 <__mempcpy_chk@plt+0x1358>
   12888:	movw	r1, #44453	; 0xada5
   1288c:	add	r2, pc, #4
   12890:	movt	r1, #1
   12894:	ldr	pc, [r2, r0, lsl #2]
   12898:	ldrdeq	r2, [r1], -r4
   1289c:	strdeq	r2, [r1], -r0
   128a0:	strdeq	r2, [r1], -r0
   128a4:	strdeq	r2, [r1], -r0
   128a8:	strdeq	r2, [r1], -r0
   128ac:	strdeq	r2, [r1], -r0
   128b0:	strdeq	r2, [r1], -r0
   128b4:	strdeq	r2, [r1], -r0
   128b8:	strdeq	r2, [r1], -r0
   128bc:	strdeq	r2, [r1], -r0
   128c0:	strdeq	r2, [r1], -r0
   128c4:	ldrdeq	r2, [r1], -r4
   128c8:	strdeq	r2, [r1], -r0
   128cc:	ldrdeq	r2, [r1], -r4
   128d0:	strdeq	r2, [r1], -r8
   128d4:	movw	r1, #44490	; 0xadca
   128d8:	movt	r1, #1
   128dc:	b	129f8 <__mempcpy_chk@plt+0x1368>
   128e0:	movw	r1, #44413	; 0xad7d
   128e4:	movt	r1, #1
   128e8:	b	129f8 <__mempcpy_chk@plt+0x1368>
   128ec:	movw	r1, #42968	; 0xa7d8
   128f0:	movt	r1, #1
   128f4:	mov	r0, #0
   128f8:	mov	r2, #5
   128fc:	bl	113e4 <dcgettext@plt>
   12900:	ldr	r1, [sp, #24]
   12904:	mov	r5, r0
   12908:	mov	r0, #4
   1290c:	bl	17534 <__mempcpy_chk@plt+0x5ea4>
   12910:	mov	r3, r0
   12914:	mov	r0, #0
   12918:	mov	r1, r4
   1291c:	mov	r2, r5
   12920:	b	129c8 <__mempcpy_chk@plt+0x1338>
   12924:	mov	r0, #4096	; 0x1000
   12928:	bl	18b6c <__mempcpy_chk@plt+0x74dc>
   1292c:	mov	r7, r0
   12930:	mov	r0, r6
   12934:	mov	r1, r4
   12938:	mov	r3, #4096	; 0x1000
   1293c:	mov	r2, r7
   12940:	bl	130bc <__mempcpy_chk@plt+0x1a2c>
   12944:	cmp	r0, #0
   12948:	beq	129dc <__mempcpy_chk@plt+0x134c>
   1294c:	mov	sl, r7
   12950:	b	12608 <__mempcpy_chk@plt+0xf78>
   12954:	movw	r0, #49612	; 0xc1cc
   12958:	ldr	r7, [sp, #24]
   1295c:	add	r2, sp, #40	; 0x28
   12960:	movt	r0, #2
   12964:	ldr	r0, [r0]
   12968:	mov	r1, r7
   1296c:	bl	14768 <__mempcpy_chk@plt+0x30d8>
   12970:	cmp	r0, #0
   12974:	beq	12ac8 <__mempcpy_chk@plt+0x1438>
   12978:	movw	r1, #44255	; 0xacdf
   1297c:	mov	r0, #0
   12980:	mov	r2, #5
   12984:	movt	r1, #1
   12988:	bl	113e4 <dcgettext@plt>
   1298c:	mov	r4, r0
   12990:	mov	r0, #0
   12994:	mov	r1, #4
   12998:	mov	r2, r7
   1299c:	bl	1748c <__mempcpy_chk@plt+0x5dfc>
   129a0:	ldr	r2, [sp, #36]	; 0x24
   129a4:	mov	r5, r0
   129a8:	mov	r0, #1
   129ac:	mov	r1, #4
   129b0:	bl	1748c <__mempcpy_chk@plt+0x5dfc>
   129b4:	str	r0, [sp]
   129b8:	mov	r0, #0
   129bc:	mov	r1, #0
   129c0:	mov	r2, r4
   129c4:	mov	r3, r5
   129c8:	bl	11480 <error@plt>
   129cc:	mov	r0, sl
   129d0:	bl	148e8 <__mempcpy_chk@plt+0x3258>
   129d4:	mov	r8, #0
   129d8:	b	12b9c <__mempcpy_chk@plt+0x150c>
   129dc:	mov	r0, r7
   129e0:	bl	148e8 <__mempcpy_chk@plt+0x3258>
   129e4:	b	12608 <__mempcpy_chk@plt+0xf78>
   129e8:	cmp	r5, #122	; 0x7a
   129ec:	beq	128d4 <__mempcpy_chk@plt+0x1244>
   129f0:	movw	r1, #44520	; 0xade8
   129f4:	movt	r1, #1
   129f8:	mov	r0, #0
   129fc:	mov	r2, #5
   12a00:	bl	113e4 <dcgettext@plt>
   12a04:	mov	r4, r0
   12a08:	mov	r0, #0
   12a0c:	mov	r1, #4
   12a10:	mov	r2, r9
   12a14:	bl	1748c <__mempcpy_chk@plt+0x5dfc>
   12a18:	ldr	r2, [sp, #36]	; 0x24
   12a1c:	mov	r6, r0
   12a20:	mov	r0, #1
   12a24:	mov	r1, #4
   12a28:	bl	1748c <__mempcpy_chk@plt+0x5dfc>
   12a2c:	str	r0, [sp]
   12a30:	mov	r0, #0
   12a34:	mov	r1, r5
   12a38:	mov	r2, r4
   12a3c:	mov	r3, r6
   12a40:	bl	11480 <error@plt>
   12a44:	mov	r6, sl
   12a48:	cmp	sl, #0
   12a4c:	mov	sl, r7
   12a50:	beq	12b8c <__mempcpy_chk@plt+0x14fc>
   12a54:	ldr	r0, [sp, #28]
   12a58:	ldr	r3, [sp, #32]
   12a5c:	mov	r1, r6
   12a60:	mov	r2, r0
   12a64:	bl	1160c <renameat@plt>
   12a68:	cmp	r0, #0
   12a6c:	beq	12b8c <__mempcpy_chk@plt+0x14fc>
   12a70:	bl	1151c <__errno_location@plt>
   12a74:	ldr	r4, [r0]
   12a78:	movw	r1, #44556	; 0xae0c
   12a7c:	mov	r0, #0
   12a80:	mov	r2, #5
   12a84:	movt	r1, #1
   12a88:	bl	113e4 <dcgettext@plt>
   12a8c:	mov	r5, r0
   12a90:	mov	r0, #4
   12a94:	mov	r1, r9
   12a98:	bl	17534 <__mempcpy_chk@plt+0x5ea4>
   12a9c:	mov	r3, r0
   12aa0:	mov	r0, #0
   12aa4:	mov	r1, r4
   12aa8:	mov	r2, r5
   12aac:	bl	11480 <error@plt>
   12ab0:	b	12b8c <__mempcpy_chk@plt+0x14fc>
   12ab4:	movw	r4, #43556	; 0xaa24
   12ab8:	mov	sl, r6
   12abc:	movt	r4, #1
   12ac0:	mov	r5, r4
   12ac4:	b	12b28 <__mempcpy_chk@plt+0x1498>
   12ac8:	movw	r6, #49608	; 0xc1c8
   12acc:	ldr	r8, [sp, #36]	; 0x24
   12ad0:	movt	r6, #2
   12ad4:	ldr	r0, [r6]
   12ad8:	cmp	r0, #0
   12adc:	beq	12ba8 <__mempcpy_chk@plt+0x1518>
   12ae0:	movw	r0, #49604	; 0xc1c4
   12ae4:	movt	r0, #2
   12ae8:	ldrb	r0, [r0]
   12aec:	cmp	r0, #0
   12af0:	beq	12bb4 <__mempcpy_chk@plt+0x1524>
   12af4:	b	12c7c <__mempcpy_chk@plt+0x15ec>
   12af8:	mov	r5, #0
   12afc:	mov	r4, r6
   12b00:	mov	r0, #2
   12b04:	mov	r1, #4
   12b08:	mov	r2, r4
   12b0c:	mov	sl, r6
   12b10:	bl	1748c <__mempcpy_chk@plt+0x5dfc>
   12b14:	mov	r4, r0
   12b18:	mov	r0, r5
   12b1c:	bl	148e8 <__mempcpy_chk@plt+0x3258>
   12b20:	movw	r5, #44360	; 0xad48
   12b24:	movt	r5, #1
   12b28:	mov	r0, #0
   12b2c:	mov	r1, #4
   12b30:	mov	r2, r9
   12b34:	bl	1748c <__mempcpy_chk@plt+0x5dfc>
   12b38:	ldr	r2, [sp, #36]	; 0x24
   12b3c:	ldrb	r7, [r7]
   12b40:	mov	r6, r0
   12b44:	mov	r0, #1
   12b48:	mov	r1, #4
   12b4c:	bl	1748c <__mempcpy_chk@plt+0x5dfc>
   12b50:	mov	r1, #61	; 0x3d
   12b54:	cmp	r7, #0
   12b58:	str	r0, [sp, #8]
   12b5c:	mov	r0, #1
   12b60:	mov	r2, r4
   12b64:	mov	r3, r5
   12b68:	str	r6, [sp]
   12b6c:	movwne	r1, #45	; 0x2d
   12b70:	str	r1, [sp, #4]
   12b74:	movw	r1, #44364	; 0xad4c
   12b78:	movt	r1, #1
   12b7c:	bl	11564 <__printf_chk@plt>
   12b80:	ldr	r0, [sp, #20]
   12b84:	mov	r6, sl
   12b88:	mov	sl, r0
   12b8c:	mov	r0, r6
   12b90:	bl	148e8 <__mempcpy_chk@plt+0x3258>
   12b94:	mov	r0, sl
   12b98:	bl	148e8 <__mempcpy_chk@plt+0x3258>
   12b9c:	mov	r0, r8
   12ba0:	sub	sp, fp, #28
   12ba4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12ba8:	ldrb	r0, [r4]
   12bac:	cmp	r0, #1
   12bb0:	bne	12c7c <__mempcpy_chk@plt+0x15ec>
   12bb4:	ldr	r0, [sp, #20]
   12bb8:	cmp	r0, #0
   12bbc:	beq	12bd8 <__mempcpy_chk@plt+0x1548>
   12bc0:	sub	r2, fp, #136	; 0x88
   12bc4:	mov	r0, #3
   12bc8:	mov	r1, r8
   12bcc:	bl	1163c <__xstat64@plt>
   12bd0:	cmp	r0, #0
   12bd4:	bne	12c7c <__mempcpy_chk@plt+0x15ec>
   12bd8:	ldr	r0, [sp, #136]	; 0x88
   12bdc:	ldr	r2, [fp, #-40]	; 0xffffffd8
   12be0:	ldr	r1, [sp, #140]	; 0x8c
   12be4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   12be8:	eor	r1, r3, r1
   12bec:	eor	r0, r2, r0
   12bf0:	orrs	r0, r0, r1
   12bf4:	bne	12c7c <__mempcpy_chk@plt+0x15ec>
   12bf8:	ldr	r0, [sp, #40]	; 0x28
   12bfc:	ldr	r2, [fp, #-136]	; 0xffffff78
   12c00:	ldr	r1, [sp, #44]	; 0x2c
   12c04:	ldr	r3, [fp, #-132]	; 0xffffff7c
   12c08:	eor	r1, r3, r1
   12c0c:	eor	r0, r2, r0
   12c10:	orrs	r0, r0, r1
   12c14:	bne	12c7c <__mempcpy_chk@plt+0x15ec>
   12c18:	ldr	r0, [fp, #-116]	; 0xffffff8c
   12c1c:	cmp	r0, #1
   12c20:	beq	12c40 <__mempcpy_chk@plt+0x15b0>
   12c24:	ldr	r2, [sp, #28]
   12c28:	ldr	r3, [sp, #32]
   12c2c:	mvn	r0, #99	; 0x63
   12c30:	mov	r1, r8
   12c34:	bl	17d94 <__mempcpy_chk@plt+0x6704>
   12c38:	cmp	r0, #0
   12c3c:	beq	12c7c <__mempcpy_chk@plt+0x15ec>
   12c40:	movw	r1, #44298	; 0xad0a
   12c44:	mov	r0, #0
   12c48:	mov	r2, #5
   12c4c:	movt	r1, #1
   12c50:	bl	113e4 <dcgettext@plt>
   12c54:	mov	r4, r0
   12c58:	mov	r0, #0
   12c5c:	mov	r1, #4
   12c60:	mov	r2, r8
   12c64:	bl	1748c <__mempcpy_chk@plt+0x5dfc>
   12c68:	mov	r5, r0
   12c6c:	mov	r0, #1
   12c70:	mov	r1, #4
   12c74:	mov	r2, r7
   12c78:	b	129b0 <__mempcpy_chk@plt+0x1320>
   12c7c:	mov	r9, #1
   12c80:	mov	r7, #0
   12c84:	cmp	r5, #0
   12c88:	blt	12c94 <__mempcpy_chk@plt+0x1604>
   12c8c:	cmp	r5, #17
   12c90:	bne	12d84 <__mempcpy_chk@plt+0x16f4>
   12c94:	movw	r0, #49602	; 0xc1c2
   12c98:	movt	r0, #2
   12c9c:	ldrb	r0, [r0]
   12ca0:	cmp	r0, #1
   12ca4:	bne	12d18 <__mempcpy_chk@plt+0x1688>
   12ca8:	movw	r0, #49576	; 0xc1a8
   12cac:	movw	r1, #44326	; 0xad26
   12cb0:	mov	r2, #5
   12cb4:	movt	r0, #2
   12cb8:	movt	r1, #1
   12cbc:	ldr	r0, [r0]
   12cc0:	str	r0, [sp, #16]
   12cc4:	mov	r0, #0
   12cc8:	bl	113e4 <dcgettext@plt>
   12ccc:	str	sl, [sp, #20]
   12cd0:	mov	sl, r0
   12cd4:	movw	r0, #49632	; 0xc1e0
   12cd8:	ldr	r1, [sp, #24]
   12cdc:	movt	r0, #2
   12ce0:	ldr	r4, [r0]
   12ce4:	mov	r0, #4
   12ce8:	bl	17534 <__mempcpy_chk@plt+0x5ea4>
   12cec:	str	r0, [sp]
   12cf0:	ldr	r0, [sp, #16]
   12cf4:	mov	r2, sl
   12cf8:	ldr	sl, [sp, #20]
   12cfc:	mov	r1, #1
   12d00:	mov	r3, r4
   12d04:	mov	r8, #1
   12d08:	bl	1157c <__fprintf_chk@plt>
   12d0c:	bl	19110 <__mempcpy_chk@plt+0x7a80>
   12d10:	cmp	r0, #0
   12d14:	beq	12b94 <__mempcpy_chk@plt+0x1504>
   12d18:	ldr	r2, [r6]
   12d1c:	cmp	r2, #0
   12d20:	beq	12d84 <__mempcpy_chk@plt+0x16f4>
   12d24:	ldr	r6, [sp, #28]
   12d28:	ldr	r8, [sp, #32]
   12d2c:	mov	r0, r6
   12d30:	mov	r1, r8
   12d34:	bl	13a94 <__mempcpy_chk@plt+0x2404>
   12d38:	mov	r7, r0
   12d3c:	mov	r0, r6
   12d40:	mov	r1, r8
   12d44:	mov	r2, r6
   12d48:	mov	r3, r7
   12d4c:	bl	1160c <renameat@plt>
   12d50:	cmp	r0, #0
   12d54:	beq	126e8 <__mempcpy_chk@plt+0x1058>
   12d58:	bl	1151c <__errno_location@plt>
   12d5c:	ldr	r4, [r0]
   12d60:	mov	r0, r7
   12d64:	bl	148e8 <__mempcpy_chk@plt+0x3258>
   12d68:	mov	r7, #0
   12d6c:	cmp	r4, #2
   12d70:	mov	r9, #0
   12d74:	beq	126e8 <__mempcpy_chk@plt+0x1058>
   12d78:	movw	r1, #44343	; 0xad37
   12d7c:	movt	r1, #1
   12d80:	b	128f4 <__mempcpy_chk@plt+0x1264>
   12d84:	ldr	r8, [sp, #32]
   12d88:	ldr	r6, [sp, #28]
   12d8c:	b	126e8 <__mempcpy_chk@plt+0x1058>
   12d90:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12d94:	add	fp, sp, #28
   12d98:	sub	sp, sp, #284	; 0x11c
   12d9c:	ldr	r6, [fp, #16]
   12da0:	mov	sl, r0
   12da4:	ldr	r0, [fp, #8]
   12da8:	mov	r5, r3
   12dac:	mov	r8, r2
   12db0:	mov	r9, r1
   12db4:	cmn	r6, #1
   12db8:	ble	12dc8 <__mempcpy_chk@plt+0x1738>
   12dbc:	cmp	r6, #17
   12dc0:	beq	12df8 <__mempcpy_chk@plt+0x1768>
   12dc4:	b	12f08 <__mempcpy_chk@plt+0x1878>
   12dc8:	str	r0, [sp]
   12dcc:	mov	r0, sl
   12dd0:	mov	r1, r9
   12dd4:	mov	r2, r8
   12dd8:	mov	r3, r5
   12ddc:	bl	11594 <linkat@plt>
   12de0:	cmp	r0, #0
   12de4:	beq	12eac <__mempcpy_chk@plt+0x181c>
   12de8:	bl	1151c <__errno_location@plt>
   12dec:	ldr	r6, [r0]
   12df0:	cmp	r6, #17
   12df4:	bne	12f08 <__mempcpy_chk@plt+0x1878>
   12df8:	ldr	r0, [fp, #12]
   12dfc:	cmp	r0, #0
   12e00:	beq	12f08 <__mempcpy_chk@plt+0x1878>
   12e04:	mov	r0, r5
   12e08:	bl	13bd0 <__mempcpy_chk@plt+0x2540>
   12e0c:	sub	r4, r0, r5
   12e10:	add	r0, r4, #9
   12e14:	cmp	r0, #256	; 0x100
   12e18:	bhi	12e24 <__mempcpy_chk@plt+0x1794>
   12e1c:	add	r7, sp, #24
   12e20:	b	12e34 <__mempcpy_chk@plt+0x17a4>
   12e24:	bl	191e0 <__mempcpy_chk@plt+0x7b50>
   12e28:	mov	r7, r0
   12e2c:	cmp	r0, #0
   12e30:	beq	12f00 <__mempcpy_chk@plt+0x1870>
   12e34:	mov	r0, r7
   12e38:	mov	r1, r5
   12e3c:	mov	r2, r4
   12e40:	mvn	r3, #0
   12e44:	mvn	r6, #0
   12e48:	bl	11690 <__mempcpy_chk@plt>
   12e4c:	movw	r1, #44888	; 0xaf58
   12e50:	movw	r3, #12052	; 0x2f14
   12e54:	add	r2, sp, #8
   12e58:	movt	r1, #1
   12e5c:	movt	r3, #1
   12e60:	vldr	d16, [r1]
   12e64:	mov	r1, #0
   12e68:	strb	r1, [r0, #8]
   12e6c:	mov	r1, #0
   12e70:	vst1.8	{d16}, [r0]
   12e74:	ldr	r0, [fp, #8]
   12e78:	str	r9, [sp, #12]
   12e7c:	str	sl, [sp, #8]
   12e80:	str	r8, [sp, #16]
   12e84:	str	r0, [sp, #20]
   12e88:	mov	r0, #6
   12e8c:	str	r0, [sp]
   12e90:	mov	r0, r7
   12e94:	bl	18118 <__mempcpy_chk@plt+0x6a88>
   12e98:	cmp	r0, #0
   12e9c:	beq	12eb4 <__mempcpy_chk@plt+0x1824>
   12ea0:	bl	1151c <__errno_location@plt>
   12ea4:	ldr	r6, [r0]
   12ea8:	b	12ee8 <__mempcpy_chk@plt+0x1858>
   12eac:	mov	r6, #0
   12eb0:	b	12f08 <__mempcpy_chk@plt+0x1878>
   12eb4:	mov	r0, r8
   12eb8:	mov	r1, r7
   12ebc:	mov	r2, r8
   12ec0:	mov	r3, r5
   12ec4:	bl	1160c <renameat@plt>
   12ec8:	cmp	r0, #0
   12ecc:	beq	12ed8 <__mempcpy_chk@plt+0x1848>
   12ed0:	bl	1151c <__errno_location@plt>
   12ed4:	ldr	r6, [r0]
   12ed8:	mov	r0, r8
   12edc:	mov	r1, r7
   12ee0:	mov	r2, #0
   12ee4:	bl	11378 <unlinkat@plt>
   12ee8:	add	r0, sp, #24
   12eec:	cmp	r7, r0
   12ef0:	beq	12f08 <__mempcpy_chk@plt+0x1878>
   12ef4:	mov	r0, r7
   12ef8:	bl	148e8 <__mempcpy_chk@plt+0x3258>
   12efc:	b	12f08 <__mempcpy_chk@plt+0x1878>
   12f00:	bl	1151c <__errno_location@plt>
   12f04:	ldr	r6, [r0]
   12f08:	mov	r0, r6
   12f0c:	sub	sp, fp, #28
   12f10:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12f14:	push	{fp, lr}
   12f18:	mov	fp, sp
   12f1c:	sub	sp, sp, #8
   12f20:	mov	ip, r0
   12f24:	ldm	r1, {r0, r3}
   12f28:	ldr	r2, [r1, #8]
   12f2c:	ldr	r1, [r1, #12]
   12f30:	str	r1, [sp]
   12f34:	mov	r1, r3
   12f38:	mov	r3, ip
   12f3c:	bl	11594 <linkat@plt>
   12f40:	mov	sp, fp
   12f44:	pop	{fp, pc}
   12f48:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   12f4c:	add	fp, sp, #24
   12f50:	sub	sp, sp, #272	; 0x110
   12f54:	ldr	r5, [fp, #8]
   12f58:	mov	r7, r3
   12f5c:	mov	r6, r2
   12f60:	mov	r8, r1
   12f64:	mov	r9, r0
   12f68:	cmn	r5, #1
   12f6c:	ble	12fa0 <__mempcpy_chk@plt+0x1910>
   12f70:	cmp	r5, #17
   12f74:	bne	130a4 <__mempcpy_chk@plt+0x1a14>
   12f78:	cmp	r7, #0
   12f7c:	beq	130a4 <__mempcpy_chk@plt+0x1a14>
   12f80:	mov	r0, r6
   12f84:	bl	13bd0 <__mempcpy_chk@plt+0x2540>
   12f88:	sub	r4, r0, r6
   12f8c:	add	r0, r4, #9
   12f90:	cmp	r0, #256	; 0x100
   12f94:	bhi	12fcc <__mempcpy_chk@plt+0x193c>
   12f98:	add	r7, sp, #12
   12f9c:	b	12fdc <__mempcpy_chk@plt+0x194c>
   12fa0:	mov	r0, r9
   12fa4:	mov	r1, r8
   12fa8:	mov	r2, r6
   12fac:	bl	11630 <symlinkat@plt>
   12fb0:	cmp	r0, #0
   12fb4:	beq	13048 <__mempcpy_chk@plt+0x19b8>
   12fb8:	bl	1151c <__errno_location@plt>
   12fbc:	ldr	r5, [r0]
   12fc0:	cmp	r5, #17
   12fc4:	beq	12f78 <__mempcpy_chk@plt+0x18e8>
   12fc8:	b	130a4 <__mempcpy_chk@plt+0x1a14>
   12fcc:	bl	191e0 <__mempcpy_chk@plt+0x7b50>
   12fd0:	mov	r7, r0
   12fd4:	cmp	r0, #0
   12fd8:	beq	1309c <__mempcpy_chk@plt+0x1a0c>
   12fdc:	mov	r0, r7
   12fe0:	mov	r1, r6
   12fe4:	mov	r2, r4
   12fe8:	mvn	r3, #0
   12fec:	mvn	r5, #0
   12ff0:	bl	11690 <__mempcpy_chk@plt>
   12ff4:	movw	r1, #44888	; 0xaf58
   12ff8:	movw	r3, #12464	; 0x30b0
   12ffc:	add	r2, sp, #4
   13000:	movt	r1, #1
   13004:	movt	r3, #1
   13008:	vldr	d16, [r1]
   1300c:	mov	r1, #0
   13010:	strb	r1, [r0, #8]
   13014:	mov	r1, #0
   13018:	vst1.8	{d16}, [r0]
   1301c:	mov	r0, #6
   13020:	str	r8, [sp, #8]
   13024:	str	r9, [sp, #4]
   13028:	str	r0, [sp]
   1302c:	mov	r0, r7
   13030:	bl	18118 <__mempcpy_chk@plt+0x6a88>
   13034:	cmp	r0, #0
   13038:	beq	13050 <__mempcpy_chk@plt+0x19c0>
   1303c:	bl	1151c <__errno_location@plt>
   13040:	ldr	r5, [r0]
   13044:	b	13084 <__mempcpy_chk@plt+0x19f4>
   13048:	mov	r5, #0
   1304c:	b	130a4 <__mempcpy_chk@plt+0x1a14>
   13050:	mov	r0, r8
   13054:	mov	r1, r7
   13058:	mov	r2, r8
   1305c:	mov	r3, r6
   13060:	bl	1160c <renameat@plt>
   13064:	cmp	r0, #0
   13068:	beq	13084 <__mempcpy_chk@plt+0x19f4>
   1306c:	bl	1151c <__errno_location@plt>
   13070:	ldr	r5, [r0]
   13074:	mov	r0, r8
   13078:	mov	r1, r7
   1307c:	mov	r2, #0
   13080:	bl	11378 <unlinkat@plt>
   13084:	add	r0, sp, #12
   13088:	cmp	r7, r0
   1308c:	beq	130a4 <__mempcpy_chk@plt+0x1a14>
   13090:	mov	r0, r7
   13094:	bl	148e8 <__mempcpy_chk@plt+0x3258>
   13098:	b	130a4 <__mempcpy_chk@plt+0x1a14>
   1309c:	bl	1151c <__errno_location@plt>
   130a0:	ldr	r5, [r0]
   130a4:	mov	r0, r5
   130a8:	sub	sp, fp, #24
   130ac:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   130b0:	mov	r2, r0
   130b4:	ldm	r1, {r0, r1}
   130b8:	b	11630 <symlinkat@plt>
   130bc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   130c0:	add	fp, sp, #28
   130c4:	sub	sp, sp, #4
   130c8:	mov	r7, r1
   130cc:	ldrb	r1, [r1, #1]
   130d0:	mov	r6, r0
   130d4:	ldrb	r0, [r0, #1]
   130d8:	mov	r4, #0
   130dc:	sub	r0, r0, #47	; 0x2f
   130e0:	sub	r1, r1, #47	; 0x2f
   130e4:	clz	r0, r0
   130e8:	clz	r1, r1
   130ec:	lsr	r0, r0, #5
   130f0:	lsr	r1, r1, #5
   130f4:	teq	r1, r0
   130f8:	bne	133e4 <__mempcpy_chk@plt+0x1d54>
   130fc:	mov	sl, r3
   13100:	ldrb	r3, [r7]
   13104:	ldrb	r1, [r6]
   13108:	mov	r8, r2
   1310c:	cmp	r3, #0
   13110:	beq	13160 <__mempcpy_chk@plt+0x1ad0>
   13114:	mov	r0, #0
   13118:	mov	r2, #1
   1311c:	tst	r1, #255	; 0xff
   13120:	beq	13188 <__mempcpy_chk@plt+0x1af8>
   13124:	uxtb	r4, r1
   13128:	uxtb	r5, r3
   1312c:	cmp	r5, r4
   13130:	bne	13188 <__mempcpy_chk@plt+0x1af8>
   13134:	ldrb	r3, [r7, r2]
   13138:	ldrb	r1, [r6, r2]
   1313c:	cmp	r4, #47	; 0x2f
   13140:	moveq	r0, r2
   13144:	add	r2, r2, #1
   13148:	cmp	r3, #0
   1314c:	bne	1311c <__mempcpy_chk@plt+0x1a8c>
   13150:	sub	r2, r2, #1
   13154:	cmp	r1, #0
   13158:	bne	13170 <__mempcpy_chk@plt+0x1ae0>
   1315c:	b	13328 <__mempcpy_chk@plt+0x1c98>
   13160:	mov	r2, #0
   13164:	mov	r0, #0
   13168:	cmp	r1, #0
   1316c:	beq	13328 <__mempcpy_chk@plt+0x1c98>
   13170:	cmp	r1, #47	; 0x2f
   13174:	moveq	r0, r2
   13178:	cmp	r0, #0
   1317c:	bne	131a0 <__mempcpy_chk@plt+0x1b10>
   13180:	mov	r4, #0
   13184:	b	133e4 <__mempcpy_chk@plt+0x1d54>
   13188:	tst	r1, #255	; 0xff
   1318c:	uxtbeq	r1, r3
   13190:	cmpeq	r1, #47	; 0x2f
   13194:	beq	13324 <__mempcpy_chk@plt+0x1c94>
   13198:	cmp	r0, #0
   1319c:	beq	13180 <__mempcpy_chk@plt+0x1af0>
   131a0:	ldrb	r1, [r6, r0]!
   131a4:	ldrb	r0, [r7, r0]!
   131a8:	cmp	r1, #47	; 0x2f
   131ac:	mov	r5, r6
   131b0:	sub	r1, r1, #47	; 0x2f
   131b4:	addeq	r5, r5, #1
   131b8:	cmp	r0, #47	; 0x2f
   131bc:	clz	r1, r1
   131c0:	addeq	r7, r7, #1
   131c4:	lsr	r1, r1, #5
   131c8:	ldrb	r0, [r7]
   131cc:	cmp	r0, #0
   131d0:	beq	13204 <__mempcpy_chk@plt+0x1b74>
   131d4:	cmp	r8, #0
   131d8:	str	r1, [sp]
   131dc:	beq	13244 <__mempcpy_chk@plt+0x1bb4>
   131e0:	mov	r4, #1
   131e4:	cmp	sl, #3
   131e8:	bcc	13264 <__mempcpy_chk@plt+0x1bd4>
   131ec:	movw	r0, #11822	; 0x2e2e
   131f0:	mov	r4, #0
   131f4:	sub	sl, sl, #2
   131f8:	strh	r0, [r8]
   131fc:	strb	r4, [r8, #2]!
   13200:	b	13264 <__mempcpy_chk@plt+0x1bd4>
   13204:	ldrb	r0, [r6, r1]
   13208:	movw	r1, #44906	; 0xaf6a
   1320c:	movt	r1, #1
   13210:	cmp	r0, #0
   13214:	moveq	r5, r1
   13218:	cmp	r8, #0
   1321c:	beq	13338 <__mempcpy_chk@plt+0x1ca8>
   13220:	mov	r0, r5
   13224:	bl	11504 <strlen@plt>
   13228:	cmp	r0, sl
   1322c:	bcs	133ac <__mempcpy_chk@plt+0x1d1c>
   13230:	add	r2, r0, #1
   13234:	mov	r0, r8
   13238:	mov	r1, r5
   1323c:	bl	113c0 <memcpy@plt>
   13240:	b	133e0 <__mempcpy_chk@plt+0x1d50>
   13244:	movw	r0, #49588	; 0xc1b4
   13248:	movt	r0, #2
   1324c:	ldr	r1, [r0]
   13250:	movw	r0, #44905	; 0xaf69
   13254:	movt	r0, #1
   13258:	bl	11324 <fputs_unlocked@plt>
   1325c:	mov	r8, #0
   13260:	mov	r4, #0
   13264:	movw	r9, #44904	; 0xaf68
   13268:	movt	r9, #1
   1326c:	b	13274 <__mempcpy_chk@plt+0x1be4>
   13270:	add	r7, r7, #1
   13274:	ldrb	r0, [r7]
   13278:	cmp	r0, #47	; 0x2f
   1327c:	beq	1328c <__mempcpy_chk@plt+0x1bfc>
   13280:	cmp	r0, #0
   13284:	bne	13270 <__mempcpy_chk@plt+0x1be0>
   13288:	b	132dc <__mempcpy_chk@plt+0x1c4c>
   1328c:	cmp	r8, #0
   13290:	beq	132b4 <__mempcpy_chk@plt+0x1c24>
   13294:	mov	r0, #1
   13298:	cmp	sl, #4
   1329c:	bcc	132d0 <__mempcpy_chk@plt+0x1c40>
   132a0:	movw	r0, #11823	; 0x2e2f
   132a4:	sub	sl, sl, #3
   132a8:	movt	r0, #46	; 0x2e
   132ac:	str	r0, [r8], #3
   132b0:	b	132cc <__mempcpy_chk@plt+0x1c3c>
   132b4:	movw	r0, #49588	; 0xc1b4
   132b8:	movt	r0, #2
   132bc:	ldr	r1, [r0]
   132c0:	mov	r0, r9
   132c4:	bl	11324 <fputs_unlocked@plt>
   132c8:	mov	r8, #0
   132cc:	mov	r0, #0
   132d0:	and	r1, r4, #1
   132d4:	orr	r4, r0, r1
   132d8:	b	13270 <__mempcpy_chk@plt+0x1be0>
   132dc:	ldr	r0, [sp]
   132e0:	ldrb	r0, [r6, r0]
   132e4:	and	r6, r4, #1
   132e8:	cmp	r0, #0
   132ec:	beq	13314 <__mempcpy_chk@plt+0x1c84>
   132f0:	cmp	r8, #0
   132f4:	beq	13350 <__mempcpy_chk@plt+0x1cc0>
   132f8:	mov	r4, #1
   132fc:	cmp	sl, #1
   13300:	bls	1337c <__mempcpy_chk@plt+0x1cec>
   13304:	mov	r0, #47	; 0x2f
   13308:	sub	sl, sl, #1
   1330c:	strh	r0, [r8], #1
   13310:	b	13380 <__mempcpy_chk@plt+0x1cf0>
   13314:	mov	r4, #1
   13318:	cmp	r6, #0
   1331c:	bne	133ac <__mempcpy_chk@plt+0x1d1c>
   13320:	b	133e4 <__mempcpy_chk@plt+0x1d54>
   13324:	sub	r2, r2, #1
   13328:	mov	r0, r2
   1332c:	cmp	r0, #0
   13330:	bne	131a0 <__mempcpy_chk@plt+0x1b10>
   13334:	b	13180 <__mempcpy_chk@plt+0x1af0>
   13338:	movw	r0, #49588	; 0xc1b4
   1333c:	movt	r0, #2
   13340:	ldr	r1, [r0]
   13344:	mov	r0, r5
   13348:	bl	11324 <fputs_unlocked@plt>
   1334c:	b	133e0 <__mempcpy_chk@plt+0x1d50>
   13350:	movw	r0, #49588	; 0xc1b4
   13354:	movt	r0, #2
   13358:	ldr	r1, [r0]
   1335c:	mov	r4, r0
   13360:	movw	r0, #46338	; 0xb502
   13364:	movt	r0, #1
   13368:	bl	11324 <fputs_unlocked@plt>
   1336c:	ldr	r1, [r4]
   13370:	mov	r0, r5
   13374:	bl	11324 <fputs_unlocked@plt>
   13378:	b	133a0 <__mempcpy_chk@plt+0x1d10>
   1337c:	mov	r6, #1
   13380:	mov	r0, r5
   13384:	bl	11504 <strlen@plt>
   13388:	cmp	r0, sl
   1338c:	bcs	133a4 <__mempcpy_chk@plt+0x1d14>
   13390:	add	r2, r0, #1
   13394:	mov	r0, r8
   13398:	mov	r1, r5
   1339c:	bl	113c0 <memcpy@plt>
   133a0:	mov	r4, #0
   133a4:	orrs	r0, r4, r6
   133a8:	beq	133e0 <__mempcpy_chk@plt+0x1d50>
   133ac:	movw	r1, #44908	; 0xaf6c
   133b0:	mov	r0, #0
   133b4:	mov	r2, #5
   133b8:	mov	r4, #0
   133bc:	movt	r1, #1
   133c0:	bl	113e4 <dcgettext@plt>
   133c4:	movw	r2, #46491	; 0xb59b
   133c8:	mov	r3, r0
   133cc:	mov	r0, #0
   133d0:	mov	r1, #36	; 0x24
   133d4:	movt	r2, #1
   133d8:	bl	11480 <error@plt>
   133dc:	b	133e4 <__mempcpy_chk@plt+0x1d54>
   133e0:	mov	r4, #1
   133e4:	mov	r0, r4
   133e8:	sub	sp, fp, #28
   133ec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   133f0:	push	{r4, sl, fp, lr}
   133f4:	add	fp, sp, #8
   133f8:	mov	r4, r0
   133fc:	cmp	r0, #0
   13400:	bne	1341c <__mempcpy_chk@plt+0x1d8c>
   13404:	movw	r0, #44948	; 0xaf94
   13408:	movt	r0, #1
   1340c:	bl	11498 <getenv@plt>
   13410:	mov	r4, r0
   13414:	cmp	r0, #0
   13418:	beq	13444 <__mempcpy_chk@plt+0x1db4>
   1341c:	ldrb	r0, [r4]
   13420:	cmp	r0, #0
   13424:	beq	13444 <__mempcpy_chk@plt+0x1db4>
   13428:	mov	r0, r4
   1342c:	bl	13bd0 <__mempcpy_chk@plt+0x2540>
   13430:	movw	r1, #44972	; 0xafac
   13434:	cmp	r4, r0
   13438:	movt	r1, #1
   1343c:	moveq	r1, r4
   13440:	b	1344c <__mempcpy_chk@plt+0x1dbc>
   13444:	movw	r1, #44972	; 0xafac
   13448:	movt	r1, #1
   1344c:	movw	r0, #49616	; 0xc1d0
   13450:	movt	r0, #2
   13454:	str	r1, [r0]
   13458:	pop	{r4, sl, fp, pc}
   1345c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13460:	add	fp, sp, #28
   13464:	sub	sp, sp, #76	; 0x4c
   13468:	str	r0, [sp, #52]	; 0x34
   1346c:	mov	r0, r1
   13470:	str	r3, [sp, #44]	; 0x2c
   13474:	str	r2, [fp, #-40]	; 0xffffffd8
   13478:	mov	r4, r1
   1347c:	bl	13bd0 <__mempcpy_chk@plt+0x2540>
   13480:	str	r4, [fp, #-44]	; 0xffffffd4
   13484:	sub	r4, r0, r4
   13488:	bl	13c1c <__mempcpy_chk@plt+0x258c>
   1348c:	mov	r5, r0
   13490:	add	r9, r4, r0
   13494:	movw	r0, #49616	; 0xc1d0
   13498:	str	r4, [fp, #-48]	; 0xffffffd0
   1349c:	movt	r0, #2
   134a0:	ldr	r0, [r0]
   134a4:	cmp	r0, #0
   134a8:	bne	134fc <__mempcpy_chk@plt+0x1e6c>
   134ac:	movw	r0, #44948	; 0xaf94
   134b0:	movt	r0, #1
   134b4:	bl	11498 <getenv@plt>
   134b8:	mov	r4, r0
   134bc:	movw	r0, #44972	; 0xafac
   134c0:	cmp	r4, #0
   134c4:	movt	r0, #1
   134c8:	ldrbne	r1, [r4]
   134cc:	cmpne	r1, #0
   134d0:	beq	134f0 <__mempcpy_chk@plt+0x1e60>
   134d4:	mov	r0, r4
   134d8:	bl	13bd0 <__mempcpy_chk@plt+0x2540>
   134dc:	mov	r1, r0
   134e0:	movw	r0, #44972	; 0xafac
   134e4:	movt	r0, #1
   134e8:	cmp	r4, r1
   134ec:	moveq	r0, r4
   134f0:	movw	r1, #49616	; 0xc1d0
   134f4:	movt	r1, #2
   134f8:	str	r0, [r1]
   134fc:	bl	11504 <strlen@plt>
   13500:	add	r0, r0, #1
   13504:	cmp	r0, #9
   13508:	str	r0, [sp, #36]	; 0x24
   1350c:	movle	r0, #9
   13510:	add	r0, r9, r0
   13514:	add	r0, r0, #1
   13518:	str	r0, [sp, #24]
   1351c:	bl	191e0 <__mempcpy_chk@plt+0x7b50>
   13520:	cmp	r0, #0
   13524:	beq	13a88 <__mempcpy_chk@plt+0x23f8>
   13528:	mov	r6, r0
   1352c:	mvn	r0, #99	; 0x63
   13530:	add	sl, r5, #2
   13534:	mov	r8, #0
   13538:	str	r5, [sp, #12]
   1353c:	str	r9, [sp, #48]	; 0x30
   13540:	str	r0, [fp, #-32]	; 0xffffffe0
   13544:	add	r0, r5, #23
   13548:	str	sl, [sp, #40]	; 0x28
   1354c:	str	r0, [sp, #8]
   13550:	add	r0, r9, #4
   13554:	str	r0, [sp, #4]
   13558:	add	r0, r5, #4
   1355c:	str	r0, [fp, #-36]	; 0xffffffdc
   13560:	mov	r0, #0
   13564:	str	r0, [sp, #28]
   13568:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1356c:	mov	r0, r6
   13570:	mov	r2, r9
   13574:	bl	113c0 <memcpy@plt>
   13578:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1357c:	cmp	r0, #1
   13580:	bne	135b0 <__mempcpy_chk@plt+0x1f20>
   13584:	movw	r1, #49616	; 0xc1d0
   13588:	ldr	r2, [sp, #36]	; 0x24
   1358c:	add	r0, r6, r9
   13590:	mov	sl, r6
   13594:	movt	r1, #2
   13598:	ldr	r1, [r1]
   1359c:	bl	113c0 <memcpy@plt>
   135a0:	mov	r0, #1
   135a4:	mov	r9, #0
   135a8:	str	r0, [fp, #-40]	; 0xffffffd8
   135ac:	b	139a8 <__mempcpy_chk@plt+0x2318>
   135b0:	cmp	r8, #0
   135b4:	beq	135c4 <__mempcpy_chk@plt+0x1f34>
   135b8:	mov	r0, r8
   135bc:	bl	11360 <rewinddir@plt>
   135c0:	b	13614 <__mempcpy_chk@plt+0x1f84>
   135c4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   135c8:	mov	r1, r6
   135cc:	mov	r2, #0
   135d0:	sub	r3, fp, #32
   135d4:	add	r4, r6, r0
   135d8:	mov	r0, #46	; 0x2e
   135dc:	ldrh	r5, [r4]
   135e0:	strh	r0, [r4]
   135e4:	ldr	r0, [sp, #52]	; 0x34
   135e8:	bl	15dcc <__mempcpy_chk@plt+0x473c>
   135ec:	cmp	r0, #0
   135f0:	beq	13644 <__mempcpy_chk@plt+0x1fb4>
   135f4:	movw	r1, #32302	; 0x7e2e
   135f8:	mov	r8, r0
   135fc:	mov	r0, r6
   13600:	strh	r5, [r4]
   13604:	movt	r1, #32305	; 0x7e31
   13608:	str	r1, [r0, r9]!
   1360c:	mov	r1, #0
   13610:	strb	r1, [r0, #4]
   13614:	mov	r0, r8
   13618:	bl	115f4 <readdir64@plt>
   1361c:	cmp	r0, #0
   13620:	beq	13698 <__mempcpy_chk@plt+0x2008>
   13624:	mov	r7, r0
   13628:	mov	r0, #1
   1362c:	str	r0, [sp, #20]
   13630:	mov	r0, #2
   13634:	str	r0, [sp, #32]
   13638:	ldr	r0, [sp, #24]
   1363c:	str	r0, [sp, #16]
   13640:	b	137cc <__mempcpy_chk@plt+0x213c>
   13644:	bl	1151c <__errno_location@plt>
   13648:	ldr	r0, [r0]
   1364c:	movw	r2, #32302	; 0x7e2e
   13650:	mov	r1, r6
   13654:	strh	r5, [r4]
   13658:	mov	r8, #0
   1365c:	movt	r2, #32305	; 0x7e31
   13660:	str	r2, [r1, r9]!
   13664:	strb	r8, [r1, #4]
   13668:	cmp	r0, #12
   1366c:	mov	r0, #2
   13670:	movweq	r0, #3
   13674:	cmp	r0, #1
   13678:	beq	138d0 <__mempcpy_chk@plt+0x2240>
   1367c:	cmp	r0, #2
   13680:	beq	13698 <__mempcpy_chk@plt+0x2008>
   13684:	mov	sl, r6
   13688:	mov	r9, #0
   1368c:	cmp	r0, #3
   13690:	bne	139a8 <__mempcpy_chk@plt+0x2318>
   13694:	b	13a64 <__mempcpy_chk@plt+0x23d4>
   13698:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1369c:	cmp	r0, #2
   136a0:	bne	138d0 <__mempcpy_chk@plt+0x2240>
   136a4:	movw	r1, #49616	; 0xc1d0
   136a8:	ldr	r2, [sp, #36]	; 0x24
   136ac:	add	r0, r6, r9
   136b0:	movt	r1, #2
   136b4:	ldr	r1, [r1]
   136b8:	bl	113c0 <memcpy@plt>
   136bc:	mov	r0, #1
   136c0:	str	r0, [fp, #-40]	; 0xffffffd8
   136c4:	b	138d0 <__mempcpy_chk@plt+0x2240>
   136c8:	ldr	r0, [sp, #20]
   136cc:	cmp	r0, r9
   136d0:	bge	13724 <__mempcpy_chk@plt+0x2094>
   136d4:	ldr	r0, [sp, #4]
   136d8:	add	r1, r9, r5
   136dc:	str	r1, [sp, #20]
   136e0:	add	r7, r0, r1
   136e4:	ldr	r0, [sp, #16]
   136e8:	cmp	r0, r7
   136ec:	bge	1374c <__mempcpy_chk@plt+0x20bc>
   136f0:	add	r0, r7, r7, asr #1
   136f4:	mov	sl, r6
   136f8:	cmp	r0, r7
   136fc:	movvc	r7, r0
   13700:	mov	r0, r6
   13704:	cmp	r7, #0
   13708:	mov	r1, r7
   1370c:	orreq	r1, r1, #1
   13710:	bl	19210 <__mempcpy_chk@plt+0x7b80>
   13714:	mov	r6, r0
   13718:	cmp	r0, #0
   1371c:	bne	13750 <__mempcpy_chk@plt+0x20c0>
   13720:	b	13a64 <__mempcpy_chk@plt+0x23d4>
   13724:	bne	138ac <__mempcpy_chk@plt+0x221c>
   13728:	ldr	r0, [sp, #48]	; 0x30
   1372c:	ldr	r2, [sp, #20]
   13730:	mov	r1, r4
   13734:	add	r0, r6, r0
   13738:	add	r0, r0, #2
   1373c:	bl	113d8 <memcmp@plt>
   13740:	cmp	r0, #0
   13744:	ble	136d4 <__mempcpy_chk@plt+0x2044>
   13748:	b	138ac <__mempcpy_chk@plt+0x221c>
   1374c:	mov	r7, r0
   13750:	ldr	r1, [sp, #48]	; 0x30
   13754:	movw	r2, #32302	; 0x7e2e
   13758:	str	r6, [sp, #32]
   1375c:	strh	r2, [r6, r1]!
   13760:	mov	r1, #48	; 0x30
   13764:	add	r2, r9, #2
   13768:	strb	r1, [r6, #2]!
   1376c:	mov	r1, r4
   13770:	add	r6, r6, r5
   13774:	mov	r0, r6
   13778:	bl	113c0 <memcpy@plt>
   1377c:	add	r0, r6, r9
   13780:	ldr	sl, [sp, #40]	; 0x28
   13784:	ldrb	r1, [r0, #-1]!
   13788:	cmp	r1, #57	; 0x39
   1378c:	bne	137b0 <__mempcpy_chk@plt+0x2120>
   13790:	ldr	r9, [sp, #48]	; 0x30
   13794:	ldr	r6, [sp, #32]
   13798:	mov	r2, #48	; 0x30
   1379c:	strb	r2, [r0]
   137a0:	ldrb	r1, [r0, #-1]!
   137a4:	cmp	r1, #57	; 0x39
   137a8:	beq	1379c <__mempcpy_chk@plt+0x210c>
   137ac:	b	137b8 <__mempcpy_chk@plt+0x2128>
   137b0:	ldr	r9, [sp, #48]	; 0x30
   137b4:	ldr	r6, [sp, #32]
   137b8:	add	r1, r1, #1
   137bc:	str	r5, [sp, #32]
   137c0:	str	r7, [sp, #16]
   137c4:	strb	r1, [r0]
   137c8:	b	138b0 <__mempcpy_chk@plt+0x2220>
   137cc:	ldr	r0, [fp, #-48]	; 0xffffffd0
   137d0:	add	r5, r6, r0
   137d4:	add	r4, r7, #19
   137d8:	mov	r0, r4
   137dc:	bl	11504 <strlen@plt>
   137e0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   137e4:	cmp	r0, r1
   137e8:	bcc	13804 <__mempcpy_chk@plt+0x2174>
   137ec:	mov	r0, r5
   137f0:	mov	r1, r4
   137f4:	mov	r2, sl
   137f8:	bl	113d8 <memcmp@plt>
   137fc:	cmp	r0, #0
   13800:	beq	1381c <__mempcpy_chk@plt+0x218c>
   13804:	mov	r0, r8
   13808:	bl	115f4 <readdir64@plt>
   1380c:	mov	r7, r0
   13810:	cmp	r0, #0
   13814:	bne	137d4 <__mempcpy_chk@plt+0x2144>
   13818:	b	138c4 <__mempcpy_chk@plt+0x2234>
   1381c:	ldr	r0, [sp, #12]
   13820:	add	r4, r7, r0
   13824:	ldrb	r0, [r4, #21]!
   13828:	sub	r1, r0, #49	; 0x31
   1382c:	uxtb	r1, r1
   13830:	cmp	r1, #8
   13834:	bhi	138b0 <__mempcpy_chk@plt+0x2220>
   13838:	sub	r0, r0, #57	; 0x39
   1383c:	sub	r1, r4, #2
   13840:	mov	r9, #1
   13844:	clz	r0, r0
   13848:	lsr	r5, r0, #5
   1384c:	ldrb	r0, [r1, #3]
   13850:	sub	r1, r0, #48	; 0x30
   13854:	cmp	r1, #9
   13858:	bhi	13894 <__mempcpy_chk@plt+0x2204>
   1385c:	ldr	r1, [sp, #8]
   13860:	add	r2, r7, r1
   13864:	mov	r1, #0
   13868:	mvn	r7, #56	; 0x38
   1386c:	uxtab	r0, r7, r0
   13870:	clz	r0, r0
   13874:	lsr	r0, r0, #5
   13878:	and	r5, r0, r5
   1387c:	ldrb	r0, [r2, r1]
   13880:	add	r1, r1, #1
   13884:	sub	r3, r0, #48	; 0x30
   13888:	cmp	r3, #10
   1388c:	bcc	1386c <__mempcpy_chk@plt+0x21dc>
   13890:	add	r9, r1, #1
   13894:	cmp	r0, #126	; 0x7e
   13898:	bne	138ac <__mempcpy_chk@plt+0x221c>
   1389c:	add	r0, r4, r9
   138a0:	ldrb	r0, [r0, #1]
   138a4:	cmp	r0, #0
   138a8:	beq	136c8 <__mempcpy_chk@plt+0x2038>
   138ac:	ldr	r9, [sp, #48]	; 0x30
   138b0:	mov	r0, r8
   138b4:	bl	115f4 <readdir64@plt>
   138b8:	mov	r7, r0
   138bc:	cmp	r0, #0
   138c0:	bne	137cc <__mempcpy_chk@plt+0x213c>
   138c4:	ldr	r0, [sp, #32]
   138c8:	cmp	r0, #1
   138cc:	bne	1367c <__mempcpy_chk@plt+0x1fec>
   138d0:	ldr	r4, [fp, #-32]	; 0xffffffe0
   138d4:	mov	r0, r6
   138d8:	mov	sl, r6
   138dc:	bl	13bd0 <__mempcpy_chk@plt+0x2540>
   138e0:	mov	r7, r0
   138e4:	bl	13c1c <__mempcpy_chk@plt+0x258c>
   138e8:	mov	r9, #0
   138ec:	cmp	r0, #15
   138f0:	blt	139a8 <__mempcpy_chk@plt+0x2318>
   138f4:	ldr	r1, [sp, #28]
   138f8:	mov	r5, r0
   138fc:	cmp	r1, #0
   13900:	bne	13978 <__mempcpy_chk@plt+0x22e8>
   13904:	cmn	r4, #1
   13908:	ble	13930 <__mempcpy_chk@plt+0x22a0>
   1390c:	bl	1151c <__errno_location@plt>
   13910:	mov	r6, r0
   13914:	mov	r0, #0
   13918:	mov	r1, #3
   1391c:	str	r0, [r6]
   13920:	mov	r0, r4
   13924:	bl	1154c <fpathconf@plt>
   13928:	ldr	r1, [r6]
   1392c:	b	13960 <__mempcpy_chk@plt+0x22d0>
   13930:	ldrh	r6, [r7]
   13934:	mov	r0, #46	; 0x2e
   13938:	strh	r0, [r7]
   1393c:	bl	1151c <__errno_location@plt>
   13940:	mov	r4, r0
   13944:	mov	r0, #0
   13948:	mov	r1, #3
   1394c:	str	r0, [r4]
   13950:	mov	r0, sl
   13954:	bl	11354 <pathconf@plt>
   13958:	ldr	r1, [r4]
   1395c:	strh	r6, [r7]
   13960:	cmp	r1, #0
   13964:	subeq	r0, r0, #1
   13968:	cmn	r0, #1
   1396c:	mov	r1, r0
   13970:	movwne	r1, #14
   13974:	movgt	r1, r0
   13978:	cmp	r5, r1
   1397c:	str	r1, [sp, #28]
   13980:	ble	139a8 <__mempcpy_chk@plt+0x2318>
   13984:	ldr	r0, [sp, #48]	; 0x30
   13988:	mov	r9, #1
   1398c:	add	r0, sl, r0
   13990:	sub	r0, r0, r7
   13994:	cmp	r1, r0
   13998:	suble	r0, r1, #1
   1399c:	mov	r1, #126	; 0x7e
   139a0:	add	r0, r7, r0
   139a4:	strh	r1, [r0]
   139a8:	ldr	r0, [sp, #44]	; 0x2c
   139ac:	cmp	r0, #0
   139b0:	beq	13a48 <__mempcpy_chk@plt+0x23b8>
   139b4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   139b8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   139bc:	ldr	r1, [sp, #52]	; 0x34
   139c0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   139c4:	subs	r0, r0, #1
   139c8:	movwne	r0, #1
   139cc:	cmp	r2, #0
   139d0:	str	r0, [sp]
   139d4:	mov	r0, r2
   139d8:	movwlt	r3, #0
   139dc:	movlt	r0, r1
   139e0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   139e4:	add	r1, r1, r3
   139e8:	add	r3, sl, r3
   139ec:	bl	17b94 <__mempcpy_chk@plt+0x6504>
   139f0:	cmp	r0, #0
   139f4:	beq	13a48 <__mempcpy_chk@plt+0x23b8>
   139f8:	mvn	r7, r9
   139fc:	bl	1151c <__errno_location@plt>
   13a00:	ldr	r5, [r0]
   13a04:	mov	r4, r0
   13a08:	mov	r6, sl
   13a0c:	ldr	r9, [sp, #48]	; 0x30
   13a10:	ldr	sl, [sp, #40]	; 0x28
   13a14:	sub	r0, r5, #17
   13a18:	clz	r0, r0
   13a1c:	lsr	r0, r0, #5
   13a20:	tst	r7, r0
   13a24:	bne	13568 <__mempcpy_chk@plt+0x1ed8>
   13a28:	cmp	r8, #0
   13a2c:	beq	13a38 <__mempcpy_chk@plt+0x23a8>
   13a30:	mov	r0, r8
   13a34:	bl	11678 <closedir@plt>
   13a38:	mov	r0, r6
   13a3c:	bl	148e8 <__mempcpy_chk@plt+0x3258>
   13a40:	str	r5, [r4]
   13a44:	b	13a88 <__mempcpy_chk@plt+0x23f8>
   13a48:	cmp	r8, #0
   13a4c:	beq	13a58 <__mempcpy_chk@plt+0x23c8>
   13a50:	mov	r0, r8
   13a54:	bl	11678 <closedir@plt>
   13a58:	mov	r0, sl
   13a5c:	sub	sp, fp, #28
   13a60:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13a64:	cmp	r8, #0
   13a68:	beq	13a74 <__mempcpy_chk@plt+0x23e4>
   13a6c:	mov	r0, r8
   13a70:	bl	11678 <closedir@plt>
   13a74:	mov	r0, sl
   13a78:	bl	148e8 <__mempcpy_chk@plt+0x3258>
   13a7c:	bl	1151c <__errno_location@plt>
   13a80:	mov	r1, #12
   13a84:	str	r1, [r0]
   13a88:	mov	r0, #0
   13a8c:	sub	sp, fp, #28
   13a90:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13a94:	push	{fp, lr}
   13a98:	mov	fp, sp
   13a9c:	mov	r3, #0
   13aa0:	bl	1345c <__mempcpy_chk@plt+0x1dcc>
   13aa4:	cmp	r0, #0
   13aa8:	popne	{fp, pc}
   13aac:	bl	190cc <__mempcpy_chk@plt+0x7a3c>
   13ab0:	cmp	r1, #0
   13ab4:	mov	r2, #2
   13ab8:	ldrbne	r3, [r1]
   13abc:	cmpne	r3, #0
   13ac0:	bne	13acc <__mempcpy_chk@plt+0x243c>
   13ac4:	mov	r0, r2
   13ac8:	bx	lr
   13acc:	push	{r4, sl, fp, lr}
   13ad0:	add	fp, sp, #8
   13ad4:	sub	sp, sp, #16
   13ad8:	movw	r2, #49552	; 0xc190
   13adc:	mov	r4, #4
   13ae0:	mov	r3, #1
   13ae4:	movt	r2, #2
   13ae8:	str	r4, [sp]
   13aec:	movw	r4, #44976	; 0xafb0
   13af0:	ldr	r2, [r2]
   13af4:	movt	r4, #1
   13af8:	stmib	sp, {r2, r3}
   13afc:	movw	r2, #45008	; 0xafd0
   13b00:	mov	r3, r4
   13b04:	movt	r2, #1
   13b08:	bl	1954c <__mempcpy_chk@plt+0x7ebc>
   13b0c:	ldr	r2, [r4, r0, lsl #2]
   13b10:	sub	sp, fp, #8
   13b14:	pop	{r4, sl, fp, lr}
   13b18:	mov	r0, r2
   13b1c:	bx	lr
   13b20:	push	{r4, sl, fp, lr}
   13b24:	add	fp, sp, #8
   13b28:	sub	sp, sp, #16
   13b2c:	cmp	r1, #0
   13b30:	ldrbne	r2, [r1]
   13b34:	cmpne	r2, #0
   13b38:	bne	13b68 <__mempcpy_chk@plt+0x24d8>
   13b3c:	movw	r0, #45045	; 0xaff5
   13b40:	movt	r0, #1
   13b44:	bl	11498 <getenv@plt>
   13b48:	mov	r1, r0
   13b4c:	mov	r0, #2
   13b50:	cmp	r1, #0
   13b54:	ldrbne	r2, [r1]
   13b58:	cmpne	r2, #0
   13b5c:	bne	13b88 <__mempcpy_chk@plt+0x24f8>
   13b60:	sub	sp, fp, #8
   13b64:	pop	{r4, sl, fp, pc}
   13b68:	movw	r2, #49552	; 0xc190
   13b6c:	mov	r4, #4
   13b70:	mov	r3, #1
   13b74:	movt	r2, #2
   13b78:	str	r4, [sp]
   13b7c:	ldr	r2, [r2]
   13b80:	stmib	sp, {r2, r3}
   13b84:	b	13bac <__mempcpy_chk@plt+0x251c>
   13b88:	movw	r0, #49552	; 0xc190
   13b8c:	mov	r3, #4
   13b90:	mov	r2, #1
   13b94:	movt	r0, #2
   13b98:	str	r3, [sp]
   13b9c:	ldr	r0, [r0]
   13ba0:	stmib	sp, {r0, r2}
   13ba4:	movw	r0, #45044	; 0xaff4
   13ba8:	movt	r0, #1
   13bac:	movw	r4, #44976	; 0xafb0
   13bb0:	movw	r2, #45008	; 0xafd0
   13bb4:	movt	r4, #1
   13bb8:	movt	r2, #1
   13bbc:	mov	r3, r4
   13bc0:	bl	1954c <__mempcpy_chk@plt+0x7ebc>
   13bc4:	ldr	r0, [r4, r0, lsl #2]
   13bc8:	sub	sp, fp, #8
   13bcc:	pop	{r4, sl, fp, pc}
   13bd0:	sub	r0, r0, #1
   13bd4:	ldrb	r3, [r0, #1]!
   13bd8:	cmp	r3, #47	; 0x2f
   13bdc:	beq	13bd4 <__mempcpy_chk@plt+0x2544>
   13be0:	mov	r2, #0
   13be4:	mov	r1, r0
   13be8:	b	13c04 <__mempcpy_chk@plt+0x2574>
   13bec:	cmp	r3, #0
   13bf0:	bxeq	lr
   13bf4:	tst	r2, #1
   13bf8:	mov	r2, #0
   13bfc:	movne	r0, r1
   13c00:	ldrb	r3, [r1, #1]!
   13c04:	uxtb	r3, r3
   13c08:	cmp	r3, #47	; 0x2f
   13c0c:	bne	13bec <__mempcpy_chk@plt+0x255c>
   13c10:	ldrb	r3, [r1, #1]!
   13c14:	mov	r2, #1
   13c18:	b	13c04 <__mempcpy_chk@plt+0x2574>
   13c1c:	push	{r4, sl, fp, lr}
   13c20:	add	fp, sp, #8
   13c24:	mov	r4, r0
   13c28:	bl	11504 <strlen@plt>
   13c2c:	mov	r1, r0
   13c30:	sub	r2, r4, #1
   13c34:	mov	r0, r1
   13c38:	cmp	r1, #2
   13c3c:	popcc	{r4, sl, fp, pc}
   13c40:	ldrb	r3, [r2, r0]
   13c44:	sub	r1, r0, #1
   13c48:	cmp	r3, #47	; 0x2f
   13c4c:	beq	13c34 <__mempcpy_chk@plt+0x25a4>
   13c50:	pop	{r4, sl, fp, pc}
   13c54:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13c58:	add	fp, sp, #28
   13c5c:	sub	sp, sp, #180	; 0xb4
   13c60:	sub	sp, sp, #3072	; 0xc00
   13c64:	mov	r8, r0
   13c68:	and	r7, r1, #3
   13c6c:	sub	r0, r1, #1
   13c70:	tst	r0, r7
   13c74:	beq	13c94 <__mempcpy_chk@plt+0x2604>
   13c78:	bl	1151c <__errno_location@plt>
   13c7c:	mov	r1, #22
   13c80:	mov	r4, #0
   13c84:	str	r1, [r0]
   13c88:	mov	r0, r4
   13c8c:	sub	sp, fp, #28
   13c90:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13c94:	cmp	r8, #0
   13c98:	beq	13c78 <__mempcpy_chk@plt+0x25e8>
   13c9c:	ldrb	r0, [r8]
   13ca0:	cmp	r0, #0
   13ca4:	beq	13d1c <__mempcpy_chk@plt+0x268c>
   13ca8:	sub	lr, fp, #1024	; 0x400
   13cac:	mov	r4, r1
   13cb0:	mov	r1, #1024	; 0x400
   13cb4:	cmp	r0, #47	; 0x2f
   13cb8:	sub	r2, lr, #40	; 0x28
   13cbc:	str	r1, [fp, #-1060]	; 0xfffffbdc
   13cc0:	add	r2, r2, #8
   13cc4:	str	r2, [sp, #12]
   13cc8:	str	r2, [fp, #-1064]	; 0xfffffbd8
   13ccc:	add	r2, sp, #1184	; 0x4a0
   13cd0:	add	r2, r2, #8
   13cd4:	str	r2, [sp, #1184]	; 0x4a0
   13cd8:	str	r2, [sp, #16]
   13cdc:	add	r2, sp, #48	; 0x30
   13ce0:	str	r1, [sp, #1188]	; 0x4a4
   13ce4:	add	r5, r2, #8
   13ce8:	mov	r0, r5
   13cec:	str	r5, [sp, #48]	; 0x30
   13cf0:	str	r1, [sp, #52]	; 0x34
   13cf4:	str	r5, [sp, #8]
   13cf8:	bne	13d28 <__mempcpy_chk@plt+0x2698>
   13cfc:	mov	r1, r8
   13d00:	mov	r2, #0
   13d04:	mov	r3, #1024	; 0x400
   13d08:	bl	11690 <__mempcpy_chk@plt>
   13d0c:	mov	r6, r0
   13d10:	mov	r0, #47	; 0x2f
   13d14:	strb	r0, [r6], #1
   13d18:	b	13d48 <__mempcpy_chk@plt+0x26b8>
   13d1c:	bl	1151c <__errno_location@plt>
   13d20:	mov	r1, #2
   13d24:	b	13c80 <__mempcpy_chk@plt+0x25f0>
   13d28:	mov	r1, #1024	; 0x400
   13d2c:	bl	114ec <getcwd@plt>
   13d30:	cmp	r0, #0
   13d34:	beq	14258 <__mempcpy_chk@plt+0x2bc8>
   13d38:	mov	r0, r5
   13d3c:	mov	r1, #0
   13d40:	bl	11408 <rawmemchr@plt>
   13d44:	mov	r6, r0
   13d48:	ldrb	r0, [r8]
   13d4c:	cmp	r0, #0
   13d50:	beq	1421c <__mempcpy_chk@plt+0x2b8c>
   13d54:	and	r1, r4, #4
   13d58:	add	r9, sp, #48	; 0x30
   13d5c:	str	r7, [sp, #32]
   13d60:	str	r1, [sp, #40]	; 0x28
   13d64:	mov	r1, #0
   13d68:	str	r1, [sp, #24]
   13d6c:	mov	r1, #0
   13d70:	str	r1, [sp, #36]	; 0x24
   13d74:	mov	r1, #0
   13d78:	str	r1, [sp, #20]
   13d7c:	b	141c4 <__mempcpy_chk@plt+0x2b34>
   13d80:	uxtb	r0, r0
   13d84:	cmp	r0, #46	; 0x2e
   13d88:	ldrbeq	r0, [r8, #1]
   13d8c:	cmpeq	r0, #46	; 0x2e
   13d90:	bne	13dd0 <__mempcpy_chk@plt+0x2740>
   13d94:	add	r0, r5, #1
   13d98:	cmp	r6, r0
   13d9c:	bls	13ec4 <__mempcpy_chk@plt+0x2834>
   13da0:	sub	r0, r6, #1
   13da4:	mov	r6, r0
   13da8:	cmp	r0, r5
   13dac:	bls	13ec4 <__mempcpy_chk@plt+0x2834>
   13db0:	mov	r0, r6
   13db4:	ldrb	r1, [r0, #-1]!
   13db8:	cmp	r1, #47	; 0x2f
   13dbc:	bne	13da4 <__mempcpy_chk@plt+0x2714>
   13dc0:	b	13ec4 <__mempcpy_chk@plt+0x2834>
   13dc4:	uxtb	r0, r0
   13dc8:	cmp	r0, #46	; 0x2e
   13dcc:	beq	13ec4 <__mempcpy_chk@plt+0x2834>
   13dd0:	ldrb	r0, [r6, #-1]
   13dd4:	add	r4, r2, #2
   13dd8:	str	r2, [sp, #44]	; 0x2c
   13ddc:	cmp	r0, #47	; 0x2f
   13de0:	movne	r0, #47	; 0x2f
   13de4:	strbne	r0, [r6], #1
   13de8:	ldr	r0, [sp, #52]	; 0x34
   13dec:	add	r0, r5, r0
   13df0:	sub	r0, r0, r6
   13df4:	cmp	r0, r4
   13df8:	bcs	13e30 <__mempcpy_chk@plt+0x27a0>
   13dfc:	mov	r0, r9
   13e00:	bl	17fd4 <__mempcpy_chk@plt+0x6944>
   13e04:	cmp	r0, #0
   13e08:	beq	1431c <__mempcpy_chk@plt+0x2c8c>
   13e0c:	sub	r0, r6, r5
   13e10:	ldr	r5, [sp, #48]	; 0x30
   13e14:	ldr	r1, [sp, #52]	; 0x34
   13e18:	add	r6, r5, r0
   13e1c:	add	r0, r5, r1
   13e20:	sub	r0, r0, r6
   13e24:	cmp	r0, r4
   13e28:	bcc	13dfc <__mempcpy_chk@plt+0x276c>
   13e2c:	ldr	r2, [sp, #44]	; 0x2c
   13e30:	mov	r0, r6
   13e34:	mov	r1, r8
   13e38:	mvn	r3, #0
   13e3c:	bl	11690 <__mempcpy_chk@plt>
   13e40:	mov	r6, r0
   13e44:	mov	r0, #0
   13e48:	strb	r0, [r6]
   13e4c:	ldr	r0, [sp, #40]	; 0x28
   13e50:	cmp	r0, #0
   13e54:	bne	13eb8 <__mempcpy_chk@plt+0x2828>
   13e58:	ldr	r0, [sp, #1188]	; 0x4a4
   13e5c:	ldr	r7, [sp, #1184]	; 0x4a0
   13e60:	sub	r9, r0, #1
   13e64:	mov	r0, r5
   13e68:	mov	r1, r7
   13e6c:	mov	r2, r9
   13e70:	bl	1142c <readlink@plt>
   13e74:	cmp	r0, r9
   13e78:	blt	13e90 <__mempcpy_chk@plt+0x2800>
   13e7c:	add	r0, sp, #1184	; 0x4a0
   13e80:	bl	17f64 <__mempcpy_chk@plt+0x68d4>
   13e84:	cmp	r0, #0
   13e88:	bne	13e58 <__mempcpy_chk@plt+0x27c8>
   13e8c:	b	1431c <__mempcpy_chk@plt+0x2c8c>
   13e90:	mov	r4, r0
   13e94:	cmp	r0, #0
   13e98:	add	r9, sp, #48	; 0x30
   13e9c:	blt	13eb8 <__mempcpy_chk@plt+0x2828>
   13ea0:	ldr	r0, [sp, #24]
   13ea4:	cmp	r0, #19
   13ea8:	bgt	13f4c <__mempcpy_chk@plt+0x28bc>
   13eac:	add	r0, r0, #1
   13eb0:	str	r0, [sp, #24]
   13eb4:	b	140b4 <__mempcpy_chk@plt+0x2a24>
   13eb8:	ldr	r7, [sp, #32]
   13ebc:	cmp	r7, #2
   13ec0:	bne	13ed8 <__mempcpy_chk@plt+0x2848>
   13ec4:	mov	r8, sl
   13ec8:	ldrb	r0, [r8]
   13ecc:	cmp	r0, #0
   13ed0:	bne	141c4 <__mempcpy_chk@plt+0x2b34>
   13ed4:	b	14224 <__mempcpy_chk@plt+0x2b94>
   13ed8:	ldrb	r0, [sl]
   13edc:	cmp	r0, #47	; 0x2f
   13ee0:	bne	1401c <__mempcpy_chk@plt+0x298c>
   13ee4:	mov	r2, sl
   13ee8:	mov	r1, r2
   13eec:	ldrb	r3, [r2, #1]!
   13ef0:	cmp	r3, #47	; 0x2f
   13ef4:	beq	13ee8 <__mempcpy_chk@plt+0x2858>
   13ef8:	cmp	r3, #46	; 0x2e
   13efc:	bne	14014 <__mempcpy_chk@plt+0x2984>
   13f00:	add	r2, r1, #2
   13f04:	ldrb	r3, [r2]
   13f08:	cmp	r3, #47	; 0x2f
   13f0c:	beq	13ee8 <__mempcpy_chk@plt+0x2858>
   13f10:	cmp	r3, #0
   13f14:	beq	13f30 <__mempcpy_chk@plt+0x28a0>
   13f18:	cmp	r3, #46	; 0x2e
   13f1c:	bne	1401c <__mempcpy_chk@plt+0x298c>
   13f20:	ldrb	r1, [r1, #3]
   13f24:	cmp	r1, #47	; 0x2f
   13f28:	cmpne	r1, #0
   13f2c:	bne	1401c <__mempcpy_chk@plt+0x298c>
   13f30:	mov	r0, #47	; 0x2f
   13f34:	mov	r1, r5
   13f38:	mov	r2, #0
   13f3c:	mov	r3, #512	; 0x200
   13f40:	strh	r0, [r6]
   13f44:	mvn	r0, #99	; 0x63
   13f48:	b	14040 <__mempcpy_chk@plt+0x29b0>
   13f4c:	ldrb	r0, [r8]
   13f50:	cmp	r0, #0
   13f54:	beq	140b4 <__mempcpy_chk@plt+0x2a24>
   13f58:	ldr	r9, [sp, #44]	; 0x2c
   13f5c:	mov	r0, #0
   13f60:	add	lr, sp, #1024	; 0x400
   13f64:	mov	r1, r5
   13f68:	add	r2, lr, #56	; 0x38
   13f6c:	strb	r0, [r6, -r9]
   13f70:	ldrb	r0, [r5]
   13f74:	cmp	r0, #0
   13f78:	movw	r0, #44906	; 0xaf6a
   13f7c:	movt	r0, #1
   13f80:	moveq	r1, r0
   13f84:	mov	r0, #3
   13f88:	bl	1163c <__xstat64@plt>
   13f8c:	cmp	r0, #0
   13f90:	bne	1432c <__mempcpy_chk@plt+0x2c9c>
   13f94:	rsb	r0, r9, #0
   13f98:	ldr	r9, [sp, #20]
   13f9c:	ldrb	r1, [r8]
   13fa0:	cmp	r9, #0
   13fa4:	strb	r1, [r6, r0]
   13fa8:	bne	13fe0 <__mempcpy_chk@plt+0x2950>
   13fac:	movw	r0, #23912	; 0x5d68
   13fb0:	movw	r2, #23768	; 0x5cd8
   13fb4:	movw	r3, #23824	; 0x5d10
   13fb8:	mov	r1, #0
   13fbc:	movt	r0, #1
   13fc0:	movt	r2, #1
   13fc4:	movt	r3, #1
   13fc8:	str	r0, [sp]
   13fcc:	mov	r0, #7
   13fd0:	bl	14e40 <__mempcpy_chk@plt+0x37b0>
   13fd4:	mov	r9, r0
   13fd8:	cmp	r0, #0
   13fdc:	beq	1431c <__mempcpy_chk@plt+0x2c8c>
   13fe0:	add	lr, sp, #1024	; 0x400
   13fe4:	mov	r0, r9
   13fe8:	mov	r1, r8
   13fec:	add	r2, lr, #56	; 0x38
   13ff0:	bl	14768 <__mempcpy_chk@plt+0x30d8>
   13ff4:	cmp	r0, #0
   13ff8:	str	r9, [sp, #20]
   13ffc:	beq	140a0 <__mempcpy_chk@plt+0x2a10>
   14000:	ldr	r7, [sp, #32]
   14004:	cmp	r7, #2
   14008:	bne	14320 <__mempcpy_chk@plt+0x2c90>
   1400c:	mov	r8, sl
   14010:	b	14180 <__mempcpy_chk@plt+0x2af0>
   14014:	cmp	r3, #0
   14018:	beq	13f30 <__mempcpy_chk@plt+0x28a0>
   1401c:	ldr	r1, [sp, #40]	; 0x28
   14020:	cmp	r1, #0
   14024:	beq	14050 <__mempcpy_chk@plt+0x29c0>
   14028:	cmp	r0, #0
   1402c:	bne	13ec4 <__mempcpy_chk@plt+0x2834>
   14030:	mvn	r0, #99	; 0x63
   14034:	mov	r1, r5
   14038:	mov	r2, #0
   1403c:	mov	r3, #512	; 0x200
   14040:	bl	1139c <faccessat@plt>
   14044:	cmp	r0, #0
   14048:	bne	14060 <__mempcpy_chk@plt+0x29d0>
   1404c:	b	13ec4 <__mempcpy_chk@plt+0x2834>
   14050:	bl	1151c <__errno_location@plt>
   14054:	ldr	r0, [r0]
   14058:	cmp	r0, #22
   1405c:	beq	13ec4 <__mempcpy_chk@plt+0x2834>
   14060:	mov	r4, #1
   14064:	cmp	r7, #1
   14068:	bne	14244 <__mempcpy_chk@plt+0x2bb4>
   1406c:	bl	1151c <__errno_location@plt>
   14070:	ldr	r0, [r0]
   14074:	cmp	r0, #2
   14078:	bne	14244 <__mempcpy_chk@plt+0x2bb4>
   1407c:	movw	r1, #46338	; 0xb502
   14080:	mov	r0, sl
   14084:	movt	r1, #1
   14088:	bl	11684 <strspn@plt>
   1408c:	ldrb	r0, [sl, r0]
   14090:	mov	r8, sl
   14094:	cmp	r0, #0
   14098:	beq	13ec8 <__mempcpy_chk@plt+0x2838>
   1409c:	b	14244 <__mempcpy_chk@plt+0x2bb4>
   140a0:	add	lr, sp, #1024	; 0x400
   140a4:	mov	r0, r9
   140a8:	mov	r1, r8
   140ac:	add	r2, lr, #56	; 0x38
   140b0:	bl	146ec <__mempcpy_chk@plt+0x305c>
   140b4:	mov	r0, #0
   140b8:	strb	r0, [r7, r4]
   140bc:	ldr	r0, [sp, #36]	; 0x24
   140c0:	ldr	r8, [fp, #-1064]	; 0xfffffbd8
   140c4:	tst	r0, #1
   140c8:	ldr	r0, [sp, #28]
   140cc:	subne	r0, sl, r8
   140d0:	str	r0, [sp, #28]
   140d4:	mov	r0, sl
   140d8:	bl	11504 <strlen@plt>
   140dc:	adds	r9, r0, r4
   140e0:	str	r0, [sp, #44]	; 0x2c
   140e4:	bcs	1431c <__mempcpy_chk@plt+0x2c8c>
   140e8:	ldr	r0, [fp, #-1060]	; 0xfffffbdc
   140ec:	cmp	r0, r9
   140f0:	bhi	14118 <__mempcpy_chk@plt+0x2a88>
   140f4:	sub	lr, fp, #1024	; 0x400
   140f8:	sub	r0, lr, #40	; 0x28
   140fc:	bl	17fd4 <__mempcpy_chk@plt+0x6944>
   14100:	cmp	r0, #0
   14104:	beq	1431c <__mempcpy_chk@plt+0x2c8c>
   14108:	ldr	r0, [fp, #-1060]	; 0xfffffbdc
   1410c:	cmp	r0, r9
   14110:	bls	140f4 <__mempcpy_chk@plt+0x2a64>
   14114:	ldr	r8, [fp, #-1064]	; 0xfffffbd8
   14118:	ldr	r0, [sp, #36]	; 0x24
   1411c:	ldr	r1, [sp, #44]	; 0x2c
   14120:	tst	r0, #1
   14124:	ldr	r0, [sp, #28]
   14128:	add	r2, r1, #1
   1412c:	addne	sl, r8, r0
   14130:	add	r0, r8, r4
   14134:	mov	r1, sl
   14138:	bl	11384 <memmove@plt>
   1413c:	mov	r0, r8
   14140:	mov	r1, r7
   14144:	mov	r2, r4
   14148:	bl	113c0 <memcpy@plt>
   1414c:	ldrb	r0, [r7]
   14150:	cmp	r0, #47	; 0x2f
   14154:	bne	14188 <__mempcpy_chk@plt+0x2af8>
   14158:	mov	r0, r5
   1415c:	mov	r1, r7
   14160:	mov	r2, #0
   14164:	mvn	r3, #0
   14168:	bl	11690 <__mempcpy_chk@plt>
   1416c:	mov	r6, r0
   14170:	mov	r0, #47	; 0x2f
   14174:	strb	r0, [r6], #1
   14178:	mov	r0, #1
   1417c:	str	r0, [sp, #36]	; 0x24
   14180:	add	r9, sp, #48	; 0x30
   14184:	b	13ec8 <__mempcpy_chk@plt+0x2838>
   14188:	add	r0, r5, #1
   1418c:	mov	r1, #1
   14190:	add	r9, sp, #48	; 0x30
   14194:	cmp	r6, r0
   14198:	str	r1, [sp, #36]	; 0x24
   1419c:	bls	13ec8 <__mempcpy_chk@plt+0x2838>
   141a0:	sub	r0, r6, #1
   141a4:	mov	r6, r0
   141a8:	cmp	r0, r5
   141ac:	bls	13ec8 <__mempcpy_chk@plt+0x2838>
   141b0:	mov	r0, r6
   141b4:	ldrb	r1, [r0, #-1]!
   141b8:	cmp	r1, #47	; 0x2f
   141bc:	bne	141a4 <__mempcpy_chk@plt+0x2b14>
   141c0:	b	13ec8 <__mempcpy_chk@plt+0x2838>
   141c4:	uxtb	r1, r0
   141c8:	cmp	r1, #47	; 0x2f
   141cc:	bne	141dc <__mempcpy_chk@plt+0x2b4c>
   141d0:	ldrb	r0, [r8, #1]!
   141d4:	cmp	r0, #47	; 0x2f
   141d8:	beq	141d0 <__mempcpy_chk@plt+0x2b40>
   141dc:	mov	r1, r0
   141e0:	mov	sl, r8
   141e4:	b	141ec <__mempcpy_chk@plt+0x2b5c>
   141e8:	ldrb	r1, [sl, #1]!
   141ec:	uxtb	r1, r1
   141f0:	cmp	r1, #0
   141f4:	cmpne	r1, #47	; 0x2f
   141f8:	bne	141e8 <__mempcpy_chk@plt+0x2b58>
   141fc:	sub	r2, sl, r8
   14200:	cmp	r2, #1
   14204:	beq	13dc4 <__mempcpy_chk@plt+0x2734>
   14208:	cmp	r2, #2
   1420c:	beq	13d80 <__mempcpy_chk@plt+0x26f0>
   14210:	cmp	r2, #0
   14214:	bne	13dd0 <__mempcpy_chk@plt+0x2740>
   14218:	b	14224 <__mempcpy_chk@plt+0x2b94>
   1421c:	mov	r0, #0
   14220:	str	r0, [sp, #20]
   14224:	add	r0, r5, #1
   14228:	cmp	r6, r0
   1422c:	bls	14240 <__mempcpy_chk@plt+0x2bb0>
   14230:	mov	r0, r6
   14234:	ldrb	r1, [r0, #-1]!
   14238:	cmp	r1, #47	; 0x2f
   1423c:	moveq	r6, r0
   14240:	mov	r4, #0
   14244:	ldr	r0, [sp, #20]
   14248:	cmp	r0, #0
   1424c:	beq	142b0 <__mempcpy_chk@plt+0x2c20>
   14250:	bl	15138 <__mempcpy_chk@plt+0x3aa8>
   14254:	b	142b0 <__mempcpy_chk@plt+0x2c20>
   14258:	bl	1151c <__errno_location@plt>
   1425c:	ldr	r5, [sp, #8]
   14260:	mov	r6, r0
   14264:	add	r9, sp, #48	; 0x30
   14268:	ldr	r0, [r6]
   1426c:	cmp	r0, #34	; 0x22
   14270:	bne	142a0 <__mempcpy_chk@plt+0x2c10>
   14274:	mov	r0, r9
   14278:	bl	17f64 <__mempcpy_chk@plt+0x68d4>
   1427c:	cmp	r0, #0
   14280:	beq	1431c <__mempcpy_chk@plt+0x2c8c>
   14284:	ldr	r5, [sp, #48]	; 0x30
   14288:	ldr	r1, [sp, #52]	; 0x34
   1428c:	mov	r0, r5
   14290:	bl	114ec <getcwd@plt>
   14294:	cmp	r0, #0
   14298:	beq	14268 <__mempcpy_chk@plt+0x2bd8>
   1429c:	b	13d38 <__mempcpy_chk@plt+0x26a8>
   142a0:	cmp	r0, #12
   142a4:	beq	1431c <__mempcpy_chk@plt+0x2c8c>
   142a8:	mov	r4, #1
   142ac:	mov	r6, r5
   142b0:	ldr	r0, [fp, #-1064]	; 0xfffffbd8
   142b4:	ldr	r1, [sp, #12]
   142b8:	cmp	r0, r1
   142bc:	beq	142c4 <__mempcpy_chk@plt+0x2c34>
   142c0:	bl	148e8 <__mempcpy_chk@plt+0x3258>
   142c4:	ldr	r0, [sp, #1184]	; 0x4a0
   142c8:	ldr	r1, [sp, #16]
   142cc:	cmp	r0, r1
   142d0:	beq	142d8 <__mempcpy_chk@plt+0x2c48>
   142d4:	bl	148e8 <__mempcpy_chk@plt+0x3258>
   142d8:	cmp	r4, #0
   142dc:	beq	142fc <__mempcpy_chk@plt+0x2c6c>
   142e0:	ldr	r0, [sp, #48]	; 0x30
   142e4:	ldr	r1, [sp, #8]
   142e8:	mov	r4, #0
   142ec:	cmp	r0, r1
   142f0:	beq	13c88 <__mempcpy_chk@plt+0x25f8>
   142f4:	bl	148e8 <__mempcpy_chk@plt+0x3258>
   142f8:	b	13c88 <__mempcpy_chk@plt+0x25f8>
   142fc:	mov	r0, #0
   14300:	strb	r0, [r6], #1
   14304:	add	r0, sp, #48	; 0x30
   14308:	sub	r1, r6, r5
   1430c:	bl	17efc <__mempcpy_chk@plt+0x686c>
   14310:	mov	r4, r0
   14314:	cmp	r0, #0
   14318:	bne	13c88 <__mempcpy_chk@plt+0x25f8>
   1431c:	bl	190cc <__mempcpy_chk@plt+0x7a3c>
   14320:	bl	1151c <__errno_location@plt>
   14324:	mov	r1, #40	; 0x28
   14328:	str	r1, [r0]
   1432c:	mov	r4, #1
   14330:	b	14244 <__mempcpy_chk@plt+0x2bb4>
   14334:	movw	r1, #49620	; 0xc1d4
   14338:	movt	r1, #2
   1433c:	str	r0, [r1]
   14340:	bx	lr
   14344:	push	{r4, r5, r6, sl, fp, lr}
   14348:	add	fp, sp, #16
   1434c:	sub	sp, sp, #8
   14350:	movw	r6, #49584	; 0xc1b0
   14354:	movt	r6, #2
   14358:	ldr	r5, [r6]
   1435c:	mov	r0, r5
   14360:	bl	148ac <__mempcpy_chk@plt+0x321c>
   14364:	cmp	r0, #0
   14368:	beq	143a8 <__mempcpy_chk@plt+0x2d18>
   1436c:	mov	r0, #1
   14370:	mov	r2, #0
   14374:	mov	r3, #0
   14378:	mov	r4, #0
   1437c:	str	r0, [sp]
   14380:	mov	r0, r5
   14384:	bl	14910 <__mempcpy_chk@plt+0x3280>
   14388:	cmp	r0, #0
   1438c:	bne	143ac <__mempcpy_chk@plt+0x2d1c>
   14390:	ldr	r0, [r6]
   14394:	bl	14690 <__mempcpy_chk@plt+0x3000>
   14398:	mov	r4, r0
   1439c:	cmp	r0, #0
   143a0:	movwne	r4, #1
   143a4:	b	143ac <__mempcpy_chk@plt+0x2d1c>
   143a8:	mov	r4, #0
   143ac:	ldr	r0, [r6]
   143b0:	bl	197b8 <__mempcpy_chk@plt+0x8128>
   143b4:	cmp	r4, #0
   143b8:	cmpeq	r0, #0
   143bc:	bne	143cc <__mempcpy_chk@plt+0x2d3c>
   143c0:	sub	sp, fp, #16
   143c4:	pop	{r4, r5, r6, sl, fp, lr}
   143c8:	b	14470 <__mempcpy_chk@plt+0x2de0>
   143cc:	movw	r1, #45107	; 0xb033
   143d0:	mov	r0, #0
   143d4:	mov	r2, #5
   143d8:	movt	r1, #1
   143dc:	bl	113e4 <dcgettext@plt>
   143e0:	mov	r4, r0
   143e4:	movw	r0, #49620	; 0xc1d4
   143e8:	movt	r0, #2
   143ec:	ldr	r6, [r0]
   143f0:	bl	1151c <__errno_location@plt>
   143f4:	ldr	r5, [r0]
   143f8:	cmp	r6, #0
   143fc:	bne	14418 <__mempcpy_chk@plt+0x2d88>
   14400:	movw	r2, #46491	; 0xb59b
   14404:	mov	r0, #0
   14408:	mov	r1, r5
   1440c:	mov	r3, r4
   14410:	movt	r2, #1
   14414:	b	14438 <__mempcpy_chk@plt+0x2da8>
   14418:	mov	r0, r6
   1441c:	bl	176d4 <__mempcpy_chk@plt+0x6044>
   14420:	movw	r2, #45126	; 0xb046
   14424:	mov	r3, r0
   14428:	str	r4, [sp]
   1442c:	mov	r0, #0
   14430:	mov	r1, r5
   14434:	movt	r2, #1
   14438:	bl	11480 <error@plt>
   1443c:	bl	14470 <__mempcpy_chk@plt+0x2de0>
   14440:	movw	r0, #49484	; 0xc14c
   14444:	movt	r0, #2
   14448:	ldr	r0, [r0]
   1444c:	bl	113b4 <_exit@plt>
   14450:	movw	r1, #49624	; 0xc1d8
   14454:	movt	r1, #2
   14458:	str	r0, [r1]
   1445c:	bx	lr
   14460:	movw	r1, #49628	; 0xc1dc
   14464:	movt	r1, #2
   14468:	strb	r0, [r1]
   1446c:	bx	lr
   14470:	push	{r4, r5, r6, sl, fp, lr}
   14474:	add	fp, sp, #16
   14478:	sub	sp, sp, #8
   1447c:	movw	r0, #49588	; 0xc1b4
   14480:	movt	r0, #2
   14484:	ldr	r0, [r0]
   14488:	bl	197b8 <__mempcpy_chk@plt+0x8128>
   1448c:	cmp	r0, #0
   14490:	beq	144b8 <__mempcpy_chk@plt+0x2e28>
   14494:	movw	r0, #49628	; 0xc1dc
   14498:	movt	r0, #2
   1449c:	ldrb	r0, [r0]
   144a0:	cmp	r0, #0
   144a4:	beq	144d8 <__mempcpy_chk@plt+0x2e48>
   144a8:	bl	1151c <__errno_location@plt>
   144ac:	ldr	r0, [r0]
   144b0:	cmp	r0, #32
   144b4:	bne	144d8 <__mempcpy_chk@plt+0x2e48>
   144b8:	movw	r0, #49576	; 0xc1a8
   144bc:	movt	r0, #2
   144c0:	ldr	r0, [r0]
   144c4:	bl	197b8 <__mempcpy_chk@plt+0x8128>
   144c8:	cmp	r0, #0
   144cc:	subeq	sp, fp, #16
   144d0:	popeq	{r4, r5, r6, sl, fp, pc}
   144d4:	b	14548 <__mempcpy_chk@plt+0x2eb8>
   144d8:	movw	r1, #45133	; 0xb04d
   144dc:	mov	r0, #0
   144e0:	mov	r2, #5
   144e4:	movt	r1, #1
   144e8:	bl	113e4 <dcgettext@plt>
   144ec:	mov	r4, r0
   144f0:	movw	r0, #49624	; 0xc1d8
   144f4:	movt	r0, #2
   144f8:	ldr	r6, [r0]
   144fc:	bl	1151c <__errno_location@plt>
   14500:	ldr	r5, [r0]
   14504:	cmp	r6, #0
   14508:	bne	14524 <__mempcpy_chk@plt+0x2e94>
   1450c:	movw	r2, #46491	; 0xb59b
   14510:	mov	r0, #0
   14514:	mov	r1, r5
   14518:	mov	r3, r4
   1451c:	movt	r2, #1
   14520:	b	14544 <__mempcpy_chk@plt+0x2eb4>
   14524:	mov	r0, r6
   14528:	bl	176d4 <__mempcpy_chk@plt+0x6044>
   1452c:	movw	r2, #45126	; 0xb046
   14530:	mov	r3, r0
   14534:	str	r4, [sp]
   14538:	mov	r0, #0
   1453c:	mov	r1, r5
   14540:	movt	r2, #1
   14544:	bl	11480 <error@plt>
   14548:	movw	r0, #49484	; 0xc14c
   1454c:	movt	r0, #2
   14550:	ldr	r0, [r0]
   14554:	bl	113b4 <_exit@plt>
   14558:	push	{fp, lr}
   1455c:	mov	fp, sp
   14560:	bl	145b8 <__mempcpy_chk@plt+0x2f28>
   14564:	cmp	r0, #0
   14568:	popne	{fp, pc}
   1456c:	bl	190cc <__mempcpy_chk@plt+0x7a3c>
   14570:	push	{r4, r5, r6, sl, fp, lr}
   14574:	add	fp, sp, #16
   14578:	mov	r5, r0
   1457c:	mov	r4, r0
   14580:	ldrb	r6, [r5], #-1
   14584:	bl	13bd0 <__mempcpy_chk@plt+0x2540>
   14588:	sub	r2, r0, r4
   1458c:	sub	r0, r6, #47	; 0x2f
   14590:	clz	r0, r0
   14594:	lsr	r1, r0, #5
   14598:	mov	r0, r2
   1459c:	cmp	r2, r1
   145a0:	popls	{r4, r5, r6, sl, fp, pc}
   145a4:	ldrb	r3, [r5, r0]
   145a8:	sub	r2, r0, #1
   145ac:	cmp	r3, #47	; 0x2f
   145b0:	beq	14598 <__mempcpy_chk@plt+0x2f08>
   145b4:	pop	{r4, r5, r6, sl, fp, pc}
   145b8:	push	{r4, r5, r6, sl, fp, lr}
   145bc:	add	fp, sp, #16
   145c0:	mov	r6, r0
   145c4:	mov	r4, r0
   145c8:	ldrb	r5, [r6], #-1
   145cc:	bl	13bd0 <__mempcpy_chk@plt+0x2540>
   145d0:	sub	r1, r0, r4
   145d4:	sub	r0, r5, #47	; 0x2f
   145d8:	clz	r0, r0
   145dc:	lsr	r0, r0, #5
   145e0:	mov	r5, r1
   145e4:	cmp	r1, r0
   145e8:	bls	145fc <__mempcpy_chk@plt+0x2f6c>
   145ec:	ldrb	r2, [r6, r5]
   145f0:	sub	r1, r5, #1
   145f4:	cmp	r2, #47	; 0x2f
   145f8:	beq	145e0 <__mempcpy_chk@plt+0x2f50>
   145fc:	cmp	r5, #0
   14600:	mov	r0, r5
   14604:	addeq	r0, r0, #1
   14608:	add	r0, r0, #1
   1460c:	bl	191e0 <__mempcpy_chk@plt+0x7b50>
   14610:	mov	r6, r0
   14614:	cmp	r0, #0
   14618:	beq	14644 <__mempcpy_chk@plt+0x2fb4>
   1461c:	mov	r0, r6
   14620:	mov	r1, r4
   14624:	mov	r2, r5
   14628:	bl	113c0 <memcpy@plt>
   1462c:	cmp	r5, #0
   14630:	moveq	r0, #46	; 0x2e
   14634:	moveq	r5, #1
   14638:	strbeq	r0, [r6]
   1463c:	mov	r0, #0
   14640:	strb	r0, [r6, r5]
   14644:	mov	r0, r6
   14648:	pop	{r4, r5, r6, sl, fp, pc}
   1464c:	push	{r4, r5, fp, lr}
   14650:	add	fp, sp, #8
   14654:	mov	r4, r0
   14658:	bl	13bd0 <__mempcpy_chk@plt+0x2540>
   1465c:	mov	r5, r0
   14660:	ldrb	r0, [r0]
   14664:	cmp	r0, #0
   14668:	moveq	r5, r4
   1466c:	mov	r0, r5
   14670:	bl	13c1c <__mempcpy_chk@plt+0x258c>
   14674:	ldrb	r1, [r5, r0]
   14678:	mov	r2, #0
   1467c:	strb	r2, [r5, r0]
   14680:	cmp	r1, #0
   14684:	movwne	r1, #1
   14688:	mov	r0, r1
   1468c:	pop	{r4, r5, fp, pc}
   14690:	push	{r4, sl, fp, lr}
   14694:	add	fp, sp, #8
   14698:	sub	sp, sp, #8
   1469c:	mov	r4, r0
   146a0:	cmp	r0, #0
   146a4:	beq	146c0 <__mempcpy_chk@plt+0x3030>
   146a8:	mov	r0, r4
   146ac:	bl	114bc <__freading@plt>
   146b0:	cmp	r0, #0
   146b4:	ldrbne	r0, [r4, #1]
   146b8:	tstne	r0, #1
   146bc:	bne	146d0 <__mempcpy_chk@plt+0x3040>
   146c0:	mov	r0, r4
   146c4:	sub	sp, fp, #8
   146c8:	pop	{r4, sl, fp, lr}
   146cc:	b	1136c <fflush@plt>
   146d0:	mov	r0, #1
   146d4:	mov	r2, #0
   146d8:	mov	r3, #0
   146dc:	str	r0, [sp]
   146e0:	mov	r0, r4
   146e4:	bl	14910 <__mempcpy_chk@plt+0x3280>
   146e8:	b	146c0 <__mempcpy_chk@plt+0x3030>
   146ec:	push	{r4, r5, r6, r7, fp, lr}
   146f0:	add	fp, sp, #16
   146f4:	cmp	r0, #0
   146f8:	popeq	{r4, r5, r6, r7, fp, pc}
   146fc:	mov	r5, r0
   14700:	mov	r0, #24
   14704:	mov	r6, r2
   14708:	mov	r7, r1
   1470c:	bl	18b6c <__mempcpy_chk@plt+0x74dc>
   14710:	mov	r4, r0
   14714:	mov	r0, r7
   14718:	bl	1908c <__mempcpy_chk@plt+0x79fc>
   1471c:	str	r0, [r4]
   14720:	ldrd	r0, [r6, #96]	; 0x60
   14724:	str	r1, [r4, #12]
   14728:	str	r0, [r4, #8]
   1472c:	ldrd	r0, [r6]
   14730:	str	r1, [r4, #20]
   14734:	str	r0, [r4, #16]
   14738:	mov	r0, r5
   1473c:	mov	r1, r4
   14740:	bl	15984 <__mempcpy_chk@plt+0x42f4>
   14744:	cmp	r0, #0
   14748:	beq	14764 <__mempcpy_chk@plt+0x30d4>
   1474c:	cmp	r0, r4
   14750:	beq	14760 <__mempcpy_chk@plt+0x30d0>
   14754:	mov	r0, r4
   14758:	pop	{r4, r5, r6, r7, fp, lr}
   1475c:	b	15d68 <__mempcpy_chk@plt+0x46d8>
   14760:	pop	{r4, r5, r6, r7, fp, pc}
   14764:	bl	190cc <__mempcpy_chk@plt+0x7a3c>
   14768:	cmp	r0, #0
   1476c:	moveq	r0, #0
   14770:	bxeq	lr
   14774:	push	{r4, r5, fp, lr}
   14778:	add	fp, sp, #8
   1477c:	sub	sp, sp, #24
   14780:	str	r1, [sp]
   14784:	mov	r1, sp
   14788:	ldrd	r4, [r2, #96]	; 0x60
   1478c:	str	r5, [sp, #12]
   14790:	str	r4, [sp, #8]
   14794:	ldrd	r2, [r2]
   14798:	str	r3, [sp, #20]
   1479c:	str	r2, [sp, #16]
   147a0:	bl	14b90 <__mempcpy_chk@plt+0x3500>
   147a4:	cmp	r0, #0
   147a8:	movwne	r0, #1
   147ac:	sub	sp, fp, #8
   147b0:	pop	{r4, r5, fp, pc}
   147b4:	push	{fp, lr}
   147b8:	mov	fp, sp
   147bc:	bl	147cc <__mempcpy_chk@plt+0x313c>
   147c0:	cmp	r0, #0
   147c4:	popne	{fp, pc}
   147c8:	bl	190cc <__mempcpy_chk@plt+0x7a3c>
   147cc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   147d0:	add	fp, sp, #28
   147d4:	push	{r2}		; (str r2, [sp, #-4]!)
   147d8:	mov	sl, r1
   147dc:	mov	r7, r0
   147e0:	bl	13bd0 <__mempcpy_chk@plt+0x2540>
   147e4:	sub	r4, r0, r7
   147e8:	bl	13c1c <__mempcpy_chk@plt+0x258c>
   147ec:	mov	r6, r0
   147f0:	add	r5, r4, r0
   147f4:	mov	r0, sl
   147f8:	bl	11504 <strlen@plt>
   147fc:	mov	r9, r0
   14800:	cmp	r6, #0
   14804:	beq	1482c <__mempcpy_chk@plt+0x319c>
   14808:	add	r0, r7, r5
   1480c:	mov	r4, #0
   14810:	ldrb	r0, [r0, #-1]
   14814:	cmp	r0, #47	; 0x2f
   14818:	beq	1483c <__mempcpy_chk@plt+0x31ac>
   1481c:	ldrb	r0, [sl]
   14820:	subs	r4, r0, #47	; 0x2f
   14824:	movwne	r4, #47	; 0x2f
   14828:	b	1483c <__mempcpy_chk@plt+0x31ac>
   1482c:	ldrb	r0, [sl]
   14830:	mov	r4, #0
   14834:	cmp	r0, #47	; 0x2f
   14838:	movweq	r4, #46	; 0x2e
   1483c:	uxtb	r8, r4
   14840:	add	r0, r9, r5
   14844:	cmp	r8, #0
   14848:	movwne	r8, #1
   1484c:	add	r0, r0, r8
   14850:	add	r0, r0, #1
   14854:	bl	191e0 <__mempcpy_chk@plt+0x7b50>
   14858:	mov	r6, r0
   1485c:	cmp	r0, #0
   14860:	beq	148a0 <__mempcpy_chk@plt+0x3210>
   14864:	mov	r0, r6
   14868:	mov	r1, r7
   1486c:	mov	r2, r5
   14870:	mvn	r3, #0
   14874:	bl	11690 <__mempcpy_chk@plt>
   14878:	ldr	r1, [sp]
   1487c:	strb	r4, [r0], r8
   14880:	mov	r2, r9
   14884:	mvn	r3, #0
   14888:	cmp	r1, #0
   1488c:	strne	r0, [r1]
   14890:	mov	r1, sl
   14894:	bl	11690 <__mempcpy_chk@plt>
   14898:	mov	r1, #0
   1489c:	strb	r1, [r0]
   148a0:	mov	r0, r6
   148a4:	sub	sp, fp, #28
   148a8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   148ac:	ldrd	r2, [r0, #16]
   148b0:	mov	r1, #0
   148b4:	cmp	r3, r2
   148b8:	bhi	148e0 <__mempcpy_chk@plt+0x3250>
   148bc:	ldmib	r0, {r1, r2}
   148c0:	ldrb	r3, [r0, #1]
   148c4:	sub	r1, r2, r1
   148c8:	mov	r2, #0
   148cc:	tst	r3, #1
   148d0:	ldrne	r2, [r0, #36]	; 0x24
   148d4:	ldrne	r0, [r0, #44]	; 0x2c
   148d8:	subne	r2, r0, r2
   148dc:	add	r1, r1, r2
   148e0:	mov	r0, r1
   148e4:	bx	lr
   148e8:	push	{r4, r5, r6, sl, fp, lr}
   148ec:	add	fp, sp, #16
   148f0:	mov	r4, r0
   148f4:	bl	1151c <__errno_location@plt>
   148f8:	ldr	r6, [r0]
   148fc:	mov	r5, r0
   14900:	mov	r0, r4
   14904:	bl	11390 <free@plt>
   14908:	str	r6, [r5]
   1490c:	pop	{r4, r5, r6, sl, fp, pc}
   14910:	push	{r4, r5, r6, r7, fp, lr}
   14914:	add	fp, sp, #16
   14918:	sub	sp, sp, #8
   1491c:	mov	r4, r0
   14920:	ldr	r0, [r0, #4]
   14924:	mov	r5, r3
   14928:	mov	r6, r2
   1492c:	ldr	r1, [r4, #8]
   14930:	cmp	r1, r0
   14934:	bne	14950 <__mempcpy_chk@plt+0x32c0>
   14938:	ldrd	r0, [r4, #16]
   1493c:	cmp	r1, r0
   14940:	bne	14950 <__mempcpy_chk@plt+0x32c0>
   14944:	ldr	r0, [r4, #36]	; 0x24
   14948:	cmp	r0, #0
   1494c:	beq	14968 <__mempcpy_chk@plt+0x32d8>
   14950:	mov	r0, r4
   14954:	mov	r2, r6
   14958:	mov	r3, r5
   1495c:	sub	sp, fp, #16
   14960:	pop	{r4, r5, r6, r7, fp, lr}
   14964:	b	115a0 <fseeko64@plt>
   14968:	ldr	r7, [fp, #8]
   1496c:	mov	r0, r4
   14970:	bl	11570 <fileno@plt>
   14974:	mov	r2, r6
   14978:	mov	r3, r5
   1497c:	str	r7, [sp]
   14980:	bl	11444 <lseek64@plt>
   14984:	and	r2, r0, r1
   14988:	cmn	r2, #1
   1498c:	mvneq	r0, #0
   14990:	subeq	sp, fp, #16
   14994:	popeq	{r4, r5, r6, r7, fp, pc}
   14998:	strd	r0, [r4, #80]	; 0x50
   1499c:	ldr	r0, [r4]
   149a0:	bic	r0, r0, #16
   149a4:	str	r0, [r4]
   149a8:	mov	r0, #0
   149ac:	sub	sp, fp, #16
   149b0:	pop	{r4, r5, r6, r7, fp, pc}
   149b4:	andeq	r0, r0, r0
   149b8:	ldr	r0, [r0, #8]
   149bc:	bx	lr
   149c0:	ldr	r0, [r0, #12]
   149c4:	bx	lr
   149c8:	ldr	r0, [r0, #16]
   149cc:	bx	lr
   149d0:	ldm	r0, {r2, ip}
   149d4:	mov	r0, #0
   149d8:	cmp	r2, ip
   149dc:	bxcs	lr
   149e0:	mov	r0, #0
   149e4:	ldr	r1, [r2]
   149e8:	cmp	r1, #0
   149ec:	beq	14a10 <__mempcpy_chk@plt+0x3380>
   149f0:	mov	r3, #0
   149f4:	mov	r1, r2
   149f8:	ldr	r1, [r1, #4]
   149fc:	add	r3, r3, #1
   14a00:	cmp	r1, #0
   14a04:	bne	149f8 <__mempcpy_chk@plt+0x3368>
   14a08:	cmp	r3, r0
   14a0c:	movhi	r0, r3
   14a10:	add	r2, r2, #8
   14a14:	cmp	r2, ip
   14a18:	bcc	149e4 <__mempcpy_chk@plt+0x3354>
   14a1c:	bx	lr
   14a20:	push	{fp, lr}
   14a24:	mov	fp, sp
   14a28:	ldm	r0, {r3, ip}
   14a2c:	mov	lr, #0
   14a30:	mov	r1, #0
   14a34:	cmp	r3, ip
   14a38:	bcs	14a74 <__mempcpy_chk@plt+0x33e4>
   14a3c:	mov	r1, #0
   14a40:	mov	lr, #0
   14a44:	ldr	r2, [r3]
   14a48:	cmp	r2, #0
   14a4c:	beq	14a68 <__mempcpy_chk@plt+0x33d8>
   14a50:	mov	r2, r3
   14a54:	ldr	r2, [r2, #4]
   14a58:	add	r1, r1, #1
   14a5c:	cmp	r2, #0
   14a60:	bne	14a54 <__mempcpy_chk@plt+0x33c4>
   14a64:	add	lr, lr, #1
   14a68:	add	r3, r3, #8
   14a6c:	cmp	r3, ip
   14a70:	bcc	14a44 <__mempcpy_chk@plt+0x33b4>
   14a74:	ldr	r2, [r0, #12]
   14a78:	cmp	lr, r2
   14a7c:	bne	14a94 <__mempcpy_chk@plt+0x3404>
   14a80:	ldr	r2, [r0, #16]
   14a84:	mov	r0, #1
   14a88:	cmp	r1, r2
   14a8c:	movne	r0, #0
   14a90:	pop	{fp, pc}
   14a94:	mov	r0, #0
   14a98:	pop	{fp, pc}
   14a9c:	nop	{0}
   14aa0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14aa4:	add	fp, sp, #24
   14aa8:	sub	sp, sp, #8
   14aac:	ldr	r6, [r0]
   14ab0:	ldmib	r0, {r2, r7, r8}
   14ab4:	ldr	r3, [r0, #16]
   14ab8:	mov	r4, r1
   14abc:	mov	r5, #0
   14ac0:	cmp	r6, r2
   14ac4:	bcs	14b04 <__mempcpy_chk@plt+0x3474>
   14ac8:	mov	r5, #0
   14acc:	ldr	r0, [r6]
   14ad0:	cmp	r0, #0
   14ad4:	beq	14af8 <__mempcpy_chk@plt+0x3468>
   14ad8:	mov	r0, #0
   14adc:	mov	r1, r6
   14ae0:	ldr	r1, [r1, #4]
   14ae4:	add	r0, r0, #1
   14ae8:	cmp	r1, #0
   14aec:	bne	14ae0 <__mempcpy_chk@plt+0x3450>
   14af0:	cmp	r0, r5
   14af4:	movhi	r5, r0
   14af8:	add	r6, r6, #8
   14afc:	cmp	r6, r2
   14b00:	bcc	14acc <__mempcpy_chk@plt+0x343c>
   14b04:	movw	r2, #45145	; 0xb059
   14b08:	mov	r0, r4
   14b0c:	mov	r1, #1
   14b10:	movt	r2, #1
   14b14:	bl	1157c <__fprintf_chk@plt>
   14b18:	movw	r2, #45169	; 0xb071
   14b1c:	mov	r0, r4
   14b20:	mov	r1, #1
   14b24:	mov	r3, r7
   14b28:	movt	r2, #1
   14b2c:	bl	1157c <__fprintf_chk@plt>
   14b30:	vldr	d16, [pc, #80]	; 14b88 <__mempcpy_chk@plt+0x34f8>
   14b34:	vmov	s0, r8
   14b38:	movw	r2, #45193	; 0xb089
   14b3c:	mov	r0, r4
   14b40:	mov	r1, #1
   14b44:	mov	r3, r8
   14b48:	vcvt.f64.u32	d17, s0
   14b4c:	vmov	s0, r7
   14b50:	movt	r2, #1
   14b54:	vcvt.f64.u32	d18, s0
   14b58:	vmul.f64	d16, d17, d16
   14b5c:	vdiv.f64	d16, d16, d18
   14b60:	vstr	d16, [sp]
   14b64:	bl	1157c <__fprintf_chk@plt>
   14b68:	movw	r2, #45226	; 0xb0aa
   14b6c:	mov	r0, r4
   14b70:	mov	r1, #1
   14b74:	mov	r3, r5
   14b78:	movt	r2, #1
   14b7c:	sub	sp, fp, #24
   14b80:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   14b84:	b	1157c <__fprintf_chk@plt>
   14b88:	andeq	r0, r0, r0
   14b8c:	subsmi	r0, r9, r0
   14b90:	push	{r4, r5, r6, r7, fp, lr}
   14b94:	add	fp, sp, #16
   14b98:	mov	r4, r1
   14b9c:	ldr	r1, [r0, #8]
   14ba0:	ldr	r2, [r0, #24]
   14ba4:	mov	r5, r0
   14ba8:	mov	r0, r4
   14bac:	blx	r2
   14bb0:	ldr	r1, [r5, #8]
   14bb4:	cmp	r0, r1
   14bb8:	bcs	14c24 <__mempcpy_chk@plt+0x3594>
   14bbc:	ldr	r7, [r5]
   14bc0:	mov	r6, #0
   14bc4:	ldr	r1, [r7, r0, lsl #3]!
   14bc8:	cmp	r1, #0
   14bcc:	cmpne	r7, #0
   14bd0:	bne	14be0 <__mempcpy_chk@plt+0x3550>
   14bd4:	mov	r0, r6
   14bd8:	pop	{r4, r5, r6, r7, fp, pc}
   14bdc:	ldr	r1, [r7]
   14be0:	cmp	r1, r4
   14be4:	beq	14c0c <__mempcpy_chk@plt+0x357c>
   14be8:	ldr	r2, [r5, #28]
   14bec:	mov	r0, r4
   14bf0:	blx	r2
   14bf4:	cmp	r0, #0
   14bf8:	bne	14c18 <__mempcpy_chk@plt+0x3588>
   14bfc:	ldr	r7, [r7, #4]
   14c00:	cmp	r7, #0
   14c04:	bne	14bdc <__mempcpy_chk@plt+0x354c>
   14c08:	b	14bd4 <__mempcpy_chk@plt+0x3544>
   14c0c:	mov	r6, r4
   14c10:	mov	r0, r6
   14c14:	pop	{r4, r5, r6, r7, fp, pc}
   14c18:	ldr	r6, [r7]
   14c1c:	mov	r0, r6
   14c20:	pop	{r4, r5, r6, r7, fp, pc}
   14c24:	bl	11654 <abort@plt>
   14c28:	ldr	r1, [r0, #16]
   14c2c:	cmp	r1, #0
   14c30:	moveq	r0, #0
   14c34:	bxeq	lr
   14c38:	ldm	r0, {r1, r2}
   14c3c:	cmp	r1, r2
   14c40:	bcs	14c58 <__mempcpy_chk@plt+0x35c8>
   14c44:	ldr	r0, [r1], #8
   14c48:	cmp	r0, #0
   14c4c:	bxne	lr
   14c50:	cmp	r1, r2
   14c54:	bcc	14c44 <__mempcpy_chk@plt+0x35b4>
   14c58:	push	{fp, lr}
   14c5c:	mov	fp, sp
   14c60:	bl	11654 <abort@plt>
   14c64:	push	{r4, r5, fp, lr}
   14c68:	add	fp, sp, #8
   14c6c:	mov	r5, r1
   14c70:	ldr	r1, [r0, #8]
   14c74:	ldr	r2, [r0, #24]
   14c78:	mov	r4, r0
   14c7c:	mov	r0, r5
   14c80:	blx	r2
   14c84:	ldr	r1, [r4, #8]
   14c88:	cmp	r0, r1
   14c8c:	bcs	14ce8 <__mempcpy_chk@plt+0x3658>
   14c90:	ldr	r1, [r4]
   14c94:	add	r2, r1, r0, lsl #3
   14c98:	ldr	r3, [r2]
   14c9c:	ldr	r2, [r2, #4]
   14ca0:	cmp	r3, r5
   14ca4:	beq	14cb4 <__mempcpy_chk@plt+0x3624>
   14ca8:	cmp	r2, #0
   14cac:	bne	14c98 <__mempcpy_chk@plt+0x3608>
   14cb0:	b	14cc0 <__mempcpy_chk@plt+0x3630>
   14cb4:	cmp	r2, #0
   14cb8:	ldrne	r0, [r2]
   14cbc:	popne	{r4, r5, fp, pc}
   14cc0:	ldr	r2, [r4, #4]
   14cc4:	add	r0, r1, r0, lsl #3
   14cc8:	add	r1, r0, #8
   14ccc:	cmp	r1, r2
   14cd0:	movcs	r0, #0
   14cd4:	popcs	{r4, r5, fp, pc}
   14cd8:	ldr	r0, [r1], #8
   14cdc:	cmp	r0, #0
   14ce0:	popne	{r4, r5, fp, pc}
   14ce4:	b	14ccc <__mempcpy_chk@plt+0x363c>
   14ce8:	bl	11654 <abort@plt>
   14cec:	push	{r4, r5, fp, lr}
   14cf0:	add	fp, sp, #8
   14cf4:	ldm	r0, {r5, lr}
   14cf8:	mov	ip, r0
   14cfc:	mov	r0, #0
   14d00:	cmp	r5, lr
   14d04:	bcs	14d50 <__mempcpy_chk@plt+0x36c0>
   14d08:	mov	r0, #0
   14d0c:	ldr	r3, [r5]
   14d10:	cmp	r3, #0
   14d14:	cmpne	r5, #0
   14d18:	beq	14d44 <__mempcpy_chk@plt+0x36b4>
   14d1c:	mov	r3, r5
   14d20:	cmp	r0, r2
   14d24:	popcs	{r4, r5, fp, pc}
   14d28:	ldr	r4, [r3]
   14d2c:	str	r4, [r1, r0, lsl #2]
   14d30:	add	r0, r0, #1
   14d34:	ldr	r3, [r3, #4]
   14d38:	cmp	r3, #0
   14d3c:	bne	14d20 <__mempcpy_chk@plt+0x3690>
   14d40:	ldr	lr, [ip, #4]
   14d44:	add	r5, r5, #8
   14d48:	cmp	r5, lr
   14d4c:	bcc	14d0c <__mempcpy_chk@plt+0x367c>
   14d50:	pop	{r4, r5, fp, pc}
   14d54:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14d58:	add	fp, sp, #24
   14d5c:	mov	r5, r1
   14d60:	ldr	r4, [r0]
   14d64:	ldr	r1, [r0, #4]
   14d68:	mov	r6, #0
   14d6c:	cmp	r4, r1
   14d70:	bcs	14de4 <__mempcpy_chk@plt+0x3754>
   14d74:	mov	r9, r2
   14d78:	mov	r8, r0
   14d7c:	mov	r6, #0
   14d80:	b	14dc8 <__mempcpy_chk@plt+0x3738>
   14d84:	mov	r1, r9
   14d88:	blx	r5
   14d8c:	cmp	r0, #0
   14d90:	beq	14de4 <__mempcpy_chk@plt+0x3754>
   14d94:	mov	r7, r4
   14d98:	ldr	r7, [r7, #4]
   14d9c:	add	r6, r6, #1
   14da0:	cmp	r7, #0
   14da4:	beq	14dc0 <__mempcpy_chk@plt+0x3730>
   14da8:	ldr	r0, [r7]
   14dac:	mov	r1, r9
   14db0:	blx	r5
   14db4:	cmp	r0, #0
   14db8:	bne	14d98 <__mempcpy_chk@plt+0x3708>
   14dbc:	b	14de4 <__mempcpy_chk@plt+0x3754>
   14dc0:	ldr	r1, [r8, #4]
   14dc4:	b	14dd8 <__mempcpy_chk@plt+0x3748>
   14dc8:	ldr	r0, [r4]
   14dcc:	cmp	r0, #0
   14dd0:	cmpne	r4, #0
   14dd4:	bne	14d84 <__mempcpy_chk@plt+0x36f4>
   14dd8:	add	r4, r4, #8
   14ddc:	cmp	r4, r1
   14de0:	bcc	14dc8 <__mempcpy_chk@plt+0x3738>
   14de4:	mov	r0, r6
   14de8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   14dec:	ldrb	r2, [r0]
   14df0:	cmp	r2, #0
   14df4:	moveq	r0, #0
   14df8:	bxeq	lr
   14dfc:	add	r3, r0, #1
   14e00:	mov	r0, #0
   14e04:	rsb	r0, r0, r0, lsl #5
   14e08:	uxtab	r0, r0, r2
   14e0c:	udiv	r2, r0, r1
   14e10:	mls	r0, r2, r1, r0
   14e14:	ldrb	r2, [r3], #1
   14e18:	cmp	r2, #0
   14e1c:	bne	14e04 <__mempcpy_chk@plt+0x3774>
   14e20:	bx	lr
   14e24:	movw	r1, #45256	; 0xb0c8
   14e28:	movt	r1, #1
   14e2c:	vld1.32	{d16-d17}, [r1]!
   14e30:	ldr	r1, [r1]
   14e34:	vst1.32	{d16-d17}, [r0]!
   14e38:	str	r1, [r0]
   14e3c:	bx	lr
   14e40:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14e44:	add	fp, sp, #24
   14e48:	movw	r9, #20584	; 0x5068
   14e4c:	movw	r5, #20564	; 0x5054
   14e50:	cmp	r3, #0
   14e54:	mov	r6, r0
   14e58:	mov	r0, #40	; 0x28
   14e5c:	mov	r7, r1
   14e60:	movt	r9, #1
   14e64:	movt	r5, #1
   14e68:	movne	r9, r3
   14e6c:	cmp	r2, #0
   14e70:	movne	r5, r2
   14e74:	bl	191e0 <__mempcpy_chk@plt+0x7b50>
   14e78:	mov	r8, #0
   14e7c:	cmp	r0, #0
   14e80:	beq	1503c <__mempcpy_chk@plt+0x39ac>
   14e84:	mov	r4, r0
   14e88:	movw	r0, #45256	; 0xb0c8
   14e8c:	cmp	r7, #0
   14e90:	movt	r0, #1
   14e94:	moveq	r7, r0
   14e98:	cmp	r7, r0
   14e9c:	str	r7, [r4, #20]
   14ea0:	beq	14f1c <__mempcpy_chk@plt+0x388c>
   14ea4:	vldr	s2, [pc, #408]	; 15044 <__mempcpy_chk@plt+0x39b4>
   14ea8:	vldr	s0, [r7, #8]
   14eac:	vcmpe.f32	s0, s2
   14eb0:	vmrs	APSR_nzcv, fpscr
   14eb4:	ble	14fc8 <__mempcpy_chk@plt+0x3938>
   14eb8:	vldr	s4, [pc, #392]	; 15048 <__mempcpy_chk@plt+0x39b8>
   14ebc:	vcmpe.f32	s0, s4
   14ec0:	vmrs	APSR_nzcv, fpscr
   14ec4:	bpl	14fc8 <__mempcpy_chk@plt+0x3938>
   14ec8:	vldr	s4, [pc, #380]	; 1504c <__mempcpy_chk@plt+0x39bc>
   14ecc:	vldr	s6, [r7, #12]
   14ed0:	vcmpe.f32	s6, s4
   14ed4:	vmrs	APSR_nzcv, fpscr
   14ed8:	ble	14fc8 <__mempcpy_chk@plt+0x3938>
   14edc:	vldr	s4, [r7]
   14ee0:	vcmpe.f32	s4, #0.0
   14ee4:	vmrs	APSR_nzcv, fpscr
   14ee8:	blt	14fc8 <__mempcpy_chk@plt+0x3938>
   14eec:	vadd.f32	s2, s4, s2
   14ef0:	vcmpe.f32	s2, s0
   14ef4:	vmrs	APSR_nzcv, fpscr
   14ef8:	bpl	14fc8 <__mempcpy_chk@plt+0x3938>
   14efc:	vldr	s0, [r7, #4]
   14f00:	vmov.f32	s4, #112	; 0x3f800000  1.0
   14f04:	vcmpe.f32	s0, s4
   14f08:	vmrs	APSR_nzcv, fpscr
   14f0c:	bhi	14fc8 <__mempcpy_chk@plt+0x3938>
   14f10:	vcmpe.f32	s2, s0
   14f14:	vmrs	APSR_nzcv, fpscr
   14f18:	bpl	14fc8 <__mempcpy_chk@plt+0x3938>
   14f1c:	ldrb	r0, [r7, #16]
   14f20:	cmp	r0, #0
   14f24:	bne	14f50 <__mempcpy_chk@plt+0x38c0>
   14f28:	vldr	s0, [r7, #8]
   14f2c:	vldr	s4, [pc, #284]	; 15050 <__mempcpy_chk@plt+0x39c0>
   14f30:	vmov	s2, r6
   14f34:	vcvt.f32.u32	s2, s2
   14f38:	vdiv.f32	s2, s2, s0
   14f3c:	vcmpe.f32	s2, s4
   14f40:	vcvt.u32.f32	s0, s2
   14f44:	vmrs	APSR_nzcv, fpscr
   14f48:	bge	14fd8 <__mempcpy_chk@plt+0x3948>
   14f4c:	vmov	r6, s0
   14f50:	cmp	r6, #10
   14f54:	movls	r6, #10
   14f58:	orr	r0, r6, #1
   14f5c:	cmn	r0, #1
   14f60:	beq	14fd8 <__mempcpy_chk@plt+0x3948>
   14f64:	ldr	r6, [fp, #8]
   14f68:	mov	r1, #3
   14f6c:	cmp	r0, #10
   14f70:	bcc	14fa8 <__mempcpy_chk@plt+0x3918>
   14f74:	mov	r1, #3
   14f78:	mov	r3, #9
   14f7c:	mov	r2, #12
   14f80:	udiv	r7, r0, r1
   14f84:	mls	r7, r7, r1, r0
   14f88:	cmp	r7, #0
   14f8c:	beq	14fa8 <__mempcpy_chk@plt+0x3918>
   14f90:	add	r3, r3, r2
   14f94:	add	r2, r2, #8
   14f98:	add	r1, r1, #2
   14f9c:	add	r3, r3, #4
   14fa0:	cmp	r3, r0
   14fa4:	bcc	14f80 <__mempcpy_chk@plt+0x38f0>
   14fa8:	udiv	r2, r0, r1
   14fac:	mls	r1, r2, r1, r0
   14fb0:	cmp	r1, #0
   14fb4:	bne	14fd0 <__mempcpy_chk@plt+0x3940>
   14fb8:	add	r0, r0, #2
   14fbc:	cmn	r0, #1
   14fc0:	bne	14f68 <__mempcpy_chk@plt+0x38d8>
   14fc4:	b	14fd8 <__mempcpy_chk@plt+0x3948>
   14fc8:	str	r0, [r4, #20]
   14fcc:	b	14fe0 <__mempcpy_chk@plt+0x3950>
   14fd0:	cmp	r0, #536870912	; 0x20000000
   14fd4:	bcc	14ff0 <__mempcpy_chk@plt+0x3960>
   14fd8:	mov	r0, #0
   14fdc:	str	r0, [r4, #8]
   14fe0:	mov	r0, r4
   14fe4:	bl	148e8 <__mempcpy_chk@plt+0x3258>
   14fe8:	mov	r0, r8
   14fec:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   14ff0:	cmp	r0, #0
   14ff4:	str	r0, [r4, #8]
   14ff8:	beq	14fe0 <__mempcpy_chk@plt+0x3950>
   14ffc:	mov	r1, #8
   15000:	bl	1918c <__mempcpy_chk@plt+0x7afc>
   15004:	cmp	r0, #0
   15008:	str	r0, [r4]
   1500c:	beq	14fe0 <__mempcpy_chk@plt+0x3950>
   15010:	mov	r1, #0
   15014:	mov	r8, r4
   15018:	str	r1, [r4, #12]
   1501c:	str	r1, [r4, #16]
   15020:	str	r5, [r4, #24]
   15024:	str	r9, [r4, #28]
   15028:	str	r6, [r4, #32]
   1502c:	str	r1, [r4, #36]	; 0x24
   15030:	ldr	r1, [r4, #8]
   15034:	add	r0, r0, r1, lsl #3
   15038:	str	r0, [r4, #4]
   1503c:	mov	r0, r8
   15040:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   15044:	stclcc	12, cr12, [ip, #820]	; 0x334
   15048:	svccc	0x00666666
   1504c:	svccc	0x008ccccd
   15050:	svcmi	0x00800000
   15054:	ror	r2, r0, #3
   15058:	udiv	r2, r2, r1
   1505c:	mul	r1, r2, r1
   15060:	rsb	r0, r1, r0, ror #3
   15064:	bx	lr
   15068:	sub	r0, r0, r1
   1506c:	clz	r0, r0
   15070:	lsr	r0, r0, #5
   15074:	bx	lr
   15078:	push	{r4, r5, r6, r7, fp, lr}
   1507c:	add	fp, sp, #16
   15080:	mov	r4, r0
   15084:	ldr	r5, [r0]
   15088:	ldr	r0, [r0, #4]
   1508c:	cmp	r5, r0
   15090:	bcs	15128 <__mempcpy_chk@plt+0x3a98>
   15094:	mov	r6, #0
   15098:	ldr	r1, [r5]
   1509c:	cmp	r1, #0
   150a0:	beq	1511c <__mempcpy_chk@plt+0x3a8c>
   150a4:	ldr	r1, [r4, #32]
   150a8:	ldr	r7, [r5, #4]
   150ac:	cmp	r1, #0
   150b0:	mov	r0, r1
   150b4:	movwne	r0, #1
   150b8:	cmp	r7, #0
   150bc:	beq	15100 <__mempcpy_chk@plt+0x3a70>
   150c0:	tst	r0, #1
   150c4:	beq	150d4 <__mempcpy_chk@plt+0x3a44>
   150c8:	ldr	r0, [r7]
   150cc:	blx	r1
   150d0:	ldr	r1, [r4, #32]
   150d4:	str	r6, [r7]
   150d8:	cmp	r1, #0
   150dc:	ldr	r0, [r4, #36]	; 0x24
   150e0:	ldr	r2, [r7, #4]
   150e4:	str	r0, [r7, #4]
   150e8:	mov	r0, r1
   150ec:	str	r7, [r4, #36]	; 0x24
   150f0:	mov	r7, r2
   150f4:	movwne	r0, #1
   150f8:	cmp	r2, #0
   150fc:	bne	150c0 <__mempcpy_chk@plt+0x3a30>
   15100:	cmp	r0, #0
   15104:	beq	15110 <__mempcpy_chk@plt+0x3a80>
   15108:	ldr	r0, [r5]
   1510c:	blx	r1
   15110:	str	r6, [r5]
   15114:	str	r6, [r5, #4]
   15118:	ldr	r0, [r4, #4]
   1511c:	add	r5, r5, #8
   15120:	cmp	r5, r0
   15124:	bcc	15098 <__mempcpy_chk@plt+0x3a08>
   15128:	mov	r0, #0
   1512c:	str	r0, [r4, #12]
   15130:	str	r0, [r4, #16]
   15134:	pop	{r4, r5, r6, r7, fp, pc}
   15138:	push	{r4, r5, r6, sl, fp, lr}
   1513c:	add	fp, sp, #16
   15140:	mov	r4, r0
   15144:	ldr	r0, [r0, #32]
   15148:	cmp	r0, #0
   1514c:	ldrne	r0, [r4, #16]
   15150:	cmpne	r0, #0
   15154:	beq	151bc <__mempcpy_chk@plt+0x3b2c>
   15158:	ldr	r5, [r4]
   1515c:	ldr	r1, [r4, #4]
   15160:	cmp	r5, r1
   15164:	bcc	15178 <__mempcpy_chk@plt+0x3ae8>
   15168:	b	151bc <__mempcpy_chk@plt+0x3b2c>
   1516c:	add	r5, r5, #8
   15170:	cmp	r5, r1
   15174:	bcs	151bc <__mempcpy_chk@plt+0x3b2c>
   15178:	ldr	r0, [r5]
   1517c:	cmp	r0, #0
   15180:	cmpne	r5, #0
   15184:	beq	1516c <__mempcpy_chk@plt+0x3adc>
   15188:	ldr	r1, [r4, #32]
   1518c:	blx	r1
   15190:	ldr	r6, [r5, #4]
   15194:	cmp	r6, #0
   15198:	beq	151b4 <__mempcpy_chk@plt+0x3b24>
   1519c:	ldr	r1, [r4, #32]
   151a0:	ldr	r0, [r6]
   151a4:	blx	r1
   151a8:	ldr	r6, [r6, #4]
   151ac:	cmp	r6, #0
   151b0:	bne	1519c <__mempcpy_chk@plt+0x3b0c>
   151b4:	ldr	r1, [r4, #4]
   151b8:	b	1516c <__mempcpy_chk@plt+0x3adc>
   151bc:	ldr	r5, [r4]
   151c0:	ldr	r1, [r4, #4]
   151c4:	cmp	r5, r1
   151c8:	bcc	151dc <__mempcpy_chk@plt+0x3b4c>
   151cc:	b	15204 <__mempcpy_chk@plt+0x3b74>
   151d0:	add	r5, r5, #8
   151d4:	cmp	r5, r1
   151d8:	bcs	15204 <__mempcpy_chk@plt+0x3b74>
   151dc:	ldr	r0, [r5, #4]
   151e0:	cmp	r0, #0
   151e4:	beq	151d0 <__mempcpy_chk@plt+0x3b40>
   151e8:	ldr	r6, [r0, #4]
   151ec:	bl	148e8 <__mempcpy_chk@plt+0x3258>
   151f0:	cmp	r6, #0
   151f4:	mov	r0, r6
   151f8:	bne	151e8 <__mempcpy_chk@plt+0x3b58>
   151fc:	ldr	r1, [r4, #4]
   15200:	b	151d0 <__mempcpy_chk@plt+0x3b40>
   15204:	ldr	r0, [r4, #36]	; 0x24
   15208:	cmp	r0, #0
   1520c:	beq	15224 <__mempcpy_chk@plt+0x3b94>
   15210:	ldr	r5, [r0, #4]
   15214:	bl	148e8 <__mempcpy_chk@plt+0x3258>
   15218:	cmp	r5, #0
   1521c:	mov	r0, r5
   15220:	bne	15210 <__mempcpy_chk@plt+0x3b80>
   15224:	ldr	r0, [r4]
   15228:	bl	148e8 <__mempcpy_chk@plt+0x3258>
   1522c:	mov	r0, r4
   15230:	pop	{r4, r5, r6, sl, fp, lr}
   15234:	b	148e8 <__mempcpy_chk@plt+0x3258>
   15238:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1523c:	add	fp, sp, #28
   15240:	sub	sp, sp, #44	; 0x2c
   15244:	mov	r7, r0
   15248:	mov	r4, r0
   1524c:	ldr	r0, [r7, #20]!
   15250:	ldrb	r2, [r0, #16]
   15254:	cmp	r2, #0
   15258:	bne	15288 <__mempcpy_chk@plt+0x3bf8>
   1525c:	vldr	s0, [r0, #8]
   15260:	vldr	s4, [pc, #560]	; 15498 <__mempcpy_chk@plt+0x3e08>
   15264:	vmov	s2, r1
   15268:	mov	r5, #0
   1526c:	vcvt.f32.u32	s2, s2
   15270:	vdiv.f32	s2, s2, s0
   15274:	vcmpe.f32	s2, s4
   15278:	vcvt.u32.f32	s0, s2
   1527c:	vmrs	APSR_nzcv, fpscr
   15280:	bge	15488 <__mempcpy_chk@plt+0x3df8>
   15284:	vmov	r1, s0
   15288:	cmp	r1, #10
   1528c:	mov	r5, #0
   15290:	movls	r1, #10
   15294:	orr	r6, r1, #1
   15298:	cmn	r6, #1
   1529c:	bne	152b0 <__mempcpy_chk@plt+0x3c20>
   152a0:	b	15488 <__mempcpy_chk@plt+0x3df8>
   152a4:	add	r6, r6, #2
   152a8:	cmn	r6, #1
   152ac:	beq	15488 <__mempcpy_chk@plt+0x3df8>
   152b0:	mov	r0, #3
   152b4:	cmp	r6, #10
   152b8:	bcc	152f0 <__mempcpy_chk@plt+0x3c60>
   152bc:	mov	r0, #3
   152c0:	mov	r2, #9
   152c4:	mov	r1, #12
   152c8:	udiv	r3, r6, r0
   152cc:	mls	r3, r3, r0, r6
   152d0:	cmp	r3, #0
   152d4:	beq	152f0 <__mempcpy_chk@plt+0x3c60>
   152d8:	add	r2, r2, r1
   152dc:	add	r1, r1, #8
   152e0:	add	r0, r0, #2
   152e4:	add	r2, r2, #4
   152e8:	cmp	r2, r6
   152ec:	bcc	152c8 <__mempcpy_chk@plt+0x3c38>
   152f0:	udiv	r1, r6, r0
   152f4:	mls	r0, r1, r0, r6
   152f8:	cmp	r0, #0
   152fc:	beq	152a4 <__mempcpy_chk@plt+0x3c14>
   15300:	sub	r0, r6, #1
   15304:	cmn	r0, #-536870910	; 0xe0000002
   15308:	bhi	15488 <__mempcpy_chk@plt+0x3df8>
   1530c:	ldr	r0, [r4, #8]
   15310:	cmp	r6, r0
   15314:	bne	15320 <__mempcpy_chk@plt+0x3c90>
   15318:	mov	r5, #1
   1531c:	b	15488 <__mempcpy_chk@plt+0x3df8>
   15320:	mov	r0, r6
   15324:	mov	r1, #8
   15328:	bl	1918c <__mempcpy_chk@plt+0x7afc>
   1532c:	cmp	r0, #0
   15330:	str	r0, [sp, #4]
   15334:	beq	15488 <__mempcpy_chk@plt+0x3df8>
   15338:	mov	r1, #0
   1533c:	add	r0, r0, r6, lsl #3
   15340:	str	r6, [sp, #12]
   15344:	add	r5, sp, #4
   15348:	mov	sl, r4
   1534c:	mov	r2, #0
   15350:	str	r1, [sp, #16]
   15354:	str	r1, [sp, #20]
   15358:	str	r0, [sp, #8]
   1535c:	add	r0, r5, #20
   15360:	mov	r1, r4
   15364:	vld1.32	{d16-d17}, [r7]
   15368:	vst1.32	{d16-d17}, [r0]
   1536c:	ldr	r0, [sl, #36]!	; 0x24
   15370:	str	r0, [sp, #40]	; 0x28
   15374:	mov	r0, r5
   15378:	bl	1549c <__mempcpy_chk@plt+0x3e0c>
   1537c:	cmp	r0, #0
   15380:	beq	153a8 <__mempcpy_chk@plt+0x3d18>
   15384:	ldr	r0, [r4]
   15388:	bl	148e8 <__mempcpy_chk@plt+0x3258>
   1538c:	mov	r0, #36	; 0x24
   15390:	vld1.32	{d16-d17}, [r5], r0
   15394:	vst1.32	{d16-d17}, [r4], r0
   15398:	ldr	r0, [r5]
   1539c:	mov	r5, #1
   153a0:	str	r0, [r4]
   153a4:	b	15488 <__mempcpy_chk@plt+0x3df8>
   153a8:	ldr	r0, [sp, #40]	; 0x28
   153ac:	str	r0, [sl]
   153b0:	ldr	r0, [sp, #8]
   153b4:	ldr	r8, [sp, #4]
   153b8:	cmp	r8, r0
   153bc:	str	r0, [sp]
   153c0:	bcs	15464 <__mempcpy_chk@plt+0x3dd4>
   153c4:	mov	r9, #0
   153c8:	ldr	r0, [r8]
   153cc:	cmp	r0, #0
   153d0:	beq	15454 <__mempcpy_chk@plt+0x3dc4>
   153d4:	ldr	r6, [r8, #4]
   153d8:	cmp	r6, #0
   153dc:	beq	15450 <__mempcpy_chk@plt+0x3dc0>
   153e0:	ldr	r1, [r4, #8]
   153e4:	ldr	r5, [r6]
   153e8:	ldr	r2, [r4, #24]
   153ec:	mov	r0, r5
   153f0:	blx	r2
   153f4:	ldr	r1, [r4, #8]
   153f8:	cmp	r0, r1
   153fc:	bcs	15494 <__mempcpy_chk@plt+0x3e04>
   15400:	ldr	r3, [r4]
   15404:	ldr	r2, [r6, #4]
   15408:	ldr	r7, [r3, r0, lsl #3]
   1540c:	cmp	r7, #0
   15410:	beq	15420 <__mempcpy_chk@plt+0x3d90>
   15414:	add	r0, r3, r0, lsl #3
   15418:	add	r0, r0, #4
   1541c:	b	15438 <__mempcpy_chk@plt+0x3da8>
   15420:	str	r5, [r3, r0, lsl #3]
   15424:	ldr	r0, [r4, #12]
   15428:	add	r0, r0, #1
   1542c:	str	r0, [r4, #12]
   15430:	mov	r0, sl
   15434:	str	r9, [r6]
   15438:	ldr	r3, [r0]
   1543c:	cmp	r2, #0
   15440:	str	r3, [r6, #4]
   15444:	str	r6, [r0]
   15448:	mov	r6, r2
   1544c:	bne	153e4 <__mempcpy_chk@plt+0x3d54>
   15450:	str	r9, [r8, #4]
   15454:	ldr	r0, [sp]
   15458:	add	r8, r8, #8
   1545c:	cmp	r8, r0
   15460:	bcc	153c8 <__mempcpy_chk@plt+0x3d38>
   15464:	add	r1, sp, #4
   15468:	mov	r0, r4
   1546c:	mov	r2, #0
   15470:	mov	r5, #0
   15474:	bl	1549c <__mempcpy_chk@plt+0x3e0c>
   15478:	cmp	r0, #0
   1547c:	beq	15494 <__mempcpy_chk@plt+0x3e04>
   15480:	ldr	r0, [sp, #4]
   15484:	bl	148e8 <__mempcpy_chk@plt+0x3258>
   15488:	mov	r0, r5
   1548c:	sub	sp, fp, #28
   15490:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15494:	bl	11654 <abort@plt>
   15498:	svcmi	0x00800000
   1549c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   154a0:	add	fp, sp, #28
   154a4:	sub	sp, sp, #12
   154a8:	ldr	sl, [r1]
   154ac:	str	r1, [sp, #8]
   154b0:	ldr	r1, [r1, #4]
   154b4:	mov	r7, r0
   154b8:	mov	r0, #1
   154bc:	str	r2, [sp, #4]
   154c0:	cmp	sl, r1
   154c4:	bcs	15620 <__mempcpy_chk@plt+0x3f90>
   154c8:	add	r8, r7, #36	; 0x24
   154cc:	mov	r9, #0
   154d0:	ldr	r4, [sl]
   154d4:	cmp	r4, #0
   154d8:	beq	15608 <__mempcpy_chk@plt+0x3f78>
   154dc:	ldr	r5, [sl, #4]
   154e0:	cmp	r5, #0
   154e4:	beq	1555c <__mempcpy_chk@plt+0x3ecc>
   154e8:	ldr	r1, [r7, #8]
   154ec:	ldr	r4, [r5]
   154f0:	ldr	r2, [r7, #24]
   154f4:	mov	r0, r4
   154f8:	blx	r2
   154fc:	ldr	r1, [r7, #8]
   15500:	cmp	r0, r1
   15504:	bcs	15634 <__mempcpy_chk@plt+0x3fa4>
   15508:	ldr	r3, [r7]
   1550c:	ldr	r2, [r5, #4]
   15510:	ldr	r6, [r3, r0, lsl #3]
   15514:	cmp	r6, #0
   15518:	beq	15528 <__mempcpy_chk@plt+0x3e98>
   1551c:	add	r0, r3, r0, lsl #3
   15520:	add	r0, r0, #4
   15524:	b	15540 <__mempcpy_chk@plt+0x3eb0>
   15528:	str	r4, [r3, r0, lsl #3]
   1552c:	ldr	r0, [r7, #12]
   15530:	add	r0, r0, #1
   15534:	str	r0, [r7, #12]
   15538:	mov	r0, r8
   1553c:	str	r9, [r5]
   15540:	ldr	r3, [r0]
   15544:	cmp	r2, #0
   15548:	str	r3, [r5, #4]
   1554c:	str	r5, [r0]
   15550:	mov	r5, r2
   15554:	bne	154ec <__mempcpy_chk@plt+0x3e5c>
   15558:	ldr	r4, [sl]
   1555c:	ldr	r0, [sp, #4]
   15560:	str	r9, [sl, #4]
   15564:	cmp	r0, #0
   15568:	bne	15608 <__mempcpy_chk@plt+0x3f78>
   1556c:	ldr	r1, [r7, #8]
   15570:	ldr	r2, [r7, #24]
   15574:	mov	r0, r4
   15578:	blx	r2
   1557c:	mov	r5, r0
   15580:	ldr	r0, [r7, #8]
   15584:	cmp	r5, r0
   15588:	bcs	15634 <__mempcpy_chk@plt+0x3fa4>
   1558c:	ldr	r6, [r7]
   15590:	ldr	r0, [r6, r5, lsl #3]
   15594:	cmp	r0, #0
   15598:	beq	155b8 <__mempcpy_chk@plt+0x3f28>
   1559c:	ldr	r0, [r8]
   155a0:	cmp	r0, #0
   155a4:	beq	155cc <__mempcpy_chk@plt+0x3f3c>
   155a8:	mov	r1, r0
   155ac:	ldr	r2, [r1, #4]!
   155b0:	str	r2, [r8]
   155b4:	b	155e0 <__mempcpy_chk@plt+0x3f50>
   155b8:	str	r4, [r6, r5, lsl #3]
   155bc:	ldr	r0, [r7, #12]
   155c0:	add	r0, r0, #1
   155c4:	str	r0, [r7, #12]
   155c8:	b	155f4 <__mempcpy_chk@plt+0x3f64>
   155cc:	mov	r0, #8
   155d0:	bl	191e0 <__mempcpy_chk@plt+0x7b50>
   155d4:	cmp	r0, #0
   155d8:	beq	15628 <__mempcpy_chk@plt+0x3f98>
   155dc:	add	r1, r0, #4
   155e0:	str	r4, [r0]
   155e4:	add	r2, r6, r5, lsl #3
   155e8:	ldr	r3, [r2, #4]
   155ec:	str	r3, [r1]
   155f0:	str	r0, [r2, #4]
   155f4:	ldr	r1, [sp, #8]
   155f8:	str	r9, [sl]
   155fc:	ldr	r0, [r1, #12]
   15600:	sub	r0, r0, #1
   15604:	str	r0, [r1, #12]
   15608:	ldr	r0, [sp, #8]
   1560c:	add	sl, sl, #8
   15610:	ldr	r0, [r0, #4]
   15614:	cmp	sl, r0
   15618:	bcc	154d0 <__mempcpy_chk@plt+0x3e40>
   1561c:	mov	r0, #1
   15620:	sub	sp, fp, #28
   15624:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15628:	mov	r0, #0
   1562c:	sub	sp, fp, #28
   15630:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15634:	bl	11654 <abort@plt>
   15638:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1563c:	add	fp, sp, #28
   15640:	sub	sp, sp, #4
   15644:	cmp	r1, #0
   15648:	beq	1596c <__mempcpy_chk@plt+0x42dc>
   1564c:	mov	r8, r2
   15650:	mov	sl, r1
   15654:	ldr	r1, [r0, #8]
   15658:	ldr	r2, [r0, #24]
   1565c:	mov	r4, r0
   15660:	mov	r0, sl
   15664:	blx	r2
   15668:	mov	r7, r0
   1566c:	ldr	r0, [r4, #8]
   15670:	cmp	r7, r0
   15674:	bcs	1596c <__mempcpy_chk@plt+0x42dc>
   15678:	ldr	r5, [r4]
   1567c:	mov	r9, r5
   15680:	ldr	r1, [r9, r7, lsl #3]!
   15684:	cmp	r1, #0
   15688:	beq	15714 <__mempcpy_chk@plt+0x4084>
   1568c:	cmp	r1, sl
   15690:	beq	156bc <__mempcpy_chk@plt+0x402c>
   15694:	ldr	r2, [r4, #28]
   15698:	mov	r0, sl
   1569c:	blx	r2
   156a0:	cmp	r0, #0
   156a4:	mov	r6, r9
   156a8:	beq	156d0 <__mempcpy_chk@plt+0x4040>
   156ac:	ldr	r0, [r6]
   156b0:	cmp	r0, #0
   156b4:	bne	156c0 <__mempcpy_chk@plt+0x4030>
   156b8:	b	15714 <__mempcpy_chk@plt+0x4084>
   156bc:	mov	r0, sl
   156c0:	cmp	r8, #0
   156c4:	mov	r7, #0
   156c8:	strne	r0, [r8]
   156cc:	b	15908 <__mempcpy_chk@plt+0x4278>
   156d0:	add	r6, r5, r7, lsl #3
   156d4:	ldr	r0, [r6, #4]!
   156d8:	cmp	r0, #0
   156dc:	beq	15714 <__mempcpy_chk@plt+0x4084>
   156e0:	ldr	r1, [r0]
   156e4:	cmp	r1, sl
   156e8:	beq	15708 <__mempcpy_chk@plt+0x4078>
   156ec:	ldr	r2, [r4, #28]
   156f0:	mov	r0, sl
   156f4:	blx	r2
   156f8:	ldr	r6, [r6]
   156fc:	cmp	r0, #0
   15700:	beq	156d4 <__mempcpy_chk@plt+0x4044>
   15704:	b	156ac <__mempcpy_chk@plt+0x401c>
   15708:	mov	r0, sl
   1570c:	cmp	r0, #0
   15710:	bne	156c0 <__mempcpy_chk@plt+0x4030>
   15714:	vldr	s0, [r4, #8]
   15718:	vldr	s2, [r4, #12]
   1571c:	ldr	r0, [r4, #20]
   15720:	vcvt.f32.u32	s0, s0
   15724:	vcvt.f32.u32	s4, s2
   15728:	vldr	s2, [r0, #8]
   1572c:	vmul.f32	s6, s2, s0
   15730:	vcmpe.f32	s6, s4
   15734:	vmrs	APSR_nzcv, fpscr
   15738:	bpl	1588c <__mempcpy_chk@plt+0x41fc>
   1573c:	movw	r1, #45256	; 0xb0c8
   15740:	movt	r1, #1
   15744:	cmp	r0, r1
   15748:	beq	157d4 <__mempcpy_chk@plt+0x4144>
   1574c:	vldr	s6, [pc, #540]	; 15970 <__mempcpy_chk@plt+0x42e0>
   15750:	vcmpe.f32	s2, s6
   15754:	vmrs	APSR_nzcv, fpscr
   15758:	ble	157c0 <__mempcpy_chk@plt+0x4130>
   1575c:	vldr	s8, [pc, #528]	; 15974 <__mempcpy_chk@plt+0x42e4>
   15760:	vcmpe.f32	s2, s8
   15764:	vmrs	APSR_nzcv, fpscr
   15768:	bpl	157c0 <__mempcpy_chk@plt+0x4130>
   1576c:	vldr	s8, [pc, #516]	; 15978 <__mempcpy_chk@plt+0x42e8>
   15770:	vldr	s10, [r0, #12]
   15774:	vcmpe.f32	s10, s8
   15778:	vmrs	APSR_nzcv, fpscr
   1577c:	ble	157c0 <__mempcpy_chk@plt+0x4130>
   15780:	vldr	s8, [r0]
   15784:	vcmpe.f32	s8, #0.0
   15788:	vmrs	APSR_nzcv, fpscr
   1578c:	blt	157c0 <__mempcpy_chk@plt+0x4130>
   15790:	vadd.f32	s6, s8, s6
   15794:	vcmpe.f32	s6, s2
   15798:	vmrs	APSR_nzcv, fpscr
   1579c:	bpl	157c0 <__mempcpy_chk@plt+0x4130>
   157a0:	vldr	s8, [r0, #4]
   157a4:	vmov.f32	s10, #112	; 0x3f800000  1.0
   157a8:	vcmpe.f32	s8, s10
   157ac:	vmrs	APSR_nzcv, fpscr
   157b0:	bhi	157c0 <__mempcpy_chk@plt+0x4130>
   157b4:	vcmpe.f32	s6, s8
   157b8:	vmrs	APSR_nzcv, fpscr
   157bc:	bmi	157d8 <__mempcpy_chk@plt+0x4148>
   157c0:	vldr	s2, [pc, #436]	; 1597c <__mempcpy_chk@plt+0x42ec>
   157c4:	movw	r0, #45256	; 0xb0c8
   157c8:	movt	r0, #1
   157cc:	str	r0, [r4, #20]
   157d0:	b	157d8 <__mempcpy_chk@plt+0x4148>
   157d4:	mov	r0, r1
   157d8:	vmul.f32	s6, s2, s0
   157dc:	vcmpe.f32	s6, s4
   157e0:	vmrs	APSR_nzcv, fpscr
   157e4:	bpl	1588c <__mempcpy_chk@plt+0x41fc>
   157e8:	vldr	s4, [r0, #12]
   157ec:	ldrb	r0, [r0, #16]
   157f0:	mvn	r7, #0
   157f4:	vmul.f32	s0, s4, s0
   157f8:	vldr	s4, [pc, #384]	; 15980 <__mempcpy_chk@plt+0x42f0>
   157fc:	cmp	r0, #0
   15800:	vmul.f32	s2, s2, s0
   15804:	vseleq.f32	s0, s2, s0
   15808:	vcmpe.f32	s0, s4
   1580c:	vmrs	APSR_nzcv, fpscr
   15810:	bge	15908 <__mempcpy_chk@plt+0x4278>
   15814:	vcvt.u32.f32	s0, s0
   15818:	mov	r0, r4
   1581c:	vmov	r1, s0
   15820:	bl	15238 <__mempcpy_chk@plt+0x3ba8>
   15824:	cmp	r0, #0
   15828:	beq	15908 <__mempcpy_chk@plt+0x4278>
   1582c:	ldr	r1, [r4, #8]
   15830:	ldr	r2, [r4, #24]
   15834:	mov	r0, sl
   15838:	blx	r2
   1583c:	mov	r7, r0
   15840:	ldr	r0, [r4, #8]
   15844:	cmp	r7, r0
   15848:	bcs	1596c <__mempcpy_chk@plt+0x42dc>
   1584c:	ldr	r5, [r4]
   15850:	mov	r9, r5
   15854:	ldr	r1, [r9, r7, lsl #3]!
   15858:	cmp	r1, #0
   1585c:	beq	158b4 <__mempcpy_chk@plt+0x4224>
   15860:	cmp	r1, sl
   15864:	mov	r0, sl
   15868:	beq	15884 <__mempcpy_chk@plt+0x41f4>
   1586c:	ldr	r2, [r4, #28]
   15870:	mov	r0, sl
   15874:	blx	r2
   15878:	cmp	r0, #0
   1587c:	beq	1591c <__mempcpy_chk@plt+0x428c>
   15880:	ldr	r0, [r9]
   15884:	cmp	r0, #0
   15888:	bne	1596c <__mempcpy_chk@plt+0x42dc>
   1588c:	ldr	r0, [r9]
   15890:	cmp	r0, #0
   15894:	beq	158b4 <__mempcpy_chk@plt+0x4224>
   15898:	ldr	r0, [r4, #36]	; 0x24
   1589c:	cmp	r0, #0
   158a0:	beq	158d4 <__mempcpy_chk@plt+0x4244>
   158a4:	mov	r1, r0
   158a8:	ldr	r2, [r1, #4]!
   158ac:	str	r2, [r4, #36]	; 0x24
   158b0:	b	158e8 <__mempcpy_chk@plt+0x4258>
   158b4:	str	sl, [r9]
   158b8:	ldr	r0, [r4, #12]
   158bc:	ldr	r1, [r4, #16]
   158c0:	add	r0, r0, #1
   158c4:	add	r1, r1, #1
   158c8:	str	r0, [r4, #12]
   158cc:	str	r1, [r4, #16]
   158d0:	b	15904 <__mempcpy_chk@plt+0x4274>
   158d4:	mov	r0, #8
   158d8:	bl	191e0 <__mempcpy_chk@plt+0x7b50>
   158dc:	cmp	r0, #0
   158e0:	beq	15914 <__mempcpy_chk@plt+0x4284>
   158e4:	add	r1, r0, #4
   158e8:	str	sl, [r0]
   158ec:	ldr	r2, [r9, #4]
   158f0:	str	r2, [r1]
   158f4:	str	r0, [r9, #4]
   158f8:	ldr	r0, [r4, #16]
   158fc:	add	r0, r0, #1
   15900:	str	r0, [r4, #16]
   15904:	mov	r7, #1
   15908:	mov	r0, r7
   1590c:	sub	sp, fp, #28
   15910:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15914:	mvn	r7, #0
   15918:	b	15908 <__mempcpy_chk@plt+0x4278>
   1591c:	add	r6, r5, r7, lsl #3
   15920:	ldr	r0, [r6, #4]!
   15924:	cmp	r0, #0
   15928:	beq	1588c <__mempcpy_chk@plt+0x41fc>
   1592c:	ldr	r1, [r0]
   15930:	cmp	r1, sl
   15934:	beq	15960 <__mempcpy_chk@plt+0x42d0>
   15938:	ldr	r2, [r4, #28]
   1593c:	mov	r0, sl
   15940:	blx	r2
   15944:	ldr	r6, [r6]
   15948:	cmp	r0, #0
   1594c:	beq	15920 <__mempcpy_chk@plt+0x4290>
   15950:	ldr	r0, [r6]
   15954:	cmp	r0, #0
   15958:	beq	1588c <__mempcpy_chk@plt+0x41fc>
   1595c:	b	1596c <__mempcpy_chk@plt+0x42dc>
   15960:	mov	r0, sl
   15964:	cmp	r0, #0
   15968:	beq	1588c <__mempcpy_chk@plt+0x41fc>
   1596c:	bl	11654 <abort@plt>
   15970:	stclcc	12, cr12, [ip, #820]	; 0x334
   15974:	svccc	0x00666666
   15978:	svccc	0x008ccccd
   1597c:	svccc	0x004ccccd
   15980:	svcmi	0x00800000
   15984:	push	{r4, sl, fp, lr}
   15988:	add	fp, sp, #8
   1598c:	sub	sp, sp, #8
   15990:	add	r2, sp, #4
   15994:	mov	r4, r1
   15998:	bl	15638 <__mempcpy_chk@plt+0x3fa8>
   1599c:	cmn	r0, #1
   159a0:	beq	159b4 <__mempcpy_chk@plt+0x4324>
   159a4:	ldr	r1, [sp, #4]
   159a8:	cmp	r0, #0
   159ac:	moveq	r4, r1
   159b0:	b	159b8 <__mempcpy_chk@plt+0x4328>
   159b4:	mov	r4, #0
   159b8:	mov	r0, r4
   159bc:	sub	sp, fp, #8
   159c0:	pop	{r4, sl, fp, pc}
   159c4:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   159c8:	add	fp, sp, #24
   159cc:	mov	r9, r1
   159d0:	ldr	r1, [r0, #8]
   159d4:	ldr	r2, [r0, #24]
   159d8:	mov	r5, r0
   159dc:	mov	r0, r9
   159e0:	blx	r2
   159e4:	mov	r7, r0
   159e8:	ldr	r0, [r5, #8]
   159ec:	cmp	r7, r0
   159f0:	bcs	15c50 <__mempcpy_chk@plt+0x45c0>
   159f4:	ldr	r6, [r5]
   159f8:	mov	r8, #0
   159fc:	mov	r4, r6
   15a00:	ldr	r1, [r4, r7, lsl #3]!
   15a04:	cmp	r1, #0
   15a08:	beq	15abc <__mempcpy_chk@plt+0x442c>
   15a0c:	cmp	r1, r9
   15a10:	beq	15a2c <__mempcpy_chk@plt+0x439c>
   15a14:	ldr	r2, [r5, #28]
   15a18:	mov	r0, r9
   15a1c:	blx	r2
   15a20:	cmp	r0, #0
   15a24:	beq	15a64 <__mempcpy_chk@plt+0x43d4>
   15a28:	ldr	r9, [r4]
   15a2c:	add	r0, r6, r7, lsl #3
   15a30:	ldr	r0, [r0, #4]
   15a34:	cmp	r0, #0
   15a38:	beq	15aac <__mempcpy_chk@plt+0x441c>
   15a3c:	ldm	r0, {r1, r2}
   15a40:	stm	r4, {r1, r2}
   15a44:	mov	r1, #0
   15a48:	str	r1, [r0]
   15a4c:	ldr	r1, [r5, #36]	; 0x24
   15a50:	str	r1, [r0, #4]
   15a54:	str	r0, [r5, #36]	; 0x24
   15a58:	cmp	r9, #0
   15a5c:	bne	15af4 <__mempcpy_chk@plt+0x4464>
   15a60:	b	15abc <__mempcpy_chk@plt+0x442c>
   15a64:	add	r7, r6, r7, lsl #3
   15a68:	ldr	r0, [r7, #4]!
   15a6c:	cmp	r0, #0
   15a70:	beq	15abc <__mempcpy_chk@plt+0x442c>
   15a74:	ldr	r1, [r0]
   15a78:	cmp	r1, r9
   15a7c:	beq	15ac4 <__mempcpy_chk@plt+0x4434>
   15a80:	ldr	r2, [r5, #28]
   15a84:	mov	r0, r9
   15a88:	blx	r2
   15a8c:	ldr	r1, [r7]
   15a90:	cmp	r0, #0
   15a94:	bne	15acc <__mempcpy_chk@plt+0x443c>
   15a98:	ldr	r0, [r1, #4]!
   15a9c:	cmp	r0, #0
   15aa0:	mov	r7, r1
   15aa4:	bne	15a74 <__mempcpy_chk@plt+0x43e4>
   15aa8:	b	15abc <__mempcpy_chk@plt+0x442c>
   15aac:	mov	r0, #0
   15ab0:	str	r0, [r4]
   15ab4:	cmp	r9, #0
   15ab8:	bne	15af4 <__mempcpy_chk@plt+0x4464>
   15abc:	mov	r0, r8
   15ac0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   15ac4:	mov	r1, r0
   15ac8:	b	15ad0 <__mempcpy_chk@plt+0x4440>
   15acc:	ldr	r9, [r1]
   15ad0:	ldr	r0, [r1, #4]
   15ad4:	str	r0, [r7]
   15ad8:	mov	r0, #0
   15adc:	str	r0, [r1]
   15ae0:	ldr	r0, [r5, #36]	; 0x24
   15ae4:	str	r0, [r1, #4]
   15ae8:	str	r1, [r5, #36]	; 0x24
   15aec:	cmp	r9, #0
   15af0:	beq	15abc <__mempcpy_chk@plt+0x442c>
   15af4:	ldr	r0, [r5, #16]
   15af8:	sub	r0, r0, #1
   15afc:	str	r0, [r5, #16]
   15b00:	ldr	r0, [r4]
   15b04:	cmp	r0, #0
   15b08:	bne	15c10 <__mempcpy_chk@plt+0x4580>
   15b0c:	ldr	r0, [r5, #12]
   15b10:	vldr	s0, [r5, #8]
   15b14:	sub	r1, r0, #1
   15b18:	str	r1, [r5, #12]
   15b1c:	vmov	s2, r1
   15b20:	ldr	r0, [r5, #20]
   15b24:	vcvt.f32.u32	s0, s0
   15b28:	vcvt.f32.u32	s2, s2
   15b2c:	vldr	s4, [r0]
   15b30:	vmul.f32	s6, s4, s0
   15b34:	vcmpe.f32	s6, s2
   15b38:	vmrs	APSR_nzcv, fpscr
   15b3c:	ble	15c10 <__mempcpy_chk@plt+0x4580>
   15b40:	movw	r1, #45256	; 0xb0c8
   15b44:	movt	r1, #1
   15b48:	cmp	r0, r1
   15b4c:	beq	15ba4 <__mempcpy_chk@plt+0x4514>
   15b50:	vldr	s8, [pc, #252]	; 15c54 <__mempcpy_chk@plt+0x45c4>
   15b54:	vldr	s6, [r0, #8]
   15b58:	vcmpe.f32	s6, s8
   15b5c:	vmrs	APSR_nzcv, fpscr
   15b60:	ble	15b90 <__mempcpy_chk@plt+0x4500>
   15b64:	vldr	s10, [pc, #236]	; 15c58 <__mempcpy_chk@plt+0x45c8>
   15b68:	vcmpe.f32	s6, s10
   15b6c:	vmrs	APSR_nzcv, fpscr
   15b70:	bpl	15b90 <__mempcpy_chk@plt+0x4500>
   15b74:	vcmpe.f32	s4, #0.0
   15b78:	vmrs	APSR_nzcv, fpscr
   15b7c:	vldrge	s10, [r0, #12]
   15b80:	vldrge	s12, [pc, #212]	; 15c5c <__mempcpy_chk@plt+0x45cc>
   15b84:	vcmpege.f32	s10, s12
   15b88:	vmrsge	APSR_nzcv, fpscr
   15b8c:	bgt	15c1c <__mempcpy_chk@plt+0x458c>
   15b90:	vldr	s4, [pc, #200]	; 15c60 <__mempcpy_chk@plt+0x45d0>
   15b94:	movw	r0, #45256	; 0xb0c8
   15b98:	movt	r0, #1
   15b9c:	str	r0, [r5, #20]
   15ba0:	b	15ba8 <__mempcpy_chk@plt+0x4518>
   15ba4:	mov	r0, r1
   15ba8:	vmul.f32	s4, s4, s0
   15bac:	vcmpe.f32	s4, s2
   15bb0:	vmrs	APSR_nzcv, fpscr
   15bb4:	ble	15c10 <__mempcpy_chk@plt+0x4580>
   15bb8:	ldrb	r1, [r0, #16]
   15bbc:	vldr	s2, [r0, #4]
   15bc0:	cmp	r1, #0
   15bc4:	vmul.f32	s0, s2, s0
   15bc8:	vldreq	s2, [r0, #8]
   15bcc:	mov	r0, r5
   15bd0:	vmuleq.f32	s0, s0, s2
   15bd4:	vcvt.u32.f32	s0, s0
   15bd8:	vmov	r1, s0
   15bdc:	bl	15238 <__mempcpy_chk@plt+0x3ba8>
   15be0:	cmp	r0, #0
   15be4:	bne	15c10 <__mempcpy_chk@plt+0x4580>
   15be8:	ldr	r0, [r5, #36]	; 0x24
   15bec:	cmp	r0, #0
   15bf0:	beq	15c08 <__mempcpy_chk@plt+0x4578>
   15bf4:	ldr	r4, [r0, #4]
   15bf8:	bl	148e8 <__mempcpy_chk@plt+0x3258>
   15bfc:	cmp	r4, #0
   15c00:	mov	r0, r4
   15c04:	bne	15bf4 <__mempcpy_chk@plt+0x4564>
   15c08:	mov	r0, #0
   15c0c:	str	r0, [r5, #36]	; 0x24
   15c10:	mov	r8, r9
   15c14:	mov	r0, r8
   15c18:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   15c1c:	vadd.f32	s8, s4, s8
   15c20:	vcmpe.f32	s8, s6
   15c24:	vmrs	APSR_nzcv, fpscr
   15c28:	bpl	15b90 <__mempcpy_chk@plt+0x4500>
   15c2c:	vldr	s6, [r0, #4]
   15c30:	vmov.f32	s10, #112	; 0x3f800000  1.0
   15c34:	vcmpe.f32	s6, s10
   15c38:	vmrs	APSR_nzcv, fpscr
   15c3c:	bhi	15b90 <__mempcpy_chk@plt+0x4500>
   15c40:	vcmpe.f32	s8, s6
   15c44:	vmrs	APSR_nzcv, fpscr
   15c48:	bmi	15ba8 <__mempcpy_chk@plt+0x4518>
   15c4c:	b	15b90 <__mempcpy_chk@plt+0x4500>
   15c50:	bl	11654 <abort@plt>
   15c54:	stclcc	12, cr12, [ip, #820]	; 0x334
   15c58:	svccc	0x00666666
   15c5c:	svccc	0x008ccccd
   15c60:	andeq	r0, r0, r0
   15c64:	b	159c4 <__mempcpy_chk@plt+0x4334>
   15c68:	push	{fp, lr}
   15c6c:	mov	fp, sp
   15c70:	mov	r2, r1
   15c74:	ldrd	r0, [r0, #8]
   15c78:	mov	r3, #0
   15c7c:	bl	19cdc <__mempcpy_chk@plt+0x864c>
   15c80:	mov	r0, r2
   15c84:	pop	{fp, pc}
   15c88:	push	{r4, r5, fp, lr}
   15c8c:	add	fp, sp, #8
   15c90:	ldrd	r2, [r1, #8]
   15c94:	ldrd	r4, [r0, #8]
   15c98:	eor	r3, r5, r3
   15c9c:	eor	r2, r4, r2
   15ca0:	orrs	r2, r2, r3
   15ca4:	bne	15cd0 <__mempcpy_chk@plt+0x4640>
   15ca8:	ldrd	r2, [r1, #16]
   15cac:	ldrd	r4, [r0, #16]
   15cb0:	eor	r3, r5, r3
   15cb4:	eor	r2, r4, r2
   15cb8:	orrs	r2, r2, r3
   15cbc:	bne	15cd0 <__mempcpy_chk@plt+0x4640>
   15cc0:	ldr	r1, [r1]
   15cc4:	ldr	r0, [r0]
   15cc8:	pop	{r4, r5, fp, lr}
   15ccc:	b	17d80 <__mempcpy_chk@plt+0x66f0>
   15cd0:	mov	r0, #0
   15cd4:	pop	{r4, r5, fp, pc}
   15cd8:	push	{r4, r5, fp, lr}
   15cdc:	add	fp, sp, #8
   15ce0:	mov	r5, r0
   15ce4:	ldr	r0, [r0]
   15ce8:	mov	r4, r1
   15cec:	bl	198d8 <__mempcpy_chk@plt+0x8248>
   15cf0:	ldrd	r2, [r5, #8]
   15cf4:	eor	r0, r2, r0
   15cf8:	mov	r1, r3
   15cfc:	mov	r2, r4
   15d00:	mov	r3, #0
   15d04:	bl	19cdc <__mempcpy_chk@plt+0x864c>
   15d08:	mov	r0, r2
   15d0c:	pop	{r4, r5, fp, pc}
   15d10:	push	{r4, r5, r6, r7, fp, lr}
   15d14:	add	fp, sp, #16
   15d18:	ldrd	r2, [r1, #8]
   15d1c:	ldrd	r4, [r0, #8]
   15d20:	eor	r3, r5, r3
   15d24:	eor	r2, r4, r2
   15d28:	orrs	r2, r2, r3
   15d2c:	mov	r2, #0
   15d30:	bne	15d60 <__mempcpy_chk@plt+0x46d0>
   15d34:	ldrd	r4, [r1, #16]
   15d38:	ldrd	r6, [r0, #16]
   15d3c:	eor	r3, r7, r5
   15d40:	eor	r7, r6, r4
   15d44:	orrs	r3, r7, r3
   15d48:	bne	15d60 <__mempcpy_chk@plt+0x46d0>
   15d4c:	ldr	r1, [r1]
   15d50:	ldr	r0, [r0]
   15d54:	bl	11348 <strcmp@plt>
   15d58:	clz	r0, r0
   15d5c:	lsr	r2, r0, #5
   15d60:	mov	r0, r2
   15d64:	pop	{r4, r5, r6, r7, fp, pc}
   15d68:	push	{r4, sl, fp, lr}
   15d6c:	add	fp, sp, #8
   15d70:	mov	r4, r0
   15d74:	ldr	r0, [r0]
   15d78:	bl	148e8 <__mempcpy_chk@plt+0x3258>
   15d7c:	mov	r0, r4
   15d80:	pop	{r4, sl, fp, lr}
   15d84:	b	148e8 <__mempcpy_chk@plt+0x3258>
   15d88:	sub	sp, sp, #4
   15d8c:	push	{fp, lr}
   15d90:	mov	fp, sp
   15d94:	sub	sp, sp, #4
   15d98:	str	r3, [fp, #8]
   15d9c:	mov	r3, #0
   15da0:	tst	r2, #64	; 0x40
   15da4:	addne	r3, fp, #8
   15da8:	addne	r3, r3, #4
   15dac:	strne	r3, [sp]
   15db0:	ldrne	r3, [fp, #8]
   15db4:	bl	11510 <openat64@plt>
   15db8:	bl	18470 <__mempcpy_chk@plt+0x6de0>
   15dbc:	mov	sp, fp
   15dc0:	pop	{fp, lr}
   15dc4:	add	sp, sp, #4
   15dc8:	bx	lr
   15dcc:	push	{r4, r5, r6, sl, fp, lr}
   15dd0:	add	fp, sp, #16
   15dd4:	orr	r2, r2, #18688	; 0x4900
   15dd8:	mov	r4, r3
   15ddc:	orr	r2, r2, #524288	; 0x80000
   15de0:	bl	15d88 <__mempcpy_chk@plt+0x46f8>
   15de4:	mov	r5, r0
   15de8:	mov	r0, #0
   15dec:	cmp	r5, #0
   15df0:	poplt	{r4, r5, r6, sl, fp, pc}
   15df4:	mov	r0, r5
   15df8:	bl	11600 <fdopendir@plt>
   15dfc:	cmp	r0, #0
   15e00:	strne	r5, [r4]
   15e04:	popne	{r4, r5, r6, sl, fp, pc}
   15e08:	bl	1151c <__errno_location@plt>
   15e0c:	ldr	r6, [r0]
   15e10:	mov	r4, r0
   15e14:	mov	r0, r5
   15e18:	bl	11660 <close@plt>
   15e1c:	mov	r0, #0
   15e20:	str	r6, [r4]
   15e24:	pop	{r4, r5, r6, sl, fp, pc}
   15e28:	push	{r4, r5, fp, lr}
   15e2c:	add	fp, sp, #8
   15e30:	cmp	r0, #0
   15e34:	beq	15ec8 <__mempcpy_chk@plt+0x4838>
   15e38:	mov	r1, #47	; 0x2f
   15e3c:	mov	r4, r0
   15e40:	bl	115dc <strrchr@plt>
   15e44:	cmp	r0, #0
   15e48:	mov	r5, r4
   15e4c:	addne	r5, r0, #1
   15e50:	sub	r0, r5, r4
   15e54:	cmp	r0, #7
   15e58:	blt	15eac <__mempcpy_chk@plt+0x481c>
   15e5c:	movw	r1, #45332	; 0xb114
   15e60:	sub	r0, r5, #7
   15e64:	mov	r2, #7
   15e68:	movt	r1, #1
   15e6c:	bl	11648 <strncmp@plt>
   15e70:	cmp	r0, #0
   15e74:	bne	15eac <__mempcpy_chk@plt+0x481c>
   15e78:	movw	r1, #45340	; 0xb11c
   15e7c:	mov	r0, r5
   15e80:	mov	r2, #3
   15e84:	movt	r1, #1
   15e88:	bl	11648 <strncmp@plt>
   15e8c:	cmp	r0, #0
   15e90:	beq	15e9c <__mempcpy_chk@plt+0x480c>
   15e94:	mov	r4, r5
   15e98:	b	15eac <__mempcpy_chk@plt+0x481c>
   15e9c:	movw	r0, #49560	; 0xc198
   15ea0:	add	r4, r5, #3
   15ea4:	movt	r0, #2
   15ea8:	str	r4, [r0]
   15eac:	movw	r0, #49564	; 0xc19c
   15eb0:	movt	r0, #2
   15eb4:	str	r4, [r0]
   15eb8:	movw	r0, #49632	; 0xc1e0
   15ebc:	movt	r0, #2
   15ec0:	str	r4, [r0]
   15ec4:	pop	{r4, r5, fp, pc}
   15ec8:	movw	r0, #49576	; 0xc1a8
   15ecc:	mov	r1, #55	; 0x37
   15ed0:	mov	r2, #1
   15ed4:	movt	r0, #2
   15ed8:	ldr	r3, [r0]
   15edc:	movw	r0, #45276	; 0xb0dc
   15ee0:	movt	r0, #1
   15ee4:	bl	11438 <fwrite@plt>
   15ee8:	bl	11654 <abort@plt>
   15eec:	push	{r4, r5, r6, sl, fp, lr}
   15ef0:	add	fp, sp, #16
   15ef4:	mov	r4, r0
   15ef8:	movw	r0, #49640	; 0xc1e8
   15efc:	movt	r0, #2
   15f00:	cmp	r4, #0
   15f04:	moveq	r4, r0
   15f08:	bl	1151c <__errno_location@plt>
   15f0c:	ldr	r6, [r0]
   15f10:	mov	r5, r0
   15f14:	mov	r0, r4
   15f18:	mov	r1, #48	; 0x30
   15f1c:	bl	18fcc <__mempcpy_chk@plt+0x793c>
   15f20:	str	r6, [r5]
   15f24:	pop	{r4, r5, r6, sl, fp, pc}
   15f28:	movw	r1, #49640	; 0xc1e8
   15f2c:	cmp	r0, #0
   15f30:	movt	r1, #2
   15f34:	movne	r1, r0
   15f38:	ldr	r0, [r1]
   15f3c:	bx	lr
   15f40:	movw	r2, #49640	; 0xc1e8
   15f44:	cmp	r0, #0
   15f48:	movt	r2, #2
   15f4c:	movne	r2, r0
   15f50:	str	r1, [r2]
   15f54:	bx	lr
   15f58:	movw	r3, #49640	; 0xc1e8
   15f5c:	cmp	r0, #0
   15f60:	movt	r3, #2
   15f64:	movne	r3, r0
   15f68:	ubfx	r0, r1, #5, #3
   15f6c:	and	r1, r1, #31
   15f70:	add	r0, r3, r0, lsl #2
   15f74:	ldr	r3, [r0, #8]
   15f78:	eor	r2, r2, r3, lsr r1
   15f7c:	and	r2, r2, #1
   15f80:	eor	r2, r3, r2, lsl r1
   15f84:	str	r2, [r0, #8]
   15f88:	mov	r0, #1
   15f8c:	and	r0, r0, r3, lsr r1
   15f90:	bx	lr
   15f94:	movw	r2, #49640	; 0xc1e8
   15f98:	cmp	r0, #0
   15f9c:	movt	r2, #2
   15fa0:	movne	r2, r0
   15fa4:	ldr	r0, [r2, #4]
   15fa8:	str	r1, [r2, #4]
   15fac:	bx	lr
   15fb0:	movw	r3, #49640	; 0xc1e8
   15fb4:	cmp	r0, #0
   15fb8:	movt	r3, #2
   15fbc:	movne	r3, r0
   15fc0:	cmp	r1, #0
   15fc4:	mov	r0, #10
   15fc8:	cmpne	r2, #0
   15fcc:	str	r0, [r3]
   15fd0:	bne	15fe0 <__mempcpy_chk@plt+0x4950>
   15fd4:	push	{fp, lr}
   15fd8:	mov	fp, sp
   15fdc:	bl	11654 <abort@plt>
   15fe0:	str	r1, [r3, #40]	; 0x28
   15fe4:	str	r2, [r3, #44]	; 0x2c
   15fe8:	bx	lr
   15fec:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15ff0:	add	fp, sp, #28
   15ff4:	sub	sp, sp, #20
   15ff8:	mov	r7, r0
   15ffc:	ldr	r0, [fp, #8]
   16000:	movw	r5, #49640	; 0xc1e8
   16004:	mov	r8, r3
   16008:	mov	r9, r2
   1600c:	mov	sl, r1
   16010:	movt	r5, #2
   16014:	cmp	r0, #0
   16018:	movne	r5, r0
   1601c:	bl	1151c <__errno_location@plt>
   16020:	mov	r4, r0
   16024:	ldm	r5, {r0, r1}
   16028:	ldr	r2, [r5, #40]	; 0x28
   1602c:	ldr	r3, [r5, #44]	; 0x2c
   16030:	add	r5, r5, #8
   16034:	ldr	r6, [r4]
   16038:	stm	sp, {r0, r1, r5}
   1603c:	str	r2, [sp, #12]
   16040:	str	r3, [sp, #16]
   16044:	mov	r0, r7
   16048:	mov	r1, sl
   1604c:	mov	r2, r9
   16050:	mov	r3, r8
   16054:	bl	16064 <__mempcpy_chk@plt+0x49d4>
   16058:	str	r6, [r4]
   1605c:	sub	sp, fp, #28
   16060:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16064:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16068:	add	fp, sp, #28
   1606c:	sub	sp, sp, #156	; 0x9c
   16070:	str	r0, [sp, #80]	; 0x50
   16074:	ldr	r0, [fp, #12]
   16078:	mov	r6, r1
   1607c:	mov	r9, r3
   16080:	str	r2, [fp, #-84]	; 0xffffffac
   16084:	and	r1, r0, #4
   16088:	str	r1, [sp, #32]
   1608c:	and	r1, r0, #1
   16090:	str	r1, [sp, #36]	; 0x24
   16094:	ubfx	r4, r0, #1, #1
   16098:	bl	11450 <__ctype_get_mb_cur_max@plt>
   1609c:	str	r0, [sp, #40]	; 0x28
   160a0:	ldr	r0, [fp, #24]
   160a4:	ldr	r7, [fp, #8]
   160a8:	mov	r1, #0
   160ac:	mov	r5, #1
   160b0:	str	r1, [fp, #-56]	; 0xffffffc8
   160b4:	mov	r1, #0
   160b8:	str	r1, [sp, #60]	; 0x3c
   160bc:	str	r0, [sp, #76]	; 0x4c
   160c0:	ldr	r0, [fp, #20]
   160c4:	str	r0, [sp, #72]	; 0x48
   160c8:	mov	r0, #0
   160cc:	str	r0, [sp, #56]	; 0x38
   160d0:	mov	r0, #0
   160d4:	str	r0, [sp, #92]	; 0x5c
   160d8:	mov	r0, #0
   160dc:	str	r0, [fp, #-76]	; 0xffffffb4
   160e0:	mov	r0, #0
   160e4:	cmp	r7, #10
   160e8:	bhi	17068 <__mempcpy_chk@plt+0x59d8>
   160ec:	add	r1, pc, #28
   160f0:	mov	sl, r6
   160f4:	ldr	r6, [sp, #80]	; 0x50
   160f8:	ldr	ip, [fp, #-84]	; 0xffffffac
   160fc:	mov	r8, #0
   16100:	mov	r2, #1
   16104:	mov	r3, #0
   16108:	mov	lr, r9
   1610c:	ldr	pc, [r1, r7, lsl #2]
   16110:	strdeq	r6, [r1], -r4
   16114:	andeq	r6, r1, r0, lsr #4
   16118:	andeq	r6, r1, r4, ror #3
   1611c:	ldrdeq	r6, [r1], -ip
   16120:	andeq	r6, r1, r4, lsl r2
   16124:	andeq	r6, r1, r8, ror #4
   16128:	andeq	r6, r1, r4, lsl #4
   1612c:	andeq	r6, r1, r4, asr #5
   16130:	andeq	r6, r1, ip, lsr r1
   16134:	andeq	r6, r1, ip, lsr r1
   16138:	andeq	r6, r1, r4, ror #2
   1613c:	movw	r0, #45422	; 0xb16e
   16140:	mov	r1, r7
   16144:	movt	r0, #1
   16148:	bl	17a74 <__mempcpy_chk@plt+0x63e4>
   1614c:	str	r0, [sp, #72]	; 0x48
   16150:	movw	r0, #45424	; 0xb170
   16154:	mov	r1, r7
   16158:	movt	r0, #1
   1615c:	bl	17a74 <__mempcpy_chk@plt+0x63e4>
   16160:	str	r0, [sp, #76]	; 0x4c
   16164:	str	r5, [fp, #-48]	; 0xffffffd0
   16168:	mov	r8, #0
   1616c:	mov	r5, r7
   16170:	tst	r4, #1
   16174:	bne	161ac <__mempcpy_chk@plt+0x4b1c>
   16178:	ldr	r0, [sp, #72]	; 0x48
   1617c:	ldrb	r0, [r0]
   16180:	cmp	r0, #0
   16184:	beq	161ac <__mempcpy_chk@plt+0x4b1c>
   16188:	ldr	r1, [sp, #72]	; 0x48
   1618c:	mov	r8, #0
   16190:	add	r1, r1, #1
   16194:	cmp	r8, sl
   16198:	strbcc	r0, [r6, r8]
   1619c:	ldrb	r0, [r1, r8]
   161a0:	add	r8, r8, #1
   161a4:	cmp	r0, #0
   161a8:	bne	16194 <__mempcpy_chk@plt+0x4b04>
   161ac:	ldr	r7, [sp, #76]	; 0x4c
   161b0:	mov	r0, r7
   161b4:	bl	11504 <strlen@plt>
   161b8:	str	r7, [sp, #92]	; 0x5c
   161bc:	mov	r7, r5
   161c0:	ldr	ip, [fp, #-84]	; 0xffffffac
   161c4:	ldr	r5, [fp, #-48]	; 0xffffffd0
   161c8:	str	r0, [fp, #-76]	; 0xffffffb4
   161cc:	mov	r2, #1
   161d0:	mov	r3, r4
   161d4:	mov	lr, r9
   161d8:	b	162c4 <__mempcpy_chk@plt+0x4c34>
   161dc:	mov	r0, #1
   161e0:	b	16220 <__mempcpy_chk@plt+0x4b90>
   161e4:	tst	r4, #1
   161e8:	bne	16220 <__mempcpy_chk@plt+0x4b90>
   161ec:	mov	r2, r0
   161f0:	b	16248 <__mempcpy_chk@plt+0x4bb8>
   161f4:	mov	r7, #0
   161f8:	mov	r8, #0
   161fc:	mov	r2, r0
   16200:	b	162c0 <__mempcpy_chk@plt+0x4c30>
   16204:	mov	r0, #1
   16208:	mov	r8, #0
   1620c:	mov	r7, #5
   16210:	b	1627c <__mempcpy_chk@plt+0x4bec>
   16214:	mov	r2, #1
   16218:	tst	r4, #1
   1621c:	beq	16248 <__mempcpy_chk@plt+0x4bb8>
   16220:	mov	r1, #1
   16224:	mov	r8, #0
   16228:	mov	r7, #2
   1622c:	mov	r2, r0
   16230:	mov	r3, #1
   16234:	str	r1, [fp, #-76]	; 0xffffffb4
   16238:	movw	r1, #45424	; 0xb170
   1623c:	movt	r1, #1
   16240:	str	r1, [sp, #92]	; 0x5c
   16244:	b	162c4 <__mempcpy_chk@plt+0x4c34>
   16248:	cmp	sl, #0
   1624c:	mov	r8, #1
   16250:	mov	r7, #2
   16254:	movne	r0, #39	; 0x27
   16258:	strbne	r0, [r6]
   1625c:	movw	r0, #45424	; 0xb170
   16260:	movt	r0, #1
   16264:	b	162b4 <__mempcpy_chk@plt+0x4c24>
   16268:	mov	r7, #5
   1626c:	tst	r4, #1
   16270:	beq	16298 <__mempcpy_chk@plt+0x4c08>
   16274:	mov	r0, #1
   16278:	mov	r8, #0
   1627c:	str	r0, [fp, #-76]	; 0xffffffb4
   16280:	movw	r0, #45420	; 0xb16c
   16284:	mov	r2, #1
   16288:	mov	r3, #1
   1628c:	movt	r0, #1
   16290:	str	r0, [sp, #92]	; 0x5c
   16294:	b	162c4 <__mempcpy_chk@plt+0x4c34>
   16298:	cmp	sl, #0
   1629c:	mov	r8, #1
   162a0:	mov	r2, #1
   162a4:	movne	r0, #34	; 0x22
   162a8:	strbne	r0, [r6]
   162ac:	movw	r0, #45420	; 0xb16c
   162b0:	movt	r0, #1
   162b4:	str	r0, [sp, #92]	; 0x5c
   162b8:	mov	r0, #1
   162bc:	str	r0, [fp, #-76]	; 0xffffffb4
   162c0:	mov	r3, #0
   162c4:	ldr	r0, [fp, #16]
   162c8:	str	r3, [fp, #-72]	; 0xffffffb8
   162cc:	str	r7, [fp, #-64]	; 0xffffffc0
   162d0:	str	r2, [sp, #84]	; 0x54
   162d4:	cmp	r0, #0
   162d8:	movwne	r0, #1
   162dc:	and	r0, r0, r3
   162e0:	str	r0, [fp, #-88]	; 0xffffffa8
   162e4:	ldr	r0, [fp, #-76]	; 0xffffffb4
   162e8:	cmp	r0, #0
   162ec:	movwne	r0, #1
   162f0:	subs	r4, r7, #2
   162f4:	mov	r7, #0
   162f8:	and	r1, r0, r3
   162fc:	str	r4, [fp, #-80]	; 0xffffffb0
   16300:	and	r1, r2, r1
   16304:	str	r1, [sp, #48]	; 0x30
   16308:	clz	r1, r4
   1630c:	lsr	r1, r1, #5
   16310:	and	r1, r1, r3
   16314:	eor	r3, r3, #1
   16318:	str	r1, [sp, #64]	; 0x40
   1631c:	mov	r1, r4
   16320:	str	r3, [sp, #88]	; 0x58
   16324:	movwne	r1, #1
   16328:	orr	r3, r1, r3
   1632c:	and	r1, r1, r2
   16330:	and	r0, r0, r1
   16334:	str	r3, [sp, #68]	; 0x44
   16338:	str	r1, [fp, #-68]	; 0xffffffbc
   1633c:	str	r0, [fp, #-60]	; 0xffffffc4
   16340:	eor	r0, r2, #1
   16344:	str	r0, [sp, #52]	; 0x34
   16348:	cmn	lr, #1
   1634c:	beq	1635c <__mempcpy_chk@plt+0x4ccc>
   16350:	cmp	r7, lr
   16354:	bne	16368 <__mempcpy_chk@plt+0x4cd8>
   16358:	b	16e90 <__mempcpy_chk@plt+0x5800>
   1635c:	ldrb	r0, [ip, r7]
   16360:	cmp	r0, #0
   16364:	beq	16e98 <__mempcpy_chk@plt+0x5808>
   16368:	ldr	r0, [fp, #-60]	; 0xffffffc4
   1636c:	mov	r9, #0
   16370:	str	r5, [fp, #-48]	; 0xffffffd0
   16374:	cmp	r0, #0
   16378:	beq	163ac <__mempcpy_chk@plt+0x4d1c>
   1637c:	ldr	r0, [fp, #-76]	; 0xffffffb4
   16380:	add	r4, r7, r0
   16384:	cmp	r0, #2
   16388:	bcc	163a4 <__mempcpy_chk@plt+0x4d14>
   1638c:	cmn	lr, #1
   16390:	bne	163a4 <__mempcpy_chk@plt+0x4d14>
   16394:	mov	r0, ip
   16398:	bl	11504 <strlen@plt>
   1639c:	ldr	ip, [fp, #-84]	; 0xffffffac
   163a0:	mov	lr, r0
   163a4:	cmp	r4, lr
   163a8:	bls	163b4 <__mempcpy_chk@plt+0x4d24>
   163ac:	mov	r0, #0
   163b0:	b	163f4 <__mempcpy_chk@plt+0x4d64>
   163b4:	ldr	r1, [sp, #92]	; 0x5c
   163b8:	ldr	r2, [fp, #-76]	; 0xffffffb4
   163bc:	add	r0, ip, r7
   163c0:	mov	r4, lr
   163c4:	bl	113d8 <memcmp@plt>
   163c8:	ldr	r2, [sp, #88]	; 0x58
   163cc:	cmp	r0, #0
   163d0:	mov	r1, r0
   163d4:	movwne	r1, #1
   163d8:	orr	r1, r1, r2
   163dc:	tst	r1, #1
   163e0:	beq	16f28 <__mempcpy_chk@plt+0x5898>
   163e4:	ldr	ip, [fp, #-84]	; 0xffffffac
   163e8:	clz	r0, r0
   163ec:	mov	lr, r4
   163f0:	lsr	r0, r0, #5
   163f4:	str	r0, [fp, #-52]	; 0xffffffcc
   163f8:	ldrb	r5, [ip, r7]
   163fc:	cmp	r5, #126	; 0x7e
   16400:	bhi	167b8 <__mempcpy_chk@plt+0x5128>
   16404:	add	r3, pc, #16
   16408:	mov	r4, #1
   1640c:	mov	r2, #110	; 0x6e
   16410:	mov	r0, #97	; 0x61
   16414:	mov	r1, #0
   16418:	ldr	pc, [r3, r5, lsl #2]
   1641c:			; <UNDEFINED> instruction: 0x000166b4
   16420:			; <UNDEFINED> instruction: 0x000167b8
   16424:			; <UNDEFINED> instruction: 0x000167b8
   16428:			; <UNDEFINED> instruction: 0x000167b8
   1642c:			; <UNDEFINED> instruction: 0x000167b8
   16430:			; <UNDEFINED> instruction: 0x000167b8
   16434:			; <UNDEFINED> instruction: 0x000167b8
   16438:	andeq	r6, r1, ip, ror #16
   1643c:	muleq	r1, r4, r6
   16440:	andeq	r6, r1, ip, lsl #13
   16444:	andeq	r6, r1, r0, lsr #13
   16448:	andeq	r6, r1, r0, lsr #14
   1644c:	andeq	r6, r1, r4, lsl #13
   16450:	muleq	r1, ip, r6
   16454:			; <UNDEFINED> instruction: 0x000167b8
   16458:			; <UNDEFINED> instruction: 0x000167b8
   1645c:			; <UNDEFINED> instruction: 0x000167b8
   16460:			; <UNDEFINED> instruction: 0x000167b8
   16464:			; <UNDEFINED> instruction: 0x000167b8
   16468:			; <UNDEFINED> instruction: 0x000167b8
   1646c:			; <UNDEFINED> instruction: 0x000167b8
   16470:			; <UNDEFINED> instruction: 0x000167b8
   16474:			; <UNDEFINED> instruction: 0x000167b8
   16478:			; <UNDEFINED> instruction: 0x000167b8
   1647c:			; <UNDEFINED> instruction: 0x000167b8
   16480:			; <UNDEFINED> instruction: 0x000167b8
   16484:			; <UNDEFINED> instruction: 0x000167b8
   16488:			; <UNDEFINED> instruction: 0x000167b8
   1648c:			; <UNDEFINED> instruction: 0x000167b8
   16490:			; <UNDEFINED> instruction: 0x000167b8
   16494:			; <UNDEFINED> instruction: 0x000167b8
   16498:			; <UNDEFINED> instruction: 0x000167b8
   1649c:	andeq	r6, r1, r4, lsr #16
   164a0:	andeq	r6, r1, r8, lsr #16
   164a4:	andeq	r6, r1, r8, lsr #16
   164a8:	andeq	r6, r1, ip, lsr #12
   164ac:	andeq	r6, r1, r8, lsr #16
   164b0:	andeq	r6, r1, r8, lsl r6
   164b4:	andeq	r6, r1, r8, lsr #16
   164b8:	andeq	r6, r1, r8, lsr #14
   164bc:	andeq	r6, r1, r8, lsr #16
   164c0:	andeq	r6, r1, r8, lsr #16
   164c4:	andeq	r6, r1, r8, lsr #16
   164c8:	andeq	r6, r1, r8, lsl r6
   164cc:	andeq	r6, r1, r8, lsl r6
   164d0:	andeq	r6, r1, r8, lsl r6
   164d4:	andeq	r6, r1, r8, lsl r6
   164d8:	andeq	r6, r1, r8, lsl r6
   164dc:	andeq	r6, r1, r8, lsl r6
   164e0:	andeq	r6, r1, r8, lsl r6
   164e4:	andeq	r6, r1, r8, lsl r6
   164e8:	andeq	r6, r1, r8, lsl r6
   164ec:	andeq	r6, r1, r8, lsl r6
   164f0:	andeq	r6, r1, r8, lsl r6
   164f4:	andeq	r6, r1, r8, lsl r6
   164f8:	andeq	r6, r1, r8, lsl r6
   164fc:	andeq	r6, r1, r8, lsl r6
   16500:	andeq	r6, r1, r8, lsl r6
   16504:	andeq	r6, r1, r8, lsl r6
   16508:	andeq	r6, r1, r8, lsr #16
   1650c:	andeq	r6, r1, r8, lsr #16
   16510:	andeq	r6, r1, r8, lsr #16
   16514:	andeq	r6, r1, r8, lsr #16
   16518:	strdeq	r6, [r1], -r4
   1651c:			; <UNDEFINED> instruction: 0x000167b8
   16520:	andeq	r6, r1, r8, lsl r6
   16524:	andeq	r6, r1, r8, lsl r6
   16528:	andeq	r6, r1, r8, lsl r6
   1652c:	andeq	r6, r1, r8, lsl r6
   16530:	andeq	r6, r1, r8, lsl r6
   16534:	andeq	r6, r1, r8, lsl r6
   16538:	andeq	r6, r1, r8, lsl r6
   1653c:	andeq	r6, r1, r8, lsl r6
   16540:	andeq	r6, r1, r8, lsl r6
   16544:	andeq	r6, r1, r8, lsl r6
   16548:	andeq	r6, r1, r8, lsl r6
   1654c:	andeq	r6, r1, r8, lsl r6
   16550:	andeq	r6, r1, r8, lsl r6
   16554:	andeq	r6, r1, r8, lsl r6
   16558:	andeq	r6, r1, r8, lsl r6
   1655c:	andeq	r6, r1, r8, lsl r6
   16560:	andeq	r6, r1, r8, lsl r6
   16564:	andeq	r6, r1, r8, lsl r6
   16568:	andeq	r6, r1, r8, lsl r6
   1656c:	andeq	r6, r1, r8, lsl r6
   16570:	andeq	r6, r1, r8, lsl r6
   16574:	andeq	r6, r1, r8, lsl r6
   16578:	andeq	r6, r1, r8, lsl r6
   1657c:	andeq	r6, r1, r8, lsl r6
   16580:	andeq	r6, r1, r8, lsl r6
   16584:	andeq	r6, r1, r8, lsl r6
   16588:	andeq	r6, r1, r8, lsr #16
   1658c:	andeq	r6, r1, r0, ror #12
   16590:	andeq	r6, r1, r8, lsl r6
   16594:	andeq	r6, r1, r8, lsr #16
   16598:	andeq	r6, r1, r8, lsl r6
   1659c:	andeq	r6, r1, r8, lsr #16
   165a0:	andeq	r6, r1, r8, lsl r6
   165a4:	andeq	r6, r1, r8, lsl r6
   165a8:	andeq	r6, r1, r8, lsl r6
   165ac:	andeq	r6, r1, r8, lsl r6
   165b0:	andeq	r6, r1, r8, lsl r6
   165b4:	andeq	r6, r1, r8, lsl r6
   165b8:	andeq	r6, r1, r8, lsl r6
   165bc:	andeq	r6, r1, r8, lsl r6
   165c0:	andeq	r6, r1, r8, lsl r6
   165c4:	andeq	r6, r1, r8, lsl r6
   165c8:	andeq	r6, r1, r8, lsl r6
   165cc:	andeq	r6, r1, r8, lsl r6
   165d0:	andeq	r6, r1, r8, lsl r6
   165d4:	andeq	r6, r1, r8, lsl r6
   165d8:	andeq	r6, r1, r8, lsl r6
   165dc:	andeq	r6, r1, r8, lsl r6
   165e0:	andeq	r6, r1, r8, lsl r6
   165e4:	andeq	r6, r1, r8, lsl r6
   165e8:	andeq	r6, r1, r8, lsl r6
   165ec:	andeq	r6, r1, r8, lsl r6
   165f0:	andeq	r6, r1, r8, lsl r6
   165f4:	andeq	r6, r1, r8, lsl r6
   165f8:	andeq	r6, r1, r8, lsl r6
   165fc:	andeq	r6, r1, r8, lsl r6
   16600:	andeq	r6, r1, r8, lsl r6
   16604:	andeq	r6, r1, r8, lsl r6
   16608:	andeq	r6, r1, r0, asr #12
   1660c:	andeq	r6, r1, r8, lsr #16
   16610:	andeq	r6, r1, r0, asr #12
   16614:	andeq	r6, r1, ip, lsr #12
   16618:	ldr	r0, [fp, #-68]	; 0xffffffbc
   1661c:	cmp	r0, #0
   16620:	beq	16880 <__mempcpy_chk@plt+0x51f0>
   16624:	ldr	r0, [fp, #16]
   16628:	b	16884 <__mempcpy_chk@plt+0x51f4>
   1662c:	mov	r4, #0
   16630:	cmp	r7, #0
   16634:	beq	16824 <__mempcpy_chk@plt+0x5194>
   16638:	mov	r9, #0
   1663c:	b	16618 <__mempcpy_chk@plt+0x4f88>
   16640:	mov	r4, #0
   16644:	cmn	lr, #1
   16648:	beq	16808 <__mempcpy_chk@plt+0x5178>
   1664c:	cmp	r7, #0
   16650:	bne	16638 <__mempcpy_chk@plt+0x4fa8>
   16654:	cmp	lr, #1
   16658:	beq	16824 <__mempcpy_chk@plt+0x5194>
   1665c:	b	16638 <__mempcpy_chk@plt+0x4fa8>
   16660:	ldr	r0, [fp, #-64]	; 0xffffffc0
   16664:	cmp	r0, #2
   16668:	bne	16848 <__mempcpy_chk@plt+0x51b8>
   1666c:	ldr	r0, [fp, #-72]	; 0xffffffb8
   16670:	tst	r0, #1
   16674:	bne	16f44 <__mempcpy_chk@plt+0x58b4>
   16678:	mov	r9, #0
   1667c:	mov	r0, #92	; 0x5c
   16680:	b	1685c <__mempcpy_chk@plt+0x51cc>
   16684:	mov	r0, #102	; 0x66
   16688:	b	1686c <__mempcpy_chk@plt+0x51dc>
   1668c:	mov	r2, #116	; 0x74
   16690:	b	166a0 <__mempcpy_chk@plt+0x5010>
   16694:	mov	r0, #98	; 0x62
   16698:	b	1686c <__mempcpy_chk@plt+0x51dc>
   1669c:	mov	r2, #114	; 0x72
   166a0:	ldr	r0, [sp, #68]	; 0x44
   166a4:	tst	r0, #1
   166a8:	mov	r0, r2
   166ac:	bne	1686c <__mempcpy_chk@plt+0x51dc>
   166b0:	b	16f44 <__mempcpy_chk@plt+0x58b4>
   166b4:	ldr	r0, [sp, #84]	; 0x54
   166b8:	tst	r0, #1
   166bc:	beq	1695c <__mempcpy_chk@plt+0x52cc>
   166c0:	ldr	r0, [fp, #-72]	; 0xffffffb8
   166c4:	tst	r0, #1
   166c8:	bne	17054 <__mempcpy_chk@plt+0x59c4>
   166cc:	ldr	r0, [fp, #-64]	; 0xffffffc0
   166d0:	ldr	r2, [fp, #-56]	; 0xffffffc8
   166d4:	cmp	r0, #2
   166d8:	ldr	r0, [fp, #-80]	; 0xffffffb0
   166dc:	movwne	r0, #1
   166e0:	orr	r0, r0, r2
   166e4:	tst	r0, #1
   166e8:	beq	16d2c <__mempcpy_chk@plt+0x569c>
   166ec:	mov	r0, r8
   166f0:	b	16d60 <__mempcpy_chk@plt+0x56d0>
   166f4:	ldr	r0, [fp, #-64]	; 0xffffffc0
   166f8:	mov	r9, #0
   166fc:	mov	r5, #63	; 0x3f
   16700:	cmp	r0, #5
   16704:	beq	16b10 <__mempcpy_chk@plt+0x5480>
   16708:	cmp	r0, #2
   1670c:	bne	16bb4 <__mempcpy_chk@plt+0x5524>
   16710:	ldr	r0, [fp, #-72]	; 0xffffffb8
   16714:	tst	r0, #1
   16718:	beq	16bb8 <__mempcpy_chk@plt+0x5528>
   1671c:	b	16f44 <__mempcpy_chk@plt+0x58b4>
   16720:	mov	r0, #118	; 0x76
   16724:	b	1686c <__mempcpy_chk@plt+0x51dc>
   16728:	mov	r0, #1
   1672c:	mov	r5, #39	; 0x27
   16730:	str	r0, [sp, #60]	; 0x3c
   16734:	ldr	r0, [fp, #-64]	; 0xffffffc0
   16738:	cmp	r0, #2
   1673c:	bne	167b0 <__mempcpy_chk@plt+0x5120>
   16740:	ldr	r0, [fp, #-72]	; 0xffffffb8
   16744:	tst	r0, #1
   16748:	bne	16f44 <__mempcpy_chk@plt+0x58b4>
   1674c:	ldr	r2, [sp, #56]	; 0x38
   16750:	clz	r1, sl
   16754:	mov	r9, #0
   16758:	lsr	r1, r1, #5
   1675c:	cmp	r2, #0
   16760:	mov	r0, r2
   16764:	movwne	r0, #1
   16768:	orrs	r0, r0, r1
   1676c:	moveq	r2, sl
   16770:	moveq	sl, r0
   16774:	cmp	r8, sl
   16778:	str	r2, [sp, #56]	; 0x38
   1677c:	movcc	r0, #39	; 0x27
   16780:	strbcc	r0, [r6, r8]
   16784:	add	r0, r8, #1
   16788:	cmp	r0, sl
   1678c:	movcc	r1, #92	; 0x5c
   16790:	strbcc	r1, [r6, r0]
   16794:	add	r0, r8, #2
   16798:	add	r8, r8, #3
   1679c:	cmp	r0, sl
   167a0:	movcc	r1, #39	; 0x27
   167a4:	strbcc	r1, [r6, r0]
   167a8:	mov	r0, #0
   167ac:	str	r0, [fp, #-56]	; 0xffffffc8
   167b0:	mov	r4, #1
   167b4:	b	16618 <__mempcpy_chk@plt+0x4f88>
   167b8:	ldr	r0, [sp, #40]	; 0x28
   167bc:	cmp	r0, #1
   167c0:	bne	16988 <__mempcpy_chk@plt+0x52f8>
   167c4:	str	lr, [sp, #28]
   167c8:	bl	114e0 <__ctype_b_loc@plt>
   167cc:	ldr	r0, [r0]
   167d0:	ldr	ip, [fp, #-84]	; 0xffffffac
   167d4:	mov	r1, #1
   167d8:	add	r0, r0, r5, lsl #1
   167dc:	ldrb	r0, [r0, #1]
   167e0:	ubfx	r4, r0, #6, #1
   167e4:	ldr	r0, [sp, #52]	; 0x34
   167e8:	mov	r2, r1
   167ec:	cmp	r1, #1
   167f0:	orr	r0, r4, r0
   167f4:	bhi	16bc0 <__mempcpy_chk@plt+0x5530>
   167f8:	tst	r0, #1
   167fc:	beq	16bc0 <__mempcpy_chk@plt+0x5530>
   16800:	ldr	lr, [sp, #28]
   16804:	b	16618 <__mempcpy_chk@plt+0x4f88>
   16808:	cmp	r7, #0
   1680c:	ldrbeq	r0, [ip, #1]
   16810:	cmpeq	r0, #0
   16814:	beq	16824 <__mempcpy_chk@plt+0x5194>
   16818:	mvn	lr, #0
   1681c:	mov	r9, #0
   16820:	b	16618 <__mempcpy_chk@plt+0x4f88>
   16824:	mov	r1, #1
   16828:	ldr	r0, [fp, #-64]	; 0xffffffc0
   1682c:	cmp	r0, #2
   16830:	bne	16840 <__mempcpy_chk@plt+0x51b0>
   16834:	ldr	r0, [fp, #-72]	; 0xffffffb8
   16838:	tst	r0, #1
   1683c:	bne	16f44 <__mempcpy_chk@plt+0x58b4>
   16840:	mov	r4, r1
   16844:	b	16618 <__mempcpy_chk@plt+0x4f88>
   16848:	ldr	r1, [sp, #48]	; 0x30
   1684c:	mov	r9, #0
   16850:	mov	r0, #92	; 0x5c
   16854:	cmp	r1, #0
   16858:	beq	1686c <__mempcpy_chk@plt+0x51dc>
   1685c:	mov	r4, #0
   16860:	cmp	r9, #0
   16864:	beq	16df8 <__mempcpy_chk@plt+0x5768>
   16868:	b	16e34 <__mempcpy_chk@plt+0x57a4>
   1686c:	ldr	r1, [sp, #84]	; 0x54
   16870:	mov	r4, #0
   16874:	mov	r9, #0
   16878:	tst	r1, #1
   1687c:	bne	168bc <__mempcpy_chk@plt+0x522c>
   16880:	ldr	r0, [fp, #-88]	; 0xffffffa8
   16884:	cmp	r0, #0
   16888:	mov	r0, r5
   1688c:	beq	168b0 <__mempcpy_chk@plt+0x5220>
   16890:	ldr	r1, [fp, #16]
   16894:	ubfx	r0, r5, #5, #3
   16898:	mov	r2, #1
   1689c:	ldr	r0, [r1, r0, lsl #2]
   168a0:	and	r1, r5, #31
   168a4:	tst	r0, r2, lsl r1
   168a8:	mov	r0, r5
   168ac:	bne	168bc <__mempcpy_chk@plt+0x522c>
   168b0:	ldr	r1, [fp, #-52]	; 0xffffffcc
   168b4:	cmp	r1, #0
   168b8:	beq	16df0 <__mempcpy_chk@plt+0x5760>
   168bc:	ldr	r1, [fp, #-72]	; 0xffffffb8
   168c0:	tst	r1, #1
   168c4:	bne	16f1c <__mempcpy_chk@plt+0x588c>
   168c8:	ldr	r1, [fp, #-64]	; 0xffffffc0
   168cc:	ldr	r2, [fp, #-56]	; 0xffffffc8
   168d0:	cmp	r1, #2
   168d4:	ldr	r1, [fp, #-80]	; 0xffffffb0
   168d8:	movwne	r1, #1
   168dc:	orr	r1, r1, r2
   168e0:	tst	r1, #1
   168e4:	beq	168f0 <__mempcpy_chk@plt+0x5260>
   168e8:	ldr	r5, [fp, #-48]	; 0xffffffd0
   168ec:	b	1692c <__mempcpy_chk@plt+0x529c>
   168f0:	cmp	r8, sl
   168f4:	ldr	r5, [fp, #-48]	; 0xffffffd0
   168f8:	movcc	r1, #39	; 0x27
   168fc:	strbcc	r1, [r6, r8]
   16900:	add	r1, r8, #1
   16904:	cmp	r1, sl
   16908:	movcc	r2, #36	; 0x24
   1690c:	strbcc	r2, [r6, r1]
   16910:	add	r1, r8, #2
   16914:	add	r8, r8, #3
   16918:	cmp	r1, sl
   1691c:	movcc	r2, #39	; 0x27
   16920:	strbcc	r2, [r6, r1]
   16924:	mov	r1, #1
   16928:	str	r1, [fp, #-56]	; 0xffffffc8
   1692c:	cmp	r8, sl
   16930:	movcc	r1, #92	; 0x5c
   16934:	strbcc	r1, [r6, r8]
   16938:	add	r8, r8, #1
   1693c:	cmp	r8, sl
   16940:	and	r5, r5, r4
   16944:	add	r7, r7, #1
   16948:	strbcc	r0, [r6, r8]
   1694c:	add	r8, r8, #1
   16950:	cmn	lr, #1
   16954:	bne	16350 <__mempcpy_chk@plt+0x4cc0>
   16958:	b	1635c <__mempcpy_chk@plt+0x4ccc>
   1695c:	ldr	r0, [sp, #36]	; 0x24
   16960:	mov	r4, #0
   16964:	mov	r9, #0
   16968:	mov	r5, #0
   1696c:	cmp	r0, #0
   16970:	beq	16880 <__mempcpy_chk@plt+0x51f0>
   16974:	ldr	r5, [fp, #-48]	; 0xffffffd0
   16978:	add	r7, r7, #1
   1697c:	cmn	lr, #1
   16980:	bne	16350 <__mempcpy_chk@plt+0x4cc0>
   16984:	b	1635c <__mempcpy_chk@plt+0x4ccc>
   16988:	mov	r0, #0
   1698c:	cmn	lr, #1
   16990:	str	r0, [fp, #-36]	; 0xffffffdc
   16994:	str	r0, [fp, #-40]	; 0xffffffd8
   16998:	bne	169ac <__mempcpy_chk@plt+0x531c>
   1699c:	mov	r0, ip
   169a0:	bl	11504 <strlen@plt>
   169a4:	ldr	ip, [fp, #-84]	; 0xffffffac
   169a8:	mov	lr, r0
   169ac:	add	r0, ip, r7
   169b0:	mov	r4, #1
   169b4:	mov	r6, #0
   169b8:	str	lr, [sp, #28]
   169bc:	str	r0, [sp, #24]
   169c0:	sub	r0, fp, #40	; 0x28
   169c4:	mov	r3, r0
   169c8:	str	r6, [sp, #44]	; 0x2c
   169cc:	add	r6, r6, r7
   169d0:	sub	r0, fp, #44	; 0x2c
   169d4:	add	r1, ip, r6
   169d8:	sub	r2, lr, r6
   169dc:	bl	1994c <__mempcpy_chk@plt+0x82bc>
   169e0:	cmp	r0, #0
   169e4:	beq	16e7c <__mempcpy_chk@plt+0x57ec>
   169e8:	cmn	r0, #1
   169ec:	beq	16e3c <__mempcpy_chk@plt+0x57ac>
   169f0:	ldr	lr, [sp, #28]
   169f4:	cmn	r0, #2
   169f8:	beq	16e44 <__mempcpy_chk@plt+0x57b4>
   169fc:	ldr	r2, [sp, #64]	; 0x40
   16a00:	cmp	r0, #2
   16a04:	mov	r1, #0
   16a08:	movwcc	r1, #1
   16a0c:	eor	r2, r2, #1
   16a10:	orrs	r1, r2, r1
   16a14:	bne	16ad4 <__mempcpy_chk@plt+0x5444>
   16a18:	ldr	r1, [sp, #44]	; 0x2c
   16a1c:	ldr	r2, [sp, #24]
   16a20:	add	r1, r2, r1
   16a24:	mov	r2, #1
   16a28:	ldrb	r3, [r1, r2]
   16a2c:	sub	r3, r3, #91	; 0x5b
   16a30:	cmp	r3, #33	; 0x21
   16a34:	bhi	16ac8 <__mempcpy_chk@plt+0x5438>
   16a38:	add	r6, pc, #0
   16a3c:	ldr	pc, [r6, r3, lsl #2]
   16a40:	andeq	r6, r1, ip, lsr pc
   16a44:	andeq	r6, r1, ip, lsr pc
   16a48:	andeq	r6, r1, r8, asr #21
   16a4c:	andeq	r6, r1, ip, lsr pc
   16a50:	andeq	r6, r1, r8, asr #21
   16a54:	andeq	r6, r1, ip, lsr pc
   16a58:	andeq	r6, r1, r8, asr #21
   16a5c:	andeq	r6, r1, r8, asr #21
   16a60:	andeq	r6, r1, r8, asr #21
   16a64:	andeq	r6, r1, r8, asr #21
   16a68:	andeq	r6, r1, r8, asr #21
   16a6c:	andeq	r6, r1, r8, asr #21
   16a70:	andeq	r6, r1, r8, asr #21
   16a74:	andeq	r6, r1, r8, asr #21
   16a78:	andeq	r6, r1, r8, asr #21
   16a7c:	andeq	r6, r1, r8, asr #21
   16a80:	andeq	r6, r1, r8, asr #21
   16a84:	andeq	r6, r1, r8, asr #21
   16a88:	andeq	r6, r1, r8, asr #21
   16a8c:	andeq	r6, r1, r8, asr #21
   16a90:	andeq	r6, r1, r8, asr #21
   16a94:	andeq	r6, r1, r8, asr #21
   16a98:	andeq	r6, r1, r8, asr #21
   16a9c:	andeq	r6, r1, r8, asr #21
   16aa0:	andeq	r6, r1, r8, asr #21
   16aa4:	andeq	r6, r1, r8, asr #21
   16aa8:	andeq	r6, r1, r8, asr #21
   16aac:	andeq	r6, r1, r8, asr #21
   16ab0:	andeq	r6, r1, r8, asr #21
   16ab4:	andeq	r6, r1, r8, asr #21
   16ab8:	andeq	r6, r1, r8, asr #21
   16abc:	andeq	r6, r1, r8, asr #21
   16ac0:	andeq	r6, r1, r8, asr #21
   16ac4:	andeq	r6, r1, ip, lsr pc
   16ac8:	add	r2, r2, #1
   16acc:	cmp	r2, r0
   16ad0:	bcc	16a28 <__mempcpy_chk@plt+0x5398>
   16ad4:	ldr	r6, [sp, #44]	; 0x2c
   16ad8:	add	r6, r0, r6
   16adc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16ae0:	bl	11420 <iswprint@plt>
   16ae4:	cmp	r0, #0
   16ae8:	movwne	r0, #1
   16aec:	and	r4, r4, r0
   16af0:	sub	r0, fp, #40	; 0x28
   16af4:	bl	113cc <mbsinit@plt>
   16af8:	ldr	lr, [sp, #28]
   16afc:	ldr	ip, [fp, #-84]	; 0xffffffac
   16b00:	sub	r3, fp, #40	; 0x28
   16b04:	cmp	r0, #0
   16b08:	beq	169c8 <__mempcpy_chk@plt+0x5338>
   16b0c:	b	16e84 <__mempcpy_chk@plt+0x57f4>
   16b10:	ldr	r0, [sp, #32]
   16b14:	cmp	r0, #0
   16b18:	beq	16bb4 <__mempcpy_chk@plt+0x5524>
   16b1c:	add	r0, r7, #2
   16b20:	cmp	r0, lr
   16b24:	bcs	16bb4 <__mempcpy_chk@plt+0x5524>
   16b28:	add	r1, ip, r7
   16b2c:	ldrb	r1, [r1, #1]
   16b30:	cmp	r1, #63	; 0x3f
   16b34:	bne	16bb4 <__mempcpy_chk@plt+0x5524>
   16b38:	ldrb	r5, [ip, r0]
   16b3c:	sub	r1, r5, #33	; 0x21
   16b40:	cmp	r1, #29
   16b44:	bhi	16bb4 <__mempcpy_chk@plt+0x5524>
   16b48:	movw	r3, #20929	; 0x51c1
   16b4c:	mov	r2, #1
   16b50:	movt	r3, #14336	; 0x3800
   16b54:	tst	r3, r2, lsl r1
   16b58:	beq	16bb4 <__mempcpy_chk@plt+0x5524>
   16b5c:	ldr	r1, [fp, #-72]	; 0xffffffb8
   16b60:	tst	r1, #1
   16b64:	bne	1705c <__mempcpy_chk@plt+0x59cc>
   16b68:	cmp	r8, sl
   16b6c:	mov	r7, r0
   16b70:	mov	r4, #0
   16b74:	movcc	r1, #63	; 0x3f
   16b78:	strbcc	r1, [r6, r8]
   16b7c:	add	r1, r8, #1
   16b80:	cmp	r1, sl
   16b84:	movcc	r2, #34	; 0x22
   16b88:	strbcc	r2, [r6, r1]
   16b8c:	add	r1, r8, #2
   16b90:	cmp	r1, sl
   16b94:	movcc	r2, #34	; 0x22
   16b98:	strbcc	r2, [r6, r1]
   16b9c:	add	r1, r8, #3
   16ba0:	add	r8, r8, #4
   16ba4:	cmp	r1, sl
   16ba8:	movcc	r2, #63	; 0x3f
   16bac:	strbcc	r2, [r6, r1]
   16bb0:	b	16618 <__mempcpy_chk@plt+0x4f88>
   16bb4:	mov	r5, #63	; 0x3f
   16bb8:	mov	r4, #0
   16bbc:	b	16618 <__mempcpy_chk@plt+0x4f88>
   16bc0:	add	r1, r2, r7
   16bc4:	ldr	lr, [sp, #28]
   16bc8:	mov	r3, #0
   16bcc:	str	r1, [sp, #44]	; 0x2c
   16bd0:	add	r1, r7, #1
   16bd4:	ldr	r7, [fp, #-64]	; 0xffffffc0
   16bd8:	tst	r0, #1
   16bdc:	bne	16cb0 <__mempcpy_chk@plt+0x5620>
   16be0:	ldr	r2, [fp, #-72]	; 0xffffffb8
   16be4:	tst	r2, #1
   16be8:	bne	16fa4 <__mempcpy_chk@plt+0x5914>
   16bec:	ldr	r3, [fp, #-80]	; 0xffffffb0
   16bf0:	ldr	r2, [fp, #-56]	; 0xffffffc8
   16bf4:	cmp	r7, #2
   16bf8:	movwne	r3, #1
   16bfc:	orr	r3, r3, r2
   16c00:	tst	r3, #1
   16c04:	bne	16c40 <__mempcpy_chk@plt+0x55b0>
   16c08:	cmp	r8, sl
   16c0c:	add	r3, r8, #1
   16c10:	movcc	r2, #39	; 0x27
   16c14:	strbcc	r2, [r6, r8]
   16c18:	cmp	r3, sl
   16c1c:	movcc	r2, #36	; 0x24
   16c20:	strbcc	r2, [r6, r3]
   16c24:	add	r3, r8, #2
   16c28:	add	r8, r8, #3
   16c2c:	cmp	r3, sl
   16c30:	movcc	r2, #39	; 0x27
   16c34:	strbcc	r2, [r6, r3]
   16c38:	mov	r2, #1
   16c3c:	str	r2, [fp, #-56]	; 0xffffffc8
   16c40:	cmp	r8, sl
   16c44:	movcc	r3, #92	; 0x5c
   16c48:	strbcc	r3, [r6, r8]
   16c4c:	add	r3, r8, #1
   16c50:	cmp	r3, sl
   16c54:	andcc	r7, r5, #192	; 0xc0
   16c58:	movcc	r2, #48	; 0x30
   16c5c:	orrcc	r7, r2, r7, lsr #6
   16c60:	strbcc	r7, [r6, r3]
   16c64:	add	r3, r8, #2
   16c68:	add	r8, r8, #3
   16c6c:	cmp	r3, sl
   16c70:	lsrcc	r7, r5, #3
   16c74:	movcc	r2, #6
   16c78:	bficc	r7, r2, #3, #29
   16c7c:	mov	r2, #6
   16c80:	strbcc	r7, [r6, r3]
   16c84:	bfi	r5, r2, #3, #29
   16c88:	mov	r3, #1
   16c8c:	b	16cd4 <__mempcpy_chk@plt+0x5644>
   16c90:	cmp	r8, sl
   16c94:	ldr	r7, [fp, #-64]	; 0xffffffc0
   16c98:	strbcc	r5, [r6, r8]
   16c9c:	add	r8, r8, #1
   16ca0:	ldrb	r5, [ip, r1]
   16ca4:	add	r1, r1, #1
   16ca8:	tst	r0, #1
   16cac:	beq	16be0 <__mempcpy_chk@plt+0x5550>
   16cb0:	ldr	r2, [fp, #-52]	; 0xffffffcc
   16cb4:	tst	r2, #1
   16cb8:	beq	16ccc <__mempcpy_chk@plt+0x563c>
   16cbc:	cmp	r8, sl
   16cc0:	movcc	r7, #92	; 0x5c
   16cc4:	strbcc	r7, [r6, r8]
   16cc8:	add	r8, r8, #1
   16ccc:	mov	r2, #0
   16cd0:	str	r2, [fp, #-52]	; 0xffffffcc
   16cd4:	ldr	r2, [sp, #44]	; 0x2c
   16cd8:	and	r9, r3, #1
   16cdc:	cmp	r2, r1
   16ce0:	bls	16de0 <__mempcpy_chk@plt+0x5750>
   16ce4:	ldr	r2, [fp, #-56]	; 0xffffffc8
   16ce8:	cmp	r9, #0
   16cec:	movwne	r9, #1
   16cf0:	mvn	r7, r2
   16cf4:	orr	r7, r7, r9
   16cf8:	tst	r7, #1
   16cfc:	bne	16c90 <__mempcpy_chk@plt+0x5600>
   16d00:	cmp	r8, sl
   16d04:	movcc	r7, #39	; 0x27
   16d08:	strbcc	r7, [r6, r8]
   16d0c:	add	r7, r8, #1
   16d10:	add	r8, r8, #2
   16d14:	cmp	r7, sl
   16d18:	movcc	r2, #39	; 0x27
   16d1c:	strbcc	r2, [r6, r7]
   16d20:	mov	r2, #0
   16d24:	str	r2, [fp, #-56]	; 0xffffffc8
   16d28:	b	16c90 <__mempcpy_chk@plt+0x5600>
   16d2c:	cmp	r8, sl
   16d30:	mov	r2, #1
   16d34:	movcc	r0, #39	; 0x27
   16d38:	strbcc	r0, [r6, r8]
   16d3c:	add	r0, r8, #1
   16d40:	cmp	r0, sl
   16d44:	movcc	r1, #36	; 0x24
   16d48:	strbcc	r1, [r6, r0]
   16d4c:	add	r0, r8, #2
   16d50:	cmp	r0, sl
   16d54:	movcc	r1, #39	; 0x27
   16d58:	strbcc	r1, [r6, r0]
   16d5c:	add	r0, r8, #3
   16d60:	cmp	r0, sl
   16d64:	add	r8, r0, #1
   16d68:	str	r2, [fp, #-56]	; 0xffffffc8
   16d6c:	movcc	r1, #92	; 0x5c
   16d70:	strbcc	r1, [r6, r0]
   16d74:	ldr	r1, [fp, #-64]	; 0xffffffc0
   16d78:	cmp	r1, #2
   16d7c:	beq	16dd0 <__mempcpy_chk@plt+0x5740>
   16d80:	add	r1, r7, #1
   16d84:	mov	r4, #0
   16d88:	mov	r9, #1
   16d8c:	mov	r5, #48	; 0x30
   16d90:	cmp	r1, lr
   16d94:	bcs	16618 <__mempcpy_chk@plt+0x4f88>
   16d98:	ldrb	r1, [ip, r1]
   16d9c:	sub	r1, r1, #48	; 0x30
   16da0:	uxtb	r1, r1
   16da4:	cmp	r1, #9
   16da8:	bhi	16618 <__mempcpy_chk@plt+0x4f88>
   16dac:	cmp	r8, sl
   16db0:	movcc	r1, #48	; 0x30
   16db4:	strbcc	r1, [r6, r8]
   16db8:	add	r1, r0, #2
   16dbc:	add	r8, r0, #3
   16dc0:	cmp	r1, sl
   16dc4:	movcc	r2, #48	; 0x30
   16dc8:	strbcc	r2, [r6, r1]
   16dcc:	b	16618 <__mempcpy_chk@plt+0x4f88>
   16dd0:	mov	r0, #48	; 0x30
   16dd4:	mov	r9, #1
   16dd8:	mov	r4, #0
   16ddc:	b	168b0 <__mempcpy_chk@plt+0x5220>
   16de0:	cmp	r9, #0
   16de4:	sub	r7, r1, #1
   16de8:	mov	r0, r5
   16dec:	movwne	r9, #1
   16df0:	cmp	r9, #0
   16df4:	bne	16e34 <__mempcpy_chk@plt+0x57a4>
   16df8:	ldr	r1, [fp, #-56]	; 0xffffffc8
   16dfc:	tst	r1, #1
   16e00:	beq	16e34 <__mempcpy_chk@plt+0x57a4>
   16e04:	cmp	r8, sl
   16e08:	ldr	r5, [fp, #-48]	; 0xffffffd0
   16e0c:	movcc	r1, #39	; 0x27
   16e10:	strbcc	r1, [r6, r8]
   16e14:	add	r1, r8, #1
   16e18:	add	r8, r8, #2
   16e1c:	cmp	r1, sl
   16e20:	movcc	r2, #39	; 0x27
   16e24:	strbcc	r2, [r6, r1]
   16e28:	mov	r1, #0
   16e2c:	str	r1, [fp, #-56]	; 0xffffffc8
   16e30:	b	1693c <__mempcpy_chk@plt+0x52ac>
   16e34:	ldr	r5, [fp, #-48]	; 0xffffffd0
   16e38:	b	1693c <__mempcpy_chk@plt+0x52ac>
   16e3c:	mov	r4, #0
   16e40:	b	16e7c <__mempcpy_chk@plt+0x57ec>
   16e44:	mov	r4, #0
   16e48:	cmp	lr, r6
   16e4c:	bls	16e7c <__mempcpy_chk@plt+0x57ec>
   16e50:	ldr	ip, [fp, #-84]	; 0xffffffac
   16e54:	ldr	r6, [sp, #44]	; 0x2c
   16e58:	ldr	r0, [sp, #24]
   16e5c:	ldrb	r0, [r0, r6]
   16e60:	cmp	r0, #0
   16e64:	beq	16e84 <__mempcpy_chk@plt+0x57f4>
   16e68:	add	r6, r6, #1
   16e6c:	add	r0, r7, r6
   16e70:	cmp	r0, lr
   16e74:	bcc	16e58 <__mempcpy_chk@plt+0x57c8>
   16e78:	b	16e84 <__mempcpy_chk@plt+0x57f4>
   16e7c:	ldr	ip, [fp, #-84]	; 0xffffffac
   16e80:	ldr	r6, [sp, #44]	; 0x2c
   16e84:	mov	r1, r6
   16e88:	ldr	r6, [sp, #80]	; 0x50
   16e8c:	b	167e4 <__mempcpy_chk@plt+0x5154>
   16e90:	mov	lr, r7
   16e94:	b	16e9c <__mempcpy_chk@plt+0x580c>
   16e98:	mvn	lr, #0
   16e9c:	ldr	r7, [fp, #-64]	; 0xffffffc0
   16ea0:	ldr	r1, [fp, #-72]	; 0xffffffb8
   16ea4:	eor	r0, r7, #2
   16ea8:	orr	r0, r0, r8
   16eac:	clz	r0, r0
   16eb0:	lsr	r0, r0, #5
   16eb4:	tst	r1, r0
   16eb8:	bne	16f44 <__mempcpy_chk@plt+0x58b4>
   16ebc:	mov	r0, r1
   16ec0:	ldr	r1, [fp, #-80]	; 0xffffffb0
   16ec4:	cmp	r7, #2
   16ec8:	movwne	r1, #1
   16ecc:	orr	r0, r0, r1
   16ed0:	tst	r0, #1
   16ed4:	ldreq	r0, [sp, #60]	; 0x3c
   16ed8:	eoreq	r0, r0, #1
   16edc:	tsteq	r0, #1
   16ee0:	bne	16ff0 <__mempcpy_chk@plt+0x5960>
   16ee4:	mov	r9, lr
   16ee8:	tst	r5, #1
   16eec:	bne	16fac <__mempcpy_chk@plt+0x591c>
   16ef0:	ldr	r6, [sp, #56]	; 0x38
   16ef4:	mov	r4, #0
   16ef8:	cmp	r6, #0
   16efc:	beq	16fe8 <__mempcpy_chk@plt+0x5958>
   16f00:	ldr	r0, [sp, #84]	; 0x54
   16f04:	mov	r1, #0
   16f08:	cmp	sl, #0
   16f0c:	mov	r5, #0
   16f10:	str	r1, [fp, #-72]	; 0xffffffb8
   16f14:	beq	160e4 <__mempcpy_chk@plt+0x4a54>
   16f18:	b	16ff0 <__mempcpy_chk@plt+0x5960>
   16f1c:	ldr	r7, [fp, #-64]	; 0xffffffc0
   16f20:	ldr	r2, [sp, #84]	; 0x54
   16f24:	b	16f4c <__mempcpy_chk@plt+0x58bc>
   16f28:	ldr	ip, [fp, #-84]	; 0xffffffac
   16f2c:	mov	r2, #1
   16f30:	mov	lr, r4
   16f34:	ldr	r7, [fp, #-64]	; 0xffffffc0
   16f38:	b	16f4c <__mempcpy_chk@plt+0x58bc>
   16f3c:	ldr	r6, [sp, #80]	; 0x50
   16f40:	ldr	ip, [fp, #-84]	; 0xffffffac
   16f44:	ldr	r2, [sp, #84]	; 0x54
   16f48:	mov	r7, #2
   16f4c:	mov	r0, #0
   16f50:	ldr	r1, [fp, #12]
   16f54:	tst	r2, #1
   16f58:	mov	r2, r7
   16f5c:	mov	r3, lr
   16f60:	str	r0, [sp, #8]
   16f64:	ldr	r0, [sp, #72]	; 0x48
   16f68:	movwne	r2, #4
   16f6c:	cmp	r7, #2
   16f70:	movne	r2, r7
   16f74:	str	r2, [sp]
   16f78:	mov	r2, ip
   16f7c:	bic	r1, r1, #2
   16f80:	str	r0, [sp, #12]
   16f84:	ldr	r0, [sp, #76]	; 0x4c
   16f88:	str	r1, [sp, #4]
   16f8c:	mov	r1, sl
   16f90:	str	r0, [sp, #16]
   16f94:	mov	r0, r6
   16f98:	bl	16064 <__mempcpy_chk@plt+0x49d4>
   16f9c:	mov	r8, r0
   16fa0:	b	17048 <__mempcpy_chk@plt+0x59b8>
   16fa4:	ldr	r2, [sp, #84]	; 0x54
   16fa8:	b	16f4c <__mempcpy_chk@plt+0x58bc>
   16fac:	mov	r0, #5
   16fb0:	ldr	r1, [sp, #56]	; 0x38
   16fb4:	ldr	r2, [fp, #-84]	; 0xffffffac
   16fb8:	mov	r3, r9
   16fbc:	str	r0, [sp]
   16fc0:	ldr	r0, [fp, #12]
   16fc4:	str	r0, [sp, #4]
   16fc8:	ldr	r0, [fp, #16]
   16fcc:	str	r0, [sp, #8]
   16fd0:	ldr	r0, [sp, #72]	; 0x48
   16fd4:	str	r0, [sp, #12]
   16fd8:	ldr	r0, [sp, #76]	; 0x4c
   16fdc:	str	r0, [sp, #16]
   16fe0:	ldr	r0, [sp, #80]	; 0x50
   16fe4:	b	16f98 <__mempcpy_chk@plt+0x5908>
   16fe8:	mov	r0, #0
   16fec:	str	r0, [fp, #-72]	; 0xffffffb8
   16ff0:	ldr	r1, [sp, #92]	; 0x5c
   16ff4:	cmp	r1, #0
   16ff8:	beq	17038 <__mempcpy_chk@plt+0x59a8>
   16ffc:	ldr	r0, [fp, #-72]	; 0xffffffb8
   17000:	ldr	r2, [sp, #80]	; 0x50
   17004:	tst	r0, #1
   17008:	bne	1703c <__mempcpy_chk@plt+0x59ac>
   1700c:	ldrb	r0, [r1]
   17010:	cmp	r0, #0
   17014:	beq	1703c <__mempcpy_chk@plt+0x59ac>
   17018:	add	r1, r1, #1
   1701c:	cmp	r8, sl
   17020:	strbcc	r0, [r2, r8]
   17024:	add	r8, r8, #1
   17028:	ldrb	r0, [r1], #1
   1702c:	cmp	r0, #0
   17030:	bne	1701c <__mempcpy_chk@plt+0x598c>
   17034:	b	1703c <__mempcpy_chk@plt+0x59ac>
   17038:	ldr	r2, [sp, #80]	; 0x50
   1703c:	cmp	r8, sl
   17040:	movcc	r0, #0
   17044:	strbcc	r0, [r2, r8]
   17048:	mov	r0, r8
   1704c:	sub	sp, fp, #28
   17050:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17054:	mov	r2, #1
   17058:	b	16f34 <__mempcpy_chk@plt+0x58a4>
   1705c:	ldr	r2, [sp, #84]	; 0x54
   17060:	mov	r7, #5
   17064:	b	16f4c <__mempcpy_chk@plt+0x58bc>
   17068:	bl	11654 <abort@plt>
   1706c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17070:	add	fp, sp, #28
   17074:	sub	sp, sp, #28
   17078:	movw	r5, #49640	; 0xc1e8
   1707c:	cmp	r2, #0
   17080:	mov	r4, r1
   17084:	mov	r7, r0
   17088:	str	r0, [sp, #20]
   1708c:	movt	r5, #2
   17090:	movne	r5, r2
   17094:	bl	1151c <__errno_location@plt>
   17098:	mov	sl, r0
   1709c:	ldm	r5, {r0, r1}
   170a0:	ldr	r2, [r5, #40]	; 0x28
   170a4:	ldr	r3, [r5, #44]	; 0x2c
   170a8:	add	r9, r5, #8
   170ac:	ldr	r6, [sl]
   170b0:	orr	r8, r1, #1
   170b4:	mov	r1, #0
   170b8:	str	r6, [sp, #24]
   170bc:	stm	sp, {r0, r8, r9}
   170c0:	str	r2, [sp, #12]
   170c4:	str	r3, [sp, #16]
   170c8:	mov	r0, #0
   170cc:	mov	r2, r7
   170d0:	mov	r3, r4
   170d4:	mov	r6, r4
   170d8:	bl	16064 <__mempcpy_chk@plt+0x49d4>
   170dc:	add	r7, r0, #1
   170e0:	mov	r0, r7
   170e4:	bl	18b9c <__mempcpy_chk@plt+0x750c>
   170e8:	mov	r4, r0
   170ec:	ldr	r0, [r5]
   170f0:	ldr	r2, [r5, #44]	; 0x2c
   170f4:	ldr	r1, [r5, #40]	; 0x28
   170f8:	mov	r3, r6
   170fc:	stm	sp, {r0, r8, r9}
   17100:	str	r2, [sp, #16]
   17104:	str	r1, [sp, #12]
   17108:	mov	r0, r4
   1710c:	mov	r1, r7
   17110:	ldr	r2, [sp, #20]
   17114:	bl	16064 <__mempcpy_chk@plt+0x49d4>
   17118:	ldr	r0, [sp, #24]
   1711c:	str	r0, [sl]
   17120:	mov	r0, r4
   17124:	sub	sp, fp, #28
   17128:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1712c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17130:	add	fp, sp, #28
   17134:	sub	sp, sp, #36	; 0x24
   17138:	movw	r8, #49640	; 0xc1e8
   1713c:	cmp	r3, #0
   17140:	mov	r4, r2
   17144:	str	r2, [sp, #24]
   17148:	mov	r5, r1
   1714c:	mov	r6, r0
   17150:	str	r0, [sp, #20]
   17154:	movt	r8, #2
   17158:	movne	r8, r3
   1715c:	bl	1151c <__errno_location@plt>
   17160:	str	r0, [sp, #28]
   17164:	cmp	r4, #0
   17168:	add	sl, r8, #8
   1716c:	ldm	r8, {r3, r9}
   17170:	ldr	r7, [r0]
   17174:	ldr	r1, [r8, #40]	; 0x28
   17178:	ldr	r2, [r8, #44]	; 0x2c
   1717c:	mov	r0, #0
   17180:	orreq	r9, r9, #1
   17184:	str	r7, [sp, #32]
   17188:	mov	r7, r5
   1718c:	stm	sp, {r3, r9, sl}
   17190:	str	r1, [sp, #12]
   17194:	str	r2, [sp, #16]
   17198:	mov	r1, #0
   1719c:	mov	r2, r6
   171a0:	mov	r3, r5
   171a4:	bl	16064 <__mempcpy_chk@plt+0x49d4>
   171a8:	add	r4, r0, #1
   171ac:	mov	r5, r0
   171b0:	mov	r0, r4
   171b4:	bl	18b9c <__mempcpy_chk@plt+0x750c>
   171b8:	mov	r6, r0
   171bc:	ldr	r0, [r8]
   171c0:	ldr	r2, [r8, #44]	; 0x2c
   171c4:	ldr	r1, [r8, #40]	; 0x28
   171c8:	mov	r3, r7
   171cc:	stm	sp, {r0, r9, sl}
   171d0:	str	r2, [sp, #16]
   171d4:	str	r1, [sp, #12]
   171d8:	mov	r0, r6
   171dc:	mov	r1, r4
   171e0:	ldr	r2, [sp, #20]
   171e4:	bl	16064 <__mempcpy_chk@plt+0x49d4>
   171e8:	ldr	r0, [sp, #24]
   171ec:	ldr	r1, [sp, #32]
   171f0:	ldr	r2, [sp, #28]
   171f4:	cmp	r0, #0
   171f8:	str	r1, [r2]
   171fc:	strne	r5, [r0]
   17200:	mov	r0, r6
   17204:	sub	sp, fp, #28
   17208:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1720c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   17210:	add	fp, sp, #24
   17214:	movw	r5, #49492	; 0xc154
   17218:	movw	r8, #49488	; 0xc150
   1721c:	movt	r5, #2
   17220:	movt	r8, #2
   17224:	ldr	r0, [r5]
   17228:	ldr	r4, [r8]
   1722c:	cmp	r0, #2
   17230:	blt	1725c <__mempcpy_chk@plt+0x5bcc>
   17234:	add	r7, r4, #12
   17238:	mov	r6, #0
   1723c:	ldr	r0, [r7, r6, lsl #3]
   17240:	bl	148e8 <__mempcpy_chk@plt+0x3258>
   17244:	ldr	r1, [r5]
   17248:	add	r2, r6, #2
   1724c:	add	r0, r6, #1
   17250:	mov	r6, r0
   17254:	cmp	r2, r1
   17258:	blt	1723c <__mempcpy_chk@plt+0x5bac>
   1725c:	ldr	r0, [r4, #4]
   17260:	movw	r7, #49688	; 0xc218
   17264:	movt	r7, #2
   17268:	cmp	r0, r7
   1726c:	beq	17284 <__mempcpy_chk@plt+0x5bf4>
   17270:	bl	148e8 <__mempcpy_chk@plt+0x3258>
   17274:	movw	r0, #49496	; 0xc158
   17278:	mov	r6, #256	; 0x100
   1727c:	movt	r0, #2
   17280:	strd	r6, [r0]
   17284:	movw	r6, #49496	; 0xc158
   17288:	movt	r6, #2
   1728c:	cmp	r4, r6
   17290:	beq	172a0 <__mempcpy_chk@plt+0x5c10>
   17294:	mov	r0, r4
   17298:	bl	148e8 <__mempcpy_chk@plt+0x3258>
   1729c:	str	r6, [r8]
   172a0:	mov	r0, #1
   172a4:	str	r0, [r5]
   172a8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   172ac:	movw	r3, #49640	; 0xc1e8
   172b0:	mvn	r2, #0
   172b4:	movt	r3, #2
   172b8:	b	172bc <__mempcpy_chk@plt+0x5c2c>
   172bc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   172c0:	add	fp, sp, #28
   172c4:	sub	sp, sp, #44	; 0x2c
   172c8:	mov	r7, r3
   172cc:	str	r2, [sp, #36]	; 0x24
   172d0:	str	r1, [sp, #32]
   172d4:	mov	r5, r0
   172d8:	bl	1151c <__errno_location@plt>
   172dc:	cmp	r5, #0
   172e0:	blt	1744c <__mempcpy_chk@plt+0x5dbc>
   172e4:	cmn	r5, #-2147483647	; 0x80000001
   172e8:	beq	1744c <__mempcpy_chk@plt+0x5dbc>
   172ec:	movw	r8, #49492	; 0xc154
   172f0:	movw	r4, #49488	; 0xc150
   172f4:	str	r0, [sp, #28]
   172f8:	ldr	r0, [r0]
   172fc:	movt	r8, #2
   17300:	movt	r4, #2
   17304:	ldr	r1, [r8]
   17308:	ldr	r6, [r4]
   1730c:	str	r0, [sp, #24]
   17310:	cmp	r1, r5
   17314:	ble	17320 <__mempcpy_chk@plt+0x5c90>
   17318:	mov	sl, r6
   1731c:	b	17388 <__mempcpy_chk@plt+0x5cf8>
   17320:	movw	r9, #49496	; 0xc158
   17324:	mov	r0, #8
   17328:	add	r2, r5, #1
   1732c:	str	r1, [fp, #-32]	; 0xffffffe0
   17330:	mvn	r3, #-2147483648	; 0x80000000
   17334:	movt	r9, #2
   17338:	str	r0, [sp]
   1733c:	sub	r2, r2, r1
   17340:	sub	r1, fp, #32
   17344:	subs	r0, r6, r9
   17348:	movne	r0, r6
   1734c:	bl	18d9c <__mempcpy_chk@plt+0x770c>
   17350:	cmp	r6, r9
   17354:	mov	sl, r0
   17358:	str	r0, [r4]
   1735c:	ldrdeq	r0, [r9]
   17360:	stmeq	sl, {r0, r1}
   17364:	ldr	r1, [r8]
   17368:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1736c:	add	r0, sl, r1, lsl #3
   17370:	sub	r1, r2, r1
   17374:	lsl	r2, r1, #3
   17378:	mov	r1, #0
   1737c:	bl	11540 <memset@plt>
   17380:	ldr	r0, [fp, #-32]	; 0xffffffe0
   17384:	str	r0, [r8]
   17388:	mov	r9, sl
   1738c:	ldr	r6, [r9, r5, lsl #3]!
   17390:	ldr	r4, [r9, #4]!
   17394:	ldm	r7, {r0, r1}
   17398:	ldr	r2, [r7, #40]	; 0x28
   1739c:	ldr	r3, [r7, #44]	; 0x2c
   173a0:	orr	r8, r1, #1
   173a4:	add	r1, r7, #8
   173a8:	stm	sp, {r0, r8}
   173ac:	add	r0, sp, #8
   173b0:	str	r1, [sp, #20]
   173b4:	stm	r0, {r1, r2, r3}
   173b8:	mov	r0, r4
   173bc:	mov	r1, r6
   173c0:	ldr	r2, [sp, #32]
   173c4:	ldr	r3, [sp, #36]	; 0x24
   173c8:	bl	16064 <__mempcpy_chk@plt+0x49d4>
   173cc:	cmp	r6, r0
   173d0:	bhi	17434 <__mempcpy_chk@plt+0x5da4>
   173d4:	add	r6, r0, #1
   173d8:	movw	r0, #49688	; 0xc218
   173dc:	movt	r0, #2
   173e0:	str	r6, [sl, r5, lsl #3]
   173e4:	cmp	r4, r0
   173e8:	beq	173f4 <__mempcpy_chk@plt+0x5d64>
   173ec:	mov	r0, r4
   173f0:	bl	148e8 <__mempcpy_chk@plt+0x3258>
   173f4:	mov	r0, r6
   173f8:	bl	18b9c <__mempcpy_chk@plt+0x750c>
   173fc:	str	r0, [r9]
   17400:	mov	r4, r0
   17404:	add	r3, sp, #8
   17408:	ldr	r0, [r7]
   1740c:	ldr	r1, [r7, #40]	; 0x28
   17410:	ldr	r2, [r7, #44]	; 0x2c
   17414:	stm	sp, {r0, r8}
   17418:	ldr	r0, [sp, #20]
   1741c:	stm	r3, {r0, r1, r2}
   17420:	mov	r0, r4
   17424:	mov	r1, r6
   17428:	ldr	r2, [sp, #32]
   1742c:	ldr	r3, [sp, #36]	; 0x24
   17430:	bl	16064 <__mempcpy_chk@plt+0x49d4>
   17434:	ldr	r0, [sp, #28]
   17438:	ldr	r1, [sp, #24]
   1743c:	str	r1, [r0]
   17440:	mov	r0, r4
   17444:	sub	sp, fp, #28
   17448:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1744c:	bl	11654 <abort@plt>
   17450:	movw	r3, #49640	; 0xc1e8
   17454:	movt	r3, #2
   17458:	b	172bc <__mempcpy_chk@plt+0x5c2c>
   1745c:	movw	r3, #49640	; 0xc1e8
   17460:	mov	r1, r0
   17464:	mov	r0, #0
   17468:	mvn	r2, #0
   1746c:	movt	r3, #2
   17470:	b	172bc <__mempcpy_chk@plt+0x5c2c>
   17474:	movw	r3, #49640	; 0xc1e8
   17478:	mov	r2, r1
   1747c:	mov	r1, r0
   17480:	mov	r0, #0
   17484:	movt	r3, #2
   17488:	b	172bc <__mempcpy_chk@plt+0x5c2c>
   1748c:	push	{fp, lr}
   17490:	mov	fp, sp
   17494:	sub	sp, sp, #48	; 0x30
   17498:	vmov.i32	q8, #0	; 0x00000000
   1749c:	mov	ip, #32
   174a0:	mov	r3, sp
   174a4:	mov	lr, r2
   174a8:	cmp	r1, #10
   174ac:	add	r2, r3, #16
   174b0:	vst1.64	{d16-d17}, [r3], ip
   174b4:	vst1.64	{d16-d17}, [r3]
   174b8:	vst1.64	{d16-d17}, [r2]
   174bc:	beq	174dc <__mempcpy_chk@plt+0x5e4c>
   174c0:	str	r1, [sp]
   174c4:	mov	r3, sp
   174c8:	mov	r1, lr
   174cc:	mvn	r2, #0
   174d0:	bl	172bc <__mempcpy_chk@plt+0x5c2c>
   174d4:	mov	sp, fp
   174d8:	pop	{fp, pc}
   174dc:	bl	11654 <abort@plt>
   174e0:	push	{r4, sl, fp, lr}
   174e4:	add	fp, sp, #8
   174e8:	sub	sp, sp, #48	; 0x30
   174ec:	mov	ip, r3
   174f0:	mov	r3, sp
   174f4:	vmov.i32	q8, #0	; 0x00000000
   174f8:	mov	lr, #32
   174fc:	cmp	r1, #10
   17500:	add	r4, r3, #16
   17504:	vst1.64	{d16-d17}, [r3], lr
   17508:	vst1.64	{d16-d17}, [r3]
   1750c:	vst1.64	{d16-d17}, [r4]
   17510:	beq	17530 <__mempcpy_chk@plt+0x5ea0>
   17514:	str	r1, [sp]
   17518:	mov	r1, r2
   1751c:	mov	r3, sp
   17520:	mov	r2, ip
   17524:	bl	172bc <__mempcpy_chk@plt+0x5c2c>
   17528:	sub	sp, fp, #8
   1752c:	pop	{r4, sl, fp, pc}
   17530:	bl	11654 <abort@plt>
   17534:	push	{fp, lr}
   17538:	mov	fp, sp
   1753c:	sub	sp, sp, #48	; 0x30
   17540:	mov	r3, sp
   17544:	vmov.i32	q8, #0	; 0x00000000
   17548:	mov	ip, #32
   1754c:	cmp	r0, #10
   17550:	add	r2, r3, #16
   17554:	vst1.64	{d16-d17}, [r3], ip
   17558:	vst1.64	{d16-d17}, [r3]
   1755c:	vst1.64	{d16-d17}, [r2]
   17560:	beq	17580 <__mempcpy_chk@plt+0x5ef0>
   17564:	str	r0, [sp]
   17568:	mov	r3, sp
   1756c:	mov	r0, #0
   17570:	mvn	r2, #0
   17574:	bl	172bc <__mempcpy_chk@plt+0x5c2c>
   17578:	mov	sp, fp
   1757c:	pop	{fp, pc}
   17580:	bl	11654 <abort@plt>
   17584:	push	{fp, lr}
   17588:	mov	fp, sp
   1758c:	sub	sp, sp, #48	; 0x30
   17590:	mov	r3, sp
   17594:	vmov.i32	q8, #0	; 0x00000000
   17598:	mov	ip, #32
   1759c:	cmp	r0, #10
   175a0:	add	lr, r3, #16
   175a4:	vst1.64	{d16-d17}, [r3], ip
   175a8:	vst1.64	{d16-d17}, [r3]
   175ac:	vst1.64	{d16-d17}, [lr]
   175b0:	beq	175cc <__mempcpy_chk@plt+0x5f3c>
   175b4:	str	r0, [sp]
   175b8:	mov	r3, sp
   175bc:	mov	r0, #0
   175c0:	bl	172bc <__mempcpy_chk@plt+0x5c2c>
   175c4:	mov	sp, fp
   175c8:	pop	{fp, pc}
   175cc:	bl	11654 <abort@plt>
   175d0:	push	{r4, sl, fp, lr}
   175d4:	add	fp, sp, #8
   175d8:	sub	sp, sp, #48	; 0x30
   175dc:	mov	lr, r0
   175e0:	movw	r0, #49640	; 0xc1e8
   175e4:	mov	r3, #32
   175e8:	mov	ip, r1
   175ec:	mov	r4, #1
   175f0:	movt	r0, #2
   175f4:	add	r1, r0, #16
   175f8:	vld1.64	{d16-d17}, [r0], r3
   175fc:	mov	r3, sp
   17600:	vld1.64	{d18-d19}, [r1]
   17604:	add	r1, r3, #16
   17608:	vld1.64	{d20-d21}, [r0]
   1760c:	add	r0, r3, #32
   17610:	vst1.64	{d18-d19}, [r1]
   17614:	mov	r1, r3
   17618:	vst1.64	{d20-d21}, [r0]
   1761c:	mov	r0, #28
   17620:	and	r0, r0, r2, lsr #3
   17624:	and	r2, r2, #31
   17628:	vst1.64	{d16-d17}, [r1], r0
   1762c:	ldr	r0, [r1, #8]
   17630:	bic	r4, r4, r0, lsr r2
   17634:	eor	r0, r0, r4, lsl r2
   17638:	mov	r2, ip
   1763c:	str	r0, [r1, #8]
   17640:	mov	r0, #0
   17644:	mov	r1, lr
   17648:	bl	172bc <__mempcpy_chk@plt+0x5c2c>
   1764c:	sub	sp, fp, #8
   17650:	pop	{r4, sl, fp, pc}
   17654:	push	{fp, lr}
   17658:	mov	fp, sp
   1765c:	sub	sp, sp, #48	; 0x30
   17660:	mov	ip, r0
   17664:	movw	r0, #49640	; 0xc1e8
   17668:	mov	r3, #32
   1766c:	movt	r0, #2
   17670:	add	r2, r0, #16
   17674:	vld1.64	{d16-d17}, [r0], r3
   17678:	mov	r3, sp
   1767c:	vld1.64	{d18-d19}, [r2]
   17680:	add	r2, r3, #16
   17684:	vld1.64	{d20-d21}, [r0]
   17688:	add	r0, r3, #32
   1768c:	vst1.64	{d18-d19}, [r2]
   17690:	mov	r2, r3
   17694:	vst1.64	{d20-d21}, [r0]
   17698:	mov	r0, #28
   1769c:	and	r0, r0, r1, lsr #3
   176a0:	and	r1, r1, #31
   176a4:	vst1.64	{d16-d17}, [r2], r0
   176a8:	mov	r0, #1
   176ac:	ldr	lr, [r2, #8]
   176b0:	bic	r0, r0, lr, lsr r1
   176b4:	eor	r0, lr, r0, lsl r1
   176b8:	mov	r1, ip
   176bc:	str	r0, [r2, #8]
   176c0:	mov	r0, #0
   176c4:	mvn	r2, #0
   176c8:	bl	172bc <__mempcpy_chk@plt+0x5c2c>
   176cc:	mov	sp, fp
   176d0:	pop	{fp, pc}
   176d4:	push	{fp, lr}
   176d8:	mov	fp, sp
   176dc:	sub	sp, sp, #48	; 0x30
   176e0:	movw	r2, #49640	; 0xc1e8
   176e4:	mov	r3, #32
   176e8:	mov	r1, r0
   176ec:	movt	r2, #2
   176f0:	add	r0, r2, #16
   176f4:	vld1.64	{d16-d17}, [r2], r3
   176f8:	mov	r3, sp
   176fc:	vld1.64	{d18-d19}, [r0]
   17700:	add	r0, r3, #16
   17704:	vld1.64	{d20-d21}, [r2]
   17708:	mov	r2, r3
   1770c:	vst1.64	{d18-d19}, [r0]
   17710:	add	r0, r3, #32
   17714:	vst1.64	{d20-d21}, [r0]
   17718:	mov	r0, #12
   1771c:	vst1.64	{d16-d17}, [r2], r0
   17720:	ldr	r0, [r2]
   17724:	orr	r0, r0, #67108864	; 0x4000000
   17728:	str	r0, [r2]
   1772c:	mov	r0, #0
   17730:	mvn	r2, #0
   17734:	bl	172bc <__mempcpy_chk@plt+0x5c2c>
   17738:	mov	sp, fp
   1773c:	pop	{fp, pc}
   17740:	push	{fp, lr}
   17744:	mov	fp, sp
   17748:	sub	sp, sp, #48	; 0x30
   1774c:	mov	ip, r1
   17750:	mov	r1, r0
   17754:	movw	r0, #49640	; 0xc1e8
   17758:	mov	r3, #32
   1775c:	movt	r0, #2
   17760:	add	r2, r0, #16
   17764:	vld1.64	{d16-d17}, [r0], r3
   17768:	mov	r3, sp
   1776c:	vld1.64	{d18-d19}, [r2]
   17770:	add	r2, r3, #16
   17774:	vld1.64	{d20-d21}, [r0]
   17778:	add	r0, r3, #32
   1777c:	vst1.64	{d18-d19}, [r2]
   17780:	mov	r2, r3
   17784:	vst1.64	{d20-d21}, [r0]
   17788:	mov	r0, #12
   1778c:	vst1.64	{d16-d17}, [r2], r0
   17790:	ldr	r0, [r2]
   17794:	orr	r0, r0, #67108864	; 0x4000000
   17798:	str	r0, [r2]
   1779c:	mov	r0, #0
   177a0:	mov	r2, ip
   177a4:	bl	172bc <__mempcpy_chk@plt+0x5c2c>
   177a8:	mov	sp, fp
   177ac:	pop	{fp, pc}
   177b0:	push	{r4, sl, fp, lr}
   177b4:	add	fp, sp, #8
   177b8:	sub	sp, sp, #96	; 0x60
   177bc:	mov	ip, r2
   177c0:	mov	r2, sp
   177c4:	vmov.i32	q8, #0	; 0x00000000
   177c8:	mov	r4, #28
   177cc:	cmp	r1, #10
   177d0:	mov	r3, r2
   177d4:	add	lr, r2, #16
   177d8:	vst1.64	{d16-d17}, [r3], r4
   177dc:	vst1.64	{d16-d17}, [lr]
   177e0:	vst1.32	{d16-d17}, [r3]
   177e4:	beq	17834 <__mempcpy_chk@plt+0x61a4>
   177e8:	vld1.64	{d16-d17}, [r2], r4
   177ec:	vld1.64	{d18-d19}, [lr]
   177f0:	add	r3, sp, #48	; 0x30
   177f4:	add	r4, r3, #4
   177f8:	vld1.32	{d20-d21}, [r2]
   177fc:	add	r2, r3, #20
   17800:	vst1.32	{d16-d17}, [r4]
   17804:	vst1.32	{d18-d19}, [r2]
   17808:	add	r2, r3, #32
   1780c:	vst1.32	{d20-d21}, [r2]
   17810:	str	r1, [sp, #48]	; 0x30
   17814:	mvn	r2, #0
   17818:	ldr	r1, [sp, #60]	; 0x3c
   1781c:	orr	r1, r1, #67108864	; 0x4000000
   17820:	str	r1, [sp, #60]	; 0x3c
   17824:	mov	r1, ip
   17828:	bl	172bc <__mempcpy_chk@plt+0x5c2c>
   1782c:	sub	sp, fp, #8
   17830:	pop	{r4, sl, fp, pc}
   17834:	bl	11654 <abort@plt>
   17838:	push	{r4, r5, fp, lr}
   1783c:	add	fp, sp, #8
   17840:	sub	sp, sp, #48	; 0x30
   17844:	mov	ip, r3
   17848:	movw	r3, #49640	; 0xc1e8
   1784c:	mov	lr, #32
   17850:	cmp	r1, #0
   17854:	mov	r5, sp
   17858:	movt	r3, #2
   1785c:	cmpne	r2, #0
   17860:	add	r4, r3, #16
   17864:	vld1.64	{d16-d17}, [r3], lr
   17868:	vld1.64	{d18-d19}, [r4]
   1786c:	add	r4, r5, #16
   17870:	vld1.64	{d20-d21}, [r3]
   17874:	vst1.64	{d16-d17}, [r5], lr
   17878:	mov	r3, #10
   1787c:	vst1.64	{d18-d19}, [r4]
   17880:	vst1.64	{d20-d21}, [r5]
   17884:	str	r3, [sp]
   17888:	bne	17890 <__mempcpy_chk@plt+0x6200>
   1788c:	bl	11654 <abort@plt>
   17890:	str	r2, [sp, #44]	; 0x2c
   17894:	str	r1, [sp, #40]	; 0x28
   17898:	mov	r3, sp
   1789c:	mov	r1, ip
   178a0:	mvn	r2, #0
   178a4:	bl	172bc <__mempcpy_chk@plt+0x5c2c>
   178a8:	sub	sp, fp, #8
   178ac:	pop	{r4, r5, fp, pc}
   178b0:	push	{r4, r5, fp, lr}
   178b4:	add	fp, sp, #8
   178b8:	sub	sp, sp, #48	; 0x30
   178bc:	mov	lr, r3
   178c0:	movw	r3, #49640	; 0xc1e8
   178c4:	mov	ip, #32
   178c8:	cmp	r1, #0
   178cc:	mov	r5, sp
   178d0:	movt	r3, #2
   178d4:	cmpne	r2, #0
   178d8:	add	r4, r3, #16
   178dc:	vld1.64	{d16-d17}, [r3], ip
   178e0:	vld1.64	{d18-d19}, [r4]
   178e4:	add	r4, r5, #16
   178e8:	vld1.64	{d20-d21}, [r3]
   178ec:	vst1.64	{d16-d17}, [r5], ip
   178f0:	mov	r3, #10
   178f4:	vst1.64	{d18-d19}, [r4]
   178f8:	vst1.64	{d20-d21}, [r5]
   178fc:	str	r3, [sp]
   17900:	bne	17908 <__mempcpy_chk@plt+0x6278>
   17904:	bl	11654 <abort@plt>
   17908:	ldr	ip, [fp, #8]
   1790c:	str	r2, [sp, #44]	; 0x2c
   17910:	str	r1, [sp, #40]	; 0x28
   17914:	mov	r3, sp
   17918:	mov	r1, lr
   1791c:	mov	r2, ip
   17920:	bl	172bc <__mempcpy_chk@plt+0x5c2c>
   17924:	sub	sp, fp, #8
   17928:	pop	{r4, r5, fp, pc}
   1792c:	push	{r4, sl, fp, lr}
   17930:	add	fp, sp, #8
   17934:	sub	sp, sp, #48	; 0x30
   17938:	mov	ip, r2
   1793c:	movw	r2, #49640	; 0xc1e8
   17940:	mov	lr, #32
   17944:	cmp	r0, #0
   17948:	mov	r4, sp
   1794c:	movt	r2, #2
   17950:	cmpne	r1, #0
   17954:	add	r3, r2, #16
   17958:	vld1.64	{d16-d17}, [r2], lr
   1795c:	vld1.64	{d18-d19}, [r3]
   17960:	add	r3, r4, #16
   17964:	vld1.64	{d20-d21}, [r2]
   17968:	vst1.64	{d16-d17}, [r4], lr
   1796c:	mov	r2, #10
   17970:	vst1.64	{d18-d19}, [r3]
   17974:	vst1.64	{d20-d21}, [r4]
   17978:	str	r2, [sp]
   1797c:	bne	17984 <__mempcpy_chk@plt+0x62f4>
   17980:	bl	11654 <abort@plt>
   17984:	str	r1, [sp, #44]	; 0x2c
   17988:	str	r0, [sp, #40]	; 0x28
   1798c:	mov	r3, sp
   17990:	mov	r0, #0
   17994:	mov	r1, ip
   17998:	mvn	r2, #0
   1799c:	bl	172bc <__mempcpy_chk@plt+0x5c2c>
   179a0:	sub	sp, fp, #8
   179a4:	pop	{r4, sl, fp, pc}
   179a8:	push	{r4, r5, fp, lr}
   179ac:	add	fp, sp, #8
   179b0:	sub	sp, sp, #48	; 0x30
   179b4:	mov	lr, r2
   179b8:	movw	r2, #49640	; 0xc1e8
   179bc:	mov	ip, r3
   179c0:	mov	r3, #32
   179c4:	cmp	r0, #0
   179c8:	mov	r5, sp
   179cc:	movt	r2, #2
   179d0:	cmpne	r1, #0
   179d4:	add	r4, r2, #16
   179d8:	vld1.64	{d16-d17}, [r2], r3
   179dc:	vld1.64	{d18-d19}, [r4]
   179e0:	add	r4, r5, #16
   179e4:	vld1.64	{d20-d21}, [r2]
   179e8:	vst1.64	{d16-d17}, [r5], r3
   179ec:	mov	r2, #10
   179f0:	vst1.64	{d18-d19}, [r4]
   179f4:	vst1.64	{d20-d21}, [r5]
   179f8:	str	r2, [sp]
   179fc:	bne	17a04 <__mempcpy_chk@plt+0x6374>
   17a00:	bl	11654 <abort@plt>
   17a04:	str	r1, [sp, #44]	; 0x2c
   17a08:	str	r0, [sp, #40]	; 0x28
   17a0c:	mov	r3, sp
   17a10:	mov	r0, #0
   17a14:	mov	r1, lr
   17a18:	mov	r2, ip
   17a1c:	bl	172bc <__mempcpy_chk@plt+0x5c2c>
   17a20:	sub	sp, fp, #8
   17a24:	pop	{r4, r5, fp, pc}
   17a28:	movw	r3, #49504	; 0xc160
   17a2c:	movt	r3, #2
   17a30:	b	172bc <__mempcpy_chk@plt+0x5c2c>
   17a34:	movw	r3, #49504	; 0xc160
   17a38:	mov	r2, r1
   17a3c:	mov	r1, r0
   17a40:	mov	r0, #0
   17a44:	movt	r3, #2
   17a48:	b	172bc <__mempcpy_chk@plt+0x5c2c>
   17a4c:	movw	r3, #49504	; 0xc160
   17a50:	mvn	r2, #0
   17a54:	movt	r3, #2
   17a58:	b	172bc <__mempcpy_chk@plt+0x5c2c>
   17a5c:	movw	r3, #49504	; 0xc160
   17a60:	mov	r1, r0
   17a64:	mov	r0, #0
   17a68:	mvn	r2, #0
   17a6c:	movt	r3, #2
   17a70:	b	172bc <__mempcpy_chk@plt+0x5c2c>
   17a74:	push	{r4, r5, fp, lr}
   17a78:	add	fp, sp, #8
   17a7c:	mov	r5, r0
   17a80:	mov	r4, r1
   17a84:	mov	r0, #0
   17a88:	mov	r2, #5
   17a8c:	mov	r1, r5
   17a90:	bl	113e4 <dcgettext@plt>
   17a94:	cmp	r0, r5
   17a98:	popne	{r4, r5, fp, pc}
   17a9c:	bl	19914 <__mempcpy_chk@plt+0x8284>
   17aa0:	ldrb	r1, [r0]
   17aa4:	and	r1, r1, #223	; 0xdf
   17aa8:	cmp	r1, #71	; 0x47
   17aac:	beq	17b14 <__mempcpy_chk@plt+0x6484>
   17ab0:	cmp	r1, #85	; 0x55
   17ab4:	bne	17b38 <__mempcpy_chk@plt+0x64a8>
   17ab8:	ldrb	r1, [r0, #1]
   17abc:	and	r1, r1, #223	; 0xdf
   17ac0:	cmp	r1, #84	; 0x54
   17ac4:	bne	17b38 <__mempcpy_chk@plt+0x64a8>
   17ac8:	ldrb	r1, [r0, #2]
   17acc:	and	r1, r1, #223	; 0xdf
   17ad0:	cmp	r1, #70	; 0x46
   17ad4:	ldrbeq	r1, [r0, #3]
   17ad8:	cmpeq	r1, #45	; 0x2d
   17adc:	bne	17b38 <__mempcpy_chk@plt+0x64a8>
   17ae0:	ldrb	r1, [r0, #4]
   17ae4:	cmp	r1, #56	; 0x38
   17ae8:	ldrbeq	r0, [r0, #5]
   17aec:	cmpeq	r0, #0
   17af0:	bne	17b38 <__mempcpy_chk@plt+0x64a8>
   17af4:	ldrb	r1, [r5]
   17af8:	movw	r2, #45426	; 0xb172
   17afc:	movw	r0, #45430	; 0xb176
   17b00:	movt	r2, #1
   17b04:	movt	r0, #1
   17b08:	cmp	r1, #96	; 0x60
   17b0c:	moveq	r0, r2
   17b10:	pop	{r4, r5, fp, pc}
   17b14:	ldrb	r1, [r0, #1]
   17b18:	and	r1, r1, #223	; 0xdf
   17b1c:	cmp	r1, #66	; 0x42
   17b20:	bne	17b38 <__mempcpy_chk@plt+0x64a8>
   17b24:	ldrb	r1, [r0, #2]
   17b28:	cmp	r1, #49	; 0x31
   17b2c:	ldrbeq	r1, [r0, #3]
   17b30:	cmpeq	r1, #56	; 0x38
   17b34:	beq	17b54 <__mempcpy_chk@plt+0x64c4>
   17b38:	movw	r1, #45420	; 0xb16c
   17b3c:	movw	r0, #45424	; 0xb170
   17b40:	cmp	r4, #9
   17b44:	movt	r1, #1
   17b48:	movt	r0, #1
   17b4c:	moveq	r0, r1
   17b50:	pop	{r4, r5, fp, pc}
   17b54:	ldrb	r1, [r0, #4]
   17b58:	cmp	r1, #48	; 0x30
   17b5c:	ldrbeq	r1, [r0, #5]
   17b60:	cmpeq	r1, #51	; 0x33
   17b64:	bne	17b38 <__mempcpy_chk@plt+0x64a8>
   17b68:	ldrb	r1, [r0, #6]
   17b6c:	cmp	r1, #48	; 0x30
   17b70:	ldrbeq	r0, [r0, #7]
   17b74:	cmpeq	r0, #0
   17b78:	bne	17b38 <__mempcpy_chk@plt+0x64a8>
   17b7c:	ldrb	r1, [r5]
   17b80:	movw	r2, #45434	; 0xb17a
   17b84:	movw	r0, #45438	; 0xb17e
   17b88:	movt	r2, #1
   17b8c:	movt	r0, #1
   17b90:	b	17b08 <__mempcpy_chk@plt+0x6478>
   17b94:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17b98:	add	fp, sp, #28
   17b9c:	sub	sp, sp, #220	; 0xdc
   17ba0:	ldr	r7, [fp, #8]
   17ba4:	mov	r4, r3
   17ba8:	mov	r9, r2
   17bac:	mov	r6, r1
   17bb0:	mov	sl, r0
   17bb4:	str	r7, [sp]
   17bb8:	bl	11558 <renameat2@plt>
   17bbc:	mov	r5, r0
   17bc0:	bl	1151c <__errno_location@plt>
   17bc4:	cmn	r5, #1
   17bc8:	bgt	17c8c <__mempcpy_chk@plt+0x65fc>
   17bcc:	mov	r8, r0
   17bd0:	ldr	r0, [r0]
   17bd4:	cmp	r0, #22
   17bd8:	cmpne	r0, #95	; 0x5f
   17bdc:	bne	17c34 <__mempcpy_chk@plt+0x65a4>
   17be0:	cmp	r7, #0
   17be4:	beq	17c40 <__mempcpy_chk@plt+0x65b0>
   17be8:	cmp	r7, #1
   17bec:	bne	17c80 <__mempcpy_chk@plt+0x65f0>
   17bf0:	mov	r0, #256	; 0x100
   17bf4:	add	r3, sp, #8
   17bf8:	mov	r1, r9
   17bfc:	mov	r2, r4
   17c00:	str	r0, [sp]
   17c04:	mov	r0, #3
   17c08:	bl	11414 <__fxstatat64@plt>
   17c0c:	cmp	r0, #0
   17c10:	beq	17c2c <__mempcpy_chk@plt+0x659c>
   17c14:	ldr	r0, [r8]
   17c18:	cmp	r0, #2
   17c1c:	beq	17d00 <__mempcpy_chk@plt+0x6670>
   17c20:	mvn	r5, #0
   17c24:	cmp	r0, #75	; 0x4b
   17c28:	bne	17c8c <__mempcpy_chk@plt+0x65fc>
   17c2c:	mov	r0, #17
   17c30:	b	17c84 <__mempcpy_chk@plt+0x65f4>
   17c34:	cmp	r0, #38	; 0x26
   17c38:	beq	17be0 <__mempcpy_chk@plt+0x6550>
   17c3c:	b	17c8c <__mempcpy_chk@plt+0x65fc>
   17c40:	mov	r7, #0
   17c44:	mov	r0, r6
   17c48:	bl	11504 <strlen@plt>
   17c4c:	mov	r5, r0
   17c50:	mov	r0, r4
   17c54:	bl	11504 <strlen@plt>
   17c58:	cmp	r5, #0
   17c5c:	cmpne	r0, #0
   17c60:	bne	17c98 <__mempcpy_chk@plt+0x6608>
   17c64:	mov	r0, sl
   17c68:	mov	r1, r6
   17c6c:	mov	r2, r9
   17c70:	mov	r3, r4
   17c74:	bl	1160c <renameat@plt>
   17c78:	mov	r5, r0
   17c7c:	b	17c8c <__mempcpy_chk@plt+0x65fc>
   17c80:	mov	r0, #95	; 0x5f
   17c84:	str	r0, [r8]
   17c88:	mvn	r5, #0
   17c8c:	mov	r0, r5
   17c90:	sub	sp, fp, #28
   17c94:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17c98:	add	r1, r6, r5
   17c9c:	ldrb	r1, [r1, #-1]
   17ca0:	cmp	r1, #47	; 0x2f
   17ca4:	beq	17cb8 <__mempcpy_chk@plt+0x6628>
   17ca8:	add	r0, r4, r0
   17cac:	ldrb	r0, [r0, #-1]
   17cb0:	cmp	r0, #47	; 0x2f
   17cb4:	bne	17c64 <__mempcpy_chk@plt+0x65d4>
   17cb8:	mov	r0, #256	; 0x100
   17cbc:	add	r3, sp, #112	; 0x70
   17cc0:	mov	r1, sl
   17cc4:	mov	r2, r6
   17cc8:	str	r0, [sp]
   17ccc:	mov	r0, #3
   17cd0:	bl	11414 <__fxstatat64@plt>
   17cd4:	mvn	r5, #0
   17cd8:	cmp	r0, #0
   17cdc:	bne	17c8c <__mempcpy_chk@plt+0x65fc>
   17ce0:	cmp	r7, #0
   17ce4:	beq	17d08 <__mempcpy_chk@plt+0x6678>
   17ce8:	ldr	r0, [sp, #128]	; 0x80
   17cec:	and	r0, r0, #61440	; 0xf000
   17cf0:	cmp	r0, #16384	; 0x4000
   17cf4:	beq	17c64 <__mempcpy_chk@plt+0x65d4>
   17cf8:	mov	r0, #2
   17cfc:	b	17d78 <__mempcpy_chk@plt+0x66e8>
   17d00:	mov	r7, #1
   17d04:	b	17c44 <__mempcpy_chk@plt+0x65b4>
   17d08:	mov	r0, #256	; 0x100
   17d0c:	add	r3, sp, #8
   17d10:	mov	r1, r9
   17d14:	mov	r2, r4
   17d18:	str	r0, [sp]
   17d1c:	mov	r0, #3
   17d20:	bl	11414 <__fxstatat64@plt>
   17d24:	cmp	r0, #0
   17d28:	beq	17d4c <__mempcpy_chk@plt+0x66bc>
   17d2c:	ldr	r0, [r8]
   17d30:	cmp	r0, #2
   17d34:	bne	17c8c <__mempcpy_chk@plt+0x65fc>
   17d38:	ldr	r0, [sp, #128]	; 0x80
   17d3c:	and	r0, r0, #61440	; 0xf000
   17d40:	cmp	r0, #16384	; 0x4000
   17d44:	beq	17c64 <__mempcpy_chk@plt+0x65d4>
   17d48:	b	17c8c <__mempcpy_chk@plt+0x65fc>
   17d4c:	ldr	r0, [sp, #24]
   17d50:	and	r0, r0, #61440	; 0xf000
   17d54:	cmp	r0, #16384	; 0x4000
   17d58:	bne	17d74 <__mempcpy_chk@plt+0x66e4>
   17d5c:	ldr	r0, [sp, #128]	; 0x80
   17d60:	and	r0, r0, #61440	; 0xf000
   17d64:	cmp	r0, #16384	; 0x4000
   17d68:	beq	17c64 <__mempcpy_chk@plt+0x65d4>
   17d6c:	mov	r0, #21
   17d70:	b	17d78 <__mempcpy_chk@plt+0x66e8>
   17d74:	mov	r0, #20
   17d78:	str	r0, [r8]
   17d7c:	b	17c8c <__mempcpy_chk@plt+0x65fc>
   17d80:	mov	r3, r1
   17d84:	mov	r1, r0
   17d88:	mvn	r0, #99	; 0x63
   17d8c:	mvn	r2, #99	; 0x63
   17d90:	b	17d94 <__mempcpy_chk@plt+0x6704>
   17d94:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17d98:	add	fp, sp, #28
   17d9c:	sub	sp, sp, #228	; 0xe4
   17da0:	mov	sl, r0
   17da4:	mov	r0, r1
   17da8:	mov	r9, r3
   17dac:	str	r2, [sp, #12]
   17db0:	mov	r7, r1
   17db4:	bl	13bd0 <__mempcpy_chk@plt+0x2540>
   17db8:	mov	r6, r0
   17dbc:	mov	r0, r9
   17dc0:	bl	13bd0 <__mempcpy_chk@plt+0x2540>
   17dc4:	mov	r5, r0
   17dc8:	mov	r0, r6
   17dcc:	bl	13c1c <__mempcpy_chk@plt+0x258c>
   17dd0:	mov	r8, r0
   17dd4:	mov	r0, r5
   17dd8:	bl	13c1c <__mempcpy_chk@plt+0x258c>
   17ddc:	mov	r4, #0
   17de0:	cmp	r8, r0
   17de4:	bne	17ef0 <__mempcpy_chk@plt+0x6860>
   17de8:	mov	r0, r6
   17dec:	mov	r1, r5
   17df0:	mov	r2, r8
   17df4:	stmib	sp, {r9, sl}
   17df8:	bl	113d8 <memcmp@plt>
   17dfc:	cmp	r0, #0
   17e00:	bne	17ef0 <__mempcpy_chk@plt+0x6860>
   17e04:	mov	r0, r7
   17e08:	bl	14558 <__mempcpy_chk@plt+0x2ec8>
   17e0c:	ldr	r1, [sp, #8]
   17e10:	mov	r4, r0
   17e14:	mov	r6, #256	; 0x100
   17e18:	add	r3, sp, #120	; 0x78
   17e1c:	mov	r0, #3
   17e20:	mov	r2, r4
   17e24:	str	r6, [sp]
   17e28:	bl	11414 <__fxstatat64@plt>
   17e2c:	cmp	r0, #0
   17e30:	beq	17e50 <__mempcpy_chk@plt+0x67c0>
   17e34:	bl	1151c <__errno_location@plt>
   17e38:	ldr	r1, [r0]
   17e3c:	movw	r2, #46491	; 0xb59b
   17e40:	mov	r0, #1
   17e44:	mov	r3, r4
   17e48:	movt	r2, #1
   17e4c:	bl	11480 <error@plt>
   17e50:	mov	r0, r4
   17e54:	bl	148e8 <__mempcpy_chk@plt+0x3258>
   17e58:	ldr	r0, [sp, #4]
   17e5c:	bl	14558 <__mempcpy_chk@plt+0x2ec8>
   17e60:	ldr	r1, [sp, #12]
   17e64:	mov	r5, r0
   17e68:	add	r3, sp, #16
   17e6c:	mov	r0, #3
   17e70:	str	r6, [sp]
   17e74:	mov	r2, r5
   17e78:	bl	11414 <__fxstatat64@plt>
   17e7c:	cmp	r0, #0
   17e80:	beq	17ea0 <__mempcpy_chk@plt+0x6810>
   17e84:	bl	1151c <__errno_location@plt>
   17e88:	ldr	r1, [r0]
   17e8c:	movw	r2, #46491	; 0xb59b
   17e90:	mov	r0, #1
   17e94:	mov	r3, r5
   17e98:	movt	r2, #1
   17e9c:	bl	11480 <error@plt>
   17ea0:	ldr	r0, [sp, #112]	; 0x70
   17ea4:	ldr	r2, [sp, #216]	; 0xd8
   17ea8:	ldr	r1, [sp, #116]	; 0x74
   17eac:	ldr	r3, [sp, #220]	; 0xdc
   17eb0:	mov	r4, #0
   17eb4:	eor	r1, r3, r1
   17eb8:	eor	r0, r2, r0
   17ebc:	orrs	r0, r0, r1
   17ec0:	bne	17ee8 <__mempcpy_chk@plt+0x6858>
   17ec4:	ldr	r0, [sp, #16]
   17ec8:	ldr	r2, [sp, #120]	; 0x78
   17ecc:	ldr	r1, [sp, #20]
   17ed0:	ldr	r3, [sp, #124]	; 0x7c
   17ed4:	eor	r1, r3, r1
   17ed8:	eor	r0, r2, r0
   17edc:	orr	r0, r0, r1
   17ee0:	clz	r0, r0
   17ee4:	lsr	r4, r0, #5
   17ee8:	mov	r0, r5
   17eec:	bl	148e8 <__mempcpy_chk@plt+0x3258>
   17ef0:	mov	r0, r4
   17ef4:	sub	sp, fp, #28
   17ef8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17efc:	push	{r4, r5, r6, sl, fp, lr}
   17f00:	add	fp, sp, #16
   17f04:	ldr	r4, [r0], #8
   17f08:	mov	r5, r1
   17f0c:	cmp	r4, r0
   17f10:	beq	17f34 <__mempcpy_chk@plt+0x68a4>
   17f14:	mov	r0, r4
   17f18:	mov	r1, r5
   17f1c:	bl	19210 <__mempcpy_chk@plt+0x7b80>
   17f20:	mov	r6, r0
   17f24:	cmp	r0, #0
   17f28:	moveq	r6, r4
   17f2c:	mov	r0, r6
   17f30:	pop	{r4, r5, r6, sl, fp, pc}
   17f34:	mov	r0, r5
   17f38:	bl	191e0 <__mempcpy_chk@plt+0x7b50>
   17f3c:	cmp	r0, #0
   17f40:	moveq	r6, #0
   17f44:	moveq	r0, r6
   17f48:	popeq	{r4, r5, r6, sl, fp, pc}
   17f4c:	mov	r1, r4
   17f50:	mov	r2, r5
   17f54:	mov	r6, r0
   17f58:	bl	113c0 <memcpy@plt>
   17f5c:	mov	r0, r6
   17f60:	pop	{r4, r5, r6, sl, fp, pc}
   17f64:	push	{r4, r5, r6, sl, fp, lr}
   17f68:	add	fp, sp, #16
   17f6c:	mov	r4, r0
   17f70:	add	r6, r0, #8
   17f74:	ldrd	r0, [r0]
   17f78:	lsl	r5, r1, #1
   17f7c:	cmp	r0, r6
   17f80:	beq	17f8c <__mempcpy_chk@plt+0x68fc>
   17f84:	bl	148e8 <__mempcpy_chk@plt+0x3258>
   17f88:	ldr	r1, [r4, #4]
   17f8c:	cmp	r5, r1
   17f90:	bcc	17fb4 <__mempcpy_chk@plt+0x6924>
   17f94:	mov	r0, r5
   17f98:	bl	191e0 <__mempcpy_chk@plt+0x7b50>
   17f9c:	cmp	r0, #0
   17fa0:	strne	r0, [r4]
   17fa4:	movne	r0, #1
   17fa8:	strne	r5, [r4, #4]
   17fac:	popne	{r4, r5, r6, sl, fp, pc}
   17fb0:	b	17fc0 <__mempcpy_chk@plt+0x6930>
   17fb4:	bl	1151c <__errno_location@plt>
   17fb8:	mov	r1, #12
   17fbc:	str	r1, [r0]
   17fc0:	mov	r0, #0
   17fc4:	mov	r5, #1024	; 0x400
   17fc8:	str	r6, [r4]
   17fcc:	str	r5, [r4, #4]
   17fd0:	pop	{r4, r5, r6, sl, fp, pc}
   17fd4:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   17fd8:	add	fp, sp, #24
   17fdc:	ldrd	r8, [r0]
   17fe0:	add	r7, r0, #8
   17fe4:	mov	r4, r0
   17fe8:	lsl	r5, r9, #1
   17fec:	cmp	r8, r7
   17ff0:	beq	1801c <__mempcpy_chk@plt+0x698c>
   17ff4:	cmp	r5, r9
   17ff8:	bcc	18050 <__mempcpy_chk@plt+0x69c0>
   17ffc:	mov	r0, r8
   18000:	mov	r1, r5
   18004:	bl	19210 <__mempcpy_chk@plt+0x7b80>
   18008:	mov	r6, r0
   1800c:	cmp	r0, #0
   18010:	bne	18040 <__mempcpy_chk@plt+0x69b0>
   18014:	ldr	r8, [r4]
   18018:	b	1805c <__mempcpy_chk@plt+0x69cc>
   1801c:	mov	r0, r5
   18020:	bl	191e0 <__mempcpy_chk@plt+0x7b50>
   18024:	cmp	r0, #0
   18028:	moveq	r0, #0
   1802c:	popeq	{r4, r5, r6, r7, r8, r9, fp, pc}
   18030:	ldr	r2, [r4, #4]
   18034:	mov	r1, r8
   18038:	mov	r6, r0
   1803c:	bl	113c0 <memcpy@plt>
   18040:	mov	r0, #1
   18044:	str	r6, [r4]
   18048:	str	r5, [r4, #4]
   1804c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   18050:	bl	1151c <__errno_location@plt>
   18054:	mov	r1, #12
   18058:	str	r1, [r0]
   1805c:	mov	r0, r8
   18060:	bl	148e8 <__mempcpy_chk@plt+0x3258>
   18064:	mov	r0, #0
   18068:	mov	r5, #1024	; 0x400
   1806c:	str	r7, [r4]
   18070:	str	r5, [r4, #4]
   18074:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   18078:	push	{fp, lr}
   1807c:	mov	fp, sp
   18080:	sub	sp, sp, #8
   18084:	str	r2, [sp, #4]
   18088:	ldr	r2, [fp, #8]
   1808c:	str	r2, [sp]
   18090:	movw	r2, #45528	; 0xb1d8
   18094:	movt	r2, #1
   18098:	ldr	r3, [r2, r3, lsl #2]
   1809c:	add	r2, sp, #4
   180a0:	bl	18118 <__mempcpy_chk@plt+0x6a88>
   180a4:	mov	sp, fp
   180a8:	pop	{fp, pc}
   180ac:	ldr	r1, [r1]
   180b0:	mov	r2, #384	; 0x180
   180b4:	bic	r1, r1, #195	; 0xc3
   180b8:	orr	r1, r1, #194	; 0xc2
   180bc:	b	1148c <open64@plt>
   180c0:	mov	r1, #448	; 0x1c0
   180c4:	b	11534 <mkdir@plt>
   180c8:	push	{r4, sl, fp, lr}
   180cc:	add	fp, sp, #8
   180d0:	sub	sp, sp, #104	; 0x68
   180d4:	mov	r1, r0
   180d8:	mov	r2, sp
   180dc:	mov	r0, #3
   180e0:	bl	1166c <__lxstat64@plt>
   180e4:	mov	r4, r0
   180e8:	bl	1151c <__errno_location@plt>
   180ec:	cmp	r4, #0
   180f0:	ldrne	r1, [r0]
   180f4:	cmpne	r1, #75	; 0x4b
   180f8:	bne	18104 <__mempcpy_chk@plt+0x6a74>
   180fc:	mov	r1, #17
   18100:	str	r1, [r0]
   18104:	ldr	r0, [r0]
   18108:	subs	r0, r0, #2
   1810c:	mvnne	r0, #0
   18110:	sub	sp, fp, #8
   18114:	pop	{r4, sl, fp, pc}
   18118:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1811c:	add	fp, sp, #28
   18120:	sub	sp, sp, #68	; 0x44
   18124:	mov	r5, r3
   18128:	mov	r9, r2
   1812c:	mov	r4, r1
   18130:	mov	r7, r0
   18134:	bl	1151c <__errno_location@plt>
   18138:	str	r0, [sp, #20]
   1813c:	ldr	sl, [r0]
   18140:	mov	r0, #0
   18144:	str	r0, [sp, #44]	; 0x2c
   18148:	add	r0, sp, #40	; 0x28
   1814c:	lsr	r0, r0, #3
   18150:	str	r0, [sp, #40]	; 0x28
   18154:	ldr	r0, [fp, #8]
   18158:	add	r6, r0, r4
   1815c:	mov	r0, r7
   18160:	bl	11504 <strlen@plt>
   18164:	mvn	r8, #0
   18168:	mov	r4, #22
   1816c:	cmp	r0, r6
   18170:	bcc	18400 <__mempcpy_chk@plt+0x6d70>
   18174:	sub	r0, r0, r6
   18178:	movw	r1, #44967	; 0xafa7
   1817c:	add	r6, r7, r0
   18180:	movt	r1, #1
   18184:	mov	r0, r6
   18188:	bl	11684 <strspn@plt>
   1818c:	ldr	r1, [fp, #8]
   18190:	cmp	r0, r1
   18194:	bcc	18400 <__mempcpy_chk@plt+0x6d70>
   18198:	movw	r0, #32968	; 0x80c8
   1819c:	movw	r4, #39131	; 0x98db
   181a0:	str	r6, [sp, #32]
   181a4:	movw	r6, #21503	; 0x53ff
   181a8:	mov	r3, #0
   181ac:	mov	r2, #0
   181b0:	str	sl, [sp, #4]
   181b4:	str	r7, [sp, #8]
   181b8:	str	r5, [sp, #16]
   181bc:	str	r9, [sp, #12]
   181c0:	movt	r0, #1
   181c4:	movt	r4, #62617	; 0xf499
   181c8:	movt	r6, #2727	; 0xaa7
   181cc:	sub	r0, r5, r0
   181d0:	clz	r0, r0
   181d4:	lsr	r0, r0, #5
   181d8:	str	r0, [sp, #28]
   181dc:	cmp	r1, #0
   181e0:	str	r2, [sp, #24]
   181e4:	beq	1839c <__mempcpy_chk@plt+0x6d0c>
   181e8:	mov	sl, #0
   181ec:	sub	r5, fp, #40	; 0x28
   181f0:	ldr	r8, [sp, #40]	; 0x28
   181f4:	ldr	r9, [sp, #44]	; 0x2c
   181f8:	cmp	r3, #0
   181fc:	beq	18208 <__mempcpy_chk@plt+0x6b78>
   18200:	str	r3, [sp, #36]	; 0x24
   18204:	b	1834c <__mempcpy_chk@plt+0x6cbc>
   18208:	ldr	r0, [sp, #28]
   1820c:	tst	r0, #1
   18210:	beq	18238 <__mempcpy_chk@plt+0x6ba8>
   18214:	mov	r0, r5
   18218:	mov	r1, #8
   1821c:	mov	r2, #1
   18220:	bl	11624 <getrandom@plt>
   18224:	cmp	r0, #8
   18228:	bne	18238 <__mempcpy_chk@plt+0x6ba8>
   1822c:	ldr	r8, [fp, #-40]	; 0xffffffd8
   18230:	ldr	r9, [fp, #-36]	; 0xffffffdc
   18234:	b	18280 <__mempcpy_chk@plt+0x6bf0>
   18238:	mov	r0, #1
   1823c:	add	r1, sp, #48	; 0x30
   18240:	bl	113a8 <clock_gettime@plt>
   18244:	ldr	r0, [sp, #52]	; 0x34
   18248:	movw	r2, #45309	; 0xb0fd
   1824c:	movw	r7, #12006	; 0x2ee6
   18250:	movt	r2, #34736	; 0x87b0
   18254:	movt	r7, #10171	; 0x27bb
   18258:	mov	ip, r2
   1825c:	eor	r1, r8, r0
   18260:	eor	r0, r9, r0, asr #31
   18264:	umull	r2, r3, r1, r2
   18268:	mul	r0, r0, ip
   1826c:	mla	r1, r1, r7, r3
   18270:	movw	r3, #62253	; 0xf32d
   18274:	movt	r3, #46340	; 0xb504
   18278:	adds	r8, r2, r3
   1827c:	adc	r9, r1, r0
   18280:	subs	r0, r6, r8
   18284:	str	r8, [sp, #40]	; 0x28
   18288:	str	r9, [sp, #44]	; 0x2c
   1828c:	sbcs	r0, r4, r9
   18290:	bcs	1833c <__mempcpy_chk@plt+0x6cac>
   18294:	mov	r0, #10
   18298:	str	r0, [sp, #36]	; 0x24
   1829c:	mov	r0, #1
   182a0:	str	r0, [sp, #28]
   182a4:	mov	r0, r5
   182a8:	mov	r1, #8
   182ac:	mov	r2, #1
   182b0:	bl	11624 <getrandom@plt>
   182b4:	cmp	r0, #8
   182b8:	bne	182c8 <__mempcpy_chk@plt+0x6c38>
   182bc:	ldr	r8, [fp, #-40]	; 0xffffffd8
   182c0:	ldr	r9, [fp, #-36]	; 0xffffffdc
   182c4:	b	18324 <__mempcpy_chk@plt+0x6c94>
   182c8:	mov	r0, #1
   182cc:	add	r1, sp, #48	; 0x30
   182d0:	bl	113a8 <clock_gettime@plt>
   182d4:	ldr	r0, [sp, #52]	; 0x34
   182d8:	movw	r2, #45309	; 0xb0fd
   182dc:	mov	r7, r6
   182e0:	mov	r6, r4
   182e4:	movw	r4, #12006	; 0x2ee6
   182e8:	movt	r2, #34736	; 0x87b0
   182ec:	movt	r4, #10171	; 0x27bb
   182f0:	mov	r5, r2
   182f4:	eor	r1, r8, r0
   182f8:	eor	r0, r9, r0, asr #31
   182fc:	umull	r2, r3, r1, r2
   18300:	mul	r0, r0, r5
   18304:	sub	r5, fp, #40	; 0x28
   18308:	mla	r1, r1, r4, r3
   1830c:	movw	r3, #62253	; 0xf32d
   18310:	mov	r4, r6
   18314:	mov	r6, r7
   18318:	movt	r3, #46340	; 0xb504
   1831c:	adds	r8, r2, r3
   18320:	adc	r9, r1, r0
   18324:	subs	r0, r6, r8
   18328:	str	r8, [sp, #40]	; 0x28
   1832c:	str	r9, [sp, #44]	; 0x2c
   18330:	sbcs	r0, r4, r9
   18334:	bcc	182a4 <__mempcpy_chk@plt+0x6c14>
   18338:	b	1834c <__mempcpy_chk@plt+0x6cbc>
   1833c:	mov	r0, #10
   18340:	str	r0, [sp, #36]	; 0x24
   18344:	mov	r0, #1
   18348:	str	r0, [sp, #28]
   1834c:	mov	r0, r8
   18350:	mov	r1, r9
   18354:	mov	r2, #62	; 0x3e
   18358:	mov	r3, #0
   1835c:	bl	19cdc <__mempcpy_chk@plt+0x864c>
   18360:	rsb	r2, r0, r0, lsl #5
   18364:	movw	r3, #45540	; 0xb1e4
   18368:	sub	r2, r8, r2, lsl #1
   1836c:	movt	r3, #1
   18370:	ldrb	r2, [r3, r2]
   18374:	ldr	r3, [sp, #32]
   18378:	strb	r2, [r3, sl]
   1837c:	ldr	r3, [sp, #36]	; 0x24
   18380:	str	r0, [sp, #40]	; 0x28
   18384:	ldr	r0, [fp, #8]
   18388:	add	sl, sl, #1
   1838c:	str	r1, [sp, #44]	; 0x2c
   18390:	sub	r3, r3, #1
   18394:	cmp	sl, r0
   18398:	bne	181f0 <__mempcpy_chk@plt+0x6b60>
   1839c:	ldr	r9, [sp, #12]
   183a0:	ldr	r0, [sp, #8]
   183a4:	ldr	r5, [sp, #16]
   183a8:	mov	r7, r3
   183ac:	mov	r1, r9
   183b0:	blx	r5
   183b4:	cmn	r0, #1
   183b8:	bgt	183f8 <__mempcpy_chk@plt+0x6d68>
   183bc:	ldr	r0, [sp, #20]
   183c0:	ldr	r0, [r0]
   183c4:	cmp	r0, #17
   183c8:	bne	18414 <__mempcpy_chk@plt+0x6d84>
   183cc:	ldr	r2, [sp, #24]
   183d0:	ldr	r1, [fp, #8]
   183d4:	movw	r0, #41719	; 0xa2f7
   183d8:	mov	r3, r7
   183dc:	movt	r0, #3
   183e0:	add	r2, r2, #1
   183e4:	cmp	r2, r0
   183e8:	bls	181dc <__mempcpy_chk@plt+0x6b4c>
   183ec:	mvn	r8, #0
   183f0:	mov	r4, #17
   183f4:	b	18400 <__mempcpy_chk@plt+0x6d70>
   183f8:	ldr	r4, [sp, #4]
   183fc:	mov	r8, r0
   18400:	ldr	r0, [sp, #20]
   18404:	str	r4, [r0]
   18408:	mov	r0, r8
   1840c:	sub	sp, fp, #28
   18410:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18414:	mvn	r8, #0
   18418:	b	18408 <__mempcpy_chk@plt+0x6d78>
   1841c:	push	{fp, lr}
   18420:	mov	fp, sp
   18424:	sub	sp, sp, #8
   18428:	str	r2, [sp, #4]
   1842c:	mov	r2, #6
   18430:	str	r2, [sp]
   18434:	movw	r2, #45528	; 0xb1d8
   18438:	movt	r2, #1
   1843c:	ldr	r3, [r2, r3, lsl #2]
   18440:	add	r2, sp, #4
   18444:	bl	18118 <__mempcpy_chk@plt+0x6a88>
   18448:	mov	sp, fp
   1844c:	pop	{fp, pc}
   18450:	push	{fp, lr}
   18454:	mov	fp, sp
   18458:	sub	sp, sp, #8
   1845c:	mov	ip, #6
   18460:	str	ip, [sp]
   18464:	bl	18118 <__mempcpy_chk@plt+0x6a88>
   18468:	mov	sp, fp
   1846c:	pop	{fp, pc}
   18470:	push	{r4, r5, r6, r7, fp, lr}
   18474:	add	fp, sp, #16
   18478:	mov	r4, r0
   1847c:	cmp	r0, #2
   18480:	movhi	r0, r4
   18484:	pophi	{r4, r5, r6, r7, fp, pc}
   18488:	mov	r0, r4
   1848c:	bl	199e8 <__mempcpy_chk@plt+0x8358>
   18490:	mov	r5, r0
   18494:	bl	1151c <__errno_location@plt>
   18498:	ldr	r7, [r0]
   1849c:	mov	r6, r0
   184a0:	mov	r0, r4
   184a4:	bl	11660 <close@plt>
   184a8:	mov	r0, r5
   184ac:	str	r7, [r6]
   184b0:	pop	{r4, r5, r6, r7, fp, pc}
   184b4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   184b8:	add	fp, sp, #24
   184bc:	sub	sp, sp, #32
   184c0:	ldr	r6, [fp, #12]
   184c4:	ldr	r7, [fp, #8]
   184c8:	mov	r4, r2
   184cc:	mov	r8, r0
   184d0:	cmp	r1, #0
   184d4:	beq	184fc <__mempcpy_chk@plt+0x6e6c>
   184d8:	movw	r2, #45603	; 0xb223
   184dc:	mov	r5, r1
   184e0:	str	r3, [sp, #4]
   184e4:	str	r4, [sp]
   184e8:	mov	r0, r8
   184ec:	mov	r1, #1
   184f0:	movt	r2, #1
   184f4:	mov	r3, r5
   184f8:	b	18514 <__mempcpy_chk@plt+0x6e84>
   184fc:	movw	r2, #45615	; 0xb22f
   18500:	str	r3, [sp]
   18504:	mov	r0, r8
   18508:	mov	r1, #1
   1850c:	mov	r3, r4
   18510:	movt	r2, #1
   18514:	bl	1157c <__fprintf_chk@plt>
   18518:	movw	r1, #45622	; 0xb236
   1851c:	mov	r0, #0
   18520:	mov	r2, #5
   18524:	movt	r1, #1
   18528:	bl	113e4 <dcgettext@plt>
   1852c:	movw	r2, #46340	; 0xb504
   18530:	mov	r3, r0
   18534:	movw	r0, #2022	; 0x7e6
   18538:	mov	r1, #1
   1853c:	str	r0, [sp]
   18540:	movt	r2, #1
   18544:	mov	r0, r8
   18548:	bl	1157c <__fprintf_chk@plt>
   1854c:	movw	r4, #43555	; 0xaa23
   18550:	mov	r1, r8
   18554:	movt	r4, #1
   18558:	mov	r0, r4
   1855c:	bl	11324 <fputs_unlocked@plt>
   18560:	movw	r1, #45626	; 0xb23a
   18564:	mov	r0, #0
   18568:	mov	r2, #5
   1856c:	movt	r1, #1
   18570:	bl	113e4 <dcgettext@plt>
   18574:	movw	r3, #45797	; 0xb2e5
   18578:	mov	r2, r0
   1857c:	mov	r0, r8
   18580:	mov	r1, #1
   18584:	movt	r3, #1
   18588:	bl	1157c <__fprintf_chk@plt>
   1858c:	mov	r0, r4
   18590:	mov	r1, r8
   18594:	bl	11324 <fputs_unlocked@plt>
   18598:	cmp	r6, #9
   1859c:	bhi	185d8 <__mempcpy_chk@plt+0x6f48>
   185a0:	add	r0, pc, #0
   185a4:	ldr	pc, [r0, r6, lsl #2]
   185a8:	ldrdeq	r8, [r1], -r0
   185ac:	andeq	r8, r1, r4, ror #11
   185b0:	andeq	r8, r1, r4, lsl r6
   185b4:	andeq	r8, r1, ip, lsr r6
   185b8:	andeq	r8, r1, r4, ror #12
   185bc:	andeq	r8, r1, ip, lsl #13
   185c0:			; <UNDEFINED> instruction: 0x000186b4
   185c4:	andeq	r8, r1, ip, ror #13
   185c8:	andeq	r8, r1, ip, lsl #15
   185cc:	andeq	r8, r1, r4, lsr r7
   185d0:	sub	sp, fp, #24
   185d4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   185d8:	movw	r1, #46150	; 0xb446
   185dc:	movt	r1, #1
   185e0:	b	1873c <__mempcpy_chk@plt+0x70ac>
   185e4:	movw	r1, #45831	; 0xb307
   185e8:	mov	r0, #0
   185ec:	mov	r2, #5
   185f0:	movt	r1, #1
   185f4:	bl	113e4 <dcgettext@plt>
   185f8:	ldr	r3, [r7]
   185fc:	mov	r2, r0
   18600:	mov	r0, r8
   18604:	mov	r1, #1
   18608:	sub	sp, fp, #24
   1860c:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   18610:	b	1157c <__fprintf_chk@plt>
   18614:	movw	r1, #45847	; 0xb317
   18618:	mov	r0, #0
   1861c:	mov	r2, #5
   18620:	movt	r1, #1
   18624:	bl	113e4 <dcgettext@plt>
   18628:	mov	r2, r0
   1862c:	ldr	r3, [r7]
   18630:	ldr	r0, [r7, #4]
   18634:	str	r0, [sp]
   18638:	b	18728 <__mempcpy_chk@plt+0x7098>
   1863c:	movw	r1, #45870	; 0xb32e
   18640:	mov	r0, #0
   18644:	mov	r2, #5
   18648:	movt	r1, #1
   1864c:	bl	113e4 <dcgettext@plt>
   18650:	ldr	r3, [r7]
   18654:	mov	r2, r0
   18658:	ldmib	r7, {r0, r1}
   1865c:	stm	sp, {r0, r1}
   18660:	b	18728 <__mempcpy_chk@plt+0x7098>
   18664:	movw	r1, #45898	; 0xb34a
   18668:	mov	r0, #0
   1866c:	mov	r2, #5
   18670:	movt	r1, #1
   18674:	bl	113e4 <dcgettext@plt>
   18678:	ldr	r3, [r7]
   1867c:	mov	r2, r0
   18680:	ldmib	r7, {r0, r1, r7}
   18684:	stm	sp, {r0, r1, r7}
   18688:	b	18728 <__mempcpy_chk@plt+0x7098>
   1868c:	movw	r1, #45930	; 0xb36a
   18690:	mov	r0, #0
   18694:	mov	r2, #5
   18698:	movt	r1, #1
   1869c:	bl	113e4 <dcgettext@plt>
   186a0:	ldr	r3, [r7]
   186a4:	mov	r2, r0
   186a8:	ldmib	r7, {r0, r1, r6, r7}
   186ac:	stm	sp, {r0, r1, r6, r7}
   186b0:	b	18728 <__mempcpy_chk@plt+0x7098>
   186b4:	movw	r1, #45966	; 0xb38e
   186b8:	mov	r0, #0
   186bc:	mov	r2, #5
   186c0:	movt	r1, #1
   186c4:	bl	113e4 <dcgettext@plt>
   186c8:	ldr	r3, [r7]
   186cc:	mov	r2, r0
   186d0:	ldmib	r7, {r0, r1, r6}
   186d4:	ldr	r5, [r7, #16]
   186d8:	ldr	r7, [r7, #20]
   186dc:	stm	sp, {r0, r1, r6}
   186e0:	str	r5, [sp, #12]
   186e4:	str	r7, [sp, #16]
   186e8:	b	18728 <__mempcpy_chk@plt+0x7098>
   186ec:	movw	r1, #46006	; 0xb3b6
   186f0:	mov	r0, #0
   186f4:	mov	r2, #5
   186f8:	movt	r1, #1
   186fc:	bl	113e4 <dcgettext@plt>
   18700:	ldr	r3, [r7]
   18704:	mov	r2, r0
   18708:	ldmib	r7, {r0, r1, r6}
   1870c:	ldr	r5, [r7, #16]
   18710:	ldr	r4, [r7, #20]
   18714:	ldr	r7, [r7, #24]
   18718:	stm	sp, {r0, r1, r6}
   1871c:	str	r5, [sp, #12]
   18720:	str	r4, [sp, #16]
   18724:	str	r7, [sp, #20]
   18728:	mov	r0, r8
   1872c:	mov	r1, #1
   18730:	b	187dc <__mempcpy_chk@plt+0x714c>
   18734:	movw	r1, #46098	; 0xb412
   18738:	movt	r1, #1
   1873c:	mov	r0, #0
   18740:	mov	r2, #5
   18744:	bl	113e4 <dcgettext@plt>
   18748:	mov	ip, r0
   1874c:	ldr	r3, [r7]
   18750:	ldr	r0, [r7, #4]
   18754:	ldr	r1, [r7, #8]
   18758:	ldr	r6, [r7, #12]
   1875c:	ldr	r5, [r7, #16]
   18760:	ldr	r4, [r7, #20]
   18764:	ldr	r2, [r7, #24]
   18768:	ldr	lr, [r7, #28]
   1876c:	ldr	r7, [r7, #32]
   18770:	stm	sp, {r0, r1, r6}
   18774:	str	r5, [sp, #12]
   18778:	str	r4, [sp, #16]
   1877c:	str	r2, [sp, #20]
   18780:	str	lr, [sp, #24]
   18784:	str	r7, [sp, #28]
   18788:	b	187d0 <__mempcpy_chk@plt+0x7140>
   1878c:	movw	r1, #46050	; 0xb3e2
   18790:	mov	r0, #0
   18794:	mov	r2, #5
   18798:	movt	r1, #1
   1879c:	bl	113e4 <dcgettext@plt>
   187a0:	mov	ip, r0
   187a4:	ldr	r3, [r7]
   187a8:	ldmib	r7, {r0, r1, r6}
   187ac:	ldr	r5, [r7, #16]
   187b0:	ldr	r4, [r7, #20]
   187b4:	ldr	r2, [r7, #24]
   187b8:	ldr	r7, [r7, #28]
   187bc:	stm	sp, {r0, r1, r6}
   187c0:	str	r5, [sp, #12]
   187c4:	str	r4, [sp, #16]
   187c8:	str	r2, [sp, #20]
   187cc:	str	r7, [sp, #24]
   187d0:	mov	r0, r8
   187d4:	mov	r1, #1
   187d8:	mov	r2, ip
   187dc:	bl	1157c <__fprintf_chk@plt>
   187e0:	sub	sp, fp, #24
   187e4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   187e8:	push	{r4, sl, fp, lr}
   187ec:	add	fp, sp, #8
   187f0:	sub	sp, sp, #8
   187f4:	ldr	ip, [fp, #8]
   187f8:	mov	lr, #0
   187fc:	ldr	r4, [ip, lr, lsl #2]
   18800:	add	lr, lr, #1
   18804:	cmp	r4, #0
   18808:	bne	187fc <__mempcpy_chk@plt+0x716c>
   1880c:	sub	r4, lr, #1
   18810:	str	ip, [sp]
   18814:	str	r4, [sp, #4]
   18818:	bl	184b4 <__mempcpy_chk@plt+0x6e24>
   1881c:	sub	sp, fp, #8
   18820:	pop	{r4, sl, fp, pc}
   18824:	push	{fp, lr}
   18828:	mov	fp, sp
   1882c:	sub	sp, sp, #48	; 0x30
   18830:	ldr	ip, [fp, #8]
   18834:	ldr	lr, [ip]
   18838:	cmp	lr, #0
   1883c:	str	lr, [sp, #8]
   18840:	beq	188dc <__mempcpy_chk@plt+0x724c>
   18844:	ldr	lr, [ip, #4]
   18848:	cmp	lr, #0
   1884c:	str	lr, [sp, #12]
   18850:	beq	188e4 <__mempcpy_chk@plt+0x7254>
   18854:	ldr	lr, [ip, #8]
   18858:	cmp	lr, #0
   1885c:	str	lr, [sp, #16]
   18860:	beq	188ec <__mempcpy_chk@plt+0x725c>
   18864:	ldr	lr, [ip, #12]
   18868:	cmp	lr, #0
   1886c:	str	lr, [sp, #20]
   18870:	beq	188f4 <__mempcpy_chk@plt+0x7264>
   18874:	ldr	lr, [ip, #16]
   18878:	cmp	lr, #0
   1887c:	str	lr, [sp, #24]
   18880:	beq	188fc <__mempcpy_chk@plt+0x726c>
   18884:	ldr	lr, [ip, #20]
   18888:	cmp	lr, #0
   1888c:	str	lr, [sp, #28]
   18890:	beq	18904 <__mempcpy_chk@plt+0x7274>
   18894:	ldr	lr, [ip, #24]
   18898:	cmp	lr, #0
   1889c:	str	lr, [sp, #32]
   188a0:	beq	1890c <__mempcpy_chk@plt+0x727c>
   188a4:	ldr	lr, [ip, #28]
   188a8:	cmp	lr, #0
   188ac:	str	lr, [sp, #36]	; 0x24
   188b0:	beq	18914 <__mempcpy_chk@plt+0x7284>
   188b4:	ldr	lr, [ip, #32]
   188b8:	cmp	lr, #0
   188bc:	str	lr, [sp, #40]	; 0x28
   188c0:	beq	1891c <__mempcpy_chk@plt+0x728c>
   188c4:	ldr	lr, [ip, #36]	; 0x24
   188c8:	mov	ip, #10
   188cc:	cmp	lr, #0
   188d0:	str	lr, [sp, #44]	; 0x2c
   188d4:	movweq	ip, #9
   188d8:	b	18920 <__mempcpy_chk@plt+0x7290>
   188dc:	mov	ip, #0
   188e0:	b	18920 <__mempcpy_chk@plt+0x7290>
   188e4:	mov	ip, #1
   188e8:	b	18920 <__mempcpy_chk@plt+0x7290>
   188ec:	mov	ip, #2
   188f0:	b	18920 <__mempcpy_chk@plt+0x7290>
   188f4:	mov	ip, #3
   188f8:	b	18920 <__mempcpy_chk@plt+0x7290>
   188fc:	mov	ip, #4
   18900:	b	18920 <__mempcpy_chk@plt+0x7290>
   18904:	mov	ip, #5
   18908:	b	18920 <__mempcpy_chk@plt+0x7290>
   1890c:	mov	ip, #6
   18910:	b	18920 <__mempcpy_chk@plt+0x7290>
   18914:	mov	ip, #7
   18918:	b	18920 <__mempcpy_chk@plt+0x7290>
   1891c:	mov	ip, #8
   18920:	add	lr, sp, #8
   18924:	str	ip, [sp, #4]
   18928:	str	lr, [sp]
   1892c:	bl	184b4 <__mempcpy_chk@plt+0x6e24>
   18930:	mov	sp, fp
   18934:	pop	{fp, pc}
   18938:	push	{fp, lr}
   1893c:	mov	fp, sp
   18940:	sub	sp, sp, #56	; 0x38
   18944:	add	ip, fp, #8
   18948:	str	ip, [sp, #12]
   1894c:	ldr	lr, [fp, #8]
   18950:	cmp	lr, #0
   18954:	str	lr, [sp, #16]
   18958:	beq	189f4 <__mempcpy_chk@plt+0x7364>
   1895c:	ldr	lr, [ip, #4]
   18960:	cmp	lr, #0
   18964:	str	lr, [sp, #20]
   18968:	beq	189fc <__mempcpy_chk@plt+0x736c>
   1896c:	ldr	lr, [ip, #8]
   18970:	cmp	lr, #0
   18974:	str	lr, [sp, #24]
   18978:	beq	18a04 <__mempcpy_chk@plt+0x7374>
   1897c:	ldr	lr, [ip, #12]
   18980:	cmp	lr, #0
   18984:	str	lr, [sp, #28]
   18988:	beq	18a0c <__mempcpy_chk@plt+0x737c>
   1898c:	ldr	lr, [ip, #16]
   18990:	cmp	lr, #0
   18994:	str	lr, [sp, #32]
   18998:	beq	18a14 <__mempcpy_chk@plt+0x7384>
   1899c:	ldr	lr, [ip, #20]
   189a0:	cmp	lr, #0
   189a4:	str	lr, [sp, #36]	; 0x24
   189a8:	beq	18a1c <__mempcpy_chk@plt+0x738c>
   189ac:	ldr	lr, [ip, #24]
   189b0:	cmp	lr, #0
   189b4:	str	lr, [sp, #40]	; 0x28
   189b8:	beq	18a24 <__mempcpy_chk@plt+0x7394>
   189bc:	ldr	lr, [ip, #28]
   189c0:	cmp	lr, #0
   189c4:	str	lr, [sp, #44]	; 0x2c
   189c8:	beq	18a2c <__mempcpy_chk@plt+0x739c>
   189cc:	ldr	lr, [ip, #32]
   189d0:	cmp	lr, #0
   189d4:	str	lr, [sp, #48]	; 0x30
   189d8:	beq	18a34 <__mempcpy_chk@plt+0x73a4>
   189dc:	ldr	lr, [ip, #36]	; 0x24
   189e0:	mov	ip, #10
   189e4:	cmp	lr, #0
   189e8:	str	lr, [sp, #52]	; 0x34
   189ec:	movweq	ip, #9
   189f0:	b	18a38 <__mempcpy_chk@plt+0x73a8>
   189f4:	mov	ip, #0
   189f8:	b	18a38 <__mempcpy_chk@plt+0x73a8>
   189fc:	mov	ip, #1
   18a00:	b	18a38 <__mempcpy_chk@plt+0x73a8>
   18a04:	mov	ip, #2
   18a08:	b	18a38 <__mempcpy_chk@plt+0x73a8>
   18a0c:	mov	ip, #3
   18a10:	b	18a38 <__mempcpy_chk@plt+0x73a8>
   18a14:	mov	ip, #4
   18a18:	b	18a38 <__mempcpy_chk@plt+0x73a8>
   18a1c:	mov	ip, #5
   18a20:	b	18a38 <__mempcpy_chk@plt+0x73a8>
   18a24:	mov	ip, #6
   18a28:	b	18a38 <__mempcpy_chk@plt+0x73a8>
   18a2c:	mov	ip, #7
   18a30:	b	18a38 <__mempcpy_chk@plt+0x73a8>
   18a34:	mov	ip, #8
   18a38:	add	lr, sp, #16
   18a3c:	str	ip, [sp, #4]
   18a40:	str	lr, [sp]
   18a44:	bl	184b4 <__mempcpy_chk@plt+0x6e24>
   18a48:	mov	sp, fp
   18a4c:	pop	{fp, pc}
   18a50:	push	{fp, lr}
   18a54:	mov	fp, sp
   18a58:	movw	r0, #49588	; 0xc1b4
   18a5c:	movt	r0, #2
   18a60:	ldr	r1, [r0]
   18a64:	movw	r0, #43555	; 0xaa23
   18a68:	movt	r0, #1
   18a6c:	bl	11324 <fputs_unlocked@plt>
   18a70:	movw	r1, #46210	; 0xb482
   18a74:	mov	r0, #0
   18a78:	mov	r2, #5
   18a7c:	movt	r1, #1
   18a80:	bl	113e4 <dcgettext@plt>
   18a84:	movw	r2, #46230	; 0xb496
   18a88:	mov	r1, r0
   18a8c:	mov	r0, #1
   18a90:	movt	r2, #1
   18a94:	bl	11564 <__printf_chk@plt>
   18a98:	movw	r1, #46252	; 0xb4ac
   18a9c:	mov	r0, #0
   18aa0:	mov	r2, #5
   18aa4:	movt	r1, #1
   18aa8:	bl	113e4 <dcgettext@plt>
   18aac:	movw	r2, #43017	; 0xa809
   18ab0:	movw	r3, #43897	; 0xab79
   18ab4:	mov	r1, r0
   18ab8:	mov	r0, #1
   18abc:	movt	r2, #1
   18ac0:	movt	r3, #1
   18ac4:	bl	11564 <__printf_chk@plt>
   18ac8:	movw	r1, #46272	; 0xb4c0
   18acc:	mov	r0, #0
   18ad0:	mov	r2, #5
   18ad4:	movt	r1, #1
   18ad8:	bl	113e4 <dcgettext@plt>
   18adc:	movw	r2, #46311	; 0xb4e7
   18ae0:	mov	r1, r0
   18ae4:	mov	r0, #1
   18ae8:	movt	r2, #1
   18aec:	pop	{fp, lr}
   18af0:	b	11564 <__printf_chk@plt>
   18af4:	push	{r4, r5, r6, sl, fp, lr}
   18af8:	add	fp, sp, #16
   18afc:	mov	r4, r2
   18b00:	mov	r5, r1
   18b04:	mov	r6, r0
   18b08:	bl	199ac <__mempcpy_chk@plt+0x831c>
   18b0c:	cmp	r0, #0
   18b10:	popne	{r4, r5, r6, sl, fp, pc}
   18b14:	cmp	r6, #0
   18b18:	beq	18b2c <__mempcpy_chk@plt+0x749c>
   18b1c:	cmp	r5, #0
   18b20:	cmpne	r4, #0
   18b24:	bne	18b2c <__mempcpy_chk@plt+0x749c>
   18b28:	pop	{r4, r5, r6, sl, fp, pc}
   18b2c:	bl	190cc <__mempcpy_chk@plt+0x7a3c>
   18b30:	push	{r4, r5, r6, sl, fp, lr}
   18b34:	add	fp, sp, #16
   18b38:	mov	r4, r2
   18b3c:	mov	r5, r1
   18b40:	mov	r6, r0
   18b44:	bl	199ac <__mempcpy_chk@plt+0x831c>
   18b48:	cmp	r0, #0
   18b4c:	popne	{r4, r5, r6, sl, fp, pc}
   18b50:	cmp	r6, #0
   18b54:	beq	18b68 <__mempcpy_chk@plt+0x74d8>
   18b58:	cmp	r5, #0
   18b5c:	cmpne	r4, #0
   18b60:	bne	18b68 <__mempcpy_chk@plt+0x74d8>
   18b64:	pop	{r4, r5, r6, sl, fp, pc}
   18b68:	bl	190cc <__mempcpy_chk@plt+0x7a3c>
   18b6c:	push	{fp, lr}
   18b70:	mov	fp, sp
   18b74:	bl	191e0 <__mempcpy_chk@plt+0x7b50>
   18b78:	cmp	r0, #0
   18b7c:	popne	{fp, pc}
   18b80:	bl	190cc <__mempcpy_chk@plt+0x7a3c>
   18b84:	push	{fp, lr}
   18b88:	mov	fp, sp
   18b8c:	bl	191e0 <__mempcpy_chk@plt+0x7b50>
   18b90:	cmp	r0, #0
   18b94:	popne	{fp, pc}
   18b98:	bl	190cc <__mempcpy_chk@plt+0x7a3c>
   18b9c:	push	{fp, lr}
   18ba0:	mov	fp, sp
   18ba4:	bl	191e0 <__mempcpy_chk@plt+0x7b50>
   18ba8:	cmp	r0, #0
   18bac:	popne	{fp, pc}
   18bb0:	bl	190cc <__mempcpy_chk@plt+0x7a3c>
   18bb4:	push	{r4, r5, fp, lr}
   18bb8:	add	fp, sp, #8
   18bbc:	mov	r4, r1
   18bc0:	mov	r5, r0
   18bc4:	bl	19210 <__mempcpy_chk@plt+0x7b80>
   18bc8:	cmp	r0, #0
   18bcc:	popne	{r4, r5, fp, pc}
   18bd0:	cmp	r5, #0
   18bd4:	beq	18be4 <__mempcpy_chk@plt+0x7554>
   18bd8:	cmp	r4, #0
   18bdc:	bne	18be4 <__mempcpy_chk@plt+0x7554>
   18be0:	pop	{r4, r5, fp, pc}
   18be4:	bl	190cc <__mempcpy_chk@plt+0x7a3c>
   18be8:	push	{fp, lr}
   18bec:	mov	fp, sp
   18bf0:	cmp	r1, #0
   18bf4:	orreq	r1, r1, #1
   18bf8:	bl	19210 <__mempcpy_chk@plt+0x7b80>
   18bfc:	cmp	r0, #0
   18c00:	popne	{fp, pc}
   18c04:	bl	190cc <__mempcpy_chk@plt+0x7a3c>
   18c08:	push	{fp, lr}
   18c0c:	mov	fp, sp
   18c10:	clz	r3, r2
   18c14:	lsr	ip, r3, #5
   18c18:	clz	r3, r1
   18c1c:	lsr	r3, r3, #5
   18c20:	orrs	r3, r3, ip
   18c24:	movwne	r1, #1
   18c28:	movwne	r2, #1
   18c2c:	bl	199ac <__mempcpy_chk@plt+0x831c>
   18c30:	cmp	r0, #0
   18c34:	popne	{fp, pc}
   18c38:	bl	190cc <__mempcpy_chk@plt+0x7a3c>
   18c3c:	push	{fp, lr}
   18c40:	mov	fp, sp
   18c44:	mov	r2, r1
   18c48:	mov	r1, r0
   18c4c:	mov	r0, #0
   18c50:	bl	199ac <__mempcpy_chk@plt+0x831c>
   18c54:	cmp	r0, #0
   18c58:	popne	{fp, pc}
   18c5c:	bl	190cc <__mempcpy_chk@plt+0x7a3c>
   18c60:	push	{fp, lr}
   18c64:	mov	fp, sp
   18c68:	mov	r2, r1
   18c6c:	mov	r1, r0
   18c70:	clz	r0, r2
   18c74:	clz	r3, r1
   18c78:	lsr	r0, r0, #5
   18c7c:	lsr	r3, r3, #5
   18c80:	orrs	r0, r3, r0
   18c84:	movwne	r1, #1
   18c88:	movwne	r2, #1
   18c8c:	mov	r0, #0
   18c90:	bl	199ac <__mempcpy_chk@plt+0x831c>
   18c94:	cmp	r0, #0
   18c98:	popne	{fp, pc}
   18c9c:	bl	190cc <__mempcpy_chk@plt+0x7a3c>
   18ca0:	push	{r4, r5, r6, sl, fp, lr}
   18ca4:	add	fp, sp, #16
   18ca8:	ldr	r5, [r1]
   18cac:	mov	r4, r1
   18cb0:	mov	r6, r0
   18cb4:	cmp	r0, #0
   18cb8:	beq	18cd0 <__mempcpy_chk@plt+0x7640>
   18cbc:	mov	r0, #1
   18cc0:	add	r0, r0, r5, lsr #1
   18cc4:	adds	r5, r5, r0
   18cc8:	bcc	18cd8 <__mempcpy_chk@plt+0x7648>
   18ccc:	b	18d14 <__mempcpy_chk@plt+0x7684>
   18cd0:	cmp	r5, #0
   18cd4:	movweq	r5, #64	; 0x40
   18cd8:	mov	r0, r6
   18cdc:	mov	r1, r5
   18ce0:	mov	r2, #1
   18ce4:	bl	199ac <__mempcpy_chk@plt+0x831c>
   18ce8:	cmp	r5, #0
   18cec:	mov	r1, r5
   18cf0:	movwne	r1, #1
   18cf4:	cmp	r0, #0
   18cf8:	bne	18d0c <__mempcpy_chk@plt+0x767c>
   18cfc:	clz	r2, r6
   18d00:	lsr	r2, r2, #5
   18d04:	orrs	r1, r2, r1
   18d08:	bne	18d14 <__mempcpy_chk@plt+0x7684>
   18d0c:	str	r5, [r4]
   18d10:	pop	{r4, r5, r6, sl, fp, pc}
   18d14:	bl	190cc <__mempcpy_chk@plt+0x7a3c>
   18d18:	push	{r4, r5, r6, r7, fp, lr}
   18d1c:	add	fp, sp, #16
   18d20:	ldr	r5, [r1]
   18d24:	mov	r6, r2
   18d28:	mov	r4, r1
   18d2c:	mov	r7, r0
   18d30:	cmp	r0, #0
   18d34:	beq	18d4c <__mempcpy_chk@plt+0x76bc>
   18d38:	mov	r0, #1
   18d3c:	add	r0, r0, r5, lsr #1
   18d40:	adds	r5, r5, r0
   18d44:	bcc	18d64 <__mempcpy_chk@plt+0x76d4>
   18d48:	b	18d98 <__mempcpy_chk@plt+0x7708>
   18d4c:	cmp	r5, #0
   18d50:	bne	18d64 <__mempcpy_chk@plt+0x76d4>
   18d54:	mov	r0, #64	; 0x40
   18d58:	cmp	r6, #64	; 0x40
   18d5c:	udiv	r5, r0, r6
   18d60:	addhi	r5, r5, #1
   18d64:	mov	r0, r7
   18d68:	mov	r1, r5
   18d6c:	mov	r2, r6
   18d70:	bl	199ac <__mempcpy_chk@plt+0x831c>
   18d74:	cmp	r0, #0
   18d78:	bne	18d90 <__mempcpy_chk@plt+0x7700>
   18d7c:	cmp	r7, #0
   18d80:	beq	18d98 <__mempcpy_chk@plt+0x7708>
   18d84:	cmp	r6, #0
   18d88:	cmpne	r5, #0
   18d8c:	bne	18d98 <__mempcpy_chk@plt+0x7708>
   18d90:	str	r5, [r4]
   18d94:	pop	{r4, r5, r6, r7, fp, pc}
   18d98:	bl	190cc <__mempcpy_chk@plt+0x7a3c>
   18d9c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   18da0:	add	fp, sp, #24
   18da4:	mov	r8, r1
   18da8:	ldr	r1, [r1]
   18dac:	mov	r5, r0
   18db0:	add	r0, r1, r1, asr #1
   18db4:	cmp	r0, r1
   18db8:	mvnvs	r0, #-2147483648	; 0x80000000
   18dbc:	cmp	r0, r3
   18dc0:	mov	r7, r0
   18dc4:	movgt	r7, r3
   18dc8:	cmn	r3, #1
   18dcc:	movle	r7, r0
   18dd0:	ldr	r0, [fp, #8]
   18dd4:	cmn	r0, #1
   18dd8:	ble	18e00 <__mempcpy_chk@plt+0x7770>
   18ddc:	cmp	r0, #0
   18de0:	beq	18e54 <__mempcpy_chk@plt+0x77c4>
   18de4:	cmn	r7, #1
   18de8:	ble	18e28 <__mempcpy_chk@plt+0x7798>
   18dec:	mvn	r4, #-2147483648	; 0x80000000
   18df0:	udiv	r6, r4, r0
   18df4:	cmp	r6, r7
   18df8:	bge	18e54 <__mempcpy_chk@plt+0x77c4>
   18dfc:	b	18e64 <__mempcpy_chk@plt+0x77d4>
   18e00:	cmn	r7, #1
   18e04:	ble	18e44 <__mempcpy_chk@plt+0x77b4>
   18e08:	cmn	r0, #1
   18e0c:	beq	18e54 <__mempcpy_chk@plt+0x77c4>
   18e10:	mov	r6, #-2147483648	; 0x80000000
   18e14:	mvn	r4, #-2147483648	; 0x80000000
   18e18:	sdiv	r6, r6, r0
   18e1c:	cmp	r6, r7
   18e20:	bge	18e54 <__mempcpy_chk@plt+0x77c4>
   18e24:	b	18e64 <__mempcpy_chk@plt+0x77d4>
   18e28:	beq	18e54 <__mempcpy_chk@plt+0x77c4>
   18e2c:	mov	r6, #-2147483648	; 0x80000000
   18e30:	mvn	r4, #-2147483648	; 0x80000000
   18e34:	sdiv	r6, r6, r7
   18e38:	cmp	r6, r0
   18e3c:	bge	18e54 <__mempcpy_chk@plt+0x77c4>
   18e40:	b	18e64 <__mempcpy_chk@plt+0x77d4>
   18e44:	mvn	r4, #-2147483648	; 0x80000000
   18e48:	sdiv	r6, r4, r0
   18e4c:	cmp	r7, r6
   18e50:	blt	18e64 <__mempcpy_chk@plt+0x77d4>
   18e54:	mul	r6, r7, r0
   18e58:	mov	r4, #64	; 0x40
   18e5c:	cmp	r6, #63	; 0x3f
   18e60:	bgt	18e6c <__mempcpy_chk@plt+0x77dc>
   18e64:	sdiv	r7, r4, r0
   18e68:	mul	r6, r7, r0
   18e6c:	cmp	r5, #0
   18e70:	moveq	r4, #0
   18e74:	streq	r4, [r8]
   18e78:	sub	r4, r7, r1
   18e7c:	cmp	r4, r2
   18e80:	bge	18f2c <__mempcpy_chk@plt+0x789c>
   18e84:	add	r7, r1, r2
   18e88:	mov	r6, #0
   18e8c:	mov	r2, #0
   18e90:	cmp	r7, r3
   18e94:	movwgt	r6, #1
   18e98:	cmn	r3, #1
   18e9c:	movwgt	r2, #1
   18ea0:	cmp	r7, r1
   18ea4:	bvs	18f60 <__mempcpy_chk@plt+0x78d0>
   18ea8:	ands	r1, r2, r6
   18eac:	bne	18f60 <__mempcpy_chk@plt+0x78d0>
   18eb0:	cmn	r0, #1
   18eb4:	ble	18edc <__mempcpy_chk@plt+0x784c>
   18eb8:	cmp	r0, #0
   18ebc:	beq	18f28 <__mempcpy_chk@plt+0x7898>
   18ec0:	cmn	r7, #1
   18ec4:	ble	18f00 <__mempcpy_chk@plt+0x7870>
   18ec8:	mvn	r1, #-2147483648	; 0x80000000
   18ecc:	udiv	r1, r1, r0
   18ed0:	cmp	r1, r7
   18ed4:	bge	18f28 <__mempcpy_chk@plt+0x7898>
   18ed8:	b	18f60 <__mempcpy_chk@plt+0x78d0>
   18edc:	cmn	r7, #1
   18ee0:	ble	18f18 <__mempcpy_chk@plt+0x7888>
   18ee4:	cmn	r0, #1
   18ee8:	beq	18f28 <__mempcpy_chk@plt+0x7898>
   18eec:	mov	r1, #-2147483648	; 0x80000000
   18ef0:	sdiv	r1, r1, r0
   18ef4:	cmp	r1, r7
   18ef8:	bge	18f28 <__mempcpy_chk@plt+0x7898>
   18efc:	b	18f60 <__mempcpy_chk@plt+0x78d0>
   18f00:	beq	18f28 <__mempcpy_chk@plt+0x7898>
   18f04:	mov	r1, #-2147483648	; 0x80000000
   18f08:	sdiv	r1, r1, r7
   18f0c:	cmp	r1, r0
   18f10:	bge	18f28 <__mempcpy_chk@plt+0x7898>
   18f14:	b	18f60 <__mempcpy_chk@plt+0x78d0>
   18f18:	mvn	r1, #-2147483648	; 0x80000000
   18f1c:	sdiv	r1, r1, r0
   18f20:	cmp	r7, r1
   18f24:	blt	18f60 <__mempcpy_chk@plt+0x78d0>
   18f28:	mul	r6, r7, r0
   18f2c:	mov	r0, r5
   18f30:	mov	r1, r6
   18f34:	bl	19210 <__mempcpy_chk@plt+0x7b80>
   18f38:	cmp	r6, #0
   18f3c:	movwne	r6, #1
   18f40:	cmp	r0, #0
   18f44:	bne	18f58 <__mempcpy_chk@plt+0x78c8>
   18f48:	clz	r1, r5
   18f4c:	lsr	r1, r1, #5
   18f50:	orrs	r1, r1, r6
   18f54:	bne	18f60 <__mempcpy_chk@plt+0x78d0>
   18f58:	str	r7, [r8]
   18f5c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   18f60:	bl	190cc <__mempcpy_chk@plt+0x7a3c>
   18f64:	push	{fp, lr}
   18f68:	mov	fp, sp
   18f6c:	mov	r1, #1
   18f70:	bl	1918c <__mempcpy_chk@plt+0x7afc>
   18f74:	cmp	r0, #0
   18f78:	popne	{fp, pc}
   18f7c:	bl	190cc <__mempcpy_chk@plt+0x7a3c>
   18f80:	push	{fp, lr}
   18f84:	mov	fp, sp
   18f88:	bl	1918c <__mempcpy_chk@plt+0x7afc>
   18f8c:	cmp	r0, #0
   18f90:	popne	{fp, pc}
   18f94:	bl	190cc <__mempcpy_chk@plt+0x7a3c>
   18f98:	push	{fp, lr}
   18f9c:	mov	fp, sp
   18fa0:	mov	r1, #1
   18fa4:	bl	1918c <__mempcpy_chk@plt+0x7afc>
   18fa8:	cmp	r0, #0
   18fac:	popne	{fp, pc}
   18fb0:	bl	190cc <__mempcpy_chk@plt+0x7a3c>
   18fb4:	push	{fp, lr}
   18fb8:	mov	fp, sp
   18fbc:	bl	1918c <__mempcpy_chk@plt+0x7afc>
   18fc0:	cmp	r0, #0
   18fc4:	popne	{fp, pc}
   18fc8:	bl	190cc <__mempcpy_chk@plt+0x7a3c>
   18fcc:	push	{r4, r5, r6, sl, fp, lr}
   18fd0:	add	fp, sp, #16
   18fd4:	mov	r5, r0
   18fd8:	mov	r0, r1
   18fdc:	mov	r4, r1
   18fe0:	bl	191e0 <__mempcpy_chk@plt+0x7b50>
   18fe4:	cmp	r0, #0
   18fe8:	beq	19004 <__mempcpy_chk@plt+0x7974>
   18fec:	mov	r1, r5
   18ff0:	mov	r2, r4
   18ff4:	mov	r6, r0
   18ff8:	bl	113c0 <memcpy@plt>
   18ffc:	mov	r0, r6
   19000:	pop	{r4, r5, r6, sl, fp, pc}
   19004:	bl	190cc <__mempcpy_chk@plt+0x7a3c>
   19008:	push	{r4, r5, r6, sl, fp, lr}
   1900c:	add	fp, sp, #16
   19010:	mov	r5, r0
   19014:	mov	r0, r1
   19018:	mov	r4, r1
   1901c:	bl	191e0 <__mempcpy_chk@plt+0x7b50>
   19020:	cmp	r0, #0
   19024:	beq	19040 <__mempcpy_chk@plt+0x79b0>
   19028:	mov	r1, r5
   1902c:	mov	r2, r4
   19030:	mov	r6, r0
   19034:	bl	113c0 <memcpy@plt>
   19038:	mov	r0, r6
   1903c:	pop	{r4, r5, r6, sl, fp, pc}
   19040:	bl	190cc <__mempcpy_chk@plt+0x7a3c>
   19044:	push	{r4, r5, r6, sl, fp, lr}
   19048:	add	fp, sp, #16
   1904c:	mov	r5, r0
   19050:	add	r0, r1, #1
   19054:	mov	r4, r1
   19058:	bl	191e0 <__mempcpy_chk@plt+0x7b50>
   1905c:	cmp	r0, #0
   19060:	beq	19088 <__mempcpy_chk@plt+0x79f8>
   19064:	mov	r6, r0
   19068:	mov	r0, #0
   1906c:	mov	r1, r5
   19070:	mov	r2, r4
   19074:	strb	r0, [r6, r4]
   19078:	mov	r0, r6
   1907c:	bl	113c0 <memcpy@plt>
   19080:	mov	r0, r6
   19084:	pop	{r4, r5, r6, sl, fp, pc}
   19088:	bl	190cc <__mempcpy_chk@plt+0x7a3c>
   1908c:	push	{r4, r5, r6, sl, fp, lr}
   19090:	add	fp, sp, #16
   19094:	mov	r4, r0
   19098:	bl	11504 <strlen@plt>
   1909c:	add	r5, r0, #1
   190a0:	mov	r0, r5
   190a4:	bl	191e0 <__mempcpy_chk@plt+0x7b50>
   190a8:	cmp	r0, #0
   190ac:	beq	190c8 <__mempcpy_chk@plt+0x7a38>
   190b0:	mov	r1, r4
   190b4:	mov	r2, r5
   190b8:	mov	r6, r0
   190bc:	bl	113c0 <memcpy@plt>
   190c0:	mov	r0, r6
   190c4:	pop	{r4, r5, r6, sl, fp, pc}
   190c8:	bl	190cc <__mempcpy_chk@plt+0x7a3c>
   190cc:	push	{fp, lr}
   190d0:	mov	fp, sp
   190d4:	movw	r0, #49484	; 0xc14c
   190d8:	movw	r1, #46387	; 0xb533
   190dc:	mov	r2, #5
   190e0:	movt	r0, #2
   190e4:	movt	r1, #1
   190e8:	ldr	r4, [r0]
   190ec:	mov	r0, #0
   190f0:	bl	113e4 <dcgettext@plt>
   190f4:	movw	r2, #46491	; 0xb59b
   190f8:	mov	r3, r0
   190fc:	mov	r0, r4
   19100:	mov	r1, #0
   19104:	movt	r2, #1
   19108:	bl	11480 <error@plt>
   1910c:	bl	11654 <abort@plt>
   19110:	push	{r4, sl, fp, lr}
   19114:	add	fp, sp, #8
   19118:	sub	sp, sp, #8
   1911c:	movw	r0, #49584	; 0xc1b0
   19120:	mov	r4, #0
   19124:	mov	r1, sp
   19128:	mov	r2, #10
   1912c:	movt	r0, #2
   19130:	str	r4, [sp, #4]
   19134:	str	r4, [sp]
   19138:	ldr	r3, [r0]
   1913c:	add	r0, sp, #4
   19140:	bl	1133c <__getdelim@plt>
   19144:	cmp	r0, #1
   19148:	blt	19178 <__mempcpy_chk@plt+0x7ae8>
   1914c:	sub	r1, r0, #1
   19150:	ldr	r0, [sp, #4]
   19154:	ldrb	r2, [r0, r1]
   19158:	cmp	r2, #10
   1915c:	moveq	r2, #0
   19160:	strbeq	r2, [r0, r1]
   19164:	ldreq	r0, [sp, #4]
   19168:	bl	115b8 <rpmatch@plt>
   1916c:	mov	r4, #0
   19170:	cmp	r0, #0
   19174:	movwgt	r4, #1
   19178:	ldr	r0, [sp, #4]
   1917c:	bl	148e8 <__mempcpy_chk@plt+0x3258>
   19180:	mov	r0, r4
   19184:	sub	sp, fp, #8
   19188:	pop	{r4, sl, fp, pc}
   1918c:	clz	r2, r1
   19190:	clz	r3, r0
   19194:	lsr	r2, r2, #5
   19198:	lsr	r3, r3, #5
   1919c:	orrs	r2, r3, r2
   191a0:	movwne	r1, #1
   191a4:	movwne	r0, #1
   191a8:	cmp	r1, #0
   191ac:	beq	191dc <__mempcpy_chk@plt+0x7b4c>
   191b0:	mvn	r2, #-2147483648	; 0x80000000
   191b4:	udiv	r2, r2, r1
   191b8:	cmp	r2, r0
   191bc:	bcs	191dc <__mempcpy_chk@plt+0x7b4c>
   191c0:	push	{fp, lr}
   191c4:	mov	fp, sp
   191c8:	bl	1151c <__errno_location@plt>
   191cc:	mov	r1, #12
   191d0:	str	r1, [r0]
   191d4:	mov	r0, #0
   191d8:	pop	{fp, pc}
   191dc:	b	11318 <calloc@plt>
   191e0:	cmp	r0, #0
   191e4:	movweq	r0, #1
   191e8:	cmn	r0, #1
   191ec:	ble	191f4 <__mempcpy_chk@plt+0x7b64>
   191f0:	b	114a4 <malloc@plt>
   191f4:	push	{fp, lr}
   191f8:	mov	fp, sp
   191fc:	bl	1151c <__errno_location@plt>
   19200:	mov	r1, #12
   19204:	str	r1, [r0]
   19208:	mov	r0, #0
   1920c:	pop	{fp, pc}
   19210:	push	{fp, lr}
   19214:	mov	fp, sp
   19218:	cmp	r0, #0
   1921c:	beq	19238 <__mempcpy_chk@plt+0x7ba8>
   19220:	cmp	r1, #0
   19224:	beq	19244 <__mempcpy_chk@plt+0x7bb4>
   19228:	cmn	r1, #1
   1922c:	ble	19250 <__mempcpy_chk@plt+0x7bc0>
   19230:	pop	{fp, lr}
   19234:	b	113f0 <realloc@plt>
   19238:	mov	r0, r1
   1923c:	pop	{fp, lr}
   19240:	b	191e0 <__mempcpy_chk@plt+0x7b50>
   19244:	bl	148e8 <__mempcpy_chk@plt+0x3258>
   19248:	mov	r0, #0
   1924c:	pop	{fp, pc}
   19250:	bl	1151c <__errno_location@plt>
   19254:	mov	r1, #12
   19258:	str	r1, [r0]
   1925c:	mov	r0, #0
   19260:	pop	{fp, pc}
   19264:	mov	r0, #1
   19268:	b	11790 <__mempcpy_chk@plt+0x100>
   1926c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19270:	add	fp, sp, #28
   19274:	sub	sp, sp, #12
   19278:	mov	r4, r3
   1927c:	mov	r6, r2
   19280:	mov	r5, r1
   19284:	mov	sl, r0
   19288:	bl	11504 <strlen@plt>
   1928c:	ldr	r8, [r5]
   19290:	cmp	r8, #0
   19294:	beq	19350 <__mempcpy_chk@plt+0x7cc0>
   19298:	mov	r7, r0
   1929c:	mov	r0, #0
   192a0:	add	r9, r5, #4
   192a4:	mov	r5, #0
   192a8:	str	r6, [sp, #4]
   192ac:	str	r0, [sp]
   192b0:	mvn	r0, #0
   192b4:	str	r0, [sp, #8]
   192b8:	mov	r0, r8
   192bc:	mov	r1, sl
   192c0:	mov	r2, r7
   192c4:	bl	11648 <strncmp@plt>
   192c8:	cmp	r0, #0
   192cc:	bne	19324 <__mempcpy_chk@plt+0x7c94>
   192d0:	mov	r0, r8
   192d4:	bl	11504 <strlen@plt>
   192d8:	cmp	r0, r7
   192dc:	beq	19354 <__mempcpy_chk@plt+0x7cc4>
   192e0:	ldr	r0, [sp, #8]
   192e4:	cmn	r0, #1
   192e8:	beq	19320 <__mempcpy_chk@plt+0x7c90>
   192ec:	ldr	r0, [sp, #4]
   192f0:	cmp	r0, #0
   192f4:	beq	19314 <__mempcpy_chk@plt+0x7c84>
   192f8:	ldr	r1, [sp, #8]
   192fc:	mov	r2, r4
   19300:	mla	r0, r1, r4, r0
   19304:	mov	r1, r6
   19308:	bl	113d8 <memcmp@plt>
   1930c:	cmp	r0, #0
   19310:	beq	19324 <__mempcpy_chk@plt+0x7c94>
   19314:	mov	r0, #1
   19318:	str	r0, [sp]
   1931c:	b	19324 <__mempcpy_chk@plt+0x7c94>
   19320:	str	r5, [sp, #8]
   19324:	ldr	r8, [r9, r5, lsl #2]
   19328:	add	r6, r6, r4
   1932c:	add	r5, r5, #1
   19330:	cmp	r8, #0
   19334:	bne	192b8 <__mempcpy_chk@plt+0x7c28>
   19338:	ldr	r0, [sp]
   1933c:	tst	r0, #1
   19340:	ldr	r0, [sp, #8]
   19344:	mvnne	r0, #1
   19348:	sub	sp, fp, #28
   1934c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19350:	mvn	r5, #0
   19354:	mov	r0, r5
   19358:	sub	sp, fp, #28
   1935c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19360:	push	{r4, r5, r6, r7, fp, lr}
   19364:	add	fp, sp, #16
   19368:	mov	r5, r0
   1936c:	ldr	r0, [r1]
   19370:	mvn	r4, #0
   19374:	cmp	r0, #0
   19378:	beq	193a8 <__mempcpy_chk@plt+0x7d18>
   1937c:	add	r7, r1, #4
   19380:	mov	r6, #0
   19384:	mov	r1, r5
   19388:	bl	11348 <strcmp@plt>
   1938c:	cmp	r0, #0
   19390:	moveq	r0, r6
   19394:	popeq	{r4, r5, r6, r7, fp, pc}
   19398:	ldr	r0, [r7, r6, lsl #2]
   1939c:	add	r6, r6, #1
   193a0:	cmp	r0, #0
   193a4:	bne	19384 <__mempcpy_chk@plt+0x7cf4>
   193a8:	mov	r0, r4
   193ac:	pop	{r4, r5, r6, r7, fp, pc}
   193b0:	push	{r4, r5, r6, sl, fp, lr}
   193b4:	add	fp, sp, #16
   193b8:	sub	sp, sp, #8
   193bc:	mov	r4, r1
   193c0:	movw	r1, #46431	; 0xb55f
   193c4:	mov	r5, r0
   193c8:	movw	r0, #46404	; 0xb544
   193cc:	cmn	r2, #1
   193d0:	mov	r2, #5
   193d4:	movt	r0, #1
   193d8:	movt	r1, #1
   193dc:	moveq	r1, r0
   193e0:	mov	r0, #0
   193e4:	bl	113e4 <dcgettext@plt>
   193e8:	mov	r6, r0
   193ec:	mov	r0, #0
   193f0:	mov	r1, #8
   193f4:	mov	r2, r4
   193f8:	bl	1748c <__mempcpy_chk@plt+0x5dfc>
   193fc:	mov	r4, r0
   19400:	mov	r0, #1
   19404:	mov	r1, r5
   19408:	bl	17a4c <__mempcpy_chk@plt+0x63bc>
   1940c:	str	r0, [sp]
   19410:	mov	r0, #0
   19414:	mov	r1, #0
   19418:	mov	r2, r6
   1941c:	mov	r3, r4
   19420:	bl	11480 <error@plt>
   19424:	sub	sp, fp, #16
   19428:	pop	{r4, r5, r6, sl, fp, pc}
   1942c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19430:	add	fp, sp, #28
   19434:	sub	sp, sp, #4
   19438:	mov	r5, r1
   1943c:	movw	r1, #46460	; 0xb57c
   19440:	mov	sl, r2
   19444:	mov	r7, r0
   19448:	mov	r0, #0
   1944c:	mov	r2, #5
   19450:	mov	r8, #0
   19454:	movt	r1, #1
   19458:	bl	113e4 <dcgettext@plt>
   1945c:	movw	r4, #49576	; 0xc1a8
   19460:	movt	r4, #2
   19464:	ldr	r1, [r4]
   19468:	bl	11324 <fputs_unlocked@plt>
   1946c:	ldr	r6, [r7]
   19470:	cmp	r6, #0
   19474:	beq	19514 <__mempcpy_chk@plt+0x7e84>
   19478:	add	r9, r7, #4
   1947c:	mov	r7, #0
   19480:	str	sl, [sp]
   19484:	cmp	r8, #0
   19488:	beq	194a4 <__mempcpy_chk@plt+0x7e14>
   1948c:	mov	r0, r7
   19490:	mov	r1, r5
   19494:	mov	r2, sl
   19498:	bl	113d8 <memcmp@plt>
   1949c:	cmp	r0, #0
   194a0:	beq	194d0 <__mempcpy_chk@plt+0x7e40>
   194a4:	ldr	r7, [r4]
   194a8:	mov	r0, r6
   194ac:	bl	17a5c <__mempcpy_chk@plt+0x63cc>
   194b0:	movw	r2, #46481	; 0xb591
   194b4:	mov	r3, r0
   194b8:	mov	r0, r7
   194bc:	mov	r1, #1
   194c0:	movt	r2, #1
   194c4:	bl	1157c <__fprintf_chk@plt>
   194c8:	mov	r7, r5
   194cc:	b	19500 <__mempcpy_chk@plt+0x7e70>
   194d0:	mov	sl, r9
   194d4:	ldr	r9, [r4]
   194d8:	mov	r0, r6
   194dc:	bl	17a5c <__mempcpy_chk@plt+0x63cc>
   194e0:	mov	r3, r0
   194e4:	mov	r0, r9
   194e8:	mov	r9, sl
   194ec:	ldr	sl, [sp]
   194f0:	movw	r2, #46489	; 0xb599
   194f4:	mov	r1, #1
   194f8:	movt	r2, #1
   194fc:	bl	1157c <__fprintf_chk@plt>
   19500:	ldr	r6, [r9, -r8, lsl #2]
   19504:	add	r5, r5, sl
   19508:	sub	r8, r8, #1
   1950c:	cmp	r6, #0
   19510:	bne	19484 <__mempcpy_chk@plt+0x7df4>
   19514:	ldr	r0, [r4]
   19518:	ldr	r1, [r0, #20]
   1951c:	ldr	r2, [r0, #24]
   19520:	cmp	r1, r2
   19524:	addcc	r2, r1, #1
   19528:	strcc	r2, [r0, #20]
   1952c:	movcc	r0, #10
   19530:	strbcc	r0, [r1]
   19534:	subcc	sp, fp, #28
   19538:	popcc	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1953c:	mov	r1, #10
   19540:	sub	sp, fp, #28
   19544:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19548:	b	115c4 <__overflow@plt>
   1954c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19550:	add	fp, sp, #28
   19554:	sub	sp, sp, #20
   19558:	mov	r9, r0
   1955c:	ldr	r0, [fp, #16]
   19560:	mov	r8, r3
   19564:	mov	sl, r2
   19568:	mov	r7, r1
   1956c:	cmp	r0, #0
   19570:	beq	19648 <__mempcpy_chk@plt+0x7fb8>
   19574:	mov	r0, r7
   19578:	str	r9, [sp, #8]
   1957c:	str	r8, [sp, #16]
   19580:	bl	11504 <strlen@plt>
   19584:	ldr	r9, [sl]
   19588:	cmp	r9, #0
   1958c:	beq	19688 <__mempcpy_chk@plt+0x7ff8>
   19590:	str	sl, [sp, #4]
   19594:	add	r8, sl, #4
   19598:	ldr	sl, [sp, #16]
   1959c:	mov	r4, r0
   195a0:	mov	r0, #0
   195a4:	mvn	r6, #0
   195a8:	mov	r5, #0
   195ac:	str	r0, [sp, #12]
   195b0:	mov	r0, r9
   195b4:	mov	r1, r7
   195b8:	mov	r2, r4
   195bc:	bl	11648 <strncmp@plt>
   195c0:	cmp	r0, #0
   195c4:	bne	19614 <__mempcpy_chk@plt+0x7f84>
   195c8:	mov	r0, r9
   195cc:	bl	11504 <strlen@plt>
   195d0:	cmp	r0, r4
   195d4:	beq	19694 <__mempcpy_chk@plt+0x8004>
   195d8:	cmn	r6, #1
   195dc:	beq	19610 <__mempcpy_chk@plt+0x7f80>
   195e0:	ldr	r0, [sp, #16]
   195e4:	cmp	r0, #0
   195e8:	beq	19604 <__mempcpy_chk@plt+0x7f74>
   195ec:	ldr	r2, [fp, #8]
   195f0:	mov	r1, sl
   195f4:	mla	r0, r6, r2, r0
   195f8:	bl	113d8 <memcmp@plt>
   195fc:	cmp	r0, #0
   19600:	beq	19614 <__mempcpy_chk@plt+0x7f84>
   19604:	mov	r0, #1
   19608:	str	r0, [sp, #12]
   1960c:	b	19614 <__mempcpy_chk@plt+0x7f84>
   19610:	mov	r6, r5
   19614:	ldr	r9, [r8, r5, lsl #2]
   19618:	ldr	r0, [fp, #8]
   1961c:	add	r5, r5, #1
   19620:	add	sl, sl, r0
   19624:	cmp	r9, #0
   19628:	bne	195b0 <__mempcpy_chk@plt+0x7f20>
   1962c:	ldr	r0, [sp, #12]
   19630:	ldr	r8, [sp, #16]
   19634:	ldr	sl, [sp, #4]
   19638:	ldr	r9, [sp, #8]
   1963c:	tst	r0, #1
   19640:	beq	196a4 <__mempcpy_chk@plt+0x8014>
   19644:	b	196b0 <__mempcpy_chk@plt+0x8020>
   19648:	ldr	r0, [sl]
   1964c:	movw	r4, #46404	; 0xb544
   19650:	movt	r4, #1
   19654:	cmp	r0, #0
   19658:	beq	196c4 <__mempcpy_chk@plt+0x8034>
   1965c:	add	r5, sl, #4
   19660:	mov	r6, #0
   19664:	mov	r1, r7
   19668:	bl	11348 <strcmp@plt>
   1966c:	cmp	r0, #0
   19670:	beq	196a4 <__mempcpy_chk@plt+0x8014>
   19674:	ldr	r0, [r5, r6, lsl #2]
   19678:	add	r6, r6, #1
   1967c:	cmp	r0, #0
   19680:	bne	19664 <__mempcpy_chk@plt+0x7fd4>
   19684:	b	196c4 <__mempcpy_chk@plt+0x8034>
   19688:	ldr	r8, [sp, #16]
   1968c:	ldr	r9, [sp, #8]
   19690:	b	196bc <__mempcpy_chk@plt+0x802c>
   19694:	ldr	r8, [sp, #16]
   19698:	ldr	sl, [sp, #4]
   1969c:	ldr	r9, [sp, #8]
   196a0:	mov	r6, r5
   196a4:	cmn	r6, #1
   196a8:	bgt	1972c <__mempcpy_chk@plt+0x809c>
   196ac:	beq	196bc <__mempcpy_chk@plt+0x802c>
   196b0:	movw	r4, #46431	; 0xb55f
   196b4:	movt	r4, #1
   196b8:	b	196c4 <__mempcpy_chk@plt+0x8034>
   196bc:	movw	r4, #46404	; 0xb544
   196c0:	movt	r4, #1
   196c4:	ldr	r6, [fp, #12]
   196c8:	mov	r0, #0
   196cc:	mov	r1, r4
   196d0:	mov	r2, #5
   196d4:	bl	113e4 <dcgettext@plt>
   196d8:	mov	r4, r0
   196dc:	mov	r0, #0
   196e0:	mov	r1, #8
   196e4:	mov	r2, r7
   196e8:	bl	1748c <__mempcpy_chk@plt+0x5dfc>
   196ec:	mov	r5, r0
   196f0:	mov	r0, #1
   196f4:	mov	r1, r9
   196f8:	bl	17a4c <__mempcpy_chk@plt+0x63bc>
   196fc:	str	r0, [sp]
   19700:	mov	r0, #0
   19704:	mov	r1, #0
   19708:	mov	r2, r4
   1970c:	mov	r3, r5
   19710:	bl	11480 <error@plt>
   19714:	ldr	r2, [fp, #8]
   19718:	mov	r0, sl
   1971c:	mov	r1, r8
   19720:	bl	1942c <__mempcpy_chk@plt+0x7d9c>
   19724:	blx	r6
   19728:	mvn	r6, #0
   1972c:	mov	r0, r6
   19730:	sub	sp, fp, #28
   19734:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19738:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1973c:	add	fp, sp, #24
   19740:	ldr	r6, [r1]
   19744:	cmp	r6, #0
   19748:	beq	197ac <__mempcpy_chk@plt+0x811c>
   1974c:	mov	r8, r1
   19750:	mov	r7, r2
   19754:	mov	r1, r2
   19758:	mov	r2, r3
   1975c:	mov	r4, r3
   19760:	mov	r9, r0
   19764:	bl	113d8 <memcmp@plt>
   19768:	cmp	r0, #0
   1976c:	beq	197a4 <__mempcpy_chk@plt+0x8114>
   19770:	add	r7, r7, r4
   19774:	add	r5, r8, #4
   19778:	ldr	r6, [r5]
   1977c:	cmp	r6, #0
   19780:	beq	197ac <__mempcpy_chk@plt+0x811c>
   19784:	mov	r0, r9
   19788:	mov	r1, r7
   1978c:	mov	r2, r4
   19790:	bl	113d8 <memcmp@plt>
   19794:	add	r7, r7, r4
   19798:	add	r5, r5, #4
   1979c:	cmp	r0, #0
   197a0:	bne	19778 <__mempcpy_chk@plt+0x80e8>
   197a4:	mov	r0, r6
   197a8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   197ac:	mov	r6, #0
   197b0:	mov	r0, r6
   197b4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   197b8:	push	{r4, r5, r6, sl, fp, lr}
   197bc:	add	fp, sp, #16
   197c0:	mov	r4, r0
   197c4:	bl	11468 <__fpending@plt>
   197c8:	ldr	r6, [r4]
   197cc:	mov	r5, r0
   197d0:	mov	r0, r4
   197d4:	bl	1983c <__mempcpy_chk@plt+0x81ac>
   197d8:	tst	r6, #32
   197dc:	bne	19814 <__mempcpy_chk@plt+0x8184>
   197e0:	cmp	r0, #0
   197e4:	mov	r4, r0
   197e8:	mvnne	r4, #0
   197ec:	cmp	r5, #0
   197f0:	bne	19820 <__mempcpy_chk@plt+0x8190>
   197f4:	cmp	r0, #0
   197f8:	beq	19820 <__mempcpy_chk@plt+0x8190>
   197fc:	bl	1151c <__errno_location@plt>
   19800:	ldr	r0, [r0]
   19804:	subs	r4, r0, #9
   19808:	mvnne	r4, #0
   1980c:	mov	r0, r4
   19810:	pop	{r4, r5, r6, sl, fp, pc}
   19814:	mvn	r4, #0
   19818:	cmp	r0, #0
   1981c:	beq	19828 <__mempcpy_chk@plt+0x8198>
   19820:	mov	r0, r4
   19824:	pop	{r4, r5, r6, sl, fp, pc}
   19828:	bl	1151c <__errno_location@plt>
   1982c:	mov	r1, #0
   19830:	str	r1, [r0]
   19834:	mov	r0, r4
   19838:	pop	{r4, r5, r6, sl, fp, pc}
   1983c:	push	{r4, r5, r6, sl, fp, lr}
   19840:	add	fp, sp, #16
   19844:	sub	sp, sp, #8
   19848:	mov	r4, r0
   1984c:	bl	11570 <fileno@plt>
   19850:	cmn	r0, #1
   19854:	ble	198c8 <__mempcpy_chk@plt+0x8238>
   19858:	mov	r0, r4
   1985c:	bl	114bc <__freading@plt>
   19860:	cmp	r0, #0
   19864:	beq	19890 <__mempcpy_chk@plt+0x8200>
   19868:	mov	r0, r4
   1986c:	bl	11570 <fileno@plt>
   19870:	mov	r1, #1
   19874:	mov	r2, #0
   19878:	mov	r3, #0
   1987c:	str	r1, [sp]
   19880:	bl	11444 <lseek64@plt>
   19884:	and	r0, r0, r1
   19888:	cmn	r0, #1
   1988c:	beq	198c8 <__mempcpy_chk@plt+0x8238>
   19890:	mov	r0, r4
   19894:	bl	14690 <__mempcpy_chk@plt+0x3000>
   19898:	cmp	r0, #0
   1989c:	beq	198c8 <__mempcpy_chk@plt+0x8238>
   198a0:	bl	1151c <__errno_location@plt>
   198a4:	ldr	r6, [r0]
   198a8:	mov	r5, r0
   198ac:	mov	r0, r4
   198b0:	bl	11588 <fclose@plt>
   198b4:	cmp	r6, #0
   198b8:	strne	r6, [r5]
   198bc:	mvnne	r0, #0
   198c0:	sub	sp, fp, #16
   198c4:	pop	{r4, r5, r6, sl, fp, pc}
   198c8:	mov	r0, r4
   198cc:	sub	sp, fp, #16
   198d0:	pop	{r4, r5, r6, sl, fp, lr}
   198d4:	b	11588 <fclose@plt>
   198d8:	ldrb	r2, [r0]
   198dc:	cmp	r2, #0
   198e0:	beq	19904 <__mempcpy_chk@plt+0x8274>
   198e4:	add	r3, r0, #1
   198e8:	mov	r0, #0
   198ec:	ror	r0, r0, #23
   198f0:	uxtab	r0, r0, r2
   198f4:	ldrb	r2, [r3], #1
   198f8:	cmp	r2, #0
   198fc:	bne	198ec <__mempcpy_chk@plt+0x825c>
   19900:	b	19908 <__mempcpy_chk@plt+0x8278>
   19904:	mov	r0, #0
   19908:	udiv	r2, r0, r1
   1990c:	mls	r0, r2, r1, r0
   19910:	bx	lr
   19914:	push	{fp, lr}
   19918:	mov	fp, sp
   1991c:	mov	r0, #14
   19920:	bl	115e8 <nl_langinfo@plt>
   19924:	movw	r1, #43556	; 0xaa24
   19928:	cmp	r0, #0
   1992c:	movt	r1, #1
   19930:	movne	r1, r0
   19934:	movw	r0, #46494	; 0xb59e
   19938:	ldrb	r2, [r1]
   1993c:	movt	r0, #1
   19940:	cmp	r2, #0
   19944:	movne	r0, r1
   19948:	pop	{fp, pc}
   1994c:	push	{r4, r5, r6, r7, fp, lr}
   19950:	add	fp, sp, #16
   19954:	sub	sp, sp, #8
   19958:	add	r5, sp, #4
   1995c:	cmp	r0, #0
   19960:	mov	r7, r2
   19964:	mov	r4, r1
   19968:	movne	r5, r0
   1996c:	mov	r0, r5
   19970:	bl	11474 <mbrtowc@plt>
   19974:	mov	r6, r0
   19978:	cmp	r7, #0
   1997c:	beq	199a0 <__mempcpy_chk@plt+0x8310>
   19980:	cmn	r6, #2
   19984:	bcc	199a0 <__mempcpy_chk@plt+0x8310>
   19988:	mov	r0, #0
   1998c:	bl	19bd4 <__mempcpy_chk@plt+0x8544>
   19990:	cmp	r0, #0
   19994:	ldrbeq	r0, [r4]
   19998:	moveq	r6, #1
   1999c:	streq	r0, [r5]
   199a0:	mov	r0, r6
   199a4:	sub	sp, fp, #16
   199a8:	pop	{r4, r5, r6, r7, fp, pc}
   199ac:	cmp	r2, #0
   199b0:	beq	199e0 <__mempcpy_chk@plt+0x8350>
   199b4:	mvn	r3, #0
   199b8:	udiv	r3, r3, r2
   199bc:	cmp	r3, r1
   199c0:	bcs	199e0 <__mempcpy_chk@plt+0x8350>
   199c4:	push	{fp, lr}
   199c8:	mov	fp, sp
   199cc:	bl	1151c <__errno_location@plt>
   199d0:	mov	r1, #12
   199d4:	str	r1, [r0]
   199d8:	mov	r0, #0
   199dc:	pop	{fp, pc}
   199e0:	mul	r1, r2, r1
   199e4:	b	19210 <__mempcpy_chk@plt+0x7b80>
   199e8:	mov	r1, #0
   199ec:	mov	r2, #3
   199f0:	b	199f4 <__mempcpy_chk@plt+0x8364>
   199f4:	sub	sp, sp, #8
   199f8:	push	{r4, r5, r6, r7, fp, lr}
   199fc:	add	fp, sp, #16
   19a00:	sub	sp, sp, #8
   19a04:	mov	r5, r0
   19a08:	add	r0, fp, #8
   19a0c:	cmp	r1, #11
   19a10:	str	r3, [fp, #12]
   19a14:	str	r2, [fp, #8]
   19a18:	str	r0, [sp, #4]
   19a1c:	bhi	19a58 <__mempcpy_chk@plt+0x83c8>
   19a20:	mov	r0, #1
   19a24:	movw	r2, #1300	; 0x514
   19a28:	tst	r2, r0, lsl r1
   19a2c:	bne	19b18 <__mempcpy_chk@plt+0x8488>
   19a30:	movw	r2, #2570	; 0xa0a
   19a34:	tst	r2, r0, lsl r1
   19a38:	bne	19a80 <__mempcpy_chk@plt+0x83f0>
   19a3c:	cmp	r1, #0
   19a40:	bne	19a58 <__mempcpy_chk@plt+0x83c8>
   19a44:	ldr	r0, [sp, #4]
   19a48:	add	r1, r0, #4
   19a4c:	str	r1, [sp, #4]
   19a50:	mov	r1, #0
   19a54:	b	19b24 <__mempcpy_chk@plt+0x8494>
   19a58:	sub	r0, r1, #1024	; 0x400
   19a5c:	cmp	r0, #10
   19a60:	bhi	19b18 <__mempcpy_chk@plt+0x8488>
   19a64:	mov	r2, #1
   19a68:	movw	r3, #645	; 0x285
   19a6c:	tst	r3, r2, lsl r0
   19a70:	bne	19b18 <__mempcpy_chk@plt+0x8488>
   19a74:	movw	r3, #1282	; 0x502
   19a78:	tst	r3, r2, lsl r0
   19a7c:	beq	19a8c <__mempcpy_chk@plt+0x83fc>
   19a80:	mov	r0, r5
   19a84:	bl	115ac <fcntl64@plt>
   19a88:	b	19b30 <__mempcpy_chk@plt+0x84a0>
   19a8c:	cmp	r0, #6
   19a90:	bne	19b18 <__mempcpy_chk@plt+0x8488>
   19a94:	ldr	r0, [sp, #4]
   19a98:	movw	r7, #49944	; 0xc318
   19a9c:	movt	r7, #2
   19aa0:	add	r1, r0, #4
   19aa4:	str	r1, [sp, #4]
   19aa8:	ldr	r6, [r0]
   19aac:	ldr	r0, [r7]
   19ab0:	cmp	r0, #0
   19ab4:	blt	19b54 <__mempcpy_chk@plt+0x84c4>
   19ab8:	mov	r0, r5
   19abc:	movw	r1, #1030	; 0x406
   19ac0:	mov	r2, r6
   19ac4:	bl	115ac <fcntl64@plt>
   19ac8:	mov	r4, r0
   19acc:	cmn	r0, #1
   19ad0:	bgt	19b48 <__mempcpy_chk@plt+0x84b8>
   19ad4:	bl	1151c <__errno_location@plt>
   19ad8:	ldr	r0, [r0]
   19adc:	cmp	r0, #22
   19ae0:	bne	19b48 <__mempcpy_chk@plt+0x84b8>
   19ae4:	mov	r0, r5
   19ae8:	mov	r1, #0
   19aec:	mov	r2, r6
   19af0:	bl	115ac <fcntl64@plt>
   19af4:	mov	r4, r0
   19af8:	cmp	r0, #0
   19afc:	blt	19b34 <__mempcpy_chk@plt+0x84a4>
   19b00:	mvn	r0, #0
   19b04:	str	r0, [r7]
   19b08:	mov	r0, #1
   19b0c:	cmp	r0, #0
   19b10:	bne	19b80 <__mempcpy_chk@plt+0x84f0>
   19b14:	b	19b34 <__mempcpy_chk@plt+0x84a4>
   19b18:	ldr	r0, [sp, #4]
   19b1c:	add	r2, r0, #4
   19b20:	str	r2, [sp, #4]
   19b24:	ldr	r2, [r0]
   19b28:	mov	r0, r5
   19b2c:	bl	115ac <fcntl64@plt>
   19b30:	mov	r4, r0
   19b34:	mov	r0, r4
   19b38:	sub	sp, fp, #16
   19b3c:	pop	{r4, r5, r6, r7, fp, lr}
   19b40:	add	sp, sp, #8
   19b44:	bx	lr
   19b48:	mov	r0, #1
   19b4c:	str	r0, [r7]
   19b50:	b	19b34 <__mempcpy_chk@plt+0x84a4>
   19b54:	mov	r0, r5
   19b58:	mov	r1, #0
   19b5c:	mov	r2, r6
   19b60:	bl	115ac <fcntl64@plt>
   19b64:	mov	r4, r0
   19b68:	ldr	r0, [r7]
   19b6c:	add	r0, r0, #1
   19b70:	clz	r0, r0
   19b74:	lsr	r0, r0, #5
   19b78:	cmp	r0, #0
   19b7c:	beq	19b34 <__mempcpy_chk@plt+0x84a4>
   19b80:	cmp	r4, #0
   19b84:	blt	19b34 <__mempcpy_chk@plt+0x84a4>
   19b88:	mov	r0, r4
   19b8c:	mov	r1, #1
   19b90:	bl	115ac <fcntl64@plt>
   19b94:	cmp	r0, #0
   19b98:	blt	19bb4 <__mempcpy_chk@plt+0x8524>
   19b9c:	orr	r2, r0, #1
   19ba0:	mov	r0, r4
   19ba4:	mov	r1, #2
   19ba8:	bl	115ac <fcntl64@plt>
   19bac:	cmn	r0, #1
   19bb0:	bne	19b34 <__mempcpy_chk@plt+0x84a4>
   19bb4:	bl	1151c <__errno_location@plt>
   19bb8:	ldr	r6, [r0]
   19bbc:	mov	r5, r0
   19bc0:	mov	r0, r4
   19bc4:	bl	11660 <close@plt>
   19bc8:	str	r6, [r5]
   19bcc:	mvn	r4, #0
   19bd0:	b	19b34 <__mempcpy_chk@plt+0x84a4>
   19bd4:	push	{r4, sl, fp, lr}
   19bd8:	add	fp, sp, #8
   19bdc:	sub	sp, sp, #264	; 0x108
   19be0:	add	r1, sp, #7
   19be4:	movw	r2, #257	; 0x101
   19be8:	bl	19c38 <__mempcpy_chk@plt+0x85a8>
   19bec:	mov	r4, #0
   19bf0:	cmp	r0, #0
   19bf4:	bne	19c2c <__mempcpy_chk@plt+0x859c>
   19bf8:	movw	r1, #46500	; 0xb5a4
   19bfc:	add	r0, sp, #7
   19c00:	movt	r1, #1
   19c04:	bl	11348 <strcmp@plt>
   19c08:	cmp	r0, #0
   19c0c:	beq	19c2c <__mempcpy_chk@plt+0x859c>
   19c10:	movw	r1, #46502	; 0xb5a6
   19c14:	add	r0, sp, #7
   19c18:	movt	r1, #1
   19c1c:	bl	11348 <strcmp@plt>
   19c20:	mov	r4, r0
   19c24:	cmp	r0, #0
   19c28:	movwne	r4, #1
   19c2c:	mov	r0, r4
   19c30:	sub	sp, fp, #8
   19c34:	pop	{r4, sl, fp, pc}
   19c38:	push	{r4, r5, r6, r7, fp, lr}
   19c3c:	add	fp, sp, #16
   19c40:	mov	r4, r1
   19c44:	mov	r1, #0
   19c48:	mov	r6, r2
   19c4c:	bl	115d0 <setlocale@plt>
   19c50:	cmp	r0, #0
   19c54:	beq	19c84 <__mempcpy_chk@plt+0x85f4>
   19c58:	mov	r7, r0
   19c5c:	bl	11504 <strlen@plt>
   19c60:	cmp	r0, r6
   19c64:	bcs	19ca4 <__mempcpy_chk@plt+0x8614>
   19c68:	add	r2, r0, #1
   19c6c:	mov	r0, r4
   19c70:	mov	r1, r7
   19c74:	bl	113c0 <memcpy@plt>
   19c78:	mov	r5, #0
   19c7c:	mov	r0, r5
   19c80:	pop	{r4, r5, r6, r7, fp, pc}
   19c84:	cmp	r6, #0
   19c88:	mov	r5, #22
   19c8c:	movne	r0, #0
   19c90:	strbne	r0, [r4]
   19c94:	movne	r0, r5
   19c98:	popne	{r4, r5, r6, r7, fp, pc}
   19c9c:	mov	r0, r5
   19ca0:	pop	{r4, r5, r6, r7, fp, pc}
   19ca4:	mov	r5, #34	; 0x22
   19ca8:	cmp	r6, #0
   19cac:	beq	19ccc <__mempcpy_chk@plt+0x863c>
   19cb0:	sub	r6, r6, #1
   19cb4:	mov	r0, r4
   19cb8:	mov	r1, r7
   19cbc:	mov	r2, r6
   19cc0:	bl	113c0 <memcpy@plt>
   19cc4:	mov	r0, #0
   19cc8:	strb	r0, [r4, r6]
   19ccc:	mov	r0, r5
   19cd0:	pop	{r4, r5, r6, r7, fp, pc}
   19cd4:	mov	r1, #0
   19cd8:	b	115d0 <setlocale@plt>
   19cdc:	cmp	r3, #0
   19ce0:	cmpeq	r2, #0
   19ce4:	bne	19cfc <__mempcpy_chk@plt+0x866c>
   19ce8:	cmp	r1, #0
   19cec:	cmpeq	r0, #0
   19cf0:	mvnne	r1, #0
   19cf4:	mvnne	r0, #0
   19cf8:	b	19d18 <__mempcpy_chk@plt+0x8688>
   19cfc:	sub	sp, sp, #8
   19d00:	push	{sp, lr}
   19d04:	bl	19d28 <__mempcpy_chk@plt+0x8698>
   19d08:	ldr	lr, [sp, #4]
   19d0c:	add	sp, sp, #8
   19d10:	pop	{r2, r3}
   19d14:	bx	lr
   19d18:	push	{r1, lr}
   19d1c:	mov	r0, #8
   19d20:	bl	11330 <raise@plt>
   19d24:	pop	{r1, pc}
   19d28:	cmp	r1, r3
   19d2c:	cmpeq	r0, r2
   19d30:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19d34:	mov	r4, r0
   19d38:	movcc	r0, #0
   19d3c:	mov	r5, r1
   19d40:	ldr	lr, [sp, #36]	; 0x24
   19d44:	movcc	r1, r0
   19d48:	bcc	19e44 <__mempcpy_chk@plt+0x87b4>
   19d4c:	cmp	r3, #0
   19d50:	clzeq	ip, r2
   19d54:	clzne	ip, r3
   19d58:	addeq	ip, ip, #32
   19d5c:	cmp	r5, #0
   19d60:	clzeq	r1, r4
   19d64:	addeq	r1, r1, #32
   19d68:	clzne	r1, r5
   19d6c:	sub	ip, ip, r1
   19d70:	sub	sl, ip, #32
   19d74:	lsl	r9, r3, ip
   19d78:	rsb	fp, ip, #32
   19d7c:	orr	r9, r9, r2, lsl sl
   19d80:	orr	r9, r9, r2, lsr fp
   19d84:	lsl	r8, r2, ip
   19d88:	cmp	r5, r9
   19d8c:	cmpeq	r4, r8
   19d90:	movcc	r0, #0
   19d94:	movcc	r1, r0
   19d98:	bcc	19db4 <__mempcpy_chk@plt+0x8724>
   19d9c:	mov	r0, #1
   19da0:	subs	r4, r4, r8
   19da4:	lsl	r1, r0, sl
   19da8:	orr	r1, r1, r0, lsr fp
   19dac:	lsl	r0, r0, ip
   19db0:	sbc	r5, r5, r9
   19db4:	cmp	ip, #0
   19db8:	beq	19e44 <__mempcpy_chk@plt+0x87b4>
   19dbc:	lsr	r6, r8, #1
   19dc0:	orr	r6, r6, r9, lsl #31
   19dc4:	lsr	r7, r9, #1
   19dc8:	mov	r2, ip
   19dcc:	b	19df0 <__mempcpy_chk@plt+0x8760>
   19dd0:	subs	r3, r4, r6
   19dd4:	sbc	r8, r5, r7
   19dd8:	adds	r3, r3, r3
   19ddc:	adc	r8, r8, r8
   19de0:	adds	r4, r3, #1
   19de4:	adc	r5, r8, #0
   19de8:	subs	r2, r2, #1
   19dec:	beq	19e0c <__mempcpy_chk@plt+0x877c>
   19df0:	cmp	r5, r7
   19df4:	cmpeq	r4, r6
   19df8:	bcs	19dd0 <__mempcpy_chk@plt+0x8740>
   19dfc:	adds	r4, r4, r4
   19e00:	adc	r5, r5, r5
   19e04:	subs	r2, r2, #1
   19e08:	bne	19df0 <__mempcpy_chk@plt+0x8760>
   19e0c:	lsr	r3, r4, ip
   19e10:	orr	r3, r3, r5, lsl fp
   19e14:	lsr	r2, r5, ip
   19e18:	orr	r3, r3, r5, lsr sl
   19e1c:	adds	r0, r0, r4
   19e20:	mov	r4, r3
   19e24:	lsl	r3, r2, ip
   19e28:	orr	r3, r3, r4, lsl sl
   19e2c:	lsl	ip, r4, ip
   19e30:	orr	r3, r3, r4, lsr fp
   19e34:	adc	r1, r1, r5
   19e38:	subs	r0, r0, ip
   19e3c:	mov	r5, r2
   19e40:	sbc	r1, r1, r3
   19e44:	cmp	lr, #0
   19e48:	strdne	r4, [lr]
   19e4c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19e50:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   19e54:	mov	r7, r0
   19e58:	ldr	r6, [pc, #72]	; 19ea8 <__mempcpy_chk@plt+0x8818>
   19e5c:	ldr	r5, [pc, #72]	; 19eac <__mempcpy_chk@plt+0x881c>
   19e60:	add	r6, pc, r6
   19e64:	add	r5, pc, r5
   19e68:	sub	r6, r6, r5
   19e6c:	mov	r8, r1
   19e70:	mov	r9, r2
   19e74:	bl	112f8 <calloc@plt-0x20>
   19e78:	asrs	r6, r6, #2
   19e7c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   19e80:	mov	r4, #0
   19e84:	add	r4, r4, #1
   19e88:	ldr	r3, [r5], #4
   19e8c:	mov	r2, r9
   19e90:	mov	r1, r8
   19e94:	mov	r0, r7
   19e98:	blx	r3
   19e9c:	cmp	r6, r4
   19ea0:	bne	19e84 <__mempcpy_chk@plt+0x87f4>
   19ea4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   19ea8:	andeq	r2, r1, r4, lsr #1
   19eac:	muleq	r1, ip, r0
   19eb0:	bx	lr
   19eb4:	ldr	r3, [pc, #12]	; 19ec8 <__mempcpy_chk@plt+0x8838>
   19eb8:	mov	r1, #0
   19ebc:	add	r3, pc, r3
   19ec0:	ldr	r2, [r3]
   19ec4:	b	11528 <__cxa_atexit@plt>
   19ec8:	andeq	r2, r1, r0, lsl #5

Disassembly of section .fini:

00019ecc <.fini>:
   19ecc:	push	{r3, lr}
   19ed0:	pop	{r3, pc}
