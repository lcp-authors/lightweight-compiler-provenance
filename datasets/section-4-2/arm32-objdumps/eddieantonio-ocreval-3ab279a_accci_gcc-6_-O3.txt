
../repos/eddieantonio-ocreval-3ab279a/accci/accci:     file format elf32-littlearm


Disassembly of section .init:

0001094c <.init>:
   1094c:	push	{r3, lr}
   10950:	bl	10bcc <getc@plt+0xe0>
   10954:	pop	{r3, pc}

Disassembly of section .plt:

00010958 <calloc@plt-0x14>:
   10958:	push	{lr}		; (str lr, [sp, #-4]!)
   1095c:	ldr	lr, [pc, #4]	; 10968 <calloc@plt-0x4>
   10960:	add	lr, pc, lr
   10964:	ldr	pc, [lr, #8]!
   10968:	muleq	r1, r8, r6

0001096c <calloc@plt>:
   1096c:	add	ip, pc, #0, 12
   10970:	add	ip, ip, #20, 20	; 0x14000
   10974:	ldr	pc, [ip, #1688]!	; 0x698

00010978 <strcmp@plt>:
   10978:	add	ip, pc, #0, 12
   1097c:	add	ip, ip, #20, 20	; 0x14000
   10980:	ldr	pc, [ip, #1680]!	; 0x690

00010984 <printf@plt>:
   10984:	add	ip, pc, #0, 12
   10988:	add	ip, ip, #20, 20	; 0x14000
   1098c:	ldr	pc, [ip, #1672]!	; 0x688

00010990 <fopen@plt>:
   10990:	add	ip, pc, #0, 12
   10994:	add	ip, ip, #20, 20	; 0x14000
   10998:	ldr	pc, [ip, #1664]!	; 0x680

0001099c <free@plt>:
   1099c:	add	ip, pc, #0, 12
   109a0:	add	ip, ip, #20, 20	; 0x14000
   109a4:	ldr	pc, [ip, #1656]!	; 0x678

000109a8 <utf8proc_get_property@plt>:
   109a8:	add	ip, pc, #0, 12
   109ac:	add	ip, ip, #20, 20	; 0x14000
   109b0:	ldr	pc, [ip, #1648]!	; 0x670

000109b4 <fgets@plt>:
   109b4:	add	ip, pc, #0, 12
   109b8:	add	ip, ip, #20, 20	; 0x14000
   109bc:	ldr	pc, [ip, #1640]!	; 0x668

000109c0 <utf8proc_encode_char@plt>:
   109c0:	add	ip, pc, #0, 12
   109c4:	add	ip, ip, #20, 20	; 0x14000
   109c8:	ldr	pc, [ip, #1632]!	; 0x660

000109cc <strdup@plt>:
   109cc:	add	ip, pc, #0, 12
   109d0:	add	ip, ip, #20, 20	; 0x14000
   109d4:	ldr	pc, [ip, #1624]!	; 0x658

000109d8 <rewind@plt>:
   109d8:	add	ip, pc, #0, 12
   109dc:	add	ip, ip, #20, 20	; 0x14000
   109e0:	ldr	pc, [ip, #1616]!	; 0x650

000109e4 <unlink@plt>:
   109e4:	add	ip, pc, #0, 12
   109e8:	add	ip, ip, #20, 20	; 0x14000
   109ec:	ldr	pc, [ip, #1608]!	; 0x648

000109f0 <utf8proc_tolower@plt>:
   109f0:	add	ip, pc, #0, 12
   109f4:	add	ip, ip, #20, 20	; 0x14000
   109f8:	ldr	pc, [ip, #1600]!	; 0x640

000109fc <__xstat@plt>:
   109fc:	add	ip, pc, #0, 12
   10a00:	add	ip, ip, #20, 20	; 0x14000
   10a04:	ldr	pc, [ip, #1592]!	; 0x638

00010a08 <fwrite@plt>:
   10a08:	add	ip, pc, #0, 12
   10a0c:	add	ip, ip, #20, 20	; 0x14000
   10a10:	ldr	pc, [ip, #1584]!	; 0x630

00010a14 <fread@plt>:
   10a14:	add	ip, pc, #0, 12
   10a18:	add	ip, ip, #20, 20	; 0x14000
   10a1c:	ldr	pc, [ip, #1576]!	; 0x628

00010a20 <utf8proc_iterate@plt>:
   10a20:	add	ip, pc, #0, 12
   10a24:	add	ip, ip, #20, 20	; 0x14000
   10a28:	ldr	pc, [ip, #1568]!	; 0x620

00010a2c <__libc_start_main@plt>:
   10a2c:	add	ip, pc, #0, 12
   10a30:	add	ip, ip, #20, 20	; 0x14000
   10a34:	ldr	pc, [ip, #1560]!	; 0x618

00010a38 <__sysv_signal@plt>:
   10a38:	add	ip, pc, #0, 12
   10a3c:	add	ip, ip, #20, 20	; 0x14000
   10a40:	ldr	pc, [ip, #1552]!	; 0x610

00010a44 <__gmon_start__@plt>:
   10a44:	add	ip, pc, #0, 12
   10a48:	add	ip, ip, #20, 20	; 0x14000
   10a4c:	ldr	pc, [ip, #1544]!	; 0x608

00010a50 <getpid@plt>:
   10a50:	add	ip, pc, #0, 12
   10a54:	add	ip, ip, #20, 20	; 0x14000
   10a58:	ldr	pc, [ip, #1536]!	; 0x600

00010a5c <exit@plt>:
   10a5c:	add	ip, pc, #0, 12
   10a60:	add	ip, ip, #20, 20	; 0x14000
   10a64:	ldr	pc, [ip, #1528]!	; 0x5f8

00010a68 <utf8proc_category@plt>:
   10a68:	add	ip, pc, #0, 12
   10a6c:	add	ip, ip, #20, 20	; 0x14000
   10a70:	ldr	pc, [ip, #1520]!	; 0x5f0

00010a74 <strlen@plt>:
   10a74:	add	ip, pc, #0, 12
   10a78:	add	ip, ip, #20, 20	; 0x14000
   10a7c:	ldr	pc, [ip, #1512]!	; 0x5e8

00010a80 <fprintf@plt>:
   10a80:	add	ip, pc, #0, 12
   10a84:	add	ip, ip, #20, 20	; 0x14000
   10a88:	ldr	pc, [ip, #1504]!	; 0x5e0

00010a8c <sqrt@plt>:
   10a8c:	add	ip, pc, #0, 12
   10a90:	add	ip, ip, #20, 20	; 0x14000
   10a94:	ldr	pc, [ip, #1496]!	; 0x5d8

00010a98 <__isoc99_sscanf@plt>:
   10a98:	add	ip, pc, #0, 12
   10a9c:	add	ip, ip, #20, 20	; 0x14000
   10aa0:	ldr	pc, [ip, #1488]!	; 0x5d0

00010aa4 <fclose@plt>:
   10aa4:	add	ip, pc, #0, 12
   10aa8:	add	ip, ip, #20, 20	; 0x14000
   10aac:	ldr	pc, [ip, #1480]!	; 0x5c8

00010ab0 <sprintf@plt>:
   10ab0:	add	ip, pc, #0, 12
   10ab4:	add	ip, ip, #20, 20	; 0x14000
   10ab8:	ldr	pc, [ip, #1472]!	; 0x5c0

00010abc <utf8proc_errmsg@plt>:
   10abc:	add	ip, pc, #0, 12
   10ac0:	add	ip, ip, #20, 20	; 0x14000
   10ac4:	ldr	pc, [ip, #1464]!	; 0x5b8

00010ac8 <fputs@plt>:
   10ac8:	add	ip, pc, #0, 12
   10acc:	add	ip, ip, #20, 20	; 0x14000
   10ad0:	ldr	pc, [ip, #1456]!	; 0x5b0

00010ad4 <strncmp@plt>:
   10ad4:	add	ip, pc, #0, 12
   10ad8:	add	ip, ip, #20, 20	; 0x14000
   10adc:	ldr	pc, [ip, #1448]!	; 0x5a8

00010ae0 <abort@plt>:
   10ae0:	add	ip, pc, #0, 12
   10ae4:	add	ip, ip, #20, 20	; 0x14000
   10ae8:	ldr	pc, [ip, #1440]!	; 0x5a0

00010aec <getc@plt>:
   10aec:	add	ip, pc, #0, 12
   10af0:	add	ip, ip, #20, 20	; 0x14000
   10af4:	ldr	pc, [ip, #1432]!	; 0x598

Disassembly of section .text:

00010af8 <error@@Base-0x1b0c>:
   10af8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   10afc:	sub	sp, sp, #8
   10b00:	add	ip, sp, #8
   10b04:	mov	r3, #0
   10b08:	str	r0, [ip, #-4]!
   10b0c:	ldr	r2, [pc, #108]	; 10b80 <getc@plt+0x94>
   10b10:	mov	r0, ip
   10b14:	mov	r6, r1
   10b18:	bl	1273c <error@@Base+0x138>
   10b1c:	ldr	r3, [sp, #4]
   10b20:	cmp	r3, #1
   10b24:	ble	10b78 <getc@plt+0x8c>
   10b28:	ldr	r4, [pc, #84]	; 10b84 <getc@plt+0x98>
   10b2c:	ldr	r9, [pc, #84]	; 10b88 <getc@plt+0x9c>
   10b30:	sub	r6, r6, #4
   10b34:	mov	r8, r4
   10b38:	mov	r5, #0
   10b3c:	ldr	r1, [r6, #4]!
   10b40:	mov	r0, r8
   10b44:	ldm	r4, {r7, sl}
   10b48:	bl	10ed4 <getc@plt+0x3e8>
   10b4c:	ldm	r4, {r1, r2}
   10b50:	mov	r0, r9
   10b54:	add	r5, r5, #1
   10b58:	sub	r2, r2, sl
   10b5c:	sub	r1, r1, r7
   10b60:	bl	11c80 <getc@plt+0x1194>
   10b64:	ldr	r3, [sp, #4]
   10b68:	cmp	r3, r5
   10b6c:	bgt	10b3c <getc@plt+0x50>
   10b70:	bl	10cf0 <getc@plt+0x204>
   10b74:	bl	125ac <getc@plt+0x1ac0>
   10b78:	ldr	r0, [pc, #12]	; 10b8c <getc@plt+0xa0>
   10b7c:	bl	12604 <error@@Base>
   10b80:	andeq	r3, r1, ip, lsl #11
   10b84:	andseq	r5, r3, r0, lsr r5
   10b88:			; <UNDEFINED> instruction: 0x009b7cf0
   10b8c:	andeq	r3, r1, r0, asr #11
   10b90:	mov	fp, #0
   10b94:	mov	lr, #0
   10b98:	pop	{r1}		; (ldr r1, [sp], #4)
   10b9c:	mov	r2, sp
   10ba0:	push	{r2}		; (str r2, [sp, #-4]!)
   10ba4:	push	{r0}		; (str r0, [sp, #-4]!)
   10ba8:	ldr	ip, [pc, #16]	; 10bc0 <getc@plt+0xd4>
   10bac:	push	{ip}		; (str ip, [sp, #-4]!)
   10bb0:	ldr	r0, [pc, #12]	; 10bc4 <getc@plt+0xd8>
   10bb4:	ldr	r3, [pc, #12]	; 10bc8 <getc@plt+0xdc>
   10bb8:	bl	10a2c <__libc_start_main@plt>
   10bbc:	bl	10ae0 <abort@plt>
   10bc0:	andeq	r3, r1, r0, ror #9
   10bc4:	strdeq	r0, [r1], -r8
   10bc8:	andeq	r3, r1, r0, lsl #9
   10bcc:	ldr	r3, [pc, #20]	; 10be8 <getc@plt+0xfc>
   10bd0:	ldr	r2, [pc, #20]	; 10bec <getc@plt+0x100>
   10bd4:	add	r3, pc, r3
   10bd8:	ldr	r2, [r3, r2]
   10bdc:	cmp	r2, #0
   10be0:	bxeq	lr
   10be4:	b	10a44 <__gmon_start__@plt>
   10be8:	andeq	r4, r1, r4, lsr #8
   10bec:	muleq	r0, r0, r0
   10bf0:	ldr	r3, [pc, #28]	; 10c14 <getc@plt+0x128>
   10bf4:	ldr	r0, [pc, #28]	; 10c18 <getc@plt+0x12c>
   10bf8:	sub	r3, r3, r0
   10bfc:	cmp	r3, #6
   10c00:	bxls	lr
   10c04:	ldr	r3, [pc, #16]	; 10c1c <getc@plt+0x130>
   10c08:	cmp	r3, #0
   10c0c:	bxeq	lr
   10c10:	bx	r3
   10c14:	andeq	r5, r2, r7, lsr #1
   10c18:	andeq	r5, r2, r4, lsr #1
   10c1c:	andeq	r0, r0, r0
   10c20:	ldr	r1, [pc, #36]	; 10c4c <getc@plt+0x160>
   10c24:	ldr	r0, [pc, #36]	; 10c50 <getc@plt+0x164>
   10c28:	sub	r1, r1, r0
   10c2c:	asr	r1, r1, #2
   10c30:	add	r1, r1, r1, lsr #31
   10c34:	asrs	r1, r1, #1
   10c38:	bxeq	lr
   10c3c:	ldr	r3, [pc, #16]	; 10c54 <getc@plt+0x168>
   10c40:	cmp	r3, #0
   10c44:	bxeq	lr
   10c48:	bx	r3
   10c4c:	andeq	r5, r2, r4, lsr #1
   10c50:	andeq	r5, r2, r4, lsr #1
   10c54:	andeq	r0, r0, r0
   10c58:	push	{r4, lr}
   10c5c:	ldr	r4, [pc, #24]	; 10c7c <getc@plt+0x190>
   10c60:	ldrb	r3, [r4]
   10c64:	cmp	r3, #0
   10c68:	popne	{r4, pc}
   10c6c:	bl	10bf0 <getc@plt+0x104>
   10c70:	mov	r3, #1
   10c74:	strb	r3, [r4]
   10c78:	pop	{r4, pc}
   10c7c:	strheq	r5, [r2], -r8
   10c80:	ldr	r0, [pc, #40]	; 10cb0 <getc@plt+0x1c4>
   10c84:	ldr	r3, [r0]
   10c88:	cmp	r3, #0
   10c8c:	bne	10c94 <getc@plt+0x1a8>
   10c90:	b	10c20 <getc@plt+0x134>
   10c94:	ldr	r3, [pc, #24]	; 10cb4 <getc@plt+0x1c8>
   10c98:	cmp	r3, #0
   10c9c:	beq	10c90 <getc@plt+0x1a4>
   10ca0:	push	{r4, lr}
   10ca4:	blx	r3
   10ca8:	pop	{r4, lr}
   10cac:	b	10c20 <getc@plt+0x134>
   10cb0:	andeq	r4, r2, r4, lsl #28
   10cb4:	andeq	r0, r0, r0
   10cb8:	push	{r4, r5, r6, lr}
   10cbc:	mov	r1, r0
   10cc0:	ldr	r4, [pc, #32]	; 10ce8 <getc@plt+0x1fc>
   10cc4:	mov	r0, r4
   10cc8:	ldm	r4, {r5, r6}
   10ccc:	bl	10ed4 <getc@plt+0x3e8>
   10cd0:	ldm	r4, {r1, r2}
   10cd4:	ldr	r0, [pc, #16]	; 10cec <getc@plt+0x200>
   10cd8:	sub	r2, r2, r6
   10cdc:	sub	r1, r1, r5
   10ce0:	pop	{r4, r5, r6, lr}
   10ce4:	b	11c80 <getc@plt+0x1194>
   10ce8:	andseq	r5, r3, r0, lsr r5
   10cec:			; <UNDEFINED> instruction: 0x009b7cf0
   10cf0:	push	{r4, r5, lr}
   10cf4:	sub	sp, sp, #36	; 0x24
   10cf8:	ldr	r5, [pc, #144]	; 10d90 <getc@plt+0x2a4>
   10cfc:	ldr	r4, [pc, #144]	; 10d94 <getc@plt+0x2a8>
   10d00:	add	r2, sp, #24
   10d04:	mov	r0, r5
   10d08:	add	r1, sp, #16
   10d0c:	bl	11ccc <getc@plt+0x11e0>
   10d10:	ldr	r1, [r5, #12]
   10d14:	ldr	r0, [pc, #124]	; 10d98 <getc@plt+0x2ac>
   10d18:	bl	10984 <printf@plt>
   10d1c:	ldr	r1, [r4]
   10d20:	ldr	r0, [pc, #116]	; 10d9c <getc@plt+0x2b0>
   10d24:	bl	10984 <printf@plt>
   10d28:	ldr	r1, [r4, #4]
   10d2c:	ldr	r0, [pc, #108]	; 10da0 <getc@plt+0x2b4>
   10d30:	bl	10984 <printf@plt>
   10d34:	ldm	r4, {r2, r3}
   10d38:	vldr	d5, [pc, #72]	; 10d88 <getc@plt+0x29c>
   10d3c:	ldr	r0, [pc, #96]	; 10da4 <getc@plt+0x2b8>
   10d40:	sub	r3, r2, r3
   10d44:	vmov	s15, r2
   10d48:	vmov	s14, r3
   10d4c:	vcvt.f64.s32	d6, s15
   10d50:	vcvt.f64.s32	d7, s14
   10d54:	vmul.f64	d7, d7, d5
   10d58:	vdiv.f64	d5, d7, d6
   10d5c:	vmov	r2, r3, d5
   10d60:	bl	10984 <printf@plt>
   10d64:	ldrd	r4, [sp, #24]
   10d68:	ldr	r1, [pc, #56]	; 10da8 <getc@plt+0x2bc>
   10d6c:	ldrd	r2, [sp, #16]
   10d70:	strd	r4, [sp]
   10d74:	str	r1, [sp, #8]
   10d78:	ldr	r0, [pc, #44]	; 10dac <getc@plt+0x2c0>
   10d7c:	bl	10984 <printf@plt>
   10d80:	add	sp, sp, #36	; 0x24
   10d84:	pop	{r4, r5, pc}
   10d88:	andeq	r0, r0, r0
   10d8c:	subsmi	r0, r9, r0
   10d90:			; <UNDEFINED> instruction: 0x009b7cf0
   10d94:	andseq	r5, r3, r0, lsr r5
   10d98:	strdeq	r3, [r1], -r0
   10d9c:	andeq	r3, r1, r8, lsl #10
   10da0:	andeq	r3, r1, ip, lsl r5
   10da4:	andeq	r3, r1, ip, lsr #10
   10da8:	andeq	r3, r1, r8, asr r5
   10dac:	andeq	r3, r1, r0, asr #10
   10db0:	ldr	r2, [r0, #12]
   10db4:	ldr	r3, [r1, #12]
   10db8:	cmp	r2, r3
   10dbc:	beq	10dc8 <getc@plt+0x2dc>
   10dc0:	sub	r0, r3, r2
   10dc4:	bx	lr
   10dc8:	ldr	r2, [r0, #16]
   10dcc:	ldr	r3, [r1, #16]
   10dd0:	cmp	r2, r3
   10dd4:	bne	10dc0 <getc@plt+0x2d4>
   10dd8:	ldr	r1, [r1, #8]
   10ddc:	ldr	r0, [r0, #8]
   10de0:	b	12414 <getc@plt+0x1928>
   10de4:	push	{r4, r5, r6, r7, r8, lr}
   10de8:	mov	r5, r0
   10dec:	mov	r0, r1
   10df0:	mov	r7, r2
   10df4:	mov	r6, r3
   10df8:	mov	r4, r1
   10dfc:	bl	1213c <getc@plt+0x1650>
   10e00:	add	r1, r5, r4, lsl #3
   10e04:	add	r1, r1, #8192	; 0x2000
   10e08:	sxth	r0, r0
   10e0c:	add	r0, r5, r0, lsl #3
   10e10:	ldr	r2, [r0, #68]	; 0x44
   10e14:	ldr	r3, [r0, #72]	; 0x48
   10e18:	add	r2, r2, r7
   10e1c:	add	r3, r3, r6
   10e20:	str	r2, [r0, #68]	; 0x44
   10e24:	str	r3, [r0, #72]	; 0x48
   10e28:	ldr	r2, [r5, #2116]	; 0x844
   10e2c:	ldr	r3, [r5, #2120]	; 0x848
   10e30:	add	r2, r2, r7
   10e34:	add	r3, r3, r6
   10e38:	str	r2, [r5, #2116]	; 0x844
   10e3c:	str	r3, [r5, #2120]	; 0x848
   10e40:	ldr	ip, [r1, #1988]	; 0x7c4
   10e44:	ldr	r0, [r1, #1992]	; 0x7c8
   10e48:	add	r2, ip, r7
   10e4c:	add	r3, r0, r6
   10e50:	str	r2, [r1, #1988]	; 0x7c4
   10e54:	str	r3, [r1, #1992]	; 0x7c8
   10e58:	pop	{r4, r5, r6, r7, r8, pc}
   10e5c:	add	r0, r0, #2112	; 0x840
   10e60:	push	{r4, r5, r6, r7, r8, lr}
   10e64:	add	r4, r0, #12
   10e68:	mov	r0, r4
   10e6c:	mov	r6, r2
   10e70:	mov	r5, r3
   10e74:	mov	r7, r1
   10e78:	bl	11ee0 <getc@plt+0x13f4>
   10e7c:	cmp	r0, #0
   10e80:	beq	10ea0 <getc@plt+0x3b4>
   10e84:	ldr	ip, [r0, #12]
   10e88:	ldr	r1, [r0, #16]
   10e8c:	add	r2, ip, r6
   10e90:	add	r3, r1, r5
   10e94:	str	r2, [r0, #12]
   10e98:	str	r3, [r0, #16]
   10e9c:	pop	{r4, r5, r6, r7, r8, pc}
   10ea0:	mov	r1, #20
   10ea4:	mov	r0, #1
   10ea8:	bl	12640 <error@@Base+0x3c>
   10eac:	mov	r8, r0
   10eb0:	mov	r0, r7
   10eb4:	bl	109cc <strdup@plt>
   10eb8:	str	r6, [r8, #12]
   10ebc:	str	r5, [r8, #16]
   10ec0:	mov	r1, r8
   10ec4:	str	r0, [r8, #8]
   10ec8:	mov	r0, r4
   10ecc:	pop	{r4, r5, r6, r7, r8, lr}
   10ed0:	b	11f64 <getc@plt+0x1478>
   10ed4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10ed8:	mov	r7, r1
   10edc:	sub	sp, sp, #52	; 0x34
   10ee0:	ldr	r1, [pc, #1540]	; 114ec <getc@plt+0xa00>
   10ee4:	mov	r4, r0
   10ee8:	mov	r0, r7
   10eec:	bl	126d4 <error@@Base+0xd0>
   10ef0:	ldr	r6, [pc, #1528]	; 114f0 <getc@plt+0xa04>
   10ef4:	mov	r1, #99	; 0x63
   10ef8:	mov	r2, r0
   10efc:	mov	r5, r0
   10f00:	mov	r0, r6
   10f04:	bl	109b4 <fgets@plt>
   10f08:	cmp	r0, #0
   10f0c:	beq	10f84 <getc@plt+0x498>
   10f10:	mov	r2, #40	; 0x28
   10f14:	ldr	r1, [pc, #1496]	; 114f4 <getc@plt+0xa08>
   10f18:	mov	r0, r6
   10f1c:	bl	10ad4 <strncmp@plt>
   10f20:	cmp	r0, #0
   10f24:	bne	10f84 <getc@plt+0x498>
   10f28:	mov	r2, r5
   10f2c:	mov	r1, #99	; 0x63
   10f30:	mov	r0, r6
   10f34:	bl	109b4 <fgets@plt>
   10f38:	cmp	r0, #0
   10f3c:	beq	10f84 <getc@plt+0x498>
   10f40:	ldr	r1, [pc, #1456]	; 114f8 <getc@plt+0xa0c>
   10f44:	mov	r0, r6
   10f48:	bl	10978 <strcmp@plt>
   10f4c:	cmp	r0, #0
   10f50:	bne	10f84 <getc@plt+0x498>
   10f54:	mov	r2, r5
   10f58:	mov	r1, #99	; 0x63
   10f5c:	mov	r0, r6
   10f60:	bl	109b4 <fgets@plt>
   10f64:	cmp	r0, #0
   10f68:	beq	10f84 <getc@plt+0x498>
   10f6c:	add	r2, sp, #16
   10f70:	ldr	r1, [pc, #1412]	; 114fc <getc@plt+0xa10>
   10f74:	mov	r0, r6
   10f78:	bl	10a98 <__isoc99_sscanf@plt>
   10f7c:	cmp	r0, #1
   10f80:	beq	10f98 <getc@plt+0x4ac>
   10f84:	cmp	r7, #0
   10f88:	ldr	r1, [pc, #1392]	; 11500 <getc@plt+0xa14>
   10f8c:	ldr	r0, [pc, #1392]	; 11504 <getc@plt+0xa18>
   10f90:	movne	r1, r7
   10f94:	bl	1268c <error@@Base+0x88>
   10f98:	ldr	r3, [r4]
   10f9c:	ldr	r1, [sp, #16]
   10fa0:	mov	r2, r5
   10fa4:	add	r3, r3, r1
   10fa8:	str	r3, [r4]
   10fac:	mov	r1, #99	; 0x63
   10fb0:	mov	r0, r6
   10fb4:	bl	109b4 <fgets@plt>
   10fb8:	cmp	r0, #0
   10fbc:	beq	10f84 <getc@plt+0x498>
   10fc0:	add	r2, sp, #20
   10fc4:	ldr	r1, [pc, #1328]	; 114fc <getc@plt+0xa10>
   10fc8:	mov	r0, r6
   10fcc:	bl	10a98 <__isoc99_sscanf@plt>
   10fd0:	cmp	r0, #1
   10fd4:	bne	10f84 <getc@plt+0x498>
   10fd8:	ldr	r3, [r4, #4]
   10fdc:	ldr	r1, [sp, #20]
   10fe0:	mov	r2, r5
   10fe4:	add	r3, r3, r1
   10fe8:	str	r3, [r4, #4]
   10fec:	mov	r1, #99	; 0x63
   10ff0:	mov	r0, r6
   10ff4:	bl	109b4 <fgets@plt>
   10ff8:	cmp	r0, #0
   10ffc:	beq	10f84 <getc@plt+0x498>
   11000:	mov	r2, r5
   11004:	mov	r1, #99	; 0x63
   11008:	mov	r0, r6
   1100c:	bl	109b4 <fgets@plt>
   11010:	cmp	r0, #0
   11014:	beq	10f84 <getc@plt+0x498>
   11018:	mov	r2, r5
   1101c:	mov	r1, #99	; 0x63
   11020:	mov	r0, r6
   11024:	bl	109b4 <fgets@plt>
   11028:	cmp	r0, #0
   1102c:	beq	10f84 <getc@plt+0x498>
   11030:	add	r2, sp, #24
   11034:	ldr	r1, [pc, #1216]	; 114fc <getc@plt+0xa10>
   11038:	mov	r0, r6
   1103c:	bl	10a98 <__isoc99_sscanf@plt>
   11040:	cmp	r0, #1
   11044:	bne	10f84 <getc@plt+0x498>
   11048:	ldr	r3, [r4, #8]
   1104c:	ldr	r1, [sp, #24]
   11050:	mov	r2, r5
   11054:	add	r3, r3, r1
   11058:	str	r3, [r4, #8]
   1105c:	mov	r1, #99	; 0x63
   11060:	mov	r0, r6
   11064:	bl	109b4 <fgets@plt>
   11068:	cmp	r0, #0
   1106c:	beq	10f84 <getc@plt+0x498>
   11070:	add	r2, sp, #24
   11074:	ldr	r1, [pc, #1152]	; 114fc <getc@plt+0xa10>
   11078:	mov	r0, r6
   1107c:	bl	10a98 <__isoc99_sscanf@plt>
   11080:	cmp	r0, #1
   11084:	bne	10f84 <getc@plt+0x498>
   11088:	ldr	r3, [r4, #12]
   1108c:	ldr	r1, [sp, #24]
   11090:	mov	r2, r5
   11094:	add	r3, r3, r1
   11098:	str	r3, [r4, #12]
   1109c:	mov	r1, #99	; 0x63
   110a0:	mov	r0, r6
   110a4:	bl	109b4 <fgets@plt>
   110a8:	cmp	r0, #0
   110ac:	beq	10f84 <getc@plt+0x498>
   110b0:	add	r2, sp, #24
   110b4:	ldr	r1, [pc, #1088]	; 114fc <getc@plt+0xa10>
   110b8:	mov	r0, r6
   110bc:	bl	10a98 <__isoc99_sscanf@plt>
   110c0:	cmp	r0, #1
   110c4:	bne	10f84 <getc@plt+0x498>
   110c8:	ldr	r3, [r4, #16]
   110cc:	ldr	r1, [sp, #24]
   110d0:	mov	r2, r5
   110d4:	add	r3, r3, r1
   110d8:	str	r3, [r4, #16]
   110dc:	mov	r1, #99	; 0x63
   110e0:	mov	r0, r6
   110e4:	bl	109b4 <fgets@plt>
   110e8:	cmp	r0, #0
   110ec:	beq	10f84 <getc@plt+0x498>
   110f0:	mov	r2, r5
   110f4:	mov	r1, #99	; 0x63
   110f8:	mov	r0, r6
   110fc:	bl	109b4 <fgets@plt>
   11100:	cmp	r0, #0
   11104:	beq	10f84 <getc@plt+0x498>
   11108:	mov	r2, r5
   1110c:	mov	r1, #99	; 0x63
   11110:	mov	r0, r6
   11114:	bl	109b4 <fgets@plt>
   11118:	cmp	r0, #0
   1111c:	beq	10f84 <getc@plt+0x498>
   11120:	mov	r2, r5
   11124:	mov	r1, #99	; 0x63
   11128:	mov	r0, r6
   1112c:	bl	109b4 <fgets@plt>
   11130:	cmp	r0, #0
   11134:	beq	10f84 <getc@plt+0x498>
   11138:	mov	r2, r5
   1113c:	mov	r1, #99	; 0x63
   11140:	mov	r0, r6
   11144:	bl	109b4 <fgets@plt>
   11148:	cmp	r0, #0
   1114c:	beq	10f84 <getc@plt+0x498>
   11150:	add	r9, sp, #44	; 0x2c
   11154:	add	r8, sp, #40	; 0x28
   11158:	add	r2, sp, #32
   1115c:	add	r3, sp, #36	; 0x24
   11160:	stm	sp, {r8, r9}
   11164:	ldr	r1, [pc, #924]	; 11508 <getc@plt+0xa1c>
   11168:	mov	r0, r6
   1116c:	bl	10a98 <__isoc99_sscanf@plt>
   11170:	cmp	r0, #4
   11174:	bne	10f84 <getc@plt+0x498>
   11178:	ldr	r0, [r4, #20]
   1117c:	ldr	r2, [sp, #32]
   11180:	ldr	r1, [r4, #24]
   11184:	ldr	r3, [sp, #36]	; 0x24
   11188:	add	r0, r0, r2
   1118c:	ldr	ip, [sp, #40]	; 0x28
   11190:	ldr	r2, [r4, #28]
   11194:	add	r1, r1, r3
   11198:	add	r2, r2, ip
   1119c:	ldr	r3, [r4, #32]
   111a0:	ldr	ip, [sp, #44]	; 0x2c
   111a4:	str	r0, [r4, #20]
   111a8:	add	r3, r3, ip
   111ac:	str	r1, [r4, #24]
   111b0:	str	r2, [r4, #28]
   111b4:	str	r3, [r4, #32]
   111b8:	mov	r2, r5
   111bc:	mov	r1, #99	; 0x63
   111c0:	mov	r0, r6
   111c4:	bl	109b4 <fgets@plt>
   111c8:	cmp	r0, #0
   111cc:	beq	10f84 <getc@plt+0x498>
   111d0:	stm	sp, {r8, r9}
   111d4:	add	r3, sp, #36	; 0x24
   111d8:	add	r2, sp, #32
   111dc:	ldr	r1, [pc, #804]	; 11508 <getc@plt+0xa1c>
   111e0:	mov	r0, r6
   111e4:	bl	10a98 <__isoc99_sscanf@plt>
   111e8:	cmp	r0, #4
   111ec:	bne	10f84 <getc@plt+0x498>
   111f0:	ldr	r0, [r4, #36]	; 0x24
   111f4:	ldr	r2, [sp, #32]
   111f8:	ldr	r1, [r4, #40]	; 0x28
   111fc:	ldr	r3, [sp, #36]	; 0x24
   11200:	add	r0, r0, r2
   11204:	ldr	ip, [sp, #40]	; 0x28
   11208:	ldr	r2, [r4, #44]	; 0x2c
   1120c:	add	r1, r1, r3
   11210:	add	r2, r2, ip
   11214:	ldr	r3, [r4, #48]	; 0x30
   11218:	ldr	ip, [sp, #44]	; 0x2c
   1121c:	str	r0, [r4, #36]	; 0x24
   11220:	add	r3, r3, ip
   11224:	str	r1, [r4, #40]	; 0x28
   11228:	str	r2, [r4, #44]	; 0x2c
   1122c:	str	r3, [r4, #48]	; 0x30
   11230:	mov	r2, r5
   11234:	mov	r1, #99	; 0x63
   11238:	mov	r0, r6
   1123c:	bl	109b4 <fgets@plt>
   11240:	cmp	r0, #0
   11244:	beq	10f84 <getc@plt+0x498>
   11248:	stm	sp, {r8, r9}
   1124c:	add	r3, sp, #36	; 0x24
   11250:	add	r2, sp, #32
   11254:	ldr	r1, [pc, #684]	; 11508 <getc@plt+0xa1c>
   11258:	mov	r0, r6
   1125c:	bl	10a98 <__isoc99_sscanf@plt>
   11260:	cmp	r0, #4
   11264:	bne	10f84 <getc@plt+0x498>
   11268:	ldr	r0, [r4, #52]	; 0x34
   1126c:	ldr	r2, [sp, #32]
   11270:	ldr	r1, [r4, #56]	; 0x38
   11274:	ldr	r3, [sp, #36]	; 0x24
   11278:	add	r0, r0, r2
   1127c:	ldr	ip, [sp, #40]	; 0x28
   11280:	ldr	r2, [r4, #60]	; 0x3c
   11284:	add	r1, r1, r3
   11288:	add	r2, r2, ip
   1128c:	ldr	r3, [r4, #64]	; 0x40
   11290:	ldr	ip, [sp, #44]	; 0x2c
   11294:	str	r0, [r4, #52]	; 0x34
   11298:	add	r3, r3, ip
   1129c:	str	r1, [r4, #56]	; 0x38
   112a0:	str	r2, [r4, #60]	; 0x3c
   112a4:	str	r3, [r4, #64]	; 0x40
   112a8:	mov	r2, r5
   112ac:	mov	r1, #99	; 0x63
   112b0:	mov	r0, r6
   112b4:	bl	109b4 <fgets@plt>
   112b8:	cmp	r0, #0
   112bc:	beq	10f84 <getc@plt+0x498>
   112c0:	mov	r8, r6
   112c4:	mov	r7, #99	; 0x63
   112c8:	b	112d8 <getc@plt+0x7ec>
   112cc:	ldrb	r3, [r6]
   112d0:	cmp	r3, #10
   112d4:	beq	112f0 <getc@plt+0x804>
   112d8:	mov	r2, r5
   112dc:	mov	r1, r7
   112e0:	mov	r0, r8
   112e4:	bl	109b4 <fgets@plt>
   112e8:	cmp	r0, #0
   112ec:	bne	112cc <getc@plt+0x7e0>
   112f0:	ldr	r3, [sp, #20]
   112f4:	cmp	r3, #0
   112f8:	ble	11358 <getc@plt+0x86c>
   112fc:	mov	r2, r5
   11300:	mov	r1, #99	; 0x63
   11304:	ldr	r0, [pc, #484]	; 114f0 <getc@plt+0xa04>
   11308:	bl	109b4 <fgets@plt>
   1130c:	cmp	r0, #0
   11310:	beq	11358 <getc@plt+0x86c>
   11314:	ldr	r7, [pc, #468]	; 114f0 <getc@plt+0xa04>
   11318:	add	sl, r4, #2112	; 0x840
   1131c:	add	fp, r7, #20
   11320:	add	sl, sl, #12
   11324:	mov	r2, r5
   11328:	mov	r1, #99	; 0x63
   1132c:	mov	r0, r7
   11330:	bl	109b4 <fgets@plt>
   11334:	cmp	r0, #0
   11338:	beq	11358 <getc@plt+0x86c>
   1133c:	add	r3, sp, #28
   11340:	add	r2, sp, #24
   11344:	ldr	r1, [pc, #448]	; 1150c <getc@plt+0xa20>
   11348:	mov	r0, r7
   1134c:	bl	10a98 <__isoc99_sscanf@plt>
   11350:	cmp	r0, #2
   11354:	beq	1147c <getc@plt+0x990>
   11358:	ldr	r3, [sp, #16]
   1135c:	cmp	r3, #0
   11360:	ble	113b8 <getc@plt+0x8cc>
   11364:	mov	r2, r5
   11368:	mov	r1, #99	; 0x63
   1136c:	ldr	r0, [pc, #380]	; 114f0 <getc@plt+0xa04>
   11370:	bl	109b4 <fgets@plt>
   11374:	cmp	r0, #0
   11378:	movne	r8, #99	; 0x63
   1137c:	ldrne	r7, [pc, #364]	; 114f0 <getc@plt+0xa04>
   11380:	beq	113b8 <getc@plt+0x8cc>
   11384:	mov	r2, r5
   11388:	mov	r1, r8
   1138c:	mov	r0, r7
   11390:	bl	109b4 <fgets@plt>
   11394:	cmp	r0, #0
   11398:	beq	113b8 <getc@plt+0x8cc>
   1139c:	add	r3, sp, #28
   113a0:	add	r2, sp, #24
   113a4:	ldr	r1, [pc, #352]	; 1150c <getc@plt+0xa20>
   113a8:	mov	r0, r7
   113ac:	bl	10a98 <__isoc99_sscanf@plt>
   113b0:	cmp	r0, #2
   113b4:	beq	113c8 <getc@plt+0x8dc>
   113b8:	mov	r0, r5
   113bc:	bl	124a8 <getc@plt+0x19bc>
   113c0:	add	sp, sp, #52	; 0x34
   113c4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   113c8:	ldrb	r3, [r6, #31]
   113cc:	cmp	r3, #125	; 0x7d
   113d0:	beq	1146c <getc@plt+0x980>
   113d4:	cmp	r3, #92	; 0x5c
   113d8:	bne	11454 <getc@plt+0x968>
   113dc:	mov	r3, #10
   113e0:	mov	r9, r3
   113e4:	str	r3, [sp, #32]
   113e8:	mov	r0, r9
   113ec:	ldr	fp, [sp, #24]
   113f0:	ldr	sl, [sp, #28]
   113f4:	bl	1213c <getc@plt+0x1650>
   113f8:	add	r3, r4, r9, lsl #3
   113fc:	add	r3, r3, #8192	; 0x2000
   11400:	sxth	r0, r0
   11404:	add	r0, r4, r0, lsl #3
   11408:	ldr	lr, [r0, #68]	; 0x44
   1140c:	ldr	ip, [r0, #72]	; 0x48
   11410:	add	lr, lr, fp
   11414:	add	ip, ip, sl
   11418:	str	lr, [r0, #68]	; 0x44
   1141c:	str	ip, [r0, #72]	; 0x48
   11420:	ldr	ip, [r4, #2116]	; 0x844
   11424:	ldr	r0, [r4, #2120]	; 0x848
   11428:	add	ip, ip, fp
   1142c:	add	r0, r0, sl
   11430:	str	ip, [r4, #2116]	; 0x844
   11434:	str	r0, [r4, #2120]	; 0x848
   11438:	ldr	ip, [r3, #1988]	; 0x7c4
   1143c:	ldr	r0, [r3, #1992]	; 0x7c8
   11440:	add	r1, ip, fp
   11444:	add	r2, r0, sl
   11448:	str	r1, [r3, #1988]	; 0x7c4
   1144c:	str	r2, [r3, #1992]	; 0x7c8
   11450:	b	11384 <getc@plt+0x898>
   11454:	add	r2, sp, #32
   11458:	ldr	r1, [pc, #176]	; 11510 <getc@plt+0xa24>
   1145c:	ldr	r0, [pc, #176]	; 11514 <getc@plt+0xa28>
   11460:	bl	10a98 <__isoc99_sscanf@plt>
   11464:	ldr	r9, [sp, #32]
   11468:	b	113e8 <getc@plt+0x8fc>
   1146c:	ldrb	r3, [r6, #30]
   11470:	str	r3, [sp, #32]
   11474:	mov	r9, r3
   11478:	b	113e8 <getc@plt+0x8fc>
   1147c:	mov	r1, fp
   11480:	mov	r0, sl
   11484:	ldr	r8, [sp, #24]
   11488:	ldr	r9, [sp, #28]
   1148c:	bl	11ee0 <getc@plt+0x13f4>
   11490:	cmp	r0, #0
   11494:	beq	114b4 <getc@plt+0x9c8>
   11498:	ldr	r2, [r0, #12]
   1149c:	ldr	r3, [r0, #16]
   114a0:	add	r8, r2, r8
   114a4:	add	r9, r3, r9
   114a8:	str	r8, [r0, #12]
   114ac:	str	r9, [r0, #16]
   114b0:	b	11324 <getc@plt+0x838>
   114b4:	mov	r1, #20
   114b8:	mov	r0, #1
   114bc:	bl	12640 <error@@Base+0x3c>
   114c0:	str	r0, [sp, #12]
   114c4:	mov	r0, fp
   114c8:	bl	109cc <strdup@plt>
   114cc:	ldr	r3, [sp, #12]
   114d0:	mov	r1, r3
   114d4:	str	r8, [r3, #12]
   114d8:	str	r9, [r3, #16]
   114dc:	str	r0, [r3, #8]
   114e0:	mov	r0, sl
   114e4:	bl	11f64 <getc@plt+0x1478>
   114e8:	b	11324 <getc@plt+0x838>
   114ec:	andeq	r3, r1, r0, ror #11
   114f0:	strheq	r5, [r2], -ip
   114f4:	andeq	r3, r1, r4, ror #11
   114f8:	andeq	r3, r1, r0, lsl r6
   114fc:	andeq	r3, r1, r8, asr #12
   11500:	ldrdeq	r3, [r1], -r8
   11504:	andeq	r3, r1, r0, asr r6
   11508:	andeq	r3, r1, ip, lsr r6
   1150c:	andeq	r3, r1, r4, asr #12
   11510:	andeq	r3, r1, ip, asr #12
   11514:	ldrdeq	r5, [r2], -fp
   11518:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1151c:	vpush	{d8}
   11520:	mov	r3, r1
   11524:	mov	r7, r0
   11528:	ldr	r1, [pc, #1056]	; 11950 <getc@plt+0xe64>
   1152c:	sub	sp, sp, #36	; 0x24
   11530:	mov	r0, r3
   11534:	bl	126d4 <error@@Base+0xd0>
   11538:	ldr	r3, [pc, #1044]	; 11954 <getc@plt+0xe68>
   1153c:	ldr	r2, [pc, #1044]	; 11958 <getc@plt+0xe6c>
   11540:	ldr	r1, [pc, #1044]	; 1195c <getc@plt+0xe70>
   11544:	mov	r6, r0
   11548:	bl	10a80 <fprintf@plt>
   1154c:	ldr	r2, [r7]
   11550:	ldr	r3, [pc, #1032]	; 11960 <getc@plt+0xe74>
   11554:	ldr	r1, [pc, #1032]	; 11964 <getc@plt+0xe78>
   11558:	mov	r0, r6
   1155c:	bl	10a80 <fprintf@plt>
   11560:	ldr	r2, [r7, #4]
   11564:	mov	r0, r6
   11568:	ldr	r3, [pc, #1016]	; 11968 <getc@plt+0xe7c>
   1156c:	ldr	r1, [pc, #1008]	; 11964 <getc@plt+0xe78>
   11570:	bl	10a80 <fprintf@plt>
   11574:	ldr	r2, [r7]
   11578:	cmp	r2, #0
   1157c:	beq	11ac4 <getc@plt+0xfd8>
   11580:	ldr	r3, [r7, #4]
   11584:	vmov	s15, r2
   11588:	sub	r3, r2, r3
   1158c:	vldr	d5, [pc, #948]	; 11948 <getc@plt+0xe5c>
   11590:	vmov	s14, r3
   11594:	vcvt.f64.s32	d6, s15
   11598:	ldr	r1, [pc, #972]	; 1196c <getc@plt+0xe80>
   1159c:	mov	r0, r6
   115a0:	vcvt.f64.s32	d7, s14
   115a4:	vmul.f64	d7, d7, d5
   115a8:	vdiv.f64	d5, d7, d6
   115ac:	vmov	r2, r3, d5
   115b0:	bl	10a80 <fprintf@plt>
   115b4:	ldr	r1, [pc, #948]	; 11970 <getc@plt+0xe84>
   115b8:	mov	r0, r6
   115bc:	bl	10a80 <fprintf@plt>
   115c0:	ldr	r3, [pc, #940]	; 11974 <getc@plt+0xe88>
   115c4:	ldr	r2, [r7, #8]
   115c8:	ldr	r1, [pc, #916]	; 11964 <getc@plt+0xe78>
   115cc:	mov	r0, r6
   115d0:	bl	10a80 <fprintf@plt>
   115d4:	ldr	r3, [pc, #924]	; 11978 <getc@plt+0xe8c>
   115d8:	ldr	r2, [r7, #12]
   115dc:	ldr	r1, [pc, #896]	; 11964 <getc@plt+0xe78>
   115e0:	mov	r0, r6
   115e4:	bl	10a80 <fprintf@plt>
   115e8:	ldr	r2, [r7, #16]
   115ec:	ldr	r3, [pc, #904]	; 1197c <getc@plt+0xe90>
   115f0:	ldr	r1, [pc, #876]	; 11964 <getc@plt+0xe78>
   115f4:	mov	r0, r6
   115f8:	bl	10a80 <fprintf@plt>
   115fc:	ldr	r2, [r7]
   11600:	cmp	r2, #0
   11604:	beq	11aac <getc@plt+0xfc0>
   11608:	ldr	r1, [r7, #12]
   1160c:	ldr	r3, [r7, #8]
   11610:	vmov	s15, r2
   11614:	add	r3, r3, r1
   11618:	vldr	d5, [pc, #808]	; 11948 <getc@plt+0xe5c>
   1161c:	vmov	s14, r3
   11620:	vcvt.f64.s32	d6, s15
   11624:	ldr	r1, [pc, #832]	; 1196c <getc@plt+0xe80>
   11628:	mov	r0, r6
   1162c:	vcvt.f64.s32	d7, s14
   11630:	vmul.f64	d7, d7, d5
   11634:	vdiv.f64	d5, d7, d6
   11638:	vmov	r2, r3, d5
   1163c:	bl	10a80 <fprintf@plt>
   11640:	ldr	r1, [pc, #824]	; 11980 <getc@plt+0xe94>
   11644:	mov	r0, r6
   11648:	bl	10a80 <fprintf@plt>
   1164c:	ldr	r2, [r7]
   11650:	cmp	r2, #0
   11654:	beq	11a94 <getc@plt+0xfa8>
   11658:	ldr	r3, [r7, #48]	; 0x30
   1165c:	vmov	s15, r2
   11660:	sub	r3, r2, r3
   11664:	vldr	d5, [pc, #732]	; 11948 <getc@plt+0xe5c>
   11668:	vmov	s14, r3
   1166c:	vcvt.f64.s32	d6, s15
   11670:	ldr	r1, [pc, #756]	; 1196c <getc@plt+0xe80>
   11674:	mov	r0, r6
   11678:	vcvt.f64.s32	d7, s14
   1167c:	vmul.f64	d7, d7, d5
   11680:	vdiv.f64	d5, d7, d6
   11684:	vmov	r2, r3, d5
   11688:	bl	10a80 <fprintf@plt>
   1168c:	ldr	r1, [pc, #752]	; 11984 <getc@plt+0xe98>
   11690:	mov	r0, r6
   11694:	bl	10a80 <fprintf@plt>
   11698:	mov	r3, r6
   1169c:	mov	r2, #37	; 0x25
   116a0:	mov	r1, #1
   116a4:	ldr	r0, [pc, #732]	; 11988 <getc@plt+0xe9c>
   116a8:	bl	10a08 <fwrite@plt>
   116ac:	ldr	r0, [r7, #32]
   116b0:	ldr	ip, [pc, #724]	; 1198c <getc@plt+0xea0>
   116b4:	ldr	r1, [r7, #28]
   116b8:	ldr	r3, [r7, #24]
   116bc:	ldr	r2, [r7, #20]
   116c0:	stmib	sp, {r0, ip}
   116c4:	str	r1, [sp]
   116c8:	mov	r0, r6
   116cc:	ldr	r1, [pc, #700]	; 11990 <getc@plt+0xea4>
   116d0:	bl	10a80 <fprintf@plt>
   116d4:	ldr	r0, [r7, #48]	; 0x30
   116d8:	ldr	ip, [pc, #692]	; 11994 <getc@plt+0xea8>
   116dc:	ldr	r1, [r7, #44]	; 0x2c
   116e0:	ldr	r3, [r7, #40]	; 0x28
   116e4:	ldr	r2, [r7, #36]	; 0x24
   116e8:	stmib	sp, {r0, ip}
   116ec:	str	r1, [sp]
   116f0:	mov	r0, r6
   116f4:	ldr	r1, [pc, #660]	; 11990 <getc@plt+0xea4>
   116f8:	bl	10a80 <fprintf@plt>
   116fc:	ldr	r0, [r7, #64]	; 0x40
   11700:	ldr	ip, [pc, #656]	; 11998 <getc@plt+0xeac>
   11704:	ldr	r1, [r7, #60]	; 0x3c
   11708:	ldr	r3, [r7, #56]	; 0x38
   1170c:	ldr	r2, [r7, #52]	; 0x34
   11710:	stmib	sp, {r0, ip}
   11714:	str	r1, [sp]
   11718:	mov	r0, r6
   1171c:	ldr	r1, [pc, #620]	; 11990 <getc@plt+0xea4>
   11720:	bl	10a80 <fprintf@plt>
   11724:	ldr	r1, [pc, #624]	; 1199c <getc@plt+0xeb0>
   11728:	mov	r0, r6
   1172c:	bl	10a80 <fprintf@plt>
   11730:	vldr	d8, [pc, #528]	; 11948 <getc@plt+0xe5c>
   11734:	ldr	fp, [pc, #612]	; 119a0 <getc@plt+0xeb4>
   11738:	ldr	sl, [pc, #612]	; 119a4 <getc@plt+0xeb8>
   1173c:	ldr	r9, [pc, #552]	; 1196c <getc@plt+0xe80>
   11740:	mov	r4, r7
   11744:	mov	r5, #0
   11748:	b	1179c <getc@plt+0xcb0>
   1174c:	ldr	r2, [r4, #72]	; 0x48
   11750:	vmov	s15, r3
   11754:	sub	r3, r3, r2
   11758:	vmov	s14, r3
   1175c:	vcvt.f64.s32	d6, s15
   11760:	vcvt.f64.s32	d7, s14
   11764:	vmul.f64	d7, d7, d8
   11768:	vdiv.f64	d5, d7, d6
   1176c:	vmov	r2, r3, d5
   11770:	bl	10a80 <fprintf@plt>
   11774:	cmp	r8, #0
   11778:	mov	r2, r8
   1177c:	mov	r1, sl
   11780:	mov	r0, r6
   11784:	beq	117f4 <getc@plt+0xd08>
   11788:	bl	10a80 <fprintf@plt>
   1178c:	add	r5, r5, #1
   11790:	cmp	r5, #256	; 0x100
   11794:	add	r4, r4, #8
   11798:	beq	11818 <getc@plt+0xd2c>
   1179c:	ldr	r3, [r4, #68]	; 0x44
   117a0:	mov	r0, r5
   117a4:	cmp	r3, #0
   117a8:	ble	1178c <getc@plt+0xca0>
   117ac:	bl	12248 <getc@plt+0x175c>
   117b0:	ldr	r3, [r4, #72]	; 0x48
   117b4:	mov	r1, fp
   117b8:	ldr	r2, [r4, #68]	; 0x44
   117bc:	mov	r8, r0
   117c0:	mov	r0, r6
   117c4:	bl	10a80 <fprintf@plt>
   117c8:	ldr	r3, [r4, #68]	; 0x44
   117cc:	mov	r1, r9
   117d0:	cmp	r3, #0
   117d4:	mov	r0, r6
   117d8:	bne	1174c <getc@plt+0xc60>
   117dc:	mov	r3, r6
   117e0:	mov	r2, #8
   117e4:	mov	r1, #1
   117e8:	ldr	r0, [pc, #460]	; 119bc <getc@plt+0xed0>
   117ec:	bl	10a08 <fwrite@plt>
   117f0:	b	11774 <getc@plt+0xc88>
   117f4:	add	r2, sp, #20
   117f8:	mov	r1, r8
   117fc:	mov	r0, r8
   11800:	mov	r3, #1
   11804:	bl	12e40 <error@@Base+0x83c>
   11808:	add	r2, sp, #20
   1180c:	ldr	r1, [pc, #404]	; 119a8 <getc@plt+0xebc>
   11810:	mov	r0, r6
   11814:	b	11788 <getc@plt+0xc9c>
   11818:	ldr	r2, [r7, #2116]	; 0x844
   1181c:	ldr	r3, [r7, #2120]	; 0x848
   11820:	ldr	r1, [pc, #376]	; 119a0 <getc@plt+0xeb4>
   11824:	mov	r0, r6
   11828:	bl	10a80 <fprintf@plt>
   1182c:	ldr	r2, [r7, #2116]	; 0x844
   11830:	cmp	r2, #0
   11834:	beq	11a7c <getc@plt+0xf90>
   11838:	ldr	r3, [r7, #2120]	; 0x848
   1183c:	vmov	s15, r2
   11840:	sub	r3, r2, r3
   11844:	vldr	d5, [pc, #252]	; 11948 <getc@plt+0xe5c>
   11848:	vmov	s14, r3
   1184c:	vcvt.f64.s32	d6, s15
   11850:	ldr	r1, [pc, #276]	; 1196c <getc@plt+0xe80>
   11854:	mov	r0, r6
   11858:	vcvt.f64.s32	d7, s14
   1185c:	vmul.f64	d7, d7, d5
   11860:	vdiv.f64	d5, d7, d6
   11864:	vmov	r2, r3, d5
   11868:	bl	10a80 <fprintf@plt>
   1186c:	ldr	r2, [pc, #292]	; 11998 <getc@plt+0xeac>
   11870:	ldr	r1, [pc, #300]	; 119a4 <getc@plt+0xeb8>
   11874:	mov	r0, r6
   11878:	bl	10a80 <fprintf@plt>
   1187c:	ldr	r3, [r7, #4]
   11880:	cmp	r3, #0
   11884:	ble	11904 <getc@plt+0xe18>
   11888:	add	r5, r7, #8192	; 0x2000
   1188c:	add	r0, r7, #2112	; 0x840
   11890:	add	r0, r0, #12
   11894:	bl	1206c <getc@plt+0x1580>
   11898:	ldr	r1, [r5, #1980]	; 0x7bc
   1189c:	ldr	r0, [r5, #1984]	; 0x7c0
   118a0:	ldr	r2, [pc, #260]	; 119ac <getc@plt+0xec0>
   118a4:	bl	11c54 <getc@plt+0x1168>
   118a8:	mov	r3, r6
   118ac:	mov	r2, #39	; 0x27
   118b0:	mov	r1, #1
   118b4:	ldr	r0, [pc, #244]	; 119b0 <getc@plt+0xec4>
   118b8:	bl	10a08 <fwrite@plt>
   118bc:	ldr	r3, [r5, #1984]	; 0x7c0
   118c0:	cmp	r3, #0
   118c4:	ble	11904 <getc@plt+0xe18>
   118c8:	ldr	r8, [pc, #228]	; 119b4 <getc@plt+0xec8>
   118cc:	mov	r4, #0
   118d0:	ldr	r3, [r5, #1980]	; 0x7bc
   118d4:	mov	r1, r8
   118d8:	mov	r0, r6
   118dc:	ldr	ip, [r3, r4, lsl #2]
   118e0:	add	r4, r4, #1
   118e4:	ldr	r3, [ip, #16]
   118e8:	ldr	r2, [ip, #12]
   118ec:	ldr	ip, [ip, #8]
   118f0:	str	ip, [sp]
   118f4:	bl	10a80 <fprintf@plt>
   118f8:	ldr	r3, [r5, #1984]	; 0x7c0
   118fc:	cmp	r3, r4
   11900:	bgt	118d0 <getc@plt+0xde4>
   11904:	ldr	r3, [r7]
   11908:	cmp	r3, #0
   1190c:	ble	11a68 <getc@plt+0xf7c>
   11910:	add	r4, r7, #10176	; 0x27c0
   11914:	ldr	r1, [pc, #128]	; 1199c <getc@plt+0xeb0>
   11918:	mov	r0, r6
   1191c:	add	r8, r4, #4
   11920:	vldr	d8, [pc, #32]	; 11948 <getc@plt+0xe5c>
   11924:	bl	10a80 <fprintf@plt>
   11928:	ldr	sl, [pc, #112]	; 119a0 <getc@plt+0xeb4>
   1192c:	ldr	r7, [pc, #116]	; 119a8 <getc@plt+0xebc>
   11930:	ldr	fp, [pc, #52]	; 1196c <getc@plt+0xe80>
   11934:	ldr	r9, [pc, #124]	; 119b8 <getc@plt+0xecc>
   11938:	add	r4, r4, #8
   1193c:	mov	r5, #0
   11940:	b	11a20 <getc@plt+0xf34>
   11944:	nop			; (mov r0, r0)
   11948:	andeq	r0, r0, r0
   1194c:	subsmi	r0, r9, r0
   11950:	andeq	r3, r1, r4, ror #12
   11954:	andeq	r3, r1, r0, lsl r6
   11958:	andeq	r3, r1, r4, ror #11
   1195c:	andeq	r3, r1, r8, ror #12
   11960:	andeq	r3, r1, r0, ror r6
   11964:	andeq	r3, r1, ip, ror r6
   11968:	andeq	r3, r1, r8, lsl #13
   1196c:	muleq	r1, ip, r6
   11970:	andeq	r3, r1, r4, lsr #13
   11974:			; <UNDEFINED> instruction: 0x000136b4
   11978:	andeq	r3, r1, r8, asr #13
   1197c:	ldrdeq	r3, [r1], -r8
   11980:	andeq	r3, r1, r4, ror #13
   11984:	strdeq	r3, [r1], -ip
   11988:	andeq	r3, r1, ip, lsl r7
   1198c:	andeq	r3, r1, r0, ror #14
   11990:	andeq	r3, r1, r4, asr #14
   11994:	andeq	r3, r1, r8, ror #14
   11998:	andeq	r3, r1, r4, ror r7
   1199c:	andeq	r3, r1, ip, ror r7
   119a0:	muleq	r1, ip, r7
   119a4:	andeq	r3, r1, r0, lsl #13
   119a8:	andeq	r3, r1, r8, lsr #15
   119ac:			; <UNDEFINED> instruction: 0x00010db0
   119b0:			; <UNDEFINED> instruction: 0x000137b4
   119b4:	ldrdeq	r3, [r1], -ip
   119b8:			; <UNDEFINED> instruction: 0x0010ffff
   119bc:	muleq	r1, r0, r6
   119c0:	ldr	r2, [r8, #4]
   119c4:	vmov	s15, r3
   119c8:	sub	r3, r3, r2
   119cc:	vmov	s14, r3
   119d0:	vcvt.f64.s32	d6, s15
   119d4:	vcvt.f64.s32	d7, s14
   119d8:	vmul.f64	d7, d7, d8
   119dc:	vdiv.f64	d5, d7, d6
   119e0:	vmov	r2, r3, d5
   119e4:	bl	10a80 <fprintf@plt>
   119e8:	add	r2, sp, #20
   119ec:	mov	r1, r5
   119f0:	mov	r0, #0
   119f4:	mov	r3, #1
   119f8:	bl	12e40 <error@@Base+0x83c>
   119fc:	add	r2, sp, #20
   11a00:	mov	r1, r7
   11a04:	mov	r0, r6
   11a08:	bl	10a80 <fprintf@plt>
   11a0c:	add	r5, r5, #1
   11a10:	cmp	r5, r9
   11a14:	add	r8, r8, #8
   11a18:	add	r4, r4, #8
   11a1c:	beq	11a68 <getc@plt+0xf7c>
   11a20:	ldr	r3, [r4, #-4]
   11a24:	mov	r1, sl
   11a28:	subs	r2, r3, #0
   11a2c:	mov	r0, r6
   11a30:	ble	11a0c <getc@plt+0xf20>
   11a34:	ldr	r3, [r8, #4]
   11a38:	bl	10a80 <fprintf@plt>
   11a3c:	ldr	r3, [r4, #-4]
   11a40:	mov	r1, fp
   11a44:	cmp	r3, #0
   11a48:	mov	r0, r6
   11a4c:	bne	119c0 <getc@plt+0xed4>
   11a50:	mov	r3, r6
   11a54:	mov	r2, #8
   11a58:	mov	r1, #1
   11a5c:	ldr	r0, [pc, #-168]	; 119bc <getc@plt+0xed0>
   11a60:	bl	10a08 <fwrite@plt>
   11a64:	b	119e8 <getc@plt+0xefc>
   11a68:	mov	r0, r6
   11a6c:	bl	124a8 <getc@plt+0x19bc>
   11a70:	add	sp, sp, #36	; 0x24
   11a74:	vpop	{d8}
   11a78:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11a7c:	mov	r3, r6
   11a80:	mov	r2, #8
   11a84:	mov	r1, #1
   11a88:	ldr	r0, [pc, #-212]	; 119bc <getc@plt+0xed0>
   11a8c:	bl	10a08 <fwrite@plt>
   11a90:	b	1186c <getc@plt+0xd80>
   11a94:	mov	r3, r6
   11a98:	mov	r2, #8
   11a9c:	mov	r1, #1
   11aa0:	ldr	r0, [pc, #-236]	; 119bc <getc@plt+0xed0>
   11aa4:	bl	10a08 <fwrite@plt>
   11aa8:	b	1168c <getc@plt+0xba0>
   11aac:	mov	r3, r6
   11ab0:	mov	r2, #8
   11ab4:	mov	r1, #1
   11ab8:	ldr	r0, [pc, #-260]	; 119bc <getc@plt+0xed0>
   11abc:	bl	10a08 <fwrite@plt>
   11ac0:	b	11640 <getc@plt+0xb54>
   11ac4:	mov	r3, r6
   11ac8:	mov	r2, #8
   11acc:	mov	r1, #1
   11ad0:	ldr	r0, [pc, #-284]	; 119bc <getc@plt+0xed0>
   11ad4:	bl	10a08 <fwrite@plt>
   11ad8:	b	115b4 <getc@plt+0xac8>
   11adc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11ae0:	sub	sp, sp, #12
   11ae4:	lsl	r3, r1, #2
   11ae8:	str	r1, [sp]
   11aec:	str	r3, [sp, #4]
   11af0:	ldr	r5, [pc, #344]	; 11c50 <getc@plt+0x1164>
   11af4:	ldr	r3, [sp]
   11af8:	mov	r9, r0
   11afc:	ldr	r1, [r5]
   11b00:	cmp	r9, r3
   11b04:	movlt	r4, r3
   11b08:	ldr	r7, [r1, r9, lsl #2]
   11b0c:	movlt	r8, r9
   11b10:	bge	11c3c <getc@plt+0x1150>
   11b14:	lsl	r6, r4, #2
   11b18:	b	11b20 <getc@plt+0x1034>
   11b1c:	ldr	r1, [r5]
   11b20:	ldr	r1, [r1, r6]
   11b24:	ldr	r3, [r5, #4]
   11b28:	mov	r0, r7
   11b2c:	blx	r3
   11b30:	cmp	r0, #0
   11b34:	bge	11b84 <getc@plt+0x1098>
   11b38:	sub	r4, r4, #1
   11b3c:	cmp	r4, r8
   11b40:	sub	r6, r6, #4
   11b44:	bgt	11b1c <getc@plt+0x1030>
   11b48:	bne	11b80 <getc@plt+0x1094>
   11b4c:	ldr	r1, [r5]
   11b50:	mov	fp, r4
   11b54:	add	r0, r1, fp, lsl #2
   11b58:	sub	r1, fp, #1
   11b5c:	cmp	r9, r1
   11b60:	str	r7, [r0]
   11b64:	blt	11c20 <getc@plt+0x1134>
   11b68:	ldr	r3, [sp]
   11b6c:	add	r9, r4, #1
   11b70:	cmp	r9, r3
   11b74:	blt	11afc <getc@plt+0x1010>
   11b78:	add	sp, sp, #12
   11b7c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11b80:	lsl	r6, r4, #2
   11b84:	ldr	r1, [r5]
   11b88:	add	fp, r8, #1
   11b8c:	cmp	fp, r4
   11b90:	ldr	r2, [r1, r6]
   11b94:	add	r0, r1, r6
   11b98:	str	r2, [r1, r8, lsl #2]
   11b9c:	lsl	r8, r8, #2
   11ba0:	bge	11c2c <getc@plt+0x1140>
   11ba4:	add	sl, r8, #4
   11ba8:	b	11bc0 <getc@plt+0x10d4>
   11bac:	add	fp, fp, #1
   11bb0:	cmp	fp, r4
   11bb4:	add	sl, sl, #4
   11bb8:	beq	11c04 <getc@plt+0x1118>
   11bbc:	ldr	r1, [r5]
   11bc0:	ldr	r1, [r1, sl]
   11bc4:	ldr	r8, [r5, #4]
   11bc8:	mov	r0, r7
   11bcc:	blx	r8
   11bd0:	cmp	r0, #0
   11bd4:	bgt	11bac <getc@plt+0x10c0>
   11bd8:	ldr	r1, [r5]
   11bdc:	mov	r8, fp
   11be0:	add	r0, r1, r6
   11be4:	sub	r4, r4, #1
   11be8:	ldr	r2, [r1, sl]
   11bec:	cmp	r4, fp
   11bf0:	str	r2, [r0]
   11bf4:	bgt	11b14 <getc@plt+0x1028>
   11bf8:	mov	fp, r4
   11bfc:	mov	r4, r8
   11c00:	b	11b54 <getc@plt+0x1068>
   11c04:	ldr	r0, [r5]
   11c08:	add	r0, r0, r6
   11c0c:	sub	r1, fp, #1
   11c10:	cmp	r9, r1
   11c14:	mov	r4, fp
   11c18:	str	r7, [r0]
   11c1c:	bge	11b68 <getc@plt+0x107c>
   11c20:	mov	r0, r9
   11c24:	bl	11adc <getc@plt+0xff0>
   11c28:	b	11b68 <getc@plt+0x107c>
   11c2c:	beq	11c0c <getc@plt+0x1120>
   11c30:	lsl	sl, fp, #2
   11c34:	mov	r8, fp
   11c38:	b	11be4 <getc@plt+0x10f8>
   11c3c:	mov	fp, r3
   11c40:	ldr	r3, [sp, #4]
   11c44:	mov	r4, r9
   11c48:	add	r0, r1, r3
   11c4c:	b	11b58 <getc@plt+0x106c>
   11c50:	andeq	r5, r2, r0, lsr #2
   11c54:	cmp	r0, #1
   11c58:	mov	ip, r1
   11c5c:	bxle	lr
   11c60:	ldr	r3, [pc, #16]	; 11c78 <getc@plt+0x118c>
   11c64:	sub	r1, r0, #1
   11c68:	mov	r0, #0
   11c6c:	str	ip, [r3]
   11c70:	str	r2, [r3, #4]
   11c74:	b	11adc <getc@plt+0xff0>
   11c78:	andeq	r5, r2, r0, lsr #2
   11c7c:	andeq	r0, r0, r0
   11c80:	push	{r4, r5, r6, lr}
   11c84:	mov	r4, r0
   11c88:	mov	r6, r1
   11c8c:	mov	r0, #1
   11c90:	mov	r1, #32
   11c94:	mov	r5, r2
   11c98:	bl	12640 <error@@Base+0x3c>
   11c9c:	str	r5, [r0, #12]
   11ca0:	str	r6, [r0, #8]
   11ca4:	ldr	r3, [r4, #28]
   11ca8:	mov	r1, r0
   11cac:	ldr	r0, [r4, #24]
   11cb0:	add	r2, r3, r5
   11cb4:	add	r0, r0, r6
   11cb8:	str	r0, [r4, #24]
   11cbc:	str	r2, [r4, #28]
   11cc0:	mov	r0, r4
   11cc4:	pop	{r4, r5, r6, lr}
   11cc8:	b	1326c <error@@Base+0xc68>
   11ccc:	push	{r4, r5, r6, lr}
   11cd0:	sub	sp, sp, #24
   11cd4:	ldr	r4, [r0]
   11cd8:	cmp	r4, #0
   11cdc:	beq	11e80 <getc@plt+0x1394>
   11ce0:	mov	r3, r4
   11ce4:	mov	ip, #0
   11ce8:	ldmib	r3, {r3, lr}
   11cec:	cmp	lr, #0
   11cf0:	addgt	ip, ip, #1
   11cf4:	cmp	r3, #0
   11cf8:	bne	11ce8 <getc@plt+0x11fc>
   11cfc:	cmp	ip, #1
   11d00:	ble	11e80 <getc@plt+0x1394>
   11d04:	ldr	r5, [r0, #24]
   11d08:	ldr	r6, [r0, #28]
   11d0c:	vldr	d6, [pc, #372]	; 11e88 <getc@plt+0x139c>
   11d10:	sub	r3, r5, r6
   11d14:	vmov	s15, r5
   11d18:	vmov	s14, r3
   11d1c:	vldr	s7, [r0, #12]
   11d20:	vmov.f64	d0, d6
   11d24:	vcvt.f64.s32	d5, s15
   11d28:	vcvt.f64.s32	d7, s14
   11d2c:	vmov	r3, s7
   11d30:	vcvt.f64.s32	d2, s7
   11d34:	vldr	d4, [pc, #340]	; 11e90 <getc@plt+0x13a4>
   11d38:	mov	ip, r4
   11d3c:	sub	r3, r3, #1
   11d40:	vmov	s6, r3
   11d44:	vmul.f64	d7, d7, d6
   11d48:	vcvt.f64.s32	d3, s6
   11d4c:	vdiv.f64	d1, d7, d5
   11d50:	vstr	d1, [r0, #32]
   11d54:	vmul.f64	d1, d1, d2
   11d58:	ldr	lr, [ip, #8]
   11d5c:	ldr	r3, [ip, #12]
   11d60:	sub	lr, r5, lr
   11d64:	sub	r3, r6, r3
   11d68:	sub	r3, lr, r3
   11d6c:	vmov	s15, lr
   11d70:	vmov	s14, r3
   11d74:	vcvt.f64.s32	d6, s15
   11d78:	vcvt.f64.s32	d7, s14
   11d7c:	vmul.f64	d7, d7, d0
   11d80:	vdiv.f64	d5, d7, d6
   11d84:	vmov.f64	d7, d1
   11d88:	vmls.f64	d7, d3, d5
   11d8c:	vstr	d5, [ip, #16]
   11d90:	vadd.f64	d4, d4, d5
   11d94:	vstr	d7, [ip, #24]
   11d98:	ldr	ip, [ip, #4]
   11d9c:	cmp	ip, #0
   11da0:	bne	11d58 <getc@plt+0x126c>
   11da4:	vmul.f64	d4, d3, d4
   11da8:	vldr	d6, [pc, #224]	; 11e90 <getc@plt+0x13a4>
   11dac:	vdiv.f64	d7, d4, d2
   11db0:	vsub.f64	d1, d1, d7
   11db4:	vstr	d1, [r0, #40]	; 0x28
   11db8:	vldr	d7, [r4, #24]
   11dbc:	ldr	r4, [r4, #4]
   11dc0:	cmp	r4, #0
   11dc4:	vsub.f64	d7, d7, d1
   11dc8:	vmla.f64	d6, d7, d7
   11dcc:	bne	11db8 <getc@plt+0x12cc>
   11dd0:	vdiv.f64	d7, d6, d3
   11dd4:	vdiv.f64	d0, d7, d2
   11dd8:	vcmp.f64	d0, #0.0
   11ddc:	vsqrt.f64	d7, d0
   11de0:	vmrs	APSR_nzcv, fpscr
   11de4:	bmi	11e54 <getc@plt+0x1368>
   11de8:	vldr	d5, [pc, #168]	; 11e98 <getc@plt+0x13ac>
   11dec:	vldr	d6, [pc, #148]	; 11e88 <getc@plt+0x139c>
   11df0:	vmul.f64	d7, d7, d5
   11df4:	vsub.f64	d1, d1, d7
   11df8:	vcmpe.f64	d1, d6
   11dfc:	vmrs	APSR_nzcv, fpscr
   11e00:	vmovgt.f64	d1, d6
   11e04:	bgt	11e18 <getc@plt+0x132c>
   11e08:	vldr	d6, [pc, #128]	; 11e90 <getc@plt+0x13a4>
   11e0c:	vcmp.f64	d1, d6
   11e10:	vmrs	APSR_nzcv, fpscr
   11e14:	vmovmi.f64	d1, d6
   11e18:	vstr	d1, [r1]
   11e1c:	vldr	d6, [pc, #100]	; 11e88 <getc@plt+0x139c>
   11e20:	vldr	d5, [r0, #40]	; 0x28
   11e24:	vadd.f64	d7, d7, d5
   11e28:	vcmpe.f64	d7, d6
   11e2c:	vmrs	APSR_nzcv, fpscr
   11e30:	vmovgt.f64	d7, d6
   11e34:	bgt	11e48 <getc@plt+0x135c>
   11e38:	vldr	d6, [pc, #80]	; 11e90 <getc@plt+0x13a4>
   11e3c:	vcmp.f64	d7, d6
   11e40:	vmrs	APSR_nzcv, fpscr
   11e44:	vmovmi.f64	d7, d6
   11e48:	vstr	d7, [r2]
   11e4c:	add	sp, sp, #24
   11e50:	pop	{r4, r5, r6, pc}
   11e54:	str	r2, [sp, #20]
   11e58:	str	r1, [sp, #16]
   11e5c:	str	r0, [sp, #12]
   11e60:	vstr	d7, [sp]
   11e64:	bl	10a8c <sqrt@plt>
   11e68:	ldr	r0, [sp, #12]
   11e6c:	ldr	r2, [sp, #20]
   11e70:	ldr	r1, [sp, #16]
   11e74:	vldr	d1, [r0, #40]	; 0x28
   11e78:	vldr	d7, [sp]
   11e7c:	b	11de8 <getc@plt+0x12fc>
   11e80:	ldr	r0, [pc, #24]	; 11ea0 <getc@plt+0x13b4>
   11e84:	bl	12604 <error@@Base>
   11e88:	andeq	r0, r0, r0
   11e8c:	subsmi	r0, r9, r0
	...
   11e98:			; <UNDEFINED> instruction: 0xf5c28f5c
   11e9c:	svccc	0x00ff5c28
   11ea0:	andeq	r3, r1, ip, ror #15
   11ea4:	push	{r4, r5, r6, lr}
   11ea8:	add	r5, r0, #8000	; 0x1f40
   11eac:	mov	r6, r0
   11eb0:	add	r5, r5, #48	; 0x30
   11eb4:	mov	r4, r0
   11eb8:	mov	r0, r4
   11ebc:	add	r4, r4, #16
   11ec0:	bl	13208 <error@@Base+0xc04>
   11ec4:	cmp	r5, r4
   11ec8:	bne	11eb8 <getc@plt+0x13cc>
   11ecc:	add	r6, r6, #4096	; 0x1000
   11ed0:	mov	r3, #0
   11ed4:	str	r3, [r6, #3952]	; 0xf70
   11ed8:	str	r3, [r6, #3956]	; 0xf74
   11edc:	pop	{r4, r5, r6, pc}
   11ee0:	push	{r4, r5, r6, lr}
   11ee4:	mov	r5, r1
   11ee8:	ldrb	r3, [r1]
   11eec:	cmp	r3, #0
   11ef0:	beq	11f28 <getc@plt+0x143c>
   11ef4:	mov	r2, #0
   11ef8:	add	r2, r2, r3
   11efc:	ldrb	r3, [r1, #1]!
   11f00:	cmp	r3, #0
   11f04:	bne	11ef8 <getc@plt+0x140c>
   11f08:	ldr	r1, [pc, #80]	; 11f60 <getc@plt+0x1474>
   11f0c:	asr	r3, r2, #31
   11f10:	smull	ip, r1, r1, r2
   11f14:	add	r1, r1, r2
   11f18:	rsb	r3, r3, r1, asr #8
   11f1c:	rsb	r1, r3, r3, lsl #6
   11f20:	rsb	r3, r3, r1, lsl #3
   11f24:	sub	r3, r2, r3
   11f28:	ldr	r4, [r0, r3, lsl #4]
   11f2c:	cmp	r4, #0
   11f30:	bne	11f44 <getc@plt+0x1458>
   11f34:	b	11f58 <getc@plt+0x146c>
   11f38:	ldr	r4, [r4, #4]
   11f3c:	cmp	r4, #0
   11f40:	beq	11f58 <getc@plt+0x146c>
   11f44:	ldr	r1, [r4, #8]
   11f48:	mov	r0, r5
   11f4c:	bl	10978 <strcmp@plt>
   11f50:	cmp	r0, #0
   11f54:	bne	11f38 <getc@plt+0x144c>
   11f58:	mov	r0, r4
   11f5c:	pop	{r4, r5, r6, pc}
   11f60:	subhi	r4, sl, #1552	; 0x610
   11f64:	ldr	ip, [r1, #8]
   11f68:	push	{r4, lr}
   11f6c:	ldrb	r3, [ip]
   11f70:	cmp	r3, #0
   11f74:	beq	11fb0 <getc@plt+0x14c4>
   11f78:	mov	r2, #0
   11f7c:	add	r2, r2, r3
   11f80:	ldrb	r3, [ip, #1]!
   11f84:	cmp	r3, #0
   11f88:	bne	11f7c <getc@plt+0x1490>
   11f8c:	ldr	ip, [pc, #80]	; 11fe4 <getc@plt+0x14f8>
   11f90:	asr	r3, r2, #31
   11f94:	smull	lr, ip, ip, r2
   11f98:	add	ip, ip, r2
   11f9c:	rsb	r3, r3, ip, asr #8
   11fa0:	rsb	ip, r3, r3, lsl #6
   11fa4:	rsb	r3, r3, ip, lsl #3
   11fa8:	sub	r3, r2, r3
   11fac:	lsl	r3, r3, #4
   11fb0:	add	r4, r0, #4096	; 0x1000
   11fb4:	add	r0, r0, r3
   11fb8:	bl	13220 <error@@Base+0xc1c>
   11fbc:	ldr	r0, [r4, #3952]	; 0xf70
   11fc0:	cmp	r0, #0
   11fc4:	beq	11fd4 <getc@plt+0x14e8>
   11fc8:	bl	1099c <free@plt>
   11fcc:	mov	r3, #0
   11fd0:	str	r3, [r4, #3952]	; 0xf70
   11fd4:	ldr	r3, [r4, #3956]	; 0xf74
   11fd8:	add	r3, r3, #1
   11fdc:	str	r3, [r4, #3956]	; 0xf74
   11fe0:	pop	{r4, pc}
   11fe4:	subhi	r4, sl, #1552	; 0x610
   11fe8:	ldr	ip, [r1, #8]
   11fec:	push	{r4, lr}
   11ff0:	ldrb	r3, [ip]
   11ff4:	cmp	r3, #0
   11ff8:	beq	12034 <getc@plt+0x1548>
   11ffc:	mov	r2, #0
   12000:	add	r2, r2, r3
   12004:	ldrb	r3, [ip, #1]!
   12008:	cmp	r3, #0
   1200c:	bne	12000 <getc@plt+0x1514>
   12010:	ldr	ip, [pc, #80]	; 12068 <getc@plt+0x157c>
   12014:	asr	r3, r2, #31
   12018:	smull	lr, ip, ip, r2
   1201c:	add	ip, ip, r2
   12020:	rsb	r3, r3, ip, asr #8
   12024:	rsb	ip, r3, r3, lsl #6
   12028:	rsb	r3, r3, ip, lsl #3
   1202c:	sub	r3, r2, r3
   12030:	lsl	r3, r3, #4
   12034:	add	r4, r0, #4096	; 0x1000
   12038:	add	r0, r0, r3
   1203c:	bl	13350 <error@@Base+0xd4c>
   12040:	ldr	r0, [r4, #3952]	; 0xf70
   12044:	cmp	r0, #0
   12048:	beq	12058 <getc@plt+0x156c>
   1204c:	bl	1099c <free@plt>
   12050:	mov	r3, #0
   12054:	str	r3, [r4, #3952]	; 0xf70
   12058:	ldr	r3, [r4, #3956]	; 0xf74
   1205c:	sub	r3, r3, #1
   12060:	str	r3, [r4, #3956]	; 0xf74
   12064:	pop	{r4, pc}
   12068:	subhi	r4, sl, #1552	; 0x610
   1206c:	push	{r4, r5, r6, lr}
   12070:	add	r6, r0, #4096	; 0x1000
   12074:	ldr	r4, [r6, #3952]	; 0xf70
   12078:	cmp	r4, #0
   1207c:	popne	{r4, r5, r6, pc}
   12080:	ldr	r3, [r6, #3956]	; 0xf74
   12084:	cmp	r3, #0
   12088:	popeq	{r4, r5, r6, pc}
   1208c:	mov	r5, r0
   12090:	mov	r1, #4
   12094:	mov	r0, r3
   12098:	bl	12640 <error@@Base+0x3c>
   1209c:	ldr	lr, [pc, #60]	; 120e0 <getc@plt+0x15f4>
   120a0:	mov	r2, r4
   120a4:	mov	ip, r4
   120a8:	str	r0, [r6, #3952]	; 0xf70
   120ac:	ldr	r3, [r5, ip, lsl #4]
   120b0:	cmp	r3, #0
   120b4:	beq	120d0 <getc@plt+0x15e4>
   120b8:	add	r1, r0, r2, lsl #2
   120bc:	str	r3, [r1], #4
   120c0:	ldr	r3, [r3, #4]
   120c4:	add	r2, r2, #1
   120c8:	cmp	r3, #0
   120cc:	bne	120bc <getc@plt+0x15d0>
   120d0:	add	ip, ip, #1
   120d4:	cmp	ip, lr
   120d8:	bne	120ac <getc@plt+0x15c0>
   120dc:	pop	{r4, r5, r6, pc}
   120e0:	strdeq	r0, [r0], -r7
   120e4:	push	{r4, r5, r6, r7, r8, lr}
   120e8:	add	r5, r0, #8000	; 0x1f40
   120ec:	mov	r7, r0
   120f0:	mov	r6, r1
   120f4:	add	r5, r5, #48	; 0x30
   120f8:	mov	r4, r0
   120fc:	mov	r0, r4
   12100:	mov	r1, r6
   12104:	add	r4, r4, #16
   12108:	bl	13400 <error@@Base+0xdfc>
   1210c:	cmp	r5, r4
   12110:	bne	120fc <getc@plt+0x1610>
   12114:	add	r7, r7, #4096	; 0x1000
   12118:	ldr	r0, [r7, #3952]	; 0xf70
   1211c:	cmp	r0, #0
   12120:	beq	12130 <getc@plt+0x1644>
   12124:	bl	1099c <free@plt>
   12128:	mov	r3, #0
   1212c:	str	r3, [r7, #3952]	; 0xf70
   12130:	mov	r3, #0
   12134:	str	r3, [r7, #3956]	; 0xf74
   12138:	pop	{r4, r5, r6, r7, r8, pc}
   1213c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12140:	sub	sp, sp, #12
   12144:	ldr	r8, [pc, #240]	; 1223c <getc@plt+0x1750>
   12148:	str	r0, [sp, #4]
   1214c:	ldrsh	r4, [r8]
   12150:	cmp	r4, #0
   12154:	beq	1216c <getc@plt+0x1680>
   12158:	ldr	r3, [sp, #4]
   1215c:	add	r8, r8, r3
   12160:	ldrb	r0, [r8, #1028]	; 0x404
   12164:	add	sp, sp, #12
   12168:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1216c:	ldr	r5, [pc, #204]	; 12240 <getc@plt+0x1754>
   12170:	mov	sl, r4
   12174:	add	r7, r8, #1024	; 0x400
   12178:	add	r6, r5, #1072	; 0x430
   1217c:	cmp	sl, r4
   12180:	add	r6, r6, #8
   12184:	add	r7, r7, #4
   12188:	beq	12204 <getc@plt+0x1718>
   1218c:	ldr	r3, [r5]
   12190:	ldr	r1, [r5, #4]
   12194:	cmp	r3, r1
   12198:	subls	r2, r3, #1
   1219c:	uxtbls	r0, sl
   121a0:	addls	r2, r7, r2
   121a4:	bhi	121b8 <getc@plt+0x16cc>
   121a8:	add	r3, r3, #1
   121ac:	cmp	r3, r1
   121b0:	strb	r0, [r2, #1]!
   121b4:	bls	121a8 <getc@plt+0x16bc>
   121b8:	cmp	r5, r6
   121bc:	beq	12158 <getc@plt+0x166c>
   121c0:	cmp	r4, #0
   121c4:	ble	12228 <getc@plt+0x173c>
   121c8:	ldr	fp, [r5, #20]
   121cc:	ldr	r9, [pc, #104]	; 1223c <getc@plt+0x1750>
   121d0:	mov	sl, #0
   121d4:	b	121e4 <getc@plt+0x16f8>
   121d8:	add	sl, sl, #1
   121dc:	cmp	sl, r4
   121e0:	beq	121f8 <getc@plt+0x170c>
   121e4:	ldr	r1, [r9, #4]!
   121e8:	mov	r0, fp
   121ec:	bl	10978 <strcmp@plt>
   121f0:	cmp	r0, #0
   121f4:	bne	121d8 <getc@plt+0x16ec>
   121f8:	add	r5, r5, #12
   121fc:	cmp	sl, r4
   12200:	bne	1218c <getc@plt+0x16a0>
   12204:	cmp	sl, #256	; 0x100
   12208:	beq	12234 <getc@plt+0x1748>
   1220c:	add	r4, sl, #1
   12210:	add	r3, r8, sl, lsl #2
   12214:	ldr	r2, [r5, #8]
   12218:	sxth	r4, r4
   1221c:	strh	r4, [r8]
   12220:	str	r2, [r3, #4]
   12224:	b	1218c <getc@plt+0x16a0>
   12228:	mov	sl, #0
   1222c:	add	r5, r5, #12
   12230:	b	121fc <getc@plt+0x1710>
   12234:	ldr	r0, [pc, #8]	; 12244 <getc@plt+0x1758>
   12238:	bl	12604 <error@@Base>
   1223c:	andeq	r5, r2, r8, lsr #2
   12240:	andeq	r3, r1, r4, lsl #16
   12244:	andeq	r3, r1, r8, asr #24
   12248:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1224c:	sub	sp, sp, #12
   12250:	ldr	r8, [pc, #268]	; 12364 <getc@plt+0x1878>
   12254:	uxtb	r3, r0
   12258:	str	r3, [sp, #4]
   1225c:	ldrsh	r4, [r8]
   12260:	cmp	r4, #0
   12264:	beq	12280 <getc@plt+0x1794>
   12268:	cmp	r3, r4
   1226c:	bge	12354 <getc@plt+0x1868>
   12270:	add	r8, r8, r3, lsl #2
   12274:	ldr	r0, [r8, #4]
   12278:	add	sp, sp, #12
   1227c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12280:	ldr	r5, [pc, #224]	; 12368 <getc@plt+0x187c>
   12284:	mov	sl, r4
   12288:	add	r7, r8, #1024	; 0x400
   1228c:	add	r6, r5, #1072	; 0x430
   12290:	cmp	sl, r4
   12294:	add	r6, r6, #8
   12298:	add	r7, r7, #4
   1229c:	beq	12318 <getc@plt+0x182c>
   122a0:	ldr	r3, [r5]
   122a4:	ldr	r1, [r5, #4]
   122a8:	cmp	r3, r1
   122ac:	subls	r2, r3, #1
   122b0:	uxtbls	r0, sl
   122b4:	addls	r2, r7, r2
   122b8:	bhi	122cc <getc@plt+0x17e0>
   122bc:	add	r3, r3, #1
   122c0:	cmp	r1, r3
   122c4:	strb	r0, [r2, #1]!
   122c8:	bcs	122bc <getc@plt+0x17d0>
   122cc:	cmp	r6, r5
   122d0:	beq	12348 <getc@plt+0x185c>
   122d4:	cmp	r4, #0
   122d8:	ble	1233c <getc@plt+0x1850>
   122dc:	ldr	fp, [r5, #20]
   122e0:	ldr	r9, [pc, #124]	; 12364 <getc@plt+0x1878>
   122e4:	mov	sl, #0
   122e8:	b	122f8 <getc@plt+0x180c>
   122ec:	add	sl, sl, #1
   122f0:	cmp	sl, r4
   122f4:	beq	1230c <getc@plt+0x1820>
   122f8:	ldr	r1, [r9, #4]!
   122fc:	mov	r0, fp
   12300:	bl	10978 <strcmp@plt>
   12304:	cmp	r0, #0
   12308:	bne	122ec <getc@plt+0x1800>
   1230c:	add	r5, r5, #12
   12310:	cmp	sl, r4
   12314:	bne	122a0 <getc@plt+0x17b4>
   12318:	cmp	sl, #256	; 0x100
   1231c:	beq	1235c <getc@plt+0x1870>
   12320:	add	r4, sl, #1
   12324:	add	r3, r8, sl, lsl #2
   12328:	ldr	r2, [r5, #8]
   1232c:	sxth	r4, r4
   12330:	strh	r4, [r8]
   12334:	str	r2, [r3, #4]
   12338:	b	122a0 <getc@plt+0x17b4>
   1233c:	mov	sl, #0
   12340:	add	r5, r5, #12
   12344:	b	12310 <getc@plt+0x1824>
   12348:	ldr	r3, [sp, #4]
   1234c:	cmp	r3, r4
   12350:	blt	12270 <getc@plt+0x1784>
   12354:	ldr	r0, [pc, #16]	; 1236c <getc@plt+0x1880>
   12358:	bl	12604 <error@@Base>
   1235c:	ldr	r0, [pc, #12]	; 12370 <getc@plt+0x1884>
   12360:	bl	12604 <error@@Base>
   12364:	andeq	r5, r2, r8, lsr #2
   12368:	andeq	r3, r1, r4, lsl #16
   1236c:	andeq	r3, r1, r4, ror #24
   12370:	andeq	r3, r1, r8, asr #24
   12374:	ldr	r3, [pc, #136]	; 12404 <getc@plt+0x1918>
   12378:	push	{r7, lr}
   1237c:	mov	r9, r0
   12380:	ldr	r3, [r3]
   12384:	sub	sp, sp, #112	; 0x70
   12388:	cmp	r3, #0
   1238c:	beq	12394 <getc@plt+0x18a8>
   12390:	blx	r3
   12394:	ldr	r6, [pc, #108]	; 12408 <getc@plt+0x191c>
   12398:	ldrsh	r3, [r6]
   1239c:	cmp	r3, #0
   123a0:	ble	123fc <getc@plt+0x1910>
   123a4:	ldr	r8, [pc, #96]	; 1240c <getc@plt+0x1920>
   123a8:	ldr	r7, [pc, #96]	; 12410 <getc@plt+0x1924>
   123ac:	mov	r4, #1
   123b0:	ldr	r5, [r8]
   123b4:	bl	10a50 <getpid@plt>
   123b8:	mov	r2, r5
   123bc:	mov	r1, r7
   123c0:	str	r4, [sp]
   123c4:	add	r4, r4, #1
   123c8:	sxth	r4, r4
   123cc:	mov	r3, r0
   123d0:	add	r0, sp, #12
   123d4:	bl	10ab0 <sprintf@plt>
   123d8:	add	r0, sp, #12
   123dc:	bl	109cc <strdup@plt>
   123e0:	mov	r5, r0
   123e4:	bl	109e4 <unlink@plt>
   123e8:	mov	r0, r5
   123ec:	bl	1099c <free@plt>
   123f0:	ldrsh	r3, [r6]
   123f4:	cmp	r3, r4
   123f8:	bge	123b0 <getc@plt+0x18c4>
   123fc:	mov	r0, r9
   12400:	bl	10a5c <exit@plt>
   12404:	addseq	r7, fp, r8, lsr #26
   12408:	andseq	r5, r3, ip, lsr #10
   1240c:	addseq	r7, fp, r4, lsr #26
   12410:			; <UNDEFINED> instruction: 0x000142b4
   12414:	ldrb	r3, [r0]
   12418:	cmp	r3, #0
   1241c:	beq	12480 <getc@plt+0x1994>
   12420:	ldrb	ip, [r1]
   12424:	cmp	ip, r3
   12428:	bne	12490 <getc@plt+0x19a4>
   1242c:	push	{lr}		; (str lr, [sp, #-4]!)
   12430:	mov	r2, #0
   12434:	mov	lr, r1
   12438:	b	12448 <getc@plt+0x195c>
   1243c:	ldrb	ip, [lr, #1]!
   12440:	cmp	r3, ip
   12444:	bne	12468 <getc@plt+0x197c>
   12448:	ldrb	r3, [r0, #1]!
   1244c:	add	r2, r2, #1
   12450:	cmp	r3, #0
   12454:	bne	1243c <getc@plt+0x1950>
   12458:	ldrb	ip, [r1, r2]
   1245c:	cmp	ip, #0
   12460:	movne	r3, #0
   12464:	beq	12478 <getc@plt+0x198c>
   12468:	cmp	r3, ip
   1246c:	movcs	r0, #1
   12470:	mvncc	r0, #0
   12474:	pop	{pc}		; (ldr pc, [sp], #4)
   12478:	mov	r0, ip
   1247c:	pop	{pc}		; (ldr pc, [sp], #4)
   12480:	ldrb	ip, [r1, r3]
   12484:	cmp	ip, #0
   12488:	movne	r3, #0
   1248c:	beq	124a0 <getc@plt+0x19b4>
   12490:	cmp	r3, ip
   12494:	movcs	r0, #1
   12498:	mvncc	r0, #0
   1249c:	bx	lr
   124a0:	mov	r0, ip
   124a4:	bx	lr
   124a8:	ldr	r2, [pc, #28]	; 124cc <getc@plt+0x19e0>
   124ac:	ldr	r2, [r2]
   124b0:	cmp	r2, r0
   124b4:	bxeq	lr
   124b8:	ldr	r2, [pc, #16]	; 124d0 <getc@plt+0x19e4>
   124bc:	ldr	r2, [r2]
   124c0:	cmp	r0, r2
   124c4:	bxeq	lr
   124c8:	b	10aa4 <fclose@plt>
   124cc:	strheq	r5, [r2], -r0
   124d0:	strheq	r5, [r2], -r4
   124d4:	push	{lr}		; (str lr, [sp, #-4]!)
   124d8:	sub	sp, sp, #92	; 0x5c
   124dc:	mov	r1, r0
   124e0:	mov	r2, sp
   124e4:	mov	r0, #3
   124e8:	bl	109fc <__xstat@plt>
   124ec:	clz	r0, r0
   124f0:	lsr	r0, r0, #5
   124f4:	add	sp, sp, #92	; 0x5c
   124f8:	pop	{pc}		; (ldr pc, [sp], #4)
   124fc:	ldr	r3, [pc, #84]	; 12558 <getc@plt+0x1a6c>
   12500:	push	{r4, r5, lr}
   12504:	sub	sp, sp, #116	; 0x74
   12508:	ldrh	r4, [r3]
   1250c:	ldr	r2, [pc, #72]	; 1255c <getc@plt+0x1a70>
   12510:	add	r4, r4, #1
   12514:	ldr	r5, [r2]
   12518:	sxth	r4, r4
   1251c:	strh	r4, [r3]
   12520:	bl	10a50 <getpid@plt>
   12524:	mov	r2, r5
   12528:	ldr	r1, [pc, #48]	; 12560 <getc@plt+0x1a74>
   1252c:	str	r4, [sp]
   12530:	mov	r3, r0
   12534:	add	r0, sp, #12
   12538:	bl	10ab0 <sprintf@plt>
   1253c:	add	r0, sp, #12
   12540:	bl	109cc <strdup@plt>
   12544:	mov	r4, r0
   12548:	bl	109e4 <unlink@plt>
   1254c:	mov	r0, r4
   12550:	add	sp, sp, #116	; 0x74
   12554:	pop	{r4, r5, pc}
   12558:	andseq	r5, r3, ip, lsr #10
   1255c:	addseq	r7, fp, r4, lsr #26
   12560:			; <UNDEFINED> instruction: 0x000142b4
   12564:	push	{r4, lr}
   12568:	mov	r4, r0
   1256c:	bl	10a74 <strlen@plt>
   12570:	sub	r0, r0, #1
   12574:	sxth	r0, r0
   12578:	cmp	r0, #0
   1257c:	bge	12594 <getc@plt+0x1aa8>
   12580:	b	125a0 <getc@plt+0x1ab4>
   12584:	sub	r0, r0, #1
   12588:	sxth	r0, r0
   1258c:	cmn	r0, #1
   12590:	beq	125a0 <getc@plt+0x1ab4>
   12594:	ldrb	r3, [r4, r0]
   12598:	cmp	r3, #47	; 0x2f
   1259c:	bne	12584 <getc@plt+0x1a98>
   125a0:	add	r0, r0, #1
   125a4:	add	r0, r4, r0
   125a8:	pop	{r4, pc}
   125ac:	push	{r4, lr}
   125b0:	mov	r0, #0
   125b4:	bl	12374 <getc@plt+0x1888>
   125b8:	ldr	r2, [pc, #52]	; 125f4 <getc@plt+0x1b08>
   125bc:	push	{r4, lr}
   125c0:	ldr	r2, [r2]
   125c4:	cmp	r2, #0
   125c8:	beq	125d4 <getc@plt+0x1ae8>
   125cc:	blx	r2
   125d0:	bl	125ac <getc@plt+0x1ac0>
   125d4:	ldr	r1, [pc, #28]	; 125f8 <getc@plt+0x1b0c>
   125d8:	ldr	r2, [pc, #28]	; 125fc <getc@plt+0x1b10>
   125dc:	mov	r3, r0
   125e0:	ldr	r0, [r1]
   125e4:	ldr	r2, [r2]
   125e8:	ldr	r1, [pc, #16]	; 12600 <getc@plt+0x1b14>
   125ec:	bl	10a80 <fprintf@plt>
   125f0:	b	125d0 <getc@plt+0x1ae4>
   125f4:	addseq	r7, fp, r0, lsr #26
   125f8:	andeq	r5, r2, r8, lsr #1
   125fc:	addseq	r7, fp, r4, lsr #26
   12600:	andeq	r4, r1, r4, asr #5

00012604 <error@@Base>:
   12604:	ldr	r1, [pc, #36]	; 12630 <error@@Base+0x2c>
   12608:	ldr	r2, [pc, #36]	; 12634 <error@@Base+0x30>
   1260c:	mov	r3, r0
   12610:	push	{r4, lr}
   12614:	ldr	r0, [r1]
   12618:	ldr	r2, [r2]
   1261c:	ldr	r1, [pc, #20]	; 12638 <error@@Base+0x34>
   12620:	bl	10a80 <fprintf@plt>
   12624:	ldr	r3, [pc, #16]	; 1263c <error@@Base+0x38>
   12628:	ldr	r0, [r3]
   1262c:	bl	12374 <getc@plt+0x1888>
   12630:	andeq	r5, r2, r8, lsr #1
   12634:	addseq	r7, fp, r4, lsr #26
   12638:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   1263c:	muleq	r2, ip, r0
   12640:	push	{r4, lr}
   12644:	bl	1096c <calloc@plt>
   12648:	cmp	r0, #0
   1264c:	popne	{r4, pc}
   12650:	ldr	r0, [pc]	; 12658 <error@@Base+0x54>
   12654:	bl	12604 <error@@Base>
   12658:	ldrdeq	r4, [r1], -ip
   1265c:	ldr	r3, [pc, #32]	; 12684 <error@@Base+0x80>
   12660:	ldrb	r2, [r3, #2]
   12664:	cmp	r2, #0
   12668:	beq	12670 <error@@Base+0x6c>
   1266c:	bx	lr
   12670:	push	{r4, lr}
   12674:	mov	r2, #1
   12678:	ldr	r0, [pc, #8]	; 12688 <error@@Base+0x84>
   1267c:	strb	r2, [r3, #2]
   12680:	bl	12604 <error@@Base>
   12684:	andseq	r5, r3, ip, lsr #10
   12688:	strdeq	r4, [r1], -r8
   1268c:	ldr	r3, [pc, #48]	; 126c4 <error@@Base+0xc0>
   12690:	push	{lr}		; (str lr, [sp, #-4]!)
   12694:	sub	sp, sp, #12
   12698:	ldr	r2, [pc, #40]	; 126c8 <error@@Base+0xc4>
   1269c:	str	r1, [sp]
   126a0:	ldr	r1, [r3]
   126a4:	ldr	r2, [r2]
   126a8:	mov	r3, r0
   126ac:	mov	r0, r1
   126b0:	ldr	r1, [pc, #20]	; 126cc <error@@Base+0xc8>
   126b4:	bl	10a80 <fprintf@plt>
   126b8:	ldr	r3, [pc, #16]	; 126d0 <error@@Base+0xcc>
   126bc:	ldr	r0, [r3]
   126c0:	bl	12374 <getc@plt+0x1888>
   126c4:	andeq	r5, r2, r8, lsr #1
   126c8:	addseq	r7, fp, r4, lsr #26
   126cc:	andeq	r4, r1, r8, lsl #6
   126d0:	muleq	r2, ip, r0
   126d4:	subs	r2, r0, #0
   126d8:	push	{r4, r5, r6, lr}
   126dc:	mov	r4, r1
   126e0:	beq	1270c <error@@Base+0x108>
   126e4:	mov	r5, r2
   126e8:	bl	10990 <fopen@plt>
   126ec:	cmp	r0, #0
   126f0:	popne	{r4, r5, r6, pc}
   126f4:	ldrb	r3, [r4]
   126f8:	mov	r1, r5
   126fc:	cmp	r3, #119	; 0x77
   12700:	beq	12724 <error@@Base+0x120>
   12704:	ldr	r0, [pc, #32]	; 1272c <error@@Base+0x128>
   12708:	bl	1268c <error@@Base+0x88>
   1270c:	ldrb	r3, [r1]
   12710:	cmp	r3, #114	; 0x72
   12714:	ldreq	r3, [pc, #20]	; 12730 <error@@Base+0x12c>
   12718:	ldrne	r3, [pc, #20]	; 12734 <error@@Base+0x130>
   1271c:	ldr	r0, [r3]
   12720:	pop	{r4, r5, r6, pc}
   12724:	ldr	r0, [pc, #12]	; 12738 <error@@Base+0x134>
   12728:	bl	1268c <error@@Base+0x88>
   1272c:	andeq	r4, r1, r0, lsr r3
   12730:	strheq	r5, [r2], -r0
   12734:	strheq	r5, [r2], -r4
   12738:	andeq	r4, r1, r8, lsl r3
   1273c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12740:	sub	sp, sp, #20
   12744:	ldr	r4, [r1]
   12748:	str	r0, [sp, #8]
   1274c:	mov	r0, r4
   12750:	mov	r9, r1
   12754:	str	r2, [sp, #12]
   12758:	mov	r6, r3
   1275c:	bl	10a74 <strlen@plt>
   12760:	sub	r0, r0, #1
   12764:	sxth	r0, r0
   12768:	cmp	r0, #0
   1276c:	bge	12784 <error@@Base+0x180>
   12770:	b	12790 <error@@Base+0x18c>
   12774:	sub	r0, r0, #1
   12778:	sxth	r0, r0
   1277c:	cmn	r0, #1
   12780:	beq	12790 <error@@Base+0x18c>
   12784:	ldrb	r3, [r4, r0]
   12788:	cmp	r3, #47	; 0x2f
   1278c:	bne	12774 <error@@Base+0x170>
   12790:	ldr	r3, [pc, #460]	; 12964 <error@@Base+0x360>
   12794:	add	r0, r0, #1
   12798:	add	r4, r4, r0
   1279c:	ldr	r1, [pc, #452]	; 12968 <error@@Base+0x364>
   127a0:	mov	r0, #2
   127a4:	str	r4, [r3]
   127a8:	bl	10a38 <__sysv_signal@plt>
   127ac:	ldr	r1, [pc, #436]	; 12968 <error@@Base+0x364>
   127b0:	mov	r0, #15
   127b4:	bl	10a38 <__sysv_signal@plt>
   127b8:	ldr	r3, [sp, #8]
   127bc:	ldr	fp, [r3]
   127c0:	cmp	fp, #1
   127c4:	beq	128f8 <error@@Base+0x2f4>
   127c8:	movgt	sl, #1
   127cc:	mov	r7, #0
   127d0:	movgt	r4, sl
   127d4:	bgt	127fc <error@@Base+0x1f8>
   127d8:	b	12908 <error@@Base+0x304>
   127dc:	add	r3, r7, #1
   127e0:	str	r5, [r9, r7, lsl #2]
   127e4:	sxth	r7, r3
   127e8:	add	r4, r4, #1
   127ec:	sxth	r4, r4
   127f0:	cmp	r4, fp
   127f4:	mov	sl, r4
   127f8:	bge	12908 <error@@Base+0x304>
   127fc:	ldr	r5, [r9, r4, lsl #2]
   12800:	lsl	r3, r4, #2
   12804:	ldrb	r2, [r5]
   12808:	cmp	r2, #45	; 0x2d
   1280c:	bne	127dc <error@@Base+0x1d8>
   12810:	ldrb	r8, [r5, #1]
   12814:	str	r3, [sp, #4]
   12818:	cmp	r8, #0
   1281c:	beq	127dc <error@@Base+0x1d8>
   12820:	mov	r0, r5
   12824:	bl	10a74 <strlen@plt>
   12828:	mov	r1, r5
   1282c:	mov	r2, r0
   12830:	ldr	r0, [pc, #308]	; 1296c <error@@Base+0x368>
   12834:	bl	10ad4 <strncmp@plt>
   12838:	cmp	r0, #0
   1283c:	beq	12950 <error@@Base+0x34c>
   12840:	add	sl, sl, #1
   12844:	cmp	sl, fp
   12848:	movge	r0, #0
   1284c:	ldrlt	r3, [sp, #4]
   12850:	addlt	r3, r9, r3
   12854:	ldrlt	r0, [r3, #4]
   12858:	cmp	r6, #0
   1285c:	beq	128a0 <error@@Base+0x29c>
   12860:	ldrb	r3, [r6]
   12864:	cmp	r3, #0
   12868:	beq	128a0 <error@@Base+0x29c>
   1286c:	cmp	r3, r8
   12870:	beq	128ac <error@@Base+0x2a8>
   12874:	mov	r3, #0
   12878:	b	12884 <error@@Base+0x280>
   1287c:	cmp	r8, r1
   12880:	beq	128b0 <error@@Base+0x2ac>
   12884:	add	r3, r3, #1
   12888:	sxth	r3, r3
   1288c:	add	r2, r3, r3, lsl #1
   12890:	ldrb	r1, [r6, r2, lsl #2]
   12894:	add	r2, r6, r2, lsl #2
   12898:	cmp	r1, #0
   1289c:	bne	1287c <error@@Base+0x278>
   128a0:	mov	r1, r5
   128a4:	ldr	r0, [pc, #196]	; 12970 <error@@Base+0x36c>
   128a8:	bl	1268c <error@@Base+0x88>
   128ac:	mov	r2, r6
   128b0:	ldr	r3, [r2, #4]
   128b4:	cmp	r3, #0
   128b8:	beq	12918 <error@@Base+0x314>
   128bc:	ldrb	r1, [r5, #2]
   128c0:	cmp	r0, #0
   128c4:	cmpeq	r1, #0
   128c8:	beq	12918 <error@@Base+0x314>
   128cc:	ldr	r2, [r3]
   128d0:	cmp	r2, #0
   128d4:	bne	12958 <error@@Base+0x354>
   128d8:	cmp	r1, #0
   128dc:	addne	r0, r5, #2
   128e0:	str	r0, [r3]
   128e4:	ldrb	r3, [r5, #2]
   128e8:	cmp	r3, #0
   128ec:	addeq	r4, r4, #1
   128f0:	sxtheq	r4, r4
   128f4:	b	127e8 <error@@Base+0x1e4>
   128f8:	ldr	r3, [pc, #116]	; 12974 <error@@Base+0x370>
   128fc:	ldrb	r7, [r3, #4]
   12900:	cmp	r7, #0
   12904:	bne	12950 <error@@Base+0x34c>
   12908:	ldr	r3, [sp, #8]
   1290c:	str	r7, [r3]
   12910:	add	sp, sp, #20
   12914:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12918:	ldr	r3, [r2, #8]
   1291c:	cmp	r3, #0
   12920:	beq	128a0 <error@@Base+0x29c>
   12924:	ldrb	r2, [r5, #2]
   12928:	cmp	r2, #0
   1292c:	bne	128a0 <error@@Base+0x29c>
   12930:	ldrb	r2, [r3]
   12934:	cmp	r2, #0
   12938:	bne	12958 <error@@Base+0x354>
   1293c:	mov	r2, #1
   12940:	strb	r2, [r3]
   12944:	ldr	r3, [sp, #8]
   12948:	ldr	fp, [r3]
   1294c:	b	127e8 <error@@Base+0x1e4>
   12950:	ldr	r0, [sp, #12]
   12954:	bl	125b8 <getc@plt+0x1acc>
   12958:	mov	r1, r5
   1295c:	ldr	r0, [pc, #20]	; 12978 <error@@Base+0x374>
   12960:	bl	1268c <error@@Base+0x88>
   12964:	addseq	r7, fp, r4, lsr #26
   12968:	andeq	r2, r1, ip, asr r6
   1296c:	andeq	r4, r1, r4, asr #6
   12970:	andeq	r4, r1, ip, asr #6
   12974:	muleq	r2, ip, r0
   12978:	andeq	r4, r1, ip, asr r3
   1297c:	ldr	r3, [pc, #44]	; 129b0 <error@@Base+0x3ac>
   12980:	push	{lr}		; (str lr, [sp, #-4]!)
   12984:	sub	sp, sp, #12
   12988:	ldr	r2, [pc, #36]	; 129b4 <error@@Base+0x3b0>
   1298c:	str	r1, [sp]
   12990:	ldr	r1, [r3]
   12994:	ldr	r2, [r2]
   12998:	mov	r3, r0
   1299c:	mov	r0, r1
   129a0:	ldr	r1, [pc, #16]	; 129b8 <error@@Base+0x3b4>
   129a4:	bl	10a80 <fprintf@plt>
   129a8:	add	sp, sp, #12
   129ac:	pop	{pc}		; (ldr pc, [sp], #4)
   129b0:	andeq	r5, r2, r8, lsr #1
   129b4:	addseq	r7, fp, r4, lsr #26
   129b8:	andeq	r4, r1, r8, lsl #6
   129bc:	push	{r4, r5, r6, lr}
   129c0:	mov	r4, r0
   129c4:	uxtb	r6, r1
   129c8:	mov	r0, #1
   129cc:	mov	r1, #16
   129d0:	mov	r5, r2
   129d4:	bl	12640 <error@@Base+0x3c>
   129d8:	strb	r6, [r0, #8]
   129dc:	str	r5, [r0, #12]
   129e0:	mov	r1, r0
   129e4:	mov	r0, r4
   129e8:	pop	{r4, r5, r6, lr}
   129ec:	b	1326c <error@@Base+0xc68>
   129f0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   129f4:	sub	sp, sp, #124	; 0x7c
   129f8:	ldrb	r3, [r2]
   129fc:	str	r2, [sp, #8]
   12a00:	adds	r3, r3, #0
   12a04:	movne	r3, #1
   12a08:	cmp	r1, #0
   12a0c:	movne	r3, #0
   12a10:	cmp	r3, #0
   12a14:	bne	12df0 <error@@Base+0x7ec>
   12a18:	mov	sl, r0
   12a1c:	mov	r0, r1
   12a20:	ldr	r3, [sl, #4]
   12a24:	ldr	r1, [pc, #976]	; 12dfc <error@@Base+0x7f8>
   12a28:	str	r3, [sp, #12]
   12a2c:	bl	126d4 <error@@Base+0xd0>
   12a30:	ldr	r3, [sp, #8]
   12a34:	ldrb	r3, [r3]
   12a38:	cmp	r3, #0
   12a3c:	mov	r5, r0
   12a40:	bne	12d44 <error@@Base+0x740>
   12a44:	ldr	r2, [sp, #8]
   12a48:	mov	r0, r5
   12a4c:	ldr	r3, [r2, #4]
   12a50:	ldrb	r6, [r2, #1]
   12a54:	mov	r4, r3
   12a58:	bl	10aec <getc@plt>
   12a5c:	cmp	r4, #0
   12a60:	mov	r2, r4
   12a64:	moveq	r2, #94	; 0x5e
   12a68:	str	r2, [sp, #4]
   12a6c:	cmn	r0, #1
   12a70:	beq	12b34 <error@@Base+0x530>
   12a74:	ldr	r9, [pc, #900]	; 12e00 <error@@Base+0x7fc>
   12a78:	ldrsb	r4, [r9, r0]
   12a7c:	cmp	r4, #0
   12a80:	ble	12dd8 <error@@Base+0x7d4>
   12a84:	cmp	r6, #0
   12a88:	movne	r7, #0
   12a8c:	movne	r8, #1
   12a90:	movne	fp, #4
   12a94:	bne	12aa8 <error@@Base+0x4a4>
   12a98:	b	12ca8 <error@@Base+0x6a4>
   12a9c:	ldrsb	r4, [r9, r0]
   12aa0:	cmp	r4, #0
   12aa4:	ble	12dd8 <error@@Base+0x7d4>
   12aa8:	cmp	r4, #1
   12aac:	strb	r0, [sp, #16]
   12ab0:	beq	12ad4 <error@@Base+0x4d0>
   12ab4:	sub	r6, r4, #1
   12ab8:	mov	r2, r6
   12abc:	mov	r3, r5
   12ac0:	mov	r1, r8
   12ac4:	add	r0, sp, #17
   12ac8:	bl	10a14 <fread@plt>
   12acc:	cmp	r6, r0
   12ad0:	bne	12de8 <error@@Base+0x7e4>
   12ad4:	add	r2, sp, #20
   12ad8:	mov	r1, fp
   12adc:	add	r0, sp, #16
   12ae0:	bl	10a20 <utf8proc_iterate@plt>
   12ae4:	cmp	r0, r4
   12ae8:	bne	12de0 <error@@Base+0x7dc>
   12aec:	ldr	r4, [sp, #20]
   12af0:	ldr	r3, [sp, #4]
   12af4:	cmp	r4, r3
   12af8:	moveq	r7, r8
   12afc:	beq	12b24 <error@@Base+0x520>
   12b00:	mov	r1, #16
   12b04:	mov	r0, r8
   12b08:	bl	12640 <error@@Base+0x3c>
   12b0c:	strb	r7, [r0, #8]
   12b10:	mov	r1, r0
   12b14:	str	r4, [r0, #12]
   12b18:	mov	r0, sl
   12b1c:	bl	1326c <error@@Base+0xc68>
   12b20:	mov	r7, #0
   12b24:	mov	r0, r5
   12b28:	bl	10aec <getc@plt>
   12b2c:	cmn	r0, #1
   12b30:	bne	12a9c <error@@Base+0x498>
   12b34:	mov	r0, r5
   12b38:	bl	124a8 <getc@plt+0x19bc>
   12b3c:	ldr	r3, [sp, #8]
   12b40:	ldrb	r3, [r3, #9]
   12b44:	cmp	r3, #0
   12b48:	beq	12bc8 <error@@Base+0x5c4>
   12b4c:	ldr	r3, [sp, #12]
   12b50:	cmp	r3, #0
   12b54:	ldrne	r6, [r3, #4]
   12b58:	ldreq	r6, [sl]
   12b5c:	cmp	r6, #0
   12b60:	beq	12bc8 <error@@Base+0x5c4>
   12b64:	mov	r5, r6
   12b68:	mov	r7, #32
   12b6c:	b	12b94 <error@@Base+0x590>
   12b70:	cmp	r4, #11
   12b74:	bcs	12bc0 <error@@Base+0x5bc>
   12b78:	cmp	r4, #9
   12b7c:	beq	12bc0 <error@@Base+0x5bc>
   12b80:	cmp	r4, #10
   12b84:	bne	12bb0 <error@@Base+0x5ac>
   12b88:	ldr	r5, [r5, #4]
   12b8c:	cmp	r5, #0
   12b90:	beq	12c68 <error@@Base+0x664>
   12b94:	ldr	r4, [r5, #12]
   12b98:	mov	r0, r4
   12b9c:	bl	109a8 <utf8proc_get_property@plt>
   12ba0:	cmp	r4, #13
   12ba4:	bls	12b70 <error@@Base+0x56c>
   12ba8:	cmp	r4, #160	; 0xa0
   12bac:	beq	12bc0 <error@@Base+0x5bc>
   12bb0:	ldrsh	r3, [r0]
   12bb4:	sub	r3, r3, #23
   12bb8:	cmp	r3, #2
   12bbc:	bhi	12b88 <error@@Base+0x584>
   12bc0:	str	r7, [r5, #12]
   12bc4:	b	12b88 <error@@Base+0x584>
   12bc8:	ldr	r3, [sp, #8]
   12bcc:	ldrb	r3, [r3, #10]
   12bd0:	cmp	r3, #0
   12bd4:	beq	12c04 <error@@Base+0x600>
   12bd8:	ldr	r3, [sp, #12]
   12bdc:	cmp	r3, #0
   12be0:	ldrne	r4, [r3, #4]
   12be4:	ldreq	r4, [sl]
   12be8:	b	12bfc <error@@Base+0x5f8>
   12bec:	ldr	r0, [r4, #12]
   12bf0:	bl	109f0 <utf8proc_tolower@plt>
   12bf4:	str	r0, [r4, #12]
   12bf8:	ldr	r4, [r4, #4]
   12bfc:	cmp	r4, #0
   12c00:	bne	12bec <error@@Base+0x5e8>
   12c04:	add	sp, sp, #124	; 0x7c
   12c08:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12c0c:	cmp	r3, #10
   12c10:	movne	r2, #0
   12c14:	andeq	r2, r2, #1
   12c18:	cmp	r2, #0
   12c1c:	beq	12c9c <error@@Base+0x698>
   12c20:	cmp	r4, #0
   12c24:	moveq	r3, #0
   12c28:	andne	r3, r5, #1
   12c2c:	cmp	r3, #0
   12c30:	beq	12c4c <error@@Base+0x648>
   12c34:	ldr	r3, [r4, #12]
   12c38:	cmp	r3, #32
   12c3c:	ldrbeq	r3, [r4, #8]
   12c40:	ldrbeq	r2, [r6, #8]
   12c44:	orreq	r3, r3, r2
   12c48:	strbeq	r3, [r4, #8]
   12c4c:	mov	r0, sl
   12c50:	mov	r1, r6
   12c54:	bl	13350 <error@@Base+0xd4c>
   12c58:	mov	r0, r6
   12c5c:	bl	1099c <free@plt>
   12c60:	subs	r6, r4, #0
   12c64:	beq	12bc8 <error@@Base+0x5c4>
   12c68:	ldr	r3, [r6, #12]
   12c6c:	ldr	r4, [r6, #4]
   12c70:	cmp	r3, #32
   12c74:	eor	r2, r5, #1
   12c78:	bne	12c0c <error@@Base+0x608>
   12c7c:	cmp	r4, #0
   12c80:	orreq	r2, r2, #1
   12c84:	cmp	r2, #0
   12c88:	bne	12c20 <error@@Base+0x61c>
   12c8c:	ldr	r2, [r4, #12]
   12c90:	cmp	r2, #10
   12c94:	cmpne	r2, #32
   12c98:	beq	12c20 <error@@Base+0x61c>
   12c9c:	subs	r5, r3, #10
   12ca0:	movne	r5, #1
   12ca4:	b	12c60 <error@@Base+0x65c>
   12ca8:	mov	r7, #1
   12cac:	mov	fp, #4
   12cb0:	mov	r8, #16
   12cb4:	b	12cc4 <error@@Base+0x6c0>
   12cb8:	ldrsb	r4, [r9, r0]
   12cbc:	cmp	r4, #0
   12cc0:	ble	12dd8 <error@@Base+0x7d4>
   12cc4:	cmp	r4, #1
   12cc8:	strb	r0, [sp, #16]
   12ccc:	beq	12cf0 <error@@Base+0x6ec>
   12cd0:	sub	r6, r4, #1
   12cd4:	mov	r2, r6
   12cd8:	mov	r3, r5
   12cdc:	mov	r1, r7
   12ce0:	add	r0, sp, #17
   12ce4:	bl	10a14 <fread@plt>
   12ce8:	cmp	r6, r0
   12cec:	bne	12de8 <error@@Base+0x7e4>
   12cf0:	add	r2, sp, #20
   12cf4:	mov	r1, fp
   12cf8:	add	r0, sp, #16
   12cfc:	bl	10a20 <utf8proc_iterate@plt>
   12d00:	cmp	r0, r4
   12d04:	bne	12de0 <error@@Base+0x7dc>
   12d08:	mov	r1, r8
   12d0c:	mov	r0, r7
   12d10:	ldr	r4, [sp, #20]
   12d14:	bl	12640 <error@@Base+0x3c>
   12d18:	mov	r3, #0
   12d1c:	mov	r1, r0
   12d20:	strb	r3, [r0, #8]
   12d24:	str	r4, [r0, #12]
   12d28:	mov	r0, sl
   12d2c:	bl	1326c <error@@Base+0xc68>
   12d30:	mov	r0, r5
   12d34:	bl	10aec <getc@plt>
   12d38:	cmn	r0, #1
   12d3c:	bne	12cb8 <error@@Base+0x6b4>
   12d40:	b	12b34 <error@@Base+0x530>
   12d44:	add	r0, sp, #20
   12d48:	mov	r2, r5
   12d4c:	mov	r1, #99	; 0x63
   12d50:	bl	109b4 <fgets@plt>
   12d54:	cmp	r0, #0
   12d58:	beq	12dc0 <error@@Base+0x7bc>
   12d5c:	mov	r2, #51	; 0x33
   12d60:	ldr	r1, [pc, #156]	; 12e04 <error@@Base+0x800>
   12d64:	add	r0, sp, #20
   12d68:	bl	10ad4 <strncmp@plt>
   12d6c:	subs	r4, r0, #0
   12d70:	bne	12dc0 <error@@Base+0x7bc>
   12d74:	ldr	r7, [pc, #140]	; 12e08 <error@@Base+0x804>
   12d78:	mov	r6, #99	; 0x63
   12d7c:	mov	r2, r5
   12d80:	mov	r1, r6
   12d84:	add	r0, sp, #20
   12d88:	bl	109b4 <fgets@plt>
   12d8c:	cmp	r0, #0
   12d90:	beq	12db8 <error@@Base+0x7b4>
   12d94:	mov	r1, r7
   12d98:	add	r0, sp, #20
   12d9c:	bl	10978 <strcmp@plt>
   12da0:	cmp	r0, #0
   12da4:	bne	12d7c <error@@Base+0x778>
   12da8:	add	r4, r4, #1
   12dac:	sxth	r4, r4
   12db0:	cmp	r4, #1
   12db4:	ble	12d7c <error@@Base+0x778>
   12db8:	mov	r3, #1
   12dbc:	b	12dcc <error@@Base+0x7c8>
   12dc0:	mov	r0, r5
   12dc4:	bl	109d8 <rewind@plt>
   12dc8:	mov	r3, #0
   12dcc:	ldr	r2, [sp, #8]
   12dd0:	strb	r3, [r2, #11]
   12dd4:	b	12a44 <error@@Base+0x440>
   12dd8:	ldr	r0, [pc, #44]	; 12e0c <error@@Base+0x808>
   12ddc:	bl	12604 <error@@Base>
   12de0:	bl	10abc <utf8proc_errmsg@plt>
   12de4:	bl	12604 <error@@Base>
   12de8:	ldr	r0, [pc, #32]	; 12e10 <error@@Base+0x80c>
   12dec:	bl	12604 <error@@Base>
   12df0:	ldr	r1, [pc, #28]	; 12e14 <error@@Base+0x810>
   12df4:	ldr	r0, [pc, #28]	; 12e18 <error@@Base+0x814>
   12df8:	bl	1268c <error@@Base+0x88>
   12dfc:	andeq	r3, r1, r0, ror #11
   12e00:	andeq	r4, r2, r8, lsl #28
   12e04:	andeq	r4, r1, ip, lsl #7
   12e08:	andeq	r4, r1, r4, asr #7
   12e0c:	strdeq	r4, [r1], -ip
   12e10:	andeq	r4, r1, r4, lsl r4
   12e14:	andeq	r4, r1, r0, ror r3
   12e18:	andeq	r4, r1, ip, ror r3
   12e1c:	push	{r4, lr}
   12e20:	bl	109c0 <utf8proc_encode_char@plt>
   12e24:	cmp	r0, #0
   12e28:	ble	12e34 <error@@Base+0x830>
   12e2c:	sxtb	r0, r0
   12e30:	pop	{r4, pc}
   12e34:	ldr	r0, [pc]	; 12e3c <error@@Base+0x838>
   12e38:	bl	12604 <error@@Base>
   12e3c:	andeq	r4, r1, ip, lsr #8
   12e40:	push	{r4, r5, r6, r7, r8, lr}
   12e44:	uxtb	r4, r0
   12e48:	cmp	r4, #0
   12e4c:	mov	r5, r1
   12e50:	mov	r8, r2
   12e54:	uxtb	r7, r3
   12e58:	moveq	r6, r4
   12e5c:	bne	12ecc <error@@Base+0x8c8>
   12e60:	cmp	r5, #10
   12e64:	beq	12eb0 <error@@Base+0x8ac>
   12e68:	mov	r0, r5
   12e6c:	bl	109a8 <utf8proc_get_property@plt>
   12e70:	cmp	r5, #32
   12e74:	beq	12ef4 <error@@Base+0x8f0>
   12e78:	ldrh	r3, [r0]
   12e7c:	cmp	r3, #29
   12e80:	bhi	12e94 <error@@Base+0x890>
   12e84:	mov	r1, #1
   12e88:	ldr	r2, [pc, #220]	; 12f6c <error@@Base+0x968>
   12e8c:	ands	r3, r2, r1, lsl r3
   12e90:	bne	12ef4 <error@@Base+0x8f0>
   12e94:	cmp	r5, #255	; 0xff
   12e98:	bls	12f58 <error@@Base+0x954>
   12e9c:	mov	r2, r5
   12ea0:	add	r0, r8, r4
   12ea4:	ldr	r1, [pc, #196]	; 12f70 <error@@Base+0x96c>
   12ea8:	pop	{r4, r5, r6, r7, r8, lr}
   12eac:	b	10ab0 <sprintf@plt>
   12eb0:	ldr	r3, [pc, #188]	; 12f74 <error@@Base+0x970>
   12eb4:	cmp	r7, #0
   12eb8:	ldr	r1, [pc, #184]	; 12f78 <error@@Base+0x974>
   12ebc:	add	r0, r8, r4
   12ec0:	movne	r1, r3
   12ec4:	pop	{r4, r5, r6, r7, r8, lr}
   12ec8:	b	10ab0 <sprintf@plt>
   12ecc:	mov	r1, r2
   12ed0:	mov	r0, #94	; 0x5e
   12ed4:	bl	109c0 <utf8proc_encode_char@plt>
   12ed8:	subs	r6, r0, #0
   12edc:	sxtbgt	r6, r6
   12ee0:	movgt	r4, r6
   12ee4:	sxthgt	r6, r6
   12ee8:	bgt	12e60 <error@@Base+0x85c>
   12eec:	ldr	r0, [pc, #136]	; 12f7c <error@@Base+0x978>
   12ef0:	bl	12604 <error@@Base>
   12ef4:	mov	r0, r5
   12ef8:	bl	10a68 <utf8proc_category@plt>
   12efc:	sub	r0, r0, #6
   12f00:	cmp	r0, #2
   12f04:	bhi	12f2c <error@@Base+0x928>
   12f08:	add	r1, r8, r4
   12f0c:	ldr	r0, [pc, #108]	; 12f80 <error@@Base+0x97c>
   12f10:	bl	109c0 <utf8proc_encode_char@plt>
   12f14:	cmp	r0, #0
   12f18:	sxtbgt	r0, r0
   12f1c:	addgt	r6, r6, r0
   12f20:	sxthgt	r6, r6
   12f24:	movgt	r4, r6
   12f28:	ble	12eec <error@@Base+0x8e8>
   12f2c:	add	r1, r8, r4
   12f30:	mov	r0, r5
   12f34:	bl	109c0 <utf8proc_encode_char@plt>
   12f38:	cmp	r0, #0
   12f3c:	ble	12eec <error@@Base+0x8e8>
   12f40:	sxtb	r0, r0
   12f44:	add	r6, r6, r0
   12f48:	mov	r3, #0
   12f4c:	sxth	r6, r6
   12f50:	strb	r3, [r8, r6]
   12f54:	pop	{r4, r5, r6, r7, r8, pc}
   12f58:	mov	r2, r5
   12f5c:	add	r0, r8, r4
   12f60:	ldr	r1, [pc, #28]	; 12f84 <error@@Base+0x980>
   12f64:	pop	{r4, r5, r6, r7, r8, lr}
   12f68:	b	10ab0 <sprintf@plt>
   12f6c:	ldrshtcs	pc, [pc], #-254	; <UNPREDICTABLE>
   12f70:	andeq	r4, r1, r4, asr r4
   12f74:	andeq	r4, r1, r4, asr #8
   12f78:	andeq	r3, r1, ip, asr r7
   12f7c:	andeq	r4, r1, ip, lsr #8
   12f80:	andeq	r2, r0, ip, asr #11
   12f84:	andeq	r4, r1, ip, asr #8
   12f88:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12f8c:	mov	r6, r0
   12f90:	sub	sp, sp, #20
   12f94:	mov	r0, r1
   12f98:	ldr	r1, [pc, #432]	; 13150 <error@@Base+0xb4c>
   12f9c:	mov	r4, r2
   12fa0:	bl	126d4 <error@@Base+0xd0>
   12fa4:	cmp	r4, #0
   12fa8:	mov	r5, r0
   12fac:	beq	12ff4 <error@@Base+0x9f0>
   12fb0:	mov	r3, r0
   12fb4:	mov	r2, #55	; 0x37
   12fb8:	mov	r1, #1
   12fbc:	ldr	r0, [pc, #400]	; 13154 <error@@Base+0xb50>
   12fc0:	bl	10a08 <fwrite@plt>
   12fc4:	mov	r3, r5
   12fc8:	mov	r2, #55	; 0x37
   12fcc:	mov	r1, #1
   12fd0:	ldr	r0, [pc, #384]	; 13158 <error@@Base+0xb54>
   12fd4:	bl	10a08 <fwrite@plt>
   12fd8:	mov	r0, r5
   12fdc:	blx	r4
   12fe0:	mov	r3, r5
   12fe4:	mov	r2, #55	; 0x37
   12fe8:	mov	r1, #1
   12fec:	ldr	r0, [pc, #356]	; 13158 <error@@Base+0xb54>
   12ff0:	bl	10a08 <fwrite@plt>
   12ff4:	ldr	fp, [r6]
   12ff8:	cmp	fp, #0
   12ffc:	beq	13138 <error@@Base+0xb34>
   13000:	ldr	r8, [pc, #340]	; 1315c <error@@Base+0xb58>
   13004:	ldr	r7, [pc, #340]	; 13160 <error@@Base+0xb5c>
   13008:	mov	r6, #0
   1300c:	b	1307c <error@@Base+0xa78>
   13010:	cmp	r9, #10
   13014:	ldrheq	r2, [r7]
   13018:	strheq	r2, [sl]
   1301c:	beq	13064 <error@@Base+0xa60>
   13020:	mov	r0, r9
   13024:	bl	109a8 <utf8proc_get_property@plt>
   13028:	cmp	r9, #32
   1302c:	beq	130bc <error@@Base+0xab8>
   13030:	ldrh	r0, [r0]
   13034:	cmp	r0, #29
   13038:	bhi	1304c <error@@Base+0xa48>
   1303c:	mov	ip, #1
   13040:	ldr	r3, [pc, #284]	; 13164 <error@@Base+0xb60>
   13044:	ands	r3, r3, ip, lsl r0
   13048:	bne	130bc <error@@Base+0xab8>
   1304c:	cmp	r9, #255	; 0xff
   13050:	bls	13124 <error@@Base+0xb20>
   13054:	mov	r2, r9
   13058:	mov	r0, sl
   1305c:	mov	r1, r8
   13060:	bl	10ab0 <sprintf@plt>
   13064:	mov	r1, r5
   13068:	add	r0, sp, #4
   1306c:	bl	10ac8 <fputs@plt>
   13070:	ldr	fp, [fp, #4]
   13074:	cmp	fp, #0
   13078:	beq	13138 <error@@Base+0xb34>
   1307c:	ldrb	r1, [fp, #8]
   13080:	ldr	r9, [fp, #12]
   13084:	cmp	r1, #0
   13088:	addeq	sl, sp, #4
   1308c:	moveq	r4, r6
   13090:	beq	13010 <error@@Base+0xa0c>
   13094:	add	r1, sp, #4
   13098:	mov	r0, #94	; 0x5e
   1309c:	bl	109c0 <utf8proc_encode_char@plt>
   130a0:	subs	r4, r0, #0
   130a4:	ble	13148 <error@@Base+0xb44>
   130a8:	sxtb	r4, r4
   130ac:	add	r3, sp, #4
   130b0:	add	sl, r3, r4
   130b4:	sxth	r4, r4
   130b8:	b	13010 <error@@Base+0xa0c>
   130bc:	mov	r0, r9
   130c0:	bl	10a68 <utf8proc_category@plt>
   130c4:	sub	r0, r0, #6
   130c8:	cmp	r0, #2
   130cc:	bhi	130f8 <error@@Base+0xaf4>
   130d0:	mov	r1, sl
   130d4:	ldr	r0, [pc, #140]	; 13168 <error@@Base+0xb64>
   130d8:	bl	109c0 <utf8proc_encode_char@plt>
   130dc:	cmp	r0, #0
   130e0:	ble	13148 <error@@Base+0xb44>
   130e4:	sxtb	r0, r0
   130e8:	add	r4, r4, r0
   130ec:	add	r3, sp, #4
   130f0:	sxth	r4, r4
   130f4:	add	sl, r3, r4
   130f8:	mov	r1, sl
   130fc:	mov	r0, r9
   13100:	bl	109c0 <utf8proc_encode_char@plt>
   13104:	cmp	r0, #0
   13108:	ble	13148 <error@@Base+0xb44>
   1310c:	sxtb	r0, r0
   13110:	add	r4, r4, r0
   13114:	add	r3, sp, #16
   13118:	sxtah	r4, r3, r4
   1311c:	strb	r6, [r4, #-12]
   13120:	b	13064 <error@@Base+0xa60>
   13124:	mov	r2, r9
   13128:	mov	r0, sl
   1312c:	ldr	r1, [pc, #56]	; 1316c <error@@Base+0xb68>
   13130:	bl	10ab0 <sprintf@plt>
   13134:	b	13064 <error@@Base+0xa60>
   13138:	mov	r0, r5
   1313c:	bl	124a8 <getc@plt+0x19bc>
   13140:	add	sp, sp, #20
   13144:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13148:	ldr	r0, [pc, #32]	; 13170 <error@@Base+0xb6c>
   1314c:	bl	12604 <error@@Base>
   13150:	andeq	r3, r1, r4, ror #12
   13154:	andeq	r4, r1, ip, lsl #7
   13158:	andeq	r4, r1, r4, asr #7
   1315c:	andeq	r4, r1, r4, asr r4
   13160:	andeq	r3, r1, ip, asr r7
   13164:	ldrshtcs	pc, [pc], #-254	; <UNPREDICTABLE>
   13168:	andeq	r2, r0, ip, asr #11
   1316c:	andeq	r4, r1, ip, asr #8
   13170:	andeq	r4, r1, ip, lsr #8
   13174:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13178:	mov	r5, #0
   1317c:	ldrb	r3, [r1]
   13180:	sub	sp, sp, #12
   13184:	cmp	r3, r5
   13188:	str	r5, [sp, #4]
   1318c:	beq	131fc <error@@Base+0xbf8>
   13190:	mov	r4, r1
   13194:	mov	r9, r0
   13198:	mvn	r8, #0
   1319c:	mov	r7, #16
   131a0:	mov	r6, #1
   131a4:	b	131d0 <error@@Base+0xbcc>
   131a8:	ldr	sl, [sp, #4]
   131ac:	bl	12640 <error@@Base+0x3c>
   131b0:	mov	r1, r0
   131b4:	strb	r5, [r0, #8]
   131b8:	str	sl, [r0, #12]
   131bc:	mov	r0, r9
   131c0:	bl	1326c <error@@Base+0xc68>
   131c4:	ldrb	r3, [r4, fp]!
   131c8:	cmp	r3, #0
   131cc:	beq	131fc <error@@Base+0xbf8>
   131d0:	mov	r1, r8
   131d4:	add	r2, sp, #4
   131d8:	mov	r0, r4
   131dc:	bl	10a20 <utf8proc_iterate@plt>
   131e0:	mov	r1, r7
   131e4:	subs	fp, r0, #0
   131e8:	mov	r0, r6
   131ec:	bgt	131a8 <error@@Base+0xba4>
   131f0:	mov	r0, #0
   131f4:	add	sp, sp, #12
   131f8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   131fc:	mov	r0, #1
   13200:	add	sp, sp, #12
   13204:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13208:	mov	r3, #0
   1320c:	str	r3, [r0, #4]
   13210:	str	r3, [r0]
   13214:	str	r3, [r0, #8]
   13218:	str	r3, [r0, #12]
   1321c:	bx	lr
   13220:	ldr	r3, [r0]
   13224:	mov	r2, #0
   13228:	cmp	r3, r2
   1322c:	push	{r4, lr}
   13230:	mov	r4, r0
   13234:	stm	r1, {r2, r3}
   13238:	str	r1, [r0]
   1323c:	streq	r1, [r0, #4]
   13240:	ldr	r0, [r0, #8]
   13244:	strne	r1, [r3]
   13248:	cmp	r0, #0
   1324c:	beq	1325c <error@@Base+0xc58>
   13250:	bl	1099c <free@plt>
   13254:	mov	r3, #0
   13258:	str	r3, [r4, #8]
   1325c:	ldr	r3, [r4, #12]
   13260:	add	r3, r3, #1
   13264:	str	r3, [r4, #12]
   13268:	pop	{r4, pc}
   1326c:	ldr	r3, [r0, #4]
   13270:	mov	r2, #0
   13274:	cmp	r3, r2
   13278:	push	{r4, lr}
   1327c:	mov	r4, r0
   13280:	str	r3, [r1]
   13284:	str	r2, [r1, #4]
   13288:	streq	r1, [r0]
   1328c:	ldr	r0, [r0, #8]
   13290:	strne	r1, [r3, #4]
   13294:	cmp	r0, #0
   13298:	str	r1, [r4, #4]
   1329c:	beq	132ac <error@@Base+0xca8>
   132a0:	bl	1099c <free@plt>
   132a4:	mov	r3, #0
   132a8:	str	r3, [r4, #8]
   132ac:	ldr	r3, [r4, #12]
   132b0:	add	r3, r3, #1
   132b4:	str	r3, [r4, #12]
   132b8:	pop	{r4, pc}
   132bc:	ldr	r3, [r2]
   132c0:	push	{r4, lr}
   132c4:	cmp	r3, #0
   132c8:	str	r3, [r1]
   132cc:	str	r2, [r1, #4]
   132d0:	mov	r4, r0
   132d4:	streq	r1, [r0]
   132d8:	ldr	r0, [r0, #8]
   132dc:	strne	r1, [r3, #4]
   132e0:	cmp	r0, #0
   132e4:	str	r1, [r2]
   132e8:	beq	132f8 <error@@Base+0xcf4>
   132ec:	bl	1099c <free@plt>
   132f0:	mov	r3, #0
   132f4:	str	r3, [r4, #8]
   132f8:	ldr	r3, [r4, #12]
   132fc:	add	r3, r3, #1
   13300:	str	r3, [r4, #12]
   13304:	pop	{r4, pc}
   13308:	ldr	r3, [r1, #4]
   1330c:	push	{r4, lr}
   13310:	cmp	r3, #0
   13314:	stm	r2, {r1, r3}
   13318:	mov	r4, r0
   1331c:	str	r2, [r1, #4]
   13320:	streq	r2, [r0, #4]
   13324:	ldr	r0, [r0, #8]
   13328:	strne	r2, [r3]
   1332c:	cmp	r0, #0
   13330:	beq	13340 <error@@Base+0xd3c>
   13334:	bl	1099c <free@plt>
   13338:	mov	r3, #0
   1333c:	str	r3, [r4, #8]
   13340:	ldr	r3, [r4, #12]
   13344:	add	r3, r3, #1
   13348:	str	r3, [r4, #12]
   1334c:	pop	{r4, pc}
   13350:	ldr	r3, [r1]
   13354:	ldr	r2, [r1, #4]
   13358:	cmp	r3, #0
   1335c:	push	{r4, r5, r6, lr}
   13360:	mov	r4, r0
   13364:	strne	r2, [r3, #4]
   13368:	ldrne	r2, [r1, #4]
   1336c:	streq	r2, [r0]
   13370:	cmp	r2, #0
   13374:	streq	r3, [r0, #4]
   13378:	ldr	r0, [r0, #8]
   1337c:	mov	r5, #0
   13380:	strne	r3, [r2]
   13384:	cmp	r0, r5
   13388:	str	r5, [r1, #4]
   1338c:	str	r5, [r1]
   13390:	beq	1339c <error@@Base+0xd98>
   13394:	bl	1099c <free@plt>
   13398:	str	r5, [r4, #8]
   1339c:	ldr	r3, [r4, #12]
   133a0:	sub	r3, r3, #1
   133a4:	str	r3, [r4, #12]
   133a8:	pop	{r4, r5, r6, pc}
   133ac:	ldr	r3, [r0, #8]
   133b0:	cmp	r3, #0
   133b4:	bxne	lr
   133b8:	ldr	r3, [r0, #12]
   133bc:	cmp	r3, #0
   133c0:	bxeq	lr
   133c4:	push	{r4, lr}
   133c8:	mov	r1, #4
   133cc:	mov	r4, r0
   133d0:	mov	r0, r3
   133d4:	bl	12640 <error@@Base+0x3c>
   133d8:	ldr	r3, [r4]
   133dc:	cmp	r3, #0
   133e0:	str	r0, [r4, #8]
   133e4:	popeq	{r4, pc}
   133e8:	sub	r0, r0, #4
   133ec:	str	r3, [r0, #4]!
   133f0:	ldr	r3, [r3, #4]
   133f4:	cmp	r3, #0
   133f8:	bne	133ec <error@@Base+0xde8>
   133fc:	pop	{r4, pc}
   13400:	push	{r4, r5, r6, r7, r8, lr}
   13404:	ldr	r4, [r0]
   13408:	cmp	r4, #0
   1340c:	popeq	{r4, r5, r6, r7, r8, pc}
   13410:	mov	r6, r1
   13414:	mov	r5, r0
   13418:	mov	r7, #0
   1341c:	ldr	r3, [r4]
   13420:	ldr	r2, [r4, #4]
   13424:	cmp	r3, #0
   13428:	strne	r2, [r3, #4]
   1342c:	ldrne	r2, [r4, #4]
   13430:	ldr	r0, [r5, #8]
   13434:	streq	r2, [r5]
   13438:	cmp	r2, #0
   1343c:	strne	r3, [r2]
   13440:	streq	r3, [r5, #4]
   13444:	cmp	r0, #0
   13448:	str	r7, [r4, #4]
   1344c:	str	r7, [r4]
   13450:	beq	1345c <error@@Base+0xe58>
   13454:	bl	1099c <free@plt>
   13458:	str	r7, [r5, #8]
   1345c:	ldr	r3, [r5, #12]
   13460:	mov	r0, r4
   13464:	sub	r3, r3, #1
   13468:	str	r3, [r5, #12]
   1346c:	blx	r6
   13470:	ldr	r4, [r5]
   13474:	cmp	r4, #0
   13478:	bne	1341c <error@@Base+0xe18>
   1347c:	pop	{r4, r5, r6, r7, r8, pc}
   13480:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   13484:	mov	r7, r0
   13488:	ldr	r6, [pc, #72]	; 134d8 <error@@Base+0xed4>
   1348c:	ldr	r5, [pc, #72]	; 134dc <error@@Base+0xed8>
   13490:	add	r6, pc, r6
   13494:	add	r5, pc, r5
   13498:	sub	r6, r6, r5
   1349c:	mov	r8, r1
   134a0:	mov	r9, r2
   134a4:	bl	1094c <calloc@plt-0x20>
   134a8:	asrs	r6, r6, #2
   134ac:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   134b0:	mov	r4, #0
   134b4:	add	r4, r4, #1
   134b8:	ldr	r3, [r5], #4
   134bc:	mov	r2, r9
   134c0:	mov	r1, r8
   134c4:	mov	r0, r7
   134c8:	blx	r3
   134cc:	cmp	r6, r4
   134d0:	bne	134b4 <error@@Base+0xeb0>
   134d4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   134d8:	andeq	r1, r1, r8, ror #18
   134dc:	andeq	r1, r1, r0, ror #18
   134e0:	bx	lr

Disassembly of section .fini:

000134e4 <.fini>:
   134e4:	push	{r3, lr}
   134e8:	pop	{r3, pc}
