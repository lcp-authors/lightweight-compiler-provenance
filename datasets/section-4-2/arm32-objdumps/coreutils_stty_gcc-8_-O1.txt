
../repos/coreutils/src/stty:     file format elf32-littlearm


Disassembly of section .init:

00010e74 <.init>:
   10e74:	push	{r3, lr}
   10e78:	bl	111ac <tcgetattr@plt+0x48>
   10e7c:	pop	{r3, pc}

Disassembly of section .plt:

00010e80 <calloc@plt-0x14>:
   10e80:	push	{lr}		; (str lr, [sp, #-4]!)
   10e84:	ldr	lr, [pc, #4]	; 10e90 <calloc@plt-0x4>
   10e88:	add	lr, pc, lr
   10e8c:	ldr	pc, [lr, #8]!
   10e90:	andeq	ip, r1, r0, ror r1

00010e94 <calloc@plt>:
   10e94:	add	ip, pc, #0, 12
   10e98:	add	ip, ip, #28, 20	; 0x1c000
   10e9c:	ldr	pc, [ip, #368]!	; 0x170

00010ea0 <fputs_unlocked@plt>:
   10ea0:	add	ip, pc, #0, 12
   10ea4:	add	ip, ip, #28, 20	; 0x1c000
   10ea8:	ldr	pc, [ip, #360]!	; 0x168

00010eac <strcmp@plt>:
   10eac:	add	ip, pc, #0, 12
   10eb0:	add	ip, ip, #28, 20	; 0x1c000
   10eb4:	ldr	pc, [ip, #352]!	; 0x160

00010eb8 <strtol@plt>:
   10eb8:	add	ip, pc, #0, 12
   10ebc:	add	ip, ip, #28, 20	; 0x1c000
   10ec0:	ldr	pc, [ip, #344]!	; 0x158

00010ec4 <fflush@plt>:
   10ec4:	add	ip, pc, #0, 12
   10ec8:	add	ip, ip, #28, 20	; 0x1c000
   10ecc:	ldr	pc, [ip, #336]!	; 0x150

00010ed0 <free@plt>:
   10ed0:	add	ip, pc, #0, 12
   10ed4:	add	ip, ip, #28, 20	; 0x1c000
   10ed8:	ldr	pc, [ip, #328]!	; 0x148

00010edc <_exit@plt>:
   10edc:	add	ip, pc, #0, 12
   10ee0:	add	ip, ip, #28, 20	; 0x1c000
   10ee4:	ldr	pc, [ip, #320]!	; 0x140

00010ee8 <memcpy@plt>:
   10ee8:	add	ip, pc, #0, 12
   10eec:	add	ip, ip, #28, 20	; 0x1c000
   10ef0:	ldr	pc, [ip, #312]!	; 0x138

00010ef4 <__strtoull_internal@plt>:
   10ef4:	add	ip, pc, #0, 12
   10ef8:	add	ip, ip, #28, 20	; 0x1c000
   10efc:	ldr	pc, [ip, #304]!	; 0x130

00010f00 <mbsinit@plt>:
   10f00:	add	ip, pc, #0, 12
   10f04:	add	ip, ip, #28, 20	; 0x1c000
   10f08:	ldr	pc, [ip, #296]!	; 0x128

00010f0c <memcmp@plt>:
   10f0c:	add	ip, pc, #0, 12
   10f10:	add	ip, ip, #28, 20	; 0x1c000
   10f14:	ldr	pc, [ip, #288]!	; 0x120

00010f18 <fputc_unlocked@plt>:
   10f18:	add	ip, pc, #0, 12
   10f1c:	add	ip, ip, #28, 20	; 0x1c000
   10f20:	ldr	pc, [ip, #280]!	; 0x118

00010f24 <dcgettext@plt>:
   10f24:	add	ip, pc, #0, 12
   10f28:	add	ip, ip, #28, 20	; 0x1c000
   10f2c:	ldr	pc, [ip, #272]!	; 0x110

00010f30 <cfgetispeed@plt>:
   10f30:	add	ip, pc, #0, 12
   10f34:	add	ip, ip, #28, 20	; 0x1c000
   10f38:	ldr	pc, [ip, #264]!	; 0x108

00010f3c <dup2@plt>:
   10f3c:	add	ip, pc, #0, 12
   10f40:	add	ip, ip, #28, 20	; 0x1c000
   10f44:	ldr	pc, [ip, #256]!	; 0x100

00010f48 <realloc@plt>:
   10f48:	add	ip, pc, #0, 12
   10f4c:	add	ip, ip, #28, 20	; 0x1c000
   10f50:	ldr	pc, [ip, #248]!	; 0xf8

00010f54 <textdomain@plt>:
   10f54:	add	ip, pc, #0, 12
   10f58:	add	ip, ip, #28, 20	; 0x1c000
   10f5c:	ldr	pc, [ip, #240]!	; 0xf0

00010f60 <iswprint@plt>:
   10f60:	add	ip, pc, #0, 12
   10f64:	add	ip, ip, #28, 20	; 0x1c000
   10f68:	ldr	pc, [ip, #232]!	; 0xe8

00010f6c <cfsetospeed@plt>:
   10f6c:	add	ip, pc, #0, 12
   10f70:	add	ip, ip, #28, 20	; 0x1c000
   10f74:	ldr	pc, [ip, #224]!	; 0xe0

00010f78 <fwrite@plt>:
   10f78:	add	ip, pc, #0, 12
   10f7c:	add	ip, ip, #28, 20	; 0x1c000
   10f80:	ldr	pc, [ip, #216]!	; 0xd8

00010f84 <ioctl@plt>:
   10f84:	add	ip, pc, #0, 12
   10f88:	add	ip, ip, #28, 20	; 0x1c000
   10f8c:	ldr	pc, [ip, #208]!	; 0xd0

00010f90 <lseek64@plt>:
   10f90:	add	ip, pc, #0, 12
   10f94:	add	ip, ip, #28, 20	; 0x1c000
   10f98:	ldr	pc, [ip, #200]!	; 0xc8

00010f9c <__ctype_get_mb_cur_max@plt>:
   10f9c:	add	ip, pc, #0, 12
   10fa0:	add	ip, ip, #28, 20	; 0x1c000
   10fa4:	ldr	pc, [ip, #192]!	; 0xc0

00010fa8 <tcsetattr@plt>:
   10fa8:	add	ip, pc, #0, 12
   10fac:	add	ip, ip, #28, 20	; 0x1c000
   10fb0:	ldr	pc, [ip, #184]!	; 0xb8

00010fb4 <__fpending@plt>:
   10fb4:	add	ip, pc, #0, 12
   10fb8:	add	ip, ip, #28, 20	; 0x1c000
   10fbc:	ldr	pc, [ip, #176]!	; 0xb0

00010fc0 <mbrtowc@plt>:
   10fc0:	add	ip, pc, #0, 12
   10fc4:	add	ip, ip, #28, 20	; 0x1c000
   10fc8:	ldr	pc, [ip, #168]!	; 0xa8

00010fcc <error@plt>:
   10fcc:	add	ip, pc, #0, 12
   10fd0:	add	ip, ip, #28, 20	; 0x1c000
   10fd4:	ldr	pc, [ip, #160]!	; 0xa0

00010fd8 <open64@plt>:
   10fd8:	add	ip, pc, #0, 12
   10fdc:	add	ip, ip, #28, 20	; 0x1c000
   10fe0:	ldr	pc, [ip, #152]!	; 0x98

00010fe4 <getenv@plt>:
   10fe4:	add	ip, pc, #0, 12
   10fe8:	add	ip, ip, #28, 20	; 0x1c000
   10fec:	ldr	pc, [ip, #144]!	; 0x90

00010ff0 <malloc@plt>:
   10ff0:	add	ip, pc, #0, 12
   10ff4:	add	ip, ip, #28, 20	; 0x1c000
   10ff8:	ldr	pc, [ip, #136]!	; 0x88

00010ffc <__libc_start_main@plt>:
   10ffc:	add	ip, pc, #0, 12
   11000:	add	ip, ip, #28, 20	; 0x1c000
   11004:	ldr	pc, [ip, #128]!	; 0x80

00011008 <__freading@plt>:
   11008:	add	ip, pc, #0, 12
   1100c:	add	ip, ip, #28, 20	; 0x1c000
   11010:	ldr	pc, [ip, #120]!	; 0x78

00011014 <__gmon_start__@plt>:
   11014:	add	ip, pc, #0, 12
   11018:	add	ip, ip, #28, 20	; 0x1c000
   1101c:	ldr	pc, [ip, #112]!	; 0x70

00011020 <getopt_long@plt>:
   11020:	add	ip, pc, #0, 12
   11024:	add	ip, ip, #28, 20	; 0x1c000
   11028:	ldr	pc, [ip, #104]!	; 0x68

0001102c <__ctype_b_loc@plt>:
   1102c:	add	ip, pc, #0, 12
   11030:	add	ip, ip, #28, 20	; 0x1c000
   11034:	ldr	pc, [ip, #96]!	; 0x60

00011038 <exit@plt>:
   11038:	add	ip, pc, #0, 12
   1103c:	add	ip, ip, #28, 20	; 0x1c000
   11040:	ldr	pc, [ip, #88]!	; 0x58

00011044 <strtoul@plt>:
   11044:	add	ip, pc, #0, 12
   11048:	add	ip, ip, #28, 20	; 0x1c000
   1104c:	ldr	pc, [ip, #80]!	; 0x50

00011050 <strlen@plt>:
   11050:	add	ip, pc, #0, 12
   11054:	add	ip, ip, #28, 20	; 0x1c000
   11058:	ldr	pc, [ip, #72]!	; 0x48

0001105c <strchr@plt>:
   1105c:	add	ip, pc, #0, 12
   11060:	add	ip, ip, #28, 20	; 0x1c000
   11064:	ldr	pc, [ip, #64]!	; 0x40

00011068 <cfsetispeed@plt>:
   11068:	add	ip, pc, #0, 12
   1106c:	add	ip, ip, #28, 20	; 0x1c000
   11070:	ldr	pc, [ip, #56]!	; 0x38

00011074 <cfgetospeed@plt>:
   11074:	add	ip, pc, #0, 12
   11078:	add	ip, ip, #28, 20	; 0x1c000
   1107c:	ldr	pc, [ip, #48]!	; 0x30

00011080 <__errno_location@plt>:
   11080:	add	ip, pc, #0, 12
   11084:	add	ip, ip, #28, 20	; 0x1c000
   11088:	ldr	pc, [ip, #40]!	; 0x28

0001108c <__cxa_atexit@plt>:
   1108c:	add	ip, pc, #0, 12
   11090:	add	ip, ip, #28, 20	; 0x1c000
   11094:	ldr	pc, [ip, #32]!

00011098 <__vasprintf_chk@plt>:
   11098:	add	ip, pc, #0, 12
   1109c:	add	ip, ip, #28, 20	; 0x1c000
   110a0:	ldr	pc, [ip, #24]!

000110a4 <memset@plt>:
   110a4:	add	ip, pc, #0, 12
   110a8:	add	ip, ip, #28, 20	; 0x1c000
   110ac:	ldr	pc, [ip, #16]!

000110b0 <__printf_chk@plt>:
   110b0:	add	ip, pc, #0, 12
   110b4:	add	ip, ip, #28, 20	; 0x1c000
   110b8:	ldr	pc, [ip, #8]!

000110bc <fileno@plt>:
   110bc:	add	ip, pc, #0, 12
   110c0:	add	ip, ip, #28, 20	; 0x1c000
   110c4:	ldr	pc, [ip, #0]!

000110c8 <__fprintf_chk@plt>:
   110c8:	add	ip, pc, #0, 12
   110cc:	add	ip, ip, #110592	; 0x1b000
   110d0:	ldr	pc, [ip, #4088]!	; 0xff8

000110d4 <fclose@plt>:
   110d4:	add	ip, pc, #0, 12
   110d8:	add	ip, ip, #110592	; 0x1b000
   110dc:	ldr	pc, [ip, #4080]!	; 0xff0

000110e0 <fseeko64@plt>:
   110e0:	add	ip, pc, #0, 12
   110e4:	add	ip, ip, #110592	; 0x1b000
   110e8:	ldr	pc, [ip, #4072]!	; 0xfe8

000110ec <fcntl64@plt>:
   110ec:	add	ip, pc, #0, 12
   110f0:	add	ip, ip, #110592	; 0x1b000
   110f4:	ldr	pc, [ip, #4064]!	; 0xfe0

000110f8 <__overflow@plt>:
   110f8:	add	ip, pc, #0, 12
   110fc:	add	ip, ip, #110592	; 0x1b000
   11100:	ldr	pc, [ip, #4056]!	; 0xfd8

00011104 <setlocale@plt>:
   11104:	add	ip, pc, #0, 12
   11108:	add	ip, ip, #110592	; 0x1b000
   1110c:	ldr	pc, [ip, #4048]!	; 0xfd0

00011110 <strrchr@plt>:
   11110:	add	ip, pc, #0, 12
   11114:	add	ip, ip, #110592	; 0x1b000
   11118:	ldr	pc, [ip, #4040]!	; 0xfc8

0001111c <nl_langinfo@plt>:
   1111c:	add	ip, pc, #0, 12
   11120:	add	ip, ip, #110592	; 0x1b000
   11124:	ldr	pc, [ip, #4032]!	; 0xfc0

00011128 <bindtextdomain@plt>:
   11128:	add	ip, pc, #0, 12
   1112c:	add	ip, ip, #110592	; 0x1b000
   11130:	ldr	pc, [ip, #4024]!	; 0xfb8

00011134 <strncmp@plt>:
   11134:	add	ip, pc, #0, 12
   11138:	add	ip, ip, #110592	; 0x1b000
   1113c:	ldr	pc, [ip, #4016]!	; 0xfb0

00011140 <abort@plt>:
   11140:	add	ip, pc, #0, 12
   11144:	add	ip, ip, #110592	; 0x1b000
   11148:	ldr	pc, [ip, #4008]!	; 0xfa8

0001114c <close@plt>:
   1114c:	add	ip, pc, #0, 12
   11150:	add	ip, ip, #110592	; 0x1b000
   11154:	ldr	pc, [ip, #4000]!	; 0xfa0

00011158 <__assert_fail@plt>:
   11158:	add	ip, pc, #0, 12
   1115c:	add	ip, ip, #110592	; 0x1b000
   11160:	ldr	pc, [ip, #3992]!	; 0xf98

00011164 <tcgetattr@plt>:
   11164:	add	ip, pc, #0, 12
   11168:	add	ip, ip, #110592	; 0x1b000
   1116c:	ldr	pc, [ip, #3984]!	; 0xf90

Disassembly of section .text:

00011170 <.text>:
   11170:	mov	fp, #0
   11174:	mov	lr, #0
   11178:	pop	{r1}		; (ldr r1, [sp], #4)
   1117c:	mov	r2, sp
   11180:	push	{r2}		; (str r2, [sp, #-4]!)
   11184:	push	{r0}		; (str r0, [sp, #-4]!)
   11188:	ldr	ip, [pc, #16]	; 111a0 <tcgetattr@plt+0x3c>
   1118c:	push	{ip}		; (str ip, [sp, #-4]!)
   11190:	ldr	r0, [pc, #12]	; 111a4 <tcgetattr@plt+0x40>
   11194:	ldr	r3, [pc, #12]	; 111a8 <tcgetattr@plt+0x44>
   11198:	bl	10ffc <__libc_start_main@plt>
   1119c:	bl	11140 <abort@plt>
   111a0:	andeq	r8, r1, r0, lsl #16
   111a4:	andeq	r3, r1, r0, ror #11
   111a8:	andeq	r8, r1, r0, lsr #15
   111ac:	ldr	r3, [pc, #20]	; 111c8 <tcgetattr@plt+0x64>
   111b0:	ldr	r2, [pc, #20]	; 111cc <tcgetattr@plt+0x68>
   111b4:	add	r3, pc, r3
   111b8:	ldr	r2, [r3, r2]
   111bc:	cmp	r2, #0
   111c0:	bxeq	lr
   111c4:	b	11014 <__gmon_start__@plt>
   111c8:	andeq	fp, r1, r4, asr #28
   111cc:	andeq	r0, r0, r0, lsl #2
   111d0:	ldr	r0, [pc, #24]	; 111f0 <tcgetattr@plt+0x8c>
   111d4:	ldr	r3, [pc, #24]	; 111f4 <tcgetattr@plt+0x90>
   111d8:	cmp	r3, r0
   111dc:	bxeq	lr
   111e0:	ldr	r3, [pc, #16]	; 111f8 <tcgetattr@plt+0x94>
   111e4:	cmp	r3, #0
   111e8:	bxeq	lr
   111ec:	bx	r3
   111f0:	andeq	sp, r2, r8, asr r1
   111f4:	andeq	sp, r2, r8, asr r1
   111f8:	andeq	r0, r0, r0
   111fc:	ldr	r0, [pc, #36]	; 11228 <tcgetattr@plt+0xc4>
   11200:	ldr	r1, [pc, #36]	; 1122c <tcgetattr@plt+0xc8>
   11204:	sub	r1, r1, r0
   11208:	asr	r1, r1, #2
   1120c:	add	r1, r1, r1, lsr #31
   11210:	asrs	r1, r1, #1
   11214:	bxeq	lr
   11218:	ldr	r3, [pc, #16]	; 11230 <tcgetattr@plt+0xcc>
   1121c:	cmp	r3, #0
   11220:	bxeq	lr
   11224:	bx	r3
   11228:	andeq	sp, r2, r8, asr r1
   1122c:	andeq	sp, r2, r8, asr r1
   11230:	andeq	r0, r0, r0
   11234:	push	{r4, lr}
   11238:	ldr	r4, [pc, #24]	; 11258 <tcgetattr@plt+0xf4>
   1123c:	ldrb	r3, [r4]
   11240:	cmp	r3, #0
   11244:	popne	{r4, pc}
   11248:	bl	111d0 <tcgetattr@plt+0x6c>
   1124c:	mov	r3, #1
   11250:	strb	r3, [r4]
   11254:	pop	{r4, pc}
   11258:	andeq	sp, r2, ip, ror r1
   1125c:	b	111fc <tcgetattr@plt+0x98>
   11260:	cmp	r0, #0
   11264:	movwne	r3, #34856	; 0x8828
   11268:	movtne	r3, #1
   1126c:	movne	r2, #0
   11270:	beq	112ac <tcgetattr@plt+0x148>
   11274:	add	r2, r2, #1
   11278:	ldr	r1, [r3, #12]
   1127c:	cmp	r1, #0
   11280:	beq	112b4 <tcgetattr@plt+0x150>
   11284:	add	r3, r3, #12
   11288:	ldr	r1, [r3, #4]
   1128c:	cmp	r1, r0
   11290:	bne	11274 <tcgetattr@plt+0x110>
   11294:	movw	r3, #34856	; 0x8828
   11298:	movt	r3, #1
   1129c:	add	r2, r2, r2, lsl #1
   112a0:	add	r2, r3, r2, lsl #2
   112a4:	ldr	r0, [r2, #8]
   112a8:	bx	lr
   112ac:	mov	r2, #0
   112b0:	b	11294 <tcgetattr@plt+0x130>
   112b4:	mov	r0, #0
   112b8:	bx	lr
   112bc:	cmp	r0, #0
   112c0:	beq	113bc <tcgetattr@plt+0x258>
   112c4:	cmp	r0, #31
   112c8:	bls	1138c <tcgetattr@plt+0x228>
   112cc:	cmp	r0, #126	; 0x7e
   112d0:	bhi	112e4 <tcgetattr@plt+0x180>
   112d4:	movw	r3, #53632	; 0xd180
   112d8:	movt	r3, #2
   112dc:	strb	r0, [r3], #1
   112e0:	b	113a8 <tcgetattr@plt+0x244>
   112e4:	cmp	r0, #127	; 0x7f
   112e8:	beq	1132c <tcgetattr@plt+0x1c8>
   112ec:	movw	r3, #53632	; 0xd180
   112f0:	movt	r3, #2
   112f4:	mov	r2, #77	; 0x4d
   112f8:	strb	r2, [r3]
   112fc:	mov	r2, #45	; 0x2d
   11300:	strb	r2, [r3, #1]
   11304:	cmp	r0, #159	; 0x9f
   11308:	bls	1136c <tcgetattr@plt+0x208>
   1130c:	cmp	r0, #255	; 0xff
   11310:	beq	1134c <tcgetattr@plt+0x1e8>
   11314:	movw	r3, #53632	; 0xd180
   11318:	movt	r3, #2
   1131c:	sub	r0, r0, #128	; 0x80
   11320:	strb	r0, [r3, #2]
   11324:	add	r3, r3, #3
   11328:	b	113a8 <tcgetattr@plt+0x244>
   1132c:	movw	r3, #53632	; 0xd180
   11330:	movt	r3, #2
   11334:	mov	r2, #94	; 0x5e
   11338:	strb	r2, [r3]
   1133c:	mov	r2, #63	; 0x3f
   11340:	strb	r2, [r3, #1]
   11344:	add	r3, r3, #2
   11348:	b	113a8 <tcgetattr@plt+0x244>
   1134c:	movw	r3, #53632	; 0xd180
   11350:	movt	r3, #2
   11354:	mov	r2, #94	; 0x5e
   11358:	strb	r2, [r3, #2]
   1135c:	mov	r2, #63	; 0x3f
   11360:	strb	r2, [r3, #3]
   11364:	add	r3, r3, #4
   11368:	b	113a8 <tcgetattr@plt+0x244>
   1136c:	movw	r3, #53632	; 0xd180
   11370:	movt	r3, #2
   11374:	mov	r2, #94	; 0x5e
   11378:	strb	r2, [r3, #2]
   1137c:	sub	r0, r0, #64	; 0x40
   11380:	strb	r0, [r3, #3]
   11384:	add	r3, r3, #4
   11388:	b	113a8 <tcgetattr@plt+0x244>
   1138c:	movw	r3, #53632	; 0xd180
   11390:	movt	r3, #2
   11394:	mov	r2, #94	; 0x5e
   11398:	strb	r2, [r3]
   1139c:	add	r0, r0, #64	; 0x40
   113a0:	strb	r0, [r3, #1]
   113a4:	add	r3, r3, #2
   113a8:	mov	r2, #0
   113ac:	strb	r2, [r3]
   113b0:	movw	r0, #53632	; 0xd180
   113b4:	movt	r0, #2
   113b8:	bx	lr
   113bc:	movw	r0, #37496	; 0x9278
   113c0:	movt	r0, #1
   113c4:	bx	lr
   113c8:	strd	r4, [sp, #-16]!
   113cc:	str	r6, [sp, #8]
   113d0:	str	lr, [sp, #12]
   113d4:	mov	r6, r0
   113d8:	movw	r4, #34856	; 0x8828
   113dc:	movt	r4, #1
   113e0:	mov	r5, #0
   113e4:	movw	r1, #46972	; 0xb77c
   113e8:	movt	r1, #1
   113ec:	mov	r0, r6
   113f0:	bl	10eac <strcmp@plt>
   113f4:	cmp	r0, #0
   113f8:	beq	11414 <tcgetattr@plt+0x2b0>
   113fc:	add	r5, r5, #1
   11400:	ldr	r1, [r4, #12]!
   11404:	cmp	r1, #0
   11408:	bne	113ec <tcgetattr@plt+0x288>
   1140c:	mvn	r0, #0
   11410:	b	11428 <tcgetattr@plt+0x2c4>
   11414:	movw	r3, #34856	; 0x8828
   11418:	movt	r3, #1
   1141c:	add	r5, r5, r5, lsl #1
   11420:	add	r5, r3, r5, lsl #2
   11424:	ldr	r0, [r5, #4]
   11428:	ldrd	r4, [sp]
   1142c:	ldr	r6, [sp, #8]
   11430:	add	sp, sp, #12
   11434:	pop	{pc}		; (ldr pc, [sp], #4)
   11438:	push	{lr}		; (str lr, [sp, #-4]!)
   1143c:	sub	sp, sp, #28
   11440:	add	r2, sp, #16
   11444:	movw	r1, #21523	; 0x5413
   11448:	mov	r0, #1
   1144c:	bl	10f84 <ioctl@plt>
   11450:	cmp	r0, #0
   11454:	bne	11464 <tcgetattr@plt+0x300>
   11458:	ldrh	r0, [sp, #18]
   1145c:	cmp	r0, #0
   11460:	bne	114b4 <tcgetattr@plt+0x350>
   11464:	movw	r0, #37504	; 0x9280
   11468:	movt	r0, #1
   1146c:	bl	10fe4 <getenv@plt>
   11470:	cmp	r0, #0
   11474:	beq	114a8 <tcgetattr@plt+0x344>
   11478:	movw	r3, #42768	; 0xa710
   1147c:	movt	r3, #1
   11480:	str	r3, [sp]
   11484:	add	r3, sp, #12
   11488:	mov	r2, #0
   1148c:	mov	r1, r2
   11490:	bl	1769c <tcgetattr@plt+0x6538>
   11494:	cmp	r0, #0
   11498:	bne	114a8 <tcgetattr@plt+0x344>
   1149c:	ldr	r3, [sp, #12]
   114a0:	cmp	r3, #0
   114a4:	bgt	114b0 <tcgetattr@plt+0x34c>
   114a8:	mov	r3, #80	; 0x50
   114ac:	str	r3, [sp, #12]
   114b0:	ldr	r0, [sp, #12]
   114b4:	add	sp, sp, #28
   114b8:	pop	{pc}		; (ldr pc, [sp], #4)
   114bc:	cmp	r0, #4
   114c0:	ldrls	pc, [pc, r0, lsl #2]
   114c4:	b	114fc <tcgetattr@plt+0x398>
   114c8:	ldrdeq	r1, [r1], -ip
   114cc:	andeq	r1, r1, r4, ror #9
   114d0:	andeq	r1, r1, ip, ror #9
   114d4:	strdeq	r1, [r1], -r4
   114d8:	andeq	r1, r1, r8, lsl #10
   114dc:	add	r0, r1, #8
   114e0:	bx	lr
   114e4:	mov	r0, r1
   114e8:	bx	lr
   114ec:	add	r0, r1, #4
   114f0:	bx	lr
   114f4:	add	r0, r1, #12
   114f8:	bx	lr
   114fc:	str	r4, [sp, #-8]!
   11500:	str	lr, [sp, #4]
   11504:	bl	11140 <abort@plt>
   11508:	mov	r0, #0
   1150c:	bx	lr
   11510:	push	{r0, r1, r2, r3}
   11514:	str	r4, [sp, #-8]!
   11518:	str	lr, [sp, #4]
   1151c:	sub	sp, sp, #8
   11520:	add	r3, sp, #20
   11524:	str	r3, [sp, #4]
   11528:	ldr	r2, [sp, #16]
   1152c:	mov	r1, #1
   11530:	mov	r0, sp
   11534:	bl	11098 <__vasprintf_chk@plt>
   11538:	subs	r4, r0, #0
   1153c:	blt	115f0 <tcgetattr@plt+0x48c>
   11540:	movw	r3, #53632	; 0xd180
   11544:	movt	r3, #2
   11548:	ldr	r3, [r3, #12]
   1154c:	cmp	r3, #0
   11550:	ble	115a8 <tcgetattr@plt+0x444>
   11554:	movw	r2, #53632	; 0xd180
   11558:	movt	r2, #2
   1155c:	ldr	r2, [r2, #16]
   11560:	sub	r3, r2, r3
   11564:	cmp	r3, r4
   11568:	bge	11600 <tcgetattr@plt+0x49c>
   1156c:	movw	r3, #53612	; 0xd16c
   11570:	movt	r3, #2
   11574:	ldr	r0, [r3]
   11578:	ldr	r3, [r0, #20]
   1157c:	ldr	r2, [r0, #24]
   11580:	cmp	r3, r2
   11584:	addcc	r2, r3, #1
   11588:	strcc	r2, [r0, #20]
   1158c:	movcc	r2, #10
   11590:	strbcc	r2, [r3]
   11594:	bcs	115f4 <tcgetattr@plt+0x490>
   11598:	movw	r3, #53632	; 0xd180
   1159c:	movt	r3, #2
   115a0:	mov	r2, #0
   115a4:	str	r2, [r3, #12]
   115a8:	movw	r3, #53612	; 0xd16c
   115ac:	movt	r3, #2
   115b0:	ldr	r1, [r3]
   115b4:	ldr	r0, [sp]
   115b8:	bl	10ea0 <fputs_unlocked@plt>
   115bc:	ldr	r0, [sp]
   115c0:	bl	146a4 <tcgetattr@plt+0x3540>
   115c4:	movw	r3, #53632	; 0xd180
   115c8:	movt	r3, #2
   115cc:	ldr	r0, [r3, #12]
   115d0:	add	r0, r0, r4
   115d4:	str	r0, [r3, #12]
   115d8:	add	sp, sp, #8
   115dc:	ldr	r4, [sp]
   115e0:	ldr	lr, [sp, #4]
   115e4:	add	sp, sp, #8
   115e8:	add	sp, sp, #16
   115ec:	bx	lr
   115f0:	bl	17468 <tcgetattr@plt+0x6304>
   115f4:	mov	r1, #10
   115f8:	bl	110f8 <__overflow@plt>
   115fc:	b	11598 <tcgetattr@plt+0x434>
   11600:	movw	r3, #53612	; 0xd16c
   11604:	movt	r3, #2
   11608:	ldr	r0, [r3]
   1160c:	ldr	r3, [r0, #20]
   11610:	ldr	r2, [r0, #24]
   11614:	cmp	r3, r2
   11618:	addcc	r2, r3, #1
   1161c:	strcc	r2, [r0, #20]
   11620:	movcc	r2, #32
   11624:	strbcc	r2, [r3]
   11628:	bcs	11644 <tcgetattr@plt+0x4e0>
   1162c:	movw	r3, #53632	; 0xd180
   11630:	movt	r3, #2
   11634:	ldr	r2, [r3, #12]
   11638:	add	r2, r2, #1
   1163c:	str	r2, [r3, #12]
   11640:	b	115a8 <tcgetattr@plt+0x444>
   11644:	mov	r1, #32
   11648:	bl	110f8 <__overflow@plt>
   1164c:	b	1162c <tcgetattr@plt+0x4c8>
   11650:	strd	r4, [sp, #-24]!	; 0xffffffe8
   11654:	strd	r6, [sp, #8]
   11658:	str	r8, [sp, #16]
   1165c:	str	lr, [sp, #20]
   11660:	mov	r6, r0
   11664:	mov	r5, r1
   11668:	bl	10f30 <cfgetispeed@plt>
   1166c:	cmp	r0, #0
   11670:	bne	116d0 <tcgetattr@plt+0x56c>
   11674:	movw	r3, #37512	; 0x9288
   11678:	movt	r3, #1
   1167c:	movw	r4, #37568	; 0x92c0
   11680:	movt	r4, #1
   11684:	cmp	r5, #0
   11688:	movne	r4, r3
   1168c:	mov	r0, r6
   11690:	bl	11074 <cfgetospeed@plt>
   11694:	bl	11260 <tcgetattr@plt+0xfc>
   11698:	mov	r1, r0
   1169c:	mov	r0, r4
   116a0:	bl	11510 <tcgetattr@plt+0x3ac>
   116a4:	cmp	r5, #0
   116a8:	bne	116bc <tcgetattr@plt+0x558>
   116ac:	movw	r3, #53632	; 0xd180
   116b0:	movt	r3, #2
   116b4:	mov	r2, #0
   116b8:	str	r2, [r3, #12]
   116bc:	ldrd	r4, [sp]
   116c0:	ldrd	r6, [sp, #8]
   116c4:	ldr	r8, [sp, #16]
   116c8:	add	sp, sp, #20
   116cc:	pop	{pc}		; (ldr pc, [sp], #4)
   116d0:	mov	r0, r6
   116d4:	bl	10f30 <cfgetispeed@plt>
   116d8:	mov	r4, r0
   116dc:	mov	r0, r6
   116e0:	bl	11074 <cfgetospeed@plt>
   116e4:	cmp	r4, r0
   116e8:	beq	11674 <tcgetattr@plt+0x510>
   116ec:	movw	r3, #37528	; 0x9298
   116f0:	movt	r3, #1
   116f4:	movw	r4, #37564	; 0x92bc
   116f8:	movt	r4, #1
   116fc:	cmp	r5, #0
   11700:	movne	r4, r3
   11704:	mov	r0, r6
   11708:	bl	10f30 <cfgetispeed@plt>
   1170c:	bl	11260 <tcgetattr@plt+0xfc>
   11710:	mov	r7, r0
   11714:	mov	r0, r6
   11718:	bl	11074 <cfgetospeed@plt>
   1171c:	bl	11260 <tcgetattr@plt+0xfc>
   11720:	mov	r2, r0
   11724:	mov	r1, r7
   11728:	mov	r0, r4
   1172c:	bl	11510 <tcgetattr@plt+0x3ac>
   11730:	b	116a4 <tcgetattr@plt+0x540>
   11734:	strd	r4, [sp, #-12]!
   11738:	str	lr, [sp, #8]
   1173c:	sub	sp, sp, #28
   11740:	mov	r4, r0
   11744:	mov	r5, r1
   11748:	mov	r2, #5
   1174c:	movw	r1, #37576	; 0x92c8
   11750:	movt	r1, #1
   11754:	mov	r0, #0
   11758:	bl	10f24 <dcgettext@plt>
   1175c:	mov	r1, #0
   11760:	str	r1, [sp, #16]
   11764:	str	r0, [sp, #12]
   11768:	movw	r3, #37604	; 0x92e4
   1176c:	movt	r3, #1
   11770:	str	r3, [sp, #8]
   11774:	str	r5, [sp]
   11778:	str	r1, [sp, #4]
   1177c:	mov	r2, #0
   11780:	mov	r3, #0
   11784:	mov	r0, r4
   11788:	bl	174ac <tcgetattr@plt+0x6348>
   1178c:	add	sp, sp, #28
   11790:	ldrd	r4, [sp]
   11794:	add	sp, sp, #8
   11798:	pop	{pc}		; (ldr pc, [sp], #4)
   1179c:	strd	r4, [sp, #-16]!
   117a0:	str	r6, [sp, #8]
   117a4:	str	lr, [sp, #12]
   117a8:	sub	sp, sp, #8
   117ac:	mov	r4, r0
   117b0:	mov	r5, r1
   117b4:	mov	r2, sp
   117b8:	movw	r1, #21523	; 0x5413
   117bc:	mov	r0, #0
   117c0:	bl	10f84 <ioctl@plt>
   117c4:	cmp	r0, #0
   117c8:	beq	1185c <tcgetattr@plt+0x6f8>
   117cc:	bl	11080 <__errno_location@plt>
   117d0:	ldr	r6, [r0]
   117d4:	cmp	r6, #22
   117d8:	bne	117f8 <tcgetattr@plt+0x694>
   117dc:	cmp	r4, #0
   117e0:	beq	11820 <tcgetattr@plt+0x6bc>
   117e4:	add	sp, sp, #8
   117e8:	ldrd	r4, [sp]
   117ec:	ldr	r6, [sp, #8]
   117f0:	add	sp, sp, #12
   117f4:	pop	{pc}		; (ldr pc, [sp], #4)
   117f8:	mov	r2, r5
   117fc:	mov	r1, #3
   11800:	mov	r0, #0
   11804:	bl	16834 <tcgetattr@plt+0x56d0>
   11808:	mov	r3, r0
   1180c:	movw	r2, #47792	; 0xbab0
   11810:	movt	r2, #1
   11814:	mov	r1, r6
   11818:	mov	r0, #1
   1181c:	bl	10fcc <error@plt>
   11820:	mov	r2, #5
   11824:	movw	r1, #37608	; 0x92e8
   11828:	movt	r1, #1
   1182c:	mov	r0, #0
   11830:	bl	10f24 <dcgettext@plt>
   11834:	mov	r4, r0
   11838:	mov	r2, r5
   1183c:	mov	r1, #3
   11840:	mov	r0, #0
   11844:	bl	16834 <tcgetattr@plt+0x56d0>
   11848:	mov	r3, r0
   1184c:	mov	r2, r4
   11850:	mov	r1, #0
   11854:	mov	r0, #1
   11858:	bl	10fcc <error@plt>
   1185c:	cmp	r4, #0
   11860:	bne	1188c <tcgetattr@plt+0x728>
   11864:	ldrh	r2, [sp, #2]
   11868:	ldrh	r1, [sp]
   1186c:	movw	r0, #37648	; 0x9310
   11870:	movt	r0, #1
   11874:	bl	11510 <tcgetattr@plt+0x3ac>
   11878:	movw	r3, #53632	; 0xd180
   1187c:	movt	r3, #2
   11880:	mov	r2, #0
   11884:	str	r2, [r3, #12]
   11888:	b	117e4 <tcgetattr@plt+0x680>
   1188c:	ldrh	r2, [sp, #2]
   11890:	ldrh	r1, [sp]
   11894:	movw	r0, #37656	; 0x9318
   11898:	movt	r0, #1
   1189c:	bl	11510 <tcgetattr@plt+0x3ac>
   118a0:	b	117e4 <tcgetattr@plt+0x680>
   118a4:	strd	r4, [sp, #-20]!	; 0xffffffec
   118a8:	strd	r6, [sp, #8]
   118ac:	str	lr, [sp, #16]
   118b0:	sub	sp, sp, #12
   118b4:	mov	r5, r0
   118b8:	mov	r4, r1
   118bc:	mov	r6, r2
   118c0:	mov	r2, sp
   118c4:	movw	r1, #21523	; 0x5413
   118c8:	mov	r0, #0
   118cc:	bl	10f84 <ioctl@plt>
   118d0:	cmp	r0, #0
   118d4:	beq	118f4 <tcgetattr@plt+0x790>
   118d8:	bl	11080 <__errno_location@plt>
   118dc:	ldr	r7, [r0]
   118e0:	cmp	r7, #22
   118e4:	moveq	r2, #0
   118e8:	moveq	r3, #0
   118ec:	strdeq	r2, [sp]
   118f0:	bne	11930 <tcgetattr@plt+0x7cc>
   118f4:	cmp	r5, #0
   118f8:	strhge	r5, [sp]
   118fc:	cmp	r4, #0
   11900:	strhge	r4, [sp, #2]
   11904:	mov	r2, sp
   11908:	movw	r1, #21524	; 0x5414
   1190c:	mov	r0, #0
   11910:	bl	10f84 <ioctl@plt>
   11914:	cmp	r0, #0
   11918:	bne	11958 <tcgetattr@plt+0x7f4>
   1191c:	add	sp, sp, #12
   11920:	ldrd	r4, [sp]
   11924:	ldrd	r6, [sp, #8]
   11928:	add	sp, sp, #16
   1192c:	pop	{pc}		; (ldr pc, [sp], #4)
   11930:	mov	r2, r6
   11934:	mov	r1, #3
   11938:	mov	r0, #0
   1193c:	bl	16834 <tcgetattr@plt+0x56d0>
   11940:	mov	r3, r0
   11944:	movw	r2, #47792	; 0xbab0
   11948:	movt	r2, #1
   1194c:	mov	r1, r7
   11950:	mov	r0, #1
   11954:	bl	10fcc <error@plt>
   11958:	bl	11080 <__errno_location@plt>
   1195c:	ldr	r4, [r0]
   11960:	mov	r2, r6
   11964:	mov	r1, #3
   11968:	mov	r0, #0
   1196c:	bl	16834 <tcgetattr@plt+0x56d0>
   11970:	mov	r3, r0
   11974:	movw	r2, #47792	; 0xbab0
   11978:	movt	r2, #1
   1197c:	mov	r1, r4
   11980:	mov	r0, #1
   11984:	bl	10fcc <error@plt>
   11988:	push	{lr}		; (str lr, [sp, #-4]!)
   1198c:	sub	sp, sp, #68	; 0x44
   11990:	subs	r5, r0, #0
   11994:	beq	119dc <tcgetattr@plt+0x878>
   11998:	movw	r3, #53608	; 0xd168
   1199c:	movt	r3, #2
   119a0:	ldr	r4, [r3]
   119a4:	mov	r2, #5
   119a8:	movw	r1, #37688	; 0x9338
   119ac:	movt	r1, #1
   119b0:	mov	r0, #0
   119b4:	bl	10f24 <dcgettext@plt>
   119b8:	movw	r3, #53844	; 0xd254
   119bc:	movt	r3, #2
   119c0:	ldr	r3, [r3]
   119c4:	mov	r2, r0
   119c8:	mov	r1, #1
   119cc:	mov	r0, r4
   119d0:	bl	110c8 <__fprintf_chk@plt>
   119d4:	mov	r0, r5
   119d8:	bl	11038 <exit@plt>
   119dc:	mov	r2, #5
   119e0:	movw	r1, #37728	; 0x9360
   119e4:	movt	r1, #1
   119e8:	mov	r0, #0
   119ec:	bl	10f24 <dcgettext@plt>
   119f0:	movw	r3, #53844	; 0xd254
   119f4:	movt	r3, #2
   119f8:	ldr	r2, [r3]
   119fc:	str	r2, [sp]
   11a00:	mov	r3, r2
   11a04:	mov	r1, r0
   11a08:	mov	r0, #1
   11a0c:	bl	110b0 <__printf_chk@plt>
   11a10:	mov	r2, #5
   11a14:	movw	r1, #37880	; 0x93f8
   11a18:	movt	r1, #1
   11a1c:	mov	r0, #0
   11a20:	bl	10f24 <dcgettext@plt>
   11a24:	movw	r4, #53612	; 0xd16c
   11a28:	movt	r4, #2
   11a2c:	ldr	r1, [r4]
   11a30:	bl	10ea0 <fputs_unlocked@plt>
   11a34:	mov	r2, #5
   11a38:	movw	r1, #37924	; 0x9424
   11a3c:	movt	r1, #1
   11a40:	mov	r0, #0
   11a44:	bl	10f24 <dcgettext@plt>
   11a48:	ldr	r1, [r4]
   11a4c:	bl	10ea0 <fputs_unlocked@plt>
   11a50:	mov	r2, #5
   11a54:	movw	r1, #38000	; 0x9470
   11a58:	movt	r1, #1
   11a5c:	mov	r0, #0
   11a60:	bl	10f24 <dcgettext@plt>
   11a64:	ldr	r1, [r4]
   11a68:	bl	10ea0 <fputs_unlocked@plt>
   11a6c:	mov	r2, #5
   11a70:	movw	r1, #38216	; 0x9548
   11a74:	movt	r1, #1
   11a78:	mov	r0, #0
   11a7c:	bl	10f24 <dcgettext@plt>
   11a80:	ldr	r1, [r4]
   11a84:	bl	10ea0 <fputs_unlocked@plt>
   11a88:	mov	r2, #5
   11a8c:	movw	r1, #38264	; 0x9578
   11a90:	movt	r1, #1
   11a94:	mov	r0, #0
   11a98:	bl	10f24 <dcgettext@plt>
   11a9c:	ldr	r1, [r4]
   11aa0:	bl	10ea0 <fputs_unlocked@plt>
   11aa4:	mov	r2, #5
   11aa8:	movw	r1, #38320	; 0x95b0
   11aac:	movt	r1, #1
   11ab0:	mov	r0, #0
   11ab4:	bl	10f24 <dcgettext@plt>
   11ab8:	ldr	r1, [r4]
   11abc:	bl	10ea0 <fputs_unlocked@plt>
   11ac0:	mov	r2, #5
   11ac4:	movw	r1, #38464	; 0x9640
   11ac8:	movt	r1, #1
   11acc:	mov	r0, #0
   11ad0:	bl	10f24 <dcgettext@plt>
   11ad4:	ldr	r1, [r4]
   11ad8:	bl	10ea0 <fputs_unlocked@plt>
   11adc:	mov	r2, #5
   11ae0:	movw	r1, #38488	; 0x9658
   11ae4:	movt	r1, #1
   11ae8:	mov	r0, #0
   11aec:	bl	10f24 <dcgettext@plt>
   11af0:	ldr	r1, [r4]
   11af4:	bl	10ea0 <fputs_unlocked@plt>
   11af8:	mov	r2, #5
   11afc:	movw	r1, #38544	; 0x9690
   11b00:	movt	r1, #1
   11b04:	mov	r0, #0
   11b08:	bl	10f24 <dcgettext@plt>
   11b0c:	ldr	r1, [r4]
   11b10:	bl	10ea0 <fputs_unlocked@plt>
   11b14:	mov	r2, #5
   11b18:	movw	r1, #38656	; 0x9700
   11b1c:	movt	r1, #1
   11b20:	mov	r0, #0
   11b24:	bl	10f24 <dcgettext@plt>
   11b28:	ldr	r1, [r4]
   11b2c:	bl	10ea0 <fputs_unlocked@plt>
   11b30:	mov	r2, #5
   11b34:	movw	r1, #38712	; 0x9738
   11b38:	movt	r1, #1
   11b3c:	mov	r0, #0
   11b40:	bl	10f24 <dcgettext@plt>
   11b44:	ldr	r1, [r4]
   11b48:	bl	10ea0 <fputs_unlocked@plt>
   11b4c:	mov	r2, #5
   11b50:	movw	r1, #38876	; 0x97dc
   11b54:	movt	r1, #1
   11b58:	mov	r0, #0
   11b5c:	bl	10f24 <dcgettext@plt>
   11b60:	ldr	r1, [r4]
   11b64:	bl	10ea0 <fputs_unlocked@plt>
   11b68:	mov	r2, #5
   11b6c:	movw	r1, #38936	; 0x9818
   11b70:	movt	r1, #1
   11b74:	mov	r0, #0
   11b78:	bl	10f24 <dcgettext@plt>
   11b7c:	ldr	r1, [r4]
   11b80:	bl	10ea0 <fputs_unlocked@plt>
   11b84:	mov	r2, #5
   11b88:	movw	r1, #38984	; 0x9848
   11b8c:	movt	r1, #1
   11b90:	mov	r0, #0
   11b94:	bl	10f24 <dcgettext@plt>
   11b98:	ldr	r1, [r4]
   11b9c:	bl	10ea0 <fputs_unlocked@plt>
   11ba0:	mov	r2, #5
   11ba4:	movw	r1, #39036	; 0x987c
   11ba8:	movt	r1, #1
   11bac:	mov	r0, #0
   11bb0:	bl	10f24 <dcgettext@plt>
   11bb4:	ldr	r1, [r4]
   11bb8:	bl	10ea0 <fputs_unlocked@plt>
   11bbc:	mov	r2, #5
   11bc0:	movw	r1, #39200	; 0x9920
   11bc4:	movt	r1, #1
   11bc8:	mov	r0, #0
   11bcc:	bl	10f24 <dcgettext@plt>
   11bd0:	ldr	r1, [r4]
   11bd4:	bl	10ea0 <fputs_unlocked@plt>
   11bd8:	mov	r2, #5
   11bdc:	movw	r1, #39264	; 0x9960
   11be0:	movt	r1, #1
   11be4:	mov	r0, #0
   11be8:	bl	10f24 <dcgettext@plt>
   11bec:	ldr	r1, [r4]
   11bf0:	bl	10ea0 <fputs_unlocked@plt>
   11bf4:	mov	r2, #5
   11bf8:	movw	r1, #39320	; 0x9998
   11bfc:	movt	r1, #1
   11c00:	mov	r0, #0
   11c04:	bl	10f24 <dcgettext@plt>
   11c08:	ldr	r1, [r4]
   11c0c:	bl	10ea0 <fputs_unlocked@plt>
   11c10:	mov	r2, #5
   11c14:	movw	r1, #39400	; 0x99e8
   11c18:	movt	r1, #1
   11c1c:	mov	r0, #0
   11c20:	bl	10f24 <dcgettext@plt>
   11c24:	ldr	r1, [r4]
   11c28:	bl	10ea0 <fputs_unlocked@plt>
   11c2c:	mov	r2, #5
   11c30:	movw	r1, #39500	; 0x9a4c
   11c34:	movt	r1, #1
   11c38:	mov	r0, #0
   11c3c:	bl	10f24 <dcgettext@plt>
   11c40:	mov	r4, r0
   11c44:	movw	r3, #53516	; 0xd10c
   11c48:	movt	r3, #2
   11c4c:	ldr	r3, [r3]
   11c50:	cmp	r3, #1
   11c54:	mov	r2, #5
   11c58:	movweq	r1, #47612	; 0xb9fc
   11c5c:	movteq	r1, #1
   11c60:	movwne	r1, #39584	; 0x9aa0
   11c64:	movtne	r1, #1
   11c68:	mov	r0, #0
   11c6c:	bl	10f24 <dcgettext@plt>
   11c70:	mov	r2, r0
   11c74:	mov	r1, r4
   11c78:	mov	r0, #1
   11c7c:	bl	110b0 <__printf_chk@plt>
   11c80:	mov	r2, #5
   11c84:	movw	r1, #39588	; 0x9aa4
   11c88:	movt	r1, #1
   11c8c:	mov	r0, #0
   11c90:	bl	10f24 <dcgettext@plt>
   11c94:	movw	r4, #53612	; 0xd16c
   11c98:	movt	r4, #2
   11c9c:	ldr	r1, [r4]
   11ca0:	bl	10ea0 <fputs_unlocked@plt>
   11ca4:	mov	r2, #5
   11ca8:	movw	r1, #39632	; 0x9ad0
   11cac:	movt	r1, #1
   11cb0:	mov	r0, #0
   11cb4:	bl	10f24 <dcgettext@plt>
   11cb8:	ldr	r1, [r4]
   11cbc:	bl	10ea0 <fputs_unlocked@plt>
   11cc0:	mov	r2, #5
   11cc4:	movw	r1, #39672	; 0x9af8
   11cc8:	movt	r1, #1
   11ccc:	mov	r0, #0
   11cd0:	bl	10f24 <dcgettext@plt>
   11cd4:	ldr	r1, [r4]
   11cd8:	bl	10ea0 <fputs_unlocked@plt>
   11cdc:	mov	r2, #5
   11ce0:	movw	r1, #39796	; 0x9b74
   11ce4:	movt	r1, #1
   11ce8:	mov	r0, #0
   11cec:	bl	10f24 <dcgettext@plt>
   11cf0:	ldr	r1, [r4]
   11cf4:	bl	10ea0 <fputs_unlocked@plt>
   11cf8:	mov	r2, #5
   11cfc:	movw	r1, #39940	; 0x9c04
   11d00:	movt	r1, #1
   11d04:	mov	r0, #0
   11d08:	bl	10f24 <dcgettext@plt>
   11d0c:	ldr	r1, [r4]
   11d10:	bl	10ea0 <fputs_unlocked@plt>
   11d14:	mov	r2, #5
   11d18:	movw	r1, #40056	; 0x9c78
   11d1c:	movt	r1, #1
   11d20:	mov	r0, #0
   11d24:	bl	10f24 <dcgettext@plt>
   11d28:	ldr	r1, [r4]
   11d2c:	bl	10ea0 <fputs_unlocked@plt>
   11d30:	mov	r2, #5
   11d34:	movw	r1, #40168	; 0x9ce8
   11d38:	movt	r1, #1
   11d3c:	mov	r0, #0
   11d40:	bl	10f24 <dcgettext@plt>
   11d44:	ldr	r1, [r4]
   11d48:	bl	10ea0 <fputs_unlocked@plt>
   11d4c:	mov	r2, #5
   11d50:	movw	r1, #40216	; 0x9d18
   11d54:	movt	r1, #1
   11d58:	mov	r0, #0
   11d5c:	bl	10f24 <dcgettext@plt>
   11d60:	ldr	r1, [r4]
   11d64:	bl	10ea0 <fputs_unlocked@plt>
   11d68:	mov	r2, #5
   11d6c:	movw	r1, #40276	; 0x9d54
   11d70:	movt	r1, #1
   11d74:	mov	r0, #0
   11d78:	bl	10f24 <dcgettext@plt>
   11d7c:	ldr	r1, [r4]
   11d80:	bl	10ea0 <fputs_unlocked@plt>
   11d84:	mov	r2, #5
   11d88:	movw	r1, #40584	; 0x9e88
   11d8c:	movt	r1, #1
   11d90:	mov	r0, #0
   11d94:	bl	10f24 <dcgettext@plt>
   11d98:	ldr	r1, [r4]
   11d9c:	bl	10ea0 <fputs_unlocked@plt>
   11da0:	mov	r2, #5
   11da4:	movw	r1, #40636	; 0x9ebc
   11da8:	movt	r1, #1
   11dac:	mov	r0, #0
   11db0:	bl	10f24 <dcgettext@plt>
   11db4:	ldr	r1, [r4]
   11db8:	bl	10ea0 <fputs_unlocked@plt>
   11dbc:	mov	r2, #5
   11dc0:	movw	r1, #40896	; 0x9fc0
   11dc4:	movt	r1, #1
   11dc8:	mov	r0, #0
   11dcc:	bl	10f24 <dcgettext@plt>
   11dd0:	ldr	r1, [r4]
   11dd4:	bl	10ea0 <fputs_unlocked@plt>
   11dd8:	mov	r2, #5
   11ddc:	movw	r1, #40972	; 0xa00c
   11de0:	movt	r1, #1
   11de4:	mov	r0, #0
   11de8:	bl	10f24 <dcgettext@plt>
   11dec:	ldr	r1, [r4]
   11df0:	bl	10ea0 <fputs_unlocked@plt>
   11df4:	mov	r2, #5
   11df8:	movw	r1, #41132	; 0xa0ac
   11dfc:	movt	r1, #1
   11e00:	mov	r0, #0
   11e04:	bl	10f24 <dcgettext@plt>
   11e08:	ldr	r1, [r4]
   11e0c:	bl	10ea0 <fputs_unlocked@plt>
   11e10:	mov	r2, #5
   11e14:	movw	r1, #41192	; 0xa0e8
   11e18:	movt	r1, #1
   11e1c:	mov	r0, #0
   11e20:	bl	10f24 <dcgettext@plt>
   11e24:	ldr	r1, [r4]
   11e28:	bl	10ea0 <fputs_unlocked@plt>
   11e2c:	mov	r2, #5
   11e30:	movw	r1, #41256	; 0xa128
   11e34:	movt	r1, #1
   11e38:	mov	r0, #0
   11e3c:	bl	10f24 <dcgettext@plt>
   11e40:	ldr	r1, [r4]
   11e44:	bl	10ea0 <fputs_unlocked@plt>
   11e48:	mov	r2, #5
   11e4c:	movw	r1, #41336	; 0xa178
   11e50:	movt	r1, #1
   11e54:	mov	r0, #0
   11e58:	bl	10f24 <dcgettext@plt>
   11e5c:	ldr	r1, [r4]
   11e60:	bl	10ea0 <fputs_unlocked@plt>
   11e64:	mov	r2, #5
   11e68:	movw	r1, #41544	; 0xa248
   11e6c:	movt	r1, #1
   11e70:	mov	r0, #0
   11e74:	bl	10f24 <dcgettext@plt>
   11e78:	ldr	r1, [r4]
   11e7c:	bl	10ea0 <fputs_unlocked@plt>
   11e80:	mov	r2, #5
   11e84:	movw	r1, #41564	; 0xa25c
   11e88:	movt	r1, #1
   11e8c:	mov	r0, #0
   11e90:	bl	10f24 <dcgettext@plt>
   11e94:	ldr	r1, [r4]
   11e98:	bl	10ea0 <fputs_unlocked@plt>
   11e9c:	mov	r2, #5
   11ea0:	movw	r1, #41620	; 0xa294
   11ea4:	movt	r1, #1
   11ea8:	mov	r0, #0
   11eac:	bl	10f24 <dcgettext@plt>
   11eb0:	ldr	r1, [r4]
   11eb4:	bl	10ea0 <fputs_unlocked@plt>
   11eb8:	mov	r2, #5
   11ebc:	movw	r1, #41680	; 0xa2d0
   11ec0:	movt	r1, #1
   11ec4:	mov	r0, #0
   11ec8:	bl	10f24 <dcgettext@plt>
   11ecc:	ldr	r1, [r4]
   11ed0:	bl	10ea0 <fputs_unlocked@plt>
   11ed4:	mov	r2, #5
   11ed8:	movw	r1, #41736	; 0xa308
   11edc:	movt	r1, #1
   11ee0:	mov	r0, #0
   11ee4:	bl	10f24 <dcgettext@plt>
   11ee8:	ldr	r1, [r4]
   11eec:	bl	10ea0 <fputs_unlocked@plt>
   11ef0:	mov	r2, #5
   11ef4:	movw	r1, #41788	; 0xa33c
   11ef8:	movt	r1, #1
   11efc:	mov	r0, #0
   11f00:	bl	10f24 <dcgettext@plt>
   11f04:	ldr	r1, [r4]
   11f08:	bl	10ea0 <fputs_unlocked@plt>
   11f0c:	mov	r2, #5
   11f10:	movw	r1, #41844	; 0xa374
   11f14:	movt	r1, #1
   11f18:	mov	r0, #0
   11f1c:	bl	10f24 <dcgettext@plt>
   11f20:	ldr	r1, [r4]
   11f24:	bl	10ea0 <fputs_unlocked@plt>
   11f28:	mov	r2, #5
   11f2c:	movw	r1, #41920	; 0xa3c0
   11f30:	movt	r1, #1
   11f34:	mov	r0, #0
   11f38:	bl	10f24 <dcgettext@plt>
   11f3c:	ldr	r1, [r4]
   11f40:	bl	10ea0 <fputs_unlocked@plt>
   11f44:	mov	r2, #5
   11f48:	movw	r1, #42000	; 0xa410
   11f4c:	movt	r1, #1
   11f50:	mov	r0, #0
   11f54:	bl	10f24 <dcgettext@plt>
   11f58:	ldr	r1, [r4]
   11f5c:	bl	10ea0 <fputs_unlocked@plt>
   11f60:	mov	r2, #5
   11f64:	movw	r1, #42064	; 0xa450
   11f68:	movt	r1, #1
   11f6c:	mov	r0, #0
   11f70:	bl	10f24 <dcgettext@plt>
   11f74:	ldr	r1, [r4]
   11f78:	bl	10ea0 <fputs_unlocked@plt>
   11f7c:	mov	r2, #5
   11f80:	movw	r1, #42128	; 0xa490
   11f84:	movt	r1, #1
   11f88:	mov	r0, #0
   11f8c:	bl	10f24 <dcgettext@plt>
   11f90:	ldr	r1, [r4]
   11f94:	bl	10ea0 <fputs_unlocked@plt>
   11f98:	mov	r2, #5
   11f9c:	movw	r1, #42184	; 0xa4c8
   11fa0:	movt	r1, #1
   11fa4:	mov	r0, #0
   11fa8:	bl	10f24 <dcgettext@plt>
   11fac:	ldr	r1, [r4]
   11fb0:	bl	10ea0 <fputs_unlocked@plt>
   11fb4:	mov	r2, #5
   11fb8:	movw	r1, #42252	; 0xa50c
   11fbc:	movt	r1, #1
   11fc0:	mov	r0, #0
   11fc4:	bl	10f24 <dcgettext@plt>
   11fc8:	ldr	r1, [r4]
   11fcc:	bl	10ea0 <fputs_unlocked@plt>
   11fd0:	mov	r2, #5
   11fd4:	movw	r1, #42292	; 0xa534
   11fd8:	movt	r1, #1
   11fdc:	mov	r0, #0
   11fe0:	bl	10f24 <dcgettext@plt>
   11fe4:	ldr	r1, [r4]
   11fe8:	bl	10ea0 <fputs_unlocked@plt>
   11fec:	mov	r2, #5
   11ff0:	movw	r1, #42412	; 0xa5ac
   11ff4:	movt	r1, #1
   11ff8:	mov	r0, #0
   11ffc:	bl	10f24 <dcgettext@plt>
   12000:	ldr	r1, [r4]
   12004:	bl	10ea0 <fputs_unlocked@plt>
   12008:	mov	r2, #5
   1200c:	movw	r1, #42468	; 0xa5e4
   12010:	movt	r1, #1
   12014:	mov	r0, #0
   12018:	bl	10f24 <dcgettext@plt>
   1201c:	ldr	r1, [r4]
   12020:	bl	10ea0 <fputs_unlocked@plt>
   12024:	mov	r2, #5
   12028:	movw	r1, #42556	; 0xa63c
   1202c:	movt	r1, #1
   12030:	mov	r0, #0
   12034:	bl	10f24 <dcgettext@plt>
   12038:	ldr	r1, [r4]
   1203c:	bl	10ea0 <fputs_unlocked@plt>
   12040:	mov	r2, #5
   12044:	movw	r1, #42704	; 0xa6d0
   12048:	movt	r1, #1
   1204c:	mov	r0, #0
   12050:	bl	10f24 <dcgettext@plt>
   12054:	ldr	r1, [r4]
   12058:	bl	10ea0 <fputs_unlocked@plt>
   1205c:	mov	r2, #5
   12060:	movw	r1, #42772	; 0xa714
   12064:	movt	r1, #1
   12068:	mov	r0, #0
   1206c:	bl	10f24 <dcgettext@plt>
   12070:	ldr	r1, [r4]
   12074:	bl	10ea0 <fputs_unlocked@plt>
   12078:	mov	r2, #5
   1207c:	movw	r1, #42812	; 0xa73c
   12080:	movt	r1, #1
   12084:	mov	r0, #0
   12088:	bl	10f24 <dcgettext@plt>
   1208c:	ldr	r1, [r4]
   12090:	bl	10ea0 <fputs_unlocked@plt>
   12094:	mov	r2, #5
   12098:	movw	r1, #42852	; 0xa764
   1209c:	movt	r1, #1
   120a0:	mov	r0, #0
   120a4:	bl	10f24 <dcgettext@plt>
   120a8:	ldr	r1, [r4]
   120ac:	bl	10ea0 <fputs_unlocked@plt>
   120b0:	mov	r2, #5
   120b4:	movw	r1, #42948	; 0xa7c4
   120b8:	movt	r1, #1
   120bc:	mov	r0, #0
   120c0:	bl	10f24 <dcgettext@plt>
   120c4:	ldr	r1, [r4]
   120c8:	bl	10ea0 <fputs_unlocked@plt>
   120cc:	mov	r2, #5
   120d0:	movw	r1, #42988	; 0xa7ec
   120d4:	movt	r1, #1
   120d8:	mov	r0, #0
   120dc:	bl	10f24 <dcgettext@plt>
   120e0:	ldr	r1, [r4]
   120e4:	bl	10ea0 <fputs_unlocked@plt>
   120e8:	mov	r2, #5
   120ec:	movw	r1, #43056	; 0xa830
   120f0:	movt	r1, #1
   120f4:	mov	r0, #0
   120f8:	bl	10f24 <dcgettext@plt>
   120fc:	ldr	r1, [r4]
   12100:	bl	10ea0 <fputs_unlocked@plt>
   12104:	mov	r2, #5
   12108:	movw	r1, #43128	; 0xa878
   1210c:	movt	r1, #1
   12110:	mov	r0, #0
   12114:	bl	10f24 <dcgettext@plt>
   12118:	ldr	r1, [r4]
   1211c:	bl	10ea0 <fputs_unlocked@plt>
   12120:	mov	r2, #5
   12124:	movw	r1, #43196	; 0xa8bc
   12128:	movt	r1, #1
   1212c:	mov	r0, #0
   12130:	bl	10f24 <dcgettext@plt>
   12134:	ldr	r1, [r4]
   12138:	bl	10ea0 <fputs_unlocked@plt>
   1213c:	mov	r2, #5
   12140:	movw	r1, #43232	; 0xa8e0
   12144:	movt	r1, #1
   12148:	mov	r0, #0
   1214c:	bl	10f24 <dcgettext@plt>
   12150:	movw	r2, #43336	; 0xa948
   12154:	movt	r2, #1
   12158:	mov	r1, r0
   1215c:	mov	r0, #1
   12160:	bl	110b0 <__printf_chk@plt>
   12164:	mov	r2, #5
   12168:	movw	r1, #43364	; 0xa964
   1216c:	movt	r1, #1
   12170:	mov	r0, #0
   12174:	bl	10f24 <dcgettext@plt>
   12178:	ldr	r1, [r4]
   1217c:	bl	10ea0 <fputs_unlocked@plt>
   12180:	mov	r2, #5
   12184:	movw	r1, #43516	; 0xa9fc
   12188:	movt	r1, #1
   1218c:	mov	r0, #0
   12190:	bl	10f24 <dcgettext@plt>
   12194:	ldr	r1, [r4]
   12198:	bl	10ea0 <fputs_unlocked@plt>
   1219c:	mov	r2, #5
   121a0:	movw	r1, #43556	; 0xaa24
   121a4:	movt	r1, #1
   121a8:	mov	r0, #0
   121ac:	bl	10f24 <dcgettext@plt>
   121b0:	ldr	r1, [r4]
   121b4:	bl	10ea0 <fputs_unlocked@plt>
   121b8:	mov	r2, #5
   121bc:	movw	r1, #43632	; 0xaa70
   121c0:	movt	r1, #1
   121c4:	mov	r0, #0
   121c8:	bl	10f24 <dcgettext@plt>
   121cc:	ldr	r1, [r4]
   121d0:	bl	10ea0 <fputs_unlocked@plt>
   121d4:	mov	r2, #5
   121d8:	movw	r1, #43704	; 0xaab8
   121dc:	movt	r1, #1
   121e0:	mov	r0, #0
   121e4:	bl	10f24 <dcgettext@plt>
   121e8:	ldr	r1, [r4]
   121ec:	bl	10ea0 <fputs_unlocked@plt>
   121f0:	mov	r2, #5
   121f4:	movw	r1, #43728	; 0xaad0
   121f8:	movt	r1, #1
   121fc:	mov	r0, #0
   12200:	bl	10f24 <dcgettext@plt>
   12204:	ldr	r1, [r4]
   12208:	bl	10ea0 <fputs_unlocked@plt>
   1220c:	mov	r2, #5
   12210:	movw	r1, #43764	; 0xaaf4
   12214:	movt	r1, #1
   12218:	mov	r0, #0
   1221c:	bl	10f24 <dcgettext@plt>
   12220:	ldr	r1, [r4]
   12224:	bl	10ea0 <fputs_unlocked@plt>
   12228:	mov	r2, #5
   1222c:	movw	r1, #43832	; 0xab38
   12230:	movt	r1, #1
   12234:	mov	r0, #0
   12238:	bl	10f24 <dcgettext@plt>
   1223c:	ldr	r1, [r4]
   12240:	bl	10ea0 <fputs_unlocked@plt>
   12244:	mov	r2, #5
   12248:	movw	r1, #44004	; 0xabe4
   1224c:	movt	r1, #1
   12250:	mov	r0, #0
   12254:	bl	10f24 <dcgettext@plt>
   12258:	movw	r2, #44036	; 0xac04
   1225c:	movt	r2, #1
   12260:	mov	r1, r0
   12264:	mov	r0, #1
   12268:	bl	110b0 <__printf_chk@plt>
   1226c:	mov	r2, #5
   12270:	movw	r1, #44060	; 0xac1c
   12274:	movt	r1, #1
   12278:	mov	r0, #0
   1227c:	bl	10f24 <dcgettext@plt>
   12280:	movw	r2, #44136	; 0xac68
   12284:	movt	r2, #1
   12288:	mov	r1, r0
   1228c:	mov	r0, #1
   12290:	bl	110b0 <__printf_chk@plt>
   12294:	mov	r2, #5
   12298:	movw	r1, #44164	; 0xac84
   1229c:	movt	r1, #1
   122a0:	mov	r0, #0
   122a4:	bl	10f24 <dcgettext@plt>
   122a8:	ldr	r1, [r4]
   122ac:	bl	10ea0 <fputs_unlocked@plt>
   122b0:	mov	r2, #5
   122b4:	movw	r1, #44200	; 0xaca8
   122b8:	movt	r1, #1
   122bc:	mov	r0, #0
   122c0:	bl	10f24 <dcgettext@plt>
   122c4:	ldr	r1, [r4]
   122c8:	bl	10ea0 <fputs_unlocked@plt>
   122cc:	mov	r2, #5
   122d0:	movw	r1, #44352	; 0xad40
   122d4:	movt	r1, #1
   122d8:	mov	r0, #0
   122dc:	bl	10f24 <dcgettext@plt>
   122e0:	ldr	r1, [r4]
   122e4:	bl	10ea0 <fputs_unlocked@plt>
   122e8:	mov	r2, #5
   122ec:	movw	r1, #44396	; 0xad6c
   122f0:	movt	r1, #1
   122f4:	mov	r0, #0
   122f8:	bl	10f24 <dcgettext@plt>
   122fc:	ldr	r1, [r4]
   12300:	bl	10ea0 <fputs_unlocked@plt>
   12304:	mov	r2, #5
   12308:	movw	r1, #44500	; 0xadd4
   1230c:	movt	r1, #1
   12310:	mov	r0, #0
   12314:	bl	10f24 <dcgettext@plt>
   12318:	movw	r3, #44560	; 0xae10
   1231c:	movt	r3, #1
   12320:	movw	r2, #44604	; 0xae3c
   12324:	movt	r2, #1
   12328:	mov	r1, r0
   1232c:	mov	r0, #1
   12330:	bl	110b0 <__printf_chk@plt>
   12334:	mov	r2, #5
   12338:	movw	r1, #44620	; 0xae4c
   1233c:	movt	r1, #1
   12340:	mov	r0, #0
   12344:	bl	10f24 <dcgettext@plt>
   12348:	ldr	r1, [r4]
   1234c:	bl	10ea0 <fputs_unlocked@plt>
   12350:	mov	r2, #5
   12354:	movw	r1, #44824	; 0xaf18
   12358:	movt	r1, #1
   1235c:	mov	r0, #0
   12360:	bl	10f24 <dcgettext@plt>
   12364:	movw	r2, #45036	; 0xafec
   12368:	movt	r2, #1
   1236c:	mov	r1, r0
   12370:	mov	r0, #1
   12374:	bl	110b0 <__printf_chk@plt>
   12378:	mov	r2, #5
   1237c:	movw	r1, #45068	; 0xb00c
   12380:	movt	r1, #1
   12384:	mov	r0, #0
   12388:	bl	10f24 <dcgettext@plt>
   1238c:	movw	r3, #45444	; 0xb184
   12390:	movt	r3, #1
   12394:	str	r3, [sp]
   12398:	movw	r3, #45324	; 0xb10c
   1239c:	movt	r3, #1
   123a0:	movw	r2, #45384	; 0xb148
   123a4:	movt	r2, #1
   123a8:	mov	r1, r0
   123ac:	mov	r0, #1
   123b0:	bl	110b0 <__printf_chk@plt>
   123b4:	mov	r2, #5
   123b8:	movw	r1, #45508	; 0xb1c4
   123bc:	movt	r1, #1
   123c0:	mov	r0, #0
   123c4:	bl	10f24 <dcgettext@plt>
   123c8:	ldr	r1, [r4]
   123cc:	bl	10ea0 <fputs_unlocked@plt>
   123d0:	ldr	r0, [pc, #648]	; 12660 <tcgetattr@plt+0x14fc>
   123d4:	ldr	r1, [r0]
   123d8:	ldr	r3, [r0, #4]
   123dc:	str	r1, [sp, #8]
   123e0:	str	r3, [sp, #12]
   123e4:	ldrd	r2, [r0, #8]
   123e8:	strd	r2, [sp, #16]
   123ec:	ldrd	r2, [r0, #16]
   123f0:	strd	r2, [sp, #24]
   123f4:	ldrd	r2, [r0, #24]
   123f8:	strd	r2, [sp, #32]
   123fc:	ldrd	r2, [r0, #32]
   12400:	strd	r2, [sp, #40]	; 0x28
   12404:	ldrd	r2, [r0, #40]	; 0x28
   12408:	strd	r2, [sp, #48]	; 0x30
   1240c:	ldrd	r2, [r0, #48]	; 0x30
   12410:	strd	r2, [sp, #56]	; 0x38
   12414:	cmp	r1, #0
   12418:	addeq	r4, sp, #8
   1241c:	beq	12448 <tcgetattr@plt+0x12e4>
   12420:	add	r4, sp, #8
   12424:	movw	r6, #37680	; 0x9330
   12428:	movt	r6, #1
   1242c:	mov	r0, r6
   12430:	bl	10eac <strcmp@plt>
   12434:	cmp	r0, #0
   12438:	beq	12448 <tcgetattr@plt+0x12e4>
   1243c:	ldr	r1, [r4, #8]!
   12440:	cmp	r1, #0
   12444:	bne	1242c <tcgetattr@plt+0x12c8>
   12448:	ldr	r4, [r4, #4]
   1244c:	cmp	r4, #0
   12450:	beq	125ac <tcgetattr@plt+0x1448>
   12454:	mov	r2, #5
   12458:	movw	r1, #45788	; 0xb2dc
   1245c:	movt	r1, #1
   12460:	mov	r0, #0
   12464:	bl	10f24 <dcgettext@plt>
   12468:	movw	r3, #45812	; 0xb2f4
   1246c:	movt	r3, #1
   12470:	movw	r2, #45852	; 0xb31c
   12474:	movt	r2, #1
   12478:	mov	r1, r0
   1247c:	mov	r0, #1
   12480:	bl	110b0 <__printf_chk@plt>
   12484:	mov	r1, #0
   12488:	mov	r0, #5
   1248c:	bl	11104 <setlocale@plt>
   12490:	cmp	r0, #0
   12494:	beq	124b0 <tcgetattr@plt+0x134c>
   12498:	mov	r2, #3
   1249c:	movw	r1, #45868	; 0xb32c
   124a0:	movt	r1, #1
   124a4:	bl	11134 <strncmp@plt>
   124a8:	cmp	r0, #0
   124ac:	bne	1252c <tcgetattr@plt+0x13c8>
   124b0:	mov	r2, #5
   124b4:	movw	r1, #45944	; 0xb378
   124b8:	movt	r1, #1
   124bc:	mov	r0, #0
   124c0:	bl	10f24 <dcgettext@plt>
   124c4:	movw	r6, #37680	; 0x9330
   124c8:	movt	r6, #1
   124cc:	mov	r3, r6
   124d0:	movw	r2, #45812	; 0xb2f4
   124d4:	movt	r2, #1
   124d8:	mov	r1, r0
   124dc:	mov	r0, #1
   124e0:	bl	110b0 <__printf_chk@plt>
   124e4:	mov	r2, #5
   124e8:	movw	r1, #45972	; 0xb394
   124ec:	movt	r1, #1
   124f0:	mov	r0, #0
   124f4:	bl	10f24 <dcgettext@plt>
   124f8:	mov	r1, r0
   124fc:	movw	r2, #46788	; 0xb6c4
   12500:	movt	r2, #1
   12504:	movw	r3, #42768	; 0xa710
   12508:	movt	r3, #1
   1250c:	cmp	r4, r6
   12510:	moveq	r3, r2
   12514:	mov	r2, r4
   12518:	mov	r0, #1
   1251c:	bl	110b0 <__printf_chk@plt>
   12520:	b	119d4 <tcgetattr@plt+0x870>
   12524:	movw	r4, #37680	; 0x9330
   12528:	movt	r4, #1
   1252c:	mov	r2, #5
   12530:	movw	r1, #45872	; 0xb330
   12534:	movt	r1, #1
   12538:	mov	r0, #0
   1253c:	bl	10f24 <dcgettext@plt>
   12540:	movw	r3, #53612	; 0xd16c
   12544:	movt	r3, #2
   12548:	ldr	r1, [r3]
   1254c:	bl	10ea0 <fputs_unlocked@plt>
   12550:	b	124b0 <tcgetattr@plt+0x134c>
   12554:	mov	r2, #5
   12558:	movw	r1, #45944	; 0xb378
   1255c:	movt	r1, #1
   12560:	mov	r0, #0
   12564:	bl	10f24 <dcgettext@plt>
   12568:	movw	r4, #37680	; 0x9330
   1256c:	movt	r4, #1
   12570:	mov	r3, r4
   12574:	movw	r2, #45812	; 0xb2f4
   12578:	movt	r2, #1
   1257c:	mov	r1, r0
   12580:	mov	r0, #1
   12584:	bl	110b0 <__printf_chk@plt>
   12588:	mov	r2, #5
   1258c:	movw	r1, #45972	; 0xb394
   12590:	movt	r1, #1
   12594:	mov	r0, #0
   12598:	bl	10f24 <dcgettext@plt>
   1259c:	mov	r1, r0
   125a0:	movw	r3, #46788	; 0xb6c4
   125a4:	movt	r3, #1
   125a8:	b	12514 <tcgetattr@plt+0x13b0>
   125ac:	mov	r2, #5
   125b0:	movw	r1, #45788	; 0xb2dc
   125b4:	movt	r1, #1
   125b8:	mov	r0, #0
   125bc:	bl	10f24 <dcgettext@plt>
   125c0:	movw	r3, #45812	; 0xb2f4
   125c4:	movt	r3, #1
   125c8:	movw	r2, #45852	; 0xb31c
   125cc:	movt	r2, #1
   125d0:	mov	r1, r0
   125d4:	mov	r0, #1
   125d8:	bl	110b0 <__printf_chk@plt>
   125dc:	mov	r1, #0
   125e0:	mov	r0, #5
   125e4:	bl	11104 <setlocale@plt>
   125e8:	cmp	r0, #0
   125ec:	beq	12554 <tcgetattr@plt+0x13f0>
   125f0:	mov	r2, #3
   125f4:	movw	r1, #45868	; 0xb32c
   125f8:	movt	r1, #1
   125fc:	bl	11134 <strncmp@plt>
   12600:	cmp	r0, #0
   12604:	bne	12524 <tcgetattr@plt+0x13c0>
   12608:	mov	r2, #5
   1260c:	movw	r1, #45944	; 0xb378
   12610:	movt	r1, #1
   12614:	mov	r0, #0
   12618:	bl	10f24 <dcgettext@plt>
   1261c:	movw	r4, #37680	; 0x9330
   12620:	movt	r4, #1
   12624:	mov	r3, r4
   12628:	movw	r2, #45812	; 0xb2f4
   1262c:	movt	r2, #1
   12630:	mov	r1, r0
   12634:	mov	r0, #1
   12638:	bl	110b0 <__printf_chk@plt>
   1263c:	mov	r2, #5
   12640:	movw	r1, #45972	; 0xb394
   12644:	movt	r1, #1
   12648:	mov	r0, #0
   1264c:	bl	10f24 <dcgettext@plt>
   12650:	mov	r1, r0
   12654:	movw	r3, #46788	; 0xb6c4
   12658:	movt	r3, #1
   1265c:	b	12514 <tcgetattr@plt+0x13b0>
   12660:	andeq	r8, r1, ip, asr #19
   12664:	cmp	r3, #1
   12668:	bxle	lr
   1266c:	strd	r4, [sp, #-36]!	; 0xffffffdc
   12670:	strd	r6, [sp, #8]
   12674:	strd	r8, [sp, #16]
   12678:	strd	sl, [sp, #24]
   1267c:	str	lr, [sp, #32]
   12680:	sub	sp, sp, #60	; 0x3c
   12684:	mov	sl, r3
   12688:	mov	fp, r2
   1268c:	str	r1, [sp, #28]
   12690:	str	r0, [sp, #24]
   12694:	mov	r8, #1
   12698:	movw	r3, #46040	; 0xb3d8
   1269c:	movt	r3, #1
   126a0:	str	r3, [sp, #8]
   126a4:	movw	r3, #34856	; 0x8828
   126a8:	movt	r3, #1
   126ac:	str	r3, [sp, #12]
   126b0:	movw	r3, #46024	; 0xb3c8
   126b4:	movt	r3, #1
   126b8:	str	r3, [sp, #16]
   126bc:	b	126dc <tcgetattr@plt+0x1578>
   126c0:	movw	r3, #53516	; 0xd10c
   126c4:	movt	r3, #2
   126c8:	eor	r9, r9, #1
   126cc:	str	r9, [r3]
   126d0:	add	r8, r8, #1
   126d4:	cmp	sl, r8
   126d8:	ble	135c0 <tcgetattr@plt+0x245c>
   126dc:	lsl	r3, r8, #2
   126e0:	str	r3, [sp, #4]
   126e4:	ldr	r5, [fp, r8, lsl #2]
   126e8:	cmp	r5, #0
   126ec:	beq	126d0 <tcgetattr@plt+0x156c>
   126f0:	ldrb	r3, [r5]
   126f4:	cmp	r3, #45	; 0x2d
   126f8:	addeq	r5, r5, #1
   126fc:	moveq	r9, #1
   12700:	movne	r9, #0
   12704:	ldr	r1, [sp, #8]
   12708:	mov	r0, r5
   1270c:	bl	10eac <strcmp@plt>
   12710:	cmp	r0, #0
   12714:	beq	126c0 <tcgetattr@plt+0x155c>
   12718:	ldr	r3, [sp, #12]
   1271c:	add	r3, r3, #476	; 0x1dc
   12720:	str	r3, [sp, #20]
   12724:	mov	r7, r3
   12728:	mov	r6, #0
   1272c:	ldr	r4, [sp, #16]
   12730:	mov	r1, r4
   12734:	mov	r0, r5
   12738:	bl	10eac <strcmp@plt>
   1273c:	cmp	r0, #0
   12740:	beq	1279c <tcgetattr@plt+0x1638>
   12744:	add	r6, r6, #1
   12748:	ldr	r4, [r7, #20]!
   1274c:	cmp	r4, #0
   12750:	bne	12730 <tcgetattr@plt+0x15cc>
   12754:	cmp	r9, #0
   12758:	bne	13514 <tcgetattr@plt+0x23b0>
   1275c:	ldr	r3, [sp, #12]
   12760:	add	r7, r3, #2272	; 0x8e0
   12764:	add	r7, r7, #4
   12768:	mov	r6, #0
   1276c:	movw	r4, #46032	; 0xb3d0
   12770:	movt	r4, #1
   12774:	mov	r1, r4
   12778:	mov	r0, r5
   1277c:	bl	10eac <strcmp@plt>
   12780:	cmp	r0, #0
   12784:	beq	12e18 <tcgetattr@plt+0x1cb4>
   12788:	add	r6, r6, #1
   1278c:	ldr	r4, [r7, #12]!
   12790:	cmp	r4, #0
   12794:	bne	12774 <tcgetattr@plt+0x1610>
   12798:	b	127b4 <tcgetattr@plt+0x1650>
   1279c:	add	r3, r6, r6, lsl #2
   127a0:	ldr	r2, [sp, #12]
   127a4:	add	r3, r2, r3, lsl #2
   127a8:	ldrb	r3, [r3, #484]	; 0x1e4
   127ac:	tst	r3, #16
   127b0:	beq	12820 <tcgetattr@plt+0x16bc>
   127b4:	movw	r1, #46240	; 0xb4a0
   127b8:	movt	r1, #1
   127bc:	mov	r0, r5
   127c0:	bl	10eac <strcmp@plt>
   127c4:	cmp	r0, #0
   127c8:	bne	12f9c <tcgetattr@plt+0x1e38>
   127cc:	sub	r3, sl, #1
   127d0:	cmp	r3, r8
   127d4:	beq	12f60 <tcgetattr@plt+0x1dfc>
   127d8:	add	r3, r8, #1
   127dc:	ldr	r0, [fp, r3, lsl #2]
   127e0:	cmp	r0, #0
   127e4:	beq	12f60 <tcgetattr@plt+0x1dfc>
   127e8:	add	r8, r8, #1
   127ec:	ldr	r3, [sp, #24]
   127f0:	cmp	r3, #0
   127f4:	bne	126d0 <tcgetattr@plt+0x156c>
   127f8:	bl	113c8 <tcgetattr@plt+0x264>
   127fc:	mov	r1, r0
   12800:	ldr	r0, [sp, #96]	; 0x60
   12804:	bl	11068 <cfsetispeed@plt>
   12808:	mov	r3, #1
   1280c:	ldr	r2, [sp, #100]	; 0x64
   12810:	strb	r3, [r2]
   12814:	ldr	r2, [sp, #104]	; 0x68
   12818:	strb	r3, [r2]
   1281c:	b	126d0 <tcgetattr@plt+0x156c>
   12820:	cmp	r9, #0
   12824:	beq	134b4 <tcgetattr@plt+0x2350>
   12828:	tst	r3, #4
   1282c:	beq	13508 <tcgetattr@plt+0x23a4>
   12830:	add	r3, r6, r6, lsl #2
   12834:	ldr	r2, [sp, #12]
   12838:	add	r3, r2, r3, lsl #2
   1283c:	ldr	r1, [sp, #96]	; 0x60
   12840:	ldr	r0, [r3, #480]	; 0x1e0
   12844:	bl	114bc <tcgetattr@plt+0x358>
   12848:	cmp	r0, #0
   1284c:	beq	13550 <tcgetattr@plt+0x23ec>
   12850:	lsl	r3, r6, #2
   12854:	add	r2, r3, r6
   12858:	ldr	r1, [sp, #12]
   1285c:	add	r2, r1, r2, lsl #2
   12860:	mov	r3, r2
   12864:	ldr	r2, [r2, #492]	; 0x1ec
   12868:	ldr	r3, [r3, #488]	; 0x1e8
   1286c:	orr	r2, r2, r3
   12870:	ldr	r3, [r0]
   12874:	bic	r3, r3, r2
   12878:	str	r3, [r0]
   1287c:	mov	r3, #1
   12880:	ldr	r2, [sp, #104]	; 0x68
   12884:	strb	r3, [r2]
   12888:	b	126d0 <tcgetattr@plt+0x156c>
   1288c:	ldr	r3, [sp, #96]	; 0x60
   12890:	ldr	r3, [r3, #8]
   12894:	bic	r3, r3, #816	; 0x330
   12898:	orr	r3, r3, #288	; 0x120
   1289c:	ldr	r2, [sp, #96]	; 0x60
   128a0:	str	r3, [r2, #8]
   128a4:	b	1287c <tcgetattr@plt+0x1718>
   128a8:	movw	r1, #46056	; 0xb3e8
   128ac:	movt	r1, #1
   128b0:	mov	r0, r4
   128b4:	bl	10eac <strcmp@plt>
   128b8:	cmp	r0, #0
   128bc:	bne	128e8 <tcgetattr@plt+0x1784>
   128c0:	cmp	r9, #0
   128c4:	ldr	r3, [sp, #96]	; 0x60
   128c8:	ldr	r3, [r3, #8]
   128cc:	bicne	r3, r3, #304	; 0x130
   128d0:	orrne	r3, r3, #48	; 0x30
   128d4:	biceq	r3, r3, #816	; 0x330
   128d8:	orreq	r3, r3, #800	; 0x320
   128dc:	ldr	r2, [sp, #96]	; 0x60
   128e0:	str	r3, [r2, #8]
   128e4:	b	1287c <tcgetattr@plt+0x1718>
   128e8:	movw	r1, #47664	; 0xba30
   128ec:	movt	r1, #1
   128f0:	mov	r0, r4
   128f4:	bl	10eac <strcmp@plt>
   128f8:	cmp	r0, #0
   128fc:	bne	12958 <tcgetattr@plt+0x17f4>
   12900:	cmp	r9, #0
   12904:	beq	12934 <tcgetattr@plt+0x17d0>
   12908:	ldr	r3, [sp, #96]	; 0x60
   1290c:	ldr	r3, [r3]
   12910:	bic	r3, r3, #448	; 0x1c0
   12914:	orr	r3, r3, #256	; 0x100
   12918:	ldr	r2, [sp, #96]	; 0x60
   1291c:	str	r3, [r2]
   12920:	ldr	r3, [r2, #4]
   12924:	bic	r3, r3, #44	; 0x2c
   12928:	orr	r3, r3, #4
   1292c:	str	r3, [r2, #4]
   12930:	b	1287c <tcgetattr@plt+0x1718>
   12934:	ldr	r3, [sp, #96]	; 0x60
   12938:	ldr	r3, [r3]
   1293c:	bic	r3, r3, #256	; 0x100
   12940:	ldr	r2, [sp, #96]	; 0x60
   12944:	str	r3, [r2]
   12948:	ldr	r3, [r2, #4]
   1294c:	bic	r3, r3, #4
   12950:	str	r3, [r2, #4]
   12954:	b	1287c <tcgetattr@plt+0x1718>
   12958:	movw	r1, #46064	; 0xb3f0
   1295c:	movt	r1, #1
   12960:	mov	r0, r4
   12964:	bl	10eac <strcmp@plt>
   12968:	cmp	r0, #0
   1296c:	bne	12988 <tcgetattr@plt+0x1824>
   12970:	mov	r3, #127	; 0x7f
   12974:	ldr	r2, [sp, #96]	; 0x60
   12978:	strb	r3, [r2, #19]
   1297c:	mov	r3, #21
   12980:	strb	r3, [r2, #20]
   12984:	b	1287c <tcgetattr@plt+0x1718>
   12988:	movw	r1, #46068	; 0xb3f4
   1298c:	movt	r1, #1
   12990:	mov	r0, r4
   12994:	bl	10eac <strcmp@plt>
   12998:	cmp	r0, #0
   1299c:	ldreq	r3, [sp, #12]
   129a0:	addeq	r3, r3, #2272	; 0x8e0
   129a4:	addeq	r3, r3, #4
   129a8:	beq	129f8 <tcgetattr@plt+0x1894>
   129ac:	movw	r1, #46096	; 0xb410
   129b0:	movt	r1, #1
   129b4:	mov	r0, r4
   129b8:	bl	10eac <strcmp@plt>
   129bc:	cmp	r0, #0
   129c0:	bne	12ad0 <tcgetattr@plt+0x196c>
   129c4:	cmp	r9, #0
   129c8:	ldr	r3, [sp, #96]	; 0x60
   129cc:	ldr	r3, [r3, #12]
   129d0:	orrne	r3, r3, #2
   129d4:	biceq	r3, r3, #2
   129d8:	ldr	r2, [sp, #96]	; 0x60
   129dc:	str	r3, [r2, #12]
   129e0:	b	1287c <tcgetattr@plt+0x1718>
   129e4:	ldr	r2, [r3, #-4]
   129e8:	ldrb	r1, [r3, #-8]
   129ec:	ldr	r0, [sp, #96]	; 0x60
   129f0:	add	r2, r0, r2
   129f4:	strb	r1, [r2, #17]
   129f8:	ldr	r2, [r3], #12
   129fc:	cmp	r2, #0
   12a00:	bne	129e4 <tcgetattr@plt+0x1880>
   12a04:	ldr	r5, [sp, #20]
   12a08:	b	12a60 <tcgetattr@plt+0x18fc>
   12a0c:	ldr	r3, [pc, #3016]	; 135dc <tcgetattr@plt+0x2478>
   12a10:	movw	r2, #2252	; 0x8cc
   12a14:	movw	r1, #46076	; 0xb3fc
   12a18:	movt	r1, #1
   12a1c:	movw	r0, #46088	; 0xb408
   12a20:	movt	r0, #1
   12a24:	bl	11158 <__assert_fail@plt>
   12a28:	tst	r3, #2
   12a2c:	beq	12a5c <tcgetattr@plt+0x18f8>
   12a30:	ldr	r1, [sp, #96]	; 0x60
   12a34:	ldr	r0, [r4, #4]
   12a38:	bl	114bc <tcgetattr@plt+0x358>
   12a3c:	cmp	r0, #0
   12a40:	beq	12ab4 <tcgetattr@plt+0x1950>
   12a44:	ldr	r3, [r4, #16]
   12a48:	ldr	r2, [r4, #12]
   12a4c:	orr	r2, r3, r2
   12a50:	ldr	r3, [r0]
   12a54:	bic	r3, r3, r2
   12a58:	str	r3, [r0]
   12a5c:	add	r5, r5, #20
   12a60:	mov	r4, r5
   12a64:	ldr	r3, [r5]
   12a68:	cmp	r3, #0
   12a6c:	beq	1287c <tcgetattr@plt+0x1718>
   12a70:	ldrb	r3, [r5, #8]
   12a74:	tst	r3, #16
   12a78:	bne	12a5c <tcgetattr@plt+0x18f8>
   12a7c:	tst	r3, #1
   12a80:	beq	12a28 <tcgetattr@plt+0x18c4>
   12a84:	ldr	r1, [sp, #96]	; 0x60
   12a88:	ldr	r0, [r4, #4]
   12a8c:	bl	114bc <tcgetattr@plt+0x358>
   12a90:	cmp	r0, #0
   12a94:	beq	12a0c <tcgetattr@plt+0x18a8>
   12a98:	ldr	r2, [r4, #16]
   12a9c:	ldr	r3, [r0]
   12aa0:	bic	r3, r3, r2
   12aa4:	ldr	r2, [r4, #12]
   12aa8:	orr	r3, r3, r2
   12aac:	str	r3, [r0]
   12ab0:	b	12a5c <tcgetattr@plt+0x18f8>
   12ab4:	ldr	r3, [pc, #2848]	; 135dc <tcgetattr@plt+0x2478>
   12ab8:	movw	r2, #2258	; 0x8d2
   12abc:	movw	r1, #46076	; 0xb3fc
   12ac0:	movt	r1, #1
   12ac4:	movw	r0, #46088	; 0xb408
   12ac8:	movt	r0, #1
   12acc:	bl	11158 <__assert_fail@plt>
   12ad0:	movw	r1, #46104	; 0xb418
   12ad4:	movt	r1, #1
   12ad8:	mov	r0, r4
   12adc:	bl	10eac <strcmp@plt>
   12ae0:	cmp	r0, #0
   12ae4:	bne	12b40 <tcgetattr@plt+0x19dc>
   12ae8:	cmp	r9, #0
   12aec:	beq	12b18 <tcgetattr@plt+0x19b4>
   12af0:	ldr	r3, [sp, #96]	; 0x60
   12af4:	ldr	r3, [r3, #8]
   12af8:	bic	r3, r3, #304	; 0x130
   12afc:	orr	r3, r3, #288	; 0x120
   12b00:	ldr	r2, [sp, #96]	; 0x60
   12b04:	str	r3, [r2, #8]
   12b08:	ldr	r3, [r2]
   12b0c:	orr	r3, r3, #32
   12b10:	str	r3, [r2]
   12b14:	b	1287c <tcgetattr@plt+0x1718>
   12b18:	ldr	r3, [sp, #96]	; 0x60
   12b1c:	ldr	r3, [r3, #8]
   12b20:	bic	r3, r3, #304	; 0x130
   12b24:	orr	r3, r3, #48	; 0x30
   12b28:	ldr	r2, [sp, #96]	; 0x60
   12b2c:	str	r3, [r2, #8]
   12b30:	ldr	r3, [r2]
   12b34:	bic	r3, r3, #32
   12b38:	str	r3, [r2]
   12b3c:	b	1287c <tcgetattr@plt+0x1718>
   12b40:	movw	r1, #46112	; 0xb420
   12b44:	movt	r1, #1
   12b48:	mov	r0, r4
   12b4c:	bl	10eac <strcmp@plt>
   12b50:	cmp	r0, #0
   12b54:	bne	12bc8 <tcgetattr@plt+0x1a64>
   12b58:	cmp	r9, #0
   12b5c:	beq	12b94 <tcgetattr@plt+0x1a30>
   12b60:	ldr	r3, [sp, #96]	; 0x60
   12b64:	ldr	r3, [r3, #8]
   12b68:	bic	r3, r3, #304	; 0x130
   12b6c:	orr	r3, r3, #288	; 0x120
   12b70:	ldr	r2, [sp, #96]	; 0x60
   12b74:	str	r3, [r2, #8]
   12b78:	ldr	r3, [r2]
   12b7c:	orr	r3, r3, #32
   12b80:	str	r3, [r2]
   12b84:	ldr	r3, [r2, #4]
   12b88:	orr	r3, r3, #1
   12b8c:	str	r3, [r2, #4]
   12b90:	b	1287c <tcgetattr@plt+0x1718>
   12b94:	ldr	r3, [sp, #96]	; 0x60
   12b98:	ldr	r3, [r3, #8]
   12b9c:	bic	r3, r3, #304	; 0x130
   12ba0:	orr	r3, r3, #48	; 0x30
   12ba4:	ldr	r2, [sp, #96]	; 0x60
   12ba8:	str	r3, [r2, #8]
   12bac:	ldr	r3, [r2]
   12bb0:	bic	r3, r3, #32
   12bb4:	str	r3, [r2]
   12bb8:	ldr	r3, [r2, #4]
   12bbc:	bic	r3, r3, #1
   12bc0:	str	r3, [r2, #4]
   12bc4:	b	1287c <tcgetattr@plt+0x1718>
   12bc8:	movw	r1, #46120	; 0xb428
   12bcc:	movt	r1, #1
   12bd0:	mov	r0, r4
   12bd4:	bl	10eac <strcmp@plt>
   12bd8:	cmp	r0, #0
   12bdc:	beq	12bf8 <tcgetattr@plt+0x1a94>
   12be0:	movw	r1, #46124	; 0xb42c
   12be4:	movt	r1, #1
   12be8:	mov	r0, r4
   12bec:	bl	10eac <strcmp@plt>
   12bf0:	cmp	r0, #0
   12bf4:	bne	12c90 <tcgetattr@plt+0x1b2c>
   12bf8:	ldrb	r3, [r4]
   12bfc:	cmp	r3, #114	; 0x72
   12c00:	movne	r2, #0
   12c04:	andeq	r2, r9, #1
   12c08:	cmp	r2, #0
   12c0c:	bne	12c5c <tcgetattr@plt+0x1af8>
   12c10:	cmp	r3, #99	; 0x63
   12c14:	moveq	r3, r9
   12c18:	orrne	r3, r9, #1
   12c1c:	cmp	r3, #0
   12c20:	beq	12c5c <tcgetattr@plt+0x1af8>
   12c24:	mov	r2, #0
   12c28:	ldr	r3, [sp, #96]	; 0x60
   12c2c:	str	r2, [r3]
   12c30:	ldr	r3, [r3, #4]
   12c34:	bic	r3, r3, #1
   12c38:	ldr	r1, [sp, #96]	; 0x60
   12c3c:	str	r3, [r1, #4]
   12c40:	ldr	r3, [r1, #12]
   12c44:	bic	r3, r3, #7
   12c48:	str	r3, [r1, #12]
   12c4c:	mov	r3, #1
   12c50:	strb	r3, [r1, #23]
   12c54:	strb	r2, [r1, #22]
   12c58:	b	1287c <tcgetattr@plt+0x1718>
   12c5c:	ldr	r3, [sp, #96]	; 0x60
   12c60:	ldr	r3, [r3]
   12c64:	orr	r3, r3, #1312	; 0x520
   12c68:	orr	r3, r3, #6
   12c6c:	ldr	r2, [sp, #96]	; 0x60
   12c70:	str	r3, [r2]
   12c74:	ldr	r3, [r2, #4]
   12c78:	orr	r3, r3, #1
   12c7c:	str	r3, [r2, #4]
   12c80:	ldr	r3, [r2, #12]
   12c84:	orr	r3, r3, #3
   12c88:	str	r3, [r2, #12]
   12c8c:	b	1287c <tcgetattr@plt+0x1718>
   12c90:	movw	r1, #46132	; 0xb434
   12c94:	movt	r1, #1
   12c98:	mov	r0, r4
   12c9c:	bl	10eac <strcmp@plt>
   12ca0:	cmp	r0, #0
   12ca4:	bne	12cc8 <tcgetattr@plt+0x1b64>
   12ca8:	cmp	r9, #0
   12cac:	ldr	r3, [sp, #96]	; 0x60
   12cb0:	ldr	r3, [r3]
   12cb4:	orrne	r3, r3, #2048	; 0x800
   12cb8:	biceq	r3, r3, #2048	; 0x800
   12cbc:	ldr	r2, [sp, #96]	; 0x60
   12cc0:	str	r3, [r2]
   12cc4:	b	1287c <tcgetattr@plt+0x1718>
   12cc8:	movw	r1, #46140	; 0xb43c
   12ccc:	movt	r1, #1
   12cd0:	mov	r0, r4
   12cd4:	bl	10eac <strcmp@plt>
   12cd8:	cmp	r0, #0
   12cdc:	bne	12d00 <tcgetattr@plt+0x1b9c>
   12ce0:	cmp	r9, #0
   12ce4:	ldr	r3, [sp, #96]	; 0x60
   12ce8:	ldr	r3, [r3, #4]
   12cec:	orrne	r3, r3, #6144	; 0x1800
   12cf0:	biceq	r3, r3, #6144	; 0x1800
   12cf4:	ldr	r2, [sp, #96]	; 0x60
   12cf8:	str	r3, [r2, #4]
   12cfc:	b	1287c <tcgetattr@plt+0x1718>
   12d00:	movw	r1, #46148	; 0xb444
   12d04:	movt	r1, #1
   12d08:	mov	r0, r4
   12d0c:	bl	10eac <strcmp@plt>
   12d10:	cmp	r0, #0
   12d14:	beq	12d30 <tcgetattr@plt+0x1bcc>
   12d18:	movw	r1, #46156	; 0xb44c
   12d1c:	movt	r1, #1
   12d20:	mov	r0, r4
   12d24:	bl	10eac <strcmp@plt>
   12d28:	cmp	r0, #0
   12d2c:	bne	12d98 <tcgetattr@plt+0x1c34>
   12d30:	cmp	r9, #0
   12d34:	beq	12d68 <tcgetattr@plt+0x1c04>
   12d38:	ldr	r3, [sp, #96]	; 0x60
   12d3c:	ldr	r3, [r3, #12]
   12d40:	bic	r3, r3, #4
   12d44:	ldr	r2, [sp, #96]	; 0x60
   12d48:	str	r3, [r2, #12]
   12d4c:	ldr	r3, [r2]
   12d50:	bic	r3, r3, #512	; 0x200
   12d54:	str	r3, [r2]
   12d58:	ldr	r3, [r2, #4]
   12d5c:	bic	r3, r3, #2
   12d60:	str	r3, [r2, #4]
   12d64:	b	1287c <tcgetattr@plt+0x1718>
   12d68:	ldr	r3, [sp, #96]	; 0x60
   12d6c:	ldr	r3, [r3, #12]
   12d70:	orr	r3, r3, #4
   12d74:	ldr	r2, [sp, #96]	; 0x60
   12d78:	str	r3, [r2, #12]
   12d7c:	ldr	r3, [r2]
   12d80:	orr	r3, r3, #512	; 0x200
   12d84:	str	r3, [r2]
   12d88:	ldr	r3, [r2, #4]
   12d8c:	orr	r3, r3, #2
   12d90:	str	r3, [r2, #4]
   12d94:	b	1287c <tcgetattr@plt+0x1718>
   12d98:	movw	r1, #46164	; 0xb454
   12d9c:	movt	r1, #1
   12da0:	mov	r0, r4
   12da4:	bl	10eac <strcmp@plt>
   12da8:	cmp	r0, #0
   12dac:	bne	12dc8 <tcgetattr@plt+0x1c64>
   12db0:	ldr	r3, [sp, #96]	; 0x60
   12db4:	ldr	r3, [r3, #12]
   12db8:	orr	r3, r3, #2576	; 0xa10
   12dbc:	ldr	r2, [sp, #96]	; 0x60
   12dc0:	str	r3, [r2, #12]
   12dc4:	b	1287c <tcgetattr@plt+0x1718>
   12dc8:	movw	r1, #46168	; 0xb458
   12dcc:	movt	r1, #1
   12dd0:	mov	r0, r4
   12dd4:	bl	10eac <strcmp@plt>
   12dd8:	cmp	r0, #0
   12ddc:	bne	1287c <tcgetattr@plt+0x1718>
   12de0:	mov	r3, #3
   12de4:	ldr	r2, [sp, #96]	; 0x60
   12de8:	strb	r3, [r2, #17]
   12dec:	mov	r3, #127	; 0x7f
   12df0:	strb	r3, [r2, #19]
   12df4:	mov	r3, #21
   12df8:	strb	r3, [r2, #20]
   12dfc:	ldr	r3, [r2, #12]
   12e00:	orr	r3, r3, #2576	; 0xa10
   12e04:	str	r3, [r2, #12]
   12e08:	ldr	r3, [r2]
   12e0c:	bic	r3, r3, #2048	; 0x800
   12e10:	str	r3, [r2]
   12e14:	b	1287c <tcgetattr@plt+0x1718>
   12e18:	sub	r3, sl, #1
   12e1c:	cmp	r3, r8
   12e20:	beq	12ea4 <tcgetattr@plt+0x1d40>
   12e24:	ldr	r3, [sp, #4]
   12e28:	add	r3, fp, r3
   12e2c:	ldr	r7, [r3, #4]
   12e30:	cmp	r7, #0
   12e34:	beq	12ea4 <tcgetattr@plt+0x1d40>
   12e38:	add	r8, r8, #1
   12e3c:	movw	r1, #46216	; 0xb488
   12e40:	movt	r1, #1
   12e44:	mov	r0, r4
   12e48:	bl	10eac <strcmp@plt>
   12e4c:	cmp	r0, #0
   12e50:	beq	12e6c <tcgetattr@plt+0x1d08>
   12e54:	movw	r1, #46220	; 0xb48c
   12e58:	movt	r1, #1
   12e5c:	mov	r0, r4
   12e60:	bl	10eac <strcmp@plt>
   12e64:	cmp	r0, #0
   12e68:	bne	12ee0 <tcgetattr@plt+0x1d7c>
   12e6c:	mov	r1, #255	; 0xff
   12e70:	mov	r0, r7
   12e74:	bl	11734 <tcgetattr@plt+0x5d0>
   12e78:	add	r6, r6, r6, lsl #1
   12e7c:	ldr	r3, [sp, #12]
   12e80:	add	r3, r3, r6, lsl #2
   12e84:	ldr	r3, [r3, #2284]	; 0x8ec
   12e88:	ldr	r2, [sp, #96]	; 0x60
   12e8c:	add	r3, r2, r3
   12e90:	strb	r0, [r3, #17]
   12e94:	mov	r3, #1
   12e98:	ldr	r2, [sp, #104]	; 0x68
   12e9c:	strb	r3, [r2]
   12ea0:	b	126d0 <tcgetattr@plt+0x156c>
   12ea4:	mov	r2, #5
   12ea8:	movw	r1, #46192	; 0xb470
   12eac:	movt	r1, #1
   12eb0:	mov	r0, #0
   12eb4:	bl	10f24 <dcgettext@plt>
   12eb8:	mov	r4, r0
   12ebc:	mov	r0, r5
   12ec0:	bl	16a00 <tcgetattr@plt+0x589c>
   12ec4:	mov	r3, r0
   12ec8:	mov	r2, r4
   12ecc:	mov	r1, #0
   12ed0:	mov	r0, r1
   12ed4:	bl	10fcc <error@plt>
   12ed8:	mov	r0, #1
   12edc:	bl	11988 <tcgetattr@plt+0x824>
   12ee0:	ldrb	r4, [r7]
   12ee4:	cmp	r4, #0
   12ee8:	beq	12ef8 <tcgetattr@plt+0x1d94>
   12eec:	ldrb	r5, [r7, #1]
   12ef0:	cmp	r5, #0
   12ef4:	bne	12f00 <tcgetattr@plt+0x1d9c>
   12ef8:	mov	r0, r4
   12efc:	b	12e78 <tcgetattr@plt+0x1d14>
   12f00:	movw	r1, #46228	; 0xb494
   12f04:	movt	r1, #1
   12f08:	mov	r0, r7
   12f0c:	bl	10eac <strcmp@plt>
   12f10:	cmp	r0, #0
   12f14:	moveq	r0, #0
   12f18:	beq	12e78 <tcgetattr@plt+0x1d14>
   12f1c:	movw	r1, #46232	; 0xb498
   12f20:	movt	r1, #1
   12f24:	mov	r0, r7
   12f28:	bl	10eac <strcmp@plt>
   12f2c:	cmp	r0, #0
   12f30:	moveq	r0, #0
   12f34:	beq	12e78 <tcgetattr@plt+0x1d14>
   12f38:	cmp	r4, #94	; 0x5e
   12f3c:	bne	12f50 <tcgetattr@plt+0x1dec>
   12f40:	cmp	r5, #63	; 0x3f
   12f44:	bicne	r0, r5, #96	; 0x60
   12f48:	moveq	r0, #127	; 0x7f
   12f4c:	b	12e78 <tcgetattr@plt+0x1d14>
   12f50:	mov	r1, #255	; 0xff
   12f54:	mov	r0, r7
   12f58:	bl	11734 <tcgetattr@plt+0x5d0>
   12f5c:	b	12e78 <tcgetattr@plt+0x1d14>
   12f60:	mov	r2, #5
   12f64:	movw	r1, #46192	; 0xb470
   12f68:	movt	r1, #1
   12f6c:	mov	r0, #0
   12f70:	bl	10f24 <dcgettext@plt>
   12f74:	mov	r4, r0
   12f78:	mov	r0, r5
   12f7c:	bl	16a00 <tcgetattr@plt+0x589c>
   12f80:	mov	r3, r0
   12f84:	mov	r2, r4
   12f88:	mov	r1, #0
   12f8c:	mov	r0, r1
   12f90:	bl	10fcc <error@plt>
   12f94:	mov	r0, #1
   12f98:	bl	11988 <tcgetattr@plt+0x824>
   12f9c:	movw	r1, #46248	; 0xb4a8
   12fa0:	movt	r1, #1
   12fa4:	mov	r0, r5
   12fa8:	bl	10eac <strcmp@plt>
   12fac:	cmp	r0, #0
   12fb0:	bne	13044 <tcgetattr@plt+0x1ee0>
   12fb4:	sub	r3, sl, #1
   12fb8:	cmp	r3, r8
   12fbc:	beq	13008 <tcgetattr@plt+0x1ea4>
   12fc0:	add	r3, r8, #1
   12fc4:	ldr	r0, [fp, r3, lsl #2]
   12fc8:	cmp	r0, #0
   12fcc:	beq	13008 <tcgetattr@plt+0x1ea4>
   12fd0:	add	r8, r8, #1
   12fd4:	ldr	r3, [sp, #24]
   12fd8:	cmp	r3, #0
   12fdc:	bne	126d0 <tcgetattr@plt+0x156c>
   12fe0:	bl	113c8 <tcgetattr@plt+0x264>
   12fe4:	mov	r1, r0
   12fe8:	ldr	r0, [sp, #96]	; 0x60
   12fec:	bl	10f6c <cfsetospeed@plt>
   12ff0:	mov	r3, #1
   12ff4:	ldr	r2, [sp, #100]	; 0x64
   12ff8:	strb	r3, [r2]
   12ffc:	ldr	r2, [sp, #104]	; 0x68
   13000:	strb	r3, [r2]
   13004:	b	126d0 <tcgetattr@plt+0x156c>
   13008:	mov	r2, #5
   1300c:	movw	r1, #46192	; 0xb470
   13010:	movt	r1, #1
   13014:	mov	r0, #0
   13018:	bl	10f24 <dcgettext@plt>
   1301c:	mov	r4, r0
   13020:	mov	r0, r5
   13024:	bl	16a00 <tcgetattr@plt+0x589c>
   13028:	mov	r3, r0
   1302c:	mov	r2, r4
   13030:	mov	r1, #0
   13034:	mov	r0, r1
   13038:	bl	10fcc <error@plt>
   1303c:	mov	r0, #1
   13040:	bl	11988 <tcgetattr@plt+0x824>
   13044:	movw	r1, #46256	; 0xb4b0
   13048:	movt	r1, #1
   1304c:	mov	r0, r5
   13050:	bl	10eac <strcmp@plt>
   13054:	cmp	r0, #0
   13058:	bne	130dc <tcgetattr@plt+0x1f78>
   1305c:	sub	r3, sl, #1
   13060:	cmp	r3, r8
   13064:	beq	130a0 <tcgetattr@plt+0x1f3c>
   13068:	add	r3, r8, #1
   1306c:	ldr	r0, [fp, r3, lsl #2]
   13070:	cmp	r0, #0
   13074:	beq	130a0 <tcgetattr@plt+0x1f3c>
   13078:	add	r8, r8, #1
   1307c:	ldr	r3, [sp, #24]
   13080:	cmp	r3, #0
   13084:	bne	126d0 <tcgetattr@plt+0x156c>
   13088:	mvn	r1, #-2147483648	; 0x80000000
   1308c:	bl	11734 <tcgetattr@plt+0x5d0>
   13090:	ldr	r2, [sp, #28]
   13094:	mvn	r1, #0
   13098:	bl	118a4 <tcgetattr@plt+0x740>
   1309c:	b	126d0 <tcgetattr@plt+0x156c>
   130a0:	mov	r2, #5
   130a4:	movw	r1, #46192	; 0xb470
   130a8:	movt	r1, #1
   130ac:	mov	r0, #0
   130b0:	bl	10f24 <dcgettext@plt>
   130b4:	mov	r4, r0
   130b8:	mov	r0, r5
   130bc:	bl	16a00 <tcgetattr@plt+0x589c>
   130c0:	mov	r3, r0
   130c4:	mov	r2, r4
   130c8:	mov	r1, #0
   130cc:	mov	r0, r1
   130d0:	bl	10fcc <error@plt>
   130d4:	mov	r0, #1
   130d8:	bl	11988 <tcgetattr@plt+0x824>
   130dc:	movw	r1, #46264	; 0xb4b8
   130e0:	movt	r1, #1
   130e4:	mov	r0, r5
   130e8:	bl	10eac <strcmp@plt>
   130ec:	cmp	r0, #0
   130f0:	beq	1310c <tcgetattr@plt+0x1fa8>
   130f4:	movw	r1, #46272	; 0xb4c0
   130f8:	movt	r1, #1
   130fc:	mov	r0, r5
   13100:	bl	10eac <strcmp@plt>
   13104:	cmp	r0, #0
   13108:	bne	13190 <tcgetattr@plt+0x202c>
   1310c:	sub	r3, sl, #1
   13110:	cmp	r3, r8
   13114:	beq	13154 <tcgetattr@plt+0x1ff0>
   13118:	add	r3, r8, #1
   1311c:	ldr	r0, [fp, r3, lsl #2]
   13120:	cmp	r0, #0
   13124:	beq	13154 <tcgetattr@plt+0x1ff0>
   13128:	add	r8, r8, #1
   1312c:	ldr	r3, [sp, #24]
   13130:	cmp	r3, #0
   13134:	bne	126d0 <tcgetattr@plt+0x156c>
   13138:	mvn	r1, #-2147483648	; 0x80000000
   1313c:	bl	11734 <tcgetattr@plt+0x5d0>
   13140:	ldr	r2, [sp, #28]
   13144:	mov	r1, r0
   13148:	mvn	r0, #0
   1314c:	bl	118a4 <tcgetattr@plt+0x740>
   13150:	b	126d0 <tcgetattr@plt+0x156c>
   13154:	mov	r2, #5
   13158:	movw	r1, #46192	; 0xb470
   1315c:	movt	r1, #1
   13160:	mov	r0, #0
   13164:	bl	10f24 <dcgettext@plt>
   13168:	mov	r4, r0
   1316c:	mov	r0, r5
   13170:	bl	16a00 <tcgetattr@plt+0x589c>
   13174:	mov	r3, r0
   13178:	mov	r2, r4
   1317c:	mov	r1, #0
   13180:	mov	r0, r1
   13184:	bl	10fcc <error@plt>
   13188:	mov	r0, #1
   1318c:	bl	11988 <tcgetattr@plt+0x824>
   13190:	movw	r1, #46280	; 0xb4c8
   13194:	movt	r1, #1
   13198:	mov	r0, r5
   1319c:	bl	10eac <strcmp@plt>
   131a0:	cmp	r0, #0
   131a4:	bne	131d8 <tcgetattr@plt+0x2074>
   131a8:	ldr	r3, [sp, #24]
   131ac:	cmp	r3, #0
   131b0:	bne	126d0 <tcgetattr@plt+0x156c>
   131b4:	bl	11438 <tcgetattr@plt+0x2d4>
   131b8:	movw	r3, #53632	; 0xd180
   131bc:	movt	r3, #2
   131c0:	str	r0, [r3, #16]
   131c4:	mov	r0, #0
   131c8:	str	r0, [r3, #12]
   131cc:	ldr	r1, [sp, #28]
   131d0:	bl	1179c <tcgetattr@plt+0x638>
   131d4:	b	126d0 <tcgetattr@plt+0x156c>
   131d8:	movw	r1, #46288	; 0xb4d0
   131dc:	movt	r1, #1
   131e0:	mov	r0, r5
   131e4:	bl	10eac <strcmp@plt>
   131e8:	cmp	r0, #0
   131ec:	bne	132b0 <tcgetattr@plt+0x214c>
   131f0:	sub	r3, sl, #1
   131f4:	cmp	r3, r8
   131f8:	beq	1323c <tcgetattr@plt+0x20d8>
   131fc:	add	r4, r8, #1
   13200:	ldr	r0, [fp, r4, lsl #2]
   13204:	cmp	r0, #0
   13208:	beq	1323c <tcgetattr@plt+0x20d8>
   1320c:	add	r8, r8, #1
   13210:	mvn	r1, #0
   13214:	bl	11734 <tcgetattr@plt+0x5d0>
   13218:	ldr	r3, [sp, #96]	; 0x60
   1321c:	strb	r0, [r3, #16]
   13220:	uxtb	r3, r0
   13224:	cmp	r0, r3
   13228:	bne	13278 <tcgetattr@plt+0x2114>
   1322c:	mov	r3, #1
   13230:	ldr	r2, [sp, #104]	; 0x68
   13234:	strb	r3, [r2]
   13238:	b	126d0 <tcgetattr@plt+0x156c>
   1323c:	mov	r2, #5
   13240:	movw	r1, #46192	; 0xb470
   13244:	movt	r1, #1
   13248:	mov	r0, #0
   1324c:	bl	10f24 <dcgettext@plt>
   13250:	mov	r4, r0
   13254:	mov	r0, r5
   13258:	bl	16a00 <tcgetattr@plt+0x589c>
   1325c:	mov	r3, r0
   13260:	mov	r2, r4
   13264:	mov	r1, #0
   13268:	mov	r0, r1
   1326c:	bl	10fcc <error@plt>
   13270:	mov	r0, #1
   13274:	bl	11988 <tcgetattr@plt+0x824>
   13278:	mov	r2, #5
   1327c:	movw	r1, #46296	; 0xb4d8
   13280:	movt	r1, #1
   13284:	mov	r0, #0
   13288:	bl	10f24 <dcgettext@plt>
   1328c:	mov	r5, r0
   13290:	ldr	r0, [fp, r4, lsl #2]
   13294:	bl	16a00 <tcgetattr@plt+0x589c>
   13298:	mov	r3, r0
   1329c:	mov	r2, r5
   132a0:	mov	r1, #0
   132a4:	mov	r0, r1
   132a8:	bl	10fcc <error@plt>
   132ac:	b	1322c <tcgetattr@plt+0x20c8>
   132b0:	movw	r1, #46324	; 0xb4f4
   132b4:	movt	r1, #1
   132b8:	mov	r0, r5
   132bc:	bl	10eac <strcmp@plt>
   132c0:	cmp	r0, #0
   132c4:	bne	132f4 <tcgetattr@plt+0x2190>
   132c8:	ldr	r3, [sp, #24]
   132cc:	cmp	r3, #0
   132d0:	bne	126d0 <tcgetattr@plt+0x156c>
   132d4:	bl	11438 <tcgetattr@plt+0x2d4>
   132d8:	movw	r3, #53632	; 0xd180
   132dc:	movt	r3, #2
   132e0:	str	r0, [r3, #16]
   132e4:	mov	r1, #0
   132e8:	ldr	r0, [sp, #96]	; 0x60
   132ec:	bl	11650 <tcgetattr@plt+0x4ec>
   132f0:	b	126d0 <tcgetattr@plt+0x156c>
   132f4:	mov	r0, r5
   132f8:	bl	113c8 <tcgetattr@plt+0x264>
   132fc:	mov	r4, r0
   13300:	cmn	r0, #1
   13304:	beq	13344 <tcgetattr@plt+0x21e0>
   13308:	ldr	r3, [sp, #24]
   1330c:	cmp	r3, #0
   13310:	bne	126d0 <tcgetattr@plt+0x156c>
   13314:	mov	r1, r0
   13318:	ldr	r0, [sp, #96]	; 0x60
   1331c:	bl	11068 <cfsetispeed@plt>
   13320:	mov	r1, r4
   13324:	ldr	r0, [sp, #96]	; 0x60
   13328:	bl	10f6c <cfsetospeed@plt>
   1332c:	mov	r3, #1
   13330:	ldr	r2, [sp, #100]	; 0x64
   13334:	strb	r3, [r2]
   13338:	ldr	r2, [sp, #104]	; 0x68
   1333c:	strb	r3, [r2]
   13340:	b	126d0 <tcgetattr@plt+0x156c>
   13344:	bl	11080 <__errno_location@plt>
   13348:	mov	r4, r0
   1334c:	mov	r7, r5
   13350:	mov	r6, #0
   13354:	mov	r9, r6
   13358:	str	r9, [r4]
   1335c:	mov	r2, #16
   13360:	add	r1, sp, #36	; 0x24
   13364:	mov	r0, r7
   13368:	bl	11044 <strtoul@plt>
   1336c:	ldr	r3, [r4]
   13370:	cmp	r3, #0
   13374:	bne	13468 <tcgetattr@plt+0x2304>
   13378:	ldr	r3, [sp, #36]	; 0x24
   1337c:	ldrb	r1, [r3]
   13380:	cmp	r3, r7
   13384:	movne	r2, #0
   13388:	moveq	r2, #1
   1338c:	cmp	r1, #58	; 0x3a
   13390:	orrne	r2, r2, #1
   13394:	cmp	r2, #0
   13398:	bne	13468 <tcgetattr@plt+0x2304>
   1339c:	add	r2, sp, #40	; 0x28
   133a0:	str	r0, [r2, r6, lsl #2]
   133a4:	add	r7, r3, #1
   133a8:	add	r6, r6, #1
   133ac:	cmp	r6, #4
   133b0:	bne	13358 <tcgetattr@plt+0x21f4>
   133b4:	ldr	r3, [sp, #40]	; 0x28
   133b8:	ldr	r2, [sp, #96]	; 0x60
   133bc:	str	r3, [r2]
   133c0:	ldr	r3, [sp, #44]	; 0x2c
   133c4:	str	r3, [r2, #4]
   133c8:	ldr	r3, [sp, #48]	; 0x30
   133cc:	str	r3, [r2, #8]
   133d0:	ldr	r3, [sp, #52]	; 0x34
   133d4:	str	r3, [r2, #12]
   133d8:	add	r9, r2, #16
   133dc:	mov	r6, #0
   133e0:	mov	r3, #58	; 0x3a
   133e4:	str	r3, [sp, #4]
   133e8:	mov	r3, #0
   133ec:	str	r3, [r4]
   133f0:	mov	r2, #16
   133f4:	add	r1, sp, #36	; 0x24
   133f8:	mov	r0, r7
   133fc:	bl	11044 <strtoul@plt>
   13400:	ldr	r3, [r4]
   13404:	cmp	r3, #0
   13408:	bne	13468 <tcgetattr@plt+0x2304>
   1340c:	ldr	r3, [sp, #36]	; 0x24
   13410:	ldrb	r1, [r3]
   13414:	cmp	r3, r7
   13418:	movne	r2, #0
   1341c:	moveq	r2, #1
   13420:	ldr	ip, [sp, #4]
   13424:	cmp	r1, ip
   13428:	orrne	r2, r2, #1
   1342c:	cmp	r2, #0
   13430:	bne	13468 <tcgetattr@plt+0x2304>
   13434:	uxtb	r2, r0
   13438:	cmp	r0, r2
   1343c:	bne	13468 <tcgetattr@plt+0x2304>
   13440:	strb	r2, [r9, #1]!
   13444:	add	r7, r3, #1
   13448:	add	r6, r6, #1
   1344c:	cmp	r6, #32
   13450:	beq	134a4 <tcgetattr@plt+0x2340>
   13454:	cmp	r6, #31
   13458:	movcc	r3, #58	; 0x3a
   1345c:	movcs	r3, #0
   13460:	str	r3, [sp, #4]
   13464:	b	133e8 <tcgetattr@plt+0x2284>
   13468:	mov	r2, #5
   1346c:	movw	r1, #46172	; 0xb45c
   13470:	movt	r1, #1
   13474:	mov	r0, #0
   13478:	bl	10f24 <dcgettext@plt>
   1347c:	mov	r4, r0
   13480:	mov	r0, r5
   13484:	bl	16a00 <tcgetattr@plt+0x589c>
   13488:	mov	r3, r0
   1348c:	mov	r2, r4
   13490:	mov	r1, #0
   13494:	mov	r0, r1
   13498:	bl	10fcc <error@plt>
   1349c:	mov	r0, #1
   134a0:	bl	11988 <tcgetattr@plt+0x824>
   134a4:	mov	r3, #1
   134a8:	ldr	r2, [sp, #104]	; 0x68
   134ac:	strb	r3, [r2]
   134b0:	b	126d0 <tcgetattr@plt+0x156c>
   134b4:	add	r3, r6, r6, lsl #2
   134b8:	ldr	r2, [sp, #12]
   134bc:	add	r3, r2, r3, lsl #2
   134c0:	ldr	r1, [sp, #96]	; 0x60
   134c4:	ldr	r0, [r3, #480]	; 0x1e0
   134c8:	bl	114bc <tcgetattr@plt+0x358>
   134cc:	cmp	r0, #0
   134d0:	beq	1356c <tcgetattr@plt+0x2408>
   134d4:	lsl	r3, r6, #2
   134d8:	add	r2, r3, r6
   134dc:	ldr	ip, [sp, #12]
   134e0:	add	r2, ip, r2, lsl #2
   134e4:	ldr	r1, [r2, #492]	; 0x1ec
   134e8:	ldr	r2, [r0]
   134ec:	bic	r2, r2, r1
   134f0:	add	r3, r3, r6
   134f4:	add	r3, ip, r3, lsl #2
   134f8:	ldr	r3, [r3, #488]	; 0x1e8
   134fc:	orr	r3, r2, r3
   13500:	str	r3, [r0]
   13504:	b	1287c <tcgetattr@plt+0x1718>
   13508:	mov	r3, #1
   1350c:	ldr	r2, [sp, #104]	; 0x68
   13510:	strb	r3, [r2]
   13514:	mov	r2, #5
   13518:	movw	r1, #46172	; 0xb45c
   1351c:	movt	r1, #1
   13520:	mov	r0, #0
   13524:	bl	10f24 <dcgettext@plt>
   13528:	mov	r4, r0
   1352c:	sub	r0, r5, #1
   13530:	bl	16a00 <tcgetattr@plt+0x589c>
   13534:	mov	r3, r0
   13538:	mov	r2, r4
   1353c:	mov	r1, #0
   13540:	mov	r0, r1
   13544:	bl	10fcc <error@plt>
   13548:	mov	r0, #1
   1354c:	bl	11988 <tcgetattr@plt+0x824>
   13550:	movw	r1, #46332	; 0xb4fc
   13554:	movt	r1, #1
   13558:	mov	r0, r4
   1355c:	bl	10eac <strcmp@plt>
   13560:	cmp	r0, #0
   13564:	beq	135a4 <tcgetattr@plt+0x2440>
   13568:	b	13584 <tcgetattr@plt+0x2420>
   1356c:	movw	r1, #46332	; 0xb4fc
   13570:	movt	r1, #1
   13574:	mov	r0, r4
   13578:	bl	10eac <strcmp@plt>
   1357c:	cmp	r0, #0
   13580:	beq	1288c <tcgetattr@plt+0x1728>
   13584:	movw	r1, #46048	; 0xb3e0
   13588:	movt	r1, #1
   1358c:	mov	r0, r4
   13590:	bl	10eac <strcmp@plt>
   13594:	cmp	r0, #0
   13598:	bne	128a8 <tcgetattr@plt+0x1744>
   1359c:	cmp	r9, #0
   135a0:	beq	1288c <tcgetattr@plt+0x1728>
   135a4:	ldr	r3, [sp, #96]	; 0x60
   135a8:	ldr	r3, [r3, #8]
   135ac:	bic	r3, r3, #304	; 0x130
   135b0:	orr	r3, r3, #48	; 0x30
   135b4:	ldr	r2, [sp, #96]	; 0x60
   135b8:	str	r3, [r2, #8]
   135bc:	b	1287c <tcgetattr@plt+0x1718>
   135c0:	add	sp, sp, #60	; 0x3c
   135c4:	ldrd	r4, [sp]
   135c8:	ldrd	r6, [sp, #8]
   135cc:	ldrd	r8, [sp, #16]
   135d0:	ldrd	sl, [sp, #24]
   135d4:	add	sp, sp, #32
   135d8:	pop	{pc}		; (ldr pc, [sp], #4)
   135dc:	strdeq	r9, [r1], -r0
   135e0:	strd	r4, [sp, #-36]!	; 0xffffffdc
   135e4:	strd	r6, [sp, #8]
   135e8:	strd	r8, [sp, #16]
   135ec:	strd	sl, [sp, #24]
   135f0:	str	lr, [sp, #32]
   135f4:	sub	sp, sp, #44	; 0x2c
   135f8:	mov	sl, r0
   135fc:	mov	r8, r1
   13600:	ldr	r0, [r1]
   13604:	bl	14704 <tcgetattr@plt+0x35a0>
   13608:	movw	r1, #42768	; 0xa710
   1360c:	movt	r1, #1
   13610:	mov	r0, #6
   13614:	bl	11104 <setlocale@plt>
   13618:	movw	r4, #45856	; 0xb320
   1361c:	movt	r4, #1
   13620:	movw	r1, #46340	; 0xb504
   13624:	movt	r1, #1
   13628:	mov	r0, r4
   1362c:	bl	11128 <bindtextdomain@plt>
   13630:	mov	r0, r4
   13634:	bl	10f54 <textdomain@plt>
   13638:	movw	r0, #17064	; 0x42a8
   1363c:	movt	r0, #1
   13640:	bl	18804 <tcgetattr@plt+0x76a0>
   13644:	movw	r3, #53616	; 0xd170
   13648:	movt	r3, #2
   1364c:	mov	r7, #0
   13650:	str	r7, [r3]
   13654:	mov	fp, r7
   13658:	mov	r3, #1
   1365c:	str	r3, [sp, #28]
   13660:	str	r7, [sp, #20]
   13664:	str	r7, [sp, #24]
   13668:	mov	r4, r3
   1366c:	mov	r6, r7
   13670:	movw	r9, #46424	; 0xb558
   13674:	movt	r9, #1
   13678:	movw	r5, #53600	; 0xd160
   1367c:	movt	r5, #2
   13680:	b	13770 <tcgetattr@plt+0x260c>
   13684:	cmn	r0, #3
   13688:	bne	136d4 <tcgetattr@plt+0x2570>
   1368c:	movw	r3, #53520	; 0xd110
   13690:	movt	r3, #2
   13694:	movw	r0, #53612	; 0xd16c
   13698:	movt	r0, #2
   1369c:	mov	r4, #0
   136a0:	str	r4, [sp, #4]
   136a4:	movw	r2, #46400	; 0xb540
   136a8:	movt	r2, #1
   136ac:	str	r2, [sp]
   136b0:	ldr	r3, [r3]
   136b4:	movw	r2, #45852	; 0xb31c
   136b8:	movt	r2, #1
   136bc:	movw	r1, #37680	; 0x9330
   136c0:	movt	r1, #1
   136c4:	ldr	r0, [r0]
   136c8:	bl	16efc <tcgetattr@plt+0x5d98>
   136cc:	mov	r0, r4
   136d0:	bl	11038 <exit@plt>
   136d4:	cmn	r0, #2
   136d8:	beq	137f4 <tcgetattr@plt+0x2690>
   136dc:	add	r6, r6, r4
   136e0:	ldr	r4, [r8, r6, lsl #2]
   136e4:	movw	r1, #46416	; 0xb550
   136e8:	movt	r1, #1
   136ec:	mov	r0, r4
   136f0:	bl	10eac <strcmp@plt>
   136f4:	cmp	r0, #0
   136f8:	beq	1371c <tcgetattr@plt+0x25b8>
   136fc:	movw	r1, #46040	; 0xb3d8
   13700:	movt	r1, #1
   13704:	mov	r0, r4
   13708:	bl	10eac <strcmp@plt>
   1370c:	cmp	r0, #0
   13710:	ldr	r3, [sp, #28]
   13714:	movne	r3, #0
   13718:	str	r3, [sp, #28]
   1371c:	mov	r3, #0
   13720:	str	r3, [r5]
   13724:	mov	r4, #1
   13728:	b	13770 <tcgetattr@plt+0x260c>
   1372c:	cmp	r0, #103	; 0x67
   13730:	moveq	r3, #1
   13734:	streq	r3, [sp, #20]
   13738:	moveq	r7, #2
   1373c:	bne	136dc <tcgetattr@plt+0x2578>
   13740:	ldr	r3, [r5]
   13744:	cmp	r4, r3
   13748:	bge	13770 <tcgetattr@plt+0x260c>
   1374c:	add	r3, r6, r4
   13750:	sub	r3, r3, #-1073741823	; 0xc0000001
   13754:	add	r3, r8, r3, lsl #2
   13758:	mov	r1, #0
   1375c:	add	r4, r4, #1
   13760:	str	r1, [r3, #4]!
   13764:	ldr	r2, [r5]
   13768:	cmp	r2, r4
   1376c:	bgt	1375c <tcgetattr@plt+0x25f8>
   13770:	mov	r3, #0
   13774:	str	r3, [sp]
   13778:	ldr	r3, [pc, #2792]	; 14268 <tcgetattr@plt+0x3104>
   1377c:	mov	r2, r9
   13780:	add	r1, r8, r6, lsl #2
   13784:	sub	r0, sl, r6
   13788:	bl	11020 <getopt_long@plt>
   1378c:	cmn	r0, #1
   13790:	beq	137fc <tcgetattr@plt+0x2698>
   13794:	cmp	r0, #70	; 0x46
   13798:	beq	137b8 <tcgetattr@plt+0x2654>
   1379c:	ble	13684 <tcgetattr@plt+0x2520>
   137a0:	cmp	r0, #97	; 0x61
   137a4:	bne	1372c <tcgetattr@plt+0x25c8>
   137a8:	mov	r3, #1
   137ac:	str	r3, [sp, #24]
   137b0:	mov	r7, r3
   137b4:	b	13740 <tcgetattr@plt+0x25dc>
   137b8:	cmp	fp, #0
   137bc:	bne	137d0 <tcgetattr@plt+0x266c>
   137c0:	movw	r3, #53624	; 0xd178
   137c4:	movt	r3, #2
   137c8:	ldr	fp, [r3]
   137cc:	b	13740 <tcgetattr@plt+0x25dc>
   137d0:	mov	r2, #5
   137d4:	movw	r1, #46364	; 0xb51c
   137d8:	movt	r1, #1
   137dc:	mov	r0, #0
   137e0:	bl	10f24 <dcgettext@plt>
   137e4:	mov	r2, r0
   137e8:	mov	r1, #0
   137ec:	mov	r0, #1
   137f0:	bl	10fcc <error@plt>
   137f4:	mov	r0, #0
   137f8:	bl	11988 <tcgetattr@plt+0x824>
   137fc:	ldr	r3, [sp, #24]
   13800:	ldr	r2, [sp, #20]
   13804:	ands	r4, r3, r2
   13808:	bne	13924 <tcgetattr@plt+0x27c0>
   1380c:	ldr	r3, [sp, #28]
   13810:	cmp	r3, #0
   13814:	bne	13828 <tcgetattr@plt+0x26c4>
   13818:	ldr	r3, [sp, #24]
   1381c:	ldr	r2, [sp, #20]
   13820:	orrs	r3, r3, r2
   13824:	bne	13948 <tcgetattr@plt+0x27e4>
   13828:	cmp	fp, #0
   1382c:	beq	1396c <tcgetattr@plt+0x2808>
   13830:	ldr	r3, [sp, #20]
   13834:	ldr	r2, [sp, #28]
   13838:	orr	r3, r3, r2
   1383c:	ldr	r2, [sp, #24]
   13840:	orr	r3, r2, r3
   13844:	tst	r3, #255	; 0xff
   13848:	beq	14208 <tcgetattr@plt+0x30a4>
   1384c:	mov	r3, #0
   13850:	mov	r2, #2048	; 0x800
   13854:	mov	r1, fp
   13858:	mov	r0, r3
   1385c:	bl	14624 <tcgetattr@plt+0x34c0>
   13860:	cmp	r0, #0
   13864:	blt	13a7c <tcgetattr@plt+0x2918>
   13868:	mov	r1, #3
   1386c:	mov	r0, #0
   13870:	bl	143b8 <tcgetattr@plt+0x3254>
   13874:	cmn	r0, #1
   13878:	beq	13aac <tcgetattr@plt+0x2948>
   1387c:	bic	r2, r0, #2048	; 0x800
   13880:	mov	r1, #4
   13884:	mov	r0, #0
   13888:	bl	143b8 <tcgetattr@plt+0x3254>
   1388c:	cmp	r0, #0
   13890:	blt	13aac <tcgetattr@plt+0x2948>
   13894:	ldr	r1, [pc, #2512]	; 1426c <tcgetattr@plt+0x3108>
   13898:	mov	r0, #0
   1389c:	bl	11164 <tcgetattr@plt>
   138a0:	cmp	r0, #0
   138a4:	bne	13af0 <tcgetattr@plt+0x298c>
   138a8:	ldr	r3, [sp, #20]
   138ac:	ldr	r2, [sp, #28]
   138b0:	orr	r3, r3, r2
   138b4:	ldr	r2, [sp, #24]
   138b8:	orr	r3, r2, r3
   138bc:	tst	r3, #255	; 0xff
   138c0:	bne	139b4 <tcgetattr@plt+0x2850>
   138c4:	mov	r0, #0
   138c8:	strb	r0, [sp, #38]	; 0x26
   138cc:	strb	r0, [sp, #39]	; 0x27
   138d0:	add	r3, sp, #39	; 0x27
   138d4:	str	r3, [sp, #8]
   138d8:	add	r3, sp, #38	; 0x26
   138dc:	str	r3, [sp, #4]
   138e0:	ldr	r3, [pc, #2436]	; 1426c <tcgetattr@plt+0x3108>
   138e4:	str	r3, [sp]
   138e8:	mov	r3, sl
   138ec:	mov	r2, r8
   138f0:	mov	r1, fp
   138f4:	bl	12664 <tcgetattr@plt+0x1500>
   138f8:	ldrb	r3, [sp, #39]	; 0x27
   138fc:	cmp	r3, #0
   13900:	bne	140d8 <tcgetattr@plt+0x2f74>
   13904:	mov	r0, #0
   13908:	add	sp, sp, #44	; 0x2c
   1390c:	ldrd	r4, [sp]
   13910:	ldrd	r6, [sp, #8]
   13914:	ldrd	r8, [sp, #16]
   13918:	ldrd	sl, [sp, #24]
   1391c:	add	sp, sp, #32
   13920:	pop	{pc}		; (ldr pc, [sp], #4)
   13924:	mov	r2, #5
   13928:	movw	r1, #46432	; 0xb560
   1392c:	movt	r1, #1
   13930:	mov	r0, #0
   13934:	bl	10f24 <dcgettext@plt>
   13938:	mov	r2, r0
   1393c:	mov	r1, #0
   13940:	mov	r0, #1
   13944:	bl	10fcc <error@plt>
   13948:	mov	r2, #5
   1394c:	movw	r1, #46512	; 0xb5b0
   13950:	movt	r1, #1
   13954:	mov	r0, #0
   13958:	bl	10f24 <dcgettext@plt>
   1395c:	mov	r2, r0
   13960:	mov	r1, #0
   13964:	mov	r0, #1
   13968:	bl	10fcc <error@plt>
   1396c:	mov	r2, #5
   13970:	movw	r1, #46568	; 0xb5e8
   13974:	movt	r1, #1
   13978:	mov	r0, #0
   1397c:	bl	10f24 <dcgettext@plt>
   13980:	mov	fp, r0
   13984:	ldr	r3, [sp, #20]
   13988:	ldr	r2, [sp, #28]
   1398c:	orr	r3, r3, r2
   13990:	ldr	r2, [sp, #24]
   13994:	orr	r3, r2, r3
   13998:	tst	r3, #255	; 0xff
   1399c:	beq	14238 <tcgetattr@plt+0x30d4>
   139a0:	ldr	r1, [pc, #2244]	; 1426c <tcgetattr@plt+0x3108>
   139a4:	mov	r0, #0
   139a8:	bl	11164 <tcgetattr@plt>
   139ac:	cmp	r0, #0
   139b0:	bne	13af0 <tcgetattr@plt+0x298c>
   139b4:	bl	11438 <tcgetattr@plt+0x2d4>
   139b8:	movw	r3, #53632	; 0xd180
   139bc:	movt	r3, #2
   139c0:	str	r0, [r3, #16]
   139c4:	mov	r2, #0
   139c8:	str	r2, [r3, #12]
   139cc:	cmp	r7, #1
   139d0:	beq	13e28 <tcgetattr@plt+0x2cc4>
   139d4:	cmp	r7, r2
   139d8:	beq	13b20 <tcgetattr@plt+0x29bc>
   139dc:	cmp	r7, #2
   139e0:	bne	13904 <tcgetattr@plt+0x27a0>
   139e4:	movw	r5, #53632	; 0xd180
   139e8:	movt	r5, #2
   139ec:	ldr	r3, [r5, #32]
   139f0:	str	r3, [sp, #4]
   139f4:	ldr	r3, [r5, #28]
   139f8:	str	r3, [sp]
   139fc:	ldr	r3, [r5, #24]
   13a00:	ldr	r2, [r5, #20]
   13a04:	movw	r1, #46708	; 0xb674
   13a08:	movt	r1, #1
   13a0c:	mov	r0, #1
   13a10:	bl	110b0 <__printf_chk@plt>
   13a14:	add	r5, r5, #37	; 0x25
   13a18:	mov	r4, #0
   13a1c:	movw	r6, #46724	; 0xb684
   13a20:	movt	r6, #1
   13a24:	mov	r7, #1
   13a28:	ldrb	r2, [r5], #1
   13a2c:	mov	r1, r6
   13a30:	mov	r0, r7
   13a34:	bl	110b0 <__printf_chk@plt>
   13a38:	add	r4, r4, #1
   13a3c:	cmp	r4, #32
   13a40:	bne	13a28 <tcgetattr@plt+0x28c4>
   13a44:	movw	r3, #53612	; 0xd16c
   13a48:	movt	r3, #2
   13a4c:	ldr	r0, [r3]
   13a50:	ldr	r3, [r0, #20]
   13a54:	ldr	r2, [r0, #24]
   13a58:	cmp	r3, r2
   13a5c:	addcc	r2, r3, #1
   13a60:	strcc	r2, [r0, #20]
   13a64:	movcc	r2, #10
   13a68:	strbcc	r2, [r3]
   13a6c:	bcc	13904 <tcgetattr@plt+0x27a0>
   13a70:	mov	r1, #10
   13a74:	bl	110f8 <__overflow@plt>
   13a78:	b	13904 <tcgetattr@plt+0x27a0>
   13a7c:	bl	11080 <__errno_location@plt>
   13a80:	ldr	r4, [r0]
   13a84:	mov	r2, fp
   13a88:	mov	r1, #3
   13a8c:	mov	r0, #0
   13a90:	bl	16834 <tcgetattr@plt+0x56d0>
   13a94:	mov	r3, r0
   13a98:	movw	r2, #47792	; 0xbab0
   13a9c:	movt	r2, #1
   13aa0:	mov	r1, r4
   13aa4:	mov	r0, #1
   13aa8:	bl	10fcc <error@plt>
   13aac:	bl	11080 <__errno_location@plt>
   13ab0:	ldr	r4, [r0]
   13ab4:	mov	r2, #5
   13ab8:	movw	r1, #46584	; 0xb5f8
   13abc:	movt	r1, #1
   13ac0:	mov	r0, #0
   13ac4:	bl	10f24 <dcgettext@plt>
   13ac8:	mov	r5, r0
   13acc:	mov	r2, fp
   13ad0:	mov	r1, #3
   13ad4:	mov	r0, #0
   13ad8:	bl	16834 <tcgetattr@plt+0x56d0>
   13adc:	mov	r3, r0
   13ae0:	mov	r2, r5
   13ae4:	mov	r1, r4
   13ae8:	mov	r0, #1
   13aec:	bl	10fcc <error@plt>
   13af0:	bl	11080 <__errno_location@plt>
   13af4:	ldr	r4, [r0]
   13af8:	mov	r2, fp
   13afc:	mov	r1, #3
   13b00:	mov	r0, #0
   13b04:	bl	16834 <tcgetattr@plt+0x56d0>
   13b08:	mov	r3, r0
   13b0c:	movw	r2, #47792	; 0xbab0
   13b10:	movt	r2, #1
   13b14:	mov	r1, r4
   13b18:	mov	r0, #1
   13b1c:	bl	10fcc <error@plt>
   13b20:	movw	r5, #53632	; 0xd180
   13b24:	movt	r5, #2
   13b28:	mov	r1, #1
   13b2c:	add	r0, r5, #20
   13b30:	bl	11650 <tcgetattr@plt+0x4ec>
   13b34:	ldrb	r1, [r5, #36]	; 0x24
   13b38:	movw	r0, #46624	; 0xb620
   13b3c:	movt	r0, #1
   13b40:	bl	11510 <tcgetattr@plt+0x3ac>
   13b44:	movw	r3, #53612	; 0xd16c
   13b48:	movt	r3, #2
   13b4c:	ldr	r0, [r3]
   13b50:	ldr	r3, [r0, #20]
   13b54:	ldr	r2, [r0, #24]
   13b58:	cmp	r3, r2
   13b5c:	addcc	r2, r3, #1
   13b60:	strcc	r2, [r0, #20]
   13b64:	movcc	r2, #10
   13b68:	strbcc	r2, [r3]
   13b6c:	bcs	13ba8 <tcgetattr@plt+0x2a44>
   13b70:	movw	r3, #53632	; 0xd180
   13b74:	movt	r3, #2
   13b78:	mov	r2, #0
   13b7c:	str	r2, [r3, #12]
   13b80:	ldr	r5, [pc, #1768]	; 14270 <tcgetattr@plt+0x310c>
   13b84:	mov	r3, #1
   13b88:	str	r3, [sp, #20]
   13b8c:	movw	r8, #46216	; 0xb488
   13b90:	movt	r8, #1
   13b94:	movw	sl, #53632	; 0xd180
   13b98:	movt	sl, #2
   13b9c:	movw	r9, #46636	; 0xb62c
   13ba0:	movt	r9, #1
   13ba4:	b	13bb8 <tcgetattr@plt+0x2a54>
   13ba8:	mov	r1, #10
   13bac:	bl	110f8 <__overflow@plt>
   13bb0:	b	13b70 <tcgetattr@plt+0x2a0c>
   13bb4:	add	r5, r5, #12
   13bb8:	ldr	r6, [r5]
   13bbc:	mov	r1, r8
   13bc0:	mov	r0, r6
   13bc4:	bl	10eac <strcmp@plt>
   13bc8:	cmp	r0, #0
   13bcc:	beq	13c20 <tcgetattr@plt+0x2abc>
   13bd0:	ldr	r3, [r5, #8]
   13bd4:	add	r3, sl, r3
   13bd8:	ldrb	fp, [r3, #37]	; 0x25
   13bdc:	ldrb	r3, [r5, #4]
   13be0:	cmp	r3, fp
   13be4:	beq	13bb4 <tcgetattr@plt+0x2a50>
   13be8:	mov	r1, r9
   13bec:	mov	r0, r6
   13bf0:	bl	10eac <strcmp@plt>
   13bf4:	cmp	r0, #0
   13bf8:	beq	13bb4 <tcgetattr@plt+0x2a50>
   13bfc:	mov	r0, fp
   13c00:	bl	112bc <tcgetattr@plt+0x158>
   13c04:	mov	r2, r0
   13c08:	mov	r1, r6
   13c0c:	movw	r0, #46644	; 0xb634
   13c10:	movt	r0, #1
   13c14:	bl	11510 <tcgetattr@plt+0x3ac>
   13c18:	str	r4, [sp, #20]
   13c1c:	b	13bb4 <tcgetattr@plt+0x2a50>
   13c20:	movw	r3, #53632	; 0xd180
   13c24:	movt	r3, #2
   13c28:	ldr	r3, [r3, #32]
   13c2c:	tst	r3, #2
   13c30:	beq	13c78 <tcgetattr@plt+0x2b14>
   13c34:	ldr	r3, [sp, #20]
   13c38:	cmp	r3, #0
   13c3c:	bne	13c94 <tcgetattr@plt+0x2b30>
   13c40:	movw	r3, #53612	; 0xd16c
   13c44:	movt	r3, #2
   13c48:	ldr	r0, [r3]
   13c4c:	ldr	r3, [r0, #20]
   13c50:	ldr	r2, [r0, #24]
   13c54:	cmp	r3, r2
   13c58:	addcc	r2, r3, #1
   13c5c:	strcc	r2, [r0, #20]
   13c60:	movcc	r2, #10
   13c64:	strbcc	r2, [r3]
   13c68:	bcc	13c94 <tcgetattr@plt+0x2b30>
   13c6c:	mov	r1, #10
   13c70:	bl	110f8 <__overflow@plt>
   13c74:	b	13c94 <tcgetattr@plt+0x2b30>
   13c78:	movw	r3, #53632	; 0xd180
   13c7c:	movt	r3, #2
   13c80:	ldrb	r2, [r3, #42]	; 0x2a
   13c84:	ldrb	r1, [r3, #43]	; 0x2b
   13c88:	movw	r0, #46656	; 0xb640
   13c8c:	movt	r0, #1
   13c90:	bl	11510 <tcgetattr@plt+0x3ac>
   13c94:	movw	r3, #53632	; 0xd180
   13c98:	movt	r3, #2
   13c9c:	mov	r2, #0
   13ca0:	str	r2, [r3, #12]
   13ca4:	ldr	r5, [pc, #1480]	; 14274 <tcgetattr@plt+0x3110>
   13ca8:	mov	r8, #1
   13cac:	mov	r9, r3
   13cb0:	add	fp, r3, #20
   13cb4:	movw	sl, #46680	; 0xb658
   13cb8:	movt	sl, #1
   13cbc:	b	13d18 <tcgetattr@plt+0x2bb4>
   13cc0:	mov	r3, #0
   13cc4:	str	r3, [r9, #12]
   13cc8:	ldr	r7, [r6, #4]
   13ccc:	mov	r8, #1
   13cd0:	mov	r1, fp
   13cd4:	ldr	r0, [r6, #4]
   13cd8:	bl	114bc <tcgetattr@plt+0x358>
   13cdc:	ldr	r3, [r6, #16]
   13ce0:	cmp	r3, #0
   13ce4:	ldreq	r3, [r6, #12]
   13ce8:	cmp	r0, #0
   13cec:	beq	13d80 <tcgetattr@plt+0x2c1c>
   13cf0:	ldr	r2, [r0]
   13cf4:	and	r3, r3, r2
   13cf8:	ldr	r2, [r6, #12]
   13cfc:	cmp	r3, r2
   13d00:	beq	13d9c <tcgetattr@plt+0x2c38>
   13d04:	ldrb	r3, [r6, #8]
   13d08:	and	r3, r3, #5
   13d0c:	cmp	r3, #5
   13d10:	beq	13dc0 <tcgetattr@plt+0x2c5c>
   13d14:	add	r5, r5, #20
   13d18:	mov	r6, r5
   13d1c:	ldr	r3, [r5]
   13d20:	cmp	r3, #0
   13d24:	beq	13dd4 <tcgetattr@plt+0x2c70>
   13d28:	ldrb	r3, [r5, #8]
   13d2c:	tst	r3, #8
   13d30:	bne	13d14 <tcgetattr@plt+0x2bb0>
   13d34:	ldr	r3, [r6, #4]
   13d38:	cmp	r3, r7
   13d3c:	beq	13cd0 <tcgetattr@plt+0x2b6c>
   13d40:	cmp	r8, #0
   13d44:	bne	13cc8 <tcgetattr@plt+0x2b64>
   13d48:	movw	r3, #53612	; 0xd16c
   13d4c:	movt	r3, #2
   13d50:	ldr	r0, [r3]
   13d54:	ldr	r3, [r0, #20]
   13d58:	ldr	r2, [r0, #24]
   13d5c:	cmp	r3, r2
   13d60:	addcc	r2, r3, #1
   13d64:	strcc	r2, [r0, #20]
   13d68:	movcc	r2, #10
   13d6c:	strbcc	r2, [r3]
   13d70:	bcc	13cc0 <tcgetattr@plt+0x2b5c>
   13d74:	mov	r1, #10
   13d78:	bl	110f8 <__overflow@plt>
   13d7c:	b	13cc0 <tcgetattr@plt+0x2b5c>
   13d80:	ldr	r3, [pc, #1264]	; 14278 <tcgetattr@plt+0x3114>
   13d84:	movw	r2, #1953	; 0x7a1
   13d88:	movw	r1, #46076	; 0xb3fc
   13d8c:	movt	r1, #1
   13d90:	movw	r0, #46088	; 0xb408
   13d94:	movt	r0, #1
   13d98:	bl	11158 <__assert_fail@plt>
   13d9c:	ldrb	r3, [r6, #8]
   13da0:	tst	r3, #2
   13da4:	beq	13d14 <tcgetattr@plt+0x2bb0>
   13da8:	ldr	r1, [r6]
   13dac:	movw	r0, #47792	; 0xbab0
   13db0:	movt	r0, #1
   13db4:	bl	11510 <tcgetattr@plt+0x3ac>
   13db8:	mov	r8, r4
   13dbc:	b	13d14 <tcgetattr@plt+0x2bb0>
   13dc0:	ldr	r1, [r6]
   13dc4:	mov	r0, sl
   13dc8:	bl	11510 <tcgetattr@plt+0x3ac>
   13dcc:	mov	r8, r4
   13dd0:	b	13d14 <tcgetattr@plt+0x2bb0>
   13dd4:	cmp	r8, #0
   13dd8:	bne	13e08 <tcgetattr@plt+0x2ca4>
   13ddc:	movw	r3, #53612	; 0xd16c
   13de0:	movt	r3, #2
   13de4:	ldr	r0, [r3]
   13de8:	ldr	r3, [r0, #20]
   13dec:	ldr	r2, [r0, #24]
   13df0:	cmp	r3, r2
   13df4:	addcc	r2, r3, #1
   13df8:	strcc	r2, [r0, #20]
   13dfc:	movcc	r2, #10
   13e00:	strbcc	r2, [r3]
   13e04:	bcs	13e1c <tcgetattr@plt+0x2cb8>
   13e08:	movw	r3, #53632	; 0xd180
   13e0c:	movt	r3, #2
   13e10:	mov	r2, #0
   13e14:	str	r2, [r3, #12]
   13e18:	b	13904 <tcgetattr@plt+0x27a0>
   13e1c:	mov	r1, #10
   13e20:	bl	110f8 <__overflow@plt>
   13e24:	b	13e08 <tcgetattr@plt+0x2ca4>
   13e28:	movw	r4, #53632	; 0xd180
   13e2c:	movt	r4, #2
   13e30:	mov	r1, #1
   13e34:	add	r0, r4, #20
   13e38:	bl	11650 <tcgetattr@plt+0x4ec>
   13e3c:	mov	r1, fp
   13e40:	mov	r0, #1
   13e44:	bl	1179c <tcgetattr@plt+0x638>
   13e48:	ldrb	r1, [r4, #36]	; 0x24
   13e4c:	movw	r0, #46624	; 0xb620
   13e50:	movt	r0, #1
   13e54:	bl	11510 <tcgetattr@plt+0x3ac>
   13e58:	movw	r3, #53612	; 0xd16c
   13e5c:	movt	r3, #2
   13e60:	ldr	r0, [r3]
   13e64:	ldr	r3, [r0, #20]
   13e68:	ldr	r2, [r0, #24]
   13e6c:	cmp	r3, r2
   13e70:	addcc	r2, r3, #1
   13e74:	strcc	r2, [r0, #20]
   13e78:	movcc	r2, #10
   13e7c:	strbcc	r2, [r3]
   13e80:	bcs	13eb0 <tcgetattr@plt+0x2d4c>
   13e84:	movw	r3, #53632	; 0xd180
   13e88:	movt	r3, #2
   13e8c:	mov	r2, #0
   13e90:	str	r2, [r3, #12]
   13e94:	ldr	r4, [pc, #980]	; 14270 <tcgetattr@plt+0x310c>
   13e98:	movw	r6, #46216	; 0xb488
   13e9c:	movt	r6, #1
   13ea0:	movw	r7, #46636	; 0xb62c
   13ea4:	movt	r7, #1
   13ea8:	mov	r8, r3
   13eac:	b	13ec0 <tcgetattr@plt+0x2d5c>
   13eb0:	mov	r1, #10
   13eb4:	bl	110f8 <__overflow@plt>
   13eb8:	b	13e84 <tcgetattr@plt+0x2d20>
   13ebc:	add	r4, r4, #12
   13ec0:	mov	r9, r4
   13ec4:	ldr	r5, [r4]
   13ec8:	mov	r1, r6
   13ecc:	mov	r0, r5
   13ed0:	bl	10eac <strcmp@plt>
   13ed4:	cmp	r0, #0
   13ed8:	beq	13f18 <tcgetattr@plt+0x2db4>
   13edc:	mov	r1, r7
   13ee0:	mov	r0, r5
   13ee4:	bl	10eac <strcmp@plt>
   13ee8:	cmp	r0, #0
   13eec:	beq	13ebc <tcgetattr@plt+0x2d58>
   13ef0:	ldr	r3, [r9, #8]
   13ef4:	add	r3, r8, r3
   13ef8:	ldrb	r0, [r3, #37]	; 0x25
   13efc:	bl	112bc <tcgetattr@plt+0x158>
   13f00:	mov	r2, r0
   13f04:	mov	r1, r5
   13f08:	movw	r0, #46644	; 0xb634
   13f0c:	movt	r0, #1
   13f10:	bl	11510 <tcgetattr@plt+0x3ac>
   13f14:	b	13ebc <tcgetattr@plt+0x2d58>
   13f18:	movw	r4, #53632	; 0xd180
   13f1c:	movt	r4, #2
   13f20:	ldrb	r2, [r4, #42]	; 0x2a
   13f24:	ldrb	r1, [r4, #43]	; 0x2b
   13f28:	movw	r0, #46684	; 0xb65c
   13f2c:	movt	r0, #1
   13f30:	bl	11510 <tcgetattr@plt+0x3ac>
   13f34:	ldr	r3, [r4, #12]
   13f38:	cmp	r3, #0
   13f3c:	beq	13f6c <tcgetattr@plt+0x2e08>
   13f40:	movw	r3, #53612	; 0xd16c
   13f44:	movt	r3, #2
   13f48:	ldr	r0, [r3]
   13f4c:	ldr	r3, [r0, #20]
   13f50:	ldr	r2, [r0, #24]
   13f54:	cmp	r3, r2
   13f58:	addcc	r2, r3, #1
   13f5c:	strcc	r2, [r0, #20]
   13f60:	movcc	r2, #10
   13f64:	strbcc	r2, [r3]
   13f68:	bcs	13f94 <tcgetattr@plt+0x2e30>
   13f6c:	movw	r3, #53632	; 0xd180
   13f70:	movt	r3, #2
   13f74:	mov	r6, #0
   13f78:	str	r6, [r3, #12]
   13f7c:	ldr	r4, [pc, #752]	; 14274 <tcgetattr@plt+0x3110>
   13f80:	mov	r7, r3
   13f84:	add	r9, r3, #20
   13f88:	movw	r8, #46680	; 0xb658
   13f8c:	movt	r8, #1
   13f90:	b	13fdc <tcgetattr@plt+0x2e78>
   13f94:	mov	r1, #10
   13f98:	bl	110f8 <__overflow@plt>
   13f9c:	b	13f6c <tcgetattr@plt+0x2e08>
   13fa0:	mov	r1, #10
   13fa4:	bl	110f8 <__overflow@plt>
   13fa8:	b	14030 <tcgetattr@plt+0x2ecc>
   13fac:	ldr	r3, [pc, #712]	; 1427c <tcgetattr@plt+0x3118>
   13fb0:	movw	r2, #2037	; 0x7f5
   13fb4:	movw	r1, #46076	; 0xb3fc
   13fb8:	movt	r1, #1
   13fbc:	movw	r0, #46088	; 0xb408
   13fc0:	movt	r0, #1
   13fc4:	bl	11158 <__assert_fail@plt>
   13fc8:	ldr	r1, [r5]
   13fcc:	movw	r0, #47792	; 0xbab0
   13fd0:	movt	r0, #1
   13fd4:	bl	11510 <tcgetattr@plt+0x3ac>
   13fd8:	add	r4, r4, #20
   13fdc:	mov	r5, r4
   13fe0:	ldr	r3, [r4]
   13fe4:	cmp	r3, #0
   13fe8:	beq	1408c <tcgetattr@plt+0x2f28>
   13fec:	ldrb	r3, [r4, #8]
   13ff0:	tst	r3, #8
   13ff4:	bne	13fd8 <tcgetattr@plt+0x2e74>
   13ff8:	ldr	r3, [r5, #4]
   13ffc:	cmp	r3, r6
   14000:	beq	1403c <tcgetattr@plt+0x2ed8>
   14004:	movw	r3, #53612	; 0xd16c
   14008:	movt	r3, #2
   1400c:	ldr	r0, [r3]
   14010:	ldr	r3, [r0, #20]
   14014:	ldr	r2, [r0, #24]
   14018:	cmp	r3, r2
   1401c:	addcc	r2, r3, #1
   14020:	strcc	r2, [r0, #20]
   14024:	movcc	r2, #10
   14028:	strbcc	r2, [r3]
   1402c:	bcs	13fa0 <tcgetattr@plt+0x2e3c>
   14030:	mov	r3, #0
   14034:	str	r3, [r7, #12]
   14038:	ldr	r6, [r5, #4]
   1403c:	mov	r1, r9
   14040:	ldr	r0, [r5, #4]
   14044:	bl	114bc <tcgetattr@plt+0x358>
   14048:	ldr	r3, [r5, #16]
   1404c:	cmp	r3, #0
   14050:	ldreq	r3, [r5, #12]
   14054:	cmp	r0, #0
   14058:	beq	13fac <tcgetattr@plt+0x2e48>
   1405c:	ldr	r2, [r0]
   14060:	and	r3, r3, r2
   14064:	ldr	r2, [r5, #12]
   14068:	cmp	r3, r2
   1406c:	beq	13fc8 <tcgetattr@plt+0x2e64>
   14070:	ldrb	r3, [r5, #8]
   14074:	tst	r3, #4
   14078:	beq	13fd8 <tcgetattr@plt+0x2e74>
   1407c:	ldr	r1, [r5]
   14080:	mov	r0, r8
   14084:	bl	11510 <tcgetattr@plt+0x3ac>
   14088:	b	13fd8 <tcgetattr@plt+0x2e74>
   1408c:	movw	r3, #53612	; 0xd16c
   14090:	movt	r3, #2
   14094:	ldr	r0, [r3]
   14098:	ldr	r3, [r0, #20]
   1409c:	ldr	r2, [r0, #24]
   140a0:	cmp	r3, r2
   140a4:	addcc	r2, r3, #1
   140a8:	strcc	r2, [r0, #20]
   140ac:	movcc	r2, #10
   140b0:	strbcc	r2, [r3]
   140b4:	bcs	140cc <tcgetattr@plt+0x2f68>
   140b8:	movw	r3, #53632	; 0xd180
   140bc:	movt	r3, #2
   140c0:	mov	r2, #0
   140c4:	str	r2, [r3, #12]
   140c8:	b	13904 <tcgetattr@plt+0x27a0>
   140cc:	mov	r1, #10
   140d0:	bl	110f8 <__overflow@plt>
   140d4:	b	140b8 <tcgetattr@plt+0x2f54>
   140d8:	movw	r3, #53516	; 0xd10c
   140dc:	movt	r3, #2
   140e0:	ldr	r2, [pc, #388]	; 1426c <tcgetattr@plt+0x3108>
   140e4:	ldr	r1, [r3]
   140e8:	mov	r0, #0
   140ec:	bl	10fa8 <tcsetattr@plt>
   140f0:	cmp	r0, #0
   140f4:	bne	141a8 <tcgetattr@plt+0x3044>
   140f8:	ldr	r1, [pc, #384]	; 14280 <tcgetattr@plt+0x311c>
   140fc:	mov	r0, #0
   14100:	bl	11164 <tcgetattr@plt>
   14104:	cmp	r0, #0
   14108:	bne	141d8 <tcgetattr@plt+0x3074>
   1410c:	movw	r0, #53632	; 0xd180
   14110:	movt	r0, #2
   14114:	mov	r2, #60	; 0x3c
   14118:	add	r1, r0, #80	; 0x50
   1411c:	add	r0, r0, #20
   14120:	bl	10f0c <memcmp@plt>
   14124:	cmp	r0, #0
   14128:	beq	13904 <tcgetattr@plt+0x27a0>
   1412c:	movw	r2, #53632	; 0xd180
   14130:	movt	r2, #2
   14134:	ldr	r3, [r2, #88]	; 0x58
   14138:	bic	r3, r3, #268435456	; 0x10000000
   1413c:	bic	r3, r3, #983040	; 0xf0000
   14140:	str	r3, [r2, #88]	; 0x58
   14144:	ldrb	r3, [sp, #38]	; 0x26
   14148:	cmp	r3, #0
   1414c:	bne	1416c <tcgetattr@plt+0x3008>
   14150:	mov	r0, r2
   14154:	mov	r2, #60	; 0x3c
   14158:	add	r1, r0, #80	; 0x50
   1415c:	add	r0, r0, #20
   14160:	bl	10f0c <memcmp@plt>
   14164:	cmp	r0, #0
   14168:	beq	13904 <tcgetattr@plt+0x27a0>
   1416c:	mov	r2, #5
   14170:	movw	r1, #46732	; 0xb68c
   14174:	movt	r1, #1
   14178:	mov	r0, #0
   1417c:	bl	10f24 <dcgettext@plt>
   14180:	mov	r4, r0
   14184:	mov	r2, fp
   14188:	mov	r1, #3
   1418c:	mov	r0, #0
   14190:	bl	16834 <tcgetattr@plt+0x56d0>
   14194:	mov	r3, r0
   14198:	mov	r2, r4
   1419c:	mov	r1, #0
   141a0:	mov	r0, #1
   141a4:	bl	10fcc <error@plt>
   141a8:	bl	11080 <__errno_location@plt>
   141ac:	ldr	r4, [r0]
   141b0:	mov	r2, fp
   141b4:	mov	r1, #3
   141b8:	mov	r0, #0
   141bc:	bl	16834 <tcgetattr@plt+0x56d0>
   141c0:	mov	r3, r0
   141c4:	movw	r2, #47792	; 0xbab0
   141c8:	movt	r2, #1
   141cc:	mov	r1, r4
   141d0:	mov	r0, #1
   141d4:	bl	10fcc <error@plt>
   141d8:	bl	11080 <__errno_location@plt>
   141dc:	ldr	r4, [r0]
   141e0:	mov	r2, fp
   141e4:	mov	r1, #3
   141e8:	mov	r0, #0
   141ec:	bl	16834 <tcgetattr@plt+0x56d0>
   141f0:	mov	r3, r0
   141f4:	movw	r2, #47792	; 0xbab0
   141f8:	movt	r2, #1
   141fc:	mov	r1, r4
   14200:	mov	r0, #1
   14204:	bl	10fcc <error@plt>
   14208:	add	r3, sp, #39	; 0x27
   1420c:	str	r3, [sp, #8]
   14210:	add	r3, sp, #38	; 0x26
   14214:	str	r3, [sp, #4]
   14218:	ldr	r3, [pc, #100]	; 14284 <tcgetattr@plt+0x3120>
   1421c:	str	r3, [sp]
   14220:	mov	r3, sl
   14224:	mov	r2, r8
   14228:	mov	r1, fp
   1422c:	mov	r0, #1
   14230:	bl	12664 <tcgetattr@plt+0x1500>
   14234:	b	1384c <tcgetattr@plt+0x26e8>
   14238:	add	r3, sp, #39	; 0x27
   1423c:	str	r3, [sp, #8]
   14240:	add	r3, sp, #38	; 0x26
   14244:	str	r3, [sp, #4]
   14248:	ldr	r3, [pc, #52]	; 14284 <tcgetattr@plt+0x3120>
   1424c:	str	r3, [sp]
   14250:	mov	r3, sl
   14254:	mov	r2, r8
   14258:	mov	r1, r0
   1425c:	mov	r0, #1
   14260:	bl	12664 <tcgetattr@plt+0x1500>
   14264:	b	13894 <tcgetattr@plt+0x2730>
   14268:	strdeq	r9, [r1], -ip
   1426c:	muleq	r2, r4, r1
   14270:	andeq	r9, r1, ip, lsl #2
   14274:	andeq	r8, r1, r4, lsl #20
   14278:	andeq	r9, r1, ip, asr r2
   1427c:	andeq	r9, r1, ip, ror #4
   14280:	ldrdeq	sp, [r2], -r0
   14284:	andeq	sp, r2, ip, lsl #4
   14288:	movw	r3, #53832	; 0xd248
   1428c:	movt	r3, #2
   14290:	str	r0, [r3]
   14294:	bx	lr
   14298:	movw	r3, #53832	; 0xd248
   1429c:	movt	r3, #2
   142a0:	strb	r0, [r3, #4]
   142a4:	bx	lr
   142a8:	strd	r4, [sp, #-16]!
   142ac:	str	r6, [sp, #8]
   142b0:	str	lr, [sp, #12]
   142b4:	sub	sp, sp, #8
   142b8:	movw	r3, #53612	; 0xd16c
   142bc:	movt	r3, #2
   142c0:	ldr	r0, [r3]
   142c4:	bl	1831c <tcgetattr@plt+0x71b8>
   142c8:	cmp	r0, #0
   142cc:	beq	142f4 <tcgetattr@plt+0x3190>
   142d0:	movw	r3, #53832	; 0xd248
   142d4:	movt	r3, #2
   142d8:	ldrb	r3, [r3, #4]
   142dc:	cmp	r3, #0
   142e0:	beq	14320 <tcgetattr@plt+0x31bc>
   142e4:	bl	11080 <__errno_location@plt>
   142e8:	ldr	r3, [r0]
   142ec:	cmp	r3, #32
   142f0:	bne	14320 <tcgetattr@plt+0x31bc>
   142f4:	movw	r3, #53608	; 0xd168
   142f8:	movt	r3, #2
   142fc:	ldr	r0, [r3]
   14300:	bl	1831c <tcgetattr@plt+0x71b8>
   14304:	cmp	r0, #0
   14308:	bne	143a8 <tcgetattr@plt+0x3244>
   1430c:	add	sp, sp, #8
   14310:	ldrd	r4, [sp]
   14314:	ldr	r6, [sp, #8]
   14318:	add	sp, sp, #12
   1431c:	pop	{pc}		; (ldr pc, [sp], #4)
   14320:	mov	r2, #5
   14324:	movw	r1, #47776	; 0xbaa0
   14328:	movt	r1, #1
   1432c:	mov	r0, #0
   14330:	bl	10f24 <dcgettext@plt>
   14334:	mov	r4, r0
   14338:	movw	r3, #53832	; 0xd248
   1433c:	movt	r3, #2
   14340:	ldr	r5, [r3]
   14344:	cmp	r5, #0
   14348:	beq	14388 <tcgetattr@plt+0x3224>
   1434c:	bl	11080 <__errno_location@plt>
   14350:	ldr	r6, [r0]
   14354:	mov	r0, r5
   14358:	bl	167fc <tcgetattr@plt+0x5698>
   1435c:	str	r4, [sp]
   14360:	mov	r3, r0
   14364:	movw	r2, #47788	; 0xbaac
   14368:	movt	r2, #1
   1436c:	mov	r1, r6
   14370:	mov	r0, #0
   14374:	bl	10fcc <error@plt>
   14378:	movw	r3, #53524	; 0xd114
   1437c:	movt	r3, #2
   14380:	ldr	r0, [r3]
   14384:	bl	10edc <_exit@plt>
   14388:	bl	11080 <__errno_location@plt>
   1438c:	mov	r3, r4
   14390:	movw	r2, #47792	; 0xbab0
   14394:	movt	r2, #1
   14398:	ldr	r1, [r0]
   1439c:	mov	r0, #0
   143a0:	bl	10fcc <error@plt>
   143a4:	b	14378 <tcgetattr@plt+0x3214>
   143a8:	movw	r3, #53524	; 0xd114
   143ac:	movt	r3, #2
   143b0:	ldr	r0, [r3]
   143b4:	bl	10edc <_exit@plt>
   143b8:	push	{r1, r2, r3}
   143bc:	strd	r4, [sp, #-16]!
   143c0:	str	r6, [sp, #8]
   143c4:	str	lr, [sp, #12]
   143c8:	sub	sp, sp, #12
   143cc:	mov	r5, r0
   143d0:	ldr	r1, [sp, #28]
   143d4:	add	r3, sp, #32
   143d8:	str	r3, [sp, #4]
   143dc:	cmp	r1, #0
   143e0:	beq	14428 <tcgetattr@plt+0x32c4>
   143e4:	movw	r3, #1030	; 0x406
   143e8:	cmp	r1, r3
   143ec:	beq	14464 <tcgetattr@plt+0x3300>
   143f0:	cmp	r1, #11
   143f4:	beq	14614 <tcgetattr@plt+0x34b0>
   143f8:	bgt	145a0 <tcgetattr@plt+0x343c>
   143fc:	cmp	r1, #3
   14400:	beq	14614 <tcgetattr@plt+0x34b0>
   14404:	ble	14560 <tcgetattr@plt+0x33fc>
   14408:	cmp	r1, #8
   1440c:	beq	14580 <tcgetattr@plt+0x341c>
   14410:	ble	14578 <tcgetattr@plt+0x3414>
   14414:	cmp	r1, #9
   14418:	beq	14614 <tcgetattr@plt+0x34b0>
   1441c:	cmp	r1, #10
   14420:	bne	145d8 <tcgetattr@plt+0x3474>
   14424:	b	14580 <tcgetattr@plt+0x341c>
   14428:	ldr	r3, [sp, #4]
   1442c:	add	r2, r3, #4
   14430:	str	r2, [sp, #4]
   14434:	ldr	r2, [r3]
   14438:	mov	r1, #0
   1443c:	bl	110ec <fcntl64@plt>
   14440:	mov	r4, r0
   14444:	mov	r0, r4
   14448:	add	sp, sp, #12
   1444c:	ldrd	r4, [sp]
   14450:	ldr	r6, [sp, #8]
   14454:	ldr	lr, [sp, #12]
   14458:	add	sp, sp, #16
   1445c:	add	sp, sp, #12
   14460:	bx	lr
   14464:	ldr	r3, [sp, #4]
   14468:	add	r2, r3, #4
   1446c:	str	r2, [sp, #4]
   14470:	ldr	r6, [r3]
   14474:	movw	r3, #53840	; 0xd250
   14478:	movt	r3, #2
   1447c:	ldr	r3, [r3]
   14480:	cmp	r3, #0
   14484:	blt	144ec <tcgetattr@plt+0x3388>
   14488:	mov	r2, r6
   1448c:	movw	r1, #1030	; 0x406
   14490:	bl	110ec <fcntl64@plt>
   14494:	subs	r4, r0, #0
   14498:	blt	144b0 <tcgetattr@plt+0x334c>
   1449c:	movw	r3, #53840	; 0xd250
   144a0:	movt	r3, #2
   144a4:	mov	r2, #1
   144a8:	str	r2, [r3]
   144ac:	b	14444 <tcgetattr@plt+0x32e0>
   144b0:	bl	11080 <__errno_location@plt>
   144b4:	ldr	r3, [r0]
   144b8:	cmp	r3, #22
   144bc:	bne	1449c <tcgetattr@plt+0x3338>
   144c0:	mov	r2, r6
   144c4:	mov	r1, #0
   144c8:	mov	r0, r5
   144cc:	bl	110ec <fcntl64@plt>
   144d0:	subs	r4, r0, #0
   144d4:	blt	14444 <tcgetattr@plt+0x32e0>
   144d8:	movw	r3, #53840	; 0xd250
   144dc:	movt	r3, #2
   144e0:	mvn	r2, #0
   144e4:	str	r2, [r3]
   144e8:	b	14514 <tcgetattr@plt+0x33b0>
   144ec:	mov	r2, r6
   144f0:	mov	r1, #0
   144f4:	bl	110ec <fcntl64@plt>
   144f8:	subs	r4, r0, #0
   144fc:	blt	14444 <tcgetattr@plt+0x32e0>
   14500:	movw	r3, #53840	; 0xd250
   14504:	movt	r3, #2
   14508:	ldr	r3, [r3]
   1450c:	cmn	r3, #1
   14510:	bne	14444 <tcgetattr@plt+0x32e0>
   14514:	mov	r1, #1
   14518:	mov	r0, r4
   1451c:	bl	110ec <fcntl64@plt>
   14520:	subs	r2, r0, #0
   14524:	blt	14540 <tcgetattr@plt+0x33dc>
   14528:	orr	r2, r2, #1
   1452c:	mov	r1, #2
   14530:	mov	r0, r4
   14534:	bl	110ec <fcntl64@plt>
   14538:	cmn	r0, #1
   1453c:	bne	14444 <tcgetattr@plt+0x32e0>
   14540:	bl	11080 <__errno_location@plt>
   14544:	mov	r5, r0
   14548:	ldr	r6, [r0]
   1454c:	mov	r0, r4
   14550:	bl	1114c <close@plt>
   14554:	str	r6, [r5]
   14558:	mvn	r4, #0
   1455c:	b	14444 <tcgetattr@plt+0x32e0>
   14560:	cmp	r1, #1
   14564:	beq	14614 <tcgetattr@plt+0x34b0>
   14568:	bgt	14580 <tcgetattr@plt+0x341c>
   1456c:	cmp	r1, #0
   14570:	bne	145d8 <tcgetattr@plt+0x3474>
   14574:	b	14580 <tcgetattr@plt+0x341c>
   14578:	cmp	r1, #4
   1457c:	bne	145d8 <tcgetattr@plt+0x3474>
   14580:	ldr	r3, [sp, #4]
   14584:	add	r2, r3, #4
   14588:	str	r2, [sp, #4]
   1458c:	ldr	r2, [r3]
   14590:	mov	r0, r5
   14594:	bl	110ec <fcntl64@plt>
   14598:	mov	r4, r0
   1459c:	b	14444 <tcgetattr@plt+0x32e0>
   145a0:	movw	r3, #1031	; 0x407
   145a4:	cmp	r1, r3
   145a8:	bgt	145f8 <tcgetattr@plt+0x3494>
   145ac:	movw	r3, #1030	; 0x406
   145b0:	cmp	r1, r3
   145b4:	bge	14580 <tcgetattr@plt+0x341c>
   145b8:	movw	r3, #1025	; 0x401
   145bc:	cmp	r1, r3
   145c0:	beq	14614 <tcgetattr@plt+0x34b0>
   145c4:	movw	r3, #1026	; 0x402
   145c8:	cmp	r1, r3
   145cc:	beq	14580 <tcgetattr@plt+0x341c>
   145d0:	cmp	r1, #1024	; 0x400
   145d4:	beq	14580 <tcgetattr@plt+0x341c>
   145d8:	ldr	r3, [sp, #4]
   145dc:	add	r2, r3, #4
   145e0:	str	r2, [sp, #4]
   145e4:	ldr	r2, [r3]
   145e8:	mov	r0, r5
   145ec:	bl	110ec <fcntl64@plt>
   145f0:	mov	r4, r0
   145f4:	b	14444 <tcgetattr@plt+0x32e0>
   145f8:	movw	r3, #1033	; 0x409
   145fc:	cmp	r1, r3
   14600:	beq	14580 <tcgetattr@plt+0x341c>
   14604:	blt	14614 <tcgetattr@plt+0x34b0>
   14608:	movw	r3, #1034	; 0x40a
   1460c:	cmp	r1, r3
   14610:	bne	145d8 <tcgetattr@plt+0x3474>
   14614:	mov	r0, r5
   14618:	bl	110ec <fcntl64@plt>
   1461c:	mov	r4, r0
   14620:	b	14444 <tcgetattr@plt+0x32e0>
   14624:	strd	r4, [sp, #-24]!	; 0xffffffe8
   14628:	strd	r6, [sp, #8]
   1462c:	str	r8, [sp, #16]
   14630:	str	lr, [sp, #20]
   14634:	mov	r5, r0
   14638:	mov	r0, r1
   1463c:	mov	r1, r2
   14640:	mov	r2, r3
   14644:	bl	10fd8 <open64@plt>
   14648:	mov	r4, r0
   1464c:	cmp	r5, r0
   14650:	movne	r3, #0
   14654:	moveq	r3, #1
   14658:	orrs	r3, r3, r0, lsr #31
   1465c:	beq	14678 <tcgetattr@plt+0x3514>
   14660:	mov	r0, r4
   14664:	ldrd	r4, [sp]
   14668:	ldrd	r6, [sp, #8]
   1466c:	ldr	r8, [sp, #16]
   14670:	add	sp, sp, #20
   14674:	pop	{pc}		; (ldr pc, [sp], #4)
   14678:	mov	r1, r5
   1467c:	bl	10f3c <dup2@plt>
   14680:	mov	r6, r0
   14684:	bl	11080 <__errno_location@plt>
   14688:	mov	r5, r0
   1468c:	ldr	r7, [r0]
   14690:	mov	r0, r4
   14694:	bl	1114c <close@plt>
   14698:	str	r7, [r5]
   1469c:	mov	r4, r6
   146a0:	b	14660 <tcgetattr@plt+0x34fc>
   146a4:	strd	r4, [sp, #-12]!
   146a8:	str	lr, [sp, #8]
   146ac:	sub	sp, sp, #12
   146b0:	mov	r5, r0
   146b4:	bl	11080 <__errno_location@plt>
   146b8:	mov	r4, r0
   146bc:	ldr	r3, [r0]
   146c0:	str	r3, [sp]
   146c4:	str	r3, [sp, #4]
   146c8:	mov	r3, #0
   146cc:	str	r3, [r0]
   146d0:	mov	r0, r5
   146d4:	bl	10ed0 <free@plt>
   146d8:	ldr	r3, [r4]
   146dc:	clz	r3, r3
   146e0:	lsr	r3, r3, #5
   146e4:	add	r2, sp, #8
   146e8:	add	r3, r2, r3, lsl #2
   146ec:	ldr	r3, [r3, #-8]
   146f0:	str	r3, [r4]
   146f4:	add	sp, sp, #12
   146f8:	ldrd	r4, [sp]
   146fc:	add	sp, sp, #8
   14700:	pop	{pc}		; (ldr pc, [sp], #4)
   14704:	strd	r4, [sp, #-16]!
   14708:	str	r6, [sp, #8]
   1470c:	str	lr, [sp, #12]
   14710:	subs	r4, r0, #0
   14714:	beq	147b0 <tcgetattr@plt+0x364c>
   14718:	mov	r1, #47	; 0x2f
   1471c:	mov	r0, r4
   14720:	bl	11110 <strrchr@plt>
   14724:	subs	r5, r0, #0
   14728:	beq	14788 <tcgetattr@plt+0x3624>
   1472c:	add	r6, r5, #1
   14730:	sub	r3, r6, r4
   14734:	cmp	r3, #6
   14738:	ble	14788 <tcgetattr@plt+0x3624>
   1473c:	mov	r2, #7
   14740:	movw	r1, #47852	; 0xbaec
   14744:	movt	r1, #1
   14748:	sub	r0, r5, #6
   1474c:	bl	11134 <strncmp@plt>
   14750:	cmp	r0, #0
   14754:	bne	14788 <tcgetattr@plt+0x3624>
   14758:	mov	r2, #3
   1475c:	movw	r1, #47860	; 0xbaf4
   14760:	movt	r1, #1
   14764:	mov	r0, r6
   14768:	bl	11134 <strncmp@plt>
   1476c:	cmp	r0, #0
   14770:	movne	r4, r6
   14774:	bne	14788 <tcgetattr@plt+0x3624>
   14778:	add	r4, r5, #4
   1477c:	movw	r3, #53592	; 0xd158
   14780:	movt	r3, #2
   14784:	str	r4, [r3]
   14788:	movw	r3, #53844	; 0xd254
   1478c:	movt	r3, #2
   14790:	str	r4, [r3]
   14794:	movw	r3, #53596	; 0xd15c
   14798:	movt	r3, #2
   1479c:	str	r4, [r3]
   147a0:	ldrd	r4, [sp]
   147a4:	ldr	r6, [sp, #8]
   147a8:	add	sp, sp, #12
   147ac:	pop	{pc}		; (ldr pc, [sp], #4)
   147b0:	movw	r3, #53608	; 0xd168
   147b4:	movt	r3, #2
   147b8:	ldr	r3, [r3]
   147bc:	mov	r2, #55	; 0x37
   147c0:	mov	r1, #1
   147c4:	movw	r0, #47796	; 0xbab4
   147c8:	movt	r0, #1
   147cc:	bl	10f78 <fwrite@plt>
   147d0:	bl	11140 <abort@plt>
   147d4:	mov	r2, #0
   147d8:	mov	r3, #0
   147dc:	strd	r2, [r0]
   147e0:	strd	r2, [r0, #8]
   147e4:	strd	r2, [r0, #16]
   147e8:	strd	r2, [r0, #24]
   147ec:	strd	r2, [r0, #32]
   147f0:	strd	r2, [r0, #40]	; 0x28
   147f4:	cmp	r1, #10
   147f8:	beq	14804 <tcgetattr@plt+0x36a0>
   147fc:	str	r1, [r0]
   14800:	bx	lr
   14804:	str	r4, [sp, #-8]!
   14808:	str	lr, [sp, #4]
   1480c:	bl	11140 <abort@plt>
   14810:	strd	r4, [sp, #-16]!
   14814:	str	r6, [sp, #8]
   14818:	str	lr, [sp, #12]
   1481c:	mov	r5, r0
   14820:	mov	r6, r1
   14824:	mov	r2, #5
   14828:	mov	r1, r0
   1482c:	mov	r0, #0
   14830:	bl	10f24 <dcgettext@plt>
   14834:	mov	r4, r0
   14838:	cmp	r5, r0
   1483c:	beq	14854 <tcgetattr@plt+0x36f0>
   14840:	mov	r0, r4
   14844:	ldrd	r4, [sp]
   14848:	ldr	r6, [sp, #8]
   1484c:	add	sp, sp, #12
   14850:	pop	{pc}		; (ldr pc, [sp], #4)
   14854:	bl	18594 <tcgetattr@plt+0x7430>
   14858:	ldrb	r3, [r0]
   1485c:	bic	r3, r3, #32
   14860:	cmp	r3, #85	; 0x55
   14864:	bne	148e8 <tcgetattr@plt+0x3784>
   14868:	ldrb	r3, [r0, #1]
   1486c:	bic	r3, r3, #32
   14870:	cmp	r3, #84	; 0x54
   14874:	bne	148ac <tcgetattr@plt+0x3748>
   14878:	ldrb	r3, [r0, #2]
   1487c:	bic	r3, r3, #32
   14880:	cmp	r3, #70	; 0x46
   14884:	bne	148ac <tcgetattr@plt+0x3748>
   14888:	ldrb	r3, [r0, #3]
   1488c:	cmp	r3, #45	; 0x2d
   14890:	bne	148ac <tcgetattr@plt+0x3748>
   14894:	ldrb	r3, [r0, #4]
   14898:	cmp	r3, #56	; 0x38
   1489c:	bne	148ac <tcgetattr@plt+0x3748>
   148a0:	ldrb	r3, [r0, #5]
   148a4:	cmp	r3, #0
   148a8:	beq	148c8 <tcgetattr@plt+0x3764>
   148ac:	movw	r4, #47948	; 0xbb4c
   148b0:	movt	r4, #1
   148b4:	movw	r3, #47968	; 0xbb60
   148b8:	movt	r3, #1
   148bc:	cmp	r6, #9
   148c0:	movne	r4, r3
   148c4:	b	14840 <tcgetattr@plt+0x36dc>
   148c8:	ldrb	r2, [r4]
   148cc:	movw	r4, #47964	; 0xbb5c
   148d0:	movt	r4, #1
   148d4:	movw	r3, #47952	; 0xbb50
   148d8:	movt	r3, #1
   148dc:	cmp	r2, #96	; 0x60
   148e0:	movne	r4, r3
   148e4:	b	14840 <tcgetattr@plt+0x36dc>
   148e8:	cmp	r3, #71	; 0x47
   148ec:	bne	148ac <tcgetattr@plt+0x3748>
   148f0:	ldrb	r3, [r0, #1]
   148f4:	bic	r3, r3, #32
   148f8:	cmp	r3, #66	; 0x42
   148fc:	bne	148ac <tcgetattr@plt+0x3748>
   14900:	ldrb	r3, [r0, #2]
   14904:	cmp	r3, #49	; 0x31
   14908:	bne	148ac <tcgetattr@plt+0x3748>
   1490c:	ldrb	r3, [r0, #3]
   14910:	cmp	r3, #56	; 0x38
   14914:	bne	148ac <tcgetattr@plt+0x3748>
   14918:	ldrb	r3, [r0, #4]
   1491c:	cmp	r3, #48	; 0x30
   14920:	bne	148ac <tcgetattr@plt+0x3748>
   14924:	ldrb	r3, [r0, #5]
   14928:	cmp	r3, #51	; 0x33
   1492c:	bne	148ac <tcgetattr@plt+0x3748>
   14930:	ldrb	r3, [r0, #6]
   14934:	cmp	r3, #48	; 0x30
   14938:	bne	148ac <tcgetattr@plt+0x3748>
   1493c:	ldrb	r3, [r0, #7]
   14940:	cmp	r3, #0
   14944:	bne	148ac <tcgetattr@plt+0x3748>
   14948:	ldrb	r2, [r4]
   1494c:	movw	r4, #47960	; 0xbb58
   14950:	movt	r4, #1
   14954:	movw	r3, #47956	; 0xbb54
   14958:	movt	r3, #1
   1495c:	cmp	r2, #96	; 0x60
   14960:	movne	r4, r3
   14964:	b	14840 <tcgetattr@plt+0x36dc>
   14968:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1496c:	strd	r6, [sp, #8]
   14970:	strd	r8, [sp, #16]
   14974:	strd	sl, [sp, #24]
   14978:	str	lr, [sp, #32]
   1497c:	sub	sp, sp, #116	; 0x74
   14980:	str	r0, [sp, #64]	; 0x40
   14984:	mov	r8, r1
   14988:	str	r2, [sp, #48]	; 0x30
   1498c:	str	r3, [sp, #24]
   14990:	ldr	r7, [sp, #152]	; 0x98
   14994:	bl	10f9c <__ctype_get_mb_cur_max@plt>
   14998:	str	r0, [sp, #76]	; 0x4c
   1499c:	ldr	r3, [sp, #156]	; 0x9c
   149a0:	ubfx	r3, r3, #1, #1
   149a4:	str	r3, [sp, #32]
   149a8:	mov	r3, #1
   149ac:	str	r3, [sp, #40]	; 0x28
   149b0:	mov	r3, #0
   149b4:	str	r3, [sp, #68]	; 0x44
   149b8:	str	r3, [sp, #36]	; 0x24
   149bc:	str	r3, [sp, #28]
   149c0:	str	r3, [sp, #52]	; 0x34
   149c4:	str	r3, [sp, #60]	; 0x3c
   149c8:	str	r3, [sp, #72]	; 0x48
   149cc:	movw	r3, #47972	; 0xbb64
   149d0:	movt	r3, #1
   149d4:	str	r3, [sp, #80]	; 0x50
   149d8:	mov	r9, r8
   149dc:	mov	sl, r7
   149e0:	cmp	sl, #10
   149e4:	ldrls	pc, [pc, sl, lsl #2]
   149e8:	b	14bac <tcgetattr@plt+0x3a48>
   149ec:	andeq	r4, r1, ip, asr #20
   149f0:	andeq	r4, r1, r0, lsr #20
   149f4:	andeq	r4, r1, r4, lsl #23
   149f8:	andeq	r4, r1, r8, lsl sl
   149fc:	andeq	r4, r1, r8, lsr fp
   14a00:	andeq	r4, r1, ip, asr sl
   14a04:	andeq	r5, r1, r8, lsr #28
   14a08:			; <UNDEFINED> instruction: 0x00014bb0
   14a0c:	muleq	r1, r8, sl
   14a10:	muleq	r1, r8, sl
   14a14:	muleq	r1, r8, sl
   14a18:	mov	r3, #1
   14a1c:	str	r3, [sp, #28]
   14a20:	mov	r3, #1
   14a24:	str	r3, [sp, #32]
   14a28:	str	r3, [sp, #52]	; 0x34
   14a2c:	movw	r3, #47968	; 0xbb60
   14a30:	movt	r3, #1
   14a34:	str	r3, [sp, #60]	; 0x3c
   14a38:	mov	fp, #0
   14a3c:	mov	sl, #2
   14a40:	mov	r6, #0
   14a44:	ldr	r8, [sp, #64]	; 0x40
   14a48:	b	152c0 <tcgetattr@plt+0x415c>
   14a4c:	mov	fp, sl
   14a50:	mov	r3, #0
   14a54:	str	r3, [sp, #32]
   14a58:	b	14a40 <tcgetattr@plt+0x38dc>
   14a5c:	ldr	r3, [sp, #32]
   14a60:	cmp	r3, #0
   14a64:	bne	14bc4 <tcgetattr@plt+0x3a60>
   14a68:	cmp	r9, #0
   14a6c:	beq	14be8 <tcgetattr@plt+0x3a84>
   14a70:	mov	r3, #34	; 0x22
   14a74:	ldr	r2, [sp, #64]	; 0x40
   14a78:	strb	r3, [r2]
   14a7c:	mov	fp, #1
   14a80:	str	fp, [sp, #28]
   14a84:	str	fp, [sp, #52]	; 0x34
   14a88:	movw	r3, #47948	; 0xbb4c
   14a8c:	movt	r3, #1
   14a90:	str	r3, [sp, #60]	; 0x3c
   14a94:	b	14a40 <tcgetattr@plt+0x38dc>
   14a98:	cmp	sl, #10
   14a9c:	bne	14ad0 <tcgetattr@plt+0x396c>
   14aa0:	ldr	r3, [sp, #32]
   14aa4:	cmp	r3, #0
   14aa8:	movne	fp, #0
   14aac:	beq	14af8 <tcgetattr@plt+0x3994>
   14ab0:	ldr	r0, [sp, #168]	; 0xa8
   14ab4:	bl	11050 <strlen@plt>
   14ab8:	str	r0, [sp, #52]	; 0x34
   14abc:	ldr	r3, [sp, #168]	; 0xa8
   14ac0:	str	r3, [sp, #60]	; 0x3c
   14ac4:	mov	r3, #1
   14ac8:	str	r3, [sp, #28]
   14acc:	b	14a40 <tcgetattr@plt+0x38dc>
   14ad0:	mov	r1, sl
   14ad4:	ldr	r0, [sp, #80]	; 0x50
   14ad8:	bl	14810 <tcgetattr@plt+0x36ac>
   14adc:	str	r0, [sp, #164]	; 0xa4
   14ae0:	mov	r1, sl
   14ae4:	movw	r0, #47968	; 0xbb60
   14ae8:	movt	r0, #1
   14aec:	bl	14810 <tcgetattr@plt+0x36ac>
   14af0:	str	r0, [sp, #168]	; 0xa8
   14af4:	b	14aa0 <tcgetattr@plt+0x393c>
   14af8:	ldr	r3, [sp, #164]	; 0xa4
   14afc:	ldrb	r3, [r3]
   14b00:	cmp	r3, #0
   14b04:	beq	14b30 <tcgetattr@plt+0x39cc>
   14b08:	ldr	r2, [sp, #164]	; 0xa4
   14b0c:	mov	fp, #0
   14b10:	ldr	r1, [sp, #64]	; 0x40
   14b14:	cmp	r9, fp
   14b18:	strbhi	r3, [r1, fp]
   14b1c:	add	fp, fp, #1
   14b20:	ldrb	r3, [r2, #1]!
   14b24:	cmp	r3, #0
   14b28:	bne	14b14 <tcgetattr@plt+0x39b0>
   14b2c:	b	14ab0 <tcgetattr@plt+0x394c>
   14b30:	mov	fp, #0
   14b34:	b	14ab0 <tcgetattr@plt+0x394c>
   14b38:	ldr	r3, [sp, #32]
   14b3c:	cmp	r3, #0
   14b40:	bne	14a20 <tcgetattr@plt+0x38bc>
   14b44:	mov	r3, #1
   14b48:	str	r3, [sp, #28]
   14b4c:	cmp	r9, #0
   14b50:	beq	14c04 <tcgetattr@plt+0x3aa0>
   14b54:	mov	r3, #39	; 0x27
   14b58:	ldr	r2, [sp, #64]	; 0x40
   14b5c:	strb	r3, [r2]
   14b60:	mov	r3, #0
   14b64:	str	r3, [sp, #32]
   14b68:	mov	fp, #1
   14b6c:	str	fp, [sp, #52]	; 0x34
   14b70:	movw	r3, #47968	; 0xbb60
   14b74:	movt	r3, #1
   14b78:	str	r3, [sp, #60]	; 0x3c
   14b7c:	mov	sl, #2
   14b80:	b	14a40 <tcgetattr@plt+0x38dc>
   14b84:	ldr	r3, [sp, #32]
   14b88:	cmp	r3, #0
   14b8c:	beq	14b4c <tcgetattr@plt+0x39e8>
   14b90:	mov	r3, #1
   14b94:	str	r3, [sp, #52]	; 0x34
   14b98:	movw	r3, #47968	; 0xbb60
   14b9c:	movt	r3, #1
   14ba0:	str	r3, [sp, #60]	; 0x3c
   14ba4:	mov	fp, #0
   14ba8:	b	14a40 <tcgetattr@plt+0x38dc>
   14bac:	bl	11140 <abort@plt>
   14bb0:	mov	fp, #0
   14bb4:	str	fp, [sp, #32]
   14bb8:	mov	r3, #1
   14bbc:	str	r3, [sp, #28]
   14bc0:	b	14a40 <tcgetattr@plt+0x38dc>
   14bc4:	ldr	r3, [sp, #32]
   14bc8:	str	r3, [sp, #28]
   14bcc:	mov	r3, #1
   14bd0:	str	r3, [sp, #52]	; 0x34
   14bd4:	movw	r3, #47948	; 0xbb4c
   14bd8:	movt	r3, #1
   14bdc:	str	r3, [sp, #60]	; 0x3c
   14be0:	mov	fp, #0
   14be4:	b	14a40 <tcgetattr@plt+0x38dc>
   14be8:	mov	fp, #1
   14bec:	str	fp, [sp, #28]
   14bf0:	str	fp, [sp, #52]	; 0x34
   14bf4:	movw	r3, #47948	; 0xbb4c
   14bf8:	movt	r3, #1
   14bfc:	str	r3, [sp, #60]	; 0x3c
   14c00:	b	14a40 <tcgetattr@plt+0x38dc>
   14c04:	mov	r3, #0
   14c08:	str	r3, [sp, #32]
   14c0c:	mov	fp, #1
   14c10:	str	fp, [sp, #52]	; 0x34
   14c14:	movw	r3, #47968	; 0xbb60
   14c18:	movt	r3, #1
   14c1c:	str	r3, [sp, #60]	; 0x3c
   14c20:	mov	sl, #2
   14c24:	b	14a40 <tcgetattr@plt+0x38dc>
   14c28:	mov	r3, r2
   14c2c:	add	r4, r6, r2
   14c30:	ldr	r2, [sp, #24]
   14c34:	cmp	r3, #1
   14c38:	movls	r3, #0
   14c3c:	movhi	r3, #1
   14c40:	cmn	r2, #1
   14c44:	movne	r3, #0
   14c48:	cmp	r3, #0
   14c4c:	beq	14c5c <tcgetattr@plt+0x3af8>
   14c50:	ldr	r0, [sp, #48]	; 0x30
   14c54:	bl	11050 <strlen@plt>
   14c58:	str	r0, [sp, #24]
   14c5c:	ldr	r3, [sp, #24]
   14c60:	cmp	r4, r3
   14c64:	bhi	15e50 <tcgetattr@plt+0x4cec>
   14c68:	ldr	r3, [sp, #48]	; 0x30
   14c6c:	add	r4, r3, r6
   14c70:	ldr	r2, [sp, #52]	; 0x34
   14c74:	ldr	r1, [sp, #60]	; 0x3c
   14c78:	mov	r0, r4
   14c7c:	bl	10f0c <memcmp@plt>
   14c80:	cmp	r0, #0
   14c84:	bne	15e50 <tcgetattr@plt+0x4cec>
   14c88:	ldr	r3, [sp, #32]
   14c8c:	cmp	r3, #0
   14c90:	bne	14ea0 <tcgetattr@plt+0x3d3c>
   14c94:	ldrb	r4, [r4]
   14c98:	cmp	r4, #126	; 0x7e
   14c9c:	ldrls	pc, [pc, r4, lsl #2]
   14ca0:	b	15754 <tcgetattr@plt+0x45f0>
   14ca4:	andeq	r4, r1, r4, ror #29
   14ca8:	andeq	r5, r1, r4, asr r7
   14cac:	andeq	r5, r1, r4, asr r7
   14cb0:	andeq	r5, r1, r4, asr r7
   14cb4:	andeq	r5, r1, r4, asr r7
   14cb8:	andeq	r5, r1, r4, asr r7
   14cbc:	andeq	r5, r1, r4, asr r7
   14cc0:	strdeq	r5, [r1], -ip
   14cc4:	andeq	r5, r1, r0, lsl #3
   14cc8:	andeq	r5, r1, r4, lsr #10
   14ccc:	ldrdeq	r5, [r1], -r0
   14cd0:	andeq	r5, r1, r8, lsr r5
   14cd4:	muleq	r1, r4, r1
   14cd8:	andeq	r5, r1, r8, lsr #3
   14cdc:	andeq	r5, r1, r4, asr r7
   14ce0:	andeq	r5, r1, r4, asr r7
   14ce4:	andeq	r5, r1, r4, asr r7
   14ce8:	andeq	r5, r1, r4, asr r7
   14cec:	andeq	r5, r1, r4, asr r7
   14cf0:	andeq	r5, r1, r4, asr r7
   14cf4:	andeq	r5, r1, r4, asr r7
   14cf8:	andeq	r5, r1, r4, asr r7
   14cfc:	andeq	r5, r1, r4, asr r7
   14d00:	andeq	r5, r1, r4, asr r7
   14d04:	andeq	r5, r1, r4, asr r7
   14d08:	andeq	r5, r1, r4, asr r7
   14d0c:	andeq	r5, r1, r4, asr r7
   14d10:	andeq	r5, r1, r4, asr r7
   14d14:	andeq	r5, r1, r4, asr r7
   14d18:	andeq	r5, r1, r4, asr r7
   14d1c:	andeq	r5, r1, r4, asr r7
   14d20:	andeq	r5, r1, r4, asr r7
   14d24:	andeq	r5, r1, r0, ror r6
   14d28:	muleq	r1, r4, r6
   14d2c:	muleq	r1, r4, r6
   14d30:	andeq	r5, r1, ip, lsr #12
   14d34:	muleq	r1, r4, r6
   14d38:			; <UNDEFINED> instruction: 0x00015bb4
   14d3c:	muleq	r1, r4, r6
   14d40:			; <UNDEFINED> instruction: 0x000156b4
   14d44:	muleq	r1, r4, r6
   14d48:	muleq	r1, r4, r6
   14d4c:	muleq	r1, r4, r6
   14d50:			; <UNDEFINED> instruction: 0x00015bb4
   14d54:			; <UNDEFINED> instruction: 0x00015bb4
   14d58:			; <UNDEFINED> instruction: 0x00015bb4
   14d5c:			; <UNDEFINED> instruction: 0x00015bb4
   14d60:			; <UNDEFINED> instruction: 0x00015bb4
   14d64:			; <UNDEFINED> instruction: 0x00015bb4
   14d68:			; <UNDEFINED> instruction: 0x00015bb4
   14d6c:			; <UNDEFINED> instruction: 0x00015bb4
   14d70:			; <UNDEFINED> instruction: 0x00015bb4
   14d74:			; <UNDEFINED> instruction: 0x00015bb4
   14d78:			; <UNDEFINED> instruction: 0x00015bb4
   14d7c:			; <UNDEFINED> instruction: 0x00015bb4
   14d80:			; <UNDEFINED> instruction: 0x00015bb4
   14d84:			; <UNDEFINED> instruction: 0x00015bb4
   14d88:			; <UNDEFINED> instruction: 0x00015bb4
   14d8c:			; <UNDEFINED> instruction: 0x00015bb4
   14d90:	muleq	r1, r4, r6
   14d94:	muleq	r1, r4, r6
   14d98:	muleq	r1, r4, r6
   14d9c:	muleq	r1, r4, r6
   14da0:	andeq	r5, r1, r4, lsl r0
   14da4:	andeq	r5, r1, r4, asr r7
   14da8:			; <UNDEFINED> instruction: 0x00015bb4
   14dac:			; <UNDEFINED> instruction: 0x00015bb4
   14db0:			; <UNDEFINED> instruction: 0x00015bb4
   14db4:			; <UNDEFINED> instruction: 0x00015bb4
   14db8:			; <UNDEFINED> instruction: 0x00015bb4
   14dbc:			; <UNDEFINED> instruction: 0x00015bb4
   14dc0:			; <UNDEFINED> instruction: 0x00015bb4
   14dc4:			; <UNDEFINED> instruction: 0x00015bb4
   14dc8:			; <UNDEFINED> instruction: 0x00015bb4
   14dcc:			; <UNDEFINED> instruction: 0x00015bb4
   14dd0:			; <UNDEFINED> instruction: 0x00015bb4
   14dd4:			; <UNDEFINED> instruction: 0x00015bb4
   14dd8:			; <UNDEFINED> instruction: 0x00015bb4
   14ddc:			; <UNDEFINED> instruction: 0x00015bb4
   14de0:			; <UNDEFINED> instruction: 0x00015bb4
   14de4:			; <UNDEFINED> instruction: 0x00015bb4
   14de8:			; <UNDEFINED> instruction: 0x00015bb4
   14dec:			; <UNDEFINED> instruction: 0x00015bb4
   14df0:			; <UNDEFINED> instruction: 0x00015bb4
   14df4:			; <UNDEFINED> instruction: 0x00015bb4
   14df8:			; <UNDEFINED> instruction: 0x00015bb4
   14dfc:			; <UNDEFINED> instruction: 0x00015bb4
   14e00:			; <UNDEFINED> instruction: 0x00015bb4
   14e04:			; <UNDEFINED> instruction: 0x00015bb4
   14e08:			; <UNDEFINED> instruction: 0x00015bb4
   14e0c:			; <UNDEFINED> instruction: 0x00015bb4
   14e10:	muleq	r1, r4, r6
   14e14:	andeq	r5, r1, ip, asr #10
   14e18:			; <UNDEFINED> instruction: 0x00015bb4
   14e1c:	muleq	r1, r4, r6
   14e20:			; <UNDEFINED> instruction: 0x00015bb4
   14e24:	muleq	r1, r4, r6
   14e28:			; <UNDEFINED> instruction: 0x00015bb4
   14e2c:			; <UNDEFINED> instruction: 0x00015bb4
   14e30:			; <UNDEFINED> instruction: 0x00015bb4
   14e34:			; <UNDEFINED> instruction: 0x00015bb4
   14e38:			; <UNDEFINED> instruction: 0x00015bb4
   14e3c:			; <UNDEFINED> instruction: 0x00015bb4
   14e40:			; <UNDEFINED> instruction: 0x00015bb4
   14e44:			; <UNDEFINED> instruction: 0x00015bb4
   14e48:			; <UNDEFINED> instruction: 0x00015bb4
   14e4c:			; <UNDEFINED> instruction: 0x00015bb4
   14e50:			; <UNDEFINED> instruction: 0x00015bb4
   14e54:			; <UNDEFINED> instruction: 0x00015bb4
   14e58:			; <UNDEFINED> instruction: 0x00015bb4
   14e5c:			; <UNDEFINED> instruction: 0x00015bb4
   14e60:			; <UNDEFINED> instruction: 0x00015bb4
   14e64:			; <UNDEFINED> instruction: 0x00015bb4
   14e68:			; <UNDEFINED> instruction: 0x00015bb4
   14e6c:			; <UNDEFINED> instruction: 0x00015bb4
   14e70:			; <UNDEFINED> instruction: 0x00015bb4
   14e74:			; <UNDEFINED> instruction: 0x00015bb4
   14e78:			; <UNDEFINED> instruction: 0x00015bb4
   14e7c:			; <UNDEFINED> instruction: 0x00015bb4
   14e80:			; <UNDEFINED> instruction: 0x00015bb4
   14e84:			; <UNDEFINED> instruction: 0x00015bb4
   14e88:			; <UNDEFINED> instruction: 0x00015bb4
   14e8c:			; <UNDEFINED> instruction: 0x00015bb4
   14e90:	andeq	r5, r1, ip, lsl #12
   14e94:	muleq	r1, r4, r6
   14e98:	andeq	r5, r1, ip, lsl #12
   14e9c:	andeq	r5, r1, ip, lsr #12
   14ea0:	mov	r8, r9
   14ea4:	mov	r7, sl
   14ea8:	b	15da8 <tcgetattr@plt+0x4c44>
   14eac:	ldr	r3, [sp, #28]
   14eb0:	cmp	r3, #0
   14eb4:	bne	14ed4 <tcgetattr@plt+0x3d70>
   14eb8:	ldr	r3, [sp, #156]	; 0x9c
   14ebc:	tst	r3, #1
   14ec0:	bne	152bc <tcgetattr@plt+0x4158>
   14ec4:	ldr	r3, [sp, #28]
   14ec8:	str	r3, [sp, #44]	; 0x2c
   14ecc:	mov	r5, r3
   14ed0:	b	151dc <tcgetattr@plt+0x4078>
   14ed4:	ldr	r3, [sp, #32]
   14ed8:	cmp	r3, #0
   14edc:	bne	15d58 <tcgetattr@plt+0x4bf4>
   14ee0:	str	r3, [sp, #44]	; 0x2c
   14ee4:	ldr	r3, [sp, #36]	; 0x24
   14ee8:	eor	r3, r3, #1
   14eec:	cmp	sl, #2
   14ef0:	movne	r3, #0
   14ef4:	andeq	r3, r3, #1
   14ef8:	cmp	r3, #0
   14efc:	beq	14f54 <tcgetattr@plt+0x3df0>
   14f00:	cmp	r9, fp
   14f04:	movhi	r2, #39	; 0x27
   14f08:	strbhi	r2, [r8, fp]
   14f0c:	add	r2, fp, #1
   14f10:	cmp	r9, r2
   14f14:	movhi	r1, #36	; 0x24
   14f18:	strbhi	r1, [r8, r2]
   14f1c:	add	r2, fp, #2
   14f20:	cmp	r9, r2
   14f24:	movhi	r1, #39	; 0x27
   14f28:	strbhi	r1, [r8, r2]
   14f2c:	add	r2, fp, #3
   14f30:	cmp	r9, r2
   14f34:	bls	15e14 <tcgetattr@plt+0x4cb0>
   14f38:	mov	r1, #92	; 0x5c
   14f3c:	strb	r1, [r8, r2]
   14f40:	add	fp, fp, #4
   14f44:	str	r3, [sp, #36]	; 0x24
   14f48:	mov	r5, #0
   14f4c:	mov	r4, #48	; 0x30
   14f50:	b	15228 <tcgetattr@plt+0x40c4>
   14f54:	cmp	r9, fp
   14f58:	bhi	14f80 <tcgetattr@plt+0x3e1c>
   14f5c:	add	r1, fp, #1
   14f60:	ldr	r2, [sp, #56]	; 0x38
   14f64:	cmp	r2, #0
   14f68:	bne	14fa8 <tcgetattr@plt+0x3e44>
   14f6c:	mov	r3, r5
   14f70:	ldr	r5, [sp, #56]	; 0x38
   14f74:	mov	fp, r1
   14f78:	mov	r4, #48	; 0x30
   14f7c:	b	151dc <tcgetattr@plt+0x4078>
   14f80:	mov	r2, #92	; 0x5c
   14f84:	strb	r2, [r8, fp]
   14f88:	add	r1, fp, #1
   14f8c:	ldr	r2, [sp, #56]	; 0x38
   14f90:	cmp	r2, #0
   14f94:	moveq	r3, r5
   14f98:	moveq	r5, r2
   14f9c:	moveq	fp, r1
   14fa0:	moveq	r4, #48	; 0x30
   14fa4:	beq	15228 <tcgetattr@plt+0x40c4>
   14fa8:	add	r2, r6, #1
   14fac:	ldr	r0, [sp, #24]
   14fb0:	cmp	r2, r0
   14fb4:	bcs	14fd0 <tcgetattr@plt+0x3e6c>
   14fb8:	ldr	r0, [sp, #48]	; 0x30
   14fbc:	ldrb	r2, [r0, r2]
   14fc0:	sub	r2, r2, #48	; 0x30
   14fc4:	uxtb	r2, r2
   14fc8:	cmp	r2, #9
   14fcc:	bls	14fe8 <tcgetattr@plt+0x3e84>
   14fd0:	mov	r2, r3
   14fd4:	mov	r3, r5
   14fd8:	mov	r5, r2
   14fdc:	mov	fp, r1
   14fe0:	mov	r4, #48	; 0x30
   14fe4:	b	15200 <tcgetattr@plt+0x409c>
   14fe8:	cmp	r9, r1
   14fec:	movhi	r2, #48	; 0x30
   14ff0:	strbhi	r2, [r8, r1]
   14ff4:	add	r2, fp, #2
   14ff8:	cmp	r9, r2
   14ffc:	movhi	r1, #48	; 0x30
   15000:	strbhi	r1, [r8, r2]
   15004:	add	r1, fp, #3
   15008:	b	14fd0 <tcgetattr@plt+0x3e6c>
   1500c:	mov	r3, #0
   15010:	str	r3, [sp, #44]	; 0x2c
   15014:	cmp	sl, #2
   15018:	beq	15034 <tcgetattr@plt+0x3ed0>
   1501c:	cmp	sl, #5
   15020:	beq	1504c <tcgetattr@plt+0x3ee8>
   15024:	mov	r5, #0
   15028:	mov	r3, r5
   1502c:	mov	r4, #63	; 0x3f
   15030:	b	151dc <tcgetattr@plt+0x4078>
   15034:	ldr	r3, [sp, #32]
   15038:	cmp	r3, #0
   1503c:	bne	15d64 <tcgetattr@plt+0x4c00>
   15040:	mov	r5, r3
   15044:	mov	r4, #63	; 0x3f
   15048:	b	15744 <tcgetattr@plt+0x45e0>
   1504c:	ldr	r3, [sp, #156]	; 0x9c
   15050:	tst	r3, #4
   15054:	beq	15b7c <tcgetattr@plt+0x4a18>
   15058:	add	r2, r6, #2
   1505c:	ldr	r3, [sp, #24]
   15060:	cmp	r2, r3
   15064:	bcs	15b8c <tcgetattr@plt+0x4a28>
   15068:	ldr	r3, [sp, #48]	; 0x30
   1506c:	add	r3, r3, r6
   15070:	ldrb	r4, [r3, #1]
   15074:	cmp	r4, #63	; 0x3f
   15078:	movne	r5, #0
   1507c:	movne	r3, r5
   15080:	movne	r4, #63	; 0x3f
   15084:	bne	151dc <tcgetattr@plt+0x4078>
   15088:	ldr	r3, [sp, #48]	; 0x30
   1508c:	ldrb	r1, [r3, r2]
   15090:	sub	r3, r1, #33	; 0x21
   15094:	cmp	r3, #29
   15098:	ldrls	pc, [pc, r3, lsl #2]
   1509c:	b	15b9c <tcgetattr@plt+0x4a38>
   150a0:	andeq	r5, r1, r8, lsl r1
   150a4:	muleq	r1, ip, fp
   150a8:	muleq	r1, ip, fp
   150ac:	muleq	r1, ip, fp
   150b0:	muleq	r1, ip, fp
   150b4:	muleq	r1, ip, fp
   150b8:	andeq	r5, r1, r8, lsl r1
   150bc:	andeq	r5, r1, r8, lsl r1
   150c0:	andeq	r5, r1, r8, lsl r1
   150c4:	muleq	r1, ip, fp
   150c8:	muleq	r1, ip, fp
   150cc:	muleq	r1, ip, fp
   150d0:	andeq	r5, r1, r8, lsl r1
   150d4:	muleq	r1, ip, fp
   150d8:	andeq	r5, r1, r8, lsl r1
   150dc:	muleq	r1, ip, fp
   150e0:	muleq	r1, ip, fp
   150e4:	muleq	r1, ip, fp
   150e8:	muleq	r1, ip, fp
   150ec:	muleq	r1, ip, fp
   150f0:	muleq	r1, ip, fp
   150f4:	muleq	r1, ip, fp
   150f8:	muleq	r1, ip, fp
   150fc:	muleq	r1, ip, fp
   15100:	muleq	r1, ip, fp
   15104:	muleq	r1, ip, fp
   15108:	muleq	r1, ip, fp
   1510c:	andeq	r5, r1, r8, lsl r1
   15110:	andeq	r5, r1, r8, lsl r1
   15114:	andeq	r5, r1, r8, lsl r1
   15118:	ldr	r3, [sp, #32]
   1511c:	cmp	r3, #0
   15120:	bne	15e08 <tcgetattr@plt+0x4ca4>
   15124:	cmp	r9, fp
   15128:	movhi	r3, #63	; 0x3f
   1512c:	strbhi	r3, [r8, fp]
   15130:	add	r3, fp, #1
   15134:	cmp	r9, r3
   15138:	movhi	r0, #34	; 0x22
   1513c:	strbhi	r0, [r8, r3]
   15140:	add	r3, fp, #2
   15144:	cmp	r9, r3
   15148:	movhi	r0, #34	; 0x22
   1514c:	strbhi	r0, [r8, r3]
   15150:	add	r3, fp, #3
   15154:	cmp	r9, r3
   15158:	movhi	r0, #63	; 0x3f
   1515c:	strbhi	r0, [r8, r3]
   15160:	add	fp, fp, #4
   15164:	ldr	r3, [sp, #32]
   15168:	mov	r5, r3
   1516c:	mov	r4, r1
   15170:	mov	r6, r2
   15174:	b	151dc <tcgetattr@plt+0x4078>
   15178:	mov	r3, #0
   1517c:	str	r3, [sp, #44]	; 0x2c
   15180:	mov	r4, #8
   15184:	mov	r3, #98	; 0x62
   15188:	b	151c8 <tcgetattr@plt+0x4064>
   1518c:	mov	r3, #0
   15190:	str	r3, [sp, #44]	; 0x2c
   15194:	mov	r4, #12
   15198:	mov	r3, #102	; 0x66
   1519c:	b	151c8 <tcgetattr@plt+0x4064>
   151a0:	mov	r3, #0
   151a4:	str	r3, [sp, #44]	; 0x2c
   151a8:	mov	r4, #13
   151ac:	mov	r3, #114	; 0x72
   151b0:	ldr	r2, [sp, #32]
   151b4:	cmp	sl, #2
   151b8:	movne	r2, #0
   151bc:	andeq	r2, r2, #1
   151c0:	cmp	r2, #0
   151c4:	bne	155e8 <tcgetattr@plt+0x4484>
   151c8:	ldr	r2, [sp, #28]
   151cc:	cmp	r2, #0
   151d0:	bne	15bd0 <tcgetattr@plt+0x4a6c>
   151d4:	mov	r5, r2
   151d8:	mov	r3, r2
   151dc:	ldr	r2, [sp, #28]
   151e0:	eor	r2, r2, #1
   151e4:	cmp	sl, #2
   151e8:	orreq	r2, r2, #1
   151ec:	eor	r2, r2, #1
   151f0:	ldr	r1, [sp, #32]
   151f4:	orr	r2, r1, r2
   151f8:	tst	r2, #255	; 0xff
   151fc:	beq	15228 <tcgetattr@plt+0x40c4>
   15200:	ldr	r2, [sp, #160]	; 0xa0
   15204:	cmp	r2, #0
   15208:	beq	15228 <tcgetattr@plt+0x40c4>
   1520c:	ubfx	r1, r4, #5, #8
   15210:	and	r2, r4, #31
   15214:	ldr	r0, [sp, #160]	; 0xa0
   15218:	ldr	r1, [r0, r1, lsl #2]
   1521c:	lsr	r2, r1, r2
   15220:	tst	r2, #1
   15224:	bne	15234 <tcgetattr@plt+0x40d0>
   15228:	ldr	r2, [sp, #44]	; 0x2c
   1522c:	cmp	r2, #0
   15230:	beq	15588 <tcgetattr@plt+0x4424>
   15234:	ldr	r3, [sp, #32]
   15238:	cmp	r3, #0
   1523c:	bne	15d88 <tcgetattr@plt+0x4c24>
   15240:	ldr	r3, [sp, #36]	; 0x24
   15244:	eor	r3, r3, #1
   15248:	cmp	sl, #2
   1524c:	movne	r3, #0
   15250:	andeq	r3, r3, #1
   15254:	cmp	r3, #0
   15258:	beq	15290 <tcgetattr@plt+0x412c>
   1525c:	cmp	r9, fp
   15260:	movhi	r2, #39	; 0x27
   15264:	strbhi	r2, [r8, fp]
   15268:	add	r2, fp, #1
   1526c:	cmp	r9, r2
   15270:	movhi	r1, #36	; 0x24
   15274:	strbhi	r1, [r8, r2]
   15278:	add	r2, fp, #2
   1527c:	cmp	r9, r2
   15280:	movhi	r1, #39	; 0x27
   15284:	strbhi	r1, [r8, r2]
   15288:	add	fp, fp, #3
   1528c:	str	r3, [sp, #36]	; 0x24
   15290:	cmp	r9, fp
   15294:	movhi	r3, #92	; 0x5c
   15298:	strbhi	r3, [r8, fp]
   1529c:	add	fp, fp, #1
   152a0:	cmp	fp, r9
   152a4:	strbcc	r4, [r8, fp]
   152a8:	add	fp, fp, #1
   152ac:	cmp	r5, #0
   152b0:	ldr	r3, [sp, #40]	; 0x28
   152b4:	moveq	r3, r5
   152b8:	str	r3, [sp, #40]	; 0x28
   152bc:	add	r6, r6, #1
   152c0:	ldr	r3, [sp, #24]
   152c4:	cmn	r3, #1
   152c8:	beq	15bf8 <tcgetattr@plt+0x4a94>
   152cc:	ldr	r3, [sp, #24]
   152d0:	subs	r5, r3, r6
   152d4:	movne	r5, #1
   152d8:	cmp	r5, #0
   152dc:	beq	15c0c <tcgetattr@plt+0x4aa8>
   152e0:	ldr	r3, [sp, #28]
   152e4:	cmp	sl, #2
   152e8:	moveq	r3, #0
   152ec:	andne	r3, r3, #1
   152f0:	str	r3, [sp, #56]	; 0x38
   152f4:	ldr	r2, [sp, #52]	; 0x34
   152f8:	adds	r7, r2, #0
   152fc:	movne	r7, #1
   15300:	ands	r3, r3, r7
   15304:	str	r3, [sp, #44]	; 0x2c
   15308:	bne	14c28 <tcgetattr@plt+0x3ac4>
   1530c:	ldr	r3, [sp, #48]	; 0x30
   15310:	ldrb	r4, [r3, r6]
   15314:	cmp	r4, #126	; 0x7e
   15318:	ldrls	pc, [pc, r4, lsl #2]
   1531c:	b	15754 <tcgetattr@plt+0x45f0>
   15320:	andeq	r4, r1, ip, lsr #29
   15324:	andeq	r5, r1, r4, asr r7
   15328:	andeq	r5, r1, r4, asr r7
   1532c:	andeq	r5, r1, r4, asr r7
   15330:	andeq	r5, r1, r4, asr r7
   15334:	andeq	r5, r1, r4, asr r7
   15338:	andeq	r5, r1, r4, asr r7
   1533c:	strdeq	r5, [r1], -r4
   15340:	andeq	r5, r1, r0, lsl #3
   15344:	andeq	r5, r1, r4, lsr #10
   15348:	andeq	r5, r1, r8, asr #11
   1534c:	andeq	r5, r1, r8, lsr r5
   15350:	muleq	r1, r4, r1
   15354:	andeq	r5, r1, r8, lsr #3
   15358:	andeq	r5, r1, r4, asr r7
   1535c:	andeq	r5, r1, r4, asr r7
   15360:	andeq	r5, r1, r4, asr r7
   15364:	andeq	r5, r1, r4, asr r7
   15368:	andeq	r5, r1, r4, asr r7
   1536c:	andeq	r5, r1, r4, asr r7
   15370:	andeq	r5, r1, r4, asr r7
   15374:	andeq	r5, r1, r4, asr r7
   15378:	andeq	r5, r1, r4, asr r7
   1537c:	andeq	r5, r1, r4, asr r7
   15380:	andeq	r5, r1, r4, asr r7
   15384:	andeq	r5, r1, r4, asr r7
   15388:	andeq	r5, r1, r4, asr r7
   1538c:	andeq	r5, r1, r4, asr r7
   15390:	andeq	r5, r1, r4, asr r7
   15394:	andeq	r5, r1, r4, asr r7
   15398:	andeq	r5, r1, r4, asr r7
   1539c:	andeq	r5, r1, r4, asr r7
   153a0:	andeq	r5, r1, r0, ror r6
   153a4:	andeq	r5, r1, ip, ror #12
   153a8:	andeq	r5, r1, ip, ror #12
   153ac:	andeq	r5, r1, ip, lsr #12
   153b0:	andeq	r5, r1, ip, ror #12
   153b4:	andeq	r5, r1, r4, ror fp
   153b8:	andeq	r5, r1, ip, ror #12
   153bc:			; <UNDEFINED> instruction: 0x000156b4
   153c0:	andeq	r5, r1, ip, ror #12
   153c4:	andeq	r5, r1, ip, ror #12
   153c8:	andeq	r5, r1, ip, ror #12
   153cc:	andeq	r5, r1, r4, ror fp
   153d0:	andeq	r5, r1, r4, ror fp
   153d4:	andeq	r5, r1, r4, ror fp
   153d8:	andeq	r5, r1, r4, ror fp
   153dc:	andeq	r5, r1, r4, ror fp
   153e0:	andeq	r5, r1, r4, ror fp
   153e4:	andeq	r5, r1, r4, ror fp
   153e8:	andeq	r5, r1, r4, ror fp
   153ec:	andeq	r5, r1, r4, ror fp
   153f0:	andeq	r5, r1, r4, ror fp
   153f4:	andeq	r5, r1, r4, ror fp
   153f8:	andeq	r5, r1, r4, ror fp
   153fc:	andeq	r5, r1, r4, ror fp
   15400:	andeq	r5, r1, r4, ror fp
   15404:	andeq	r5, r1, r4, ror fp
   15408:	andeq	r5, r1, r4, ror fp
   1540c:	andeq	r5, r1, ip, ror #12
   15410:	andeq	r5, r1, ip, ror #12
   15414:	andeq	r5, r1, ip, ror #12
   15418:	andeq	r5, r1, ip, ror #12
   1541c:	andeq	r5, r1, r4, lsl r0
   15420:	andeq	r5, r1, r4, asr r7
   15424:	andeq	r5, r1, r4, ror fp
   15428:	andeq	r5, r1, r4, ror fp
   1542c:	andeq	r5, r1, r4, ror fp
   15430:	andeq	r5, r1, r4, ror fp
   15434:	andeq	r5, r1, r4, ror fp
   15438:	andeq	r5, r1, r4, ror fp
   1543c:	andeq	r5, r1, r4, ror fp
   15440:	andeq	r5, r1, r4, ror fp
   15444:	andeq	r5, r1, r4, ror fp
   15448:	andeq	r5, r1, r4, ror fp
   1544c:	andeq	r5, r1, r4, ror fp
   15450:	andeq	r5, r1, r4, ror fp
   15454:	andeq	r5, r1, r4, ror fp
   15458:	andeq	r5, r1, r4, ror fp
   1545c:	andeq	r5, r1, r4, ror fp
   15460:	andeq	r5, r1, r4, ror fp
   15464:	andeq	r5, r1, r4, ror fp
   15468:	andeq	r5, r1, r4, ror fp
   1546c:	andeq	r5, r1, r4, ror fp
   15470:	andeq	r5, r1, r4, ror fp
   15474:	andeq	r5, r1, r4, ror fp
   15478:	andeq	r5, r1, r4, ror fp
   1547c:	andeq	r5, r1, r4, ror fp
   15480:	andeq	r5, r1, r4, ror fp
   15484:	andeq	r5, r1, r4, ror fp
   15488:	andeq	r5, r1, r4, ror fp
   1548c:	andeq	r5, r1, ip, ror #12
   15490:	andeq	r5, r1, ip, asr #10
   15494:	andeq	r5, r1, r4, ror fp
   15498:	andeq	r5, r1, ip, ror #12
   1549c:	andeq	r5, r1, r4, ror fp
   154a0:	andeq	r5, r1, ip, ror #12
   154a4:	andeq	r5, r1, r4, ror fp
   154a8:	andeq	r5, r1, r4, ror fp
   154ac:	andeq	r5, r1, r4, ror fp
   154b0:	andeq	r5, r1, r4, ror fp
   154b4:	andeq	r5, r1, r4, ror fp
   154b8:	andeq	r5, r1, r4, ror fp
   154bc:	andeq	r5, r1, r4, ror fp
   154c0:	andeq	r5, r1, r4, ror fp
   154c4:	andeq	r5, r1, r4, ror fp
   154c8:	andeq	r5, r1, r4, ror fp
   154cc:	andeq	r5, r1, r4, ror fp
   154d0:	andeq	r5, r1, r4, ror fp
   154d4:	andeq	r5, r1, r4, ror fp
   154d8:	andeq	r5, r1, r4, ror fp
   154dc:	andeq	r5, r1, r4, ror fp
   154e0:	andeq	r5, r1, r4, ror fp
   154e4:	andeq	r5, r1, r4, ror fp
   154e8:	andeq	r5, r1, r4, ror fp
   154ec:	andeq	r5, r1, r4, ror fp
   154f0:	andeq	r5, r1, r4, ror fp
   154f4:	andeq	r5, r1, r4, ror fp
   154f8:	andeq	r5, r1, r4, ror fp
   154fc:	andeq	r5, r1, r4, ror fp
   15500:	andeq	r5, r1, r4, ror fp
   15504:	andeq	r5, r1, r4, ror fp
   15508:	andeq	r5, r1, r4, ror fp
   1550c:	andeq	r5, r1, ip, lsl #12
   15510:	andeq	r5, r1, ip, ror #12
   15514:	andeq	r5, r1, ip, lsl #12
   15518:	andeq	r5, r1, ip, lsr #12
   1551c:	mov	r3, #0
   15520:	str	r3, [sp, #44]	; 0x2c
   15524:	mov	r4, #9
   15528:	mov	r3, #116	; 0x74
   1552c:	b	151b0 <tcgetattr@plt+0x404c>
   15530:	mov	r3, #0
   15534:	str	r3, [sp, #44]	; 0x2c
   15538:	mov	r4, #11
   1553c:	mov	r3, #118	; 0x76
   15540:	b	151c8 <tcgetattr@plt+0x4064>
   15544:	mov	r3, #0
   15548:	str	r3, [sp, #44]	; 0x2c
   1554c:	cmp	sl, #2
   15550:	beq	15574 <tcgetattr@plt+0x4410>
   15554:	ldr	r3, [sp, #28]
   15558:	ldr	r2, [sp, #32]
   1555c:	and	r3, r3, r2
   15560:	tst	r7, r3
   15564:	bne	15be8 <tcgetattr@plt+0x4a84>
   15568:	mov	r4, #92	; 0x5c
   1556c:	mov	r3, r4
   15570:	b	151c8 <tcgetattr@plt+0x4064>
   15574:	ldr	r3, [sp, #32]
   15578:	cmp	r3, #0
   1557c:	bne	15d70 <tcgetattr@plt+0x4c0c>
   15580:	mov	r5, r3
   15584:	mov	r4, #92	; 0x5c
   15588:	eor	r3, r3, #1
   1558c:	ldr	r2, [sp, #36]	; 0x24
   15590:	and	r3, r3, r2
   15594:	tst	r3, #255	; 0xff
   15598:	beq	152a0 <tcgetattr@plt+0x413c>
   1559c:	cmp	r9, fp
   155a0:	movhi	r3, #39	; 0x27
   155a4:	strbhi	r3, [r8, fp]
   155a8:	add	r3, fp, #1
   155ac:	cmp	r9, r3
   155b0:	movhi	r2, #39	; 0x27
   155b4:	strbhi	r2, [r8, r3]
   155b8:	add	fp, fp, #2
   155bc:	mov	r3, #0
   155c0:	str	r3, [sp, #36]	; 0x24
   155c4:	b	152a0 <tcgetattr@plt+0x413c>
   155c8:	mov	r3, #110	; 0x6e
   155cc:	b	151b0 <tcgetattr@plt+0x404c>
   155d0:	mov	r3, #110	; 0x6e
   155d4:	b	151b0 <tcgetattr@plt+0x404c>
   155d8:	mov	r3, #0
   155dc:	str	r3, [sp, #44]	; 0x2c
   155e0:	mov	r3, #110	; 0x6e
   155e4:	b	151b0 <tcgetattr@plt+0x404c>
   155e8:	mov	r8, r9
   155ec:	mov	r7, #2
   155f0:	b	15d90 <tcgetattr@plt+0x4c2c>
   155f4:	mov	r3, #97	; 0x61
   155f8:	b	151c8 <tcgetattr@plt+0x4064>
   155fc:	mov	r3, #97	; 0x61
   15600:	b	151c8 <tcgetattr@plt+0x4064>
   15604:	mov	r3, #0
   15608:	str	r3, [sp, #44]	; 0x2c
   1560c:	ldr	r3, [sp, #24]
   15610:	cmn	r3, #1
   15614:	beq	15640 <tcgetattr@plt+0x44dc>
   15618:	ldr	r3, [sp, #24]
   1561c:	subs	r3, r3, #1
   15620:	movne	r3, #1
   15624:	cmp	r3, #0
   15628:	bne	15ba8 <tcgetattr@plt+0x4a44>
   1562c:	cmp	r6, #0
   15630:	beq	15670 <tcgetattr@plt+0x450c>
   15634:	mov	r5, #0
   15638:	mov	r3, r5
   1563c:	b	151dc <tcgetattr@plt+0x4078>
   15640:	ldr	r3, [sp, #48]	; 0x30
   15644:	ldrb	r3, [r3, #1]
   15648:	adds	r3, r3, #0
   1564c:	movne	r3, #1
   15650:	b	15624 <tcgetattr@plt+0x44c0>
   15654:	mov	r3, #0
   15658:	str	r3, [sp, #44]	; 0x2c
   1565c:	b	1562c <tcgetattr@plt+0x44c8>
   15660:	mov	r3, #0
   15664:	str	r3, [sp, #44]	; 0x2c
   15668:	b	15670 <tcgetattr@plt+0x450c>
   1566c:	ldr	r5, [sp, #44]	; 0x2c
   15670:	ldr	r3, [sp, #32]
   15674:	cmp	sl, #2
   15678:	movne	r3, #0
   1567c:	andeq	r3, r3, #1
   15680:	cmp	r3, #0
   15684:	beq	151dc <tcgetattr@plt+0x4078>
   15688:	mov	r8, r9
   1568c:	mov	r7, #2
   15690:	b	15d90 <tcgetattr@plt+0x4c2c>
   15694:	ldr	r5, [sp, #32]
   15698:	b	15670 <tcgetattr@plt+0x450c>
   1569c:	mov	r3, #0
   156a0:	str	r3, [sp, #44]	; 0x2c
   156a4:	mov	r5, r3
   156a8:	b	15670 <tcgetattr@plt+0x450c>
   156ac:	mov	r3, #0
   156b0:	str	r3, [sp, #44]	; 0x2c
   156b4:	cmp	sl, #2
   156b8:	strne	r5, [sp, #68]	; 0x44
   156bc:	movne	r3, #0
   156c0:	movne	r4, #39	; 0x27
   156c4:	bne	151dc <tcgetattr@plt+0x4078>
   156c8:	ldr	r3, [sp, #32]
   156cc:	cmp	r3, #0
   156d0:	bne	15d7c <tcgetattr@plt+0x4c18>
   156d4:	ldr	r3, [sp, #72]	; 0x48
   156d8:	clz	r3, r3
   156dc:	lsr	r3, r3, #5
   156e0:	cmp	r9, #0
   156e4:	moveq	r3, #0
   156e8:	cmp	r3, #0
   156ec:	movne	r3, #0
   156f0:	bne	15718 <tcgetattr@plt+0x45b4>
   156f4:	cmp	r9, fp
   156f8:	movhi	r3, #39	; 0x27
   156fc:	strbhi	r3, [r8, fp]
   15700:	add	r3, fp, #1
   15704:	cmp	r9, r3
   15708:	movhi	r2, #92	; 0x5c
   1570c:	strbhi	r2, [r8, r3]
   15710:	mov	r3, r9
   15714:	ldr	r9, [sp, #72]	; 0x48
   15718:	add	r2, fp, #2
   1571c:	cmp	r2, r3
   15720:	movcc	r1, #39	; 0x27
   15724:	strbcc	r1, [r8, r2]
   15728:	add	fp, fp, #3
   1572c:	str	r5, [sp, #68]	; 0x44
   15730:	ldr	r2, [sp, #32]
   15734:	str	r2, [sp, #36]	; 0x24
   15738:	str	r9, [sp, #72]	; 0x48
   1573c:	mov	r9, r3
   15740:	mov	r4, #39	; 0x27
   15744:	mov	r3, #0
   15748:	b	15228 <tcgetattr@plt+0x40c4>
   1574c:	mov	r3, #0
   15750:	str	r3, [sp, #44]	; 0x2c
   15754:	ldr	r7, [sp, #76]	; 0x4c
   15758:	cmp	r7, #1
   1575c:	bne	15794 <tcgetattr@plt+0x4630>
   15760:	bl	1102c <__ctype_b_loc@plt>
   15764:	ldr	r2, [r0]
   15768:	lsl	r3, r4, #1
   1576c:	ldrh	r5, [r2, r3]
   15770:	ubfx	r5, r5, #14, #1
   15774:	mov	ip, r7
   15778:	eor	r3, r5, #1
   1577c:	ldr	r2, [sp, #28]
   15780:	and	r3, r3, r2
   15784:	ands	r3, r3, #255	; 0xff
   15788:	beq	151dc <tcgetattr@plt+0x4078>
   1578c:	mov	r5, #0
   15790:	b	159f0 <tcgetattr@plt+0x488c>
   15794:	mov	r2, #0
   15798:	mov	r3, #0
   1579c:	strd	r2, [sp, #104]	; 0x68
   157a0:	ldr	r3, [sp, #24]
   157a4:	cmn	r3, #1
   157a8:	beq	157cc <tcgetattr@plt+0x4668>
   157ac:	mov	r3, #0
   157b0:	str	r4, [sp, #88]	; 0x58
   157b4:	str	fp, [sp, #92]	; 0x5c
   157b8:	str	r8, [sp, #56]	; 0x38
   157bc:	mov	r8, r3
   157c0:	str	r9, [sp, #84]	; 0x54
   157c4:	ldr	r9, [sp, #48]	; 0x30
   157c8:	b	15918 <tcgetattr@plt+0x47b4>
   157cc:	ldr	r0, [sp, #48]	; 0x30
   157d0:	bl	11050 <strlen@plt>
   157d4:	str	r0, [sp, #24]
   157d8:	b	157ac <tcgetattr@plt+0x4648>
   157dc:	mov	r1, fp
   157e0:	ldr	r4, [sp, #88]	; 0x58
   157e4:	mov	r2, r8
   157e8:	mov	ip, r8
   157ec:	ldr	fp, [sp, #92]	; 0x5c
   157f0:	ldr	r8, [sp, #56]	; 0x38
   157f4:	ldr	r9, [sp, #84]	; 0x54
   157f8:	ldr	r0, [sp, #24]
   157fc:	cmp	r7, r0
   15800:	bcs	159b8 <tcgetattr@plt+0x4854>
   15804:	ldrb	r3, [r1]
   15808:	cmp	r3, #0
   1580c:	beq	159c0 <tcgetattr@plt+0x485c>
   15810:	mov	r3, r1
   15814:	add	r2, r2, #1
   15818:	add	r1, r6, r2
   1581c:	cmp	r0, r1
   15820:	bls	159c8 <tcgetattr@plt+0x4864>
   15824:	ldrb	r1, [r3, #1]!
   15828:	cmp	r1, #0
   1582c:	bne	15814 <tcgetattr@plt+0x46b0>
   15830:	mov	ip, r2
   15834:	mov	r5, #0
   15838:	b	159e8 <tcgetattr@plt+0x4884>
   1583c:	ldr	r3, [sp, #56]	; 0x38
   15840:	str	r3, [sp, #64]	; 0x40
   15844:	ldr	r8, [sp, #84]	; 0x54
   15848:	mov	r7, #2
   1584c:	b	15d90 <tcgetattr@plt+0x4c2c>
   15850:	cmp	r2, r7
   15854:	beq	158f4 <tcgetattr@plt+0x4790>
   15858:	ldrb	r3, [r2], #1
   1585c:	sub	r3, r3, #91	; 0x5b
   15860:	cmp	r3, #33	; 0x21
   15864:	ldrls	pc, [pc, r3, lsl #2]
   15868:	b	15850 <tcgetattr@plt+0x46ec>
   1586c:	andeq	r5, r1, ip, lsr r8
   15870:	andeq	r5, r1, ip, lsr r8
   15874:	andeq	r5, r1, r0, asr r8
   15878:	andeq	r5, r1, ip, lsr r8
   1587c:	andeq	r5, r1, r0, asr r8
   15880:	andeq	r5, r1, ip, lsr r8
   15884:	andeq	r5, r1, r0, asr r8
   15888:	andeq	r5, r1, r0, asr r8
   1588c:	andeq	r5, r1, r0, asr r8
   15890:	andeq	r5, r1, r0, asr r8
   15894:	andeq	r5, r1, r0, asr r8
   15898:	andeq	r5, r1, r0, asr r8
   1589c:	andeq	r5, r1, r0, asr r8
   158a0:	andeq	r5, r1, r0, asr r8
   158a4:	andeq	r5, r1, r0, asr r8
   158a8:	andeq	r5, r1, r0, asr r8
   158ac:	andeq	r5, r1, r0, asr r8
   158b0:	andeq	r5, r1, r0, asr r8
   158b4:	andeq	r5, r1, r0, asr r8
   158b8:	andeq	r5, r1, r0, asr r8
   158bc:	andeq	r5, r1, r0, asr r8
   158c0:	andeq	r5, r1, r0, asr r8
   158c4:	andeq	r5, r1, r0, asr r8
   158c8:	andeq	r5, r1, r0, asr r8
   158cc:	andeq	r5, r1, r0, asr r8
   158d0:	andeq	r5, r1, r0, asr r8
   158d4:	andeq	r5, r1, r0, asr r8
   158d8:	andeq	r5, r1, r0, asr r8
   158dc:	andeq	r5, r1, r0, asr r8
   158e0:	andeq	r5, r1, r0, asr r8
   158e4:	andeq	r5, r1, r0, asr r8
   158e8:	andeq	r5, r1, r0, asr r8
   158ec:	andeq	r5, r1, r0, asr r8
   158f0:	andeq	r5, r1, ip, lsr r8
   158f4:	ldr	r0, [sp, #100]	; 0x64
   158f8:	bl	10f60 <iswprint@plt>
   158fc:	cmp	r0, #0
   15900:	moveq	r5, #0
   15904:	add	r8, r8, r4
   15908:	add	r0, sp, #104	; 0x68
   1590c:	bl	10f00 <mbsinit@plt>
   15910:	cmp	r0, #0
   15914:	bne	15984 <tcgetattr@plt+0x4820>
   15918:	add	r7, r6, r8
   1591c:	add	fp, r9, r7
   15920:	add	r3, sp, #104	; 0x68
   15924:	ldr	r2, [sp, #24]
   15928:	sub	r2, r2, r7
   1592c:	mov	r1, fp
   15930:	add	r0, sp, #100	; 0x64
   15934:	bl	185d8 <tcgetattr@plt+0x7474>
   15938:	subs	r4, r0, #0
   1593c:	beq	159d4 <tcgetattr@plt+0x4870>
   15940:	cmn	r4, #1
   15944:	beq	1599c <tcgetattr@plt+0x4838>
   15948:	cmn	r4, #2
   1594c:	beq	157dc <tcgetattr@plt+0x4678>
   15950:	ldr	r3, [sp, #32]
   15954:	cmp	sl, #2
   15958:	movne	r3, #0
   1595c:	andeq	r3, r3, #1
   15960:	cmp	r3, #0
   15964:	beq	158f4 <tcgetattr@plt+0x4790>
   15968:	cmp	r4, #1
   1596c:	bls	158f4 <tcgetattr@plt+0x4790>
   15970:	add	r2, r7, #1
   15974:	add	r2, r9, r2
   15978:	add	r3, r9, r4
   1597c:	add	r7, r3, r7
   15980:	b	15858 <tcgetattr@plt+0x46f4>
   15984:	ldr	r4, [sp, #88]	; 0x58
   15988:	mov	ip, r8
   1598c:	ldr	fp, [sp, #92]	; 0x5c
   15990:	ldr	r8, [sp, #56]	; 0x38
   15994:	ldr	r9, [sp, #84]	; 0x54
   15998:	b	159e8 <tcgetattr@plt+0x4884>
   1599c:	ldr	r4, [sp, #88]	; 0x58
   159a0:	mov	ip, r8
   159a4:	ldr	fp, [sp, #92]	; 0x5c
   159a8:	ldr	r8, [sp, #56]	; 0x38
   159ac:	ldr	r9, [sp, #84]	; 0x54
   159b0:	mov	r5, #0
   159b4:	b	159e8 <tcgetattr@plt+0x4884>
   159b8:	mov	r5, #0
   159bc:	b	159e8 <tcgetattr@plt+0x4884>
   159c0:	mov	r5, #0
   159c4:	b	159e8 <tcgetattr@plt+0x4884>
   159c8:	mov	ip, r2
   159cc:	mov	r5, #0
   159d0:	b	159e8 <tcgetattr@plt+0x4884>
   159d4:	ldr	r4, [sp, #88]	; 0x58
   159d8:	mov	ip, r8
   159dc:	ldr	fp, [sp, #92]	; 0x5c
   159e0:	ldr	r8, [sp, #56]	; 0x38
   159e4:	ldr	r9, [sp, #84]	; 0x54
   159e8:	cmp	ip, #1
   159ec:	bls	15778 <tcgetattr@plt+0x4614>
   159f0:	add	lr, r6, ip
   159f4:	ldr	r3, [sp, #48]	; 0x30
   159f8:	add	r1, r3, r6
   159fc:	mov	r3, #0
   15a00:	eor	r0, r5, #1
   15a04:	ldr	r2, [sp, #28]
   15a08:	and	r0, r0, r2
   15a0c:	uxtb	r0, r0
   15a10:	str	r0, [sp, #56]	; 0x38
   15a14:	mov	r7, #92	; 0x5c
   15a18:	ldr	ip, [sp, #36]	; 0x24
   15a1c:	str	r5, [sp, #84]	; 0x54
   15a20:	ldr	r2, [sp, #44]	; 0x2c
   15a24:	b	15a94 <tcgetattr@plt+0x4930>
   15a28:	cmp	r2, #0
   15a2c:	beq	15a3c <tcgetattr@plt+0x48d8>
   15a30:	cmp	r9, fp
   15a34:	strbhi	r7, [r8, fp]
   15a38:	add	fp, fp, #1
   15a3c:	add	r5, r6, #1
   15a40:	cmp	r5, lr
   15a44:	bcs	15b50 <tcgetattr@plt+0x49ec>
   15a48:	eor	r2, r3, #1
   15a4c:	and	r2, r2, ip
   15a50:	ands	r2, r2, #255	; 0xff
   15a54:	beq	15b6c <tcgetattr@plt+0x4a08>
   15a58:	cmp	r9, fp
   15a5c:	movhi	r2, #39	; 0x27
   15a60:	strbhi	r2, [r8, fp]
   15a64:	add	r2, fp, #1
   15a68:	cmp	r9, r2
   15a6c:	movhi	ip, #39	; 0x27
   15a70:	strbhi	ip, [r8, r2]
   15a74:	add	fp, fp, #2
   15a78:	ldr	ip, [sp, #56]	; 0x38
   15a7c:	mov	r2, ip
   15a80:	mov	r6, r5
   15a84:	cmp	r9, fp
   15a88:	strbhi	r4, [r8, fp]
   15a8c:	add	fp, fp, #1
   15a90:	ldrb	r4, [r1, #1]!
   15a94:	cmp	r0, #0
   15a98:	beq	15a28 <tcgetattr@plt+0x48c4>
   15a9c:	ldr	r3, [sp, #32]
   15aa0:	cmp	r3, #0
   15aa4:	bne	15d38 <tcgetattr@plt+0x4bd4>
   15aa8:	eor	r3, ip, #1
   15aac:	cmp	sl, #2
   15ab0:	movne	r3, #0
   15ab4:	andeq	r3, r3, #1
   15ab8:	cmp	r3, #0
   15abc:	beq	15af4 <tcgetattr@plt+0x4990>
   15ac0:	cmp	r9, fp
   15ac4:	movhi	ip, #39	; 0x27
   15ac8:	strbhi	ip, [r8, fp]
   15acc:	add	ip, fp, #1
   15ad0:	cmp	r9, ip
   15ad4:	movhi	r5, #36	; 0x24
   15ad8:	strbhi	r5, [r8, ip]
   15adc:	add	ip, fp, #2
   15ae0:	cmp	r9, ip
   15ae4:	movhi	r5, #39	; 0x27
   15ae8:	strbhi	r5, [r8, ip]
   15aec:	add	fp, fp, #3
   15af0:	mov	ip, r3
   15af4:	cmp	r9, fp
   15af8:	strbhi	r7, [r8, fp]
   15afc:	add	r3, fp, #1
   15b00:	cmp	r9, r3
   15b04:	bls	15b14 <tcgetattr@plt+0x49b0>
   15b08:	lsr	r5, r4, #6
   15b0c:	add	r5, r5, #48	; 0x30
   15b10:	strb	r5, [r8, r3]
   15b14:	add	r3, fp, #2
   15b18:	cmp	r9, r3
   15b1c:	bls	15b2c <tcgetattr@plt+0x49c8>
   15b20:	ubfx	r5, r4, #3, #3
   15b24:	add	r5, r5, #48	; 0x30
   15b28:	strb	r5, [r8, r3]
   15b2c:	add	fp, fp, #3
   15b30:	and	r4, r4, #7
   15b34:	add	r4, r4, #48	; 0x30
   15b38:	add	r5, r6, #1
   15b3c:	cmp	r5, lr
   15b40:	bcs	15b5c <tcgetattr@plt+0x49f8>
   15b44:	ldr	r3, [sp, #56]	; 0x38
   15b48:	mov	r6, r5
   15b4c:	b	15a84 <tcgetattr@plt+0x4920>
   15b50:	str	ip, [sp, #36]	; 0x24
   15b54:	ldr	r5, [sp, #84]	; 0x54
   15b58:	b	15588 <tcgetattr@plt+0x4424>
   15b5c:	str	ip, [sp, #36]	; 0x24
   15b60:	ldr	r5, [sp, #84]	; 0x54
   15b64:	mov	r3, r0
   15b68:	b	15588 <tcgetattr@plt+0x4424>
   15b6c:	mov	r6, r5
   15b70:	b	15a84 <tcgetattr@plt+0x4920>
   15b74:	ldr	r3, [sp, #44]	; 0x2c
   15b78:	b	151dc <tcgetattr@plt+0x4078>
   15b7c:	mov	r5, #0
   15b80:	mov	r3, r5
   15b84:	mov	r4, #63	; 0x3f
   15b88:	b	151dc <tcgetattr@plt+0x4078>
   15b8c:	mov	r5, #0
   15b90:	mov	r3, r5
   15b94:	mov	r4, #63	; 0x3f
   15b98:	b	151dc <tcgetattr@plt+0x4078>
   15b9c:	mov	r5, #0
   15ba0:	mov	r3, r5
   15ba4:	b	151dc <tcgetattr@plt+0x4078>
   15ba8:	mov	r5, #0
   15bac:	mov	r3, r5
   15bb0:	b	151dc <tcgetattr@plt+0x4078>
   15bb4:	ldr	r5, [sp, #44]	; 0x2c
   15bb8:	ldr	r3, [sp, #32]
   15bbc:	b	151dc <tcgetattr@plt+0x4078>
   15bc0:	ldr	r5, [sp, #44]	; 0x2c
   15bc4:	mov	r3, #0
   15bc8:	str	r3, [sp, #44]	; 0x2c
   15bcc:	b	151dc <tcgetattr@plt+0x4078>
   15bd0:	mov	r4, r3
   15bd4:	mov	r5, #0
   15bd8:	b	15234 <tcgetattr@plt+0x40d0>
   15bdc:	mov	r5, #0
   15be0:	mov	r4, #97	; 0x61
   15be4:	b	15234 <tcgetattr@plt+0x40d0>
   15be8:	mov	r5, #0
   15bec:	mov	r3, r5
   15bf0:	mov	r4, #92	; 0x5c
   15bf4:	b	15588 <tcgetattr@plt+0x4424>
   15bf8:	ldr	r3, [sp, #48]	; 0x30
   15bfc:	ldrb	r5, [r3, r6]
   15c00:	adds	r5, r5, #0
   15c04:	movne	r5, #1
   15c08:	b	152d8 <tcgetattr@plt+0x4174>
   15c0c:	cmp	sl, #2
   15c10:	movne	r3, #0
   15c14:	moveq	r3, #1
   15c18:	ldr	r1, [sp, #32]
   15c1c:	cmp	fp, #0
   15c20:	andeq	r2, r3, r1
   15c24:	movne	r2, #0
   15c28:	cmp	r2, #0
   15c2c:	bne	15d4c <tcgetattr@plt+0x4be8>
   15c30:	eor	r2, r1, #1
   15c34:	uxtb	r2, r2
   15c38:	and	r3, r3, r2
   15c3c:	ldr	r1, [sp, #68]	; 0x44
   15c40:	ands	r3, r1, r3
   15c44:	beq	15cd8 <tcgetattr@plt+0x4b74>
   15c48:	ldr	r2, [sp, #40]	; 0x28
   15c4c:	cmp	r2, #0
   15c50:	bne	15c88 <tcgetattr@plt+0x4b24>
   15c54:	ldr	r2, [sp, #72]	; 0x48
   15c58:	adds	r2, r2, #0
   15c5c:	movne	r2, #1
   15c60:	cmp	r9, #0
   15c64:	movne	r2, #0
   15c68:	str	r2, [sp, #68]	; 0x44
   15c6c:	mov	sl, #2
   15c70:	ldr	r1, [sp, #40]	; 0x28
   15c74:	str	r1, [sp, #32]
   15c78:	cmp	r2, #0
   15c7c:	beq	15ccc <tcgetattr@plt+0x4b68>
   15c80:	ldr	r9, [sp, #72]	; 0x48
   15c84:	b	149e0 <tcgetattr@plt+0x387c>
   15c88:	ldr	r3, [sp, #168]	; 0xa8
   15c8c:	str	r3, [sp, #16]
   15c90:	ldr	r3, [sp, #164]	; 0xa4
   15c94:	str	r3, [sp, #12]
   15c98:	ldr	r3, [sp, #160]	; 0xa0
   15c9c:	str	r3, [sp, #8]
   15ca0:	ldr	r3, [sp, #156]	; 0x9c
   15ca4:	str	r3, [sp, #4]
   15ca8:	mov	r3, #5
   15cac:	str	r3, [sp]
   15cb0:	ldr	r3, [sp, #24]
   15cb4:	ldr	r2, [sp, #48]	; 0x30
   15cb8:	ldr	r1, [sp, #72]	; 0x48
   15cbc:	ldr	r0, [sp, #64]	; 0x40
   15cc0:	bl	14968 <tcgetattr@plt+0x3804>
   15cc4:	mov	fp, r0
   15cc8:	b	15de8 <tcgetattr@plt+0x4c84>
   15ccc:	mov	r8, r9
   15cd0:	mov	r2, r3
   15cd4:	b	15cdc <tcgetattr@plt+0x4b78>
   15cd8:	mov	r8, r9
   15cdc:	ldr	r3, [sp, #60]	; 0x3c
   15ce0:	cmp	r3, #0
   15ce4:	moveq	r2, #0
   15ce8:	andne	r2, r2, #1
   15cec:	cmp	r2, #0
   15cf0:	beq	15d20 <tcgetattr@plt+0x4bbc>
   15cf4:	mov	r2, r3
   15cf8:	ldrb	r3, [r3]
   15cfc:	cmp	r3, #0
   15d00:	beq	15d20 <tcgetattr@plt+0x4bbc>
   15d04:	ldr	r1, [sp, #64]	; 0x40
   15d08:	cmp	r8, fp
   15d0c:	strbhi	r3, [r1, fp]
   15d10:	add	fp, fp, #1
   15d14:	ldrb	r3, [r2, #1]!
   15d18:	cmp	r3, #0
   15d1c:	bne	15d08 <tcgetattr@plt+0x4ba4>
   15d20:	cmp	r8, fp
   15d24:	bls	15de8 <tcgetattr@plt+0x4c84>
   15d28:	mov	r3, #0
   15d2c:	ldr	r2, [sp, #64]	; 0x40
   15d30:	strb	r3, [r2, fp]
   15d34:	b	15de8 <tcgetattr@plt+0x4c84>
   15d38:	mov	r8, r9
   15d3c:	mov	r7, sl
   15d40:	ldr	r3, [sp, #32]
   15d44:	str	r3, [sp, #28]
   15d48:	b	15d90 <tcgetattr@plt+0x4c2c>
   15d4c:	mov	r8, r9
   15d50:	mov	r7, #2
   15d54:	b	15d90 <tcgetattr@plt+0x4c2c>
   15d58:	mov	r8, r9
   15d5c:	mov	r7, sl
   15d60:	b	15d90 <tcgetattr@plt+0x4c2c>
   15d64:	mov	r8, r9
   15d68:	mov	r7, sl
   15d6c:	b	15d90 <tcgetattr@plt+0x4c2c>
   15d70:	mov	r8, r9
   15d74:	mov	r7, sl
   15d78:	b	15d90 <tcgetattr@plt+0x4c2c>
   15d7c:	mov	r8, r9
   15d80:	mov	r7, sl
   15d84:	b	15d90 <tcgetattr@plt+0x4c2c>
   15d88:	mov	r8, r9
   15d8c:	mov	r7, sl
   15d90:	ldr	r3, [sp, #28]
   15d94:	cmp	r7, #2
   15d98:	movne	r3, #0
   15d9c:	andeq	r3, r3, #1
   15da0:	cmp	r3, #0
   15da4:	movne	r7, #4
   15da8:	ldr	r3, [sp, #168]	; 0xa8
   15dac:	str	r3, [sp, #16]
   15db0:	ldr	r3, [sp, #164]	; 0xa4
   15db4:	str	r3, [sp, #12]
   15db8:	mov	r3, #0
   15dbc:	str	r3, [sp, #8]
   15dc0:	ldr	r3, [sp, #156]	; 0x9c
   15dc4:	bic	r3, r3, #2
   15dc8:	str	r3, [sp, #4]
   15dcc:	str	r7, [sp]
   15dd0:	ldr	r3, [sp, #24]
   15dd4:	ldr	r2, [sp, #48]	; 0x30
   15dd8:	mov	r1, r8
   15ddc:	ldr	r0, [sp, #64]	; 0x40
   15de0:	bl	14968 <tcgetattr@plt+0x3804>
   15de4:	mov	fp, r0
   15de8:	mov	r0, fp
   15dec:	add	sp, sp, #116	; 0x74
   15df0:	ldrd	r4, [sp]
   15df4:	ldrd	r6, [sp, #8]
   15df8:	ldrd	r8, [sp, #16]
   15dfc:	ldrd	sl, [sp, #24]
   15e00:	add	sp, sp, #32
   15e04:	pop	{pc}		; (ldr pc, [sp], #4)
   15e08:	mov	r8, r9
   15e0c:	mov	r7, sl
   15e10:	b	15da8 <tcgetattr@plt+0x4c44>
   15e14:	add	fp, fp, #4
   15e18:	str	r3, [sp, #36]	; 0x24
   15e1c:	mov	r5, #0
   15e20:	mov	r4, #48	; 0x30
   15e24:	b	151dc <tcgetattr@plt+0x4078>
   15e28:	mov	r3, #1
   15e2c:	str	r3, [sp, #32]
   15e30:	str	r3, [sp, #28]
   15e34:	str	r3, [sp, #52]	; 0x34
   15e38:	movw	r3, #47948	; 0xbb4c
   15e3c:	movt	r3, #1
   15e40:	str	r3, [sp, #60]	; 0x3c
   15e44:	mov	fp, #0
   15e48:	mov	sl, #5
   15e4c:	b	14a40 <tcgetattr@plt+0x38dc>
   15e50:	ldr	r3, [sp, #48]	; 0x30
   15e54:	ldrb	r4, [r3, r6]
   15e58:	cmp	r4, #126	; 0x7e
   15e5c:	ldrls	pc, [pc, r4, lsl #2]
   15e60:	b	1574c <tcgetattr@plt+0x45e8>
   15e64:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   15e68:	andeq	r5, r1, ip, asr #14
   15e6c:	andeq	r5, r1, ip, asr #14
   15e70:	andeq	r5, r1, ip, asr #14
   15e74:	andeq	r5, r1, ip, asr #14
   15e78:	andeq	r5, r1, ip, asr #14
   15e7c:	andeq	r5, r1, ip, asr #14
   15e80:	ldrdeq	r5, [r1], -ip
   15e84:	andeq	r5, r1, r8, ror r1
   15e88:	andeq	r5, r1, ip, lsl r5
   15e8c:	ldrdeq	r5, [r1], -r8
   15e90:	andeq	r5, r1, r0, lsr r5
   15e94:	andeq	r5, r1, ip, lsl #3
   15e98:	andeq	r5, r1, r0, lsr #3
   15e9c:	andeq	r5, r1, ip, asr #14
   15ea0:	andeq	r5, r1, ip, asr #14
   15ea4:	andeq	r5, r1, ip, asr #14
   15ea8:	andeq	r5, r1, ip, asr #14
   15eac:	andeq	r5, r1, ip, asr #14
   15eb0:	andeq	r5, r1, ip, asr #14
   15eb4:	andeq	r5, r1, ip, asr #14
   15eb8:	andeq	r5, r1, ip, asr #14
   15ebc:	andeq	r5, r1, ip, asr #14
   15ec0:	andeq	r5, r1, ip, asr #14
   15ec4:	andeq	r5, r1, ip, asr #14
   15ec8:	andeq	r5, r1, ip, asr #14
   15ecc:	andeq	r5, r1, ip, asr #14
   15ed0:	andeq	r5, r1, ip, asr #14
   15ed4:	andeq	r5, r1, ip, asr #14
   15ed8:	andeq	r5, r1, ip, asr #14
   15edc:	andeq	r5, r1, ip, asr #14
   15ee0:	andeq	r5, r1, ip, asr #14
   15ee4:	andeq	r5, r1, r0, ror #12
   15ee8:	muleq	r1, ip, r6
   15eec:	muleq	r1, ip, r6
   15ef0:	andeq	r5, r1, r4, asr r6
   15ef4:	muleq	r1, ip, r6
   15ef8:	andeq	r5, r1, r0, asr #23
   15efc:	muleq	r1, ip, r6
   15f00:	andeq	r5, r1, ip, lsr #13
   15f04:	muleq	r1, ip, r6
   15f08:	muleq	r1, ip, r6
   15f0c:	muleq	r1, ip, r6
   15f10:	andeq	r5, r1, r0, asr #23
   15f14:	andeq	r5, r1, r0, asr #23
   15f18:	andeq	r5, r1, r0, asr #23
   15f1c:	andeq	r5, r1, r0, asr #23
   15f20:	andeq	r5, r1, r0, asr #23
   15f24:	andeq	r5, r1, r0, asr #23
   15f28:	andeq	r5, r1, r0, asr #23
   15f2c:	andeq	r5, r1, r0, asr #23
   15f30:	andeq	r5, r1, r0, asr #23
   15f34:	andeq	r5, r1, r0, asr #23
   15f38:	andeq	r5, r1, r0, asr #23
   15f3c:	andeq	r5, r1, r0, asr #23
   15f40:	andeq	r5, r1, r0, asr #23
   15f44:	andeq	r5, r1, r0, asr #23
   15f48:	andeq	r5, r1, r0, asr #23
   15f4c:	andeq	r5, r1, r0, asr #23
   15f50:	muleq	r1, ip, r6
   15f54:	muleq	r1, ip, r6
   15f58:	muleq	r1, ip, r6
   15f5c:	muleq	r1, ip, r6
   15f60:	andeq	r5, r1, ip
   15f64:	andeq	r5, r1, ip, asr #14
   15f68:	andeq	r5, r1, r0, asr #23
   15f6c:	andeq	r5, r1, r0, asr #23
   15f70:	andeq	r5, r1, r0, asr #23
   15f74:	andeq	r5, r1, r0, asr #23
   15f78:	andeq	r5, r1, r0, asr #23
   15f7c:	andeq	r5, r1, r0, asr #23
   15f80:	andeq	r5, r1, r0, asr #23
   15f84:	andeq	r5, r1, r0, asr #23
   15f88:	andeq	r5, r1, r0, asr #23
   15f8c:	andeq	r5, r1, r0, asr #23
   15f90:	andeq	r5, r1, r0, asr #23
   15f94:	andeq	r5, r1, r0, asr #23
   15f98:	andeq	r5, r1, r0, asr #23
   15f9c:	andeq	r5, r1, r0, asr #23
   15fa0:	andeq	r5, r1, r0, asr #23
   15fa4:	andeq	r5, r1, r0, asr #23
   15fa8:	andeq	r5, r1, r0, asr #23
   15fac:	andeq	r5, r1, r0, asr #23
   15fb0:	andeq	r5, r1, r0, asr #23
   15fb4:	andeq	r5, r1, r0, asr #23
   15fb8:	andeq	r5, r1, r0, asr #23
   15fbc:	andeq	r5, r1, r0, asr #23
   15fc0:	andeq	r5, r1, r0, asr #23
   15fc4:	andeq	r5, r1, r0, asr #23
   15fc8:	andeq	r5, r1, r0, asr #23
   15fcc:	andeq	r5, r1, r0, asr #23
   15fd0:	muleq	r1, ip, r6
   15fd4:	andeq	r5, r1, r4, asr #10
   15fd8:	andeq	r5, r1, r0, asr #23
   15fdc:	muleq	r1, ip, r6
   15fe0:	andeq	r5, r1, r0, asr #23
   15fe4:	muleq	r1, ip, r6
   15fe8:	andeq	r5, r1, r0, asr #23
   15fec:	andeq	r5, r1, r0, asr #23
   15ff0:	andeq	r5, r1, r0, asr #23
   15ff4:	andeq	r5, r1, r0, asr #23
   15ff8:	andeq	r5, r1, r0, asr #23
   15ffc:	andeq	r5, r1, r0, asr #23
   16000:	andeq	r5, r1, r0, asr #23
   16004:	andeq	r5, r1, r0, asr #23
   16008:	andeq	r5, r1, r0, asr #23
   1600c:	andeq	r5, r1, r0, asr #23
   16010:	andeq	r5, r1, r0, asr #23
   16014:	andeq	r5, r1, r0, asr #23
   16018:	andeq	r5, r1, r0, asr #23
   1601c:	andeq	r5, r1, r0, asr #23
   16020:	andeq	r5, r1, r0, asr #23
   16024:	andeq	r5, r1, r0, asr #23
   16028:	andeq	r5, r1, r0, asr #23
   1602c:	andeq	r5, r1, r0, asr #23
   16030:	andeq	r5, r1, r0, asr #23
   16034:	andeq	r5, r1, r0, asr #23
   16038:	andeq	r5, r1, r0, asr #23
   1603c:	andeq	r5, r1, r0, asr #23
   16040:	andeq	r5, r1, r0, asr #23
   16044:	andeq	r5, r1, r0, asr #23
   16048:	andeq	r5, r1, r0, asr #23
   1604c:	andeq	r5, r1, r0, asr #23
   16050:	andeq	r5, r1, r4, lsl #12
   16054:	muleq	r1, ip, r6
   16058:	andeq	r5, r1, r4, lsl #12
   1605c:	andeq	r5, r1, r4, asr r6
   16060:	strd	r4, [sp, #-36]!	; 0xffffffdc
   16064:	strd	r6, [sp, #8]
   16068:	strd	r8, [sp, #16]
   1606c:	strd	sl, [sp, #24]
   16070:	str	lr, [sp, #32]
   16074:	sub	sp, sp, #52	; 0x34
   16078:	mov	r5, r0
   1607c:	str	r1, [sp, #24]
   16080:	str	r2, [sp, #28]
   16084:	mov	r4, r3
   16088:	bl	11080 <__errno_location@plt>
   1608c:	str	r0, [sp, #32]
   16090:	ldr	r3, [r0]
   16094:	str	r3, [sp, #36]	; 0x24
   16098:	movw	r3, #53528	; 0xd118
   1609c:	movt	r3, #2
   160a0:	ldr	r6, [r3]
   160a4:	cmn	r5, #-2147483647	; 0x80000001
   160a8:	movne	r3, #0
   160ac:	moveq	r3, #1
   160b0:	orrs	r3, r3, r5, lsr #31
   160b4:	bne	16218 <tcgetattr@plt+0x50b4>
   160b8:	movw	r3, #53528	; 0xd118
   160bc:	movt	r3, #2
   160c0:	ldr	r2, [r3, #4]
   160c4:	cmp	r2, r5
   160c8:	bgt	16138 <tcgetattr@plt+0x4fd4>
   160cc:	str	r2, [sp, #44]	; 0x2c
   160d0:	add	r3, r3, #8
   160d4:	cmp	r6, r3
   160d8:	beq	1621c <tcgetattr@plt+0x50b8>
   160dc:	sub	r2, r5, r2
   160e0:	mov	r3, #8
   160e4:	str	r3, [sp]
   160e8:	mvn	r3, #-2147483648	; 0x80000000
   160ec:	add	r2, r2, #1
   160f0:	add	r1, sp, #44	; 0x2c
   160f4:	mov	r0, r6
   160f8:	bl	17220 <tcgetattr@plt+0x60bc>
   160fc:	mov	r6, r0
   16100:	movw	r3, #53528	; 0xd118
   16104:	movt	r3, #2
   16108:	str	r0, [r3]
   1610c:	movw	r7, #53528	; 0xd118
   16110:	movt	r7, #2
   16114:	ldr	r0, [r7, #4]
   16118:	ldr	r2, [sp, #44]	; 0x2c
   1611c:	sub	r2, r2, r0
   16120:	lsl	r2, r2, #3
   16124:	mov	r1, #0
   16128:	add	r0, r6, r0, lsl #3
   1612c:	bl	110a4 <memset@plt>
   16130:	ldr	r3, [sp, #44]	; 0x2c
   16134:	str	r3, [r7, #4]
   16138:	add	fp, r6, r5, lsl #3
   1613c:	ldr	r8, [r6, r5, lsl #3]
   16140:	ldr	r7, [fp, #4]
   16144:	ldr	r3, [r4, #4]
   16148:	orr	r9, r3, #1
   1614c:	add	sl, r4, #8
   16150:	ldr	r3, [r4, #44]	; 0x2c
   16154:	str	r3, [sp, #16]
   16158:	ldr	r3, [r4, #40]	; 0x28
   1615c:	str	r3, [sp, #12]
   16160:	str	sl, [sp, #8]
   16164:	str	r9, [sp, #4]
   16168:	ldr	r3, [r4]
   1616c:	str	r3, [sp]
   16170:	ldr	r3, [sp, #28]
   16174:	ldr	r2, [sp, #24]
   16178:	mov	r1, r8
   1617c:	mov	r0, r7
   16180:	bl	14968 <tcgetattr@plt+0x3804>
   16184:	cmp	r8, r0
   16188:	bhi	161ec <tcgetattr@plt+0x5088>
   1618c:	add	r8, r0, #1
   16190:	str	r8, [r6, r5, lsl #3]
   16194:	movw	r3, #53848	; 0xd258
   16198:	movt	r3, #2
   1619c:	cmp	r7, r3
   161a0:	beq	161ac <tcgetattr@plt+0x5048>
   161a4:	mov	r0, r7
   161a8:	bl	146a4 <tcgetattr@plt+0x3540>
   161ac:	mov	r0, r8
   161b0:	bl	1701c <tcgetattr@plt+0x5eb8>
   161b4:	mov	r7, r0
   161b8:	str	r0, [fp, #4]
   161bc:	ldr	r3, [r4, #44]	; 0x2c
   161c0:	str	r3, [sp, #16]
   161c4:	ldr	r3, [r4, #40]	; 0x28
   161c8:	str	r3, [sp, #12]
   161cc:	str	sl, [sp, #8]
   161d0:	str	r9, [sp, #4]
   161d4:	ldr	r3, [r4]
   161d8:	str	r3, [sp]
   161dc:	ldr	r3, [sp, #28]
   161e0:	ldr	r2, [sp, #24]
   161e4:	mov	r1, r8
   161e8:	bl	14968 <tcgetattr@plt+0x3804>
   161ec:	ldr	r3, [sp, #32]
   161f0:	ldr	r2, [sp, #36]	; 0x24
   161f4:	str	r2, [r3]
   161f8:	mov	r0, r7
   161fc:	add	sp, sp, #52	; 0x34
   16200:	ldrd	r4, [sp]
   16204:	ldrd	r6, [sp, #8]
   16208:	ldrd	r8, [sp, #16]
   1620c:	ldrd	sl, [sp, #24]
   16210:	add	sp, sp, #32
   16214:	pop	{pc}		; (ldr pc, [sp], #4)
   16218:	bl	11140 <abort@plt>
   1621c:	sub	r2, r5, r2
   16220:	mov	r3, #8
   16224:	str	r3, [sp]
   16228:	mvn	r3, #-2147483648	; 0x80000000
   1622c:	add	r2, r2, #1
   16230:	add	r1, sp, #44	; 0x2c
   16234:	mov	r0, #0
   16238:	bl	17220 <tcgetattr@plt+0x60bc>
   1623c:	mov	r6, r0
   16240:	movw	r3, #53528	; 0xd118
   16244:	movt	r3, #2
   16248:	str	r0, [r3]
   1624c:	ldrd	r2, [r3, #8]
   16250:	strd	r2, [r0]
   16254:	b	1610c <tcgetattr@plt+0x4fa8>
   16258:	strd	r4, [sp, #-16]!
   1625c:	str	r6, [sp, #8]
   16260:	str	lr, [sp, #12]
   16264:	mov	r4, r0
   16268:	bl	11080 <__errno_location@plt>
   1626c:	mov	r5, r0
   16270:	ldr	r6, [r0]
   16274:	cmp	r4, #0
   16278:	ldr	r3, [pc, #32]	; 162a0 <tcgetattr@plt+0x513c>
   1627c:	moveq	r4, r3
   16280:	mov	r1, #48	; 0x30
   16284:	mov	r0, r4
   16288:	bl	17390 <tcgetattr@plt+0x622c>
   1628c:	str	r6, [r5]
   16290:	ldrd	r4, [sp]
   16294:	ldr	r6, [sp, #8]
   16298:	add	sp, sp, #12
   1629c:	pop	{pc}		; (ldr pc, [sp], #4)
   162a0:	andeq	sp, r2, r8, asr r3
   162a4:	subs	r3, r0, #0
   162a8:	ldr	r2, [pc, #8]	; 162b8 <tcgetattr@plt+0x5154>
   162ac:	moveq	r3, r2
   162b0:	ldr	r0, [r3]
   162b4:	bx	lr
   162b8:	andeq	sp, r2, r8, asr r3
   162bc:	subs	r3, r0, #0
   162c0:	ldr	r2, [pc, #8]	; 162d0 <tcgetattr@plt+0x516c>
   162c4:	moveq	r3, r2
   162c8:	str	r1, [r3]
   162cc:	bx	lr
   162d0:	andeq	sp, r2, r8, asr r3
   162d4:	push	{lr}		; (str lr, [sp, #-4]!)
   162d8:	subs	r3, r0, #0
   162dc:	ldr	r0, [pc, #44]	; 16310 <tcgetattr@plt+0x51ac>
   162e0:	moveq	r3, r0
   162e4:	add	r3, r3, #8
   162e8:	lsr	lr, r1, #5
   162ec:	and	r1, r1, #31
   162f0:	ldr	ip, [r3, lr, lsl #2]
   162f4:	lsr	r0, ip, r1
   162f8:	eor	r2, r2, r0
   162fc:	and	r2, r2, #1
   16300:	eor	r1, ip, r2, lsl r1
   16304:	str	r1, [r3, lr, lsl #2]
   16308:	and	r0, r0, #1
   1630c:	pop	{pc}		; (ldr pc, [sp], #4)
   16310:	andeq	sp, r2, r8, asr r3
   16314:	subs	r3, r0, #0
   16318:	ldr	r2, [pc, #12]	; 1632c <tcgetattr@plt+0x51c8>
   1631c:	moveq	r3, r2
   16320:	ldr	r0, [r3, #4]
   16324:	str	r1, [r3, #4]
   16328:	bx	lr
   1632c:	andeq	sp, r2, r8, asr r3
   16330:	subs	r3, r0, #0
   16334:	ldr	r0, [pc, #44]	; 16368 <tcgetattr@plt+0x5204>
   16338:	moveq	r3, r0
   1633c:	mov	r0, #10
   16340:	str	r0, [r3]
   16344:	cmp	r2, #0
   16348:	cmpne	r1, #0
   1634c:	beq	1635c <tcgetattr@plt+0x51f8>
   16350:	str	r1, [r3, #40]	; 0x28
   16354:	str	r2, [r3, #44]	; 0x2c
   16358:	bx	lr
   1635c:	str	r4, [sp, #-8]!
   16360:	str	lr, [sp, #4]
   16364:	bl	11140 <abort@plt>
   16368:	andeq	sp, r2, r8, asr r3
   1636c:	strd	r4, [sp, #-32]!	; 0xffffffe0
   16370:	strd	r6, [sp, #8]
   16374:	strd	r8, [sp, #16]
   16378:	str	sl, [sp, #24]
   1637c:	str	lr, [sp, #28]
   16380:	sub	sp, sp, #24
   16384:	mov	r7, r0
   16388:	mov	r8, r1
   1638c:	mov	r9, r2
   16390:	mov	sl, r3
   16394:	ldr	r4, [sp, #56]	; 0x38
   16398:	cmp	r4, #0
   1639c:	ldr	r3, [pc, #104]	; 1640c <tcgetattr@plt+0x52a8>
   163a0:	moveq	r4, r3
   163a4:	bl	11080 <__errno_location@plt>
   163a8:	mov	r5, r0
   163ac:	ldr	r6, [r0]
   163b0:	ldr	r3, [r4, #44]	; 0x2c
   163b4:	str	r3, [sp, #16]
   163b8:	ldr	r3, [r4, #40]	; 0x28
   163bc:	str	r3, [sp, #12]
   163c0:	add	r3, r4, #8
   163c4:	str	r3, [sp, #8]
   163c8:	ldr	r3, [r4, #4]
   163cc:	str	r3, [sp, #4]
   163d0:	ldr	r3, [r4]
   163d4:	str	r3, [sp]
   163d8:	mov	r3, sl
   163dc:	mov	r2, r9
   163e0:	mov	r1, r8
   163e4:	mov	r0, r7
   163e8:	bl	14968 <tcgetattr@plt+0x3804>
   163ec:	str	r6, [r5]
   163f0:	add	sp, sp, #24
   163f4:	ldrd	r4, [sp]
   163f8:	ldrd	r6, [sp, #8]
   163fc:	ldrd	r8, [sp, #16]
   16400:	ldr	sl, [sp, #24]
   16404:	add	sp, sp, #28
   16408:	pop	{pc}		; (ldr pc, [sp], #4)
   1640c:	andeq	sp, r2, r8, asr r3
   16410:	strd	r4, [sp, #-36]!	; 0xffffffdc
   16414:	strd	r6, [sp, #8]
   16418:	strd	r8, [sp, #16]
   1641c:	strd	sl, [sp, #24]
   16420:	str	lr, [sp, #32]
   16424:	sub	sp, sp, #44	; 0x2c
   16428:	mov	r8, r0
   1642c:	mov	sl, r1
   16430:	mov	r6, r2
   16434:	subs	r4, r3, #0
   16438:	ldr	r3, [pc, #200]	; 16508 <tcgetattr@plt+0x53a4>
   1643c:	moveq	r4, r3
   16440:	bl	11080 <__errno_location@plt>
   16444:	mov	r7, r0
   16448:	ldr	fp, [r0]
   1644c:	ldr	r5, [r4, #4]
   16450:	cmp	r6, #0
   16454:	orreq	r5, r5, #1
   16458:	add	r9, r4, #8
   1645c:	ldr	r3, [r4, #44]	; 0x2c
   16460:	str	r3, [sp, #16]
   16464:	ldr	r3, [r4, #40]	; 0x28
   16468:	str	r3, [sp, #12]
   1646c:	str	r9, [sp, #8]
   16470:	str	r5, [sp, #4]
   16474:	ldr	r3, [r4]
   16478:	str	r3, [sp]
   1647c:	str	sl, [sp, #36]	; 0x24
   16480:	mov	r3, sl
   16484:	str	r8, [sp, #32]
   16488:	mov	r2, r8
   1648c:	mov	r1, #0
   16490:	mov	r0, r1
   16494:	bl	14968 <tcgetattr@plt+0x3804>
   16498:	mov	sl, r0
   1649c:	add	r8, r0, #1
   164a0:	mov	r0, r8
   164a4:	bl	1701c <tcgetattr@plt+0x5eb8>
   164a8:	str	r0, [sp, #28]
   164ac:	ldr	r3, [r4, #44]	; 0x2c
   164b0:	str	r3, [sp, #16]
   164b4:	ldr	r3, [r4, #40]	; 0x28
   164b8:	str	r3, [sp, #12]
   164bc:	str	r9, [sp, #8]
   164c0:	str	r5, [sp, #4]
   164c4:	ldr	r3, [r4]
   164c8:	str	r3, [sp]
   164cc:	ldr	r3, [sp, #36]	; 0x24
   164d0:	ldr	r2, [sp, #32]
   164d4:	mov	r1, r8
   164d8:	bl	14968 <tcgetattr@plt+0x3804>
   164dc:	str	fp, [r7]
   164e0:	cmp	r6, #0
   164e4:	strne	sl, [r6]
   164e8:	ldr	r0, [sp, #28]
   164ec:	add	sp, sp, #44	; 0x2c
   164f0:	ldrd	r4, [sp]
   164f4:	ldrd	r6, [sp, #8]
   164f8:	ldrd	r8, [sp, #16]
   164fc:	ldrd	sl, [sp, #24]
   16500:	add	sp, sp, #32
   16504:	pop	{pc}		; (ldr pc, [sp], #4)
   16508:	andeq	sp, r2, r8, asr r3
   1650c:	str	r4, [sp, #-8]!
   16510:	str	lr, [sp, #4]
   16514:	mov	r3, r2
   16518:	mov	r2, #0
   1651c:	bl	16410 <tcgetattr@plt+0x52ac>
   16520:	ldr	r4, [sp]
   16524:	add	sp, sp, #4
   16528:	pop	{pc}		; (ldr pc, [sp], #4)
   1652c:	strd	r4, [sp, #-24]!	; 0xffffffe8
   16530:	strd	r6, [sp, #8]
   16534:	str	r8, [sp, #16]
   16538:	str	lr, [sp, #20]
   1653c:	movw	r3, #53528	; 0xd118
   16540:	movt	r3, #2
   16544:	ldr	r7, [r3]
   16548:	ldr	r3, [r3, #4]
   1654c:	cmp	r3, #1
   16550:	ble	1657c <tcgetattr@plt+0x5418>
   16554:	mov	r4, #1
   16558:	add	r6, r7, #4
   1655c:	movw	r5, #53528	; 0xd118
   16560:	movt	r5, #2
   16564:	ldr	r0, [r6, r4, lsl #3]
   16568:	bl	146a4 <tcgetattr@plt+0x3540>
   1656c:	add	r4, r4, #1
   16570:	ldr	r3, [r5, #4]
   16574:	cmp	r3, r4
   16578:	bgt	16564 <tcgetattr@plt+0x5400>
   1657c:	ldr	r0, [r7, #4]
   16580:	movw	r3, #53848	; 0xd258
   16584:	movt	r3, #2
   16588:	cmp	r0, r3
   1658c:	beq	165b0 <tcgetattr@plt+0x544c>
   16590:	bl	146a4 <tcgetattr@plt+0x3540>
   16594:	movw	r3, #53528	; 0xd118
   16598:	movt	r3, #2
   1659c:	mov	r2, #256	; 0x100
   165a0:	str	r2, [r3, #8]
   165a4:	movw	r2, #53848	; 0xd258
   165a8:	movt	r2, #2
   165ac:	str	r2, [r3, #12]
   165b0:	ldr	r3, [pc, #64]	; 165f8 <tcgetattr@plt+0x5494>
   165b4:	cmp	r7, r3
   165b8:	beq	165d4 <tcgetattr@plt+0x5470>
   165bc:	mov	r0, r7
   165c0:	bl	146a4 <tcgetattr@plt+0x3540>
   165c4:	movw	r3, #53528	; 0xd118
   165c8:	movt	r3, #2
   165cc:	add	r2, r3, #8
   165d0:	str	r2, [r3]
   165d4:	movw	r3, #53528	; 0xd118
   165d8:	movt	r3, #2
   165dc:	mov	r2, #1
   165e0:	str	r2, [r3, #4]
   165e4:	ldrd	r4, [sp]
   165e8:	ldrd	r6, [sp, #8]
   165ec:	ldr	r8, [sp, #16]
   165f0:	add	sp, sp, #20
   165f4:	pop	{pc}		; (ldr pc, [sp], #4)
   165f8:	andeq	sp, r2, r0, lsr #2
   165fc:	str	r4, [sp, #-8]!
   16600:	str	lr, [sp, #4]
   16604:	ldr	r3, [pc, #16]	; 1661c <tcgetattr@plt+0x54b8>
   16608:	mvn	r2, #0
   1660c:	bl	16060 <tcgetattr@plt+0x4efc>
   16610:	ldr	r4, [sp]
   16614:	add	sp, sp, #4
   16618:	pop	{pc}		; (ldr pc, [sp], #4)
   1661c:	andeq	sp, r2, r8, asr r3
   16620:	str	r4, [sp, #-8]!
   16624:	str	lr, [sp, #4]
   16628:	ldr	r3, [pc, #12]	; 1663c <tcgetattr@plt+0x54d8>
   1662c:	bl	16060 <tcgetattr@plt+0x4efc>
   16630:	ldr	r4, [sp]
   16634:	add	sp, sp, #4
   16638:	pop	{pc}		; (ldr pc, [sp], #4)
   1663c:	andeq	sp, r2, r8, asr r3
   16640:	str	r4, [sp, #-8]!
   16644:	str	lr, [sp, #4]
   16648:	mov	r1, r0
   1664c:	mov	r0, #0
   16650:	bl	165fc <tcgetattr@plt+0x5498>
   16654:	ldr	r4, [sp]
   16658:	add	sp, sp, #4
   1665c:	pop	{pc}		; (ldr pc, [sp], #4)
   16660:	str	r4, [sp, #-8]!
   16664:	str	lr, [sp, #4]
   16668:	mov	r2, r1
   1666c:	mov	r1, r0
   16670:	mov	r0, #0
   16674:	bl	16620 <tcgetattr@plt+0x54bc>
   16678:	ldr	r4, [sp]
   1667c:	add	sp, sp, #4
   16680:	pop	{pc}		; (ldr pc, [sp], #4)
   16684:	strd	r4, [sp, #-12]!
   16688:	str	lr, [sp, #8]
   1668c:	sub	sp, sp, #52	; 0x34
   16690:	mov	r4, r0
   16694:	mov	r5, r2
   16698:	mov	r0, sp
   1669c:	bl	147d4 <tcgetattr@plt+0x3670>
   166a0:	mov	r3, sp
   166a4:	mvn	r2, #0
   166a8:	mov	r1, r5
   166ac:	mov	r0, r4
   166b0:	bl	16060 <tcgetattr@plt+0x4efc>
   166b4:	add	sp, sp, #52	; 0x34
   166b8:	ldrd	r4, [sp]
   166bc:	add	sp, sp, #8
   166c0:	pop	{pc}		; (ldr pc, [sp], #4)
   166c4:	strd	r4, [sp, #-16]!
   166c8:	str	r6, [sp, #8]
   166cc:	str	lr, [sp, #12]
   166d0:	sub	sp, sp, #48	; 0x30
   166d4:	mov	r4, r0
   166d8:	mov	r5, r2
   166dc:	mov	r6, r3
   166e0:	mov	r0, sp
   166e4:	bl	147d4 <tcgetattr@plt+0x3670>
   166e8:	mov	r3, sp
   166ec:	mov	r2, r6
   166f0:	mov	r1, r5
   166f4:	mov	r0, r4
   166f8:	bl	16060 <tcgetattr@plt+0x4efc>
   166fc:	add	sp, sp, #48	; 0x30
   16700:	ldrd	r4, [sp]
   16704:	ldr	r6, [sp, #8]
   16708:	add	sp, sp, #12
   1670c:	pop	{pc}		; (ldr pc, [sp], #4)
   16710:	str	r4, [sp, #-8]!
   16714:	str	lr, [sp, #4]
   16718:	mov	r2, r1
   1671c:	mov	r1, r0
   16720:	mov	r0, #0
   16724:	bl	16684 <tcgetattr@plt+0x5520>
   16728:	ldr	r4, [sp]
   1672c:	add	sp, sp, #4
   16730:	pop	{pc}		; (ldr pc, [sp], #4)
   16734:	str	r4, [sp, #-8]!
   16738:	str	lr, [sp, #4]
   1673c:	mov	r3, r2
   16740:	mov	r2, r1
   16744:	mov	r1, r0
   16748:	mov	r0, #0
   1674c:	bl	166c4 <tcgetattr@plt+0x5560>
   16750:	ldr	r4, [sp]
   16754:	add	sp, sp, #4
   16758:	pop	{pc}		; (ldr pc, [sp], #4)
   1675c:	strd	r4, [sp, #-12]!
   16760:	str	lr, [sp, #8]
   16764:	sub	sp, sp, #52	; 0x34
   16768:	mov	r4, r0
   1676c:	mov	r5, r1
   16770:	mov	r1, r2
   16774:	ldr	r0, [pc, #92]	; 167d8 <tcgetattr@plt+0x5674>
   16778:	ldrd	r2, [r0]
   1677c:	strd	r2, [sp]
   16780:	ldrd	r2, [r0, #8]
   16784:	strd	r2, [sp, #8]
   16788:	ldrd	r2, [r0, #16]
   1678c:	strd	r2, [sp, #16]
   16790:	ldrd	r2, [r0, #24]
   16794:	strd	r2, [sp, #24]
   16798:	ldrd	r2, [r0, #32]
   1679c:	strd	r2, [sp, #32]
   167a0:	ldrd	r2, [r0, #40]	; 0x28
   167a4:	strd	r2, [sp, #40]	; 0x28
   167a8:	mov	r2, #1
   167ac:	mov	r0, sp
   167b0:	bl	162d4 <tcgetattr@plt+0x5170>
   167b4:	mov	r3, sp
   167b8:	mov	r2, r5
   167bc:	mov	r1, r4
   167c0:	mov	r0, #0
   167c4:	bl	16060 <tcgetattr@plt+0x4efc>
   167c8:	add	sp, sp, #52	; 0x34
   167cc:	ldrd	r4, [sp]
   167d0:	add	sp, sp, #8
   167d4:	pop	{pc}		; (ldr pc, [sp], #4)
   167d8:	andeq	sp, r2, r8, asr r3
   167dc:	str	r4, [sp, #-8]!
   167e0:	str	lr, [sp, #4]
   167e4:	mov	r2, r1
   167e8:	mvn	r1, #0
   167ec:	bl	1675c <tcgetattr@plt+0x55f8>
   167f0:	ldr	r4, [sp]
   167f4:	add	sp, sp, #4
   167f8:	pop	{pc}		; (ldr pc, [sp], #4)
   167fc:	str	r4, [sp, #-8]!
   16800:	str	lr, [sp, #4]
   16804:	mov	r1, #58	; 0x3a
   16808:	bl	167dc <tcgetattr@plt+0x5678>
   1680c:	ldr	r4, [sp]
   16810:	add	sp, sp, #4
   16814:	pop	{pc}		; (ldr pc, [sp], #4)
   16818:	str	r4, [sp, #-8]!
   1681c:	str	lr, [sp, #4]
   16820:	mov	r2, #58	; 0x3a
   16824:	bl	1675c <tcgetattr@plt+0x55f8>
   16828:	ldr	r4, [sp]
   1682c:	add	sp, sp, #4
   16830:	pop	{pc}		; (ldr pc, [sp], #4)
   16834:	strd	r4, [sp, #-12]!
   16838:	str	lr, [sp, #8]
   1683c:	sub	sp, sp, #100	; 0x64
   16840:	mov	r4, r0
   16844:	mov	r5, r2
   16848:	mov	r0, sp
   1684c:	bl	147d4 <tcgetattr@plt+0x3670>
   16850:	ldrd	r2, [sp]
   16854:	strd	r2, [sp, #48]	; 0x30
   16858:	ldrd	r2, [sp, #8]
   1685c:	strd	r2, [sp, #56]	; 0x38
   16860:	ldrd	r2, [sp, #16]
   16864:	strd	r2, [sp, #64]	; 0x40
   16868:	ldrd	r2, [sp, #24]
   1686c:	strd	r2, [sp, #72]	; 0x48
   16870:	ldrd	r2, [sp, #32]
   16874:	strd	r2, [sp, #80]	; 0x50
   16878:	ldrd	r2, [sp, #40]	; 0x28
   1687c:	strd	r2, [sp, #88]	; 0x58
   16880:	mov	r2, #1
   16884:	mov	r1, #58	; 0x3a
   16888:	add	r0, sp, #48	; 0x30
   1688c:	bl	162d4 <tcgetattr@plt+0x5170>
   16890:	add	r3, sp, #48	; 0x30
   16894:	mvn	r2, #0
   16898:	mov	r1, r5
   1689c:	mov	r0, r4
   168a0:	bl	16060 <tcgetattr@plt+0x4efc>
   168a4:	add	sp, sp, #100	; 0x64
   168a8:	ldrd	r4, [sp]
   168ac:	add	sp, sp, #8
   168b0:	pop	{pc}		; (ldr pc, [sp], #4)
   168b4:	strd	r4, [sp, #-20]!	; 0xffffffec
   168b8:	strd	r6, [sp, #8]
   168bc:	str	lr, [sp, #16]
   168c0:	sub	sp, sp, #52	; 0x34
   168c4:	mov	r4, r0
   168c8:	mov	r5, r3
   168cc:	ldr	r3, [pc, #92]	; 16930 <tcgetattr@plt+0x57cc>
   168d0:	ldrd	r6, [r3]
   168d4:	strd	r6, [sp]
   168d8:	ldrd	r6, [r3, #8]
   168dc:	strd	r6, [sp, #8]
   168e0:	ldrd	r6, [r3, #16]
   168e4:	strd	r6, [sp, #16]
   168e8:	ldrd	r6, [r3, #24]
   168ec:	strd	r6, [sp, #24]
   168f0:	ldrd	r6, [r3, #32]
   168f4:	strd	r6, [sp, #32]
   168f8:	ldrd	r6, [r3, #40]	; 0x28
   168fc:	strd	r6, [sp, #40]	; 0x28
   16900:	mov	r0, sp
   16904:	bl	16330 <tcgetattr@plt+0x51cc>
   16908:	mov	r3, sp
   1690c:	ldr	r2, [sp, #72]	; 0x48
   16910:	mov	r1, r5
   16914:	mov	r0, r4
   16918:	bl	16060 <tcgetattr@plt+0x4efc>
   1691c:	add	sp, sp, #52	; 0x34
   16920:	ldrd	r4, [sp]
   16924:	ldrd	r6, [sp, #8]
   16928:	add	sp, sp, #16
   1692c:	pop	{pc}		; (ldr pc, [sp], #4)
   16930:	andeq	sp, r2, r8, asr r3
   16934:	push	{lr}		; (str lr, [sp, #-4]!)
   16938:	sub	sp, sp, #12
   1693c:	mvn	ip, #0
   16940:	str	ip, [sp]
   16944:	bl	168b4 <tcgetattr@plt+0x5750>
   16948:	add	sp, sp, #12
   1694c:	pop	{pc}		; (ldr pc, [sp], #4)
   16950:	str	r4, [sp, #-8]!
   16954:	str	lr, [sp, #4]
   16958:	mov	r3, r2
   1695c:	mov	r2, r1
   16960:	mov	r1, r0
   16964:	mov	r0, #0
   16968:	bl	16934 <tcgetattr@plt+0x57d0>
   1696c:	ldr	r4, [sp]
   16970:	add	sp, sp, #4
   16974:	pop	{pc}		; (ldr pc, [sp], #4)
   16978:	push	{lr}		; (str lr, [sp, #-4]!)
   1697c:	sub	sp, sp, #12
   16980:	str	r3, [sp]
   16984:	mov	r3, r2
   16988:	mov	r2, r1
   1698c:	mov	r1, r0
   16990:	mov	r0, #0
   16994:	bl	168b4 <tcgetattr@plt+0x5750>
   16998:	add	sp, sp, #12
   1699c:	pop	{pc}		; (ldr pc, [sp], #4)
   169a0:	str	r4, [sp, #-8]!
   169a4:	str	lr, [sp, #4]
   169a8:	ldr	r3, [pc, #12]	; 169bc <tcgetattr@plt+0x5858>
   169ac:	bl	16060 <tcgetattr@plt+0x4efc>
   169b0:	ldr	r4, [sp]
   169b4:	add	sp, sp, #4
   169b8:	pop	{pc}		; (ldr pc, [sp], #4)
   169bc:	andeq	sp, r2, r8, lsr #2
   169c0:	str	r4, [sp, #-8]!
   169c4:	str	lr, [sp, #4]
   169c8:	mov	r2, r1
   169cc:	mov	r1, r0
   169d0:	mov	r0, #0
   169d4:	bl	169a0 <tcgetattr@plt+0x583c>
   169d8:	ldr	r4, [sp]
   169dc:	add	sp, sp, #4
   169e0:	pop	{pc}		; (ldr pc, [sp], #4)
   169e4:	str	r4, [sp, #-8]!
   169e8:	str	lr, [sp, #4]
   169ec:	mvn	r2, #0
   169f0:	bl	169a0 <tcgetattr@plt+0x583c>
   169f4:	ldr	r4, [sp]
   169f8:	add	sp, sp, #4
   169fc:	pop	{pc}		; (ldr pc, [sp], #4)
   16a00:	str	r4, [sp, #-8]!
   16a04:	str	lr, [sp, #4]
   16a08:	mov	r1, r0
   16a0c:	mov	r0, #0
   16a10:	bl	169e4 <tcgetattr@plt+0x5880>
   16a14:	ldr	r4, [sp]
   16a18:	add	sp, sp, #4
   16a1c:	pop	{pc}		; (ldr pc, [sp], #4)
   16a20:	strd	r4, [sp, #-16]!
   16a24:	str	r6, [sp, #8]
   16a28:	str	lr, [sp, #12]
   16a2c:	sub	sp, sp, #32
   16a30:	mov	r4, r0
   16a34:	ldr	r5, [sp, #48]	; 0x30
   16a38:	ldr	r6, [sp, #52]	; 0x34
   16a3c:	cmp	r1, #0
   16a40:	beq	16b0c <tcgetattr@plt+0x59a8>
   16a44:	str	r3, [sp, #4]
   16a48:	str	r2, [sp]
   16a4c:	mov	r3, r1
   16a50:	movw	r2, #48076	; 0xbbcc
   16a54:	movt	r2, #1
   16a58:	mov	r1, #1
   16a5c:	bl	110c8 <__fprintf_chk@plt>
   16a60:	mov	r2, #5
   16a64:	movw	r1, #48096	; 0xbbe0
   16a68:	movt	r1, #1
   16a6c:	mov	r0, #0
   16a70:	bl	10f24 <dcgettext@plt>
   16a74:	movw	r3, #2022	; 0x7e6
   16a78:	str	r3, [sp]
   16a7c:	mov	r3, r0
   16a80:	movw	r2, #48824	; 0xbeb8
   16a84:	movt	r2, #1
   16a88:	mov	r1, #1
   16a8c:	mov	r0, r4
   16a90:	bl	110c8 <__fprintf_chk@plt>
   16a94:	mov	r1, r4
   16a98:	mov	r0, #10
   16a9c:	bl	10f18 <fputc_unlocked@plt>
   16aa0:	mov	r2, #5
   16aa4:	movw	r1, #48100	; 0xbbe4
   16aa8:	movt	r1, #1
   16aac:	mov	r0, #0
   16ab0:	bl	10f24 <dcgettext@plt>
   16ab4:	movw	r3, #48272	; 0xbc90
   16ab8:	movt	r3, #1
   16abc:	mov	r2, r0
   16ac0:	mov	r1, #1
   16ac4:	mov	r0, r4
   16ac8:	bl	110c8 <__fprintf_chk@plt>
   16acc:	mov	r1, r4
   16ad0:	mov	r0, #10
   16ad4:	bl	10f18 <fputc_unlocked@plt>
   16ad8:	cmp	r6, #9
   16adc:	ldrls	pc, [pc, r6, lsl #2]
   16ae0:	b	16de4 <tcgetattr@plt+0x5c80>
   16ae4:	andeq	r6, r1, r0, asr fp
   16ae8:	andeq	r6, r1, r8, lsr #22
   16aec:	andeq	r6, r1, r4, ror #22
   16af0:	muleq	r1, r8, fp
   16af4:	ldrdeq	r6, [r1], -r4
   16af8:	andeq	r6, r1, r8, lsl ip
   16afc:	andeq	r6, r1, r4, ror #24
   16b00:			; <UNDEFINED> instruction: 0x00016cb8
   16b04:	andeq	r6, r1, r4, lsl sp
   16b08:	andeq	r6, r1, r8, ror sp
   16b0c:	str	r3, [sp]
   16b10:	mov	r3, r2
   16b14:	movw	r2, #48088	; 0xbbd8
   16b18:	movt	r2, #1
   16b1c:	mov	r1, #1
   16b20:	bl	110c8 <__fprintf_chk@plt>
   16b24:	b	16a60 <tcgetattr@plt+0x58fc>
   16b28:	mov	r2, #5
   16b2c:	movw	r1, #48308	; 0xbcb4
   16b30:	movt	r1, #1
   16b34:	mov	r0, #0
   16b38:	bl	10f24 <dcgettext@plt>
   16b3c:	ldr	r3, [r5]
   16b40:	mov	r2, r0
   16b44:	mov	r1, #1
   16b48:	mov	r0, r4
   16b4c:	bl	110c8 <__fprintf_chk@plt>
   16b50:	add	sp, sp, #32
   16b54:	ldrd	r4, [sp]
   16b58:	ldr	r6, [sp, #8]
   16b5c:	add	sp, sp, #12
   16b60:	pop	{pc}		; (ldr pc, [sp], #4)
   16b64:	mov	r2, #5
   16b68:	movw	r1, #48324	; 0xbcc4
   16b6c:	movt	r1, #1
   16b70:	mov	r0, #0
   16b74:	bl	10f24 <dcgettext@plt>
   16b78:	ldr	r3, [r5, #4]
   16b7c:	str	r3, [sp]
   16b80:	ldr	r3, [r5]
   16b84:	mov	r2, r0
   16b88:	mov	r1, #1
   16b8c:	mov	r0, r4
   16b90:	bl	110c8 <__fprintf_chk@plt>
   16b94:	b	16b50 <tcgetattr@plt+0x59ec>
   16b98:	mov	r2, #5
   16b9c:	movw	r1, #48348	; 0xbcdc
   16ba0:	movt	r1, #1
   16ba4:	mov	r0, #0
   16ba8:	bl	10f24 <dcgettext@plt>
   16bac:	ldr	r3, [r5, #8]
   16bb0:	str	r3, [sp, #4]
   16bb4:	ldr	r3, [r5, #4]
   16bb8:	str	r3, [sp]
   16bbc:	ldr	r3, [r5]
   16bc0:	mov	r2, r0
   16bc4:	mov	r1, #1
   16bc8:	mov	r0, r4
   16bcc:	bl	110c8 <__fprintf_chk@plt>
   16bd0:	b	16b50 <tcgetattr@plt+0x59ec>
   16bd4:	mov	r2, #5
   16bd8:	movw	r1, #48376	; 0xbcf8
   16bdc:	movt	r1, #1
   16be0:	mov	r0, #0
   16be4:	bl	10f24 <dcgettext@plt>
   16be8:	ldr	r3, [r5, #12]
   16bec:	str	r3, [sp, #8]
   16bf0:	ldr	r3, [r5, #8]
   16bf4:	str	r3, [sp, #4]
   16bf8:	ldr	r3, [r5, #4]
   16bfc:	str	r3, [sp]
   16c00:	ldr	r3, [r5]
   16c04:	mov	r2, r0
   16c08:	mov	r1, #1
   16c0c:	mov	r0, r4
   16c10:	bl	110c8 <__fprintf_chk@plt>
   16c14:	b	16b50 <tcgetattr@plt+0x59ec>
   16c18:	mov	r2, #5
   16c1c:	movw	r1, #48408	; 0xbd18
   16c20:	movt	r1, #1
   16c24:	mov	r0, #0
   16c28:	bl	10f24 <dcgettext@plt>
   16c2c:	ldr	r3, [r5, #16]
   16c30:	str	r3, [sp, #12]
   16c34:	ldr	r3, [r5, #12]
   16c38:	str	r3, [sp, #8]
   16c3c:	ldr	r3, [r5, #8]
   16c40:	str	r3, [sp, #4]
   16c44:	ldr	r3, [r5, #4]
   16c48:	str	r3, [sp]
   16c4c:	ldr	r3, [r5]
   16c50:	mov	r2, r0
   16c54:	mov	r1, #1
   16c58:	mov	r0, r4
   16c5c:	bl	110c8 <__fprintf_chk@plt>
   16c60:	b	16b50 <tcgetattr@plt+0x59ec>
   16c64:	mov	r2, #5
   16c68:	movw	r1, #48444	; 0xbd3c
   16c6c:	movt	r1, #1
   16c70:	mov	r0, #0
   16c74:	bl	10f24 <dcgettext@plt>
   16c78:	ldr	r3, [r5, #20]
   16c7c:	str	r3, [sp, #16]
   16c80:	ldr	r3, [r5, #16]
   16c84:	str	r3, [sp, #12]
   16c88:	ldr	r3, [r5, #12]
   16c8c:	str	r3, [sp, #8]
   16c90:	ldr	r3, [r5, #8]
   16c94:	str	r3, [sp, #4]
   16c98:	ldr	r3, [r5, #4]
   16c9c:	str	r3, [sp]
   16ca0:	ldr	r3, [r5]
   16ca4:	mov	r2, r0
   16ca8:	mov	r1, #1
   16cac:	mov	r0, r4
   16cb0:	bl	110c8 <__fprintf_chk@plt>
   16cb4:	b	16b50 <tcgetattr@plt+0x59ec>
   16cb8:	mov	r2, #5
   16cbc:	movw	r1, #48484	; 0xbd64
   16cc0:	movt	r1, #1
   16cc4:	mov	r0, #0
   16cc8:	bl	10f24 <dcgettext@plt>
   16ccc:	ldr	r3, [r5, #24]
   16cd0:	str	r3, [sp, #20]
   16cd4:	ldr	r3, [r5, #20]
   16cd8:	str	r3, [sp, #16]
   16cdc:	ldr	r3, [r5, #16]
   16ce0:	str	r3, [sp, #12]
   16ce4:	ldr	r3, [r5, #12]
   16ce8:	str	r3, [sp, #8]
   16cec:	ldr	r3, [r5, #8]
   16cf0:	str	r3, [sp, #4]
   16cf4:	ldr	r3, [r5, #4]
   16cf8:	str	r3, [sp]
   16cfc:	ldr	r3, [r5]
   16d00:	mov	r2, r0
   16d04:	mov	r1, #1
   16d08:	mov	r0, r4
   16d0c:	bl	110c8 <__fprintf_chk@plt>
   16d10:	b	16b50 <tcgetattr@plt+0x59ec>
   16d14:	mov	r2, #5
   16d18:	movw	r1, #48528	; 0xbd90
   16d1c:	movt	r1, #1
   16d20:	mov	r0, #0
   16d24:	bl	10f24 <dcgettext@plt>
   16d28:	ldr	r3, [r5, #28]
   16d2c:	str	r3, [sp, #24]
   16d30:	ldr	r3, [r5, #24]
   16d34:	str	r3, [sp, #20]
   16d38:	ldr	r3, [r5, #20]
   16d3c:	str	r3, [sp, #16]
   16d40:	ldr	r3, [r5, #16]
   16d44:	str	r3, [sp, #12]
   16d48:	ldr	r3, [r5, #12]
   16d4c:	str	r3, [sp, #8]
   16d50:	ldr	r3, [r5, #8]
   16d54:	str	r3, [sp, #4]
   16d58:	ldr	r3, [r5, #4]
   16d5c:	str	r3, [sp]
   16d60:	ldr	r3, [r5]
   16d64:	mov	r2, r0
   16d68:	mov	r1, #1
   16d6c:	mov	r0, r4
   16d70:	bl	110c8 <__fprintf_chk@plt>
   16d74:	b	16b50 <tcgetattr@plt+0x59ec>
   16d78:	mov	r2, #5
   16d7c:	movw	r1, #48576	; 0xbdc0
   16d80:	movt	r1, #1
   16d84:	mov	r0, #0
   16d88:	bl	10f24 <dcgettext@plt>
   16d8c:	ldr	r3, [r5, #32]
   16d90:	str	r3, [sp, #28]
   16d94:	ldr	r3, [r5, #28]
   16d98:	str	r3, [sp, #24]
   16d9c:	ldr	r3, [r5, #24]
   16da0:	str	r3, [sp, #20]
   16da4:	ldr	r3, [r5, #20]
   16da8:	str	r3, [sp, #16]
   16dac:	ldr	r3, [r5, #16]
   16db0:	str	r3, [sp, #12]
   16db4:	ldr	r3, [r5, #12]
   16db8:	str	r3, [sp, #8]
   16dbc:	ldr	r3, [r5, #8]
   16dc0:	str	r3, [sp, #4]
   16dc4:	ldr	r3, [r5, #4]
   16dc8:	str	r3, [sp]
   16dcc:	ldr	r3, [r5]
   16dd0:	mov	r2, r0
   16dd4:	mov	r1, #1
   16dd8:	mov	r0, r4
   16ddc:	bl	110c8 <__fprintf_chk@plt>
   16de0:	b	16b50 <tcgetattr@plt+0x59ec>
   16de4:	mov	r2, #5
   16de8:	movw	r1, #48628	; 0xbdf4
   16dec:	movt	r1, #1
   16df0:	mov	r0, #0
   16df4:	bl	10f24 <dcgettext@plt>
   16df8:	ldr	r3, [r5, #32]
   16dfc:	str	r3, [sp, #28]
   16e00:	ldr	r3, [r5, #28]
   16e04:	str	r3, [sp, #24]
   16e08:	ldr	r3, [r5, #24]
   16e0c:	str	r3, [sp, #20]
   16e10:	ldr	r3, [r5, #20]
   16e14:	str	r3, [sp, #16]
   16e18:	ldr	r3, [r5, #16]
   16e1c:	str	r3, [sp, #12]
   16e20:	ldr	r3, [r5, #12]
   16e24:	str	r3, [sp, #8]
   16e28:	ldr	r3, [r5, #8]
   16e2c:	str	r3, [sp, #4]
   16e30:	ldr	r3, [r5, #4]
   16e34:	str	r3, [sp]
   16e38:	ldr	r3, [r5]
   16e3c:	mov	r2, r0
   16e40:	mov	r1, #1
   16e44:	mov	r0, r4
   16e48:	bl	110c8 <__fprintf_chk@plt>
   16e4c:	b	16b50 <tcgetattr@plt+0x59ec>
   16e50:	strd	r4, [sp, #-12]!
   16e54:	str	lr, [sp, #8]
   16e58:	sub	sp, sp, #12
   16e5c:	ldr	r5, [sp, #24]
   16e60:	ldr	ip, [r5]
   16e64:	cmp	ip, #0
   16e68:	beq	16ea0 <tcgetattr@plt+0x5d3c>
   16e6c:	mov	lr, r5
   16e70:	mov	ip, #0
   16e74:	add	ip, ip, #1
   16e78:	ldr	r4, [lr, #4]!
   16e7c:	cmp	r4, #0
   16e80:	bne	16e74 <tcgetattr@plt+0x5d10>
   16e84:	str	ip, [sp, #4]
   16e88:	str	r5, [sp]
   16e8c:	bl	16a20 <tcgetattr@plt+0x58bc>
   16e90:	add	sp, sp, #12
   16e94:	ldrd	r4, [sp]
   16e98:	add	sp, sp, #8
   16e9c:	pop	{pc}		; (ldr pc, [sp], #4)
   16ea0:	mov	ip, #0
   16ea4:	b	16e84 <tcgetattr@plt+0x5d20>
   16ea8:	strd	r4, [sp, #-12]!
   16eac:	str	lr, [sp, #8]
   16eb0:	sub	sp, sp, #52	; 0x34
   16eb4:	ldr	r5, [sp, #64]	; 0x40
   16eb8:	add	r4, sp, #8
   16ebc:	mov	ip, #0
   16ec0:	ldr	lr, [r5], #4
   16ec4:	str	lr, [r4], #4
   16ec8:	cmp	lr, #0
   16ecc:	beq	16edc <tcgetattr@plt+0x5d78>
   16ed0:	add	ip, ip, #1
   16ed4:	cmp	ip, #10
   16ed8:	bne	16ec0 <tcgetattr@plt+0x5d5c>
   16edc:	str	ip, [sp, #4]
   16ee0:	add	ip, sp, #8
   16ee4:	str	ip, [sp]
   16ee8:	bl	16a20 <tcgetattr@plt+0x58bc>
   16eec:	add	sp, sp, #52	; 0x34
   16ef0:	ldrd	r4, [sp]
   16ef4:	add	sp, sp, #8
   16ef8:	pop	{pc}		; (ldr pc, [sp], #4)
   16efc:	push	{r3}		; (str r3, [sp, #-4]!)
   16f00:	push	{lr}		; (str lr, [sp, #-4]!)
   16f04:	sub	sp, sp, #16
   16f08:	add	r3, sp, #24
   16f0c:	str	r3, [sp, #12]
   16f10:	str	r3, [sp]
   16f14:	ldr	r3, [sp, #20]
   16f18:	bl	16ea8 <tcgetattr@plt+0x5d44>
   16f1c:	add	sp, sp, #16
   16f20:	pop	{lr}		; (ldr lr, [sp], #4)
   16f24:	add	sp, sp, #4
   16f28:	bx	lr
   16f2c:	str	r4, [sp, #-8]!
   16f30:	str	lr, [sp, #4]
   16f34:	movw	r3, #53612	; 0xd16c
   16f38:	movt	r3, #2
   16f3c:	ldr	r1, [r3]
   16f40:	mov	r0, #10
   16f44:	bl	10f18 <fputc_unlocked@plt>
   16f48:	mov	r2, #5
   16f4c:	movw	r1, #48688	; 0xbe30
   16f50:	movt	r1, #1
   16f54:	mov	r0, #0
   16f58:	bl	10f24 <dcgettext@plt>
   16f5c:	movw	r2, #48708	; 0xbe44
   16f60:	movt	r2, #1
   16f64:	mov	r1, r0
   16f68:	mov	r0, #1
   16f6c:	bl	110b0 <__printf_chk@plt>
   16f70:	mov	r2, #5
   16f74:	movw	r1, #48732	; 0xbe5c
   16f78:	movt	r1, #1
   16f7c:	mov	r0, #0
   16f80:	bl	10f24 <dcgettext@plt>
   16f84:	movw	r3, #45812	; 0xb2f4
   16f88:	movt	r3, #1
   16f8c:	movw	r2, #45852	; 0xb31c
   16f90:	movt	r2, #1
   16f94:	mov	r1, r0
   16f98:	mov	r0, #1
   16f9c:	bl	110b0 <__printf_chk@plt>
   16fa0:	mov	r2, #5
   16fa4:	movw	r1, #48752	; 0xbe70
   16fa8:	movt	r1, #1
   16fac:	mov	r0, #0
   16fb0:	bl	10f24 <dcgettext@plt>
   16fb4:	movw	r2, #48792	; 0xbe98
   16fb8:	movt	r2, #1
   16fbc:	mov	r1, r0
   16fc0:	mov	r0, #1
   16fc4:	bl	110b0 <__printf_chk@plt>
   16fc8:	ldr	r4, [sp]
   16fcc:	add	sp, sp, #4
   16fd0:	pop	{pc}		; (ldr pc, [sp], #4)
   16fd4:	str	r4, [sp, #-8]!
   16fd8:	str	lr, [sp, #4]
   16fdc:	bl	18284 <tcgetattr@plt+0x7120>
   16fe0:	cmp	r0, #0
   16fe4:	beq	16ff4 <tcgetattr@plt+0x5e90>
   16fe8:	ldr	r4, [sp]
   16fec:	add	sp, sp, #4
   16ff0:	pop	{pc}		; (ldr pc, [sp], #4)
   16ff4:	bl	17468 <tcgetattr@plt+0x6304>
   16ff8:	str	r4, [sp, #-8]!
   16ffc:	str	lr, [sp, #4]
   17000:	bl	18284 <tcgetattr@plt+0x7120>
   17004:	cmp	r0, #0
   17008:	beq	17018 <tcgetattr@plt+0x5eb4>
   1700c:	ldr	r4, [sp]
   17010:	add	sp, sp, #4
   17014:	pop	{pc}		; (ldr pc, [sp], #4)
   17018:	bl	17468 <tcgetattr@plt+0x6304>
   1701c:	str	r4, [sp, #-8]!
   17020:	str	lr, [sp, #4]
   17024:	bl	16fd4 <tcgetattr@plt+0x5e70>
   17028:	ldr	r4, [sp]
   1702c:	add	sp, sp, #4
   17030:	pop	{pc}		; (ldr pc, [sp], #4)
   17034:	strd	r4, [sp, #-16]!
   17038:	str	r6, [sp, #8]
   1703c:	str	lr, [sp, #12]
   17040:	mov	r5, r0
   17044:	mov	r4, r1
   17048:	bl	182c0 <tcgetattr@plt+0x715c>
   1704c:	cmp	r0, #0
   17050:	beq	17064 <tcgetattr@plt+0x5f00>
   17054:	ldrd	r4, [sp]
   17058:	ldr	r6, [sp, #8]
   1705c:	add	sp, sp, #12
   17060:	pop	{pc}		; (ldr pc, [sp], #4)
   17064:	adds	r4, r4, #0
   17068:	movne	r4, #1
   1706c:	cmp	r5, #0
   17070:	moveq	r4, #1
   17074:	cmp	r4, #0
   17078:	beq	17054 <tcgetattr@plt+0x5ef0>
   1707c:	bl	17468 <tcgetattr@plt+0x6304>
   17080:	str	r4, [sp, #-8]!
   17084:	str	lr, [sp, #4]
   17088:	cmp	r1, #0
   1708c:	orreq	r1, r1, #1
   17090:	bl	182c0 <tcgetattr@plt+0x715c>
   17094:	cmp	r0, #0
   17098:	beq	170a8 <tcgetattr@plt+0x5f44>
   1709c:	ldr	r4, [sp]
   170a0:	add	sp, sp, #4
   170a4:	pop	{pc}		; (ldr pc, [sp], #4)
   170a8:	bl	17468 <tcgetattr@plt+0x6304>
   170ac:	strd	r4, [sp, #-16]!
   170b0:	str	r6, [sp, #8]
   170b4:	str	lr, [sp, #12]
   170b8:	mov	r4, r0
   170bc:	mov	r6, r1
   170c0:	mov	r5, r2
   170c4:	bl	18648 <tcgetattr@plt+0x74e4>
   170c8:	cmp	r0, #0
   170cc:	beq	170e0 <tcgetattr@plt+0x5f7c>
   170d0:	ldrd	r4, [sp]
   170d4:	ldr	r6, [sp, #8]
   170d8:	add	sp, sp, #12
   170dc:	pop	{pc}		; (ldr pc, [sp], #4)
   170e0:	cmp	r4, #0
   170e4:	beq	170f4 <tcgetattr@plt+0x5f90>
   170e8:	cmp	r6, #0
   170ec:	cmpne	r5, #0
   170f0:	beq	170d0 <tcgetattr@plt+0x5f6c>
   170f4:	bl	17468 <tcgetattr@plt+0x6304>
   170f8:	str	r4, [sp, #-8]!
   170fc:	str	lr, [sp, #4]
   17100:	bl	170ac <tcgetattr@plt+0x5f48>
   17104:	ldr	r4, [sp]
   17108:	add	sp, sp, #4
   1710c:	pop	{pc}		; (ldr pc, [sp], #4)
   17110:	str	r4, [sp, #-8]!
   17114:	str	lr, [sp, #4]
   17118:	mov	ip, r1
   1711c:	mov	r3, r2
   17120:	cmp	r2, #0
   17124:	cmpne	r1, #0
   17128:	moveq	r3, #1
   1712c:	moveq	ip, r3
   17130:	mov	r2, r3
   17134:	mov	r1, ip
   17138:	bl	18648 <tcgetattr@plt+0x74e4>
   1713c:	cmp	r0, #0
   17140:	beq	17150 <tcgetattr@plt+0x5fec>
   17144:	ldr	r4, [sp]
   17148:	add	sp, sp, #4
   1714c:	pop	{pc}		; (ldr pc, [sp], #4)
   17150:	bl	17468 <tcgetattr@plt+0x6304>
   17154:	str	r4, [sp, #-8]!
   17158:	str	lr, [sp, #4]
   1715c:	mov	r2, r1
   17160:	mov	r1, r0
   17164:	mov	r0, #0
   17168:	bl	170ac <tcgetattr@plt+0x5f48>
   1716c:	ldr	r4, [sp]
   17170:	add	sp, sp, #4
   17174:	pop	{pc}		; (ldr pc, [sp], #4)
   17178:	str	r4, [sp, #-8]!
   1717c:	str	lr, [sp, #4]
   17180:	mov	r2, r1
   17184:	mov	r1, r0
   17188:	mov	r0, #0
   1718c:	bl	17110 <tcgetattr@plt+0x5fac>
   17190:	ldr	r4, [sp]
   17194:	add	sp, sp, #4
   17198:	pop	{pc}		; (ldr pc, [sp], #4)
   1719c:	strd	r4, [sp, #-16]!
   171a0:	str	r6, [sp, #8]
   171a4:	str	lr, [sp, #12]
   171a8:	mov	r5, r1
   171ac:	ldr	r4, [r1]
   171b0:	cmp	r0, #0
   171b4:	beq	171e4 <tcgetattr@plt+0x6080>
   171b8:	lsr	r3, r4, #1
   171bc:	add	r3, r3, #1
   171c0:	adds	r4, r4, r3
   171c4:	bcs	17200 <tcgetattr@plt+0x609c>
   171c8:	mov	r1, r4
   171cc:	bl	170ac <tcgetattr@plt+0x5f48>
   171d0:	str	r4, [r5]
   171d4:	ldrd	r4, [sp]
   171d8:	ldr	r6, [sp, #8]
   171dc:	add	sp, sp, #12
   171e0:	pop	{pc}		; (ldr pc, [sp], #4)
   171e4:	cmp	r4, #0
   171e8:	bne	171c8 <tcgetattr@plt+0x6064>
   171ec:	mov	r4, #64	; 0x40
   171f0:	udiv	r4, r4, r2
   171f4:	cmp	r2, #64	; 0x40
   171f8:	addhi	r4, r4, #1
   171fc:	b	171c8 <tcgetattr@plt+0x6064>
   17200:	bl	17468 <tcgetattr@plt+0x6304>
   17204:	str	r4, [sp, #-8]!
   17208:	str	lr, [sp, #4]
   1720c:	mov	r2, #1
   17210:	bl	1719c <tcgetattr@plt+0x6038>
   17214:	ldr	r4, [sp]
   17218:	add	sp, sp, #4
   1721c:	pop	{pc}		; (ldr pc, [sp], #4)
   17220:	strd	r4, [sp, #-24]!	; 0xffffffe8
   17224:	strd	r6, [sp, #8]
   17228:	str	r8, [sp, #16]
   1722c:	str	lr, [sp, #20]
   17230:	mov	r5, r1
   17234:	ldr	lr, [sp, #24]
   17238:	ldr	ip, [r1]
   1723c:	asr	r4, ip, #1
   17240:	adds	r4, ip, r4
   17244:	movvs	r1, #1
   17248:	movvc	r1, #0
   1724c:	cmp	r1, #0
   17250:	mvnne	r4, #-2147483648	; 0x80000000
   17254:	mvn	r8, r3
   17258:	lsr	r8, r8, #31
   1725c:	cmp	r3, r4
   17260:	movge	r1, #0
   17264:	andlt	r1, r8, #1
   17268:	cmp	r1, #0
   1726c:	movne	r4, r3
   17270:	smull	r6, r7, r4, lr
   17274:	asr	r1, r6, #31
   17278:	cmp	r1, r7
   1727c:	bne	17294 <tcgetattr@plt+0x6130>
   17280:	mov	r1, r6
   17284:	cmp	r6, #63	; 0x3f
   17288:	movle	r1, #64	; 0x40
   1728c:	ble	17298 <tcgetattr@plt+0x6134>
   17290:	b	172a4 <tcgetattr@plt+0x6140>
   17294:	mvn	r1, #-2147483648	; 0x80000000
   17298:	sdiv	r4, r1, lr
   1729c:	mls	r6, lr, r4, r1
   172a0:	sub	r1, r1, r6
   172a4:	cmp	r0, #0
   172a8:	moveq	r6, #0
   172ac:	streq	r6, [r5]
   172b0:	sub	r6, r4, ip
   172b4:	cmp	r6, r2
   172b8:	bge	172f0 <tcgetattr@plt+0x618c>
   172bc:	adds	r2, ip, r2
   172c0:	mov	r4, r2
   172c4:	bvs	1730c <tcgetattr@plt+0x61a8>
   172c8:	cmp	r2, r3
   172cc:	movle	r3, #0
   172d0:	andgt	r3, r8, #1
   172d4:	cmp	r3, #0
   172d8:	bne	1730c <tcgetattr@plt+0x61a8>
   172dc:	smull	r2, r3, r2, lr
   172e0:	asr	ip, r2, #31
   172e4:	mov	r1, r2
   172e8:	cmp	ip, r3
   172ec:	bne	1730c <tcgetattr@plt+0x61a8>
   172f0:	bl	17034 <tcgetattr@plt+0x5ed0>
   172f4:	str	r4, [r5]
   172f8:	ldrd	r4, [sp]
   172fc:	ldrd	r6, [sp, #8]
   17300:	ldr	r8, [sp, #16]
   17304:	add	sp, sp, #20
   17308:	pop	{pc}		; (ldr pc, [sp], #4)
   1730c:	bl	17468 <tcgetattr@plt+0x6304>
   17310:	str	r4, [sp, #-8]!
   17314:	str	lr, [sp, #4]
   17318:	bl	18210 <tcgetattr@plt+0x70ac>
   1731c:	cmp	r0, #0
   17320:	beq	17330 <tcgetattr@plt+0x61cc>
   17324:	ldr	r4, [sp]
   17328:	add	sp, sp, #4
   1732c:	pop	{pc}		; (ldr pc, [sp], #4)
   17330:	bl	17468 <tcgetattr@plt+0x6304>
   17334:	str	r4, [sp, #-8]!
   17338:	str	lr, [sp, #4]
   1733c:	mov	r1, #1
   17340:	bl	17310 <tcgetattr@plt+0x61ac>
   17344:	ldr	r4, [sp]
   17348:	add	sp, sp, #4
   1734c:	pop	{pc}		; (ldr pc, [sp], #4)
   17350:	str	r4, [sp, #-8]!
   17354:	str	lr, [sp, #4]
   17358:	bl	18210 <tcgetattr@plt+0x70ac>
   1735c:	cmp	r0, #0
   17360:	beq	17370 <tcgetattr@plt+0x620c>
   17364:	ldr	r4, [sp]
   17368:	add	sp, sp, #4
   1736c:	pop	{pc}		; (ldr pc, [sp], #4)
   17370:	bl	17468 <tcgetattr@plt+0x6304>
   17374:	str	r4, [sp, #-8]!
   17378:	str	lr, [sp, #4]
   1737c:	mov	r1, #1
   17380:	bl	17350 <tcgetattr@plt+0x61ec>
   17384:	ldr	r4, [sp]
   17388:	add	sp, sp, #4
   1738c:	pop	{pc}		; (ldr pc, [sp], #4)
   17390:	strd	r4, [sp, #-16]!
   17394:	str	r6, [sp, #8]
   17398:	str	lr, [sp, #12]
   1739c:	mov	r5, r0
   173a0:	mov	r4, r1
   173a4:	mov	r0, r1
   173a8:	bl	16fd4 <tcgetattr@plt+0x5e70>
   173ac:	mov	r2, r4
   173b0:	mov	r1, r5
   173b4:	bl	10ee8 <memcpy@plt>
   173b8:	ldrd	r4, [sp]
   173bc:	ldr	r6, [sp, #8]
   173c0:	add	sp, sp, #12
   173c4:	pop	{pc}		; (ldr pc, [sp], #4)
   173c8:	strd	r4, [sp, #-16]!
   173cc:	str	r6, [sp, #8]
   173d0:	str	lr, [sp, #12]
   173d4:	mov	r5, r0
   173d8:	mov	r4, r1
   173dc:	mov	r0, r1
   173e0:	bl	16ff8 <tcgetattr@plt+0x5e94>
   173e4:	mov	r2, r4
   173e8:	mov	r1, r5
   173ec:	bl	10ee8 <memcpy@plt>
   173f0:	ldrd	r4, [sp]
   173f4:	ldr	r6, [sp, #8]
   173f8:	add	sp, sp, #12
   173fc:	pop	{pc}		; (ldr pc, [sp], #4)
   17400:	strd	r4, [sp, #-16]!
   17404:	str	r6, [sp, #8]
   17408:	str	lr, [sp, #12]
   1740c:	mov	r5, r0
   17410:	mov	r4, r1
   17414:	add	r0, r1, #1
   17418:	bl	16ff8 <tcgetattr@plt+0x5e94>
   1741c:	mov	r2, #0
   17420:	strb	r2, [r0, r4]
   17424:	mov	r2, r4
   17428:	mov	r1, r5
   1742c:	bl	10ee8 <memcpy@plt>
   17430:	ldrd	r4, [sp]
   17434:	ldr	r6, [sp, #8]
   17438:	add	sp, sp, #12
   1743c:	pop	{pc}		; (ldr pc, [sp], #4)
   17440:	str	r4, [sp, #-8]!
   17444:	str	lr, [sp, #4]
   17448:	mov	r4, r0
   1744c:	bl	11050 <strlen@plt>
   17450:	add	r1, r0, #1
   17454:	mov	r0, r4
   17458:	bl	17390 <tcgetattr@plt+0x622c>
   1745c:	ldr	r4, [sp]
   17460:	add	sp, sp, #4
   17464:	pop	{pc}		; (ldr pc, [sp], #4)
   17468:	str	r4, [sp, #-8]!
   1746c:	str	lr, [sp, #4]
   17470:	movw	r3, #53524	; 0xd114
   17474:	movt	r3, #2
   17478:	ldr	r4, [r3]
   1747c:	mov	r2, #5
   17480:	movw	r1, #48872	; 0xbee8
   17484:	movt	r1, #1
   17488:	mov	r0, #0
   1748c:	bl	10f24 <dcgettext@plt>
   17490:	mov	r3, r0
   17494:	movw	r2, #47792	; 0xbab0
   17498:	movt	r2, #1
   1749c:	mov	r1, #0
   174a0:	mov	r0, r4
   174a4:	bl	10fcc <error@plt>
   174a8:	bl	11140 <abort@plt>
   174ac:	strd	r4, [sp, #-16]!
   174b0:	str	r6, [sp, #8]
   174b4:	str	lr, [sp, #12]
   174b8:	sub	sp, sp, #16
   174bc:	mov	r6, r0
   174c0:	mov	r4, r2
   174c4:	mov	r5, r3
   174c8:	ldr	r3, [sp, #40]	; 0x28
   174cc:	str	r3, [sp]
   174d0:	add	r3, sp, #8
   174d4:	mov	r2, r1
   174d8:	mov	r1, #0
   174dc:	bl	17cc0 <tcgetattr@plt+0x6b5c>
   174e0:	cmp	r0, #0
   174e4:	bne	1755c <tcgetattr@plt+0x63f8>
   174e8:	ldrd	r0, [sp, #8]
   174ec:	ldrd	r2, [sp, #32]
   174f0:	cmp	r1, r3
   174f4:	cmpeq	r0, r2
   174f8:	movhi	r3, #1
   174fc:	movls	r3, #0
   17500:	cmp	r1, r5
   17504:	cmpeq	r0, r4
   17508:	orrcc	r3, r3, #1
   1750c:	cmp	r3, #0
   17510:	bne	17528 <tcgetattr@plt+0x63c4>
   17514:	add	sp, sp, #16
   17518:	ldrd	r4, [sp]
   1751c:	ldr	r6, [sp, #8]
   17520:	add	sp, sp, #12
   17524:	pop	{pc}		; (ldr pc, [sp], #4)
   17528:	mvn	r2, #-1073741824	; 0xc0000000
   1752c:	mov	r3, #0
   17530:	cmp	r1, r3
   17534:	cmpeq	r0, r2
   17538:	bls	1754c <tcgetattr@plt+0x63e8>
   1753c:	bl	11080 <__errno_location@plt>
   17540:	mov	r3, #75	; 0x4b
   17544:	str	r3, [r0]
   17548:	b	1756c <tcgetattr@plt+0x6408>
   1754c:	bl	11080 <__errno_location@plt>
   17550:	mov	r3, #34	; 0x22
   17554:	str	r3, [r0]
   17558:	b	1756c <tcgetattr@plt+0x6408>
   1755c:	cmp	r0, #1
   17560:	beq	175b0 <tcgetattr@plt+0x644c>
   17564:	cmp	r0, #3
   17568:	beq	175c0 <tcgetattr@plt+0x645c>
   1756c:	ldr	r3, [sp, #48]	; 0x30
   17570:	cmp	r3, #0
   17574:	moveq	r3, #1
   17578:	str	r3, [sp, #48]	; 0x30
   1757c:	bl	11080 <__errno_location@plt>
   17580:	ldr	r4, [r0]
   17584:	cmp	r4, #22
   17588:	moveq	r4, #0
   1758c:	mov	r0, r6
   17590:	bl	16a00 <tcgetattr@plt+0x589c>
   17594:	str	r0, [sp]
   17598:	ldr	r3, [sp, #44]	; 0x2c
   1759c:	movw	r2, #47788	; 0xbaac
   175a0:	movt	r2, #1
   175a4:	mov	r1, r4
   175a8:	ldr	r0, [sp, #48]	; 0x30
   175ac:	bl	10fcc <error@plt>
   175b0:	bl	11080 <__errno_location@plt>
   175b4:	mov	r3, #75	; 0x4b
   175b8:	str	r3, [r0]
   175bc:	b	1756c <tcgetattr@plt+0x6408>
   175c0:	bl	11080 <__errno_location@plt>
   175c4:	mov	r3, #0
   175c8:	str	r3, [r0]
   175cc:	b	1756c <tcgetattr@plt+0x6408>
   175d0:	strd	r4, [sp, #-12]!
   175d4:	str	lr, [sp, #8]
   175d8:	sub	sp, sp, #28
   175dc:	ldr	r1, [sp, #56]	; 0x38
   175e0:	str	r1, [sp, #16]
   175e4:	ldr	r1, [sp, #52]	; 0x34
   175e8:	str	r1, [sp, #12]
   175ec:	ldr	r1, [sp, #48]	; 0x30
   175f0:	str	r1, [sp, #8]
   175f4:	ldrd	r4, [sp, #40]	; 0x28
   175f8:	strd	r4, [sp]
   175fc:	mov	r1, #10
   17600:	bl	174ac <tcgetattr@plt+0x6348>
   17604:	add	sp, sp, #28
   17608:	ldrd	r4, [sp]
   1760c:	add	sp, sp, #8
   17610:	pop	{pc}		; (ldr pc, [sp], #4)
   17614:	cmp	r2, #0
   17618:	beq	17684 <tcgetattr@plt+0x6520>
   1761c:	strd	r4, [sp, #-20]!	; 0xffffffec
   17620:	strd	r6, [sp, #8]
   17624:	str	lr, [sp, #16]
   17628:	mov	r4, r0
   1762c:	sub	ip, r2, #1
   17630:	mov	r0, #0
   17634:	mov	r6, r0
   17638:	mov	r7, #1
   1763c:	b	17650 <tcgetattr@plt+0x64ec>
   17640:	orr	r0, r0, r3
   17644:	sub	ip, ip, #1
   17648:	cmn	ip, #1
   1764c:	beq	1768c <tcgetattr@plt+0x6528>
   17650:	ldr	lr, [r4]
   17654:	smull	r2, r3, lr, r1
   17658:	asr	r5, r2, #31
   1765c:	cmp	r5, r3
   17660:	streq	r2, [r4]
   17664:	moveq	r3, r6
   17668:	beq	17640 <tcgetattr@plt+0x64dc>
   1766c:	cmp	lr, #0
   17670:	movlt	r3, #-2147483648	; 0x80000000
   17674:	mvnge	r3, #-2147483648	; 0x80000000
   17678:	str	r3, [r4]
   1767c:	mov	r3, r7
   17680:	b	17640 <tcgetattr@plt+0x64dc>
   17684:	mov	r0, #0
   17688:	bx	lr
   1768c:	ldrd	r4, [sp]
   17690:	ldrd	r6, [sp, #8]
   17694:	add	sp, sp, #16
   17698:	pop	{pc}		; (ldr pc, [sp], #4)
   1769c:	strd	r4, [sp, #-32]!	; 0xffffffe0
   176a0:	strd	r6, [sp, #8]
   176a4:	str	r8, [sp, #16]
   176a8:	strd	sl, [sp, #20]
   176ac:	str	lr, [sp, #28]
   176b0:	sub	sp, sp, #8
   176b4:	cmp	r2, #36	; 0x24
   176b8:	bhi	17724 <tcgetattr@plt+0x65c0>
   176bc:	mov	r5, r0
   176c0:	mov	r4, r1
   176c4:	mov	r6, r2
   176c8:	mov	r8, r3
   176cc:	cmp	r1, #0
   176d0:	addeq	r4, sp, #4
   176d4:	bl	11080 <__errno_location@plt>
   176d8:	mov	r7, r0
   176dc:	mov	r3, #0
   176e0:	str	r3, [r0]
   176e4:	mov	r2, r6
   176e8:	mov	r1, r4
   176ec:	mov	r0, r5
   176f0:	bl	10eb8 <strtol@plt>
   176f4:	str	r0, [sp]
   176f8:	ldr	r6, [r4]
   176fc:	cmp	r6, r5
   17700:	beq	17744 <tcgetattr@plt+0x65e0>
   17704:	ldr	r3, [r7]
   17708:	cmp	r3, #0
   1770c:	beq	17864 <tcgetattr@plt+0x6700>
   17710:	cmp	r3, #34	; 0x22
   17714:	moveq	r5, #1
   17718:	beq	17868 <tcgetattr@plt+0x6704>
   1771c:	mov	r5, #4
   17720:	b	1788c <tcgetattr@plt+0x6728>
   17724:	movw	r3, #48892	; 0xbefc
   17728:	movt	r3, #1
   1772c:	mov	r2, #85	; 0x55
   17730:	movw	r1, #48900	; 0xbf04
   17734:	movt	r1, #1
   17738:	movw	r0, #48916	; 0xbf14
   1773c:	movt	r0, #1
   17740:	bl	11158 <__assert_fail@plt>
   17744:	ldr	r3, [sp, #40]	; 0x28
   17748:	cmp	r3, #0
   1774c:	beq	17b8c <tcgetattr@plt+0x6a28>
   17750:	ldrb	r1, [r5]
   17754:	cmp	r1, #0
   17758:	moveq	r5, #4
   1775c:	beq	1788c <tcgetattr@plt+0x6728>
   17760:	mov	r0, r3
   17764:	bl	1105c <strchr@plt>
   17768:	cmp	r0, #0
   1776c:	beq	17b94 <tcgetattr@plt+0x6a30>
   17770:	mov	r3, #1
   17774:	str	r3, [sp]
   17778:	ldrb	r7, [r6]
   1777c:	mov	r5, #0
   17780:	mov	r1, r7
   17784:	ldr	r0, [sp, #40]	; 0x28
   17788:	bl	1105c <strchr@plt>
   1778c:	cmp	r0, #0
   17790:	beq	178ac <tcgetattr@plt+0x6748>
   17794:	sub	r3, r7, #69	; 0x45
   17798:	cmp	r3, #47	; 0x2f
   1779c:	ldrls	pc, [pc, r3, lsl #2]
   177a0:	b	179f8 <tcgetattr@plt+0x6894>
   177a4:			; <UNDEFINED> instruction: 0x000178bc
   177a8:	strdeq	r7, [r1], -r8
   177ac:			; <UNDEFINED> instruction: 0x000178bc
   177b0:	strdeq	r7, [r1], -r8
   177b4:	strdeq	r7, [r1], -r8
   177b8:	strdeq	r7, [r1], -r8
   177bc:			; <UNDEFINED> instruction: 0x000178bc
   177c0:	strdeq	r7, [r1], -r8
   177c4:			; <UNDEFINED> instruction: 0x000178bc
   177c8:	strdeq	r7, [r1], -r8
   177cc:	strdeq	r7, [r1], -r8
   177d0:			; <UNDEFINED> instruction: 0x000178bc
   177d4:	strdeq	r7, [r1], -r8
   177d8:	strdeq	r7, [r1], -r8
   177dc:	strdeq	r7, [r1], -r8
   177e0:			; <UNDEFINED> instruction: 0x000178bc
   177e4:	strdeq	r7, [r1], -r8
   177e8:	strdeq	r7, [r1], -r8
   177ec:	strdeq	r7, [r1], -r8
   177f0:	strdeq	r7, [r1], -r8
   177f4:			; <UNDEFINED> instruction: 0x000178bc
   177f8:			; <UNDEFINED> instruction: 0x000178bc
   177fc:	strdeq	r7, [r1], -r8
   17800:	strdeq	r7, [r1], -r8
   17804:	strdeq	r7, [r1], -r8
   17808:	strdeq	r7, [r1], -r8
   1780c:	strdeq	r7, [r1], -r8
   17810:	strdeq	r7, [r1], -r8
   17814:	strdeq	r7, [r1], -r8
   17818:	strdeq	r7, [r1], -r8
   1781c:	strdeq	r7, [r1], -r8
   17820:	strdeq	r7, [r1], -r8
   17824:	strdeq	r7, [r1], -r8
   17828:	strdeq	r7, [r1], -r8
   1782c:			; <UNDEFINED> instruction: 0x000178bc
   17830:	strdeq	r7, [r1], -r8
   17834:	strdeq	r7, [r1], -r8
   17838:	strdeq	r7, [r1], -r8
   1783c:			; <UNDEFINED> instruction: 0x000178bc
   17840:	strdeq	r7, [r1], -r8
   17844:			; <UNDEFINED> instruction: 0x000178bc
   17848:	strdeq	r7, [r1], -r8
   1784c:	strdeq	r7, [r1], -r8
   17850:	strdeq	r7, [r1], -r8
   17854:	strdeq	r7, [r1], -r8
   17858:	strdeq	r7, [r1], -r8
   1785c:	strdeq	r7, [r1], -r8
   17860:			; <UNDEFINED> instruction: 0x000178bc
   17864:	mov	r5, #0
   17868:	ldr	r3, [sp, #40]	; 0x28
   1786c:	cmp	r3, #0
   17870:	streq	r0, [r8]
   17874:	beq	1788c <tcgetattr@plt+0x6728>
   17878:	ldrb	r7, [r6]
   1787c:	cmp	r7, #0
   17880:	bne	17780 <tcgetattr@plt+0x661c>
   17884:	ldr	r3, [sp]
   17888:	str	r3, [r8]
   1788c:	mov	r0, r5
   17890:	add	sp, sp, #8
   17894:	ldrd	r4, [sp]
   17898:	ldrd	r6, [sp, #8]
   1789c:	ldr	r8, [sp, #16]
   178a0:	ldrd	sl, [sp, #20]
   178a4:	add	sp, sp, #28
   178a8:	pop	{pc}		; (ldr pc, [sp], #4)
   178ac:	ldr	r3, [sp]
   178b0:	str	r3, [r8]
   178b4:	orr	r5, r5, #2
   178b8:	b	1788c <tcgetattr@plt+0x6728>
   178bc:	mov	r1, #48	; 0x30
   178c0:	ldr	r0, [sp, #40]	; 0x28
   178c4:	bl	1105c <strchr@plt>
   178c8:	cmp	r0, #0
   178cc:	beq	17a04 <tcgetattr@plt+0x68a0>
   178d0:	ldrb	r3, [r6, #1]
   178d4:	cmp	r3, #68	; 0x44
   178d8:	beq	17a10 <tcgetattr@plt+0x68ac>
   178dc:	cmp	r3, #105	; 0x69
   178e0:	beq	179e0 <tcgetattr@plt+0x687c>
   178e4:	cmp	r3, #66	; 0x42
   178e8:	moveq	r6, #2
   178ec:	movne	r6, #1
   178f0:	moveq	r1, #1000	; 0x3e8
   178f4:	movne	r1, #1024	; 0x400
   178f8:	sub	r7, r7, #66	; 0x42
   178fc:	cmp	r7, #53	; 0x35
   17900:	ldrls	pc, [pc, r7, lsl #2]
   17904:	b	17b58 <tcgetattr@plt+0x69f4>
   17908:	andeq	r7, r1, ip, asr sl
   1790c:	andeq	r7, r1, r8, asr fp
   17910:	andeq	r7, r1, r8, asr fp
   17914:	muleq	r1, ip, sl
   17918:	andeq	r7, r1, r8, asr fp
   1791c:	andeq	r7, r1, ip, lsr #21
   17920:	andeq	r7, r1, r8, asr fp
   17924:	andeq	r7, r1, r8, asr fp
   17928:	andeq	r7, r1, r8, asr fp
   1792c:			; <UNDEFINED> instruction: 0x00017abc
   17930:	andeq	r7, r1, r8, asr fp
   17934:	andeq	r7, r1, ip, asr #21
   17938:	andeq	r7, r1, r8, asr fp
   1793c:	andeq	r7, r1, r8, asr fp
   17940:	ldrdeq	r7, [r1], -ip
   17944:	andeq	r7, r1, r8, asr fp
   17948:	andeq	r7, r1, r8, asr fp
   1794c:	andeq	r7, r1, r8, asr fp
   17950:	andeq	r7, r1, ip, ror #21
   17954:	andeq	r7, r1, r8, asr fp
   17958:	andeq	r7, r1, r8, asr fp
   1795c:	andeq	r7, r1, r8, asr fp
   17960:	andeq	r7, r1, r8, asr fp
   17964:	andeq	r7, r1, r8, lsr fp
   17968:	andeq	r7, r1, r8, asr #22
   1796c:	andeq	r7, r1, r8, asr fp
   17970:	andeq	r7, r1, r8, asr fp
   17974:	andeq	r7, r1, r8, asr fp
   17978:	andeq	r7, r1, r8, asr fp
   1797c:	andeq	r7, r1, r8, asr fp
   17980:	andeq	r7, r1, r8, asr fp
   17984:	andeq	r7, r1, r8, asr fp
   17988:	andeq	r7, r1, ip, lsl sl
   1798c:	andeq	r7, r1, r8, ror #22
   17990:	andeq	r7, r1, r8, asr fp
   17994:	andeq	r7, r1, r8, asr fp
   17998:	andeq	r7, r1, r8, asr fp
   1799c:	andeq	r7, r1, ip, lsr #21
   179a0:	andeq	r7, r1, r8, asr fp
   179a4:	andeq	r7, r1, r8, asr fp
   179a8:	andeq	r7, r1, r8, asr fp
   179ac:			; <UNDEFINED> instruction: 0x00017abc
   179b0:	andeq	r7, r1, r8, asr fp
   179b4:	andeq	r7, r1, ip, asr #21
   179b8:	andeq	r7, r1, r8, asr fp
   179bc:	andeq	r7, r1, r8, asr fp
   179c0:	andeq	r7, r1, r8, asr fp
   179c4:	andeq	r7, r1, r8, asr fp
   179c8:	andeq	r7, r1, r8, asr fp
   179cc:	andeq	r7, r1, r8, asr fp
   179d0:	andeq	r7, r1, ip, ror #21
   179d4:	andeq	r7, r1, r8, asr fp
   179d8:	andeq	r7, r1, r8, asr fp
   179dc:	strdeq	r7, [r1], -ip
   179e0:	ldrb	r3, [r6, #2]
   179e4:	cmp	r3, #66	; 0x42
   179e8:	movne	r6, #1
   179ec:	moveq	r6, #3
   179f0:	mov	r1, #1024	; 0x400
   179f4:	b	178f8 <tcgetattr@plt+0x6794>
   179f8:	mov	r6, #1
   179fc:	mov	r1, #1024	; 0x400
   17a00:	b	178f8 <tcgetattr@plt+0x6794>
   17a04:	mov	r6, #1
   17a08:	mov	r1, #1024	; 0x400
   17a0c:	b	178f8 <tcgetattr@plt+0x6794>
   17a10:	mov	r6, #2
   17a14:	mov	r1, #1000	; 0x3e8
   17a18:	b	178f8 <tcgetattr@plt+0x6794>
   17a1c:	ldr	r3, [sp]
   17a20:	asr	r1, r3, #31
   17a24:	lsl	r2, r1, #9
   17a28:	orr	r2, r2, r3, lsr #23
   17a2c:	lsl	r1, r3, #9
   17a30:	asr	r0, r1, #31
   17a34:	cmp	r0, r2
   17a38:	streq	r1, [sp]
   17a3c:	moveq	r0, #0
   17a40:	beq	17b6c <tcgetattr@plt+0x6a08>
   17a44:	cmp	r3, #0
   17a48:	movlt	r3, #-2147483648	; 0x80000000
   17a4c:	mvnge	r3, #-2147483648	; 0x80000000
   17a50:	str	r3, [sp]
   17a54:	mov	r0, #1
   17a58:	b	17b6c <tcgetattr@plt+0x6a08>
   17a5c:	ldr	r3, [sp]
   17a60:	asr	r1, r3, #31
   17a64:	lsl	r2, r1, #10
   17a68:	orr	r2, r2, r3, lsr #22
   17a6c:	lsl	r1, r3, #10
   17a70:	asr	r0, r1, #31
   17a74:	cmp	r0, r2
   17a78:	streq	r1, [sp]
   17a7c:	moveq	r0, #0
   17a80:	beq	17b6c <tcgetattr@plt+0x6a08>
   17a84:	cmp	r3, #0
   17a88:	movlt	r3, #-2147483648	; 0x80000000
   17a8c:	mvnge	r3, #-2147483648	; 0x80000000
   17a90:	str	r3, [sp]
   17a94:	mov	r0, #1
   17a98:	b	17b6c <tcgetattr@plt+0x6a08>
   17a9c:	mov	r2, #6
   17aa0:	mov	r0, sp
   17aa4:	bl	17614 <tcgetattr@plt+0x64b0>
   17aa8:	b	17b6c <tcgetattr@plt+0x6a08>
   17aac:	mov	r2, #3
   17ab0:	mov	r0, sp
   17ab4:	bl	17614 <tcgetattr@plt+0x64b0>
   17ab8:	b	17b6c <tcgetattr@plt+0x6a08>
   17abc:	mov	r2, #1
   17ac0:	mov	r0, sp
   17ac4:	bl	17614 <tcgetattr@plt+0x64b0>
   17ac8:	b	17b6c <tcgetattr@plt+0x6a08>
   17acc:	mov	r2, #2
   17ad0:	mov	r0, sp
   17ad4:	bl	17614 <tcgetattr@plt+0x64b0>
   17ad8:	b	17b6c <tcgetattr@plt+0x6a08>
   17adc:	mov	r2, #5
   17ae0:	mov	r0, sp
   17ae4:	bl	17614 <tcgetattr@plt+0x64b0>
   17ae8:	b	17b6c <tcgetattr@plt+0x6a08>
   17aec:	mov	r2, #4
   17af0:	mov	r0, sp
   17af4:	bl	17614 <tcgetattr@plt+0x64b0>
   17af8:	b	17b6c <tcgetattr@plt+0x6a08>
   17afc:	ldr	r1, [sp]
   17b00:	asr	fp, r1, #31
   17b04:	adds	r2, r1, r1
   17b08:	adc	r3, fp, fp
   17b0c:	asr	r0, r2, #31
   17b10:	cmp	r0, r3
   17b14:	streq	r2, [sp]
   17b18:	moveq	r0, #0
   17b1c:	beq	17b6c <tcgetattr@plt+0x6a08>
   17b20:	cmp	r1, #0
   17b24:	movlt	r3, #-2147483648	; 0x80000000
   17b28:	mvnge	r3, #-2147483648	; 0x80000000
   17b2c:	str	r3, [sp]
   17b30:	mov	r0, #1
   17b34:	b	17b6c <tcgetattr@plt+0x6a08>
   17b38:	mov	r2, #8
   17b3c:	mov	r0, sp
   17b40:	bl	17614 <tcgetattr@plt+0x64b0>
   17b44:	b	17b6c <tcgetattr@plt+0x6a08>
   17b48:	mov	r2, #7
   17b4c:	mov	r0, sp
   17b50:	bl	17614 <tcgetattr@plt+0x64b0>
   17b54:	b	17b6c <tcgetattr@plt+0x6a08>
   17b58:	ldr	r3, [sp]
   17b5c:	str	r3, [r8]
   17b60:	orr	r5, r5, #2
   17b64:	b	1788c <tcgetattr@plt+0x6728>
   17b68:	mov	r0, #0
   17b6c:	orr	r5, r5, r0
   17b70:	ldr	r3, [r4]
   17b74:	add	r2, r3, r6
   17b78:	str	r2, [r4]
   17b7c:	ldrb	r3, [r3, r6]
   17b80:	cmp	r3, #0
   17b84:	orrne	r5, r5, #2
   17b88:	b	17884 <tcgetattr@plt+0x6720>
   17b8c:	mov	r5, #4
   17b90:	b	1788c <tcgetattr@plt+0x6728>
   17b94:	mov	r5, #4
   17b98:	b	1788c <tcgetattr@plt+0x6728>
   17b9c:	strd	r4, [sp, #-36]!	; 0xffffffdc
   17ba0:	strd	r6, [sp, #8]
   17ba4:	strd	r8, [sp, #16]
   17ba8:	strd	sl, [sp, #24]
   17bac:	str	lr, [sp, #32]
   17bb0:	sub	sp, sp, #12
   17bb4:	str	r0, [sp, #4]
   17bb8:	cmp	r2, #0
   17bbc:	beq	17cb8 <tcgetattr@plt+0x6b54>
   17bc0:	sub	ip, r2, #1
   17bc4:	ldrd	r2, [r0]
   17bc8:	mov	r0, #0
   17bcc:	mov	r8, r1
   17bd0:	asr	r9, r1, #31
   17bd4:	str	r1, [sp]
   17bd8:	b	17c28 <tcgetattr@plt+0x6ac4>
   17bdc:	orrs	r4, r2, r3
   17be0:	movne	lr, #1
   17be4:	b	17c38 <tcgetattr@plt+0x6ad4>
   17be8:	mov	sl, r3
   17bec:	ldr	fp, [sp]
   17bf0:	umull	r6, r7, r1, r2
   17bf4:	mov	r4, r7
   17bf8:	mov	r5, #0
   17bfc:	umlal	r4, r5, sl, fp
   17c00:	cmp	r5, #0
   17c04:	bne	17c6c <tcgetattr@plt+0x6b08>
   17c08:	cmp	lr, #0
   17c0c:	bne	17c84 <tcgetattr@plt+0x6b20>
   17c10:	mov	r2, r6
   17c14:	mov	r3, r4
   17c18:	orr	r0, r0, lr
   17c1c:	sub	ip, ip, #1
   17c20:	cmn	ip, #1
   17c24:	beq	17c94 <tcgetattr@plt+0x6b30>
   17c28:	mov	lr, #0
   17c2c:	cmp	r8, #0
   17c30:	sbcs	r4, r9, #0
   17c34:	blt	17bdc <tcgetattr@plt+0x6a78>
   17c38:	cmp	r9, #0
   17c3c:	bne	17c58 <tcgetattr@plt+0x6af4>
   17c40:	cmp	r3, #0
   17c44:	bne	17be8 <tcgetattr@plt+0x6a84>
   17c48:	umull	r2, r3, r1, r2
   17c4c:	mov	r6, r2
   17c50:	mov	r4, r3
   17c54:	b	17c08 <tcgetattr@plt+0x6aa4>
   17c58:	cmp	r3, #0
   17c5c:	bne	17c6c <tcgetattr@plt+0x6b08>
   17c60:	mov	sl, r9
   17c64:	mov	fp, r2
   17c68:	b	17bf0 <tcgetattr@plt+0x6a8c>
   17c6c:	mul	r4, r1, r3
   17c70:	mla	r4, r2, r9, r4
   17c74:	umull	r6, r7, r1, r2
   17c78:	add	r4, r4, r7
   17c7c:	mov	lr, #1
   17c80:	b	17c08 <tcgetattr@plt+0x6aa4>
   17c84:	mvn	r2, #0
   17c88:	mvn	r3, #0
   17c8c:	mov	lr, #1
   17c90:	b	17c18 <tcgetattr@plt+0x6ab4>
   17c94:	ldr	r1, [sp, #4]
   17c98:	strd	r2, [r1]
   17c9c:	add	sp, sp, #12
   17ca0:	ldrd	r4, [sp]
   17ca4:	ldrd	r6, [sp, #8]
   17ca8:	ldrd	r8, [sp, #16]
   17cac:	ldrd	sl, [sp, #24]
   17cb0:	add	sp, sp, #32
   17cb4:	pop	{pc}		; (ldr pc, [sp], #4)
   17cb8:	mov	r0, #0
   17cbc:	b	17c9c <tcgetattr@plt+0x6b38>
   17cc0:	strd	r4, [sp, #-28]!	; 0xffffffe4
   17cc4:	strd	r6, [sp, #8]
   17cc8:	strd	r8, [sp, #16]
   17ccc:	str	lr, [sp, #24]
   17cd0:	sub	sp, sp, #20
   17cd4:	cmp	r2, #36	; 0x24
   17cd8:	bhi	17d2c <tcgetattr@plt+0x6bc8>
   17cdc:	mov	r5, r0
   17ce0:	mov	r6, r1
   17ce4:	mov	r7, r2
   17ce8:	mov	r9, r3
   17cec:	cmp	r1, #0
   17cf0:	addeq	r6, sp, #12
   17cf4:	bl	11080 <__errno_location@plt>
   17cf8:	mov	r8, r0
   17cfc:	mov	r3, #0
   17d00:	str	r3, [r0]
   17d04:	ldrb	r4, [r5]
   17d08:	bl	1102c <__ctype_b_loc@plt>
   17d0c:	ldr	r1, [r0]
   17d10:	mov	r2, r5
   17d14:	lsl	r3, r4, #1
   17d18:	ldrh	r3, [r1, r3]
   17d1c:	tst	r3, #8192	; 0x2000
   17d20:	beq	17d4c <tcgetattr@plt+0x6be8>
   17d24:	ldrb	r4, [r2, #1]!
   17d28:	b	17d14 <tcgetattr@plt+0x6bb0>
   17d2c:	movw	r3, #48956	; 0xbf3c
   17d30:	movt	r3, #1
   17d34:	mov	r2, #85	; 0x55
   17d38:	movw	r1, #48900	; 0xbf04
   17d3c:	movt	r1, #1
   17d40:	movw	r0, #48916	; 0xbf14
   17d44:	movt	r0, #1
   17d48:	bl	11158 <__assert_fail@plt>
   17d4c:	cmp	r4, #45	; 0x2d
   17d50:	moveq	r4, #4
   17d54:	beq	17ee8 <tcgetattr@plt+0x6d84>
   17d58:	mov	r3, #0
   17d5c:	mov	r2, r7
   17d60:	mov	r1, r6
   17d64:	mov	r0, r5
   17d68:	bl	10ef4 <__strtoull_internal@plt>
   17d6c:	strd	r0, [sp]
   17d70:	ldr	r7, [r6]
   17d74:	cmp	r7, r5
   17d78:	beq	17d9c <tcgetattr@plt+0x6c38>
   17d7c:	ldr	r3, [r8]
   17d80:	cmp	r3, #0
   17d84:	beq	17ec0 <tcgetattr@plt+0x6d5c>
   17d88:	cmp	r3, #34	; 0x22
   17d8c:	moveq	r4, #1
   17d90:	beq	17ec4 <tcgetattr@plt+0x6d60>
   17d94:	mov	r4, #4
   17d98:	b	17ee8 <tcgetattr@plt+0x6d84>
   17d9c:	ldr	r3, [sp, #48]	; 0x30
   17da0:	cmp	r3, #0
   17da4:	beq	18200 <tcgetattr@plt+0x709c>
   17da8:	ldrb	r1, [r5]
   17dac:	cmp	r1, #0
   17db0:	moveq	r4, #4
   17db4:	beq	17ee8 <tcgetattr@plt+0x6d84>
   17db8:	mov	r0, r3
   17dbc:	bl	1105c <strchr@plt>
   17dc0:	cmp	r0, #0
   17dc4:	beq	18208 <tcgetattr@plt+0x70a4>
   17dc8:	mov	r2, #1
   17dcc:	mov	r3, #0
   17dd0:	strd	r2, [sp]
   17dd4:	ldrb	r5, [r7]
   17dd8:	mov	r4, #0
   17ddc:	mov	r1, r5
   17de0:	ldr	r0, [sp, #48]	; 0x30
   17de4:	bl	1105c <strchr@plt>
   17de8:	cmp	r0, #0
   17dec:	beq	17f04 <tcgetattr@plt+0x6da0>
   17df0:	sub	r3, r5, #69	; 0x45
   17df4:	cmp	r3, #47	; 0x2f
   17df8:	ldrls	pc, [pc, r3, lsl #2]
   17dfc:	b	18050 <tcgetattr@plt+0x6eec>
   17e00:	andeq	r7, r1, r4, lsl pc
   17e04:	andeq	r8, r1, r0, asr r0
   17e08:	andeq	r7, r1, r4, lsl pc
   17e0c:	andeq	r8, r1, r0, asr r0
   17e10:	andeq	r8, r1, r0, asr r0
   17e14:	andeq	r8, r1, r0, asr r0
   17e18:	andeq	r7, r1, r4, lsl pc
   17e1c:	andeq	r8, r1, r0, asr r0
   17e20:	andeq	r7, r1, r4, lsl pc
   17e24:	andeq	r8, r1, r0, asr r0
   17e28:	andeq	r8, r1, r0, asr r0
   17e2c:	andeq	r7, r1, r4, lsl pc
   17e30:	andeq	r8, r1, r0, asr r0
   17e34:	andeq	r8, r1, r0, asr r0
   17e38:	andeq	r8, r1, r0, asr r0
   17e3c:	andeq	r7, r1, r4, lsl pc
   17e40:	andeq	r8, r1, r0, asr r0
   17e44:	andeq	r8, r1, r0, asr r0
   17e48:	andeq	r8, r1, r0, asr r0
   17e4c:	andeq	r8, r1, r0, asr r0
   17e50:	andeq	r7, r1, r4, lsl pc
   17e54:	andeq	r7, r1, r4, lsl pc
   17e58:	andeq	r8, r1, r0, asr r0
   17e5c:	andeq	r8, r1, r0, asr r0
   17e60:	andeq	r8, r1, r0, asr r0
   17e64:	andeq	r8, r1, r0, asr r0
   17e68:	andeq	r8, r1, r0, asr r0
   17e6c:	andeq	r8, r1, r0, asr r0
   17e70:	andeq	r8, r1, r0, asr r0
   17e74:	andeq	r8, r1, r0, asr r0
   17e78:	andeq	r8, r1, r0, asr r0
   17e7c:	andeq	r8, r1, r0, asr r0
   17e80:	andeq	r8, r1, r0, asr r0
   17e84:	andeq	r8, r1, r0, asr r0
   17e88:	andeq	r7, r1, r4, lsl pc
   17e8c:	andeq	r8, r1, r0, asr r0
   17e90:	andeq	r8, r1, r0, asr r0
   17e94:	andeq	r8, r1, r0, asr r0
   17e98:	andeq	r7, r1, r4, lsl pc
   17e9c:	andeq	r8, r1, r0, asr r0
   17ea0:	andeq	r7, r1, r4, lsl pc
   17ea4:	andeq	r8, r1, r0, asr r0
   17ea8:	andeq	r8, r1, r0, asr r0
   17eac:	andeq	r8, r1, r0, asr r0
   17eb0:	andeq	r8, r1, r0, asr r0
   17eb4:	andeq	r8, r1, r0, asr r0
   17eb8:	andeq	r8, r1, r0, asr r0
   17ebc:	andeq	r7, r1, r4, lsl pc
   17ec0:	mov	r4, #0
   17ec4:	ldr	r3, [sp, #48]	; 0x30
   17ec8:	cmp	r3, #0
   17ecc:	strdeq	r0, [r9]
   17ed0:	beq	17ee8 <tcgetattr@plt+0x6d84>
   17ed4:	ldrb	r5, [r7]
   17ed8:	cmp	r5, #0
   17edc:	bne	17ddc <tcgetattr@plt+0x6c78>
   17ee0:	ldrd	r2, [sp]
   17ee4:	strd	r2, [r9]
   17ee8:	mov	r0, r4
   17eec:	add	sp, sp, #20
   17ef0:	ldrd	r4, [sp]
   17ef4:	ldrd	r6, [sp, #8]
   17ef8:	ldrd	r8, [sp, #16]
   17efc:	add	sp, sp, #24
   17f00:	pop	{pc}		; (ldr pc, [sp], #4)
   17f04:	ldrd	r2, [sp]
   17f08:	strd	r2, [r9]
   17f0c:	orr	r4, r4, #2
   17f10:	b	17ee8 <tcgetattr@plt+0x6d84>
   17f14:	mov	r1, #48	; 0x30
   17f18:	ldr	r0, [sp, #48]	; 0x30
   17f1c:	bl	1105c <strchr@plt>
   17f20:	cmp	r0, #0
   17f24:	beq	1805c <tcgetattr@plt+0x6ef8>
   17f28:	ldrb	r3, [r7, #1]
   17f2c:	cmp	r3, #68	; 0x44
   17f30:	beq	18068 <tcgetattr@plt+0x6f04>
   17f34:	cmp	r3, #105	; 0x69
   17f38:	beq	18038 <tcgetattr@plt+0x6ed4>
   17f3c:	cmp	r3, #66	; 0x42
   17f40:	moveq	r7, #2
   17f44:	movne	r7, #1
   17f48:	moveq	r1, #1000	; 0x3e8
   17f4c:	movne	r1, #1024	; 0x400
   17f50:	sub	r5, r5, #66	; 0x42
   17f54:	cmp	r5, #53	; 0x35
   17f58:	ldrls	pc, [pc, r5, lsl #2]
   17f5c:	b	181cc <tcgetattr@plt+0x7068>
   17f60:	strheq	r8, [r1], -ip
   17f64:	andeq	r8, r1, ip, asr #3
   17f68:	andeq	r8, r1, ip, asr #3
   17f6c:	andeq	r8, r1, r4, lsl #2
   17f70:	andeq	r8, r1, ip, asr #3
   17f74:	andeq	r8, r1, r4, lsl r1
   17f78:	andeq	r8, r1, ip, asr #3
   17f7c:	andeq	r8, r1, ip, asr #3
   17f80:	andeq	r8, r1, ip, asr #3
   17f84:	andeq	r8, r1, r4, lsr #2
   17f88:	andeq	r8, r1, ip, asr #3
   17f8c:	andeq	r8, r1, r4, lsr r1
   17f90:	andeq	r8, r1, ip, asr #3
   17f94:	andeq	r8, r1, ip, asr #3
   17f98:	andeq	r8, r1, r4, asr #2
   17f9c:	andeq	r8, r1, ip, asr #3
   17fa0:	andeq	r8, r1, ip, asr #3
   17fa4:	andeq	r8, r1, ip, asr #3
   17fa8:	andeq	r8, r1, r4, asr r1
   17fac:	andeq	r8, r1, ip, asr #3
   17fb0:	andeq	r8, r1, ip, asr #3
   17fb4:	andeq	r8, r1, ip, asr #3
   17fb8:	andeq	r8, r1, ip, asr #3
   17fbc:	andeq	r8, r1, ip, lsr #3
   17fc0:			; <UNDEFINED> instruction: 0x000181bc
   17fc4:	andeq	r8, r1, ip, asr #3
   17fc8:	andeq	r8, r1, ip, asr #3
   17fcc:	andeq	r8, r1, ip, asr #3
   17fd0:	andeq	r8, r1, ip, asr #3
   17fd4:	andeq	r8, r1, ip, asr #3
   17fd8:	andeq	r8, r1, ip, asr #3
   17fdc:	andeq	r8, r1, ip, asr #3
   17fe0:	andeq	r8, r1, r4, ror r0
   17fe4:	ldrdeq	r8, [r1], -ip
   17fe8:	andeq	r8, r1, ip, asr #3
   17fec:	andeq	r8, r1, ip, asr #3
   17ff0:	andeq	r8, r1, ip, asr #3
   17ff4:	andeq	r8, r1, r4, lsl r1
   17ff8:	andeq	r8, r1, ip, asr #3
   17ffc:	andeq	r8, r1, ip, asr #3
   18000:	andeq	r8, r1, ip, asr #3
   18004:	andeq	r8, r1, r4, lsr #2
   18008:	andeq	r8, r1, ip, asr #3
   1800c:	andeq	r8, r1, r4, lsr r1
   18010:	andeq	r8, r1, ip, asr #3
   18014:	andeq	r8, r1, ip, asr #3
   18018:	andeq	r8, r1, ip, asr #3
   1801c:	andeq	r8, r1, ip, asr #3
   18020:	andeq	r8, r1, ip, asr #3
   18024:	andeq	r8, r1, ip, asr #3
   18028:	andeq	r8, r1, r4, asr r1
   1802c:	andeq	r8, r1, ip, asr #3
   18030:	andeq	r8, r1, ip, asr #3
   18034:	andeq	r8, r1, r4, ror #2
   18038:	ldrb	r3, [r7, #2]
   1803c:	cmp	r3, #66	; 0x42
   18040:	movne	r7, #1
   18044:	moveq	r7, #3
   18048:	mov	r1, #1024	; 0x400
   1804c:	b	17f50 <tcgetattr@plt+0x6dec>
   18050:	mov	r7, #1
   18054:	mov	r1, #1024	; 0x400
   18058:	b	17f50 <tcgetattr@plt+0x6dec>
   1805c:	mov	r7, #1
   18060:	mov	r1, #1024	; 0x400
   18064:	b	17f50 <tcgetattr@plt+0x6dec>
   18068:	mov	r7, #2
   1806c:	mov	r1, #1000	; 0x3e8
   18070:	b	17f50 <tcgetattr@plt+0x6dec>
   18074:	ldr	r3, [sp]
   18078:	ldr	ip, [sp, #4]
   1807c:	lsl	r2, ip, #9
   18080:	orr	r2, r2, r3, lsr #23
   18084:	lsl	r3, r3, #9
   18088:	mov	r0, #0
   1808c:	mov	r1, r0
   18090:	lsr	r0, ip, #23
   18094:	orrs	r1, r0, r1
   18098:	streq	r3, [sp]
   1809c:	streq	r2, [sp, #4]
   180a0:	moveq	r0, #0
   180a4:	beq	181e0 <tcgetattr@plt+0x707c>
   180a8:	mvn	r2, #0
   180ac:	mvn	r3, #0
   180b0:	strd	r2, [sp]
   180b4:	mov	r0, #1
   180b8:	b	181e0 <tcgetattr@plt+0x707c>
   180bc:	ldr	r3, [sp]
   180c0:	ldr	ip, [sp, #4]
   180c4:	lsl	r2, ip, #10
   180c8:	orr	r2, r2, r3, lsr #22
   180cc:	lsl	r3, r3, #10
   180d0:	mov	r0, #0
   180d4:	mov	r1, r0
   180d8:	lsr	r0, ip, #22
   180dc:	orrs	r1, r0, r1
   180e0:	streq	r3, [sp]
   180e4:	streq	r2, [sp, #4]
   180e8:	moveq	r0, #0
   180ec:	beq	181e0 <tcgetattr@plt+0x707c>
   180f0:	mvn	r2, #0
   180f4:	mvn	r3, #0
   180f8:	strd	r2, [sp]
   180fc:	mov	r0, #1
   18100:	b	181e0 <tcgetattr@plt+0x707c>
   18104:	mov	r2, #6
   18108:	mov	r0, sp
   1810c:	bl	17b9c <tcgetattr@plt+0x6a38>
   18110:	b	181e0 <tcgetattr@plt+0x707c>
   18114:	mov	r2, #3
   18118:	mov	r0, sp
   1811c:	bl	17b9c <tcgetattr@plt+0x6a38>
   18120:	b	181e0 <tcgetattr@plt+0x707c>
   18124:	mov	r2, #1
   18128:	mov	r0, sp
   1812c:	bl	17b9c <tcgetattr@plt+0x6a38>
   18130:	b	181e0 <tcgetattr@plt+0x707c>
   18134:	mov	r2, #2
   18138:	mov	r0, sp
   1813c:	bl	17b9c <tcgetattr@plt+0x6a38>
   18140:	b	181e0 <tcgetattr@plt+0x707c>
   18144:	mov	r2, #5
   18148:	mov	r0, sp
   1814c:	bl	17b9c <tcgetattr@plt+0x6a38>
   18150:	b	181e0 <tcgetattr@plt+0x707c>
   18154:	mov	r2, #4
   18158:	mov	r0, sp
   1815c:	bl	17b9c <tcgetattr@plt+0x6a38>
   18160:	b	181e0 <tcgetattr@plt+0x707c>
   18164:	ldr	r3, [sp]
   18168:	ldr	r2, [sp, #4]
   1816c:	adds	r3, r3, r3
   18170:	adc	r2, r2, r2
   18174:	mov	r1, #0
   18178:	mov	r0, r1
   1817c:	ldr	r1, [sp, #4]
   18180:	lsr	r1, r1, #31
   18184:	orrs	r1, r1, r0
   18188:	streq	r3, [sp]
   1818c:	streq	r2, [sp, #4]
   18190:	moveq	r0, #0
   18194:	beq	181e0 <tcgetattr@plt+0x707c>
   18198:	mvn	r2, #0
   1819c:	mvn	r3, #0
   181a0:	strd	r2, [sp]
   181a4:	mov	r0, #1
   181a8:	b	181e0 <tcgetattr@plt+0x707c>
   181ac:	mov	r2, #8
   181b0:	mov	r0, sp
   181b4:	bl	17b9c <tcgetattr@plt+0x6a38>
   181b8:	b	181e0 <tcgetattr@plt+0x707c>
   181bc:	mov	r2, #7
   181c0:	mov	r0, sp
   181c4:	bl	17b9c <tcgetattr@plt+0x6a38>
   181c8:	b	181e0 <tcgetattr@plt+0x707c>
   181cc:	ldrd	r2, [sp]
   181d0:	strd	r2, [r9]
   181d4:	orr	r4, r4, #2
   181d8:	b	17ee8 <tcgetattr@plt+0x6d84>
   181dc:	mov	r0, #0
   181e0:	orr	r4, r4, r0
   181e4:	ldr	r3, [r6]
   181e8:	add	r2, r3, r7
   181ec:	str	r2, [r6]
   181f0:	ldrb	r3, [r3, r7]
   181f4:	cmp	r3, #0
   181f8:	orrne	r4, r4, #2
   181fc:	b	17ee0 <tcgetattr@plt+0x6d7c>
   18200:	mov	r4, #4
   18204:	b	17ee8 <tcgetattr@plt+0x6d84>
   18208:	mov	r4, #4
   1820c:	b	17ee8 <tcgetattr@plt+0x6d84>
   18210:	strd	r4, [sp, #-16]!
   18214:	str	r6, [sp, #8]
   18218:	str	lr, [sp, #12]
   1821c:	cmp	r1, #0
   18220:	cmpne	r0, #0
   18224:	beq	18260 <tcgetattr@plt+0x70fc>
   18228:	mov	r2, r0
   1822c:	mov	r3, r1
   18230:	umull	r4, r5, r0, r1
   18234:	adds	r1, r5, #0
   18238:	movne	r1, #1
   1823c:	cmp	r4, #0
   18240:	movlt	r1, #1
   18244:	cmp	r1, #0
   18248:	beq	18268 <tcgetattr@plt+0x7104>
   1824c:	bl	11080 <__errno_location@plt>
   18250:	mov	r3, #12
   18254:	str	r3, [r0]
   18258:	mov	r0, #0
   1825c:	b	18274 <tcgetattr@plt+0x7110>
   18260:	mov	r3, #1
   18264:	mov	r2, r3
   18268:	mov	r1, r3
   1826c:	mov	r0, r2
   18270:	bl	10e94 <calloc@plt>
   18274:	ldrd	r4, [sp]
   18278:	ldr	r6, [sp, #8]
   1827c:	add	sp, sp, #12
   18280:	pop	{pc}		; (ldr pc, [sp], #4)
   18284:	str	r4, [sp, #-8]!
   18288:	str	lr, [sp, #4]
   1828c:	cmp	r0, #0
   18290:	beq	182ac <tcgetattr@plt+0x7148>
   18294:	bge	182b0 <tcgetattr@plt+0x714c>
   18298:	bl	11080 <__errno_location@plt>
   1829c:	mov	r3, #12
   182a0:	str	r3, [r0]
   182a4:	mov	r0, #0
   182a8:	b	182b4 <tcgetattr@plt+0x7150>
   182ac:	mov	r0, #1
   182b0:	bl	10ff0 <malloc@plt>
   182b4:	ldr	r4, [sp]
   182b8:	add	sp, sp, #4
   182bc:	pop	{pc}		; (ldr pc, [sp], #4)
   182c0:	str	r4, [sp, #-8]!
   182c4:	str	lr, [sp, #4]
   182c8:	cmp	r0, #0
   182cc:	beq	182f0 <tcgetattr@plt+0x718c>
   182d0:	cmp	r1, #0
   182d4:	beq	182fc <tcgetattr@plt+0x7198>
   182d8:	cmp	r1, #0
   182dc:	blt	18308 <tcgetattr@plt+0x71a4>
   182e0:	bl	10f48 <realloc@plt>
   182e4:	ldr	r4, [sp]
   182e8:	add	sp, sp, #4
   182ec:	pop	{pc}		; (ldr pc, [sp], #4)
   182f0:	mov	r0, r1
   182f4:	bl	18284 <tcgetattr@plt+0x7120>
   182f8:	b	182e4 <tcgetattr@plt+0x7180>
   182fc:	bl	146a4 <tcgetattr@plt+0x3540>
   18300:	mov	r0, #0
   18304:	b	182e4 <tcgetattr@plt+0x7180>
   18308:	bl	11080 <__errno_location@plt>
   1830c:	mov	r3, #12
   18310:	str	r3, [r0]
   18314:	mov	r0, #0
   18318:	b	182e4 <tcgetattr@plt+0x7180>
   1831c:	strd	r4, [sp, #-16]!
   18320:	str	r6, [sp, #8]
   18324:	str	lr, [sp, #12]
   18328:	mov	r5, r0
   1832c:	bl	10fb4 <__fpending@plt>
   18330:	mov	r6, r0
   18334:	ldr	r4, [r5]
   18338:	and	r4, r4, #32
   1833c:	mov	r0, r5
   18340:	bl	183a8 <tcgetattr@plt+0x7244>
   18344:	cmp	r4, #0
   18348:	bne	1837c <tcgetattr@plt+0x7218>
   1834c:	cmp	r0, #0
   18350:	beq	1836c <tcgetattr@plt+0x7208>
   18354:	cmp	r6, #0
   18358:	bne	18398 <tcgetattr@plt+0x7234>
   1835c:	bl	11080 <__errno_location@plt>
   18360:	ldr	r0, [r0]
   18364:	subs	r0, r0, #9
   18368:	mvnne	r0, #0
   1836c:	ldrd	r4, [sp]
   18370:	ldr	r6, [sp, #8]
   18374:	add	sp, sp, #12
   18378:	pop	{pc}		; (ldr pc, [sp], #4)
   1837c:	cmp	r0, #0
   18380:	bne	183a0 <tcgetattr@plt+0x723c>
   18384:	bl	11080 <__errno_location@plt>
   18388:	mov	r3, #0
   1838c:	str	r3, [r0]
   18390:	mvn	r0, #0
   18394:	b	1836c <tcgetattr@plt+0x7208>
   18398:	mvn	r0, #0
   1839c:	b	1836c <tcgetattr@plt+0x7208>
   183a0:	mvn	r0, #0
   183a4:	b	1836c <tcgetattr@plt+0x7208>
   183a8:	strd	r4, [sp, #-16]!
   183ac:	str	r6, [sp, #8]
   183b0:	str	lr, [sp, #12]
   183b4:	sub	sp, sp, #8
   183b8:	mov	r4, r0
   183bc:	bl	110bc <fileno@plt>
   183c0:	cmp	r0, #0
   183c4:	blt	1843c <tcgetattr@plt+0x72d8>
   183c8:	mov	r0, r4
   183cc:	bl	11008 <__freading@plt>
   183d0:	cmp	r0, #0
   183d4:	beq	18408 <tcgetattr@plt+0x72a4>
   183d8:	mov	r0, r4
   183dc:	bl	110bc <fileno@plt>
   183e0:	mov	r3, #1
   183e4:	str	r3, [sp]
   183e8:	mov	r2, #0
   183ec:	mov	r3, #0
   183f0:	bl	10f90 <lseek64@plt>
   183f4:	mvn	r2, #0
   183f8:	mvn	r3, #0
   183fc:	cmp	r1, r3
   18400:	cmpeq	r0, r2
   18404:	beq	18448 <tcgetattr@plt+0x72e4>
   18408:	mov	r0, r4
   1840c:	bl	18464 <tcgetattr@plt+0x7300>
   18410:	cmp	r0, #0
   18414:	beq	18448 <tcgetattr@plt+0x72e4>
   18418:	bl	11080 <__errno_location@plt>
   1841c:	mov	r5, r0
   18420:	ldr	r6, [r0]
   18424:	mov	r0, r4
   18428:	bl	110d4 <fclose@plt>
   1842c:	cmp	r6, #0
   18430:	strne	r6, [r5]
   18434:	mvnne	r0, #0
   18438:	b	18450 <tcgetattr@plt+0x72ec>
   1843c:	mov	r0, r4
   18440:	bl	110d4 <fclose@plt>
   18444:	b	18450 <tcgetattr@plt+0x72ec>
   18448:	mov	r0, r4
   1844c:	bl	110d4 <fclose@plt>
   18450:	add	sp, sp, #8
   18454:	ldrd	r4, [sp]
   18458:	ldr	r6, [sp, #8]
   1845c:	add	sp, sp, #12
   18460:	pop	{pc}		; (ldr pc, [sp], #4)
   18464:	str	r4, [sp, #-8]!
   18468:	str	lr, [sp, #4]
   1846c:	sub	sp, sp, #8
   18470:	subs	r4, r0, #0
   18474:	beq	18488 <tcgetattr@plt+0x7324>
   18478:	mov	r0, r4
   1847c:	bl	11008 <__freading@plt>
   18480:	cmp	r0, #0
   18484:	bne	184a0 <tcgetattr@plt+0x733c>
   18488:	mov	r0, r4
   1848c:	bl	10ec4 <fflush@plt>
   18490:	add	sp, sp, #8
   18494:	ldr	r4, [sp]
   18498:	add	sp, sp, #4
   1849c:	pop	{pc}		; (ldr pc, [sp], #4)
   184a0:	ldr	r3, [r4]
   184a4:	tst	r3, #256	; 0x100
   184a8:	bne	184b8 <tcgetattr@plt+0x7354>
   184ac:	mov	r0, r4
   184b0:	bl	10ec4 <fflush@plt>
   184b4:	b	18490 <tcgetattr@plt+0x732c>
   184b8:	mov	r3, #1
   184bc:	str	r3, [sp]
   184c0:	mov	r2, #0
   184c4:	mov	r3, #0
   184c8:	mov	r0, r4
   184cc:	bl	184d4 <tcgetattr@plt+0x7370>
   184d0:	b	184ac <tcgetattr@plt+0x7348>
   184d4:	str	r4, [sp, #-16]!
   184d8:	strd	r6, [sp, #4]
   184dc:	str	lr, [sp, #12]
   184e0:	sub	sp, sp, #8
   184e4:	mov	r4, r0
   184e8:	mov	r6, r2
   184ec:	mov	r7, r3
   184f0:	ldr	r2, [r0, #8]
   184f4:	ldr	r3, [r0, #4]
   184f8:	cmp	r2, r3
   184fc:	beq	1852c <tcgetattr@plt+0x73c8>
   18500:	ldr	r3, [sp, #24]
   18504:	str	r3, [sp]
   18508:	mov	r2, r6
   1850c:	mov	r3, r7
   18510:	mov	r0, r4
   18514:	bl	110e0 <fseeko64@plt>
   18518:	add	sp, sp, #8
   1851c:	ldr	r4, [sp]
   18520:	ldrd	r6, [sp, #4]
   18524:	add	sp, sp, #12
   18528:	pop	{pc}		; (ldr pc, [sp], #4)
   1852c:	ldr	r2, [r0, #20]
   18530:	ldr	r3, [r0, #16]
   18534:	cmp	r2, r3
   18538:	bne	18500 <tcgetattr@plt+0x739c>
   1853c:	ldr	r3, [r0, #36]	; 0x24
   18540:	cmp	r3, #0
   18544:	bne	18500 <tcgetattr@plt+0x739c>
   18548:	bl	110bc <fileno@plt>
   1854c:	ldr	r3, [sp, #24]
   18550:	str	r3, [sp]
   18554:	mov	r2, r6
   18558:	mov	r3, r7
   1855c:	bl	10f90 <lseek64@plt>
   18560:	mvn	r2, #0
   18564:	mvn	r3, #0
   18568:	cmp	r1, r3
   1856c:	cmpeq	r0, r2
   18570:	beq	1858c <tcgetattr@plt+0x7428>
   18574:	ldr	r3, [r4]
   18578:	bic	r3, r3, #16
   1857c:	str	r3, [r4]
   18580:	strd	r0, [r4, #80]	; 0x50
   18584:	mov	r0, #0
   18588:	b	18518 <tcgetattr@plt+0x73b4>
   1858c:	mvn	r0, #0
   18590:	b	18518 <tcgetattr@plt+0x73b4>
   18594:	str	r4, [sp, #-8]!
   18598:	str	lr, [sp, #4]
   1859c:	mov	r0, #14
   185a0:	bl	1111c <nl_langinfo@plt>
   185a4:	cmp	r0, #0
   185a8:	beq	185cc <tcgetattr@plt+0x7468>
   185ac:	ldrb	r2, [r0]
   185b0:	movw	r3, #48968	; 0xbf48
   185b4:	movt	r3, #1
   185b8:	cmp	r2, #0
   185bc:	moveq	r0, r3
   185c0:	ldr	r4, [sp]
   185c4:	add	sp, sp, #4
   185c8:	pop	{pc}		; (ldr pc, [sp], #4)
   185cc:	movw	r0, #48968	; 0xbf48
   185d0:	movt	r0, #1
   185d4:	b	185c0 <tcgetattr@plt+0x745c>
   185d8:	strd	r4, [sp, #-20]!	; 0xffffffec
   185dc:	strd	r6, [sp, #8]
   185e0:	str	lr, [sp, #16]
   185e4:	sub	sp, sp, #12
   185e8:	mov	r7, r1
   185ec:	mov	r5, r2
   185f0:	subs	r6, r0, #0
   185f4:	addeq	r6, sp, #4
   185f8:	mov	r0, r6
   185fc:	bl	10fc0 <mbrtowc@plt>
   18600:	mov	r4, r0
   18604:	cmp	r5, #0
   18608:	cmnne	r0, #3
   1860c:	bhi	18628 <tcgetattr@plt+0x74c4>
   18610:	mov	r0, r4
   18614:	add	sp, sp, #12
   18618:	ldrd	r4, [sp]
   1861c:	ldrd	r6, [sp, #8]
   18620:	add	sp, sp, #16
   18624:	pop	{pc}		; (ldr pc, [sp], #4)
   18628:	mov	r0, #0
   1862c:	bl	18684 <tcgetattr@plt+0x7520>
   18630:	cmp	r0, #0
   18634:	bne	18610 <tcgetattr@plt+0x74ac>
   18638:	ldrb	r3, [r7]
   1863c:	str	r3, [r6]
   18640:	mov	r4, #1
   18644:	b	18610 <tcgetattr@plt+0x74ac>
   18648:	str	r4, [sp, #-8]!
   1864c:	str	lr, [sp, #4]
   18650:	umull	r2, r3, r1, r2
   18654:	cmp	r3, #0
   18658:	bne	18670 <tcgetattr@plt+0x750c>
   1865c:	mov	r1, r2
   18660:	bl	182c0 <tcgetattr@plt+0x715c>
   18664:	ldr	r4, [sp]
   18668:	add	sp, sp, #4
   1866c:	pop	{pc}		; (ldr pc, [sp], #4)
   18670:	bl	11080 <__errno_location@plt>
   18674:	mov	r3, #12
   18678:	str	r3, [r0]
   1867c:	mov	r0, #0
   18680:	b	18664 <tcgetattr@plt+0x7500>
   18684:	push	{lr}		; (str lr, [sp, #-4]!)
   18688:	sub	sp, sp, #268	; 0x10c
   1868c:	movw	r2, #257	; 0x101
   18690:	add	r1, sp, #4
   18694:	bl	186e0 <tcgetattr@plt+0x757c>
   18698:	cmp	r0, #0
   1869c:	movne	r0, #0
   186a0:	bne	186d8 <tcgetattr@plt+0x7574>
   186a4:	movw	r1, #48976	; 0xbf50
   186a8:	movt	r1, #1
   186ac:	add	r0, sp, #4
   186b0:	bl	10eac <strcmp@plt>
   186b4:	cmp	r0, #0
   186b8:	beq	186d4 <tcgetattr@plt+0x7570>
   186bc:	movw	r1, #48980	; 0xbf54
   186c0:	movt	r1, #1
   186c4:	add	r0, sp, #4
   186c8:	bl	10eac <strcmp@plt>
   186cc:	adds	r0, r0, #0
   186d0:	movne	r0, #1
   186d4:	and	r0, r0, #1
   186d8:	add	sp, sp, #268	; 0x10c
   186dc:	pop	{pc}		; (ldr pc, [sp], #4)
   186e0:	strd	r4, [sp, #-16]!
   186e4:	str	r6, [sp, #8]
   186e8:	str	lr, [sp, #12]
   186ec:	mov	r6, r1
   186f0:	mov	r4, r2
   186f4:	mov	r1, #0
   186f8:	bl	11104 <setlocale@plt>
   186fc:	subs	r5, r0, #0
   18700:	beq	18744 <tcgetattr@plt+0x75e0>
   18704:	mov	r0, r5
   18708:	bl	11050 <strlen@plt>
   1870c:	cmp	r4, r0
   18710:	bhi	18760 <tcgetattr@plt+0x75fc>
   18714:	cmp	r4, #0
   18718:	moveq	r0, #34	; 0x22
   1871c:	beq	18774 <tcgetattr@plt+0x7610>
   18720:	sub	r4, r4, #1
   18724:	mov	r2, r4
   18728:	mov	r1, r5
   1872c:	mov	r0, r6
   18730:	bl	10ee8 <memcpy@plt>
   18734:	mov	r3, #0
   18738:	strb	r3, [r6, r4]
   1873c:	mov	r0, #34	; 0x22
   18740:	b	18774 <tcgetattr@plt+0x7610>
   18744:	cmp	r4, #0
   18748:	moveq	r0, #22
   1874c:	beq	18774 <tcgetattr@plt+0x7610>
   18750:	mov	r3, #0
   18754:	strb	r3, [r6]
   18758:	mov	r0, #22
   1875c:	b	18774 <tcgetattr@plt+0x7610>
   18760:	add	r2, r0, #1
   18764:	mov	r1, r5
   18768:	mov	r0, r6
   1876c:	bl	10ee8 <memcpy@plt>
   18770:	mov	r0, #0
   18774:	ldrd	r4, [sp]
   18778:	ldr	r6, [sp, #8]
   1877c:	add	sp, sp, #12
   18780:	pop	{pc}		; (ldr pc, [sp], #4)
   18784:	str	r4, [sp, #-8]!
   18788:	str	lr, [sp, #4]
   1878c:	mov	r1, #0
   18790:	bl	11104 <setlocale@plt>
   18794:	ldr	r4, [sp]
   18798:	add	sp, sp, #4
   1879c:	pop	{pc}		; (ldr pc, [sp], #4)
   187a0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   187a4:	mov	r7, r0
   187a8:	ldr	r6, [pc, #72]	; 187f8 <tcgetattr@plt+0x7694>
   187ac:	ldr	r5, [pc, #72]	; 187fc <tcgetattr@plt+0x7698>
   187b0:	add	r6, pc, r6
   187b4:	add	r5, pc, r5
   187b8:	sub	r6, r6, r5
   187bc:	mov	r8, r1
   187c0:	mov	r9, r2
   187c4:	bl	10e74 <calloc@plt-0x20>
   187c8:	asrs	r6, r6, #2
   187cc:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   187d0:	mov	r4, #0
   187d4:	add	r4, r4, #1
   187d8:	ldr	r3, [r5], #4
   187dc:	mov	r2, r9
   187e0:	mov	r1, r8
   187e4:	mov	r0, r7
   187e8:	blx	r3
   187ec:	cmp	r6, r4
   187f0:	bne	187d4 <tcgetattr@plt+0x7670>
   187f4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   187f8:	andeq	r4, r1, ip, asr r7
   187fc:	andeq	r4, r1, r4, asr r7
   18800:	bx	lr
   18804:	ldr	r3, [pc, #12]	; 18818 <tcgetattr@plt+0x76b4>
   18808:	mov	r1, #0
   1880c:	add	r3, pc, r3
   18810:	ldr	r2, [r3]
   18814:	b	1108c <__cxa_atexit@plt>
   18818:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>

Disassembly of section .fini:

0001881c <.fini>:
   1881c:	push	{r3, lr}
   18820:	pop	{r3, pc}
