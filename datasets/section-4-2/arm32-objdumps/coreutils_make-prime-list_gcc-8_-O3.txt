
../repos/coreutils/src/make-prime-list:     file format elf32-littlearm


Disassembly of section .init:

0001056c <.init>:
   1056c:	push	{r3, lr}
   10570:	bl	10b2c <abort@plt+0x4d4>
   10574:	pop	{r3, pc}

Disassembly of section .plt:

00010578 <raise@plt-0x14>:
   10578:	push	{lr}		; (str lr, [sp, #-4]!)
   1057c:	ldr	lr, [pc, #4]	; 10588 <raise@plt-0x4>
   10580:	add	lr, pc, lr
   10584:	ldr	pc, [lr, #8]!
   10588:	andeq	r1, r1, r8, ror sl

0001058c <raise@plt>:
   1058c:	add	ip, pc, #0, 12
   10590:	add	ip, ip, #69632	; 0x11000
   10594:	ldr	pc, [ip, #2680]!	; 0xa78

00010598 <strtol@plt>:
   10598:	add	ip, pc, #0, 12
   1059c:	add	ip, ip, #69632	; 0x11000
   105a0:	ldr	pc, [ip, #2672]!	; 0xa70

000105a4 <free@plt>:
   105a4:	add	ip, pc, #0, 12
   105a8:	add	ip, ip, #69632	; 0x11000
   105ac:	ldr	pc, [ip, #2664]!	; 0xa68

000105b0 <ferror@plt>:
   105b0:	add	ip, pc, #0, 12
   105b4:	add	ip, ip, #69632	; 0x11000
   105b8:	ldr	pc, [ip, #2656]!	; 0xa60

000105bc <fwrite@plt>:
   105bc:	add	ip, pc, #0, 12
   105c0:	add	ip, ip, #69632	; 0x11000
   105c4:	ldr	pc, [ip, #2648]!	; 0xa58

000105c8 <puts@plt>:
   105c8:	add	ip, pc, #0, 12
   105cc:	add	ip, ip, #69632	; 0x11000
   105d0:	ldr	pc, [ip, #2640]!	; 0xa50

000105d4 <malloc@plt>:
   105d4:	add	ip, pc, #0, 12
   105d8:	add	ip, ip, #69632	; 0x11000
   105dc:	ldr	pc, [ip, #2632]!	; 0xa48

000105e0 <__libc_start_main@plt>:
   105e0:	add	ip, pc, #0, 12
   105e4:	add	ip, ip, #69632	; 0x11000
   105e8:	ldr	pc, [ip, #2624]!	; 0xa40

000105ec <strerror@plt>:
   105ec:	add	ip, pc, #0, 12
   105f0:	add	ip, ip, #69632	; 0x11000
   105f4:	ldr	pc, [ip, #2616]!	; 0xa38

000105f8 <__gmon_start__@plt>:
   105f8:	add	ip, pc, #0, 12
   105fc:	add	ip, ip, #69632	; 0x11000
   10600:	ldr	pc, [ip, #2608]!	; 0xa30

00010604 <exit@plt>:
   10604:	add	ip, pc, #0, 12
   10608:	add	ip, ip, #69632	; 0x11000
   1060c:	ldr	pc, [ip, #2600]!	; 0xa28

00010610 <__errno_location@plt>:
   10610:	add	ip, pc, #0, 12
   10614:	add	ip, ip, #69632	; 0x11000
   10618:	ldr	pc, [ip, #2592]!	; 0xa20

0001061c <memset@plt>:
   1061c:	add	ip, pc, #0, 12
   10620:	add	ip, ip, #69632	; 0x11000
   10624:	ldr	pc, [ip, #2584]!	; 0xa18

00010628 <putchar@plt>:
   10628:	add	ip, pc, #0, 12
   1062c:	add	ip, ip, #69632	; 0x11000
   10630:	ldr	pc, [ip, #2576]!	; 0xa10

00010634 <__printf_chk@plt>:
   10634:	add	ip, pc, #0, 12
   10638:	add	ip, ip, #69632	; 0x11000
   1063c:	ldr	pc, [ip, #2568]!	; 0xa08

00010640 <__fprintf_chk@plt>:
   10640:	add	ip, pc, #0, 12
   10644:	add	ip, ip, #69632	; 0x11000
   10648:	ldr	pc, [ip, #2560]!	; 0xa00

0001064c <fclose@plt>:
   1064c:	add	ip, pc, #0, 12
   10650:	add	ip, ip, #69632	; 0x11000
   10654:	ldr	pc, [ip, #2552]!	; 0x9f8

00010658 <abort@plt>:
   10658:	add	ip, pc, #0, 12
   1065c:	add	ip, ip, #69632	; 0x11000
   10660:	ldr	pc, [ip, #2544]!	; 0x9f0

Disassembly of section .text:

00010664 <.text>:
   10664:	cmp	r0, #2
   10668:	mov	r3, r1
   1066c:	strd	r4, [sp, #-36]!	; 0xffffffdc
   10670:	strd	r6, [sp, #8]
   10674:	strd	r8, [sp, #16]
   10678:	strd	sl, [sp, #24]
   1067c:	str	lr, [sp, #32]
   10680:	sub	sp, sp, #28
   10684:	beq	106c8 <abort@plt+0x70>
   10688:	movw	r0, #8288	; 0x2060
   1068c:	movt	r0, #2
   10690:	ldr	r3, [r3]
   10694:	movw	r2, #3944	; 0xf68
   10698:	movt	r2, #1
   1069c:	mov	r1, #1
   106a0:	ldr	r0, [r0]
   106a4:	bl	10640 <__fprintf_chk@plt>
   106a8:	mov	r0, #1
   106ac:	add	sp, sp, #28
   106b0:	ldrd	r4, [sp]
   106b4:	ldrd	r6, [sp, #8]
   106b8:	ldrd	r8, [sp, #16]
   106bc:	ldrd	sl, [sp, #24]
   106c0:	add	sp, sp, #32
   106c4:	pop	{pc}		; (ldr pc, [sp], #4)
   106c8:	mov	r2, #10
   106cc:	mov	r1, #0
   106d0:	ldr	r0, [r3, #4]
   106d4:	bl	10598 <strtol@plt>
   106d8:	cmp	r0, #2
   106dc:	ble	10980 <abort@plt+0x328>
   106e0:	tst	r0, #1
   106e4:	beq	10988 <abort@plt+0x330>
   106e8:	sub	r0, r0, #1
   106ec:	asr	r6, r0, #1
   106f0:	mov	r0, r6
   106f4:	bl	10cf4 <abort@plt+0x69c>
   106f8:	mov	r2, r6
   106fc:	mov	r1, #1
   10700:	str	r0, [sp, #12]
   10704:	bl	1061c <memset@plt>
   10708:	mov	r0, #24
   1070c:	mul	r0, r0, r6
   10710:	bl	10cf4 <abort@plt+0x69c>
   10714:	str	r0, [sp, #20]
   10718:	mov	r3, #0
   1071c:	movw	r2, #32177	; 0x7db1
   10720:	movt	r2, #62777	; 0xf539
   10724:	mov	r5, r3
   10728:	mov	r7, r3
   1072c:	str	r3, [sp, #8]
   10730:	ldr	r3, [sp, #20]
   10734:	str	r3, [sp, #4]
   10738:	str	r2, [sp, #16]
   1073c:	ldr	r3, [sp, #8]
   10740:	lsl	r4, r5, #1
   10744:	mov	r9, #0
   10748:	add	r4, r4, #3
   1074c:	ubfx	r8, r4, #1, #3
   10750:	add	r3, r3, #1
   10754:	lsl	r8, r8, #2
   10758:	str	r3, [sp, #8]
   1075c:	ldr	r3, [sp, #4]
   10760:	str	r4, [r3]
   10764:	ldr	r3, [sp, #16]
   10768:	lsr	r8, r3, r8
   1076c:	b	10778 <abort@plt+0x120>
   10770:	mov	r8, sl
   10774:	mov	r9, fp
   10778:	mul	r3, r8, r9
   1077c:	adds	ip, r8, r8
   10780:	umull	r0, r1, r8, r8
   10784:	adc	lr, r9, r9
   10788:	add	r1, r1, r3, lsl #1
   1078c:	umull	r2, r3, r0, r4
   10790:	mla	r3, r4, r1, r3
   10794:	subs	sl, ip, r2
   10798:	sbc	fp, lr, r3
   1079c:	cmp	r9, fp
   107a0:	cmpeq	r8, sl
   107a4:	bne	10770 <abort@plt+0x118>
   107a8:	ldr	r1, [sp, #4]
   107ac:	mov	r2, r4
   107b0:	mov	r3, #0
   107b4:	mvn	r0, #0
   107b8:	strd	r8, [r1, #8]
   107bc:	mvn	r1, #0
   107c0:	bl	10d3c <abort@plt+0x6e4>
   107c4:	mul	r3, r4, r4
   107c8:	ldr	r2, [sp, #4]
   107cc:	sub	r3, r3, #3
   107d0:	lsr	r3, r3, #1
   107d4:	strd	r0, [r2, #16]
   107d8:	cmp	r3, r6
   107dc:	ldrcc	r2, [sp, #12]
   107e0:	bcs	107f4 <abort@plt+0x19c>
   107e4:	strb	r7, [r2, r3]
   107e8:	add	r3, r3, r4
   107ec:	cmp	r3, r6
   107f0:	bcc	107e4 <abort@plt+0x18c>
   107f4:	ldr	r3, [sp, #12]
   107f8:	add	r3, r3, r5
   107fc:	b	1080c <abort@plt+0x1b4>
   10800:	ldrb	r2, [r3, #1]!
   10804:	cmp	r2, #0
   10808:	bne	109c8 <abort@plt+0x370>
   1080c:	add	r5, r5, #1
   10810:	cmp	r5, r6
   10814:	bcc	10800 <abort@plt+0x1a8>
   10818:	movw	r0, #4000	; 0xfa0
   1081c:	movt	r0, #1
   10820:	bl	105c8 <puts@plt>
   10824:	movw	r1, #4040	; 0xfc8
   10828:	movt	r1, #1
   1082c:	mov	r2, #64	; 0x40
   10830:	mov	r0, #1
   10834:	bl	10634 <__printf_chk@plt>
   10838:	ldr	r3, [sp, #8]
   1083c:	cmp	r3, #0
   10840:	beq	109e0 <abort@plt+0x388>
   10844:	movw	r2, #3880	; 0xf28
   10848:	movt	r2, #1
   1084c:	ldr	r5, [sp, #20]
   10850:	movw	sl, #4068	; 0xfe4
   10854:	movt	sl, #1
   10858:	str	r2, [sp, #4]
   1085c:	movw	r2, #4108	; 0x100c
   10860:	movt	r2, #1
   10864:	add	fp, r3, #8
   10868:	mov	r6, #8
   1086c:	mov	r8, r3
   10870:	str	r2, [sp, #16]
   10874:	mov	r2, #2
   10878:	b	108e0 <abort@plt+0x288>
   1087c:	mov	r1, r3
   10880:	mov	r0, r9
   10884:	mov	r3, #64	; 0x40
   10888:	mov	r2, #1
   1088c:	bl	10be0 <abort@plt+0x588>
   10890:	mov	r2, #28
   10894:	mov	r0, #1
   10898:	ldr	r1, [sp, #4]
   1089c:	bl	10634 <__printf_chk@plt>
   108a0:	mov	r3, r7
   108a4:	mov	r2, #7
   108a8:	mov	r0, #1
   108ac:	movw	r1, #3908	; 0xf44
   108b0:	movt	r1, #1
   108b4:	add	r6, r6, r0
   108b8:	bl	10634 <__printf_chk@plt>
   108bc:	mov	r2, r4
   108c0:	movw	r1, #4084	; 0xff4
   108c4:	movt	r1, #1
   108c8:	mov	r0, #1
   108cc:	bl	10634 <__printf_chk@plt>
   108d0:	cmp	fp, r6
   108d4:	add	r5, r5, #24
   108d8:	mov	r2, r4
   108dc:	beq	109e4 <abort@plt+0x38c>
   108e0:	cmp	r8, r6
   108e4:	ldr	r4, [r5]
   108e8:	bls	109d8 <abort@plt+0x380>
   108ec:	ldr	r3, [r5, #192]	; 0xc0
   108f0:	sub	r3, r3, r4
   108f4:	cmp	r3, #255	; 0xff
   108f8:	bhi	10aec <abort@plt+0x494>
   108fc:	sub	r2, r4, r2
   10900:	mov	r1, sl
   10904:	mov	r0, #1
   10908:	bl	10634 <__printf_chk@plt>
   1090c:	ldrd	r2, [r5, #8]
   10910:	mov	r1, #0
   10914:	bic	r7, r2, #-268435456	; 0xf0000000
   10918:	cmp	r3, r1
   1091c:	cmpeq	r2, r7
   10920:	beq	108a0 <abort@plt+0x248>
   10924:	lsr	r0, r3, #24
   10928:	mov	r1, #0
   1092c:	lsr	r9, r2, #28
   10930:	orrs	r2, r0, r1
   10934:	orr	r9, r9, r3, lsl #4
   10938:	lsr	r3, r3, #28
   1093c:	beq	1087c <abort@plt+0x224>
   10940:	mov	r0, #40	; 0x28
   10944:	str	r3, [sp, #8]
   10948:	bl	10628 <putchar@plt>
   1094c:	ldr	r3, [sp, #8]
   10950:	mov	r0, r9
   10954:	mov	r2, #1
   10958:	mov	r1, r3
   1095c:	mov	r3, #64	; 0x40
   10960:	bl	10be0 <abort@plt+0x588>
   10964:	movw	r1, #3872	; 0xf20
   10968:	movt	r1, #1
   1096c:	ldr	r3, [sp, #16]
   10970:	mov	r2, #3
   10974:	mov	r0, #1
   10978:	bl	10634 <__printf_chk@plt>
   1097c:	b	10890 <abort@plt+0x238>
   10980:	mov	r0, #0
   10984:	b	106ac <abort@plt+0x54>
   10988:	sub	r0, r0, #2
   1098c:	asr	r6, r0, #1
   10990:	mov	r0, r6
   10994:	bl	10cf4 <abort@plt+0x69c>
   10998:	mov	r2, r6
   1099c:	mov	r1, #1
   109a0:	str	r0, [sp, #12]
   109a4:	bl	1061c <memset@plt>
   109a8:	mov	r0, #24
   109ac:	mul	r0, r0, r6
   109b0:	bl	10cf4 <abort@plt+0x69c>
   109b4:	cmp	r6, #0
   109b8:	str	r0, [sp, #20]
   109bc:	streq	r6, [sp, #8]
   109c0:	bne	10718 <abort@plt+0xc0>
   109c4:	b	10818 <abort@plt+0x1c0>
   109c8:	ldr	r3, [sp, #4]
   109cc:	add	r3, r3, #24
   109d0:	str	r3, [sp, #4]
   109d4:	b	1073c <abort@plt+0xe4>
   109d8:	mov	r3, #255	; 0xff
   109dc:	b	108fc <abort@plt+0x2a4>
   109e0:	mov	r4, #2
   109e4:	movw	r0, #4112	; 0x1010
   109e8:	movt	r0, #1
   109ec:	bl	105c8 <puts@plt>
   109f0:	ldr	r6, [sp, #20]
   109f4:	add	r2, r4, #2
   109f8:	ldr	lr, [r6]
   109fc:	mul	lr, lr, lr
   10a00:	cmp	lr, r2
   10a04:	bhi	10a68 <abort@plt+0x410>
   10a08:	ldr	r4, [r6, #8]
   10a0c:	ldr	r3, [r6, #12]
   10a10:	ldrd	r0, [r6, #16]
   10a14:	umull	r4, r5, r4, r2
   10a18:	mla	r5, r2, r3, r5
   10a1c:	cmp	r5, r1
   10a20:	cmpeq	r4, r0
   10a24:	bls	10ae4 <abort@plt+0x48c>
   10a28:	mov	ip, r6
   10a2c:	b	10a54 <abort@plt+0x3fc>
   10a30:	ldr	r0, [r1, #32]
   10a34:	add	ip, ip, #24
   10a38:	ldr	r3, [r1, #36]	; 0x24
   10a3c:	ldrd	r4, [ip, #16]
   10a40:	umull	r0, r1, r0, r2
   10a44:	mla	r1, r2, r3, r1
   10a48:	cmp	r1, r5
   10a4c:	cmpeq	r0, r4
   10a50:	bls	10ae4 <abort@plt+0x48c>
   10a54:	ldr	r3, [ip, #24]
   10a58:	mov	r1, ip
   10a5c:	mul	r3, r3, r3
   10a60:	cmp	r3, r2
   10a64:	bls	10a30 <abort@plt+0x3d8>
   10a68:	movw	r1, #4160	; 0x1040
   10a6c:	movt	r1, #1
   10a70:	mov	r0, #1
   10a74:	movw	r4, #8292	; 0x2064
   10a78:	movt	r4, #2
   10a7c:	bl	10634 <__printf_chk@plt>
   10a80:	ldr	r0, [sp, #12]
   10a84:	bl	105a4 <free@plt>
   10a88:	ldr	r0, [sp, #20]
   10a8c:	bl	105a4 <free@plt>
   10a90:	ldr	r0, [r4]
   10a94:	bl	105b0 <ferror@plt>
   10a98:	mov	r5, r0
   10a9c:	ldr	r0, [r4]
   10aa0:	bl	1064c <fclose@plt>
   10aa4:	cmn	r5, r0
   10aa8:	beq	10980 <abort@plt+0x328>
   10aac:	movw	r3, #8288	; 0x2060
   10ab0:	movt	r3, #2
   10ab4:	ldr	r4, [r3]
   10ab8:	bl	10610 <__errno_location@plt>
   10abc:	ldr	r0, [r0]
   10ac0:	bl	105ec <strerror@plt>
   10ac4:	mov	r3, r0
   10ac8:	movw	r2, #4140	; 0x102c
   10acc:	movt	r2, #1
   10ad0:	mov	r0, r4
   10ad4:	mov	r1, #1
   10ad8:	bl	10640 <__fprintf_chk@plt>
   10adc:	mov	r0, #1
   10ae0:	b	106ac <abort@plt+0x54>
   10ae4:	add	r2, r2, #2
   10ae8:	b	10a00 <abort@plt+0x3a8>
   10aec:	bl	10658 <abort@plt>
   10af0:	mov	fp, #0
   10af4:	mov	lr, #0
   10af8:	pop	{r1}		; (ldr r1, [sp], #4)
   10afc:	mov	r2, sp
   10b00:	push	{r2}		; (str r2, [sp, #-4]!)
   10b04:	push	{r0}		; (str r0, [sp, #-4]!)
   10b08:	ldr	ip, [pc, #16]	; 10b20 <abort@plt+0x4c8>
   10b0c:	push	{ip}		; (str ip, [sp, #-4]!)
   10b10:	ldr	r0, [pc, #12]	; 10b24 <abort@plt+0x4cc>
   10b14:	ldr	r3, [pc, #12]	; 10b28 <abort@plt+0x4d0>
   10b18:	bl	105e0 <__libc_start_main@plt>
   10b1c:	bl	10658 <abort@plt>
   10b20:	andeq	r0, r1, r0, lsl pc
   10b24:	andeq	r0, r1, r4, ror #12
   10b28:			; <UNDEFINED> instruction: 0x00010eb0
   10b2c:	ldr	r3, [pc, #20]	; 10b48 <abort@plt+0x4f0>
   10b30:	ldr	r2, [pc, #20]	; 10b4c <abort@plt+0x4f4>
   10b34:	add	r3, pc, r3
   10b38:	ldr	r2, [r3, r2]
   10b3c:	cmp	r2, #0
   10b40:	bxeq	lr
   10b44:	b	105f8 <__gmon_start__@plt>
   10b48:	andeq	r1, r1, r4, asr #9
   10b4c:	andeq	r0, r0, r4, asr r0
   10b50:	ldr	r0, [pc, #24]	; 10b70 <abort@plt+0x518>
   10b54:	ldr	r3, [pc, #24]	; 10b74 <abort@plt+0x51c>
   10b58:	cmp	r3, r0
   10b5c:	bxeq	lr
   10b60:	ldr	r3, [pc, #16]	; 10b78 <abort@plt+0x520>
   10b64:	cmp	r3, #0
   10b68:	bxeq	lr
   10b6c:	bx	r3
   10b70:	andeq	r2, r2, r0, rrx
   10b74:	andeq	r2, r2, r0, rrx
   10b78:	andeq	r0, r0, r0
   10b7c:	ldr	r0, [pc, #36]	; 10ba8 <abort@plt+0x550>
   10b80:	ldr	r1, [pc, #36]	; 10bac <abort@plt+0x554>
   10b84:	sub	r1, r1, r0
   10b88:	asr	r1, r1, #2
   10b8c:	add	r1, r1, r1, lsr #31
   10b90:	asrs	r1, r1, #1
   10b94:	bxeq	lr
   10b98:	ldr	r3, [pc, #16]	; 10bb0 <abort@plt+0x558>
   10b9c:	cmp	r3, #0
   10ba0:	bxeq	lr
   10ba4:	bx	r3
   10ba8:	andeq	r2, r2, r0, rrx
   10bac:	andeq	r2, r2, r0, rrx
   10bb0:	andeq	r0, r0, r0
   10bb4:	push	{r4, lr}
   10bb8:	ldr	r4, [pc, #24]	; 10bd8 <abort@plt+0x580>
   10bbc:	ldrb	r3, [r4]
   10bc0:	cmp	r3, #0
   10bc4:	popne	{r4, pc}
   10bc8:	bl	10b50 <abort@plt+0x4f8>
   10bcc:	mov	r3, #1
   10bd0:	strb	r3, [r4]
   10bd4:	pop	{r4, pc}
   10bd8:	andeq	r2, r2, r8, rrx
   10bdc:	b	10b7c <abort@plt+0x524>
   10be0:	strd	r4, [sp, #-36]!	; 0xffffffdc
   10be4:	bic	r5, r0, #-268435456	; 0xf0000000
   10be8:	mov	r4, r3
   10bec:	strd	r6, [sp, #8]
   10bf0:	mov	r7, #0
   10bf4:	cmp	r7, r1
   10bf8:	strd	r8, [sp, #16]
   10bfc:	mov	r9, r2
   10c00:	cmpeq	r5, r0
   10c04:	strd	sl, [sp, #24]
   10c08:	str	lr, [sp, #32]
   10c0c:	sub	sp, sp, #4
   10c10:	beq	10cc8 <abort@plt+0x670>
   10c14:	lsr	r6, r1, #24
   10c18:	mov	r7, #0
   10c1c:	add	fp, r2, #1
   10c20:	lsr	r8, r0, #28
   10c24:	orrs	r2, r6, r7
   10c28:	lsr	sl, r1, #28
   10c2c:	orr	r8, r8, r1, lsl #4
   10c30:	bne	10c8c <abort@plt+0x634>
   10c34:	mov	r2, fp
   10c38:	mov	r0, r8
   10c3c:	mov	r1, sl
   10c40:	bl	10be0 <abort@plt+0x588>
   10c44:	mov	r2, #28
   10c48:	movw	r1, #3880	; 0xf28
   10c4c:	movt	r1, #1
   10c50:	mov	r0, #1
   10c54:	bl	10634 <__printf_chk@plt>
   10c58:	mov	r2, #7
   10c5c:	mov	r3, r5
   10c60:	movw	r1, #3908	; 0xf44
   10c64:	movt	r1, #1
   10c68:	mov	r0, #1
   10c6c:	add	sp, sp, #4
   10c70:	ldrd	r4, [sp]
   10c74:	ldrd	r6, [sp, #8]
   10c78:	ldrd	r8, [sp, #16]
   10c7c:	ldrd	sl, [sp, #24]
   10c80:	ldr	lr, [sp, #32]
   10c84:	add	sp, sp, #36	; 0x24
   10c88:	b	10634 <__printf_chk@plt>
   10c8c:	mov	r0, #40	; 0x28
   10c90:	bl	10628 <putchar@plt>
   10c94:	mov	r3, r4
   10c98:	mov	r2, fp
   10c9c:	mov	r0, r8
   10ca0:	mov	r1, sl
   10ca4:	bl	10be0 <abort@plt+0x588>
   10ca8:	add	r2, r9, #3
   10cac:	movw	r3, #4108	; 0x100c
   10cb0:	movt	r3, #1
   10cb4:	movw	r1, #3872	; 0xf20
   10cb8:	movt	r1, #1
   10cbc:	mov	r0, #1
   10cc0:	bl	10634 <__printf_chk@plt>
   10cc4:	b	10c44 <abort@plt+0x5ec>
   10cc8:	cmp	r2, #0
   10ccc:	moveq	r2, #7
   10cd0:	beq	10c5c <abort@plt+0x604>
   10cd4:	movw	r1, #3892	; 0xf34
   10cd8:	movt	r1, #1
   10cdc:	mov	r0, #1
   10ce0:	bl	10634 <__printf_chk@plt>
   10ce4:	sub	r2, r4, #1
   10ce8:	and	r2, r2, #3
   10cec:	add	r2, r2, #1
   10cf0:	b	10c5c <abort@plt+0x604>
   10cf4:	str	r4, [sp, #-8]!
   10cf8:	str	lr, [sp, #4]
   10cfc:	bl	105d4 <malloc@plt>
   10d00:	cmp	r0, #0
   10d04:	beq	10d14 <abort@plt+0x6bc>
   10d08:	ldr	r4, [sp]
   10d0c:	add	sp, sp, #4
   10d10:	pop	{pc}		; (ldr pc, [sp], #4)
   10d14:	movw	r3, #8288	; 0x2060
   10d18:	movt	r3, #2
   10d1c:	movw	r0, #3916	; 0xf4c
   10d20:	movt	r0, #1
   10d24:	ldr	r3, [r3]
   10d28:	mov	r2, #26
   10d2c:	mov	r1, #1
   10d30:	bl	105bc <fwrite@plt>
   10d34:	mov	r0, #1
   10d38:	bl	10604 <exit@plt>
   10d3c:	cmp	r3, #0
   10d40:	cmpeq	r2, #0
   10d44:	bne	10d5c <abort@plt+0x704>
   10d48:	cmp	r1, #0
   10d4c:	cmpeq	r0, #0
   10d50:	mvnne	r1, #0
   10d54:	mvnne	r0, #0
   10d58:	b	10d78 <abort@plt+0x720>
   10d5c:	sub	sp, sp, #8
   10d60:	push	{sp, lr}
   10d64:	bl	10d88 <abort@plt+0x730>
   10d68:	ldr	lr, [sp, #4]
   10d6c:	add	sp, sp, #8
   10d70:	pop	{r2, r3}
   10d74:	bx	lr
   10d78:	push	{r1, lr}
   10d7c:	mov	r0, #8
   10d80:	bl	1058c <raise@plt>
   10d84:	pop	{r1, pc}
   10d88:	cmp	r1, r3
   10d8c:	cmpeq	r0, r2
   10d90:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10d94:	mov	r4, r0
   10d98:	movcc	r0, #0
   10d9c:	mov	r5, r1
   10da0:	ldr	lr, [sp, #36]	; 0x24
   10da4:	movcc	r1, r0
   10da8:	bcc	10ea4 <abort@plt+0x84c>
   10dac:	cmp	r3, #0
   10db0:	clzeq	ip, r2
   10db4:	clzne	ip, r3
   10db8:	addeq	ip, ip, #32
   10dbc:	cmp	r5, #0
   10dc0:	clzeq	r1, r4
   10dc4:	addeq	r1, r1, #32
   10dc8:	clzne	r1, r5
   10dcc:	sub	ip, ip, r1
   10dd0:	sub	sl, ip, #32
   10dd4:	lsl	r9, r3, ip
   10dd8:	rsb	fp, ip, #32
   10ddc:	orr	r9, r9, r2, lsl sl
   10de0:	orr	r9, r9, r2, lsr fp
   10de4:	lsl	r8, r2, ip
   10de8:	cmp	r5, r9
   10dec:	cmpeq	r4, r8
   10df0:	movcc	r0, #0
   10df4:	movcc	r1, r0
   10df8:	bcc	10e14 <abort@plt+0x7bc>
   10dfc:	mov	r0, #1
   10e00:	subs	r4, r4, r8
   10e04:	lsl	r1, r0, sl
   10e08:	orr	r1, r1, r0, lsr fp
   10e0c:	lsl	r0, r0, ip
   10e10:	sbc	r5, r5, r9
   10e14:	cmp	ip, #0
   10e18:	beq	10ea4 <abort@plt+0x84c>
   10e1c:	lsr	r6, r8, #1
   10e20:	orr	r6, r6, r9, lsl #31
   10e24:	lsr	r7, r9, #1
   10e28:	mov	r2, ip
   10e2c:	b	10e50 <abort@plt+0x7f8>
   10e30:	subs	r3, r4, r6
   10e34:	sbc	r8, r5, r7
   10e38:	adds	r3, r3, r3
   10e3c:	adc	r8, r8, r8
   10e40:	adds	r4, r3, #1
   10e44:	adc	r5, r8, #0
   10e48:	subs	r2, r2, #1
   10e4c:	beq	10e6c <abort@plt+0x814>
   10e50:	cmp	r5, r7
   10e54:	cmpeq	r4, r6
   10e58:	bcs	10e30 <abort@plt+0x7d8>
   10e5c:	adds	r4, r4, r4
   10e60:	adc	r5, r5, r5
   10e64:	subs	r2, r2, #1
   10e68:	bne	10e50 <abort@plt+0x7f8>
   10e6c:	lsr	r3, r4, ip
   10e70:	orr	r3, r3, r5, lsl fp
   10e74:	lsr	r2, r5, ip
   10e78:	orr	r3, r3, r5, lsr sl
   10e7c:	adds	r0, r0, r4
   10e80:	mov	r4, r3
   10e84:	lsl	r3, r2, ip
   10e88:	orr	r3, r3, r4, lsl sl
   10e8c:	lsl	ip, r4, ip
   10e90:	orr	r3, r3, r4, lsr fp
   10e94:	adc	r1, r1, r5
   10e98:	subs	r0, r0, ip
   10e9c:	mov	r5, r2
   10ea0:	sbc	r1, r1, r3
   10ea4:	cmp	lr, #0
   10ea8:	strdne	r4, [lr]
   10eac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10eb0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   10eb4:	mov	r7, r0
   10eb8:	ldr	r6, [pc, #72]	; 10f08 <abort@plt+0x8b0>
   10ebc:	ldr	r5, [pc, #72]	; 10f0c <abort@plt+0x8b4>
   10ec0:	add	r6, pc, r6
   10ec4:	add	r5, pc, r5
   10ec8:	sub	r6, r6, r5
   10ecc:	mov	r8, r1
   10ed0:	mov	r9, r2
   10ed4:	bl	1056c <raise@plt-0x20>
   10ed8:	asrs	r6, r6, #2
   10edc:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   10ee0:	mov	r4, #0
   10ee4:	add	r4, r4, #1
   10ee8:	ldr	r3, [r5], #4
   10eec:	mov	r2, r9
   10ef0:	mov	r1, r8
   10ef4:	mov	r0, r7
   10ef8:	blx	r3
   10efc:	cmp	r6, r4
   10f00:	bne	10ee4 <abort@plt+0x88c>
   10f04:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   10f08:	andeq	r1, r1, ip, asr #32
   10f0c:	andeq	r1, r1, r4, asr #32
   10f10:	bx	lr

Disassembly of section .fini:

00010f14 <.fini>:
   10f14:	push	{r3, lr}
   10f18:	pop	{r3, pc}
