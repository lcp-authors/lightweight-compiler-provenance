
../repos/prog2/MT1E1-1.1:     file format elf32-littlearm


Disassembly of section .init:

00010aec <.init>:
   10aec:	push	{r3, lr}
   10af0:	bl	10d7c <_start@@Base+0x3c>
   10af4:	pop	{r3, pc}

Disassembly of section .plt:

00010af8 <calloc@plt-0x14>:
   10af8:	push	{lr}		; (str lr, [sp, #-4]!)
   10afc:	ldr	lr, [pc, #4]	; 10b08 <calloc@plt-0x4>
   10b00:	add	lr, pc, lr
   10b04:	ldr	pc, [lr, #8]!
   10b08:	strdeq	r1, [r1], -r8

00010b0c <calloc@plt>:
   10b0c:	add	ip, pc, #0, 12
   10b10:	add	ip, ip, #69632	; 0x11000
   10b14:	ldr	pc, [ip, #1272]!	; 0x4f8

00010b18 <strcmp@plt>:
   10b18:	add	ip, pc, #0, 12
   10b1c:	add	ip, ip, #69632	; 0x11000
   10b20:	ldr	pc, [ip, #1264]!	; 0x4f0

00010b24 <printf@plt>:
   10b24:	add	ip, pc, #0, 12
   10b28:	add	ip, ip, #69632	; 0x11000
   10b2c:	ldr	pc, [ip, #1256]!	; 0x4e8

00010b30 <fopen@plt>:
   10b30:	add	ip, pc, #0, 12
   10b34:	add	ip, ip, #69632	; 0x11000
   10b38:	ldr	pc, [ip, #1248]!	; 0x4e0

00010b3c <free@plt>:
   10b3c:	add	ip, pc, #0, 12
   10b40:	add	ip, ip, #69632	; 0x11000
   10b44:	ldr	pc, [ip, #1240]!	; 0x4d8

00010b48 <fgets@plt>:
   10b48:	add	ip, pc, #0, 12
   10b4c:	add	ip, ip, #69632	; 0x11000
   10b50:	ldr	pc, [ip, #1232]!	; 0x4d0

00010b54 <realloc@plt>:
   10b54:	add	ip, pc, #0, 12
   10b58:	add	ip, ip, #69632	; 0x11000
   10b5c:	ldr	pc, [ip, #1224]!	; 0x4c8

00010b60 <strcpy@plt>:
   10b60:	add	ip, pc, #0, 12
   10b64:	add	ip, ip, #69632	; 0x11000
   10b68:	ldr	pc, [ip, #1216]!	; 0x4c0

00010b6c <puts@plt>:
   10b6c:	add	ip, pc, #0, 12
   10b70:	add	ip, ip, #69632	; 0x11000
   10b74:	ldr	pc, [ip, #1208]!	; 0x4b8

00010b78 <malloc@plt>:
   10b78:	add	ip, pc, #0, 12
   10b7c:	add	ip, ip, #69632	; 0x11000
   10b80:	ldr	pc, [ip, #1200]!	; 0x4b0

00010b84 <__libc_start_main@plt>:
   10b84:	add	ip, pc, #0, 12
   10b88:	add	ip, ip, #69632	; 0x11000
   10b8c:	ldr	pc, [ip, #1192]!	; 0x4a8

00010b90 <__gmon_start__@plt>:
   10b90:	add	ip, pc, #0, 12
   10b94:	add	ip, ip, #69632	; 0x11000
   10b98:	ldr	pc, [ip, #1184]!	; 0x4a0

00010b9c <feof@plt>:
   10b9c:	add	ip, pc, #0, 12
   10ba0:	add	ip, ip, #69632	; 0x11000
   10ba4:	ldr	pc, [ip, #1176]!	; 0x498

00010ba8 <strlen@plt>:
   10ba8:	add	ip, pc, #0, 12
   10bac:	add	ip, ip, #69632	; 0x11000
   10bb0:	ldr	pc, [ip, #1168]!	; 0x490

00010bb4 <strchr@plt>:
   10bb4:	add	ip, pc, #0, 12
   10bb8:	add	ip, ip, #69632	; 0x11000
   10bbc:	ldr	pc, [ip, #1160]!	; 0x488

00010bc0 <fclose@plt>:
   10bc0:	add	ip, pc, #0, 12
   10bc4:	add	ip, ip, #69632	; 0x11000
   10bc8:	ldr	pc, [ip, #1152]!	; 0x480

00010bcc <atoi@plt>:
   10bcc:	add	ip, pc, #0, 12
   10bd0:	add	ip, ip, #69632	; 0x11000
   10bd4:	ldr	pc, [ip, #1144]!	; 0x478

00010bd8 <abort@plt>:
   10bd8:	add	ip, pc, #0, 12
   10bdc:	add	ip, ip, #69632	; 0x11000
   10be0:	ldr	pc, [ip, #1136]!	; 0x470

Disassembly of section .text:

00010be4 <main@@Base>:
   10be4:	push	{r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10be8:	ldr	r1, [pc, #296]	; 10d18 <main@@Base+0x134>
   10bec:	ldr	r0, [pc, #296]	; 10d1c <main@@Base+0x138>
   10bf0:	bl	10b30 <fopen@plt>
   10bf4:	mov	r8, r0
   10bf8:	ldr	r1, [pc, #280]	; 10d18 <main@@Base+0x134>
   10bfc:	ldr	r0, [pc, #284]	; 10d20 <main@@Base+0x13c>
   10c00:	bl	10b30 <fopen@plt>
   10c04:	mov	r7, r0
   10c08:	ldr	r1, [pc, #264]	; 10d18 <main@@Base+0x134>
   10c0c:	ldr	r0, [pc, #272]	; 10d24 <main@@Base+0x140>
   10c10:	bl	10b30 <fopen@plt>
   10c14:	mov	r6, r0
   10c18:	mov	r0, r8
   10c1c:	bl	10fac <lerAtores@@Base>
   10c20:	mov	r4, r0
   10c24:	mov	r0, r7
   10c28:	bl	1101c <lerFilmes@@Base>
   10c2c:	mov	r5, r0
   10c30:	mov	r0, r6
   10c34:	bl	1101c <lerFilmes@@Base>
   10c38:	mov	r9, r0
   10c3c:	mov	r0, r4
   10c40:	bl	1118c <vetor_tamanho@@Base>
   10c44:	mov	r1, r0
   10c48:	ldr	r0, [pc, #216]	; 10d28 <main@@Base+0x144>
   10c4c:	bl	10b24 <printf@plt>
   10c50:	mov	r0, r4
   10c54:	bl	10e30 <retira_duplicados@@Base>
   10c58:	mov	r0, r4
   10c5c:	bl	1118c <vetor_tamanho@@Base>
   10c60:	mov	r1, r0
   10c64:	ldr	r0, [pc, #192]	; 10d2c <main@@Base+0x148>
   10c68:	bl	10b24 <printf@plt>
   10c6c:	mov	r1, r9
   10c70:	mov	r0, r5
   10c74:	bl	10eb4 <interseta@@Base>
   10c78:	subs	fp, r0, #0
   10c7c:	beq	10d00 <main@@Base+0x11c>
   10c80:	bl	1118c <vetor_tamanho@@Base>
   10c84:	mov	r1, r0
   10c88:	ldr	r0, [pc, #160]	; 10d30 <main@@Base+0x14c>
   10c8c:	bl	10b24 <printf@plt>
   10c90:	mov	r1, #2000	; 0x7d0
   10c94:	mov	r0, r5
   10c98:	bl	10f4c <anteriores@@Base>
   10c9c:	subs	sl, r0, #0
   10ca0:	beq	10d0c <main@@Base+0x128>
   10ca4:	bl	1118c <vetor_tamanho@@Base>
   10ca8:	mov	r1, r0
   10cac:	ldr	r0, [pc, #128]	; 10d34 <main@@Base+0x150>
   10cb0:	bl	10b24 <printf@plt>
   10cb4:	mov	r0, r4
   10cb8:	bl	110b0 <vetor_apaga@@Base>
   10cbc:	mov	r0, fp
   10cc0:	bl	110b0 <vetor_apaga@@Base>
   10cc4:	mov	r0, sl
   10cc8:	bl	110b0 <vetor_apaga@@Base>
   10ccc:	mov	r0, r5
   10cd0:	bl	11454 <lista_apaga@@Base>
   10cd4:	mov	r0, r9
   10cd8:	bl	11454 <lista_apaga@@Base>
   10cdc:	mov	r0, r8
   10ce0:	bl	10bc0 <fclose@plt>
   10ce4:	mov	r0, r7
   10ce8:	bl	10bc0 <fclose@plt>
   10cec:	mov	r0, r6
   10cf0:	bl	10bc0 <fclose@plt>
   10cf4:	mov	r0, #0
   10cf8:	add	sp, sp, #4
   10cfc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10d00:	ldr	r0, [pc, #48]	; 10d38 <main@@Base+0x154>
   10d04:	bl	10b6c <puts@plt>
   10d08:	b	10c90 <main@@Base+0xac>
   10d0c:	ldr	r0, [pc, #40]	; 10d3c <main@@Base+0x158>
   10d10:	bl	10b6c <puts@plt>
   10d14:	b	10cb4 <main@@Base+0xd0>
   10d18:			; <UNDEFINED> instruction: 0x000117b8
   10d1c:			; <UNDEFINED> instruction: 0x000117ba
   10d20:	andeq	r1, r1, r6, asr #15
   10d24:	ldrdeq	r1, [r1], -r1	; <UNPREDICTABLE>
   10d28:	ldrdeq	r1, [r1], -sp
   10d2c:	strdeq	r1, [r1], -r0
   10d30:	andeq	r1, r1, ip, lsl #16
   10d34:	andeq	r1, r1, r2, asr #16
   10d38:	andeq	r1, r1, fp, lsr #16
   10d3c:	andeq	r1, r1, r3, ror #16

00010d40 <_start@@Base>:
   10d40:	mov	fp, #0
   10d44:	mov	lr, #0
   10d48:	pop	{r1}		; (ldr r1, [sp], #4)
   10d4c:	mov	r2, sp
   10d50:	push	{r2}		; (str r2, [sp, #-4]!)
   10d54:	push	{r0}		; (str r0, [sp, #-4]!)
   10d58:	ldr	ip, [pc, #16]	; 10d70 <_start@@Base+0x30>
   10d5c:	push	{ip}		; (str ip, [sp, #-4]!)
   10d60:	ldr	r0, [pc, #12]	; 10d74 <_start@@Base+0x34>
   10d64:	ldr	r3, [pc, #12]	; 10d78 <_start@@Base+0x38>
   10d68:	bl	10b84 <__libc_start_main@plt>
   10d6c:	bl	10bd8 <abort@plt>
   10d70:	andeq	r1, r1, r8, lsr #15
   10d74:	andeq	r0, r1, r4, ror #23
   10d78:	andeq	r1, r1, r8, asr #14
   10d7c:	ldr	r3, [pc, #20]	; 10d98 <_start@@Base+0x58>
   10d80:	ldr	r2, [pc, #20]	; 10d9c <_start@@Base+0x5c>
   10d84:	add	r3, pc, r3
   10d88:	ldr	r2, [r3, r2]
   10d8c:	cmp	r2, #0
   10d90:	bxeq	lr
   10d94:	b	10b90 <__gmon_start__@plt>
   10d98:	andeq	r1, r1, r4, ror r2
   10d9c:	andeq	r0, r0, r4, asr r0
   10da0:	ldr	r0, [pc, #24]	; 10dc0 <_start@@Base+0x80>
   10da4:	ldr	r3, [pc, #24]	; 10dc4 <_start@@Base+0x84>
   10da8:	cmp	r3, r0
   10dac:	bxeq	lr
   10db0:	ldr	r3, [pc, #16]	; 10dc8 <_start@@Base+0x88>
   10db4:	cmp	r3, #0
   10db8:	bxeq	lr
   10dbc:	bx	r3
   10dc0:	andeq	r2, r2, r0, rrx
   10dc4:	andeq	r2, r2, r0, rrx
   10dc8:	andeq	r0, r0, r0
   10dcc:	ldr	r0, [pc, #36]	; 10df8 <_start@@Base+0xb8>
   10dd0:	ldr	r1, [pc, #36]	; 10dfc <_start@@Base+0xbc>
   10dd4:	sub	r1, r1, r0
   10dd8:	asr	r1, r1, #2
   10ddc:	add	r1, r1, r1, lsr #31
   10de0:	asrs	r1, r1, #1
   10de4:	bxeq	lr
   10de8:	ldr	r3, [pc, #16]	; 10e00 <_start@@Base+0xc0>
   10dec:	cmp	r3, #0
   10df0:	bxeq	lr
   10df4:	bx	r3
   10df8:	andeq	r2, r2, r0, rrx
   10dfc:	andeq	r2, r2, r0, rrx
   10e00:	andeq	r0, r0, r0
   10e04:	push	{r4, lr}
   10e08:	ldr	r4, [pc, #24]	; 10e28 <_start@@Base+0xe8>
   10e0c:	ldrb	r3, [r4]
   10e10:	cmp	r3, #0
   10e14:	popne	{r4, pc}
   10e18:	bl	10da0 <_start@@Base+0x60>
   10e1c:	mov	r3, #1
   10e20:	strb	r3, [r4]
   10e24:	pop	{r4, pc}
   10e28:	andeq	r2, r2, r0, rrx
   10e2c:	b	10dcc <_start@@Base+0x8c>

00010e30 <retira_duplicados@@Base>:
   10e30:	push	{r4, r5, r6, r7, r8, lr}
   10e34:	mov	r5, r0
   10e38:	mov	r6, #0
   10e3c:	mov	r0, r5
   10e40:	bl	1118c <vetor_tamanho@@Base>
   10e44:	sub	r0, r0, #1
   10e48:	cmp	r0, r6
   10e4c:	pople	{r4, r5, r6, r7, r8, pc}
   10e50:	add	r7, r6, #1
   10e54:	mov	r4, r7
   10e58:	mov	r0, r5
   10e5c:	bl	1118c <vetor_tamanho@@Base>
   10e60:	cmp	r0, r4
   10e64:	movle	r6, r7
   10e68:	ble	10e3c <retira_duplicados@@Base+0xc>
   10e6c:	mov	r1, r6
   10e70:	mov	r0, r5
   10e74:	bl	1119c <vetor_elemento@@Base>
   10e78:	mov	r8, r0
   10e7c:	mov	r1, r4
   10e80:	mov	r0, r5
   10e84:	bl	1119c <vetor_elemento@@Base>
   10e88:	mov	r1, r0
   10e8c:	mov	r0, r8
   10e90:	bl	10b18 <strcmp@plt>
   10e94:	cmp	r0, #0
   10e98:	bne	10eac <retira_duplicados@@Base+0x7c>
   10e9c:	mov	r1, r4
   10ea0:	mov	r0, r5
   10ea4:	sub	r4, r4, #1
   10ea8:	bl	112a0 <vetor_remove@@Base>
   10eac:	add	r4, r4, #1
   10eb0:	b	10e58 <retira_duplicados@@Base+0x28>

00010eb4 <interseta@@Base>:
   10eb4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   10eb8:	mov	r8, r0
   10ebc:	mov	r9, r1
   10ec0:	mov	r5, #0
   10ec4:	mov	r6, r5
   10ec8:	bl	1108c <vetor_novo@@Base>
   10ecc:	ldr	r4, [r8]
   10ed0:	mov	r7, r0
   10ed4:	ldr	r3, [r8, #8]
   10ed8:	cmp	r3, r6
   10edc:	cmple	r4, #0
   10ee0:	bne	10eec <interseta@@Base+0x38>
   10ee4:	mov	r0, r7
   10ee8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   10eec:	mov	r2, #0
   10ef0:	mov	r0, r9
   10ef4:	ldr	r1, [r4]
   10ef8:	bl	115bc <lista_pesquisa@@Base>
   10efc:	cmp	r0, #0
   10f00:	beq	10f40 <interseta@@Base+0x8c>
   10f04:	ldr	sl, [r4]
   10f08:	mov	r2, #0
   10f0c:	mov	r0, r9
   10f10:	mov	r1, sl
   10f14:	bl	115bc <lista_pesquisa@@Base>
   10f18:	ldr	r1, [r0]
   10f1c:	mov	r0, sl
   10f20:	bl	10b18 <strcmp@plt>
   10f24:	cmp	r0, #0
   10f28:	bne	10f40 <interseta@@Base+0x8c>
   10f2c:	mov	r2, r5
   10f30:	mov	r0, r7
   10f34:	ldr	r1, [r4]
   10f38:	add	r5, r5, #1
   10f3c:	bl	111d0 <vetor_insere@@Base>
   10f40:	add	r6, r6, #1
   10f44:	ldr	r4, [r4, #4]
   10f48:	b	10ed4 <interseta@@Base+0x20>

00010f4c <anteriores@@Base>:
   10f4c:	push	{r4, r5, r6, r7, r8, lr}
   10f50:	mov	r4, r0
   10f54:	mov	r7, r1
   10f58:	bl	1108c <vetor_novo@@Base>
   10f5c:	ldr	r4, [r4]
   10f60:	mov	r5, r0
   10f64:	cmp	r4, #0
   10f68:	bne	10f74 <anteriores@@Base+0x28>
   10f6c:	mov	r0, r5
   10f70:	pop	{r4, r5, r6, r7, r8, pc}
   10f74:	ldr	r6, [r4]
   10f78:	mov	r0, r6
   10f7c:	bl	10ba8 <strlen@plt>
   10f80:	sub	r0, r0, #5
   10f84:	add	r0, r6, r0
   10f88:	bl	10bcc <atoi@plt>
   10f8c:	cmp	r0, r7
   10f90:	bge	10fa4 <anteriores@@Base+0x58>
   10f94:	mov	r1, r6
   10f98:	mov	r0, r5
   10f9c:	ldr	r2, [r5]
   10fa0:	bl	111d0 <vetor_insere@@Base>
   10fa4:	ldr	r4, [r4, #4]
   10fa8:	b	10f64 <anteriores@@Base+0x18>

00010fac <lerAtores@@Base>:
   10fac:	push	{r4, r5, r6, lr}
   10fb0:	subs	r4, r0, #0
   10fb4:	sub	sp, sp, #256	; 0x100
   10fb8:	beq	10fd8 <lerAtores@@Base+0x2c>
   10fbc:	mov	r5, r4
   10fc0:	bl	1108c <vetor_novo@@Base>
   10fc4:	mov	r4, r0
   10fc8:	mov	r0, r5
   10fcc:	bl	10b9c <feof@plt>
   10fd0:	subs	r6, r0, #0
   10fd4:	beq	10fe4 <lerAtores@@Base+0x38>
   10fd8:	mov	r0, r4
   10fdc:	add	sp, sp, #256	; 0x100
   10fe0:	pop	{r4, r5, r6, pc}
   10fe4:	mov	r2, r5
   10fe8:	mov	r1, #255	; 0xff
   10fec:	mov	r0, sp
   10ff0:	bl	10b48 <fgets@plt>
   10ff4:	mov	r1, #10
   10ff8:	mov	r0, sp
   10ffc:	bl	10bb4 <strchr@plt>
   11000:	cmp	r0, #0
   11004:	mov	r1, sp
   11008:	strbne	r6, [r0]
   1100c:	mov	r0, r4
   11010:	ldr	r2, [r4]
   11014:	bl	111d0 <vetor_insere@@Base>
   11018:	b	10fc8 <lerAtores@@Base+0x1c>

0001101c <lerFilmes@@Base>:
   1101c:	push	{r4, r5, r6, lr}
   11020:	subs	r4, r0, #0
   11024:	sub	sp, sp, #256	; 0x100
   11028:	beq	11048 <lerFilmes@@Base+0x2c>
   1102c:	mov	r5, r4
   11030:	bl	11430 <lista_nova@@Base>
   11034:	mov	r4, r0
   11038:	mov	r0, r5
   1103c:	bl	10b9c <feof@plt>
   11040:	subs	r6, r0, #0
   11044:	beq	11054 <lerFilmes@@Base+0x38>
   11048:	mov	r0, r4
   1104c:	add	sp, sp, #256	; 0x100
   11050:	pop	{r4, r5, r6, pc}
   11054:	mov	r2, r5
   11058:	mov	r1, #255	; 0xff
   1105c:	mov	r0, sp
   11060:	bl	10b48 <fgets@plt>
   11064:	mov	r1, #10
   11068:	mov	r0, sp
   1106c:	bl	10bb4 <strchr@plt>
   11070:	cmp	r0, #0
   11074:	mov	r2, #0
   11078:	mov	r1, sp
   1107c:	strbne	r6, [r0]
   11080:	mov	r0, r4
   11084:	bl	114b8 <lista_insere@@Base>
   11088:	b	11038 <lerFilmes@@Base+0x1c>

0001108c <vetor_novo@@Base>:
   1108c:	push	{r4, lr}
   11090:	mov	r0, #12
   11094:	bl	10b78 <malloc@plt>
   11098:	cmp	r0, #0
   1109c:	movne	r3, #0
   110a0:	strne	r3, [r0]
   110a4:	strne	r3, [r0, #4]
   110a8:	strne	r3, [r0, #8]
   110ac:	pop	{r4, pc}

000110b0 <vetor_apaga@@Base>:
   110b0:	push	{r4, r5, r6, lr}
   110b4:	subs	r4, r0, #0
   110b8:	movne	r5, #0
   110bc:	popeq	{r4, r5, r6, pc}
   110c0:	ldr	r3, [r4]
   110c4:	ldr	r0, [r4, #8]
   110c8:	cmp	r3, r5
   110cc:	bgt	110e0 <vetor_apaga@@Base+0x30>
   110d0:	bl	10b3c <free@plt>
   110d4:	mov	r0, r4
   110d8:	pop	{r4, r5, r6, lr}
   110dc:	b	10b3c <free@plt>
   110e0:	ldr	r0, [r0, r5, lsl #2]
   110e4:	add	r5, r5, #1
   110e8:	bl	10b3c <free@plt>
   110ec:	b	110c0 <vetor_apaga@@Base+0x10>

000110f0 <vetor_atribui@@Base>:
   110f0:	cmp	r0, #0
   110f4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   110f8:	lsrne	r3, r1, #31
   110fc:	moveq	r3, #1
   11100:	cmp	r3, #0
   11104:	beq	11114 <vetor_atribui@@Base+0x24>
   11108:	mvn	r4, #0
   1110c:	mov	r0, r4
   11110:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11114:	ldr	r3, [r0]
   11118:	mov	r4, r1
   1111c:	mov	r5, r0
   11120:	cmp	r3, r1
   11124:	ble	11108 <vetor_atribui@@Base+0x18>
   11128:	mov	r0, r2
   1112c:	mov	r9, r2
   11130:	lsl	sl, r4, #2
   11134:	bl	10ba8 <strlen@plt>
   11138:	ldr	r6, [r5, #8]
   1113c:	mov	r8, r0
   11140:	ldr	r7, [r6, r4, lsl #2]
   11144:	mov	r0, r7
   11148:	bl	10ba8 <strlen@plt>
   1114c:	cmp	r0, r8
   11150:	bcc	11168 <vetor_atribui@@Base+0x78>
   11154:	ldr	r3, [r5, #8]
   11158:	mov	r1, r9
   1115c:	ldr	r0, [r3, sl]
   11160:	bl	10b60 <strcpy@plt>
   11164:	b	1110c <vetor_atribui@@Base+0x1c>
   11168:	add	r1, r8, #1
   1116c:	mov	r0, r7
   11170:	bl	10b54 <realloc@plt>
   11174:	ldr	r3, [r5, #8]
   11178:	str	r0, [r6, r4, lsl #2]
   1117c:	ldr	r3, [r3, r4, lsl #2]
   11180:	cmp	r3, #0
   11184:	bne	11154 <vetor_atribui@@Base+0x64>
   11188:	b	11108 <vetor_atribui@@Base+0x18>

0001118c <vetor_tamanho@@Base>:
   1118c:	cmp	r0, #0
   11190:	ldrne	r0, [r0]
   11194:	mvneq	r0, #0
   11198:	bx	lr

0001119c <vetor_elemento@@Base>:
   1119c:	cmp	r0, #0
   111a0:	lsrne	r3, r1, #31
   111a4:	moveq	r3, #1
   111a8:	cmp	r3, #0
   111ac:	bne	111c8 <vetor_elemento@@Base+0x2c>
   111b0:	ldr	r2, [r0]
   111b4:	cmp	r2, r1
   111b8:	ble	111c8 <vetor_elemento@@Base+0x2c>
   111bc:	ldr	r3, [r0, #8]
   111c0:	ldr	r0, [r3, r1, lsl #2]
   111c4:	bx	lr
   111c8:	mov	r0, #0
   111cc:	bx	lr

000111d0 <vetor_insere@@Base>:
   111d0:	cmp	r0, #0
   111d4:	push	{r4, r5, r6, r7, r8, lr}
   111d8:	lsrne	r3, r2, #31
   111dc:	moveq	r3, #1
   111e0:	cmp	r3, #0
   111e4:	beq	111f4 <vetor_insere@@Base+0x24>
   111e8:	mvn	r5, #0
   111ec:	mov	r0, r5
   111f0:	pop	{r4, r5, r6, r7, r8, pc}
   111f4:	mov	r8, r1
   111f8:	ldr	r1, [r0]
   111fc:	mov	r5, r2
   11200:	mov	r4, r0
   11204:	cmp	r1, r2
   11208:	blt	111e8 <vetor_insere@@Base+0x18>
   1120c:	ldr	r3, [r0, #4]
   11210:	cmp	r1, r3
   11214:	beq	11260 <vetor_insere@@Base+0x90>
   11218:	ldr	r6, [r4]
   1121c:	sub	r3, r6, #1
   11220:	cmp	r3, r5
   11224:	ldr	r7, [r4, #8]
   11228:	bge	1128c <vetor_insere@@Base+0xbc>
   1122c:	mov	r0, r8
   11230:	bl	10ba8 <strlen@plt>
   11234:	mov	r1, #1
   11238:	add	r0, r0, r1
   1123c:	bl	10b0c <calloc@plt>
   11240:	cmp	r0, #0
   11244:	str	r0, [r7, r5, lsl #2]
   11248:	beq	111e8 <vetor_insere@@Base+0x18>
   1124c:	add	r6, r6, #1
   11250:	mov	r1, r8
   11254:	bl	10b60 <strcpy@plt>
   11258:	str	r6, [r4]
   1125c:	b	111ec <vetor_insere@@Base+0x1c>
   11260:	cmp	r1, #0
   11264:	ldr	r0, [r0, #8]
   11268:	lslne	r1, r1, #1
   1126c:	moveq	r1, #1
   11270:	str	r1, [r4, #4]
   11274:	lsl	r1, r1, #2
   11278:	bl	10b54 <realloc@plt>
   1127c:	cmp	r0, #0
   11280:	str	r0, [r4, #8]
   11284:	bne	11218 <vetor_insere@@Base+0x48>
   11288:	b	111e8 <vetor_insere@@Base+0x18>
   1128c:	ldr	r1, [r7, r3, lsl #2]
   11290:	add	r2, r7, r3, lsl #2
   11294:	sub	r3, r3, #1
   11298:	str	r1, [r2, #4]
   1129c:	b	11220 <vetor_insere@@Base+0x50>

000112a0 <vetor_remove@@Base>:
   112a0:	cmp	r0, #0
   112a4:	lsrne	r3, r1, #31
   112a8:	moveq	r3, #1
   112ac:	cmp	r3, #0
   112b0:	bne	11310 <vetor_remove@@Base+0x70>
   112b4:	ldr	r3, [r0]
   112b8:	cmp	r3, r1
   112bc:	ble	11310 <vetor_remove@@Base+0x70>
   112c0:	ldr	r3, [r0, #8]
   112c4:	push	{r4, r5, r6, lr}
   112c8:	mov	r4, r1
   112cc:	mov	r5, r0
   112d0:	ldr	r0, [r3, r1, lsl #2]
   112d4:	bl	10b3c <free@plt>
   112d8:	add	r1, r4, #1
   112dc:	ldr	r3, [r5]
   112e0:	cmp	r3, r1
   112e4:	bgt	112f8 <vetor_remove@@Base+0x58>
   112e8:	sub	r3, r3, #1
   112ec:	mov	r0, #0
   112f0:	str	r3, [r5]
   112f4:	pop	{r4, r5, r6, pc}
   112f8:	ldr	r3, [r5, #8]
   112fc:	add	r2, r3, r1, lsl #2
   11300:	ldr	r3, [r3, r1, lsl #2]
   11304:	add	r1, r1, #1
   11308:	str	r3, [r2, #-4]
   1130c:	b	112dc <vetor_remove@@Base+0x3c>
   11310:	mvn	r0, #0
   11314:	bx	lr

00011318 <vetor_pesquisa@@Base>:
   11318:	push	{r4, r5, r6, r7, r8, lr}
   1131c:	subs	r5, r0, #0
   11320:	movne	r6, r1
   11324:	movne	r4, #0
   11328:	ldrne	r7, [r5]
   1132c:	bne	11358 <vetor_pesquisa@@Base+0x40>
   11330:	mvn	r4, #0
   11334:	mov	r0, r4
   11338:	pop	{r4, r5, r6, r7, r8, pc}
   1133c:	ldr	r3, [r5, #8]
   11340:	mov	r1, r6
   11344:	ldr	r0, [r3, r4, lsl #2]
   11348:	bl	10b18 <strcmp@plt>
   1134c:	cmp	r0, #0
   11350:	beq	11334 <vetor_pesquisa@@Base+0x1c>
   11354:	add	r4, r4, #1
   11358:	cmp	r7, r4
   1135c:	bgt	1133c <vetor_pesquisa@@Base+0x24>
   11360:	b	11330 <vetor_pesquisa@@Base+0x18>

00011364 <vetor_ordena@@Base>:
   11364:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11368:	subs	r5, r0, #0
   1136c:	movne	r4, #1
   11370:	bne	113b8 <vetor_ordena@@Base+0x54>
   11374:	mvn	r0, #0
   11378:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1137c:	ldr	r8, [r5, #8]
   11380:	mov	r6, r4
   11384:	ldr	r9, [r8, r4, lsl #2]
   11388:	add	r7, r8, r4, lsl #2
   1138c:	mov	r0, r9
   11390:	ldr	r1, [r7, #-4]
   11394:	bl	10b18 <strcmp@plt>
   11398:	cmp	r0, #0
   1139c:	bge	113b0 <vetor_ordena@@Base+0x4c>
   113a0:	ldr	r3, [r7, #-4]
   113a4:	subs	r6, r6, #1
   113a8:	str	r3, [r7], #-4
   113ac:	bne	1138c <vetor_ordena@@Base+0x28>
   113b0:	add	r4, r4, #1
   113b4:	str	r9, [r8, r6, lsl #2]
   113b8:	ldr	r3, [r5]
   113bc:	cmp	r3, r4
   113c0:	bgt	1137c <vetor_ordena@@Base+0x18>
   113c4:	mov	r0, #0
   113c8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}

000113cc <novo_str@@Base>:
   113cc:	push	{r4, r5, r6, r7, r8, lr}
   113d0:	mov	r7, r0
   113d4:	mov	r0, #12
   113d8:	bl	10b78 <malloc@plt>
   113dc:	subs	r4, r0, #0
   113e0:	beq	11414 <novo_str@@Base+0x48>
   113e4:	mov	r0, r7
   113e8:	mov	r6, #0
   113ec:	bl	10ba8 <strlen@plt>
   113f0:	add	r0, r0, #1
   113f4:	bl	10b78 <malloc@plt>
   113f8:	cmp	r0, #0
   113fc:	mov	r5, r0
   11400:	str	r0, [r4]
   11404:	bne	1141c <novo_str@@Base+0x50>
   11408:	mov	r0, r4
   1140c:	mov	r4, r5
   11410:	bl	10b3c <free@plt>
   11414:	mov	r0, r4
   11418:	pop	{r4, r5, r6, r7, r8, pc}
   1141c:	mov	r1, r7
   11420:	bl	10b60 <strcpy@plt>
   11424:	str	r6, [r4, #4]
   11428:	str	r6, [r4, #8]
   1142c:	b	11414 <novo_str@@Base+0x48>

00011430 <lista_nova@@Base>:
   11430:	push	{r4, lr}
   11434:	mov	r0, #12
   11438:	bl	10b78 <malloc@plt>
   1143c:	cmp	r0, #0
   11440:	movne	r3, #0
   11444:	strne	r3, [r0]
   11448:	strne	r3, [r0, #4]
   1144c:	strne	r3, [r0, #8]
   11450:	pop	{r4, pc}

00011454 <lista_apaga@@Base>:
   11454:	push	{r4, r5, r6, lr}
   11458:	subs	r5, r0, #0
   1145c:	popeq	{r4, r5, r6, pc}
   11460:	ldr	r4, [r5]
   11464:	cmp	r4, #0
   11468:	bne	11478 <lista_apaga@@Base+0x24>
   1146c:	mov	r0, r5
   11470:	pop	{r4, r5, r6, lr}
   11474:	b	10b3c <free@plt>
   11478:	ldm	r4, {r0, r3}
   1147c:	str	r3, [r5]
   11480:	bl	10b3c <free@plt>
   11484:	mov	r0, r4
   11488:	bl	10b3c <free@plt>
   1148c:	b	11460 <lista_apaga@@Base+0xc>

00011490 <lista_tamanho@@Base>:
   11490:	cmp	r0, #0
   11494:	ldrne	r0, [r0, #8]
   11498:	mvneq	r0, #0
   1149c:	bx	lr

000114a0 <lista_inicio@@Base>:
   114a0:	cmp	r0, #0
   114a4:	ldrne	r0, [r0]
   114a8:	bx	lr

000114ac <lista_fim@@Base>:
   114ac:	cmp	r0, #0
   114b0:	ldrne	r0, [r0, #4]
   114b4:	bx	lr

000114b8 <lista_insere@@Base>:
   114b8:	cmp	r1, #0
   114bc:	cmpne	r0, #0
   114c0:	bne	114d4 <lista_insere@@Base+0x1c>
   114c4:	mov	r0, #0
   114c8:	bx	lr
   114cc:	mov	r0, #0
   114d0:	pop	{r4, r5, r6, pc}
   114d4:	push	{r4, r5, r6, lr}
   114d8:	mov	r4, r0
   114dc:	mov	r0, r1
   114e0:	mov	r5, r2
   114e4:	bl	113cc <novo_str@@Base>
   114e8:	cmp	r0, #0
   114ec:	beq	114cc <lista_insere@@Base+0x14>
   114f0:	ldr	r3, [r4, #8]
   114f4:	cmp	r5, #0
   114f8:	add	r3, r3, #1
   114fc:	str	r3, [r4, #8]
   11500:	ldr	r3, [r4]
   11504:	bne	11528 <lista_insere@@Base+0x70>
   11508:	cmp	r3, #0
   1150c:	streq	r0, [r4, #4]
   11510:	beq	11538 <lista_insere@@Base+0x80>
   11514:	ldr	r3, [r4, #4]
   11518:	str	r3, [r0, #8]
   1151c:	str	r0, [r3, #4]
   11520:	str	r0, [r4, #4]
   11524:	pop	{r4, r5, r6, pc}
   11528:	cmp	r5, r3
   1152c:	bne	11540 <lista_insere@@Base+0x88>
   11530:	str	r5, [r0, #4]
   11534:	str	r0, [r5, #8]
   11538:	str	r0, [r4]
   1153c:	pop	{r4, r5, r6, pc}
   11540:	ldr	r3, [r5, #8]
   11544:	str	r5, [r0, #4]
   11548:	str	r3, [r0, #8]
   1154c:	ldr	r3, [r5, #8]
   11550:	str	r0, [r3, #4]
   11554:	str	r0, [r5, #8]
   11558:	pop	{r4, r5, r6, pc}

0001155c <lista_remove@@Base>:
   1155c:	cmp	r1, #0
   11560:	cmpne	r0, #0
   11564:	push	{r4, r5, r6, lr}
   11568:	moveq	r5, #0
   1156c:	beq	115b4 <lista_remove@@Base+0x58>
   11570:	mov	r4, r1
   11574:	ldr	r3, [r0, #8]
   11578:	ldr	r2, [r1, #4]
   1157c:	sub	r3, r3, #1
   11580:	str	r3, [r0, #8]
   11584:	ldr	r3, [r1, #8]
   11588:	cmp	r3, #0
   1158c:	strne	r2, [r3, #4]
   11590:	ldr	r5, [r1, #4]
   11594:	streq	r2, [r0]
   11598:	cmp	r5, #0
   1159c:	streq	r3, [r0, #4]
   115a0:	strne	r3, [r5, #8]
   115a4:	ldr	r0, [r1]
   115a8:	bl	10b3c <free@plt>
   115ac:	mov	r0, r4
   115b0:	bl	10b3c <free@plt>
   115b4:	mov	r0, r5
   115b8:	pop	{r4, r5, r6, pc}

000115bc <lista_pesquisa@@Base>:
   115bc:	push	{r4, r5, r6, lr}
   115c0:	clz	r4, r1
   115c4:	cmp	r0, #0
   115c8:	lsr	r4, r4, #5
   115cc:	moveq	r4, #1
   115d0:	cmp	r4, #0
   115d4:	movne	r4, #0
   115d8:	bne	1163c <lista_pesquisa@@Base+0x80>
   115dc:	cmp	r2, #1
   115e0:	bhi	1163c <lista_pesquisa@@Base+0x80>
   115e4:	cmp	r2, #0
   115e8:	mov	r5, r1
   115ec:	ldreq	r4, [r0]
   115f0:	beq	11634 <lista_pesquisa@@Base+0x78>
   115f4:	ldr	r4, [r0, #4]
   115f8:	cmp	r4, #0
   115fc:	beq	1163c <lista_pesquisa@@Base+0x80>
   11600:	mov	r1, r5
   11604:	ldr	r0, [r4]
   11608:	bl	10b18 <strcmp@plt>
   1160c:	cmp	r0, #0
   11610:	beq	1163c <lista_pesquisa@@Base+0x80>
   11614:	ldr	r4, [r4, #8]
   11618:	b	115f8 <lista_pesquisa@@Base+0x3c>
   1161c:	mov	r1, r5
   11620:	ldr	r0, [r4]
   11624:	bl	10b18 <strcmp@plt>
   11628:	cmp	r0, #0
   1162c:	beq	1163c <lista_pesquisa@@Base+0x80>
   11630:	ldr	r4, [r4, #4]
   11634:	cmp	r4, #0
   11638:	bne	1161c <lista_pesquisa@@Base+0x60>
   1163c:	mov	r0, r4
   11640:	pop	{r4, r5, r6, pc}

00011644 <lista_ordena@@Base>:
   11644:	cmp	r0, #0
   11648:	beq	116ac <lista_ordena@@Base+0x68>
   1164c:	push	{r4, r5, r6, r7, r8, lr}
   11650:	ldr	r5, [r0]
   11654:	ldr	r4, [r5, #4]
   11658:	cmp	r4, #0
   1165c:	bne	11668 <lista_ordena@@Base+0x24>
   11660:	mov	r0, r4
   11664:	pop	{r4, r5, r6, r7, r8, pc}
   11668:	mov	r6, r5
   1166c:	mov	r7, r4
   11670:	ldr	r1, [r6]
   11674:	ldr	r0, [r7]
   11678:	bl	10b18 <strcmp@plt>
   1167c:	cmp	r0, #0
   11680:	movlt	r6, r7
   11684:	ldr	r7, [r7, #4]
   11688:	cmp	r7, #0
   1168c:	bne	11670 <lista_ordena@@Base+0x2c>
   11690:	cmp	r5, r6
   11694:	ldrne	r3, [r5]
   11698:	ldrne	r2, [r6]
   1169c:	strne	r2, [r5]
   116a0:	mov	r5, r4
   116a4:	strne	r3, [r6]
   116a8:	b	11654 <lista_ordena@@Base+0x10>
   116ac:	mvn	r0, #0
   116b0:	bx	lr

000116b4 <lista_inverte@@Base>:
   116b4:	subs	r3, r0, #0
   116b8:	beq	11738 <lista_inverte@@Base+0x84>
   116bc:	ldr	r1, [r3, #8]
   116c0:	cmp	r1, #1
   116c4:	ble	11740 <lista_inverte@@Base+0x8c>
   116c8:	ldr	r2, [r3]
   116cc:	mov	ip, #0
   116d0:	sub	r0, r1, #2
   116d4:	push	{r4, lr}
   116d8:	ldr	r2, [r2, #4]
   116dc:	cmp	r0, ip
   116e0:	ldr	r1, [r3]
   116e4:	bgt	11710 <lista_inverte@@Base+0x5c>
   116e8:	mov	r0, #0
   116ec:	ldr	r2, [r3, #4]
   116f0:	ldr	ip, [r2, #8]
   116f4:	str	ip, [r3, #4]
   116f8:	str	r0, [ip, #4]
   116fc:	str	r1, [r2, #4]
   11700:	str	r0, [r2, #8]
   11704:	str	r2, [r1, #8]
   11708:	str	r2, [r3]
   1170c:	pop	{r4, pc}
   11710:	ldr	lr, [r2, #4]
   11714:	add	ip, ip, #1
   11718:	ldr	r4, [r2, #8]
   1171c:	str	lr, [r4, #4]
   11720:	str	r4, [lr, #8]
   11724:	str	r1, [r2, #4]
   11728:	str	r2, [r1, #8]
   1172c:	str	r2, [r3]
   11730:	mov	r2, lr
   11734:	b	116dc <lista_inverte@@Base+0x28>
   11738:	mvn	r0, #0
   1173c:	bx	lr
   11740:	mov	r0, #0
   11744:	bx	lr

00011748 <__libc_csu_init@@Base>:
   11748:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1174c:	mov	r7, r0
   11750:	ldr	r6, [pc, #72]	; 117a0 <__libc_csu_init@@Base+0x58>
   11754:	ldr	r5, [pc, #72]	; 117a4 <__libc_csu_init@@Base+0x5c>
   11758:	add	r6, pc, r6
   1175c:	add	r5, pc, r5
   11760:	sub	r6, r6, r5
   11764:	mov	r8, r1
   11768:	mov	r9, r2
   1176c:	bl	10aec <calloc@plt-0x20>
   11770:	asrs	r6, r6, #2
   11774:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   11778:	mov	r4, #0
   1177c:	add	r4, r4, #1
   11780:	ldr	r3, [r5], #4
   11784:	mov	r2, r9
   11788:	mov	r1, r8
   1178c:	mov	r0, r7
   11790:	blx	r3
   11794:	cmp	r6, r4
   11798:	bne	1177c <__libc_csu_init@@Base+0x34>
   1179c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   117a0:			; <UNDEFINED> instruction: 0x000107b4
   117a4:	andeq	r0, r1, ip, lsr #15

000117a8 <__libc_csu_fini@@Base>:
   117a8:	bx	lr

Disassembly of section .fini:

000117ac <.fini>:
   117ac:	push	{r3, lr}
   117b0:	pop	{r3, pc}
