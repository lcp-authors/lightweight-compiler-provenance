
../repos/charybdis/modules/.libs/m_resv.so:     file format elf32-littlearm


Disassembly of section .init:

00000b94 <_init>:
 b94:	push	{r3, lr}
 b98:	bl	dd4 <call_weak_fn>
 b9c:	pop	{r3, pc}

Disassembly of section .plt:

00000ba0 <.plt>:
 ba0:	push	{lr}		; (str lr, [sp, #-4]!)
 ba4:	ldr	lr, [pc, #4]	; bb0 <.plt+0x10>
 ba8:	add	lr, pc, lr
 bac:	ldr	pc, [lr, #8]!
 bb0:	.word	0x00012450

00000bb4 <propagate_generic@plt>:
 bb4:	add	ip, pc, #0, 12
 bb8:	add	ip, ip, #73728	; 0x12000
 bbc:	ldr	pc, [ip, #1104]!	; 0x450

00000bc0 <make_conf@plt>:
 bc0:	add	ip, pc, #0, 12
 bc4:	add	ip, ip, #73728	; 0x12000
 bc8:	ldr	pc, [ip, #1096]!	; 0x448

00000bcc <rb_current_time@plt>:
 bcc:	add	ip, pc, #0, 12
 bd0:	add	ip, ip, #73728	; 0x12000
 bd4:	ldr	pc, [ip, #1088]!	; 0x440

00000bd8 <add_to_resv_hash@plt>:
 bd8:	add	ip, pc, #0, 12
 bdc:	add	ip, ip, #73728	; 0x12000
 be0:	ldr	pc, [ip, #1080]!	; 0x438

00000be4 <sendto_match_servs@plt>:
 be4:	add	ip, pc, #0, 12
 be8:	add	ip, ip, #73728	; 0x12000
 bec:	ldr	pc, [ip, #1072]!	; 0x430

00000bf0 <__cxa_finalize@plt>:
 bf0:	add	ip, pc, #0, 12
 bf4:	add	ip, ip, #73728	; 0x12000
 bf8:	ldr	pc, [ip, #1064]!	; 0x428

00000bfc <strtol@plt>:
 bfc:	add	ip, pc, #0, 12
 c00:	add	ip, ip, #73728	; 0x12000
 c04:	ldr	pc, [ip, #1056]!	; 0x420

00000c08 <sendto_one@plt>:
 c08:	add	ip, pc, #0, 12
 c0c:	add	ip, ip, #73728	; 0x12000
 c10:	ldr	pc, [ip, #1048]!	; 0x418

00000c14 <replace_old_ban@plt>:
 c14:	add	ip, pc, #0, 12
 c18:	add	ip, ip, #73728	; 0x12000
 c1c:	ldr	pc, [ip, #1040]!	; 0x410

00000c20 <memcpy@plt>:
 c20:	add	ip, pc, #0, 12
 c24:	add	ip, ip, #73728	; 0x12000
 c28:	ldr	pc, [ip, #1032]!	; 0x408

00000c2c <rb_outofmemory@plt>:
 c2c:	add	ip, pc, #0, 12
 c30:	add	ip, ip, #73728	; 0x12000
 c34:	ldr	pc, [ip, #1024]!	; 0x400

00000c38 <resv_nick_fnc@plt>:
 c38:	add	ip, pc, #0, 12
 c3c:	add	ip, ip, #73728	; 0x12000
 c40:	ldr	pc, [ip, #1016]!	; 0x3f8

00000c44 <operhash_delete@plt>:
 c44:	add	ip, pc, #0, 12
 c48:	add	ip, ip, #73728	; 0x12000
 c4c:	ldr	pc, [ip, #1008]!	; 0x3f0

00000c50 <sendto_realops_snomask@plt>:
 c50:	add	ip, pc, #0, 12
 c54:	add	ip, ip, #73728	; 0x12000
 c58:	ldr	pc, [ip, #1000]!	; 0x3e8

00000c5c <bandb_add@plt>:
 c5c:	add	ip, pc, #0, 12
 c60:	add	ip, ip, #73728	; 0x12000
 c64:	ldr	pc, [ip, #992]!	; 0x3e0

00000c68 <resv_chan_forcepart@plt>:
 c68:	add	ip, pc, #0, 12
 c6c:	add	ip, ip, #73728	; 0x12000
 c70:	ldr	pc, [ip, #984]!	; 0x3d8

00000c74 <deactivate_conf@plt>:
 c74:	add	ip, pc, #0, 12
 c78:	add	ip, ip, #73728	; 0x12000
 c7c:	ldr	pc, [ip, #976]!	; 0x3d0

00000c80 <get_oper_name@plt>:
 c80:	add	ip, pc, #0, 12
 c84:	add	ip, ip, #73728	; 0x12000
 c88:	ldr	pc, [ip, #968]!	; 0x3c8

00000c8c <rb_free_rb_dlink_node@plt>:
 c8c:	add	ip, pc, #0, 12
 c90:	add	ip, ip, #73728	; 0x12000
 c94:	ldr	pc, [ip, #960]!	; 0x3c0

00000c98 <cluster_generic@plt>:
 c98:	add	ip, pc, #0, 12
 c9c:	add	ip, ip, #73728	; 0x12000
 ca0:	ldr	pc, [ip, #952]!	; 0x3b8

00000ca4 <operhash_add@plt>:
 ca4:	add	ip, pc, #0, 12
 ca8:	add	ip, ip, #73728	; 0x12000
 cac:	ldr	pc, [ip, #944]!	; 0x3b0

00000cb0 <sendto_server@plt>:
 cb0:	add	ip, pc, #0, 12
 cb4:	add	ip, ip, #73728	; 0x12000
 cb8:	ldr	pc, [ip, #936]!	; 0x3a8

00000cbc <malloc@plt>:
 cbc:	add	ip, pc, #0, 12
 cc0:	add	ip, ip, #73728	; 0x12000
 cc4:	ldr	pc, [ip, #928]!	; 0x3a0

00000cc8 <__gmon_start__@plt>:
 cc8:	add	ip, pc, #0, 12
 ccc:	add	ip, ip, #73728	; 0x12000
 cd0:	ldr	pc, [ip, #920]!	; 0x398

00000cd4 <free_conf@plt>:
 cd4:	add	ip, pc, #0, 12
 cd8:	add	ip, ip, #73728	; 0x12000
 cdc:	ldr	pc, [ip, #912]!	; 0x390

00000ce0 <rb_make_rb_dlink_node@plt>:
 ce0:	add	ip, pc, #0, 12
 ce4:	add	ip, ip, #73728	; 0x12000
 ce8:	ldr	pc, [ip, #904]!	; 0x388

00000cec <strlen@plt>:
 cec:	add	ip, pc, #0, 12
 cf0:	add	ip, ip, #73728	; 0x12000
 cf4:	ldr	pc, [ip, #896]!	; 0x380

00000cf8 <ilog@plt>:
 cf8:	add	ip, pc, #0, 12
 cfc:	add	ip, ip, #73728	; 0x12000
 d00:	ldr	pc, [ip, #888]!	; 0x378

00000d04 <match@plt>:
 d04:	add	ip, pc, #0, 12
 d08:	add	ip, ip, #73728	; 0x12000
 d0c:	ldr	pc, [ip, #880]!	; 0x370

00000d10 <del_from_resv_hash@plt>:
 d10:	add	ip, pc, #0, 12
 d14:	add	ip, ip, #73728	; 0x12000
 d18:	ldr	pc, [ip, #872]!	; 0x368

00000d1c <find_nick_resv_mask@plt>:
 d1c:	add	ip, pc, #0, 12
 d20:	add	ip, ip, #73728	; 0x12000
 d24:	ldr	pc, [ip, #864]!	; 0x360

00000d28 <valid_temp_time@plt>:
 d28:	add	ip, pc, #0, 12
 d2c:	add	ip, ip, #73728	; 0x12000
 d30:	ldr	pc, [ip, #856]!	; 0x358

00000d34 <sendto_one_notice@plt>:
 d34:	add	ip, pc, #0, 12
 d38:	add	ip, ip, #73728	; 0x12000
 d3c:	ldr	pc, [ip, #848]!	; 0x350

00000d40 <bandb_del@plt>:
 d40:	add	ip, pc, #0, 12
 d44:	add	ip, ip, #73728	; 0x12000
 d48:	ldr	pc, [ip, #840]!	; 0x348

00000d4c <valid_wild_card_simple@plt>:
 d4c:	add	ip, pc, #0, 12
 d50:	add	ip, ip, #73728	; 0x12000
 d54:	ldr	pc, [ip, #832]!	; 0x340

00000d58 <find_shared_conf@plt>:
 d58:	add	ip, pc, #0, 12
 d5c:	add	ip, ip, #73728	; 0x12000
 d60:	ldr	pc, [ip, #824]!	; 0x338

00000d64 <privilegeset_in_set@plt>:
 d64:	add	ip, pc, #0, 12
 d68:	add	ip, ip, #73728	; 0x12000
 d6c:	ldr	pc, [ip, #816]!	; 0x330

00000d70 <hash_find_resv@plt>:
 d70:	add	ip, pc, #0, 12
 d74:	add	ip, ip, #73728	; 0x12000
 d78:	ldr	pc, [ip, #808]!	; 0x328

00000d7c <irccmp@plt>:
 d7c:	add	ip, pc, #0, 12
 d80:	add	ip, ip, #73728	; 0x12000
 d84:	ldr	pc, [ip, #800]!	; 0x320

00000d88 <clean_resv_nick@plt>:
 d88:	add	ip, pc, #0, 12
 d8c:	add	ip, ip, #73728	; 0x12000
 d90:	ldr	pc, [ip, #792]!	; 0x318

00000d94 <__assert_fail@plt>:
 d94:	add	ip, pc, #0, 12
 d98:	add	ip, ip, #73728	; 0x12000
 d9c:	ldr	pc, [ip, #784]!	; 0x310

Disassembly of section .text:

00000da0 <rb_dlinkFind.part.5>:
     da0:	ldr	r3, [pc, #28]	; dc4 <rb_dlinkFind.part.5+0x24>
     da4:	ldr	r1, [pc, #28]	; dc8 <rb_dlinkFind.part.5+0x28>
     da8:	ldr	r0, [pc, #28]	; dcc <rb_dlinkFind.part.5+0x2c>
     dac:	push	{r4, lr}
     db0:	add	r3, pc, r3
     db4:	ldr	r2, [pc, #20]	; dd0 <rb_dlinkFind.part.5+0x30>
     db8:	add	r1, pc, r1
     dbc:	add	r0, pc, r0
     dc0:	bl	d94 <__assert_fail@plt>
     dc4:	.word	0x00001998
     dc8:	.word	0x00001a20
     dcc:	.word	0x00001a38
     dd0:	.word	0x00000137

00000dd4 <call_weak_fn>:
     dd4:	ldr	r3, [pc, #20]	; df0 <call_weak_fn+0x1c>
     dd8:	ldr	r2, [pc, #20]	; df4 <call_weak_fn+0x20>
     ddc:	add	r3, pc, r3
     de0:	ldr	r2, [r3, r2]
     de4:	cmp	r2, #0
     de8:	bxeq	lr
     dec:	b	cc8 <__gmon_start__@plt>
     df0:	.word	0x0001221c
     df4:	.word	0x000000cc

00000df8 <deregister_tm_clones>:
     df8:	ldr	r3, [pc, #52]	; e34 <deregister_tm_clones+0x3c>
     dfc:	ldr	r0, [pc, #52]	; e38 <deregister_tm_clones+0x40>
     e00:	add	r3, pc, r3
     e04:	add	r0, pc, r0
     e08:	add	r3, r3, #3
     e0c:	sub	r3, r3, r0
     e10:	cmp	r3, #6
     e14:	ldr	r3, [pc, #32]	; e3c <deregister_tm_clones+0x44>
     e18:	add	r3, pc, r3
     e1c:	bxls	lr
     e20:	ldr	r2, [pc, #24]	; e40 <deregister_tm_clones+0x48>
     e24:	ldr	r3, [r3, r2]
     e28:	cmp	r3, #0
     e2c:	bxeq	lr
     e30:	bx	r3
     e34:	.word	0x000123a4
     e38:	.word	0x000123a0
     e3c:	.word	0x000121e0
     e40:	.word	0x000000b4

00000e44 <register_tm_clones>:
     e44:	ldr	r1, [pc, #56]	; e84 <register_tm_clones+0x40>
     e48:	ldr	r0, [pc, #56]	; e88 <register_tm_clones+0x44>
     e4c:	add	r1, pc, r1
     e50:	add	r0, pc, r0
     e54:	sub	r1, r1, r0
     e58:	ldr	r3, [pc, #44]	; e8c <register_tm_clones+0x48>
     e5c:	asr	r1, r1, #2
     e60:	add	r3, pc, r3
     e64:	add	r1, r1, r1, lsr #31
     e68:	asrs	r1, r1, #1
     e6c:	bxeq	lr
     e70:	ldr	r2, [pc, #24]	; e90 <register_tm_clones+0x4c>
     e74:	ldr	r3, [r3, r2]
     e78:	cmp	r3, #0
     e7c:	bxeq	lr
     e80:	bx	r3
     e84:	.word	0x00012358
     e88:	.word	0x00012354
     e8c:	.word	0x00012198
     e90:	.word	0x000000dc

00000e94 <__do_global_dtors_aux>:
     e94:	ldr	r3, [pc, #76]	; ee8 <__do_global_dtors_aux+0x54>
     e98:	ldr	r2, [pc, #76]	; eec <__do_global_dtors_aux+0x58>
     e9c:	add	r3, pc, r3
     ea0:	add	r2, pc, r2
     ea4:	ldrb	r3, [r3]
     ea8:	cmp	r3, #0
     eac:	bxne	lr
     eb0:	ldr	r3, [pc, #56]	; ef0 <__do_global_dtors_aux+0x5c>
     eb4:	push	{r4, lr}
     eb8:	ldr	r3, [r2, r3]
     ebc:	cmp	r3, #0
     ec0:	beq	ed0 <__do_global_dtors_aux+0x3c>
     ec4:	ldr	r3, [pc, #40]	; ef4 <__do_global_dtors_aux+0x60>
     ec8:	ldr	r0, [pc, r3]
     ecc:	bl	bf0 <__cxa_finalize@plt>
     ed0:	bl	df8 <deregister_tm_clones>
     ed4:	ldr	r3, [pc, #28]	; ef8 <__do_global_dtors_aux+0x64>
     ed8:	mov	r2, #1
     edc:	add	r3, pc, r3
     ee0:	strb	r2, [r3]
     ee4:	pop	{r4, pc}
     ee8:	.word	0x00012308
     eec:	.word	0x00012158
     ef0:	.word	0x000000b0
     ef4:	.word	0x0001221c
     ef8:	.word	0x000122c8

00000efc <frame_dummy>:
     efc:	ldr	r0, [pc, #56]	; f3c <frame_dummy+0x40>
     f00:	ldr	r3, [pc, #56]	; f40 <frame_dummy+0x44>
     f04:	add	r0, pc, r0
     f08:	ldr	r2, [r0]
     f0c:	add	r3, pc, r3
     f10:	cmp	r2, #0
     f14:	bne	f1c <frame_dummy+0x20>
     f18:	b	e44 <register_tm_clones>
     f1c:	ldr	r2, [pc, #32]	; f44 <frame_dummy+0x48>
     f20:	ldr	r3, [r3, r2]
     f24:	cmp	r3, #0
     f28:	beq	f18 <frame_dummy+0x1c>
     f2c:	push	{r4, lr}
     f30:	blx	r3
     f34:	pop	{r4, lr}
     f38:	b	e44 <register_tm_clones>
     f3c:	.word	0x00011ff0
     f40:	.word	0x000120ec
     f44:	.word	0x000000d8

00000f48 <propagate_resv.part.0>:
     f48:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
     f4c:	sub	sp, sp, #24
     f50:	ldr	r4, [pc, #132]	; fdc <propagate_resv.part.0+0x94>
     f54:	ldr	lr, [pc, #132]	; fe0 <propagate_resv.part.0+0x98>
     f58:	add	r4, pc, r4
     f5c:	ldr	ip, [pc, #128]	; fe4 <propagate_resv.part.0+0x9c>
     f60:	ldr	sl, [r4, lr]
     f64:	ldr	r7, [sp, #56]	; 0x38
     f68:	mov	r6, r3
     f6c:	ldr	r3, [sl]
     f70:	add	ip, pc, ip
     f74:	mov	r8, r2
     f78:	str	ip, [sp]
     f7c:	mov	r2, r3
     f80:	str	r1, [sp, #4]
     f84:	str	r6, [sp, #8]
     f88:	str	r7, [sp, #12]
     f8c:	mov	r3, #0
     f90:	mov	r5, r1
     f94:	mov	r9, r0
     f98:	bl	be4 <sendto_match_servs@plt>
     f9c:	ldr	r2, [pc, #68]	; fe8 <propagate_resv.part.0+0xa0>
     fa0:	ldr	ip, [pc, #68]	; fec <propagate_resv.part.0+0xa4>
     fa4:	ldr	r3, [sl]
     fa8:	ldr	r2, [r4, r2]
     fac:	add	ip, pc, ip
     fb0:	mov	r0, r9
     fb4:	ldr	r2, [r2]
     fb8:	mov	r1, r5
     fbc:	str	r8, [sp, #8]
     fc0:	str	r7, [sp, #16]
     fc4:	str	r6, [sp, #12]
     fc8:	str	r5, [sp, #4]
     fcc:	str	ip, [sp]
     fd0:	bl	be4 <sendto_match_servs@plt>
     fd4:	add	sp, sp, #24
     fd8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
     fdc:	.word	0x000120a0
     fe0:	.word	0x000000c0
     fe4:	.word	0x0000183c
     fe8:	.word	0x000000e4
     fec:	.word	0x00001810

00000ff0 <remove_resv>:
     ff0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
     ff4:	subs	r6, r1, #0
     ff8:	ldr	r7, [pc, #1516]	; 15ec <remove_resv+0x5fc>
     ffc:	sub	sp, sp, #24
    1000:	mov	r8, r0
    1004:	mov	r9, r2
    1008:	add	r7, pc, r7
    100c:	beq	1028 <remove_resv+0x38>
    1010:	ldr	r3, [pc, #1496]	; 15f0 <remove_resv+0x600>
    1014:	ldrb	r2, [r6]
    1018:	ldr	r3, [r7, r3]
    101c:	ldr	r3, [r3, r2, lsl #2]
    1020:	tst	r3, #512	; 0x200
    1024:	bne	12c4 <remove_resv+0x2d4>
    1028:	ldr	r3, [pc, #1476]	; 15f4 <remove_resv+0x604>
    102c:	ldr	sl, [r7, r3]
    1030:	ldr	r4, [sl]
    1034:	cmp	r4, #0
    1038:	bne	104c <remove_resv+0x5c>
    103c:	b	128c <remove_resv+0x29c>
    1040:	ldr	r4, [r4, #8]
    1044:	cmp	r4, #0
    1048:	beq	128c <remove_resv+0x29c>
    104c:	ldr	r5, [r4]
    1050:	mov	r1, r6
    1054:	ldr	r0, [r5, #16]
    1058:	bl	d7c <irccmp@plt>
    105c:	cmp	r0, #0
    1060:	bne	1040 <remove_resv+0x50>
    1064:	ldr	r3, [r5, #44]	; 0x2c
    1068:	cmp	r3, #0
    106c:	beq	11bc <remove_resv+0x1cc>
    1070:	cmp	r9, #0
    1074:	beq	1410 <remove_resv+0x420>
    1078:	ldr	r3, [pc, #1400]	; 15f8 <remove_resv+0x608>
    107c:	ldr	r3, [r7, r3]
    1080:	ldr	r4, [r3]
    1084:	cmp	r4, #0
    1088:	bne	109c <remove_resv+0xac>
    108c:	b	14d8 <remove_resv+0x4e8>
    1090:	ldr	r4, [r4, #8]
    1094:	cmp	r4, #0
    1098:	beq	14d8 <remove_resv+0x4e8>
    109c:	ldr	r3, [r4]
    10a0:	cmp	r5, r3
    10a4:	bne	1090 <remove_resv+0xa0>
    10a8:	ldr	r1, [pc, #1356]	; 15fc <remove_resv+0x60c>
    10ac:	mov	r2, r6
    10b0:	add	r1, pc, r1
    10b4:	mov	r0, r8
    10b8:	bl	d34 <sendto_one_notice@plt>
    10bc:	mov	r0, r8
    10c0:	bl	c80 <get_oper_name@plt>
    10c4:	ldr	r2, [pc, #1332]	; 1600 <remove_resv+0x610>
    10c8:	mov	r1, #0
    10cc:	add	r2, pc, r2
    10d0:	str	r6, [sp]
    10d4:	mov	r3, r0
    10d8:	mov	r0, #256	; 0x100
    10dc:	bl	c50 <sendto_realops_snomask@plt>
    10e0:	mov	r0, r8
    10e4:	bl	c80 <get_oper_name@plt>
    10e8:	ldr	r1, [pc, #1300]	; 1604 <remove_resv+0x614>
    10ec:	mov	r3, r6
    10f0:	add	r1, pc, r1
    10f4:	mov	r2, r0
    10f8:	mov	r0, #7
    10fc:	bl	cf8 <ilog@plt>
    1100:	bl	bcc <rb_current_time@plt>
    1104:	ldr	r3, [r5, #40]	; 0x28
    1108:	cmp	r0, r3
    110c:	mov	r6, r0
    1110:	strgt	r0, [r5, #40]	; 0x28
    1114:	movgt	r3, r0
    1118:	addle	r3, r3, #1
    111c:	strle	r3, [r5, #40]	; 0x28
    1120:	str	r3, [r5, #36]	; 0x24
    1124:	ldr	r0, [r5, #12]
    1128:	bl	c44 <operhash_delete@plt>
    112c:	mov	r0, r8
    1130:	bl	c80 <get_oper_name@plt>
    1134:	bl	ca4 <operhash_add@plt>
    1138:	ldr	r3, [r5, #4]
    113c:	ldr	r9, [r5, #40]	; 0x28
    1140:	ldr	r2, [r5, #44]	; 0x2c
    1144:	ldr	ip, [pc, #1212]	; 1608 <remove_resv+0x618>
    1148:	orr	r3, r3, #8912896	; 0x880000
    114c:	ldr	sl, [pc, #1208]	; 160c <remove_resv+0x61c>
    1150:	ldr	lr, [pc, #1208]	; 1610 <remove_resv+0x620>
    1154:	str	r3, [r5, #4]
    1158:	add	r8, r8, #396	; 0x18c
    115c:	sub	r2, r2, r9
    1160:	mov	r3, #0
    1164:	add	ip, pc, ip
    1168:	str	r0, [r5, #12]
    116c:	ldr	lr, [r7, lr]
    1170:	ldr	r0, [r7, sl]
    1174:	str	r2, [sp, #20]
    1178:	ldr	r2, [lr]
    117c:	ldr	r0, [r0]
    1180:	str	r9, [sp, #12]
    1184:	str	r3, [sp, #16]
    1188:	ldr	lr, [r5, #16]
    118c:	mov	r1, r3
    1190:	orr	r2, r0, r2
    1194:	stmib	sp, {r8, lr}
    1198:	mov	r0, r3
    119c:	str	ip, [sp]
    11a0:	bl	cb0 <sendto_server@plt>
    11a4:	mov	r2, r6
    11a8:	mov	r1, r4
    11ac:	mov	r0, r5
    11b0:	add	sp, sp, #24
    11b4:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
    11b8:	b	c74 <deactivate_conf@plt>
    11bc:	cmp	r9, #0
    11c0:	beq	11d8 <remove_resv+0x1e8>
    11c4:	ldr	r3, [pc, #1096]	; 1614 <remove_resv+0x624>
    11c8:	ldr	r3, [r7, r3]
    11cc:	ldr	r3, [r3, #8]
    11d0:	cmp	r3, #0
    11d4:	bne	1508 <remove_resv+0x518>
    11d8:	ldr	r1, [pc, #1080]	; 1618 <remove_resv+0x628>
    11dc:	mov	r2, r6
    11e0:	add	r1, pc, r1
    11e4:	mov	r0, r8
    11e8:	bl	d34 <sendto_one_notice@plt>
    11ec:	mov	r0, r8
    11f0:	bl	c80 <get_oper_name@plt>
    11f4:	ldr	r1, [pc, #1056]	; 161c <remove_resv+0x62c>
    11f8:	mov	r3, r6
    11fc:	add	r1, pc, r1
    1200:	mov	r2, r0
    1204:	mov	r0, #7
    1208:	bl	cf8 <ilog@plt>
    120c:	ldr	r7, [r5, #36]	; 0x24
    1210:	cmp	r7, #0
    1214:	beq	13d8 <remove_resv+0x3e8>
    1218:	mov	r0, r8
    121c:	bl	c80 <get_oper_name@plt>
    1220:	ldr	r2, [pc, #1016]	; 1620 <remove_resv+0x630>
    1224:	str	r6, [sp]
    1228:	add	r2, pc, r2
    122c:	mov	r1, #0
    1230:	mov	r3, r0
    1234:	mov	r0, #256	; 0x100
    1238:	bl	c50 <sendto_realops_snomask@plt>
    123c:	ldmib	r4, {r2, r3}
    1240:	mov	r0, r4
    1244:	cmp	r3, #0
    1248:	strne	r2, [r3, #4]
    124c:	ldrne	r2, [r4, #4]
    1250:	streq	r2, [sl, #4]
    1254:	cmp	r2, #0
    1258:	strne	r3, [r2, #8]
    125c:	streq	r3, [sl]
    1260:	ldr	r3, [sl, #8]
    1264:	mov	r2, #0
    1268:	sub	r3, r3, #1
    126c:	str	r2, [r4, #4]
    1270:	str	r2, [r4, #8]
    1274:	str	r3, [sl, #8]
    1278:	bl	c8c <rb_free_rb_dlink_node@plt>
    127c:	mov	r0, r5
    1280:	add	sp, sp, #24
    1284:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
    1288:	b	cd4 <free_conf@plt>
    128c:	cmp	r9, #0
    1290:	beq	12a8 <remove_resv+0x2b8>
    1294:	ldr	r3, [pc, #888]	; 1614 <remove_resv+0x624>
    1298:	ldr	r3, [r7, r3]
    129c:	ldr	r3, [r3, #8]
    12a0:	cmp	r3, #0
    12a4:	bne	153c <remove_resv+0x54c>
    12a8:	ldr	r1, [pc, #884]	; 1624 <remove_resv+0x634>
    12ac:	mov	r2, r6
    12b0:	mov	r0, r8
    12b4:	add	r1, pc, r1
    12b8:	add	sp, sp, #24
    12bc:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
    12c0:	b	d34 <sendto_one_notice@plt>
    12c4:	mov	r0, r6
    12c8:	bl	d70 <hash_find_resv@plt>
    12cc:	subs	r5, r0, #0
    12d0:	beq	15b0 <remove_resv+0x5c0>
    12d4:	ldr	r3, [r5, #44]	; 0x2c
    12d8:	cmp	r3, #0
    12dc:	beq	142c <remove_resv+0x43c>
    12e0:	cmp	r9, #0
    12e4:	beq	1410 <remove_resv+0x420>
    12e8:	ldr	r3, [pc, #776]	; 15f8 <remove_resv+0x608>
    12ec:	ldr	r3, [r7, r3]
    12f0:	ldr	r4, [r3]
    12f4:	cmp	r4, #0
    12f8:	bne	130c <remove_resv+0x31c>
    12fc:	b	14d8 <remove_resv+0x4e8>
    1300:	ldr	r4, [r4, #8]
    1304:	cmp	r4, #0
    1308:	beq	14d8 <remove_resv+0x4e8>
    130c:	ldr	r3, [r4]
    1310:	cmp	r5, r3
    1314:	bne	1300 <remove_resv+0x310>
    1318:	ldr	r1, [pc, #776]	; 1628 <remove_resv+0x638>
    131c:	mov	r2, r6
    1320:	add	r1, pc, r1
    1324:	mov	r0, r8
    1328:	bl	d34 <sendto_one_notice@plt>
    132c:	mov	r0, r8
    1330:	bl	c80 <get_oper_name@plt>
    1334:	ldr	r2, [pc, #752]	; 162c <remove_resv+0x63c>
    1338:	mov	r1, #0
    133c:	add	r2, pc, r2
    1340:	str	r6, [sp]
    1344:	mov	r3, r0
    1348:	mov	r0, #256	; 0x100
    134c:	bl	c50 <sendto_realops_snomask@plt>
    1350:	mov	r0, r8
    1354:	bl	c80 <get_oper_name@plt>
    1358:	ldr	r1, [pc, #720]	; 1630 <remove_resv+0x640>
    135c:	mov	r3, r6
    1360:	add	r1, pc, r1
    1364:	mov	r2, r0
    1368:	mov	r0, #7
    136c:	bl	cf8 <ilog@plt>
    1370:	bl	bcc <rb_current_time@plt>
    1374:	ldr	r3, [r5, #40]	; 0x28
    1378:	cmp	r0, r3
    137c:	mov	r6, r0
    1380:	strgt	r0, [r5, #40]	; 0x28
    1384:	movgt	r3, r0
    1388:	ble	1570 <remove_resv+0x580>
    138c:	str	r3, [r5, #36]	; 0x24
    1390:	ldr	r0, [r5, #12]
    1394:	bl	c44 <operhash_delete@plt>
    1398:	mov	r0, r8
    139c:	bl	c80 <get_oper_name@plt>
    13a0:	bl	ca4 <operhash_add@plt>
    13a4:	ldr	r3, [r5, #4]
    13a8:	ldr	r9, [r5, #40]	; 0x28
    13ac:	ldr	r2, [r5, #44]	; 0x2c
    13b0:	ldr	ip, [pc, #636]	; 1634 <remove_resv+0x644>
    13b4:	orr	r3, r3, #8912896	; 0x880000
    13b8:	str	r3, [r5, #4]
    13bc:	ldr	sl, [pc, #584]	; 160c <remove_resv+0x61c>
    13c0:	ldr	lr, [pc, #584]	; 1610 <remove_resv+0x620>
    13c4:	add	r8, r8, #396	; 0x18c
    13c8:	sub	r2, r2, r9
    13cc:	mov	r3, #0
    13d0:	add	ip, pc, ip
    13d4:	b	1168 <remove_resv+0x178>
    13d8:	mov	r2, r7
    13dc:	ldr	r1, [r5, #16]
    13e0:	mov	r0, #3
    13e4:	bl	d40 <bandb_del@plt>
    13e8:	mov	r0, r8
    13ec:	bl	c80 <get_oper_name@plt>
    13f0:	ldr	r2, [pc, #576]	; 1638 <remove_resv+0x648>
    13f4:	str	r6, [sp]
    13f8:	mov	r1, r7
    13fc:	add	r2, pc, r2
    1400:	mov	r3, r0
    1404:	mov	r0, #256	; 0x100
    1408:	bl	c50 <sendto_realops_snomask@plt>
    140c:	b	123c <remove_resv+0x24c>
    1410:	ldr	r1, [pc, #548]	; 163c <remove_resv+0x64c>
    1414:	mov	r2, r6
    1418:	mov	r0, r8
    141c:	add	r1, pc, r1
    1420:	add	sp, sp, #24
    1424:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
    1428:	b	d34 <sendto_one_notice@plt>
    142c:	cmp	r9, #0
    1430:	beq	1448 <remove_resv+0x458>
    1434:	ldr	r3, [pc, #472]	; 1614 <remove_resv+0x624>
    1438:	ldr	r3, [r7, r3]
    143c:	ldr	r3, [r3, #8]
    1440:	cmp	r3, #0
    1444:	bne	157c <remove_resv+0x58c>
    1448:	ldr	r1, [pc, #496]	; 1640 <remove_resv+0x650>
    144c:	mov	r2, r6
    1450:	add	r1, pc, r1
    1454:	mov	r0, r8
    1458:	bl	d34 <sendto_one_notice@plt>
    145c:	mov	r0, r8
    1460:	bl	c80 <get_oper_name@plt>
    1464:	ldr	r1, [pc, #472]	; 1644 <remove_resv+0x654>
    1468:	mov	r3, r6
    146c:	add	r1, pc, r1
    1470:	mov	r2, r0
    1474:	mov	r0, #7
    1478:	bl	cf8 <ilog@plt>
    147c:	ldr	r4, [r5, #36]	; 0x24
    1480:	cmp	r4, #0
    1484:	bne	14e0 <remove_resv+0x4f0>
    1488:	mov	r2, r4
    148c:	ldr	r1, [r5, #16]
    1490:	mov	r0, #3
    1494:	bl	d40 <bandb_del@plt>
    1498:	mov	r0, r8
    149c:	bl	c80 <get_oper_name@plt>
    14a0:	ldr	r2, [pc, #416]	; 1648 <remove_resv+0x658>
    14a4:	str	r6, [sp]
    14a8:	mov	r1, r4
    14ac:	add	r2, pc, r2
    14b0:	mov	r3, r0
    14b4:	mov	r0, #256	; 0x100
    14b8:	bl	c50 <sendto_realops_snomask@plt>
    14bc:	mov	r0, r6
    14c0:	mov	r1, r5
    14c4:	bl	d10 <del_from_resv_hash@plt>
    14c8:	mov	r0, r5
    14cc:	add	sp, sp, #24
    14d0:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
    14d4:	b	cd4 <free_conf@plt>
    14d8:	add	sp, sp, #24
    14dc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    14e0:	mov	r0, r8
    14e4:	bl	c80 <get_oper_name@plt>
    14e8:	ldr	r2, [pc, #348]	; 164c <remove_resv+0x65c>
    14ec:	str	r6, [sp]
    14f0:	add	r2, pc, r2
    14f4:	mov	r1, #0
    14f8:	mov	r3, r0
    14fc:	mov	r0, #256	; 0x100
    1500:	bl	c50 <sendto_realops_snomask@plt>
    1504:	b	14bc <remove_resv+0x4cc>
    1508:	ldr	r3, [pc, #320]	; 1650 <remove_resv+0x660>
    150c:	ldr	r0, [pc, #320]	; 1654 <remove_resv+0x664>
    1510:	ldr	r1, [pc, #320]	; 1658 <remove_resv+0x668>
    1514:	ldr	r3, [r7, r3]
    1518:	add	r0, pc, r0
    151c:	str	r6, [sp, #4]
    1520:	mov	r2, #512	; 0x200
    1524:	ldr	r3, [r3]
    1528:	add	r1, pc, r1
    152c:	str	r0, [sp]
    1530:	mov	r0, r8
    1534:	bl	c98 <cluster_generic@plt>
    1538:	b	11d8 <remove_resv+0x1e8>
    153c:	ldr	r3, [pc, #268]	; 1650 <remove_resv+0x660>
    1540:	ldr	r0, [pc, #276]	; 165c <remove_resv+0x66c>
    1544:	ldr	r1, [pc, #276]	; 1660 <remove_resv+0x670>
    1548:	ldr	r3, [r7, r3]
    154c:	add	r0, pc, r0
    1550:	mov	r2, #512	; 0x200
    1554:	add	r1, pc, r1
    1558:	str	r6, [sp, #4]
    155c:	ldr	r3, [r3]
    1560:	str	r0, [sp]
    1564:	mov	r0, r8
    1568:	bl	c98 <cluster_generic@plt>
    156c:	b	12a8 <remove_resv+0x2b8>
    1570:	add	r3, r3, #1
    1574:	str	r3, [r5, #40]	; 0x28
    1578:	b	138c <remove_resv+0x39c>
    157c:	ldr	r3, [pc, #204]	; 1650 <remove_resv+0x660>
    1580:	ldr	r0, [pc, #220]	; 1664 <remove_resv+0x674>
    1584:	ldr	r1, [pc, #220]	; 1668 <remove_resv+0x678>
    1588:	ldr	r3, [r7, r3]
    158c:	add	r0, pc, r0
    1590:	str	r6, [sp, #4]
    1594:	mov	r2, #512	; 0x200
    1598:	ldr	r3, [r3]
    159c:	add	r1, pc, r1
    15a0:	str	r0, [sp]
    15a4:	mov	r0, r8
    15a8:	bl	c98 <cluster_generic@plt>
    15ac:	b	1448 <remove_resv+0x458>
    15b0:	cmp	r9, #0
    15b4:	beq	12a8 <remove_resv+0x2b8>
    15b8:	ldr	r3, [pc, #84]	; 1614 <remove_resv+0x624>
    15bc:	ldr	r3, [r7, r3]
    15c0:	ldr	r3, [r3, #8]
    15c4:	cmp	r3, #0
    15c8:	beq	12a8 <remove_resv+0x2b8>
    15cc:	ldr	r3, [pc, #124]	; 1650 <remove_resv+0x660>
    15d0:	ldr	r0, [pc, #148]	; 166c <remove_resv+0x67c>
    15d4:	ldr	r1, [pc, #148]	; 1670 <remove_resv+0x680>
    15d8:	add	r0, pc, r0
    15dc:	mov	r2, #512	; 0x200
    15e0:	ldr	r3, [r7, r3]
    15e4:	add	r1, pc, r1
    15e8:	b	1558 <remove_resv+0x568>
    15ec:	.word	0x00011ff0
    15f0:	.word	0x000000d4
    15f4:	.word	0x000000b8
    15f8:	.word	0x000000bc
    15fc:	.word	0x000017c0
    1600:	.word	0x0000181c
    1604:	.word	0x0000179c
    1608:	.word	0x000016ec
    160c:	.word	0x000000c4
    1610:	.word	0x000000c8
    1614:	.word	0x000000d0
    1618:	.word	0x00001690
    161c:	.word	0x00001690
    1620:	.word	0x00001694
    1624:	.word	0x00001558
    1628:	.word	0x00001550
    162c:	.word	0x000015ac
    1630:	.word	0x0000152c
    1634:	.word	0x00001480
    1638:	.word	0x0000149c
    163c:	.word	0x00001400
    1640:	.word	0x00001420
    1644:	.word	0x00001420
    1648:	.word	0x000013ec
    164c:	.word	0x000013cc
    1650:	.word	0x000000c0
    1654:	.word	0x00001484
    1658:	.word	0x000012dc
    165c:	.word	0x00001450
    1660:	.word	0x000012b0
    1664:	.word	0x00001410
    1668:	.word	0x00001268
    166c:	.word	0x000013c4
    1670:	.word	0x00001220

00001674 <mo_unresv>:
    1674:	push	{r4, r5, r6, r7, lr}
    1678:	mov	r4, r2
    167c:	ldr	r2, [r2, #24]
    1680:	sub	sp, sp, #12
    1684:	ldr	r5, [pc, #336]	; 17dc <mo_unresv+0x168>
    1688:	cmp	r2, #0
    168c:	add	r5, pc, r5
    1690:	ldr	r6, [sp, #32]
    1694:	beq	16e0 <mo_unresv+0x6c>
    1698:	ldr	r0, [r2, #36]	; 0x24
    169c:	cmp	r0, #0
    16a0:	beq	16e0 <mo_unresv+0x6c>
    16a4:	ldr	r1, [pc, #308]	; 17e0 <mo_unresv+0x16c>
    16a8:	mov	r7, r3
    16ac:	add	r1, pc, r1
    16b0:	bl	d64 <privilegeset_in_set@plt>
    16b4:	cmp	r0, #0
    16b8:	beq	16e0 <mo_unresv+0x6c>
    16bc:	cmp	r7, #4
    16c0:	beq	1714 <mo_unresv+0xa0>
    16c4:	mov	r7, #1
    16c8:	mov	r2, r7
    16cc:	ldr	r1, [r6, #4]
    16d0:	mov	r0, r4
    16d4:	add	sp, sp, #12
    16d8:	pop	{r4, r5, r6, r7, lr}
    16dc:	b	ff0 <remove_resv>
    16e0:	ldr	r2, [pc, #252]	; 17e4 <mo_unresv+0x170>
    16e4:	ldr	r1, [pc, #252]	; 17e8 <mo_unresv+0x174>
    16e8:	add	r3, r4, #88	; 0x58
    16ec:	add	r1, pc, r1
    16f0:	ldr	r2, [r5, r2]
    16f4:	str	r1, [sp, #32]
    16f8:	ldr	r1, [pc, #236]	; 17ec <mo_unresv+0x178>
    16fc:	mov	r0, r4
    1700:	add	r2, r2, #88	; 0x58
    1704:	add	r1, pc, r1
    1708:	add	sp, sp, #12
    170c:	pop	{r4, r5, r6, r7, lr}
    1710:	b	c08 <sendto_one@plt>
    1714:	ldr	r1, [pc, #212]	; 17f0 <mo_unresv+0x17c>
    1718:	ldr	r0, [r6, #8]
    171c:	add	r1, pc, r1
    1720:	bl	d7c <irccmp@plt>
    1724:	subs	r7, r0, #0
    1728:	bne	16c4 <mo_unresv+0x50>
    172c:	ldr	r3, [r4, #24]
    1730:	cmp	r3, #0
    1734:	beq	1758 <mo_unresv+0xe4>
    1738:	ldr	r0, [r3, #36]	; 0x24
    173c:	cmp	r0, #0
    1740:	beq	1758 <mo_unresv+0xe4>
    1744:	ldr	r1, [pc, #168]	; 17f4 <mo_unresv+0x180>
    1748:	add	r1, pc, r1
    174c:	bl	d64 <privilegeset_in_set@plt>
    1750:	cmp	r0, #0
    1754:	bne	1784 <mo_unresv+0x110>
    1758:	ldr	r2, [pc, #132]	; 17e4 <mo_unresv+0x170>
    175c:	ldr	r1, [pc, #148]	; 17f8 <mo_unresv+0x184>
    1760:	add	r3, r4, #88	; 0x58
    1764:	add	r1, pc, r1
    1768:	ldr	r2, [r5, r2]
    176c:	str	r1, [sp, #32]
    1770:	ldr	r1, [pc, #132]	; 17fc <mo_unresv+0x188>
    1774:	mov	r0, r4
    1778:	add	r2, r2, #88	; 0x58
    177c:	add	r1, pc, r1
    1780:	b	1708 <mo_unresv+0x94>
    1784:	ldr	r3, [pc, #116]	; 1800 <mo_unresv+0x18c>
    1788:	ldr	r1, [pc, #116]	; 1804 <mo_unresv+0x190>
    178c:	ldr	r2, [r6, #12]
    1790:	ldr	r3, [r5, r3]
    1794:	add	r1, pc, r1
    1798:	ldr	r0, [r6, #4]
    179c:	ldr	r3, [r3]
    17a0:	str	r1, [sp]
    17a4:	ldr	r1, [pc, #92]	; 1808 <mo_unresv+0x194>
    17a8:	str	r0, [sp, #4]
    17ac:	add	r1, pc, r1
    17b0:	mov	r0, r4
    17b4:	bl	bb4 <propagate_generic@plt>
    17b8:	ldr	r3, [pc, #36]	; 17e4 <mo_unresv+0x170>
    17bc:	ldr	r0, [r6, #12]
    17c0:	ldr	r1, [r5, r3]
    17c4:	add	r1, r1, #88	; 0x58
    17c8:	bl	d04 <match@plt>
    17cc:	cmp	r0, #0
    17d0:	bne	16c8 <mo_unresv+0x54>
    17d4:	add	sp, sp, #12
    17d8:	pop	{r4, r5, r6, r7, pc}
    17dc:	.word	0x0001196c
    17e0:	.word	0x00001298
    17e4:	.word	0x000000e0
    17e8:	.word	0x00001250
    17ec:	.word	0x00001210
    17f0:	.word	0x00001234
    17f4:	.word	0x00001218
    17f8:	.word	0x000011f0
    17fc:	.word	0x00001198
    1800:	.word	0x000000c0
    1804:	.word	0x00001208
    1808:	.word	0x00001058

0000180c <handle_remote_unresv>:
    180c:	ldr	r2, [r0, #32]
    1810:	push	{r4, r5, r6, lr}
    1814:	add	r2, r2, #88	; 0x58
    1818:	mov	r4, r0
    181c:	mov	r5, r1
    1820:	mov	r3, #512	; 0x200
    1824:	add	r1, r0, #163	; 0xa3
    1828:	add	r0, r0, #152	; 0x98
    182c:	bl	d58 <find_shared_conf@plt>
    1830:	cmp	r0, #0
    1834:	popeq	{r4, r5, r6, pc}
    1838:	mov	r1, r5
    183c:	mov	r0, r4
    1840:	mov	r2, #0
    1844:	pop	{r4, r5, r6, lr}
    1848:	b	ff0 <remove_resv>

0000184c <me_unresv>:
    184c:	ldrh	r3, [r2, #80]	; 0x50
    1850:	ldr	r1, [sp]
    1854:	cmp	r3, #64	; 0x40
    1858:	bxne	lr
    185c:	ldr	r3, [r2, #24]
    1860:	cmp	r3, #0
    1864:	bxeq	lr
    1868:	ldr	r1, [r1, #4]
    186c:	mov	r0, r2
    1870:	b	180c <handle_remote_unresv>

00001874 <ms_unresv>:
    1874:	push	{r4, r5, r6, lr}
    1878:	sub	sp, sp, #8
    187c:	ldr	r4, [pc, #144]	; 1914 <ms_unresv+0xa0>
    1880:	ldr	r3, [pc, #144]	; 1918 <ms_unresv+0xa4>
    1884:	add	r4, pc, r4
    1888:	ldr	r5, [sp, #24]
    188c:	ldr	r3, [r4, r3]
    1890:	ldr	r1, [pc, #132]	; 191c <ms_unresv+0xa8>
    1894:	ldr	ip, [r5, #4]
    1898:	add	r1, pc, r1
    189c:	ldr	r0, [r5, #8]
    18a0:	ldr	r3, [r3]
    18a4:	str	r1, [sp]
    18a8:	ldr	r1, [pc, #112]	; 1920 <ms_unresv+0xac>
    18ac:	mov	r6, r2
    18b0:	str	r0, [sp, #4]
    18b4:	mov	r2, ip
    18b8:	mov	r0, r6
    18bc:	add	r1, pc, r1
    18c0:	bl	bb4 <propagate_generic@plt>
    18c4:	ldr	r3, [pc, #88]	; 1924 <ms_unresv+0xb0>
    18c8:	ldr	r0, [r5, #4]
    18cc:	ldr	r1, [r4, r3]
    18d0:	add	r1, r1, #88	; 0x58
    18d4:	bl	d04 <match@plt>
    18d8:	cmp	r0, #0
    18dc:	beq	18ec <ms_unresv+0x78>
    18e0:	ldrh	r3, [r6, #80]	; 0x50
    18e4:	cmp	r3, #64	; 0x40
    18e8:	beq	18f4 <ms_unresv+0x80>
    18ec:	add	sp, sp, #8
    18f0:	pop	{r4, r5, r6, pc}
    18f4:	ldr	r3, [r6, #24]
    18f8:	cmp	r3, #0
    18fc:	beq	18ec <ms_unresv+0x78>
    1900:	ldr	r1, [r5, #8]
    1904:	mov	r0, r6
    1908:	add	sp, sp, #8
    190c:	pop	{r4, r5, r6, lr}
    1910:	b	180c <handle_remote_unresv>
    1914:	.word	0x00011774
    1918:	.word	0x000000c0
    191c:	.word	0x00001104
    1920:	.word	0x00000f48
    1924:	.word	0x000000e0

00001928 <parse_resv>:
    1928:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    192c:	mov	r4, r0
    1930:	mov	r5, r1
    1934:	ldrd	r0, [r0, #64]	; 0x40
    1938:	sub	sp, sp, #44	; 0x2c
    193c:	mov	r1, #0
    1940:	and	r0, r0, #8192	; 0x2000
    1944:	ldr	r6, [pc, #2108]	; 2188 <parse_resv+0x860>
    1948:	mov	r7, r3
    194c:	orrs	r3, r0, r1
    1950:	mov	r8, r2
    1954:	add	r6, pc, r6
    1958:	ldr	r9, [sp, #80]	; 0x50
    195c:	beq	196c <parse_resv+0x44>
    1960:	ldrh	r3, [r4, #80]	; 0x50
    1964:	cmp	r3, #64	; 0x40
    1968:	beq	1994 <parse_resv+0x6c>
    196c:	ldr	r2, [r4, #32]
    1970:	cmp	r7, #0
    1974:	movgt	r3, #128	; 0x80
    1978:	movle	r3, #256	; 0x100
    197c:	add	r2, r2, #88	; 0x58
    1980:	add	r1, r4, #163	; 0xa3
    1984:	add	r0, r4, #152	; 0x98
    1988:	bl	d58 <find_shared_conf@plt>
    198c:	cmp	r0, #0
    1990:	beq	1a10 <parse_resv+0xe8>
    1994:	cmp	r5, #0
    1998:	beq	19b4 <parse_resv+0x8c>
    199c:	ldr	r3, [pc, #2024]	; 218c <parse_resv+0x864>
    19a0:	ldrb	r2, [r5]
    19a4:	ldr	r3, [r6, r3]
    19a8:	ldr	r3, [r3, r2, lsl #2]
    19ac:	tst	r3, #512	; 0x200
    19b0:	bne	1a18 <parse_resv+0xf0>
    19b4:	mov	r0, r5
    19b8:	bl	d88 <clean_resv_nick@plt>
    19bc:	cmp	r0, #0
    19c0:	beq	1a8c <parse_resv+0x164>
    19c4:	mov	r0, r5
    19c8:	bl	cec <strlen@plt>
    19cc:	cmp	r0, #64	; 0x40
    19d0:	bhi	1a70 <parse_resv+0x148>
    19d4:	mov	r0, r5
    19d8:	bl	d4c <valid_wild_card_simple@plt>
    19dc:	cmp	r0, #0
    19e0:	beq	1a44 <parse_resv+0x11c>
    19e4:	mov	r0, r5
    19e8:	bl	d1c <find_nick_resv_mask@plt>
    19ec:	subs	fp, r0, #0
    19f0:	beq	1c00 <parse_resv+0x2d8>
    19f4:	ldr	r1, [pc, #1940]	; 2190 <parse_resv+0x868>
    19f8:	mov	r2, r5
    19fc:	mov	r0, r4
    1a00:	add	r1, pc, r1
    1a04:	add	sp, sp, #44	; 0x2c
    1a08:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    1a0c:	b	d34 <sendto_one_notice@plt>
    1a10:	add	sp, sp, #44	; 0x2c
    1a14:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    1a18:	mov	r0, r5
    1a1c:	bl	d70 <hash_find_resv@plt>
    1a20:	subs	fp, r0, #0
    1a24:	beq	1a60 <parse_resv+0x138>
    1a28:	ldr	r1, [pc, #1892]	; 2194 <parse_resv+0x86c>
    1a2c:	mov	r2, r5
    1a30:	mov	r0, r4
    1a34:	add	r1, pc, r1
    1a38:	add	sp, sp, #44	; 0x2c
    1a3c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    1a40:	b	d34 <sendto_one_notice@plt>
    1a44:	ldr	r3, [pc, #1868]	; 2198 <parse_resv+0x870>
    1a48:	ldr	r1, [pc, #1868]	; 219c <parse_resv+0x874>
    1a4c:	mov	r0, r4
    1a50:	ldr	r3, [r6, r3]
    1a54:	add	r1, pc, r1
    1a58:	ldr	r2, [r3, #240]	; 0xf0
    1a5c:	b	1a38 <parse_resv+0x110>
    1a60:	mov	r0, r5
    1a64:	bl	cec <strlen@plt>
    1a68:	cmp	r0, #200	; 0xc8
    1a6c:	bls	1aa8 <parse_resv+0x180>
    1a70:	ldr	r1, [pc, #1832]	; 21a0 <parse_resv+0x878>
    1a74:	mov	r2, r5
    1a78:	mov	r0, r4
    1a7c:	add	r1, pc, r1
    1a80:	add	sp, sp, #44	; 0x2c
    1a84:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    1a88:	b	d34 <sendto_one_notice@plt>
    1a8c:	ldr	r1, [pc, #1808]	; 21a4 <parse_resv+0x87c>
    1a90:	mov	r2, r5
    1a94:	mov	r0, r4
    1a98:	add	r1, pc, r1
    1a9c:	add	sp, sp, #44	; 0x2c
    1aa0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    1aa4:	b	d34 <sendto_one_notice@plt>
    1aa8:	bl	bc0 <make_conf@plt>
    1aac:	mov	r3, #256	; 0x100
    1ab0:	str	r3, [r0]
    1ab4:	str	fp, [r0, #32]
    1ab8:	mov	sl, r0
    1abc:	bl	bcc <rb_current_time@plt>
    1ac0:	str	r0, [sl, #40]	; 0x28
    1ac4:	mov	r0, r5
    1ac8:	bl	cec <strlen@plt>
    1acc:	add	r2, r0, #1
    1ad0:	mov	r0, r2
    1ad4:	str	r2, [sp, #32]
    1ad8:	bl	cbc <malloc@plt>
    1adc:	ldr	r2, [sp, #32]
    1ae0:	subs	r3, r0, #0
    1ae4:	beq	1d90 <parse_resv+0x468>
    1ae8:	mov	r1, r5
    1aec:	str	r3, [sp, #32]
    1af0:	bl	c20 <memcpy@plt>
    1af4:	ldr	r3, [sp, #32]
    1af8:	mov	r0, r8
    1afc:	str	r3, [sl, #16]
    1b00:	bl	cec <strlen@plt>
    1b04:	add	r2, r0, #1
    1b08:	mov	r0, r2
    1b0c:	str	r2, [sp, #36]	; 0x24
    1b10:	bl	cbc <malloc@plt>
    1b14:	subs	r3, r0, #0
    1b18:	str	r3, [sp, #32]
    1b1c:	beq	1d90 <parse_resv+0x468>
    1b20:	ldr	r2, [sp, #36]	; 0x24
    1b24:	mov	r1, r8
    1b28:	bl	c20 <memcpy@plt>
    1b2c:	ldr	r3, [sp, #32]
    1b30:	mov	r0, r4
    1b34:	str	r3, [sl, #20]
    1b38:	bl	c80 <get_oper_name@plt>
    1b3c:	bl	ca4 <operhash_add@plt>
    1b40:	cmp	r9, #0
    1b44:	str	r0, [sl, #12]
    1b48:	bne	1d94 <parse_resv+0x46c>
    1b4c:	cmp	r7, #0
    1b50:	ble	1ee0 <parse_resv+0x5b8>
    1b54:	bl	bcc <rb_current_time@plt>
    1b58:	asr	r6, r7, #31
    1b5c:	add	r0, r7, r0
    1b60:	str	r0, [sl, #36]	; 0x24
    1b64:	mov	r0, r4
    1b68:	bl	c80 <get_oper_name@plt>
    1b6c:	ldr	r3, [pc, #1588]	; 21a8 <parse_resv+0x880>
    1b70:	mov	r1, r9
    1b74:	str	r8, [sp, #8]
    1b78:	smull	r2, r3, r3, r7
    1b7c:	ldr	r2, [pc, #1576]	; 21ac <parse_resv+0x884>
    1b80:	add	r3, r3, r7
    1b84:	add	r2, pc, r2
    1b88:	rsb	r6, r6, r3, asr #5
    1b8c:	str	r5, [sp, #4]
    1b90:	str	r6, [sp]
    1b94:	mov	r3, r0
    1b98:	mov	r0, #256	; 0x100
    1b9c:	bl	c50 <sendto_realops_snomask@plt>
    1ba0:	mov	r0, r4
    1ba4:	bl	c80 <get_oper_name@plt>
    1ba8:	ldr	r1, [pc, #1536]	; 21b0 <parse_resv+0x888>
    1bac:	mov	r3, r6
    1bb0:	add	r1, pc, r1
    1bb4:	stm	sp, {r5, r8}
    1bb8:	mov	r2, r0
    1bbc:	mov	r0, #7
    1bc0:	bl	cf8 <ilog@plt>
    1bc4:	ldr	r1, [pc, #1512]	; 21b4 <parse_resv+0x88c>
    1bc8:	mov	r3, r5
    1bcc:	mov	r2, r6
    1bd0:	mov	r0, r4
    1bd4:	add	r1, pc, r1
    1bd8:	bl	d34 <sendto_one_notice@plt>
    1bdc:	mov	r1, sl
    1be0:	ldr	r0, [sl, #16]
    1be4:	bl	bd8 <add_to_resv_hash@plt>
    1be8:	mov	r2, r7
    1bec:	ldr	r1, [sl, #20]
    1bf0:	ldr	r0, [sl, #16]
    1bf4:	add	sp, sp, #44	; 0x2c
    1bf8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    1bfc:	b	c68 <resv_chan_forcepart@plt>
    1c00:	bl	bc0 <make_conf@plt>
    1c04:	mov	r3, #512	; 0x200
    1c08:	str	r3, [r0]
    1c0c:	str	fp, [r0, #32]
    1c10:	mov	sl, r0
    1c14:	bl	bcc <rb_current_time@plt>
    1c18:	str	r0, [sl, #40]	; 0x28
    1c1c:	mov	r0, r5
    1c20:	bl	cec <strlen@plt>
    1c24:	add	r2, r0, #1
    1c28:	mov	r0, r2
    1c2c:	str	r2, [sp, #36]	; 0x24
    1c30:	bl	cbc <malloc@plt>
    1c34:	subs	r3, r0, #0
    1c38:	str	r3, [sp, #32]
    1c3c:	beq	1d90 <parse_resv+0x468>
    1c40:	ldr	r2, [sp, #36]	; 0x24
    1c44:	mov	r1, r5
    1c48:	bl	c20 <memcpy@plt>
    1c4c:	ldr	r3, [sp, #32]
    1c50:	mov	r0, r8
    1c54:	str	r3, [sl, #16]
    1c58:	bl	cec <strlen@plt>
    1c5c:	add	r2, r0, #1
    1c60:	mov	r0, r2
    1c64:	str	r2, [sp, #36]	; 0x24
    1c68:	bl	cbc <malloc@plt>
    1c6c:	subs	r3, r0, #0
    1c70:	str	r3, [sp, #32]
    1c74:	beq	1d90 <parse_resv+0x468>
    1c78:	ldr	r2, [sp, #36]	; 0x24
    1c7c:	mov	r1, r8
    1c80:	bl	c20 <memcpy@plt>
    1c84:	ldr	r3, [sp, #32]
    1c88:	mov	r0, r4
    1c8c:	str	r3, [sl, #20]
    1c90:	bl	c80 <get_oper_name@plt>
    1c94:	bl	ca4 <operhash_add@plt>
    1c98:	cmp	r9, #0
    1c9c:	str	r0, [sl, #12]
    1ca0:	bne	1f64 <parse_resv+0x63c>
    1ca4:	cmp	r7, #0
    1ca8:	ble	20c0 <parse_resv+0x798>
    1cac:	bl	bcc <rb_current_time@plt>
    1cb0:	add	r0, r7, r0
    1cb4:	str	r0, [sl, #36]	; 0x24
    1cb8:	mov	r0, r4
    1cbc:	bl	c80 <get_oper_name@plt>
    1cc0:	ldr	r2, [pc, #1248]	; 21a8 <parse_resv+0x880>
    1cc4:	asr	r3, r7, #31
    1cc8:	str	r8, [sp, #8]
    1ccc:	smull	r1, r2, r2, r7
    1cd0:	str	r5, [sp, #4]
    1cd4:	add	r2, r2, r7
    1cd8:	mov	r1, r9
    1cdc:	rsb	r9, r3, r2, asr #5
    1ce0:	ldr	r2, [pc, #1232]	; 21b8 <parse_resv+0x890>
    1ce4:	str	r9, [sp]
    1ce8:	add	r2, pc, r2
    1cec:	mov	r3, r0
    1cf0:	mov	r0, #256	; 0x100
    1cf4:	bl	c50 <sendto_realops_snomask@plt>
    1cf8:	mov	r0, r4
    1cfc:	bl	c80 <get_oper_name@plt>
    1d00:	ldr	r1, [pc, #1204]	; 21bc <parse_resv+0x894>
    1d04:	mov	r3, r9
    1d08:	add	r1, pc, r1
    1d0c:	stm	sp, {r5, r8}
    1d10:	mov	r2, r0
    1d14:	mov	r0, #7
    1d18:	bl	cf8 <ilog@plt>
    1d1c:	ldr	r1, [pc, #1180]	; 21c0 <parse_resv+0x898>
    1d20:	mov	r3, r5
    1d24:	mov	r2, r9
    1d28:	mov	r0, r4
    1d2c:	add	r1, pc, r1
    1d30:	bl	d34 <sendto_one_notice@plt>
    1d34:	bl	ce0 <rb_make_rb_dlink_node@plt>
    1d38:	subs	r3, r0, #0
    1d3c:	beq	2164 <parse_resv+0x83c>
    1d40:	ldr	r2, [pc, #1148]	; 21c4 <parse_resv+0x89c>
    1d44:	mov	r1, #0
    1d48:	str	sl, [r3]
    1d4c:	str	r1, [r3, #4]
    1d50:	ldr	ip, [r6, r2]
    1d54:	ldr	r2, [ip]
    1d58:	cmp	r2, r1
    1d5c:	str	r2, [r3, #8]
    1d60:	strne	r3, [r2, #4]
    1d64:	beq	20b0 <parse_resv+0x788>
    1d68:	ldr	lr, [ip, #8]
    1d6c:	mov	r2, r7
    1d70:	add	lr, lr, #1
    1d74:	ldr	r1, [sl, #20]
    1d78:	ldr	r0, [sl, #16]
    1d7c:	str	r3, [ip]
    1d80:	str	lr, [ip, #8]
    1d84:	add	sp, sp, #44	; 0x2c
    1d88:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    1d8c:	b	c38 <resv_nick_fnc@plt>
    1d90:	bl	c2c <rb_outofmemory@plt>
    1d94:	ldr	r3, [sl, #4]
    1d98:	orr	r3, r3, #8912896	; 0x880000
    1d9c:	str	r3, [sl, #4]
    1da0:	bl	bcc <rb_current_time@plt>
    1da4:	add	r0, r7, r0
    1da8:	str	r0, [sl, #36]	; 0x24
    1dac:	str	r0, [sl, #44]	; 0x2c
    1db0:	mov	r0, sl
    1db4:	bl	c14 <replace_old_ban@plt>
    1db8:	bl	ce0 <rb_make_rb_dlink_node@plt>
    1dbc:	subs	r2, r0, #0
    1dc0:	beq	2164 <parse_resv+0x83c>
    1dc4:	ldr	r3, [pc, #1020]	; 21c8 <parse_resv+0x8a0>
    1dc8:	stm	r2, {sl, fp}
    1dcc:	ldr	r3, [r6, r3]
    1dd0:	ldr	r1, [r3]
    1dd4:	cmp	r1, #0
    1dd8:	str	r1, [r2, #8]
    1ddc:	strne	r2, [r1, #4]
    1de0:	beq	2144 <parse_resv+0x81c>
    1de4:	ldr	r1, [r3, #8]
    1de8:	mov	r0, r4
    1dec:	add	r1, r1, #1
    1df0:	str	r2, [r3]
    1df4:	str	r1, [r3, #8]
    1df8:	bl	c80 <get_oper_name@plt>
    1dfc:	ldr	r3, [pc, #932]	; 21a8 <parse_resv+0x880>
    1e00:	asr	r9, r7, #31
    1e04:	mov	r1, #0
    1e08:	smull	r2, r3, r3, r7
    1e0c:	ldr	r2, [pc, #952]	; 21cc <parse_resv+0x8a4>
    1e10:	add	r3, r3, r7
    1e14:	add	r2, pc, r2
    1e18:	rsb	r9, r9, r3, asr #5
    1e1c:	str	r8, [sp, #8]
    1e20:	str	r5, [sp, #4]
    1e24:	str	r9, [sp]
    1e28:	mov	r3, r0
    1e2c:	mov	r0, #256	; 0x100
    1e30:	bl	c50 <sendto_realops_snomask@plt>
    1e34:	mov	r0, r4
    1e38:	bl	c80 <get_oper_name@plt>
    1e3c:	ldr	r1, [pc, #908]	; 21d0 <parse_resv+0x8a8>
    1e40:	mov	r3, r9
    1e44:	stm	sp, {r5, r8}
    1e48:	add	r1, pc, r1
    1e4c:	mov	r2, r0
    1e50:	mov	r0, #7
    1e54:	bl	cf8 <ilog@plt>
    1e58:	ldr	r1, [pc, #884]	; 21d4 <parse_resv+0x8ac>
    1e5c:	mov	r3, r5
    1e60:	mov	r2, r9
    1e64:	mov	r0, r4
    1e68:	add	r1, pc, r1
    1e6c:	bl	d34 <sendto_one_notice@plt>
    1e70:	ldr	r1, [pc, #864]	; 21d8 <parse_resv+0x8b0>
    1e74:	ldr	r2, [pc, #864]	; 21dc <parse_resv+0x8b4>
    1e78:	ldr	r3, [sl, #40]	; 0x28
    1e7c:	ldr	r0, [r6, r1]
    1e80:	ldr	r2, [r6, r2]
    1e84:	str	r8, [sp, #24]
    1e88:	ldr	r1, [sl, #44]	; 0x2c
    1e8c:	ldr	ip, [r0]
    1e90:	sub	r1, r1, r3
    1e94:	str	r1, [sp, #20]
    1e98:	ldr	r1, [sl, #36]	; 0x24
    1e9c:	ldr	r2, [r2]
    1ea0:	sub	r1, r1, r3
    1ea4:	str	r1, [sp, #16]
    1ea8:	ldr	r1, [pc, #816]	; 21e0 <parse_resv+0x8b8>
    1eac:	str	r3, [sp, #12]
    1eb0:	ldr	r0, [sl, #16]
    1eb4:	mov	r3, #0
    1eb8:	add	r1, pc, r1
    1ebc:	add	r4, r4, #396	; 0x18c
    1ec0:	str	r0, [sp, #8]
    1ec4:	str	r1, [sp]
    1ec8:	orr	r2, ip, r2
    1ecc:	str	r4, [sp, #4]
    1ed0:	mov	r1, r3
    1ed4:	mov	r0, r3
    1ed8:	bl	cb0 <sendto_server@plt>
    1edc:	b	1bdc <parse_resv+0x2b4>
    1ee0:	mov	r0, r4
    1ee4:	bl	c80 <get_oper_name@plt>
    1ee8:	ldr	r2, [pc, #756]	; 21e4 <parse_resv+0x8bc>
    1eec:	mov	r1, r9
    1ef0:	add	r2, pc, r2
    1ef4:	stm	sp, {r5, r8}
    1ef8:	mov	r3, r0
    1efc:	mov	r0, #256	; 0x100
    1f00:	bl	c50 <sendto_realops_snomask@plt>
    1f04:	mov	r0, r4
    1f08:	bl	c80 <get_oper_name@plt>
    1f0c:	ldr	r1, [pc, #724]	; 21e8 <parse_resv+0x8c0>
    1f10:	mov	r3, r5
    1f14:	str	r8, [sp]
    1f18:	add	r1, pc, r1
    1f1c:	mov	r2, r0
    1f20:	mov	r0, #7
    1f24:	bl	cf8 <ilog@plt>
    1f28:	ldr	r1, [pc, #700]	; 21ec <parse_resv+0x8c4>
    1f2c:	mov	r2, r5
    1f30:	mov	r0, r4
    1f34:	add	r1, pc, r1
    1f38:	bl	d34 <sendto_one_notice@plt>
    1f3c:	ldr	r2, [sl, #16]
    1f40:	str	r9, [sp, #8]
    1f44:	str	r9, [sp, #4]
    1f48:	ldr	r0, [sl, #20]
    1f4c:	mov	r1, r4
    1f50:	str	r0, [sp]
    1f54:	mov	r3, r9
    1f58:	mov	r0, #3
    1f5c:	bl	c5c <bandb_add@plt>
    1f60:	b	1bdc <parse_resv+0x2b4>
    1f64:	ldr	r3, [sl, #4]
    1f68:	orr	r3, r3, #8912896	; 0x880000
    1f6c:	str	r3, [sl, #4]
    1f70:	bl	bcc <rb_current_time@plt>
    1f74:	add	r0, r7, r0
    1f78:	str	r0, [sl, #36]	; 0x24
    1f7c:	str	r0, [sl, #44]	; 0x2c
    1f80:	mov	r0, sl
    1f84:	bl	c14 <replace_old_ban@plt>
    1f88:	bl	ce0 <rb_make_rb_dlink_node@plt>
    1f8c:	subs	r2, r0, #0
    1f90:	beq	2164 <parse_resv+0x83c>
    1f94:	ldr	r3, [pc, #556]	; 21c8 <parse_resv+0x8a0>
    1f98:	stm	r2, {sl, fp}
    1f9c:	ldr	r3, [r6, r3]
    1fa0:	ldr	r1, [r3]
    1fa4:	cmp	r1, #0
    1fa8:	str	r1, [r2, #8]
    1fac:	strne	r2, [r1, #4]
    1fb0:	beq	2154 <parse_resv+0x82c>
    1fb4:	ldr	r1, [r3, #8]
    1fb8:	mov	r0, r4
    1fbc:	add	r1, r1, #1
    1fc0:	str	r2, [r3]
    1fc4:	str	r1, [r3, #8]
    1fc8:	bl	c80 <get_oper_name@plt>
    1fcc:	ldr	r3, [pc, #468]	; 21a8 <parse_resv+0x880>
    1fd0:	asr	r9, r7, #31
    1fd4:	mov	r1, #0
    1fd8:	smull	r2, r3, r3, r7
    1fdc:	ldr	r2, [pc, #524]	; 21f0 <parse_resv+0x8c8>
    1fe0:	add	r3, r3, r7
    1fe4:	add	r2, pc, r2
    1fe8:	rsb	r9, r9, r3, asr #5
    1fec:	str	r8, [sp, #8]
    1ff0:	str	r5, [sp, #4]
    1ff4:	str	r9, [sp]
    1ff8:	mov	r3, r0
    1ffc:	mov	r0, #256	; 0x100
    2000:	bl	c50 <sendto_realops_snomask@plt>
    2004:	mov	r0, r4
    2008:	bl	c80 <get_oper_name@plt>
    200c:	ldr	r1, [pc, #480]	; 21f4 <parse_resv+0x8cc>
    2010:	mov	r3, r9
    2014:	stm	sp, {r5, r8}
    2018:	add	r1, pc, r1
    201c:	mov	r2, r0
    2020:	mov	r0, #7
    2024:	bl	cf8 <ilog@plt>
    2028:	ldr	r1, [pc, #456]	; 21f8 <parse_resv+0x8d0>
    202c:	mov	r3, r5
    2030:	mov	r2, r9
    2034:	mov	r0, r4
    2038:	add	r1, pc, r1
    203c:	bl	d34 <sendto_one_notice@plt>
    2040:	ldr	r1, [pc, #400]	; 21d8 <parse_resv+0x8b0>
    2044:	ldr	r2, [pc, #400]	; 21dc <parse_resv+0x8b4>
    2048:	ldr	r3, [sl, #40]	; 0x28
    204c:	ldr	ip, [r6, r1]
    2050:	ldr	r0, [r6, r2]
    2054:	str	r8, [sp, #24]
    2058:	ldr	r1, [sl, #44]	; 0x2c
    205c:	ldr	r2, [ip]
    2060:	sub	r1, r1, r3
    2064:	str	r1, [sp, #20]
    2068:	ldr	r1, [sl, #36]	; 0x24
    206c:	ldr	ip, [r0]
    2070:	sub	r1, r1, r3
    2074:	str	r1, [sp, #16]
    2078:	ldr	r1, [pc, #380]	; 21fc <parse_resv+0x8d4>
    207c:	str	r3, [sp, #12]
    2080:	ldr	r0, [sl, #16]
    2084:	mov	r3, #0
    2088:	add	r1, pc, r1
    208c:	add	r4, r4, #396	; 0x18c
    2090:	str	r0, [sp, #8]
    2094:	str	r1, [sp]
    2098:	orr	r2, r2, ip
    209c:	str	r4, [sp, #4]
    20a0:	mov	r1, r3
    20a4:	mov	r0, r3
    20a8:	bl	cb0 <sendto_server@plt>
    20ac:	b	1d34 <parse_resv+0x40c>
    20b0:	ldr	r2, [ip, #4]
    20b4:	cmp	r2, #0
    20b8:	streq	r3, [ip, #4]
    20bc:	b	1d68 <parse_resv+0x440>
    20c0:	mov	r0, r4
    20c4:	bl	c80 <get_oper_name@plt>
    20c8:	ldr	r2, [pc, #304]	; 2200 <parse_resv+0x8d8>
    20cc:	mov	r1, r9
    20d0:	add	r2, pc, r2
    20d4:	stm	sp, {r5, r8}
    20d8:	mov	r3, r0
    20dc:	mov	r0, #256	; 0x100
    20e0:	bl	c50 <sendto_realops_snomask@plt>
    20e4:	mov	r0, r4
    20e8:	bl	c80 <get_oper_name@plt>
    20ec:	ldr	r1, [pc, #272]	; 2204 <parse_resv+0x8dc>
    20f0:	mov	r3, r5
    20f4:	str	r8, [sp]
    20f8:	add	r1, pc, r1
    20fc:	mov	r2, r0
    2100:	mov	r0, #7
    2104:	bl	cf8 <ilog@plt>
    2108:	ldr	r1, [pc, #248]	; 2208 <parse_resv+0x8e0>
    210c:	mov	r2, r5
    2110:	mov	r0, r4
    2114:	add	r1, pc, r1
    2118:	bl	d34 <sendto_one_notice@plt>
    211c:	ldr	r2, [sl, #16]
    2120:	str	r9, [sp, #8]
    2124:	str	r9, [sp, #4]
    2128:	ldr	r0, [sl, #20]
    212c:	mov	r1, r4
    2130:	str	r0, [sp]
    2134:	mov	r3, r9
    2138:	mov	r0, #3
    213c:	bl	c5c <bandb_add@plt>
    2140:	b	1d34 <parse_resv+0x40c>
    2144:	ldr	r1, [r3, #4]
    2148:	cmp	r1, #0
    214c:	streq	r2, [r3, #4]
    2150:	b	1de4 <parse_resv+0x4bc>
    2154:	ldr	r1, [r3, #4]
    2158:	cmp	r1, #0
    215c:	streq	r2, [r3, #4]
    2160:	b	1fb4 <parse_resv+0x68c>
    2164:	ldr	r3, [pc, #160]	; 220c <parse_resv+0x8e4>
    2168:	ldr	r1, [pc, #160]	; 2210 <parse_resv+0x8e8>
    216c:	ldr	r0, [pc, #160]	; 2214 <parse_resv+0x8ec>
    2170:	add	r3, pc, r3
    2174:	mov	r2, #144	; 0x90
    2178:	add	r3, r3, #16
    217c:	add	r1, pc, r1
    2180:	add	r0, pc, r0
    2184:	bl	d94 <__assert_fail@plt>
    2188:	.word	0x000116a4
    218c:	.word	0x000000d4
    2190:	.word	0x0000111c
    2194:	.word	0x00000f3c
    2198:	.word	0x000000e8
    219c:	.word	0x00001084
    21a0:	.word	0x00000f24
    21a4:	.word	0x000010b0
    21a8:	.word	0x88888889
    21ac:	.word	0x00000ec0
    21b0:	.word	0x00000e44
    21b4:	.word	0x00000ea0
    21b8:	.word	0x00000d5c
    21bc:	.word	0x00000cec
    21c0:	.word	0x00000d48
    21c4:	.word	0x000000b8
    21c8:	.word	0x000000bc
    21cc:	.word	0x00000bb4
    21d0:	.word	0x00000bac
    21d4:	.word	0x00000b9c
    21d8:	.word	0x000000c4
    21dc:	.word	0x000000c8
    21e0:	.word	0x00000b6c
    21e4:	.word	0x00000ba8
    21e8:	.word	0x00000b9c
    21ec:	.word	0x00000b90
    21f0:	.word	0x000009e4
    21f4:	.word	0x000009dc
    21f8:	.word	0x000009cc
    21fc:	.word	0x0000099c
    2200:	.word	0x000009c8
    2204:	.word	0x000009bc
    2208:	.word	0x000009b0
    220c:	.word	0x000005d8
    2210:	.word	0x0000065c
    2214:	.word	0x0000083c

00002218 <mo_resv>:
    2218:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    221c:	mov	r8, r3
    2220:	ldr	r3, [r2, #24]
    2224:	sub	sp, sp, #52	; 0x34
    2228:	ldr	r5, [pc, #988]	; 260c <mo_resv+0x3f4>
    222c:	cmp	r3, #0
    2230:	add	r5, pc, r5
    2234:	mov	r4, r2
    2238:	ldr	r7, [sp, #88]	; 0x58
    223c:	beq	226c <mo_resv+0x54>
    2240:	ldr	r0, [r3, #36]	; 0x24
    2244:	cmp	r0, #0
    2248:	beq	226c <mo_resv+0x54>
    224c:	ldr	r3, [pc, #956]	; 2610 <mo_resv+0x3f8>
    2250:	ldr	r1, [pc, #956]	; 2614 <mo_resv+0x3fc>
    2254:	ldr	r3, [r5, r3]
    2258:	add	r1, pc, r1
    225c:	ldr	sl, [r3, #324]	; 0x144
    2260:	bl	d64 <privilegeset_in_set@plt>
    2264:	cmp	r0, #0
    2268:	bne	22a0 <mo_resv+0x88>
    226c:	ldr	r2, [pc, #932]	; 2618 <mo_resv+0x400>
    2270:	ldr	r1, [pc, #932]	; 261c <mo_resv+0x404>
    2274:	add	r3, r4, #88	; 0x58
    2278:	add	r1, pc, r1
    227c:	ldr	r2, [r5, r2]
    2280:	str	r1, [sp, #88]	; 0x58
    2284:	ldr	r1, [pc, #916]	; 2620 <mo_resv+0x408>
    2288:	mov	r0, r4
    228c:	add	r2, r2, #88	; 0x58
    2290:	add	r1, pc, r1
    2294:	add	sp, sp, #52	; 0x34
    2298:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    229c:	b	c08 <sendto_one@plt>
    22a0:	ldr	r0, [r7, #4]
    22a4:	bl	d28 <valid_temp_time@plt>
    22a8:	subs	r6, r0, #0
    22ac:	movlt	r2, #4
    22b0:	movge	r2, #8
    22b4:	movlt	r1, #3
    22b8:	movge	r1, #4
    22bc:	ldr	r2, [r7, r2]
    22c0:	movlt	r9, #2
    22c4:	movge	r9, #3
    22c8:	movlt	r3, #1
    22cc:	movge	r3, #2
    22d0:	movlt	r6, #0
    22d4:	cmp	r8, r1
    22d8:	str	r2, [sp, #28]
    22dc:	movle	fp, #0
    22e0:	bgt	23c0 <mo_resv+0x1a8>
    22e4:	cmp	r9, r8
    22e8:	addlt	r9, r7, r9, lsl #2
    22ec:	bge	238c <mo_resv+0x174>
    22f0:	ldr	r7, [r9]
    22f4:	cmp	r7, #0
    22f8:	beq	238c <mo_resv+0x174>
    22fc:	ldrb	r3, [r7]
    2300:	cmp	r3, #0
    2304:	beq	238c <mo_resv+0x174>
    2308:	cmp	fp, #0
    230c:	beq	249c <mo_resv+0x284>
    2310:	cmp	r6, #0
    2314:	beq	2438 <mo_resv+0x220>
    2318:	ldr	r2, [pc, #772]	; 2624 <mo_resv+0x40c>
    231c:	ldr	r0, [pc, #772]	; 2628 <mo_resv+0x410>
    2320:	ldr	ip, [sp, #28]
    2324:	ldr	r2, [r5, r2]
    2328:	add	r0, pc, r0
    232c:	mov	r3, #0
    2330:	mov	r1, fp
    2334:	str	r7, [sp, #16]
    2338:	ldr	r2, [r2]
    233c:	str	ip, [sp, #12]
    2340:	stm	sp, {r0, fp}
    2344:	str	r6, [sp, #8]
    2348:	mov	r0, r4
    234c:	bl	be4 <sendto_match_servs@plt>
    2350:	ldr	r3, [pc, #704]	; 2618 <mo_resv+0x400>
    2354:	mov	r0, fp
    2358:	ldr	r1, [r5, r3]
    235c:	add	r1, r1, #88	; 0x58
    2360:	bl	d04 <match@plt>
    2364:	cmp	r0, #0
    2368:	beq	2560 <mo_resv+0x348>
    236c:	str	sl, [sp, #88]	; 0x58
    2370:	mov	r3, r6
    2374:	mov	r2, r7
    2378:	ldr	r1, [sp, #28]
    237c:	mov	r0, r4
    2380:	add	sp, sp, #52	; 0x34
    2384:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    2388:	b	1928 <parse_resv>
    238c:	ldr	r2, [pc, #644]	; 2618 <mo_resv+0x400>
    2390:	ldr	r1, [pc, #660]	; 262c <mo_resv+0x414>
    2394:	add	r3, r4, #88	; 0x58
    2398:	add	r1, pc, r1
    239c:	ldr	r2, [r5, r2]
    23a0:	str	r1, [sp, #88]	; 0x58
    23a4:	ldr	r1, [pc, #644]	; 2630 <mo_resv+0x418>
    23a8:	mov	r0, r4
    23ac:	add	r2, r2, #88	; 0x58
    23b0:	add	r1, pc, r1
    23b4:	add	sp, sp, #52	; 0x34
    23b8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    23bc:	b	c08 <sendto_one@plt>
    23c0:	ldr	r1, [pc, #620]	; 2634 <mo_resv+0x41c>
    23c4:	ldr	r0, [r7, r9, lsl #2]
    23c8:	add	r1, pc, r1
    23cc:	str	r3, [sp, #32]
    23d0:	bl	d7c <irccmp@plt>
    23d4:	add	r9, r7, r9, lsl #2
    23d8:	subs	r2, r0, #0
    23dc:	bne	2430 <mo_resv+0x218>
    23e0:	ldr	r1, [r4, #24]
    23e4:	ldr	r3, [sp, #32]
    23e8:	cmp	r1, #0
    23ec:	beq	2568 <mo_resv+0x350>
    23f0:	ldr	r0, [r1, #36]	; 0x24
    23f4:	str	r2, [sp, #36]	; 0x24
    23f8:	cmp	r0, #0
    23fc:	str	r3, [sp, #32]
    2400:	beq	2568 <mo_resv+0x350>
    2404:	ldr	r1, [pc, #556]	; 2638 <mo_resv+0x420>
    2408:	add	r1, pc, r1
    240c:	bl	d64 <privilegeset_in_set@plt>
    2410:	cmp	r0, #0
    2414:	beq	2568 <mo_resv+0x350>
    2418:	ldr	r3, [sp, #32]
    241c:	ldr	r2, [sp, #36]	; 0x24
    2420:	ldr	fp, [r9, #4]
    2424:	mov	sl, r2
    2428:	add	r9, r3, #3
    242c:	b	22e4 <mo_resv+0xcc>
    2430:	mov	fp, #0
    2434:	b	22f0 <mo_resv+0xd8>
    2438:	ldr	r3, [sp, #28]
    243c:	mov	r2, r6
    2440:	mov	r1, fp
    2444:	mov	r0, r4
    2448:	str	r7, [sp]
    244c:	bl	f48 <propagate_resv.part.0>
    2450:	ldr	r3, [pc, #448]	; 2618 <mo_resv+0x400>
    2454:	mov	r0, fp
    2458:	ldr	r1, [r5, r3]
    245c:	add	r1, r1, #88	; 0x58
    2460:	bl	d04 <match@plt>
    2464:	cmp	r0, #0
    2468:	beq	2560 <mo_resv+0x348>
    246c:	adds	r3, sl, #0
    2470:	movne	r3, #1
    2474:	cmp	r6, #0
    2478:	movne	r3, #0
    247c:	cmp	r3, #0
    2480:	beq	236c <mo_resv+0x154>
    2484:	ldr	r1, [pc, #432]	; 263c <mo_resv+0x424>
    2488:	mov	r0, r4
    248c:	add	r1, pc, r1
    2490:	add	sp, sp, #52	; 0x34
    2494:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    2498:	b	d34 <sendto_one_notice@plt>
    249c:	cmp	sl, #0
    24a0:	bne	246c <mo_resv+0x254>
    24a4:	ldr	r3, [pc, #404]	; 2640 <mo_resv+0x428>
    24a8:	ldr	r3, [r5, r3]
    24ac:	ldr	r2, [r3, #8]
    24b0:	cmp	r2, #0
    24b4:	beq	236c <mo_resv+0x154>
    24b8:	ldr	fp, [r3]
    24bc:	cmp	fp, #0
    24c0:	beq	236c <mo_resv+0x154>
    24c4:	ldr	r3, [pc, #376]	; 2644 <mo_resv+0x42c>
    24c8:	mov	r9, sl
    24cc:	add	r3, pc, r3
    24d0:	str	r3, [sp, #32]
    24d4:	ldr	r3, [pc, #364]	; 2648 <mo_resv+0x430>
    24d8:	str	sl, [sp, #44]	; 0x2c
    24dc:	add	r3, pc, r3
    24e0:	str	r3, [sp, #36]	; 0x24
    24e4:	ldr	r3, [pc, #352]	; 264c <mo_resv+0x434>
    24e8:	add	r3, pc, r3
    24ec:	str	r3, [sp, #40]	; 0x28
    24f0:	b	2508 <mo_resv+0x2f0>
    24f4:	tst	r3, #256	; 0x100
    24f8:	bne	2594 <mo_resv+0x37c>
    24fc:	ldr	fp, [fp, #8]
    2500:	cmp	fp, #0
    2504:	beq	2604 <mo_resv+0x3ec>
    2508:	ldr	r8, [fp]
    250c:	cmp	r6, #0
    2510:	ldr	r3, [r8, #12]
    2514:	beq	24f4 <mo_resv+0x2dc>
    2518:	tst	r3, #128	; 0x80
    251c:	beq	24fc <mo_resv+0x2e4>
    2520:	ldr	r2, [pc, #252]	; 2624 <mo_resv+0x40c>
    2524:	ldr	r0, [r8, #8]
    2528:	mov	r3, r9
    252c:	ldr	r2, [r5, r2]
    2530:	mov	r1, r0
    2534:	str	r0, [sp, #4]
    2538:	ldr	r0, [sp, #28]
    253c:	ldr	r2, [r2]
    2540:	str	r0, [sp, #12]
    2544:	ldr	r0, [sp, #32]
    2548:	str	r7, [sp, #16]
    254c:	str	r0, [sp]
    2550:	str	r6, [sp, #8]
    2554:	mov	r0, r4
    2558:	bl	be4 <sendto_match_servs@plt>
    255c:	b	24fc <mo_resv+0x2e4>
    2560:	add	sp, sp, #52	; 0x34
    2564:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    2568:	ldr	r2, [pc, #168]	; 2618 <mo_resv+0x400>
    256c:	ldr	r1, [pc, #220]	; 2650 <mo_resv+0x438>
    2570:	add	r3, r4, #88	; 0x58
    2574:	add	r1, pc, r1
    2578:	ldr	r2, [r5, r2]
    257c:	str	r1, [sp, #88]	; 0x58
    2580:	ldr	r1, [pc, #204]	; 2654 <mo_resv+0x43c>
    2584:	mov	r0, r4
    2588:	add	r2, r2, #88	; 0x58
    258c:	add	r1, pc, r1
    2590:	b	2294 <mo_resv+0x7c>
    2594:	ldr	r2, [pc, #188]	; 2658 <mo_resv+0x440>
    2598:	ldr	r0, [r8, #8]
    259c:	ldr	ip, [sp, #36]	; 0x24
    25a0:	ldr	sl, [r5, r2]
    25a4:	mov	r1, r0
    25a8:	str	r0, [sp, #4]
    25ac:	ldr	r0, [sp, #28]
    25b0:	ldr	r2, [sl]
    25b4:	mov	r3, r9
    25b8:	str	r0, [sp, #8]
    25bc:	str	r7, [sp, #12]
    25c0:	mov	r0, r4
    25c4:	str	ip, [sp]
    25c8:	bl	be4 <sendto_match_servs@plt>
    25cc:	ldr	r2, [pc, #80]	; 2624 <mo_resv+0x40c>
    25d0:	ldr	r1, [r8, #8]
    25d4:	ldr	r0, [sp, #28]
    25d8:	ldr	r2, [r5, r2]
    25dc:	ldr	r3, [sl]
    25e0:	str	r1, [sp, #4]
    25e4:	ldr	r2, [r2]
    25e8:	str	r0, [sp, #8]
    25ec:	ldr	r0, [sp, #40]	; 0x28
    25f0:	str	r7, [sp, #12]
    25f4:	str	r0, [sp]
    25f8:	mov	r0, r4
    25fc:	bl	be4 <sendto_match_servs@plt>
    2600:	b	24fc <mo_resv+0x2e4>
    2604:	ldr	sl, [sp, #44]	; 0x2c
    2608:	b	236c <mo_resv+0x154>
    260c:	.word	0x00010dc8
    2610:	.word	0x000000e8
    2614:	.word	0x000006ec
    2618:	.word	0x000000e0
    261c:	.word	0x000006c4
    2620:	.word	0x00000684
    2624:	.word	0x000000e4
    2628:	.word	0x00000494
    262c:	.word	0x00000804
    2630:	.word	0x000007c4
    2634:	.word	0x00000588
    2638:	.word	0x00000558
    263c:	.word	0x00000734
    2640:	.word	0x000000d0
    2644:	.word	0x000002f0
    2648:	.word	0x000002d0
    264c:	.word	0x000006bc
    2650:	.word	0x000003e0
    2654:	.word	0x00000388
    2658:	.word	0x000000c0

0000265c <me_resv>:
    265c:	ldrh	r3, [r2, #80]	; 0x50
    2660:	push	{r4, r5, r6, lr}
    2664:	cmp	r3, #64	; 0x40
    2668:	ldr	ip, [sp, #16]
    266c:	popne	{r4, r5, r6, pc}
    2670:	ldr	r3, [r2, #24]
    2674:	cmp	r3, #0
    2678:	popeq	{r4, r5, r6, pc}
    267c:	mov	r4, r2
    2680:	ldmib	ip, {r0, r5}
    2684:	mov	r2, #10
    2688:	mov	r1, #0
    268c:	ldr	r6, [ip, #16]
    2690:	bl	bfc <strtol@plt>
    2694:	mov	r3, #0
    2698:	str	r3, [sp, #16]
    269c:	mov	r2, r6
    26a0:	mov	r1, r5
    26a4:	mov	r3, r0
    26a8:	mov	r0, r4
    26ac:	pop	{r4, r5, r6, lr}
    26b0:	b	1928 <parse_resv>

000026b4 <ms_resv>:
    26b4:	push	{r4, r5, lr}
    26b8:	sub	sp, sp, #12
    26bc:	mov	r0, r2
    26c0:	ldr	r4, [sp, #24]
    26c4:	mov	r5, r2
    26c8:	ldr	r2, [r4, #12]
    26cc:	ldmib	r4, {r1, r3}
    26d0:	str	r2, [sp]
    26d4:	mov	r2, #0
    26d8:	bl	f48 <propagate_resv.part.0>
    26dc:	ldr	r3, [pc, #92]	; 2740 <ms_resv+0x8c>
    26e0:	ldr	r2, [pc, #92]	; 2744 <ms_resv+0x90>
    26e4:	add	r3, pc, r3
    26e8:	ldr	r0, [r4, #4]
    26ec:	ldr	r1, [r3, r2]
    26f0:	add	r1, r1, #88	; 0x58
    26f4:	bl	d04 <match@plt>
    26f8:	cmp	r0, #0
    26fc:	beq	270c <ms_resv+0x58>
    2700:	ldrh	r3, [r5, #80]	; 0x50
    2704:	cmp	r3, #64	; 0x40
    2708:	beq	2714 <ms_resv+0x60>
    270c:	add	sp, sp, #12
    2710:	pop	{r4, r5, pc}
    2714:	ldr	r3, [r5, #24]
    2718:	cmp	r3, #0
    271c:	beq	270c <ms_resv+0x58>
    2720:	mov	r3, #0
    2724:	ldr	r2, [r4, #12]
    2728:	ldr	r1, [r4, #8]
    272c:	mov	r0, r5
    2730:	str	r3, [sp, #24]
    2734:	add	sp, sp, #12
    2738:	pop	{r4, r5, lr}
    273c:	b	1928 <parse_resv>
    2740:	.word	0x00010914
    2744:	.word	0x000000e0

Disassembly of section .fini:

00002748 <_fini>:
    2748:	push	{r3, lr}
    274c:	pop	{r3, pc}
