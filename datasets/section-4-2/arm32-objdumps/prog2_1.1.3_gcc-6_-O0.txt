
../repos/prog2/1.1.3:     file format elf32-littlearm


Disassembly of section .init:

000105c0 <.init>:
   105c0:	push	{r3, lr}
   105c4:	bl	10670 <_start@@Base+0x3c>
   105c8:	pop	{r3, pc}

Disassembly of section .plt:

000105cc <printf@plt-0x14>:
   105cc:	push	{lr}		; (str lr, [sp, #-4]!)
   105d0:	ldr	lr, [pc, #4]	; 105dc <printf@plt-0x4>
   105d4:	add	lr, pc, lr
   105d8:	ldr	pc, [lr, #8]!
   105dc:	andeq	r0, r1, r4, lsr #20

000105e0 <printf@plt>:
   105e0:	add	ip, pc, #0, 12
   105e4:	add	ip, ip, #16, 20	; 0x10000
   105e8:	ldr	pc, [ip, #2596]!	; 0xa24

000105ec <fopen@plt>:
   105ec:	add	ip, pc, #0, 12
   105f0:	add	ip, ip, #16, 20	; 0x10000
   105f4:	ldr	pc, [ip, #2588]!	; 0xa1c

000105f8 <__libc_start_main@plt>:
   105f8:	add	ip, pc, #0, 12
   105fc:	add	ip, ip, #16, 20	; 0x10000
   10600:	ldr	pc, [ip, #2580]!	; 0xa14

00010604 <__gmon_start__@plt>:
   10604:	add	ip, pc, #0, 12
   10608:	add	ip, ip, #16, 20	; 0x10000
   1060c:	ldr	pc, [ip, #2572]!	; 0xa0c

00010610 <fclose@plt>:
   10610:	add	ip, pc, #0, 12
   10614:	add	ip, ip, #16, 20	; 0x10000
   10618:	ldr	pc, [ip, #2564]!	; 0xa04

0001061c <abort@plt>:
   1061c:	add	ip, pc, #0, 12
   10620:	add	ip, ip, #16, 20	; 0x10000
   10624:	ldr	pc, [ip, #2556]!	; 0x9fc

00010628 <getc@plt>:
   10628:	add	ip, pc, #0, 12
   1062c:	add	ip, ip, #16, 20	; 0x10000
   10630:	ldr	pc, [ip, #2548]!	; 0x9f4

Disassembly of section .text:

00010634 <_start@@Base>:
   10634:	mov	fp, #0
   10638:	mov	lr, #0
   1063c:	pop	{r1}		; (ldr r1, [sp], #4)
   10640:	mov	r2, sp
   10644:	push	{r2}		; (str r2, [sp, #-4]!)
   10648:	push	{r0}		; (str r0, [sp, #-4]!)
   1064c:	ldr	ip, [pc, #16]	; 10664 <_start@@Base+0x30>
   10650:	push	{ip}		; (str ip, [sp, #-4]!)
   10654:	ldr	r0, [pc, #12]	; 10668 <_start@@Base+0x34>
   10658:	ldr	r3, [pc, #12]	; 1066c <_start@@Base+0x38>
   1065c:	bl	105f8 <__libc_start_main@plt>
   10660:	bl	1061c <abort@plt>
   10664:	andeq	r0, r1, r0, ror sl
   10668:	andeq	r0, r1, r0, ror #15
   1066c:	andeq	r0, r1, r0, lsl sl
   10670:	ldr	r3, [pc, #20]	; 1068c <_start@@Base+0x58>
   10674:	ldr	r2, [pc, #20]	; 10690 <_start@@Base+0x5c>
   10678:	add	r3, pc, r3
   1067c:	ldr	r2, [r3, r2]
   10680:	cmp	r2, #0
   10684:	bxeq	lr
   10688:	b	10604 <__gmon_start__@plt>
   1068c:	andeq	r0, r1, r0, lsl #19
   10690:	andeq	r0, r0, r8, lsr #32
   10694:	ldr	r3, [pc, #28]	; 106b8 <_start@@Base+0x84>
   10698:	ldr	r0, [pc, #28]	; 106bc <_start@@Base+0x88>
   1069c:	sub	r3, r3, r0
   106a0:	cmp	r3, #6
   106a4:	bxls	lr
   106a8:	ldr	r3, [pc, #16]	; 106c0 <_start@@Base+0x8c>
   106ac:	cmp	r3, #0
   106b0:	bxeq	lr
   106b4:	bx	r3
   106b8:	andeq	r1, r2, r7, lsr r0
   106bc:	andeq	r1, r2, r4, lsr r0
   106c0:	andeq	r0, r0, r0
   106c4:	ldr	r1, [pc, #36]	; 106f0 <_start@@Base+0xbc>
   106c8:	ldr	r0, [pc, #36]	; 106f4 <_start@@Base+0xc0>
   106cc:	sub	r1, r1, r0
   106d0:	asr	r1, r1, #2
   106d4:	add	r1, r1, r1, lsr #31
   106d8:	asrs	r1, r1, #1
   106dc:	bxeq	lr
   106e0:	ldr	r3, [pc, #16]	; 106f8 <_start@@Base+0xc4>
   106e4:	cmp	r3, #0
   106e8:	bxeq	lr
   106ec:	bx	r3
   106f0:	andeq	r1, r2, r4, lsr r0
   106f4:	andeq	r1, r2, r4, lsr r0
   106f8:	andeq	r0, r0, r0
   106fc:	push	{r4, lr}
   10700:	ldr	r4, [pc, #24]	; 10720 <_start@@Base+0xec>
   10704:	ldrb	r3, [r4]
   10708:	cmp	r3, #0
   1070c:	popne	{r4, pc}
   10710:	bl	10694 <_start@@Base+0x60>
   10714:	mov	r3, #1
   10718:	strb	r3, [r4]
   1071c:	pop	{r4, pc}
   10720:	andeq	r1, r2, r4, lsr r0
   10724:	ldr	r0, [pc, #40]	; 10754 <_start@@Base+0x120>
   10728:	ldr	r3, [r0]
   1072c:	cmp	r3, #0
   10730:	bne	10738 <_start@@Base+0x104>
   10734:	b	106c4 <_start@@Base+0x90>
   10738:	ldr	r3, [pc, #24]	; 10758 <_start@@Base+0x124>
   1073c:	cmp	r3, #0
   10740:	beq	10734 <_start@@Base+0x100>
   10744:	push	{r4, lr}
   10748:	blx	r3
   1074c:	pop	{r4, lr}
   10750:	b	106c4 <_start@@Base+0x90>
   10754:	andeq	r0, r2, r4, lsl pc
   10758:	andeq	r0, r0, r0

0001075c <in_array@@Base>:
   1075c:	push	{fp}		; (str fp, [sp, #-4]!)
   10760:	add	fp, sp, #0
   10764:	sub	sp, sp, #28
   10768:	str	r0, [fp, #-16]
   1076c:	str	r1, [fp, #-20]	; 0xffffffec
   10770:	str	r2, [fp, #-24]	; 0xffffffe8
   10774:	mov	r3, #0
   10778:	str	r3, [fp, #-8]
   1077c:	mov	r3, #0
   10780:	str	r3, [fp, #-8]
   10784:	b	107bc <in_array@@Base+0x60>
   10788:	ldr	r3, [fp, #-8]
   1078c:	lsl	r3, r3, #2
   10790:	ldr	r2, [fp, #-20]	; 0xffffffec
   10794:	add	r3, r2, r3
   10798:	ldr	r2, [r3]
   1079c:	ldr	r3, [fp, #-16]
   107a0:	cmp	r2, r3
   107a4:	bne	107b0 <in_array@@Base+0x54>
   107a8:	mov	r3, #1
   107ac:	b	107d0 <in_array@@Base+0x74>
   107b0:	ldr	r3, [fp, #-8]
   107b4:	add	r3, r3, #1
   107b8:	str	r3, [fp, #-8]
   107bc:	ldr	r2, [fp, #-8]
   107c0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   107c4:	cmp	r2, r3
   107c8:	ble	10788 <in_array@@Base+0x2c>
   107cc:	mov	r3, #0
   107d0:	mov	r0, r3
   107d4:	add	sp, fp, #0
   107d8:	pop	{fp}		; (ldr fp, [sp], #4)
   107dc:	bx	lr

000107e0 <main@@Base>:
   107e0:	push	{fp, lr}
   107e4:	add	fp, sp, #4
   107e8:	sub	sp, sp, #56	; 0x38
   107ec:	ldr	r2, [pc, #508]	; 109f0 <main@@Base+0x210>
   107f0:	add	r2, pc, r2
   107f4:	sub	r3, fp, #28
   107f8:	ldm	r2, {r0, r1}
   107fc:	stm	r3, {r0, r1}
   10800:	ldr	r2, [pc, #492]	; 109f4 <main@@Base+0x214>
   10804:	add	r2, pc, r2
   10808:	sub	r3, fp, #36	; 0x24
   1080c:	ldm	r2, {r0, r1}
   10810:	stm	r3, {r0, r1}
   10814:	ldr	r2, [pc, #476]	; 109f8 <main@@Base+0x218>
   10818:	add	r2, pc, r2
   1081c:	sub	r3, fp, #44	; 0x2c
   10820:	ldm	r2, {r0, r1}
   10824:	stm	r3, {r0, r1}
   10828:	ldr	r3, [pc, #460]	; 109fc <main@@Base+0x21c>
   1082c:	add	r3, pc, r3
   10830:	mov	r1, r3
   10834:	ldr	r3, [pc, #452]	; 10a00 <main@@Base+0x220>
   10838:	add	r3, pc, r3
   1083c:	mov	r0, r3
   10840:	bl	105ec <fopen@plt>
   10844:	str	r0, [fp, #-16]
   10848:	mov	r3, #0
   1084c:	str	r3, [fp, #-8]
   10850:	sub	r3, fp, #56	; 0x38
   10854:	mov	r2, #0
   10858:	str	r2, [r3]
   1085c:	str	r2, [r3, #4]
   10860:	str	r2, [r3, #8]
   10864:	ldr	r2, [pc, #408]	; 10a04 <main@@Base+0x224>
   10868:	add	r2, pc, r2
   1086c:	sub	r3, fp, #60	; 0x3c
   10870:	ldr	r2, [r2]
   10874:	strh	r2, [r3]
   10878:	add	r3, r3, #2
   1087c:	lsr	r2, r2, #16
   10880:	strb	r2, [r3]
   10884:	b	10938 <main@@Base+0x158>
   10888:	ldr	r0, [fp, #-16]
   1088c:	bl	10628 <getc@plt>
   10890:	str	r0, [fp, #-8]
   10894:	ldr	r3, [fp, #-8]
   10898:	cmp	r3, #195	; 0xc3
   1089c:	bne	10938 <main@@Base+0x158>
   108a0:	ldr	r0, [fp, #-16]
   108a4:	bl	10628 <getc@plt>
   108a8:	str	r0, [fp, #-8]
   108ac:	sub	r3, fp, #28
   108b0:	mov	r2, #2
   108b4:	mov	r1, r3
   108b8:	ldr	r0, [fp, #-8]
   108bc:	bl	1075c <in_array@@Base>
   108c0:	mov	r3, r0
   108c4:	cmp	r3, #0
   108c8:	beq	108dc <main@@Base+0xfc>
   108cc:	ldr	r3, [fp, #-56]	; 0xffffffc8
   108d0:	add	r3, r3, #1
   108d4:	str	r3, [fp, #-56]	; 0xffffffc8
   108d8:	b	10938 <main@@Base+0x158>
   108dc:	sub	r3, fp, #36	; 0x24
   108e0:	mov	r2, #2
   108e4:	mov	r1, r3
   108e8:	ldr	r0, [fp, #-8]
   108ec:	bl	1075c <in_array@@Base>
   108f0:	mov	r3, r0
   108f4:	cmp	r3, #0
   108f8:	beq	1090c <main@@Base+0x12c>
   108fc:	ldr	r3, [fp, #-52]	; 0xffffffcc
   10900:	add	r3, r3, #1
   10904:	str	r3, [fp, #-52]	; 0xffffffcc
   10908:	b	10938 <main@@Base+0x158>
   1090c:	sub	r3, fp, #44	; 0x2c
   10910:	mov	r2, #2
   10914:	mov	r1, r3
   10918:	ldr	r0, [fp, #-8]
   1091c:	bl	1075c <in_array@@Base>
   10920:	mov	r3, r0
   10924:	cmp	r3, #0
   10928:	beq	10938 <main@@Base+0x158>
   1092c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   10930:	add	r3, r3, #1
   10934:	str	r3, [fp, #-48]	; 0xffffffd0
   10938:	ldr	r3, [fp, #-8]
   1093c:	cmn	r3, #1
   10940:	bne	10888 <main@@Base+0xa8>
   10944:	ldr	r3, [fp, #-12]
   10948:	str	r3, [fp, #-20]	; 0xffffffec
   1094c:	ldr	r0, [fp, #-16]
   10950:	bl	10610 <fclose@plt>
   10954:	mov	r3, #0
   10958:	str	r3, [fp, #-12]
   1095c:	b	109a8 <main@@Base+0x1c8>
   10960:	sub	r2, fp, #60	; 0x3c
   10964:	ldr	r3, [fp, #-12]
   10968:	add	r3, r2, r3
   1096c:	ldrb	r3, [r3]
   10970:	mov	r1, r3
   10974:	ldr	r3, [fp, #-12]
   10978:	lsl	r3, r3, #2
   1097c:	sub	r2, fp, #4
   10980:	add	r3, r2, r3
   10984:	ldr	r3, [r3, #-52]	; 0xffffffcc
   10988:	mov	r2, r3
   1098c:	ldr	r3, [pc, #116]	; 10a08 <main@@Base+0x228>
   10990:	add	r3, pc, r3
   10994:	mov	r0, r3
   10998:	bl	105e0 <printf@plt>
   1099c:	ldr	r3, [fp, #-12]
   109a0:	add	r3, r3, #1
   109a4:	str	r3, [fp, #-12]
   109a8:	ldr	r3, [fp, #-12]
   109ac:	cmp	r3, #1
   109b0:	ble	10960 <main@@Base+0x180>
   109b4:	sub	r2, fp, #60	; 0x3c
   109b8:	ldr	r3, [fp, #-12]
   109bc:	add	r3, r2, r3
   109c0:	ldrb	r3, [r3]
   109c4:	mov	r1, r3
   109c8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   109cc:	mov	r2, r3
   109d0:	ldr	r3, [pc, #52]	; 10a0c <main@@Base+0x22c>
   109d4:	add	r3, pc, r3
   109d8:	mov	r0, r3
   109dc:	bl	105e0 <printf@plt>
   109e0:	mov	r3, #0
   109e4:	mov	r0, r3
   109e8:	sub	sp, fp, #4
   109ec:	pop	{fp, pc}
   109f0:	ldrdeq	r0, [r0], -ip
   109f4:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   109f8:	andeq	r0, r0, r4, asr #5
   109fc:	andeq	r0, r0, ip, asr #4
   10a00:	andeq	r0, r0, r4, asr #4
   10a04:	andeq	r0, r0, ip, ror r2
   10a08:	andeq	r0, r0, r8, lsl #2
   10a0c:	ldrdeq	r0, [r0], -ip

00010a10 <__libc_csu_init@@Base>:
   10a10:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   10a14:	mov	r7, r0
   10a18:	ldr	r6, [pc, #72]	; 10a68 <__libc_csu_init@@Base+0x58>
   10a1c:	ldr	r5, [pc, #72]	; 10a6c <__libc_csu_init@@Base+0x5c>
   10a20:	add	r6, pc, r6
   10a24:	add	r5, pc, r5
   10a28:	sub	r6, r6, r5
   10a2c:	mov	r8, r1
   10a30:	mov	r9, r2
   10a34:	bl	105c0 <printf@plt-0x20>
   10a38:	asrs	r6, r6, #2
   10a3c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   10a40:	mov	r4, #0
   10a44:	add	r4, r4, #1
   10a48:	ldr	r3, [r5], #4
   10a4c:	mov	r2, r9
   10a50:	mov	r1, r8
   10a54:	mov	r0, r7
   10a58:	blx	r3
   10a5c:	cmp	r6, r4
   10a60:	bne	10a44 <__libc_csu_init@@Base+0x34>
   10a64:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   10a68:	andeq	r0, r1, r8, ror #9
   10a6c:	andeq	r0, r1, r0, ror #9

00010a70 <__libc_csu_fini@@Base>:
   10a70:	bx	lr

Disassembly of section .fini:

00010a74 <.fini>:
   10a74:	push	{r3, lr}
   10a78:	pop	{r3, pc}
