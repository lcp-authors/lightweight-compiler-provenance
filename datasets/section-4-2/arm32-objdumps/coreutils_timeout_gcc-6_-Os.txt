
../repos/coreutils/src/timeout:     file format elf32-littlearm


Disassembly of section .init:

0001104c <.init>:
   1104c:	push	{r3, lr}
   11050:	bl	119bc <__snprintf_chk@plt+0x614>
   11054:	pop	{r3, pc}

Disassembly of section .plt:

00011058 <calloc@plt-0x14>:
   11058:	push	{lr}		; (str lr, [sp, #-4]!)
   1105c:	ldr	lr, [pc, #4]	; 11068 <calloc@plt-0x4>
   11060:	add	lr, pc, lr
   11064:	ldr	pc, [lr, #8]!
   11068:	muleq	r1, r8, pc	; <UNPREDICTABLE>

0001106c <calloc@plt>:
   1106c:	add	ip, pc, #0, 12
   11070:	add	ip, ip, #86016	; 0x15000
   11074:	ldr	pc, [ip, #3992]!	; 0xf98

00011078 <fputs_unlocked@plt>:
   11078:	add	ip, pc, #0, 12
   1107c:	add	ip, ip, #86016	; 0x15000
   11080:	ldr	pc, [ip, #3984]!	; 0xf90

00011084 <raise@plt>:
   11084:	add	ip, pc, #0, 12
   11088:	add	ip, ip, #86016	; 0x15000
   1108c:	ldr	pc, [ip, #3976]!	; 0xf88

00011090 <strcmp@plt>:
   11090:	add	ip, pc, #0, 12
   11094:	add	ip, ip, #86016	; 0x15000
   11098:	ldr	pc, [ip, #3968]!	; 0xf80

0001109c <strtol@plt>:
   1109c:	add	ip, pc, #0, 12
   110a0:	add	ip, ip, #86016	; 0x15000
   110a4:	ldr	pc, [ip, #3960]!	; 0xf78

000110a8 <fflush@plt>:
   110a8:	add	ip, pc, #0, 12
   110ac:	add	ip, ip, #86016	; 0x15000
   110b0:	ldr	pc, [ip, #3952]!	; 0xf70

000110b4 <sigprocmask@plt>:
   110b4:	add	ip, pc, #0, 12
   110b8:	add	ip, ip, #86016	; 0x15000
   110bc:	ldr	pc, [ip, #3944]!	; 0xf68

000110c0 <free@plt>:
   110c0:	add	ip, pc, #0, 12
   110c4:	add	ip, ip, #86016	; 0x15000
   110c8:	ldr	pc, [ip, #3936]!	; 0xf60

000110cc <_exit@plt>:
   110cc:	add	ip, pc, #0, 12
   110d0:	add	ip, ip, #86016	; 0x15000
   110d4:	ldr	pc, [ip, #3928]!	; 0xf58

000110d8 <memcpy@plt>:
   110d8:	add	ip, pc, #0, 12
   110dc:	add	ip, ip, #86016	; 0x15000
   110e0:	ldr	pc, [ip, #3920]!	; 0xf50

000110e4 <execvp@plt>:
   110e4:	add	ip, pc, #0, 12
   110e8:	add	ip, ip, #86016	; 0x15000
   110ec:	ldr	pc, [ip, #3912]!	; 0xf48

000110f0 <mbsinit@plt>:
   110f0:	add	ip, pc, #0, 12
   110f4:	add	ip, ip, #86016	; 0x15000
   110f8:	ldr	pc, [ip, #3904]!	; 0xf40

000110fc <signal@plt>:
   110fc:	add	ip, pc, #0, 12
   11100:	add	ip, ip, #86016	; 0x15000
   11104:	ldr	pc, [ip, #3896]!	; 0xf38

00011108 <memcmp@plt>:
   11108:	add	ip, pc, #0, 12
   1110c:	add	ip, ip, #86016	; 0x15000
   11110:	ldr	pc, [ip, #3888]!	; 0xf30

00011114 <fputc_unlocked@plt>:
   11114:	add	ip, pc, #0, 12
   11118:	add	ip, ip, #86016	; 0x15000
   1111c:	ldr	pc, [ip, #3880]!	; 0xf28

00011120 <dcgettext@plt>:
   11120:	add	ip, pc, #0, 12
   11124:	add	ip, ip, #86016	; 0x15000
   11128:	ldr	pc, [ip, #3872]!	; 0xf20

0001112c <alarm@plt>:
   1112c:	add	ip, pc, #0, 12
   11130:	add	ip, ip, #86016	; 0x15000
   11134:	ldr	pc, [ip, #3864]!	; 0xf18

00011138 <realloc@plt>:
   11138:	add	ip, pc, #0, 12
   1113c:	add	ip, ip, #86016	; 0x15000
   11140:	ldr	pc, [ip, #3856]!	; 0xf10

00011144 <timer_create@plt>:
   11144:	add	ip, pc, #0, 12
   11148:	add	ip, ip, #86016	; 0x15000
   1114c:	ldr	pc, [ip, #3848]!	; 0xf08

00011150 <textdomain@plt>:
   11150:	add	ip, pc, #0, 12
   11154:	add	ip, ip, #86016	; 0x15000
   11158:	ldr	pc, [ip, #3840]!	; 0xf00

0001115c <iswprint@plt>:
   1115c:	add	ip, pc, #0, 12
   11160:	add	ip, ip, #86016	; 0x15000
   11164:	ldr	pc, [ip, #3832]!	; 0xef8

00011168 <timer_settime@plt>:
   11168:	add	ip, pc, #0, 12
   1116c:	add	ip, ip, #86016	; 0x15000
   11170:	ldr	pc, [ip, #3824]!	; 0xef0

00011174 <sigaction@plt>:
   11174:	add	ip, pc, #0, 12
   11178:	add	ip, ip, #86016	; 0x15000
   1117c:	ldr	pc, [ip, #3816]!	; 0xee8

00011180 <lseek64@plt>:
   11180:	add	ip, pc, #0, 12
   11184:	add	ip, ip, #86016	; 0x15000
   11188:	ldr	pc, [ip, #3808]!	; 0xee0

0001118c <waitpid@plt>:
   1118c:	add	ip, pc, #0, 12
   11190:	add	ip, ip, #86016	; 0x15000
   11194:	ldr	pc, [ip, #3800]!	; 0xed8

00011198 <__ctype_get_mb_cur_max@plt>:
   11198:	add	ip, pc, #0, 12
   1119c:	add	ip, ip, #86016	; 0x15000
   111a0:	ldr	pc, [ip, #3792]!	; 0xed0

000111a4 <strcpy@plt>:
   111a4:	add	ip, pc, #0, 12
   111a8:	add	ip, ip, #86016	; 0x15000
   111ac:	ldr	pc, [ip, #3784]!	; 0xec8

000111b0 <__fpending@plt>:
   111b0:	add	ip, pc, #0, 12
   111b4:	add	ip, ip, #86016	; 0x15000
   111b8:	ldr	pc, [ip, #3776]!	; 0xec0

000111bc <ferror_unlocked@plt>:
   111bc:	add	ip, pc, #0, 12
   111c0:	add	ip, ip, #86016	; 0x15000
   111c4:	ldr	pc, [ip, #3768]!	; 0xeb8

000111c8 <mbrtowc@plt>:
   111c8:	add	ip, pc, #0, 12
   111cc:	add	ip, ip, #86016	; 0x15000
   111d0:	ldr	pc, [ip, #3760]!	; 0xeb0

000111d4 <error@plt>:
   111d4:	add	ip, pc, #0, 12
   111d8:	add	ip, ip, #86016	; 0x15000
   111dc:	ldr	pc, [ip, #3752]!	; 0xea8

000111e0 <timer_delete@plt>:
   111e0:	add	ip, pc, #0, 12
   111e4:	add	ip, ip, #86016	; 0x15000
   111e8:	ldr	pc, [ip, #3744]!	; 0xea0

000111ec <malloc@plt>:
   111ec:	add	ip, pc, #0, 12
   111f0:	add	ip, ip, #86016	; 0x15000
   111f4:	ldr	pc, [ip, #3736]!	; 0xe98

000111f8 <sigaddset@plt>:
   111f8:	add	ip, pc, #0, 12
   111fc:	add	ip, ip, #86016	; 0x15000
   11200:	ldr	pc, [ip, #3728]!	; 0xe90

00011204 <__libc_start_main@plt>:
   11204:	add	ip, pc, #0, 12
   11208:	add	ip, ip, #86016	; 0x15000
   1120c:	ldr	pc, [ip, #3720]!	; 0xe88

00011210 <__freading@plt>:
   11210:	add	ip, pc, #0, 12
   11214:	add	ip, ip, #86016	; 0x15000
   11218:	ldr	pc, [ip, #3712]!	; 0xe80

0001121c <__gmon_start__@plt>:
   1121c:	add	ip, pc, #0, 12
   11220:	add	ip, ip, #86016	; 0x15000
   11224:	ldr	pc, [ip, #3704]!	; 0xe78

00011228 <getopt_long@plt>:
   11228:	add	ip, pc, #0, 12
   1122c:	add	ip, ip, #86016	; 0x15000
   11230:	ldr	pc, [ip, #3696]!	; 0xe70

00011234 <kill@plt>:
   11234:	add	ip, pc, #0, 12
   11238:	add	ip, ip, #86016	; 0x15000
   1123c:	ldr	pc, [ip, #3688]!	; 0xe68

00011240 <__ctype_b_loc@plt>:
   11240:	add	ip, pc, #0, 12
   11244:	add	ip, ip, #86016	; 0x15000
   11248:	ldr	pc, [ip, #3680]!	; 0xe60

0001124c <exit@plt>:
   1124c:	add	ip, pc, #0, 12
   11250:	add	ip, ip, #86016	; 0x15000
   11254:	ldr	pc, [ip, #3672]!	; 0xe58

00011258 <strlen@plt>:
   11258:	add	ip, pc, #0, 12
   1125c:	add	ip, ip, #86016	; 0x15000
   11260:	ldr	pc, [ip, #3664]!	; 0xe50

00011264 <__libc_current_sigrtmax@plt>:
   11264:	add	ip, pc, #0, 12
   11268:	add	ip, ip, #86016	; 0x15000
   1126c:	ldr	pc, [ip, #3656]!	; 0xe48

00011270 <strchr@plt>:
   11270:	add	ip, pc, #0, 12
   11274:	add	ip, ip, #86016	; 0x15000
   11278:	ldr	pc, [ip, #3648]!	; 0xe40

0001127c <__errno_location@plt>:
   1127c:	add	ip, pc, #0, 12
   11280:	add	ip, ip, #86016	; 0x15000
   11284:	ldr	pc, [ip, #3640]!	; 0xe38

00011288 <__sprintf_chk@plt>:
   11288:	add	ip, pc, #0, 12
   1128c:	add	ip, ip, #86016	; 0x15000
   11290:	ldr	pc, [ip, #3632]!	; 0xe30

00011294 <__cxa_atexit@plt>:
   11294:	add	ip, pc, #0, 12
   11298:	add	ip, ip, #86016	; 0x15000
   1129c:	ldr	pc, [ip, #3624]!	; 0xe28

000112a0 <memset@plt>:
   112a0:	add	ip, pc, #0, 12
   112a4:	add	ip, ip, #86016	; 0x15000
   112a8:	ldr	pc, [ip, #3616]!	; 0xe20

000112ac <sigsuspend@plt>:
   112ac:	add	ip, pc, #0, 12
   112b0:	add	ip, ip, #86016	; 0x15000
   112b4:	ldr	pc, [ip, #3608]!	; 0xe18

000112b8 <__printf_chk@plt>:
   112b8:	add	ip, pc, #0, 12
   112bc:	add	ip, ip, #86016	; 0x15000
   112c0:	ldr	pc, [ip, #3600]!	; 0xe10

000112c4 <prctl@plt>:
   112c4:	add	ip, pc, #0, 12
   112c8:	add	ip, ip, #86016	; 0x15000
   112cc:	ldr	pc, [ip, #3592]!	; 0xe08

000112d0 <strtod@plt>:
   112d0:	add	ip, pc, #0, 12
   112d4:	add	ip, ip, #86016	; 0x15000
   112d8:	ldr	pc, [ip, #3584]!	; 0xe00

000112dc <fileno@plt>:
   112dc:	add	ip, pc, #0, 12
   112e0:	add	ip, ip, #86016	; 0x15000
   112e4:	ldr	pc, [ip, #3576]!	; 0xdf8

000112e8 <__fprintf_chk@plt>:
   112e8:	add	ip, pc, #0, 12
   112ec:	add	ip, ip, #86016	; 0x15000
   112f0:	ldr	pc, [ip, #3568]!	; 0xdf0

000112f4 <fclose@plt>:
   112f4:	add	ip, pc, #0, 12
   112f8:	add	ip, ip, #86016	; 0x15000
   112fc:	ldr	pc, [ip, #3560]!	; 0xde8

00011300 <fseeko64@plt>:
   11300:	add	ip, pc, #0, 12
   11304:	add	ip, ip, #86016	; 0x15000
   11308:	ldr	pc, [ip, #3552]!	; 0xde0

0001130c <strtod_l@plt>:
   1130c:	add	ip, pc, #0, 12
   11310:	add	ip, ip, #86016	; 0x15000
   11314:	ldr	pc, [ip, #3544]!	; 0xdd8

00011318 <setlocale@plt>:
   11318:	add	ip, pc, #0, 12
   1131c:	add	ip, ip, #86016	; 0x15000
   11320:	ldr	pc, [ip, #3536]!	; 0xdd0

00011324 <sigemptyset@plt>:
   11324:	add	ip, pc, #0, 12
   11328:	add	ip, ip, #86016	; 0x15000
   1132c:	ldr	pc, [ip, #3528]!	; 0xdc8

00011330 <fork@plt>:
   11330:	add	ip, pc, #0, 12
   11334:	add	ip, ip, #86016	; 0x15000
   11338:	ldr	pc, [ip, #3520]!	; 0xdc0

0001133c <strrchr@plt>:
   1133c:	add	ip, pc, #0, 12
   11340:	add	ip, ip, #86016	; 0x15000
   11344:	ldr	pc, [ip, #3512]!	; 0xdb8

00011348 <nl_langinfo@plt>:
   11348:	add	ip, pc, #0, 12
   1134c:	add	ip, ip, #86016	; 0x15000
   11350:	ldr	pc, [ip, #3504]!	; 0xdb0

00011354 <newlocale@plt>:
   11354:	add	ip, pc, #0, 12
   11358:	add	ip, ip, #86016	; 0x15000
   1135c:	ldr	pc, [ip, #3496]!	; 0xda8

00011360 <setpgid@plt>:
   11360:	add	ip, pc, #0, 12
   11364:	add	ip, ip, #86016	; 0x15000
   11368:	ldr	pc, [ip, #3488]!	; 0xda0

0001136c <bindtextdomain@plt>:
   1136c:	add	ip, pc, #0, 12
   11370:	add	ip, ip, #86016	; 0x15000
   11374:	ldr	pc, [ip, #3480]!	; 0xd98

00011378 <__libc_current_sigrtmin@plt>:
   11378:	add	ip, pc, #0, 12
   1137c:	add	ip, ip, #86016	; 0x15000
   11380:	ldr	pc, [ip, #3472]!	; 0xd90

00011384 <fputs@plt>:
   11384:	add	ip, pc, #0, 12
   11388:	add	ip, ip, #86016	; 0x15000
   1138c:	ldr	pc, [ip, #3464]!	; 0xd88

00011390 <strncmp@plt>:
   11390:	add	ip, pc, #0, 12
   11394:	add	ip, ip, #86016	; 0x15000
   11398:	ldr	pc, [ip, #3456]!	; 0xd80

0001139c <abort@plt>:
   1139c:	add	ip, pc, #0, 12
   113a0:	add	ip, ip, #86016	; 0x15000
   113a4:	ldr	pc, [ip, #3448]!	; 0xd78

000113a8 <__snprintf_chk@plt>:
   113a8:	add	ip, pc, #0, 12
   113ac:	add	ip, ip, #86016	; 0x15000
   113b0:	ldr	pc, [ip, #3440]!	; 0xd70

Disassembly of section .text:

000113b8 <.text>:
   113b8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   113bc:	vpush	{d8}
   113c0:	mov	r4, r0
   113c4:	ldr	r0, [r1]
   113c8:	mov	r6, r1
   113cc:	sub	sp, sp, #300	; 0x12c
   113d0:	bl	125e4 <__snprintf_chk@plt+0x123c>
   113d4:	ldr	r1, [pc, #1340]	; 11918 <__snprintf_chk@plt+0x570>
   113d8:	mov	r0, #6
   113dc:	bl	11318 <setlocale@plt>
   113e0:	ldr	r1, [pc, #1332]	; 1191c <__snprintf_chk@plt+0x574>
   113e4:	ldr	r0, [pc, #1332]	; 11920 <__snprintf_chk@plt+0x578>
   113e8:	bl	1136c <bindtextdomain@plt>
   113ec:	ldr	r0, [pc, #1324]	; 11920 <__snprintf_chk@plt+0x578>
   113f0:	bl	11150 <textdomain@plt>
   113f4:	ldr	r3, [pc, #1320]	; 11924 <__snprintf_chk@plt+0x57c>
   113f8:	mov	r2, #125	; 0x7d
   113fc:	ldr	r0, [pc, #1316]	; 11928 <__snprintf_chk@plt+0x580>
   11400:	str	r2, [r3]
   11404:	bl	152a8 <__snprintf_chk@plt+0x3f00>
   11408:	ldr	r8, [pc, #1308]	; 1192c <__snprintf_chk@plt+0x584>
   1140c:	ldr	r9, [pc, #1308]	; 11930 <__snprintf_chk@plt+0x588>
   11410:	ldr	r7, [pc, #1308]	; 11934 <__snprintf_chk@plt+0x58c>
   11414:	mov	r5, #0
   11418:	str	r5, [sp]
   1141c:	ldr	r3, [pc, #1300]	; 11938 <__snprintf_chk@plt+0x590>
   11420:	ldr	r2, [pc, #1300]	; 1193c <__snprintf_chk@plt+0x594>
   11424:	mov	r1, r6
   11428:	mov	r0, r4
   1142c:	bl	11228 <getopt_long@plt>
   11430:	cmn	r0, #1
   11434:	bne	115a0 <__snprintf_chk@plt+0x1f8>
   11438:	ldr	r5, [pc, #1280]	; 11940 <__snprintf_chk@plt+0x598>
   1143c:	ldr	r3, [r5]
   11440:	sub	r4, r4, r3
   11444:	cmp	r4, #1
   11448:	ble	11644 <__snprintf_chk@plt+0x29c>
   1144c:	add	r2, r3, #1
   11450:	ldr	r0, [r6, r3, lsl #2]
   11454:	str	r2, [r5]
   11458:	bl	120ac <__snprintf_chk@plt+0xd04>
   1145c:	ldr	r4, [pc, #1232]	; 11934 <__snprintf_chk@plt+0x58c>
   11460:	ldr	r7, [r5]
   11464:	ldrb	r1, [r4, #24]
   11468:	ldr	r3, [r6, r7, lsl #2]
   1146c:	add	r9, r6, r7, lsl #2
   11470:	cmp	r1, #0
   11474:	str	r3, [r4, #20]
   11478:	vmov.f64	d8, d0
   1147c:	bne	11488 <__snprintf_chk@plt+0xe0>
   11480:	mov	r0, r1
   11484:	bl	11360 <setpgid@plt>
   11488:	ldr	r8, [pc, #1184]	; 11930 <__snprintf_chk@plt+0x588>
   1148c:	add	sl, sp, #160	; 0xa0
   11490:	mov	r0, sl
   11494:	ldr	fp, [r8]
   11498:	bl	11324 <sigemptyset@plt>
   1149c:	ldr	r3, [pc, #1184]	; 11944 <__snprintf_chk@plt+0x59c>
   114a0:	mov	r5, #268435456	; 0x10000000
   114a4:	mov	r2, #0
   114a8:	add	r1, sp, #156	; 0x9c
   114ac:	mov	r0, #14
   114b0:	str	r3, [sp, #156]	; 0x9c
   114b4:	str	r5, [sp, #288]	; 0x120
   114b8:	bl	11174 <sigaction@plt>
   114bc:	mov	r2, #0
   114c0:	add	r1, sp, #156	; 0x9c
   114c4:	mov	r0, #2
   114c8:	bl	11174 <sigaction@plt>
   114cc:	mov	r2, #0
   114d0:	add	r1, sp, #156	; 0x9c
   114d4:	mov	r0, #3
   114d8:	bl	11174 <sigaction@plt>
   114dc:	mov	r2, #0
   114e0:	add	r1, sp, #156	; 0x9c
   114e4:	mov	r0, #1
   114e8:	bl	11174 <sigaction@plt>
   114ec:	mov	r2, #0
   114f0:	add	r1, sp, #156	; 0x9c
   114f4:	mov	r0, #15
   114f8:	bl	11174 <sigaction@plt>
   114fc:	mov	r2, #0
   11500:	add	r1, sp, #156	; 0x9c
   11504:	mov	r0, fp
   11508:	bl	11174 <sigaction@plt>
   1150c:	mov	r1, #1
   11510:	mov	r0, #21
   11514:	bl	110fc <signal@plt>
   11518:	mov	r1, #1
   1151c:	mov	r0, #22
   11520:	bl	110fc <signal@plt>
   11524:	mov	r0, sl
   11528:	bl	11324 <sigemptyset@plt>
   1152c:	ldr	r3, [pc, #1044]	; 11948 <__snprintf_chk@plt+0x5a0>
   11530:	mov	r2, #0
   11534:	add	r1, sp, #156	; 0x9c
   11538:	mov	r0, #17
   1153c:	str	r3, [sp, #156]	; 0x9c
   11540:	str	r5, [sp, #288]	; 0x120
   11544:	bl	11174 <sigaction@plt>
   11548:	mov	r0, #17
   1154c:	bl	11d70 <__snprintf_chk@plt+0x9c8>
   11550:	bl	11330 <fork@plt>
   11554:	cmn	r0, #1
   11558:	mov	r5, r0
   1155c:	str	r0, [r4, #4]
   11560:	bne	11668 <__snprintf_chk@plt+0x2c0>
   11564:	bl	1127c <__errno_location@plt>
   11568:	mov	r2, #5
   1156c:	ldr	r1, [pc, #984]	; 1194c <__snprintf_chk@plt+0x5a4>
   11570:	mov	r6, #125	; 0x7d
   11574:	ldr	r4, [r0]
   11578:	mov	r0, #0
   1157c:	bl	11120 <dcgettext@plt>
   11580:	mov	r1, r4
   11584:	mov	r2, r0
   11588:	mov	r0, #0
   1158c:	bl	111d4 <error@plt>
   11590:	mov	r0, r6
   11594:	add	sp, sp, #300	; 0x12c
   11598:	vpop	{d8}
   1159c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   115a0:	cmp	r0, #115	; 0x73
   115a4:	beq	1162c <__snprintf_chk@plt+0x284>
   115a8:	bgt	115f4 <__snprintf_chk@plt+0x24c>
   115ac:	cmn	r0, #2
   115b0:	beq	11660 <__snprintf_chk@plt+0x2b8>
   115b4:	cmp	r0, #107	; 0x6b
   115b8:	beq	1161c <__snprintf_chk@plt+0x274>
   115bc:	cmn	r0, #3
   115c0:	bne	11644 <__snprintf_chk@plt+0x29c>
   115c4:	ldr	r3, [pc, #900]	; 11950 <__snprintf_chk@plt+0x5a8>
   115c8:	ldr	r0, [pc, #900]	; 11954 <__snprintf_chk@plt+0x5ac>
   115cc:	str	r3, [sp]
   115d0:	ldr	r3, [pc, #896]	; 11958 <__snprintf_chk@plt+0x5b0>
   115d4:	str	r5, [sp, #4]
   115d8:	ldr	r2, [pc, #892]	; 1195c <__snprintf_chk@plt+0x5b4>
   115dc:	ldr	r0, [r0]
   115e0:	ldr	r3, [r3]
   115e4:	ldr	r1, [pc, #884]	; 11960 <__snprintf_chk@plt+0x5b8>
   115e8:	bl	142ac <__snprintf_chk@plt+0x2f04>
   115ec:	mov	r0, r5
   115f0:	bl	1124c <exit@plt>
   115f4:	cmp	r0, #256	; 0x100
   115f8:	beq	1164c <__snprintf_chk@plt+0x2a4>
   115fc:	ldr	r3, [pc, #864]	; 11964 <__snprintf_chk@plt+0x5bc>
   11600:	cmp	r0, r3
   11604:	mov	r3, #1
   11608:	beq	11658 <__snprintf_chk@plt+0x2b0>
   1160c:	cmp	r0, #118	; 0x76
   11610:	bne	11644 <__snprintf_chk@plt+0x29c>
   11614:	strb	r3, [r7, #16]
   11618:	b	11414 <__snprintf_chk@plt+0x6c>
   1161c:	ldr	r0, [r8]
   11620:	bl	120ac <__snprintf_chk@plt+0xd04>
   11624:	vstr	d0, [r7, #8]
   11628:	b	11414 <__snprintf_chk@plt+0x6c>
   1162c:	add	r1, sp, #8
   11630:	ldr	r0, [r8]
   11634:	bl	1219c <__snprintf_chk@plt+0xdf4>
   11638:	cmn	r0, #1
   1163c:	str	r0, [r9]
   11640:	bne	11414 <__snprintf_chk@plt+0x6c>
   11644:	mov	r0, #125	; 0x7d
   11648:	b	11664 <__snprintf_chk@plt+0x2bc>
   1164c:	mov	r3, #1
   11650:	strb	r3, [r7, #24]
   11654:	b	11414 <__snprintf_chk@plt+0x6c>
   11658:	strb	r3, [r7, #25]
   1165c:	b	11414 <__snprintf_chk@plt+0x6c>
   11660:	mov	r0, r5
   11664:	bl	11ddc <__snprintf_chk@plt+0xa34>
   11668:	cmp	r0, #0
   1166c:	bne	116dc <__snprintf_chk@plt+0x334>
   11670:	mov	r1, r0
   11674:	mov	r0, #21
   11678:	bl	110fc <signal@plt>
   1167c:	mov	r1, r5
   11680:	mov	r0, #22
   11684:	bl	110fc <signal@plt>
   11688:	ldr	r0, [r6, r7, lsl #2]
   1168c:	mov	r1, r9
   11690:	bl	110e4 <execvp@plt>
   11694:	bl	1127c <__errno_location@plt>
   11698:	mov	r2, #5
   1169c:	ldr	r1, [pc, #708]	; 11968 <__snprintf_chk@plt+0x5c0>
   116a0:	ldr	r7, [r0]
   116a4:	mov	r0, r5
   116a8:	cmp	r7, #2
   116ac:	moveq	r6, #127	; 0x7f
   116b0:	movne	r6, #126	; 0x7e
   116b4:	bl	11120 <dcgettext@plt>
   116b8:	mov	r8, r0
   116bc:	ldr	r0, [r4, #20]
   116c0:	bl	13c14 <__snprintf_chk@plt+0x286c>
   116c4:	mov	r2, r8
   116c8:	mov	r1, r7
   116cc:	mov	r3, r0
   116d0:	mov	r0, r5
   116d4:	bl	111d4 <error@plt>
   116d8:	b	11590 <__snprintf_chk@plt+0x1e8>
   116dc:	mov	r0, #14
   116e0:	bl	11d70 <__snprintf_chk@plt+0x9c8>
   116e4:	vmov.f64	d0, d8
   116e8:	mov	r0, #1
   116ec:	bl	11ad8 <__snprintf_chk@plt+0x730>
   116f0:	add	r0, sp, #156	; 0x9c
   116f4:	ldr	r5, [r8]
   116f8:	bl	11324 <sigemptyset@plt>
   116fc:	mov	r1, #14
   11700:	add	r0, sp, #156	; 0x9c
   11704:	bl	111f8 <sigaddset@plt>
   11708:	mov	r1, #2
   1170c:	add	r0, sp, #156	; 0x9c
   11710:	bl	111f8 <sigaddset@plt>
   11714:	mov	r1, #3
   11718:	add	r0, sp, #156	; 0x9c
   1171c:	bl	111f8 <sigaddset@plt>
   11720:	mov	r1, #1
   11724:	add	r0, sp, #156	; 0x9c
   11728:	bl	111f8 <sigaddset@plt>
   1172c:	mov	r1, #15
   11730:	add	r0, sp, #156	; 0x9c
   11734:	bl	111f8 <sigaddset@plt>
   11738:	mov	r1, r5
   1173c:	add	r0, sp, #156	; 0x9c
   11740:	bl	111f8 <sigaddset@plt>
   11744:	mov	r1, #17
   11748:	add	r0, sp, #156	; 0x9c
   1174c:	bl	111f8 <sigaddset@plt>
   11750:	add	r2, sp, #28
   11754:	add	r1, sp, #156	; 0x9c
   11758:	mov	r0, #0
   1175c:	bl	110b4 <sigprocmask@plt>
   11760:	cmp	r0, #0
   11764:	beq	11790 <__snprintf_chk@plt+0x3e8>
   11768:	bl	1127c <__errno_location@plt>
   1176c:	mov	r2, #5
   11770:	ldr	r1, [pc, #500]	; 1196c <__snprintf_chk@plt+0x5c4>
   11774:	ldr	r5, [r0]
   11778:	mov	r0, #0
   1177c:	bl	11120 <dcgettext@plt>
   11780:	mov	r1, r5
   11784:	mov	r2, r0
   11788:	mov	r0, #0
   1178c:	bl	111d4 <error@plt>
   11790:	mov	r5, #1
   11794:	mov	r2, r5
   11798:	add	r1, sp, #156	; 0x9c
   1179c:	ldr	r0, [r4, #4]
   117a0:	bl	1118c <waitpid@plt>
   117a4:	cmp	r0, #0
   117a8:	beq	117e4 <__snprintf_chk@plt+0x43c>
   117ac:	bge	117f0 <__snprintf_chk@plt+0x448>
   117b0:	bl	1127c <__errno_location@plt>
   117b4:	mov	r2, #5
   117b8:	ldr	r1, [pc, #432]	; 11970 <__snprintf_chk@plt+0x5c8>
   117bc:	ldr	r5, [r0]
   117c0:	mov	r0, #0
   117c4:	bl	11120 <dcgettext@plt>
   117c8:	mov	r1, r5
   117cc:	mov	r2, r0
   117d0:	mov	r0, #0
   117d4:	bl	111d4 <error@plt>
   117d8:	mov	r3, #125	; 0x7d
   117dc:	str	r3, [sp, #156]	; 0x9c
   117e0:	b	118ac <__snprintf_chk@plt+0x504>
   117e4:	add	r0, sp, #28
   117e8:	bl	112ac <sigsuspend@plt>
   117ec:	b	11794 <__snprintf_chk@plt+0x3ec>
   117f0:	ldr	r3, [sp, #156]	; 0x9c
   117f4:	ands	r5, r3, #127	; 0x7f
   117f8:	asreq	r3, r3, #8
   117fc:	uxtbeq	r3, r3
   11800:	beq	117dc <__snprintf_chk@plt+0x434>
   11804:	add	r2, r5, #1
   11808:	sxtb	r2, r2
   1180c:	cmp	r2, #1
   11810:	ble	118d0 <__snprintf_chk@plt+0x528>
   11814:	tst	r3, #128	; 0x80
   11818:	beq	1183c <__snprintf_chk@plt+0x494>
   1181c:	mov	r2, #5
   11820:	ldr	r1, [pc, #332]	; 11974 <__snprintf_chk@plt+0x5cc>
   11824:	mov	r0, #0
   11828:	bl	11120 <dcgettext@plt>
   1182c:	mov	r1, #0
   11830:	mov	r2, r0
   11834:	mov	r0, r1
   11838:	bl	111d4 <error@plt>
   1183c:	ldr	r6, [r4]
   11840:	cmp	r6, #0
   11844:	bne	11884 <__snprintf_chk@plt+0x4dc>
   11848:	mov	r1, r6
   1184c:	mov	r0, #4
   11850:	bl	112c4 <prctl@plt>
   11854:	subs	r1, r0, #0
   11858:	beq	118fc <__snprintf_chk@plt+0x554>
   1185c:	bl	1127c <__errno_location@plt>
   11860:	mov	r2, #5
   11864:	ldr	r1, [pc, #268]	; 11978 <__snprintf_chk@plt+0x5d0>
   11868:	ldr	r7, [r0]
   1186c:	mov	r0, r6
   11870:	bl	11120 <dcgettext@plt>
   11874:	mov	r1, r7
   11878:	mov	r2, r0
   1187c:	mov	r0, r6
   11880:	bl	111d4 <error@plt>
   11884:	ldr	r3, [r4]
   11888:	adds	r3, r3, #0
   1188c:	movne	r3, #1
   11890:	cmp	r5, #9
   11894:	movne	r3, #0
   11898:	cmp	r3, #0
   1189c:	movne	r3, #1
   118a0:	add	r5, r5, #128	; 0x80
   118a4:	strbne	r3, [r4, #25]
   118a8:	str	r5, [sp, #156]	; 0x9c
   118ac:	ldr	r3, [r4]
   118b0:	cmp	r3, #0
   118b4:	beq	118c8 <__snprintf_chk@plt+0x520>
   118b8:	ldrb	r3, [r4, #25]
   118bc:	cmp	r3, #0
   118c0:	moveq	r3, #124	; 0x7c
   118c4:	streq	r3, [sp, #156]	; 0x9c
   118c8:	ldr	r6, [sp, #156]	; 0x9c
   118cc:	b	11590 <__snprintf_chk@plt+0x1e8>
   118d0:	mov	r2, #5
   118d4:	ldr	r1, [pc, #160]	; 1197c <__snprintf_chk@plt+0x5d4>
   118d8:	mov	r0, #0
   118dc:	bl	11120 <dcgettext@plt>
   118e0:	mov	r1, #0
   118e4:	ldr	r3, [sp, #156]	; 0x9c
   118e8:	mov	r2, r0
   118ec:	mov	r0, r1
   118f0:	bl	111d4 <error@plt>
   118f4:	mov	r3, #1
   118f8:	b	117dc <__snprintf_chk@plt+0x434>
   118fc:	mov	r0, r5
   11900:	bl	110fc <signal@plt>
   11904:	mov	r0, r5
   11908:	bl	11d70 <__snprintf_chk@plt+0x9c8>
   1190c:	mov	r0, r5
   11910:	bl	11084 <raise@plt>
   11914:	b	11884 <__snprintf_chk@plt+0x4dc>
   11918:	andeq	r5, r1, r7, lsr ip
   1191c:	andeq	r5, r1, r1, asr ip
   11920:	muleq	r1, r5, fp
   11924:	andeq	r7, r2, r8, lsr r1
   11928:	andeq	r2, r1, r4, asr #7
   1192c:	andeq	r7, r2, r8, lsr r3
   11930:	andeq	r7, r2, r0, lsr r1
   11934:	andeq	r7, r2, r0, asr #6
   11938:	andeq	r5, r1, r4, lsl #6
   1193c:	andeq	r5, r1, r7, ror ip
   11940:	andeq	r7, r2, r8, lsr #6
   11944:	andeq	r1, r1, r0, lsl ip
   11948:	andeq	r1, r1, r8, lsr #21
   1194c:	andeq	r5, r1, lr, ror ip
   11950:	andeq	r5, r1, r9, ror #24
   11954:	andeq	r7, r2, r4, lsr r3
   11958:	andeq	r7, r2, r4, lsr r1
   1195c:	muleq	r1, r1, fp
   11960:	andeq	r5, r1, r9, ror #7
   11964:	andeq	r0, r0, r1, lsl #2
   11968:	muleq	r1, r6, ip
   1196c:	ldrdeq	r5, [r1], -r4
   11970:	andeq	r5, r1, pc, lsr #25
   11974:	andeq	r5, r1, r9, asr #25
   11978:	andeq	r5, r1, fp, ror #25
   1197c:	andeq	r5, r1, r0, lsl sp
   11980:	mov	fp, #0
   11984:	mov	lr, #0
   11988:	pop	{r1}		; (ldr r1, [sp], #4)
   1198c:	mov	r2, sp
   11990:	push	{r2}		; (str r2, [sp, #-4]!)
   11994:	push	{r0}		; (str r0, [sp, #-4]!)
   11998:	ldr	ip, [pc, #16]	; 119b0 <__snprintf_chk@plt+0x608>
   1199c:	push	{ip}		; (str ip, [sp, #-4]!)
   119a0:	ldr	r0, [pc, #12]	; 119b4 <__snprintf_chk@plt+0x60c>
   119a4:	ldr	r3, [pc, #12]	; 119b8 <__snprintf_chk@plt+0x610>
   119a8:	bl	11204 <__libc_start_main@plt>
   119ac:	bl	1139c <abort@plt>
   119b0:	andeq	r5, r1, r4, lsr #5
   119b4:			; <UNDEFINED> instruction: 0x000113b8
   119b8:	andeq	r5, r1, r4, asr #4
   119bc:	ldr	r3, [pc, #20]	; 119d8 <__snprintf_chk@plt+0x630>
   119c0:	ldr	r2, [pc, #20]	; 119dc <__snprintf_chk@plt+0x634>
   119c4:	add	r3, pc, r3
   119c8:	ldr	r2, [r3, r2]
   119cc:	cmp	r2, #0
   119d0:	bxeq	lr
   119d4:	b	1121c <__gmon_start__@plt>
   119d8:	andeq	r5, r1, r4, lsr r6
   119dc:	andeq	r0, r0, r4, lsr #2
   119e0:	ldr	r3, [pc, #28]	; 11a04 <__snprintf_chk@plt+0x65c>
   119e4:	ldr	r0, [pc, #28]	; 11a08 <__snprintf_chk@plt+0x660>
   119e8:	sub	r3, r3, r0
   119ec:	cmp	r3, #6
   119f0:	bxls	lr
   119f4:	ldr	r3, [pc, #16]	; 11a0c <__snprintf_chk@plt+0x664>
   119f8:	cmp	r3, #0
   119fc:	bxeq	lr
   11a00:	bx	r3
   11a04:	andeq	r7, r2, r3, lsr #6
   11a08:	andeq	r7, r2, r0, lsr #6
   11a0c:	andeq	r0, r0, r0
   11a10:	ldr	r1, [pc, #36]	; 11a3c <__snprintf_chk@plt+0x694>
   11a14:	ldr	r0, [pc, #36]	; 11a40 <__snprintf_chk@plt+0x698>
   11a18:	sub	r1, r1, r0
   11a1c:	asr	r1, r1, #2
   11a20:	add	r1, r1, r1, lsr #31
   11a24:	asrs	r1, r1, #1
   11a28:	bxeq	lr
   11a2c:	ldr	r3, [pc, #16]	; 11a44 <__snprintf_chk@plt+0x69c>
   11a30:	cmp	r3, #0
   11a34:	bxeq	lr
   11a38:	bx	r3
   11a3c:	andeq	r7, r2, r0, lsr #6
   11a40:	andeq	r7, r2, r0, lsr #6
   11a44:	andeq	r0, r0, r0
   11a48:	push	{r4, lr}
   11a4c:	ldr	r4, [pc, #24]	; 11a6c <__snprintf_chk@plt+0x6c4>
   11a50:	ldrb	r3, [r4]
   11a54:	cmp	r3, #0
   11a58:	popne	{r4, pc}
   11a5c:	bl	119e0 <__snprintf_chk@plt+0x638>
   11a60:	mov	r3, #1
   11a64:	strb	r3, [r4]
   11a68:	pop	{r4, pc}
   11a6c:	andeq	r7, r2, ip, lsr r3
   11a70:	ldr	r0, [pc, #40]	; 11aa0 <__snprintf_chk@plt+0x6f8>
   11a74:	ldr	r3, [r0]
   11a78:	cmp	r3, #0
   11a7c:	bne	11a84 <__snprintf_chk@plt+0x6dc>
   11a80:	b	11a10 <__snprintf_chk@plt+0x668>
   11a84:	ldr	r3, [pc, #24]	; 11aa4 <__snprintf_chk@plt+0x6fc>
   11a88:	cmp	r3, #0
   11a8c:	beq	11a80 <__snprintf_chk@plt+0x6d8>
   11a90:	push	{r4, lr}
   11a94:	blx	r3
   11a98:	pop	{r4, lr}
   11a9c:	b	11a10 <__snprintf_chk@plt+0x668>
   11aa0:	andeq	r6, r2, r4, lsl #30
   11aa4:	andeq	r0, r0, r0
   11aa8:	bx	lr
   11aac:	push	{r4, r5, r6, lr}
   11ab0:	subs	r5, r0, #0
   11ab4:	mov	r4, r1
   11ab8:	bne	11ac8 <__snprintf_chk@plt+0x720>
   11abc:	mov	r1, #1
   11ac0:	mov	r0, r4
   11ac4:	bl	110fc <signal@plt>
   11ac8:	mov	r1, r4
   11acc:	mov	r0, r5
   11ad0:	pop	{r4, r5, r6, lr}
   11ad4:	b	11234 <kill@plt>
   11ad8:	push	{r4, r5, r6, lr}
   11adc:	vpush	{d8}
   11ae0:	mov	r6, r0
   11ae4:	vmov.f64	d8, d0
   11ae8:	mov	r4, #0
   11aec:	sub	sp, sp, #32
   11af0:	add	r5, sp, #8
   11af4:	mov	r0, r5
   11af8:	bl	124a8 <__snprintf_chk@plt+0x1100>
   11afc:	ldm	r5, {r0, r1}
   11b00:	add	r3, sp, #32
   11b04:	add	r2, sp, #4
   11b08:	stmdb	r3, {r0, r1}
   11b0c:	mov	r1, r4
   11b10:	mov	r0, r4
   11b14:	str	r4, [sp, #16]
   11b18:	str	r4, [sp, #20]
   11b1c:	bl	11144 <timer_create@plt>
   11b20:	subs	r5, r0, #0
   11b24:	bne	11bc0 <__snprintf_chk@plt+0x818>
   11b28:	mov	r3, r5
   11b2c:	add	r2, sp, #16
   11b30:	mov	r1, r5
   11b34:	ldr	r0, [sp, #4]
   11b38:	bl	11168 <timer_settime@plt>
   11b3c:	cmp	r0, r4
   11b40:	beq	11bb4 <__snprintf_chk@plt+0x80c>
   11b44:	cmp	r6, r4
   11b48:	beq	11b74 <__snprintf_chk@plt+0x7cc>
   11b4c:	bl	1127c <__errno_location@plt>
   11b50:	mov	r2, #5
   11b54:	ldr	r1, [pc, #172]	; 11c08 <__snprintf_chk@plt+0x860>
   11b58:	ldr	r4, [r0]
   11b5c:	mov	r0, r5
   11b60:	bl	11120 <dcgettext@plt>
   11b64:	mov	r1, r4
   11b68:	mov	r2, r0
   11b6c:	mov	r0, r5
   11b70:	bl	111d4 <error@plt>
   11b74:	ldr	r0, [sp, #4]
   11b78:	bl	111e0 <timer_delete@plt>
   11b7c:	vldr	d7, [pc, #124]	; 11c00 <__snprintf_chk@plt+0x858>
   11b80:	vcmpe.f64	d8, d7
   11b84:	vmrs	APSR_nzcv, fpscr
   11b88:	mvnge	r0, #0
   11b8c:	bge	11bb0 <__snprintf_chk@plt+0x808>
   11b90:	vcvt.u32.f64	s15, d8
   11b94:	vcvt.f64.u32	d6, s15
   11b98:	vmov	r3, s15
   11b9c:	vcmpe.f64	d8, d6
   11ba0:	vmrs	APSR_nzcv, fpscr
   11ba4:	movgt	r0, #1
   11ba8:	movle	r0, #0
   11bac:	add	r0, r0, r3
   11bb0:	bl	1112c <alarm@plt>
   11bb4:	add	sp, sp, #32
   11bb8:	vpop	{d8}
   11bbc:	pop	{r4, r5, r6, pc}
   11bc0:	cmp	r6, #0
   11bc4:	beq	11b7c <__snprintf_chk@plt+0x7d4>
   11bc8:	bl	1127c <__errno_location@plt>
   11bcc:	ldr	r5, [r0]
   11bd0:	cmp	r5, #38	; 0x26
   11bd4:	beq	11b7c <__snprintf_chk@plt+0x7d4>
   11bd8:	mov	r2, #5
   11bdc:	ldr	r1, [pc, #40]	; 11c0c <__snprintf_chk@plt+0x864>
   11be0:	mov	r0, r4
   11be4:	bl	11120 <dcgettext@plt>
   11be8:	mov	r1, r5
   11bec:	mov	r2, r0
   11bf0:	mov	r0, r4
   11bf4:	bl	111d4 <error@plt>
   11bf8:	b	11b7c <__snprintf_chk@plt+0x7d4>
   11bfc:	nop			; (mov r0, r0)
   11c00:			; <UNDEFINED> instruction: 0xffe00000
   11c04:	strdmi	pc, [pc, #255]	; 11d0b <__snprintf_chk@plt+0x963>
   11c08:	andeq	r5, r1, r4, lsl #7
   11c0c:	muleq	r1, fp, r3
   11c10:	push	{r4, r5, r6, r7, lr}
   11c14:	cmp	r0, #14
   11c18:	ldr	r5, [pc, #320]	; 11d60 <__snprintf_chk@plt+0x9b8>
   11c1c:	moveq	r3, #1
   11c20:	vpush	{d8-d9}
   11c24:	streq	r3, [r5]
   11c28:	ldreq	r3, [pc, #308]	; 11d64 <__snprintf_chk@plt+0x9bc>
   11c2c:	movne	r4, r0
   11c30:	sub	sp, sp, #36	; 0x24
   11c34:	ldreq	r4, [r3]
   11c38:	ldr	r3, [r5, #4]
   11c3c:	cmp	r3, #0
   11c40:	beq	11d50 <__snprintf_chk@plt+0x9a8>
   11c44:	vldr	d9, [r5, #8]
   11c48:	vldr	d8, [pc, #264]	; 11d58 <__snprintf_chk@plt+0x9b0>
   11c4c:	vcmp.f64	d9, d8
   11c50:	vmrs	APSR_nzcv, fpscr
   11c54:	beq	11c84 <__snprintf_chk@plt+0x8dc>
   11c58:	bl	1127c <__errno_location@plt>
   11c5c:	ldr	r3, [pc, #256]	; 11d64 <__snprintf_chk@plt+0x9bc>
   11c60:	mov	r2, #9
   11c64:	vmov.f64	d0, d9
   11c68:	str	r2, [r3]
   11c6c:	ldr	r7, [r0]
   11c70:	mov	r6, r0
   11c74:	mov	r0, #0
   11c78:	bl	11ad8 <__snprintf_chk@plt+0x730>
   11c7c:	vstr	d8, [r5, #8]
   11c80:	str	r7, [r6]
   11c84:	ldrb	r3, [r5, #16]
   11c88:	cmp	r3, #0
   11c8c:	beq	11cf8 <__snprintf_chk@plt+0x950>
   11c90:	add	r1, sp, #12
   11c94:	mov	r0, r4
   11c98:	bl	13d84 <__snprintf_chk@plt+0x29dc>
   11c9c:	cmp	r0, #0
   11ca0:	beq	11cc4 <__snprintf_chk@plt+0x91c>
   11ca4:	ldr	r3, [pc, #188]	; 11d68 <__snprintf_chk@plt+0x9c0>
   11ca8:	str	r4, [sp, #4]
   11cac:	str	r3, [sp]
   11cb0:	mov	r3, #19
   11cb4:	mov	r2, #1
   11cb8:	mov	r1, r3
   11cbc:	add	r0, sp, #12
   11cc0:	bl	113a8 <__snprintf_chk@plt>
   11cc4:	mov	r2, #5
   11cc8:	ldr	r1, [pc, #156]	; 11d6c <__snprintf_chk@plt+0x9c4>
   11ccc:	mov	r0, #0
   11cd0:	bl	11120 <dcgettext@plt>
   11cd4:	mov	r6, r0
   11cd8:	ldr	r0, [r5, #20]
   11cdc:	bl	13c14 <__snprintf_chk@plt+0x286c>
   11ce0:	mov	r1, #0
   11ce4:	add	r3, sp, #12
   11ce8:	mov	r2, r6
   11cec:	str	r0, [sp]
   11cf0:	mov	r0, r1
   11cf4:	bl	111d4 <error@plt>
   11cf8:	ldr	r6, [r5, #4]
   11cfc:	mov	r1, r4
   11d00:	mov	r0, r6
   11d04:	bl	11aac <__snprintf_chk@plt+0x704>
   11d08:	ldrb	r5, [r5, #24]
   11d0c:	cmp	r5, #0
   11d10:	bne	11d44 <__snprintf_chk@plt+0x99c>
   11d14:	mov	r1, r4
   11d18:	mov	r0, r5
   11d1c:	bl	11aac <__snprintf_chk@plt+0x704>
   11d20:	cmp	r4, #9
   11d24:	cmpne	r4, #18
   11d28:	beq	11d44 <__snprintf_chk@plt+0x99c>
   11d2c:	mov	r1, #18
   11d30:	mov	r0, r6
   11d34:	bl	11aac <__snprintf_chk@plt+0x704>
   11d38:	mov	r1, #18
   11d3c:	mov	r0, r5
   11d40:	bl	11aac <__snprintf_chk@plt+0x704>
   11d44:	add	sp, sp, #36	; 0x24
   11d48:	vpop	{d8-d9}
   11d4c:	pop	{r4, r5, r6, r7, pc}
   11d50:	add	r0, r4, #128	; 0x80
   11d54:	bl	110cc <_exit@plt>
	...
   11d60:	andeq	r7, r2, r0, asr #6
   11d64:	andeq	r7, r2, r0, lsr r1
   11d68:			; <UNDEFINED> instruction: 0x000153b1
   11d6c:			; <UNDEFINED> instruction: 0x000153b4
   11d70:	push	{r4, lr}
   11d74:	sub	sp, sp, #128	; 0x80
   11d78:	mov	r4, r0
   11d7c:	mov	r0, sp
   11d80:	bl	11324 <sigemptyset@plt>
   11d84:	mov	r1, r4
   11d88:	mov	r0, sp
   11d8c:	bl	111f8 <sigaddset@plt>
   11d90:	mov	r2, #0
   11d94:	mov	r1, sp
   11d98:	mov	r0, #1
   11d9c:	bl	110b4 <sigprocmask@plt>
   11da0:	cmp	r0, #0
   11da4:	beq	11dd0 <__snprintf_chk@plt+0xa28>
   11da8:	bl	1127c <__errno_location@plt>
   11dac:	mov	r2, #5
   11db0:	ldr	r1, [pc, #32]	; 11dd8 <__snprintf_chk@plt+0xa30>
   11db4:	ldr	r4, [r0]
   11db8:	mov	r0, #0
   11dbc:	bl	11120 <dcgettext@plt>
   11dc0:	mov	r1, r4
   11dc4:	mov	r2, r0
   11dc8:	mov	r0, #0
   11dcc:	bl	111d4 <error@plt>
   11dd0:	add	sp, sp, #128	; 0x80
   11dd4:	pop	{r4, pc}
   11dd8:	ldrdeq	r5, [r1], -r4
   11ddc:	subs	r5, r0, #0
   11de0:	push	{r7, lr}
   11de4:	sub	sp, sp, #56	; 0x38
   11de8:	ldr	r4, [pc, #600]	; 12048 <__snprintf_chk@plt+0xca0>
   11dec:	beq	11e24 <__snprintf_chk@plt+0xa7c>
   11df0:	ldr	r3, [pc, #596]	; 1204c <__snprintf_chk@plt+0xca4>
   11df4:	mov	r2, #5
   11df8:	ldr	r1, [pc, #592]	; 12050 <__snprintf_chk@plt+0xca8>
   11dfc:	mov	r0, #0
   11e00:	ldr	r6, [r3]
   11e04:	bl	11120 <dcgettext@plt>
   11e08:	ldr	r3, [r4]
   11e0c:	mov	r1, #1
   11e10:	mov	r2, r0
   11e14:	mov	r0, r6
   11e18:	bl	112e8 <__fprintf_chk@plt>
   11e1c:	mov	r0, r5
   11e20:	bl	1124c <exit@plt>
   11e24:	mov	r2, #5
   11e28:	ldr	r1, [pc, #548]	; 12054 <__snprintf_chk@plt+0xcac>
   11e2c:	bl	11120 <dcgettext@plt>
   11e30:	ldr	r3, [r4]
   11e34:	ldr	r4, [pc, #540]	; 12058 <__snprintf_chk@plt+0xcb0>
   11e38:	mov	r2, r3
   11e3c:	ldr	r8, [pc, #536]	; 1205c <__snprintf_chk@plt+0xcb4>
   11e40:	mov	r6, r5
   11e44:	mov	r1, r0
   11e48:	mov	r0, #1
   11e4c:	bl	112b8 <__printf_chk@plt>
   11e50:	mov	r2, #5
   11e54:	ldr	r1, [pc, #516]	; 12060 <__snprintf_chk@plt+0xcb8>
   11e58:	mov	r0, r5
   11e5c:	bl	11120 <dcgettext@plt>
   11e60:	ldr	r1, [r4]
   11e64:	bl	11078 <fputs_unlocked@plt>
   11e68:	mov	r2, #5
   11e6c:	ldr	r1, [pc, #496]	; 12064 <__snprintf_chk@plt+0xcbc>
   11e70:	mov	r0, r5
   11e74:	bl	11120 <dcgettext@plt>
   11e78:	ldr	r1, [r4]
   11e7c:	bl	11078 <fputs_unlocked@plt>
   11e80:	mov	r2, #5
   11e84:	ldr	r1, [pc, #476]	; 12068 <__snprintf_chk@plt+0xcc0>
   11e88:	mov	r0, r5
   11e8c:	bl	11120 <dcgettext@plt>
   11e90:	ldr	r1, [r4]
   11e94:	bl	11078 <fputs_unlocked@plt>
   11e98:	mov	r2, #5
   11e9c:	ldr	r1, [pc, #456]	; 1206c <__snprintf_chk@plt+0xcc4>
   11ea0:	mov	r0, r5
   11ea4:	bl	11120 <dcgettext@plt>
   11ea8:	ldr	r1, [r4]
   11eac:	bl	11078 <fputs_unlocked@plt>
   11eb0:	mov	r2, #5
   11eb4:	ldr	r1, [pc, #436]	; 12070 <__snprintf_chk@plt+0xcc8>
   11eb8:	mov	r0, r5
   11ebc:	bl	11120 <dcgettext@plt>
   11ec0:	ldr	r1, [r4]
   11ec4:	bl	11078 <fputs_unlocked@plt>
   11ec8:	mov	r2, #5
   11ecc:	ldr	r1, [pc, #416]	; 12074 <__snprintf_chk@plt+0xccc>
   11ed0:	mov	r0, r5
   11ed4:	bl	11120 <dcgettext@plt>
   11ed8:	ldr	r1, [r4]
   11edc:	bl	11078 <fputs_unlocked@plt>
   11ee0:	mov	r2, #5
   11ee4:	ldr	r1, [pc, #396]	; 12078 <__snprintf_chk@plt+0xcd0>
   11ee8:	mov	r0, r5
   11eec:	bl	11120 <dcgettext@plt>
   11ef0:	ldr	r1, [r4]
   11ef4:	bl	11078 <fputs_unlocked@plt>
   11ef8:	mov	r2, #5
   11efc:	ldr	r1, [pc, #376]	; 1207c <__snprintf_chk@plt+0xcd4>
   11f00:	mov	r0, r5
   11f04:	bl	11120 <dcgettext@plt>
   11f08:	ldr	r1, [r4]
   11f0c:	bl	11078 <fputs_unlocked@plt>
   11f10:	mov	r2, #5
   11f14:	ldr	r1, [pc, #356]	; 12080 <__snprintf_chk@plt+0xcd8>
   11f18:	mov	r0, r5
   11f1c:	bl	11120 <dcgettext@plt>
   11f20:	ldr	r1, [r4]
   11f24:	bl	11078 <fputs_unlocked@plt>
   11f28:	ldr	lr, [pc, #340]	; 12084 <__snprintf_chk@plt+0xcdc>
   11f2c:	mov	ip, sp
   11f30:	ldm	lr!, {r0, r1, r2, r3}
   11f34:	stmia	ip!, {r0, r1, r2, r3}
   11f38:	ldm	lr!, {r0, r1, r2, r3}
   11f3c:	stmia	ip!, {r0, r1, r2, r3}
   11f40:	ldm	lr!, {r0, r1, r2, r3}
   11f44:	stmia	ip!, {r0, r1, r2, r3}
   11f48:	ldm	lr, {r0, r1}
   11f4c:	stm	ip, {r0, r1}
   11f50:	ldr	r1, [sp, r6]
   11f54:	add	r7, sp, r6
   11f58:	cmp	r1, #0
   11f5c:	bne	12000 <__snprintf_chk@plt+0xc58>
   11f60:	ldr	r6, [r7, #4]
   11f64:	ldr	r7, [pc, #240]	; 1205c <__snprintf_chk@plt+0xcb4>
   11f68:	cmp	r6, #0
   11f6c:	mov	r2, #5
   11f70:	ldr	r1, [pc, #272]	; 12088 <__snprintf_chk@plt+0xce0>
   11f74:	mov	r0, #0
   11f78:	moveq	r6, r7
   11f7c:	bl	11120 <dcgettext@plt>
   11f80:	ldr	r3, [pc, #260]	; 1208c <__snprintf_chk@plt+0xce4>
   11f84:	ldr	r2, [pc, #260]	; 12090 <__snprintf_chk@plt+0xce8>
   11f88:	mov	r1, r0
   11f8c:	mov	r0, #1
   11f90:	bl	112b8 <__printf_chk@plt>
   11f94:	mov	r1, #0
   11f98:	mov	r0, #5
   11f9c:	bl	11318 <setlocale@plt>
   11fa0:	cmp	r0, #0
   11fa4:	bne	12018 <__snprintf_chk@plt+0xc70>
   11fa8:	mov	r2, #5
   11fac:	ldr	r1, [pc, #224]	; 12094 <__snprintf_chk@plt+0xcec>
   11fb0:	mov	r0, #0
   11fb4:	bl	11120 <dcgettext@plt>
   11fb8:	ldr	r3, [pc, #156]	; 1205c <__snprintf_chk@plt+0xcb4>
   11fbc:	ldr	r2, [pc, #200]	; 1208c <__snprintf_chk@plt+0xce4>
   11fc0:	mov	r1, r0
   11fc4:	mov	r0, #1
   11fc8:	bl	112b8 <__printf_chk@plt>
   11fcc:	mov	r2, #5
   11fd0:	ldr	r1, [pc, #192]	; 12098 <__snprintf_chk@plt+0xcf0>
   11fd4:	mov	r0, #0
   11fd8:	bl	11120 <dcgettext@plt>
   11fdc:	ldr	r2, [pc, #184]	; 1209c <__snprintf_chk@plt+0xcf4>
   11fe0:	cmp	r6, r7
   11fe4:	ldr	r3, [pc, #180]	; 120a0 <__snprintf_chk@plt+0xcf8>
   11fe8:	moveq	r3, r2
   11fec:	mov	r2, r6
   11ff0:	mov	r1, r0
   11ff4:	mov	r0, #1
   11ff8:	bl	112b8 <__printf_chk@plt>
   11ffc:	b	11e1c <__snprintf_chk@plt+0xa74>
   12000:	mov	r0, r8
   12004:	bl	11090 <strcmp@plt>
   12008:	add	r6, r6, #8
   1200c:	cmp	r0, #0
   12010:	bne	11f50 <__snprintf_chk@plt+0xba8>
   12014:	b	11f60 <__snprintf_chk@plt+0xbb8>
   12018:	mov	r2, #3
   1201c:	ldr	r1, [pc, #128]	; 120a4 <__snprintf_chk@plt+0xcfc>
   12020:	bl	11390 <strncmp@plt>
   12024:	cmp	r0, #0
   12028:	beq	11fa8 <__snprintf_chk@plt+0xc00>
   1202c:	mov	r2, #5
   12030:	ldr	r1, [pc, #112]	; 120a8 <__snprintf_chk@plt+0xd00>
   12034:	mov	r0, #0
   12038:	bl	11120 <dcgettext@plt>
   1203c:	ldr	r1, [r4]
   12040:	bl	11078 <fputs_unlocked@plt>
   12044:	b	11fa8 <__snprintf_chk@plt+0xc00>
   12048:	andeq	r7, r2, r4, ror #6
   1204c:	andeq	r7, r2, r0, lsr r3
   12050:	strdeq	r5, [r1], -r1
   12054:	andeq	r5, r1, r8, lsl r4
   12058:	andeq	r7, r2, r4, lsr r3
   1205c:	andeq	r5, r1, r9, ror #7
   12060:	andeq	r5, r1, r9, asr r4
   12064:	muleq	r1, r6, r4
   12068:	andeq	r5, r1, r1, ror #9
   1206c:			; <UNDEFINED> instruction: 0x000157bd
   12070:	strdeq	r5, [r1], -pc	; <UNPREDICTABLE>
   12074:	andeq	r5, r1, ip, lsr #16
   12078:	andeq	r5, r1, r2, ror #16
   1207c:	andeq	r5, r1, r1, lsr #18
   12080:	andeq	r5, r1, fp, lsl #20
   12084:	andeq	r5, r1, ip, asr #5
   12088:	andeq	r5, r1, r2, asr fp
   1208c:	andeq	r5, r1, r9, ror #22
   12090:	muleq	r1, r1, fp
   12094:	andeq	r5, r1, sl, ror #23
   12098:	andeq	r5, r1, r5, lsl #24
   1209c:	andeq	r5, r1, sp, asr #26
   120a0:	andeq	r5, r1, r7, lsr ip
   120a4:	muleq	r1, pc, fp	; <UNPREDICTABLE>
   120a8:	andeq	r5, r1, r3, lsr #23
   120ac:	push	{r4, r5, lr}
   120b0:	sub	sp, sp, #20
   120b4:	ldr	r3, [pc, #212]	; 12190 <__snprintf_chk@plt+0xde8>
   120b8:	add	r2, sp, #8
   120bc:	add	r1, sp, #4
   120c0:	mov	r5, r0
   120c4:	bl	14848 <__snprintf_chk@plt+0x34a0>
   120c8:	cmp	r0, #0
   120cc:	bne	120e0 <__snprintf_chk@plt+0xd38>
   120d0:	bl	1127c <__errno_location@plt>
   120d4:	ldr	r3, [r0]
   120d8:	cmp	r3, #34	; 0x22
   120dc:	bne	12124 <__snprintf_chk@plt+0xd7c>
   120e0:	vldr	d7, [sp, #8]
   120e4:	vcmpe.f64	d7, #0.0
   120e8:	vmrs	APSR_nzcv, fpscr
   120ec:	blt	12124 <__snprintf_chk@plt+0xd7c>
   120f0:	ldr	r2, [sp, #4]
   120f4:	ldrb	r3, [r2]
   120f8:	cmp	r3, #0
   120fc:	beq	12170 <__snprintf_chk@plt+0xdc8>
   12100:	ldrb	r2, [r2, #1]
   12104:	cmp	r2, #0
   12108:	bne	12124 <__snprintf_chk@plt+0xd7c>
   1210c:	cmp	r3, #104	; 0x68
   12110:	beq	12178 <__snprintf_chk@plt+0xdd0>
   12114:	bhi	1215c <__snprintf_chk@plt+0xdb4>
   12118:	cmp	r3, #100	; 0x64
   1211c:	ldreq	r3, [pc, #112]	; 12194 <__snprintf_chk@plt+0xdec>
   12120:	beq	1217c <__snprintf_chk@plt+0xdd4>
   12124:	mov	r2, #5
   12128:	ldr	r1, [pc, #104]	; 12198 <__snprintf_chk@plt+0xdf0>
   1212c:	mov	r0, #0
   12130:	bl	11120 <dcgettext@plt>
   12134:	mov	r4, r0
   12138:	mov	r0, r5
   1213c:	bl	13c14 <__snprintf_chk@plt+0x286c>
   12140:	mov	r1, #0
   12144:	mov	r2, r4
   12148:	mov	r3, r0
   1214c:	mov	r0, r1
   12150:	bl	111d4 <error@plt>
   12154:	mov	r0, #125	; 0x7d
   12158:	bl	11ddc <__snprintf_chk@plt+0xa34>
   1215c:	cmp	r3, #109	; 0x6d
   12160:	moveq	r3, #60	; 0x3c
   12164:	beq	1217c <__snprintf_chk@plt+0xdd4>
   12168:	cmp	r3, #115	; 0x73
   1216c:	bne	12124 <__snprintf_chk@plt+0xd7c>
   12170:	mov	r3, #1
   12174:	b	1217c <__snprintf_chk@plt+0xdd4>
   12178:	mov	r3, #3600	; 0xe10
   1217c:	vmov	s13, r3
   12180:	vcvt.f64.s32	d0, s13
   12184:	vmul.f64	d0, d0, d7
   12188:	add	sp, sp, #20
   1218c:	pop	{r4, r5, pc}
   12190:	andeq	r2, r1, ip, lsr #6
   12194:	andeq	r5, r1, r0, lsl #3
   12198:	andeq	r5, r1, r8, lsr ip
   1219c:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
   121a0:	mov	r6, r0
   121a4:	ldrb	r3, [r0]
   121a8:	mov	r8, r1
   121ac:	sub	r3, r3, #48	; 0x30
   121b0:	cmp	r3, #9
   121b4:	bhi	1226c <__snprintf_chk@plt+0xec4>
   121b8:	bl	1127c <__errno_location@plt>
   121bc:	mov	r3, #0
   121c0:	mov	r2, #10
   121c4:	add	r1, sp, #4
   121c8:	str	r3, [r0]
   121cc:	mov	r4, r0
   121d0:	mov	r0, r6
   121d4:	bl	1109c <strtol@plt>
   121d8:	ldr	r3, [sp, #4]
   121dc:	cmp	r6, r3
   121e0:	beq	12204 <__snprintf_chk@plt+0xe5c>
   121e4:	ldrb	r3, [r3]
   121e8:	cmp	r3, #0
   121ec:	bne	12204 <__snprintf_chk@plt+0xe5c>
   121f0:	ldr	r3, [r4]
   121f4:	cmp	r3, #0
   121f8:	bne	12204 <__snprintf_chk@plt+0xe5c>
   121fc:	cmn	r0, #1
   12200:	bne	12254 <__snprintf_chk@plt+0xeac>
   12204:	mvn	r3, #0
   12208:	str	r3, [sp]
   1220c:	ldr	r0, [sp]
   12210:	cmp	r0, #0
   12214:	bge	1230c <__snprintf_chk@plt+0xf64>
   12218:	mov	r2, #5
   1221c:	ldr	r1, [pc, #256]	; 12324 <__snprintf_chk@plt+0xf7c>
   12220:	mov	r0, #0
   12224:	bl	11120 <dcgettext@plt>
   12228:	mov	r4, r0
   1222c:	mov	r0, r6
   12230:	bl	13c14 <__snprintf_chk@plt+0x286c>
   12234:	mov	r1, #0
   12238:	mov	r2, r4
   1223c:	mov	r3, r0
   12240:	mov	r0, r1
   12244:	bl	111d4 <error@plt>
   12248:	mvn	r0, #0
   1224c:	add	sp, sp, #12
   12250:	pop	{r4, r5, r6, r7, r8, r9, pc}
   12254:	cmp	r0, #254	; 0xfe
   12258:	movgt	r3, #255	; 0xff
   1225c:	movle	r3, #127	; 0x7f
   12260:	and	r0, r0, r3
   12264:	str	r0, [sp]
   12268:	b	1220c <__snprintf_chk@plt+0xe64>
   1226c:	bl	147ec <__snprintf_chk@plt+0x3444>
   12270:	ldr	r9, [pc, #176]	; 12328 <__snprintf_chk@plt+0xf80>
   12274:	mov	r4, r0
   12278:	mov	r7, r0
   1227c:	ldrb	r5, [r7]
   12280:	cmp	r5, #0
   12284:	bne	122bc <__snprintf_chk@plt+0xf14>
   12288:	mov	r1, sp
   1228c:	mov	r0, r4
   12290:	bl	13c20 <__snprintf_chk@plt+0x2878>
   12294:	cmp	r0, #0
   12298:	beq	122b0 <__snprintf_chk@plt+0xf08>
   1229c:	ldrb	r3, [r4]
   122a0:	cmp	r3, #83	; 0x53
   122a4:	beq	122dc <__snprintf_chk@plt+0xf34>
   122a8:	mvn	r3, #0
   122ac:	str	r3, [sp]
   122b0:	mov	r0, r4
   122b4:	bl	12590 <__snprintf_chk@plt+0x11e8>
   122b8:	b	1220c <__snprintf_chk@plt+0xe64>
   122bc:	mov	r1, r5
   122c0:	mov	r0, r9
   122c4:	bl	11270 <strchr@plt>
   122c8:	add	r7, r7, #1
   122cc:	cmp	r0, #0
   122d0:	subne	r5, r5, #32
   122d4:	strbne	r5, [r7, #-1]
   122d8:	b	1227c <__snprintf_chk@plt+0xed4>
   122dc:	ldrb	r3, [r4, #1]
   122e0:	cmp	r3, #73	; 0x49
   122e4:	bne	122a8 <__snprintf_chk@plt+0xf00>
   122e8:	ldrb	r3, [r4, #2]
   122ec:	cmp	r3, #71	; 0x47
   122f0:	bne	122a8 <__snprintf_chk@plt+0xf00>
   122f4:	mov	r1, sp
   122f8:	add	r0, r4, #3
   122fc:	bl	13c20 <__snprintf_chk@plt+0x2878>
   12300:	cmp	r0, #0
   12304:	bne	122a8 <__snprintf_chk@plt+0xf00>
   12308:	b	122b0 <__snprintf_chk@plt+0xf08>
   1230c:	mov	r1, r8
   12310:	bl	13d84 <__snprintf_chk@plt+0x29dc>
   12314:	cmp	r0, #0
   12318:	bne	12218 <__snprintf_chk@plt+0xe70>
   1231c:	ldr	r0, [sp]
   12320:	b	1224c <__snprintf_chk@plt+0xea4>
   12324:	andeq	r5, r1, r6, ror #27
   12328:	andeq	r5, r1, fp, asr #27
   1232c:	push	{r4, r5, r6, r7, lr}
   12330:	vpush	{d8}
   12334:	mov	r4, r1
   12338:	mov	r7, r0
   1233c:	sub	sp, sp, #12
   12340:	mov	r1, sp
   12344:	bl	112d0 <strtod@plt>
   12348:	ldr	r3, [sp]
   1234c:	ldrb	r3, [r3]
   12350:	cmp	r3, #0
   12354:	vmov.f64	d8, d0
   12358:	beq	12388 <__snprintf_chk@plt+0xfe0>
   1235c:	bl	1127c <__errno_location@plt>
   12360:	add	r1, sp, #4
   12364:	ldr	r6, [r0]
   12368:	mov	r5, r0
   1236c:	mov	r0, r7
   12370:	bl	149d0 <__snprintf_chk@plt+0x3628>
   12374:	ldm	sp, {r2, r3}
   12378:	cmp	r2, r3
   1237c:	strcc	r3, [sp]
   12380:	strcs	r6, [r5]
   12384:	vmovcc.f64	d8, d0
   12388:	cmp	r4, #0
   1238c:	vmov.f64	d0, d8
   12390:	ldrne	r3, [sp]
   12394:	strne	r3, [r4]
   12398:	add	sp, sp, #12
   1239c:	vpop	{d8}
   123a0:	pop	{r4, r5, r6, r7, pc}
   123a4:	ldr	r3, [pc, #4]	; 123b0 <__snprintf_chk@plt+0x1008>
   123a8:	str	r0, [r3]
   123ac:	bx	lr
   123b0:	andeq	r7, r2, ip, asr r3
   123b4:	ldr	r3, [pc, #4]	; 123c0 <__snprintf_chk@plt+0x1018>
   123b8:	strb	r0, [r3, #4]
   123bc:	bx	lr
   123c0:	andeq	r7, r2, ip, asr r3
   123c4:	ldr	r3, [pc, #192]	; 1248c <__snprintf_chk@plt+0x10e4>
   123c8:	push	{r0, r1, r4, r5, r6, lr}
   123cc:	ldr	r0, [r3]
   123d0:	bl	14a3c <__snprintf_chk@plt+0x3694>
   123d4:	cmp	r0, #0
   123d8:	beq	12470 <__snprintf_chk@plt+0x10c8>
   123dc:	ldr	r3, [pc, #172]	; 12490 <__snprintf_chk@plt+0x10e8>
   123e0:	mov	r4, r3
   123e4:	ldrb	r2, [r3, #4]
   123e8:	cmp	r2, #0
   123ec:	beq	12400 <__snprintf_chk@plt+0x1058>
   123f0:	bl	1127c <__errno_location@plt>
   123f4:	ldr	r3, [r0]
   123f8:	cmp	r3, #32
   123fc:	beq	12470 <__snprintf_chk@plt+0x10c8>
   12400:	mov	r2, #5
   12404:	ldr	r1, [pc, #136]	; 12494 <__snprintf_chk@plt+0x10ec>
   12408:	mov	r0, #0
   1240c:	bl	11120 <dcgettext@plt>
   12410:	ldr	r4, [r4]
   12414:	cmp	r4, #0
   12418:	mov	r5, r0
   1241c:	beq	12454 <__snprintf_chk@plt+0x10ac>
   12420:	bl	1127c <__errno_location@plt>
   12424:	ldr	r6, [r0]
   12428:	mov	r0, r4
   1242c:	bl	13ac4 <__snprintf_chk@plt+0x271c>
   12430:	str	r5, [sp]
   12434:	ldr	r2, [pc, #92]	; 12498 <__snprintf_chk@plt+0x10f0>
   12438:	mov	r1, r6
   1243c:	mov	r3, r0
   12440:	mov	r0, #0
   12444:	bl	111d4 <error@plt>
   12448:	ldr	r3, [pc, #76]	; 1249c <__snprintf_chk@plt+0x10f4>
   1244c:	ldr	r0, [r3]
   12450:	bl	110cc <_exit@plt>
   12454:	bl	1127c <__errno_location@plt>
   12458:	mov	r3, r5
   1245c:	ldr	r2, [pc, #60]	; 124a0 <__snprintf_chk@plt+0x10f8>
   12460:	ldr	r1, [r0]
   12464:	mov	r0, r4
   12468:	bl	111d4 <error@plt>
   1246c:	b	12448 <__snprintf_chk@plt+0x10a0>
   12470:	ldr	r3, [pc, #44]	; 124a4 <__snprintf_chk@plt+0x10fc>
   12474:	ldr	r0, [r3]
   12478:	bl	14a3c <__snprintf_chk@plt+0x3694>
   1247c:	cmp	r0, #0
   12480:	bne	12448 <__snprintf_chk@plt+0x10a0>
   12484:	add	sp, sp, #8
   12488:	pop	{r4, r5, r6, pc}
   1248c:	andeq	r7, r2, r4, lsr r3
   12490:	andeq	r7, r2, ip, asr r3
   12494:	andeq	r5, r1, r8, lsl #28
   12498:	andeq	r5, r1, r4, lsl lr
   1249c:	andeq	r7, r2, r8, lsr r1
   124a0:	andeq	r5, r1, r8, lsl lr
   124a4:	andeq	r7, r2, r0, lsr r3
   124a8:	vldr	d7, [pc, #192]	; 12570 <__snprintf_chk@plt+0x11c8>
   124ac:	push	{r4, r5, r6, lr}
   124b0:	mov	r4, r0
   124b4:	vpush	{d8}
   124b8:	vcmpe.f64	d0, d7
   124bc:	vmrs	APSR_nzcv, fpscr
   124c0:	movle	r3, #-2147483648	; 0x80000000
   124c4:	strle	r3, [r0]
   124c8:	movle	r3, #0
   124cc:	ble	124ec <__snprintf_chk@plt+0x1144>
   124d0:	vldr	d7, [pc, #160]	; 12578 <__snprintf_chk@plt+0x11d0>
   124d4:	vcmpe.f64	d0, d7
   124d8:	vmrs	APSR_nzcv, fpscr
   124dc:	bmi	124fc <__snprintf_chk@plt+0x1154>
   124e0:	mvn	r3, #-2147483648	; 0x80000000
   124e4:	str	r3, [r0]
   124e8:	ldr	r3, [pc, #152]	; 12588 <__snprintf_chk@plt+0x11e0>
   124ec:	str	r3, [r4, #4]
   124f0:	vpop	{d8}
   124f4:	mov	r0, r4
   124f8:	pop	{r4, r5, r6, pc}
   124fc:	vcvt.s32.f64	s16, d0
   12500:	ldr	r1, [pc, #132]	; 1258c <__snprintf_chk@plt+0x11e4>
   12504:	vcvt.f64.s32	d7, s16
   12508:	vsub.f64	d0, d0, d7
   1250c:	vldr	d7, [pc, #108]	; 12580 <__snprintf_chk@plt+0x11d8>
   12510:	vmul.f64	d0, d0, d7
   12514:	vcvt.s32.f64	s15, d0
   12518:	vcvt.f64.s32	d6, s15
   1251c:	vmov	r3, s15
   12520:	vcmpe.f64	d0, d6
   12524:	vmrs	APSR_nzcv, fpscr
   12528:	movgt	r6, #1
   1252c:	movle	r6, #0
   12530:	add	r6, r3, r6
   12534:	mov	r0, r6
   12538:	bl	14ff4 <__snprintf_chk@plt+0x3c4c>
   1253c:	vmov	r3, s16
   12540:	ldr	r1, [pc, #68]	; 1258c <__snprintf_chk@plt+0x11e4>
   12544:	add	r5, r0, r3
   12548:	mov	r0, r6
   1254c:	bl	15214 <__snprintf_chk@plt+0x3e6c>
   12550:	cmp	r1, #0
   12554:	addlt	r1, r1, #998244352	; 0x3b800000
   12558:	addlt	r1, r1, #1753088	; 0x1ac000
   1255c:	sublt	r5, r5, #1
   12560:	addlt	r1, r1, #2560	; 0xa00
   12564:	str	r5, [r4]
   12568:	str	r1, [r4, #4]
   1256c:	b	124f0 <__snprintf_chk@plt+0x1148>
   12570:	andeq	r0, r0, r0
   12574:	mvngt	r0, r0
   12578:	andeq	r0, r0, r0
   1257c:	mvnmi	r0, r0
   12580:	andeq	r0, r0, r0
   12584:	bicmi	ip, sp, r5, ror #26
   12588:	blcc	fe6c4d8c <optarg@@GLIBC_2.4+0xfe69da54>
   1258c:	blcc	fe6c4d94 <optarg@@GLIBC_2.4+0xfe69da5c>
   12590:	push	{r0, r1, r2, r4, r5, lr}
   12594:	mov	r5, r0
   12598:	bl	1127c <__errno_location@plt>
   1259c:	ldr	r3, [r0]
   125a0:	mov	r4, r0
   125a4:	str	r3, [sp]
   125a8:	str	r3, [sp, #4]
   125ac:	mov	r3, #0
   125b0:	str	r3, [r0]
   125b4:	mov	r0, r5
   125b8:	bl	110c0 <free@plt>
   125bc:	ldr	r3, [r4]
   125c0:	add	r2, sp, #8
   125c4:	cmp	r3, #0
   125c8:	moveq	r3, #4
   125cc:	movne	r3, #0
   125d0:	add	r3, r2, r3
   125d4:	ldr	r3, [r3, #-8]
   125d8:	str	r3, [r4]
   125dc:	add	sp, sp, #12
   125e0:	pop	{r4, r5, pc}
   125e4:	push	{r4, r5, r6, lr}
   125e8:	subs	r5, r0, #0
   125ec:	bne	12604 <__snprintf_chk@plt+0x125c>
   125f0:	ldr	r3, [pc, #124]	; 12674 <__snprintf_chk@plt+0x12cc>
   125f4:	ldr	r0, [pc, #124]	; 12678 <__snprintf_chk@plt+0x12d0>
   125f8:	ldr	r1, [r3]
   125fc:	bl	11384 <fputs@plt>
   12600:	bl	1139c <abort@plt>
   12604:	mov	r1, #47	; 0x2f
   12608:	bl	1133c <strrchr@plt>
   1260c:	cmp	r0, #0
   12610:	addne	r4, r0, #1
   12614:	moveq	r4, r5
   12618:	sub	r3, r4, r5
   1261c:	cmp	r3, #6
   12620:	ble	12660 <__snprintf_chk@plt+0x12b8>
   12624:	mov	r2, #7
   12628:	ldr	r1, [pc, #76]	; 1267c <__snprintf_chk@plt+0x12d4>
   1262c:	sub	r0, r4, #7
   12630:	bl	11390 <strncmp@plt>
   12634:	cmp	r0, #0
   12638:	bne	12660 <__snprintf_chk@plt+0x12b8>
   1263c:	mov	r2, #3
   12640:	ldr	r1, [pc, #56]	; 12680 <__snprintf_chk@plt+0x12d8>
   12644:	mov	r0, r4
   12648:	bl	11390 <strncmp@plt>
   1264c:	cmp	r0, #0
   12650:	movne	r5, r4
   12654:	ldreq	r3, [pc, #40]	; 12684 <__snprintf_chk@plt+0x12dc>
   12658:	addeq	r5, r4, #3
   1265c:	streq	r5, [r3]
   12660:	ldr	r3, [pc, #32]	; 12688 <__snprintf_chk@plt+0x12e0>
   12664:	str	r5, [r3]
   12668:	ldr	r3, [pc, #28]	; 1268c <__snprintf_chk@plt+0x12e4>
   1266c:	str	r5, [r3]
   12670:	pop	{r4, r5, r6, pc}
   12674:	andeq	r7, r2, r0, lsr r3
   12678:	andeq	r5, r1, fp, lsl lr
   1267c:	andeq	r5, r1, r3, asr lr
   12680:	andeq	r5, r1, fp, asr lr
   12684:	andeq	r7, r2, r0, lsr #6
   12688:	andeq	r7, r2, r4, ror #6
   1268c:	andeq	r7, r2, r4, lsr #6
   12690:	push	{r4, r5, r6, lr}
   12694:	mov	r2, #48	; 0x30
   12698:	mov	r5, r1
   1269c:	mov	r1, #0
   126a0:	mov	r4, r0
   126a4:	bl	112a0 <memset@plt>
   126a8:	cmp	r5, #10
   126ac:	bne	126b4 <__snprintf_chk@plt+0x130c>
   126b0:	bl	1139c <abort@plt>
   126b4:	str	r5, [r4]
   126b8:	mov	r0, r4
   126bc:	pop	{r4, r5, r6, pc}
   126c0:	push	{r4, r5, r6, lr}
   126c4:	mov	r4, r0
   126c8:	mov	r5, r1
   126cc:	bl	14c38 <__snprintf_chk@plt+0x3890>
   126d0:	ldrb	r3, [r0]
   126d4:	bic	r3, r3, #32
   126d8:	cmp	r3, #85	; 0x55
   126dc:	bne	1274c <__snprintf_chk@plt+0x13a4>
   126e0:	ldrb	r3, [r0, #1]
   126e4:	bic	r3, r3, #32
   126e8:	cmp	r3, #84	; 0x54
   126ec:	bne	12724 <__snprintf_chk@plt+0x137c>
   126f0:	ldrb	r3, [r0, #2]
   126f4:	bic	r3, r3, #32
   126f8:	cmp	r3, #70	; 0x46
   126fc:	bne	12724 <__snprintf_chk@plt+0x137c>
   12700:	ldrb	r3, [r0, #3]
   12704:	cmp	r3, #45	; 0x2d
   12708:	bne	12724 <__snprintf_chk@plt+0x137c>
   1270c:	ldrb	r3, [r0, #4]
   12710:	cmp	r3, #56	; 0x38
   12714:	bne	12724 <__snprintf_chk@plt+0x137c>
   12718:	ldrb	r3, [r0, #5]
   1271c:	cmp	r3, #0
   12720:	beq	12738 <__snprintf_chk@plt+0x1390>
   12724:	ldr	r1, [pc, #144]	; 127bc <__snprintf_chk@plt+0x1414>
   12728:	ldr	r0, [pc, #144]	; 127c0 <__snprintf_chk@plt+0x1418>
   1272c:	cmp	r5, #9
   12730:	movne	r0, r1
   12734:	pop	{r4, r5, r6, pc}
   12738:	ldrb	r3, [r4]
   1273c:	ldr	r1, [pc, #128]	; 127c4 <__snprintf_chk@plt+0x141c>
   12740:	ldr	r0, [pc, #128]	; 127c8 <__snprintf_chk@plt+0x1420>
   12744:	cmp	r3, #96	; 0x60
   12748:	b	12730 <__snprintf_chk@plt+0x1388>
   1274c:	cmp	r3, #71	; 0x47
   12750:	bne	12724 <__snprintf_chk@plt+0x137c>
   12754:	ldrb	r3, [r0, #1]
   12758:	bic	r3, r3, #32
   1275c:	cmp	r3, #66	; 0x42
   12760:	bne	12724 <__snprintf_chk@plt+0x137c>
   12764:	ldrb	r3, [r0, #2]
   12768:	cmp	r3, #49	; 0x31
   1276c:	bne	12724 <__snprintf_chk@plt+0x137c>
   12770:	ldrb	r3, [r0, #3]
   12774:	cmp	r3, #56	; 0x38
   12778:	bne	12724 <__snprintf_chk@plt+0x137c>
   1277c:	ldrb	r3, [r0, #4]
   12780:	cmp	r3, #48	; 0x30
   12784:	bne	12724 <__snprintf_chk@plt+0x137c>
   12788:	ldrb	r3, [r0, #5]
   1278c:	cmp	r3, #51	; 0x33
   12790:	bne	12724 <__snprintf_chk@plt+0x137c>
   12794:	ldrb	r3, [r0, #6]
   12798:	cmp	r3, #48	; 0x30
   1279c:	bne	12724 <__snprintf_chk@plt+0x137c>
   127a0:	ldrb	r3, [r0, #7]
   127a4:	cmp	r3, #0
   127a8:	bne	12724 <__snprintf_chk@plt+0x137c>
   127ac:	ldrb	r3, [r4]
   127b0:	ldr	r1, [pc, #20]	; 127cc <__snprintf_chk@plt+0x1424>
   127b4:	ldr	r0, [pc, #20]	; 127d0 <__snprintf_chk@plt+0x1428>
   127b8:	b	12744 <__snprintf_chk@plt+0x139c>
   127bc:	andeq	r5, r1, r5, asr #29
   127c0:	andeq	r5, r1, r3, asr #29
   127c4:			; <UNDEFINED> instruction: 0x00015eb8
   127c8:			; <UNDEFINED> instruction: 0x00015eb4
   127cc:	andeq	r5, r1, r0, asr #29
   127d0:			; <UNDEFINED> instruction: 0x00015ebc
   127d4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   127d8:	sub	sp, sp, #108	; 0x6c
   127dc:	mov	r8, r0
   127e0:	str	r3, [sp, #36]	; 0x24
   127e4:	mov	r5, r1
   127e8:	str	r2, [sp, #44]	; 0x2c
   127ec:	ldr	sl, [sp, #144]	; 0x90
   127f0:	bl	11198 <__ctype_get_mb_cur_max@plt>
   127f4:	ldr	r3, [sp, #148]	; 0x94
   127f8:	mov	r7, #0
   127fc:	str	r7, [sp, #48]	; 0x30
   12800:	lsr	r6, r3, #1
   12804:	and	r6, r6, #1
   12808:	mov	r3, #1
   1280c:	str	r3, [sp, #72]	; 0x48
   12810:	str	r7, [sp, #24]
   12814:	str	r7, [sp, #32]
   12818:	str	r7, [sp, #40]	; 0x28
   1281c:	str	r7, [sp, #60]	; 0x3c
   12820:	str	r0, [sp, #76]	; 0x4c
   12824:	cmp	sl, #10
   12828:	ldrls	pc, [pc, sl, lsl #2]
   1282c:	b	12a68 <__snprintf_chk@plt+0x16c0>
   12830:	andeq	r2, r1, ip, asr r8
   12834:	strdeq	r3, [r1], -r0
   12838:	andeq	r2, r1, r4, lsr sl
   1283c:	andeq	r2, r1, r0, lsl #21
   12840:	andeq	r2, r1, r0, lsl sl
   12844:	andeq	r2, r1, r8, ror #16
   12848:	ldrdeq	r3, [r1], -r0
   1284c:	andeq	r2, r1, ip, ror #20
   12850:	andeq	r2, r1, r0, ror #18
   12854:	andeq	r2, r1, r0, ror #18
   12858:	andeq	r2, r1, r0, ror #18
   1285c:	mov	r6, #0
   12860:	mov	r4, #0
   12864:	b	12894 <__snprintf_chk@plt+0x14ec>
   12868:	cmp	r6, #0
   1286c:	bne	12a90 <__snprintf_chk@plt+0x16e8>
   12870:	cmp	r5, #0
   12874:	movne	r3, #34	; 0x22
   12878:	strbne	r3, [r8]
   1287c:	mov	r3, #1
   12880:	str	r3, [sp, #24]
   12884:	str	r3, [sp, #32]
   12888:	mov	r4, #1
   1288c:	ldr	r3, [pc, #3172]	; 134f8 <__snprintf_chk@plt+0x2150>
   12890:	str	r3, [sp, #40]	; 0x28
   12894:	mov	r9, r5
   12898:	mov	r3, #0
   1289c:	str	r7, [sp, #68]	; 0x44
   128a0:	str	r3, [sp, #28]
   128a4:	ldr	r3, [sp, #36]	; 0x24
   128a8:	cmn	r3, #1
   128ac:	bne	1343c <__snprintf_chk@plt+0x2094>
   128b0:	ldr	r3, [sp, #44]	; 0x2c
   128b4:	ldr	r2, [sp, #28]
   128b8:	ldrb	r3, [r3, r2]
   128bc:	adds	r3, r3, #0
   128c0:	movne	r3, #1
   128c4:	str	r3, [sp, #52]	; 0x34
   128c8:	ldr	r3, [sp, #52]	; 0x34
   128cc:	cmp	r3, #0
   128d0:	bne	12ab8 <__snprintf_chk@plt+0x1710>
   128d4:	sub	r2, sl, #2
   128d8:	clz	r2, r2
   128dc:	lsr	r2, r2, #5
   128e0:	and	r3, r6, r2
   128e4:	cmp	r4, #0
   128e8:	movne	r3, #0
   128ec:	andeq	r3, r3, #1
   128f0:	cmp	r3, #0
   128f4:	bne	12c80 <__snprintf_chk@plt+0x18d8>
   128f8:	eor	r3, r6, #1
   128fc:	ands	r2, r2, r3
   12900:	beq	13474 <__snprintf_chk@plt+0x20cc>
   12904:	ldr	r3, [sp, #68]	; 0x44
   12908:	cmp	r3, #0
   1290c:	beq	134ac <__snprintf_chk@plt+0x2104>
   12910:	ldr	r3, [sp, #72]	; 0x48
   12914:	cmp	r3, #0
   12918:	beq	13450 <__snprintf_chk@plt+0x20a8>
   1291c:	ldr	r3, [sp, #160]	; 0xa0
   12920:	ldr	r2, [sp, #44]	; 0x2c
   12924:	str	r3, [sp, #16]
   12928:	ldr	r3, [sp, #156]	; 0x9c
   1292c:	ldr	r1, [sp, #60]	; 0x3c
   12930:	str	r3, [sp, #12]
   12934:	ldr	r3, [sp, #152]	; 0x98
   12938:	str	r3, [sp, #8]
   1293c:	ldr	r3, [sp, #148]	; 0x94
   12940:	str	r3, [sp, #4]
   12944:	mov	r3, #5
   12948:	str	r3, [sp]
   1294c:	ldr	r3, [sp, #36]	; 0x24
   12950:	mov	r0, r8
   12954:	bl	127d4 <__snprintf_chk@plt+0x142c>
   12958:	mov	r4, r0
   1295c:	b	134a0 <__snprintf_chk@plt+0x20f8>
   12960:	cmp	sl, #10
   12964:	beq	129c0 <__snprintf_chk@plt+0x1618>
   12968:	ldr	r4, [pc, #2956]	; 134fc <__snprintf_chk@plt+0x2154>
   1296c:	mov	r2, #5
   12970:	mov	r1, r4
   12974:	mov	r0, #0
   12978:	bl	11120 <dcgettext@plt>
   1297c:	cmp	r0, r4
   12980:	str	r0, [sp, #156]	; 0x9c
   12984:	bne	12994 <__snprintf_chk@plt+0x15ec>
   12988:	mov	r1, sl
   1298c:	bl	126c0 <__snprintf_chk@plt+0x1318>
   12990:	str	r0, [sp, #156]	; 0x9c
   12994:	ldr	r4, [pc, #2916]	; 13500 <__snprintf_chk@plt+0x2158>
   12998:	mov	r2, #5
   1299c:	mov	r1, r4
   129a0:	mov	r0, #0
   129a4:	bl	11120 <dcgettext@plt>
   129a8:	cmp	r0, r4
   129ac:	str	r0, [sp, #160]	; 0xa0
   129b0:	bne	129c0 <__snprintf_chk@plt+0x1618>
   129b4:	mov	r1, sl
   129b8:	bl	126c0 <__snprintf_chk@plt+0x1318>
   129bc:	str	r0, [sp, #160]	; 0xa0
   129c0:	cmp	r6, #0
   129c4:	moveq	r4, r6
   129c8:	beq	129e0 <__snprintf_chk@plt+0x1638>
   129cc:	mov	r4, #0
   129d0:	b	129f0 <__snprintf_chk@plt+0x1648>
   129d4:	cmp	r5, r4
   129d8:	strbhi	r3, [r8, r4]
   129dc:	add	r4, r4, #1
   129e0:	ldr	r3, [sp, #156]	; 0x9c
   129e4:	ldrb	r3, [r3, r4]
   129e8:	cmp	r3, #0
   129ec:	bne	129d4 <__snprintf_chk@plt+0x162c>
   129f0:	ldr	r0, [sp, #160]	; 0xa0
   129f4:	bl	11258 <strlen@plt>
   129f8:	ldr	r3, [sp, #160]	; 0xa0
   129fc:	str	r3, [sp, #40]	; 0x28
   12a00:	mov	r3, #1
   12a04:	str	r3, [sp, #24]
   12a08:	str	r0, [sp, #32]
   12a0c:	b	12894 <__snprintf_chk@plt+0x14ec>
   12a10:	mov	r3, #1
   12a14:	cmp	r6, #0
   12a18:	streq	r3, [sp, #24]
   12a1c:	beq	12a3c <__snprintf_chk@plt+0x1694>
   12a20:	str	r3, [sp, #32]
   12a24:	ldr	r3, [pc, #2772]	; 13500 <__snprintf_chk@plt+0x2158>
   12a28:	mov	r4, #0
   12a2c:	str	r3, [sp, #40]	; 0x28
   12a30:	b	12a60 <__snprintf_chk@plt+0x16b8>
   12a34:	cmp	r6, #0
   12a38:	bne	12aa8 <__snprintf_chk@plt+0x1700>
   12a3c:	cmp	r5, #0
   12a40:	movne	r3, #39	; 0x27
   12a44:	strbne	r3, [r8]
   12a48:	mov	r3, #1
   12a4c:	str	r3, [sp, #32]
   12a50:	mov	r6, #0
   12a54:	ldr	r3, [pc, #2724]	; 13500 <__snprintf_chk@plt+0x2158>
   12a58:	mov	r4, #1
   12a5c:	str	r3, [sp, #40]	; 0x28
   12a60:	mov	sl, #2
   12a64:	b	12894 <__snprintf_chk@plt+0x14ec>
   12a68:	bl	1139c <abort@plt>
   12a6c:	mov	r6, #0
   12a70:	mov	r3, #1
   12a74:	str	r3, [sp, #24]
   12a78:	mov	r4, r6
   12a7c:	b	12894 <__snprintf_chk@plt+0x14ec>
   12a80:	mov	r6, #1
   12a84:	str	r6, [sp, #24]
   12a88:	str	r6, [sp, #32]
   12a8c:	b	12a24 <__snprintf_chk@plt+0x167c>
   12a90:	mov	r3, #1
   12a94:	str	r3, [sp, #32]
   12a98:	ldr	r3, [pc, #2648]	; 134f8 <__snprintf_chk@plt+0x2150>
   12a9c:	str	r6, [sp, #24]
   12aa0:	str	r3, [sp, #40]	; 0x28
   12aa4:	b	12860 <__snprintf_chk@plt+0x14b8>
   12aa8:	mov	r3, #1
   12aac:	str	r3, [sp, #32]
   12ab0:	ldr	r3, [pc, #2632]	; 13500 <__snprintf_chk@plt+0x2158>
   12ab4:	b	12aa0 <__snprintf_chk@plt+0x16f8>
   12ab8:	ldr	r3, [sp, #32]
   12abc:	ldr	fp, [sp, #24]
   12ac0:	cmp	sl, #2
   12ac4:	moveq	fp, #0
   12ac8:	andne	fp, fp, #1
   12acc:	adds	r5, r3, #0
   12ad0:	movne	r5, #1
   12ad4:	ands	r3, r5, fp
   12ad8:	str	r3, [sp, #64]	; 0x40
   12adc:	beq	12bac <__snprintf_chk@plt+0x1804>
   12ae0:	ldr	r2, [sp, #32]
   12ae4:	ldr	r3, [sp, #28]
   12ae8:	add	r7, r3, r2
   12aec:	mov	r3, r2
   12af0:	ldr	r2, [sp, #36]	; 0x24
   12af4:	cmp	r3, #1
   12af8:	movls	r3, #0
   12afc:	movhi	r3, #1
   12b00:	cmn	r2, #1
   12b04:	movne	r3, #0
   12b08:	cmp	r3, #0
   12b0c:	beq	12b1c <__snprintf_chk@plt+0x1774>
   12b10:	ldr	r0, [sp, #44]	; 0x2c
   12b14:	bl	11258 <strlen@plt>
   12b18:	str	r0, [sp, #36]	; 0x24
   12b1c:	ldr	r3, [sp, #36]	; 0x24
   12b20:	cmp	r3, r7
   12b24:	bcc	12ba4 <__snprintf_chk@plt+0x17fc>
   12b28:	ldr	r3, [sp, #44]	; 0x2c
   12b2c:	ldr	r0, [sp, #28]
   12b30:	ldr	r2, [sp, #32]
   12b34:	ldr	r1, [sp, #40]	; 0x28
   12b38:	add	r0, r3, r0
   12b3c:	bl	11108 <memcmp@plt>
   12b40:	cmp	r0, #0
   12b44:	bne	12ba4 <__snprintf_chk@plt+0x17fc>
   12b48:	cmp	r6, #0
   12b4c:	beq	12bac <__snprintf_chk@plt+0x1804>
   12b50:	str	r6, [sp, #24]
   12b54:	ldr	r3, [sp, #24]
   12b58:	ldr	r2, [sp, #44]	; 0x2c
   12b5c:	cmp	sl, #2
   12b60:	movne	r3, #0
   12b64:	andeq	r3, r3, #1
   12b68:	cmp	r3, #0
   12b6c:	ldr	r3, [sp, #160]	; 0xa0
   12b70:	movne	sl, #4
   12b74:	str	r3, [sp, #16]
   12b78:	ldr	r3, [sp, #156]	; 0x9c
   12b7c:	str	sl, [sp]
   12b80:	str	r3, [sp, #12]
   12b84:	mov	r3, #0
   12b88:	str	r3, [sp, #8]
   12b8c:	ldr	r3, [sp, #148]	; 0x94
   12b90:	mov	r1, r9
   12b94:	bic	r3, r3, #2
   12b98:	str	r3, [sp, #4]
   12b9c:	ldr	r3, [sp, #36]	; 0x24
   12ba0:	b	12950 <__snprintf_chk@plt+0x15a8>
   12ba4:	mov	r3, #0
   12ba8:	str	r3, [sp, #64]	; 0x40
   12bac:	ldr	r2, [sp, #28]
   12bb0:	ldr	r3, [sp, #44]	; 0x2c
   12bb4:	add	r3, r3, r2
   12bb8:	str	r3, [sp, #80]	; 0x50
   12bbc:	ldr	r3, [sp, #44]	; 0x2c
   12bc0:	ldrb	r7, [r3, r2]
   12bc4:	cmp	r7, #58	; 0x3a
   12bc8:	bhi	12d30 <__snprintf_chk@plt+0x1988>
   12bcc:	cmp	r7, #43	; 0x2b
   12bd0:	bcs	12d84 <__snprintf_chk@plt+0x19dc>
   12bd4:	cmp	r7, #32
   12bd8:	beq	12ddc <__snprintf_chk@plt+0x1a34>
   12bdc:	bhi	12c88 <__snprintf_chk@plt+0x18e0>
   12be0:	cmp	r7, #9
   12be4:	beq	13090 <__snprintf_chk@plt+0x1ce8>
   12be8:	bhi	12c4c <__snprintf_chk@plt+0x18a4>
   12bec:	cmp	r7, #7
   12bf0:	beq	1313c <__snprintf_chk@plt+0x1d94>
   12bf4:	bhi	12df8 <__snprintf_chk@plt+0x1a50>
   12bf8:	cmp	r7, #0
   12bfc:	beq	12e14 <__snprintf_chk@plt+0x1a6c>
   12c00:	ldr	r3, [sp, #76]	; 0x4c
   12c04:	cmp	r3, #1
   12c08:	bne	13180 <__snprintf_chk@plt+0x1dd8>
   12c0c:	bl	11240 <__ctype_b_loc@plt>
   12c10:	sxth	r3, r7
   12c14:	lsl	r3, r3, #1
   12c18:	ldr	r2, [r0]
   12c1c:	ldrh	r5, [r2, r3]
   12c20:	ldr	r3, [sp, #76]	; 0x4c
   12c24:	str	r3, [sp, #56]	; 0x38
   12c28:	lsr	r5, r5, #14
   12c2c:	and	r5, r5, #1
   12c30:	ldr	r3, [sp, #24]
   12c34:	eor	fp, r5, #1
   12c38:	and	fp, fp, r3
   12c3c:	ands	fp, fp, #255	; 0xff
   12c40:	beq	12fc8 <__snprintf_chk@plt+0x1c20>
   12c44:	mov	r5, #0
   12c48:	b	1322c <__snprintf_chk@plt+0x1e84>
   12c4c:	cmp	r7, #11
   12c50:	beq	13098 <__snprintf_chk@plt+0x1cf0>
   12c54:	bcc	13134 <__snprintf_chk@plt+0x1d8c>
   12c58:	cmp	r7, #12
   12c5c:	beq	13144 <__snprintf_chk@plt+0x1d9c>
   12c60:	cmp	r7, #13
   12c64:	moveq	r3, #114	; 0x72
   12c68:	bne	12c00 <__snprintf_chk@plt+0x1858>
   12c6c:	cmp	sl, #2
   12c70:	movne	r2, #0
   12c74:	andeq	r2, r6, #1
   12c78:	cmp	r2, #0
   12c7c:	beq	12dfc <__snprintf_chk@plt+0x1a54>
   12c80:	mov	sl, #2
   12c84:	b	12b54 <__snprintf_chk@plt+0x17ac>
   12c88:	cmp	r7, #37	; 0x25
   12c8c:	beq	12d84 <__snprintf_chk@plt+0x19dc>
   12c90:	bhi	12ca4 <__snprintf_chk@plt+0x18fc>
   12c94:	cmp	r7, #35	; 0x23
   12c98:	beq	12dd0 <__snprintf_chk@plt+0x1a28>
   12c9c:	mov	r5, #0
   12ca0:	b	12de0 <__snprintf_chk@plt+0x1a38>
   12ca4:	cmp	r7, #39	; 0x27
   12ca8:	bne	12c9c <__snprintf_chk@plt+0x18f4>
   12cac:	cmp	sl, #2
   12cb0:	ldrne	r5, [sp, #52]	; 0x34
   12cb4:	movne	r3, r5
   12cb8:	strne	r3, [sp, #68]	; 0x44
   12cbc:	bne	12d88 <__snprintf_chk@plt+0x19e0>
   12cc0:	cmp	r6, #0
   12cc4:	bne	12b54 <__snprintf_chk@plt+0x17ac>
   12cc8:	ldr	r2, [sp, #60]	; 0x3c
   12ccc:	adds	r3, r9, #0
   12cd0:	movne	r3, #1
   12cd4:	cmp	r2, #0
   12cd8:	movne	r3, #0
   12cdc:	cmp	r3, #0
   12ce0:	strne	r9, [sp, #60]	; 0x3c
   12ce4:	movne	r9, #0
   12ce8:	bne	12cf8 <__snprintf_chk@plt+0x1950>
   12cec:	cmp	r9, r4
   12cf0:	movhi	r3, #39	; 0x27
   12cf4:	strbhi	r3, [r8, r4]
   12cf8:	add	r3, r4, #1
   12cfc:	cmp	r3, r9
   12d00:	movcc	r2, #92	; 0x5c
   12d04:	strbcc	r2, [r8, r3]
   12d08:	add	r3, r4, #2
   12d0c:	cmp	r3, r9
   12d10:	ldr	r5, [sp, #52]	; 0x34
   12d14:	movcc	r2, #39	; 0x27
   12d18:	strbcc	r2, [r8, r3]
   12d1c:	add	r4, r4, #3
   12d20:	mov	fp, r6
   12d24:	str	r5, [sp, #68]	; 0x44
   12d28:	str	r6, [sp, #48]	; 0x30
   12d2c:	b	12fc8 <__snprintf_chk@plt+0x1c20>
   12d30:	cmp	r7, #94	; 0x5e
   12d34:	beq	12c9c <__snprintf_chk@plt+0x18f4>
   12d38:	bhi	12d90 <__snprintf_chk@plt+0x19e8>
   12d3c:	cmp	r7, #90	; 0x5a
   12d40:	bhi	12d78 <__snprintf_chk@plt+0x19d0>
   12d44:	cmp	r7, #65	; 0x41
   12d48:	bcs	12d84 <__snprintf_chk@plt+0x19dc>
   12d4c:	cmp	r7, #62	; 0x3e
   12d50:	bls	12c9c <__snprintf_chk@plt+0x18f4>
   12d54:	cmp	r7, #63	; 0x3f
   12d58:	bne	12c00 <__snprintf_chk@plt+0x1858>
   12d5c:	cmp	sl, #2
   12d60:	beq	12f04 <__snprintf_chk@plt+0x1b5c>
   12d64:	cmp	sl, #5
   12d68:	beq	12f14 <__snprintf_chk@plt+0x1b6c>
   12d6c:	mov	fp, #0
   12d70:	mov	r5, fp
   12d74:	b	12fc8 <__snprintf_chk@plt+0x1c20>
   12d78:	cmp	r7, #92	; 0x5c
   12d7c:	beq	130a0 <__snprintf_chk@plt+0x1cf8>
   12d80:	bls	12c9c <__snprintf_chk@plt+0x18f4>
   12d84:	ldr	r5, [sp, #52]	; 0x34
   12d88:	mov	fp, #0
   12d8c:	b	12fc8 <__snprintf_chk@plt+0x1c20>
   12d90:	cmp	r7, #122	; 0x7a
   12d94:	bhi	12db4 <__snprintf_chk@plt+0x1a0c>
   12d98:	cmp	r7, #97	; 0x61
   12d9c:	bcs	12d84 <__snprintf_chk@plt+0x19dc>
   12da0:	cmp	r7, #95	; 0x5f
   12da4:	beq	12d84 <__snprintf_chk@plt+0x19dc>
   12da8:	cmp	r7, #96	; 0x60
   12dac:	bne	12c00 <__snprintf_chk@plt+0x1858>
   12db0:	b	12c9c <__snprintf_chk@plt+0x18f4>
   12db4:	cmp	r7, #124	; 0x7c
   12db8:	beq	12c9c <__snprintf_chk@plt+0x18f4>
   12dbc:	bcc	1314c <__snprintf_chk@plt+0x1da4>
   12dc0:	cmp	r7, #125	; 0x7d
   12dc4:	beq	1314c <__snprintf_chk@plt+0x1da4>
   12dc8:	cmp	r7, #126	; 0x7e
   12dcc:	bne	12c00 <__snprintf_chk@plt+0x1858>
   12dd0:	ldr	r3, [sp, #28]
   12dd4:	cmp	r3, #0
   12dd8:	bne	12f0c <__snprintf_chk@plt+0x1b64>
   12ddc:	ldr	r5, [sp, #52]	; 0x34
   12de0:	cmp	sl, #2
   12de4:	movne	fp, #0
   12de8:	andeq	fp, r6, #1
   12dec:	cmp	fp, #0
   12df0:	beq	12fc8 <__snprintf_chk@plt+0x1c20>
   12df4:	b	12c80 <__snprintf_chk@plt+0x18d8>
   12df8:	mov	r3, #98	; 0x62
   12dfc:	ldr	r2, [sp, #24]
   12e00:	cmp	r2, #0
   12e04:	beq	12f0c <__snprintf_chk@plt+0x1b64>
   12e08:	mov	r7, r3
   12e0c:	mov	r5, #0
   12e10:	b	13020 <__snprintf_chk@plt+0x1c78>
   12e14:	ldr	r3, [sp, #24]
   12e18:	cmp	r3, #0
   12e1c:	beq	12ee8 <__snprintf_chk@plt+0x1b40>
   12e20:	cmp	r6, #0
   12e24:	bne	12b50 <__snprintf_chk@plt+0x17a8>
   12e28:	ldr	r3, [sp, #48]	; 0x30
   12e2c:	eor	r2, r3, #1
   12e30:	cmp	sl, #2
   12e34:	movne	r2, #0
   12e38:	andeq	r2, r2, #1
   12e3c:	cmp	r2, #0
   12e40:	moveq	r3, r4
   12e44:	beq	12e7c <__snprintf_chk@plt+0x1ad4>
   12e48:	cmp	r9, r4
   12e4c:	movhi	r3, #39	; 0x27
   12e50:	strbhi	r3, [r8, r4]
   12e54:	add	r3, r4, #1
   12e58:	cmp	r9, r3
   12e5c:	movhi	r1, #36	; 0x24
   12e60:	strbhi	r1, [r8, r3]
   12e64:	add	r3, r4, #2
   12e68:	cmp	r9, r3
   12e6c:	movhi	r1, #39	; 0x27
   12e70:	strbhi	r1, [r8, r3]
   12e74:	add	r3, r4, #3
   12e78:	str	r2, [sp, #48]	; 0x30
   12e7c:	cmp	r9, r3
   12e80:	movhi	r2, #92	; 0x5c
   12e84:	strbhi	r2, [r8, r3]
   12e88:	cmp	fp, #0
   12e8c:	add	r4, r3, #1
   12e90:	beq	13420 <__snprintf_chk@plt+0x2078>
   12e94:	ldr	r2, [sp, #28]
   12e98:	ldr	r1, [sp, #36]	; 0x24
   12e9c:	add	r2, r2, #1
   12ea0:	cmp	r1, r2
   12ea4:	bls	12ee0 <__snprintf_chk@plt+0x1b38>
   12ea8:	ldr	r1, [sp, #44]	; 0x2c
   12eac:	mov	r7, #48	; 0x30
   12eb0:	ldrb	r2, [r1, r2]
   12eb4:	sub	r2, r2, #48	; 0x30
   12eb8:	cmp	r2, #9
   12ebc:	movhi	r5, r6
   12ec0:	bhi	12fc8 <__snprintf_chk@plt+0x1c20>
   12ec4:	cmp	r9, r4
   12ec8:	add	r2, r3, #2
   12ecc:	strbhi	r7, [r8, r4]
   12ed0:	cmp	r9, r2
   12ed4:	add	r4, r3, #3
   12ed8:	movhi	r1, #48	; 0x30
   12edc:	strbhi	r1, [r8, r2]
   12ee0:	mov	r5, r6
   12ee4:	b	13428 <__snprintf_chk@plt+0x2080>
   12ee8:	ldr	r3, [sp, #148]	; 0x94
   12eec:	tst	r3, #1
   12ef0:	ldreq	r5, [sp, #24]
   12ef4:	beq	13434 <__snprintf_chk@plt+0x208c>
   12ef8:	ldr	r3, [sp, #28]
   12efc:	add	r3, r3, #1
   12f00:	b	128a0 <__snprintf_chk@plt+0x14f8>
   12f04:	cmp	r6, #0
   12f08:	bne	12b54 <__snprintf_chk@plt+0x17ac>
   12f0c:	mov	r5, #0
   12f10:	b	12d88 <__snprintf_chk@plt+0x19e0>
   12f14:	ldr	r3, [sp, #148]	; 0x94
   12f18:	tst	r3, #4
   12f1c:	beq	12f0c <__snprintf_chk@plt+0x1b64>
   12f20:	ldr	r3, [sp, #28]
   12f24:	add	r2, r3, #2
   12f28:	ldr	r3, [sp, #36]	; 0x24
   12f2c:	cmp	r3, r2
   12f30:	bls	12f0c <__snprintf_chk@plt+0x1b64>
   12f34:	ldr	r3, [sp, #44]	; 0x2c
   12f38:	ldr	r1, [sp, #28]
   12f3c:	add	r3, r3, r1
   12f40:	ldrb	r0, [r3, #1]
   12f44:	cmp	r0, #63	; 0x3f
   12f48:	bne	12f0c <__snprintf_chk@plt+0x1b64>
   12f4c:	ldr	r3, [sp, #44]	; 0x2c
   12f50:	ldrb	r1, [r3, r2]
   12f54:	sub	r3, r1, #33	; 0x21
   12f58:	uxtb	r3, r3
   12f5c:	cmp	r3, #29
   12f60:	bhi	13430 <__snprintf_chk@plt+0x2088>
   12f64:	mov	ip, #1
   12f68:	ldr	r5, [pc, #1428]	; 13504 <__snprintf_chk@plt+0x215c>
   12f6c:	ands	r5, r5, ip, lsl r3
   12f70:	beq	12d88 <__snprintf_chk@plt+0x19e0>
   12f74:	cmp	r6, #0
   12f78:	bne	12b54 <__snprintf_chk@plt+0x17ac>
   12f7c:	add	r3, r4, #1
   12f80:	cmp	r9, r4
   12f84:	strbhi	r0, [r8, r4]
   12f88:	cmp	r9, r3
   12f8c:	movhi	r0, #34	; 0x22
   12f90:	strbhi	r0, [r8, r3]
   12f94:	add	r3, r4, #2
   12f98:	cmp	r9, r3
   12f9c:	movhi	r0, #34	; 0x22
   12fa0:	strbhi	r0, [r8, r3]
   12fa4:	add	r3, r4, #3
   12fa8:	cmp	r9, r3
   12fac:	add	r4, r4, #4
   12fb0:	mov	r5, r6
   12fb4:	mov	fp, r6
   12fb8:	mov	r7, r1
   12fbc:	movhi	r0, #63	; 0x3f
   12fc0:	strbhi	r0, [r8, r3]
   12fc4:	str	r2, [sp, #28]
   12fc8:	ldr	r3, [sp, #24]
   12fcc:	eor	r3, r3, #1
   12fd0:	cmp	sl, #2
   12fd4:	orreq	r3, r3, #1
   12fd8:	eor	r3, r3, #1
   12fdc:	orr	r3, r6, r3
   12fe0:	tst	r3, #255	; 0xff
   12fe4:	beq	13014 <__snprintf_chk@plt+0x1c6c>
   12fe8:	ldr	r3, [sp, #152]	; 0x98
   12fec:	cmp	r3, #0
   12ff0:	beq	13014 <__snprintf_chk@plt+0x1c6c>
   12ff4:	lsr	r2, r7, #5
   12ff8:	ldr	r1, [sp, #152]	; 0x98
   12ffc:	uxtb	r2, r2
   13000:	and	r3, r7, #31
   13004:	ldr	r2, [r1, r2, lsl #2]
   13008:	lsr	r3, r2, r3
   1300c:	tst	r3, #1
   13010:	bne	13020 <__snprintf_chk@plt+0x1c78>
   13014:	ldr	r3, [sp, #64]	; 0x40
   13018:	cmp	r3, #0
   1301c:	beq	130b8 <__snprintf_chk@plt+0x1d10>
   13020:	cmp	r6, #0
   13024:	bne	12b54 <__snprintf_chk@plt+0x17ac>
   13028:	ldr	r3, [sp, #48]	; 0x30
   1302c:	eor	r3, r3, #1
   13030:	cmp	sl, #2
   13034:	movne	r3, #0
   13038:	andeq	r3, r3, #1
   1303c:	cmp	r3, #0
   13040:	beq	13078 <__snprintf_chk@plt+0x1cd0>
   13044:	cmp	r9, r4
   13048:	movhi	r2, #39	; 0x27
   1304c:	strbhi	r2, [r8, r4]
   13050:	add	r2, r4, #1
   13054:	cmp	r9, r2
   13058:	movhi	r1, #36	; 0x24
   1305c:	strbhi	r1, [r8, r2]
   13060:	add	r2, r4, #2
   13064:	cmp	r9, r2
   13068:	add	r4, r4, #3
   1306c:	movhi	r1, #39	; 0x27
   13070:	strbhi	r1, [r8, r2]
   13074:	str	r3, [sp, #48]	; 0x30
   13078:	cmp	r9, r4
   1307c:	movhi	r3, #92	; 0x5c
   13080:	strbhi	r3, [r8, r4]
   13084:	ldr	fp, [sp, #52]	; 0x34
   13088:	add	r4, r4, #1
   1308c:	b	130b8 <__snprintf_chk@plt+0x1d10>
   13090:	mov	r3, #116	; 0x74
   13094:	b	12c6c <__snprintf_chk@plt+0x18c4>
   13098:	mov	r3, #118	; 0x76
   1309c:	b	12dfc <__snprintf_chk@plt+0x1a54>
   130a0:	cmp	sl, #2
   130a4:	bne	13114 <__snprintf_chk@plt+0x1d6c>
   130a8:	cmp	r6, #0
   130ac:	bne	12b54 <__snprintf_chk@plt+0x17ac>
   130b0:	mov	r5, r6
   130b4:	mov	fp, r6
   130b8:	ldr	r3, [sp, #48]	; 0x30
   130bc:	eor	fp, fp, #1
   130c0:	and	fp, fp, r3
   130c4:	tst	fp, #255	; 0xff
   130c8:	beq	130f4 <__snprintf_chk@plt+0x1d4c>
   130cc:	cmp	r9, r4
   130d0:	movhi	r3, #39	; 0x27
   130d4:	strbhi	r3, [r8, r4]
   130d8:	add	r3, r4, #1
   130dc:	cmp	r9, r3
   130e0:	movhi	r2, #39	; 0x27
   130e4:	add	r4, r4, #2
   130e8:	strbhi	r2, [r8, r3]
   130ec:	mov	r3, #0
   130f0:	str	r3, [sp, #48]	; 0x30
   130f4:	cmp	r9, r4
   130f8:	strbhi	r7, [r8, r4]
   130fc:	ldr	r3, [sp, #72]	; 0x48
   13100:	cmp	r5, #0
   13104:	moveq	r3, #0
   13108:	add	r4, r4, #1
   1310c:	str	r3, [sp, #72]	; 0x48
   13110:	b	12ef8 <__snprintf_chk@plt+0x1b50>
   13114:	ldr	r3, [sp, #24]
   13118:	and	r3, r3, r6
   1311c:	tst	r5, r3
   13120:	moveq	r3, r7
   13124:	beq	12c6c <__snprintf_chk@plt+0x18c4>
   13128:	mov	fp, #0
   1312c:	mov	r5, fp
   13130:	b	130b8 <__snprintf_chk@plt+0x1d10>
   13134:	mov	r3, #110	; 0x6e
   13138:	b	12c6c <__snprintf_chk@plt+0x18c4>
   1313c:	mov	r3, #97	; 0x61
   13140:	b	12dfc <__snprintf_chk@plt+0x1a54>
   13144:	mov	r3, #102	; 0x66
   13148:	b	12dfc <__snprintf_chk@plt+0x1a54>
   1314c:	ldr	r3, [sp, #36]	; 0x24
   13150:	cmn	r3, #1
   13154:	bne	13174 <__snprintf_chk@plt+0x1dcc>
   13158:	ldr	r3, [sp, #44]	; 0x2c
   1315c:	ldrb	r3, [r3, #1]
   13160:	adds	r3, r3, #0
   13164:	movne	r3, #1
   13168:	cmp	r3, #0
   1316c:	bne	12f0c <__snprintf_chk@plt+0x1b64>
   13170:	b	12dd0 <__snprintf_chk@plt+0x1a28>
   13174:	ldr	r3, [sp, #36]	; 0x24
   13178:	subs	r3, r3, #1
   1317c:	b	13164 <__snprintf_chk@plt+0x1dbc>
   13180:	mov	r3, #0
   13184:	str	r3, [sp, #96]	; 0x60
   13188:	str	r3, [sp, #100]	; 0x64
   1318c:	ldr	r3, [sp, #36]	; 0x24
   13190:	cmn	r3, #1
   13194:	bne	131a4 <__snprintf_chk@plt+0x1dfc>
   13198:	ldr	r0, [sp, #44]	; 0x2c
   1319c:	bl	11258 <strlen@plt>
   131a0:	str	r0, [sp, #36]	; 0x24
   131a4:	ldr	r5, [sp, #52]	; 0x34
   131a8:	mov	r3, #0
   131ac:	str	r3, [sp, #56]	; 0x38
   131b0:	ldr	r3, [sp, #28]
   131b4:	ldr	r2, [sp, #56]	; 0x38
   131b8:	ldr	r1, [sp, #36]	; 0x24
   131bc:	add	r2, r3, r2
   131c0:	ldr	r3, [sp, #44]	; 0x2c
   131c4:	add	r0, sp, #92	; 0x5c
   131c8:	add	fp, r3, r2
   131cc:	sub	r2, r1, r2
   131d0:	add	r3, sp, #96	; 0x60
   131d4:	mov	r1, fp
   131d8:	bl	14c6c <__snprintf_chk@plt+0x38c4>
   131dc:	subs	r2, r0, #0
   131e0:	beq	13220 <__snprintf_chk@plt+0x1e78>
   131e4:	cmn	r2, #1
   131e8:	beq	133f8 <__snprintf_chk@plt+0x2050>
   131ec:	cmn	r2, #2
   131f0:	bne	13368 <__snprintf_chk@plt+0x1fc0>
   131f4:	ldr	r2, [sp, #56]	; 0x38
   131f8:	ldr	r3, [sp, #28]
   131fc:	add	r3, r3, r2
   13200:	ldr	r2, [sp, #36]	; 0x24
   13204:	cmp	r2, r3
   13208:	bls	133f8 <__snprintf_chk@plt+0x2050>
   1320c:	ldr	r3, [sp, #80]	; 0x50
   13210:	ldr	r2, [sp, #56]	; 0x38
   13214:	ldrb	r5, [r3, r2]
   13218:	cmp	r5, #0
   1321c:	bne	13358 <__snprintf_chk@plt+0x1fb0>
   13220:	ldr	r3, [sp, #56]	; 0x38
   13224:	cmp	r3, #1
   13228:	bls	12c30 <__snprintf_chk@plt+0x1888>
   1322c:	ldr	r2, [sp, #56]	; 0x38
   13230:	ldr	r3, [sp, #28]
   13234:	mov	fp, #0
   13238:	add	r3, r3, r2
   1323c:	ldr	r2, [sp, #24]
   13240:	str	r3, [sp, #52]	; 0x34
   13244:	eor	r3, r5, #1
   13248:	and	r3, r3, r2
   1324c:	mov	ip, #92	; 0x5c
   13250:	uxtb	r3, r3
   13254:	mov	r2, #39	; 0x27
   13258:	cmp	r3, #0
   1325c:	beq	13400 <__snprintf_chk@plt+0x2058>
   13260:	cmp	r6, #0
   13264:	bne	12b50 <__snprintf_chk@plt+0x17a8>
   13268:	ldr	r1, [sp, #48]	; 0x30
   1326c:	eor	r1, r1, #1
   13270:	cmp	sl, #2
   13274:	movne	r1, #0
   13278:	andeq	r1, r1, #1
   1327c:	cmp	r1, #0
   13280:	beq	132b0 <__snprintf_chk@plt+0x1f08>
   13284:	add	r0, r4, #1
   13288:	cmp	r9, r4
   1328c:	strbhi	r2, [r8, r4]
   13290:	cmp	r9, r0
   13294:	movhi	lr, #36	; 0x24
   13298:	strbhi	lr, [r8, r0]
   1329c:	add	r0, r4, #2
   132a0:	add	r4, r4, #3
   132a4:	cmp	r9, r0
   132a8:	strbhi	r2, [r8, r0]
   132ac:	str	r1, [sp, #48]	; 0x30
   132b0:	add	r0, r4, #1
   132b4:	cmp	r9, r4
   132b8:	strbhi	ip, [r8, r4]
   132bc:	cmp	r9, r0
   132c0:	lsrhi	r1, r7, #6
   132c4:	addhi	r1, r1, #48	; 0x30
   132c8:	strbhi	r1, [r8, r0]
   132cc:	add	r0, r4, #2
   132d0:	cmp	r9, r0
   132d4:	lsrhi	r1, r7, #3
   132d8:	and	r7, r7, #7
   132dc:	andhi	r1, r1, #7
   132e0:	add	r4, r4, #3
   132e4:	add	r7, r7, #48	; 0x30
   132e8:	mov	fp, r3
   132ec:	addhi	r1, r1, #48	; 0x30
   132f0:	strbhi	r1, [r8, r0]
   132f4:	ldr	r1, [sp, #28]
   132f8:	ldr	r0, [sp, #52]	; 0x34
   132fc:	add	r1, r1, #1
   13300:	cmp	r0, r1
   13304:	bls	130b8 <__snprintf_chk@plt+0x1d10>
   13308:	ldr	lr, [sp, #48]	; 0x30
   1330c:	eor	r0, fp, #1
   13310:	and	r0, r0, lr
   13314:	tst	r0, #255	; 0xff
   13318:	beq	1333c <__snprintf_chk@plt+0x1f94>
   1331c:	add	r0, r4, #1
   13320:	cmp	r9, r4
   13324:	strbhi	r2, [r8, r4]
   13328:	cmp	r9, r0
   1332c:	add	r4, r4, #2
   13330:	strbhi	r2, [r8, r0]
   13334:	mov	r0, #0
   13338:	str	r0, [sp, #48]	; 0x30
   1333c:	ldr	r0, [sp, #44]	; 0x2c
   13340:	cmp	r9, r4
   13344:	strbhi	r7, [r8, r4]
   13348:	str	r1, [sp, #28]
   1334c:	add	r4, r4, #1
   13350:	ldrb	r7, [r0, r1]
   13354:	b	13258 <__snprintf_chk@plt+0x1eb0>
   13358:	ldr	r3, [sp, #56]	; 0x38
   1335c:	add	r3, r3, #1
   13360:	str	r3, [sp, #56]	; 0x38
   13364:	b	131f4 <__snprintf_chk@plt+0x1e4c>
   13368:	cmp	sl, #2
   1336c:	movne	r3, #0
   13370:	andeq	r3, r6, #1
   13374:	cmp	r3, #0
   13378:	movne	r1, #1
   1337c:	bne	133d8 <__snprintf_chk@plt+0x2030>
   13380:	ldr	r0, [sp, #92]	; 0x5c
   13384:	str	r2, [sp, #84]	; 0x54
   13388:	bl	1115c <iswprint@plt>
   1338c:	ldr	r3, [sp, #56]	; 0x38
   13390:	ldr	r2, [sp, #84]	; 0x54
   13394:	add	r3, r3, r2
   13398:	str	r3, [sp, #56]	; 0x38
   1339c:	cmp	r0, #0
   133a0:	add	r0, sp, #96	; 0x60
   133a4:	moveq	r5, #0
   133a8:	bl	110f0 <mbsinit@plt>
   133ac:	cmp	r0, #0
   133b0:	beq	131b0 <__snprintf_chk@plt+0x1e08>
   133b4:	b	13220 <__snprintf_chk@plt+0x1e78>
   133b8:	ldrb	r3, [fp, r1]
   133bc:	cmp	r3, #94	; 0x5e
   133c0:	beq	12c80 <__snprintf_chk@plt+0x18d8>
   133c4:	bhi	133e4 <__snprintf_chk@plt+0x203c>
   133c8:	sub	r3, r3, #91	; 0x5b
   133cc:	cmp	r3, #1
   133d0:	bls	12c80 <__snprintf_chk@plt+0x18d8>
   133d4:	add	r1, r1, #1
   133d8:	cmp	r1, r2
   133dc:	bne	133b8 <__snprintf_chk@plt+0x2010>
   133e0:	b	13380 <__snprintf_chk@plt+0x1fd8>
   133e4:	cmp	r3, #96	; 0x60
   133e8:	beq	12c80 <__snprintf_chk@plt+0x18d8>
   133ec:	cmp	r3, #124	; 0x7c
   133f0:	bne	133d4 <__snprintf_chk@plt+0x202c>
   133f4:	b	12c80 <__snprintf_chk@plt+0x18d8>
   133f8:	mov	r5, #0
   133fc:	b	13220 <__snprintf_chk@plt+0x1e78>
   13400:	ldr	r1, [sp, #64]	; 0x40
   13404:	cmp	r1, #0
   13408:	beq	132f4 <__snprintf_chk@plt+0x1f4c>
   1340c:	cmp	r9, r4
   13410:	strbhi	ip, [r8, r4]
   13414:	str	r3, [sp, #64]	; 0x40
   13418:	add	r4, r4, #1
   1341c:	b	132f4 <__snprintf_chk@plt+0x1f4c>
   13420:	mov	r5, fp
   13424:	ldr	fp, [sp, #24]
   13428:	mov	r7, #48	; 0x30
   1342c:	b	12fc8 <__snprintf_chk@plt+0x1c20>
   13430:	mov	r5, #0
   13434:	mov	fp, r5
   13438:	b	12fc8 <__snprintf_chk@plt+0x1c20>
   1343c:	ldr	r3, [sp, #36]	; 0x24
   13440:	ldr	r2, [sp, #28]
   13444:	subs	r3, r3, r2
   13448:	movne	r3, #1
   1344c:	b	128c4 <__snprintf_chk@plt+0x151c>
   13450:	ldr	r3, [sp, #60]	; 0x3c
   13454:	clz	r7, r9
   13458:	cmp	r3, #0
   1345c:	lsr	r7, r7, #5
   13460:	moveq	r7, #0
   13464:	cmp	r7, #0
   13468:	mov	r5, r3
   1346c:	bne	12824 <__snprintf_chk@plt+0x147c>
   13470:	ldr	r3, [sp, #68]	; 0x44
   13474:	ldr	r2, [sp, #40]	; 0x28
   13478:	cmp	r2, #0
   1347c:	moveq	r3, #0
   13480:	andne	r3, r3, #1
   13484:	cmp	r3, #0
   13488:	movne	r3, r2
   1348c:	subne	r2, r3, #1
   13490:	bne	134c0 <__snprintf_chk@plt+0x2118>
   13494:	cmp	r9, r4
   13498:	movhi	r3, #0
   1349c:	strbhi	r3, [r8, r4]
   134a0:	mov	r0, r4
   134a4:	add	sp, sp, #108	; 0x6c
   134a8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   134ac:	mov	r3, r2
   134b0:	b	13474 <__snprintf_chk@plt+0x20cc>
   134b4:	cmp	r9, r4
   134b8:	strbhi	r3, [r8, r4]
   134bc:	add	r4, r4, #1
   134c0:	ldrb	r3, [r2, #1]!
   134c4:	cmp	r3, #0
   134c8:	bne	134b4 <__snprintf_chk@plt+0x210c>
   134cc:	b	13494 <__snprintf_chk@plt+0x20ec>
   134d0:	ldr	r3, [pc, #32]	; 134f8 <__snprintf_chk@plt+0x2150>
   134d4:	mov	r6, #1
   134d8:	str	r6, [sp, #24]
   134dc:	str	r6, [sp, #32]
   134e0:	str	r3, [sp, #40]	; 0x28
   134e4:	mov	r4, #0
   134e8:	mov	sl, #5
   134ec:	b	12894 <__snprintf_chk@plt+0x14ec>
   134f0:	mov	r6, #1
   134f4:	b	12a88 <__snprintf_chk@plt+0x16e0>
   134f8:	andeq	r5, r1, r3, asr #29
   134fc:	andeq	r5, r1, r7, asr #29
   13500:	andeq	r5, r1, r5, asr #29
   13504:	stmdacc	r0, {r0, r6, r7, r8, ip, lr}
   13508:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1350c:	sub	sp, sp, #52	; 0x34
   13510:	mov	r6, r0
   13514:	mov	r5, r3
   13518:	mov	r8, r1
   1351c:	mov	r9, r2
   13520:	bl	1127c <__errno_location@plt>
   13524:	ldr	r7, [pc, #380]	; 136a8 <__snprintf_chk@plt+0x2300>
   13528:	cmn	r6, #-2147483647	; 0x80000001
   1352c:	ldr	r4, [r7]
   13530:	ldr	r3, [r0]
   13534:	str	r0, [sp, #24]
   13538:	str	r3, [sp, #32]
   1353c:	movne	r3, #0
   13540:	moveq	r3, #1
   13544:	orrs	r3, r3, r6, lsr #31
   13548:	beq	13550 <__snprintf_chk@plt+0x21a8>
   1354c:	bl	1139c <abort@plt>
   13550:	ldr	r2, [r7, #4]
   13554:	cmp	r6, r2
   13558:	blt	135c8 <__snprintf_chk@plt+0x2220>
   1355c:	add	r1, sp, #48	; 0x30
   13560:	add	sl, r7, #8
   13564:	str	r2, [r1, #-4]!
   13568:	cmp	r4, sl
   1356c:	mov	r3, #8
   13570:	sub	r2, r6, r2
   13574:	movne	r0, r4
   13578:	str	r3, [sp]
   1357c:	add	r2, r2, #1
   13580:	mvn	r3, #-2147483648	; 0x80000000
   13584:	moveq	r0, #0
   13588:	bl	144e4 <__snprintf_chk@plt+0x313c>
   1358c:	cmp	r4, sl
   13590:	ldr	r2, [sp, #44]	; 0x2c
   13594:	mov	fp, r0
   13598:	str	r0, [r7]
   1359c:	ldmeq	r4, {r0, r1}
   135a0:	mov	r4, fp
   135a4:	stmeq	fp, {r0, r1}
   135a8:	ldr	r0, [r7, #4]
   135ac:	mov	r1, #0
   135b0:	sub	r2, r2, r0
   135b4:	add	r0, fp, r0, lsl #3
   135b8:	lsl	r2, r2, #3
   135bc:	bl	112a0 <memset@plt>
   135c0:	ldr	r3, [sp, #44]	; 0x2c
   135c4:	str	r3, [r7, #4]
   135c8:	ldr	r3, [r5, #4]
   135cc:	add	sl, r4, r6, lsl #3
   135d0:	orr	r3, r3, #1
   135d4:	str	r3, [sp, #28]
   135d8:	add	r3, r5, #8
   135dc:	str	r3, [sp, #36]	; 0x24
   135e0:	ldr	r3, [r5, #44]	; 0x2c
   135e4:	ldr	fp, [r4, r6, lsl #3]
   135e8:	ldr	r7, [sl, #4]
   135ec:	str	r3, [sp, #16]
   135f0:	ldr	r3, [r5, #40]	; 0x28
   135f4:	mov	r2, r8
   135f8:	str	r3, [sp, #12]
   135fc:	add	r3, r5, #8
   13600:	str	r3, [sp, #8]
   13604:	ldr	r3, [sp, #28]
   13608:	mov	r1, fp
   1360c:	str	r3, [sp, #4]
   13610:	ldr	r3, [r5]
   13614:	mov	r0, r7
   13618:	str	r3, [sp]
   1361c:	mov	r3, r9
   13620:	bl	127d4 <__snprintf_chk@plt+0x142c>
   13624:	cmp	fp, r0
   13628:	bhi	13690 <__snprintf_chk@plt+0x22e8>
   1362c:	ldr	r3, [pc, #120]	; 136ac <__snprintf_chk@plt+0x2304>
   13630:	add	fp, r0, #1
   13634:	cmp	r7, r3
   13638:	str	fp, [r4, r6, lsl #3]
   1363c:	beq	13648 <__snprintf_chk@plt+0x22a0>
   13640:	mov	r0, r7
   13644:	bl	12590 <__snprintf_chk@plt+0x11e8>
   13648:	mov	r0, fp
   1364c:	bl	1439c <__snprintf_chk@plt+0x2ff4>
   13650:	ldr	r3, [r5, #44]	; 0x2c
   13654:	mov	r2, r8
   13658:	mov	r1, fp
   1365c:	str	r0, [sl, #4]
   13660:	str	r3, [sp, #16]
   13664:	ldr	r3, [r5, #40]	; 0x28
   13668:	mov	r7, r0
   1366c:	str	r3, [sp, #12]
   13670:	add	r3, r5, #8
   13674:	str	r3, [sp, #8]
   13678:	ldr	r3, [sp, #28]
   1367c:	str	r3, [sp, #4]
   13680:	ldr	r3, [r5]
   13684:	str	r3, [sp]
   13688:	mov	r3, r9
   1368c:	bl	127d4 <__snprintf_chk@plt+0x142c>
   13690:	ldr	r3, [sp, #24]
   13694:	ldr	r2, [sp, #32]
   13698:	mov	r0, r7
   1369c:	str	r2, [r3]
   136a0:	add	sp, sp, #52	; 0x34
   136a4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   136a8:	andeq	r7, r2, ip, lsr r1
   136ac:	andeq	r7, r2, r8, ror #6
   136b0:	push	{r4, r5, r6, lr}
   136b4:	mov	r5, r0
   136b8:	bl	1127c <__errno_location@plt>
   136bc:	cmp	r5, #0
   136c0:	mov	r1, #48	; 0x30
   136c4:	ldr	r6, [r0]
   136c8:	mov	r4, r0
   136cc:	ldr	r0, [pc, #12]	; 136e0 <__snprintf_chk@plt+0x2338>
   136d0:	movne	r0, r5
   136d4:	bl	14778 <__snprintf_chk@plt+0x33d0>
   136d8:	str	r6, [r4]
   136dc:	pop	{r4, r5, r6, pc}
   136e0:	andeq	r7, r2, r8, ror #8
   136e4:	ldr	r3, [pc, #12]	; 136f8 <__snprintf_chk@plt+0x2350>
   136e8:	cmp	r0, #0
   136ec:	moveq	r0, r3
   136f0:	ldr	r0, [r0]
   136f4:	bx	lr
   136f8:	andeq	r7, r2, r8, ror #8
   136fc:	ldr	r3, [pc, #12]	; 13710 <__snprintf_chk@plt+0x2368>
   13700:	cmp	r0, #0
   13704:	moveq	r0, r3
   13708:	str	r1, [r0]
   1370c:	bx	lr
   13710:	andeq	r7, r2, r8, ror #8
   13714:	ldr	r3, [pc, #52]	; 13750 <__snprintf_chk@plt+0x23a8>
   13718:	cmp	r0, #0
   1371c:	moveq	r0, r3
   13720:	add	r3, r0, #8
   13724:	push	{lr}		; (str lr, [sp, #-4]!)
   13728:	lsr	lr, r1, #5
   1372c:	and	r1, r1, #31
   13730:	ldr	ip, [r3, lr, lsl #2]
   13734:	lsr	r0, ip, r1
   13738:	eor	r2, r2, r0
   1373c:	and	r2, r2, #1
   13740:	and	r0, r0, #1
   13744:	eor	r1, ip, r2, lsl r1
   13748:	str	r1, [r3, lr, lsl #2]
   1374c:	pop	{pc}		; (ldr pc, [sp], #4)
   13750:	andeq	r7, r2, r8, ror #8
   13754:	ldr	r3, [pc, #16]	; 1376c <__snprintf_chk@plt+0x23c4>
   13758:	cmp	r0, #0
   1375c:	movne	r3, r0
   13760:	ldr	r0, [r3, #4]
   13764:	str	r1, [r3, #4]
   13768:	bx	lr
   1376c:	andeq	r7, r2, r8, ror #8
   13770:	ldr	r3, [pc, #44]	; 137a4 <__snprintf_chk@plt+0x23fc>
   13774:	cmp	r0, #0
   13778:	moveq	r0, r3
   1377c:	mov	r3, #10
   13780:	cmp	r2, #0
   13784:	cmpne	r1, #0
   13788:	str	r3, [r0]
   1378c:	bne	13798 <__snprintf_chk@plt+0x23f0>
   13790:	push	{r4, lr}
   13794:	bl	1139c <abort@plt>
   13798:	str	r1, [r0, #40]	; 0x28
   1379c:	str	r2, [r0, #44]	; 0x2c
   137a0:	bx	lr
   137a4:	andeq	r7, r2, r8, ror #8
   137a8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   137ac:	sub	sp, sp, #24
   137b0:	mov	sl, r3
   137b4:	ldr	r4, [sp, #56]	; 0x38
   137b8:	ldr	r3, [pc, #100]	; 13824 <__snprintf_chk@plt+0x247c>
   137bc:	cmp	r4, #0
   137c0:	moveq	r4, r3
   137c4:	mov	r7, r0
   137c8:	mov	r8, r1
   137cc:	mov	r9, r2
   137d0:	bl	1127c <__errno_location@plt>
   137d4:	ldr	r3, [r4, #44]	; 0x2c
   137d8:	mov	r2, r9
   137dc:	mov	r1, r8
   137e0:	ldr	r6, [r0]
   137e4:	str	r3, [sp, #16]
   137e8:	ldr	r3, [r4, #40]	; 0x28
   137ec:	mov	r5, r0
   137f0:	str	r3, [sp, #12]
   137f4:	add	r3, r4, #8
   137f8:	str	r3, [sp, #8]
   137fc:	ldr	r3, [r4, #4]
   13800:	mov	r0, r7
   13804:	str	r3, [sp, #4]
   13808:	ldr	r3, [r4]
   1380c:	str	r3, [sp]
   13810:	mov	r3, sl
   13814:	bl	127d4 <__snprintf_chk@plt+0x142c>
   13818:	str	r6, [r5]
   1381c:	add	sp, sp, #24
   13820:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13824:	andeq	r7, r2, r8, ror #8
   13828:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1382c:	cmp	r3, #0
   13830:	sub	sp, sp, #44	; 0x2c
   13834:	ldr	r4, [pc, #188]	; 138f8 <__snprintf_chk@plt+0x2550>
   13838:	mov	r6, r2
   1383c:	movne	r4, r3
   13840:	mov	sl, r1
   13844:	mov	r9, r0
   13848:	bl	1127c <__errno_location@plt>
   1384c:	ldr	r5, [r4, #4]
   13850:	add	fp, r4, #8
   13854:	cmp	r6, #0
   13858:	orreq	r5, r5, #1
   1385c:	mov	r1, #0
   13860:	mov	r2, r9
   13864:	ldr	r3, [r0]
   13868:	mov	r8, r0
   1386c:	str	r3, [sp, #28]
   13870:	ldr	r3, [r4, #44]	; 0x2c
   13874:	mov	r0, r1
   13878:	str	r3, [sp, #16]
   1387c:	ldr	r3, [r4, #40]	; 0x28
   13880:	stmib	sp, {r5, fp}
   13884:	str	r3, [sp, #12]
   13888:	ldr	r3, [r4]
   1388c:	str	r3, [sp]
   13890:	mov	r3, sl
   13894:	bl	127d4 <__snprintf_chk@plt+0x142c>
   13898:	add	r1, r0, #1
   1389c:	mov	r7, r0
   138a0:	mov	r0, r1
   138a4:	str	r1, [sp, #36]	; 0x24
   138a8:	bl	1439c <__snprintf_chk@plt+0x2ff4>
   138ac:	ldr	r3, [r4, #44]	; 0x2c
   138b0:	mov	r2, r9
   138b4:	str	r3, [sp, #16]
   138b8:	ldr	r3, [r4, #40]	; 0x28
   138bc:	stmib	sp, {r5, fp}
   138c0:	str	r3, [sp, #12]
   138c4:	ldr	r3, [r4]
   138c8:	ldr	r1, [sp, #36]	; 0x24
   138cc:	str	r3, [sp]
   138d0:	mov	r3, sl
   138d4:	str	r0, [sp, #32]
   138d8:	bl	127d4 <__snprintf_chk@plt+0x142c>
   138dc:	ldr	r3, [sp, #28]
   138e0:	cmp	r6, #0
   138e4:	str	r3, [r8]
   138e8:	ldr	r0, [sp, #32]
   138ec:	strne	r7, [r6]
   138f0:	add	sp, sp, #44	; 0x2c
   138f4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   138f8:	andeq	r7, r2, r8, ror #8
   138fc:	mov	r3, r2
   13900:	mov	r2, #0
   13904:	b	13828 <__snprintf_chk@plt+0x2480>
   13908:	push	{r4, r5, r6, r7, r8, lr}
   1390c:	mov	r6, #1
   13910:	ldr	r4, [pc, #104]	; 13980 <__snprintf_chk@plt+0x25d8>
   13914:	ldr	r5, [r4]
   13918:	add	r7, r5, #12
   1391c:	ldr	r3, [r4, #4]
   13920:	add	r7, r7, #8
   13924:	cmp	r6, r3
   13928:	blt	13970 <__snprintf_chk@plt+0x25c8>
   1392c:	ldr	r0, [r5, #4]
   13930:	ldr	r6, [pc, #76]	; 13984 <__snprintf_chk@plt+0x25dc>
   13934:	cmp	r0, r6
   13938:	beq	1394c <__snprintf_chk@plt+0x25a4>
   1393c:	bl	12590 <__snprintf_chk@plt+0x11e8>
   13940:	mov	r3, #256	; 0x100
   13944:	str	r3, [r4, #8]
   13948:	str	r6, [r4, #12]
   1394c:	ldr	r6, [pc, #52]	; 13988 <__snprintf_chk@plt+0x25e0>
   13950:	cmp	r5, r6
   13954:	beq	13964 <__snprintf_chk@plt+0x25bc>
   13958:	mov	r0, r5
   1395c:	bl	12590 <__snprintf_chk@plt+0x11e8>
   13960:	str	r6, [r4]
   13964:	mov	r3, #1
   13968:	str	r3, [r4, #4]
   1396c:	pop	{r4, r5, r6, r7, r8, pc}
   13970:	ldr	r0, [r7, #-8]
   13974:	bl	12590 <__snprintf_chk@plt+0x11e8>
   13978:	add	r6, r6, #1
   1397c:	b	1391c <__snprintf_chk@plt+0x2574>
   13980:	andeq	r7, r2, ip, lsr r1
   13984:	andeq	r7, r2, r8, ror #6
   13988:	andeq	r7, r2, r4, asr #2
   1398c:	ldr	r3, [pc, #4]	; 13998 <__snprintf_chk@plt+0x25f0>
   13990:	mvn	r2, #0
   13994:	b	13508 <__snprintf_chk@plt+0x2160>
   13998:	andeq	r7, r2, r8, ror #8
   1399c:	ldr	r3, [pc]	; 139a4 <__snprintf_chk@plt+0x25fc>
   139a0:	b	13508 <__snprintf_chk@plt+0x2160>
   139a4:	andeq	r7, r2, r8, ror #8
   139a8:	mov	r1, r0
   139ac:	mov	r0, #0
   139b0:	b	1398c <__snprintf_chk@plt+0x25e4>
   139b4:	mov	r2, r1
   139b8:	mov	r1, r0
   139bc:	mov	r0, #0
   139c0:	b	1399c <__snprintf_chk@plt+0x25f4>
   139c4:	push	{r4, r5, lr}
   139c8:	sub	sp, sp, #52	; 0x34
   139cc:	mov	r5, r2
   139d0:	mov	r4, r0
   139d4:	mov	r0, sp
   139d8:	bl	12690 <__snprintf_chk@plt+0x12e8>
   139dc:	mov	r3, sp
   139e0:	mvn	r2, #0
   139e4:	mov	r1, r5
   139e8:	mov	r0, r4
   139ec:	bl	13508 <__snprintf_chk@plt+0x2160>
   139f0:	add	sp, sp, #52	; 0x34
   139f4:	pop	{r4, r5, pc}
   139f8:	push	{r4, r5, r6, lr}
   139fc:	sub	sp, sp, #48	; 0x30
   13a00:	mov	r5, r2
   13a04:	mov	r6, r3
   13a08:	mov	r4, r0
   13a0c:	mov	r0, sp
   13a10:	bl	12690 <__snprintf_chk@plt+0x12e8>
   13a14:	mov	r3, sp
   13a18:	mov	r2, r6
   13a1c:	mov	r1, r5
   13a20:	mov	r0, r4
   13a24:	bl	13508 <__snprintf_chk@plt+0x2160>
   13a28:	add	sp, sp, #48	; 0x30
   13a2c:	pop	{r4, r5, r6, pc}
   13a30:	mov	r2, r1
   13a34:	mov	r1, r0
   13a38:	mov	r0, #0
   13a3c:	b	139c4 <__snprintf_chk@plt+0x261c>
   13a40:	mov	r3, r2
   13a44:	mov	r2, r1
   13a48:	mov	r1, r0
   13a4c:	mov	r0, #0
   13a50:	b	139f8 <__snprintf_chk@plt+0x2650>
   13a54:	push	{r4, r5, r6, lr}
   13a58:	mov	r4, r0
   13a5c:	ldr	lr, [pc, #80]	; 13ab4 <__snprintf_chk@plt+0x270c>
   13a60:	mov	r5, r1
   13a64:	mov	r6, r2
   13a68:	ldm	lr!, {r0, r1, r2, r3}
   13a6c:	sub	sp, sp, #48	; 0x30
   13a70:	mov	ip, sp
   13a74:	stmia	ip!, {r0, r1, r2, r3}
   13a78:	ldm	lr!, {r0, r1, r2, r3}
   13a7c:	stmia	ip!, {r0, r1, r2, r3}
   13a80:	ldm	lr, {r0, r1, r2, r3}
   13a84:	stm	ip, {r0, r1, r2, r3}
   13a88:	mov	r1, r6
   13a8c:	mov	r2, #1
   13a90:	mov	r0, sp
   13a94:	bl	13714 <__snprintf_chk@plt+0x236c>
   13a98:	mov	r3, sp
   13a9c:	mov	r2, r5
   13aa0:	mov	r1, r4
   13aa4:	mov	r0, #0
   13aa8:	bl	13508 <__snprintf_chk@plt+0x2160>
   13aac:	add	sp, sp, #48	; 0x30
   13ab0:	pop	{r4, r5, r6, pc}
   13ab4:	andeq	r7, r2, r8, ror #8
   13ab8:	mov	r2, r1
   13abc:	mvn	r1, #0
   13ac0:	b	13a54 <__snprintf_chk@plt+0x26ac>
   13ac4:	mov	r1, #58	; 0x3a
   13ac8:	b	13ab8 <__snprintf_chk@plt+0x2710>
   13acc:	mov	r2, #58	; 0x3a
   13ad0:	b	13a54 <__snprintf_chk@plt+0x26ac>
   13ad4:	push	{r4, r5, lr}
   13ad8:	sub	sp, sp, #100	; 0x64
   13adc:	mov	r4, r0
   13ae0:	mov	r0, sp
   13ae4:	mov	r5, r2
   13ae8:	bl	12690 <__snprintf_chk@plt+0x12e8>
   13aec:	mov	ip, sp
   13af0:	add	lr, sp, #48	; 0x30
   13af4:	ldm	ip!, {r0, r1, r2, r3}
   13af8:	stmia	lr!, {r0, r1, r2, r3}
   13afc:	ldm	ip!, {r0, r1, r2, r3}
   13b00:	stmia	lr!, {r0, r1, r2, r3}
   13b04:	ldm	ip, {r0, r1, r2, r3}
   13b08:	stm	lr, {r0, r1, r2, r3}
   13b0c:	mov	r2, #1
   13b10:	mov	r1, #58	; 0x3a
   13b14:	add	r0, sp, #48	; 0x30
   13b18:	bl	13714 <__snprintf_chk@plt+0x236c>
   13b1c:	add	r3, sp, #48	; 0x30
   13b20:	mvn	r2, #0
   13b24:	mov	r1, r5
   13b28:	mov	r0, r4
   13b2c:	bl	13508 <__snprintf_chk@plt+0x2160>
   13b30:	add	sp, sp, #100	; 0x64
   13b34:	pop	{r4, r5, pc}
   13b38:	push	{r4, r5, r6, r7, lr}
   13b3c:	mov	r4, r0
   13b40:	ldr	lr, [pc, #84]	; 13b9c <__snprintf_chk@plt+0x27f4>
   13b44:	mov	r6, r1
   13b48:	mov	r7, r2
   13b4c:	mov	r5, r3
   13b50:	ldm	lr!, {r0, r1, r2, r3}
   13b54:	sub	sp, sp, #52	; 0x34
   13b58:	mov	ip, sp
   13b5c:	stmia	ip!, {r0, r1, r2, r3}
   13b60:	ldm	lr!, {r0, r1, r2, r3}
   13b64:	stmia	ip!, {r0, r1, r2, r3}
   13b68:	ldm	lr, {r0, r1, r2, r3}
   13b6c:	stm	ip, {r0, r1, r2, r3}
   13b70:	mov	r2, r7
   13b74:	mov	r1, r6
   13b78:	mov	r0, sp
   13b7c:	bl	13770 <__snprintf_chk@plt+0x23c8>
   13b80:	mov	r3, sp
   13b84:	ldr	r2, [sp, #72]	; 0x48
   13b88:	mov	r1, r5
   13b8c:	mov	r0, r4
   13b90:	bl	13508 <__snprintf_chk@plt+0x2160>
   13b94:	add	sp, sp, #52	; 0x34
   13b98:	pop	{r4, r5, r6, r7, pc}
   13b9c:	andeq	r7, r2, r8, ror #8
   13ba0:	mvn	ip, #0
   13ba4:	push	{r0, r1, r2, lr}
   13ba8:	str	ip, [sp]
   13bac:	bl	13b38 <__snprintf_chk@plt+0x2790>
   13bb0:	add	sp, sp, #12
   13bb4:	pop	{pc}		; (ldr pc, [sp], #4)
   13bb8:	mov	r3, r2
   13bbc:	mov	r2, r1
   13bc0:	mov	r1, r0
   13bc4:	mov	r0, #0
   13bc8:	b	13ba0 <__snprintf_chk@plt+0x27f8>
   13bcc:	push	{r0, r1, r2, lr}
   13bd0:	str	r3, [sp]
   13bd4:	mov	r3, r2
   13bd8:	mov	r2, r1
   13bdc:	mov	r1, r0
   13be0:	mov	r0, #0
   13be4:	bl	13b38 <__snprintf_chk@plt+0x2790>
   13be8:	add	sp, sp, #12
   13bec:	pop	{pc}		; (ldr pc, [sp], #4)
   13bf0:	ldr	r3, [pc]	; 13bf8 <__snprintf_chk@plt+0x2850>
   13bf4:	b	13508 <__snprintf_chk@plt+0x2160>
   13bf8:	andeq	r7, r2, ip, asr #2
   13bfc:	mov	r2, r1
   13c00:	mov	r1, r0
   13c04:	mov	r0, #0
   13c08:	b	13bf0 <__snprintf_chk@plt+0x2848>
   13c0c:	mvn	r2, #0
   13c10:	b	13bf0 <__snprintf_chk@plt+0x2848>
   13c14:	mov	r1, r0
   13c18:	mov	r0, #0
   13c1c:	b	13c0c <__snprintf_chk@plt+0x2864>
   13c20:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
   13c24:	mov	r7, r1
   13c28:	ldrb	r3, [r0]
   13c2c:	sub	r3, r3, #48	; 0x30
   13c30:	cmp	r3, #9
   13c34:	bhi	13c68 <__snprintf_chk@plt+0x28c0>
   13c38:	mov	r2, #10
   13c3c:	add	r1, sp, #4
   13c40:	bl	1109c <strtol@plt>
   13c44:	ldr	r3, [sp, #4]
   13c48:	ldrb	r3, [r3]
   13c4c:	cmp	r0, #64	; 0x40
   13c50:	cmple	r3, #0
   13c54:	mvnne	r0, #0
   13c58:	str	r0, [r7]
   13c5c:	asr	r0, r0, #31
   13c60:	add	sp, sp, #12
   13c64:	pop	{r4, r5, r6, r7, r8, r9, pc}
   13c68:	ldr	r5, [pc, #264]	; 13d78 <__snprintf_chk@plt+0x29d0>
   13c6c:	mov	r6, r0
   13c70:	mov	r4, #0
   13c74:	mov	r9, #12
   13c78:	mul	r8, r9, r4
   13c7c:	mov	r1, r6
   13c80:	add	r0, r8, #4
   13c84:	add	r0, r5, r0
   13c88:	bl	11090 <strcmp@plt>
   13c8c:	cmp	r0, #0
   13c90:	ldreq	r0, [r5, r8]
   13c94:	beq	13c58 <__snprintf_chk@plt+0x28b0>
   13c98:	add	r4, r4, #1
   13c9c:	cmp	r4, #35	; 0x23
   13ca0:	bne	13c78 <__snprintf_chk@plt+0x28d0>
   13ca4:	bl	11378 <__libc_current_sigrtmin@plt>
   13ca8:	mov	r5, r0
   13cac:	bl	11264 <__libc_current_sigrtmax@plt>
   13cb0:	cmp	r5, #0
   13cb4:	mov	r4, r0
   13cb8:	ble	13d10 <__snprintf_chk@plt+0x2968>
   13cbc:	mov	r2, #5
   13cc0:	ldr	r1, [pc, #180]	; 13d7c <__snprintf_chk@plt+0x29d4>
   13cc4:	mov	r0, r6
   13cc8:	bl	11390 <strncmp@plt>
   13ccc:	cmp	r0, #0
   13cd0:	bne	13d10 <__snprintf_chk@plt+0x2968>
   13cd4:	mov	r2, #10
   13cd8:	add	r1, sp, #4
   13cdc:	add	r0, r6, #5
   13ce0:	bl	1109c <strtol@plt>
   13ce4:	ldr	r3, [sp, #4]
   13ce8:	ldrb	r3, [r3]
   13cec:	cmp	r0, #0
   13cf0:	cmpge	r3, #0
   13cf4:	bne	13d08 <__snprintf_chk@plt+0x2960>
   13cf8:	sub	r4, r4, r5
   13cfc:	cmp	r0, r4
   13d00:	addle	r0, r5, r0
   13d04:	ble	13c58 <__snprintf_chk@plt+0x28b0>
   13d08:	mvn	r0, #0
   13d0c:	b	13c58 <__snprintf_chk@plt+0x28b0>
   13d10:	cmp	r4, #0
   13d14:	ble	13d08 <__snprintf_chk@plt+0x2960>
   13d18:	mov	r2, #5
   13d1c:	ldr	r1, [pc, #92]	; 13d80 <__snprintf_chk@plt+0x29d8>
   13d20:	mov	r0, r6
   13d24:	bl	11390 <strncmp@plt>
   13d28:	cmp	r0, #0
   13d2c:	bne	13d08 <__snprintf_chk@plt+0x2960>
   13d30:	mov	r2, #10
   13d34:	add	r1, sp, #4
   13d38:	add	r0, r6, #5
   13d3c:	bl	1109c <strtol@plt>
   13d40:	ldr	r3, [sp, #4]
   13d44:	ldrb	r3, [r3]
   13d48:	cmp	r3, #0
   13d4c:	bne	13d08 <__snprintf_chk@plt+0x2960>
   13d50:	sub	r5, r5, r4
   13d54:	cmp	r0, r5
   13d58:	movlt	r5, #0
   13d5c:	movge	r5, #1
   13d60:	cmp	r0, #0
   13d64:	movgt	r5, #0
   13d68:	cmp	r5, #0
   13d6c:	addne	r0, r4, r0
   13d70:	bne	13c58 <__snprintf_chk@plt+0x28b0>
   13d74:	b	13d08 <__snprintf_chk@plt+0x2960>
   13d78:	andeq	r7, r2, ip, ror r1
   13d7c:	andeq	r5, r1, r7, lsl pc
   13d80:	andeq	r5, r1, sp, lsl pc
   13d84:	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   13d88:	mov	r6, r1
   13d8c:	ldr	r1, [pc, #196]	; 13e58 <__snprintf_chk@plt+0x2ab0>
   13d90:	mov	r4, r0
   13d94:	mov	r3, #0
   13d98:	mov	r0, #12
   13d9c:	mul	r2, r0, r3
   13da0:	ldr	ip, [r2, r1]
   13da4:	cmp	ip, r4
   13da8:	bne	13dc8 <__snprintf_chk@plt+0x2a20>
   13dac:	add	r2, r2, #4
   13db0:	add	r1, r1, r2
   13db4:	mov	r0, r6
   13db8:	bl	111a4 <strcpy@plt>
   13dbc:	mov	r0, #0
   13dc0:	add	sp, sp, #12
   13dc4:	pop	{r4, r5, r6, r7, pc}
   13dc8:	add	r3, r3, #1
   13dcc:	cmp	r3, #35	; 0x23
   13dd0:	bne	13d9c <__snprintf_chk@plt+0x29f4>
   13dd4:	bl	11378 <__libc_current_sigrtmin@plt>
   13dd8:	mov	r5, r0
   13ddc:	bl	11264 <__libc_current_sigrtmax@plt>
   13de0:	cmp	r4, r0
   13de4:	movle	r3, #0
   13de8:	movgt	r3, #1
   13dec:	cmp	r4, r5
   13df0:	orrlt	r3, r3, #1
   13df4:	cmp	r3, #0
   13df8:	mov	r7, r0
   13dfc:	mvnne	r0, #0
   13e00:	bne	13dc0 <__snprintf_chk@plt+0x2a18>
   13e04:	sub	r3, r7, r5
   13e08:	add	r3, r5, r3, asr #1
   13e0c:	cmp	r4, r3
   13e10:	bgt	13e44 <__snprintf_chk@plt+0x2a9c>
   13e14:	ldr	r1, [pc, #64]	; 13e5c <__snprintf_chk@plt+0x2ab4>
   13e18:	mov	r0, r6
   13e1c:	bl	111a4 <strcpy@plt>
   13e20:	subs	r0, r4, r5
   13e24:	beq	13dc0 <__snprintf_chk@plt+0x2a18>
   13e28:	str	r0, [sp]
   13e2c:	ldr	r3, [pc, #44]	; 13e60 <__snprintf_chk@plt+0x2ab8>
   13e30:	mvn	r2, #0
   13e34:	mov	r1, #1
   13e38:	add	r0, r6, #5
   13e3c:	bl	11288 <__sprintf_chk@plt>
   13e40:	b	13dbc <__snprintf_chk@plt+0x2a14>
   13e44:	ldr	r1, [pc, #24]	; 13e64 <__snprintf_chk@plt+0x2abc>
   13e48:	mov	r0, r6
   13e4c:	bl	111a4 <strcpy@plt>
   13e50:	mov	r5, r7
   13e54:	b	13e20 <__snprintf_chk@plt+0x2a78>
   13e58:	andeq	r7, r2, ip, ror r1
   13e5c:	andeq	r5, r1, r7, lsl pc
   13e60:	andeq	r5, r1, r3, lsr #30
   13e64:	andeq	r5, r1, sp, lsl pc
   13e68:	push	{r4, r5, r6, lr}
   13e6c:	sub	sp, sp, #32
   13e70:	cmp	r1, #0
   13e74:	mov	r5, r0
   13e78:	ldr	r4, [sp, #48]	; 0x30
   13e7c:	ldr	r6, [sp, #52]	; 0x34
   13e80:	beq	13f34 <__snprintf_chk@plt+0x2b8c>
   13e84:	stm	sp, {r2, r3}
   13e88:	mov	r3, r1
   13e8c:	ldr	r2, [pc, #860]	; 141f0 <__snprintf_chk@plt+0x2e48>
   13e90:	mov	r1, #1
   13e94:	bl	112e8 <__fprintf_chk@plt>
   13e98:	mov	r2, #5
   13e9c:	ldr	r1, [pc, #848]	; 141f4 <__snprintf_chk@plt+0x2e4c>
   13ea0:	mov	r0, #0
   13ea4:	bl	11120 <dcgettext@plt>
   13ea8:	ldr	r3, [pc, #840]	; 141f8 <__snprintf_chk@plt+0x2e50>
   13eac:	ldr	r2, [pc, #840]	; 141fc <__snprintf_chk@plt+0x2e54>
   13eb0:	str	r3, [sp]
   13eb4:	mov	r1, #1
   13eb8:	mov	r3, r0
   13ebc:	mov	r0, r5
   13ec0:	bl	112e8 <__fprintf_chk@plt>
   13ec4:	mov	r1, r5
   13ec8:	mov	r0, #10
   13ecc:	bl	11114 <fputc_unlocked@plt>
   13ed0:	mov	r2, #5
   13ed4:	ldr	r1, [pc, #804]	; 14200 <__snprintf_chk@plt+0x2e58>
   13ed8:	mov	r0, #0
   13edc:	bl	11120 <dcgettext@plt>
   13ee0:	mov	r1, #1
   13ee4:	ldr	r3, [pc, #792]	; 14204 <__snprintf_chk@plt+0x2e5c>
   13ee8:	mov	r2, r0
   13eec:	mov	r0, r5
   13ef0:	bl	112e8 <__fprintf_chk@plt>
   13ef4:	mov	r1, r5
   13ef8:	mov	r0, #10
   13efc:	bl	11114 <fputc_unlocked@plt>
   13f00:	cmp	r6, #9
   13f04:	ldrls	pc, [pc, r6, lsl #2]
   13f08:	b	141e4 <__snprintf_chk@plt+0x2e3c>
   13f0c:	andeq	r4, r1, r4, lsr #32
   13f10:	andeq	r3, r1, ip, asr #30
   13f14:	andeq	r3, r1, r8, ror pc
   13f18:	andeq	r3, r1, ip, lsr #31
   13f1c:	andeq	r3, r1, r8, ror #31
   13f20:	andeq	r4, r1, ip, lsr #32
   13f24:	andeq	r4, r1, r4, ror r0
   13f28:	andeq	r4, r1, r4, asr #1
   13f2c:	andeq	r4, r1, ip, lsl r1
   13f30:	andeq	r4, r1, ip, ror r1
   13f34:	str	r3, [sp]
   13f38:	mov	r1, #1
   13f3c:	mov	r3, r2
   13f40:	ldr	r2, [pc, #704]	; 14208 <__snprintf_chk@plt+0x2e60>
   13f44:	bl	112e8 <__fprintf_chk@plt>
   13f48:	b	13e98 <__snprintf_chk@plt+0x2af0>
   13f4c:	mov	r2, #5
   13f50:	ldr	r1, [pc, #692]	; 1420c <__snprintf_chk@plt+0x2e64>
   13f54:	mov	r0, #0
   13f58:	bl	11120 <dcgettext@plt>
   13f5c:	ldr	r3, [r4]
   13f60:	mov	r1, #1
   13f64:	mov	r2, r0
   13f68:	mov	r0, r5
   13f6c:	add	sp, sp, #32
   13f70:	pop	{r4, r5, r6, lr}
   13f74:	b	112e8 <__fprintf_chk@plt>
   13f78:	mov	r2, #5
   13f7c:	ldr	r1, [pc, #652]	; 14210 <__snprintf_chk@plt+0x2e68>
   13f80:	mov	r0, #0
   13f84:	bl	11120 <dcgettext@plt>
   13f88:	ldr	r3, [r4, #4]
   13f8c:	mov	r1, #1
   13f90:	str	r3, [sp, #48]	; 0x30
   13f94:	ldr	r3, [r4]
   13f98:	mov	r2, r0
   13f9c:	mov	r0, r5
   13fa0:	add	sp, sp, #32
   13fa4:	pop	{r4, r5, r6, lr}
   13fa8:	b	112e8 <__fprintf_chk@plt>
   13fac:	mov	r2, #5
   13fb0:	ldr	r1, [pc, #604]	; 14214 <__snprintf_chk@plt+0x2e6c>
   13fb4:	mov	r0, #0
   13fb8:	bl	11120 <dcgettext@plt>
   13fbc:	ldr	r3, [r4, #8]
   13fc0:	mov	r1, #1
   13fc4:	str	r3, [sp, #52]	; 0x34
   13fc8:	ldr	r3, [r4, #4]
   13fcc:	str	r3, [sp, #48]	; 0x30
   13fd0:	ldr	r3, [r4]
   13fd4:	mov	r2, r0
   13fd8:	mov	r0, r5
   13fdc:	add	sp, sp, #32
   13fe0:	pop	{r4, r5, r6, lr}
   13fe4:	b	112e8 <__fprintf_chk@plt>
   13fe8:	mov	r2, #5
   13fec:	ldr	r1, [pc, #548]	; 14218 <__snprintf_chk@plt+0x2e70>
   13ff0:	mov	r0, #0
   13ff4:	bl	11120 <dcgettext@plt>
   13ff8:	ldr	r3, [r4, #12]
   13ffc:	mov	r1, #1
   14000:	str	r3, [sp, #8]
   14004:	ldr	r3, [r4, #8]
   14008:	str	r3, [sp, #4]
   1400c:	ldr	r3, [r4, #4]
   14010:	str	r3, [sp]
   14014:	ldr	r3, [r4]
   14018:	mov	r2, r0
   1401c:	mov	r0, r5
   14020:	bl	112e8 <__fprintf_chk@plt>
   14024:	add	sp, sp, #32
   14028:	pop	{r4, r5, r6, pc}
   1402c:	mov	r2, #5
   14030:	ldr	r1, [pc, #484]	; 1421c <__snprintf_chk@plt+0x2e74>
   14034:	mov	r0, #0
   14038:	bl	11120 <dcgettext@plt>
   1403c:	ldr	r3, [r4, #16]
   14040:	mov	r1, #1
   14044:	str	r3, [sp, #12]
   14048:	ldr	r3, [r4, #12]
   1404c:	str	r3, [sp, #8]
   14050:	ldr	r3, [r4, #8]
   14054:	str	r3, [sp, #4]
   14058:	ldr	r3, [r4, #4]
   1405c:	str	r3, [sp]
   14060:	ldr	r3, [r4]
   14064:	mov	r2, r0
   14068:	mov	r0, r5
   1406c:	bl	112e8 <__fprintf_chk@plt>
   14070:	b	14024 <__snprintf_chk@plt+0x2c7c>
   14074:	mov	r2, #5
   14078:	ldr	r1, [pc, #416]	; 14220 <__snprintf_chk@plt+0x2e78>
   1407c:	mov	r0, #0
   14080:	bl	11120 <dcgettext@plt>
   14084:	ldr	r3, [r4, #20]
   14088:	mov	r1, #1
   1408c:	str	r3, [sp, #16]
   14090:	ldr	r3, [r4, #16]
   14094:	str	r3, [sp, #12]
   14098:	ldr	r3, [r4, #12]
   1409c:	str	r3, [sp, #8]
   140a0:	ldr	r3, [r4, #8]
   140a4:	str	r3, [sp, #4]
   140a8:	ldr	r3, [r4, #4]
   140ac:	str	r3, [sp]
   140b0:	ldr	r3, [r4]
   140b4:	mov	r2, r0
   140b8:	mov	r0, r5
   140bc:	bl	112e8 <__fprintf_chk@plt>
   140c0:	b	14024 <__snprintf_chk@plt+0x2c7c>
   140c4:	mov	r2, #5
   140c8:	ldr	r1, [pc, #340]	; 14224 <__snprintf_chk@plt+0x2e7c>
   140cc:	mov	r0, #0
   140d0:	bl	11120 <dcgettext@plt>
   140d4:	ldr	r3, [r4, #24]
   140d8:	mov	r1, #1
   140dc:	str	r3, [sp, #20]
   140e0:	ldr	r3, [r4, #20]
   140e4:	str	r3, [sp, #16]
   140e8:	ldr	r3, [r4, #16]
   140ec:	str	r3, [sp, #12]
   140f0:	ldr	r3, [r4, #12]
   140f4:	str	r3, [sp, #8]
   140f8:	ldr	r3, [r4, #8]
   140fc:	str	r3, [sp, #4]
   14100:	ldr	r3, [r4, #4]
   14104:	str	r3, [sp]
   14108:	ldr	r3, [r4]
   1410c:	mov	r2, r0
   14110:	mov	r0, r5
   14114:	bl	112e8 <__fprintf_chk@plt>
   14118:	b	14024 <__snprintf_chk@plt+0x2c7c>
   1411c:	mov	r2, #5
   14120:	ldr	r1, [pc, #256]	; 14228 <__snprintf_chk@plt+0x2e80>
   14124:	mov	r0, #0
   14128:	bl	11120 <dcgettext@plt>
   1412c:	ldr	r3, [r4, #28]
   14130:	mov	r1, #1
   14134:	str	r3, [sp, #24]
   14138:	ldr	r3, [r4, #24]
   1413c:	str	r3, [sp, #20]
   14140:	ldr	r3, [r4, #20]
   14144:	str	r3, [sp, #16]
   14148:	ldr	r3, [r4, #16]
   1414c:	str	r3, [sp, #12]
   14150:	ldr	r3, [r4, #12]
   14154:	str	r3, [sp, #8]
   14158:	ldr	r3, [r4, #8]
   1415c:	str	r3, [sp, #4]
   14160:	ldr	r3, [r4, #4]
   14164:	str	r3, [sp]
   14168:	ldr	r3, [r4]
   1416c:	mov	r2, r0
   14170:	mov	r0, r5
   14174:	bl	112e8 <__fprintf_chk@plt>
   14178:	b	14024 <__snprintf_chk@plt+0x2c7c>
   1417c:	ldr	r1, [pc, #168]	; 1422c <__snprintf_chk@plt+0x2e84>
   14180:	mov	r2, #5
   14184:	mov	r0, #0
   14188:	bl	11120 <dcgettext@plt>
   1418c:	ldr	r3, [r4, #32]
   14190:	mov	r1, #1
   14194:	str	r3, [sp, #28]
   14198:	ldr	r3, [r4, #28]
   1419c:	str	r3, [sp, #24]
   141a0:	ldr	r3, [r4, #24]
   141a4:	str	r3, [sp, #20]
   141a8:	ldr	r3, [r4, #20]
   141ac:	str	r3, [sp, #16]
   141b0:	ldr	r3, [r4, #16]
   141b4:	str	r3, [sp, #12]
   141b8:	ldr	r3, [r4, #12]
   141bc:	str	r3, [sp, #8]
   141c0:	ldr	r3, [r4, #8]
   141c4:	str	r3, [sp, #4]
   141c8:	ldr	r3, [r4, #4]
   141cc:	str	r3, [sp]
   141d0:	ldr	r3, [r4]
   141d4:	mov	r2, r0
   141d8:	mov	r0, r5
   141dc:	bl	112e8 <__fprintf_chk@plt>
   141e0:	b	14024 <__snprintf_chk@plt+0x2c7c>
   141e4:	mov	r2, #5
   141e8:	ldr	r1, [pc, #64]	; 14230 <__snprintf_chk@plt+0x2e88>
   141ec:	b	14184 <__snprintf_chk@plt+0x2ddc>
   141f0:	andeq	r5, r1, r7, lsr #30
   141f4:	andeq	r5, r1, sl, lsr pc
   141f8:	andeq	r0, r0, r6, ror #15
   141fc:	andeq	r6, r1, r8, lsl #4
   14200:	andeq	r5, r1, lr, lsr pc
   14204:	andeq	r5, r1, r9, ror #31
   14208:	andeq	r5, r1, r3, lsr pc
   1420c:	andeq	r6, r1, fp
   14210:	andeq	r6, r1, fp, lsl r0
   14214:	andeq	r6, r1, r2, lsr r0
   14218:	andeq	r6, r1, lr, asr #32
   1421c:	andeq	r6, r1, lr, rrx
   14220:	muleq	r1, r2, r0
   14224:	strheq	r6, [r1], -sl
   14228:	andeq	r6, r1, r6, ror #1
   1422c:	andeq	r6, r1, r6, lsl r1
   14230:	andeq	r6, r1, sl, asr #2
   14234:	push	{r0, r1, r4, lr}
   14238:	mov	ip, #0
   1423c:	ldr	lr, [sp, #16]
   14240:	ldr	r4, [lr, ip, lsl #2]
   14244:	cmp	r4, #0
   14248:	bne	14260 <__snprintf_chk@plt+0x2eb8>
   1424c:	str	ip, [sp, #4]
   14250:	str	lr, [sp]
   14254:	bl	13e68 <__snprintf_chk@plt+0x2ac0>
   14258:	add	sp, sp, #8
   1425c:	pop	{r4, pc}
   14260:	add	ip, ip, #1
   14264:	b	14240 <__snprintf_chk@plt+0x2e98>
   14268:	push	{r4, r5, lr}
   1426c:	sub	sp, sp, #52	; 0x34
   14270:	mov	ip, #0
   14274:	ldr	r5, [sp, #64]	; 0x40
   14278:	add	lr, sp, #8
   1427c:	ldr	r4, [r5, ip, lsl #2]
   14280:	cmp	r4, #0
   14284:	str	r4, [lr, ip, lsl #2]
   14288:	beq	14298 <__snprintf_chk@plt+0x2ef0>
   1428c:	add	ip, ip, #1
   14290:	cmp	ip, #10
   14294:	bne	1427c <__snprintf_chk@plt+0x2ed4>
   14298:	str	ip, [sp, #4]
   1429c:	str	lr, [sp]
   142a0:	bl	13e68 <__snprintf_chk@plt+0x2ac0>
   142a4:	add	sp, sp, #52	; 0x34
   142a8:	pop	{r4, r5, pc}
   142ac:	push	{r3}		; (str r3, [sp, #-4]!)
   142b0:	push	{r0, r1, r2, r3, lr}
   142b4:	add	r3, sp, #24
   142b8:	str	r3, [sp, #12]
   142bc:	str	r3, [sp]
   142c0:	ldr	r3, [sp, #20]
   142c4:	bl	14268 <__snprintf_chk@plt+0x2ec0>
   142c8:	add	sp, sp, #16
   142cc:	pop	{lr}		; (ldr lr, [sp], #4)
   142d0:	add	sp, sp, #4
   142d4:	bx	lr
   142d8:	ldr	r3, [pc, #116]	; 14354 <__snprintf_chk@plt+0x2fac>
   142dc:	push	{r4, lr}
   142e0:	mov	r0, #10
   142e4:	ldr	r1, [r3]
   142e8:	bl	11114 <fputc_unlocked@plt>
   142ec:	mov	r2, #5
   142f0:	ldr	r1, [pc, #96]	; 14358 <__snprintf_chk@plt+0x2fb0>
   142f4:	mov	r0, #0
   142f8:	bl	11120 <dcgettext@plt>
   142fc:	ldr	r2, [pc, #88]	; 1435c <__snprintf_chk@plt+0x2fb4>
   14300:	mov	r1, r0
   14304:	mov	r0, #1
   14308:	bl	112b8 <__printf_chk@plt>
   1430c:	mov	r2, #5
   14310:	ldr	r1, [pc, #72]	; 14360 <__snprintf_chk@plt+0x2fb8>
   14314:	mov	r0, #0
   14318:	bl	11120 <dcgettext@plt>
   1431c:	ldr	r3, [pc, #64]	; 14364 <__snprintf_chk@plt+0x2fbc>
   14320:	ldr	r2, [pc, #64]	; 14368 <__snprintf_chk@plt+0x2fc0>
   14324:	mov	r1, r0
   14328:	mov	r0, #1
   1432c:	bl	112b8 <__printf_chk@plt>
   14330:	mov	r2, #5
   14334:	ldr	r1, [pc, #48]	; 1436c <__snprintf_chk@plt+0x2fc4>
   14338:	mov	r0, #0
   1433c:	bl	11120 <dcgettext@plt>
   14340:	ldr	r2, [pc, #40]	; 14370 <__snprintf_chk@plt+0x2fc8>
   14344:	pop	{r4, lr}
   14348:	mov	r1, r0
   1434c:	mov	r0, #1
   14350:	b	112b8 <__printf_chk@plt>
   14354:	andeq	r7, r2, r4, lsr r3
   14358:	andeq	r6, r1, r6, lsl #3
   1435c:	muleq	r1, sl, r1
   14360:			; <UNDEFINED> instruction: 0x000161b0
   14364:	andeq	r5, r1, r9, ror #22
   14368:	muleq	r1, r1, fp
   1436c:	andeq	r6, r1, r4, asr #3
   14370:	andeq	r6, r1, fp, ror #3
   14374:	push	{r4, lr}
   14378:	bl	14934 <__snprintf_chk@plt+0x358c>
   1437c:	cmp	r0, #0
   14380:	popne	{r4, pc}
   14384:	bl	14808 <__snprintf_chk@plt+0x3460>
   14388:	push	{r4, lr}
   1438c:	bl	14934 <__snprintf_chk@plt+0x358c>
   14390:	cmp	r0, #0
   14394:	popne	{r4, pc}
   14398:	bl	14808 <__snprintf_chk@plt+0x3460>
   1439c:	b	14374 <__snprintf_chk@plt+0x2fcc>
   143a0:	push	{r4, r5, r6, lr}
   143a4:	mov	r5, r0
   143a8:	mov	r4, r1
   143ac:	bl	14974 <__snprintf_chk@plt+0x35cc>
   143b0:	cmp	r0, #0
   143b4:	popne	{r4, r5, r6, pc}
   143b8:	adds	r4, r4, #0
   143bc:	movne	r4, #1
   143c0:	cmp	r5, #0
   143c4:	orreq	r4, r4, #1
   143c8:	cmp	r4, #0
   143cc:	popeq	{r4, r5, r6, pc}
   143d0:	bl	14808 <__snprintf_chk@plt+0x3460>
   143d4:	push	{r4, lr}
   143d8:	cmp	r1, #0
   143dc:	orreq	r1, r1, #1
   143e0:	bl	14974 <__snprintf_chk@plt+0x35cc>
   143e4:	cmp	r0, #0
   143e8:	popne	{r4, pc}
   143ec:	bl	14808 <__snprintf_chk@plt+0x3460>
   143f0:	push	{r4, r5, r6, lr}
   143f4:	mov	r6, r0
   143f8:	mov	r5, r1
   143fc:	mov	r4, r2
   14400:	bl	14cbc <__snprintf_chk@plt+0x3914>
   14404:	cmp	r0, #0
   14408:	popne	{r4, r5, r6, pc}
   1440c:	cmp	r6, #0
   14410:	beq	14420 <__snprintf_chk@plt+0x3078>
   14414:	cmp	r5, #0
   14418:	cmpne	r4, #0
   1441c:	popeq	{r4, r5, r6, pc}
   14420:	bl	14808 <__snprintf_chk@plt+0x3460>
   14424:	b	143f0 <__snprintf_chk@plt+0x3048>
   14428:	cmp	r2, #0
   1442c:	cmpne	r1, #0
   14430:	moveq	r2, #1
   14434:	moveq	r1, r2
   14438:	push	{r4, lr}
   1443c:	bl	14cbc <__snprintf_chk@plt+0x3914>
   14440:	cmp	r0, #0
   14444:	popne	{r4, pc}
   14448:	bl	14808 <__snprintf_chk@plt+0x3460>
   1444c:	mov	r2, r1
   14450:	mov	r1, r0
   14454:	mov	r0, #0
   14458:	b	143f0 <__snprintf_chk@plt+0x3048>
   1445c:	mov	r2, r1
   14460:	mov	r1, r0
   14464:	mov	r0, #0
   14468:	b	14428 <__snprintf_chk@plt+0x3080>
   1446c:	push	{r4, r5, r6, r7, r8, lr}
   14470:	subs	r7, r0, #0
   14474:	mov	r5, r1
   14478:	mov	r6, r2
   1447c:	ldr	r4, [r1]
   14480:	bne	144bc <__snprintf_chk@plt+0x3114>
   14484:	cmp	r4, #0
   14488:	bne	144a4 <__snprintf_chk@plt+0x30fc>
   1448c:	mov	r1, r2
   14490:	mov	r0, #64	; 0x40
   14494:	bl	14de8 <__snprintf_chk@plt+0x3a40>
   14498:	cmp	r0, #0
   1449c:	movne	r4, r0
   144a0:	addeq	r4, r0, #1
   144a4:	mov	r2, r6
   144a8:	mov	r1, r4
   144ac:	mov	r0, r7
   144b0:	bl	143f0 <__snprintf_chk@plt+0x3048>
   144b4:	str	r4, [r5]
   144b8:	pop	{r4, r5, r6, r7, r8, pc}
   144bc:	lsr	r2, r4, #1
   144c0:	add	r3, r2, #1
   144c4:	mvn	r3, r3
   144c8:	cmp	r4, r3
   144cc:	addls	r4, r4, #1
   144d0:	addls	r4, r4, r2
   144d4:	bls	144a4 <__snprintf_chk@plt+0x30fc>
   144d8:	bl	14808 <__snprintf_chk@plt+0x3460>
   144dc:	mov	r2, #1
   144e0:	b	1446c <__snprintf_chk@plt+0x30c4>
   144e4:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   144e8:	mov	sl, r0
   144ec:	ldr	r8, [r1]
   144f0:	mov	fp, r1
   144f4:	mov	r5, r2
   144f8:	asrs	r4, r8, #1
   144fc:	mov	r9, r3
   14500:	ldr	r7, [sp, #48]	; 0x30
   14504:	bpl	145a0 <__snprintf_chk@plt+0x31f8>
   14508:	rsb	r2, r4, #-2147483648	; 0x80000000
   1450c:	cmp	r8, r2
   14510:	movge	r2, #0
   14514:	movlt	r2, #1
   14518:	mvn	r3, r9
   1451c:	cmp	r2, #0
   14520:	lsr	r3, r3, #31
   14524:	addeq	r4, r4, r8
   14528:	mvnne	r4, #-2147483648	; 0x80000000
   1452c:	mov	r0, r3
   14530:	cmp	r9, r4
   14534:	movge	r0, #0
   14538:	andlt	r0, r0, #1
   1453c:	cmp	r0, #0
   14540:	str	r3, [sp, #4]
   14544:	bne	14714 <__snprintf_chk@plt+0x336c>
   14548:	cmp	r7, #0
   1454c:	bge	14660 <__snprintf_chk@plt+0x32b8>
   14550:	cmp	r4, #0
   14554:	bge	145b8 <__snprintf_chk@plt+0x3210>
   14558:	mov	r1, r7
   1455c:	mvn	r0, #-2147483648	; 0x80000000
   14560:	bl	14ff4 <__snprintf_chk@plt+0x3c4c>
   14564:	cmp	r0, r4
   14568:	movle	r0, #0
   1456c:	movgt	r0, #1
   14570:	cmp	r0, #0
   14574:	mvnne	r6, #-2147483648	; 0x80000000
   14578:	beq	145c8 <__snprintf_chk@plt+0x3220>
   1457c:	mov	r1, r7
   14580:	mov	r0, r6
   14584:	bl	14ff4 <__snprintf_chk@plt+0x3c4c>
   14588:	mov	r1, r7
   1458c:	mov	r4, r0
   14590:	mov	r0, r6
   14594:	bl	15214 <__snprintf_chk@plt+0x3e6c>
   14598:	sub	r1, r6, r1
   1459c:	b	145d8 <__snprintf_chk@plt+0x3230>
   145a0:	mvn	r2, #-2147483648	; 0x80000000
   145a4:	sub	r2, r2, r4
   145a8:	cmp	r8, r2
   145ac:	movle	r2, #0
   145b0:	movgt	r2, #1
   145b4:	b	14518 <__snprintf_chk@plt+0x3170>
   145b8:	cmn	r7, #1
   145bc:	movne	r1, r7
   145c0:	movne	r0, #-2147483648	; 0x80000000
   145c4:	bne	1472c <__snprintf_chk@plt+0x3384>
   145c8:	mul	r1, r7, r4
   145cc:	cmp	r1, #63	; 0x3f
   145d0:	movle	r6, #64	; 0x40
   145d4:	ble	1457c <__snprintf_chk@plt+0x31d4>
   145d8:	cmp	sl, #0
   145dc:	sub	r2, r4, r8
   145e0:	streq	sl, [fp]
   145e4:	cmp	r2, r5
   145e8:	bge	146bc <__snprintf_chk@plt+0x3314>
   145ec:	cmp	r5, #0
   145f0:	bge	14688 <__snprintf_chk@plt+0x32e0>
   145f4:	rsb	r2, r5, #-2147483648	; 0x80000000
   145f8:	cmp	r8, r2
   145fc:	movge	r2, #0
   14600:	movlt	r2, #1
   14604:	cmp	r2, #0
   14608:	bne	1465c <__snprintf_chk@plt+0x32b4>
   1460c:	ldr	r0, [sp, #4]
   14610:	add	r5, r8, r5
   14614:	cmp	r9, r5
   14618:	movge	r0, #0
   1461c:	andlt	r0, r0, #1
   14620:	cmp	r0, #0
   14624:	mov	r4, r5
   14628:	bne	1465c <__snprintf_chk@plt+0x32b4>
   1462c:	cmp	r7, #0
   14630:	bge	146d0 <__snprintf_chk@plt+0x3328>
   14634:	cmp	r5, #0
   14638:	bge	146a8 <__snprintf_chk@plt+0x3300>
   1463c:	mov	r1, r7
   14640:	mvn	r0, #-2147483648	; 0x80000000
   14644:	bl	14ff4 <__snprintf_chk@plt+0x3c4c>
   14648:	cmp	r5, r0
   1464c:	movge	r0, #0
   14650:	movlt	r0, #1
   14654:	cmp	r0, #0
   14658:	beq	146b8 <__snprintf_chk@plt+0x3310>
   1465c:	bl	14808 <__snprintf_chk@plt+0x3460>
   14660:	beq	145c8 <__snprintf_chk@plt+0x3220>
   14664:	cmp	r4, #0
   14668:	bge	14724 <__snprintf_chk@plt+0x337c>
   1466c:	cmn	r4, #1
   14670:	beq	145c8 <__snprintf_chk@plt+0x3220>
   14674:	mov	r1, r4
   14678:	mov	r0, #-2147483648	; 0x80000000
   1467c:	bl	14ff4 <__snprintf_chk@plt+0x3c4c>
   14680:	cmp	r7, r0
   14684:	b	14568 <__snprintf_chk@plt+0x31c0>
   14688:	cmp	r8, #0
   1468c:	blt	1460c <__snprintf_chk@plt+0x3264>
   14690:	mvn	r2, #-2147483648	; 0x80000000
   14694:	sub	r2, r2, r5
   14698:	cmp	r8, r2
   1469c:	movle	r2, #0
   146a0:	movgt	r2, #1
   146a4:	b	14604 <__snprintf_chk@plt+0x325c>
   146a8:	cmn	r7, #1
   146ac:	movne	r1, r7
   146b0:	movne	r0, #-2147483648	; 0x80000000
   146b4:	bne	14708 <__snprintf_chk@plt+0x3360>
   146b8:	mul	r1, r5, r7
   146bc:	mov	r0, sl
   146c0:	bl	143a0 <__snprintf_chk@plt+0x2ff8>
   146c4:	str	r4, [fp]
   146c8:	add	sp, sp, #12
   146cc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   146d0:	beq	146b8 <__snprintf_chk@plt+0x3310>
   146d4:	cmp	r5, #0
   146d8:	movge	r1, r7
   146dc:	mvnge	r0, #-2147483648	; 0x80000000
   146e0:	bge	14708 <__snprintf_chk@plt+0x3360>
   146e4:	cmn	r5, #1
   146e8:	beq	146b8 <__snprintf_chk@plt+0x3310>
   146ec:	mov	r1, r5
   146f0:	mov	r0, #-2147483648	; 0x80000000
   146f4:	bl	14ff4 <__snprintf_chk@plt+0x3c4c>
   146f8:	cmp	r7, r0
   146fc:	movle	r0, #0
   14700:	movgt	r0, #1
   14704:	b	14654 <__snprintf_chk@plt+0x32ac>
   14708:	bl	14ff4 <__snprintf_chk@plt+0x3c4c>
   1470c:	cmp	r5, r0
   14710:	b	146fc <__snprintf_chk@plt+0x3354>
   14714:	cmp	r7, #0
   14718:	mov	r4, r9
   1471c:	blt	145b8 <__snprintf_chk@plt+0x3210>
   14720:	beq	145c8 <__snprintf_chk@plt+0x3220>
   14724:	mov	r1, r7
   14728:	mvn	r0, #-2147483648	; 0x80000000
   1472c:	bl	14ff4 <__snprintf_chk@plt+0x3c4c>
   14730:	cmp	r0, r4
   14734:	movge	r0, #0
   14738:	movlt	r0, #1
   1473c:	b	14570 <__snprintf_chk@plt+0x31c8>
   14740:	push	{r4, lr}
   14744:	bl	148ec <__snprintf_chk@plt+0x3544>
   14748:	cmp	r0, #0
   1474c:	popne	{r4, pc}
   14750:	bl	14808 <__snprintf_chk@plt+0x3460>
   14754:	mov	r1, #1
   14758:	b	14740 <__snprintf_chk@plt+0x3398>
   1475c:	push	{r4, lr}
   14760:	bl	148ec <__snprintf_chk@plt+0x3544>
   14764:	cmp	r0, #0
   14768:	popne	{r4, pc}
   1476c:	bl	14808 <__snprintf_chk@plt+0x3460>
   14770:	mov	r1, #1
   14774:	b	1475c <__snprintf_chk@plt+0x33b4>
   14778:	push	{r4, r5, r6, lr}
   1477c:	mov	r4, r1
   14780:	mov	r5, r0
   14784:	mov	r0, r1
   14788:	bl	14374 <__snprintf_chk@plt+0x2fcc>
   1478c:	mov	r2, r4
   14790:	mov	r1, r5
   14794:	pop	{r4, r5, r6, lr}
   14798:	b	110d8 <memcpy@plt>
   1479c:	push	{r4, r5, r6, lr}
   147a0:	mov	r4, r1
   147a4:	mov	r5, r0
   147a8:	mov	r0, r1
   147ac:	bl	14388 <__snprintf_chk@plt+0x2fe0>
   147b0:	mov	r2, r4
   147b4:	mov	r1, r5
   147b8:	pop	{r4, r5, r6, lr}
   147bc:	b	110d8 <memcpy@plt>
   147c0:	push	{r4, r5, r6, lr}
   147c4:	mov	r5, r0
   147c8:	add	r0, r1, #1
   147cc:	mov	r4, r1
   147d0:	bl	14388 <__snprintf_chk@plt+0x2fe0>
   147d4:	mov	r2, #0
   147d8:	mov	r1, r5
   147dc:	strb	r2, [r0, r4]
   147e0:	mov	r2, r4
   147e4:	pop	{r4, r5, r6, lr}
   147e8:	b	110d8 <memcpy@plt>
   147ec:	push	{r4, lr}
   147f0:	mov	r4, r0
   147f4:	bl	11258 <strlen@plt>
   147f8:	add	r1, r0, #1
   147fc:	mov	r0, r4
   14800:	pop	{r4, lr}
   14804:	b	14778 <__snprintf_chk@plt+0x33d0>
   14808:	ldr	r3, [pc, #44]	; 1483c <__snprintf_chk@plt+0x3494>
   1480c:	push	{r4, lr}
   14810:	mov	r2, #5
   14814:	ldr	r1, [pc, #36]	; 14840 <__snprintf_chk@plt+0x3498>
   14818:	mov	r0, #0
   1481c:	ldr	r4, [r3]
   14820:	bl	11120 <dcgettext@plt>
   14824:	ldr	r2, [pc, #24]	; 14844 <__snprintf_chk@plt+0x349c>
   14828:	mov	r1, #0
   1482c:	mov	r3, r0
   14830:	mov	r0, r4
   14834:	bl	111d4 <error@plt>
   14838:	bl	1139c <abort@plt>
   1483c:	andeq	r7, r2, r8, lsr r1
   14840:	andeq	r6, r1, r7, lsr r2
   14844:	andeq	r5, r1, r8, lsl lr
   14848:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
   1484c:	mov	r7, r0
   14850:	mov	r9, r3
   14854:	mov	r5, r1
   14858:	mov	r8, r2
   1485c:	bl	1127c <__errno_location@plt>
   14860:	mov	r4, #0
   14864:	add	r1, sp, #4
   14868:	str	r4, [r0]
   1486c:	mov	r6, r0
   14870:	mov	r0, r7
   14874:	blx	r9
   14878:	ldr	r3, [sp, #4]
   1487c:	cmp	r7, r3
   14880:	beq	148b0 <__snprintf_chk@plt+0x3508>
   14884:	cmp	r5, r4
   14888:	bne	148b8 <__snprintf_chk@plt+0x3510>
   1488c:	ldrb	r2, [r3]
   14890:	cmp	r2, r4
   14894:	movne	r0, r5
   14898:	bne	148e0 <__snprintf_chk@plt+0x3538>
   1489c:	vcmp.f64	d0, #0.0
   148a0:	vmrs	APSR_nzcv, fpscr
   148a4:	bne	148c8 <__snprintf_chk@plt+0x3520>
   148a8:	mov	r0, #1
   148ac:	b	148e0 <__snprintf_chk@plt+0x3538>
   148b0:	mov	r0, r4
   148b4:	b	148d4 <__snprintf_chk@plt+0x352c>
   148b8:	vcmp.f64	d0, #0.0
   148bc:	vmrs	APSR_nzcv, fpscr
   148c0:	moveq	r0, #1
   148c4:	beq	148dc <__snprintf_chk@plt+0x3534>
   148c8:	ldr	r0, [r6]
   148cc:	subs	r0, r0, #34	; 0x22
   148d0:	movne	r0, #1
   148d4:	cmp	r5, #0
   148d8:	beq	148e0 <__snprintf_chk@plt+0x3538>
   148dc:	str	r3, [r5]
   148e0:	vstr	d0, [r8]
   148e4:	add	sp, sp, #12
   148e8:	pop	{r4, r5, r6, r7, r8, r9, pc}
   148ec:	cmp	r1, #0
   148f0:	cmpne	r0, #0
   148f4:	moveq	r1, #1
   148f8:	moveq	r0, r1
   148fc:	umull	r2, r3, r0, r1
   14900:	adds	r3, r3, #0
   14904:	movne	r3, #1
   14908:	cmp	r2, #0
   1490c:	blt	1491c <__snprintf_chk@plt+0x3574>
   14910:	cmp	r3, #0
   14914:	bne	1491c <__snprintf_chk@plt+0x3574>
   14918:	b	1106c <calloc@plt>
   1491c:	push	{r4, lr}
   14920:	bl	1127c <__errno_location@plt>
   14924:	mov	r3, #12
   14928:	str	r3, [r0]
   1492c:	mov	r0, #0
   14930:	pop	{r4, pc}
   14934:	cmp	r0, #0
   14938:	mov	r3, #0
   1493c:	moveq	r0, #1
   14940:	adds	r3, r3, #0
   14944:	movne	r3, #1
   14948:	cmp	r0, #0
   1494c:	blt	1495c <__snprintf_chk@plt+0x35b4>
   14950:	cmp	r3, #0
   14954:	bne	1495c <__snprintf_chk@plt+0x35b4>
   14958:	b	111ec <malloc@plt>
   1495c:	push	{r4, lr}
   14960:	bl	1127c <__errno_location@plt>
   14964:	mov	r3, #12
   14968:	str	r3, [r0]
   1496c:	mov	r0, #0
   14970:	pop	{r4, pc}
   14974:	cmp	r0, #0
   14978:	push	{r4, lr}
   1497c:	mov	r4, r1
   14980:	bne	14990 <__snprintf_chk@plt+0x35e8>
   14984:	mov	r0, r1
   14988:	pop	{r4, lr}
   1498c:	b	14934 <__snprintf_chk@plt+0x358c>
   14990:	cmp	r1, #0
   14994:	bne	149a4 <__snprintf_chk@plt+0x35fc>
   14998:	bl	12590 <__snprintf_chk@plt+0x11e8>
   1499c:	mov	r0, #0
   149a0:	pop	{r4, pc}
   149a4:	cmp	r1, #0
   149a8:	blt	149b8 <__snprintf_chk@plt+0x3610>
   149ac:	mov	r3, #0
   149b0:	cmp	r3, r3
   149b4:	beq	149c8 <__snprintf_chk@plt+0x3620>
   149b8:	bl	1127c <__errno_location@plt>
   149bc:	mov	r3, #12
   149c0:	str	r3, [r0]
   149c4:	b	1499c <__snprintf_chk@plt+0x35f4>
   149c8:	pop	{r4, lr}
   149cc:	b	11138 <realloc@plt>
   149d0:	push	{r4, r5, r6, lr}
   149d4:	mov	r6, r0
   149d8:	ldr	r4, [pc, #80]	; 14a30 <__snprintf_chk@plt+0x3688>
   149dc:	mov	r5, r1
   149e0:	ldr	r2, [r4]
   149e4:	cmp	r2, #0
   149e8:	bne	149fc <__snprintf_chk@plt+0x3654>
   149ec:	ldr	r1, [pc, #64]	; 14a34 <__snprintf_chk@plt+0x368c>
   149f0:	ldr	r0, [pc, #64]	; 14a38 <__snprintf_chk@plt+0x3690>
   149f4:	bl	11354 <newlocale@plt>
   149f8:	str	r0, [r4]
   149fc:	ldr	r2, [r4]
   14a00:	cmp	r2, #0
   14a04:	bne	14a18 <__snprintf_chk@plt+0x3670>
   14a08:	cmp	r5, #0
   14a0c:	strne	r6, [r5]
   14a10:	vldr	d0, [pc, #16]	; 14a28 <__snprintf_chk@plt+0x3680>
   14a14:	pop	{r4, r5, r6, pc}
   14a18:	mov	r1, r5
   14a1c:	mov	r0, r6
   14a20:	pop	{r4, r5, r6, lr}
   14a24:	b	1130c <strtod_l@plt>
	...
   14a30:	muleq	r2, r8, r4
   14a34:	andeq	r6, r1, r8, asr #4
   14a38:			; <UNDEFINED> instruction: 0x00001fbf
   14a3c:	push	{r4, r5, r6, lr}
   14a40:	mov	r4, r0
   14a44:	bl	111b0 <__fpending@plt>
   14a48:	mov	r5, r0
   14a4c:	mov	r0, r4
   14a50:	bl	111bc <ferror_unlocked@plt>
   14a54:	mov	r6, r0
   14a58:	mov	r0, r4
   14a5c:	bl	14aac <__snprintf_chk@plt+0x3704>
   14a60:	cmp	r6, #0
   14a64:	mov	r4, r0
   14a68:	bne	14a94 <__snprintf_chk@plt+0x36ec>
   14a6c:	cmp	r0, #0
   14a70:	beq	14a8c <__snprintf_chk@plt+0x36e4>
   14a74:	cmp	r5, #0
   14a78:	bne	14aa4 <__snprintf_chk@plt+0x36fc>
   14a7c:	bl	1127c <__errno_location@plt>
   14a80:	ldr	r4, [r0]
   14a84:	subs	r4, r4, #9
   14a88:	mvnne	r4, #0
   14a8c:	mov	r0, r4
   14a90:	pop	{r4, r5, r6, pc}
   14a94:	cmp	r0, #0
   14a98:	bne	14aa4 <__snprintf_chk@plt+0x36fc>
   14a9c:	bl	1127c <__errno_location@plt>
   14aa0:	str	r4, [r0]
   14aa4:	mvn	r4, #0
   14aa8:	b	14a8c <__snprintf_chk@plt+0x36e4>
   14aac:	push	{r0, r1, r2, r4, r5, lr}
   14ab0:	mov	r4, r0
   14ab4:	bl	112dc <fileno@plt>
   14ab8:	cmp	r0, #0
   14abc:	mov	r0, r4
   14ac0:	bge	14ad0 <__snprintf_chk@plt+0x3728>
   14ac4:	add	sp, sp, #12
   14ac8:	pop	{r4, r5, lr}
   14acc:	b	112f4 <fclose@plt>
   14ad0:	bl	11210 <__freading@plt>
   14ad4:	cmp	r0, #0
   14ad8:	bne	14b14 <__snprintf_chk@plt+0x376c>
   14adc:	mov	r0, r4
   14ae0:	bl	14b54 <__snprintf_chk@plt+0x37ac>
   14ae4:	cmp	r0, #0
   14ae8:	bne	14b48 <__snprintf_chk@plt+0x37a0>
   14aec:	mov	r5, #0
   14af0:	mov	r0, r4
   14af4:	bl	112f4 <fclose@plt>
   14af8:	cmp	r5, #0
   14afc:	beq	14b0c <__snprintf_chk@plt+0x3764>
   14b00:	bl	1127c <__errno_location@plt>
   14b04:	str	r5, [r0]
   14b08:	mvn	r0, #0
   14b0c:	add	sp, sp, #12
   14b10:	pop	{r4, r5, pc}
   14b14:	mov	r0, r4
   14b18:	bl	112dc <fileno@plt>
   14b1c:	mov	r3, #1
   14b20:	str	r3, [sp]
   14b24:	mov	r2, #0
   14b28:	mov	r3, #0
   14b2c:	bl	11180 <lseek64@plt>
   14b30:	mvn	r3, #0
   14b34:	mvn	r2, #0
   14b38:	cmp	r1, r3
   14b3c:	cmpeq	r0, r2
   14b40:	bne	14adc <__snprintf_chk@plt+0x3734>
   14b44:	b	14aec <__snprintf_chk@plt+0x3744>
   14b48:	bl	1127c <__errno_location@plt>
   14b4c:	ldr	r5, [r0]
   14b50:	b	14af0 <__snprintf_chk@plt+0x3748>
   14b54:	push	{r0, r1, r4, lr}
   14b58:	subs	r4, r0, #0
   14b5c:	bne	14b70 <__snprintf_chk@plt+0x37c8>
   14b60:	mov	r0, r4
   14b64:	add	sp, sp, #8
   14b68:	pop	{r4, lr}
   14b6c:	b	110a8 <fflush@plt>
   14b70:	bl	11210 <__freading@plt>
   14b74:	cmp	r0, #0
   14b78:	beq	14b60 <__snprintf_chk@plt+0x37b8>
   14b7c:	ldr	r3, [r4]
   14b80:	tst	r3, #256	; 0x100
   14b84:	beq	14b60 <__snprintf_chk@plt+0x37b8>
   14b88:	mov	r3, #1
   14b8c:	str	r3, [sp]
   14b90:	mov	r2, #0
   14b94:	mov	r3, #0
   14b98:	mov	r0, r4
   14b9c:	bl	14ba4 <__snprintf_chk@plt+0x37fc>
   14ba0:	b	14b60 <__snprintf_chk@plt+0x37b8>
   14ba4:	push	{r0, r1, r4, r5, r6, r7, r8, lr}
   14ba8:	mov	r4, r0
   14bac:	ldmib	r0, {ip, lr}
   14bb0:	ldr	r8, [sp, #32]
   14bb4:	cmp	lr, ip
   14bb8:	bne	14c24 <__snprintf_chk@plt+0x387c>
   14bbc:	ldr	lr, [r0, #20]
   14bc0:	ldr	ip, [r0, #16]
   14bc4:	cmp	lr, ip
   14bc8:	bne	14c24 <__snprintf_chk@plt+0x387c>
   14bcc:	ldr	r5, [r0, #36]	; 0x24
   14bd0:	cmp	r5, #0
   14bd4:	bne	14c24 <__snprintf_chk@plt+0x387c>
   14bd8:	mov	r6, r2
   14bdc:	mov	r7, r3
   14be0:	bl	112dc <fileno@plt>
   14be4:	mov	r2, r6
   14be8:	mov	r3, r7
   14bec:	str	r8, [sp]
   14bf0:	bl	11180 <lseek64@plt>
   14bf4:	mvn	r3, #0
   14bf8:	mvn	r2, #0
   14bfc:	cmp	r1, r3
   14c00:	cmpeq	r0, r2
   14c04:	mvneq	r0, #0
   14c08:	ldrne	r3, [r4]
   14c0c:	strdne	r0, [r4, #80]	; 0x50
   14c10:	movne	r0, r5
   14c14:	bicne	r3, r3, #16
   14c18:	strne	r3, [r4]
   14c1c:	add	sp, sp, #8
   14c20:	pop	{r4, r5, r6, r7, r8, pc}
   14c24:	str	r8, [sp, #32]
   14c28:	mov	r0, r4
   14c2c:	add	sp, sp, #8
   14c30:	pop	{r4, r5, r6, r7, r8, lr}
   14c34:	b	11300 <fseeko64@plt>
   14c38:	push	{r4, lr}
   14c3c:	mov	r0, #14
   14c40:	bl	11348 <nl_langinfo@plt>
   14c44:	ldr	r3, [pc, #24]	; 14c64 <__snprintf_chk@plt+0x38bc>
   14c48:	cmp	r0, #0
   14c4c:	moveq	r0, r3
   14c50:	ldr	r3, [pc, #16]	; 14c68 <__snprintf_chk@plt+0x38c0>
   14c54:	ldrb	r2, [r0]
   14c58:	cmp	r2, #0
   14c5c:	moveq	r0, r3
   14c60:	pop	{r4, pc}
   14c64:	andeq	r5, r1, r7, lsr ip
   14c68:	andeq	r6, r1, sl, asr #4
   14c6c:	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   14c70:	subs	r5, r0, #0
   14c74:	addeq	r5, sp, #4
   14c78:	mov	r0, r5
   14c7c:	mov	r7, r2
   14c80:	mov	r6, r1
   14c84:	bl	111c8 <mbrtowc@plt>
   14c88:	cmp	r7, #0
   14c8c:	cmnne	r0, #3
   14c90:	mov	r4, r0
   14c94:	bls	14cb0 <__snprintf_chk@plt+0x3908>
   14c98:	mov	r0, #0
   14c9c:	bl	14d08 <__snprintf_chk@plt+0x3960>
   14ca0:	cmp	r0, #0
   14ca4:	moveq	r4, #1
   14ca8:	ldrbeq	r3, [r6]
   14cac:	streq	r3, [r5]
   14cb0:	mov	r0, r4
   14cb4:	add	sp, sp, #12
   14cb8:	pop	{r4, r5, r6, r7, pc}
   14cbc:	push	{r4, r5, r6, lr}
   14cc0:	subs	r4, r2, #0
   14cc4:	mov	r6, r0
   14cc8:	mov	r5, r1
   14ccc:	beq	14ce4 <__snprintf_chk@plt+0x393c>
   14cd0:	mov	r1, r4
   14cd4:	mvn	r0, #0
   14cd8:	bl	14de8 <__snprintf_chk@plt+0x3a40>
   14cdc:	cmp	r0, r5
   14ce0:	bcc	14cf4 <__snprintf_chk@plt+0x394c>
   14ce4:	mul	r1, r5, r4
   14ce8:	mov	r0, r6
   14cec:	pop	{r4, r5, r6, lr}
   14cf0:	b	14974 <__snprintf_chk@plt+0x35cc>
   14cf4:	bl	1127c <__errno_location@plt>
   14cf8:	mov	r3, #12
   14cfc:	str	r3, [r0]
   14d00:	mov	r0, #0
   14d04:	pop	{r4, r5, r6, pc}
   14d08:	push	{lr}		; (str lr, [sp, #-4]!)
   14d0c:	sub	sp, sp, #268	; 0x10c
   14d10:	ldr	r2, [pc, #64]	; 14d58 <__snprintf_chk@plt+0x39b0>
   14d14:	add	r1, sp, #4
   14d18:	bl	14d64 <__snprintf_chk@plt+0x39bc>
   14d1c:	cmp	r0, #0
   14d20:	movne	r0, #0
   14d24:	bne	14d50 <__snprintf_chk@plt+0x39a8>
   14d28:	ldr	r1, [pc, #44]	; 14d5c <__snprintf_chk@plt+0x39b4>
   14d2c:	add	r0, sp, #4
   14d30:	bl	11090 <strcmp@plt>
   14d34:	cmp	r0, #0
   14d38:	beq	14d50 <__snprintf_chk@plt+0x39a8>
   14d3c:	ldr	r1, [pc, #28]	; 14d60 <__snprintf_chk@plt+0x39b8>
   14d40:	add	r0, sp, #4
   14d44:	bl	11090 <strcmp@plt>
   14d48:	adds	r0, r0, #0
   14d4c:	movne	r0, #1
   14d50:	add	sp, sp, #268	; 0x10c
   14d54:	pop	{pc}		; (ldr pc, [sp], #4)
   14d58:	andeq	r0, r0, r1, lsl #2
   14d5c:	andeq	r6, r1, r8, asr #4
   14d60:	andeq	r6, r1, r0, asr r2
   14d64:	push	{r4, r5, r6, lr}
   14d68:	mov	r5, r1
   14d6c:	mov	r1, #0
   14d70:	mov	r4, r2
   14d74:	bl	11318 <setlocale@plt>
   14d78:	subs	r6, r0, #0
   14d7c:	bne	14d90 <__snprintf_chk@plt+0x39e8>
   14d80:	cmp	r4, #0
   14d84:	strbne	r6, [r5]
   14d88:	mov	r0, #22
   14d8c:	pop	{r4, r5, r6, pc}
   14d90:	bl	11258 <strlen@plt>
   14d94:	cmp	r4, r0
   14d98:	bls	14db4 <__snprintf_chk@plt+0x3a0c>
   14d9c:	add	r2, r0, #1
   14da0:	mov	r1, r6
   14da4:	mov	r0, r5
   14da8:	bl	110d8 <memcpy@plt>
   14dac:	mov	r0, #0
   14db0:	pop	{r4, r5, r6, pc}
   14db4:	cmp	r4, #0
   14db8:	beq	14dd8 <__snprintf_chk@plt+0x3a30>
   14dbc:	sub	r4, r4, #1
   14dc0:	mov	r2, r4
   14dc4:	mov	r1, r6
   14dc8:	mov	r0, r5
   14dcc:	bl	110d8 <memcpy@plt>
   14dd0:	mov	r3, #0
   14dd4:	strb	r3, [r5, r4]
   14dd8:	mov	r0, #34	; 0x22
   14ddc:	pop	{r4, r5, r6, pc}
   14de0:	mov	r1, #0
   14de4:	b	11318 <setlocale@plt>
   14de8:	subs	r2, r1, #1
   14dec:	bxeq	lr
   14df0:	bcc	14fc8 <__snprintf_chk@plt+0x3c20>
   14df4:	cmp	r0, r1
   14df8:	bls	14fac <__snprintf_chk@plt+0x3c04>
   14dfc:	tst	r1, r2
   14e00:	beq	14fb8 <__snprintf_chk@plt+0x3c10>
   14e04:	clz	r3, r0
   14e08:	clz	r2, r1
   14e0c:	sub	r3, r2, r3
   14e10:	rsbs	r3, r3, #31
   14e14:	addne	r3, r3, r3, lsl #1
   14e18:	mov	r2, #0
   14e1c:	addne	pc, pc, r3, lsl #2
   14e20:	nop			; (mov r0, r0)
   14e24:	cmp	r0, r1, lsl #31
   14e28:	adc	r2, r2, r2
   14e2c:	subcs	r0, r0, r1, lsl #31
   14e30:	cmp	r0, r1, lsl #30
   14e34:	adc	r2, r2, r2
   14e38:	subcs	r0, r0, r1, lsl #30
   14e3c:	cmp	r0, r1, lsl #29
   14e40:	adc	r2, r2, r2
   14e44:	subcs	r0, r0, r1, lsl #29
   14e48:	cmp	r0, r1, lsl #28
   14e4c:	adc	r2, r2, r2
   14e50:	subcs	r0, r0, r1, lsl #28
   14e54:	cmp	r0, r1, lsl #27
   14e58:	adc	r2, r2, r2
   14e5c:	subcs	r0, r0, r1, lsl #27
   14e60:	cmp	r0, r1, lsl #26
   14e64:	adc	r2, r2, r2
   14e68:	subcs	r0, r0, r1, lsl #26
   14e6c:	cmp	r0, r1, lsl #25
   14e70:	adc	r2, r2, r2
   14e74:	subcs	r0, r0, r1, lsl #25
   14e78:	cmp	r0, r1, lsl #24
   14e7c:	adc	r2, r2, r2
   14e80:	subcs	r0, r0, r1, lsl #24
   14e84:	cmp	r0, r1, lsl #23
   14e88:	adc	r2, r2, r2
   14e8c:	subcs	r0, r0, r1, lsl #23
   14e90:	cmp	r0, r1, lsl #22
   14e94:	adc	r2, r2, r2
   14e98:	subcs	r0, r0, r1, lsl #22
   14e9c:	cmp	r0, r1, lsl #21
   14ea0:	adc	r2, r2, r2
   14ea4:	subcs	r0, r0, r1, lsl #21
   14ea8:	cmp	r0, r1, lsl #20
   14eac:	adc	r2, r2, r2
   14eb0:	subcs	r0, r0, r1, lsl #20
   14eb4:	cmp	r0, r1, lsl #19
   14eb8:	adc	r2, r2, r2
   14ebc:	subcs	r0, r0, r1, lsl #19
   14ec0:	cmp	r0, r1, lsl #18
   14ec4:	adc	r2, r2, r2
   14ec8:	subcs	r0, r0, r1, lsl #18
   14ecc:	cmp	r0, r1, lsl #17
   14ed0:	adc	r2, r2, r2
   14ed4:	subcs	r0, r0, r1, lsl #17
   14ed8:	cmp	r0, r1, lsl #16
   14edc:	adc	r2, r2, r2
   14ee0:	subcs	r0, r0, r1, lsl #16
   14ee4:	cmp	r0, r1, lsl #15
   14ee8:	adc	r2, r2, r2
   14eec:	subcs	r0, r0, r1, lsl #15
   14ef0:	cmp	r0, r1, lsl #14
   14ef4:	adc	r2, r2, r2
   14ef8:	subcs	r0, r0, r1, lsl #14
   14efc:	cmp	r0, r1, lsl #13
   14f00:	adc	r2, r2, r2
   14f04:	subcs	r0, r0, r1, lsl #13
   14f08:	cmp	r0, r1, lsl #12
   14f0c:	adc	r2, r2, r2
   14f10:	subcs	r0, r0, r1, lsl #12
   14f14:	cmp	r0, r1, lsl #11
   14f18:	adc	r2, r2, r2
   14f1c:	subcs	r0, r0, r1, lsl #11
   14f20:	cmp	r0, r1, lsl #10
   14f24:	adc	r2, r2, r2
   14f28:	subcs	r0, r0, r1, lsl #10
   14f2c:	cmp	r0, r1, lsl #9
   14f30:	adc	r2, r2, r2
   14f34:	subcs	r0, r0, r1, lsl #9
   14f38:	cmp	r0, r1, lsl #8
   14f3c:	adc	r2, r2, r2
   14f40:	subcs	r0, r0, r1, lsl #8
   14f44:	cmp	r0, r1, lsl #7
   14f48:	adc	r2, r2, r2
   14f4c:	subcs	r0, r0, r1, lsl #7
   14f50:	cmp	r0, r1, lsl #6
   14f54:	adc	r2, r2, r2
   14f58:	subcs	r0, r0, r1, lsl #6
   14f5c:	cmp	r0, r1, lsl #5
   14f60:	adc	r2, r2, r2
   14f64:	subcs	r0, r0, r1, lsl #5
   14f68:	cmp	r0, r1, lsl #4
   14f6c:	adc	r2, r2, r2
   14f70:	subcs	r0, r0, r1, lsl #4
   14f74:	cmp	r0, r1, lsl #3
   14f78:	adc	r2, r2, r2
   14f7c:	subcs	r0, r0, r1, lsl #3
   14f80:	cmp	r0, r1, lsl #2
   14f84:	adc	r2, r2, r2
   14f88:	subcs	r0, r0, r1, lsl #2
   14f8c:	cmp	r0, r1, lsl #1
   14f90:	adc	r2, r2, r2
   14f94:	subcs	r0, r0, r1, lsl #1
   14f98:	cmp	r0, r1
   14f9c:	adc	r2, r2, r2
   14fa0:	subcs	r0, r0, r1
   14fa4:	mov	r0, r2
   14fa8:	bx	lr
   14fac:	moveq	r0, #1
   14fb0:	movne	r0, #0
   14fb4:	bx	lr
   14fb8:	clz	r2, r1
   14fbc:	rsb	r2, r2, #31
   14fc0:	lsr	r0, r0, r2
   14fc4:	bx	lr
   14fc8:	cmp	r0, #0
   14fcc:	mvnne	r0, #0
   14fd0:	b	15234 <__snprintf_chk@plt+0x3e8c>
   14fd4:	cmp	r1, #0
   14fd8:	beq	14fc8 <__snprintf_chk@plt+0x3c20>
   14fdc:	push	{r0, r1, lr}
   14fe0:	bl	14de8 <__snprintf_chk@plt+0x3a40>
   14fe4:	pop	{r1, r2, lr}
   14fe8:	mul	r3, r2, r0
   14fec:	sub	r1, r1, r3
   14ff0:	bx	lr
   14ff4:	cmp	r1, #0
   14ff8:	beq	15204 <__snprintf_chk@plt+0x3e5c>
   14ffc:	eor	ip, r0, r1
   15000:	rsbmi	r1, r1, #0
   15004:	subs	r2, r1, #1
   15008:	beq	151d0 <__snprintf_chk@plt+0x3e28>
   1500c:	movs	r3, r0
   15010:	rsbmi	r3, r0, #0
   15014:	cmp	r3, r1
   15018:	bls	151dc <__snprintf_chk@plt+0x3e34>
   1501c:	tst	r1, r2
   15020:	beq	151ec <__snprintf_chk@plt+0x3e44>
   15024:	clz	r2, r3
   15028:	clz	r0, r1
   1502c:	sub	r2, r0, r2
   15030:	rsbs	r2, r2, #31
   15034:	addne	r2, r2, r2, lsl #1
   15038:	mov	r0, #0
   1503c:	addne	pc, pc, r2, lsl #2
   15040:	nop			; (mov r0, r0)
   15044:	cmp	r3, r1, lsl #31
   15048:	adc	r0, r0, r0
   1504c:	subcs	r3, r3, r1, lsl #31
   15050:	cmp	r3, r1, lsl #30
   15054:	adc	r0, r0, r0
   15058:	subcs	r3, r3, r1, lsl #30
   1505c:	cmp	r3, r1, lsl #29
   15060:	adc	r0, r0, r0
   15064:	subcs	r3, r3, r1, lsl #29
   15068:	cmp	r3, r1, lsl #28
   1506c:	adc	r0, r0, r0
   15070:	subcs	r3, r3, r1, lsl #28
   15074:	cmp	r3, r1, lsl #27
   15078:	adc	r0, r0, r0
   1507c:	subcs	r3, r3, r1, lsl #27
   15080:	cmp	r3, r1, lsl #26
   15084:	adc	r0, r0, r0
   15088:	subcs	r3, r3, r1, lsl #26
   1508c:	cmp	r3, r1, lsl #25
   15090:	adc	r0, r0, r0
   15094:	subcs	r3, r3, r1, lsl #25
   15098:	cmp	r3, r1, lsl #24
   1509c:	adc	r0, r0, r0
   150a0:	subcs	r3, r3, r1, lsl #24
   150a4:	cmp	r3, r1, lsl #23
   150a8:	adc	r0, r0, r0
   150ac:	subcs	r3, r3, r1, lsl #23
   150b0:	cmp	r3, r1, lsl #22
   150b4:	adc	r0, r0, r0
   150b8:	subcs	r3, r3, r1, lsl #22
   150bc:	cmp	r3, r1, lsl #21
   150c0:	adc	r0, r0, r0
   150c4:	subcs	r3, r3, r1, lsl #21
   150c8:	cmp	r3, r1, lsl #20
   150cc:	adc	r0, r0, r0
   150d0:	subcs	r3, r3, r1, lsl #20
   150d4:	cmp	r3, r1, lsl #19
   150d8:	adc	r0, r0, r0
   150dc:	subcs	r3, r3, r1, lsl #19
   150e0:	cmp	r3, r1, lsl #18
   150e4:	adc	r0, r0, r0
   150e8:	subcs	r3, r3, r1, lsl #18
   150ec:	cmp	r3, r1, lsl #17
   150f0:	adc	r0, r0, r0
   150f4:	subcs	r3, r3, r1, lsl #17
   150f8:	cmp	r3, r1, lsl #16
   150fc:	adc	r0, r0, r0
   15100:	subcs	r3, r3, r1, lsl #16
   15104:	cmp	r3, r1, lsl #15
   15108:	adc	r0, r0, r0
   1510c:	subcs	r3, r3, r1, lsl #15
   15110:	cmp	r3, r1, lsl #14
   15114:	adc	r0, r0, r0
   15118:	subcs	r3, r3, r1, lsl #14
   1511c:	cmp	r3, r1, lsl #13
   15120:	adc	r0, r0, r0
   15124:	subcs	r3, r3, r1, lsl #13
   15128:	cmp	r3, r1, lsl #12
   1512c:	adc	r0, r0, r0
   15130:	subcs	r3, r3, r1, lsl #12
   15134:	cmp	r3, r1, lsl #11
   15138:	adc	r0, r0, r0
   1513c:	subcs	r3, r3, r1, lsl #11
   15140:	cmp	r3, r1, lsl #10
   15144:	adc	r0, r0, r0
   15148:	subcs	r3, r3, r1, lsl #10
   1514c:	cmp	r3, r1, lsl #9
   15150:	adc	r0, r0, r0
   15154:	subcs	r3, r3, r1, lsl #9
   15158:	cmp	r3, r1, lsl #8
   1515c:	adc	r0, r0, r0
   15160:	subcs	r3, r3, r1, lsl #8
   15164:	cmp	r3, r1, lsl #7
   15168:	adc	r0, r0, r0
   1516c:	subcs	r3, r3, r1, lsl #7
   15170:	cmp	r3, r1, lsl #6
   15174:	adc	r0, r0, r0
   15178:	subcs	r3, r3, r1, lsl #6
   1517c:	cmp	r3, r1, lsl #5
   15180:	adc	r0, r0, r0
   15184:	subcs	r3, r3, r1, lsl #5
   15188:	cmp	r3, r1, lsl #4
   1518c:	adc	r0, r0, r0
   15190:	subcs	r3, r3, r1, lsl #4
   15194:	cmp	r3, r1, lsl #3
   15198:	adc	r0, r0, r0
   1519c:	subcs	r3, r3, r1, lsl #3
   151a0:	cmp	r3, r1, lsl #2
   151a4:	adc	r0, r0, r0
   151a8:	subcs	r3, r3, r1, lsl #2
   151ac:	cmp	r3, r1, lsl #1
   151b0:	adc	r0, r0, r0
   151b4:	subcs	r3, r3, r1, lsl #1
   151b8:	cmp	r3, r1
   151bc:	adc	r0, r0, r0
   151c0:	subcs	r3, r3, r1
   151c4:	cmp	ip, #0
   151c8:	rsbmi	r0, r0, #0
   151cc:	bx	lr
   151d0:	teq	ip, r0
   151d4:	rsbmi	r0, r0, #0
   151d8:	bx	lr
   151dc:	movcc	r0, #0
   151e0:	asreq	r0, ip, #31
   151e4:	orreq	r0, r0, #1
   151e8:	bx	lr
   151ec:	clz	r2, r1
   151f0:	rsb	r2, r2, #31
   151f4:	cmp	ip, #0
   151f8:	lsr	r0, r3, r2
   151fc:	rsbmi	r0, r0, #0
   15200:	bx	lr
   15204:	cmp	r0, #0
   15208:	mvngt	r0, #-2147483648	; 0x80000000
   1520c:	movlt	r0, #-2147483648	; 0x80000000
   15210:	b	15234 <__snprintf_chk@plt+0x3e8c>
   15214:	cmp	r1, #0
   15218:	beq	15204 <__snprintf_chk@plt+0x3e5c>
   1521c:	push	{r0, r1, lr}
   15220:	bl	14ffc <__snprintf_chk@plt+0x3c54>
   15224:	pop	{r1, r2, lr}
   15228:	mul	r3, r2, r0
   1522c:	sub	r1, r1, r3
   15230:	bx	lr
   15234:	push	{r1, lr}
   15238:	mov	r0, #8
   1523c:	bl	11084 <raise@plt>
   15240:	pop	{r1, pc}
   15244:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   15248:	mov	r7, r0
   1524c:	ldr	r6, [pc, #72]	; 1529c <__snprintf_chk@plt+0x3ef4>
   15250:	ldr	r5, [pc, #72]	; 152a0 <__snprintf_chk@plt+0x3ef8>
   15254:	add	r6, pc, r6
   15258:	add	r5, pc, r5
   1525c:	sub	r6, r6, r5
   15260:	mov	r8, r1
   15264:	mov	r9, r2
   15268:	bl	1104c <calloc@plt-0x20>
   1526c:	asrs	r6, r6, #2
   15270:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   15274:	mov	r4, #0
   15278:	add	r4, r4, #1
   1527c:	ldr	r3, [r5], #4
   15280:	mov	r2, r9
   15284:	mov	r1, r8
   15288:	mov	r0, r7
   1528c:	blx	r3
   15290:	cmp	r6, r4
   15294:	bne	15278 <__snprintf_chk@plt+0x3ed0>
   15298:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1529c:	andeq	r1, r1, r4, lsr #25
   152a0:	muleq	r1, ip, ip
   152a4:	bx	lr
   152a8:	ldr	r3, [pc, #12]	; 152bc <__snprintf_chk@plt+0x3f14>
   152ac:	mov	r1, #0
   152b0:	add	r3, pc, r3
   152b4:	ldr	r2, [r3]
   152b8:	b	11294 <__cxa_atexit@plt>
   152bc:	andeq	r1, r1, r4, ror lr

Disassembly of section .fini:

000152c0 <.fini>:
   152c0:	push	{r3, lr}
   152c4:	pop	{r3, pc}
