
../repos/TamirEvan-mupdf-2c9309e/build/release/scripts/hexdump.exe:     file format elf32-littlearm


Disassembly of section .init:

0001055c <.init>:
   1055c:	push	{r3, lr}
   10560:	bl	10aa0 <__gmon_start__@plt+0x47c>
   10564:	pop	{r3, pc}

Disassembly of section .plt:

00010568 <fseek@plt-0x14>:
   10568:	push	{lr}		; (str lr, [sp, #-4]!)
   1056c:	ldr	lr, [pc, #4]	; 10578 <fseek@plt-0x4>
   10570:	add	lr, pc, lr
   10574:	ldr	pc, [lr, #8]!
   10578:	andeq	r0, r1, r8, lsl #21

0001057c <fseek@plt>:
   1057c:	add	ip, pc, #0, 12
   10580:	add	ip, ip, #16, 20	; 0x10000
   10584:	ldr	pc, [ip, #2696]!	; 0xa88

00010588 <fgetc@plt>:
   10588:	add	ip, pc, #0, 12
   1058c:	add	ip, ip, #16, 20	; 0x10000
   10590:	ldr	pc, [ip, #2688]!	; 0xa80

00010594 <fopen@plt>:
   10594:	add	ip, pc, #0, 12
   10598:	add	ip, ip, #16, 20	; 0x10000
   1059c:	ldr	pc, [ip, #2680]!	; 0xa78

000105a0 <abort@plt>:
   105a0:	add	ip, pc, #0, 12
   105a4:	add	ip, ip, #16, 20	; 0x10000
   105a8:	ldr	pc, [ip, #2672]!	; 0xa70

000105ac <strcpy@plt>:
   105ac:	add	ip, pc, #0, 12
   105b0:	add	ip, ip, #16, 20	; 0x10000
   105b4:	ldr	pc, [ip, #2664]!	; 0xa68

000105b8 <ftell@plt>:
   105b8:	add	ip, pc, #0, 12
   105bc:	add	ip, ip, #16, 20	; 0x10000
   105c0:	ldr	pc, [ip, #2656]!	; 0xa60

000105c4 <fputc@plt>:
   105c4:	add	ip, pc, #0, 12
   105c8:	add	ip, ip, #16, 20	; 0x10000
   105cc:	ldr	pc, [ip, #2648]!	; 0xa58

000105d0 <fwrite@plt>:
   105d0:	add	ip, pc, #0, 12
   105d4:	add	ip, ip, #16, 20	; 0x10000
   105d8:	ldr	pc, [ip, #2640]!	; 0xa50

000105dc <strlen@plt>:
   105dc:	add	ip, pc, #0, 12
   105e0:	add	ip, ip, #16, 20	; 0x10000
   105e4:	ldr	pc, [ip, #2632]!	; 0xa48

000105e8 <fprintf@plt>:
   105e8:	add	ip, pc, #0, 12
   105ec:	add	ip, ip, #16, 20	; 0x10000
   105f0:	ldr	pc, [ip, #2624]!	; 0xa40

000105f4 <fclose@plt>:
   105f4:	add	ip, pc, #0, 12
   105f8:	add	ip, ip, #16, 20	; 0x10000
   105fc:	ldr	pc, [ip, #2616]!	; 0xa38

00010600 <strcmp@plt>:
   10600:	add	ip, pc, #0, 12
   10604:	add	ip, ip, #16, 20	; 0x10000
   10608:	ldr	pc, [ip, #2608]!	; 0xa30

0001060c <strrchr@plt>:
   1060c:	add	ip, pc, #0, 12
   10610:	add	ip, ip, #16, 20	; 0x10000
   10614:	ldr	pc, [ip, #2600]!	; 0xa28

00010618 <__libc_start_main@plt>:
   10618:	add	ip, pc, #0, 12
   1061c:	add	ip, ip, #16, 20	; 0x10000
   10620:	ldr	pc, [ip, #2592]!	; 0xa20

00010624 <__gmon_start__@plt>:
   10624:	add	ip, pc, #0, 12
   10628:	add	ip, ip, #16, 20	; 0x10000
   1062c:	ldr	pc, [ip, #2584]!	; 0xa18

Disassembly of section .text:

00010630 <.text>:
   10630:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10634:	sub	sp, sp, #276	; 0x114
   10638:	cmp	r0, #2
   1063c:	str	r0, [sp, #8]
   10640:	str	r1, [sp, #12]
   10644:	ble	109a8 <__gmon_start__@plt+0x384>
   10648:	ldr	r2, [sp, #12]
   1064c:	ldr	r6, [pc, #948]	; 10a08 <__gmon_start__@plt+0x3e4>
   10650:	mov	r3, #0
   10654:	ldr	r0, [r2, #4]
   10658:	ldr	r2, [pc, #940]	; 10a0c <__gmon_start__@plt+0x3e8>
   1065c:	ldr	r1, [pc, #940]	; 10a10 <__gmon_start__@plt+0x3ec>
   10660:	str	r3, [r6]
   10664:	str	r3, [r2]
   10668:	bl	10600 <strcmp@plt>
   1066c:	ldr	r1, [pc, #928]	; 10a14 <__gmon_start__@plt+0x3f0>
   10670:	cmp	r0, #0
   10674:	moveq	r3, #1
   10678:	ldreq	r2, [pc, #908]	; 10a0c <__gmon_start__@plt+0x3e8>
   1067c:	moveq	r4, #2
   10680:	movne	r4, #1
   10684:	streq	r3, [r2]
   10688:	ldr	r3, [sp, #12]
   1068c:	ldr	r0, [r3, r4, lsl #2]
   10690:	bl	10600 <strcmp@plt>
   10694:	ldr	r1, [pc, #892]	; 10a18 <__gmon_start__@plt+0x3f4>
   10698:	cmp	r0, #0
   1069c:	moveq	r3, #1
   106a0:	streq	r3, [r6]
   106a4:	ldr	r3, [sp, #12]
   106a8:	addeq	r4, r4, #1
   106ac:	ldr	r0, [r3, r4, lsl #2]
   106b0:	bl	10594 <fopen@plt>
   106b4:	lsl	r3, r4, #2
   106b8:	subs	r5, r0, #0
   106bc:	beq	109e8 <__gmon_start__@plt+0x3c4>
   106c0:	ldr	r1, [sp, #8]
   106c4:	add	r2, r4, #1
   106c8:	cmp	r1, r2
   106cc:	str	r2, [sp, #4]
   106d0:	ble	108b0 <__gmon_start__@plt+0x28c>
   106d4:	ldr	r2, [sp, #12]
   106d8:	ldr	sl, [pc, #828]	; 10a1c <__gmon_start__@plt+0x3f8>
   106dc:	ldr	r9, [pc, #828]	; 10a20 <__gmon_start__@plt+0x3fc>
   106e0:	add	r3, r3, #4
   106e4:	add	r3, r2, r3
   106e8:	str	r3, [sp]
   106ec:	ldr	r3, [sp]
   106f0:	ldr	r1, [pc, #812]	; 10a24 <__gmon_start__@plt+0x400>
   106f4:	ldr	r0, [r3]
   106f8:	bl	10594 <fopen@plt>
   106fc:	subs	r7, r0, #0
   10700:	beq	10980 <__gmon_start__@plt+0x35c>
   10704:	ldr	r3, [sp]
   10708:	mov	r1, #47	; 0x2f
   1070c:	ldr	r8, [r3], #4
   10710:	mov	r0, r8
   10714:	str	r3, [sp]
   10718:	bl	1060c <strrchr@plt>
   1071c:	cmp	r0, #0
   10720:	beq	10914 <__gmon_start__@plt+0x2f0>
   10724:	add	r4, r0, #1
   10728:	mov	r0, r4
   1072c:	bl	105dc <strlen@plt>
   10730:	cmp	r0, #255	; 0xff
   10734:	bhi	1093c <__gmon_start__@plt+0x318>
   10738:	mov	r1, r8
   1073c:	add	r0, sp, #16
   10740:	bl	105ac <strcpy@plt>
   10744:	ldrb	r3, [sp, #16]
   10748:	cmp	r3, #0
   1074c:	addne	r2, sp, #16
   10750:	movne	r0, #95	; 0x5f
   10754:	beq	10774 <__gmon_start__@plt+0x150>
   10758:	sub	r1, r3, #45	; 0x2d
   1075c:	cmp	r3, #92	; 0x5c
   10760:	cmpne	r1, #2
   10764:	strbls	r0, [r2]
   10768:	ldrb	r3, [r2, #1]!
   1076c:	cmp	r3, #0
   10770:	bne	10758 <__gmon_start__@plt+0x134>
   10774:	mov	r2, #2
   10778:	mov	r1, #0
   1077c:	mov	r0, r7
   10780:	bl	1057c <fseek@plt>
   10784:	mov	r0, r7
   10788:	bl	105b8 <ftell@plt>
   1078c:	mov	r2, #0
   10790:	mov	r1, r2
   10794:	mov	r4, r0
   10798:	mov	r0, r7
   1079c:	bl	1057c <fseek@plt>
   107a0:	ldr	r3, [pc, #612]	; 10a0c <__gmon_start__@plt+0x3e8>
   107a4:	add	r2, sp, #16
   107a8:	ldr	r1, [pc, #632]	; 10a28 <__gmon_start__@plt+0x404>
   107ac:	ldr	r3, [r3]
   107b0:	mov	r0, r5
   107b4:	add	r3, r4, r3
   107b8:	bl	105e8 <fprintf@plt>
   107bc:	add	r2, sp, #16
   107c0:	ldr	r1, [pc, #612]	; 10a2c <__gmon_start__@plt+0x408>
   107c4:	mov	r0, r5
   107c8:	bl	105e8 <fprintf@plt>
   107cc:	ldr	r1, [r6]
   107d0:	ldr	r3, [pc, #600]	; 10a30 <__gmon_start__@plt+0x40c>
   107d4:	cmp	r1, #0
   107d8:	movne	r3, sl
   107dc:	mov	r1, r3
   107e0:	mov	r0, r5
   107e4:	bl	105e8 <fprintf@plt>
   107e8:	ldr	r3, [r6]
   107ec:	cmp	r3, #0
   107f0:	bne	10904 <__gmon_start__@plt+0x2e0>
   107f4:	mov	r0, r7
   107f8:	bl	10588 <fgetc@plt>
   107fc:	cmn	r0, #1
   10800:	beq	10864 <__gmon_start__@plt+0x240>
   10804:	ldr	r8, [pc, #552]	; 10a34 <__gmon_start__@plt+0x410>
   10808:	ldr	fp, [pc, #552]	; 10a38 <__gmon_start__@plt+0x414>
   1080c:	mov	r4, #0
   10810:	ldr	r1, [r6]
   10814:	mov	r2, r0
   10818:	cmp	r1, #0
   1081c:	moveq	r1, r9
   10820:	movne	r1, r8
   10824:	mov	r0, r5
   10828:	bl	105e8 <fprintf@plt>
   1082c:	add	r4, r4, r0
   10830:	cmp	r4, #72	; 0x48
   10834:	mov	r0, r5
   10838:	ble	10854 <__gmon_start__@plt+0x230>
   1083c:	ldr	r1, [r6]
   10840:	mov	r4, #0
   10844:	cmp	r1, r4
   10848:	moveq	r1, sl
   1084c:	movne	r1, fp
   10850:	bl	105e8 <fprintf@plt>
   10854:	mov	r0, r7
   10858:	bl	10588 <fgetc@plt>
   1085c:	cmn	r0, #1
   10860:	bne	10810 <__gmon_start__@plt+0x1ec>
   10864:	ldr	r3, [r6]
   10868:	cmp	r3, #0
   1086c:	bne	108c8 <__gmon_start__@plt+0x2a4>
   10870:	ldr	r3, [pc, #404]	; 10a0c <__gmon_start__@plt+0x3e8>
   10874:	ldr	r3, [r3]
   10878:	cmp	r3, #0
   1087c:	beq	108fc <__gmon_start__@plt+0x2d8>
   10880:	ldr	r1, [pc, #436]	; 10a3c <__gmon_start__@plt+0x418>
   10884:	mov	r0, r5
   10888:	bl	105e8 <fprintf@plt>
   1088c:	ldr	r3, [sp, #4]
   10890:	mov	r0, r7
   10894:	add	r3, r3, #1
   10898:	mov	r4, r3
   1089c:	str	r3, [sp, #4]
   108a0:	bl	105f4 <fclose@plt>
   108a4:	ldr	r2, [sp, #8]
   108a8:	cmp	r2, r4
   108ac:	bne	106ec <__gmon_start__@plt+0xc8>
   108b0:	mov	r0, r5
   108b4:	bl	105f4 <fclose@plt>
   108b8:	cmp	r0, #0
   108bc:	bne	109c8 <__gmon_start__@plt+0x3a4>
   108c0:	add	sp, sp, #276	; 0x114
   108c4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   108c8:	mov	r3, r5
   108cc:	mov	r2, #2
   108d0:	mov	r1, #1
   108d4:	ldr	r0, [pc, #356]	; 10a40 <__gmon_start__@plt+0x41c>
   108d8:	bl	105d0 <fwrite@plt>
   108dc:	ldr	r3, [pc, #296]	; 10a0c <__gmon_start__@plt+0x3e8>
   108e0:	ldr	r3, [r3]
   108e4:	cmp	r3, #0
   108e8:	bne	10968 <__gmon_start__@plt+0x344>
   108ec:	ldr	r3, [r6]
   108f0:	cmp	r3, #0
   108f4:	ldrne	r1, [pc, #328]	; 10a44 <__gmon_start__@plt+0x420>
   108f8:	bne	10884 <__gmon_start__@plt+0x260>
   108fc:	ldr	r1, [pc, #324]	; 10a48 <__gmon_start__@plt+0x424>
   10900:	b	10884 <__gmon_start__@plt+0x260>
   10904:	mov	r1, r5
   10908:	mov	r0, #34	; 0x22
   1090c:	bl	105c4 <fputc@plt>
   10910:	b	107f4 <__gmon_start__@plt+0x1d0>
   10914:	mov	r1, #92	; 0x5c
   10918:	mov	r0, r8
   1091c:	bl	1060c <strrchr@plt>
   10920:	cmp	r0, #0
   10924:	moveq	r4, r8
   10928:	bne	10724 <__gmon_start__@plt+0x100>
   1092c:	mov	r0, r4
   10930:	bl	105dc <strlen@plt>
   10934:	cmp	r0, #255	; 0xff
   10938:	bls	10738 <__gmon_start__@plt+0x114>
   1093c:	mov	r0, r7
   10940:	bl	105f4 <fclose@plt>
   10944:	mov	r0, r5
   10948:	bl	105f4 <fclose@plt>
   1094c:	ldr	r3, [pc, #248]	; 10a4c <__gmon_start__@plt+0x428>
   10950:	mov	r2, r4
   10954:	ldr	r1, [pc, #244]	; 10a50 <__gmon_start__@plt+0x42c>
   10958:	ldr	r0, [r3]
   1095c:	bl	105e8 <fprintf@plt>
   10960:	mov	r0, #1
   10964:	b	108c0 <__gmon_start__@plt+0x29c>
   10968:	ldr	r2, [r6]
   1096c:	ldr	r3, [pc, #208]	; 10a44 <__gmon_start__@plt+0x420>
   10970:	cmp	r2, #0
   10974:	ldr	r1, [pc, #192]	; 10a3c <__gmon_start__@plt+0x418>
   10978:	movne	r1, r3
   1097c:	b	10884 <__gmon_start__@plt+0x260>
   10980:	mov	r0, r5
   10984:	bl	105f4 <fclose@plt>
   10988:	ldr	r3, [pc, #188]	; 10a4c <__gmon_start__@plt+0x428>
   1098c:	ldr	r2, [sp]
   10990:	ldr	r1, [pc, #188]	; 10a54 <__gmon_start__@plt+0x430>
   10994:	ldr	r0, [r3]
   10998:	ldr	r2, [r2]
   1099c:	bl	105e8 <fprintf@plt>
   109a0:	mov	r0, #1
   109a4:	b	108c0 <__gmon_start__@plt+0x29c>
   109a8:	ldr	r3, [pc, #156]	; 10a4c <__gmon_start__@plt+0x428>
   109ac:	mov	r2, #44	; 0x2c
   109b0:	mov	r1, #1
   109b4:	ldr	r3, [r3]
   109b8:	ldr	r0, [pc, #152]	; 10a58 <__gmon_start__@plt+0x434>
   109bc:	bl	105d0 <fwrite@plt>
   109c0:	mov	r0, #1
   109c4:	b	108c0 <__gmon_start__@plt+0x29c>
   109c8:	ldr	r3, [pc, #124]	; 10a4c <__gmon_start__@plt+0x428>
   109cc:	ldr	r2, [sp, #12]
   109d0:	ldr	r1, [pc, #132]	; 10a5c <__gmon_start__@plt+0x438>
   109d4:	ldr	r0, [r3]
   109d8:	ldr	r2, [r2, #4]
   109dc:	bl	105e8 <fprintf@plt>
   109e0:	mov	r0, #1
   109e4:	b	108c0 <__gmon_start__@plt+0x29c>
   109e8:	ldr	r3, [pc, #92]	; 10a4c <__gmon_start__@plt+0x428>
   109ec:	ldr	r2, [sp, #12]
   109f0:	ldr	r1, [pc, #104]	; 10a60 <__gmon_start__@plt+0x43c>
   109f4:	ldr	r0, [r3]
   109f8:	ldr	r2, [r2, r4, lsl #2]
   109fc:	bl	105e8 <fprintf@plt>
   10a00:	mov	r0, #1
   10a04:	b	108c0 <__gmon_start__@plt+0x29c>
   10a08:	andeq	r1, r2, r8, asr r0
   10a0c:	andeq	r1, r2, ip, asr r0
   10a10:	andeq	r0, r1, ip, asr #24
   10a14:	andeq	r0, r1, r0, asr ip
   10a18:	andeq	r0, r1, r4, asr ip
   10a1c:	andeq	r0, r1, r0, lsl #25
   10a20:	andeq	r0, r1, r4, lsl #24
   10a24:	andeq	r0, r1, r4, lsl #25
   10a28:	ldrdeq	r0, [r1], -r8
   10a2c:	strdeq	r0, [r1], -r4
   10a30:	strdeq	r0, [r1], -r8
   10a34:	strdeq	r0, [r1], -ip
   10a38:	andeq	r0, r1, r8, lsl #24
   10a3c:	andeq	r0, r1, r4, lsl ip
   10a40:	andeq	r0, r1, r4, lsl sp
   10a44:	andeq	r0, r1, ip, lsl #24
   10a48:	andeq	r0, r1, r0, lsl ip
   10a4c:	andeq	r1, r2, r0, asr r0
   10a50:			; <UNDEFINED> instruction: 0x00010cb4
   10a54:	andeq	r0, r1, r8, lsl #25
   10a58:	andeq	r0, r1, ip, lsl ip
   10a5c:	andeq	r0, r1, r8, lsl sp
   10a60:	andeq	r0, r1, r8, asr ip
   10a64:	mov	fp, #0
   10a68:	mov	lr, #0
   10a6c:	pop	{r1}		; (ldr r1, [sp], #4)
   10a70:	mov	r2, sp
   10a74:	push	{r2}		; (str r2, [sp, #-4]!)
   10a78:	push	{r0}		; (str r0, [sp, #-4]!)
   10a7c:	ldr	ip, [pc, #16]	; 10a94 <__gmon_start__@plt+0x470>
   10a80:	push	{ip}		; (str ip, [sp, #-4]!)
   10a84:	ldr	r0, [pc, #12]	; 10a98 <__gmon_start__@plt+0x474>
   10a88:	ldr	r3, [pc, #12]	; 10a9c <__gmon_start__@plt+0x478>
   10a8c:	bl	10618 <__libc_start_main@plt>
   10a90:	bl	105a0 <abort@plt>
   10a94:	andeq	r0, r1, ip, ror #23
   10a98:	andeq	r0, r1, r0, lsr r6
   10a9c:	andeq	r0, r1, ip, lsl #23
   10aa0:	ldr	r3, [pc, #20]	; 10abc <__gmon_start__@plt+0x498>
   10aa4:	ldr	r2, [pc, #20]	; 10ac0 <__gmon_start__@plt+0x49c>
   10aa8:	add	r3, pc, r3
   10aac:	ldr	r2, [r3, r2]
   10ab0:	cmp	r2, #0
   10ab4:	bxeq	lr
   10ab8:	b	10624 <__gmon_start__@plt>
   10abc:	andeq	r0, r1, r0, asr r5
   10ac0:	andeq	r0, r0, r8, asr #32
   10ac4:	ldr	r3, [pc, #28]	; 10ae8 <__gmon_start__@plt+0x4c4>
   10ac8:	ldr	r0, [pc, #28]	; 10aec <__gmon_start__@plt+0x4c8>
   10acc:	sub	r3, r3, r0
   10ad0:	cmp	r3, #6
   10ad4:	bxls	lr
   10ad8:	ldr	r3, [pc, #16]	; 10af0 <__gmon_start__@plt+0x4cc>
   10adc:	cmp	r3, #0
   10ae0:	bxeq	lr
   10ae4:	bx	r3
   10ae8:	andeq	r1, r2, pc, asr #32
   10aec:	andeq	r1, r2, ip, asr #32
   10af0:	andeq	r0, r0, r0
   10af4:	ldr	r1, [pc, #36]	; 10b20 <__gmon_start__@plt+0x4fc>
   10af8:	ldr	r0, [pc, #36]	; 10b24 <__gmon_start__@plt+0x500>
   10afc:	sub	r1, r1, r0
   10b00:	asr	r1, r1, #2
   10b04:	add	r1, r1, r1, lsr #31
   10b08:	asrs	r1, r1, #1
   10b0c:	bxeq	lr
   10b10:	ldr	r3, [pc, #16]	; 10b28 <__gmon_start__@plt+0x504>
   10b14:	cmp	r3, #0
   10b18:	bxeq	lr
   10b1c:	bx	r3
   10b20:	andeq	r1, r2, ip, asr #32
   10b24:	andeq	r1, r2, ip, asr #32
   10b28:	andeq	r0, r0, r0
   10b2c:	push	{r4, lr}
   10b30:	ldr	r4, [pc, #24]	; 10b50 <__gmon_start__@plt+0x52c>
   10b34:	ldrb	r3, [r4]
   10b38:	cmp	r3, #0
   10b3c:	popne	{r4, pc}
   10b40:	bl	10ac4 <__gmon_start__@plt+0x4a0>
   10b44:	mov	r3, #1
   10b48:	strb	r3, [r4]
   10b4c:	pop	{r4, pc}
   10b50:	andeq	r1, r2, r4, asr r0
   10b54:	ldr	r0, [pc, #40]	; 10b84 <__gmon_start__@plt+0x560>
   10b58:	ldr	r3, [r0]
   10b5c:	cmp	r3, #0
   10b60:	bne	10b68 <__gmon_start__@plt+0x544>
   10b64:	b	10af4 <__gmon_start__@plt+0x4d0>
   10b68:	ldr	r3, [pc, #24]	; 10b88 <__gmon_start__@plt+0x564>
   10b6c:	cmp	r3, #0
   10b70:	beq	10b64 <__gmon_start__@plt+0x540>
   10b74:	push	{r4, lr}
   10b78:	blx	r3
   10b7c:	pop	{r4, lr}
   10b80:	b	10af4 <__gmon_start__@plt+0x4d0>
   10b84:	ldrdeq	r0, [r2], -r4
   10b88:	andeq	r0, r0, r0
   10b8c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   10b90:	mov	r7, r0
   10b94:	ldr	r6, [pc, #72]	; 10be4 <__gmon_start__@plt+0x5c0>
   10b98:	ldr	r5, [pc, #72]	; 10be8 <__gmon_start__@plt+0x5c4>
   10b9c:	add	r6, pc, r6
   10ba0:	add	r5, pc, r5
   10ba4:	sub	r6, r6, r5
   10ba8:	mov	r8, r1
   10bac:	mov	r9, r2
   10bb0:	bl	1055c <fseek@plt-0x20>
   10bb4:	asrs	r6, r6, #2
   10bb8:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   10bbc:	mov	r4, #0
   10bc0:	add	r4, r4, #1
   10bc4:	ldr	r3, [r5], #4
   10bc8:	mov	r2, r9
   10bcc:	mov	r1, r8
   10bd0:	mov	r0, r7
   10bd4:	blx	r3
   10bd8:	cmp	r6, r4
   10bdc:	bne	10bc0 <__gmon_start__@plt+0x59c>
   10be0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   10be4:	andeq	r0, r1, ip, lsr #6
   10be8:	andeq	r0, r1, r4, lsr #6
   10bec:	bx	lr

Disassembly of section .fini:

00010bf0 <.fini>:
   10bf0:	push	{r3, lr}
   10bf4:	pop	{r3, pc}
