
../repos/daq-2.0.7/os-daq-modules/.libs/daq_ipfw.so:     file format elf32-littlearm


Disassembly of section .init:

00000634 <_init>:
 634:	push	{r3, lr}
 638:	bl	75c <call_weak_fn>
 63c:	pop	{r3, pc}

Disassembly of section .plt:

00000640 <.plt>:
 640:	push	{lr}		; (str lr, [sp, #-4]!)
 644:	ldr	lr, [pc, #4]	; 650 <.plt+0x10>
 648:	add	lr, pc, lr
 64c:	ldr	pc, [lr, #8]!
 650:	.word	0x000119b0

00000654 <calloc@plt>:
 654:	add	ip, pc, #0, 12
 658:	add	ip, ip, #69632	; 0x11000
 65c:	ldr	pc, [ip, #2480]!	; 0x9b0

00000660 <strcmp@plt>:
 660:	add	ip, pc, #0, 12
 664:	add	ip, ip, #69632	; 0x11000
 668:	ldr	pc, [ip, #2472]!	; 0x9a8

0000066c <__cxa_finalize@plt>:
 66c:	add	ip, pc, #0, 12
 670:	add	ip, ip, #69632	; 0x11000
 674:	ldr	pc, [ip, #2464]!	; 0x9a0

00000678 <strtol@plt>:
 678:	add	ip, pc, #0, 12
 67c:	add	ip, ip, #69632	; 0x11000
 680:	ldr	pc, [ip, #2456]!	; 0x998

00000684 <free@plt>:
 684:	add	ip, pc, #0, 12
 688:	add	ip, ip, #69632	; 0x11000
 68c:	ldr	pc, [ip, #2448]!	; 0x990

00000690 <memcpy@plt>:
 690:	add	ip, pc, #0, 12
 694:	add	ip, ip, #69632	; 0x11000
 698:	ldr	pc, [ip, #2440]!	; 0x988

0000069c <select@plt>:
 69c:	add	ip, pc, #0, 12
 6a0:	add	ip, ip, #69632	; 0x11000
 6a4:	ldr	pc, [ip, #2432]!	; 0x980

000006a8 <recvfrom@plt>:
 6a8:	add	ip, pc, #0, 12
 6ac:	add	ip, ip, #69632	; 0x11000
 6b0:	ldr	pc, [ip, #2424]!	; 0x978

000006b4 <strdup@plt>:
 6b4:	add	ip, pc, #0, 12
 6b8:	add	ip, ip, #69632	; 0x11000
 6bc:	ldr	pc, [ip, #2416]!	; 0x970

000006c0 <gettimeofday@plt>:
 6c0:	add	ip, pc, #0, 12
 6c4:	add	ip, ip, #69632	; 0x11000
 6c8:	ldr	pc, [ip, #2408]!	; 0x968

000006cc <malloc@plt>:
 6cc:	add	ip, pc, #0, 12
 6d0:	add	ip, ip, #69632	; 0x11000
 6d4:	ldr	pc, [ip, #2400]!	; 0x960

000006d8 <sfbpf_compile@plt>:
 6d8:	add	ip, pc, #0, 12
 6dc:	add	ip, ip, #69632	; 0x11000
 6e0:	ldr	pc, [ip, #2392]!	; 0x958

000006e4 <strerror@plt>:
 6e4:	add	ip, pc, #0, 12
 6e8:	add	ip, ip, #69632	; 0x11000
 6ec:	ldr	pc, [ip, #2384]!	; 0x950

000006f0 <__gmon_start__@plt>:
 6f0:	add	ip, pc, #0, 12
 6f4:	add	ip, ip, #69632	; 0x11000
 6f8:	ldr	pc, [ip, #2376]!	; 0x948

000006fc <__errno_location@plt>:
 6fc:	add	ip, pc, #0, 12
 700:	add	ip, ip, #69632	; 0x11000
 704:	ldr	pc, [ip, #2368]!	; 0x940

00000708 <snprintf@plt>:
 708:	add	ip, pc, #0, 12
 70c:	add	ip, ip, #69632	; 0x11000
 710:	ldr	pc, [ip, #2360]!	; 0x938

00000714 <bind@plt>:
 714:	add	ip, pc, #0, 12
 718:	add	ip, ip, #69632	; 0x11000
 71c:	ldr	pc, [ip, #2352]!	; 0x930

00000720 <memset@plt>:
 720:	add	ip, pc, #0, 12
 724:	add	ip, ip, #69632	; 0x11000
 728:	ldr	pc, [ip, #2344]!	; 0x928

0000072c <sendto@plt>:
 72c:	add	ip, pc, #0, 12
 730:	add	ip, ip, #69632	; 0x11000
 734:	ldr	pc, [ip, #2336]!	; 0x920

00000738 <sfbpf_filter@plt>:
 738:	add	ip, pc, #0, 12
 73c:	add	ip, ip, #69632	; 0x11000
 740:	ldr	pc, [ip, #2328]!	; 0x918

00000744 <socket@plt>:
 744:	add	ip, pc, #0, 12
 748:	add	ip, ip, #69632	; 0x11000
 74c:	ldr	pc, [ip, #2320]!	; 0x910

00000750 <close@plt>:
 750:	add	ip, pc, #0, 12
 754:	add	ip, ip, #69632	; 0x11000
 758:	ldr	pc, [ip, #2312]!	; 0x908

Disassembly of section .text:

0000075c <call_weak_fn>:
     75c:	ldr	r3, [pc, #20]	; 778 <call_weak_fn+0x1c>
     760:	ldr	r2, [pc, #20]	; 77c <call_weak_fn+0x20>
     764:	add	r3, pc, r3
     768:	ldr	r2, [r3, r2]
     76c:	cmp	r2, #0
     770:	bxeq	lr
     774:	b	6f0 <__gmon_start__@plt>
     778:	.word	0x00011894
     77c:	.word	0x0000006c

00000780 <deregister_tm_clones>:
     780:	ldr	r0, [pc, #44]	; 7b4 <deregister_tm_clones+0x34>
     784:	ldr	r3, [pc, #44]	; 7b8 <deregister_tm_clones+0x38>
     788:	add	r0, pc, r0
     78c:	add	r3, pc, r3
     790:	cmp	r3, r0
     794:	ldr	r3, [pc, #32]	; 7bc <deregister_tm_clones+0x3c>
     798:	add	r3, pc, r3
     79c:	bxeq	lr
     7a0:	ldr	r2, [pc, #24]	; 7c0 <deregister_tm_clones+0x40>
     7a4:	ldr	r3, [r3, r2]
     7a8:	cmp	r3, #0
     7ac:	bxeq	lr
     7b0:	bx	r3
     7b4:	.word	0x00011950
     7b8:	.word	0x0001194c
     7bc:	.word	0x00011860
     7c0:	.word	0x00000068

000007c4 <register_tm_clones>:
     7c4:	ldr	r0, [pc, #56]	; 804 <register_tm_clones+0x40>
     7c8:	ldr	r3, [pc, #56]	; 808 <register_tm_clones+0x44>
     7cc:	add	r0, pc, r0
     7d0:	add	r3, pc, r3
     7d4:	sub	r1, r3, r0
     7d8:	ldr	r3, [pc, #44]	; 80c <register_tm_clones+0x48>
     7dc:	asr	r1, r1, #2
     7e0:	add	r3, pc, r3
     7e4:	add	r1, r1, r1, lsr #31
     7e8:	asrs	r1, r1, #1
     7ec:	bxeq	lr
     7f0:	ldr	r2, [pc, #24]	; 810 <register_tm_clones+0x4c>
     7f4:	ldr	r3, [r3, r2]
     7f8:	cmp	r3, #0
     7fc:	bxeq	lr
     800:	bx	r3
     804:	.word	0x0001190c
     808:	.word	0x00011908
     80c:	.word	0x00011818
     810:	.word	0x00000070

00000814 <__do_global_dtors_aux>:
     814:	ldr	r3, [pc, #76]	; 868 <__do_global_dtors_aux+0x54>
     818:	ldr	r2, [pc, #76]	; 86c <__do_global_dtors_aux+0x58>
     81c:	add	r3, pc, r3
     820:	add	r2, pc, r2
     824:	ldrb	r3, [r3]
     828:	cmp	r3, #0
     82c:	bxne	lr
     830:	ldr	r3, [pc, #56]	; 870 <__do_global_dtors_aux+0x5c>
     834:	push	{r4, lr}
     838:	ldr	r3, [r2, r3]
     83c:	cmp	r3, #0
     840:	beq	850 <__do_global_dtors_aux+0x3c>
     844:	ldr	r3, [pc, #40]	; 874 <__do_global_dtors_aux+0x60>
     848:	ldr	r0, [pc, r3]
     84c:	bl	66c <__cxa_finalize@plt>
     850:	bl	780 <deregister_tm_clones>
     854:	ldr	r3, [pc, #28]	; 878 <__do_global_dtors_aux+0x64>
     858:	mov	r2, #1
     85c:	add	r3, pc, r3
     860:	strb	r2, [r3]
     864:	pop	{r4, pc}
     868:	.word	0x000118bc
     86c:	.word	0x000117d8
     870:	.word	0x00000064
     874:	.word	0x00011824
     878:	.word	0x0001187c

0000087c <frame_dummy>:
     87c:	b	7c4 <register_tm_clones>

00000880 <ipfw_daq_breakloop>:
     880:	mov	r3, #0
     884:	str	r3, [r0, #12]
     888:	mov	r0, r3
     88c:	bx	lr

00000890 <ipfw_daq_check_status>:
     890:	ldr	r0, [r0, #316]	; 0x13c
     894:	bx	lr

00000898 <ipfw_daq_get_stats>:
     898:	str	r4, [sp, #-8]!
     89c:	str	lr, [sp, #4]
     8a0:	mov	r3, r1
     8a4:	mov	r2, #96	; 0x60
     8a8:	add	r1, r0, #320	; 0x140
     8ac:	mov	r0, r3
     8b0:	bl	690 <memcpy@plt>
     8b4:	mov	r0, #0
     8b8:	ldr	r4, [sp]
     8bc:	add	sp, sp, #4
     8c0:	pop	{pc}		; (ldr pc, [sp], #4)

000008c4 <ipfw_daq_get_snaplen>:
     8c4:	ldr	r0, [r0, #24]
     8c8:	bx	lr

000008cc <ipfw_daq_get_capabilities>:
     8cc:	movw	r0, #743	; 0x2e7
     8d0:	bx	lr

000008d4 <ipfw_daq_get_datalink_type>:
     8d4:	mov	r0, #228	; 0xe4
     8d8:	bx	lr

000008dc <ipfw_daq_get_errbuf>:
     8dc:	add	r0, r0, #36	; 0x24
     8e0:	bx	lr

000008e4 <ipfw_daq_get_device_index>:
     8e4:	mvn	r0, #3
     8e8:	bx	lr

000008ec <ipfw_daq_set_errbuf>:
     8ec:	str	r4, [sp, #-8]!
     8f0:	str	lr, [sp, #4]
     8f4:	add	r0, r0, #36	; 0x24
     8f8:	subs	r3, r1, #0
     8fc:	beq	91c <ipfw_daq_set_errbuf+0x30>
     900:	ldr	r2, [pc, #32]	; 928 <ipfw_daq_set_errbuf+0x3c>
     904:	add	r2, pc, r2
     908:	mov	r1, #256	; 0x100
     90c:	bl	708 <snprintf@plt>
     910:	ldr	r4, [sp]
     914:	add	sp, sp, #4
     918:	pop	{pc}		; (ldr pc, [sp], #4)
     91c:	ldr	r3, [pc, #8]	; 92c <ipfw_daq_set_errbuf+0x40>
     920:	add	r3, pc, r3
     924:	b	900 <ipfw_daq_set_errbuf+0x14>
     928:	.word	0x00000968
     92c:	.word	0x000009ec

00000930 <ipfw_daq_reset_stats>:
     930:	str	r4, [sp, #-8]!
     934:	str	lr, [sp, #4]
     938:	mov	r2, #96	; 0x60
     93c:	mov	r1, #0
     940:	add	r0, r0, #320	; 0x140
     944:	bl	720 <memset@plt>
     948:	ldr	r4, [sp]
     94c:	add	sp, sp, #4
     950:	pop	{pc}		; (ldr pc, [sp], #4)

00000954 <ipfw_daq_shutdown>:
     954:	str	r4, [sp, #-8]!
     958:	str	lr, [sp, #4]
     95c:	mov	r4, r0
     960:	ldr	r0, [r0, #32]
     964:	cmp	r0, #0
     968:	beq	970 <ipfw_daq_shutdown+0x1c>
     96c:	bl	684 <free@plt>
     970:	ldr	r0, [r4, #28]
     974:	cmp	r0, #0
     978:	beq	980 <ipfw_daq_shutdown+0x2c>
     97c:	bl	684 <free@plt>
     980:	mov	r0, r4
     984:	bl	684 <free@plt>
     988:	ldr	r4, [sp]
     98c:	add	sp, sp, #4
     990:	pop	{pc}		; (ldr pc, [sp], #4)

00000994 <ipfw_daq_stop>:
     994:	str	r4, [sp, #-8]!
     998:	str	lr, [sp, #4]
     99c:	mov	r4, r0
     9a0:	ldr	r0, [r0]
     9a4:	bl	750 <close@plt>
     9a8:	mvn	r3, #0
     9ac:	str	r3, [r4]
     9b0:	mov	r3, #3
     9b4:	str	r3, [r4, #316]	; 0x13c
     9b8:	mov	r0, #0
     9bc:	ldr	r4, [sp]
     9c0:	add	sp, sp, #4
     9c4:	pop	{pc}		; (ldr pc, [sp], #4)

000009c8 <ipfw_daq_forward>:
     9c8:	strd	r4, [sp, #-12]!
     9cc:	str	lr, [sp, #8]
     9d0:	sub	sp, sp, #12
     9d4:	mov	r5, r0
     9d8:	mov	r1, r2
     9dc:	mov	r2, r3
     9e0:	mov	r3, r0
     9e4:	ldr	r0, [r3], #300	; 0x12c
     9e8:	mov	ip, #16
     9ec:	str	ip, [sp, #4]
     9f0:	str	r3, [sp]
     9f4:	mov	r3, #0
     9f8:	bl	72c <sendto@plt>
     9fc:	cmn	r0, #1
     a00:	movne	r4, #0
     a04:	beq	a1c <ipfw_daq_forward+0x54>
     a08:	mov	r0, r4
     a0c:	add	sp, sp, #12
     a10:	ldrd	r4, [sp]
     a14:	add	sp, sp, #8
     a18:	pop	{pc}		; (ldr pc, [sp], #4)
     a1c:	mov	r4, r0
     a20:	bl	6fc <__errno_location@plt>
     a24:	ldr	r0, [r0]
     a28:	bl	6e4 <strerror@plt>
     a2c:	str	r0, [sp]
     a30:	ldr	r3, [pc, #24]	; a50 <ipfw_daq_forward+0x88>
     a34:	add	r3, pc, r3
     a38:	ldr	r2, [pc, #20]	; a54 <ipfw_daq_forward+0x8c>
     a3c:	add	r2, pc, r2
     a40:	mov	r1, #256	; 0x100
     a44:	add	r0, r5, #36	; 0x24
     a48:	bl	708 <snprintf@plt>
     a4c:	b	a08 <ipfw_daq_forward+0x40>
     a50:	.word	0x000007bc
     a54:	.word	0x00000834

00000a58 <ipfw_daq_inject>:
     a58:	str	r4, [sp, #-8]!
     a5c:	str	lr, [sp, #4]
     a60:	sub	sp, sp, #8
     a64:	mov	r4, r0
     a68:	mov	ip, #0
     a6c:	str	ip, [sp]
     a70:	bl	9c8 <ipfw_daq_forward>
     a74:	cmp	r0, #0
     a78:	bne	a94 <ipfw_daq_inject+0x3c>
     a7c:	ldr	r2, [r4, #352]	; 0x160
     a80:	ldr	r1, [r4, #356]	; 0x164
     a84:	adds	r2, r2, #1
     a88:	adc	r1, r1, #0
     a8c:	str	r2, [r4, #352]	; 0x160
     a90:	str	r1, [r4, #356]	; 0x164
     a94:	add	sp, sp, #8
     a98:	ldr	r4, [sp]
     a9c:	add	sp, sp, #4
     aa0:	pop	{pc}		; (ldr pc, [sp], #4)

00000aa4 <ipfw_daq_acquire>:
     aa4:	strd	r4, [sp, #-32]!	; 0xffffffe0
     aa8:	strd	r6, [sp, #8]
     aac:	strd	r8, [sp, #16]
     ab0:	str	sl, [sp, #24]
     ab4:	str	lr, [sp, #28]
     ab8:	sub	sp, sp, #200	; 0xc8
     abc:	mov	r6, r0
     ac0:	mov	sl, r2
     ac4:	mov	r3, #0
     ac8:	str	r3, [sp, #68]	; 0x44
     acc:	cmp	r1, #0
     ad0:	mvneq	r1, #0
     ad4:	str	r1, [r0, #12]
     ad8:	mov	r8, r3
     adc:	add	r5, sp, #196	; 0xc4
     ae0:	ldr	r9, [pc, #744]	; dd0 <ipfw_daq_acquire+0x32c>
     ae4:	add	r9, pc, r9
     ae8:	mov	r4, #0
     aec:	mov	r7, #1
     af0:	ldr	r3, [r6, #12]
     af4:	cmp	r3, r8
     af8:	movle	r2, #0
     afc:	movgt	r2, #1
     b00:	orrs	r3, r2, r3, lsr #31
     b04:	beq	dc8 <ipfw_daq_acquire+0x324>
     b08:	add	r3, sp, #68	; 0x44
     b0c:	str	r4, [r3, #4]!
     b10:	cmp	r3, r5
     b14:	bne	b0c <ipfw_daq_acquire+0x68>
     b18:	ldr	r0, [r6]
     b1c:	add	r3, r0, #31
     b20:	cmp	r0, #0
     b24:	movge	r3, r0
     b28:	asr	r3, r3, #5
     b2c:	add	r2, sp, #200	; 0xc8
     b30:	add	r3, r2, r3, lsl #2
     b34:	rsbs	r2, r0, #0
     b38:	and	r1, r0, #31
     b3c:	and	r2, r2, #31
     b40:	rsbpl	r1, r2, #0
     b44:	ldr	r2, [r3, #-128]	; 0xffffff80
     b48:	orr	r2, r2, r7, lsl r1
     b4c:	str	r2, [r3, #-128]	; 0xffffff80
     b50:	ldr	r3, [r6, #20]
     b54:	str	r3, [sp, #64]	; 0x40
     b58:	add	r3, sp, #64	; 0x40
     b5c:	str	r3, [sp]
     b60:	mov	r3, r4
     b64:	mov	r2, r4
     b68:	add	r1, sp, #72	; 0x48
     b6c:	add	r0, r0, #1
     b70:	bl	69c <select@plt>
     b74:	cmp	r0, #0
     b78:	blt	cc0 <ipfw_daq_acquire+0x21c>
     b7c:	ldr	r0, [r6]
     b80:	add	r3, r0, #31
     b84:	cmp	r0, #0
     b88:	movge	r3, r0
     b8c:	asr	r3, r3, #5
     b90:	add	r2, sp, #200	; 0xc8
     b94:	add	r3, r2, r3, lsl #2
     b98:	rsbs	r1, r0, #0
     b9c:	and	r2, r0, #31
     ba0:	and	r1, r1, #31
     ba4:	rsbpl	r2, r1, #0
     ba8:	ldr	r3, [r3, #-128]	; 0xffffff80
     bac:	ands	r3, r3, r7, lsl r2
     bb0:	beq	af0 <ipfw_daq_acquire+0x4c>
     bb4:	mov	r3, #16
     bb8:	str	r3, [sp, #8]
     bbc:	add	r3, r6, #300	; 0x12c
     bc0:	add	r2, sp, #8
     bc4:	str	r2, [sp, #4]
     bc8:	str	r3, [sp]
     bcc:	mov	r3, #0
     bd0:	ldr	r2, [r6, #24]
     bd4:	ldr	r1, [r6, #28]
     bd8:	bl	6a8 <recvfrom@plt>
     bdc:	mov	r4, r0
     be0:	cmn	r0, #1
     be4:	bne	bf8 <ipfw_daq_acquire+0x154>
     be8:	bl	6fc <__errno_location@plt>
     bec:	ldr	r0, [r0]
     bf0:	cmp	r0, #4
     bf4:	bne	d24 <ipfw_daq_acquire+0x280>
     bf8:	mov	r2, #0
     bfc:	mov	r3, #0
     c00:	strd	r2, [r9]
     c04:	mov	r1, #0
     c08:	mov	r0, r9
     c0c:	bl	6c0 <gettimeofday@plt>
     c10:	ldr	r3, [r9]
     c14:	str	r3, [sp, #12]
     c18:	ldr	r3, [r9, #4]
     c1c:	str	r3, [sp, #16]
     c20:	str	r4, [sp, #20]
     c24:	str	r4, [sp, #24]
     c28:	mvn	r3, #0
     c2c:	str	r3, [sp, #28]
     c30:	str	r3, [sp, #32]
     c34:	str	r3, [sp, #36]	; 0x24
     c38:	str	r3, [sp, #40]	; 0x28
     c3c:	mov	r3, #0
     c40:	str	r3, [sp, #44]	; 0x2c
     c44:	strh	r3, [sp, #60]	; 0x3c
     c48:	ldr	r3, [r6, #320]	; 0x140
     c4c:	ldr	r1, [r6, #324]	; 0x144
     c50:	adds	r3, r3, #1
     c54:	adc	r1, r1, #0
     c58:	str	r3, [r6, #320]	; 0x140
     c5c:	str	r1, [r6, #324]	; 0x144
     c60:	ldr	r0, [r6, #296]	; 0x128
     c64:	cmp	r0, #0
     c68:	beq	d50 <ipfw_daq_acquire+0x2ac>
     c6c:	mov	r3, r4
     c70:	mov	r2, r4
     c74:	ldr	r1, [r6, #28]
     c78:	bl	738 <sfbpf_filter@plt>
     c7c:	cmp	r0, #0
     c80:	bne	d50 <ipfw_daq_acquire+0x2ac>
     c84:	ldr	r3, [r6, #344]	; 0x158
     c88:	ldr	r1, [r6, #348]	; 0x15c
     c8c:	adds	r3, r3, #1
     c90:	adc	r1, r1, #0
     c94:	str	r3, [r6, #344]	; 0x158
     c98:	str	r1, [r6, #348]	; 0x15c
     c9c:	mov	r3, #0
     ca0:	str	r3, [sp]
     ca4:	ldr	r3, [sp, #24]
     ca8:	ldr	r2, [r6, #28]
     cac:	add	r1, sp, #12
     cb0:	mov	r0, r6
     cb4:	bl	9c8 <ipfw_daq_forward>
     cb8:	add	r8, r8, #1
     cbc:	b	ae8 <ipfw_daq_acquire+0x44>
     cc0:	bl	6fc <__errno_location@plt>
     cc4:	ldr	r0, [r0]
     cc8:	cmp	r0, #4
     ccc:	moveq	r4, #0
     cd0:	bne	cf4 <ipfw_daq_acquire+0x250>
     cd4:	mov	r0, r4
     cd8:	add	sp, sp, #200	; 0xc8
     cdc:	ldrd	r4, [sp]
     ce0:	ldrd	r6, [sp, #8]
     ce4:	ldrd	r8, [sp, #16]
     ce8:	ldr	sl, [sp, #24]
     cec:	add	sp, sp, #28
     cf0:	pop	{pc}		; (ldr pc, [sp], #4)
     cf4:	bl	6e4 <strerror@plt>
     cf8:	str	r0, [sp]
     cfc:	ldr	r3, [pc, #208]	; dd4 <ipfw_daq_acquire+0x330>
     d00:	add	r3, pc, r3
     d04:	add	r3, r3, #20
     d08:	ldr	r2, [pc, #200]	; dd8 <ipfw_daq_acquire+0x334>
     d0c:	add	r2, pc, r2
     d10:	mov	r1, #256	; 0x100
     d14:	add	r0, r6, #36	; 0x24
     d18:	bl	708 <snprintf@plt>
     d1c:	mvn	r4, #0
     d20:	b	cd4 <ipfw_daq_acquire+0x230>
     d24:	bl	6e4 <strerror@plt>
     d28:	str	r0, [sp]
     d2c:	ldr	r3, [pc, #168]	; ddc <ipfw_daq_acquire+0x338>
     d30:	add	r3, pc, r3
     d34:	add	r3, r3, #20
     d38:	ldr	r2, [pc, #160]	; de0 <ipfw_daq_acquire+0x33c>
     d3c:	add	r2, pc, r2
     d40:	mov	r1, #256	; 0x100
     d44:	add	r0, r6, #36	; 0x24
     d48:	bl	708 <snprintf@plt>
     d4c:	b	cd4 <ipfw_daq_acquire+0x230>
     d50:	ldr	r2, [r6, #28]
     d54:	add	r1, sp, #12
     d58:	mov	r0, #0
     d5c:	blx	sl
     d60:	cmp	r0, #7
     d64:	movcs	r0, #1
     d68:	add	r3, r6, r0, lsl #3
     d6c:	ldr	r2, [r3, #360]	; 0x168
     d70:	ldr	r1, [r3, #364]	; 0x16c
     d74:	adds	r2, r2, #1
     d78:	adc	r1, r1, #0
     d7c:	str	r2, [r3, #360]	; 0x168
     d80:	str	r1, [r3, #364]	; 0x16c
     d84:	add	r2, r6, #336	; 0x150
     d88:	ldr	r3, [r6, #336]	; 0x150
     d8c:	ldr	r1, [r6, #340]	; 0x154
     d90:	adds	r3, r3, #1
     d94:	adc	r1, r1, #0
     d98:	str	r3, [r6, #336]	; 0x150
     d9c:	str	r1, [r6, #340]	; 0x154
     da0:	ldr	r3, [r6, #16]
     da4:	cmp	r3, #0
     da8:	bne	c9c <ipfw_daq_acquire+0x1f8>
     dac:	ldr	r3, [pc, #48]	; de4 <ipfw_daq_acquire+0x340>
     db0:	add	r3, pc, r3
     db4:	add	r3, r3, r0, lsl #2
     db8:	ldr	r3, [r3, #40]	; 0x28
     dbc:	cmp	r3, #0
     dc0:	beq	cb8 <ipfw_daq_acquire+0x214>
     dc4:	b	c9c <ipfw_daq_acquire+0x1f8>
     dc8:	mov	r4, #0
     dcc:	b	cd4 <ipfw_daq_acquire+0x230>
     dd0:	.word	0x000115f8
     dd4:	.word	0x000004f0
     dd8:	.word	0x0000058c
     ddc:	.word	0x000004c0
     de0:	.word	0x00000584
     de4:	.word	0x00000440

00000de8 <ipfw_daq_start>:
     de8:	strd	r4, [sp, #-12]!
     dec:	str	lr, [sp, #8]
     df0:	sub	sp, sp, #12
     df4:	mov	r5, r0
     df8:	mov	r2, #254	; 0xfe
     dfc:	mov	r1, #3
     e00:	ldr	r0, [r0, #8]
     e04:	bl	744 <socket@plt>
     e08:	mov	r4, r0
     e0c:	str	r0, [r5]
     e10:	cmn	r0, #1
     e14:	beq	e50 <ipfw_daq_start+0x68>
     e18:	mov	r2, #16
     e1c:	add	r1, r5, #300	; 0x12c
     e20:	bl	714 <bind@plt>
     e24:	mov	r4, r0
     e28:	cmn	r0, #1
     e2c:	movne	r3, #2
     e30:	strne	r3, [r5, #316]	; 0x13c
     e34:	movne	r4, #0
     e38:	beq	e84 <ipfw_daq_start+0x9c>
     e3c:	mov	r0, r4
     e40:	add	sp, sp, #12
     e44:	ldrd	r4, [sp]
     e48:	add	sp, sp, #8
     e4c:	pop	{pc}		; (ldr pc, [sp], #4)
     e50:	bl	6fc <__errno_location@plt>
     e54:	ldr	r0, [r0]
     e58:	bl	6e4 <strerror@plt>
     e5c:	str	r0, [sp]
     e60:	ldr	r3, [pc, #80]	; eb8 <ipfw_daq_start+0xd0>
     e64:	add	r3, pc, r3
     e68:	add	r3, r3, #68	; 0x44
     e6c:	ldr	r2, [pc, #72]	; ebc <ipfw_daq_start+0xd4>
     e70:	add	r2, pc, r2
     e74:	mov	r1, #256	; 0x100
     e78:	add	r0, r5, #36	; 0x24
     e7c:	bl	708 <snprintf@plt>
     e80:	b	e3c <ipfw_daq_start+0x54>
     e84:	bl	6fc <__errno_location@plt>
     e88:	ldr	r0, [r0]
     e8c:	bl	6e4 <strerror@plt>
     e90:	str	r0, [sp]
     e94:	ldr	r3, [pc, #36]	; ec0 <ipfw_daq_start+0xd8>
     e98:	add	r3, pc, r3
     e9c:	add	r3, r3, #68	; 0x44
     ea0:	ldr	r2, [pc, #28]	; ec4 <ipfw_daq_start+0xdc>
     ea4:	add	r2, pc, r2
     ea8:	mov	r1, #256	; 0x100
     eac:	add	r0, r5, #36	; 0x24
     eb0:	bl	708 <snprintf@plt>
     eb4:	b	e3c <ipfw_daq_start+0x54>
     eb8:	.word	0x0000038c
     ebc:	.word	0x00000478
     ec0:	.word	0x00000358
     ec4:	.word	0x0000046c

00000ec8 <ipfw_daq_set_filter>:
     ec8:	strd	r4, [sp, #-12]!
     ecc:	str	lr, [sp, #8]
     ed0:	sub	sp, sp, #20
     ed4:	mov	r4, r0
     ed8:	mov	r5, r1
     edc:	mov	r3, #0
     ee0:	str	r3, [sp, #4]
     ee4:	mov	r3, #1
     ee8:	str	r3, [sp]
     eec:	mov	r3, r1
     ef0:	add	r2, sp, #8
     ef4:	mov	r1, #228	; 0xe4
     ef8:	ldr	r0, [r0, #24]
     efc:	bl	6d8 <sfbpf_compile@plt>
     f00:	cmp	r0, #0
     f04:	blt	f54 <ipfw_daq_set_filter+0x8c>
     f08:	ldr	r0, [r4, #32]
     f0c:	cmp	r0, #0
     f10:	beq	f18 <ipfw_daq_set_filter+0x50>
     f14:	bl	684 <free@plt>
     f18:	ldr	r0, [r4, #296]	; 0x128
     f1c:	cmp	r0, #0
     f20:	beq	f28 <ipfw_daq_set_filter+0x60>
     f24:	bl	684 <free@plt>
     f28:	mov	r0, r5
     f2c:	bl	6b4 <strdup@plt>
     f30:	str	r0, [r4, #32]
     f34:	add	r4, r4, #292	; 0x124
     f38:	ldrd	r2, [sp, #8]
     f3c:	strd	r2, [r4]
     f40:	mov	r0, #0
     f44:	add	sp, sp, #20
     f48:	ldrd	r4, [sp]
     f4c:	add	sp, sp, #8
     f50:	pop	{pc}		; (ldr pc, [sp], #4)
     f54:	mvn	r0, #0
     f58:	b	f44 <ipfw_daq_set_filter+0x7c>

00000f5c <ipfw_daq_initialize>:
     f5c:	strd	r4, [sp, #-36]!	; 0xffffffdc
     f60:	strd	r6, [sp, #8]
     f64:	strd	r8, [sp, #16]
     f68:	strd	sl, [sp, #24]
     f6c:	str	lr, [sp, #32]
     f70:	sub	sp, sp, #28
     f74:	mov	r7, r0
     f78:	mov	r9, r1
     f7c:	str	r2, [sp, #8]
     f80:	str	r3, [sp, #12]
     f84:	mov	r1, #416	; 0x1a0
     f88:	mov	r0, #1
     f8c:	bl	654 <calloc@plt>
     f90:	subs	r5, r0, #0
     f94:	beq	1074 <ipfw_daq_initialize+0x118>
     f98:	mov	r3, #2
     f9c:	str	r3, [r5, #8]
     fa0:	mov	r3, #8000	; 0x1f40
     fa4:	str	r3, [r5, #4]
     fa8:	ldr	r4, [r7, #20]
     fac:	cmp	r4, #0
     fb0:	beq	1100 <ipfw_daq_initialize+0x1a4>
     fb4:	ldr	r6, [r4, #4]
     fb8:	cmp	r6, #0
     fbc:	beq	1048 <ipfw_daq_initialize+0xec>
     fc0:	ldrb	r3, [r6]
     fc4:	cmp	r3, #0
     fc8:	beq	1048 <ipfw_daq_initialize+0xec>
     fcc:	ldr	fp, [pc, #496]	; 11c4 <ipfw_daq_initialize+0x268>
     fd0:	add	fp, pc, fp
     fd4:	add	sl, sp, #20
     fd8:	ldr	r8, [r4]
     fdc:	mov	r1, fp
     fe0:	mov	r0, r8
     fe4:	bl	660 <strcmp@plt>
     fe8:	cmp	r0, #0
     fec:	bne	10d4 <ipfw_daq_initialize+0x178>
     ff0:	str	r6, [sp, #20]
     ff4:	mov	r2, #0
     ff8:	mov	r1, sl
     ffc:	mov	r0, r6
    1000:	bl	678 <strtol@plt>
    1004:	str	r0, [r5, #4]
    1008:	ldr	r3, [sp, #20]
    100c:	ldrb	r2, [r3]
    1010:	sub	r0, r0, #1
    1014:	movw	r3, #65534	; 0xfffe
    1018:	cmp	r0, r3
    101c:	cmpls	r2, #0
    1020:	bne	109c <ipfw_daq_initialize+0x140>
    1024:	ldr	r4, [r4, #8]
    1028:	cmp	r4, #0
    102c:	beq	1100 <ipfw_daq_initialize+0x1a4>
    1030:	ldr	r6, [r4, #4]
    1034:	cmp	r6, #0
    1038:	beq	1048 <ipfw_daq_initialize+0xec>
    103c:	ldrb	r3, [r6]
    1040:	cmp	r3, #0
    1044:	bne	fd8 <ipfw_daq_initialize+0x7c>
    1048:	ldr	r3, [r4]
    104c:	str	r3, [sp]
    1050:	ldr	r3, [pc, #368]	; 11c8 <ipfw_daq_initialize+0x26c>
    1054:	add	r3, pc, r3
    1058:	add	r3, r3, #104	; 0x68
    105c:	ldr	r2, [pc, #360]	; 11cc <ipfw_daq_initialize+0x270>
    1060:	add	r2, pc, r2
    1064:	ldr	r1, [sp, #12]
    1068:	ldr	r0, [sp, #8]
    106c:	bl	708 <snprintf@plt>
    1070:	b	10c4 <ipfw_daq_initialize+0x168>
    1074:	ldr	r3, [pc, #340]	; 11d0 <ipfw_daq_initialize+0x274>
    1078:	add	r3, pc, r3
    107c:	add	r3, r3, #84	; 0x54
    1080:	ldr	r2, [pc, #332]	; 11d4 <ipfw_daq_initialize+0x278>
    1084:	add	r2, pc, r2
    1088:	ldr	r1, [sp, #12]
    108c:	ldr	r0, [sp, #8]
    1090:	bl	708 <snprintf@plt>
    1094:	mvn	r0, #1
    1098:	b	1178 <ipfw_daq_initialize+0x21c>
    109c:	ldr	r3, [r4, #4]
    10a0:	str	r3, [sp]
    10a4:	ldr	r3, [pc, #300]	; 11d8 <ipfw_daq_initialize+0x27c>
    10a8:	add	r3, pc, r3
    10ac:	add	r3, r3, #104	; 0x68
    10b0:	ldr	r2, [pc, #292]	; 11dc <ipfw_daq_initialize+0x280>
    10b4:	add	r2, pc, r2
    10b8:	ldr	r1, [sp, #12]
    10bc:	ldr	r0, [sp, #8]
    10c0:	bl	708 <snprintf@plt>
    10c4:	mov	r0, r5
    10c8:	bl	954 <ipfw_daq_shutdown>
    10cc:	mvn	r0, #0
    10d0:	b	1178 <ipfw_daq_initialize+0x21c>
    10d4:	str	r6, [sp, #4]
    10d8:	str	r8, [sp]
    10dc:	ldr	r3, [pc, #252]	; 11e0 <ipfw_daq_initialize+0x284>
    10e0:	add	r3, pc, r3
    10e4:	add	r3, r3, #104	; 0x68
    10e8:	ldr	r2, [pc, #244]	; 11e4 <ipfw_daq_initialize+0x288>
    10ec:	add	r2, pc, r2
    10f0:	ldr	r1, [sp, #12]
    10f4:	ldr	r0, [sp, #8]
    10f8:	bl	708 <snprintf@plt>
    10fc:	b	10c4 <ipfw_daq_initialize+0x168>
    1100:	ldr	r0, [r7, #4]
    1104:	movw	r3, #65535	; 0xffff
    1108:	cmp	r0, #0
    110c:	moveq	r0, r3
    1110:	str	r0, [r5, #24]
    1114:	ldr	r3, [r7, #8]
    1118:	str	r3, [r5, #20]
    111c:	ldr	r3, [r7, #12]
    1120:	clz	r3, r3
    1124:	lsr	r3, r3, #5
    1128:	str	r3, [r5, #16]
    112c:	add	r3, r5, #300	; 0x12c
    1130:	ldr	r2, [r5, #8]
    1134:	strh	r2, [r3]
    1138:	mov	r3, #0
    113c:	str	r3, [r5, #304]	; 0x130
    1140:	ldr	r3, [r5, #4]
    1144:	rev16	r3, r3
    1148:	movw	r2, #302	; 0x12e
    114c:	strh	r3, [r5, r2]
    1150:	bl	6cc <malloc@plt>
    1154:	str	r0, [r5, #28]
    1158:	cmp	r0, #0
    115c:	beq	1194 <ipfw_daq_initialize+0x238>
    1160:	mvn	r3, #0
    1164:	str	r3, [r5]
    1168:	mov	r3, #1
    116c:	str	r3, [r5, #316]	; 0x13c
    1170:	str	r5, [r9]
    1174:	mov	r0, #0
    1178:	add	sp, sp, #28
    117c:	ldrd	r4, [sp]
    1180:	ldrd	r6, [sp, #8]
    1184:	ldrd	r8, [sp, #16]
    1188:	ldrd	sl, [sp, #24]
    118c:	add	sp, sp, #32
    1190:	pop	{pc}		; (ldr pc, [sp], #4)
    1194:	ldr	r3, [pc, #76]	; 11e8 <ipfw_daq_initialize+0x28c>
    1198:	add	r3, pc, r3
    119c:	add	r3, r3, #84	; 0x54
    11a0:	ldr	r2, [pc, #68]	; 11ec <ipfw_daq_initialize+0x290>
    11a4:	add	r2, pc, r2
    11a8:	ldr	r1, [sp, #12]
    11ac:	ldr	r0, [sp, #8]
    11b0:	bl	708 <snprintf@plt>
    11b4:	mov	r0, r5
    11b8:	bl	954 <ipfw_daq_shutdown>
    11bc:	mvn	r0, #1
    11c0:	b	1178 <ipfw_daq_initialize+0x21c>
    11c4:	.word	0x000003b0
    11c8:	.word	0x0000019c
    11cc:	.word	0x00000300
    11d0:	.word	0x00000178
    11d4:	.word	0x000002b0
    11d8:	.word	0x00000148
    11dc:	.word	0x000002d4
    11e0:	.word	0x00000110
    11e4:	.word	0x000002b0
    11e8:	.word	0x00000058
    11ec:	.word	0x0000021c

Disassembly of section .fini:

000011f0 <_fini>:
    11f0:	push	{r3, lr}
    11f4:	pop	{r3, pc}
