
../repos/coreutils/src/tr:     file format elf32-littlearm


Disassembly of section .init:

00010e04 <.init>:
   10e04:	push	{r3, lr}
   10e08:	bl	110e8 <__assert_fail@plt+0x48>
   10e0c:	pop	{r3, pc}

Disassembly of section .plt:

00010e10 <calloc@plt-0x14>:
   10e10:	push	{lr}		; (str lr, [sp, #-4]!)
   10e14:	ldr	lr, [pc, #4]	; 10e20 <calloc@plt-0x4>
   10e18:	add	lr, pc, lr
   10e1c:	ldr	pc, [lr, #8]!
   10e20:	andeq	r1, r2, r0, ror #3

00010e24 <calloc@plt>:
   10e24:	add	ip, pc, #0, 12
   10e28:	add	ip, ip, #135168	; 0x21000
   10e2c:	ldr	pc, [ip, #480]!	; 0x1e0

00010e30 <fputs_unlocked@plt>:
   10e30:	add	ip, pc, #0, 12
   10e34:	add	ip, ip, #135168	; 0x21000
   10e38:	ldr	pc, [ip, #472]!	; 0x1d8

00010e3c <raise@plt>:
   10e3c:	add	ip, pc, #0, 12
   10e40:	add	ip, ip, #135168	; 0x21000
   10e44:	ldr	pc, [ip, #464]!	; 0x1d0

00010e48 <strcmp@plt>:
   10e48:	add	ip, pc, #0, 12
   10e4c:	add	ip, ip, #135168	; 0x21000
   10e50:	ldr	pc, [ip, #456]!	; 0x1c8

00010e54 <posix_fadvise64@plt>:
   10e54:	add	ip, pc, #0, 12
   10e58:	add	ip, ip, #135168	; 0x21000
   10e5c:	ldr	pc, [ip, #448]!	; 0x1c0

00010e60 <printf@plt>:
   10e60:	add	ip, pc, #0, 12
   10e64:	add	ip, ip, #135168	; 0x21000
   10e68:	ldr	pc, [ip, #440]!	; 0x1b8

00010e6c <read@plt>:
   10e6c:	add	ip, pc, #0, 12
   10e70:	add	ip, ip, #135168	; 0x21000
   10e74:	ldr	pc, [ip, #432]!	; 0x1b0

00010e78 <fflush@plt>:
   10e78:	add	ip, pc, #0, 12
   10e7c:	add	ip, ip, #135168	; 0x21000
   10e80:	ldr	pc, [ip, #424]!	; 0x1a8

00010e84 <free@plt>:
   10e84:	add	ip, pc, #0, 12
   10e88:	add	ip, ip, #135168	; 0x21000
   10e8c:	ldr	pc, [ip, #416]!	; 0x1a0

00010e90 <_exit@plt>:
   10e90:	add	ip, pc, #0, 12
   10e94:	add	ip, ip, #135168	; 0x21000
   10e98:	ldr	pc, [ip, #408]!	; 0x198

00010e9c <memcpy@plt>:
   10e9c:	add	ip, pc, #0, 12
   10ea0:	add	ip, ip, #135168	; 0x21000
   10ea4:	ldr	pc, [ip, #400]!	; 0x190

00010ea8 <tolower@plt>:
   10ea8:	add	ip, pc, #0, 12
   10eac:	add	ip, ip, #135168	; 0x21000
   10eb0:	ldr	pc, [ip, #392]!	; 0x188

00010eb4 <mbsinit@plt>:
   10eb4:	add	ip, pc, #0, 12
   10eb8:	add	ip, ip, #135168	; 0x21000
   10ebc:	ldr	pc, [ip, #384]!	; 0x180

00010ec0 <fwrite_unlocked@plt>:
   10ec0:	add	ip, pc, #0, 12
   10ec4:	add	ip, ip, #135168	; 0x21000
   10ec8:	ldr	pc, [ip, #376]!	; 0x178

00010ecc <memcmp@plt>:
   10ecc:	add	ip, pc, #0, 12
   10ed0:	add	ip, ip, #135168	; 0x21000
   10ed4:	ldr	pc, [ip, #368]!	; 0x170

00010ed8 <stpcpy@plt>:
   10ed8:	add	ip, pc, #0, 12
   10edc:	add	ip, ip, #135168	; 0x21000
   10ee0:	ldr	pc, [ip, #360]!	; 0x168

00010ee4 <realloc@plt>:
   10ee4:	add	ip, pc, #0, 12
   10ee8:	add	ip, ip, #135168	; 0x21000
   10eec:	ldr	pc, [ip, #352]!	; 0x160

00010ef0 <textdomain@plt>:
   10ef0:	add	ip, pc, #0, 12
   10ef4:	add	ip, ip, #135168	; 0x21000
   10ef8:	ldr	pc, [ip, #344]!	; 0x158

00010efc <iswprint@plt>:
   10efc:	add	ip, pc, #0, 12
   10f00:	add	ip, ip, #135168	; 0x21000
   10f04:	ldr	pc, [ip, #336]!	; 0x150

00010f08 <lseek64@plt>:
   10f08:	add	ip, pc, #0, 12
   10f0c:	add	ip, ip, #135168	; 0x21000
   10f10:	ldr	pc, [ip, #328]!	; 0x148

00010f14 <__ctype_get_mb_cur_max@plt>:
   10f14:	add	ip, pc, #0, 12
   10f18:	add	ip, ip, #135168	; 0x21000
   10f1c:	ldr	pc, [ip, #320]!	; 0x140

00010f20 <__fpending@plt>:
   10f20:	add	ip, pc, #0, 12
   10f24:	add	ip, ip, #135168	; 0x21000
   10f28:	ldr	pc, [ip, #312]!	; 0x138

00010f2c <ferror_unlocked@plt>:
   10f2c:	add	ip, pc, #0, 12
   10f30:	add	ip, ip, #135168	; 0x21000
   10f34:	ldr	pc, [ip, #304]!	; 0x130

00010f38 <mbrtowc@plt>:
   10f38:	add	ip, pc, #0, 12
   10f3c:	add	ip, ip, #135168	; 0x21000
   10f40:	ldr	pc, [ip, #296]!	; 0x128

00010f44 <error@plt>:
   10f44:	add	ip, pc, #0, 12
   10f48:	add	ip, ip, #135168	; 0x21000
   10f4c:	ldr	pc, [ip, #288]!	; 0x120

00010f50 <malloc@plt>:
   10f50:	add	ip, pc, #0, 12
   10f54:	add	ip, ip, #135168	; 0x21000
   10f58:	ldr	pc, [ip, #280]!	; 0x118

00010f5c <__libc_start_main@plt>:
   10f5c:	add	ip, pc, #0, 12
   10f60:	add	ip, ip, #135168	; 0x21000
   10f64:	ldr	pc, [ip, #272]!	; 0x110

00010f68 <__freading@plt>:
   10f68:	add	ip, pc, #0, 12
   10f6c:	add	ip, ip, #135168	; 0x21000
   10f70:	ldr	pc, [ip, #264]!	; 0x108

00010f74 <__gmon_start__@plt>:
   10f74:	add	ip, pc, #0, 12
   10f78:	add	ip, ip, #135168	; 0x21000
   10f7c:	ldr	pc, [ip, #256]!	; 0x100

00010f80 <getopt_long@plt>:
   10f80:	add	ip, pc, #0, 12
   10f84:	add	ip, ip, #135168	; 0x21000
   10f88:	ldr	pc, [ip, #248]!	; 0xf8

00010f8c <__ctype_b_loc@plt>:
   10f8c:	add	ip, pc, #0, 12
   10f90:	add	ip, ip, #135168	; 0x21000
   10f94:	ldr	pc, [ip, #240]!	; 0xf0

00010f98 <exit@plt>:
   10f98:	add	ip, pc, #0, 12
   10f9c:	add	ip, ip, #135168	; 0x21000
   10fa0:	ldr	pc, [ip, #232]!	; 0xe8

00010fa4 <gettext@plt>:
   10fa4:	add	ip, pc, #0, 12
   10fa8:	add	ip, ip, #135168	; 0x21000
   10fac:	ldr	pc, [ip, #224]!	; 0xe0

00010fb0 <strlen@plt>:
   10fb0:	add	ip, pc, #0, 12
   10fb4:	add	ip, ip, #135168	; 0x21000
   10fb8:	ldr	pc, [ip, #216]!	; 0xd8

00010fbc <strchr@plt>:
   10fbc:	add	ip, pc, #0, 12
   10fc0:	add	ip, ip, #135168	; 0x21000
   10fc4:	ldr	pc, [ip, #208]!	; 0xd0

00010fc8 <fprintf@plt>:
   10fc8:	add	ip, pc, #0, 12
   10fcc:	add	ip, ip, #135168	; 0x21000
   10fd0:	ldr	pc, [ip, #200]!	; 0xc8

00010fd4 <__errno_location@plt>:
   10fd4:	add	ip, pc, #0, 12
   10fd8:	add	ip, ip, #135168	; 0x21000
   10fdc:	ldr	pc, [ip, #192]!	; 0xc0

00010fe0 <__cxa_atexit@plt>:
   10fe0:	add	ip, pc, #0, 12
   10fe4:	add	ip, ip, #135168	; 0x21000
   10fe8:	ldr	pc, [ip, #184]!	; 0xb8

00010fec <memset@plt>:
   10fec:	add	ip, pc, #0, 12
   10ff0:	add	ip, ip, #135168	; 0x21000
   10ff4:	ldr	pc, [ip, #176]!	; 0xb0

00010ff8 <fileno@plt>:
   10ff8:	add	ip, pc, #0, 12
   10ffc:	add	ip, ip, #135168	; 0x21000
   11000:	ldr	pc, [ip, #168]!	; 0xa8

00011004 <strtoumax@plt>:
   11004:	add	ip, pc, #0, 12
   11008:	add	ip, ip, #135168	; 0x21000
   1100c:	ldr	pc, [ip, #160]!	; 0xa0

00011010 <fclose@plt>:
   11010:	add	ip, pc, #0, 12
   11014:	add	ip, ip, #135168	; 0x21000
   11018:	ldr	pc, [ip, #152]!	; 0x98

0001101c <fseeko64@plt>:
   1101c:	add	ip, pc, #0, 12
   11020:	add	ip, ip, #135168	; 0x21000
   11024:	ldr	pc, [ip, #144]!	; 0x90

00011028 <setlocale@plt>:
   11028:	add	ip, pc, #0, 12
   1102c:	add	ip, ip, #135168	; 0x21000
   11030:	ldr	pc, [ip, #136]!	; 0x88

00011034 <toupper@plt>:
   11034:	add	ip, pc, #0, 12
   11038:	add	ip, ip, #135168	; 0x21000
   1103c:	ldr	pc, [ip, #128]!	; 0x80

00011040 <strrchr@plt>:
   11040:	add	ip, pc, #0, 12
   11044:	add	ip, ip, #135168	; 0x21000
   11048:	ldr	pc, [ip, #120]!	; 0x78

0001104c <nl_langinfo@plt>:
   1104c:	add	ip, pc, #0, 12
   11050:	add	ip, ip, #135168	; 0x21000
   11054:	ldr	pc, [ip, #112]!	; 0x70

00011058 <sprintf@plt>:
   11058:	add	ip, pc, #0, 12
   1105c:	add	ip, ip, #135168	; 0x21000
   11060:	ldr	pc, [ip, #104]!	; 0x68

00011064 <bindtextdomain@plt>:
   11064:	add	ip, pc, #0, 12
   11068:	add	ip, ip, #135168	; 0x21000
   1106c:	ldr	pc, [ip, #96]!	; 0x60

00011070 <fputs@plt>:
   11070:	add	ip, pc, #0, 12
   11074:	add	ip, ip, #135168	; 0x21000
   11078:	ldr	pc, [ip, #88]!	; 0x58

0001107c <strncmp@plt>:
   1107c:	add	ip, pc, #0, 12
   11080:	add	ip, ip, #135168	; 0x21000
   11084:	ldr	pc, [ip, #80]!	; 0x50

00011088 <abort@plt>:
   11088:	add	ip, pc, #0, 12
   1108c:	add	ip, ip, #135168	; 0x21000
   11090:	ldr	pc, [ip, #72]!	; 0x48

00011094 <close@plt>:
   11094:	add	ip, pc, #0, 12
   11098:	add	ip, ip, #135168	; 0x21000
   1109c:	ldr	pc, [ip, #64]!	; 0x40

000110a0 <__assert_fail@plt>:
   110a0:	add	ip, pc, #0, 12
   110a4:	add	ip, ip, #135168	; 0x21000
   110a8:	ldr	pc, [ip, #56]!	; 0x38

Disassembly of section .text:

000110ac <.text>:
   110ac:	mov	fp, #0
   110b0:	mov	lr, #0
   110b4:	pop	{r1}		; (ldr r1, [sp], #4)
   110b8:	mov	r2, sp
   110bc:	push	{r2}		; (str r2, [sp, #-4]!)
   110c0:	push	{r0}		; (str r0, [sp, #-4]!)
   110c4:	ldr	ip, [pc, #16]	; 110dc <__assert_fail@plt+0x3c>
   110c8:	push	{ip}		; (str ip, [sp, #-4]!)
   110cc:	ldr	r0, [pc, #12]	; 110e0 <__assert_fail@plt+0x40>
   110d0:	ldr	r3, [pc, #12]	; 110e4 <__assert_fail@plt+0x44>
   110d4:	bl	10f5c <__libc_start_main@plt>
   110d8:	bl	11088 <abort@plt>
   110dc:	andeq	pc, r1, ip, lsl sl	; <UNPREDICTABLE>
   110e0:	andeq	r1, r1, r0, ror #9
   110e4:			; <UNDEFINED> instruction: 0x0001f9bc
   110e8:	ldr	r3, [pc, #20]	; 11104 <__assert_fail@plt+0x64>
   110ec:	ldr	r2, [pc, #20]	; 11108 <__assert_fail@plt+0x68>
   110f0:	add	r3, pc, r3
   110f4:	ldr	r2, [r3, r2]
   110f8:	cmp	r2, #0
   110fc:	bxeq	lr
   11100:	b	10f74 <__gmon_start__@plt>
   11104:	andeq	r0, r2, r8, lsl #30
   11108:	andeq	r0, r0, r4, ror #1
   1110c:	ldr	r0, [pc, #24]	; 1112c <__assert_fail@plt+0x8c>
   11110:	ldr	r3, [pc, #24]	; 11130 <__assert_fail@plt+0x90>
   11114:	cmp	r3, r0
   11118:	bxeq	lr
   1111c:	ldr	r3, [pc, #16]	; 11134 <__assert_fail@plt+0x94>
   11120:	cmp	r3, #0
   11124:	bxeq	lr
   11128:	bx	r3
   1112c:	andeq	r2, r3, r8, lsr r1
   11130:	andeq	r2, r3, r8, lsr r1
   11134:	andeq	r0, r0, r0
   11138:	ldr	r0, [pc, #36]	; 11164 <__assert_fail@plt+0xc4>
   1113c:	ldr	r1, [pc, #36]	; 11168 <__assert_fail@plt+0xc8>
   11140:	sub	r1, r1, r0
   11144:	asr	r1, r1, #2
   11148:	add	r1, r1, r1, lsr #31
   1114c:	asrs	r1, r1, #1
   11150:	bxeq	lr
   11154:	ldr	r3, [pc, #16]	; 1116c <__assert_fail@plt+0xcc>
   11158:	cmp	r3, #0
   1115c:	bxeq	lr
   11160:	bx	r3
   11164:	andeq	r2, r3, r8, lsr r1
   11168:	andeq	r2, r3, r8, lsr r1
   1116c:	andeq	r0, r0, r0
   11170:	push	{r4, lr}
   11174:	ldr	r4, [pc, #24]	; 11194 <__assert_fail@plt+0xf4>
   11178:	ldrb	r3, [r4]
   1117c:	cmp	r3, #0
   11180:	popne	{r4, pc}
   11184:	bl	1110c <__assert_fail@plt+0x6c>
   11188:	mov	r3, #1
   1118c:	strb	r3, [r4]
   11190:	pop	{r4, pc}
   11194:	andeq	r2, r3, r8, asr r1
   11198:	b	11138 <__assert_fail@plt+0x98>
   1119c:	push	{fp, lr}
   111a0:	mov	fp, sp
   111a4:	sub	sp, sp, #48	; 0x30
   111a8:	str	r0, [fp, #-4]
   111ac:	ldr	r0, [fp, #-4]
   111b0:	cmp	r0, #0
   111b4:	beq	11200 <__assert_fail@plt+0x160>
   111b8:	b	111bc <__assert_fail@plt+0x11c>
   111bc:	movw	r0, #8520	; 0x2148
   111c0:	movt	r0, #3
   111c4:	ldr	r0, [r0]
   111c8:	movw	r1, #64068	; 0xfa44
   111cc:	movt	r1, #1
   111d0:	str	r0, [fp, #-8]
   111d4:	mov	r0, r1
   111d8:	bl	10fa4 <gettext@plt>
   111dc:	movw	r1, #17512	; 0x4468
   111e0:	movt	r1, #3
   111e4:	ldr	r2, [r1]
   111e8:	ldr	r1, [fp, #-8]
   111ec:	str	r0, [fp, #-12]
   111f0:	mov	r0, r1
   111f4:	ldr	r1, [fp, #-12]
   111f8:	bl	10fc8 <fprintf@plt>
   111fc:	b	1132c <__assert_fail@plt+0x28c>
   11200:	movw	r0, #64107	; 0xfa6b
   11204:	movt	r0, #1
   11208:	bl	10fa4 <gettext@plt>
   1120c:	movw	r1, #17512	; 0x4468
   11210:	movt	r1, #3
   11214:	ldr	r1, [r1]
   11218:	bl	10e60 <printf@plt>
   1121c:	movw	r1, #64142	; 0xfa8e
   11220:	movt	r1, #1
   11224:	str	r0, [fp, #-16]
   11228:	mov	r0, r1
   1122c:	bl	10fa4 <gettext@plt>
   11230:	movw	r1, #8532	; 0x2154
   11234:	movt	r1, #3
   11238:	ldr	r1, [r1]
   1123c:	bl	10e30 <fputs_unlocked@plt>
   11240:	movw	r1, #64638	; 0xfc7e
   11244:	movt	r1, #1
   11248:	str	r0, [fp, #-20]	; 0xffffffec
   1124c:	mov	r0, r1
   11250:	bl	10fa4 <gettext@plt>
   11254:	movw	r1, #8532	; 0x2154
   11258:	movt	r1, #3
   1125c:	ldr	r1, [r1]
   11260:	bl	10e30 <fputs_unlocked@plt>
   11264:	movw	r1, #64683	; 0xfcab
   11268:	movt	r1, #1
   1126c:	str	r0, [sp, #24]
   11270:	mov	r0, r1
   11274:	bl	10fa4 <gettext@plt>
   11278:	movw	r1, #8532	; 0x2154
   1127c:	movt	r1, #3
   11280:	ldr	r1, [r1]
   11284:	bl	10e30 <fputs_unlocked@plt>
   11288:	movw	r1, #64737	; 0xfce1
   1128c:	movt	r1, #1
   11290:	str	r0, [sp, #20]
   11294:	mov	r0, r1
   11298:	bl	10fa4 <gettext@plt>
   1129c:	movw	r1, #8532	; 0x2154
   112a0:	movt	r1, #3
   112a4:	ldr	r1, [r1]
   112a8:	bl	10e30 <fputs_unlocked@plt>
   112ac:	movw	r1, #65110	; 0xfe56
   112b0:	movt	r1, #1
   112b4:	str	r0, [sp, #16]
   112b8:	mov	r0, r1
   112bc:	bl	10fa4 <gettext@plt>
   112c0:	movw	r1, #8532	; 0x2154
   112c4:	movt	r1, #3
   112c8:	ldr	r1, [r1]
   112cc:	bl	10e30 <fputs_unlocked@plt>
   112d0:	movw	r1, #65535	; 0xffff
   112d4:	movt	r1, #1
   112d8:	str	r0, [sp, #12]
   112dc:	mov	r0, r1
   112e0:	bl	10fa4 <gettext@plt>
   112e4:	movw	r1, #8532	; 0x2154
   112e8:	movt	r1, #3
   112ec:	ldr	r1, [r1]
   112f0:	bl	10e30 <fputs_unlocked@plt>
   112f4:	movw	r1, #410	; 0x19a
   112f8:	movt	r1, #2
   112fc:	str	r0, [sp, #8]
   11300:	mov	r0, r1
   11304:	bl	10fa4 <gettext@plt>
   11308:	movw	r1, #8532	; 0x2154
   1130c:	movt	r1, #3
   11310:	ldr	r1, [r1]
   11314:	bl	10e30 <fputs_unlocked@plt>
   11318:	movw	r1, #882	; 0x372
   1131c:	movt	r1, #2
   11320:	str	r0, [sp, #4]
   11324:	mov	r0, r1
   11328:	bl	11334 <__assert_fail@plt+0x294>
   1132c:	ldr	r0, [fp, #-4]
   11330:	bl	10f98 <exit@plt>
   11334:	push	{fp, lr}
   11338:	mov	fp, sp
   1133c:	sub	sp, sp, #88	; 0x58
   11340:	add	r1, sp, #28
   11344:	movw	r2, #3880	; 0xf28
   11348:	movt	r2, #2
   1134c:	str	r0, [fp, #-4]
   11350:	mov	r0, r1
   11354:	str	r1, [sp, #12]
   11358:	mov	r1, r2
   1135c:	movw	r2, #56	; 0x38
   11360:	bl	10e9c <memcpy@plt>
   11364:	ldr	r0, [fp, #-4]
   11368:	str	r0, [sp, #24]
   1136c:	ldr	r0, [sp, #12]
   11370:	str	r0, [sp, #20]
   11374:	ldr	r0, [sp, #20]
   11378:	ldr	r0, [r0]
   1137c:	movw	r1, #0
   11380:	cmp	r0, r1
   11384:	movw	r0, #0
   11388:	str	r0, [sp, #8]
   1138c:	beq	113b8 <__assert_fail@plt+0x318>
   11390:	ldr	r0, [fp, #-4]
   11394:	ldr	r1, [sp, #20]
   11398:	ldr	r1, [r1]
   1139c:	bl	10e48 <strcmp@plt>
   113a0:	cmp	r0, #0
   113a4:	movw	r0, #0
   113a8:	moveq	r0, #1
   113ac:	mvn	r1, #0
   113b0:	eor	r0, r0, r1
   113b4:	str	r0, [sp, #8]
   113b8:	ldr	r0, [sp, #8]
   113bc:	tst	r0, #1
   113c0:	beq	113d4 <__assert_fail@plt+0x334>
   113c4:	ldr	r0, [sp, #20]
   113c8:	add	r0, r0, #8
   113cc:	str	r0, [sp, #20]
   113d0:	b	11374 <__assert_fail@plt+0x2d4>
   113d4:	ldr	r0, [sp, #20]
   113d8:	ldr	r0, [r0, #4]
   113dc:	movw	r1, #0
   113e0:	cmp	r0, r1
   113e4:	beq	113f4 <__assert_fail@plt+0x354>
   113e8:	ldr	r0, [sp, #20]
   113ec:	ldr	r0, [r0, #4]
   113f0:	str	r0, [sp, #24]
   113f4:	movw	r0, #1392	; 0x570
   113f8:	movt	r0, #2
   113fc:	bl	10fa4 <gettext@plt>
   11400:	movw	r1, #919	; 0x397
   11404:	movt	r1, #2
   11408:	movw	r2, #1415	; 0x587
   1140c:	movt	r2, #2
   11410:	bl	10e60 <printf@plt>
   11414:	movw	r1, #5
   11418:	str	r0, [sp, #4]
   1141c:	mov	r0, r1
   11420:	movw	r1, #0
   11424:	bl	11028 <setlocale@plt>
   11428:	str	r0, [sp, #16]
   1142c:	ldr	r0, [sp, #16]
   11430:	movw	r1, #0
   11434:	cmp	r0, r1
   11438:	beq	11474 <__assert_fail@plt+0x3d4>
   1143c:	ldr	r0, [sp, #16]
   11440:	movw	r1, #1455	; 0x5af
   11444:	movt	r1, #2
   11448:	movw	r2, #3
   1144c:	bl	1107c <strncmp@plt>
   11450:	cmp	r0, #0
   11454:	beq	11474 <__assert_fail@plt+0x3d4>
   11458:	movw	r0, #1459	; 0x5b3
   1145c:	movt	r0, #2
   11460:	bl	10fa4 <gettext@plt>
   11464:	movw	r1, #8532	; 0x2154
   11468:	movt	r1, #3
   1146c:	ldr	r1, [r1]
   11470:	bl	10e30 <fputs_unlocked@plt>
   11474:	movw	r0, #1530	; 0x5fa
   11478:	movt	r0, #2
   1147c:	bl	10fa4 <gettext@plt>
   11480:	ldr	r2, [fp, #-4]
   11484:	movw	r1, #1415	; 0x587
   11488:	movt	r1, #2
   1148c:	bl	10e60 <printf@plt>
   11490:	movw	r1, #1557	; 0x615
   11494:	movt	r1, #2
   11498:	str	r0, [sp]
   1149c:	mov	r0, r1
   114a0:	bl	10fa4 <gettext@plt>
   114a4:	ldr	r1, [sp, #24]
   114a8:	ldr	r2, [sp, #24]
   114ac:	ldr	r3, [fp, #-4]
   114b0:	cmp	r2, r3
   114b4:	movw	r2, #0
   114b8:	moveq	r2, #1
   114bc:	tst	r2, #1
   114c0:	movw	r2, #1607	; 0x647
   114c4:	movt	r2, #2
   114c8:	movw	r3, #1325	; 0x52d
   114cc:	movt	r3, #2
   114d0:	movne	r2, r3
   114d4:	bl	10e60 <printf@plt>
   114d8:	mov	sp, fp
   114dc:	pop	{fp, pc}
   114e0:	push	{r4, r5, fp, lr}
   114e4:	add	fp, sp, #8
   114e8:	sub	sp, sp, #272	; 0x110
   114ec:	movw	r2, #0
   114f0:	str	r2, [fp, #-12]
   114f4:	str	r0, [fp, #-16]
   114f8:	str	r1, [fp, #-20]	; 0xffffffec
   114fc:	sub	r0, fp, #80	; 0x50
   11500:	str	r0, [fp, #-124]	; 0xffffff84
   11504:	sub	r0, fp, #120	; 0x78
   11508:	str	r0, [fp, #-128]	; 0xffffff80
   1150c:	ldr	r0, [fp, #-20]	; 0xffffffec
   11510:	ldr	r0, [r0]
   11514:	bl	154cc <__assert_fail@plt+0x442c>
   11518:	movw	r0, #6
   1151c:	movw	r1, #1607	; 0x647
   11520:	movt	r1, #2
   11524:	bl	11028 <setlocale@plt>
   11528:	movw	r1, #923	; 0x39b
   1152c:	movt	r1, #2
   11530:	str	r0, [sp, #96]	; 0x60
   11534:	mov	r0, r1
   11538:	movw	r1, #885	; 0x375
   1153c:	movt	r1, #2
   11540:	bl	11064 <bindtextdomain@plt>
   11544:	movw	r1, #923	; 0x39b
   11548:	movt	r1, #2
   1154c:	str	r0, [sp, #92]	; 0x5c
   11550:	mov	r0, r1
   11554:	bl	10ef0 <textdomain@plt>
   11558:	movw	r1, #21168	; 0x52b0
   1155c:	movt	r1, #1
   11560:	str	r0, [sp, #88]	; 0x58
   11564:	mov	r0, r1
   11568:	bl	1fa20 <__assert_fail@plt+0xe980>
   1156c:	ldr	r0, [fp, #-16]
   11570:	ldr	r1, [fp, #-20]	; 0xffffffec
   11574:	movw	r2, #909	; 0x38d
   11578:	movt	r2, #2
   1157c:	movw	r3, #3768	; 0xeb8
   11580:	movt	r3, #2
   11584:	movw	ip, #0
   11588:	str	ip, [sp]
   1158c:	bl	10f80 <getopt_long@plt>
   11590:	str	r0, [fp, #-24]	; 0xffffffe8
   11594:	cmn	r0, #1
   11598:	beq	116f8 <__assert_fail@plt+0x658>
   1159c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   115a0:	cmn	r0, #3
   115a4:	str	r0, [sp, #84]	; 0x54
   115a8:	beq	116a4 <__assert_fail@plt+0x604>
   115ac:	b	115b0 <__assert_fail@plt+0x510>
   115b0:	ldr	r0, [sp, #84]	; 0x54
   115b4:	cmn	r0, #2
   115b8:	beq	1169c <__assert_fail@plt+0x5fc>
   115bc:	b	115c0 <__assert_fail@plt+0x520>
   115c0:	ldr	r0, [sp, #84]	; 0x54
   115c4:	cmp	r0, #65	; 0x41
   115c8:	beq	11620 <__assert_fail@plt+0x580>
   115cc:	b	115d0 <__assert_fail@plt+0x530>
   115d0:	ldr	r0, [sp, #84]	; 0x54
   115d4:	cmp	r0, #67	; 0x43
   115d8:	beq	1164c <__assert_fail@plt+0x5ac>
   115dc:	b	115e0 <__assert_fail@plt+0x540>
   115e0:	ldr	r0, [sp, #84]	; 0x54
   115e4:	cmp	r0, #99	; 0x63
   115e8:	beq	1164c <__assert_fail@plt+0x5ac>
   115ec:	b	115f0 <__assert_fail@plt+0x550>
   115f0:	ldr	r0, [sp, #84]	; 0x54
   115f4:	cmp	r0, #100	; 0x64
   115f8:	beq	11660 <__assert_fail@plt+0x5c0>
   115fc:	b	11600 <__assert_fail@plt+0x560>
   11600:	ldr	r0, [sp, #84]	; 0x54
   11604:	cmp	r0, #115	; 0x73
   11608:	beq	11674 <__assert_fail@plt+0x5d4>
   1160c:	b	11610 <__assert_fail@plt+0x570>
   11610:	ldr	r0, [sp, #84]	; 0x54
   11614:	cmp	r0, #116	; 0x74
   11618:	beq	11688 <__assert_fail@plt+0x5e8>
   1161c:	b	116ec <__assert_fail@plt+0x64c>
   11620:	movw	r0, #3
   11624:	movw	r1, #917	; 0x395
   11628:	movt	r1, #2
   1162c:	bl	11028 <setlocale@plt>
   11630:	movw	r1, #0
   11634:	str	r0, [sp, #80]	; 0x50
   11638:	mov	r0, r1
   1163c:	movw	r1, #917	; 0x395
   11640:	movt	r1, #2
   11644:	bl	11028 <setlocale@plt>
   11648:	b	116f4 <__assert_fail@plt+0x654>
   1164c:	movw	r0, #8537	; 0x2159
   11650:	movt	r0, #3
   11654:	movw	r1, #1
   11658:	strb	r1, [r0]
   1165c:	b	116f4 <__assert_fail@plt+0x654>
   11660:	movw	r0, #8538	; 0x215a
   11664:	movt	r0, #3
   11668:	movw	r1, #1
   1166c:	strb	r1, [r0]
   11670:	b	116f4 <__assert_fail@plt+0x654>
   11674:	movw	r0, #8539	; 0x215b
   11678:	movt	r0, #3
   1167c:	movw	r1, #1
   11680:	strb	r1, [r0]
   11684:	b	116f4 <__assert_fail@plt+0x654>
   11688:	movw	r0, #8540	; 0x215c
   1168c:	movt	r0, #3
   11690:	movw	r1, #1
   11694:	strb	r1, [r0]
   11698:	b	116f4 <__assert_fail@plt+0x654>
   1169c:	movw	r0, #0
   116a0:	bl	1119c <__assert_fail@plt+0xfc>
   116a4:	movw	r0, #8532	; 0x2154
   116a8:	movt	r0, #3
   116ac:	ldr	r0, [r0]
   116b0:	movw	r1, #8432	; 0x20f0
   116b4:	movt	r1, #3
   116b8:	ldr	r3, [r1]
   116bc:	movw	r1, #882	; 0x372
   116c0:	movt	r1, #2
   116c4:	movw	r2, #919	; 0x397
   116c8:	movt	r2, #2
   116cc:	movw	ip, #933	; 0x3a5
   116d0:	movt	ip, #2
   116d4:	str	ip, [sp]
   116d8:	movw	ip, #0
   116dc:	str	ip, [sp, #4]
   116e0:	bl	18454 <__assert_fail@plt+0x73b4>
   116e4:	movw	r0, #0
   116e8:	bl	10f98 <exit@plt>
   116ec:	movw	r0, #1
   116f0:	bl	1119c <__assert_fail@plt+0xfc>
   116f4:	b	1156c <__assert_fail@plt+0x4cc>
   116f8:	ldr	r0, [fp, #-16]
   116fc:	movw	r1, #8512	; 0x2140
   11700:	movt	r1, #3
   11704:	ldr	r1, [r1]
   11708:	sub	r0, r0, r1
   1170c:	str	r0, [fp, #-28]	; 0xffffffe4
   11710:	ldr	r0, [fp, #-28]	; 0xffffffe4
   11714:	cmp	r0, #2
   11718:	movw	r0, #0
   1171c:	str	r0, [sp, #76]	; 0x4c
   11720:	bne	1173c <__assert_fail@plt+0x69c>
   11724:	movw	r0, #8538	; 0x215a
   11728:	movt	r0, #3
   1172c:	ldrb	r0, [r0]
   11730:	mvn	r1, #0
   11734:	eor	r0, r0, r1
   11738:	str	r0, [sp, #76]	; 0x4c
   1173c:	ldr	r0, [sp, #76]	; 0x4c
   11740:	and	r0, r0, #1
   11744:	movw	r1, #8541	; 0x215d
   11748:	movt	r1, #3
   1174c:	strb	r0, [r1]
   11750:	movw	r0, #8538	; 0x215a
   11754:	movt	r0, #3
   11758:	ldrb	r1, [r0]
   1175c:	and	r1, r1, #1
   11760:	movw	r2, #8539	; 0x215b
   11764:	movt	r2, #3
   11768:	ldrb	r3, [r2]
   1176c:	and	r3, r3, #1
   11770:	cmp	r1, r3
   11774:	movw	r1, #0
   11778:	moveq	r1, #1
   1177c:	and	r1, r1, #1
   11780:	add	r1, r1, #1
   11784:	str	r1, [fp, #-32]	; 0xffffffe0
   11788:	ldrb	r0, [r0]
   1178c:	and	r0, r0, #1
   11790:	ldrb	r1, [r2]
   11794:	and	r1, r1, #1
   11798:	cmp	r0, r1
   1179c:	movw	r0, #0
   117a0:	movle	r0, #1
   117a4:	and	r0, r0, #1
   117a8:	add	r0, r0, #1
   117ac:	str	r0, [fp, #-36]	; 0xffffffdc
   117b0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   117b4:	ldr	r1, [fp, #-32]	; 0xffffffe0
   117b8:	cmp	r0, r1
   117bc:	bge	11894 <__assert_fail@plt+0x7f4>
   117c0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   117c4:	cmp	r0, #0
   117c8:	bne	117f0 <__assert_fail@plt+0x750>
   117cc:	movw	r0, #946	; 0x3b2
   117d0:	movt	r0, #2
   117d4:	bl	10fa4 <gettext@plt>
   117d8:	movw	r1, #0
   117dc:	str	r0, [sp, #72]	; 0x48
   117e0:	mov	r0, r1
   117e4:	ldr	r2, [sp, #72]	; 0x48
   117e8:	bl	10f44 <error@plt>
   117ec:	b	1188c <__assert_fail@plt+0x7ec>
   117f0:	movw	r0, #962	; 0x3c2
   117f4:	movt	r0, #2
   117f8:	bl	10fa4 <gettext@plt>
   117fc:	ldr	r1, [fp, #-20]	; 0xffffffec
   11800:	ldr	r2, [fp, #-16]
   11804:	sub	r2, r2, #1
   11808:	add	r1, r1, r2, lsl #2
   1180c:	ldr	r1, [r1]
   11810:	str	r0, [sp, #68]	; 0x44
   11814:	mov	r0, r1
   11818:	bl	17b28 <__assert_fail@plt+0x6a88>
   1181c:	movw	r1, #0
   11820:	str	r0, [sp, #64]	; 0x40
   11824:	mov	r0, r1
   11828:	ldr	r2, [sp, #68]	; 0x44
   1182c:	ldr	r3, [sp, #64]	; 0x40
   11830:	bl	10f44 <error@plt>
   11834:	movw	r0, #8520	; 0x2148
   11838:	movt	r0, #3
   1183c:	ldr	r0, [r0]
   11840:	movw	r1, #8539	; 0x215b
   11844:	movt	r1, #3
   11848:	ldrb	r1, [r1]
   1184c:	tst	r1, #1
   11850:	movw	r1, #1055	; 0x41f
   11854:	movt	r1, #2
   11858:	movw	r2, #987	; 0x3db
   1185c:	movt	r2, #2
   11860:	movne	r1, r2
   11864:	str	r0, [sp, #60]	; 0x3c
   11868:	mov	r0, r1
   1186c:	bl	10fa4 <gettext@plt>
   11870:	ldr	r1, [sp, #60]	; 0x3c
   11874:	str	r0, [sp, #56]	; 0x38
   11878:	mov	r0, r1
   1187c:	movw	r1, #4276	; 0x10b4
   11880:	movt	r1, #2
   11884:	ldr	r2, [sp, #56]	; 0x38
   11888:	bl	10fc8 <fprintf@plt>
   1188c:	movw	r0, #1
   11890:	bl	1119c <__assert_fail@plt+0xfc>
   11894:	ldr	r0, [fp, #-36]	; 0xffffffdc
   11898:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1189c:	cmp	r0, r1
   118a0:	bge	11944 <__assert_fail@plt+0x8a4>
   118a4:	movw	r0, #1099	; 0x44b
   118a8:	movt	r0, #2
   118ac:	bl	10fa4 <gettext@plt>
   118b0:	ldr	r1, [fp, #-20]	; 0xffffffec
   118b4:	movw	r2, #8512	; 0x2140
   118b8:	movt	r2, #3
   118bc:	ldr	r2, [r2]
   118c0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   118c4:	add	r2, r2, r3
   118c8:	add	r1, r1, r2, lsl #2
   118cc:	ldr	r1, [r1]
   118d0:	str	r0, [sp, #52]	; 0x34
   118d4:	mov	r0, r1
   118d8:	bl	17b28 <__assert_fail@plt+0x6a88>
   118dc:	movw	r1, #0
   118e0:	str	r0, [sp, #48]	; 0x30
   118e4:	mov	r0, r1
   118e8:	ldr	r2, [sp, #52]	; 0x34
   118ec:	ldr	r3, [sp, #48]	; 0x30
   118f0:	bl	10f44 <error@plt>
   118f4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   118f8:	cmp	r0, #2
   118fc:	bne	1193c <__assert_fail@plt+0x89c>
   11900:	movw	r0, #8520	; 0x2148
   11904:	movt	r0, #3
   11908:	ldr	r0, [r0]
   1190c:	movw	r1, #1116	; 0x45c
   11910:	movt	r1, #2
   11914:	str	r0, [sp, #44]	; 0x2c
   11918:	mov	r0, r1
   1191c:	bl	10fa4 <gettext@plt>
   11920:	ldr	r1, [sp, #44]	; 0x2c
   11924:	str	r0, [sp, #40]	; 0x28
   11928:	mov	r0, r1
   1192c:	movw	r1, #4276	; 0x10b4
   11930:	movt	r1, #2
   11934:	ldr	r2, [sp, #40]	; 0x28
   11938:	bl	10fc8 <fprintf@plt>
   1193c:	movw	r0, #1
   11940:	bl	1119c <__assert_fail@plt+0xfc>
   11944:	ldr	r0, [fp, #-124]	; 0xffffff84
   11948:	bl	12068 <__assert_fail@plt+0xfc8>
   1194c:	ldr	r0, [fp, #-20]	; 0xffffffec
   11950:	movw	r1, #8512	; 0x2140
   11954:	movt	r1, #3
   11958:	ldr	r1, [r1]
   1195c:	add	r0, r0, r1, lsl #2
   11960:	ldr	r0, [r0]
   11964:	ldr	r1, [fp, #-124]	; 0xffffff84
   11968:	bl	120b0 <__assert_fail@plt+0x1010>
   1196c:	tst	r0, #1
   11970:	bne	11980 <__assert_fail@plt+0x8e0>
   11974:	movw	r0, #1
   11978:	str	r0, [fp, #-12]
   1197c:	b	1205c <__assert_fail@plt+0xfbc>
   11980:	ldr	r0, [fp, #-28]	; 0xffffffe4
   11984:	cmp	r0, #2
   11988:	bne	119d0 <__assert_fail@plt+0x930>
   1198c:	ldr	r0, [fp, #-128]	; 0xffffff80
   11990:	bl	12068 <__assert_fail@plt+0xfc8>
   11994:	ldr	r0, [fp, #-20]	; 0xffffffec
   11998:	movw	r1, #8512	; 0x2140
   1199c:	movt	r1, #3
   119a0:	ldr	r1, [r1]
   119a4:	add	r1, r1, #1
   119a8:	add	r0, r0, r1, lsl #2
   119ac:	ldr	r0, [r0]
   119b0:	ldr	r1, [fp, #-128]	; 0xffffff80
   119b4:	bl	120b0 <__assert_fail@plt+0x1010>
   119b8:	tst	r0, #1
   119bc:	bne	119cc <__assert_fail@plt+0x92c>
   119c0:	movw	r0, #1
   119c4:	str	r0, [fp, #-12]
   119c8:	b	1205c <__assert_fail@plt+0xfbc>
   119cc:	b	119d8 <__assert_fail@plt+0x938>
   119d0:	movw	r0, #0
   119d4:	str	r0, [fp, #-128]	; 0xffffff80
   119d8:	ldr	r0, [fp, #-124]	; 0xffffff84
   119dc:	ldr	r1, [fp, #-128]	; 0xffffff80
   119e0:	bl	12114 <__assert_fail@plt+0x1074>
   119e4:	movw	r0, #0
   119e8:	str	r0, [sp, #36]	; 0x24
   119ec:	ldr	r1, [sp, #36]	; 0x24
   119f0:	bl	1b368 <__assert_fail@plt+0xa2c8>
   119f4:	movw	r0, #1
   119f8:	movw	r1, #0
   119fc:	bl	1b368 <__assert_fail@plt+0xa2c8>
   11a00:	movw	r0, #8528	; 0x2150
   11a04:	movt	r0, #3
   11a08:	ldr	r0, [r0]
   11a0c:	movw	r1, #2
   11a10:	bl	15434 <__assert_fail@plt+0x4394>
   11a14:	movw	r0, #8539	; 0x215b
   11a18:	movt	r0, #3
   11a1c:	ldrb	r0, [r0]
   11a20:	tst	r0, #1
   11a24:	beq	11a70 <__assert_fail@plt+0x9d0>
   11a28:	ldr	r0, [fp, #-28]	; 0xffffffe4
   11a2c:	cmp	r0, #1
   11a30:	bne	11a70 <__assert_fail@plt+0x9d0>
   11a34:	ldr	r0, [fp, #-124]	; 0xffffff84
   11a38:	movw	r1, #8537	; 0x2159
   11a3c:	movt	r1, #3
   11a40:	ldrb	r1, [r1]
   11a44:	and	r1, r1, #1
   11a48:	movw	r2, #8542	; 0x215e
   11a4c:	movt	r2, #3
   11a50:	bl	123a0 <__assert_fail@plt+0x1300>
   11a54:	movw	r0, #8798	; 0x225e
   11a58:	movt	r0, #3
   11a5c:	movw	r1, #8192	; 0x2000
   11a60:	movw	r2, #10080	; 0x2760
   11a64:	movt	r2, #1
   11a68:	bl	12468 <__assert_fail@plt+0x13c8>
   11a6c:	b	12014 <__assert_fail@plt+0xf74>
   11a70:	movw	r0, #8538	; 0x215a
   11a74:	movt	r0, #3
   11a78:	ldrb	r0, [r0]
   11a7c:	tst	r0, #1
   11a80:	beq	11b38 <__assert_fail@plt+0xa98>
   11a84:	ldr	r0, [fp, #-28]	; 0xffffffe4
   11a88:	cmp	r0, #1
   11a8c:	bne	11b38 <__assert_fail@plt+0xa98>
   11a90:	ldr	r0, [fp, #-124]	; 0xffffff84
   11a94:	movw	r1, #8537	; 0x2159
   11a98:	movt	r1, #3
   11a9c:	ldrb	r1, [r1]
   11aa0:	and	r1, r1, #1
   11aa4:	movw	r2, #16990	; 0x425e
   11aa8:	movt	r2, #3
   11aac:	bl	123a0 <__assert_fail@plt+0x1300>
   11ab0:	movw	r0, #8798	; 0x225e
   11ab4:	movt	r0, #3
   11ab8:	movw	r1, #8192	; 0x2000
   11abc:	bl	127d0 <__assert_fail@plt+0x1730>
   11ac0:	str	r0, [fp, #-132]	; 0xffffff7c
   11ac4:	ldr	r0, [fp, #-132]	; 0xffffff7c
   11ac8:	cmp	r0, #0
   11acc:	bne	11ad4 <__assert_fail@plt+0xa34>
   11ad0:	b	11b34 <__assert_fail@plt+0xa94>
   11ad4:	ldr	r2, [fp, #-132]	; 0xffffff7c
   11ad8:	movw	r0, #8532	; 0x2154
   11adc:	movt	r0, #3
   11ae0:	ldr	r3, [r0]
   11ae4:	movw	r0, #8798	; 0x225e
   11ae8:	movt	r0, #3
   11aec:	movw	r1, #1
   11af0:	bl	10ec0 <fwrite_unlocked@plt>
   11af4:	ldr	r1, [fp, #-132]	; 0xffffff7c
   11af8:	cmp	r0, r1
   11afc:	beq	11b30 <__assert_fail@plt+0xa90>
   11b00:	bl	10fd4 <__errno_location@plt>
   11b04:	ldr	r1, [r0]
   11b08:	movw	r0, #1186	; 0x4a2
   11b0c:	movt	r0, #2
   11b10:	str	r1, [sp, #32]
   11b14:	bl	10fa4 <gettext@plt>
   11b18:	movw	r1, #1
   11b1c:	str	r0, [sp, #28]
   11b20:	mov	r0, r1
   11b24:	ldr	r1, [sp, #32]
   11b28:	ldr	r2, [sp, #28]
   11b2c:	bl	10f44 <error@plt>
   11b30:	b	11ab0 <__assert_fail@plt+0xa10>
   11b34:	b	12010 <__assert_fail@plt+0xf70>
   11b38:	movw	r0, #8539	; 0x215b
   11b3c:	movt	r0, #3
   11b40:	ldrb	r0, [r0]
   11b44:	tst	r0, #1
   11b48:	beq	11bc0 <__assert_fail@plt+0xb20>
   11b4c:	movw	r0, #8538	; 0x215a
   11b50:	movt	r0, #3
   11b54:	ldrb	r0, [r0]
   11b58:	tst	r0, #1
   11b5c:	beq	11bc0 <__assert_fail@plt+0xb20>
   11b60:	ldr	r0, [fp, #-28]	; 0xffffffe4
   11b64:	cmp	r0, #2
   11b68:	bne	11bc0 <__assert_fail@plt+0xb20>
   11b6c:	ldr	r0, [fp, #-124]	; 0xffffff84
   11b70:	movw	r1, #8537	; 0x2159
   11b74:	movt	r1, #3
   11b78:	ldrb	r1, [r1]
   11b7c:	and	r1, r1, #1
   11b80:	movw	r2, #16990	; 0x425e
   11b84:	movt	r2, #3
   11b88:	bl	123a0 <__assert_fail@plt+0x1300>
   11b8c:	ldr	r0, [fp, #-128]	; 0xffffff80
   11b90:	movw	r1, #0
   11b94:	and	r1, r1, #1
   11b98:	movw	r2, #8542	; 0x215e
   11b9c:	movt	r2, #3
   11ba0:	bl	123a0 <__assert_fail@plt+0x1300>
   11ba4:	movw	r0, #8798	; 0x225e
   11ba8:	movt	r0, #3
   11bac:	movw	r1, #8192	; 0x2000
   11bb0:	movw	r2, #10192	; 0x27d0
   11bb4:	movt	r2, #1
   11bb8:	bl	12468 <__assert_fail@plt+0x13c8>
   11bbc:	b	1200c <__assert_fail@plt+0xf6c>
   11bc0:	movw	r0, #8541	; 0x215d
   11bc4:	movt	r0, #3
   11bc8:	ldrb	r0, [r0]
   11bcc:	tst	r0, #1
   11bd0:	beq	12008 <__assert_fail@plt+0xf68>
   11bd4:	movw	r0, #8537	; 0x2159
   11bd8:	movt	r0, #3
   11bdc:	ldrb	r0, [r0]
   11be0:	tst	r0, #1
   11be4:	beq	11d14 <__assert_fail@plt+0xc74>
   11be8:	movw	r0, #16990	; 0x425e
   11bec:	movt	r0, #3
   11bf0:	str	r0, [fp, #-136]	; 0xffffff78
   11bf4:	ldr	r0, [fp, #-124]	; 0xffffff84
   11bf8:	ldr	r2, [fp, #-136]	; 0xffffff78
   11bfc:	mov	r1, #0
   11c00:	bl	123a0 <__assert_fail@plt+0x1300>
   11c04:	ldr	r0, [fp, #-128]	; 0xffffff80
   11c08:	mvn	r1, #0
   11c0c:	str	r1, [r0, #12]
   11c10:	mvn	r1, #1
   11c14:	str	r1, [r0, #8]
   11c18:	movw	r0, #0
   11c1c:	str	r0, [sp, #140]	; 0x8c
   11c20:	ldr	r0, [sp, #140]	; 0x8c
   11c24:	cmp	r0, #256	; 0x100
   11c28:	bge	11c54 <__assert_fail@plt+0xbb4>
   11c2c:	ldr	r0, [sp, #140]	; 0x8c
   11c30:	ldr	r1, [sp, #140]	; 0x8c
   11c34:	movw	r2, #17246	; 0x435e
   11c38:	movt	r2, #3
   11c3c:	add	r1, r2, r1
   11c40:	strb	r0, [r1]
   11c44:	ldr	r0, [sp, #140]	; 0x8c
   11c48:	add	r0, r0, #1
   11c4c:	str	r0, [sp, #140]	; 0x8c
   11c50:	b	11c20 <__assert_fail@plt+0xb80>
   11c54:	movw	r0, #0
   11c58:	str	r0, [sp, #136]	; 0x88
   11c5c:	ldr	r0, [sp, #136]	; 0x88
   11c60:	cmp	r0, #256	; 0x100
   11c64:	bge	11d10 <__assert_fail@plt+0xc70>
   11c68:	ldr	r0, [fp, #-136]	; 0xffffff78
   11c6c:	ldr	r1, [sp, #136]	; 0x88
   11c70:	add	r0, r0, r1
   11c74:	ldrb	r0, [r0]
   11c78:	tst	r0, #1
   11c7c:	bne	11cfc <__assert_fail@plt+0xc5c>
   11c80:	ldr	r0, [fp, #-128]	; 0xffffff80
   11c84:	movw	r1, #0
   11c88:	bl	12934 <__assert_fail@plt+0x1894>
   11c8c:	str	r0, [sp, #132]	; 0x84
   11c90:	ldr	r0, [sp, #132]	; 0x84
   11c94:	cmn	r0, #1
   11c98:	bne	11cb0 <__assert_fail@plt+0xc10>
   11c9c:	movw	r0, #8540	; 0x215c
   11ca0:	movt	r0, #3
   11ca4:	ldrb	r0, [r0]
   11ca8:	tst	r0, #1
   11cac:	beq	11cb4 <__assert_fail@plt+0xc14>
   11cb0:	b	11cd4 <__assert_fail@plt+0xc34>
   11cb4:	movw	r0, #1198	; 0x4ae
   11cb8:	movt	r0, #2
   11cbc:	movw	r1, #1224	; 0x4c8
   11cc0:	movt	r1, #2
   11cc4:	movw	r2, #1840	; 0x730
   11cc8:	movw	r3, #1233	; 0x4d1
   11ccc:	movt	r3, #2
   11cd0:	bl	110a0 <__assert_fail@plt>
   11cd4:	ldr	r0, [sp, #132]	; 0x84
   11cd8:	cmn	r0, #1
   11cdc:	bne	11ce4 <__assert_fail@plt+0xc44>
   11ce0:	b	11d10 <__assert_fail@plt+0xc70>
   11ce4:	ldr	r0, [sp, #132]	; 0x84
   11ce8:	ldr	r1, [sp, #136]	; 0x88
   11cec:	movw	r2, #17246	; 0x435e
   11cf0:	movt	r2, #3
   11cf4:	add	r1, r2, r1
   11cf8:	strb	r0, [r1]
   11cfc:	b	11d00 <__assert_fail@plt+0xc60>
   11d00:	ldr	r0, [sp, #136]	; 0x88
   11d04:	add	r0, r0, #1
   11d08:	str	r0, [sp, #136]	; 0x88
   11d0c:	b	11c5c <__assert_fail@plt+0xbbc>
   11d10:	b	11f30 <__assert_fail@plt+0xe90>
   11d14:	movw	r0, #0
   11d18:	str	r0, [sp, #112]	; 0x70
   11d1c:	ldr	r0, [sp, #112]	; 0x70
   11d20:	cmp	r0, #256	; 0x100
   11d24:	bge	11d50 <__assert_fail@plt+0xcb0>
   11d28:	ldr	r0, [sp, #112]	; 0x70
   11d2c:	ldr	r1, [sp, #112]	; 0x70
   11d30:	movw	r2, #17246	; 0x435e
   11d34:	movt	r2, #3
   11d38:	add	r1, r2, r1
   11d3c:	strb	r0, [r1]
   11d40:	ldr	r0, [sp, #112]	; 0x70
   11d44:	add	r0, r0, #1
   11d48:	str	r0, [sp, #112]	; 0x70
   11d4c:	b	11d1c <__assert_fail@plt+0xc7c>
   11d50:	ldr	r0, [fp, #-124]	; 0xffffff84
   11d54:	mvn	r1, #0
   11d58:	str	r1, [r0, #12]
   11d5c:	mvn	r2, #1
   11d60:	str	r2, [r0, #8]
   11d64:	ldr	r0, [fp, #-128]	; 0xffffff80
   11d68:	str	r1, [r0, #12]
   11d6c:	str	r2, [r0, #8]
   11d70:	ldr	r0, [fp, #-124]	; 0xffffff84
   11d74:	add	r1, sp, #120	; 0x78
   11d78:	bl	12934 <__assert_fail@plt+0x1894>
   11d7c:	str	r0, [sp, #128]	; 0x80
   11d80:	ldr	r0, [fp, #-128]	; 0xffffff80
   11d84:	add	r1, sp, #116	; 0x74
   11d88:	bl	12934 <__assert_fail@plt+0x1894>
   11d8c:	str	r0, [sp, #124]	; 0x7c
   11d90:	ldr	r0, [sp, #120]	; 0x78
   11d94:	cmp	r0, #0
   11d98:	bne	11e10 <__assert_fail@plt+0xd70>
   11d9c:	ldr	r0, [sp, #116]	; 0x74
   11da0:	cmp	r0, #1
   11da4:	bne	11e10 <__assert_fail@plt+0xd70>
   11da8:	movw	r0, #0
   11dac:	str	r0, [sp, #108]	; 0x6c
   11db0:	ldr	r0, [sp, #108]	; 0x6c
   11db4:	cmp	r0, #256	; 0x100
   11db8:	bge	11e0c <__assert_fail@plt+0xd6c>
   11dbc:	bl	10f8c <__ctype_b_loc@plt>
   11dc0:	ldr	r0, [r0]
   11dc4:	ldr	r1, [sp, #108]	; 0x6c
   11dc8:	add	r0, r0, r1, lsl #1
   11dcc:	ldrh	r0, [r0]
   11dd0:	and	r0, r0, #512	; 0x200
   11dd4:	cmp	r0, #0
   11dd8:	beq	11df8 <__assert_fail@plt+0xd58>
   11ddc:	ldr	r0, [sp, #108]	; 0x6c
   11de0:	bl	11034 <toupper@plt>
   11de4:	ldr	r1, [sp, #108]	; 0x6c
   11de8:	movw	r2, #17246	; 0x435e
   11dec:	movt	r2, #3
   11df0:	add	r1, r2, r1
   11df4:	strb	r0, [r1]
   11df8:	b	11dfc <__assert_fail@plt+0xd5c>
   11dfc:	ldr	r0, [sp, #108]	; 0x6c
   11e00:	add	r0, r0, #1
   11e04:	str	r0, [sp, #108]	; 0x6c
   11e08:	b	11db0 <__assert_fail@plt+0xd10>
   11e0c:	b	11ec8 <__assert_fail@plt+0xe28>
   11e10:	ldr	r0, [sp, #120]	; 0x78
   11e14:	cmp	r0, #1
   11e18:	bne	11e90 <__assert_fail@plt+0xdf0>
   11e1c:	ldr	r0, [sp, #116]	; 0x74
   11e20:	cmp	r0, #0
   11e24:	bne	11e90 <__assert_fail@plt+0xdf0>
   11e28:	movw	r0, #0
   11e2c:	str	r0, [sp, #104]	; 0x68
   11e30:	ldr	r0, [sp, #104]	; 0x68
   11e34:	cmp	r0, #256	; 0x100
   11e38:	bge	11e8c <__assert_fail@plt+0xdec>
   11e3c:	bl	10f8c <__ctype_b_loc@plt>
   11e40:	ldr	r0, [r0]
   11e44:	ldr	r1, [sp, #104]	; 0x68
   11e48:	add	r0, r0, r1, lsl #1
   11e4c:	ldrh	r0, [r0]
   11e50:	and	r0, r0, #256	; 0x100
   11e54:	cmp	r0, #0
   11e58:	beq	11e78 <__assert_fail@plt+0xdd8>
   11e5c:	ldr	r0, [sp, #104]	; 0x68
   11e60:	bl	10ea8 <tolower@plt>
   11e64:	ldr	r1, [sp, #104]	; 0x68
   11e68:	movw	r2, #17246	; 0x435e
   11e6c:	movt	r2, #3
   11e70:	add	r1, r2, r1
   11e74:	strb	r0, [r1]
   11e78:	b	11e7c <__assert_fail@plt+0xddc>
   11e7c:	ldr	r0, [sp, #104]	; 0x68
   11e80:	add	r0, r0, #1
   11e84:	str	r0, [sp, #104]	; 0x68
   11e88:	b	11e30 <__assert_fail@plt+0xd90>
   11e8c:	b	11ec4 <__assert_fail@plt+0xe24>
   11e90:	ldr	r0, [sp, #128]	; 0x80
   11e94:	cmn	r0, #1
   11e98:	beq	11ea8 <__assert_fail@plt+0xe08>
   11e9c:	ldr	r0, [sp, #124]	; 0x7c
   11ea0:	cmn	r0, #1
   11ea4:	bne	11eac <__assert_fail@plt+0xe0c>
   11ea8:	b	11ee8 <__assert_fail@plt+0xe48>
   11eac:	ldr	r0, [sp, #124]	; 0x7c
   11eb0:	ldr	r1, [sp, #128]	; 0x80
   11eb4:	movw	r2, #17246	; 0x435e
   11eb8:	movt	r2, #3
   11ebc:	add	r1, r2, r1
   11ec0:	strb	r0, [r1]
   11ec4:	b	11ec8 <__assert_fail@plt+0xe28>
   11ec8:	ldr	r0, [sp, #116]	; 0x74
   11ecc:	cmp	r0, #2
   11ed0:	beq	11ee4 <__assert_fail@plt+0xe44>
   11ed4:	ldr	r0, [fp, #-124]	; 0xffffff84
   11ed8:	bl	12e1c <__assert_fail@plt+0x1d7c>
   11edc:	ldr	r0, [fp, #-128]	; 0xffffff80
   11ee0:	bl	12e1c <__assert_fail@plt+0x1d7c>
   11ee4:	b	11d70 <__assert_fail@plt+0xcd0>
   11ee8:	ldr	r0, [sp, #128]	; 0x80
   11eec:	cmn	r0, #1
   11ef0:	beq	11f08 <__assert_fail@plt+0xe68>
   11ef4:	movw	r0, #8540	; 0x215c
   11ef8:	movt	r0, #3
   11efc:	ldrb	r0, [r0]
   11f00:	tst	r0, #1
   11f04:	beq	11f0c <__assert_fail@plt+0xe6c>
   11f08:	b	11f2c <__assert_fail@plt+0xe8c>
   11f0c:	movw	r0, #1256	; 0x4e8
   11f10:	movt	r0, #2
   11f14:	movw	r1, #1224	; 0x4c8
   11f18:	movt	r1, #2
   11f1c:	movw	r2, #1893	; 0x765
   11f20:	movw	r3, #1233	; 0x4d1
   11f24:	movt	r3, #2
   11f28:	bl	110a0 <__assert_fail@plt>
   11f2c:	b	11f30 <__assert_fail@plt+0xe90>
   11f30:	movw	r0, #8539	; 0x215b
   11f34:	movt	r0, #3
   11f38:	ldrb	r0, [r0]
   11f3c:	tst	r0, #1
   11f40:	beq	11f78 <__assert_fail@plt+0xed8>
   11f44:	ldr	r0, [fp, #-128]	; 0xffffff80
   11f48:	movw	r1, #0
   11f4c:	and	r1, r1, #1
   11f50:	movw	r2, #8542	; 0x215e
   11f54:	movt	r2, #3
   11f58:	bl	123a0 <__assert_fail@plt+0x1300>
   11f5c:	movw	r0, #8798	; 0x225e
   11f60:	movt	r0, #3
   11f64:	movw	r1, #8192	; 0x2000
   11f68:	movw	r2, #11852	; 0x2e4c
   11f6c:	movt	r2, #1
   11f70:	bl	12468 <__assert_fail@plt+0x13c8>
   11f74:	b	12004 <__assert_fail@plt+0xf64>
   11f78:	b	11f7c <__assert_fail@plt+0xedc>
   11f7c:	movw	r0, #8798	; 0x225e
   11f80:	movt	r0, #3
   11f84:	movw	r1, #8192	; 0x2000
   11f88:	bl	12e4c <__assert_fail@plt+0x1dac>
   11f8c:	str	r0, [sp, #100]	; 0x64
   11f90:	ldr	r0, [sp, #100]	; 0x64
   11f94:	cmp	r0, #0
   11f98:	bne	11fa0 <__assert_fail@plt+0xf00>
   11f9c:	b	12000 <__assert_fail@plt+0xf60>
   11fa0:	ldr	r2, [sp, #100]	; 0x64
   11fa4:	movw	r0, #8532	; 0x2154
   11fa8:	movt	r0, #3
   11fac:	ldr	r3, [r0]
   11fb0:	movw	r0, #8798	; 0x225e
   11fb4:	movt	r0, #3
   11fb8:	movw	r1, #1
   11fbc:	bl	10ec0 <fwrite_unlocked@plt>
   11fc0:	ldr	r1, [sp, #100]	; 0x64
   11fc4:	cmp	r0, r1
   11fc8:	beq	11ffc <__assert_fail@plt+0xf5c>
   11fcc:	bl	10fd4 <__errno_location@plt>
   11fd0:	ldr	r1, [r0]
   11fd4:	movw	r0, #1186	; 0x4a2
   11fd8:	movt	r0, #2
   11fdc:	str	r1, [sp, #24]
   11fe0:	bl	10fa4 <gettext@plt>
   11fe4:	movw	r1, #1
   11fe8:	str	r0, [sp, #20]
   11fec:	mov	r0, r1
   11ff0:	ldr	r1, [sp, #24]
   11ff4:	ldr	r2, [sp, #20]
   11ff8:	bl	10f44 <error@plt>
   11ffc:	b	11f7c <__assert_fail@plt+0xedc>
   12000:	b	12004 <__assert_fail@plt+0xf64>
   12004:	b	12008 <__assert_fail@plt+0xf68>
   12008:	b	1200c <__assert_fail@plt+0xf6c>
   1200c:	b	12010 <__assert_fail@plt+0xf70>
   12010:	b	12014 <__assert_fail@plt+0xf74>
   12014:	movw	r0, #0
   12018:	bl	11094 <close@plt>
   1201c:	cmp	r0, #0
   12020:	beq	12054 <__assert_fail@plt+0xfb4>
   12024:	bl	10fd4 <__errno_location@plt>
   12028:	ldr	r1, [r0]
   1202c:	movw	r0, #1282	; 0x502
   12030:	movt	r0, #2
   12034:	str	r1, [sp, #16]
   12038:	bl	10fa4 <gettext@plt>
   1203c:	movw	r1, #1
   12040:	str	r0, [sp, #12]
   12044:	mov	r0, r1
   12048:	ldr	r1, [sp, #16]
   1204c:	ldr	r2, [sp, #12]
   12050:	bl	10f44 <error@plt>
   12054:	movw	r0, #0
   12058:	str	r0, [fp, #-12]
   1205c:	ldr	r0, [fp, #-12]
   12060:	sub	sp, fp, #8
   12064:	pop	{r4, r5, fp, pc}
   12068:	push	{fp, lr}
   1206c:	mov	fp, sp
   12070:	sub	sp, sp, #8
   12074:	str	r0, [sp, #4]
   12078:	movw	r0, #24
   1207c:	bl	185dc <__assert_fail@plt+0x753c>
   12080:	str	r0, [sp]
   12084:	ldr	r0, [sp]
   12088:	ldr	r1, [sp, #4]
   1208c:	str	r0, [r1, #4]
   12090:	ldr	r1, [sp, #4]
   12094:	str	r0, [r1]
   12098:	ldr	r0, [sp, #4]
   1209c:	ldr	r0, [r0]
   120a0:	movw	r1, #0
   120a4:	str	r1, [r0, #4]
   120a8:	mov	sp, fp
   120ac:	pop	{fp, pc}
   120b0:	push	{fp, lr}
   120b4:	mov	fp, sp
   120b8:	sub	sp, sp, #32
   120bc:	str	r0, [fp, #-4]
   120c0:	str	r1, [fp, #-8]
   120c4:	ldr	r0, [fp, #-4]
   120c8:	add	r1, sp, #12
   120cc:	bl	12edc <__assert_fail@plt+0x1e3c>
   120d0:	tst	r0, #1
   120d4:	movw	r0, #0
   120d8:	str	r0, [sp, #4]
   120dc:	beq	120f0 <__assert_fail@plt+0x1050>
   120e0:	ldr	r1, [fp, #-8]
   120e4:	add	r0, sp, #12
   120e8:	bl	13490 <__assert_fail@plt+0x23f0>
   120ec:	str	r0, [sp, #4]
   120f0:	ldr	r0, [sp, #4]
   120f4:	and	r0, r0, #1
   120f8:	strb	r0, [sp, #11]
   120fc:	add	r0, sp, #12
   12100:	bl	138f0 <__assert_fail@plt+0x2850>
   12104:	ldrb	r0, [sp, #11]
   12108:	and	r0, r0, #1
   1210c:	mov	sp, fp
   12110:	pop	{fp, pc}
   12114:	push	{fp, lr}
   12118:	mov	fp, sp
   1211c:	sub	sp, sp, #40	; 0x28
   12120:	str	r0, [fp, #-4]
   12124:	str	r1, [fp, #-8]
   12128:	ldr	r0, [fp, #-4]
   1212c:	bl	14560 <__assert_fail@plt+0x34c0>
   12130:	ldr	r0, [fp, #-4]
   12134:	ldr	r0, [r0, #24]
   12138:	cmp	r0, #0
   1213c:	bls	12164 <__assert_fail@plt+0x10c4>
   12140:	movw	r0, #2662	; 0xa66
   12144:	movt	r0, #2
   12148:	bl	10fa4 <gettext@plt>
   1214c:	movw	r1, #1
   12150:	str	r0, [fp, #-12]
   12154:	mov	r0, r1
   12158:	movw	r1, #0
   1215c:	ldr	r2, [fp, #-12]
   12160:	bl	10f44 <error@plt>
   12164:	ldr	r0, [fp, #-8]
   12168:	movw	r1, #0
   1216c:	cmp	r0, r1
   12170:	beq	12398 <__assert_fail@plt+0x12f8>
   12174:	ldr	r0, [fp, #-8]
   12178:	ldr	r1, [fp, #-4]
   1217c:	ldr	r2, [r1, #16]
   12180:	ldr	r3, [r1, #20]
   12184:	bl	145ac <__assert_fail@plt+0x350c>
   12188:	ldr	r0, [fp, #-8]
   1218c:	ldr	r0, [r0, #24]
   12190:	cmp	r0, #1
   12194:	bls	121bc <__assert_fail@plt+0x111c>
   12198:	movw	r0, #2714	; 0xa9a
   1219c:	movt	r0, #2
   121a0:	bl	10fa4 <gettext@plt>
   121a4:	movw	r1, #1
   121a8:	str	r0, [fp, #-16]
   121ac:	mov	r0, r1
   121b0:	movw	r1, #0
   121b4:	ldr	r2, [fp, #-16]
   121b8:	bl	10f44 <error@plt>
   121bc:	movw	r0, #8541	; 0x215d
   121c0:	movt	r0, #3
   121c4:	ldrb	r0, [r0]
   121c8:	tst	r0, #1
   121cc:	beq	1235c <__assert_fail@plt+0x12bc>
   121d0:	ldr	r0, [fp, #-8]
   121d4:	ldrb	r0, [r0, #32]
   121d8:	tst	r0, #1
   121dc:	beq	12204 <__assert_fail@plt+0x1164>
   121e0:	movw	r0, #2767	; 0xacf
   121e4:	movt	r0, #2
   121e8:	bl	10fa4 <gettext@plt>
   121ec:	movw	r1, #1
   121f0:	str	r0, [sp, #20]
   121f4:	mov	r0, r1
   121f8:	movw	r1, #0
   121fc:	ldr	r2, [sp, #20]
   12200:	bl	10f44 <error@plt>
   12204:	ldr	r0, [fp, #-8]
   12208:	ldrb	r0, [r0, #34]	; 0x22
   1220c:	tst	r0, #1
   12210:	beq	12238 <__assert_fail@plt+0x1198>
   12214:	movw	r0, #2828	; 0xb0c
   12218:	movt	r0, #2
   1221c:	bl	10fa4 <gettext@plt>
   12220:	movw	r1, #1
   12224:	str	r0, [sp, #16]
   12228:	mov	r0, r1
   1222c:	movw	r1, #0
   12230:	ldr	r2, [sp, #16]
   12234:	bl	10f44 <error@plt>
   12238:	ldr	r0, [fp, #-4]
   1223c:	ldr	r1, [fp, #-8]
   12240:	bl	14644 <__assert_fail@plt+0x35a4>
   12244:	ldr	r0, [fp, #-4]
   12248:	ldr	r1, [r0, #16]
   1224c:	ldr	r0, [r0, #20]
   12250:	ldr	r2, [fp, #-8]
   12254:	ldr	r3, [r2, #16]
   12258:	ldr	r2, [r2, #20]
   1225c:	subs	r1, r3, r1
   12260:	sbcs	r0, r2, r0
   12264:	bcs	122d0 <__assert_fail@plt+0x1230>
   12268:	b	1226c <__assert_fail@plt+0x11cc>
   1226c:	movw	r0, #8540	; 0x215c
   12270:	movt	r0, #3
   12274:	ldrb	r0, [r0]
   12278:	tst	r0, #1
   1227c:	bne	122cc <__assert_fail@plt+0x122c>
   12280:	ldr	r0, [fp, #-8]
   12284:	ldr	r1, [r0, #16]
   12288:	ldr	r0, [r0, #20]
   1228c:	orr	r0, r1, r0
   12290:	cmp	r0, #0
   12294:	bne	122c0 <__assert_fail@plt+0x1220>
   12298:	b	1229c <__assert_fail@plt+0x11fc>
   1229c:	movw	r0, #2924	; 0xb6c
   122a0:	movt	r0, #2
   122a4:	bl	10fa4 <gettext@plt>
   122a8:	movw	r1, #1
   122ac:	str	r0, [sp, #12]
   122b0:	mov	r0, r1
   122b4:	movw	r1, #0
   122b8:	ldr	r2, [sp, #12]
   122bc:	bl	10f44 <error@plt>
   122c0:	ldr	r0, [fp, #-4]
   122c4:	ldr	r1, [fp, #-8]
   122c8:	bl	149a0 <__assert_fail@plt+0x3900>
   122cc:	b	122d0 <__assert_fail@plt+0x1230>
   122d0:	movw	r0, #8537	; 0x2159
   122d4:	movt	r0, #3
   122d8:	ldrb	r0, [r0]
   122dc:	tst	r0, #1
   122e0:	beq	12358 <__assert_fail@plt+0x12b8>
   122e4:	ldr	r0, [fp, #-4]
   122e8:	ldrb	r0, [r0, #33]	; 0x21
   122ec:	tst	r0, #1
   122f0:	beq	12358 <__assert_fail@plt+0x12b8>
   122f4:	ldr	r0, [fp, #-8]
   122f8:	ldr	r1, [r0, #16]
   122fc:	ldr	r0, [r0, #20]
   12300:	ldr	r2, [fp, #-4]
   12304:	ldr	r3, [r2, #16]
   12308:	ldr	r2, [r2, #20]
   1230c:	eor	r0, r0, r2
   12310:	eor	r1, r1, r3
   12314:	orr	r0, r1, r0
   12318:	cmp	r0, #0
   1231c:	bne	12334 <__assert_fail@plt+0x1294>
   12320:	b	12324 <__assert_fail@plt+0x1284>
   12324:	ldr	r0, [fp, #-8]
   12328:	bl	14b6c <__assert_fail@plt+0x3acc>
   1232c:	tst	r0, #1
   12330:	bne	12358 <__assert_fail@plt+0x12b8>
   12334:	movw	r0, #2976	; 0xba0
   12338:	movt	r0, #2
   1233c:	bl	10fa4 <gettext@plt>
   12340:	movw	r1, #1
   12344:	str	r0, [sp, #8]
   12348:	mov	r0, r1
   1234c:	movw	r1, #0
   12350:	ldr	r2, [sp, #8]
   12354:	bl	10f44 <error@plt>
   12358:	b	12394 <__assert_fail@plt+0x12f4>
   1235c:	ldr	r0, [fp, #-8]
   12360:	ldr	r0, [r0, #24]
   12364:	cmp	r0, #0
   12368:	bls	12390 <__assert_fail@plt+0x12f0>
   1236c:	movw	r0, #3083	; 0xc0b
   12370:	movt	r0, #2
   12374:	bl	10fa4 <gettext@plt>
   12378:	movw	r1, #1
   1237c:	str	r0, [sp, #4]
   12380:	mov	r0, r1
   12384:	movw	r1, #0
   12388:	ldr	r2, [sp, #4]
   1238c:	bl	10f44 <error@plt>
   12390:	b	12394 <__assert_fail@plt+0x12f4>
   12394:	b	12398 <__assert_fail@plt+0x12f8>
   12398:	mov	sp, fp
   1239c:	pop	{fp, pc}
   123a0:	push	{fp, lr}
   123a4:	mov	fp, sp
   123a8:	sub	sp, sp, #24
   123ac:	str	r0, [fp, #-4]
   123b0:	and	r0, r1, #1
   123b4:	strb	r0, [fp, #-5]
   123b8:	str	r2, [sp, #12]
   123bc:	ldr	r0, [fp, #-4]
   123c0:	mvn	r1, #0
   123c4:	str	r1, [r0, #12]
   123c8:	mvn	r1, #1
   123cc:	str	r1, [r0, #8]
   123d0:	ldr	r0, [fp, #-4]
   123d4:	movw	r1, #0
   123d8:	bl	12934 <__assert_fail@plt+0x1894>
   123dc:	str	r0, [sp, #8]
   123e0:	cmn	r0, #1
   123e4:	beq	12400 <__assert_fail@plt+0x1360>
   123e8:	ldr	r0, [sp, #12]
   123ec:	ldr	r1, [sp, #8]
   123f0:	add	r0, r0, r1
   123f4:	movw	r1, #1
   123f8:	strb	r1, [r0]
   123fc:	b	123d0 <__assert_fail@plt+0x1330>
   12400:	ldrb	r0, [fp, #-5]
   12404:	tst	r0, #1
   12408:	beq	12460 <__assert_fail@plt+0x13c0>
   1240c:	movw	r0, #0
   12410:	str	r0, [sp, #4]
   12414:	ldr	r0, [sp, #4]
   12418:	cmp	r0, #256	; 0x100
   1241c:	bcs	1245c <__assert_fail@plt+0x13bc>
   12420:	ldr	r0, [sp, #12]
   12424:	ldr	r1, [sp, #4]
   12428:	add	r0, r0, r1
   1242c:	ldrb	r0, [r0]
   12430:	mvn	r1, #0
   12434:	eor	r0, r0, r1
   12438:	ldr	r1, [sp, #12]
   1243c:	ldr	r2, [sp, #4]
   12440:	add	r1, r1, r2
   12444:	and	r0, r0, #1
   12448:	strb	r0, [r1]
   1244c:	ldr	r0, [sp, #4]
   12450:	add	r0, r0, #1
   12454:	str	r0, [sp, #4]
   12458:	b	12414 <__assert_fail@plt+0x1374>
   1245c:	b	12460 <__assert_fail@plt+0x13c0>
   12460:	mov	sp, fp
   12464:	pop	{fp, pc}
   12468:	push	{fp, lr}
   1246c:	mov	fp, sp
   12470:	sub	sp, sp, #56	; 0x38
   12474:	ldr	r3, [pc, #736]	; 1275c <__assert_fail@plt+0x16bc>
   12478:	str	r0, [fp, #-4]
   1247c:	str	r1, [fp, #-8]
   12480:	str	r2, [fp, #-12]
   12484:	str	r3, [fp, #-16]
   12488:	str	r3, [fp, #-20]	; 0xffffffec
   1248c:	movw	r0, #0
   12490:	str	r0, [fp, #-24]	; 0xffffffe8
   12494:	str	r0, [sp, #28]
   12498:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1249c:	ldr	r1, [sp, #28]
   124a0:	cmp	r0, r1
   124a4:	bcc	124e4 <__assert_fail@plt+0x1444>
   124a8:	ldr	r0, [fp, #-12]
   124ac:	ldr	r1, [fp, #-4]
   124b0:	ldr	r2, [fp, #-8]
   124b4:	str	r0, [sp, #16]
   124b8:	mov	r0, r1
   124bc:	mov	r1, r2
   124c0:	ldr	r2, [sp, #16]
   124c4:	blx	r2
   124c8:	str	r0, [sp, #28]
   124cc:	ldr	r0, [sp, #28]
   124d0:	cmp	r0, #0
   124d4:	bne	124dc <__assert_fail@plt+0x143c>
   124d8:	b	12754 <__assert_fail@plt+0x16b4>
   124dc:	movw	r0, #0
   124e0:	str	r0, [fp, #-24]	; 0xffffffe8
   124e4:	ldr	r0, [pc, #624]	; 1275c <__assert_fail@plt+0x16bc>
   124e8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   124ec:	str	r1, [sp, #24]
   124f0:	ldr	r1, [fp, #-20]	; 0xffffffec
   124f4:	cmp	r1, r0
   124f8:	bne	126c4 <__assert_fail@plt+0x1624>
   124fc:	b	12500 <__assert_fail@plt+0x1460>
   12500:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12504:	ldr	r1, [sp, #28]
   12508:	cmp	r0, r1
   1250c:	movw	r0, #0
   12510:	str	r0, [sp, #12]
   12514:	bcs	1254c <__assert_fail@plt+0x14ac>
   12518:	ldr	r0, [fp, #-4]
   1251c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   12520:	add	r0, r0, r1
   12524:	ldrb	r0, [r0]
   12528:	bl	144d0 <__assert_fail@plt+0x3430>
   1252c:	and	r0, r0, #255	; 0xff
   12530:	movw	r1, #8542	; 0x215e
   12534:	movt	r1, #3
   12538:	add	r0, r1, r0
   1253c:	ldrb	r0, [r0]
   12540:	mvn	r1, #0
   12544:	eor	r0, r0, r1
   12548:	str	r0, [sp, #12]
   1254c:	ldr	r0, [sp, #12]
   12550:	tst	r0, #1
   12554:	beq	1256c <__assert_fail@plt+0x14cc>
   12558:	b	1255c <__assert_fail@plt+0x14bc>
   1255c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12560:	add	r0, r0, #2
   12564:	str	r0, [fp, #-24]	; 0xffffffe8
   12568:	b	12500 <__assert_fail@plt+0x1460>
   1256c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12570:	ldr	r1, [sp, #28]
   12574:	cmp	r0, r1
   12578:	bne	125c0 <__assert_fail@plt+0x1520>
   1257c:	ldr	r0, [fp, #-4]
   12580:	ldr	r1, [fp, #-24]	; 0xffffffe8
   12584:	sub	r1, r1, #1
   12588:	add	r0, r0, r1
   1258c:	ldrb	r0, [r0]
   12590:	bl	144d0 <__assert_fail@plt+0x3430>
   12594:	and	r0, r0, #255	; 0xff
   12598:	movw	r1, #8542	; 0x215e
   1259c:	movt	r1, #3
   125a0:	add	r0, r1, r0
   125a4:	ldrb	r0, [r0]
   125a8:	tst	r0, #1
   125ac:	beq	125c0 <__assert_fail@plt+0x1520>
   125b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   125b4:	mvn	r1, #0
   125b8:	add	r0, r0, r1
   125bc:	str	r0, [fp, #-24]	; 0xffffffe8
   125c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   125c4:	ldr	r1, [sp, #28]
   125c8:	cmp	r0, r1
   125cc:	bcc	125e4 <__assert_fail@plt+0x1544>
   125d0:	ldr	r0, [sp, #28]
   125d4:	ldr	r1, [sp, #24]
   125d8:	sub	r0, r0, r1
   125dc:	str	r0, [sp, #20]
   125e0:	b	12654 <__assert_fail@plt+0x15b4>
   125e4:	ldr	r0, [fp, #-4]
   125e8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   125ec:	add	r0, r0, r1
   125f0:	ldrb	r0, [r0]
   125f4:	str	r0, [fp, #-20]	; 0xffffffec
   125f8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   125fc:	ldr	r1, [sp, #24]
   12600:	sub	r0, r0, r1
   12604:	add	r0, r0, #1
   12608:	str	r0, [sp, #20]
   1260c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12610:	cmp	r0, #0
   12614:	bls	12648 <__assert_fail@plt+0x15a8>
   12618:	ldr	r0, [fp, #-4]
   1261c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   12620:	sub	r1, r1, #1
   12624:	add	r0, r0, r1
   12628:	ldrb	r0, [r0]
   1262c:	ldr	r1, [fp, #-20]	; 0xffffffec
   12630:	cmp	r0, r1
   12634:	bne	12648 <__assert_fail@plt+0x15a8>
   12638:	ldr	r0, [sp, #20]
   1263c:	mvn	r1, #0
   12640:	add	r0, r0, r1
   12644:	str	r0, [sp, #20]
   12648:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1264c:	add	r0, r0, #1
   12650:	str	r0, [fp, #-24]	; 0xffffffe8
   12654:	ldr	r0, [sp, #20]
   12658:	cmp	r0, #0
   1265c:	bls	126c0 <__assert_fail@plt+0x1620>
   12660:	ldr	r0, [fp, #-4]
   12664:	ldr	r1, [sp, #24]
   12668:	add	r0, r0, r1
   1266c:	ldr	r2, [sp, #20]
   12670:	movw	r1, #8532	; 0x2154
   12674:	movt	r1, #3
   12678:	ldr	r3, [r1]
   1267c:	movw	r1, #1
   12680:	bl	10ec0 <fwrite_unlocked@plt>
   12684:	ldr	r1, [sp, #20]
   12688:	cmp	r0, r1
   1268c:	beq	126c0 <__assert_fail@plt+0x1620>
   12690:	bl	10fd4 <__errno_location@plt>
   12694:	ldr	r1, [r0]
   12698:	movw	r0, #1186	; 0x4a2
   1269c:	movt	r0, #2
   126a0:	str	r1, [sp, #8]
   126a4:	bl	10fa4 <gettext@plt>
   126a8:	movw	r1, #1
   126ac:	str	r0, [sp, #4]
   126b0:	mov	r0, r1
   126b4:	ldr	r1, [sp, #8]
   126b8:	ldr	r2, [sp, #4]
   126bc:	bl	10f44 <error@plt>
   126c0:	b	126c4 <__assert_fail@plt+0x1624>
   126c4:	ldr	r0, [pc, #144]	; 1275c <__assert_fail@plt+0x16bc>
   126c8:	ldr	r1, [fp, #-20]	; 0xffffffec
   126cc:	cmp	r1, r0
   126d0:	beq	12750 <__assert_fail@plt+0x16b0>
   126d4:	b	126d8 <__assert_fail@plt+0x1638>
   126d8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   126dc:	ldr	r1, [sp, #28]
   126e0:	cmp	r0, r1
   126e4:	movw	r0, #0
   126e8:	str	r0, [sp]
   126ec:	bcs	12714 <__assert_fail@plt+0x1674>
   126f0:	ldr	r0, [fp, #-4]
   126f4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   126f8:	add	r0, r0, r1
   126fc:	ldrb	r0, [r0]
   12700:	ldr	r1, [fp, #-20]	; 0xffffffec
   12704:	cmp	r0, r1
   12708:	movw	r0, #0
   1270c:	moveq	r0, #1
   12710:	str	r0, [sp]
   12714:	ldr	r0, [sp]
   12718:	tst	r0, #1
   1271c:	beq	12734 <__assert_fail@plt+0x1694>
   12720:	b	12724 <__assert_fail@plt+0x1684>
   12724:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12728:	add	r0, r0, #1
   1272c:	str	r0, [fp, #-24]	; 0xffffffe8
   12730:	b	126d8 <__assert_fail@plt+0x1638>
   12734:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12738:	ldr	r1, [sp, #28]
   1273c:	cmp	r0, r1
   12740:	bcs	1274c <__assert_fail@plt+0x16ac>
   12744:	ldr	r0, [pc, #16]	; 1275c <__assert_fail@plt+0x16bc>
   12748:	str	r0, [fp, #-20]	; 0xffffffec
   1274c:	b	12750 <__assert_fail@plt+0x16b0>
   12750:	b	12498 <__assert_fail@plt+0x13f8>
   12754:	mov	sp, fp
   12758:	pop	{fp, pc}
   1275c:	svcvc	0x00ffffff
   12760:	push	{fp, lr}
   12764:	mov	fp, sp
   12768:	sub	sp, sp, #24
   1276c:	str	r0, [fp, #-4]
   12770:	str	r1, [fp, #-8]
   12774:	ldr	r1, [fp, #-4]
   12778:	ldr	r2, [fp, #-8]
   1277c:	movw	r0, #0
   12780:	bl	17c60 <__assert_fail@plt+0x6bc0>
   12784:	str	r0, [sp, #12]
   12788:	ldr	r0, [sp, #12]
   1278c:	cmn	r0, #1
   12790:	bne	127c4 <__assert_fail@plt+0x1724>
   12794:	bl	10fd4 <__errno_location@plt>
   12798:	ldr	r1, [r0]
   1279c:	movw	r0, #3637	; 0xe35
   127a0:	movt	r0, #2
   127a4:	str	r1, [sp, #8]
   127a8:	bl	10fa4 <gettext@plt>
   127ac:	movw	r1, #1
   127b0:	str	r0, [sp, #4]
   127b4:	mov	r0, r1
   127b8:	ldr	r1, [sp, #8]
   127bc:	ldr	r2, [sp, #4]
   127c0:	bl	10f44 <error@plt>
   127c4:	ldr	r0, [sp, #12]
   127c8:	mov	sp, fp
   127cc:	pop	{fp, pc}
   127d0:	push	{fp, lr}
   127d4:	mov	fp, sp
   127d8:	sub	sp, sp, #32
   127dc:	str	r0, [fp, #-8]
   127e0:	str	r1, [fp, #-12]
   127e4:	ldr	r0, [fp, #-8]
   127e8:	ldr	r1, [fp, #-12]
   127ec:	bl	12760 <__assert_fail@plt+0x16c0>
   127f0:	str	r0, [sp, #12]
   127f4:	ldr	r0, [sp, #12]
   127f8:	cmp	r0, #0
   127fc:	bne	1280c <__assert_fail@plt+0x176c>
   12800:	movw	r0, #0
   12804:	str	r0, [fp, #-4]
   12808:	b	12928 <__assert_fail@plt+0x1888>
   1280c:	movw	r0, #0
   12810:	str	r0, [sp, #8]
   12814:	ldr	r0, [sp, #8]
   12818:	ldr	r1, [sp, #12]
   1281c:	cmp	r0, r1
   12820:	movw	r0, #0
   12824:	str	r0, [sp, #4]
   12828:	bcs	12860 <__assert_fail@plt+0x17c0>
   1282c:	ldr	r0, [fp, #-8]
   12830:	ldr	r1, [sp, #8]
   12834:	add	r0, r0, r1
   12838:	ldrb	r0, [r0]
   1283c:	bl	144d0 <__assert_fail@plt+0x3430>
   12840:	and	r0, r0, #255	; 0xff
   12844:	movw	r1, #16990	; 0x425e
   12848:	movt	r1, #3
   1284c:	add	r0, r1, r0
   12850:	ldrb	r0, [r0]
   12854:	mvn	r1, #0
   12858:	eor	r0, r0, r1
   1285c:	str	r0, [sp, #4]
   12860:	ldr	r0, [sp, #4]
   12864:	tst	r0, #1
   12868:	beq	12880 <__assert_fail@plt+0x17e0>
   1286c:	b	12870 <__assert_fail@plt+0x17d0>
   12870:	ldr	r0, [sp, #8]
   12874:	add	r0, r0, #1
   12878:	str	r0, [sp, #8]
   1287c:	b	12814 <__assert_fail@plt+0x1774>
   12880:	ldr	r0, [sp, #8]
   12884:	str	r0, [sp, #16]
   12888:	ldr	r0, [sp, #8]
   1288c:	add	r0, r0, #1
   12890:	str	r0, [sp, #8]
   12894:	ldr	r0, [sp, #8]
   12898:	ldr	r1, [sp, #12]
   1289c:	cmp	r0, r1
   128a0:	bcs	12910 <__assert_fail@plt+0x1870>
   128a4:	ldr	r0, [fp, #-8]
   128a8:	ldr	r1, [sp, #8]
   128ac:	add	r0, r0, r1
   128b0:	ldrb	r0, [r0]
   128b4:	bl	144d0 <__assert_fail@plt+0x3430>
   128b8:	and	r0, r0, #255	; 0xff
   128bc:	movw	r1, #16990	; 0x425e
   128c0:	movt	r1, #3
   128c4:	add	r0, r1, r0
   128c8:	ldrb	r0, [r0]
   128cc:	tst	r0, #1
   128d0:	bne	128fc <__assert_fail@plt+0x185c>
   128d4:	ldr	r0, [fp, #-8]
   128d8:	ldr	r1, [sp, #8]
   128dc:	add	r0, r0, r1
   128e0:	ldrb	r0, [r0]
   128e4:	ldr	r1, [fp, #-8]
   128e8:	ldr	r2, [sp, #16]
   128ec:	add	r3, r2, #1
   128f0:	str	r3, [sp, #16]
   128f4:	add	r1, r1, r2
   128f8:	strb	r0, [r1]
   128fc:	b	12900 <__assert_fail@plt+0x1860>
   12900:	ldr	r0, [sp, #8]
   12904:	add	r0, r0, #1
   12908:	str	r0, [sp, #8]
   1290c:	b	12894 <__assert_fail@plt+0x17f4>
   12910:	b	12914 <__assert_fail@plt+0x1874>
   12914:	ldr	r0, [sp, #16]
   12918:	cmp	r0, #0
   1291c:	beq	127e4 <__assert_fail@plt+0x1744>
   12920:	ldr	r0, [sp, #16]
   12924:	str	r0, [fp, #-4]
   12928:	ldr	r0, [fp, #-4]
   1292c:	mov	sp, fp
   12930:	pop	{fp, pc}
   12934:	push	{fp, lr}
   12938:	mov	fp, sp
   1293c:	sub	sp, sp, #32
   12940:	str	r0, [fp, #-8]
   12944:	str	r1, [fp, #-12]
   12948:	ldr	r0, [fp, #-12]
   1294c:	movw	r1, #0
   12950:	cmp	r0, r1
   12954:	beq	12964 <__assert_fail@plt+0x18c4>
   12958:	ldr	r0, [fp, #-12]
   1295c:	movw	r1, #2
   12960:	str	r1, [r0]
   12964:	ldr	r0, [fp, #-8]
   12968:	ldr	r1, [r0, #8]
   1296c:	ldr	r0, [r0, #12]
   12970:	mvn	r2, #1
   12974:	eor	r1, r1, r2
   12978:	mvn	r0, r0
   1297c:	orr	r0, r1, r0
   12980:	cmp	r0, #0
   12984:	bne	129ac <__assert_fail@plt+0x190c>
   12988:	b	1298c <__assert_fail@plt+0x18ec>
   1298c:	ldr	r0, [fp, #-8]
   12990:	ldr	r1, [r0]
   12994:	ldr	r1, [r1, #4]
   12998:	str	r1, [r0, #4]
   1299c:	ldr	r0, [fp, #-8]
   129a0:	mvn	r1, #0
   129a4:	str	r1, [r0, #12]
   129a8:	str	r1, [r0, #8]
   129ac:	ldr	r0, [fp, #-8]
   129b0:	ldr	r0, [r0, #4]
   129b4:	str	r0, [sp, #16]
   129b8:	ldr	r0, [sp, #16]
   129bc:	movw	r1, #0
   129c0:	cmp	r0, r1
   129c4:	bne	129d4 <__assert_fail@plt+0x1934>
   129c8:	mvn	r0, #0
   129cc:	str	r0, [fp, #-4]
   129d0:	b	12e10 <__assert_fail@plt+0x1d70>
   129d4:	ldr	r0, [sp, #16]
   129d8:	ldr	r0, [r0]
   129dc:	cmp	r0, #4
   129e0:	str	r0, [sp, #4]
   129e4:	bhi	12e04 <__assert_fail@plt+0x1d64>
   129e8:	add	r0, pc, #8
   129ec:	ldr	r1, [sp, #4]
   129f0:	ldr	r0, [r0, r1, lsl #2]
   129f4:	mov	pc, r0
   129f8:	andeq	r2, r1, ip, lsl #20
   129fc:	andeq	r2, r1, ip, lsr sl
   12a00:	andeq	r2, r1, r8, ror #21
   12a04:	ldrdeq	r2, [r1], -r8
   12a08:	andeq	r2, r1, r8, lsl #26
   12a0c:	ldr	r0, [sp, #16]
   12a10:	ldrb	r0, [r0, #8]
   12a14:	str	r0, [sp, #12]
   12a18:	ldr	r0, [fp, #-8]
   12a1c:	mvn	r1, #0
   12a20:	str	r1, [r0, #12]
   12a24:	str	r1, [r0, #8]
   12a28:	ldr	r0, [sp, #16]
   12a2c:	ldr	r0, [r0, #4]
   12a30:	ldr	r1, [fp, #-8]
   12a34:	str	r0, [r1, #4]
   12a38:	b	12e08 <__assert_fail@plt+0x1d68>
   12a3c:	ldr	r0, [fp, #-8]
   12a40:	ldr	r1, [r0, #8]
   12a44:	ldr	r0, [r0, #12]
   12a48:	and	r0, r1, r0
   12a4c:	cmn	r0, #1
   12a50:	bne	12a74 <__assert_fail@plt+0x19d4>
   12a54:	b	12a58 <__assert_fail@plt+0x19b8>
   12a58:	ldr	r0, [sp, #16]
   12a5c:	ldrb	r0, [r0, #8]
   12a60:	ldr	r1, [fp, #-8]
   12a64:	mov	r2, #0
   12a68:	str	r2, [r1, #12]
   12a6c:	str	r0, [r1, #8]
   12a70:	b	12a90 <__assert_fail@plt+0x19f0>
   12a74:	ldr	r0, [fp, #-8]
   12a78:	ldr	r1, [r0, #8]
   12a7c:	ldr	r2, [r0, #12]
   12a80:	adds	r1, r1, #1
   12a84:	adc	r2, r2, #0
   12a88:	str	r1, [r0, #8]
   12a8c:	str	r2, [r0, #12]
   12a90:	ldr	r0, [fp, #-8]
   12a94:	ldr	r0, [r0, #8]
   12a98:	str	r0, [sp, #12]
   12a9c:	ldr	r0, [fp, #-8]
   12aa0:	ldr	r1, [r0, #8]
   12aa4:	ldr	r0, [r0, #12]
   12aa8:	ldr	r2, [sp, #16]
   12aac:	ldrb	r2, [r2, #9]
   12ab0:	eor	r1, r1, r2
   12ab4:	orr	r0, r1, r0
   12ab8:	cmp	r0, #0
   12abc:	bne	12ae4 <__assert_fail@plt+0x1a44>
   12ac0:	b	12ac4 <__assert_fail@plt+0x1a24>
   12ac4:	ldr	r0, [sp, #16]
   12ac8:	ldr	r0, [r0, #4]
   12acc:	ldr	r1, [fp, #-8]
   12ad0:	str	r0, [r1, #4]
   12ad4:	ldr	r0, [fp, #-8]
   12ad8:	mvn	r1, #0
   12adc:	str	r1, [r0, #12]
   12ae0:	str	r1, [r0, #8]
   12ae4:	b	12e08 <__assert_fail@plt+0x1d68>
   12ae8:	ldr	r0, [fp, #-12]
   12aec:	movw	r1, #0
   12af0:	cmp	r0, r1
   12af4:	beq	12b48 <__assert_fail@plt+0x1aa8>
   12af8:	ldr	r0, [sp, #16]
   12afc:	ldr	r0, [r0, #8]
   12b00:	cmp	r0, #6
   12b04:	str	r0, [sp]
   12b08:	beq	12b20 <__assert_fail@plt+0x1a80>
   12b0c:	b	12b10 <__assert_fail@plt+0x1a70>
   12b10:	ldr	r0, [sp]
   12b14:	cmp	r0, #10
   12b18:	beq	12b30 <__assert_fail@plt+0x1a90>
   12b1c:	b	12b40 <__assert_fail@plt+0x1aa0>
   12b20:	ldr	r0, [fp, #-12]
   12b24:	movw	r1, #0
   12b28:	str	r1, [r0]
   12b2c:	b	12b44 <__assert_fail@plt+0x1aa4>
   12b30:	ldr	r0, [fp, #-12]
   12b34:	movw	r1, #1
   12b38:	str	r1, [r0]
   12b3c:	b	12b44 <__assert_fail@plt+0x1aa4>
   12b40:	b	12b44 <__assert_fail@plt+0x1aa4>
   12b44:	b	12b48 <__assert_fail@plt+0x1aa8>
   12b48:	ldr	r0, [fp, #-8]
   12b4c:	ldr	r1, [r0, #8]
   12b50:	ldr	r0, [r0, #12]
   12b54:	and	r0, r1, r0
   12b58:	cmn	r0, #1
   12b5c:	bne	12bf0 <__assert_fail@plt+0x1b50>
   12b60:	b	12b64 <__assert_fail@plt+0x1ac4>
   12b64:	movw	r0, #0
   12b68:	str	r0, [sp, #8]
   12b6c:	ldr	r0, [sp, #8]
   12b70:	cmp	r0, #256	; 0x100
   12b74:	bge	12bac <__assert_fail@plt+0x1b0c>
   12b78:	ldr	r0, [sp, #16]
   12b7c:	ldr	r0, [r0, #8]
   12b80:	ldr	r1, [sp, #8]
   12b84:	and	r1, r1, #255	; 0xff
   12b88:	bl	14ffc <__assert_fail@plt+0x3f5c>
   12b8c:	tst	r0, #1
   12b90:	beq	12b98 <__assert_fail@plt+0x1af8>
   12b94:	b	12bac <__assert_fail@plt+0x1b0c>
   12b98:	b	12b9c <__assert_fail@plt+0x1afc>
   12b9c:	ldr	r0, [sp, #8]
   12ba0:	add	r0, r0, #1
   12ba4:	str	r0, [sp, #8]
   12ba8:	b	12b6c <__assert_fail@plt+0x1acc>
   12bac:	ldr	r0, [sp, #8]
   12bb0:	cmp	r0, #256	; 0x100
   12bb4:	bge	12bbc <__assert_fail@plt+0x1b1c>
   12bb8:	b	12bdc <__assert_fail@plt+0x1b3c>
   12bbc:	movw	r0, #3648	; 0xe40
   12bc0:	movt	r0, #2
   12bc4:	movw	r1, #1224	; 0x4c8
   12bc8:	movt	r1, #2
   12bcc:	movw	r2, #1079	; 0x437
   12bd0:	movw	r3, #3660	; 0xe4c
   12bd4:	movt	r3, #2
   12bd8:	bl	110a0 <__assert_fail@plt>
   12bdc:	ldr	r0, [sp, #8]
   12be0:	asr	r1, r0, #31
   12be4:	ldr	r2, [fp, #-8]
   12be8:	str	r0, [r2, #8]
   12bec:	str	r1, [r2, #12]
   12bf0:	ldr	r0, [sp, #16]
   12bf4:	ldr	r0, [r0, #8]
   12bf8:	ldr	r1, [fp, #-8]
   12bfc:	ldrb	r1, [r1, #8]
   12c00:	and	r1, r1, #255	; 0xff
   12c04:	bl	14ffc <__assert_fail@plt+0x3f5c>
   12c08:	tst	r0, #1
   12c0c:	beq	12c14 <__assert_fail@plt+0x1b74>
   12c10:	b	12c34 <__assert_fail@plt+0x1b94>
   12c14:	movw	r0, #3719	; 0xe87
   12c18:	movt	r0, #2
   12c1c:	movw	r1, #1224	; 0x4c8
   12c20:	movt	r1, #2
   12c24:	movw	r2, #1082	; 0x43a
   12c28:	movw	r3, #3660	; 0xe4c
   12c2c:	movt	r3, #2
   12c30:	bl	110a0 <__assert_fail@plt>
   12c34:	ldr	r0, [fp, #-8]
   12c38:	ldr	r0, [r0, #8]
   12c3c:	str	r0, [sp, #12]
   12c40:	ldr	r0, [fp, #-8]
   12c44:	ldr	r0, [r0, #8]
   12c48:	add	r0, r0, #1
   12c4c:	str	r0, [sp, #8]
   12c50:	ldr	r0, [sp, #8]
   12c54:	cmp	r0, #256	; 0x100
   12c58:	bge	12c90 <__assert_fail@plt+0x1bf0>
   12c5c:	ldr	r0, [sp, #16]
   12c60:	ldr	r0, [r0, #8]
   12c64:	ldr	r1, [sp, #8]
   12c68:	and	r1, r1, #255	; 0xff
   12c6c:	bl	14ffc <__assert_fail@plt+0x3f5c>
   12c70:	tst	r0, #1
   12c74:	beq	12c7c <__assert_fail@plt+0x1bdc>
   12c78:	b	12c90 <__assert_fail@plt+0x1bf0>
   12c7c:	b	12c80 <__assert_fail@plt+0x1be0>
   12c80:	ldr	r0, [sp, #8]
   12c84:	add	r0, r0, #1
   12c88:	str	r0, [sp, #8]
   12c8c:	b	12c50 <__assert_fail@plt+0x1bb0>
   12c90:	ldr	r0, [sp, #8]
   12c94:	cmp	r0, #256	; 0x100
   12c98:	bge	12cb4 <__assert_fail@plt+0x1c14>
   12c9c:	ldr	r0, [sp, #8]
   12ca0:	asr	r1, r0, #31
   12ca4:	ldr	r2, [fp, #-8]
   12ca8:	str	r0, [r2, #8]
   12cac:	str	r1, [r2, #12]
   12cb0:	b	12cd4 <__assert_fail@plt+0x1c34>
   12cb4:	ldr	r0, [sp, #16]
   12cb8:	ldr	r0, [r0, #4]
   12cbc:	ldr	r1, [fp, #-8]
   12cc0:	str	r0, [r1, #4]
   12cc4:	ldr	r0, [fp, #-8]
   12cc8:	mvn	r1, #0
   12ccc:	str	r1, [r0, #12]
   12cd0:	str	r1, [r0, #8]
   12cd4:	b	12e08 <__assert_fail@plt+0x1d68>
   12cd8:	ldr	r0, [sp, #16]
   12cdc:	ldrb	r0, [r0, #8]
   12ce0:	str	r0, [sp, #12]
   12ce4:	ldr	r0, [fp, #-8]
   12ce8:	mvn	r1, #0
   12cec:	str	r1, [r0, #12]
   12cf0:	str	r1, [r0, #8]
   12cf4:	ldr	r0, [sp, #16]
   12cf8:	ldr	r0, [r0, #4]
   12cfc:	ldr	r1, [fp, #-8]
   12d00:	str	r0, [r1, #4]
   12d04:	b	12e08 <__assert_fail@plt+0x1d68>
   12d08:	ldr	r0, [sp, #16]
   12d0c:	ldr	r1, [r0, #16]
   12d10:	ldr	r0, [r0, #20]
   12d14:	orr	r0, r1, r0
   12d18:	cmp	r0, #0
   12d1c:	bne	12d58 <__assert_fail@plt+0x1cb8>
   12d20:	b	12d24 <__assert_fail@plt+0x1c84>
   12d24:	ldr	r0, [sp, #16]
   12d28:	ldr	r0, [r0, #4]
   12d2c:	ldr	r1, [fp, #-8]
   12d30:	str	r0, [r1, #4]
   12d34:	ldr	r0, [fp, #-8]
   12d38:	mvn	r1, #0
   12d3c:	str	r1, [r0, #12]
   12d40:	str	r1, [r0, #8]
   12d44:	ldr	r0, [fp, #-8]
   12d48:	ldr	r1, [fp, #-12]
   12d4c:	bl	12934 <__assert_fail@plt+0x1894>
   12d50:	str	r0, [sp, #12]
   12d54:	b	12e00 <__assert_fail@plt+0x1d60>
   12d58:	ldr	r0, [fp, #-8]
   12d5c:	ldr	r1, [r0, #8]
   12d60:	ldr	r0, [r0, #12]
   12d64:	and	r0, r1, r0
   12d68:	cmn	r0, #1
   12d6c:	bne	12d84 <__assert_fail@plt+0x1ce4>
   12d70:	b	12d74 <__assert_fail@plt+0x1cd4>
   12d74:	ldr	r0, [fp, #-8]
   12d78:	mov	r1, #0
   12d7c:	str	r1, [r0, #12]
   12d80:	str	r1, [r0, #8]
   12d84:	ldr	r0, [fp, #-8]
   12d88:	ldr	r1, [r0, #8]
   12d8c:	ldr	r2, [r0, #12]
   12d90:	adds	r1, r1, #1
   12d94:	adc	r2, r2, #0
   12d98:	str	r1, [r0, #8]
   12d9c:	str	r2, [r0, #12]
   12da0:	ldr	r0, [sp, #16]
   12da4:	ldrb	r0, [r0, #8]
   12da8:	str	r0, [sp, #12]
   12dac:	ldr	r0, [fp, #-8]
   12db0:	ldr	r1, [r0, #8]
   12db4:	ldr	r0, [r0, #12]
   12db8:	ldr	r2, [sp, #16]
   12dbc:	ldr	r3, [r2, #16]
   12dc0:	ldr	r2, [r2, #20]
   12dc4:	eor	r0, r0, r2
   12dc8:	eor	r1, r1, r3
   12dcc:	orr	r0, r1, r0
   12dd0:	cmp	r0, #0
   12dd4:	bne	12dfc <__assert_fail@plt+0x1d5c>
   12dd8:	b	12ddc <__assert_fail@plt+0x1d3c>
   12ddc:	ldr	r0, [sp, #16]
   12de0:	ldr	r0, [r0, #4]
   12de4:	ldr	r1, [fp, #-8]
   12de8:	str	r0, [r1, #4]
   12dec:	ldr	r0, [fp, #-8]
   12df0:	mvn	r1, #0
   12df4:	str	r1, [r0, #12]
   12df8:	str	r1, [r0, #8]
   12dfc:	b	12e00 <__assert_fail@plt+0x1d60>
   12e00:	b	12e08 <__assert_fail@plt+0x1d68>
   12e04:	bl	11088 <abort@plt>
   12e08:	ldr	r0, [sp, #12]
   12e0c:	str	r0, [fp, #-4]
   12e10:	ldr	r0, [fp, #-4]
   12e14:	mov	sp, fp
   12e18:	pop	{fp, pc}
   12e1c:	sub	sp, sp, #4
   12e20:	str	r0, [sp]
   12e24:	ldr	r0, [sp]
   12e28:	ldr	r1, [r0, #4]
   12e2c:	ldr	r1, [r1, #4]
   12e30:	str	r1, [r0, #4]
   12e34:	ldr	r0, [sp]
   12e38:	mvn	r1, #0
   12e3c:	str	r1, [r0, #12]
   12e40:	str	r1, [r0, #8]
   12e44:	add	sp, sp, #4
   12e48:	bx	lr
   12e4c:	push	{fp, lr}
   12e50:	mov	fp, sp
   12e54:	sub	sp, sp, #16
   12e58:	str	r0, [fp, #-4]
   12e5c:	str	r1, [sp, #8]
   12e60:	ldr	r0, [fp, #-4]
   12e64:	ldr	r1, [sp, #8]
   12e68:	bl	12760 <__assert_fail@plt+0x16c0>
   12e6c:	str	r0, [sp, #4]
   12e70:	movw	r0, #0
   12e74:	str	r0, [sp]
   12e78:	ldr	r0, [sp]
   12e7c:	ldr	r1, [sp, #4]
   12e80:	cmp	r0, r1
   12e84:	bcs	12ed0 <__assert_fail@plt+0x1e30>
   12e88:	ldr	r0, [fp, #-4]
   12e8c:	ldr	r1, [sp]
   12e90:	add	r0, r0, r1
   12e94:	ldrb	r0, [r0]
   12e98:	bl	144d0 <__assert_fail@plt+0x3430>
   12e9c:	and	r0, r0, #255	; 0xff
   12ea0:	movw	r1, #17246	; 0x435e
   12ea4:	movt	r1, #3
   12ea8:	add	r0, r1, r0
   12eac:	ldrb	r0, [r0]
   12eb0:	ldr	r1, [fp, #-4]
   12eb4:	ldr	r2, [sp]
   12eb8:	add	r1, r1, r2
   12ebc:	strb	r0, [r1]
   12ec0:	ldr	r0, [sp]
   12ec4:	add	r0, r0, #1
   12ec8:	str	r0, [sp]
   12ecc:	b	12e78 <__assert_fail@plt+0x1dd8>
   12ed0:	ldr	r0, [sp, #4]
   12ed4:	mov	sp, fp
   12ed8:	pop	{fp, pc}
   12edc:	push	{r4, r5, r6, r7, fp, lr}
   12ee0:	add	fp, sp, #16
   12ee4:	sub	sp, sp, #72	; 0x48
   12ee8:	str	r0, [fp, #-20]	; 0xffffffec
   12eec:	str	r1, [fp, #-24]	; 0xffffffe8
   12ef0:	ldr	r0, [fp, #-20]	; 0xffffffec
   12ef4:	bl	10fb0 <strlen@plt>
   12ef8:	str	r0, [fp, #-28]	; 0xffffffe4
   12efc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   12f00:	bl	185dc <__assert_fail@plt+0x753c>
   12f04:	ldr	r1, [fp, #-24]	; 0xffffffe8
   12f08:	str	r0, [r1]
   12f0c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   12f10:	movw	r1, #1
   12f14:	bl	1b198 <__assert_fail@plt+0xa0f8>
   12f18:	ldr	r1, [fp, #-24]	; 0xffffffe8
   12f1c:	str	r0, [r1, #4]
   12f20:	movw	r0, #0
   12f24:	str	r0, [fp, #-32]	; 0xffffffe0
   12f28:	str	r0, [fp, #-36]	; 0xffffffdc
   12f2c:	ldr	r0, [fp, #-20]	; 0xffffffec
   12f30:	ldr	r1, [fp, #-36]	; 0xffffffdc
   12f34:	add	r0, r0, r1
   12f38:	ldrsb	r0, [r0]
   12f3c:	cmp	r0, #0
   12f40:	beq	13474 <__assert_fail@plt+0x23d4>
   12f44:	ldr	r0, [fp, #-20]	; 0xffffffec
   12f48:	ldr	r1, [fp, #-36]	; 0xffffffdc
   12f4c:	ldrb	r0, [r0, r1]
   12f50:	cmp	r0, #92	; 0x5c
   12f54:	bne	13434 <__assert_fail@plt+0x2394>
   12f58:	b	12f5c <__assert_fail@plt+0x1ebc>
   12f5c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12f60:	ldr	r0, [r0, #4]
   12f64:	ldr	r1, [fp, #-32]	; 0xffffffe0
   12f68:	mov	r2, #1
   12f6c:	strb	r2, [r0, r1]
   12f70:	ldr	r0, [fp, #-20]	; 0xffffffec
   12f74:	ldr	r1, [fp, #-36]	; 0xffffffdc
   12f78:	add	r0, r1, r0
   12f7c:	ldrb	r0, [r0, #1]
   12f80:	mov	r1, r0
   12f84:	cmp	r0, #118	; 0x76
   12f88:	str	r1, [sp, #40]	; 0x28
   12f8c:	bhi	133ec <__assert_fail@plt+0x234c>
   12f90:	add	r0, pc, #8
   12f94:	ldr	r1, [sp, #40]	; 0x28
   12f98:	ldr	r0, [r0, r1, lsl #2]
   12f9c:	mov	pc, r0
   12fa0:	muleq	r1, r8, r3
   12fa4:	andeq	r3, r1, ip, ror #7
   12fa8:	andeq	r3, r1, ip, ror #7
   12fac:	andeq	r3, r1, ip, ror #7
   12fb0:	andeq	r3, r1, ip, ror #7
   12fb4:	andeq	r3, r1, ip, ror #7
   12fb8:	andeq	r3, r1, ip, ror #7
   12fbc:	andeq	r3, r1, ip, ror #7
   12fc0:	andeq	r3, r1, ip, ror #7
   12fc4:	andeq	r3, r1, ip, ror #7
   12fc8:	andeq	r3, r1, ip, ror #7
   12fcc:	andeq	r3, r1, ip, ror #7
   12fd0:	andeq	r3, r1, ip, ror #7
   12fd4:	andeq	r3, r1, ip, ror #7
   12fd8:	andeq	r3, r1, ip, ror #7
   12fdc:	andeq	r3, r1, ip, ror #7
   12fe0:	andeq	r3, r1, ip, ror #7
   12fe4:	andeq	r3, r1, ip, ror #7
   12fe8:	andeq	r3, r1, ip, ror #7
   12fec:	andeq	r3, r1, ip, ror #7
   12ff0:	andeq	r3, r1, ip, ror #7
   12ff4:	andeq	r3, r1, ip, ror #7
   12ff8:	andeq	r3, r1, ip, ror #7
   12ffc:	andeq	r3, r1, ip, ror #7
   13000:	andeq	r3, r1, ip, ror #7
   13004:	andeq	r3, r1, ip, ror #7
   13008:	andeq	r3, r1, ip, ror #7
   1300c:	andeq	r3, r1, ip, ror #7
   13010:	andeq	r3, r1, ip, ror #7
   13014:	andeq	r3, r1, ip, ror #7
   13018:	andeq	r3, r1, ip, ror #7
   1301c:	andeq	r3, r1, ip, ror #7
   13020:	andeq	r3, r1, ip, ror #7
   13024:	andeq	r3, r1, ip, ror #7
   13028:	andeq	r3, r1, ip, ror #7
   1302c:	andeq	r3, r1, ip, ror #7
   13030:	andeq	r3, r1, ip, ror #7
   13034:	andeq	r3, r1, ip, ror #7
   13038:	andeq	r3, r1, ip, ror #7
   1303c:	andeq	r3, r1, ip, ror #7
   13040:	andeq	r3, r1, ip, ror #7
   13044:	andeq	r3, r1, ip, ror #7
   13048:	andeq	r3, r1, ip, ror #7
   1304c:	andeq	r3, r1, ip, ror #7
   13050:	andeq	r3, r1, ip, ror #7
   13054:	andeq	r3, r1, ip, ror #7
   13058:	andeq	r3, r1, ip, ror #7
   1305c:	andeq	r3, r1, ip, ror #7
   13060:	ldrdeq	r3, [r1], -ip
   13064:	ldrdeq	r3, [r1], -ip
   13068:	ldrdeq	r3, [r1], -ip
   1306c:	ldrdeq	r3, [r1], -ip
   13070:	ldrdeq	r3, [r1], -ip
   13074:	ldrdeq	r3, [r1], -ip
   13078:	ldrdeq	r3, [r1], -ip
   1307c:	ldrdeq	r3, [r1], -ip
   13080:	andeq	r3, r1, ip, ror #7
   13084:	andeq	r3, r1, ip, ror #7
   13088:	andeq	r3, r1, ip, ror #7
   1308c:	andeq	r3, r1, ip, ror #7
   13090:	andeq	r3, r1, ip, ror #7
   13094:	andeq	r3, r1, ip, ror #7
   13098:	andeq	r3, r1, ip, ror #7
   1309c:	andeq	r3, r1, ip, ror #7
   130a0:	andeq	r3, r1, ip, ror #7
   130a4:	andeq	r3, r1, ip, ror #7
   130a8:	andeq	r3, r1, ip, ror #7
   130ac:	andeq	r3, r1, ip, ror #7
   130b0:	andeq	r3, r1, ip, ror #7
   130b4:	andeq	r3, r1, ip, ror #7
   130b8:	andeq	r3, r1, ip, ror #7
   130bc:	andeq	r3, r1, ip, ror #7
   130c0:	andeq	r3, r1, ip, ror #7
   130c4:	andeq	r3, r1, ip, ror #7
   130c8:	andeq	r3, r1, ip, ror #7
   130cc:	andeq	r3, r1, ip, ror #7
   130d0:	andeq	r3, r1, ip, ror #7
   130d4:	andeq	r3, r1, ip, ror #7
   130d8:	andeq	r3, r1, ip, ror #7
   130dc:	andeq	r3, r1, ip, ror #7
   130e0:	andeq	r3, r1, ip, ror #7
   130e4:	andeq	r3, r1, ip, ror #7
   130e8:	andeq	r3, r1, ip, ror #7
   130ec:	andeq	r3, r1, ip, ror #7
   130f0:	andeq	r3, r1, ip, ror #7
   130f4:	andeq	r3, r1, ip, ror #7
   130f8:	andeq	r3, r1, ip, ror #7
   130fc:	andeq	r3, r1, ip, ror #7
   13100:	andeq	r3, r1, ip, ror #7
   13104:	andeq	r3, r1, ip, ror #7
   13108:	andeq	r3, r1, ip, ror #7
   1310c:	andeq	r3, r1, ip, ror #7
   13110:	andeq	r3, r1, ip, ror r1
   13114:	andeq	r3, r1, ip, ror #7
   13118:	andeq	r3, r1, ip, ror #7
   1311c:	andeq	r3, r1, ip, ror #7
   13120:	andeq	r3, r1, ip, ror #7
   13124:	andeq	r3, r1, r8, lsl #3
   13128:	muleq	r1, r4, r1
   1312c:	andeq	r3, r1, ip, ror #7
   13130:	andeq	r3, r1, ip, ror #7
   13134:	andeq	r3, r1, ip, ror #7
   13138:	andeq	r3, r1, r0, lsr #3
   1313c:	andeq	r3, r1, ip, ror #7
   13140:	andeq	r3, r1, ip, ror #7
   13144:	andeq	r3, r1, ip, ror #7
   13148:	andeq	r3, r1, ip, ror #7
   1314c:	andeq	r3, r1, ip, ror #7
   13150:	andeq	r3, r1, ip, ror #7
   13154:	andeq	r3, r1, ip, ror #7
   13158:	andeq	r3, r1, ip, lsr #3
   1315c:	andeq	r3, r1, ip, ror #7
   13160:	andeq	r3, r1, ip, ror #7
   13164:	andeq	r3, r1, ip, ror #7
   13168:			; <UNDEFINED> instruction: 0x000131b8
   1316c:	andeq	r3, r1, ip, ror #7
   13170:	andeq	r3, r1, r4, asr #3
   13174:	andeq	r3, r1, ip, ror #7
   13178:	ldrdeq	r3, [r1], -r0
   1317c:	movw	r0, #92	; 0x5c
   13180:	strb	r0, [fp, #-37]	; 0xffffffdb
   13184:	b	13404 <__assert_fail@plt+0x2364>
   13188:	movw	r0, #7
   1318c:	strb	r0, [fp, #-37]	; 0xffffffdb
   13190:	b	13404 <__assert_fail@plt+0x2364>
   13194:	movw	r0, #8
   13198:	strb	r0, [fp, #-37]	; 0xffffffdb
   1319c:	b	13404 <__assert_fail@plt+0x2364>
   131a0:	movw	r0, #12
   131a4:	strb	r0, [fp, #-37]	; 0xffffffdb
   131a8:	b	13404 <__assert_fail@plt+0x2364>
   131ac:	movw	r0, #10
   131b0:	strb	r0, [fp, #-37]	; 0xffffffdb
   131b4:	b	13404 <__assert_fail@plt+0x2364>
   131b8:	movw	r0, #13
   131bc:	strb	r0, [fp, #-37]	; 0xffffffdb
   131c0:	b	13404 <__assert_fail@plt+0x2364>
   131c4:	movw	r0, #9
   131c8:	strb	r0, [fp, #-37]	; 0xffffffdb
   131cc:	b	13404 <__assert_fail@plt+0x2364>
   131d0:	movw	r0, #11
   131d4:	strb	r0, [fp, #-37]	; 0xffffffdb
   131d8:	b	13404 <__assert_fail@plt+0x2364>
   131dc:	ldr	r0, [fp, #-20]	; 0xffffffec
   131e0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   131e4:	add	r1, r1, #1
   131e8:	add	r0, r0, r1
   131ec:	ldrb	r0, [r0]
   131f0:	sub	r0, r0, #48	; 0x30
   131f4:	strb	r0, [fp, #-37]	; 0xffffffdb
   131f8:	ldr	r0, [fp, #-20]	; 0xffffffec
   131fc:	ldr	r1, [fp, #-36]	; 0xffffffdc
   13200:	add	r1, r1, #2
   13204:	add	r0, r0, r1
   13208:	ldrb	r0, [r0]
   1320c:	sub	r0, r0, #48	; 0x30
   13210:	str	r0, [sp, #44]	; 0x2c
   13214:	ldr	r0, [sp, #44]	; 0x2c
   13218:	movw	r1, #0
   1321c:	cmp	r1, r0
   13220:	bgt	13394 <__assert_fail@plt+0x22f4>
   13224:	ldr	r0, [sp, #44]	; 0x2c
   13228:	cmp	r0, #7
   1322c:	bgt	13394 <__assert_fail@plt+0x22f4>
   13230:	ldrb	r0, [fp, #-37]	; 0xffffffdb
   13234:	mov	r1, r0
   13238:	lsl	r0, r0, #3
   1323c:	ldr	r2, [sp, #44]	; 0x2c
   13240:	add	r0, r0, r2
   13244:	strb	r0, [fp, #-37]	; 0xffffffdb
   13248:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1324c:	add	r0, r0, #1
   13250:	str	r0, [fp, #-36]	; 0xffffffdc
   13254:	ldr	r0, [fp, #-20]	; 0xffffffec
   13258:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1325c:	add	r2, r2, #2
   13260:	add	r0, r0, r2
   13264:	ldrb	r0, [r0]
   13268:	sub	r0, r0, #48	; 0x30
   1326c:	str	r0, [sp, #44]	; 0x2c
   13270:	ldr	r0, [sp, #44]	; 0x2c
   13274:	movw	r2, #0
   13278:	cmp	r2, r0
   1327c:	bgt	13390 <__assert_fail@plt+0x22f0>
   13280:	ldr	r0, [sp, #44]	; 0x2c
   13284:	cmp	r0, #7
   13288:	bgt	13390 <__assert_fail@plt+0x22f0>
   1328c:	ldrb	r0, [fp, #-37]	; 0xffffffdb
   13290:	mov	r1, r0
   13294:	lsl	r0, r0, #3
   13298:	ldr	r2, [sp, #44]	; 0x2c
   1329c:	add	r0, r0, r2
   132a0:	cmp	r0, #256	; 0x100
   132a4:	bge	132d0 <__assert_fail@plt+0x2230>
   132a8:	ldrb	r0, [fp, #-37]	; 0xffffffdb
   132ac:	mov	r1, r0
   132b0:	lsl	r0, r0, #3
   132b4:	ldr	r2, [sp, #44]	; 0x2c
   132b8:	add	r0, r0, r2
   132bc:	strb	r0, [fp, #-37]	; 0xffffffdb
   132c0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   132c4:	add	r0, r0, #1
   132c8:	str	r0, [fp, #-36]	; 0xffffffdc
   132cc:	b	1338c <__assert_fail@plt+0x22ec>
   132d0:	movw	r0, #1669	; 0x685
   132d4:	movt	r0, #2
   132d8:	bl	10fa4 <gettext@plt>
   132dc:	ldr	r1, [fp, #-20]	; 0xffffffec
   132e0:	ldr	r2, [fp, #-36]	; 0xffffffdc
   132e4:	add	r1, r1, r2
   132e8:	ldrb	r3, [r1]
   132ec:	ldr	r1, [fp, #-20]	; 0xffffffec
   132f0:	ldr	r2, [fp, #-36]	; 0xffffffdc
   132f4:	add	r2, r2, #1
   132f8:	add	r1, r1, r2
   132fc:	ldrb	r1, [r1]
   13300:	ldr	r2, [fp, #-20]	; 0xffffffec
   13304:	ldr	ip, [fp, #-36]	; 0xffffffdc
   13308:	add	ip, ip, #2
   1330c:	add	r2, r2, ip
   13310:	ldrb	r2, [r2]
   13314:	ldr	ip, [fp, #-20]	; 0xffffffec
   13318:	ldr	lr, [fp, #-36]	; 0xffffffdc
   1331c:	add	ip, ip, lr
   13320:	ldrb	ip, [ip]
   13324:	ldr	lr, [fp, #-20]	; 0xffffffec
   13328:	ldr	r4, [fp, #-36]	; 0xffffffdc
   1332c:	add	r4, r4, #1
   13330:	add	lr, lr, r4
   13334:	ldrb	lr, [lr]
   13338:	ldr	r4, [fp, #-20]	; 0xffffffec
   1333c:	ldr	r5, [fp, #-36]	; 0xffffffdc
   13340:	add	r5, r5, #2
   13344:	add	r4, r4, r5
   13348:	ldrb	r4, [r4]
   1334c:	movw	r5, #0
   13350:	str	r0, [sp, #36]	; 0x24
   13354:	mov	r0, r5
   13358:	str	r1, [sp, #32]
   1335c:	mov	r1, r5
   13360:	ldr	r5, [sp, #36]	; 0x24
   13364:	str	r2, [sp, #28]
   13368:	mov	r2, r5
   1336c:	ldr	r6, [sp, #32]
   13370:	str	r6, [sp]
   13374:	ldr	r7, [sp, #28]
   13378:	str	r7, [sp, #4]
   1337c:	str	ip, [sp, #8]
   13380:	str	lr, [sp, #12]
   13384:	str	r4, [sp, #16]
   13388:	bl	10f44 <error@plt>
   1338c:	b	13390 <__assert_fail@plt+0x22f0>
   13390:	b	13394 <__assert_fail@plt+0x22f4>
   13394:	b	13404 <__assert_fail@plt+0x2364>
   13398:	movw	r0, #1769	; 0x6e9
   1339c:	movt	r0, #2
   133a0:	bl	10fa4 <gettext@plt>
   133a4:	movw	r1, #0
   133a8:	str	r0, [sp, #24]
   133ac:	mov	r0, r1
   133b0:	ldr	r2, [sp, #24]
   133b4:	bl	10f44 <error@plt>
   133b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   133bc:	ldr	r0, [r0, #4]
   133c0:	ldr	r1, [fp, #-32]	; 0xffffffe0
   133c4:	add	r0, r0, r1
   133c8:	movw	r1, #0
   133cc:	strb	r1, [r0]
   133d0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   133d4:	mvn	r1, #0
   133d8:	add	r0, r0, r1
   133dc:	str	r0, [fp, #-36]	; 0xffffffdc
   133e0:	movw	r0, #92	; 0x5c
   133e4:	strb	r0, [fp, #-37]	; 0xffffffdb
   133e8:	b	13404 <__assert_fail@plt+0x2364>
   133ec:	ldr	r0, [fp, #-20]	; 0xffffffec
   133f0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   133f4:	add	r1, r1, #1
   133f8:	add	r0, r0, r1
   133fc:	ldrb	r0, [r0]
   13400:	strb	r0, [fp, #-37]	; 0xffffffdb
   13404:	ldr	r0, [fp, #-36]	; 0xffffffdc
   13408:	add	r0, r0, #1
   1340c:	str	r0, [fp, #-36]	; 0xffffffdc
   13410:	ldrb	r0, [fp, #-37]	; 0xffffffdb
   13414:	ldr	r1, [fp, #-24]	; 0xffffffe8
   13418:	ldr	r1, [r1]
   1341c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   13420:	add	r3, r2, #1
   13424:	str	r3, [fp, #-32]	; 0xffffffe0
   13428:	add	r1, r1, r2
   1342c:	strb	r0, [r1]
   13430:	b	13460 <__assert_fail@plt+0x23c0>
   13434:	ldr	r0, [fp, #-20]	; 0xffffffec
   13438:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1343c:	add	r0, r0, r1
   13440:	ldrb	r0, [r0]
   13444:	ldr	r1, [fp, #-24]	; 0xffffffe8
   13448:	ldr	r1, [r1]
   1344c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   13450:	add	r3, r2, #1
   13454:	str	r3, [fp, #-32]	; 0xffffffe0
   13458:	add	r1, r1, r2
   1345c:	strb	r0, [r1]
   13460:	b	13464 <__assert_fail@plt+0x23c4>
   13464:	ldr	r0, [fp, #-36]	; 0xffffffdc
   13468:	add	r0, r0, #1
   1346c:	str	r0, [fp, #-36]	; 0xffffffdc
   13470:	b	12f2c <__assert_fail@plt+0x1e8c>
   13474:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13478:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1347c:	str	r0, [r1, #8]
   13480:	movw	r0, #1
   13484:	and	r0, r0, #1
   13488:	sub	sp, fp, #16
   1348c:	pop	{r4, r5, r6, r7, fp, pc}
   13490:	push	{fp, lr}
   13494:	mov	fp, sp
   13498:	sub	sp, sp, #88	; 0x58
   1349c:	str	r0, [fp, #-8]
   134a0:	str	r1, [fp, #-12]
   134a4:	ldr	r0, [fp, #-8]
   134a8:	ldr	r0, [r0]
   134ac:	str	r0, [fp, #-16]
   134b0:	movw	r0, #0
   134b4:	str	r0, [fp, #-20]	; 0xffffffec
   134b8:	ldr	r0, [fp, #-20]	; 0xffffffec
   134bc:	add	r0, r0, #2
   134c0:	ldr	r1, [fp, #-8]
   134c4:	ldr	r1, [r1, #8]
   134c8:	cmp	r0, r1
   134cc:	bcs	13894 <__assert_fail@plt+0x27f4>
   134d0:	ldr	r0, [fp, #-8]
   134d4:	ldr	r1, [fp, #-20]	; 0xffffffec
   134d8:	movw	r2, #91	; 0x5b
   134dc:	and	r2, r2, #255	; 0xff
   134e0:	bl	13920 <__assert_fail@plt+0x2880>
   134e4:	tst	r0, #1
   134e8:	beq	137f4 <__assert_fail@plt+0x2754>
   134ec:	movw	r0, #1
   134f0:	strb	r0, [fp, #-21]	; 0xffffffeb
   134f4:	ldr	r0, [fp, #-8]
   134f8:	ldr	r1, [fp, #-20]	; 0xffffffec
   134fc:	add	r1, r1, #1
   13500:	movw	r2, #58	; 0x3a
   13504:	and	r2, r2, #255	; 0xff
   13508:	bl	13920 <__assert_fail@plt+0x2880>
   1350c:	tst	r0, #1
   13510:	bne	13534 <__assert_fail@plt+0x2494>
   13514:	ldr	r0, [fp, #-8]
   13518:	ldr	r1, [fp, #-20]	; 0xffffffec
   1351c:	add	r1, r1, #1
   13520:	movw	r2, #61	; 0x3d
   13524:	and	r2, r2, #255	; 0xff
   13528:	bl	13920 <__assert_fail@plt+0x2880>
   1352c:	tst	r0, #1
   13530:	beq	13758 <__assert_fail@plt+0x26b8>
   13534:	ldr	r0, [fp, #-8]
   13538:	ldr	r1, [fp, #-20]	; 0xffffffec
   1353c:	add	r1, r1, #2
   13540:	ldr	r2, [fp, #-16]
   13544:	ldr	r3, [fp, #-20]	; 0xffffffec
   13548:	add	r3, r3, #1
   1354c:	add	r2, r2, r3
   13550:	ldrb	r2, [r2]
   13554:	add	r3, sp, #40	; 0x28
   13558:	bl	13988 <__assert_fail@plt+0x28e8>
   1355c:	tst	r0, #1
   13560:	beq	13754 <__assert_fail@plt+0x26b4>
   13564:	ldr	r0, [sp, #40]	; 0x28
   13568:	sub	r0, r0, #1
   1356c:	ldr	r1, [fp, #-20]	; 0xffffffec
   13570:	add	r1, r1, #2
   13574:	sub	r0, r0, r1
   13578:	add	r0, r0, #1
   1357c:	str	r0, [sp, #36]	; 0x24
   13580:	ldr	r0, [fp, #-16]
   13584:	ldr	r1, [fp, #-20]	; 0xffffffec
   13588:	add	r0, r0, r1
   1358c:	add	r0, r0, #2
   13590:	str	r0, [sp, #32]
   13594:	ldr	r0, [sp, #36]	; 0x24
   13598:	cmp	r0, #0
   1359c:	bne	13610 <__assert_fail@plt+0x2570>
   135a0:	ldr	r0, [fp, #-16]
   135a4:	ldr	r1, [fp, #-20]	; 0xffffffec
   135a8:	add	r1, r1, #1
   135ac:	add	r0, r0, r1
   135b0:	ldrb	r0, [r0]
   135b4:	cmp	r0, #58	; 0x3a
   135b8:	bne	135e0 <__assert_fail@plt+0x2540>
   135bc:	movw	r0, #1834	; 0x72a
   135c0:	movt	r0, #2
   135c4:	bl	10fa4 <gettext@plt>
   135c8:	movw	r1, #0
   135cc:	str	r0, [sp, #20]
   135d0:	mov	r0, r1
   135d4:	ldr	r2, [sp, #20]
   135d8:	bl	10f44 <error@plt>
   135dc:	b	13600 <__assert_fail@plt+0x2560>
   135e0:	movw	r0, #1870	; 0x74e
   135e4:	movt	r0, #2
   135e8:	bl	10fa4 <gettext@plt>
   135ec:	movw	r1, #0
   135f0:	str	r0, [sp, #16]
   135f4:	mov	r0, r1
   135f8:	ldr	r2, [sp, #16]
   135fc:	bl	10f44 <error@plt>
   13600:	movw	r0, #0
   13604:	and	r0, r0, #1
   13608:	strb	r0, [fp, #-1]
   1360c:	b	138e0 <__assert_fail@plt+0x2840>
   13610:	ldr	r0, [fp, #-16]
   13614:	ldr	r1, [fp, #-20]	; 0xffffffec
   13618:	add	r1, r1, #1
   1361c:	add	r0, r0, r1
   13620:	ldrb	r0, [r0]
   13624:	cmp	r0, #58	; 0x3a
   13628:	bne	136c0 <__assert_fail@plt+0x2620>
   1362c:	ldr	r0, [fp, #-12]
   13630:	ldr	r1, [sp, #32]
   13634:	ldr	r2, [sp, #36]	; 0x24
   13638:	bl	13a84 <__assert_fail@plt+0x29e4>
   1363c:	tst	r0, #1
   13640:	bne	136bc <__assert_fail@plt+0x261c>
   13644:	ldr	r0, [fp, #-8]
   13648:	ldr	r1, [fp, #-20]	; 0xffffffec
   1364c:	add	r1, r1, #2
   13650:	bl	13b68 <__assert_fail@plt+0x2ac8>
   13654:	tst	r0, #1
   13658:	beq	13660 <__assert_fail@plt+0x25c0>
   1365c:	b	1375c <__assert_fail@plt+0x26bc>
   13660:	ldr	r0, [sp, #32]
   13664:	ldr	r1, [sp, #36]	; 0x24
   13668:	bl	13c5c <__assert_fail@plt+0x2bbc>
   1366c:	str	r0, [sp, #28]
   13670:	movw	r0, #1913	; 0x779
   13674:	movt	r0, #2
   13678:	bl	10fa4 <gettext@plt>
   1367c:	ldr	r1, [sp, #28]
   13680:	str	r0, [sp, #12]
   13684:	mov	r0, r1
   13688:	bl	17b28 <__assert_fail@plt+0x6a88>
   1368c:	movw	r1, #0
   13690:	str	r0, [sp, #8]
   13694:	mov	r0, r1
   13698:	ldr	r2, [sp, #12]
   1369c:	ldr	r3, [sp, #8]
   136a0:	bl	10f44 <error@plt>
   136a4:	ldr	r0, [sp, #28]
   136a8:	bl	1548c <__assert_fail@plt+0x43ec>
   136ac:	movw	r0, #0
   136b0:	and	r0, r0, #1
   136b4:	strb	r0, [fp, #-1]
   136b8:	b	138e0 <__assert_fail@plt+0x2840>
   136bc:	b	13744 <__assert_fail@plt+0x26a4>
   136c0:	ldr	r0, [fp, #-12]
   136c4:	ldr	r1, [sp, #32]
   136c8:	ldr	r2, [sp, #36]	; 0x24
   136cc:	bl	13e44 <__assert_fail@plt+0x2da4>
   136d0:	tst	r0, #1
   136d4:	bne	13740 <__assert_fail@plt+0x26a0>
   136d8:	ldr	r0, [fp, #-8]
   136dc:	ldr	r1, [fp, #-20]	; 0xffffffec
   136e0:	add	r1, r1, #2
   136e4:	bl	13b68 <__assert_fail@plt+0x2ac8>
   136e8:	tst	r0, #1
   136ec:	beq	136f4 <__assert_fail@plt+0x2654>
   136f0:	b	1375c <__assert_fail@plt+0x26bc>
   136f4:	ldr	r0, [sp, #32]
   136f8:	ldr	r1, [sp, #36]	; 0x24
   136fc:	bl	13c5c <__assert_fail@plt+0x2bbc>
   13700:	str	r0, [sp, #24]
   13704:	movw	r0, #1940	; 0x794
   13708:	movt	r0, #2
   1370c:	bl	10fa4 <gettext@plt>
   13710:	ldr	r3, [sp, #24]
   13714:	movw	r1, #0
   13718:	str	r0, [sp, #4]
   1371c:	mov	r0, r1
   13720:	ldr	r2, [sp, #4]
   13724:	bl	10f44 <error@plt>
   13728:	ldr	r0, [sp, #24]
   1372c:	bl	1548c <__assert_fail@plt+0x43ec>
   13730:	movw	r0, #0
   13734:	and	r0, r0, #1
   13738:	strb	r0, [fp, #-1]
   1373c:	b	138e0 <__assert_fail@plt+0x2840>
   13740:	b	13744 <__assert_fail@plt+0x26a4>
   13744:	ldr	r0, [sp, #40]	; 0x28
   13748:	add	r0, r0, #2
   1374c:	str	r0, [fp, #-20]	; 0xffffffec
   13750:	b	134b8 <__assert_fail@plt+0x2418>
   13754:	b	13758 <__assert_fail@plt+0x26b8>
   13758:	b	1375c <__assert_fail@plt+0x26bc>
   1375c:	ldr	r0, [fp, #-8]
   13760:	ldr	r1, [fp, #-20]	; 0xffffffec
   13764:	add	r1, r1, #1
   13768:	sub	r2, fp, #29
   1376c:	sub	r3, fp, #40	; 0x28
   13770:	sub	ip, fp, #28
   13774:	str	ip, [sp]
   13778:	bl	13f18 <__assert_fail@plt+0x2e78>
   1377c:	str	r0, [sp, #44]	; 0x2c
   13780:	ldr	r0, [sp, #44]	; 0x2c
   13784:	cmp	r0, #0
   13788:	bne	137b4 <__assert_fail@plt+0x2714>
   1378c:	ldr	r0, [fp, #-12]
   13790:	ldrb	r1, [fp, #-29]	; 0xffffffe3
   13794:	ldr	r2, [fp, #-40]	; 0xffffffd8
   13798:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1379c:	uxtb	r1, r1
   137a0:	bl	14194 <__assert_fail@plt+0x30f4>
   137a4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   137a8:	add	r0, r0, #1
   137ac:	str	r0, [fp, #-20]	; 0xffffffec
   137b0:	b	137e0 <__assert_fail@plt+0x2740>
   137b4:	ldr	r0, [sp, #44]	; 0x2c
   137b8:	cmn	r0, #1
   137bc:	bne	137cc <__assert_fail@plt+0x272c>
   137c0:	movw	r0, #0
   137c4:	strb	r0, [fp, #-21]	; 0xffffffeb
   137c8:	b	137dc <__assert_fail@plt+0x273c>
   137cc:	movw	r0, #0
   137d0:	and	r0, r0, #1
   137d4:	strb	r0, [fp, #-1]
   137d8:	b	138e0 <__assert_fail@plt+0x2840>
   137dc:	b	137e0 <__assert_fail@plt+0x2740>
   137e0:	ldrb	r0, [fp, #-21]	; 0xffffffeb
   137e4:	tst	r0, #1
   137e8:	beq	137f0 <__assert_fail@plt+0x2750>
   137ec:	b	134b8 <__assert_fail@plt+0x2418>
   137f0:	b	137f4 <__assert_fail@plt+0x2754>
   137f4:	ldr	r0, [fp, #-8]
   137f8:	ldr	r1, [fp, #-20]	; 0xffffffec
   137fc:	add	r1, r1, #1
   13800:	movw	r2, #45	; 0x2d
   13804:	and	r2, r2, #255	; 0xff
   13808:	bl	13920 <__assert_fail@plt+0x2880>
   1380c:	tst	r0, #1
   13810:	beq	1386c <__assert_fail@plt+0x27cc>
   13814:	ldr	r0, [fp, #-12]
   13818:	ldr	r1, [fp, #-16]
   1381c:	ldr	r2, [fp, #-20]	; 0xffffffec
   13820:	add	r1, r1, r2
   13824:	ldrb	r1, [r1]
   13828:	ldr	r2, [fp, #-16]
   1382c:	ldr	r3, [fp, #-20]	; 0xffffffec
   13830:	add	r3, r3, #2
   13834:	add	r2, r2, r3
   13838:	and	r1, r1, #255	; 0xff
   1383c:	ldrb	r2, [r2]
   13840:	bl	14250 <__assert_fail@plt+0x31b0>
   13844:	tst	r0, #1
   13848:	bne	1385c <__assert_fail@plt+0x27bc>
   1384c:	movw	r0, #0
   13850:	and	r0, r0, #1
   13854:	strb	r0, [fp, #-1]
   13858:	b	138e0 <__assert_fail@plt+0x2840>
   1385c:	ldr	r0, [fp, #-20]	; 0xffffffec
   13860:	add	r0, r0, #3
   13864:	str	r0, [fp, #-20]	; 0xffffffec
   13868:	b	13890 <__assert_fail@plt+0x27f0>
   1386c:	ldr	r0, [fp, #-12]
   13870:	ldr	r1, [fp, #-16]
   13874:	ldr	r2, [fp, #-20]	; 0xffffffec
   13878:	add	r1, r1, r2
   1387c:	ldrb	r1, [r1]
   13880:	bl	14390 <__assert_fail@plt+0x32f0>
   13884:	ldr	r0, [fp, #-20]	; 0xffffffec
   13888:	add	r0, r0, #1
   1388c:	str	r0, [fp, #-20]	; 0xffffffec
   13890:	b	134b8 <__assert_fail@plt+0x2418>
   13894:	b	13898 <__assert_fail@plt+0x27f8>
   13898:	ldr	r0, [fp, #-20]	; 0xffffffec
   1389c:	ldr	r1, [fp, #-8]
   138a0:	ldr	r1, [r1, #8]
   138a4:	cmp	r0, r1
   138a8:	bcs	138d4 <__assert_fail@plt+0x2834>
   138ac:	ldr	r0, [fp, #-12]
   138b0:	ldr	r1, [fp, #-16]
   138b4:	ldr	r2, [fp, #-20]	; 0xffffffec
   138b8:	add	r1, r1, r2
   138bc:	ldrb	r1, [r1]
   138c0:	bl	14390 <__assert_fail@plt+0x32f0>
   138c4:	ldr	r0, [fp, #-20]	; 0xffffffec
   138c8:	add	r0, r0, #1
   138cc:	str	r0, [fp, #-20]	; 0xffffffec
   138d0:	b	13898 <__assert_fail@plt+0x27f8>
   138d4:	movw	r0, #1
   138d8:	and	r0, r0, #1
   138dc:	strb	r0, [fp, #-1]
   138e0:	ldrb	r0, [fp, #-1]
   138e4:	and	r0, r0, #1
   138e8:	mov	sp, fp
   138ec:	pop	{fp, pc}
   138f0:	push	{fp, lr}
   138f4:	mov	fp, sp
   138f8:	sub	sp, sp, #8
   138fc:	str	r0, [sp, #4]
   13900:	ldr	r0, [sp, #4]
   13904:	ldr	r0, [r0]
   13908:	bl	1548c <__assert_fail@plt+0x43ec>
   1390c:	ldr	r0, [sp, #4]
   13910:	ldr	r0, [r0, #4]
   13914:	bl	1548c <__assert_fail@plt+0x43ec>
   13918:	mov	sp, fp
   1391c:	pop	{fp, pc}
   13920:	sub	sp, sp, #16
   13924:	str	r0, [sp, #12]
   13928:	str	r1, [sp, #8]
   1392c:	strb	r2, [sp, #7]
   13930:	ldr	r0, [sp, #12]
   13934:	ldr	r0, [r0]
   13938:	ldr	r1, [sp, #8]
   1393c:	add	r0, r0, r1
   13940:	ldrb	r0, [r0]
   13944:	ldrb	r1, [sp, #7]
   13948:	cmp	r0, r1
   1394c:	movw	r0, #0
   13950:	str	r0, [sp]
   13954:	bne	13978 <__assert_fail@plt+0x28d8>
   13958:	ldr	r0, [sp, #12]
   1395c:	ldr	r0, [r0, #4]
   13960:	ldr	r1, [sp, #8]
   13964:	add	r0, r0, r1
   13968:	ldrb	r0, [r0]
   1396c:	mvn	r1, #0
   13970:	eor	r0, r0, r1
   13974:	str	r0, [sp]
   13978:	ldr	r0, [sp]
   1397c:	and	r0, r0, #1
   13980:	add	sp, sp, #16
   13984:	bx	lr
   13988:	sub	sp, sp, #24
   1398c:	str	r0, [sp, #16]
   13990:	str	r1, [sp, #12]
   13994:	strb	r2, [sp, #11]
   13998:	str	r3, [sp, #4]
   1399c:	ldr	r0, [sp, #12]
   139a0:	str	r0, [sp]
   139a4:	ldr	r0, [sp]
   139a8:	ldr	r1, [sp, #16]
   139ac:	ldr	r1, [r1, #8]
   139b0:	sub	r1, r1, #1
   139b4:	cmp	r0, r1
   139b8:	bcs	13a68 <__assert_fail@plt+0x29c8>
   139bc:	ldr	r0, [sp, #16]
   139c0:	ldr	r0, [r0]
   139c4:	ldr	r1, [sp]
   139c8:	add	r0, r0, r1
   139cc:	ldrb	r0, [r0]
   139d0:	ldrb	r1, [sp, #11]
   139d4:	cmp	r0, r1
   139d8:	bne	13a54 <__assert_fail@plt+0x29b4>
   139dc:	ldr	r0, [sp, #16]
   139e0:	ldr	r0, [r0]
   139e4:	ldr	r1, [sp]
   139e8:	add	r1, r1, #1
   139ec:	add	r0, r0, r1
   139f0:	ldrb	r0, [r0]
   139f4:	cmp	r0, #93	; 0x5d
   139f8:	bne	13a54 <__assert_fail@plt+0x29b4>
   139fc:	ldr	r0, [sp, #16]
   13a00:	ldr	r0, [r0, #4]
   13a04:	ldr	r1, [sp]
   13a08:	add	r0, r0, r1
   13a0c:	ldrb	r0, [r0]
   13a10:	tst	r0, #1
   13a14:	bne	13a54 <__assert_fail@plt+0x29b4>
   13a18:	ldr	r0, [sp, #16]
   13a1c:	ldr	r0, [r0, #4]
   13a20:	ldr	r1, [sp]
   13a24:	add	r1, r1, #1
   13a28:	add	r0, r0, r1
   13a2c:	ldrb	r0, [r0]
   13a30:	tst	r0, #1
   13a34:	bne	13a54 <__assert_fail@plt+0x29b4>
   13a38:	ldr	r0, [sp]
   13a3c:	ldr	r1, [sp, #4]
   13a40:	str	r0, [r1]
   13a44:	movw	r0, #1
   13a48:	and	r0, r0, #1
   13a4c:	strb	r0, [sp, #23]
   13a50:	b	13a74 <__assert_fail@plt+0x29d4>
   13a54:	b	13a58 <__assert_fail@plt+0x29b8>
   13a58:	ldr	r0, [sp]
   13a5c:	add	r0, r0, #1
   13a60:	str	r0, [sp]
   13a64:	b	139a4 <__assert_fail@plt+0x2904>
   13a68:	movw	r0, #0
   13a6c:	and	r0, r0, #1
   13a70:	strb	r0, [sp, #23]
   13a74:	ldrb	r0, [sp, #23]
   13a78:	and	r0, r0, #1
   13a7c:	add	sp, sp, #24
   13a80:	bx	lr
   13a84:	push	{fp, lr}
   13a88:	mov	fp, sp
   13a8c:	sub	sp, sp, #24
   13a90:	str	r0, [fp, #-8]
   13a94:	str	r1, [sp, #12]
   13a98:	str	r2, [sp, #8]
   13a9c:	ldr	r0, [sp, #12]
   13aa0:	ldr	r1, [sp, #8]
   13aa4:	bl	14428 <__assert_fail@plt+0x3388>
   13aa8:	str	r0, [sp, #4]
   13aac:	ldr	r0, [sp, #4]
   13ab0:	movw	r1, #9999	; 0x270f
   13ab4:	cmp	r0, r1
   13ab8:	bne	13acc <__assert_fail@plt+0x2a2c>
   13abc:	movw	r0, #0
   13ac0:	and	r0, r0, #1
   13ac4:	strb	r0, [fp, #-1]
   13ac8:	b	13b58 <__assert_fail@plt+0x2ab8>
   13acc:	movw	r0, #24
   13ad0:	bl	185dc <__assert_fail@plt+0x753c>
   13ad4:	str	r0, [sp]
   13ad8:	ldr	r0, [sp]
   13adc:	movw	r1, #0
   13ae0:	str	r1, [r0, #4]
   13ae4:	ldr	r0, [sp]
   13ae8:	movw	r2, #2
   13aec:	str	r2, [r0]
   13af0:	ldr	r0, [sp, #4]
   13af4:	ldr	r2, [sp]
   13af8:	str	r0, [r2, #8]
   13afc:	ldr	r0, [fp, #-8]
   13b00:	ldr	r0, [r0, #4]
   13b04:	cmp	r0, r1
   13b08:	beq	13b10 <__assert_fail@plt+0x2a70>
   13b0c:	b	13b30 <__assert_fail@plt+0x2a90>
   13b10:	movw	r0, #1997	; 0x7cd
   13b14:	movt	r0, #2
   13b18:	movw	r1, #1224	; 0x4c8
   13b1c:	movt	r1, #2
   13b20:	movw	r2, #701	; 0x2bd
   13b24:	movw	r3, #2008	; 0x7d8
   13b28:	movt	r3, #2
   13b2c:	bl	110a0 <__assert_fail@plt>
   13b30:	ldr	r0, [sp]
   13b34:	ldr	r1, [fp, #-8]
   13b38:	ldr	r1, [r1, #4]
   13b3c:	str	r0, [r1, #4]
   13b40:	ldr	r0, [sp]
   13b44:	ldr	r1, [fp, #-8]
   13b48:	str	r0, [r1, #4]
   13b4c:	movw	r0, #1
   13b50:	and	r0, r0, #1
   13b54:	strb	r0, [fp, #-1]
   13b58:	ldrb	r0, [fp, #-1]
   13b5c:	and	r0, r0, #1
   13b60:	mov	sp, fp
   13b64:	pop	{fp, pc}
   13b68:	push	{fp, lr}
   13b6c:	mov	fp, sp
   13b70:	sub	sp, sp, #16
   13b74:	str	r0, [sp, #8]
   13b78:	str	r1, [sp, #4]
   13b7c:	ldr	r0, [sp, #8]
   13b80:	ldr	r1, [sp, #4]
   13b84:	movw	r2, #42	; 0x2a
   13b88:	and	r2, r2, #255	; 0xff
   13b8c:	bl	13920 <__assert_fail@plt+0x2880>
   13b90:	tst	r0, #1
   13b94:	bne	13ba8 <__assert_fail@plt+0x2b08>
   13b98:	movw	r0, #0
   13b9c:	and	r0, r0, #1
   13ba0:	strb	r0, [fp, #-1]
   13ba4:	b	13c4c <__assert_fail@plt+0x2bac>
   13ba8:	ldr	r0, [sp, #4]
   13bac:	add	r0, r0, #1
   13bb0:	str	r0, [sp]
   13bb4:	ldr	r0, [sp]
   13bb8:	ldr	r1, [sp, #8]
   13bbc:	ldr	r1, [r1, #8]
   13bc0:	cmp	r0, r1
   13bc4:	bcs	13c40 <__assert_fail@plt+0x2ba0>
   13bc8:	ldr	r0, [sp, #8]
   13bcc:	ldr	r0, [r0]
   13bd0:	ldr	r1, [sp]
   13bd4:	add	r0, r0, r1
   13bd8:	ldrb	r0, [r0]
   13bdc:	bl	144d0 <__assert_fail@plt+0x3430>
   13be0:	and	r0, r0, #255	; 0xff
   13be4:	sub	r0, r0, #48	; 0x30
   13be8:	cmp	r0, #9
   13bec:	bhi	13c0c <__assert_fail@plt+0x2b6c>
   13bf0:	ldr	r0, [sp, #8]
   13bf4:	ldr	r0, [r0, #4]
   13bf8:	ldr	r1, [sp]
   13bfc:	add	r0, r0, r1
   13c00:	ldrb	r0, [r0]
   13c04:	tst	r0, #1
   13c08:	beq	13c2c <__assert_fail@plt+0x2b8c>
   13c0c:	ldr	r0, [sp, #8]
   13c10:	ldr	r1, [sp]
   13c14:	movw	r2, #93	; 0x5d
   13c18:	and	r2, r2, #255	; 0xff
   13c1c:	bl	13920 <__assert_fail@plt+0x2880>
   13c20:	and	r0, r0, #1
   13c24:	strb	r0, [fp, #-1]
   13c28:	b	13c4c <__assert_fail@plt+0x2bac>
   13c2c:	b	13c30 <__assert_fail@plt+0x2b90>
   13c30:	ldr	r0, [sp]
   13c34:	add	r0, r0, #1
   13c38:	str	r0, [sp]
   13c3c:	b	13bb4 <__assert_fail@plt+0x2b14>
   13c40:	movw	r0, #0
   13c44:	and	r0, r0, #1
   13c48:	strb	r0, [fp, #-1]
   13c4c:	ldrb	r0, [fp, #-1]
   13c50:	and	r0, r0, #1
   13c54:	mov	sp, fp
   13c58:	pop	{fp, pc}
   13c5c:	push	{fp, lr}
   13c60:	mov	fp, sp
   13c64:	sub	sp, sp, #40	; 0x28
   13c68:	str	r0, [fp, #-4]
   13c6c:	str	r1, [fp, #-8]
   13c70:	ldr	r0, [fp, #-8]
   13c74:	add	r0, r0, #1
   13c78:	movw	r1, #4
   13c7c:	bl	18734 <__assert_fail@plt+0x7694>
   13c80:	str	r0, [fp, #-12]
   13c84:	ldr	r0, [fp, #-12]
   13c88:	str	r0, [fp, #-16]
   13c8c:	movw	r0, #0
   13c90:	str	r0, [sp, #20]
   13c94:	ldr	r0, [sp, #20]
   13c98:	ldr	r1, [fp, #-8]
   13c9c:	cmp	r0, r1
   13ca0:	bcs	13e38 <__assert_fail@plt+0x2d98>
   13ca4:	mov	r0, #0
   13ca8:	str	r0, [sp, #8]
   13cac:	ldr	r0, [fp, #-4]
   13cb0:	ldr	r1, [sp, #20]
   13cb4:	ldrb	r0, [r0, r1]
   13cb8:	strb	r0, [sp, #7]
   13cbc:	ldrb	r0, [sp, #7]
   13cc0:	mov	r1, r0
   13cc4:	cmp	r0, #7
   13cc8:	str	r1, [sp]
   13ccc:	beq	13d54 <__assert_fail@plt+0x2cb4>
   13cd0:	b	13cd4 <__assert_fail@plt+0x2c34>
   13cd4:	ldr	r0, [sp]
   13cd8:	cmp	r0, #8
   13cdc:	beq	13d64 <__assert_fail@plt+0x2cc4>
   13ce0:	b	13ce4 <__assert_fail@plt+0x2c44>
   13ce4:	ldr	r0, [sp]
   13ce8:	cmp	r0, #9
   13cec:	beq	13da4 <__assert_fail@plt+0x2d04>
   13cf0:	b	13cf4 <__assert_fail@plt+0x2c54>
   13cf4:	ldr	r0, [sp]
   13cf8:	cmp	r0, #10
   13cfc:	beq	13d84 <__assert_fail@plt+0x2ce4>
   13d00:	b	13d04 <__assert_fail@plt+0x2c64>
   13d04:	ldr	r0, [sp]
   13d08:	cmp	r0, #11
   13d0c:	beq	13db4 <__assert_fail@plt+0x2d14>
   13d10:	b	13d14 <__assert_fail@plt+0x2c74>
   13d14:	ldr	r0, [sp]
   13d18:	cmp	r0, #12
   13d1c:	beq	13d74 <__assert_fail@plt+0x2cd4>
   13d20:	b	13d24 <__assert_fail@plt+0x2c84>
   13d24:	ldr	r0, [sp]
   13d28:	cmp	r0, #13
   13d2c:	beq	13d94 <__assert_fail@plt+0x2cf4>
   13d30:	b	13d34 <__assert_fail@plt+0x2c94>
   13d34:	ldr	r0, [sp]
   13d38:	cmp	r0, #92	; 0x5c
   13d3c:	bne	13dc4 <__assert_fail@plt+0x2d24>
   13d40:	b	13d44 <__assert_fail@plt+0x2ca4>
   13d44:	movw	r0, #2141	; 0x85d
   13d48:	movt	r0, #2
   13d4c:	str	r0, [sp, #8]
   13d50:	b	13e18 <__assert_fail@plt+0x2d78>
   13d54:	movw	r0, #2143	; 0x85f
   13d58:	movt	r0, #2
   13d5c:	str	r0, [sp, #8]
   13d60:	b	13e18 <__assert_fail@plt+0x2d78>
   13d64:	movw	r0, #2146	; 0x862
   13d68:	movt	r0, #2
   13d6c:	str	r0, [sp, #8]
   13d70:	b	13e18 <__assert_fail@plt+0x2d78>
   13d74:	movw	r0, #2149	; 0x865
   13d78:	movt	r0, #2
   13d7c:	str	r0, [sp, #8]
   13d80:	b	13e18 <__assert_fail@plt+0x2d78>
   13d84:	movw	r0, #2152	; 0x868
   13d88:	movt	r0, #2
   13d8c:	str	r0, [sp, #8]
   13d90:	b	13e18 <__assert_fail@plt+0x2d78>
   13d94:	movw	r0, #2155	; 0x86b
   13d98:	movt	r0, #2
   13d9c:	str	r0, [sp, #8]
   13da0:	b	13e18 <__assert_fail@plt+0x2d78>
   13da4:	movw	r0, #2158	; 0x86e
   13da8:	movt	r0, #2
   13dac:	str	r0, [sp, #8]
   13db0:	b	13e18 <__assert_fail@plt+0x2d78>
   13db4:	movw	r0, #2161	; 0x871
   13db8:	movt	r0, #2
   13dbc:	str	r0, [sp, #8]
   13dc0:	b	13e18 <__assert_fail@plt+0x2d78>
   13dc4:	bl	10f8c <__ctype_b_loc@plt>
   13dc8:	ldr	r0, [r0]
   13dcc:	ldrb	r1, [sp, #7]
   13dd0:	mov	r2, r1
   13dd4:	add	r0, r0, r1, lsl #1
   13dd8:	ldrh	r0, [r0]
   13ddc:	and	r0, r0, #16384	; 0x4000
   13de0:	cmp	r0, #0
   13de4:	beq	13dfc <__assert_fail@plt+0x2d5c>
   13de8:	ldrb	r0, [sp, #7]
   13dec:	strb	r0, [sp, #15]
   13df0:	movw	r0, #0
   13df4:	strb	r0, [sp, #16]
   13df8:	b	13e10 <__assert_fail@plt+0x2d70>
   13dfc:	add	r0, sp, #15
   13e00:	ldrb	r2, [sp, #7]
   13e04:	movw	r1, #2164	; 0x874
   13e08:	movt	r1, #2
   13e0c:	bl	11058 <sprintf@plt>
   13e10:	add	r0, sp, #15
   13e14:	str	r0, [sp, #8]
   13e18:	ldr	r0, [fp, #-16]
   13e1c:	ldr	r1, [sp, #8]
   13e20:	bl	10ed8 <stpcpy@plt>
   13e24:	str	r0, [fp, #-16]
   13e28:	ldr	r0, [sp, #20]
   13e2c:	add	r0, r0, #1
   13e30:	str	r0, [sp, #20]
   13e34:	b	13c94 <__assert_fail@plt+0x2bf4>
   13e38:	ldr	r0, [fp, #-12]
   13e3c:	mov	sp, fp
   13e40:	pop	{fp, pc}
   13e44:	push	{fp, lr}
   13e48:	mov	fp, sp
   13e4c:	sub	sp, sp, #24
   13e50:	str	r0, [fp, #-8]
   13e54:	str	r1, [sp, #12]
   13e58:	str	r2, [sp, #8]
   13e5c:	ldr	r0, [sp, #8]
   13e60:	cmp	r0, #1
   13e64:	beq	13e78 <__assert_fail@plt+0x2dd8>
   13e68:	movw	r0, #0
   13e6c:	and	r0, r0, #1
   13e70:	strb	r0, [fp, #-1]
   13e74:	b	13f08 <__assert_fail@plt+0x2e68>
   13e78:	movw	r0, #24
   13e7c:	bl	185dc <__assert_fail@plt+0x753c>
   13e80:	str	r0, [sp, #4]
   13e84:	ldr	r0, [sp, #4]
   13e88:	movw	r1, #0
   13e8c:	str	r1, [r0, #4]
   13e90:	ldr	r0, [sp, #4]
   13e94:	movw	r2, #3
   13e98:	str	r2, [r0]
   13e9c:	ldr	r0, [sp, #12]
   13ea0:	ldrb	r0, [r0]
   13ea4:	ldr	r2, [sp, #4]
   13ea8:	strb	r0, [r2, #8]
   13eac:	ldr	r0, [fp, #-8]
   13eb0:	ldr	r0, [r0, #4]
   13eb4:	cmp	r0, r1
   13eb8:	beq	13ec0 <__assert_fail@plt+0x2e20>
   13ebc:	b	13ee0 <__assert_fail@plt+0x2e40>
   13ec0:	movw	r0, #1997	; 0x7cd
   13ec4:	movt	r0, #2
   13ec8:	movw	r1, #1224	; 0x4c8
   13ecc:	movt	r1, #2
   13ed0:	movw	r2, #743	; 0x2e7
   13ed4:	movw	r3, #2170	; 0x87a
   13ed8:	movt	r3, #2
   13edc:	bl	110a0 <__assert_fail@plt>
   13ee0:	ldr	r0, [sp, #4]
   13ee4:	ldr	r1, [fp, #-8]
   13ee8:	ldr	r1, [r1, #4]
   13eec:	str	r0, [r1, #4]
   13ef0:	ldr	r0, [sp, #4]
   13ef4:	ldr	r1, [fp, #-8]
   13ef8:	str	r0, [r1, #4]
   13efc:	movw	r0, #1
   13f00:	and	r0, r0, #1
   13f04:	strb	r0, [fp, #-1]
   13f08:	ldrb	r0, [fp, #-1]
   13f0c:	and	r0, r0, #1
   13f10:	mov	sp, fp
   13f14:	pop	{fp, pc}
   13f18:	push	{fp, lr}
   13f1c:	mov	fp, sp
   13f20:	sub	sp, sp, #64	; 0x40
   13f24:	ldr	ip, [fp, #8]
   13f28:	str	r0, [fp, #-8]
   13f2c:	str	r1, [fp, #-12]
   13f30:	str	r2, [fp, #-16]
   13f34:	str	r3, [fp, #-20]	; 0xffffffec
   13f38:	ldr	r0, [fp, #-12]
   13f3c:	add	r0, r0, #1
   13f40:	ldr	r1, [fp, #-8]
   13f44:	ldr	r1, [r1, #8]
   13f48:	cmp	r0, r1
   13f4c:	bcs	13f54 <__assert_fail@plt+0x2eb4>
   13f50:	b	13f74 <__assert_fail@plt+0x2ed4>
   13f54:	movw	r0, #2237	; 0x8bd
   13f58:	movt	r0, #2
   13f5c:	movw	r1, #1224	; 0x4c8
   13f60:	movt	r1, #2
   13f64:	movw	r2, #784	; 0x310
   13f68:	movw	r3, #2261	; 0x8d5
   13f6c:	movt	r3, #2
   13f70:	bl	110a0 <__assert_fail@plt>
   13f74:	ldr	r0, [fp, #-8]
   13f78:	ldr	r1, [fp, #-12]
   13f7c:	add	r1, r1, #1
   13f80:	movw	r2, #42	; 0x2a
   13f84:	and	r2, r2, #255	; 0xff
   13f88:	bl	13920 <__assert_fail@plt+0x2880>
   13f8c:	tst	r0, #1
   13f90:	bne	13fa0 <__assert_fail@plt+0x2f00>
   13f94:	mvn	r0, #0
   13f98:	str	r0, [fp, #-4]
   13f9c:	b	14188 <__assert_fail@plt+0x30e8>
   13fa0:	ldr	r0, [fp, #-12]
   13fa4:	add	r0, r0, #2
   13fa8:	str	r0, [fp, #-24]	; 0xffffffe8
   13fac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13fb0:	ldr	r1, [fp, #-8]
   13fb4:	ldr	r1, [r1, #8]
   13fb8:	cmp	r0, r1
   13fbc:	movw	r0, #0
   13fc0:	str	r0, [sp, #20]
   13fc4:	bcs	13fe8 <__assert_fail@plt+0x2f48>
   13fc8:	ldr	r0, [fp, #-8]
   13fcc:	ldr	r0, [r0, #4]
   13fd0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   13fd4:	add	r0, r0, r1
   13fd8:	ldrb	r0, [r0]
   13fdc:	mvn	r1, #0
   13fe0:	eor	r0, r0, r1
   13fe4:	str	r0, [sp, #20]
   13fe8:	ldr	r0, [sp, #20]
   13fec:	tst	r0, #1
   13ff0:	beq	14180 <__assert_fail@plt+0x30e0>
   13ff4:	ldr	r0, [fp, #-8]
   13ff8:	ldr	r0, [r0]
   13ffc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   14000:	add	r0, r0, r1
   14004:	ldrb	r0, [r0]
   14008:	cmp	r0, #93	; 0x5d
   1400c:	bne	1416c <__assert_fail@plt+0x30cc>
   14010:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14014:	ldr	r1, [fp, #-12]
   14018:	sub	r0, r0, r1
   1401c:	sub	r0, r0, #2
   14020:	str	r0, [fp, #-28]	; 0xffffffe4
   14024:	ldr	r0, [fp, #-8]
   14028:	ldr	r0, [r0]
   1402c:	ldr	r1, [fp, #-12]
   14030:	add	r0, r0, r1
   14034:	ldrb	r0, [r0]
   14038:	ldr	r1, [fp, #-16]
   1403c:	strb	r0, [r1]
   14040:	ldr	r0, [fp, #-28]	; 0xffffffe4
   14044:	cmp	r0, #0
   14048:	bne	14060 <__assert_fail@plt+0x2fc0>
   1404c:	ldr	r0, [fp, #-20]	; 0xffffffec
   14050:	mov	r1, #0
   14054:	str	r1, [r0, #4]
   14058:	str	r1, [r0]
   1405c:	b	14154 <__assert_fail@plt+0x30b4>
   14060:	ldr	r0, [fp, #-8]
   14064:	ldr	r0, [r0]
   14068:	ldr	r1, [fp, #-12]
   1406c:	add	r1, r1, #2
   14070:	add	r0, r0, r1
   14074:	str	r0, [sp, #32]
   14078:	ldr	r0, [sp, #32]
   1407c:	ldr	r1, [sp, #32]
   14080:	ldrb	r1, [r1]
   14084:	cmp	r1, #48	; 0x30
   14088:	movw	r1, #0
   1408c:	moveq	r1, #1
   14090:	tst	r1, #1
   14094:	movw	r1, #8
   14098:	moveq	r1, #10
   1409c:	ldr	r3, [fp, #-20]	; 0xffffffec
   140a0:	add	r2, sp, #28
   140a4:	str	r1, [sp, #16]
   140a8:	mov	r1, r2
   140ac:	ldr	r2, [sp, #16]
   140b0:	movw	ip, #0
   140b4:	str	ip, [sp]
   140b8:	bl	1b39c <__assert_fail@plt+0xa2fc>
   140bc:	cmp	r0, #0
   140c0:	bne	140f8 <__assert_fail@plt+0x3058>
   140c4:	ldr	r0, [fp, #-20]	; 0xffffffec
   140c8:	ldr	r1, [r0]
   140cc:	ldr	r0, [r0, #4]
   140d0:	and	r0, r1, r0
   140d4:	cmn	r0, #1
   140d8:	beq	140f8 <__assert_fail@plt+0x3058>
   140dc:	b	140e0 <__assert_fail@plt+0x3040>
   140e0:	ldr	r0, [sp, #32]
   140e4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   140e8:	add	r0, r0, r1
   140ec:	ldr	r1, [sp, #28]
   140f0:	cmp	r0, r1
   140f4:	beq	14150 <__assert_fail@plt+0x30b0>
   140f8:	ldr	r0, [sp, #32]
   140fc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14100:	bl	13c5c <__assert_fail@plt+0x2bbc>
   14104:	str	r0, [sp, #24]
   14108:	movw	r0, #2356	; 0x934
   1410c:	movt	r0, #2
   14110:	bl	10fa4 <gettext@plt>
   14114:	ldr	r1, [sp, #24]
   14118:	str	r0, [sp, #12]
   1411c:	mov	r0, r1
   14120:	bl	17b28 <__assert_fail@plt+0x6a88>
   14124:	movw	r1, #0
   14128:	str	r0, [sp, #8]
   1412c:	mov	r0, r1
   14130:	ldr	r2, [sp, #12]
   14134:	ldr	r3, [sp, #8]
   14138:	bl	10f44 <error@plt>
   1413c:	ldr	r0, [sp, #24]
   14140:	bl	1548c <__assert_fail@plt+0x43ec>
   14144:	mvn	r0, #1
   14148:	str	r0, [fp, #-4]
   1414c:	b	14188 <__assert_fail@plt+0x30e8>
   14150:	b	14154 <__assert_fail@plt+0x30b4>
   14154:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14158:	ldr	r1, [fp, #8]
   1415c:	str	r0, [r1]
   14160:	movw	r0, #0
   14164:	str	r0, [fp, #-4]
   14168:	b	14188 <__assert_fail@plt+0x30e8>
   1416c:	b	14170 <__assert_fail@plt+0x30d0>
   14170:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14174:	add	r0, r0, #1
   14178:	str	r0, [fp, #-24]	; 0xffffffe8
   1417c:	b	13fac <__assert_fail@plt+0x2f0c>
   14180:	mvn	r0, #0
   14184:	str	r0, [fp, #-4]
   14188:	ldr	r0, [fp, #-4]
   1418c:	mov	sp, fp
   14190:	pop	{fp, pc}
   14194:	push	{fp, lr}
   14198:	mov	fp, sp
   1419c:	sub	sp, sp, #24
   141a0:	str	r0, [fp, #-4]
   141a4:	strb	r1, [fp, #-5]
   141a8:	str	r3, [sp, #12]
   141ac:	str	r2, [sp, #8]
   141b0:	mov	r0, #24
   141b4:	bl	185dc <__assert_fail@plt+0x753c>
   141b8:	str	r0, [sp, #4]
   141bc:	ldr	r0, [sp, #4]
   141c0:	mov	r1, #0
   141c4:	str	r1, [r0, #4]
   141c8:	ldr	r0, [sp, #4]
   141cc:	mov	r1, #4
   141d0:	str	r1, [r0]
   141d4:	ldrb	r0, [fp, #-5]
   141d8:	ldr	r1, [sp, #4]
   141dc:	strb	r0, [r1, #8]
   141e0:	ldr	r0, [sp, #8]
   141e4:	ldr	r1, [sp, #12]
   141e8:	ldr	r2, [sp, #4]
   141ec:	str	r1, [r2, #20]
   141f0:	str	r0, [r2, #16]
   141f4:	ldr	r0, [fp, #-4]
   141f8:	ldr	r0, [r0, #4]
   141fc:	movw	r1, #0
   14200:	cmp	r0, r1
   14204:	beq	1420c <__assert_fail@plt+0x316c>
   14208:	b	1422c <__assert_fail@plt+0x318c>
   1420c:	movw	r0, #1997	; 0x7cd
   14210:	movt	r0, #2
   14214:	movw	r1, #1224	; 0x4c8
   14218:	movt	r1, #2
   1421c:	movw	r2, #721	; 0x2d1
   14220:	movw	r3, #2399	; 0x95f
   14224:	movt	r3, #2
   14228:	bl	110a0 <__assert_fail@plt>
   1422c:	ldr	r0, [sp, #4]
   14230:	ldr	r1, [fp, #-4]
   14234:	ldr	r1, [r1, #4]
   14238:	str	r0, [r1, #4]
   1423c:	ldr	r0, [sp, #4]
   14240:	ldr	r1, [fp, #-4]
   14244:	str	r0, [r1, #4]
   14248:	mov	sp, fp
   1424c:	pop	{fp, pc}
   14250:	push	{fp, lr}
   14254:	mov	fp, sp
   14258:	sub	sp, sp, #40	; 0x28
   1425c:	str	r0, [fp, #-8]
   14260:	strb	r1, [fp, #-9]
   14264:	strb	r2, [fp, #-10]
   14268:	ldrb	r0, [fp, #-10]
   1426c:	ldrb	r1, [fp, #-9]
   14270:	cmp	r0, r1
   14274:	bge	142e8 <__assert_fail@plt+0x3248>
   14278:	ldrb	r0, [fp, #-9]
   1427c:	bl	144e4 <__assert_fail@plt+0x3444>
   14280:	str	r0, [fp, #-16]
   14284:	ldrb	r0, [fp, #-10]
   14288:	bl	144e4 <__assert_fail@plt+0x3444>
   1428c:	str	r0, [sp, #20]
   14290:	movw	r0, #2467	; 0x9a3
   14294:	movt	r0, #2
   14298:	bl	10fa4 <gettext@plt>
   1429c:	ldr	r3, [fp, #-16]
   142a0:	ldr	r1, [sp, #20]
   142a4:	movw	r2, #0
   142a8:	str	r0, [sp, #12]
   142ac:	mov	r0, r2
   142b0:	str	r1, [sp, #8]
   142b4:	mov	r1, r2
   142b8:	ldr	r2, [sp, #12]
   142bc:	ldr	ip, [sp, #8]
   142c0:	str	ip, [sp]
   142c4:	bl	10f44 <error@plt>
   142c8:	ldr	r0, [fp, #-16]
   142cc:	bl	1548c <__assert_fail@plt+0x43ec>
   142d0:	ldr	r0, [sp, #20]
   142d4:	bl	1548c <__assert_fail@plt+0x43ec>
   142d8:	movw	r0, #0
   142dc:	and	r0, r0, #1
   142e0:	strb	r0, [fp, #-1]
   142e4:	b	14380 <__assert_fail@plt+0x32e0>
   142e8:	movw	r0, #24
   142ec:	bl	185dc <__assert_fail@plt+0x753c>
   142f0:	str	r0, [sp, #16]
   142f4:	ldr	r0, [sp, #16]
   142f8:	movw	r1, #0
   142fc:	str	r1, [r0, #4]
   14300:	ldr	r0, [sp, #16]
   14304:	movw	r2, #1
   14308:	str	r2, [r0]
   1430c:	ldrb	r0, [fp, #-9]
   14310:	ldr	r2, [sp, #16]
   14314:	strb	r0, [r2, #8]
   14318:	ldrb	r0, [fp, #-10]
   1431c:	ldr	r2, [sp, #16]
   14320:	strb	r0, [r2, #9]
   14324:	ldr	r0, [fp, #-8]
   14328:	ldr	r0, [r0, #4]
   1432c:	cmp	r0, r1
   14330:	beq	14338 <__assert_fail@plt+0x3298>
   14334:	b	14358 <__assert_fail@plt+0x32b8>
   14338:	movw	r0, #1997	; 0x7cd
   1433c:	movt	r0, #2
   14340:	movw	r1, #1224	; 0x4c8
   14344:	movt	r1, #2
   14348:	movw	r2, #679	; 0x2a7
   1434c:	movw	r3, #2534	; 0x9e6
   14350:	movt	r3, #2
   14354:	bl	110a0 <__assert_fail@plt>
   14358:	ldr	r0, [sp, #16]
   1435c:	ldr	r1, [fp, #-8]
   14360:	ldr	r1, [r1, #4]
   14364:	str	r0, [r1, #4]
   14368:	ldr	r0, [sp, #16]
   1436c:	ldr	r1, [fp, #-8]
   14370:	str	r0, [r1, #4]
   14374:	movw	r0, #1
   14378:	and	r0, r0, #1
   1437c:	strb	r0, [fp, #-1]
   14380:	ldrb	r0, [fp, #-1]
   14384:	and	r0, r0, #1
   14388:	mov	sp, fp
   1438c:	pop	{fp, pc}
   14390:	push	{fp, lr}
   14394:	mov	fp, sp
   14398:	sub	sp, sp, #16
   1439c:	str	r0, [fp, #-4]
   143a0:	strb	r1, [fp, #-5]
   143a4:	movw	r0, #24
   143a8:	bl	185dc <__assert_fail@plt+0x753c>
   143ac:	str	r0, [sp, #4]
   143b0:	ldr	r0, [sp, #4]
   143b4:	movw	r1, #0
   143b8:	str	r1, [r0, #4]
   143bc:	ldr	r0, [sp, #4]
   143c0:	str	r1, [r0]
   143c4:	ldrb	r0, [fp, #-5]
   143c8:	ldr	r2, [sp, #4]
   143cc:	strb	r0, [r2, #8]
   143d0:	ldr	r0, [fp, #-4]
   143d4:	ldr	r0, [r0, #4]
   143d8:	cmp	r0, r1
   143dc:	beq	143e4 <__assert_fail@plt+0x3344>
   143e0:	b	14404 <__assert_fail@plt+0x3364>
   143e4:	movw	r0, #1997	; 0x7cd
   143e8:	movt	r0, #2
   143ec:	movw	r1, #1224	; 0x4c8
   143f0:	movt	r1, #2
   143f4:	movw	r2, #649	; 0x289
   143f8:	movw	r3, #2603	; 0xa2b
   143fc:	movt	r3, #2
   14400:	bl	110a0 <__assert_fail@plt>
   14404:	ldr	r0, [sp, #4]
   14408:	ldr	r1, [fp, #-4]
   1440c:	ldr	r1, [r1, #4]
   14410:	str	r0, [r1, #4]
   14414:	ldr	r0, [sp, #4]
   14418:	ldr	r1, [fp, #-4]
   1441c:	str	r0, [r1, #4]
   14420:	mov	sp, fp
   14424:	pop	{fp, pc}
   14428:	push	{fp, lr}
   1442c:	mov	fp, sp
   14430:	sub	sp, sp, #16
   14434:	str	r0, [sp, #8]
   14438:	str	r1, [sp, #4]
   1443c:	movw	r0, #0
   14440:	str	r0, [sp]
   14444:	ldr	r0, [sp]
   14448:	cmp	r0, #12
   1444c:	bcs	144bc <__assert_fail@plt+0x341c>
   14450:	ldr	r0, [sp, #8]
   14454:	ldr	r1, [sp]
   14458:	movw	r2, #3936	; 0xf60
   1445c:	movt	r2, #2
   14460:	add	r1, r2, r1, lsl #2
   14464:	ldr	r1, [r1]
   14468:	ldr	r2, [sp, #4]
   1446c:	bl	1107c <strncmp@plt>
   14470:	cmp	r0, #0
   14474:	bne	144a8 <__assert_fail@plt+0x3408>
   14478:	ldr	r0, [sp]
   1447c:	movw	r1, #3936	; 0xf60
   14480:	movt	r1, #2
   14484:	add	r0, r1, r0, lsl #2
   14488:	ldr	r0, [r0]
   1448c:	bl	10fb0 <strlen@plt>
   14490:	ldr	r1, [sp, #4]
   14494:	cmp	r0, r1
   14498:	bne	144a8 <__assert_fail@plt+0x3408>
   1449c:	ldr	r0, [sp]
   144a0:	str	r0, [fp, #-4]
   144a4:	b	144c4 <__assert_fail@plt+0x3424>
   144a8:	b	144ac <__assert_fail@plt+0x340c>
   144ac:	ldr	r0, [sp]
   144b0:	add	r0, r0, #1
   144b4:	str	r0, [sp]
   144b8:	b	14444 <__assert_fail@plt+0x33a4>
   144bc:	movw	r0, #9999	; 0x270f
   144c0:	str	r0, [fp, #-4]
   144c4:	ldr	r0, [fp, #-4]
   144c8:	mov	sp, fp
   144cc:	pop	{fp, pc}
   144d0:	sub	sp, sp, #4
   144d4:	strb	r0, [sp, #3]
   144d8:	ldrb	r0, [sp, #3]
   144dc:	add	sp, sp, #4
   144e0:	bx	lr
   144e4:	push	{fp, lr}
   144e8:	mov	fp, sp
   144ec:	sub	sp, sp, #8
   144f0:	strb	r0, [fp, #-1]
   144f4:	mov	r0, #5
   144f8:	bl	185dc <__assert_fail@plt+0x753c>
   144fc:	str	r0, [sp]
   14500:	bl	10f8c <__ctype_b_loc@plt>
   14504:	ldr	r0, [r0]
   14508:	ldrb	r1, [fp, #-1]
   1450c:	mov	r2, r1
   14510:	add	r0, r0, r1, lsl #1
   14514:	ldrh	r0, [r0]
   14518:	and	r0, r0, #16384	; 0x4000
   1451c:	cmp	r0, #0
   14520:	beq	14540 <__assert_fail@plt+0x34a0>
   14524:	ldrb	r0, [fp, #-1]
   14528:	ldr	r1, [sp]
   1452c:	strb	r0, [r1]
   14530:	ldr	r0, [sp]
   14534:	movw	r1, #0
   14538:	strb	r1, [r0, #1]
   1453c:	b	14554 <__assert_fail@plt+0x34b4>
   14540:	ldr	r0, [sp]
   14544:	ldrb	r2, [fp, #-1]
   14548:	movw	r1, #2164	; 0x874
   1454c:	movt	r1, #2
   14550:	bl	11058 <sprintf@plt>
   14554:	ldr	r0, [sp]
   14558:	mov	sp, fp
   1455c:	pop	{fp, pc}
   14560:	push	{fp, lr}
   14564:	mov	fp, sp
   14568:	sub	sp, sp, #8
   1456c:	str	r0, [sp, #4]
   14570:	ldr	r0, [sp, #4]
   14574:	bl	14c14 <__assert_fail@plt+0x3b74>
   14578:	movw	r0, #8537	; 0x2159
   1457c:	movt	r0, #3
   14580:	ldrb	r0, [r0]
   14584:	tst	r0, #1
   14588:	beq	145a4 <__assert_fail@plt+0x3504>
   1458c:	ldr	r0, [sp, #4]
   14590:	bl	14f54 <__assert_fail@plt+0x3eb4>
   14594:	asr	r1, r0, #31
   14598:	ldr	r2, [sp, #4]
   1459c:	str	r1, [r2, #20]
   145a0:	str	r0, [r2, #16]
   145a4:	mov	sp, fp
   145a8:	pop	{fp, pc}
   145ac:	push	{fp, lr}
   145b0:	mov	fp, sp
   145b4:	sub	sp, sp, #16
   145b8:	str	r0, [fp, #-4]
   145bc:	str	r3, [sp, #4]
   145c0:	str	r2, [sp]
   145c4:	ldr	r0, [fp, #-4]
   145c8:	bl	14c14 <__assert_fail@plt+0x3b74>
   145cc:	ldr	r0, [sp]
   145d0:	ldr	r1, [sp, #4]
   145d4:	ldr	r2, [fp, #-4]
   145d8:	ldr	r3, [r2, #16]
   145dc:	ldr	r2, [r2, #20]
   145e0:	subs	r0, r0, r3
   145e4:	sbcs	r1, r1, r2
   145e8:	bcc	1463c <__assert_fail@plt+0x359c>
   145ec:	b	145f0 <__assert_fail@plt+0x3550>
   145f0:	ldr	r0, [fp, #-4]
   145f4:	ldr	r0, [r0, #24]
   145f8:	cmp	r0, #1
   145fc:	bne	1463c <__assert_fail@plt+0x359c>
   14600:	ldr	r0, [sp]
   14604:	ldr	r1, [sp, #4]
   14608:	ldr	r2, [fp, #-4]
   1460c:	ldr	r3, [r2, #16]
   14610:	ldr	ip, [r2, #20]
   14614:	ldr	r2, [r2, #28]
   14618:	subs	r0, r0, r3
   1461c:	sbc	r1, r1, ip
   14620:	str	r0, [r2, #16]
   14624:	str	r1, [r2, #20]
   14628:	ldr	r0, [sp]
   1462c:	ldr	r1, [sp, #4]
   14630:	ldr	r2, [fp, #-4]
   14634:	str	r1, [r2, #20]
   14638:	str	r0, [r2, #16]
   1463c:	mov	sp, fp
   14640:	pop	{fp, pc}
   14644:	push	{fp, lr}
   14648:	mov	fp, sp
   1464c:	sub	sp, sp, #80	; 0x50
   14650:	str	r0, [fp, #-4]
   14654:	str	r1, [fp, #-8]
   14658:	mov	r0, #0
   1465c:	str	r0, [fp, #-12]
   14660:	str	r0, [fp, #-16]
   14664:	str	r0, [fp, #-20]	; 0xffffffec
   14668:	str	r0, [fp, #-24]	; 0xffffffe8
   1466c:	ldr	r0, [fp, #-4]
   14670:	ldr	r1, [r0, #16]
   14674:	ldr	r0, [r0, #20]
   14678:	str	r0, [fp, #-28]	; 0xffffffe4
   1467c:	str	r1, [fp, #-32]	; 0xffffffe0
   14680:	ldr	r0, [fp, #-8]
   14684:	ldr	r1, [r0, #16]
   14688:	ldr	r0, [r0, #20]
   1468c:	str	r0, [sp, #44]	; 0x2c
   14690:	str	r1, [sp, #40]	; 0x28
   14694:	ldr	r0, [fp, #-4]
   14698:	ldr	r0, [r0, #4]
   1469c:	str	r0, [sp, #36]	; 0x24
   146a0:	ldr	r0, [fp, #-8]
   146a4:	ldr	r0, [r0, #4]
   146a8:	str	r0, [sp, #32]
   146ac:	movw	r0, #1
   146b0:	strb	r0, [sp, #31]
   146b4:	strb	r0, [sp, #30]
   146b8:	movw	r0, #8537	; 0x2159
   146bc:	movt	r0, #3
   146c0:	ldrb	r0, [r0]
   146c4:	tst	r0, #1
   146c8:	bne	146dc <__assert_fail@plt+0x363c>
   146cc:	ldr	r0, [fp, #-8]
   146d0:	ldrb	r0, [r0, #33]	; 0x21
   146d4:	tst	r0, #1
   146d8:	bne	146e0 <__assert_fail@plt+0x3640>
   146dc:	b	14998 <__assert_fail@plt+0x38f8>
   146e0:	movw	r0, #0
   146e4:	str	r0, [sp, #24]
   146e8:	ldr	r0, [sp, #24]
   146ec:	cmp	r0, #256	; 0x100
   146f0:	bge	14760 <__assert_fail@plt+0x36c0>
   146f4:	bl	10f8c <__ctype_b_loc@plt>
   146f8:	ldr	r0, [r0]
   146fc:	ldr	r1, [sp, #24]
   14700:	add	r0, r0, r1, lsl #1
   14704:	ldrh	r0, [r0]
   14708:	and	r0, r0, #256	; 0x100
   1470c:	cmp	r0, #0
   14710:	beq	14720 <__assert_fail@plt+0x3680>
   14714:	ldr	r0, [fp, #-12]
   14718:	add	r0, r0, #1
   1471c:	str	r0, [fp, #-12]
   14720:	bl	10f8c <__ctype_b_loc@plt>
   14724:	ldr	r0, [r0]
   14728:	ldr	r1, [sp, #24]
   1472c:	add	r0, r0, r1, lsl #1
   14730:	ldrh	r0, [r0]
   14734:	and	r0, r0, #512	; 0x200
   14738:	cmp	r0, #0
   1473c:	beq	1474c <__assert_fail@plt+0x36ac>
   14740:	ldr	r0, [fp, #-16]
   14744:	add	r0, r0, #1
   14748:	str	r0, [fp, #-16]
   1474c:	b	14750 <__assert_fail@plt+0x36b0>
   14750:	ldr	r0, [sp, #24]
   14754:	add	r0, r0, #1
   14758:	str	r0, [sp, #24]
   1475c:	b	146e8 <__assert_fail@plt+0x3648>
   14760:	ldr	r0, [fp, #-4]
   14764:	mvn	r1, #0
   14768:	str	r1, [r0, #12]
   1476c:	mvn	r2, #1
   14770:	str	r2, [r0, #8]
   14774:	ldr	r0, [fp, #-8]
   14778:	str	r1, [r0, #12]
   1477c:	str	r2, [r0, #8]
   14780:	ldr	r0, [fp, #-20]	; 0xffffffec
   14784:	cmn	r0, #1
   14788:	movw	r0, #0
   1478c:	str	r0, [sp, #12]
   14790:	beq	147a8 <__assert_fail@plt+0x3708>
   14794:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14798:	cmn	r0, #1
   1479c:	movw	r0, #0
   147a0:	movne	r0, #1
   147a4:	str	r0, [sp, #12]
   147a8:	ldr	r0, [sp, #12]
   147ac:	tst	r0, #1
   147b0:	beq	14914 <__assert_fail@plt+0x3874>
   147b4:	ldr	r0, [fp, #-4]
   147b8:	add	r1, sp, #20
   147bc:	bl	12934 <__assert_fail@plt+0x1894>
   147c0:	str	r0, [fp, #-20]	; 0xffffffec
   147c4:	ldr	r0, [fp, #-8]
   147c8:	add	r1, sp, #16
   147cc:	bl	12934 <__assert_fail@plt+0x1894>
   147d0:	str	r0, [fp, #-24]	; 0xffffffe8
   147d4:	ldrb	r0, [sp, #30]
   147d8:	tst	r0, #1
   147dc:	beq	14828 <__assert_fail@plt+0x3788>
   147e0:	ldr	r0, [sp, #16]
   147e4:	cmp	r0, #2
   147e8:	beq	14828 <__assert_fail@plt+0x3788>
   147ec:	ldrb	r0, [sp, #31]
   147f0:	tst	r0, #1
   147f4:	beq	14804 <__assert_fail@plt+0x3764>
   147f8:	ldr	r0, [sp, #20]
   147fc:	cmp	r0, #2
   14800:	bne	14828 <__assert_fail@plt+0x3788>
   14804:	movw	r0, #3259	; 0xcbb
   14808:	movt	r0, #2
   1480c:	bl	10fa4 <gettext@plt>
   14810:	movw	r1, #1
   14814:	str	r0, [sp, #8]
   14818:	mov	r0, r1
   1481c:	movw	r1, #0
   14820:	ldr	r2, [sp, #8]
   14824:	bl	10f44 <error@plt>
   14828:	ldr	r0, [sp, #16]
   1482c:	cmp	r0, #2
   14830:	beq	148cc <__assert_fail@plt+0x382c>
   14834:	ldr	r0, [fp, #-4]
   14838:	bl	12e1c <__assert_fail@plt+0x1d7c>
   1483c:	ldr	r0, [fp, #-8]
   14840:	bl	12e1c <__assert_fail@plt+0x1d7c>
   14844:	ldr	r0, [sp, #20]
   14848:	cmp	r0, #1
   1484c:	bne	1485c <__assert_fail@plt+0x37bc>
   14850:	ldr	r0, [fp, #-12]
   14854:	str	r0, [sp, #4]
   14858:	b	14864 <__assert_fail@plt+0x37c4>
   1485c:	ldr	r0, [fp, #-16]
   14860:	str	r0, [sp, #4]
   14864:	ldr	r0, [sp, #4]
   14868:	sub	r0, r0, #1
   1486c:	ldr	r1, [fp, #-4]
   14870:	ldr	r2, [r1, #16]
   14874:	ldr	r3, [r1, #20]
   14878:	subs	r0, r2, r0
   1487c:	sbc	r2, r3, #0
   14880:	str	r0, [r1, #16]
   14884:	str	r2, [r1, #20]
   14888:	ldr	r0, [sp, #16]
   1488c:	cmp	r0, #1
   14890:	bne	148a0 <__assert_fail@plt+0x3800>
   14894:	ldr	r0, [fp, #-12]
   14898:	str	r0, [sp]
   1489c:	b	148a8 <__assert_fail@plt+0x3808>
   148a0:	ldr	r0, [fp, #-16]
   148a4:	str	r0, [sp]
   148a8:	ldr	r0, [sp]
   148ac:	sub	r0, r0, #1
   148b0:	ldr	r1, [fp, #-8]
   148b4:	ldr	r2, [r1, #16]
   148b8:	ldr	r3, [r1, #20]
   148bc:	subs	r0, r2, r0
   148c0:	sbc	r2, r3, #0
   148c4:	str	r0, [r1, #16]
   148c8:	str	r2, [r1, #20]
   148cc:	ldr	r0, [fp, #-4]
   148d0:	ldr	r1, [r0, #8]
   148d4:	ldr	r0, [r0, #12]
   148d8:	and	r0, r1, r0
   148dc:	add	r0, r0, #1
   148e0:	clz	r0, r0
   148e4:	lsr	r0, r0, #5
   148e8:	strb	r0, [sp, #31]
   148ec:	ldr	r0, [fp, #-8]
   148f0:	ldr	r1, [r0, #8]
   148f4:	ldr	r0, [r0, #12]
   148f8:	and	r0, r1, r0
   148fc:	add	r0, r0, #1
   14900:	clz	r0, r0
   14904:	lsr	r0, r0, #5
   14908:	and	r0, r0, #1
   1490c:	strb	r0, [sp, #30]
   14910:	b	14780 <__assert_fail@plt+0x36e0>
   14914:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14918:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1491c:	ldr	r2, [fp, #-4]
   14920:	ldr	r3, [r2, #16]
   14924:	ldr	r2, [r2, #20]
   14928:	subs	r0, r0, r3
   1492c:	sbcs	r1, r1, r2
   14930:	bcc	14960 <__assert_fail@plt+0x38c0>
   14934:	b	14938 <__assert_fail@plt+0x3898>
   14938:	ldr	r0, [sp, #40]	; 0x28
   1493c:	ldr	r1, [sp, #44]	; 0x2c
   14940:	ldr	r2, [fp, #-8]
   14944:	ldr	r3, [r2, #16]
   14948:	ldr	r2, [r2, #20]
   1494c:	subs	r0, r0, r3
   14950:	sbcs	r1, r1, r2
   14954:	bcc	14960 <__assert_fail@plt+0x38c0>
   14958:	b	1495c <__assert_fail@plt+0x38bc>
   1495c:	b	14980 <__assert_fail@plt+0x38e0>
   14960:	movw	r0, #3307	; 0xceb
   14964:	movt	r0, #2
   14968:	movw	r1, #1224	; 0x4c8
   1496c:	movt	r1, #2
   14970:	movw	r2, #1224	; 0x4c8
   14974:	movw	r3, #3360	; 0xd20
   14978:	movt	r3, #2
   1497c:	bl	110a0 <__assert_fail@plt>
   14980:	ldr	r0, [sp, #36]	; 0x24
   14984:	ldr	r1, [fp, #-4]
   14988:	str	r0, [r1, #4]
   1498c:	ldr	r0, [sp, #32]
   14990:	ldr	r1, [fp, #-8]
   14994:	str	r0, [r1, #4]
   14998:	mov	sp, fp
   1499c:	pop	{fp, pc}
   149a0:	push	{fp, lr}
   149a4:	mov	fp, sp
   149a8:	sub	sp, sp, #32
   149ac:	str	r0, [fp, #-4]
   149b0:	str	r1, [fp, #-8]
   149b4:	movw	r0, #8541	; 0x215d
   149b8:	movt	r0, #3
   149bc:	ldrb	r0, [r0]
   149c0:	tst	r0, #1
   149c4:	beq	149cc <__assert_fail@plt+0x392c>
   149c8:	b	149ec <__assert_fail@plt+0x394c>
   149cc:	movw	r0, #2816	; 0xb00
   149d0:	movt	r0, #2
   149d4:	movw	r1, #1224	; 0x4c8
   149d8:	movt	r1, #2
   149dc:	movw	r2, #1377	; 0x561
   149e0:	movw	r3, #3427	; 0xd63
   149e4:	movt	r3, #2
   149e8:	bl	110a0 <__assert_fail@plt>
   149ec:	ldr	r0, [fp, #-4]
   149f0:	ldr	r1, [r0, #16]
   149f4:	ldr	r0, [r0, #20]
   149f8:	ldr	r2, [fp, #-8]
   149fc:	ldr	r3, [r2, #16]
   14a00:	ldr	r2, [r2, #20]
   14a04:	subs	r1, r3, r1
   14a08:	sbcs	r0, r2, r0
   14a0c:	bcs	14a18 <__assert_fail@plt+0x3978>
   14a10:	b	14a14 <__assert_fail@plt+0x3974>
   14a14:	b	14a38 <__assert_fail@plt+0x3998>
   14a18:	movw	r0, #3493	; 0xda5
   14a1c:	movt	r0, #2
   14a20:	movw	r1, #1224	; 0x4c8
   14a24:	movt	r1, #2
   14a28:	movw	r2, #1378	; 0x562
   14a2c:	movw	r3, #3427	; 0xd63
   14a30:	movt	r3, #2
   14a34:	bl	110a0 <__assert_fail@plt>
   14a38:	ldr	r0, [fp, #-8]
   14a3c:	ldr	r1, [r0, #16]
   14a40:	ldr	r0, [r0, #20]
   14a44:	orr	r0, r1, r0
   14a48:	cmp	r0, #0
   14a4c:	beq	14a58 <__assert_fail@plt+0x39b8>
   14a50:	b	14a54 <__assert_fail@plt+0x39b4>
   14a54:	b	14a78 <__assert_fail@plt+0x39d8>
   14a58:	movw	r0, #3517	; 0xdbd
   14a5c:	movt	r0, #2
   14a60:	movw	r1, #1224	; 0x4c8
   14a64:	movt	r1, #2
   14a68:	movw	r2, #1379	; 0x563
   14a6c:	movw	r3, #3427	; 0xd63
   14a70:	movt	r3, #2
   14a74:	bl	110a0 <__assert_fail@plt>
   14a78:	ldr	r0, [fp, #-8]
   14a7c:	ldr	r0, [r0, #4]
   14a80:	str	r0, [fp, #-12]
   14a84:	ldr	r0, [fp, #-12]
   14a88:	ldr	r0, [r0]
   14a8c:	cmp	r0, #4
   14a90:	str	r0, [sp, #12]
   14a94:	bhi	14b14 <__assert_fail@plt+0x3a74>
   14a98:	add	r0, pc, #8
   14a9c:	ldr	r1, [sp, #12]
   14aa0:	ldr	r0, [r0, r1, lsl #2]
   14aa4:	mov	pc, r0
   14aa8:			; <UNDEFINED> instruction: 0x00014abc
   14aac:	andeq	r4, r1, ip, asr #21
   14ab0:	ldrdeq	r4, [r1], -ip
   14ab4:	andeq	r4, r1, r0, lsl fp
   14ab8:	andeq	r4, r1, r0, lsl #22
   14abc:	ldr	r0, [fp, #-12]
   14ac0:	ldrb	r0, [r0, #8]
   14ac4:	strb	r0, [fp, #-13]
   14ac8:	b	14b18 <__assert_fail@plt+0x3a78>
   14acc:	ldr	r0, [fp, #-12]
   14ad0:	ldrb	r0, [r0, #9]
   14ad4:	strb	r0, [fp, #-13]
   14ad8:	b	14b18 <__assert_fail@plt+0x3a78>
   14adc:	movw	r0, #3532	; 0xdcc
   14ae0:	movt	r0, #2
   14ae4:	bl	10fa4 <gettext@plt>
   14ae8:	movw	r1, #1
   14aec:	str	r0, [sp, #8]
   14af0:	mov	r0, r1
   14af4:	movw	r1, #0
   14af8:	ldr	r2, [sp, #8]
   14afc:	bl	10f44 <error@plt>
   14b00:	ldr	r0, [fp, #-12]
   14b04:	ldrb	r0, [r0, #8]
   14b08:	strb	r0, [fp, #-13]
   14b0c:	b	14b18 <__assert_fail@plt+0x3a78>
   14b10:	bl	11088 <abort@plt>
   14b14:	bl	11088 <abort@plt>
   14b18:	ldr	r0, [fp, #-8]
   14b1c:	ldrb	r1, [fp, #-13]
   14b20:	ldr	r2, [fp, #-4]
   14b24:	ldr	r3, [r2, #16]
   14b28:	ldr	r2, [r2, #20]
   14b2c:	ldr	ip, [r0, #16]
   14b30:	ldr	lr, [r0, #20]
   14b34:	subs	r3, r3, ip
   14b38:	sbc	r2, r2, lr
   14b3c:	str	r2, [sp, #4]
   14b40:	mov	r2, r3
   14b44:	ldr	r3, [sp, #4]
   14b48:	bl	14194 <__assert_fail@plt+0x30f4>
   14b4c:	ldr	r0, [fp, #-4]
   14b50:	ldr	r1, [r0, #16]
   14b54:	ldr	r0, [r0, #20]
   14b58:	ldr	r2, [fp, #-8]
   14b5c:	str	r0, [r2, #20]
   14b60:	str	r1, [r2, #16]
   14b64:	mov	sp, fp
   14b68:	pop	{fp, pc}
   14b6c:	push	{fp, lr}
   14b70:	mov	fp, sp
   14b74:	sub	sp, sp, #16
   14b78:	str	r0, [sp, #8]
   14b7c:	ldr	r0, [sp, #8]
   14b80:	mvn	r1, #0
   14b84:	str	r1, [r0, #12]
   14b88:	mvn	r1, #1
   14b8c:	str	r1, [r0, #8]
   14b90:	ldr	r0, [sp, #8]
   14b94:	movw	r1, #0
   14b98:	bl	12934 <__assert_fail@plt+0x1894>
   14b9c:	str	r0, [sp, #4]
   14ba0:	cmn	r0, #1
   14ba4:	bne	14bb8 <__assert_fail@plt+0x3b18>
   14ba8:	movw	r0, #0
   14bac:	and	r0, r0, #1
   14bb0:	strb	r0, [fp, #-1]
   14bb4:	b	14c04 <__assert_fail@plt+0x3b64>
   14bb8:	b	14bbc <__assert_fail@plt+0x3b1c>
   14bbc:	ldr	r0, [sp, #8]
   14bc0:	movw	r1, #0
   14bc4:	bl	12934 <__assert_fail@plt+0x1894>
   14bc8:	str	r0, [sp]
   14bcc:	cmn	r0, #1
   14bd0:	beq	14bf8 <__assert_fail@plt+0x3b58>
   14bd4:	ldr	r0, [sp]
   14bd8:	ldr	r1, [sp, #4]
   14bdc:	cmp	r0, r1
   14be0:	beq	14bf4 <__assert_fail@plt+0x3b54>
   14be4:	movw	r0, #0
   14be8:	and	r0, r0, #1
   14bec:	strb	r0, [fp, #-1]
   14bf0:	b	14c04 <__assert_fail@plt+0x3b64>
   14bf4:	b	14bbc <__assert_fail@plt+0x3b1c>
   14bf8:	movw	r0, #1
   14bfc:	and	r0, r0, #1
   14c00:	strb	r0, [fp, #-1]
   14c04:	ldrb	r0, [fp, #-1]
   14c08:	and	r0, r0, #1
   14c0c:	mov	sp, fp
   14c10:	pop	{fp, pc}
   14c14:	push	{fp, lr}
   14c18:	mov	fp, sp
   14c1c:	sub	sp, sp, #56	; 0x38
   14c20:	str	r0, [fp, #-4]
   14c24:	mov	r0, #0
   14c28:	str	r0, [fp, #-12]
   14c2c:	str	r0, [fp, #-16]
   14c30:	ldr	r0, [fp, #-4]
   14c34:	movw	r1, #0
   14c38:	str	r1, [r0, #24]
   14c3c:	ldr	r0, [fp, #-4]
   14c40:	movw	r1, #0
   14c44:	strb	r1, [r0, #32]
   14c48:	ldr	r0, [fp, #-4]
   14c4c:	strb	r1, [r0, #34]	; 0x22
   14c50:	ldr	r0, [fp, #-4]
   14c54:	strb	r1, [r0, #33]	; 0x21
   14c58:	ldr	r0, [fp, #-4]
   14c5c:	ldr	r0, [r0]
   14c60:	ldr	r0, [r0, #4]
   14c64:	str	r0, [fp, #-8]
   14c68:	ldr	r0, [fp, #-8]
   14c6c:	movw	r1, #0
   14c70:	cmp	r0, r1
   14c74:	beq	14f38 <__assert_fail@plt+0x3e98>
   14c78:	mov	r0, #0
   14c7c:	str	r0, [fp, #-20]	; 0xffffffec
   14c80:	str	r0, [fp, #-24]	; 0xffffffe8
   14c84:	ldr	r0, [fp, #-8]
   14c88:	ldr	r0, [r0]
   14c8c:	cmp	r0, #4
   14c90:	str	r0, [sp, #12]
   14c94:	bhi	14e98 <__assert_fail@plt+0x3df8>
   14c98:	add	r0, pc, #8
   14c9c:	ldr	r1, [sp, #12]
   14ca0:	ldr	r0, [r0, r1, lsl #2]
   14ca4:	mov	pc, r0
   14ca8:			; <UNDEFINED> instruction: 0x00014cbc
   14cac:	ldrdeq	r4, [r1], -r0
   14cb0:	andeq	r4, r1, r0, lsr sp
   14cb4:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   14cb8:	andeq	r4, r1, r4, asr #28
   14cbc:	mov	r0, #0
   14cc0:	str	r0, [fp, #-20]	; 0xffffffec
   14cc4:	mov	r0, #1
   14cc8:	str	r0, [fp, #-24]	; 0xffffffe8
   14ccc:	b	14e9c <__assert_fail@plt+0x3dfc>
   14cd0:	ldr	r0, [fp, #-8]
   14cd4:	ldrb	r0, [r0, #9]
   14cd8:	ldr	r1, [fp, #-8]
   14cdc:	ldrb	r1, [r1, #8]
   14ce0:	cmp	r0, r1
   14ce4:	blt	14cec <__assert_fail@plt+0x3c4c>
   14ce8:	b	14d0c <__assert_fail@plt+0x3c6c>
   14cec:	movw	r0, #3146	; 0xc4a
   14cf0:	movt	r0, #2
   14cf4:	movw	r1, #1224	; 0x4c8
   14cf8:	movt	r1, #2
   14cfc:	movw	r2, #1265	; 0x4f1
   14d00:	movw	r3, #3192	; 0xc78
   14d04:	movt	r3, #2
   14d08:	bl	110a0 <__assert_fail@plt>
   14d0c:	ldr	r0, [fp, #-8]
   14d10:	ldrb	r1, [r0, #8]
   14d14:	ldrb	r0, [r0, #9]
   14d18:	sub	r0, r0, r1
   14d1c:	add	r0, r0, #1
   14d20:	asr	r1, r0, #31
   14d24:	str	r0, [fp, #-24]	; 0xffffffe8
   14d28:	str	r1, [fp, #-20]	; 0xffffffec
   14d2c:	b	14e9c <__assert_fail@plt+0x3dfc>
   14d30:	ldr	r0, [fp, #-4]
   14d34:	movw	r1, #1
   14d38:	strb	r1, [r0, #33]	; 0x21
   14d3c:	movw	r0, #0
   14d40:	str	r0, [sp, #20]
   14d44:	ldr	r0, [sp, #20]
   14d48:	cmp	r0, #256	; 0x100
   14d4c:	bge	14d98 <__assert_fail@plt+0x3cf8>
   14d50:	ldr	r0, [fp, #-8]
   14d54:	ldr	r0, [r0, #8]
   14d58:	ldr	r1, [sp, #20]
   14d5c:	and	r1, r1, #255	; 0xff
   14d60:	bl	14ffc <__assert_fail@plt+0x3f5c>
   14d64:	tst	r0, #1
   14d68:	beq	14d84 <__assert_fail@plt+0x3ce4>
   14d6c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14d70:	ldr	r1, [fp, #-20]	; 0xffffffec
   14d74:	adds	r0, r0, #1
   14d78:	adc	r1, r1, #0
   14d7c:	str	r0, [fp, #-24]	; 0xffffffe8
   14d80:	str	r1, [fp, #-20]	; 0xffffffec
   14d84:	b	14d88 <__assert_fail@plt+0x3ce8>
   14d88:	ldr	r0, [sp, #20]
   14d8c:	add	r0, r0, #1
   14d90:	str	r0, [sp, #20]
   14d94:	b	14d44 <__assert_fail@plt+0x3ca4>
   14d98:	ldr	r0, [fp, #-8]
   14d9c:	ldr	r0, [r0, #8]
   14da0:	cmp	r0, #6
   14da4:	str	r0, [sp, #8]
   14da8:	beq	14dc0 <__assert_fail@plt+0x3d20>
   14dac:	b	14db0 <__assert_fail@plt+0x3d10>
   14db0:	ldr	r0, [sp, #8]
   14db4:	cmp	r0, #10
   14db8:	bne	14dc4 <__assert_fail@plt+0x3d24>
   14dbc:	b	14dc0 <__assert_fail@plt+0x3d20>
   14dc0:	b	14dd0 <__assert_fail@plt+0x3d30>
   14dc4:	ldr	r0, [fp, #-4]
   14dc8:	movw	r1, #1
   14dcc:	strb	r1, [r0, #34]	; 0x22
   14dd0:	b	14e9c <__assert_fail@plt+0x3dfc>
   14dd4:	movw	r0, #0
   14dd8:	str	r0, [sp, #16]
   14ddc:	ldr	r0, [sp, #16]
   14de0:	cmp	r0, #256	; 0x100
   14de4:	bge	14e34 <__assert_fail@plt+0x3d94>
   14de8:	ldr	r0, [fp, #-8]
   14dec:	ldrb	r0, [r0, #8]
   14df0:	ldr	r1, [sp, #16]
   14df4:	and	r0, r0, #255	; 0xff
   14df8:	and	r1, r1, #255	; 0xff
   14dfc:	bl	1523c <__assert_fail@plt+0x419c>
   14e00:	tst	r0, #1
   14e04:	beq	14e20 <__assert_fail@plt+0x3d80>
   14e08:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14e0c:	ldr	r1, [fp, #-20]	; 0xffffffec
   14e10:	adds	r0, r0, #1
   14e14:	adc	r1, r1, #0
   14e18:	str	r0, [fp, #-24]	; 0xffffffe8
   14e1c:	str	r1, [fp, #-20]	; 0xffffffec
   14e20:	b	14e24 <__assert_fail@plt+0x3d84>
   14e24:	ldr	r0, [sp, #16]
   14e28:	add	r0, r0, #1
   14e2c:	str	r0, [sp, #16]
   14e30:	b	14ddc <__assert_fail@plt+0x3d3c>
   14e34:	ldr	r0, [fp, #-4]
   14e38:	movw	r1, #1
   14e3c:	strb	r1, [r0, #32]
   14e40:	b	14e9c <__assert_fail@plt+0x3dfc>
   14e44:	ldr	r0, [fp, #-8]
   14e48:	ldr	r1, [r0, #16]
   14e4c:	ldr	r0, [r0, #20]
   14e50:	orr	r0, r1, r0
   14e54:	cmp	r0, #0
   14e58:	beq	14e78 <__assert_fail@plt+0x3dd8>
   14e5c:	b	14e60 <__assert_fail@plt+0x3dc0>
   14e60:	ldr	r0, [fp, #-8]
   14e64:	ldr	r1, [r0, #16]
   14e68:	ldr	r0, [r0, #20]
   14e6c:	str	r0, [fp, #-20]	; 0xffffffec
   14e70:	str	r1, [fp, #-24]	; 0xffffffe8
   14e74:	b	14e94 <__assert_fail@plt+0x3df4>
   14e78:	ldr	r0, [fp, #-8]
   14e7c:	ldr	r1, [fp, #-4]
   14e80:	str	r0, [r1, #28]
   14e84:	ldr	r0, [fp, #-4]
   14e88:	ldr	r1, [r0, #24]
   14e8c:	add	r1, r1, #1
   14e90:	str	r1, [r0, #24]
   14e94:	b	14e9c <__assert_fail@plt+0x3dfc>
   14e98:	bl	11088 <abort@plt>
   14e9c:	ldr	r0, [fp, #-16]
   14ea0:	ldr	r1, [fp, #-12]
   14ea4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   14ea8:	ldr	r3, [fp, #-20]	; 0xffffffec
   14eac:	adds	r0, r0, r2
   14eb0:	adc	r1, r1, r3
   14eb4:	str	r0, [sp, #24]
   14eb8:	str	r1, [sp, #28]
   14ebc:	ldr	r0, [fp, #-16]
   14ec0:	ldr	r1, [fp, #-12]
   14ec4:	ldr	r2, [sp, #24]
   14ec8:	ldr	r3, [sp, #28]
   14ecc:	subs	r0, r2, r0
   14ed0:	sbcs	r1, r3, r1
   14ed4:	bcc	14ef4 <__assert_fail@plt+0x3e54>
   14ed8:	b	14edc <__assert_fail@plt+0x3e3c>
   14edc:	ldr	r0, [sp, #24]
   14ee0:	ldr	r1, [sp, #28]
   14ee4:	and	r0, r0, r1
   14ee8:	cmn	r0, #1
   14eec:	bne	14f18 <__assert_fail@plt+0x3e78>
   14ef0:	b	14ef4 <__assert_fail@plt+0x3e54>
   14ef4:	movw	r0, #3232	; 0xca0
   14ef8:	movt	r0, #2
   14efc:	bl	10fa4 <gettext@plt>
   14f00:	movw	r1, #1
   14f04:	str	r0, [sp, #4]
   14f08:	mov	r0, r1
   14f0c:	movw	r1, #0
   14f10:	ldr	r2, [sp, #4]
   14f14:	bl	10f44 <error@plt>
   14f18:	ldr	r0, [sp, #24]
   14f1c:	ldr	r1, [sp, #28]
   14f20:	str	r1, [fp, #-12]
   14f24:	str	r0, [fp, #-16]
   14f28:	ldr	r0, [fp, #-8]
   14f2c:	ldr	r0, [r0, #4]
   14f30:	str	r0, [fp, #-8]
   14f34:	b	14c68 <__assert_fail@plt+0x3bc8>
   14f38:	ldr	r0, [fp, #-16]
   14f3c:	ldr	r1, [fp, #-12]
   14f40:	ldr	r2, [fp, #-4]
   14f44:	str	r1, [r2, #20]
   14f48:	str	r0, [r2, #16]
   14f4c:	mov	sp, fp
   14f50:	pop	{fp, pc}
   14f54:	push	{r4, r5, fp, lr}
   14f58:	add	fp, sp, #8
   14f5c:	sub	sp, sp, #272	; 0x110
   14f60:	str	r0, [fp, #-12]
   14f64:	mov	r0, #256	; 0x100
   14f68:	str	r0, [fp, #-20]	; 0xffffffec
   14f6c:	add	r1, sp, #4
   14f70:	mov	r2, #0
   14f74:	str	r0, [sp]
   14f78:	mov	r0, r1
   14f7c:	mov	r1, r2
   14f80:	ldr	r2, [sp]
   14f84:	bl	10fec <memset@plt>
   14f88:	ldr	r1, [fp, #-12]
   14f8c:	mvn	r2, #0
   14f90:	str	r2, [r1, #12]
   14f94:	mvn	r2, #1
   14f98:	str	r2, [r1, #8]
   14f9c:	ldr	r0, [fp, #-12]
   14fa0:	movw	r1, #0
   14fa4:	bl	12934 <__assert_fail@plt+0x1894>
   14fa8:	str	r0, [fp, #-16]
   14fac:	cmn	r0, #1
   14fb0:	beq	14ff0 <__assert_fail@plt+0x3f50>
   14fb4:	ldr	r0, [fp, #-16]
   14fb8:	add	r1, sp, #4
   14fbc:	add	r0, r1, r0
   14fc0:	ldrb	r0, [r0]
   14fc4:	mvn	r2, #0
   14fc8:	eor	r0, r0, r2
   14fcc:	and	r0, r0, #1
   14fd0:	ldr	r2, [fp, #-20]	; 0xffffffec
   14fd4:	sub	r0, r2, r0
   14fd8:	str	r0, [fp, #-20]	; 0xffffffec
   14fdc:	ldr	r0, [fp, #-16]
   14fe0:	add	r0, r1, r0
   14fe4:	movw	r1, #1
   14fe8:	strb	r1, [r0]
   14fec:	b	14f9c <__assert_fail@plt+0x3efc>
   14ff0:	ldr	r0, [fp, #-20]	; 0xffffffec
   14ff4:	sub	sp, fp, #8
   14ff8:	pop	{r4, r5, fp, pc}
   14ffc:	push	{fp, lr}
   15000:	mov	fp, sp
   15004:	sub	sp, sp, #16
   15008:	str	r0, [fp, #-4]
   1500c:	strb	r1, [fp, #-5]
   15010:	ldr	r0, [fp, #-4]
   15014:	cmp	r0, #11
   15018:	str	r0, [sp]
   1501c:	bhi	15210 <__assert_fail@plt+0x4170>
   15020:	add	r0, pc, #8
   15024:	ldr	r1, [sp]
   15028:	ldr	r0, [r0, r1, lsl #2]
   1502c:	mov	pc, r0
   15030:	andeq	r5, r1, r0, rrx
   15034:	andeq	r5, r1, r4, lsl #1
   15038:	andeq	r5, r1, r8, lsr #1
   1503c:	andeq	r5, r1, ip, asr #1
   15040:	strdeq	r5, [r1], -r0
   15044:	andeq	r5, r1, r4, lsl r1
   15048:	andeq	r5, r1, r8, lsr r1
   1504c:	andeq	r5, r1, ip, asr r1
   15050:	andeq	r5, r1, r0, lsl #3
   15054:	andeq	r5, r1, r4, lsr #3
   15058:	andeq	r5, r1, r8, asr #3
   1505c:	andeq	r5, r1, ip, ror #3
   15060:	bl	10f8c <__ctype_b_loc@plt>
   15064:	ldr	r0, [r0]
   15068:	ldrb	r1, [fp, #-5]
   1506c:	mov	r2, r1
   15070:	add	r0, r0, r1, lsl #1
   15074:	ldrh	r0, [r0]
   15078:	and	r0, r0, #8
   1507c:	str	r0, [sp, #4]
   15080:	b	15214 <__assert_fail@plt+0x4174>
   15084:	bl	10f8c <__ctype_b_loc@plt>
   15088:	ldr	r0, [r0]
   1508c:	ldrb	r1, [fp, #-5]
   15090:	mov	r2, r1
   15094:	add	r0, r0, r1, lsl #1
   15098:	ldrh	r0, [r0]
   1509c:	and	r0, r0, #1024	; 0x400
   150a0:	str	r0, [sp, #4]
   150a4:	b	15214 <__assert_fail@plt+0x4174>
   150a8:	bl	10f8c <__ctype_b_loc@plt>
   150ac:	ldr	r0, [r0]
   150b0:	ldrb	r1, [fp, #-5]
   150b4:	mov	r2, r1
   150b8:	add	r0, r0, r1, lsl #1
   150bc:	ldrh	r0, [r0]
   150c0:	and	r0, r0, #1
   150c4:	str	r0, [sp, #4]
   150c8:	b	15214 <__assert_fail@plt+0x4174>
   150cc:	bl	10f8c <__ctype_b_loc@plt>
   150d0:	ldr	r0, [r0]
   150d4:	ldrb	r1, [fp, #-5]
   150d8:	mov	r2, r1
   150dc:	add	r0, r0, r1, lsl #1
   150e0:	ldrh	r0, [r0]
   150e4:	and	r0, r0, #2
   150e8:	str	r0, [sp, #4]
   150ec:	b	15214 <__assert_fail@plt+0x4174>
   150f0:	bl	10f8c <__ctype_b_loc@plt>
   150f4:	ldr	r0, [r0]
   150f8:	ldrb	r1, [fp, #-5]
   150fc:	mov	r2, r1
   15100:	add	r0, r0, r1, lsl #1
   15104:	ldrh	r0, [r0]
   15108:	and	r0, r0, #2048	; 0x800
   1510c:	str	r0, [sp, #4]
   15110:	b	15214 <__assert_fail@plt+0x4174>
   15114:	bl	10f8c <__ctype_b_loc@plt>
   15118:	ldr	r0, [r0]
   1511c:	ldrb	r1, [fp, #-5]
   15120:	mov	r2, r1
   15124:	add	r0, r0, r1, lsl #1
   15128:	ldrh	r0, [r0]
   1512c:	and	r0, r0, #32768	; 0x8000
   15130:	str	r0, [sp, #4]
   15134:	b	15214 <__assert_fail@plt+0x4174>
   15138:	bl	10f8c <__ctype_b_loc@plt>
   1513c:	ldr	r0, [r0]
   15140:	ldrb	r1, [fp, #-5]
   15144:	mov	r2, r1
   15148:	add	r0, r0, r1, lsl #1
   1514c:	ldrh	r0, [r0]
   15150:	and	r0, r0, #512	; 0x200
   15154:	str	r0, [sp, #4]
   15158:	b	15214 <__assert_fail@plt+0x4174>
   1515c:	bl	10f8c <__ctype_b_loc@plt>
   15160:	ldr	r0, [r0]
   15164:	ldrb	r1, [fp, #-5]
   15168:	mov	r2, r1
   1516c:	add	r0, r0, r1, lsl #1
   15170:	ldrh	r0, [r0]
   15174:	and	r0, r0, #16384	; 0x4000
   15178:	str	r0, [sp, #4]
   1517c:	b	15214 <__assert_fail@plt+0x4174>
   15180:	bl	10f8c <__ctype_b_loc@plt>
   15184:	ldr	r0, [r0]
   15188:	ldrb	r1, [fp, #-5]
   1518c:	mov	r2, r1
   15190:	add	r0, r0, r1, lsl #1
   15194:	ldrh	r0, [r0]
   15198:	and	r0, r0, #4
   1519c:	str	r0, [sp, #4]
   151a0:	b	15214 <__assert_fail@plt+0x4174>
   151a4:	bl	10f8c <__ctype_b_loc@plt>
   151a8:	ldr	r0, [r0]
   151ac:	ldrb	r1, [fp, #-5]
   151b0:	mov	r2, r1
   151b4:	add	r0, r0, r1, lsl #1
   151b8:	ldrh	r0, [r0]
   151bc:	and	r0, r0, #8192	; 0x2000
   151c0:	str	r0, [sp, #4]
   151c4:	b	15214 <__assert_fail@plt+0x4174>
   151c8:	bl	10f8c <__ctype_b_loc@plt>
   151cc:	ldr	r0, [r0]
   151d0:	ldrb	r1, [fp, #-5]
   151d4:	mov	r2, r1
   151d8:	add	r0, r0, r1, lsl #1
   151dc:	ldrh	r0, [r0]
   151e0:	and	r0, r0, #256	; 0x100
   151e4:	str	r0, [sp, #4]
   151e8:	b	15214 <__assert_fail@plt+0x4174>
   151ec:	bl	10f8c <__ctype_b_loc@plt>
   151f0:	ldr	r0, [r0]
   151f4:	ldrb	r1, [fp, #-5]
   151f8:	mov	r2, r1
   151fc:	add	r0, r0, r1, lsl #1
   15200:	ldrh	r0, [r0]
   15204:	and	r0, r0, #4096	; 0x1000
   15208:	str	r0, [sp, #4]
   1520c:	b	15214 <__assert_fail@plt+0x4174>
   15210:	bl	11088 <abort@plt>
   15214:	ldr	r0, [sp, #4]
   15218:	cmp	r0, #0
   1521c:	movw	r0, #0
   15220:	movne	r0, #1
   15224:	mvn	r1, #0
   15228:	eor	r0, r0, r1
   1522c:	eor	r0, r0, r1
   15230:	and	r0, r0, #1
   15234:	mov	sp, fp
   15238:	pop	{fp, pc}
   1523c:	sub	sp, sp, #4
   15240:	strb	r0, [sp, #3]
   15244:	strb	r1, [sp, #2]
   15248:	ldrb	r0, [sp, #3]
   1524c:	ldrb	r1, [sp, #2]
   15250:	cmp	r0, r1
   15254:	movw	r0, #0
   15258:	moveq	r0, #1
   1525c:	and	r0, r0, #1
   15260:	add	sp, sp, #4
   15264:	bx	lr
   15268:	sub	sp, sp, #4
   1526c:	str	r0, [sp]
   15270:	ldr	r0, [sp]
   15274:	movw	r1, #17504	; 0x4460
   15278:	movt	r1, #3
   1527c:	str	r0, [r1]
   15280:	add	sp, sp, #4
   15284:	bx	lr
   15288:	sub	sp, sp, #4
   1528c:	and	r0, r0, #1
   15290:	strb	r0, [sp, #3]
   15294:	ldrb	r0, [sp, #3]
   15298:	and	r0, r0, #1
   1529c:	movw	r1, #17508	; 0x4464
   152a0:	movt	r1, #3
   152a4:	strb	r0, [r1]
   152a8:	add	sp, sp, #4
   152ac:	bx	lr
   152b0:	push	{fp, lr}
   152b4:	mov	fp, sp
   152b8:	sub	sp, sp, #24
   152bc:	movw	r0, #8532	; 0x2154
   152c0:	movt	r0, #3
   152c4:	ldr	r0, [r0]
   152c8:	bl	1d5ac <__assert_fail@plt+0xc50c>
   152cc:	cmp	r0, #0
   152d0:	beq	153a0 <__assert_fail@plt+0x4300>
   152d4:	movw	r0, #17508	; 0x4464
   152d8:	movt	r0, #3
   152dc:	ldrb	r0, [r0]
   152e0:	tst	r0, #1
   152e4:	beq	152f8 <__assert_fail@plt+0x4258>
   152e8:	bl	10fd4 <__errno_location@plt>
   152ec:	ldr	r0, [r0]
   152f0:	cmp	r0, #32
   152f4:	beq	153a0 <__assert_fail@plt+0x4300>
   152f8:	movw	r0, #1186	; 0x4a2
   152fc:	movt	r0, #2
   15300:	bl	10fa4 <gettext@plt>
   15304:	str	r0, [fp, #-4]
   15308:	movw	r0, #17504	; 0x4460
   1530c:	movt	r0, #3
   15310:	ldr	r0, [r0]
   15314:	movw	r1, #0
   15318:	cmp	r0, r1
   1531c:	beq	15374 <__assert_fail@plt+0x42d4>
   15320:	bl	10fd4 <__errno_location@plt>
   15324:	ldr	r1, [r0]
   15328:	movw	r0, #17504	; 0x4460
   1532c:	movt	r0, #3
   15330:	ldr	r0, [r0]
   15334:	str	r1, [fp, #-8]
   15338:	bl	1788c <__assert_fail@plt+0x67ec>
   1533c:	ldr	r1, [fp, #-4]
   15340:	movw	r2, #0
   15344:	str	r0, [sp, #12]
   15348:	mov	r0, r2
   1534c:	ldr	r2, [fp, #-8]
   15350:	str	r1, [sp, #8]
   15354:	mov	r1, r2
   15358:	movw	r2, #3999	; 0xf9f
   1535c:	movt	r2, #2
   15360:	ldr	r3, [sp, #12]
   15364:	ldr	ip, [sp, #8]
   15368:	str	ip, [sp]
   1536c:	bl	10f44 <error@plt>
   15370:	b	15390 <__assert_fail@plt+0x42f0>
   15374:	bl	10fd4 <__errno_location@plt>
   15378:	ldr	r1, [r0]
   1537c:	ldr	r3, [fp, #-4]
   15380:	movw	r0, #0
   15384:	movw	r2, #4003	; 0xfa3
   15388:	movt	r2, #2
   1538c:	bl	10f44 <error@plt>
   15390:	movw	r0, #8436	; 0x20f4
   15394:	movt	r0, #3
   15398:	ldr	r0, [r0]
   1539c:	bl	10e90 <_exit@plt>
   153a0:	movw	r0, #8520	; 0x2148
   153a4:	movt	r0, #3
   153a8:	ldr	r0, [r0]
   153ac:	bl	1d5ac <__assert_fail@plt+0xc50c>
   153b0:	cmp	r0, #0
   153b4:	beq	153c8 <__assert_fail@plt+0x4328>
   153b8:	movw	r0, #8436	; 0x20f4
   153bc:	movt	r0, #3
   153c0:	ldr	r0, [r0]
   153c4:	bl	10e90 <_exit@plt>
   153c8:	mov	sp, fp
   153cc:	pop	{fp, pc}
   153d0:	push	{r4, r5, fp, lr}
   153d4:	add	fp, sp, #8
   153d8:	sub	sp, sp, #40	; 0x28
   153dc:	ldr	r1, [fp, #12]
   153e0:	ldr	ip, [fp, #8]
   153e4:	ldr	lr, [fp, #16]
   153e8:	str	r0, [fp, #-12]
   153ec:	str	r3, [sp, #28]
   153f0:	str	r2, [sp, #24]
   153f4:	str	r1, [sp, #20]
   153f8:	str	ip, [sp, #16]
   153fc:	ldr	r0, [fp, #-12]
   15400:	ldr	r2, [sp, #24]
   15404:	ldr	r3, [sp, #28]
   15408:	ldr	r1, [sp, #16]
   1540c:	ldr	ip, [sp, #20]
   15410:	ldr	r4, [fp, #16]
   15414:	mov	r5, sp
   15418:	str	r4, [r5, #8]
   1541c:	str	ip, [r5, #4]
   15420:	str	r1, [r5]
   15424:	str	lr, [sp, #12]
   15428:	bl	10e54 <posix_fadvise64@plt>
   1542c:	sub	sp, fp, #8
   15430:	pop	{r4, r5, fp, pc}
   15434:	push	{fp, lr}
   15438:	mov	fp, sp
   1543c:	sub	sp, sp, #24
   15440:	str	r0, [fp, #-4]
   15444:	str	r1, [fp, #-8]
   15448:	ldr	r0, [fp, #-4]
   1544c:	movw	r1, #0
   15450:	cmp	r0, r1
   15454:	beq	15484 <__assert_fail@plt+0x43e4>
   15458:	ldr	r0, [fp, #-4]
   1545c:	bl	10ff8 <fileno@plt>
   15460:	ldr	r1, [fp, #-8]
   15464:	mov	r2, sp
   15468:	str	r1, [r2, #8]
   1546c:	mov	r1, #0
   15470:	str	r1, [r2, #4]
   15474:	str	r1, [r2]
   15478:	mov	r2, r1
   1547c:	mov	r3, r1
   15480:	bl	153d0 <__assert_fail@plt+0x4330>
   15484:	mov	sp, fp
   15488:	pop	{fp, pc}
   1548c:	push	{fp, lr}
   15490:	mov	fp, sp
   15494:	sub	sp, sp, #16
   15498:	str	r0, [fp, #-4]
   1549c:	bl	10fd4 <__errno_location@plt>
   154a0:	ldr	r0, [r0]
   154a4:	str	r0, [sp, #8]
   154a8:	ldr	r0, [fp, #-4]
   154ac:	bl	10e84 <free@plt>
   154b0:	ldr	r0, [sp, #8]
   154b4:	str	r0, [sp, #4]
   154b8:	bl	10fd4 <__errno_location@plt>
   154bc:	ldr	r1, [sp, #4]
   154c0:	str	r1, [r0]
   154c4:	mov	sp, fp
   154c8:	pop	{fp, pc}
   154cc:	push	{fp, lr}
   154d0:	mov	fp, sp
   154d4:	sub	sp, sp, #24
   154d8:	str	r0, [fp, #-4]
   154dc:	ldr	r0, [fp, #-4]
   154e0:	movw	r1, #0
   154e4:	cmp	r0, r1
   154e8:	bne	1550c <__assert_fail@plt+0x446c>
   154ec:	movw	r0, #8520	; 0x2148
   154f0:	movt	r0, #3
   154f4:	ldr	r1, [r0]
   154f8:	movw	r0, #4006	; 0xfa6
   154fc:	movt	r0, #2
   15500:	bl	11070 <fputs@plt>
   15504:	str	r0, [sp, #8]
   15508:	bl	11088 <abort@plt>
   1550c:	ldr	r0, [fp, #-4]
   15510:	movw	r1, #47	; 0x2f
   15514:	bl	11040 <strrchr@plt>
   15518:	str	r0, [fp, #-8]
   1551c:	ldr	r0, [fp, #-8]
   15520:	movw	r1, #0
   15524:	cmp	r0, r1
   15528:	beq	1553c <__assert_fail@plt+0x449c>
   1552c:	ldr	r0, [fp, #-8]
   15530:	add	r0, r0, #1
   15534:	str	r0, [sp, #4]
   15538:	b	15544 <__assert_fail@plt+0x44a4>
   1553c:	ldr	r0, [fp, #-4]
   15540:	str	r0, [sp, #4]
   15544:	ldr	r0, [sp, #4]
   15548:	str	r0, [sp, #12]
   1554c:	ldr	r0, [sp, #12]
   15550:	ldr	r1, [fp, #-4]
   15554:	sub	r0, r0, r1
   15558:	cmp	r0, #7
   1555c:	blt	155c8 <__assert_fail@plt+0x4528>
   15560:	ldr	r0, [sp, #12]
   15564:	mvn	r1, #6
   15568:	add	r0, r0, r1
   1556c:	movw	r1, #4062	; 0xfde
   15570:	movt	r1, #2
   15574:	movw	r2, #7
   15578:	bl	1107c <strncmp@plt>
   1557c:	cmp	r0, #0
   15580:	bne	155c8 <__assert_fail@plt+0x4528>
   15584:	ldr	r0, [sp, #12]
   15588:	str	r0, [fp, #-4]
   1558c:	ldr	r0, [sp, #12]
   15590:	movw	r1, #4070	; 0xfe6
   15594:	movt	r1, #2
   15598:	movw	r2, #3
   1559c:	bl	1107c <strncmp@plt>
   155a0:	cmp	r0, #0
   155a4:	bne	155c4 <__assert_fail@plt+0x4524>
   155a8:	ldr	r0, [sp, #12]
   155ac:	add	r0, r0, #3
   155b0:	str	r0, [fp, #-4]
   155b4:	ldr	r0, [fp, #-4]
   155b8:	movw	r1, #8504	; 0x2138
   155bc:	movt	r1, #3
   155c0:	str	r0, [r1]
   155c4:	b	155c8 <__assert_fail@plt+0x4528>
   155c8:	ldr	r0, [fp, #-4]
   155cc:	movw	r1, #17512	; 0x4468
   155d0:	movt	r1, #3
   155d4:	str	r0, [r1]
   155d8:	ldr	r0, [fp, #-4]
   155dc:	movw	r1, #8508	; 0x213c
   155e0:	movt	r1, #3
   155e4:	str	r0, [r1]
   155e8:	mov	sp, fp
   155ec:	pop	{fp, pc}
   155f0:	push	{fp, lr}
   155f4:	mov	fp, sp
   155f8:	sub	sp, sp, #24
   155fc:	str	r0, [fp, #-4]
   15600:	bl	10fd4 <__errno_location@plt>
   15604:	ldr	r0, [r0]
   15608:	str	r0, [fp, #-8]
   1560c:	ldr	r0, [fp, #-4]
   15610:	movw	r1, #0
   15614:	cmp	r0, r1
   15618:	beq	15628 <__assert_fail@plt+0x4588>
   1561c:	ldr	r0, [fp, #-4]
   15620:	str	r0, [sp, #8]
   15624:	b	15638 <__assert_fail@plt+0x4598>
   15628:	movw	r0, #17516	; 0x446c
   1562c:	movt	r0, #3
   15630:	str	r0, [sp, #8]
   15634:	b	15638 <__assert_fail@plt+0x4598>
   15638:	ldr	r0, [sp, #8]
   1563c:	movw	r1, #48	; 0x30
   15640:	bl	1b214 <__assert_fail@plt+0xa174>
   15644:	str	r0, [sp, #12]
   15648:	ldr	r0, [fp, #-8]
   1564c:	str	r0, [sp, #4]
   15650:	bl	10fd4 <__errno_location@plt>
   15654:	ldr	r1, [sp, #4]
   15658:	str	r1, [r0]
   1565c:	ldr	r0, [sp, #12]
   15660:	mov	sp, fp
   15664:	pop	{fp, pc}
   15668:	sub	sp, sp, #8
   1566c:	str	r0, [sp, #4]
   15670:	ldr	r0, [sp, #4]
   15674:	movw	r1, #0
   15678:	cmp	r0, r1
   1567c:	beq	1568c <__assert_fail@plt+0x45ec>
   15680:	ldr	r0, [sp, #4]
   15684:	str	r0, [sp]
   15688:	b	1569c <__assert_fail@plt+0x45fc>
   1568c:	movw	r0, #17516	; 0x446c
   15690:	movt	r0, #3
   15694:	str	r0, [sp]
   15698:	b	1569c <__assert_fail@plt+0x45fc>
   1569c:	ldr	r0, [sp]
   156a0:	ldr	r0, [r0]
   156a4:	add	sp, sp, #8
   156a8:	bx	lr
   156ac:	sub	sp, sp, #16
   156b0:	str	r0, [sp, #12]
   156b4:	str	r1, [sp, #8]
   156b8:	ldr	r0, [sp, #8]
   156bc:	ldr	r1, [sp, #12]
   156c0:	movw	r2, #0
   156c4:	cmp	r1, r2
   156c8:	str	r0, [sp, #4]
   156cc:	beq	156dc <__assert_fail@plt+0x463c>
   156d0:	ldr	r0, [sp, #12]
   156d4:	str	r0, [sp]
   156d8:	b	156ec <__assert_fail@plt+0x464c>
   156dc:	movw	r0, #17516	; 0x446c
   156e0:	movt	r0, #3
   156e4:	str	r0, [sp]
   156e8:	b	156ec <__assert_fail@plt+0x464c>
   156ec:	ldr	r0, [sp]
   156f0:	ldr	r1, [sp, #4]
   156f4:	str	r1, [r0]
   156f8:	add	sp, sp, #16
   156fc:	bx	lr
   15700:	sub	sp, sp, #32
   15704:	str	r0, [sp, #28]
   15708:	strb	r1, [sp, #27]
   1570c:	str	r2, [sp, #20]
   15710:	ldrb	r0, [sp, #27]
   15714:	strb	r0, [sp, #19]
   15718:	ldr	r0, [sp, #28]
   1571c:	movw	r1, #0
   15720:	cmp	r0, r1
   15724:	beq	15734 <__assert_fail@plt+0x4694>
   15728:	ldr	r0, [sp, #28]
   1572c:	str	r0, [sp]
   15730:	b	15744 <__assert_fail@plt+0x46a4>
   15734:	movw	r0, #17516	; 0x446c
   15738:	movt	r0, #3
   1573c:	str	r0, [sp]
   15740:	b	15744 <__assert_fail@plt+0x46a4>
   15744:	ldr	r0, [sp]
   15748:	add	r0, r0, #8
   1574c:	ldrb	r1, [sp, #19]
   15750:	lsr	r1, r1, #5
   15754:	add	r0, r0, r1, lsl #2
   15758:	str	r0, [sp, #12]
   1575c:	ldrb	r0, [sp, #19]
   15760:	and	r0, r0, #31
   15764:	str	r0, [sp, #8]
   15768:	ldr	r0, [sp, #12]
   1576c:	ldr	r0, [r0]
   15770:	ldr	r1, [sp, #8]
   15774:	lsr	r0, r0, r1
   15778:	and	r0, r0, #1
   1577c:	str	r0, [sp, #4]
   15780:	ldr	r0, [sp, #20]
   15784:	and	r0, r0, #1
   15788:	ldr	r1, [sp, #4]
   1578c:	eor	r0, r0, r1
   15790:	ldr	r1, [sp, #8]
   15794:	lsl	r0, r0, r1
   15798:	ldr	r1, [sp, #12]
   1579c:	ldr	r2, [r1]
   157a0:	eor	r0, r2, r0
   157a4:	str	r0, [r1]
   157a8:	ldr	r0, [sp, #4]
   157ac:	add	sp, sp, #32
   157b0:	bx	lr
   157b4:	sub	sp, sp, #12
   157b8:	str	r0, [sp, #8]
   157bc:	str	r1, [sp, #4]
   157c0:	ldr	r0, [sp, #8]
   157c4:	movw	r1, #0
   157c8:	cmp	r0, r1
   157cc:	bne	157dc <__assert_fail@plt+0x473c>
   157d0:	movw	r0, #17516	; 0x446c
   157d4:	movt	r0, #3
   157d8:	str	r0, [sp, #8]
   157dc:	ldr	r0, [sp, #8]
   157e0:	ldr	r0, [r0, #4]
   157e4:	str	r0, [sp]
   157e8:	ldr	r0, [sp, #4]
   157ec:	ldr	r1, [sp, #8]
   157f0:	str	r0, [r1, #4]
   157f4:	ldr	r0, [sp]
   157f8:	add	sp, sp, #12
   157fc:	bx	lr
   15800:	push	{fp, lr}
   15804:	mov	fp, sp
   15808:	sub	sp, sp, #16
   1580c:	str	r0, [fp, #-4]
   15810:	str	r1, [sp, #8]
   15814:	str	r2, [sp, #4]
   15818:	ldr	r0, [fp, #-4]
   1581c:	movw	r1, #0
   15820:	cmp	r0, r1
   15824:	bne	15834 <__assert_fail@plt+0x4794>
   15828:	movw	r0, #17516	; 0x446c
   1582c:	movt	r0, #3
   15830:	str	r0, [fp, #-4]
   15834:	ldr	r0, [fp, #-4]
   15838:	movw	r1, #10
   1583c:	str	r1, [r0]
   15840:	ldr	r0, [sp, #8]
   15844:	movw	r1, #0
   15848:	cmp	r0, r1
   1584c:	beq	15860 <__assert_fail@plt+0x47c0>
   15850:	ldr	r0, [sp, #4]
   15854:	movw	r1, #0
   15858:	cmp	r0, r1
   1585c:	bne	15864 <__assert_fail@plt+0x47c4>
   15860:	bl	11088 <abort@plt>
   15864:	ldr	r0, [sp, #8]
   15868:	ldr	r1, [fp, #-4]
   1586c:	str	r0, [r1, #40]	; 0x28
   15870:	ldr	r0, [sp, #4]
   15874:	ldr	r1, [fp, #-4]
   15878:	str	r0, [r1, #44]	; 0x2c
   1587c:	mov	sp, fp
   15880:	pop	{fp, pc}
   15884:	push	{r4, r5, r6, sl, fp, lr}
   15888:	add	fp, sp, #16
   1588c:	sub	sp, sp, #56	; 0x38
   15890:	ldr	ip, [fp, #8]
   15894:	str	r0, [fp, #-20]	; 0xffffffec
   15898:	str	r1, [fp, #-24]	; 0xffffffe8
   1589c:	str	r2, [fp, #-28]	; 0xffffffe4
   158a0:	str	r3, [fp, #-32]	; 0xffffffe0
   158a4:	ldr	r0, [fp, #8]
   158a8:	movw	r1, #0
   158ac:	cmp	r0, r1
   158b0:	beq	158c0 <__assert_fail@plt+0x4820>
   158b4:	ldr	r0, [fp, #8]
   158b8:	str	r0, [sp, #24]
   158bc:	b	158d0 <__assert_fail@plt+0x4830>
   158c0:	movw	r0, #17516	; 0x446c
   158c4:	movt	r0, #3
   158c8:	str	r0, [sp, #24]
   158cc:	b	158d0 <__assert_fail@plt+0x4830>
   158d0:	ldr	r0, [sp, #24]
   158d4:	str	r0, [sp, #36]	; 0x24
   158d8:	bl	10fd4 <__errno_location@plt>
   158dc:	ldr	r0, [r0]
   158e0:	str	r0, [sp, #32]
   158e4:	ldr	r0, [fp, #-20]	; 0xffffffec
   158e8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   158ec:	ldr	r2, [fp, #-28]	; 0xffffffe4
   158f0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   158f4:	ldr	ip, [sp, #36]	; 0x24
   158f8:	ldr	ip, [ip]
   158fc:	ldr	lr, [sp, #36]	; 0x24
   15900:	ldr	lr, [lr, #4]
   15904:	ldr	r4, [sp, #36]	; 0x24
   15908:	add	r4, r4, #8
   1590c:	ldr	r5, [sp, #36]	; 0x24
   15910:	ldr	r5, [r5, #40]	; 0x28
   15914:	ldr	r6, [sp, #36]	; 0x24
   15918:	ldr	r6, [r6, #44]	; 0x2c
   1591c:	str	ip, [sp]
   15920:	str	lr, [sp, #4]
   15924:	str	r4, [sp, #8]
   15928:	str	r5, [sp, #12]
   1592c:	str	r6, [sp, #16]
   15930:	bl	15958 <__assert_fail@plt+0x48b8>
   15934:	str	r0, [sp, #28]
   15938:	ldr	r0, [sp, #32]
   1593c:	str	r0, [sp, #20]
   15940:	bl	10fd4 <__errno_location@plt>
   15944:	ldr	r1, [sp, #20]
   15948:	str	r1, [r0]
   1594c:	ldr	r0, [sp, #28]
   15950:	sub	sp, fp, #16
   15954:	pop	{r4, r5, r6, sl, fp, pc}
   15958:	push	{r4, r5, r6, sl, fp, lr}
   1595c:	add	fp, sp, #16
   15960:	sub	sp, sp, #160	; 0xa0
   15964:	ldr	ip, [fp, #24]
   15968:	ldr	lr, [fp, #20]
   1596c:	ldr	r4, [fp, #16]
   15970:	ldr	r5, [fp, #12]
   15974:	ldr	r6, [fp, #8]
   15978:	str	r0, [fp, #-24]	; 0xffffffe8
   1597c:	str	r1, [fp, #-28]	; 0xffffffe4
   15980:	str	r2, [fp, #-32]	; 0xffffffe0
   15984:	str	r3, [fp, #-36]	; 0xffffffdc
   15988:	movw	r0, #0
   1598c:	str	r0, [fp, #-44]	; 0xffffffd4
   15990:	str	r0, [fp, #-48]	; 0xffffffd0
   15994:	str	r0, [fp, #-52]	; 0xffffffcc
   15998:	str	r0, [fp, #-56]	; 0xffffffc8
   1599c:	movw	r0, #0
   159a0:	strb	r0, [fp, #-57]	; 0xffffffc7
   159a4:	str	ip, [sp, #72]	; 0x48
   159a8:	str	lr, [sp, #68]	; 0x44
   159ac:	str	r4, [sp, #64]	; 0x40
   159b0:	str	r5, [sp, #60]	; 0x3c
   159b4:	str	r6, [sp, #56]	; 0x38
   159b8:	bl	10f14 <__ctype_get_mb_cur_max@plt>
   159bc:	cmp	r0, #1
   159c0:	movw	r0, #0
   159c4:	moveq	r0, #1
   159c8:	and	r0, r0, #1
   159cc:	strb	r0, [fp, #-58]	; 0xffffffc6
   159d0:	ldr	r0, [fp, #12]
   159d4:	and	r0, r0, #2
   159d8:	cmp	r0, #0
   159dc:	movw	r0, #0
   159e0:	movne	r0, #1
   159e4:	and	r0, r0, #1
   159e8:	strb	r0, [fp, #-59]	; 0xffffffc5
   159ec:	movw	r0, #0
   159f0:	strb	r0, [fp, #-60]	; 0xffffffc4
   159f4:	strb	r0, [fp, #-61]	; 0xffffffc3
   159f8:	movw	r0, #1
   159fc:	strb	r0, [fp, #-62]	; 0xffffffc2
   15a00:	ldr	r0, [fp, #8]
   15a04:	cmp	r0, #10
   15a08:	str	r0, [sp, #52]	; 0x34
   15a0c:	bhi	15c34 <__assert_fail@plt+0x4b94>
   15a10:	add	r0, pc, #8
   15a14:	ldr	r1, [sp, #52]	; 0x34
   15a18:	ldr	r0, [r0, r1, lsl #2]
   15a1c:	mov	pc, r0
   15a20:	andeq	r5, r1, r8, lsr #24
   15a24:	andeq	r5, r1, r4, lsr #23
   15a28:	andeq	r5, r1, r4, asr #23
   15a2c:	muleq	r1, ip, fp
   15a30:	andeq	r5, r1, ip, lsr #23
   15a34:	andeq	r5, r1, ip, asr sl
   15a38:	andeq	r5, r1, ip, asr #20
   15a3c:	andeq	r5, r1, r0, asr #21
   15a40:	ldrdeq	r5, [r1], -r4
   15a44:	ldrdeq	r5, [r1], -r4
   15a48:	ldrdeq	r5, [r1], -r4
   15a4c:	movw	r0, #5
   15a50:	str	r0, [fp, #8]
   15a54:	movw	r0, #1
   15a58:	strb	r0, [fp, #-59]	; 0xffffffc5
   15a5c:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   15a60:	tst	r0, #1
   15a64:	bne	15aa0 <__assert_fail@plt+0x4a00>
   15a68:	b	15a6c <__assert_fail@plt+0x49cc>
   15a6c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15a70:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15a74:	cmp	r0, r1
   15a78:	bcs	15a90 <__assert_fail@plt+0x49f0>
   15a7c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15a80:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15a84:	add	r0, r0, r1
   15a88:	movw	r1, #34	; 0x22
   15a8c:	strb	r1, [r0]
   15a90:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15a94:	add	r0, r0, #1
   15a98:	str	r0, [fp, #-44]	; 0xffffffd4
   15a9c:	b	15aa0 <__assert_fail@plt+0x4a00>
   15aa0:	movw	r0, #1
   15aa4:	strb	r0, [fp, #-57]	; 0xffffffc7
   15aa8:	movw	r0, #4150	; 0x1036
   15aac:	movt	r0, #2
   15ab0:	str	r0, [fp, #-52]	; 0xffffffcc
   15ab4:	movw	r0, #1
   15ab8:	str	r0, [fp, #-56]	; 0xffffffc8
   15abc:	b	15c38 <__assert_fail@plt+0x4b98>
   15ac0:	movw	r0, #1
   15ac4:	strb	r0, [fp, #-57]	; 0xffffffc7
   15ac8:	movw	r0, #0
   15acc:	strb	r0, [fp, #-59]	; 0xffffffc5
   15ad0:	b	15c38 <__assert_fail@plt+0x4b98>
   15ad4:	ldr	r0, [fp, #8]
   15ad8:	cmp	r0, #10
   15adc:	beq	15b08 <__assert_fail@plt+0x4a68>
   15ae0:	ldr	r1, [fp, #8]
   15ae4:	movw	r0, #4152	; 0x1038
   15ae8:	movt	r0, #2
   15aec:	bl	17b4c <__assert_fail@plt+0x6aac>
   15af0:	str	r0, [fp, #20]
   15af4:	ldr	r1, [fp, #8]
   15af8:	movw	r0, #1868	; 0x74c
   15afc:	movt	r0, #2
   15b00:	bl	17b4c <__assert_fail@plt+0x6aac>
   15b04:	str	r0, [fp, #24]
   15b08:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   15b0c:	tst	r0, #1
   15b10:	bne	15b7c <__assert_fail@plt+0x4adc>
   15b14:	ldr	r0, [fp, #20]
   15b18:	str	r0, [fp, #-52]	; 0xffffffcc
   15b1c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   15b20:	ldrsb	r0, [r0]
   15b24:	cmp	r0, #0
   15b28:	beq	15b78 <__assert_fail@plt+0x4ad8>
   15b2c:	b	15b30 <__assert_fail@plt+0x4a90>
   15b30:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15b34:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15b38:	cmp	r0, r1
   15b3c:	bcs	15b58 <__assert_fail@plt+0x4ab8>
   15b40:	ldr	r0, [fp, #-52]	; 0xffffffcc
   15b44:	ldrb	r0, [r0]
   15b48:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15b4c:	ldr	r2, [fp, #-44]	; 0xffffffd4
   15b50:	add	r1, r1, r2
   15b54:	strb	r0, [r1]
   15b58:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15b5c:	add	r0, r0, #1
   15b60:	str	r0, [fp, #-44]	; 0xffffffd4
   15b64:	b	15b68 <__assert_fail@plt+0x4ac8>
   15b68:	ldr	r0, [fp, #-52]	; 0xffffffcc
   15b6c:	add	r0, r0, #1
   15b70:	str	r0, [fp, #-52]	; 0xffffffcc
   15b74:	b	15b1c <__assert_fail@plt+0x4a7c>
   15b78:	b	15b7c <__assert_fail@plt+0x4adc>
   15b7c:	movw	r0, #1
   15b80:	strb	r0, [fp, #-57]	; 0xffffffc7
   15b84:	ldr	r0, [fp, #24]
   15b88:	str	r0, [fp, #-52]	; 0xffffffcc
   15b8c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   15b90:	bl	10fb0 <strlen@plt>
   15b94:	str	r0, [fp, #-56]	; 0xffffffc8
   15b98:	b	15c38 <__assert_fail@plt+0x4b98>
   15b9c:	movw	r0, #1
   15ba0:	strb	r0, [fp, #-57]	; 0xffffffc7
   15ba4:	movw	r0, #1
   15ba8:	strb	r0, [fp, #-59]	; 0xffffffc5
   15bac:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   15bb0:	tst	r0, #1
   15bb4:	bne	15bc0 <__assert_fail@plt+0x4b20>
   15bb8:	movw	r0, #1
   15bbc:	strb	r0, [fp, #-57]	; 0xffffffc7
   15bc0:	b	15bc4 <__assert_fail@plt+0x4b24>
   15bc4:	movw	r0, #2
   15bc8:	str	r0, [fp, #8]
   15bcc:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   15bd0:	tst	r0, #1
   15bd4:	bne	15c10 <__assert_fail@plt+0x4b70>
   15bd8:	b	15bdc <__assert_fail@plt+0x4b3c>
   15bdc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15be0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15be4:	cmp	r0, r1
   15be8:	bcs	15c00 <__assert_fail@plt+0x4b60>
   15bec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15bf0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15bf4:	add	r0, r0, r1
   15bf8:	movw	r1, #39	; 0x27
   15bfc:	strb	r1, [r0]
   15c00:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15c04:	add	r0, r0, #1
   15c08:	str	r0, [fp, #-44]	; 0xffffffd4
   15c0c:	b	15c10 <__assert_fail@plt+0x4b70>
   15c10:	movw	r0, #1868	; 0x74c
   15c14:	movt	r0, #2
   15c18:	str	r0, [fp, #-52]	; 0xffffffcc
   15c1c:	movw	r0, #1
   15c20:	str	r0, [fp, #-56]	; 0xffffffc8
   15c24:	b	15c38 <__assert_fail@plt+0x4b98>
   15c28:	movw	r0, #0
   15c2c:	strb	r0, [fp, #-59]	; 0xffffffc5
   15c30:	b	15c38 <__assert_fail@plt+0x4b98>
   15c34:	bl	11088 <abort@plt>
   15c38:	movw	r0, #0
   15c3c:	str	r0, [fp, #-40]	; 0xffffffd8
   15c40:	ldr	r0, [fp, #-36]	; 0xffffffdc
   15c44:	cmn	r0, #1
   15c48:	bne	15c74 <__assert_fail@plt+0x4bd4>
   15c4c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15c50:	ldr	r1, [fp, #-40]	; 0xffffffd8
   15c54:	add	r0, r0, r1
   15c58:	ldrb	r0, [r0]
   15c5c:	cmp	r0, #0
   15c60:	movw	r0, #0
   15c64:	moveq	r0, #1
   15c68:	and	r0, r0, #1
   15c6c:	str	r0, [sp, #48]	; 0x30
   15c70:	b	15c90 <__assert_fail@plt+0x4bf0>
   15c74:	ldr	r0, [fp, #-40]	; 0xffffffd8
   15c78:	ldr	r1, [fp, #-36]	; 0xffffffdc
   15c7c:	cmp	r0, r1
   15c80:	movw	r0, #0
   15c84:	moveq	r0, #1
   15c88:	and	r0, r0, #1
   15c8c:	str	r0, [sp, #48]	; 0x30
   15c90:	ldr	r0, [sp, #48]	; 0x30
   15c94:	cmp	r0, #0
   15c98:	movw	r0, #0
   15c9c:	movne	r0, #1
   15ca0:	mvn	r1, #0
   15ca4:	eor	r0, r0, r1
   15ca8:	tst	r0, #1
   15cac:	beq	16e98 <__assert_fail@plt+0x5df8>
   15cb0:	movw	r0, #0
   15cb4:	strb	r0, [fp, #-65]	; 0xffffffbf
   15cb8:	strb	r0, [fp, #-66]	; 0xffffffbe
   15cbc:	strb	r0, [fp, #-67]	; 0xffffffbd
   15cc0:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   15cc4:	tst	r0, #1
   15cc8:	beq	15d74 <__assert_fail@plt+0x4cd4>
   15ccc:	ldr	r0, [fp, #8]
   15cd0:	cmp	r0, #2
   15cd4:	beq	15d74 <__assert_fail@plt+0x4cd4>
   15cd8:	ldr	r0, [fp, #-56]	; 0xffffffc8
   15cdc:	cmp	r0, #0
   15ce0:	beq	15d74 <__assert_fail@plt+0x4cd4>
   15ce4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   15ce8:	ldr	r1, [fp, #-56]	; 0xffffffc8
   15cec:	add	r0, r0, r1
   15cf0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   15cf4:	cmn	r1, #1
   15cf8:	str	r0, [sp, #44]	; 0x2c
   15cfc:	bne	15d24 <__assert_fail@plt+0x4c84>
   15d00:	ldr	r0, [fp, #-56]	; 0xffffffc8
   15d04:	movw	r1, #1
   15d08:	cmp	r1, r0
   15d0c:	bcs	15d24 <__assert_fail@plt+0x4c84>
   15d10:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15d14:	bl	10fb0 <strlen@plt>
   15d18:	str	r0, [fp, #-36]	; 0xffffffdc
   15d1c:	str	r0, [sp, #40]	; 0x28
   15d20:	b	15d2c <__assert_fail@plt+0x4c8c>
   15d24:	ldr	r0, [fp, #-36]	; 0xffffffdc
   15d28:	str	r0, [sp, #40]	; 0x28
   15d2c:	ldr	r0, [sp, #40]	; 0x28
   15d30:	ldr	r1, [sp, #44]	; 0x2c
   15d34:	cmp	r1, r0
   15d38:	bhi	15d74 <__assert_fail@plt+0x4cd4>
   15d3c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15d40:	ldr	r1, [fp, #-40]	; 0xffffffd8
   15d44:	add	r0, r0, r1
   15d48:	ldr	r1, [fp, #-52]	; 0xffffffcc
   15d4c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   15d50:	bl	10ecc <memcmp@plt>
   15d54:	cmp	r0, #0
   15d58:	bne	15d74 <__assert_fail@plt+0x4cd4>
   15d5c:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   15d60:	tst	r0, #1
   15d64:	beq	15d6c <__assert_fail@plt+0x4ccc>
   15d68:	b	17018 <__assert_fail@plt+0x5f78>
   15d6c:	movw	r0, #1
   15d70:	strb	r0, [fp, #-65]	; 0xffffffbf
   15d74:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15d78:	ldr	r1, [fp, #-40]	; 0xffffffd8
   15d7c:	ldrb	r0, [r0, r1]
   15d80:	strb	r0, [fp, #-63]	; 0xffffffc1
   15d84:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   15d88:	mov	r1, r0
   15d8c:	cmp	r0, #126	; 0x7e
   15d90:	str	r1, [sp, #36]	; 0x24
   15d94:	bhi	16604 <__assert_fail@plt+0x5564>
   15d98:	add	r0, pc, #8
   15d9c:	ldr	r1, [sp, #36]	; 0x24
   15da0:	ldr	r0, [r0, r1, lsl #2]
   15da4:	mov	pc, r0
   15da8:	andeq	r5, r1, r4, lsr #31
   15dac:	andeq	r6, r1, r4, lsl #12
   15db0:	andeq	r6, r1, r4, lsl #12
   15db4:	andeq	r6, r1, r4, lsl #12
   15db8:	andeq	r6, r1, r4, lsl #12
   15dbc:	andeq	r6, r1, r4, lsl #12
   15dc0:	andeq	r6, r1, r4, lsl #12
   15dc4:	andeq	r6, r1, ip, lsr #7
   15dc8:			; <UNDEFINED> instruction: 0x000163b8
   15dcc:	andeq	r6, r1, r8, ror #7
   15dd0:	ldrdeq	r6, [r1], -r0
   15dd4:	strdeq	r6, [r1], -r4
   15dd8:	andeq	r6, r1, r4, asr #7
   15ddc:	ldrdeq	r6, [r1], -ip
   15de0:	andeq	r6, r1, r4, lsl #12
   15de4:	andeq	r6, r1, r4, lsl #12
   15de8:	andeq	r6, r1, r4, lsl #12
   15dec:	andeq	r6, r1, r4, lsl #12
   15df0:	andeq	r6, r1, r4, lsl #12
   15df4:	andeq	r6, r1, r4, lsl #12
   15df8:	andeq	r6, r1, r4, lsl #12
   15dfc:	andeq	r6, r1, r4, lsl #12
   15e00:	andeq	r6, r1, r4, lsl #12
   15e04:	andeq	r6, r1, r4, lsl #12
   15e08:	andeq	r6, r1, r4, lsl #12
   15e0c:	andeq	r6, r1, r4, lsl #12
   15e10:	andeq	r6, r1, r4, lsl #12
   15e14:	andeq	r6, r1, r4, lsl #12
   15e18:	andeq	r6, r1, r4, lsl #12
   15e1c:	andeq	r6, r1, r4, lsl #12
   15e20:	andeq	r6, r1, r4, lsl #12
   15e24:	andeq	r6, r1, r4, lsl #12
   15e28:	ldrdeq	r6, [r1], -r8
   15e2c:	andeq	r6, r1, r0, ror #9
   15e30:	andeq	r6, r1, r0, ror #9
   15e34:	andeq	r6, r1, r4, asr #9
   15e38:	andeq	r6, r1, r0, ror #9
   15e3c:	strdeq	r6, [r1], -r8
   15e40:	andeq	r6, r1, r0, ror #9
   15e44:	andeq	r6, r1, r0, lsl #10
   15e48:	andeq	r6, r1, r0, ror #9
   15e4c:	andeq	r6, r1, r0, ror #9
   15e50:	andeq	r6, r1, r0, ror #9
   15e54:	strdeq	r6, [r1], -r8
   15e58:	strdeq	r6, [r1], -r8
   15e5c:	strdeq	r6, [r1], -r8
   15e60:	strdeq	r6, [r1], -r8
   15e64:	strdeq	r6, [r1], -r8
   15e68:	strdeq	r6, [r1], -r8
   15e6c:	strdeq	r6, [r1], -r8
   15e70:	strdeq	r6, [r1], -r8
   15e74:	strdeq	r6, [r1], -r8
   15e78:	strdeq	r6, [r1], -r8
   15e7c:	strdeq	r6, [r1], -r8
   15e80:	strdeq	r6, [r1], -r8
   15e84:	strdeq	r6, [r1], -r8
   15e88:	strdeq	r6, [r1], -r8
   15e8c:	strdeq	r6, [r1], -r8
   15e90:	strdeq	r6, [r1], -r8
   15e94:	andeq	r6, r1, r0, ror #9
   15e98:	andeq	r6, r1, r0, ror #9
   15e9c:	andeq	r6, r1, r0, ror #9
   15ea0:	andeq	r6, r1, r0, ror #9
   15ea4:			; <UNDEFINED> instruction: 0x000161b0
   15ea8:	andeq	r6, r1, r4, lsl #12
   15eac:	strdeq	r6, [r1], -r8
   15eb0:	strdeq	r6, [r1], -r8
   15eb4:	strdeq	r6, [r1], -r8
   15eb8:	strdeq	r6, [r1], -r8
   15ebc:	strdeq	r6, [r1], -r8
   15ec0:	strdeq	r6, [r1], -r8
   15ec4:	strdeq	r6, [r1], -r8
   15ec8:	strdeq	r6, [r1], -r8
   15ecc:	strdeq	r6, [r1], -r8
   15ed0:	strdeq	r6, [r1], -r8
   15ed4:	strdeq	r6, [r1], -r8
   15ed8:	strdeq	r6, [r1], -r8
   15edc:	strdeq	r6, [r1], -r8
   15ee0:	strdeq	r6, [r1], -r8
   15ee4:	strdeq	r6, [r1], -r8
   15ee8:	strdeq	r6, [r1], -r8
   15eec:	strdeq	r6, [r1], -r8
   15ef0:	strdeq	r6, [r1], -r8
   15ef4:	strdeq	r6, [r1], -r8
   15ef8:	strdeq	r6, [r1], -r8
   15efc:	strdeq	r6, [r1], -r8
   15f00:	strdeq	r6, [r1], -r8
   15f04:	strdeq	r6, [r1], -r8
   15f08:	strdeq	r6, [r1], -r8
   15f0c:	strdeq	r6, [r1], -r8
   15f10:	strdeq	r6, [r1], -r8
   15f14:	andeq	r6, r1, r0, ror #9
   15f18:	andeq	r6, r1, r0, lsl #8
   15f1c:	strdeq	r6, [r1], -r8
   15f20:	andeq	r6, r1, r0, ror #9
   15f24:	strdeq	r6, [r1], -r8
   15f28:	andeq	r6, r1, r0, ror #9
   15f2c:	strdeq	r6, [r1], -r8
   15f30:	strdeq	r6, [r1], -r8
   15f34:	strdeq	r6, [r1], -r8
   15f38:	strdeq	r6, [r1], -r8
   15f3c:	strdeq	r6, [r1], -r8
   15f40:	strdeq	r6, [r1], -r8
   15f44:	strdeq	r6, [r1], -r8
   15f48:	strdeq	r6, [r1], -r8
   15f4c:	strdeq	r6, [r1], -r8
   15f50:	strdeq	r6, [r1], -r8
   15f54:	strdeq	r6, [r1], -r8
   15f58:	strdeq	r6, [r1], -r8
   15f5c:	strdeq	r6, [r1], -r8
   15f60:	strdeq	r6, [r1], -r8
   15f64:	strdeq	r6, [r1], -r8
   15f68:	strdeq	r6, [r1], -r8
   15f6c:	strdeq	r6, [r1], -r8
   15f70:	strdeq	r6, [r1], -r8
   15f74:	strdeq	r6, [r1], -r8
   15f78:	strdeq	r6, [r1], -r8
   15f7c:	strdeq	r6, [r1], -r8
   15f80:	strdeq	r6, [r1], -r8
   15f84:	strdeq	r6, [r1], -r8
   15f88:	strdeq	r6, [r1], -r8
   15f8c:	strdeq	r6, [r1], -r8
   15f90:	strdeq	r6, [r1], -r8
   15f94:	muleq	r1, r0, r4
   15f98:	andeq	r6, r1, r0, ror #9
   15f9c:	muleq	r1, r0, r4
   15fa0:	andeq	r6, r1, r4, asr #9
   15fa4:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   15fa8:	tst	r0, #1
   15fac:	beq	16194 <__assert_fail@plt+0x50f4>
   15fb0:	b	15fb4 <__assert_fail@plt+0x4f14>
   15fb4:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   15fb8:	tst	r0, #1
   15fbc:	beq	15fc4 <__assert_fail@plt+0x4f24>
   15fc0:	b	17018 <__assert_fail@plt+0x5f78>
   15fc4:	movw	r0, #1
   15fc8:	strb	r0, [fp, #-66]	; 0xffffffbe
   15fcc:	ldr	r0, [fp, #8]
   15fd0:	cmp	r0, #2
   15fd4:	bne	16088 <__assert_fail@plt+0x4fe8>
   15fd8:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   15fdc:	tst	r0, #1
   15fe0:	bne	16088 <__assert_fail@plt+0x4fe8>
   15fe4:	b	15fe8 <__assert_fail@plt+0x4f48>
   15fe8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15fec:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15ff0:	cmp	r0, r1
   15ff4:	bcs	1600c <__assert_fail@plt+0x4f6c>
   15ff8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15ffc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   16000:	add	r0, r0, r1
   16004:	movw	r1, #39	; 0x27
   16008:	strb	r1, [r0]
   1600c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16010:	add	r0, r0, #1
   16014:	str	r0, [fp, #-44]	; 0xffffffd4
   16018:	b	1601c <__assert_fail@plt+0x4f7c>
   1601c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16020:	ldr	r1, [fp, #-28]	; 0xffffffe4
   16024:	cmp	r0, r1
   16028:	bcs	16040 <__assert_fail@plt+0x4fa0>
   1602c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16030:	ldr	r1, [fp, #-44]	; 0xffffffd4
   16034:	add	r0, r0, r1
   16038:	movw	r1, #36	; 0x24
   1603c:	strb	r1, [r0]
   16040:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16044:	add	r0, r0, #1
   16048:	str	r0, [fp, #-44]	; 0xffffffd4
   1604c:	b	16050 <__assert_fail@plt+0x4fb0>
   16050:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16054:	ldr	r1, [fp, #-28]	; 0xffffffe4
   16058:	cmp	r0, r1
   1605c:	bcs	16074 <__assert_fail@plt+0x4fd4>
   16060:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16064:	ldr	r1, [fp, #-44]	; 0xffffffd4
   16068:	add	r0, r0, r1
   1606c:	movw	r1, #39	; 0x27
   16070:	strb	r1, [r0]
   16074:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16078:	add	r0, r0, #1
   1607c:	str	r0, [fp, #-44]	; 0xffffffd4
   16080:	movw	r0, #1
   16084:	strb	r0, [fp, #-60]	; 0xffffffc4
   16088:	b	1608c <__assert_fail@plt+0x4fec>
   1608c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16090:	ldr	r1, [fp, #-28]	; 0xffffffe4
   16094:	cmp	r0, r1
   16098:	bcs	160b0 <__assert_fail@plt+0x5010>
   1609c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   160a0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   160a4:	add	r0, r0, r1
   160a8:	movw	r1, #92	; 0x5c
   160ac:	strb	r1, [r0]
   160b0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   160b4:	add	r0, r0, #1
   160b8:	str	r0, [fp, #-44]	; 0xffffffd4
   160bc:	b	160c0 <__assert_fail@plt+0x5020>
   160c0:	ldr	r0, [fp, #8]
   160c4:	cmp	r0, #2
   160c8:	beq	16188 <__assert_fail@plt+0x50e8>
   160cc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   160d0:	add	r0, r0, #1
   160d4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   160d8:	cmp	r0, r1
   160dc:	bcs	16188 <__assert_fail@plt+0x50e8>
   160e0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   160e4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   160e8:	add	r1, r1, #1
   160ec:	add	r0, r0, r1
   160f0:	ldrb	r0, [r0]
   160f4:	movw	r1, #48	; 0x30
   160f8:	cmp	r1, r0
   160fc:	bgt	16188 <__assert_fail@plt+0x50e8>
   16100:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16104:	ldr	r1, [fp, #-40]	; 0xffffffd8
   16108:	add	r1, r1, #1
   1610c:	add	r0, r0, r1
   16110:	ldrb	r0, [r0]
   16114:	cmp	r0, #57	; 0x39
   16118:	bgt	16188 <__assert_fail@plt+0x50e8>
   1611c:	b	16120 <__assert_fail@plt+0x5080>
   16120:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16124:	ldr	r1, [fp, #-28]	; 0xffffffe4
   16128:	cmp	r0, r1
   1612c:	bcs	16144 <__assert_fail@plt+0x50a4>
   16130:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16134:	ldr	r1, [fp, #-44]	; 0xffffffd4
   16138:	add	r0, r0, r1
   1613c:	movw	r1, #48	; 0x30
   16140:	strb	r1, [r0]
   16144:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16148:	add	r0, r0, #1
   1614c:	str	r0, [fp, #-44]	; 0xffffffd4
   16150:	b	16154 <__assert_fail@plt+0x50b4>
   16154:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16158:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1615c:	cmp	r0, r1
   16160:	bcs	16178 <__assert_fail@plt+0x50d8>
   16164:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16168:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1616c:	add	r0, r0, r1
   16170:	movw	r1, #48	; 0x30
   16174:	strb	r1, [r0]
   16178:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1617c:	add	r0, r0, #1
   16180:	str	r0, [fp, #-44]	; 0xffffffd4
   16184:	b	16188 <__assert_fail@plt+0x50e8>
   16188:	movw	r0, #48	; 0x30
   1618c:	strb	r0, [fp, #-63]	; 0xffffffc1
   16190:	b	161ac <__assert_fail@plt+0x510c>
   16194:	ldr	r0, [fp, #12]
   16198:	and	r0, r0, #1
   1619c:	cmp	r0, #0
   161a0:	beq	161a8 <__assert_fail@plt+0x5108>
   161a4:	b	16e88 <__assert_fail@plt+0x5de8>
   161a8:	b	161ac <__assert_fail@plt+0x510c>
   161ac:	b	16c24 <__assert_fail@plt+0x5b84>
   161b0:	ldr	r0, [fp, #8]
   161b4:	cmp	r0, #2
   161b8:	str	r0, [sp, #32]
   161bc:	beq	161d4 <__assert_fail@plt+0x5134>
   161c0:	b	161c4 <__assert_fail@plt+0x5124>
   161c4:	ldr	r0, [sp, #32]
   161c8:	cmp	r0, #5
   161cc:	beq	161e8 <__assert_fail@plt+0x5148>
   161d0:	b	163a4 <__assert_fail@plt+0x5304>
   161d4:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   161d8:	tst	r0, #1
   161dc:	beq	161e4 <__assert_fail@plt+0x5144>
   161e0:	b	17018 <__assert_fail@plt+0x5f78>
   161e4:	b	163a8 <__assert_fail@plt+0x5308>
   161e8:	ldr	r0, [fp, #12]
   161ec:	and	r0, r0, #4
   161f0:	cmp	r0, #0
   161f4:	beq	163a0 <__assert_fail@plt+0x5300>
   161f8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   161fc:	add	r0, r0, #2
   16200:	ldr	r1, [fp, #-36]	; 0xffffffdc
   16204:	cmp	r0, r1
   16208:	bcs	163a0 <__assert_fail@plt+0x5300>
   1620c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16210:	ldr	r1, [fp, #-40]	; 0xffffffd8
   16214:	add	r1, r1, #1
   16218:	add	r0, r0, r1
   1621c:	ldrb	r0, [r0]
   16220:	cmp	r0, #63	; 0x3f
   16224:	bne	163a0 <__assert_fail@plt+0x5300>
   16228:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1622c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   16230:	add	r0, r1, r0
   16234:	ldrb	r0, [r0, #2]
   16238:	mov	r1, r0
   1623c:	cmp	r0, #33	; 0x21
   16240:	str	r1, [sp, #28]
   16244:	beq	16294 <__assert_fail@plt+0x51f4>
   16248:	b	1624c <__assert_fail@plt+0x51ac>
   1624c:	ldr	r0, [sp, #28]
   16250:	sub	r1, r0, #39	; 0x27
   16254:	cmp	r1, #3
   16258:	bcc	16294 <__assert_fail@plt+0x51f4>
   1625c:	b	16260 <__assert_fail@plt+0x51c0>
   16260:	ldr	r0, [sp, #28]
   16264:	cmp	r0, #45	; 0x2d
   16268:	beq	16294 <__assert_fail@plt+0x51f4>
   1626c:	b	16270 <__assert_fail@plt+0x51d0>
   16270:	ldr	r0, [sp, #28]
   16274:	cmp	r0, #47	; 0x2f
   16278:	beq	16294 <__assert_fail@plt+0x51f4>
   1627c:	b	16280 <__assert_fail@plt+0x51e0>
   16280:	ldr	r0, [sp, #28]
   16284:	sub	r1, r0, #60	; 0x3c
   16288:	cmp	r1, #2
   1628c:	bhi	16398 <__assert_fail@plt+0x52f8>
   16290:	b	16294 <__assert_fail@plt+0x51f4>
   16294:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   16298:	tst	r0, #1
   1629c:	beq	162a4 <__assert_fail@plt+0x5204>
   162a0:	b	17018 <__assert_fail@plt+0x5f78>
   162a4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   162a8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   162ac:	add	r1, r1, #2
   162b0:	add	r0, r0, r1
   162b4:	ldrb	r0, [r0]
   162b8:	strb	r0, [fp, #-63]	; 0xffffffc1
   162bc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   162c0:	add	r0, r0, #2
   162c4:	str	r0, [fp, #-40]	; 0xffffffd8
   162c8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   162cc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   162d0:	cmp	r0, r1
   162d4:	bcs	162ec <__assert_fail@plt+0x524c>
   162d8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   162dc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   162e0:	add	r0, r0, r1
   162e4:	movw	r1, #63	; 0x3f
   162e8:	strb	r1, [r0]
   162ec:	ldr	r0, [fp, #-44]	; 0xffffffd4
   162f0:	add	r0, r0, #1
   162f4:	str	r0, [fp, #-44]	; 0xffffffd4
   162f8:	b	162fc <__assert_fail@plt+0x525c>
   162fc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16300:	ldr	r1, [fp, #-28]	; 0xffffffe4
   16304:	cmp	r0, r1
   16308:	bcs	16320 <__assert_fail@plt+0x5280>
   1630c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16310:	ldr	r1, [fp, #-44]	; 0xffffffd4
   16314:	add	r0, r0, r1
   16318:	movw	r1, #34	; 0x22
   1631c:	strb	r1, [r0]
   16320:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16324:	add	r0, r0, #1
   16328:	str	r0, [fp, #-44]	; 0xffffffd4
   1632c:	b	16330 <__assert_fail@plt+0x5290>
   16330:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16334:	ldr	r1, [fp, #-28]	; 0xffffffe4
   16338:	cmp	r0, r1
   1633c:	bcs	16354 <__assert_fail@plt+0x52b4>
   16340:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16344:	ldr	r1, [fp, #-44]	; 0xffffffd4
   16348:	add	r0, r0, r1
   1634c:	movw	r1, #34	; 0x22
   16350:	strb	r1, [r0]
   16354:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16358:	add	r0, r0, #1
   1635c:	str	r0, [fp, #-44]	; 0xffffffd4
   16360:	b	16364 <__assert_fail@plt+0x52c4>
   16364:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16368:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1636c:	cmp	r0, r1
   16370:	bcs	16388 <__assert_fail@plt+0x52e8>
   16374:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16378:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1637c:	add	r0, r0, r1
   16380:	movw	r1, #63	; 0x3f
   16384:	strb	r1, [r0]
   16388:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1638c:	add	r0, r0, #1
   16390:	str	r0, [fp, #-44]	; 0xffffffd4
   16394:	b	1639c <__assert_fail@plt+0x52fc>
   16398:	b	1639c <__assert_fail@plt+0x52fc>
   1639c:	b	163a0 <__assert_fail@plt+0x5300>
   163a0:	b	163a8 <__assert_fail@plt+0x5308>
   163a4:	b	163a8 <__assert_fail@plt+0x5308>
   163a8:	b	16c24 <__assert_fail@plt+0x5b84>
   163ac:	movw	r0, #97	; 0x61
   163b0:	strb	r0, [fp, #-64]	; 0xffffffc0
   163b4:	b	16474 <__assert_fail@plt+0x53d4>
   163b8:	movw	r0, #98	; 0x62
   163bc:	strb	r0, [fp, #-64]	; 0xffffffc0
   163c0:	b	16474 <__assert_fail@plt+0x53d4>
   163c4:	movw	r0, #102	; 0x66
   163c8:	strb	r0, [fp, #-64]	; 0xffffffc0
   163cc:	b	16474 <__assert_fail@plt+0x53d4>
   163d0:	movw	r0, #110	; 0x6e
   163d4:	strb	r0, [fp, #-64]	; 0xffffffc0
   163d8:	b	16454 <__assert_fail@plt+0x53b4>
   163dc:	movw	r0, #114	; 0x72
   163e0:	strb	r0, [fp, #-64]	; 0xffffffc0
   163e4:	b	16454 <__assert_fail@plt+0x53b4>
   163e8:	movw	r0, #116	; 0x74
   163ec:	strb	r0, [fp, #-64]	; 0xffffffc0
   163f0:	b	16454 <__assert_fail@plt+0x53b4>
   163f4:	movw	r0, #118	; 0x76
   163f8:	strb	r0, [fp, #-64]	; 0xffffffc0
   163fc:	b	16474 <__assert_fail@plt+0x53d4>
   16400:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   16404:	strb	r0, [fp, #-64]	; 0xffffffc0
   16408:	ldr	r0, [fp, #8]
   1640c:	cmp	r0, #2
   16410:	bne	16428 <__assert_fail@plt+0x5388>
   16414:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   16418:	tst	r0, #1
   1641c:	beq	16424 <__assert_fail@plt+0x5384>
   16420:	b	17018 <__assert_fail@plt+0x5f78>
   16424:	b	16dac <__assert_fail@plt+0x5d0c>
   16428:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   1642c:	tst	r0, #1
   16430:	beq	16450 <__assert_fail@plt+0x53b0>
   16434:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   16438:	tst	r0, #1
   1643c:	beq	16450 <__assert_fail@plt+0x53b0>
   16440:	ldr	r0, [fp, #-56]	; 0xffffffc8
   16444:	cmp	r0, #0
   16448:	beq	16450 <__assert_fail@plt+0x53b0>
   1644c:	b	16dac <__assert_fail@plt+0x5d0c>
   16450:	b	16454 <__assert_fail@plt+0x53b4>
   16454:	ldr	r0, [fp, #8]
   16458:	cmp	r0, #2
   1645c:	bne	16470 <__assert_fail@plt+0x53d0>
   16460:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   16464:	tst	r0, #1
   16468:	beq	16470 <__assert_fail@plt+0x53d0>
   1646c:	b	17018 <__assert_fail@plt+0x5f78>
   16470:	b	16474 <__assert_fail@plt+0x53d4>
   16474:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   16478:	tst	r0, #1
   1647c:	beq	1648c <__assert_fail@plt+0x53ec>
   16480:	ldrb	r0, [fp, #-64]	; 0xffffffc0
   16484:	strb	r0, [fp, #-63]	; 0xffffffc1
   16488:	b	16c98 <__assert_fail@plt+0x5bf8>
   1648c:	b	16c24 <__assert_fail@plt+0x5b84>
   16490:	ldr	r0, [fp, #-36]	; 0xffffffdc
   16494:	cmn	r0, #1
   16498:	bne	164b0 <__assert_fail@plt+0x5410>
   1649c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   164a0:	ldrb	r0, [r0, #1]
   164a4:	cmp	r0, #0
   164a8:	beq	164c0 <__assert_fail@plt+0x5420>
   164ac:	b	164bc <__assert_fail@plt+0x541c>
   164b0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   164b4:	cmp	r0, #1
   164b8:	beq	164c0 <__assert_fail@plt+0x5420>
   164bc:	b	16c24 <__assert_fail@plt+0x5b84>
   164c0:	b	164c4 <__assert_fail@plt+0x5424>
   164c4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   164c8:	cmp	r0, #0
   164cc:	beq	164d4 <__assert_fail@plt+0x5434>
   164d0:	b	16c24 <__assert_fail@plt+0x5b84>
   164d4:	b	164d8 <__assert_fail@plt+0x5438>
   164d8:	movw	r0, #1
   164dc:	strb	r0, [fp, #-67]	; 0xffffffbd
   164e0:	ldr	r0, [fp, #8]
   164e4:	cmp	r0, #2
   164e8:	bne	164fc <__assert_fail@plt+0x545c>
   164ec:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   164f0:	tst	r0, #1
   164f4:	beq	164fc <__assert_fail@plt+0x545c>
   164f8:	b	17018 <__assert_fail@plt+0x5f78>
   164fc:	b	16c24 <__assert_fail@plt+0x5b84>
   16500:	movw	r0, #1
   16504:	strb	r0, [fp, #-61]	; 0xffffffc3
   16508:	strb	r0, [fp, #-67]	; 0xffffffbd
   1650c:	ldr	r0, [fp, #8]
   16510:	cmp	r0, #2
   16514:	bne	165f4 <__assert_fail@plt+0x5554>
   16518:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1651c:	tst	r0, #1
   16520:	beq	16528 <__assert_fail@plt+0x5488>
   16524:	b	17018 <__assert_fail@plt+0x5f78>
   16528:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1652c:	cmp	r0, #0
   16530:	beq	16550 <__assert_fail@plt+0x54b0>
   16534:	ldr	r0, [fp, #-48]	; 0xffffffd0
   16538:	cmp	r0, #0
   1653c:	bne	16550 <__assert_fail@plt+0x54b0>
   16540:	ldr	r0, [fp, #-28]	; 0xffffffe4
   16544:	str	r0, [fp, #-48]	; 0xffffffd0
   16548:	movw	r0, #0
   1654c:	str	r0, [fp, #-28]	; 0xffffffe4
   16550:	b	16554 <__assert_fail@plt+0x54b4>
   16554:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16558:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1655c:	cmp	r0, r1
   16560:	bcs	16578 <__assert_fail@plt+0x54d8>
   16564:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16568:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1656c:	add	r0, r0, r1
   16570:	movw	r1, #39	; 0x27
   16574:	strb	r1, [r0]
   16578:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1657c:	add	r0, r0, #1
   16580:	str	r0, [fp, #-44]	; 0xffffffd4
   16584:	b	16588 <__assert_fail@plt+0x54e8>
   16588:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1658c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   16590:	cmp	r0, r1
   16594:	bcs	165ac <__assert_fail@plt+0x550c>
   16598:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1659c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   165a0:	add	r0, r0, r1
   165a4:	movw	r1, #92	; 0x5c
   165a8:	strb	r1, [r0]
   165ac:	ldr	r0, [fp, #-44]	; 0xffffffd4
   165b0:	add	r0, r0, #1
   165b4:	str	r0, [fp, #-44]	; 0xffffffd4
   165b8:	b	165bc <__assert_fail@plt+0x551c>
   165bc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   165c0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   165c4:	cmp	r0, r1
   165c8:	bcs	165e0 <__assert_fail@plt+0x5540>
   165cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   165d0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   165d4:	add	r0, r0, r1
   165d8:	movw	r1, #39	; 0x27
   165dc:	strb	r1, [r0]
   165e0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   165e4:	add	r0, r0, #1
   165e8:	str	r0, [fp, #-44]	; 0xffffffd4
   165ec:	movw	r0, #0
   165f0:	strb	r0, [fp, #-60]	; 0xffffffc4
   165f4:	b	16c24 <__assert_fail@plt+0x5b84>
   165f8:	movw	r0, #1
   165fc:	strb	r0, [fp, #-67]	; 0xffffffbd
   16600:	b	16c24 <__assert_fail@plt+0x5b84>
   16604:	ldrb	r0, [fp, #-58]	; 0xffffffc6
   16608:	tst	r0, #1
   1660c:	beq	1664c <__assert_fail@plt+0x55ac>
   16610:	mov	r0, #1
   16614:	str	r0, [fp, #-72]	; 0xffffffb8
   16618:	bl	10f8c <__ctype_b_loc@plt>
   1661c:	ldr	r0, [r0]
   16620:	ldrb	r1, [fp, #-63]	; 0xffffffc1
   16624:	mov	r2, r1
   16628:	add	r0, r0, r1, lsl #1
   1662c:	ldrh	r0, [r0]
   16630:	and	r0, r0, #16384	; 0x4000
   16634:	cmp	r0, #0
   16638:	movw	r0, #0
   1663c:	movne	r0, #1
   16640:	and	r0, r0, #1
   16644:	strb	r0, [fp, #-73]	; 0xffffffb7
   16648:	b	168d8 <__assert_fail@plt+0x5838>
   1664c:	sub	r0, fp, #84	; 0x54
   16650:	movw	r1, #0
   16654:	and	r1, r1, #255	; 0xff
   16658:	movw	r2, #8
   1665c:	bl	10fec <memset@plt>
   16660:	movw	r0, #0
   16664:	str	r0, [fp, #-72]	; 0xffffffb8
   16668:	movw	r0, #1
   1666c:	strb	r0, [fp, #-73]	; 0xffffffb7
   16670:	ldr	r0, [fp, #-36]	; 0xffffffdc
   16674:	cmn	r0, #1
   16678:	bne	16688 <__assert_fail@plt+0x55e8>
   1667c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16680:	bl	10fb0 <strlen@plt>
   16684:	str	r0, [fp, #-36]	; 0xffffffdc
   16688:	b	1668c <__assert_fail@plt+0x55ec>
   1668c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16690:	ldr	r1, [fp, #-40]	; 0xffffffd8
   16694:	ldr	r2, [fp, #-72]	; 0xffffffb8
   16698:	add	r1, r1, r2
   1669c:	add	r1, r0, r1
   166a0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   166a4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   166a8:	ldr	r3, [fp, #-72]	; 0xffffffb8
   166ac:	add	r2, r2, r3
   166b0:	sub	r2, r0, r2
   166b4:	add	r0, sp, #88	; 0x58
   166b8:	sub	r3, fp, #84	; 0x54
   166bc:	bl	1db4c <__assert_fail@plt+0xcaac>
   166c0:	str	r0, [sp, #84]	; 0x54
   166c4:	ldr	r0, [sp, #84]	; 0x54
   166c8:	cmp	r0, #0
   166cc:	bne	166d4 <__assert_fail@plt+0x5634>
   166d0:	b	168d4 <__assert_fail@plt+0x5834>
   166d4:	ldr	r0, [sp, #84]	; 0x54
   166d8:	cmn	r0, #1
   166dc:	bne	166ec <__assert_fail@plt+0x564c>
   166e0:	movw	r0, #0
   166e4:	strb	r0, [fp, #-73]	; 0xffffffb7
   166e8:	b	168d4 <__assert_fail@plt+0x5834>
   166ec:	ldr	r0, [sp, #84]	; 0x54
   166f0:	cmn	r0, #2
   166f4:	bne	16768 <__assert_fail@plt+0x56c8>
   166f8:	movw	r0, #0
   166fc:	strb	r0, [fp, #-73]	; 0xffffffb7
   16700:	ldr	r0, [fp, #-40]	; 0xffffffd8
   16704:	ldr	r1, [fp, #-72]	; 0xffffffb8
   16708:	add	r0, r0, r1
   1670c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   16710:	cmp	r0, r1
   16714:	movw	r0, #0
   16718:	str	r0, [sp, #24]
   1671c:	bcs	16748 <__assert_fail@plt+0x56a8>
   16720:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16724:	ldr	r1, [fp, #-40]	; 0xffffffd8
   16728:	ldr	r2, [fp, #-72]	; 0xffffffb8
   1672c:	add	r1, r1, r2
   16730:	add	r0, r0, r1
   16734:	ldrb	r0, [r0]
   16738:	cmp	r0, #0
   1673c:	movw	r0, #0
   16740:	movne	r0, #1
   16744:	str	r0, [sp, #24]
   16748:	ldr	r0, [sp, #24]
   1674c:	tst	r0, #1
   16750:	beq	16764 <__assert_fail@plt+0x56c4>
   16754:	ldr	r0, [fp, #-72]	; 0xffffffb8
   16758:	add	r0, r0, #1
   1675c:	str	r0, [fp, #-72]	; 0xffffffb8
   16760:	b	16700 <__assert_fail@plt+0x5660>
   16764:	b	168d4 <__assert_fail@plt+0x5834>
   16768:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1676c:	tst	r0, #1
   16770:	beq	1687c <__assert_fail@plt+0x57dc>
   16774:	ldr	r0, [fp, #8]
   16778:	cmp	r0, #2
   1677c:	bne	1687c <__assert_fail@plt+0x57dc>
   16780:	movw	r0, #1
   16784:	str	r0, [sp, #80]	; 0x50
   16788:	ldr	r0, [sp, #80]	; 0x50
   1678c:	ldr	r1, [sp, #84]	; 0x54
   16790:	cmp	r0, r1
   16794:	bcs	16878 <__assert_fail@plt+0x57d8>
   16798:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1679c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   167a0:	ldr	r2, [fp, #-72]	; 0xffffffb8
   167a4:	add	r1, r1, r2
   167a8:	ldr	r2, [sp, #80]	; 0x50
   167ac:	add	r1, r1, r2
   167b0:	ldrb	r0, [r0, r1]
   167b4:	sub	r0, r0, #91	; 0x5b
   167b8:	cmp	r0, #33	; 0x21
   167bc:	str	r0, [sp, #20]
   167c0:	bhi	16860 <__assert_fail@plt+0x57c0>
   167c4:	add	r0, pc, #8
   167c8:	ldr	r1, [sp, #20]
   167cc:	ldr	r0, [r0, r1, lsl #2]
   167d0:	mov	pc, r0
   167d4:	andeq	r6, r1, ip, asr r8
   167d8:	andeq	r6, r1, ip, asr r8
   167dc:	andeq	r6, r1, r0, ror #16
   167e0:	andeq	r6, r1, ip, asr r8
   167e4:	andeq	r6, r1, r0, ror #16
   167e8:	andeq	r6, r1, ip, asr r8
   167ec:	andeq	r6, r1, r0, ror #16
   167f0:	andeq	r6, r1, r0, ror #16
   167f4:	andeq	r6, r1, r0, ror #16
   167f8:	andeq	r6, r1, r0, ror #16
   167fc:	andeq	r6, r1, r0, ror #16
   16800:	andeq	r6, r1, r0, ror #16
   16804:	andeq	r6, r1, r0, ror #16
   16808:	andeq	r6, r1, r0, ror #16
   1680c:	andeq	r6, r1, r0, ror #16
   16810:	andeq	r6, r1, r0, ror #16
   16814:	andeq	r6, r1, r0, ror #16
   16818:	andeq	r6, r1, r0, ror #16
   1681c:	andeq	r6, r1, r0, ror #16
   16820:	andeq	r6, r1, r0, ror #16
   16824:	andeq	r6, r1, r0, ror #16
   16828:	andeq	r6, r1, r0, ror #16
   1682c:	andeq	r6, r1, r0, ror #16
   16830:	andeq	r6, r1, r0, ror #16
   16834:	andeq	r6, r1, r0, ror #16
   16838:	andeq	r6, r1, r0, ror #16
   1683c:	andeq	r6, r1, r0, ror #16
   16840:	andeq	r6, r1, r0, ror #16
   16844:	andeq	r6, r1, r0, ror #16
   16848:	andeq	r6, r1, r0, ror #16
   1684c:	andeq	r6, r1, r0, ror #16
   16850:	andeq	r6, r1, r0, ror #16
   16854:	andeq	r6, r1, r0, ror #16
   16858:	andeq	r6, r1, ip, asr r8
   1685c:	b	17018 <__assert_fail@plt+0x5f78>
   16860:	b	16864 <__assert_fail@plt+0x57c4>
   16864:	b	16868 <__assert_fail@plt+0x57c8>
   16868:	ldr	r0, [sp, #80]	; 0x50
   1686c:	add	r0, r0, #1
   16870:	str	r0, [sp, #80]	; 0x50
   16874:	b	16788 <__assert_fail@plt+0x56e8>
   16878:	b	1687c <__assert_fail@plt+0x57dc>
   1687c:	ldr	r0, [sp, #88]	; 0x58
   16880:	bl	10efc <iswprint@plt>
   16884:	cmp	r0, #0
   16888:	bne	16894 <__assert_fail@plt+0x57f4>
   1688c:	movw	r0, #0
   16890:	strb	r0, [fp, #-73]	; 0xffffffb7
   16894:	ldr	r0, [sp, #84]	; 0x54
   16898:	ldr	r1, [fp, #-72]	; 0xffffffb8
   1689c:	add	r0, r1, r0
   168a0:	str	r0, [fp, #-72]	; 0xffffffb8
   168a4:	b	168a8 <__assert_fail@plt+0x5808>
   168a8:	b	168ac <__assert_fail@plt+0x580c>
   168ac:	b	168b0 <__assert_fail@plt+0x5810>
   168b0:	sub	r0, fp, #84	; 0x54
   168b4:	bl	10eb4 <mbsinit@plt>
   168b8:	cmp	r0, #0
   168bc:	movw	r0, #0
   168c0:	movne	r0, #1
   168c4:	mvn	r1, #0
   168c8:	eor	r0, r0, r1
   168cc:	tst	r0, #1
   168d0:	bne	1668c <__assert_fail@plt+0x55ec>
   168d4:	b	168d8 <__assert_fail@plt+0x5838>
   168d8:	ldrb	r0, [fp, #-73]	; 0xffffffb7
   168dc:	and	r0, r0, #1
   168e0:	strb	r0, [fp, #-67]	; 0xffffffbd
   168e4:	ldr	r0, [fp, #-72]	; 0xffffffb8
   168e8:	movw	r1, #1
   168ec:	cmp	r1, r0
   168f0:	bcc	1690c <__assert_fail@plt+0x586c>
   168f4:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   168f8:	tst	r0, #1
   168fc:	beq	16c20 <__assert_fail@plt+0x5b80>
   16900:	ldrb	r0, [fp, #-73]	; 0xffffffb7
   16904:	tst	r0, #1
   16908:	bne	16c20 <__assert_fail@plt+0x5b80>
   1690c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   16910:	ldr	r1, [fp, #-72]	; 0xffffffb8
   16914:	add	r0, r0, r1
   16918:	str	r0, [sp, #76]	; 0x4c
   1691c:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   16920:	tst	r0, #1
   16924:	beq	16ad4 <__assert_fail@plt+0x5a34>
   16928:	ldrb	r0, [fp, #-73]	; 0xffffffb7
   1692c:	tst	r0, #1
   16930:	bne	16ad4 <__assert_fail@plt+0x5a34>
   16934:	b	16938 <__assert_fail@plt+0x5898>
   16938:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1693c:	tst	r0, #1
   16940:	beq	16948 <__assert_fail@plt+0x58a8>
   16944:	b	17018 <__assert_fail@plt+0x5f78>
   16948:	movw	r0, #1
   1694c:	strb	r0, [fp, #-66]	; 0xffffffbe
   16950:	ldr	r0, [fp, #8]
   16954:	cmp	r0, #2
   16958:	bne	16a0c <__assert_fail@plt+0x596c>
   1695c:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   16960:	tst	r0, #1
   16964:	bne	16a0c <__assert_fail@plt+0x596c>
   16968:	b	1696c <__assert_fail@plt+0x58cc>
   1696c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16970:	ldr	r1, [fp, #-28]	; 0xffffffe4
   16974:	cmp	r0, r1
   16978:	bcs	16990 <__assert_fail@plt+0x58f0>
   1697c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16980:	ldr	r1, [fp, #-44]	; 0xffffffd4
   16984:	add	r0, r0, r1
   16988:	movw	r1, #39	; 0x27
   1698c:	strb	r1, [r0]
   16990:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16994:	add	r0, r0, #1
   16998:	str	r0, [fp, #-44]	; 0xffffffd4
   1699c:	b	169a0 <__assert_fail@plt+0x5900>
   169a0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   169a4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   169a8:	cmp	r0, r1
   169ac:	bcs	169c4 <__assert_fail@plt+0x5924>
   169b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   169b4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   169b8:	add	r0, r0, r1
   169bc:	movw	r1, #36	; 0x24
   169c0:	strb	r1, [r0]
   169c4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   169c8:	add	r0, r0, #1
   169cc:	str	r0, [fp, #-44]	; 0xffffffd4
   169d0:	b	169d4 <__assert_fail@plt+0x5934>
   169d4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   169d8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   169dc:	cmp	r0, r1
   169e0:	bcs	169f8 <__assert_fail@plt+0x5958>
   169e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   169e8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   169ec:	add	r0, r0, r1
   169f0:	movw	r1, #39	; 0x27
   169f4:	strb	r1, [r0]
   169f8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   169fc:	add	r0, r0, #1
   16a00:	str	r0, [fp, #-44]	; 0xffffffd4
   16a04:	movw	r0, #1
   16a08:	strb	r0, [fp, #-60]	; 0xffffffc4
   16a0c:	b	16a10 <__assert_fail@plt+0x5970>
   16a10:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16a14:	ldr	r1, [fp, #-28]	; 0xffffffe4
   16a18:	cmp	r0, r1
   16a1c:	bcs	16a34 <__assert_fail@plt+0x5994>
   16a20:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16a24:	ldr	r1, [fp, #-44]	; 0xffffffd4
   16a28:	add	r0, r0, r1
   16a2c:	movw	r1, #92	; 0x5c
   16a30:	strb	r1, [r0]
   16a34:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16a38:	add	r0, r0, #1
   16a3c:	str	r0, [fp, #-44]	; 0xffffffd4
   16a40:	b	16a44 <__assert_fail@plt+0x59a4>
   16a44:	b	16a48 <__assert_fail@plt+0x59a8>
   16a48:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16a4c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   16a50:	cmp	r0, r1
   16a54:	bcs	16a74 <__assert_fail@plt+0x59d4>
   16a58:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   16a5c:	asr	r0, r0, #6
   16a60:	add	r0, r0, #48	; 0x30
   16a64:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16a68:	ldr	r2, [fp, #-44]	; 0xffffffd4
   16a6c:	add	r1, r1, r2
   16a70:	strb	r0, [r1]
   16a74:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16a78:	add	r0, r0, #1
   16a7c:	str	r0, [fp, #-44]	; 0xffffffd4
   16a80:	b	16a84 <__assert_fail@plt+0x59e4>
   16a84:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16a88:	ldr	r1, [fp, #-28]	; 0xffffffe4
   16a8c:	cmp	r0, r1
   16a90:	bcs	16ab4 <__assert_fail@plt+0x5a14>
   16a94:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   16a98:	asr	r0, r0, #3
   16a9c:	and	r0, r0, #7
   16aa0:	add	r0, r0, #48	; 0x30
   16aa4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16aa8:	ldr	r2, [fp, #-44]	; 0xffffffd4
   16aac:	add	r1, r1, r2
   16ab0:	strb	r0, [r1]
   16ab4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16ab8:	add	r0, r0, #1
   16abc:	str	r0, [fp, #-44]	; 0xffffffd4
   16ac0:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   16ac4:	and	r0, r0, #7
   16ac8:	add	r0, r0, #48	; 0x30
   16acc:	strb	r0, [fp, #-63]	; 0xffffffc1
   16ad0:	b	16b20 <__assert_fail@plt+0x5a80>
   16ad4:	ldrb	r0, [fp, #-65]	; 0xffffffbf
   16ad8:	tst	r0, #1
   16adc:	beq	16b1c <__assert_fail@plt+0x5a7c>
   16ae0:	b	16ae4 <__assert_fail@plt+0x5a44>
   16ae4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16ae8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   16aec:	cmp	r0, r1
   16af0:	bcs	16b08 <__assert_fail@plt+0x5a68>
   16af4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16af8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   16afc:	add	r0, r0, r1
   16b00:	movw	r1, #92	; 0x5c
   16b04:	strb	r1, [r0]
   16b08:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16b0c:	add	r0, r0, #1
   16b10:	str	r0, [fp, #-44]	; 0xffffffd4
   16b14:	movw	r0, #0
   16b18:	strb	r0, [fp, #-65]	; 0xffffffbf
   16b1c:	b	16b20 <__assert_fail@plt+0x5a80>
   16b20:	ldr	r0, [sp, #76]	; 0x4c
   16b24:	ldr	r1, [fp, #-40]	; 0xffffffd8
   16b28:	add	r1, r1, #1
   16b2c:	cmp	r0, r1
   16b30:	bhi	16b38 <__assert_fail@plt+0x5a98>
   16b34:	b	16c1c <__assert_fail@plt+0x5b7c>
   16b38:	b	16b3c <__assert_fail@plt+0x5a9c>
   16b3c:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   16b40:	tst	r0, #1
   16b44:	beq	16bc4 <__assert_fail@plt+0x5b24>
   16b48:	ldrb	r0, [fp, #-66]	; 0xffffffbe
   16b4c:	tst	r0, #1
   16b50:	bne	16bc4 <__assert_fail@plt+0x5b24>
   16b54:	b	16b58 <__assert_fail@plt+0x5ab8>
   16b58:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16b5c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   16b60:	cmp	r0, r1
   16b64:	bcs	16b7c <__assert_fail@plt+0x5adc>
   16b68:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16b6c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   16b70:	add	r0, r0, r1
   16b74:	movw	r1, #39	; 0x27
   16b78:	strb	r1, [r0]
   16b7c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16b80:	add	r0, r0, #1
   16b84:	str	r0, [fp, #-44]	; 0xffffffd4
   16b88:	b	16b8c <__assert_fail@plt+0x5aec>
   16b8c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16b90:	ldr	r1, [fp, #-28]	; 0xffffffe4
   16b94:	cmp	r0, r1
   16b98:	bcs	16bb0 <__assert_fail@plt+0x5b10>
   16b9c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16ba0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   16ba4:	add	r0, r0, r1
   16ba8:	movw	r1, #39	; 0x27
   16bac:	strb	r1, [r0]
   16bb0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16bb4:	add	r0, r0, #1
   16bb8:	str	r0, [fp, #-44]	; 0xffffffd4
   16bbc:	movw	r0, #0
   16bc0:	strb	r0, [fp, #-60]	; 0xffffffc4
   16bc4:	b	16bc8 <__assert_fail@plt+0x5b28>
   16bc8:	b	16bcc <__assert_fail@plt+0x5b2c>
   16bcc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16bd0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   16bd4:	cmp	r0, r1
   16bd8:	bcs	16bf0 <__assert_fail@plt+0x5b50>
   16bdc:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   16be0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16be4:	ldr	r2, [fp, #-44]	; 0xffffffd4
   16be8:	add	r1, r1, r2
   16bec:	strb	r0, [r1]
   16bf0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16bf4:	add	r0, r0, #1
   16bf8:	str	r0, [fp, #-44]	; 0xffffffd4
   16bfc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16c00:	ldr	r1, [fp, #-40]	; 0xffffffd8
   16c04:	add	r1, r1, #1
   16c08:	str	r1, [fp, #-40]	; 0xffffffd8
   16c0c:	add	r0, r0, r1
   16c10:	ldrb	r0, [r0]
   16c14:	strb	r0, [fp, #-63]	; 0xffffffc1
   16c18:	b	1691c <__assert_fail@plt+0x587c>
   16c1c:	b	16dac <__assert_fail@plt+0x5d0c>
   16c20:	b	16c24 <__assert_fail@plt+0x5b84>
   16c24:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   16c28:	tst	r0, #1
   16c2c:	beq	16c3c <__assert_fail@plt+0x5b9c>
   16c30:	ldr	r0, [fp, #8]
   16c34:	cmp	r0, #2
   16c38:	bne	16c48 <__assert_fail@plt+0x5ba8>
   16c3c:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   16c40:	tst	r0, #1
   16c44:	beq	16c84 <__assert_fail@plt+0x5be4>
   16c48:	ldr	r0, [fp, #16]
   16c4c:	movw	r1, #0
   16c50:	cmp	r0, r1
   16c54:	beq	16c84 <__assert_fail@plt+0x5be4>
   16c58:	ldr	r0, [fp, #16]
   16c5c:	ldrb	r1, [fp, #-63]	; 0xffffffc1
   16c60:	lsr	r1, r1, #5
   16c64:	add	r0, r0, r1, lsl #2
   16c68:	ldr	r0, [r0]
   16c6c:	ldrb	r1, [fp, #-63]	; 0xffffffc1
   16c70:	and	r1, r1, #31
   16c74:	lsr	r0, r0, r1
   16c78:	and	r0, r0, #1
   16c7c:	cmp	r0, #0
   16c80:	bne	16c94 <__assert_fail@plt+0x5bf4>
   16c84:	ldrb	r0, [fp, #-65]	; 0xffffffbf
   16c88:	tst	r0, #1
   16c8c:	bne	16c94 <__assert_fail@plt+0x5bf4>
   16c90:	b	16dac <__assert_fail@plt+0x5d0c>
   16c94:	b	16c98 <__assert_fail@plt+0x5bf8>
   16c98:	b	16c9c <__assert_fail@plt+0x5bfc>
   16c9c:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   16ca0:	tst	r0, #1
   16ca4:	beq	16cac <__assert_fail@plt+0x5c0c>
   16ca8:	b	17018 <__assert_fail@plt+0x5f78>
   16cac:	movw	r0, #1
   16cb0:	strb	r0, [fp, #-66]	; 0xffffffbe
   16cb4:	ldr	r0, [fp, #8]
   16cb8:	cmp	r0, #2
   16cbc:	bne	16d70 <__assert_fail@plt+0x5cd0>
   16cc0:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   16cc4:	tst	r0, #1
   16cc8:	bne	16d70 <__assert_fail@plt+0x5cd0>
   16ccc:	b	16cd0 <__assert_fail@plt+0x5c30>
   16cd0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16cd4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   16cd8:	cmp	r0, r1
   16cdc:	bcs	16cf4 <__assert_fail@plt+0x5c54>
   16ce0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16ce4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   16ce8:	add	r0, r0, r1
   16cec:	movw	r1, #39	; 0x27
   16cf0:	strb	r1, [r0]
   16cf4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16cf8:	add	r0, r0, #1
   16cfc:	str	r0, [fp, #-44]	; 0xffffffd4
   16d00:	b	16d04 <__assert_fail@plt+0x5c64>
   16d04:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16d08:	ldr	r1, [fp, #-28]	; 0xffffffe4
   16d0c:	cmp	r0, r1
   16d10:	bcs	16d28 <__assert_fail@plt+0x5c88>
   16d14:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16d18:	ldr	r1, [fp, #-44]	; 0xffffffd4
   16d1c:	add	r0, r0, r1
   16d20:	movw	r1, #36	; 0x24
   16d24:	strb	r1, [r0]
   16d28:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16d2c:	add	r0, r0, #1
   16d30:	str	r0, [fp, #-44]	; 0xffffffd4
   16d34:	b	16d38 <__assert_fail@plt+0x5c98>
   16d38:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16d3c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   16d40:	cmp	r0, r1
   16d44:	bcs	16d5c <__assert_fail@plt+0x5cbc>
   16d48:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16d4c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   16d50:	add	r0, r0, r1
   16d54:	movw	r1, #39	; 0x27
   16d58:	strb	r1, [r0]
   16d5c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16d60:	add	r0, r0, #1
   16d64:	str	r0, [fp, #-44]	; 0xffffffd4
   16d68:	movw	r0, #1
   16d6c:	strb	r0, [fp, #-60]	; 0xffffffc4
   16d70:	b	16d74 <__assert_fail@plt+0x5cd4>
   16d74:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16d78:	ldr	r1, [fp, #-28]	; 0xffffffe4
   16d7c:	cmp	r0, r1
   16d80:	bcs	16d98 <__assert_fail@plt+0x5cf8>
   16d84:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16d88:	ldr	r1, [fp, #-44]	; 0xffffffd4
   16d8c:	add	r0, r0, r1
   16d90:	movw	r1, #92	; 0x5c
   16d94:	strb	r1, [r0]
   16d98:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16d9c:	add	r0, r0, #1
   16da0:	str	r0, [fp, #-44]	; 0xffffffd4
   16da4:	b	16da8 <__assert_fail@plt+0x5d08>
   16da8:	b	16dac <__assert_fail@plt+0x5d0c>
   16dac:	b	16db0 <__assert_fail@plt+0x5d10>
   16db0:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   16db4:	tst	r0, #1
   16db8:	beq	16e38 <__assert_fail@plt+0x5d98>
   16dbc:	ldrb	r0, [fp, #-66]	; 0xffffffbe
   16dc0:	tst	r0, #1
   16dc4:	bne	16e38 <__assert_fail@plt+0x5d98>
   16dc8:	b	16dcc <__assert_fail@plt+0x5d2c>
   16dcc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16dd0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   16dd4:	cmp	r0, r1
   16dd8:	bcs	16df0 <__assert_fail@plt+0x5d50>
   16ddc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16de0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   16de4:	add	r0, r0, r1
   16de8:	movw	r1, #39	; 0x27
   16dec:	strb	r1, [r0]
   16df0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16df4:	add	r0, r0, #1
   16df8:	str	r0, [fp, #-44]	; 0xffffffd4
   16dfc:	b	16e00 <__assert_fail@plt+0x5d60>
   16e00:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16e04:	ldr	r1, [fp, #-28]	; 0xffffffe4
   16e08:	cmp	r0, r1
   16e0c:	bcs	16e24 <__assert_fail@plt+0x5d84>
   16e10:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16e14:	ldr	r1, [fp, #-44]	; 0xffffffd4
   16e18:	add	r0, r0, r1
   16e1c:	movw	r1, #39	; 0x27
   16e20:	strb	r1, [r0]
   16e24:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16e28:	add	r0, r0, #1
   16e2c:	str	r0, [fp, #-44]	; 0xffffffd4
   16e30:	movw	r0, #0
   16e34:	strb	r0, [fp, #-60]	; 0xffffffc4
   16e38:	b	16e3c <__assert_fail@plt+0x5d9c>
   16e3c:	b	16e40 <__assert_fail@plt+0x5da0>
   16e40:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16e44:	ldr	r1, [fp, #-28]	; 0xffffffe4
   16e48:	cmp	r0, r1
   16e4c:	bcs	16e64 <__assert_fail@plt+0x5dc4>
   16e50:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   16e54:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16e58:	ldr	r2, [fp, #-44]	; 0xffffffd4
   16e5c:	add	r1, r1, r2
   16e60:	strb	r0, [r1]
   16e64:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16e68:	add	r0, r0, #1
   16e6c:	str	r0, [fp, #-44]	; 0xffffffd4
   16e70:	ldrb	r0, [fp, #-67]	; 0xffffffbd
   16e74:	tst	r0, #1
   16e78:	bne	16e84 <__assert_fail@plt+0x5de4>
   16e7c:	movw	r0, #0
   16e80:	strb	r0, [fp, #-62]	; 0xffffffc2
   16e84:	b	16e88 <__assert_fail@plt+0x5de8>
   16e88:	ldr	r0, [fp, #-40]	; 0xffffffd8
   16e8c:	add	r0, r0, #1
   16e90:	str	r0, [fp, #-40]	; 0xffffffd8
   16e94:	b	15c40 <__assert_fail@plt+0x4ba0>
   16e98:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16e9c:	cmp	r0, #0
   16ea0:	bne	16ec0 <__assert_fail@plt+0x5e20>
   16ea4:	ldr	r0, [fp, #8]
   16ea8:	cmp	r0, #2
   16eac:	bne	16ec0 <__assert_fail@plt+0x5e20>
   16eb0:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   16eb4:	tst	r0, #1
   16eb8:	beq	16ec0 <__assert_fail@plt+0x5e20>
   16ebc:	b	17018 <__assert_fail@plt+0x5f78>
   16ec0:	ldr	r0, [fp, #8]
   16ec4:	cmp	r0, #2
   16ec8:	bne	16f68 <__assert_fail@plt+0x5ec8>
   16ecc:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   16ed0:	tst	r0, #1
   16ed4:	bne	16f68 <__assert_fail@plt+0x5ec8>
   16ed8:	ldrb	r0, [fp, #-61]	; 0xffffffc3
   16edc:	tst	r0, #1
   16ee0:	beq	16f68 <__assert_fail@plt+0x5ec8>
   16ee4:	ldrb	r0, [fp, #-62]	; 0xffffffc2
   16ee8:	tst	r0, #1
   16eec:	beq	16f34 <__assert_fail@plt+0x5e94>
   16ef0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16ef4:	ldr	r1, [fp, #-48]	; 0xffffffd0
   16ef8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   16efc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   16f00:	ldr	ip, [fp, #12]
   16f04:	ldr	lr, [fp, #16]
   16f08:	ldr	r4, [fp, #20]
   16f0c:	ldr	r5, [fp, #24]
   16f10:	movw	r6, #5
   16f14:	str	r6, [sp]
   16f18:	str	ip, [sp, #4]
   16f1c:	str	lr, [sp, #8]
   16f20:	str	r4, [sp, #12]
   16f24:	str	r5, [sp, #16]
   16f28:	bl	15958 <__assert_fail@plt+0x48b8>
   16f2c:	str	r0, [fp, #-20]	; 0xffffffec
   16f30:	b	17080 <__assert_fail@plt+0x5fe0>
   16f34:	ldr	r0, [fp, #-28]	; 0xffffffe4
   16f38:	cmp	r0, #0
   16f3c:	bne	16f60 <__assert_fail@plt+0x5ec0>
   16f40:	ldr	r0, [fp, #-48]	; 0xffffffd0
   16f44:	cmp	r0, #0
   16f48:	beq	16f60 <__assert_fail@plt+0x5ec0>
   16f4c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   16f50:	str	r0, [fp, #-28]	; 0xffffffe4
   16f54:	movw	r0, #0
   16f58:	str	r0, [fp, #-44]	; 0xffffffd4
   16f5c:	b	15a00 <__assert_fail@plt+0x4960>
   16f60:	b	16f64 <__assert_fail@plt+0x5ec4>
   16f64:	b	16f68 <__assert_fail@plt+0x5ec8>
   16f68:	ldr	r0, [fp, #-52]	; 0xffffffcc
   16f6c:	movw	r1, #0
   16f70:	cmp	r0, r1
   16f74:	beq	16fe8 <__assert_fail@plt+0x5f48>
   16f78:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   16f7c:	tst	r0, #1
   16f80:	bne	16fe8 <__assert_fail@plt+0x5f48>
   16f84:	b	16f88 <__assert_fail@plt+0x5ee8>
   16f88:	ldr	r0, [fp, #-52]	; 0xffffffcc
   16f8c:	ldrsb	r0, [r0]
   16f90:	cmp	r0, #0
   16f94:	beq	16fe4 <__assert_fail@plt+0x5f44>
   16f98:	b	16f9c <__assert_fail@plt+0x5efc>
   16f9c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16fa0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   16fa4:	cmp	r0, r1
   16fa8:	bcs	16fc4 <__assert_fail@plt+0x5f24>
   16fac:	ldr	r0, [fp, #-52]	; 0xffffffcc
   16fb0:	ldrb	r0, [r0]
   16fb4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16fb8:	ldr	r2, [fp, #-44]	; 0xffffffd4
   16fbc:	add	r1, r1, r2
   16fc0:	strb	r0, [r1]
   16fc4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16fc8:	add	r0, r0, #1
   16fcc:	str	r0, [fp, #-44]	; 0xffffffd4
   16fd0:	b	16fd4 <__assert_fail@plt+0x5f34>
   16fd4:	ldr	r0, [fp, #-52]	; 0xffffffcc
   16fd8:	add	r0, r0, #1
   16fdc:	str	r0, [fp, #-52]	; 0xffffffcc
   16fe0:	b	16f88 <__assert_fail@plt+0x5ee8>
   16fe4:	b	16fe8 <__assert_fail@plt+0x5f48>
   16fe8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16fec:	ldr	r1, [fp, #-28]	; 0xffffffe4
   16ff0:	cmp	r0, r1
   16ff4:	bcs	1700c <__assert_fail@plt+0x5f6c>
   16ff8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16ffc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   17000:	add	r0, r0, r1
   17004:	movw	r1, #0
   17008:	strb	r1, [r0]
   1700c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   17010:	str	r0, [fp, #-20]	; 0xffffffec
   17014:	b	17080 <__assert_fail@plt+0x5fe0>
   17018:	ldr	r0, [fp, #8]
   1701c:	cmp	r0, #2
   17020:	bne	17038 <__assert_fail@plt+0x5f98>
   17024:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   17028:	tst	r0, #1
   1702c:	beq	17038 <__assert_fail@plt+0x5f98>
   17030:	movw	r0, #4
   17034:	str	r0, [fp, #8]
   17038:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1703c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   17040:	ldr	r2, [fp, #-32]	; 0xffffffe0
   17044:	ldr	r3, [fp, #-36]	; 0xffffffdc
   17048:	ldr	ip, [fp, #8]
   1704c:	ldr	lr, [fp, #12]
   17050:	mvn	r4, #2
   17054:	and	lr, lr, r4
   17058:	ldr	r4, [fp, #20]
   1705c:	ldr	r5, [fp, #24]
   17060:	str	ip, [sp]
   17064:	str	lr, [sp, #4]
   17068:	movw	ip, #0
   1706c:	str	ip, [sp, #8]
   17070:	str	r4, [sp, #12]
   17074:	str	r5, [sp, #16]
   17078:	bl	15958 <__assert_fail@plt+0x48b8>
   1707c:	str	r0, [fp, #-20]	; 0xffffffec
   17080:	ldr	r0, [fp, #-20]	; 0xffffffec
   17084:	sub	sp, fp, #16
   17088:	pop	{r4, r5, r6, sl, fp, pc}
   1708c:	push	{fp, lr}
   17090:	mov	fp, sp
   17094:	sub	sp, sp, #16
   17098:	str	r0, [fp, #-4]
   1709c:	str	r1, [sp, #8]
   170a0:	str	r2, [sp, #4]
   170a4:	ldr	r0, [fp, #-4]
   170a8:	ldr	r1, [sp, #8]
   170ac:	ldr	r3, [sp, #4]
   170b0:	movw	r2, #0
   170b4:	bl	170c0 <__assert_fail@plt+0x6020>
   170b8:	mov	sp, fp
   170bc:	pop	{fp, pc}
   170c0:	push	{r4, r5, r6, sl, fp, lr}
   170c4:	add	fp, sp, #16
   170c8:	sub	sp, sp, #80	; 0x50
   170cc:	str	r0, [fp, #-20]	; 0xffffffec
   170d0:	str	r1, [fp, #-24]	; 0xffffffe8
   170d4:	str	r2, [fp, #-28]	; 0xffffffe4
   170d8:	str	r3, [fp, #-32]	; 0xffffffe0
   170dc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   170e0:	movw	r1, #0
   170e4:	cmp	r0, r1
   170e8:	beq	170f8 <__assert_fail@plt+0x6058>
   170ec:	ldr	r0, [fp, #-32]	; 0xffffffe0
   170f0:	str	r0, [sp, #40]	; 0x28
   170f4:	b	17108 <__assert_fail@plt+0x6068>
   170f8:	movw	r0, #17516	; 0x446c
   170fc:	movt	r0, #3
   17100:	str	r0, [sp, #40]	; 0x28
   17104:	b	17108 <__assert_fail@plt+0x6068>
   17108:	ldr	r0, [sp, #40]	; 0x28
   1710c:	str	r0, [fp, #-36]	; 0xffffffdc
   17110:	bl	10fd4 <__errno_location@plt>
   17114:	ldr	r0, [r0]
   17118:	str	r0, [fp, #-40]	; 0xffffffd8
   1711c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   17120:	ldr	r0, [r0, #4]
   17124:	ldr	r1, [fp, #-28]	; 0xffffffe4
   17128:	movw	r2, #0
   1712c:	cmp	r1, r2
   17130:	movw	r1, #0
   17134:	movne	r1, #1
   17138:	tst	r1, #1
   1713c:	mov	r1, r2
   17140:	moveq	r1, #1
   17144:	orr	r0, r0, r1
   17148:	str	r0, [fp, #-44]	; 0xffffffd4
   1714c:	ldr	r0, [fp, #-20]	; 0xffffffec
   17150:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17154:	ldr	r1, [fp, #-36]	; 0xffffffdc
   17158:	ldr	r1, [r1]
   1715c:	ldr	ip, [fp, #-44]	; 0xffffffd4
   17160:	ldr	lr, [fp, #-36]	; 0xffffffdc
   17164:	add	lr, lr, #8
   17168:	ldr	r4, [fp, #-36]	; 0xffffffdc
   1716c:	ldr	r4, [r4, #40]	; 0x28
   17170:	ldr	r5, [fp, #-36]	; 0xffffffdc
   17174:	ldr	r5, [r5, #44]	; 0x2c
   17178:	str	r0, [sp, #36]	; 0x24
   1717c:	mov	r0, r2
   17180:	str	r1, [sp, #32]
   17184:	mov	r1, r2
   17188:	ldr	r2, [sp, #36]	; 0x24
   1718c:	ldr	r6, [sp, #32]
   17190:	str	r6, [sp]
   17194:	str	ip, [sp, #4]
   17198:	str	lr, [sp, #8]
   1719c:	str	r4, [sp, #12]
   171a0:	str	r5, [sp, #16]
   171a4:	bl	15958 <__assert_fail@plt+0x48b8>
   171a8:	add	r0, r0, #1
   171ac:	str	r0, [sp, #48]	; 0x30
   171b0:	ldr	r0, [sp, #48]	; 0x30
   171b4:	bl	18654 <__assert_fail@plt+0x75b4>
   171b8:	str	r0, [sp, #44]	; 0x2c
   171bc:	ldr	r0, [sp, #44]	; 0x2c
   171c0:	ldr	r1, [sp, #48]	; 0x30
   171c4:	ldr	r2, [fp, #-20]	; 0xffffffec
   171c8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   171cc:	ldr	ip, [fp, #-36]	; 0xffffffdc
   171d0:	ldr	ip, [ip]
   171d4:	ldr	lr, [fp, #-44]	; 0xffffffd4
   171d8:	ldr	r4, [fp, #-36]	; 0xffffffdc
   171dc:	add	r4, r4, #8
   171e0:	ldr	r5, [fp, #-36]	; 0xffffffdc
   171e4:	ldr	r5, [r5, #40]	; 0x28
   171e8:	ldr	r6, [fp, #-36]	; 0xffffffdc
   171ec:	ldr	r6, [r6, #44]	; 0x2c
   171f0:	str	ip, [sp]
   171f4:	str	lr, [sp, #4]
   171f8:	str	r4, [sp, #8]
   171fc:	str	r5, [sp, #12]
   17200:	str	r6, [sp, #16]
   17204:	bl	15958 <__assert_fail@plt+0x48b8>
   17208:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1720c:	str	r0, [sp, #28]
   17210:	str	r1, [sp, #24]
   17214:	bl	10fd4 <__errno_location@plt>
   17218:	ldr	r1, [sp, #24]
   1721c:	str	r1, [r0]
   17220:	ldr	r0, [fp, #-28]	; 0xffffffe4
   17224:	movw	r2, #0
   17228:	cmp	r0, r2
   1722c:	beq	17240 <__assert_fail@plt+0x61a0>
   17230:	ldr	r0, [sp, #48]	; 0x30
   17234:	sub	r0, r0, #1
   17238:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1723c:	str	r0, [r1]
   17240:	ldr	r0, [sp, #44]	; 0x2c
   17244:	sub	sp, fp, #16
   17248:	pop	{r4, r5, r6, sl, fp, pc}
   1724c:	push	{fp, lr}
   17250:	mov	fp, sp
   17254:	sub	sp, sp, #8
   17258:	movw	r0, #8440	; 0x20f8
   1725c:	movt	r0, #3
   17260:	ldr	r0, [r0]
   17264:	str	r0, [sp, #4]
   17268:	movw	r0, #1
   1726c:	str	r0, [sp]
   17270:	ldr	r0, [sp]
   17274:	movw	r1, #8444	; 0x20fc
   17278:	movt	r1, #3
   1727c:	ldr	r1, [r1]
   17280:	cmp	r0, r1
   17284:	bge	172ac <__assert_fail@plt+0x620c>
   17288:	ldr	r0, [sp, #4]
   1728c:	ldr	r1, [sp]
   17290:	add	r0, r0, r1, lsl #3
   17294:	ldr	r0, [r0, #4]
   17298:	bl	1548c <__assert_fail@plt+0x43ec>
   1729c:	ldr	r0, [sp]
   172a0:	add	r0, r0, #1
   172a4:	str	r0, [sp]
   172a8:	b	17270 <__assert_fail@plt+0x61d0>
   172ac:	ldr	r0, [sp, #4]
   172b0:	ldr	r0, [r0, #4]
   172b4:	movw	r1, #17564	; 0x449c
   172b8:	movt	r1, #3
   172bc:	cmp	r0, r1
   172c0:	beq	172ec <__assert_fail@plt+0x624c>
   172c4:	ldr	r0, [sp, #4]
   172c8:	ldr	r0, [r0, #4]
   172cc:	bl	1548c <__assert_fail@plt+0x43ec>
   172d0:	movw	r0, #256	; 0x100
   172d4:	movw	r1, #8448	; 0x2100
   172d8:	movt	r1, #3
   172dc:	str	r0, [r1]
   172e0:	movw	r0, #17564	; 0x449c
   172e4:	movt	r0, #3
   172e8:	str	r0, [r1, #4]
   172ec:	ldr	r0, [sp, #4]
   172f0:	movw	r1, #8448	; 0x2100
   172f4:	movt	r1, #3
   172f8:	cmp	r0, r1
   172fc:	beq	1731c <__assert_fail@plt+0x627c>
   17300:	ldr	r0, [sp, #4]
   17304:	bl	1548c <__assert_fail@plt+0x43ec>
   17308:	movw	r0, #8440	; 0x20f8
   1730c:	movt	r0, #3
   17310:	movw	r1, #8448	; 0x2100
   17314:	movt	r1, #3
   17318:	str	r1, [r0]
   1731c:	movw	r0, #8444	; 0x20fc
   17320:	movt	r0, #3
   17324:	movw	r1, #1
   17328:	str	r1, [r0]
   1732c:	mov	sp, fp
   17330:	pop	{fp, pc}
   17334:	push	{fp, lr}
   17338:	mov	fp, sp
   1733c:	sub	sp, sp, #8
   17340:	str	r0, [sp, #4]
   17344:	str	r1, [sp]
   17348:	ldr	r0, [sp, #4]
   1734c:	ldr	r1, [sp]
   17350:	mvn	r2, #0
   17354:	movw	r3, #17516	; 0x446c
   17358:	movt	r3, #3
   1735c:	bl	17368 <__assert_fail@plt+0x62c8>
   17360:	mov	sp, fp
   17364:	pop	{fp, pc}
   17368:	push	{r4, r5, r6, sl, fp, lr}
   1736c:	add	fp, sp, #16
   17370:	sub	sp, sp, #80	; 0x50
   17374:	str	r0, [fp, #-20]	; 0xffffffec
   17378:	str	r1, [fp, #-24]	; 0xffffffe8
   1737c:	str	r2, [fp, #-28]	; 0xffffffe4
   17380:	str	r3, [fp, #-32]	; 0xffffffe0
   17384:	bl	10fd4 <__errno_location@plt>
   17388:	ldr	r1, [pc, #672]	; 17630 <__assert_fail@plt+0x6590>
   1738c:	ldr	r0, [r0]
   17390:	str	r0, [fp, #-36]	; 0xffffffdc
   17394:	movw	r0, #8440	; 0x20f8
   17398:	movt	r0, #3
   1739c:	ldr	r0, [r0]
   173a0:	str	r0, [fp, #-40]	; 0xffffffd8
   173a4:	str	r1, [fp, #-44]	; 0xffffffd4
   173a8:	ldr	r0, [fp, #-20]	; 0xffffffec
   173ac:	movw	r1, #0
   173b0:	cmp	r1, r0
   173b4:	bgt	173c8 <__assert_fail@plt+0x6328>
   173b8:	ldr	r0, [fp, #-20]	; 0xffffffec
   173bc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   173c0:	cmp	r0, r1
   173c4:	blt	173cc <__assert_fail@plt+0x632c>
   173c8:	bl	11088 <abort@plt>
   173cc:	movw	r0, #8444	; 0x20fc
   173d0:	movt	r0, #3
   173d4:	ldr	r0, [r0]
   173d8:	ldr	r1, [fp, #-20]	; 0xffffffec
   173dc:	cmp	r0, r1
   173e0:	bgt	174d8 <__assert_fail@plt+0x6438>
   173e4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   173e8:	movw	r1, #8448	; 0x2100
   173ec:	movt	r1, #3
   173f0:	cmp	r0, r1
   173f4:	movw	r0, #0
   173f8:	moveq	r0, #1
   173fc:	and	r0, r0, #1
   17400:	strb	r0, [fp, #-45]	; 0xffffffd3
   17404:	movw	r0, #8444	; 0x20fc
   17408:	movt	r0, #3
   1740c:	ldr	r0, [r0]
   17410:	str	r0, [sp, #44]	; 0x2c
   17414:	ldrb	r0, [fp, #-45]	; 0xffffffd3
   17418:	tst	r0, #1
   1741c:	beq	1742c <__assert_fail@plt+0x638c>
   17420:	movw	r0, #0
   17424:	str	r0, [sp, #24]
   17428:	b	17434 <__assert_fail@plt+0x6394>
   1742c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   17430:	str	r0, [sp, #24]
   17434:	ldr	r0, [sp, #24]
   17438:	ldr	r1, [fp, #-20]	; 0xffffffec
   1743c:	movw	r2, #8444	; 0x20fc
   17440:	movt	r2, #3
   17444:	ldr	r2, [r2]
   17448:	sub	r1, r1, r2
   1744c:	add	r2, r1, #1
   17450:	ldr	r3, [fp, #-44]	; 0xffffffd4
   17454:	add	r1, sp, #44	; 0x2c
   17458:	movw	ip, #8
   1745c:	str	ip, [sp]
   17460:	bl	18890 <__assert_fail@plt+0x77f0>
   17464:	str	r0, [fp, #-40]	; 0xffffffd8
   17468:	movw	r1, #8440	; 0x20f8
   1746c:	movt	r1, #3
   17470:	str	r0, [r1]
   17474:	ldrb	r0, [fp, #-45]	; 0xffffffd3
   17478:	tst	r0, #1
   1747c:	beq	1749c <__assert_fail@plt+0x63fc>
   17480:	ldr	r0, [fp, #-40]	; 0xffffffd8
   17484:	movw	r1, #8448	; 0x2100
   17488:	movt	r1, #3
   1748c:	ldr	r2, [r1]
   17490:	str	r2, [r0]
   17494:	ldr	r1, [r1, #4]
   17498:	str	r1, [r0, #4]
   1749c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   174a0:	movw	r1, #8444	; 0x20fc
   174a4:	movt	r1, #3
   174a8:	ldr	r1, [r1]
   174ac:	add	r0, r0, r1, lsl #3
   174b0:	ldr	r2, [sp, #44]	; 0x2c
   174b4:	sub	r1, r2, r1
   174b8:	lsl	r2, r1, #3
   174bc:	movw	r1, #0
   174c0:	and	r1, r1, #255	; 0xff
   174c4:	bl	10fec <memset@plt>
   174c8:	ldr	r0, [sp, #44]	; 0x2c
   174cc:	movw	r1, #8444	; 0x20fc
   174d0:	movt	r1, #3
   174d4:	str	r0, [r1]
   174d8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   174dc:	ldr	r1, [fp, #-20]	; 0xffffffec
   174e0:	ldr	r0, [r0, r1, lsl #3]
   174e4:	str	r0, [sp, #40]	; 0x28
   174e8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   174ec:	ldr	r1, [fp, #-20]	; 0xffffffec
   174f0:	add	r0, r0, r1, lsl #3
   174f4:	ldr	r0, [r0, #4]
   174f8:	str	r0, [sp, #36]	; 0x24
   174fc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   17500:	ldr	r0, [r0, #4]
   17504:	orr	r0, r0, #1
   17508:	str	r0, [sp, #32]
   1750c:	ldr	r0, [sp, #36]	; 0x24
   17510:	ldr	r1, [sp, #40]	; 0x28
   17514:	ldr	r2, [fp, #-24]	; 0xffffffe8
   17518:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1751c:	ldr	ip, [fp, #-32]	; 0xffffffe0
   17520:	ldr	ip, [ip]
   17524:	ldr	lr, [sp, #32]
   17528:	ldr	r4, [fp, #-32]	; 0xffffffe0
   1752c:	add	r4, r4, #8
   17530:	ldr	r5, [fp, #-32]	; 0xffffffe0
   17534:	ldr	r5, [r5, #40]	; 0x28
   17538:	ldr	r6, [fp, #-32]	; 0xffffffe0
   1753c:	ldr	r6, [r6, #44]	; 0x2c
   17540:	str	ip, [sp]
   17544:	str	lr, [sp, #4]
   17548:	str	r4, [sp, #8]
   1754c:	str	r5, [sp, #12]
   17550:	str	r6, [sp, #16]
   17554:	bl	15958 <__assert_fail@plt+0x48b8>
   17558:	str	r0, [sp, #28]
   1755c:	ldr	r0, [sp, #40]	; 0x28
   17560:	ldr	r1, [sp, #28]
   17564:	cmp	r0, r1
   17568:	bhi	17610 <__assert_fail@plt+0x6570>
   1756c:	ldr	r0, [sp, #28]
   17570:	add	r0, r0, #1
   17574:	str	r0, [sp, #40]	; 0x28
   17578:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1757c:	ldr	r2, [fp, #-20]	; 0xffffffec
   17580:	add	r1, r1, r2, lsl #3
   17584:	str	r0, [r1]
   17588:	ldr	r0, [sp, #36]	; 0x24
   1758c:	movw	r1, #17564	; 0x449c
   17590:	movt	r1, #3
   17594:	cmp	r0, r1
   17598:	beq	175a4 <__assert_fail@plt+0x6504>
   1759c:	ldr	r0, [sp, #36]	; 0x24
   175a0:	bl	1548c <__assert_fail@plt+0x43ec>
   175a4:	ldr	r0, [sp, #40]	; 0x28
   175a8:	bl	18654 <__assert_fail@plt+0x75b4>
   175ac:	mov	r1, r0
   175b0:	str	r0, [sp, #36]	; 0x24
   175b4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   175b8:	ldr	r2, [fp, #-20]	; 0xffffffec
   175bc:	add	r0, r0, r2, lsl #3
   175c0:	str	r1, [r0, #4]
   175c4:	ldr	r0, [sp, #36]	; 0x24
   175c8:	ldr	r1, [sp, #40]	; 0x28
   175cc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   175d0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   175d4:	ldr	ip, [fp, #-32]	; 0xffffffe0
   175d8:	ldr	ip, [ip]
   175dc:	ldr	lr, [sp, #32]
   175e0:	ldr	r4, [fp, #-32]	; 0xffffffe0
   175e4:	add	r4, r4, #8
   175e8:	ldr	r5, [fp, #-32]	; 0xffffffe0
   175ec:	ldr	r5, [r5, #40]	; 0x28
   175f0:	ldr	r6, [fp, #-32]	; 0xffffffe0
   175f4:	ldr	r6, [r6, #44]	; 0x2c
   175f8:	str	ip, [sp]
   175fc:	str	lr, [sp, #4]
   17600:	str	r4, [sp, #8]
   17604:	str	r5, [sp, #12]
   17608:	str	r6, [sp, #16]
   1760c:	bl	15958 <__assert_fail@plt+0x48b8>
   17610:	ldr	r0, [fp, #-36]	; 0xffffffdc
   17614:	str	r0, [sp, #20]
   17618:	bl	10fd4 <__errno_location@plt>
   1761c:	ldr	r1, [sp, #20]
   17620:	str	r1, [r0]
   17624:	ldr	r0, [sp, #36]	; 0x24
   17628:	sub	sp, fp, #16
   1762c:	pop	{r4, r5, r6, sl, fp, pc}
   17630:	svcvc	0x00ffffff
   17634:	push	{fp, lr}
   17638:	mov	fp, sp
   1763c:	sub	sp, sp, #16
   17640:	str	r0, [fp, #-4]
   17644:	str	r1, [sp, #8]
   17648:	str	r2, [sp, #4]
   1764c:	ldr	r0, [fp, #-4]
   17650:	ldr	r1, [sp, #8]
   17654:	ldr	r2, [sp, #4]
   17658:	movw	r3, #17516	; 0x446c
   1765c:	movt	r3, #3
   17660:	bl	17368 <__assert_fail@plt+0x62c8>
   17664:	mov	sp, fp
   17668:	pop	{fp, pc}
   1766c:	push	{fp, lr}
   17670:	mov	fp, sp
   17674:	sub	sp, sp, #8
   17678:	str	r0, [sp, #4]
   1767c:	ldr	r1, [sp, #4]
   17680:	movw	r0, #0
   17684:	bl	17334 <__assert_fail@plt+0x6294>
   17688:	mov	sp, fp
   1768c:	pop	{fp, pc}
   17690:	push	{fp, lr}
   17694:	mov	fp, sp
   17698:	sub	sp, sp, #8
   1769c:	str	r0, [sp, #4]
   176a0:	str	r1, [sp]
   176a4:	ldr	r1, [sp, #4]
   176a8:	ldr	r2, [sp]
   176ac:	movw	r0, #0
   176b0:	bl	17634 <__assert_fail@plt+0x6594>
   176b4:	mov	sp, fp
   176b8:	pop	{fp, pc}
   176bc:	push	{fp, lr}
   176c0:	mov	fp, sp
   176c4:	sub	sp, sp, #64	; 0x40
   176c8:	str	r0, [fp, #-4]
   176cc:	str	r1, [fp, #-8]
   176d0:	str	r2, [fp, #-12]
   176d4:	ldr	r1, [fp, #-8]
   176d8:	add	r0, sp, #4
   176dc:	bl	176fc <__assert_fail@plt+0x665c>
   176e0:	ldr	r0, [fp, #-4]
   176e4:	ldr	r1, [fp, #-12]
   176e8:	mvn	r2, #0
   176ec:	add	r3, sp, #4
   176f0:	bl	17368 <__assert_fail@plt+0x62c8>
   176f4:	mov	sp, fp
   176f8:	pop	{fp, pc}
   176fc:	push	{fp, lr}
   17700:	mov	fp, sp
   17704:	sub	sp, sp, #8
   17708:	str	r1, [sp, #4]
   1770c:	mov	r1, r0
   17710:	str	r0, [sp]
   17714:	mov	r0, r1
   17718:	movw	r1, #0
   1771c:	and	r1, r1, #255	; 0xff
   17720:	movw	r2, #48	; 0x30
   17724:	bl	10fec <memset@plt>
   17728:	ldr	r0, [sp, #4]
   1772c:	cmp	r0, #10
   17730:	bne	17738 <__assert_fail@plt+0x6698>
   17734:	bl	11088 <abort@plt>
   17738:	ldr	r0, [sp, #4]
   1773c:	ldr	r1, [sp]
   17740:	str	r0, [r1]
   17744:	mov	sp, fp
   17748:	pop	{fp, pc}
   1774c:	push	{fp, lr}
   17750:	mov	fp, sp
   17754:	sub	sp, sp, #64	; 0x40
   17758:	str	r0, [fp, #-4]
   1775c:	str	r1, [fp, #-8]
   17760:	str	r2, [fp, #-12]
   17764:	str	r3, [fp, #-16]
   17768:	ldr	r1, [fp, #-8]
   1776c:	mov	r0, sp
   17770:	bl	176fc <__assert_fail@plt+0x665c>
   17774:	ldr	r0, [fp, #-4]
   17778:	ldr	r1, [fp, #-12]
   1777c:	ldr	r2, [fp, #-16]
   17780:	mov	r3, sp
   17784:	bl	17368 <__assert_fail@plt+0x62c8>
   17788:	mov	sp, fp
   1778c:	pop	{fp, pc}
   17790:	push	{fp, lr}
   17794:	mov	fp, sp
   17798:	sub	sp, sp, #8
   1779c:	str	r0, [sp, #4]
   177a0:	str	r1, [sp]
   177a4:	ldr	r1, [sp, #4]
   177a8:	ldr	r2, [sp]
   177ac:	movw	r0, #0
   177b0:	bl	176bc <__assert_fail@plt+0x661c>
   177b4:	mov	sp, fp
   177b8:	pop	{fp, pc}
   177bc:	push	{fp, lr}
   177c0:	mov	fp, sp
   177c4:	sub	sp, sp, #16
   177c8:	str	r0, [fp, #-4]
   177cc:	str	r1, [sp, #8]
   177d0:	str	r2, [sp, #4]
   177d4:	ldr	r1, [fp, #-4]
   177d8:	ldr	r2, [sp, #8]
   177dc:	ldr	r3, [sp, #4]
   177e0:	movw	r0, #0
   177e4:	bl	1774c <__assert_fail@plt+0x66ac>
   177e8:	mov	sp, fp
   177ec:	pop	{fp, pc}
   177f0:	push	{fp, lr}
   177f4:	mov	fp, sp
   177f8:	sub	sp, sp, #72	; 0x48
   177fc:	movw	r3, #17516	; 0x446c
   17800:	movt	r3, #3
   17804:	str	r0, [fp, #-4]
   17808:	str	r1, [fp, #-8]
   1780c:	strb	r2, [fp, #-9]
   17810:	add	r0, sp, #12
   17814:	mov	r1, r0
   17818:	str	r0, [sp, #8]
   1781c:	mov	r0, r1
   17820:	mov	r1, r3
   17824:	movw	r2, #48	; 0x30
   17828:	bl	10e9c <memcpy@plt>
   1782c:	ldr	r0, [sp, #8]
   17830:	ldrb	r1, [fp, #-9]
   17834:	movw	r2, #1
   17838:	bl	15700 <__assert_fail@plt+0x4660>
   1783c:	ldr	r1, [fp, #-4]
   17840:	ldr	r2, [fp, #-8]
   17844:	movw	r3, #0
   17848:	str	r0, [sp, #4]
   1784c:	mov	r0, r3
   17850:	add	r3, sp, #12
   17854:	bl	17368 <__assert_fail@plt+0x62c8>
   17858:	mov	sp, fp
   1785c:	pop	{fp, pc}
   17860:	push	{fp, lr}
   17864:	mov	fp, sp
   17868:	sub	sp, sp, #8
   1786c:	str	r0, [sp, #4]
   17870:	strb	r1, [sp, #3]
   17874:	ldr	r0, [sp, #4]
   17878:	mvn	r1, #0
   1787c:	ldrb	r2, [sp, #3]
   17880:	bl	177f0 <__assert_fail@plt+0x6750>
   17884:	mov	sp, fp
   17888:	pop	{fp, pc}
   1788c:	push	{fp, lr}
   17890:	mov	fp, sp
   17894:	sub	sp, sp, #8
   17898:	str	r0, [sp, #4]
   1789c:	ldr	r0, [sp, #4]
   178a0:	movw	r1, #58	; 0x3a
   178a4:	and	r1, r1, #255	; 0xff
   178a8:	bl	17860 <__assert_fail@plt+0x67c0>
   178ac:	mov	sp, fp
   178b0:	pop	{fp, pc}
   178b4:	push	{fp, lr}
   178b8:	mov	fp, sp
   178bc:	sub	sp, sp, #8
   178c0:	str	r0, [sp, #4]
   178c4:	str	r1, [sp]
   178c8:	ldr	r0, [sp, #4]
   178cc:	ldr	r1, [sp]
   178d0:	movw	r2, #58	; 0x3a
   178d4:	and	r2, r2, #255	; 0xff
   178d8:	bl	177f0 <__assert_fail@plt+0x6750>
   178dc:	mov	sp, fp
   178e0:	pop	{fp, pc}
   178e4:	push	{fp, lr}
   178e8:	mov	fp, sp
   178ec:	sub	sp, sp, #120	; 0x78
   178f0:	str	r0, [fp, #-4]
   178f4:	str	r1, [fp, #-8]
   178f8:	str	r2, [fp, #-12]
   178fc:	ldr	r1, [fp, #-8]
   17900:	add	r0, sp, #12
   17904:	bl	176fc <__assert_fail@plt+0x665c>
   17908:	add	r0, sp, #60	; 0x3c
   1790c:	mov	r1, r0
   17910:	add	r2, sp, #12
   17914:	str	r0, [sp, #8]
   17918:	mov	r0, r1
   1791c:	mov	r1, r2
   17920:	movw	r2, #48	; 0x30
   17924:	bl	10e9c <memcpy@plt>
   17928:	ldr	r0, [sp, #8]
   1792c:	movw	r1, #58	; 0x3a
   17930:	and	r1, r1, #255	; 0xff
   17934:	movw	r2, #1
   17938:	bl	15700 <__assert_fail@plt+0x4660>
   1793c:	ldr	r1, [fp, #-4]
   17940:	ldr	r2, [fp, #-12]
   17944:	str	r0, [sp, #4]
   17948:	mov	r0, r1
   1794c:	mov	r1, r2
   17950:	mvn	r2, #0
   17954:	add	r3, sp, #60	; 0x3c
   17958:	bl	17368 <__assert_fail@plt+0x62c8>
   1795c:	mov	sp, fp
   17960:	pop	{fp, pc}
   17964:	push	{fp, lr}
   17968:	mov	fp, sp
   1796c:	sub	sp, sp, #24
   17970:	str	r0, [fp, #-4]
   17974:	str	r1, [fp, #-8]
   17978:	str	r2, [sp, #12]
   1797c:	str	r3, [sp, #8]
   17980:	ldr	r0, [fp, #-4]
   17984:	ldr	r1, [fp, #-8]
   17988:	ldr	r2, [sp, #12]
   1798c:	ldr	r3, [sp, #8]
   17990:	mvn	ip, #0
   17994:	str	ip, [sp]
   17998:	bl	179a4 <__assert_fail@plt+0x6904>
   1799c:	mov	sp, fp
   179a0:	pop	{fp, pc}
   179a4:	push	{fp, lr}
   179a8:	mov	fp, sp
   179ac:	sub	sp, sp, #72	; 0x48
   179b0:	ldr	ip, [fp, #8]
   179b4:	movw	lr, #17516	; 0x446c
   179b8:	movt	lr, #3
   179bc:	str	r0, [fp, #-4]
   179c0:	str	r1, [fp, #-8]
   179c4:	str	r2, [fp, #-12]
   179c8:	str	r3, [fp, #-16]
   179cc:	add	r0, sp, #8
   179d0:	mov	r1, r0
   179d4:	str	r0, [sp, #4]
   179d8:	mov	r0, r1
   179dc:	mov	r1, lr
   179e0:	movw	r2, #48	; 0x30
   179e4:	str	ip, [sp]
   179e8:	bl	10e9c <memcpy@plt>
   179ec:	ldr	r1, [fp, #-8]
   179f0:	ldr	r2, [fp, #-12]
   179f4:	ldr	r0, [sp, #4]
   179f8:	bl	15800 <__assert_fail@plt+0x4760>
   179fc:	ldr	r0, [fp, #-4]
   17a00:	ldr	r1, [fp, #-16]
   17a04:	ldr	r2, [fp, #8]
   17a08:	add	r3, sp, #8
   17a0c:	bl	17368 <__assert_fail@plt+0x62c8>
   17a10:	mov	sp, fp
   17a14:	pop	{fp, pc}
   17a18:	push	{fp, lr}
   17a1c:	mov	fp, sp
   17a20:	sub	sp, sp, #16
   17a24:	str	r0, [fp, #-4]
   17a28:	str	r1, [sp, #8]
   17a2c:	str	r2, [sp, #4]
   17a30:	ldr	r1, [fp, #-4]
   17a34:	ldr	r2, [sp, #8]
   17a38:	ldr	r3, [sp, #4]
   17a3c:	movw	r0, #0
   17a40:	bl	17964 <__assert_fail@plt+0x68c4>
   17a44:	mov	sp, fp
   17a48:	pop	{fp, pc}
   17a4c:	push	{fp, lr}
   17a50:	mov	fp, sp
   17a54:	sub	sp, sp, #24
   17a58:	str	r0, [fp, #-4]
   17a5c:	str	r1, [fp, #-8]
   17a60:	str	r2, [sp, #12]
   17a64:	str	r3, [sp, #8]
   17a68:	ldr	r1, [fp, #-4]
   17a6c:	ldr	r2, [fp, #-8]
   17a70:	ldr	r3, [sp, #12]
   17a74:	ldr	r0, [sp, #8]
   17a78:	movw	ip, #0
   17a7c:	str	r0, [sp, #4]
   17a80:	mov	r0, ip
   17a84:	ldr	ip, [sp, #4]
   17a88:	str	ip, [sp]
   17a8c:	bl	179a4 <__assert_fail@plt+0x6904>
   17a90:	mov	sp, fp
   17a94:	pop	{fp, pc}
   17a98:	push	{fp, lr}
   17a9c:	mov	fp, sp
   17aa0:	sub	sp, sp, #16
   17aa4:	str	r0, [fp, #-4]
   17aa8:	str	r1, [sp, #8]
   17aac:	str	r2, [sp, #4]
   17ab0:	ldr	r0, [fp, #-4]
   17ab4:	ldr	r1, [sp, #8]
   17ab8:	ldr	r2, [sp, #4]
   17abc:	movw	r3, #8456	; 0x2108
   17ac0:	movt	r3, #3
   17ac4:	bl	17368 <__assert_fail@plt+0x62c8>
   17ac8:	mov	sp, fp
   17acc:	pop	{fp, pc}
   17ad0:	push	{fp, lr}
   17ad4:	mov	fp, sp
   17ad8:	sub	sp, sp, #8
   17adc:	str	r0, [sp, #4]
   17ae0:	str	r1, [sp]
   17ae4:	ldr	r1, [sp, #4]
   17ae8:	ldr	r2, [sp]
   17aec:	movw	r0, #0
   17af0:	bl	17a98 <__assert_fail@plt+0x69f8>
   17af4:	mov	sp, fp
   17af8:	pop	{fp, pc}
   17afc:	push	{fp, lr}
   17b00:	mov	fp, sp
   17b04:	sub	sp, sp, #8
   17b08:	str	r0, [sp, #4]
   17b0c:	str	r1, [sp]
   17b10:	ldr	r0, [sp, #4]
   17b14:	ldr	r1, [sp]
   17b18:	mvn	r2, #0
   17b1c:	bl	17a98 <__assert_fail@plt+0x69f8>
   17b20:	mov	sp, fp
   17b24:	pop	{fp, pc}
   17b28:	push	{fp, lr}
   17b2c:	mov	fp, sp
   17b30:	sub	sp, sp, #8
   17b34:	str	r0, [sp, #4]
   17b38:	ldr	r1, [sp, #4]
   17b3c:	movw	r0, #0
   17b40:	bl	17afc <__assert_fail@plt+0x6a5c>
   17b44:	mov	sp, fp
   17b48:	pop	{fp, pc}
   17b4c:	push	{fp, lr}
   17b50:	mov	fp, sp
   17b54:	sub	sp, sp, #24
   17b58:	str	r0, [fp, #-8]
   17b5c:	str	r1, [sp, #12]
   17b60:	ldr	r0, [fp, #-8]
   17b64:	bl	10fa4 <gettext@plt>
   17b68:	str	r0, [sp, #8]
   17b6c:	ldr	r0, [sp, #8]
   17b70:	ldr	r1, [fp, #-8]
   17b74:	cmp	r0, r1
   17b78:	beq	17b88 <__assert_fail@plt+0x6ae8>
   17b7c:	ldr	r0, [sp, #8]
   17b80:	str	r0, [fp, #-4]
   17b84:	b	17c54 <__assert_fail@plt+0x6bb4>
   17b88:	bl	1daf0 <__assert_fail@plt+0xca50>
   17b8c:	str	r0, [sp, #4]
   17b90:	ldr	r0, [sp, #4]
   17b94:	movw	r1, #4154	; 0x103a
   17b98:	movt	r1, #2
   17b9c:	bl	1d4f4 <__assert_fail@plt+0xc454>
   17ba0:	cmp	r0, #0
   17ba4:	bne	17bdc <__assert_fail@plt+0x6b3c>
   17ba8:	ldr	r0, [fp, #-8]
   17bac:	ldrb	r0, [r0]
   17bb0:	cmp	r0, #96	; 0x60
   17bb4:	movw	r0, #0
   17bb8:	moveq	r0, #1
   17bbc:	tst	r0, #1
   17bc0:	movw	r0, #4164	; 0x1044
   17bc4:	movt	r0, #2
   17bc8:	movw	r1, #4160	; 0x1040
   17bcc:	movt	r1, #2
   17bd0:	movne	r0, r1
   17bd4:	str	r0, [fp, #-4]
   17bd8:	b	17c54 <__assert_fail@plt+0x6bb4>
   17bdc:	ldr	r0, [sp, #4]
   17be0:	movw	r1, #4168	; 0x1048
   17be4:	movt	r1, #2
   17be8:	bl	1d4f4 <__assert_fail@plt+0xc454>
   17bec:	cmp	r0, #0
   17bf0:	bne	17c28 <__assert_fail@plt+0x6b88>
   17bf4:	ldr	r0, [fp, #-8]
   17bf8:	ldrb	r0, [r0]
   17bfc:	cmp	r0, #96	; 0x60
   17c00:	movw	r0, #0
   17c04:	moveq	r0, #1
   17c08:	tst	r0, #1
   17c0c:	movw	r0, #4180	; 0x1054
   17c10:	movt	r0, #2
   17c14:	movw	r1, #4176	; 0x1050
   17c18:	movt	r1, #2
   17c1c:	movne	r0, r1
   17c20:	str	r0, [fp, #-4]
   17c24:	b	17c54 <__assert_fail@plt+0x6bb4>
   17c28:	ldr	r0, [sp, #12]
   17c2c:	cmp	r0, #9
   17c30:	movw	r0, #0
   17c34:	moveq	r0, #1
   17c38:	tst	r0, #1
   17c3c:	movw	r0, #1868	; 0x74c
   17c40:	movt	r0, #2
   17c44:	movw	r1, #4150	; 0x1036
   17c48:	movt	r1, #2
   17c4c:	movne	r0, r1
   17c50:	str	r0, [fp, #-4]
   17c54:	ldr	r0, [fp, #-4]
   17c58:	mov	sp, fp
   17c5c:	pop	{fp, pc}
   17c60:	push	{fp, lr}
   17c64:	mov	fp, sp
   17c68:	sub	sp, sp, #24
   17c6c:	str	r0, [fp, #-8]
   17c70:	str	r1, [sp, #12]
   17c74:	str	r2, [sp, #8]
   17c78:	ldr	r0, [fp, #-8]
   17c7c:	ldr	r1, [sp, #12]
   17c80:	ldr	r2, [sp, #8]
   17c84:	bl	10e6c <read@plt>
   17c88:	str	r0, [sp, #4]
   17c8c:	ldr	r0, [sp, #4]
   17c90:	movw	r1, #0
   17c94:	cmp	r1, r0
   17c98:	bgt	17ca8 <__assert_fail@plt+0x6c08>
   17c9c:	ldr	r0, [sp, #4]
   17ca0:	str	r0, [fp, #-4]
   17ca4:	b	17d00 <__assert_fail@plt+0x6c60>
   17ca8:	bl	10fd4 <__errno_location@plt>
   17cac:	ldr	r0, [r0]
   17cb0:	cmp	r0, #4
   17cb4:	bne	17cbc <__assert_fail@plt+0x6c1c>
   17cb8:	b	17c78 <__assert_fail@plt+0x6bd8>
   17cbc:	bl	10fd4 <__errno_location@plt>
   17cc0:	ldr	r0, [r0]
   17cc4:	cmp	r0, #22
   17cc8:	bne	17ce8 <__assert_fail@plt+0x6c48>
   17ccc:	ldr	r0, [pc, #56]	; 17d0c <__assert_fail@plt+0x6c6c>
   17cd0:	ldr	r1, [sp, #8]
   17cd4:	cmp	r0, r1
   17cd8:	bcs	17ce8 <__assert_fail@plt+0x6c48>
   17cdc:	ldr	r0, [pc, #40]	; 17d0c <__assert_fail@plt+0x6c6c>
   17ce0:	str	r0, [sp, #8]
   17ce4:	b	17cf4 <__assert_fail@plt+0x6c54>
   17ce8:	ldr	r0, [sp, #4]
   17cec:	str	r0, [fp, #-4]
   17cf0:	b	17d00 <__assert_fail@plt+0x6c60>
   17cf4:	b	17cf8 <__assert_fail@plt+0x6c58>
   17cf8:	b	17cfc <__assert_fail@plt+0x6c5c>
   17cfc:	b	17c78 <__assert_fail@plt+0x6bd8>
   17d00:	ldr	r0, [fp, #-4]
   17d04:	mov	sp, fp
   17d08:	pop	{fp, pc}
   17d0c:	svcvc	0x00f00000	; IMB
   17d10:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17d14:	add	fp, sp, #28
   17d18:	sub	sp, sp, #196	; 0xc4
   17d1c:	ldr	ip, [fp, #12]
   17d20:	ldr	lr, [fp, #8]
   17d24:	str	r0, [fp, #-32]	; 0xffffffe0
   17d28:	str	r1, [fp, #-36]	; 0xffffffdc
   17d2c:	str	r2, [fp, #-40]	; 0xffffffd8
   17d30:	str	r3, [fp, #-44]	; 0xffffffd4
   17d34:	ldr	r0, [fp, #-36]	; 0xffffffdc
   17d38:	movw	r1, #0
   17d3c:	cmp	r0, r1
   17d40:	beq	17d74 <__assert_fail@plt+0x6cd4>
   17d44:	ldr	r0, [fp, #-32]	; 0xffffffe0
   17d48:	ldr	r2, [fp, #-36]	; 0xffffffdc
   17d4c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   17d50:	ldr	r1, [fp, #-44]	; 0xffffffd4
   17d54:	movw	ip, #4268	; 0x10ac
   17d58:	movt	ip, #2
   17d5c:	str	r1, [fp, #-48]	; 0xffffffd0
   17d60:	mov	r1, ip
   17d64:	ldr	ip, [fp, #-48]	; 0xffffffd0
   17d68:	str	ip, [sp]
   17d6c:	bl	10fc8 <fprintf@plt>
   17d70:	b	17d8c <__assert_fail@plt+0x6cec>
   17d74:	ldr	r0, [fp, #-32]	; 0xffffffe0
   17d78:	ldr	r2, [fp, #-40]	; 0xffffffd8
   17d7c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   17d80:	movw	r1, #4280	; 0x10b8
   17d84:	movt	r1, #2
   17d88:	bl	10fc8 <fprintf@plt>
   17d8c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   17d90:	movw	r1, #4287	; 0x10bf
   17d94:	movt	r1, #2
   17d98:	str	r0, [fp, #-52]	; 0xffffffcc
   17d9c:	mov	r0, r1
   17da0:	bl	10fa4 <gettext@plt>
   17da4:	movw	r1, #5005	; 0x138d
   17da8:	movt	r1, #2
   17dac:	movw	r3, #2022	; 0x7e6
   17db0:	ldr	r2, [fp, #-52]	; 0xffffffcc
   17db4:	str	r0, [fp, #-56]	; 0xffffffc8
   17db8:	mov	r0, r2
   17dbc:	ldr	r2, [fp, #-56]	; 0xffffffc8
   17dc0:	bl	10fc8 <fprintf@plt>
   17dc4:	ldr	r1, [fp, #-32]	; 0xffffffe0
   17dc8:	movw	r2, #1606	; 0x646
   17dcc:	movt	r2, #2
   17dd0:	str	r0, [fp, #-60]	; 0xffffffc4
   17dd4:	mov	r0, r2
   17dd8:	str	r2, [fp, #-64]	; 0xffffffc0
   17ddc:	bl	10e30 <fputs_unlocked@plt>
   17de0:	ldr	r1, [fp, #-32]	; 0xffffffe0
   17de4:	movw	r2, #4291	; 0x10c3
   17de8:	movt	r2, #2
   17dec:	str	r0, [fp, #-68]	; 0xffffffbc
   17df0:	mov	r0, r2
   17df4:	str	r1, [fp, #-72]	; 0xffffffb8
   17df8:	bl	10fa4 <gettext@plt>
   17dfc:	movw	r2, #4462	; 0x116e
   17e00:	movt	r2, #2
   17e04:	ldr	r1, [fp, #-72]	; 0xffffffb8
   17e08:	str	r0, [fp, #-76]	; 0xffffffb4
   17e0c:	mov	r0, r1
   17e10:	ldr	r1, [fp, #-76]	; 0xffffffb4
   17e14:	bl	10fc8 <fprintf@plt>
   17e18:	ldr	r1, [fp, #-32]	; 0xffffffe0
   17e1c:	ldr	r2, [fp, #-64]	; 0xffffffc0
   17e20:	str	r0, [fp, #-80]	; 0xffffffb0
   17e24:	mov	r0, r2
   17e28:	bl	10e30 <fputs_unlocked@plt>
   17e2c:	ldr	r1, [fp, #12]
   17e30:	cmp	r1, #9
   17e34:	str	r1, [fp, #-84]	; 0xffffffac
   17e38:	bhi	18254 <__assert_fail@plt+0x71b4>
   17e3c:	add	r0, pc, #8
   17e40:	ldr	r1, [fp, #-84]	; 0xffffffac
   17e44:	ldr	r0, [r0, r1, lsl #2]
   17e48:	mov	pc, r0
   17e4c:	andeq	r7, r1, r4, ror lr
   17e50:	andeq	r7, r1, r8, ror lr
   17e54:			; <UNDEFINED> instruction: 0x00017eb0
   17e58:	strdeq	r7, [r1], -r0
   17e5c:	andeq	r7, r1, r8, asr #30
   17e60:	andeq	r7, r1, ip, lsr #31
   17e64:	andeq	r8, r1, ip, lsl r0
   17e68:	muleq	r1, r8, r0
   17e6c:	andeq	r8, r1, r0, lsr #2
   17e70:			; <UNDEFINED> instruction: 0x000181b4
   17e74:	b	182f0 <__assert_fail@plt+0x7250>
   17e78:	ldr	r0, [fp, #-32]	; 0xffffffe0
   17e7c:	movw	r1, #4496	; 0x1190
   17e80:	movt	r1, #2
   17e84:	str	r0, [fp, #-88]	; 0xffffffa8
   17e88:	mov	r0, r1
   17e8c:	bl	10fa4 <gettext@plt>
   17e90:	ldr	r1, [fp, #8]
   17e94:	ldr	r2, [r1]
   17e98:	ldr	r1, [fp, #-88]	; 0xffffffa8
   17e9c:	str	r0, [fp, #-92]	; 0xffffffa4
   17ea0:	mov	r0, r1
   17ea4:	ldr	r1, [fp, #-92]	; 0xffffffa4
   17ea8:	bl	10fc8 <fprintf@plt>
   17eac:	b	182f0 <__assert_fail@plt+0x7250>
   17eb0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   17eb4:	movw	r1, #4512	; 0x11a0
   17eb8:	movt	r1, #2
   17ebc:	str	r0, [fp, #-96]	; 0xffffffa0
   17ec0:	mov	r0, r1
   17ec4:	bl	10fa4 <gettext@plt>
   17ec8:	ldr	r1, [fp, #8]
   17ecc:	ldr	r2, [r1]
   17ed0:	ldr	r1, [fp, #8]
   17ed4:	ldr	r3, [r1, #4]
   17ed8:	ldr	r1, [fp, #-96]	; 0xffffffa0
   17edc:	str	r0, [fp, #-100]	; 0xffffff9c
   17ee0:	mov	r0, r1
   17ee4:	ldr	r1, [fp, #-100]	; 0xffffff9c
   17ee8:	bl	10fc8 <fprintf@plt>
   17eec:	b	182f0 <__assert_fail@plt+0x7250>
   17ef0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   17ef4:	movw	r1, #4535	; 0x11b7
   17ef8:	movt	r1, #2
   17efc:	str	r0, [fp, #-104]	; 0xffffff98
   17f00:	mov	r0, r1
   17f04:	bl	10fa4 <gettext@plt>
   17f08:	ldr	r1, [fp, #8]
   17f0c:	ldr	r2, [r1]
   17f10:	ldr	r1, [fp, #8]
   17f14:	ldr	r3, [r1, #4]
   17f18:	ldr	r1, [fp, #8]
   17f1c:	ldr	r1, [r1, #8]
   17f20:	ldr	ip, [fp, #-104]	; 0xffffff98
   17f24:	str	r0, [fp, #-108]	; 0xffffff94
   17f28:	mov	r0, ip
   17f2c:	ldr	lr, [fp, #-108]	; 0xffffff94
   17f30:	str	r1, [sp, #112]	; 0x70
   17f34:	mov	r1, lr
   17f38:	ldr	r4, [sp, #112]	; 0x70
   17f3c:	str	r4, [sp]
   17f40:	bl	10fc8 <fprintf@plt>
   17f44:	b	182f0 <__assert_fail@plt+0x7250>
   17f48:	ldr	r0, [fp, #-32]	; 0xffffffe0
   17f4c:	movw	r1, #4563	; 0x11d3
   17f50:	movt	r1, #2
   17f54:	str	r0, [sp, #108]	; 0x6c
   17f58:	mov	r0, r1
   17f5c:	bl	10fa4 <gettext@plt>
   17f60:	ldr	r1, [fp, #8]
   17f64:	ldr	r2, [r1]
   17f68:	ldr	r1, [fp, #8]
   17f6c:	ldr	r3, [r1, #4]
   17f70:	ldr	r1, [fp, #8]
   17f74:	ldr	r1, [r1, #8]
   17f78:	ldr	ip, [fp, #8]
   17f7c:	ldr	ip, [ip, #12]
   17f80:	ldr	lr, [sp, #108]	; 0x6c
   17f84:	str	r0, [sp, #104]	; 0x68
   17f88:	mov	r0, lr
   17f8c:	ldr	r4, [sp, #104]	; 0x68
   17f90:	str	r1, [sp, #100]	; 0x64
   17f94:	mov	r1, r4
   17f98:	ldr	r5, [sp, #100]	; 0x64
   17f9c:	str	r5, [sp]
   17fa0:	str	ip, [sp, #4]
   17fa4:	bl	10fc8 <fprintf@plt>
   17fa8:	b	182f0 <__assert_fail@plt+0x7250>
   17fac:	ldr	r0, [fp, #-32]	; 0xffffffe0
   17fb0:	movw	r1, #4595	; 0x11f3
   17fb4:	movt	r1, #2
   17fb8:	str	r0, [sp, #96]	; 0x60
   17fbc:	mov	r0, r1
   17fc0:	bl	10fa4 <gettext@plt>
   17fc4:	ldr	r1, [fp, #8]
   17fc8:	ldr	r2, [r1]
   17fcc:	ldr	r1, [fp, #8]
   17fd0:	ldr	r3, [r1, #4]
   17fd4:	ldr	r1, [fp, #8]
   17fd8:	ldr	r1, [r1, #8]
   17fdc:	ldr	ip, [fp, #8]
   17fe0:	ldr	ip, [ip, #12]
   17fe4:	ldr	lr, [fp, #8]
   17fe8:	ldr	lr, [lr, #16]
   17fec:	ldr	r4, [sp, #96]	; 0x60
   17ff0:	str	r0, [sp, #92]	; 0x5c
   17ff4:	mov	r0, r4
   17ff8:	ldr	r5, [sp, #92]	; 0x5c
   17ffc:	str	r1, [sp, #88]	; 0x58
   18000:	mov	r1, r5
   18004:	ldr	r6, [sp, #88]	; 0x58
   18008:	str	r6, [sp]
   1800c:	str	ip, [sp, #4]
   18010:	str	lr, [sp, #8]
   18014:	bl	10fc8 <fprintf@plt>
   18018:	b	182f0 <__assert_fail@plt+0x7250>
   1801c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18020:	movw	r1, #4631	; 0x1217
   18024:	movt	r1, #2
   18028:	str	r0, [sp, #84]	; 0x54
   1802c:	mov	r0, r1
   18030:	bl	10fa4 <gettext@plt>
   18034:	ldr	r1, [fp, #8]
   18038:	ldr	r2, [r1]
   1803c:	ldr	r1, [fp, #8]
   18040:	ldr	r3, [r1, #4]
   18044:	ldr	r1, [fp, #8]
   18048:	ldr	r1, [r1, #8]
   1804c:	ldr	ip, [fp, #8]
   18050:	ldr	ip, [ip, #12]
   18054:	ldr	lr, [fp, #8]
   18058:	ldr	lr, [lr, #16]
   1805c:	ldr	r4, [fp, #8]
   18060:	ldr	r4, [r4, #20]
   18064:	ldr	r5, [sp, #84]	; 0x54
   18068:	str	r0, [sp, #80]	; 0x50
   1806c:	mov	r0, r5
   18070:	ldr	r6, [sp, #80]	; 0x50
   18074:	str	r1, [sp, #76]	; 0x4c
   18078:	mov	r1, r6
   1807c:	ldr	r7, [sp, #76]	; 0x4c
   18080:	str	r7, [sp]
   18084:	str	ip, [sp, #4]
   18088:	str	lr, [sp, #8]
   1808c:	str	r4, [sp, #12]
   18090:	bl	10fc8 <fprintf@plt>
   18094:	b	182f0 <__assert_fail@plt+0x7250>
   18098:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1809c:	movw	r1, #4671	; 0x123f
   180a0:	movt	r1, #2
   180a4:	str	r0, [sp, #72]	; 0x48
   180a8:	mov	r0, r1
   180ac:	bl	10fa4 <gettext@plt>
   180b0:	ldr	r1, [fp, #8]
   180b4:	ldr	r2, [r1]
   180b8:	ldr	r1, [fp, #8]
   180bc:	ldr	r3, [r1, #4]
   180c0:	ldr	r1, [fp, #8]
   180c4:	ldr	r1, [r1, #8]
   180c8:	ldr	ip, [fp, #8]
   180cc:	ldr	ip, [ip, #12]
   180d0:	ldr	lr, [fp, #8]
   180d4:	ldr	lr, [lr, #16]
   180d8:	ldr	r4, [fp, #8]
   180dc:	ldr	r4, [r4, #20]
   180e0:	ldr	r5, [fp, #8]
   180e4:	ldr	r5, [r5, #24]
   180e8:	ldr	r6, [sp, #72]	; 0x48
   180ec:	str	r0, [sp, #68]	; 0x44
   180f0:	mov	r0, r6
   180f4:	ldr	r7, [sp, #68]	; 0x44
   180f8:	str	r1, [sp, #64]	; 0x40
   180fc:	mov	r1, r7
   18100:	ldr	r8, [sp, #64]	; 0x40
   18104:	str	r8, [sp]
   18108:	str	ip, [sp, #4]
   1810c:	str	lr, [sp, #8]
   18110:	str	r4, [sp, #12]
   18114:	str	r5, [sp, #16]
   18118:	bl	10fc8 <fprintf@plt>
   1811c:	b	182f0 <__assert_fail@plt+0x7250>
   18120:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18124:	movw	r1, #4715	; 0x126b
   18128:	movt	r1, #2
   1812c:	str	r0, [sp, #60]	; 0x3c
   18130:	mov	r0, r1
   18134:	bl	10fa4 <gettext@plt>
   18138:	ldr	r1, [fp, #8]
   1813c:	ldr	r2, [r1]
   18140:	ldr	r1, [fp, #8]
   18144:	ldr	r3, [r1, #4]
   18148:	ldr	r1, [fp, #8]
   1814c:	ldr	r1, [r1, #8]
   18150:	ldr	ip, [fp, #8]
   18154:	ldr	ip, [ip, #12]
   18158:	ldr	lr, [fp, #8]
   1815c:	ldr	lr, [lr, #16]
   18160:	ldr	r4, [fp, #8]
   18164:	ldr	r4, [r4, #20]
   18168:	ldr	r5, [fp, #8]
   1816c:	ldr	r5, [r5, #24]
   18170:	ldr	r6, [fp, #8]
   18174:	ldr	r6, [r6, #28]
   18178:	ldr	r7, [sp, #60]	; 0x3c
   1817c:	str	r0, [sp, #56]	; 0x38
   18180:	mov	r0, r7
   18184:	ldr	r8, [sp, #56]	; 0x38
   18188:	str	r1, [sp, #52]	; 0x34
   1818c:	mov	r1, r8
   18190:	ldr	r9, [sp, #52]	; 0x34
   18194:	str	r9, [sp]
   18198:	str	ip, [sp, #4]
   1819c:	str	lr, [sp, #8]
   181a0:	str	r4, [sp, #12]
   181a4:	str	r5, [sp, #16]
   181a8:	str	r6, [sp, #20]
   181ac:	bl	10fc8 <fprintf@plt>
   181b0:	b	182f0 <__assert_fail@plt+0x7250>
   181b4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   181b8:	movw	r1, #4763	; 0x129b
   181bc:	movt	r1, #2
   181c0:	str	r0, [sp, #48]	; 0x30
   181c4:	mov	r0, r1
   181c8:	bl	10fa4 <gettext@plt>
   181cc:	ldr	r1, [fp, #8]
   181d0:	ldr	r2, [r1]
   181d4:	ldr	r1, [fp, #8]
   181d8:	ldr	r3, [r1, #4]
   181dc:	ldr	r1, [fp, #8]
   181e0:	ldr	r1, [r1, #8]
   181e4:	ldr	ip, [fp, #8]
   181e8:	ldr	ip, [ip, #12]
   181ec:	ldr	lr, [fp, #8]
   181f0:	ldr	lr, [lr, #16]
   181f4:	ldr	r4, [fp, #8]
   181f8:	ldr	r4, [r4, #20]
   181fc:	ldr	r5, [fp, #8]
   18200:	ldr	r5, [r5, #24]
   18204:	ldr	r6, [fp, #8]
   18208:	ldr	r6, [r6, #28]
   1820c:	ldr	r7, [fp, #8]
   18210:	ldr	r7, [r7, #32]
   18214:	ldr	r8, [sp, #48]	; 0x30
   18218:	str	r0, [sp, #44]	; 0x2c
   1821c:	mov	r0, r8
   18220:	ldr	r9, [sp, #44]	; 0x2c
   18224:	str	r1, [sp, #40]	; 0x28
   18228:	mov	r1, r9
   1822c:	ldr	sl, [sp, #40]	; 0x28
   18230:	str	sl, [sp]
   18234:	str	ip, [sp, #4]
   18238:	str	lr, [sp, #8]
   1823c:	str	r4, [sp, #12]
   18240:	str	r5, [sp, #16]
   18244:	str	r6, [sp, #20]
   18248:	str	r7, [sp, #24]
   1824c:	bl	10fc8 <fprintf@plt>
   18250:	b	182f0 <__assert_fail@plt+0x7250>
   18254:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18258:	movw	r1, #4815	; 0x12cf
   1825c:	movt	r1, #2
   18260:	str	r0, [sp, #36]	; 0x24
   18264:	mov	r0, r1
   18268:	bl	10fa4 <gettext@plt>
   1826c:	ldr	r1, [fp, #8]
   18270:	ldr	r2, [r1]
   18274:	ldr	r1, [fp, #8]
   18278:	ldr	r3, [r1, #4]
   1827c:	ldr	r1, [fp, #8]
   18280:	ldr	r1, [r1, #8]
   18284:	ldr	ip, [fp, #8]
   18288:	ldr	ip, [ip, #12]
   1828c:	ldr	lr, [fp, #8]
   18290:	ldr	lr, [lr, #16]
   18294:	ldr	r4, [fp, #8]
   18298:	ldr	r4, [r4, #20]
   1829c:	ldr	r5, [fp, #8]
   182a0:	ldr	r5, [r5, #24]
   182a4:	ldr	r6, [fp, #8]
   182a8:	ldr	r6, [r6, #28]
   182ac:	ldr	r7, [fp, #8]
   182b0:	ldr	r7, [r7, #32]
   182b4:	ldr	r8, [sp, #36]	; 0x24
   182b8:	str	r0, [sp, #32]
   182bc:	mov	r0, r8
   182c0:	ldr	r9, [sp, #32]
   182c4:	str	r1, [sp, #28]
   182c8:	mov	r1, r9
   182cc:	ldr	sl, [sp, #28]
   182d0:	str	sl, [sp]
   182d4:	str	ip, [sp, #4]
   182d8:	str	lr, [sp, #8]
   182dc:	str	r4, [sp, #12]
   182e0:	str	r5, [sp, #16]
   182e4:	str	r6, [sp, #20]
   182e8:	str	r7, [sp, #24]
   182ec:	bl	10fc8 <fprintf@plt>
   182f0:	sub	sp, fp, #28
   182f4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   182f8:	push	{fp, lr}
   182fc:	mov	fp, sp
   18300:	sub	sp, sp, #32
   18304:	ldr	ip, [fp, #8]
   18308:	str	r0, [fp, #-4]
   1830c:	str	r1, [fp, #-8]
   18310:	str	r2, [fp, #-12]
   18314:	str	r3, [sp, #16]
   18318:	movw	r0, #0
   1831c:	str	r0, [sp, #12]
   18320:	ldr	r0, [fp, #8]
   18324:	ldr	r1, [sp, #12]
   18328:	add	r0, r0, r1, lsl #2
   1832c:	ldr	r0, [r0]
   18330:	movw	r1, #0
   18334:	cmp	r0, r1
   18338:	beq	18350 <__assert_fail@plt+0x72b0>
   1833c:	b	18340 <__assert_fail@plt+0x72a0>
   18340:	ldr	r0, [sp, #12]
   18344:	add	r0, r0, #1
   18348:	str	r0, [sp, #12]
   1834c:	b	18320 <__assert_fail@plt+0x7280>
   18350:	ldr	r0, [fp, #-4]
   18354:	ldr	r1, [fp, #-8]
   18358:	ldr	r2, [fp, #-12]
   1835c:	ldr	r3, [sp, #16]
   18360:	ldr	ip, [fp, #8]
   18364:	ldr	lr, [sp, #12]
   18368:	str	ip, [sp]
   1836c:	str	lr, [sp, #4]
   18370:	bl	17d10 <__assert_fail@plt+0x6c70>
   18374:	mov	sp, fp
   18378:	pop	{fp, pc}
   1837c:	push	{fp, lr}
   18380:	mov	fp, sp
   18384:	sub	sp, sp, #80	; 0x50
   18388:	ldr	ip, [fp, #8]
   1838c:	str	ip, [fp, #-4]
   18390:	str	r0, [fp, #-8]
   18394:	str	r1, [fp, #-12]
   18398:	str	r2, [fp, #-16]
   1839c:	str	r3, [fp, #-20]	; 0xffffffec
   183a0:	movw	r0, #0
   183a4:	str	r0, [fp, #-24]	; 0xffffffe8
   183a8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   183ac:	cmp	r0, #10
   183b0:	movw	r0, #0
   183b4:	str	r0, [sp, #12]
   183b8:	bcs	183f0 <__assert_fail@plt+0x7350>
   183bc:	ldr	r0, [fp, #-4]
   183c0:	add	r1, r0, #4
   183c4:	str	r1, [fp, #-4]
   183c8:	ldr	r0, [r0]
   183cc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   183d0:	add	r2, sp, #16
   183d4:	add	r1, r2, r1, lsl #2
   183d8:	str	r0, [r1]
   183dc:	movw	r1, #0
   183e0:	cmp	r0, r1
   183e4:	movw	r0, #0
   183e8:	movne	r0, #1
   183ec:	str	r0, [sp, #12]
   183f0:	ldr	r0, [sp, #12]
   183f4:	tst	r0, #1
   183f8:	beq	18410 <__assert_fail@plt+0x7370>
   183fc:	b	18400 <__assert_fail@plt+0x7360>
   18400:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18404:	add	r0, r0, #1
   18408:	str	r0, [fp, #-24]	; 0xffffffe8
   1840c:	b	183a8 <__assert_fail@plt+0x7308>
   18410:	add	r0, sp, #16
   18414:	ldr	r1, [fp, #-8]
   18418:	ldr	r2, [fp, #-12]
   1841c:	ldr	r3, [fp, #-16]
   18420:	ldr	ip, [fp, #-20]	; 0xffffffec
   18424:	ldr	lr, [fp, #-24]	; 0xffffffe8
   18428:	str	r0, [sp, #8]
   1842c:	mov	r0, r1
   18430:	mov	r1, r2
   18434:	mov	r2, r3
   18438:	mov	r3, ip
   1843c:	ldr	ip, [sp, #8]
   18440:	str	ip, [sp]
   18444:	str	lr, [sp, #4]
   18448:	bl	17d10 <__assert_fail@plt+0x6c70>
   1844c:	mov	sp, fp
   18450:	pop	{fp, pc}
   18454:	push	{fp, lr}
   18458:	mov	fp, sp
   1845c:	sub	sp, sp, #24
   18460:	str	r0, [fp, #-4]
   18464:	str	r1, [fp, #-8]
   18468:	str	r2, [sp, #12]
   1846c:	str	r3, [sp, #8]
   18470:	add	r0, fp, #8
   18474:	str	r0, [sp, #4]
   18478:	ldr	r0, [fp, #-4]
   1847c:	ldr	r1, [fp, #-8]
   18480:	ldr	r2, [sp, #12]
   18484:	ldr	r3, [sp, #8]
   18488:	ldr	ip, [sp, #4]
   1848c:	mov	lr, sp
   18490:	str	ip, [lr]
   18494:	bl	1837c <__assert_fail@plt+0x72dc>
   18498:	add	r0, sp, #4
   1849c:	mov	sp, fp
   184a0:	pop	{fp, pc}
   184a4:	push	{fp, lr}
   184a8:	mov	fp, sp
   184ac:	sub	sp, sp, #16
   184b0:	movw	r0, #8532	; 0x2154
   184b4:	movt	r0, #3
   184b8:	ldr	r1, [r0]
   184bc:	movw	r0, #1606	; 0x646
   184c0:	movt	r0, #2
   184c4:	bl	10e30 <fputs_unlocked@plt>
   184c8:	movw	r1, #4875	; 0x130b
   184cc:	movt	r1, #2
   184d0:	str	r0, [fp, #-4]
   184d4:	mov	r0, r1
   184d8:	bl	10fa4 <gettext@plt>
   184dc:	movw	r1, #4895	; 0x131f
   184e0:	movt	r1, #2
   184e4:	bl	10e60 <printf@plt>
   184e8:	movw	r1, #4917	; 0x1335
   184ec:	movt	r1, #2
   184f0:	str	r0, [sp, #8]
   184f4:	mov	r0, r1
   184f8:	bl	10fa4 <gettext@plt>
   184fc:	movw	r1, #919	; 0x397
   18500:	movt	r1, #2
   18504:	movw	r2, #1415	; 0x587
   18508:	movt	r2, #2
   1850c:	bl	10e60 <printf@plt>
   18510:	movw	r1, #4937	; 0x1349
   18514:	movt	r1, #2
   18518:	str	r0, [sp, #4]
   1851c:	mov	r0, r1
   18520:	bl	10fa4 <gettext@plt>
   18524:	movw	r1, #4976	; 0x1370
   18528:	movt	r1, #2
   1852c:	bl	10e60 <printf@plt>
   18530:	mov	sp, fp
   18534:	pop	{fp, pc}
   18538:	push	{fp, lr}
   1853c:	mov	fp, sp
   18540:	sub	sp, sp, #16
   18544:	str	r0, [fp, #-4]
   18548:	str	r1, [sp, #8]
   1854c:	str	r2, [sp, #4]
   18550:	ldr	r0, [fp, #-4]
   18554:	ldr	r1, [sp, #8]
   18558:	ldr	r2, [sp, #4]
   1855c:	bl	18568 <__assert_fail@plt+0x74c8>
   18560:	mov	sp, fp
   18564:	pop	{fp, pc}
   18568:	push	{fp, lr}
   1856c:	mov	fp, sp
   18570:	sub	sp, sp, #16
   18574:	str	r0, [fp, #-4]
   18578:	str	r1, [sp, #8]
   1857c:	str	r2, [sp, #4]
   18580:	ldr	r0, [fp, #-4]
   18584:	ldr	r1, [sp, #8]
   18588:	ldr	r2, [sp, #4]
   1858c:	bl	1dbfc <__assert_fail@plt+0xcb5c>
   18590:	str	r0, [sp]
   18594:	ldr	r0, [sp]
   18598:	movw	r1, #0
   1859c:	cmp	r0, r1
   185a0:	bne	185d0 <__assert_fail@plt+0x7530>
   185a4:	ldr	r0, [fp, #-4]
   185a8:	movw	r1, #0
   185ac:	cmp	r0, r1
   185b0:	beq	185cc <__assert_fail@plt+0x752c>
   185b4:	ldr	r0, [sp, #8]
   185b8:	cmp	r0, #0
   185bc:	beq	185d0 <__assert_fail@plt+0x7530>
   185c0:	ldr	r0, [sp, #4]
   185c4:	cmp	r0, #0
   185c8:	beq	185d0 <__assert_fail@plt+0x7530>
   185cc:	bl	1b314 <__assert_fail@plt+0xa274>
   185d0:	ldr	r0, [sp]
   185d4:	mov	sp, fp
   185d8:	pop	{fp, pc}
   185dc:	push	{fp, lr}
   185e0:	mov	fp, sp
   185e4:	sub	sp, sp, #8
   185e8:	str	r0, [sp, #4]
   185ec:	ldr	r0, [sp, #4]
   185f0:	bl	1d3a0 <__assert_fail@plt+0xc300>
   185f4:	bl	18600 <__assert_fail@plt+0x7560>
   185f8:	mov	sp, fp
   185fc:	pop	{fp, pc}
   18600:	push	{fp, lr}
   18604:	mov	fp, sp
   18608:	sub	sp, sp, #8
   1860c:	str	r0, [sp, #4]
   18610:	ldr	r0, [sp, #4]
   18614:	movw	r1, #0
   18618:	cmp	r0, r1
   1861c:	bne	18624 <__assert_fail@plt+0x7584>
   18620:	bl	1b314 <__assert_fail@plt+0xa274>
   18624:	ldr	r0, [sp, #4]
   18628:	mov	sp, fp
   1862c:	pop	{fp, pc}
   18630:	push	{fp, lr}
   18634:	mov	fp, sp
   18638:	sub	sp, sp, #8
   1863c:	str	r0, [sp, #4]
   18640:	ldr	r0, [sp, #4]
   18644:	bl	1d938 <__assert_fail@plt+0xc898>
   18648:	bl	18600 <__assert_fail@plt+0x7560>
   1864c:	mov	sp, fp
   18650:	pop	{fp, pc}
   18654:	push	{fp, lr}
   18658:	mov	fp, sp
   1865c:	sub	sp, sp, #8
   18660:	str	r0, [sp, #4]
   18664:	ldr	r0, [sp, #4]
   18668:	bl	185dc <__assert_fail@plt+0x753c>
   1866c:	mov	sp, fp
   18670:	pop	{fp, pc}
   18674:	push	{fp, lr}
   18678:	mov	fp, sp
   1867c:	sub	sp, sp, #16
   18680:	str	r0, [fp, #-4]
   18684:	str	r1, [sp, #8]
   18688:	ldr	r0, [fp, #-4]
   1868c:	ldr	r1, [sp, #8]
   18690:	bl	1d410 <__assert_fail@plt+0xc370>
   18694:	str	r0, [sp, #4]
   18698:	ldr	r0, [sp, #4]
   1869c:	movw	r1, #0
   186a0:	cmp	r0, r1
   186a4:	bne	186c8 <__assert_fail@plt+0x7628>
   186a8:	ldr	r0, [fp, #-4]
   186ac:	movw	r1, #0
   186b0:	cmp	r0, r1
   186b4:	beq	186c4 <__assert_fail@plt+0x7624>
   186b8:	ldr	r0, [sp, #8]
   186bc:	cmp	r0, #0
   186c0:	beq	186c8 <__assert_fail@plt+0x7628>
   186c4:	bl	1b314 <__assert_fail@plt+0xa274>
   186c8:	ldr	r0, [sp, #4]
   186cc:	mov	sp, fp
   186d0:	pop	{fp, pc}
   186d4:	push	{fp, lr}
   186d8:	mov	fp, sp
   186dc:	sub	sp, sp, #8
   186e0:	str	r0, [sp, #4]
   186e4:	str	r1, [sp]
   186e8:	ldr	r0, [sp, #4]
   186ec:	ldr	r1, [sp]
   186f0:	bl	1d978 <__assert_fail@plt+0xc8d8>
   186f4:	bl	18600 <__assert_fail@plt+0x7560>
   186f8:	mov	sp, fp
   186fc:	pop	{fp, pc}
   18700:	push	{fp, lr}
   18704:	mov	fp, sp
   18708:	sub	sp, sp, #16
   1870c:	str	r0, [fp, #-4]
   18710:	str	r1, [sp, #8]
   18714:	str	r2, [sp, #4]
   18718:	ldr	r0, [fp, #-4]
   1871c:	ldr	r1, [sp, #8]
   18720:	ldr	r2, [sp, #4]
   18724:	bl	1da70 <__assert_fail@plt+0xc9d0>
   18728:	bl	18600 <__assert_fail@plt+0x7560>
   1872c:	mov	sp, fp
   18730:	pop	{fp, pc}
   18734:	push	{fp, lr}
   18738:	mov	fp, sp
   1873c:	sub	sp, sp, #8
   18740:	str	r0, [sp, #4]
   18744:	str	r1, [sp]
   18748:	ldr	r1, [sp, #4]
   1874c:	ldr	r2, [sp]
   18750:	movw	r0, #0
   18754:	bl	18568 <__assert_fail@plt+0x74c8>
   18758:	mov	sp, fp
   1875c:	pop	{fp, pc}
   18760:	push	{fp, lr}
   18764:	mov	fp, sp
   18768:	sub	sp, sp, #8
   1876c:	str	r0, [sp, #4]
   18770:	str	r1, [sp]
   18774:	ldr	r1, [sp, #4]
   18778:	ldr	r2, [sp]
   1877c:	movw	r0, #0
   18780:	bl	18700 <__assert_fail@plt+0x7660>
   18784:	mov	sp, fp
   18788:	pop	{fp, pc}
   1878c:	push	{fp, lr}
   18790:	mov	fp, sp
   18794:	sub	sp, sp, #8
   18798:	str	r0, [sp, #4]
   1879c:	str	r1, [sp]
   187a0:	ldr	r0, [sp, #4]
   187a4:	ldr	r1, [sp]
   187a8:	movw	r2, #1
   187ac:	bl	187b8 <__assert_fail@plt+0x7718>
   187b0:	mov	sp, fp
   187b4:	pop	{fp, pc}
   187b8:	push	{fp, lr}
   187bc:	mov	fp, sp
   187c0:	sub	sp, sp, #16
   187c4:	str	r0, [fp, #-4]
   187c8:	str	r1, [sp, #8]
   187cc:	str	r2, [sp, #4]
   187d0:	ldr	r0, [sp, #8]
   187d4:	ldr	r0, [r0]
   187d8:	str	r0, [sp]
   187dc:	ldr	r0, [fp, #-4]
   187e0:	movw	r1, #0
   187e4:	cmp	r0, r1
   187e8:	bne	18834 <__assert_fail@plt+0x7794>
   187ec:	ldr	r0, [sp]
   187f0:	cmp	r0, #0
   187f4:	bne	18830 <__assert_fail@plt+0x7790>
   187f8:	ldr	r0, [sp, #4]
   187fc:	movw	r1, #64	; 0x40
   18800:	udiv	r0, r1, r0
   18804:	str	r0, [sp]
   18808:	ldr	r0, [sp]
   1880c:	cmp	r0, #0
   18810:	movw	r0, #0
   18814:	movne	r0, #1
   18818:	mvn	r1, #0
   1881c:	eor	r0, r0, r1
   18820:	and	r0, r0, #1
   18824:	ldr	r1, [sp]
   18828:	add	r0, r1, r0
   1882c:	str	r0, [sp]
   18830:	b	18864 <__assert_fail@plt+0x77c4>
   18834:	ldr	r0, [sp]
   18838:	ldr	r1, [sp]
   1883c:	lsr	r1, r1, #1
   18840:	add	r1, r1, #1
   18844:	adds	r0, r0, r1
   18848:	mov	r1, #0
   1884c:	adc	r1, r1, #0
   18850:	str	r0, [sp]
   18854:	tst	r1, #1
   18858:	beq	18860 <__assert_fail@plt+0x77c0>
   1885c:	bl	1b314 <__assert_fail@plt+0xa274>
   18860:	b	18864 <__assert_fail@plt+0x77c4>
   18864:	ldr	r0, [fp, #-4]
   18868:	ldr	r1, [sp]
   1886c:	ldr	r2, [sp, #4]
   18870:	bl	18568 <__assert_fail@plt+0x74c8>
   18874:	str	r0, [fp, #-4]
   18878:	ldr	r0, [sp]
   1887c:	ldr	r1, [sp, #8]
   18880:	str	r0, [r1]
   18884:	ldr	r0, [fp, #-4]
   18888:	mov	sp, fp
   1888c:	pop	{fp, pc}
   18890:	push	{fp, lr}
   18894:	mov	fp, sp
   18898:	sub	sp, sp, #216	; 0xd8
   1889c:	ldr	ip, [fp, #8]
   188a0:	str	r0, [fp, #-4]
   188a4:	str	r1, [fp, #-8]
   188a8:	str	r2, [fp, #-12]
   188ac:	str	r3, [fp, #-16]
   188b0:	ldr	r0, [fp, #-8]
   188b4:	ldr	r0, [r0]
   188b8:	str	r0, [fp, #-20]	; 0xffffffec
   188bc:	ldr	r0, [fp, #-20]	; 0xffffffec
   188c0:	ldr	r1, [fp, #-20]	; 0xffffffec
   188c4:	asr	r1, r1, #1
   188c8:	add	r1, r0, r1
   188cc:	mov	r2, #1
   188d0:	cmp	r1, r0
   188d4:	movwvc	r2, #0
   188d8:	str	r1, [fp, #-24]	; 0xffffffe8
   188dc:	tst	r2, #1
   188e0:	beq	188ec <__assert_fail@plt+0x784c>
   188e4:	ldr	r0, [pc, #4036]	; 198b0 <__assert_fail@plt+0x8810>
   188e8:	str	r0, [fp, #-24]	; 0xffffffe8
   188ec:	ldr	r0, [fp, #-16]
   188f0:	movw	r1, #0
   188f4:	cmp	r1, r0
   188f8:	bgt	18914 <__assert_fail@plt+0x7874>
   188fc:	ldr	r0, [fp, #-16]
   18900:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18904:	cmp	r0, r1
   18908:	bge	18914 <__assert_fail@plt+0x7874>
   1890c:	ldr	r0, [fp, #-16]
   18910:	str	r0, [fp, #-24]	; 0xffffffe8
   18914:	b	18cec <__assert_fail@plt+0x7c4c>
   18918:	b	1891c <__assert_fail@plt+0x787c>
   1891c:	ldr	r0, [fp, #8]
   18920:	cmp	r0, #0
   18924:	bge	18a38 <__assert_fail@plt+0x7998>
   18928:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1892c:	cmp	r0, #0
   18930:	bge	189bc <__assert_fail@plt+0x791c>
   18934:	b	18938 <__assert_fail@plt+0x7898>
   18938:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1893c:	ldr	r1, [fp, #8]
   18940:	movw	r2, #127	; 0x7f
   18944:	sdiv	r1, r2, r1
   18948:	cmp	r0, r1
   1894c:	blt	18ad8 <__assert_fail@plt+0x7a38>
   18950:	b	18af0 <__assert_fail@plt+0x7a50>
   18954:	b	18958 <__assert_fail@plt+0x78b8>
   18958:	ldr	r0, [pc, #4084]	; 19954 <__assert_fail@plt+0x88b4>
   1895c:	ldr	r1, [fp, #8]
   18960:	cmp	r1, r0
   18964:	blt	1897c <__assert_fail@plt+0x78dc>
   18968:	b	18988 <__assert_fail@plt+0x78e8>
   1896c:	ldr	r0, [fp, #8]
   18970:	movw	r1, #0
   18974:	cmp	r1, r0
   18978:	bge	18988 <__assert_fail@plt+0x78e8>
   1897c:	movw	r0, #0
   18980:	str	r0, [fp, #-36]	; 0xffffffdc
   18984:	b	189a0 <__assert_fail@plt+0x7900>
   18988:	ldr	r0, [fp, #8]
   1898c:	movw	r1, #0
   18990:	sub	r0, r1, r0
   18994:	movw	r1, #127	; 0x7f
   18998:	sdiv	r0, r1, r0
   1899c:	str	r0, [fp, #-36]	; 0xffffffdc
   189a0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   189a4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   189a8:	mvn	r2, #0
   189ac:	sub	r1, r2, r1
   189b0:	cmp	r0, r1
   189b4:	ble	18ad8 <__assert_fail@plt+0x7a38>
   189b8:	b	18af0 <__assert_fail@plt+0x7a50>
   189bc:	b	189c0 <__assert_fail@plt+0x7920>
   189c0:	b	18a1c <__assert_fail@plt+0x797c>
   189c4:	b	18a1c <__assert_fail@plt+0x797c>
   189c8:	ldr	r0, [fp, #8]
   189cc:	cmn	r0, #1
   189d0:	bne	18a1c <__assert_fail@plt+0x797c>
   189d4:	b	189d8 <__assert_fail@plt+0x7938>
   189d8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   189dc:	mvn	r1, #127	; 0x7f
   189e0:	add	r0, r0, r1
   189e4:	movw	r1, #0
   189e8:	cmp	r1, r0
   189ec:	blt	18ad8 <__assert_fail@plt+0x7a38>
   189f0:	b	18af0 <__assert_fail@plt+0x7a50>
   189f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   189f8:	movw	r1, #0
   189fc:	cmp	r1, r0
   18a00:	bge	18af0 <__assert_fail@plt+0x7a50>
   18a04:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18a08:	sub	r0, r0, #1
   18a0c:	movw	r1, #127	; 0x7f
   18a10:	cmp	r1, r0
   18a14:	blt	18ad8 <__assert_fail@plt+0x7a38>
   18a18:	b	18af0 <__assert_fail@plt+0x7a50>
   18a1c:	ldr	r0, [fp, #8]
   18a20:	mvn	r1, #127	; 0x7f
   18a24:	sdiv	r0, r1, r0
   18a28:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18a2c:	cmp	r0, r1
   18a30:	blt	18ad8 <__assert_fail@plt+0x7a38>
   18a34:	b	18af0 <__assert_fail@plt+0x7a50>
   18a38:	ldr	r0, [fp, #8]
   18a3c:	cmp	r0, #0
   18a40:	bne	18a48 <__assert_fail@plt+0x79a8>
   18a44:	b	18af0 <__assert_fail@plt+0x7a50>
   18a48:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18a4c:	cmp	r0, #0
   18a50:	bge	18ac0 <__assert_fail@plt+0x7a20>
   18a54:	b	18a58 <__assert_fail@plt+0x79b8>
   18a58:	b	18aa4 <__assert_fail@plt+0x7a04>
   18a5c:	b	18aa4 <__assert_fail@plt+0x7a04>
   18a60:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18a64:	cmn	r0, #1
   18a68:	bne	18aa4 <__assert_fail@plt+0x7a04>
   18a6c:	b	18a70 <__assert_fail@plt+0x79d0>
   18a70:	ldr	r0, [fp, #8]
   18a74:	mvn	r1, #127	; 0x7f
   18a78:	add	r0, r0, r1
   18a7c:	movw	r1, #0
   18a80:	cmp	r1, r0
   18a84:	blt	18ad8 <__assert_fail@plt+0x7a38>
   18a88:	b	18af0 <__assert_fail@plt+0x7a50>
   18a8c:	ldr	r0, [fp, #8]
   18a90:	sub	r0, r0, #1
   18a94:	movw	r1, #127	; 0x7f
   18a98:	cmp	r1, r0
   18a9c:	blt	18ad8 <__assert_fail@plt+0x7a38>
   18aa0:	b	18af0 <__assert_fail@plt+0x7a50>
   18aa4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18aa8:	mvn	r1, #127	; 0x7f
   18aac:	sdiv	r0, r1, r0
   18ab0:	ldr	r1, [fp, #8]
   18ab4:	cmp	r0, r1
   18ab8:	blt	18ad8 <__assert_fail@plt+0x7a38>
   18abc:	b	18af0 <__assert_fail@plt+0x7a50>
   18ac0:	ldr	r0, [fp, #8]
   18ac4:	movw	r1, #127	; 0x7f
   18ac8:	sdiv	r0, r1, r0
   18acc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18ad0:	cmp	r0, r1
   18ad4:	bge	18af0 <__assert_fail@plt+0x7a50>
   18ad8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18adc:	ldr	r1, [fp, #8]
   18ae0:	mul	r0, r0, r1
   18ae4:	sxtb	r0, r0
   18ae8:	str	r0, [fp, #-28]	; 0xffffffe4
   18aec:	b	19cb4 <__assert_fail@plt+0x8c14>
   18af0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18af4:	ldr	r1, [fp, #8]
   18af8:	mul	r0, r0, r1
   18afc:	sxtb	r0, r0
   18b00:	str	r0, [fp, #-28]	; 0xffffffe4
   18b04:	b	19cc0 <__assert_fail@plt+0x8c20>
   18b08:	ldr	r0, [fp, #8]
   18b0c:	cmp	r0, #0
   18b10:	bge	18c20 <__assert_fail@plt+0x7b80>
   18b14:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18b18:	cmp	r0, #0
   18b1c:	bge	18ba8 <__assert_fail@plt+0x7b08>
   18b20:	b	18b24 <__assert_fail@plt+0x7a84>
   18b24:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18b28:	ldr	r1, [fp, #8]
   18b2c:	movw	r2, #255	; 0xff
   18b30:	sdiv	r1, r2, r1
   18b34:	cmp	r0, r1
   18b38:	blt	18cbc <__assert_fail@plt+0x7c1c>
   18b3c:	b	18cd4 <__assert_fail@plt+0x7c34>
   18b40:	b	18b44 <__assert_fail@plt+0x7aa4>
   18b44:	ldr	r0, [pc, #3592]	; 19954 <__assert_fail@plt+0x88b4>
   18b48:	ldr	r1, [fp, #8]
   18b4c:	cmp	r1, r0
   18b50:	blt	18b68 <__assert_fail@plt+0x7ac8>
   18b54:	b	18b74 <__assert_fail@plt+0x7ad4>
   18b58:	ldr	r0, [fp, #8]
   18b5c:	movw	r1, #0
   18b60:	cmp	r1, r0
   18b64:	bge	18b74 <__assert_fail@plt+0x7ad4>
   18b68:	movw	r0, #0
   18b6c:	str	r0, [fp, #-40]	; 0xffffffd8
   18b70:	b	18b8c <__assert_fail@plt+0x7aec>
   18b74:	ldr	r0, [fp, #8]
   18b78:	movw	r1, #0
   18b7c:	sub	r0, r1, r0
   18b80:	movw	r1, #255	; 0xff
   18b84:	sdiv	r0, r1, r0
   18b88:	str	r0, [fp, #-40]	; 0xffffffd8
   18b8c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   18b90:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18b94:	mvn	r2, #0
   18b98:	sub	r1, r2, r1
   18b9c:	cmp	r0, r1
   18ba0:	ble	18cbc <__assert_fail@plt+0x7c1c>
   18ba4:	b	18cd4 <__assert_fail@plt+0x7c34>
   18ba8:	b	18bac <__assert_fail@plt+0x7b0c>
   18bac:	b	18c04 <__assert_fail@plt+0x7b64>
   18bb0:	b	18c04 <__assert_fail@plt+0x7b64>
   18bb4:	ldr	r0, [fp, #8]
   18bb8:	cmn	r0, #1
   18bbc:	bne	18c04 <__assert_fail@plt+0x7b64>
   18bc0:	b	18bc4 <__assert_fail@plt+0x7b24>
   18bc4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18bc8:	add	r0, r0, #0
   18bcc:	movw	r1, #0
   18bd0:	cmp	r1, r0
   18bd4:	blt	18cbc <__assert_fail@plt+0x7c1c>
   18bd8:	b	18cd4 <__assert_fail@plt+0x7c34>
   18bdc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18be0:	movw	r1, #0
   18be4:	cmp	r1, r0
   18be8:	bge	18cd4 <__assert_fail@plt+0x7c34>
   18bec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18bf0:	sub	r0, r0, #1
   18bf4:	mvn	r1, #0
   18bf8:	cmp	r1, r0
   18bfc:	blt	18cbc <__assert_fail@plt+0x7c1c>
   18c00:	b	18cd4 <__assert_fail@plt+0x7c34>
   18c04:	ldr	r0, [fp, #8]
   18c08:	movw	r1, #0
   18c0c:	sdiv	r0, r1, r0
   18c10:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18c14:	cmp	r0, r1
   18c18:	blt	18cbc <__assert_fail@plt+0x7c1c>
   18c1c:	b	18cd4 <__assert_fail@plt+0x7c34>
   18c20:	ldr	r0, [fp, #8]
   18c24:	cmp	r0, #0
   18c28:	bne	18c30 <__assert_fail@plt+0x7b90>
   18c2c:	b	18cd4 <__assert_fail@plt+0x7c34>
   18c30:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18c34:	cmp	r0, #0
   18c38:	bge	18ca4 <__assert_fail@plt+0x7c04>
   18c3c:	b	18c40 <__assert_fail@plt+0x7ba0>
   18c40:	b	18c88 <__assert_fail@plt+0x7be8>
   18c44:	b	18c88 <__assert_fail@plt+0x7be8>
   18c48:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18c4c:	cmn	r0, #1
   18c50:	bne	18c88 <__assert_fail@plt+0x7be8>
   18c54:	b	18c58 <__assert_fail@plt+0x7bb8>
   18c58:	ldr	r0, [fp, #8]
   18c5c:	add	r0, r0, #0
   18c60:	movw	r1, #0
   18c64:	cmp	r1, r0
   18c68:	blt	18cbc <__assert_fail@plt+0x7c1c>
   18c6c:	b	18cd4 <__assert_fail@plt+0x7c34>
   18c70:	ldr	r0, [fp, #8]
   18c74:	sub	r0, r0, #1
   18c78:	mvn	r1, #0
   18c7c:	cmp	r1, r0
   18c80:	blt	18cbc <__assert_fail@plt+0x7c1c>
   18c84:	b	18cd4 <__assert_fail@plt+0x7c34>
   18c88:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18c8c:	movw	r1, #0
   18c90:	sdiv	r0, r1, r0
   18c94:	ldr	r1, [fp, #8]
   18c98:	cmp	r0, r1
   18c9c:	blt	18cbc <__assert_fail@plt+0x7c1c>
   18ca0:	b	18cd4 <__assert_fail@plt+0x7c34>
   18ca4:	ldr	r0, [fp, #8]
   18ca8:	movw	r1, #255	; 0xff
   18cac:	sdiv	r0, r1, r0
   18cb0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18cb4:	cmp	r0, r1
   18cb8:	bge	18cd4 <__assert_fail@plt+0x7c34>
   18cbc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18cc0:	ldr	r1, [fp, #8]
   18cc4:	mul	r0, r0, r1
   18cc8:	and	r0, r0, #255	; 0xff
   18ccc:	str	r0, [fp, #-28]	; 0xffffffe4
   18cd0:	b	19cb4 <__assert_fail@plt+0x8c14>
   18cd4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18cd8:	ldr	r1, [fp, #8]
   18cdc:	mul	r0, r0, r1
   18ce0:	and	r0, r0, #255	; 0xff
   18ce4:	str	r0, [fp, #-28]	; 0xffffffe4
   18ce8:	b	19cc0 <__assert_fail@plt+0x8c20>
   18cec:	b	190c4 <__assert_fail@plt+0x8024>
   18cf0:	b	18cf4 <__assert_fail@plt+0x7c54>
   18cf4:	ldr	r0, [fp, #8]
   18cf8:	cmp	r0, #0
   18cfc:	bge	18e10 <__assert_fail@plt+0x7d70>
   18d00:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18d04:	cmp	r0, #0
   18d08:	bge	18d94 <__assert_fail@plt+0x7cf4>
   18d0c:	b	18d10 <__assert_fail@plt+0x7c70>
   18d10:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18d14:	ldr	r1, [fp, #8]
   18d18:	movw	r2, #32767	; 0x7fff
   18d1c:	sdiv	r1, r2, r1
   18d20:	cmp	r0, r1
   18d24:	blt	18eb0 <__assert_fail@plt+0x7e10>
   18d28:	b	18ec8 <__assert_fail@plt+0x7e28>
   18d2c:	b	18d30 <__assert_fail@plt+0x7c90>
   18d30:	ldr	r0, [pc, #3100]	; 19954 <__assert_fail@plt+0x88b4>
   18d34:	ldr	r1, [fp, #8]
   18d38:	cmp	r1, r0
   18d3c:	blt	18d54 <__assert_fail@plt+0x7cb4>
   18d40:	b	18d60 <__assert_fail@plt+0x7cc0>
   18d44:	ldr	r0, [fp, #8]
   18d48:	movw	r1, #0
   18d4c:	cmp	r1, r0
   18d50:	bge	18d60 <__assert_fail@plt+0x7cc0>
   18d54:	movw	r0, #0
   18d58:	str	r0, [fp, #-44]	; 0xffffffd4
   18d5c:	b	18d78 <__assert_fail@plt+0x7cd8>
   18d60:	ldr	r0, [fp, #8]
   18d64:	movw	r1, #0
   18d68:	sub	r0, r1, r0
   18d6c:	movw	r1, #32767	; 0x7fff
   18d70:	sdiv	r0, r1, r0
   18d74:	str	r0, [fp, #-44]	; 0xffffffd4
   18d78:	ldr	r0, [fp, #-44]	; 0xffffffd4
   18d7c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18d80:	mvn	r2, #0
   18d84:	sub	r1, r2, r1
   18d88:	cmp	r0, r1
   18d8c:	ble	18eb0 <__assert_fail@plt+0x7e10>
   18d90:	b	18ec8 <__assert_fail@plt+0x7e28>
   18d94:	b	18d98 <__assert_fail@plt+0x7cf8>
   18d98:	b	18df4 <__assert_fail@plt+0x7d54>
   18d9c:	b	18df4 <__assert_fail@plt+0x7d54>
   18da0:	ldr	r0, [fp, #8]
   18da4:	cmn	r0, #1
   18da8:	bne	18df4 <__assert_fail@plt+0x7d54>
   18dac:	b	18db0 <__assert_fail@plt+0x7d10>
   18db0:	ldr	r0, [pc, #4068]	; 19d9c <__assert_fail@plt+0x8cfc>
   18db4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18db8:	add	r0, r1, r0
   18dbc:	movw	r1, #0
   18dc0:	cmp	r1, r0
   18dc4:	blt	18eb0 <__assert_fail@plt+0x7e10>
   18dc8:	b	18ec8 <__assert_fail@plt+0x7e28>
   18dcc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18dd0:	movw	r1, #0
   18dd4:	cmp	r1, r0
   18dd8:	bge	18ec8 <__assert_fail@plt+0x7e28>
   18ddc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18de0:	sub	r0, r0, #1
   18de4:	movw	r1, #32767	; 0x7fff
   18de8:	cmp	r1, r0
   18dec:	blt	18eb0 <__assert_fail@plt+0x7e10>
   18df0:	b	18ec8 <__assert_fail@plt+0x7e28>
   18df4:	ldr	r0, [pc, #4000]	; 19d9c <__assert_fail@plt+0x8cfc>
   18df8:	ldr	r1, [fp, #8]
   18dfc:	sdiv	r0, r0, r1
   18e00:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18e04:	cmp	r0, r1
   18e08:	blt	18eb0 <__assert_fail@plt+0x7e10>
   18e0c:	b	18ec8 <__assert_fail@plt+0x7e28>
   18e10:	ldr	r0, [fp, #8]
   18e14:	cmp	r0, #0
   18e18:	bne	18e20 <__assert_fail@plt+0x7d80>
   18e1c:	b	18ec8 <__assert_fail@plt+0x7e28>
   18e20:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18e24:	cmp	r0, #0
   18e28:	bge	18e98 <__assert_fail@plt+0x7df8>
   18e2c:	b	18e30 <__assert_fail@plt+0x7d90>
   18e30:	b	18e7c <__assert_fail@plt+0x7ddc>
   18e34:	b	18e7c <__assert_fail@plt+0x7ddc>
   18e38:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18e3c:	cmn	r0, #1
   18e40:	bne	18e7c <__assert_fail@plt+0x7ddc>
   18e44:	b	18e48 <__assert_fail@plt+0x7da8>
   18e48:	ldr	r0, [pc, #3916]	; 19d9c <__assert_fail@plt+0x8cfc>
   18e4c:	ldr	r1, [fp, #8]
   18e50:	add	r0, r1, r0
   18e54:	movw	r1, #0
   18e58:	cmp	r1, r0
   18e5c:	blt	18eb0 <__assert_fail@plt+0x7e10>
   18e60:	b	18ec8 <__assert_fail@plt+0x7e28>
   18e64:	ldr	r0, [fp, #8]
   18e68:	sub	r0, r0, #1
   18e6c:	movw	r1, #32767	; 0x7fff
   18e70:	cmp	r1, r0
   18e74:	blt	18eb0 <__assert_fail@plt+0x7e10>
   18e78:	b	18ec8 <__assert_fail@plt+0x7e28>
   18e7c:	ldr	r0, [pc, #3864]	; 19d9c <__assert_fail@plt+0x8cfc>
   18e80:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18e84:	sdiv	r0, r0, r1
   18e88:	ldr	r1, [fp, #8]
   18e8c:	cmp	r0, r1
   18e90:	blt	18eb0 <__assert_fail@plt+0x7e10>
   18e94:	b	18ec8 <__assert_fail@plt+0x7e28>
   18e98:	ldr	r0, [fp, #8]
   18e9c:	movw	r1, #32767	; 0x7fff
   18ea0:	sdiv	r0, r1, r0
   18ea4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18ea8:	cmp	r0, r1
   18eac:	bge	18ec8 <__assert_fail@plt+0x7e28>
   18eb0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18eb4:	ldr	r1, [fp, #8]
   18eb8:	mul	r0, r0, r1
   18ebc:	sxth	r0, r0
   18ec0:	str	r0, [fp, #-28]	; 0xffffffe4
   18ec4:	b	19cb4 <__assert_fail@plt+0x8c14>
   18ec8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18ecc:	ldr	r1, [fp, #8]
   18ed0:	mul	r0, r0, r1
   18ed4:	sxth	r0, r0
   18ed8:	str	r0, [fp, #-28]	; 0xffffffe4
   18edc:	b	19cc0 <__assert_fail@plt+0x8c20>
   18ee0:	ldr	r0, [fp, #8]
   18ee4:	cmp	r0, #0
   18ee8:	bge	18ff8 <__assert_fail@plt+0x7f58>
   18eec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18ef0:	cmp	r0, #0
   18ef4:	bge	18f80 <__assert_fail@plt+0x7ee0>
   18ef8:	b	18efc <__assert_fail@plt+0x7e5c>
   18efc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18f00:	ldr	r1, [fp, #8]
   18f04:	movw	r2, #65535	; 0xffff
   18f08:	sdiv	r1, r2, r1
   18f0c:	cmp	r0, r1
   18f10:	blt	19094 <__assert_fail@plt+0x7ff4>
   18f14:	b	190ac <__assert_fail@plt+0x800c>
   18f18:	b	18f1c <__assert_fail@plt+0x7e7c>
   18f1c:	ldr	r0, [pc, #2608]	; 19954 <__assert_fail@plt+0x88b4>
   18f20:	ldr	r1, [fp, #8]
   18f24:	cmp	r1, r0
   18f28:	blt	18f40 <__assert_fail@plt+0x7ea0>
   18f2c:	b	18f4c <__assert_fail@plt+0x7eac>
   18f30:	ldr	r0, [fp, #8]
   18f34:	movw	r1, #0
   18f38:	cmp	r1, r0
   18f3c:	bge	18f4c <__assert_fail@plt+0x7eac>
   18f40:	movw	r0, #0
   18f44:	str	r0, [fp, #-48]	; 0xffffffd0
   18f48:	b	18f64 <__assert_fail@plt+0x7ec4>
   18f4c:	ldr	r0, [fp, #8]
   18f50:	movw	r1, #0
   18f54:	sub	r0, r1, r0
   18f58:	movw	r1, #65535	; 0xffff
   18f5c:	sdiv	r0, r1, r0
   18f60:	str	r0, [fp, #-48]	; 0xffffffd0
   18f64:	ldr	r0, [fp, #-48]	; 0xffffffd0
   18f68:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18f6c:	mvn	r2, #0
   18f70:	sub	r1, r2, r1
   18f74:	cmp	r0, r1
   18f78:	ble	19094 <__assert_fail@plt+0x7ff4>
   18f7c:	b	190ac <__assert_fail@plt+0x800c>
   18f80:	b	18f84 <__assert_fail@plt+0x7ee4>
   18f84:	b	18fdc <__assert_fail@plt+0x7f3c>
   18f88:	b	18fdc <__assert_fail@plt+0x7f3c>
   18f8c:	ldr	r0, [fp, #8]
   18f90:	cmn	r0, #1
   18f94:	bne	18fdc <__assert_fail@plt+0x7f3c>
   18f98:	b	18f9c <__assert_fail@plt+0x7efc>
   18f9c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18fa0:	add	r0, r0, #0
   18fa4:	movw	r1, #0
   18fa8:	cmp	r1, r0
   18fac:	blt	19094 <__assert_fail@plt+0x7ff4>
   18fb0:	b	190ac <__assert_fail@plt+0x800c>
   18fb4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18fb8:	movw	r1, #0
   18fbc:	cmp	r1, r0
   18fc0:	bge	190ac <__assert_fail@plt+0x800c>
   18fc4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18fc8:	sub	r0, r0, #1
   18fcc:	mvn	r1, #0
   18fd0:	cmp	r1, r0
   18fd4:	blt	19094 <__assert_fail@plt+0x7ff4>
   18fd8:	b	190ac <__assert_fail@plt+0x800c>
   18fdc:	ldr	r0, [fp, #8]
   18fe0:	movw	r1, #0
   18fe4:	sdiv	r0, r1, r0
   18fe8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18fec:	cmp	r0, r1
   18ff0:	blt	19094 <__assert_fail@plt+0x7ff4>
   18ff4:	b	190ac <__assert_fail@plt+0x800c>
   18ff8:	ldr	r0, [fp, #8]
   18ffc:	cmp	r0, #0
   19000:	bne	19008 <__assert_fail@plt+0x7f68>
   19004:	b	190ac <__assert_fail@plt+0x800c>
   19008:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1900c:	cmp	r0, #0
   19010:	bge	1907c <__assert_fail@plt+0x7fdc>
   19014:	b	19018 <__assert_fail@plt+0x7f78>
   19018:	b	19060 <__assert_fail@plt+0x7fc0>
   1901c:	b	19060 <__assert_fail@plt+0x7fc0>
   19020:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19024:	cmn	r0, #1
   19028:	bne	19060 <__assert_fail@plt+0x7fc0>
   1902c:	b	19030 <__assert_fail@plt+0x7f90>
   19030:	ldr	r0, [fp, #8]
   19034:	add	r0, r0, #0
   19038:	movw	r1, #0
   1903c:	cmp	r1, r0
   19040:	blt	19094 <__assert_fail@plt+0x7ff4>
   19044:	b	190ac <__assert_fail@plt+0x800c>
   19048:	ldr	r0, [fp, #8]
   1904c:	sub	r0, r0, #1
   19050:	mvn	r1, #0
   19054:	cmp	r1, r0
   19058:	blt	19094 <__assert_fail@plt+0x7ff4>
   1905c:	b	190ac <__assert_fail@plt+0x800c>
   19060:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19064:	movw	r1, #0
   19068:	sdiv	r0, r1, r0
   1906c:	ldr	r1, [fp, #8]
   19070:	cmp	r0, r1
   19074:	blt	19094 <__assert_fail@plt+0x7ff4>
   19078:	b	190ac <__assert_fail@plt+0x800c>
   1907c:	ldr	r0, [fp, #8]
   19080:	movw	r1, #65535	; 0xffff
   19084:	sdiv	r0, r1, r0
   19088:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1908c:	cmp	r0, r1
   19090:	bge	190ac <__assert_fail@plt+0x800c>
   19094:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19098:	ldr	r1, [fp, #8]
   1909c:	mul	r0, r0, r1
   190a0:	uxth	r0, r0
   190a4:	str	r0, [fp, #-28]	; 0xffffffe4
   190a8:	b	19cb4 <__assert_fail@plt+0x8c14>
   190ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   190b0:	ldr	r1, [fp, #8]
   190b4:	mul	r0, r0, r1
   190b8:	uxth	r0, r0
   190bc:	str	r0, [fp, #-28]	; 0xffffffe4
   190c0:	b	19cc0 <__assert_fail@plt+0x8c20>
   190c4:	b	190c8 <__assert_fail@plt+0x8028>
   190c8:	b	190cc <__assert_fail@plt+0x802c>
   190cc:	ldr	r0, [fp, #8]
   190d0:	cmp	r0, #0
   190d4:	bge	191d8 <__assert_fail@plt+0x8138>
   190d8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   190dc:	cmp	r0, #0
   190e0:	bge	1916c <__assert_fail@plt+0x80cc>
   190e4:	b	190e8 <__assert_fail@plt+0x8048>
   190e8:	ldr	r0, [pc, #1984]	; 198b0 <__assert_fail@plt+0x8810>
   190ec:	ldr	r1, [fp, #-24]	; 0xffffffe8
   190f0:	ldr	r2, [fp, #8]
   190f4:	sdiv	r0, r0, r2
   190f8:	cmp	r1, r0
   190fc:	blt	19268 <__assert_fail@plt+0x81c8>
   19100:	b	1927c <__assert_fail@plt+0x81dc>
   19104:	b	19108 <__assert_fail@plt+0x8068>
   19108:	ldr	r0, [pc, #2116]	; 19954 <__assert_fail@plt+0x88b4>
   1910c:	ldr	r1, [fp, #8]
   19110:	cmp	r1, r0
   19114:	blt	1912c <__assert_fail@plt+0x808c>
   19118:	b	19138 <__assert_fail@plt+0x8098>
   1911c:	ldr	r0, [fp, #8]
   19120:	movw	r1, #0
   19124:	cmp	r1, r0
   19128:	bge	19138 <__assert_fail@plt+0x8098>
   1912c:	movw	r0, #0
   19130:	str	r0, [fp, #-52]	; 0xffffffcc
   19134:	b	19150 <__assert_fail@plt+0x80b0>
   19138:	ldr	r0, [pc, #1904]	; 198b0 <__assert_fail@plt+0x8810>
   1913c:	ldr	r1, [fp, #8]
   19140:	movw	r2, #0
   19144:	sub	r1, r2, r1
   19148:	sdiv	r0, r0, r1
   1914c:	str	r0, [fp, #-52]	; 0xffffffcc
   19150:	ldr	r0, [fp, #-52]	; 0xffffffcc
   19154:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19158:	mvn	r2, #0
   1915c:	sub	r1, r2, r1
   19160:	cmp	r0, r1
   19164:	ble	19268 <__assert_fail@plt+0x81c8>
   19168:	b	1927c <__assert_fail@plt+0x81dc>
   1916c:	ldr	r0, [fp, #8]
   19170:	cmn	r0, #1
   19174:	bne	191bc <__assert_fail@plt+0x811c>
   19178:	b	1917c <__assert_fail@plt+0x80dc>
   1917c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19180:	add	r0, r0, #-2147483648	; 0x80000000
   19184:	movw	r1, #0
   19188:	cmp	r1, r0
   1918c:	blt	19268 <__assert_fail@plt+0x81c8>
   19190:	b	1927c <__assert_fail@plt+0x81dc>
   19194:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19198:	movw	r1, #0
   1919c:	cmp	r1, r0
   191a0:	bge	1927c <__assert_fail@plt+0x81dc>
   191a4:	ldr	r0, [pc, #1796]	; 198b0 <__assert_fail@plt+0x8810>
   191a8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   191ac:	sub	r1, r1, #1
   191b0:	cmp	r0, r1
   191b4:	blt	19268 <__assert_fail@plt+0x81c8>
   191b8:	b	1927c <__assert_fail@plt+0x81dc>
   191bc:	ldr	r0, [pc, #4080]	; 1a1b4 <__assert_fail@plt+0x9114>
   191c0:	ldr	r1, [fp, #8]
   191c4:	sdiv	r0, r0, r1
   191c8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   191cc:	cmp	r0, r1
   191d0:	blt	19268 <__assert_fail@plt+0x81c8>
   191d4:	b	1927c <__assert_fail@plt+0x81dc>
   191d8:	ldr	r0, [fp, #8]
   191dc:	cmp	r0, #0
   191e0:	bne	191e8 <__assert_fail@plt+0x8148>
   191e4:	b	1927c <__assert_fail@plt+0x81dc>
   191e8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   191ec:	cmp	r0, #0
   191f0:	bge	19250 <__assert_fail@plt+0x81b0>
   191f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   191f8:	cmn	r0, #1
   191fc:	bne	19234 <__assert_fail@plt+0x8194>
   19200:	b	19204 <__assert_fail@plt+0x8164>
   19204:	ldr	r0, [fp, #8]
   19208:	add	r0, r0, #-2147483648	; 0x80000000
   1920c:	movw	r1, #0
   19210:	cmp	r1, r0
   19214:	blt	19268 <__assert_fail@plt+0x81c8>
   19218:	b	1927c <__assert_fail@plt+0x81dc>
   1921c:	ldr	r0, [pc, #1676]	; 198b0 <__assert_fail@plt+0x8810>
   19220:	ldr	r1, [fp, #8]
   19224:	sub	r1, r1, #1
   19228:	cmp	r0, r1
   1922c:	blt	19268 <__assert_fail@plt+0x81c8>
   19230:	b	1927c <__assert_fail@plt+0x81dc>
   19234:	ldr	r0, [pc, #3960]	; 1a1b4 <__assert_fail@plt+0x9114>
   19238:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1923c:	sdiv	r0, r0, r1
   19240:	ldr	r1, [fp, #8]
   19244:	cmp	r0, r1
   19248:	blt	19268 <__assert_fail@plt+0x81c8>
   1924c:	b	1927c <__assert_fail@plt+0x81dc>
   19250:	ldr	r0, [pc, #1624]	; 198b0 <__assert_fail@plt+0x8810>
   19254:	ldr	r1, [fp, #8]
   19258:	sdiv	r0, r0, r1
   1925c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19260:	cmp	r0, r1
   19264:	bge	1927c <__assert_fail@plt+0x81dc>
   19268:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1926c:	ldr	r1, [fp, #8]
   19270:	mul	r0, r0, r1
   19274:	str	r0, [fp, #-28]	; 0xffffffe4
   19278:	b	19cb4 <__assert_fail@plt+0x8c14>
   1927c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19280:	ldr	r1, [fp, #8]
   19284:	mul	r0, r0, r1
   19288:	str	r0, [fp, #-28]	; 0xffffffe4
   1928c:	b	19cc0 <__assert_fail@plt+0x8c20>
   19290:	ldr	r0, [fp, #8]
   19294:	cmp	r0, #0
   19298:	bge	193a8 <__assert_fail@plt+0x8308>
   1929c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   192a0:	cmp	r0, #0
   192a4:	bge	19330 <__assert_fail@plt+0x8290>
   192a8:	b	192c8 <__assert_fail@plt+0x8228>
   192ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   192b0:	ldr	r1, [fp, #8]
   192b4:	mvn	r2, #0
   192b8:	udiv	r1, r2, r1
   192bc:	cmp	r0, r1
   192c0:	bcc	19444 <__assert_fail@plt+0x83a4>
   192c4:	b	19458 <__assert_fail@plt+0x83b8>
   192c8:	b	192cc <__assert_fail@plt+0x822c>
   192cc:	ldr	r0, [pc, #1664]	; 19954 <__assert_fail@plt+0x88b4>
   192d0:	ldr	r1, [fp, #8]
   192d4:	cmp	r1, r0
   192d8:	blt	192f0 <__assert_fail@plt+0x8250>
   192dc:	b	192fc <__assert_fail@plt+0x825c>
   192e0:	ldr	r0, [fp, #8]
   192e4:	movw	r1, #0
   192e8:	cmp	r1, r0
   192ec:	bge	192fc <__assert_fail@plt+0x825c>
   192f0:	movw	r0, #1
   192f4:	str	r0, [fp, #-56]	; 0xffffffc8
   192f8:	b	19314 <__assert_fail@plt+0x8274>
   192fc:	ldr	r0, [fp, #8]
   19300:	movw	r1, #0
   19304:	sub	r0, r1, r0
   19308:	mvn	r1, #0
   1930c:	udiv	r0, r1, r0
   19310:	str	r0, [fp, #-56]	; 0xffffffc8
   19314:	ldr	r0, [fp, #-56]	; 0xffffffc8
   19318:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1931c:	mvn	r2, #0
   19320:	sub	r1, r2, r1
   19324:	cmp	r0, r1
   19328:	bls	19444 <__assert_fail@plt+0x83a4>
   1932c:	b	19458 <__assert_fail@plt+0x83b8>
   19330:	b	19334 <__assert_fail@plt+0x8294>
   19334:	b	1938c <__assert_fail@plt+0x82ec>
   19338:	b	1938c <__assert_fail@plt+0x82ec>
   1933c:	ldr	r0, [fp, #8]
   19340:	cmn	r0, #1
   19344:	bne	1938c <__assert_fail@plt+0x82ec>
   19348:	b	1934c <__assert_fail@plt+0x82ac>
   1934c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19350:	add	r0, r0, #0
   19354:	movw	r1, #0
   19358:	cmp	r1, r0
   1935c:	blt	19444 <__assert_fail@plt+0x83a4>
   19360:	b	19458 <__assert_fail@plt+0x83b8>
   19364:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19368:	movw	r1, #0
   1936c:	cmp	r1, r0
   19370:	bge	19458 <__assert_fail@plt+0x83b8>
   19374:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19378:	sub	r0, r0, #1
   1937c:	mvn	r1, #0
   19380:	cmp	r1, r0
   19384:	blt	19444 <__assert_fail@plt+0x83a4>
   19388:	b	19458 <__assert_fail@plt+0x83b8>
   1938c:	ldr	r0, [fp, #8]
   19390:	movw	r1, #0
   19394:	sdiv	r0, r1, r0
   19398:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1939c:	cmp	r0, r1
   193a0:	blt	19444 <__assert_fail@plt+0x83a4>
   193a4:	b	19458 <__assert_fail@plt+0x83b8>
   193a8:	ldr	r0, [fp, #8]
   193ac:	cmp	r0, #0
   193b0:	bne	193b8 <__assert_fail@plt+0x8318>
   193b4:	b	19458 <__assert_fail@plt+0x83b8>
   193b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   193bc:	cmp	r0, #0
   193c0:	bge	1942c <__assert_fail@plt+0x838c>
   193c4:	b	193c8 <__assert_fail@plt+0x8328>
   193c8:	b	19410 <__assert_fail@plt+0x8370>
   193cc:	b	19410 <__assert_fail@plt+0x8370>
   193d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   193d4:	cmn	r0, #1
   193d8:	bne	19410 <__assert_fail@plt+0x8370>
   193dc:	b	193e0 <__assert_fail@plt+0x8340>
   193e0:	ldr	r0, [fp, #8]
   193e4:	add	r0, r0, #0
   193e8:	movw	r1, #0
   193ec:	cmp	r1, r0
   193f0:	blt	19444 <__assert_fail@plt+0x83a4>
   193f4:	b	19458 <__assert_fail@plt+0x83b8>
   193f8:	ldr	r0, [fp, #8]
   193fc:	sub	r0, r0, #1
   19400:	mvn	r1, #0
   19404:	cmp	r1, r0
   19408:	blt	19444 <__assert_fail@plt+0x83a4>
   1940c:	b	19458 <__assert_fail@plt+0x83b8>
   19410:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19414:	movw	r1, #0
   19418:	sdiv	r0, r1, r0
   1941c:	ldr	r1, [fp, #8]
   19420:	cmp	r0, r1
   19424:	blt	19444 <__assert_fail@plt+0x83a4>
   19428:	b	19458 <__assert_fail@plt+0x83b8>
   1942c:	ldr	r0, [fp, #8]
   19430:	mvn	r1, #0
   19434:	udiv	r0, r1, r0
   19438:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1943c:	cmp	r0, r1
   19440:	bcs	19458 <__assert_fail@plt+0x83b8>
   19444:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19448:	ldr	r1, [fp, #8]
   1944c:	mul	r0, r0, r1
   19450:	str	r0, [fp, #-28]	; 0xffffffe4
   19454:	b	19cb4 <__assert_fail@plt+0x8c14>
   19458:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1945c:	ldr	r1, [fp, #8]
   19460:	mul	r0, r0, r1
   19464:	str	r0, [fp, #-28]	; 0xffffffe4
   19468:	b	19cc0 <__assert_fail@plt+0x8c20>
   1946c:	b	19470 <__assert_fail@plt+0x83d0>
   19470:	b	19474 <__assert_fail@plt+0x83d4>
   19474:	ldr	r0, [fp, #8]
   19478:	cmp	r0, #0
   1947c:	bge	19580 <__assert_fail@plt+0x84e0>
   19480:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19484:	cmp	r0, #0
   19488:	bge	19514 <__assert_fail@plt+0x8474>
   1948c:	b	19490 <__assert_fail@plt+0x83f0>
   19490:	ldr	r0, [pc, #1048]	; 198b0 <__assert_fail@plt+0x8810>
   19494:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19498:	ldr	r2, [fp, #8]
   1949c:	sdiv	r0, r0, r2
   194a0:	cmp	r1, r0
   194a4:	blt	19610 <__assert_fail@plt+0x8570>
   194a8:	b	19624 <__assert_fail@plt+0x8584>
   194ac:	b	194b0 <__assert_fail@plt+0x8410>
   194b0:	ldr	r0, [pc, #1180]	; 19954 <__assert_fail@plt+0x88b4>
   194b4:	ldr	r1, [fp, #8]
   194b8:	cmp	r1, r0
   194bc:	blt	194d4 <__assert_fail@plt+0x8434>
   194c0:	b	194e0 <__assert_fail@plt+0x8440>
   194c4:	ldr	r0, [fp, #8]
   194c8:	movw	r1, #0
   194cc:	cmp	r1, r0
   194d0:	bge	194e0 <__assert_fail@plt+0x8440>
   194d4:	movw	r0, #0
   194d8:	str	r0, [fp, #-60]	; 0xffffffc4
   194dc:	b	194f8 <__assert_fail@plt+0x8458>
   194e0:	ldr	r0, [pc, #968]	; 198b0 <__assert_fail@plt+0x8810>
   194e4:	ldr	r1, [fp, #8]
   194e8:	movw	r2, #0
   194ec:	sub	r1, r2, r1
   194f0:	sdiv	r0, r0, r1
   194f4:	str	r0, [fp, #-60]	; 0xffffffc4
   194f8:	ldr	r0, [fp, #-60]	; 0xffffffc4
   194fc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19500:	mvn	r2, #0
   19504:	sub	r1, r2, r1
   19508:	cmp	r0, r1
   1950c:	ble	19610 <__assert_fail@plt+0x8570>
   19510:	b	19624 <__assert_fail@plt+0x8584>
   19514:	ldr	r0, [fp, #8]
   19518:	cmn	r0, #1
   1951c:	bne	19564 <__assert_fail@plt+0x84c4>
   19520:	b	19524 <__assert_fail@plt+0x8484>
   19524:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19528:	add	r0, r0, #-2147483648	; 0x80000000
   1952c:	movw	r1, #0
   19530:	cmp	r1, r0
   19534:	blt	19610 <__assert_fail@plt+0x8570>
   19538:	b	19624 <__assert_fail@plt+0x8584>
   1953c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19540:	movw	r1, #0
   19544:	cmp	r1, r0
   19548:	bge	19624 <__assert_fail@plt+0x8584>
   1954c:	ldr	r0, [pc, #860]	; 198b0 <__assert_fail@plt+0x8810>
   19550:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19554:	sub	r1, r1, #1
   19558:	cmp	r0, r1
   1955c:	blt	19610 <__assert_fail@plt+0x8570>
   19560:	b	19624 <__assert_fail@plt+0x8584>
   19564:	ldr	r0, [pc, #3144]	; 1a1b4 <__assert_fail@plt+0x9114>
   19568:	ldr	r1, [fp, #8]
   1956c:	sdiv	r0, r0, r1
   19570:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19574:	cmp	r0, r1
   19578:	blt	19610 <__assert_fail@plt+0x8570>
   1957c:	b	19624 <__assert_fail@plt+0x8584>
   19580:	ldr	r0, [fp, #8]
   19584:	cmp	r0, #0
   19588:	bne	19590 <__assert_fail@plt+0x84f0>
   1958c:	b	19624 <__assert_fail@plt+0x8584>
   19590:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19594:	cmp	r0, #0
   19598:	bge	195f8 <__assert_fail@plt+0x8558>
   1959c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   195a0:	cmn	r0, #1
   195a4:	bne	195dc <__assert_fail@plt+0x853c>
   195a8:	b	195ac <__assert_fail@plt+0x850c>
   195ac:	ldr	r0, [fp, #8]
   195b0:	add	r0, r0, #-2147483648	; 0x80000000
   195b4:	movw	r1, #0
   195b8:	cmp	r1, r0
   195bc:	blt	19610 <__assert_fail@plt+0x8570>
   195c0:	b	19624 <__assert_fail@plt+0x8584>
   195c4:	ldr	r0, [pc, #740]	; 198b0 <__assert_fail@plt+0x8810>
   195c8:	ldr	r1, [fp, #8]
   195cc:	sub	r1, r1, #1
   195d0:	cmp	r0, r1
   195d4:	blt	19610 <__assert_fail@plt+0x8570>
   195d8:	b	19624 <__assert_fail@plt+0x8584>
   195dc:	ldr	r0, [pc, #3024]	; 1a1b4 <__assert_fail@plt+0x9114>
   195e0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   195e4:	sdiv	r0, r0, r1
   195e8:	ldr	r1, [fp, #8]
   195ec:	cmp	r0, r1
   195f0:	blt	19610 <__assert_fail@plt+0x8570>
   195f4:	b	19624 <__assert_fail@plt+0x8584>
   195f8:	ldr	r0, [pc, #688]	; 198b0 <__assert_fail@plt+0x8810>
   195fc:	ldr	r1, [fp, #8]
   19600:	sdiv	r0, r0, r1
   19604:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19608:	cmp	r0, r1
   1960c:	bge	19624 <__assert_fail@plt+0x8584>
   19610:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19614:	ldr	r1, [fp, #8]
   19618:	mul	r0, r0, r1
   1961c:	str	r0, [fp, #-28]	; 0xffffffe4
   19620:	b	19cb4 <__assert_fail@plt+0x8c14>
   19624:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19628:	ldr	r1, [fp, #8]
   1962c:	mul	r0, r0, r1
   19630:	str	r0, [fp, #-28]	; 0xffffffe4
   19634:	b	19cc0 <__assert_fail@plt+0x8c20>
   19638:	ldr	r0, [fp, #8]
   1963c:	cmp	r0, #0
   19640:	bge	19750 <__assert_fail@plt+0x86b0>
   19644:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19648:	cmp	r0, #0
   1964c:	bge	196d8 <__assert_fail@plt+0x8638>
   19650:	b	19670 <__assert_fail@plt+0x85d0>
   19654:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19658:	ldr	r1, [fp, #8]
   1965c:	mvn	r2, #0
   19660:	udiv	r1, r2, r1
   19664:	cmp	r0, r1
   19668:	bcc	197ec <__assert_fail@plt+0x874c>
   1966c:	b	19800 <__assert_fail@plt+0x8760>
   19670:	b	19674 <__assert_fail@plt+0x85d4>
   19674:	ldr	r0, [pc, #728]	; 19954 <__assert_fail@plt+0x88b4>
   19678:	ldr	r1, [fp, #8]
   1967c:	cmp	r1, r0
   19680:	blt	19698 <__assert_fail@plt+0x85f8>
   19684:	b	196a4 <__assert_fail@plt+0x8604>
   19688:	ldr	r0, [fp, #8]
   1968c:	movw	r1, #0
   19690:	cmp	r1, r0
   19694:	bge	196a4 <__assert_fail@plt+0x8604>
   19698:	movw	r0, #1
   1969c:	str	r0, [fp, #-64]	; 0xffffffc0
   196a0:	b	196bc <__assert_fail@plt+0x861c>
   196a4:	ldr	r0, [fp, #8]
   196a8:	movw	r1, #0
   196ac:	sub	r0, r1, r0
   196b0:	mvn	r1, #0
   196b4:	udiv	r0, r1, r0
   196b8:	str	r0, [fp, #-64]	; 0xffffffc0
   196bc:	ldr	r0, [fp, #-64]	; 0xffffffc0
   196c0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   196c4:	mvn	r2, #0
   196c8:	sub	r1, r2, r1
   196cc:	cmp	r0, r1
   196d0:	bls	197ec <__assert_fail@plt+0x874c>
   196d4:	b	19800 <__assert_fail@plt+0x8760>
   196d8:	b	196dc <__assert_fail@plt+0x863c>
   196dc:	b	19734 <__assert_fail@plt+0x8694>
   196e0:	b	19734 <__assert_fail@plt+0x8694>
   196e4:	ldr	r0, [fp, #8]
   196e8:	cmn	r0, #1
   196ec:	bne	19734 <__assert_fail@plt+0x8694>
   196f0:	b	196f4 <__assert_fail@plt+0x8654>
   196f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   196f8:	add	r0, r0, #0
   196fc:	movw	r1, #0
   19700:	cmp	r1, r0
   19704:	blt	197ec <__assert_fail@plt+0x874c>
   19708:	b	19800 <__assert_fail@plt+0x8760>
   1970c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19710:	movw	r1, #0
   19714:	cmp	r1, r0
   19718:	bge	19800 <__assert_fail@plt+0x8760>
   1971c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19720:	sub	r0, r0, #1
   19724:	mvn	r1, #0
   19728:	cmp	r1, r0
   1972c:	blt	197ec <__assert_fail@plt+0x874c>
   19730:	b	19800 <__assert_fail@plt+0x8760>
   19734:	ldr	r0, [fp, #8]
   19738:	movw	r1, #0
   1973c:	sdiv	r0, r1, r0
   19740:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19744:	cmp	r0, r1
   19748:	blt	197ec <__assert_fail@plt+0x874c>
   1974c:	b	19800 <__assert_fail@plt+0x8760>
   19750:	ldr	r0, [fp, #8]
   19754:	cmp	r0, #0
   19758:	bne	19760 <__assert_fail@plt+0x86c0>
   1975c:	b	19800 <__assert_fail@plt+0x8760>
   19760:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19764:	cmp	r0, #0
   19768:	bge	197d4 <__assert_fail@plt+0x8734>
   1976c:	b	19770 <__assert_fail@plt+0x86d0>
   19770:	b	197b8 <__assert_fail@plt+0x8718>
   19774:	b	197b8 <__assert_fail@plt+0x8718>
   19778:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1977c:	cmn	r0, #1
   19780:	bne	197b8 <__assert_fail@plt+0x8718>
   19784:	b	19788 <__assert_fail@plt+0x86e8>
   19788:	ldr	r0, [fp, #8]
   1978c:	add	r0, r0, #0
   19790:	movw	r1, #0
   19794:	cmp	r1, r0
   19798:	blt	197ec <__assert_fail@plt+0x874c>
   1979c:	b	19800 <__assert_fail@plt+0x8760>
   197a0:	ldr	r0, [fp, #8]
   197a4:	sub	r0, r0, #1
   197a8:	mvn	r1, #0
   197ac:	cmp	r1, r0
   197b0:	blt	197ec <__assert_fail@plt+0x874c>
   197b4:	b	19800 <__assert_fail@plt+0x8760>
   197b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   197bc:	movw	r1, #0
   197c0:	sdiv	r0, r1, r0
   197c4:	ldr	r1, [fp, #8]
   197c8:	cmp	r0, r1
   197cc:	blt	197ec <__assert_fail@plt+0x874c>
   197d0:	b	19800 <__assert_fail@plt+0x8760>
   197d4:	ldr	r0, [fp, #8]
   197d8:	mvn	r1, #0
   197dc:	udiv	r0, r1, r0
   197e0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   197e4:	cmp	r0, r1
   197e8:	bcs	19800 <__assert_fail@plt+0x8760>
   197ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   197f0:	ldr	r1, [fp, #8]
   197f4:	mul	r0, r0, r1
   197f8:	str	r0, [fp, #-28]	; 0xffffffe4
   197fc:	b	19cb4 <__assert_fail@plt+0x8c14>
   19800:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19804:	ldr	r1, [fp, #8]
   19808:	mul	r0, r0, r1
   1980c:	str	r0, [fp, #-28]	; 0xffffffe4
   19810:	b	19cc0 <__assert_fail@plt+0x8c20>
   19814:	b	19818 <__assert_fail@plt+0x8778>
   19818:	ldr	r0, [fp, #8]
   1981c:	cmp	r0, #0
   19820:	bge	19990 <__assert_fail@plt+0x88f0>
   19824:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19828:	cmp	r0, #0
   1982c:	bge	19908 <__assert_fail@plt+0x8868>
   19830:	b	19834 <__assert_fail@plt+0x8794>
   19834:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19838:	ldr	r1, [fp, #8]
   1983c:	asr	r3, r1, #31
   19840:	mvn	r2, #0
   19844:	mvn	ip, #-2147483648	; 0x80000000
   19848:	str	r0, [fp, #-68]	; 0xffffffbc
   1984c:	mov	r0, r2
   19850:	str	r1, [fp, #-72]	; 0xffffffb8
   19854:	mov	r1, ip
   19858:	ldr	r2, [fp, #-72]	; 0xffffffb8
   1985c:	bl	1f774 <__assert_fail@plt+0xe6d4>
   19860:	ldr	r2, [fp, #-68]	; 0xffffffbc
   19864:	subs	r0, r2, r0
   19868:	rscs	r1, r1, r2, asr #31
   1986c:	blt	19a58 <__assert_fail@plt+0x89b8>
   19870:	b	19a6c <__assert_fail@plt+0x89cc>
   19874:	b	19878 <__assert_fail@plt+0x87d8>
   19878:	ldr	r0, [pc, #212]	; 19954 <__assert_fail@plt+0x88b4>
   1987c:	ldr	r1, [fp, #8]
   19880:	cmp	r1, r0
   19884:	blt	1989c <__assert_fail@plt+0x87fc>
   19888:	b	198b4 <__assert_fail@plt+0x8814>
   1988c:	ldr	r0, [fp, #8]
   19890:	movw	r1, #0
   19894:	cmp	r1, r0
   19898:	bge	198b4 <__assert_fail@plt+0x8814>
   1989c:	mov	r0, #0
   198a0:	mvn	r1, #0
   198a4:	str	r1, [fp, #-76]	; 0xffffffb4
   198a8:	str	r0, [fp, #-80]	; 0xffffffb0
   198ac:	b	198e8 <__assert_fail@plt+0x8848>
   198b0:	svcvc	0x00ffffff
   198b4:	ldr	r0, [fp, #8]
   198b8:	rsb	r0, r0, #0
   198bc:	asr	r3, r0, #31
   198c0:	mvn	r1, #0
   198c4:	mvn	r2, #-2147483648	; 0x80000000
   198c8:	str	r0, [fp, #-84]	; 0xffffffac
   198cc:	mov	r0, r1
   198d0:	mov	r1, r2
   198d4:	ldr	r2, [fp, #-84]	; 0xffffffac
   198d8:	bl	1f774 <__assert_fail@plt+0xe6d4>
   198dc:	str	r0, [fp, #-76]	; 0xffffffb4
   198e0:	str	r1, [fp, #-80]	; 0xffffffb0
   198e4:	b	198e8 <__assert_fail@plt+0x8848>
   198e8:	ldr	r0, [fp, #-80]	; 0xffffffb0
   198ec:	ldr	r1, [fp, #-76]	; 0xffffffb4
   198f0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   198f4:	mvn	r2, r2
   198f8:	subs	r1, r2, r1
   198fc:	rscs	r0, r0, r2, asr #31
   19900:	bge	19a58 <__assert_fail@plt+0x89b8>
   19904:	b	19a6c <__assert_fail@plt+0x89cc>
   19908:	ldr	r0, [fp, #8]
   1990c:	cmn	r0, #1
   19910:	bne	19958 <__assert_fail@plt+0x88b8>
   19914:	b	19918 <__assert_fail@plt+0x8878>
   19918:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1991c:	mov	r1, #-2147483648	; 0x80000000
   19920:	add	r1, r1, r0, asr #31
   19924:	rsbs	r0, r0, #0
   19928:	rscs	r1, r1, #0
   1992c:	blt	19a58 <__assert_fail@plt+0x89b8>
   19930:	b	19a6c <__assert_fail@plt+0x89cc>
   19934:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19938:	movw	r1, #0
   1993c:	cmp	r1, r0
   19940:	bge	19a6c <__assert_fail@plt+0x89cc>
   19944:	mov	r0, #0
   19948:	cmp	r0, #0
   1994c:	bne	19a58 <__assert_fail@plt+0x89b8>
   19950:	b	19a6c <__assert_fail@plt+0x89cc>
   19954:	andhi	r0, r0, r1
   19958:	ldr	r0, [fp, #8]
   1995c:	asr	r3, r0, #31
   19960:	mov	r1, #0
   19964:	mov	r2, #-2147483648	; 0x80000000
   19968:	str	r0, [fp, #-88]	; 0xffffffa8
   1996c:	mov	r0, r1
   19970:	mov	r1, r2
   19974:	ldr	r2, [fp, #-88]	; 0xffffffa8
   19978:	bl	1f774 <__assert_fail@plt+0xe6d4>
   1997c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   19980:	subs	r0, r0, r2
   19984:	sbcs	r1, r1, r2, asr #31
   19988:	blt	19a58 <__assert_fail@plt+0x89b8>
   1998c:	b	19a6c <__assert_fail@plt+0x89cc>
   19990:	ldr	r0, [fp, #8]
   19994:	cmp	r0, #0
   19998:	bne	199a0 <__assert_fail@plt+0x8900>
   1999c:	b	19a6c <__assert_fail@plt+0x89cc>
   199a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   199a4:	cmp	r0, #0
   199a8:	bge	19a20 <__assert_fail@plt+0x8980>
   199ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   199b0:	cmn	r0, #1
   199b4:	bne	199e8 <__assert_fail@plt+0x8948>
   199b8:	b	199bc <__assert_fail@plt+0x891c>
   199bc:	ldr	r0, [fp, #8]
   199c0:	mov	r1, #-2147483648	; 0x80000000
   199c4:	add	r1, r1, r0, asr #31
   199c8:	rsbs	r0, r0, #0
   199cc:	rscs	r1, r1, #0
   199d0:	blt	19a58 <__assert_fail@plt+0x89b8>
   199d4:	b	19a6c <__assert_fail@plt+0x89cc>
   199d8:	mov	r0, #0
   199dc:	cmp	r0, #0
   199e0:	bne	19a58 <__assert_fail@plt+0x89b8>
   199e4:	b	19a6c <__assert_fail@plt+0x89cc>
   199e8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   199ec:	asr	r3, r0, #31
   199f0:	mov	r1, #0
   199f4:	mov	r2, #-2147483648	; 0x80000000
   199f8:	str	r0, [fp, #-92]	; 0xffffffa4
   199fc:	mov	r0, r1
   19a00:	mov	r1, r2
   19a04:	ldr	r2, [fp, #-92]	; 0xffffffa4
   19a08:	bl	1f774 <__assert_fail@plt+0xe6d4>
   19a0c:	ldr	r2, [fp, #8]
   19a10:	subs	r0, r0, r2
   19a14:	sbcs	r1, r1, r2, asr #31
   19a18:	blt	19a58 <__assert_fail@plt+0x89b8>
   19a1c:	b	19a6c <__assert_fail@plt+0x89cc>
   19a20:	ldr	r0, [fp, #8]
   19a24:	asr	r3, r0, #31
   19a28:	mvn	r1, #0
   19a2c:	mvn	r2, #-2147483648	; 0x80000000
   19a30:	str	r0, [fp, #-96]	; 0xffffffa0
   19a34:	mov	r0, r1
   19a38:	mov	r1, r2
   19a3c:	ldr	r2, [fp, #-96]	; 0xffffffa0
   19a40:	bl	1f774 <__assert_fail@plt+0xe6d4>
   19a44:	ldr	r2, [fp, #-24]	; 0xffffffe8
   19a48:	subs	r0, r0, r2
   19a4c:	sbcs	r1, r1, r2, asr #31
   19a50:	bge	19a6c <__assert_fail@plt+0x89cc>
   19a54:	b	19a58 <__assert_fail@plt+0x89b8>
   19a58:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19a5c:	ldr	r1, [fp, #8]
   19a60:	mul	r0, r0, r1
   19a64:	str	r0, [fp, #-28]	; 0xffffffe4
   19a68:	b	19cb4 <__assert_fail@plt+0x8c14>
   19a6c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19a70:	ldr	r1, [fp, #8]
   19a74:	mul	r0, r0, r1
   19a78:	str	r0, [fp, #-28]	; 0xffffffe4
   19a7c:	b	19cc0 <__assert_fail@plt+0x8c20>
   19a80:	ldr	r0, [fp, #8]
   19a84:	cmp	r0, #0
   19a88:	bge	19bd8 <__assert_fail@plt+0x8b38>
   19a8c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19a90:	cmp	r0, #0
   19a94:	bge	19b60 <__assert_fail@plt+0x8ac0>
   19a98:	b	19ad8 <__assert_fail@plt+0x8a38>
   19a9c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19aa0:	ldr	r1, [fp, #8]
   19aa4:	asr	r3, r1, #31
   19aa8:	mvn	r2, #0
   19aac:	str	r0, [fp, #-100]	; 0xffffff9c
   19ab0:	mov	r0, r2
   19ab4:	str	r1, [fp, #-104]	; 0xffffff98
   19ab8:	mov	r1, r2
   19abc:	ldr	r2, [fp, #-104]	; 0xffffff98
   19ac0:	bl	1f848 <__assert_fail@plt+0xe7a8>
   19ac4:	ldr	r2, [fp, #-100]	; 0xffffff9c
   19ac8:	subs	r0, r2, r0
   19acc:	rscs	r1, r1, r2, asr #31
   19ad0:	bcc	19c8c <__assert_fail@plt+0x8bec>
   19ad4:	b	19ca0 <__assert_fail@plt+0x8c00>
   19ad8:	b	19adc <__assert_fail@plt+0x8a3c>
   19adc:	ldr	r0, [pc, #-400]	; 19954 <__assert_fail@plt+0x88b4>
   19ae0:	ldr	r1, [fp, #8]
   19ae4:	cmp	r1, r0
   19ae8:	blt	19b00 <__assert_fail@plt+0x8a60>
   19aec:	b	19b14 <__assert_fail@plt+0x8a74>
   19af0:	ldr	r0, [fp, #8]
   19af4:	movw	r1, #0
   19af8:	cmp	r1, r0
   19afc:	bge	19b14 <__assert_fail@plt+0x8a74>
   19b00:	mov	r0, #1
   19b04:	mvn	r1, #0
   19b08:	str	r1, [sp, #108]	; 0x6c
   19b0c:	str	r0, [sp, #104]	; 0x68
   19b10:	b	19b40 <__assert_fail@plt+0x8aa0>
   19b14:	ldr	r0, [fp, #8]
   19b18:	rsb	r0, r0, #0
   19b1c:	asr	r3, r0, #31
   19b20:	mvn	r1, #0
   19b24:	str	r0, [sp, #100]	; 0x64
   19b28:	mov	r0, r1
   19b2c:	ldr	r2, [sp, #100]	; 0x64
   19b30:	bl	1f848 <__assert_fail@plt+0xe7a8>
   19b34:	str	r0, [sp, #108]	; 0x6c
   19b38:	str	r1, [sp, #104]	; 0x68
   19b3c:	b	19b40 <__assert_fail@plt+0x8aa0>
   19b40:	ldr	r0, [sp, #104]	; 0x68
   19b44:	ldr	r1, [sp, #108]	; 0x6c
   19b48:	ldr	r2, [fp, #-24]	; 0xffffffe8
   19b4c:	mvn	r2, r2
   19b50:	subs	r1, r2, r1
   19b54:	rscs	r0, r0, r2, asr #31
   19b58:	bcs	19c8c <__assert_fail@plt+0x8bec>
   19b5c:	b	19ca0 <__assert_fail@plt+0x8c00>
   19b60:	b	19b64 <__assert_fail@plt+0x8ac4>
   19b64:	b	19bbc <__assert_fail@plt+0x8b1c>
   19b68:	b	19bbc <__assert_fail@plt+0x8b1c>
   19b6c:	ldr	r0, [fp, #8]
   19b70:	cmn	r0, #1
   19b74:	bne	19bbc <__assert_fail@plt+0x8b1c>
   19b78:	b	19b7c <__assert_fail@plt+0x8adc>
   19b7c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19b80:	add	r0, r0, #0
   19b84:	movw	r1, #0
   19b88:	cmp	r1, r0
   19b8c:	blt	19c8c <__assert_fail@plt+0x8bec>
   19b90:	b	19ca0 <__assert_fail@plt+0x8c00>
   19b94:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19b98:	movw	r1, #0
   19b9c:	cmp	r1, r0
   19ba0:	bge	19ca0 <__assert_fail@plt+0x8c00>
   19ba4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19ba8:	sub	r0, r0, #1
   19bac:	mvn	r1, #0
   19bb0:	cmp	r1, r0
   19bb4:	blt	19c8c <__assert_fail@plt+0x8bec>
   19bb8:	b	19ca0 <__assert_fail@plt+0x8c00>
   19bbc:	ldr	r0, [fp, #8]
   19bc0:	movw	r1, #0
   19bc4:	sdiv	r0, r1, r0
   19bc8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19bcc:	cmp	r0, r1
   19bd0:	blt	19c8c <__assert_fail@plt+0x8bec>
   19bd4:	b	19ca0 <__assert_fail@plt+0x8c00>
   19bd8:	ldr	r0, [fp, #8]
   19bdc:	cmp	r0, #0
   19be0:	bne	19be8 <__assert_fail@plt+0x8b48>
   19be4:	b	19ca0 <__assert_fail@plt+0x8c00>
   19be8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19bec:	cmp	r0, #0
   19bf0:	bge	19c5c <__assert_fail@plt+0x8bbc>
   19bf4:	b	19bf8 <__assert_fail@plt+0x8b58>
   19bf8:	b	19c40 <__assert_fail@plt+0x8ba0>
   19bfc:	b	19c40 <__assert_fail@plt+0x8ba0>
   19c00:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19c04:	cmn	r0, #1
   19c08:	bne	19c40 <__assert_fail@plt+0x8ba0>
   19c0c:	b	19c10 <__assert_fail@plt+0x8b70>
   19c10:	ldr	r0, [fp, #8]
   19c14:	add	r0, r0, #0
   19c18:	movw	r1, #0
   19c1c:	cmp	r1, r0
   19c20:	blt	19c8c <__assert_fail@plt+0x8bec>
   19c24:	b	19ca0 <__assert_fail@plt+0x8c00>
   19c28:	ldr	r0, [fp, #8]
   19c2c:	sub	r0, r0, #1
   19c30:	mvn	r1, #0
   19c34:	cmp	r1, r0
   19c38:	blt	19c8c <__assert_fail@plt+0x8bec>
   19c3c:	b	19ca0 <__assert_fail@plt+0x8c00>
   19c40:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19c44:	movw	r1, #0
   19c48:	sdiv	r0, r1, r0
   19c4c:	ldr	r1, [fp, #8]
   19c50:	cmp	r0, r1
   19c54:	blt	19c8c <__assert_fail@plt+0x8bec>
   19c58:	b	19ca0 <__assert_fail@plt+0x8c00>
   19c5c:	ldr	r0, [fp, #8]
   19c60:	asr	r3, r0, #31
   19c64:	mvn	r1, #0
   19c68:	str	r0, [sp, #96]	; 0x60
   19c6c:	mov	r0, r1
   19c70:	ldr	r2, [sp, #96]	; 0x60
   19c74:	bl	1f848 <__assert_fail@plt+0xe7a8>
   19c78:	ldr	r2, [fp, #-24]	; 0xffffffe8
   19c7c:	subs	r0, r0, r2
   19c80:	sbcs	r1, r1, r2, asr #31
   19c84:	bcs	19ca0 <__assert_fail@plt+0x8c00>
   19c88:	b	19c8c <__assert_fail@plt+0x8bec>
   19c8c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19c90:	ldr	r1, [fp, #8]
   19c94:	mul	r0, r0, r1
   19c98:	str	r0, [fp, #-28]	; 0xffffffe4
   19c9c:	b	19cb4 <__assert_fail@plt+0x8c14>
   19ca0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19ca4:	ldr	r1, [fp, #8]
   19ca8:	mul	r0, r0, r1
   19cac:	str	r0, [fp, #-28]	; 0xffffffe4
   19cb0:	b	19cc0 <__assert_fail@plt+0x8c20>
   19cb4:	ldr	r0, [pc, #-1036]	; 198b0 <__assert_fail@plt+0x8810>
   19cb8:	str	r0, [sp, #92]	; 0x5c
   19cbc:	b	19ce0 <__assert_fail@plt+0x8c40>
   19cc0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   19cc4:	cmp	r0, #64	; 0x40
   19cc8:	movw	r0, #0
   19ccc:	movlt	r0, #1
   19cd0:	tst	r0, #1
   19cd4:	movw	r0, #64	; 0x40
   19cd8:	moveq	r0, #0
   19cdc:	str	r0, [sp, #92]	; 0x5c
   19ce0:	ldr	r0, [sp, #92]	; 0x5c
   19ce4:	str	r0, [fp, #-32]	; 0xffffffe0
   19ce8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   19cec:	cmp	r0, #0
   19cf0:	beq	19d20 <__assert_fail@plt+0x8c80>
   19cf4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   19cf8:	ldr	r1, [fp, #8]
   19cfc:	sdiv	r0, r0, r1
   19d00:	str	r0, [fp, #-24]	; 0xffffffe8
   19d04:	ldr	r0, [fp, #-32]	; 0xffffffe0
   19d08:	mov	r1, r0
   19d0c:	ldr	r2, [fp, #8]
   19d10:	sdiv	r3, r0, r2
   19d14:	mls	r0, r3, r2, r0
   19d18:	sub	r0, r1, r0
   19d1c:	str	r0, [fp, #-28]	; 0xffffffe4
   19d20:	ldr	r0, [fp, #-4]
   19d24:	movw	r1, #0
   19d28:	cmp	r0, r1
   19d2c:	bne	19d3c <__assert_fail@plt+0x8c9c>
   19d30:	ldr	r0, [fp, #-8]
   19d34:	movw	r1, #0
   19d38:	str	r1, [r0]
   19d3c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19d40:	ldr	r1, [fp, #-20]	; 0xffffffec
   19d44:	sub	r0, r0, r1
   19d48:	ldr	r1, [fp, #-12]
   19d4c:	cmp	r0, r1
   19d50:	bge	1b13c <__assert_fail@plt+0xa09c>
   19d54:	ldr	r0, [fp, #-20]	; 0xffffffec
   19d58:	ldr	r1, [fp, #-12]
   19d5c:	add	r1, r0, r1
   19d60:	mov	r2, #1
   19d64:	cmp	r1, r0
   19d68:	movwvc	r2, #0
   19d6c:	str	r1, [fp, #-24]	; 0xffffffe8
   19d70:	tst	r2, #1
   19d74:	bne	1b138 <__assert_fail@plt+0xa098>
   19d78:	ldr	r0, [fp, #-16]
   19d7c:	movw	r1, #0
   19d80:	cmp	r1, r0
   19d84:	bgt	19d98 <__assert_fail@plt+0x8cf8>
   19d88:	ldr	r0, [fp, #-16]
   19d8c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19d90:	cmp	r0, r1
   19d94:	blt	1b138 <__assert_fail@plt+0xa098>
   19d98:	b	1a174 <__assert_fail@plt+0x90d4>
   19d9c:			; <UNDEFINED> instruction: 0xffff8000
   19da0:	b	19da4 <__assert_fail@plt+0x8d04>
   19da4:	ldr	r0, [fp, #8]
   19da8:	cmp	r0, #0
   19dac:	bge	19ec0 <__assert_fail@plt+0x8e20>
   19db0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19db4:	cmp	r0, #0
   19db8:	bge	19e44 <__assert_fail@plt+0x8da4>
   19dbc:	b	19dc0 <__assert_fail@plt+0x8d20>
   19dc0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19dc4:	ldr	r1, [fp, #8]
   19dc8:	movw	r2, #127	; 0x7f
   19dcc:	sdiv	r1, r2, r1
   19dd0:	cmp	r0, r1
   19dd4:	blt	19f60 <__assert_fail@plt+0x8ec0>
   19dd8:	b	19f78 <__assert_fail@plt+0x8ed8>
   19ddc:	b	19de0 <__assert_fail@plt+0x8d40>
   19de0:	ldr	r0, [pc, #-1172]	; 19954 <__assert_fail@plt+0x88b4>
   19de4:	ldr	r1, [fp, #8]
   19de8:	cmp	r1, r0
   19dec:	blt	19e04 <__assert_fail@plt+0x8d64>
   19df0:	b	19e10 <__assert_fail@plt+0x8d70>
   19df4:	ldr	r0, [fp, #8]
   19df8:	movw	r1, #0
   19dfc:	cmp	r1, r0
   19e00:	bge	19e10 <__assert_fail@plt+0x8d70>
   19e04:	movw	r0, #0
   19e08:	str	r0, [sp, #88]	; 0x58
   19e0c:	b	19e28 <__assert_fail@plt+0x8d88>
   19e10:	ldr	r0, [fp, #8]
   19e14:	movw	r1, #0
   19e18:	sub	r0, r1, r0
   19e1c:	movw	r1, #127	; 0x7f
   19e20:	sdiv	r0, r1, r0
   19e24:	str	r0, [sp, #88]	; 0x58
   19e28:	ldr	r0, [sp, #88]	; 0x58
   19e2c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19e30:	mvn	r2, #0
   19e34:	sub	r1, r2, r1
   19e38:	cmp	r0, r1
   19e3c:	ble	19f60 <__assert_fail@plt+0x8ec0>
   19e40:	b	19f78 <__assert_fail@plt+0x8ed8>
   19e44:	b	19e48 <__assert_fail@plt+0x8da8>
   19e48:	b	19ea4 <__assert_fail@plt+0x8e04>
   19e4c:	b	19ea4 <__assert_fail@plt+0x8e04>
   19e50:	ldr	r0, [fp, #8]
   19e54:	cmn	r0, #1
   19e58:	bne	19ea4 <__assert_fail@plt+0x8e04>
   19e5c:	b	19e60 <__assert_fail@plt+0x8dc0>
   19e60:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19e64:	mvn	r1, #127	; 0x7f
   19e68:	add	r0, r0, r1
   19e6c:	movw	r1, #0
   19e70:	cmp	r1, r0
   19e74:	blt	19f60 <__assert_fail@plt+0x8ec0>
   19e78:	b	19f78 <__assert_fail@plt+0x8ed8>
   19e7c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19e80:	movw	r1, #0
   19e84:	cmp	r1, r0
   19e88:	bge	19f78 <__assert_fail@plt+0x8ed8>
   19e8c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19e90:	sub	r0, r0, #1
   19e94:	movw	r1, #127	; 0x7f
   19e98:	cmp	r1, r0
   19e9c:	blt	19f60 <__assert_fail@plt+0x8ec0>
   19ea0:	b	19f78 <__assert_fail@plt+0x8ed8>
   19ea4:	ldr	r0, [fp, #8]
   19ea8:	mvn	r1, #127	; 0x7f
   19eac:	sdiv	r0, r1, r0
   19eb0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19eb4:	cmp	r0, r1
   19eb8:	blt	19f60 <__assert_fail@plt+0x8ec0>
   19ebc:	b	19f78 <__assert_fail@plt+0x8ed8>
   19ec0:	ldr	r0, [fp, #8]
   19ec4:	cmp	r0, #0
   19ec8:	bne	19ed0 <__assert_fail@plt+0x8e30>
   19ecc:	b	19f78 <__assert_fail@plt+0x8ed8>
   19ed0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19ed4:	cmp	r0, #0
   19ed8:	bge	19f48 <__assert_fail@plt+0x8ea8>
   19edc:	b	19ee0 <__assert_fail@plt+0x8e40>
   19ee0:	b	19f2c <__assert_fail@plt+0x8e8c>
   19ee4:	b	19f2c <__assert_fail@plt+0x8e8c>
   19ee8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19eec:	cmn	r0, #1
   19ef0:	bne	19f2c <__assert_fail@plt+0x8e8c>
   19ef4:	b	19ef8 <__assert_fail@plt+0x8e58>
   19ef8:	ldr	r0, [fp, #8]
   19efc:	mvn	r1, #127	; 0x7f
   19f00:	add	r0, r0, r1
   19f04:	movw	r1, #0
   19f08:	cmp	r1, r0
   19f0c:	blt	19f60 <__assert_fail@plt+0x8ec0>
   19f10:	b	19f78 <__assert_fail@plt+0x8ed8>
   19f14:	ldr	r0, [fp, #8]
   19f18:	sub	r0, r0, #1
   19f1c:	movw	r1, #127	; 0x7f
   19f20:	cmp	r1, r0
   19f24:	blt	19f60 <__assert_fail@plt+0x8ec0>
   19f28:	b	19f78 <__assert_fail@plt+0x8ed8>
   19f2c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19f30:	mvn	r1, #127	; 0x7f
   19f34:	sdiv	r0, r1, r0
   19f38:	ldr	r1, [fp, #8]
   19f3c:	cmp	r0, r1
   19f40:	blt	19f60 <__assert_fail@plt+0x8ec0>
   19f44:	b	19f78 <__assert_fail@plt+0x8ed8>
   19f48:	ldr	r0, [fp, #8]
   19f4c:	movw	r1, #127	; 0x7f
   19f50:	sdiv	r0, r1, r0
   19f54:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19f58:	cmp	r0, r1
   19f5c:	bge	19f78 <__assert_fail@plt+0x8ed8>
   19f60:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19f64:	ldr	r1, [fp, #8]
   19f68:	mul	r0, r0, r1
   19f6c:	sxtb	r0, r0
   19f70:	str	r0, [fp, #-28]	; 0xffffffe4
   19f74:	b	1b138 <__assert_fail@plt+0xa098>
   19f78:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19f7c:	ldr	r1, [fp, #8]
   19f80:	mul	r0, r0, r1
   19f84:	sxtb	r0, r0
   19f88:	str	r0, [fp, #-28]	; 0xffffffe4
   19f8c:	b	1b13c <__assert_fail@plt+0xa09c>
   19f90:	ldr	r0, [fp, #8]
   19f94:	cmp	r0, #0
   19f98:	bge	1a0a8 <__assert_fail@plt+0x9008>
   19f9c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19fa0:	cmp	r0, #0
   19fa4:	bge	1a030 <__assert_fail@plt+0x8f90>
   19fa8:	b	19fac <__assert_fail@plt+0x8f0c>
   19fac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19fb0:	ldr	r1, [fp, #8]
   19fb4:	movw	r2, #255	; 0xff
   19fb8:	sdiv	r1, r2, r1
   19fbc:	cmp	r0, r1
   19fc0:	blt	1a144 <__assert_fail@plt+0x90a4>
   19fc4:	b	1a15c <__assert_fail@plt+0x90bc>
   19fc8:	b	19fcc <__assert_fail@plt+0x8f2c>
   19fcc:	ldr	r0, [pc, #-1664]	; 19954 <__assert_fail@plt+0x88b4>
   19fd0:	ldr	r1, [fp, #8]
   19fd4:	cmp	r1, r0
   19fd8:	blt	19ff0 <__assert_fail@plt+0x8f50>
   19fdc:	b	19ffc <__assert_fail@plt+0x8f5c>
   19fe0:	ldr	r0, [fp, #8]
   19fe4:	movw	r1, #0
   19fe8:	cmp	r1, r0
   19fec:	bge	19ffc <__assert_fail@plt+0x8f5c>
   19ff0:	movw	r0, #0
   19ff4:	str	r0, [sp, #84]	; 0x54
   19ff8:	b	1a014 <__assert_fail@plt+0x8f74>
   19ffc:	ldr	r0, [fp, #8]
   1a000:	movw	r1, #0
   1a004:	sub	r0, r1, r0
   1a008:	movw	r1, #255	; 0xff
   1a00c:	sdiv	r0, r1, r0
   1a010:	str	r0, [sp, #84]	; 0x54
   1a014:	ldr	r0, [sp, #84]	; 0x54
   1a018:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a01c:	mvn	r2, #0
   1a020:	sub	r1, r2, r1
   1a024:	cmp	r0, r1
   1a028:	ble	1a144 <__assert_fail@plt+0x90a4>
   1a02c:	b	1a15c <__assert_fail@plt+0x90bc>
   1a030:	b	1a034 <__assert_fail@plt+0x8f94>
   1a034:	b	1a08c <__assert_fail@plt+0x8fec>
   1a038:	b	1a08c <__assert_fail@plt+0x8fec>
   1a03c:	ldr	r0, [fp, #8]
   1a040:	cmn	r0, #1
   1a044:	bne	1a08c <__assert_fail@plt+0x8fec>
   1a048:	b	1a04c <__assert_fail@plt+0x8fac>
   1a04c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a050:	add	r0, r0, #0
   1a054:	movw	r1, #0
   1a058:	cmp	r1, r0
   1a05c:	blt	1a144 <__assert_fail@plt+0x90a4>
   1a060:	b	1a15c <__assert_fail@plt+0x90bc>
   1a064:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a068:	movw	r1, #0
   1a06c:	cmp	r1, r0
   1a070:	bge	1a15c <__assert_fail@plt+0x90bc>
   1a074:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a078:	sub	r0, r0, #1
   1a07c:	mvn	r1, #0
   1a080:	cmp	r1, r0
   1a084:	blt	1a144 <__assert_fail@plt+0x90a4>
   1a088:	b	1a15c <__assert_fail@plt+0x90bc>
   1a08c:	ldr	r0, [fp, #8]
   1a090:	movw	r1, #0
   1a094:	sdiv	r0, r1, r0
   1a098:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a09c:	cmp	r0, r1
   1a0a0:	blt	1a144 <__assert_fail@plt+0x90a4>
   1a0a4:	b	1a15c <__assert_fail@plt+0x90bc>
   1a0a8:	ldr	r0, [fp, #8]
   1a0ac:	cmp	r0, #0
   1a0b0:	bne	1a0b8 <__assert_fail@plt+0x9018>
   1a0b4:	b	1a15c <__assert_fail@plt+0x90bc>
   1a0b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a0bc:	cmp	r0, #0
   1a0c0:	bge	1a12c <__assert_fail@plt+0x908c>
   1a0c4:	b	1a0c8 <__assert_fail@plt+0x9028>
   1a0c8:	b	1a110 <__assert_fail@plt+0x9070>
   1a0cc:	b	1a110 <__assert_fail@plt+0x9070>
   1a0d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a0d4:	cmn	r0, #1
   1a0d8:	bne	1a110 <__assert_fail@plt+0x9070>
   1a0dc:	b	1a0e0 <__assert_fail@plt+0x9040>
   1a0e0:	ldr	r0, [fp, #8]
   1a0e4:	add	r0, r0, #0
   1a0e8:	movw	r1, #0
   1a0ec:	cmp	r1, r0
   1a0f0:	blt	1a144 <__assert_fail@plt+0x90a4>
   1a0f4:	b	1a15c <__assert_fail@plt+0x90bc>
   1a0f8:	ldr	r0, [fp, #8]
   1a0fc:	sub	r0, r0, #1
   1a100:	mvn	r1, #0
   1a104:	cmp	r1, r0
   1a108:	blt	1a144 <__assert_fail@plt+0x90a4>
   1a10c:	b	1a15c <__assert_fail@plt+0x90bc>
   1a110:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a114:	movw	r1, #0
   1a118:	sdiv	r0, r1, r0
   1a11c:	ldr	r1, [fp, #8]
   1a120:	cmp	r0, r1
   1a124:	blt	1a144 <__assert_fail@plt+0x90a4>
   1a128:	b	1a15c <__assert_fail@plt+0x90bc>
   1a12c:	ldr	r0, [fp, #8]
   1a130:	movw	r1, #255	; 0xff
   1a134:	sdiv	r0, r1, r0
   1a138:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a13c:	cmp	r0, r1
   1a140:	bge	1a15c <__assert_fail@plt+0x90bc>
   1a144:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a148:	ldr	r1, [fp, #8]
   1a14c:	mul	r0, r0, r1
   1a150:	and	r0, r0, #255	; 0xff
   1a154:	str	r0, [fp, #-28]	; 0xffffffe4
   1a158:	b	1b138 <__assert_fail@plt+0xa098>
   1a15c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a160:	ldr	r1, [fp, #8]
   1a164:	mul	r0, r0, r1
   1a168:	and	r0, r0, #255	; 0xff
   1a16c:	str	r0, [fp, #-28]	; 0xffffffe4
   1a170:	b	1b13c <__assert_fail@plt+0xa09c>
   1a174:	b	1a550 <__assert_fail@plt+0x94b0>
   1a178:	b	1a17c <__assert_fail@plt+0x90dc>
   1a17c:	ldr	r0, [fp, #8]
   1a180:	cmp	r0, #0
   1a184:	bge	1a29c <__assert_fail@plt+0x91fc>
   1a188:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a18c:	cmp	r0, #0
   1a190:	bge	1a220 <__assert_fail@plt+0x9180>
   1a194:	b	1a198 <__assert_fail@plt+0x90f8>
   1a198:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a19c:	ldr	r1, [fp, #8]
   1a1a0:	movw	r2, #32767	; 0x7fff
   1a1a4:	sdiv	r1, r2, r1
   1a1a8:	cmp	r0, r1
   1a1ac:	blt	1a33c <__assert_fail@plt+0x929c>
   1a1b0:	b	1a354 <__assert_fail@plt+0x92b4>
   1a1b4:	andhi	r0, r0, r0
   1a1b8:	b	1a1bc <__assert_fail@plt+0x911c>
   1a1bc:	ldr	r0, [pc, #4004]	; 1b168 <__assert_fail@plt+0xa0c8>
   1a1c0:	ldr	r1, [fp, #8]
   1a1c4:	cmp	r1, r0
   1a1c8:	blt	1a1e0 <__assert_fail@plt+0x9140>
   1a1cc:	b	1a1ec <__assert_fail@plt+0x914c>
   1a1d0:	ldr	r0, [fp, #8]
   1a1d4:	movw	r1, #0
   1a1d8:	cmp	r1, r0
   1a1dc:	bge	1a1ec <__assert_fail@plt+0x914c>
   1a1e0:	movw	r0, #0
   1a1e4:	str	r0, [sp, #80]	; 0x50
   1a1e8:	b	1a204 <__assert_fail@plt+0x9164>
   1a1ec:	ldr	r0, [fp, #8]
   1a1f0:	movw	r1, #0
   1a1f4:	sub	r0, r1, r0
   1a1f8:	movw	r1, #32767	; 0x7fff
   1a1fc:	sdiv	r0, r1, r0
   1a200:	str	r0, [sp, #80]	; 0x50
   1a204:	ldr	r0, [sp, #80]	; 0x50
   1a208:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a20c:	mvn	r2, #0
   1a210:	sub	r1, r2, r1
   1a214:	cmp	r0, r1
   1a218:	ble	1a33c <__assert_fail@plt+0x929c>
   1a21c:	b	1a354 <__assert_fail@plt+0x92b4>
   1a220:	b	1a224 <__assert_fail@plt+0x9184>
   1a224:	b	1a280 <__assert_fail@plt+0x91e0>
   1a228:	b	1a280 <__assert_fail@plt+0x91e0>
   1a22c:	ldr	r0, [fp, #8]
   1a230:	cmn	r0, #1
   1a234:	bne	1a280 <__assert_fail@plt+0x91e0>
   1a238:	b	1a23c <__assert_fail@plt+0x919c>
   1a23c:	ldr	r0, [pc, #3884]	; 1b170 <__assert_fail@plt+0xa0d0>
   1a240:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a244:	add	r0, r1, r0
   1a248:	movw	r1, #0
   1a24c:	cmp	r1, r0
   1a250:	blt	1a33c <__assert_fail@plt+0x929c>
   1a254:	b	1a354 <__assert_fail@plt+0x92b4>
   1a258:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a25c:	movw	r1, #0
   1a260:	cmp	r1, r0
   1a264:	bge	1a354 <__assert_fail@plt+0x92b4>
   1a268:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a26c:	sub	r0, r0, #1
   1a270:	movw	r1, #32767	; 0x7fff
   1a274:	cmp	r1, r0
   1a278:	blt	1a33c <__assert_fail@plt+0x929c>
   1a27c:	b	1a354 <__assert_fail@plt+0x92b4>
   1a280:	ldr	r0, [pc, #3816]	; 1b170 <__assert_fail@plt+0xa0d0>
   1a284:	ldr	r1, [fp, #8]
   1a288:	sdiv	r0, r0, r1
   1a28c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a290:	cmp	r0, r1
   1a294:	blt	1a33c <__assert_fail@plt+0x929c>
   1a298:	b	1a354 <__assert_fail@plt+0x92b4>
   1a29c:	ldr	r0, [fp, #8]
   1a2a0:	cmp	r0, #0
   1a2a4:	bne	1a2ac <__assert_fail@plt+0x920c>
   1a2a8:	b	1a354 <__assert_fail@plt+0x92b4>
   1a2ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a2b0:	cmp	r0, #0
   1a2b4:	bge	1a324 <__assert_fail@plt+0x9284>
   1a2b8:	b	1a2bc <__assert_fail@plt+0x921c>
   1a2bc:	b	1a308 <__assert_fail@plt+0x9268>
   1a2c0:	b	1a308 <__assert_fail@plt+0x9268>
   1a2c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a2c8:	cmn	r0, #1
   1a2cc:	bne	1a308 <__assert_fail@plt+0x9268>
   1a2d0:	b	1a2d4 <__assert_fail@plt+0x9234>
   1a2d4:	ldr	r0, [pc, #3732]	; 1b170 <__assert_fail@plt+0xa0d0>
   1a2d8:	ldr	r1, [fp, #8]
   1a2dc:	add	r0, r1, r0
   1a2e0:	movw	r1, #0
   1a2e4:	cmp	r1, r0
   1a2e8:	blt	1a33c <__assert_fail@plt+0x929c>
   1a2ec:	b	1a354 <__assert_fail@plt+0x92b4>
   1a2f0:	ldr	r0, [fp, #8]
   1a2f4:	sub	r0, r0, #1
   1a2f8:	movw	r1, #32767	; 0x7fff
   1a2fc:	cmp	r1, r0
   1a300:	blt	1a33c <__assert_fail@plt+0x929c>
   1a304:	b	1a354 <__assert_fail@plt+0x92b4>
   1a308:	ldr	r0, [pc, #3680]	; 1b170 <__assert_fail@plt+0xa0d0>
   1a30c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a310:	sdiv	r0, r0, r1
   1a314:	ldr	r1, [fp, #8]
   1a318:	cmp	r0, r1
   1a31c:	blt	1a33c <__assert_fail@plt+0x929c>
   1a320:	b	1a354 <__assert_fail@plt+0x92b4>
   1a324:	ldr	r0, [fp, #8]
   1a328:	movw	r1, #32767	; 0x7fff
   1a32c:	sdiv	r0, r1, r0
   1a330:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a334:	cmp	r0, r1
   1a338:	bge	1a354 <__assert_fail@plt+0x92b4>
   1a33c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a340:	ldr	r1, [fp, #8]
   1a344:	mul	r0, r0, r1
   1a348:	sxth	r0, r0
   1a34c:	str	r0, [fp, #-28]	; 0xffffffe4
   1a350:	b	1b138 <__assert_fail@plt+0xa098>
   1a354:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a358:	ldr	r1, [fp, #8]
   1a35c:	mul	r0, r0, r1
   1a360:	sxth	r0, r0
   1a364:	str	r0, [fp, #-28]	; 0xffffffe4
   1a368:	b	1b13c <__assert_fail@plt+0xa09c>
   1a36c:	ldr	r0, [fp, #8]
   1a370:	cmp	r0, #0
   1a374:	bge	1a484 <__assert_fail@plt+0x93e4>
   1a378:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a37c:	cmp	r0, #0
   1a380:	bge	1a40c <__assert_fail@plt+0x936c>
   1a384:	b	1a388 <__assert_fail@plt+0x92e8>
   1a388:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a38c:	ldr	r1, [fp, #8]
   1a390:	movw	r2, #65535	; 0xffff
   1a394:	sdiv	r1, r2, r1
   1a398:	cmp	r0, r1
   1a39c:	blt	1a520 <__assert_fail@plt+0x9480>
   1a3a0:	b	1a538 <__assert_fail@plt+0x9498>
   1a3a4:	b	1a3a8 <__assert_fail@plt+0x9308>
   1a3a8:	ldr	r0, [pc, #3512]	; 1b168 <__assert_fail@plt+0xa0c8>
   1a3ac:	ldr	r1, [fp, #8]
   1a3b0:	cmp	r1, r0
   1a3b4:	blt	1a3cc <__assert_fail@plt+0x932c>
   1a3b8:	b	1a3d8 <__assert_fail@plt+0x9338>
   1a3bc:	ldr	r0, [fp, #8]
   1a3c0:	movw	r1, #0
   1a3c4:	cmp	r1, r0
   1a3c8:	bge	1a3d8 <__assert_fail@plt+0x9338>
   1a3cc:	movw	r0, #0
   1a3d0:	str	r0, [sp, #76]	; 0x4c
   1a3d4:	b	1a3f0 <__assert_fail@plt+0x9350>
   1a3d8:	ldr	r0, [fp, #8]
   1a3dc:	movw	r1, #0
   1a3e0:	sub	r0, r1, r0
   1a3e4:	movw	r1, #65535	; 0xffff
   1a3e8:	sdiv	r0, r1, r0
   1a3ec:	str	r0, [sp, #76]	; 0x4c
   1a3f0:	ldr	r0, [sp, #76]	; 0x4c
   1a3f4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a3f8:	mvn	r2, #0
   1a3fc:	sub	r1, r2, r1
   1a400:	cmp	r0, r1
   1a404:	ble	1a520 <__assert_fail@plt+0x9480>
   1a408:	b	1a538 <__assert_fail@plt+0x9498>
   1a40c:	b	1a410 <__assert_fail@plt+0x9370>
   1a410:	b	1a468 <__assert_fail@plt+0x93c8>
   1a414:	b	1a468 <__assert_fail@plt+0x93c8>
   1a418:	ldr	r0, [fp, #8]
   1a41c:	cmn	r0, #1
   1a420:	bne	1a468 <__assert_fail@plt+0x93c8>
   1a424:	b	1a428 <__assert_fail@plt+0x9388>
   1a428:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a42c:	add	r0, r0, #0
   1a430:	movw	r1, #0
   1a434:	cmp	r1, r0
   1a438:	blt	1a520 <__assert_fail@plt+0x9480>
   1a43c:	b	1a538 <__assert_fail@plt+0x9498>
   1a440:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a444:	movw	r1, #0
   1a448:	cmp	r1, r0
   1a44c:	bge	1a538 <__assert_fail@plt+0x9498>
   1a450:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a454:	sub	r0, r0, #1
   1a458:	mvn	r1, #0
   1a45c:	cmp	r1, r0
   1a460:	blt	1a520 <__assert_fail@plt+0x9480>
   1a464:	b	1a538 <__assert_fail@plt+0x9498>
   1a468:	ldr	r0, [fp, #8]
   1a46c:	movw	r1, #0
   1a470:	sdiv	r0, r1, r0
   1a474:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a478:	cmp	r0, r1
   1a47c:	blt	1a520 <__assert_fail@plt+0x9480>
   1a480:	b	1a538 <__assert_fail@plt+0x9498>
   1a484:	ldr	r0, [fp, #8]
   1a488:	cmp	r0, #0
   1a48c:	bne	1a494 <__assert_fail@plt+0x93f4>
   1a490:	b	1a538 <__assert_fail@plt+0x9498>
   1a494:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a498:	cmp	r0, #0
   1a49c:	bge	1a508 <__assert_fail@plt+0x9468>
   1a4a0:	b	1a4a4 <__assert_fail@plt+0x9404>
   1a4a4:	b	1a4ec <__assert_fail@plt+0x944c>
   1a4a8:	b	1a4ec <__assert_fail@plt+0x944c>
   1a4ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a4b0:	cmn	r0, #1
   1a4b4:	bne	1a4ec <__assert_fail@plt+0x944c>
   1a4b8:	b	1a4bc <__assert_fail@plt+0x941c>
   1a4bc:	ldr	r0, [fp, #8]
   1a4c0:	add	r0, r0, #0
   1a4c4:	movw	r1, #0
   1a4c8:	cmp	r1, r0
   1a4cc:	blt	1a520 <__assert_fail@plt+0x9480>
   1a4d0:	b	1a538 <__assert_fail@plt+0x9498>
   1a4d4:	ldr	r0, [fp, #8]
   1a4d8:	sub	r0, r0, #1
   1a4dc:	mvn	r1, #0
   1a4e0:	cmp	r1, r0
   1a4e4:	blt	1a520 <__assert_fail@plt+0x9480>
   1a4e8:	b	1a538 <__assert_fail@plt+0x9498>
   1a4ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a4f0:	movw	r1, #0
   1a4f4:	sdiv	r0, r1, r0
   1a4f8:	ldr	r1, [fp, #8]
   1a4fc:	cmp	r0, r1
   1a500:	blt	1a520 <__assert_fail@plt+0x9480>
   1a504:	b	1a538 <__assert_fail@plt+0x9498>
   1a508:	ldr	r0, [fp, #8]
   1a50c:	movw	r1, #65535	; 0xffff
   1a510:	sdiv	r0, r1, r0
   1a514:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a518:	cmp	r0, r1
   1a51c:	bge	1a538 <__assert_fail@plt+0x9498>
   1a520:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a524:	ldr	r1, [fp, #8]
   1a528:	mul	r0, r0, r1
   1a52c:	uxth	r0, r0
   1a530:	str	r0, [fp, #-28]	; 0xffffffe4
   1a534:	b	1b138 <__assert_fail@plt+0xa098>
   1a538:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a53c:	ldr	r1, [fp, #8]
   1a540:	mul	r0, r0, r1
   1a544:	uxth	r0, r0
   1a548:	str	r0, [fp, #-28]	; 0xffffffe4
   1a54c:	b	1b13c <__assert_fail@plt+0xa09c>
   1a550:	b	1a554 <__assert_fail@plt+0x94b4>
   1a554:	b	1a558 <__assert_fail@plt+0x94b8>
   1a558:	ldr	r0, [fp, #8]
   1a55c:	cmp	r0, #0
   1a560:	bge	1a664 <__assert_fail@plt+0x95c4>
   1a564:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a568:	cmp	r0, #0
   1a56c:	bge	1a5f8 <__assert_fail@plt+0x9558>
   1a570:	b	1a574 <__assert_fail@plt+0x94d4>
   1a574:	ldr	r0, [pc, #3048]	; 1b164 <__assert_fail@plt+0xa0c4>
   1a578:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a57c:	ldr	r2, [fp, #8]
   1a580:	sdiv	r0, r0, r2
   1a584:	cmp	r1, r0
   1a588:	blt	1a6f4 <__assert_fail@plt+0x9654>
   1a58c:	b	1a708 <__assert_fail@plt+0x9668>
   1a590:	b	1a594 <__assert_fail@plt+0x94f4>
   1a594:	ldr	r0, [pc, #3020]	; 1b168 <__assert_fail@plt+0xa0c8>
   1a598:	ldr	r1, [fp, #8]
   1a59c:	cmp	r1, r0
   1a5a0:	blt	1a5b8 <__assert_fail@plt+0x9518>
   1a5a4:	b	1a5c4 <__assert_fail@plt+0x9524>
   1a5a8:	ldr	r0, [fp, #8]
   1a5ac:	movw	r1, #0
   1a5b0:	cmp	r1, r0
   1a5b4:	bge	1a5c4 <__assert_fail@plt+0x9524>
   1a5b8:	movw	r0, #0
   1a5bc:	str	r0, [sp, #72]	; 0x48
   1a5c0:	b	1a5dc <__assert_fail@plt+0x953c>
   1a5c4:	ldr	r0, [pc, #2968]	; 1b164 <__assert_fail@plt+0xa0c4>
   1a5c8:	ldr	r1, [fp, #8]
   1a5cc:	movw	r2, #0
   1a5d0:	sub	r1, r2, r1
   1a5d4:	sdiv	r0, r0, r1
   1a5d8:	str	r0, [sp, #72]	; 0x48
   1a5dc:	ldr	r0, [sp, #72]	; 0x48
   1a5e0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a5e4:	mvn	r2, #0
   1a5e8:	sub	r1, r2, r1
   1a5ec:	cmp	r0, r1
   1a5f0:	ble	1a6f4 <__assert_fail@plt+0x9654>
   1a5f4:	b	1a708 <__assert_fail@plt+0x9668>
   1a5f8:	ldr	r0, [fp, #8]
   1a5fc:	cmn	r0, #1
   1a600:	bne	1a648 <__assert_fail@plt+0x95a8>
   1a604:	b	1a608 <__assert_fail@plt+0x9568>
   1a608:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a60c:	add	r0, r0, #-2147483648	; 0x80000000
   1a610:	movw	r1, #0
   1a614:	cmp	r1, r0
   1a618:	blt	1a6f4 <__assert_fail@plt+0x9654>
   1a61c:	b	1a708 <__assert_fail@plt+0x9668>
   1a620:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a624:	movw	r1, #0
   1a628:	cmp	r1, r0
   1a62c:	bge	1a708 <__assert_fail@plt+0x9668>
   1a630:	ldr	r0, [pc, #2860]	; 1b164 <__assert_fail@plt+0xa0c4>
   1a634:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a638:	sub	r1, r1, #1
   1a63c:	cmp	r0, r1
   1a640:	blt	1a6f4 <__assert_fail@plt+0x9654>
   1a644:	b	1a708 <__assert_fail@plt+0x9668>
   1a648:	ldr	r0, [pc, #2844]	; 1b16c <__assert_fail@plt+0xa0cc>
   1a64c:	ldr	r1, [fp, #8]
   1a650:	sdiv	r0, r0, r1
   1a654:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a658:	cmp	r0, r1
   1a65c:	blt	1a6f4 <__assert_fail@plt+0x9654>
   1a660:	b	1a708 <__assert_fail@plt+0x9668>
   1a664:	ldr	r0, [fp, #8]
   1a668:	cmp	r0, #0
   1a66c:	bne	1a674 <__assert_fail@plt+0x95d4>
   1a670:	b	1a708 <__assert_fail@plt+0x9668>
   1a674:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a678:	cmp	r0, #0
   1a67c:	bge	1a6dc <__assert_fail@plt+0x963c>
   1a680:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a684:	cmn	r0, #1
   1a688:	bne	1a6c0 <__assert_fail@plt+0x9620>
   1a68c:	b	1a690 <__assert_fail@plt+0x95f0>
   1a690:	ldr	r0, [fp, #8]
   1a694:	add	r0, r0, #-2147483648	; 0x80000000
   1a698:	movw	r1, #0
   1a69c:	cmp	r1, r0
   1a6a0:	blt	1a6f4 <__assert_fail@plt+0x9654>
   1a6a4:	b	1a708 <__assert_fail@plt+0x9668>
   1a6a8:	ldr	r0, [pc, #2740]	; 1b164 <__assert_fail@plt+0xa0c4>
   1a6ac:	ldr	r1, [fp, #8]
   1a6b0:	sub	r1, r1, #1
   1a6b4:	cmp	r0, r1
   1a6b8:	blt	1a6f4 <__assert_fail@plt+0x9654>
   1a6bc:	b	1a708 <__assert_fail@plt+0x9668>
   1a6c0:	ldr	r0, [pc, #2724]	; 1b16c <__assert_fail@plt+0xa0cc>
   1a6c4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a6c8:	sdiv	r0, r0, r1
   1a6cc:	ldr	r1, [fp, #8]
   1a6d0:	cmp	r0, r1
   1a6d4:	blt	1a6f4 <__assert_fail@plt+0x9654>
   1a6d8:	b	1a708 <__assert_fail@plt+0x9668>
   1a6dc:	ldr	r0, [pc, #2688]	; 1b164 <__assert_fail@plt+0xa0c4>
   1a6e0:	ldr	r1, [fp, #8]
   1a6e4:	sdiv	r0, r0, r1
   1a6e8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a6ec:	cmp	r0, r1
   1a6f0:	bge	1a708 <__assert_fail@plt+0x9668>
   1a6f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a6f8:	ldr	r1, [fp, #8]
   1a6fc:	mul	r0, r0, r1
   1a700:	str	r0, [fp, #-28]	; 0xffffffe4
   1a704:	b	1b138 <__assert_fail@plt+0xa098>
   1a708:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a70c:	ldr	r1, [fp, #8]
   1a710:	mul	r0, r0, r1
   1a714:	str	r0, [fp, #-28]	; 0xffffffe4
   1a718:	b	1b13c <__assert_fail@plt+0xa09c>
   1a71c:	ldr	r0, [fp, #8]
   1a720:	cmp	r0, #0
   1a724:	bge	1a834 <__assert_fail@plt+0x9794>
   1a728:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a72c:	cmp	r0, #0
   1a730:	bge	1a7bc <__assert_fail@plt+0x971c>
   1a734:	b	1a754 <__assert_fail@plt+0x96b4>
   1a738:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a73c:	ldr	r1, [fp, #8]
   1a740:	mvn	r2, #0
   1a744:	udiv	r1, r2, r1
   1a748:	cmp	r0, r1
   1a74c:	bcc	1a8d0 <__assert_fail@plt+0x9830>
   1a750:	b	1a8e4 <__assert_fail@plt+0x9844>
   1a754:	b	1a758 <__assert_fail@plt+0x96b8>
   1a758:	ldr	r0, [pc, #2568]	; 1b168 <__assert_fail@plt+0xa0c8>
   1a75c:	ldr	r1, [fp, #8]
   1a760:	cmp	r1, r0
   1a764:	blt	1a77c <__assert_fail@plt+0x96dc>
   1a768:	b	1a788 <__assert_fail@plt+0x96e8>
   1a76c:	ldr	r0, [fp, #8]
   1a770:	movw	r1, #0
   1a774:	cmp	r1, r0
   1a778:	bge	1a788 <__assert_fail@plt+0x96e8>
   1a77c:	movw	r0, #1
   1a780:	str	r0, [sp, #68]	; 0x44
   1a784:	b	1a7a0 <__assert_fail@plt+0x9700>
   1a788:	ldr	r0, [fp, #8]
   1a78c:	movw	r1, #0
   1a790:	sub	r0, r1, r0
   1a794:	mvn	r1, #0
   1a798:	udiv	r0, r1, r0
   1a79c:	str	r0, [sp, #68]	; 0x44
   1a7a0:	ldr	r0, [sp, #68]	; 0x44
   1a7a4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a7a8:	mvn	r2, #0
   1a7ac:	sub	r1, r2, r1
   1a7b0:	cmp	r0, r1
   1a7b4:	bls	1a8d0 <__assert_fail@plt+0x9830>
   1a7b8:	b	1a8e4 <__assert_fail@plt+0x9844>
   1a7bc:	b	1a7c0 <__assert_fail@plt+0x9720>
   1a7c0:	b	1a818 <__assert_fail@plt+0x9778>
   1a7c4:	b	1a818 <__assert_fail@plt+0x9778>
   1a7c8:	ldr	r0, [fp, #8]
   1a7cc:	cmn	r0, #1
   1a7d0:	bne	1a818 <__assert_fail@plt+0x9778>
   1a7d4:	b	1a7d8 <__assert_fail@plt+0x9738>
   1a7d8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a7dc:	add	r0, r0, #0
   1a7e0:	movw	r1, #0
   1a7e4:	cmp	r1, r0
   1a7e8:	blt	1a8d0 <__assert_fail@plt+0x9830>
   1a7ec:	b	1a8e4 <__assert_fail@plt+0x9844>
   1a7f0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a7f4:	movw	r1, #0
   1a7f8:	cmp	r1, r0
   1a7fc:	bge	1a8e4 <__assert_fail@plt+0x9844>
   1a800:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a804:	sub	r0, r0, #1
   1a808:	mvn	r1, #0
   1a80c:	cmp	r1, r0
   1a810:	blt	1a8d0 <__assert_fail@plt+0x9830>
   1a814:	b	1a8e4 <__assert_fail@plt+0x9844>
   1a818:	ldr	r0, [fp, #8]
   1a81c:	movw	r1, #0
   1a820:	sdiv	r0, r1, r0
   1a824:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a828:	cmp	r0, r1
   1a82c:	blt	1a8d0 <__assert_fail@plt+0x9830>
   1a830:	b	1a8e4 <__assert_fail@plt+0x9844>
   1a834:	ldr	r0, [fp, #8]
   1a838:	cmp	r0, #0
   1a83c:	bne	1a844 <__assert_fail@plt+0x97a4>
   1a840:	b	1a8e4 <__assert_fail@plt+0x9844>
   1a844:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a848:	cmp	r0, #0
   1a84c:	bge	1a8b8 <__assert_fail@plt+0x9818>
   1a850:	b	1a854 <__assert_fail@plt+0x97b4>
   1a854:	b	1a89c <__assert_fail@plt+0x97fc>
   1a858:	b	1a89c <__assert_fail@plt+0x97fc>
   1a85c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a860:	cmn	r0, #1
   1a864:	bne	1a89c <__assert_fail@plt+0x97fc>
   1a868:	b	1a86c <__assert_fail@plt+0x97cc>
   1a86c:	ldr	r0, [fp, #8]
   1a870:	add	r0, r0, #0
   1a874:	movw	r1, #0
   1a878:	cmp	r1, r0
   1a87c:	blt	1a8d0 <__assert_fail@plt+0x9830>
   1a880:	b	1a8e4 <__assert_fail@plt+0x9844>
   1a884:	ldr	r0, [fp, #8]
   1a888:	sub	r0, r0, #1
   1a88c:	mvn	r1, #0
   1a890:	cmp	r1, r0
   1a894:	blt	1a8d0 <__assert_fail@plt+0x9830>
   1a898:	b	1a8e4 <__assert_fail@plt+0x9844>
   1a89c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a8a0:	movw	r1, #0
   1a8a4:	sdiv	r0, r1, r0
   1a8a8:	ldr	r1, [fp, #8]
   1a8ac:	cmp	r0, r1
   1a8b0:	blt	1a8d0 <__assert_fail@plt+0x9830>
   1a8b4:	b	1a8e4 <__assert_fail@plt+0x9844>
   1a8b8:	ldr	r0, [fp, #8]
   1a8bc:	mvn	r1, #0
   1a8c0:	udiv	r0, r1, r0
   1a8c4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a8c8:	cmp	r0, r1
   1a8cc:	bcs	1a8e4 <__assert_fail@plt+0x9844>
   1a8d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a8d4:	ldr	r1, [fp, #8]
   1a8d8:	mul	r0, r0, r1
   1a8dc:	str	r0, [fp, #-28]	; 0xffffffe4
   1a8e0:	b	1b138 <__assert_fail@plt+0xa098>
   1a8e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a8e8:	ldr	r1, [fp, #8]
   1a8ec:	mul	r0, r0, r1
   1a8f0:	str	r0, [fp, #-28]	; 0xffffffe4
   1a8f4:	b	1b13c <__assert_fail@plt+0xa09c>
   1a8f8:	b	1a8fc <__assert_fail@plt+0x985c>
   1a8fc:	b	1a900 <__assert_fail@plt+0x9860>
   1a900:	ldr	r0, [fp, #8]
   1a904:	cmp	r0, #0
   1a908:	bge	1aa0c <__assert_fail@plt+0x996c>
   1a90c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a910:	cmp	r0, #0
   1a914:	bge	1a9a0 <__assert_fail@plt+0x9900>
   1a918:	b	1a91c <__assert_fail@plt+0x987c>
   1a91c:	ldr	r0, [pc, #2112]	; 1b164 <__assert_fail@plt+0xa0c4>
   1a920:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a924:	ldr	r2, [fp, #8]
   1a928:	sdiv	r0, r0, r2
   1a92c:	cmp	r1, r0
   1a930:	blt	1aa9c <__assert_fail@plt+0x99fc>
   1a934:	b	1aab0 <__assert_fail@plt+0x9a10>
   1a938:	b	1a93c <__assert_fail@plt+0x989c>
   1a93c:	ldr	r0, [pc, #2084]	; 1b168 <__assert_fail@plt+0xa0c8>
   1a940:	ldr	r1, [fp, #8]
   1a944:	cmp	r1, r0
   1a948:	blt	1a960 <__assert_fail@plt+0x98c0>
   1a94c:	b	1a96c <__assert_fail@plt+0x98cc>
   1a950:	ldr	r0, [fp, #8]
   1a954:	movw	r1, #0
   1a958:	cmp	r1, r0
   1a95c:	bge	1a96c <__assert_fail@plt+0x98cc>
   1a960:	movw	r0, #0
   1a964:	str	r0, [sp, #64]	; 0x40
   1a968:	b	1a984 <__assert_fail@plt+0x98e4>
   1a96c:	ldr	r0, [pc, #2032]	; 1b164 <__assert_fail@plt+0xa0c4>
   1a970:	ldr	r1, [fp, #8]
   1a974:	movw	r2, #0
   1a978:	sub	r1, r2, r1
   1a97c:	sdiv	r0, r0, r1
   1a980:	str	r0, [sp, #64]	; 0x40
   1a984:	ldr	r0, [sp, #64]	; 0x40
   1a988:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a98c:	mvn	r2, #0
   1a990:	sub	r1, r2, r1
   1a994:	cmp	r0, r1
   1a998:	ble	1aa9c <__assert_fail@plt+0x99fc>
   1a99c:	b	1aab0 <__assert_fail@plt+0x9a10>
   1a9a0:	ldr	r0, [fp, #8]
   1a9a4:	cmn	r0, #1
   1a9a8:	bne	1a9f0 <__assert_fail@plt+0x9950>
   1a9ac:	b	1a9b0 <__assert_fail@plt+0x9910>
   1a9b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a9b4:	add	r0, r0, #-2147483648	; 0x80000000
   1a9b8:	movw	r1, #0
   1a9bc:	cmp	r1, r0
   1a9c0:	blt	1aa9c <__assert_fail@plt+0x99fc>
   1a9c4:	b	1aab0 <__assert_fail@plt+0x9a10>
   1a9c8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a9cc:	movw	r1, #0
   1a9d0:	cmp	r1, r0
   1a9d4:	bge	1aab0 <__assert_fail@plt+0x9a10>
   1a9d8:	ldr	r0, [pc, #1924]	; 1b164 <__assert_fail@plt+0xa0c4>
   1a9dc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a9e0:	sub	r1, r1, #1
   1a9e4:	cmp	r0, r1
   1a9e8:	blt	1aa9c <__assert_fail@plt+0x99fc>
   1a9ec:	b	1aab0 <__assert_fail@plt+0x9a10>
   1a9f0:	ldr	r0, [pc, #1908]	; 1b16c <__assert_fail@plt+0xa0cc>
   1a9f4:	ldr	r1, [fp, #8]
   1a9f8:	sdiv	r0, r0, r1
   1a9fc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1aa00:	cmp	r0, r1
   1aa04:	blt	1aa9c <__assert_fail@plt+0x99fc>
   1aa08:	b	1aab0 <__assert_fail@plt+0x9a10>
   1aa0c:	ldr	r0, [fp, #8]
   1aa10:	cmp	r0, #0
   1aa14:	bne	1aa1c <__assert_fail@plt+0x997c>
   1aa18:	b	1aab0 <__assert_fail@plt+0x9a10>
   1aa1c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1aa20:	cmp	r0, #0
   1aa24:	bge	1aa84 <__assert_fail@plt+0x99e4>
   1aa28:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1aa2c:	cmn	r0, #1
   1aa30:	bne	1aa68 <__assert_fail@plt+0x99c8>
   1aa34:	b	1aa38 <__assert_fail@plt+0x9998>
   1aa38:	ldr	r0, [fp, #8]
   1aa3c:	add	r0, r0, #-2147483648	; 0x80000000
   1aa40:	movw	r1, #0
   1aa44:	cmp	r1, r0
   1aa48:	blt	1aa9c <__assert_fail@plt+0x99fc>
   1aa4c:	b	1aab0 <__assert_fail@plt+0x9a10>
   1aa50:	ldr	r0, [pc, #1804]	; 1b164 <__assert_fail@plt+0xa0c4>
   1aa54:	ldr	r1, [fp, #8]
   1aa58:	sub	r1, r1, #1
   1aa5c:	cmp	r0, r1
   1aa60:	blt	1aa9c <__assert_fail@plt+0x99fc>
   1aa64:	b	1aab0 <__assert_fail@plt+0x9a10>
   1aa68:	ldr	r0, [pc, #1788]	; 1b16c <__assert_fail@plt+0xa0cc>
   1aa6c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1aa70:	sdiv	r0, r0, r1
   1aa74:	ldr	r1, [fp, #8]
   1aa78:	cmp	r0, r1
   1aa7c:	blt	1aa9c <__assert_fail@plt+0x99fc>
   1aa80:	b	1aab0 <__assert_fail@plt+0x9a10>
   1aa84:	ldr	r0, [pc, #1752]	; 1b164 <__assert_fail@plt+0xa0c4>
   1aa88:	ldr	r1, [fp, #8]
   1aa8c:	sdiv	r0, r0, r1
   1aa90:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1aa94:	cmp	r0, r1
   1aa98:	bge	1aab0 <__assert_fail@plt+0x9a10>
   1aa9c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1aaa0:	ldr	r1, [fp, #8]
   1aaa4:	mul	r0, r0, r1
   1aaa8:	str	r0, [fp, #-28]	; 0xffffffe4
   1aaac:	b	1b138 <__assert_fail@plt+0xa098>
   1aab0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1aab4:	ldr	r1, [fp, #8]
   1aab8:	mul	r0, r0, r1
   1aabc:	str	r0, [fp, #-28]	; 0xffffffe4
   1aac0:	b	1b13c <__assert_fail@plt+0xa09c>
   1aac4:	ldr	r0, [fp, #8]
   1aac8:	cmp	r0, #0
   1aacc:	bge	1abdc <__assert_fail@plt+0x9b3c>
   1aad0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1aad4:	cmp	r0, #0
   1aad8:	bge	1ab64 <__assert_fail@plt+0x9ac4>
   1aadc:	b	1aafc <__assert_fail@plt+0x9a5c>
   1aae0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1aae4:	ldr	r1, [fp, #8]
   1aae8:	mvn	r2, #0
   1aaec:	udiv	r1, r2, r1
   1aaf0:	cmp	r0, r1
   1aaf4:	bcc	1ac78 <__assert_fail@plt+0x9bd8>
   1aaf8:	b	1ac8c <__assert_fail@plt+0x9bec>
   1aafc:	b	1ab00 <__assert_fail@plt+0x9a60>
   1ab00:	ldr	r0, [pc, #1632]	; 1b168 <__assert_fail@plt+0xa0c8>
   1ab04:	ldr	r1, [fp, #8]
   1ab08:	cmp	r1, r0
   1ab0c:	blt	1ab24 <__assert_fail@plt+0x9a84>
   1ab10:	b	1ab30 <__assert_fail@plt+0x9a90>
   1ab14:	ldr	r0, [fp, #8]
   1ab18:	movw	r1, #0
   1ab1c:	cmp	r1, r0
   1ab20:	bge	1ab30 <__assert_fail@plt+0x9a90>
   1ab24:	movw	r0, #1
   1ab28:	str	r0, [sp, #60]	; 0x3c
   1ab2c:	b	1ab48 <__assert_fail@plt+0x9aa8>
   1ab30:	ldr	r0, [fp, #8]
   1ab34:	movw	r1, #0
   1ab38:	sub	r0, r1, r0
   1ab3c:	mvn	r1, #0
   1ab40:	udiv	r0, r1, r0
   1ab44:	str	r0, [sp, #60]	; 0x3c
   1ab48:	ldr	r0, [sp, #60]	; 0x3c
   1ab4c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1ab50:	mvn	r2, #0
   1ab54:	sub	r1, r2, r1
   1ab58:	cmp	r0, r1
   1ab5c:	bls	1ac78 <__assert_fail@plt+0x9bd8>
   1ab60:	b	1ac8c <__assert_fail@plt+0x9bec>
   1ab64:	b	1ab68 <__assert_fail@plt+0x9ac8>
   1ab68:	b	1abc0 <__assert_fail@plt+0x9b20>
   1ab6c:	b	1abc0 <__assert_fail@plt+0x9b20>
   1ab70:	ldr	r0, [fp, #8]
   1ab74:	cmn	r0, #1
   1ab78:	bne	1abc0 <__assert_fail@plt+0x9b20>
   1ab7c:	b	1ab80 <__assert_fail@plt+0x9ae0>
   1ab80:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ab84:	add	r0, r0, #0
   1ab88:	movw	r1, #0
   1ab8c:	cmp	r1, r0
   1ab90:	blt	1ac78 <__assert_fail@plt+0x9bd8>
   1ab94:	b	1ac8c <__assert_fail@plt+0x9bec>
   1ab98:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ab9c:	movw	r1, #0
   1aba0:	cmp	r1, r0
   1aba4:	bge	1ac8c <__assert_fail@plt+0x9bec>
   1aba8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1abac:	sub	r0, r0, #1
   1abb0:	mvn	r1, #0
   1abb4:	cmp	r1, r0
   1abb8:	blt	1ac78 <__assert_fail@plt+0x9bd8>
   1abbc:	b	1ac8c <__assert_fail@plt+0x9bec>
   1abc0:	ldr	r0, [fp, #8]
   1abc4:	movw	r1, #0
   1abc8:	sdiv	r0, r1, r0
   1abcc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1abd0:	cmp	r0, r1
   1abd4:	blt	1ac78 <__assert_fail@plt+0x9bd8>
   1abd8:	b	1ac8c <__assert_fail@plt+0x9bec>
   1abdc:	ldr	r0, [fp, #8]
   1abe0:	cmp	r0, #0
   1abe4:	bne	1abec <__assert_fail@plt+0x9b4c>
   1abe8:	b	1ac8c <__assert_fail@plt+0x9bec>
   1abec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1abf0:	cmp	r0, #0
   1abf4:	bge	1ac60 <__assert_fail@plt+0x9bc0>
   1abf8:	b	1abfc <__assert_fail@plt+0x9b5c>
   1abfc:	b	1ac44 <__assert_fail@plt+0x9ba4>
   1ac00:	b	1ac44 <__assert_fail@plt+0x9ba4>
   1ac04:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ac08:	cmn	r0, #1
   1ac0c:	bne	1ac44 <__assert_fail@plt+0x9ba4>
   1ac10:	b	1ac14 <__assert_fail@plt+0x9b74>
   1ac14:	ldr	r0, [fp, #8]
   1ac18:	add	r0, r0, #0
   1ac1c:	movw	r1, #0
   1ac20:	cmp	r1, r0
   1ac24:	blt	1ac78 <__assert_fail@plt+0x9bd8>
   1ac28:	b	1ac8c <__assert_fail@plt+0x9bec>
   1ac2c:	ldr	r0, [fp, #8]
   1ac30:	sub	r0, r0, #1
   1ac34:	mvn	r1, #0
   1ac38:	cmp	r1, r0
   1ac3c:	blt	1ac78 <__assert_fail@plt+0x9bd8>
   1ac40:	b	1ac8c <__assert_fail@plt+0x9bec>
   1ac44:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ac48:	movw	r1, #0
   1ac4c:	sdiv	r0, r1, r0
   1ac50:	ldr	r1, [fp, #8]
   1ac54:	cmp	r0, r1
   1ac58:	blt	1ac78 <__assert_fail@plt+0x9bd8>
   1ac5c:	b	1ac8c <__assert_fail@plt+0x9bec>
   1ac60:	ldr	r0, [fp, #8]
   1ac64:	mvn	r1, #0
   1ac68:	udiv	r0, r1, r0
   1ac6c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1ac70:	cmp	r0, r1
   1ac74:	bcs	1ac8c <__assert_fail@plt+0x9bec>
   1ac78:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ac7c:	ldr	r1, [fp, #8]
   1ac80:	mul	r0, r0, r1
   1ac84:	str	r0, [fp, #-28]	; 0xffffffe4
   1ac88:	b	1b138 <__assert_fail@plt+0xa098>
   1ac8c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ac90:	ldr	r1, [fp, #8]
   1ac94:	mul	r0, r0, r1
   1ac98:	str	r0, [fp, #-28]	; 0xffffffe4
   1ac9c:	b	1b13c <__assert_fail@plt+0xa09c>
   1aca0:	b	1aca4 <__assert_fail@plt+0x9c04>
   1aca4:	ldr	r0, [fp, #8]
   1aca8:	cmp	r0, #0
   1acac:	bge	1ae14 <__assert_fail@plt+0x9d74>
   1acb0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1acb4:	cmp	r0, #0
   1acb8:	bge	1ad90 <__assert_fail@plt+0x9cf0>
   1acbc:	b	1acc0 <__assert_fail@plt+0x9c20>
   1acc0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1acc4:	ldr	r1, [fp, #8]
   1acc8:	asr	r3, r1, #31
   1accc:	mvn	r2, #0
   1acd0:	mvn	ip, #-2147483648	; 0x80000000
   1acd4:	str	r0, [sp, #56]	; 0x38
   1acd8:	mov	r0, r2
   1acdc:	str	r1, [sp, #52]	; 0x34
   1ace0:	mov	r1, ip
   1ace4:	ldr	r2, [sp, #52]	; 0x34
   1ace8:	bl	1f774 <__assert_fail@plt+0xe6d4>
   1acec:	ldr	r2, [sp, #56]	; 0x38
   1acf0:	subs	r0, r2, r0
   1acf4:	rscs	r1, r1, r2, asr #31
   1acf8:	blt	1aedc <__assert_fail@plt+0x9e3c>
   1acfc:	b	1aef0 <__assert_fail@plt+0x9e50>
   1ad00:	b	1ad04 <__assert_fail@plt+0x9c64>
   1ad04:	ldr	r0, [pc, #1116]	; 1b168 <__assert_fail@plt+0xa0c8>
   1ad08:	ldr	r1, [fp, #8]
   1ad0c:	cmp	r1, r0
   1ad10:	blt	1ad28 <__assert_fail@plt+0x9c88>
   1ad14:	b	1ad3c <__assert_fail@plt+0x9c9c>
   1ad18:	ldr	r0, [fp, #8]
   1ad1c:	movw	r1, #0
   1ad20:	cmp	r1, r0
   1ad24:	bge	1ad3c <__assert_fail@plt+0x9c9c>
   1ad28:	mov	r0, #0
   1ad2c:	mvn	r1, #0
   1ad30:	str	r1, [sp, #48]	; 0x30
   1ad34:	str	r0, [sp, #44]	; 0x2c
   1ad38:	b	1ad70 <__assert_fail@plt+0x9cd0>
   1ad3c:	ldr	r0, [fp, #8]
   1ad40:	rsb	r0, r0, #0
   1ad44:	asr	r3, r0, #31
   1ad48:	mvn	r1, #0
   1ad4c:	mvn	r2, #-2147483648	; 0x80000000
   1ad50:	str	r0, [sp, #40]	; 0x28
   1ad54:	mov	r0, r1
   1ad58:	mov	r1, r2
   1ad5c:	ldr	r2, [sp, #40]	; 0x28
   1ad60:	bl	1f774 <__assert_fail@plt+0xe6d4>
   1ad64:	str	r0, [sp, #48]	; 0x30
   1ad68:	str	r1, [sp, #44]	; 0x2c
   1ad6c:	b	1ad70 <__assert_fail@plt+0x9cd0>
   1ad70:	ldr	r0, [sp, #44]	; 0x2c
   1ad74:	ldr	r1, [sp, #48]	; 0x30
   1ad78:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1ad7c:	mvn	r2, r2
   1ad80:	subs	r1, r2, r1
   1ad84:	rscs	r0, r0, r2, asr #31
   1ad88:	bge	1aedc <__assert_fail@plt+0x9e3c>
   1ad8c:	b	1aef0 <__assert_fail@plt+0x9e50>
   1ad90:	ldr	r0, [fp, #8]
   1ad94:	cmn	r0, #1
   1ad98:	bne	1addc <__assert_fail@plt+0x9d3c>
   1ad9c:	b	1ada0 <__assert_fail@plt+0x9d00>
   1ada0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ada4:	mov	r1, #-2147483648	; 0x80000000
   1ada8:	add	r1, r1, r0, asr #31
   1adac:	rsbs	r0, r0, #0
   1adb0:	rscs	r1, r1, #0
   1adb4:	blt	1aedc <__assert_fail@plt+0x9e3c>
   1adb8:	b	1aef0 <__assert_fail@plt+0x9e50>
   1adbc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1adc0:	movw	r1, #0
   1adc4:	cmp	r1, r0
   1adc8:	bge	1aef0 <__assert_fail@plt+0x9e50>
   1adcc:	mov	r0, #0
   1add0:	cmp	r0, #0
   1add4:	bne	1aedc <__assert_fail@plt+0x9e3c>
   1add8:	b	1aef0 <__assert_fail@plt+0x9e50>
   1addc:	ldr	r0, [fp, #8]
   1ade0:	asr	r3, r0, #31
   1ade4:	mov	r1, #0
   1ade8:	mov	r2, #-2147483648	; 0x80000000
   1adec:	str	r0, [sp, #36]	; 0x24
   1adf0:	mov	r0, r1
   1adf4:	mov	r1, r2
   1adf8:	ldr	r2, [sp, #36]	; 0x24
   1adfc:	bl	1f774 <__assert_fail@plt+0xe6d4>
   1ae00:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1ae04:	subs	r0, r0, r2
   1ae08:	sbcs	r1, r1, r2, asr #31
   1ae0c:	blt	1aedc <__assert_fail@plt+0x9e3c>
   1ae10:	b	1aef0 <__assert_fail@plt+0x9e50>
   1ae14:	ldr	r0, [fp, #8]
   1ae18:	cmp	r0, #0
   1ae1c:	bne	1ae24 <__assert_fail@plt+0x9d84>
   1ae20:	b	1aef0 <__assert_fail@plt+0x9e50>
   1ae24:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ae28:	cmp	r0, #0
   1ae2c:	bge	1aea4 <__assert_fail@plt+0x9e04>
   1ae30:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ae34:	cmn	r0, #1
   1ae38:	bne	1ae6c <__assert_fail@plt+0x9dcc>
   1ae3c:	b	1ae40 <__assert_fail@plt+0x9da0>
   1ae40:	ldr	r0, [fp, #8]
   1ae44:	mov	r1, #-2147483648	; 0x80000000
   1ae48:	add	r1, r1, r0, asr #31
   1ae4c:	rsbs	r0, r0, #0
   1ae50:	rscs	r1, r1, #0
   1ae54:	blt	1aedc <__assert_fail@plt+0x9e3c>
   1ae58:	b	1aef0 <__assert_fail@plt+0x9e50>
   1ae5c:	mov	r0, #0
   1ae60:	cmp	r0, #0
   1ae64:	bne	1aedc <__assert_fail@plt+0x9e3c>
   1ae68:	b	1aef0 <__assert_fail@plt+0x9e50>
   1ae6c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ae70:	asr	r3, r0, #31
   1ae74:	mov	r1, #0
   1ae78:	mov	r2, #-2147483648	; 0x80000000
   1ae7c:	str	r0, [sp, #32]
   1ae80:	mov	r0, r1
   1ae84:	mov	r1, r2
   1ae88:	ldr	r2, [sp, #32]
   1ae8c:	bl	1f774 <__assert_fail@plt+0xe6d4>
   1ae90:	ldr	r2, [fp, #8]
   1ae94:	subs	r0, r0, r2
   1ae98:	sbcs	r1, r1, r2, asr #31
   1ae9c:	blt	1aedc <__assert_fail@plt+0x9e3c>
   1aea0:	b	1aef0 <__assert_fail@plt+0x9e50>
   1aea4:	ldr	r0, [fp, #8]
   1aea8:	asr	r3, r0, #31
   1aeac:	mvn	r1, #0
   1aeb0:	mvn	r2, #-2147483648	; 0x80000000
   1aeb4:	str	r0, [sp, #28]
   1aeb8:	mov	r0, r1
   1aebc:	mov	r1, r2
   1aec0:	ldr	r2, [sp, #28]
   1aec4:	bl	1f774 <__assert_fail@plt+0xe6d4>
   1aec8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1aecc:	subs	r0, r0, r2
   1aed0:	sbcs	r1, r1, r2, asr #31
   1aed4:	bge	1aef0 <__assert_fail@plt+0x9e50>
   1aed8:	b	1aedc <__assert_fail@plt+0x9e3c>
   1aedc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1aee0:	ldr	r1, [fp, #8]
   1aee4:	mul	r0, r0, r1
   1aee8:	str	r0, [fp, #-28]	; 0xffffffe4
   1aeec:	b	1b138 <__assert_fail@plt+0xa098>
   1aef0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1aef4:	ldr	r1, [fp, #8]
   1aef8:	mul	r0, r0, r1
   1aefc:	str	r0, [fp, #-28]	; 0xffffffe4
   1af00:	b	1b13c <__assert_fail@plt+0xa09c>
   1af04:	ldr	r0, [fp, #8]
   1af08:	cmp	r0, #0
   1af0c:	bge	1b05c <__assert_fail@plt+0x9fbc>
   1af10:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1af14:	cmp	r0, #0
   1af18:	bge	1afe4 <__assert_fail@plt+0x9f44>
   1af1c:	b	1af5c <__assert_fail@plt+0x9ebc>
   1af20:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1af24:	ldr	r1, [fp, #8]
   1af28:	asr	r3, r1, #31
   1af2c:	mvn	r2, #0
   1af30:	str	r0, [sp, #24]
   1af34:	mov	r0, r2
   1af38:	str	r1, [sp, #20]
   1af3c:	mov	r1, r2
   1af40:	ldr	r2, [sp, #20]
   1af44:	bl	1f848 <__assert_fail@plt+0xe7a8>
   1af48:	ldr	r2, [sp, #24]
   1af4c:	subs	r0, r2, r0
   1af50:	rscs	r1, r1, r2, asr #31
   1af54:	bcc	1b110 <__assert_fail@plt+0xa070>
   1af58:	b	1b124 <__assert_fail@plt+0xa084>
   1af5c:	b	1af60 <__assert_fail@plt+0x9ec0>
   1af60:	ldr	r0, [pc, #512]	; 1b168 <__assert_fail@plt+0xa0c8>
   1af64:	ldr	r1, [fp, #8]
   1af68:	cmp	r1, r0
   1af6c:	blt	1af84 <__assert_fail@plt+0x9ee4>
   1af70:	b	1af98 <__assert_fail@plt+0x9ef8>
   1af74:	ldr	r0, [fp, #8]
   1af78:	movw	r1, #0
   1af7c:	cmp	r1, r0
   1af80:	bge	1af98 <__assert_fail@plt+0x9ef8>
   1af84:	mov	r0, #1
   1af88:	mvn	r1, #0
   1af8c:	str	r1, [sp, #16]
   1af90:	str	r0, [sp, #12]
   1af94:	b	1afc4 <__assert_fail@plt+0x9f24>
   1af98:	ldr	r0, [fp, #8]
   1af9c:	rsb	r0, r0, #0
   1afa0:	asr	r3, r0, #31
   1afa4:	mvn	r1, #0
   1afa8:	str	r0, [sp, #8]
   1afac:	mov	r0, r1
   1afb0:	ldr	r2, [sp, #8]
   1afb4:	bl	1f848 <__assert_fail@plt+0xe7a8>
   1afb8:	str	r0, [sp, #16]
   1afbc:	str	r1, [sp, #12]
   1afc0:	b	1afc4 <__assert_fail@plt+0x9f24>
   1afc4:	ldr	r0, [sp, #12]
   1afc8:	ldr	r1, [sp, #16]
   1afcc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1afd0:	mvn	r2, r2
   1afd4:	subs	r1, r2, r1
   1afd8:	rscs	r0, r0, r2, asr #31
   1afdc:	bcs	1b110 <__assert_fail@plt+0xa070>
   1afe0:	b	1b124 <__assert_fail@plt+0xa084>
   1afe4:	b	1afe8 <__assert_fail@plt+0x9f48>
   1afe8:	b	1b040 <__assert_fail@plt+0x9fa0>
   1afec:	b	1b040 <__assert_fail@plt+0x9fa0>
   1aff0:	ldr	r0, [fp, #8]
   1aff4:	cmn	r0, #1
   1aff8:	bne	1b040 <__assert_fail@plt+0x9fa0>
   1affc:	b	1b000 <__assert_fail@plt+0x9f60>
   1b000:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b004:	add	r0, r0, #0
   1b008:	movw	r1, #0
   1b00c:	cmp	r1, r0
   1b010:	blt	1b110 <__assert_fail@plt+0xa070>
   1b014:	b	1b124 <__assert_fail@plt+0xa084>
   1b018:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b01c:	movw	r1, #0
   1b020:	cmp	r1, r0
   1b024:	bge	1b124 <__assert_fail@plt+0xa084>
   1b028:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b02c:	sub	r0, r0, #1
   1b030:	mvn	r1, #0
   1b034:	cmp	r1, r0
   1b038:	blt	1b110 <__assert_fail@plt+0xa070>
   1b03c:	b	1b124 <__assert_fail@plt+0xa084>
   1b040:	ldr	r0, [fp, #8]
   1b044:	movw	r1, #0
   1b048:	sdiv	r0, r1, r0
   1b04c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1b050:	cmp	r0, r1
   1b054:	blt	1b110 <__assert_fail@plt+0xa070>
   1b058:	b	1b124 <__assert_fail@plt+0xa084>
   1b05c:	ldr	r0, [fp, #8]
   1b060:	cmp	r0, #0
   1b064:	bne	1b06c <__assert_fail@plt+0x9fcc>
   1b068:	b	1b124 <__assert_fail@plt+0xa084>
   1b06c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b070:	cmp	r0, #0
   1b074:	bge	1b0e0 <__assert_fail@plt+0xa040>
   1b078:	b	1b07c <__assert_fail@plt+0x9fdc>
   1b07c:	b	1b0c4 <__assert_fail@plt+0xa024>
   1b080:	b	1b0c4 <__assert_fail@plt+0xa024>
   1b084:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b088:	cmn	r0, #1
   1b08c:	bne	1b0c4 <__assert_fail@plt+0xa024>
   1b090:	b	1b094 <__assert_fail@plt+0x9ff4>
   1b094:	ldr	r0, [fp, #8]
   1b098:	add	r0, r0, #0
   1b09c:	movw	r1, #0
   1b0a0:	cmp	r1, r0
   1b0a4:	blt	1b110 <__assert_fail@plt+0xa070>
   1b0a8:	b	1b124 <__assert_fail@plt+0xa084>
   1b0ac:	ldr	r0, [fp, #8]
   1b0b0:	sub	r0, r0, #1
   1b0b4:	mvn	r1, #0
   1b0b8:	cmp	r1, r0
   1b0bc:	blt	1b110 <__assert_fail@plt+0xa070>
   1b0c0:	b	1b124 <__assert_fail@plt+0xa084>
   1b0c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b0c8:	movw	r1, #0
   1b0cc:	sdiv	r0, r1, r0
   1b0d0:	ldr	r1, [fp, #8]
   1b0d4:	cmp	r0, r1
   1b0d8:	blt	1b110 <__assert_fail@plt+0xa070>
   1b0dc:	b	1b124 <__assert_fail@plt+0xa084>
   1b0e0:	ldr	r0, [fp, #8]
   1b0e4:	asr	r3, r0, #31
   1b0e8:	mvn	r1, #0
   1b0ec:	str	r0, [sp, #4]
   1b0f0:	mov	r0, r1
   1b0f4:	ldr	r2, [sp, #4]
   1b0f8:	bl	1f848 <__assert_fail@plt+0xe7a8>
   1b0fc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1b100:	subs	r0, r0, r2
   1b104:	sbcs	r1, r1, r2, asr #31
   1b108:	bcs	1b124 <__assert_fail@plt+0xa084>
   1b10c:	b	1b110 <__assert_fail@plt+0xa070>
   1b110:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b114:	ldr	r1, [fp, #8]
   1b118:	mul	r0, r0, r1
   1b11c:	str	r0, [fp, #-28]	; 0xffffffe4
   1b120:	b	1b138 <__assert_fail@plt+0xa098>
   1b124:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b128:	ldr	r1, [fp, #8]
   1b12c:	mul	r0, r0, r1
   1b130:	str	r0, [fp, #-28]	; 0xffffffe4
   1b134:	b	1b13c <__assert_fail@plt+0xa09c>
   1b138:	bl	1b314 <__assert_fail@plt+0xa274>
   1b13c:	ldr	r0, [fp, #-4]
   1b140:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1b144:	bl	18674 <__assert_fail@plt+0x75d4>
   1b148:	str	r0, [fp, #-4]
   1b14c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b150:	ldr	r1, [fp, #-8]
   1b154:	str	r0, [r1]
   1b158:	ldr	r0, [fp, #-4]
   1b15c:	mov	sp, fp
   1b160:	pop	{fp, pc}
   1b164:	svcvc	0x00ffffff
   1b168:	andhi	r0, r0, r1
   1b16c:	andhi	r0, r0, r0
   1b170:			; <UNDEFINED> instruction: 0xffff8000
   1b174:	push	{fp, lr}
   1b178:	mov	fp, sp
   1b17c:	sub	sp, sp, #8
   1b180:	str	r0, [sp, #4]
   1b184:	ldr	r0, [sp, #4]
   1b188:	movw	r1, #1
   1b18c:	bl	1b198 <__assert_fail@plt+0xa0f8>
   1b190:	mov	sp, fp
   1b194:	pop	{fp, pc}
   1b198:	push	{fp, lr}
   1b19c:	mov	fp, sp
   1b1a0:	sub	sp, sp, #8
   1b1a4:	str	r0, [sp, #4]
   1b1a8:	str	r1, [sp]
   1b1ac:	ldr	r0, [sp, #4]
   1b1b0:	ldr	r1, [sp]
   1b1b4:	bl	1d304 <__assert_fail@plt+0xc264>
   1b1b8:	bl	18600 <__assert_fail@plt+0x7560>
   1b1bc:	mov	sp, fp
   1b1c0:	pop	{fp, pc}
   1b1c4:	push	{fp, lr}
   1b1c8:	mov	fp, sp
   1b1cc:	sub	sp, sp, #8
   1b1d0:	str	r0, [sp, #4]
   1b1d4:	ldr	r0, [sp, #4]
   1b1d8:	movw	r1, #1
   1b1dc:	bl	1b1e8 <__assert_fail@plt+0xa148>
   1b1e0:	mov	sp, fp
   1b1e4:	pop	{fp, pc}
   1b1e8:	push	{fp, lr}
   1b1ec:	mov	fp, sp
   1b1f0:	sub	sp, sp, #8
   1b1f4:	str	r0, [sp, #4]
   1b1f8:	str	r1, [sp]
   1b1fc:	ldr	r0, [sp, #4]
   1b200:	ldr	r1, [sp]
   1b204:	bl	1d9e0 <__assert_fail@plt+0xc940>
   1b208:	bl	18600 <__assert_fail@plt+0x7560>
   1b20c:	mov	sp, fp
   1b210:	pop	{fp, pc}
   1b214:	push	{fp, lr}
   1b218:	mov	fp, sp
   1b21c:	sub	sp, sp, #16
   1b220:	str	r0, [fp, #-4]
   1b224:	str	r1, [sp, #8]
   1b228:	ldr	r0, [sp, #8]
   1b22c:	bl	185dc <__assert_fail@plt+0x753c>
   1b230:	ldr	r1, [fp, #-4]
   1b234:	ldr	r2, [sp, #8]
   1b238:	str	r0, [sp, #4]
   1b23c:	bl	10e9c <memcpy@plt>
   1b240:	ldr	r0, [sp, #4]
   1b244:	mov	sp, fp
   1b248:	pop	{fp, pc}
   1b24c:	push	{fp, lr}
   1b250:	mov	fp, sp
   1b254:	sub	sp, sp, #16
   1b258:	str	r0, [fp, #-4]
   1b25c:	str	r1, [sp, #8]
   1b260:	ldr	r0, [sp, #8]
   1b264:	bl	18630 <__assert_fail@plt+0x7590>
   1b268:	ldr	r1, [fp, #-4]
   1b26c:	ldr	r2, [sp, #8]
   1b270:	str	r0, [sp, #4]
   1b274:	bl	10e9c <memcpy@plt>
   1b278:	ldr	r0, [sp, #4]
   1b27c:	mov	sp, fp
   1b280:	pop	{fp, pc}
   1b284:	push	{fp, lr}
   1b288:	mov	fp, sp
   1b28c:	sub	sp, sp, #16
   1b290:	str	r0, [fp, #-4]
   1b294:	str	r1, [sp, #8]
   1b298:	ldr	r0, [sp, #8]
   1b29c:	add	r0, r0, #1
   1b2a0:	bl	18630 <__assert_fail@plt+0x7590>
   1b2a4:	str	r0, [sp, #4]
   1b2a8:	ldr	r0, [sp, #4]
   1b2ac:	ldr	r1, [sp, #8]
   1b2b0:	add	r0, r0, r1
   1b2b4:	movw	r1, #0
   1b2b8:	strb	r1, [r0]
   1b2bc:	ldr	r0, [sp, #4]
   1b2c0:	ldr	r1, [fp, #-4]
   1b2c4:	ldr	r2, [sp, #8]
   1b2c8:	str	r0, [sp]
   1b2cc:	bl	10e9c <memcpy@plt>
   1b2d0:	ldr	r0, [sp]
   1b2d4:	mov	sp, fp
   1b2d8:	pop	{fp, pc}
   1b2dc:	push	{fp, lr}
   1b2e0:	mov	fp, sp
   1b2e4:	sub	sp, sp, #8
   1b2e8:	str	r0, [sp, #4]
   1b2ec:	ldr	r0, [sp, #4]
   1b2f0:	ldr	r1, [sp, #4]
   1b2f4:	str	r0, [sp]
   1b2f8:	mov	r0, r1
   1b2fc:	bl	10fb0 <strlen@plt>
   1b300:	add	r1, r0, #1
   1b304:	ldr	r0, [sp]
   1b308:	bl	1b214 <__assert_fail@plt+0xa174>
   1b30c:	mov	sp, fp
   1b310:	pop	{fp, pc}
   1b314:	push	{fp, lr}
   1b318:	mov	fp, sp
   1b31c:	sub	sp, sp, #8
   1b320:	movw	r0, #8436	; 0x20f4
   1b324:	movt	r0, #3
   1b328:	ldr	r0, [r0]
   1b32c:	movw	r1, #5052	; 0x13bc
   1b330:	movt	r1, #2
   1b334:	str	r0, [sp, #4]
   1b338:	mov	r0, r1
   1b33c:	bl	10fa4 <gettext@plt>
   1b340:	ldr	r1, [sp, #4]
   1b344:	str	r0, [sp]
   1b348:	mov	r0, r1
   1b34c:	movw	r1, #0
   1b350:	movw	r2, #4003	; 0xfa3
   1b354:	movt	r2, #2
   1b358:	ldr	r3, [sp]
   1b35c:	bl	10f44 <error@plt>
   1b360:	bl	11088 <abort@plt>
   1b364:	bx	lr
   1b368:	push	{fp, lr}
   1b36c:	mov	fp, sp
   1b370:	sub	sp, sp, #8
   1b374:	str	r0, [sp, #4]
   1b378:	str	r1, [sp]
   1b37c:	ldr	r0, [sp, #4]
   1b380:	ldr	r1, [sp]
   1b384:	bl	1d4cc <__assert_fail@plt+0xc42c>
   1b388:	cmp	r0, #0
   1b38c:	bge	1b394 <__assert_fail@plt+0xa2f4>
   1b390:	bl	1b364 <__assert_fail@plt+0xa2c4>
   1b394:	mov	sp, fp
   1b398:	pop	{fp, pc}
   1b39c:	push	{fp, lr}
   1b3a0:	mov	fp, sp
   1b3a4:	sub	sp, sp, #80	; 0x50
   1b3a8:	ldr	ip, [fp, #8]
   1b3ac:	str	r0, [fp, #-8]
   1b3b0:	str	r1, [fp, #-12]
   1b3b4:	str	r2, [fp, #-16]
   1b3b8:	str	r3, [fp, #-20]	; 0xffffffec
   1b3bc:	movw	r0, #0
   1b3c0:	str	r0, [sp, #36]	; 0x24
   1b3c4:	ldr	r1, [fp, #-16]
   1b3c8:	cmp	r0, r1
   1b3cc:	bgt	1b3e0 <__assert_fail@plt+0xa340>
   1b3d0:	ldr	r0, [fp, #-16]
   1b3d4:	cmp	r0, #36	; 0x24
   1b3d8:	bgt	1b3e0 <__assert_fail@plt+0xa340>
   1b3dc:	b	1b400 <__assert_fail@plt+0xa360>
   1b3e0:	movw	r0, #5069	; 0x13cd
   1b3e4:	movt	r0, #2
   1b3e8:	movw	r1, #5107	; 0x13f3
   1b3ec:	movt	r1, #2
   1b3f0:	movw	r2, #85	; 0x55
   1b3f4:	movw	r3, #5123	; 0x1403
   1b3f8:	movt	r3, #2
   1b3fc:	bl	110a0 <__assert_fail@plt>
   1b400:	ldr	r0, [fp, #-12]
   1b404:	movw	r1, #0
   1b408:	cmp	r0, r1
   1b40c:	beq	1b41c <__assert_fail@plt+0xa37c>
   1b410:	ldr	r0, [fp, #-12]
   1b414:	str	r0, [sp, #12]
   1b418:	b	1b428 <__assert_fail@plt+0xa388>
   1b41c:	sub	r0, fp, #24
   1b420:	str	r0, [sp, #12]
   1b424:	b	1b428 <__assert_fail@plt+0xa388>
   1b428:	ldr	r0, [sp, #12]
   1b42c:	str	r0, [fp, #-28]	; 0xffffffe4
   1b430:	bl	10fd4 <__errno_location@plt>
   1b434:	movw	r1, #0
   1b438:	str	r1, [r0]
   1b43c:	ldr	r0, [fp, #-8]
   1b440:	str	r0, [sp, #32]
   1b444:	ldr	r0, [sp, #32]
   1b448:	ldrb	r0, [r0]
   1b44c:	strb	r0, [sp, #31]
   1b450:	bl	10f8c <__ctype_b_loc@plt>
   1b454:	ldr	r0, [r0]
   1b458:	ldrb	r1, [sp, #31]
   1b45c:	mov	r2, r1
   1b460:	add	r0, r0, r1, lsl #1
   1b464:	ldrh	r0, [r0]
   1b468:	and	r0, r0, #8192	; 0x2000
   1b46c:	cmp	r0, #0
   1b470:	beq	1b48c <__assert_fail@plt+0xa3ec>
   1b474:	ldr	r0, [sp, #32]
   1b478:	add	r1, r0, #1
   1b47c:	str	r1, [sp, #32]
   1b480:	ldrb	r0, [r0, #1]
   1b484:	strb	r0, [sp, #31]
   1b488:	b	1b450 <__assert_fail@plt+0xa3b0>
   1b48c:	ldrb	r0, [sp, #31]
   1b490:	cmp	r0, #45	; 0x2d
   1b494:	bne	1b4a4 <__assert_fail@plt+0xa404>
   1b498:	movw	r0, #4
   1b49c:	str	r0, [fp, #-4]
   1b4a0:	b	1ba20 <__assert_fail@plt+0xa980>
   1b4a4:	ldr	r0, [fp, #-8]
   1b4a8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1b4ac:	ldr	r2, [fp, #-16]
   1b4b0:	bl	11004 <strtoumax@plt>
   1b4b4:	str	r1, [sp, #44]	; 0x2c
   1b4b8:	str	r0, [sp, #40]	; 0x28
   1b4bc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1b4c0:	ldr	r0, [r0]
   1b4c4:	ldr	r1, [fp, #-8]
   1b4c8:	cmp	r0, r1
   1b4cc:	bne	1b538 <__assert_fail@plt+0xa498>
   1b4d0:	ldr	r0, [fp, #8]
   1b4d4:	movw	r1, #0
   1b4d8:	cmp	r0, r1
   1b4dc:	beq	1b528 <__assert_fail@plt+0xa488>
   1b4e0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1b4e4:	ldr	r0, [r0]
   1b4e8:	ldrb	r0, [r0]
   1b4ec:	cmp	r0, #0
   1b4f0:	beq	1b528 <__assert_fail@plt+0xa488>
   1b4f4:	ldr	r0, [fp, #8]
   1b4f8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1b4fc:	ldr	r1, [r1]
   1b500:	ldrb	r1, [r1]
   1b504:	bl	10fbc <strchr@plt>
   1b508:	movw	r1, #0
   1b50c:	cmp	r0, r1
   1b510:	beq	1b528 <__assert_fail@plt+0xa488>
   1b514:	mov	r0, #0
   1b518:	str	r0, [sp, #44]	; 0x2c
   1b51c:	mov	r0, #1
   1b520:	str	r0, [sp, #40]	; 0x28
   1b524:	b	1b534 <__assert_fail@plt+0xa494>
   1b528:	movw	r0, #4
   1b52c:	str	r0, [fp, #-4]
   1b530:	b	1ba20 <__assert_fail@plt+0xa980>
   1b534:	b	1b570 <__assert_fail@plt+0xa4d0>
   1b538:	bl	10fd4 <__errno_location@plt>
   1b53c:	ldr	r0, [r0]
   1b540:	cmp	r0, #0
   1b544:	beq	1b56c <__assert_fail@plt+0xa4cc>
   1b548:	bl	10fd4 <__errno_location@plt>
   1b54c:	ldr	r0, [r0]
   1b550:	cmp	r0, #34	; 0x22
   1b554:	beq	1b564 <__assert_fail@plt+0xa4c4>
   1b558:	movw	r0, #4
   1b55c:	str	r0, [fp, #-4]
   1b560:	b	1ba20 <__assert_fail@plt+0xa980>
   1b564:	movw	r0, #1
   1b568:	str	r0, [sp, #36]	; 0x24
   1b56c:	b	1b570 <__assert_fail@plt+0xa4d0>
   1b570:	ldr	r0, [fp, #8]
   1b574:	movw	r1, #0
   1b578:	cmp	r0, r1
   1b57c:	bne	1b5a0 <__assert_fail@plt+0xa500>
   1b580:	ldr	r0, [sp, #40]	; 0x28
   1b584:	ldr	r1, [sp, #44]	; 0x2c
   1b588:	ldr	r2, [fp, #-20]	; 0xffffffec
   1b58c:	str	r1, [r2, #4]
   1b590:	str	r0, [r2]
   1b594:	ldr	r0, [sp, #36]	; 0x24
   1b598:	str	r0, [fp, #-4]
   1b59c:	b	1ba20 <__assert_fail@plt+0xa980>
   1b5a0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1b5a4:	ldr	r0, [r0]
   1b5a8:	ldrb	r0, [r0]
   1b5ac:	cmp	r0, #0
   1b5b0:	beq	1ba04 <__assert_fail@plt+0xa964>
   1b5b4:	movw	r0, #1024	; 0x400
   1b5b8:	str	r0, [sp, #24]
   1b5bc:	movw	r0, #1
   1b5c0:	str	r0, [sp, #20]
   1b5c4:	ldr	r0, [fp, #8]
   1b5c8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1b5cc:	ldr	r1, [r1]
   1b5d0:	ldrb	r1, [r1]
   1b5d4:	bl	10fbc <strchr@plt>
   1b5d8:	movw	r1, #0
   1b5dc:	cmp	r0, r1
   1b5e0:	bne	1b608 <__assert_fail@plt+0xa568>
   1b5e4:	ldr	r0, [sp, #40]	; 0x28
   1b5e8:	ldr	r1, [sp, #44]	; 0x2c
   1b5ec:	ldr	r2, [fp, #-20]	; 0xffffffec
   1b5f0:	str	r1, [r2, #4]
   1b5f4:	str	r0, [r2]
   1b5f8:	ldr	r0, [sp, #36]	; 0x24
   1b5fc:	orr	r0, r0, #2
   1b600:	str	r0, [fp, #-4]
   1b604:	b	1ba20 <__assert_fail@plt+0xa980>
   1b608:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1b60c:	ldr	r0, [r0]
   1b610:	ldrb	r0, [r0]
   1b614:	sub	r0, r0, #69	; 0x45
   1b618:	cmp	r0, #47	; 0x2f
   1b61c:	str	r0, [sp, #8]
   1b620:	bhi	1b78c <__assert_fail@plt+0xa6ec>
   1b624:	add	r0, pc, #8
   1b628:	ldr	r1, [sp, #8]
   1b62c:	ldr	r0, [r0, r1, lsl #2]
   1b630:	mov	pc, r0
   1b634:	strdeq	fp, [r1], -r4
   1b638:	andeq	fp, r1, ip, lsl #15
   1b63c:	strdeq	fp, [r1], -r4
   1b640:	andeq	fp, r1, ip, lsl #15
   1b644:	andeq	fp, r1, ip, lsl #15
   1b648:	andeq	fp, r1, ip, lsl #15
   1b64c:	strdeq	fp, [r1], -r4
   1b650:	andeq	fp, r1, ip, lsl #15
   1b654:	strdeq	fp, [r1], -r4
   1b658:	andeq	fp, r1, ip, lsl #15
   1b65c:	andeq	fp, r1, ip, lsl #15
   1b660:	strdeq	fp, [r1], -r4
   1b664:	andeq	fp, r1, ip, lsl #15
   1b668:	andeq	fp, r1, ip, lsl #15
   1b66c:	andeq	fp, r1, ip, lsl #15
   1b670:	strdeq	fp, [r1], -r4
   1b674:	andeq	fp, r1, ip, lsl #15
   1b678:	andeq	fp, r1, ip, lsl #15
   1b67c:	andeq	fp, r1, ip, lsl #15
   1b680:	andeq	fp, r1, ip, lsl #15
   1b684:	strdeq	fp, [r1], -r4
   1b688:	strdeq	fp, [r1], -r4
   1b68c:	andeq	fp, r1, ip, lsl #15
   1b690:	andeq	fp, r1, ip, lsl #15
   1b694:	andeq	fp, r1, ip, lsl #15
   1b698:	andeq	fp, r1, ip, lsl #15
   1b69c:	andeq	fp, r1, ip, lsl #15
   1b6a0:	andeq	fp, r1, ip, lsl #15
   1b6a4:	andeq	fp, r1, ip, lsl #15
   1b6a8:	andeq	fp, r1, ip, lsl #15
   1b6ac:	andeq	fp, r1, ip, lsl #15
   1b6b0:	andeq	fp, r1, ip, lsl #15
   1b6b4:	andeq	fp, r1, ip, lsl #15
   1b6b8:	andeq	fp, r1, ip, lsl #15
   1b6bc:	strdeq	fp, [r1], -r4
   1b6c0:	andeq	fp, r1, ip, lsl #15
   1b6c4:	andeq	fp, r1, ip, lsl #15
   1b6c8:	andeq	fp, r1, ip, lsl #15
   1b6cc:	strdeq	fp, [r1], -r4
   1b6d0:	andeq	fp, r1, ip, lsl #15
   1b6d4:	strdeq	fp, [r1], -r4
   1b6d8:	andeq	fp, r1, ip, lsl #15
   1b6dc:	andeq	fp, r1, ip, lsl #15
   1b6e0:	andeq	fp, r1, ip, lsl #15
   1b6e4:	andeq	fp, r1, ip, lsl #15
   1b6e8:	andeq	fp, r1, ip, lsl #15
   1b6ec:	andeq	fp, r1, ip, lsl #15
   1b6f0:	strdeq	fp, [r1], -r4
   1b6f4:	ldr	r0, [fp, #8]
   1b6f8:	movw	r1, #48	; 0x30
   1b6fc:	bl	10fbc <strchr@plt>
   1b700:	movw	r1, #0
   1b704:	cmp	r0, r1
   1b708:	beq	1b788 <__assert_fail@plt+0xa6e8>
   1b70c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1b710:	ldr	r0, [r0]
   1b714:	ldrb	r0, [r0, #1]
   1b718:	mov	r1, r0
   1b71c:	cmp	r0, #66	; 0x42
   1b720:	str	r1, [sp, #4]
   1b724:	beq	1b770 <__assert_fail@plt+0xa6d0>
   1b728:	b	1b72c <__assert_fail@plt+0xa68c>
   1b72c:	ldr	r0, [sp, #4]
   1b730:	cmp	r0, #68	; 0x44
   1b734:	beq	1b770 <__assert_fail@plt+0xa6d0>
   1b738:	b	1b73c <__assert_fail@plt+0xa69c>
   1b73c:	ldr	r0, [sp, #4]
   1b740:	cmp	r0, #105	; 0x69
   1b744:	bne	1b784 <__assert_fail@plt+0xa6e4>
   1b748:	b	1b74c <__assert_fail@plt+0xa6ac>
   1b74c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1b750:	ldr	r0, [r0]
   1b754:	ldrb	r0, [r0, #2]
   1b758:	cmp	r0, #66	; 0x42
   1b75c:	bne	1b76c <__assert_fail@plt+0xa6cc>
   1b760:	ldr	r0, [sp, #20]
   1b764:	add	r0, r0, #2
   1b768:	str	r0, [sp, #20]
   1b76c:	b	1b784 <__assert_fail@plt+0xa6e4>
   1b770:	movw	r0, #1000	; 0x3e8
   1b774:	str	r0, [sp, #24]
   1b778:	ldr	r0, [sp, #20]
   1b77c:	add	r0, r0, #1
   1b780:	str	r0, [sp, #20]
   1b784:	b	1b788 <__assert_fail@plt+0xa6e8>
   1b788:	b	1b78c <__assert_fail@plt+0xa6ec>
   1b78c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1b790:	ldr	r0, [r0]
   1b794:	ldrb	r0, [r0]
   1b798:	sub	r0, r0, #66	; 0x42
   1b79c:	cmp	r0, #53	; 0x35
   1b7a0:	str	r0, [sp]
   1b7a4:	bhi	1b998 <__assert_fail@plt+0xa8f8>
   1b7a8:	add	r0, pc, #8
   1b7ac:	ldr	r1, [sp]
   1b7b0:	ldr	r0, [r0, r1, lsl #2]
   1b7b4:	mov	pc, r0
   1b7b8:	andeq	fp, r1, r4, lsr #17
   1b7bc:	muleq	r1, r8, r9
   1b7c0:	muleq	r1, r8, r9
   1b7c4:	andeq	fp, r1, r4, asr #17
   1b7c8:	muleq	r1, r8, r9
   1b7cc:	ldrdeq	fp, [r1], -ip
   1b7d0:	muleq	r1, r8, r9
   1b7d4:	muleq	r1, r8, r9
   1b7d8:	muleq	r1, r8, r9
   1b7dc:	strdeq	fp, [r1], -r4
   1b7e0:	muleq	r1, r8, r9
   1b7e4:	andeq	fp, r1, ip, lsl #18
   1b7e8:	muleq	r1, r8, r9
   1b7ec:	muleq	r1, r8, r9
   1b7f0:	andeq	fp, r1, r4, lsr #18
   1b7f4:	muleq	r1, r8, r9
   1b7f8:	muleq	r1, r8, r9
   1b7fc:	muleq	r1, r8, r9
   1b800:	andeq	fp, r1, ip, lsr r9
   1b804:	muleq	r1, r8, r9
   1b808:	muleq	r1, r8, r9
   1b80c:	muleq	r1, r8, r9
   1b810:	muleq	r1, r8, r9
   1b814:	andeq	fp, r1, r8, ror #18
   1b818:	andeq	fp, r1, r0, lsl #19
   1b81c:	muleq	r1, r8, r9
   1b820:	muleq	r1, r8, r9
   1b824:	muleq	r1, r8, r9
   1b828:	muleq	r1, r8, r9
   1b82c:	muleq	r1, r8, r9
   1b830:	muleq	r1, r8, r9
   1b834:	muleq	r1, r8, r9
   1b838:	muleq	r1, r0, r8
   1b83c:			; <UNDEFINED> instruction: 0x0001b8b8
   1b840:	muleq	r1, r8, r9
   1b844:	muleq	r1, r8, r9
   1b848:	muleq	r1, r8, r9
   1b84c:	ldrdeq	fp, [r1], -ip
   1b850:	muleq	r1, r8, r9
   1b854:	muleq	r1, r8, r9
   1b858:	muleq	r1, r8, r9
   1b85c:	strdeq	fp, [r1], -r4
   1b860:	muleq	r1, r8, r9
   1b864:	andeq	fp, r1, ip, lsl #18
   1b868:	muleq	r1, r8, r9
   1b86c:	muleq	r1, r8, r9
   1b870:	muleq	r1, r8, r9
   1b874:	muleq	r1, r8, r9
   1b878:	muleq	r1, r8, r9
   1b87c:	muleq	r1, r8, r9
   1b880:	andeq	fp, r1, ip, lsr r9
   1b884:	muleq	r1, r8, r9
   1b888:	muleq	r1, r8, r9
   1b88c:	andeq	fp, r1, r4, asr r9
   1b890:	add	r0, sp, #40	; 0x28
   1b894:	movw	r1, #512	; 0x200
   1b898:	bl	1ba2c <__assert_fail@plt+0xa98c>
   1b89c:	str	r0, [sp, #16]
   1b8a0:	b	1b9bc <__assert_fail@plt+0xa91c>
   1b8a4:	add	r0, sp, #40	; 0x28
   1b8a8:	movw	r1, #1024	; 0x400
   1b8ac:	bl	1ba2c <__assert_fail@plt+0xa98c>
   1b8b0:	str	r0, [sp, #16]
   1b8b4:	b	1b9bc <__assert_fail@plt+0xa91c>
   1b8b8:	movw	r0, #0
   1b8bc:	str	r0, [sp, #16]
   1b8c0:	b	1b9bc <__assert_fail@plt+0xa91c>
   1b8c4:	ldr	r1, [sp, #24]
   1b8c8:	add	r0, sp, #40	; 0x28
   1b8cc:	movw	r2, #6
   1b8d0:	bl	1d2a4 <__assert_fail@plt+0xc204>
   1b8d4:	str	r0, [sp, #16]
   1b8d8:	b	1b9bc <__assert_fail@plt+0xa91c>
   1b8dc:	ldr	r1, [sp, #24]
   1b8e0:	add	r0, sp, #40	; 0x28
   1b8e4:	movw	r2, #3
   1b8e8:	bl	1d2a4 <__assert_fail@plt+0xc204>
   1b8ec:	str	r0, [sp, #16]
   1b8f0:	b	1b9bc <__assert_fail@plt+0xa91c>
   1b8f4:	ldr	r1, [sp, #24]
   1b8f8:	add	r0, sp, #40	; 0x28
   1b8fc:	movw	r2, #1
   1b900:	bl	1d2a4 <__assert_fail@plt+0xc204>
   1b904:	str	r0, [sp, #16]
   1b908:	b	1b9bc <__assert_fail@plt+0xa91c>
   1b90c:	ldr	r1, [sp, #24]
   1b910:	add	r0, sp, #40	; 0x28
   1b914:	movw	r2, #2
   1b918:	bl	1d2a4 <__assert_fail@plt+0xc204>
   1b91c:	str	r0, [sp, #16]
   1b920:	b	1b9bc <__assert_fail@plt+0xa91c>
   1b924:	ldr	r1, [sp, #24]
   1b928:	add	r0, sp, #40	; 0x28
   1b92c:	movw	r2, #5
   1b930:	bl	1d2a4 <__assert_fail@plt+0xc204>
   1b934:	str	r0, [sp, #16]
   1b938:	b	1b9bc <__assert_fail@plt+0xa91c>
   1b93c:	ldr	r1, [sp, #24]
   1b940:	add	r0, sp, #40	; 0x28
   1b944:	movw	r2, #4
   1b948:	bl	1d2a4 <__assert_fail@plt+0xc204>
   1b94c:	str	r0, [sp, #16]
   1b950:	b	1b9bc <__assert_fail@plt+0xa91c>
   1b954:	add	r0, sp, #40	; 0x28
   1b958:	movw	r1, #2
   1b95c:	bl	1ba2c <__assert_fail@plt+0xa98c>
   1b960:	str	r0, [sp, #16]
   1b964:	b	1b9bc <__assert_fail@plt+0xa91c>
   1b968:	ldr	r1, [sp, #24]
   1b96c:	add	r0, sp, #40	; 0x28
   1b970:	movw	r2, #8
   1b974:	bl	1d2a4 <__assert_fail@plt+0xc204>
   1b978:	str	r0, [sp, #16]
   1b97c:	b	1b9bc <__assert_fail@plt+0xa91c>
   1b980:	ldr	r1, [sp, #24]
   1b984:	add	r0, sp, #40	; 0x28
   1b988:	movw	r2, #7
   1b98c:	bl	1d2a4 <__assert_fail@plt+0xc204>
   1b990:	str	r0, [sp, #16]
   1b994:	b	1b9bc <__assert_fail@plt+0xa91c>
   1b998:	ldr	r0, [sp, #40]	; 0x28
   1b99c:	ldr	r1, [sp, #44]	; 0x2c
   1b9a0:	ldr	r2, [fp, #-20]	; 0xffffffec
   1b9a4:	str	r1, [r2, #4]
   1b9a8:	str	r0, [r2]
   1b9ac:	ldr	r0, [sp, #36]	; 0x24
   1b9b0:	orr	r0, r0, #2
   1b9b4:	str	r0, [fp, #-4]
   1b9b8:	b	1ba20 <__assert_fail@plt+0xa980>
   1b9bc:	ldr	r0, [sp, #16]
   1b9c0:	ldr	r1, [sp, #36]	; 0x24
   1b9c4:	orr	r0, r1, r0
   1b9c8:	str	r0, [sp, #36]	; 0x24
   1b9cc:	ldr	r0, [sp, #20]
   1b9d0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1b9d4:	ldr	r2, [r1]
   1b9d8:	add	r0, r2, r0
   1b9dc:	str	r0, [r1]
   1b9e0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1b9e4:	ldr	r0, [r0]
   1b9e8:	ldrsb	r0, [r0]
   1b9ec:	cmp	r0, #0
   1b9f0:	beq	1ba00 <__assert_fail@plt+0xa960>
   1b9f4:	ldr	r0, [sp, #36]	; 0x24
   1b9f8:	orr	r0, r0, #2
   1b9fc:	str	r0, [sp, #36]	; 0x24
   1ba00:	b	1ba04 <__assert_fail@plt+0xa964>
   1ba04:	ldr	r0, [sp, #40]	; 0x28
   1ba08:	ldr	r1, [sp, #44]	; 0x2c
   1ba0c:	ldr	r2, [fp, #-20]	; 0xffffffec
   1ba10:	str	r1, [r2, #4]
   1ba14:	str	r0, [r2]
   1ba18:	ldr	r0, [sp, #36]	; 0x24
   1ba1c:	str	r0, [fp, #-4]
   1ba20:	ldr	r0, [fp, #-4]
   1ba24:	mov	sp, fp
   1ba28:	pop	{fp, pc}
   1ba2c:	push	{fp, lr}
   1ba30:	mov	fp, sp
   1ba34:	sub	sp, sp, #112	; 0x70
   1ba38:	str	r0, [fp, #-8]
   1ba3c:	str	r1, [fp, #-12]
   1ba40:	b	1bef0 <__assert_fail@plt+0xae50>
   1ba44:	b	1bcb8 <__assert_fail@plt+0xac18>
   1ba48:	ldr	r0, [fp, #-12]
   1ba4c:	cmp	r0, #0
   1ba50:	bge	1bba8 <__assert_fail@plt+0xab08>
   1ba54:	mov	r0, #1
   1ba58:	cmp	r0, #0
   1ba5c:	bne	1bb04 <__assert_fail@plt+0xaa64>
   1ba60:	b	1ba64 <__assert_fail@plt+0xa9c4>
   1ba64:	b	1ba68 <__assert_fail@plt+0xa9c8>
   1ba68:	ldr	r0, [fp, #-8]
   1ba6c:	ldr	r1, [r0]
   1ba70:	ldr	r0, [r0, #4]
   1ba74:	ldr	r2, [fp, #-12]
   1ba78:	mov	r3, #127	; 0x7f
   1ba7c:	sdiv	r2, r3, r2
   1ba80:	subs	r1, r1, r2
   1ba84:	sbcs	r0, r0, r2, asr #31
   1ba88:	bcc	1bc70 <__assert_fail@plt+0xabd0>
   1ba8c:	b	1bc94 <__assert_fail@plt+0xabf4>
   1ba90:	b	1ba94 <__assert_fail@plt+0xa9f4>
   1ba94:	ldr	r0, [pc, #4076]	; 1ca88 <__assert_fail@plt+0xb9e8>
   1ba98:	ldr	r1, [fp, #-12]
   1ba9c:	cmp	r1, r0
   1baa0:	blt	1bab8 <__assert_fail@plt+0xaa18>
   1baa4:	b	1bac4 <__assert_fail@plt+0xaa24>
   1baa8:	ldr	r0, [fp, #-12]
   1baac:	movw	r1, #0
   1bab0:	cmp	r1, r0
   1bab4:	bge	1bac4 <__assert_fail@plt+0xaa24>
   1bab8:	movw	r0, #0
   1babc:	str	r0, [fp, #-28]	; 0xffffffe4
   1bac0:	b	1badc <__assert_fail@plt+0xaa3c>
   1bac4:	ldr	r0, [fp, #-12]
   1bac8:	movw	r1, #0
   1bacc:	sub	r0, r1, r0
   1bad0:	movw	r1, #127	; 0x7f
   1bad4:	sdiv	r0, r1, r0
   1bad8:	str	r0, [fp, #-28]	; 0xffffffe4
   1badc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1bae0:	ldr	r1, [fp, #-8]
   1bae4:	ldr	r2, [r1]
   1bae8:	ldr	r1, [r1, #4]
   1baec:	mvn	r1, r1
   1baf0:	mvn	r2, r2
   1baf4:	subs	r2, r2, r0
   1baf8:	sbcs	r0, r1, r0, asr #31
   1bafc:	bcs	1bc70 <__assert_fail@plt+0xabd0>
   1bb00:	b	1bc94 <__assert_fail@plt+0xabf4>
   1bb04:	b	1bb08 <__assert_fail@plt+0xaa68>
   1bb08:	b	1bb80 <__assert_fail@plt+0xaae0>
   1bb0c:	b	1bb80 <__assert_fail@plt+0xaae0>
   1bb10:	ldr	r0, [fp, #-12]
   1bb14:	cmn	r0, #1
   1bb18:	bne	1bb80 <__assert_fail@plt+0xaae0>
   1bb1c:	b	1bb40 <__assert_fail@plt+0xaaa0>
   1bb20:	ldr	r0, [fp, #-8]
   1bb24:	ldr	r1, [r0]
   1bb28:	ldr	r0, [r0, #4]
   1bb2c:	eor	r1, r1, #128	; 0x80
   1bb30:	orr	r0, r1, r0
   1bb34:	cmp	r0, #0
   1bb38:	bne	1bc70 <__assert_fail@plt+0xabd0>
   1bb3c:	b	1bc94 <__assert_fail@plt+0xabf4>
   1bb40:	ldr	r0, [fp, #-8]
   1bb44:	ldr	r1, [r0]
   1bb48:	ldr	r0, [r0, #4]
   1bb4c:	orr	r0, r1, r0
   1bb50:	cmp	r0, #0
   1bb54:	beq	1bc94 <__assert_fail@plt+0xabf4>
   1bb58:	b	1bb5c <__assert_fail@plt+0xaabc>
   1bb5c:	ldr	r0, [fp, #-8]
   1bb60:	ldr	r1, [r0]
   1bb64:	ldr	r0, [r0, #4]
   1bb68:	subs	r1, r1, #1
   1bb6c:	sbc	r0, r0, #0
   1bb70:	rsbs	r1, r1, #127	; 0x7f
   1bb74:	rscs	r0, r0, #0
   1bb78:	bcc	1bc70 <__assert_fail@plt+0xabd0>
   1bb7c:	b	1bc94 <__assert_fail@plt+0xabf4>
   1bb80:	ldr	r0, [fp, #-12]
   1bb84:	mvn	r1, #127	; 0x7f
   1bb88:	sdiv	r0, r1, r0
   1bb8c:	ldr	r1, [fp, #-8]
   1bb90:	ldr	r2, [r1]
   1bb94:	ldr	r1, [r1, #4]
   1bb98:	subs	r2, r0, r2
   1bb9c:	rscs	r0, r1, r0, asr #31
   1bba0:	bcc	1bc70 <__assert_fail@plt+0xabd0>
   1bba4:	b	1bc94 <__assert_fail@plt+0xabf4>
   1bba8:	ldr	r0, [fp, #-12]
   1bbac:	cmp	r0, #0
   1bbb0:	bne	1bbb8 <__assert_fail@plt+0xab18>
   1bbb4:	b	1bc94 <__assert_fail@plt+0xabf4>
   1bbb8:	mov	r0, #1
   1bbbc:	cmp	r0, #0
   1bbc0:	bne	1bc48 <__assert_fail@plt+0xaba8>
   1bbc4:	b	1bbc8 <__assert_fail@plt+0xab28>
   1bbc8:	ldr	r0, [fp, #-8]
   1bbcc:	ldr	r1, [r0]
   1bbd0:	ldr	r0, [r0, #4]
   1bbd4:	and	r0, r1, r0
   1bbd8:	cmn	r0, #1
   1bbdc:	bne	1bc1c <__assert_fail@plt+0xab7c>
   1bbe0:	b	1bbe4 <__assert_fail@plt+0xab44>
   1bbe4:	b	1bbe8 <__assert_fail@plt+0xab48>
   1bbe8:	ldr	r0, [fp, #-12]
   1bbec:	mvn	r1, #127	; 0x7f
   1bbf0:	add	r0, r0, r1
   1bbf4:	movw	r1, #0
   1bbf8:	cmp	r1, r0
   1bbfc:	blt	1bc70 <__assert_fail@plt+0xabd0>
   1bc00:	b	1bc94 <__assert_fail@plt+0xabf4>
   1bc04:	ldr	r0, [fp, #-12]
   1bc08:	sub	r0, r0, #1
   1bc0c:	movw	r1, #127	; 0x7f
   1bc10:	cmp	r1, r0
   1bc14:	blt	1bc70 <__assert_fail@plt+0xabd0>
   1bc18:	b	1bc94 <__assert_fail@plt+0xabf4>
   1bc1c:	ldr	r0, [fp, #-8]
   1bc20:	ldr	r2, [r0]
   1bc24:	ldr	r3, [r0, #4]
   1bc28:	mvn	r0, #127	; 0x7f
   1bc2c:	mvn	r1, #0
   1bc30:	bl	1f848 <__assert_fail@plt+0xe7a8>
   1bc34:	ldr	r2, [fp, #-12]
   1bc38:	subs	r0, r0, r2
   1bc3c:	sbcs	r1, r1, r2, asr #31
   1bc40:	bcc	1bc70 <__assert_fail@plt+0xabd0>
   1bc44:	b	1bc94 <__assert_fail@plt+0xabf4>
   1bc48:	ldr	r0, [fp, #-12]
   1bc4c:	mov	r1, #127	; 0x7f
   1bc50:	sdiv	r0, r1, r0
   1bc54:	ldr	r1, [fp, #-8]
   1bc58:	ldr	r2, [r1]
   1bc5c:	ldr	r1, [r1, #4]
   1bc60:	subs	r2, r0, r2
   1bc64:	rscs	r0, r1, r0, asr #31
   1bc68:	bcs	1bc94 <__assert_fail@plt+0xabf4>
   1bc6c:	b	1bc70 <__assert_fail@plt+0xabd0>
   1bc70:	ldr	r0, [fp, #-8]
   1bc74:	ldr	r0, [r0]
   1bc78:	ldr	r1, [fp, #-12]
   1bc7c:	mul	r0, r0, r1
   1bc80:	sxtb	r0, r0
   1bc84:	asr	r1, r0, #31
   1bc88:	str	r0, [fp, #-24]	; 0xffffffe8
   1bc8c:	str	r1, [fp, #-20]	; 0xffffffec
   1bc90:	b	1d258 <__assert_fail@plt+0xc1b8>
   1bc94:	ldr	r0, [fp, #-8]
   1bc98:	ldr	r0, [r0]
   1bc9c:	ldr	r1, [fp, #-12]
   1bca0:	mul	r0, r0, r1
   1bca4:	sxtb	r0, r0
   1bca8:	asr	r1, r0, #31
   1bcac:	str	r0, [fp, #-24]	; 0xffffffe8
   1bcb0:	str	r1, [fp, #-20]	; 0xffffffec
   1bcb4:	b	1d274 <__assert_fail@plt+0xc1d4>
   1bcb8:	ldr	r0, [fp, #-12]
   1bcbc:	cmp	r0, #0
   1bcc0:	bge	1bdf4 <__assert_fail@plt+0xad54>
   1bcc4:	mov	r0, #1
   1bcc8:	cmp	r0, #0
   1bccc:	bne	1bd74 <__assert_fail@plt+0xacd4>
   1bcd0:	b	1bcd4 <__assert_fail@plt+0xac34>
   1bcd4:	b	1bcd8 <__assert_fail@plt+0xac38>
   1bcd8:	ldr	r0, [fp, #-8]
   1bcdc:	ldr	r1, [r0]
   1bce0:	ldr	r0, [r0, #4]
   1bce4:	ldr	r2, [fp, #-12]
   1bce8:	mov	r3, #255	; 0xff
   1bcec:	sdiv	r2, r3, r2
   1bcf0:	subs	r1, r1, r2
   1bcf4:	sbcs	r0, r0, r2, asr #31
   1bcf8:	bcc	1bea8 <__assert_fail@plt+0xae08>
   1bcfc:	b	1becc <__assert_fail@plt+0xae2c>
   1bd00:	b	1bd04 <__assert_fail@plt+0xac64>
   1bd04:	ldr	r0, [pc, #3452]	; 1ca88 <__assert_fail@plt+0xb9e8>
   1bd08:	ldr	r1, [fp, #-12]
   1bd0c:	cmp	r1, r0
   1bd10:	blt	1bd28 <__assert_fail@plt+0xac88>
   1bd14:	b	1bd34 <__assert_fail@plt+0xac94>
   1bd18:	ldr	r0, [fp, #-12]
   1bd1c:	movw	r1, #0
   1bd20:	cmp	r1, r0
   1bd24:	bge	1bd34 <__assert_fail@plt+0xac94>
   1bd28:	movw	r0, #0
   1bd2c:	str	r0, [fp, #-32]	; 0xffffffe0
   1bd30:	b	1bd4c <__assert_fail@plt+0xacac>
   1bd34:	ldr	r0, [fp, #-12]
   1bd38:	movw	r1, #0
   1bd3c:	sub	r0, r1, r0
   1bd40:	movw	r1, #255	; 0xff
   1bd44:	sdiv	r0, r1, r0
   1bd48:	str	r0, [fp, #-32]	; 0xffffffe0
   1bd4c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1bd50:	ldr	r1, [fp, #-8]
   1bd54:	ldr	r2, [r1]
   1bd58:	ldr	r1, [r1, #4]
   1bd5c:	mvn	r1, r1
   1bd60:	mvn	r2, r2
   1bd64:	subs	r2, r2, r0
   1bd68:	sbcs	r0, r1, r0, asr #31
   1bd6c:	bcs	1bea8 <__assert_fail@plt+0xae08>
   1bd70:	b	1becc <__assert_fail@plt+0xae2c>
   1bd74:	b	1bd78 <__assert_fail@plt+0xacd8>
   1bd78:	b	1bdd8 <__assert_fail@plt+0xad38>
   1bd7c:	b	1bdd8 <__assert_fail@plt+0xad38>
   1bd80:	ldr	r0, [fp, #-12]
   1bd84:	cmn	r0, #1
   1bd88:	bne	1bdd8 <__assert_fail@plt+0xad38>
   1bd8c:	b	1bdac <__assert_fail@plt+0xad0c>
   1bd90:	ldr	r0, [fp, #-8]
   1bd94:	ldr	r1, [r0]
   1bd98:	ldr	r0, [r0, #4]
   1bd9c:	orr	r0, r1, r0
   1bda0:	cmp	r0, #0
   1bda4:	bne	1bea8 <__assert_fail@plt+0xae08>
   1bda8:	b	1becc <__assert_fail@plt+0xae2c>
   1bdac:	ldr	r0, [fp, #-8]
   1bdb0:	ldr	r1, [r0]
   1bdb4:	ldr	r0, [r0, #4]
   1bdb8:	orr	r0, r1, r0
   1bdbc:	cmp	r0, #0
   1bdc0:	beq	1becc <__assert_fail@plt+0xae2c>
   1bdc4:	b	1bdc8 <__assert_fail@plt+0xad28>
   1bdc8:	mov	r0, #0
   1bdcc:	cmp	r0, #0
   1bdd0:	bne	1bea8 <__assert_fail@plt+0xae08>
   1bdd4:	b	1becc <__assert_fail@plt+0xae2c>
   1bdd8:	ldr	r0, [fp, #-8]
   1bddc:	ldr	r1, [r0]
   1bde0:	ldr	r0, [r0, #4]
   1bde4:	orr	r0, r1, r0
   1bde8:	cmp	r0, #0
   1bdec:	bne	1bea8 <__assert_fail@plt+0xae08>
   1bdf0:	b	1becc <__assert_fail@plt+0xae2c>
   1bdf4:	ldr	r0, [fp, #-12]
   1bdf8:	cmp	r0, #0
   1bdfc:	bne	1be04 <__assert_fail@plt+0xad64>
   1be00:	b	1becc <__assert_fail@plt+0xae2c>
   1be04:	mov	r0, #1
   1be08:	cmp	r0, #0
   1be0c:	bne	1be80 <__assert_fail@plt+0xade0>
   1be10:	b	1be14 <__assert_fail@plt+0xad74>
   1be14:	b	1be1c <__assert_fail@plt+0xad7c>
   1be18:	b	1be20 <__assert_fail@plt+0xad80>
   1be1c:	b	1be70 <__assert_fail@plt+0xadd0>
   1be20:	ldr	r0, [fp, #-8]
   1be24:	ldr	r1, [r0]
   1be28:	ldr	r0, [r0, #4]
   1be2c:	and	r0, r1, r0
   1be30:	cmn	r0, #1
   1be34:	bne	1be70 <__assert_fail@plt+0xadd0>
   1be38:	b	1be3c <__assert_fail@plt+0xad9c>
   1be3c:	b	1be40 <__assert_fail@plt+0xada0>
   1be40:	ldr	r0, [fp, #-12]
   1be44:	add	r0, r0, #0
   1be48:	movw	r1, #0
   1be4c:	cmp	r1, r0
   1be50:	blt	1bea8 <__assert_fail@plt+0xae08>
   1be54:	b	1becc <__assert_fail@plt+0xae2c>
   1be58:	ldr	r0, [fp, #-12]
   1be5c:	sub	r0, r0, #1
   1be60:	mvn	r1, #0
   1be64:	cmp	r1, r0
   1be68:	blt	1bea8 <__assert_fail@plt+0xae08>
   1be6c:	b	1becc <__assert_fail@plt+0xae2c>
   1be70:	ldr	r0, [fp, #-12]
   1be74:	cmp	r0, #0
   1be78:	bne	1bea8 <__assert_fail@plt+0xae08>
   1be7c:	b	1becc <__assert_fail@plt+0xae2c>
   1be80:	ldr	r0, [fp, #-12]
   1be84:	mov	r1, #255	; 0xff
   1be88:	sdiv	r0, r1, r0
   1be8c:	ldr	r1, [fp, #-8]
   1be90:	ldr	r2, [r1]
   1be94:	ldr	r1, [r1, #4]
   1be98:	subs	r2, r0, r2
   1be9c:	rscs	r0, r1, r0, asr #31
   1bea0:	bcs	1becc <__assert_fail@plt+0xae2c>
   1bea4:	b	1bea8 <__assert_fail@plt+0xae08>
   1bea8:	ldr	r0, [fp, #-8]
   1beac:	ldr	r0, [r0]
   1beb0:	ldr	r1, [fp, #-12]
   1beb4:	mul	r0, r0, r1
   1beb8:	uxtb	r0, r0
   1bebc:	mov	r1, #0
   1bec0:	str	r1, [fp, #-20]	; 0xffffffec
   1bec4:	str	r0, [fp, #-24]	; 0xffffffe8
   1bec8:	b	1d258 <__assert_fail@plt+0xc1b8>
   1becc:	ldr	r0, [fp, #-8]
   1bed0:	ldr	r0, [r0]
   1bed4:	ldr	r1, [fp, #-12]
   1bed8:	mul	r0, r0, r1
   1bedc:	uxtb	r0, r0
   1bee0:	mov	r1, #0
   1bee4:	str	r1, [fp, #-20]	; 0xffffffec
   1bee8:	str	r0, [fp, #-24]	; 0xffffffe8
   1beec:	b	1d274 <__assert_fail@plt+0xc1d4>
   1bef0:	b	1c3b0 <__assert_fail@plt+0xb310>
   1bef4:	b	1c178 <__assert_fail@plt+0xb0d8>
   1bef8:	ldr	r0, [fp, #-12]
   1befc:	cmp	r0, #0
   1bf00:	bge	1c064 <__assert_fail@plt+0xafc4>
   1bf04:	mov	r0, #1
   1bf08:	cmp	r0, #0
   1bf0c:	bne	1bfb4 <__assert_fail@plt+0xaf14>
   1bf10:	b	1bf14 <__assert_fail@plt+0xae74>
   1bf14:	b	1bf18 <__assert_fail@plt+0xae78>
   1bf18:	ldr	r0, [fp, #-8]
   1bf1c:	ldr	r1, [r0]
   1bf20:	ldr	r0, [r0, #4]
   1bf24:	ldr	r2, [fp, #-12]
   1bf28:	movw	r3, #32767	; 0x7fff
   1bf2c:	sdiv	r2, r3, r2
   1bf30:	subs	r1, r1, r2
   1bf34:	sbcs	r0, r0, r2, asr #31
   1bf38:	bcc	1c130 <__assert_fail@plt+0xb090>
   1bf3c:	b	1c154 <__assert_fail@plt+0xb0b4>
   1bf40:	b	1bf44 <__assert_fail@plt+0xaea4>
   1bf44:	ldr	r0, [pc, #2876]	; 1ca88 <__assert_fail@plt+0xb9e8>
   1bf48:	ldr	r1, [fp, #-12]
   1bf4c:	cmp	r1, r0
   1bf50:	blt	1bf68 <__assert_fail@plt+0xaec8>
   1bf54:	b	1bf74 <__assert_fail@plt+0xaed4>
   1bf58:	ldr	r0, [fp, #-12]
   1bf5c:	movw	r1, #0
   1bf60:	cmp	r1, r0
   1bf64:	bge	1bf74 <__assert_fail@plt+0xaed4>
   1bf68:	movw	r0, #0
   1bf6c:	str	r0, [fp, #-36]	; 0xffffffdc
   1bf70:	b	1bf8c <__assert_fail@plt+0xaeec>
   1bf74:	ldr	r0, [fp, #-12]
   1bf78:	movw	r1, #0
   1bf7c:	sub	r0, r1, r0
   1bf80:	movw	r1, #32767	; 0x7fff
   1bf84:	sdiv	r0, r1, r0
   1bf88:	str	r0, [fp, #-36]	; 0xffffffdc
   1bf8c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1bf90:	ldr	r1, [fp, #-8]
   1bf94:	ldr	r2, [r1]
   1bf98:	ldr	r1, [r1, #4]
   1bf9c:	mvn	r1, r1
   1bfa0:	mvn	r2, r2
   1bfa4:	subs	r2, r2, r0
   1bfa8:	sbcs	r0, r1, r0, asr #31
   1bfac:	bcs	1c130 <__assert_fail@plt+0xb090>
   1bfb0:	b	1c154 <__assert_fail@plt+0xb0b4>
   1bfb4:	b	1bfb8 <__assert_fail@plt+0xaf18>
   1bfb8:	b	1c038 <__assert_fail@plt+0xaf98>
   1bfbc:	b	1c038 <__assert_fail@plt+0xaf98>
   1bfc0:	ldr	r0, [fp, #-12]
   1bfc4:	cmn	r0, #1
   1bfc8:	bne	1c038 <__assert_fail@plt+0xaf98>
   1bfcc:	b	1bff0 <__assert_fail@plt+0xaf50>
   1bfd0:	ldr	r0, [fp, #-8]
   1bfd4:	ldr	r1, [r0]
   1bfd8:	ldr	r0, [r0, #4]
   1bfdc:	eor	r1, r1, #32768	; 0x8000
   1bfe0:	orr	r0, r1, r0
   1bfe4:	cmp	r0, #0
   1bfe8:	bne	1c130 <__assert_fail@plt+0xb090>
   1bfec:	b	1c154 <__assert_fail@plt+0xb0b4>
   1bff0:	ldr	r0, [fp, #-8]
   1bff4:	ldr	r1, [r0]
   1bff8:	ldr	r0, [r0, #4]
   1bffc:	orr	r0, r1, r0
   1c000:	cmp	r0, #0
   1c004:	beq	1c154 <__assert_fail@plt+0xb0b4>
   1c008:	b	1c00c <__assert_fail@plt+0xaf6c>
   1c00c:	ldr	r0, [fp, #-8]
   1c010:	ldr	r1, [r0]
   1c014:	ldr	r0, [r0, #4]
   1c018:	subs	r1, r1, #1
   1c01c:	sbc	r0, r0, #0
   1c020:	lsr	r1, r1, #15
   1c024:	orr	r1, r1, r0, lsl #17
   1c028:	orr	r0, r1, r0, lsr #15
   1c02c:	cmp	r0, #0
   1c030:	bne	1c130 <__assert_fail@plt+0xb090>
   1c034:	b	1c154 <__assert_fail@plt+0xb0b4>
   1c038:	ldr	r0, [fp, #-12]
   1c03c:	movw	r1, #32768	; 0x8000
   1c040:	movt	r1, #65535	; 0xffff
   1c044:	sdiv	r0, r1, r0
   1c048:	ldr	r1, [fp, #-8]
   1c04c:	ldr	r2, [r1]
   1c050:	ldr	r1, [r1, #4]
   1c054:	subs	r2, r0, r2
   1c058:	rscs	r0, r1, r0, asr #31
   1c05c:	bcc	1c130 <__assert_fail@plt+0xb090>
   1c060:	b	1c154 <__assert_fail@plt+0xb0b4>
   1c064:	ldr	r0, [fp, #-12]
   1c068:	cmp	r0, #0
   1c06c:	bne	1c074 <__assert_fail@plt+0xafd4>
   1c070:	b	1c154 <__assert_fail@plt+0xb0b4>
   1c074:	mov	r0, #1
   1c078:	cmp	r0, #0
   1c07c:	bne	1c108 <__assert_fail@plt+0xb068>
   1c080:	b	1c084 <__assert_fail@plt+0xafe4>
   1c084:	ldr	r0, [fp, #-8]
   1c088:	ldr	r1, [r0]
   1c08c:	ldr	r0, [r0, #4]
   1c090:	and	r0, r1, r0
   1c094:	cmn	r0, #1
   1c098:	bne	1c0d8 <__assert_fail@plt+0xb038>
   1c09c:	b	1c0a0 <__assert_fail@plt+0xb000>
   1c0a0:	b	1c0a4 <__assert_fail@plt+0xb004>
   1c0a4:	ldr	r0, [pc, #4020]	; 1d060 <__assert_fail@plt+0xbfc0>
   1c0a8:	ldr	r1, [fp, #-12]
   1c0ac:	add	r0, r1, r0
   1c0b0:	movw	r1, #0
   1c0b4:	cmp	r1, r0
   1c0b8:	blt	1c130 <__assert_fail@plt+0xb090>
   1c0bc:	b	1c154 <__assert_fail@plt+0xb0b4>
   1c0c0:	ldr	r0, [fp, #-12]
   1c0c4:	sub	r0, r0, #1
   1c0c8:	movw	r1, #32767	; 0x7fff
   1c0cc:	cmp	r1, r0
   1c0d0:	blt	1c130 <__assert_fail@plt+0xb090>
   1c0d4:	b	1c154 <__assert_fail@plt+0xb0b4>
   1c0d8:	ldr	r0, [fp, #-8]
   1c0dc:	ldr	r2, [r0]
   1c0e0:	ldr	r3, [r0, #4]
   1c0e4:	movw	r0, #32768	; 0x8000
   1c0e8:	movt	r0, #65535	; 0xffff
   1c0ec:	mvn	r1, #0
   1c0f0:	bl	1f848 <__assert_fail@plt+0xe7a8>
   1c0f4:	ldr	r2, [fp, #-12]
   1c0f8:	subs	r0, r0, r2
   1c0fc:	sbcs	r1, r1, r2, asr #31
   1c100:	bcc	1c130 <__assert_fail@plt+0xb090>
   1c104:	b	1c154 <__assert_fail@plt+0xb0b4>
   1c108:	ldr	r0, [fp, #-12]
   1c10c:	movw	r1, #32767	; 0x7fff
   1c110:	sdiv	r0, r1, r0
   1c114:	ldr	r1, [fp, #-8]
   1c118:	ldr	r2, [r1]
   1c11c:	ldr	r1, [r1, #4]
   1c120:	subs	r2, r0, r2
   1c124:	rscs	r0, r1, r0, asr #31
   1c128:	bcs	1c154 <__assert_fail@plt+0xb0b4>
   1c12c:	b	1c130 <__assert_fail@plt+0xb090>
   1c130:	ldr	r0, [fp, #-8]
   1c134:	ldr	r0, [r0]
   1c138:	ldr	r1, [fp, #-12]
   1c13c:	mul	r0, r0, r1
   1c140:	sxth	r0, r0
   1c144:	asr	r1, r0, #31
   1c148:	str	r0, [fp, #-24]	; 0xffffffe8
   1c14c:	str	r1, [fp, #-20]	; 0xffffffec
   1c150:	b	1d258 <__assert_fail@plt+0xc1b8>
   1c154:	ldr	r0, [fp, #-8]
   1c158:	ldr	r0, [r0]
   1c15c:	ldr	r1, [fp, #-12]
   1c160:	mul	r0, r0, r1
   1c164:	sxth	r0, r0
   1c168:	asr	r1, r0, #31
   1c16c:	str	r0, [fp, #-24]	; 0xffffffe8
   1c170:	str	r1, [fp, #-20]	; 0xffffffec
   1c174:	b	1d274 <__assert_fail@plt+0xc1d4>
   1c178:	ldr	r0, [fp, #-12]
   1c17c:	cmp	r0, #0
   1c180:	bge	1c2b4 <__assert_fail@plt+0xb214>
   1c184:	mov	r0, #1
   1c188:	cmp	r0, #0
   1c18c:	bne	1c234 <__assert_fail@plt+0xb194>
   1c190:	b	1c194 <__assert_fail@plt+0xb0f4>
   1c194:	b	1c198 <__assert_fail@plt+0xb0f8>
   1c198:	ldr	r0, [fp, #-8]
   1c19c:	ldr	r1, [r0]
   1c1a0:	ldr	r0, [r0, #4]
   1c1a4:	ldr	r2, [fp, #-12]
   1c1a8:	movw	r3, #65535	; 0xffff
   1c1ac:	sdiv	r2, r3, r2
   1c1b0:	subs	r1, r1, r2
   1c1b4:	sbcs	r0, r0, r2, asr #31
   1c1b8:	bcc	1c368 <__assert_fail@plt+0xb2c8>
   1c1bc:	b	1c38c <__assert_fail@plt+0xb2ec>
   1c1c0:	b	1c1c4 <__assert_fail@plt+0xb124>
   1c1c4:	ldr	r0, [pc, #2236]	; 1ca88 <__assert_fail@plt+0xb9e8>
   1c1c8:	ldr	r1, [fp, #-12]
   1c1cc:	cmp	r1, r0
   1c1d0:	blt	1c1e8 <__assert_fail@plt+0xb148>
   1c1d4:	b	1c1f4 <__assert_fail@plt+0xb154>
   1c1d8:	ldr	r0, [fp, #-12]
   1c1dc:	movw	r1, #0
   1c1e0:	cmp	r1, r0
   1c1e4:	bge	1c1f4 <__assert_fail@plt+0xb154>
   1c1e8:	movw	r0, #0
   1c1ec:	str	r0, [fp, #-40]	; 0xffffffd8
   1c1f0:	b	1c20c <__assert_fail@plt+0xb16c>
   1c1f4:	ldr	r0, [fp, #-12]
   1c1f8:	movw	r1, #0
   1c1fc:	sub	r0, r1, r0
   1c200:	movw	r1, #65535	; 0xffff
   1c204:	sdiv	r0, r1, r0
   1c208:	str	r0, [fp, #-40]	; 0xffffffd8
   1c20c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1c210:	ldr	r1, [fp, #-8]
   1c214:	ldr	r2, [r1]
   1c218:	ldr	r1, [r1, #4]
   1c21c:	mvn	r1, r1
   1c220:	mvn	r2, r2
   1c224:	subs	r2, r2, r0
   1c228:	sbcs	r0, r1, r0, asr #31
   1c22c:	bcs	1c368 <__assert_fail@plt+0xb2c8>
   1c230:	b	1c38c <__assert_fail@plt+0xb2ec>
   1c234:	b	1c238 <__assert_fail@plt+0xb198>
   1c238:	b	1c298 <__assert_fail@plt+0xb1f8>
   1c23c:	b	1c298 <__assert_fail@plt+0xb1f8>
   1c240:	ldr	r0, [fp, #-12]
   1c244:	cmn	r0, #1
   1c248:	bne	1c298 <__assert_fail@plt+0xb1f8>
   1c24c:	b	1c26c <__assert_fail@plt+0xb1cc>
   1c250:	ldr	r0, [fp, #-8]
   1c254:	ldr	r1, [r0]
   1c258:	ldr	r0, [r0, #4]
   1c25c:	orr	r0, r1, r0
   1c260:	cmp	r0, #0
   1c264:	bne	1c368 <__assert_fail@plt+0xb2c8>
   1c268:	b	1c38c <__assert_fail@plt+0xb2ec>
   1c26c:	ldr	r0, [fp, #-8]
   1c270:	ldr	r1, [r0]
   1c274:	ldr	r0, [r0, #4]
   1c278:	orr	r0, r1, r0
   1c27c:	cmp	r0, #0
   1c280:	beq	1c38c <__assert_fail@plt+0xb2ec>
   1c284:	b	1c288 <__assert_fail@plt+0xb1e8>
   1c288:	mov	r0, #0
   1c28c:	cmp	r0, #0
   1c290:	bne	1c368 <__assert_fail@plt+0xb2c8>
   1c294:	b	1c38c <__assert_fail@plt+0xb2ec>
   1c298:	ldr	r0, [fp, #-8]
   1c29c:	ldr	r1, [r0]
   1c2a0:	ldr	r0, [r0, #4]
   1c2a4:	orr	r0, r1, r0
   1c2a8:	cmp	r0, #0
   1c2ac:	bne	1c368 <__assert_fail@plt+0xb2c8>
   1c2b0:	b	1c38c <__assert_fail@plt+0xb2ec>
   1c2b4:	ldr	r0, [fp, #-12]
   1c2b8:	cmp	r0, #0
   1c2bc:	bne	1c2c4 <__assert_fail@plt+0xb224>
   1c2c0:	b	1c38c <__assert_fail@plt+0xb2ec>
   1c2c4:	mov	r0, #1
   1c2c8:	cmp	r0, #0
   1c2cc:	bne	1c340 <__assert_fail@plt+0xb2a0>
   1c2d0:	b	1c2d4 <__assert_fail@plt+0xb234>
   1c2d4:	b	1c2dc <__assert_fail@plt+0xb23c>
   1c2d8:	b	1c2e0 <__assert_fail@plt+0xb240>
   1c2dc:	b	1c330 <__assert_fail@plt+0xb290>
   1c2e0:	ldr	r0, [fp, #-8]
   1c2e4:	ldr	r1, [r0]
   1c2e8:	ldr	r0, [r0, #4]
   1c2ec:	and	r0, r1, r0
   1c2f0:	cmn	r0, #1
   1c2f4:	bne	1c330 <__assert_fail@plt+0xb290>
   1c2f8:	b	1c2fc <__assert_fail@plt+0xb25c>
   1c2fc:	b	1c300 <__assert_fail@plt+0xb260>
   1c300:	ldr	r0, [fp, #-12]
   1c304:	add	r0, r0, #0
   1c308:	movw	r1, #0
   1c30c:	cmp	r1, r0
   1c310:	blt	1c368 <__assert_fail@plt+0xb2c8>
   1c314:	b	1c38c <__assert_fail@plt+0xb2ec>
   1c318:	ldr	r0, [fp, #-12]
   1c31c:	sub	r0, r0, #1
   1c320:	mvn	r1, #0
   1c324:	cmp	r1, r0
   1c328:	blt	1c368 <__assert_fail@plt+0xb2c8>
   1c32c:	b	1c38c <__assert_fail@plt+0xb2ec>
   1c330:	ldr	r0, [fp, #-12]
   1c334:	cmp	r0, #0
   1c338:	bne	1c368 <__assert_fail@plt+0xb2c8>
   1c33c:	b	1c38c <__assert_fail@plt+0xb2ec>
   1c340:	ldr	r0, [fp, #-12]
   1c344:	movw	r1, #65535	; 0xffff
   1c348:	sdiv	r0, r1, r0
   1c34c:	ldr	r1, [fp, #-8]
   1c350:	ldr	r2, [r1]
   1c354:	ldr	r1, [r1, #4]
   1c358:	subs	r2, r0, r2
   1c35c:	rscs	r0, r1, r0, asr #31
   1c360:	bcs	1c38c <__assert_fail@plt+0xb2ec>
   1c364:	b	1c368 <__assert_fail@plt+0xb2c8>
   1c368:	ldr	r0, [fp, #-8]
   1c36c:	ldr	r0, [r0]
   1c370:	ldr	r1, [fp, #-12]
   1c374:	mul	r0, r0, r1
   1c378:	uxth	r0, r0
   1c37c:	mov	r1, #0
   1c380:	str	r1, [fp, #-20]	; 0xffffffec
   1c384:	str	r0, [fp, #-24]	; 0xffffffe8
   1c388:	b	1d258 <__assert_fail@plt+0xc1b8>
   1c38c:	ldr	r0, [fp, #-8]
   1c390:	ldr	r0, [r0]
   1c394:	ldr	r1, [fp, #-12]
   1c398:	mul	r0, r0, r1
   1c39c:	uxth	r0, r0
   1c3a0:	mov	r1, #0
   1c3a4:	str	r1, [fp, #-20]	; 0xffffffec
   1c3a8:	str	r0, [fp, #-24]	; 0xffffffe8
   1c3ac:	b	1d274 <__assert_fail@plt+0xc1d4>
   1c3b0:	b	1c844 <__assert_fail@plt+0xb7a4>
   1c3b4:	b	1c614 <__assert_fail@plt+0xb574>
   1c3b8:	ldr	r0, [fp, #-12]
   1c3bc:	cmp	r0, #0
   1c3c0:	bge	1c510 <__assert_fail@plt+0xb470>
   1c3c4:	mov	r0, #1
   1c3c8:	cmp	r0, #0
   1c3cc:	bne	1c474 <__assert_fail@plt+0xb3d4>
   1c3d0:	b	1c3d4 <__assert_fail@plt+0xb334>
   1c3d4:	b	1c3d8 <__assert_fail@plt+0xb338>
   1c3d8:	ldr	r0, [fp, #-8]
   1c3dc:	ldr	r1, [r0]
   1c3e0:	ldr	r0, [r0, #4]
   1c3e4:	ldr	r2, [fp, #-12]
   1c3e8:	mvn	r3, #-2147483648	; 0x80000000
   1c3ec:	sdiv	r2, r3, r2
   1c3f0:	subs	r1, r1, r2
   1c3f4:	sbcs	r0, r0, r2, asr #31
   1c3f8:	bcc	1c5d4 <__assert_fail@plt+0xb534>
   1c3fc:	b	1c5f4 <__assert_fail@plt+0xb554>
   1c400:	b	1c404 <__assert_fail@plt+0xb364>
   1c404:	ldr	r0, [pc, #3728]	; 1d29c <__assert_fail@plt+0xc1fc>
   1c408:	ldr	r1, [fp, #-12]
   1c40c:	cmp	r1, r0
   1c410:	blt	1c428 <__assert_fail@plt+0xb388>
   1c414:	b	1c434 <__assert_fail@plt+0xb394>
   1c418:	ldr	r0, [fp, #-12]
   1c41c:	movw	r1, #0
   1c420:	cmp	r1, r0
   1c424:	bge	1c434 <__assert_fail@plt+0xb394>
   1c428:	movw	r0, #0
   1c42c:	str	r0, [fp, #-44]	; 0xffffffd4
   1c430:	b	1c44c <__assert_fail@plt+0xb3ac>
   1c434:	ldr	r0, [pc, #3684]	; 1d2a0 <__assert_fail@plt+0xc200>
   1c438:	ldr	r1, [fp, #-12]
   1c43c:	movw	r2, #0
   1c440:	sub	r1, r2, r1
   1c444:	sdiv	r0, r0, r1
   1c448:	str	r0, [fp, #-44]	; 0xffffffd4
   1c44c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1c450:	ldr	r1, [fp, #-8]
   1c454:	ldr	r2, [r1]
   1c458:	ldr	r1, [r1, #4]
   1c45c:	mvn	r1, r1
   1c460:	mvn	r2, r2
   1c464:	subs	r2, r2, r0
   1c468:	sbcs	r0, r1, r0, asr #31
   1c46c:	bcs	1c5d4 <__assert_fail@plt+0xb534>
   1c470:	b	1c5f4 <__assert_fail@plt+0xb554>
   1c474:	ldr	r0, [fp, #-12]
   1c478:	cmn	r0, #1
   1c47c:	bne	1c4e8 <__assert_fail@plt+0xb448>
   1c480:	b	1c4a4 <__assert_fail@plt+0xb404>
   1c484:	ldr	r0, [fp, #-8]
   1c488:	ldr	r1, [r0]
   1c48c:	ldr	r0, [r0, #4]
   1c490:	eor	r1, r1, #-2147483648	; 0x80000000
   1c494:	orr	r0, r1, r0
   1c498:	cmp	r0, #0
   1c49c:	bne	1c5d4 <__assert_fail@plt+0xb534>
   1c4a0:	b	1c5f4 <__assert_fail@plt+0xb554>
   1c4a4:	ldr	r0, [fp, #-8]
   1c4a8:	ldr	r1, [r0]
   1c4ac:	ldr	r0, [r0, #4]
   1c4b0:	orr	r0, r1, r0
   1c4b4:	cmp	r0, #0
   1c4b8:	beq	1c5f4 <__assert_fail@plt+0xb554>
   1c4bc:	b	1c4c0 <__assert_fail@plt+0xb420>
   1c4c0:	ldr	r0, [fp, #-8]
   1c4c4:	ldr	r1, [r0]
   1c4c8:	ldr	r0, [r0, #4]
   1c4cc:	subs	r1, r1, #1
   1c4d0:	sbc	r0, r0, #0
   1c4d4:	mvn	r2, #-2147483648	; 0x80000000
   1c4d8:	subs	r1, r2, r1
   1c4dc:	rscs	r0, r0, #0
   1c4e0:	bcc	1c5d4 <__assert_fail@plt+0xb534>
   1c4e4:	b	1c5f4 <__assert_fail@plt+0xb554>
   1c4e8:	ldr	r0, [fp, #-12]
   1c4ec:	mov	r1, #-2147483648	; 0x80000000
   1c4f0:	sdiv	r0, r1, r0
   1c4f4:	ldr	r1, [fp, #-8]
   1c4f8:	ldr	r2, [r1]
   1c4fc:	ldr	r1, [r1, #4]
   1c500:	subs	r2, r0, r2
   1c504:	rscs	r0, r1, r0, asr #31
   1c508:	bcc	1c5d4 <__assert_fail@plt+0xb534>
   1c50c:	b	1c5f4 <__assert_fail@plt+0xb554>
   1c510:	ldr	r0, [fp, #-12]
   1c514:	cmp	r0, #0
   1c518:	bne	1c520 <__assert_fail@plt+0xb480>
   1c51c:	b	1c5f4 <__assert_fail@plt+0xb554>
   1c520:	mov	r0, #1
   1c524:	cmp	r0, #0
   1c528:	bne	1c5ac <__assert_fail@plt+0xb50c>
   1c52c:	b	1c530 <__assert_fail@plt+0xb490>
   1c530:	ldr	r0, [fp, #-8]
   1c534:	ldr	r1, [r0]
   1c538:	ldr	r0, [r0, #4]
   1c53c:	and	r0, r1, r0
   1c540:	cmn	r0, #1
   1c544:	bne	1c580 <__assert_fail@plt+0xb4e0>
   1c548:	b	1c54c <__assert_fail@plt+0xb4ac>
   1c54c:	b	1c550 <__assert_fail@plt+0xb4b0>
   1c550:	ldr	r0, [fp, #-12]
   1c554:	add	r0, r0, #-2147483648	; 0x80000000
   1c558:	movw	r1, #0
   1c55c:	cmp	r1, r0
   1c560:	blt	1c5d4 <__assert_fail@plt+0xb534>
   1c564:	b	1c5f4 <__assert_fail@plt+0xb554>
   1c568:	ldr	r0, [pc, #3376]	; 1d2a0 <__assert_fail@plt+0xc200>
   1c56c:	ldr	r1, [fp, #-12]
   1c570:	sub	r1, r1, #1
   1c574:	cmp	r0, r1
   1c578:	blt	1c5d4 <__assert_fail@plt+0xb534>
   1c57c:	b	1c5f4 <__assert_fail@plt+0xb554>
   1c580:	ldr	r0, [fp, #-8]
   1c584:	ldr	r2, [r0]
   1c588:	ldr	r3, [r0, #4]
   1c58c:	mov	r0, #-2147483648	; 0x80000000
   1c590:	mvn	r1, #0
   1c594:	bl	1f848 <__assert_fail@plt+0xe7a8>
   1c598:	ldr	r2, [fp, #-12]
   1c59c:	subs	r0, r0, r2
   1c5a0:	sbcs	r1, r1, r2, asr #31
   1c5a4:	bcc	1c5d4 <__assert_fail@plt+0xb534>
   1c5a8:	b	1c5f4 <__assert_fail@plt+0xb554>
   1c5ac:	ldr	r0, [fp, #-12]
   1c5b0:	mvn	r1, #-2147483648	; 0x80000000
   1c5b4:	sdiv	r0, r1, r0
   1c5b8:	ldr	r1, [fp, #-8]
   1c5bc:	ldr	r2, [r1]
   1c5c0:	ldr	r1, [r1, #4]
   1c5c4:	subs	r2, r0, r2
   1c5c8:	rscs	r0, r1, r0, asr #31
   1c5cc:	bcs	1c5f4 <__assert_fail@plt+0xb554>
   1c5d0:	b	1c5d4 <__assert_fail@plt+0xb534>
   1c5d4:	ldr	r0, [fp, #-8]
   1c5d8:	ldr	r0, [r0]
   1c5dc:	ldr	r1, [fp, #-12]
   1c5e0:	mul	r0, r0, r1
   1c5e4:	asr	r1, r0, #31
   1c5e8:	str	r0, [fp, #-24]	; 0xffffffe8
   1c5ec:	str	r1, [fp, #-20]	; 0xffffffec
   1c5f0:	b	1d258 <__assert_fail@plt+0xc1b8>
   1c5f4:	ldr	r0, [fp, #-8]
   1c5f8:	ldr	r0, [r0]
   1c5fc:	ldr	r1, [fp, #-12]
   1c600:	mul	r0, r0, r1
   1c604:	asr	r1, r0, #31
   1c608:	str	r0, [fp, #-24]	; 0xffffffe8
   1c60c:	str	r1, [fp, #-20]	; 0xffffffec
   1c610:	b	1d274 <__assert_fail@plt+0xc1d4>
   1c614:	ldr	r0, [fp, #-12]
   1c618:	cmp	r0, #0
   1c61c:	bge	1c750 <__assert_fail@plt+0xb6b0>
   1c620:	mov	r0, #1
   1c624:	cmp	r0, #0
   1c628:	bne	1c6d0 <__assert_fail@plt+0xb630>
   1c62c:	b	1c630 <__assert_fail@plt+0xb590>
   1c630:	b	1c65c <__assert_fail@plt+0xb5bc>
   1c634:	ldr	r0, [fp, #-8]
   1c638:	ldr	r1, [r0]
   1c63c:	ldr	r0, [r0, #4]
   1c640:	ldr	r2, [fp, #-12]
   1c644:	mvn	r3, #0
   1c648:	udiv	r2, r3, r2
   1c64c:	subs	r1, r1, r2
   1c650:	sbcs	r0, r0, #0
   1c654:	bcc	1c804 <__assert_fail@plt+0xb764>
   1c658:	b	1c824 <__assert_fail@plt+0xb784>
   1c65c:	b	1c660 <__assert_fail@plt+0xb5c0>
   1c660:	ldr	r0, [pc, #3124]	; 1d29c <__assert_fail@plt+0xc1fc>
   1c664:	ldr	r1, [fp, #-12]
   1c668:	cmp	r1, r0
   1c66c:	blt	1c684 <__assert_fail@plt+0xb5e4>
   1c670:	b	1c690 <__assert_fail@plt+0xb5f0>
   1c674:	ldr	r0, [fp, #-12]
   1c678:	movw	r1, #0
   1c67c:	cmp	r1, r0
   1c680:	bge	1c690 <__assert_fail@plt+0xb5f0>
   1c684:	movw	r0, #1
   1c688:	str	r0, [fp, #-48]	; 0xffffffd0
   1c68c:	b	1c6a8 <__assert_fail@plt+0xb608>
   1c690:	ldr	r0, [fp, #-12]
   1c694:	movw	r1, #0
   1c698:	sub	r0, r1, r0
   1c69c:	mvn	r1, #0
   1c6a0:	udiv	r0, r1, r0
   1c6a4:	str	r0, [fp, #-48]	; 0xffffffd0
   1c6a8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1c6ac:	ldr	r1, [fp, #-8]
   1c6b0:	ldr	r2, [r1]
   1c6b4:	ldr	r1, [r1, #4]
   1c6b8:	mvn	r1, r1
   1c6bc:	mvn	r2, r2
   1c6c0:	subs	r0, r2, r0
   1c6c4:	sbcs	r1, r1, #0
   1c6c8:	bcs	1c804 <__assert_fail@plt+0xb764>
   1c6cc:	b	1c824 <__assert_fail@plt+0xb784>
   1c6d0:	b	1c6d4 <__assert_fail@plt+0xb634>
   1c6d4:	b	1c734 <__assert_fail@plt+0xb694>
   1c6d8:	b	1c734 <__assert_fail@plt+0xb694>
   1c6dc:	ldr	r0, [fp, #-12]
   1c6e0:	cmn	r0, #1
   1c6e4:	bne	1c734 <__assert_fail@plt+0xb694>
   1c6e8:	b	1c708 <__assert_fail@plt+0xb668>
   1c6ec:	ldr	r0, [fp, #-8]
   1c6f0:	ldr	r1, [r0]
   1c6f4:	ldr	r0, [r0, #4]
   1c6f8:	orr	r0, r1, r0
   1c6fc:	cmp	r0, #0
   1c700:	bne	1c804 <__assert_fail@plt+0xb764>
   1c704:	b	1c824 <__assert_fail@plt+0xb784>
   1c708:	ldr	r0, [fp, #-8]
   1c70c:	ldr	r1, [r0]
   1c710:	ldr	r0, [r0, #4]
   1c714:	orr	r0, r1, r0
   1c718:	cmp	r0, #0
   1c71c:	beq	1c824 <__assert_fail@plt+0xb784>
   1c720:	b	1c724 <__assert_fail@plt+0xb684>
   1c724:	mov	r0, #0
   1c728:	cmp	r0, #0
   1c72c:	bne	1c804 <__assert_fail@plt+0xb764>
   1c730:	b	1c824 <__assert_fail@plt+0xb784>
   1c734:	ldr	r0, [fp, #-8]
   1c738:	ldr	r1, [r0]
   1c73c:	ldr	r0, [r0, #4]
   1c740:	orr	r0, r1, r0
   1c744:	cmp	r0, #0
   1c748:	bne	1c804 <__assert_fail@plt+0xb764>
   1c74c:	b	1c824 <__assert_fail@plt+0xb784>
   1c750:	ldr	r0, [fp, #-12]
   1c754:	cmp	r0, #0
   1c758:	bne	1c760 <__assert_fail@plt+0xb6c0>
   1c75c:	b	1c824 <__assert_fail@plt+0xb784>
   1c760:	mov	r0, #1
   1c764:	cmp	r0, #0
   1c768:	bne	1c7dc <__assert_fail@plt+0xb73c>
   1c76c:	b	1c770 <__assert_fail@plt+0xb6d0>
   1c770:	b	1c778 <__assert_fail@plt+0xb6d8>
   1c774:	b	1c77c <__assert_fail@plt+0xb6dc>
   1c778:	b	1c7cc <__assert_fail@plt+0xb72c>
   1c77c:	ldr	r0, [fp, #-8]
   1c780:	ldr	r1, [r0]
   1c784:	ldr	r0, [r0, #4]
   1c788:	and	r0, r1, r0
   1c78c:	cmn	r0, #1
   1c790:	bne	1c7cc <__assert_fail@plt+0xb72c>
   1c794:	b	1c798 <__assert_fail@plt+0xb6f8>
   1c798:	b	1c79c <__assert_fail@plt+0xb6fc>
   1c79c:	ldr	r0, [fp, #-12]
   1c7a0:	add	r0, r0, #0
   1c7a4:	movw	r1, #0
   1c7a8:	cmp	r1, r0
   1c7ac:	blt	1c804 <__assert_fail@plt+0xb764>
   1c7b0:	b	1c824 <__assert_fail@plt+0xb784>
   1c7b4:	ldr	r0, [fp, #-12]
   1c7b8:	sub	r0, r0, #1
   1c7bc:	mvn	r1, #0
   1c7c0:	cmp	r1, r0
   1c7c4:	blt	1c804 <__assert_fail@plt+0xb764>
   1c7c8:	b	1c824 <__assert_fail@plt+0xb784>
   1c7cc:	ldr	r0, [fp, #-12]
   1c7d0:	cmp	r0, #0
   1c7d4:	bne	1c804 <__assert_fail@plt+0xb764>
   1c7d8:	b	1c824 <__assert_fail@plt+0xb784>
   1c7dc:	ldr	r0, [fp, #-12]
   1c7e0:	mvn	r1, #0
   1c7e4:	udiv	r0, r1, r0
   1c7e8:	ldr	r1, [fp, #-8]
   1c7ec:	ldr	r2, [r1]
   1c7f0:	ldr	r1, [r1, #4]
   1c7f4:	subs	r0, r0, r2
   1c7f8:	rscs	r1, r1, #0
   1c7fc:	bcs	1c824 <__assert_fail@plt+0xb784>
   1c800:	b	1c804 <__assert_fail@plt+0xb764>
   1c804:	ldr	r0, [fp, #-8]
   1c808:	ldr	r0, [r0]
   1c80c:	ldr	r1, [fp, #-12]
   1c810:	mul	r0, r0, r1
   1c814:	mov	r1, #0
   1c818:	str	r1, [fp, #-20]	; 0xffffffec
   1c81c:	str	r0, [fp, #-24]	; 0xffffffe8
   1c820:	b	1d258 <__assert_fail@plt+0xc1b8>
   1c824:	ldr	r0, [fp, #-8]
   1c828:	ldr	r0, [r0]
   1c82c:	ldr	r1, [fp, #-12]
   1c830:	mul	r0, r0, r1
   1c834:	mov	r1, #0
   1c838:	str	r1, [fp, #-20]	; 0xffffffec
   1c83c:	str	r0, [fp, #-24]	; 0xffffffe8
   1c840:	b	1d274 <__assert_fail@plt+0xc1d4>
   1c844:	b	1ccdc <__assert_fail@plt+0xbc3c>
   1c848:	b	1caac <__assert_fail@plt+0xba0c>
   1c84c:	ldr	r0, [fp, #-12]
   1c850:	cmp	r0, #0
   1c854:	bge	1c9a4 <__assert_fail@plt+0xb904>
   1c858:	mov	r0, #1
   1c85c:	cmp	r0, #0
   1c860:	bne	1c908 <__assert_fail@plt+0xb868>
   1c864:	b	1c868 <__assert_fail@plt+0xb7c8>
   1c868:	b	1c86c <__assert_fail@plt+0xb7cc>
   1c86c:	ldr	r0, [fp, #-8]
   1c870:	ldr	r1, [r0]
   1c874:	ldr	r0, [r0, #4]
   1c878:	ldr	r2, [fp, #-12]
   1c87c:	mvn	r3, #-2147483648	; 0x80000000
   1c880:	sdiv	r2, r3, r2
   1c884:	subs	r1, r1, r2
   1c888:	sbcs	r0, r0, r2, asr #31
   1c88c:	bcc	1ca68 <__assert_fail@plt+0xb9c8>
   1c890:	b	1ca8c <__assert_fail@plt+0xb9ec>
   1c894:	b	1c898 <__assert_fail@plt+0xb7f8>
   1c898:	ldr	r0, [pc, #2556]	; 1d29c <__assert_fail@plt+0xc1fc>
   1c89c:	ldr	r1, [fp, #-12]
   1c8a0:	cmp	r1, r0
   1c8a4:	blt	1c8bc <__assert_fail@plt+0xb81c>
   1c8a8:	b	1c8c8 <__assert_fail@plt+0xb828>
   1c8ac:	ldr	r0, [fp, #-12]
   1c8b0:	movw	r1, #0
   1c8b4:	cmp	r1, r0
   1c8b8:	bge	1c8c8 <__assert_fail@plt+0xb828>
   1c8bc:	movw	r0, #0
   1c8c0:	str	r0, [fp, #-52]	; 0xffffffcc
   1c8c4:	b	1c8e0 <__assert_fail@plt+0xb840>
   1c8c8:	ldr	r0, [pc, #2512]	; 1d2a0 <__assert_fail@plt+0xc200>
   1c8cc:	ldr	r1, [fp, #-12]
   1c8d0:	movw	r2, #0
   1c8d4:	sub	r1, r2, r1
   1c8d8:	sdiv	r0, r0, r1
   1c8dc:	str	r0, [fp, #-52]	; 0xffffffcc
   1c8e0:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1c8e4:	ldr	r1, [fp, #-8]
   1c8e8:	ldr	r2, [r1]
   1c8ec:	ldr	r1, [r1, #4]
   1c8f0:	mvn	r1, r1
   1c8f4:	mvn	r2, r2
   1c8f8:	subs	r2, r2, r0
   1c8fc:	sbcs	r0, r1, r0, asr #31
   1c900:	bcs	1ca68 <__assert_fail@plt+0xb9c8>
   1c904:	b	1ca8c <__assert_fail@plt+0xb9ec>
   1c908:	ldr	r0, [fp, #-12]
   1c90c:	cmn	r0, #1
   1c910:	bne	1c97c <__assert_fail@plt+0xb8dc>
   1c914:	b	1c938 <__assert_fail@plt+0xb898>
   1c918:	ldr	r0, [fp, #-8]
   1c91c:	ldr	r1, [r0]
   1c920:	ldr	r0, [r0, #4]
   1c924:	eor	r1, r1, #-2147483648	; 0x80000000
   1c928:	orr	r0, r1, r0
   1c92c:	cmp	r0, #0
   1c930:	bne	1ca68 <__assert_fail@plt+0xb9c8>
   1c934:	b	1ca8c <__assert_fail@plt+0xb9ec>
   1c938:	ldr	r0, [fp, #-8]
   1c93c:	ldr	r1, [r0]
   1c940:	ldr	r0, [r0, #4]
   1c944:	orr	r0, r1, r0
   1c948:	cmp	r0, #0
   1c94c:	beq	1ca8c <__assert_fail@plt+0xb9ec>
   1c950:	b	1c954 <__assert_fail@plt+0xb8b4>
   1c954:	ldr	r0, [fp, #-8]
   1c958:	ldr	r1, [r0]
   1c95c:	ldr	r0, [r0, #4]
   1c960:	subs	r1, r1, #1
   1c964:	sbc	r0, r0, #0
   1c968:	mvn	r2, #-2147483648	; 0x80000000
   1c96c:	subs	r1, r2, r1
   1c970:	rscs	r0, r0, #0
   1c974:	bcc	1ca68 <__assert_fail@plt+0xb9c8>
   1c978:	b	1ca8c <__assert_fail@plt+0xb9ec>
   1c97c:	ldr	r0, [fp, #-12]
   1c980:	mov	r1, #-2147483648	; 0x80000000
   1c984:	sdiv	r0, r1, r0
   1c988:	ldr	r1, [fp, #-8]
   1c98c:	ldr	r2, [r1]
   1c990:	ldr	r1, [r1, #4]
   1c994:	subs	r2, r0, r2
   1c998:	rscs	r0, r1, r0, asr #31
   1c99c:	bcc	1ca68 <__assert_fail@plt+0xb9c8>
   1c9a0:	b	1ca8c <__assert_fail@plt+0xb9ec>
   1c9a4:	ldr	r0, [fp, #-12]
   1c9a8:	cmp	r0, #0
   1c9ac:	bne	1c9b4 <__assert_fail@plt+0xb914>
   1c9b0:	b	1ca8c <__assert_fail@plt+0xb9ec>
   1c9b4:	mov	r0, #1
   1c9b8:	cmp	r0, #0
   1c9bc:	bne	1ca40 <__assert_fail@plt+0xb9a0>
   1c9c0:	b	1c9c4 <__assert_fail@plt+0xb924>
   1c9c4:	ldr	r0, [fp, #-8]
   1c9c8:	ldr	r1, [r0]
   1c9cc:	ldr	r0, [r0, #4]
   1c9d0:	and	r0, r1, r0
   1c9d4:	cmn	r0, #1
   1c9d8:	bne	1ca14 <__assert_fail@plt+0xb974>
   1c9dc:	b	1c9e0 <__assert_fail@plt+0xb940>
   1c9e0:	b	1c9e4 <__assert_fail@plt+0xb944>
   1c9e4:	ldr	r0, [fp, #-12]
   1c9e8:	add	r0, r0, #-2147483648	; 0x80000000
   1c9ec:	movw	r1, #0
   1c9f0:	cmp	r1, r0
   1c9f4:	blt	1ca68 <__assert_fail@plt+0xb9c8>
   1c9f8:	b	1ca8c <__assert_fail@plt+0xb9ec>
   1c9fc:	ldr	r0, [pc, #2204]	; 1d2a0 <__assert_fail@plt+0xc200>
   1ca00:	ldr	r1, [fp, #-12]
   1ca04:	sub	r1, r1, #1
   1ca08:	cmp	r0, r1
   1ca0c:	blt	1ca68 <__assert_fail@plt+0xb9c8>
   1ca10:	b	1ca8c <__assert_fail@plt+0xb9ec>
   1ca14:	ldr	r0, [fp, #-8]
   1ca18:	ldr	r2, [r0]
   1ca1c:	ldr	r3, [r0, #4]
   1ca20:	mov	r0, #-2147483648	; 0x80000000
   1ca24:	mvn	r1, #0
   1ca28:	bl	1f848 <__assert_fail@plt+0xe7a8>
   1ca2c:	ldr	r2, [fp, #-12]
   1ca30:	subs	r0, r0, r2
   1ca34:	sbcs	r1, r1, r2, asr #31
   1ca38:	bcc	1ca68 <__assert_fail@plt+0xb9c8>
   1ca3c:	b	1ca8c <__assert_fail@plt+0xb9ec>
   1ca40:	ldr	r0, [fp, #-12]
   1ca44:	mvn	r1, #-2147483648	; 0x80000000
   1ca48:	sdiv	r0, r1, r0
   1ca4c:	ldr	r1, [fp, #-8]
   1ca50:	ldr	r2, [r1]
   1ca54:	ldr	r1, [r1, #4]
   1ca58:	subs	r2, r0, r2
   1ca5c:	rscs	r0, r1, r0, asr #31
   1ca60:	bcs	1ca8c <__assert_fail@plt+0xb9ec>
   1ca64:	b	1ca68 <__assert_fail@plt+0xb9c8>
   1ca68:	ldr	r0, [fp, #-8]
   1ca6c:	ldr	r0, [r0]
   1ca70:	ldr	r1, [fp, #-12]
   1ca74:	mul	r0, r0, r1
   1ca78:	asr	r1, r0, #31
   1ca7c:	str	r0, [fp, #-24]	; 0xffffffe8
   1ca80:	str	r1, [fp, #-20]	; 0xffffffec
   1ca84:	b	1d258 <__assert_fail@plt+0xc1b8>
   1ca88:	andhi	r0, r0, r1
   1ca8c:	ldr	r0, [fp, #-8]
   1ca90:	ldr	r0, [r0]
   1ca94:	ldr	r1, [fp, #-12]
   1ca98:	mul	r0, r0, r1
   1ca9c:	asr	r1, r0, #31
   1caa0:	str	r0, [fp, #-24]	; 0xffffffe8
   1caa4:	str	r1, [fp, #-20]	; 0xffffffec
   1caa8:	b	1d274 <__assert_fail@plt+0xc1d4>
   1caac:	ldr	r0, [fp, #-12]
   1cab0:	cmp	r0, #0
   1cab4:	bge	1cbe8 <__assert_fail@plt+0xbb48>
   1cab8:	mov	r0, #1
   1cabc:	cmp	r0, #0
   1cac0:	bne	1cb68 <__assert_fail@plt+0xbac8>
   1cac4:	b	1cac8 <__assert_fail@plt+0xba28>
   1cac8:	b	1caf4 <__assert_fail@plt+0xba54>
   1cacc:	ldr	r0, [fp, #-8]
   1cad0:	ldr	r1, [r0]
   1cad4:	ldr	r0, [r0, #4]
   1cad8:	ldr	r2, [fp, #-12]
   1cadc:	mvn	r3, #0
   1cae0:	udiv	r2, r3, r2
   1cae4:	subs	r1, r1, r2
   1cae8:	sbcs	r0, r0, #0
   1caec:	bcc	1cc9c <__assert_fail@plt+0xbbfc>
   1caf0:	b	1ccbc <__assert_fail@plt+0xbc1c>
   1caf4:	b	1caf8 <__assert_fail@plt+0xba58>
   1caf8:	ldr	r0, [pc, #1948]	; 1d29c <__assert_fail@plt+0xc1fc>
   1cafc:	ldr	r1, [fp, #-12]
   1cb00:	cmp	r1, r0
   1cb04:	blt	1cb1c <__assert_fail@plt+0xba7c>
   1cb08:	b	1cb28 <__assert_fail@plt+0xba88>
   1cb0c:	ldr	r0, [fp, #-12]
   1cb10:	movw	r1, #0
   1cb14:	cmp	r1, r0
   1cb18:	bge	1cb28 <__assert_fail@plt+0xba88>
   1cb1c:	movw	r0, #1
   1cb20:	str	r0, [sp, #56]	; 0x38
   1cb24:	b	1cb40 <__assert_fail@plt+0xbaa0>
   1cb28:	ldr	r0, [fp, #-12]
   1cb2c:	movw	r1, #0
   1cb30:	sub	r0, r1, r0
   1cb34:	mvn	r1, #0
   1cb38:	udiv	r0, r1, r0
   1cb3c:	str	r0, [sp, #56]	; 0x38
   1cb40:	ldr	r0, [sp, #56]	; 0x38
   1cb44:	ldr	r1, [fp, #-8]
   1cb48:	ldr	r2, [r1]
   1cb4c:	ldr	r1, [r1, #4]
   1cb50:	mvn	r1, r1
   1cb54:	mvn	r2, r2
   1cb58:	subs	r0, r2, r0
   1cb5c:	sbcs	r1, r1, #0
   1cb60:	bcs	1cc9c <__assert_fail@plt+0xbbfc>
   1cb64:	b	1ccbc <__assert_fail@plt+0xbc1c>
   1cb68:	b	1cb6c <__assert_fail@plt+0xbacc>
   1cb6c:	b	1cbcc <__assert_fail@plt+0xbb2c>
   1cb70:	b	1cbcc <__assert_fail@plt+0xbb2c>
   1cb74:	ldr	r0, [fp, #-12]
   1cb78:	cmn	r0, #1
   1cb7c:	bne	1cbcc <__assert_fail@plt+0xbb2c>
   1cb80:	b	1cba0 <__assert_fail@plt+0xbb00>
   1cb84:	ldr	r0, [fp, #-8]
   1cb88:	ldr	r1, [r0]
   1cb8c:	ldr	r0, [r0, #4]
   1cb90:	orr	r0, r1, r0
   1cb94:	cmp	r0, #0
   1cb98:	bne	1cc9c <__assert_fail@plt+0xbbfc>
   1cb9c:	b	1ccbc <__assert_fail@plt+0xbc1c>
   1cba0:	ldr	r0, [fp, #-8]
   1cba4:	ldr	r1, [r0]
   1cba8:	ldr	r0, [r0, #4]
   1cbac:	orr	r0, r1, r0
   1cbb0:	cmp	r0, #0
   1cbb4:	beq	1ccbc <__assert_fail@plt+0xbc1c>
   1cbb8:	b	1cbbc <__assert_fail@plt+0xbb1c>
   1cbbc:	mov	r0, #0
   1cbc0:	cmp	r0, #0
   1cbc4:	bne	1cc9c <__assert_fail@plt+0xbbfc>
   1cbc8:	b	1ccbc <__assert_fail@plt+0xbc1c>
   1cbcc:	ldr	r0, [fp, #-8]
   1cbd0:	ldr	r1, [r0]
   1cbd4:	ldr	r0, [r0, #4]
   1cbd8:	orr	r0, r1, r0
   1cbdc:	cmp	r0, #0
   1cbe0:	bne	1cc9c <__assert_fail@plt+0xbbfc>
   1cbe4:	b	1ccbc <__assert_fail@plt+0xbc1c>
   1cbe8:	ldr	r0, [fp, #-12]
   1cbec:	cmp	r0, #0
   1cbf0:	bne	1cbf8 <__assert_fail@plt+0xbb58>
   1cbf4:	b	1ccbc <__assert_fail@plt+0xbc1c>
   1cbf8:	mov	r0, #1
   1cbfc:	cmp	r0, #0
   1cc00:	bne	1cc74 <__assert_fail@plt+0xbbd4>
   1cc04:	b	1cc08 <__assert_fail@plt+0xbb68>
   1cc08:	b	1cc10 <__assert_fail@plt+0xbb70>
   1cc0c:	b	1cc14 <__assert_fail@plt+0xbb74>
   1cc10:	b	1cc64 <__assert_fail@plt+0xbbc4>
   1cc14:	ldr	r0, [fp, #-8]
   1cc18:	ldr	r1, [r0]
   1cc1c:	ldr	r0, [r0, #4]
   1cc20:	and	r0, r1, r0
   1cc24:	cmn	r0, #1
   1cc28:	bne	1cc64 <__assert_fail@plt+0xbbc4>
   1cc2c:	b	1cc30 <__assert_fail@plt+0xbb90>
   1cc30:	b	1cc34 <__assert_fail@plt+0xbb94>
   1cc34:	ldr	r0, [fp, #-12]
   1cc38:	add	r0, r0, #0
   1cc3c:	movw	r1, #0
   1cc40:	cmp	r1, r0
   1cc44:	blt	1cc9c <__assert_fail@plt+0xbbfc>
   1cc48:	b	1ccbc <__assert_fail@plt+0xbc1c>
   1cc4c:	ldr	r0, [fp, #-12]
   1cc50:	sub	r0, r0, #1
   1cc54:	mvn	r1, #0
   1cc58:	cmp	r1, r0
   1cc5c:	blt	1cc9c <__assert_fail@plt+0xbbfc>
   1cc60:	b	1ccbc <__assert_fail@plt+0xbc1c>
   1cc64:	ldr	r0, [fp, #-12]
   1cc68:	cmp	r0, #0
   1cc6c:	bne	1cc9c <__assert_fail@plt+0xbbfc>
   1cc70:	b	1ccbc <__assert_fail@plt+0xbc1c>
   1cc74:	ldr	r0, [fp, #-12]
   1cc78:	mvn	r1, #0
   1cc7c:	udiv	r0, r1, r0
   1cc80:	ldr	r1, [fp, #-8]
   1cc84:	ldr	r2, [r1]
   1cc88:	ldr	r1, [r1, #4]
   1cc8c:	subs	r0, r0, r2
   1cc90:	rscs	r1, r1, #0
   1cc94:	bcs	1ccbc <__assert_fail@plt+0xbc1c>
   1cc98:	b	1cc9c <__assert_fail@plt+0xbbfc>
   1cc9c:	ldr	r0, [fp, #-8]
   1cca0:	ldr	r0, [r0]
   1cca4:	ldr	r1, [fp, #-12]
   1cca8:	mul	r0, r0, r1
   1ccac:	mov	r1, #0
   1ccb0:	str	r1, [fp, #-20]	; 0xffffffec
   1ccb4:	str	r0, [fp, #-24]	; 0xffffffe8
   1ccb8:	b	1d258 <__assert_fail@plt+0xc1b8>
   1ccbc:	ldr	r0, [fp, #-8]
   1ccc0:	ldr	r0, [r0]
   1ccc4:	ldr	r1, [fp, #-12]
   1ccc8:	mul	r0, r0, r1
   1cccc:	mov	r1, #0
   1ccd0:	str	r1, [fp, #-20]	; 0xffffffec
   1ccd4:	str	r0, [fp, #-24]	; 0xffffffe8
   1ccd8:	b	1d274 <__assert_fail@plt+0xc1d4>
   1ccdc:	b	1cfc0 <__assert_fail@plt+0xbf20>
   1cce0:	ldr	r0, [fp, #-12]
   1cce4:	cmp	r0, #0
   1cce8:	bge	1ce90 <__assert_fail@plt+0xbdf0>
   1ccec:	mov	r0, #1
   1ccf0:	cmp	r0, #0
   1ccf4:	bne	1cde4 <__assert_fail@plt+0xbd44>
   1ccf8:	b	1ccfc <__assert_fail@plt+0xbc5c>
   1ccfc:	b	1cd00 <__assert_fail@plt+0xbc60>
   1cd00:	ldr	r0, [fp, #-8]
   1cd04:	ldr	r1, [r0]
   1cd08:	ldr	r0, [r0, #4]
   1cd0c:	ldr	r2, [fp, #-12]
   1cd10:	asr	r3, r2, #31
   1cd14:	mvn	ip, #0
   1cd18:	mvn	lr, #-2147483648	; 0x80000000
   1cd1c:	str	r0, [sp, #52]	; 0x34
   1cd20:	mov	r0, ip
   1cd24:	str	r1, [sp, #48]	; 0x30
   1cd28:	mov	r1, lr
   1cd2c:	bl	1f774 <__assert_fail@plt+0xe6d4>
   1cd30:	ldr	r2, [sp, #48]	; 0x30
   1cd34:	subs	r0, r2, r0
   1cd38:	ldr	r2, [sp, #52]	; 0x34
   1cd3c:	sbcs	r1, r2, r1
   1cd40:	bcc	1cf68 <__assert_fail@plt+0xbec8>
   1cd44:	b	1cf94 <__assert_fail@plt+0xbef4>
   1cd48:	b	1cd4c <__assert_fail@plt+0xbcac>
   1cd4c:	ldr	r0, [pc, #1352]	; 1d29c <__assert_fail@plt+0xc1fc>
   1cd50:	ldr	r1, [fp, #-12]
   1cd54:	cmp	r1, r0
   1cd58:	blt	1cd70 <__assert_fail@plt+0xbcd0>
   1cd5c:	b	1cd84 <__assert_fail@plt+0xbce4>
   1cd60:	ldr	r0, [fp, #-12]
   1cd64:	movw	r1, #0
   1cd68:	cmp	r1, r0
   1cd6c:	bge	1cd84 <__assert_fail@plt+0xbce4>
   1cd70:	mov	r0, #0
   1cd74:	mvn	r1, #0
   1cd78:	str	r1, [sp, #44]	; 0x2c
   1cd7c:	str	r0, [sp, #40]	; 0x28
   1cd80:	b	1cdb8 <__assert_fail@plt+0xbd18>
   1cd84:	ldr	r0, [fp, #-12]
   1cd88:	rsb	r0, r0, #0
   1cd8c:	asr	r3, r0, #31
   1cd90:	mvn	r1, #0
   1cd94:	mvn	r2, #-2147483648	; 0x80000000
   1cd98:	str	r0, [sp, #36]	; 0x24
   1cd9c:	mov	r0, r1
   1cda0:	mov	r1, r2
   1cda4:	ldr	r2, [sp, #36]	; 0x24
   1cda8:	bl	1f774 <__assert_fail@plt+0xe6d4>
   1cdac:	str	r0, [sp, #44]	; 0x2c
   1cdb0:	str	r1, [sp, #40]	; 0x28
   1cdb4:	b	1cdb8 <__assert_fail@plt+0xbd18>
   1cdb8:	ldr	r0, [sp, #40]	; 0x28
   1cdbc:	ldr	r1, [sp, #44]	; 0x2c
   1cdc0:	ldr	r2, [fp, #-8]
   1cdc4:	ldr	r3, [r2]
   1cdc8:	ldr	r2, [r2, #4]
   1cdcc:	mvn	r2, r2
   1cdd0:	mvn	r3, r3
   1cdd4:	subs	r1, r3, r1
   1cdd8:	sbcs	r0, r2, r0
   1cddc:	bcs	1cf68 <__assert_fail@plt+0xbec8>
   1cde0:	b	1cf94 <__assert_fail@plt+0xbef4>
   1cde4:	ldr	r0, [fp, #-12]
   1cde8:	cmn	r0, #1
   1cdec:	bne	1ce50 <__assert_fail@plt+0xbdb0>
   1cdf0:	b	1ce14 <__assert_fail@plt+0xbd74>
   1cdf4:	ldr	r0, [fp, #-8]
   1cdf8:	ldr	r1, [r0]
   1cdfc:	ldr	r0, [r0, #4]
   1ce00:	eor	r0, r0, #-2147483648	; 0x80000000
   1ce04:	orr	r0, r1, r0
   1ce08:	cmp	r0, #0
   1ce0c:	bne	1cf68 <__assert_fail@plt+0xbec8>
   1ce10:	b	1cf94 <__assert_fail@plt+0xbef4>
   1ce14:	ldr	r0, [fp, #-8]
   1ce18:	ldr	r1, [r0]
   1ce1c:	ldr	r0, [r0, #4]
   1ce20:	orr	r0, r1, r0
   1ce24:	cmp	r0, #0
   1ce28:	beq	1cf94 <__assert_fail@plt+0xbef4>
   1ce2c:	b	1ce30 <__assert_fail@plt+0xbd90>
   1ce30:	ldr	r0, [fp, #-8]
   1ce34:	ldr	r1, [r0]
   1ce38:	ldr	r0, [r0, #4]
   1ce3c:	subs	r1, r1, #1
   1ce40:	sbc	r0, r0, #0
   1ce44:	cmp	r0, #0
   1ce48:	bmi	1cf68 <__assert_fail@plt+0xbec8>
   1ce4c:	b	1cf94 <__assert_fail@plt+0xbef4>
   1ce50:	ldr	r0, [fp, #-12]
   1ce54:	asr	r3, r0, #31
   1ce58:	mov	r1, #0
   1ce5c:	mov	r2, #-2147483648	; 0x80000000
   1ce60:	str	r0, [sp, #32]
   1ce64:	mov	r0, r1
   1ce68:	mov	r1, r2
   1ce6c:	ldr	r2, [sp, #32]
   1ce70:	bl	1f774 <__assert_fail@plt+0xe6d4>
   1ce74:	ldr	r2, [fp, #-8]
   1ce78:	ldr	r3, [r2]
   1ce7c:	ldr	r2, [r2, #4]
   1ce80:	subs	r0, r0, r3
   1ce84:	sbcs	r1, r1, r2
   1ce88:	bcc	1cf68 <__assert_fail@plt+0xbec8>
   1ce8c:	b	1cf94 <__assert_fail@plt+0xbef4>
   1ce90:	ldr	r0, [fp, #-12]
   1ce94:	cmp	r0, #0
   1ce98:	bne	1cea0 <__assert_fail@plt+0xbe00>
   1ce9c:	b	1cf94 <__assert_fail@plt+0xbef4>
   1cea0:	mov	r0, #1
   1cea4:	cmp	r0, #0
   1cea8:	bne	1cf28 <__assert_fail@plt+0xbe88>
   1ceac:	b	1ceb0 <__assert_fail@plt+0xbe10>
   1ceb0:	ldr	r0, [fp, #-8]
   1ceb4:	ldr	r1, [r0]
   1ceb8:	ldr	r0, [r0, #4]
   1cebc:	and	r0, r1, r0
   1cec0:	cmn	r0, #1
   1cec4:	bne	1cefc <__assert_fail@plt+0xbe5c>
   1cec8:	b	1cecc <__assert_fail@plt+0xbe2c>
   1cecc:	b	1ced0 <__assert_fail@plt+0xbe30>
   1ced0:	ldr	r0, [fp, #-12]
   1ced4:	mov	r1, #-2147483648	; 0x80000000
   1ced8:	add	r1, r1, r0, asr #31
   1cedc:	rsbs	r0, r0, #0
   1cee0:	rscs	r1, r1, #0
   1cee4:	blt	1cf68 <__assert_fail@plt+0xbec8>
   1cee8:	b	1cf94 <__assert_fail@plt+0xbef4>
   1ceec:	mov	r0, #0
   1cef0:	cmp	r0, #0
   1cef4:	bne	1cf68 <__assert_fail@plt+0xbec8>
   1cef8:	b	1cf94 <__assert_fail@plt+0xbef4>
   1cefc:	ldr	r0, [fp, #-8]
   1cf00:	ldr	r2, [r0]
   1cf04:	ldr	r3, [r0, #4]
   1cf08:	mov	r0, #0
   1cf0c:	mov	r1, #-2147483648	; 0x80000000
   1cf10:	bl	1f848 <__assert_fail@plt+0xe7a8>
   1cf14:	ldr	r2, [fp, #-12]
   1cf18:	subs	r0, r0, r2
   1cf1c:	sbcs	r1, r1, r2, asr #31
   1cf20:	bcc	1cf68 <__assert_fail@plt+0xbec8>
   1cf24:	b	1cf94 <__assert_fail@plt+0xbef4>
   1cf28:	ldr	r0, [fp, #-12]
   1cf2c:	asr	r3, r0, #31
   1cf30:	mvn	r1, #0
   1cf34:	mvn	r2, #-2147483648	; 0x80000000
   1cf38:	str	r0, [sp, #28]
   1cf3c:	mov	r0, r1
   1cf40:	mov	r1, r2
   1cf44:	ldr	r2, [sp, #28]
   1cf48:	bl	1f774 <__assert_fail@plt+0xe6d4>
   1cf4c:	ldr	r2, [fp, #-8]
   1cf50:	ldr	r3, [r2]
   1cf54:	ldr	r2, [r2, #4]
   1cf58:	subs	r0, r0, r3
   1cf5c:	sbcs	r1, r1, r2
   1cf60:	bcs	1cf94 <__assert_fail@plt+0xbef4>
   1cf64:	b	1cf68 <__assert_fail@plt+0xbec8>
   1cf68:	ldr	r0, [fp, #-8]
   1cf6c:	ldr	r1, [r0]
   1cf70:	ldr	r0, [r0, #4]
   1cf74:	ldr	r2, [fp, #-12]
   1cf78:	asr	r3, r2, #31
   1cf7c:	umull	ip, lr, r1, r2
   1cf80:	mla	r1, r1, r3, lr
   1cf84:	mla	r0, r0, r2, r1
   1cf88:	str	ip, [fp, #-24]	; 0xffffffe8
   1cf8c:	str	r0, [fp, #-20]	; 0xffffffec
   1cf90:	b	1d258 <__assert_fail@plt+0xc1b8>
   1cf94:	ldr	r0, [fp, #-8]
   1cf98:	ldr	r1, [r0]
   1cf9c:	ldr	r0, [r0, #4]
   1cfa0:	ldr	r2, [fp, #-12]
   1cfa4:	asr	r3, r2, #31
   1cfa8:	umull	ip, lr, r1, r2
   1cfac:	mla	r1, r1, r3, lr
   1cfb0:	mla	r0, r0, r2, r1
   1cfb4:	str	ip, [fp, #-24]	; 0xffffffe8
   1cfb8:	str	r0, [fp, #-20]	; 0xffffffec
   1cfbc:	b	1d274 <__assert_fail@plt+0xc1d4>
   1cfc0:	ldr	r0, [fp, #-12]
   1cfc4:	cmp	r0, #0
   1cfc8:	bge	1d13c <__assert_fail@plt+0xc09c>
   1cfcc:	mov	r0, #1
   1cfd0:	cmp	r0, #0
   1cfd4:	bne	1d0bc <__assert_fail@plt+0xc01c>
   1cfd8:	b	1cfdc <__assert_fail@plt+0xbf3c>
   1cfdc:	b	1d024 <__assert_fail@plt+0xbf84>
   1cfe0:	ldr	r0, [fp, #-8]
   1cfe4:	ldr	r1, [r0]
   1cfe8:	ldr	r0, [r0, #4]
   1cfec:	ldr	r2, [fp, #-12]
   1cff0:	asr	r3, r2, #31
   1cff4:	mvn	ip, #0
   1cff8:	str	r0, [sp, #24]
   1cffc:	mov	r0, ip
   1d000:	str	r1, [sp, #20]
   1d004:	mov	r1, ip
   1d008:	bl	1f848 <__assert_fail@plt+0xe7a8>
   1d00c:	ldr	r2, [sp, #20]
   1d010:	subs	r0, r2, r0
   1d014:	ldr	r2, [sp, #24]
   1d018:	sbcs	r1, r2, r1
   1d01c:	bcc	1d200 <__assert_fail@plt+0xc160>
   1d020:	b	1d22c <__assert_fail@plt+0xc18c>
   1d024:	b	1d028 <__assert_fail@plt+0xbf88>
   1d028:	ldr	r0, [pc, #620]	; 1d29c <__assert_fail@plt+0xc1fc>
   1d02c:	ldr	r1, [fp, #-12]
   1d030:	cmp	r1, r0
   1d034:	blt	1d04c <__assert_fail@plt+0xbfac>
   1d038:	b	1d064 <__assert_fail@plt+0xbfc4>
   1d03c:	ldr	r0, [fp, #-12]
   1d040:	movw	r1, #0
   1d044:	cmp	r1, r0
   1d048:	bge	1d064 <__assert_fail@plt+0xbfc4>
   1d04c:	mov	r0, #1
   1d050:	mvn	r1, #0
   1d054:	str	r1, [sp, #16]
   1d058:	str	r0, [sp, #12]
   1d05c:	b	1d090 <__assert_fail@plt+0xbff0>
   1d060:			; <UNDEFINED> instruction: 0xffff8000
   1d064:	ldr	r0, [fp, #-12]
   1d068:	rsb	r0, r0, #0
   1d06c:	asr	r3, r0, #31
   1d070:	mvn	r1, #0
   1d074:	str	r0, [sp, #8]
   1d078:	mov	r0, r1
   1d07c:	ldr	r2, [sp, #8]
   1d080:	bl	1f848 <__assert_fail@plt+0xe7a8>
   1d084:	str	r0, [sp, #16]
   1d088:	str	r1, [sp, #12]
   1d08c:	b	1d090 <__assert_fail@plt+0xbff0>
   1d090:	ldr	r0, [sp, #12]
   1d094:	ldr	r1, [sp, #16]
   1d098:	ldr	r2, [fp, #-8]
   1d09c:	ldr	r3, [r2]
   1d0a0:	ldr	r2, [r2, #4]
   1d0a4:	mvn	r2, r2
   1d0a8:	mvn	r3, r3
   1d0ac:	subs	r1, r3, r1
   1d0b0:	sbcs	r0, r2, r0
   1d0b4:	bcs	1d200 <__assert_fail@plt+0xc160>
   1d0b8:	b	1d22c <__assert_fail@plt+0xc18c>
   1d0bc:	b	1d0c0 <__assert_fail@plt+0xc020>
   1d0c0:	b	1d120 <__assert_fail@plt+0xc080>
   1d0c4:	b	1d120 <__assert_fail@plt+0xc080>
   1d0c8:	ldr	r0, [fp, #-12]
   1d0cc:	cmn	r0, #1
   1d0d0:	bne	1d120 <__assert_fail@plt+0xc080>
   1d0d4:	b	1d0f4 <__assert_fail@plt+0xc054>
   1d0d8:	ldr	r0, [fp, #-8]
   1d0dc:	ldr	r1, [r0]
   1d0e0:	ldr	r0, [r0, #4]
   1d0e4:	orr	r0, r1, r0
   1d0e8:	cmp	r0, #0
   1d0ec:	bne	1d200 <__assert_fail@plt+0xc160>
   1d0f0:	b	1d22c <__assert_fail@plt+0xc18c>
   1d0f4:	ldr	r0, [fp, #-8]
   1d0f8:	ldr	r1, [r0]
   1d0fc:	ldr	r0, [r0, #4]
   1d100:	orr	r0, r1, r0
   1d104:	cmp	r0, #0
   1d108:	beq	1d22c <__assert_fail@plt+0xc18c>
   1d10c:	b	1d110 <__assert_fail@plt+0xc070>
   1d110:	mov	r0, #0
   1d114:	cmp	r0, #0
   1d118:	bne	1d200 <__assert_fail@plt+0xc160>
   1d11c:	b	1d22c <__assert_fail@plt+0xc18c>
   1d120:	ldr	r0, [fp, #-8]
   1d124:	ldr	r1, [r0]
   1d128:	ldr	r0, [r0, #4]
   1d12c:	orr	r0, r1, r0
   1d130:	cmp	r0, #0
   1d134:	bne	1d200 <__assert_fail@plt+0xc160>
   1d138:	b	1d22c <__assert_fail@plt+0xc18c>
   1d13c:	ldr	r0, [fp, #-12]
   1d140:	cmp	r0, #0
   1d144:	bne	1d14c <__assert_fail@plt+0xc0ac>
   1d148:	b	1d22c <__assert_fail@plt+0xc18c>
   1d14c:	mov	r0, #1
   1d150:	cmp	r0, #0
   1d154:	bne	1d1c8 <__assert_fail@plt+0xc128>
   1d158:	b	1d15c <__assert_fail@plt+0xc0bc>
   1d15c:	b	1d164 <__assert_fail@plt+0xc0c4>
   1d160:	b	1d168 <__assert_fail@plt+0xc0c8>
   1d164:	b	1d1b8 <__assert_fail@plt+0xc118>
   1d168:	ldr	r0, [fp, #-8]
   1d16c:	ldr	r1, [r0]
   1d170:	ldr	r0, [r0, #4]
   1d174:	and	r0, r1, r0
   1d178:	cmn	r0, #1
   1d17c:	bne	1d1b8 <__assert_fail@plt+0xc118>
   1d180:	b	1d184 <__assert_fail@plt+0xc0e4>
   1d184:	b	1d188 <__assert_fail@plt+0xc0e8>
   1d188:	ldr	r0, [fp, #-12]
   1d18c:	add	r0, r0, #0
   1d190:	movw	r1, #0
   1d194:	cmp	r1, r0
   1d198:	blt	1d200 <__assert_fail@plt+0xc160>
   1d19c:	b	1d22c <__assert_fail@plt+0xc18c>
   1d1a0:	ldr	r0, [fp, #-12]
   1d1a4:	sub	r0, r0, #1
   1d1a8:	mvn	r1, #0
   1d1ac:	cmp	r1, r0
   1d1b0:	blt	1d200 <__assert_fail@plt+0xc160>
   1d1b4:	b	1d22c <__assert_fail@plt+0xc18c>
   1d1b8:	ldr	r0, [fp, #-12]
   1d1bc:	cmp	r0, #0
   1d1c0:	bne	1d200 <__assert_fail@plt+0xc160>
   1d1c4:	b	1d22c <__assert_fail@plt+0xc18c>
   1d1c8:	ldr	r0, [fp, #-12]
   1d1cc:	asr	r3, r0, #31
   1d1d0:	mvn	r1, #0
   1d1d4:	str	r0, [sp, #4]
   1d1d8:	mov	r0, r1
   1d1dc:	ldr	r2, [sp, #4]
   1d1e0:	bl	1f848 <__assert_fail@plt+0xe7a8>
   1d1e4:	ldr	r2, [fp, #-8]
   1d1e8:	ldr	r3, [r2]
   1d1ec:	ldr	r2, [r2, #4]
   1d1f0:	subs	r0, r0, r3
   1d1f4:	sbcs	r1, r1, r2
   1d1f8:	bcs	1d22c <__assert_fail@plt+0xc18c>
   1d1fc:	b	1d200 <__assert_fail@plt+0xc160>
   1d200:	ldr	r0, [fp, #-8]
   1d204:	ldr	r1, [r0]
   1d208:	ldr	r0, [r0, #4]
   1d20c:	ldr	r2, [fp, #-12]
   1d210:	asr	r3, r2, #31
   1d214:	umull	ip, lr, r1, r2
   1d218:	mla	r1, r1, r3, lr
   1d21c:	mla	r0, r0, r2, r1
   1d220:	str	ip, [fp, #-24]	; 0xffffffe8
   1d224:	str	r0, [fp, #-20]	; 0xffffffec
   1d228:	b	1d258 <__assert_fail@plt+0xc1b8>
   1d22c:	ldr	r0, [fp, #-8]
   1d230:	ldr	r1, [r0]
   1d234:	ldr	r0, [r0, #4]
   1d238:	ldr	r2, [fp, #-12]
   1d23c:	asr	r3, r2, #31
   1d240:	umull	ip, lr, r1, r2
   1d244:	mla	r1, r1, r3, lr
   1d248:	mla	r0, r0, r2, r1
   1d24c:	str	ip, [fp, #-24]	; 0xffffffe8
   1d250:	str	r0, [fp, #-20]	; 0xffffffec
   1d254:	b	1d274 <__assert_fail@plt+0xc1d4>
   1d258:	ldr	r0, [fp, #-8]
   1d25c:	mvn	r1, #0
   1d260:	str	r1, [r0, #4]
   1d264:	str	r1, [r0]
   1d268:	movw	r0, #1
   1d26c:	str	r0, [fp, #-4]
   1d270:	b	1d290 <__assert_fail@plt+0xc1f0>
   1d274:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d278:	ldr	r1, [fp, #-20]	; 0xffffffec
   1d27c:	ldr	r2, [fp, #-8]
   1d280:	str	r1, [r2, #4]
   1d284:	str	r0, [r2]
   1d288:	movw	r0, #0
   1d28c:	str	r0, [fp, #-4]
   1d290:	ldr	r0, [fp, #-4]
   1d294:	mov	sp, fp
   1d298:	pop	{fp, pc}
   1d29c:	andhi	r0, r0, r1
   1d2a0:	svcvc	0x00ffffff
   1d2a4:	push	{fp, lr}
   1d2a8:	mov	fp, sp
   1d2ac:	sub	sp, sp, #16
   1d2b0:	str	r0, [fp, #-4]
   1d2b4:	str	r1, [sp, #8]
   1d2b8:	str	r2, [sp, #4]
   1d2bc:	movw	r0, #0
   1d2c0:	str	r0, [sp]
   1d2c4:	ldr	r0, [sp, #4]
   1d2c8:	mvn	r1, #0
   1d2cc:	add	r1, r0, r1
   1d2d0:	str	r1, [sp, #4]
   1d2d4:	cmp	r0, #0
   1d2d8:	beq	1d2f8 <__assert_fail@plt+0xc258>
   1d2dc:	ldr	r0, [fp, #-4]
   1d2e0:	ldr	r1, [sp, #8]
   1d2e4:	bl	1ba2c <__assert_fail@plt+0xa98c>
   1d2e8:	ldr	r1, [sp]
   1d2ec:	orr	r0, r1, r0
   1d2f0:	str	r0, [sp]
   1d2f4:	b	1d2c4 <__assert_fail@plt+0xc224>
   1d2f8:	ldr	r0, [sp]
   1d2fc:	mov	sp, fp
   1d300:	pop	{fp, pc}
   1d304:	push	{fp, lr}
   1d308:	mov	fp, sp
   1d30c:	sub	sp, sp, #16
   1d310:	str	r0, [sp, #8]
   1d314:	str	r1, [sp, #4]
   1d318:	ldr	r0, [sp, #8]
   1d31c:	cmp	r0, #0
   1d320:	beq	1d330 <__assert_fail@plt+0xc290>
   1d324:	ldr	r0, [sp, #4]
   1d328:	cmp	r0, #0
   1d32c:	bne	1d33c <__assert_fail@plt+0xc29c>
   1d330:	movw	r0, #1
   1d334:	str	r0, [sp, #4]
   1d338:	str	r0, [sp, #8]
   1d33c:	ldr	r0, [sp, #4]
   1d340:	cmp	r0, #0
   1d344:	beq	1d378 <__assert_fail@plt+0xc2d8>
   1d348:	ldr	r0, [pc, #76]	; 1d39c <__assert_fail@plt+0xc2fc>
   1d34c:	ldr	r1, [sp, #4]
   1d350:	udiv	r0, r0, r1
   1d354:	ldr	r1, [sp, #8]
   1d358:	cmp	r0, r1
   1d35c:	bcs	1d378 <__assert_fail@plt+0xc2d8>
   1d360:	bl	10fd4 <__errno_location@plt>
   1d364:	movw	r1, #12
   1d368:	str	r1, [r0]
   1d36c:	movw	r0, #0
   1d370:	str	r0, [fp, #-4]
   1d374:	b	1d390 <__assert_fail@plt+0xc2f0>
   1d378:	ldr	r0, [sp, #8]
   1d37c:	ldr	r1, [sp, #4]
   1d380:	bl	10e24 <calloc@plt>
   1d384:	str	r0, [sp]
   1d388:	ldr	r0, [sp]
   1d38c:	str	r0, [fp, #-4]
   1d390:	ldr	r0, [fp, #-4]
   1d394:	mov	sp, fp
   1d398:	pop	{fp, pc}
   1d39c:	svcvc	0x00ffffff
   1d3a0:	push	{fp, lr}
   1d3a4:	mov	fp, sp
   1d3a8:	sub	sp, sp, #16
   1d3ac:	str	r0, [sp, #8]
   1d3b0:	ldr	r0, [sp, #8]
   1d3b4:	cmp	r0, #0
   1d3b8:	bne	1d3c4 <__assert_fail@plt+0xc324>
   1d3bc:	movw	r0, #1
   1d3c0:	str	r0, [sp, #8]
   1d3c4:	ldr	r0, [pc, #64]	; 1d40c <__assert_fail@plt+0xc36c>
   1d3c8:	ldr	r1, [sp, #8]
   1d3cc:	cmp	r0, r1
   1d3d0:	bcs	1d3ec <__assert_fail@plt+0xc34c>
   1d3d4:	bl	10fd4 <__errno_location@plt>
   1d3d8:	movw	r1, #12
   1d3dc:	str	r1, [r0]
   1d3e0:	movw	r0, #0
   1d3e4:	str	r0, [fp, #-4]
   1d3e8:	b	1d400 <__assert_fail@plt+0xc360>
   1d3ec:	ldr	r0, [sp, #8]
   1d3f0:	bl	10f50 <malloc@plt>
   1d3f4:	str	r0, [sp, #4]
   1d3f8:	ldr	r0, [sp, #4]
   1d3fc:	str	r0, [fp, #-4]
   1d400:	ldr	r0, [fp, #-4]
   1d404:	mov	sp, fp
   1d408:	pop	{fp, pc}
   1d40c:	svcvc	0x00ffffff
   1d410:	push	{fp, lr}
   1d414:	mov	fp, sp
   1d418:	sub	sp, sp, #16
   1d41c:	str	r0, [sp, #8]
   1d420:	str	r1, [sp, #4]
   1d424:	ldr	r0, [sp, #8]
   1d428:	movw	r1, #0
   1d42c:	cmp	r0, r1
   1d430:	bne	1d444 <__assert_fail@plt+0xc3a4>
   1d434:	ldr	r0, [sp, #4]
   1d438:	bl	1d3a0 <__assert_fail@plt+0xc300>
   1d43c:	str	r0, [fp, #-4]
   1d440:	b	1d4a4 <__assert_fail@plt+0xc404>
   1d444:	ldr	r0, [sp, #4]
   1d448:	cmp	r0, #0
   1d44c:	bne	1d464 <__assert_fail@plt+0xc3c4>
   1d450:	ldr	r0, [sp, #8]
   1d454:	bl	1548c <__assert_fail@plt+0x43ec>
   1d458:	movw	r0, #0
   1d45c:	str	r0, [fp, #-4]
   1d460:	b	1d4a4 <__assert_fail@plt+0xc404>
   1d464:	ldr	r0, [pc, #68]	; 1d4b0 <__assert_fail@plt+0xc410>
   1d468:	ldr	r1, [sp, #4]
   1d46c:	cmp	r0, r1
   1d470:	bcs	1d48c <__assert_fail@plt+0xc3ec>
   1d474:	bl	10fd4 <__errno_location@plt>
   1d478:	movw	r1, #12
   1d47c:	str	r1, [r0]
   1d480:	movw	r0, #0
   1d484:	str	r0, [fp, #-4]
   1d488:	b	1d4a4 <__assert_fail@plt+0xc404>
   1d48c:	ldr	r0, [sp, #8]
   1d490:	ldr	r1, [sp, #4]
   1d494:	bl	10ee4 <realloc@plt>
   1d498:	str	r0, [sp]
   1d49c:	ldr	r0, [sp]
   1d4a0:	str	r0, [fp, #-4]
   1d4a4:	ldr	r0, [fp, #-4]
   1d4a8:	mov	sp, fp
   1d4ac:	pop	{fp, pc}
   1d4b0:	svcvc	0x00ffffff
   1d4b4:	sub	sp, sp, #8
   1d4b8:	str	r0, [sp, #4]
   1d4bc:	str	r1, [sp]
   1d4c0:	movw	r0, #0
   1d4c4:	add	sp, sp, #8
   1d4c8:	bx	lr
   1d4cc:	push	{fp, lr}
   1d4d0:	mov	fp, sp
   1d4d4:	sub	sp, sp, #8
   1d4d8:	str	r0, [sp, #4]
   1d4dc:	str	r1, [sp]
   1d4e0:	ldr	r0, [sp, #4]
   1d4e4:	ldr	r1, [sp]
   1d4e8:	bl	1d4b4 <__assert_fail@plt+0xc414>
   1d4ec:	mov	sp, fp
   1d4f0:	pop	{fp, pc}
   1d4f4:	push	{fp, lr}
   1d4f8:	mov	fp, sp
   1d4fc:	sub	sp, sp, #24
   1d500:	str	r0, [fp, #-8]
   1d504:	str	r1, [sp, #12]
   1d508:	ldr	r0, [fp, #-8]
   1d50c:	str	r0, [sp, #8]
   1d510:	ldr	r0, [sp, #12]
   1d514:	str	r0, [sp, #4]
   1d518:	ldr	r0, [sp, #8]
   1d51c:	ldr	r1, [sp, #4]
   1d520:	cmp	r0, r1
   1d524:	bne	1d534 <__assert_fail@plt+0xc494>
   1d528:	movw	r0, #0
   1d52c:	str	r0, [fp, #-4]
   1d530:	b	1d5a0 <__assert_fail@plt+0xc500>
   1d534:	b	1d538 <__assert_fail@plt+0xc498>
   1d538:	ldr	r0, [sp, #8]
   1d53c:	ldrb	r0, [r0]
   1d540:	bl	1f4f4 <__assert_fail@plt+0xe454>
   1d544:	strb	r0, [sp, #3]
   1d548:	ldr	r0, [sp, #4]
   1d54c:	ldrb	r0, [r0]
   1d550:	bl	1f4f4 <__assert_fail@plt+0xe454>
   1d554:	strb	r0, [sp, #2]
   1d558:	ldrb	r0, [sp, #3]
   1d55c:	cmp	r0, #0
   1d560:	bne	1d568 <__assert_fail@plt+0xc4c8>
   1d564:	b	1d590 <__assert_fail@plt+0xc4f0>
   1d568:	ldr	r0, [sp, #8]
   1d56c:	add	r0, r0, #1
   1d570:	str	r0, [sp, #8]
   1d574:	ldr	r0, [sp, #4]
   1d578:	add	r0, r0, #1
   1d57c:	str	r0, [sp, #4]
   1d580:	ldrb	r0, [sp, #3]
   1d584:	ldrb	r1, [sp, #2]
   1d588:	cmp	r0, r1
   1d58c:	beq	1d538 <__assert_fail@plt+0xc498>
   1d590:	ldrb	r0, [sp, #3]
   1d594:	ldrb	r1, [sp, #2]
   1d598:	sub	r0, r0, r1
   1d59c:	str	r0, [fp, #-4]
   1d5a0:	ldr	r0, [fp, #-4]
   1d5a4:	mov	sp, fp
   1d5a8:	pop	{fp, pc}
   1d5ac:	push	{fp, lr}
   1d5b0:	mov	fp, sp
   1d5b4:	sub	sp, sp, #16
   1d5b8:	str	r0, [sp, #8]
   1d5bc:	ldr	r0, [sp, #8]
   1d5c0:	bl	10f20 <__fpending@plt>
   1d5c4:	cmp	r0, #0
   1d5c8:	movw	r0, #0
   1d5cc:	movne	r0, #1
   1d5d0:	and	r0, r0, #1
   1d5d4:	strb	r0, [sp, #7]
   1d5d8:	ldr	r0, [sp, #8]
   1d5dc:	bl	10f2c <ferror_unlocked@plt>
   1d5e0:	cmp	r0, #0
   1d5e4:	movw	r0, #0
   1d5e8:	movne	r0, #1
   1d5ec:	and	r0, r0, #1
   1d5f0:	strb	r0, [sp, #6]
   1d5f4:	ldr	r0, [sp, #8]
   1d5f8:	bl	1d67c <__assert_fail@plt+0xc5dc>
   1d5fc:	cmp	r0, #0
   1d600:	movw	r0, #0
   1d604:	movne	r0, #1
   1d608:	and	r0, r0, #1
   1d60c:	strb	r0, [sp, #5]
   1d610:	ldrb	r0, [sp, #6]
   1d614:	tst	r0, #1
   1d618:	bne	1d644 <__assert_fail@plt+0xc5a4>
   1d61c:	ldrb	r0, [sp, #5]
   1d620:	tst	r0, #1
   1d624:	beq	1d668 <__assert_fail@plt+0xc5c8>
   1d628:	ldrb	r0, [sp, #7]
   1d62c:	tst	r0, #1
   1d630:	bne	1d644 <__assert_fail@plt+0xc5a4>
   1d634:	bl	10fd4 <__errno_location@plt>
   1d638:	ldr	r0, [r0]
   1d63c:	cmp	r0, #9
   1d640:	beq	1d668 <__assert_fail@plt+0xc5c8>
   1d644:	ldrb	r0, [sp, #5]
   1d648:	tst	r0, #1
   1d64c:	bne	1d65c <__assert_fail@plt+0xc5bc>
   1d650:	bl	10fd4 <__errno_location@plt>
   1d654:	movw	r1, #0
   1d658:	str	r1, [r0]
   1d65c:	mvn	r0, #0
   1d660:	str	r0, [fp, #-4]
   1d664:	b	1d670 <__assert_fail@plt+0xc5d0>
   1d668:	movw	r0, #0
   1d66c:	str	r0, [fp, #-4]
   1d670:	ldr	r0, [fp, #-4]
   1d674:	mov	sp, fp
   1d678:	pop	{fp, pc}
   1d67c:	push	{fp, lr}
   1d680:	mov	fp, sp
   1d684:	sub	sp, sp, #32
   1d688:	str	r0, [fp, #-8]
   1d68c:	movw	r0, #0
   1d690:	str	r0, [fp, #-12]
   1d694:	str	r0, [sp, #12]
   1d698:	ldr	r0, [fp, #-8]
   1d69c:	bl	10ff8 <fileno@plt>
   1d6a0:	str	r0, [sp, #16]
   1d6a4:	ldr	r0, [sp, #16]
   1d6a8:	cmp	r0, #0
   1d6ac:	bge	1d6c0 <__assert_fail@plt+0xc620>
   1d6b0:	ldr	r0, [fp, #-8]
   1d6b4:	bl	11010 <fclose@plt>
   1d6b8:	str	r0, [fp, #-4]
   1d6bc:	b	1d75c <__assert_fail@plt+0xc6bc>
   1d6c0:	ldr	r0, [fp, #-8]
   1d6c4:	bl	10f68 <__freading@plt>
   1d6c8:	cmp	r0, #0
   1d6cc:	beq	1d704 <__assert_fail@plt+0xc664>
   1d6d0:	ldr	r0, [fp, #-8]
   1d6d4:	bl	10ff8 <fileno@plt>
   1d6d8:	mov	r1, sp
   1d6dc:	mov	r2, #1
   1d6e0:	str	r2, [r1]
   1d6e4:	mov	r1, #0
   1d6e8:	mov	r2, r1
   1d6ec:	mov	r3, r1
   1d6f0:	bl	10f08 <lseek64@plt>
   1d6f4:	and	r0, r0, r1
   1d6f8:	cmn	r0, #1
   1d6fc:	beq	1d720 <__assert_fail@plt+0xc680>
   1d700:	b	1d704 <__assert_fail@plt+0xc664>
   1d704:	ldr	r0, [fp, #-8]
   1d708:	bl	1d768 <__assert_fail@plt+0xc6c8>
   1d70c:	cmp	r0, #0
   1d710:	beq	1d720 <__assert_fail@plt+0xc680>
   1d714:	bl	10fd4 <__errno_location@plt>
   1d718:	ldr	r0, [r0]
   1d71c:	str	r0, [fp, #-12]
   1d720:	ldr	r0, [fp, #-8]
   1d724:	bl	11010 <fclose@plt>
   1d728:	str	r0, [sp, #12]
   1d72c:	ldr	r0, [fp, #-12]
   1d730:	cmp	r0, #0
   1d734:	beq	1d754 <__assert_fail@plt+0xc6b4>
   1d738:	ldr	r0, [fp, #-12]
   1d73c:	str	r0, [sp, #8]
   1d740:	bl	10fd4 <__errno_location@plt>
   1d744:	ldr	r1, [sp, #8]
   1d748:	str	r1, [r0]
   1d74c:	mvn	r0, #0
   1d750:	str	r0, [sp, #12]
   1d754:	ldr	r0, [sp, #12]
   1d758:	str	r0, [fp, #-4]
   1d75c:	ldr	r0, [fp, #-4]
   1d760:	mov	sp, fp
   1d764:	pop	{fp, pc}
   1d768:	push	{fp, lr}
   1d76c:	mov	fp, sp
   1d770:	sub	sp, sp, #8
   1d774:	str	r0, [sp]
   1d778:	ldr	r0, [sp]
   1d77c:	movw	r1, #0
   1d780:	cmp	r0, r1
   1d784:	beq	1d798 <__assert_fail@plt+0xc6f8>
   1d788:	ldr	r0, [sp]
   1d78c:	bl	10f68 <__freading@plt>
   1d790:	cmp	r0, #0
   1d794:	bne	1d7a8 <__assert_fail@plt+0xc708>
   1d798:	ldr	r0, [sp]
   1d79c:	bl	10e78 <fflush@plt>
   1d7a0:	str	r0, [sp, #4]
   1d7a4:	b	1d7bc <__assert_fail@plt+0xc71c>
   1d7a8:	ldr	r0, [sp]
   1d7ac:	bl	1d7c8 <__assert_fail@plt+0xc728>
   1d7b0:	ldr	r0, [sp]
   1d7b4:	bl	10e78 <fflush@plt>
   1d7b8:	str	r0, [sp, #4]
   1d7bc:	ldr	r0, [sp, #4]
   1d7c0:	mov	sp, fp
   1d7c4:	pop	{fp, pc}
   1d7c8:	push	{fp, lr}
   1d7cc:	mov	fp, sp
   1d7d0:	sub	sp, sp, #8
   1d7d4:	str	r0, [sp, #4]
   1d7d8:	ldr	r0, [sp, #4]
   1d7dc:	ldr	r0, [r0]
   1d7e0:	and	r0, r0, #256	; 0x100
   1d7e4:	cmp	r0, #0
   1d7e8:	beq	1d80c <__assert_fail@plt+0xc76c>
   1d7ec:	ldr	r0, [sp, #4]
   1d7f0:	mov	r1, sp
   1d7f4:	mov	r2, #1
   1d7f8:	str	r2, [r1]
   1d7fc:	mov	r1, #0
   1d800:	mov	r2, r1
   1d804:	mov	r3, r1
   1d808:	bl	1d814 <__assert_fail@plt+0xc774>
   1d80c:	mov	sp, fp
   1d810:	pop	{fp, pc}
   1d814:	push	{fp, lr}
   1d818:	mov	fp, sp
   1d81c:	sub	sp, sp, #32
   1d820:	ldr	r1, [fp, #8]
   1d824:	str	r0, [fp, #-8]
   1d828:	str	r3, [sp, #20]
   1d82c:	str	r2, [sp, #16]
   1d830:	ldr	r0, [fp, #-8]
   1d834:	ldr	r0, [r0, #8]
   1d838:	ldr	r2, [fp, #-8]
   1d83c:	ldr	r2, [r2, #4]
   1d840:	cmp	r0, r2
   1d844:	bne	1d8f0 <__assert_fail@plt+0xc850>
   1d848:	ldr	r0, [fp, #-8]
   1d84c:	ldr	r0, [r0, #20]
   1d850:	ldr	r1, [fp, #-8]
   1d854:	ldr	r1, [r1, #16]
   1d858:	cmp	r0, r1
   1d85c:	bne	1d8f0 <__assert_fail@plt+0xc850>
   1d860:	ldr	r0, [fp, #-8]
   1d864:	ldr	r0, [r0, #36]	; 0x24
   1d868:	movw	r1, #0
   1d86c:	cmp	r0, r1
   1d870:	bne	1d8f0 <__assert_fail@plt+0xc850>
   1d874:	ldr	r0, [fp, #-8]
   1d878:	bl	10ff8 <fileno@plt>
   1d87c:	ldr	r2, [sp, #16]
   1d880:	ldr	r3, [sp, #20]
   1d884:	ldr	r1, [fp, #8]
   1d888:	mov	ip, sp
   1d88c:	str	r1, [ip]
   1d890:	bl	10f08 <lseek64@plt>
   1d894:	str	r1, [sp, #12]
   1d898:	str	r0, [sp, #8]
   1d89c:	ldr	r0, [sp, #8]
   1d8a0:	ldr	r1, [sp, #12]
   1d8a4:	and	r0, r0, r1
   1d8a8:	cmn	r0, #1
   1d8ac:	bne	1d8c0 <__assert_fail@plt+0xc820>
   1d8b0:	b	1d8b4 <__assert_fail@plt+0xc814>
   1d8b4:	mvn	r0, #0
   1d8b8:	str	r0, [fp, #-4]
   1d8bc:	b	1d910 <__assert_fail@plt+0xc870>
   1d8c0:	ldr	r0, [fp, #-8]
   1d8c4:	ldr	r1, [r0]
   1d8c8:	bic	r1, r1, #16
   1d8cc:	str	r1, [r0]
   1d8d0:	ldr	r0, [sp, #8]
   1d8d4:	ldr	r1, [sp, #12]
   1d8d8:	ldr	r2, [fp, #-8]
   1d8dc:	str	r1, [r2, #84]	; 0x54
   1d8e0:	str	r0, [r2, #80]	; 0x50
   1d8e4:	movw	r0, #0
   1d8e8:	str	r0, [fp, #-4]
   1d8ec:	b	1d910 <__assert_fail@plt+0xc870>
   1d8f0:	ldr	r0, [fp, #-8]
   1d8f4:	ldr	r2, [sp, #16]
   1d8f8:	ldr	r3, [sp, #20]
   1d8fc:	ldr	r1, [fp, #8]
   1d900:	mov	ip, sp
   1d904:	str	r1, [ip]
   1d908:	bl	1101c <fseeko64@plt>
   1d90c:	str	r0, [fp, #-4]
   1d910:	ldr	r0, [fp, #-4]
   1d914:	mov	sp, fp
   1d918:	pop	{fp, pc}
   1d91c:	push	{fp, lr}
   1d920:	mov	fp, sp
   1d924:	bl	10fd4 <__errno_location@plt>
   1d928:	movw	r1, #12
   1d92c:	str	r1, [r0]
   1d930:	movw	r0, #0
   1d934:	pop	{fp, pc}
   1d938:	push	{fp, lr}
   1d93c:	mov	fp, sp
   1d940:	sub	sp, sp, #8
   1d944:	str	r0, [sp, #4]
   1d948:	ldr	r0, [sp, #4]
   1d94c:	cmn	r0, #1
   1d950:	bhi	1d964 <__assert_fail@plt+0xc8c4>
   1d954:	ldr	r0, [sp, #4]
   1d958:	bl	1d3a0 <__assert_fail@plt+0xc300>
   1d95c:	str	r0, [sp]
   1d960:	b	1d96c <__assert_fail@plt+0xc8cc>
   1d964:	bl	1d91c <__assert_fail@plt+0xc87c>
   1d968:	str	r0, [sp]
   1d96c:	ldr	r0, [sp]
   1d970:	mov	sp, fp
   1d974:	pop	{fp, pc}
   1d978:	push	{fp, lr}
   1d97c:	mov	fp, sp
   1d980:	sub	sp, sp, #16
   1d984:	str	r0, [fp, #-4]
   1d988:	str	r1, [sp, #8]
   1d98c:	ldr	r0, [sp, #8]
   1d990:	cmn	r0, #1
   1d994:	bhi	1d9cc <__assert_fail@plt+0xc92c>
   1d998:	ldr	r0, [fp, #-4]
   1d99c:	ldr	r1, [sp, #8]
   1d9a0:	ldr	r2, [sp, #8]
   1d9a4:	cmp	r2, #0
   1d9a8:	movw	r2, #0
   1d9ac:	movne	r2, #1
   1d9b0:	mvn	r3, #0
   1d9b4:	eor	r2, r2, r3
   1d9b8:	and	r2, r2, #1
   1d9bc:	orr	r1, r1, r2
   1d9c0:	bl	1d410 <__assert_fail@plt+0xc370>
   1d9c4:	str	r0, [sp, #4]
   1d9c8:	b	1d9d4 <__assert_fail@plt+0xc934>
   1d9cc:	bl	1d91c <__assert_fail@plt+0xc87c>
   1d9d0:	str	r0, [sp, #4]
   1d9d4:	ldr	r0, [sp, #4]
   1d9d8:	mov	sp, fp
   1d9dc:	pop	{fp, pc}
   1d9e0:	push	{fp, lr}
   1d9e4:	mov	fp, sp
   1d9e8:	sub	sp, sp, #16
   1d9ec:	str	r0, [sp, #8]
   1d9f0:	str	r1, [sp, #4]
   1d9f4:	ldr	r0, [sp, #8]
   1d9f8:	mvn	r1, #0
   1d9fc:	cmp	r1, r0
   1da00:	bcs	1da24 <__assert_fail@plt+0xc984>
   1da04:	ldr	r0, [sp, #4]
   1da08:	cmp	r0, #0
   1da0c:	beq	1da1c <__assert_fail@plt+0xc97c>
   1da10:	bl	1d91c <__assert_fail@plt+0xc87c>
   1da14:	str	r0, [fp, #-4]
   1da18:	b	1da64 <__assert_fail@plt+0xc9c4>
   1da1c:	movw	r0, #0
   1da20:	str	r0, [sp, #8]
   1da24:	ldr	r0, [sp, #4]
   1da28:	mvn	r1, #0
   1da2c:	cmp	r1, r0
   1da30:	bcs	1da54 <__assert_fail@plt+0xc9b4>
   1da34:	ldr	r0, [sp, #8]
   1da38:	cmp	r0, #0
   1da3c:	beq	1da4c <__assert_fail@plt+0xc9ac>
   1da40:	bl	1d91c <__assert_fail@plt+0xc87c>
   1da44:	str	r0, [fp, #-4]
   1da48:	b	1da64 <__assert_fail@plt+0xc9c4>
   1da4c:	movw	r0, #0
   1da50:	str	r0, [sp, #4]
   1da54:	ldr	r0, [sp, #8]
   1da58:	ldr	r1, [sp, #4]
   1da5c:	bl	1d304 <__assert_fail@plt+0xc264>
   1da60:	str	r0, [fp, #-4]
   1da64:	ldr	r0, [fp, #-4]
   1da68:	mov	sp, fp
   1da6c:	pop	{fp, pc}
   1da70:	push	{fp, lr}
   1da74:	mov	fp, sp
   1da78:	sub	sp, sp, #16
   1da7c:	str	r0, [fp, #-4]
   1da80:	str	r1, [sp, #8]
   1da84:	str	r2, [sp, #4]
   1da88:	ldr	r0, [sp, #8]
   1da8c:	cmp	r0, #0
   1da90:	beq	1daa0 <__assert_fail@plt+0xca00>
   1da94:	ldr	r0, [sp, #4]
   1da98:	cmp	r0, #0
   1da9c:	bne	1daac <__assert_fail@plt+0xca0c>
   1daa0:	movw	r0, #1
   1daa4:	str	r0, [sp, #4]
   1daa8:	str	r0, [sp, #8]
   1daac:	ldr	r0, [sp, #8]
   1dab0:	cmn	r0, #1
   1dab4:	bhi	1dadc <__assert_fail@plt+0xca3c>
   1dab8:	ldr	r0, [sp, #4]
   1dabc:	cmn	r0, #1
   1dac0:	bhi	1dadc <__assert_fail@plt+0xca3c>
   1dac4:	ldr	r0, [fp, #-4]
   1dac8:	ldr	r1, [sp, #8]
   1dacc:	ldr	r2, [sp, #4]
   1dad0:	bl	1dbfc <__assert_fail@plt+0xcb5c>
   1dad4:	str	r0, [sp]
   1dad8:	b	1dae4 <__assert_fail@plt+0xca44>
   1dadc:	bl	1d91c <__assert_fail@plt+0xc87c>
   1dae0:	str	r0, [sp]
   1dae4:	ldr	r0, [sp]
   1dae8:	mov	sp, fp
   1daec:	pop	{fp, pc}
   1daf0:	push	{fp, lr}
   1daf4:	mov	fp, sp
   1daf8:	sub	sp, sp, #8
   1dafc:	movw	r0, #14
   1db00:	bl	1104c <nl_langinfo@plt>
   1db04:	str	r0, [sp, #4]
   1db08:	ldr	r0, [sp, #4]
   1db0c:	movw	r1, #0
   1db10:	cmp	r0, r1
   1db14:	bne	1db24 <__assert_fail@plt+0xca84>
   1db18:	movw	r0, #1607	; 0x647
   1db1c:	movt	r0, #2
   1db20:	str	r0, [sp, #4]
   1db24:	ldr	r0, [sp, #4]
   1db28:	ldrb	r0, [r0]
   1db2c:	cmp	r0, #0
   1db30:	bne	1db40 <__assert_fail@plt+0xcaa0>
   1db34:	movw	r0, #5202	; 0x1452
   1db38:	movt	r0, #2
   1db3c:	str	r0, [sp, #4]
   1db40:	ldr	r0, [sp, #4]
   1db44:	mov	sp, fp
   1db48:	pop	{fp, pc}
   1db4c:	push	{fp, lr}
   1db50:	mov	fp, sp
   1db54:	sub	sp, sp, #32
   1db58:	str	r0, [fp, #-8]
   1db5c:	str	r1, [fp, #-12]
   1db60:	str	r2, [sp, #16]
   1db64:	str	r3, [sp, #12]
   1db68:	ldr	r0, [fp, #-8]
   1db6c:	movw	r1, #0
   1db70:	cmp	r0, r1
   1db74:	bne	1db80 <__assert_fail@plt+0xcae0>
   1db78:	add	r0, sp, #4
   1db7c:	str	r0, [fp, #-8]
   1db80:	ldr	r0, [fp, #-8]
   1db84:	ldr	r1, [fp, #-12]
   1db88:	ldr	r2, [sp, #16]
   1db8c:	ldr	r3, [sp, #12]
   1db90:	bl	10f38 <mbrtowc@plt>
   1db94:	str	r0, [sp, #8]
   1db98:	ldr	r0, [sp, #8]
   1db9c:	mvn	r1, #1
   1dba0:	cmp	r1, r0
   1dba4:	bhi	1dbe8 <__assert_fail@plt+0xcb48>
   1dba8:	ldr	r0, [sp, #16]
   1dbac:	cmp	r0, #0
   1dbb0:	beq	1dbe8 <__assert_fail@plt+0xcb48>
   1dbb4:	movw	r0, #0
   1dbb8:	bl	1f57c <__assert_fail@plt+0xe4dc>
   1dbbc:	tst	r0, #1
   1dbc0:	bne	1dbe8 <__assert_fail@plt+0xcb48>
   1dbc4:	ldr	r0, [fp, #-12]
   1dbc8:	ldrb	r0, [r0]
   1dbcc:	strb	r0, [sp, #3]
   1dbd0:	ldrb	r0, [sp, #3]
   1dbd4:	ldr	r1, [fp, #-8]
   1dbd8:	str	r0, [r1]
   1dbdc:	movw	r0, #1
   1dbe0:	str	r0, [fp, #-4]
   1dbe4:	b	1dbf0 <__assert_fail@plt+0xcb50>
   1dbe8:	ldr	r0, [sp, #8]
   1dbec:	str	r0, [fp, #-4]
   1dbf0:	ldr	r0, [fp, #-4]
   1dbf4:	mov	sp, fp
   1dbf8:	pop	{fp, pc}
   1dbfc:	push	{fp, lr}
   1dc00:	mov	fp, sp
   1dc04:	sub	sp, sp, #96	; 0x60
   1dc08:	str	r0, [fp, #-8]
   1dc0c:	str	r1, [fp, #-12]
   1dc10:	str	r2, [fp, #-16]
   1dc14:	b	1dfcc <__assert_fail@plt+0xcf2c>
   1dc18:	b	1ddec <__assert_fail@plt+0xcd4c>
   1dc1c:	ldr	r0, [fp, #-16]
   1dc20:	cmp	r0, #0
   1dc24:	bcs	1dd28 <__assert_fail@plt+0xcc88>
   1dc28:	ldr	r0, [fp, #-12]
   1dc2c:	cmp	r0, #0
   1dc30:	bcs	1dcb8 <__assert_fail@plt+0xcc18>
   1dc34:	b	1dc54 <__assert_fail@plt+0xcbb4>
   1dc38:	ldr	r0, [fp, #-12]
   1dc3c:	ldr	r1, [fp, #-16]
   1dc40:	movw	r2, #127	; 0x7f
   1dc44:	udiv	r1, r2, r1
   1dc48:	cmp	r0, r1
   1dc4c:	bcc	1ddbc <__assert_fail@plt+0xcd1c>
   1dc50:	b	1ddd4 <__assert_fail@plt+0xcd34>
   1dc54:	b	1dc68 <__assert_fail@plt+0xcbc8>
   1dc58:	ldr	r0, [fp, #-16]
   1dc5c:	cmp	r0, #1
   1dc60:	bcc	1dc78 <__assert_fail@plt+0xcbd8>
   1dc64:	b	1dc84 <__assert_fail@plt+0xcbe4>
   1dc68:	ldr	r0, [fp, #-16]
   1dc6c:	movw	r1, #0
   1dc70:	cmp	r1, r0
   1dc74:	bcs	1dc84 <__assert_fail@plt+0xcbe4>
   1dc78:	movw	r0, #0
   1dc7c:	str	r0, [fp, #-24]	; 0xffffffe8
   1dc80:	b	1dc9c <__assert_fail@plt+0xcbfc>
   1dc84:	ldr	r0, [fp, #-16]
   1dc88:	movw	r1, #0
   1dc8c:	sub	r0, r1, r0
   1dc90:	movw	r1, #127	; 0x7f
   1dc94:	udiv	r0, r1, r0
   1dc98:	str	r0, [fp, #-24]	; 0xffffffe8
   1dc9c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1dca0:	ldr	r1, [fp, #-12]
   1dca4:	mvn	r2, #0
   1dca8:	sub	r1, r2, r1
   1dcac:	cmp	r0, r1
   1dcb0:	bls	1ddbc <__assert_fail@plt+0xcd1c>
   1dcb4:	b	1ddd4 <__assert_fail@plt+0xcd34>
   1dcb8:	ldr	r0, [fp, #-16]
   1dcbc:	cmn	r0, #1
   1dcc0:	bne	1dd0c <__assert_fail@plt+0xcc6c>
   1dcc4:	b	1dce4 <__assert_fail@plt+0xcc44>
   1dcc8:	ldr	r0, [fp, #-12]
   1dccc:	mvn	r1, #127	; 0x7f
   1dcd0:	add	r0, r0, r1
   1dcd4:	movw	r1, #0
   1dcd8:	cmp	r1, r0
   1dcdc:	bcc	1ddbc <__assert_fail@plt+0xcd1c>
   1dce0:	b	1ddd4 <__assert_fail@plt+0xcd34>
   1dce4:	ldr	r0, [fp, #-12]
   1dce8:	movw	r1, #0
   1dcec:	cmp	r1, r0
   1dcf0:	bcs	1ddd4 <__assert_fail@plt+0xcd34>
   1dcf4:	ldr	r0, [fp, #-12]
   1dcf8:	sub	r0, r0, #1
   1dcfc:	movw	r1, #127	; 0x7f
   1dd00:	cmp	r1, r0
   1dd04:	bcc	1ddbc <__assert_fail@plt+0xcd1c>
   1dd08:	b	1ddd4 <__assert_fail@plt+0xcd34>
   1dd0c:	ldr	r0, [fp, #-16]
   1dd10:	mvn	r1, #127	; 0x7f
   1dd14:	udiv	r0, r1, r0
   1dd18:	ldr	r1, [fp, #-12]
   1dd1c:	cmp	r0, r1
   1dd20:	bcc	1ddbc <__assert_fail@plt+0xcd1c>
   1dd24:	b	1ddd4 <__assert_fail@plt+0xcd34>
   1dd28:	ldr	r0, [fp, #-16]
   1dd2c:	cmp	r0, #0
   1dd30:	bne	1dd38 <__assert_fail@plt+0xcc98>
   1dd34:	b	1ddd4 <__assert_fail@plt+0xcd34>
   1dd38:	ldr	r0, [fp, #-12]
   1dd3c:	cmp	r0, #0
   1dd40:	bcs	1dda4 <__assert_fail@plt+0xcd04>
   1dd44:	ldr	r0, [fp, #-12]
   1dd48:	cmn	r0, #1
   1dd4c:	bne	1dd88 <__assert_fail@plt+0xcce8>
   1dd50:	b	1dd70 <__assert_fail@plt+0xccd0>
   1dd54:	ldr	r0, [fp, #-16]
   1dd58:	mvn	r1, #127	; 0x7f
   1dd5c:	add	r0, r0, r1
   1dd60:	movw	r1, #0
   1dd64:	cmp	r1, r0
   1dd68:	bcc	1ddbc <__assert_fail@plt+0xcd1c>
   1dd6c:	b	1ddd4 <__assert_fail@plt+0xcd34>
   1dd70:	ldr	r0, [fp, #-16]
   1dd74:	sub	r0, r0, #1
   1dd78:	movw	r1, #127	; 0x7f
   1dd7c:	cmp	r1, r0
   1dd80:	bcc	1ddbc <__assert_fail@plt+0xcd1c>
   1dd84:	b	1ddd4 <__assert_fail@plt+0xcd34>
   1dd88:	ldr	r0, [fp, #-12]
   1dd8c:	mvn	r1, #127	; 0x7f
   1dd90:	udiv	r0, r1, r0
   1dd94:	ldr	r1, [fp, #-16]
   1dd98:	cmp	r0, r1
   1dd9c:	bcc	1ddbc <__assert_fail@plt+0xcd1c>
   1dda0:	b	1ddd4 <__assert_fail@plt+0xcd34>
   1dda4:	ldr	r0, [fp, #-16]
   1dda8:	movw	r1, #127	; 0x7f
   1ddac:	udiv	r0, r1, r0
   1ddb0:	ldr	r1, [fp, #-12]
   1ddb4:	cmp	r0, r1
   1ddb8:	bcs	1ddd4 <__assert_fail@plt+0xcd34>
   1ddbc:	ldr	r0, [fp, #-12]
   1ddc0:	ldr	r1, [fp, #-16]
   1ddc4:	mul	r0, r0, r1
   1ddc8:	sxtb	r0, r0
   1ddcc:	str	r0, [fp, #-20]	; 0xffffffec
   1ddd0:	b	1eefc <__assert_fail@plt+0xde5c>
   1ddd4:	ldr	r0, [fp, #-12]
   1ddd8:	ldr	r1, [fp, #-16]
   1dddc:	mul	r0, r0, r1
   1dde0:	sxtb	r0, r0
   1dde4:	str	r0, [fp, #-20]	; 0xffffffec
   1dde8:	b	1ef14 <__assert_fail@plt+0xde74>
   1ddec:	ldr	r0, [fp, #-16]
   1ddf0:	cmp	r0, #0
   1ddf4:	bcs	1df00 <__assert_fail@plt+0xce60>
   1ddf8:	ldr	r0, [fp, #-12]
   1ddfc:	cmp	r0, #0
   1de00:	bcs	1de88 <__assert_fail@plt+0xcde8>
   1de04:	b	1de24 <__assert_fail@plt+0xcd84>
   1de08:	ldr	r0, [fp, #-12]
   1de0c:	ldr	r1, [fp, #-16]
   1de10:	movw	r2, #255	; 0xff
   1de14:	udiv	r1, r2, r1
   1de18:	cmp	r0, r1
   1de1c:	bcc	1df9c <__assert_fail@plt+0xcefc>
   1de20:	b	1dfb4 <__assert_fail@plt+0xcf14>
   1de24:	b	1de38 <__assert_fail@plt+0xcd98>
   1de28:	ldr	r0, [fp, #-16]
   1de2c:	cmp	r0, #1
   1de30:	bcc	1de48 <__assert_fail@plt+0xcda8>
   1de34:	b	1de54 <__assert_fail@plt+0xcdb4>
   1de38:	ldr	r0, [fp, #-16]
   1de3c:	movw	r1, #0
   1de40:	cmp	r1, r0
   1de44:	bcs	1de54 <__assert_fail@plt+0xcdb4>
   1de48:	movw	r0, #0
   1de4c:	str	r0, [fp, #-28]	; 0xffffffe4
   1de50:	b	1de6c <__assert_fail@plt+0xcdcc>
   1de54:	ldr	r0, [fp, #-16]
   1de58:	movw	r1, #0
   1de5c:	sub	r0, r1, r0
   1de60:	movw	r1, #255	; 0xff
   1de64:	udiv	r0, r1, r0
   1de68:	str	r0, [fp, #-28]	; 0xffffffe4
   1de6c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1de70:	ldr	r1, [fp, #-12]
   1de74:	mvn	r2, #0
   1de78:	sub	r1, r2, r1
   1de7c:	cmp	r0, r1
   1de80:	bls	1df9c <__assert_fail@plt+0xcefc>
   1de84:	b	1dfb4 <__assert_fail@plt+0xcf14>
   1de88:	b	1de90 <__assert_fail@plt+0xcdf0>
   1de8c:	b	1de94 <__assert_fail@plt+0xcdf4>
   1de90:	b	1dee4 <__assert_fail@plt+0xce44>
   1de94:	ldr	r0, [fp, #-16]
   1de98:	cmn	r0, #1
   1de9c:	bne	1dee4 <__assert_fail@plt+0xce44>
   1dea0:	b	1debc <__assert_fail@plt+0xce1c>
   1dea4:	ldr	r0, [fp, #-12]
   1dea8:	add	r0, r0, #0
   1deac:	movw	r1, #0
   1deb0:	cmp	r1, r0
   1deb4:	bcc	1df9c <__assert_fail@plt+0xcefc>
   1deb8:	b	1dfb4 <__assert_fail@plt+0xcf14>
   1debc:	ldr	r0, [fp, #-12]
   1dec0:	movw	r1, #0
   1dec4:	cmp	r1, r0
   1dec8:	bcs	1dfb4 <__assert_fail@plt+0xcf14>
   1decc:	ldr	r0, [fp, #-12]
   1ded0:	sub	r0, r0, #1
   1ded4:	mvn	r1, #0
   1ded8:	cmp	r1, r0
   1dedc:	bcc	1df9c <__assert_fail@plt+0xcefc>
   1dee0:	b	1dfb4 <__assert_fail@plt+0xcf14>
   1dee4:	ldr	r0, [fp, #-16]
   1dee8:	movw	r1, #0
   1deec:	udiv	r0, r1, r0
   1def0:	ldr	r1, [fp, #-12]
   1def4:	cmp	r0, r1
   1def8:	bcc	1df9c <__assert_fail@plt+0xcefc>
   1defc:	b	1dfb4 <__assert_fail@plt+0xcf14>
   1df00:	ldr	r0, [fp, #-16]
   1df04:	cmp	r0, #0
   1df08:	bne	1df10 <__assert_fail@plt+0xce70>
   1df0c:	b	1dfb4 <__assert_fail@plt+0xcf14>
   1df10:	ldr	r0, [fp, #-12]
   1df14:	cmp	r0, #0
   1df18:	bcs	1df84 <__assert_fail@plt+0xcee4>
   1df1c:	b	1df24 <__assert_fail@plt+0xce84>
   1df20:	b	1df28 <__assert_fail@plt+0xce88>
   1df24:	b	1df68 <__assert_fail@plt+0xcec8>
   1df28:	ldr	r0, [fp, #-12]
   1df2c:	cmn	r0, #1
   1df30:	bne	1df68 <__assert_fail@plt+0xcec8>
   1df34:	b	1df50 <__assert_fail@plt+0xceb0>
   1df38:	ldr	r0, [fp, #-16]
   1df3c:	add	r0, r0, #0
   1df40:	movw	r1, #0
   1df44:	cmp	r1, r0
   1df48:	bcc	1df9c <__assert_fail@plt+0xcefc>
   1df4c:	b	1dfb4 <__assert_fail@plt+0xcf14>
   1df50:	ldr	r0, [fp, #-16]
   1df54:	sub	r0, r0, #1
   1df58:	mvn	r1, #0
   1df5c:	cmp	r1, r0
   1df60:	bcc	1df9c <__assert_fail@plt+0xcefc>
   1df64:	b	1dfb4 <__assert_fail@plt+0xcf14>
   1df68:	ldr	r0, [fp, #-12]
   1df6c:	movw	r1, #0
   1df70:	udiv	r0, r1, r0
   1df74:	ldr	r1, [fp, #-16]
   1df78:	cmp	r0, r1
   1df7c:	bcc	1df9c <__assert_fail@plt+0xcefc>
   1df80:	b	1dfb4 <__assert_fail@plt+0xcf14>
   1df84:	ldr	r0, [fp, #-16]
   1df88:	movw	r1, #255	; 0xff
   1df8c:	udiv	r0, r1, r0
   1df90:	ldr	r1, [fp, #-12]
   1df94:	cmp	r0, r1
   1df98:	bcs	1dfb4 <__assert_fail@plt+0xcf14>
   1df9c:	ldr	r0, [fp, #-12]
   1dfa0:	ldr	r1, [fp, #-16]
   1dfa4:	mul	r0, r0, r1
   1dfa8:	and	r0, r0, #255	; 0xff
   1dfac:	str	r0, [fp, #-20]	; 0xffffffec
   1dfb0:	b	1eefc <__assert_fail@plt+0xde5c>
   1dfb4:	ldr	r0, [fp, #-12]
   1dfb8:	ldr	r1, [fp, #-16]
   1dfbc:	mul	r0, r0, r1
   1dfc0:	and	r0, r0, #255	; 0xff
   1dfc4:	str	r0, [fp, #-20]	; 0xffffffec
   1dfc8:	b	1ef14 <__assert_fail@plt+0xde74>
   1dfcc:	b	1e384 <__assert_fail@plt+0xd2e4>
   1dfd0:	b	1e1a4 <__assert_fail@plt+0xd104>
   1dfd4:	ldr	r0, [fp, #-16]
   1dfd8:	cmp	r0, #0
   1dfdc:	bcs	1e0e0 <__assert_fail@plt+0xd040>
   1dfe0:	ldr	r0, [fp, #-12]
   1dfe4:	cmp	r0, #0
   1dfe8:	bcs	1e070 <__assert_fail@plt+0xcfd0>
   1dfec:	b	1e00c <__assert_fail@plt+0xcf6c>
   1dff0:	ldr	r0, [fp, #-12]
   1dff4:	ldr	r1, [fp, #-16]
   1dff8:	movw	r2, #32767	; 0x7fff
   1dffc:	udiv	r1, r2, r1
   1e000:	cmp	r0, r1
   1e004:	bcc	1e174 <__assert_fail@plt+0xd0d4>
   1e008:	b	1e18c <__assert_fail@plt+0xd0ec>
   1e00c:	b	1e020 <__assert_fail@plt+0xcf80>
   1e010:	ldr	r0, [fp, #-16]
   1e014:	cmp	r0, #1
   1e018:	bcc	1e030 <__assert_fail@plt+0xcf90>
   1e01c:	b	1e03c <__assert_fail@plt+0xcf9c>
   1e020:	ldr	r0, [fp, #-16]
   1e024:	movw	r1, #0
   1e028:	cmp	r1, r0
   1e02c:	bcs	1e03c <__assert_fail@plt+0xcf9c>
   1e030:	movw	r0, #0
   1e034:	str	r0, [fp, #-32]	; 0xffffffe0
   1e038:	b	1e054 <__assert_fail@plt+0xcfb4>
   1e03c:	ldr	r0, [fp, #-16]
   1e040:	movw	r1, #0
   1e044:	sub	r0, r1, r0
   1e048:	movw	r1, #32767	; 0x7fff
   1e04c:	udiv	r0, r1, r0
   1e050:	str	r0, [fp, #-32]	; 0xffffffe0
   1e054:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1e058:	ldr	r1, [fp, #-12]
   1e05c:	mvn	r2, #0
   1e060:	sub	r1, r2, r1
   1e064:	cmp	r0, r1
   1e068:	bls	1e174 <__assert_fail@plt+0xd0d4>
   1e06c:	b	1e18c <__assert_fail@plt+0xd0ec>
   1e070:	ldr	r0, [fp, #-16]
   1e074:	cmn	r0, #1
   1e078:	bne	1e0c4 <__assert_fail@plt+0xd024>
   1e07c:	b	1e09c <__assert_fail@plt+0xcffc>
   1e080:	ldr	r0, [pc, #3760]	; 1ef38 <__assert_fail@plt+0xde98>
   1e084:	ldr	r1, [fp, #-12]
   1e088:	add	r0, r1, r0
   1e08c:	movw	r1, #0
   1e090:	cmp	r1, r0
   1e094:	bcc	1e174 <__assert_fail@plt+0xd0d4>
   1e098:	b	1e18c <__assert_fail@plt+0xd0ec>
   1e09c:	ldr	r0, [fp, #-12]
   1e0a0:	movw	r1, #0
   1e0a4:	cmp	r1, r0
   1e0a8:	bcs	1e18c <__assert_fail@plt+0xd0ec>
   1e0ac:	ldr	r0, [fp, #-12]
   1e0b0:	sub	r0, r0, #1
   1e0b4:	movw	r1, #32767	; 0x7fff
   1e0b8:	cmp	r1, r0
   1e0bc:	bcc	1e174 <__assert_fail@plt+0xd0d4>
   1e0c0:	b	1e18c <__assert_fail@plt+0xd0ec>
   1e0c4:	ldr	r0, [pc, #3692]	; 1ef38 <__assert_fail@plt+0xde98>
   1e0c8:	ldr	r1, [fp, #-16]
   1e0cc:	udiv	r0, r0, r1
   1e0d0:	ldr	r1, [fp, #-12]
   1e0d4:	cmp	r0, r1
   1e0d8:	bcc	1e174 <__assert_fail@plt+0xd0d4>
   1e0dc:	b	1e18c <__assert_fail@plt+0xd0ec>
   1e0e0:	ldr	r0, [fp, #-16]
   1e0e4:	cmp	r0, #0
   1e0e8:	bne	1e0f0 <__assert_fail@plt+0xd050>
   1e0ec:	b	1e18c <__assert_fail@plt+0xd0ec>
   1e0f0:	ldr	r0, [fp, #-12]
   1e0f4:	cmp	r0, #0
   1e0f8:	bcs	1e15c <__assert_fail@plt+0xd0bc>
   1e0fc:	ldr	r0, [fp, #-12]
   1e100:	cmn	r0, #1
   1e104:	bne	1e140 <__assert_fail@plt+0xd0a0>
   1e108:	b	1e128 <__assert_fail@plt+0xd088>
   1e10c:	ldr	r0, [pc, #3620]	; 1ef38 <__assert_fail@plt+0xde98>
   1e110:	ldr	r1, [fp, #-16]
   1e114:	add	r0, r1, r0
   1e118:	movw	r1, #0
   1e11c:	cmp	r1, r0
   1e120:	bcc	1e174 <__assert_fail@plt+0xd0d4>
   1e124:	b	1e18c <__assert_fail@plt+0xd0ec>
   1e128:	ldr	r0, [fp, #-16]
   1e12c:	sub	r0, r0, #1
   1e130:	movw	r1, #32767	; 0x7fff
   1e134:	cmp	r1, r0
   1e138:	bcc	1e174 <__assert_fail@plt+0xd0d4>
   1e13c:	b	1e18c <__assert_fail@plt+0xd0ec>
   1e140:	ldr	r0, [pc, #3568]	; 1ef38 <__assert_fail@plt+0xde98>
   1e144:	ldr	r1, [fp, #-12]
   1e148:	udiv	r0, r0, r1
   1e14c:	ldr	r1, [fp, #-16]
   1e150:	cmp	r0, r1
   1e154:	bcc	1e174 <__assert_fail@plt+0xd0d4>
   1e158:	b	1e18c <__assert_fail@plt+0xd0ec>
   1e15c:	ldr	r0, [fp, #-16]
   1e160:	movw	r1, #32767	; 0x7fff
   1e164:	udiv	r0, r1, r0
   1e168:	ldr	r1, [fp, #-12]
   1e16c:	cmp	r0, r1
   1e170:	bcs	1e18c <__assert_fail@plt+0xd0ec>
   1e174:	ldr	r0, [fp, #-12]
   1e178:	ldr	r1, [fp, #-16]
   1e17c:	mul	r0, r0, r1
   1e180:	sxth	r0, r0
   1e184:	str	r0, [fp, #-20]	; 0xffffffec
   1e188:	b	1eefc <__assert_fail@plt+0xde5c>
   1e18c:	ldr	r0, [fp, #-12]
   1e190:	ldr	r1, [fp, #-16]
   1e194:	mul	r0, r0, r1
   1e198:	sxth	r0, r0
   1e19c:	str	r0, [fp, #-20]	; 0xffffffec
   1e1a0:	b	1ef14 <__assert_fail@plt+0xde74>
   1e1a4:	ldr	r0, [fp, #-16]
   1e1a8:	cmp	r0, #0
   1e1ac:	bcs	1e2b8 <__assert_fail@plt+0xd218>
   1e1b0:	ldr	r0, [fp, #-12]
   1e1b4:	cmp	r0, #0
   1e1b8:	bcs	1e240 <__assert_fail@plt+0xd1a0>
   1e1bc:	b	1e1dc <__assert_fail@plt+0xd13c>
   1e1c0:	ldr	r0, [fp, #-12]
   1e1c4:	ldr	r1, [fp, #-16]
   1e1c8:	movw	r2, #65535	; 0xffff
   1e1cc:	udiv	r1, r2, r1
   1e1d0:	cmp	r0, r1
   1e1d4:	bcc	1e354 <__assert_fail@plt+0xd2b4>
   1e1d8:	b	1e36c <__assert_fail@plt+0xd2cc>
   1e1dc:	b	1e1f0 <__assert_fail@plt+0xd150>
   1e1e0:	ldr	r0, [fp, #-16]
   1e1e4:	cmp	r0, #1
   1e1e8:	bcc	1e200 <__assert_fail@plt+0xd160>
   1e1ec:	b	1e20c <__assert_fail@plt+0xd16c>
   1e1f0:	ldr	r0, [fp, #-16]
   1e1f4:	movw	r1, #0
   1e1f8:	cmp	r1, r0
   1e1fc:	bcs	1e20c <__assert_fail@plt+0xd16c>
   1e200:	movw	r0, #0
   1e204:	str	r0, [fp, #-36]	; 0xffffffdc
   1e208:	b	1e224 <__assert_fail@plt+0xd184>
   1e20c:	ldr	r0, [fp, #-16]
   1e210:	movw	r1, #0
   1e214:	sub	r0, r1, r0
   1e218:	movw	r1, #65535	; 0xffff
   1e21c:	udiv	r0, r1, r0
   1e220:	str	r0, [fp, #-36]	; 0xffffffdc
   1e224:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1e228:	ldr	r1, [fp, #-12]
   1e22c:	mvn	r2, #0
   1e230:	sub	r1, r2, r1
   1e234:	cmp	r0, r1
   1e238:	bls	1e354 <__assert_fail@plt+0xd2b4>
   1e23c:	b	1e36c <__assert_fail@plt+0xd2cc>
   1e240:	b	1e248 <__assert_fail@plt+0xd1a8>
   1e244:	b	1e24c <__assert_fail@plt+0xd1ac>
   1e248:	b	1e29c <__assert_fail@plt+0xd1fc>
   1e24c:	ldr	r0, [fp, #-16]
   1e250:	cmn	r0, #1
   1e254:	bne	1e29c <__assert_fail@plt+0xd1fc>
   1e258:	b	1e274 <__assert_fail@plt+0xd1d4>
   1e25c:	ldr	r0, [fp, #-12]
   1e260:	add	r0, r0, #0
   1e264:	movw	r1, #0
   1e268:	cmp	r1, r0
   1e26c:	bcc	1e354 <__assert_fail@plt+0xd2b4>
   1e270:	b	1e36c <__assert_fail@plt+0xd2cc>
   1e274:	ldr	r0, [fp, #-12]
   1e278:	movw	r1, #0
   1e27c:	cmp	r1, r0
   1e280:	bcs	1e36c <__assert_fail@plt+0xd2cc>
   1e284:	ldr	r0, [fp, #-12]
   1e288:	sub	r0, r0, #1
   1e28c:	mvn	r1, #0
   1e290:	cmp	r1, r0
   1e294:	bcc	1e354 <__assert_fail@plt+0xd2b4>
   1e298:	b	1e36c <__assert_fail@plt+0xd2cc>
   1e29c:	ldr	r0, [fp, #-16]
   1e2a0:	movw	r1, #0
   1e2a4:	udiv	r0, r1, r0
   1e2a8:	ldr	r1, [fp, #-12]
   1e2ac:	cmp	r0, r1
   1e2b0:	bcc	1e354 <__assert_fail@plt+0xd2b4>
   1e2b4:	b	1e36c <__assert_fail@plt+0xd2cc>
   1e2b8:	ldr	r0, [fp, #-16]
   1e2bc:	cmp	r0, #0
   1e2c0:	bne	1e2c8 <__assert_fail@plt+0xd228>
   1e2c4:	b	1e36c <__assert_fail@plt+0xd2cc>
   1e2c8:	ldr	r0, [fp, #-12]
   1e2cc:	cmp	r0, #0
   1e2d0:	bcs	1e33c <__assert_fail@plt+0xd29c>
   1e2d4:	b	1e2dc <__assert_fail@plt+0xd23c>
   1e2d8:	b	1e2e0 <__assert_fail@plt+0xd240>
   1e2dc:	b	1e320 <__assert_fail@plt+0xd280>
   1e2e0:	ldr	r0, [fp, #-12]
   1e2e4:	cmn	r0, #1
   1e2e8:	bne	1e320 <__assert_fail@plt+0xd280>
   1e2ec:	b	1e308 <__assert_fail@plt+0xd268>
   1e2f0:	ldr	r0, [fp, #-16]
   1e2f4:	add	r0, r0, #0
   1e2f8:	movw	r1, #0
   1e2fc:	cmp	r1, r0
   1e300:	bcc	1e354 <__assert_fail@plt+0xd2b4>
   1e304:	b	1e36c <__assert_fail@plt+0xd2cc>
   1e308:	ldr	r0, [fp, #-16]
   1e30c:	sub	r0, r0, #1
   1e310:	mvn	r1, #0
   1e314:	cmp	r1, r0
   1e318:	bcc	1e354 <__assert_fail@plt+0xd2b4>
   1e31c:	b	1e36c <__assert_fail@plt+0xd2cc>
   1e320:	ldr	r0, [fp, #-12]
   1e324:	movw	r1, #0
   1e328:	udiv	r0, r1, r0
   1e32c:	ldr	r1, [fp, #-16]
   1e330:	cmp	r0, r1
   1e334:	bcc	1e354 <__assert_fail@plt+0xd2b4>
   1e338:	b	1e36c <__assert_fail@plt+0xd2cc>
   1e33c:	ldr	r0, [fp, #-16]
   1e340:	movw	r1, #65535	; 0xffff
   1e344:	udiv	r0, r1, r0
   1e348:	ldr	r1, [fp, #-12]
   1e34c:	cmp	r0, r1
   1e350:	bcs	1e36c <__assert_fail@plt+0xd2cc>
   1e354:	ldr	r0, [fp, #-12]
   1e358:	ldr	r1, [fp, #-16]
   1e35c:	mul	r0, r0, r1
   1e360:	uxth	r0, r0
   1e364:	str	r0, [fp, #-20]	; 0xffffffec
   1e368:	b	1eefc <__assert_fail@plt+0xde5c>
   1e36c:	ldr	r0, [fp, #-12]
   1e370:	ldr	r1, [fp, #-16]
   1e374:	mul	r0, r0, r1
   1e378:	uxth	r0, r0
   1e37c:	str	r0, [fp, #-20]	; 0xffffffec
   1e380:	b	1ef14 <__assert_fail@plt+0xde74>
   1e384:	b	1e388 <__assert_fail@plt+0xd2e8>
   1e388:	b	1e54c <__assert_fail@plt+0xd4ac>
   1e38c:	ldr	r0, [fp, #-16]
   1e390:	cmp	r0, #0
   1e394:	bcs	1e494 <__assert_fail@plt+0xd3f4>
   1e398:	ldr	r0, [fp, #-12]
   1e39c:	cmp	r0, #0
   1e3a0:	bcs	1e428 <__assert_fail@plt+0xd388>
   1e3a4:	b	1e3c4 <__assert_fail@plt+0xd324>
   1e3a8:	ldr	r0, [pc, #2944]	; 1ef30 <__assert_fail@plt+0xde90>
   1e3ac:	ldr	r1, [fp, #-12]
   1e3b0:	ldr	r2, [fp, #-16]
   1e3b4:	udiv	r0, r0, r2
   1e3b8:	cmp	r1, r0
   1e3bc:	bcc	1e524 <__assert_fail@plt+0xd484>
   1e3c0:	b	1e538 <__assert_fail@plt+0xd498>
   1e3c4:	b	1e3d8 <__assert_fail@plt+0xd338>
   1e3c8:	ldr	r0, [fp, #-16]
   1e3cc:	cmp	r0, #1
   1e3d0:	bcc	1e3e8 <__assert_fail@plt+0xd348>
   1e3d4:	b	1e3f4 <__assert_fail@plt+0xd354>
   1e3d8:	ldr	r0, [fp, #-16]
   1e3dc:	movw	r1, #0
   1e3e0:	cmp	r1, r0
   1e3e4:	bcs	1e3f4 <__assert_fail@plt+0xd354>
   1e3e8:	movw	r0, #0
   1e3ec:	str	r0, [fp, #-40]	; 0xffffffd8
   1e3f0:	b	1e40c <__assert_fail@plt+0xd36c>
   1e3f4:	ldr	r0, [pc, #2868]	; 1ef30 <__assert_fail@plt+0xde90>
   1e3f8:	ldr	r1, [fp, #-16]
   1e3fc:	movw	r2, #0
   1e400:	sub	r1, r2, r1
   1e404:	udiv	r0, r0, r1
   1e408:	str	r0, [fp, #-40]	; 0xffffffd8
   1e40c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1e410:	ldr	r1, [fp, #-12]
   1e414:	mvn	r2, #0
   1e418:	sub	r1, r2, r1
   1e41c:	cmp	r0, r1
   1e420:	bls	1e524 <__assert_fail@plt+0xd484>
   1e424:	b	1e538 <__assert_fail@plt+0xd498>
   1e428:	ldr	r0, [fp, #-16]
   1e42c:	cmn	r0, #1
   1e430:	bne	1e478 <__assert_fail@plt+0xd3d8>
   1e434:	b	1e450 <__assert_fail@plt+0xd3b0>
   1e438:	ldr	r0, [fp, #-12]
   1e43c:	add	r0, r0, #-2147483648	; 0x80000000
   1e440:	movw	r1, #0
   1e444:	cmp	r1, r0
   1e448:	bcc	1e524 <__assert_fail@plt+0xd484>
   1e44c:	b	1e538 <__assert_fail@plt+0xd498>
   1e450:	ldr	r0, [fp, #-12]
   1e454:	movw	r1, #0
   1e458:	cmp	r1, r0
   1e45c:	bcs	1e538 <__assert_fail@plt+0xd498>
   1e460:	ldr	r0, [pc, #2760]	; 1ef30 <__assert_fail@plt+0xde90>
   1e464:	ldr	r1, [fp, #-12]
   1e468:	sub	r1, r1, #1
   1e46c:	cmp	r0, r1
   1e470:	bcc	1e524 <__assert_fail@plt+0xd484>
   1e474:	b	1e538 <__assert_fail@plt+0xd498>
   1e478:	ldr	r0, [pc, #2740]	; 1ef34 <__assert_fail@plt+0xde94>
   1e47c:	ldr	r1, [fp, #-16]
   1e480:	udiv	r0, r0, r1
   1e484:	ldr	r1, [fp, #-12]
   1e488:	cmp	r0, r1
   1e48c:	bcc	1e524 <__assert_fail@plt+0xd484>
   1e490:	b	1e538 <__assert_fail@plt+0xd498>
   1e494:	ldr	r0, [fp, #-16]
   1e498:	cmp	r0, #0
   1e49c:	bne	1e4a4 <__assert_fail@plt+0xd404>
   1e4a0:	b	1e538 <__assert_fail@plt+0xd498>
   1e4a4:	ldr	r0, [fp, #-12]
   1e4a8:	cmp	r0, #0
   1e4ac:	bcs	1e50c <__assert_fail@plt+0xd46c>
   1e4b0:	ldr	r0, [fp, #-12]
   1e4b4:	cmn	r0, #1
   1e4b8:	bne	1e4f0 <__assert_fail@plt+0xd450>
   1e4bc:	b	1e4d8 <__assert_fail@plt+0xd438>
   1e4c0:	ldr	r0, [fp, #-16]
   1e4c4:	add	r0, r0, #-2147483648	; 0x80000000
   1e4c8:	movw	r1, #0
   1e4cc:	cmp	r1, r0
   1e4d0:	bcc	1e524 <__assert_fail@plt+0xd484>
   1e4d4:	b	1e538 <__assert_fail@plt+0xd498>
   1e4d8:	ldr	r0, [pc, #2640]	; 1ef30 <__assert_fail@plt+0xde90>
   1e4dc:	ldr	r1, [fp, #-16]
   1e4e0:	sub	r1, r1, #1
   1e4e4:	cmp	r0, r1
   1e4e8:	bcc	1e524 <__assert_fail@plt+0xd484>
   1e4ec:	b	1e538 <__assert_fail@plt+0xd498>
   1e4f0:	ldr	r0, [pc, #2620]	; 1ef34 <__assert_fail@plt+0xde94>
   1e4f4:	ldr	r1, [fp, #-12]
   1e4f8:	udiv	r0, r0, r1
   1e4fc:	ldr	r1, [fp, #-16]
   1e500:	cmp	r0, r1
   1e504:	bcc	1e524 <__assert_fail@plt+0xd484>
   1e508:	b	1e538 <__assert_fail@plt+0xd498>
   1e50c:	ldr	r0, [pc, #2588]	; 1ef30 <__assert_fail@plt+0xde90>
   1e510:	ldr	r1, [fp, #-16]
   1e514:	udiv	r0, r0, r1
   1e518:	ldr	r1, [fp, #-12]
   1e51c:	cmp	r0, r1
   1e520:	bcs	1e538 <__assert_fail@plt+0xd498>
   1e524:	ldr	r0, [fp, #-12]
   1e528:	ldr	r1, [fp, #-16]
   1e52c:	mul	r0, r0, r1
   1e530:	str	r0, [fp, #-20]	; 0xffffffec
   1e534:	b	1eefc <__assert_fail@plt+0xde5c>
   1e538:	ldr	r0, [fp, #-12]
   1e53c:	ldr	r1, [fp, #-16]
   1e540:	mul	r0, r0, r1
   1e544:	str	r0, [fp, #-20]	; 0xffffffec
   1e548:	b	1ef14 <__assert_fail@plt+0xde74>
   1e54c:	ldr	r0, [fp, #-16]
   1e550:	cmp	r0, #0
   1e554:	bcs	1e660 <__assert_fail@plt+0xd5c0>
   1e558:	ldr	r0, [fp, #-12]
   1e55c:	cmp	r0, #0
   1e560:	bcs	1e5e8 <__assert_fail@plt+0xd548>
   1e564:	b	1e584 <__assert_fail@plt+0xd4e4>
   1e568:	ldr	r0, [fp, #-12]
   1e56c:	ldr	r1, [fp, #-16]
   1e570:	mvn	r2, #0
   1e574:	udiv	r1, r2, r1
   1e578:	cmp	r0, r1
   1e57c:	bcc	1e6fc <__assert_fail@plt+0xd65c>
   1e580:	b	1e710 <__assert_fail@plt+0xd670>
   1e584:	b	1e598 <__assert_fail@plt+0xd4f8>
   1e588:	ldr	r0, [fp, #-16]
   1e58c:	cmp	r0, #1
   1e590:	bcc	1e5a8 <__assert_fail@plt+0xd508>
   1e594:	b	1e5b4 <__assert_fail@plt+0xd514>
   1e598:	ldr	r0, [fp, #-16]
   1e59c:	movw	r1, #0
   1e5a0:	cmp	r1, r0
   1e5a4:	bcs	1e5b4 <__assert_fail@plt+0xd514>
   1e5a8:	movw	r0, #1
   1e5ac:	str	r0, [fp, #-44]	; 0xffffffd4
   1e5b0:	b	1e5cc <__assert_fail@plt+0xd52c>
   1e5b4:	ldr	r0, [fp, #-16]
   1e5b8:	movw	r1, #0
   1e5bc:	sub	r0, r1, r0
   1e5c0:	mvn	r1, #0
   1e5c4:	udiv	r0, r1, r0
   1e5c8:	str	r0, [fp, #-44]	; 0xffffffd4
   1e5cc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1e5d0:	ldr	r1, [fp, #-12]
   1e5d4:	mvn	r2, #0
   1e5d8:	sub	r1, r2, r1
   1e5dc:	cmp	r0, r1
   1e5e0:	bls	1e6fc <__assert_fail@plt+0xd65c>
   1e5e4:	b	1e710 <__assert_fail@plt+0xd670>
   1e5e8:	b	1e5f0 <__assert_fail@plt+0xd550>
   1e5ec:	b	1e5f4 <__assert_fail@plt+0xd554>
   1e5f0:	b	1e644 <__assert_fail@plt+0xd5a4>
   1e5f4:	ldr	r0, [fp, #-16]
   1e5f8:	cmn	r0, #1
   1e5fc:	bne	1e644 <__assert_fail@plt+0xd5a4>
   1e600:	b	1e61c <__assert_fail@plt+0xd57c>
   1e604:	ldr	r0, [fp, #-12]
   1e608:	add	r0, r0, #0
   1e60c:	movw	r1, #0
   1e610:	cmp	r1, r0
   1e614:	bcc	1e6fc <__assert_fail@plt+0xd65c>
   1e618:	b	1e710 <__assert_fail@plt+0xd670>
   1e61c:	ldr	r0, [fp, #-12]
   1e620:	movw	r1, #0
   1e624:	cmp	r1, r0
   1e628:	bcs	1e710 <__assert_fail@plt+0xd670>
   1e62c:	ldr	r0, [fp, #-12]
   1e630:	sub	r0, r0, #1
   1e634:	mvn	r1, #0
   1e638:	cmp	r1, r0
   1e63c:	bcc	1e6fc <__assert_fail@plt+0xd65c>
   1e640:	b	1e710 <__assert_fail@plt+0xd670>
   1e644:	ldr	r0, [fp, #-16]
   1e648:	movw	r1, #0
   1e64c:	udiv	r0, r1, r0
   1e650:	ldr	r1, [fp, #-12]
   1e654:	cmp	r0, r1
   1e658:	bcc	1e6fc <__assert_fail@plt+0xd65c>
   1e65c:	b	1e710 <__assert_fail@plt+0xd670>
   1e660:	ldr	r0, [fp, #-16]
   1e664:	cmp	r0, #0
   1e668:	bne	1e670 <__assert_fail@plt+0xd5d0>
   1e66c:	b	1e710 <__assert_fail@plt+0xd670>
   1e670:	ldr	r0, [fp, #-12]
   1e674:	cmp	r0, #0
   1e678:	bcs	1e6e4 <__assert_fail@plt+0xd644>
   1e67c:	b	1e684 <__assert_fail@plt+0xd5e4>
   1e680:	b	1e688 <__assert_fail@plt+0xd5e8>
   1e684:	b	1e6c8 <__assert_fail@plt+0xd628>
   1e688:	ldr	r0, [fp, #-12]
   1e68c:	cmn	r0, #1
   1e690:	bne	1e6c8 <__assert_fail@plt+0xd628>
   1e694:	b	1e6b0 <__assert_fail@plt+0xd610>
   1e698:	ldr	r0, [fp, #-16]
   1e69c:	add	r0, r0, #0
   1e6a0:	movw	r1, #0
   1e6a4:	cmp	r1, r0
   1e6a8:	bcc	1e6fc <__assert_fail@plt+0xd65c>
   1e6ac:	b	1e710 <__assert_fail@plt+0xd670>
   1e6b0:	ldr	r0, [fp, #-16]
   1e6b4:	sub	r0, r0, #1
   1e6b8:	mvn	r1, #0
   1e6bc:	cmp	r1, r0
   1e6c0:	bcc	1e6fc <__assert_fail@plt+0xd65c>
   1e6c4:	b	1e710 <__assert_fail@plt+0xd670>
   1e6c8:	ldr	r0, [fp, #-12]
   1e6cc:	movw	r1, #0
   1e6d0:	udiv	r0, r1, r0
   1e6d4:	ldr	r1, [fp, #-16]
   1e6d8:	cmp	r0, r1
   1e6dc:	bcc	1e6fc <__assert_fail@plt+0xd65c>
   1e6e0:	b	1e710 <__assert_fail@plt+0xd670>
   1e6e4:	ldr	r0, [fp, #-16]
   1e6e8:	mvn	r1, #0
   1e6ec:	udiv	r0, r1, r0
   1e6f0:	ldr	r1, [fp, #-12]
   1e6f4:	cmp	r0, r1
   1e6f8:	bcs	1e710 <__assert_fail@plt+0xd670>
   1e6fc:	ldr	r0, [fp, #-12]
   1e700:	ldr	r1, [fp, #-16]
   1e704:	mul	r0, r0, r1
   1e708:	str	r0, [fp, #-20]	; 0xffffffec
   1e70c:	b	1eefc <__assert_fail@plt+0xde5c>
   1e710:	ldr	r0, [fp, #-12]
   1e714:	ldr	r1, [fp, #-16]
   1e718:	mul	r0, r0, r1
   1e71c:	str	r0, [fp, #-20]	; 0xffffffec
   1e720:	b	1ef14 <__assert_fail@plt+0xde74>
   1e724:	b	1e728 <__assert_fail@plt+0xd688>
   1e728:	b	1e8ec <__assert_fail@plt+0xd84c>
   1e72c:	ldr	r0, [fp, #-16]
   1e730:	cmp	r0, #0
   1e734:	bcs	1e834 <__assert_fail@plt+0xd794>
   1e738:	ldr	r0, [fp, #-12]
   1e73c:	cmp	r0, #0
   1e740:	bcs	1e7c8 <__assert_fail@plt+0xd728>
   1e744:	b	1e764 <__assert_fail@plt+0xd6c4>
   1e748:	ldr	r0, [pc, #2016]	; 1ef30 <__assert_fail@plt+0xde90>
   1e74c:	ldr	r1, [fp, #-12]
   1e750:	ldr	r2, [fp, #-16]
   1e754:	udiv	r0, r0, r2
   1e758:	cmp	r1, r0
   1e75c:	bcc	1e8c4 <__assert_fail@plt+0xd824>
   1e760:	b	1e8d8 <__assert_fail@plt+0xd838>
   1e764:	b	1e778 <__assert_fail@plt+0xd6d8>
   1e768:	ldr	r0, [fp, #-16]
   1e76c:	cmp	r0, #1
   1e770:	bcc	1e788 <__assert_fail@plt+0xd6e8>
   1e774:	b	1e794 <__assert_fail@plt+0xd6f4>
   1e778:	ldr	r0, [fp, #-16]
   1e77c:	movw	r1, #0
   1e780:	cmp	r1, r0
   1e784:	bcs	1e794 <__assert_fail@plt+0xd6f4>
   1e788:	movw	r0, #0
   1e78c:	str	r0, [sp, #48]	; 0x30
   1e790:	b	1e7ac <__assert_fail@plt+0xd70c>
   1e794:	ldr	r0, [pc, #1940]	; 1ef30 <__assert_fail@plt+0xde90>
   1e798:	ldr	r1, [fp, #-16]
   1e79c:	movw	r2, #0
   1e7a0:	sub	r1, r2, r1
   1e7a4:	udiv	r0, r0, r1
   1e7a8:	str	r0, [sp, #48]	; 0x30
   1e7ac:	ldr	r0, [sp, #48]	; 0x30
   1e7b0:	ldr	r1, [fp, #-12]
   1e7b4:	mvn	r2, #0
   1e7b8:	sub	r1, r2, r1
   1e7bc:	cmp	r0, r1
   1e7c0:	bls	1e8c4 <__assert_fail@plt+0xd824>
   1e7c4:	b	1e8d8 <__assert_fail@plt+0xd838>
   1e7c8:	ldr	r0, [fp, #-16]
   1e7cc:	cmn	r0, #1
   1e7d0:	bne	1e818 <__assert_fail@plt+0xd778>
   1e7d4:	b	1e7f0 <__assert_fail@plt+0xd750>
   1e7d8:	ldr	r0, [fp, #-12]
   1e7dc:	add	r0, r0, #-2147483648	; 0x80000000
   1e7e0:	movw	r1, #0
   1e7e4:	cmp	r1, r0
   1e7e8:	bcc	1e8c4 <__assert_fail@plt+0xd824>
   1e7ec:	b	1e8d8 <__assert_fail@plt+0xd838>
   1e7f0:	ldr	r0, [fp, #-12]
   1e7f4:	movw	r1, #0
   1e7f8:	cmp	r1, r0
   1e7fc:	bcs	1e8d8 <__assert_fail@plt+0xd838>
   1e800:	ldr	r0, [pc, #1832]	; 1ef30 <__assert_fail@plt+0xde90>
   1e804:	ldr	r1, [fp, #-12]
   1e808:	sub	r1, r1, #1
   1e80c:	cmp	r0, r1
   1e810:	bcc	1e8c4 <__assert_fail@plt+0xd824>
   1e814:	b	1e8d8 <__assert_fail@plt+0xd838>
   1e818:	ldr	r0, [pc, #1812]	; 1ef34 <__assert_fail@plt+0xde94>
   1e81c:	ldr	r1, [fp, #-16]
   1e820:	udiv	r0, r0, r1
   1e824:	ldr	r1, [fp, #-12]
   1e828:	cmp	r0, r1
   1e82c:	bcc	1e8c4 <__assert_fail@plt+0xd824>
   1e830:	b	1e8d8 <__assert_fail@plt+0xd838>
   1e834:	ldr	r0, [fp, #-16]
   1e838:	cmp	r0, #0
   1e83c:	bne	1e844 <__assert_fail@plt+0xd7a4>
   1e840:	b	1e8d8 <__assert_fail@plt+0xd838>
   1e844:	ldr	r0, [fp, #-12]
   1e848:	cmp	r0, #0
   1e84c:	bcs	1e8ac <__assert_fail@plt+0xd80c>
   1e850:	ldr	r0, [fp, #-12]
   1e854:	cmn	r0, #1
   1e858:	bne	1e890 <__assert_fail@plt+0xd7f0>
   1e85c:	b	1e878 <__assert_fail@plt+0xd7d8>
   1e860:	ldr	r0, [fp, #-16]
   1e864:	add	r0, r0, #-2147483648	; 0x80000000
   1e868:	movw	r1, #0
   1e86c:	cmp	r1, r0
   1e870:	bcc	1e8c4 <__assert_fail@plt+0xd824>
   1e874:	b	1e8d8 <__assert_fail@plt+0xd838>
   1e878:	ldr	r0, [pc, #1712]	; 1ef30 <__assert_fail@plt+0xde90>
   1e87c:	ldr	r1, [fp, #-16]
   1e880:	sub	r1, r1, #1
   1e884:	cmp	r0, r1
   1e888:	bcc	1e8c4 <__assert_fail@plt+0xd824>
   1e88c:	b	1e8d8 <__assert_fail@plt+0xd838>
   1e890:	ldr	r0, [pc, #1692]	; 1ef34 <__assert_fail@plt+0xde94>
   1e894:	ldr	r1, [fp, #-12]
   1e898:	udiv	r0, r0, r1
   1e89c:	ldr	r1, [fp, #-16]
   1e8a0:	cmp	r0, r1
   1e8a4:	bcc	1e8c4 <__assert_fail@plt+0xd824>
   1e8a8:	b	1e8d8 <__assert_fail@plt+0xd838>
   1e8ac:	ldr	r0, [pc, #1660]	; 1ef30 <__assert_fail@plt+0xde90>
   1e8b0:	ldr	r1, [fp, #-16]
   1e8b4:	udiv	r0, r0, r1
   1e8b8:	ldr	r1, [fp, #-12]
   1e8bc:	cmp	r0, r1
   1e8c0:	bcs	1e8d8 <__assert_fail@plt+0xd838>
   1e8c4:	ldr	r0, [fp, #-12]
   1e8c8:	ldr	r1, [fp, #-16]
   1e8cc:	mul	r0, r0, r1
   1e8d0:	str	r0, [fp, #-20]	; 0xffffffec
   1e8d4:	b	1eefc <__assert_fail@plt+0xde5c>
   1e8d8:	ldr	r0, [fp, #-12]
   1e8dc:	ldr	r1, [fp, #-16]
   1e8e0:	mul	r0, r0, r1
   1e8e4:	str	r0, [fp, #-20]	; 0xffffffec
   1e8e8:	b	1ef14 <__assert_fail@plt+0xde74>
   1e8ec:	ldr	r0, [fp, #-16]
   1e8f0:	cmp	r0, #0
   1e8f4:	bcs	1ea00 <__assert_fail@plt+0xd960>
   1e8f8:	ldr	r0, [fp, #-12]
   1e8fc:	cmp	r0, #0
   1e900:	bcs	1e988 <__assert_fail@plt+0xd8e8>
   1e904:	b	1e924 <__assert_fail@plt+0xd884>
   1e908:	ldr	r0, [fp, #-12]
   1e90c:	ldr	r1, [fp, #-16]
   1e910:	mvn	r2, #0
   1e914:	udiv	r1, r2, r1
   1e918:	cmp	r0, r1
   1e91c:	bcc	1ea9c <__assert_fail@plt+0xd9fc>
   1e920:	b	1eab0 <__assert_fail@plt+0xda10>
   1e924:	b	1e938 <__assert_fail@plt+0xd898>
   1e928:	ldr	r0, [fp, #-16]
   1e92c:	cmp	r0, #1
   1e930:	bcc	1e948 <__assert_fail@plt+0xd8a8>
   1e934:	b	1e954 <__assert_fail@plt+0xd8b4>
   1e938:	ldr	r0, [fp, #-16]
   1e93c:	movw	r1, #0
   1e940:	cmp	r1, r0
   1e944:	bcs	1e954 <__assert_fail@plt+0xd8b4>
   1e948:	movw	r0, #1
   1e94c:	str	r0, [sp, #44]	; 0x2c
   1e950:	b	1e96c <__assert_fail@plt+0xd8cc>
   1e954:	ldr	r0, [fp, #-16]
   1e958:	movw	r1, #0
   1e95c:	sub	r0, r1, r0
   1e960:	mvn	r1, #0
   1e964:	udiv	r0, r1, r0
   1e968:	str	r0, [sp, #44]	; 0x2c
   1e96c:	ldr	r0, [sp, #44]	; 0x2c
   1e970:	ldr	r1, [fp, #-12]
   1e974:	mvn	r2, #0
   1e978:	sub	r1, r2, r1
   1e97c:	cmp	r0, r1
   1e980:	bls	1ea9c <__assert_fail@plt+0xd9fc>
   1e984:	b	1eab0 <__assert_fail@plt+0xda10>
   1e988:	b	1e990 <__assert_fail@plt+0xd8f0>
   1e98c:	b	1e994 <__assert_fail@plt+0xd8f4>
   1e990:	b	1e9e4 <__assert_fail@plt+0xd944>
   1e994:	ldr	r0, [fp, #-16]
   1e998:	cmn	r0, #1
   1e99c:	bne	1e9e4 <__assert_fail@plt+0xd944>
   1e9a0:	b	1e9bc <__assert_fail@plt+0xd91c>
   1e9a4:	ldr	r0, [fp, #-12]
   1e9a8:	add	r0, r0, #0
   1e9ac:	movw	r1, #0
   1e9b0:	cmp	r1, r0
   1e9b4:	bcc	1ea9c <__assert_fail@plt+0xd9fc>
   1e9b8:	b	1eab0 <__assert_fail@plt+0xda10>
   1e9bc:	ldr	r0, [fp, #-12]
   1e9c0:	movw	r1, #0
   1e9c4:	cmp	r1, r0
   1e9c8:	bcs	1eab0 <__assert_fail@plt+0xda10>
   1e9cc:	ldr	r0, [fp, #-12]
   1e9d0:	sub	r0, r0, #1
   1e9d4:	mvn	r1, #0
   1e9d8:	cmp	r1, r0
   1e9dc:	bcc	1ea9c <__assert_fail@plt+0xd9fc>
   1e9e0:	b	1eab0 <__assert_fail@plt+0xda10>
   1e9e4:	ldr	r0, [fp, #-16]
   1e9e8:	movw	r1, #0
   1e9ec:	udiv	r0, r1, r0
   1e9f0:	ldr	r1, [fp, #-12]
   1e9f4:	cmp	r0, r1
   1e9f8:	bcc	1ea9c <__assert_fail@plt+0xd9fc>
   1e9fc:	b	1eab0 <__assert_fail@plt+0xda10>
   1ea00:	ldr	r0, [fp, #-16]
   1ea04:	cmp	r0, #0
   1ea08:	bne	1ea10 <__assert_fail@plt+0xd970>
   1ea0c:	b	1eab0 <__assert_fail@plt+0xda10>
   1ea10:	ldr	r0, [fp, #-12]
   1ea14:	cmp	r0, #0
   1ea18:	bcs	1ea84 <__assert_fail@plt+0xd9e4>
   1ea1c:	b	1ea24 <__assert_fail@plt+0xd984>
   1ea20:	b	1ea28 <__assert_fail@plt+0xd988>
   1ea24:	b	1ea68 <__assert_fail@plt+0xd9c8>
   1ea28:	ldr	r0, [fp, #-12]
   1ea2c:	cmn	r0, #1
   1ea30:	bne	1ea68 <__assert_fail@plt+0xd9c8>
   1ea34:	b	1ea50 <__assert_fail@plt+0xd9b0>
   1ea38:	ldr	r0, [fp, #-16]
   1ea3c:	add	r0, r0, #0
   1ea40:	movw	r1, #0
   1ea44:	cmp	r1, r0
   1ea48:	bcc	1ea9c <__assert_fail@plt+0xd9fc>
   1ea4c:	b	1eab0 <__assert_fail@plt+0xda10>
   1ea50:	ldr	r0, [fp, #-16]
   1ea54:	sub	r0, r0, #1
   1ea58:	mvn	r1, #0
   1ea5c:	cmp	r1, r0
   1ea60:	bcc	1ea9c <__assert_fail@plt+0xd9fc>
   1ea64:	b	1eab0 <__assert_fail@plt+0xda10>
   1ea68:	ldr	r0, [fp, #-12]
   1ea6c:	movw	r1, #0
   1ea70:	udiv	r0, r1, r0
   1ea74:	ldr	r1, [fp, #-16]
   1ea78:	cmp	r0, r1
   1ea7c:	bcc	1ea9c <__assert_fail@plt+0xd9fc>
   1ea80:	b	1eab0 <__assert_fail@plt+0xda10>
   1ea84:	ldr	r0, [fp, #-16]
   1ea88:	mvn	r1, #0
   1ea8c:	udiv	r0, r1, r0
   1ea90:	ldr	r1, [fp, #-12]
   1ea94:	cmp	r0, r1
   1ea98:	bcs	1eab0 <__assert_fail@plt+0xda10>
   1ea9c:	ldr	r0, [fp, #-12]
   1eaa0:	ldr	r1, [fp, #-16]
   1eaa4:	mul	r0, r0, r1
   1eaa8:	str	r0, [fp, #-20]	; 0xffffffec
   1eaac:	b	1eefc <__assert_fail@plt+0xde5c>
   1eab0:	ldr	r0, [fp, #-12]
   1eab4:	ldr	r1, [fp, #-16]
   1eab8:	mul	r0, r0, r1
   1eabc:	str	r0, [fp, #-20]	; 0xffffffec
   1eac0:	b	1ef14 <__assert_fail@plt+0xde74>
   1eac4:	b	1ece0 <__assert_fail@plt+0xdc40>
   1eac8:	ldr	r0, [fp, #-16]
   1eacc:	cmp	r0, #0
   1ead0:	bcs	1ec10 <__assert_fail@plt+0xdb70>
   1ead4:	ldr	r0, [fp, #-12]
   1ead8:	cmp	r0, #0
   1eadc:	bcs	1eb9c <__assert_fail@plt+0xdafc>
   1eae0:	b	1eae4 <__assert_fail@plt+0xda44>
   1eae4:	ldr	r0, [fp, #-12]
   1eae8:	ldr	r2, [fp, #-16]
   1eaec:	mvn	r1, #0
   1eaf0:	mvn	r3, #-2147483648	; 0x80000000
   1eaf4:	mov	ip, #0
   1eaf8:	str	r0, [sp, #40]	; 0x28
   1eafc:	mov	r0, r1
   1eb00:	mov	r1, r3
   1eb04:	mov	r3, ip
   1eb08:	bl	1f848 <__assert_fail@plt+0xe7a8>
   1eb0c:	ldr	r2, [sp, #40]	; 0x28
   1eb10:	subs	r0, r2, r0
   1eb14:	rscs	r1, r1, #0
   1eb18:	blt	1ecb8 <__assert_fail@plt+0xdc18>
   1eb1c:	b	1eccc <__assert_fail@plt+0xdc2c>
   1eb20:	b	1eb34 <__assert_fail@plt+0xda94>
   1eb24:	ldr	r0, [fp, #-16]
   1eb28:	cmp	r0, #1
   1eb2c:	bcc	1eb44 <__assert_fail@plt+0xdaa4>
   1eb30:	b	1eb58 <__assert_fail@plt+0xdab8>
   1eb34:	ldr	r0, [fp, #-16]
   1eb38:	movw	r1, #0
   1eb3c:	cmp	r1, r0
   1eb40:	bcs	1eb58 <__assert_fail@plt+0xdab8>
   1eb44:	mov	r0, #0
   1eb48:	mvn	r1, #0
   1eb4c:	str	r1, [sp, #36]	; 0x24
   1eb50:	str	r0, [sp, #32]
   1eb54:	b	1eb7c <__assert_fail@plt+0xdadc>
   1eb58:	ldr	r0, [fp, #-16]
   1eb5c:	rsb	r2, r0, #0
   1eb60:	mvn	r0, #0
   1eb64:	mvn	r1, #-2147483648	; 0x80000000
   1eb68:	mov	r3, #0
   1eb6c:	bl	1f848 <__assert_fail@plt+0xe7a8>
   1eb70:	str	r0, [sp, #36]	; 0x24
   1eb74:	str	r1, [sp, #32]
   1eb78:	b	1eb7c <__assert_fail@plt+0xdadc>
   1eb7c:	ldr	r0, [sp, #32]
   1eb80:	ldr	r1, [sp, #36]	; 0x24
   1eb84:	ldr	r2, [fp, #-12]
   1eb88:	mvn	r2, r2
   1eb8c:	subs	r1, r2, r1
   1eb90:	rscs	r0, r0, #0
   1eb94:	bge	1ecb8 <__assert_fail@plt+0xdc18>
   1eb98:	b	1eccc <__assert_fail@plt+0xdc2c>
   1eb9c:	ldr	r0, [fp, #-16]
   1eba0:	cmn	r0, #1
   1eba4:	bne	1ebe4 <__assert_fail@plt+0xdb44>
   1eba8:	b	1ebc4 <__assert_fail@plt+0xdb24>
   1ebac:	ldr	r0, [fp, #-12]
   1ebb0:	rsbs	r0, r0, #0
   1ebb4:	mov	r1, #0
   1ebb8:	sbcs	r1, r1, #-2147483648	; 0x80000000
   1ebbc:	blt	1ecb8 <__assert_fail@plt+0xdc18>
   1ebc0:	b	1eccc <__assert_fail@plt+0xdc2c>
   1ebc4:	ldr	r0, [fp, #-12]
   1ebc8:	movw	r1, #0
   1ebcc:	cmp	r1, r0
   1ebd0:	bcs	1eccc <__assert_fail@plt+0xdc2c>
   1ebd4:	mov	r0, #0
   1ebd8:	cmp	r0, #0
   1ebdc:	bne	1ecb8 <__assert_fail@plt+0xdc18>
   1ebe0:	b	1eccc <__assert_fail@plt+0xdc2c>
   1ebe4:	ldr	r2, [fp, #-16]
   1ebe8:	mov	r1, #-2147483648	; 0x80000000
   1ebec:	mov	r0, #0
   1ebf0:	str	r0, [sp, #28]
   1ebf4:	ldr	r3, [sp, #28]
   1ebf8:	bl	1f774 <__assert_fail@plt+0xe6d4>
   1ebfc:	ldr	r2, [fp, #-12]
   1ec00:	subs	r0, r0, r2
   1ec04:	sbcs	r1, r1, #0
   1ec08:	blt	1ecb8 <__assert_fail@plt+0xdc18>
   1ec0c:	b	1eccc <__assert_fail@plt+0xdc2c>
   1ec10:	ldr	r0, [fp, #-16]
   1ec14:	cmp	r0, #0
   1ec18:	bne	1ec20 <__assert_fail@plt+0xdb80>
   1ec1c:	b	1eccc <__assert_fail@plt+0xdc2c>
   1ec20:	ldr	r0, [fp, #-12]
   1ec24:	cmp	r0, #0
   1ec28:	bcs	1ec90 <__assert_fail@plt+0xdbf0>
   1ec2c:	ldr	r0, [fp, #-12]
   1ec30:	cmn	r0, #1
   1ec34:	bne	1ec64 <__assert_fail@plt+0xdbc4>
   1ec38:	b	1ec54 <__assert_fail@plt+0xdbb4>
   1ec3c:	ldr	r0, [fp, #-16]
   1ec40:	rsbs	r0, r0, #0
   1ec44:	mov	r1, #0
   1ec48:	sbcs	r1, r1, #-2147483648	; 0x80000000
   1ec4c:	blt	1ecb8 <__assert_fail@plt+0xdc18>
   1ec50:	b	1eccc <__assert_fail@plt+0xdc2c>
   1ec54:	mov	r0, #0
   1ec58:	cmp	r0, #0
   1ec5c:	bne	1ecb8 <__assert_fail@plt+0xdc18>
   1ec60:	b	1eccc <__assert_fail@plt+0xdc2c>
   1ec64:	ldr	r2, [fp, #-12]
   1ec68:	mov	r1, #-2147483648	; 0x80000000
   1ec6c:	mov	r0, #0
   1ec70:	str	r0, [sp, #24]
   1ec74:	ldr	r3, [sp, #24]
   1ec78:	bl	1f774 <__assert_fail@plt+0xe6d4>
   1ec7c:	ldr	r2, [fp, #-16]
   1ec80:	subs	r0, r0, r2
   1ec84:	sbcs	r1, r1, #0
   1ec88:	blt	1ecb8 <__assert_fail@plt+0xdc18>
   1ec8c:	b	1eccc <__assert_fail@plt+0xdc2c>
   1ec90:	ldr	r2, [fp, #-16]
   1ec94:	mvn	r0, #0
   1ec98:	mvn	r1, #-2147483648	; 0x80000000
   1ec9c:	mov	r3, #0
   1eca0:	bl	1f848 <__assert_fail@plt+0xe7a8>
   1eca4:	ldr	r2, [fp, #-12]
   1eca8:	subs	r0, r0, r2
   1ecac:	sbcs	r1, r1, #0
   1ecb0:	bge	1eccc <__assert_fail@plt+0xdc2c>
   1ecb4:	b	1ecb8 <__assert_fail@plt+0xdc18>
   1ecb8:	ldr	r0, [fp, #-12]
   1ecbc:	ldr	r1, [fp, #-16]
   1ecc0:	mul	r0, r0, r1
   1ecc4:	str	r0, [fp, #-20]	; 0xffffffec
   1ecc8:	b	1eefc <__assert_fail@plt+0xde5c>
   1eccc:	ldr	r0, [fp, #-12]
   1ecd0:	ldr	r1, [fp, #-16]
   1ecd4:	mul	r0, r0, r1
   1ecd8:	str	r0, [fp, #-20]	; 0xffffffec
   1ecdc:	b	1ef14 <__assert_fail@plt+0xde74>
   1ece0:	ldr	r0, [fp, #-16]
   1ece4:	cmp	r0, #0
   1ece8:	bcs	1ee24 <__assert_fail@plt+0xdd84>
   1ecec:	ldr	r0, [fp, #-12]
   1ecf0:	cmp	r0, #0
   1ecf4:	bcs	1edac <__assert_fail@plt+0xdd0c>
   1ecf8:	b	1ed2c <__assert_fail@plt+0xdc8c>
   1ecfc:	ldr	r0, [fp, #-12]
   1ed00:	ldr	r2, [fp, #-16]
   1ed04:	mvn	r1, #0
   1ed08:	mov	r3, #0
   1ed0c:	str	r0, [sp, #20]
   1ed10:	mov	r0, r1
   1ed14:	bl	1f848 <__assert_fail@plt+0xe7a8>
   1ed18:	ldr	r2, [sp, #20]
   1ed1c:	subs	r0, r2, r0
   1ed20:	rscs	r1, r1, #0
   1ed24:	bcc	1eed4 <__assert_fail@plt+0xde34>
   1ed28:	b	1eee8 <__assert_fail@plt+0xde48>
   1ed2c:	b	1ed40 <__assert_fail@plt+0xdca0>
   1ed30:	ldr	r0, [fp, #-16]
   1ed34:	cmp	r0, #1
   1ed38:	bcc	1ed50 <__assert_fail@plt+0xdcb0>
   1ed3c:	b	1ed64 <__assert_fail@plt+0xdcc4>
   1ed40:	ldr	r0, [fp, #-16]
   1ed44:	movw	r1, #0
   1ed48:	cmp	r1, r0
   1ed4c:	bcs	1ed64 <__assert_fail@plt+0xdcc4>
   1ed50:	mov	r0, #1
   1ed54:	mvn	r1, #0
   1ed58:	str	r1, [sp, #16]
   1ed5c:	str	r0, [sp, #12]
   1ed60:	b	1ed8c <__assert_fail@plt+0xdcec>
   1ed64:	ldr	r0, [fp, #-16]
   1ed68:	rsb	r2, r0, #0
   1ed6c:	mvn	r0, #0
   1ed70:	mov	r3, #0
   1ed74:	str	r0, [sp, #8]
   1ed78:	ldr	r1, [sp, #8]
   1ed7c:	bl	1f848 <__assert_fail@plt+0xe7a8>
   1ed80:	str	r0, [sp, #16]
   1ed84:	str	r1, [sp, #12]
   1ed88:	b	1ed8c <__assert_fail@plt+0xdcec>
   1ed8c:	ldr	r0, [sp, #12]
   1ed90:	ldr	r1, [sp, #16]
   1ed94:	ldr	r2, [fp, #-12]
   1ed98:	mvn	r2, r2
   1ed9c:	subs	r1, r2, r1
   1eda0:	rscs	r0, r0, #0
   1eda4:	bcs	1eed4 <__assert_fail@plt+0xde34>
   1eda8:	b	1eee8 <__assert_fail@plt+0xde48>
   1edac:	b	1edb4 <__assert_fail@plt+0xdd14>
   1edb0:	b	1edb8 <__assert_fail@plt+0xdd18>
   1edb4:	b	1ee08 <__assert_fail@plt+0xdd68>
   1edb8:	ldr	r0, [fp, #-16]
   1edbc:	cmn	r0, #1
   1edc0:	bne	1ee08 <__assert_fail@plt+0xdd68>
   1edc4:	b	1ede0 <__assert_fail@plt+0xdd40>
   1edc8:	ldr	r0, [fp, #-12]
   1edcc:	add	r0, r0, #0
   1edd0:	movw	r1, #0
   1edd4:	cmp	r1, r0
   1edd8:	bcc	1eed4 <__assert_fail@plt+0xde34>
   1eddc:	b	1eee8 <__assert_fail@plt+0xde48>
   1ede0:	ldr	r0, [fp, #-12]
   1ede4:	movw	r1, #0
   1ede8:	cmp	r1, r0
   1edec:	bcs	1eee8 <__assert_fail@plt+0xde48>
   1edf0:	ldr	r0, [fp, #-12]
   1edf4:	sub	r0, r0, #1
   1edf8:	mvn	r1, #0
   1edfc:	cmp	r1, r0
   1ee00:	bcc	1eed4 <__assert_fail@plt+0xde34>
   1ee04:	b	1eee8 <__assert_fail@plt+0xde48>
   1ee08:	ldr	r0, [fp, #-16]
   1ee0c:	movw	r1, #0
   1ee10:	udiv	r0, r1, r0
   1ee14:	ldr	r1, [fp, #-12]
   1ee18:	cmp	r0, r1
   1ee1c:	bcc	1eed4 <__assert_fail@plt+0xde34>
   1ee20:	b	1eee8 <__assert_fail@plt+0xde48>
   1ee24:	ldr	r0, [fp, #-16]
   1ee28:	cmp	r0, #0
   1ee2c:	bne	1ee34 <__assert_fail@plt+0xdd94>
   1ee30:	b	1eee8 <__assert_fail@plt+0xde48>
   1ee34:	ldr	r0, [fp, #-12]
   1ee38:	cmp	r0, #0
   1ee3c:	bcs	1eea8 <__assert_fail@plt+0xde08>
   1ee40:	b	1ee48 <__assert_fail@plt+0xdda8>
   1ee44:	b	1ee4c <__assert_fail@plt+0xddac>
   1ee48:	b	1ee8c <__assert_fail@plt+0xddec>
   1ee4c:	ldr	r0, [fp, #-12]
   1ee50:	cmn	r0, #1
   1ee54:	bne	1ee8c <__assert_fail@plt+0xddec>
   1ee58:	b	1ee74 <__assert_fail@plt+0xddd4>
   1ee5c:	ldr	r0, [fp, #-16]
   1ee60:	add	r0, r0, #0
   1ee64:	movw	r1, #0
   1ee68:	cmp	r1, r0
   1ee6c:	bcc	1eed4 <__assert_fail@plt+0xde34>
   1ee70:	b	1eee8 <__assert_fail@plt+0xde48>
   1ee74:	ldr	r0, [fp, #-16]
   1ee78:	sub	r0, r0, #1
   1ee7c:	mvn	r1, #0
   1ee80:	cmp	r1, r0
   1ee84:	bcc	1eed4 <__assert_fail@plt+0xde34>
   1ee88:	b	1eee8 <__assert_fail@plt+0xde48>
   1ee8c:	ldr	r0, [fp, #-12]
   1ee90:	movw	r1, #0
   1ee94:	udiv	r0, r1, r0
   1ee98:	ldr	r1, [fp, #-16]
   1ee9c:	cmp	r0, r1
   1eea0:	bcc	1eed4 <__assert_fail@plt+0xde34>
   1eea4:	b	1eee8 <__assert_fail@plt+0xde48>
   1eea8:	ldr	r2, [fp, #-16]
   1eeac:	mvn	r0, #0
   1eeb0:	mov	r3, #0
   1eeb4:	str	r0, [sp, #4]
   1eeb8:	ldr	r1, [sp, #4]
   1eebc:	bl	1f848 <__assert_fail@plt+0xe7a8>
   1eec0:	ldr	r2, [fp, #-12]
   1eec4:	subs	r0, r0, r2
   1eec8:	sbcs	r1, r1, #0
   1eecc:	bcs	1eee8 <__assert_fail@plt+0xde48>
   1eed0:	b	1eed4 <__assert_fail@plt+0xde34>
   1eed4:	ldr	r0, [fp, #-12]
   1eed8:	ldr	r1, [fp, #-16]
   1eedc:	mul	r0, r0, r1
   1eee0:	str	r0, [fp, #-20]	; 0xffffffec
   1eee4:	b	1eefc <__assert_fail@plt+0xde5c>
   1eee8:	ldr	r0, [fp, #-12]
   1eeec:	ldr	r1, [fp, #-16]
   1eef0:	mul	r0, r0, r1
   1eef4:	str	r0, [fp, #-20]	; 0xffffffec
   1eef8:	b	1ef14 <__assert_fail@plt+0xde74>
   1eefc:	bl	10fd4 <__errno_location@plt>
   1ef00:	movw	r1, #12
   1ef04:	str	r1, [r0]
   1ef08:	movw	r0, #0
   1ef0c:	str	r0, [fp, #-4]
   1ef10:	b	1ef24 <__assert_fail@plt+0xde84>
   1ef14:	ldr	r0, [fp, #-8]
   1ef18:	ldr	r1, [fp, #-20]	; 0xffffffec
   1ef1c:	bl	1d410 <__assert_fail@plt+0xc370>
   1ef20:	str	r0, [fp, #-4]
   1ef24:	ldr	r0, [fp, #-4]
   1ef28:	mov	sp, fp
   1ef2c:	pop	{fp, pc}
   1ef30:	svcvc	0x00ffffff
   1ef34:	andhi	r0, r0, r0
   1ef38:			; <UNDEFINED> instruction: 0xffff8000
   1ef3c:	sub	sp, sp, #12
   1ef40:	str	r0, [sp, #4]
   1ef44:	ldr	r0, [sp, #4]
   1ef48:	sub	r1, r0, #48	; 0x30
   1ef4c:	cmp	r1, #10
   1ef50:	str	r0, [sp]
   1ef54:	bcc	1ef84 <__assert_fail@plt+0xdee4>
   1ef58:	b	1ef5c <__assert_fail@plt+0xdebc>
   1ef5c:	ldr	r0, [sp]
   1ef60:	sub	r1, r0, #65	; 0x41
   1ef64:	cmp	r1, #26
   1ef68:	bcc	1ef84 <__assert_fail@plt+0xdee4>
   1ef6c:	b	1ef70 <__assert_fail@plt+0xded0>
   1ef70:	ldr	r0, [sp]
   1ef74:	sub	r1, r0, #97	; 0x61
   1ef78:	cmp	r1, #25
   1ef7c:	bhi	1ef94 <__assert_fail@plt+0xdef4>
   1ef80:	b	1ef84 <__assert_fail@plt+0xdee4>
   1ef84:	movw	r0, #1
   1ef88:	and	r0, r0, #1
   1ef8c:	strb	r0, [sp, #11]
   1ef90:	b	1efa0 <__assert_fail@plt+0xdf00>
   1ef94:	movw	r0, #0
   1ef98:	and	r0, r0, #1
   1ef9c:	strb	r0, [sp, #11]
   1efa0:	ldrb	r0, [sp, #11]
   1efa4:	and	r0, r0, #1
   1efa8:	add	sp, sp, #12
   1efac:	bx	lr
   1efb0:	sub	sp, sp, #12
   1efb4:	str	r0, [sp, #4]
   1efb8:	ldr	r0, [sp, #4]
   1efbc:	sub	r1, r0, #65	; 0x41
   1efc0:	cmp	r1, #26
   1efc4:	str	r0, [sp]
   1efc8:	bcc	1efe4 <__assert_fail@plt+0xdf44>
   1efcc:	b	1efd0 <__assert_fail@plt+0xdf30>
   1efd0:	ldr	r0, [sp]
   1efd4:	sub	r1, r0, #97	; 0x61
   1efd8:	cmp	r1, #25
   1efdc:	bhi	1eff4 <__assert_fail@plt+0xdf54>
   1efe0:	b	1efe4 <__assert_fail@plt+0xdf44>
   1efe4:	movw	r0, #1
   1efe8:	and	r0, r0, #1
   1efec:	strb	r0, [sp, #11]
   1eff0:	b	1f000 <__assert_fail@plt+0xdf60>
   1eff4:	movw	r0, #0
   1eff8:	and	r0, r0, #1
   1effc:	strb	r0, [sp, #11]
   1f000:	ldrb	r0, [sp, #11]
   1f004:	and	r0, r0, #1
   1f008:	add	sp, sp, #12
   1f00c:	bx	lr
   1f010:	sub	sp, sp, #8
   1f014:	str	r0, [sp]
   1f018:	ldr	r0, [sp]
   1f01c:	cmp	r0, #127	; 0x7f
   1f020:	bhi	1f038 <__assert_fail@plt+0xdf98>
   1f024:	b	1f028 <__assert_fail@plt+0xdf88>
   1f028:	movw	r0, #1
   1f02c:	and	r0, r0, #1
   1f030:	strb	r0, [sp, #7]
   1f034:	b	1f044 <__assert_fail@plt+0xdfa4>
   1f038:	movw	r0, #0
   1f03c:	and	r0, r0, #1
   1f040:	strb	r0, [sp, #7]
   1f044:	ldrb	r0, [sp, #7]
   1f048:	and	r0, r0, #1
   1f04c:	add	sp, sp, #8
   1f050:	bx	lr
   1f054:	sub	sp, sp, #8
   1f058:	str	r0, [sp, #4]
   1f05c:	ldr	r0, [sp, #4]
   1f060:	cmp	r0, #32
   1f064:	movw	r0, #1
   1f068:	str	r0, [sp]
   1f06c:	beq	1f084 <__assert_fail@plt+0xdfe4>
   1f070:	ldr	r0, [sp, #4]
   1f074:	cmp	r0, #9
   1f078:	movw	r0, #0
   1f07c:	moveq	r0, #1
   1f080:	str	r0, [sp]
   1f084:	ldr	r0, [sp]
   1f088:	and	r0, r0, #1
   1f08c:	add	sp, sp, #8
   1f090:	bx	lr
   1f094:	sub	sp, sp, #12
   1f098:	str	r0, [sp, #4]
   1f09c:	ldr	r0, [sp, #4]
   1f0a0:	cmp	r0, #32
   1f0a4:	str	r0, [sp]
   1f0a8:	bcc	1f0c0 <__assert_fail@plt+0xe020>
   1f0ac:	b	1f0b0 <__assert_fail@plt+0xe010>
   1f0b0:	ldr	r0, [sp]
   1f0b4:	cmp	r0, #127	; 0x7f
   1f0b8:	bne	1f0d0 <__assert_fail@plt+0xe030>
   1f0bc:	b	1f0c0 <__assert_fail@plt+0xe020>
   1f0c0:	movw	r0, #1
   1f0c4:	and	r0, r0, #1
   1f0c8:	strb	r0, [sp, #11]
   1f0cc:	b	1f0dc <__assert_fail@plt+0xe03c>
   1f0d0:	movw	r0, #0
   1f0d4:	and	r0, r0, #1
   1f0d8:	strb	r0, [sp, #11]
   1f0dc:	ldrb	r0, [sp, #11]
   1f0e0:	and	r0, r0, #1
   1f0e4:	add	sp, sp, #12
   1f0e8:	bx	lr
   1f0ec:	sub	sp, sp, #8
   1f0f0:	str	r0, [sp]
   1f0f4:	ldr	r0, [sp]
   1f0f8:	sub	r0, r0, #48	; 0x30
   1f0fc:	cmp	r0, #9
   1f100:	bhi	1f118 <__assert_fail@plt+0xe078>
   1f104:	b	1f108 <__assert_fail@plt+0xe068>
   1f108:	movw	r0, #1
   1f10c:	and	r0, r0, #1
   1f110:	strb	r0, [sp, #7]
   1f114:	b	1f124 <__assert_fail@plt+0xe084>
   1f118:	movw	r0, #0
   1f11c:	and	r0, r0, #1
   1f120:	strb	r0, [sp, #7]
   1f124:	ldrb	r0, [sp, #7]
   1f128:	and	r0, r0, #1
   1f12c:	add	sp, sp, #8
   1f130:	bx	lr
   1f134:	sub	sp, sp, #8
   1f138:	str	r0, [sp]
   1f13c:	ldr	r0, [sp]
   1f140:	sub	r0, r0, #33	; 0x21
   1f144:	cmp	r0, #93	; 0x5d
   1f148:	bhi	1f160 <__assert_fail@plt+0xe0c0>
   1f14c:	b	1f150 <__assert_fail@plt+0xe0b0>
   1f150:	movw	r0, #1
   1f154:	and	r0, r0, #1
   1f158:	strb	r0, [sp, #7]
   1f15c:	b	1f16c <__assert_fail@plt+0xe0cc>
   1f160:	movw	r0, #0
   1f164:	and	r0, r0, #1
   1f168:	strb	r0, [sp, #7]
   1f16c:	ldrb	r0, [sp, #7]
   1f170:	and	r0, r0, #1
   1f174:	add	sp, sp, #8
   1f178:	bx	lr
   1f17c:	sub	sp, sp, #8
   1f180:	str	r0, [sp]
   1f184:	ldr	r0, [sp]
   1f188:	sub	r0, r0, #97	; 0x61
   1f18c:	cmp	r0, #25
   1f190:	bhi	1f1a8 <__assert_fail@plt+0xe108>
   1f194:	b	1f198 <__assert_fail@plt+0xe0f8>
   1f198:	movw	r0, #1
   1f19c:	and	r0, r0, #1
   1f1a0:	strb	r0, [sp, #7]
   1f1a4:	b	1f1b4 <__assert_fail@plt+0xe114>
   1f1a8:	movw	r0, #0
   1f1ac:	and	r0, r0, #1
   1f1b0:	strb	r0, [sp, #7]
   1f1b4:	ldrb	r0, [sp, #7]
   1f1b8:	and	r0, r0, #1
   1f1bc:	add	sp, sp, #8
   1f1c0:	bx	lr
   1f1c4:	sub	sp, sp, #8
   1f1c8:	str	r0, [sp]
   1f1cc:	ldr	r0, [sp]
   1f1d0:	sub	r0, r0, #32
   1f1d4:	cmp	r0, #94	; 0x5e
   1f1d8:	bhi	1f1f0 <__assert_fail@plt+0xe150>
   1f1dc:	b	1f1e0 <__assert_fail@plt+0xe140>
   1f1e0:	movw	r0, #1
   1f1e4:	and	r0, r0, #1
   1f1e8:	strb	r0, [sp, #7]
   1f1ec:	b	1f1fc <__assert_fail@plt+0xe15c>
   1f1f0:	movw	r0, #0
   1f1f4:	and	r0, r0, #1
   1f1f8:	strb	r0, [sp, #7]
   1f1fc:	ldrb	r0, [sp, #7]
   1f200:	and	r0, r0, #1
   1f204:	add	sp, sp, #8
   1f208:	bx	lr
   1f20c:	sub	sp, sp, #12
   1f210:	str	r0, [sp, #4]
   1f214:	ldr	r0, [sp, #4]
   1f218:	sub	r0, r0, #33	; 0x21
   1f21c:	cmp	r0, #93	; 0x5d
   1f220:	str	r0, [sp]
   1f224:	bhi	1f3c0 <__assert_fail@plt+0xe320>
   1f228:	add	r0, pc, #8
   1f22c:	ldr	r1, [sp]
   1f230:	ldr	r0, [r0, r1, lsl #2]
   1f234:	mov	pc, r0
   1f238:			; <UNDEFINED> instruction: 0x0001f3b0
   1f23c:			; <UNDEFINED> instruction: 0x0001f3b0
   1f240:			; <UNDEFINED> instruction: 0x0001f3b0
   1f244:			; <UNDEFINED> instruction: 0x0001f3b0
   1f248:			; <UNDEFINED> instruction: 0x0001f3b0
   1f24c:			; <UNDEFINED> instruction: 0x0001f3b0
   1f250:			; <UNDEFINED> instruction: 0x0001f3b0
   1f254:			; <UNDEFINED> instruction: 0x0001f3b0
   1f258:			; <UNDEFINED> instruction: 0x0001f3b0
   1f25c:			; <UNDEFINED> instruction: 0x0001f3b0
   1f260:			; <UNDEFINED> instruction: 0x0001f3b0
   1f264:			; <UNDEFINED> instruction: 0x0001f3b0
   1f268:			; <UNDEFINED> instruction: 0x0001f3b0
   1f26c:			; <UNDEFINED> instruction: 0x0001f3b0
   1f270:			; <UNDEFINED> instruction: 0x0001f3b0
   1f274:	andeq	pc, r1, r0, asr #7
   1f278:	andeq	pc, r1, r0, asr #7
   1f27c:	andeq	pc, r1, r0, asr #7
   1f280:	andeq	pc, r1, r0, asr #7
   1f284:	andeq	pc, r1, r0, asr #7
   1f288:	andeq	pc, r1, r0, asr #7
   1f28c:	andeq	pc, r1, r0, asr #7
   1f290:	andeq	pc, r1, r0, asr #7
   1f294:	andeq	pc, r1, r0, asr #7
   1f298:	andeq	pc, r1, r0, asr #7
   1f29c:			; <UNDEFINED> instruction: 0x0001f3b0
   1f2a0:			; <UNDEFINED> instruction: 0x0001f3b0
   1f2a4:			; <UNDEFINED> instruction: 0x0001f3b0
   1f2a8:			; <UNDEFINED> instruction: 0x0001f3b0
   1f2ac:			; <UNDEFINED> instruction: 0x0001f3b0
   1f2b0:			; <UNDEFINED> instruction: 0x0001f3b0
   1f2b4:			; <UNDEFINED> instruction: 0x0001f3b0
   1f2b8:	andeq	pc, r1, r0, asr #7
   1f2bc:	andeq	pc, r1, r0, asr #7
   1f2c0:	andeq	pc, r1, r0, asr #7
   1f2c4:	andeq	pc, r1, r0, asr #7
   1f2c8:	andeq	pc, r1, r0, asr #7
   1f2cc:	andeq	pc, r1, r0, asr #7
   1f2d0:	andeq	pc, r1, r0, asr #7
   1f2d4:	andeq	pc, r1, r0, asr #7
   1f2d8:	andeq	pc, r1, r0, asr #7
   1f2dc:	andeq	pc, r1, r0, asr #7
   1f2e0:	andeq	pc, r1, r0, asr #7
   1f2e4:	andeq	pc, r1, r0, asr #7
   1f2e8:	andeq	pc, r1, r0, asr #7
   1f2ec:	andeq	pc, r1, r0, asr #7
   1f2f0:	andeq	pc, r1, r0, asr #7
   1f2f4:	andeq	pc, r1, r0, asr #7
   1f2f8:	andeq	pc, r1, r0, asr #7
   1f2fc:	andeq	pc, r1, r0, asr #7
   1f300:	andeq	pc, r1, r0, asr #7
   1f304:	andeq	pc, r1, r0, asr #7
   1f308:	andeq	pc, r1, r0, asr #7
   1f30c:	andeq	pc, r1, r0, asr #7
   1f310:	andeq	pc, r1, r0, asr #7
   1f314:	andeq	pc, r1, r0, asr #7
   1f318:	andeq	pc, r1, r0, asr #7
   1f31c:	andeq	pc, r1, r0, asr #7
   1f320:			; <UNDEFINED> instruction: 0x0001f3b0
   1f324:			; <UNDEFINED> instruction: 0x0001f3b0
   1f328:			; <UNDEFINED> instruction: 0x0001f3b0
   1f32c:			; <UNDEFINED> instruction: 0x0001f3b0
   1f330:			; <UNDEFINED> instruction: 0x0001f3b0
   1f334:			; <UNDEFINED> instruction: 0x0001f3b0
   1f338:	andeq	pc, r1, r0, asr #7
   1f33c:	andeq	pc, r1, r0, asr #7
   1f340:	andeq	pc, r1, r0, asr #7
   1f344:	andeq	pc, r1, r0, asr #7
   1f348:	andeq	pc, r1, r0, asr #7
   1f34c:	andeq	pc, r1, r0, asr #7
   1f350:	andeq	pc, r1, r0, asr #7
   1f354:	andeq	pc, r1, r0, asr #7
   1f358:	andeq	pc, r1, r0, asr #7
   1f35c:	andeq	pc, r1, r0, asr #7
   1f360:	andeq	pc, r1, r0, asr #7
   1f364:	andeq	pc, r1, r0, asr #7
   1f368:	andeq	pc, r1, r0, asr #7
   1f36c:	andeq	pc, r1, r0, asr #7
   1f370:	andeq	pc, r1, r0, asr #7
   1f374:	andeq	pc, r1, r0, asr #7
   1f378:	andeq	pc, r1, r0, asr #7
   1f37c:	andeq	pc, r1, r0, asr #7
   1f380:	andeq	pc, r1, r0, asr #7
   1f384:	andeq	pc, r1, r0, asr #7
   1f388:	andeq	pc, r1, r0, asr #7
   1f38c:	andeq	pc, r1, r0, asr #7
   1f390:	andeq	pc, r1, r0, asr #7
   1f394:	andeq	pc, r1, r0, asr #7
   1f398:	andeq	pc, r1, r0, asr #7
   1f39c:	andeq	pc, r1, r0, asr #7
   1f3a0:			; <UNDEFINED> instruction: 0x0001f3b0
   1f3a4:			; <UNDEFINED> instruction: 0x0001f3b0
   1f3a8:			; <UNDEFINED> instruction: 0x0001f3b0
   1f3ac:			; <UNDEFINED> instruction: 0x0001f3b0
   1f3b0:	movw	r0, #1
   1f3b4:	and	r0, r0, #1
   1f3b8:	strb	r0, [sp, #11]
   1f3bc:	b	1f3cc <__assert_fail@plt+0xe32c>
   1f3c0:	movw	r0, #0
   1f3c4:	and	r0, r0, #1
   1f3c8:	strb	r0, [sp, #11]
   1f3cc:	ldrb	r0, [sp, #11]
   1f3d0:	and	r0, r0, #1
   1f3d4:	add	sp, sp, #12
   1f3d8:	bx	lr
   1f3dc:	sub	sp, sp, #12
   1f3e0:	str	r0, [sp, #4]
   1f3e4:	ldr	r0, [sp, #4]
   1f3e8:	sub	r1, r0, #9
   1f3ec:	cmp	r1, #5
   1f3f0:	str	r0, [sp]
   1f3f4:	bcc	1f40c <__assert_fail@plt+0xe36c>
   1f3f8:	b	1f3fc <__assert_fail@plt+0xe35c>
   1f3fc:	ldr	r0, [sp]
   1f400:	cmp	r0, #32
   1f404:	bne	1f41c <__assert_fail@plt+0xe37c>
   1f408:	b	1f40c <__assert_fail@plt+0xe36c>
   1f40c:	movw	r0, #1
   1f410:	and	r0, r0, #1
   1f414:	strb	r0, [sp, #11]
   1f418:	b	1f428 <__assert_fail@plt+0xe388>
   1f41c:	movw	r0, #0
   1f420:	and	r0, r0, #1
   1f424:	strb	r0, [sp, #11]
   1f428:	ldrb	r0, [sp, #11]
   1f42c:	and	r0, r0, #1
   1f430:	add	sp, sp, #12
   1f434:	bx	lr
   1f438:	sub	sp, sp, #8
   1f43c:	str	r0, [sp]
   1f440:	ldr	r0, [sp]
   1f444:	sub	r0, r0, #65	; 0x41
   1f448:	cmp	r0, #25
   1f44c:	bhi	1f464 <__assert_fail@plt+0xe3c4>
   1f450:	b	1f454 <__assert_fail@plt+0xe3b4>
   1f454:	movw	r0, #1
   1f458:	and	r0, r0, #1
   1f45c:	strb	r0, [sp, #7]
   1f460:	b	1f470 <__assert_fail@plt+0xe3d0>
   1f464:	movw	r0, #0
   1f468:	and	r0, r0, #1
   1f46c:	strb	r0, [sp, #7]
   1f470:	ldrb	r0, [sp, #7]
   1f474:	and	r0, r0, #1
   1f478:	add	sp, sp, #8
   1f47c:	bx	lr
   1f480:	sub	sp, sp, #12
   1f484:	str	r0, [sp, #4]
   1f488:	ldr	r0, [sp, #4]
   1f48c:	sub	r1, r0, #48	; 0x30
   1f490:	cmp	r1, #10
   1f494:	str	r0, [sp]
   1f498:	bcc	1f4c8 <__assert_fail@plt+0xe428>
   1f49c:	b	1f4a0 <__assert_fail@plt+0xe400>
   1f4a0:	ldr	r0, [sp]
   1f4a4:	sub	r1, r0, #65	; 0x41
   1f4a8:	cmp	r1, #6
   1f4ac:	bcc	1f4c8 <__assert_fail@plt+0xe428>
   1f4b0:	b	1f4b4 <__assert_fail@plt+0xe414>
   1f4b4:	ldr	r0, [sp]
   1f4b8:	sub	r1, r0, #97	; 0x61
   1f4bc:	cmp	r1, #5
   1f4c0:	bhi	1f4d8 <__assert_fail@plt+0xe438>
   1f4c4:	b	1f4c8 <__assert_fail@plt+0xe428>
   1f4c8:	movw	r0, #1
   1f4cc:	and	r0, r0, #1
   1f4d0:	strb	r0, [sp, #11]
   1f4d4:	b	1f4e4 <__assert_fail@plt+0xe444>
   1f4d8:	movw	r0, #0
   1f4dc:	and	r0, r0, #1
   1f4e0:	strb	r0, [sp, #11]
   1f4e4:	ldrb	r0, [sp, #11]
   1f4e8:	and	r0, r0, #1
   1f4ec:	add	sp, sp, #12
   1f4f0:	bx	lr
   1f4f4:	sub	sp, sp, #8
   1f4f8:	str	r0, [sp]
   1f4fc:	ldr	r0, [sp]
   1f500:	sub	r0, r0, #65	; 0x41
   1f504:	cmp	r0, #25
   1f508:	bhi	1f524 <__assert_fail@plt+0xe484>
   1f50c:	b	1f510 <__assert_fail@plt+0xe470>
   1f510:	ldr	r0, [sp]
   1f514:	sub	r0, r0, #65	; 0x41
   1f518:	add	r0, r0, #97	; 0x61
   1f51c:	str	r0, [sp, #4]
   1f520:	b	1f52c <__assert_fail@plt+0xe48c>
   1f524:	ldr	r0, [sp]
   1f528:	str	r0, [sp, #4]
   1f52c:	ldr	r0, [sp, #4]
   1f530:	add	sp, sp, #8
   1f534:	bx	lr
   1f538:	sub	sp, sp, #8
   1f53c:	str	r0, [sp]
   1f540:	ldr	r0, [sp]
   1f544:	sub	r0, r0, #97	; 0x61
   1f548:	cmp	r0, #25
   1f54c:	bhi	1f568 <__assert_fail@plt+0xe4c8>
   1f550:	b	1f554 <__assert_fail@plt+0xe4b4>
   1f554:	ldr	r0, [sp]
   1f558:	sub	r0, r0, #97	; 0x61
   1f55c:	add	r0, r0, #65	; 0x41
   1f560:	str	r0, [sp, #4]
   1f564:	b	1f570 <__assert_fail@plt+0xe4d0>
   1f568:	ldr	r0, [sp]
   1f56c:	str	r0, [sp, #4]
   1f570:	ldr	r0, [sp, #4]
   1f574:	add	sp, sp, #8
   1f578:	bx	lr
   1f57c:	push	{r4, r5, fp, lr}
   1f580:	add	fp, sp, #8
   1f584:	sub	sp, sp, #272	; 0x110
   1f588:	add	r1, sp, #7
   1f58c:	str	r0, [fp, #-16]
   1f590:	ldr	r0, [fp, #-16]
   1f594:	movw	r2, #257	; 0x101
   1f598:	bl	1f618 <__assert_fail@plt+0xe578>
   1f59c:	cmp	r0, #0
   1f5a0:	beq	1f5b4 <__assert_fail@plt+0xe514>
   1f5a4:	movw	r0, #0
   1f5a8:	and	r0, r0, #1
   1f5ac:	strb	r0, [fp, #-9]
   1f5b0:	b	1f608 <__assert_fail@plt+0xe568>
   1f5b4:	add	r0, sp, #7
   1f5b8:	movw	r1, #917	; 0x395
   1f5bc:	movt	r1, #2
   1f5c0:	bl	10e48 <strcmp@plt>
   1f5c4:	cmp	r0, #0
   1f5c8:	movw	r0, #1
   1f5cc:	str	r0, [sp]
   1f5d0:	beq	1f5f4 <__assert_fail@plt+0xe554>
   1f5d4:	add	r0, sp, #7
   1f5d8:	movw	r1, #5208	; 0x1458
   1f5dc:	movt	r1, #2
   1f5e0:	bl	10e48 <strcmp@plt>
   1f5e4:	cmp	r0, #0
   1f5e8:	movw	r0, #0
   1f5ec:	moveq	r0, #1
   1f5f0:	str	r0, [sp]
   1f5f4:	ldr	r0, [sp]
   1f5f8:	mvn	r1, #0
   1f5fc:	eor	r0, r0, r1
   1f600:	and	r0, r0, #1
   1f604:	strb	r0, [fp, #-9]
   1f608:	ldrb	r0, [fp, #-9]
   1f60c:	and	r0, r0, #1
   1f610:	sub	sp, fp, #8
   1f614:	pop	{r4, r5, fp, pc}
   1f618:	push	{fp, lr}
   1f61c:	mov	fp, sp
   1f620:	sub	sp, sp, #16
   1f624:	str	r0, [fp, #-4]
   1f628:	str	r1, [sp, #8]
   1f62c:	str	r2, [sp, #4]
   1f630:	ldr	r0, [fp, #-4]
   1f634:	ldr	r1, [sp, #8]
   1f638:	ldr	r2, [sp, #4]
   1f63c:	bl	1f648 <__assert_fail@plt+0xe5a8>
   1f640:	mov	sp, fp
   1f644:	pop	{fp, pc}
   1f648:	push	{fp, lr}
   1f64c:	mov	fp, sp
   1f650:	sub	sp, sp, #24
   1f654:	str	r0, [fp, #-8]
   1f658:	str	r1, [sp, #12]
   1f65c:	str	r2, [sp, #8]
   1f660:	ldr	r0, [fp, #-8]
   1f664:	bl	1f748 <__assert_fail@plt+0xe6a8>
   1f668:	str	r0, [sp, #4]
   1f66c:	ldr	r0, [sp, #4]
   1f670:	movw	r1, #0
   1f674:	cmp	r0, r1
   1f678:	bne	1f6a0 <__assert_fail@plt+0xe600>
   1f67c:	ldr	r0, [sp, #8]
   1f680:	cmp	r0, #0
   1f684:	bls	1f694 <__assert_fail@plt+0xe5f4>
   1f688:	ldr	r0, [sp, #12]
   1f68c:	movw	r1, #0
   1f690:	strb	r1, [r0]
   1f694:	movw	r0, #22
   1f698:	str	r0, [fp, #-4]
   1f69c:	b	1f71c <__assert_fail@plt+0xe67c>
   1f6a0:	ldr	r0, [sp, #4]
   1f6a4:	bl	10fb0 <strlen@plt>
   1f6a8:	str	r0, [sp]
   1f6ac:	ldr	r0, [sp]
   1f6b0:	ldr	r1, [sp, #8]
   1f6b4:	cmp	r0, r1
   1f6b8:	bcs	1f6dc <__assert_fail@plt+0xe63c>
   1f6bc:	ldr	r0, [sp, #12]
   1f6c0:	ldr	r1, [sp, #4]
   1f6c4:	ldr	r2, [sp]
   1f6c8:	add	r2, r2, #1
   1f6cc:	bl	10e9c <memcpy@plt>
   1f6d0:	movw	r0, #0
   1f6d4:	str	r0, [fp, #-4]
   1f6d8:	b	1f71c <__assert_fail@plt+0xe67c>
   1f6dc:	ldr	r0, [sp, #8]
   1f6e0:	cmp	r0, #0
   1f6e4:	bls	1f714 <__assert_fail@plt+0xe674>
   1f6e8:	ldr	r0, [sp, #12]
   1f6ec:	ldr	r1, [sp, #4]
   1f6f0:	ldr	r2, [sp, #8]
   1f6f4:	sub	r2, r2, #1
   1f6f8:	bl	10e9c <memcpy@plt>
   1f6fc:	ldr	r0, [sp, #12]
   1f700:	ldr	r1, [sp, #8]
   1f704:	sub	r1, r1, #1
   1f708:	add	r0, r0, r1
   1f70c:	movw	r1, #0
   1f710:	strb	r1, [r0]
   1f714:	movw	r0, #34	; 0x22
   1f718:	str	r0, [fp, #-4]
   1f71c:	ldr	r0, [fp, #-4]
   1f720:	mov	sp, fp
   1f724:	pop	{fp, pc}
   1f728:	push	{fp, lr}
   1f72c:	mov	fp, sp
   1f730:	sub	sp, sp, #8
   1f734:	str	r0, [sp, #4]
   1f738:	ldr	r0, [sp, #4]
   1f73c:	bl	1f748 <__assert_fail@plt+0xe6a8>
   1f740:	mov	sp, fp
   1f744:	pop	{fp, pc}
   1f748:	push	{fp, lr}
   1f74c:	mov	fp, sp
   1f750:	sub	sp, sp, #8
   1f754:	str	r0, [sp, #4]
   1f758:	ldr	r0, [sp, #4]
   1f75c:	movw	r1, #0
   1f760:	bl	11028 <setlocale@plt>
   1f764:	str	r0, [sp]
   1f768:	ldr	r0, [sp]
   1f76c:	mov	sp, fp
   1f770:	pop	{fp, pc}
   1f774:	cmp	r3, #0
   1f778:	cmpeq	r2, #0
   1f77c:	bne	1f7a0 <__assert_fail@plt+0xe700>
   1f780:	cmp	r1, #0
   1f784:	movlt	r1, #-2147483648	; 0x80000000
   1f788:	movlt	r0, #0
   1f78c:	blt	1f79c <__assert_fail@plt+0xe6fc>
   1f790:	cmpeq	r0, #0
   1f794:	mvnne	r1, #-2147483648	; 0x80000000
   1f798:	mvnne	r0, #0
   1f79c:	b	1f884 <__assert_fail@plt+0xe7e4>
   1f7a0:	sub	sp, sp, #8
   1f7a4:	push	{sp, lr}
   1f7a8:	cmp	r1, #0
   1f7ac:	blt	1f7cc <__assert_fail@plt+0xe72c>
   1f7b0:	cmp	r3, #0
   1f7b4:	blt	1f800 <__assert_fail@plt+0xe760>
   1f7b8:	bl	1f894 <__assert_fail@plt+0xe7f4>
   1f7bc:	ldr	lr, [sp, #4]
   1f7c0:	add	sp, sp, #8
   1f7c4:	pop	{r2, r3}
   1f7c8:	bx	lr
   1f7cc:	rsbs	r0, r0, #0
   1f7d0:	sbc	r1, r1, r1, lsl #1
   1f7d4:	cmp	r3, #0
   1f7d8:	blt	1f824 <__assert_fail@plt+0xe784>
   1f7dc:	bl	1f894 <__assert_fail@plt+0xe7f4>
   1f7e0:	ldr	lr, [sp, #4]
   1f7e4:	add	sp, sp, #8
   1f7e8:	pop	{r2, r3}
   1f7ec:	rsbs	r0, r0, #0
   1f7f0:	sbc	r1, r1, r1, lsl #1
   1f7f4:	rsbs	r2, r2, #0
   1f7f8:	sbc	r3, r3, r3, lsl #1
   1f7fc:	bx	lr
   1f800:	rsbs	r2, r2, #0
   1f804:	sbc	r3, r3, r3, lsl #1
   1f808:	bl	1f894 <__assert_fail@plt+0xe7f4>
   1f80c:	ldr	lr, [sp, #4]
   1f810:	add	sp, sp, #8
   1f814:	pop	{r2, r3}
   1f818:	rsbs	r0, r0, #0
   1f81c:	sbc	r1, r1, r1, lsl #1
   1f820:	bx	lr
   1f824:	rsbs	r2, r2, #0
   1f828:	sbc	r3, r3, r3, lsl #1
   1f82c:	bl	1f894 <__assert_fail@plt+0xe7f4>
   1f830:	ldr	lr, [sp, #4]
   1f834:	add	sp, sp, #8
   1f838:	pop	{r2, r3}
   1f83c:	rsbs	r2, r2, #0
   1f840:	sbc	r3, r3, r3, lsl #1
   1f844:	bx	lr
   1f848:	cmp	r3, #0
   1f84c:	cmpeq	r2, #0
   1f850:	bne	1f868 <__assert_fail@plt+0xe7c8>
   1f854:	cmp	r1, #0
   1f858:	cmpeq	r0, #0
   1f85c:	mvnne	r1, #0
   1f860:	mvnne	r0, #0
   1f864:	b	1f884 <__assert_fail@plt+0xe7e4>
   1f868:	sub	sp, sp, #8
   1f86c:	push	{sp, lr}
   1f870:	bl	1f894 <__assert_fail@plt+0xe7f4>
   1f874:	ldr	lr, [sp, #4]
   1f878:	add	sp, sp, #8
   1f87c:	pop	{r2, r3}
   1f880:	bx	lr
   1f884:	push	{r1, lr}
   1f888:	mov	r0, #8
   1f88c:	bl	10e3c <raise@plt>
   1f890:	pop	{r1, pc}
   1f894:	cmp	r1, r3
   1f898:	cmpeq	r0, r2
   1f89c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1f8a0:	mov	r4, r0
   1f8a4:	movcc	r0, #0
   1f8a8:	mov	r5, r1
   1f8ac:	ldr	lr, [sp, #36]	; 0x24
   1f8b0:	movcc	r1, r0
   1f8b4:	bcc	1f9b0 <__assert_fail@plt+0xe910>
   1f8b8:	cmp	r3, #0
   1f8bc:	clzeq	ip, r2
   1f8c0:	clzne	ip, r3
   1f8c4:	addeq	ip, ip, #32
   1f8c8:	cmp	r5, #0
   1f8cc:	clzeq	r1, r4
   1f8d0:	addeq	r1, r1, #32
   1f8d4:	clzne	r1, r5
   1f8d8:	sub	ip, ip, r1
   1f8dc:	sub	sl, ip, #32
   1f8e0:	lsl	r9, r3, ip
   1f8e4:	rsb	fp, ip, #32
   1f8e8:	orr	r9, r9, r2, lsl sl
   1f8ec:	orr	r9, r9, r2, lsr fp
   1f8f0:	lsl	r8, r2, ip
   1f8f4:	cmp	r5, r9
   1f8f8:	cmpeq	r4, r8
   1f8fc:	movcc	r0, #0
   1f900:	movcc	r1, r0
   1f904:	bcc	1f920 <__assert_fail@plt+0xe880>
   1f908:	mov	r0, #1
   1f90c:	subs	r4, r4, r8
   1f910:	lsl	r1, r0, sl
   1f914:	orr	r1, r1, r0, lsr fp
   1f918:	lsl	r0, r0, ip
   1f91c:	sbc	r5, r5, r9
   1f920:	cmp	ip, #0
   1f924:	beq	1f9b0 <__assert_fail@plt+0xe910>
   1f928:	lsr	r6, r8, #1
   1f92c:	orr	r6, r6, r9, lsl #31
   1f930:	lsr	r7, r9, #1
   1f934:	mov	r2, ip
   1f938:	b	1f95c <__assert_fail@plt+0xe8bc>
   1f93c:	subs	r3, r4, r6
   1f940:	sbc	r8, r5, r7
   1f944:	adds	r3, r3, r3
   1f948:	adc	r8, r8, r8
   1f94c:	adds	r4, r3, #1
   1f950:	adc	r5, r8, #0
   1f954:	subs	r2, r2, #1
   1f958:	beq	1f978 <__assert_fail@plt+0xe8d8>
   1f95c:	cmp	r5, r7
   1f960:	cmpeq	r4, r6
   1f964:	bcs	1f93c <__assert_fail@plt+0xe89c>
   1f968:	adds	r4, r4, r4
   1f96c:	adc	r5, r5, r5
   1f970:	subs	r2, r2, #1
   1f974:	bne	1f95c <__assert_fail@plt+0xe8bc>
   1f978:	lsr	r3, r4, ip
   1f97c:	orr	r3, r3, r5, lsl fp
   1f980:	lsr	r2, r5, ip
   1f984:	orr	r3, r3, r5, lsr sl
   1f988:	adds	r0, r0, r4
   1f98c:	mov	r4, r3
   1f990:	lsl	r3, r2, ip
   1f994:	orr	r3, r3, r4, lsl sl
   1f998:	lsl	ip, r4, ip
   1f99c:	orr	r3, r3, r4, lsr fp
   1f9a0:	adc	r1, r1, r5
   1f9a4:	subs	r0, r0, ip
   1f9a8:	mov	r5, r2
   1f9ac:	sbc	r1, r1, r3
   1f9b0:	cmp	lr, #0
   1f9b4:	strdne	r4, [lr]
   1f9b8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1f9bc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1f9c0:	mov	r7, r0
   1f9c4:	ldr	r6, [pc, #72]	; 1fa14 <__assert_fail@plt+0xe974>
   1f9c8:	ldr	r5, [pc, #72]	; 1fa18 <__assert_fail@plt+0xe978>
   1f9cc:	add	r6, pc, r6
   1f9d0:	add	r5, pc, r5
   1f9d4:	sub	r6, r6, r5
   1f9d8:	mov	r8, r1
   1f9dc:	mov	r9, r2
   1f9e0:	bl	10e04 <calloc@plt-0x20>
   1f9e4:	asrs	r6, r6, #2
   1f9e8:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1f9ec:	mov	r4, #0
   1f9f0:	add	r4, r4, #1
   1f9f4:	ldr	r3, [r5], #4
   1f9f8:	mov	r2, r9
   1f9fc:	mov	r1, r8
   1fa00:	mov	r0, r7
   1fa04:	blx	r3
   1fa08:	cmp	r6, r4
   1fa0c:	bne	1f9f0 <__assert_fail@plt+0xe950>
   1fa10:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1fa14:	andeq	r2, r1, r8, lsr r5
   1fa18:	andeq	r2, r1, r0, lsr r5
   1fa1c:	bx	lr
   1fa20:	ldr	r3, [pc, #12]	; 1fa34 <__assert_fail@plt+0xe994>
   1fa24:	mov	r1, #0
   1fa28:	add	r3, pc, r3
   1fa2c:	ldr	r2, [r3]
   1fa30:	b	10fe0 <__cxa_atexit@plt>
   1fa34:			; <UNDEFINED> instruction: 0x000126bc

Disassembly of section .fini:

0001fa38 <.fini>:
   1fa38:	push	{r3, lr}
   1fa3c:	pop	{r3, pc}
