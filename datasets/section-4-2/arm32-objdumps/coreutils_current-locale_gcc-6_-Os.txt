
../repos/coreutils/gnulib-tests/current-locale:     file format elf32-littlearm


Disassembly of section .init:

00010318 <.init>:
   10318:	push	{r3, lr}
   1031c:	bl	104ec <abort@plt+0x178>
   10320:	pop	{r3, pc}

Disassembly of section .plt:

00010324 <getenv@plt-0x14>:
   10324:	push	{lr}		; (str lr, [sp, #-4]!)
   10328:	ldr	lr, [pc, #4]	; 10334 <getenv@plt-0x4>
   1032c:	add	lr, pc, lr
   10330:	ldr	pc, [lr, #8]!
   10334:	andeq	r0, r1, ip, asr #25

00010338 <getenv@plt>:
   10338:	add	ip, pc, #0, 12
   1033c:	add	ip, ip, #16, 20	; 0x10000
   10340:	ldr	pc, [ip, #3276]!	; 0xccc

00010344 <__libc_start_main@plt>:
   10344:	add	ip, pc, #0, 12
   10348:	add	ip, ip, #16, 20	; 0x10000
   1034c:	ldr	pc, [ip, #3268]!	; 0xcc4

00010350 <__gmon_start__@plt>:
   10350:	add	ip, pc, #0, 12
   10354:	add	ip, ip, #16, 20	; 0x10000
   10358:	ldr	pc, [ip, #3260]!	; 0xcbc

0001035c <__printf_chk@plt>:
   1035c:	add	ip, pc, #0, 12
   10360:	add	ip, ip, #16, 20	; 0x10000
   10364:	ldr	pc, [ip, #3252]!	; 0xcb4

00010368 <setlocale@plt>:
   10368:	add	ip, pc, #0, 12
   1036c:	add	ip, ip, #16, 20	; 0x10000
   10370:	ldr	pc, [ip, #3244]!	; 0xcac

00010374 <abort@plt>:
   10374:	add	ip, pc, #0, 12
   10378:	add	ip, ip, #16, 20	; 0x10000
   1037c:	ldr	pc, [ip, #3236]!	; 0xca4

Disassembly of section .text:

00010380 <.text>:
   10380:	push	{r4, lr}
   10384:	mov	r0, #6
   10388:	ldr	r1, [pc, #220]	; 1046c <abort@plt+0xf8>
   1038c:	bl	10368 <setlocale@plt>
   10390:	ldr	r0, [pc, #216]	; 10470 <abort@plt+0xfc>
   10394:	bl	10338 <getenv@plt>
   10398:	ldr	r4, [pc, #204]	; 1046c <abort@plt+0xf8>
   1039c:	ldr	r1, [pc, #208]	; 10474 <abort@plt+0x100>
   103a0:	cmp	r0, #0
   103a4:	movne	r2, r0
   103a8:	moveq	r2, r4
   103ac:	mov	r0, #1
   103b0:	bl	1035c <__printf_chk@plt>
   103b4:	ldr	r1, [pc, #188]	; 10478 <abort@plt+0x104>
   103b8:	mov	r0, #0
   103bc:	bl	105d8 <abort@plt+0x264>
   103c0:	ldr	r1, [pc, #180]	; 1047c <abort@plt+0x108>
   103c4:	mov	r0, #1
   103c8:	bl	105d8 <abort@plt+0x264>
   103cc:	ldr	r1, [pc, #172]	; 10480 <abort@plt+0x10c>
   103d0:	mov	r0, #2
   103d4:	bl	105d8 <abort@plt+0x264>
   103d8:	ldr	r1, [pc, #164]	; 10484 <abort@plt+0x110>
   103dc:	mov	r0, #3
   103e0:	bl	105d8 <abort@plt+0x264>
   103e4:	ldr	r1, [pc, #156]	; 10488 <abort@plt+0x114>
   103e8:	mov	r0, #4
   103ec:	bl	105d8 <abort@plt+0x264>
   103f0:	ldr	r1, [pc, #148]	; 1048c <abort@plt+0x118>
   103f4:	mov	r0, #5
   103f8:	bl	105d8 <abort@plt+0x264>
   103fc:	ldr	r1, [pc, #140]	; 10490 <abort@plt+0x11c>
   10400:	mov	r0, #7
   10404:	bl	105d8 <abort@plt+0x264>
   10408:	ldr	r1, [pc, #132]	; 10494 <abort@plt+0x120>
   1040c:	mov	r0, #8
   10410:	bl	105d8 <abort@plt+0x264>
   10414:	ldr	r1, [pc, #124]	; 10498 <abort@plt+0x124>
   10418:	mov	r0, #9
   1041c:	bl	105d8 <abort@plt+0x264>
   10420:	ldr	r1, [pc, #116]	; 1049c <abort@plt+0x128>
   10424:	mov	r0, #10
   10428:	bl	105d8 <abort@plt+0x264>
   1042c:	ldr	r1, [pc, #108]	; 104a0 <abort@plt+0x12c>
   10430:	mov	r0, #11
   10434:	bl	105d8 <abort@plt+0x264>
   10438:	ldr	r1, [pc, #100]	; 104a4 <abort@plt+0x130>
   1043c:	mov	r0, #12
   10440:	bl	105d8 <abort@plt+0x264>
   10444:	ldr	r0, [pc, #92]	; 104a8 <abort@plt+0x134>
   10448:	bl	10338 <getenv@plt>
   1044c:	ldr	r1, [pc, #88]	; 104ac <abort@plt+0x138>
   10450:	cmp	r0, #0
   10454:	movne	r2, r0
   10458:	moveq	r2, r4
   1045c:	mov	r0, #1
   10460:	bl	1035c <__printf_chk@plt>
   10464:	mov	r0, #0
   10468:	pop	{r4, pc}
   1046c:	andeq	r0, r1, lr, ror #13
   10470:	andeq	r0, r1, pc, ror #13
   10474:	strdeq	r0, [r1], -r4
   10478:	strdeq	r0, [r1], -sp
   1047c:	andeq	r0, r1, r6, lsl #14
   10480:	andeq	r0, r1, r1, lsl r7
   10484:	andeq	r0, r1, r9, lsl r7
   10488:	andeq	r0, r1, r4, lsr #14
   1048c:	andeq	r0, r1, r0, lsr r7
   10490:	andeq	r0, r1, ip, lsr r7
   10494:	andeq	r0, r1, r5, asr #14
   10498:	andeq	r0, r1, sp, asr #14
   1049c:	andeq	r0, r1, r8, asr r7
   104a0:	andeq	r0, r1, r5, ror #14
   104a4:	andeq	r0, r1, r4, ror r7
   104a8:	ldrdeq	r0, [r1], -r8
   104ac:	andeq	r0, r1, r6, lsl #15
   104b0:	mov	fp, #0
   104b4:	mov	lr, #0
   104b8:	pop	{r1}		; (ldr r1, [sp], #4)
   104bc:	mov	r2, sp
   104c0:	push	{r2}		; (str r2, [sp, #-4]!)
   104c4:	push	{r0}		; (str r0, [sp, #-4]!)
   104c8:	ldr	ip, [pc, #16]	; 104e0 <abort@plt+0x16c>
   104cc:	push	{ip}		; (str ip, [sp, #-4]!)
   104d0:	ldr	r0, [pc, #12]	; 104e4 <abort@plt+0x170>
   104d4:	ldr	r3, [pc, #12]	; 104e8 <abort@plt+0x174>
   104d8:	bl	10344 <__libc_start_main@plt>
   104dc:	bl	10374 <abort@plt>
   104e0:	andeq	r0, r1, r8, asr #13
   104e4:	andeq	r0, r1, r0, lsl #7
   104e8:	andeq	r0, r1, r8, ror #12
   104ec:	ldr	r3, [pc, #20]	; 10508 <abort@plt+0x194>
   104f0:	ldr	r2, [pc, #20]	; 1050c <abort@plt+0x198>
   104f4:	add	r3, pc, r3
   104f8:	ldr	r2, [r3, r2]
   104fc:	cmp	r2, #0
   10500:	bxeq	lr
   10504:	b	10350 <__gmon_start__@plt>
   10508:	andeq	r0, r1, r4, lsl #22
   1050c:	andeq	r0, r0, r4, lsr #32
   10510:	ldr	r3, [pc, #28]	; 10534 <abort@plt+0x1c0>
   10514:	ldr	r0, [pc, #28]	; 10538 <abort@plt+0x1c4>
   10518:	sub	r3, r3, r0
   1051c:	cmp	r3, #6
   10520:	bxls	lr
   10524:	ldr	r3, [pc, #16]	; 1053c <abort@plt+0x1c8>
   10528:	cmp	r3, #0
   1052c:	bxeq	lr
   10530:	bx	r3
   10534:	andeq	r1, r2, r3, lsr r0
   10538:	andeq	r1, r2, r0, lsr r0
   1053c:	andeq	r0, r0, r0
   10540:	ldr	r1, [pc, #36]	; 1056c <abort@plt+0x1f8>
   10544:	ldr	r0, [pc, #36]	; 10570 <abort@plt+0x1fc>
   10548:	sub	r1, r1, r0
   1054c:	asr	r1, r1, #2
   10550:	add	r1, r1, r1, lsr #31
   10554:	asrs	r1, r1, #1
   10558:	bxeq	lr
   1055c:	ldr	r3, [pc, #16]	; 10574 <abort@plt+0x200>
   10560:	cmp	r3, #0
   10564:	bxeq	lr
   10568:	bx	r3
   1056c:	andeq	r1, r2, r0, lsr r0
   10570:	andeq	r1, r2, r0, lsr r0
   10574:	andeq	r0, r0, r0
   10578:	push	{r4, lr}
   1057c:	ldr	r4, [pc, #24]	; 1059c <abort@plt+0x228>
   10580:	ldrb	r3, [r4]
   10584:	cmp	r3, #0
   10588:	popne	{r4, pc}
   1058c:	bl	10510 <abort@plt+0x19c>
   10590:	mov	r3, #1
   10594:	strb	r3, [r4]
   10598:	pop	{r4, pc}
   1059c:	andeq	r1, r2, r0, lsr r0
   105a0:	ldr	r0, [pc, #40]	; 105d0 <abort@plt+0x25c>
   105a4:	ldr	r3, [r0]
   105a8:	cmp	r3, #0
   105ac:	bne	105b4 <abort@plt+0x240>
   105b0:	b	10540 <abort@plt+0x1cc>
   105b4:	ldr	r3, [pc, #24]	; 105d4 <abort@plt+0x260>
   105b8:	cmp	r3, #0
   105bc:	beq	105b0 <abort@plt+0x23c>
   105c0:	push	{r4, lr}
   105c4:	blx	r3
   105c8:	pop	{r4, lr}
   105cc:	b	10540 <abort@plt+0x1cc>
   105d0:	andeq	r0, r2, r4, lsl pc
   105d4:	andeq	r0, r0, r0
   105d8:	push	{r4, r5, r6, r7, r8, lr}
   105dc:	mov	r7, r0
   105e0:	mov	r0, r1
   105e4:	mov	r5, r1
   105e8:	bl	10338 <getenv@plt>
   105ec:	ldr	r4, [pc, #100]	; 10658 <abort@plt+0x2e4>
   105f0:	cmp	r0, #0
   105f4:	movne	r6, r0
   105f8:	moveq	r6, r4
   105fc:	ldrb	r3, [r6]
   10600:	cmp	r3, #0
   10604:	beq	1063c <abort@plt+0x2c8>
   10608:	ldr	r0, [pc, #76]	; 1065c <abort@plt+0x2e8>
   1060c:	bl	10338 <getenv@plt>
   10610:	cmp	r0, #0
   10614:	moveq	r0, r4
   10618:	ldrb	r3, [r0]
   1061c:	cmp	r3, #0
   10620:	bne	1063c <abort@plt+0x2c8>
   10624:	ldr	r1, [pc, #52]	; 10660 <abort@plt+0x2ec>
   10628:	mov	r3, r6
   1062c:	mov	r2, r5
   10630:	mov	r0, #1
   10634:	pop	{r4, r5, r6, r7, r8, lr}
   10638:	b	1035c <__printf_chk@plt>
   1063c:	mov	r1, #0
   10640:	mov	r0, r7
   10644:	bl	10368 <setlocale@plt>
   10648:	mov	r2, r5
   1064c:	ldr	r1, [pc, #16]	; 10664 <abort@plt+0x2f0>
   10650:	mov	r3, r0
   10654:	b	10630 <abort@plt+0x2bc>
   10658:	andeq	r0, r1, lr, ror #13
   1065c:	ldrdeq	r0, [r1], -r8
   10660:	ldrdeq	r0, [r1], -pc	; <UNPREDICTABLE>
   10664:	andeq	r0, r1, r6, ror #13
   10668:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1066c:	mov	r7, r0
   10670:	ldr	r6, [pc, #72]	; 106c0 <abort@plt+0x34c>
   10674:	ldr	r5, [pc, #72]	; 106c4 <abort@plt+0x350>
   10678:	add	r6, pc, r6
   1067c:	add	r5, pc, r5
   10680:	sub	r6, r6, r5
   10684:	mov	r8, r1
   10688:	mov	r9, r2
   1068c:	bl	10318 <getenv@plt-0x20>
   10690:	asrs	r6, r6, #2
   10694:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   10698:	mov	r4, #0
   1069c:	add	r4, r4, #1
   106a0:	ldr	r3, [r5], #4
   106a4:	mov	r2, r9
   106a8:	mov	r1, r8
   106ac:	mov	r0, r7
   106b0:	blx	r3
   106b4:	cmp	r6, r4
   106b8:	bne	1069c <abort@plt+0x328>
   106bc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   106c0:	muleq	r1, r0, r8
   106c4:	andeq	r0, r1, r8, lsl #17
   106c8:	bx	lr

Disassembly of section .fini:

000106cc <.fini>:
   106cc:	push	{r3, lr}
   106d0:	pop	{r3, pc}
