
../repos/inetutils/whois/whois:     file format elf32-littlearm


Disassembly of section .init:

00011308 <.init>:
   11308:	push	{r3, lr}
   1130c:	bl	11664 <putc_unlocked@plt+0x48>
   11310:	pop	{r3, pc}

Disassembly of section .plt:

00011314 <fdopen@plt-0x14>:
   11314:	push	{lr}		; (str lr, [sp, #-4]!)
   11318:	ldr	lr, [pc, #4]	; 11324 <fdopen@plt-0x4>
   1131c:	add	lr, pc, lr
   11320:	ldr	pc, [lr, #8]!
   11324:	ldrdeq	r9, [r1], -ip

00011328 <fdopen@plt>:
   11328:	add	ip, pc, #0, 12
   1132c:	add	ip, ip, #102400	; 0x19000
   11330:	ldr	pc, [ip, #3292]!	; 0xcdc

00011334 <calloc@plt>:
   11334:	add	ip, pc, #0, 12
   11338:	add	ip, ip, #102400	; 0x19000
   1133c:	ldr	pc, [ip, #3284]!	; 0xcd4

00011340 <fputs_unlocked@plt>:
   11340:	add	ip, pc, #0, 12
   11344:	add	ip, ip, #102400	; 0x19000
   11348:	ldr	pc, [ip, #3276]!	; 0xccc

0001134c <inet_aton@plt>:
   1134c:	add	ip, pc, #0, 12
   11350:	add	ip, ip, #102400	; 0x19000
   11354:	ldr	pc, [ip, #3268]!	; 0xcc4

00011358 <strcmp@plt>:
   11358:	add	ip, pc, #0, 12
   1135c:	add	ip, ip, #102400	; 0x19000
   11360:	ldr	pc, [ip, #3260]!	; 0xcbc

00011364 <printf@plt>:
   11364:	add	ip, pc, #0, 12
   11368:	add	ip, ip, #102400	; 0x19000
   1136c:	ldr	pc, [ip, #3252]!	; 0xcb4

00011370 <memmove@plt>:
   11370:	add	ip, pc, #0, 12
   11374:	add	ip, ip, #102400	; 0x19000
   11378:	ldr	pc, [ip, #3244]!	; 0xcac

0001137c <strchrnul@plt>:
   1137c:	add	ip, pc, #0, 12
   11380:	add	ip, ip, #102400	; 0x19000
   11384:	ldr	pc, [ip, #3236]!	; 0xca4

00011388 <free@plt>:
   11388:	add	ip, pc, #0, 12
   1138c:	add	ip, ip, #102400	; 0x19000
   11390:	ldr	pc, [ip, #3228]!	; 0xc9c

00011394 <gai_strerror@plt>:
   11394:	add	ip, pc, #0, 12
   11398:	add	ip, ip, #102400	; 0x19000
   1139c:	ldr	pc, [ip, #3220]!	; 0xc94

000113a0 <fgets@plt>:
   113a0:	add	ip, pc, #0, 12
   113a4:	add	ip, ip, #102400	; 0x19000
   113a8:	ldr	pc, [ip, #3212]!	; 0xc8c

000113ac <ferror@plt>:
   113ac:	add	ip, pc, #0, 12
   113b0:	add	ip, ip, #102400	; 0x19000
   113b4:	ldr	pc, [ip, #3204]!	; 0xc84

000113b8 <strndup@plt>:
   113b8:	add	ip, pc, #0, 12
   113bc:	add	ip, ip, #102400	; 0x19000
   113c0:	ldr	pc, [ip, #3196]!	; 0xc7c

000113c4 <memcpy@plt>:
   113c4:	add	ip, pc, #0, 12
   113c8:	add	ip, ip, #102400	; 0x19000
   113cc:	ldr	pc, [ip, #3188]!	; 0xc74

000113d0 <signal@plt>:
   113d0:	add	ip, pc, #0, 12
   113d4:	add	ip, ip, #102400	; 0x19000
   113d8:	ldr	pc, [ip, #3180]!	; 0xc6c

000113dc <fwrite_unlocked@plt>:
   113dc:	add	ip, pc, #0, 12
   113e0:	add	ip, ip, #102400	; 0x19000
   113e4:	ldr	pc, [ip, #3172]!	; 0xc64

000113e8 <sleep@plt>:
   113e8:	add	ip, pc, #0, 12
   113ec:	add	ip, ip, #102400	; 0x19000
   113f0:	ldr	pc, [ip, #3164]!	; 0xc5c

000113f4 <realloc@plt>:
   113f4:	add	ip, pc, #0, 12
   113f8:	add	ip, ip, #102400	; 0x19000
   113fc:	ldr	pc, [ip, #3156]!	; 0xc54

00011400 <strcasecmp@plt>:
   11400:	add	ip, pc, #0, 12
   11404:	add	ip, ip, #102400	; 0x19000
   11408:	ldr	pc, [ip, #3148]!	; 0xc4c

0001140c <funlockfile@plt>:
   1140c:	add	ip, pc, #0, 12
   11410:	add	ip, ip, #102400	; 0x19000
   11414:	ldr	pc, [ip, #3140]!	; 0xc44

00011418 <fwrite@plt>:
   11418:	add	ip, pc, #0, 12
   1141c:	add	ip, ip, #102400	; 0x19000
   11420:	ldr	pc, [ip, #3132]!	; 0xc3c

00011424 <strcat@plt>:
   11424:	add	ip, pc, #0, 12
   11428:	add	ip, ip, #102400	; 0x19000
   1142c:	ldr	pc, [ip, #3124]!	; 0xc34

00011430 <strcpy@plt>:
   11430:	add	ip, pc, #0, 12
   11434:	add	ip, ip, #102400	; 0x19000
   11438:	ldr	pc, [ip, #3116]!	; 0xc2c

0001143c <error@plt>:
   1143c:	add	ip, pc, #0, 12
   11440:	add	ip, ip, #102400	; 0x19000
   11444:	ldr	pc, [ip, #3108]!	; 0xc24

00011448 <getenv@plt>:
   11448:	add	ip, pc, #0, 12
   1144c:	add	ip, ip, #102400	; 0x19000
   11450:	ldr	pc, [ip, #3100]!	; 0xc1c

00011454 <puts@plt>:
   11454:	add	ip, pc, #0, 12
   11458:	add	ip, ip, #102400	; 0x19000
   1145c:	ldr	pc, [ip, #3092]!	; 0xc14

00011460 <malloc@plt>:
   11460:	add	ip, pc, #0, 12
   11464:	add	ip, ip, #102400	; 0x19000
   11468:	ldr	pc, [ip, #3084]!	; 0xc0c

0001146c <__libc_start_main@plt>:
   1146c:	add	ip, pc, #0, 12
   11470:	add	ip, ip, #102400	; 0x19000
   11474:	ldr	pc, [ip, #3076]!	; 0xc04

00011478 <strerror@plt>:
   11478:	add	ip, pc, #0, 12
   1147c:	add	ip, ip, #102400	; 0x19000
   11480:	ldr	pc, [ip, #3068]!	; 0xbfc

00011484 <__ctype_tolower_loc@plt>:
   11484:	add	ip, pc, #0, 12
   11488:	add	ip, ip, #102400	; 0x19000
   1148c:	ldr	pc, [ip, #3060]!	; 0xbf4

00011490 <__gmon_start__@plt>:
   11490:	add	ip, pc, #0, 12
   11494:	add	ip, ip, #102400	; 0x19000
   11498:	ldr	pc, [ip, #3052]!	; 0xbec

0001149c <__ctype_b_loc@plt>:
   1149c:	add	ip, pc, #0, 12
   114a0:	add	ip, ip, #102400	; 0x19000
   114a4:	ldr	pc, [ip, #3044]!	; 0xbe4

000114a8 <exit@plt>:
   114a8:	add	ip, pc, #0, 12
   114ac:	add	ip, ip, #102400	; 0x19000
   114b0:	ldr	pc, [ip, #3036]!	; 0xbdc

000114b4 <bcmp@plt>:
   114b4:	add	ip, pc, #0, 12
   114b8:	add	ip, ip, #102400	; 0x19000
   114bc:	ldr	pc, [ip, #3028]!	; 0xbd4

000114c0 <strlen@plt>:
   114c0:	add	ip, pc, #0, 12
   114c4:	add	ip, ip, #102400	; 0x19000
   114c8:	ldr	pc, [ip, #3020]!	; 0xbcc

000114cc <strchr@plt>:
   114cc:	add	ip, pc, #0, 12
   114d0:	add	ip, ip, #102400	; 0x19000
   114d4:	ldr	pc, [ip, #3012]!	; 0xbc4

000114d8 <fprintf@plt>:
   114d8:	add	ip, pc, #0, 12
   114dc:	add	ip, ip, #102400	; 0x19000
   114e0:	ldr	pc, [ip, #3004]!	; 0xbbc

000114e4 <__errno_location@plt>:
   114e4:	add	ip, pc, #0, 12
   114e8:	add	ip, ip, #102400	; 0x19000
   114ec:	ldr	pc, [ip, #2996]!	; 0xbb4

000114f0 <strncasecmp@plt>:
   114f0:	add	ip, pc, #0, 12
   114f4:	add	ip, ip, #102400	; 0x19000
   114f8:	ldr	pc, [ip, #2988]!	; 0xbac

000114fc <strerror_r@plt>:
   114fc:	add	ip, pc, #0, 12
   11500:	add	ip, ip, #102400	; 0x19000
   11504:	ldr	pc, [ip, #2980]!	; 0xba4

00011508 <memset@plt>:
   11508:	add	ip, pc, #0, 12
   1150c:	add	ip, ip, #102400	; 0x19000
   11510:	ldr	pc, [ip, #2972]!	; 0xb9c

00011514 <write@plt>:
   11514:	add	ip, pc, #0, 12
   11518:	add	ip, ip, #102400	; 0x19000
   1151c:	ldr	pc, [ip, #2964]!	; 0xb94

00011520 <memchr@plt>:
   11520:	add	ip, pc, #0, 12
   11524:	add	ip, ip, #102400	; 0x19000
   11528:	ldr	pc, [ip, #2956]!	; 0xb8c

0001152c <strrchr@plt>:
   1152c:	add	ip, pc, #0, 12
   11530:	add	ip, ip, #102400	; 0x19000
   11534:	ldr	pc, [ip, #2948]!	; 0xb84

00011538 <vfprintf@plt>:
   11538:	add	ip, pc, #0, 12
   1153c:	add	ip, ip, #102400	; 0x19000
   11540:	ldr	pc, [ip, #2940]!	; 0xb7c

00011544 <fputc@plt>:
   11544:	add	ip, pc, #0, 12
   11548:	add	ip, ip, #102400	; 0x19000
   1154c:	ldr	pc, [ip, #2932]!	; 0xb74

00011550 <sscanf@plt>:
   11550:	add	ip, pc, #0, 12
   11554:	add	ip, ip, #102400	; 0x19000
   11558:	ldr	pc, [ip, #2924]!	; 0xb6c

0001155c <sprintf@plt>:
   1155c:	add	ip, pc, #0, 12
   11560:	add	ip, ip, #102400	; 0x19000
   11564:	ldr	pc, [ip, #2916]!	; 0xb64

00011568 <flockfile@plt>:
   11568:	add	ip, pc, #0, 12
   1156c:	add	ip, ip, #102400	; 0x19000
   11570:	ldr	pc, [ip, #2908]!	; 0xb5c

00011574 <vsnprintf@plt>:
   11574:	add	ip, pc, #0, 12
   11578:	add	ip, ip, #102400	; 0x19000
   1157c:	ldr	pc, [ip, #2900]!	; 0xb54

00011580 <atoi@plt>:
   11580:	add	ip, pc, #0, 12
   11584:	add	ip, ip, #102400	; 0x19000
   11588:	ldr	pc, [ip, #2892]!	; 0xb4c

0001158c <qsort@plt>:
   1158c:	add	ip, pc, #0, 12
   11590:	add	ip, ip, #102400	; 0x19000
   11594:	ldr	pc, [ip, #2884]!	; 0xb44

00011598 <strpbrk@plt>:
   11598:	add	ip, pc, #0, 12
   1159c:	add	ip, ip, #102400	; 0x19000
   115a0:	ldr	pc, [ip, #2876]!	; 0xb3c

000115a4 <freeaddrinfo@plt>:
   115a4:	add	ip, pc, #0, 12
   115a8:	add	ip, ip, #102400	; 0x19000
   115ac:	ldr	pc, [ip, #2868]!	; 0xb34

000115b0 <getaddrinfo@plt>:
   115b0:	add	ip, pc, #0, 12
   115b4:	add	ip, ip, #102400	; 0x19000
   115b8:	ldr	pc, [ip, #2860]!	; 0xb2c

000115bc <socket@plt>:
   115bc:	add	ip, pc, #0, 12
   115c0:	add	ip, ip, #102400	; 0x19000
   115c4:	ldr	pc, [ip, #2852]!	; 0xb24

000115c8 <gethostbyname@plt>:
   115c8:	add	ip, pc, #0, 12
   115cc:	add	ip, ip, #102400	; 0x19000
   115d0:	ldr	pc, [ip, #2844]!	; 0xb1c

000115d4 <fputs@plt>:
   115d4:	add	ip, pc, #0, 12
   115d8:	add	ip, ip, #102400	; 0x19000
   115dc:	ldr	pc, [ip, #2836]!	; 0xb14

000115e0 <strncmp@plt>:
   115e0:	add	ip, pc, #0, 12
   115e4:	add	ip, ip, #102400	; 0x19000
   115e8:	ldr	pc, [ip, #2828]!	; 0xb0c

000115ec <abort@plt>:
   115ec:	add	ip, pc, #0, 12
   115f0:	add	ip, ip, #102400	; 0x19000
   115f4:	ldr	pc, [ip, #2820]!	; 0xb04

000115f8 <close@plt>:
   115f8:	add	ip, pc, #0, 12
   115fc:	add	ip, ip, #102400	; 0x19000
   11600:	ldr	pc, [ip, #2812]!	; 0xafc

00011604 <connect@plt>:
   11604:	add	ip, pc, #0, 12
   11608:	add	ip, ip, #102400	; 0x19000
   1160c:	ldr	pc, [ip, #2804]!	; 0xaf4

00011610 <__assert_fail@plt>:
   11610:	add	ip, pc, #0, 12
   11614:	add	ip, ip, #102400	; 0x19000
   11618:	ldr	pc, [ip, #2796]!	; 0xaec

0001161c <putc_unlocked@plt>:
   1161c:	add	ip, pc, #0, 12
   11620:	add	ip, ip, #102400	; 0x19000
   11624:	ldr	pc, [ip, #2788]!	; 0xae4

Disassembly of section .text:

00011628 <argp_parse@@Base-0x15f8>:
   11628:	mov	fp, #0
   1162c:	mov	lr, #0
   11630:	pop	{r1}		; (ldr r1, [sp], #4)
   11634:	mov	r2, sp
   11638:	push	{r2}		; (str r2, [sp, #-4]!)
   1163c:	push	{r0}		; (str r0, [sp, #-4]!)
   11640:	ldr	ip, [pc, #16]	; 11658 <putc_unlocked@plt+0x3c>
   11644:	push	{ip}		; (str ip, [sp, #-4]!)
   11648:	ldr	r0, [pc, #12]	; 1165c <putc_unlocked@plt+0x40>
   1164c:	ldr	r3, [pc, #12]	; 11660 <putc_unlocked@plt+0x44>
   11650:	bl	1146c <__libc_start_main@plt>
   11654:	bl	115ec <abort@plt>
   11658:	andeq	r8, r1, r8, lsl #16
   1165c:	andeq	r1, r1, r8, lsl r7
   11660:	andeq	r8, r1, r8, lsr #15
   11664:	ldr	r3, [pc, #20]	; 11680 <putc_unlocked@plt+0x64>
   11668:	ldr	r2, [pc, #20]	; 11684 <putc_unlocked@plt+0x68>
   1166c:	add	r3, pc, r3
   11670:	ldr	r2, [r3, r2]
   11674:	cmp	r2, #0
   11678:	bxeq	lr
   1167c:	b	11490 <__gmon_start__@plt>
   11680:	andeq	r9, r1, ip, lsl #19
   11684:	andeq	r0, r0, ip, lsl #2
   11688:	ldr	r0, [pc, #24]	; 116a8 <putc_unlocked@plt+0x8c>
   1168c:	ldr	r3, [pc, #24]	; 116ac <putc_unlocked@plt+0x90>
   11690:	cmp	r3, r0
   11694:	bxeq	lr
   11698:	ldr	r3, [pc, #16]	; 116b0 <putc_unlocked@plt+0x94>
   1169c:	cmp	r3, #0
   116a0:	bxeq	lr
   116a4:	bx	r3
   116a8:	andeq	lr, r2, ip, lsr #17
   116ac:	andeq	lr, r2, ip, lsr #17
   116b0:	andeq	r0, r0, r0
   116b4:	ldr	r0, [pc, #36]	; 116e0 <putc_unlocked@plt+0xc4>
   116b8:	ldr	r1, [pc, #36]	; 116e4 <putc_unlocked@plt+0xc8>
   116bc:	sub	r1, r1, r0
   116c0:	asr	r1, r1, #2
   116c4:	add	r1, r1, r1, lsr #31
   116c8:	asrs	r1, r1, #1
   116cc:	bxeq	lr
   116d0:	ldr	r3, [pc, #16]	; 116e8 <putc_unlocked@plt+0xcc>
   116d4:	cmp	r3, #0
   116d8:	bxeq	lr
   116dc:	bx	r3
   116e0:	andeq	lr, r2, ip, lsr #17
   116e4:	andeq	lr, r2, ip, lsr #17
   116e8:	andeq	r0, r0, r0
   116ec:	push	{r4, lr}
   116f0:	ldr	r4, [pc, #24]	; 11710 <putc_unlocked@plt+0xf4>
   116f4:	ldrb	r3, [r4]
   116f8:	cmp	r3, #0
   116fc:	popne	{r4, pc}
   11700:	bl	11688 <putc_unlocked@plt+0x6c>
   11704:	mov	r3, #1
   11708:	strb	r3, [r4]
   1170c:	pop	{r4, pc}
   11710:	andeq	lr, r2, r0, asr #17
   11714:	b	116b4 <putc_unlocked@plt+0x98>
   11718:	push	{fp, lr}
   1171c:	mov	fp, sp
   11720:	sub	sp, sp, #16
   11724:	mov	r7, r1
   11728:	mov	r6, r0
   1172c:	ldr	r0, [r1]
   11730:	bl	142d4 <_obstack_memory_used@@Base+0x60>
   11734:	movw	r0, #16008	; 0x3e88
   11738:	movt	r0, #1
   1173c:	str	r0, [sp]
   11740:	movw	r9, #59660	; 0xe90c
   11744:	movt	r9, #2
   11748:	mov	r4, #0
   1174c:	movw	r3, #19288	; 0x4b58
   11750:	movt	r3, #1
   11754:	mov	r0, r9
   11758:	mov	r1, #0
   1175c:	mov	r2, #0
   11760:	bl	13f78 <_obstack_begin@@Base>
   11764:	movw	r0, #59708	; 0xe93c
   11768:	movt	r0, #2
   1176c:	movw	r1, #39411	; 0x99f3
   11770:	movt	r1, #1
   11774:	str	r1, [r0]
   11778:	movw	r0, #39134	; 0x98de
   1177c:	movt	r0, #1
   11780:	movw	r1, #58912	; 0xe620
   11784:	movt	r1, #2
   11788:	bl	13d90 <argp_usage@@Base+0x98>
   1178c:	sub	r0, fp, #4
   11790:	stm	sp, {r0, r4}
   11794:	movw	r0, #58920	; 0xe628
   11798:	movt	r0, #2
   1179c:	mov	r1, r6
   117a0:	mov	r2, r7
   117a4:	mov	r3, #8
   117a8:	bl	12c20 <argp_parse@@Base>
   117ac:	ldr	r0, [r9, #12]
   117b0:	ldr	r1, [r9, #16]
   117b4:	cmp	r1, r0
   117b8:	bne	117cc <putc_unlocked@plt+0x1b0>
   117bc:	movw	r0, #59660	; 0xe90c
   117c0:	movt	r0, #2
   117c4:	mov	r1, #1
   117c8:	bl	14060 <_obstack_newchunk@@Base>
   117cc:	ldr	r0, [r9, #12]
   117d0:	add	r1, r0, #1
   117d4:	str	r1, [r9, #12]
   117d8:	strb	r4, [r0]
   117dc:	ldr	r8, [r9, #8]
   117e0:	ldr	r0, [r9, #12]
   117e4:	cmp	r0, r8
   117e8:	bne	117f8 <putc_unlocked@plt+0x1dc>
   117ec:	ldrb	r0, [r9, #40]	; 0x28
   117f0:	orr	r0, r0, #2
   117f4:	strb	r0, [r9, #40]	; 0x28
   117f8:	ldr	r0, [r9, #4]
   117fc:	ldr	r1, [r9, #12]
   11800:	ldr	r2, [r9, #16]
   11804:	ldr	r3, [r9, #24]
   11808:	add	r1, r3, r1
   1180c:	bic	r1, r1, r3
   11810:	sub	r3, r1, r0
   11814:	sub	r0, r2, r0
   11818:	cmp	r3, r0
   1181c:	movhi	r1, r2
   11820:	str	r1, [r9, #8]
   11824:	str	r1, [r9, #12]
   11828:	ldr	r5, [fp, #-4]
   1182c:	sub	r4, r6, r5
   11830:	movw	sl, #59600	; 0xe8d0
   11834:	movt	sl, #2
   11838:	ldr	r0, [sl]
   1183c:	orrs	r1, r4, r0
   11840:	bne	1185c <putc_unlocked@plt+0x240>
   11844:	movw	r2, #39435	; 0x9a0b
   11848:	movt	r2, #1
   1184c:	mov	r0, #1
   11850:	mov	r1, #0
   11854:	bl	1143c <error@plt>
   11858:	ldr	r0, [sl]
   1185c:	cmp	r0, #0
   11860:	bne	11904 <putc_unlocked@plt+0x2e8>
   11864:	cmp	r4, #0
   11868:	beq	11904 <putc_unlocked@plt+0x2e8>
   1186c:	add	r4, r7, r5, lsl #2
   11870:	sub	r0, r5, r6
   11874:	add	r5, r0, #1
   11878:	mov	sl, #32
   1187c:	b	11894 <putc_unlocked@plt+0x278>
   11880:	ldr	r0, [r9, #12]
   11884:	add	r1, r0, #1
   11888:	str	r1, [r9, #12]
   1188c:	strb	sl, [r0]
   11890:	add	r5, r5, #1
   11894:	ldr	r6, [r4], #4
   11898:	mov	r0, r6
   1189c:	bl	114c0 <strlen@plt>
   118a0:	mov	r7, r0
   118a4:	ldr	r0, [r9, #12]
   118a8:	ldr	r1, [r9, #16]
   118ac:	sub	r0, r1, r0
   118b0:	cmp	r0, r7
   118b4:	bcs	118c4 <putc_unlocked@plt+0x2a8>
   118b8:	mov	r0, r9
   118bc:	mov	r1, r7
   118c0:	bl	14060 <_obstack_newchunk@@Base>
   118c4:	ldr	r0, [r9, #12]
   118c8:	mov	r1, r6
   118cc:	mov	r2, r7
   118d0:	bl	113c4 <memcpy@plt>
   118d4:	ldr	r0, [r9, #12]
   118d8:	add	r0, r0, r7
   118dc:	str	r0, [r9, #12]
   118e0:	cmp	r5, #0
   118e4:	beq	11904 <putc_unlocked@plt+0x2e8>
   118e8:	ldr	r1, [r9, #16]
   118ec:	cmp	r1, r0
   118f0:	bne	11880 <putc_unlocked@plt+0x264>
   118f4:	mov	r0, r9
   118f8:	mov	r1, #1
   118fc:	bl	14060 <_obstack_newchunk@@Base>
   11900:	b	11880 <putc_unlocked@plt+0x264>
   11904:	ldr	r0, [r9, #12]
   11908:	ldr	r1, [r9, #16]
   1190c:	cmp	r1, r0
   11910:	bne	11924 <putc_unlocked@plt+0x308>
   11914:	movw	r0, #59660	; 0xe90c
   11918:	movt	r0, #2
   1191c:	mov	r1, #1
   11920:	bl	14060 <_obstack_newchunk@@Base>
   11924:	ldr	r0, [r9, #12]
   11928:	add	r1, r0, #1
   1192c:	str	r1, [r9, #12]
   11930:	mov	r1, #0
   11934:	strb	r1, [r0]
   11938:	ldr	r6, [r9, #8]
   1193c:	ldr	r0, [r9, #12]
   11940:	cmp	r0, r6
   11944:	bne	11954 <putc_unlocked@plt+0x338>
   11948:	ldrb	r0, [r9, #40]	; 0x28
   1194c:	orr	r0, r0, #2
   11950:	strb	r0, [r9, #40]	; 0x28
   11954:	ldr	r0, [r9, #4]
   11958:	ldr	r1, [r9, #12]
   1195c:	ldr	r2, [r9, #16]
   11960:	ldr	r3, [r9, #24]
   11964:	add	r1, r3, r1
   11968:	bic	r1, r1, r3
   1196c:	sub	r3, r1, r0
   11970:	sub	r0, r2, r0
   11974:	cmp	r3, r0
   11978:	movhi	r1, r2
   1197c:	str	r1, [r9, #8]
   11980:	str	r1, [r9, #12]
   11984:	movw	r7, #59592	; 0xe8c8
   11988:	movt	r7, #2
   1198c:	ldr	r0, [r7]
   11990:	cmp	r0, #0
   11994:	bne	11ae4 <putc_unlocked@plt+0x4c8>
   11998:	movw	r1, #45428	; 0xb174
   1199c:	movt	r1, #2
   119a0:	mov	r0, r6
   119a4:	bl	11bb0 <putc_unlocked@plt+0x594>
   119a8:	cmp	r0, #0
   119ac:	beq	11a24 <putc_unlocked@plt+0x408>
   119b0:	movw	r0, #59588	; 0xe8c4
   119b4:	movt	r0, #2
   119b8:	ldr	r0, [r0]
   119bc:	cmp	r0, #0
   119c0:	beq	119d0 <putc_unlocked@plt+0x3b4>
   119c4:	movw	r0, #39456	; 0x9a20
   119c8:	movt	r0, #1
   119cc:	bl	11454 <puts@plt>
   119d0:	movw	r0, #39490	; 0x9a42
   119d4:	movt	r0, #1
   119d8:	mov	r1, #0
   119dc:	bl	11c04 <putc_unlocked@plt+0x5e8>
   119e0:	movw	r4, #59704	; 0xe938
   119e4:	movt	r4, #2
   119e8:	str	r0, [r4]
   119ec:	mov	r1, r6
   119f0:	bl	11d20 <putc_unlocked@plt+0x704>
   119f4:	str	r0, [r7]
   119f8:	ldr	r0, [r4]
   119fc:	bl	11ed0 <putc_unlocked@plt+0x8b4>
   11a00:	ldr	r1, [r7]
   11a04:	cmp	r1, #0
   11a08:	beq	11ba8 <putc_unlocked@plt+0x58c>
   11a0c:	movw	r0, #39509	; 0x9a55
   11a10:	movt	r0, #1
   11a14:	bl	11364 <printf@plt>
   11a18:	ldr	r0, [r7]
   11a1c:	cmp	r0, #0
   11a20:	bne	11ae4 <putc_unlocked@plt+0x4c8>
   11a24:	mov	r0, r6
   11a28:	bl	11ed4 <putc_unlocked@plt+0x8b8>
   11a2c:	mov	r1, r0
   11a30:	str	r0, [r7]
   11a34:	ldrb	r0, [r0]
   11a38:	cmp	r0, #3
   11a3c:	bhi	11ac4 <putc_unlocked@plt+0x4a8>
   11a40:	add	r1, pc, #0
   11a44:	ldr	pc, [r1, r0, lsl #2]
   11a48:	andeq	r1, r1, r8, asr sl
   11a4c:	muleq	r1, r8, sl
   11a50:	andeq	r1, r1, r4, lsr #21
   11a54:			; <UNDEFINED> instruction: 0x00011ab0
   11a58:	movw	r0, #39543	; 0x9a77
   11a5c:	movt	r0, #1
   11a60:	bl	11448 <getenv@plt>
   11a64:	movw	r1, #39490	; 0x9a42
   11a68:	movt	r1, #1
   11a6c:	cmp	r0, #0
   11a70:	movne	r1, r0
   11a74:	str	r1, [r7]
   11a78:	movw	r0, #59588	; 0xe8c4
   11a7c:	movt	r0, #2
   11a80:	ldr	r0, [r0]
   11a84:	cmp	r0, #0
   11a88:	beq	11ae4 <putc_unlocked@plt+0x4c8>
   11a8c:	movw	r0, #39556	; 0x9a84
   11a90:	movt	r0, #1
   11a94:	b	11ae0 <putc_unlocked@plt+0x4c4>
   11a98:	movw	r0, #39582	; 0x9a9e
   11a9c:	movt	r0, #1
   11aa0:	bl	11454 <puts@plt>
   11aa4:	ldr	r0, [r7]
   11aa8:	add	r0, r0, #1
   11aac:	b	11ab8 <putc_unlocked@plt+0x49c>
   11ab0:	movw	r0, #39653	; 0x9ae5
   11ab4:	movt	r0, #1
   11ab8:	bl	11454 <puts@plt>
   11abc:	mov	r0, #0
   11ac0:	bl	114a8 <exit@plt>
   11ac4:	movw	r0, #59588	; 0xe8c4
   11ac8:	movt	r0, #2
   11acc:	ldr	r0, [r0]
   11ad0:	cmp	r0, #0
   11ad4:	beq	11ae4 <putc_unlocked@plt+0x4c8>
   11ad8:	movw	r0, #39683	; 0x9b03
   11adc:	movt	r0, #1
   11ae0:	bl	11364 <printf@plt>
   11ae4:	movw	r0, #39701	; 0x9b15
   11ae8:	movt	r0, #1
   11aec:	bl	11448 <getenv@plt>
   11af0:	cmp	r0, #0
   11af4:	movwne	r0, #58848	; 0xe5e0
   11af8:	movtne	r0, #2
   11afc:	movne	r1, #0
   11b00:	strne	r1, [r0]
   11b04:	ldr	r0, [r7]
   11b08:	mov	r1, r8
   11b0c:	mov	r2, r6
   11b10:	bl	12234 <putc_unlocked@plt+0xc18>
   11b14:	mov	r4, r0
   11b18:	movw	r0, #59588	; 0xe8c4
   11b1c:	movt	r0, #2
   11b20:	ldr	r0, [r0]
   11b24:	cmp	r0, #0
   11b28:	beq	11b3c <putc_unlocked@plt+0x520>
   11b2c:	movw	r0, #39712	; 0x9b20
   11b30:	movt	r0, #1
   11b34:	mov	r1, r4
   11b38:	bl	11364 <printf@plt>
   11b3c:	mov	r0, r4
   11b40:	bl	114c0 <strlen@plt>
   11b44:	movw	r1, #2573	; 0xa0d
   11b48:	mov	r2, r4
   11b4c:	strh	r1, [r2, r0]!
   11b50:	mov	r0, #0
   11b54:	strb	r0, [r2, #2]
   11b58:	movw	r5, #9324	; 0x246c
   11b5c:	movt	r5, #1
   11b60:	mov	r0, #15
   11b64:	mov	r1, r5
   11b68:	bl	113d0 <signal@plt>
   11b6c:	mov	r0, #2
   11b70:	mov	r1, r5
   11b74:	bl	113d0 <signal@plt>
   11b78:	ldr	r0, [r7]
   11b7c:	movw	r1, #59596	; 0xe8cc
   11b80:	movt	r1, #2
   11b84:	ldr	r1, [r1]
   11b88:	bl	11c04 <putc_unlocked@plt+0x5e8>
   11b8c:	movw	r5, #59704	; 0xe938
   11b90:	movt	r5, #2
   11b94:	str	r0, [r5]
   11b98:	mov	r1, r4
   11b9c:	bl	12498 <putc_unlocked@plt+0xe7c>
   11ba0:	ldr	r0, [r5]
   11ba4:	bl	11ed0 <putc_unlocked@plt+0x8b4>
   11ba8:	mov	r0, #0
   11bac:	bl	114a8 <exit@plt>
   11bb0:	push	{r4, r5, r6, sl, fp, lr}
   11bb4:	add	fp, sp, #16
   11bb8:	mov	r2, r1
   11bbc:	ldr	r1, [r1]
   11bc0:	mov	r4, #0
   11bc4:	cmp	r1, #0
   11bc8:	beq	11bf0 <putc_unlocked@plt+0x5d4>
   11bcc:	mov	r5, r0
   11bd0:	add	r6, r2, #4
   11bd4:	mov	r0, r5
   11bd8:	bl	12804 <putc_unlocked@plt+0x11e8>
   11bdc:	cmp	r0, #0
   11be0:	bne	11bf8 <putc_unlocked@plt+0x5dc>
   11be4:	ldr	r1, [r6], #4
   11be8:	cmp	r1, #0
   11bec:	bne	11bd4 <putc_unlocked@plt+0x5b8>
   11bf0:	mov	r0, r4
   11bf4:	pop	{r4, r5, r6, sl, fp, pc}
   11bf8:	mov	r4, #1
   11bfc:	mov	r0, r4
   11c00:	pop	{r4, r5, r6, sl, fp, pc}
   11c04:	push	{r4, r5, fp, lr}
   11c08:	add	fp, sp, #8
   11c0c:	sub	sp, sp, #40	; 0x28
   11c10:	mov	r5, r1
   11c14:	mov	r4, r0
   11c18:	vmov.i32	q8, #0	; 0x00000000
   11c1c:	add	r2, sp, #8
   11c20:	mov	r0, r2
   11c24:	vst1.64	{d16-d17}, [r0]!
   11c28:	vst1.64	{d16-d17}, [r0]
   11c2c:	mov	r0, #1
   11c30:	str	r0, [sp, #16]
   11c34:	movw	r1, #39134	; 0x98de
   11c38:	movt	r1, #1
   11c3c:	cmp	r5, #0
   11c40:	movne	r1, r5
   11c44:	add	r3, sp, #4
   11c48:	mov	r0, r4
   11c4c:	bl	115b0 <getaddrinfo@plt>
   11c50:	cmp	r0, #0
   11c54:	beq	11c80 <putc_unlocked@plt+0x664>
   11c58:	movw	r1, #40434	; 0x9df2
   11c5c:	movt	r1, #1
   11c60:	cmp	r5, #0
   11c64:	movne	r1, r5
   11c68:	add	r2, sp, #8
   11c6c:	add	r3, sp, #4
   11c70:	mov	r0, r4
   11c74:	bl	115b0 <getaddrinfo@plt>
   11c78:	cmp	r0, #0
   11c7c:	bne	11d0c <putc_unlocked@plt+0x6f0>
   11c80:	ldr	r4, [sp, #4]
   11c84:	cmp	r4, #0
   11c88:	beq	11d00 <putc_unlocked@plt+0x6e4>
   11c8c:	mov	r2, r4
   11c90:	b	11cb0 <putc_unlocked@plt+0x694>
   11c94:	mov	r0, r5
   11c98:	bl	115f8 <close@plt>
   11c9c:	ldr	r0, [sp, #4]
   11ca0:	ldr	r2, [r0, #28]
   11ca4:	str	r2, [sp, #4]
   11ca8:	cmp	r2, #0
   11cac:	beq	11ce4 <putc_unlocked@plt+0x6c8>
   11cb0:	ldmib	r2, {r0, r1, r2}
   11cb4:	bl	115bc <socket@plt>
   11cb8:	mov	r5, r0
   11cbc:	cmp	r0, #0
   11cc0:	bmi	11c9c <putc_unlocked@plt+0x680>
   11cc4:	ldr	r0, [sp, #4]
   11cc8:	ldr	r2, [r0, #16]
   11ccc:	ldr	r1, [r0, #20]
   11cd0:	mov	r0, r5
   11cd4:	bl	11604 <connect@plt>
   11cd8:	cmp	r0, #0
   11cdc:	bne	11c94 <putc_unlocked@plt+0x678>
   11ce0:	ldr	r2, [sp, #4]
   11ce4:	cmp	r2, #0
   11ce8:	beq	11d00 <putc_unlocked@plt+0x6e4>
   11cec:	mov	r0, r4
   11cf0:	bl	115a4 <freeaddrinfo@plt>
   11cf4:	mov	r0, r5
   11cf8:	sub	sp, fp, #8
   11cfc:	pop	{r4, r5, fp, pc}
   11d00:	movw	r0, #40458	; 0x9e0a
   11d04:	movt	r0, #1
   11d08:	bl	1294c <putc_unlocked@plt+0x1330>
   11d0c:	bl	11394 <gai_strerror@plt>
   11d10:	mov	r1, r0
   11d14:	movw	r0, #40442	; 0x9dfa
   11d18:	movt	r0, #1
   11d1c:	bl	129b0 <putc_unlocked@plt+0x1394>
   11d20:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11d24:	add	fp, sp, #28
   11d28:	sub	sp, sp, #108	; 0x6c
   11d2c:	mov	r5, r1
   11d30:	mov	r4, r0
   11d34:	mov	r0, r1
   11d38:	bl	114c0 <strlen@plt>
   11d3c:	add	r0, r0, #4
   11d40:	bl	1474c <_obstack_memory_used@@Base+0x4d8>
   11d44:	mov	r6, r0
   11d48:	mov	r1, #61	; 0x3d
   11d4c:	strb	r1, [r0], #1
   11d50:	mov	r1, r5
   11d54:	bl	11430 <strcpy@plt>
   11d58:	mov	r0, r6
   11d5c:	bl	114c0 <strlen@plt>
   11d60:	movw	r1, #2573	; 0xa0d
   11d64:	mov	r2, r6
   11d68:	strh	r1, [r2, r0]!
   11d6c:	mov	r7, #0
   11d70:	strb	r7, [r2, #2]
   11d74:	movw	r1, #36231	; 0x8d87
   11d78:	movt	r1, #1
   11d7c:	mov	r0, r4
   11d80:	bl	11328 <fdopen@plt>
   11d84:	mov	r5, r0
   11d88:	mov	r0, r6
   11d8c:	bl	114c0 <strlen@plt>
   11d90:	mov	r2, r0
   11d94:	mov	r0, r4
   11d98:	str	r6, [sp, #4]
   11d9c:	mov	r1, r6
   11da0:	bl	11514 <write@plt>
   11da4:	cmp	r0, #0
   11da8:	bmi	11eb8 <putc_unlocked@plt+0x89c>
   11dac:	add	r6, sp, #8
   11db0:	mov	r0, r6
   11db4:	mov	r1, #100	; 0x64
   11db8:	mov	r2, r5
   11dbc:	bl	113a0 <fgets@plt>
   11dc0:	cmp	r0, #0
   11dc4:	beq	11e94 <putc_unlocked@plt+0x878>
   11dc8:	add	r4, r6, #1
   11dcc:	movw	r9, #40417	; 0x9de1
   11dd0:	movt	r9, #1
   11dd4:	movw	r8, #59580	; 0xe8bc
   11dd8:	movt	r8, #2
   11ddc:	mov	r7, #0
   11de0:	b	11e08 <putc_unlocked@plt+0x7ec>
   11de4:	ldr	r1, [r8]
   11de8:	mov	r0, r6
   11dec:	bl	115d4 <fputs@plt>
   11df0:	mov	r0, r6
   11df4:	mov	r1, #100	; 0x64
   11df8:	mov	r2, r5
   11dfc:	bl	113a0 <fgets@plt>
   11e00:	cmp	r0, #0
   11e04:	beq	11e94 <putc_unlocked@plt+0x878>
   11e08:	mov	r0, r6
   11e0c:	mov	r1, r9
   11e10:	mov	r2, #16
   11e14:	bl	114b4 <bcmp@plt>
   11e18:	cmp	r7, #0
   11e1c:	cmpeq	r0, #0
   11e20:	bne	11de4 <putc_unlocked@plt+0x7c8>
   11e24:	mov	r1, r4
   11e28:	mov	r2, r6
   11e2c:	mov	r0, r2
   11e30:	mov	sl, r1
   11e34:	add	r1, r1, #1
   11e38:	ldrb	r3, [r2], #1
   11e3c:	cmp	r3, #58	; 0x3a
   11e40:	bne	11e2c <putc_unlocked@plt+0x810>
   11e44:	add	sl, sl, #1
   11e48:	ldrb	r1, [r0, #1]!
   11e4c:	cmp	r1, #32
   11e50:	beq	11e44 <putc_unlocked@plt+0x828>
   11e54:	bl	114c0 <strlen@plt>
   11e58:	add	r0, r0, #1
   11e5c:	bl	1474c <_obstack_memory_used@@Base+0x4d8>
   11e60:	mov	r7, r0
   11e64:	mov	r0, #0
   11e68:	b	11e74 <putc_unlocked@plt+0x858>
   11e6c:	strb	r1, [r7, r0]
   11e70:	add	r0, r0, #1
   11e74:	add	r1, sl, r0
   11e78:	ldrb	r1, [r1, #-1]
   11e7c:	cmp	r1, #10
   11e80:	cmpne	r1, #13
   11e84:	bne	11e6c <putc_unlocked@plt+0x850>
   11e88:	mov	r1, #0
   11e8c:	strb	r1, [r7, r0]
   11e90:	b	11de4 <putc_unlocked@plt+0x7c8>
   11e94:	mov	r0, r5
   11e98:	bl	113ac <ferror@plt>
   11e9c:	cmp	r0, #0
   11ea0:	bne	11ec4 <putc_unlocked@plt+0x8a8>
   11ea4:	ldr	r0, [sp, #4]
   11ea8:	bl	13e88 <argp_usage@@Base+0x190>
   11eac:	mov	r0, r7
   11eb0:	sub	sp, fp, #28
   11eb4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11eb8:	movw	r0, #40232	; 0x9d28
   11ebc:	movt	r0, #1
   11ec0:	bl	1294c <putc_unlocked@plt+0x1330>
   11ec4:	movw	r0, #40327	; 0x9d87
   11ec8:	movt	r0, #1
   11ecc:	bl	1294c <putc_unlocked@plt+0x1330>
   11ed0:	b	115f8 <close@plt>
   11ed4:	push	{r4, r5, r6, sl, fp, lr}
   11ed8:	add	fp, sp, #16
   11edc:	sub	sp, sp, #8
   11ee0:	ldrb	r1, [r0]
   11ee4:	movw	r4, #34844	; 0x881c
   11ee8:	movt	r4, #1
   11eec:	cmp	r1, #0
   11ef0:	beq	11f34 <putc_unlocked@plt+0x918>
   11ef4:	add	r6, r0, #2
   11ef8:	ldrb	r0, [r6, #-1]
   11efc:	cmp	r0, #32
   11f00:	bne	11f14 <putc_unlocked@plt+0x8f8>
   11f04:	ldrb	r0, [r6], #2
   11f08:	cmp	r0, #0
   11f0c:	bne	11ef8 <putc_unlocked@plt+0x8dc>
   11f10:	b	11f34 <putc_unlocked@plt+0x918>
   11f14:	sub	r5, r6, #2
   11f18:	mov	r0, r5
   11f1c:	mov	r1, #64	; 0x40
   11f20:	bl	114cc <strchr@plt>
   11f24:	movw	r4, #36012	; 0x8cac
   11f28:	movt	r4, #1
   11f2c:	cmp	r0, #0
   11f30:	beq	11f40 <putc_unlocked@plt+0x924>
   11f34:	mov	r0, r4
   11f38:	sub	sp, fp, #16
   11f3c:	pop	{r4, r5, r6, sl, fp, pc}
   11f40:	movw	r1, #39736	; 0x9b38
   11f44:	movt	r1, #1
   11f48:	mov	r0, r5
   11f4c:	bl	11598 <strpbrk@plt>
   11f50:	cmp	r0, #0
   11f54:	beq	11ff0 <putc_unlocked@plt+0x9d4>
   11f58:	mov	r0, r5
   11f5c:	mov	r1, #58	; 0x3a
   11f60:	bl	114cc <strchr@plt>
   11f64:	cmp	r0, #0
   11f68:	beq	1208c <putc_unlocked@plt+0xa70>
   11f6c:	mov	r0, #0
   11f70:	str	r0, [sp, #4]
   11f74:	str	r0, [sp]
   11f78:	movw	r1, #39756	; 0x9b4c
   11f7c:	movt	r1, #1
   11f80:	add	r2, sp, #4
   11f84:	mov	r3, sp
   11f88:	mov	r0, r5
   11f8c:	bl	11550 <sscanf@plt>
   11f90:	cmp	r0, #0
   11f94:	beq	120e8 <putc_unlocked@plt+0xacc>
   11f98:	movw	r1, #56336	; 0xdc10
   11f9c:	movt	r1, #2
   11fa0:	ldr	r4, [r1, #8]
   11fa4:	cmp	r4, #0
   11fa8:	beq	120f4 <putc_unlocked@plt+0xad8>
   11fac:	ldr	r0, [sp, #4]
   11fb0:	ldrh	r2, [sp]
   11fb4:	orr	r0, r2, r0, lsl #16
   11fb8:	ldm	r1, {r2, r3}
   11fbc:	and	r3, r3, r0
   11fc0:	cmp	r3, r2
   11fc4:	beq	11f34 <putc_unlocked@plt+0x918>
   11fc8:	add	r1, r1, #12
   11fcc:	ldr	r4, [r1, #8]
   11fd0:	cmp	r4, #0
   11fd4:	beq	120f4 <putc_unlocked@plt+0xad8>
   11fd8:	ldm	r1, {r2, r3}
   11fdc:	and	r3, r3, r0
   11fe0:	add	r1, r1, #12
   11fe4:	cmp	r3, r2
   11fe8:	bne	11fcc <putc_unlocked@plt+0x9b0>
   11fec:	b	11f34 <putc_unlocked@plt+0x918>
   11ff0:	sub	r4, r6, #5
   11ff4:	ldrb	r0, [r4, #3]
   11ff8:	add	r4, r4, #1
   11ffc:	cmp	r0, #0
   12000:	bne	11ff4 <putc_unlocked@plt+0x9d8>
   12004:	movw	r1, #36284	; 0x8dbc
   12008:	movt	r1, #1
   1200c:	mov	r0, r5
   12010:	mov	r2, #2
   12014:	bl	114f0 <strncasecmp@plt>
   12018:	cmp	r0, #0
   1201c:	bne	12054 <putc_unlocked@plt+0xa38>
   12020:	ldrb	r0, [r6]
   12024:	cmp	r0, #32
   12028:	subne	r0, r0, #48	; 0x30
   1202c:	uxtbne	r0, r0
   12030:	cmpne	r0, #9
   12034:	bhi	12054 <putc_unlocked@plt+0xa38>
   12038:	mov	r0, r6
   1203c:	bl	11580 <atoi@plt>
   12040:	movw	r1, #56624	; 0xdd30
   12044:	movt	r1, #2
   12048:	sub	sp, fp, #16
   1204c:	pop	{r4, r5, r6, sl, fp, lr}
   12050:	b	1271c <putc_unlocked@plt+0x1100>
   12054:	movw	r1, #39753	; 0x9b49
   12058:	movt	r1, #1
   1205c:	mov	r0, r4
   12060:	mov	r2, #2
   12064:	bl	114f0 <strncasecmp@plt>
   12068:	movw	r2, #39740	; 0x9b3c
   1206c:	movt	r2, #1
   12070:	movw	r1, #36012	; 0x8cac
   12074:	movt	r1, #1
   12078:	cmp	r0, #0
   1207c:	moveq	r1, r2
   12080:	mov	r0, r1
   12084:	sub	sp, fp, #16
   12088:	pop	{r4, r5, r6, sl, fp, pc}
   1208c:	mov	r0, r5
   12090:	bl	12794 <putc_unlocked@plt+0x1178>
   12094:	cmp	r0, #0
   12098:	beq	1211c <putc_unlocked@plt+0xb00>
   1209c:	movw	r1, #45620	; 0xb234
   120a0:	movt	r1, #2
   120a4:	ldr	r4, [r1, #8]
   120a8:	cmp	r4, #0
   120ac:	beq	1218c <putc_unlocked@plt+0xb70>
   120b0:	ldm	r1, {r2, r3}
   120b4:	and	r3, r3, r0
   120b8:	cmp	r3, r2
   120bc:	beq	11f34 <putc_unlocked@plt+0x918>
   120c0:	add	r1, r1, #12
   120c4:	ldr	r4, [r1, #8]
   120c8:	cmp	r4, #0
   120cc:	beq	1218c <putc_unlocked@plt+0xb70>
   120d0:	ldm	r1, {r2, r3}
   120d4:	and	r3, r3, r0
   120d8:	add	r1, r1, #12
   120dc:	cmp	r3, r2
   120e0:	bne	120c4 <putc_unlocked@plt+0xaa8>
   120e4:	b	11f34 <putc_unlocked@plt+0x918>
   120e8:	movw	r4, #36012	; 0x8cac
   120ec:	movt	r4, #1
   120f0:	b	11f34 <putc_unlocked@plt+0x918>
   120f4:	movw	r0, #59588	; 0xe8c4
   120f8:	movt	r0, #2
   120fc:	ldr	r0, [r0]
   12100:	movw	r4, #35672	; 0x8b58
   12104:	movt	r4, #1
   12108:	cmp	r0, #0
   1210c:	beq	11f34 <putc_unlocked@plt+0x918>
   12110:	movw	r0, #39763	; 0x9b53
   12114:	movt	r0, #1
   12118:	b	121b0 <putc_unlocked@plt+0xb94>
   1211c:	movw	r0, #56848	; 0xde10
   12120:	movt	r0, #2
   12124:	ldr	r1, [r0]
   12128:	cmp	r1, #0
   1212c:	beq	12158 <putc_unlocked@plt+0xb3c>
   12130:	add	r6, r0, #4
   12134:	mov	r0, r5
   12138:	bl	12804 <putc_unlocked@plt+0x11e8>
   1213c:	cmp	r0, #0
   12140:	bne	1222c <putc_unlocked@plt+0xc10>
   12144:	add	r0, r6, #8
   12148:	ldr	r1, [r6, #4]
   1214c:	cmp	r1, #0
   12150:	mov	r6, r0
   12154:	bne	12134 <putc_unlocked@plt+0xb18>
   12158:	mov	r0, r5
   1215c:	mov	r1, #46	; 0x2e
   12160:	bl	114cc <strchr@plt>
   12164:	cmp	r0, #0
   12168:	beq	121b8 <putc_unlocked@plt+0xb9c>
   1216c:	movw	r0, #59588	; 0xe8c4
   12170:	movt	r0, #2
   12174:	ldr	r0, [r0]
   12178:	cmp	r0, #0
   1217c:	beq	11f34 <putc_unlocked@plt+0x918>
   12180:	movw	r0, #40006	; 0x9c46
   12184:	movt	r0, #1
   12188:	b	121b0 <putc_unlocked@plt+0xb94>
   1218c:	movw	r0, #59588	; 0xe8c4
   12190:	movt	r0, #2
   12194:	ldr	r0, [r0]
   12198:	movw	r4, #35672	; 0x8b58
   1219c:	movt	r4, #1
   121a0:	cmp	r0, #0
   121a4:	beq	11f34 <putc_unlocked@plt+0x918>
   121a8:	movw	r0, #39853	; 0x9bad
   121ac:	movt	r0, #1
   121b0:	bl	11454 <puts@plt>
   121b4:	b	11f34 <putc_unlocked@plt+0x918>
   121b8:	movw	r0, #45548	; 0xb1ec
   121bc:	movt	r0, #2
   121c0:	ldr	r4, [r0]
   121c4:	cmp	r4, #0
   121c8:	beq	12204 <putc_unlocked@plt+0xbe8>
   121cc:	add	r6, r0, #4
   121d0:	mov	r0, r4
   121d4:	bl	114c0 <strlen@plt>
   121d8:	mov	r2, r0
   121dc:	mov	r0, r5
   121e0:	mov	r1, r4
   121e4:	bl	114f0 <strncasecmp@plt>
   121e8:	cmp	r0, #0
   121ec:	beq	1222c <putc_unlocked@plt+0xc10>
   121f0:	add	r0, r6, #8
   121f4:	ldr	r4, [r6, #4]
   121f8:	cmp	r4, #0
   121fc:	mov	r6, r0
   12200:	bne	121d0 <putc_unlocked@plt+0xbb4>
   12204:	movw	r0, #59588	; 0xe8c4
   12208:	movt	r0, #2
   1220c:	ldr	r0, [r0]
   12210:	movw	r4, #35672	; 0x8b58
   12214:	movt	r4, #1
   12218:	cmp	r0, #0
   1221c:	beq	11f34 <putc_unlocked@plt+0x918>
   12220:	movw	r0, #39939	; 0x9c03
   12224:	movt	r0, #1
   12228:	b	121b0 <putc_unlocked@plt+0xb94>
   1222c:	ldr	r4, [r6]
   12230:	b	11f34 <putc_unlocked@plt+0x918>
   12234:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   12238:	add	fp, sp, #24
   1223c:	mov	r8, r2
   12240:	mov	r7, r1
   12244:	mov	r6, r0
   12248:	mov	r0, r1
   1224c:	bl	114c0 <strlen@plt>
   12250:	mov	r4, r0
   12254:	mov	r0, r8
   12258:	bl	114c0 <strlen@plt>
   1225c:	add	r0, r4, r0
   12260:	add	r0, r0, #13
   12264:	bl	1474c <_obstack_memory_used@@Base+0x4d8>
   12268:	mov	r4, r0
   1226c:	mov	r5, #0
   12270:	strb	r5, [r0]
   12274:	movw	r0, #45336	; 0xb118
   12278:	movt	r0, #2
   1227c:	mov	r1, r6
   12280:	bl	12898 <putc_unlocked@plt+0x127c>
   12284:	cmp	r0, #0
   12288:	bne	122a4 <putc_unlocked@plt+0xc88>
   1228c:	movw	r0, #45396	; 0xb154
   12290:	movt	r0, #2
   12294:	mov	r1, r6
   12298:	bl	12898 <putc_unlocked@plt+0x127c>
   1229c:	cmp	r0, #0
   122a0:	beq	122c8 <putc_unlocked@plt+0xcac>
   122a4:	mov	r0, r4
   122a8:	bl	114c0 <strlen@plt>
   122ac:	movw	r1, #41384	; 0xa1a8
   122b0:	movt	r1, #1
   122b4:	vldr	d16, [r1]
   122b8:	add	r0, r4, r0
   122bc:	strb	r5, [r0, #8]
   122c0:	vst1.8	{d16}, [r0]
   122c4:	mov	r5, #1
   122c8:	ldrb	r0, [r7]
   122cc:	cmp	r0, #0
   122d0:	beq	122ec <putc_unlocked@plt+0xcd0>
   122d4:	cmp	r5, #0
   122d8:	beq	122f8 <putc_unlocked@plt+0xcdc>
   122dc:	mov	r0, r4
   122e0:	mov	r1, r7
   122e4:	bl	11424 <strcat@plt>
   122e8:	b	123fc <putc_unlocked@plt+0xde0>
   122ec:	cmp	r5, #0
   122f0:	beq	1232c <putc_unlocked@plt+0xd10>
   122f4:	b	123fc <putc_unlocked@plt+0xde0>
   122f8:	movw	r1, #35715	; 0x8b83
   122fc:	movt	r1, #1
   12300:	mov	r0, r6
   12304:	bl	11358 <strcmp@plt>
   12308:	cmp	r0, #0
   1230c:	beq	12320 <putc_unlocked@plt+0xd04>
   12310:	movw	r0, #40114	; 0x9cb2
   12314:	movt	r0, #1
   12318:	bl	11454 <puts@plt>
   1231c:	b	1232c <putc_unlocked@plt+0xd10>
   12320:	mov	r0, r4
   12324:	mov	r1, r7
   12328:	bl	11424 <strcat@plt>
   1232c:	movw	r1, #35672	; 0x8b58
   12330:	movt	r1, #1
   12334:	mov	r0, r6
   12338:	bl	11358 <strcmp@plt>
   1233c:	cmp	r0, #0
   12340:	beq	1235c <putc_unlocked@plt+0xd40>
   12344:	movw	r1, #35980	; 0x8c8c
   12348:	movt	r1, #1
   1234c:	mov	r0, r6
   12350:	bl	11358 <strcmp@plt>
   12354:	cmp	r0, #0
   12358:	bne	123a0 <putc_unlocked@plt+0xd84>
   1235c:	movw	r1, #40168	; 0x9ce8
   12360:	movt	r1, #1
   12364:	mov	r0, r8
   12368:	mov	r2, #2
   1236c:	bl	114f0 <strncasecmp@plt>
   12370:	cmp	r0, #0
   12374:	bne	123a0 <putc_unlocked@plt+0xd84>
   12378:	mov	r2, r8
   1237c:	ldrb	r0, [r2, #2]!
   12380:	sub	r0, r0, #48	; 0x30
   12384:	uxtb	r0, r0
   12388:	cmp	r0, #9
   1238c:	bhi	123a0 <putc_unlocked@plt+0xd84>
   12390:	movw	r1, #40171	; 0x9ceb
   12394:	movt	r1, #1
   12398:	mov	r0, r4
   1239c:	b	12460 <putc_unlocked@plt+0xe44>
   123a0:	movw	r1, #35715	; 0x8b83
   123a4:	movt	r1, #1
   123a8:	mov	r0, r6
   123ac:	bl	11358 <strcmp@plt>
   123b0:	cmp	r0, #0
   123b4:	beq	1240c <putc_unlocked@plt+0xdf0>
   123b8:	movw	r1, #40189	; 0x9cfd
   123bc:	movt	r1, #1
   123c0:	mov	r0, r6
   123c4:	bl	11358 <strcmp@plt>
   123c8:	cmp	r0, #0
   123cc:	bne	123e4 <putc_unlocked@plt+0xdc8>
   123d0:	mov	r0, r8
   123d4:	mov	r1, #32
   123d8:	bl	114cc <strchr@plt>
   123dc:	cmp	r0, #0
   123e0:	beq	12450 <putc_unlocked@plt+0xe34>
   123e4:	movw	r1, #39740	; 0x9b3c
   123e8:	movt	r1, #1
   123ec:	mov	r0, r6
   123f0:	bl	11358 <strcmp@plt>
   123f4:	cmp	r0, #0
   123f8:	beq	12418 <putc_unlocked@plt+0xdfc>
   123fc:	mov	r0, r4
   12400:	mov	r1, r8
   12404:	bl	11424 <strcat@plt>
   12408:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1240c:	movw	r1, #40176	; 0x9cf0
   12410:	movt	r1, #1
   12414:	b	12458 <putc_unlocked@plt+0xe3c>
   12418:	movw	r0, #40219	; 0x9d1b
   1241c:	movt	r0, #1
   12420:	bl	11448 <getenv@plt>
   12424:	cmp	r0, #0
   12428:	beq	12444 <putc_unlocked@plt+0xe28>
   1242c:	movw	r1, #40224	; 0x9d20
   12430:	movt	r1, #1
   12434:	mov	r2, #2
   12438:	bl	115e0 <strncmp@plt>
   1243c:	cmp	r0, #0
   12440:	beq	123fc <putc_unlocked@plt+0xde0>
   12444:	movw	r1, #40227	; 0x9d23
   12448:	movt	r1, #1
   1244c:	b	12458 <putc_unlocked@plt+0xe3c>
   12450:	movw	r1, #40209	; 0x9d11
   12454:	movt	r1, #1
   12458:	mov	r0, r4
   1245c:	mov	r2, r8
   12460:	bl	1155c <sprintf@plt>
   12464:	mov	r0, r4
   12468:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1246c:	push	{fp, lr}
   12470:	mov	fp, sp
   12474:	mov	r4, r0
   12478:	movw	r0, #59704	; 0xe938
   1247c:	movt	r0, #2
   12480:	ldr	r0, [r0]
   12484:	bl	11ed0 <putc_unlocked@plt+0x8b4>
   12488:	movw	r0, #40466	; 0x9e12
   1248c:	movt	r0, #1
   12490:	mov	r1, r4
   12494:	bl	129b0 <putc_unlocked@plt+0x1394>
   12498:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1249c:	add	fp, sp, #28
   124a0:	sub	sp, sp, #484	; 0x1e4
   124a4:	sub	sp, sp, #1024	; 0x400
   124a8:	mov	r5, r1
   124ac:	mov	r7, r0
   124b0:	movw	r0, #58848	; 0xe5e0
   124b4:	movt	r0, #2
   124b8:	ldr	r6, [r0]
   124bc:	movw	r1, #36231	; 0x8d87
   124c0:	movt	r1, #1
   124c4:	mov	r0, r7
   124c8:	bl	11328 <fdopen@plt>
   124cc:	mov	r4, r0
   124d0:	mov	r0, r5
   124d4:	bl	114c0 <strlen@plt>
   124d8:	mov	r2, r0
   124dc:	mov	r0, r7
   124e0:	mov	r1, r5
   124e4:	bl	11514 <write@plt>
   124e8:	cmp	r0, #0
   124ec:	bmi	12704 <putc_unlocked@plt+0x10e8>
   124f0:	sub	r5, fp, #232	; 0xe8
   124f4:	mov	r0, r5
   124f8:	mov	r1, #200	; 0xc8
   124fc:	mov	r2, r4
   12500:	bl	113a0 <fgets@plt>
   12504:	cmp	r0, #0
   12508:	beq	126dc <putc_unlocked@plt+0x10c0>
   1250c:	movw	r9, #45444	; 0xb184
   12510:	movt	r9, #2
   12514:	movw	r7, #9217	; 0x2401
   12518:	mov	sl, #0
   1251c:	add	r8, sl, #1
   12520:	cmp	r6, #1
   12524:	bne	1256c <putc_unlocked@plt+0xf50>
   12528:	ldr	r6, [r9, r8, lsl #2]
   1252c:	mov	r0, r6
   12530:	bl	114c0 <strlen@plt>
   12534:	mov	r2, r0
   12538:	mov	r0, r5
   1253c:	mov	r1, r6
   12540:	bl	115e0 <strncmp@plt>
   12544:	mov	r6, r0
   12548:	cmp	r0, #0
   1254c:	movwne	r6, #1
   12550:	mov	r0, r5
   12554:	mov	r1, #200	; 0xc8
   12558:	mov	r2, r4
   1255c:	bl	113a0 <fgets@plt>
   12560:	cmp	r0, #0
   12564:	bne	12520 <putc_unlocked@plt+0xf04>
   12568:	b	126dc <putc_unlocked@plt+0x10c0>
   1256c:	cmp	r6, #0
   12570:	bne	125c4 <putc_unlocked@plt+0xfa8>
   12574:	ldr	r6, [r9]
   12578:	cmp	r6, #0
   1257c:	add	r8, sp, #8
   12580:	mov	sl, #0
   12584:	beq	125bc <putc_unlocked@plt+0xfa0>
   12588:	mov	r0, r6
   1258c:	bl	114c0 <strlen@plt>
   12590:	mov	r2, r0
   12594:	mov	r0, r5
   12598:	mov	r1, r6
   1259c:	bl	115e0 <strncmp@plt>
   125a0:	cmp	r0, #0
   125a4:	beq	126d4 <putc_unlocked@plt+0x10b8>
   125a8:	add	r0, r9, sl, lsl #2
   125ac:	ldr	r6, [r0, #8]
   125b0:	add	sl, sl, #2
   125b4:	cmp	r6, #0
   125b8:	bne	12588 <putc_unlocked@plt+0xf6c>
   125bc:	mov	r6, #0
   125c0:	b	125c8 <putc_unlocked@plt+0xfac>
   125c4:	add	r8, sp, #8
   125c8:	mov	r0, r5
   125cc:	movw	r1, #40238	; 0x9d2e
   125d0:	movt	r1, #1
   125d4:	mov	r2, #10
   125d8:	bl	114b4 <bcmp@plt>
   125dc:	cmp	r0, #0
   125e0:	bne	12670 <putc_unlocked@plt+0x1054>
   125e4:	str	r8, [sp]
   125e8:	mov	r0, r5
   125ec:	movw	r1, #40249	; 0x9d39
   125f0:	movt	r1, #1
   125f4:	sub	r2, fp, #488	; 0x1e8
   125f8:	sub	r3, fp, #504	; 0x1f8
   125fc:	bl	11550 <sscanf@plt>
   12600:	cmp	r0, #3
   12604:	bne	12670 <putc_unlocked@plt+0x1054>
   12608:	movw	r0, #59588	; 0xe8c4
   1260c:	movt	r0, #2
   12610:	ldr	r0, [r0]
   12614:	cmp	r0, #0
   12618:	beq	12630 <putc_unlocked@plt+0x1014>
   1261c:	movw	r0, #40295	; 0x9d67
   12620:	movt	r0, #1
   12624:	mov	r1, r8
   12628:	sub	r2, fp, #488	; 0x1e8
   1262c:	bl	11364 <printf@plt>
   12630:	mov	r0, r8
   12634:	bl	114c0 <strlen@plt>
   12638:	add	r0, r8, r0
   1263c:	movw	r1, #2573	; 0xa0d
   12640:	strh	r1, [r0]
   12644:	mov	r1, #0
   12648:	strb	r1, [r0, #2]
   1264c:	sub	r0, fp, #488	; 0x1e8
   12650:	sub	r1, fp, #504	; 0x1f8
   12654:	bl	11c04 <putc_unlocked@plt+0x5e8>
   12658:	str	r0, [sp, #4]
   1265c:	mov	r1, r8
   12660:	bl	12498 <putc_unlocked@plt+0xe7c>
   12664:	ldr	r0, [sp, #4]
   12668:	bl	11ed0 <putc_unlocked@plt+0x8b4>
   1266c:	b	126b8 <putc_unlocked@plt+0x109c>
   12670:	mov	r0, r5
   12674:	mov	r2, #1
   12678:	b	12680 <putc_unlocked@plt+0x1064>
   1267c:	add	r0, r0, #1
   12680:	ldrb	r1, [r0]
   12684:	cmp	r1, #13
   12688:	bhi	1267c <putc_unlocked@plt+0x1060>
   1268c:	tst	r7, r2, lsl r1
   12690:	beq	1267c <putc_unlocked@plt+0x1060>
   12694:	mov	r1, #0
   12698:	strb	r1, [r0]
   1269c:	movw	r0, #59580	; 0xe8bc
   126a0:	movt	r0, #2
   126a4:	ldr	r0, [r0]
   126a8:	movw	r1, #42056	; 0xa448
   126ac:	movt	r1, #1
   126b0:	mov	r2, r5
   126b4:	bl	114d8 <fprintf@plt>
   126b8:	mov	r0, r5
   126bc:	mov	r1, #200	; 0xc8
   126c0:	mov	r2, r4
   126c4:	bl	113a0 <fgets@plt>
   126c8:	cmp	r0, #0
   126cc:	bne	1251c <putc_unlocked@plt+0xf00>
   126d0:	b	126dc <putc_unlocked@plt+0x10c0>
   126d4:	mov	r6, #1
   126d8:	b	126b8 <putc_unlocked@plt+0x109c>
   126dc:	mov	r0, r4
   126e0:	bl	113ac <ferror@plt>
   126e4:	cmp	r0, #0
   126e8:	bne	12710 <putc_unlocked@plt+0x10f4>
   126ec:	cmp	r6, #1
   126f0:	subne	sp, fp, #28
   126f4:	popne	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   126f8:	movw	r0, #40333	; 0x9d8d
   126fc:	movt	r0, #1
   12700:	bl	129b0 <putc_unlocked@plt+0x1394>
   12704:	movw	r0, #40232	; 0x9d28
   12708:	movt	r0, #1
   1270c:	bl	1294c <putc_unlocked@plt+0x1330>
   12710:	movw	r0, #40327	; 0x9d87
   12714:	movt	r0, #1
   12718:	bl	1294c <putc_unlocked@plt+0x1330>
   1271c:	push	{r4, r5, fp, lr}
   12720:	add	fp, sp, #8
   12724:	mov	r5, r1
   12728:	mov	r4, r0
   1272c:	movw	r0, #5072	; 0x13d0
   12730:	movt	r0, #6
   12734:	cmp	r4, r0
   12738:	blt	12748 <putc_unlocked@plt+0x112c>
   1273c:	movw	r0, #40066	; 0x9c82
   12740:	movt	r0, #1
   12744:	bl	11454 <puts@plt>
   12748:	ldr	r0, [r5, #4]
   1274c:	movw	r1, #35672	; 0x8b58
   12750:	movt	r1, #1
   12754:	cmp	r0, #0
   12758:	beq	1278c <putc_unlocked@plt+0x1170>
   1275c:	add	r2, r5, #12
   12760:	b	12770 <putc_unlocked@plt+0x1154>
   12764:	ldr	r0, [r2], #8
   12768:	cmp	r0, #0
   1276c:	beq	1278c <putc_unlocked@plt+0x1170>
   12770:	ldrh	r3, [r2, #-12]
   12774:	cmp	r3, r4
   12778:	bgt	12764 <putc_unlocked@plt+0x1148>
   1277c:	ldrh	r3, [r2, #-10]
   12780:	cmp	r3, r4
   12784:	blt	12764 <putc_unlocked@plt+0x1148>
   12788:	pop	{r4, r5, fp, pc}
   1278c:	mov	r0, r1
   12790:	pop	{r4, r5, fp, pc}
   12794:	push	{r4, sl, fp, lr}
   12798:	add	fp, sp, #8
   1279c:	sub	sp, sp, #24
   127a0:	mov	r4, #0
   127a4:	cmp	r0, #0
   127a8:	beq	127f8 <putc_unlocked@plt+0x11dc>
   127ac:	add	r1, sp, #8
   127b0:	add	r2, sp, #12
   127b4:	str	r2, [sp]
   127b8:	str	r1, [sp, #4]
   127bc:	movw	r1, #40494	; 0x9e2e
   127c0:	movt	r1, #1
   127c4:	sub	r2, fp, #12
   127c8:	add	r3, sp, #16
   127cc:	bl	11550 <sscanf@plt>
   127d0:	cmp	r0, #4
   127d4:	bne	127f8 <putc_unlocked@plt+0x11dc>
   127d8:	ldr	r0, [sp, #16]
   127dc:	lsl	r0, r0, #16
   127e0:	ldr	r1, [fp, #-12]
   127e4:	add	r0, r0, r1, lsl #24
   127e8:	ldr	r1, [sp, #12]
   127ec:	add	r0, r0, r1, lsl #8
   127f0:	ldr	r1, [sp, #8]
   127f4:	add	r4, r0, r1
   127f8:	mov	r0, r4
   127fc:	sub	sp, fp, #8
   12800:	pop	{r4, sl, fp, pc}
   12804:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12808:	add	fp, sp, #28
   1280c:	sub	sp, sp, #4
   12810:	mov	r9, r1
   12814:	mov	r8, r0
   12818:	mov	r7, r0
   1281c:	ldrb	r0, [r7], #1
   12820:	cmp	r0, #0
   12824:	bne	1281c <putc_unlocked@plt+0x1200>
   12828:	mov	r0, #0
   1282c:	mov	r4, r9
   12830:	mov	r5, r0
   12834:	sub	r0, r0, #1
   12838:	ldrb	r1, [r4], #1
   1283c:	cmp	r1, #0
   12840:	bne	12830 <putc_unlocked@plt+0x1214>
   12844:	mvn	r6, #1
   12848:	mov	sl, #0
   1284c:	add	r0, r4, r6
   12850:	cmp	r0, r9
   12854:	addcs	r0, r7, r6
   12858:	cmpcs	r0, r8
   1285c:	bcc	1288c <putc_unlocked@plt+0x1270>
   12860:	bl	11484 <__ctype_tolower_loc@plt>
   12864:	ldrb	r1, [r4, r6]
   12868:	ldrb	r2, [r7, r6]
   1286c:	ldr	r0, [r0]
   12870:	ldr	r0, [r0, r2, lsl #2]
   12874:	cmp	r0, r1
   12878:	bne	1288c <putc_unlocked@plt+0x1270>
   1287c:	adds	r5, r5, #1
   12880:	sub	r6, r6, #1
   12884:	bne	1284c <putc_unlocked@plt+0x1230>
   12888:	mov	sl, #1
   1288c:	mov	r0, sl
   12890:	sub	sp, fp, #28
   12894:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12898:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1289c:	add	fp, sp, #24
   128a0:	sub	sp, sp, #8
   128a4:	mov	r5, r1
   128a8:	mov	r6, r0
   128ac:	add	r1, sp, #4
   128b0:	mov	r0, r5
   128b4:	bl	1134c <inet_aton@plt>
   128b8:	ldr	r4, [r6]
   128bc:	mov	r8, #0
   128c0:	cmp	r4, #0
   128c4:	beq	12940 <putc_unlocked@plt+0x1324>
   128c8:	mov	r7, r0
   128cc:	b	128dc <putc_unlocked@plt+0x12c0>
   128d0:	ldr	r4, [r6, #4]!
   128d4:	cmp	r4, #0
   128d8:	beq	12940 <putc_unlocked@plt+0x1324>
   128dc:	mov	r0, r4
   128e0:	mov	r1, r5
   128e4:	bl	11358 <strcmp@plt>
   128e8:	cmp	r0, #0
   128ec:	beq	1293c <putc_unlocked@plt+0x1320>
   128f0:	cmp	r7, #0
   128f4:	beq	128d0 <putc_unlocked@plt+0x12b4>
   128f8:	mov	r0, r4
   128fc:	bl	115c8 <gethostbyname@plt>
   12900:	cmp	r0, #0
   12904:	beq	128d0 <putc_unlocked@plt+0x12b4>
   12908:	ldr	r0, [r0, #16]
   1290c:	ldr	r1, [r0]
   12910:	cmp	r1, #0
   12914:	beq	128d0 <putc_unlocked@plt+0x12b4>
   12918:	add	r0, r0, #4
   1291c:	ldr	r2, [sp, #4]
   12920:	ldr	r1, [r1]
   12924:	cmp	r1, r2
   12928:	beq	1293c <putc_unlocked@plt+0x1320>
   1292c:	ldr	r1, [r0], #4
   12930:	cmp	r1, #0
   12934:	bne	12920 <putc_unlocked@plt+0x1304>
   12938:	b	128d0 <putc_unlocked@plt+0x12b4>
   1293c:	mov	r8, #1
   12940:	mov	r0, r8
   12944:	sub	sp, fp, #24
   12948:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1294c:	sub	sp, sp, #12
   12950:	push	{fp, lr}
   12954:	mov	fp, sp
   12958:	sub	sp, sp, #4
   1295c:	mov	ip, r0
   12960:	add	r0, fp, #8
   12964:	stm	r0, {r1, r2, r3}
   12968:	add	r2, fp, #8
   1296c:	str	r2, [sp]
   12970:	movw	r4, #59576	; 0xe8b8
   12974:	movt	r4, #2
   12978:	ldr	r0, [r4]
   1297c:	mov	r1, ip
   12980:	bl	11538 <vfprintf@plt>
   12984:	ldr	r4, [r4]
   12988:	bl	114e4 <__errno_location@plt>
   1298c:	ldr	r0, [r0]
   12990:	bl	11478 <strerror@plt>
   12994:	mov	r2, r0
   12998:	movw	r1, #42669	; 0xa6ad
   1299c:	movt	r1, #1
   129a0:	mov	r0, r4
   129a4:	bl	114d8 <fprintf@plt>
   129a8:	mov	r0, #1
   129ac:	bl	114a8 <exit@plt>
   129b0:	sub	sp, sp, #12
   129b4:	push	{fp, lr}
   129b8:	mov	fp, sp
   129bc:	sub	sp, sp, #4
   129c0:	mov	ip, r0
   129c4:	add	r0, fp, #8
   129c8:	stm	r0, {r1, r2, r3}
   129cc:	add	r2, fp, #8
   129d0:	str	r2, [sp]
   129d4:	movw	r4, #59576	; 0xe8b8
   129d8:	movt	r4, #2
   129dc:	ldr	r0, [r4]
   129e0:	mov	r1, ip
   129e4:	bl	11538 <vfprintf@plt>
   129e8:	ldr	r1, [r4]
   129ec:	mov	r0, #10
   129f0:	bl	11544 <fputc@plt>
   129f4:	mov	r0, #1
   129f8:	bl	114a8 <exit@plt>
   129fc:	push	{r4, r5, r6, r7, fp, lr}
   12a00:	add	fp, sp, #16
   12a04:	mov	r5, #7
   12a08:	cmp	r0, #1
   12a0c:	blt	12b3c <putc_unlocked@plt+0x1520>
   12a10:	mov	r6, r0
   12a14:	cmp	r0, #127	; 0x7f
   12a18:	bhi	12b3c <putc_unlocked@plt+0x1520>
   12a1c:	mov	r4, r1
   12a20:	sub	r1, r6, #113	; 0x71
   12a24:	cmp	r1, #5
   12a28:	bhi	12a44 <putc_unlocked@plt+0x1428>
   12a2c:	mov	r0, #1
   12a30:	mov	r2, #41	; 0x29
   12a34:	tst	r2, r0, lsl r1
   12a38:	movwne	r1, #59600	; 0xe8d0
   12a3c:	movtne	r1, #2
   12a40:	strne	r0, [r1]
   12a44:	movw	r7, #59660	; 0xe90c
   12a48:	movt	r7, #2
   12a4c:	ldr	r0, [r7, #12]
   12a50:	ldr	r1, [r7, #16]
   12a54:	cmp	r1, r0
   12a58:	bne	12a6c <putc_unlocked@plt+0x1450>
   12a5c:	movw	r0, #59660	; 0xe90c
   12a60:	movt	r0, #2
   12a64:	mov	r1, #1
   12a68:	bl	14060 <_obstack_newchunk@@Base>
   12a6c:	ldr	r0, [r7, #12]
   12a70:	add	r1, r0, #1
   12a74:	str	r1, [r7, #12]
   12a78:	mov	r1, #45	; 0x2d
   12a7c:	strb	r1, [r0]
   12a80:	ldr	r0, [r7, #12]
   12a84:	ldr	r1, [r7, #16]
   12a88:	cmp	r1, r0
   12a8c:	bne	12aa0 <putc_unlocked@plt+0x1484>
   12a90:	movw	r0, #59660	; 0xe90c
   12a94:	movt	r0, #2
   12a98:	mov	r1, #1
   12a9c:	bl	14060 <_obstack_newchunk@@Base>
   12aa0:	ldr	r0, [r7, #12]
   12aa4:	add	r1, r0, #1
   12aa8:	str	r1, [r7, #12]
   12aac:	strb	r6, [r0]
   12ab0:	mov	r5, #0
   12ab4:	cmp	r4, #0
   12ab8:	beq	12b3c <putc_unlocked@plt+0x1520>
   12abc:	ldr	r0, [r7, #12]
   12ac0:	ldr	r1, [r7, #16]
   12ac4:	cmp	r1, r0
   12ac8:	bne	12adc <putc_unlocked@plt+0x14c0>
   12acc:	movw	r0, #59660	; 0xe90c
   12ad0:	movt	r0, #2
   12ad4:	mov	r1, #1
   12ad8:	bl	14060 <_obstack_newchunk@@Base>
   12adc:	ldr	r0, [r7, #12]
   12ae0:	add	r1, r0, #1
   12ae4:	str	r1, [r7, #12]
   12ae8:	mov	r1, #32
   12aec:	strb	r1, [r0]
   12af0:	mov	r0, r4
   12af4:	bl	114c0 <strlen@plt>
   12af8:	mov	r6, r0
   12afc:	ldr	r0, [r7, #12]
   12b00:	ldr	r1, [r7, #16]
   12b04:	sub	r0, r1, r0
   12b08:	cmp	r0, r6
   12b0c:	bcs	12b20 <putc_unlocked@plt+0x1504>
   12b10:	movw	r0, #59660	; 0xe90c
   12b14:	movt	r0, #2
   12b18:	mov	r1, r6
   12b1c:	bl	14060 <_obstack_newchunk@@Base>
   12b20:	ldr	r0, [r7, #12]
   12b24:	mov	r1, r4
   12b28:	mov	r2, r6
   12b2c:	bl	113c4 <memcpy@plt>
   12b30:	ldr	r0, [r7, #12]
   12b34:	add	r0, r0, r6
   12b38:	str	r0, [r7, #12]
   12b3c:	mov	r0, r5
   12b40:	pop	{r4, r5, r6, r7, fp, pc}
   12b44:	push	{r4, r5, r6, sl, fp, lr}
   12b48:	add	fp, sp, #16
   12b4c:	mov	r5, r1
   12b50:	mov	r1, r0
   12b54:	mov	r0, #7
   12b58:	cmp	r1, #103	; 0x67
   12b5c:	bgt	12b84 <putc_unlocked@plt+0x1568>
   12b60:	cmp	r1, #72	; 0x48
   12b64:	beq	12be0 <putc_unlocked@plt+0x15c4>
   12b68:	cmp	r1, #86	; 0x56
   12b6c:	bne	12c04 <putc_unlocked@plt+0x15e8>
   12b70:	movw	r0, #59588	; 0xe8c4
   12b74:	movt	r0, #2
   12b78:	mov	r1, #1
   12b7c:	str	r1, [r0]
   12b80:	b	12c00 <putc_unlocked@plt+0x15e4>
   12b84:	cmp	r1, #112	; 0x70
   12b88:	beq	12bf4 <putc_unlocked@plt+0x15d8>
   12b8c:	cmp	r1, #104	; 0x68
   12b90:	bne	12c04 <putc_unlocked@plt+0x15e8>
   12b94:	mov	r0, r5
   12b98:	bl	114c0 <strlen@plt>
   12b9c:	add	r0, r0, #1
   12ba0:	bl	1474c <_obstack_memory_used@@Base+0x4d8>
   12ba4:	mov	r4, r0
   12ba8:	movw	r0, #59592	; 0xe8c8
   12bac:	movt	r0, #2
   12bb0:	str	r4, [r0]
   12bb4:	add	r5, r5, #1
   12bb8:	ldrb	r6, [r5, #-1]
   12bbc:	cmp	r6, #0
   12bc0:	beq	12c14 <putc_unlocked@plt+0x15f8>
   12bc4:	cmp	r6, #58	; 0x3a
   12bc8:	beq	12c08 <putc_unlocked@plt+0x15ec>
   12bcc:	bl	11484 <__ctype_tolower_loc@plt>
   12bd0:	ldr	r0, [r0]
   12bd4:	ldr	r0, [r0, r6, lsl #2]
   12bd8:	strb	r0, [r4], #1
   12bdc:	b	12bb4 <putc_unlocked@plt+0x1598>
   12be0:	movw	r1, #58848	; 0xe5e0
   12be4:	movt	r1, #2
   12be8:	mov	r0, #0
   12bec:	str	r0, [r1]
   12bf0:	pop	{r4, r5, r6, sl, fp, pc}
   12bf4:	movw	r0, #59596	; 0xe8cc
   12bf8:	movt	r0, #2
   12bfc:	str	r5, [r0]
   12c00:	mov	r0, #0
   12c04:	pop	{r4, r5, r6, sl, fp, pc}
   12c08:	movw	r0, #59596	; 0xe8cc
   12c0c:	movt	r0, #2
   12c10:	str	r5, [r0]
   12c14:	mov	r0, #0
   12c18:	strb	r0, [r4]
   12c1c:	pop	{r4, r5, r6, sl, fp, pc}

00012c20 <argp_parse@@Base>:
   12c20:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   12c24:	add	fp, sp, #24
   12c28:	sub	sp, sp, #128	; 0x80
   12c2c:	mov	r6, r3
   12c30:	mov	r4, r2
   12c34:	mov	r8, r1
   12c38:	mov	r7, r0
   12c3c:	mov	r0, #0
   12c40:	str	r0, [fp, #-152]	; 0xffffff68
   12c44:	tst	r3, #1
   12c48:	bne	12c88 <argp_parse@@Base+0x68>
   12c4c:	movw	r0, #59572	; 0xe8b4
   12c50:	movt	r0, #2
   12c54:	ldr	r1, [r0]
   12c58:	cmp	r1, #0
   12c5c:	bne	12c68 <argp_parse@@Base+0x48>
   12c60:	ldr	r1, [r4]
   12c64:	str	r1, [r0]
   12c68:	movw	r5, #59568	; 0xe8b0
   12c6c:	movt	r5, #2
   12c70:	ldr	r0, [r5]
   12c74:	cmp	r0, #0
   12c78:	bne	12c88 <argp_parse@@Base+0x68>
   12c7c:	ldr	r0, [r4]
   12c80:	bl	13e04 <argp_usage@@Base+0x10c>
   12c84:	str	r0, [r5]
   12c88:	ldr	ip, [fp, #12]
   12c8c:	tst	r6, #16
   12c90:	bne	12d40 <argp_parse@@Base+0x120>
   12c94:	mov	r3, sp
   12c98:	sub	r0, r3, #64	; 0x40
   12c9c:	mov	sp, r0
   12ca0:	mov	r5, sp
   12ca4:	sub	r1, r5, #32
   12ca8:	mov	sp, r1
   12cac:	vmov.i32	q8, #0	; 0x00000000
   12cb0:	sub	r5, r5, #20
   12cb4:	vst1.32	{d16-d17}, [r5]
   12cb8:	mov	r5, r1
   12cbc:	vst1.64	{d16-d17}, [r5]!
   12cc0:	str	r0, [r5]
   12cc4:	sub	r5, r3, #32
   12cc8:	vst1.64	{d16-d17}, [r5]
   12ccc:	sub	r3, r3, #48	; 0x30
   12cd0:	vst1.64	{d16-d17}, [r3]
   12cd4:	mov	r3, #48	; 0x30
   12cd8:	mov	r2, r0
   12cdc:	vst1.64	{d16-d17}, [r2], r3
   12ce0:	vst1.64	{d16-d17}, [r2]
   12ce4:	cmp	r7, #0
   12ce8:	strne	r7, [r0], #16
   12cec:	movw	r2, #41400	; 0xa1b8
   12cf0:	movt	r2, #1
   12cf4:	mov	r3, r0
   12cf8:	str	r2, [r3], #16
   12cfc:	movw	r2, #59712	; 0xe940
   12d00:	movt	r2, #2
   12d04:	ldr	r2, [r2]
   12d08:	cmp	r2, #0
   12d0c:	bne	12d24 <argp_parse@@Base+0x104>
   12d10:	movw	r2, #59608	; 0xe8d8
   12d14:	movt	r2, #2
   12d18:	ldr	r2, [r2]
   12d1c:	cmp	r2, #0
   12d20:	beq	12d34 <argp_parse@@Base+0x114>
   12d24:	movw	r0, #41428	; 0xa1d4
   12d28:	movt	r0, #1
   12d2c:	str	r0, [r3]
   12d30:	mov	r0, r3
   12d34:	mov	r2, #0
   12d38:	str	r2, [r0, #16]
   12d3c:	b	12d44 <argp_parse@@Base+0x124>
   12d40:	mov	r1, r7
   12d44:	push	{r6, ip}
   12d48:	sub	r0, fp, #148	; 0x94
   12d4c:	mov	r2, r8
   12d50:	mov	r3, r4
   12d54:	bl	12da8 <argp_parse@@Base+0x188>
   12d58:	add	sp, sp, #8
   12d5c:	cmp	r0, #0
   12d60:	beq	12d6c <argp_parse@@Base+0x14c>
   12d64:	sub	sp, fp, #24
   12d68:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   12d6c:	ldr	r4, [fp, #8]
   12d70:	sub	r5, fp, #148	; 0x94
   12d74:	sub	r6, fp, #152	; 0x98
   12d78:	mov	r0, r5
   12d7c:	mov	r1, r6
   12d80:	bl	1305c <argp_parse@@Base+0x43c>
   12d84:	cmp	r0, #0
   12d88:	beq	12d78 <argp_parse@@Base+0x158>
   12d8c:	mov	r1, r0
   12d90:	ldr	r2, [fp, #-152]	; 0xffffff68
   12d94:	sub	r0, fp, #148	; 0x94
   12d98:	mov	r3, r4
   12d9c:	bl	131d0 <argp_parse@@Base+0x5b0>
   12da0:	sub	sp, fp, #24
   12da4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   12da8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12dac:	add	fp, sp, #28
   12db0:	sub	sp, sp, #60	; 0x3c
   12db4:	str	r3, [sp, #12]
   12db8:	str	r2, [sp, #8]
   12dbc:	mov	r5, r1
   12dc0:	mov	r4, r0
   12dc4:	vmov.i32	q8, #0	; 0x00000000
   12dc8:	mov	r7, #12
   12dcc:	add	r6, sp, #16
   12dd0:	mov	r0, r6
   12dd4:	vst1.64	{d16-d17}, [r0], r7
   12dd8:	vst1.32	{d16-d17}, [r0]
   12ddc:	mov	r0, #0
   12de0:	str	r0, [sp, #56]	; 0x38
   12de4:	str	r0, [sp, #52]	; 0x34
   12de8:	str	r0, [sp, #48]	; 0x30
   12dec:	ldr	r1, [fp, #8]
   12df0:	mov	r0, #1
   12df4:	bic	r0, r0, r1, lsr #2
   12df8:	str	r0, [sp, #44]	; 0x2c
   12dfc:	cmp	r5, #0
   12e00:	addne	r1, sp, #44	; 0x2c
   12e04:	movne	r0, r5
   12e08:	blne	13618 <argp_parse@@Base+0x9f8>
   12e0c:	str	r5, [sp, #4]
   12e10:	add	r5, sp, #44	; 0x2c
   12e14:	ldm	r5, {r0, r1, r2, r5}
   12e18:	add	r2, r2, r2, lsl #3
   12e1c:	mov	r3, #36	; 0x24
   12e20:	add	r9, r3, r2, lsl #2
   12e24:	add	r8, r9, r5, lsl #2
   12e28:	add	r1, r8, r1, lsl #4
   12e2c:	add	sl, r1, #16
   12e30:	add	r0, r0, sl
   12e34:	add	r0, r0, #1
   12e38:	bl	14b58 <_obstack_memory_used@@Base+0x8e4>
   12e3c:	str	r0, [r4, #120]	; 0x78
   12e40:	cmp	r0, #0
   12e44:	beq	13050 <argp_parse@@Base+0x430>
   12e48:	lsl	r2, r5, #2
   12e4c:	str	r0, [r4, #48]	; 0x30
   12e50:	add	r1, r0, r9
   12e54:	str	r1, [r4, #56]	; 0x38
   12e58:	add	r3, r0, r8
   12e5c:	add	r0, r0, sl
   12e60:	stmib	r4, {r0, r3}
   12e64:	mov	r0, #1
   12e68:	str	r0, [r4, #12]
   12e6c:	str	r0, [r4, #16]
   12e70:	mov	r8, #1
   12e74:	mov	r0, #12
   12e78:	vld1.64	{d16-d17}, [r6], r0
   12e7c:	add	r0, r4, #20
   12e80:	vld1.32	{d18-d19}, [r6]
   12e84:	vst1.32	{d16-d17}, [r0]
   12e88:	add	r0, r4, #32
   12e8c:	vst1.32	{d18-d19}, [r0]
   12e90:	mov	r7, #0
   12e94:	mov	r0, r1
   12e98:	mov	r1, #0
   12e9c:	bl	11508 <memset@plt>
   12ea0:	mov	r0, r4
   12ea4:	ldr	r1, [sp, #4]
   12ea8:	ldr	r5, [fp, #8]
   12eac:	mov	r2, r5
   12eb0:	bl	136e8 <argp_parse@@Base+0xac8>
   12eb4:	vmov.i32	q8, #0	; 0x00000000
   12eb8:	str	r5, [r4, #80]	; 0x50
   12ebc:	ldr	r0, [sp, #12]
   12ec0:	str	r0, [r4, #72]	; 0x48
   12ec4:	ldr	r0, [sp, #8]
   12ec8:	str	r0, [r4, #68]	; 0x44
   12ecc:	add	r0, r4, #84	; 0x54
   12ed0:	vst1.32	{d16-d17}, [r0]
   12ed4:	ldr	r0, [r4]
   12ed8:	ldr	r6, [r4, #48]	; 0x30
   12edc:	ldr	r1, [r4, #52]	; 0x34
   12ee0:	mov	r5, r4
   12ee4:	str	r0, [r5, #64]!	; 0x40
   12ee8:	movw	r0, #59576	; 0xe8b8
   12eec:	movt	r0, #2
   12ef0:	ldr	r0, [r0]
   12ef4:	movw	r2, #59580	; 0xe8bc
   12ef8:	movt	r2, #2
   12efc:	ldr	r2, [r2]
   12f00:	str	r8, [r4, #60]	; 0x3c
   12f04:	str	r7, [r4, #76]	; 0x4c
   12f08:	str	r7, [r4, #100]	; 0x64
   12f0c:	str	r7, [r4, #104]	; 0x68
   12f10:	add	r3, r4, #108	; 0x6c
   12f14:	stm	r3, {r0, r2, r4}
   12f18:	cmp	r6, r1
   12f1c:	ldrcc	r0, [fp, #12]
   12f20:	strcc	r0, [r6, #24]
   12f24:	ldr	r0, [r4, #52]	; 0x34
   12f28:	cmp	r6, r0
   12f2c:	bcs	12fd4 <argp_parse@@Base+0x3b4>
   12f30:	mov	r7, #0
   12f34:	movw	r9, #3
   12f38:	movt	r9, #256	; 0x100
   12f3c:	b	12f68 <argp_parse@@Base+0x348>
   12f40:	mov	r0, r6
   12f44:	mov	r1, r5
   12f48:	mov	r2, r9
   12f4c:	mov	r3, #0
   12f50:	bl	1379c <argp_parse@@Base+0xb7c>
   12f54:	mov	r7, r0
   12f58:	add	r6, r6, #36	; 0x24
   12f5c:	ldr	r0, [r4, #52]	; 0x34
   12f60:	cmp	r6, r0
   12f64:	bcs	12fc8 <argp_parse@@Base+0x3a8>
   12f68:	cmp	r7, #7
   12f6c:	cmpne	r7, #0
   12f70:	bne	13050 <argp_parse@@Base+0x430>
   12f74:	ldr	r0, [r6, #16]
   12f78:	cmp	r0, #0
   12f7c:	beq	12f90 <argp_parse@@Base+0x370>
   12f80:	ldr	r1, [r6, #20]
   12f84:	ldr	r0, [r0, #28]
   12f88:	ldr	r0, [r0, r1, lsl #2]
   12f8c:	str	r0, [r6, #24]
   12f90:	ldr	r0, [r6]
   12f94:	cmp	r0, #0
   12f98:	bne	12f40 <argp_parse@@Base+0x320>
   12f9c:	ldr	r0, [r6, #4]
   12fa0:	ldr	r0, [r0, #16]
   12fa4:	cmp	r0, #0
   12fa8:	beq	12f40 <argp_parse@@Base+0x320>
   12fac:	ldr	r0, [r0]
   12fb0:	cmp	r0, #0
   12fb4:	beq	12f40 <argp_parse@@Base+0x320>
   12fb8:	ldr	r0, [r6, #24]
   12fbc:	ldr	r1, [r6, #28]
   12fc0:	str	r0, [r1]
   12fc4:	b	12f40 <argp_parse@@Base+0x320>
   12fc8:	cmp	r7, #7
   12fcc:	cmpne	r7, #0
   12fd0:	bne	13050 <argp_parse@@Base+0x430>
   12fd4:	ldr	r0, [r4, #80]	; 0x50
   12fd8:	tst	r0, #2
   12fdc:	bne	12ff0 <argp_parse@@Base+0x3d0>
   12fe0:	mov	r0, #1
   12fe4:	str	r0, [r4, #16]
   12fe8:	ldr	r2, [sp, #12]
   12fec:	b	1301c <argp_parse@@Base+0x3fc>
   12ff0:	mov	r1, #0
   12ff4:	str	r1, [r4, #16]
   12ff8:	tst	r0, #1
   12ffc:	ldr	r2, [sp, #12]
   13000:	beq	1301c <argp_parse@@Base+0x3fc>
   13004:	ldr	r0, [r4, #68]	; 0x44
   13008:	ldr	r1, [r4, #72]	; 0x48
   1300c:	sub	r1, r1, #4
   13010:	add	r0, r0, #1
   13014:	str	r0, [r4, #68]	; 0x44
   13018:	str	r1, [r4, #72]	; 0x48
   1301c:	ldr	r0, [r4, #72]	; 0x48
   13020:	cmp	r0, r2
   13024:	beq	13038 <argp_parse@@Base+0x418>
   13028:	movw	r0, #59568	; 0xe8b0
   1302c:	movt	r0, #2
   13030:	ldr	r0, [r0]
   13034:	b	13048 <argp_parse@@Base+0x428>
   13038:	ldr	r0, [r2]
   1303c:	cmp	r0, #0
   13040:	beq	13028 <argp_parse@@Base+0x408>
   13044:	bl	13e04 <argp_usage@@Base+0x10c>
   13048:	str	r0, [r4, #104]	; 0x68
   1304c:	mov	r7, #0
   13050:	mov	r0, r7
   13054:	sub	sp, fp, #28
   13058:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1305c:	push	{r4, r5, r6, r7, fp, lr}
   13060:	add	fp, sp, #16
   13064:	sub	sp, sp, #8
   13068:	mov	r7, r1
   1306c:	mov	r5, r0
   13070:	ldr	r0, [r0, #88]	; 0x58
   13074:	cmp	r0, #0
   13078:	beq	1308c <argp_parse@@Base+0x46c>
   1307c:	ldr	r1, [r5, #76]	; 0x4c
   13080:	cmp	r1, r0
   13084:	movlt	r0, #0
   13088:	strlt	r0, [r5, #88]	; 0x58
   1308c:	ldr	r0, [r5, #60]	; 0x3c
   13090:	cmp	r0, #0
   13094:	beq	130a4 <argp_parse@@Base+0x484>
   13098:	ldr	r0, [r5, #88]	; 0x58
   1309c:	cmp	r0, #0
   130a0:	beq	130dc <argp_parse@@Base+0x4bc>
   130a4:	ldr	r1, [r5, #68]	; 0x44
   130a8:	ldr	r0, [r5, #76]	; 0x4c
   130ac:	mov	r2, #1
   130b0:	cmp	r0, r1
   130b4:	bge	131c0 <argp_parse@@Base+0x5a0>
   130b8:	ldrb	r1, [r5, #80]	; 0x50
   130bc:	tst	r1, #4
   130c0:	bne	131c0 <argp_parse@@Base+0x5a0>
   130c4:	add	r1, r0, #1
   130c8:	str	r1, [r5, #76]	; 0x4c
   130cc:	ldr	r1, [r5, #72]	; 0x48
   130d0:	ldr	r0, [r1, r0, lsl #2]
   130d4:	str	r0, [r5, #24]
   130d8:	b	1317c <argp_parse@@Base+0x55c>
   130dc:	ldr	r0, [r5, #76]	; 0x4c
   130e0:	mov	r6, r5
   130e4:	str	r0, [r6, #12]!
   130e8:	mvn	r0, #0
   130ec:	str	r0, [r6, #8]
   130f0:	ldmdb	r6, {r2, r3}
   130f4:	ldr	r0, [r6, #56]	; 0x38
   130f8:	ldr	r1, [r6, #60]	; 0x3c
   130fc:	ldrb	r4, [r6, #68]	; 0x44
   13100:	tst	r4, #64	; 0x40
   13104:	bne	13118 <argp_parse@@Base+0x4f8>
   13108:	mov	r4, #0
   1310c:	stm	sp, {r4, r6}
   13110:	bl	13edc <argp_usage@@Base+0x1e4>
   13114:	b	13124 <argp_parse@@Base+0x504>
   13118:	mov	r4, #0
   1311c:	stm	sp, {r4, r6}
   13120:	bl	13f40 <argp_usage@@Base+0x248>
   13124:	mov	r1, r0
   13128:	ldr	r6, [r5, #12]
   1312c:	str	r6, [r5, #76]	; 0x4c
   13130:	cmp	r0, #63	; 0x3f
   13134:	beq	1319c <argp_parse@@Base+0x57c>
   13138:	cmp	r1, #1
   1313c:	beq	1317c <argp_parse@@Base+0x55c>
   13140:	cmn	r1, #1
   13144:	bne	131ac <argp_parse@@Base+0x58c>
   13148:	mov	r0, #0
   1314c:	str	r0, [r5, #60]	; 0x3c
   13150:	cmp	r6, #2
   13154:	blt	130a4 <argp_parse@@Base+0x484>
   13158:	ldr	r0, [r5, #72]	; 0x48
   1315c:	add	r0, r0, r6, lsl #2
   13160:	ldr	r0, [r0, #-4]
   13164:	movw	r1, #41888	; 0xa3a0
   13168:	movt	r1, #1
   1316c:	bl	11358 <strcmp@plt>
   13170:	cmp	r0, #0
   13174:	streq	r6, [r5, #88]	; 0x58
   13178:	b	130a4 <argp_parse@@Base+0x484>
   1317c:	ldr	r1, [r5, #24]
   13180:	mov	r0, r5
   13184:	bl	13ac0 <argp_parse@@Base+0xea0>
   13188:	mov	r2, #1
   1318c:	cmp	r0, #7
   13190:	beq	131c0 <argp_parse@@Base+0x5a0>
   13194:	sub	sp, fp, #16
   13198:	pop	{r4, r5, r6, r7, fp, pc}
   1319c:	ldr	r0, [r5, #20]
   131a0:	mov	r2, #0
   131a4:	cmn	r0, #1
   131a8:	bne	131c0 <argp_parse@@Base+0x5a0>
   131ac:	mov	r0, r5
   131b0:	bl	13bc0 <argp_parse@@Base+0xfa0>
   131b4:	mov	r2, #0
   131b8:	cmp	r0, #7
   131bc:	bne	13194 <argp_parse@@Base+0x574>
   131c0:	str	r2, [r7]
   131c4:	mov	r0, #7
   131c8:	sub	sp, fp, #16
   131cc:	pop	{r4, r5, r6, r7, fp, pc}
   131d0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   131d4:	add	fp, sp, #24
   131d8:	mov	r4, r0
   131dc:	cmp	r2, #0
   131e0:	mov	r9, r1
   131e4:	movwne	r9, #0
   131e8:	cmp	r1, #7
   131ec:	movne	r9, r1
   131f0:	movw	r8, #1
   131f4:	movt	r8, #256	; 0x100
   131f8:	cmp	r9, #0
   131fc:	beq	13264 <argp_parse@@Base+0x644>
   13200:	cmp	r9, #0
   13204:	beq	1337c <argp_parse@@Base+0x75c>
   13208:	cmp	r9, #7
   1320c:	bne	13224 <argp_parse@@Base+0x604>
   13210:	ldr	r1, [r4, #108]	; 0x6c
   13214:	add	r0, r4, #64	; 0x40
   13218:	mov	r2, #260	; 0x104
   1321c:	bl	14f3c <argp_state_help@@Base>
   13220:	mov	r9, #7
   13224:	ldr	r5, [r4, #48]	; 0x30
   13228:	ldr	r0, [r4, #52]	; 0x34
   1322c:	cmp	r5, r0
   13230:	bcs	133e0 <argp_parse@@Base+0x7c0>
   13234:	add	r6, r4, #64	; 0x40
   13238:	add	r7, r8, #4
   1323c:	mov	r0, r5
   13240:	mov	r1, r6
   13244:	mov	r2, r7
   13248:	mov	r3, #0
   1324c:	bl	1379c <argp_parse@@Base+0xb7c>
   13250:	add	r5, r5, #36	; 0x24
   13254:	ldr	r0, [r4, #52]	; 0x34
   13258:	cmp	r5, r0
   1325c:	bcc	1323c <argp_parse@@Base+0x61c>
   13260:	b	133e0 <argp_parse@@Base+0x7c0>
   13264:	mov	r6, r3
   13268:	ldr	r1, [r4, #68]	; 0x44
   1326c:	ldr	r0, [r4, #76]	; 0x4c
   13270:	cmp	r0, r1
   13274:	bne	132dc <argp_parse@@Base+0x6bc>
   13278:	add	r7, r4, #64	; 0x40
   1327c:	ldr	r5, [r4, #48]	; 0x30
   13280:	ldr	r1, [r4, #52]	; 0x34
   13284:	mov	r0, #0
   13288:	cmp	r5, r1
   1328c:	bcs	132ec <argp_parse@@Base+0x6cc>
   13290:	mov	r0, #0
   13294:	add	r9, r8, #1
   13298:	b	132ac <argp_parse@@Base+0x68c>
   1329c:	add	r5, r5, #36	; 0x24
   132a0:	ldr	r1, [r4, #52]	; 0x34
   132a4:	cmp	r5, r1
   132a8:	bcs	132ec <argp_parse@@Base+0x6cc>
   132ac:	cmp	r0, #7
   132b0:	cmpne	r0, #0
   132b4:	bne	132ec <argp_parse@@Base+0x6cc>
   132b8:	ldr	r1, [r5, #12]
   132bc:	cmp	r1, #0
   132c0:	bne	1329c <argp_parse@@Base+0x67c>
   132c4:	mov	r0, r5
   132c8:	mov	r1, r7
   132cc:	mov	r2, r9
   132d0:	mov	r3, #0
   132d4:	bl	1379c <argp_parse@@Base+0xb7c>
   132d8:	b	1329c <argp_parse@@Base+0x67c>
   132dc:	cmp	r6, #0
   132e0:	beq	13338 <argp_parse@@Base+0x718>
   132e4:	str	r0, [r6]
   132e8:	b	1337c <argp_parse@@Base+0x75c>
   132ec:	ldr	r2, [r4, #48]	; 0x30
   132f0:	sub	r5, r1, #36	; 0x24
   132f4:	cmp	r5, r2
   132f8:	bcc	1332c <argp_parse@@Base+0x70c>
   132fc:	cmp	r0, #7
   13300:	cmpne	r0, #0
   13304:	bne	13364 <argp_parse@@Base+0x744>
   13308:	mov	r0, r5
   1330c:	mov	r1, r7
   13310:	mov	r2, r8
   13314:	mov	r3, #0
   13318:	bl	1379c <argp_parse@@Base+0xb7c>
   1331c:	sub	r5, r5, #36	; 0x24
   13320:	ldr	r1, [r4, #48]	; 0x30
   13324:	cmp	r5, r1
   13328:	bcs	132fc <argp_parse@@Base+0x6dc>
   1332c:	subs	r9, r0, #7
   13330:	movne	r9, r0
   13334:	b	13368 <argp_parse@@Base+0x748>
   13338:	ldrb	r0, [r4, #80]	; 0x50
   1333c:	tst	r0, #2
   13340:	bne	13210 <argp_parse@@Base+0x5f0>
   13344:	ldr	r0, [r4, #108]	; 0x6c
   13348:	cmp	r0, #0
   1334c:	beq	13210 <argp_parse@@Base+0x5f0>
   13350:	ldr	r2, [r4, #104]	; 0x68
   13354:	movw	r1, #41912	; 0xa3b8
   13358:	movt	r1, #1
   1335c:	bl	114d8 <fprintf@plt>
   13360:	b	13210 <argp_parse@@Base+0x5f0>
   13364:	mov	r9, r0
   13368:	cmp	r6, #0
   1336c:	ldrne	r0, [r4, #76]	; 0x4c
   13370:	strne	r0, [r6]
   13374:	cmp	r9, #0
   13378:	bne	13208 <argp_parse@@Base+0x5e8>
   1337c:	ldr	r0, [r4, #48]	; 0x30
   13380:	ldr	r1, [r4, #52]	; 0x34
   13384:	sub	r5, r1, #36	; 0x24
   13388:	mov	r9, #0
   1338c:	cmp	r5, r0
   13390:	bcc	133e0 <argp_parse@@Base+0x7c0>
   13394:	add	r6, r4, #64	; 0x40
   13398:	mov	r0, #0
   1339c:	add	r7, r8, #3
   133a0:	cmp	r0, #7
   133a4:	cmpne	r0, #0
   133a8:	bne	133dc <argp_parse@@Base+0x7bc>
   133ac:	mov	r0, r5
   133b0:	mov	r1, r6
   133b4:	mov	r2, r7
   133b8:	mov	r3, #0
   133bc:	bl	1379c <argp_parse@@Base+0xb7c>
   133c0:	sub	r5, r5, #36	; 0x24
   133c4:	ldr	r1, [r4, #48]	; 0x30
   133c8:	cmp	r5, r1
   133cc:	bcs	133a0 <argp_parse@@Base+0x780>
   133d0:	subs	r9, r0, #7
   133d4:	movne	r9, r0
   133d8:	b	133e0 <argp_parse@@Base+0x7c0>
   133dc:	mov	r9, r0
   133e0:	ldr	r0, [r4, #48]	; 0x30
   133e4:	ldr	r1, [r4, #52]	; 0x34
   133e8:	sub	r5, r1, #36	; 0x24
   133ec:	cmp	r5, r0
   133f0:	bcc	13420 <argp_parse@@Base+0x800>
   133f4:	add	r6, r4, #64	; 0x40
   133f8:	add	r7, r8, #6
   133fc:	mov	r0, r5
   13400:	mov	r1, r6
   13404:	mov	r2, r7
   13408:	mov	r3, #0
   1340c:	bl	1379c <argp_parse@@Base+0xb7c>
   13410:	sub	r5, r5, #36	; 0x24
   13414:	ldr	r0, [r4, #48]	; 0x30
   13418:	cmp	r5, r0
   1341c:	bcs	133fc <argp_parse@@Base+0x7dc>
   13420:	ldr	r0, [r4, #120]	; 0x78
   13424:	bl	13e88 <argp_usage@@Base+0x190>
   13428:	cmp	r9, #7
   1342c:	movweq	r9, #22
   13430:	mov	r0, r9
   13434:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   13438:	mov	ip, r0
   1343c:	mov	r0, #0
   13440:	cmp	r1, #0
   13444:	beq	13474 <argp_parse@@Base+0x854>
   13448:	ldr	r3, [r1, #52]	; 0x34
   1344c:	ldr	r1, [r3, #48]	; 0x30
   13450:	ldr	r2, [r3, #52]	; 0x34
   13454:	cmp	r1, r2
   13458:	bxcs	lr
   1345c:	ldr	r2, [r1, #4]
   13460:	cmp	r2, ip
   13464:	beq	13470 <argp_parse@@Base+0x850>
   13468:	add	r1, r1, #36	; 0x24
   1346c:	b	13450 <argp_parse@@Base+0x830>
   13470:	ldr	r0, [r1, #24]
   13474:	bx	lr
   13478:	push	{r4, r5, r6, sl, fp, lr}
   1347c:	add	fp, sp, #16
   13480:	mov	r5, r2
   13484:	mov	r6, r1
   13488:	mov	r4, #7
   1348c:	cmn	r0, #3
   13490:	bgt	134b4 <argp_parse@@Base+0x894>
   13494:	cmn	r0, #4
   13498:	beq	134e0 <argp_parse@@Base+0x8c0>
   1349c:	cmn	r0, #3
   134a0:	bne	13574 <argp_parse@@Base+0x954>
   134a4:	ldr	r1, [r5, #48]	; 0x30
   134a8:	mov	r0, r5
   134ac:	movw	r2, #513	; 0x201
   134b0:	b	134d0 <argp_parse@@Base+0x8b0>
   134b4:	cmn	r0, #2
   134b8:	beq	13534 <argp_parse@@Base+0x914>
   134bc:	cmp	r0, #63	; 0x3f
   134c0:	bne	13574 <argp_parse@@Base+0x954>
   134c4:	ldr	r1, [r5, #48]	; 0x30
   134c8:	mov	r0, r5
   134cc:	movw	r2, #634	; 0x27a
   134d0:	bl	14f3c <argp_state_help@@Base>
   134d4:	mov	r4, #0
   134d8:	mov	r0, r4
   134dc:	pop	{r4, r5, r6, sl, fp, pc}
   134e0:	movw	r0, #41826	; 0xa362
   134e4:	movt	r0, #1
   134e8:	cmp	r6, #0
   134ec:	movne	r0, r6
   134f0:	bl	11580 <atoi@plt>
   134f4:	movw	r5, #59604	; 0xe8d4
   134f8:	movt	r5, #2
   134fc:	str	r0, [r5]
   13500:	ldr	r0, [r5]
   13504:	subs	r0, r0, #1
   13508:	str	r0, [r5]
   1350c:	mov	r4, #0
   13510:	blt	13574 <argp_parse@@Base+0x954>
   13514:	mov	r0, #1
   13518:	bl	113e8 <sleep@plt>
   1351c:	ldr	r0, [r5]
   13520:	sub	r1, r0, #1
   13524:	str	r1, [r5]
   13528:	cmp	r0, #0
   1352c:	bgt	13514 <argp_parse@@Base+0x8f4>
   13530:	b	13574 <argp_parse@@Base+0x954>
   13534:	movw	r0, #59572	; 0xe8b4
   13538:	movt	r0, #2
   1353c:	str	r6, [r0]
   13540:	mov	r0, r6
   13544:	bl	13e04 <argp_usage@@Base+0x10c>
   13548:	str	r0, [r5, #40]	; 0x28
   1354c:	movw	r1, #59568	; 0xe8b0
   13550:	movt	r1, #2
   13554:	str	r0, [r1]
   13558:	ldr	r0, [r5, #16]
   1355c:	and	r0, r0, #3
   13560:	mov	r4, #0
   13564:	cmp	r0, #1
   13568:	bne	13574 <argp_parse@@Base+0x954>
   1356c:	ldr	r0, [r5, #8]
   13570:	str	r6, [r0]
   13574:	mov	r0, r4
   13578:	pop	{r4, r5, r6, sl, fp, pc}
   1357c:	push	{r4, sl, fp, lr}
   13580:	add	fp, sp, #8
   13584:	mov	r1, r0
   13588:	mov	r0, #7
   1358c:	cmp	r1, #86	; 0x56
   13590:	popne	{r4, sl, fp, pc}
   13594:	mov	r4, r2
   13598:	movw	r0, #59608	; 0xe8d8
   1359c:	movt	r0, #2
   135a0:	ldr	r2, [r0]
   135a4:	cmp	r2, #0
   135a8:	beq	135bc <argp_parse@@Base+0x99c>
   135ac:	ldr	r0, [r4, #48]	; 0x30
   135b0:	mov	r1, r4
   135b4:	blx	r2
   135b8:	b	135fc <argp_parse@@Base+0x9dc>
   135bc:	movw	r0, #59712	; 0xe940
   135c0:	movt	r0, #2
   135c4:	ldr	r2, [r0]
   135c8:	cmp	r2, #0
   135cc:	beq	135e4 <argp_parse@@Base+0x9c4>
   135d0:	ldr	r0, [r4, #48]	; 0x30
   135d4:	movw	r1, #42056	; 0xa448
   135d8:	movt	r1, #1
   135dc:	bl	114d8 <fprintf@plt>
   135e0:	b	135fc <argp_parse@@Base+0x9dc>
   135e4:	movw	r1, #43125	; 0xa875
   135e8:	movt	r1, #1
   135ec:	movw	r2, #41853	; 0xa37d
   135f0:	movt	r2, #1
   135f4:	mov	r0, r4
   135f8:	bl	14ffc <argp_error@@Base>
   135fc:	ldrb	r1, [r4, #16]
   13600:	mov	r0, #0
   13604:	tst	r1, #32
   13608:	beq	13610 <argp_parse@@Base+0x9f0>
   1360c:	pop	{r4, sl, fp, pc}
   13610:	mov	r0, #0
   13614:	bl	114a8 <exit@plt>
   13618:	push	{r4, r5, r6, r7, fp, lr}
   1361c:	add	fp, sp, #16
   13620:	mov	r4, r1
   13624:	ldr	r5, [r0]
   13628:	ldr	r6, [r0, #16]
   1362c:	cmp	r5, #0
   13630:	beq	1368c <argp_parse@@Base+0xa6c>
   13634:	ldr	r0, [r4, #8]
   13638:	add	r0, r0, #1
   1363c:	str	r0, [r4, #8]
   13640:	mov	r0, r5
   13644:	bl	13d50 <argp_usage@@Base+0x58>
   13648:	mov	r7, #0
   1364c:	cmp	r0, #0
   13650:	bne	13674 <argp_parse@@Base+0xa54>
   13654:	add	r5, r5, #24
   13658:	mov	r7, #0
   1365c:	add	r7, r7, #1
   13660:	mov	r0, r5
   13664:	bl	13d50 <argp_usage@@Base+0x58>
   13668:	add	r5, r5, #24
   1366c:	cmp	r0, #0
   13670:	beq	1365c <argp_parse@@Base+0xa3c>
   13674:	ldr	r0, [r4]
   13678:	add	r1, r7, r7, lsl #1
   1367c:	add	r1, r0, r1
   13680:	mov	r0, r4
   13684:	str	r1, [r0], #4
   13688:	b	136a0 <argp_parse@@Base+0xa80>
   1368c:	ldr	r0, [r0, #4]
   13690:	cmp	r0, #0
   13694:	beq	136ac <argp_parse@@Base+0xa8c>
   13698:	add	r0, r4, #8
   1369c:	mov	r7, #1
   136a0:	ldr	r1, [r0]
   136a4:	add	r1, r1, r7
   136a8:	str	r1, [r0]
   136ac:	cmp	r6, #0
   136b0:	beq	136e4 <argp_parse@@Base+0xac4>
   136b4:	ldr	r0, [r6]
   136b8:	cmp	r0, #0
   136bc:	beq	136e4 <argp_parse@@Base+0xac4>
   136c0:	add	r5, r6, #16
   136c4:	mov	r1, r4
   136c8:	bl	13618 <argp_parse@@Base+0x9f8>
   136cc:	ldr	r0, [r4, #12]
   136d0:	add	r0, r0, #1
   136d4:	str	r0, [r4, #12]
   136d8:	ldr	r0, [r5], #16
   136dc:	cmp	r0, #0
   136e0:	bne	136c4 <argp_parse@@Base+0xaa4>
   136e4:	pop	{r4, r5, r6, r7, fp, pc}
   136e8:	push	{r4, sl, fp, lr}
   136ec:	add	fp, sp, #8
   136f0:	sub	sp, sp, #24
   136f4:	mov	r4, r0
   136f8:	str	r0, [sp, #8]
   136fc:	ldr	r0, [r0, #4]
   13700:	ldr	r3, [r4, #8]
   13704:	str	r0, [sp, #12]
   13708:	str	r3, [sp, #16]
   1370c:	ldr	r0, [r4, #56]	; 0x38
   13710:	str	r0, [sp, #20]
   13714:	tst	r2, #8
   13718:	bne	13738 <argp_parse@@Base+0xb18>
   1371c:	tst	r2, #4
   13720:	beq	1374c <argp_parse@@Base+0xb2c>
   13724:	ldr	r0, [sp, #12]
   13728:	add	r2, r0, #1
   1372c:	str	r2, [sp, #12]
   13730:	mov	r2, #43	; 0x2b
   13734:	b	13748 <argp_parse@@Base+0xb28>
   13738:	ldr	r0, [sp, #12]
   1373c:	add	r2, r0, #1
   13740:	str	r2, [sp, #12]
   13744:	mov	r2, #45	; 0x2d
   13748:	strb	r2, [r0]
   1374c:	ldr	r0, [sp, #12]
   13750:	mov	r2, #0
   13754:	strb	r2, [r0]
   13758:	ldr	r0, [sp, #16]
   1375c:	str	r2, [r0]
   13760:	str	r1, [r4]
   13764:	cmp	r1, #0
   13768:	beq	1378c <argp_parse@@Base+0xb6c>
   1376c:	ldr	r3, [r4, #48]	; 0x30
   13770:	add	r0, sp, #8
   13774:	str	r0, [sp]
   13778:	mov	r0, r1
   1377c:	mov	r1, #0
   13780:	mov	r2, #0
   13784:	bl	137fc <argp_parse@@Base+0xbdc>
   13788:	b	13790 <argp_parse@@Base+0xb70>
   1378c:	ldr	r0, [r4, #48]	; 0x30
   13790:	str	r0, [r4, #52]	; 0x34
   13794:	sub	sp, fp, #8
   13798:	pop	{r4, sl, fp, pc}
   1379c:	push	{r4, r5, fp, lr}
   137a0:	add	fp, sp, #8
   137a4:	ldr	ip, [r0]
   137a8:	cmp	ip, #0
   137ac:	beq	137f4 <argp_parse@@Base+0xbd4>
   137b0:	mov	r5, r1
   137b4:	mov	r4, r0
   137b8:	ldr	r0, [r0, #32]
   137bc:	str	r0, [r1, #36]	; 0x24
   137c0:	ldr	r0, [r4, #24]
   137c4:	str	r0, [r1, #28]
   137c8:	ldr	r0, [r4, #28]
   137cc:	str	r0, [r1, #32]
   137d0:	ldr	r0, [r4, #12]
   137d4:	str	r0, [r1, #20]
   137d8:	mov	r0, r2
   137dc:	mov	r1, r3
   137e0:	mov	r2, r5
   137e4:	blx	ip
   137e8:	ldr	r1, [r5, #36]	; 0x24
   137ec:	str	r1, [r4, #32]
   137f0:	pop	{r4, r5, fp, pc}
   137f4:	mov	r0, #7
   137f8:	pop	{r4, r5, fp, pc}
   137fc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13800:	add	fp, sp, #28
   13804:	sub	sp, sp, #20
   13808:	mov	r4, r3
   1380c:	str	r2, [sp, #12]
   13810:	str	r1, [sp, #16]
   13814:	ldr	r5, [r0]
   13818:	ldr	r7, [r0, #16]
   1381c:	ldr	r6, [fp, #8]
   13820:	cmp	r5, #0
   13824:	str	r0, [sp, #8]
   13828:	beq	1397c <argp_parse@@Base+0xd5c>
   1382c:	mov	r0, r5
   13830:	bl	13d50 <argp_usage@@Base+0x58>
   13834:	cmp	r0, #0
   13838:	bne	13988 <argp_parse@@Base+0xd68>
   1383c:	mov	sl, #0
   13840:	mov	r9, r5
   13844:	b	138b8 <argp_parse@@Base+0xc98>
   13848:	ldrb	r0, [r9, #12]
   1384c:	tst	r0, #1
   13850:	mov	r1, #2
   13854:	movweq	r1, #1
   13858:	mov	ip, #0
   1385c:	ldr	r0, [r6, #8]
   13860:	stmib	r0, {r1, ip}
   13864:	ldr	r1, [r5, #4]
   13868:	cmp	r1, #0
   1386c:	ldreq	r1, [r9, #4]
   13870:	ldr	r2, [r8, #48]	; 0x30
   13874:	sub	r2, r4, r2
   13878:	lsr	r2, r2, #2
   1387c:	mov	r3, #956301312	; 0x39000000
   13880:	mul	r2, r2, r3
   13884:	bic	r1, r1, #-16777216	; 0xff000000
   13888:	orr	r1, r2, r1
   1388c:	add	r1, r1, #16777216	; 0x1000000
   13890:	str	r1, [r0, #12]
   13894:	add	r1, r0, #16
   13898:	str	r1, [r6, #8]
   1389c:	mov	sl, #0
   138a0:	str	ip, [r0, #16]
   138a4:	add	r5, r5, #24
   138a8:	mov	r0, r5
   138ac:	bl	13d50 <argp_usage@@Base+0x58>
   138b0:	cmp	r0, #0
   138b4:	bne	13988 <argp_parse@@Base+0xd68>
   138b8:	ldrb	r0, [r5, #12]
   138bc:	tst	r0, #4
   138c0:	moveq	r9, r5
   138c4:	ldrb	r0, [r9, #12]
   138c8:	tst	r0, #8
   138cc:	bne	138a4 <argp_parse@@Base+0xc84>
   138d0:	mov	r0, r5
   138d4:	bl	13d0c <argp_usage@@Base+0x14>
   138d8:	cmp	r0, #0
   138dc:	beq	1393c <argp_parse@@Base+0xd1c>
   138e0:	ldr	r0, [r5, #4]
   138e4:	ldr	r1, [r6, #4]
   138e8:	add	r2, r1, #1
   138ec:	str	r2, [r6, #4]
   138f0:	strb	r0, [r1]
   138f4:	ldr	r0, [r9, #8]
   138f8:	cmp	r0, #0
   138fc:	beq	13934 <argp_parse@@Base+0xd14>
   13900:	ldr	r0, [r6, #4]
   13904:	add	r1, r0, #1
   13908:	str	r1, [r6, #4]
   1390c:	mov	r1, #58	; 0x3a
   13910:	strb	r1, [r0]
   13914:	ldrb	r0, [r9, #12]
   13918:	tst	r0, #1
   1391c:	beq	13934 <argp_parse@@Base+0xd14>
   13920:	ldr	r0, [r6, #4]
   13924:	add	r1, r0, #1
   13928:	str	r1, [r6, #4]
   1392c:	mov	r1, #58	; 0x3a
   13930:	strb	r1, [r0]
   13934:	ldr	r0, [r6, #4]
   13938:	strb	sl, [r0]
   1393c:	ldr	r1, [r5]
   13940:	cmp	r1, #0
   13944:	beq	138a4 <argp_parse@@Base+0xc84>
   13948:	ldr	r8, [r6]
   1394c:	ldr	r0, [r8, #8]
   13950:	bl	13a54 <argp_parse@@Base+0xe34>
   13954:	cmn	r0, #1
   13958:	bgt	138a4 <argp_parse@@Base+0xc84>
   1395c:	ldr	r0, [r6, #8]
   13960:	ldr	r1, [r5]
   13964:	str	r1, [r0]
   13968:	ldr	r0, [r9, #8]
   1396c:	cmp	r0, #0
   13970:	bne	13848 <argp_parse@@Base+0xc28>
   13974:	mov	r1, #0
   13978:	b	13858 <argp_parse@@Base+0xc38>
   1397c:	ldr	r0, [r0, #4]
   13980:	cmp	r0, #0
   13984:	beq	13a40 <argp_parse@@Base+0xe20>
   13988:	ldr	r1, [sp, #8]
   1398c:	ldr	r0, [r1, #4]
   13990:	stm	r4, {r0, r1}
   13994:	ldr	r1, [r6, #4]
   13998:	mov	r0, #0
   1399c:	str	r0, [r4, #32]
   139a0:	str	r0, [r4, #24]
   139a4:	ldr	r2, [sp, #12]
   139a8:	str	r2, [r4, #20]
   139ac:	ldr	r2, [sp, #16]
   139b0:	str	r2, [r4, #16]
   139b4:	str	r0, [r4, #12]
   139b8:	str	r0, [r4, #28]
   139bc:	str	r1, [r4, #8]
   139c0:	cmp	r7, #0
   139c4:	beq	139f0 <argp_parse@@Base+0xdd0>
   139c8:	ldr	r1, [r7, r0, lsl #2]
   139cc:	add	r0, r0, #4
   139d0:	cmp	r1, #0
   139d4:	bne	139c8 <argp_parse@@Base+0xda8>
   139d8:	ldr	r1, [r6, #12]
   139dc:	str	r1, [r4, #28]
   139e0:	ldr	r1, [r6, #12]
   139e4:	add	r0, r1, r0
   139e8:	sub	r0, r0, #4
   139ec:	str	r0, [r6, #12]
   139f0:	add	r3, r4, #36	; 0x24
   139f4:	cmp	r7, #0
   139f8:	beq	13a34 <argp_parse@@Base+0xe14>
   139fc:	ldr	r0, [r7]
   13a00:	cmp	r0, #0
   13a04:	beq	13a34 <argp_parse@@Base+0xe14>
   13a08:	add	r7, r7, #16
   13a0c:	mov	r5, #0
   13a10:	str	r6, [sp]
   13a14:	mov	r1, r4
   13a18:	mov	r2, r5
   13a1c:	bl	137fc <argp_parse@@Base+0xbdc>
   13a20:	mov	r3, r0
   13a24:	ldr	r0, [r7, r5, lsl #4]
   13a28:	add	r5, r5, #1
   13a2c:	cmp	r0, #0
   13a30:	bne	13a10 <argp_parse@@Base+0xdf0>
   13a34:	mov	r0, r3
   13a38:	sub	sp, fp, #28
   13a3c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13a40:	mov	r3, r4
   13a44:	mov	r4, #0
   13a48:	cmp	r7, #0
   13a4c:	bne	139fc <argp_parse@@Base+0xddc>
   13a50:	b	13a34 <argp_parse@@Base+0xe14>
   13a54:	push	{r4, r5, r6, sl, fp, lr}
   13a58:	add	fp, sp, #16
   13a5c:	mov	r5, r1
   13a60:	mov	r4, r0
   13a64:	ldr	r0, [r0]
   13a68:	cmp	r0, #0
   13a6c:	mov	r6, r4
   13a70:	beq	13aa8 <argp_parse@@Base+0xe88>
   13a74:	mov	r6, r4
   13a78:	cmp	r5, #0
   13a7c:	bne	13a94 <argp_parse@@Base+0xe74>
   13a80:	ldr	r0, [r6, #16]!
   13a84:	cmp	r0, #0
   13a88:	beq	13aa8 <argp_parse@@Base+0xe88>
   13a8c:	cmp	r5, #0
   13a90:	beq	13a80 <argp_parse@@Base+0xe60>
   13a94:	mov	r1, r5
   13a98:	bl	11358 <strcmp@plt>
   13a9c:	cmp	r0, #0
   13aa0:	bne	13a80 <argp_parse@@Base+0xe60>
   13aa4:	b	13ab4 <argp_parse@@Base+0xe94>
   13aa8:	mvn	r0, #0
   13aac:	cmp	r5, #0
   13ab0:	popne	{r4, r5, r6, sl, fp, pc}
   13ab4:	sub	r0, r6, r4
   13ab8:	asr	r0, r0, #4
   13abc:	pop	{r4, r5, r6, sl, fp, pc}
   13ac0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13ac4:	add	fp, sp, #28
   13ac8:	sub	sp, sp, #4
   13acc:	mov	r7, r1
   13ad0:	mov	r4, r0
   13ad4:	ldr	r1, [r0, #48]	; 0x30
   13ad8:	ldr	r2, [r0, #52]	; 0x34
   13adc:	ldr	r9, [r0, #76]	; 0x4c
   13ae0:	sub	r0, r9, #1
   13ae4:	str	r0, [r4, #76]	; 0x4c
   13ae8:	mov	r0, #7
   13aec:	cmp	r1, r2
   13af0:	bcs	13b74 <argp_parse@@Base+0xf54>
   13af4:	add	r6, r4, #64	; 0x40
   13af8:	movw	r8, #6
   13afc:	movt	r8, #256	; 0x100
   13b00:	mov	sl, #0
   13b04:	mov	r5, r1
   13b08:	ldr	r0, [r4, #76]	; 0x4c
   13b0c:	add	r0, r0, #1
   13b10:	str	r0, [r4, #76]	; 0x4c
   13b14:	mov	r0, r1
   13b18:	mov	r1, r6
   13b1c:	mov	r2, #0
   13b20:	mov	r3, r7
   13b24:	bl	1379c <argp_parse@@Base+0xb7c>
   13b28:	cmp	r0, #7
   13b2c:	bne	13b6c <argp_parse@@Base+0xf4c>
   13b30:	ldr	r0, [r4, #76]	; 0x4c
   13b34:	sub	r0, r0, #1
   13b38:	str	r0, [r4, #76]	; 0x4c
   13b3c:	mov	r0, r5
   13b40:	mov	r1, r6
   13b44:	mov	r2, r8
   13b48:	mov	r3, #0
   13b4c:	bl	1379c <argp_parse@@Base+0xb7c>
   13b50:	cmp	r0, #7
   13b54:	bne	13b68 <argp_parse@@Base+0xf48>
   13b58:	add	r1, r5, #36	; 0x24
   13b5c:	ldr	r2, [r4, #52]	; 0x34
   13b60:	cmp	r1, r2
   13b64:	bcc	13b04 <argp_parse@@Base+0xee4>
   13b68:	mov	sl, r8
   13b6c:	cmp	r0, #0
   13b70:	beq	13b7c <argp_parse@@Base+0xf5c>
   13b74:	sub	sp, fp, #28
   13b78:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13b7c:	cmp	sl, r8
   13b80:	ldreq	r0, [r4, #68]	; 0x44
   13b84:	streq	r0, [r4, #76]	; 0x4c
   13b88:	ldr	r0, [r4, #76]	; 0x4c
   13b8c:	cmp	r0, r9
   13b90:	bge	13ba0 <argp_parse@@Base+0xf80>
   13b94:	mov	r0, #1
   13b98:	str	r0, [r4, #60]	; 0x3c
   13b9c:	b	13bb4 <argp_parse@@Base+0xf94>
   13ba0:	sub	r0, r0, r9
   13ba4:	ldr	r1, [r5, #12]
   13ba8:	add	r0, r0, r1
   13bac:	add	r0, r0, #1
   13bb0:	str	r0, [r5, #12]
   13bb4:	mov	r0, #0
   13bb8:	sub	sp, fp, #28
   13bbc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13bc0:	push	{r4, r5, r6, sl, fp, lr}
   13bc4:	add	fp, sp, #16
   13bc8:	mov	r5, r1
   13bcc:	mov	r4, r0
   13bd0:	asr	r6, r1, #24
   13bd4:	mov	r0, #0
   13bd8:	cmp	r0, r1, asr #24
   13bdc:	beq	13c4c <argp_parse@@Base+0x102c>
   13be0:	bic	r2, r5, #-16777216	; 0xff000000
   13be4:	tst	r5, #8388608	; 0x800000
   13be8:	orrne	r2, r2, #-16777216	; 0xff000000
   13bec:	ldr	r3, [r4, #24]
   13bf0:	ldr	r0, [r4, #48]	; 0x30
   13bf4:	add	r1, r6, r6, lsl #3
   13bf8:	add	r0, r0, r1, lsl #2
   13bfc:	sub	r0, r0, #36	; 0x24
   13c00:	add	r1, r4, #64	; 0x40
   13c04:	bl	1379c <argp_parse@@Base+0xb7c>
   13c08:	cmp	r0, #7
   13c0c:	bne	13ce0 <argp_parse@@Base+0x10c0>
   13c10:	cmp	r6, #0
   13c14:	beq	13c90 <argp_parse@@Base+0x1070>
   13c18:	ldr	r0, [r4, #8]
   13c1c:	ldr	r1, [r0, #12]
   13c20:	cmp	r1, r5
   13c24:	beq	13cac <argp_parse@@Base+0x108c>
   13c28:	ldr	r1, [r0]
   13c2c:	cmp	r1, #0
   13c30:	beq	13cac <argp_parse@@Base+0x108c>
   13c34:	add	r1, r0, #16
   13c38:	ldr	r0, [r0, #28]
   13c3c:	cmp	r0, r5
   13c40:	mov	r0, r1
   13c44:	bne	13c28 <argp_parse@@Base+0x1008>
   13c48:	b	13cb0 <argp_parse@@Base+0x1090>
   13c4c:	ldr	r0, [r4, #4]
   13c50:	mov	r1, r5
   13c54:	bl	114cc <strchr@plt>
   13c58:	cmp	r0, #0
   13c5c:	beq	13c90 <argp_parse@@Base+0x1070>
   13c60:	ldr	r2, [r4, #48]	; 0x30
   13c64:	ldr	r1, [r4, #52]	; 0x34
   13c68:	cmp	r2, r1
   13c6c:	bcs	13c90 <argp_parse@@Base+0x1070>
   13c70:	ldr	r1, [r2, #8]
   13c74:	cmp	r1, r0
   13c78:	bhi	13ce4 <argp_parse@@Base+0x10c4>
   13c7c:	ldr	r1, [r4, #52]	; 0x34
   13c80:	add	r2, r2, #36	; 0x24
   13c84:	cmp	r2, r1
   13c88:	bcc	13c70 <argp_parse@@Base+0x1050>
   13c8c:	b	13c10 <argp_parse@@Base+0xff0>
   13c90:	add	r0, r4, #64	; 0x40
   13c94:	movw	r1, #41891	; 0xa3a3
   13c98:	movt	r1, #1
   13c9c:	movw	r3, #41624	; 0xa298
   13ca0:	movt	r3, #1
   13ca4:	mov	r2, r5
   13ca8:	b	13cd8 <argp_parse@@Base+0x10b8>
   13cac:	mov	r1, r0
   13cb0:	ldr	r0, [r1]
   13cb4:	movw	r2, #41908	; 0xa3b4
   13cb8:	movt	r2, #1
   13cbc:	cmp	r0, #0
   13cc0:	movne	r2, r0
   13cc4:	add	r0, r4, #64	; 0x40
   13cc8:	movw	r1, #41899	; 0xa3ab
   13ccc:	movt	r1, #1
   13cd0:	movw	r3, #41624	; 0xa298
   13cd4:	movt	r3, #1
   13cd8:	bl	14ffc <argp_error@@Base>
   13cdc:	mov	r0, #7
   13ce0:	pop	{r4, r5, r6, sl, fp, pc}
   13ce4:	ldr	r3, [r4, #24]
   13ce8:	add	r1, r4, #64	; 0x40
   13cec:	mov	r0, r2
   13cf0:	mov	r2, r5
   13cf4:	b	13c04 <argp_parse@@Base+0xfe4>

00013cf8 <argp_usage@@Base>:
   13cf8:	movw	r1, #59576	; 0xe8b8
   13cfc:	movt	r1, #2
   13d00:	ldr	r1, [r1]
   13d04:	movw	r2, #262	; 0x106
   13d08:	b	14f3c <argp_state_help@@Base>
   13d0c:	push	{r4, sl, fp, lr}
   13d10:	add	fp, sp, #8
   13d14:	mov	r1, r0
   13d18:	ldrb	r2, [r0, #12]
   13d1c:	mov	r0, #0
   13d20:	tst	r2, #8
   13d24:	bne	13d4c <argp_usage@@Base+0x54>
   13d28:	ldr	r4, [r1, #4]
   13d2c:	sub	r1, r4, #1
   13d30:	cmp	r1, #254	; 0xfe
   13d34:	pophi	{r4, sl, fp, pc}
   13d38:	bl	1149c <__ctype_b_loc@plt>
   13d3c:	ldr	r0, [r0]
   13d40:	add	r0, r0, r4, lsl #1
   13d44:	ldrh	r0, [r0]
   13d48:	ubfx	r0, r0, #14, #1
   13d4c:	pop	{r4, sl, fp, pc}
   13d50:	mov	r1, r0
   13d54:	ldr	r2, [r0, #4]
   13d58:	mov	r0, #0
   13d5c:	cmp	r2, #0
   13d60:	bne	13d70 <argp_usage@@Base+0x78>
   13d64:	ldr	r2, [r1]
   13d68:	cmp	r2, #0
   13d6c:	beq	13d74 <argp_usage@@Base+0x7c>
   13d70:	bx	lr
   13d74:	ldr	r2, [r1, #16]
   13d78:	cmp	r2, #0
   13d7c:	bxne	lr
   13d80:	ldr	r0, [r1, #20]
   13d84:	clz	r0, r0
   13d88:	lsr	r0, r0, #5
   13d8c:	bx	lr
   13d90:	movw	r2, #59612	; 0xe8dc
   13d94:	movt	r2, #2
   13d98:	str	r0, [r2]
   13d9c:	movw	r0, #59608	; 0xe8d8
   13da0:	movt	r0, #2
   13da4:	movw	r2, #15808	; 0x3dc0
   13da8:	movt	r2, #1
   13dac:	str	r2, [r0]
   13db0:	movw	r0, #59616	; 0xe8e0
   13db4:	movt	r0, #2
   13db8:	str	r1, [r0]
   13dbc:	bx	lr
   13dc0:	push	{fp, lr}
   13dc4:	mov	fp, sp
   13dc8:	sub	sp, sp, #8
   13dcc:	movw	r1, #59612	; 0xe8dc
   13dd0:	movt	r1, #2
   13dd4:	ldr	r1, [r1]
   13dd8:	movw	r2, #59616	; 0xe8e0
   13ddc:	movt	r2, #2
   13de0:	ldr	r2, [r2]
   13de4:	str	r2, [sp]
   13de8:	movw	r2, #41936	; 0xa3d0
   13dec:	movt	r2, #1
   13df0:	movw	r3, #41950	; 0xa3de
   13df4:	movt	r3, #1
   13df8:	bl	145f8 <_obstack_memory_used@@Base+0x384>
   13dfc:	mov	sp, fp
   13e00:	pop	{fp, pc}
   13e04:	sub	r0, r0, #1
   13e08:	ldrb	r3, [r0, #1]!
   13e0c:	cmp	r3, #47	; 0x2f
   13e10:	beq	13e08 <argp_usage@@Base+0x110>
   13e14:	mov	r2, #0
   13e18:	mov	r1, r0
   13e1c:	b	13e28 <argp_usage@@Base+0x130>
   13e20:	mov	r2, #1
   13e24:	ldrb	r3, [r1, #1]!
   13e28:	uxtb	r3, r3
   13e2c:	cmp	r3, #47	; 0x2f
   13e30:	beq	13e20 <argp_usage@@Base+0x128>
   13e34:	cmp	r3, #0
   13e38:	bxeq	lr
   13e3c:	tst	r2, #1
   13e40:	movne	r0, r1
   13e44:	mov	r2, #0
   13e48:	ldrb	r3, [r1, #1]!
   13e4c:	b	13e28 <argp_usage@@Base+0x130>
   13e50:	push	{r4, sl, fp, lr}
   13e54:	add	fp, sp, #8
   13e58:	mov	r4, r0
   13e5c:	bl	114c0 <strlen@plt>
   13e60:	mov	r1, r0
   13e64:	sub	r2, r4, #1
   13e68:	mov	r0, r1
   13e6c:	cmp	r1, #2
   13e70:	bcc	13e84 <argp_usage@@Base+0x18c>
   13e74:	ldrb	r3, [r2, r0]
   13e78:	sub	r1, r0, #1
   13e7c:	cmp	r3, #47	; 0x2f
   13e80:	beq	13e68 <argp_usage@@Base+0x170>
   13e84:	pop	{r4, sl, fp, pc}
   13e88:	push	{r4, r5, r6, sl, fp, lr}
   13e8c:	add	fp, sp, #16
   13e90:	mov	r4, r0
   13e94:	bl	114e4 <__errno_location@plt>
   13e98:	mov	r5, r0
   13e9c:	ldr	r6, [r0]
   13ea0:	mov	r0, r4
   13ea4:	bl	11388 <free@plt>
   13ea8:	str	r6, [r5]
   13eac:	pop	{r4, r5, r6, sl, fp, pc}
   13eb0:	push	{fp, lr}
   13eb4:	mov	fp, sp
   13eb8:	sub	sp, sp, #16
   13ebc:	mov	ip, #0
   13ec0:	str	ip, [sp, #8]
   13ec4:	str	ip, [sp, #4]
   13ec8:	ldr	ip, [fp, #8]
   13ecc:	str	ip, [sp]
   13ed0:	bl	17d8c <argp_failure@@Base+0x2cb8>
   13ed4:	mov	sp, fp
   13ed8:	pop	{fp, pc}
   13edc:	push	{fp, lr}
   13ee0:	mov	fp, sp
   13ee4:	sub	sp, sp, #16
   13ee8:	mov	ip, #0
   13eec:	str	ip, [sp, #12]
   13ef0:	str	ip, [sp, #4]
   13ef4:	ldr	ip, [fp, #12]
   13ef8:	str	ip, [sp, #8]
   13efc:	ldr	ip, [fp, #8]
   13f00:	str	ip, [sp]
   13f04:	bl	171c0 <argp_failure@@Base+0x20ec>
   13f08:	mov	sp, fp
   13f0c:	pop	{fp, pc}
   13f10:	push	{fp, lr}
   13f14:	mov	fp, sp
   13f18:	sub	sp, sp, #16
   13f1c:	mov	ip, #0
   13f20:	str	ip, [sp, #8]
   13f24:	mov	ip, #1
   13f28:	str	ip, [sp, #4]
   13f2c:	ldr	ip, [fp, #8]
   13f30:	str	ip, [sp]
   13f34:	bl	17d8c <argp_failure@@Base+0x2cb8>
   13f38:	mov	sp, fp
   13f3c:	pop	{fp, pc}
   13f40:	push	{fp, lr}
   13f44:	mov	fp, sp
   13f48:	sub	sp, sp, #16
   13f4c:	mov	ip, #0
   13f50:	str	ip, [sp, #12]
   13f54:	mov	ip, #1
   13f58:	str	ip, [sp, #4]
   13f5c:	ldr	ip, [fp, #12]
   13f60:	str	ip, [sp, #8]
   13f64:	ldr	ip, [fp, #8]
   13f68:	str	ip, [sp]
   13f6c:	bl	171c0 <argp_failure@@Base+0x20ec>
   13f70:	mov	sp, fp
   13f74:	pop	{fp, pc}

00013f78 <_obstack_begin@@Base>:
   13f78:	push	{fp, lr}
   13f7c:	mov	fp, sp
   13f80:	str	r3, [r0, #28]
   13f84:	ldr	r3, [fp, #8]
   13f88:	str	r3, [r0, #32]
   13f8c:	ldrb	r3, [r0, #40]	; 0x28
   13f90:	and	r3, r3, #254	; 0xfe
   13f94:	strb	r3, [r0, #40]	; 0x28
   13f98:	bl	13fa4 <_obstack_begin@@Base+0x2c>
   13f9c:	mov	r0, #1
   13fa0:	pop	{fp, pc}
   13fa4:	push	{r4, r5, r6, sl, fp, lr}
   13fa8:	add	fp, sp, #16
   13fac:	mov	r5, r2
   13fb0:	mov	r4, r0
   13fb4:	cmp	r1, #0
   13fb8:	movweq	r1, #4072	; 0xfe8
   13fbc:	str	r1, [r0]
   13fc0:	cmp	r2, #0
   13fc4:	movweq	r5, #8
   13fc8:	sub	r6, r5, #1
   13fcc:	str	r6, [r0, #24]
   13fd0:	bl	14178 <_obstack_newchunk@@Base+0x118>
   13fd4:	str	r0, [r4, #4]
   13fd8:	cmp	r0, #0
   13fdc:	addne	r1, r0, r6
   13fe0:	addne	r1, r1, #8
   13fe4:	rsbne	r2, r5, #0
   13fe8:	andne	r1, r1, r2
   13fec:	strne	r1, [r4, #12]
   13ff0:	strne	r1, [r4, #8]
   13ff4:	ldrne	r1, [r4]
   13ff8:	addne	r1, r0, r1
   13ffc:	strne	r1, [r0]
   14000:	strne	r1, [r4, #16]
   14004:	movne	r1, #0
   14008:	strne	r1, [r0, #4]
   1400c:	ldrbne	r0, [r4, #40]	; 0x28
   14010:	andne	r0, r0, #249	; 0xf9
   14014:	strbne	r0, [r4, #40]	; 0x28
   14018:	popne	{r4, r5, r6, sl, fp, pc}
   1401c:	movw	r0, #59500	; 0xe86c
   14020:	movt	r0, #2
   14024:	ldr	r0, [r0]
   14028:	blx	r0

0001402c <_obstack_begin_1@@Base>:
   1402c:	push	{fp, lr}
   14030:	mov	fp, sp
   14034:	str	r3, [r0, #28]
   14038:	ldr	r3, [fp, #12]
   1403c:	str	r3, [r0, #36]	; 0x24
   14040:	ldr	r3, [fp, #8]
   14044:	str	r3, [r0, #32]
   14048:	ldrb	r3, [r0, #40]	; 0x28
   1404c:	orr	r3, r3, #1
   14050:	strb	r3, [r0, #40]	; 0x28
   14054:	bl	13fa4 <_obstack_begin@@Base+0x2c>
   14058:	mov	r0, #1
   1405c:	pop	{fp, pc}

00014060 <_obstack_newchunk@@Base>:
   14060:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14064:	add	fp, sp, #28
   14068:	sub	sp, sp, #4
   1406c:	mov	r4, r0
   14070:	ldr	r2, [r0]
   14074:	ldr	r0, [r0, #8]
   14078:	ldr	r3, [r4, #12]
   1407c:	sub	sl, r3, r0
   14080:	add	r1, sl, r1
   14084:	ldr	r0, [r4, #24]
   14088:	mov	r3, #0
   1408c:	adds	r7, r1, r0
   14090:	adc	r0, r3, #0
   14094:	mov	r3, #100	; 0x64
   14098:	add	r3, r3, sl, lsr #3
   1409c:	adds	r6, r3, r7
   140a0:	movcs	r6, r7
   140a4:	cmp	r6, r2
   140a8:	movcc	r6, r2
   140ac:	cmp	r1, sl
   140b0:	bcc	14168 <_obstack_newchunk@@Base+0x108>
   140b4:	cmp	r0, #0
   140b8:	bne	14168 <_obstack_newchunk@@Base+0x108>
   140bc:	ldr	r8, [r4, #4]
   140c0:	mov	r0, r4
   140c4:	mov	r1, r6
   140c8:	bl	14178 <_obstack_newchunk@@Base+0x118>
   140cc:	cmp	r0, #0
   140d0:	beq	14168 <_obstack_newchunk@@Base+0x108>
   140d4:	mov	r7, r0
   140d8:	str	r0, [r4, #4]
   140dc:	str	r8, [r0, #4]
   140e0:	add	r0, r0, r6
   140e4:	str	r0, [r4, #16]
   140e8:	str	r0, [r7]
   140ec:	ldr	r9, [r4, #8]
   140f0:	ldr	r5, [r4, #24]
   140f4:	add	r0, r7, r5
   140f8:	add	r0, r0, #8
   140fc:	bic	r6, r0, r5
   14100:	mov	r0, r6
   14104:	mov	r1, r9
   14108:	mov	r2, sl
   1410c:	bl	113c4 <memcpy@plt>
   14110:	ldrb	r0, [r4, #40]	; 0x28
   14114:	tst	r0, #2
   14118:	bne	14148 <_obstack_newchunk@@Base+0xe8>
   1411c:	mvn	r0, r5
   14120:	add	r1, r8, r5
   14124:	add	r1, r1, #8
   14128:	and	r0, r1, r0
   1412c:	cmp	r9, r0
   14130:	bne	14148 <_obstack_newchunk@@Base+0xe8>
   14134:	ldr	r0, [r8, #4]
   14138:	str	r0, [r7, #4]
   1413c:	mov	r0, r4
   14140:	mov	r1, r8
   14144:	bl	1419c <_obstack_newchunk@@Base+0x13c>
   14148:	add	r0, r6, sl
   1414c:	str	r6, [r4, #8]
   14150:	str	r0, [r4, #12]
   14154:	ldrb	r0, [r4, #40]	; 0x28
   14158:	and	r0, r0, #253	; 0xfd
   1415c:	strb	r0, [r4, #40]	; 0x28
   14160:	sub	sp, fp, #28
   14164:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14168:	movw	r0, #59500	; 0xe86c
   1416c:	movt	r0, #2
   14170:	ldr	r0, [r0]
   14174:	blx	r0
   14178:	ldrb	r2, [r0, #40]	; 0x28
   1417c:	tst	r2, #1
   14180:	bne	14190 <_obstack_newchunk@@Base+0x130>
   14184:	ldr	r2, [r0, #28]
   14188:	mov	r0, r1
   1418c:	bx	r2
   14190:	ldr	r2, [r0, #28]
   14194:	ldr	r0, [r0, #36]	; 0x24
   14198:	bx	r2
   1419c:	ldrb	r2, [r0, #40]	; 0x28
   141a0:	tst	r2, #1
   141a4:	bne	141b4 <_obstack_newchunk@@Base+0x154>
   141a8:	ldr	r2, [r0, #32]
   141ac:	mov	r0, r1
   141b0:	bx	r2
   141b4:	ldr	r2, [r0, #32]
   141b8:	ldr	r0, [r0, #36]	; 0x24
   141bc:	bx	r2

000141c0 <_obstack_allocated_p@@Base>:
   141c0:	ldr	r2, [r0, #4]
   141c4:	mov	r0, #0
   141c8:	b	141d0 <_obstack_allocated_p@@Base+0x10>
   141cc:	ldr	r2, [r2, #4]
   141d0:	cmp	r2, #0
   141d4:	bxeq	lr
   141d8:	cmp	r2, r1
   141dc:	bcs	141cc <_obstack_allocated_p@@Base+0xc>
   141e0:	ldr	r3, [r2]
   141e4:	cmp	r3, r1
   141e8:	bcc	141cc <_obstack_allocated_p@@Base+0xc>
   141ec:	mov	r0, #1
   141f0:	bx	lr

000141f4 <_obstack_free@@Base>:
   141f4:	push	{r4, r5, r6, sl, fp, lr}
   141f8:	add	fp, sp, #16
   141fc:	mov	r5, r1
   14200:	ldr	r1, [r0, #4]
   14204:	cmp	r1, #0
   14208:	beq	14268 <_obstack_free@@Base+0x74>
   1420c:	mov	r4, r0
   14210:	cmp	r1, r5
   14214:	bcc	14244 <_obstack_free@@Base+0x50>
   14218:	ldr	r6, [r1, #4]
   1421c:	mov	r0, r4
   14220:	bl	1419c <_obstack_newchunk@@Base+0x13c>
   14224:	ldrb	r0, [r4, #40]	; 0x28
   14228:	orr	r0, r0, #2
   1422c:	strb	r0, [r4, #40]	; 0x28
   14230:	cmp	r6, #0
   14234:	mov	r1, r6
   14238:	beq	14268 <_obstack_free@@Base+0x74>
   1423c:	cmp	r1, r5
   14240:	bcs	14218 <_obstack_free@@Base+0x24>
   14244:	ldr	r0, [r1]
   14248:	cmp	r0, r5
   1424c:	bcc	14218 <_obstack_free@@Base+0x24>
   14250:	str	r5, [r4, #8]
   14254:	str	r5, [r4, #12]
   14258:	ldr	r0, [r1]
   1425c:	str	r1, [r4, #4]
   14260:	str	r0, [r4, #16]
   14264:	pop	{r4, r5, r6, sl, fp, pc}
   14268:	cmp	r5, #0
   1426c:	popeq	{r4, r5, r6, sl, fp, pc}
   14270:	bl	115ec <abort@plt>

00014274 <_obstack_memory_used@@Base>:
   14274:	ldr	r1, [r0, #4]
   14278:	mov	r0, #0
   1427c:	b	14290 <_obstack_memory_used@@Base+0x1c>
   14280:	sub	r0, r0, r1
   14284:	ldr	r2, [r1]
   14288:	ldr	r1, [r1, #4]
   1428c:	add	r0, r0, r2
   14290:	cmp	r1, #0
   14294:	bxeq	lr
   14298:	b	14280 <_obstack_memory_used@@Base+0xc>
   1429c:	push	{fp, lr}
   142a0:	mov	fp, sp
   142a4:	movw	r0, #59576	; 0xe8b8
   142a8:	movt	r0, #2
   142ac:	ldr	r0, [r0]
   142b0:	movw	r1, #42056	; 0xa448
   142b4:	movt	r1, #1
   142b8:	movw	r2, #41963	; 0xa3eb
   142bc:	movt	r2, #1
   142c0:	bl	114d8 <fprintf@plt>
   142c4:	movw	r0, #59544	; 0xe898
   142c8:	movt	r0, #2
   142cc:	ldr	r0, [r0]
   142d0:	bl	114a8 <exit@plt>
   142d4:	push	{r4, r5, fp, lr}
   142d8:	add	fp, sp, #8
   142dc:	cmp	r0, #0
   142e0:	beq	14374 <_obstack_memory_used@@Base+0x100>
   142e4:	mov	r4, r0
   142e8:	mov	r1, #47	; 0x2f
   142ec:	bl	1152c <strrchr@plt>
   142f0:	cmp	r0, #0
   142f4:	mov	r5, r4
   142f8:	addne	r5, r0, #1
   142fc:	sub	r0, r5, r4
   14300:	cmp	r0, #7
   14304:	blt	14358 <_obstack_memory_used@@Base+0xe4>
   14308:	sub	r0, r5, #7
   1430c:	movw	r1, #42036	; 0xa434
   14310:	movt	r1, #1
   14314:	mov	r2, #7
   14318:	bl	115e0 <strncmp@plt>
   1431c:	cmp	r0, #0
   14320:	bne	14358 <_obstack_memory_used@@Base+0xe4>
   14324:	movw	r1, #42044	; 0xa43c
   14328:	movt	r1, #1
   1432c:	mov	r0, r5
   14330:	mov	r2, #3
   14334:	bl	115e0 <strncmp@plt>
   14338:	cmp	r0, #0
   1433c:	beq	14348 <_obstack_memory_used@@Base+0xd4>
   14340:	mov	r4, r5
   14344:	b	14358 <_obstack_memory_used@@Base+0xe4>
   14348:	add	r4, r5, #3
   1434c:	movw	r0, #59568	; 0xe8b0
   14350:	movt	r0, #2
   14354:	str	r4, [r0]
   14358:	movw	r0, #59572	; 0xe8b4
   1435c:	movt	r0, #2
   14360:	str	r4, [r0]
   14364:	movw	r0, #59620	; 0xe8e4
   14368:	movt	r0, #2
   1436c:	str	r4, [r0]
   14370:	pop	{r4, r5, fp, pc}
   14374:	movw	r0, #59576	; 0xe8b8
   14378:	movt	r0, #2
   1437c:	ldr	r3, [r0]
   14380:	movw	r0, #41980	; 0xa3fc
   14384:	movt	r0, #1
   14388:	mov	r1, #55	; 0x37
   1438c:	mov	r2, #1
   14390:	bl	11418 <fwrite@plt>
   14394:	bl	115ec <abort@plt>
   14398:	push	{r4, r5, r6, r7, fp, lr}
   1439c:	add	fp, sp, #16
   143a0:	sub	sp, sp, #32
   143a4:	mov	r4, r2
   143a8:	mov	r5, r0
   143ac:	ldr	r7, [fp, #12]
   143b0:	ldr	r6, [fp, #8]
   143b4:	cmp	r1, #0
   143b8:	beq	143d8 <_obstack_memory_used@@Base+0x164>
   143bc:	mov	r2, r1
   143c0:	str	r3, [sp]
   143c4:	movw	r1, #42048	; 0xa440
   143c8:	movt	r1, #1
   143cc:	mov	r0, r5
   143d0:	mov	r3, r4
   143d4:	b	143e8 <_obstack_memory_used@@Base+0x174>
   143d8:	movw	r1, #42060	; 0xa44c
   143dc:	movt	r1, #1
   143e0:	mov	r0, r5
   143e4:	mov	r2, r4
   143e8:	bl	114d8 <fprintf@plt>
   143ec:	movw	r1, #42824	; 0xa748
   143f0:	movt	r1, #1
   143f4:	movw	r2, #42067	; 0xa453
   143f8:	movt	r2, #1
   143fc:	mov	r0, r5
   14400:	movw	r3, #2022	; 0x7e6
   14404:	bl	114d8 <fprintf@plt>
   14408:	mov	r0, #10
   1440c:	mov	r1, r5
   14410:	bl	11544 <fputc@plt>
   14414:	movw	r1, #42071	; 0xa457
   14418:	movt	r1, #1
   1441c:	movw	r2, #42242	; 0xa502
   14420:	movt	r2, #1
   14424:	mov	r0, r5
   14428:	bl	114d8 <fprintf@plt>
   1442c:	mov	r0, #10
   14430:	mov	r1, r5
   14434:	bl	11544 <fputc@plt>
   14438:	cmp	r7, #9
   1443c:	bhi	14478 <_obstack_memory_used@@Base+0x204>
   14440:	add	r0, pc, #0
   14444:	ldr	pc, [r0, r7, lsl #2]
   14448:	andeq	r4, r1, r0, ror r4
   1444c:	andeq	r4, r1, ip, lsr #9
   14450:	andeq	r4, r1, r8, asr #9
   14454:	andeq	r4, r1, r4, ror #9
   14458:	strdeq	r4, [r1], -ip
   1445c:	andeq	r4, r1, r8, lsl r5
   14460:	andeq	r4, r1, r4, lsr r5
   14464:	andeq	r4, r1, r8, asr r5
   14468:			; <UNDEFINED> instruction: 0x000145b8
   1446c:	andeq	r4, r1, r4, lsl #11
   14470:	sub	sp, fp, #16
   14474:	pop	{r4, r5, r6, r7, fp, pc}
   14478:	ldm	r6, {r2, r3}
   1447c:	add	r7, r6, #8
   14480:	ldm	r7, {r0, r1, r7}
   14484:	add	lr, r6, #20
   14488:	ldm	lr, {r4, ip, lr}
   1448c:	ldr	r6, [r6, #32]
   14490:	stm	sp, {r0, r1, r7}
   14494:	add	r0, sp, #12
   14498:	stm	r0, {r4, ip, lr}
   1449c:	str	r6, [sp, #24]
   144a0:	movw	r1, #42595	; 0xa663
   144a4:	movt	r1, #1
   144a8:	b	145e8 <_obstack_memory_used@@Base+0x374>
   144ac:	ldr	r2, [r6]
   144b0:	movw	r1, #42276	; 0xa524
   144b4:	movt	r1, #1
   144b8:	mov	r0, r5
   144bc:	sub	sp, fp, #16
   144c0:	pop	{r4, r5, r6, r7, fp, lr}
   144c4:	b	114d8 <fprintf@plt>
   144c8:	ldm	r6, {r2, r3}
   144cc:	movw	r1, #42292	; 0xa534
   144d0:	movt	r1, #1
   144d4:	mov	r0, r5
   144d8:	sub	sp, fp, #16
   144dc:	pop	{r4, r5, r6, r7, fp, lr}
   144e0:	b	114d8 <fprintf@plt>
   144e4:	ldm	r6, {r2, r3}
   144e8:	ldr	r0, [r6, #8]
   144ec:	str	r0, [sp]
   144f0:	movw	r1, #42315	; 0xa54b
   144f4:	movt	r1, #1
   144f8:	b	145e8 <_obstack_memory_used@@Base+0x374>
   144fc:	ldm	r6, {r2, r3}
   14500:	ldr	r0, [r6, #8]
   14504:	ldr	r1, [r6, #12]
   14508:	stm	sp, {r0, r1}
   1450c:	movw	r1, #42343	; 0xa567
   14510:	movt	r1, #1
   14514:	b	145e8 <_obstack_memory_used@@Base+0x374>
   14518:	ldm	r6, {r2, r3}
   1451c:	add	r7, r6, #8
   14520:	ldm	r7, {r0, r1, r7}
   14524:	stm	sp, {r0, r1, r7}
   14528:	movw	r1, #42375	; 0xa587
   1452c:	movt	r1, #1
   14530:	b	145e8 <_obstack_memory_used@@Base+0x374>
   14534:	ldm	r6, {r2, r3}
   14538:	add	r7, r6, #8
   1453c:	ldm	r7, {r0, r1, r7}
   14540:	ldr	r6, [r6, #20]
   14544:	stm	sp, {r0, r1, r7}
   14548:	str	r6, [sp, #12]
   1454c:	movw	r1, #42411	; 0xa5ab
   14550:	movt	r1, #1
   14554:	b	145e8 <_obstack_memory_used@@Base+0x374>
   14558:	ldm	r6, {r2, r3}
   1455c:	add	r7, r6, #8
   14560:	ldm	r7, {r0, r1, r7}
   14564:	ldr	r4, [r6, #20]
   14568:	ldr	r6, [r6, #24]
   1456c:	stm	sp, {r0, r1, r7}
   14570:	str	r4, [sp, #12]
   14574:	str	r6, [sp, #16]
   14578:	movw	r1, #42451	; 0xa5d3
   1457c:	movt	r1, #1
   14580:	b	145e8 <_obstack_memory_used@@Base+0x374>
   14584:	ldm	r6, {r2, r3}
   14588:	add	r7, r6, #8
   1458c:	ldm	r7, {r0, r1, r7}
   14590:	add	lr, r6, #20
   14594:	ldm	lr, {r4, ip, lr}
   14598:	ldr	r6, [r6, #32]
   1459c:	stm	sp, {r0, r1, r7}
   145a0:	add	r0, sp, #12
   145a4:	stm	r0, {r4, ip, lr}
   145a8:	str	r6, [sp, #24]
   145ac:	movw	r1, #42543	; 0xa62f
   145b0:	movt	r1, #1
   145b4:	b	145e8 <_obstack_memory_used@@Base+0x374>
   145b8:	ldm	r6, {r2, r3}
   145bc:	add	r7, r6, #8
   145c0:	ldm	r7, {r0, r1, r7}
   145c4:	ldr	r4, [r6, #20]
   145c8:	ldr	ip, [r6, #24]
   145cc:	ldr	r6, [r6, #28]
   145d0:	stm	sp, {r0, r1, r7}
   145d4:	str	r4, [sp, #12]
   145d8:	str	ip, [sp, #16]
   145dc:	str	r6, [sp, #20]
   145e0:	movw	r1, #42495	; 0xa5ff
   145e4:	movt	r1, #1
   145e8:	mov	r0, r5
   145ec:	bl	114d8 <fprintf@plt>
   145f0:	sub	sp, fp, #16
   145f4:	pop	{r4, r5, r6, r7, fp, pc}
   145f8:	push	{r4, sl, fp, lr}
   145fc:	add	fp, sp, #8
   14600:	sub	sp, sp, #8
   14604:	mov	lr, #0
   14608:	ldr	ip, [fp, #8]
   1460c:	ldr	r4, [ip, lr, lsl #2]
   14610:	add	lr, lr, #1
   14614:	cmp	r4, #0
   14618:	bne	1460c <_obstack_memory_used@@Base+0x398>
   1461c:	sub	r4, lr, #1
   14620:	str	ip, [sp]
   14624:	str	r4, [sp, #4]
   14628:	bl	14398 <_obstack_memory_used@@Base+0x124>
   1462c:	sub	sp, fp, #8
   14630:	pop	{r4, sl, fp, pc}
   14634:	push	{r4, r5, fp, lr}
   14638:	add	fp, sp, #8
   1463c:	sub	sp, sp, #48	; 0x30
   14640:	mov	ip, #0
   14644:	ldr	r4, [fp, #8]
   14648:	add	lr, sp, #8
   1464c:	ldr	r5, [r4]
   14650:	str	r5, [lr, ip, lsl #2]
   14654:	cmp	r5, #0
   14658:	beq	14670 <_obstack_memory_used@@Base+0x3fc>
   1465c:	add	ip, ip, #1
   14660:	add	r4, r4, #4
   14664:	cmp	ip, #10
   14668:	bne	1464c <_obstack_memory_used@@Base+0x3d8>
   1466c:	mov	ip, #10
   14670:	str	lr, [sp]
   14674:	str	ip, [sp, #4]
   14678:	bl	14398 <_obstack_memory_used@@Base+0x124>
   1467c:	sub	sp, fp, #8
   14680:	pop	{r4, r5, fp, pc}
   14684:	push	{fp, lr}
   14688:	mov	fp, sp
   1468c:	sub	sp, sp, #8
   14690:	add	ip, fp, #8
   14694:	str	ip, [sp, #4]
   14698:	str	ip, [sp]
   1469c:	bl	14634 <_obstack_memory_used@@Base+0x3c0>
   146a0:	mov	sp, fp
   146a4:	pop	{fp, pc}
   146a8:	push	{fp, lr}
   146ac:	mov	fp, sp
   146b0:	movw	r0, #59580	; 0xe8bc
   146b4:	movt	r0, #2
   146b8:	ldr	r1, [r0]
   146bc:	mov	r0, #10
   146c0:	bl	11544 <fputc@plt>
   146c4:	movw	r0, #42655	; 0xa69f
   146c8:	movt	r0, #1
   146cc:	movw	r1, #42675	; 0xa6b3
   146d0:	movt	r1, #1
   146d4:	bl	11364 <printf@plt>
   146d8:	movw	r0, #42697	; 0xa6c9
   146dc:	movt	r0, #1
   146e0:	movw	r1, #41936	; 0xa3d0
   146e4:	movt	r1, #1
   146e8:	movw	r2, #42717	; 0xa6dd
   146ec:	movt	r2, #1
   146f0:	bl	11364 <printf@plt>
   146f4:	movw	r0, #42756	; 0xa704
   146f8:	movt	r0, #1
   146fc:	movw	r1, #42795	; 0xa72b
   14700:	movt	r1, #1
   14704:	pop	{fp, lr}
   14708:	b	11364 <printf@plt>
   1470c:	b	14710 <_obstack_memory_used@@Base+0x49c>
   14710:	push	{r4, r5, r6, sl, fp, lr}
   14714:	add	fp, sp, #16
   14718:	mov	r4, r2
   1471c:	mov	r5, r1
   14720:	mov	r6, r0
   14724:	bl	17e88 <argp_failure@@Base+0x2db4>
   14728:	cmp	r0, #0
   1472c:	popne	{r4, r5, r6, sl, fp, pc}
   14730:	cmp	r6, #0
   14734:	beq	14748 <_obstack_memory_used@@Base+0x4d4>
   14738:	cmp	r5, #0
   1473c:	cmpne	r4, #0
   14740:	bne	14748 <_obstack_memory_used@@Base+0x4d4>
   14744:	pop	{r4, r5, r6, sl, fp, pc}
   14748:	bl	14ad4 <_obstack_memory_used@@Base+0x860>
   1474c:	push	{fp, lr}
   14750:	mov	fp, sp
   14754:	bl	14b58 <_obstack_memory_used@@Base+0x8e4>
   14758:	pop	{fp, lr}
   1475c:	b	14760 <_obstack_memory_used@@Base+0x4ec>
   14760:	cmp	r0, #0
   14764:	bxne	lr
   14768:	push	{fp, lr}
   1476c:	mov	fp, sp
   14770:	bl	14ad4 <_obstack_memory_used@@Base+0x860>
   14774:	push	{fp, lr}
   14778:	mov	fp, sp
   1477c:	bl	17e54 <argp_failure@@Base+0x2d80>
   14780:	pop	{fp, lr}
   14784:	b	14760 <_obstack_memory_used@@Base+0x4ec>
   14788:	b	1474c <_obstack_memory_used@@Base+0x4d8>
   1478c:	push	{r4, r5, fp, lr}
   14790:	add	fp, sp, #8
   14794:	mov	r4, r1
   14798:	mov	r5, r0
   1479c:	bl	14b88 <_obstack_memory_used@@Base+0x914>
   147a0:	cmp	r0, #0
   147a4:	popne	{r4, r5, fp, pc}
   147a8:	cmp	r5, #0
   147ac:	beq	147bc <_obstack_memory_used@@Base+0x548>
   147b0:	cmp	r4, #0
   147b4:	bne	147bc <_obstack_memory_used@@Base+0x548>
   147b8:	pop	{r4, r5, fp, pc}
   147bc:	bl	14ad4 <_obstack_memory_used@@Base+0x860>
   147c0:	push	{fp, lr}
   147c4:	mov	fp, sp
   147c8:	bl	17e58 <argp_failure@@Base+0x2d84>
   147cc:	pop	{fp, lr}
   147d0:	b	14760 <_obstack_memory_used@@Base+0x4ec>
   147d4:	push	{fp, lr}
   147d8:	mov	fp, sp
   147dc:	bl	17e68 <argp_failure@@Base+0x2d94>
   147e0:	pop	{fp, lr}
   147e4:	b	14760 <_obstack_memory_used@@Base+0x4ec>
   147e8:	mov	r2, r1
   147ec:	mov	r1, r0
   147f0:	mov	r0, #0
   147f4:	b	14710 <_obstack_memory_used@@Base+0x49c>
   147f8:	mov	r2, r1
   147fc:	mov	r1, r0
   14800:	mov	r0, #0
   14804:	b	147d4 <_obstack_memory_used@@Base+0x560>
   14808:	mov	r2, #1
   1480c:	b	14810 <_obstack_memory_used@@Base+0x59c>
   14810:	push	{r4, r5, fp, lr}
   14814:	add	fp, sp, #8
   14818:	mov	r4, r1
   1481c:	ldr	r5, [r1]
   14820:	cmp	r0, #0
   14824:	beq	1483c <_obstack_memory_used@@Base+0x5c8>
   14828:	mov	r1, #1
   1482c:	add	r1, r1, r5, lsr #1
   14830:	adds	r5, r5, r1
   14834:	bcc	14854 <_obstack_memory_used@@Base+0x5e0>
   14838:	bl	14ad4 <_obstack_memory_used@@Base+0x860>
   1483c:	cmp	r5, #0
   14840:	bne	14854 <_obstack_memory_used@@Base+0x5e0>
   14844:	mov	r1, #64	; 0x40
   14848:	udiv	r5, r1, r2
   1484c:	cmp	r2, #64	; 0x40
   14850:	addhi	r5, r5, #1
   14854:	mov	r1, r5
   14858:	bl	14710 <_obstack_memory_used@@Base+0x49c>
   1485c:	str	r5, [r4]
   14860:	pop	{r4, r5, fp, pc}
   14864:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14868:	add	fp, sp, #24
   1486c:	mov	r8, r1
   14870:	ldr	r6, [r1]
   14874:	add	r1, r6, r6, asr #1
   14878:	cmp	r1, r6
   1487c:	mvnvs	r1, #-2147483648	; 0x80000000
   14880:	cmp	r1, r3
   14884:	mov	r5, r1
   14888:	movgt	r5, r3
   1488c:	cmn	r3, #1
   14890:	movle	r5, r1
   14894:	ldr	r4, [fp, #8]
   14898:	cmn	r4, #1
   1489c:	ble	148c4 <_obstack_memory_used@@Base+0x650>
   148a0:	cmp	r4, #0
   148a4:	beq	14918 <_obstack_memory_used@@Base+0x6a4>
   148a8:	cmn	r5, #1
   148ac:	ble	148ec <_obstack_memory_used@@Base+0x678>
   148b0:	mvn	r7, #-2147483648	; 0x80000000
   148b4:	udiv	r1, r7, r4
   148b8:	cmp	r1, r5
   148bc:	bge	14918 <_obstack_memory_used@@Base+0x6a4>
   148c0:	b	14928 <_obstack_memory_used@@Base+0x6b4>
   148c4:	cmn	r5, #1
   148c8:	ble	14908 <_obstack_memory_used@@Base+0x694>
   148cc:	cmn	r4, #1
   148d0:	beq	14918 <_obstack_memory_used@@Base+0x6a4>
   148d4:	mov	r1, #-2147483648	; 0x80000000
   148d8:	sdiv	r1, r1, r4
   148dc:	mvn	r7, #-2147483648	; 0x80000000
   148e0:	cmp	r1, r5
   148e4:	bge	14918 <_obstack_memory_used@@Base+0x6a4>
   148e8:	b	14928 <_obstack_memory_used@@Base+0x6b4>
   148ec:	beq	14918 <_obstack_memory_used@@Base+0x6a4>
   148f0:	mov	r1, #-2147483648	; 0x80000000
   148f4:	sdiv	r1, r1, r5
   148f8:	mvn	r7, #-2147483648	; 0x80000000
   148fc:	cmp	r1, r4
   14900:	bge	14918 <_obstack_memory_used@@Base+0x6a4>
   14904:	b	14928 <_obstack_memory_used@@Base+0x6b4>
   14908:	mvn	r7, #-2147483648	; 0x80000000
   1490c:	sdiv	r1, r7, r4
   14910:	cmp	r5, r1
   14914:	blt	14928 <_obstack_memory_used@@Base+0x6b4>
   14918:	mul	r1, r5, r4
   1491c:	mov	r7, #64	; 0x40
   14920:	cmp	r1, #63	; 0x3f
   14924:	bgt	14930 <_obstack_memory_used@@Base+0x6bc>
   14928:	sdiv	r5, r7, r4
   1492c:	mul	r1, r5, r4
   14930:	cmp	r0, #0
   14934:	moveq	r7, #0
   14938:	streq	r7, [r8]
   1493c:	sub	r7, r5, r6
   14940:	cmp	r7, r2
   14944:	bge	149f0 <_obstack_memory_used@@Base+0x77c>
   14948:	add	r5, r6, r2
   1494c:	mov	r1, #0
   14950:	cmp	r5, r3
   14954:	mov	r2, #0
   14958:	movwgt	r2, #1
   1495c:	cmn	r3, #1
   14960:	movwgt	r1, #1
   14964:	cmp	r5, r6
   14968:	bvs	149d8 <_obstack_memory_used@@Base+0x764>
   1496c:	ands	r1, r1, r2
   14970:	bne	149d8 <_obstack_memory_used@@Base+0x764>
   14974:	cmn	r4, #1
   14978:	ble	149a0 <_obstack_memory_used@@Base+0x72c>
   1497c:	cmp	r4, #0
   14980:	beq	149ec <_obstack_memory_used@@Base+0x778>
   14984:	cmn	r5, #1
   14988:	ble	149c4 <_obstack_memory_used@@Base+0x750>
   1498c:	mvn	r1, #-2147483648	; 0x80000000
   14990:	udiv	r1, r1, r4
   14994:	cmp	r1, r5
   14998:	bge	149ec <_obstack_memory_used@@Base+0x778>
   1499c:	b	149d8 <_obstack_memory_used@@Base+0x764>
   149a0:	cmn	r5, #1
   149a4:	ble	149dc <_obstack_memory_used@@Base+0x768>
   149a8:	cmn	r4, #1
   149ac:	beq	149ec <_obstack_memory_used@@Base+0x778>
   149b0:	mov	r1, #-2147483648	; 0x80000000
   149b4:	sdiv	r1, r1, r4
   149b8:	cmp	r1, r5
   149bc:	bge	149ec <_obstack_memory_used@@Base+0x778>
   149c0:	b	149d8 <_obstack_memory_used@@Base+0x764>
   149c4:	beq	149ec <_obstack_memory_used@@Base+0x778>
   149c8:	mov	r1, #-2147483648	; 0x80000000
   149cc:	sdiv	r1, r1, r5
   149d0:	cmp	r1, r4
   149d4:	bge	149ec <_obstack_memory_used@@Base+0x778>
   149d8:	bl	14ad4 <_obstack_memory_used@@Base+0x860>
   149dc:	mvn	r1, #-2147483648	; 0x80000000
   149e0:	sdiv	r1, r1, r4
   149e4:	cmp	r5, r1
   149e8:	blt	149d8 <_obstack_memory_used@@Base+0x764>
   149ec:	mul	r1, r5, r4
   149f0:	bl	1478c <_obstack_memory_used@@Base+0x518>
   149f4:	str	r5, [r8]
   149f8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   149fc:	mov	r1, #1
   14a00:	b	14a04 <_obstack_memory_used@@Base+0x790>
   14a04:	push	{fp, lr}
   14a08:	mov	fp, sp
   14a0c:	bl	14b04 <_obstack_memory_used@@Base+0x890>
   14a10:	pop	{fp, lr}
   14a14:	b	14760 <_obstack_memory_used@@Base+0x4ec>
   14a18:	mov	r1, #1
   14a1c:	b	14a20 <_obstack_memory_used@@Base+0x7ac>
   14a20:	push	{fp, lr}
   14a24:	mov	fp, sp
   14a28:	bl	17e64 <argp_failure@@Base+0x2d90>
   14a2c:	pop	{fp, lr}
   14a30:	b	14760 <_obstack_memory_used@@Base+0x4ec>
   14a34:	push	{r4, r5, fp, lr}
   14a38:	add	fp, sp, #8
   14a3c:	mov	r4, r1
   14a40:	mov	r5, r0
   14a44:	mov	r0, r1
   14a48:	bl	1474c <_obstack_memory_used@@Base+0x4d8>
   14a4c:	mov	r1, r5
   14a50:	mov	r2, r4
   14a54:	pop	{r4, r5, fp, lr}
   14a58:	b	113c4 <memcpy@plt>
   14a5c:	push	{r4, r5, fp, lr}
   14a60:	add	fp, sp, #8
   14a64:	mov	r4, r1
   14a68:	mov	r5, r0
   14a6c:	mov	r0, r1
   14a70:	bl	14774 <_obstack_memory_used@@Base+0x500>
   14a74:	mov	r1, r5
   14a78:	mov	r2, r4
   14a7c:	pop	{r4, r5, fp, lr}
   14a80:	b	113c4 <memcpy@plt>
   14a84:	push	{r4, r5, fp, lr}
   14a88:	add	fp, sp, #8
   14a8c:	mov	r4, r1
   14a90:	mov	r5, r0
   14a94:	add	r0, r1, #1
   14a98:	bl	14774 <_obstack_memory_used@@Base+0x500>
   14a9c:	mov	r1, #0
   14aa0:	strb	r1, [r0, r4]
   14aa4:	mov	r1, r5
   14aa8:	mov	r2, r4
   14aac:	pop	{r4, r5, fp, lr}
   14ab0:	b	113c4 <memcpy@plt>
   14ab4:	push	{r4, sl, fp, lr}
   14ab8:	add	fp, sp, #8
   14abc:	mov	r4, r0
   14ac0:	bl	114c0 <strlen@plt>
   14ac4:	add	r1, r0, #1
   14ac8:	mov	r0, r4
   14acc:	pop	{r4, sl, fp, lr}
   14ad0:	b	14a34 <_obstack_memory_used@@Base+0x7c0>
   14ad4:	push	{fp, lr}
   14ad8:	mov	fp, sp
   14adc:	movw	r0, #59544	; 0xe898
   14ae0:	movt	r0, #2
   14ae4:	ldr	r0, [r0]
   14ae8:	movw	r2, #43125	; 0xa875
   14aec:	movt	r2, #1
   14af0:	movw	r3, #41963	; 0xa3eb
   14af4:	movt	r3, #1
   14af8:	mov	r1, #0
   14afc:	bl	1143c <error@plt>
   14b00:	bl	115ec <abort@plt>
   14b04:	clz	r2, r1
   14b08:	lsr	r2, r2, #5
   14b0c:	clz	r3, r0
   14b10:	lsr	r3, r3, #5
   14b14:	orrs	r2, r3, r2
   14b18:	movwne	r1, #1
   14b1c:	movwne	r0, #1
   14b20:	cmp	r1, #0
   14b24:	beq	14b54 <_obstack_memory_used@@Base+0x8e0>
   14b28:	mvn	r2, #-2147483648	; 0x80000000
   14b2c:	udiv	r2, r2, r1
   14b30:	cmp	r2, r0
   14b34:	bcs	14b54 <_obstack_memory_used@@Base+0x8e0>
   14b38:	push	{fp, lr}
   14b3c:	mov	fp, sp
   14b40:	bl	114e4 <__errno_location@plt>
   14b44:	mov	r1, #12
   14b48:	str	r1, [r0]
   14b4c:	mov	r0, #0
   14b50:	pop	{fp, pc}
   14b54:	b	11334 <calloc@plt>
   14b58:	cmp	r0, #0
   14b5c:	movweq	r0, #1
   14b60:	cmn	r0, #1
   14b64:	ble	14b6c <_obstack_memory_used@@Base+0x8f8>
   14b68:	b	11460 <malloc@plt>
   14b6c:	push	{fp, lr}
   14b70:	mov	fp, sp
   14b74:	bl	114e4 <__errno_location@plt>
   14b78:	mov	r1, #12
   14b7c:	str	r1, [r0]
   14b80:	mov	r0, #0
   14b84:	pop	{fp, pc}
   14b88:	push	{fp, lr}
   14b8c:	mov	fp, sp
   14b90:	cmp	r0, #0
   14b94:	beq	14bb0 <_obstack_memory_used@@Base+0x93c>
   14b98:	cmp	r1, #0
   14b9c:	beq	14bbc <_obstack_memory_used@@Base+0x948>
   14ba0:	cmn	r1, #1
   14ba4:	ble	14bc8 <_obstack_memory_used@@Base+0x954>
   14ba8:	pop	{fp, lr}
   14bac:	b	113f4 <realloc@plt>
   14bb0:	mov	r0, r1
   14bb4:	pop	{fp, lr}
   14bb8:	b	14b58 <_obstack_memory_used@@Base+0x8e4>
   14bbc:	bl	13e88 <argp_usage@@Base+0x190>
   14bc0:	mov	r0, #0
   14bc4:	pop	{fp, pc}
   14bc8:	bl	114e4 <__errno_location@plt>
   14bcc:	mov	r1, #12
   14bd0:	str	r1, [r0]
   14bd4:	mov	r0, #0
   14bd8:	pop	{fp, pc}

00014bdc <argp_help@@Base>:
   14bdc:	push	{fp, lr}
   14be0:	mov	fp, sp
   14be4:	sub	sp, sp, #8
   14be8:	mov	ip, r2
   14bec:	mov	r2, r1
   14bf0:	str	r3, [sp]
   14bf4:	mov	r1, #0
   14bf8:	mov	r3, ip
   14bfc:	bl	14c08 <argp_help@@Base+0x2c>
   14c00:	mov	sp, fp
   14c04:	pop	{fp, pc}
   14c08:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14c0c:	add	fp, sp, #28
   14c10:	sub	sp, sp, #36	; 0x24
   14c14:	str	r1, [fp, #-48]	; 0xffffffd0
   14c18:	str	r0, [fp, #-44]	; 0xffffffd4
   14c1c:	cmp	r2, #0
   14c20:	beq	14f34 <argp_help@@Base+0x358>
   14c24:	mov	r7, r3
   14c28:	mov	r4, r2
   14c2c:	ldr	r0, [fp, #8]
   14c30:	str	r0, [fp, #-52]	; 0xffffffcc
   14c34:	mov	r0, r2
   14c38:	bl	11568 <flockfile@plt>
   14c3c:	movw	r5, #59504	; 0xe870
   14c40:	movt	r5, #2
   14c44:	ldr	r0, [r5, #36]	; 0x24
   14c48:	cmp	r0, #0
   14c4c:	bne	14c58 <argp_help@@Base+0x7c>
   14c50:	ldr	r0, [fp, #-48]	; 0xffffffd0
   14c54:	bl	15214 <argp_failure@@Base+0x140>
   14c58:	ldr	r2, [r5, #32]
   14c5c:	mov	r6, #0
   14c60:	mov	r0, r4
   14c64:	mov	r1, #0
   14c68:	mov	r3, #0
   14c6c:	bl	17ec4 <argp_failure@@Base+0x2df0>
   14c70:	cmp	r0, #0
   14c74:	beq	14dec <argp_help@@Base+0x210>
   14c78:	mov	r5, r0
   14c7c:	tst	r7, #11
   14c80:	beq	14cb8 <argp_help@@Base+0xdc>
   14c84:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14c88:	mov	r1, #0
   14c8c:	bl	154f0 <argp_failure@@Base+0x41c>
   14c90:	mov	r6, r0
   14c94:	movw	r1, #41682	; 0xa2d2
   14c98:	movt	r1, #1
   14c9c:	bl	15598 <argp_failure@@Base+0x4c4>
   14ca0:	movw	r1, #41845	; 0xa375
   14ca4:	movt	r1, #1
   14ca8:	mov	r0, r6
   14cac:	bl	15598 <argp_failure@@Base+0x4c4>
   14cb0:	mov	r0, r6
   14cb4:	bl	155b4 <argp_failure@@Base+0x4e0>
   14cb8:	tst	r7, #3
   14cbc:	str	r4, [fp, #-60]	; 0xffffffc4
   14cc0:	str	r7, [fp, #-40]	; 0xffffffd8
   14cc4:	beq	14dfc <argp_help@@Base+0x220>
   14cc8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14ccc:	bl	155f0 <argp_failure@@Base+0x51c>
   14cd0:	mov	r2, r0
   14cd4:	add	r0, r0, #7
   14cd8:	bic	r0, r0, #7
   14cdc:	sub	r0, sp, r0
   14ce0:	mov	sp, r0
   14ce4:	str	r0, [fp, #-56]	; 0xffffffc8
   14ce8:	mov	r1, #0
   14cec:	bl	11508 <memset@plt>
   14cf0:	movw	r4, #42898	; 0xa792
   14cf4:	movt	r4, #1
   14cf8:	mov	r9, r6
   14cfc:	mov	r8, #1
   14d00:	b	14d74 <argp_help@@Base+0x198>
   14d04:	mov	r0, r6
   14d08:	mov	r1, r5
   14d0c:	bl	15664 <argp_failure@@Base+0x590>
   14d10:	orr	r7, r7, #2
   14d14:	str	r7, [fp, #-40]	; 0xffffffd8
   14d18:	sub	sp, sp, #8
   14d1c:	str	r5, [sp]
   14d20:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14d24:	ldr	r1, [fp, #-48]	; 0xffffffd0
   14d28:	sub	r2, fp, #36	; 0x24
   14d2c:	mov	r3, #1
   14d30:	bl	157e0 <argp_failure@@Base+0x70c>
   14d34:	add	sp, sp, #8
   14d38:	mov	r6, r0
   14d3c:	mov	r0, r5
   14d40:	mov	r1, sl
   14d44:	bl	18734 <argp_failure@@Base+0x3660>
   14d48:	mov	r0, r5
   14d4c:	mov	r1, r4
   14d50:	bl	186bc <argp_failure@@Base+0x35e8>
   14d54:	mov	r0, r5
   14d58:	mov	r1, #10
   14d5c:	bl	18668 <argp_failure@@Base+0x3594>
   14d60:	cmp	r6, #0
   14d64:	movw	r4, #42905	; 0xa799
   14d68:	movt	r4, #1
   14d6c:	mov	r6, r9
   14d70:	beq	14e00 <argp_help@@Base+0x224>
   14d74:	movw	r0, #59504	; 0xe870
   14d78:	movt	r0, #2
   14d7c:	mov	r7, r0
   14d80:	ldr	r1, [r0, #28]
   14d84:	mov	r0, r5
   14d88:	bl	18734 <argp_failure@@Base+0x3660>
   14d8c:	mov	sl, r0
   14d90:	ldr	r0, [fp, #-56]	; 0xffffffc8
   14d94:	str	r0, [fp, #-36]	; 0xffffffdc
   14d98:	mov	r0, r5
   14d9c:	movw	r1, #42892	; 0xa78c
   14da0:	movt	r1, #1
   14da4:	mov	r2, r4
   14da8:	ldr	r3, [fp, #-52]	; 0xffffffcc
   14dac:	bl	18528 <argp_failure@@Base+0x3454>
   14db0:	ldr	r1, [r7, #28]
   14db4:	mov	r0, r5
   14db8:	bl	186bc <argp_failure@@Base+0x35e8>
   14dbc:	mov	r4, r0
   14dc0:	ldr	r7, [fp, #-40]	; 0xffffffd8
   14dc4:	tst	r7, #2
   14dc8:	beq	14d04 <argp_help@@Base+0x128>
   14dcc:	ldr	r0, [r6, #4]
   14dd0:	cmp	r0, #0
   14dd4:	beq	14d18 <argp_help@@Base+0x13c>
   14dd8:	mov	r0, r5
   14ddc:	movw	r1, #42912	; 0xa7a0
   14de0:	movt	r1, #1
   14de4:	bl	18620 <argp_failure@@Base+0x354c>
   14de8:	b	14d18 <argp_help@@Base+0x13c>
   14dec:	mov	r0, r4
   14df0:	sub	sp, fp, #28
   14df4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14df8:	b	1140c <funlockfile@plt>
   14dfc:	mov	r8, #0
   14e00:	ldr	r0, [fp, #-40]	; 0xffffffd8
   14e04:	tst	r0, #16
   14e08:	beq	14e34 <argp_help@@Base+0x258>
   14e0c:	sub	sp, sp, #8
   14e10:	mov	r0, #1
   14e14:	stm	sp, {r0, r5}
   14e18:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14e1c:	ldr	r1, [fp, #-48]	; 0xffffffd0
   14e20:	mov	r2, #0
   14e24:	mov	r3, #0
   14e28:	bl	159ac <argp_failure@@Base+0x8d8>
   14e2c:	add	sp, sp, #8
   14e30:	orr	r8, r0, r8
   14e34:	ldr	r0, [fp, #-40]	; 0xffffffd8
   14e38:	tst	r0, #4
   14e3c:	beq	14e5c <argp_help@@Base+0x280>
   14e40:	movw	r1, #42925	; 0xa7ad
   14e44:	movt	r1, #1
   14e48:	mov	r0, r5
   14e4c:	ldr	r2, [fp, #-52]	; 0xffffffcc
   14e50:	mov	r3, r2
   14e54:	bl	18528 <argp_failure@@Base+0x3454>
   14e58:	mov	r8, #1
   14e5c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   14e60:	tst	r0, #8
   14e64:	beq	14e9c <argp_help@@Base+0x2c0>
   14e68:	ldr	r0, [r6, #4]
   14e6c:	cmp	r0, #0
   14e70:	beq	14e9c <argp_help@@Base+0x2c0>
   14e74:	cmp	r8, #0
   14e78:	beq	14e88 <argp_help@@Base+0x2ac>
   14e7c:	mov	r0, r5
   14e80:	mov	r1, #10
   14e84:	bl	18668 <argp_failure@@Base+0x3594>
   14e88:	mov	r0, r6
   14e8c:	ldr	r1, [fp, #-48]	; 0xffffffd0
   14e90:	mov	r2, r5
   14e94:	bl	15c70 <argp_failure@@Base+0xb9c>
   14e98:	mov	r8, #1
   14e9c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   14ea0:	tst	r0, #32
   14ea4:	beq	14ed0 <argp_help@@Base+0x2f4>
   14ea8:	sub	sp, sp, #8
   14eac:	mov	r0, #0
   14eb0:	stm	sp, {r0, r5}
   14eb4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14eb8:	ldr	r1, [fp, #-48]	; 0xffffffd0
   14ebc:	mov	r2, #1
   14ec0:	mov	r3, r8
   14ec4:	bl	159ac <argp_failure@@Base+0x8d8>
   14ec8:	add	sp, sp, #8
   14ecc:	orr	r8, r0, r8
   14ed0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   14ed4:	tst	r0, #64	; 0x40
   14ed8:	beq	14f18 <argp_help@@Base+0x33c>
   14edc:	movw	r4, #59708	; 0xe93c
   14ee0:	movt	r4, #2
   14ee4:	ldr	r0, [r4]
   14ee8:	cmp	r0, #0
   14eec:	beq	14f18 <argp_help@@Base+0x33c>
   14ef0:	cmp	r8, #0
   14ef4:	beq	14f04 <argp_help@@Base+0x328>
   14ef8:	mov	r0, r5
   14efc:	mov	r1, #10
   14f00:	bl	18668 <argp_failure@@Base+0x3594>
   14f04:	ldr	r2, [r4]
   14f08:	movw	r1, #42980	; 0xa7e4
   14f0c:	movt	r1, #1
   14f10:	mov	r0, r5
   14f14:	bl	18528 <argp_failure@@Base+0x3454>
   14f18:	ldr	r0, [fp, #-60]	; 0xffffffc4
   14f1c:	bl	1140c <funlockfile@plt>
   14f20:	cmp	r6, #0
   14f24:	movne	r0, r6
   14f28:	blne	15d6c <argp_failure@@Base+0xc98>
   14f2c:	mov	r0, r5
   14f30:	bl	17f4c <argp_failure@@Base+0x2e78>
   14f34:	sub	sp, fp, #28
   14f38:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00014f3c <argp_state_help@@Base>:
   14f3c:	push	{r4, r5, fp, lr}
   14f40:	add	fp, sp, #8
   14f44:	sub	sp, sp, #8
   14f48:	mov	r4, r2
   14f4c:	mov	r2, r1
   14f50:	mov	r5, r0
   14f54:	cmp	r0, #0
   14f58:	beq	14fa4 <argp_state_help@@Base+0x68>
   14f5c:	cmp	r2, #0
   14f60:	beq	14fdc <argp_state_help@@Base+0xa0>
   14f64:	ldr	r0, [r5, #16]
   14f68:	ands	r0, r0, #2
   14f6c:	bne	14fdc <argp_state_help@@Base+0xa0>
   14f70:	ldr	r0, [r5]
   14f74:	ldr	r1, [r5, #16]
   14f78:	ldr	r3, [r5, #40]	; 0x28
   14f7c:	str	r3, [sp]
   14f80:	and	r1, r1, #64	; 0x40
   14f84:	orr	r4, r4, r1, lsl #1
   14f88:	mov	r1, r5
   14f8c:	mov	r3, r4
   14f90:	bl	14c08 <argp_help@@Base+0x2c>
   14f94:	ldrb	r0, [r5, #16]
   14f98:	tst	r0, #32
   14f9c:	beq	14fcc <argp_state_help@@Base+0x90>
   14fa0:	b	14fdc <argp_state_help@@Base+0xa0>
   14fa4:	cmp	r2, #0
   14fa8:	beq	14fdc <argp_state_help@@Base+0xa0>
   14fac:	movw	r0, #59568	; 0xe8b0
   14fb0:	movt	r0, #2
   14fb4:	ldr	r0, [r0]
   14fb8:	str	r0, [sp]
   14fbc:	mov	r0, #0
   14fc0:	mov	r1, r5
   14fc4:	mov	r3, r4
   14fc8:	bl	14c08 <argp_help@@Base+0x2c>
   14fcc:	tst	r4, #256	; 0x100
   14fd0:	bne	14fe4 <argp_state_help@@Base+0xa8>
   14fd4:	tst	r4, #512	; 0x200
   14fd8:	bne	14ff4 <argp_state_help@@Base+0xb8>
   14fdc:	sub	sp, fp, #8
   14fe0:	pop	{r4, r5, fp, pc}
   14fe4:	movw	r0, #59560	; 0xe8a8
   14fe8:	movt	r0, #2
   14fec:	ldr	r0, [r0]
   14ff0:	bl	114a8 <exit@plt>
   14ff4:	mov	r0, #0
   14ff8:	bl	114a8 <exit@plt>

00014ffc <argp_error@@Base>:
   14ffc:	sub	sp, sp, #8
   15000:	push	{r4, r5, r6, sl, fp, lr}
   15004:	add	fp, sp, #16
   15008:	sub	sp, sp, #8
   1500c:	mov	r5, r1
   15010:	mov	r4, r0
   15014:	str	r2, [fp, #8]
   15018:	str	r3, [fp, #12]
   1501c:	cmp	r0, #0
   15020:	beq	15038 <argp_error@@Base+0x3c>
   15024:	ldrb	r0, [r4, #16]
   15028:	tst	r0, #2
   1502c:	bne	150c4 <argp_error@@Base+0xc8>
   15030:	add	r0, r4, #44	; 0x2c
   15034:	b	15040 <argp_error@@Base+0x44>
   15038:	movw	r0, #59576	; 0xe8b8
   1503c:	movt	r0, #2
   15040:	ldr	r6, [r0]
   15044:	cmp	r6, #0
   15048:	beq	150c4 <argp_error@@Base+0xc8>
   1504c:	mov	r0, r6
   15050:	bl	11568 <flockfile@plt>
   15054:	add	r0, fp, #8
   15058:	str	r0, [sp, #4]
   1505c:	movw	r0, #59568	; 0xe8b0
   15060:	movt	r0, #2
   15064:	cmp	r4, #0
   15068:	addne	r0, r4, #40	; 0x28
   1506c:	ldr	r0, [r0]
   15070:	mov	r1, r6
   15074:	bl	11340 <fputs_unlocked@plt>
   15078:	mov	r0, #58	; 0x3a
   1507c:	mov	r1, r6
   15080:	bl	1161c <putc_unlocked@plt>
   15084:	mov	r0, #32
   15088:	mov	r1, r6
   1508c:	bl	1161c <putc_unlocked@plt>
   15090:	ldr	r2, [sp, #4]
   15094:	mov	r0, r6
   15098:	mov	r1, r5
   1509c:	bl	11538 <vfprintf@plt>
   150a0:	mov	r0, #10
   150a4:	mov	r1, r6
   150a8:	bl	1161c <putc_unlocked@plt>
   150ac:	mov	r0, r4
   150b0:	mov	r1, r6
   150b4:	mov	r2, #260	; 0x104
   150b8:	bl	14f3c <argp_state_help@@Base>
   150bc:	mov	r0, r6
   150c0:	bl	1140c <funlockfile@plt>
   150c4:	sub	sp, fp, #16
   150c8:	pop	{r4, r5, r6, sl, fp, lr}
   150cc:	add	sp, sp, #8
   150d0:	bx	lr

000150d4 <argp_failure@@Base>:
   150d4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   150d8:	add	fp, sp, #24
   150dc:	sub	sp, sp, #200	; 0xc8
   150e0:	mov	r4, r3
   150e4:	mov	r7, r2
   150e8:	mov	r8, r1
   150ec:	mov	r5, r0
   150f0:	cmp	r0, #0
   150f4:	beq	1510c <argp_failure@@Base+0x38>
   150f8:	ldrb	r0, [r5, #16]
   150fc:	tst	r0, #2
   15100:	bne	1520c <argp_failure@@Base+0x138>
   15104:	add	r0, r5, #44	; 0x2c
   15108:	b	15114 <argp_failure@@Base+0x40>
   1510c:	movw	r0, #59576	; 0xe8b8
   15110:	movt	r0, #2
   15114:	ldr	r6, [r0]
   15118:	cmp	r6, #0
   1511c:	beq	1520c <argp_failure@@Base+0x138>
   15120:	mov	r0, r6
   15124:	bl	11568 <flockfile@plt>
   15128:	movw	r0, #59568	; 0xe8b0
   1512c:	movt	r0, #2
   15130:	cmp	r5, #0
   15134:	addne	r0, r5, #40	; 0x28
   15138:	ldr	r0, [r0]
   1513c:	mov	r1, r6
   15140:	bl	11340 <fputs_unlocked@plt>
   15144:	cmp	r4, #0
   15148:	beq	1517c <argp_failure@@Base+0xa8>
   1514c:	add	r0, fp, #8
   15150:	str	r0, [sp]
   15154:	mov	r0, #58	; 0x3a
   15158:	mov	r1, r6
   1515c:	bl	1161c <putc_unlocked@plt>
   15160:	mov	r0, #32
   15164:	mov	r1, r6
   15168:	bl	1161c <putc_unlocked@plt>
   1516c:	ldr	r2, [sp]
   15170:	mov	r0, r6
   15174:	mov	r1, r4
   15178:	bl	11538 <vfprintf@plt>
   1517c:	cmp	r7, #0
   15180:	beq	151d8 <argp_failure@@Base+0x104>
   15184:	mov	r0, #58	; 0x3a
   15188:	mov	r1, r6
   1518c:	bl	1161c <putc_unlocked@plt>
   15190:	mov	r0, #32
   15194:	mov	r1, r6
   15198:	bl	1161c <putc_unlocked@plt>
   1519c:	mov	r1, sp
   151a0:	mov	r0, r7
   151a4:	mov	r2, #200	; 0xc8
   151a8:	bl	114fc <strerror_r@plt>
   151ac:	cmp	r0, #0
   151b0:	bne	151d0 <argp_failure@@Base+0xfc>
   151b4:	mov	r0, r7
   151b8:	bl	11478 <strerror@plt>
   151bc:	mov	r1, r0
   151c0:	movw	r0, #42871	; 0xa777
   151c4:	movt	r0, #1
   151c8:	cmp	r1, #0
   151cc:	movne	r0, r1
   151d0:	mov	r1, r6
   151d4:	bl	11340 <fputs_unlocked@plt>
   151d8:	mov	r0, #10
   151dc:	mov	r1, r6
   151e0:	bl	1161c <putc_unlocked@plt>
   151e4:	mov	r0, r6
   151e8:	bl	1140c <funlockfile@plt>
   151ec:	cmp	r8, #0
   151f0:	beq	1520c <argp_failure@@Base+0x138>
   151f4:	cmp	r5, #0
   151f8:	ldrbne	r0, [r5, #16]
   151fc:	tstne	r0, #32
   15200:	bne	1520c <argp_failure@@Base+0x138>
   15204:	mov	r0, r8
   15208:	bl	114a8 <exit@plt>
   1520c:	sub	sp, fp, #24
   15210:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   15214:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15218:	add	fp, sp, #28
   1521c:	sub	sp, sp, #60	; 0x3c
   15220:	str	r0, [sp, #8]
   15224:	movw	r0, #43000	; 0xa7f8
   15228:	movt	r0, #1
   1522c:	bl	11448 <getenv@plt>
   15230:	mov	r7, r0
   15234:	movw	r0, #59504	; 0xe870
   15238:	movt	r0, #2
   1523c:	add	r1, r0, #16
   15240:	mov	r2, #32
   15244:	vld1.64	{d16-d17}, [r0], r2
   15248:	vld1.64	{d18-d19}, [r1]
   1524c:	add	r3, sp, #16
   15250:	add	r1, r3, #16
   15254:	vldr	d20, [r0]
   15258:	vst1.64	{d18-d19}, [r1]
   1525c:	mov	r0, r3
   15260:	vst1.64	{d16-d17}, [r0], r2
   15264:	vstr	d20, [r0]
   15268:	cmp	r7, #0
   1526c:	beq	154e8 <argp_failure@@Base+0x414>
   15270:	ldrb	r4, [r7]
   15274:	cmp	r4, #0
   15278:	beq	154dc <argp_failure@@Base+0x408>
   1527c:	bl	1149c <__ctype_b_loc@plt>
   15280:	movw	sl, #43647	; 0xaa7f
   15284:	movt	sl, #1
   15288:	str	r0, [sp, #12]
   1528c:	b	152a4 <argp_failure@@Base+0x1d0>
   15290:	tst	r4, #255	; 0xff
   15294:	bne	154c0 <argp_failure@@Base+0x3ec>
   15298:	ldrb	r4, [r7]
   1529c:	cmp	r4, #0
   152a0:	beq	154dc <argp_failure@@Base+0x408>
   152a4:	ldr	r6, [r0]
   152a8:	uxtb	r1, r4
   152ac:	add	r1, r6, r1, lsl #1
   152b0:	ldrh	r1, [r1]
   152b4:	tst	r1, #8192	; 0x2000
   152b8:	beq	152d4 <argp_failure@@Base+0x200>
   152bc:	ldr	r6, [r0]
   152c0:	ldrb	r4, [r7, #1]!
   152c4:	add	r1, r6, r4, lsl #1
   152c8:	ldrh	r1, [r1]
   152cc:	tst	r1, #8192	; 0x2000
   152d0:	bne	152c0 <argp_failure@@Base+0x1ec>
   152d4:	tst	r1, #1024	; 0x400
   152d8:	beq	15290 <argp_failure@@Base+0x1bc>
   152dc:	sub	r5, r7, #1
   152e0:	mov	r0, r7
   152e4:	b	152f0 <argp_failure@@Base+0x21c>
   152e8:	add	r5, r5, #1
   152ec:	add	r0, r0, #1
   152f0:	ldrb	r1, [r0]
   152f4:	ldrb	r2, [r6, r1, lsl #1]
   152f8:	tst	r2, #8
   152fc:	bne	152e8 <argp_failure@@Base+0x214>
   15300:	cmp	r1, #95	; 0x5f
   15304:	cmpne	r1, #45	; 0x2d
   15308:	beq	152e8 <argp_failure@@Base+0x214>
   1530c:	ldrb	r1, [r5, #1]!
   15310:	add	r2, r6, r1, lsl #1
   15314:	ldrb	r2, [r2, #1]
   15318:	tst	r2, #32
   1531c:	bne	1530c <argp_failure@@Base+0x238>
   15320:	sub	r8, r0, r7
   15324:	cmp	r1, #0
   15328:	cmpne	r1, #44	; 0x2c
   1532c:	bne	1537c <argp_failure@@Base+0x2a8>
   15330:	uxtb	r0, r4
   15334:	mov	r4, #1
   15338:	cmp	r0, #110	; 0x6e
   1533c:	bne	15374 <argp_failure@@Base+0x2a0>
   15340:	ldrb	r0, [r7, #1]
   15344:	mov	r4, #1
   15348:	cmp	r0, #111	; 0x6f
   1534c:	bne	15374 <argp_failure@@Base+0x2a0>
   15350:	ldrb	r0, [r7, #2]
   15354:	mov	r4, #1
   15358:	cmp	r0, #45	; 0x2d
   1535c:	bne	15374 <argp_failure@@Base+0x2a0>
   15360:	sub	r8, r8, #3
   15364:	add	r7, r7, #3
   15368:	mov	r6, #0
   1536c:	mov	r4, #1
   15370:	b	153f8 <argp_failure@@Base+0x324>
   15374:	mov	r6, #1
   15378:	b	153f8 <argp_failure@@Base+0x324>
   1537c:	cmp	r1, #61	; 0x3d
   15380:	bne	15398 <argp_failure@@Base+0x2c4>
   15384:	ldrb	r0, [r5, #1]!
   15388:	add	r0, r6, r0, lsl #1
   1538c:	ldrb	r0, [r0, #1]
   15390:	tst	r0, #32
   15394:	bne	15384 <argp_failure@@Base+0x2b0>
   15398:	ldrb	r0, [r5]
   1539c:	add	r0, r6, r0, lsl #1
   153a0:	ldrb	r0, [r0, #1]
   153a4:	mov	r4, #0
   153a8:	tst	r0, #8
   153ac:	bne	153b8 <argp_failure@@Base+0x2e4>
   153b0:	mov	r6, #0
   153b4:	b	153f8 <argp_failure@@Base+0x324>
   153b8:	mov	r0, r5
   153bc:	bl	11580 <atoi@plt>
   153c0:	sub	r2, r5, #1
   153c4:	mov	r5, r2
   153c8:	ldrb	r1, [r2, #1]!
   153cc:	add	r1, r6, r1, lsl #1
   153d0:	ldrb	r1, [r1, #1]
   153d4:	tst	r1, #8
   153d8:	bne	153c4 <argp_failure@@Base+0x2f0>
   153dc:	ldrb	r1, [r5, #1]!
   153e0:	add	r1, r6, r1, lsl #1
   153e4:	ldrb	r1, [r1, #1]
   153e8:	tst	r1, #32
   153ec:	bne	153dc <argp_failure@@Base+0x308>
   153f0:	mov	r4, #0
   153f4:	mov	r6, r0
   153f8:	mov	r9, sl
   153fc:	b	15410 <argp_failure@@Base+0x33c>
   15400:	add	r9, r9, #16
   15404:	add	r0, sl, #144	; 0x90
   15408:	cmp	r9, r0
   1540c:	bcs	15458 <argp_failure@@Base+0x384>
   15410:	mov	r0, r9
   15414:	bl	114c0 <strlen@plt>
   15418:	cmp	r0, r8
   1541c:	bne	15400 <argp_failure@@Base+0x32c>
   15420:	mov	r0, r7
   15424:	mov	r1, r9
   15428:	mov	r2, r8
   1542c:	bl	115e0 <strncmp@plt>
   15430:	cmp	r0, #0
   15434:	bne	15400 <argp_failure@@Base+0x32c>
   15438:	cmp	r4, #0
   1543c:	beq	1544c <argp_failure@@Base+0x378>
   15440:	ldrb	r0, [r9, #14]
   15444:	cmp	r0, #0
   15448:	beq	1549c <argp_failure@@Base+0x3c8>
   1544c:	ldrb	r0, [r9, #15]
   15450:	add	r1, sp, #16
   15454:	str	r6, [r1, r0]
   15458:	add	r0, sl, #144	; 0x90
   1545c:	cmp	r9, r0
   15460:	bne	15484 <argp_failure@@Base+0x3b0>
   15464:	str	r8, [sp]
   15468:	str	r7, [sp, #4]
   1546c:	ldr	r0, [sp, #8]
   15470:	mov	r1, #0
   15474:	mov	r2, #0
   15478:	movw	r3, #43061	; 0xa835
   1547c:	movt	r3, #1
   15480:	bl	150d4 <argp_failure@@Base>
   15484:	mov	r7, r5
   15488:	ldrb	r0, [r7], #1
   1548c:	cmp	r0, #44	; 0x2c
   15490:	movne	r7, r5
   15494:	ldr	r0, [sp, #12]
   15498:	b	15298 <argp_failure@@Base+0x1c4>
   1549c:	str	r8, [sp]
   154a0:	str	r7, [sp, #4]
   154a4:	ldr	r0, [sp, #8]
   154a8:	mov	r1, #0
   154ac:	mov	r2, #0
   154b0:	movw	r3, #43014	; 0xa806
   154b4:	movt	r3, #1
   154b8:	bl	150d4 <argp_failure@@Base>
   154bc:	b	15458 <argp_failure@@Base+0x384>
   154c0:	str	r7, [sp]
   154c4:	movw	r3, #43099	; 0xa85b
   154c8:	movt	r3, #1
   154cc:	ldr	r0, [sp, #8]
   154d0:	mov	r1, #0
   154d4:	mov	r2, #0
   154d8:	bl	150d4 <argp_failure@@Base>
   154dc:	add	r1, sp, #16
   154e0:	ldr	r0, [sp, #8]
   154e4:	bl	15dc0 <argp_failure@@Base+0xcec>
   154e8:	sub	sp, fp, #28
   154ec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   154f0:	push	{r4, r5, r6, r7, fp, lr}
   154f4:	add	fp, sp, #16
   154f8:	sub	sp, sp, #8
   154fc:	mov	r4, r1
   15500:	mov	r5, r0
   15504:	ldr	r7, [r0, #16]
   15508:	bl	15e7c <argp_failure@@Base+0xda8>
   1550c:	mov	r6, r0
   15510:	cmp	r7, #0
   15514:	beq	1558c <argp_failure@@Base+0x4b8>
   15518:	ldr	r0, [r7]
   1551c:	cmp	r0, #0
   15520:	bne	1556c <argp_failure@@Base+0x498>
   15524:	b	1558c <argp_failure@@Base+0x4b8>
   15528:	ldr	r2, [r7, #8]
   1552c:	ldr	r0, [r5, #16]
   15530:	stm	sp, {r4, r5}
   15534:	sub	r0, r7, r0
   15538:	asr	r3, r0, #4
   1553c:	mov	r0, r6
   15540:	bl	160d8 <argp_failure@@Base+0x1004>
   15544:	mov	r2, r0
   15548:	ldr	r0, [r7]
   1554c:	mov	r1, r2
   15550:	bl	154f0 <argp_failure@@Base+0x41c>
   15554:	mov	r1, r0
   15558:	mov	r0, r6
   1555c:	bl	16144 <argp_failure@@Base+0x1070>
   15560:	ldr	r0, [r7, #16]!
   15564:	cmp	r0, #0
   15568:	beq	1558c <argp_failure@@Base+0x4b8>
   1556c:	ldr	r1, [r7, #12]
   15570:	cmp	r1, #0
   15574:	bne	15528 <argp_failure@@Base+0x454>
   15578:	ldr	r0, [r7, #8]
   1557c:	cmp	r0, #0
   15580:	mov	r2, r4
   15584:	bne	15528 <argp_failure@@Base+0x454>
   15588:	b	15548 <argp_failure@@Base+0x474>
   1558c:	mov	r0, r6
   15590:	sub	sp, fp, #16
   15594:	pop	{r4, r5, r6, r7, fp, pc}
   15598:	push	{fp, lr}
   1559c:	mov	fp, sp
   155a0:	bl	163f0 <argp_failure@@Base+0x131c>
   155a4:	cmp	r0, #0
   155a8:	mvnne	r1, #0
   155ac:	strne	r1, [r0, #12]
   155b0:	pop	{fp, pc}
   155b4:	ldr	r1, [r0, #4]
   155b8:	cmp	r1, #0
   155bc:	bxeq	lr
   155c0:	ldr	r2, [r0]
   155c4:	add	r2, r2, #24
   155c8:	mov	r3, #0
   155cc:	str	r3, [r2], #28
   155d0:	add	r3, r3, #1
   155d4:	cmp	r1, r3
   155d8:	bne	155cc <argp_failure@@Base+0x4f8>
   155dc:	ldr	r0, [r0]
   155e0:	movw	r3, #25724	; 0x647c
   155e4:	movt	r3, #1
   155e8:	mov	r2, #28
   155ec:	b	1158c <qsort@plt>
   155f0:	push	{r4, r5, fp, lr}
   155f4:	add	fp, sp, #8
   155f8:	mov	r1, r0
   155fc:	ldr	r0, [r0, #8]
   15600:	ldr	r5, [r1, #16]
   15604:	cmp	r0, #0
   15608:	beq	1562c <argp_failure@@Base+0x558>
   1560c:	mov	r1, #10
   15610:	bl	114cc <strchr@plt>
   15614:	mov	r4, r0
   15618:	cmp	r0, #0
   1561c:	movwne	r4, #1
   15620:	cmp	r5, #0
   15624:	bne	15638 <argp_failure@@Base+0x564>
   15628:	b	1565c <argp_failure@@Base+0x588>
   1562c:	mov	r4, #0
   15630:	cmp	r5, #0
   15634:	beq	1565c <argp_failure@@Base+0x588>
   15638:	ldr	r0, [r5]
   1563c:	cmp	r0, #0
   15640:	beq	1565c <argp_failure@@Base+0x588>
   15644:	add	r5, r5, #16
   15648:	bl	155f0 <argp_failure@@Base+0x51c>
   1564c:	add	r4, r0, r4
   15650:	ldr	r0, [r5], #16
   15654:	cmp	r0, #0
   15658:	bne	15648 <argp_failure@@Base+0x574>
   1565c:	mov	r0, r4
   15660:	pop	{r4, r5, fp, pc}
   15664:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15668:	add	fp, sp, #28
   1566c:	sub	sp, sp, #12
   15670:	ldr	r4, [r0, #4]
   15674:	cmp	r4, #0
   15678:	beq	157d8 <argp_failure@@Base+0x704>
   1567c:	mov	sl, r1
   15680:	mov	r8, r0
   15684:	ldr	r0, [r0, #8]
   15688:	bl	114c0 <strlen@plt>
   1568c:	add	r0, r0, #8
   15690:	bic	r0, r0, #7
   15694:	sub	r9, sp, r0
   15698:	mov	sp, r9
   1569c:	str	r9, [fp, #-36]	; 0xffffffdc
   156a0:	ldr	r7, [r8]
   156a4:	movw	r5, #27088	; 0x69d0
   156a8:	movt	r5, #1
   156ac:	sub	r6, fp, #36	; 0x24
   156b0:	ldr	r0, [r7, #20]
   156b4:	ldr	r2, [r0, #24]
   156b8:	mov	r0, r7
   156bc:	mov	r1, r5
   156c0:	mov	r3, r6
   156c4:	bl	168f4 <argp_failure@@Base+0x1820>
   156c8:	subs	r4, r4, #1
   156cc:	add	r7, r7, #28
   156d0:	bne	156b0 <argp_failure@@Base+0x5dc>
   156d4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   156d8:	cmp	r0, r9
   156dc:	bls	15704 <argp_failure@@Base+0x630>
   156e0:	add	r1, r0, #1
   156e4:	str	r1, [fp, #-36]	; 0xffffffdc
   156e8:	mov	r1, #0
   156ec:	strb	r1, [r0]
   156f0:	movw	r1, #43445	; 0xa9b5
   156f4:	movt	r1, #1
   156f8:	mov	r0, sl
   156fc:	mov	r2, r9
   15700:	bl	18528 <argp_failure@@Base+0x3454>
   15704:	ldr	r4, [r8, #4]
   15708:	cmp	r4, #0
   1570c:	beq	157d8 <argp_failure@@Base+0x704>
   15710:	ldr	r5, [r8]
   15714:	movw	r6, #27160	; 0x6a18
   15718:	movt	r6, #1
   1571c:	ldr	r0, [r5, #20]
   15720:	ldr	r2, [r0, #24]
   15724:	mov	r0, r5
   15728:	mov	r1, r6
   1572c:	mov	r3, sl
   15730:	bl	168f4 <argp_failure@@Base+0x1820>
   15734:	subs	r4, r4, #1
   15738:	add	r5, r5, #28
   1573c:	bne	1571c <argp_failure@@Base+0x648>
   15740:	ldr	r9, [r8, #4]
   15744:	cmp	r9, #0
   15748:	beq	157d8 <argp_failure@@Base+0x704>
   1574c:	ldr	r8, [r8]
   15750:	b	15760 <argp_failure@@Base+0x68c>
   15754:	subs	r9, r9, #1
   15758:	add	r8, r8, #28
   1575c:	beq	157d8 <argp_failure@@Base+0x704>
   15760:	ldr	r0, [r8, #4]
   15764:	cmp	r0, #0
   15768:	beq	15754 <argp_failure@@Base+0x680>
   1576c:	ldr	r5, [r8]
   15770:	ldr	r1, [r8, #20]
   15774:	ldr	r6, [r1, #24]
   15778:	sub	r4, r0, #1
   1577c:	mov	r7, r5
   15780:	ldr	r1, [r7]
   15784:	mov	r0, #0
   15788:	cmp	r1, #0
   1578c:	beq	157b8 <argp_failure@@Base+0x6e4>
   15790:	ldr	r1, [r7, #12]
   15794:	tst	r1, #4
   15798:	moveq	r5, r7
   1579c:	tst	r1, #2
   157a0:	bne	157b8 <argp_failure@@Base+0x6e4>
   157a4:	mov	r0, r7
   157a8:	mov	r1, r5
   157ac:	mov	r2, r6
   157b0:	mov	r3, sl
   157b4:	bl	16a98 <argp_failure@@Base+0x19c4>
   157b8:	sub	r1, r4, #1
   157bc:	cmp	r1, r4
   157c0:	bcs	15754 <argp_failure@@Base+0x680>
   157c4:	add	r7, r7, #24
   157c8:	cmp	r0, #0
   157cc:	mov	r4, r1
   157d0:	beq	15780 <argp_failure@@Base+0x6ac>
   157d4:	b	15754 <argp_failure@@Base+0x680>
   157d8:	sub	sp, fp, #28
   157dc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   157e0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   157e4:	add	fp, sp, #28
   157e8:	sub	sp, sp, #28
   157ec:	mov	r4, r3
   157f0:	mov	r9, r2
   157f4:	mov	r8, r1
   157f8:	mov	r2, r0
   157fc:	ldr	sl, [r9]
   15800:	ldr	r7, [r0, #8]
   15804:	ldr	r6, [r0, #16]
   15808:	movw	r1, #6
   1580c:	movt	r1, #512	; 0x200
   15810:	mov	r0, r7
   15814:	mov	r3, r8
   15818:	bl	16b4c <argp_failure@@Base+0x1a78>
   1581c:	ldr	r5, [fp, #8]
   15820:	cmp	r0, #0
   15824:	beq	1588c <argp_failure@@Base+0x7b8>
   15828:	str	r7, [sp, #20]
   1582c:	mov	r5, r0
   15830:	mov	r1, #10
   15834:	bl	1137c <strchrnul@plt>
   15838:	mov	r7, r0
   1583c:	ldrb	r0, [r0]
   15840:	cmp	r0, #0
   15844:	str	sl, [sp, #12]
   15848:	str	r6, [sp, #8]
   1584c:	beq	158a4 <argp_failure@@Base+0x7d0>
   15850:	str	r5, [sp, #16]
   15854:	ldrb	r0, [sl]
   15858:	cmp	r0, #0
   1585c:	beq	158b4 <argp_failure@@Base+0x7e0>
   15860:	ldrb	r6, [sl]
   15864:	mov	r5, #0
   15868:	add	sl, r7, #1
   1586c:	mov	r0, sl
   15870:	mov	r1, #10
   15874:	bl	1137c <strchrnul@plt>
   15878:	mov	r7, r0
   1587c:	add	r5, r5, #1
   15880:	cmp	r5, r6
   15884:	bcc	15868 <argp_failure@@Base+0x794>
   15888:	b	158b8 <argp_failure@@Base+0x7e4>
   1588c:	mov	r7, #0
   15890:	mov	r0, #0
   15894:	str	r0, [sp, #24]
   15898:	cmp	r6, #0
   1589c:	bne	15924 <argp_failure@@Base+0x850>
   158a0:	b	1595c <argp_failure@@Base+0x888>
   158a4:	mov	r0, #0
   158a8:	str	r0, [sp, #24]
   158ac:	mov	sl, r5
   158b0:	b	158d0 <argp_failure@@Base+0x7fc>
   158b4:	ldr	sl, [sp, #16]
   158b8:	ldr	r0, [r9]
   158bc:	add	r0, r0, #1
   158c0:	str	r0, [r9]
   158c4:	mov	r0, #1
   158c8:	str	r0, [sp, #24]
   158cc:	ldr	r5, [sp, #16]
   158d0:	sub	r0, r7, sl
   158d4:	str	r0, [sp, #16]
   158d8:	add	r1, r0, #1
   158dc:	ldr	r6, [fp, #8]
   158e0:	mov	r0, r6
   158e4:	bl	16b18 <argp_failure@@Base+0x1a44>
   158e8:	mov	r0, r6
   158ec:	mov	r1, sl
   158f0:	ldr	r2, [sp, #16]
   158f4:	bl	185b4 <argp_failure@@Base+0x34e0>
   158f8:	ldr	r0, [sp, #20]
   158fc:	cmp	r5, r0
   15900:	cmpne	r5, #0
   15904:	beq	15910 <argp_failure@@Base+0x83c>
   15908:	mov	r0, r5
   1590c:	bl	13e88 <argp_usage@@Base+0x190>
   15910:	ldr	sl, [sp, #12]
   15914:	ldr	r5, [fp, #8]
   15918:	ldr	r6, [sp, #8]
   1591c:	cmp	r6, #0
   15920:	beq	1595c <argp_failure@@Base+0x888>
   15924:	ldr	r0, [r6]
   15928:	cmp	r0, #0
   1592c:	beq	1595c <argp_failure@@Base+0x888>
   15930:	add	r6, r6, #16
   15934:	str	r5, [sp]
   15938:	mov	r1, r8
   1593c:	mov	r2, r9
   15940:	mov	r3, r4
   15944:	bl	157e0 <argp_failure@@Base+0x70c>
   15948:	clz	r0, r0
   1594c:	lsr	r4, r0, #5
   15950:	ldr	r0, [r6], #16
   15954:	cmp	r0, #0
   15958:	bne	15934 <argp_failure@@Base+0x860>
   1595c:	ldr	r0, [sp, #24]
   15960:	cmp	r0, #0
   15964:	cmpne	r4, #0
   15968:	bne	1597c <argp_failure@@Base+0x8a8>
   1596c:	clz	r0, r4
   15970:	lsr	r0, r0, #5
   15974:	sub	sp, fp, #28
   15978:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1597c:	ldrb	r0, [sl]
   15980:	ldrb	r1, [r7]
   15984:	cmp	r1, #0
   15988:	beq	1599c <argp_failure@@Base+0x8c8>
   1598c:	add	r0, r0, #1
   15990:	strb	r0, [sl]
   15994:	mov	r4, #0
   15998:	b	1596c <argp_failure@@Base+0x898>
   1599c:	cmp	r0, #0
   159a0:	movne	r0, #0
   159a4:	strbne	r0, [sl]
   159a8:	b	1596c <argp_failure@@Base+0x898>
   159ac:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   159b0:	add	fp, sp, #28
   159b4:	sub	sp, sp, #28
   159b8:	mov	r8, r3
   159bc:	mov	r7, r2
   159c0:	mov	sl, r1
   159c4:	mov	r5, r0
   159c8:	ldr	r4, [r0, #12]
   159cc:	ldr	r0, [r0, #16]
   159d0:	cmp	r4, #0
   159d4:	str	r0, [sp, #16]
   159d8:	mov	r1, #0
   159dc:	beq	15a1c <argp_failure@@Base+0x948>
   159e0:	str	r1, [sp, #20]
   159e4:	mov	r0, r4
   159e8:	mov	r1, #11
   159ec:	bl	114cc <strchr@plt>
   159f0:	mov	r6, r0
   159f4:	cmp	r0, #0
   159f8:	mov	r9, r0
   159fc:	subne	r9, r9, r4
   15a00:	cmp	r7, #0
   15a04:	movne	r9, #0
   15a08:	cmp	r0, #0
   15a0c:	addne	r6, r6, #1
   15a10:	cmp	r7, #0
   15a14:	moveq	r6, r4
   15a18:	b	15a28 <argp_failure@@Base+0x954>
   15a1c:	str	r1, [sp, #20]
   15a20:	mov	r9, #0
   15a24:	mov	r6, #0
   15a28:	ldr	r0, [r5, #20]
   15a2c:	cmp	r0, #0
   15a30:	str	sl, [sp, #12]
   15a34:	str	r7, [sp, #8]
   15a38:	str	r5, [sp, #24]
   15a3c:	mov	r4, r8
   15a40:	beq	15ad4 <argp_failure@@Base+0xa00>
   15a44:	cmp	r9, #0
   15a48:	beq	15a5c <argp_failure@@Base+0x988>
   15a4c:	mov	r0, r6
   15a50:	mov	r1, r9
   15a54:	bl	113b8 <strndup@plt>
   15a58:	mov	r6, r0
   15a5c:	mov	r0, r5
   15a60:	mov	r1, sl
   15a64:	bl	13438 <argp_parse@@Base+0x818>
   15a68:	mov	r2, r0
   15a6c:	cmp	r7, #0
   15a70:	movw	r0, #1
   15a74:	movt	r0, #512	; 0x200
   15a78:	addne	r0, r0, #1
   15a7c:	ldr	r3, [r5, #20]
   15a80:	mov	r1, r6
   15a84:	str	r2, [sp, #20]
   15a88:	blx	r3
   15a8c:	mov	sl, r0
   15a90:	cmp	sl, #0
   15a94:	beq	15ae0 <argp_failure@@Base+0xa0c>
   15a98:	cmp	r4, #0
   15a9c:	beq	15aac <argp_failure@@Base+0x9d8>
   15aa0:	ldr	r0, [fp, #12]
   15aa4:	mov	r1, #10
   15aa8:	bl	18668 <argp_failure@@Base+0x3594>
   15aac:	cmp	r9, #0
   15ab0:	beq	15ae8 <argp_failure@@Base+0xa14>
   15ab4:	cmp	sl, r6
   15ab8:	bne	15ae8 <argp_failure@@Base+0xa14>
   15abc:	ldr	r5, [fp, #12]
   15ac0:	mov	r0, r5
   15ac4:	mov	r1, r6
   15ac8:	mov	r2, r9
   15acc:	bl	185b4 <argp_failure@@Base+0x34e0>
   15ad0:	b	15af8 <argp_failure@@Base+0xa24>
   15ad4:	mov	sl, r6
   15ad8:	cmp	sl, #0
   15adc:	bne	15a98 <argp_failure@@Base+0x9c4>
   15ae0:	mov	r8, #0
   15ae4:	b	15b30 <argp_failure@@Base+0xa5c>
   15ae8:	ldr	r5, [fp, #12]
   15aec:	mov	r0, r5
   15af0:	mov	r1, sl
   15af4:	bl	18620 <argp_failure@@Base+0x354c>
   15af8:	mov	r0, r5
   15afc:	bl	18770 <argp_failure@@Base+0x369c>
   15b00:	ldr	r1, [r5, #4]
   15b04:	cmp	r0, r1
   15b08:	bls	15b18 <argp_failure@@Base+0xa44>
   15b0c:	ldr	r0, [fp, #12]
   15b10:	mov	r1, #10
   15b14:	bl	18668 <argp_failure@@Base+0x3594>
   15b18:	mov	r8, #1
   15b1c:	cmp	sl, r6
   15b20:	cmpne	sl, #0
   15b24:	beq	15b30 <argp_failure@@Base+0xa5c>
   15b28:	mov	r0, sl
   15b2c:	bl	13e88 <argp_usage@@Base+0x190>
   15b30:	mov	r7, r4
   15b34:	ldr	sl, [sp, #12]
   15b38:	ldr	r5, [sp, #8]
   15b3c:	cmp	r9, #0
   15b40:	cmpne	r6, #0
   15b44:	bne	15c3c <argp_failure@@Base+0xb68>
   15b48:	cmp	r5, #0
   15b4c:	ldr	r9, [fp, #12]
   15b50:	beq	15be4 <argp_failure@@Base+0xb10>
   15b54:	ldr	r0, [sp, #24]
   15b58:	ldr	r3, [r0, #20]
   15b5c:	cmp	r3, #0
   15b60:	beq	15c58 <argp_failure@@Base+0xb84>
   15b64:	movw	r0, #1
   15b68:	movt	r0, #512	; 0x200
   15b6c:	add	r0, r0, #3
   15b70:	mov	r1, #0
   15b74:	ldr	r2, [sp, #20]
   15b78:	blx	r3
   15b7c:	cmp	r0, #0
   15b80:	ldr	r6, [sp, #16]
   15b84:	beq	15be8 <argp_failure@@Base+0xb14>
   15b88:	mov	r4, r0
   15b8c:	orrs	r0, r8, r7
   15b90:	beq	15ba0 <argp_failure@@Base+0xacc>
   15b94:	mov	r0, r9
   15b98:	mov	r1, #10
   15b9c:	bl	18668 <argp_failure@@Base+0x3594>
   15ba0:	mov	r0, r9
   15ba4:	mov	r1, r4
   15ba8:	bl	18620 <argp_failure@@Base+0x354c>
   15bac:	mov	r0, r4
   15bb0:	bl	13e88 <argp_usage@@Base+0x190>
   15bb4:	mov	r0, r9
   15bb8:	bl	18770 <argp_failure@@Base+0x369c>
   15bbc:	ldr	r1, [r9, #4]
   15bc0:	mov	r8, #1
   15bc4:	cmp	r0, r1
   15bc8:	bls	15be8 <argp_failure@@Base+0xb14>
   15bcc:	mov	r0, r9
   15bd0:	mov	r1, #10
   15bd4:	bl	18668 <argp_failure@@Base+0x3594>
   15bd8:	cmp	r6, #0
   15bdc:	bne	15bf0 <argp_failure@@Base+0xb1c>
   15be0:	b	15c64 <argp_failure@@Base+0xb90>
   15be4:	ldr	r6, [sp, #16]
   15be8:	cmp	r6, #0
   15bec:	beq	15c64 <argp_failure@@Base+0xb90>
   15bf0:	ldr	r0, [r6]
   15bf4:	cmp	r0, #0
   15bf8:	beq	15c64 <argp_failure@@Base+0xb90>
   15bfc:	ldr	r4, [fp, #8]
   15c00:	add	r6, r6, #16
   15c04:	cmp	r4, #0
   15c08:	cmpne	r8, #0
   15c0c:	bne	15c64 <argp_failure@@Base+0xb90>
   15c10:	stm	sp, {r4, r9}
   15c14:	orrs	r3, r8, r7
   15c18:	movwne	r3, #1
   15c1c:	mov	r1, sl
   15c20:	mov	r2, r5
   15c24:	bl	159ac <argp_failure@@Base+0x8d8>
   15c28:	orr	r8, r0, r8
   15c2c:	ldr	r0, [r6], #16
   15c30:	cmp	r0, #0
   15c34:	bne	15c04 <argp_failure@@Base+0xb30>
   15c38:	b	15c64 <argp_failure@@Base+0xb90>
   15c3c:	ldr	r0, [sp, #24]
   15c40:	ldr	r0, [r0, #20]
   15c44:	cmp	r0, #0
   15c48:	beq	15b48 <argp_failure@@Base+0xa74>
   15c4c:	mov	r0, r6
   15c50:	bl	13e88 <argp_usage@@Base+0x190>
   15c54:	b	15b48 <argp_failure@@Base+0xa74>
   15c58:	ldr	r6, [sp, #16]
   15c5c:	cmp	r6, #0
   15c60:	bne	15bf0 <argp_failure@@Base+0xb1c>
   15c64:	mov	r0, r8
   15c68:	sub	sp, fp, #28
   15c6c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15c70:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   15c74:	add	fp, sp, #24
   15c78:	sub	sp, sp, #16
   15c7c:	mov	r8, r2
   15c80:	mov	r5, r1
   15c84:	mov	r1, #0
   15c88:	str	r1, [sp, #4]
   15c8c:	str	r1, [sp]
   15c90:	str	r1, [sp, #8]
   15c94:	ldr	r4, [r0, #4]
   15c98:	cmp	r4, #0
   15c9c:	beq	15cc8 <argp_failure@@Base+0xbf4>
   15ca0:	ldr	r6, [r0]
   15ca4:	mov	r7, sp
   15ca8:	mov	r0, r6
   15cac:	mov	r1, r5
   15cb0:	mov	r2, r8
   15cb4:	mov	r3, r7
   15cb8:	bl	16ba0 <argp_failure@@Base+0x1acc>
   15cbc:	subs	r4, r4, #1
   15cc0:	add	r6, r6, #28
   15cc4:	bne	15ca8 <argp_failure@@Base+0xbd4>
   15cc8:	ldr	r0, [sp, #8]
   15ccc:	cmp	r0, #0
   15cd0:	beq	15d64 <argp_failure@@Base+0xc90>
   15cd4:	movw	r0, #59504	; 0xe870
   15cd8:	movt	r0, #2
   15cdc:	ldr	r0, [r0, #4]
   15ce0:	cmp	r0, #0
   15ce4:	beq	15d64 <argp_failure@@Base+0xc90>
   15ce8:	cmp	r5, #0
   15cec:	beq	15cf8 <argp_failure@@Base+0xc24>
   15cf0:	ldr	r2, [r5]
   15cf4:	b	15cfc <argp_failure@@Base+0xc28>
   15cf8:	mov	r2, #0
   15cfc:	movw	r6, #43504	; 0xa9f0
   15d00:	movt	r6, #1
   15d04:	movw	r1, #5
   15d08:	movt	r1, #512	; 0x200
   15d0c:	mov	r0, r6
   15d10:	mov	r3, r5
   15d14:	bl	16b4c <argp_failure@@Base+0x1a78>
   15d18:	cmp	r0, #0
   15d1c:	beq	15d64 <argp_failure@@Base+0xc90>
   15d20:	mov	r5, r0
   15d24:	ldrb	r0, [r0]
   15d28:	cmp	r0, #0
   15d2c:	beq	15d54 <argp_failure@@Base+0xc80>
   15d30:	mov	r0, r8
   15d34:	mov	r1, #10
   15d38:	bl	18668 <argp_failure@@Base+0x3594>
   15d3c:	mov	r0, r8
   15d40:	mov	r1, r5
   15d44:	bl	18620 <argp_failure@@Base+0x354c>
   15d48:	mov	r0, r8
   15d4c:	mov	r1, #10
   15d50:	bl	18668 <argp_failure@@Base+0x3594>
   15d54:	cmp	r5, r6
   15d58:	beq	15d64 <argp_failure@@Base+0xc90>
   15d5c:	mov	r0, r5
   15d60:	bl	13e88 <argp_usage@@Base+0x190>
   15d64:	sub	sp, fp, #24
   15d68:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   15d6c:	push	{r4, r5, fp, lr}
   15d70:	add	fp, sp, #8
   15d74:	mov	r4, r0
   15d78:	ldr	r0, [r0, #12]
   15d7c:	cmp	r0, #0
   15d80:	beq	15d98 <argp_failure@@Base+0xcc4>
   15d84:	ldr	r5, [r0, #24]
   15d88:	bl	13e88 <argp_usage@@Base+0x190>
   15d8c:	cmp	r5, #0
   15d90:	mov	r0, r5
   15d94:	bne	15d84 <argp_failure@@Base+0xcb0>
   15d98:	ldr	r0, [r4, #4]
   15d9c:	cmp	r0, #0
   15da0:	beq	15db4 <argp_failure@@Base+0xce0>
   15da4:	ldr	r0, [r4]
   15da8:	bl	13e88 <argp_usage@@Base+0x190>
   15dac:	ldr	r0, [r4, #8]
   15db0:	bl	13e88 <argp_usage@@Base+0x190>
   15db4:	mov	r0, r4
   15db8:	pop	{r4, r5, fp, lr}
   15dbc:	b	13e88 <argp_usage@@Base+0x190>
   15dc0:	push	{fp, lr}
   15dc4:	mov	fp, sp
   15dc8:	sub	sp, sp, #8
   15dcc:	movw	r2, #43647	; 0xaa7f
   15dd0:	movt	r2, #1
   15dd4:	add	ip, r2, #144	; 0x90
   15dd8:	b	15de8 <argp_failure@@Base+0xd14>
   15ddc:	add	r2, r2, #16
   15de0:	cmp	r2, ip
   15de4:	bcs	15e38 <argp_failure@@Base+0xd64>
   15de8:	ldrb	r3, [r2, #14]
   15dec:	cmp	r3, #0
   15df0:	bne	15ddc <argp_failure@@Base+0xd08>
   15df4:	ldrb	r3, [r2, #15]
   15df8:	cmp	r3, #32
   15dfc:	beq	15ddc <argp_failure@@Base+0xd08>
   15e00:	ldr	lr, [r1, r3]
   15e04:	ldr	r3, [r1, #32]
   15e08:	cmp	lr, r3
   15e0c:	blt	15ddc <argp_failure@@Base+0xd08>
   15e10:	movw	r1, #43180	; 0xa8ac
   15e14:	movt	r1, #1
   15e18:	stm	sp, {r1, r2}
   15e1c:	movw	r3, #43128	; 0xa878
   15e20:	movt	r3, #1
   15e24:	mov	r1, #0
   15e28:	mov	r2, #0
   15e2c:	bl	150d4 <argp_failure@@Base>
   15e30:	mov	sp, fp
   15e34:	pop	{fp, pc}
   15e38:	add	r0, r1, #16
   15e3c:	vld1.32	{d16-d17}, [r0]
   15e40:	movw	r0, #59504	; 0xe870
   15e44:	movt	r0, #2
   15e48:	mov	r2, #32
   15e4c:	vld1.32	{d18-d19}, [r1], r2
   15e50:	add	r2, r0, #16
   15e54:	vst1.64	{d16-d17}, [r2]
   15e58:	ldr	r1, [r1]
   15e5c:	mov	r2, #36	; 0x24
   15e60:	mov	r3, r0
   15e64:	vst1.64	{d18-d19}, [r3], r2
   15e68:	mov	r2, #1
   15e6c:	str	r2, [r3]
   15e70:	str	r1, [r0, #32]
   15e74:	mov	sp, fp
   15e78:	pop	{fp, pc}
   15e7c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15e80:	add	fp, sp, #28
   15e84:	push	{r1}		; (str r1, [sp, #-4]!)
   15e88:	mov	r9, r0
   15e8c:	ldr	r4, [r0]
   15e90:	mov	r0, #16
   15e94:	bl	14b58 <_obstack_memory_used@@Base+0x8e4>
   15e98:	cmp	r0, #0
   15e9c:	beq	16078 <argp_failure@@Base+0xfa4>
   15ea0:	mov	sl, r0
   15ea4:	mov	r0, #0
   15ea8:	str	r0, [sl, #12]
   15eac:	str	r0, [sl, #4]
   15eb0:	cmp	r4, #0
   15eb4:	beq	1606c <argp_failure@@Base+0xf98>
   15eb8:	ldrb	r0, [r4, #12]
   15ebc:	tst	r0, #4
   15ec0:	bne	16098 <argp_failure@@Base+0xfc4>
   15ec4:	mov	r0, r4
   15ec8:	bl	13d50 <argp_usage@@Base+0x58>
   15ecc:	mov	r5, #1
   15ed0:	cmp	r0, #0
   15ed4:	bne	15f28 <argp_failure@@Base+0xe54>
   15ed8:	mov	r6, #0
   15edc:	mov	r5, r4
   15ee0:	b	15f08 <argp_failure@@Base+0xe34>
   15ee4:	mov	r0, r5
   15ee8:	bl	13d0c <argp_usage@@Base+0x14>
   15eec:	cmp	r0, #0
   15ef0:	addne	r6, r6, #1
   15ef4:	add	r5, r5, #24
   15ef8:	mov	r0, r5
   15efc:	bl	13d50 <argp_usage@@Base+0x58>
   15f00:	cmp	r0, #0
   15f04:	bne	15f24 <argp_failure@@Base+0xe50>
   15f08:	ldrb	r0, [r5, #12]
   15f0c:	tst	r0, #4
   15f10:	bne	15ee4 <argp_failure@@Base+0xe10>
   15f14:	ldr	r0, [sl, #4]
   15f18:	add	r0, r0, #1
   15f1c:	str	r0, [sl, #4]
   15f20:	b	15ee4 <argp_failure@@Base+0xe10>
   15f24:	add	r5, r6, #1
   15f28:	ldr	r7, [sl, #4]
   15f2c:	rsb	r0, r7, r7, lsl #3
   15f30:	lsl	r0, r0, #2
   15f34:	bl	14b58 <_obstack_memory_used@@Base+0x8e4>
   15f38:	mov	r6, r0
   15f3c:	str	r0, [sl]
   15f40:	mov	r0, r5
   15f44:	bl	14b58 <_obstack_memory_used@@Base+0x8e4>
   15f48:	str	r0, [sl, #8]
   15f4c:	cmp	r6, #0
   15f50:	movne	r5, r0
   15f54:	cmpne	r0, #0
   15f58:	bne	15f7c <argp_failure@@Base+0xea8>
   15f5c:	movw	r0, #43284	; 0xa914
   15f60:	movt	r0, #1
   15f64:	movw	r1, #43192	; 0xa8b8
   15f68:	movt	r1, #1
   15f6c:	movw	r3, #43204	; 0xa8c4
   15f70:	movt	r3, #1
   15f74:	movw	r2, #474	; 0x1da
   15f78:	bl	11610 <__assert_fail@plt>
   15f7c:	movw	r0, #37449	; 0x9249
   15f80:	movt	r0, #2340	; 0x924
   15f84:	cmp	r7, r0
   15f88:	bhi	160b8 <argp_failure@@Base+0xfe4>
   15f8c:	mov	r0, r4
   15f90:	bl	13d50 <argp_usage@@Base+0x58>
   15f94:	cmp	r0, #0
   15f98:	bne	16064 <argp_failure@@Base+0xf90>
   15f9c:	mov	r0, #0
   15fa0:	b	15fc0 <argp_failure@@Base+0xeec>
   15fa4:	add	r6, r6, #28
   15fa8:	add	r4, r7, #24
   15fac:	mov	r0, r4
   15fb0:	bl	13d50 <argp_usage@@Base+0x58>
   15fb4:	cmp	r0, #0
   15fb8:	mov	r0, r8
   15fbc:	bne	16064 <argp_failure@@Base+0xf90>
   15fc0:	str	r4, [r6]
   15fc4:	mov	r1, #0
   15fc8:	stmib	r6, {r1, r5}
   15fcc:	ldr	r8, [r4, #20]
   15fd0:	cmp	r8, #0
   15fd4:	bne	15ff4 <argp_failure@@Base+0xf20>
   15fd8:	ldr	r1, [r4]
   15fdc:	cmp	r1, #0
   15fe0:	bne	15ff0 <argp_failure@@Base+0xf1c>
   15fe4:	ldr	r1, [r4, #4]
   15fe8:	cmp	r1, #0
   15fec:	addeq	r0, r0, #1
   15ff0:	mov	r8, r0
   15ff4:	str	r8, [r6, #12]
   15ff8:	ldr	r0, [sp]
   15ffc:	str	r0, [r6, #16]
   16000:	str	r9, [r6, #20]
   16004:	mov	r7, r4
   16008:	ldr	r0, [r6, #4]
   1600c:	add	r0, r0, #1
   16010:	str	r0, [r6, #4]
   16014:	mov	r0, r4
   16018:	bl	13d0c <argp_usage@@Base+0x14>
   1601c:	cmp	r0, #0
   16020:	beq	16040 <argp_failure@@Base+0xf6c>
   16024:	ldr	r1, [sl, #8]
   16028:	ldr	r4, [r7, #4]
   1602c:	uxtb	r0, r4
   16030:	mov	r2, r5
   16034:	bl	163c0 <argp_failure@@Base+0x12ec>
   16038:	cmp	r0, #0
   1603c:	strbeq	r4, [r5], #1
   16040:	add	r4, r7, #24
   16044:	mov	r0, r4
   16048:	bl	13d50 <argp_usage@@Base+0x58>
   1604c:	cmp	r0, #0
   16050:	bne	15fa4 <argp_failure@@Base+0xed0>
   16054:	ldrb	r0, [r7, #36]	; 0x24
   16058:	tst	r0, #4
   1605c:	bne	16004 <argp_failure@@Base+0xf30>
   16060:	b	15fa4 <argp_failure@@Base+0xed0>
   16064:	mov	r0, #0
   16068:	strb	r0, [r5]
   1606c:	mov	r0, sl
   16070:	sub	sp, fp, #28
   16074:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16078:	movw	r0, #43188	; 0xa8b4
   1607c:	movt	r0, #1
   16080:	movw	r1, #43192	; 0xa8b8
   16084:	movt	r1, #1
   16088:	movw	r3, #43204	; 0xa8c4
   1608c:	movt	r3, #1
   16090:	movw	r2, #450	; 0x1c2
   16094:	bl	11610 <__assert_fail@plt>
   16098:	movw	r0, #43268	; 0xa904
   1609c:	movt	r0, #1
   160a0:	movw	r1, #43192	; 0xa8b8
   160a4:	movt	r1, #1
   160a8:	movw	r3, #43204	; 0xa8c4
   160ac:	movt	r3, #1
   160b0:	mov	r2, #460	; 0x1cc
   160b4:	bl	11610 <__assert_fail@plt>
   160b8:	movw	r0, #43319	; 0xa937
   160bc:	movt	r0, #1
   160c0:	movw	r1, #43192	; 0xa8b8
   160c4:	movt	r1, #1
   160c8:	movw	r3, #43204	; 0xa8c4
   160cc:	movt	r3, #1
   160d0:	mov	r2, #476	; 0x1dc
   160d4:	bl	11610 <__assert_fail@plt>
   160d8:	push	{r4, r5, r6, r7, fp, lr}
   160dc:	add	fp, sp, #16
   160e0:	mov	r5, r3
   160e4:	mov	r7, r2
   160e8:	mov	r6, r1
   160ec:	mov	r4, r0
   160f0:	mov	r0, #28
   160f4:	bl	14b58 <_obstack_memory_used@@Base+0x8e4>
   160f8:	cmp	r0, #0
   160fc:	beq	16140 <argp_failure@@Base+0x106c>
   16100:	ldr	r2, [fp, #12]
   16104:	ldr	r1, [fp, #8]
   16108:	str	r7, [r0]
   1610c:	stmib	r0, {r5, r6}
   16110:	str	r1, [r0, #12]
   16114:	str	r2, [r0, #16]
   16118:	cmp	r1, #0
   1611c:	beq	1612c <argp_failure@@Base+0x1058>
   16120:	ldr	r1, [r1, #20]
   16124:	add	r1, r1, #1
   16128:	b	16130 <argp_failure@@Base+0x105c>
   1612c:	mov	r1, #0
   16130:	ldr	r2, [r4, #12]
   16134:	str	r1, [r0, #20]
   16138:	str	r2, [r0, #24]
   1613c:	str	r0, [r4, #12]
   16140:	pop	{r4, r5, r6, r7, fp, pc}
   16144:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16148:	add	fp, sp, #28
   1614c:	sub	sp, sp, #28
   16150:	mov	r5, r1
   16154:	mov	r7, r0
   16158:	add	r1, r0, #12
   1615c:	mov	r0, r1
   16160:	ldr	r2, [r1]
   16164:	add	r1, r2, #24
   16168:	cmp	r2, #0
   1616c:	bne	1615c <argp_failure@@Base+0x1088>
   16170:	ldr	r1, [r5, #12]
   16174:	str	r1, [r0]
   16178:	mov	r0, #0
   1617c:	str	r0, [r5, #12]
   16180:	ldr	r0, [r5, #4]
   16184:	cmp	r0, #0
   16188:	beq	16390 <argp_failure@@Base+0x12bc>
   1618c:	ldr	r1, [r7, #4]
   16190:	cmp	r1, #0
   16194:	beq	161fc <argp_failure@@Base+0x1128>
   16198:	add	r8, r1, r0
   1619c:	rsb	r0, r8, r8, lsl #3
   161a0:	lsl	r0, r0, #2
   161a4:	bl	14b58 <_obstack_memory_used@@Base+0x8e4>
   161a8:	mov	sl, r0
   161ac:	ldr	r0, [r7, #8]
   161b0:	bl	114c0 <strlen@plt>
   161b4:	mov	r9, r0
   161b8:	ldr	r0, [r5, #8]
   161bc:	bl	114c0 <strlen@plt>
   161c0:	add	r0, r9, r0
   161c4:	add	r0, r0, #1
   161c8:	bl	14b58 <_obstack_memory_used@@Base+0x8e4>
   161cc:	cmp	sl, #0
   161d0:	movne	r6, r0
   161d4:	cmpne	r0, #0
   161d8:	bne	1621c <argp_failure@@Base+0x1148>
   161dc:	movw	r0, #43376	; 0xa970
   161e0:	movt	r0, #1
   161e4:	movw	r1, #43192	; 0xa8b8
   161e8:	movt	r1, #1
   161ec:	movw	r3, #43401	; 0xa989
   161f0:	movt	r3, #1
   161f4:	movw	r2, #970	; 0x3ca
   161f8:	bl	11610 <__assert_fail@plt>
   161fc:	str	r0, [r7, #4]
   16200:	ldr	r0, [r5]
   16204:	str	r0, [r7]
   16208:	ldr	r0, [r5, #8]
   1620c:	str	r0, [r7, #8]
   16210:	mov	r0, #0
   16214:	str	r0, [r5, #4]
   16218:	b	16390 <argp_failure@@Base+0x12bc>
   1621c:	movw	r0, #37450	; 0x924a
   16220:	movt	r0, #2340	; 0x924
   16224:	cmp	r8, r0
   16228:	bcs	163a0 <argp_failure@@Base+0x12cc>
   1622c:	ldr	r1, [r7]
   16230:	ldr	r0, [r7, #4]
   16234:	rsb	r4, r0, r0, lsl #3
   16238:	lsl	r2, r4, #2
   1623c:	mov	r0, sl
   16240:	bl	113c4 <memcpy@plt>
   16244:	add	r0, sl, r4, lsl #2
   16248:	ldm	r5, {r1, r2}
   1624c:	rsb	r2, r2, r2, lsl #3
   16250:	lsl	r2, r2, #2
   16254:	bl	113c4 <memcpy@plt>
   16258:	ldr	r1, [r7, #8]
   1625c:	mov	r0, r6
   16260:	mov	r2, r9
   16264:	bl	113c4 <memcpy@plt>
   16268:	ldr	r0, [r7, #4]
   1626c:	cmp	r0, #0
   16270:	str	r7, [sp, #12]
   16274:	str	r8, [sp, #8]
   16278:	str	sl, [sp, #4]
   1627c:	beq	162a8 <argp_failure@@Base+0x11d4>
   16280:	ldr	r1, [r7, #8]
   16284:	mov	r8, sl
   16288:	ldr	r2, [r8, #8]
   1628c:	sub	r2, r2, r1
   16290:	add	r2, r6, r2
   16294:	str	r2, [r8, #8]
   16298:	subs	r0, r0, #1
   1629c:	add	r8, r8, #28
   162a0:	bne	16288 <argp_failure@@Base+0x11b4>
   162a4:	b	162ac <argp_failure@@Base+0x11d8>
   162a8:	mov	r8, sl
   162ac:	str	r6, [sp, #24]
   162b0:	add	r6, r6, r9
   162b4:	ldr	r9, [r5, #4]
   162b8:	cmp	r9, #0
   162bc:	str	r5, [sp, #16]
   162c0:	beq	16350 <argp_failure@@Base+0x127c>
   162c4:	ldr	r7, [r5, #8]
   162c8:	str	r6, [sp, #20]
   162cc:	b	162dc <argp_failure@@Base+0x1208>
   162d0:	subs	r9, r9, #1
   162d4:	add	r8, r8, #28
   162d8:	beq	16354 <argp_failure@@Base+0x1280>
   162dc:	ldr	r0, [sp, #20]
   162e0:	str	r0, [r8, #8]
   162e4:	ldr	sl, [r8, #4]
   162e8:	cmp	sl, #0
   162ec:	beq	162d0 <argp_failure@@Base+0x11fc>
   162f0:	ldr	r4, [r8]
   162f4:	b	16308 <argp_failure@@Base+0x1234>
   162f8:	add	r7, r7, #1
   162fc:	subs	sl, sl, #1
   16300:	add	r4, r4, #24
   16304:	beq	162d0 <argp_failure@@Base+0x11fc>
   16308:	ldrb	r5, [r7]
   1630c:	mov	r0, r4
   16310:	bl	13d0c <argp_usage@@Base+0x14>
   16314:	cmp	r0, #0
   16318:	beq	162fc <argp_failure@@Base+0x1228>
   1631c:	ldr	r0, [r4, #4]
   16320:	cmp	r0, r5
   16324:	bne	162fc <argp_failure@@Base+0x1228>
   16328:	mov	r0, r5
   1632c:	ldr	r1, [sp, #24]
   16330:	mov	r2, r6
   16334:	bl	163c0 <argp_failure@@Base+0x12ec>
   16338:	cmp	r0, #0
   1633c:	bne	162f8 <argp_failure@@Base+0x1224>
   16340:	ldr	r0, [sp, #20]
   16344:	strb	r5, [r0], #1
   16348:	str	r0, [sp, #20]
   1634c:	b	162f8 <argp_failure@@Base+0x1224>
   16350:	str	r6, [sp, #20]
   16354:	mov	r0, #0
   16358:	ldr	r1, [sp, #20]
   1635c:	strb	r0, [r1]
   16360:	ldr	r4, [sp, #12]
   16364:	ldr	r0, [r4]
   16368:	bl	13e88 <argp_usage@@Base+0x190>
   1636c:	ldr	r0, [r4, #8]
   16370:	bl	13e88 <argp_usage@@Base+0x190>
   16374:	ldr	r0, [sp, #4]
   16378:	str	r0, [r4]
   1637c:	ldr	r0, [sp, #8]
   16380:	str	r0, [r4, #4]
   16384:	ldr	r0, [sp, #24]
   16388:	str	r0, [r4, #8]
   1638c:	ldr	r5, [sp, #16]
   16390:	mov	r0, r5
   16394:	sub	sp, fp, #28
   16398:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1639c:	b	15d6c <argp_failure@@Base+0xc98>
   163a0:	movw	r0, #43324	; 0xa93c
   163a4:	movt	r0, #1
   163a8:	movw	r1, #43192	; 0xa8b8
   163ac:	movt	r1, #1
   163b0:	movw	r3, #43401	; 0xa989
   163b4:	movt	r3, #1
   163b8:	mov	r2, #972	; 0x3cc
   163bc:	bl	11610 <__assert_fail@plt>
   163c0:	mov	ip, r0
   163c4:	mov	r0, #0
   163c8:	cmp	r1, r2
   163cc:	bcs	163ec <argp_failure@@Base+0x1318>
   163d0:	ldrb	r3, [r1], #1
   163d4:	cmp	r3, ip
   163d8:	beq	163e8 <argp_failure@@Base+0x1314>
   163dc:	cmp	r2, r1
   163e0:	bxeq	lr
   163e4:	b	163d0 <argp_failure@@Base+0x12fc>
   163e8:	mov	r0, #1
   163ec:	bx	lr
   163f0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   163f4:	add	fp, sp, #24
   163f8:	ldr	r6, [r0, #4]
   163fc:	mov	r8, #0
   16400:	cmp	r6, #0
   16404:	beq	16474 <argp_failure@@Base+0x13a0>
   16408:	mov	r9, r1
   1640c:	ldr	r7, [r0]
   16410:	b	16420 <argp_failure@@Base+0x134c>
   16414:	subs	r6, r6, #1
   16418:	add	r7, r7, #28
   1641c:	beq	16474 <argp_failure@@Base+0x13a0>
   16420:	ldr	r4, [r7, #4]
   16424:	cmp	r4, #0
   16428:	beq	16414 <argp_failure@@Base+0x1340>
   1642c:	ldr	r0, [r7]
   16430:	add	r5, r0, #12
   16434:	b	16444 <argp_failure@@Base+0x1370>
   16438:	subs	r4, r4, #1
   1643c:	add	r5, r5, #24
   16440:	beq	16414 <argp_failure@@Base+0x1340>
   16444:	ldr	r0, [r5, #-12]
   16448:	cmp	r0, #0
   1644c:	beq	16438 <argp_failure@@Base+0x1364>
   16450:	ldrb	r1, [r5]
   16454:	tst	r1, #2
   16458:	bne	16438 <argp_failure@@Base+0x1364>
   1645c:	mov	r1, r9
   16460:	bl	11358 <strcmp@plt>
   16464:	cmp	r0, #0
   16468:	bne	16438 <argp_failure@@Base+0x1364>
   1646c:	mov	r0, r7
   16470:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   16474:	mov	r0, r8
   16478:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1647c:	b	16480 <argp_failure@@Base+0x13ac>
   16480:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   16484:	add	fp, sp, #24
   16488:	sub	sp, sp, #8
   1648c:	mov	r9, r1
   16490:	mov	r5, r0
   16494:	ldr	r6, [r0, #16]
   16498:	cmp	r6, #0
   1649c:	beq	164b0 <argp_failure@@Base+0x13dc>
   164a0:	mov	r0, r6
   164a4:	bl	166b8 <argp_failure@@Base+0x15e4>
   164a8:	add	r0, r0, #8
   164ac:	b	164b4 <argp_failure@@Base+0x13e0>
   164b0:	add	r0, r5, #12
   164b4:	ldr	r7, [r9, #16]
   164b8:	ldr	r4, [r0]
   164bc:	cmp	r7, #0
   164c0:	beq	164d4 <argp_failure@@Base+0x1400>
   164c4:	mov	r0, r7
   164c8:	bl	166b8 <argp_failure@@Base+0x15e4>
   164cc:	add	r0, r0, #8
   164d0:	b	164d8 <argp_failure@@Base+0x1404>
   164d4:	add	r0, r9, #12
   164d8:	ldr	r1, [r0]
   164dc:	mov	r0, r4
   164e0:	bl	166d0 <argp_failure@@Base+0x15fc>
   164e4:	cmp	r0, #0
   164e8:	bne	16508 <argp_failure@@Base+0x1434>
   164ec:	cmp	r6, #0
   164f0:	mov	r0, r6
   164f4:	movwne	r0, #1
   164f8:	cmp	r7, #0
   164fc:	subne	r0, r0, #1
   16500:	cmp	r0, #0
   16504:	beq	16510 <argp_failure@@Base+0x143c>
   16508:	sub	sp, fp, #24
   1650c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   16510:	cmp	r6, #0
   16514:	beq	1652c <argp_failure@@Base+0x1458>
   16518:	mov	r0, r6
   1651c:	mov	r1, r7
   16520:	bl	166f4 <argp_failure@@Base+0x1620>
   16524:	cmp	r0, #0
   16528:	bne	16508 <argp_failure@@Base+0x1434>
   1652c:	ldr	r1, [r9, #12]
   16530:	ldr	r0, [r5, #12]
   16534:	bl	166d0 <argp_failure@@Base+0x15fc>
   16538:	cmp	r0, #0
   1653c:	bne	16508 <argp_failure@@Base+0x1434>
   16540:	mov	r0, r5
   16544:	bl	16758 <argp_failure@@Base+0x1684>
   16548:	mov	r4, r0
   1654c:	str	r0, [sp, #4]
   16550:	mov	r0, r9
   16554:	bl	16758 <argp_failure@@Base+0x1684>
   16558:	mov	r8, r0
   1655c:	str	r0, [sp]
   16560:	mov	r6, #0
   16564:	cmp	r4, #0
   16568:	mov	r7, #0
   1656c:	beq	16598 <argp_failure@@Base+0x14c4>
   16570:	ldr	r0, [r5]
   16574:	ldr	r0, [r0, #12]
   16578:	ands	r0, r0, #8
   1657c:	mov	r7, #0
   16580:	beq	16598 <argp_failure@@Base+0x14c4>
   16584:	add	r0, sp, #4
   16588:	bl	167a0 <argp_failure@@Base+0x16cc>
   1658c:	mov	r7, r0
   16590:	cmp	r0, #0
   16594:	movwne	r7, #1
   16598:	cmp	r8, #0
   1659c:	ldrne	r0, [r9]
   165a0:	ldrne	r0, [r0, #12]
   165a4:	andsne	r0, r0, #8
   165a8:	beq	165c0 <argp_failure@@Base+0x14ec>
   165ac:	mov	r0, sp
   165b0:	bl	167a0 <argp_failure@@Base+0x16cc>
   165b4:	mov	r6, r0
   165b8:	cmp	r0, #0
   165bc:	movwne	r6, #1
   165c0:	subs	r0, r7, r6
   165c4:	bne	16508 <argp_failure@@Base+0x1434>
   165c8:	mov	r0, r5
   165cc:	bl	16834 <argp_failure@@Base+0x1760>
   165d0:	mov	r5, r0
   165d4:	mov	r0, r9
   165d8:	bl	16834 <argp_failure@@Base+0x1760>
   165dc:	mov	r4, r0
   165e0:	cmp	r5, #0
   165e4:	mov	r6, r5
   165e8:	bne	16604 <argp_failure@@Base+0x1530>
   165ec:	ldr	r0, [sp, #4]
   165f0:	cmp	r0, #0
   165f4:	beq	16600 <argp_failure@@Base+0x152c>
   165f8:	ldrb	r6, [r0]
   165fc:	b	16604 <argp_failure@@Base+0x1530>
   16600:	mov	r6, #0
   16604:	cmp	r4, #0
   16608:	mov	r7, r4
   1660c:	bne	16628 <argp_failure@@Base+0x1554>
   16610:	ldr	r0, [sp]
   16614:	cmp	r0, #0
   16618:	beq	16624 <argp_failure@@Base+0x1550>
   1661c:	ldrb	r7, [r0]
   16620:	b	16628 <argp_failure@@Base+0x1554>
   16624:	mov	r7, #0
   16628:	bl	11484 <__ctype_tolower_loc@plt>
   1662c:	ldr	r0, [r0]
   16630:	ldr	r1, [r0, r7, lsl #2]
   16634:	ldr	r0, [r0, r6, lsl #2]
   16638:	subs	r0, r0, r1
   1663c:	subseq	r0, r7, r6
   16640:	bne	16508 <argp_failure@@Base+0x1434>
   16644:	cmp	r5, #0
   16648:	mov	r0, r5
   1664c:	movwne	r0, #1
   16650:	cmp	r4, #0
   16654:	subne	r0, r0, #1
   16658:	cmp	r0, #0
   1665c:	bne	16508 <argp_failure@@Base+0x1434>
   16660:	cmp	r5, #0
   16664:	beq	16674 <argp_failure@@Base+0x15a0>
   16668:	mov	r0, #0
   1666c:	sub	sp, fp, #24
   16670:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   16674:	ldr	r2, [sp, #4]
   16678:	cmp	r2, #0
   1667c:	mov	r0, r2
   16680:	movwne	r0, #1
   16684:	ldr	r1, [sp]
   16688:	cmp	r1, #0
   1668c:	subne	r0, r0, #1
   16690:	cmp	r0, #0
   16694:	bne	16508 <argp_failure@@Base+0x1434>
   16698:	cmp	r2, #0
   1669c:	beq	16668 <argp_failure@@Base+0x1594>
   166a0:	mov	r0, r2
   166a4:	bl	11400 <strcasecmp@plt>
   166a8:	cmp	r0, #0
   166ac:	moveq	r0, #0
   166b0:	sub	sp, fp, #24
   166b4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   166b8:	mov	r1, r0
   166bc:	ldr	r0, [r0, #12]
   166c0:	cmp	r0, #0
   166c4:	bne	166b8 <argp_failure@@Base+0x15e4>
   166c8:	mov	r0, r1
   166cc:	bx	lr
   166d0:	orr	r2, r1, r0
   166d4:	sub	r3, r0, r1
   166d8:	cmn	r2, #1
   166dc:	mov	r2, r3
   166e0:	suble	r2, r1, r0
   166e4:	ands	r0, r1, r0
   166e8:	movmi	r2, r3
   166ec:	mov	r0, r2
   166f0:	bx	lr
   166f4:	push	{fp, lr}
   166f8:	mov	fp, sp
   166fc:	ldr	r3, [r1, #20]
   16700:	ldr	r2, [r0, #20]
   16704:	cmp	r2, r3
   16708:	ble	1672c <argp_failure@@Base+0x1658>
   1670c:	ldr	r0, [r0, #12]
   16710:	ldr	r2, [r0, #20]
   16714:	cmp	r2, r3
   16718:	bgt	1670c <argp_failure@@Base+0x1638>
   1671c:	bl	1685c <argp_failure@@Base+0x1788>
   16720:	cmp	r0, #0
   16724:	movweq	r0, #1
   16728:	pop	{fp, pc}
   1672c:	bge	16750 <argp_failure@@Base+0x167c>
   16730:	ldr	r1, [r1, #12]
   16734:	ldr	r3, [r1, #20]
   16738:	cmp	r2, r3
   1673c:	blt	16730 <argp_failure@@Base+0x165c>
   16740:	bl	1685c <argp_failure@@Base+0x1788>
   16744:	cmp	r0, #0
   16748:	mvneq	r0, #0
   1674c:	pop	{fp, pc}
   16750:	pop	{fp, lr}
   16754:	b	1685c <argp_failure@@Base+0x1788>
   16758:	ldr	r1, [r0, #4]
   1675c:	cmp	r1, #0
   16760:	beq	16798 <argp_failure@@Base+0x16c4>
   16764:	ldr	r0, [r0]
   16768:	add	r2, r0, #12
   1676c:	b	1677c <argp_failure@@Base+0x16a8>
   16770:	add	r2, r2, #24
   16774:	subs	r1, r1, #1
   16778:	beq	16798 <argp_failure@@Base+0x16c4>
   1677c:	ldr	r0, [r2, #-12]
   16780:	cmp	r0, #0
   16784:	beq	16770 <argp_failure@@Base+0x169c>
   16788:	ldrb	r3, [r2]
   1678c:	tst	r3, #2
   16790:	bxeq	lr
   16794:	b	16770 <argp_failure@@Base+0x169c>
   16798:	mov	r0, #0
   1679c:	bx	lr
   167a0:	push	{r4, sl, fp, lr}
   167a4:	add	fp, sp, #8
   167a8:	mov	r4, r0
   167ac:	bl	1149c <__ctype_b_loc@plt>
   167b0:	ldr	r3, [r0]
   167b4:	ldr	r2, [r4]
   167b8:	ldrb	r1, [r2]
   167bc:	add	r3, r3, r1, lsl #1
   167c0:	ldrb	r3, [r3, #1]
   167c4:	tst	r3, #32
   167c8:	beq	167ec <argp_failure@@Base+0x1718>
   167cc:	add	r2, r2, #1
   167d0:	str	r2, [r4]
   167d4:	ldrb	r1, [r2], #1
   167d8:	ldr	r3, [r0]
   167dc:	add	r3, r3, r1, lsl #1
   167e0:	ldrb	r3, [r3, #1]
   167e4:	tst	r3, #32
   167e8:	bne	167d0 <argp_failure@@Base+0x16fc>
   167ec:	subs	ip, r1, #45	; 0x2d
   167f0:	movwne	ip, #1
   167f4:	ldr	r2, [r4]
   167f8:	ldrb	r3, [r2]
   167fc:	cmp	r3, #0
   16800:	beq	1682c <argp_failure@@Base+0x1758>
   16804:	add	r2, r2, #1
   16808:	ldr	r1, [r0]
   1680c:	uxtb	r3, r3
   16810:	ldrb	r1, [r1, r3, lsl #1]
   16814:	tst	r1, #8
   16818:	bne	1682c <argp_failure@@Base+0x1758>
   1681c:	str	r2, [r4]
   16820:	ldrb	r3, [r2], #1
   16824:	cmp	r3, #0
   16828:	bne	16808 <argp_failure@@Base+0x1734>
   1682c:	mov	r0, ip
   16830:	pop	{r4, sl, fp, pc}
   16834:	push	{fp, lr}
   16838:	mov	fp, sp
   1683c:	ldr	r1, [r0, #20]
   16840:	ldr	r2, [r1, #24]
   16844:	movw	r1, #27056	; 0x69b0
   16848:	movt	r1, #1
   1684c:	mov	r3, #0
   16850:	bl	168f4 <argp_failure@@Base+0x1820>
   16854:	uxtb	r0, r0
   16858:	pop	{fp, pc}
   1685c:	push	{r4, r5, fp, lr}
   16860:	add	fp, sp, #8
   16864:	mov	r4, r1
   16868:	mov	r5, r0
   1686c:	ldr	r1, [r1, #12]
   16870:	ldr	r0, [r0, #12]
   16874:	cmp	r0, r1
   16878:	beq	1688c <argp_failure@@Base+0x17b8>
   1687c:	bl	1685c <argp_failure@@Base+0x1788>
   16880:	cmp	r0, #0
   16884:	beq	1689c <argp_failure@@Base+0x17c8>
   16888:	pop	{r4, r5, fp, pc}
   1688c:	mov	r0, r5
   16890:	mov	r1, r4
   16894:	pop	{r4, r5, fp, lr}
   16898:	b	168c0 <argp_failure@@Base+0x17ec>
   1689c:	ldr	r1, [r4, #8]
   168a0:	ldr	r0, [r5, #8]
   168a4:	bl	166d0 <argp_failure@@Base+0x15fc>
   168a8:	cmp	r0, #0
   168ac:	popne	{r4, r5, fp, pc}
   168b0:	ldr	r0, [r5, #4]
   168b4:	ldr	r1, [r4, #4]
   168b8:	sub	r0, r1, r0
   168bc:	pop	{r4, r5, fp, pc}
   168c0:	push	{r4, r5, fp, lr}
   168c4:	add	fp, sp, #8
   168c8:	mov	r4, r1
   168cc:	mov	r5, r0
   168d0:	ldr	r1, [r1, #8]
   168d4:	ldr	r0, [r0, #8]
   168d8:	bl	166d0 <argp_failure@@Base+0x15fc>
   168dc:	cmp	r0, #0
   168e0:	popne	{r4, r5, fp, pc}
   168e4:	ldr	r0, [r5, #4]
   168e8:	ldr	r1, [r4, #4]
   168ec:	sub	r0, r1, r0
   168f0:	pop	{r4, r5, fp, pc}
   168f4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   168f8:	add	fp, sp, #28
   168fc:	sub	sp, sp, #4
   16900:	mov	sl, r1
   16904:	ldr	r1, [r0, #4]
   16908:	cmp	r1, #0
   1690c:	beq	169a4 <argp_failure@@Base+0x18d0>
   16910:	mov	r8, r3
   16914:	mov	r9, r2
   16918:	ldr	r4, [r0]
   1691c:	sub	r6, r1, #1
   16920:	ldr	r5, [r0, #8]
   16924:	mov	r7, r4
   16928:	mov	r0, r7
   1692c:	bl	13d0c <argp_usage@@Base+0x14>
   16930:	mov	r1, r0
   16934:	mov	r0, #0
   16938:	cmp	r1, #0
   1693c:	beq	16980 <argp_failure@@Base+0x18ac>
   16940:	ldrb	r1, [r5]
   16944:	ldr	r2, [r7, #4]
   16948:	cmp	r2, r1
   1694c:	bne	16980 <argp_failure@@Base+0x18ac>
   16950:	ldr	r1, [r7, #12]
   16954:	tst	r1, #4
   16958:	moveq	r4, r7
   1695c:	mov	r0, #0
   16960:	tst	r1, #2
   16964:	bne	1697c <argp_failure@@Base+0x18a8>
   16968:	mov	r0, r7
   1696c:	mov	r1, r4
   16970:	mov	r2, r9
   16974:	mov	r3, r8
   16978:	blx	sl
   1697c:	add	r5, r5, #1
   16980:	sub	r1, r6, #1
   16984:	cmp	r1, r6
   16988:	bcs	1699c <argp_failure@@Base+0x18c8>
   1698c:	add	r7, r7, #24
   16990:	cmp	r0, #0
   16994:	mov	r6, r1
   16998:	beq	16928 <argp_failure@@Base+0x1854>
   1699c:	sub	sp, fp, #28
   169a0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   169a4:	mov	r0, #0
   169a8:	sub	sp, fp, #28
   169ac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   169b0:	push	{r4, sl, fp, lr}
   169b4:	add	fp, sp, #8
   169b8:	mov	r4, r0
   169bc:	bl	13d0c <argp_usage@@Base+0x14>
   169c0:	cmp	r0, #0
   169c4:	ldrne	r0, [r4, #4]
   169c8:	moveq	r0, #0
   169cc:	pop	{r4, sl, fp, pc}
   169d0:	ldr	r2, [r0, #8]
   169d4:	cmp	r2, #0
   169d8:	bne	16a10 <argp_failure@@Base+0x193c>
   169dc:	ldr	r2, [r1, #8]
   169e0:	cmp	r2, #0
   169e4:	bne	16a10 <argp_failure@@Base+0x193c>
   169e8:	ldr	r2, [r0, #12]
   169ec:	ldr	r1, [r1, #12]
   169f0:	orr	r1, r1, r2
   169f4:	tst	r1, #16
   169f8:	bne	16a10 <argp_failure@@Base+0x193c>
   169fc:	ldr	r0, [r0, #4]
   16a00:	ldr	r1, [r3]
   16a04:	add	r2, r1, #1
   16a08:	str	r2, [r3]
   16a0c:	strb	r0, [r1]
   16a10:	mov	r0, #0
   16a14:	bx	lr
   16a18:	push	{r4, r5, r6, sl, fp, lr}
   16a1c:	add	fp, sp, #16
   16a20:	mov	r4, r3
   16a24:	mov	r6, r0
   16a28:	ldr	r5, [r0, #8]
   16a2c:	ldr	r0, [r0, #12]
   16a30:	ldr	r2, [r1, #12]
   16a34:	orr	r0, r2, r0
   16a38:	cmp	r5, #0
   16a3c:	ldreq	r5, [r1, #8]
   16a40:	tst	r0, #16
   16a44:	bne	16a90 <argp_failure@@Base+0x19bc>
   16a48:	cmp	r5, #0
   16a4c:	beq	16a90 <argp_failure@@Base+0x19bc>
   16a50:	tst	r0, #1
   16a54:	bne	16a78 <argp_failure@@Base+0x19a4>
   16a58:	mov	r0, r5
   16a5c:	bl	114c0 <strlen@plt>
   16a60:	add	r1, r0, #6
   16a64:	mov	r0, r4
   16a68:	bl	16b18 <argp_failure@@Base+0x1a44>
   16a6c:	movw	r1, #43463	; 0xa9c7
   16a70:	movt	r1, #1
   16a74:	b	16a80 <argp_failure@@Base+0x19ac>
   16a78:	movw	r1, #43452	; 0xa9bc
   16a7c:	movt	r1, #1
   16a80:	ldr	r2, [r6, #4]
   16a84:	mov	r0, r4
   16a88:	mov	r3, r5
   16a8c:	bl	18528 <argp_failure@@Base+0x3454>
   16a90:	mov	r0, #0
   16a94:	pop	{r4, r5, r6, sl, fp, pc}
   16a98:	push	{fp, lr}
   16a9c:	mov	fp, sp
   16aa0:	ldr	ip, [r0, #8]
   16aa4:	ldr	lr, [r0, #12]
   16aa8:	ldr	r2, [r1, #12]
   16aac:	orr	lr, r2, lr
   16ab0:	cmp	ip, #0
   16ab4:	ldreq	ip, [r1, #8]
   16ab8:	tst	lr, #16
   16abc:	bne	16af4 <argp_failure@@Base+0x1a20>
   16ac0:	cmp	ip, #0
   16ac4:	beq	16ae0 <argp_failure@@Base+0x1a0c>
   16ac8:	ldr	r2, [r0]
   16acc:	tst	lr, #1
   16ad0:	bne	16afc <argp_failure@@Base+0x1a28>
   16ad4:	movw	r1, #43485	; 0xa9dd
   16ad8:	movt	r1, #1
   16adc:	b	16b04 <argp_failure@@Base+0x1a30>
   16ae0:	ldr	r2, [r0]
   16ae4:	movw	r1, #43496	; 0xa9e8
   16ae8:	movt	r1, #1
   16aec:	mov	r0, r3
   16af0:	bl	18528 <argp_failure@@Base+0x3454>
   16af4:	mov	r0, #0
   16af8:	pop	{fp, pc}
   16afc:	movw	r1, #43472	; 0xa9d0
   16b00:	movt	r1, #1
   16b04:	mov	r0, r3
   16b08:	mov	r3, ip
   16b0c:	bl	18528 <argp_failure@@Base+0x3454>
   16b10:	mov	r0, #0
   16b14:	pop	{fp, pc}
   16b18:	push	{r4, r5, fp, lr}
   16b1c:	add	fp, sp, #8
   16b20:	mov	r4, r1
   16b24:	mov	r5, r0
   16b28:	bl	18770 <argp_failure@@Base+0x369c>
   16b2c:	add	r0, r0, r4
   16b30:	ldr	r2, [r5, #8]
   16b34:	mov	r1, #10
   16b38:	cmp	r0, r2
   16b3c:	movwcc	r1, #32
   16b40:	mov	r0, r5
   16b44:	pop	{r4, r5, fp, lr}
   16b48:	b	18668 <argp_failure@@Base+0x3594>
   16b4c:	push	{r4, r5, r6, sl, fp, lr}
   16b50:	add	fp, sp, #16
   16b54:	mov	r4, r0
   16b58:	cmp	r2, #0
   16b5c:	beq	16b98 <argp_failure@@Base+0x1ac4>
   16b60:	mov	r6, r2
   16b64:	ldr	r0, [r2, #20]
   16b68:	cmp	r0, #0
   16b6c:	beq	16b98 <argp_failure@@Base+0x1ac4>
   16b70:	mov	r5, r1
   16b74:	mov	r0, r6
   16b78:	mov	r1, r3
   16b7c:	bl	13438 <argp_parse@@Base+0x818>
   16b80:	mov	r2, r0
   16b84:	ldr	r3, [r6, #20]
   16b88:	mov	r0, r5
   16b8c:	mov	r1, r4
   16b90:	pop	{r4, r5, r6, sl, fp, lr}
   16b94:	bx	r3
   16b98:	mov	r0, r4
   16b9c:	pop	{r4, r5, r6, sl, fp, pc}
   16ba0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16ba4:	add	fp, sp, #28
   16ba8:	sub	sp, sp, #44	; 0x2c
   16bac:	mov	r7, r3
   16bb0:	mov	r4, r2
   16bb4:	mov	r8, r1
   16bb8:	mov	r5, r0
   16bbc:	ldr	r9, [r0]
   16bc0:	ldr	r6, [r0, #8]
   16bc4:	mov	sl, #0
   16bc8:	mov	r0, r2
   16bcc:	mov	r1, #0
   16bd0:	bl	186bc <argp_failure@@Base+0x35e8>
   16bd4:	str	r0, [sp, #8]
   16bd8:	ldr	r3, [r4, #12]
   16bdc:	str	r8, [sp, #40]	; 0x28
   16be0:	mov	r0, #1
   16be4:	str	r0, [sp, #36]	; 0x24
   16be8:	str	r7, [sp, #16]
   16bec:	str	r7, [sp, #32]
   16bf0:	str	r4, [sp, #28]
   16bf4:	str	r5, [sp, #24]
   16bf8:	ldrb	r0, [r9, #12]
   16bfc:	tst	r0, #8
   16c00:	str	r3, [sp, #12]
   16c04:	str	r8, [sp, #4]
   16c08:	bne	16c48 <argp_failure@@Base+0x1b74>
   16c0c:	ldr	r0, [r5, #4]
   16c10:	cmp	r0, #0
   16c14:	beq	16c48 <argp_failure@@Base+0x1b74>
   16c18:	add	r1, r9, #12
   16c1c:	b	16c2c <argp_failure@@Base+0x1b58>
   16c20:	add	r1, r1, #24
   16c24:	subs	r0, r0, #1
   16c28:	beq	16c48 <argp_failure@@Base+0x1b74>
   16c2c:	ldr	r2, [r1, #-12]
   16c30:	cmp	r2, #0
   16c34:	beq	16c20 <argp_failure@@Base+0x1b4c>
   16c38:	ldrb	r2, [r1]
   16c3c:	tst	r2, #2
   16c40:	bne	16c20 <argp_failure@@Base+0x1b4c>
   16c44:	mov	sl, #1
   16c48:	movw	r7, #59504	; 0xe870
   16c4c:	movt	r7, #2
   16c50:	ldr	r1, [r7, #8]
   16c54:	mov	r0, r4
   16c58:	bl	18734 <argp_failure@@Base+0x3660>
   16c5c:	str	r5, [sp, #20]
   16c60:	ldr	r8, [r5, #4]
   16c64:	mov	r5, r7
   16c68:	cmp	r8, #0
   16c6c:	beq	16d20 <argp_failure@@Base+0x1c4c>
   16c70:	mov	r7, r9
   16c74:	b	16ca4 <argp_failure@@Base+0x1bd0>
   16c78:	mov	r0, r9
   16c7c:	movw	r1, #43124	; 0xa874
   16c80:	movt	r1, #1
   16c84:	movw	r2, #43620	; 0xaa64
   16c88:	movt	r2, #1
   16c8c:	mov	r3, r4
   16c90:	bl	1706c <argp_failure@@Base+0x1f98>
   16c94:	add	r6, r6, #1
   16c98:	subs	r8, r8, #1
   16c9c:	add	r7, r7, #24
   16ca0:	beq	16d20 <argp_failure@@Base+0x1c4c>
   16ca4:	mov	r0, r7
   16ca8:	bl	13d0c <argp_usage@@Base+0x14>
   16cac:	cmp	r0, #0
   16cb0:	beq	16c98 <argp_failure@@Base+0x1bc4>
   16cb4:	ldrb	r0, [r6]
   16cb8:	ldr	r1, [r7, #4]
   16cbc:	cmp	r1, r0
   16cc0:	bne	16c98 <argp_failure@@Base+0x1bc4>
   16cc4:	ldrb	r0, [r7, #12]
   16cc8:	tst	r0, #2
   16ccc:	bne	16c94 <argp_failure@@Base+0x1bc0>
   16cd0:	ldr	r0, [r5, #8]
   16cd4:	add	r1, sp, #24
   16cd8:	bl	16f74 <argp_failure@@Base+0x1ea0>
   16cdc:	mov	r0, r4
   16ce0:	mov	r1, #45	; 0x2d
   16ce4:	bl	18668 <argp_failure@@Base+0x3594>
   16ce8:	ldrb	r1, [r6]
   16cec:	mov	r0, r4
   16cf0:	bl	18668 <argp_failure@@Base+0x3594>
   16cf4:	cmp	sl, #0
   16cf8:	beq	16c78 <argp_failure@@Base+0x1ba4>
   16cfc:	ldr	r0, [r5]
   16d00:	cmp	r0, #0
   16d04:	bne	16c78 <argp_failure@@Base+0x1ba4>
   16d08:	ldr	r0, [r9, #8]
   16d0c:	cmp	r0, #0
   16d10:	ldrne	r0, [sp, #16]
   16d14:	movne	r1, #1
   16d18:	strne	r1, [r0, #8]
   16d1c:	b	16c94 <argp_failure@@Base+0x1bc0>
   16d20:	ldrb	r0, [r9, #12]
   16d24:	tst	r0, #8
   16d28:	bne	16dbc <argp_failure@@Base+0x1ce8>
   16d2c:	ldr	r1, [r5, #12]
   16d30:	mov	r0, r4
   16d34:	bl	18734 <argp_failure@@Base+0x3660>
   16d38:	ldr	r0, [sp, #20]
   16d3c:	ldr	r8, [r0, #4]
   16d40:	cmp	r8, #0
   16d44:	beq	16e24 <argp_failure@@Base+0x1d50>
   16d48:	add	sl, r9, #12
   16d4c:	movw	r7, #43630	; 0xaa6e
   16d50:	movt	r7, #1
   16d54:	movw	r6, #43634	; 0xaa72
   16d58:	movt	r6, #1
   16d5c:	b	16d6c <argp_failure@@Base+0x1c98>
   16d60:	add	sl, sl, #24
   16d64:	subs	r8, r8, #1
   16d68:	beq	16e24 <argp_failure@@Base+0x1d50>
   16d6c:	ldr	r0, [sl, #-12]
   16d70:	cmp	r0, #0
   16d74:	beq	16d60 <argp_failure@@Base+0x1c8c>
   16d78:	ldrb	r0, [sl]
   16d7c:	tst	r0, #2
   16d80:	bne	16d60 <argp_failure@@Base+0x1c8c>
   16d84:	ldr	r0, [r5, #12]
   16d88:	add	r1, sp, #24
   16d8c:	bl	16f74 <argp_failure@@Base+0x1ea0>
   16d90:	ldr	r2, [sl, #-12]
   16d94:	mov	r0, r4
   16d98:	movw	r1, #43625	; 0xaa69
   16d9c:	movt	r1, #1
   16da0:	bl	18528 <argp_failure@@Base+0x3454>
   16da4:	mov	r0, r9
   16da8:	mov	r1, r7
   16dac:	mov	r2, r6
   16db0:	mov	r3, r4
   16db4:	bl	1706c <argp_failure@@Base+0x1f98>
   16db8:	b	16d60 <argp_failure@@Base+0x1c8c>
   16dbc:	ldr	r1, [r5, #16]
   16dc0:	mov	r0, r4
   16dc4:	bl	18734 <argp_failure@@Base+0x3660>
   16dc8:	ldr	r0, [sp, #20]
   16dcc:	ldr	r7, [r0, #4]
   16dd0:	cmp	r7, #0
   16dd4:	beq	16e24 <argp_failure@@Base+0x1d50>
   16dd8:	add	r6, r9, #12
   16ddc:	add	r8, sp, #24
   16de0:	b	16df0 <argp_failure@@Base+0x1d1c>
   16de4:	add	r6, r6, #24
   16de8:	subs	r7, r7, #1
   16dec:	beq	16e24 <argp_failure@@Base+0x1d50>
   16df0:	ldr	r0, [r6, #-12]
   16df4:	cmp	r0, #0
   16df8:	beq	16de4 <argp_failure@@Base+0x1d10>
   16dfc:	ldrb	r0, [r6]
   16e00:	tst	r0, #2
   16e04:	bne	16de4 <argp_failure@@Base+0x1d10>
   16e08:	ldr	r0, [r5, #16]
   16e0c:	mov	r1, r8
   16e10:	bl	16f74 <argp_failure@@Base+0x1ea0>
   16e14:	ldr	r1, [r6, #-12]
   16e18:	mov	r0, r4
   16e1c:	bl	18620 <argp_failure@@Base+0x354c>
   16e20:	b	16de4 <argp_failure@@Base+0x1d10>
   16e24:	mov	r0, r4
   16e28:	mov	r1, #0
   16e2c:	bl	186bc <argp_failure@@Base+0x35e8>
   16e30:	ldr	r0, [sp, #36]	; 0x24
   16e34:	cmp	r0, #0
   16e38:	beq	16e74 <argp_failure@@Base+0x1da0>
   16e3c:	mov	r0, r9
   16e40:	bl	13d0c <argp_usage@@Base+0x14>
   16e44:	cmp	r0, #0
   16e48:	ldr	r5, [sp, #8]
   16e4c:	bne	16f54 <argp_failure@@Base+0x1e80>
   16e50:	ldr	r0, [r9]
   16e54:	cmp	r0, #0
   16e58:	bne	16f54 <argp_failure@@Base+0x1e80>
   16e5c:	ldr	r6, [sp, #20]
   16e60:	ldr	r1, [r6, #20]
   16e64:	ldr	r0, [r9, #16]
   16e68:	add	r2, sp, #24
   16e6c:	bl	17094 <argp_failure@@Base+0x1fc0>
   16e70:	b	16f4c <argp_failure@@Base+0x1e78>
   16e74:	mov	sl, r5
   16e78:	ldr	r6, [sp, #20]
   16e7c:	ldr	r2, [r6, #20]
   16e80:	ldr	r1, [r9, #4]
   16e84:	ldr	r5, [r9, #16]
   16e88:	mov	r0, r5
   16e8c:	ldr	r3, [sp, #4]
   16e90:	bl	16b4c <argp_failure@@Base+0x1a78>
   16e94:	cmp	r0, #0
   16e98:	beq	16f30 <argp_failure@@Base+0x1e5c>
   16e9c:	mov	r7, r0
   16ea0:	ldrb	r0, [r0]
   16ea4:	cmp	r0, #0
   16ea8:	beq	16f20 <argp_failure@@Base+0x1e4c>
   16eac:	mov	r0, r4
   16eb0:	bl	18770 <argp_failure@@Base+0x369c>
   16eb4:	mov	r8, r0
   16eb8:	ldr	r1, [sl, #20]
   16ebc:	mov	r0, r4
   16ec0:	bl	186bc <argp_failure@@Base+0x35e8>
   16ec4:	ldr	r1, [sl, #20]
   16ec8:	mov	r0, r4
   16ecc:	bl	18734 <argp_failure@@Base+0x3660>
   16ed0:	ldr	r1, [sl, #20]
   16ed4:	add	r0, r1, #3
   16ed8:	cmp	r8, r0
   16edc:	bls	16ef0 <argp_failure@@Base+0x1e1c>
   16ee0:	mov	r0, r4
   16ee4:	mov	r1, #10
   16ee8:	bl	18668 <argp_failure@@Base+0x3594>
   16eec:	b	16f14 <argp_failure@@Base+0x1e40>
   16ef0:	cmp	r8, r1
   16ef4:	bcs	16f04 <argp_failure@@Base+0x1e30>
   16ef8:	mov	r0, r4
   16efc:	bl	17160 <argp_failure@@Base+0x208c>
   16f00:	b	16f14 <argp_failure@@Base+0x1e40>
   16f04:	movw	r1, #43640	; 0xaa78
   16f08:	movt	r1, #1
   16f0c:	mov	r0, r4
   16f10:	bl	18620 <argp_failure@@Base+0x354c>
   16f14:	mov	r0, r4
   16f18:	mov	r1, r7
   16f1c:	bl	18620 <argp_failure@@Base+0x354c>
   16f20:	cmp	r7, r5
   16f24:	beq	16f30 <argp_failure@@Base+0x1e5c>
   16f28:	mov	r0, r7
   16f2c:	bl	13e88 <argp_usage@@Base+0x190>
   16f30:	mov	r0, r4
   16f34:	mov	r1, #0
   16f38:	bl	186bc <argp_failure@@Base+0x35e8>
   16f3c:	mov	r0, r4
   16f40:	mov	r1, #10
   16f44:	bl	18668 <argp_failure@@Base+0x3594>
   16f48:	ldr	r5, [sp, #8]
   16f4c:	ldr	r0, [sp, #16]
   16f50:	str	r6, [r0]
   16f54:	mov	r0, r4
   16f58:	mov	r1, r5
   16f5c:	bl	186bc <argp_failure@@Base+0x35e8>
   16f60:	mov	r0, r4
   16f64:	ldr	r1, [sp, #12]
   16f68:	sub	sp, fp, #28
   16f6c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16f70:	b	18734 <argp_failure@@Base+0x3660>
   16f74:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   16f78:	add	fp, sp, #24
   16f7c:	mov	r5, r1
   16f80:	mov	r9, r0
   16f84:	ldr	r0, [r1, #12]
   16f88:	cmp	r0, #0
   16f8c:	beq	1701c <argp_failure@@Base+0x1f48>
   16f90:	ldr	r0, [r5]
   16f94:	ldr	r1, [r5, #8]
   16f98:	ldr	r4, [r1]
   16f9c:	ldr	r6, [r0, #16]
   16fa0:	cmp	r4, #0
   16fa4:	ldrne	r1, [r1, #4]
   16fa8:	cmpne	r1, #0
   16fac:	bne	17030 <argp_failure@@Base+0x1f5c>
   16fb0:	cmp	r6, #0
   16fb4:	beq	17054 <argp_failure@@Base+0x1f80>
   16fb8:	ldr	r7, [r6]
   16fbc:	cmp	r7, #0
   16fc0:	beq	17054 <argp_failure@@Base+0x1f80>
   16fc4:	ldrb	r0, [r7]
   16fc8:	cmp	r0, #0
   16fcc:	beq	17054 <argp_failure@@Base+0x1f80>
   16fd0:	cmp	r4, #0
   16fd4:	beq	16ff4 <argp_failure@@Base+0x1f20>
   16fd8:	ldr	r0, [r4, #16]
   16fdc:	cmp	r0, r6
   16fe0:	beq	17054 <argp_failure@@Base+0x1f80>
   16fe4:	mov	r1, r6
   16fe8:	bl	1719c <argp_failure@@Base+0x20c8>
   16fec:	cmp	r0, #0
   16ff0:	bne	17054 <argp_failure@@Base+0x1f80>
   16ff4:	ldr	r0, [r5, #4]
   16ff8:	ldr	r8, [r0, #12]
   16ffc:	ldr	r1, [r6, #16]
   17000:	mov	r0, r7
   17004:	mov	r2, r5
   17008:	bl	17094 <argp_failure@@Base+0x1fc0>
   1700c:	ldr	r0, [r5, #4]
   17010:	mov	r1, r8
   17014:	bl	18734 <argp_failure@@Base+0x3660>
   17018:	b	17054 <argp_failure@@Base+0x1f80>
   1701c:	ldr	r0, [r5, #4]
   17020:	movw	r1, #43644	; 0xaa7c
   17024:	movt	r1, #1
   17028:	bl	18620 <argp_failure@@Base+0x354c>
   1702c:	b	1705c <argp_failure@@Base+0x1f88>
   17030:	ldr	r1, [r4, #12]
   17034:	ldr	r0, [r0, #12]
   17038:	cmp	r0, r1
   1703c:	beq	16fb0 <argp_failure@@Base+0x1edc>
   17040:	ldr	r0, [r5, #4]
   17044:	mov	r1, #10
   17048:	bl	18668 <argp_failure@@Base+0x3594>
   1704c:	cmp	r6, #0
   17050:	bne	16fb8 <argp_failure@@Base+0x1ee4>
   17054:	mov	r0, #0
   17058:	str	r0, [r5, #12]
   1705c:	ldr	r0, [r5, #4]
   17060:	mov	r1, r9
   17064:	pop	{r4, r5, r6, r7, r8, r9, fp, lr}
   17068:	b	17160 <argp_failure@@Base+0x208c>
   1706c:	ldr	ip, [r0, #8]
   17070:	cmp	ip, #0
   17074:	bxeq	lr
   17078:	ldr	r0, [r0, #12]
   1707c:	tst	r0, #1
   17080:	moveq	r2, r1
   17084:	mov	r0, r3
   17088:	mov	r1, r2
   1708c:	mov	r2, ip
   17090:	b	18528 <argp_failure@@Base+0x3454>
   17094:	push	{r4, r5, r6, r7, fp, lr}
   17098:	add	fp, sp, #16
   1709c:	mov	r5, r2
   170a0:	mov	r2, r1
   170a4:	mov	r4, r0
   170a8:	ldr	r3, [r5, #16]
   170ac:	movw	r1, #3
   170b0:	movt	r1, #512	; 0x200
   170b4:	bl	16b4c <argp_failure@@Base+0x1a78>
   170b8:	mov	r6, r0
   170bc:	cmp	r0, #0
   170c0:	beq	17148 <argp_failure@@Base+0x2074>
   170c4:	ldrb	r0, [r6]
   170c8:	cmp	r0, #0
   170cc:	beq	1713c <argp_failure@@Base+0x2068>
   170d0:	ldr	r0, [r5, #8]
   170d4:	ldr	r0, [r0]
   170d8:	cmp	r0, #0
   170dc:	beq	170ec <argp_failure@@Base+0x2018>
   170e0:	ldr	r0, [r5, #4]
   170e4:	mov	r1, #10
   170e8:	bl	18668 <argp_failure@@Base+0x3594>
   170ec:	movw	r7, #59504	; 0xe870
   170f0:	movt	r7, #2
   170f4:	ldr	r1, [r7, #24]
   170f8:	ldr	r0, [r5, #4]
   170fc:	bl	17160 <argp_failure@@Base+0x208c>
   17100:	ldr	r1, [r7, #24]
   17104:	ldr	r0, [r5, #4]
   17108:	bl	186bc <argp_failure@@Base+0x35e8>
   1710c:	ldr	r0, [r5, #4]
   17110:	ldr	r1, [r7, #24]
   17114:	bl	18734 <argp_failure@@Base+0x3660>
   17118:	ldr	r0, [r5, #4]
   1711c:	mov	r1, r6
   17120:	bl	18620 <argp_failure@@Base+0x354c>
   17124:	ldr	r0, [r5, #4]
   17128:	mov	r1, #0
   1712c:	bl	186bc <argp_failure@@Base+0x35e8>
   17130:	ldr	r0, [r5, #4]
   17134:	mov	r1, #10
   17138:	bl	18668 <argp_failure@@Base+0x3594>
   1713c:	ldr	r0, [r5, #8]
   17140:	mov	r1, #1
   17144:	str	r1, [r0, #4]
   17148:	cmp	r6, r4
   1714c:	beq	1715c <argp_failure@@Base+0x2088>
   17150:	mov	r0, r6
   17154:	pop	{r4, r5, r6, r7, fp, lr}
   17158:	b	13e88 <argp_usage@@Base+0x190>
   1715c:	pop	{r4, r5, r6, r7, fp, pc}
   17160:	push	{r4, r5, fp, lr}
   17164:	add	fp, sp, #8
   17168:	mov	r5, r1
   1716c:	mov	r4, r0
   17170:	bl	18770 <argp_failure@@Base+0x369c>
   17174:	sub	r5, r5, r0
   17178:	cmp	r5, #1
   1717c:	poplt	{r4, r5, fp, pc}
   17180:	mov	r0, r4
   17184:	mov	r1, #32
   17188:	bl	18668 <argp_failure@@Base+0x3594>
   1718c:	sub	r5, r5, #1
   17190:	cmp	r5, #0
   17194:	bgt	17180 <argp_failure@@Base+0x20ac>
   17198:	pop	{r4, r5, fp, pc}
   1719c:	b	171a4 <argp_failure@@Base+0x20d0>
   171a0:	ldr	r0, [r0, #12]
   171a4:	cmp	r0, r1
   171a8:	cmpne	r0, #0
   171ac:	bne	171a0 <argp_failure@@Base+0x20cc>
   171b0:	sub	r0, r0, r1
   171b4:	clz	r0, r0
   171b8:	lsr	r0, r0, #5
   171bc:	bx	lr
   171c0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   171c4:	add	fp, sp, #28
   171c8:	sub	sp, sp, #28
   171cc:	mvn	r8, #0
   171d0:	cmp	r0, #1
   171d4:	blt	17628 <argp_failure@@Base+0x2554>
   171d8:	mov	r9, r3
   171dc:	mov	sl, r2
   171e0:	mov	r7, r1
   171e4:	mov	r5, r0
   171e8:	ldr	r4, [fp, #16]
   171ec:	ldm	r4, {r0, r6}
   171f0:	mov	r1, #0
   171f4:	str	r1, [r4, #12]
   171f8:	cmp	r0, #0
   171fc:	beq	17220 <argp_failure@@Base+0x214c>
   17200:	ldr	r0, [r4, #16]
   17204:	cmp	r0, #0
   17208:	beq	17220 <argp_failure@@Base+0x214c>
   1720c:	ldrb	r0, [sl]
   17210:	cmp	r0, #45	; 0x2d
   17214:	cmpne	r0, #43	; 0x2b
   17218:	addeq	sl, sl, #1
   1721c:	b	17234 <argp_failure@@Base+0x2160>
   17220:	ldr	r2, [fp, #20]
   17224:	mov	r0, sl
   17228:	mov	r1, r4
   1722c:	bl	176a0 <argp_failure@@Base+0x25cc>
   17230:	mov	sl, r0
   17234:	ldrb	r0, [sl]
   17238:	subs	r0, r0, #58	; 0x3a
   1723c:	movne	r0, r6
   17240:	str	r0, [sp, #24]
   17244:	ldr	r0, [r4, #20]
   17248:	cmp	r0, #0
   1724c:	beq	172bc <argp_failure@@Base+0x21e8>
   17250:	ldrb	r0, [r0]
   17254:	cmp	r0, #0
   17258:	beq	172bc <argp_failure@@Base+0x21e8>
   1725c:	str	r9, [sp, #20]
   17260:	ldr	r6, [r4, #20]
   17264:	add	r9, r6, #1
   17268:	str	r9, [r4, #20]
   1726c:	ldrb	r8, [r6]
   17270:	mov	r0, sl
   17274:	mov	r1, r8
   17278:	bl	114cc <strchr@plt>
   1727c:	ldrb	r1, [r6, #1]
   17280:	cmp	r1, #0
   17284:	bne	17294 <argp_failure@@Base+0x21c0>
   17288:	ldr	r1, [r4]
   1728c:	add	r1, r1, #1
   17290:	str	r1, [r4]
   17294:	orr	r1, r8, #1
   17298:	cmp	r1, #59	; 0x3b
   1729c:	cmpne	r0, #0
   172a0:	bne	17304 <argp_failure@@Base+0x2230>
   172a4:	ldr	r0, [sp, #24]
   172a8:	cmp	r0, #0
   172ac:	bne	17598 <argp_failure@@Base+0x24c4>
   172b0:	str	r8, [r4, #8]
   172b4:	mov	r8, #63	; 0x3f
   172b8:	b	17628 <argp_failure@@Base+0x2554>
   172bc:	ldr	r0, [r4]
   172c0:	ldr	r1, [r4, #32]
   172c4:	cmp	r1, r0
   172c8:	strgt	r0, [r4, #32]
   172cc:	ldr	r1, [r4, #28]
   172d0:	cmp	r1, r0
   172d4:	strgt	r0, [r4, #28]
   172d8:	ldr	r1, [r4, #24]
   172dc:	cmp	r1, #1
   172e0:	bne	173b4 <argp_failure@@Base+0x22e0>
   172e4:	ldr	r2, [r4, #28]
   172e8:	ldr	r1, [r4, #32]
   172ec:	cmp	r2, r1
   172f0:	cmpne	r1, r0
   172f4:	bne	17368 <argp_failure@@Base+0x2294>
   172f8:	cmp	r1, r0
   172fc:	strne	r0, [r4, #28]
   17300:	b	17374 <argp_failure@@Base+0x22a0>
   17304:	ldrb	r1, [r0]
   17308:	cmp	r1, #87	; 0x57
   1730c:	bne	1733c <argp_failure@@Base+0x2268>
   17310:	ldr	r1, [sp, #20]
   17314:	cmp	r1, #0
   17318:	beq	1733c <argp_failure@@Base+0x2268>
   1731c:	ldrb	r1, [r0, #1]
   17320:	cmp	r1, #59	; 0x3b
   17324:	bne	1733c <argp_failure@@Base+0x2268>
   17328:	ldrb	r0, [r9]
   1732c:	cmp	r0, #0
   17330:	beq	17540 <argp_failure@@Base+0x246c>
   17334:	str	r9, [r4, #12]
   17338:	b	175c4 <argp_failure@@Base+0x24f0>
   1733c:	ldrb	r1, [r0, #1]
   17340:	cmp	r1, #58	; 0x3a
   17344:	bne	17628 <argp_failure@@Base+0x2554>
   17348:	ldrb	r1, [r9]
   1734c:	ldrb	r0, [r0, #2]
   17350:	cmp	r0, #58	; 0x3a
   17354:	bne	17400 <argp_failure@@Base+0x232c>
   17358:	cmp	r1, #0
   1735c:	bne	17408 <argp_failure@@Base+0x2334>
   17360:	mov	r0, #0
   17364:	b	1761c <argp_failure@@Base+0x2548>
   17368:	mov	r0, r7
   1736c:	mov	r1, r4
   17370:	bl	17734 <argp_failure@@Base+0x2660>
   17374:	ldr	r0, [r4]
   17378:	cmp	r0, r5
   1737c:	blt	17394 <argp_failure@@Base+0x22c0>
   17380:	b	173b0 <argp_failure@@Base+0x22dc>
   17384:	add	r0, r0, #1
   17388:	str	r0, [r4]
   1738c:	cmp	r5, r0
   17390:	beq	173b0 <argp_failure@@Base+0x22dc>
   17394:	ldr	r1, [r7, r0, lsl #2]
   17398:	ldrb	r2, [r1]
   1739c:	cmp	r2, #45	; 0x2d
   173a0:	bne	17384 <argp_failure@@Base+0x22b0>
   173a4:	ldrb	r1, [r1, #1]
   173a8:	cmp	r1, #0
   173ac:	beq	17384 <argp_failure@@Base+0x22b0>
   173b0:	str	r0, [r4, #32]
   173b4:	ldr	r6, [r4]
   173b8:	cmp	r6, r5
   173bc:	beq	17430 <argp_failure@@Base+0x235c>
   173c0:	ldr	r0, [r7, r6, lsl #2]
   173c4:	movw	r1, #41888	; 0xa3a0
   173c8:	movt	r1, #1
   173cc:	bl	11358 <strcmp@plt>
   173d0:	cmp	r0, #0
   173d4:	bne	17430 <argp_failure@@Base+0x235c>
   173d8:	add	r0, r6, #1
   173dc:	str	r0, [r4]
   173e0:	ldr	r1, [r4, #28]
   173e4:	ldr	r2, [r4, #32]
   173e8:	cmp	r1, r2
   173ec:	cmpne	r2, r0
   173f0:	bne	1741c <argp_failure@@Base+0x2348>
   173f4:	cmp	r1, r2
   173f8:	streq	r0, [r4, #28]
   173fc:	b	17428 <argp_failure@@Base+0x2354>
   17400:	cmp	r1, #0
   17404:	beq	1756c <argp_failure@@Base+0x2498>
   17408:	str	r9, [r4, #12]
   1740c:	ldr	r0, [r4]
   17410:	add	r0, r0, #1
   17414:	str	r0, [r4]
   17418:	b	17620 <argp_failure@@Base+0x254c>
   1741c:	mov	r0, r7
   17420:	mov	r1, r4
   17424:	bl	17734 <argp_failure@@Base+0x2660>
   17428:	str	r5, [r4]
   1742c:	str	r5, [r4, #32]
   17430:	ldr	r2, [r4]
   17434:	cmp	r2, r5
   17438:	bne	17450 <argp_failure@@Base+0x237c>
   1743c:	ldr	r0, [r4, #28]
   17440:	ldr	r1, [r4, #32]
   17444:	cmp	r0, r1
   17448:	strne	r0, [r4]
   1744c:	b	17628 <argp_failure@@Base+0x2554>
   17450:	ldr	r0, [r7, r2, lsl #2]
   17454:	ldrb	r1, [r0]
   17458:	cmp	r1, #45	; 0x2d
   1745c:	bne	174c0 <argp_failure@@Base+0x23ec>
   17460:	mov	r6, r0
   17464:	ldrb	r1, [r6, #1]!
   17468:	cmp	r1, #0
   1746c:	beq	174c0 <argp_failure@@Base+0x23ec>
   17470:	cmp	r9, #0
   17474:	beq	17644 <argp_failure@@Base+0x2570>
   17478:	ldr	r8, [fp, #12]
   1747c:	cmp	r1, #45	; 0x2d
   17480:	bne	174e4 <argp_failure@@Base+0x2410>
   17484:	add	r0, r0, #2
   17488:	str	r0, [r4, #20]
   1748c:	movw	r0, #41888	; 0xa3a0
   17490:	movt	r0, #1
   17494:	ldr	r1, [fp, #8]
   17498:	stm	sp, {r1, r8}
   1749c:	str	r4, [sp, #8]
   174a0:	ldr	r1, [sp, #24]
   174a4:	str	r1, [sp, #12]
   174a8:	str	r0, [sp, #16]
   174ac:	mov	r0, r5
   174b0:	mov	r1, r7
   174b4:	mov	r2, sl
   174b8:	mov	r3, r9
   174bc:	b	17604 <argp_failure@@Base+0x2530>
   174c0:	ldr	r0, [r4, #24]
   174c4:	cmp	r0, #0
   174c8:	beq	17628 <argp_failure@@Base+0x2554>
   174cc:	add	r0, r2, #1
   174d0:	str	r0, [r4]
   174d4:	ldr	r0, [r7, r2, lsl #2]
   174d8:	str	r0, [r4, #12]
   174dc:	mov	r8, #1
   174e0:	b	17628 <argp_failure@@Base+0x2554>
   174e4:	cmp	r8, #0
   174e8:	beq	17644 <argp_failure@@Base+0x2570>
   174ec:	ldrb	r0, [r0, #2]
   174f0:	cmp	r0, #0
   174f4:	beq	17634 <argp_failure@@Base+0x2560>
   174f8:	str	r6, [r4, #20]
   174fc:	movw	r0, #41889	; 0xa3a1
   17500:	movt	r0, #1
   17504:	ldr	r1, [fp, #8]
   17508:	stm	sp, {r1, r8}
   1750c:	str	r4, [sp, #8]
   17510:	ldr	r1, [sp, #24]
   17514:	str	r1, [sp, #12]
   17518:	str	r0, [sp, #16]
   1751c:	mov	r0, r5
   17520:	mov	r1, r7
   17524:	mov	r2, sl
   17528:	mov	r3, r9
   1752c:	bl	17818 <argp_failure@@Base+0x2744>
   17530:	mov	r8, r0
   17534:	cmn	r0, #1
   17538:	bne	17628 <argp_failure@@Base+0x2554>
   1753c:	b	17644 <argp_failure@@Base+0x2570>
   17540:	ldr	r0, [r4]
   17544:	cmp	r0, r5
   17548:	bne	175bc <argp_failure@@Base+0x24e8>
   1754c:	ldr	r0, [sp, #24]
   17550:	cmp	r0, #0
   17554:	bne	17658 <argp_failure@@Base+0x2584>
   17558:	str	r8, [r4, #8]
   1755c:	ldrb	r8, [sl]
   17560:	cmp	r8, #58	; 0x3a
   17564:	movwne	r8, #63	; 0x3f
   17568:	b	17628 <argp_failure@@Base+0x2554>
   1756c:	ldr	r0, [r4]
   17570:	cmp	r0, r5
   17574:	bne	17610 <argp_failure@@Base+0x253c>
   17578:	ldr	r0, [sp, #24]
   1757c:	cmp	r0, #0
   17580:	bne	1767c <argp_failure@@Base+0x25a8>
   17584:	str	r8, [r4, #8]
   17588:	ldrb	r8, [sl]
   1758c:	cmp	r8, #58	; 0x3a
   17590:	movwne	r8, #63	; 0x3f
   17594:	b	17620 <argp_failure@@Base+0x254c>
   17598:	ldr	r2, [r7]
   1759c:	movw	r0, #59576	; 0xe8b8
   175a0:	movt	r0, #2
   175a4:	ldr	r0, [r0]
   175a8:	movw	r1, #43791	; 0xab0f
   175ac:	movt	r1, #1
   175b0:	mov	r3, r8
   175b4:	bl	114d8 <fprintf@plt>
   175b8:	b	172b0 <argp_failure@@Base+0x21dc>
   175bc:	ldr	r0, [r7, r0, lsl #2]
   175c0:	str	r0, [r4, #12]
   175c4:	ldr	r0, [r4, #12]
   175c8:	mov	r1, #0
   175cc:	str	r1, [r4, #12]
   175d0:	str	r0, [r4, #20]
   175d4:	movw	r0, #43860	; 0xab54
   175d8:	movt	r0, #1
   175dc:	ldr	r2, [fp, #8]
   175e0:	str	r2, [sp]
   175e4:	stmib	sp, {r1, r4}
   175e8:	ldr	r1, [sp, #24]
   175ec:	str	r1, [sp, #12]
   175f0:	str	r0, [sp, #16]
   175f4:	mov	r0, r5
   175f8:	mov	r1, r7
   175fc:	mov	r2, sl
   17600:	ldr	r3, [sp, #20]
   17604:	bl	17818 <argp_failure@@Base+0x2744>
   17608:	sub	sp, fp, #28
   1760c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17610:	add	r1, r0, #1
   17614:	str	r1, [r4]
   17618:	ldr	r0, [r7, r0, lsl #2]
   1761c:	str	r0, [r4, #12]
   17620:	mov	r0, #0
   17624:	str	r0, [r4, #20]
   17628:	mov	r0, r8
   1762c:	sub	sp, fp, #28
   17630:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17634:	mov	r0, sl
   17638:	bl	114cc <strchr@plt>
   1763c:	cmp	r0, #0
   17640:	beq	174f8 <argp_failure@@Base+0x2424>
   17644:	ldr	r0, [r4]
   17648:	ldr	r0, [r7, r0, lsl #2]
   1764c:	add	r0, r0, #1
   17650:	str	r0, [r4, #20]
   17654:	b	1725c <argp_failure@@Base+0x2188>
   17658:	ldr	r2, [r7]
   1765c:	movw	r0, #59576	; 0xe8b8
   17660:	movt	r0, #2
   17664:	ldr	r0, [r0]
   17668:	movw	r1, #43819	; 0xab2b
   1766c:	movt	r1, #1
   17670:	mov	r3, r8
   17674:	bl	114d8 <fprintf@plt>
   17678:	b	17558 <argp_failure@@Base+0x2484>
   1767c:	ldr	r2, [r7]
   17680:	movw	r0, #59576	; 0xe8b8
   17684:	movt	r0, #2
   17688:	ldr	r0, [r0]
   1768c:	movw	r1, #43819	; 0xab2b
   17690:	movt	r1, #1
   17694:	mov	r3, r8
   17698:	bl	114d8 <fprintf@plt>
   1769c:	b	17584 <argp_failure@@Base+0x24b0>
   176a0:	push	{r4, r5, fp, lr}
   176a4:	add	fp, sp, #8
   176a8:	mov	r4, r1
   176ac:	mov	r5, r0
   176b0:	ldr	r0, [r1]
   176b4:	cmp	r0, #0
   176b8:	moveq	r0, #1
   176bc:	streq	r0, [r4]
   176c0:	mov	r0, #0
   176c4:	str	r0, [r4, #20]
   176c8:	ldr	r1, [r4]
   176cc:	str	r1, [r4, #28]
   176d0:	str	r1, [r4, #32]
   176d4:	ldrb	r1, [r5]
   176d8:	cmp	r1, #43	; 0x2b
   176dc:	beq	176ec <argp_failure@@Base+0x2618>
   176e0:	cmp	r1, #45	; 0x2d
   176e4:	bne	176f8 <argp_failure@@Base+0x2624>
   176e8:	mov	r0, #2
   176ec:	str	r0, [r4, #24]
   176f0:	add	r5, r5, #1
   176f4:	b	1771c <argp_failure@@Base+0x2648>
   176f8:	cmp	r2, #0
   176fc:	bne	17714 <argp_failure@@Base+0x2640>
   17700:	movw	r0, #43864	; 0xab58
   17704:	movt	r0, #1
   17708:	bl	11448 <getenv@plt>
   1770c:	cmp	r0, #0
   17710:	beq	1772c <argp_failure@@Base+0x2658>
   17714:	mov	r0, #0
   17718:	str	r0, [r4, #24]
   1771c:	mov	r0, #1
   17720:	str	r0, [r4, #16]
   17724:	mov	r0, r5
   17728:	pop	{r4, r5, fp, pc}
   1772c:	mov	r0, #1
   17730:	b	17718 <argp_failure@@Base+0x2644>
   17734:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17738:	add	fp, sp, #28
   1773c:	sub	sp, sp, #8
   17740:	ldr	r2, [r1]
   17744:	ldr	r3, [r1, #28]
   17748:	str	r3, [sp, #4]
   1774c:	ldr	lr, [r1, #32]
   17750:	str	r2, [sp]
   17754:	cmp	r2, lr
   17758:	ble	177f8 <argp_failure@@Base+0x2724>
   1775c:	ldr	r2, [sp, #4]
   17760:	cmp	r2, lr
   17764:	bge	177f8 <argp_failure@@Base+0x2724>
   17768:	add	r8, r0, lr, lsl #2
   1776c:	ldm	sp, {r9, sl}
   17770:	b	17784 <argp_failure@@Base+0x26b0>
   17774:	sub	r9, r9, r7
   17778:	cmp	r9, lr
   1777c:	cmpgt	lr, sl
   17780:	ble	177f8 <argp_failure@@Base+0x2724>
   17784:	sub	r7, lr, sl
   17788:	sub	r5, r9, lr
   1778c:	cmp	r5, r7
   17790:	ble	177c4 <argp_failure@@Base+0x26f0>
   17794:	cmp	r7, #1
   17798:	blt	17774 <argp_failure@@Base+0x26a0>
   1779c:	add	r2, r0, sl, lsl #2
   177a0:	add	r5, r0, r9, lsl #2
   177a4:	mov	r6, r7
   177a8:	ldr	r4, [r5, -r6, lsl #2]
   177ac:	ldr	ip, [r2]
   177b0:	str	r4, [r2], #4
   177b4:	str	ip, [r5, -r6, lsl #2]
   177b8:	subs	r6, r6, #1
   177bc:	bne	177a8 <argp_failure@@Base+0x26d4>
   177c0:	b	17774 <argp_failure@@Base+0x26a0>
   177c4:	cmp	r5, #1
   177c8:	blt	177f0 <argp_failure@@Base+0x271c>
   177cc:	add	r7, r0, sl, lsl #2
   177d0:	mov	r2, r8
   177d4:	mov	r6, r5
   177d8:	ldr	r4, [r7]
   177dc:	ldr	r3, [r2]
   177e0:	str	r3, [r7], #4
   177e4:	str	r4, [r2], #4
   177e8:	subs	r6, r6, #1
   177ec:	bne	177d8 <argp_failure@@Base+0x2704>
   177f0:	add	sl, sl, r5
   177f4:	b	17778 <argp_failure@@Base+0x26a4>
   177f8:	ldr	r0, [sp, #4]
   177fc:	sub	r0, r0, lr
   17800:	ldr	r2, [sp]
   17804:	add	r0, r0, r2
   17808:	str	r0, [r1, #28]
   1780c:	str	r2, [r1, #32]
   17810:	sub	sp, fp, #28
   17814:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17818:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1781c:	add	fp, sp, #28
   17820:	sub	sp, sp, #36	; 0x24
   17824:	mov	r6, r3
   17828:	str	r1, [sp, #12]
   1782c:	stmib	sp, {r0, r2}
   17830:	ldr	r1, [fp, #16]
   17834:	ldr	sl, [r1, #20]
   17838:	mov	r5, sl
   1783c:	b	17844 <argp_failure@@Base+0x2770>
   17840:	add	r5, r5, #1
   17844:	ldrb	r0, [r5]
   17848:	cmp	r0, #0
   1784c:	cmpne	r0, #61	; 0x3d
   17850:	bne	17840 <argp_failure@@Base+0x276c>
   17854:	ldr	r0, [r1, #20]
   17858:	sub	r8, r5, r0
   1785c:	ldr	r9, [r6]
   17860:	mov	r0, #0
   17864:	str	r0, [sp, #32]
   17868:	cmp	r9, #0
   1786c:	mov	r4, #0
   17870:	beq	178c8 <argp_failure@@Base+0x27f4>
   17874:	mov	r4, #0
   17878:	mov	r7, r6
   1787c:	b	17890 <argp_failure@@Base+0x27bc>
   17880:	add	r4, r4, #1
   17884:	ldr	r9, [r7, #16]!
   17888:	cmp	r9, #0
   1788c:	beq	178c8 <argp_failure@@Base+0x27f4>
   17890:	mov	r0, r9
   17894:	mov	r1, sl
   17898:	mov	r2, r8
   1789c:	bl	115e0 <strncmp@plt>
   178a0:	cmp	r0, #0
   178a4:	bne	17880 <argp_failure@@Base+0x27ac>
   178a8:	mov	r0, r9
   178ac:	bl	114c0 <strlen@plt>
   178b0:	cmp	r8, r0
   178b4:	bne	17880 <argp_failure@@Base+0x27ac>
   178b8:	str	r4, [sp, #20]
   178bc:	mov	r0, r7
   178c0:	ldr	r7, [fp, #16]
   178c4:	b	17adc <argp_failure@@Base+0x2a08>
   178c8:	ldr	r0, [r6]
   178cc:	cmp	r0, #0
   178d0:	beq	17a58 <argp_failure@@Base+0x2984>
   178d4:	mov	sl, #0
   178d8:	mvn	r1, #0
   178dc:	str	r1, [sp, #20]
   178e0:	mov	r1, #0
   178e4:	str	r1, [sp, #28]
   178e8:	mov	r1, #0
   178ec:	str	r1, [sp, #16]
   178f0:	mov	r1, #0
   178f4:	str	r1, [sp, #24]
   178f8:	mov	r9, #0
   178fc:	mov	r1, #0
   17900:	str	r1, [sp, #32]
   17904:	ldr	r7, [fp, #16]
   17908:	b	17930 <argp_failure@@Base+0x285c>
   1790c:	add	r0, r6, sl
   17910:	str	r0, [sp, #32]
   17914:	str	r9, [sp, #20]
   17918:	add	r0, r6, r9, lsl #4
   1791c:	ldr	r0, [r0, #16]
   17920:	add	sl, sl, #16
   17924:	add	r9, r9, #1
   17928:	cmp	r0, #0
   1792c:	beq	17a7c <argp_failure@@Base+0x29a8>
   17930:	ldr	r1, [r7, #20]
   17934:	mov	r2, r8
   17938:	bl	115e0 <strncmp@plt>
   1793c:	cmp	r0, #0
   17940:	bne	17918 <argp_failure@@Base+0x2844>
   17944:	ldr	r0, [sp, #32]
   17948:	cmp	r0, #0
   1794c:	beq	1790c <argp_failure@@Base+0x2838>
   17950:	ldr	r0, [fp, #12]
   17954:	cmp	r0, #0
   17958:	bne	17988 <argp_failure@@Base+0x28b4>
   1795c:	add	r0, r6, r9, lsl #4
   17960:	ldr	r1, [r0, #4]
   17964:	ldr	r2, [sp, #32]
   17968:	ldr	r2, [r2, #4]
   1796c:	cmp	r2, r1
   17970:	bne	17988 <argp_failure@@Base+0x28b4>
   17974:	ldr	r1, [r0, #8]
   17978:	ldr	r2, [sp, #32]
   1797c:	ldr	r2, [r2, #8]
   17980:	cmp	r2, r1
   17984:	beq	17a20 <argp_failure@@Base+0x294c>
   17988:	ldr	r0, [sp, #28]
   1798c:	cmp	r0, #0
   17990:	bne	17918 <argp_failure@@Base+0x2844>
   17994:	ldr	r0, [fp, #20]
   17998:	cmp	r0, #0
   1799c:	beq	179fc <argp_failure@@Base+0x2928>
   179a0:	mov	r0, #0
   179a4:	str	r0, [sp, #28]
   179a8:	ldr	r0, [sp, #24]
   179ac:	cmp	r0, #0
   179b0:	bne	17a10 <argp_failure@@Base+0x293c>
   179b4:	mov	r0, r4
   179b8:	bl	14b58 <_obstack_memory_used@@Base+0x8e4>
   179bc:	cmp	r0, #0
   179c0:	beq	17a44 <argp_failure@@Base+0x2970>
   179c4:	mov	r1, #0
   179c8:	str	r1, [sp, #28]
   179cc:	str	r0, [sp, #24]
   179d0:	ldr	r0, [sp, #24]
   179d4:	mov	r1, #0
   179d8:	mov	r2, r4
   179dc:	bl	11508 <memset@plt>
   179e0:	ldr	r0, [sp, #24]
   179e4:	mov	r2, #1
   179e8:	mov	r1, #1
   179ec:	str	r1, [sp, #16]
   179f0:	ldr	r1, [sp, #20]
   179f4:	strb	r2, [r0, r1]
   179f8:	b	17a10 <argp_failure@@Base+0x293c>
   179fc:	mov	r0, #1
   17a00:	str	r0, [sp, #28]
   17a04:	ldr	r0, [sp, #24]
   17a08:	cmp	r0, #0
   17a0c:	beq	17a4c <argp_failure@@Base+0x2978>
   17a10:	str	r0, [sp, #24]
   17a14:	mov	r1, #1
   17a18:	strb	r1, [r0, r9]
   17a1c:	b	17918 <argp_failure@@Base+0x2844>
   17a20:	ldr	r1, [sp, #28]
   17a24:	cmp	r1, #0
   17a28:	bne	17918 <argp_failure@@Base+0x2844>
   17a2c:	ldr	r0, [r0, #12]
   17a30:	ldr	r1, [sp, #32]
   17a34:	ldr	r1, [r1, #12]
   17a38:	cmp	r1, r0
   17a3c:	bne	17994 <argp_failure@@Base+0x28c0>
   17a40:	b	17918 <argp_failure@@Base+0x2844>
   17a44:	mov	r0, #1
   17a48:	str	r0, [sp, #28]
   17a4c:	mov	r0, #0
   17a50:	str	r0, [sp, #24]
   17a54:	b	17918 <argp_failure@@Base+0x2844>
   17a58:	mvn	r0, #0
   17a5c:	str	r0, [sp, #20]
   17a60:	mov	r0, #0
   17a64:	str	r0, [sp, #24]
   17a68:	mov	r0, #0
   17a6c:	str	r0, [sp, #16]
   17a70:	mov	r0, #0
   17a74:	str	r0, [sp, #28]
   17a78:	ldr	r7, [fp, #16]
   17a7c:	ldr	r0, [sp, #24]
   17a80:	cmp	r0, #0
   17a84:	ldreq	r0, [sp, #28]
   17a88:	cmpeq	r0, #0
   17a8c:	beq	17ad0 <argp_failure@@Base+0x29fc>
   17a90:	ldr	r0, [fp, #20]
   17a94:	cmp	r0, #0
   17a98:	bne	17c2c <argp_failure@@Base+0x2b58>
   17a9c:	ldr	r0, [sp, #16]
   17aa0:	cmp	r0, #0
   17aa4:	beq	17ab0 <argp_failure@@Base+0x29dc>
   17aa8:	ldr	r0, [sp, #24]
   17aac:	bl	13e88 <argp_usage@@Base+0x190>
   17ab0:	ldr	r4, [r7, #20]
   17ab4:	mov	r0, r4
   17ab8:	bl	114c0 <strlen@plt>
   17abc:	mov	r1, #0
   17ac0:	str	r1, [r7, #8]
   17ac4:	add	r0, r4, r0
   17ac8:	str	r0, [r7, #20]
   17acc:	b	17bd0 <argp_failure@@Base+0x2afc>
   17ad0:	ldr	r0, [sp, #32]
   17ad4:	cmp	r0, #0
   17ad8:	beq	17b74 <argp_failure@@Base+0x2aa0>
   17adc:	mov	r2, r0
   17ae0:	mov	r0, #0
   17ae4:	str	r0, [r7, #20]
   17ae8:	ldr	r1, [r7]
   17aec:	add	r0, r1, #1
   17af0:	str	r0, [r7]
   17af4:	mov	r4, r2
   17af8:	ldr	r2, [r2, #4]
   17afc:	ldrb	r3, [r5]
   17b00:	cmp	r3, #0
   17b04:	beq	17b1c <argp_failure@@Base+0x2a48>
   17b08:	cmp	r2, #0
   17b0c:	beq	17be8 <argp_failure@@Base+0x2b14>
   17b10:	add	r0, r5, #1
   17b14:	str	r0, [r7, #12]
   17b18:	b	17b44 <argp_failure@@Base+0x2a70>
   17b1c:	cmp	r2, #1
   17b20:	bne	17b44 <argp_failure@@Base+0x2a70>
   17b24:	ldr	r2, [sp, #4]
   17b28:	cmp	r0, r2
   17b2c:	bge	17c00 <argp_failure@@Base+0x2b2c>
   17b30:	add	r1, r1, #2
   17b34:	str	r1, [r7]
   17b38:	ldr	r1, [sp, #12]
   17b3c:	ldr	r0, [r1, r0, lsl #2]
   17b40:	b	17b14 <argp_failure@@Base+0x2a40>
   17b44:	ldr	r0, [fp, #8]
   17b48:	cmp	r0, #0
   17b4c:	ldrne	r1, [sp, #20]
   17b50:	strne	r1, [r0]
   17b54:	ldr	r1, [r4, #8]
   17b58:	ldr	r0, [r4, #12]
   17b5c:	cmp	r1, #0
   17b60:	beq	17c24 <argp_failure@@Base+0x2b50>
   17b64:	str	r0, [r1]
   17b68:	mov	r0, #0
   17b6c:	sub	sp, fp, #28
   17b70:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17b74:	ldr	r0, [fp, #12]
   17b78:	cmp	r0, #0
   17b7c:	beq	17bb8 <argp_failure@@Base+0x2ae4>
   17b80:	ldr	r0, [r7]
   17b84:	ldr	r1, [sp, #12]
   17b88:	ldr	r0, [r1, r0, lsl #2]
   17b8c:	ldrb	r0, [r0, #1]
   17b90:	cmp	r0, #45	; 0x2d
   17b94:	beq	17bb8 <argp_failure@@Base+0x2ae4>
   17b98:	ldr	r0, [r7, #20]
   17b9c:	ldrb	r1, [r0]
   17ba0:	ldr	r0, [sp, #8]
   17ba4:	bl	114cc <strchr@plt>
   17ba8:	mov	r1, r0
   17bac:	mvn	r0, #0
   17bb0:	cmp	r1, #0
   17bb4:	bne	17c24 <argp_failure@@Base+0x2b50>
   17bb8:	ldr	r0, [fp, #20]
   17bbc:	cmp	r0, #0
   17bc0:	bne	17cfc <argp_failure@@Base+0x2c28>
   17bc4:	mov	r0, #0
   17bc8:	str	r0, [r7, #20]
   17bcc:	str	r0, [r7, #8]
   17bd0:	ldr	r0, [r7]
   17bd4:	add	r0, r0, #1
   17bd8:	str	r0, [r7]
   17bdc:	mov	r0, #63	; 0x3f
   17be0:	sub	sp, fp, #28
   17be4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17be8:	ldr	r0, [fp, #20]
   17bec:	cmp	r0, #0
   17bf0:	bne	17d2c <argp_failure@@Base+0x2c58>
   17bf4:	ldr	r0, [r4, #12]
   17bf8:	str	r0, [r7, #8]
   17bfc:	b	17bdc <argp_failure@@Base+0x2b08>
   17c00:	ldr	r0, [fp, #20]
   17c04:	cmp	r0, #0
   17c08:	bne	17d5c <argp_failure@@Base+0x2c88>
   17c0c:	ldr	r0, [r4, #12]
   17c10:	str	r0, [r7, #8]
   17c14:	ldr	r0, [sp, #8]
   17c18:	ldrb	r0, [r0]
   17c1c:	cmp	r0, #58	; 0x3a
   17c20:	movwne	r0, #63	; 0x3f
   17c24:	sub	sp, fp, #28
   17c28:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17c2c:	movw	r5, #59576	; 0xe8b8
   17c30:	movt	r5, #2
   17c34:	ldr	r0, [r5]
   17c38:	ldr	r1, [sp, #28]
   17c3c:	cmp	r1, #0
   17c40:	beq	17c68 <argp_failure@@Base+0x2b94>
   17c44:	ldr	r1, [sp, #12]
   17c48:	ldr	r2, [r1]
   17c4c:	ldr	r1, [r7, #20]
   17c50:	str	r1, [sp]
   17c54:	movw	r1, #43880	; 0xab68
   17c58:	movt	r1, #1
   17c5c:	ldr	r3, [fp, #24]
   17c60:	bl	114d8 <fprintf@plt>
   17c64:	b	17a9c <argp_failure@@Base+0x29c8>
   17c68:	bl	11568 <flockfile@plt>
   17c6c:	ldr	r0, [sp, #12]
   17c70:	ldr	r2, [r0]
   17c74:	ldr	r0, [r5]
   17c78:	ldr	r1, [r7, #20]
   17c7c:	str	r1, [sp]
   17c80:	movw	r1, #43912	; 0xab88
   17c84:	movt	r1, #1
   17c88:	ldr	r9, [fp, #24]
   17c8c:	mov	r3, r9
   17c90:	bl	114d8 <fprintf@plt>
   17c94:	cmp	r4, #0
   17c98:	beq	17ce0 <argp_failure@@Base+0x2c0c>
   17c9c:	movw	r8, #43959	; 0xabb7
   17ca0:	movt	r8, #1
   17ca4:	ldr	r7, [sp, #24]
   17ca8:	ldrb	r0, [r7]
   17cac:	cmp	r0, #0
   17cb0:	bne	17cc8 <argp_failure@@Base+0x2bf4>
   17cb4:	add	r6, r6, #16
   17cb8:	add	r7, r7, #1
   17cbc:	subs	r4, r4, #1
   17cc0:	bne	17ca8 <argp_failure@@Base+0x2bd4>
   17cc4:	b	17ce0 <argp_failure@@Base+0x2c0c>
   17cc8:	ldr	r3, [r6]
   17ccc:	ldr	r0, [r5]
   17cd0:	mov	r1, r8
   17cd4:	mov	r2, r9
   17cd8:	bl	114d8 <fprintf@plt>
   17cdc:	b	17cb4 <argp_failure@@Base+0x2be0>
   17ce0:	ldr	r1, [r5]
   17ce4:	mov	r0, #10
   17ce8:	bl	11544 <fputc@plt>
   17cec:	ldr	r0, [r5]
   17cf0:	bl	1140c <funlockfile@plt>
   17cf4:	ldr	r7, [fp, #16]
   17cf8:	b	17a9c <argp_failure@@Base+0x29c8>
   17cfc:	ldr	r0, [sp, #12]
   17d00:	ldr	r2, [r0]
   17d04:	movw	r0, #59576	; 0xe8b8
   17d08:	movt	r0, #2
   17d0c:	ldr	r0, [r0]
   17d10:	ldr	r1, [r7, #20]
   17d14:	str	r1, [sp]
   17d18:	movw	r1, #43967	; 0xabbf
   17d1c:	movt	r1, #1
   17d20:	ldr	r3, [fp, #24]
   17d24:	bl	114d8 <fprintf@plt>
   17d28:	b	17bc4 <argp_failure@@Base+0x2af0>
   17d2c:	ldr	r0, [sp, #12]
   17d30:	ldr	r2, [r0]
   17d34:	movw	r0, #59576	; 0xe8b8
   17d38:	movt	r0, #2
   17d3c:	ldr	r0, [r0]
   17d40:	ldr	r1, [r4]
   17d44:	str	r1, [sp]
   17d48:	movw	r1, #43999	; 0xabdf
   17d4c:	movt	r1, #1
   17d50:	ldr	r3, [fp, #24]
   17d54:	bl	114d8 <fprintf@plt>
   17d58:	b	17bf4 <argp_failure@@Base+0x2b20>
   17d5c:	ldr	r0, [sp, #12]
   17d60:	ldr	r2, [r0]
   17d64:	movw	r0, #59576	; 0xe8b8
   17d68:	movt	r0, #2
   17d6c:	ldr	r0, [r0]
   17d70:	ldr	r1, [r4]
   17d74:	str	r1, [sp]
   17d78:	movw	r1, #44044	; 0xac0c
   17d7c:	movt	r1, #1
   17d80:	ldr	r3, [fp, #24]
   17d84:	bl	114d8 <fprintf@plt>
   17d88:	b	17c0c <argp_failure@@Base+0x2b38>
   17d8c:	push	{r4, r5, r6, r7, fp, lr}
   17d90:	add	fp, sp, #16
   17d94:	sub	sp, sp, #16
   17d98:	movw	r7, #59548	; 0xe89c
   17d9c:	movt	r7, #2
   17da0:	ldr	r4, [r7]
   17da4:	movw	r6, #59624	; 0xe8e8
   17da8:	movt	r6, #2
   17dac:	movw	r5, #59552	; 0xe8a0
   17db0:	movt	r5, #2
   17db4:	ldr	r5, [r5]
   17db8:	stm	r6, {r4, r5}
   17dbc:	ldr	r5, [fp, #16]
   17dc0:	str	r5, [sp, #12]
   17dc4:	str	r6, [sp, #8]
   17dc8:	ldr	r5, [fp, #12]
   17dcc:	str	r5, [sp, #4]
   17dd0:	ldr	r5, [fp, #8]
   17dd4:	str	r5, [sp]
   17dd8:	bl	171c0 <argp_failure@@Base+0x20ec>
   17ddc:	ldr	r1, [r6]
   17de0:	ldr	r2, [r6, #8]
   17de4:	ldr	r3, [r6, #12]
   17de8:	str	r1, [r7]
   17dec:	movw	r1, #59716	; 0xe944
   17df0:	movt	r1, #2
   17df4:	str	r3, [r1]
   17df8:	movw	r1, #59556	; 0xe8a4
   17dfc:	movt	r1, #2
   17e00:	str	r2, [r1]
   17e04:	sub	sp, fp, #16
   17e08:	pop	{r4, r5, r6, r7, fp, pc}
   17e0c:	push	{fp, lr}
   17e10:	mov	fp, sp
   17e14:	sub	sp, sp, #16
   17e18:	mov	ip, #1
   17e1c:	mov	r3, #0
   17e20:	str	r3, [sp]
   17e24:	stmib	sp, {r3, ip}
   17e28:	mov	r3, #0
   17e2c:	bl	17d8c <argp_failure@@Base+0x2cb8>
   17e30:	mov	sp, fp
   17e34:	pop	{fp, pc}
   17e38:	push	{fp, lr}
   17e3c:	mov	fp, sp
   17e40:	bl	114e4 <__errno_location@plt>
   17e44:	mov	r1, #12
   17e48:	str	r1, [r0]
   17e4c:	mov	r0, #0
   17e50:	pop	{fp, pc}
   17e54:	b	14b58 <_obstack_memory_used@@Base+0x8e4>
   17e58:	cmp	r1, #0
   17e5c:	orreq	r1, r1, #1
   17e60:	b	14b88 <_obstack_memory_used@@Base+0x914>
   17e64:	b	14b04 <_obstack_memory_used@@Base+0x890>
   17e68:	clz	r3, r2
   17e6c:	lsr	ip, r3, #5
   17e70:	clz	r3, r1
   17e74:	lsr	r3, r3, #5
   17e78:	orrs	r3, r3, ip
   17e7c:	movwne	r1, #1
   17e80:	movwne	r2, #1
   17e84:	b	17e88 <argp_failure@@Base+0x2db4>
   17e88:	cmp	r2, #0
   17e8c:	beq	17ebc <argp_failure@@Base+0x2de8>
   17e90:	mvn	r3, #0
   17e94:	udiv	r3, r3, r2
   17e98:	cmp	r3, r1
   17e9c:	bcs	17ebc <argp_failure@@Base+0x2de8>
   17ea0:	push	{fp, lr}
   17ea4:	mov	fp, sp
   17ea8:	bl	114e4 <__errno_location@plt>
   17eac:	mov	r1, #12
   17eb0:	str	r1, [r0]
   17eb4:	mov	r0, #0
   17eb8:	pop	{fp, pc}
   17ebc:	mul	r1, r2, r1
   17ec0:	b	14b88 <_obstack_memory_used@@Base+0x914>
   17ec4:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   17ec8:	add	fp, sp, #24
   17ecc:	mov	r8, r3
   17ed0:	mov	r9, r2
   17ed4:	mov	r6, r1
   17ed8:	mov	r7, r0
   17edc:	mov	r0, #36	; 0x24
   17ee0:	bl	14b58 <_obstack_memory_used@@Base+0x8e4>
   17ee4:	cmp	r0, #0
   17ee8:	beq	17f30 <argp_failure@@Base+0x2e5c>
   17eec:	mov	r4, r0
   17ef0:	mov	r5, #0
   17ef4:	str	r7, [r0]
   17ef8:	stmib	r0, {r6, r9}
   17efc:	str	r8, [r0, #12]
   17f00:	str	r5, [r0, #16]
   17f04:	str	r5, [r0, #20]
   17f08:	mov	r0, #200	; 0xc8
   17f0c:	bl	14b58 <_obstack_memory_used@@Base+0x8e4>
   17f10:	str	r0, [r4, #24]
   17f14:	cmp	r0, #0
   17f18:	beq	17f3c <argp_failure@@Base+0x2e68>
   17f1c:	add	r1, r0, #200	; 0xc8
   17f20:	str	r0, [r4, #28]
   17f24:	str	r1, [r4, #32]
   17f28:	mov	r0, r4
   17f2c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   17f30:	mov	r5, #0
   17f34:	mov	r0, r5
   17f38:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   17f3c:	mov	r0, r4
   17f40:	bl	13e88 <argp_usage@@Base+0x190>
   17f44:	mov	r0, r5
   17f48:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   17f4c:	push	{r4, sl, fp, lr}
   17f50:	add	fp, sp, #8
   17f54:	mov	r4, r0
   17f58:	bl	17f94 <argp_failure@@Base+0x2ec0>
   17f5c:	ldr	r0, [r4, #24]
   17f60:	ldr	r1, [r4, #28]
   17f64:	cmp	r1, r0
   17f68:	bls	17f80 <argp_failure@@Base+0x2eac>
   17f6c:	ldr	r3, [r4]
   17f70:	ldr	r1, [r4, #28]
   17f74:	sub	r2, r1, r0
   17f78:	mov	r1, #1
   17f7c:	bl	113dc <fwrite_unlocked@plt>
   17f80:	ldr	r0, [r4, #24]
   17f84:	bl	13e88 <argp_usage@@Base+0x190>
   17f88:	mov	r0, r4
   17f8c:	pop	{r4, sl, fp, lr}
   17f90:	b	13e88 <argp_usage@@Base+0x190>
   17f94:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17f98:	add	fp, sp, #28
   17f9c:	sub	sp, sp, #12
   17fa0:	mov	r4, r0
   17fa4:	ldr	r1, [r0, #16]
   17fa8:	ldr	r2, [r0, #24]
   17fac:	ldr	r0, [r0, #28]
   17fb0:	add	r9, r2, r1
   17fb4:	cmp	r9, r0
   17fb8:	bcc	17fd8 <argp_failure@@Base+0x2f04>
   17fbc:	b	18424 <argp_failure@@Base+0x3350>
   17fc0:	mov	r0, #0
   17fc4:	str	r0, [r4, #20]
   17fc8:	add	r9, r7, #1
   17fcc:	ldr	r0, [r4, #28]
   17fd0:	cmp	r9, r0
   17fd4:	bcs	18424 <argp_failure@@Base+0x3350>
   17fd8:	ldr	r6, [r4, #20]
   17fdc:	cmp	r6, #0
   17fe0:	beq	18034 <argp_failure@@Base+0x2f60>
   17fe4:	mov	r8, r9
   17fe8:	ldr	sl, [r4, #28]
   17fec:	sub	r5, sl, r8
   17ff0:	mov	r0, r8
   17ff4:	mov	r1, #10
   17ff8:	mov	r2, r5
   17ffc:	bl	11520 <memchr@plt>
   18000:	mov	r7, r0
   18004:	cmn	r6, #1
   18008:	movle	r0, #0
   1800c:	strle	r0, [r4, #20]
   18010:	ldr	r0, [r4, #20]
   18014:	cmp	r7, #0
   18018:	beq	180ac <argp_failure@@Base+0x2fd8>
   1801c:	sub	r1, r7, r8
   18020:	add	r1, r1, r0
   18024:	ldr	r2, [r4, #8]
   18028:	cmp	r1, r2
   1802c:	blt	17fc0 <argp_failure@@Base+0x2eec>
   18030:	b	180c0 <argp_failure@@Base+0x2fec>
   18034:	ldr	r6, [r4, #4]
   18038:	cmp	r6, #0
   1803c:	beq	1817c <argp_failure@@Base+0x30a8>
   18040:	add	r1, r0, r6
   18044:	ldr	r2, [r4, #32]
   18048:	cmp	r1, r2
   1804c:	mov	r5, r6
   18050:	bcs	1808c <argp_failure@@Base+0x2fb8>
   18054:	add	r8, r9, r6
   18058:	sub	r2, r0, r9
   1805c:	mov	r0, r8
   18060:	mov	r1, r9
   18064:	bl	11370 <memmove@plt>
   18068:	ldr	r0, [r4, #28]
   1806c:	add	r0, r0, r6
   18070:	str	r0, [r4, #28]
   18074:	mov	r0, r9
   18078:	mov	r1, #32
   1807c:	mov	r2, r6
   18080:	bl	11508 <memset@plt>
   18084:	str	r6, [r4, #20]
   18088:	b	17fe8 <argp_failure@@Base+0x2f14>
   1808c:	ldr	r1, [r4]
   18090:	mov	r0, #32
   18094:	bl	1161c <putc_unlocked@plt>
   18098:	subs	r5, r5, #1
   1809c:	bne	1808c <argp_failure@@Base+0x2fb8>
   180a0:	mov	r8, r9
   180a4:	str	r6, [r4, #20]
   180a8:	b	17fe8 <argp_failure@@Base+0x2f14>
   180ac:	add	r1, r0, r5
   180b0:	ldr	r2, [r4, #8]
   180b4:	cmp	r1, r2
   180b8:	mov	r7, sl
   180bc:	bcc	18404 <argp_failure@@Base+0x3330>
   180c0:	str	r5, [sp, #8]
   180c4:	ldr	r5, [r4, #8]
   180c8:	ldr	r1, [r4, #12]
   180cc:	str	r1, [sp, #4]
   180d0:	cmn	r1, #1
   180d4:	ble	1811c <argp_failure@@Base+0x3048>
   180d8:	subs	r0, r5, r0
   180dc:	str	r0, [sp]
   180e0:	add	r9, r8, r0
   180e4:	mov	r0, #0
   180e8:	bmi	18174 <argp_failure@@Base+0x30a0>
   180ec:	bl	1149c <__ctype_b_loc@plt>
   180f0:	ldr	r0, [r0]
   180f4:	mov	r5, r9
   180f8:	ldrb	r1, [r5]
   180fc:	ldrb	r1, [r0, r1, lsl #1]
   18100:	tst	r1, #1
   18104:	bne	18184 <argp_failure@@Base+0x30b0>
   18108:	sub	r5, r5, #1
   1810c:	cmp	r5, r8
   18110:	bcs	180f8 <argp_failure@@Base+0x3024>
   18114:	mov	r0, #0
   18118:	b	18188 <argp_failure@@Base+0x30b4>
   1811c:	sub	r6, r5, #1
   18120:	cmp	r7, sl
   18124:	bcs	1840c <argp_failure@@Base+0x3338>
   18128:	sub	r2, sl, r7
   1812c:	sub	r0, r6, r0
   18130:	add	r0, r8, r0
   18134:	mov	r1, r7
   18138:	bl	11370 <memmove@plt>
   1813c:	ldr	r0, [r4, #20]
   18140:	ldr	r1, [r4, #28]
   18144:	mov	r2, #0
   18148:	str	r2, [r4, #20]
   1814c:	sub	r0, r6, r0
   18150:	add	r0, r8, r0
   18154:	sub	r0, r7, r0
   18158:	add	r0, r1, r0
   1815c:	str	r0, [r4, #28]
   18160:	add	r9, r8, r5
   18164:	ldr	r0, [r4, #28]
   18168:	cmp	r9, r0
   1816c:	bcc	17fd8 <argp_failure@@Base+0x2f04>
   18170:	b	18424 <argp_failure@@Base+0x3350>
   18174:	mov	r5, r9
   18178:	b	18188 <argp_failure@@Base+0x30b4>
   1817c:	ldr	r6, [r4, #20]
   18180:	b	17fe4 <argp_failure@@Base+0x2f10>
   18184:	mov	r0, #1
   18188:	add	r6, r5, #1
   1818c:	cmp	r6, r8
   18190:	bls	181d0 <argp_failure@@Base+0x30fc>
   18194:	cmp	r0, #0
   18198:	beq	1823c <argp_failure@@Base+0x3168>
   1819c:	sub	r1, r5, #1
   181a0:	ldr	r7, [sp, #4]
   181a4:	mov	r5, r1
   181a8:	cmp	r1, r8
   181ac:	bcc	18240 <argp_failure@@Base+0x316c>
   181b0:	bl	1149c <__ctype_b_loc@plt>
   181b4:	mov	r1, r5
   181b8:	ldrb	r2, [r1], #-1
   181bc:	ldr	r0, [r0]
   181c0:	ldrb	r0, [r0, r2, lsl #1]
   181c4:	tst	r0, #1
   181c8:	bne	181a4 <argp_failure@@Base+0x30d0>
   181cc:	b	18240 <argp_failure@@Base+0x316c>
   181d0:	cmp	r9, r7
   181d4:	ldr	r5, [sp, #8]
   181d8:	bcs	18210 <argp_failure@@Base+0x313c>
   181dc:	ldr	r0, [sp]
   181e0:	add	r0, r8, r0
   181e4:	add	r1, r0, #1
   181e8:	mov	r9, r1
   181ec:	cmp	r1, r7
   181f0:	bcs	18210 <argp_failure@@Base+0x313c>
   181f4:	bl	1149c <__ctype_b_loc@plt>
   181f8:	mov	r1, r9
   181fc:	ldrb	r2, [r1], #1
   18200:	ldr	r0, [r0]
   18204:	ldrb	r0, [r0, r2, lsl #1]
   18208:	tst	r0, #1
   1820c:	beq	181e8 <argp_failure@@Base+0x3114>
   18210:	cmp	r9, r7
   18214:	beq	17fc0 <argp_failure@@Base+0x2eec>
   18218:	bl	1149c <__ctype_b_loc@plt>
   1821c:	ldr	r0, [r0]
   18220:	mov	r6, r9
   18224:	ldrb	r1, [r6, #1]!
   18228:	ldrb	r1, [r0, r1, lsl #1]
   1822c:	tst	r1, #1
   18230:	bne	18224 <argp_failure@@Base+0x3150>
   18234:	ldr	r7, [sp, #4]
   18238:	b	18248 <argp_failure@@Base+0x3174>
   1823c:	ldr	r7, [sp, #4]
   18240:	add	r9, r5, #1
   18244:	ldr	r5, [sp, #8]
   18248:	add	r0, sl, #1
   1824c:	cmp	r6, r0
   18250:	beq	18270 <argp_failure@@Base+0x319c>
   18254:	cmp	sl, r6
   18258:	bls	182dc <argp_failure@@Base+0x3208>
   1825c:	mvn	r0, r9
   18260:	add	r0, r0, r6
   18264:	cmp	r0, r7
   18268:	blt	18288 <argp_failure@@Base+0x31b4>
   1826c:	b	182dc <argp_failure@@Base+0x3208>
   18270:	cmp	sl, r6
   18274:	bls	182dc <argp_failure@@Base+0x3208>
   18278:	ldr	r0, [r4, #32]
   1827c:	sub	r0, r0, r9
   18280:	cmp	r0, r7
   18284:	bgt	182dc <argp_failure@@Base+0x3208>
   18288:	ldr	r0, [r4, #32]
   1828c:	sub	r0, r0, sl
   18290:	add	r1, r7, #1
   18294:	cmp	r0, r1
   18298:	ble	182e8 <argp_failure@@Base+0x3214>
   1829c:	mov	r0, r7
   182a0:	sub	r7, sl, r6
   182a4:	add	r5, r9, #1
   182a8:	add	r0, r5, r0
   182ac:	mov	r1, r6
   182b0:	mov	r2, r7
   182b4:	bl	11370 <memmove@plt>
   182b8:	ldr	r0, [r4, #12]
   182bc:	mov	r1, #10
   182c0:	strb	r1, [r9]
   182c4:	add	r6, r5, r0
   182c8:	add	r0, r6, r7
   182cc:	sub	r0, r0, r8
   182d0:	mov	r9, r5
   182d4:	mov	r5, r0
   182d8:	b	1831c <argp_failure@@Base+0x3248>
   182dc:	mov	r0, #10
   182e0:	strb	r0, [r9], #1
   182e4:	b	1831c <argp_failure@@Base+0x3248>
   182e8:	ldr	r0, [r4, #24]
   182ec:	cmp	r9, r0
   182f0:	bls	18304 <argp_failure@@Base+0x3230>
   182f4:	sub	r2, r9, r0
   182f8:	ldr	r3, [r4]
   182fc:	mov	r1, #1
   18300:	bl	113dc <fwrite_unlocked@plt>
   18304:	ldr	r1, [r4]
   18308:	mov	r0, #10
   1830c:	bl	1161c <putc_unlocked@plt>
   18310:	ldr	r9, [r4, #24]
   18314:	sub	r5, sl, r9
   18318:	mov	r8, r9
   1831c:	mov	r2, #32
   18320:	sub	r1, r6, r9
   18324:	ldr	r0, [r4, #12]
   18328:	cmp	r1, r0
   1832c:	bge	18394 <argp_failure@@Base+0x32c0>
   18330:	add	r1, r8, r5
   18334:	add	r1, r1, #1
   18338:	cmp	r6, r1
   1833c:	bne	18350 <argp_failure@@Base+0x327c>
   18340:	ldr	r1, [r4, #32]
   18344:	sub	r1, r1, r6
   18348:	cmp	r1, r0
   1834c:	bge	18390 <argp_failure@@Base+0x32bc>
   18350:	ldr	r0, [r4, #12]
   18354:	cmp	r0, #1
   18358:	blt	183b8 <argp_failure@@Base+0x32e4>
   1835c:	mov	r7, r5
   18360:	mov	r5, #0
   18364:	ldr	r1, [r4]
   18368:	mov	r0, #32
   1836c:	bl	1161c <putc_unlocked@plt>
   18370:	add	r5, r5, #1
   18374:	ldr	r0, [r4, #12]
   18378:	cmp	r5, r0
   1837c:	blt	18364 <argp_failure@@Base+0x3290>
   18380:	mov	r5, r7
   18384:	cmp	r9, r6
   18388:	bcc	183c0 <argp_failure@@Base+0x32ec>
   1838c:	b	183d4 <argp_failure@@Base+0x3300>
   18390:	ldr	r0, [r4, #12]
   18394:	cmp	r0, #1
   18398:	blt	183b8 <argp_failure@@Base+0x32e4>
   1839c:	mov	r0, #0
   183a0:	strb	r2, [r9, r0]
   183a4:	add	r0, r0, #1
   183a8:	ldr	r1, [r4, #12]
   183ac:	cmp	r0, r1
   183b0:	blt	183a0 <argp_failure@@Base+0x32cc>
   183b4:	add	r9, r9, r0
   183b8:	cmp	r9, r6
   183bc:	bcs	183d4 <argp_failure@@Base+0x3300>
   183c0:	add	r0, r8, r5
   183c4:	sub	r2, r0, r6
   183c8:	mov	r0, r9
   183cc:	mov	r1, r6
   183d0:	bl	11370 <memmove@plt>
   183d4:	sub	r0, r5, r6
   183d8:	add	r0, r0, r8
   183dc:	add	r0, r9, r0
   183e0:	str	r0, [r4, #28]
   183e4:	ldr	r0, [r4, #12]
   183e8:	cmp	r0, #0
   183ec:	mvneq	r0, #0
   183f0:	str	r0, [r4, #20]
   183f4:	ldr	r0, [r4, #28]
   183f8:	cmp	r9, r0
   183fc:	bcc	17fd8 <argp_failure@@Base+0x2f04>
   18400:	b	18424 <argp_failure@@Base+0x3350>
   18404:	str	r1, [r4, #20]
   18408:	b	18424 <argp_failure@@Base+0x3350>
   1840c:	ldr	r1, [sp, #8]
   18410:	add	r0, r0, r1
   18414:	str	r0, [r4, #20]
   18418:	sub	r0, r6, r0
   1841c:	add	r0, sl, r0
   18420:	str	r0, [r4, #28]
   18424:	ldr	r0, [r4, #24]
   18428:	ldr	r1, [r4, #28]
   1842c:	sub	r0, r1, r0
   18430:	str	r0, [r4, #16]
   18434:	sub	sp, fp, #28
   18438:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1843c:	push	{r4, r5, r6, sl, fp, lr}
   18440:	add	fp, sp, #16
   18444:	mov	r5, r1
   18448:	mov	r4, r0
   1844c:	ldr	r0, [r0, #28]
   18450:	ldr	r1, [r4, #32]
   18454:	sub	r0, r1, r0
   18458:	mov	r6, #1
   1845c:	cmp	r0, r5
   18460:	bcs	18520 <argp_failure@@Base+0x344c>
   18464:	mov	r0, r4
   18468:	bl	17f94 <argp_failure@@Base+0x2ec0>
   1846c:	ldr	r3, [r4]
   18470:	ldr	r0, [r4, #24]
   18474:	ldr	r1, [r4, #28]
   18478:	sub	r2, r1, r0
   1847c:	mov	r1, #1
   18480:	bl	113dc <fwrite_unlocked@plt>
   18484:	mov	r1, r0
   18488:	ldr	r0, [r4, #24]
   1848c:	ldr	r2, [r4, #28]
   18490:	sub	r3, r2, r0
   18494:	cmp	r1, r3
   18498:	bne	184ec <argp_failure@@Base+0x3418>
   1849c:	mov	r1, #0
   184a0:	str	r1, [r4, #16]
   184a4:	str	r0, [r4, #28]
   184a8:	ldr	r1, [r4, #32]
   184ac:	sub	r1, r1, r0
   184b0:	mov	r6, #1
   184b4:	cmp	r1, r5
   184b8:	bcs	18520 <argp_failure@@Base+0x344c>
   184bc:	adds	r5, r1, r5
   184c0:	bcs	18510 <argp_failure@@Base+0x343c>
   184c4:	mov	r1, r5
   184c8:	bl	14b88 <_obstack_memory_used@@Base+0x914>
   184cc:	cmp	r0, #0
   184d0:	beq	18510 <argp_failure@@Base+0x343c>
   184d4:	add	r1, r0, r5
   184d8:	str	r0, [r4, #24]
   184dc:	str	r0, [r4, #28]
   184e0:	str	r1, [r4, #32]
   184e4:	mov	r0, r6
   184e8:	pop	{r4, r5, r6, sl, fp, pc}
   184ec:	sub	r2, r2, r1
   184f0:	str	r2, [r4, #28]
   184f4:	ldr	r3, [r4, #16]
   184f8:	sub	r3, r3, r1
   184fc:	str	r3, [r4, #16]
   18500:	add	r1, r0, r1
   18504:	sub	r2, r2, r0
   18508:	bl	11370 <memmove@plt>
   1850c:	b	1851c <argp_failure@@Base+0x3448>
   18510:	bl	114e4 <__errno_location@plt>
   18514:	mov	r1, #12
   18518:	str	r1, [r0]
   1851c:	mov	r6, #0
   18520:	mov	r0, r6
   18524:	pop	{r4, r5, r6, sl, fp, pc}
   18528:	sub	sp, sp, #8
   1852c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   18530:	add	fp, sp, #24
   18534:	sub	sp, sp, #8
   18538:	mov	r8, r1
   1853c:	mov	r4, r0
   18540:	str	r2, [fp, #8]
   18544:	str	r3, [fp, #12]
   18548:	mov	r6, #150	; 0x96
   1854c:	add	r7, fp, #8
   18550:	mov	r0, r4
   18554:	mov	r1, r6
   18558:	bl	1843c <argp_failure@@Base+0x3368>
   1855c:	cmp	r0, #0
   18560:	beq	185a0 <argp_failure@@Base+0x34cc>
   18564:	str	r7, [sp, #4]
   18568:	ldr	r0, [r4, #28]
   1856c:	ldr	r1, [r4, #32]
   18570:	sub	r5, r1, r0
   18574:	mov	r1, r5
   18578:	mov	r2, r8
   1857c:	mov	r3, r7
   18580:	bl	11574 <vsnprintf@plt>
   18584:	cmp	r0, r5
   18588:	addcs	r6, r0, #1
   1858c:	bcs	18550 <argp_failure@@Base+0x347c>
   18590:	ldr	r1, [r4, #28]
   18594:	add	r1, r1, r0
   18598:	str	r1, [r4, #28]
   1859c:	b	185a4 <argp_failure@@Base+0x34d0>
   185a0:	mvn	r0, #0
   185a4:	sub	sp, fp, #24
   185a8:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   185ac:	add	sp, sp, #8
   185b0:	bx	lr
   185b4:	push	{r4, r5, r6, sl, fp, lr}
   185b8:	add	fp, sp, #16
   185bc:	mov	r4, r2
   185c0:	mov	r6, r1
   185c4:	mov	r5, r0
   185c8:	ldr	r0, [r0, #28]
   185cc:	ldr	r1, [r5, #32]
   185d0:	add	r0, r0, r2
   185d4:	cmp	r0, r1
   185d8:	bls	185f0 <argp_failure@@Base+0x351c>
   185dc:	mov	r0, r5
   185e0:	mov	r1, r4
   185e4:	bl	1843c <argp_failure@@Base+0x3368>
   185e8:	cmp	r0, #0
   185ec:	beq	18614 <argp_failure@@Base+0x3540>
   185f0:	ldr	r0, [r5, #28]
   185f4:	mov	r1, r6
   185f8:	mov	r2, r4
   185fc:	bl	113c4 <memcpy@plt>
   18600:	ldr	r0, [r5, #28]
   18604:	add	r0, r0, r4
   18608:	str	r0, [r5, #28]
   1860c:	mov	r0, r4
   18610:	pop	{r4, r5, r6, sl, fp, pc}
   18614:	mov	r4, #0
   18618:	mov	r0, r4
   1861c:	pop	{r4, r5, r6, sl, fp, pc}
   18620:	push	{r4, r5, r6, sl, fp, lr}
   18624:	add	fp, sp, #16
   18628:	mov	r4, r1
   1862c:	mov	r6, r0
   18630:	mov	r0, r1
   18634:	bl	114c0 <strlen@plt>
   18638:	cmp	r0, #0
   1863c:	beq	18660 <argp_failure@@Base+0x358c>
   18640:	mov	r5, r0
   18644:	mov	r0, r6
   18648:	mov	r1, r4
   1864c:	mov	r2, r5
   18650:	bl	185b4 <argp_failure@@Base+0x34e0>
   18654:	subs	r0, r0, r5
   18658:	mvnne	r0, #0
   1865c:	pop	{r4, r5, r6, sl, fp, pc}
   18660:	mov	r0, #0
   18664:	pop	{r4, r5, r6, sl, fp, pc}
   18668:	push	{r4, r5, fp, lr}
   1866c:	add	fp, sp, #8
   18670:	mov	r4, r1
   18674:	mov	r5, r0
   18678:	ldr	r0, [r0, #28]
   1867c:	ldr	r1, [r5, #32]
   18680:	cmp	r0, r1
   18684:	bcc	1869c <argp_failure@@Base+0x35c8>
   18688:	mov	r0, r5
   1868c:	mov	r1, #1
   18690:	bl	1843c <argp_failure@@Base+0x3368>
   18694:	cmp	r0, #0
   18698:	beq	186b4 <argp_failure@@Base+0x35e0>
   1869c:	ldr	r0, [r5, #28]
   186a0:	add	r1, r0, #1
   186a4:	str	r1, [r5, #28]
   186a8:	strb	r4, [r0]
   186ac:	uxtb	r0, r4
   186b0:	pop	{r4, r5, fp, pc}
   186b4:	mvn	r0, #0
   186b8:	pop	{r4, r5, fp, pc}
   186bc:	push	{r4, r5, fp, lr}
   186c0:	add	fp, sp, #8
   186c4:	mov	r4, r1
   186c8:	mov	r5, r0
   186cc:	ldr	r0, [r0, #16]
   186d0:	ldr	r1, [r5, #24]
   186d4:	ldr	r2, [r5, #28]
   186d8:	sub	r1, r2, r1
   186dc:	cmp	r1, r0
   186e0:	bls	186ec <argp_failure@@Base+0x3618>
   186e4:	mov	r0, r5
   186e8:	bl	17f94 <argp_failure@@Base+0x2ec0>
   186ec:	ldr	r0, [r5, #4]
   186f0:	str	r4, [r5, #4]
   186f4:	pop	{r4, r5, fp, pc}
   186f8:	push	{r4, r5, fp, lr}
   186fc:	add	fp, sp, #8
   18700:	mov	r4, r1
   18704:	mov	r5, r0
   18708:	ldr	r0, [r0, #16]
   1870c:	ldr	r1, [r5, #24]
   18710:	ldr	r2, [r5, #28]
   18714:	sub	r1, r2, r1
   18718:	cmp	r1, r0
   1871c:	bls	18728 <argp_failure@@Base+0x3654>
   18720:	mov	r0, r5
   18724:	bl	17f94 <argp_failure@@Base+0x2ec0>
   18728:	ldr	r0, [r5, #8]
   1872c:	str	r4, [r5, #8]
   18730:	pop	{r4, r5, fp, pc}
   18734:	push	{r4, r5, fp, lr}
   18738:	add	fp, sp, #8
   1873c:	mov	r4, r1
   18740:	mov	r5, r0
   18744:	ldr	r0, [r0, #16]
   18748:	ldr	r1, [r5, #24]
   1874c:	ldr	r2, [r5, #28]
   18750:	sub	r1, r2, r1
   18754:	cmp	r1, r0
   18758:	bls	18764 <argp_failure@@Base+0x3690>
   1875c:	mov	r0, r5
   18760:	bl	17f94 <argp_failure@@Base+0x2ec0>
   18764:	ldr	r0, [r5, #12]
   18768:	str	r4, [r5, #12]
   1876c:	pop	{r4, r5, fp, pc}
   18770:	push	{r4, sl, fp, lr}
   18774:	add	fp, sp, #8
   18778:	mov	r4, r0
   1877c:	ldr	r0, [r0, #16]
   18780:	ldr	r1, [r4, #24]
   18784:	ldr	r2, [r4, #28]
   18788:	sub	r1, r2, r1
   1878c:	cmp	r1, r0
   18790:	bls	1879c <argp_failure@@Base+0x36c8>
   18794:	mov	r0, r4
   18798:	bl	17f94 <argp_failure@@Base+0x2ec0>
   1879c:	ldr	r0, [r4, #20]
   187a0:	bic	r0, r0, r0, asr #31
   187a4:	pop	{r4, sl, fp, pc}
   187a8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   187ac:	mov	r7, r0
   187b0:	ldr	r6, [pc, #72]	; 18800 <argp_failure@@Base+0x372c>
   187b4:	ldr	r5, [pc, #72]	; 18804 <argp_failure@@Base+0x3730>
   187b8:	add	r6, pc, r6
   187bc:	add	r5, pc, r5
   187c0:	sub	r6, r6, r5
   187c4:	mov	r8, r1
   187c8:	mov	r9, r2
   187cc:	bl	11308 <fdopen@plt-0x20>
   187d0:	asrs	r6, r6, #2
   187d4:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   187d8:	mov	r4, #0
   187dc:	add	r4, r4, #1
   187e0:	ldr	r3, [r5], #4
   187e4:	mov	r2, r9
   187e8:	mov	r1, r8
   187ec:	mov	r0, r7
   187f0:	blx	r3
   187f4:	cmp	r6, r4
   187f8:	bne	187dc <argp_failure@@Base+0x3708>
   187fc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   18800:	andeq	r2, r1, ip, asr #14
   18804:	andeq	r2, r1, r4, asr #14
   18808:	bx	lr

Disassembly of section .fini:

0001880c <.fini>:
   1880c:	push	{r3, lr}
   18810:	pop	{r3, pc}
