
../repos/dvidelabs-flatcc-3b39ef7/bin/flatcc:     file format elf32-littlearm


Disassembly of section .init:

00013f84 <.init>:
   13f84:	push	{r3, lr}
   13f88:	bl	14194 <_start@@Base+0x3c>
   13f8c:	pop	{r3, pc}

Disassembly of section .plt:

00013f90 <calloc@plt-0x14>:
   13f90:	push	{lr}		; (str lr, [sp, #-4]!)
   13f94:	ldr	lr, [pc, #4]	; 13fa0 <calloc@plt-0x4>
   13f98:	add	lr, pc, lr
   13f9c:	ldr	pc, [lr, #8]!
   13fa0:	andeq	r3, r5, r0, rrx

00013fa4 <calloc@plt>:
   13fa4:	add	ip, pc, #0, 12
   13fa8:	add	ip, ip, #339968	; 0x53000
   13fac:	ldr	pc, [ip, #96]!	; 0x60

00013fb0 <raise@plt>:
   13fb0:	add	ip, pc, #0, 12
   13fb4:	add	ip, ip, #339968	; 0x53000
   13fb8:	ldr	pc, [ip, #88]!	; 0x58

00013fbc <strcmp@plt>:
   13fbc:	add	ip, pc, #0, 12
   13fc0:	add	ip, ip, #339968	; 0x53000
   13fc4:	ldr	pc, [ip, #80]!	; 0x50

00013fc8 <fopen@plt>:
   13fc8:	add	ip, pc, #0, 12
   13fcc:	add	ip, ip, #339968	; 0x53000
   13fd0:	ldr	pc, [ip, #72]!	; 0x48

00013fd4 <free@plt>:
   13fd4:	add	ip, pc, #0, 12
   13fd8:	add	ip, ip, #339968	; 0x53000
   13fdc:	ldr	pc, [ip, #64]!	; 0x40

00013fe0 <memcpy@plt>:
   13fe0:	add	ip, pc, #0, 12
   13fe4:	add	ip, ip, #339968	; 0x53000
   13fe8:	ldr	pc, [ip, #56]!	; 0x38

00013fec <ftell@plt>:
   13fec:	add	ip, pc, #0, 12
   13ff0:	add	ip, ip, #339968	; 0x53000
   13ff4:	ldr	pc, [ip, #48]!	; 0x30

00013ff8 <memcmp@plt>:
   13ff8:	add	ip, pc, #0, 12
   13ffc:	add	ip, ip, #339968	; 0x53000
   14000:	ldr	pc, [ip, #40]!	; 0x28

00014004 <rewind@plt>:
   14004:	add	ip, pc, #0, 12
   14008:	add	ip, ip, #339968	; 0x53000
   1400c:	ldr	pc, [ip, #32]!

00014010 <realloc@plt>:
   14010:	add	ip, pc, #0, 12
   14014:	add	ip, ip, #339968	; 0x53000
   14018:	ldr	pc, [ip, #24]!

0001401c <fwrite@plt>:
   1401c:	add	ip, pc, #0, 12
   14020:	add	ip, ip, #339968	; 0x53000
   14024:	ldr	pc, [ip, #16]!

00014028 <fread@plt>:
   14028:	add	ip, pc, #0, 12
   1402c:	add	ip, ip, #339968	; 0x53000
   14030:	ldr	pc, [ip, #8]!

00014034 <puts@plt>:
   14034:	add	ip, pc, #0, 12
   14038:	add	ip, ip, #339968	; 0x53000
   1403c:	ldr	pc, [ip, #0]!

00014040 <malloc@plt>:
   14040:	add	ip, pc, #0, 12
   14044:	add	ip, ip, #335872	; 0x52000
   14048:	ldr	pc, [ip, #4088]!	; 0xff8

0001404c <__libc_start_main@plt>:
   1404c:	add	ip, pc, #0, 12
   14050:	add	ip, ip, #335872	; 0x52000
   14054:	ldr	pc, [ip, #4080]!	; 0xff0

00014058 <__ctype_toupper_loc@plt>:
   14058:	add	ip, pc, #0, 12
   1405c:	add	ip, ip, #335872	; 0x52000
   14060:	ldr	pc, [ip, #4072]!	; 0xfe8

00014064 <__gmon_start__@plt>:
   14064:	add	ip, pc, #0, 12
   14068:	add	ip, ip, #335872	; 0x52000
   1406c:	ldr	pc, [ip, #4064]!	; 0xfe0

00014070 <exit@plt>:
   14070:	add	ip, pc, #0, 12
   14074:	add	ip, ip, #335872	; 0x52000
   14078:	ldr	pc, [ip, #4056]!	; 0xfd8

0001407c <strlen@plt>:
   1407c:	add	ip, pc, #0, 12
   14080:	add	ip, ip, #335872	; 0x52000
   14084:	ldr	pc, [ip, #4048]!	; 0xfd0

00014088 <strchr@plt>:
   14088:	add	ip, pc, #0, 12
   1408c:	add	ip, ip, #335872	; 0x52000
   14090:	ldr	pc, [ip, #4040]!	; 0xfc8

00014094 <fprintf@plt>:
   14094:	add	ip, pc, #0, 12
   14098:	add	ip, ip, #335872	; 0x52000
   1409c:	ldr	pc, [ip, #4032]!	; 0xfc0

000140a0 <posix_memalign@plt>:
   140a0:	add	ip, pc, #0, 12
   140a4:	add	ip, ip, #335872	; 0x52000
   140a8:	ldr	pc, [ip, #4024]!	; 0xfb8

000140ac <memset@plt>:
   140ac:	add	ip, pc, #0, 12
   140b0:	add	ip, ip, #335872	; 0x52000
   140b4:	ldr	pc, [ip, #4016]!	; 0xfb0

000140b8 <strncpy@plt>:
   140b8:	add	ip, pc, #0, 12
   140bc:	add	ip, ip, #335872	; 0x52000
   140c0:	ldr	pc, [ip, #4008]!	; 0xfa8

000140c4 <strtod@plt>:
   140c4:	add	ip, pc, #0, 12
   140c8:	add	ip, ip, #335872	; 0x52000
   140cc:	ldr	pc, [ip, #4000]!	; 0xfa0

000140d0 <memchr@plt>:
   140d0:	add	ip, pc, #0, 12
   140d4:	add	ip, ip, #335872	; 0x52000
   140d8:	ldr	pc, [ip, #3992]!	; 0xf98

000140dc <fclose@plt>:
   140dc:	add	ip, pc, #0, 12
   140e0:	add	ip, ip, #335872	; 0x52000
   140e4:	ldr	pc, [ip, #3984]!	; 0xf90

000140e8 <vfprintf@plt>:
   140e8:	add	ip, pc, #0, 12
   140ec:	add	ip, ip, #335872	; 0x52000
   140f0:	ldr	pc, [ip, #3976]!	; 0xf88

000140f4 <fputc@plt>:
   140f4:	add	ip, pc, #0, 12
   140f8:	add	ip, ip, #335872	; 0x52000
   140fc:	ldr	pc, [ip, #3968]!	; 0xf80

00014100 <sprintf@plt>:
   14100:	add	ip, pc, #0, 12
   14104:	add	ip, ip, #335872	; 0x52000
   14108:	ldr	pc, [ip, #3960]!	; 0xf78

0001410c <vsnprintf@plt>:
   1410c:	add	ip, pc, #0, 12
   14110:	add	ip, ip, #335872	; 0x52000
   14114:	ldr	pc, [ip, #3952]!	; 0xf70

00014118 <qsort@plt>:
   14118:	add	ip, pc, #0, 12
   1411c:	add	ip, ip, #335872	; 0x52000
   14120:	ldr	pc, [ip, #3944]!	; 0xf68

00014124 <fseek@plt>:
   14124:	add	ip, pc, #0, 12
   14128:	add	ip, ip, #335872	; 0x52000
   1412c:	ldr	pc, [ip, #3936]!	; 0xf60

00014130 <strncmp@plt>:
   14130:	add	ip, pc, #0, 12
   14134:	add	ip, ip, #335872	; 0x52000
   14138:	ldr	pc, [ip, #3928]!	; 0xf58

0001413c <abort@plt>:
   1413c:	add	ip, pc, #0, 12
   14140:	add	ip, ip, #335872	; 0x52000
   14144:	ldr	pc, [ip, #3920]!	; 0xf50

00014148 <__assert_fail@plt>:
   14148:	add	ip, pc, #0, 12
   1414c:	add	ip, ip, #335872	; 0x52000
   14150:	ldr	pc, [ip, #3912]!	; 0xf48

Disassembly of section .text:

00014158 <_start@@Base>:
   14158:	mov	fp, #0
   1415c:	mov	lr, #0
   14160:	pop	{r1}		; (ldr r1, [sp], #4)
   14164:	mov	r2, sp
   14168:	push	{r2}		; (str r2, [sp, #-4]!)
   1416c:	push	{r0}		; (str r0, [sp, #-4]!)
   14170:	ldr	ip, [pc, #16]	; 14188 <_start@@Base+0x30>
   14174:	push	{ip}		; (str ip, [sp, #-4]!)
   14178:	ldr	r0, [pc, #12]	; 1418c <_start@@Base+0x34>
   1417c:	ldr	r3, [pc, #12]	; 14190 <_start@@Base+0x38>
   14180:	bl	1404c <__libc_start_main@plt>
   14184:	bl	1413c <abort@plt>
   14188:	andeq	fp, r3, r0, lsr #32
   1418c:	andeq	r4, r1, r4, lsr #22
   14190:	andeq	sl, r3, r0, asr #31
   14194:	ldr	r3, [pc, #20]	; 141b0 <_start@@Base+0x58>
   14198:	ldr	r2, [pc, #20]	; 141b4 <_start@@Base+0x5c>
   1419c:	add	r3, pc, r3
   141a0:	ldr	r2, [r3, r2]
   141a4:	cmp	r2, #0
   141a8:	bxeq	lr
   141ac:	b	14064 <__gmon_start__@plt>
   141b0:	andeq	r2, r5, ip, asr lr
   141b4:	muleq	r0, ip, r0
   141b8:	ldr	r3, [pc, #28]	; 141dc <_start@@Base+0x84>
   141bc:	ldr	r0, [pc, #28]	; 141e0 <_start@@Base+0x88>
   141c0:	sub	r3, r3, r0
   141c4:	cmp	r3, #6
   141c8:	bxls	lr
   141cc:	ldr	r3, [pc, #16]	; 141e4 <_start@@Base+0x8c>
   141d0:	cmp	r3, #0
   141d4:	bxeq	lr
   141d8:	bx	r3
   141dc:	andeq	r7, r6, fp, lsr #1
   141e0:	andeq	r7, r6, r8, lsr #1
   141e4:	andeq	r0, r0, r0
   141e8:	ldr	r1, [pc, #36]	; 14214 <_start@@Base+0xbc>
   141ec:	ldr	r0, [pc, #36]	; 14218 <_start@@Base+0xc0>
   141f0:	sub	r1, r1, r0
   141f4:	asr	r1, r1, #2
   141f8:	add	r1, r1, r1, lsr #31
   141fc:	asrs	r1, r1, #1
   14200:	bxeq	lr
   14204:	ldr	r3, [pc, #16]	; 1421c <_start@@Base+0xc4>
   14208:	cmp	r3, #0
   1420c:	bxeq	lr
   14210:	bx	r3
   14214:	andeq	r7, r6, r8, lsr #1
   14218:	andeq	r7, r6, r8, lsr #1
   1421c:	andeq	r0, r0, r0
   14220:	push	{r4, lr}
   14224:	ldr	r4, [pc, #24]	; 14244 <_start@@Base+0xec>
   14228:	ldrb	r3, [r4]
   1422c:	cmp	r3, #0
   14230:	popne	{r4, pc}
   14234:	bl	141b8 <_start@@Base+0x60>
   14238:	mov	r3, #1
   1423c:	strb	r3, [r4]
   14240:	pop	{r4, pc}
   14244:	strheq	r7, [r6], -r0
   14248:	ldr	r0, [pc, #40]	; 14278 <_start@@Base+0x120>
   1424c:	ldr	r3, [r0]
   14250:	cmp	r3, #0
   14254:	bne	1425c <_start@@Base+0x104>
   14258:	b	141e8 <_start@@Base+0x90>
   1425c:	ldr	r3, [pc, #24]	; 1427c <_start@@Base+0x124>
   14260:	cmp	r3, #0
   14264:	beq	14258 <_start@@Base+0x100>
   14268:	push	{r4, lr}
   1426c:	blx	r3
   14270:	pop	{r4, lr}
   14274:	b	141e8 <_start@@Base+0x90>
   14278:	andeq	r6, r6, r4, lsl pc
   1427c:	andeq	r0, r0, r0

00014280 <usage@@Base>:
   14280:	push	{r4, lr}
   14284:	mov	r4, r0
   14288:	ldr	r2, [pc, #64]	; 142d0 <usage@@Base+0x50>
   1428c:	ldr	r1, [pc, #64]	; 142d4 <usage@@Base+0x54>
   14290:	bl	14094 <fprintf@plt>
   14294:	ldr	r2, [pc, #60]	; 142d8 <usage@@Base+0x58>
   14298:	ldr	r1, [pc, #60]	; 142dc <usage@@Base+0x5c>
   1429c:	mov	r0, r4
   142a0:	bl	14094 <fprintf@plt>
   142a4:	mov	r3, r4
   142a8:	mov	r2, #35	; 0x23
   142ac:	mov	r1, #1
   142b0:	ldr	r0, [pc, #40]	; 142e0 <usage@@Base+0x60>
   142b4:	bl	1401c <fwrite@plt>
   142b8:	mov	r3, r4
   142bc:	ldr	r2, [pc, #32]	; 142e4 <usage@@Base+0x64>
   142c0:	mov	r1, #1
   142c4:	ldr	r0, [pc, #28]	; 142e8 <usage@@Base+0x68>
   142c8:	bl	1401c <fwrite@plt>
   142cc:	pop	{r4, pc}
   142d0:	andeq	fp, r3, r0, lsr r0
   142d4:	andeq	ip, r3, r4, ror #16
   142d8:	andeq	fp, r3, r8, rrx
   142dc:	andeq	fp, r3, r0, ror r0
   142e0:	andeq	fp, r3, r0, lsl #1
   142e4:	andeq	r0, r0, r1, lsl #11
   142e8:	andeq	fp, r3, r4, lsr #1

000142ec <help@@Base>:
   142ec:	push	{r4, lr}
   142f0:	mov	r4, r0
   142f4:	bl	14280 <usage@@Base>
   142f8:	mov	r3, r4
   142fc:	ldr	r2, [pc, #12]	; 14310 <help@@Base+0x24>
   14300:	mov	r1, #1
   14304:	ldr	r0, [pc, #8]	; 14314 <help@@Base+0x28>
   14308:	bl	1401c <fwrite@plt>
   1430c:	pop	{r4, pc}
   14310:	andeq	r0, r0, r4, asr #24
   14314:	andeq	fp, r3, r8, lsr #12

00014318 <parse_bool_arg@@Base>:
   14318:	push	{r4, lr}
   1431c:	mov	r4, r0
   14320:	ldr	r1, [pc, #112]	; 14398 <parse_bool_arg@@Base+0x80>
   14324:	bl	13fbc <strcmp@plt>
   14328:	cmp	r0, #0
   1432c:	popeq	{r4, pc}
   14330:	ldr	r1, [pc, #100]	; 1439c <parse_bool_arg@@Base+0x84>
   14334:	mov	r0, r4
   14338:	bl	13fbc <strcmp@plt>
   1433c:	cmp	r0, #0
   14340:	popeq	{r4, pc}
   14344:	ldr	r1, [pc, #84]	; 143a0 <parse_bool_arg@@Base+0x88>
   14348:	mov	r0, r4
   1434c:	bl	13fbc <strcmp@plt>
   14350:	cmp	r0, #0
   14354:	beq	14390 <parse_bool_arg@@Base+0x78>
   14358:	ldr	r1, [pc, #68]	; 143a4 <parse_bool_arg@@Base+0x8c>
   1435c:	mov	r0, r4
   14360:	bl	13fbc <strcmp@plt>
   14364:	cmp	r0, #0
   14368:	bne	14374 <parse_bool_arg@@Base+0x5c>
   1436c:	mov	r0, #1
   14370:	pop	{r4, pc}
   14374:	mov	r2, r4
   14378:	ldr	r1, [pc, #40]	; 143a8 <parse_bool_arg@@Base+0x90>
   1437c:	ldr	r3, [pc, #40]	; 143ac <parse_bool_arg@@Base+0x94>
   14380:	ldr	r0, [r3]
   14384:	bl	14094 <fprintf@plt>
   14388:	mvn	r0, #0
   1438c:	pop	{r4, pc}
   14390:	mov	r0, #1
   14394:	pop	{r4, pc}
   14398:	andeq	r5, r4, r0, ror #3
   1439c:	andeq	ip, r3, r0, ror r2
   143a0:	andeq	fp, r3, ip, rrx
   143a4:	andeq	ip, r3, r4, ror r2
   143a8:	andeq	ip, r3, r8, ror r2
   143ac:	andeq	r7, r6, r8, lsr #1

000143b0 <match_long_arg@@Base>:
   143b0:	push	{r4, r5, r6, lr}
   143b4:	mov	r5, r0
   143b8:	mov	r4, r2
   143bc:	bl	14130 <strncmp@plt>
   143c0:	cmp	r0, #0
   143c4:	bne	143e0 <match_long_arg@@Base+0x30>
   143c8:	mov	r0, r5
   143cc:	bl	1407c <strlen@plt>
   143d0:	cmp	r4, r0
   143d4:	movne	r0, #0
   143d8:	moveq	r0, #1
   143dc:	pop	{r4, r5, r6, pc}
   143e0:	mov	r0, #0
   143e4:	pop	{r4, r5, r6, pc}

000143e8 <set_opt@@Base>:
   143e8:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   143ec:	mov	r7, r0
   143f0:	mov	r4, r1
   143f4:	mov	r9, r2
   143f8:	mov	r0, r1
   143fc:	bl	1407c <strlen@plt>
   14400:	mov	r8, r0
   14404:	mov	r1, #61	; 0x3d
   14408:	mov	r0, r4
   1440c:	bl	14088 <strchr@plt>
   14410:	subs	r6, r0, #0
   14414:	addne	r9, r6, #1
   14418:	subne	r8, r6, r4
   1441c:	ldrb	sl, [r4]
   14420:	cmp	sl, #104	; 0x68
   14424:	beq	1452c <set_opt@@Base+0x144>
   14428:	mov	r1, r4
   1442c:	ldr	r0, [pc, #1332]	; 14968 <set_opt@@Base+0x580>
   14430:	bl	13fbc <strcmp@plt>
   14434:	cmp	r0, #0
   14438:	beq	1452c <set_opt@@Base+0x144>
   1443c:	mov	r1, r4
   14440:	ldr	r0, [pc, #1316]	; 1496c <set_opt@@Base+0x584>
   14444:	bl	13fbc <strcmp@plt>
   14448:	cmp	r0, #0
   1444c:	beq	14540 <set_opt@@Base+0x158>
   14450:	mov	r1, r4
   14454:	ldr	r0, [pc, #1300]	; 14970 <set_opt@@Base+0x588>
   14458:	bl	13fbc <strcmp@plt>
   1445c:	subs	r5, r0, #0
   14460:	moveq	r3, #1
   14464:	streq	r3, [r7, #108]	; 0x6c
   14468:	beq	14578 <set_opt@@Base+0x190>
   1446c:	mov	r1, r4
   14470:	ldr	r0, [pc, #1276]	; 14974 <set_opt@@Base+0x58c>
   14474:	bl	13fbc <strcmp@plt>
   14478:	subs	r5, r0, #0
   1447c:	moveq	r3, #1
   14480:	streq	r3, [r7, #180]	; 0xb4
   14484:	beq	14578 <set_opt@@Base+0x190>
   14488:	mov	r1, r4
   1448c:	ldr	r0, [pc, #1252]	; 14978 <set_opt@@Base+0x590>
   14490:	bl	13fbc <strcmp@plt>
   14494:	subs	r5, r0, #0
   14498:	moveq	r3, #1
   1449c:	streq	r3, [r7, #164]	; 0xa4
   144a0:	beq	14578 <set_opt@@Base+0x190>
   144a4:	mov	r1, r4
   144a8:	ldr	r0, [pc, #1228]	; 1497c <set_opt@@Base+0x594>
   144ac:	bl	13fbc <strcmp@plt>
   144b0:	subs	r5, r0, #0
   144b4:	moveq	r3, #1
   144b8:	streq	r3, [r7, #168]	; 0xa8
   144bc:	beq	14578 <set_opt@@Base+0x190>
   144c0:	mov	r1, r4
   144c4:	ldr	r0, [pc, #1204]	; 14980 <set_opt@@Base+0x598>
   144c8:	bl	13fbc <strcmp@plt>
   144cc:	subs	r5, r0, #0
   144d0:	beq	1456c <set_opt@@Base+0x184>
   144d4:	mov	r2, r8
   144d8:	mov	r1, r4
   144dc:	ldr	r0, [pc, #1184]	; 14984 <set_opt@@Base+0x59c>
   144e0:	bl	143b0 <match_long_arg@@Base>
   144e4:	subs	r5, r0, #0
   144e8:	bne	14580 <set_opt@@Base+0x198>
   144ec:	mov	r2, r8
   144f0:	mov	r1, r4
   144f4:	ldr	r0, [pc, #1164]	; 14988 <set_opt@@Base+0x5a0>
   144f8:	bl	143b0 <match_long_arg@@Base>
   144fc:	subs	fp, r0, #0
   14500:	beq	14614 <set_opt@@Base+0x22c>
   14504:	cmp	r9, #0
   14508:	beq	145ec <set_opt@@Base+0x204>
   1450c:	mov	r0, r9
   14510:	bl	14318 <parse_bool_arg@@Base>
   14514:	str	r0, [r7, #188]	; 0xbc
   14518:	cmp	r0, #0
   1451c:	blt	1460c <set_opt@@Base+0x224>
   14520:	cmp	r6, #0
   14524:	moveq	r5, #2
   14528:	b	14578 <set_opt@@Base+0x190>
   1452c:	ldr	r3, [pc, #1112]	; 1498c <set_opt@@Base+0x5a4>
   14530:	ldr	r0, [r3]
   14534:	bl	142ec <help@@Base>
   14538:	mov	r0, #0
   1453c:	bl	14070 <exit@plt>
   14540:	ldr	r4, [pc, #1096]	; 14990 <set_opt@@Base+0x5a8>
   14544:	ldr	r2, [pc, #1096]	; 14994 <set_opt@@Base+0x5ac>
   14548:	ldr	r1, [pc, #1096]	; 14998 <set_opt@@Base+0x5b0>
   1454c:	ldr	r0, [r4]
   14550:	bl	14094 <fprintf@plt>
   14554:	ldr	r2, [pc, #1088]	; 1499c <set_opt@@Base+0x5b4>
   14558:	ldr	r1, [pc, #1088]	; 149a0 <set_opt@@Base+0x5b8>
   1455c:	ldr	r0, [r4]
   14560:	bl	14094 <fprintf@plt>
   14564:	mov	r0, #0
   14568:	bl	14070 <exit@plt>
   1456c:	mov	r3, #1
   14570:	str	r3, [r7, #164]	; 0xa4
   14574:	str	r3, [r7, #168]	; 0xa8
   14578:	mov	r0, r5
   1457c:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14580:	ldr	r3, [pc, #1032]	; 14990 <set_opt@@Base+0x5a8>
   14584:	ldr	r3, [r3]
   14588:	mov	r2, #112	; 0x70
   1458c:	mov	r1, #1
   14590:	ldr	r0, [pc, #1036]	; 149a4 <set_opt@@Base+0x5bc>
   14594:	bl	1401c <fwrite@plt>
   14598:	cmp	r9, #0
   1459c:	beq	145c4 <set_opt@@Base+0x1dc>
   145a0:	mov	r0, r9
   145a4:	bl	14318 <parse_bool_arg@@Base>
   145a8:	str	r0, [r7, #184]	; 0xb8
   145ac:	cmp	r0, #0
   145b0:	blt	145e4 <set_opt@@Base+0x1fc>
   145b4:	cmp	r6, #0
   145b8:	moveq	r5, #2
   145bc:	movne	r5, #0
   145c0:	b	14578 <set_opt@@Base+0x190>
   145c4:	ldr	r3, [pc, #964]	; 14990 <set_opt@@Base+0x5a8>
   145c8:	ldr	r3, [r3]
   145cc:	mov	r2, #44	; 0x2c
   145d0:	mov	r1, #1
   145d4:	ldr	r0, [pc, #972]	; 149a8 <set_opt@@Base+0x5c0>
   145d8:	bl	1401c <fwrite@plt>
   145dc:	mvn	r0, #0
   145e0:	bl	14070 <exit@plt>
   145e4:	mvn	r0, #0
   145e8:	bl	14070 <exit@plt>
   145ec:	ldr	r3, [pc, #924]	; 14990 <set_opt@@Base+0x5a8>
   145f0:	ldr	r3, [r3]
   145f4:	mov	r2, #41	; 0x29
   145f8:	mov	r1, #1
   145fc:	ldr	r0, [pc, #936]	; 149ac <set_opt@@Base+0x5c4>
   14600:	bl	1401c <fwrite@plt>
   14604:	mvn	r0, #0
   14608:	bl	14070 <exit@plt>
   1460c:	mvn	r0, #0
   14610:	bl	14070 <exit@plt>
   14614:	mov	r2, r8
   14618:	mov	r1, r4
   1461c:	ldr	r0, [pc, #908]	; 149b0 <set_opt@@Base+0x5c8>
   14620:	bl	143b0 <match_long_arg@@Base>
   14624:	subs	r5, r0, #0
   14628:	beq	14670 <set_opt@@Base+0x288>
   1462c:	cmp	r9, #0
   14630:	beq	14650 <set_opt@@Base+0x268>
   14634:	str	r9, [r7, #116]	; 0x74
   14638:	mov	r3, #1
   1463c:	str	r3, [r7, #112]	; 0x70
   14640:	cmp	r6, #0
   14644:	movne	r5, fp
   14648:	moveq	r5, #2
   1464c:	b	14578 <set_opt@@Base+0x190>
   14650:	ldr	r3, [pc, #824]	; 14990 <set_opt@@Base+0x5a8>
   14654:	ldr	r3, [r3]
   14658:	mov	r2, #35	; 0x23
   1465c:	mov	r1, #1
   14660:	ldr	r0, [pc, #844]	; 149b4 <set_opt@@Base+0x5cc>
   14664:	bl	1401c <fwrite@plt>
   14668:	mvn	r0, #0
   1466c:	bl	14070 <exit@plt>
   14670:	mov	r2, r8
   14674:	mov	r1, r4
   14678:	ldr	r0, [pc, #824]	; 149b8 <set_opt@@Base+0x5d0>
   1467c:	bl	143b0 <match_long_arg@@Base>
   14680:	subs	fp, r0, #0
   14684:	beq	146c0 <set_opt@@Base+0x2d8>
   14688:	cmp	r9, #0
   1468c:	beq	146a0 <set_opt@@Base+0x2b8>
   14690:	str	r9, [r7, #120]	; 0x78
   14694:	cmp	r6, #0
   14698:	moveq	r5, #2
   1469c:	b	14578 <set_opt@@Base+0x190>
   146a0:	ldr	r3, [pc, #744]	; 14990 <set_opt@@Base+0x5a8>
   146a4:	ldr	r3, [r3]
   146a8:	mov	r2, #37	; 0x25
   146ac:	mov	r1, #1
   146b0:	ldr	r0, [pc, #772]	; 149bc <set_opt@@Base+0x5d4>
   146b4:	bl	1401c <fwrite@plt>
   146b8:	mvn	r0, #0
   146bc:	bl	14070 <exit@plt>
   146c0:	mov	r2, r8
   146c4:	mov	r1, r4
   146c8:	ldr	r0, [pc, #752]	; 149c0 <set_opt@@Base+0x5d8>
   146cc:	bl	143b0 <match_long_arg@@Base>
   146d0:	subs	r5, r0, #0
   146d4:	beq	14714 <set_opt@@Base+0x32c>
   146d8:	cmp	r9, #0
   146dc:	beq	146f4 <set_opt@@Base+0x30c>
   146e0:	str	r9, [r7, #124]	; 0x7c
   146e4:	cmp	r6, #0
   146e8:	movne	r5, fp
   146ec:	moveq	r5, #2
   146f0:	b	14578 <set_opt@@Base+0x190>
   146f4:	ldr	r3, [pc, #660]	; 14990 <set_opt@@Base+0x5a8>
   146f8:	ldr	r3, [r3]
   146fc:	mov	r2, #35	; 0x23
   14700:	mov	r1, #1
   14704:	ldr	r0, [pc, #696]	; 149c4 <set_opt@@Base+0x5dc>
   14708:	bl	1401c <fwrite@plt>
   1470c:	mvn	r0, #0
   14710:	bl	14070 <exit@plt>
   14714:	mov	r2, r8
   14718:	mov	r1, r4
   1471c:	ldr	r0, [pc, #676]	; 149c8 <set_opt@@Base+0x5e0>
   14720:	bl	143b0 <match_long_arg@@Base>
   14724:	subs	fp, r0, #0
   14728:	beq	14764 <set_opt@@Base+0x37c>
   1472c:	cmp	r9, #0
   14730:	beq	14744 <set_opt@@Base+0x35c>
   14734:	str	r9, [r7, #196]	; 0xc4
   14738:	cmp	r6, #0
   1473c:	moveq	r5, #2
   14740:	b	14578 <set_opt@@Base+0x190>
   14744:	ldr	r3, [pc, #580]	; 14990 <set_opt@@Base+0x5a8>
   14748:	ldr	r3, [r3]
   1474c:	mov	r2, #41	; 0x29
   14750:	mov	r1, #1
   14754:	ldr	r0, [pc, #624]	; 149cc <set_opt@@Base+0x5e4>
   14758:	bl	1401c <fwrite@plt>
   1475c:	mvn	r0, #0
   14760:	bl	14070 <exit@plt>
   14764:	mov	r2, r8
   14768:	mov	r1, r4
   1476c:	ldr	r0, [pc, #604]	; 149d0 <set_opt@@Base+0x5e8>
   14770:	bl	143b0 <match_long_arg@@Base>
   14774:	subs	r5, r0, #0
   14778:	beq	147b8 <set_opt@@Base+0x3d0>
   1477c:	cmp	r9, #0
   14780:	beq	14798 <set_opt@@Base+0x3b0>
   14784:	str	r9, [r7, #192]	; 0xc0
   14788:	cmp	r6, #0
   1478c:	movne	r5, fp
   14790:	moveq	r5, #2
   14794:	b	14578 <set_opt@@Base+0x190>
   14798:	ldr	r3, [pc, #496]	; 14990 <set_opt@@Base+0x5a8>
   1479c:	ldr	r3, [r3]
   147a0:	mov	r2, #28
   147a4:	mov	r1, #1
   147a8:	ldr	r0, [pc, #548]	; 149d4 <set_opt@@Base+0x5ec>
   147ac:	bl	1401c <fwrite@plt>
   147b0:	mvn	r0, #0
   147b4:	bl	14070 <exit@plt>
   147b8:	cmp	sl, #100	; 0x64
   147bc:	beq	1493c <set_opt@@Base+0x554>
   147c0:	bhi	14828 <set_opt@@Base+0x440>
   147c4:	cmp	sl, #73	; 0x49
   147c8:	beq	148a4 <set_opt@@Base+0x4bc>
   147cc:	bls	14804 <set_opt@@Base+0x41c>
   147d0:	cmp	sl, #97	; 0x61
   147d4:	beq	14948 <set_opt@@Base+0x560>
   147d8:	cmp	sl, #99	; 0x63
   147dc:	moveq	r3, #1
   147e0:	streq	r3, [r7, #144]	; 0x90
   147e4:	beq	14578 <set_opt@@Base+0x190>
   147e8:	mov	r2, sl
   147ec:	ldr	r1, [pc, #484]	; 149d8 <set_opt@@Base+0x5f0>
   147f0:	ldr	r3, [pc, #408]	; 14990 <set_opt@@Base+0x5a8>
   147f4:	ldr	r0, [r3]
   147f8:	bl	14094 <fprintf@plt>
   147fc:	mvn	r0, #0
   14800:	bl	14070 <exit@plt>
   14804:	cmp	sl, #45	; 0x2d
   14808:	bne	147e8 <set_opt@@Base+0x400>
   1480c:	mov	r2, r4
   14810:	ldr	r1, [pc, #452]	; 149dc <set_opt@@Base+0x5f4>
   14814:	ldr	r3, [pc, #372]	; 14990 <set_opt@@Base+0x5a8>
   14818:	ldr	r0, [r3]
   1481c:	bl	14094 <fprintf@plt>
   14820:	mvn	r0, #0
   14824:	bl	14070 <exit@plt>
   14828:	cmp	sl, #114	; 0x72
   1482c:	beq	14930 <set_opt@@Base+0x548>
   14830:	bls	14850 <set_opt@@Base+0x468>
   14834:	cmp	sl, #118	; 0x76
   14838:	beq	14924 <set_opt@@Base+0x53c>
   1483c:	cmp	sl, #119	; 0x77
   14840:	moveq	r3, #1
   14844:	streq	r3, [r7, #156]	; 0x9c
   14848:	beq	14578 <set_opt@@Base+0x190>
   1484c:	b	147e8 <set_opt@@Base+0x400>
   14850:	cmp	sl, #111	; 0x6f
   14854:	bne	147e8 <set_opt@@Base+0x400>
   14858:	ldr	r3, [r7, #216]	; 0xd8
   1485c:	cmp	r3, #0
   14860:	bne	148fc <set_opt@@Base+0x514>
   14864:	ldrb	r3, [r4, #1]
   14868:	cmp	r3, #0
   1486c:	addne	r9, r4, #1
   14870:	movne	r5, #1
   14874:	bne	1491c <set_opt@@Base+0x534>
   14878:	cmp	r9, #0
   1487c:	movne	r5, #2
   14880:	bne	1491c <set_opt@@Base+0x534>
   14884:	ldr	r3, [pc, #260]	; 14990 <set_opt@@Base+0x5a8>
   14888:	ldr	r3, [r3]
   1488c:	mov	r2, #28
   14890:	mov	r1, #1
   14894:	ldr	r0, [pc, #324]	; 149e0 <set_opt@@Base+0x5f8>
   14898:	bl	1401c <fwrite@plt>
   1489c:	mvn	r0, #0
   148a0:	bl	14070 <exit@plt>
   148a4:	ldrb	r3, [r4, #1]
   148a8:	cmp	r3, #0
   148ac:	addne	r9, r4, #1
   148b0:	movne	r5, #1
   148b4:	bne	148e4 <set_opt@@Base+0x4fc>
   148b8:	cmp	r9, #0
   148bc:	movne	r5, #2
   148c0:	bne	148e4 <set_opt@@Base+0x4fc>
   148c4:	ldr	r3, [pc, #196]	; 14990 <set_opt@@Base+0x5a8>
   148c8:	ldr	r3, [r3]
   148cc:	mov	r2, #28
   148d0:	mov	r1, #1
   148d4:	ldr	r0, [pc, #264]	; 149e4 <set_opt@@Base+0x5fc>
   148d8:	bl	1401c <fwrite@plt>
   148dc:	mvn	r0, #0
   148e0:	bl	14070 <exit@plt>
   148e4:	ldr	r2, [r7, #200]	; 0xc8
   148e8:	ldr	r3, [r7, #208]	; 0xd0
   148ec:	add	r1, r3, #1
   148f0:	str	r1, [r7, #208]	; 0xd0
   148f4:	str	r9, [r2, r3, lsl #2]
   148f8:	b	14578 <set_opt@@Base+0x190>
   148fc:	ldr	r3, [pc, #140]	; 14990 <set_opt@@Base+0x5a8>
   14900:	ldr	r3, [r3]
   14904:	mov	r2, #37	; 0x25
   14908:	mov	r1, #1
   1490c:	ldr	r0, [pc, #212]	; 149e8 <set_opt@@Base+0x600>
   14910:	bl	1401c <fwrite@plt>
   14914:	mvn	r0, #0
   14918:	bl	14070 <exit@plt>
   1491c:	str	r9, [r7, #216]	; 0xd8
   14920:	b	14578 <set_opt@@Base+0x190>
   14924:	mov	r3, #1
   14928:	str	r3, [r7, #160]	; 0xa0
   1492c:	b	14578 <set_opt@@Base+0x190>
   14930:	mov	r3, #1
   14934:	str	r3, [r7, #172]	; 0xac
   14938:	b	14578 <set_opt@@Base+0x190>
   1493c:	mov	r3, #1
   14940:	str	r3, [r7, #112]	; 0x70
   14944:	b	14578 <set_opt@@Base+0x190>
   14948:	mov	r3, #1
   1494c:	str	r3, [r7, #152]	; 0x98
   14950:	str	r3, [r7, #156]	; 0x9c
   14954:	str	r3, [r7, #160]	; 0xa0
   14958:	str	r3, [r7, #144]	; 0x90
   1495c:	str	r3, [r7, #148]	; 0x94
   14960:	str	r3, [r7, #172]	; 0xac
   14964:	b	14578 <set_opt@@Base+0x190>
   14968:			; <UNDEFINED> instruction: 0x0003c2bc
   1496c:	andeq	ip, r3, r4, asr #5
   14970:	ldrdeq	ip, [r3], -r0
   14974:	ldrdeq	ip, [r3], -r8
   14978:	andeq	ip, r3, r0, ror #5
   1497c:	strdeq	ip, [r3], -r0
   14980:	andeq	ip, r3, r0, lsl #6
   14984:	andeq	ip, r3, r8, lsl #6
   14988:	andeq	ip, r3, r0, asr #7
   1498c:	andeq	r7, r6, ip, lsr #1
   14990:	andeq	r7, r6, r8, lsr #1
   14994:	andeq	fp, r3, r0, lsr r0
   14998:	andeq	ip, r3, r4, ror #16
   1499c:	andeq	fp, r3, r8, rrx
   149a0:	andeq	fp, r3, r0, ror r0
   149a4:	andeq	ip, r3, ip, lsl r3
   149a8:	muleq	r3, r0, r3
   149ac:	ldrdeq	ip, [r3], -r0
   149b0:	muleq	r3, ip, r6
   149b4:	strdeq	ip, [r3], -ip	; <UNPREDICTABLE>
   149b8:	andeq	ip, r3, r0, lsr #8
   149bc:	andeq	ip, r3, ip, lsr #8
   149c0:	andeq	ip, r3, r4, asr r4
   149c4:	andeq	ip, r3, r0, ror #8
   149c8:	andeq	ip, r3, r4, lsl #9
   149cc:	muleq	r3, r4, r4
   149d0:	andeq	ip, r3, r0, asr #9
   149d4:	andeq	ip, r3, r8, asr #9
   149d8:	andeq	ip, r3, r8, ror #10
   149dc:	andeq	ip, r3, r8, ror #9
   149e0:	andeq	ip, r3, r8, asr #10
   149e4:	andeq	ip, r3, r0, lsl #10
   149e8:	andeq	ip, r3, r0, lsr #10

000149ec <get_opt@@Base>:
   149ec:	push	{r4, r5, r6, lr}
   149f0:	mov	r5, r0
   149f4:	mov	r6, r2
   149f8:	ldrb	r3, [r1, #1]
   149fc:	cmp	r3, #45	; 0x2d
   14a00:	beq	14a48 <get_opt@@Base+0x5c>
   14a04:	add	r4, r1, #1
   14a08:	cmp	r3, #0
   14a0c:	beq	14a60 <get_opt@@Base+0x74>
   14a10:	ldrb	r3, [r4]
   14a14:	cmp	r3, #0
   14a18:	beq	14a88 <get_opt@@Base+0x9c>
   14a1c:	mov	r2, r6
   14a20:	mov	r1, r4
   14a24:	mov	r0, r5
   14a28:	bl	143e8 <set_opt@@Base>
   14a2c:	cmp	r0, #1
   14a30:	beq	14a90 <get_opt@@Base+0xa4>
   14a34:	cmp	r0, #2
   14a38:	beq	14a80 <get_opt@@Base+0x94>
   14a3c:	cmp	r0, #0
   14a40:	addeq	r4, r4, #1
   14a44:	b	14a10 <get_opt@@Base+0x24>
   14a48:	add	r1, r1, #1
   14a4c:	bl	143e8 <set_opt@@Base>
   14a50:	cmp	r0, #2
   14a54:	movne	r0, #0
   14a58:	moveq	r0, #1
   14a5c:	pop	{r4, r5, r6, pc}
   14a60:	ldr	r3, [pc, #48]	; 14a98 <get_opt@@Base+0xac>
   14a64:	ldr	r3, [r3]
   14a68:	mov	r2, #24
   14a6c:	mov	r1, #1
   14a70:	ldr	r0, [pc, #36]	; 14a9c <get_opt@@Base+0xb0>
   14a74:	bl	1401c <fwrite@plt>
   14a78:	mvn	r0, #0
   14a7c:	bl	14070 <exit@plt>
   14a80:	mov	r0, #1
   14a84:	pop	{r4, r5, r6, pc}
   14a88:	mov	r0, #0
   14a8c:	pop	{r4, r5, r6, pc}
   14a90:	mov	r0, #0
   14a94:	pop	{r4, r5, r6, pc}
   14a98:	andeq	r7, r6, r8, lsr #1
   14a9c:	andeq	ip, r3, r0, lsl #11

00014aa0 <parse_opts@@Base>:
   14aa0:	cmp	r0, #1
   14aa4:	bxle	lr
   14aa8:	push	{r4, r5, r6, r7, r8, lr}
   14aac:	mov	r5, r2
   14ab0:	mov	r6, r1
   14ab4:	mov	r7, r0
   14ab8:	mov	r4, #1
   14abc:	mov	r8, #0
   14ac0:	b	14af0 <parse_opts@@Base+0x50>
   14ac4:	add	r3, r4, #1
   14ac8:	cmp	r7, r3
   14acc:	addgt	r2, r6, r2
   14ad0:	ldrgt	r2, [r2, #4]
   14ad4:	movle	r2, r8
   14ad8:	mov	r0, r5
   14adc:	bl	149ec <get_opt@@Base>
   14ae0:	add	r4, r4, r0
   14ae4:	add	r4, r4, #1
   14ae8:	cmp	r7, r4
   14aec:	ble	14b20 <parse_opts@@Base+0x80>
   14af0:	lsl	r2, r4, #2
   14af4:	ldr	r1, [r6, r4, lsl #2]
   14af8:	ldrb	r3, [r1]
   14afc:	cmp	r3, #45	; 0x2d
   14b00:	beq	14ac4 <parse_opts@@Base+0x24>
   14b04:	ldr	r2, [r5, #204]	; 0xcc
   14b08:	ldr	r3, [r5, #212]	; 0xd4
   14b0c:	add	r1, r3, #1
   14b10:	str	r1, [r5, #212]	; 0xd4
   14b14:	ldr	r1, [r6, r4, lsl #2]
   14b18:	str	r1, [r2, r3, lsl #2]
   14b1c:	b	14ae4 <parse_opts@@Base+0x44>
   14b20:	pop	{r4, r5, r6, r7, r8, pc}

00014b24 <main@@Base>:
   14b24:	push	{r4, r5, r6, r7, r8, lr}
   14b28:	sub	sp, sp, #224	; 0xe0
   14b2c:	cmp	r0, #1
   14b30:	ble	14cb8 <main@@Base+0x194>
   14b34:	mov	r4, r0
   14b38:	mov	r6, r1
   14b3c:	mov	r0, sp
   14b40:	bl	14f6c <flatcc_init_options@@Base>
   14b44:	lsl	r5, r4, #2
   14b48:	mov	r0, r5
   14b4c:	bl	14040 <malloc@plt>
   14b50:	str	r0, [sp, #200]	; 0xc8
   14b54:	cmp	r0, #0
   14b58:	beq	14ccc <main@@Base+0x1a8>
   14b5c:	mov	r0, r5
   14b60:	bl	14040 <malloc@plt>
   14b64:	str	r0, [sp, #204]	; 0xcc
   14b68:	cmp	r0, #0
   14b6c:	beq	14cec <main@@Base+0x1c8>
   14b70:	mov	r2, sp
   14b74:	mov	r1, r6
   14b78:	mov	r0, r4
   14b7c:	bl	14aa0 <parse_opts@@Base>
   14b80:	ldr	r3, [sp, #156]	; 0x9c
   14b84:	cmp	r3, #0
   14b88:	beq	14d14 <main@@Base+0x1f0>
   14b8c:	ldr	r1, [sp, #144]	; 0x90
   14b90:	cmp	r1, #0
   14b94:	bne	14e84 <main@@Base+0x360>
   14b98:	mov	r2, #0
   14b9c:	str	r2, [sp, #148]	; 0x94
   14ba0:	ldr	r2, [sp, #212]	; 0xd4
   14ba4:	cmp	r2, #0
   14ba8:	beq	14d94 <main@@Base+0x270>
   14bac:	ldr	r0, [sp, #152]	; 0x98
   14bb0:	orrs	r0, r3, r0
   14bb4:	bne	14ea0 <main@@Base+0x37c>
   14bb8:	ldr	r0, [sp, #160]	; 0xa0
   14bbc:	cmp	r0, #0
   14bc0:	bne	14ea0 <main@@Base+0x37c>
   14bc4:	ldr	r0, [sp, #144]	; 0x90
   14bc8:	orrs	r1, r1, r0
   14bcc:	bne	14ea0 <main@@Base+0x37c>
   14bd0:	ldr	r1, [sp, #164]	; 0xa4
   14bd4:	cmp	r1, #0
   14bd8:	bne	14ea0 <main@@Base+0x37c>
   14bdc:	ldr	r0, [sp, #168]	; 0xa8
   14be0:	ldr	r1, [sp, #180]	; 0xb4
   14be4:	cmp	r1, #0
   14be8:	bne	14dec <main@@Base+0x2c8>
   14bec:	adds	r3, r3, #0
   14bf0:	movne	r3, #1
   14bf4:	cmp	r0, #0
   14bf8:	orreq	r3, r3, #1
   14bfc:	cmp	r3, #0
   14c00:	beq	14c0c <main@@Base+0xe8>
   14c04:	mov	r3, #1
   14c08:	str	r3, [sp, #152]	; 0x98
   14c0c:	ldr	r3, [sp, #120]	; 0x78
   14c10:	cmp	r3, #0
   14c14:	beq	14c24 <main@@Base+0x100>
   14c18:	ldr	r3, [sp, #116]	; 0x74
   14c1c:	cmp	r3, #0
   14c20:	beq	14e30 <main@@Base+0x30c>
   14c24:	ldr	r3, [sp, #108]	; 0x6c
   14c28:	cmp	r3, #0
   14c2c:	beq	14c3c <main@@Base+0x118>
   14c30:	ldr	r3, [sp, #124]	; 0x7c
   14c34:	cmp	r3, #0
   14c38:	bne	14e4c <main@@Base+0x328>
   14c3c:	ldr	r5, [sp, #204]	; 0xcc
   14c40:	cmp	r2, #0
   14c44:	ble	14d74 <main@@Base+0x250>
   14c48:	sub	r5, r5, #4
   14c4c:	mov	r6, #0
   14c50:	mov	r7, r6
   14c54:	mov	r8, #1
   14c58:	mov	r3, r7
   14c5c:	mov	r2, r7
   14c60:	ldr	r1, [r5, #4]
   14c64:	mov	r0, sp
   14c68:	bl	15024 <flatcc_create_context@@Base>
   14c6c:	subs	r4, r0, #0
   14c70:	beq	14e68 <main@@Base+0x344>
   14c74:	ldr	r1, [r5, #4]!
   14c78:	mov	r0, r4
   14c7c:	bl	152e4 <flatcc_parse_file@@Base>
   14c80:	cmp	r0, #0
   14c84:	bne	14ed4 <main@@Base+0x3b0>
   14c88:	mov	r0, r4
   14c8c:	bl	15168 <flatcc_generate_files@@Base>
   14c90:	cmp	r0, #0
   14c94:	bne	14ed4 <main@@Base+0x3b0>
   14c98:	mov	r0, r4
   14c9c:	bl	152b4 <flatcc_destroy_context@@Base>
   14ca0:	str	r8, [sp, #128]	; 0x80
   14ca4:	add	r6, r6, #1
   14ca8:	ldr	r3, [sp, #212]	; 0xd4
   14cac:	cmp	r3, r6
   14cb0:	bgt	14c58 <main@@Base+0x134>
   14cb4:	b	14d74 <main@@Base+0x250>
   14cb8:	ldr	r3, [pc, #572]	; 14efc <main@@Base+0x3d8>
   14cbc:	ldr	r0, [r3]
   14cc0:	bl	14280 <usage@@Base>
   14cc4:	mvn	r0, #0
   14cc8:	bl	14070 <exit@plt>
   14ccc:	ldr	r3, [pc, #552]	; 14efc <main@@Base+0x3d8>
   14cd0:	ldr	r3, [r3]
   14cd4:	mov	r2, #26
   14cd8:	mov	r1, #1
   14cdc:	ldr	r0, [pc, #540]	; 14f00 <main@@Base+0x3dc>
   14ce0:	bl	1401c <fwrite@plt>
   14ce4:	mvn	r0, #0
   14ce8:	bl	14070 <exit@plt>
   14cec:	ldr	r3, [pc, #520]	; 14efc <main@@Base+0x3d8>
   14cf0:	ldr	r3, [r3]
   14cf4:	mov	r2, #26
   14cf8:	mov	r1, #1
   14cfc:	ldr	r0, [pc, #508]	; 14f00 <main@@Base+0x3dc>
   14d00:	bl	1401c <fwrite@plt>
   14d04:	ldr	r0, [sp, #200]	; 0xc8
   14d08:	bl	13fd4 <free@plt>
   14d0c:	mvn	r0, #0
   14d10:	bl	14070 <exit@plt>
   14d14:	mov	r2, #0
   14d18:	str	r2, [sp, #148]	; 0x94
   14d1c:	ldr	r2, [sp, #212]	; 0xd4
   14d20:	cmp	r2, #0
   14d24:	bne	14dcc <main@@Base+0x2a8>
   14d28:	ldr	r3, [sp, #144]	; 0x90
   14d2c:	cmp	r3, #0
   14d30:	beq	14d94 <main@@Base+0x270>
   14d34:	ldr	r3, [sp, #180]	; 0xb4
   14d38:	cmp	r3, #0
   14d3c:	bne	14d94 <main@@Base+0x270>
   14d40:	mov	r3, #0
   14d44:	mov	r2, r3
   14d48:	mov	r1, r3
   14d4c:	mov	r0, sp
   14d50:	bl	15024 <flatcc_create_context@@Base>
   14d54:	subs	r4, r0, #0
   14d58:	beq	14db0 <main@@Base+0x28c>
   14d5c:	mov	r0, r4
   14d60:	bl	15168 <flatcc_generate_files@@Base>
   14d64:	cmp	r0, #0
   14d68:	bne	14ed4 <main@@Base+0x3b0>
   14d6c:	mov	r0, r4
   14d70:	bl	152b4 <flatcc_destroy_context@@Base>
   14d74:	mov	r4, #0
   14d78:	ldr	r0, [sp, #200]	; 0xc8
   14d7c:	bl	13fd4 <free@plt>
   14d80:	ldr	r0, [sp, #204]	; 0xcc
   14d84:	bl	13fd4 <free@plt>
   14d88:	mov	r0, r4
   14d8c:	add	sp, sp, #224	; 0xe0
   14d90:	pop	{r4, r5, r6, r7, r8, pc}
   14d94:	ldr	r3, [pc, #352]	; 14efc <main@@Base+0x3d8>
   14d98:	ldr	r3, [r3]
   14d9c:	mov	r2, #17
   14da0:	mov	r1, #1
   14da4:	ldr	r0, [pc, #344]	; 14f04 <main@@Base+0x3e0>
   14da8:	bl	1401c <fwrite@plt>
   14dac:	b	14edc <main@@Base+0x3b8>
   14db0:	ldr	r3, [pc, #324]	; 14efc <main@@Base+0x3d8>
   14db4:	ldr	r3, [r3]
   14db8:	mov	r2, #49	; 0x31
   14dbc:	mov	r1, #1
   14dc0:	ldr	r0, [pc, #320]	; 14f08 <main@@Base+0x3e4>
   14dc4:	bl	1401c <fwrite@plt>
   14dc8:	b	14edc <main@@Base+0x3b8>
   14dcc:	mov	r1, r3
   14dd0:	b	14bac <main@@Base+0x88>
   14dd4:	cmp	r3, #0
   14dd8:	bne	14c04 <main@@Base+0xe0>
   14ddc:	ldr	r3, [sp, #160]	; 0xa0
   14de0:	cmp	r3, #0
   14de4:	bne	14c04 <main@@Base+0xe0>
   14de8:	b	14c0c <main@@Base+0xe8>
   14dec:	cmp	r0, #0
   14df0:	bne	14eac <main@@Base+0x388>
   14df4:	b	14c0c <main@@Base+0xe8>
   14df8:	ldr	r3, [pc, #252]	; 14efc <main@@Base+0x3d8>
   14dfc:	ldr	r3, [r3]
   14e00:	mov	r2, #57	; 0x39
   14e04:	mov	r1, #1
   14e08:	ldr	r0, [pc, #252]	; 14f0c <main@@Base+0x3e8>
   14e0c:	bl	1401c <fwrite@plt>
   14e10:	b	14edc <main@@Base+0x3b8>
   14e14:	ldr	r3, [pc, #224]	; 14efc <main@@Base+0x3d8>
   14e18:	ldr	r3, [r3]
   14e1c:	mov	r2, #58	; 0x3a
   14e20:	mov	r1, #1
   14e24:	ldr	r0, [pc, #228]	; 14f10 <main@@Base+0x3ec>
   14e28:	bl	1401c <fwrite@plt>
   14e2c:	b	14edc <main@@Base+0x3b8>
   14e30:	ldr	r3, [pc, #196]	; 14efc <main@@Base+0x3d8>
   14e34:	ldr	r3, [r3]
   14e38:	mov	r2, #44	; 0x2c
   14e3c:	mov	r1, #1
   14e40:	ldr	r0, [pc, #204]	; 14f14 <main@@Base+0x3f0>
   14e44:	bl	1401c <fwrite@plt>
   14e48:	b	14edc <main@@Base+0x3b8>
   14e4c:	ldr	r3, [pc, #168]	; 14efc <main@@Base+0x3d8>
   14e50:	ldr	r3, [r3]
   14e54:	mov	r2, #38	; 0x26
   14e58:	mov	r1, #1
   14e5c:	ldr	r0, [pc, #180]	; 14f18 <main@@Base+0x3f4>
   14e60:	bl	1401c <fwrite@plt>
   14e64:	b	14edc <main@@Base+0x3b8>
   14e68:	ldr	r3, [pc, #140]	; 14efc <main@@Base+0x3d8>
   14e6c:	ldr	r3, [r3]
   14e70:	mov	r2, #49	; 0x31
   14e74:	mov	r1, #1
   14e78:	ldr	r0, [pc, #136]	; 14f08 <main@@Base+0x3e4>
   14e7c:	bl	1401c <fwrite@plt>
   14e80:	b	14edc <main@@Base+0x3b8>
   14e84:	mov	r2, #1
   14e88:	str	r2, [sp, #148]	; 0x94
   14e8c:	ldr	r2, [sp, #212]	; 0xd4
   14e90:	cmp	r2, #0
   14e94:	movne	r1, #1
   14e98:	bne	14bac <main@@Base+0x88>
   14e9c:	b	14d34 <main@@Base+0x210>
   14ea0:	ldr	r1, [sp, #180]	; 0xb4
   14ea4:	cmp	r1, #0
   14ea8:	beq	14dd4 <main@@Base+0x2b0>
   14eac:	ldr	r3, [sp, #108]	; 0x6c
   14eb0:	cmp	r3, #0
   14eb4:	bne	14df8 <main@@Base+0x2d4>
   14eb8:	ldr	r3, [sp, #124]	; 0x7c
   14ebc:	cmp	r3, #0
   14ec0:	bne	14e14 <main@@Base+0x2f0>
   14ec4:	ldr	r3, [sp, #120]	; 0x78
   14ec8:	cmp	r3, #0
   14ecc:	bne	14c18 <main@@Base+0xf4>
   14ed0:	b	14c3c <main@@Base+0x118>
   14ed4:	mov	r0, r4
   14ed8:	bl	152b4 <flatcc_destroy_context@@Base>
   14edc:	ldr	r3, [pc, #24]	; 14efc <main@@Base+0x3d8>
   14ee0:	ldr	r3, [r3]
   14ee4:	mov	r2, #14
   14ee8:	mov	r1, #1
   14eec:	ldr	r0, [pc, #40]	; 14f1c <main@@Base+0x3f8>
   14ef0:	bl	1401c <fwrite@plt>
   14ef4:	mvn	r4, #0
   14ef8:	b	14d78 <main@@Base+0x254>
   14efc:	andeq	r7, r6, r8, lsr #1
   14f00:	muleq	r3, ip, r5
   14f04:			; <UNDEFINED> instruction: 0x0003c5b8
   14f08:	andeq	ip, r3, ip, asr #11
   14f0c:	andeq	ip, r3, r0, lsl #12
   14f10:	andeq	ip, r3, ip, lsr r6
   14f14:	andeq	ip, r3, r8, ror r6
   14f18:	andeq	ip, r3, r8, lsr #13
   14f1c:	ldrdeq	ip, [r3], -r0
   14f20:	push	{r4, lr}
   14f24:	mov	r2, #1
   14f28:	add	r0, r0, #172	; 0xac
   14f2c:	bl	27e54 <ptr_set_insert_item@@Base>
   14f30:	pop	{r4, pc}
   14f34:	cmp	r0, #0
   14f38:	beq	14f40 <main@@Base+0x41c>
   14f3c:	bx	lr
   14f40:	push	{r4, lr}
   14f44:	ldr	r3, [pc, #24]	; 14f64 <main@@Base+0x440>
   14f48:	ldr	r3, [r3]
   14f4c:	mov	r2, #34	; 0x22
   14f50:	mov	r1, #1
   14f54:	ldr	r0, [pc, #12]	; 14f68 <main@@Base+0x444>
   14f58:	bl	1401c <fwrite@plt>
   14f5c:	mov	r0, #1
   14f60:	bl	14070 <exit@plt>
   14f64:	andeq	r7, r6, r8, lsr #1
   14f68:	strdeq	ip, [r3], -ip	; <UNPREDICTABLE>

00014f6c <flatcc_init_options@@Base>:
   14f6c:	push	{r4, lr}
   14f70:	mov	r4, r0
   14f74:	mov	r2, #224	; 0xe0
   14f78:	mov	r1, #0
   14f7c:	bl	140ac <memset@plt>
   14f80:	mov	r3, #65536	; 0x10000
   14f84:	str	r3, [r4]
   14f88:	mov	r3, #100	; 0x64
   14f8c:	str	r3, [r4, #4]
   14f90:	str	r3, [r4, #8]
   14f94:	mov	r3, #1
   14f98:	str	r3, [r4, #16]
   14f9c:	str	r3, [r4, #20]
   14fa0:	str	r3, [r4, #24]
   14fa4:	str	r3, [r4, #28]
   14fa8:	str	r3, [r4, #32]
   14fac:	str	r3, [r4, #36]	; 0x24
   14fb0:	str	r3, [r4, #40]	; 0x28
   14fb4:	str	r3, [r4, #44]	; 0x2c
   14fb8:	str	r3, [r4, #48]	; 0x30
   14fbc:	str	r3, [r4, #52]	; 0x34
   14fc0:	mov	r2, #4
   14fc4:	str	r2, [r4, #64]	; 0x40
   14fc8:	mov	r1, #2
   14fcc:	str	r1, [r4, #68]	; 0x44
   14fd0:	str	r3, [r4, #72]	; 0x48
   14fd4:	str	r3, [r4, #76]	; 0x4c
   14fd8:	str	r3, [r4, #84]	; 0x54
   14fdc:	ldr	r0, [pc, #48]	; 15014 <flatcc_init_options@@Base+0xa8>
   14fe0:	mov	r1, #0
   14fe4:	strd	r0, [r4, #88]	; 0x58
   14fe8:	ldr	r1, [pc, #40]	; 15018 <flatcc_init_options@@Base+0xac>
   14fec:	str	r1, [r4, #96]	; 0x60
   14ff0:	ldr	r1, [pc, #36]	; 1501c <flatcc_init_options@@Base+0xb0>
   14ff4:	str	r1, [r4, #100]	; 0x64
   14ff8:	ldr	r1, [pc, #32]	; 15020 <flatcc_init_options@@Base+0xb4>
   14ffc:	str	r1, [r4, #104]	; 0x68
   15000:	str	r3, [r4, #136]	; 0x88
   15004:	str	r3, [r4, #140]	; 0x8c
   15008:	str	r2, [r4, #176]	; 0xb0
   1500c:	str	r3, [r4, #184]	; 0xb8
   15010:	pop	{r4, pc}
   15014:	strdeq	pc, [r0], -lr
   15018:	andeq	ip, r3, r0, lsr #14
   1501c:	andeq	ip, r3, r8, lsr #14
   15020:	andeq	ip, r3, r0, lsr r7

00015024 <flatcc_create_context@@Base>:
   15024:	push	{r4, r5, r6, r7, r8, lr}
   15028:	sub	sp, sp, #8
   1502c:	mov	r5, r0
   15030:	mov	r6, r1
   15034:	mov	r7, r2
   15038:	mov	r8, r3
   1503c:	mov	r0, #560	; 0x230
   15040:	bl	14040 <malloc@plt>
   15044:	subs	r4, r0, #0
   15048:	beq	15090 <flatcc_create_context@@Base+0x6c>
   1504c:	mov	r3, #0
   15050:	str	r3, [sp, #4]
   15054:	str	r8, [sp]
   15058:	mov	r3, r7
   1505c:	mov	r2, r6
   15060:	mov	r1, r5
   15064:	mov	r0, r4
   15068:	bl	2baec <__flatcc_fb_init_parser@@Base>
   1506c:	cmp	r0, #0
   15070:	moveq	r0, r4
   15074:	bne	15080 <flatcc_create_context@@Base+0x5c>
   15078:	add	sp, sp, #8
   1507c:	pop	{r4, r5, r6, r7, r8, pc}
   15080:	mov	r0, r4
   15084:	bl	13fd4 <free@plt>
   15088:	mov	r0, #0
   1508c:	b	15078 <flatcc_create_context@@Base+0x54>
   15090:	mov	r0, #0
   15094:	b	15078 <flatcc_create_context@@Base+0x54>

00015098 <flatcc_parse_buffer@@Base>:
   15098:	push	{r4, r5, r6, lr}
   1509c:	mov	r4, r0
   150a0:	mov	r3, #1
   150a4:	str	r3, [r0, #140]	; 0x8c
   150a8:	ldr	r3, [r0, #128]	; 0x80
   150ac:	cmp	r3, #0
   150b0:	cmpne	r3, r2
   150b4:	bcc	15100 <flatcc_parse_buffer@@Base+0x68>
   150b8:	mov	r6, r1
   150bc:	mov	r5, r2
   150c0:	mov	r2, #1
   150c4:	add	r1, r0, #352	; 0x160
   150c8:	add	r0, r0, #524	; 0x20c
   150cc:	bl	27e54 <ptr_set_insert_item@@Base>
   150d0:	mov	r3, #0
   150d4:	mov	r2, r5
   150d8:	mov	r1, r6
   150dc:	mov	r0, r4
   150e0:	bl	2be1c <__flatcc_fb_parse@@Base>
   150e4:	cmp	r0, #0
   150e8:	bne	15110 <flatcc_parse_buffer@@Base+0x78>
   150ec:	mov	r0, r4
   150f0:	bl	30804 <__flatcc_fb_build_schema@@Base>
   150f4:	adds	r0, r0, #0
   150f8:	mvnne	r0, #0
   150fc:	pop	{r4, r5, r6, pc}
   15100:	ldr	r1, [pc, #16]	; 15118 <flatcc_parse_buffer@@Base+0x80>
   15104:	bl	2a354 <__flatcc_fb_print_error@@Base>
   15108:	mvn	r0, #0
   1510c:	pop	{r4, r5, r6, pc}
   15110:	mvn	r0, #0
   15114:	pop	{r4, r5, r6, pc}
   15118:	andeq	ip, r3, r8, lsr r7

0001511c <flatcc_generate_binary_schema_to_buffer@@Base>:
   1511c:	push	{lr}		; (str lr, [sp, #-4]!)
   15120:	sub	sp, sp, #12
   15124:	add	r3, sp, #8
   15128:	str	r2, [r3, #-4]!
   1512c:	mov	r2, r1
   15130:	add	r1, r0, #352	; 0x160
   15134:	add	r0, r0, #128	; 0x80
   15138:	bl	2702c <__flatcc_fb_codegen_bfbs_to_buffer@@Base>
   1513c:	cmp	r0, #0
   15140:	ldrne	r0, [sp, #4]
   15144:	mvneq	r0, #0
   15148:	add	sp, sp, #12
   1514c:	pop	{pc}		; (ldr pc, [sp], #4)

00015150 <flatcc_generate_binary_schema@@Base>:
   15150:	push	{r4, lr}
   15154:	mov	r2, r1
   15158:	add	r1, r0, #352	; 0x160
   1515c:	add	r0, r0, #128	; 0x80
   15160:	bl	2709c <__flatcc_fb_codegen_bfbs_alloc_buffer@@Base>
   15164:	pop	{r4, pc}

00015168 <flatcc_generate_files@@Base>:
   15168:	push	{r4, r5, r6, r7, lr}
   1516c:	sub	sp, sp, #236	; 0xec
   15170:	subs	r5, r0, #0
   15174:	beq	15294 <flatcc_generate_files@@Base+0x12c>
   15178:	ldr	r3, [r5, #108]	; 0x6c
   1517c:	cmp	r3, #0
   15180:	bne	1529c <flatcc_generate_files@@Base+0x134>
   15184:	mov	r4, r5
   15188:	mov	r2, #0
   1518c:	b	15194 <flatcc_generate_files@@Base+0x2c>
   15190:	mov	r4, r3
   15194:	str	r2, [r4, #4]
   15198:	ldr	r3, [r4]
   1519c:	mov	r2, r4
   151a0:	cmp	r3, #0
   151a4:	bne	15190 <flatcc_generate_files@@Base+0x28>
   151a8:	ldr	r3, [r5, #308]	; 0x134
   151ac:	cmp	r3, #0
   151b0:	beq	151c8 <flatcc_generate_files@@Base+0x60>
   151b4:	add	r1, r5, #352	; 0x160
   151b8:	add	r0, r5, #128	; 0x80
   151bc:	bl	27104 <__flatcc_fb_codegen_bfbs_to_file@@Base>
   151c0:	cmp	r0, #0
   151c4:	bne	152a4 <flatcc_generate_files@@Base+0x13c>
   151c8:	add	r1, r5, #128	; 0x80
   151cc:	mov	r0, sp
   151d0:	bl	15aac <__flatcc_fb_init_output_c@@Base>
   151d4:	subs	r7, r0, #0
   151d8:	bne	152ac <flatcc_generate_files@@Base+0x144>
   151dc:	ldr	r3, [r5, #256]	; 0x100
   151e0:	cmp	r3, #0
   151e4:	beq	15210 <flatcc_generate_files@@Base+0xa8>
   151e8:	ldr	r6, [r5, #120]	; 0x78
   151ec:	cmp	r6, #0
   151f0:	beq	15274 <flatcc_generate_files@@Base+0x10c>
   151f4:	ldr	r3, [r5, #300]	; 0x12c
   151f8:	cmp	r3, #0
   151fc:	beq	15224 <flatcc_generate_files@@Base+0xbc>
   15200:	cmp	r4, #0
   15204:	moveq	r6, r7
   15208:	bne	15264 <flatcc_generate_files@@Base+0xfc>
   1520c:	b	15274 <flatcc_generate_files@@Base+0x10c>
   15210:	mov	r0, sp
   15214:	bl	15fa4 <__flatcc_fb_codegen_common_c@@Base>
   15218:	subs	r6, r0, #0
   1521c:	bne	15274 <flatcc_generate_files@@Base+0x10c>
   15220:	b	151e8 <flatcc_generate_files@@Base+0x80>
   15224:	add	r1, r5, #352	; 0x160
   15228:	mov	r0, sp
   1522c:	bl	16060 <__flatcc_fb_codegen_c@@Base>
   15230:	mov	r6, r0
   15234:	b	15274 <flatcc_generate_files@@Base+0x10c>
   15238:	add	r1, r4, #352	; 0x160
   1523c:	mov	r0, sp
   15240:	bl	16060 <__flatcc_fb_codegen_c@@Base>
   15244:	ldr	r4, [r4, #4]
   15248:	mov	r6, r0
   1524c:	clz	r0, r0
   15250:	lsr	r0, r0, #5
   15254:	cmp	r4, #0
   15258:	moveq	r0, #0
   1525c:	cmp	r0, #0
   15260:	beq	15288 <flatcc_generate_files@@Base+0x120>
   15264:	ldr	r3, [r4, #108]	; 0x6c
   15268:	cmp	r3, #0
   1526c:	beq	15238 <flatcc_generate_files@@Base+0xd0>
   15270:	mov	r6, #1
   15274:	mov	r0, sp
   15278:	bl	15a78 <__flatcc_fb_end_output_c@@Base>
   1527c:	mov	r0, r6
   15280:	add	sp, sp, #236	; 0xec
   15284:	pop	{r4, r5, r6, r7, pc}
   15288:	adds	r6, r6, #0
   1528c:	movne	r6, #1
   15290:	b	15274 <flatcc_generate_files@@Base+0x10c>
   15294:	mvn	r6, #0
   15298:	b	1527c <flatcc_generate_files@@Base+0x114>
   1529c:	mvn	r6, #0
   152a0:	b	1527c <flatcc_generate_files@@Base+0x114>
   152a4:	mvn	r6, #0
   152a8:	b	1527c <flatcc_generate_files@@Base+0x114>
   152ac:	mvn	r6, #0
   152b0:	b	1527c <flatcc_generate_files@@Base+0x114>

000152b4 <flatcc_destroy_context@@Base>:
   152b4:	push	{r4, r5, r6, lr}
   152b8:	subs	r4, r0, #0
   152bc:	popeq	{r4, r5, r6, pc}
   152c0:	ldr	r5, [r4]
   152c4:	mov	r0, r4
   152c8:	bl	2ecb0 <__flatcc_fb_clear_parser@@Base>
   152cc:	mov	r0, r4
   152d0:	bl	13fd4 <free@plt>
   152d4:	mov	r4, r5
   152d8:	cmp	r5, #0
   152dc:	bne	152c0 <flatcc_destroy_context@@Base+0xc>
   152e0:	pop	{r4, r5, r6, pc}

000152e4 <flatcc_parse_file@@Base>:
   152e4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   152e8:	sub	sp, sp, #28
   152ec:	mov	r4, r0
   152f0:	mov	r7, r1
   152f4:	mov	r0, r1
   152f8:	bl	1407c <strlen@plt>
   152fc:	mov	r8, r0
   15300:	add	r3, r4, #352	; 0x160
   15304:	str	r3, [sp, #8]
   15308:	ldr	r0, [r4, #412]	; 0x19c
   1530c:	mov	r2, #1
   15310:	mov	r1, r3
   15314:	add	r0, r0, #32
   15318:	bl	29a38 <fb_schema_table_insert_item@@Base>
   1531c:	cmp	r0, #0
   15320:	movne	r9, #0
   15324:	beq	15334 <flatcc_parse_file@@Base+0x50>
   15328:	mov	r0, r9
   1532c:	add	sp, sp, #28
   15330:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15334:	ldr	r3, [r4, #552]	; 0x228
   15338:	str	r3, [sp, #12]
   1533c:	cmp	r3, #0
   15340:	beq	15360 <flatcc_parse_file@@Base+0x7c>
   15344:	ldr	r3, [r4, #336]	; 0x150
   15348:	cmp	r3, #0
   1534c:	ble	15848 <flatcc_parse_file@@Base+0x564>
   15350:	mov	r5, #0
   15354:	mov	fp, #1
   15358:	ldr	sl, [pc, #1420]	; 158ec <flatcc_parse_file@@Base+0x608>
   1535c:	b	15428 <flatcc_parse_file@@Base+0x144>
   15360:	add	r2, sp, #20
   15364:	ldr	r1, [r4, #128]	; 0x80
   15368:	mov	r0, r7
   1536c:	bl	29fa0 <__flatcc_fb_read_file@@Base>
   15370:	subs	r9, r0, #0
   15374:	beq	153a8 <flatcc_parse_file@@Base+0xc4>
   15378:	mov	r0, r7
   1537c:	bl	29afc <__flatcc_fb_copy_path@@Base>
   15380:	subs	r6, r0, #0
   15384:	bne	15478 <flatcc_parse_file@@Base+0x194>
   15388:	ldr	r3, [pc, #1376]	; 158f0 <flatcc_parse_file@@Base+0x60c>
   1538c:	ldr	r3, [r3]
   15390:	mov	r2, #34	; 0x22
   15394:	mov	r1, #1
   15398:	ldr	r0, [pc, #1364]	; 158f4 <flatcc_parse_file@@Base+0x610>
   1539c:	bl	1401c <fwrite@plt>
   153a0:	mov	r0, #1
   153a4:	bl	14070 <exit@plt>
   153a8:	ldr	r2, [r4, #128]	; 0x80
   153ac:	ldr	r3, [r4, #412]	; 0x19c
   153b0:	ldr	r3, [r3, #56]	; 0x38
   153b4:	ldr	r1, [sp, #20]
   153b8:	add	r3, r3, r1
   153bc:	cmp	r2, #0
   153c0:	cmpne	r3, r2
   153c4:	bls	15344 <flatcc_parse_file@@Base+0x60>
   153c8:	ldr	r1, [pc, #1320]	; 158f8 <flatcc_parse_file@@Base+0x614>
   153cc:	mov	r0, r4
   153d0:	bl	2a354 <__flatcc_fb_print_error@@Base>
   153d4:	mvn	r9, #0
   153d8:	b	15328 <flatcc_parse_file@@Base+0x44>
   153dc:	ldr	r3, [pc, #1292]	; 158f0 <flatcc_parse_file@@Base+0x60c>
   153e0:	ldr	r3, [r3]
   153e4:	mov	r2, #34	; 0x22
   153e8:	mov	r1, #1
   153ec:	ldr	r0, [pc, #1280]	; 158f4 <flatcc_parse_file@@Base+0x610>
   153f0:	bl	1401c <fwrite@plt>
   153f4:	mov	r0, #1
   153f8:	bl	14070 <exit@plt>
   153fc:	mov	r0, r6
   15400:	bl	13fd4 <free@plt>
   15404:	ldr	r3, [r4, #128]	; 0x80
   15408:	ldr	r2, [sp, #20]
   1540c:	cmp	r3, #0
   15410:	cmpne	r3, r2
   15414:	bcc	154c0 <flatcc_parse_file@@Base+0x1dc>
   15418:	add	r5, r5, #1
   1541c:	ldr	r3, [r4, #336]	; 0x150
   15420:	cmp	r5, r3
   15424:	bge	15848 <flatcc_parse_file@@Base+0x564>
   15428:	ldr	r3, [r4, #328]	; 0x148
   1542c:	ldr	r6, [r3, r5, lsl #2]
   15430:	mov	r0, r6
   15434:	bl	1407c <strlen@plt>
   15438:	str	fp, [sp, #4]
   1543c:	str	sl, [sp]
   15440:	mov	r3, r8
   15444:	mov	r2, r7
   15448:	mov	r1, r0
   1544c:	mov	r0, r6
   15450:	bl	29b88 <__flatcc_fb_create_join_path_n@@Base>
   15454:	subs	r6, r0, #0
   15458:	beq	153dc <flatcc_parse_file@@Base+0xf8>
   1545c:	add	r2, sp, #20
   15460:	ldr	r1, [r4, #128]	; 0x80
   15464:	mov	r0, r6
   15468:	bl	29fa0 <__flatcc_fb_read_file@@Base>
   1546c:	cmp	r0, #0
   15470:	beq	153fc <flatcc_parse_file@@Base+0x118>
   15474:	mov	r9, r0
   15478:	ldr	r1, [r4, #412]	; 0x19c
   1547c:	ldr	r2, [sp, #20]
   15480:	ldr	r3, [r1, #56]	; 0x38
   15484:	add	r3, r3, r2
   15488:	str	r3, [r1, #56]	; 0x38
   1548c:	str	r6, [r4, #548]	; 0x224
   15490:	mov	r3, #1
   15494:	mov	r1, r9
   15498:	mov	r0, r4
   1549c:	bl	2be1c <__flatcc_fb_parse@@Base>
   154a0:	subs	r9, r0, #0
   154a4:	bne	158e4 <flatcc_parse_file@@Base+0x600>
   154a8:	ldr	r6, [r4, #352]	; 0x160
   154ac:	cmp	r6, #0
   154b0:	beq	15668 <flatcc_parse_file@@Base+0x384>
   154b4:	add	sl, r4, #128	; 0x80
   154b8:	mov	fp, #560	; 0x230
   154bc:	b	15588 <flatcc_parse_file@@Base+0x2a4>
   154c0:	ldr	r1, [pc, #1072]	; 158f8 <flatcc_parse_file@@Base+0x614>
   154c4:	mov	r0, r4
   154c8:	bl	2a354 <__flatcc_fb_print_error@@Base>
   154cc:	mvn	r9, #0
   154d0:	b	15328 <flatcc_parse_file@@Base+0x44>
   154d4:	ldr	r3, [pc, #1044]	; 158f0 <flatcc_parse_file@@Base+0x60c>
   154d8:	ldr	r3, [r3]
   154dc:	mov	r2, #34	; 0x22
   154e0:	mov	r1, #1
   154e4:	ldr	r0, [pc, #1032]	; 158f4 <flatcc_parse_file@@Base+0x610>
   154e8:	bl	1401c <fwrite@plt>
   154ec:	mov	r0, #1
   154f0:	bl	14070 <exit@plt>
   154f4:	ldr	r1, [pc, #1020]	; 158f8 <flatcc_parse_file@@Base+0x614>
   154f8:	mov	r0, r4
   154fc:	bl	2a354 <__flatcc_fb_print_error@@Base>
   15500:	mvn	r9, #0
   15504:	b	15328 <flatcc_parse_file@@Base+0x44>
   15508:	ldr	r3, [pc, #992]	; 158f0 <flatcc_parse_file@@Base+0x60c>
   1550c:	ldr	r3, [r3]
   15510:	mov	r2, #34	; 0x22
   15514:	mov	r1, #1
   15518:	ldr	r0, [pc, #980]	; 158f4 <flatcc_parse_file@@Base+0x610>
   1551c:	bl	1401c <fwrite@plt>
   15520:	mov	r0, #1
   15524:	bl	14070 <exit@plt>
   15528:	ldr	r1, [pc, #972]	; 158fc <flatcc_parse_file@@Base+0x618>
   1552c:	mov	r0, r4
   15530:	bl	2a354 <__flatcc_fb_print_error@@Base>
   15534:	b	15550 <flatcc_parse_file@@Base+0x26c>
   15538:	ldr	r1, [pc, #960]	; 15900 <flatcc_parse_file@@Base+0x61c>
   1553c:	mov	r0, r4
   15540:	bl	2a354 <__flatcc_fb_print_error@@Base>
   15544:	b	15550 <flatcc_parse_file@@Base+0x26c>
   15548:	mov	r0, r7
   1554c:	bl	13fd4 <free@plt>
   15550:	mov	r0, r8
   15554:	bl	13fd4 <free@plt>
   15558:	b	15328 <flatcc_parse_file@@Base+0x44>
   1555c:	ldr	r2, [sp, #8]
   15560:	ldr	r1, [pc, #924]	; 15904 <flatcc_parse_file@@Base+0x620>
   15564:	add	r0, r0, #172	; 0xac
   15568:	bl	27eac <ptr_set_visit@@Base>
   1556c:	mov	r0, r7
   15570:	bl	152b4 <flatcc_destroy_context@@Base>
   15574:	mov	r0, r8
   15578:	bl	13fd4 <free@plt>
   1557c:	ldr	r6, [r6]
   15580:	cmp	r6, #0
   15584:	beq	15668 <flatcc_parse_file@@Base+0x384>
   15588:	ldr	r1, [r6, #12]
   1558c:	ldr	r0, [r6, #8]
   15590:	bl	29aac <__flatcc_fb_copy_path_n@@Base>
   15594:	subs	r8, r0, #0
   15598:	beq	15508 <flatcc_parse_file@@Base+0x224>
   1559c:	ldr	r5, [r4, #412]	; 0x19c
   155a0:	ldr	r3, [r4, #132]	; 0x84
   155a4:	ldr	r2, [r5, #52]	; 0x34
   155a8:	cmp	r2, r3
   155ac:	cmpge	r3, #0
   155b0:	bgt	15528 <flatcc_parse_file@@Base+0x244>
   155b4:	ldr	r3, [r4, #136]	; 0x88
   155b8:	ldr	r2, [r5, #48]	; 0x30
   155bc:	cmp	r2, r3
   155c0:	cmpge	r3, #0
   155c4:	bgt	15538 <flatcc_parse_file@@Base+0x254>
   155c8:	mov	r0, fp
   155cc:	bl	14040 <malloc@plt>
   155d0:	subs	r7, r0, #0
   155d4:	beq	15550 <flatcc_parse_file@@Base+0x26c>
   155d8:	str	r5, [sp, #4]
   155dc:	ldr	r3, [r4, #12]
   155e0:	str	r3, [sp]
   155e4:	ldr	r3, [r4, #8]
   155e8:	mov	r2, r8
   155ec:	mov	r1, sl
   155f0:	mov	r0, r7
   155f4:	bl	2baec <__flatcc_fb_init_parser@@Base>
   155f8:	cmp	r0, #0
   155fc:	bne	15548 <flatcc_parse_file@@Base+0x264>
   15600:	add	r1, r7, #352	; 0x160
   15604:	add	r0, r5, #32
   15608:	bl	29a6c <fb_schema_table_find_item@@Base>
   1560c:	cmp	r0, #0
   15610:	bne	1555c <flatcc_parse_file@@Base+0x278>
   15614:	ldr	r3, [r4]
   15618:	str	r3, [r7]
   1561c:	str	r7, [r4]
   15620:	ldr	r3, [r4, #548]	; 0x224
   15624:	str	r3, [r7, #552]	; 0x228
   15628:	ldr	r3, [r5, #52]	; 0x34
   1562c:	add	r3, r3, #1
   15630:	str	r3, [r5, #52]	; 0x34
   15634:	ldr	r3, [r5, #48]	; 0x30
   15638:	add	r3, r3, #1
   1563c:	str	r3, [r5, #48]	; 0x30
   15640:	mov	r1, r8
   15644:	mov	r0, r7
   15648:	bl	152e4 <flatcc_parse_file@@Base>
   1564c:	cmp	r0, #0
   15650:	bne	15550 <flatcc_parse_file@@Base+0x26c>
   15654:	ldr	r2, [sp, #8]
   15658:	ldr	r1, [pc, #676]	; 15904 <flatcc_parse_file@@Base+0x620>
   1565c:	add	r0, r7, #524	; 0x20c
   15660:	bl	27eac <ptr_set_visit@@Base>
   15664:	b	15574 <flatcc_parse_file@@Base+0x290>
   15668:	mov	r2, #1
   1566c:	ldr	r1, [sp, #8]
   15670:	add	r0, r4, #524	; 0x20c
   15674:	bl	27e54 <ptr_set_insert_item@@Base>
   15678:	mov	r0, r4
   1567c:	bl	30804 <__flatcc_fb_build_schema@@Base>
   15680:	subs	r5, r0, #0
   15684:	bne	15328 <flatcc_parse_file@@Base+0x44>
   15688:	ldr	r1, [r4, #240]	; 0xf0
   1568c:	ldr	r2, [sp, #12]
   15690:	adds	r3, r1, #0
   15694:	movne	r3, #1
   15698:	cmp	r2, #0
   1569c:	movne	r3, #0
   156a0:	cmp	r3, #0
   156a4:	moveq	r9, r5
   156a8:	beq	15328 <flatcc_parse_file@@Base+0x44>
   156ac:	ldr	r3, [r4, #552]	; 0x228
   156b0:	cmp	r3, #0
   156b4:	bne	15780 <flatcc_parse_file@@Base+0x49c>
   156b8:	ldr	r6, [r4, #344]	; 0x158
   156bc:	ldr	r3, [pc, #552]	; 158ec <flatcc_parse_file@@Base+0x608>
   156c0:	cmp	r6, #0
   156c4:	moveq	r6, r3
   156c8:	ldr	r3, [r4, #512]	; 0x200
   156cc:	ldr	r9, [r4, #248]	; 0xf8
   156d0:	ldr	r1, [r4, #244]	; 0xf4
   156d4:	cmp	r1, #0
   156d8:	ldrne	r2, [pc, #524]	; 158ec <flatcc_parse_file@@Base+0x608>
   156dc:	movne	r0, r2
   156e0:	moveq	r0, r6
   156e4:	moveq	r1, r3
   156e8:	ldreq	r2, [pc, #536]	; 15908 <flatcc_parse_file@@Base+0x624>
   156ec:	cmp	r9, #0
   156f0:	beq	15794 <flatcc_parse_file@@Base+0x4b0>
   156f4:	ldr	r6, [pc, #496]	; 158ec <flatcc_parse_file@@Base+0x608>
   156f8:	mov	r7, r6
   156fc:	mov	r3, #1
   15700:	bl	29cc8 <__flatcc_fb_create_join_path@@Base>
   15704:	mov	r8, r0
   15708:	bl	14f34 <main@@Base+0x410>
   1570c:	mov	r3, #1
   15710:	mov	r2, r7
   15714:	mov	r1, r9
   15718:	mov	r0, r6
   1571c:	bl	29cc8 <__flatcc_fb_create_join_path@@Base>
   15720:	mov	r6, r0
   15724:	bl	14f34 <main@@Base+0x410>
   15728:	mov	r0, r6
   1572c:	bl	29ed0 <__flatcc_fb_create_make_path@@Base>
   15730:	mov	r9, r0
   15734:	bl	14f34 <main@@Base+0x410>
   15738:	cmp	r6, #0
   1573c:	beq	15748 <flatcc_parse_file@@Base+0x464>
   15740:	mov	r0, r6
   15744:	bl	13fd4 <free@plt>
   15748:	ldr	r1, [pc, #444]	; 1590c <flatcc_parse_file@@Base+0x628>
   1574c:	mov	r0, r8
   15750:	bl	13fc8 <fopen@plt>
   15754:	subs	r6, r0, #0
   15758:	beq	157b0 <flatcc_parse_file@@Base+0x4cc>
   1575c:	mov	r2, r9
   15760:	ldr	r1, [pc, #424]	; 15910 <flatcc_parse_file@@Base+0x62c>
   15764:	mov	r0, r6
   15768:	bl	14094 <fprintf@plt>
   1576c:	ldr	r4, [r4]
   15770:	cmp	r4, #0
   15774:	beq	15804 <flatcc_parse_file@@Base+0x520>
   15778:	ldr	sl, [pc, #404]	; 15914 <flatcc_parse_file@@Base+0x630>
   1577c:	b	157cc <flatcc_parse_file@@Base+0x4e8>
   15780:	ldr	r3, [pc, #400]	; 15918 <flatcc_parse_file@@Base+0x634>
   15784:	mov	r2, #220	; 0xdc
   15788:	ldr	r1, [pc, #396]	; 1591c <flatcc_parse_file@@Base+0x638>
   1578c:	ldr	r0, [pc, #396]	; 15920 <flatcc_parse_file@@Base+0x63c>
   15790:	bl	14148 <__assert_fail@plt>
   15794:	ldr	ip, [r4, #308]	; 0x134
   15798:	mov	r9, r3
   1579c:	ldr	r3, [pc, #384]	; 15924 <flatcc_parse_file@@Base+0x640>
   157a0:	ldr	r7, [pc, #384]	; 15928 <flatcc_parse_file@@Base+0x644>
   157a4:	cmp	ip, #0
   157a8:	moveq	r7, r3
   157ac:	b	156fc <flatcc_parse_file@@Base+0x418>
   157b0:	mov	r2, r8
   157b4:	ldr	r1, [pc, #368]	; 1592c <flatcc_parse_file@@Base+0x648>
   157b8:	mov	r0, r4
   157bc:	bl	2a354 <__flatcc_fb_print_error@@Base>
   157c0:	b	15810 <flatcc_parse_file@@Base+0x52c>
   157c4:	cmp	r4, #0
   157c8:	beq	15804 <flatcc_parse_file@@Base+0x520>
   157cc:	ldr	r0, [r4, #548]	; 0x224
   157d0:	bl	29ed0 <__flatcc_fb_create_make_path@@Base>
   157d4:	mov	r7, r0
   157d8:	bl	14f34 <main@@Base+0x410>
   157dc:	mov	r2, r7
   157e0:	mov	r1, sl
   157e4:	mov	r0, r6
   157e8:	bl	14094 <fprintf@plt>
   157ec:	ldr	r4, [r4]
   157f0:	cmp	r7, #0
   157f4:	beq	157c4 <flatcc_parse_file@@Base+0x4e0>
   157f8:	mov	r0, r7
   157fc:	bl	13fd4 <free@plt>
   15800:	b	157c4 <flatcc_parse_file@@Base+0x4e0>
   15804:	mov	r1, r6
   15808:	mov	r0, #10
   1580c:	bl	140f4 <fputc@plt>
   15810:	cmp	r8, #0
   15814:	beq	15820 <flatcc_parse_file@@Base+0x53c>
   15818:	mov	r0, r8
   1581c:	bl	13fd4 <free@plt>
   15820:	cmp	r9, #0
   15824:	beq	15830 <flatcc_parse_file@@Base+0x54c>
   15828:	mov	r0, r9
   1582c:	bl	13fd4 <free@plt>
   15830:	cmp	r6, #0
   15834:	beq	15840 <flatcc_parse_file@@Base+0x55c>
   15838:	mov	r0, r6
   1583c:	bl	140dc <fclose@plt>
   15840:	mov	r9, r5
   15844:	b	15328 <flatcc_parse_file@@Base+0x44>
   15848:	ldr	r3, [sp, #12]
   1584c:	cmp	r3, #0
   15850:	beq	158cc <flatcc_parse_file@@Base+0x5e8>
   15854:	ldr	r5, [r4, #552]	; 0x228
   15858:	mov	r0, r5
   1585c:	bl	1407c <strlen@plt>
   15860:	mov	r1, r0
   15864:	mov	r0, r5
   15868:	bl	29eec <__flatcc_fb_find_basename@@Base>
   1586c:	mov	r3, #1
   15870:	str	r3, [sp, #4]
   15874:	ldr	r3, [pc, #112]	; 158ec <flatcc_parse_file@@Base+0x608>
   15878:	str	r3, [sp]
   1587c:	mov	r3, r8
   15880:	mov	r2, r7
   15884:	mov	r1, r0
   15888:	mov	r0, r5
   1588c:	bl	29b88 <__flatcc_fb_create_join_path_n@@Base>
   15890:	subs	r6, r0, #0
   15894:	beq	154d4 <flatcc_parse_file@@Base+0x1f0>
   15898:	add	r2, sp, #20
   1589c:	ldr	r1, [r4, #128]	; 0x80
   158a0:	mov	r0, r6
   158a4:	bl	29fa0 <__flatcc_fb_read_file@@Base>
   158a8:	subs	r9, r0, #0
   158ac:	bne	15478 <flatcc_parse_file@@Base+0x194>
   158b0:	mov	r0, r6
   158b4:	bl	13fd4 <free@plt>
   158b8:	ldr	r3, [r4, #128]	; 0x80
   158bc:	ldr	r2, [sp, #20]
   158c0:	cmp	r3, #0
   158c4:	cmpne	r3, r2
   158c8:	bcc	154f4 <flatcc_parse_file@@Base+0x210>
   158cc:	mov	r2, r7
   158d0:	ldr	r1, [pc, #88]	; 15930 <flatcc_parse_file@@Base+0x64c>
   158d4:	mov	r0, r4
   158d8:	bl	2a354 <__flatcc_fb_print_error@@Base>
   158dc:	mvn	r9, #0
   158e0:	b	15328 <flatcc_parse_file@@Base+0x44>
   158e4:	mov	r9, #0
   158e8:	b	15328 <flatcc_parse_file@@Base+0x44>
   158ec:	muleq	r4, r0, r4
   158f0:	andeq	r7, r6, r8, lsr #1
   158f4:	strdeq	ip, [r3], -ip	; <UNPREDICTABLE>
   158f8:	andeq	ip, r3, r8, lsr r7
   158fc:	andeq	ip, r3, r4, ror #14
   15900:	andeq	ip, r3, r4, lsl #15
   15904:	andeq	r4, r1, r0, lsr #30
   15908:	andeq	ip, r3, ip, asr r7
   1590c:	andeq	ip, r3, r4, lsl #16
   15910:	andeq	ip, r3, r8, lsr r8
   15914:	andeq	ip, r3, ip, lsr r8
   15918:	andeq	ip, r3, r0, ror #13
   1591c:	andeq	ip, r3, r4, lsr #15
   15920:	andeq	ip, r3, ip, ror #15
   15924:	andeq	r3, r5, r8, asr r1
   15928:	andeq	ip, r3, r8, lsr #14
   1592c:	andeq	ip, r3, r8, lsl #16
   15930:	andeq	ip, r3, r0, asr #16
   15934:	push	{r4, lr}
   15938:	mov	r0, r1
   1593c:	bl	13fd4 <free@plt>
   15940:	pop	{r4, pc}

00015944 <__flatcc_fb_open_output_file@@Base>:
   15944:	push	{r4, r5, r6, r7, r8, lr}
   15948:	sub	sp, sp, #8
   1594c:	mov	r5, r0
   15950:	mov	r6, r1
   15954:	mov	r7, r2
   15958:	mov	r8, r3
   1595c:	ldr	r3, [r0, #212]	; 0xd4
   15960:	ldr	r4, [r3, #216]	; 0xd8
   15964:	ldr	r3, [pc, #180]	; 15a20 <__flatcc_fb_open_output_file@@Base+0xdc>
   15968:	cmp	r4, #0
   1596c:	moveq	r4, r3
   15970:	mov	r0, r4
   15974:	bl	1407c <strlen@plt>
   15978:	ldr	r3, [r5, #204]	; 0xcc
   1597c:	cmp	r3, #0
   15980:	movne	r4, #0
   15984:	beq	15994 <__flatcc_fb_open_output_file@@Base+0x50>
   15988:	mov	r0, r4
   1598c:	add	sp, sp, #8
   15990:	pop	{r4, r5, r6, r7, r8, pc}
   15994:	mov	r3, #1
   15998:	str	r3, [sp, #4]
   1599c:	str	r8, [sp]
   159a0:	mov	r3, r7
   159a4:	mov	r2, r6
   159a8:	mov	r1, r0
   159ac:	mov	r0, r4
   159b0:	bl	29b88 <__flatcc_fb_create_join_path_n@@Base>
   159b4:	subs	r6, r0, #0
   159b8:	beq	159e4 <__flatcc_fb_open_output_file@@Base+0xa0>
   159bc:	ldr	r1, [pc, #96]	; 15a24 <__flatcc_fb_open_output_file@@Base+0xe0>
   159c0:	mov	r0, r6
   159c4:	bl	13fc8 <fopen@plt>
   159c8:	str	r0, [r5, #204]	; 0xcc
   159cc:	cmp	r0, #0
   159d0:	movne	r4, #0
   159d4:	beq	15a04 <__flatcc_fb_open_output_file@@Base+0xc0>
   159d8:	mov	r0, r6
   159dc:	bl	13fd4 <free@plt>
   159e0:	b	15988 <__flatcc_fb_open_output_file@@Base+0x44>
   159e4:	ldr	r3, [pc, #60]	; 15a28 <__flatcc_fb_open_output_file@@Base+0xe4>
   159e8:	ldr	r3, [r3]
   159ec:	mov	r2, #34	; 0x22
   159f0:	mov	r1, #1
   159f4:	ldr	r0, [pc, #48]	; 15a2c <__flatcc_fb_open_output_file@@Base+0xe8>
   159f8:	bl	1401c <fwrite@plt>
   159fc:	mov	r0, #1
   15a00:	bl	14070 <exit@plt>
   15a04:	mov	r2, r6
   15a08:	ldr	r1, [pc, #32]	; 15a30 <__flatcc_fb_open_output_file@@Base+0xec>
   15a0c:	ldr	r3, [pc, #20]	; 15a28 <__flatcc_fb_open_output_file@@Base+0xe4>
   15a10:	ldr	r0, [r3]
   15a14:	bl	14094 <fprintf@plt>
   15a18:	mvn	r4, #0
   15a1c:	b	159d8 <__flatcc_fb_open_output_file@@Base+0x94>
   15a20:	muleq	r4, r0, r4
   15a24:	andeq	ip, r3, r4, lsl #16
   15a28:	andeq	r7, r6, r8, lsr #1
   15a2c:	strdeq	ip, [r3], -ip	; <UNPREDICTABLE>
   15a30:	andeq	ip, r3, r8, ror #16

00015a34 <__flatcc_fb_close_output_file@@Base>:
   15a34:	ldr	r3, [r0, #212]	; 0xd4
   15a38:	ldr	r2, [r3, #124]	; 0x7c
   15a3c:	cmp	r2, #0
   15a40:	bxne	lr
   15a44:	ldr	r3, [r3, #108]	; 0x6c
   15a48:	cmp	r3, #0
   15a4c:	bxne	lr
   15a50:	ldr	r3, [r0, #204]	; 0xcc
   15a54:	cmp	r3, #0
   15a58:	bxeq	lr
   15a5c:	push	{r4, lr}
   15a60:	mov	r4, r0
   15a64:	mov	r0, r3
   15a68:	bl	140dc <fclose@plt>
   15a6c:	mov	r3, #0
   15a70:	str	r3, [r4, #204]	; 0xcc
   15a74:	pop	{r4, pc}

00015a78 <__flatcc_fb_end_output_c@@Base>:
   15a78:	push	{r4, lr}
   15a7c:	mov	r4, r0
   15a80:	ldr	r0, [r0, #204]	; 0xcc
   15a84:	ldr	r3, [pc, #28]	; 15aa8 <__flatcc_fb_end_output_c@@Base+0x30>
   15a88:	ldr	r3, [r3]
   15a8c:	cmp	r3, r0
   15a90:	cmpne	r0, #0
   15a94:	beq	15a9c <__flatcc_fb_end_output_c@@Base+0x24>
   15a98:	bl	140dc <fclose@plt>
   15a9c:	mov	r3, #0
   15aa0:	str	r3, [r4, #204]	; 0xcc
   15aa4:	pop	{r4, pc}
   15aa8:	andeq	r7, r6, ip, lsr #1

00015aac <__flatcc_fb_init_output_c@@Base>:
   15aac:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15ab0:	mov	r6, r0
   15ab4:	mov	r7, r1
   15ab8:	ldr	r2, [r1, #128]	; 0x80
   15abc:	ldr	r3, [pc, #448]	; 15c84 <__flatcc_fb_init_output_c@@Base+0x1d8>
   15ac0:	ldr	sl, [pc, #448]	; 15c88 <__flatcc_fb_init_output_c@@Base+0x1dc>
   15ac4:	cmp	r2, #0
   15ac8:	moveq	sl, r3
   15acc:	ldr	r9, [r1, #216]	; 0xd8
   15ad0:	ldr	r3, [pc, #436]	; 15c8c <__flatcc_fb_init_output_c@@Base+0x1e0>
   15ad4:	cmp	r9, #0
   15ad8:	moveq	r9, r3
   15adc:	mov	r2, #232	; 0xe8
   15ae0:	mov	r1, #0
   15ae4:	bl	140ac <memset@plt>
   15ae8:	str	r7, [r6, #212]	; 0xd4
   15aec:	ldr	r4, [r7, #196]	; 0xc4
   15af0:	cmp	r4, #0
   15af4:	beq	15c4c <__flatcc_fb_init_output_c@@Base+0x1a0>
   15af8:	mov	r0, r4
   15afc:	bl	1407c <strlen@plt>
   15b00:	mov	r8, r0
   15b04:	cmp	r0, #100	; 0x64
   15b08:	bhi	15bd8 <__flatcc_fb_init_output_c@@Base+0x12c>
   15b0c:	mov	fp, r6
   15b10:	mov	r2, #100	; 0x64
   15b14:	mov	r1, r4
   15b18:	mov	r0, r6
   15b1c:	bl	140b8 <strncpy@plt>
   15b20:	mov	r3, #0
   15b24:	strb	r3, [r6, #100]	; 0x64
   15b28:	cmp	r8, r3
   15b2c:	bne	15c6c <__flatcc_fb_init_output_c@@Base+0x1c0>
   15b30:	add	r5, r6, #102	; 0x66
   15b34:	ldrb	r4, [fp]
   15b38:	cmp	r4, #0
   15b3c:	beq	15bf4 <__flatcc_fb_init_output_c@@Base+0x148>
   15b40:	bl	14058 <__ctype_toupper_loc@plt>
   15b44:	mov	r2, fp
   15b48:	mov	r3, r5
   15b4c:	ldr	r1, [r0]
   15b50:	ldr	r1, [r1, r4, lsl #2]
   15b54:	strb	r1, [r3], #1
   15b58:	ldrb	r4, [r2, #1]!
   15b5c:	cmp	r4, #0
   15b60:	bne	15b4c <__flatcc_fb_init_output_c@@Base+0xa0>
   15b64:	mov	r2, #0
   15b68:	strb	r2, [r3]
   15b6c:	add	r8, r6, r8
   15b70:	strb	r2, [r8, #102]	; 0x66
   15b74:	ldr	r3, [r7, #176]	; 0xb0
   15b78:	str	r3, [r6, #224]	; 0xe0
   15b7c:	ldr	r4, [r7, #108]	; 0x6c
   15b80:	cmp	r4, r2
   15b84:	bne	15bfc <__flatcc_fb_init_output_c@@Base+0x150>
   15b88:	ldr	r3, [r6, #212]	; 0xd4
   15b8c:	ldr	r1, [r3, #124]	; 0x7c
   15b90:	cmp	r1, #0
   15b94:	beq	15bd0 <__flatcc_fb_init_output_c@@Base+0x124>
   15b98:	mov	r3, #1
   15b9c:	ldr	r2, [pc, #232]	; 15c8c <__flatcc_fb_init_output_c@@Base+0x1e0>
   15ba0:	mov	r0, r9
   15ba4:	bl	29cc8 <__flatcc_fb_create_join_path@@Base>
   15ba8:	subs	r5, r0, #0
   15bac:	beq	15c10 <__flatcc_fb_init_output_c@@Base+0x164>
   15bb0:	mov	r1, sl
   15bb4:	mov	r0, r5
   15bb8:	bl	13fc8 <fopen@plt>
   15bbc:	str	r0, [r6, #204]	; 0xcc
   15bc0:	cmp	r0, #0
   15bc4:	beq	15c30 <__flatcc_fb_init_output_c@@Base+0x184>
   15bc8:	mov	r0, r5
   15bcc:	bl	13fd4 <free@plt>
   15bd0:	mov	r0, r4
   15bd4:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15bd8:	mov	r2, #100	; 0x64
   15bdc:	ldr	r1, [pc, #172]	; 15c90 <__flatcc_fb_init_output_c@@Base+0x1e4>
   15be0:	ldr	r3, [pc, #172]	; 15c94 <__flatcc_fb_init_output_c@@Base+0x1e8>
   15be4:	ldr	r0, [r3]
   15be8:	bl	14094 <fprintf@plt>
   15bec:	mvn	r4, #0
   15bf0:	b	15bd0 <__flatcc_fb_init_output_c@@Base+0x124>
   15bf4:	mov	r3, r5
   15bf8:	b	15b64 <__flatcc_fb_init_output_c@@Base+0xb8>
   15bfc:	ldr	r3, [pc, #148]	; 15c98 <__flatcc_fb_init_output_c@@Base+0x1ec>
   15c00:	ldr	r3, [r3]
   15c04:	str	r3, [r6, #204]	; 0xcc
   15c08:	mov	r4, r2
   15c0c:	b	15bd0 <__flatcc_fb_init_output_c@@Base+0x124>
   15c10:	ldr	r3, [pc, #124]	; 15c94 <__flatcc_fb_init_output_c@@Base+0x1e8>
   15c14:	ldr	r3, [r3]
   15c18:	mov	r2, #34	; 0x22
   15c1c:	mov	r1, #1
   15c20:	ldr	r0, [pc, #116]	; 15c9c <__flatcc_fb_init_output_c@@Base+0x1f0>
   15c24:	bl	1401c <fwrite@plt>
   15c28:	mov	r0, #1
   15c2c:	bl	14070 <exit@plt>
   15c30:	mov	r2, r5
   15c34:	ldr	r1, [pc, #100]	; 15ca0 <__flatcc_fb_init_output_c@@Base+0x1f4>
   15c38:	ldr	r3, [pc, #84]	; 15c94 <__flatcc_fb_init_output_c@@Base+0x1e8>
   15c3c:	ldr	r0, [r3]
   15c40:	bl	14094 <fprintf@plt>
   15c44:	mvn	r4, #0
   15c48:	b	15bc8 <__flatcc_fb_init_output_c@@Base+0x11c>
   15c4c:	mov	fp, r6
   15c50:	mov	r2, #100	; 0x64
   15c54:	ldr	r1, [pc, #72]	; 15ca4 <__flatcc_fb_init_output_c@@Base+0x1f8>
   15c58:	mov	r0, r6
   15c5c:	bl	140b8 <strncpy@plt>
   15c60:	mov	r3, #0
   15c64:	strb	r3, [r6, #100]	; 0x64
   15c68:	mov	r8, #11
   15c6c:	mov	r3, r6
   15c70:	mov	r2, #95	; 0x5f
   15c74:	strb	r2, [r3, r8]!
   15c78:	mov	r2, #0
   15c7c:	strb	r2, [r3, #1]
   15c80:	b	15b30 <__flatcc_fb_init_output_c@@Base+0x84>
   15c84:	andeq	ip, r3, r4, lsl #16
   15c88:	andeq	ip, r3, ip, lsl #17
   15c8c:	muleq	r4, r0, r4
   15c90:	muleq	r3, r0, r8
   15c94:	andeq	r7, r6, r8, lsr #1
   15c98:	andeq	r7, r6, ip, lsr #1
   15c9c:	strdeq	ip, [r3], -ip	; <UNPREDICTABLE>
   15ca0:	andeq	ip, r3, r8, ror #16
   15ca4:	andeq	ip, r3, r8, asr #17

00015ca8 <__flatcc_fb_gen_c_includes@@Base>:
   15ca8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15cac:	sub	sp, sp, #36	; 0x24
   15cb0:	mov	r8, r0
   15cb4:	mov	sl, r1
   15cb8:	str	r2, [sp, #12]
   15cbc:	ldr	r2, [r0, #208]	; 0xd0
   15cc0:	ldr	r5, [r2]
   15cc4:	mov	r3, #0
   15cc8:	str	r3, [sp, #16]
   15ccc:	str	r3, [sp, #20]
   15cd0:	str	r3, [sp, #24]
   15cd4:	str	r3, [sp, #28]
   15cd8:	ldr	r0, [r2, #164]	; 0xa4
   15cdc:	bl	29afc <__flatcc_fb_copy_path@@Base>
   15ce0:	mov	r2, #1
   15ce4:	mov	r1, r0
   15ce8:	add	r0, sp, #16
   15cec:	bl	27840 <str_set_insert_item@@Base>
   15cf0:	cmp	r5, #0
   15cf4:	beq	15df8 <__flatcc_fb_gen_c_includes@@Base+0x150>
   15cf8:	mov	r9, #1
   15cfc:	ldr	fp, [pc, #268]	; 15e10 <__flatcc_fb_gen_c_includes@@Base+0x168>
   15d00:	b	15d70 <__flatcc_fb_gen_c_includes@@Base+0xc8>
   15d04:	ldr	r3, [pc, #264]	; 15e14 <__flatcc_fb_gen_c_includes@@Base+0x16c>
   15d08:	ldr	r3, [r3]
   15d0c:	mov	r2, #34	; 0x22
   15d10:	mov	r1, #1
   15d14:	ldr	r0, [pc, #252]	; 15e18 <__flatcc_fb_gen_c_includes@@Base+0x170>
   15d18:	bl	1401c <fwrite@plt>
   15d1c:	mov	r0, #1
   15d20:	bl	14070 <exit@plt>
   15d24:	ldr	r3, [pc, #232]	; 15e14 <__flatcc_fb_gen_c_includes@@Base+0x16c>
   15d28:	ldr	r3, [r3]
   15d2c:	mov	r2, #34	; 0x22
   15d30:	mov	r1, #1
   15d34:	ldr	r0, [pc, #220]	; 15e18 <__flatcc_fb_gen_c_includes@@Base+0x170>
   15d38:	bl	1401c <fwrite@plt>
   15d3c:	mov	r0, #1
   15d40:	bl	14070 <exit@plt>
   15d44:	str	sl, [sp, #4]
   15d48:	str	r7, [sp]
   15d4c:	ldr	r3, [sp, #12]
   15d50:	mov	r2, r6
   15d54:	mov	r1, fp
   15d58:	ldr	r0, [r8, #204]	; 0xcc
   15d5c:	bl	14094 <fprintf@plt>
   15d60:	mov	r0, r7
   15d64:	bl	13fd4 <free@plt>
   15d68:	cmp	r5, #0
   15d6c:	beq	15df8 <__flatcc_fb_gen_c_includes@@Base+0x150>
   15d70:	ldr	r3, [r8, #212]	; 0xd4
   15d74:	ldr	r2, [r3, #96]	; 0x60
   15d78:	ldr	r1, [r5, #12]
   15d7c:	ldr	r0, [r5, #8]
   15d80:	bl	29f44 <__flatcc_fb_create_basename@@Base>
   15d84:	subs	r7, r0, #0
   15d88:	beq	15d04 <__flatcc_fb_gen_c_includes@@Base+0x5c>
   15d8c:	ldr	r5, [r5]
   15d90:	mov	r0, r7
   15d94:	bl	29afc <__flatcc_fb_copy_path@@Base>
   15d98:	subs	r6, r0, #0
   15d9c:	beq	15d24 <__flatcc_fb_gen_c_includes@@Base+0x7c>
   15da0:	ldrb	r4, [r6]
   15da4:	cmp	r4, #0
   15da8:	beq	15dcc <__flatcc_fb_gen_c_includes@@Base+0x124>
   15dac:	bl	14058 <__ctype_toupper_loc@plt>
   15db0:	mov	r3, r6
   15db4:	ldr	r2, [r0]
   15db8:	ldr	r2, [r2, r4, lsl #2]
   15dbc:	strb	r2, [r3]
   15dc0:	ldrb	r4, [r3, #1]!
   15dc4:	cmp	r4, #0
   15dc8:	bne	15db4 <__flatcc_fb_gen_c_includes@@Base+0x10c>
   15dcc:	mov	r2, r9
   15dd0:	mov	r1, r6
   15dd4:	add	r0, sp, #16
   15dd8:	bl	27840 <str_set_insert_item@@Base>
   15ddc:	cmp	r0, #0
   15de0:	beq	15d44 <__flatcc_fb_gen_c_includes@@Base+0x9c>
   15de4:	mov	r0, r6
   15de8:	bl	13fd4 <free@plt>
   15dec:	mov	r0, r7
   15df0:	bl	13fd4 <free@plt>
   15df4:	b	15d68 <__flatcc_fb_gen_c_includes@@Base+0xc0>
   15df8:	mov	r2, #0
   15dfc:	ldr	r1, [pc, #24]	; 15e1c <__flatcc_fb_gen_c_includes@@Base+0x174>
   15e00:	add	r0, sp, #16
   15e04:	bl	2779c <str_set_destroy@@Base>
   15e08:	add	sp, sp, #36	; 0x24
   15e0c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15e10:	ldrdeq	ip, [r3], -r4
   15e14:	andeq	r7, r6, r8, lsr #1
   15e18:	strdeq	ip, [r3], -ip	; <UNPREDICTABLE>
   15e1c:	andeq	r5, r1, r4, lsr r9

00015e20 <__flatcc_fb_copy_scope@@Base>:
   15e20:	push	{r4, r5, r6, r7, r8, lr}
   15e24:	ldr	r6, [r0, #24]
   15e28:	ldr	r3, [r0]
   15e2c:	cmp	r3, #0
   15e30:	beq	15ec4 <__flatcc_fb_copy_scope@@Base+0xa4>
   15e34:	mov	ip, r6
   15e38:	ldr	r2, [r3, #4]
   15e3c:	ldr	r2, [r2, #4]
   15e40:	add	r2, r2, #1
   15e44:	add	ip, ip, r2
   15e48:	ldr	r3, [r3]
   15e4c:	cmp	r3, #0
   15e50:	bne	15e38 <__flatcc_fb_copy_scope@@Base+0x18>
   15e54:	cmp	ip, #101	; 0x65
   15e58:	bhi	15ecc <__flatcc_fb_copy_scope@@Base+0xac>
   15e5c:	mov	r7, r1
   15e60:	mov	r4, r0
   15e64:	mov	r2, r6
   15e68:	ldr	r1, [r0, #20]
   15e6c:	mov	r0, r7
   15e70:	bl	13fe0 <memcpy@plt>
   15e74:	ldr	r5, [r4]
   15e78:	cmp	r5, #0
   15e7c:	beq	15eb4 <__flatcc_fb_copy_scope@@Base+0x94>
   15e80:	mov	r8, #95	; 0x5f
   15e84:	ldr	r3, [r5, #4]
   15e88:	ldr	r4, [r3, #4]
   15e8c:	mov	r2, r4
   15e90:	ldr	r1, [r3]
   15e94:	add	r0, r7, r6
   15e98:	bl	13fe0 <memcpy@plt>
   15e9c:	add	r4, r4, r6
   15ea0:	add	r6, r4, #1
   15ea4:	strb	r8, [r7, r4]
   15ea8:	ldr	r5, [r5]
   15eac:	cmp	r5, #0
   15eb0:	bne	15e84 <__flatcc_fb_copy_scope@@Base+0x64>
   15eb4:	mov	r3, #0
   15eb8:	strb	r3, [r7, r6]
   15ebc:	mov	r0, r6
   15ec0:	pop	{r4, r5, r6, r7, r8, pc}
   15ec4:	mov	ip, r6
   15ec8:	b	15e54 <__flatcc_fb_copy_scope@@Base+0x34>
   15ecc:	mov	r3, #0
   15ed0:	strb	r3, [r1]
   15ed4:	mvn	r0, #0
   15ed8:	pop	{r4, r5, r6, r7, r8, pc}

00015edc <__flatcc_fb_scoped_symbol_name@@Base>:
   15edc:	push	{r4, r5, r6, lr}
   15ee0:	mov	r4, r2
   15ee4:	ldr	r5, [r1, #4]
   15ee8:	ldr	r3, [r2, #204]	; 0xcc
   15eec:	cmp	r3, r0
   15ef0:	beq	15f08 <__flatcc_fb_scoped_symbol_name@@Base+0x2c>
   15ef4:	mov	r1, r2
   15ef8:	bl	15e20 <__flatcc_fb_copy_scope@@Base>
   15efc:	str	r0, [r4, #208]	; 0xd0
   15f00:	cmp	r0, #0
   15f04:	blt	15f48 <__flatcc_fb_scoped_symbol_name@@Base+0x6c>
   15f08:	ldr	r2, [r5, #4]
   15f0c:	str	r2, [r4, #212]	; 0xd4
   15f10:	ldr	r3, [r4, #208]	; 0xd0
   15f14:	add	r3, r2, r3
   15f18:	str	r3, [r4, #216]	; 0xd8
   15f1c:	cmp	r3, #203	; 0xcb
   15f20:	bgt	15f6c <__flatcc_fb_scoped_symbol_name@@Base+0x90>
   15f24:	ldr	r0, [r4, #208]	; 0xd0
   15f28:	ldr	r2, [r4, #212]	; 0xd4
   15f2c:	ldr	r1, [r5]
   15f30:	add	r0, r4, r0
   15f34:	bl	13fe0 <memcpy@plt>
   15f38:	ldr	r3, [r4, #216]	; 0xd8
   15f3c:	mov	r2, #0
   15f40:	strb	r2, [r4, r3]
   15f44:	pop	{r4, r5, r6, pc}
   15f48:	mov	r3, #0
   15f4c:	str	r3, [r4, #208]	; 0xd0
   15f50:	ldr	r3, [pc, #64]	; 15f98 <__flatcc_fb_scoped_symbol_name@@Base+0xbc>
   15f54:	ldr	r3, [r3]
   15f58:	mov	r2, #28
   15f5c:	mov	r1, #1
   15f60:	ldr	r0, [pc, #52]	; 15f9c <__flatcc_fb_scoped_symbol_name@@Base+0xc0>
   15f64:	bl	1401c <fwrite@plt>
   15f68:	b	15f08 <__flatcc_fb_scoped_symbol_name@@Base+0x2c>
   15f6c:	ldr	r3, [r5]
   15f70:	ldr	r1, [pc, #40]	; 15fa0 <__flatcc_fb_scoped_symbol_name@@Base+0xc4>
   15f74:	ldr	r0, [pc, #28]	; 15f98 <__flatcc_fb_scoped_symbol_name@@Base+0xbc>
   15f78:	ldr	r0, [r0]
   15f7c:	bl	14094 <fprintf@plt>
   15f80:	ldr	r3, [r4, #208]	; 0xd0
   15f84:	rsb	r3, r3, #203	; 0xcb
   15f88:	str	r3, [r4, #212]	; 0xd4
   15f8c:	mov	r3, #203	; 0xcb
   15f90:	str	r3, [r4, #216]	; 0xd8
   15f94:	b	15f24 <__flatcc_fb_scoped_symbol_name@@Base+0x48>
   15f98:	andeq	r7, r6, r8, lsr #1
   15f9c:	strdeq	ip, [r3], -ip	; <UNPREDICTABLE>
   15fa0:	andeq	ip, r3, ip, lsl r9

00015fa4 <__flatcc_fb_codegen_common_c@@Base>:
   15fa4:	push	{r4, r5, r6, lr}
   15fa8:	mov	r4, r0
   15fac:	bl	1407c <strlen@plt>
   15fb0:	sub	r6, r0, #1
   15fb4:	ldr	r3, [r4, #212]	; 0xd4
   15fb8:	ldr	r3, [r3, #144]	; 0x90
   15fbc:	cmp	r3, #0
   15fc0:	bne	15fdc <__flatcc_fb_codegen_common_c@@Base+0x38>
   15fc4:	ldr	r3, [r4, #212]	; 0xd4
   15fc8:	ldr	r5, [r3, #148]	; 0x94
   15fcc:	cmp	r5, #0
   15fd0:	bne	16018 <__flatcc_fb_codegen_common_c@@Base+0x74>
   15fd4:	mov	r0, r5
   15fd8:	pop	{r4, r5, r6, pc}
   15fdc:	ldr	r3, [pc, #116]	; 16058 <__flatcc_fb_codegen_common_c@@Base+0xb4>
   15fe0:	mov	r2, r6
   15fe4:	mov	r1, r4
   15fe8:	mov	r0, r4
   15fec:	bl	15944 <__flatcc_fb_open_output_file@@Base>
   15ff0:	cmp	r0, #0
   15ff4:	bne	16048 <__flatcc_fb_codegen_common_c@@Base+0xa4>
   15ff8:	mov	r0, r4
   15ffc:	bl	19194 <__flatcc_fb_gen_common_c_header@@Base>
   16000:	mov	r5, r0
   16004:	mov	r0, r4
   16008:	bl	15a34 <__flatcc_fb_close_output_file@@Base>
   1600c:	cmp	r5, #0
   16010:	bne	15fd4 <__flatcc_fb_codegen_common_c@@Base+0x30>
   16014:	b	15fc4 <__flatcc_fb_codegen_common_c@@Base+0x20>
   16018:	ldr	r3, [pc, #60]	; 1605c <__flatcc_fb_codegen_common_c@@Base+0xb8>
   1601c:	mov	r2, r6
   16020:	mov	r1, r4
   16024:	mov	r0, r4
   16028:	bl	15944 <__flatcc_fb_open_output_file@@Base>
   1602c:	subs	r5, r0, #0
   16030:	bne	16050 <__flatcc_fb_codegen_common_c@@Base+0xac>
   16034:	mov	r0, r4
   16038:	bl	1c334 <__flatcc_fb_gen_common_c_builder_header@@Base>
   1603c:	mov	r0, r4
   16040:	bl	15a34 <__flatcc_fb_close_output_file@@Base>
   16044:	b	15fd4 <__flatcc_fb_codegen_common_c@@Base+0x30>
   16048:	mvn	r5, #0
   1604c:	b	15fd4 <__flatcc_fb_codegen_common_c@@Base+0x30>
   16050:	mvn	r5, #0
   16054:	b	15fd4 <__flatcc_fb_codegen_common_c@@Base+0x30>
   16058:	andeq	ip, r3, r4, asr #18
   1605c:	andeq	ip, r3, r8, asr r9

00016060 <__flatcc_fb_codegen_c@@Base>:
   16060:	push	{r4, r5, r6, lr}
   16064:	mov	r4, r0
   16068:	mov	r3, r1
   1606c:	str	r1, [r0, #208]	; 0xd0
   16070:	mov	r2, #0
   16074:	mov	r1, r2
   16078:	ldr	r0, [r3, #60]	; 0x3c
   1607c:	bl	29418 <fb_scope_table_find@@Base>
   16080:	str	r0, [r4, #216]	; 0xd8
   16084:	ldr	r3, [r4, #208]	; 0xd0
   16088:	ldr	r5, [r3, #160]	; 0xa0
   1608c:	mov	r0, r5
   16090:	bl	1407c <strlen@plt>
   16094:	mov	r6, r0
   16098:	ldr	r3, [r4, #212]	; 0xd4
   1609c:	ldr	r3, [r3, #152]	; 0x98
   160a0:	cmp	r3, #0
   160a4:	bne	160f0 <__flatcc_fb_codegen_c@@Base+0x90>
   160a8:	ldr	r3, [r4, #212]	; 0xd4
   160ac:	ldr	r3, [r3, #156]	; 0x9c
   160b0:	cmp	r3, #0
   160b4:	bne	16128 <__flatcc_fb_codegen_c@@Base+0xc8>
   160b8:	ldr	r3, [r4, #212]	; 0xd4
   160bc:	ldr	r3, [r3, #160]	; 0xa0
   160c0:	cmp	r3, #0
   160c4:	bne	16164 <__flatcc_fb_codegen_c@@Base+0x104>
   160c8:	ldr	r3, [r4, #212]	; 0xd4
   160cc:	ldr	r3, [r3, #164]	; 0xa4
   160d0:	cmp	r3, #0
   160d4:	bne	161a0 <__flatcc_fb_codegen_c@@Base+0x140>
   160d8:	ldr	r3, [r4, #212]	; 0xd4
   160dc:	ldr	r5, [r3, #168]	; 0xa8
   160e0:	cmp	r5, #0
   160e4:	bne	161dc <__flatcc_fb_codegen_c@@Base+0x17c>
   160e8:	mov	r0, r5
   160ec:	pop	{r4, r5, r6, pc}
   160f0:	ldr	r3, [pc, #328]	; 16240 <__flatcc_fb_codegen_c@@Base+0x1e0>
   160f4:	mov	r2, r0
   160f8:	mov	r1, r5
   160fc:	mov	r0, r4
   16100:	bl	15944 <__flatcc_fb_open_output_file@@Base>
   16104:	cmp	r0, #0
   16108:	bne	16218 <__flatcc_fb_codegen_c@@Base+0x1b8>
   1610c:	mov	r0, r4
   16110:	bl	19df0 <__flatcc_fb_gen_c_reader@@Base>
   16114:	subs	r5, r0, #0
   16118:	bne	160e8 <__flatcc_fb_codegen_c@@Base+0x88>
   1611c:	mov	r0, r4
   16120:	bl	15a34 <__flatcc_fb_close_output_file@@Base>
   16124:	b	160a8 <__flatcc_fb_codegen_c@@Base+0x48>
   16128:	ldr	r1, [r4, #208]	; 0xd0
   1612c:	ldr	r3, [pc, #272]	; 16244 <__flatcc_fb_codegen_c@@Base+0x1e4>
   16130:	mov	r2, r6
   16134:	ldr	r1, [r1, #160]	; 0xa0
   16138:	mov	r0, r4
   1613c:	bl	15944 <__flatcc_fb_open_output_file@@Base>
   16140:	cmp	r0, #0
   16144:	bne	16220 <__flatcc_fb_codegen_c@@Base+0x1c0>
   16148:	mov	r0, r4
   1614c:	bl	1cbf0 <__flatcc_fb_gen_c_builder@@Base>
   16150:	subs	r5, r0, #0
   16154:	bne	160e8 <__flatcc_fb_codegen_c@@Base+0x88>
   16158:	mov	r0, r4
   1615c:	bl	15a34 <__flatcc_fb_close_output_file@@Base>
   16160:	b	160b8 <__flatcc_fb_codegen_c@@Base+0x58>
   16164:	ldr	r1, [r4, #208]	; 0xd0
   16168:	ldr	r3, [pc, #216]	; 16248 <__flatcc_fb_codegen_c@@Base+0x1e8>
   1616c:	mov	r2, r6
   16170:	ldr	r1, [r1, #160]	; 0xa0
   16174:	mov	r0, r4
   16178:	bl	15944 <__flatcc_fb_open_output_file@@Base>
   1617c:	cmp	r0, #0
   16180:	bne	16228 <__flatcc_fb_codegen_c@@Base+0x1c8>
   16184:	mov	r0, r4
   16188:	bl	1e834 <__flatcc_fb_gen_c_verifier@@Base>
   1618c:	subs	r5, r0, #0
   16190:	bne	160e8 <__flatcc_fb_codegen_c@@Base+0x88>
   16194:	mov	r0, r4
   16198:	bl	15a34 <__flatcc_fb_close_output_file@@Base>
   1619c:	b	160c8 <__flatcc_fb_codegen_c@@Base+0x68>
   161a0:	ldr	r1, [r4, #208]	; 0xd0
   161a4:	ldr	r3, [pc, #160]	; 1624c <__flatcc_fb_codegen_c@@Base+0x1ec>
   161a8:	mov	r2, r6
   161ac:	ldr	r1, [r1, #160]	; 0xa0
   161b0:	mov	r0, r4
   161b4:	bl	15944 <__flatcc_fb_open_output_file@@Base>
   161b8:	cmp	r0, #0
   161bc:	bne	16230 <__flatcc_fb_codegen_c@@Base+0x1d0>
   161c0:	mov	r0, r4
   161c4:	bl	21e3c <__flatcc_fb_gen_c_json_parser@@Base>
   161c8:	subs	r5, r0, #0
   161cc:	bne	160e8 <__flatcc_fb_codegen_c@@Base+0x88>
   161d0:	mov	r0, r4
   161d4:	bl	15a34 <__flatcc_fb_close_output_file@@Base>
   161d8:	b	160d8 <__flatcc_fb_codegen_c@@Base+0x78>
   161dc:	ldr	r1, [r4, #208]	; 0xd0
   161e0:	ldr	r3, [pc, #104]	; 16250 <__flatcc_fb_codegen_c@@Base+0x1f0>
   161e4:	mov	r2, r6
   161e8:	ldr	r1, [r1, #160]	; 0xa0
   161ec:	mov	r0, r4
   161f0:	bl	15944 <__flatcc_fb_open_output_file@@Base>
   161f4:	cmp	r0, #0
   161f8:	bne	16238 <__flatcc_fb_codegen_c@@Base+0x1d8>
   161fc:	mov	r0, r4
   16200:	bl	24e38 <__flatcc_fb_gen_c_json_printer@@Base>
   16204:	subs	r5, r0, #0
   16208:	bne	160e8 <__flatcc_fb_codegen_c@@Base+0x88>
   1620c:	mov	r0, r4
   16210:	bl	15a34 <__flatcc_fb_close_output_file@@Base>
   16214:	b	160e8 <__flatcc_fb_codegen_c@@Base+0x88>
   16218:	mvn	r5, #0
   1621c:	b	160e8 <__flatcc_fb_codegen_c@@Base+0x88>
   16220:	mvn	r5, #0
   16224:	b	160e8 <__flatcc_fb_codegen_c@@Base+0x88>
   16228:	mvn	r5, #0
   1622c:	b	160e8 <__flatcc_fb_codegen_c@@Base+0x88>
   16230:	mvn	r5, #0
   16234:	b	160e8 <__flatcc_fb_codegen_c@@Base+0x88>
   16238:	mvn	r5, #0
   1623c:	b	160e8 <__flatcc_fb_codegen_c@@Base+0x88>
   16240:	andeq	r3, r5, r8, asr r1
   16244:	andeq	r3, r5, ip, lsr r2
   16248:	andeq	ip, r3, ip, ror #18
   1624c:	andeq	ip, r3, r8, ror r9
   16250:	andeq	ip, r3, r8, lsl #19
   16254:	push	{r4, r5, lr}
   16258:	sub	sp, sp, #228	; 0xe4
   1625c:	mov	r4, r0
   16260:	mov	r5, r1
   16264:	mov	r2, #220	; 0xdc
   16268:	mov	r1, #0
   1626c:	add	r0, sp, #4
   16270:	bl	140ac <memset@plt>
   16274:	ldrh	r3, [r5, #8]
   16278:	cmp	r3, #1
   1627c:	bhi	162e0 <__flatcc_fb_codegen_c@@Base+0x280>
   16280:	add	r2, sp, #4
   16284:	mov	r1, r5
   16288:	ldr	r0, [r5, #12]
   1628c:	bl	15edc <__flatcc_fb_scoped_symbol_name@@Base>
   16290:	ldrh	r3, [r5, #8]
   16294:	cmp	r3, #1
   16298:	beq	162f4 <__flatcc_fb_codegen_c@@Base+0x294>
   1629c:	add	r3, sp, #4
   162a0:	mov	r2, r3
   162a4:	ldr	r1, [pc, #208]	; 1637c <__flatcc_fb_codegen_c@@Base+0x31c>
   162a8:	ldr	r0, [r4, #204]	; 0xcc
   162ac:	bl	14094 <fprintf@plt>
   162b0:	add	r3, sp, #4
   162b4:	mov	r2, r4
   162b8:	ldr	r1, [pc, #192]	; 16380 <__flatcc_fb_codegen_c@@Base+0x320>
   162bc:	ldr	r0, [r4, #204]	; 0xcc
   162c0:	bl	14094 <fprintf@plt>
   162c4:	add	r3, sp, #4
   162c8:	mov	r2, r4
   162cc:	ldr	r1, [pc, #176]	; 16384 <__flatcc_fb_codegen_c@@Base+0x324>
   162d0:	ldr	r0, [r4, #204]	; 0xcc
   162d4:	bl	14094 <fprintf@plt>
   162d8:	add	sp, sp, #228	; 0xe4
   162dc:	pop	{r4, r5, pc}
   162e0:	ldr	r3, [pc, #160]	; 16388 <__flatcc_fb_codegen_c@@Base+0x328>
   162e4:	ldr	r2, [pc, #160]	; 1638c <__flatcc_fb_codegen_c@@Base+0x32c>
   162e8:	ldr	r1, [pc, #160]	; 16390 <__flatcc_fb_codegen_c@@Base+0x330>
   162ec:	ldr	r0, [pc, #160]	; 16394 <__flatcc_fb_codegen_c@@Base+0x334>
   162f0:	bl	14148 <__assert_fail@plt>
   162f4:	ldrd	r2, [r5, #112]	; 0x70
   162f8:	orrs	r3, r2, r3
   162fc:	bne	16364 <__flatcc_fb_codegen_c@@Base+0x304>
   16300:	add	r2, sp, #4
   16304:	ldr	r1, [pc, #140]	; 16398 <__flatcc_fb_codegen_c@@Base+0x338>
   16308:	ldr	r0, [r4, #204]	; 0xcc
   1630c:	bl	14094 <fprintf@plt>
   16310:	add	r3, sp, #4
   16314:	mov	r2, r3
   16318:	ldr	r1, [pc, #124]	; 1639c <__flatcc_fb_codegen_c@@Base+0x33c>
   1631c:	ldr	r0, [r4, #204]	; 0xcc
   16320:	bl	14094 <fprintf@plt>
   16324:	add	r3, sp, #4
   16328:	mov	r2, r3
   1632c:	ldr	r1, [pc, #108]	; 163a0 <__flatcc_fb_codegen_c@@Base+0x340>
   16330:	ldr	r0, [r4, #204]	; 0xcc
   16334:	bl	14094 <fprintf@plt>
   16338:	add	r3, sp, #4
   1633c:	mov	r2, r3
   16340:	ldr	r1, [pc, #92]	; 163a4 <__flatcc_fb_codegen_c@@Base+0x344>
   16344:	ldr	r0, [r4, #204]	; 0xcc
   16348:	bl	14094 <fprintf@plt>
   1634c:	add	r3, sp, #4
   16350:	mov	r2, r3
   16354:	ldr	r1, [pc, #76]	; 163a8 <__flatcc_fb_codegen_c@@Base+0x348>
   16358:	ldr	r0, [r4, #204]	; 0xcc
   1635c:	bl	14094 <fprintf@plt>
   16360:	b	162d8 <__flatcc_fb_codegen_c@@Base+0x278>
   16364:	add	r3, sp, #4
   16368:	mov	r2, r3
   1636c:	ldr	r1, [pc, #56]	; 163ac <__flatcc_fb_codegen_c@@Base+0x34c>
   16370:	ldr	r0, [r4, #204]	; 0xcc
   16374:	bl	14094 <fprintf@plt>
   16378:	b	16310 <__flatcc_fb_codegen_c@@Base+0x2b0>
   1637c:			; <UNDEFINED> instruction: 0x0003cbbc
   16380:	andeq	ip, r3, r8, ror #23
   16384:	andeq	ip, r3, r0, lsl ip
   16388:	muleq	r3, r8, r9
   1638c:	andeq	r0, r0, pc, asr r3
   16390:	andeq	ip, r3, r8, asr sl
   16394:	andeq	ip, r3, r8, lsr #21
   16398:	andeq	ip, r3, ip, ror #21
   1639c:	andeq	ip, r3, r0, lsr fp
   163a0:	andeq	ip, r3, r4, asr fp
   163a4:	andeq	ip, r3, r8, ror fp
   163a8:	muleq	r3, r8, fp
   163ac:	andeq	ip, r3, r4, lsl fp
   163b0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   163b4:	sub	sp, sp, #348	; 0x15c
   163b8:	mov	r4, r0
   163bc:	mov	r6, r1
   163c0:	mov	r2, #220	; 0xdc
   163c4:	mov	r1, #0
   163c8:	add	r0, sp, #24
   163cc:	bl	140ac <memset@plt>
   163d0:	ldrh	sl, [r6, #8]
   163d4:	sub	r3, sl, #3
   163d8:	uxth	r3, r3
   163dc:	cmp	r3, #1
   163e0:	bhi	16438 <__flatcc_fb_codegen_c@@Base+0x3d8>
   163e4:	ldrh	r3, [r6, #48]	; 0x30
   163e8:	cmp	r3, #8
   163ec:	bne	1644c <__flatcc_fb_codegen_c@@Base+0x3ec>
   163f0:	ldr	r3, [r6, #40]	; 0x28
   163f4:	cmp	r3, #5
   163f8:	beq	164c8 <__flatcc_fb_codegen_c@@Base+0x468>
   163fc:	sub	r3, r3, #1
   16400:	cmp	r3, #10
   16404:	ldrls	pc, [pc, r3, lsl #2]
   16408:	b	1655c <__flatcc_fb_codegen_c@@Base+0x4fc>
   1640c:	muleq	r1, r4, r5
   16410:	andeq	r6, r1, r0, ror #8
   16414:	andeq	r6, r1, r8, lsr #11
   16418:	andeq	r6, r1, r4, ror r4
   1641c:	ldrdeq	r6, [r1], -r8
   16420:	andeq	r6, r1, r4, ror #9
   16424:	strdeq	r6, [r1], -r8
   16428:	andeq	r6, r1, ip, lsl #10
   1642c:	andeq	r6, r1, r0, lsr #10
   16430:	andeq	r6, r1, r8, asr #10
   16434:	andeq	r6, r1, r4, lsr r5
   16438:	ldr	r3, [pc, #2268]	; 16d1c <__flatcc_fb_codegen_c@@Base+0xcbc>
   1643c:	ldr	r2, [pc, #2268]	; 16d20 <__flatcc_fb_codegen_c@@Base+0xcc0>
   16440:	ldr	r1, [pc, #2268]	; 16d24 <__flatcc_fb_codegen_c@@Base+0xcc4>
   16444:	ldr	r0, [pc, #2268]	; 16d28 <__flatcc_fb_codegen_c@@Base+0xcc8>
   16448:	bl	14148 <__assert_fail@plt>
   1644c:	ldr	r3, [pc, #2248]	; 16d1c <__flatcc_fb_codegen_c@@Base+0xcbc>
   16450:	ldr	r2, [pc, #2260]	; 16d2c <__flatcc_fb_codegen_c@@Base+0xccc>
   16454:	ldr	r1, [pc, #2248]	; 16d24 <__flatcc_fb_codegen_c@@Base+0xcc4>
   16458:	ldr	r0, [pc, #2256]	; 16d30 <__flatcc_fb_codegen_c@@Base+0xcd0>
   1645c:	bl	14148 <__assert_fail@plt>
   16460:	ldr	r3, [pc, #2252]	; 16d34 <__flatcc_fb_codegen_c@@Base+0xcd4>
   16464:	str	r3, [sp, #16]
   16468:	ldr	r3, [pc, #2248]	; 16d38 <__flatcc_fb_codegen_c@@Base+0xcd8>
   1646c:	str	r3, [sp, #20]
   16470:	b	16484 <__flatcc_fb_codegen_c@@Base+0x424>
   16474:	ldr	r3, [pc, #2232]	; 16d34 <__flatcc_fb_codegen_c@@Base+0xcd4>
   16478:	str	r3, [sp, #16]
   1647c:	ldr	r3, [pc, #2232]	; 16d3c <__flatcc_fb_codegen_c@@Base+0xcdc>
   16480:	str	r3, [sp, #20]
   16484:	ldr	fp, [r6, #112]	; 0x70
   16488:	lsl	fp, fp, #3
   1648c:	cmp	sl, #3
   16490:	beq	165bc <__flatcc_fb_codegen_c@@Base+0x55c>
   16494:	add	r2, sp, #24
   16498:	mov	r1, r6
   1649c:	ldr	r0, [r6, #12]
   164a0:	bl	15edc <__flatcc_fb_scoped_symbol_name@@Base>
   164a4:	ldr	r5, [r6, #32]
   164a8:	cmp	r5, #0
   164ac:	beq	16c2c <__flatcc_fb_codegen_c@@Base+0xbcc>
   164b0:	ldr	r9, [pc, #2184]	; 16d40 <__flatcc_fb_codegen_c@@Base+0xce0>
   164b4:	mov	r1, #1
   164b8:	mov	r3, #0
   164bc:	ldr	r8, [pc, #2176]	; 16d44 <__flatcc_fb_codegen_c@@Base+0xce4>
   164c0:	mov	r7, r3
   164c4:	b	16610 <__flatcc_fb_codegen_c@@Base+0x5b0>
   164c8:	str	r4, [sp, #16]
   164cc:	ldr	r3, [pc, #2164]	; 16d48 <__flatcc_fb_codegen_c@@Base+0xce8>
   164d0:	str	r3, [sp, #20]
   164d4:	b	16484 <__flatcc_fb_codegen_c@@Base+0x424>
   164d8:	ldr	r3, [pc, #2132]	; 16d34 <__flatcc_fb_codegen_c@@Base+0xcd4>
   164dc:	str	r3, [sp, #16]
   164e0:	b	164cc <__flatcc_fb_codegen_c@@Base+0x46c>
   164e4:	ldr	r3, [pc, #2120]	; 16d34 <__flatcc_fb_codegen_c@@Base+0xcd4>
   164e8:	str	r3, [sp, #16]
   164ec:	ldr	r3, [pc, #2136]	; 16d4c <__flatcc_fb_codegen_c@@Base+0xcec>
   164f0:	str	r3, [sp, #20]
   164f4:	b	16484 <__flatcc_fb_codegen_c@@Base+0x424>
   164f8:	ldr	r3, [pc, #2100]	; 16d34 <__flatcc_fb_codegen_c@@Base+0xcd4>
   164fc:	str	r3, [sp, #16]
   16500:	ldr	r3, [pc, #2120]	; 16d50 <__flatcc_fb_codegen_c@@Base+0xcf0>
   16504:	str	r3, [sp, #20]
   16508:	b	16484 <__flatcc_fb_codegen_c@@Base+0x424>
   1650c:	ldr	r3, [pc, #2080]	; 16d34 <__flatcc_fb_codegen_c@@Base+0xcd4>
   16510:	str	r3, [sp, #16]
   16514:	ldr	r3, [pc, #2104]	; 16d54 <__flatcc_fb_codegen_c@@Base+0xcf4>
   16518:	str	r3, [sp, #20]
   1651c:	b	16484 <__flatcc_fb_codegen_c@@Base+0x424>
   16520:	ldr	r3, [pc, #2060]	; 16d34 <__flatcc_fb_codegen_c@@Base+0xcd4>
   16524:	str	r3, [sp, #16]
   16528:	ldr	r3, [pc, #2088]	; 16d58 <__flatcc_fb_codegen_c@@Base+0xcf8>
   1652c:	str	r3, [sp, #20]
   16530:	b	16484 <__flatcc_fb_codegen_c@@Base+0x424>
   16534:	ldr	r3, [pc, #2040]	; 16d34 <__flatcc_fb_codegen_c@@Base+0xcd4>
   16538:	str	r3, [sp, #16]
   1653c:	ldr	r3, [pc, #2072]	; 16d5c <__flatcc_fb_codegen_c@@Base+0xcfc>
   16540:	str	r3, [sp, #20]
   16544:	b	16484 <__flatcc_fb_codegen_c@@Base+0x424>
   16548:	ldr	r3, [pc, #2020]	; 16d34 <__flatcc_fb_codegen_c@@Base+0xcd4>
   1654c:	str	r3, [sp, #16]
   16550:	ldr	r3, [pc, #2056]	; 16d60 <__flatcc_fb_codegen_c@@Base+0xd00>
   16554:	str	r3, [sp, #20]
   16558:	b	16484 <__flatcc_fb_codegen_c@@Base+0x424>
   1655c:	ldr	r4, [pc, #2048]	; 16d64 <__flatcc_fb_codegen_c@@Base+0xd04>
   16560:	ldr	r3, [pc, #2048]	; 16d68 <__flatcc_fb_codegen_c@@Base+0xd08>
   16564:	ldr	r0, [r3]
   16568:	ldr	r3, [pc, #2044]	; 16d6c <__flatcc_fb_codegen_c@@Base+0xd0c>
   1656c:	str	r3, [sp]
   16570:	mov	r3, #141	; 0x8d
   16574:	mov	r2, r4
   16578:	ldr	r1, [pc, #2032]	; 16d70 <__flatcc_fb_codegen_c@@Base+0xd10>
   1657c:	bl	14094 <fprintf@plt>
   16580:	ldr	r3, [pc, #2028]	; 16d74 <__flatcc_fb_codegen_c@@Base+0xd14>
   16584:	mov	r2, #141	; 0x8d
   16588:	mov	r1, r4
   1658c:	ldr	r0, [pc, #2020]	; 16d78 <__flatcc_fb_codegen_c@@Base+0xd18>
   16590:	bl	14148 <__assert_fail@plt>
   16594:	ldr	r3, [pc, #1944]	; 16d34 <__flatcc_fb_codegen_c@@Base+0xcd4>
   16598:	str	r3, [sp, #16]
   1659c:	ldr	r3, [pc, #2008]	; 16d7c <__flatcc_fb_codegen_c@@Base+0xd1c>
   165a0:	str	r3, [sp, #20]
   165a4:	b	16484 <__flatcc_fb_codegen_c@@Base+0x424>
   165a8:	ldr	r3, [pc, #1924]	; 16d34 <__flatcc_fb_codegen_c@@Base+0xcd4>
   165ac:	str	r3, [sp, #16]
   165b0:	ldr	r3, [pc, #1992]	; 16d80 <__flatcc_fb_codegen_c@@Base+0xd20>
   165b4:	str	r3, [sp, #20]
   165b8:	b	16484 <__flatcc_fb_codegen_c@@Base+0x424>
   165bc:	add	r2, sp, #24
   165c0:	mov	r1, r6
   165c4:	ldr	r0, [r6, #12]
   165c8:	bl	15edc <__flatcc_fb_scoped_symbol_name@@Base>
   165cc:	ldr	r5, [r6, #32]
   165d0:	cmp	r5, #0
   165d4:	beq	16cd4 <__flatcc_fb_codegen_c@@Base+0xc74>
   165d8:	ldr	r9, [pc, #1956]	; 16d84 <__flatcc_fb_codegen_c@@Base+0xd24>
   165dc:	b	164b4 <__flatcc_fb_codegen_c@@Base+0x454>
   165e0:	ldr	r2, [r5, #4]
   165e4:	ldr	r3, [r2]
   165e8:	ldr	r2, [r2, #4]
   165ec:	mov	r1, r8
   165f0:	ldr	r0, [r4, #204]	; 0xcc
   165f4:	bl	14094 <fprintf@plt>
   165f8:	ldr	r3, [r5, #4]
   165fc:	ldr	r3, [r3, #8]
   16600:	ldr	r5, [r5]
   16604:	mov	r1, r7
   16608:	cmp	r5, #0
   1660c:	beq	1663c <__flatcc_fb_codegen_c@@Base+0x5dc>
   16610:	ldr	r2, [r5, #4]
   16614:	ldr	r2, [r2, #8]
   16618:	cmp	r2, r3
   1661c:	beq	165e0 <__flatcc_fb_codegen_c@@Base+0x580>
   16620:	cmp	r1, #0
   16624:	ldr	r2, [pc, #1800]	; 16d34 <__flatcc_fb_codegen_c@@Base+0xcd4>
   16628:	ldrne	r1, [pc, #1880]	; 16d88 <__flatcc_fb_codegen_c@@Base+0xd28>
   1662c:	ldreq	r1, [pc, #1880]	; 16d8c <__flatcc_fb_codegen_c@@Base+0xd2c>
   16630:	ldr	r0, [r4, #204]	; 0xcc
   16634:	bl	14094 <fprintf@plt>
   16638:	b	165e0 <__flatcc_fb_codegen_c@@Base+0x580>
   1663c:	ldr	r3, [r4, #204]	; 0xcc
   16640:	mov	r2, #4
   16644:	mov	r1, #1
   16648:	ldr	r0, [pc, #1856]	; 16d90 <__flatcc_fb_codegen_c@@Base+0xd30>
   1664c:	bl	1401c <fwrite@plt>
   16650:	str	r9, [sp, #4]
   16654:	add	r5, sp, #24
   16658:	str	r5, [sp]
   1665c:	ldr	r3, [sp, #20]
   16660:	ldr	r2, [sp, #16]
   16664:	ldr	r1, [pc, #1832]	; 16d94 <__flatcc_fb_codegen_c@@Base+0xd34>
   16668:	ldr	r0, [r4, #204]	; 0xcc
   1666c:	bl	14094 <fprintf@plt>
   16670:	str	fp, [sp, #8]
   16674:	str	r9, [sp, #4]
   16678:	str	r5, [sp]
   1667c:	mov	r3, r5
   16680:	mov	r2, r4
   16684:	ldr	r1, [pc, #1804]	; 16d98 <__flatcc_fb_codegen_c@@Base+0xd38>
   16688:	ldr	r0, [r4, #204]	; 0xcc
   1668c:	bl	14094 <fprintf@plt>
   16690:	cmp	sl, #3
   16694:	bne	16c70 <__flatcc_fb_codegen_c@@Base+0xc10>
   16698:	ldr	fp, [r6, #20]
   1669c:	cmp	fp, #0
   166a0:	bne	16c98 <__flatcc_fb_codegen_c@@Base+0xc38>
   166a4:	ldr	r1, [r4, #204]	; 0xcc
   166a8:	mov	r0, #10
   166ac:	bl	140f4 <fputc@plt>
   166b0:	add	r3, sp, #24
   166b4:	mov	r2, r3
   166b8:	ldr	r1, [pc, #1756]	; 16d9c <__flatcc_fb_codegen_c@@Base+0xd3c>
   166bc:	ldr	r0, [r4, #204]	; 0xcc
   166c0:	bl	14094 <fprintf@plt>
   166c4:	ldr	r3, [r4, #204]	; 0xcc
   166c8:	mov	r2, #21
   166cc:	mov	r1, #1
   166d0:	ldr	r0, [pc, #1736]	; 16da0 <__flatcc_fb_codegen_c@@Base+0xd40>
   166d4:	bl	1401c <fwrite@plt>
   166d8:	ldr	r5, [r6, #20]
   166dc:	cmp	r5, #0
   166e0:	bne	16b20 <__flatcc_fb_codegen_c@@Base+0xac0>
   166e4:	ldr	r3, [r4, #204]	; 0xcc
   166e8:	mov	r2, #32
   166ec:	mov	r1, #1
   166f0:	ldr	r0, [pc, #1708]	; 16da4 <__flatcc_fb_codegen_c@@Base+0xd44>
   166f4:	bl	1401c <fwrite@plt>
   166f8:	ldr	r1, [r4, #204]	; 0xcc
   166fc:	mov	r0, #10
   16700:	bl	140f4 <fputc@plt>
   16704:	add	r3, sp, #24
   16708:	mov	r2, r3
   1670c:	ldr	r1, [pc, #1684]	; 16da8 <__flatcc_fb_codegen_c@@Base+0xd48>
   16710:	ldr	r0, [r4, #204]	; 0xcc
   16714:	bl	14094 <fprintf@plt>
   16718:	ldr	r3, [r4, #204]	; 0xcc
   1671c:	mov	r2, #21
   16720:	mov	r1, #1
   16724:	ldr	r0, [pc, #1652]	; 16da0 <__flatcc_fb_codegen_c@@Base+0xd40>
   16728:	bl	1401c <fwrite@plt>
   1672c:	b	16bb8 <__flatcc_fb_codegen_c@@Base+0xb58>
   16730:	ldr	r2, [r5, #4]
   16734:	ldr	r3, [r2]
   16738:	ldr	r2, [r2, #4]
   1673c:	mov	r1, r8
   16740:	ldr	r0, [r4, #204]	; 0xcc
   16744:	bl	14094 <fprintf@plt>
   16748:	ldr	r3, [r5, #4]
   1674c:	ldr	r3, [r3, #8]
   16750:	ldr	r5, [r5]
   16754:	mov	r1, r7
   16758:	cmp	r5, #0
   1675c:	beq	1678c <__flatcc_fb_codegen_c@@Base+0x72c>
   16760:	ldr	r2, [r5, #4]
   16764:	ldr	r2, [r2, #8]
   16768:	cmp	r2, r3
   1676c:	beq	16730 <__flatcc_fb_codegen_c@@Base+0x6d0>
   16770:	cmp	r1, #0
   16774:	ldr	r2, [pc, #1464]	; 16d34 <__flatcc_fb_codegen_c@@Base+0xcd4>
   16778:	ldrne	r1, [pc, #1544]	; 16d88 <__flatcc_fb_codegen_c@@Base+0xd28>
   1677c:	ldreq	r1, [pc, #1544]	; 16d8c <__flatcc_fb_codegen_c@@Base+0xd2c>
   16780:	ldr	r0, [r4, #204]	; 0xcc
   16784:	bl	14094 <fprintf@plt>
   16788:	b	16730 <__flatcc_fb_codegen_c@@Base+0x6d0>
   1678c:	ldr	r3, [r4, #204]	; 0xcc
   16790:	mov	r2, #4
   16794:	mov	r1, #1
   16798:	ldr	r0, [pc, #1520]	; 16d90 <__flatcc_fb_codegen_c@@Base+0xd30>
   1679c:	bl	1401c <fwrite@plt>
   167a0:	ldr	r3, [fp, #4]
   167a4:	ldr	r5, [r3, #4]
   167a8:	ldr	r7, [r3]
   167ac:	ldr	r2, [r6, #40]	; 0x28
   167b0:	ldrh	r3, [fp, #56]	; 0x38
   167b4:	sub	r3, r3, #3
   167b8:	cmp	r3, #3
   167bc:	ldrls	pc, [pc, r3, lsl #2]
   167c0:	b	16aa0 <__flatcc_fb_codegen_c@@Base+0xa40>
   167c4:	andeq	r6, r1, r8, lsr #20
   167c8:	muleq	r1, ip, r8
   167cc:	ldrdeq	r6, [r1], -r4
   167d0:	andeq	r6, r1, r4, ror #18
   167d4:	sub	r2, r2, #1
   167d8:	cmp	r2, #8
   167dc:	ldrls	pc, [pc, r2, lsl #2]
   167e0:	b	16840 <__flatcc_fb_codegen_c@@Base+0x7e0>
   167e4:	andeq	r6, r1, r8, ror r8
   167e8:	andeq	r6, r1, r8, lsl #16
   167ec:	andeq	r6, r1, r0, lsl #17
   167f0:	andeq	r6, r1, r0, lsl r8
   167f4:	andeq	r6, r1, r8, lsl r8
   167f8:	andeq	r6, r1, r0, lsr #16
   167fc:	andeq	r6, r1, r8, lsr #16
   16800:	andeq	r6, r1, r0, lsr r8
   16804:	andeq	r6, r1, r8, lsr r8
   16808:	ldr	r2, [pc, #1436]	; 16dac <__flatcc_fb_codegen_c@@Base+0xd4c>
   1680c:	b	16884 <__flatcc_fb_codegen_c@@Base+0x824>
   16810:	ldr	r2, [pc, #1432]	; 16db0 <__flatcc_fb_codegen_c@@Base+0xd50>
   16814:	b	16884 <__flatcc_fb_codegen_c@@Base+0x824>
   16818:	ldr	r2, [pc, #1424]	; 16db0 <__flatcc_fb_codegen_c@@Base+0xd50>
   1681c:	b	16884 <__flatcc_fb_codegen_c@@Base+0x824>
   16820:	ldr	r2, [pc, #1420]	; 16db4 <__flatcc_fb_codegen_c@@Base+0xd54>
   16824:	b	16884 <__flatcc_fb_codegen_c@@Base+0x824>
   16828:	ldr	r2, [pc, #1416]	; 16db8 <__flatcc_fb_codegen_c@@Base+0xd58>
   1682c:	b	16884 <__flatcc_fb_codegen_c@@Base+0x824>
   16830:	ldr	r2, [pc, #1412]	; 16dbc <__flatcc_fb_codegen_c@@Base+0xd5c>
   16834:	b	16884 <__flatcc_fb_codegen_c@@Base+0x824>
   16838:	ldr	r2, [pc, #1408]	; 16dc0 <__flatcc_fb_codegen_c@@Base+0xd60>
   1683c:	b	16884 <__flatcc_fb_codegen_c@@Base+0x824>
   16840:	ldr	r4, [pc, #1308]	; 16d64 <__flatcc_fb_codegen_c@@Base+0xd04>
   16844:	ldr	r3, [pc, #1308]	; 16d68 <__flatcc_fb_codegen_c@@Base+0xd08>
   16848:	ldr	r0, [r3]
   1684c:	ldr	r3, [pc, #1304]	; 16d6c <__flatcc_fb_codegen_c@@Base+0xd0c>
   16850:	str	r3, [sp]
   16854:	mov	r3, #226	; 0xe2
   16858:	mov	r2, r4
   1685c:	ldr	r1, [pc, #1292]	; 16d70 <__flatcc_fb_codegen_c@@Base+0xd10>
   16860:	bl	14094 <fprintf@plt>
   16864:	ldr	r3, [pc, #1368]	; 16dc4 <__flatcc_fb_codegen_c@@Base+0xd64>
   16868:	mov	r2, #226	; 0xe2
   1686c:	mov	r1, r4
   16870:	ldr	r0, [pc, #1280]	; 16d78 <__flatcc_fb_codegen_c@@Base+0xd18>
   16874:	bl	14148 <__assert_fail@plt>
   16878:	ldr	r2, [pc, #1352]	; 16dc8 <__flatcc_fb_codegen_c@@Base+0xd68>
   1687c:	b	16884 <__flatcc_fb_codegen_c@@Base+0x824>
   16880:	ldr	r2, [pc, #1348]	; 16dcc <__flatcc_fb_codegen_c@@Base+0xd6c>
   16884:	ldrd	r0, [fp, #48]	; 0x30
   16888:	strd	r0, [sp]
   1688c:	ldr	r1, [pc, #1340]	; 16dd0 <__flatcc_fb_codegen_c@@Base+0xd70>
   16890:	add	r0, sp, #244	; 0xf4
   16894:	bl	14100 <sprintf@plt>
   16898:	b	16a50 <__flatcc_fb_codegen_c@@Base+0x9f0>
   1689c:	sub	r2, r2, #1
   168a0:	cmp	r2, #8
   168a4:	ldrls	pc, [pc, r2, lsl #2]
   168a8:	b	16908 <__flatcc_fb_codegen_c@@Base+0x8a8>
   168ac:	andeq	r6, r1, r0, asr #18
   168b0:	ldrdeq	r6, [r1], -r0
   168b4:	andeq	r6, r1, r8, asr #18
   168b8:	ldrdeq	r6, [r1], -r8
   168bc:	andeq	r6, r1, r0, ror #17
   168c0:	andeq	r6, r1, r8, ror #17
   168c4:	strdeq	r6, [r1], -r0
   168c8:	strdeq	r6, [r1], -r8
   168cc:	andeq	r6, r1, r0, lsl #18
   168d0:	ldr	r2, [pc, #1236]	; 16dac <__flatcc_fb_codegen_c@@Base+0xd4c>
   168d4:	b	1694c <__flatcc_fb_codegen_c@@Base+0x8ec>
   168d8:	ldr	r2, [pc, #1232]	; 16db0 <__flatcc_fb_codegen_c@@Base+0xd50>
   168dc:	b	1694c <__flatcc_fb_codegen_c@@Base+0x8ec>
   168e0:	ldr	r2, [pc, #1224]	; 16db0 <__flatcc_fb_codegen_c@@Base+0xd50>
   168e4:	b	1694c <__flatcc_fb_codegen_c@@Base+0x8ec>
   168e8:	ldr	r2, [pc, #1220]	; 16db4 <__flatcc_fb_codegen_c@@Base+0xd54>
   168ec:	b	1694c <__flatcc_fb_codegen_c@@Base+0x8ec>
   168f0:	ldr	r2, [pc, #1216]	; 16db8 <__flatcc_fb_codegen_c@@Base+0xd58>
   168f4:	b	1694c <__flatcc_fb_codegen_c@@Base+0x8ec>
   168f8:	ldr	r2, [pc, #1212]	; 16dbc <__flatcc_fb_codegen_c@@Base+0xd5c>
   168fc:	b	1694c <__flatcc_fb_codegen_c@@Base+0x8ec>
   16900:	ldr	r2, [pc, #1208]	; 16dc0 <__flatcc_fb_codegen_c@@Base+0xd60>
   16904:	b	1694c <__flatcc_fb_codegen_c@@Base+0x8ec>
   16908:	ldr	r4, [pc, #1108]	; 16d64 <__flatcc_fb_codegen_c@@Base+0xd04>
   1690c:	ldr	r3, [pc, #1108]	; 16d68 <__flatcc_fb_codegen_c@@Base+0xd08>
   16910:	ldr	r0, [r3]
   16914:	ldr	r3, [pc, #1104]	; 16d6c <__flatcc_fb_codegen_c@@Base+0xd0c>
   16918:	str	r3, [sp]
   1691c:	mov	r3, #226	; 0xe2
   16920:	mov	r2, r4
   16924:	ldr	r1, [pc, #1092]	; 16d70 <__flatcc_fb_codegen_c@@Base+0xd10>
   16928:	bl	14094 <fprintf@plt>
   1692c:	ldr	r3, [pc, #1168]	; 16dc4 <__flatcc_fb_codegen_c@@Base+0xd64>
   16930:	mov	r2, #226	; 0xe2
   16934:	mov	r1, r4
   16938:	ldr	r0, [pc, #1080]	; 16d78 <__flatcc_fb_codegen_c@@Base+0xd18>
   1693c:	bl	14148 <__assert_fail@plt>
   16940:	ldr	r2, [pc, #1152]	; 16dc8 <__flatcc_fb_codegen_c@@Base+0xd68>
   16944:	b	1694c <__flatcc_fb_codegen_c@@Base+0x8ec>
   16948:	ldr	r2, [pc, #1148]	; 16dcc <__flatcc_fb_codegen_c@@Base+0xd6c>
   1694c:	ldrd	r0, [fp, #48]	; 0x30
   16950:	strd	r0, [sp]
   16954:	ldr	r1, [pc, #1144]	; 16dd4 <__flatcc_fb_codegen_c@@Base+0xd74>
   16958:	add	r0, sp, #244	; 0xf4
   1695c:	bl	14100 <sprintf@plt>
   16960:	b	16a50 <__flatcc_fb_codegen_c@@Base+0x9f0>
   16964:	sub	r2, r2, #1
   16968:	cmp	r2, #8
   1696c:	ldrls	pc, [pc, r2, lsl #2]
   16970:	b	169d0 <__flatcc_fb_codegen_c@@Base+0x970>
   16974:	andeq	r6, r1, r8, lsl #20
   16978:	muleq	r1, r8, r9
   1697c:	andeq	r6, r1, r0, lsl sl
   16980:	andeq	r6, r1, r0, lsr #19
   16984:	andeq	r6, r1, r8, lsr #19
   16988:			; <UNDEFINED> instruction: 0x000169b0
   1698c:			; <UNDEFINED> instruction: 0x000169b8
   16990:	andeq	r6, r1, r0, asr #19
   16994:	andeq	r6, r1, r8, asr #19
   16998:	ldr	r2, [pc, #1036]	; 16dac <__flatcc_fb_codegen_c@@Base+0xd4c>
   1699c:	b	16a14 <__flatcc_fb_codegen_c@@Base+0x9b4>
   169a0:	ldr	r2, [pc, #1032]	; 16db0 <__flatcc_fb_codegen_c@@Base+0xd50>
   169a4:	b	16a14 <__flatcc_fb_codegen_c@@Base+0x9b4>
   169a8:	ldr	r2, [pc, #1024]	; 16db0 <__flatcc_fb_codegen_c@@Base+0xd50>
   169ac:	b	16a14 <__flatcc_fb_codegen_c@@Base+0x9b4>
   169b0:	ldr	r2, [pc, #1020]	; 16db4 <__flatcc_fb_codegen_c@@Base+0xd54>
   169b4:	b	16a14 <__flatcc_fb_codegen_c@@Base+0x9b4>
   169b8:	ldr	r2, [pc, #1016]	; 16db8 <__flatcc_fb_codegen_c@@Base+0xd58>
   169bc:	b	16a14 <__flatcc_fb_codegen_c@@Base+0x9b4>
   169c0:	ldr	r2, [pc, #1012]	; 16dbc <__flatcc_fb_codegen_c@@Base+0xd5c>
   169c4:	b	16a14 <__flatcc_fb_codegen_c@@Base+0x9b4>
   169c8:	ldr	r2, [pc, #1008]	; 16dc0 <__flatcc_fb_codegen_c@@Base+0xd60>
   169cc:	b	16a14 <__flatcc_fb_codegen_c@@Base+0x9b4>
   169d0:	ldr	r4, [pc, #908]	; 16d64 <__flatcc_fb_codegen_c@@Base+0xd04>
   169d4:	ldr	r3, [pc, #908]	; 16d68 <__flatcc_fb_codegen_c@@Base+0xd08>
   169d8:	ldr	r0, [r3]
   169dc:	ldr	r3, [pc, #904]	; 16d6c <__flatcc_fb_codegen_c@@Base+0xd0c>
   169e0:	str	r3, [sp]
   169e4:	mov	r3, #226	; 0xe2
   169e8:	mov	r2, r4
   169ec:	ldr	r1, [pc, #892]	; 16d70 <__flatcc_fb_codegen_c@@Base+0xd10>
   169f0:	bl	14094 <fprintf@plt>
   169f4:	ldr	r3, [pc, #968]	; 16dc4 <__flatcc_fb_codegen_c@@Base+0xd64>
   169f8:	mov	r2, #226	; 0xe2
   169fc:	mov	r1, r4
   16a00:	ldr	r0, [pc, #880]	; 16d78 <__flatcc_fb_codegen_c@@Base+0xd18>
   16a04:	bl	14148 <__assert_fail@plt>
   16a08:	ldr	r2, [pc, #952]	; 16dc8 <__flatcc_fb_codegen_c@@Base+0xd68>
   16a0c:	b	16a14 <__flatcc_fb_codegen_c@@Base+0x9b4>
   16a10:	ldr	r2, [pc, #948]	; 16dcc <__flatcc_fb_codegen_c@@Base+0xd6c>
   16a14:	ldrb	r3, [fp, #48]	; 0x30
   16a18:	ldr	r1, [pc, #952]	; 16dd8 <__flatcc_fb_codegen_c@@Base+0xd78>
   16a1c:	add	r0, sp, #244	; 0xf4
   16a20:	bl	14100 <sprintf@plt>
   16a24:	b	16a50 <__flatcc_fb_codegen_c@@Base+0x9f0>
   16a28:	cmp	r2, #11
   16a2c:	vldreq	d7, [fp, #48]	; 0x30
   16a30:	vcvteq.f32.f64	s14, d7
   16a34:	vcvteq.f64.f32	d7, s14
   16a38:	vmoveq	r2, r3, d7
   16a3c:	ldreq	r1, [pc, #920]	; 16ddc <__flatcc_fb_codegen_c@@Base+0xd7c>
   16a40:	ldrdne	r2, [fp, #48]	; 0x30
   16a44:	ldrne	r1, [pc, #916]	; 16de0 <__flatcc_fb_codegen_c@@Base+0xd80>
   16a48:	add	r0, sp, #244	; 0xf4
   16a4c:	bl	14100 <sprintf@plt>
   16a50:	add	r2, sp, #24
   16a54:	add	r3, sp, #244	; 0xf4
   16a58:	str	r3, [sp, #12]
   16a5c:	str	r9, [sp, #8]
   16a60:	str	r2, [sp, #4]
   16a64:	str	r7, [sp]
   16a68:	mov	r3, r5
   16a6c:	ldr	r1, [pc, #880]	; 16de4 <__flatcc_fb_codegen_c@@Base+0xd84>
   16a70:	ldr	r0, [r4, #204]	; 0xcc
   16a74:	bl	14094 <fprintf@plt>
   16a78:	ldr	fp, [fp]
   16a7c:	cmp	fp, #0
   16a80:	beq	16ad8 <__flatcc_fb_codegen_c@@Base+0xa78>
   16a84:	ldr	r5, [fp, #68]	; 0x44
   16a88:	cmp	r5, #0
   16a8c:	beq	167a0 <__flatcc_fb_codegen_c@@Base+0x740>
   16a90:	mov	r1, #1
   16a94:	mov	r3, #0
   16a98:	mov	r7, r3
   16a9c:	b	16760 <__flatcc_fb_codegen_c@@Base+0x700>
   16aa0:	ldr	r4, [pc, #700]	; 16d64 <__flatcc_fb_codegen_c@@Base+0xd04>
   16aa4:	ldr	r3, [pc, #700]	; 16d68 <__flatcc_fb_codegen_c@@Base+0xd08>
   16aa8:	ldr	r0, [r3]
   16aac:	ldr	r3, [pc, #696]	; 16d6c <__flatcc_fb_codegen_c@@Base+0xd0c>
   16ab0:	str	r3, [sp]
   16ab4:	mov	r3, #260	; 0x104
   16ab8:	mov	r2, r4
   16abc:	ldr	r1, [pc, #684]	; 16d70 <__flatcc_fb_codegen_c@@Base+0xd10>
   16ac0:	bl	14094 <fprintf@plt>
   16ac4:	ldr	r3, [pc, #796]	; 16de8 <__flatcc_fb_codegen_c@@Base+0xd88>
   16ac8:	mov	r2, #260	; 0x104
   16acc:	mov	r1, r4
   16ad0:	ldr	r0, [pc, #672]	; 16d78 <__flatcc_fb_codegen_c@@Base+0xd18>
   16ad4:	bl	14148 <__assert_fail@plt>
   16ad8:	ldr	r1, [r4, #204]	; 0xcc
   16adc:	mov	r0, #10
   16ae0:	bl	140f4 <fputc@plt>
   16ae4:	cmp	sl, #3
   16ae8:	beq	166b0 <__flatcc_fb_codegen_c@@Base+0x650>
   16aec:	add	r3, sp, #24
   16af0:	mov	r2, r3
   16af4:	ldr	r1, [pc, #752]	; 16dec <__flatcc_fb_codegen_c@@Base+0xd8c>
   16af8:	ldr	r0, [r4, #204]	; 0xcc
   16afc:	bl	14094 <fprintf@plt>
   16b00:	ldr	r3, [r4, #204]	; 0xcc
   16b04:	mov	r2, #20
   16b08:	mov	r1, #1
   16b0c:	ldr	r0, [pc, #732]	; 16df0 <__flatcc_fb_codegen_c@@Base+0xd90>
   16b10:	bl	1401c <fwrite@plt>
   16b14:	ldr	r5, [r6, #20]
   16b18:	cmp	r5, #0
   16b1c:	beq	16cb0 <__flatcc_fb_codegen_c@@Base+0xc50>
   16b20:	ldr	r8, [pc, #716]	; 16df4 <__flatcc_fb_codegen_c@@Base+0xd94>
   16b24:	ldr	r7, [pc, #716]	; 16df8 <__flatcc_fb_codegen_c@@Base+0xd98>
   16b28:	ldr	r2, [r5, #4]
   16b2c:	ldr	r3, [r2, #4]
   16b30:	ldr	r2, [r2]
   16b34:	ldrh	r1, [r5, #10]
   16b38:	tst	r1, #4
   16b3c:	str	r2, [sp, #8]
   16b40:	str	r3, [sp, #4]
   16b44:	str	r2, [sp]
   16b48:	add	r2, sp, #24
   16b4c:	movne	r1, r7
   16b50:	moveq	r1, r8
   16b54:	ldr	r0, [r4, #204]	; 0xcc
   16b58:	bl	14094 <fprintf@plt>
   16b5c:	ldr	r5, [r5]
   16b60:	cmp	r5, #0
   16b64:	bne	16b28 <__flatcc_fb_codegen_c@@Base+0xac8>
   16b68:	ldr	r3, [r4, #204]	; 0xcc
   16b6c:	mov	r2, #32
   16b70:	mov	r1, #1
   16b74:	ldr	r0, [pc, #552]	; 16da4 <__flatcc_fb_codegen_c@@Base+0xd44>
   16b78:	bl	1401c <fwrite@plt>
   16b7c:	ldr	r1, [r4, #204]	; 0xcc
   16b80:	mov	r0, #10
   16b84:	bl	140f4 <fputc@plt>
   16b88:	cmp	sl, #3
   16b8c:	beq	16704 <__flatcc_fb_codegen_c@@Base+0x6a4>
   16b90:	add	r3, sp, #24
   16b94:	mov	r2, r3
   16b98:	ldr	r1, [pc, #604]	; 16dfc <__flatcc_fb_codegen_c@@Base+0xd9c>
   16b9c:	ldr	r0, [r4, #204]	; 0xcc
   16ba0:	bl	14094 <fprintf@plt>
   16ba4:	ldr	r3, [r4, #204]	; 0xcc
   16ba8:	mov	r2, #20
   16bac:	mov	r1, #1
   16bb0:	ldr	r0, [pc, #568]	; 16df0 <__flatcc_fb_codegen_c@@Base+0xd90>
   16bb4:	bl	1401c <fwrite@plt>
   16bb8:	ldr	r5, [r6, #20]
   16bbc:	cmp	r5, #0
   16bc0:	beq	16c04 <__flatcc_fb_codegen_c@@Base+0xba4>
   16bc4:	ldr	r7, [pc, #564]	; 16e00 <__flatcc_fb_codegen_c@@Base+0xda0>
   16bc8:	ldr	r6, [pc, #564]	; 16e04 <__flatcc_fb_codegen_c@@Base+0xda4>
   16bcc:	ldr	r2, [r5, #4]
   16bd0:	ldr	r3, [r2, #4]
   16bd4:	ldr	r2, [r2]
   16bd8:	ldrh	r1, [r5, #10]
   16bdc:	tst	r1, #4
   16be0:	str	r2, [sp]
   16be4:	add	r2, sp, #24
   16be8:	movne	r1, r7
   16bec:	moveq	r1, r6
   16bf0:	ldr	r0, [r4, #204]	; 0xcc
   16bf4:	bl	14094 <fprintf@plt>
   16bf8:	ldr	r5, [r5]
   16bfc:	cmp	r5, #0
   16c00:	bne	16bcc <__flatcc_fb_codegen_c@@Base+0xb6c>
   16c04:	ldr	r3, [r4, #204]	; 0xcc
   16c08:	mov	r2, #31
   16c0c:	mov	r1, #1
   16c10:	ldr	r0, [pc, #496]	; 16e08 <__flatcc_fb_codegen_c@@Base+0xda8>
   16c14:	bl	1401c <fwrite@plt>
   16c18:	ldr	r1, [r4, #204]	; 0xcc
   16c1c:	mov	r0, #10
   16c20:	bl	140f4 <fputc@plt>
   16c24:	add	sp, sp, #348	; 0x15c
   16c28:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16c2c:	ldr	r9, [pc, #268]	; 16d40 <__flatcc_fb_codegen_c@@Base+0xce0>
   16c30:	str	r9, [sp, #4]
   16c34:	add	r5, sp, #24
   16c38:	str	r5, [sp]
   16c3c:	ldr	r3, [sp, #20]
   16c40:	ldr	r2, [sp, #16]
   16c44:	ldr	r1, [pc, #328]	; 16d94 <__flatcc_fb_codegen_c@@Base+0xd34>
   16c48:	ldr	r0, [r4, #204]	; 0xcc
   16c4c:	bl	14094 <fprintf@plt>
   16c50:	str	fp, [sp, #8]
   16c54:	str	r9, [sp, #4]
   16c58:	str	r5, [sp]
   16c5c:	mov	r3, r5
   16c60:	mov	r2, r4
   16c64:	ldr	r1, [pc, #300]	; 16d98 <__flatcc_fb_codegen_c@@Base+0xd38>
   16c68:	ldr	r0, [r4, #204]	; 0xcc
   16c6c:	bl	14094 <fprintf@plt>
   16c70:	add	r3, sp, #24
   16c74:	str	r3, [sp]
   16c78:	mov	r3, r4
   16c7c:	mov	r2, r4
   16c80:	ldr	r1, [pc, #388]	; 16e0c <__flatcc_fb_codegen_c@@Base+0xdac>
   16c84:	ldr	r0, [r4, #204]	; 0xcc
   16c88:	bl	14094 <fprintf@plt>
   16c8c:	ldr	fp, [r6, #20]
   16c90:	cmp	fp, #0
   16c94:	beq	16ca0 <__flatcc_fb_codegen_c@@Base+0xc40>
   16c98:	ldr	r8, [pc, #164]	; 16d44 <__flatcc_fb_codegen_c@@Base+0xce4>
   16c9c:	b	16a84 <__flatcc_fb_codegen_c@@Base+0xa24>
   16ca0:	ldr	r1, [r4, #204]	; 0xcc
   16ca4:	mov	r0, #10
   16ca8:	bl	140f4 <fputc@plt>
   16cac:	b	16aec <__flatcc_fb_codegen_c@@Base+0xa8c>
   16cb0:	ldr	r3, [r4, #204]	; 0xcc
   16cb4:	mov	r2, #32
   16cb8:	mov	r1, #1
   16cbc:	ldr	r0, [pc, #224]	; 16da4 <__flatcc_fb_codegen_c@@Base+0xd44>
   16cc0:	bl	1401c <fwrite@plt>
   16cc4:	ldr	r1, [r4, #204]	; 0xcc
   16cc8:	mov	r0, #10
   16ccc:	bl	140f4 <fputc@plt>
   16cd0:	b	16b90 <__flatcc_fb_codegen_c@@Base+0xb30>
   16cd4:	ldr	r9, [pc, #168]	; 16d84 <__flatcc_fb_codegen_c@@Base+0xd24>
   16cd8:	str	r9, [sp, #4]
   16cdc:	add	r5, sp, #24
   16ce0:	str	r5, [sp]
   16ce4:	ldr	r3, [sp, #20]
   16ce8:	ldr	r2, [sp, #16]
   16cec:	ldr	r1, [pc, #160]	; 16d94 <__flatcc_fb_codegen_c@@Base+0xd34>
   16cf0:	ldr	r0, [r4, #204]	; 0xcc
   16cf4:	bl	14094 <fprintf@plt>
   16cf8:	str	fp, [sp, #8]
   16cfc:	str	r9, [sp, #4]
   16d00:	str	r5, [sp]
   16d04:	mov	r3, r5
   16d08:	mov	r2, r4
   16d0c:	ldr	r1, [pc, #132]	; 16d98 <__flatcc_fb_codegen_c@@Base+0xd38>
   16d10:	ldr	r0, [r4, #204]	; 0xcc
   16d14:	bl	14094 <fprintf@plt>
   16d18:	b	16698 <__flatcc_fb_codegen_c@@Base+0x638>
   16d1c:	andeq	ip, r3, ip, lsr #19
   16d20:			; <UNDEFINED> instruction: 0x000004b4
   16d24:	andeq	ip, r3, r8, asr sl
   16d28:	strdeq	ip, [r3], -ip	; <UNPREDICTABLE>
   16d2c:			; <UNDEFINED> instruction: 0x000004b5
   16d30:	andeq	ip, r3, ip, lsr sp
   16d34:	muleq	r4, r0, r4
   16d38:	andeq	ip, r3, r4, asr #24
   16d3c:	andeq	ip, r3, ip, asr ip
   16d40:	andeq	ip, r3, r4, lsr #25
   16d44:	andeq	r5, r4, r4, asr #3
   16d48:	andeq	ip, r3, r4, ror #24
   16d4c:	andeq	ip, r3, ip, ror #24
   16d50:	andeq	ip, r3, r4, ror ip
   16d54:	andeq	ip, r3, ip, ror ip
   16d58:	andeq	ip, r3, r4, lsl #25
   16d5c:	andeq	ip, r3, ip, lsl #25
   16d60:	muleq	r3, r4, ip
   16d64:	andeq	ip, r3, ip, asr sp
   16d68:	andeq	r7, r6, r8, lsr #1
   16d6c:			; <UNDEFINED> instruction: 0x0003cdb4
   16d70:	andeq	ip, r3, r8, lsr #27
   16d74:			; <UNDEFINED> instruction: 0x0003c9b8
   16d78:	andeq	r5, r4, r0, ror #3
   16d7c:	andeq	ip, r3, r8, lsr ip
   16d80:	andeq	ip, r3, r0, asr ip
   16d84:	muleq	r3, ip, ip
   16d88:	andeq	ip, r3, ip, ror #27
   16d8c:	strdeq	ip, [r3], -r4
   16d90:	andeq	sp, r3, ip, asr r8
   16d94:	strdeq	ip, [r3], -ip	; <UNPREDICTABLE>
   16d98:	andeq	ip, r3, r4, lsl lr
   16d9c:	strdeq	ip, [r3], -ip	; <UNPREDICTABLE>
   16da0:	andeq	ip, r3, r4, lsr pc
   16da4:	andeq	ip, r3, r4, lsr #31
   16da8:	andeq	sp, r3, r4
   16dac:			; <UNDEFINED> instruction: 0x0003ccbc
   16db0:	ldrdeq	ip, [r3], -r4
   16db4:	ldrdeq	ip, [r3], -ip	; <UNPREDICTABLE>
   16db8:	andeq	ip, r3, r4, ror #25
   16dbc:	andeq	ip, r3, ip, ror #25
   16dc0:	strdeq	ip, [r3], -r4
   16dc4:	andeq	ip, r3, ip, asr #19
   16dc8:			; <UNDEFINED> instruction: 0x0003ccb0
   16dcc:	andeq	ip, r3, r8, asr #25
   16dd0:	andeq	ip, r3, ip, asr lr
   16dd4:	andeq	ip, r3, r8, ror #28
   16dd8:	andeq	ip, r3, r4, ror lr
   16ddc:	andeq	ip, r3, ip, ror lr
   16de0:	andeq	ip, r3, r0, lsl #29
   16de4:	andeq	ip, r3, r4, lsl #29
   16de8:	ldrdeq	ip, [r3], -r8
   16dec:	andeq	ip, r3, r4, lsr #29
   16df0:	andeq	ip, r3, r4, ror #29
   16df4:	andeq	ip, r3, r0, lsl #31
   16df8:	andeq	ip, r3, ip, asr #30
   16dfc:	andeq	ip, r3, r8, asr #31
   16e00:	andeq	sp, r3, ip, lsr r0
   16e04:	andeq	sp, r3, ip, rrx
   16e08:	andeq	sp, r3, ip, lsl #1
   16e0c:	andeq	ip, r3, r0, asr #28
   16e10:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16e14:	sub	sp, sp, #484	; 0x1e4
   16e18:	mov	r4, r0
   16e1c:	mov	r6, r1
   16e20:	ldr	r3, [r0, #212]	; 0xd4
   16e24:	ldr	fp, [r3, #132]	; 0x84
   16e28:	str	r0, [sp, #32]
   16e2c:	mov	r5, #220	; 0xdc
   16e30:	mov	r2, r5
   16e34:	mov	r1, #0
   16e38:	add	r0, sp, #260	; 0x104
   16e3c:	bl	140ac <memset@plt>
   16e40:	mov	r2, r5
   16e44:	mov	r1, #0
   16e48:	add	r0, sp, #40	; 0x28
   16e4c:	bl	140ac <memset@plt>
   16e50:	ldrh	r3, [r6, #8]
   16e54:	cmp	r3, #1
   16e58:	bne	16eac <__flatcc_fb_codegen_c@@Base+0xe4c>
   16e5c:	ldrh	r3, [r6, #104]	; 0x68
   16e60:	cmp	r3, #0
   16e64:	bne	16ed4 <__flatcc_fb_codegen_c@@Base+0xe74>
   16e68:	ldrd	r2, [r6, #96]	; 0x60
   16e6c:	orrs	r3, r2, r3
   16e70:	bne	16ec0 <__flatcc_fb_codegen_c@@Base+0xe60>
   16e74:	add	r2, sp, #260	; 0x104
   16e78:	mov	r1, r6
   16e7c:	ldr	r0, [r6, #12]
   16e80:	bl	15edc <__flatcc_fb_scoped_symbol_name@@Base>
   16e84:	ldr	r5, [r6, #32]
   16e88:	cmp	r5, #0
   16e8c:	beq	16f70 <__flatcc_fb_codegen_c@@Base+0xf10>
   16e90:	mov	r1, #1
   16e94:	mov	r3, #0
   16e98:	ldr	r9, [pc, #2796]	; 1798c <__flatcc_fb_codegen_c@@Base+0x192c>
   16e9c:	ldr	sl, [pc, #2796]	; 17990 <__flatcc_fb_codegen_c@@Base+0x1930>
   16ea0:	ldr	r8, [pc, #2796]	; 17994 <__flatcc_fb_codegen_c@@Base+0x1934>
   16ea4:	mov	r7, r3
   16ea8:	b	16f30 <__flatcc_fb_codegen_c@@Base+0xed0>
   16eac:	ldr	r3, [pc, #2788]	; 17998 <__flatcc_fb_codegen_c@@Base+0x1938>
   16eb0:	mov	r2, #936	; 0x3a8
   16eb4:	ldr	r1, [pc, #2784]	; 1799c <__flatcc_fb_codegen_c@@Base+0x193c>
   16eb8:	ldr	r0, [pc, #2784]	; 179a0 <__flatcc_fb_codegen_c@@Base+0x1940>
   16ebc:	bl	14148 <__assert_fail@plt>
   16ec0:	ldr	r3, [pc, #2768]	; 17998 <__flatcc_fb_codegen_c@@Base+0x1938>
   16ec4:	ldr	r2, [pc, #2776]	; 179a4 <__flatcc_fb_codegen_c@@Base+0x1944>
   16ec8:	ldr	r1, [pc, #2764]	; 1799c <__flatcc_fb_codegen_c@@Base+0x193c>
   16ecc:	ldr	r0, [pc, #2772]	; 179a8 <__flatcc_fb_codegen_c@@Base+0x1948>
   16ed0:	bl	14148 <__assert_fail@plt>
   16ed4:	ldrd	r2, [r6, #112]	; 0x70
   16ed8:	orrs	r3, r2, r3
   16edc:	bne	16e74 <__flatcc_fb_codegen_c@@Base+0xe14>
   16ee0:	ldrd	r2, [r6, #96]	; 0x60
   16ee4:	orrs	r3, r2, r3
   16ee8:	beq	16e74 <__flatcc_fb_codegen_c@@Base+0xe14>
   16eec:	ldr	r3, [pc, #2724]	; 17998 <__flatcc_fb_codegen_c@@Base+0x1938>
   16ef0:	ldr	r2, [pc, #2740]	; 179ac <__flatcc_fb_codegen_c@@Base+0x194c>
   16ef4:	ldr	r1, [pc, #2720]	; 1799c <__flatcc_fb_codegen_c@@Base+0x193c>
   16ef8:	ldr	r0, [pc, #2736]	; 179b0 <__flatcc_fb_codegen_c@@Base+0x1950>
   16efc:	bl	14148 <__assert_fail@plt>
   16f00:	ldr	r2, [r5, #4]
   16f04:	ldr	r3, [r2]
   16f08:	ldr	r2, [r2, #4]
   16f0c:	mov	r1, r8
   16f10:	ldr	r0, [r4, #204]	; 0xcc
   16f14:	bl	14094 <fprintf@plt>
   16f18:	ldr	r3, [r5, #4]
   16f1c:	ldr	r3, [r3, #8]
   16f20:	ldr	r5, [r5]
   16f24:	mov	r1, r7
   16f28:	cmp	r5, #0
   16f2c:	beq	16f5c <__flatcc_fb_codegen_c@@Base+0xefc>
   16f30:	ldr	r2, [r5, #4]
   16f34:	ldr	r2, [r2, #8]
   16f38:	cmp	r2, r3
   16f3c:	beq	16f00 <__flatcc_fb_codegen_c@@Base+0xea0>
   16f40:	cmp	r1, #0
   16f44:	mov	r2, r9
   16f48:	movne	r1, sl
   16f4c:	ldreq	r1, [pc, #2656]	; 179b4 <__flatcc_fb_codegen_c@@Base+0x1954>
   16f50:	ldr	r0, [r4, #204]	; 0xcc
   16f54:	bl	14094 <fprintf@plt>
   16f58:	b	16f00 <__flatcc_fb_codegen_c@@Base+0xea0>
   16f5c:	ldr	r3, [r4, #204]	; 0xcc
   16f60:	mov	r2, #4
   16f64:	mov	r1, #1
   16f68:	ldr	r0, [pc, #2632]	; 179b8 <__flatcc_fb_codegen_c@@Base+0x1958>
   16f6c:	bl	1401c <fwrite@plt>
   16f70:	ldrd	r2, [r6, #112]	; 0x70
   16f74:	orrs	r3, r2, r3
   16f78:	beq	16fb4 <__flatcc_fb_codegen_c@@Base+0xf54>
   16f7c:	cmp	fp, #0
   16f80:	bne	17080 <__flatcc_fb_codegen_c@@Base+0x1020>
   16f84:	add	r2, sp, #260	; 0x104
   16f88:	ldr	r1, [pc, #2604]	; 179bc <__flatcc_fb_codegen_c@@Base+0x195c>
   16f8c:	ldr	r0, [r4, #204]	; 0xcc
   16f90:	bl	14094 <fprintf@plt>
   16f94:	ldr	r5, [r6, #20]
   16f98:	cmp	r5, #0
   16f9c:	beq	17404 <__flatcc_fb_codegen_c@@Base+0x13a4>
   16fa0:	mov	r3, #0
   16fa4:	str	r3, [sp, #28]
   16fa8:	str	r3, [sp, #36]	; 0x24
   16fac:	mov	r7, r3
   16fb0:	b	17698 <__flatcc_fb_codegen_c@@Base+0x1638>
   16fb4:	add	r5, sp, #260	; 0x104
   16fb8:	mov	r2, r5
   16fbc:	ldr	r1, [pc, #2556]	; 179c0 <__flatcc_fb_codegen_c@@Base+0x1960>
   16fc0:	ldr	r0, [r4, #204]	; 0xcc
   16fc4:	bl	14094 <fprintf@plt>
   16fc8:	str	r5, [sp]
   16fcc:	mov	r3, r5
   16fd0:	mov	r2, r5
   16fd4:	ldr	r1, [pc, #2536]	; 179c4 <__flatcc_fb_codegen_c@@Base+0x1964>
   16fd8:	ldr	r0, [r4, #204]	; 0xcc
   16fdc:	bl	14094 <fprintf@plt>
   16fe0:	str	r5, [sp]
   16fe4:	mov	r3, r5
   16fe8:	mov	r2, r5
   16fec:	ldr	r1, [pc, #2516]	; 179c8 <__flatcc_fb_codegen_c@@Base+0x1968>
   16ff0:	ldr	r0, [r4, #204]	; 0xcc
   16ff4:	bl	14094 <fprintf@plt>
   16ff8:	str	r5, [sp]
   16ffc:	mov	r3, r5
   17000:	mov	r2, r5
   17004:	ldr	r1, [pc, #2496]	; 179cc <__flatcc_fb_codegen_c@@Base+0x196c>
   17008:	ldr	r0, [r4, #204]	; 0xcc
   1700c:	bl	14094 <fprintf@plt>
   17010:	ldrd	r2, [r6, #112]	; 0x70
   17014:	strd	r2, [sp]
   17018:	add	r2, sp, #260	; 0x104
   1701c:	ldr	r1, [pc, #2476]	; 179d0 <__flatcc_fb_codegen_c@@Base+0x1970>
   17020:	ldr	r0, [r4, #204]	; 0xcc
   17024:	bl	14094 <fprintf@plt>
   17028:	str	r4, [sp]
   1702c:	add	r3, sp, #260	; 0x104
   17030:	mov	r2, r3
   17034:	ldr	r1, [pc, #2456]	; 179d4 <__flatcc_fb_codegen_c@@Base+0x1974>
   17038:	ldr	r0, [r4, #204]	; 0xcc
   1703c:	bl	14094 <fprintf@plt>
   17040:	add	r3, sp, #260	; 0x104
   17044:	mov	r2, r4
   17048:	ldr	r1, [pc, #2440]	; 179d8 <__flatcc_fb_codegen_c@@Base+0x1978>
   1704c:	ldr	r0, [r4, #204]	; 0xcc
   17050:	bl	14094 <fprintf@plt>
   17054:	ldr	r1, [r4, #204]	; 0xcc
   17058:	mov	r0, #10
   1705c:	bl	140f4 <fputc@plt>
   17060:	ldr	r5, [r6, #20]
   17064:	cmp	r5, #0
   17068:	beq	17608 <__flatcc_fb_codegen_c@@Base+0x15a8>
   1706c:	mov	r9, #0
   17070:	mov	r8, r9
   17074:	ldr	fp, [pc, #2400]	; 179dc <__flatcc_fb_codegen_c@@Base+0x197c>
   17078:	ldr	sl, [pc, #2316]	; 1798c <__flatcc_fb_codegen_c@@Base+0x192c>
   1707c:	b	1771c <__flatcc_fb_codegen_c@@Base+0x16bc>
   17080:	ldr	r3, [r4, #204]	; 0xcc
   17084:	mov	r2, #16
   17088:	mov	r1, #1
   1708c:	ldr	r0, [pc, #2380]	; 179e0 <__flatcc_fb_codegen_c@@Base+0x1980>
   17090:	bl	1401c <fwrite@plt>
   17094:	add	r2, sp, #260	; 0x104
   17098:	ldr	r1, [pc, #2332]	; 179bc <__flatcc_fb_codegen_c@@Base+0x195c>
   1709c:	ldr	r0, [r4, #204]	; 0xcc
   170a0:	bl	14094 <fprintf@plt>
   170a4:	ldr	r5, [r6, #20]
   170a8:	cmp	r5, #0
   170ac:	bne	16fa0 <__flatcc_fb_codegen_c@@Base+0xf40>
   170b0:	mov	r3, #0
   170b4:	str	r3, [sp, #36]	; 0x24
   170b8:	mov	r7, r3
   170bc:	ldr	r3, [r6, #112]	; 0x70
   170c0:	subs	r3, r3, r7
   170c4:	bne	17484 <__flatcc_fb_codegen_c@@Base+0x1424>
   170c8:	ldr	r3, [r4, #204]	; 0xcc
   170cc:	mov	r2, #3
   170d0:	mov	r1, #1
   170d4:	ldr	r0, [pc, #2312]	; 179e4 <__flatcc_fb_codegen_c@@Base+0x1984>
   170d8:	bl	1401c <fwrite@plt>
   170dc:	ldr	r3, [r4, #204]	; 0xcc
   170e0:	mov	r2, #15
   170e4:	mov	r1, #1
   170e8:	ldr	r0, [pc, #2296]	; 179e8 <__flatcc_fb_codegen_c@@Base+0x1988>
   170ec:	bl	1401c <fwrite@plt>
   170f0:	b	17418 <__flatcc_fb_codegen_c@@Base+0x13b8>
   170f4:	ldr	r2, [r8, #4]
   170f8:	ldr	r3, [r2]
   170fc:	ldr	r2, [r2, #4]
   17100:	ldr	r1, [pc, #2188]	; 17994 <__flatcc_fb_codegen_c@@Base+0x1934>
   17104:	ldr	r0, [r4, #204]	; 0xcc
   17108:	bl	14094 <fprintf@plt>
   1710c:	ldr	r3, [r8, #4]
   17110:	ldr	r3, [r3, #8]
   17114:	ldr	r8, [r8]
   17118:	mov	r1, r9
   1711c:	cmp	r8, #0
   17120:	beq	17150 <__flatcc_fb_codegen_c@@Base+0x10f0>
   17124:	ldr	r2, [r8, #4]
   17128:	ldr	r2, [r2, #8]
   1712c:	cmp	r2, r3
   17130:	beq	170f4 <__flatcc_fb_codegen_c@@Base+0x1094>
   17134:	cmp	r1, #0
   17138:	ldr	r2, [pc, #2220]	; 179ec <__flatcc_fb_codegen_c@@Base+0x198c>
   1713c:	ldrne	r1, [pc, #2124]	; 17990 <__flatcc_fb_codegen_c@@Base+0x1930>
   17140:	ldreq	r1, [pc, #2156]	; 179b4 <__flatcc_fb_codegen_c@@Base+0x1954>
   17144:	ldr	r0, [r4, #204]	; 0xcc
   17148:	bl	14094 <fprintf@plt>
   1714c:	b	170f4 <__flatcc_fb_codegen_c@@Base+0x1094>
   17150:	ldr	r3, [r4, #204]	; 0xcc
   17154:	mov	r2, #4
   17158:	mov	r1, #1
   1715c:	ldr	r0, [pc, #2132]	; 179b8 <__flatcc_fb_codegen_c@@Base+0x1958>
   17160:	bl	1401c <fwrite@plt>
   17164:	ldr	r3, [r5, #4]
   17168:	ldr	r8, [r3, #4]
   1716c:	ldr	r9, [r3]
   17170:	cmp	r7, #0
   17174:	ldrheq	sl, [r6, #104]	; 0x68
   17178:	ldrhne	sl, [r5, #74]	; 0x4a
   1717c:	cmp	fp, #0
   17180:	beq	17644 <__flatcc_fb_codegen_c@@Base+0x15e4>
   17184:	ldr	r3, [r5, #80]	; 0x50
   17188:	subs	r3, r3, r7
   1718c:	bne	171fc <__flatcc_fb_codegen_c@@Base+0x119c>
   17190:	ldrh	r3, [r5, #72]	; 0x48
   17194:	tst	r3, #4
   17198:	bne	1761c <__flatcc_fb_codegen_c@@Base+0x15bc>
   1719c:	ldrh	r3, [r5, #24]
   171a0:	cmp	r3, #8
   171a4:	beq	17218 <__flatcc_fb_codegen_c@@Base+0x11b8>
   171a8:	cmp	r3, #14
   171ac:	beq	17354 <__flatcc_fb_codegen_c@@Base+0x12f4>
   171b0:	ldr	r2, [pc, #2104]	; 179f0 <__flatcc_fb_codegen_c@@Base+0x1990>
   171b4:	ldr	r1, [pc, #2104]	; 179f4 <__flatcc_fb_codegen_c@@Base+0x1994>
   171b8:	ldr	r0, [r4, #204]	; 0xcc
   171bc:	bl	14094 <fprintf@plt>
   171c0:	ldr	r5, [pc, #2096]	; 179f8 <__flatcc_fb_codegen_c@@Base+0x1998>
   171c4:	ldr	r4, [pc, #2000]	; 1799c <__flatcc_fb_codegen_c@@Base+0x193c>
   171c8:	ldr	r3, [pc, #2092]	; 179fc <__flatcc_fb_codegen_c@@Base+0x199c>
   171cc:	ldr	r0, [r3]
   171d0:	ldr	r3, [pc, #2088]	; 17a00 <__flatcc_fb_codegen_c@@Base+0x19a0>
   171d4:	str	r3, [sp]
   171d8:	mov	r3, r5
   171dc:	mov	r2, r4
   171e0:	ldr	r1, [pc, #2076]	; 17a04 <__flatcc_fb_codegen_c@@Base+0x19a4>
   171e4:	bl	14094 <fprintf@plt>
   171e8:	ldr	r3, [pc, #1960]	; 17998 <__flatcc_fb_codegen_c@@Base+0x1938>
   171ec:	mov	r2, r5
   171f0:	mov	r1, r4
   171f4:	ldr	r0, [pc, #2060]	; 17a08 <__flatcc_fb_codegen_c@@Base+0x19a8>
   171f8:	bl	14148 <__assert_fail@plt>
   171fc:	ldr	r2, [sp, #36]	; 0x24
   17200:	add	r7, r2, #1
   17204:	ldr	r1, [pc, #2048]	; 17a0c <__flatcc_fb_codegen_c@@Base+0x19ac>
   17208:	ldr	r0, [r4, #204]	; 0xcc
   1720c:	bl	14094 <fprintf@plt>
   17210:	str	r7, [sp, #36]	; 0x24
   17214:	b	17190 <__flatcc_fb_codegen_c@@Base+0x1130>
   17218:	ldr	r3, [r5, #16]
   1721c:	cmp	r3, #5
   17220:	beq	1728c <__flatcc_fb_codegen_c@@Base+0x122c>
   17224:	sub	r3, r3, #1
   17228:	cmp	r3, #10
   1722c:	ldrls	pc, [pc, r3, lsl #2]
   17230:	b	172e8 <__flatcc_fb_codegen_c@@Base+0x1288>
   17234:	andeq	r7, r1, r0, lsr #6
   17238:	andeq	r7, r1, r0, ror #4
   1723c:	andeq	r7, r1, ip, lsr #6
   17240:	andeq	r7, r1, ip, ror #4
   17244:	muleq	r1, r8, r2
   17248:	andeq	r7, r1, r0, lsr #5
   1724c:	andeq	r7, r1, ip, lsr #5
   17250:			; <UNDEFINED> instruction: 0x000172b8
   17254:	andeq	r7, r1, r4, asr #5
   17258:	ldrdeq	r7, [r1], -ip
   1725c:	ldrdeq	r7, [r1], -r0
   17260:	ldr	r2, [pc, #1828]	; 1798c <__flatcc_fb_codegen_c@@Base+0x192c>
   17264:	ldr	r3, [pc, #1956]	; 17a10 <__flatcc_fb_codegen_c@@Base+0x19b0>
   17268:	b	17274 <__flatcc_fb_codegen_c@@Base+0x1214>
   1726c:	ldr	r2, [pc, #1816]	; 1798c <__flatcc_fb_codegen_c@@Base+0x192c>
   17270:	ldr	r3, [pc, #1948]	; 17a14 <__flatcc_fb_codegen_c@@Base+0x19b4>
   17274:	cmp	fp, #0
   17278:	beq	17338 <__flatcc_fb_codegen_c@@Base+0x12d8>
   1727c:	ldr	r1, [pc, #1940]	; 17a18 <__flatcc_fb_codegen_c@@Base+0x19b8>
   17280:	ldr	r0, [r4, #204]	; 0xcc
   17284:	bl	14094 <fprintf@plt>
   17288:	b	173a8 <__flatcc_fb_codegen_c@@Base+0x1348>
   1728c:	ldr	r2, [sp, #32]
   17290:	ldr	r3, [pc, #1924]	; 17a1c <__flatcc_fb_codegen_c@@Base+0x19bc>
   17294:	b	17274 <__flatcc_fb_codegen_c@@Base+0x1214>
   17298:	ldr	r2, [pc, #1772]	; 1798c <__flatcc_fb_codegen_c@@Base+0x192c>
   1729c:	b	17290 <__flatcc_fb_codegen_c@@Base+0x1230>
   172a0:	ldr	r2, [pc, #1764]	; 1798c <__flatcc_fb_codegen_c@@Base+0x192c>
   172a4:	ldr	r3, [pc, #1908]	; 17a20 <__flatcc_fb_codegen_c@@Base+0x19c0>
   172a8:	b	17274 <__flatcc_fb_codegen_c@@Base+0x1214>
   172ac:	ldr	r2, [pc, #1752]	; 1798c <__flatcc_fb_codegen_c@@Base+0x192c>
   172b0:	ldr	r3, [pc, #1900]	; 17a24 <__flatcc_fb_codegen_c@@Base+0x19c4>
   172b4:	b	17274 <__flatcc_fb_codegen_c@@Base+0x1214>
   172b8:	ldr	r2, [pc, #1740]	; 1798c <__flatcc_fb_codegen_c@@Base+0x192c>
   172bc:	ldr	r3, [pc, #1892]	; 17a28 <__flatcc_fb_codegen_c@@Base+0x19c8>
   172c0:	b	17274 <__flatcc_fb_codegen_c@@Base+0x1214>
   172c4:	ldr	r2, [pc, #1728]	; 1798c <__flatcc_fb_codegen_c@@Base+0x192c>
   172c8:	ldr	r3, [pc, #1884]	; 17a2c <__flatcc_fb_codegen_c@@Base+0x19cc>
   172cc:	b	17274 <__flatcc_fb_codegen_c@@Base+0x1214>
   172d0:	ldr	r2, [pc, #1716]	; 1798c <__flatcc_fb_codegen_c@@Base+0x192c>
   172d4:	ldr	r3, [pc, #1876]	; 17a30 <__flatcc_fb_codegen_c@@Base+0x19d0>
   172d8:	b	17274 <__flatcc_fb_codegen_c@@Base+0x1214>
   172dc:	ldr	r2, [pc, #1704]	; 1798c <__flatcc_fb_codegen_c@@Base+0x192c>
   172e0:	ldr	r3, [pc, #1868]	; 17a34 <__flatcc_fb_codegen_c@@Base+0x19d4>
   172e4:	b	17274 <__flatcc_fb_codegen_c@@Base+0x1214>
   172e8:	ldr	r4, [pc, #1864]	; 17a38 <__flatcc_fb_codegen_c@@Base+0x19d8>
   172ec:	ldr	r3, [pc, #1800]	; 179fc <__flatcc_fb_codegen_c@@Base+0x199c>
   172f0:	ldr	r0, [r3]
   172f4:	ldr	r3, [pc, #1796]	; 17a00 <__flatcc_fb_codegen_c@@Base+0x19a0>
   172f8:	str	r3, [sp]
   172fc:	mov	r3, #141	; 0x8d
   17300:	mov	r2, r4
   17304:	ldr	r1, [pc, #1784]	; 17a04 <__flatcc_fb_codegen_c@@Base+0x19a4>
   17308:	bl	14094 <fprintf@plt>
   1730c:	ldr	r3, [pc, #1832]	; 17a3c <__flatcc_fb_codegen_c@@Base+0x19dc>
   17310:	mov	r2, #141	; 0x8d
   17314:	mov	r1, r4
   17318:	ldr	r0, [pc, #1768]	; 17a08 <__flatcc_fb_codegen_c@@Base+0x19a8>
   1731c:	bl	14148 <__assert_fail@plt>
   17320:	ldr	r2, [pc, #1636]	; 1798c <__flatcc_fb_codegen_c@@Base+0x192c>
   17324:	ldr	r3, [pc, #1812]	; 17a40 <__flatcc_fb_codegen_c@@Base+0x19e0>
   17328:	b	17274 <__flatcc_fb_codegen_c@@Base+0x1214>
   1732c:	ldr	r2, [pc, #1624]	; 1798c <__flatcc_fb_codegen_c@@Base+0x192c>
   17330:	ldr	r3, [pc, #1804]	; 17a44 <__flatcc_fb_codegen_c@@Base+0x19e4>
   17334:	b	17274 <__flatcc_fb_codegen_c@@Base+0x1214>
   17338:	str	r3, [sp]
   1733c:	mov	r3, r2
   17340:	mov	r2, sl
   17344:	ldr	r1, [pc, #1788]	; 17a48 <__flatcc_fb_codegen_c@@Base+0x19e8>
   17348:	ldr	r0, [r4, #204]	; 0xcc
   1734c:	bl	14094 <fprintf@plt>
   17350:	b	173a8 <__flatcc_fb_codegen_c@@Base+0x1348>
   17354:	ldr	r3, [r5, #16]
   17358:	ldrh	r1, [r3, #8]
   1735c:	bic	r2, r1, #2
   17360:	uxth	r2, r2
   17364:	cmp	r2, #1
   17368:	bne	173cc <__flatcc_fb_codegen_c@@Base+0x136c>
   1736c:	ldr	r2, [pc, #1752]	; 17a4c <__flatcc_fb_codegen_c@@Base+0x19ec>
   17370:	ldr	r7, [pc, #1556]	; 1798c <__flatcc_fb_codegen_c@@Base+0x192c>
   17374:	cmp	r1, #1
   17378:	movne	r7, r2
   1737c:	add	r2, sp, #40	; 0x28
   17380:	mov	r1, r3
   17384:	ldr	r0, [r3, #12]
   17388:	bl	15edc <__flatcc_fb_scoped_symbol_name@@Base>
   1738c:	cmp	fp, #0
   17390:	beq	173e0 <__flatcc_fb_codegen_c@@Base+0x1380>
   17394:	mov	r3, r7
   17398:	add	r2, sp, #40	; 0x28
   1739c:	ldr	r1, [pc, #1708]	; 17a50 <__flatcc_fb_codegen_c@@Base+0x19f0>
   173a0:	ldr	r0, [r4, #204]	; 0xcc
   173a4:	bl	14094 <fprintf@plt>
   173a8:	mov	r3, r9
   173ac:	mov	r2, r8
   173b0:	ldr	r1, [pc, #1692]	; 17a54 <__flatcc_fb_codegen_c@@Base+0x19f4>
   173b4:	ldr	r0, [r4, #204]	; 0xcc
   173b8:	bl	14094 <fprintf@plt>
   173bc:	ldr	r7, [r5, #80]	; 0x50
   173c0:	ldr	r3, [r5, #88]	; 0x58
   173c4:	add	r7, r7, r3
   173c8:	b	1768c <__flatcc_fb_codegen_c@@Base+0x162c>
   173cc:	ldr	r3, [pc, #1476]	; 17998 <__flatcc_fb_codegen_c@@Base+0x1938>
   173d0:	ldr	r2, [pc, #1664]	; 17a58 <__flatcc_fb_codegen_c@@Base+0x19f8>
   173d4:	ldr	r1, [pc, #1472]	; 1799c <__flatcc_fb_codegen_c@@Base+0x193c>
   173d8:	ldr	r0, [pc, #1660]	; 17a5c <__flatcc_fb_codegen_c@@Base+0x19fc>
   173dc:	bl	14148 <__assert_fail@plt>
   173e0:	str	r7, [sp]
   173e4:	add	r3, sp, #40	; 0x28
   173e8:	mov	r2, sl
   173ec:	ldr	r1, [pc, #1644]	; 17a60 <__flatcc_fb_codegen_c@@Base+0x1a00>
   173f0:	ldr	r0, [r4, #204]	; 0xcc
   173f4:	bl	14094 <fprintf@plt>
   173f8:	b	173a8 <__flatcc_fb_codegen_c@@Base+0x1348>
   173fc:	cmp	fp, #0
   17400:	bne	170bc <__flatcc_fb_codegen_c@@Base+0x105c>
   17404:	ldr	r3, [r4, #204]	; 0xcc
   17408:	mov	r2, #3
   1740c:	mov	r1, #1
   17410:	ldr	r0, [pc, #1484]	; 179e4 <__flatcc_fb_codegen_c@@Base+0x1984>
   17414:	bl	1401c <fwrite@plt>
   17418:	add	r5, sp, #260	; 0x104
   1741c:	ldrd	r2, [r6, #112]	; 0x70
   17420:	strd	r2, [sp]
   17424:	mov	r2, r5
   17428:	ldr	r1, [pc, #1588]	; 17a64 <__flatcc_fb_codegen_c@@Base+0x1a04>
   1742c:	ldr	r0, [r4, #204]	; 0xcc
   17430:	bl	14094 <fprintf@plt>
   17434:	str	r5, [sp]
   17438:	mov	r3, r5
   1743c:	mov	r2, r5
   17440:	ldr	r1, [pc, #1568]	; 17a68 <__flatcc_fb_codegen_c@@Base+0x1a08>
   17444:	ldr	r0, [r4, #204]	; 0xcc
   17448:	bl	14094 <fprintf@plt>
   1744c:	str	r5, [sp]
   17450:	mov	r3, r5
   17454:	mov	r2, r5
   17458:	ldr	r1, [pc, #1548]	; 17a6c <__flatcc_fb_codegen_c@@Base+0x1a0c>
   1745c:	ldr	r0, [r4, #204]	; 0xcc
   17460:	bl	14094 <fprintf@plt>
   17464:	str	r4, [sp, #4]
   17468:	str	r5, [sp]
   1746c:	mov	r3, r5
   17470:	mov	r2, r5
   17474:	ldr	r1, [pc, #1524]	; 17a70 <__flatcc_fb_codegen_c@@Base+0x1a10>
   17478:	ldr	r0, [r4, #204]	; 0xcc
   1747c:	bl	14094 <fprintf@plt>
   17480:	b	17010 <__flatcc_fb_codegen_c@@Base+0xfb0>
   17484:	ldr	r2, [sp, #36]	; 0x24
   17488:	ldr	r1, [pc, #1404]	; 17a0c <__flatcc_fb_codegen_c@@Base+0x19ac>
   1748c:	ldr	r0, [r4, #204]	; 0xcc
   17490:	bl	14094 <fprintf@plt>
   17494:	b	170c8 <__flatcc_fb_codegen_c@@Base+0x1068>
   17498:	ldr	r3, [r5, #16]
   1749c:	cmp	r3, #5
   174a0:	beq	17914 <__flatcc_fb_codegen_c@@Base+0x18b4>
   174a4:	sub	r3, r3, #1
   174a8:	cmp	r3, #10
   174ac:	ldrls	pc, [pc, r3, lsl #2]
   174b0:	b	174e0 <__flatcc_fb_codegen_c@@Base+0x1480>
   174b4:	andeq	r7, r1, r8, lsl r5
   174b8:			; <UNDEFINED> instruction: 0x000176b4
   174bc:	andeq	r7, r1, r4, asr #13
   174c0:	andeq	r7, r1, r4, lsl #18
   174c4:	andeq	r7, r1, r4, lsr #18
   174c8:	andeq	r7, r1, ip, lsr #18
   174cc:	andeq	r7, r1, ip, lsr r9
   174d0:	andeq	r7, r1, ip, asr #18
   174d4:	andeq	r7, r1, ip, asr r9
   174d8:	andeq	r7, r1, ip, ror r9
   174dc:	andeq	r7, r1, ip, ror #18
   174e0:	ldr	r4, [pc, #1360]	; 17a38 <__flatcc_fb_codegen_c@@Base+0x19d8>
   174e4:	ldr	r3, [pc, #1296]	; 179fc <__flatcc_fb_codegen_c@@Base+0x199c>
   174e8:	ldr	r0, [r3]
   174ec:	ldr	r3, [pc, #1292]	; 17a00 <__flatcc_fb_codegen_c@@Base+0x19a0>
   174f0:	str	r3, [sp]
   174f4:	mov	r3, #141	; 0x8d
   174f8:	mov	r2, r4
   174fc:	ldr	r1, [pc, #1280]	; 17a04 <__flatcc_fb_codegen_c@@Base+0x19a4>
   17500:	bl	14094 <fprintf@plt>
   17504:	ldr	r3, [pc, #1328]	; 17a3c <__flatcc_fb_codegen_c@@Base+0x19dc>
   17508:	mov	r2, #141	; 0x8d
   1750c:	mov	r1, r4
   17510:	ldr	r0, [pc, #1264]	; 17a08 <__flatcc_fb_codegen_c@@Base+0x19a8>
   17514:	bl	14148 <__assert_fail@plt>
   17518:	ldr	r1, [pc, #1312]	; 17a40 <__flatcc_fb_codegen_c@@Base+0x19e0>
   1751c:	mov	r3, sl
   17520:	ldr	r2, [pc, #1356]	; 17a74 <__flatcc_fb_codegen_c@@Base+0x1a14>
   17524:	b	176d0 <__flatcc_fb_codegen_c@@Base+0x1670>
   17528:	ldr	r4, [pc, #1288]	; 17a38 <__flatcc_fb_codegen_c@@Base+0x19d8>
   1752c:	ldr	r3, [pc, #1224]	; 179fc <__flatcc_fb_codegen_c@@Base+0x199c>
   17530:	ldr	r0, [r3]
   17534:	ldr	r3, [pc, #1220]	; 17a00 <__flatcc_fb_codegen_c@@Base+0x19a0>
   17538:	str	r3, [sp]
   1753c:	mov	r3, #96	; 0x60
   17540:	mov	r2, r4
   17544:	ldr	r1, [pc, #1208]	; 17a04 <__flatcc_fb_codegen_c@@Base+0x19a4>
   17548:	bl	14094 <fprintf@plt>
   1754c:	ldr	r3, [pc, #1316]	; 17a78 <__flatcc_fb_codegen_c@@Base+0x1a18>
   17550:	mov	r2, #96	; 0x60
   17554:	mov	r1, r4
   17558:	ldr	r0, [pc, #1192]	; 17a08 <__flatcc_fb_codegen_c@@Base+0x19a8>
   1755c:	bl	14148 <__assert_fail@plt>
   17560:	ldr	r3, [r4, #204]	; 0xcc
   17564:	mov	r2, #66	; 0x42
   17568:	mov	r1, #1
   1756c:	ldr	r0, [pc, #1288]	; 17a7c <__flatcc_fb_codegen_c@@Base+0x1a1c>
   17570:	bl	1401c <fwrite@plt>
   17574:	ldr	r3, [r4, #204]	; 0xcc
   17578:	mov	r2, #61	; 0x3d
   1757c:	mov	r1, #1
   17580:	ldr	r0, [pc, #1272]	; 17a80 <__flatcc_fb_codegen_c@@Base+0x1a20>
   17584:	bl	1401c <fwrite@plt>
   17588:	add	r3, sp, #40	; 0x28
   1758c:	str	r3, [sp, #8]
   17590:	str	r7, [sp, #4]
   17594:	str	r6, [sp]
   17598:	add	r3, sp, #260	; 0x104
   1759c:	ldr	r2, [sp, #32]
   175a0:	ldr	r1, [pc, #1244]	; 17a84 <__flatcc_fb_codegen_c@@Base+0x1a24>
   175a4:	ldr	r0, [r4, #204]	; 0xcc
   175a8:	bl	14094 <fprintf@plt>
   175ac:	ldr	r3, [r4, #212]	; 0xd4
   175b0:	ldr	r3, [r3, #136]	; 0x88
   175b4:	cmp	r3, #0
   175b8:	moveq	r8, r9
   175bc:	beq	17710 <__flatcc_fb_codegen_c@@Base+0x16b0>
   175c0:	b	17848 <__flatcc_fb_codegen_c@@Base+0x17e8>
   175c4:	add	r3, sp, #40	; 0x28
   175c8:	str	r3, [sp, #8]
   175cc:	str	r7, [sp, #4]
   175d0:	str	r6, [sp]
   175d4:	add	r3, sp, #260	; 0x104
   175d8:	ldr	r2, [sp, #32]
   175dc:	ldr	r1, [pc, #1188]	; 17a88 <__flatcc_fb_codegen_c@@Base+0x1a28>
   175e0:	ldr	r0, [r4, #204]	; 0xcc
   175e4:	bl	14094 <fprintf@plt>
   175e8:	b	176fc <__flatcc_fb_codegen_c@@Base+0x169c>
   175ec:	ldr	r3, [r4, #204]	; 0xcc
   175f0:	mov	r2, #84	; 0x54
   175f4:	mov	r1, #1
   175f8:	mov	r0, fp
   175fc:	bl	1401c <fwrite@plt>
   17600:	mov	r9, #1
   17604:	b	17710 <__flatcc_fb_codegen_c@@Base+0x16b0>
   17608:	ldr	r1, [r4, #204]	; 0xcc
   1760c:	mov	r0, #10
   17610:	bl	140f4 <fputc@plt>
   17614:	add	sp, sp, #484	; 0x1e4
   17618:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1761c:	ldr	r2, [sp, #28]
   17620:	add	r7, r2, #1
   17624:	ldr	r3, [r5, #88]	; 0x58
   17628:	str	r9, [sp, #4]
   1762c:	str	r8, [sp]
   17630:	ldr	r1, [pc, #1108]	; 17a8c <__flatcc_fb_codegen_c@@Base+0x1a2c>
   17634:	ldr	r0, [r4, #204]	; 0xcc
   17638:	bl	14094 <fprintf@plt>
   1763c:	str	r7, [sp, #28]
   17640:	b	17680 <__flatcc_fb_codegen_c@@Base+0x1620>
   17644:	ldrh	r3, [r5, #72]	; 0x48
   17648:	tst	r3, #4
   1764c:	beq	1719c <__flatcc_fb_codegen_c@@Base+0x113c>
   17650:	ldr	r2, [sp, #28]
   17654:	add	r7, r2, #1
   17658:	str	r9, [sp, #8]
   1765c:	str	r8, [sp, #4]
   17660:	ldr	r3, [r5, #88]	; 0x58
   17664:	str	r3, [sp]
   17668:	mov	r3, r2
   1766c:	mov	r2, sl
   17670:	ldr	r1, [pc, #1048]	; 17a90 <__flatcc_fb_codegen_c@@Base+0x1a30>
   17674:	ldr	r0, [r4, #204]	; 0xcc
   17678:	bl	14094 <fprintf@plt>
   1767c:	str	r7, [sp, #28]
   17680:	ldr	r7, [r5, #80]	; 0x50
   17684:	ldr	r3, [r5, #88]	; 0x58
   17688:	add	r7, r7, r3
   1768c:	ldr	r5, [r5]
   17690:	cmp	r5, #0
   17694:	beq	173fc <__flatcc_fb_codegen_c@@Base+0x139c>
   17698:	ldr	r8, [r5, #68]	; 0x44
   1769c:	cmp	r8, #0
   176a0:	beq	17164 <__flatcc_fb_codegen_c@@Base+0x1104>
   176a4:	mov	r1, #1
   176a8:	mov	r3, #0
   176ac:	mov	r9, r3
   176b0:	b	17124 <__flatcc_fb_codegen_c@@Base+0x10c4>
   176b4:	ldr	r1, [pc, #852]	; 17a10 <__flatcc_fb_codegen_c@@Base+0x19b0>
   176b8:	mov	r3, sl
   176bc:	ldr	r2, [pc, #976]	; 17a94 <__flatcc_fb_codegen_c@@Base+0x1a34>
   176c0:	b	176d0 <__flatcc_fb_codegen_c@@Base+0x1670>
   176c4:	ldr	r1, [pc, #888]	; 17a44 <__flatcc_fb_codegen_c@@Base+0x19e4>
   176c8:	mov	r3, sl
   176cc:	ldr	r2, [pc, #964]	; 17a98 <__flatcc_fb_codegen_c@@Base+0x1a38>
   176d0:	str	r1, [sp, #20]
   176d4:	str	r3, [sp, #16]
   176d8:	str	r2, [sp, #12]
   176dc:	ldr	r2, [sp, #32]
   176e0:	str	r2, [sp, #8]
   176e4:	str	r7, [sp, #4]
   176e8:	str	r6, [sp]
   176ec:	add	r3, sp, #260	; 0x104
   176f0:	ldr	r1, [pc, #932]	; 17a9c <__flatcc_fb_codegen_c@@Base+0x1a3c>
   176f4:	ldr	r0, [r4, #204]	; 0xcc
   176f8:	bl	14094 <fprintf@plt>
   176fc:	ldrh	r2, [r5, #72]	; 0x48
   17700:	clz	r3, r8
   17704:	lsr	r3, r3, #5
   17708:	ands	r3, r3, r2, lsr #7
   1770c:	bne	175ec <__flatcc_fb_codegen_c@@Base+0x158c>
   17710:	ldr	r5, [r5]
   17714:	cmp	r5, #0
   17718:	beq	17608 <__flatcc_fb_codegen_c@@Base+0x15a8>
   1771c:	ldrh	r3, [r5, #72]	; 0x48
   17720:	tst	r3, #4
   17724:	bne	17710 <__flatcc_fb_codegen_c@@Base+0x16b0>
   17728:	ldr	r3, [r5, #4]
   1772c:	ldr	r6, [r3, #4]
   17730:	ldr	r7, [r3]
   17734:	ldrh	r3, [r5, #24]
   17738:	cmp	r3, #8
   1773c:	beq	17498 <__flatcc_fb_codegen_c@@Base+0x1438>
   17740:	cmp	r3, #14
   17744:	bne	176fc <__flatcc_fb_codegen_c@@Base+0x169c>
   17748:	ldr	r3, [r5, #16]
   1774c:	add	r2, sp, #40	; 0x28
   17750:	mov	r1, r3
   17754:	ldr	r0, [r3, #12]
   17758:	bl	15edc <__flatcc_fb_scoped_symbol_name@@Base>
   1775c:	ldr	r2, [r5, #16]
   17760:	ldrh	r3, [r2, #8]
   17764:	cmp	r3, #1
   17768:	beq	175c4 <__flatcc_fb_codegen_c@@Base+0x1564>
   1776c:	cmp	r3, #3
   17770:	bne	176fc <__flatcc_fb_codegen_c@@Base+0x169c>
   17774:	ldr	r3, [r2, #40]	; 0x28
   17778:	sub	r3, r3, #1
   1777c:	cmp	r3, #10
   17780:	bhi	17528 <__flatcc_fb_codegen_c@@Base+0x14c8>
   17784:	add	r3, sp, #40	; 0x28
   17788:	str	r3, [sp, #12]
   1778c:	str	r3, [sp, #8]
   17790:	str	r7, [sp, #4]
   17794:	str	r6, [sp]
   17798:	add	r3, sp, #260	; 0x104
   1779c:	ldr	r2, [sp, #32]
   177a0:	ldr	r1, [pc, #760]	; 17aa0 <__flatcc_fb_codegen_c@@Base+0x1a40>
   177a4:	ldr	r0, [r4, #204]	; 0xcc
   177a8:	bl	14094 <fprintf@plt>
   177ac:	ldr	r3, [r4, #212]	; 0xd4
   177b0:	ldr	r3, [r3, #32]
   177b4:	cmp	r3, #0
   177b8:	bne	177ec <__flatcc_fb_codegen_c@@Base+0x178c>
   177bc:	ldrh	r3, [r5, #72]	; 0x48
   177c0:	tst	r3, #128	; 0x80
   177c4:	beq	17710 <__flatcc_fb_codegen_c@@Base+0x16b0>
   177c8:	add	r3, sp, #40	; 0x28
   177cc:	str	r3, [sp, #8]
   177d0:	str	r7, [sp, #4]
   177d4:	str	r6, [sp]
   177d8:	add	r3, sp, #260	; 0x104
   177dc:	ldr	r2, [sp, #32]
   177e0:	ldr	r1, [pc, #700]	; 17aa4 <__flatcc_fb_codegen_c@@Base+0x1a44>
   177e4:	ldr	r0, [r4, #204]	; 0xcc
   177e8:	bl	14094 <fprintf@plt>
   177ec:	ldrh	r3, [r5, #72]	; 0x48
   177f0:	tst	r3, #128	; 0x80
   177f4:	beq	17710 <__flatcc_fb_codegen_c@@Base+0x16b0>
   177f8:	cmp	r9, #0
   177fc:	bne	17560 <__flatcc_fb_codegen_c@@Base+0x1500>
   17800:	ldr	r3, [r4, #204]	; 0xcc
   17804:	mov	r2, #61	; 0x3d
   17808:	mov	r1, #1
   1780c:	ldr	r0, [pc, #620]	; 17a80 <__flatcc_fb_codegen_c@@Base+0x1a20>
   17810:	bl	1401c <fwrite@plt>
   17814:	add	r3, sp, #40	; 0x28
   17818:	str	r3, [sp, #8]
   1781c:	str	r7, [sp, #4]
   17820:	str	r6, [sp]
   17824:	add	r3, sp, #260	; 0x104
   17828:	ldr	r2, [sp, #32]
   1782c:	ldr	r1, [pc, #592]	; 17a84 <__flatcc_fb_codegen_c@@Base+0x1a24>
   17830:	ldr	r0, [r4, #204]	; 0xcc
   17834:	bl	14094 <fprintf@plt>
   17838:	ldr	r3, [r4, #212]	; 0xd4
   1783c:	ldr	r3, [r3, #136]	; 0x88
   17840:	cmp	r3, #0
   17844:	beq	1787c <__flatcc_fb_codegen_c@@Base+0x181c>
   17848:	add	r3, sp, #260	; 0x104
   1784c:	str	r3, [sp, #12]
   17850:	add	r2, sp, #40	; 0x28
   17854:	str	r2, [sp, #8]
   17858:	str	r7, [sp, #4]
   1785c:	str	r6, [sp]
   17860:	ldr	r2, [sp, #32]
   17864:	ldr	r1, [pc, #572]	; 17aa8 <__flatcc_fb_codegen_c@@Base+0x1a48>
   17868:	ldr	r0, [r4, #204]	; 0xcc
   1786c:	bl	14094 <fprintf@plt>
   17870:	cmp	r9, #0
   17874:	movne	r8, r9
   17878:	bne	17710 <__flatcc_fb_codegen_c@@Base+0x16b0>
   1787c:	add	r8, sp, #40	; 0x28
   17880:	str	r8, [sp, #8]
   17884:	str	r7, [sp, #4]
   17888:	str	r6, [sp]
   1788c:	add	r3, sp, #260	; 0x104
   17890:	ldr	r9, [sp, #32]
   17894:	mov	r2, r9
   17898:	ldr	r1, [pc, #524]	; 17aac <__flatcc_fb_codegen_c@@Base+0x1a4c>
   1789c:	ldr	r0, [r4, #204]	; 0xcc
   178a0:	bl	14094 <fprintf@plt>
   178a4:	str	r8, [sp, #8]
   178a8:	str	r7, [sp, #4]
   178ac:	str	r6, [sp]
   178b0:	add	r3, sp, #260	; 0x104
   178b4:	mov	r2, r9
   178b8:	ldr	r1, [pc, #496]	; 17ab0 <__flatcc_fb_codegen_c@@Base+0x1a50>
   178bc:	ldr	r0, [r4, #204]	; 0xcc
   178c0:	bl	14094 <fprintf@plt>
   178c4:	ldr	r3, [r4, #212]	; 0xd4
   178c8:	ldr	r3, [r3, #136]	; 0x88
   178cc:	cmp	r3, #0
   178d0:	moveq	r9, #1
   178d4:	moveq	r8, r9
   178d8:	beq	17710 <__flatcc_fb_codegen_c@@Base+0x16b0>
   178dc:	str	r7, [sp, #4]
   178e0:	str	r6, [sp]
   178e4:	add	r3, sp, #260	; 0x104
   178e8:	mov	r2, r3
   178ec:	ldr	r1, [pc, #448]	; 17ab4 <__flatcc_fb_codegen_c@@Base+0x1a54>
   178f0:	ldr	r0, [r4, #204]	; 0xcc
   178f4:	bl	14094 <fprintf@plt>
   178f8:	mov	r9, #1
   178fc:	mov	r8, r9
   17900:	b	17710 <__flatcc_fb_codegen_c@@Base+0x16b0>
   17904:	ldr	r1, [pc, #264]	; 17a14 <__flatcc_fb_codegen_c@@Base+0x19b4>
   17908:	mov	r3, sl
   1790c:	ldr	r2, [pc, #420]	; 17ab8 <__flatcc_fb_codegen_c@@Base+0x1a58>
   17910:	b	176d0 <__flatcc_fb_codegen_c@@Base+0x1670>
   17914:	ldr	r3, [sp, #32]
   17918:	ldr	r1, [pc, #252]	; 17a1c <__flatcc_fb_codegen_c@@Base+0x19bc>
   1791c:	ldr	r2, [pc, #408]	; 17abc <__flatcc_fb_codegen_c@@Base+0x1a5c>
   17920:	b	176d0 <__flatcc_fb_codegen_c@@Base+0x1670>
   17924:	mov	r3, sl
   17928:	b	17918 <__flatcc_fb_codegen_c@@Base+0x18b8>
   1792c:	ldr	r1, [pc, #236]	; 17a20 <__flatcc_fb_codegen_c@@Base+0x19c0>
   17930:	mov	r3, sl
   17934:	ldr	r2, [pc, #388]	; 17ac0 <__flatcc_fb_codegen_c@@Base+0x1a60>
   17938:	b	176d0 <__flatcc_fb_codegen_c@@Base+0x1670>
   1793c:	ldr	r1, [pc, #224]	; 17a24 <__flatcc_fb_codegen_c@@Base+0x19c4>
   17940:	mov	r3, sl
   17944:	ldr	r2, [pc, #376]	; 17ac4 <__flatcc_fb_codegen_c@@Base+0x1a64>
   17948:	b	176d0 <__flatcc_fb_codegen_c@@Base+0x1670>
   1794c:	ldr	r1, [pc, #212]	; 17a28 <__flatcc_fb_codegen_c@@Base+0x19c8>
   17950:	mov	r3, sl
   17954:	ldr	r2, [pc, #364]	; 17ac8 <__flatcc_fb_codegen_c@@Base+0x1a68>
   17958:	b	176d0 <__flatcc_fb_codegen_c@@Base+0x1670>
   1795c:	ldr	r1, [pc, #200]	; 17a2c <__flatcc_fb_codegen_c@@Base+0x19cc>
   17960:	mov	r3, sl
   17964:	ldr	r2, [pc, #352]	; 17acc <__flatcc_fb_codegen_c@@Base+0x1a6c>
   17968:	b	176d0 <__flatcc_fb_codegen_c@@Base+0x1670>
   1796c:	ldr	r1, [pc, #188]	; 17a30 <__flatcc_fb_codegen_c@@Base+0x19d0>
   17970:	mov	r3, sl
   17974:	mov	r2, r1
   17978:	b	176d0 <__flatcc_fb_codegen_c@@Base+0x1670>
   1797c:	ldr	r1, [pc, #176]	; 17a34 <__flatcc_fb_codegen_c@@Base+0x19d4>
   17980:	mov	r3, sl
   17984:	mov	r2, r1
   17988:	b	176d0 <__flatcc_fb_codegen_c@@Base+0x1670>
   1798c:	muleq	r4, r0, r4
   17990:	andeq	ip, r3, ip, ror #27
   17994:	andeq	r5, r4, r4, asr #3
   17998:	andeq	ip, r3, r8, ror #19
   1799c:	andeq	ip, r3, r8, asr sl
   179a0:	strdeq	sp, [r3], -r4
   179a4:	andeq	r0, r0, r9, lsr #7
   179a8:	andeq	sp, r3, r4, lsl r1
   179ac:	andeq	r0, r0, sl, lsr #7
   179b0:	andeq	sp, r3, r4, lsr r1
   179b4:	strdeq	ip, [r3], -r4
   179b8:	andeq	sp, r3, ip, asr r8
   179bc:			; <UNDEFINED> instruction: 0x0003d2b4
   179c0:	andeq	sp, r3, r4, asr r1
   179c4:			; <UNDEFINED> instruction: 0x0003d1b8
   179c8:	andeq	sp, r3, ip, lsl #4
   179cc:	andeq	sp, r3, r0, asr r2
   179d0:	strdeq	sp, [r3], -r8
   179d4:	andeq	sp, r3, ip, lsr #10
   179d8:	andeq	sp, r3, ip, ror #10
   179dc:	andeq	sp, r3, ip, lsl #16
   179e0:	andeq	sp, r3, r0, lsr #5
   179e4:	andeq	lr, r4, ip, lsr r2
   179e8:	ldrdeq	sp, [r3], -r8
   179ec:	andeq	sp, r3, r4, asr #5
   179f0:	muleq	r3, r0, r3
   179f4:			; <UNDEFINED> instruction: 0x0003d3b0
   179f8:	andeq	r0, r0, r5, lsl #8
   179fc:	andeq	r7, r6, r8, lsr #1
   17a00:			; <UNDEFINED> instruction: 0x0003cdb4
   17a04:	andeq	ip, r3, r8, lsr #27
   17a08:	andeq	r5, r4, r0, ror #3
   17a0c:	andeq	sp, r3, ip, asr #5
   17a10:	andeq	ip, r3, r4, asr #24
   17a14:	andeq	ip, r3, ip, asr ip
   17a18:	andeq	sp, r3, ip, ror #5
   17a1c:	andeq	ip, r3, r4, ror #24
   17a20:	andeq	ip, r3, ip, ror #24
   17a24:	andeq	ip, r3, r4, ror ip
   17a28:	andeq	ip, r3, ip, ror ip
   17a2c:	andeq	ip, r3, r4, lsl #25
   17a30:	andeq	ip, r3, ip, lsl #25
   17a34:	muleq	r3, r4, ip
   17a38:	andeq	ip, r3, ip, asr sp
   17a3c:			; <UNDEFINED> instruction: 0x0003c9b8
   17a40:	andeq	ip, r3, r8, lsr ip
   17a44:	andeq	ip, r3, r0, asr ip
   17a48:	strdeq	sp, [r3], -r8
   17a4c:	andeq	sp, r3, ip, lsr #1
   17a50:	andeq	sp, r3, ip, ror #6
   17a54:			; <UNDEFINED> instruction: 0x0003d3b8
   17a58:	strdeq	r0, [r0], -sl
   17a5c:	andeq	sp, r3, r0, lsl r3
   17a60:	andeq	sp, r3, r8, ror r3
   17a64:	andeq	sp, r3, r0, asr #7
   17a68:	andeq	sp, r3, r0, lsl #8
   17a6c:	andeq	sp, r3, r8, asr r4
   17a70:	andeq	sp, r3, r0, lsr #9
   17a74:	strheq	sp, [r3], -r4
   17a78:	strdeq	ip, [r3], -r4
   17a7c:	andeq	sp, r3, r0, lsr r6
   17a80:	andeq	sp, r3, r4, ror r6
   17a84:			; <UNDEFINED> instruction: 0x0003d6b4
   17a88:	ldrdeq	sp, [r3], -r4
   17a8c:	andeq	sp, r3, r4, ror #16
   17a90:	muleq	r3, r8, r8
   17a94:	strheq	sp, [r3], -ip
   17a98:	andeq	sp, r3, r4, asr #1
   17a9c:	andeq	sp, r3, r4, lsl #11
   17aa0:			; <UNDEFINED> instruction: 0x0003d5bc
   17aa4:	strdeq	sp, [r3], -r8
   17aa8:	andeq	sp, r3, ip, ror #13
   17aac:	andeq	sp, r3, r8, lsr #14
   17ab0:	andeq	sp, r3, r8, ror #14
   17ab4:	andeq	sp, r3, r8, lsr #15
   17ab8:	andeq	sp, r3, ip, asr #1
   17abc:	andeq	r4, r5, r4, asr #24
   17ac0:	ldrdeq	sp, [r3], -r4
   17ac4:	ldrdeq	sp, [r3], -ip
   17ac8:	andeq	sp, r3, r4, ror #1
   17acc:	andeq	sp, r3, ip, ror #1
   17ad0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17ad4:	sub	sp, sp, #1040	; 0x410
   17ad8:	sub	sp, sp, #12
   17adc:	str	r0, [sp, #44]	; 0x2c
   17ae0:	ldrh	r3, [r1, #8]
   17ae4:	cmp	r3, #0
   17ae8:	bne	17b64 <__flatcc_fb_codegen_c@@Base+0x1b04>
   17aec:	mov	r4, r0
   17af0:	mov	r8, r1
   17af4:	mov	r5, #220	; 0xdc
   17af8:	mov	r2, r5
   17afc:	mov	r1, #0
   17b00:	add	r0, sp, #828	; 0x33c
   17b04:	bl	140ac <memset@plt>
   17b08:	mov	r2, r5
   17b0c:	mov	r1, #0
   17b10:	add	r0, sp, #608	; 0x260
   17b14:	bl	140ac <memset@plt>
   17b18:	ldr	r1, [r4, #204]	; 0xcc
   17b1c:	mov	r0, #10
   17b20:	bl	140f4 <fputc@plt>
   17b24:	str	r8, [sp, #56]	; 0x38
   17b28:	add	r2, sp, #828	; 0x33c
   17b2c:	mov	r1, r8
   17b30:	ldr	r0, [r8, #12]
   17b34:	bl	15edc <__flatcc_fb_scoped_symbol_name@@Base>
   17b38:	ldr	r5, [r8, #32]
   17b3c:	cmp	r5, #0
   17b40:	beq	17be8 <__flatcc_fb_codegen_c@@Base+0x1b88>
   17b44:	mov	r1, #1
   17b48:	mov	r3, #0
   17b4c:	ldr	r9, [pc, #3964]	; 18ad0 <__flatcc_fb_codegen_c@@Base+0x2a70>
   17b50:	ldr	fp, [pc, #3964]	; 18ad4 <__flatcc_fb_codegen_c@@Base+0x2a74>
   17b54:	ldr	sl, [pc, #3964]	; 18ad8 <__flatcc_fb_codegen_c@@Base+0x2a78>
   17b58:	ldr	r7, [pc, #3964]	; 18adc <__flatcc_fb_codegen_c@@Base+0x2a7c>
   17b5c:	mov	r6, r3
   17b60:	b	17ba8 <__flatcc_fb_codegen_c@@Base+0x1b48>
   17b64:	ldr	r3, [pc, #3956]	; 18ae0 <__flatcc_fb_codegen_c@@Base+0x2a80>
   17b68:	ldr	r2, [pc, #3956]	; 18ae4 <__flatcc_fb_codegen_c@@Base+0x2a84>
   17b6c:	ldr	r1, [pc, #3956]	; 18ae8 <__flatcc_fb_codegen_c@@Base+0x2a88>
   17b70:	ldr	r0, [pc, #3956]	; 18aec <__flatcc_fb_codegen_c@@Base+0x2a8c>
   17b74:	bl	14148 <__assert_fail@plt>
   17b78:	ldr	r2, [r5, #4]
   17b7c:	ldr	r3, [r2]
   17b80:	ldr	r2, [r2, #4]
   17b84:	mov	r1, r7
   17b88:	ldr	r0, [r4, #204]	; 0xcc
   17b8c:	bl	14094 <fprintf@plt>
   17b90:	ldr	r3, [r5, #4]
   17b94:	ldr	r3, [r3, #8]
   17b98:	ldr	r5, [r5]
   17b9c:	mov	r1, r6
   17ba0:	cmp	r5, #0
   17ba4:	beq	17bd4 <__flatcc_fb_codegen_c@@Base+0x1b74>
   17ba8:	ldr	r2, [r5, #4]
   17bac:	ldr	r2, [r2, #8]
   17bb0:	cmp	r2, r3
   17bb4:	beq	17b78 <__flatcc_fb_codegen_c@@Base+0x1b18>
   17bb8:	cmp	r1, #0
   17bbc:	mov	r2, r9
   17bc0:	movne	r1, sl
   17bc4:	moveq	r1, fp
   17bc8:	ldr	r0, [r4, #204]	; 0xcc
   17bcc:	bl	14094 <fprintf@plt>
   17bd0:	b	17b78 <__flatcc_fb_codegen_c@@Base+0x1b18>
   17bd4:	ldr	r3, [r4, #204]	; 0xcc
   17bd8:	mov	r2, #4
   17bdc:	mov	r1, #1
   17be0:	ldr	r0, [pc, #3848]	; 18af0 <__flatcc_fb_codegen_c@@Base+0x2a90>
   17be4:	bl	1401c <fwrite@plt>
   17be8:	add	r5, sp, #828	; 0x33c
   17bec:	mov	r2, r5
   17bf0:	ldr	r1, [pc, #3836]	; 18af4 <__flatcc_fb_codegen_c@@Base+0x2a94>
   17bf4:	ldr	r0, [r4, #204]	; 0xcc
   17bf8:	bl	14094 <fprintf@plt>
   17bfc:	str	r4, [sp]
   17c00:	mov	r3, r5
   17c04:	mov	r2, r5
   17c08:	ldr	r1, [pc, #3816]	; 18af8 <__flatcc_fb_codegen_c@@Base+0x2a98>
   17c0c:	ldr	r0, [r4, #204]	; 0xcc
   17c10:	bl	14094 <fprintf@plt>
   17c14:	str	r5, [sp, #8]
   17c18:	str	r4, [sp, #4]
   17c1c:	str	r5, [sp]
   17c20:	mov	r3, r5
   17c24:	mov	r2, r5
   17c28:	ldr	r1, [pc, #3788]	; 18afc <__flatcc_fb_codegen_c@@Base+0x2a9c>
   17c2c:	ldr	r0, [r4, #204]	; 0xcc
   17c30:	bl	14094 <fprintf@plt>
   17c34:	mov	r3, r5
   17c38:	mov	r2, r4
   17c3c:	ldr	r1, [pc, #3772]	; 18b00 <__flatcc_fb_codegen_c@@Base+0x2aa0>
   17c40:	ldr	r0, [r4, #204]	; 0xcc
   17c44:	bl	14094 <fprintf@plt>
   17c48:	ldr	r1, [r4, #204]	; 0xcc
   17c4c:	mov	r0, #10
   17c50:	bl	140f4 <fputc@plt>
   17c54:	ldr	r5, [r8, #20]
   17c58:	cmp	r5, #0
   17c5c:	beq	19188 <__flatcc_fb_codegen_c@@Base+0x3128>
   17c60:	mov	r3, #0
   17c64:	str	r3, [sp, #48]	; 0x30
   17c68:	ldr	fp, [pc, #3680]	; 18ad0 <__flatcc_fb_codegen_c@@Base+0x2a70>
   17c6c:	ldr	sl, [pc, #3688]	; 18adc <__flatcc_fb_codegen_c@@Base+0x2a7c>
   17c70:	b	17d60 <__flatcc_fb_codegen_c@@Base+0x1d00>
   17c74:	ldr	r2, [r6, #4]
   17c78:	ldr	r3, [r2]
   17c7c:	ldr	r2, [r2, #4]
   17c80:	mov	r1, sl
   17c84:	ldr	r0, [r4, #204]	; 0xcc
   17c88:	bl	14094 <fprintf@plt>
   17c8c:	ldr	r3, [r6, #4]
   17c90:	ldr	r3, [r3, #8]
   17c94:	ldr	r6, [r6]
   17c98:	mov	r1, r7
   17c9c:	cmp	r6, #0
   17ca0:	beq	17cd0 <__flatcc_fb_codegen_c@@Base+0x1c70>
   17ca4:	ldr	r2, [r6, #4]
   17ca8:	ldr	r2, [r2, #8]
   17cac:	cmp	r2, r3
   17cb0:	beq	17c74 <__flatcc_fb_codegen_c@@Base+0x1c14>
   17cb4:	cmp	r1, #0
   17cb8:	mov	r2, fp
   17cbc:	ldrne	r1, [pc, #3604]	; 18ad8 <__flatcc_fb_codegen_c@@Base+0x2a78>
   17cc0:	ldreq	r1, [pc, #3596]	; 18ad4 <__flatcc_fb_codegen_c@@Base+0x2a74>
   17cc4:	ldr	r0, [r4, #204]	; 0xcc
   17cc8:	bl	14094 <fprintf@plt>
   17ccc:	b	17c74 <__flatcc_fb_codegen_c@@Base+0x1c14>
   17cd0:	ldr	r3, [r4, #204]	; 0xcc
   17cd4:	mov	r2, #4
   17cd8:	mov	r1, #1
   17cdc:	ldr	r0, [pc, #3596]	; 18af0 <__flatcc_fb_codegen_c@@Base+0x2a90>
   17ce0:	bl	1401c <fwrite@plt>
   17ce4:	ldr	r3, [r5, #4]
   17ce8:	ldr	r6, [r3, #4]
   17cec:	ldr	r7, [r3]
   17cf0:	ldrh	r9, [r5, #72]	; 0x48
   17cf4:	tst	r9, #4
   17cf8:	bne	17d3c <__flatcc_fb_codegen_c@@Base+0x1cdc>
   17cfc:	lsr	r9, r9, #8
   17d00:	and	r9, r9, #1
   17d04:	ldrh	r3, [r5, #24]
   17d08:	sub	r3, r3, #7
   17d0c:	cmp	r3, #8
   17d10:	ldrls	pc, [pc, r3, lsl #2]
   17d14:	b	19038 <__flatcc_fb_codegen_c@@Base+0x2fd8>
   17d18:	andeq	r8, r1, r4, lsr #7
   17d1c:	andeq	r7, r1, ip, ror sp
   17d20:	andeq	r8, r1, r4, asr #14
   17d24:			; <UNDEFINED> instruction: 0x000185b4
   17d28:	andeq	r9, r1, r8, lsr r0
   17d2c:	andeq	r9, r1, r8, lsr r0
   17d30:	andeq	r9, r1, r8, lsr r0
   17d34:	andeq	r8, r1, r4, lsr #15
   17d38:	andeq	r8, r1, r8, asr #30
   17d3c:	str	r7, [sp]
   17d40:	mov	r3, r6
   17d44:	add	r2, sp, #828	; 0x33c
   17d48:	ldr	r1, [pc, #3508]	; 18b04 <__flatcc_fb_codegen_c@@Base+0x2aa4>
   17d4c:	ldr	r0, [r4, #204]	; 0xcc
   17d50:	bl	14094 <fprintf@plt>
   17d54:	ldr	r5, [r5]
   17d58:	cmp	r5, #0
   17d5c:	beq	19188 <__flatcc_fb_codegen_c@@Base+0x3128>
   17d60:	ldr	r6, [r5, #68]	; 0x44
   17d64:	cmp	r6, #0
   17d68:	beq	17ce4 <__flatcc_fb_codegen_c@@Base+0x1c84>
   17d6c:	mov	r1, #1
   17d70:	mov	r3, #0
   17d74:	mov	r7, r3
   17d78:	b	17ca4 <__flatcc_fb_codegen_c@@Base+0x1c44>
   17d7c:	ldr	r3, [r5, #16]
   17d80:	cmp	r3, #5
   17d84:	beq	19088 <__flatcc_fb_codegen_c@@Base+0x3028>
   17d88:	sub	r2, r3, #1
   17d8c:	cmp	r2, #10
   17d90:	ldrls	pc, [pc, r2, lsl #2]
   17d94:	b	17dc4 <__flatcc_fb_codegen_c@@Base+0x1d64>
   17d98:	strdeq	r7, [r1], -ip
   17d9c:	andeq	r9, r1, r8, lsl r1
   17da0:	andeq	r9, r1, r4, ror r0
   17da4:	andeq	r9, r1, ip, lsr #2
   17da8:	andeq	r9, r1, r0, asr #1
   17dac:	andeq	r9, r1, r8, asr #1
   17db0:	ldrdeq	r9, [r1], -ip
   17db4:	strdeq	r9, [r1], -r0
   17db8:	andeq	r9, r1, r4, lsl #2
   17dbc:	andeq	r9, r1, r0, asr #2
   17dc0:	andeq	r9, r1, r4, ror #2
   17dc4:	ldr	r4, [pc, #3632]	; 18bfc <__flatcc_fb_codegen_c@@Base+0x2b9c>
   17dc8:	ldr	r3, [pc, #3680]	; 18c30 <__flatcc_fb_codegen_c@@Base+0x2bd0>
   17dcc:	ldr	r0, [r3]
   17dd0:	ldr	r3, [pc, #3624]	; 18c00 <__flatcc_fb_codegen_c@@Base+0x2ba0>
   17dd4:	str	r3, [sp]
   17dd8:	mov	r3, #141	; 0x8d
   17ddc:	mov	r2, r4
   17de0:	ldr	r1, [pc, #3664]	; 18c38 <__flatcc_fb_codegen_c@@Base+0x2bd8>
   17de4:	bl	14094 <fprintf@plt>
   17de8:	ldr	r3, [pc, #3352]	; 18b08 <__flatcc_fb_codegen_c@@Base+0x2aa8>
   17dec:	mov	r2, #141	; 0x8d
   17df0:	mov	r1, r4
   17df4:	ldr	r0, [pc, #3652]	; 18c40 <__flatcc_fb_codegen_c@@Base+0x2be0>
   17df8:	bl	14148 <__assert_fail@plt>
   17dfc:	ldrh	r2, [r5, #56]	; 0x38
   17e00:	sub	r2, r2, #3
   17e04:	cmp	r2, #3
   17e08:	ldrls	pc, [pc, r2, lsl #2]
   17e0c:	b	18308 <__flatcc_fb_codegen_c@@Base+0x22a8>
   17e10:	andeq	r8, r1, r0, lsr #5
   17e14:	ldrdeq	r8, [r1], -r4
   17e18:	andeq	r7, r1, r0, lsr #28
   17e1c:	andeq	r8, r1, ip, asr #3
   17e20:	ldr	r9, [pc, #3300]	; 18b0c <__flatcc_fb_codegen_c@@Base+0x2aac>
   17e24:	ldr	r2, [pc, #3300]	; 18b10 <__flatcc_fb_codegen_c@@Base+0x2ab0>
   17e28:	str	r2, [sp, #60]	; 0x3c
   17e2c:	str	fp, [sp, #52]	; 0x34
   17e30:	b	17e40 <__flatcc_fb_codegen_c@@Base+0x1de0>
   17e34:	ldr	r9, [pc, #3288]	; 18b14 <__flatcc_fb_codegen_c@@Base+0x2ab4>
   17e38:	str	r9, [sp, #60]	; 0x3c
   17e3c:	str	fp, [sp, #52]	; 0x34
   17e40:	sub	r3, r3, #1
   17e44:	cmp	r3, #8
   17e48:	ldrls	pc, [pc, r3, lsl #2]
   17e4c:	b	1808c <__flatcc_fb_codegen_c@@Base+0x202c>
   17e50:	andeq	r8, r1, r4, asr #1
   17e54:	andeq	r7, r1, r4, lsl #29
   17e58:	andeq	r8, r1, ip, asr #1
   17e5c:	andeq	r8, r1, ip, asr r0
   17e60:	andeq	r8, r1, r4, rrx
   17e64:	andeq	r8, r1, ip, rrx
   17e68:	andeq	r8, r1, r4, ror r0
   17e6c:	andeq	r8, r1, ip, ror r0
   17e70:	andeq	r8, r1, r4, lsl #1
   17e74:	ldr	r9, [pc, #3228]	; 18b18 <__flatcc_fb_codegen_c@@Base+0x2ab8>
   17e78:	str	r9, [sp, #60]	; 0x3c
   17e7c:	str	fp, [sp, #52]	; 0x34
   17e80:	b	17e40 <__flatcc_fb_codegen_c@@Base+0x1de0>
   17e84:	ldr	r2, [pc, #3392]	; 18bcc <__flatcc_fb_codegen_c@@Base+0x2b6c>
   17e88:	ldrd	r0, [r5, #48]	; 0x30
   17e8c:	strd	r0, [sp]
   17e90:	ldr	r1, [pc, #3204]	; 18b1c <__flatcc_fb_codegen_c@@Base+0x2abc>
   17e94:	add	r0, sp, #508	; 0x1fc
   17e98:	bl	14100 <sprintf@plt>
   17e9c:	add	r3, sp, #508	; 0x1fc
   17ea0:	str	r3, [sp, #36]	; 0x24
   17ea4:	str	r9, [sp, #32]
   17ea8:	ldr	r3, [sp, #52]	; 0x34
   17eac:	str	r3, [sp, #28]
   17eb0:	ldr	r3, [sp, #60]	; 0x3c
   17eb4:	str	r3, [sp, #24]
   17eb8:	ldr	r1, [sp, #44]	; 0x2c
   17ebc:	str	r1, [sp, #20]
   17ec0:	str	r7, [sp, #16]
   17ec4:	str	r6, [sp, #12]
   17ec8:	add	r3, sp, #828	; 0x33c
   17ecc:	str	r3, [sp, #8]
   17ed0:	ldrd	r2, [r5, #96]	; 0x60
   17ed4:	strd	r2, [sp]
   17ed8:	mov	r2, r1
   17edc:	ldr	r1, [pc, #3132]	; 18b20 <__flatcc_fb_codegen_c@@Base+0x2ac0>
   17ee0:	ldr	r0, [r4, #204]	; 0xcc
   17ee4:	bl	14094 <fprintf@plt>
   17ee8:	ldr	r3, [r4, #212]	; 0xd4
   17eec:	ldr	r3, [r3, #32]
   17ef0:	cmp	r3, #0
   17ef4:	bne	17f2c <__flatcc_fb_codegen_c@@Base+0x1ecc>
   17ef8:	ldrh	r3, [r5, #72]	; 0x48
   17efc:	tst	r3, #128	; 0x80
   17f00:	beq	17d54 <__flatcc_fb_codegen_c@@Base+0x1cf4>
   17f04:	str	r9, [sp, #12]
   17f08:	ldr	r3, [sp, #52]	; 0x34
   17f0c:	str	r3, [sp, #8]
   17f10:	str	r7, [sp, #4]
   17f14:	str	r6, [sp]
   17f18:	add	r3, sp, #828	; 0x33c
   17f1c:	ldr	r2, [sp, #44]	; 0x2c
   17f20:	ldr	r1, [pc, #3068]	; 18b24 <__flatcc_fb_codegen_c@@Base+0x2ac4>
   17f24:	ldr	r0, [r4, #204]	; 0xcc
   17f28:	bl	14094 <fprintf@plt>
   17f2c:	ldrh	r3, [r5, #72]	; 0x48
   17f30:	tst	r3, #128	; 0x80
   17f34:	beq	17d54 <__flatcc_fb_codegen_c@@Base+0x1cf4>
   17f38:	ldr	r3, [sp, #48]	; 0x30
   17f3c:	cmp	r3, #0
   17f40:	bne	18340 <__flatcc_fb_codegen_c@@Base+0x22e0>
   17f44:	ldr	r3, [r4, #204]	; 0xcc
   17f48:	mov	r2, #61	; 0x3d
   17f4c:	mov	r1, #1
   17f50:	ldr	r0, [pc, #3252]	; 18c0c <__flatcc_fb_codegen_c@@Base+0x2bac>
   17f54:	bl	1401c <fwrite@plt>
   17f58:	str	r9, [sp, #12]
   17f5c:	ldr	r3, [sp, #52]	; 0x34
   17f60:	str	r3, [sp, #8]
   17f64:	str	r7, [sp, #4]
   17f68:	str	r6, [sp]
   17f6c:	add	r3, sp, #828	; 0x33c
   17f70:	ldr	r2, [sp, #44]	; 0x2c
   17f74:	ldr	r1, [pc, #2988]	; 18b28 <__flatcc_fb_codegen_c@@Base+0x2ac8>
   17f78:	ldr	r0, [r4, #204]	; 0xcc
   17f7c:	bl	14094 <fprintf@plt>
   17f80:	ldr	r3, [r4, #212]	; 0xd4
   17f84:	ldr	r3, [r3, #136]	; 0x88
   17f88:	cmp	r3, #0
   17f8c:	beq	17fc8 <__flatcc_fb_codegen_c@@Base+0x1f68>
   17f90:	ldr	r2, [sp, #44]	; 0x2c
   17f94:	str	r2, [sp, #16]
   17f98:	str	r9, [sp, #12]
   17f9c:	ldr	r3, [sp, #52]	; 0x34
   17fa0:	str	r3, [sp, #8]
   17fa4:	str	r7, [sp, #4]
   17fa8:	str	r6, [sp]
   17fac:	add	r3, sp, #828	; 0x33c
   17fb0:	ldr	r1, [pc, #2932]	; 18b2c <__flatcc_fb_codegen_c@@Base+0x2acc>
   17fb4:	ldr	r0, [r4, #204]	; 0xcc
   17fb8:	bl	14094 <fprintf@plt>
   17fbc:	ldr	r3, [sp, #48]	; 0x30
   17fc0:	cmp	r3, #0
   17fc4:	bne	17d54 <__flatcc_fb_codegen_c@@Base+0x1cf4>
   17fc8:	str	r9, [sp, #12]
   17fcc:	ldr	r3, [sp, #52]	; 0x34
   17fd0:	str	r3, [sp, #8]
   17fd4:	str	r7, [sp, #4]
   17fd8:	str	r6, [sp]
   17fdc:	add	r2, sp, #828	; 0x33c
   17fe0:	mov	r3, r2
   17fe4:	ldr	r2, [sp, #44]	; 0x2c
   17fe8:	ldr	r1, [pc, #2880]	; 18b30 <__flatcc_fb_codegen_c@@Base+0x2ad0>
   17fec:	ldr	r0, [r4, #204]	; 0xcc
   17ff0:	bl	14094 <fprintf@plt>
   17ff4:	str	r9, [sp, #12]
   17ff8:	ldr	r3, [sp, #52]	; 0x34
   17ffc:	str	r3, [sp, #8]
   18000:	str	r7, [sp, #4]
   18004:	str	r6, [sp]
   18008:	add	r3, sp, #828	; 0x33c
   1800c:	ldr	r2, [sp, #44]	; 0x2c
   18010:	ldr	r1, [pc, #2844]	; 18b34 <__flatcc_fb_codegen_c@@Base+0x2ad4>
   18014:	ldr	r0, [r4, #204]	; 0xcc
   18018:	bl	14094 <fprintf@plt>
   1801c:	ldr	r3, [r4, #212]	; 0xd4
   18020:	ldr	r3, [r3, #136]	; 0x88
   18024:	cmp	r3, #0
   18028:	moveq	r3, #1
   1802c:	streq	r3, [sp, #48]	; 0x30
   18030:	beq	17d54 <__flatcc_fb_codegen_c@@Base+0x1cf4>
   18034:	str	r7, [sp, #4]
   18038:	str	r6, [sp]
   1803c:	add	r3, sp, #828	; 0x33c
   18040:	mov	r2, r3
   18044:	ldr	r1, [pc, #2796]	; 18b38 <__flatcc_fb_codegen_c@@Base+0x2ad8>
   18048:	ldr	r0, [r4, #204]	; 0xcc
   1804c:	bl	14094 <fprintf@plt>
   18050:	mov	r3, #1
   18054:	str	r3, [sp, #48]	; 0x30
   18058:	b	17d54 <__flatcc_fb_codegen_c@@Base+0x1cf4>
   1805c:	ldr	r2, [pc, #2928]	; 18bd4 <__flatcc_fb_codegen_c@@Base+0x2b74>
   18060:	b	17e88 <__flatcc_fb_codegen_c@@Base+0x1e28>
   18064:	ldr	r2, [pc, #2920]	; 18bd4 <__flatcc_fb_codegen_c@@Base+0x2b74>
   18068:	b	17e88 <__flatcc_fb_codegen_c@@Base+0x1e28>
   1806c:	ldr	r2, [pc, #2916]	; 18bd8 <__flatcc_fb_codegen_c@@Base+0x2b78>
   18070:	b	17e88 <__flatcc_fb_codegen_c@@Base+0x1e28>
   18074:	ldr	r2, [pc, #2912]	; 18bdc <__flatcc_fb_codegen_c@@Base+0x2b7c>
   18078:	b	17e88 <__flatcc_fb_codegen_c@@Base+0x1e28>
   1807c:	ldr	r2, [pc, #2908]	; 18be0 <__flatcc_fb_codegen_c@@Base+0x2b80>
   18080:	b	17e88 <__flatcc_fb_codegen_c@@Base+0x1e28>
   18084:	ldr	r2, [pc, #2904]	; 18be4 <__flatcc_fb_codegen_c@@Base+0x2b84>
   18088:	b	17e88 <__flatcc_fb_codegen_c@@Base+0x1e28>
   1808c:	ldr	r4, [pc, #2920]	; 18bfc <__flatcc_fb_codegen_c@@Base+0x2b9c>
   18090:	ldr	r3, [pc, #2968]	; 18c30 <__flatcc_fb_codegen_c@@Base+0x2bd0>
   18094:	ldr	r0, [r3]
   18098:	ldr	r3, [pc, #2912]	; 18c00 <__flatcc_fb_codegen_c@@Base+0x2ba0>
   1809c:	str	r3, [sp]
   180a0:	mov	r3, #226	; 0xe2
   180a4:	mov	r2, r4
   180a8:	ldr	r1, [pc, #2952]	; 18c38 <__flatcc_fb_codegen_c@@Base+0x2bd8>
   180ac:	bl	14094 <fprintf@plt>
   180b0:	ldr	r3, [pc, #2864]	; 18be8 <__flatcc_fb_codegen_c@@Base+0x2b88>
   180b4:	mov	r2, #226	; 0xe2
   180b8:	mov	r1, r4
   180bc:	ldr	r0, [pc, #2940]	; 18c40 <__flatcc_fb_codegen_c@@Base+0x2be0>
   180c0:	bl	14148 <__assert_fail@plt>
   180c4:	ldr	r2, [pc, #2848]	; 18bec <__flatcc_fb_codegen_c@@Base+0x2b8c>
   180c8:	b	17e88 <__flatcc_fb_codegen_c@@Base+0x1e28>
   180cc:	ldr	r2, [pc, #2844]	; 18bf0 <__flatcc_fb_codegen_c@@Base+0x2b90>
   180d0:	b	17e88 <__flatcc_fb_codegen_c@@Base+0x1e28>
   180d4:	ldr	r9, [pc, #2608]	; 18b0c <__flatcc_fb_codegen_c@@Base+0x2aac>
   180d8:	ldr	r2, [pc, #2608]	; 18b10 <__flatcc_fb_codegen_c@@Base+0x2ab0>
   180dc:	str	r2, [sp, #60]	; 0x3c
   180e0:	str	fp, [sp, #52]	; 0x34
   180e4:	b	180f4 <__flatcc_fb_codegen_c@@Base+0x2094>
   180e8:	ldr	r9, [pc, #2596]	; 18b14 <__flatcc_fb_codegen_c@@Base+0x2ab4>
   180ec:	str	r9, [sp, #60]	; 0x3c
   180f0:	str	fp, [sp, #52]	; 0x34
   180f4:	sub	r3, r3, #1
   180f8:	cmp	r3, #8
   180fc:	ldrls	pc, [pc, r3, lsl #2]
   18100:	b	18184 <__flatcc_fb_codegen_c@@Base+0x2124>
   18104:			; <UNDEFINED> instruction: 0x000181bc
   18108:	andeq	r8, r1, r8, lsr r1
   1810c:	andeq	r8, r1, r4, asr #3
   18110:	andeq	r8, r1, r4, asr r1
   18114:	andeq	r8, r1, ip, asr r1
   18118:	andeq	r8, r1, r4, ror #2
   1811c:	andeq	r8, r1, ip, ror #2
   18120:	andeq	r8, r1, r4, ror r1
   18124:	andeq	r8, r1, ip, ror r1
   18128:	ldr	r9, [pc, #2536]	; 18b18 <__flatcc_fb_codegen_c@@Base+0x2ab8>
   1812c:	str	r9, [sp, #60]	; 0x3c
   18130:	str	fp, [sp, #52]	; 0x34
   18134:	b	180f4 <__flatcc_fb_codegen_c@@Base+0x2094>
   18138:	ldr	r2, [pc, #2700]	; 18bcc <__flatcc_fb_codegen_c@@Base+0x2b6c>
   1813c:	ldrd	r0, [r5, #48]	; 0x30
   18140:	strd	r0, [sp]
   18144:	ldr	r1, [pc, #2684]	; 18bc8 <__flatcc_fb_codegen_c@@Base+0x2b68>
   18148:	add	r0, sp, #508	; 0x1fc
   1814c:	bl	14100 <sprintf@plt>
   18150:	b	17e9c <__flatcc_fb_codegen_c@@Base+0x1e3c>
   18154:	ldr	r2, [pc, #2680]	; 18bd4 <__flatcc_fb_codegen_c@@Base+0x2b74>
   18158:	b	1813c <__flatcc_fb_codegen_c@@Base+0x20dc>
   1815c:	ldr	r2, [pc, #2672]	; 18bd4 <__flatcc_fb_codegen_c@@Base+0x2b74>
   18160:	b	1813c <__flatcc_fb_codegen_c@@Base+0x20dc>
   18164:	ldr	r2, [pc, #2668]	; 18bd8 <__flatcc_fb_codegen_c@@Base+0x2b78>
   18168:	b	1813c <__flatcc_fb_codegen_c@@Base+0x20dc>
   1816c:	ldr	r2, [pc, #2664]	; 18bdc <__flatcc_fb_codegen_c@@Base+0x2b7c>
   18170:	b	1813c <__flatcc_fb_codegen_c@@Base+0x20dc>
   18174:	ldr	r2, [pc, #2660]	; 18be0 <__flatcc_fb_codegen_c@@Base+0x2b80>
   18178:	b	1813c <__flatcc_fb_codegen_c@@Base+0x20dc>
   1817c:	ldr	r2, [pc, #2656]	; 18be4 <__flatcc_fb_codegen_c@@Base+0x2b84>
   18180:	b	1813c <__flatcc_fb_codegen_c@@Base+0x20dc>
   18184:	ldr	r4, [pc, #2672]	; 18bfc <__flatcc_fb_codegen_c@@Base+0x2b9c>
   18188:	ldr	r3, [pc, #2720]	; 18c30 <__flatcc_fb_codegen_c@@Base+0x2bd0>
   1818c:	ldr	r0, [r3]
   18190:	ldr	r3, [pc, #2664]	; 18c00 <__flatcc_fb_codegen_c@@Base+0x2ba0>
   18194:	str	r3, [sp]
   18198:	mov	r3, #226	; 0xe2
   1819c:	mov	r2, r4
   181a0:	ldr	r1, [pc, #2704]	; 18c38 <__flatcc_fb_codegen_c@@Base+0x2bd8>
   181a4:	bl	14094 <fprintf@plt>
   181a8:	ldr	r3, [pc, #2616]	; 18be8 <__flatcc_fb_codegen_c@@Base+0x2b88>
   181ac:	mov	r2, #226	; 0xe2
   181b0:	mov	r1, r4
   181b4:	ldr	r0, [pc, #2692]	; 18c40 <__flatcc_fb_codegen_c@@Base+0x2be0>
   181b8:	bl	14148 <__assert_fail@plt>
   181bc:	ldr	r2, [pc, #2600]	; 18bec <__flatcc_fb_codegen_c@@Base+0x2b8c>
   181c0:	b	1813c <__flatcc_fb_codegen_c@@Base+0x20dc>
   181c4:	ldr	r2, [pc, #2596]	; 18bf0 <__flatcc_fb_codegen_c@@Base+0x2b90>
   181c8:	b	1813c <__flatcc_fb_codegen_c@@Base+0x20dc>
   181cc:	ldr	r9, [pc, #2360]	; 18b0c <__flatcc_fb_codegen_c@@Base+0x2aac>
   181d0:	ldr	r2, [pc, #2360]	; 18b10 <__flatcc_fb_codegen_c@@Base+0x2ab0>
   181d4:	str	r2, [sp, #60]	; 0x3c
   181d8:	str	fp, [sp, #52]	; 0x34
   181dc:	sub	r3, r3, #1
   181e0:	cmp	r3, #8
   181e4:	ldrls	pc, [pc, r3, lsl #2]
   181e8:	b	18258 <__flatcc_fb_codegen_c@@Base+0x21f8>
   181ec:	muleq	r1, r0, r2
   181f0:	andeq	r8, r1, r0, lsl r2
   181f4:	muleq	r1, r8, r2
   181f8:	andeq	r8, r1, r8, lsr #4
   181fc:	andeq	r8, r1, r0, lsr r2
   18200:	andeq	r8, r1, r8, lsr r2
   18204:	andeq	r8, r1, r0, asr #4
   18208:	andeq	r8, r1, r8, asr #4
   1820c:	andeq	r8, r1, r0, asr r2
   18210:	ldr	r2, [pc, #2484]	; 18bcc <__flatcc_fb_codegen_c@@Base+0x2b6c>
   18214:	ldrb	r3, [r5, #48]	; 0x30
   18218:	ldr	r1, [pc, #2480]	; 18bd0 <__flatcc_fb_codegen_c@@Base+0x2b70>
   1821c:	add	r0, sp, #508	; 0x1fc
   18220:	bl	14100 <sprintf@plt>
   18224:	b	17e9c <__flatcc_fb_codegen_c@@Base+0x1e3c>
   18228:	ldr	r2, [pc, #2468]	; 18bd4 <__flatcc_fb_codegen_c@@Base+0x2b74>
   1822c:	b	18214 <__flatcc_fb_codegen_c@@Base+0x21b4>
   18230:	ldr	r2, [pc, #2460]	; 18bd4 <__flatcc_fb_codegen_c@@Base+0x2b74>
   18234:	b	18214 <__flatcc_fb_codegen_c@@Base+0x21b4>
   18238:	ldr	r2, [pc, #2456]	; 18bd8 <__flatcc_fb_codegen_c@@Base+0x2b78>
   1823c:	b	18214 <__flatcc_fb_codegen_c@@Base+0x21b4>
   18240:	ldr	r2, [pc, #2452]	; 18bdc <__flatcc_fb_codegen_c@@Base+0x2b7c>
   18244:	b	18214 <__flatcc_fb_codegen_c@@Base+0x21b4>
   18248:	ldr	r2, [pc, #2448]	; 18be0 <__flatcc_fb_codegen_c@@Base+0x2b80>
   1824c:	b	18214 <__flatcc_fb_codegen_c@@Base+0x21b4>
   18250:	ldr	r2, [pc, #2444]	; 18be4 <__flatcc_fb_codegen_c@@Base+0x2b84>
   18254:	b	18214 <__flatcc_fb_codegen_c@@Base+0x21b4>
   18258:	ldr	r4, [pc, #2460]	; 18bfc <__flatcc_fb_codegen_c@@Base+0x2b9c>
   1825c:	ldr	r3, [pc, #2508]	; 18c30 <__flatcc_fb_codegen_c@@Base+0x2bd0>
   18260:	ldr	r0, [r3]
   18264:	ldr	r3, [pc, #2452]	; 18c00 <__flatcc_fb_codegen_c@@Base+0x2ba0>
   18268:	str	r3, [sp]
   1826c:	mov	r3, #226	; 0xe2
   18270:	mov	r2, r4
   18274:	ldr	r1, [pc, #2492]	; 18c38 <__flatcc_fb_codegen_c@@Base+0x2bd8>
   18278:	bl	14094 <fprintf@plt>
   1827c:	ldr	r3, [pc, #2404]	; 18be8 <__flatcc_fb_codegen_c@@Base+0x2b88>
   18280:	mov	r2, #226	; 0xe2
   18284:	mov	r1, r4
   18288:	ldr	r0, [pc, #2480]	; 18c40 <__flatcc_fb_codegen_c@@Base+0x2be0>
   1828c:	bl	14148 <__assert_fail@plt>
   18290:	ldr	r2, [pc, #2388]	; 18bec <__flatcc_fb_codegen_c@@Base+0x2b8c>
   18294:	b	18214 <__flatcc_fb_codegen_c@@Base+0x21b4>
   18298:	ldr	r2, [pc, #2384]	; 18bf0 <__flatcc_fb_codegen_c@@Base+0x2b90>
   1829c:	b	18214 <__flatcc_fb_codegen_c@@Base+0x21b4>
   182a0:	ldr	r9, [pc, #2148]	; 18b0c <__flatcc_fb_codegen_c@@Base+0x2aac>
   182a4:	ldr	r2, [pc, #2148]	; 18b10 <__flatcc_fb_codegen_c@@Base+0x2ab0>
   182a8:	str	r2, [sp, #60]	; 0x3c
   182ac:	b	182b8 <__flatcc_fb_codegen_c@@Base+0x2258>
   182b0:	ldr	r9, [pc, #2140]	; 18b14 <__flatcc_fb_codegen_c@@Base+0x2ab4>
   182b4:	str	r9, [sp, #60]	; 0x3c
   182b8:	cmp	r3, #11
   182bc:	bne	182f0 <__flatcc_fb_codegen_c@@Base+0x2290>
   182c0:	vldr	d7, [r5, #48]	; 0x30
   182c4:	vcvt.f32.f64	s14, d7
   182c8:	vcvt.f64.f32	d7, s14
   182cc:	vmov	r2, r3, d7
   182d0:	ldr	r1, [pc, #2332]	; 18bf4 <__flatcc_fb_codegen_c@@Base+0x2b94>
   182d4:	add	r0, sp, #508	; 0x1fc
   182d8:	bl	14100 <sprintf@plt>
   182dc:	str	fp, [sp, #52]	; 0x34
   182e0:	b	17e9c <__flatcc_fb_codegen_c@@Base+0x1e3c>
   182e4:	ldr	r9, [pc, #2092]	; 18b18 <__flatcc_fb_codegen_c@@Base+0x2ab8>
   182e8:	str	r9, [sp, #60]	; 0x3c
   182ec:	b	182c0 <__flatcc_fb_codegen_c@@Base+0x2260>
   182f0:	str	fp, [sp, #52]	; 0x34
   182f4:	ldrd	r2, [r5, #48]	; 0x30
   182f8:	ldr	r1, [pc, #2296]	; 18bf8 <__flatcc_fb_codegen_c@@Base+0x2b98>
   182fc:	add	r0, sp, #508	; 0x1fc
   18300:	bl	14100 <sprintf@plt>
   18304:	b	17e9c <__flatcc_fb_codegen_c@@Base+0x1e3c>
   18308:	ldr	r4, [pc, #2284]	; 18bfc <__flatcc_fb_codegen_c@@Base+0x2b9c>
   1830c:	ldr	r3, [pc, #2332]	; 18c30 <__flatcc_fb_codegen_c@@Base+0x2bd0>
   18310:	ldr	r0, [r3]
   18314:	ldr	r3, [pc, #2276]	; 18c00 <__flatcc_fb_codegen_c@@Base+0x2ba0>
   18318:	str	r3, [sp]
   1831c:	mov	r3, #260	; 0x104
   18320:	mov	r2, r4
   18324:	ldr	r1, [pc, #2316]	; 18c38 <__flatcc_fb_codegen_c@@Base+0x2bd8>
   18328:	bl	14094 <fprintf@plt>
   1832c:	ldr	r3, [pc, #2256]	; 18c04 <__flatcc_fb_codegen_c@@Base+0x2ba4>
   18330:	mov	r2, #260	; 0x104
   18334:	mov	r1, r4
   18338:	ldr	r0, [pc, #2304]	; 18c40 <__flatcc_fb_codegen_c@@Base+0x2be0>
   1833c:	bl	14148 <__assert_fail@plt>
   18340:	ldr	r3, [r4, #204]	; 0xcc
   18344:	mov	r2, #66	; 0x42
   18348:	mov	r1, #1
   1834c:	ldr	r0, [pc, #2228]	; 18c08 <__flatcc_fb_codegen_c@@Base+0x2ba8>
   18350:	bl	1401c <fwrite@plt>
   18354:	ldr	r3, [r4, #204]	; 0xcc
   18358:	mov	r2, #61	; 0x3d
   1835c:	mov	r1, #1
   18360:	ldr	r0, [pc, #2212]	; 18c0c <__flatcc_fb_codegen_c@@Base+0x2bac>
   18364:	bl	1401c <fwrite@plt>
   18368:	str	r9, [sp, #12]
   1836c:	ldr	r3, [sp, #52]	; 0x34
   18370:	str	r3, [sp, #8]
   18374:	str	r7, [sp, #4]
   18378:	str	r6, [sp]
   1837c:	add	r3, sp, #828	; 0x33c
   18380:	ldr	r2, [sp, #44]	; 0x2c
   18384:	ldr	r1, [pc, #1948]	; 18b28 <__flatcc_fb_codegen_c@@Base+0x2ac8>
   18388:	ldr	r0, [r4, #204]	; 0xcc
   1838c:	bl	14094 <fprintf@plt>
   18390:	ldr	r3, [r4, #212]	; 0xd4
   18394:	ldr	r3, [r3, #136]	; 0x88
   18398:	cmp	r3, #0
   1839c:	beq	17d54 <__flatcc_fb_codegen_c@@Base+0x1cf4>
   183a0:	b	17f90 <__flatcc_fb_codegen_c@@Base+0x1f30>
   183a4:	ldr	r3, [r5, #16]
   183a8:	sub	r3, r3, #1
   183ac:	cmp	r3, #10
   183b0:	ldrls	pc, [pc, r3, lsl #2]
   183b4:	b	1842c <__flatcc_fb_codegen_c@@Base+0x23cc>
   183b8:	andeq	r8, r1, r4, ror #8
   183bc:	andeq	r8, r1, r4, ror #7
   183c0:	andeq	r8, r1, ip, ror #8
   183c4:	andeq	r8, r1, ip, ror #7
   183c8:	strdeq	r8, [r1], -r4
   183cc:	strdeq	r8, [r1], -ip
   183d0:	andeq	r8, r1, r4, lsl #8
   183d4:	andeq	r8, r1, ip, lsl #8
   183d8:	andeq	r8, r1, r4, lsl r4
   183dc:	andeq	r8, r1, r4, lsr #8
   183e0:	andeq	r8, r1, ip, lsl r4
   183e4:	ldr	r3, [pc, #1872]	; 18b3c <__flatcc_fb_codegen_c@@Base+0x2adc>
   183e8:	b	18470 <__flatcc_fb_codegen_c@@Base+0x2410>
   183ec:	ldr	r3, [pc, #1868]	; 18b40 <__flatcc_fb_codegen_c@@Base+0x2ae0>
   183f0:	b	18470 <__flatcc_fb_codegen_c@@Base+0x2410>
   183f4:	ldr	r3, [pc, #1860]	; 18b40 <__flatcc_fb_codegen_c@@Base+0x2ae0>
   183f8:	b	18470 <__flatcc_fb_codegen_c@@Base+0x2410>
   183fc:	ldr	r3, [pc, #1856]	; 18b44 <__flatcc_fb_codegen_c@@Base+0x2ae4>
   18400:	b	18470 <__flatcc_fb_codegen_c@@Base+0x2410>
   18404:	ldr	r3, [pc, #1852]	; 18b48 <__flatcc_fb_codegen_c@@Base+0x2ae8>
   18408:	b	18470 <__flatcc_fb_codegen_c@@Base+0x2410>
   1840c:	ldr	r3, [pc, #1848]	; 18b4c <__flatcc_fb_codegen_c@@Base+0x2aec>
   18410:	b	18470 <__flatcc_fb_codegen_c@@Base+0x2410>
   18414:	ldr	r3, [pc, #1844]	; 18b50 <__flatcc_fb_codegen_c@@Base+0x2af0>
   18418:	b	18470 <__flatcc_fb_codegen_c@@Base+0x2410>
   1841c:	ldr	r3, [pc, #1840]	; 18b54 <__flatcc_fb_codegen_c@@Base+0x2af4>
   18420:	b	18470 <__flatcc_fb_codegen_c@@Base+0x2410>
   18424:	ldr	r3, [pc, #1836]	; 18b58 <__flatcc_fb_codegen_c@@Base+0x2af8>
   18428:	b	18470 <__flatcc_fb_codegen_c@@Base+0x2410>
   1842c:	ldr	r4, [pc, #1992]	; 18bfc <__flatcc_fb_codegen_c@@Base+0x2b9c>
   18430:	ldr	r3, [pc, #2040]	; 18c30 <__flatcc_fb_codegen_c@@Base+0x2bd0>
   18434:	ldr	r0, [r3]
   18438:	ldr	r3, [pc, #1984]	; 18c00 <__flatcc_fb_codegen_c@@Base+0x2ba0>
   1843c:	str	r3, [sp]
   18440:	mov	r3, #186	; 0xba
   18444:	mov	r2, r4
   18448:	ldr	r1, [pc, #2024]	; 18c38 <__flatcc_fb_codegen_c@@Base+0x2bd8>
   1844c:	bl	14094 <fprintf@plt>
   18450:	ldr	r3, [pc, #1796]	; 18b5c <__flatcc_fb_codegen_c@@Base+0x2afc>
   18454:	mov	r2, #186	; 0xba
   18458:	mov	r1, r4
   1845c:	ldr	r0, [pc, #2012]	; 18c40 <__flatcc_fb_codegen_c@@Base+0x2be0>
   18460:	bl	14148 <__assert_fail@plt>
   18464:	ldr	r3, [pc, #1780]	; 18b60 <__flatcc_fb_codegen_c@@Base+0x2b00>
   18468:	b	18470 <__flatcc_fb_codegen_c@@Base+0x2410>
   1846c:	ldr	r3, [pc, #1776]	; 18b64 <__flatcc_fb_codegen_c@@Base+0x2b04>
   18470:	str	r9, [sp, #28]
   18474:	str	r3, [sp, #24]
   18478:	ldr	r1, [sp, #44]	; 0x2c
   1847c:	str	r1, [sp, #20]
   18480:	str	r7, [sp, #16]
   18484:	str	r6, [sp, #12]
   18488:	add	r3, sp, #828	; 0x33c
   1848c:	str	r3, [sp, #8]
   18490:	ldrd	r2, [r5, #96]	; 0x60
   18494:	strd	r2, [sp]
   18498:	mov	r2, r1
   1849c:	ldr	r1, [pc, #1732]	; 18b68 <__flatcc_fb_codegen_c@@Base+0x2b08>
   184a0:	ldr	r0, [r4, #204]	; 0xcc
   184a4:	bl	14094 <fprintf@plt>
   184a8:	ldr	r6, [r5, #104]	; 0x68
   184ac:	cmp	r6, #0
   184b0:	beq	18778 <__flatcc_fb_codegen_c@@Base+0x2718>
   184b4:	mov	r7, #220	; 0xdc
   184b8:	mov	r2, r7
   184bc:	mov	r1, #0
   184c0:	add	r0, sp, #68	; 0x44
   184c4:	bl	140ac <memset@plt>
   184c8:	mov	r2, r7
   184cc:	mov	r1, #0
   184d0:	add	r0, sp, #288	; 0x120
   184d4:	bl	140ac <memset@plt>
   184d8:	cmp	r6, #0
   184dc:	beq	18778 <__flatcc_fb_codegen_c@@Base+0x2718>
   184e0:	ldrh	r3, [r6, #8]
   184e4:	cmp	r3, #0
   184e8:	beq	18598 <__flatcc_fb_codegen_c@@Base+0x2538>
   184ec:	cmp	r3, #1
   184f0:	bne	1855c <__flatcc_fb_codegen_c@@Base+0x24fc>
   184f4:	ldr	r7, [pc, #1648]	; 18b6c <__flatcc_fb_codegen_c@@Base+0x2b0c>
   184f8:	add	r2, sp, #68	; 0x44
   184fc:	mov	r1, r6
   18500:	ldr	r0, [r6, #12]
   18504:	bl	15edc <__flatcc_fb_scoped_symbol_name@@Base>
   18508:	ldrh	r3, [r8, #8]
   1850c:	cmp	r3, #0
   18510:	bne	185a0 <__flatcc_fb_codegen_c@@Base+0x2540>
   18514:	add	r2, sp, #288	; 0x120
   18518:	ldr	r1, [sp, #56]	; 0x38
   1851c:	ldr	r0, [r8, #12]
   18520:	bl	15edc <__flatcc_fb_scoped_symbol_name@@Base>
   18524:	ldr	r3, [r5, #4]
   18528:	str	r7, [sp, #12]
   1852c:	add	r2, sp, #68	; 0x44
   18530:	str	r2, [sp, #8]
   18534:	ldr	r2, [r3]
   18538:	str	r2, [sp, #4]
   1853c:	ldr	r3, [r3, #4]
   18540:	str	r3, [sp]
   18544:	add	r3, sp, #288	; 0x120
   18548:	ldr	r2, [sp, #44]	; 0x2c
   1854c:	ldr	r1, [pc, #1564]	; 18b70 <__flatcc_fb_codegen_c@@Base+0x2b10>
   18550:	ldr	r0, [r4, #204]	; 0xcc
   18554:	bl	14094 <fprintf@plt>
   18558:	b	18778 <__flatcc_fb_codegen_c@@Base+0x2718>
   1855c:	ldr	r5, [pc, #1552]	; 18b74 <__flatcc_fb_codegen_c@@Base+0x2b14>
   18560:	ldr	r4, [pc, #1408]	; 18ae8 <__flatcc_fb_codegen_c@@Base+0x2a88>
   18564:	ldr	r3, [pc, #1732]	; 18c30 <__flatcc_fb_codegen_c@@Base+0x2bd0>
   18568:	ldr	r0, [r3]
   1856c:	ldr	r3, [pc, #1540]	; 18b78 <__flatcc_fb_codegen_c@@Base+0x2b18>
   18570:	str	r3, [sp]
   18574:	mov	r3, r5
   18578:	mov	r2, r4
   1857c:	ldr	r1, [pc, #1716]	; 18c38 <__flatcc_fb_codegen_c@@Base+0x2bd8>
   18580:	bl	14094 <fprintf@plt>
   18584:	ldr	r3, [pc, #1520]	; 18b7c <__flatcc_fb_codegen_c@@Base+0x2b1c>
   18588:	mov	r2, r5
   1858c:	mov	r1, r4
   18590:	ldr	r0, [pc, #1704]	; 18c40 <__flatcc_fb_codegen_c@@Base+0x2be0>
   18594:	bl	14148 <__assert_fail@plt>
   18598:	ldr	r7, [pc, #1504]	; 18b80 <__flatcc_fb_codegen_c@@Base+0x2b20>
   1859c:	b	184f8 <__flatcc_fb_codegen_c@@Base+0x2498>
   185a0:	ldr	r3, [pc, #1492]	; 18b7c <__flatcc_fb_codegen_c@@Base+0x2b1c>
   185a4:	ldr	r2, [pc, #1496]	; 18b84 <__flatcc_fb_codegen_c@@Base+0x2b24>
   185a8:	ldr	r1, [pc, #1336]	; 18ae8 <__flatcc_fb_codegen_c@@Base+0x2a88>
   185ac:	ldr	r0, [pc, #1492]	; 18b88 <__flatcc_fb_codegen_c@@Base+0x2b28>
   185b0:	bl	14148 <__assert_fail@plt>
   185b4:	str	r9, [sp, #20]
   185b8:	str	r7, [sp, #16]
   185bc:	str	r6, [sp, #12]
   185c0:	add	r3, sp, #828	; 0x33c
   185c4:	str	r3, [sp, #8]
   185c8:	ldrd	r2, [r5, #96]	; 0x60
   185cc:	strd	r2, [sp]
   185d0:	ldr	r2, [sp, #44]	; 0x2c
   185d4:	ldr	r1, [pc, #1456]	; 18b8c <__flatcc_fb_codegen_c@@Base+0x2b2c>
   185d8:	ldr	r0, [r4, #204]	; 0xcc
   185dc:	bl	14094 <fprintf@plt>
   185e0:	ldr	r3, [r4, #212]	; 0xd4
   185e4:	ldr	r3, [r3, #32]
   185e8:	cmp	r3, #0
   185ec:	bne	18618 <__flatcc_fb_codegen_c@@Base+0x25b8>
   185f0:	ldrh	r3, [r5, #72]	; 0x48
   185f4:	tst	r3, #128	; 0x80
   185f8:	beq	17d54 <__flatcc_fb_codegen_c@@Base+0x1cf4>
   185fc:	str	r7, [sp, #4]
   18600:	str	r6, [sp]
   18604:	add	r3, sp, #828	; 0x33c
   18608:	ldr	r2, [sp, #44]	; 0x2c
   1860c:	ldr	r1, [pc, #1404]	; 18b90 <__flatcc_fb_codegen_c@@Base+0x2b30>
   18610:	ldr	r0, [r4, #204]	; 0xcc
   18614:	bl	14094 <fprintf@plt>
   18618:	ldrh	r3, [r5, #72]	; 0x48
   1861c:	tst	r3, #128	; 0x80
   18620:	beq	17d54 <__flatcc_fb_codegen_c@@Base+0x1cf4>
   18624:	ldr	r3, [sp, #48]	; 0x30
   18628:	cmp	r3, #0
   1862c:	bne	18700 <__flatcc_fb_codegen_c@@Base+0x26a0>
   18630:	str	r7, [sp, #4]
   18634:	str	r6, [sp]
   18638:	add	r3, sp, #828	; 0x33c
   1863c:	ldr	r2, [sp, #44]	; 0x2c
   18640:	ldr	r1, [pc, #1356]	; 18b94 <__flatcc_fb_codegen_c@@Base+0x2b34>
   18644:	ldr	r0, [r4, #204]	; 0xcc
   18648:	bl	14094 <fprintf@plt>
   1864c:	ldr	r3, [r4, #212]	; 0xd4
   18650:	ldr	r3, [r3, #136]	; 0x88
   18654:	cmp	r3, #0
   18658:	beq	18684 <__flatcc_fb_codegen_c@@Base+0x2624>
   1865c:	str	r7, [sp, #4]
   18660:	str	r6, [sp]
   18664:	add	r3, sp, #828	; 0x33c
   18668:	ldr	r2, [sp, #44]	; 0x2c
   1866c:	ldr	r1, [pc, #1316]	; 18b98 <__flatcc_fb_codegen_c@@Base+0x2b38>
   18670:	ldr	r0, [r4, #204]	; 0xcc
   18674:	bl	14094 <fprintf@plt>
   18678:	ldr	r3, [sp, #48]	; 0x30
   1867c:	cmp	r3, #0
   18680:	bne	17d54 <__flatcc_fb_codegen_c@@Base+0x1cf4>
   18684:	str	r7, [sp, #4]
   18688:	str	r6, [sp]
   1868c:	add	r3, sp, #828	; 0x33c
   18690:	ldr	r9, [sp, #44]	; 0x2c
   18694:	mov	r2, r9
   18698:	ldr	r1, [pc, #1276]	; 18b9c <__flatcc_fb_codegen_c@@Base+0x2b3c>
   1869c:	ldr	r0, [r4, #204]	; 0xcc
   186a0:	bl	14094 <fprintf@plt>
   186a4:	str	r7, [sp, #4]
   186a8:	str	r6, [sp]
   186ac:	add	r3, sp, #828	; 0x33c
   186b0:	mov	r2, r9
   186b4:	ldr	r1, [pc, #1252]	; 18ba0 <__flatcc_fb_codegen_c@@Base+0x2b40>
   186b8:	ldr	r0, [r4, #204]	; 0xcc
   186bc:	bl	14094 <fprintf@plt>
   186c0:	ldr	r3, [r4, #212]	; 0xd4
   186c4:	ldr	r3, [r3, #136]	; 0x88
   186c8:	cmp	r3, #0
   186cc:	moveq	r3, #1
   186d0:	streq	r3, [sp, #48]	; 0x30
   186d4:	beq	17d54 <__flatcc_fb_codegen_c@@Base+0x1cf4>
   186d8:	str	r7, [sp, #4]
   186dc:	str	r6, [sp]
   186e0:	add	r3, sp, #828	; 0x33c
   186e4:	mov	r2, r3
   186e8:	ldr	r1, [pc, #1096]	; 18b38 <__flatcc_fb_codegen_c@@Base+0x2ad8>
   186ec:	ldr	r0, [r4, #204]	; 0xcc
   186f0:	bl	14094 <fprintf@plt>
   186f4:	mov	r3, #1
   186f8:	str	r3, [sp, #48]	; 0x30
   186fc:	b	17d54 <__flatcc_fb_codegen_c@@Base+0x1cf4>
   18700:	ldr	r3, [r4, #204]	; 0xcc
   18704:	mov	r2, #66	; 0x42
   18708:	mov	r1, #1
   1870c:	ldr	r0, [pc, #1268]	; 18c08 <__flatcc_fb_codegen_c@@Base+0x2ba8>
   18710:	bl	1401c <fwrite@plt>
   18714:	str	r7, [sp, #4]
   18718:	str	r6, [sp]
   1871c:	add	r3, sp, #828	; 0x33c
   18720:	ldr	r2, [sp, #44]	; 0x2c
   18724:	ldr	r1, [pc, #1128]	; 18b94 <__flatcc_fb_codegen_c@@Base+0x2b34>
   18728:	ldr	r0, [r4, #204]	; 0xcc
   1872c:	bl	14094 <fprintf@plt>
   18730:	ldr	r3, [r4, #212]	; 0xd4
   18734:	ldr	r3, [r3, #136]	; 0x88
   18738:	cmp	r3, #0
   1873c:	beq	17d54 <__flatcc_fb_codegen_c@@Base+0x1cf4>
   18740:	b	1865c <__flatcc_fb_codegen_c@@Base+0x25fc>
   18744:	str	r9, [sp, #24]
   18748:	ldr	r1, [sp, #44]	; 0x2c
   1874c:	str	r1, [sp, #20]
   18750:	str	r7, [sp, #16]
   18754:	str	r6, [sp, #12]
   18758:	add	r3, sp, #828	; 0x33c
   1875c:	str	r3, [sp, #8]
   18760:	ldrd	r2, [r5, #96]	; 0x60
   18764:	strd	r2, [sp]
   18768:	mov	r2, r1
   1876c:	ldr	r1, [pc, #1072]	; 18ba4 <__flatcc_fb_codegen_c@@Base+0x2b44>
   18770:	ldr	r0, [r4, #204]	; 0xcc
   18774:	bl	14094 <fprintf@plt>
   18778:	ldrh	r3, [r5, #72]	; 0x48
   1877c:	tst	r3, #128	; 0x80
   18780:	beq	17d54 <__flatcc_fb_codegen_c@@Base+0x1cf4>
   18784:	ldr	r3, [r4, #204]	; 0xcc
   18788:	mov	r2, #84	; 0x54
   1878c:	mov	r1, #1
   18790:	ldr	r0, [pc, #1040]	; 18ba8 <__flatcc_fb_codegen_c@@Base+0x2b48>
   18794:	bl	1401c <fwrite@plt>
   18798:	mov	r3, #1
   1879c:	str	r3, [sp, #48]	; 0x30
   187a0:	b	17d54 <__flatcc_fb_codegen_c@@Base+0x1cf4>
   187a4:	ldr	r3, [r5, #16]
   187a8:	add	r2, sp, #608	; 0x260
   187ac:	mov	r1, r3
   187b0:	ldr	r0, [r3, #12]
   187b4:	bl	15edc <__flatcc_fb_scoped_symbol_name@@Base>
   187b8:	ldr	r2, [r5, #16]
   187bc:	ldrh	r3, [r2, #8]
   187c0:	cmp	r3, #4
   187c4:	ldrls	pc, [pc, r3, lsl #2]
   187c8:	b	18f10 <__flatcc_fb_codegen_c@@Base+0x2eb0>
   187cc:	andeq	r8, r1, r8, lsl r8
   187d0:	andeq	r8, r1, r0, ror #15
   187d4:	andeq	r8, r1, r0, lsl pc
   187d8:	andeq	r8, r1, r0, asr r8
   187dc:	ldrdeq	r8, [r1], -r4
   187e0:	str	r9, [sp, #24]
   187e4:	add	r3, sp, #608	; 0x260
   187e8:	str	r3, [sp, #20]
   187ec:	str	r7, [sp, #16]
   187f0:	str	r6, [sp, #12]
   187f4:	add	r3, sp, #828	; 0x33c
   187f8:	str	r3, [sp, #8]
   187fc:	ldrd	r2, [r5, #96]	; 0x60
   18800:	strd	r2, [sp]
   18804:	ldr	r2, [sp, #44]	; 0x2c
   18808:	ldr	r1, [pc, #924]	; 18bac <__flatcc_fb_codegen_c@@Base+0x2b4c>
   1880c:	ldr	r0, [r4, #204]	; 0xcc
   18810:	bl	14094 <fprintf@plt>
   18814:	b	18778 <__flatcc_fb_codegen_c@@Base+0x2718>
   18818:	str	r9, [sp, #24]
   1881c:	add	r3, sp, #608	; 0x260
   18820:	str	r3, [sp, #20]
   18824:	str	r7, [sp, #16]
   18828:	str	r6, [sp, #12]
   1882c:	add	r3, sp, #828	; 0x33c
   18830:	str	r3, [sp, #8]
   18834:	ldrd	r2, [r5, #96]	; 0x60
   18838:	strd	r2, [sp]
   1883c:	ldr	r2, [sp, #44]	; 0x2c
   18840:	ldr	r1, [pc, #872]	; 18bb0 <__flatcc_fb_codegen_c@@Base+0x2b50>
   18844:	ldr	r0, [r4, #204]	; 0xcc
   18848:	bl	14094 <fprintf@plt>
   1884c:	b	18778 <__flatcc_fb_codegen_c@@Base+0x2718>
   18850:	ldr	r3, [r2, #40]	; 0x28
   18854:	ldrh	r2, [r5, #56]	; 0x38
   18858:	sub	r2, r2, #3
   1885c:	cmp	r2, #3
   18860:	ldrls	pc, [pc, r2, lsl #2]
   18864:	b	18e3c <__flatcc_fb_codegen_c@@Base+0x2ddc>
   18868:	andeq	r8, r1, r0, lsl lr
   1886c:	andeq	r8, r1, r4, lsl #25
   18870:	andeq	r8, r1, r8, ror r8
   18874:	andeq	r8, r1, ip, asr #26
   18878:	sub	r3, r3, #1
   1887c:	cmp	r3, #8
   18880:	ldrls	pc, [pc, r3, lsl #2]
   18884:	b	18a88 <__flatcc_fb_codegen_c@@Base+0x2a28>
   18888:	andeq	r8, r1, r0, asr #21
   1888c:	andeq	r8, r1, ip, lsr #17
   18890:	andeq	r8, r1, r8, asr #21
   18894:	andeq	r8, r1, r8, asr sl
   18898:	andeq	r8, r1, r0, ror #20
   1889c:	andeq	r8, r1, r8, ror #20
   188a0:	andeq	r8, r1, r0, ror sl
   188a4:	andeq	r8, r1, r8, ror sl
   188a8:	andeq	r8, r1, r0, lsl #21
   188ac:	ldr	r2, [pc, #792]	; 18bcc <__flatcc_fb_codegen_c@@Base+0x2b6c>
   188b0:	ldrd	r0, [r5, #48]	; 0x30
   188b4:	strd	r0, [sp]
   188b8:	ldr	r1, [pc, #604]	; 18b1c <__flatcc_fb_codegen_c@@Base+0x2abc>
   188bc:	add	r0, sp, #508	; 0x1fc
   188c0:	bl	14100 <sprintf@plt>
   188c4:	add	r3, sp, #508	; 0x1fc
   188c8:	str	r3, [sp, #28]
   188cc:	add	r3, sp, #608	; 0x260
   188d0:	str	r3, [sp, #24]
   188d4:	str	r3, [sp, #20]
   188d8:	str	r7, [sp, #16]
   188dc:	str	r6, [sp, #12]
   188e0:	add	r3, sp, #828	; 0x33c
   188e4:	str	r3, [sp, #8]
   188e8:	ldrd	r2, [r5, #96]	; 0x60
   188ec:	strd	r2, [sp]
   188f0:	ldr	r2, [sp, #44]	; 0x2c
   188f4:	ldr	r1, [pc, #696]	; 18bb4 <__flatcc_fb_codegen_c@@Base+0x2b54>
   188f8:	ldr	r0, [r4, #204]	; 0xcc
   188fc:	bl	14094 <fprintf@plt>
   18900:	ldr	r3, [r4, #212]	; 0xd4
   18904:	ldr	r3, [r3, #32]
   18908:	cmp	r3, #0
   1890c:	bne	18940 <__flatcc_fb_codegen_c@@Base+0x28e0>
   18910:	ldrh	r3, [r5, #72]	; 0x48
   18914:	tst	r3, #128	; 0x80
   18918:	beq	17d54 <__flatcc_fb_codegen_c@@Base+0x1cf4>
   1891c:	add	r3, sp, #608	; 0x260
   18920:	str	r3, [sp, #8]
   18924:	str	r7, [sp, #4]
   18928:	str	r6, [sp]
   1892c:	add	r3, sp, #828	; 0x33c
   18930:	ldr	r2, [sp, #44]	; 0x2c
   18934:	ldr	r1, [pc, #636]	; 18bb8 <__flatcc_fb_codegen_c@@Base+0x2b58>
   18938:	ldr	r0, [r4, #204]	; 0xcc
   1893c:	bl	14094 <fprintf@plt>
   18940:	ldrh	r3, [r5, #72]	; 0x48
   18944:	tst	r3, #128	; 0x80
   18948:	beq	17d54 <__flatcc_fb_codegen_c@@Base+0x1cf4>
   1894c:	ldr	r3, [sp, #48]	; 0x30
   18950:	cmp	r3, #0
   18954:	bne	18e74 <__flatcc_fb_codegen_c@@Base+0x2e14>
   18958:	ldr	r3, [r4, #204]	; 0xcc
   1895c:	mov	r2, #61	; 0x3d
   18960:	mov	r1, #1
   18964:	ldr	r0, [pc, #672]	; 18c0c <__flatcc_fb_codegen_c@@Base+0x2bac>
   18968:	bl	1401c <fwrite@plt>
   1896c:	add	r3, sp, #608	; 0x260
   18970:	str	r3, [sp, #8]
   18974:	str	r7, [sp, #4]
   18978:	str	r6, [sp]
   1897c:	add	r3, sp, #828	; 0x33c
   18980:	ldr	r2, [sp, #44]	; 0x2c
   18984:	ldr	r1, [pc, #644]	; 18c10 <__flatcc_fb_codegen_c@@Base+0x2bb0>
   18988:	ldr	r0, [r4, #204]	; 0xcc
   1898c:	bl	14094 <fprintf@plt>
   18990:	ldr	r3, [r4, #212]	; 0xd4
   18994:	ldr	r3, [r3, #136]	; 0x88
   18998:	cmp	r3, #0
   1899c:	beq	189d4 <__flatcc_fb_codegen_c@@Base+0x2974>
   189a0:	ldr	r2, [sp, #44]	; 0x2c
   189a4:	str	r2, [sp, #12]
   189a8:	add	r3, sp, #608	; 0x260
   189ac:	str	r3, [sp, #8]
   189b0:	str	r7, [sp, #4]
   189b4:	str	r6, [sp]
   189b8:	add	r3, sp, #828	; 0x33c
   189bc:	ldr	r1, [pc, #504]	; 18bbc <__flatcc_fb_codegen_c@@Base+0x2b5c>
   189c0:	ldr	r0, [r4, #204]	; 0xcc
   189c4:	bl	14094 <fprintf@plt>
   189c8:	ldr	r3, [sp, #48]	; 0x30
   189cc:	cmp	r3, #0
   189d0:	bne	17d54 <__flatcc_fb_codegen_c@@Base+0x1cf4>
   189d4:	add	r9, sp, #608	; 0x260
   189d8:	str	r9, [sp, #8]
   189dc:	str	r7, [sp, #4]
   189e0:	str	r6, [sp]
   189e4:	add	r3, sp, #828	; 0x33c
   189e8:	ldr	r2, [sp, #44]	; 0x2c
   189ec:	ldr	r1, [pc, #460]	; 18bc0 <__flatcc_fb_codegen_c@@Base+0x2b60>
   189f0:	ldr	r0, [r4, #204]	; 0xcc
   189f4:	bl	14094 <fprintf@plt>
   189f8:	str	r9, [sp, #8]
   189fc:	str	r7, [sp, #4]
   18a00:	str	r6, [sp]
   18a04:	add	r3, sp, #828	; 0x33c
   18a08:	ldr	r2, [sp, #44]	; 0x2c
   18a0c:	ldr	r1, [pc, #432]	; 18bc4 <__flatcc_fb_codegen_c@@Base+0x2b64>
   18a10:	ldr	r0, [r4, #204]	; 0xcc
   18a14:	bl	14094 <fprintf@plt>
   18a18:	ldr	r3, [r4, #212]	; 0xd4
   18a1c:	ldr	r3, [r3, #136]	; 0x88
   18a20:	cmp	r3, #0
   18a24:	moveq	r3, #1
   18a28:	streq	r3, [sp, #48]	; 0x30
   18a2c:	beq	17d54 <__flatcc_fb_codegen_c@@Base+0x1cf4>
   18a30:	str	r7, [sp, #4]
   18a34:	str	r6, [sp]
   18a38:	add	r3, sp, #828	; 0x33c
   18a3c:	mov	r2, r3
   18a40:	ldr	r1, [pc, #240]	; 18b38 <__flatcc_fb_codegen_c@@Base+0x2ad8>
   18a44:	ldr	r0, [r4, #204]	; 0xcc
   18a48:	bl	14094 <fprintf@plt>
   18a4c:	mov	r3, #1
   18a50:	str	r3, [sp, #48]	; 0x30
   18a54:	b	17d54 <__flatcc_fb_codegen_c@@Base+0x1cf4>
   18a58:	ldr	r2, [pc, #372]	; 18bd4 <__flatcc_fb_codegen_c@@Base+0x2b74>
   18a5c:	b	188b0 <__flatcc_fb_codegen_c@@Base+0x2850>
   18a60:	ldr	r2, [pc, #364]	; 18bd4 <__flatcc_fb_codegen_c@@Base+0x2b74>
   18a64:	b	188b0 <__flatcc_fb_codegen_c@@Base+0x2850>
   18a68:	ldr	r2, [pc, #360]	; 18bd8 <__flatcc_fb_codegen_c@@Base+0x2b78>
   18a6c:	b	188b0 <__flatcc_fb_codegen_c@@Base+0x2850>
   18a70:	ldr	r2, [pc, #356]	; 18bdc <__flatcc_fb_codegen_c@@Base+0x2b7c>
   18a74:	b	188b0 <__flatcc_fb_codegen_c@@Base+0x2850>
   18a78:	ldr	r2, [pc, #352]	; 18be0 <__flatcc_fb_codegen_c@@Base+0x2b80>
   18a7c:	b	188b0 <__flatcc_fb_codegen_c@@Base+0x2850>
   18a80:	ldr	r2, [pc, #348]	; 18be4 <__flatcc_fb_codegen_c@@Base+0x2b84>
   18a84:	b	188b0 <__flatcc_fb_codegen_c@@Base+0x2850>
   18a88:	ldr	r4, [pc, #364]	; 18bfc <__flatcc_fb_codegen_c@@Base+0x2b9c>
   18a8c:	ldr	r3, [pc, #412]	; 18c30 <__flatcc_fb_codegen_c@@Base+0x2bd0>
   18a90:	ldr	r0, [r3]
   18a94:	ldr	r3, [pc, #356]	; 18c00 <__flatcc_fb_codegen_c@@Base+0x2ba0>
   18a98:	str	r3, [sp]
   18a9c:	mov	r3, #226	; 0xe2
   18aa0:	mov	r2, r4
   18aa4:	ldr	r1, [pc, #396]	; 18c38 <__flatcc_fb_codegen_c@@Base+0x2bd8>
   18aa8:	bl	14094 <fprintf@plt>
   18aac:	ldr	r3, [pc, #308]	; 18be8 <__flatcc_fb_codegen_c@@Base+0x2b88>
   18ab0:	mov	r2, #226	; 0xe2
   18ab4:	mov	r1, r4
   18ab8:	ldr	r0, [pc, #384]	; 18c40 <__flatcc_fb_codegen_c@@Base+0x2be0>
   18abc:	bl	14148 <__assert_fail@plt>
   18ac0:	ldr	r2, [pc, #292]	; 18bec <__flatcc_fb_codegen_c@@Base+0x2b8c>
   18ac4:	b	188b0 <__flatcc_fb_codegen_c@@Base+0x2850>
   18ac8:	ldr	r2, [pc, #288]	; 18bf0 <__flatcc_fb_codegen_c@@Base+0x2b90>
   18acc:	b	188b0 <__flatcc_fb_codegen_c@@Base+0x2850>
   18ad0:	muleq	r4, r0, r4
   18ad4:	strdeq	ip, [r3], -r4
   18ad8:	andeq	ip, r3, ip, ror #27
   18adc:	andeq	r5, r4, r4, asr #3
   18ae0:	andeq	ip, r3, r8, lsl #20
   18ae4:	andeq	r0, r0, r2, asr r5
   18ae8:	andeq	ip, r3, r8, asr sl
   18aec:	andeq	sp, r3, r0, lsl #19
   18af0:	andeq	sp, r3, ip, asr r8
   18af4:	andeq	sp, r3, r0, lsr #19
   18af8:	andeq	sp, r3, ip, lsr #10
   18afc:	andeq	sp, r3, ip, asr #19
   18b00:	andeq	sp, r3, r4, lsr sl
   18b04:	andeq	sp, r3, ip, asr #20
   18b08:			; <UNDEFINED> instruction: 0x0003c9b8
   18b0c:	andeq	ip, r3, r8, lsr ip
   18b10:	strheq	sp, [r3], -r4
   18b14:	muleq	r3, r4, ip
   18b18:	andeq	ip, r3, ip, lsl #25
   18b1c:	andeq	ip, r3, ip, asr lr
   18b20:	andeq	sp, r3, ip, ror sl
   18b24:			; <UNDEFINED> instruction: 0x0003dab8
   18b28:	andeq	sp, r3, ip, ror #21
   18b2c:	andeq	sp, r3, r0, lsr #22
   18b30:	andeq	sp, r3, r0, ror #22
   18b34:	muleq	r3, ip, fp
   18b38:	andeq	sp, r3, r8, lsr #15
   18b3c:	strdeq	sp, [r3], -r8
   18b40:	andeq	sp, r3, r8, lsl r9
   18b44:	andeq	sp, r3, r4, lsr #18
   18b48:	andeq	sp, r3, r0, lsr r9
   18b4c:	andeq	sp, r3, ip, lsr r9
   18b50:	andeq	sp, r3, r8, asr #18
   18b54:	andeq	sp, r3, r4, asr r9
   18b58:	andeq	sp, r3, r0, ror #18
   18b5c:	andeq	ip, r3, r4, lsl sl
   18b60:	andeq	sp, r3, r8, ror #17
   18b64:	andeq	sp, r3, r8, lsl #18
   18b68:	ldrdeq	sp, [r3], -r8
   18b6c:	andeq	sp, r3, r8, ror r9
   18b70:	andeq	sp, r3, r0, ror #24
   18b74:	andeq	r0, r0, fp, lsr r5
   18b78:	andeq	sp, r3, ip, lsl #24
   18b7c:	andeq	ip, r3, ip, lsr #20
   18b80:	andeq	sp, r3, r0, ror r9
   18b84:	andeq	r0, r0, pc, lsr r5
   18b88:	andeq	sp, r3, r0, asr #24
   18b8c:	muleq	r3, r0, ip
   18b90:	andeq	sp, r3, r0, asr #25
   18b94:	andeq	sp, r3, ip, ror #25
   18b98:	andeq	sp, r3, r8, lsl sp
   18b9c:	andeq	sp, r3, r4, asr #26
   18ba0:	andeq	sp, r3, r8, ror sp
   18ba4:	andeq	sp, r3, ip, lsr #27
   18ba8:	andeq	sp, r3, ip, lsl #16
   18bac:	andeq	sp, r3, ip, ror #27
   18bb0:	andeq	sp, r3, r8, lsr #28
   18bb4:	andeq	sp, r3, r0, ror #28
   18bb8:	strdeq	sp, [r3], -r8
   18bbc:	muleq	r3, ip, lr
   18bc0:	andeq	sp, r3, r8, lsr #14
   18bc4:	andeq	sp, r3, r8, ror #14
   18bc8:	andeq	ip, r3, r8, ror #28
   18bcc:			; <UNDEFINED> instruction: 0x0003ccbc
   18bd0:	andeq	ip, r3, r4, ror lr
   18bd4:	ldrdeq	ip, [r3], -r4
   18bd8:	ldrdeq	ip, [r3], -ip	; <UNPREDICTABLE>
   18bdc:	andeq	ip, r3, r4, ror #25
   18be0:	andeq	ip, r3, ip, ror #25
   18be4:	strdeq	ip, [r3], -r4
   18be8:	andeq	ip, r3, ip, asr #19
   18bec:			; <UNDEFINED> instruction: 0x0003ccb0
   18bf0:	andeq	ip, r3, r8, asr #25
   18bf4:	andeq	ip, r3, ip, ror lr
   18bf8:	andeq	ip, r3, r0, lsl #29
   18bfc:	andeq	ip, r3, ip, asr sp
   18c00:			; <UNDEFINED> instruction: 0x0003cdb4
   18c04:	ldrdeq	ip, [r3], -r8
   18c08:	andeq	sp, r3, r0, lsr r6
   18c0c:	andeq	sp, r3, r4, ror r6
   18c10:			; <UNDEFINED> instruction: 0x0003d6b4
   18c14:	andeq	sp, r3, r0, ror #29
   18c18:	andeq	sp, r3, r4, lsl pc
   18c1c:	andeq	sp, r3, r0, ror #30
   18c20:	andeq	sp, r3, ip, ror #31
   18c24:			; <UNDEFINED> instruction: 0x0003dfb0
   18c28:	andeq	r0, r0, pc, lsr r6
   18c2c:	andeq	ip, r3, r8, asr sl
   18c30:	andeq	r7, r6, r8, lsr #1
   18c34:	andeq	lr, r3, r4, lsr #32
   18c38:	andeq	ip, r3, r8, lsr #27
   18c3c:	andeq	ip, r3, r8, lsl #20
   18c40:	andeq	r5, r4, r0, ror #3
   18c44:	andeq	ip, r3, r0, asr ip
   18c48:	andeq	sp, r3, r4, asr #1
   18c4c:	andeq	ip, r3, r4, ror #24
   18c50:	andeq	r4, r5, r4, asr #24
   18c54:	andeq	ip, r3, ip, ror #24
   18c58:	ldrdeq	sp, [r3], -r4
   18c5c:	andeq	ip, r3, r4, ror ip
   18c60:	ldrdeq	sp, [r3], -ip
   18c64:	andeq	ip, r3, ip, ror ip
   18c68:	andeq	sp, r3, r4, ror #1
   18c6c:	andeq	ip, r3, r4, lsl #25
   18c70:	andeq	sp, r3, ip, ror #1
   18c74:	andeq	ip, r3, r4, asr #24
   18c78:	strheq	sp, [r3], -ip
   18c7c:	andeq	ip, r3, ip, asr ip
   18c80:	andeq	sp, r3, ip, asr #1
   18c84:	sub	r3, r3, #1
   18c88:	cmp	r3, #8
   18c8c:	ldrls	pc, [pc, r3, lsl #2]
   18c90:	b	18d04 <__flatcc_fb_codegen_c@@Base+0x2ca4>
   18c94:	andeq	r8, r1, ip, lsr sp
   18c98:			; <UNDEFINED> instruction: 0x00018cb8
   18c9c:	andeq	r8, r1, r4, asr #26
   18ca0:	ldrdeq	r8, [r1], -r4
   18ca4:	ldrdeq	r8, [r1], -ip
   18ca8:	andeq	r8, r1, r4, ror #25
   18cac:	andeq	r8, r1, ip, ror #25
   18cb0:	strdeq	r8, [r1], -r4
   18cb4:	strdeq	r8, [r1], -ip
   18cb8:	ldr	r2, [pc, #-244]	; 18bcc <__flatcc_fb_codegen_c@@Base+0x2b6c>
   18cbc:	ldrd	r0, [r5, #48]	; 0x30
   18cc0:	strd	r0, [sp]
   18cc4:	ldr	r1, [pc, #-260]	; 18bc8 <__flatcc_fb_codegen_c@@Base+0x2b68>
   18cc8:	add	r0, sp, #508	; 0x1fc
   18ccc:	bl	14100 <sprintf@plt>
   18cd0:	b	188c4 <__flatcc_fb_codegen_c@@Base+0x2864>
   18cd4:	ldr	r2, [pc, #-264]	; 18bd4 <__flatcc_fb_codegen_c@@Base+0x2b74>
   18cd8:	b	18cbc <__flatcc_fb_codegen_c@@Base+0x2c5c>
   18cdc:	ldr	r2, [pc, #-272]	; 18bd4 <__flatcc_fb_codegen_c@@Base+0x2b74>
   18ce0:	b	18cbc <__flatcc_fb_codegen_c@@Base+0x2c5c>
   18ce4:	ldr	r2, [pc, #-276]	; 18bd8 <__flatcc_fb_codegen_c@@Base+0x2b78>
   18ce8:	b	18cbc <__flatcc_fb_codegen_c@@Base+0x2c5c>
   18cec:	ldr	r2, [pc, #-280]	; 18bdc <__flatcc_fb_codegen_c@@Base+0x2b7c>
   18cf0:	b	18cbc <__flatcc_fb_codegen_c@@Base+0x2c5c>
   18cf4:	ldr	r2, [pc, #-284]	; 18be0 <__flatcc_fb_codegen_c@@Base+0x2b80>
   18cf8:	b	18cbc <__flatcc_fb_codegen_c@@Base+0x2c5c>
   18cfc:	ldr	r2, [pc, #-288]	; 18be4 <__flatcc_fb_codegen_c@@Base+0x2b84>
   18d00:	b	18cbc <__flatcc_fb_codegen_c@@Base+0x2c5c>
   18d04:	ldr	r4, [pc, #-272]	; 18bfc <__flatcc_fb_codegen_c@@Base+0x2b9c>
   18d08:	ldr	r3, [pc, #-224]	; 18c30 <__flatcc_fb_codegen_c@@Base+0x2bd0>
   18d0c:	ldr	r0, [r3]
   18d10:	ldr	r3, [pc, #-280]	; 18c00 <__flatcc_fb_codegen_c@@Base+0x2ba0>
   18d14:	str	r3, [sp]
   18d18:	mov	r3, #226	; 0xe2
   18d1c:	mov	r2, r4
   18d20:	ldr	r1, [pc, #-240]	; 18c38 <__flatcc_fb_codegen_c@@Base+0x2bd8>
   18d24:	bl	14094 <fprintf@plt>
   18d28:	ldr	r3, [pc, #-328]	; 18be8 <__flatcc_fb_codegen_c@@Base+0x2b88>
   18d2c:	mov	r2, #226	; 0xe2
   18d30:	mov	r1, r4
   18d34:	ldr	r0, [pc, #-252]	; 18c40 <__flatcc_fb_codegen_c@@Base+0x2be0>
   18d38:	bl	14148 <__assert_fail@plt>
   18d3c:	ldr	r2, [pc, #-344]	; 18bec <__flatcc_fb_codegen_c@@Base+0x2b8c>
   18d40:	b	18cbc <__flatcc_fb_codegen_c@@Base+0x2c5c>
   18d44:	ldr	r2, [pc, #-348]	; 18bf0 <__flatcc_fb_codegen_c@@Base+0x2b90>
   18d48:	b	18cbc <__flatcc_fb_codegen_c@@Base+0x2c5c>
   18d4c:	sub	r3, r3, #1
   18d50:	cmp	r3, #8
   18d54:	ldrls	pc, [pc, r3, lsl #2]
   18d58:	b	18dc8 <__flatcc_fb_codegen_c@@Base+0x2d68>
   18d5c:	andeq	r8, r1, r0, lsl #28
   18d60:	andeq	r8, r1, r0, lsl #27
   18d64:	andeq	r8, r1, r8, lsl #28
   18d68:	muleq	r1, r8, sp
   18d6c:	andeq	r8, r1, r0, lsr #27
   18d70:	andeq	r8, r1, r8, lsr #27
   18d74:			; <UNDEFINED> instruction: 0x00018db0
   18d78:			; <UNDEFINED> instruction: 0x00018db8
   18d7c:	andeq	r8, r1, r0, asr #27
   18d80:	ldr	r2, [pc, #-444]	; 18bcc <__flatcc_fb_codegen_c@@Base+0x2b6c>
   18d84:	ldrb	r3, [r5, #48]	; 0x30
   18d88:	ldr	r1, [pc, #-448]	; 18bd0 <__flatcc_fb_codegen_c@@Base+0x2b70>
   18d8c:	add	r0, sp, #508	; 0x1fc
   18d90:	bl	14100 <sprintf@plt>
   18d94:	b	188c4 <__flatcc_fb_codegen_c@@Base+0x2864>
   18d98:	ldr	r2, [pc, #-460]	; 18bd4 <__flatcc_fb_codegen_c@@Base+0x2b74>
   18d9c:	b	18d84 <__flatcc_fb_codegen_c@@Base+0x2d24>
   18da0:	ldr	r2, [pc, #-468]	; 18bd4 <__flatcc_fb_codegen_c@@Base+0x2b74>
   18da4:	b	18d84 <__flatcc_fb_codegen_c@@Base+0x2d24>
   18da8:	ldr	r2, [pc, #-472]	; 18bd8 <__flatcc_fb_codegen_c@@Base+0x2b78>
   18dac:	b	18d84 <__flatcc_fb_codegen_c@@Base+0x2d24>
   18db0:	ldr	r2, [pc, #-476]	; 18bdc <__flatcc_fb_codegen_c@@Base+0x2b7c>
   18db4:	b	18d84 <__flatcc_fb_codegen_c@@Base+0x2d24>
   18db8:	ldr	r2, [pc, #-480]	; 18be0 <__flatcc_fb_codegen_c@@Base+0x2b80>
   18dbc:	b	18d84 <__flatcc_fb_codegen_c@@Base+0x2d24>
   18dc0:	ldr	r2, [pc, #-484]	; 18be4 <__flatcc_fb_codegen_c@@Base+0x2b84>
   18dc4:	b	18d84 <__flatcc_fb_codegen_c@@Base+0x2d24>
   18dc8:	ldr	r4, [pc, #-468]	; 18bfc <__flatcc_fb_codegen_c@@Base+0x2b9c>
   18dcc:	ldr	r3, [pc, #-420]	; 18c30 <__flatcc_fb_codegen_c@@Base+0x2bd0>
   18dd0:	ldr	r0, [r3]
   18dd4:	ldr	r3, [pc, #-476]	; 18c00 <__flatcc_fb_codegen_c@@Base+0x2ba0>
   18dd8:	str	r3, [sp]
   18ddc:	mov	r3, #226	; 0xe2
   18de0:	mov	r2, r4
   18de4:	ldr	r1, [pc, #-436]	; 18c38 <__flatcc_fb_codegen_c@@Base+0x2bd8>
   18de8:	bl	14094 <fprintf@plt>
   18dec:	ldr	r3, [pc, #-524]	; 18be8 <__flatcc_fb_codegen_c@@Base+0x2b88>
   18df0:	mov	r2, #226	; 0xe2
   18df4:	mov	r1, r4
   18df8:	ldr	r0, [pc, #-448]	; 18c40 <__flatcc_fb_codegen_c@@Base+0x2be0>
   18dfc:	bl	14148 <__assert_fail@plt>
   18e00:	ldr	r2, [pc, #-540]	; 18bec <__flatcc_fb_codegen_c@@Base+0x2b8c>
   18e04:	b	18d84 <__flatcc_fb_codegen_c@@Base+0x2d24>
   18e08:	ldr	r2, [pc, #-544]	; 18bf0 <__flatcc_fb_codegen_c@@Base+0x2b90>
   18e0c:	b	18d84 <__flatcc_fb_codegen_c@@Base+0x2d24>
   18e10:	cmp	r3, #11
   18e14:	vldreq	d7, [r5, #48]	; 0x30
   18e18:	vcvteq.f32.f64	s14, d7
   18e1c:	vcvteq.f64.f32	d7, s14
   18e20:	vmoveq	r2, r3, d7
   18e24:	ldreq	r1, [pc, #-568]	; 18bf4 <__flatcc_fb_codegen_c@@Base+0x2b94>
   18e28:	ldrdne	r2, [r5, #48]	; 0x30
   18e2c:	ldrne	r1, [pc, #-572]	; 18bf8 <__flatcc_fb_codegen_c@@Base+0x2b98>
   18e30:	add	r0, sp, #508	; 0x1fc
   18e34:	bl	14100 <sprintf@plt>
   18e38:	b	188c4 <__flatcc_fb_codegen_c@@Base+0x2864>
   18e3c:	ldr	r4, [pc, #-584]	; 18bfc <__flatcc_fb_codegen_c@@Base+0x2b9c>
   18e40:	ldr	r3, [pc, #-536]	; 18c30 <__flatcc_fb_codegen_c@@Base+0x2bd0>
   18e44:	ldr	r0, [r3]
   18e48:	ldr	r3, [pc, #-592]	; 18c00 <__flatcc_fb_codegen_c@@Base+0x2ba0>
   18e4c:	str	r3, [sp]
   18e50:	mov	r3, #260	; 0x104
   18e54:	mov	r2, r4
   18e58:	ldr	r1, [pc, #-552]	; 18c38 <__flatcc_fb_codegen_c@@Base+0x2bd8>
   18e5c:	bl	14094 <fprintf@plt>
   18e60:	ldr	r3, [pc, #-612]	; 18c04 <__flatcc_fb_codegen_c@@Base+0x2ba4>
   18e64:	mov	r2, #260	; 0x104
   18e68:	mov	r1, r4
   18e6c:	ldr	r0, [pc, #-564]	; 18c40 <__flatcc_fb_codegen_c@@Base+0x2be0>
   18e70:	bl	14148 <__assert_fail@plt>
   18e74:	ldr	r3, [r4, #204]	; 0xcc
   18e78:	mov	r2, #66	; 0x42
   18e7c:	mov	r1, #1
   18e80:	ldr	r0, [pc, #-640]	; 18c08 <__flatcc_fb_codegen_c@@Base+0x2ba8>
   18e84:	bl	1401c <fwrite@plt>
   18e88:	ldr	r3, [r4, #204]	; 0xcc
   18e8c:	mov	r2, #61	; 0x3d
   18e90:	mov	r1, #1
   18e94:	ldr	r0, [pc, #-656]	; 18c0c <__flatcc_fb_codegen_c@@Base+0x2bac>
   18e98:	bl	1401c <fwrite@plt>
   18e9c:	add	r3, sp, #608	; 0x260
   18ea0:	str	r3, [sp, #8]
   18ea4:	str	r7, [sp, #4]
   18ea8:	str	r6, [sp]
   18eac:	add	r3, sp, #828	; 0x33c
   18eb0:	ldr	r2, [sp, #44]	; 0x2c
   18eb4:	ldr	r1, [pc, #-684]	; 18c10 <__flatcc_fb_codegen_c@@Base+0x2bb0>
   18eb8:	ldr	r0, [r4, #204]	; 0xcc
   18ebc:	bl	14094 <fprintf@plt>
   18ec0:	ldr	r3, [r4, #212]	; 0xd4
   18ec4:	ldr	r3, [r3, #136]	; 0x88
   18ec8:	cmp	r3, #0
   18ecc:	beq	17d54 <__flatcc_fb_codegen_c@@Base+0x1cf4>
   18ed0:	b	189a0 <__flatcc_fb_codegen_c@@Base+0x2940>
   18ed4:	str	r9, [sp, #24]
   18ed8:	add	r3, sp, #608	; 0x260
   18edc:	str	r3, [sp, #20]
   18ee0:	str	r7, [sp, #16]
   18ee4:	str	r6, [sp, #12]
   18ee8:	add	r3, sp, #828	; 0x33c
   18eec:	str	r3, [sp, #8]
   18ef0:	ldrd	r2, [r5, #96]	; 0x60
   18ef4:	strd	r2, [sp]
   18ef8:	ldr	r2, [sp, #44]	; 0x2c
   18efc:	mov	r3, r2
   18f00:	ldr	r1, [pc, #-756]	; 18c14 <__flatcc_fb_codegen_c@@Base+0x2bb4>
   18f04:	ldr	r0, [r4, #204]	; 0xcc
   18f08:	bl	14094 <fprintf@plt>
   18f0c:	b	18778 <__flatcc_fb_codegen_c@@Base+0x2718>
   18f10:	ldr	r4, [pc, #-748]	; 18c2c <__flatcc_fb_codegen_c@@Base+0x2bcc>
   18f14:	ldr	r3, [pc, #-748]	; 18c30 <__flatcc_fb_codegen_c@@Base+0x2bd0>
   18f18:	ldr	r0, [r3]
   18f1c:	ldr	r3, [pc, #-780]	; 18c18 <__flatcc_fb_codegen_c@@Base+0x2bb8>
   18f20:	str	r3, [sp]
   18f24:	mov	r3, #1568	; 0x620
   18f28:	mov	r2, r4
   18f2c:	ldr	r1, [pc, #-764]	; 18c38 <__flatcc_fb_codegen_c@@Base+0x2bd8>
   18f30:	bl	14094 <fprintf@plt>
   18f34:	ldr	r3, [pc, #-768]	; 18c3c <__flatcc_fb_codegen_c@@Base+0x2bdc>
   18f38:	mov	r2, #1568	; 0x620
   18f3c:	mov	r1, r4
   18f40:	ldr	r0, [pc, #-776]	; 18c40 <__flatcc_fb_codegen_c@@Base+0x2be0>
   18f44:	bl	14148 <__assert_fail@plt>
   18f48:	ldr	r3, [r5, #16]
   18f4c:	add	r2, sp, #608	; 0x260
   18f50:	mov	r1, r3
   18f54:	ldr	r0, [r3, #12]
   18f58:	bl	15edc <__flatcc_fb_scoped_symbol_name@@Base>
   18f5c:	ldr	r3, [r5, #16]
   18f60:	ldrh	r3, [r3, #8]
   18f64:	cmp	r3, #4
   18f68:	ldrls	pc, [pc, r3, lsl #2]
   18f6c:	b	18f84 <__flatcc_fb_codegen_c@@Base+0x2f24>
   18f70:			; <UNDEFINED> instruction: 0x00018fbc
   18f74:			; <UNDEFINED> instruction: 0x00018fbc
   18f78:	andeq	r8, r1, r4, lsl #31
   18f7c:			; <UNDEFINED> instruction: 0x00018fbc
   18f80:			; <UNDEFINED> instruction: 0x00018fbc
   18f84:	ldr	r4, [pc, #-864]	; 18c2c <__flatcc_fb_codegen_c@@Base+0x2bcc>
   18f88:	ldr	r3, [pc, #-864]	; 18c30 <__flatcc_fb_codegen_c@@Base+0x2bd0>
   18f8c:	ldr	r0, [r3]
   18f90:	ldr	r3, [pc, #-892]	; 18c1c <__flatcc_fb_codegen_c@@Base+0x2bbc>
   18f94:	str	r3, [sp]
   18f98:	mov	r3, #1584	; 0x630
   18f9c:	mov	r2, r4
   18fa0:	ldr	r1, [pc, #-880]	; 18c38 <__flatcc_fb_codegen_c@@Base+0x2bd8>
   18fa4:	bl	14094 <fprintf@plt>
   18fa8:	ldr	r3, [pc, #-884]	; 18c3c <__flatcc_fb_codegen_c@@Base+0x2bdc>
   18fac:	mov	r2, #1584	; 0x630
   18fb0:	mov	r1, r4
   18fb4:	ldr	r0, [pc, #-892]	; 18c40 <__flatcc_fb_codegen_c@@Base+0x2be0>
   18fb8:	bl	14148 <__assert_fail@plt>
   18fbc:	cmp	r3, #4
   18fc0:	beq	18ffc <__flatcc_fb_codegen_c@@Base+0x2f9c>
   18fc4:	str	r9, [sp, #24]
   18fc8:	add	r3, sp, #608	; 0x260
   18fcc:	str	r3, [sp, #20]
   18fd0:	str	r7, [sp, #16]
   18fd4:	str	r6, [sp, #12]
   18fd8:	add	r3, sp, #828	; 0x33c
   18fdc:	str	r3, [sp, #8]
   18fe0:	ldrd	r2, [r5, #96]	; 0x60
   18fe4:	strd	r2, [sp]
   18fe8:	ldr	r2, [sp, #44]	; 0x2c
   18fec:	ldr	r1, [pc, #-980]	; 18c20 <__flatcc_fb_codegen_c@@Base+0x2bc0>
   18ff0:	ldr	r0, [r4, #204]	; 0xcc
   18ff4:	bl	14094 <fprintf@plt>
   18ff8:	b	18778 <__flatcc_fb_codegen_c@@Base+0x2718>
   18ffc:	str	r9, [sp, #24]
   19000:	add	r3, sp, #608	; 0x260
   19004:	str	r3, [sp, #20]
   19008:	str	r7, [sp, #16]
   1900c:	str	r6, [sp, #12]
   19010:	add	r3, sp, #828	; 0x33c
   19014:	str	r3, [sp, #8]
   19018:	ldrd	r2, [r5, #96]	; 0x60
   1901c:	strd	r2, [sp]
   19020:	ldr	r2, [sp, #44]	; 0x2c
   19024:	mov	r3, r2
   19028:	ldr	r1, [pc, #-1036]	; 18c24 <__flatcc_fb_codegen_c@@Base+0x2bc4>
   1902c:	ldr	r0, [r4, #204]	; 0xcc
   19030:	bl	14094 <fprintf@plt>
   19034:	b	18778 <__flatcc_fb_codegen_c@@Base+0x2718>
   19038:	ldr	r5, [pc, #-1048]	; 18c28 <__flatcc_fb_codegen_c@@Base+0x2bc8>
   1903c:	ldr	r4, [pc, #-1048]	; 18c2c <__flatcc_fb_codegen_c@@Base+0x2bcc>
   19040:	ldr	r3, [pc, #-1048]	; 18c30 <__flatcc_fb_codegen_c@@Base+0x2bd0>
   19044:	ldr	r0, [r3]
   19048:	ldr	r3, [pc, #-1052]	; 18c34 <__flatcc_fb_codegen_c@@Base+0x2bd4>
   1904c:	str	r3, [sp]
   19050:	mov	r3, r5
   19054:	mov	r2, r4
   19058:	ldr	r1, [pc, #-1064]	; 18c38 <__flatcc_fb_codegen_c@@Base+0x2bd8>
   1905c:	bl	14094 <fprintf@plt>
   19060:	ldr	r3, [pc, #-1068]	; 18c3c <__flatcc_fb_codegen_c@@Base+0x2bdc>
   19064:	mov	r2, r5
   19068:	mov	r1, r4
   1906c:	ldr	r0, [pc, #-1076]	; 18c40 <__flatcc_fb_codegen_c@@Base+0x2be0>
   19070:	bl	14148 <__assert_fail@plt>
   19074:	ldr	r9, [pc, #-1080]	; 18c44 <__flatcc_fb_codegen_c@@Base+0x2be4>
   19078:	str	fp, [sp, #52]	; 0x34
   1907c:	ldr	r2, [pc, #-1084]	; 18c48 <__flatcc_fb_codegen_c@@Base+0x2be8>
   19080:	str	r2, [sp, #60]	; 0x3c
   19084:	b	1909c <__flatcc_fb_codegen_c@@Base+0x303c>
   19088:	ldr	r2, [sp, #44]	; 0x2c
   1908c:	str	r2, [sp, #52]	; 0x34
   19090:	ldr	r9, [pc, #-1100]	; 18c4c <__flatcc_fb_codegen_c@@Base+0x2bec>
   19094:	ldr	r2, [pc, #-1100]	; 18c50 <__flatcc_fb_codegen_c@@Base+0x2bf0>
   19098:	str	r2, [sp, #60]	; 0x3c
   1909c:	ldrh	r2, [r5, #56]	; 0x38
   190a0:	sub	r2, r2, #3
   190a4:	cmp	r2, #3
   190a8:	ldrls	pc, [pc, r2, lsl #2]
   190ac:	b	18308 <__flatcc_fb_codegen_c@@Base+0x22a8>
   190b0:	strdeq	r8, [r1], -r4
   190b4:	strdeq	r8, [r1], -r4
   190b8:	andeq	r7, r1, r0, asr #28
   190bc:	ldrdeq	r8, [r1], -ip
   190c0:	str	fp, [sp, #52]	; 0x34
   190c4:	b	19090 <__flatcc_fb_codegen_c@@Base+0x3030>
   190c8:	ldr	r9, [pc, #-1148]	; 18c54 <__flatcc_fb_codegen_c@@Base+0x2bf4>
   190cc:	str	fp, [sp, #52]	; 0x34
   190d0:	ldr	r2, [pc, #-1152]	; 18c58 <__flatcc_fb_codegen_c@@Base+0x2bf8>
   190d4:	str	r2, [sp, #60]	; 0x3c
   190d8:	b	1909c <__flatcc_fb_codegen_c@@Base+0x303c>
   190dc:	ldr	r9, [pc, #-1160]	; 18c5c <__flatcc_fb_codegen_c@@Base+0x2bfc>
   190e0:	str	fp, [sp, #52]	; 0x34
   190e4:	ldr	r2, [pc, #-1164]	; 18c60 <__flatcc_fb_codegen_c@@Base+0x2c00>
   190e8:	str	r2, [sp, #60]	; 0x3c
   190ec:	b	1909c <__flatcc_fb_codegen_c@@Base+0x303c>
   190f0:	ldr	r9, [pc, #-1172]	; 18c64 <__flatcc_fb_codegen_c@@Base+0x2c04>
   190f4:	str	fp, [sp, #52]	; 0x34
   190f8:	ldr	r2, [pc, #-1176]	; 18c68 <__flatcc_fb_codegen_c@@Base+0x2c08>
   190fc:	str	r2, [sp, #60]	; 0x3c
   19100:	b	1909c <__flatcc_fb_codegen_c@@Base+0x303c>
   19104:	ldr	r9, [pc, #-1184]	; 18c6c <__flatcc_fb_codegen_c@@Base+0x2c0c>
   19108:	str	fp, [sp, #52]	; 0x34
   1910c:	ldr	r2, [pc, #-1188]	; 18c70 <__flatcc_fb_codegen_c@@Base+0x2c10>
   19110:	str	r2, [sp, #60]	; 0x3c
   19114:	b	1909c <__flatcc_fb_codegen_c@@Base+0x303c>
   19118:	ldr	r9, [pc, #-1196]	; 18c74 <__flatcc_fb_codegen_c@@Base+0x2c14>
   1911c:	str	fp, [sp, #52]	; 0x34
   19120:	ldr	r2, [pc, #-1200]	; 18c78 <__flatcc_fb_codegen_c@@Base+0x2c18>
   19124:	str	r2, [sp, #60]	; 0x3c
   19128:	b	1909c <__flatcc_fb_codegen_c@@Base+0x303c>
   1912c:	ldr	r9, [pc, #-1208]	; 18c7c <__flatcc_fb_codegen_c@@Base+0x2c1c>
   19130:	str	fp, [sp, #52]	; 0x34
   19134:	ldr	r2, [pc, #-1212]	; 18c80 <__flatcc_fb_codegen_c@@Base+0x2c20>
   19138:	str	r2, [sp, #60]	; 0x3c
   1913c:	b	1909c <__flatcc_fb_codegen_c@@Base+0x303c>
   19140:	ldrh	r2, [r5, #56]	; 0x38
   19144:	sub	r2, r2, #3
   19148:	cmp	r2, #3
   1914c:	ldrls	pc, [pc, r2, lsl #2]
   19150:	b	18308 <__flatcc_fb_codegen_c@@Base+0x22a8>
   19154:			; <UNDEFINED> instruction: 0x000182b0
   19158:	andeq	r8, r1, r8, ror #1
   1915c:	andeq	r7, r1, r4, lsr lr
   19160:	andeq	r8, r1, r8, asr r2
   19164:	ldrh	r2, [r5, #56]	; 0x38
   19168:	sub	r2, r2, #3
   1916c:	cmp	r2, #3
   19170:	ldrls	pc, [pc, r2, lsl #2]
   19174:	b	18308 <__flatcc_fb_codegen_c@@Base+0x22a8>
   19178:	andeq	r8, r1, r4, ror #5
   1917c:	andeq	r8, r1, r8, lsr #2
   19180:	andeq	r7, r1, r4, ror lr
   19184:	andeq	r8, r1, r8, asr r2
   19188:	add	sp, sp, #1040	; 0x410
   1918c:	add	sp, sp, #12
   19190:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00019194 <__flatcc_fb_gen_common_c_header@@Base>:
   19194:	push	{r4, r5, lr}
   19198:	sub	sp, sp, #236	; 0xec
   1919c:	mov	r4, r0
   191a0:	add	r5, r0, #102	; 0x66
   191a4:	mov	r3, r5
   191a8:	mov	r2, r5
   191ac:	ldr	r1, [pc, #2812]	; 19cb0 <__flatcc_fb_gen_common_c_header@@Base+0xb1c>
   191b0:	ldr	r0, [r0, #204]	; 0xcc
   191b4:	bl	14094 <fprintf@plt>
   191b8:	ldr	r3, [r4, #204]	; 0xcc
   191bc:	mov	r2, #81	; 0x51
   191c0:	mov	r1, #1
   191c4:	ldr	r0, [pc, #2792]	; 19cb4 <__flatcc_fb_gen_common_c_header@@Base+0xb20>
   191c8:	bl	1401c <fwrite@plt>
   191cc:	ldr	r3, [r4, #204]	; 0xcc
   191d0:	mov	r2, #52	; 0x34
   191d4:	mov	r1, #1
   191d8:	ldr	r0, [pc, #2776]	; 19cb8 <__flatcc_fb_gen_common_c_header@@Base+0xb24>
   191dc:	bl	1401c <fwrite@plt>
   191e0:	ldr	r3, [r4, #212]	; 0xd4
   191e4:	ldr	r3, [r3, #136]	; 0x88
   191e8:	cmp	r3, #0
   191ec:	beq	19b84 <__flatcc_fb_gen_common_c_header@@Base+0x9f0>
   191f0:	ldr	r3, [r4, #212]	; 0xd4
   191f4:	ldr	r3, [r3, #140]	; 0x8c
   191f8:	cmp	r3, #0
   191fc:	bne	19b9c <__flatcc_fb_gen_common_c_header@@Base+0xa08>
   19200:	ldr	r3, [r4, #204]	; 0xcc
   19204:	mov	r2, #41	; 0x29
   19208:	mov	r1, #1
   1920c:	ldr	r0, [pc, #2728]	; 19cbc <__flatcc_fb_gen_common_c_header@@Base+0xb28>
   19210:	bl	1401c <fwrite@plt>
   19214:	ldr	r1, [pc, #2724]	; 19cc0 <__flatcc_fb_gen_common_c_header@@Base+0xb2c>
   19218:	mov	r0, r4
   1921c:	bl	13fbc <strcmp@plt>
   19220:	cmp	r0, #0
   19224:	bne	19bb4 <__flatcc_fb_gen_common_c_header@@Base+0xa20>
   19228:	mov	r3, r4
   1922c:	mov	r2, r4
   19230:	ldr	r1, [pc, #2700]	; 19cc4 <__flatcc_fb_gen_common_c_header@@Base+0xb30>
   19234:	ldr	r0, [r4, #204]	; 0xcc
   19238:	bl	14094 <fprintf@plt>
   1923c:	str	r4, [sp, #16]
   19240:	str	r4, [sp, #12]
   19244:	str	r4, [sp, #8]
   19248:	str	r4, [sp, #4]
   1924c:	str	r4, [sp]
   19250:	mov	r3, r4
   19254:	mov	r2, r4
   19258:	ldr	r1, [pc, #2664]	; 19cc8 <__flatcc_fb_gen_common_c_header@@Base+0xb34>
   1925c:	ldr	r0, [r4, #204]	; 0xcc
   19260:	bl	14094 <fprintf@plt>
   19264:	mov	r3, r4
   19268:	mov	r2, r4
   1926c:	ldr	r1, [pc, #2648]	; 19ccc <__flatcc_fb_gen_common_c_header@@Base+0xb38>
   19270:	ldr	r0, [r4, #204]	; 0xcc
   19274:	bl	14094 <fprintf@plt>
   19278:	str	r4, [sp, #4]
   1927c:	str	r4, [sp]
   19280:	mov	r3, r4
   19284:	mov	r2, r4
   19288:	ldr	r1, [pc, #2624]	; 19cd0 <__flatcc_fb_gen_common_c_header@@Base+0xb3c>
   1928c:	ldr	r0, [r4, #204]	; 0xcc
   19290:	bl	14094 <fprintf@plt>
   19294:	ldr	r3, [r4, #212]	; 0xd4
   19298:	ldr	r3, [r3, #32]
   1929c:	cmp	r3, #0
   192a0:	beq	19c28 <__flatcc_fb_gen_common_c_header@@Base+0xa94>
   192a4:	mov	r2, r4
   192a8:	ldr	r1, [pc, #2596]	; 19cd4 <__flatcc_fb_gen_common_c_header@@Base+0xb40>
   192ac:	ldr	r0, [r4, #204]	; 0xcc
   192b0:	bl	14094 <fprintf@plt>
   192b4:	mov	r3, r4
   192b8:	mov	r2, r4
   192bc:	ldr	r1, [pc, #2580]	; 19cd8 <__flatcc_fb_gen_common_c_header@@Base+0xb44>
   192c0:	ldr	r0, [r4, #204]	; 0xcc
   192c4:	bl	14094 <fprintf@plt>
   192c8:	str	r4, [sp, #8]
   192cc:	str	r4, [sp, #4]
   192d0:	str	r4, [sp]
   192d4:	mov	r3, r4
   192d8:	mov	r2, r4
   192dc:	ldr	r1, [pc, #2552]	; 19cdc <__flatcc_fb_gen_common_c_header@@Base+0xb48>
   192e0:	ldr	r0, [r4, #204]	; 0xcc
   192e4:	bl	14094 <fprintf@plt>
   192e8:	str	r4, [sp, #8]
   192ec:	str	r4, [sp, #4]
   192f0:	str	r4, [sp]
   192f4:	mov	r3, r4
   192f8:	mov	r2, r4
   192fc:	ldr	r1, [pc, #2524]	; 19ce0 <__flatcc_fb_gen_common_c_header@@Base+0xb4c>
   19300:	ldr	r0, [r4, #204]	; 0xcc
   19304:	bl	14094 <fprintf@plt>
   19308:	str	r4, [sp]
   1930c:	mov	r3, r4
   19310:	mov	r2, r4
   19314:	ldr	r1, [pc, #2504]	; 19ce4 <__flatcc_fb_gen_common_c_header@@Base+0xb50>
   19318:	ldr	r0, [r4, #204]	; 0xcc
   1931c:	bl	14094 <fprintf@plt>
   19320:	str	r4, [sp]
   19324:	mov	r3, r4
   19328:	mov	r2, r4
   1932c:	ldr	r1, [pc, #2484]	; 19ce8 <__flatcc_fb_gen_common_c_header@@Base+0xb54>
   19330:	ldr	r0, [r4, #204]	; 0xcc
   19334:	bl	14094 <fprintf@plt>
   19338:	str	r4, [sp]
   1933c:	mov	r3, r4
   19340:	mov	r2, r4
   19344:	ldr	r1, [pc, #2464]	; 19cec <__flatcc_fb_gen_common_c_header@@Base+0xb58>
   19348:	ldr	r0, [r4, #204]	; 0xcc
   1934c:	bl	14094 <fprintf@plt>
   19350:	str	r4, [sp, #8]
   19354:	str	r4, [sp, #4]
   19358:	str	r4, [sp]
   1935c:	mov	r3, r4
   19360:	mov	r2, r4
   19364:	ldr	r1, [pc, #2436]	; 19cf0 <__flatcc_fb_gen_common_c_header@@Base+0xb5c>
   19368:	ldr	r0, [r4, #204]	; 0xcc
   1936c:	bl	14094 <fprintf@plt>
   19370:	ldr	r3, [r4, #212]	; 0xd4
   19374:	ldr	r3, [r3, #32]
   19378:	cmp	r3, #0
   1937c:	beq	19c38 <__flatcc_fb_gen_common_c_header@@Base+0xaa4>
   19380:	mov	r2, r4
   19384:	ldr	r1, [pc, #2408]	; 19cf4 <__flatcc_fb_gen_common_c_header@@Base+0xb60>
   19388:	ldr	r0, [r4, #204]	; 0xcc
   1938c:	bl	14094 <fprintf@plt>
   19390:	str	r4, [sp, #4]
   19394:	str	r4, [sp]
   19398:	mov	r3, r4
   1939c:	mov	r2, r4
   193a0:	ldr	r1, [pc, #2384]	; 19cf8 <__flatcc_fb_gen_common_c_header@@Base+0xb64>
   193a4:	ldr	r0, [r4, #204]	; 0xcc
   193a8:	bl	14094 <fprintf@plt>
   193ac:	mov	r3, r4
   193b0:	mov	r2, r4
   193b4:	ldr	r1, [pc, #2368]	; 19cfc <__flatcc_fb_gen_common_c_header@@Base+0xb68>
   193b8:	ldr	r0, [r4, #204]	; 0xcc
   193bc:	bl	14094 <fprintf@plt>
   193c0:	str	r4, [sp]
   193c4:	mov	r3, r4
   193c8:	mov	r2, r4
   193cc:	ldr	r1, [pc, #2348]	; 19d00 <__flatcc_fb_gen_common_c_header@@Base+0xb6c>
   193d0:	ldr	r0, [r4, #204]	; 0xcc
   193d4:	bl	14094 <fprintf@plt>
   193d8:	mov	r3, r4
   193dc:	mov	r2, r4
   193e0:	ldr	r1, [pc, #2332]	; 19d04 <__flatcc_fb_gen_common_c_header@@Base+0xb70>
   193e4:	ldr	r0, [r4, #204]	; 0xcc
   193e8:	bl	14094 <fprintf@plt>
   193ec:	str	r4, [sp, #4]
   193f0:	str	r4, [sp]
   193f4:	mov	r3, r4
   193f8:	mov	r2, r4
   193fc:	ldr	r1, [pc, #2308]	; 19d08 <__flatcc_fb_gen_common_c_header@@Base+0xb74>
   19400:	ldr	r0, [r4, #204]	; 0xcc
   19404:	bl	14094 <fprintf@plt>
   19408:	mov	r3, r4
   1940c:	mov	r2, r4
   19410:	ldr	r1, [pc, #2292]	; 19d0c <__flatcc_fb_gen_common_c_header@@Base+0xb78>
   19414:	ldr	r0, [r4, #204]	; 0xcc
   19418:	bl	14094 <fprintf@plt>
   1941c:	mov	r3, r4
   19420:	mov	r2, r4
   19424:	ldr	r1, [pc, #2276]	; 19d10 <__flatcc_fb_gen_common_c_header@@Base+0xb7c>
   19428:	ldr	r0, [r4, #204]	; 0xcc
   1942c:	bl	14094 <fprintf@plt>
   19430:	str	r4, [sp, #4]
   19434:	str	r4, [sp]
   19438:	mov	r3, r4
   1943c:	mov	r2, r4
   19440:	ldr	r1, [pc, #2252]	; 19d14 <__flatcc_fb_gen_common_c_header@@Base+0xb80>
   19444:	ldr	r0, [r4, #204]	; 0xcc
   19448:	bl	14094 <fprintf@plt>
   1944c:	str	r4, [sp, #36]	; 0x24
   19450:	str	r4, [sp, #32]
   19454:	str	r4, [sp, #28]
   19458:	str	r4, [sp, #24]
   1945c:	str	r4, [sp, #20]
   19460:	str	r4, [sp, #16]
   19464:	str	r4, [sp, #12]
   19468:	str	r4, [sp, #8]
   1946c:	str	r4, [sp, #4]
   19470:	str	r4, [sp]
   19474:	mov	r3, r4
   19478:	mov	r2, r4
   1947c:	ldr	r1, [pc, #2196]	; 19d18 <__flatcc_fb_gen_common_c_header@@Base+0xb84>
   19480:	ldr	r0, [r4, #204]	; 0xcc
   19484:	bl	14094 <fprintf@plt>
   19488:	mov	r2, r4
   1948c:	ldr	r1, [pc, #2184]	; 19d1c <__flatcc_fb_gen_common_c_header@@Base+0xb88>
   19490:	ldr	r0, [r4, #204]	; 0xcc
   19494:	bl	14094 <fprintf@plt>
   19498:	str	r4, [sp, #4]
   1949c:	str	r4, [sp]
   194a0:	mov	r3, r4
   194a4:	mov	r2, r4
   194a8:	ldr	r1, [pc, #2160]	; 19d20 <__flatcc_fb_gen_common_c_header@@Base+0xb8c>
   194ac:	ldr	r0, [r4, #204]	; 0xcc
   194b0:	bl	14094 <fprintf@plt>
   194b4:	str	r4, [sp, #56]	; 0x38
   194b8:	str	r4, [sp, #52]	; 0x34
   194bc:	str	r4, [sp, #48]	; 0x30
   194c0:	str	r4, [sp, #44]	; 0x2c
   194c4:	str	r4, [sp, #40]	; 0x28
   194c8:	str	r4, [sp, #36]	; 0x24
   194cc:	str	r4, [sp, #32]
   194d0:	str	r4, [sp, #28]
   194d4:	str	r4, [sp, #24]
   194d8:	str	r4, [sp, #20]
   194dc:	str	r4, [sp, #16]
   194e0:	str	r4, [sp, #12]
   194e4:	str	r4, [sp, #8]
   194e8:	str	r4, [sp, #4]
   194ec:	str	r4, [sp]
   194f0:	mov	r3, r4
   194f4:	mov	r2, r4
   194f8:	ldr	r1, [pc, #2084]	; 19d24 <__flatcc_fb_gen_common_c_header@@Base+0xb90>
   194fc:	ldr	r0, [r4, #204]	; 0xcc
   19500:	bl	14094 <fprintf@plt>
   19504:	str	r4, [sp, #20]
   19508:	str	r4, [sp, #16]
   1950c:	str	r4, [sp, #12]
   19510:	str	r4, [sp, #8]
   19514:	str	r4, [sp, #4]
   19518:	str	r4, [sp]
   1951c:	mov	r3, r4
   19520:	mov	r2, r4
   19524:	ldr	r1, [pc, #2044]	; 19d28 <__flatcc_fb_gen_common_c_header@@Base+0xb94>
   19528:	ldr	r0, [r4, #204]	; 0xcc
   1952c:	bl	14094 <fprintf@plt>
   19530:	str	r4, [sp, #4]
   19534:	str	r4, [sp]
   19538:	mov	r3, r4
   1953c:	mov	r2, r4
   19540:	ldr	r1, [pc, #2020]	; 19d2c <__flatcc_fb_gen_common_c_header@@Base+0xb98>
   19544:	ldr	r0, [r4, #204]	; 0xcc
   19548:	bl	14094 <fprintf@plt>
   1954c:	str	r4, [sp, #4]
   19550:	str	r4, [sp]
   19554:	mov	r3, r4
   19558:	mov	r2, r4
   1955c:	ldr	r1, [pc, #1996]	; 19d30 <__flatcc_fb_gen_common_c_header@@Base+0xb9c>
   19560:	ldr	r0, [r4, #204]	; 0xcc
   19564:	bl	14094 <fprintf@plt>
   19568:	mov	r2, r4
   1956c:	ldr	r1, [pc, #1984]	; 19d34 <__flatcc_fb_gen_common_c_header@@Base+0xba0>
   19570:	ldr	r0, [r4, #204]	; 0xcc
   19574:	bl	14094 <fprintf@plt>
   19578:	mov	r2, r4
   1957c:	ldr	r1, [pc, #1972]	; 19d38 <__flatcc_fb_gen_common_c_header@@Base+0xba4>
   19580:	ldr	r0, [r4, #204]	; 0xcc
   19584:	bl	14094 <fprintf@plt>
   19588:	mov	r2, r4
   1958c:	ldr	r1, [pc, #1960]	; 19d3c <__flatcc_fb_gen_common_c_header@@Base+0xba8>
   19590:	ldr	r0, [r4, #204]	; 0xcc
   19594:	bl	14094 <fprintf@plt>
   19598:	mov	r2, r4
   1959c:	ldr	r1, [pc, #1948]	; 19d40 <__flatcc_fb_gen_common_c_header@@Base+0xbac>
   195a0:	ldr	r0, [r4, #204]	; 0xcc
   195a4:	bl	14094 <fprintf@plt>
   195a8:	mov	r2, r4
   195ac:	ldr	r1, [pc, #1936]	; 19d44 <__flatcc_fb_gen_common_c_header@@Base+0xbb0>
   195b0:	ldr	r0, [r4, #204]	; 0xcc
   195b4:	bl	14094 <fprintf@plt>
   195b8:	str	r4, [sp, #4]
   195bc:	str	r4, [sp]
   195c0:	mov	r3, r4
   195c4:	mov	r2, r4
   195c8:	ldr	r1, [pc, #1912]	; 19d48 <__flatcc_fb_gen_common_c_header@@Base+0xbb4>
   195cc:	ldr	r0, [r4, #204]	; 0xcc
   195d0:	bl	14094 <fprintf@plt>
   195d4:	str	r4, [sp, #12]
   195d8:	str	r4, [sp, #8]
   195dc:	str	r4, [sp, #4]
   195e0:	str	r4, [sp]
   195e4:	mov	r3, r4
   195e8:	mov	r2, r4
   195ec:	ldr	r1, [pc, #1880]	; 19d4c <__flatcc_fb_gen_common_c_header@@Base+0xbb8>
   195f0:	ldr	r0, [r4, #204]	; 0xcc
   195f4:	bl	14094 <fprintf@plt>
   195f8:	str	r4, [sp]
   195fc:	mov	r3, r4
   19600:	mov	r2, r4
   19604:	ldr	r1, [pc, #1860]	; 19d50 <__flatcc_fb_gen_common_c_header@@Base+0xbbc>
   19608:	ldr	r0, [r4, #204]	; 0xcc
   1960c:	bl	14094 <fprintf@plt>
   19610:	str	r4, [sp, #32]
   19614:	str	r4, [sp, #28]
   19618:	str	r4, [sp, #24]
   1961c:	str	r4, [sp, #20]
   19620:	str	r4, [sp, #16]
   19624:	str	r4, [sp, #12]
   19628:	str	r4, [sp, #8]
   1962c:	str	r4, [sp, #4]
   19630:	str	r4, [sp]
   19634:	mov	r3, r4
   19638:	mov	r2, r4
   1963c:	ldr	r1, [pc, #1808]	; 19d54 <__flatcc_fb_gen_common_c_header@@Base+0xbc0>
   19640:	ldr	r0, [r4, #204]	; 0xcc
   19644:	bl	14094 <fprintf@plt>
   19648:	mov	r3, r4
   1964c:	mov	r2, r4
   19650:	ldr	r1, [pc, #1792]	; 19d58 <__flatcc_fb_gen_common_c_header@@Base+0xbc4>
   19654:	ldr	r0, [r4, #204]	; 0xcc
   19658:	bl	14094 <fprintf@plt>
   1965c:	str	r4, [sp]
   19660:	mov	r3, r4
   19664:	mov	r2, r4
   19668:	ldr	r1, [pc, #1772]	; 19d5c <__flatcc_fb_gen_common_c_header@@Base+0xbc8>
   1966c:	ldr	r0, [r4, #204]	; 0xcc
   19670:	bl	14094 <fprintf@plt>
   19674:	str	r4, [sp]
   19678:	mov	r3, r4
   1967c:	mov	r2, r4
   19680:	ldr	r1, [pc, #1752]	; 19d60 <__flatcc_fb_gen_common_c_header@@Base+0xbcc>
   19684:	ldr	r0, [r4, #204]	; 0xcc
   19688:	bl	14094 <fprintf@plt>
   1968c:	mov	r2, r4
   19690:	ldr	r1, [pc, #1740]	; 19d64 <__flatcc_fb_gen_common_c_header@@Base+0xbd0>
   19694:	ldr	r0, [r4, #204]	; 0xcc
   19698:	bl	14094 <fprintf@plt>
   1969c:	mov	r2, r4
   196a0:	ldr	r1, [pc, #1728]	; 19d68 <__flatcc_fb_gen_common_c_header@@Base+0xbd4>
   196a4:	ldr	r0, [r4, #204]	; 0xcc
   196a8:	bl	14094 <fprintf@plt>
   196ac:	mov	r3, r4
   196b0:	mov	r2, r4
   196b4:	ldr	r1, [pc, #1712]	; 19d6c <__flatcc_fb_gen_common_c_header@@Base+0xbd8>
   196b8:	ldr	r0, [r4, #204]	; 0xcc
   196bc:	bl	14094 <fprintf@plt>
   196c0:	mov	r3, r4
   196c4:	mov	r2, r4
   196c8:	ldr	r1, [pc, #1696]	; 19d70 <__flatcc_fb_gen_common_c_header@@Base+0xbdc>
   196cc:	ldr	r0, [r4, #204]	; 0xcc
   196d0:	bl	14094 <fprintf@plt>
   196d4:	str	r4, [sp, #32]
   196d8:	str	r4, [sp, #28]
   196dc:	str	r4, [sp, #24]
   196e0:	str	r4, [sp, #20]
   196e4:	str	r4, [sp, #16]
   196e8:	str	r4, [sp, #12]
   196ec:	str	r4, [sp, #8]
   196f0:	str	r4, [sp, #4]
   196f4:	str	r4, [sp]
   196f8:	mov	r3, r4
   196fc:	mov	r2, r4
   19700:	ldr	r1, [pc, #1644]	; 19d74 <__flatcc_fb_gen_common_c_header@@Base+0xbe0>
   19704:	ldr	r0, [r4, #204]	; 0xcc
   19708:	bl	14094 <fprintf@plt>
   1970c:	str	r4, [sp, #32]
   19710:	str	r4, [sp, #28]
   19714:	str	r4, [sp, #24]
   19718:	str	r4, [sp, #20]
   1971c:	str	r4, [sp, #16]
   19720:	str	r4, [sp, #12]
   19724:	str	r4, [sp, #8]
   19728:	str	r4, [sp, #4]
   1972c:	str	r4, [sp]
   19730:	mov	r3, r4
   19734:	mov	r2, r4
   19738:	ldr	r1, [pc, #1592]	; 19d78 <__flatcc_fb_gen_common_c_header@@Base+0xbe4>
   1973c:	ldr	r0, [r4, #204]	; 0xcc
   19740:	bl	14094 <fprintf@plt>
   19744:	str	r4, [sp, #16]
   19748:	str	r4, [sp, #12]
   1974c:	str	r4, [sp, #8]
   19750:	str	r4, [sp, #4]
   19754:	str	r4, [sp]
   19758:	mov	r3, r4
   1975c:	mov	r2, r4
   19760:	ldr	r1, [pc, #1556]	; 19d7c <__flatcc_fb_gen_common_c_header@@Base+0xbe8>
   19764:	ldr	r0, [r4, #204]	; 0xcc
   19768:	bl	14094 <fprintf@plt>
   1976c:	str	r4, [sp, #32]
   19770:	str	r4, [sp, #28]
   19774:	str	r4, [sp, #24]
   19778:	str	r4, [sp, #20]
   1977c:	str	r4, [sp, #16]
   19780:	str	r4, [sp, #12]
   19784:	str	r4, [sp, #8]
   19788:	str	r4, [sp, #4]
   1978c:	str	r4, [sp]
   19790:	mov	r3, r4
   19794:	mov	r2, r4
   19798:	ldr	r1, [pc, #1504]	; 19d80 <__flatcc_fb_gen_common_c_header@@Base+0xbec>
   1979c:	ldr	r0, [r4, #204]	; 0xcc
   197a0:	bl	14094 <fprintf@plt>
   197a4:	str	r4, [sp, #40]	; 0x28
   197a8:	str	r4, [sp, #36]	; 0x24
   197ac:	str	r4, [sp, #32]
   197b0:	str	r4, [sp, #28]
   197b4:	str	r4, [sp, #24]
   197b8:	str	r4, [sp, #20]
   197bc:	str	r4, [sp, #16]
   197c0:	str	r4, [sp, #12]
   197c4:	str	r4, [sp, #8]
   197c8:	str	r4, [sp, #4]
   197cc:	str	r4, [sp]
   197d0:	mov	r3, r4
   197d4:	mov	r2, r4
   197d8:	ldr	r1, [pc, #1444]	; 19d84 <__flatcc_fb_gen_common_c_header@@Base+0xbf0>
   197dc:	ldr	r0, [r4, #204]	; 0xcc
   197e0:	bl	14094 <fprintf@plt>
   197e4:	mov	r2, r4
   197e8:	ldr	r1, [pc, #1432]	; 19d88 <__flatcc_fb_gen_common_c_header@@Base+0xbf4>
   197ec:	ldr	r0, [r4, #204]	; 0xcc
   197f0:	bl	14094 <fprintf@plt>
   197f4:	mov	r2, r4
   197f8:	ldr	r1, [pc, #1420]	; 19d8c <__flatcc_fb_gen_common_c_header@@Base+0xbf8>
   197fc:	ldr	r0, [r4, #204]	; 0xcc
   19800:	bl	14094 <fprintf@plt>
   19804:	ldr	r3, [r4, #212]	; 0xd4
   19808:	ldr	r3, [r3, #136]	; 0x88
   1980c:	cmp	r3, #0
   19810:	beq	19c48 <__flatcc_fb_gen_common_c_header@@Base+0xab4>
   19814:	mov	r0, r4
   19818:	bl	1a2f0 <__flatcc_gen_sort@@Base>
   1981c:	str	r4, [sp, #8]
   19820:	str	r4, [sp, #4]
   19824:	str	r4, [sp]
   19828:	mov	r3, r4
   1982c:	mov	r2, r4
   19830:	ldr	r1, [pc, #1368]	; 19d90 <__flatcc_fb_gen_common_c_header@@Base+0xbfc>
   19834:	ldr	r0, [r4, #204]	; 0xcc
   19838:	bl	14094 <fprintf@plt>
   1983c:	ldr	r3, [r4, #212]	; 0xd4
   19840:	ldr	r3, [r3, #136]	; 0x88
   19844:	cmp	r3, #0
   19848:	beq	19c60 <__flatcc_fb_gen_common_c_header@@Base+0xacc>
   1984c:	mov	r2, r4
   19850:	ldr	r1, [pc, #1340]	; 19d94 <__flatcc_fb_gen_common_c_header@@Base+0xc00>
   19854:	ldr	r0, [r4, #204]	; 0xcc
   19858:	bl	14094 <fprintf@plt>
   1985c:	ldr	r1, [r4, #204]	; 0xcc
   19860:	mov	r0, #10
   19864:	bl	140f4 <fputc@plt>
   19868:	str	r4, [sp]
   1986c:	mov	r3, r4
   19870:	mov	r2, r4
   19874:	ldr	r1, [pc, #1308]	; 19d98 <__flatcc_fb_gen_common_c_header@@Base+0xc04>
   19878:	ldr	r0, [r4, #204]	; 0xcc
   1987c:	bl	14094 <fprintf@plt>
   19880:	str	r4, [sp, #92]	; 0x5c
   19884:	str	r4, [sp, #88]	; 0x58
   19888:	str	r4, [sp, #84]	; 0x54
   1988c:	str	r4, [sp, #80]	; 0x50
   19890:	str	r4, [sp, #76]	; 0x4c
   19894:	str	r4, [sp, #72]	; 0x48
   19898:	str	r4, [sp, #68]	; 0x44
   1989c:	str	r4, [sp, #64]	; 0x40
   198a0:	str	r4, [sp, #60]	; 0x3c
   198a4:	str	r4, [sp, #56]	; 0x38
   198a8:	str	r4, [sp, #52]	; 0x34
   198ac:	str	r4, [sp, #48]	; 0x30
   198b0:	str	r4, [sp, #44]	; 0x2c
   198b4:	str	r4, [sp, #40]	; 0x28
   198b8:	str	r4, [sp, #36]	; 0x24
   198bc:	str	r4, [sp, #32]
   198c0:	str	r4, [sp, #28]
   198c4:	str	r4, [sp, #24]
   198c8:	str	r4, [sp, #20]
   198cc:	str	r4, [sp, #16]
   198d0:	str	r4, [sp, #12]
   198d4:	str	r4, [sp, #8]
   198d8:	str	r4, [sp, #4]
   198dc:	str	r4, [sp]
   198e0:	mov	r3, r4
   198e4:	mov	r2, r4
   198e8:	ldr	r1, [pc, #1196]	; 19d9c <__flatcc_fb_gen_common_c_header@@Base+0xc08>
   198ec:	ldr	r0, [r4, #204]	; 0xcc
   198f0:	bl	14094 <fprintf@plt>
   198f4:	str	r4, [sp, #36]	; 0x24
   198f8:	str	r4, [sp, #32]
   198fc:	str	r4, [sp, #28]
   19900:	str	r4, [sp, #24]
   19904:	str	r4, [sp, #20]
   19908:	str	r4, [sp, #16]
   1990c:	str	r4, [sp, #12]
   19910:	str	r4, [sp, #8]
   19914:	str	r4, [sp, #4]
   19918:	str	r4, [sp]
   1991c:	mov	r3, r4
   19920:	mov	r2, r4
   19924:	ldr	r1, [pc, #1140]	; 19da0 <__flatcc_fb_gen_common_c_header@@Base+0xc0c>
   19928:	ldr	r0, [r4, #204]	; 0xcc
   1992c:	bl	14094 <fprintf@plt>
   19930:	str	r4, [sp, #228]	; 0xe4
   19934:	str	r4, [sp, #224]	; 0xe0
   19938:	str	r4, [sp, #220]	; 0xdc
   1993c:	str	r4, [sp, #216]	; 0xd8
   19940:	str	r4, [sp, #212]	; 0xd4
   19944:	str	r4, [sp, #208]	; 0xd0
   19948:	str	r4, [sp, #204]	; 0xcc
   1994c:	str	r4, [sp, #200]	; 0xc8
   19950:	str	r4, [sp, #196]	; 0xc4
   19954:	str	r4, [sp, #192]	; 0xc0
   19958:	str	r4, [sp, #188]	; 0xbc
   1995c:	str	r4, [sp, #184]	; 0xb8
   19960:	str	r4, [sp, #180]	; 0xb4
   19964:	str	r4, [sp, #176]	; 0xb0
   19968:	str	r4, [sp, #172]	; 0xac
   1996c:	str	r4, [sp, #168]	; 0xa8
   19970:	str	r4, [sp, #164]	; 0xa4
   19974:	str	r4, [sp, #160]	; 0xa0
   19978:	str	r4, [sp, #156]	; 0x9c
   1997c:	str	r4, [sp, #152]	; 0x98
   19980:	str	r4, [sp, #148]	; 0x94
   19984:	str	r4, [sp, #144]	; 0x90
   19988:	str	r4, [sp, #140]	; 0x8c
   1998c:	str	r4, [sp, #136]	; 0x88
   19990:	str	r4, [sp, #132]	; 0x84
   19994:	str	r4, [sp, #128]	; 0x80
   19998:	str	r4, [sp, #124]	; 0x7c
   1999c:	str	r4, [sp, #120]	; 0x78
   199a0:	str	r4, [sp, #116]	; 0x74
   199a4:	str	r4, [sp, #112]	; 0x70
   199a8:	str	r4, [sp, #108]	; 0x6c
   199ac:	str	r4, [sp, #104]	; 0x68
   199b0:	str	r4, [sp, #100]	; 0x64
   199b4:	str	r4, [sp, #96]	; 0x60
   199b8:	str	r4, [sp, #92]	; 0x5c
   199bc:	str	r4, [sp, #88]	; 0x58
   199c0:	str	r4, [sp, #84]	; 0x54
   199c4:	str	r4, [sp, #80]	; 0x50
   199c8:	str	r4, [sp, #76]	; 0x4c
   199cc:	str	r4, [sp, #72]	; 0x48
   199d0:	str	r4, [sp, #68]	; 0x44
   199d4:	str	r4, [sp, #64]	; 0x40
   199d8:	str	r4, [sp, #60]	; 0x3c
   199dc:	str	r4, [sp, #56]	; 0x38
   199e0:	str	r4, [sp, #52]	; 0x34
   199e4:	str	r4, [sp, #48]	; 0x30
   199e8:	str	r4, [sp, #44]	; 0x2c
   199ec:	str	r4, [sp, #40]	; 0x28
   199f0:	str	r4, [sp, #36]	; 0x24
   199f4:	str	r4, [sp, #32]
   199f8:	str	r4, [sp, #28]
   199fc:	str	r4, [sp, #24]
   19a00:	str	r4, [sp, #20]
   19a04:	str	r4, [sp, #16]
   19a08:	str	r4, [sp, #12]
   19a0c:	str	r4, [sp, #8]
   19a10:	str	r4, [sp, #4]
   19a14:	str	r4, [sp]
   19a18:	mov	r3, r4
   19a1c:	mov	r2, r4
   19a20:	ldr	r1, [pc, #892]	; 19da4 <__flatcc_fb_gen_common_c_header@@Base+0xc10>
   19a24:	ldr	r0, [r4, #204]	; 0xcc
   19a28:	bl	14094 <fprintf@plt>
   19a2c:	ldr	r3, [r4, #212]	; 0xd4
   19a30:	ldr	r3, [r3, #136]	; 0x88
   19a34:	cmp	r3, #0
   19a38:	bne	19c70 <__flatcc_fb_gen_common_c_header@@Base+0xadc>
   19a3c:	mov	r3, r4
   19a40:	mov	r2, r4
   19a44:	ldr	r1, [pc, #860]	; 19da8 <__flatcc_fb_gen_common_c_header@@Base+0xc14>
   19a48:	ldr	r0, [r4, #204]	; 0xcc
   19a4c:	bl	14094 <fprintf@plt>
   19a50:	ldr	r3, [r4, #212]	; 0xd4
   19a54:	ldr	r3, [r3, #32]
   19a58:	cmp	r3, #0
   19a5c:	bne	19c84 <__flatcc_fb_gen_common_c_header@@Base+0xaf0>
   19a60:	ldr	r1, [r4, #204]	; 0xcc
   19a64:	mov	r0, #10
   19a68:	bl	140f4 <fputc@plt>
   19a6c:	mov	r2, r4
   19a70:	ldr	r1, [pc, #820]	; 19dac <__flatcc_fb_gen_common_c_header@@Base+0xc18>
   19a74:	ldr	r0, [r4, #204]	; 0xcc
   19a78:	bl	14094 <fprintf@plt>
   19a7c:	str	r4, [sp, #44]	; 0x2c
   19a80:	str	r4, [sp, #40]	; 0x28
   19a84:	str	r4, [sp, #36]	; 0x24
   19a88:	str	r4, [sp, #32]
   19a8c:	str	r4, [sp, #28]
   19a90:	str	r4, [sp, #24]
   19a94:	str	r4, [sp, #20]
   19a98:	str	r4, [sp, #16]
   19a9c:	str	r4, [sp, #12]
   19aa0:	str	r4, [sp, #8]
   19aa4:	str	r4, [sp, #4]
   19aa8:	str	r4, [sp]
   19aac:	mov	r3, r4
   19ab0:	mov	r2, r4
   19ab4:	ldr	r1, [pc, #756]	; 19db0 <__flatcc_fb_gen_common_c_header@@Base+0xc1c>
   19ab8:	ldr	r0, [r4, #204]	; 0xcc
   19abc:	bl	14094 <fprintf@plt>
   19ac0:	str	r4, [sp]
   19ac4:	mov	r3, r4
   19ac8:	mov	r2, r4
   19acc:	ldr	r1, [pc, #736]	; 19db4 <__flatcc_fb_gen_common_c_header@@Base+0xc20>
   19ad0:	ldr	r0, [r4, #204]	; 0xcc
   19ad4:	bl	14094 <fprintf@plt>
   19ad8:	str	r4, [sp, #12]
   19adc:	str	r4, [sp, #8]
   19ae0:	str	r4, [sp, #4]
   19ae4:	str	r4, [sp]
   19ae8:	mov	r3, r4
   19aec:	mov	r2, r4
   19af0:	ldr	r1, [pc, #704]	; 19db8 <__flatcc_fb_gen_common_c_header@@Base+0xc24>
   19af4:	ldr	r0, [r4, #204]	; 0xcc
   19af8:	bl	14094 <fprintf@plt>
   19afc:	str	r4, [sp, #4]
   19b00:	str	r4, [sp]
   19b04:	mov	r3, r4
   19b08:	mov	r2, r4
   19b0c:	ldr	r1, [pc, #680]	; 19dbc <__flatcc_fb_gen_common_c_header@@Base+0xc28>
   19b10:	ldr	r0, [r4, #204]	; 0xcc
   19b14:	bl	14094 <fprintf@plt>
   19b18:	str	r4, [sp, #28]
   19b1c:	str	r4, [sp, #24]
   19b20:	str	r4, [sp, #20]
   19b24:	str	r4, [sp, #16]
   19b28:	str	r4, [sp, #12]
   19b2c:	str	r4, [sp, #8]
   19b30:	str	r4, [sp, #4]
   19b34:	str	r4, [sp]
   19b38:	mov	r3, r4
   19b3c:	mov	r2, r4
   19b40:	ldr	r1, [pc, #632]	; 19dc0 <__flatcc_fb_gen_common_c_header@@Base+0xc2c>
   19b44:	ldr	r0, [r4, #204]	; 0xcc
   19b48:	bl	14094 <fprintf@plt>
   19b4c:	ldr	r1, [r4, #204]	; 0xcc
   19b50:	mov	r0, #10
   19b54:	bl	140f4 <fputc@plt>
   19b58:	ldr	r3, [r4, #212]	; 0xd4
   19b5c:	ldr	r3, [r3, #140]	; 0x8c
   19b60:	cmp	r3, #0
   19b64:	bne	19c98 <__flatcc_fb_gen_common_c_header@@Base+0xb04>
   19b68:	mov	r2, r5
   19b6c:	ldr	r1, [pc, #592]	; 19dc4 <__flatcc_fb_gen_common_c_header@@Base+0xc30>
   19b70:	ldr	r0, [r4, #204]	; 0xcc
   19b74:	bl	14094 <fprintf@plt>
   19b78:	mov	r0, #0
   19b7c:	add	sp, sp, #236	; 0xec
   19b80:	pop	{r4, r5, pc}
   19b84:	ldr	r3, [r4, #204]	; 0xcc
   19b88:	mov	r2, #135	; 0x87
   19b8c:	mov	r1, #1
   19b90:	ldr	r0, [pc, #560]	; 19dc8 <__flatcc_fb_gen_common_c_header@@Base+0xc34>
   19b94:	bl	1401c <fwrite@plt>
   19b98:	b	191f0 <__flatcc_fb_gen_common_c_header@@Base+0x5c>
   19b9c:	ldr	r3, [r4, #204]	; 0xcc
   19ba0:	mov	r2, #36	; 0x24
   19ba4:	mov	r1, #1
   19ba8:	ldr	r0, [pc, #540]	; 19dcc <__flatcc_fb_gen_common_c_header@@Base+0xc38>
   19bac:	bl	1401c <fwrite@plt>
   19bb0:	b	19200 <__flatcc_fb_gen_common_c_header@@Base+0x6c>
   19bb4:	str	r4, [sp, #8]
   19bb8:	str	r4, [sp, #4]
   19bbc:	str	r4, [sp]
   19bc0:	mov	r3, r4
   19bc4:	mov	r2, r4
   19bc8:	ldr	r1, [pc, #512]	; 19dd0 <__flatcc_fb_gen_common_c_header@@Base+0xc3c>
   19bcc:	ldr	r0, [r4, #204]	; 0xcc
   19bd0:	bl	14094 <fprintf@plt>
   19bd4:	str	r4, [sp, #4]
   19bd8:	str	r4, [sp]
   19bdc:	mov	r3, r4
   19be0:	ldr	r2, [pc, #492]	; 19dd4 <__flatcc_fb_gen_common_c_header@@Base+0xc40>
   19be4:	ldr	r1, [pc, #492]	; 19dd8 <__flatcc_fb_gen_common_c_header@@Base+0xc44>
   19be8:	ldr	r0, [r4, #204]	; 0xcc
   19bec:	bl	14094 <fprintf@plt>
   19bf0:	str	r4, [sp, #8]
   19bf4:	str	r4, [sp, #4]
   19bf8:	str	r4, [sp]
   19bfc:	mov	r3, r4
   19c00:	mov	r2, r4
   19c04:	ldr	r1, [pc, #464]	; 19ddc <__flatcc_fb_gen_common_c_header@@Base+0xc48>
   19c08:	ldr	r0, [r4, #204]	; 0xcc
   19c0c:	bl	14094 <fprintf@plt>
   19c10:	mov	r3, r5
   19c14:	mov	r2, r5
   19c18:	ldr	r1, [pc, #448]	; 19de0 <__flatcc_fb_gen_common_c_header@@Base+0xc4c>
   19c1c:	ldr	r0, [r4, #204]	; 0xcc
   19c20:	bl	14094 <fprintf@plt>
   19c24:	b	19228 <__flatcc_fb_gen_common_c_header@@Base+0x94>
   19c28:	ldr	r1, [r4, #204]	; 0xcc
   19c2c:	mov	r0, #10
   19c30:	bl	140f4 <fputc@plt>
   19c34:	b	192b4 <__flatcc_fb_gen_common_c_header@@Base+0x120>
   19c38:	ldr	r1, [r4, #204]	; 0xcc
   19c3c:	mov	r0, #10
   19c40:	bl	140f4 <fputc@plt>
   19c44:	b	19390 <__flatcc_fb_gen_common_c_header@@Base+0x1fc>
   19c48:	ldr	r3, [r4, #204]	; 0xcc
   19c4c:	mov	r2, #20
   19c50:	mov	r1, #1
   19c54:	ldr	r0, [pc, #392]	; 19de4 <__flatcc_fb_gen_common_c_header@@Base+0xc50>
   19c58:	bl	1401c <fwrite@plt>
   19c5c:	b	1981c <__flatcc_fb_gen_common_c_header@@Base+0x688>
   19c60:	ldr	r1, [r4, #204]	; 0xcc
   19c64:	mov	r0, #10
   19c68:	bl	140f4 <fputc@plt>
   19c6c:	b	1985c <__flatcc_fb_gen_common_c_header@@Base+0x6c8>
   19c70:	mov	r2, r4
   19c74:	ldr	r1, [pc, #364]	; 19de8 <__flatcc_fb_gen_common_c_header@@Base+0xc54>
   19c78:	ldr	r0, [r4, #204]	; 0xcc
   19c7c:	bl	14094 <fprintf@plt>
   19c80:	b	19a3c <__flatcc_fb_gen_common_c_header@@Base+0x8a8>
   19c84:	mov	r2, r4
   19c88:	ldr	r1, [pc, #68]	; 19cd4 <__flatcc_fb_gen_common_c_header@@Base+0xb40>
   19c8c:	ldr	r0, [r4, #204]	; 0xcc
   19c90:	bl	14094 <fprintf@plt>
   19c94:	b	19a6c <__flatcc_fb_gen_common_c_header@@Base+0x8d8>
   19c98:	ldr	r3, [r4, #204]	; 0xcc
   19c9c:	mov	r2, #36	; 0x24
   19ca0:	mov	r1, #1
   19ca4:	ldr	r0, [pc, #320]	; 19dec <__flatcc_fb_gen_common_c_header@@Base+0xc58>
   19ca8:	bl	1401c <fwrite@plt>
   19cac:	b	19b68 <__flatcc_fb_gen_common_c_header@@Base+0x9d4>
   19cb0:	andeq	lr, r3, r8, rrx
   19cb4:	andeq	lr, r3, r0, lsr #1
   19cb8:	strdeq	lr, [r3], -r4
   19cbc:	ldrdeq	lr, [r3], -ip
   19cc0:	andeq	lr, r3, r8, lsl #4
   19cc4:	strdeq	lr, [r3], -r8
   19cc8:	andeq	lr, r3, r8, lsl #15
   19ccc:	strdeq	lr, [r3], -ip
   19cd0:	andeq	lr, r3, r4, asr r9
   19cd4:	andeq	lr, r3, ip, ror sl
   19cd8:	andeq	lr, r3, ip, lsr #21
   19cdc:	andeq	lr, r3, r0, lsl #23
   19ce0:	andeq	lr, r3, ip, lsr #26
   19ce4:	andeq	lr, r3, ip, asr #27
   19ce8:	andeq	lr, r3, r8, lsr #29
   19cec:	andeq	lr, r3, r4, lsl #31
   19cf0:	andeq	pc, r3, ip, asr r0	; <UNPREDICTABLE>
   19cf4:	andeq	pc, r3, r4, asr #2
   19cf8:	andeq	pc, r3, r0, ror r1	; <UNPREDICTABLE>
   19cfc:	andeq	pc, r3, r0, lsl r2	; <UNPREDICTABLE>
   19d00:	andeq	pc, r3, r4, asr r2	; <UNPREDICTABLE>
   19d04:	andeq	pc, r3, r0, ror #5
   19d08:	andeq	pc, r3, r4, asr r3	; <UNPREDICTABLE>
   19d0c:	andeq	pc, r3, r4, ror r4	; <UNPREDICTABLE>
   19d10:	andeq	pc, r3, ip, ror #9
   19d14:	andeq	pc, r3, ip, ror #10
   19d18:	ldrdeq	pc, [r3], -r0
   19d1c:	strdeq	pc, [r3], -r4
   19d20:	andeq	pc, r3, r8, lsl r7	; <UNPREDICTABLE>
   19d24:	andeq	pc, r3, r0, lsr #15
   19d28:	andeq	pc, r3, r0, asr r9	; <UNPREDICTABLE>
   19d2c:	andeq	pc, r3, r4, lsl sl	; <UNPREDICTABLE>
   19d30:			; <UNDEFINED> instruction: 0x0003fab0
   19d34:	andeq	pc, r3, r8, lsr #22
   19d38:	strdeq	pc, [r3], -ip
   19d3c:	muleq	r4, r0, r0
   19d40:	andeq	r0, r4, r4, lsl r1
   19d44:	andeq	r0, r4, r4, lsl #3
   19d48:	andeq	r0, r4, r8, ror #6
   19d4c:	andeq	r0, r4, r4, lsl r4
   19d50:	strdeq	r0, [r4], -r0	; <UNPREDICTABLE>
   19d54:	andeq	r0, r4, ip, lsl #16
   19d58:	andeq	r0, r4, r4, ror #18
   19d5c:	andeq	r0, r4, r4, lsr sl
   19d60:	andeq	r0, r4, ip, ror #21
   19d64:	andeq	r0, r4, r4, lsr #25
   19d68:	andeq	r0, r4, r0, asr sp
   19d6c:	andeq	r0, r4, r0, lsl #29
   19d70:	ldrdeq	r0, [r4], -r0	; <UNPREDICTABLE>
   19d74:	andeq	r1, r4, r4, lsr #1
   19d78:	andeq	r1, r4, r0, lsr #4
   19d7c:	andeq	r1, r4, r4, lsr #7
   19d80:	strdeq	r1, [r4], -ip
   19d84:	andeq	r1, r4, ip, lsl sl
   19d88:	andeq	r2, r4, r8, ror #1
   19d8c:	andeq	r2, r4, r8, lsr r3
   19d90:	andeq	r2, r4, r4, lsl r8
   19d94:	strdeq	r2, [r4], -r8
   19d98:	andeq	r2, r4, r8, lsl r9
   19d9c:	muleq	r4, r8, r9
   19da0:	andeq	r2, r4, ip, lsr #23
   19da4:	strdeq	r2, [r4], -r8
   19da8:	ldrdeq	r3, [r4], -r0
   19dac:	andeq	r3, r4, ip, ror #8
   19db0:	andeq	r3, r4, ip, ror #9
   19db4:	andeq	r3, r4, r8, lsr r8
   19db8:	strdeq	r3, [r4], -r0
   19dbc:			; <UNDEFINED> instruction: 0x00043ab8
   19dc0:	andeq	r3, r4, r4, lsr sp
   19dc4:	andeq	r4, r4, r0, asr #32
   19dc8:	andeq	lr, r3, ip, lsr #2
   19dcc:			; <UNDEFINED> instruction: 0x0003e1b4
   19dd0:	andeq	lr, r3, r8, lsl r2
   19dd4:	andeq	lr, r3, r4, lsl #4
   19dd8:	andeq	lr, r3, r8, ror #5
   19ddc:	andeq	lr, r3, r0, asr #8
   19de0:	andeq	lr, r3, r8, lsr #13
   19de4:	strdeq	r2, [r4], -ip
   19de8:			; <UNDEFINED> instruction: 0x000433b4
   19dec:	andeq	r4, r4, r8, lsl r0

00019df0 <__flatcc_fb_gen_c_reader@@Base>:
   19df0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19df4:	sub	sp, sp, #252	; 0xfc
   19df8:	mov	r4, r0
   19dfc:	mov	r8, r0
   19e00:	add	r6, r0, #102	; 0x66
   19e04:	ldr	r3, [r0, #212]	; 0xd4
   19e08:	ldr	r5, [r3, #132]	; 0x84
   19e0c:	ldr	r3, [r0, #208]	; 0xd0
   19e10:	ldr	r2, [r3, #164]	; 0xa4
   19e14:	mov	r3, r2
   19e18:	ldr	r1, [pc, #1128]	; 1a288 <__flatcc_fb_gen_c_reader@@Base+0x498>
   19e1c:	ldr	r0, [r0, #204]	; 0xcc
   19e20:	bl	14094 <fprintf@plt>
   19e24:	ldr	r3, [r4, #204]	; 0xcc
   19e28:	mov	r2, #81	; 0x51
   19e2c:	mov	r1, #1
   19e30:	ldr	r0, [pc, #1108]	; 1a28c <__flatcc_fb_gen_c_reader@@Base+0x49c>
   19e34:	bl	1401c <fwrite@plt>
   19e38:	cmp	r5, #0
   19e3c:	bne	19fdc <__flatcc_fb_gen_c_reader@@Base+0x1ec>
   19e40:	mov	r3, r4
   19e44:	mov	r2, r6
   19e48:	ldr	r1, [pc, #1088]	; 1a290 <__flatcc_fb_gen_c_reader@@Base+0x4a0>
   19e4c:	ldr	r0, [r4, #204]	; 0xcc
   19e50:	bl	14094 <fprintf@plt>
   19e54:	ldr	r2, [pc, #1080]	; 1a294 <__flatcc_fb_gen_c_reader@@Base+0x4a4>
   19e58:	ldr	r1, [pc, #1080]	; 1a298 <__flatcc_fb_gen_c_reader@@Base+0x4a8>
   19e5c:	mov	r0, r4
   19e60:	bl	15ca8 <__flatcc_fb_gen_c_includes@@Base>
   19e64:	ldr	r3, [r4, #204]	; 0xcc
   19e68:	mov	r2, #39	; 0x27
   19e6c:	mov	r1, #1
   19e70:	ldr	r0, [pc, #1060]	; 1a29c <__flatcc_fb_gen_c_reader@@Base+0x4ac>
   19e74:	bl	1401c <fwrite@plt>
   19e78:	ldr	r3, [r4, #204]	; 0xcc
   19e7c:	mov	r2, #58	; 0x3a
   19e80:	mov	r1, #1
   19e84:	ldr	r0, [pc, #1044]	; 1a2a0 <__flatcc_fb_gen_c_reader@@Base+0x4b0>
   19e88:	bl	1401c <fwrite@plt>
   19e8c:	ldr	r3, [r4, #212]	; 0xd4
   19e90:	ldr	r3, [r3, #140]	; 0x8c
   19e94:	cmp	r3, #0
   19e98:	bne	1a02c <__flatcc_fb_gen_c_reader@@Base+0x23c>
   19e9c:	ldr	r3, [r4, #208]	; 0xd0
   19ea0:	ldrh	r2, [r3, #16]
   19ea4:	cmp	r2, #2
   19ea8:	beq	1a044 <__flatcc_fb_gen_c_reader@@Base+0x254>
   19eac:	mov	r3, r4
   19eb0:	mov	r2, r4
   19eb4:	ldr	r1, [pc, #1000]	; 1a2a4 <__flatcc_fb_gen_c_reader@@Base+0x4b4>
   19eb8:	ldr	r0, [r4, #204]	; 0xcc
   19ebc:	bl	14094 <fprintf@plt>
   19ec0:	ldr	r3, [r4, #208]	; 0xd0
   19ec4:	ldrh	r2, [r3, #32]
   19ec8:	cmp	r2, #2
   19ecc:	beq	1a06c <__flatcc_fb_gen_c_reader@@Base+0x27c>
   19ed0:	ldr	r3, [r4, #212]	; 0xd4
   19ed4:	ldr	r3, [r3, #104]	; 0x68
   19ed8:	str	r3, [sp]
   19edc:	mov	r3, r4
   19ee0:	mov	r2, r4
   19ee4:	ldr	r1, [pc, #956]	; 1a2a8 <__flatcc_fb_gen_c_reader@@Base+0x4b8>
   19ee8:	ldr	r0, [r4, #204]	; 0xcc
   19eec:	bl	14094 <fprintf@plt>
   19ef0:	ldr	r1, [r4, #204]	; 0xcc
   19ef4:	mov	r0, #10
   19ef8:	bl	140f4 <fputc@plt>
   19efc:	ldr	r3, [r4, #208]	; 0xd0
   19f00:	ldr	r5, [r3, #44]	; 0x2c
   19f04:	cmp	r5, #0
   19f08:	beq	19f24 <__flatcc_fb_gen_c_reader@@Base+0x134>
   19f0c:	mov	r1, r5
   19f10:	mov	r0, r4
   19f14:	bl	16254 <__flatcc_fb_codegen_c@@Base+0x1f4>
   19f18:	ldr	r5, [r5, #120]	; 0x78
   19f1c:	cmp	r5, #0
   19f20:	bne	19f0c <__flatcc_fb_gen_c_reader@@Base+0x11c>
   19f24:	ldr	r1, [r4, #204]	; 0xcc
   19f28:	mov	r0, #10
   19f2c:	bl	140f4 <fputc@plt>
   19f30:	ldr	r3, [r4, #208]	; 0xd0
   19f34:	ldr	r5, [r3, #40]	; 0x28
   19f38:	cmp	r5, #0
   19f3c:	bne	1a0a0 <__flatcc_fb_gen_c_reader@@Base+0x2b0>
   19f40:	ldr	r1, [r4, #204]	; 0xcc
   19f44:	mov	r0, #10
   19f48:	bl	140f4 <fputc@plt>
   19f4c:	ldr	r3, [r4, #208]	; 0xd0
   19f50:	ldr	r5, [r3, #40]	; 0x28
   19f54:	cmp	r5, #0
   19f58:	bne	1a1cc <__flatcc_fb_gen_c_reader@@Base+0x3dc>
   19f5c:	ldr	r1, [r4, #204]	; 0xcc
   19f60:	mov	r0, #10
   19f64:	bl	140f4 <fputc@plt>
   19f68:	ldr	r3, [r4, #208]	; 0xd0
   19f6c:	ldr	r5, [r3, #44]	; 0x2c
   19f70:	cmp	r5, #0
   19f74:	beq	19f90 <__flatcc_fb_gen_c_reader@@Base+0x1a0>
   19f78:	mov	r1, r5
   19f7c:	mov	r0, r4
   19f80:	bl	16e10 <__flatcc_fb_codegen_c@@Base+0xdb0>
   19f84:	ldr	r5, [r5, #120]	; 0x78
   19f88:	cmp	r5, #0
   19f8c:	bne	19f78 <__flatcc_fb_gen_c_reader@@Base+0x188>
   19f90:	ldr	r3, [r4, #208]	; 0xd0
   19f94:	ldr	r5, [r3, #40]	; 0x28
   19f98:	cmp	r5, #0
   19f9c:	bne	1a200 <__flatcc_fb_gen_c_reader@@Base+0x410>
   19fa0:	ldr	r1, [r4, #204]	; 0xcc
   19fa4:	mov	r0, #10
   19fa8:	bl	140f4 <fputc@plt>
   19fac:	ldr	r3, [r4, #212]	; 0xd4
   19fb0:	ldr	r3, [r3, #140]	; 0x8c
   19fb4:	cmp	r3, #0
   19fb8:	bne	1a270 <__flatcc_fb_gen_c_reader@@Base+0x480>
   19fbc:	ldr	r3, [r4, #208]	; 0xd0
   19fc0:	ldr	r2, [r3, #164]	; 0xa4
   19fc4:	ldr	r1, [pc, #736]	; 1a2ac <__flatcc_fb_gen_c_reader@@Base+0x4bc>
   19fc8:	ldr	r0, [r4, #204]	; 0xcc
   19fcc:	bl	14094 <fprintf@plt>
   19fd0:	mov	r0, #0
   19fd4:	add	sp, sp, #252	; 0xfc
   19fd8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19fdc:	ldr	r3, [r4, #204]	; 0xcc
   19fe0:	ldr	r2, [pc, #712]	; 1a2b0 <__flatcc_fb_gen_c_reader@@Base+0x4c0>
   19fe4:	mov	r1, #1
   19fe8:	ldr	r0, [pc, #708]	; 1a2b4 <__flatcc_fb_gen_c_reader@@Base+0x4c4>
   19fec:	bl	1401c <fwrite@plt>
   19ff0:	mov	r3, r4
   19ff4:	mov	r2, r6
   19ff8:	ldr	r1, [pc, #656]	; 1a290 <__flatcc_fb_gen_c_reader@@Base+0x4a0>
   19ffc:	ldr	r0, [r4, #204]	; 0xcc
   1a000:	bl	14094 <fprintf@plt>
   1a004:	ldr	r2, [pc, #648]	; 1a294 <__flatcc_fb_gen_c_reader@@Base+0x4a4>
   1a008:	ldr	r1, [pc, #648]	; 1a298 <__flatcc_fb_gen_c_reader@@Base+0x4a8>
   1a00c:	mov	r0, r4
   1a010:	bl	15ca8 <__flatcc_fb_gen_c_includes@@Base>
   1a014:	ldr	r3, [r4, #204]	; 0xcc
   1a018:	mov	r2, #39	; 0x27
   1a01c:	mov	r1, #1
   1a020:	ldr	r0, [pc, #628]	; 1a29c <__flatcc_fb_gen_c_reader@@Base+0x4ac>
   1a024:	bl	1401c <fwrite@plt>
   1a028:	b	19e8c <__flatcc_fb_gen_c_reader@@Base+0x9c>
   1a02c:	ldr	r3, [r4, #204]	; 0xcc
   1a030:	mov	r2, #36	; 0x24
   1a034:	mov	r1, #1
   1a038:	ldr	r0, [pc, #632]	; 1a2b8 <__flatcc_fb_gen_c_reader@@Base+0x4c8>
   1a03c:	bl	1401c <fwrite@plt>
   1a040:	b	19e9c <__flatcc_fb_gen_c_reader@@Base+0xac>
   1a044:	ldr	r2, [r3, #8]
   1a048:	str	r2, [sp, #4]
   1a04c:	ldr	r3, [r3, #12]
   1a050:	str	r3, [sp]
   1a054:	mov	r3, r4
   1a058:	mov	r2, r4
   1a05c:	ldr	r1, [pc, #600]	; 1a2bc <__flatcc_fb_gen_c_reader@@Base+0x4cc>
   1a060:	ldr	r0, [r4, #204]	; 0xcc
   1a064:	bl	14094 <fprintf@plt>
   1a068:	b	19ec0 <__flatcc_fb_gen_c_reader@@Base+0xd0>
   1a06c:	ldr	r2, [r3, #24]
   1a070:	str	r2, [sp, #4]
   1a074:	ldr	r3, [r3, #28]
   1a078:	str	r3, [sp]
   1a07c:	mov	r3, r4
   1a080:	mov	r2, r4
   1a084:	ldr	r1, [pc, #564]	; 1a2c0 <__flatcc_fb_gen_c_reader@@Base+0x4d0>
   1a088:	ldr	r0, [r4, #204]	; 0xcc
   1a08c:	bl	14094 <fprintf@plt>
   1a090:	b	19ef0 <__flatcc_fb_gen_c_reader@@Base+0x100>
   1a094:	ldr	r5, [r5]
   1a098:	cmp	r5, #0
   1a09c:	beq	1a0bc <__flatcc_fb_gen_c_reader@@Base+0x2cc>
   1a0a0:	ldrh	r3, [r5, #8]
   1a0a4:	cmp	r3, #0
   1a0a8:	bne	1a094 <__flatcc_fb_gen_c_reader@@Base+0x2a4>
   1a0ac:	mov	r1, r5
   1a0b0:	mov	r0, r4
   1a0b4:	bl	16254 <__flatcc_fb_codegen_c@@Base+0x1f4>
   1a0b8:	b	1a094 <__flatcc_fb_gen_c_reader@@Base+0x2a4>
   1a0bc:	ldr	r3, [r4, #208]	; 0xd0
   1a0c0:	ldr	r6, [r3, #40]	; 0x28
   1a0c4:	cmp	r6, #0
   1a0c8:	beq	19f40 <__flatcc_fb_gen_c_reader@@Base+0x150>
   1a0cc:	add	r7, sp, #28
   1a0d0:	mov	fp, #220	; 0xdc
   1a0d4:	mov	r9, #0
   1a0d8:	ldr	sl, [pc, #484]	; 1a2c4 <__flatcc_fb_gen_c_reader@@Base+0x4d4>
   1a0dc:	b	1a104 <__flatcc_fb_gen_c_reader@@Base+0x314>
   1a0e0:	strb	r9, [sp, #24]
   1a0e4:	add	r3, sp, #8
   1a0e8:	mov	r2, r7
   1a0ec:	ldr	r1, [pc, #468]	; 1a2c8 <__flatcc_fb_gen_c_reader@@Base+0x4d8>
   1a0f0:	ldr	r0, [r4, #204]	; 0xcc
   1a0f4:	bl	14094 <fprintf@plt>
   1a0f8:	ldr	r6, [r6]
   1a0fc:	cmp	r6, #0
   1a100:	beq	19f40 <__flatcc_fb_gen_c_reader@@Base+0x150>
   1a104:	ldrh	r3, [r6, #8]
   1a108:	cmp	r3, #1
   1a10c:	bhi	1a0f8 <__flatcc_fb_gen_c_reader@@Base+0x308>
   1a110:	mov	r2, fp
   1a114:	mov	r1, r9
   1a118:	mov	r0, r7
   1a11c:	bl	140ac <memset@plt>
   1a120:	mov	r2, r7
   1a124:	mov	r1, r6
   1a128:	ldr	r0, [r6, #12]
   1a12c:	bl	15edc <__flatcc_fb_scoped_symbol_name@@Base>
   1a130:	ldr	r5, [r6, #88]	; 0x58
   1a134:	str	r8, [sp]
   1a138:	mov	r3, r7
   1a13c:	mov	r2, r7
   1a140:	mov	r1, sl
   1a144:	ldr	r0, [r4, #204]	; 0xcc
   1a148:	bl	14094 <fprintf@plt>
   1a14c:	str	r5, [sp]
   1a150:	mov	r3, r8
   1a154:	mov	r2, r7
   1a158:	ldr	r1, [pc, #364]	; 1a2cc <__flatcc_fb_gen_c_reader@@Base+0x4dc>
   1a15c:	ldr	r0, [r4, #204]	; 0xcc
   1a160:	bl	14094 <fprintf@plt>
   1a164:	add	r1, sp, #12
   1a168:	mov	ip, #92	; 0x5c
   1a16c:	mov	r0, #120	; 0x78
   1a170:	strb	ip, [r1, #-4]
   1a174:	strb	r0, [r1, #-3]
   1a178:	and	r3, r5, #15
   1a17c:	cmp	r3, #9
   1a180:	movhi	r2, #87	; 0x57
   1a184:	movls	r2, #48	; 0x30
   1a188:	add	r3, r3, r2
   1a18c:	strb	r3, [r1, #-1]
   1a190:	lsr	r3, r5, #4
   1a194:	and	r3, r3, #15
   1a198:	cmp	r3, #9
   1a19c:	movhi	r2, #87	; 0x57
   1a1a0:	movls	r2, #48	; 0x30
   1a1a4:	lsr	r5, r5, #8
   1a1a8:	add	r3, r3, r2
   1a1ac:	strb	r3, [r1, #-2]
   1a1b0:	add	r1, r1, #4
   1a1b4:	cmp	r7, r1
   1a1b8:	bne	1a170 <__flatcc_fb_gen_c_reader@@Base+0x380>
   1a1bc:	b	1a0e0 <__flatcc_fb_gen_c_reader@@Base+0x2f0>
   1a1c0:	ldr	r5, [r5]
   1a1c4:	cmp	r5, #0
   1a1c8:	beq	19f5c <__flatcc_fb_gen_c_reader@@Base+0x16c>
   1a1cc:	ldrh	r3, [r5, #8]
   1a1d0:	cmp	r3, #3
   1a1d4:	bne	1a1c0 <__flatcc_fb_gen_c_reader@@Base+0x3d0>
   1a1d8:	mov	r1, r5
   1a1dc:	mov	r0, r4
   1a1e0:	bl	163b0 <__flatcc_fb_codegen_c@@Base+0x350>
   1a1e4:	b	1a1c0 <__flatcc_fb_gen_c_reader@@Base+0x3d0>
   1a1e8:	mov	r1, r5
   1a1ec:	mov	r0, r4
   1a1f0:	bl	163b0 <__flatcc_fb_codegen_c@@Base+0x350>
   1a1f4:	ldr	r5, [r5]
   1a1f8:	cmp	r5, #0
   1a1fc:	beq	19fa0 <__flatcc_fb_gen_c_reader@@Base+0x1b0>
   1a200:	ldrh	r3, [r5, #8]
   1a204:	cmp	r3, #4
   1a208:	ldrls	pc, [pc, r3, lsl #2]
   1a20c:	b	1a234 <__flatcc_fb_gen_c_reader@@Base+0x444>
   1a210:	andeq	sl, r1, r4, lsr #4
   1a214:	strdeq	sl, [r1], -r4
   1a218:	strdeq	sl, [r1], -r4
   1a21c:	strdeq	sl, [r1], -r4
   1a220:	andeq	sl, r1, r8, ror #3
   1a224:	mov	r1, r5
   1a228:	mov	r0, r4
   1a22c:	bl	17ad0 <__flatcc_fb_codegen_c@@Base+0x1a70>
   1a230:	b	1a1f4 <__flatcc_fb_gen_c_reader@@Base+0x404>
   1a234:	ldr	r5, [pc, #148]	; 1a2d0 <__flatcc_fb_gen_c_reader@@Base+0x4e0>
   1a238:	ldr	r4, [pc, #148]	; 1a2d4 <__flatcc_fb_gen_c_reader@@Base+0x4e4>
   1a23c:	ldr	r3, [pc, #148]	; 1a2d8 <__flatcc_fb_gen_c_reader@@Base+0x4e8>
   1a240:	ldr	r0, [r3]
   1a244:	ldr	r3, [pc, #144]	; 1a2dc <__flatcc_fb_gen_c_reader@@Base+0x4ec>
   1a248:	str	r3, [sp]
   1a24c:	mov	r3, r5
   1a250:	mov	r2, r4
   1a254:	ldr	r1, [pc, #132]	; 1a2e0 <__flatcc_fb_gen_c_reader@@Base+0x4f0>
   1a258:	bl	14094 <fprintf@plt>
   1a25c:	ldr	r3, [pc, #128]	; 1a2e4 <__flatcc_fb_gen_c_reader@@Base+0x4f4>
   1a260:	mov	r2, r5
   1a264:	mov	r1, r4
   1a268:	ldr	r0, [pc, #120]	; 1a2e8 <__flatcc_fb_gen_c_reader@@Base+0x4f8>
   1a26c:	bl	14148 <__assert_fail@plt>
   1a270:	ldr	r3, [r4, #204]	; 0xcc
   1a274:	mov	r2, #36	; 0x24
   1a278:	mov	r1, #1
   1a27c:	ldr	r0, [pc, #104]	; 1a2ec <__flatcc_fb_gen_c_reader@@Base+0x4fc>
   1a280:	bl	1401c <fwrite@plt>
   1a284:	b	19fbc <__flatcc_fb_gen_c_reader@@Base+0x1cc>
   1a288:	andeq	r4, r4, ip, asr r0
   1a28c:	andeq	lr, r3, r0, lsr #1
   1a290:	andeq	r4, r4, r4, asr #4
   1a294:	andeq	r4, r4, r4, lsl #5
   1a298:	andeq	r3, r5, r8, asr r1
   1a29c:	muleq	r4, r0, r2
   1a2a0:	andeq	r4, r4, r4, ror #8
   1a2a4:	andeq	r4, r4, ip, ror #5
   1a2a8:	andeq	r4, r4, r0, asr r3
   1a2ac:	andeq	r4, r4, r8, asr #8
   1a2b0:			; <UNDEFINED> instruction: 0x000001bb
   1a2b4:	andeq	r4, r4, r8, lsl #1
   1a2b8:			; <UNDEFINED> instruction: 0x0003e1b4
   1a2bc:			; <UNDEFINED> instruction: 0x000442b8
   1a2c0:	andeq	r4, r4, r0, lsr #6
   1a2c4:	andeq	r4, r4, r8, lsl #7
   1a2c8:	strdeq	r4, [r4], -r8
   1a2cc:	andeq	r4, r4, ip, asr #7
   1a2d0:	andeq	r0, r0, r8, lsl #13
   1a2d4:	andeq	ip, r3, r8, asr sl
   1a2d8:	andeq	r7, r6, r8, lsr #1
   1a2dc:	andeq	r4, r4, ip, lsl r4
   1a2e0:	andeq	ip, r3, r8, lsr #27
   1a2e4:	andeq	ip, r3, ip, lsr sl
   1a2e8:	andeq	r5, r4, r0, ror #3
   1a2ec:	andeq	r4, r4, r8, lsl r0

0001a2f0 <__flatcc_gen_sort@@Base>:
   1a2f0:	push	{r4, lr}
   1a2f4:	sub	sp, sp, #24
   1a2f8:	mov	r4, r0
   1a2fc:	mov	r2, r0
   1a300:	ldr	r1, [pc, #240]	; 1a3f8 <__flatcc_gen_sort@@Base+0x108>
   1a304:	ldr	r0, [r0, #204]	; 0xcc
   1a308:	bl	14094 <fprintf@plt>
   1a30c:	mov	r3, r4
   1a310:	mov	r2, r4
   1a314:	ldr	r1, [pc, #224]	; 1a3fc <__flatcc_gen_sort@@Base+0x10c>
   1a318:	ldr	r0, [r4, #204]	; 0xcc
   1a31c:	bl	14094 <fprintf@plt>
   1a320:	str	r4, [sp]
   1a324:	mov	r3, r4
   1a328:	mov	r2, r4
   1a32c:	ldr	r1, [pc, #204]	; 1a400 <__flatcc_gen_sort@@Base+0x110>
   1a330:	ldr	r0, [r4, #204]	; 0xcc
   1a334:	bl	14094 <fprintf@plt>
   1a338:	str	r4, [sp, #4]
   1a33c:	str	r4, [sp]
   1a340:	mov	r3, r4
   1a344:	mov	r2, r4
   1a348:	ldr	r1, [pc, #180]	; 1a404 <__flatcc_gen_sort@@Base+0x114>
   1a34c:	ldr	r0, [r4, #204]	; 0xcc
   1a350:	bl	14094 <fprintf@plt>
   1a354:	mov	r3, r4
   1a358:	mov	r2, r4
   1a35c:	ldr	r1, [pc, #164]	; 1a408 <__flatcc_gen_sort@@Base+0x118>
   1a360:	ldr	r0, [r4, #204]	; 0xcc
   1a364:	bl	14094 <fprintf@plt>
   1a368:	str	r4, [sp, #4]
   1a36c:	str	r4, [sp]
   1a370:	mov	r3, r4
   1a374:	mov	r2, r4
   1a378:	ldr	r1, [pc, #140]	; 1a40c <__flatcc_gen_sort@@Base+0x11c>
   1a37c:	ldr	r0, [r4, #204]	; 0xcc
   1a380:	bl	14094 <fprintf@plt>
   1a384:	str	r4, [sp, #12]
   1a388:	str	r4, [sp, #8]
   1a38c:	str	r4, [sp, #4]
   1a390:	str	r4, [sp]
   1a394:	mov	r3, r4
   1a398:	mov	r2, r4
   1a39c:	ldr	r1, [pc, #108]	; 1a410 <__flatcc_gen_sort@@Base+0x120>
   1a3a0:	ldr	r0, [r4, #204]	; 0xcc
   1a3a4:	bl	14094 <fprintf@plt>
   1a3a8:	str	r4, [sp, #4]
   1a3ac:	str	r4, [sp]
   1a3b0:	mov	r3, r4
   1a3b4:	mov	r2, r4
   1a3b8:	ldr	r1, [pc, #84]	; 1a414 <__flatcc_gen_sort@@Base+0x124>
   1a3bc:	ldr	r0, [r4, #204]	; 0xcc
   1a3c0:	bl	14094 <fprintf@plt>
   1a3c4:	ldr	r0, [r4, #204]	; 0xcc
   1a3c8:	str	r4, [sp, #16]
   1a3cc:	str	r4, [sp, #12]
   1a3d0:	str	r4, [sp, #8]
   1a3d4:	str	r4, [sp, #4]
   1a3d8:	str	r4, [sp]
   1a3dc:	mov	r3, r4
   1a3e0:	mov	r2, r4
   1a3e4:	ldr	r1, [pc, #44]	; 1a418 <__flatcc_gen_sort@@Base+0x128>
   1a3e8:	bl	14094 <fprintf@plt>
   1a3ec:	mov	r0, #0
   1a3f0:	add	sp, sp, #24
   1a3f4:	pop	{r4, pc}
   1a3f8:	andeq	r4, r4, r0, lsr #9
   1a3fc:	andeq	r4, r4, r0, ror r8
   1a400:	andeq	r4, r4, r0, lsl #19
   1a404:	andeq	r4, r4, r4, asr sl
   1a408:	andeq	r4, r4, r8, ror #21
   1a40c:	andeq	r4, r4, r0, lsl #25
   1a410:	andeq	r4, r4, r8, lsl #26
   1a414:	muleq	r4, r8, sp
   1a418:	strdeq	r4, [r4], -ip
   1a41c:	push	{r4, r5, r6, lr}
   1a420:	ldr	r4, [r0, #20]
   1a424:	cmp	r4, #0
   1a428:	beq	1a478 <__flatcc_gen_sort@@Base+0x188>
   1a42c:	mov	r5, #0
   1a430:	b	1a444 <__flatcc_gen_sort@@Base+0x154>
   1a434:	add	r5, r5, #1
   1a438:	ldr	r4, [r4]
   1a43c:	cmp	r4, #0
   1a440:	beq	1a47c <__flatcc_gen_sort@@Base+0x18c>
   1a444:	ldrh	r3, [r4, #72]	; 0x48
   1a448:	tst	r3, #4
   1a44c:	bne	1a438 <__flatcc_gen_sort@@Base+0x148>
   1a450:	ldrh	r3, [r4, #24]
   1a454:	cmp	r3, #14
   1a458:	bne	1a434 <__flatcc_gen_sort@@Base+0x144>
   1a45c:	ldr	r0, [r4, #16]
   1a460:	ldrh	r3, [r0, #8]
   1a464:	cmp	r3, #1
   1a468:	bne	1a434 <__flatcc_gen_sort@@Base+0x144>
   1a46c:	bl	1a41c <__flatcc_gen_sort@@Base+0x12c>
   1a470:	add	r5, r5, r0
   1a474:	b	1a438 <__flatcc_gen_sort@@Base+0x148>
   1a478:	mov	r5, #0
   1a47c:	mov	r0, r5
   1a480:	pop	{r4, r5, r6, pc}
   1a484:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a488:	sub	sp, sp, #484	; 0x1e4
   1a48c:	mov	r8, r0
   1a490:	mov	r9, r1
   1a494:	mov	sl, r2
   1a498:	mov	fp, r3
   1a49c:	ldr	r4, [sp, #520]	; 0x208
   1a4a0:	mov	r7, r0
   1a4a4:	ldr	r3, [pc, #488]	; 1a694 <__flatcc_gen_sort@@Base+0x3a4>
   1a4a8:	ldr	r2, [pc, #488]	; 1a698 <__flatcc_gen_sort@@Base+0x3a8>
   1a4ac:	ldr	r1, [sp, #524]	; 0x20c
   1a4b0:	cmp	r1, #0
   1a4b4:	moveq	r2, r3
   1a4b8:	str	r2, [sp, #36]	; 0x24
   1a4bc:	mov	r5, #220	; 0xdc
   1a4c0:	mov	r2, r5
   1a4c4:	mov	r1, #0
   1a4c8:	add	r0, sp, #260	; 0x104
   1a4cc:	bl	140ac <memset@plt>
   1a4d0:	mov	r2, r5
   1a4d4:	mov	r1, #0
   1a4d8:	add	r0, sp, #40	; 0x28
   1a4dc:	bl	140ac <memset@plt>
   1a4e0:	add	r2, sp, #260	; 0x104
   1a4e4:	mov	r1, r4
   1a4e8:	ldr	r0, [r4, #12]
   1a4ec:	bl	15edc <__flatcc_fb_scoped_symbol_name@@Base>
   1a4f0:	ldr	r4, [r4, #20]
   1a4f4:	cmp	r4, #0
   1a4f8:	bne	1a630 <__flatcc_gen_sort@@Base+0x340>
   1a4fc:	mov	r0, #0
   1a500:	add	sp, sp, #484	; 0x1e4
   1a504:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a508:	ldr	r3, [r4, #16]
   1a50c:	add	r2, sp, #40	; 0x28
   1a510:	mov	r1, r3
   1a514:	ldr	r0, [r3, #12]
   1a518:	bl	15edc <__flatcc_fb_scoped_symbol_name@@Base>
   1a51c:	ldr	r3, [r4, #16]
   1a520:	ldrh	r3, [r3, #8]
   1a524:	cmp	r3, #0
   1a528:	beq	1a570 <__flatcc_gen_sort@@Base+0x280>
   1a52c:	cmp	r3, #1
   1a530:	beq	1a5b0 <__flatcc_gen_sort@@Base+0x2c0>
   1a534:	ldr	r5, [pc, #352]	; 1a69c <__flatcc_gen_sort@@Base+0x3ac>
   1a538:	ldr	r4, [pc, #352]	; 1a6a0 <__flatcc_gen_sort@@Base+0x3b0>
   1a53c:	ldr	r3, [pc, #352]	; 1a6a4 <__flatcc_gen_sort@@Base+0x3b4>
   1a540:	ldr	r0, [r3]
   1a544:	ldr	r3, [pc, #348]	; 1a6a8 <__flatcc_gen_sort@@Base+0x3b8>
   1a548:	str	r3, [sp]
   1a54c:	mov	r3, r5
   1a550:	mov	r2, r4
   1a554:	ldr	r1, [pc, #336]	; 1a6ac <__flatcc_gen_sort@@Base+0x3bc>
   1a558:	bl	14094 <fprintf@plt>
   1a55c:	ldr	r3, [pc, #332]	; 1a6b0 <__flatcc_gen_sort@@Base+0x3c0>
   1a560:	mov	r2, r5
   1a564:	mov	r1, r4
   1a568:	ldr	r0, [pc, #324]	; 1a6b4 <__flatcc_gen_sort@@Base+0x3c4>
   1a56c:	bl	14148 <__assert_fail@plt>
   1a570:	add	r3, sp, #40	; 0x28
   1a574:	str	r3, [sp, #28]
   1a578:	str	r6, [sp, #24]
   1a57c:	str	r5, [sp, #20]
   1a580:	add	r3, sp, #260	; 0x104
   1a584:	str	r3, [sp, #16]
   1a588:	str	fp, [sp, #12]
   1a58c:	str	sl, [sp, #8]
   1a590:	str	r9, [sp, #4]
   1a594:	str	r7, [sp]
   1a598:	ldr	r3, [sp, #36]	; 0x24
   1a59c:	mov	r2, r7
   1a5a0:	ldr	r1, [pc, #272]	; 1a6b8 <__flatcc_gen_sort@@Base+0x3c8>
   1a5a4:	ldr	r0, [r8, #204]	; 0xcc
   1a5a8:	bl	14094 <fprintf@plt>
   1a5ac:	b	1a624 <__flatcc_gen_sort@@Base+0x334>
   1a5b0:	add	r3, sp, #40	; 0x28
   1a5b4:	str	r3, [sp, #28]
   1a5b8:	str	r6, [sp, #24]
   1a5bc:	str	r5, [sp, #20]
   1a5c0:	add	r3, sp, #260	; 0x104
   1a5c4:	str	r3, [sp, #16]
   1a5c8:	str	fp, [sp, #12]
   1a5cc:	str	sl, [sp, #8]
   1a5d0:	str	r9, [sp, #4]
   1a5d4:	str	r7, [sp]
   1a5d8:	ldr	r3, [sp, #36]	; 0x24
   1a5dc:	mov	r2, r7
   1a5e0:	ldr	r1, [pc, #212]	; 1a6bc <__flatcc_gen_sort@@Base+0x3cc>
   1a5e4:	ldr	r0, [r8, #204]	; 0xcc
   1a5e8:	bl	14094 <fprintf@plt>
   1a5ec:	b	1a624 <__flatcc_gen_sort@@Base+0x334>
   1a5f0:	str	r6, [sp, #24]
   1a5f4:	str	r5, [sp, #20]
   1a5f8:	add	r3, sp, #260	; 0x104
   1a5fc:	str	r3, [sp, #16]
   1a600:	str	fp, [sp, #12]
   1a604:	str	sl, [sp, #8]
   1a608:	str	r9, [sp, #4]
   1a60c:	str	r7, [sp]
   1a610:	ldr	r3, [sp, #36]	; 0x24
   1a614:	mov	r2, r7
   1a618:	ldr	r1, [pc, #160]	; 1a6c0 <__flatcc_gen_sort@@Base+0x3d0>
   1a61c:	ldr	r0, [r8, #204]	; 0xcc
   1a620:	bl	14094 <fprintf@plt>
   1a624:	ldr	r4, [r4]
   1a628:	cmp	r4, #0
   1a62c:	beq	1a4fc <__flatcc_gen_sort@@Base+0x20c>
   1a630:	ldr	r3, [r4, #4]
   1a634:	ldr	r5, [r3, #4]
   1a638:	ldr	r6, [r3]
   1a63c:	ldrh	r3, [r4, #24]
   1a640:	cmp	r3, #10
   1a644:	beq	1a5f0 <__flatcc_gen_sort@@Base+0x300>
   1a648:	cmp	r3, #14
   1a64c:	beq	1a508 <__flatcc_gen_sort@@Base+0x218>
   1a650:	cmp	r3, #0
   1a654:	beq	1a624 <__flatcc_gen_sort@@Base+0x334>
   1a658:	ldr	r5, [pc, #100]	; 1a6c4 <__flatcc_gen_sort@@Base+0x3d4>
   1a65c:	ldr	r4, [pc, #60]	; 1a6a0 <__flatcc_gen_sort@@Base+0x3b0>
   1a660:	ldr	r3, [pc, #60]	; 1a6a4 <__flatcc_gen_sort@@Base+0x3b4>
   1a664:	ldr	r0, [r3]
   1a668:	ldr	r3, [pc, #88]	; 1a6c8 <__flatcc_gen_sort@@Base+0x3d8>
   1a66c:	str	r3, [sp]
   1a670:	mov	r3, r5
   1a674:	mov	r2, r4
   1a678:	ldr	r1, [pc, #44]	; 1a6ac <__flatcc_gen_sort@@Base+0x3bc>
   1a67c:	bl	14094 <fprintf@plt>
   1a680:	ldr	r3, [pc, #40]	; 1a6b0 <__flatcc_gen_sort@@Base+0x3c0>
   1a684:	mov	r2, r5
   1a688:	mov	r1, r4
   1a68c:	ldr	r0, [pc, #32]	; 1a6b4 <__flatcc_gen_sort@@Base+0x3c4>
   1a690:	bl	14148 <__assert_fail@plt>
   1a694:	andeq	r4, r4, r8, ror #30
   1a698:	andeq	r4, r4, r8, asr pc
   1a69c:	andeq	r0, r0, lr, asr #10
   1a6a0:	andeq	r4, r4, r8, ror #31
   1a6a4:	andeq	r7, r6, r8, lsr #1
   1a6a8:	andeq	r5, r4, ip, lsr r0
   1a6ac:	andeq	ip, r3, r8, lsr #27
   1a6b0:	andeq	r4, r4, r4, ror lr
   1a6b4:	andeq	r5, r4, r0, ror #3
   1a6b8:	andeq	r4, r4, r0, ror pc
   1a6bc:	andeq	r4, r4, ip, lsr #31
   1a6c0:	andeq	r5, r4, r4, ror r0
   1a6c4:	andeq	r0, r0, r8, asr r5
   1a6c8:	andeq	r5, r4, ip, lsr #1
   1a6cc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a6d0:	sub	sp, sp, #12
   1a6d4:	mov	r7, r0
   1a6d8:	mov	r5, r2
   1a6dc:	mov	r8, r3
   1a6e0:	mov	r0, r1
   1a6e4:	bl	1a41c <__flatcc_gen_sort@@Base+0x12c>
   1a6e8:	subs	r9, r0, #0
   1a6ec:	ble	1a7c4 <__flatcc_gen_sort@@Base+0x4d4>
   1a6f0:	ldr	r3, [pc, #212]	; 1a7cc <__flatcc_gen_sort@@Base+0x4dc>
   1a6f4:	ldr	r2, [pc, #212]	; 1a7d0 <__flatcc_gen_sort@@Base+0x4e0>
   1a6f8:	ldr	r1, [sp, #48]	; 0x30
   1a6fc:	cmp	r1, #0
   1a700:	moveq	r2, r3
   1a704:	str	r2, [sp, #4]
   1a708:	mov	r4, #0
   1a70c:	ldr	fp, [pc, #192]	; 1a7d4 <__flatcc_gen_sort@@Base+0x4e4>
   1a710:	b	1a770 <__flatcc_gen_sort@@Base+0x480>
   1a714:	ldr	r3, [r7, #204]	; 0xcc
   1a718:	mov	r2, #2
   1a71c:	mov	r1, #1
   1a720:	ldr	r0, [pc, #176]	; 1a7d8 <__flatcc_gen_sort@@Base+0x4e8>
   1a724:	bl	1401c <fwrite@plt>
   1a728:	b	1a754 <__flatcc_gen_sort@@Base+0x464>
   1a72c:	tst	r4, #3
   1a730:	bne	1a740 <__flatcc_gen_sort@@Base+0x450>
   1a734:	sub	r3, r8, r4
   1a738:	cmp	r3, #2
   1a73c:	bgt	1a7a4 <__flatcc_gen_sort@@Base+0x4b4>
   1a740:	ldr	r3, [r7, #204]	; 0xcc
   1a744:	mov	r2, #2
   1a748:	mov	r1, #1
   1a74c:	ldr	r0, [pc, #132]	; 1a7d8 <__flatcc_gen_sort@@Base+0x4e8>
   1a750:	bl	1401c <fwrite@plt>
   1a754:	mov	r2, r6
   1a758:	mov	r1, fp
   1a75c:	ldr	r0, [r7, #204]	; 0xcc
   1a760:	bl	14094 <fprintf@plt>
   1a764:	add	r4, r4, #1
   1a768:	cmp	r9, r4
   1a76c:	beq	1a7b8 <__flatcc_gen_sort@@Base+0x4c8>
   1a770:	mov	sl, r5
   1a774:	add	r6, r4, r5
   1a778:	cmp	r8, #0
   1a77c:	beq	1a754 <__flatcc_gen_sort@@Base+0x464>
   1a780:	cmp	r4, #0
   1a784:	bne	1a72c <__flatcc_gen_sort@@Base+0x43c>
   1a788:	cmp	r8, #4
   1a78c:	ble	1a714 <__flatcc_gen_sort@@Base+0x424>
   1a790:	ldr	r2, [sp, #4]
   1a794:	ldr	r1, [pc, #64]	; 1a7dc <__flatcc_gen_sort@@Base+0x4ec>
   1a798:	ldr	r0, [r7, #204]	; 0xcc
   1a79c:	bl	14094 <fprintf@plt>
   1a7a0:	b	1a754 <__flatcc_gen_sort@@Base+0x464>
   1a7a4:	ldr	r2, [sp, #4]
   1a7a8:	ldr	r1, [pc, #44]	; 1a7dc <__flatcc_gen_sort@@Base+0x4ec>
   1a7ac:	ldr	r0, [r7, #204]	; 0xcc
   1a7b0:	bl	14094 <fprintf@plt>
   1a7b4:	b	1a754 <__flatcc_gen_sort@@Base+0x464>
   1a7b8:	add	r0, r4, sl
   1a7bc:	add	sp, sp, #12
   1a7c0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a7c4:	mov	r0, r5
   1a7c8:	b	1a7bc <__flatcc_gen_sort@@Base+0x4cc>
   1a7cc:	andeq	lr, r3, r4, lsl #4
   1a7d0:	andeq	pc, r3, ip, asr #18
   1a7d4:	andeq	r5, r4, r8, ror #1
   1a7d8:	andeq	r5, r4, r4, ror #1
   1a7dc:	ldrdeq	r5, [r4], -ip
   1a7e0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a7e4:	sub	sp, sp, #244	; 0xf4
   1a7e8:	mov	r6, r0
   1a7ec:	mov	r4, r1
   1a7f0:	mov	r5, r2
   1a7f4:	mov	r8, r3
   1a7f8:	str	r0, [sp, #12]
   1a7fc:	mov	r2, #220	; 0xdc
   1a800:	mov	r1, #0
   1a804:	add	r0, sp, #20
   1a808:	bl	140ac <memset@plt>
   1a80c:	ldr	r4, [r4, #20]
   1a810:	cmp	r4, #0
   1a814:	beq	1ab24 <__flatcc_gen_sort@@Base+0x834>
   1a818:	ldr	r3, [pc, #784]	; 1ab30 <__flatcc_gen_sort@@Base+0x840>
   1a81c:	ldr	r7, [pc, #784]	; 1ab34 <__flatcc_gen_sort@@Base+0x844>
   1a820:	ldr	r2, [sp, #280]	; 0x118
   1a824:	cmp	r2, #0
   1a828:	moveq	r7, r3
   1a82c:	ldr	r9, [pc, #772]	; 1ab38 <__flatcc_gen_sort@@Base+0x848>
   1a830:	ldr	sl, [pc, #772]	; 1ab3c <__flatcc_gen_sort@@Base+0x84c>
   1a834:	b	1a9e0 <__flatcc_gen_sort@@Base+0x6f0>
   1a838:	ldr	r3, [sp, #280]	; 0x118
   1a83c:	str	r3, [sp]
   1a840:	mov	r3, r8
   1a844:	mov	r2, r5
   1a848:	mov	r0, r6
   1a84c:	bl	1a7e0 <__flatcc_gen_sort@@Base+0x4f0>
   1a850:	mov	r5, r0
   1a854:	b	1a9d4 <__flatcc_gen_sort@@Base+0x6e4>
   1a858:	ldr	r3, [r6, #204]	; 0xcc
   1a85c:	mov	r2, #2
   1a860:	mov	r1, #1
   1a864:	ldr	r0, [pc, #724]	; 1ab40 <__flatcc_gen_sort@@Base+0x850>
   1a868:	bl	1401c <fwrite@plt>
   1a86c:	b	1a898 <__flatcc_gen_sort@@Base+0x5a8>
   1a870:	tst	r5, #3
   1a874:	bne	1a884 <__flatcc_gen_sort@@Base+0x594>
   1a878:	sub	r3, r8, r5
   1a87c:	cmp	r3, #2
   1a880:	bgt	1a8cc <__flatcc_gen_sort@@Base+0x5dc>
   1a884:	ldr	r3, [r6, #204]	; 0xcc
   1a888:	mov	r2, #2
   1a88c:	mov	r1, #1
   1a890:	ldr	r0, [pc, #680]	; 1ab40 <__flatcc_gen_sort@@Base+0x850>
   1a894:	bl	1401c <fwrite@plt>
   1a898:	ldr	r3, [r4, #16]
   1a89c:	add	r2, sp, #20
   1a8a0:	mov	r1, r3
   1a8a4:	ldr	r0, [r3, #12]
   1a8a8:	bl	15edc <__flatcc_fb_scoped_symbol_name@@Base>
   1a8ac:	add	fp, r5, #1
   1a8b0:	mov	r3, r5
   1a8b4:	add	r2, sp, #20
   1a8b8:	ldr	r1, [pc, #644]	; 1ab44 <__flatcc_gen_sort@@Base+0x854>
   1a8bc:	ldr	r0, [r6, #204]	; 0xcc
   1a8c0:	bl	14094 <fprintf@plt>
   1a8c4:	mov	r5, fp
   1a8c8:	b	1a9d4 <__flatcc_gen_sort@@Base+0x6e4>
   1a8cc:	mov	r2, r7
   1a8d0:	ldr	r1, [pc, #624]	; 1ab48 <__flatcc_gen_sort@@Base+0x858>
   1a8d4:	ldr	r0, [r6, #204]	; 0xcc
   1a8d8:	bl	14094 <fprintf@plt>
   1a8dc:	b	1a898 <__flatcc_gen_sort@@Base+0x5a8>
   1a8e0:	cmp	r8, #0
   1a8e4:	beq	1a94c <__flatcc_gen_sort@@Base+0x65c>
   1a8e8:	cmp	r5, #0
   1a8ec:	bne	1a924 <__flatcc_gen_sort@@Base+0x634>
   1a8f0:	cmp	r8, #4
   1a8f4:	ble	1a90c <__flatcc_gen_sort@@Base+0x61c>
   1a8f8:	mov	r2, r7
   1a8fc:	ldr	r1, [pc, #580]	; 1ab48 <__flatcc_gen_sort@@Base+0x858>
   1a900:	ldr	r0, [r6, #204]	; 0xcc
   1a904:	bl	14094 <fprintf@plt>
   1a908:	b	1a94c <__flatcc_gen_sort@@Base+0x65c>
   1a90c:	ldr	r3, [r6, #204]	; 0xcc
   1a910:	mov	r2, #2
   1a914:	mov	r1, #1
   1a918:	ldr	r0, [pc, #544]	; 1ab40 <__flatcc_gen_sort@@Base+0x850>
   1a91c:	bl	1401c <fwrite@plt>
   1a920:	b	1a94c <__flatcc_gen_sort@@Base+0x65c>
   1a924:	tst	r5, #3
   1a928:	bne	1a938 <__flatcc_gen_sort@@Base+0x648>
   1a92c:	sub	r3, r8, r5
   1a930:	cmp	r3, #2
   1a934:	bgt	1a994 <__flatcc_gen_sort@@Base+0x6a4>
   1a938:	ldr	r3, [r6, #204]	; 0xcc
   1a93c:	mov	r2, #2
   1a940:	mov	r1, #1
   1a944:	ldr	r0, [pc, #500]	; 1ab40 <__flatcc_gen_sort@@Base+0x850>
   1a948:	bl	1401c <fwrite@plt>
   1a94c:	ldr	r3, [r4, #16]
   1a950:	cmp	r3, #5
   1a954:	beq	1aa3c <__flatcc_gen_sort@@Base+0x74c>
   1a958:	sub	r3, r3, #1
   1a95c:	cmp	r3, #10
   1a960:	ldrls	pc, [pc, r3, lsl #2]
   1a964:	b	1aa98 <__flatcc_gen_sort@@Base+0x7a8>
   1a968:	ldrdeq	sl, [r1], -r0
   1a96c:	andeq	sl, r1, r8, lsr #19
   1a970:	ldrdeq	sl, [r1], -ip
   1a974:			; <UNDEFINED> instruction: 0x0001a9b4
   1a978:	andeq	sl, r1, r8, asr #20
   1a97c:	andeq	sl, r1, r0, asr sl
   1a980:	andeq	sl, r1, ip, asr sl
   1a984:	andeq	sl, r1, r8, ror #20
   1a988:	andeq	sl, r1, r4, ror sl
   1a98c:	andeq	sl, r1, ip, lsl #21
   1a990:	andeq	sl, r1, r0, lsl #21
   1a994:	mov	r2, r7
   1a998:	ldr	r1, [pc, #424]	; 1ab48 <__flatcc_gen_sort@@Base+0x858>
   1a99c:	ldr	r0, [r6, #204]	; 0xcc
   1a9a0:	bl	14094 <fprintf@plt>
   1a9a4:	b	1a94c <__flatcc_gen_sort@@Base+0x65c>
   1a9a8:	mov	r2, sl
   1a9ac:	ldr	r3, [pc, #408]	; 1ab4c <__flatcc_gen_sort@@Base+0x85c>
   1a9b0:	b	1a9bc <__flatcc_gen_sort@@Base+0x6cc>
   1a9b4:	mov	r2, sl
   1a9b8:	ldr	r3, [pc, #400]	; 1ab50 <__flatcc_gen_sort@@Base+0x860>
   1a9bc:	add	fp, r5, #1
   1a9c0:	str	r5, [sp]
   1a9c4:	mov	r1, r9
   1a9c8:	ldr	r0, [r6, #204]	; 0xcc
   1a9cc:	bl	14094 <fprintf@plt>
   1a9d0:	mov	r5, fp
   1a9d4:	ldr	r4, [r4]
   1a9d8:	cmp	r4, #0
   1a9dc:	beq	1ab24 <__flatcc_gen_sort@@Base+0x834>
   1a9e0:	ldrh	r3, [r4, #72]	; 0x48
   1a9e4:	tst	r3, #4
   1a9e8:	bne	1a9d4 <__flatcc_gen_sort@@Base+0x6e4>
   1a9ec:	ldrh	r3, [r4, #24]
   1a9f0:	cmp	r3, #8
   1a9f4:	beq	1a8e0 <__flatcc_gen_sort@@Base+0x5f0>
   1a9f8:	cmp	r3, #14
   1a9fc:	bne	1aae8 <__flatcc_gen_sort@@Base+0x7f8>
   1aa00:	ldr	r1, [r4, #16]
   1aa04:	ldrh	r3, [r1, #8]
   1aa08:	cmp	r3, #1
   1aa0c:	beq	1a838 <__flatcc_gen_sort@@Base+0x548>
   1aa10:	cmp	r8, #0
   1aa14:	beq	1a898 <__flatcc_gen_sort@@Base+0x5a8>
   1aa18:	cmp	r5, #0
   1aa1c:	bne	1a870 <__flatcc_gen_sort@@Base+0x580>
   1aa20:	cmp	r8, #4
   1aa24:	ble	1a858 <__flatcc_gen_sort@@Base+0x568>
   1aa28:	mov	r2, r7
   1aa2c:	ldr	r1, [pc, #276]	; 1ab48 <__flatcc_gen_sort@@Base+0x858>
   1aa30:	ldr	r0, [r6, #204]	; 0xcc
   1aa34:	bl	14094 <fprintf@plt>
   1aa38:	b	1a898 <__flatcc_gen_sort@@Base+0x5a8>
   1aa3c:	ldr	r2, [sp, #12]
   1aa40:	ldr	r3, [pc, #268]	; 1ab54 <__flatcc_gen_sort@@Base+0x864>
   1aa44:	b	1a9bc <__flatcc_gen_sort@@Base+0x6cc>
   1aa48:	mov	r2, sl
   1aa4c:	b	1aa40 <__flatcc_gen_sort@@Base+0x750>
   1aa50:	mov	r2, sl
   1aa54:	ldr	r3, [pc, #252]	; 1ab58 <__flatcc_gen_sort@@Base+0x868>
   1aa58:	b	1a9bc <__flatcc_gen_sort@@Base+0x6cc>
   1aa5c:	mov	r2, sl
   1aa60:	ldr	r3, [pc, #244]	; 1ab5c <__flatcc_gen_sort@@Base+0x86c>
   1aa64:	b	1a9bc <__flatcc_gen_sort@@Base+0x6cc>
   1aa68:	mov	r2, sl
   1aa6c:	ldr	r3, [pc, #236]	; 1ab60 <__flatcc_gen_sort@@Base+0x870>
   1aa70:	b	1a9bc <__flatcc_gen_sort@@Base+0x6cc>
   1aa74:	mov	r2, sl
   1aa78:	ldr	r3, [pc, #228]	; 1ab64 <__flatcc_gen_sort@@Base+0x874>
   1aa7c:	b	1a9bc <__flatcc_gen_sort@@Base+0x6cc>
   1aa80:	mov	r2, sl
   1aa84:	ldr	r3, [pc, #220]	; 1ab68 <__flatcc_gen_sort@@Base+0x878>
   1aa88:	b	1a9bc <__flatcc_gen_sort@@Base+0x6cc>
   1aa8c:	mov	r2, sl
   1aa90:	ldr	r3, [pc, #212]	; 1ab6c <__flatcc_gen_sort@@Base+0x87c>
   1aa94:	b	1a9bc <__flatcc_gen_sort@@Base+0x6cc>
   1aa98:	ldr	r4, [pc, #208]	; 1ab70 <__flatcc_gen_sort@@Base+0x880>
   1aa9c:	ldr	r3, [pc, #208]	; 1ab74 <__flatcc_gen_sort@@Base+0x884>
   1aaa0:	ldr	r0, [r3]
   1aaa4:	ldr	r3, [pc, #204]	; 1ab78 <__flatcc_gen_sort@@Base+0x888>
   1aaa8:	str	r3, [sp]
   1aaac:	mov	r3, #141	; 0x8d
   1aab0:	mov	r2, r4
   1aab4:	ldr	r1, [pc, #192]	; 1ab7c <__flatcc_gen_sort@@Base+0x88c>
   1aab8:	bl	14094 <fprintf@plt>
   1aabc:	ldr	r3, [pc, #188]	; 1ab80 <__flatcc_gen_sort@@Base+0x890>
   1aac0:	mov	r2, #141	; 0x8d
   1aac4:	mov	r1, r4
   1aac8:	ldr	r0, [pc, #180]	; 1ab84 <__flatcc_gen_sort@@Base+0x894>
   1aacc:	bl	14148 <__assert_fail@plt>
   1aad0:	mov	r2, sl
   1aad4:	ldr	r3, [pc, #172]	; 1ab88 <__flatcc_gen_sort@@Base+0x898>
   1aad8:	b	1a9bc <__flatcc_gen_sort@@Base+0x6cc>
   1aadc:	mov	r2, sl
   1aae0:	ldr	r3, [pc, #164]	; 1ab8c <__flatcc_gen_sort@@Base+0x89c>
   1aae4:	b	1a9bc <__flatcc_gen_sort@@Base+0x6cc>
   1aae8:	ldr	r5, [pc, #160]	; 1ab90 <__flatcc_gen_sort@@Base+0x8a0>
   1aaec:	ldr	r4, [pc, #160]	; 1ab94 <__flatcc_gen_sort@@Base+0x8a4>
   1aaf0:	ldr	r3, [pc, #124]	; 1ab74 <__flatcc_gen_sort@@Base+0x884>
   1aaf4:	ldr	r0, [r3]
   1aaf8:	ldr	r3, [pc, #152]	; 1ab98 <__flatcc_gen_sort@@Base+0x8a8>
   1aafc:	str	r3, [sp]
   1ab00:	mov	r3, r5
   1ab04:	mov	r2, r4
   1ab08:	ldr	r1, [pc, #108]	; 1ab7c <__flatcc_gen_sort@@Base+0x88c>
   1ab0c:	bl	14094 <fprintf@plt>
   1ab10:	ldr	r3, [pc, #132]	; 1ab9c <__flatcc_gen_sort@@Base+0x8ac>
   1ab14:	mov	r2, r5
   1ab18:	mov	r1, r4
   1ab1c:	ldr	r0, [pc, #96]	; 1ab84 <__flatcc_gen_sort@@Base+0x894>
   1ab20:	bl	14148 <__assert_fail@plt>
   1ab24:	mov	r0, r5
   1ab28:	add	sp, sp, #244	; 0xf4
   1ab2c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1ab30:	andeq	lr, r3, r4, lsl #4
   1ab34:	andeq	pc, r3, ip, asr #18
   1ab38:	strdeq	r5, [r4], -ip
   1ab3c:	muleq	r4, r0, r4
   1ab40:	andeq	r5, r4, r4, ror #1
   1ab44:	andeq	r5, r4, ip, ror #1
   1ab48:	ldrdeq	r5, [r4], -ip
   1ab4c:	andeq	ip, r3, r4, asr #24
   1ab50:	andeq	ip, r3, ip, asr ip
   1ab54:	andeq	ip, r3, r4, ror #24
   1ab58:	andeq	ip, r3, ip, ror #24
   1ab5c:	andeq	ip, r3, r4, ror ip
   1ab60:	andeq	ip, r3, ip, ror ip
   1ab64:	andeq	ip, r3, r4, lsl #25
   1ab68:	andeq	ip, r3, ip, lsl #25
   1ab6c:	muleq	r3, r4, ip
   1ab70:	andeq	ip, r3, ip, asr sp
   1ab74:	andeq	r7, r6, r8, lsr #1
   1ab78:			; <UNDEFINED> instruction: 0x0003cdb4
   1ab7c:	andeq	ip, r3, r8, lsr #27
   1ab80:	andeq	r4, r4, r8, lsl #29
   1ab84:	andeq	r5, r4, r0, ror #3
   1ab88:	andeq	ip, r3, r8, lsr ip
   1ab8c:	andeq	ip, r3, r0, asr ip
   1ab90:	andeq	r0, r0, r2, asr r3
   1ab94:	andeq	r4, r4, r8, ror #31
   1ab98:	andeq	r5, r4, r8, lsl #2
   1ab9c:	muleq	r4, ip, lr
   1aba0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1aba4:	sub	sp, sp, #252	; 0xfc
   1aba8:	mov	r6, r0
   1abac:	mov	r4, r1
   1abb0:	mov	r5, r2
   1abb4:	str	r3, [sp, #20]
   1abb8:	ldr	r9, [sp, #288]	; 0x120
   1abbc:	str	r0, [sp, #16]
   1abc0:	mov	r2, #220	; 0xdc
   1abc4:	mov	r1, #0
   1abc8:	add	r0, sp, #28
   1abcc:	bl	140ac <memset@plt>
   1abd0:	cmp	r9, #1
   1abd4:	beq	1abfc <__flatcc_gen_sort@@Base+0x90c>
   1abd8:	ldr	r3, [pc, #1272]	; 1b0d8 <__flatcc_gen_sort@@Base+0xde8>
   1abdc:	ldr	sl, [pc, #1272]	; 1b0dc <__flatcc_gen_sort@@Base+0xdec>
   1abe0:	cmp	r9, #2
   1abe4:	movne	sl, r3
   1abe8:	ldr	r4, [r4, #20]
   1abec:	cmp	r4, #0
   1abf0:	beq	1b0ac <__flatcc_gen_sort@@Base+0xdbc>
   1abf4:	mov	fp, #0
   1abf8:	b	1af1c <__flatcc_gen_sort@@Base+0xc2c>
   1abfc:	ldr	sl, [pc, #1244]	; 1b0e0 <__flatcc_gen_sort@@Base+0xdf0>
   1ac00:	b	1abe8 <__flatcc_gen_sort@@Base+0x8f8>
   1ac04:	ldrh	r3, [r4, #72]	; 0x48
   1ac08:	tst	r3, #4
   1ac0c:	bne	1ac48 <__flatcc_gen_sort@@Base+0x958>
   1ac10:	ldr	r3, [sp, #292]	; 0x124
   1ac14:	cmp	r3, #0
   1ac18:	beq	1ac70 <__flatcc_gen_sort@@Base+0x980>
   1ac1c:	str	r8, [sp, #12]
   1ac20:	str	r7, [sp, #8]
   1ac24:	str	r8, [sp, #4]
   1ac28:	str	r7, [sp]
   1ac2c:	mov	r3, sl
   1ac30:	add	r2, sp, #28
   1ac34:	ldr	r1, [pc, #1192]	; 1b0e4 <__flatcc_gen_sort@@Base+0xdf4>
   1ac38:	ldr	r0, [r6, #204]	; 0xcc
   1ac3c:	bl	14094 <fprintf@plt>
   1ac40:	add	r5, r5, #1
   1ac44:	b	1af10 <__flatcc_gen_sort@@Base+0xc20>
   1ac48:	mov	r3, fp
   1ac4c:	mov	r2, fp
   1ac50:	ldr	r1, [pc, #1168]	; 1b0e8 <__flatcc_gen_sort@@Base+0xdf8>
   1ac54:	ldr	r0, [r6, #204]	; 0xcc
   1ac58:	bl	14094 <fprintf@plt>
   1ac5c:	add	fp, fp, #1
   1ac60:	ldr	r0, [r4, #16]
   1ac64:	bl	1a41c <__flatcc_gen_sort@@Base+0x12c>
   1ac68:	add	r5, r5, r0
   1ac6c:	b	1af10 <__flatcc_gen_sort@@Base+0xc20>
   1ac70:	str	r8, [sp, #4]
   1ac74:	str	r7, [sp]
   1ac78:	mov	r3, sl
   1ac7c:	add	r2, sp, #28
   1ac80:	ldr	r1, [pc, #1124]	; 1b0ec <__flatcc_gen_sort@@Base+0xdfc>
   1ac84:	ldr	r0, [r6, #204]	; 0xcc
   1ac88:	bl	14094 <fprintf@plt>
   1ac8c:	ldr	r1, [r4, #16]
   1ac90:	mov	r3, #0
   1ac94:	str	r3, [sp]
   1ac98:	ldr	r3, [sp, #20]
   1ac9c:	mov	r2, r5
   1aca0:	mov	r0, r6
   1aca4:	bl	1a6cc <__flatcc_gen_sort@@Base+0x3dc>
   1aca8:	mov	r5, r0
   1acac:	ldr	r1, [r6, #204]	; 0xcc
   1acb0:	mov	r0, #41	; 0x29
   1acb4:	bl	140f4 <fputc@plt>
   1acb8:	b	1af10 <__flatcc_gen_sort@@Base+0xc20>
   1acbc:	add	r7, fp, #1
   1acc0:	mov	r2, fp
   1acc4:	ldr	r1, [pc, #1060]	; 1b0f0 <__flatcc_gen_sort@@Base+0xe00>
   1acc8:	ldr	r0, [r6, #204]	; 0xcc
   1accc:	bl	14094 <fprintf@plt>
   1acd0:	add	r5, r5, #1
   1acd4:	mov	fp, r7
   1acd8:	b	1af10 <__flatcc_gen_sort@@Base+0xc20>
   1acdc:	ldr	r3, [sp, #292]	; 0x124
   1ace0:	cmp	r3, #0
   1ace4:	beq	1ad10 <__flatcc_gen_sort@@Base+0xa20>
   1ace8:	str	r8, [sp, #8]
   1acec:	str	r7, [sp, #4]
   1acf0:	str	r8, [sp]
   1acf4:	mov	r3, r7
   1acf8:	add	r2, sp, #28
   1acfc:	ldr	r1, [pc, #1008]	; 1b0f4 <__flatcc_gen_sort@@Base+0xe04>
   1ad00:	ldr	r0, [r6, #204]	; 0xcc
   1ad04:	bl	14094 <fprintf@plt>
   1ad08:	add	r5, r5, #1
   1ad0c:	b	1af10 <__flatcc_gen_sort@@Base+0xc20>
   1ad10:	str	r5, [sp, #4]
   1ad14:	str	r8, [sp]
   1ad18:	mov	r3, r7
   1ad1c:	add	r2, sp, #28
   1ad20:	ldr	r1, [pc, #976]	; 1b0f8 <__flatcc_gen_sort@@Base+0xe08>
   1ad24:	ldr	r0, [r6, #204]	; 0xcc
   1ad28:	bl	14094 <fprintf@plt>
   1ad2c:	b	1ad08 <__flatcc_gen_sort@@Base+0xa18>
   1ad30:	str	r5, [sp, #4]
   1ad34:	str	r8, [sp]
   1ad38:	mov	r3, r7
   1ad3c:	add	r2, sp, #28
   1ad40:	ldr	r1, [pc, #948]	; 1b0fc <__flatcc_gen_sort@@Base+0xe0c>
   1ad44:	ldr	r0, [r6, #204]	; 0xcc
   1ad48:	bl	14094 <fprintf@plt>
   1ad4c:	b	1ad08 <__flatcc_gen_sort@@Base+0xa18>
   1ad50:	ldr	r3, [sp, #292]	; 0x124
   1ad54:	cmp	r3, #0
   1ad58:	beq	1ad7c <__flatcc_gen_sort@@Base+0xa8c>
   1ad5c:	str	r8, [sp, #4]
   1ad60:	str	r7, [sp]
   1ad64:	mov	r3, r8
   1ad68:	mov	r2, r7
   1ad6c:	ldr	r1, [pc, #908]	; 1b100 <__flatcc_gen_sort@@Base+0xe10>
   1ad70:	ldr	r0, [r6, #204]	; 0xcc
   1ad74:	bl	14094 <fprintf@plt>
   1ad78:	b	1ad08 <__flatcc_gen_sort@@Base+0xa18>
   1ad7c:	str	r5, [sp]
   1ad80:	mov	r3, r8
   1ad84:	mov	r2, r7
   1ad88:	ldr	r1, [pc, #884]	; 1b104 <__flatcc_gen_sort@@Base+0xe14>
   1ad8c:	ldr	r0, [r6, #204]	; 0xcc
   1ad90:	bl	14094 <fprintf@plt>
   1ad94:	b	1ad08 <__flatcc_gen_sort@@Base+0xa18>
   1ad98:	ldr	r3, [r4, #16]
   1ad9c:	sub	r3, r3, #1
   1ada0:	cmp	r3, #10
   1ada4:	ldrls	pc, [pc, r3, lsl #2]
   1ada8:	b	1ae20 <__flatcc_gen_sort@@Base+0xb30>
   1adac:	andeq	sl, r1, r8, asr lr
   1adb0:	ldrdeq	sl, [r1], -r8
   1adb4:	andeq	sl, r1, r0, ror #28
   1adb8:	andeq	sl, r1, r0, ror #27
   1adbc:	andeq	sl, r1, r8, ror #27
   1adc0:	strdeq	sl, [r1], -r0
   1adc4:	strdeq	sl, [r1], -r8
   1adc8:	andeq	sl, r1, r0, lsl #28
   1adcc:	andeq	sl, r1, r8, lsl #28
   1add0:	andeq	sl, r1, r8, lsl lr
   1add4:	andeq	sl, r1, r0, lsl lr
   1add8:	ldr	r3, [pc, #808]	; 1b108 <__flatcc_gen_sort@@Base+0xe18>
   1addc:	b	1ae64 <__flatcc_gen_sort@@Base+0xb74>
   1ade0:	ldr	r3, [pc, #804]	; 1b10c <__flatcc_gen_sort@@Base+0xe1c>
   1ade4:	b	1ae64 <__flatcc_gen_sort@@Base+0xb74>
   1ade8:	ldr	r3, [pc, #800]	; 1b110 <__flatcc_gen_sort@@Base+0xe20>
   1adec:	b	1ae64 <__flatcc_gen_sort@@Base+0xb74>
   1adf0:	ldr	r3, [pc, #796]	; 1b114 <__flatcc_gen_sort@@Base+0xe24>
   1adf4:	b	1ae64 <__flatcc_gen_sort@@Base+0xb74>
   1adf8:	ldr	r3, [pc, #792]	; 1b118 <__flatcc_gen_sort@@Base+0xe28>
   1adfc:	b	1ae64 <__flatcc_gen_sort@@Base+0xb74>
   1ae00:	ldr	r3, [pc, #788]	; 1b11c <__flatcc_gen_sort@@Base+0xe2c>
   1ae04:	b	1ae64 <__flatcc_gen_sort@@Base+0xb74>
   1ae08:	ldr	r3, [pc, #784]	; 1b120 <__flatcc_gen_sort@@Base+0xe30>
   1ae0c:	b	1ae64 <__flatcc_gen_sort@@Base+0xb74>
   1ae10:	ldr	r3, [pc, #780]	; 1b124 <__flatcc_gen_sort@@Base+0xe34>
   1ae14:	b	1ae64 <__flatcc_gen_sort@@Base+0xb74>
   1ae18:	ldr	r3, [pc, #776]	; 1b128 <__flatcc_gen_sort@@Base+0xe38>
   1ae1c:	b	1ae64 <__flatcc_gen_sort@@Base+0xb74>
   1ae20:	ldr	r4, [pc, #772]	; 1b12c <__flatcc_gen_sort@@Base+0xe3c>
   1ae24:	ldr	r3, [pc, #772]	; 1b130 <__flatcc_gen_sort@@Base+0xe40>
   1ae28:	ldr	r0, [r3]
   1ae2c:	ldr	r3, [pc, #768]	; 1b134 <__flatcc_gen_sort@@Base+0xe44>
   1ae30:	str	r3, [sp]
   1ae34:	mov	r3, #96	; 0x60
   1ae38:	mov	r2, r4
   1ae3c:	ldr	r1, [pc, #756]	; 1b138 <__flatcc_gen_sort@@Base+0xe48>
   1ae40:	bl	14094 <fprintf@plt>
   1ae44:	ldr	r3, [pc, #752]	; 1b13c <__flatcc_gen_sort@@Base+0xe4c>
   1ae48:	mov	r2, #96	; 0x60
   1ae4c:	mov	r1, r4
   1ae50:	ldr	r0, [pc, #744]	; 1b140 <__flatcc_gen_sort@@Base+0xe50>
   1ae54:	bl	14148 <__assert_fail@plt>
   1ae58:	ldr	r3, [pc, #740]	; 1b144 <__flatcc_gen_sort@@Base+0xe54>
   1ae5c:	b	1ae64 <__flatcc_gen_sort@@Base+0xb74>
   1ae60:	ldr	r3, [pc, #736]	; 1b148 <__flatcc_gen_sort@@Base+0xe58>
   1ae64:	ldrh	r2, [r4, #72]	; 0x48
   1ae68:	tst	r2, #4
   1ae6c:	bne	1aec0 <__flatcc_gen_sort@@Base+0xbd0>
   1ae70:	ldrd	r0, [r4, #88]	; 0x58
   1ae74:	cmp	r1, #0
   1ae78:	cmpeq	r0, #1
   1ae7c:	beq	1b028 <__flatcc_gen_sort@@Base+0xd38>
   1ae80:	cmp	r9, #1
   1ae84:	beq	1aee0 <__flatcc_gen_sort@@Base+0xbf0>
   1ae88:	cmp	r9, #2
   1ae8c:	bne	1b028 <__flatcc_gen_sort@@Base+0xd38>
   1ae90:	ldr	r2, [sp, #292]	; 0x124
   1ae94:	cmp	r2, #0
   1ae98:	beq	1b008 <__flatcc_gen_sort@@Base+0xd18>
   1ae9c:	str	r8, [sp, #12]
   1aea0:	str	r7, [sp, #8]
   1aea4:	str	r8, [sp, #4]
   1aea8:	str	r7, [sp]
   1aeac:	ldr	r2, [sp, #16]
   1aeb0:	ldr	r1, [pc, #660]	; 1b14c <__flatcc_gen_sort@@Base+0xe5c>
   1aeb4:	ldr	r0, [r6, #204]	; 0xcc
   1aeb8:	bl	14094 <fprintf@plt>
   1aebc:	b	1af0c <__flatcc_gen_sort@@Base+0xc1c>
   1aec0:	add	r7, fp, #1
   1aec4:	mov	r2, fp
   1aec8:	ldr	r1, [pc, #544]	; 1b0f0 <__flatcc_gen_sort@@Base+0xe00>
   1aecc:	ldr	r0, [r6, #204]	; 0xcc
   1aed0:	bl	14094 <fprintf@plt>
   1aed4:	add	r5, r5, #1
   1aed8:	mov	fp, r7
   1aedc:	b	1af10 <__flatcc_gen_sort@@Base+0xc20>
   1aee0:	ldr	r2, [sp, #292]	; 0x124
   1aee4:	cmp	r2, #0
   1aee8:	beq	1afe8 <__flatcc_gen_sort@@Base+0xcf8>
   1aeec:	str	r8, [sp, #12]
   1aef0:	str	r7, [sp, #8]
   1aef4:	str	r8, [sp, #4]
   1aef8:	str	r7, [sp]
   1aefc:	ldr	r2, [sp, #16]
   1af00:	ldr	r1, [pc, #584]	; 1b150 <__flatcc_gen_sort@@Base+0xe60>
   1af04:	ldr	r0, [r6, #204]	; 0xcc
   1af08:	bl	14094 <fprintf@plt>
   1af0c:	add	r5, r5, #1
   1af10:	ldr	r4, [r4]
   1af14:	cmp	r4, #0
   1af18:	beq	1b0ac <__flatcc_gen_sort@@Base+0xdbc>
   1af1c:	ldr	r3, [r4, #4]
   1af20:	ldr	r7, [r3, #4]
   1af24:	ldr	r8, [r3]
   1af28:	cmp	r5, #0
   1af2c:	ble	1af54 <__flatcc_gen_sort@@Base+0xc64>
   1af30:	tst	r5, #3
   1af34:	ldr	r3, [r6, #204]	; 0xcc
   1af38:	moveq	r2, #4
   1af3c:	moveq	r1, #1
   1af40:	ldreq	r0, [pc, #524]	; 1b154 <__flatcc_gen_sort@@Base+0xe64>
   1af44:	movne	r2, #2
   1af48:	movne	r1, #1
   1af4c:	ldrne	r0, [pc, #516]	; 1b158 <__flatcc_gen_sort@@Base+0xe68>
   1af50:	bl	1401c <fwrite@plt>
   1af54:	ldrh	r3, [r4, #24]
   1af58:	cmp	r3, #8
   1af5c:	beq	1ad98 <__flatcc_gen_sort@@Base+0xaa8>
   1af60:	cmp	r3, #14
   1af64:	bne	1b070 <__flatcc_gen_sort@@Base+0xd80>
   1af68:	ldr	r3, [r4, #16]
   1af6c:	add	r2, sp, #28
   1af70:	mov	r1, r3
   1af74:	ldr	r0, [r3, #12]
   1af78:	bl	15edc <__flatcc_fb_scoped_symbol_name@@Base>
   1af7c:	ldr	r3, [r4, #16]
   1af80:	ldrh	r3, [r3, #8]
   1af84:	cmp	r3, #1
   1af88:	beq	1ac04 <__flatcc_gen_sort@@Base+0x914>
   1af8c:	ldrh	r3, [r4, #72]	; 0x48
   1af90:	tst	r3, #4
   1af94:	bne	1acbc <__flatcc_gen_sort@@Base+0x9cc>
   1af98:	ldrd	r2, [r4, #88]	; 0x58
   1af9c:	cmp	r3, #0
   1afa0:	cmpeq	r2, #1
   1afa4:	beq	1ad50 <__flatcc_gen_sort@@Base+0xa60>
   1afa8:	cmp	r9, #1
   1afac:	beq	1acdc <__flatcc_gen_sort@@Base+0x9ec>
   1afb0:	cmp	r9, #2
   1afb4:	bne	1ad50 <__flatcc_gen_sort@@Base+0xa60>
   1afb8:	ldr	r3, [sp, #292]	; 0x124
   1afbc:	cmp	r3, #0
   1afc0:	beq	1ad30 <__flatcc_gen_sort@@Base+0xa40>
   1afc4:	str	r8, [sp, #8]
   1afc8:	str	r7, [sp, #4]
   1afcc:	str	r8, [sp]
   1afd0:	mov	r3, r7
   1afd4:	add	r2, sp, #28
   1afd8:	ldr	r1, [pc, #380]	; 1b15c <__flatcc_gen_sort@@Base+0xe6c>
   1afdc:	ldr	r0, [r6, #204]	; 0xcc
   1afe0:	bl	14094 <fprintf@plt>
   1afe4:	b	1ad08 <__flatcc_gen_sort@@Base+0xa18>
   1afe8:	str	r5, [sp, #8]
   1afec:	str	r8, [sp, #4]
   1aff0:	str	r7, [sp]
   1aff4:	ldr	r2, [sp, #16]
   1aff8:	ldr	r1, [pc, #352]	; 1b160 <__flatcc_gen_sort@@Base+0xe70>
   1affc:	ldr	r0, [r6, #204]	; 0xcc
   1b000:	bl	14094 <fprintf@plt>
   1b004:	b	1af0c <__flatcc_gen_sort@@Base+0xc1c>
   1b008:	str	r5, [sp, #8]
   1b00c:	str	r8, [sp, #4]
   1b010:	str	r7, [sp]
   1b014:	ldr	r2, [sp, #16]
   1b018:	ldr	r1, [pc, #324]	; 1b164 <__flatcc_gen_sort@@Base+0xe74>
   1b01c:	ldr	r0, [r6, #204]	; 0xcc
   1b020:	bl	14094 <fprintf@plt>
   1b024:	b	1af0c <__flatcc_gen_sort@@Base+0xc1c>
   1b028:	ldr	r3, [sp, #292]	; 0x124
   1b02c:	cmp	r3, #0
   1b030:	beq	1b054 <__flatcc_gen_sort@@Base+0xd64>
   1b034:	str	r8, [sp, #4]
   1b038:	str	r7, [sp]
   1b03c:	mov	r3, r8
   1b040:	mov	r2, r7
   1b044:	ldr	r1, [pc, #180]	; 1b100 <__flatcc_gen_sort@@Base+0xe10>
   1b048:	ldr	r0, [r6, #204]	; 0xcc
   1b04c:	bl	14094 <fprintf@plt>
   1b050:	b	1af0c <__flatcc_gen_sort@@Base+0xc1c>
   1b054:	str	r5, [sp]
   1b058:	mov	r3, r8
   1b05c:	mov	r2, r7
   1b060:	ldr	r1, [pc, #156]	; 1b104 <__flatcc_gen_sort@@Base+0xe14>
   1b064:	ldr	r0, [r6, #204]	; 0xcc
   1b068:	bl	14094 <fprintf@plt>
   1b06c:	b	1af0c <__flatcc_gen_sort@@Base+0xc1c>
   1b070:	ldr	r5, [pc, #240]	; 1b168 <__flatcc_gen_sort@@Base+0xe78>
   1b074:	ldr	r4, [pc, #240]	; 1b16c <__flatcc_gen_sort@@Base+0xe7c>
   1b078:	ldr	r3, [pc, #176]	; 1b130 <__flatcc_gen_sort@@Base+0xe40>
   1b07c:	ldr	r0, [r3]
   1b080:	ldr	r3, [pc, #232]	; 1b170 <__flatcc_gen_sort@@Base+0xe80>
   1b084:	str	r3, [sp]
   1b088:	mov	r3, r5
   1b08c:	mov	r2, r4
   1b090:	ldr	r1, [pc, #160]	; 1b138 <__flatcc_gen_sort@@Base+0xe48>
   1b094:	bl	14094 <fprintf@plt>
   1b098:	ldr	r3, [pc, #212]	; 1b174 <__flatcc_gen_sort@@Base+0xe84>
   1b09c:	mov	r2, r5
   1b0a0:	mov	r1, r4
   1b0a4:	ldr	r0, [pc, #148]	; 1b140 <__flatcc_gen_sort@@Base+0xe50>
   1b0a8:	bl	14148 <__assert_fail@plt>
   1b0ac:	ldr	r3, [sp, #20]
   1b0b0:	cmp	r3, #0
   1b0b4:	ble	1b0cc <__flatcc_gen_sort@@Base+0xddc>
   1b0b8:	ldr	r3, [r6, #204]	; 0xcc
   1b0bc:	mov	r2, #4
   1b0c0:	mov	r1, #1
   1b0c4:	ldr	r0, [pc, #136]	; 1b154 <__flatcc_gen_sort@@Base+0xe64>
   1b0c8:	bl	1401c <fwrite@plt>
   1b0cc:	mov	r0, r5
   1b0d0:	add	sp, sp, #252	; 0xfc
   1b0d4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b0d8:	muleq	r4, r0, r4
   1b0dc:	andeq	r5, r4, r8, lsr r1
   1b0e0:	andeq	r5, r4, r0, asr #2
   1b0e4:	muleq	r4, r4, r1
   1b0e8:	andeq	r5, r4, r8, asr r1
   1b0ec:			; <UNDEFINED> instruction: 0x000451b4
   1b0f0:	andeq	r5, r4, ip, asr #3
   1b0f4:	andeq	r5, r4, r4, ror #3
   1b0f8:	andeq	r5, r4, ip, lsl #4
   1b0fc:	andeq	r5, r4, r4, asr r2
   1b100:	andeq	r5, r4, r4, ror r2
   1b104:	andeq	r5, r4, r8, lsl #5
   1b108:	strheq	sp, [r3], -ip
   1b10c:	andeq	sp, r3, ip, asr #1
   1b110:	andeq	r4, r5, r4, asr #24
   1b114:	ldrdeq	sp, [r3], -r4
   1b118:	ldrdeq	sp, [r3], -ip
   1b11c:	andeq	sp, r3, r4, ror #1
   1b120:	andeq	sp, r3, ip, ror #1
   1b124:	andeq	ip, r3, ip, lsl #25
   1b128:	muleq	r3, r4, ip
   1b12c:	andeq	ip, r3, ip, asr sp
   1b130:	andeq	r7, r6, r8, lsr #1
   1b134:			; <UNDEFINED> instruction: 0x0003cdb4
   1b138:	andeq	ip, r3, r8, lsr #27
   1b13c:			; <UNDEFINED> instruction: 0x00044eb4
   1b140:	andeq	r5, r4, r0, ror #3
   1b144:	strheq	sp, [r3], -r4
   1b148:	andeq	sp, r3, r4, asr #1
   1b14c:	andeq	r5, r4, r4, ror #5
   1b150:	muleq	r4, r8, r2
   1b154:	andeq	r5, r4, ip, asr #2
   1b158:	andeq	r5, r4, r4, asr r1
   1b15c:	andeq	r5, r4, r0, lsr r2
   1b160:	andeq	r5, r4, r0, asr #5
   1b164:	andeq	r5, r4, ip, lsl #6
   1b168:	andeq	r0, r0, r1, ror #7
   1b16c:	andeq	r4, r4, r8, ror #31
   1b170:	andeq	r5, r4, r0, lsr r3
   1b174:	andeq	r4, r4, r8, asr #29
   1b178:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b17c:	sub	sp, sp, #612	; 0x264
   1b180:	mov	r8, r0
   1b184:	mov	r4, r1
   1b188:	mov	r7, r0
   1b18c:	mov	r5, #220	; 0xdc
   1b190:	mov	r2, r5
   1b194:	mov	r1, #0
   1b198:	add	r0, sp, #388	; 0x184
   1b19c:	bl	140ac <memset@plt>
   1b1a0:	mov	r2, r5
   1b1a4:	mov	r1, #0
   1b1a8:	add	r0, sp, #168	; 0xa8
   1b1ac:	bl	140ac <memset@plt>
   1b1b0:	add	r2, sp, #388	; 0x184
   1b1b4:	mov	r1, r4
   1b1b8:	ldr	r0, [r4, #12]
   1b1bc:	bl	15edc <__flatcc_fb_scoped_symbol_name@@Base>
   1b1c0:	ldr	r4, [r4, #20]
   1b1c4:	cmp	r4, #0
   1b1c8:	beq	1c31c <__flatcc_gen_sort@@Base+0x202c>
   1b1cc:	ldr	sl, [pc, #3820]	; 1c0c0 <__flatcc_gen_sort@@Base+0x1dd0>
   1b1d0:	ldr	fp, [pc, #3820]	; 1c0c4 <__flatcc_gen_sort@@Base+0x1dd4>
   1b1d4:	b	1b1fc <__flatcc_gen_sort@@Base+0xf0c>
   1b1d8:	str	r6, [sp]
   1b1dc:	mov	r3, r5
   1b1e0:	add	r2, sp, #388	; 0x184
   1b1e4:	mov	r1, sl
   1b1e8:	ldr	r0, [r8, #204]	; 0xcc
   1b1ec:	bl	14094 <fprintf@plt>
   1b1f0:	ldr	r4, [r4]
   1b1f4:	cmp	r4, #0
   1b1f8:	beq	1c31c <__flatcc_gen_sort@@Base+0x202c>
   1b1fc:	ldr	r3, [r4, #4]
   1b200:	ldr	r5, [r3, #4]
   1b204:	ldr	r6, [r3]
   1b208:	ldrh	r3, [r4, #72]	; 0x48
   1b20c:	tst	r3, #4
   1b210:	bne	1b1d8 <__flatcc_gen_sort@@Base+0xee8>
   1b214:	ldrh	r3, [r4, #24]
   1b218:	sub	r3, r3, #7
   1b21c:	cmp	r3, #8
   1b220:	ldrls	pc, [pc, r3, lsl #2]
   1b224:	b	1bf50 <__flatcc_gen_sort@@Base+0x1c60>
   1b228:	andeq	fp, r1, r8, ror r7
   1b22c:	andeq	fp, r1, ip, asr #4
   1b230:	ldrdeq	fp, [r1], -r4
   1b234:	andeq	fp, r1, r4, lsr #17
   1b238:	andeq	fp, r1, r0, asr pc
   1b23c:	andeq	fp, r1, r0, asr pc
   1b240:	andeq	fp, r1, r0, asr pc
   1b244:	andeq	fp, r1, r4, lsl #18
   1b248:	andeq	fp, r1, r4, lsl #27
   1b24c:	ldr	r3, [r4, #16]
   1b250:	cmp	r3, #5
   1b254:	beq	1bfdc <__flatcc_gen_sort@@Base+0x1cec>
   1b258:	sub	r2, r3, #1
   1b25c:	cmp	r2, #10
   1b260:	ldrls	pc, [pc, r2, lsl #2]
   1b264:	b	1b294 <__flatcc_gen_sort@@Base+0xfa4>
   1b268:	andeq	fp, r1, ip, asr #5
   1b26c:	andeq	fp, r1, ip, lsl #31
   1b270:	andeq	ip, r1, r4, ror r0
   1b274:	andeq	fp, r1, r4, lsr #31
   1b278:	strdeq	fp, [r1], -r0
   1b27c:	strdeq	fp, [r1], -ip
   1b280:	andeq	ip, r1, ip, asr r0
   1b284:	andeq	ip, r1, ip, lsl #1
   1b288:	andeq	ip, r1, r4, lsl r0
   1b28c:	andeq	ip, r1, r8, lsr r0
   1b290:	strdeq	ip, [r1], -r8
   1b294:	ldr	r4, [pc, #3628]	; 1c0c8 <__flatcc_gen_sort@@Base+0x1dd8>
   1b298:	ldr	r3, [pc, #3804]	; 1c17c <__flatcc_gen_sort@@Base+0x1e8c>
   1b29c:	ldr	r0, [r3]
   1b2a0:	ldr	r3, [pc, #3620]	; 1c0cc <__flatcc_gen_sort@@Base+0x1ddc>
   1b2a4:	str	r3, [sp]
   1b2a8:	mov	r3, #141	; 0x8d
   1b2ac:	mov	r2, r4
   1b2b0:	ldr	r1, [pc, #3788]	; 1c184 <__flatcc_gen_sort@@Base+0x1e94>
   1b2b4:	bl	14094 <fprintf@plt>
   1b2b8:	ldr	r3, [pc, #3600]	; 1c0d0 <__flatcc_gen_sort@@Base+0x1de0>
   1b2bc:	mov	r2, #141	; 0x8d
   1b2c0:	mov	r1, r4
   1b2c4:	ldr	r0, [pc, #3776]	; 1c18c <__flatcc_gen_sort@@Base+0x1e9c>
   1b2c8:	bl	14148 <__assert_fail@plt>
   1b2cc:	ldrh	r2, [r4, #56]	; 0x38
   1b2d0:	sub	r2, r2, #3
   1b2d4:	cmp	r2, #3
   1b2d8:	ldrls	pc, [pc, r2, lsl #2]
   1b2dc:	b	1b740 <__flatcc_gen_sort@@Base+0x1450>
   1b2e0:			; <UNDEFINED> instruction: 0x0001b6b4
   1b2e4:	andeq	fp, r1, r0, lsl #9
   1b2e8:	strdeq	fp, [r1], -r0
   1b2ec:			; <UNDEFINED> instruction: 0x0001b5b4
   1b2f0:	ldr	r9, [pc, #3548]	; 1c0d4 <__flatcc_gen_sort@@Base+0x1de4>
   1b2f4:	ldr	r2, [pc, #3548]	; 1c0d8 <__flatcc_gen_sort@@Base+0x1de8>
   1b2f8:	str	r2, [sp, #60]	; 0x3c
   1b2fc:	ldr	r2, [pc, #3764]	; 1c1b8 <__flatcc_gen_sort@@Base+0x1ec8>
   1b300:	str	r2, [sp, #56]	; 0x38
   1b304:	b	1b330 <__flatcc_gen_sort@@Base+0x1040>
   1b308:	ldr	r9, [pc, #3712]	; 1c190 <__flatcc_gen_sort@@Base+0x1ea0>
   1b30c:	ldr	r2, [pc, #3712]	; 1c194 <__flatcc_gen_sort@@Base+0x1ea4>
   1b310:	str	r2, [sp, #60]	; 0x3c
   1b314:	ldr	r2, [pc, #3740]	; 1c1b8 <__flatcc_gen_sort@@Base+0x1ec8>
   1b318:	str	r2, [sp, #56]	; 0x38
   1b31c:	b	1b330 <__flatcc_gen_sort@@Base+0x1040>
   1b320:	ldr	r9, [pc, #3700]	; 1c19c <__flatcc_gen_sort@@Base+0x1eac>
   1b324:	str	r9, [sp, #60]	; 0x3c
   1b328:	ldr	r2, [pc, #3720]	; 1c1b8 <__flatcc_gen_sort@@Base+0x1ec8>
   1b32c:	str	r2, [sp, #56]	; 0x38
   1b330:	sub	r3, r3, #1
   1b334:	cmp	r3, #8
   1b338:	ldrls	pc, [pc, r3, lsl #2]
   1b33c:	b	1b3c8 <__flatcc_gen_sort@@Base+0x10d8>
   1b340:	andeq	fp, r1, r0, lsl #8
   1b344:	muleq	r1, r0, r3
   1b348:	andeq	fp, r1, r8, lsl #8
   1b34c:	muleq	r1, r8, r3
   1b350:	andeq	fp, r1, r0, lsr #7
   1b354:	andeq	fp, r1, r8, lsr #7
   1b358:			; <UNDEFINED> instruction: 0x0001b3b0
   1b35c:			; <UNDEFINED> instruction: 0x0001b3b8
   1b360:	andeq	fp, r1, r0, asr #7
   1b364:	ldr	r9, [pc, #3580]	; 1c168 <__flatcc_gen_sort@@Base+0x1e78>
   1b368:	ldr	r2, [pc, #3580]	; 1c16c <__flatcc_gen_sort@@Base+0x1e7c>
   1b36c:	str	r2, [sp, #60]	; 0x3c
   1b370:	ldr	r2, [pc, #3648]	; 1c1b8 <__flatcc_gen_sort@@Base+0x1ec8>
   1b374:	str	r2, [sp, #56]	; 0x38
   1b378:	b	1b330 <__flatcc_gen_sort@@Base+0x1040>
   1b37c:	ldr	r9, [pc, #3604]	; 1c198 <__flatcc_gen_sort@@Base+0x1ea8>
   1b380:	str	r9, [sp, #60]	; 0x3c
   1b384:	ldr	r2, [pc, #3628]	; 1c1b8 <__flatcc_gen_sort@@Base+0x1ec8>
   1b388:	str	r2, [sp, #56]	; 0x38
   1b38c:	b	1b330 <__flatcc_gen_sort@@Base+0x1040>
   1b390:	ldr	r2, [pc, #3396]	; 1c0dc <__flatcc_gen_sort@@Base+0x1dec>
   1b394:	b	1b40c <__flatcc_gen_sort@@Base+0x111c>
   1b398:	ldr	r2, [pc, #3392]	; 1c0e0 <__flatcc_gen_sort@@Base+0x1df0>
   1b39c:	b	1b40c <__flatcc_gen_sort@@Base+0x111c>
   1b3a0:	ldr	r2, [pc, #3384]	; 1c0e0 <__flatcc_gen_sort@@Base+0x1df0>
   1b3a4:	b	1b40c <__flatcc_gen_sort@@Base+0x111c>
   1b3a8:	ldr	r2, [pc, #3380]	; 1c0e4 <__flatcc_gen_sort@@Base+0x1df4>
   1b3ac:	b	1b40c <__flatcc_gen_sort@@Base+0x111c>
   1b3b0:	ldr	r2, [pc, #3376]	; 1c0e8 <__flatcc_gen_sort@@Base+0x1df8>
   1b3b4:	b	1b40c <__flatcc_gen_sort@@Base+0x111c>
   1b3b8:	ldr	r2, [pc, #3372]	; 1c0ec <__flatcc_gen_sort@@Base+0x1dfc>
   1b3bc:	b	1b40c <__flatcc_gen_sort@@Base+0x111c>
   1b3c0:	ldr	r2, [pc, #3368]	; 1c0f0 <__flatcc_gen_sort@@Base+0x1e00>
   1b3c4:	b	1b40c <__flatcc_gen_sort@@Base+0x111c>
   1b3c8:	ldr	r4, [pc, #3320]	; 1c0c8 <__flatcc_gen_sort@@Base+0x1dd8>
   1b3cc:	ldr	r3, [pc, #3496]	; 1c17c <__flatcc_gen_sort@@Base+0x1e8c>
   1b3d0:	ldr	r0, [r3]
   1b3d4:	ldr	r3, [pc, #3312]	; 1c0cc <__flatcc_gen_sort@@Base+0x1ddc>
   1b3d8:	str	r3, [sp]
   1b3dc:	mov	r3, #226	; 0xe2
   1b3e0:	mov	r2, r4
   1b3e4:	ldr	r1, [pc, #3480]	; 1c184 <__flatcc_gen_sort@@Base+0x1e94>
   1b3e8:	bl	14094 <fprintf@plt>
   1b3ec:	ldr	r3, [pc, #3328]	; 1c0f4 <__flatcc_gen_sort@@Base+0x1e04>
   1b3f0:	mov	r2, #226	; 0xe2
   1b3f4:	mov	r1, r4
   1b3f8:	ldr	r0, [pc, #3468]	; 1c18c <__flatcc_gen_sort@@Base+0x1e9c>
   1b3fc:	bl	14148 <__assert_fail@plt>
   1b400:	ldr	r2, [pc, #3312]	; 1c0f8 <__flatcc_gen_sort@@Base+0x1e08>
   1b404:	b	1b40c <__flatcc_gen_sort@@Base+0x111c>
   1b408:	ldr	r2, [pc, #3308]	; 1c0fc <__flatcc_gen_sort@@Base+0x1e0c>
   1b40c:	ldrd	r0, [r4, #48]	; 0x30
   1b410:	strd	r0, [sp]
   1b414:	ldr	r1, [pc, #3300]	; 1c100 <__flatcc_gen_sort@@Base+0x1e10>
   1b418:	add	r0, sp, #68	; 0x44
   1b41c:	bl	14100 <sprintf@plt>
   1b420:	add	r3, sp, #68	; 0x44
   1b424:	str	r3, [sp, #52]	; 0x34
   1b428:	ldrh	r3, [r4, #74]	; 0x4a
   1b42c:	str	r3, [sp, #48]	; 0x30
   1b430:	ldrd	r2, [r4, #88]	; 0x58
   1b434:	strd	r2, [sp, #40]	; 0x28
   1b438:	str	r9, [sp, #36]	; 0x24
   1b43c:	ldr	r3, [sp, #56]	; 0x38
   1b440:	str	r3, [sp, #32]
   1b444:	ldr	r3, [sp, #60]	; 0x3c
   1b448:	str	r3, [sp, #28]
   1b44c:	str	r7, [sp, #24]
   1b450:	str	r6, [sp, #20]
   1b454:	str	r5, [sp, #16]
   1b458:	add	r3, sp, #388	; 0x184
   1b45c:	str	r3, [sp, #12]
   1b460:	str	r7, [sp, #8]
   1b464:	ldrd	r2, [r4, #96]	; 0x60
   1b468:	strd	r2, [sp]
   1b46c:	mov	r2, r7
   1b470:	ldr	r1, [pc, #3212]	; 1c104 <__flatcc_gen_sort@@Base+0x1e14>
   1b474:	ldr	r0, [r8, #204]	; 0xcc
   1b478:	bl	14094 <fprintf@plt>
   1b47c:	b	1b1f0 <__flatcc_gen_sort@@Base+0xf00>
   1b480:	ldr	r9, [pc, #3148]	; 1c0d4 <__flatcc_gen_sort@@Base+0x1de4>
   1b484:	ldr	r2, [pc, #3148]	; 1c0d8 <__flatcc_gen_sort@@Base+0x1de8>
   1b488:	str	r2, [sp, #60]	; 0x3c
   1b48c:	ldr	r2, [pc, #3364]	; 1c1b8 <__flatcc_gen_sort@@Base+0x1ec8>
   1b490:	str	r2, [sp, #56]	; 0x38
   1b494:	b	1b4c0 <__flatcc_gen_sort@@Base+0x11d0>
   1b498:	ldr	r9, [pc, #3312]	; 1c190 <__flatcc_gen_sort@@Base+0x1ea0>
   1b49c:	ldr	r2, [pc, #3312]	; 1c194 <__flatcc_gen_sort@@Base+0x1ea4>
   1b4a0:	str	r2, [sp, #60]	; 0x3c
   1b4a4:	ldr	r2, [pc, #3340]	; 1c1b8 <__flatcc_gen_sort@@Base+0x1ec8>
   1b4a8:	str	r2, [sp, #56]	; 0x38
   1b4ac:	b	1b4c0 <__flatcc_gen_sort@@Base+0x11d0>
   1b4b0:	ldr	r9, [pc, #3300]	; 1c19c <__flatcc_gen_sort@@Base+0x1eac>
   1b4b4:	str	r9, [sp, #60]	; 0x3c
   1b4b8:	ldr	r2, [pc, #3320]	; 1c1b8 <__flatcc_gen_sort@@Base+0x1ec8>
   1b4bc:	str	r2, [sp, #56]	; 0x38
   1b4c0:	sub	r3, r3, #1
   1b4c4:	cmp	r3, #8
   1b4c8:	ldrls	pc, [pc, r3, lsl #2]
   1b4cc:	b	1b558 <__flatcc_gen_sort@@Base+0x1268>
   1b4d0:	muleq	r1, r0, r5
   1b4d4:	andeq	fp, r1, r0, lsr #10
   1b4d8:	muleq	r1, r8, r5
   1b4dc:	andeq	fp, r1, r8, lsr #10
   1b4e0:	andeq	fp, r1, r0, lsr r5
   1b4e4:	andeq	fp, r1, r8, lsr r5
   1b4e8:	andeq	fp, r1, r0, asr #10
   1b4ec:	andeq	fp, r1, r8, asr #10
   1b4f0:	andeq	fp, r1, r0, asr r5
   1b4f4:	ldr	r9, [pc, #3180]	; 1c168 <__flatcc_gen_sort@@Base+0x1e78>
   1b4f8:	ldr	r2, [pc, #3180]	; 1c16c <__flatcc_gen_sort@@Base+0x1e7c>
   1b4fc:	str	r2, [sp, #60]	; 0x3c
   1b500:	ldr	r2, [pc, #3248]	; 1c1b8 <__flatcc_gen_sort@@Base+0x1ec8>
   1b504:	str	r2, [sp, #56]	; 0x38
   1b508:	b	1b4c0 <__flatcc_gen_sort@@Base+0x11d0>
   1b50c:	ldr	r9, [pc, #3204]	; 1c198 <__flatcc_gen_sort@@Base+0x1ea8>
   1b510:	str	r9, [sp, #60]	; 0x3c
   1b514:	ldr	r2, [pc, #3228]	; 1c1b8 <__flatcc_gen_sort@@Base+0x1ec8>
   1b518:	str	r2, [sp, #56]	; 0x38
   1b51c:	b	1b4c0 <__flatcc_gen_sort@@Base+0x11d0>
   1b520:	ldr	r2, [pc, #2996]	; 1c0dc <__flatcc_gen_sort@@Base+0x1dec>
   1b524:	b	1b59c <__flatcc_gen_sort@@Base+0x12ac>
   1b528:	ldr	r2, [pc, #2992]	; 1c0e0 <__flatcc_gen_sort@@Base+0x1df0>
   1b52c:	b	1b59c <__flatcc_gen_sort@@Base+0x12ac>
   1b530:	ldr	r2, [pc, #2984]	; 1c0e0 <__flatcc_gen_sort@@Base+0x1df0>
   1b534:	b	1b59c <__flatcc_gen_sort@@Base+0x12ac>
   1b538:	ldr	r2, [pc, #2980]	; 1c0e4 <__flatcc_gen_sort@@Base+0x1df4>
   1b53c:	b	1b59c <__flatcc_gen_sort@@Base+0x12ac>
   1b540:	ldr	r2, [pc, #2976]	; 1c0e8 <__flatcc_gen_sort@@Base+0x1df8>
   1b544:	b	1b59c <__flatcc_gen_sort@@Base+0x12ac>
   1b548:	ldr	r2, [pc, #2972]	; 1c0ec <__flatcc_gen_sort@@Base+0x1dfc>
   1b54c:	b	1b59c <__flatcc_gen_sort@@Base+0x12ac>
   1b550:	ldr	r2, [pc, #2968]	; 1c0f0 <__flatcc_gen_sort@@Base+0x1e00>
   1b554:	b	1b59c <__flatcc_gen_sort@@Base+0x12ac>
   1b558:	ldr	r4, [pc, #2920]	; 1c0c8 <__flatcc_gen_sort@@Base+0x1dd8>
   1b55c:	ldr	r3, [pc, #3096]	; 1c17c <__flatcc_gen_sort@@Base+0x1e8c>
   1b560:	ldr	r0, [r3]
   1b564:	ldr	r3, [pc, #2912]	; 1c0cc <__flatcc_gen_sort@@Base+0x1ddc>
   1b568:	str	r3, [sp]
   1b56c:	mov	r3, #226	; 0xe2
   1b570:	mov	r2, r4
   1b574:	ldr	r1, [pc, #3080]	; 1c184 <__flatcc_gen_sort@@Base+0x1e94>
   1b578:	bl	14094 <fprintf@plt>
   1b57c:	ldr	r3, [pc, #2928]	; 1c0f4 <__flatcc_gen_sort@@Base+0x1e04>
   1b580:	mov	r2, #226	; 0xe2
   1b584:	mov	r1, r4
   1b588:	ldr	r0, [pc, #3068]	; 1c18c <__flatcc_gen_sort@@Base+0x1e9c>
   1b58c:	bl	14148 <__assert_fail@plt>
   1b590:	ldr	r2, [pc, #2912]	; 1c0f8 <__flatcc_gen_sort@@Base+0x1e08>
   1b594:	b	1b59c <__flatcc_gen_sort@@Base+0x12ac>
   1b598:	ldr	r2, [pc, #2908]	; 1c0fc <__flatcc_gen_sort@@Base+0x1e0c>
   1b59c:	ldrd	r0, [r4, #48]	; 0x30
   1b5a0:	strd	r0, [sp]
   1b5a4:	ldr	r1, [pc, #2908]	; 1c108 <__flatcc_gen_sort@@Base+0x1e18>
   1b5a8:	add	r0, sp, #68	; 0x44
   1b5ac:	bl	14100 <sprintf@plt>
   1b5b0:	b	1b420 <__flatcc_gen_sort@@Base+0x1130>
   1b5b4:	ldr	r9, [pc, #2840]	; 1c0d4 <__flatcc_gen_sort@@Base+0x1de4>
   1b5b8:	ldr	r2, [pc, #2840]	; 1c0d8 <__flatcc_gen_sort@@Base+0x1de8>
   1b5bc:	str	r2, [sp, #60]	; 0x3c
   1b5c0:	ldr	r2, [pc, #3056]	; 1c1b8 <__flatcc_gen_sort@@Base+0x1ec8>
   1b5c4:	str	r2, [sp, #56]	; 0x38
   1b5c8:	sub	r3, r3, #1
   1b5cc:	cmp	r3, #8
   1b5d0:	ldrls	pc, [pc, r3, lsl #2]
   1b5d4:	b	1b66c <__flatcc_gen_sort@@Base+0x137c>
   1b5d8:	andeq	fp, r1, r4, lsr #13
   1b5dc:	strdeq	fp, [r1], -ip
   1b5e0:	andeq	fp, r1, ip, lsr #13
   1b5e4:	andeq	fp, r1, r4, lsl r6
   1b5e8:	andeq	fp, r1, ip, lsl r6
   1b5ec:	andeq	fp, r1, r4, lsr #12
   1b5f0:	andeq	fp, r1, ip, lsr #12
   1b5f4:	andeq	fp, r1, r8, asr #12
   1b5f8:	andeq	fp, r1, r4, ror #12
   1b5fc:	ldr	r2, [pc, #2776]	; 1c0dc <__flatcc_gen_sort@@Base+0x1dec>
   1b600:	ldrb	r3, [r4, #48]	; 0x30
   1b604:	ldr	r1, [pc, #2816]	; 1c10c <__flatcc_gen_sort@@Base+0x1e1c>
   1b608:	add	r0, sp, #68	; 0x44
   1b60c:	bl	14100 <sprintf@plt>
   1b610:	b	1b420 <__flatcc_gen_sort@@Base+0x1130>
   1b614:	ldr	r2, [pc, #2756]	; 1c0e0 <__flatcc_gen_sort@@Base+0x1df0>
   1b618:	b	1b600 <__flatcc_gen_sort@@Base+0x1310>
   1b61c:	ldr	r2, [pc, #2748]	; 1c0e0 <__flatcc_gen_sort@@Base+0x1df0>
   1b620:	b	1b600 <__flatcc_gen_sort@@Base+0x1310>
   1b624:	ldr	r2, [pc, #2744]	; 1c0e4 <__flatcc_gen_sort@@Base+0x1df4>
   1b628:	b	1b600 <__flatcc_gen_sort@@Base+0x1310>
   1b62c:	ldr	r2, [pc, #2740]	; 1c0e8 <__flatcc_gen_sort@@Base+0x1df8>
   1b630:	b	1b600 <__flatcc_gen_sort@@Base+0x1310>
   1b634:	ldr	r9, [pc, #2860]	; 1c168 <__flatcc_gen_sort@@Base+0x1e78>
   1b638:	ldr	r3, [pc, #2860]	; 1c16c <__flatcc_gen_sort@@Base+0x1e7c>
   1b63c:	str	r3, [sp, #60]	; 0x3c
   1b640:	ldr	r3, [pc, #2928]	; 1c1b8 <__flatcc_gen_sort@@Base+0x1ec8>
   1b644:	str	r3, [sp, #56]	; 0x38
   1b648:	ldr	r2, [pc, #2716]	; 1c0ec <__flatcc_gen_sort@@Base+0x1dfc>
   1b64c:	b	1b600 <__flatcc_gen_sort@@Base+0x1310>
   1b650:	ldr	r9, [pc, #2872]	; 1c190 <__flatcc_gen_sort@@Base+0x1ea0>
   1b654:	ldr	r3, [pc, #2872]	; 1c194 <__flatcc_gen_sort@@Base+0x1ea4>
   1b658:	str	r3, [sp, #60]	; 0x3c
   1b65c:	ldr	r3, [pc, #2900]	; 1c1b8 <__flatcc_gen_sort@@Base+0x1ec8>
   1b660:	str	r3, [sp, #56]	; 0x38
   1b664:	ldr	r2, [pc, #2692]	; 1c0f0 <__flatcc_gen_sort@@Base+0x1e00>
   1b668:	b	1b600 <__flatcc_gen_sort@@Base+0x1310>
   1b66c:	ldr	r4, [pc, #2644]	; 1c0c8 <__flatcc_gen_sort@@Base+0x1dd8>
   1b670:	ldr	r3, [pc, #2820]	; 1c17c <__flatcc_gen_sort@@Base+0x1e8c>
   1b674:	ldr	r0, [r3]
   1b678:	ldr	r3, [pc, #2636]	; 1c0cc <__flatcc_gen_sort@@Base+0x1ddc>
   1b67c:	str	r3, [sp]
   1b680:	mov	r3, #226	; 0xe2
   1b684:	mov	r2, r4
   1b688:	ldr	r1, [pc, #2804]	; 1c184 <__flatcc_gen_sort@@Base+0x1e94>
   1b68c:	bl	14094 <fprintf@plt>
   1b690:	ldr	r3, [pc, #2652]	; 1c0f4 <__flatcc_gen_sort@@Base+0x1e04>
   1b694:	mov	r2, #226	; 0xe2
   1b698:	mov	r1, r4
   1b69c:	ldr	r0, [pc, #2792]	; 1c18c <__flatcc_gen_sort@@Base+0x1e9c>
   1b6a0:	bl	14148 <__assert_fail@plt>
   1b6a4:	ldr	r2, [pc, #2636]	; 1c0f8 <__flatcc_gen_sort@@Base+0x1e08>
   1b6a8:	b	1b600 <__flatcc_gen_sort@@Base+0x1310>
   1b6ac:	ldr	r2, [pc, #2632]	; 1c0fc <__flatcc_gen_sort@@Base+0x1e0c>
   1b6b0:	b	1b600 <__flatcc_gen_sort@@Base+0x1310>
   1b6b4:	ldr	r9, [pc, #2584]	; 1c0d4 <__flatcc_gen_sort@@Base+0x1de4>
   1b6b8:	ldr	r2, [pc, #2584]	; 1c0d8 <__flatcc_gen_sort@@Base+0x1de8>
   1b6bc:	str	r2, [sp, #60]	; 0x3c
   1b6c0:	b	1b6dc <__flatcc_gen_sort@@Base+0x13ec>
   1b6c4:	ldr	r9, [pc, #2756]	; 1c190 <__flatcc_gen_sort@@Base+0x1ea0>
   1b6c8:	ldr	r2, [pc, #2756]	; 1c194 <__flatcc_gen_sort@@Base+0x1ea4>
   1b6cc:	str	r2, [sp, #60]	; 0x3c
   1b6d0:	b	1b6dc <__flatcc_gen_sort@@Base+0x13ec>
   1b6d4:	ldr	r9, [pc, #2752]	; 1c19c <__flatcc_gen_sort@@Base+0x1eac>
   1b6d8:	str	r9, [sp, #60]	; 0x3c
   1b6dc:	cmp	r3, #11
   1b6e0:	beq	1b718 <__flatcc_gen_sort@@Base+0x1428>
   1b6e4:	ldr	r3, [pc, #2764]	; 1c1b8 <__flatcc_gen_sort@@Base+0x1ec8>
   1b6e8:	str	r3, [sp, #56]	; 0x38
   1b6ec:	ldrd	r2, [r4, #48]	; 0x30
   1b6f0:	ldr	r1, [pc, #2584]	; 1c110 <__flatcc_gen_sort@@Base+0x1e20>
   1b6f4:	add	r0, sp, #68	; 0x44
   1b6f8:	bl	14100 <sprintf@plt>
   1b6fc:	b	1b420 <__flatcc_gen_sort@@Base+0x1130>
   1b700:	ldr	r9, [pc, #2656]	; 1c168 <__flatcc_gen_sort@@Base+0x1e78>
   1b704:	ldr	r2, [pc, #2656]	; 1c16c <__flatcc_gen_sort@@Base+0x1e7c>
   1b708:	str	r2, [sp, #60]	; 0x3c
   1b70c:	b	1b6dc <__flatcc_gen_sort@@Base+0x13ec>
   1b710:	ldr	r9, [pc, #2688]	; 1c198 <__flatcc_gen_sort@@Base+0x1ea8>
   1b714:	str	r9, [sp, #60]	; 0x3c
   1b718:	vldr	d7, [r4, #48]	; 0x30
   1b71c:	vcvt.f32.f64	s14, d7
   1b720:	vcvt.f64.f32	d7, s14
   1b724:	vmov	r2, r3, d7
   1b728:	ldr	r1, [pc, #2532]	; 1c114 <__flatcc_gen_sort@@Base+0x1e24>
   1b72c:	add	r0, sp, #68	; 0x44
   1b730:	bl	14100 <sprintf@plt>
   1b734:	ldr	r3, [pc, #2684]	; 1c1b8 <__flatcc_gen_sort@@Base+0x1ec8>
   1b738:	str	r3, [sp, #56]	; 0x38
   1b73c:	b	1b420 <__flatcc_gen_sort@@Base+0x1130>
   1b740:	ldr	r4, [pc, #2432]	; 1c0c8 <__flatcc_gen_sort@@Base+0x1dd8>
   1b744:	ldr	r3, [pc, #2608]	; 1c17c <__flatcc_gen_sort@@Base+0x1e8c>
   1b748:	ldr	r0, [r3]
   1b74c:	ldr	r3, [pc, #2424]	; 1c0cc <__flatcc_gen_sort@@Base+0x1ddc>
   1b750:	str	r3, [sp]
   1b754:	mov	r3, #260	; 0x104
   1b758:	mov	r2, r4
   1b75c:	ldr	r1, [pc, #2592]	; 1c184 <__flatcc_gen_sort@@Base+0x1e94>
   1b760:	bl	14094 <fprintf@plt>
   1b764:	ldr	r3, [pc, #2476]	; 1c118 <__flatcc_gen_sort@@Base+0x1e28>
   1b768:	mov	r2, #260	; 0x104
   1b76c:	mov	r1, r4
   1b770:	ldr	r0, [pc, #2580]	; 1c18c <__flatcc_gen_sort@@Base+0x1e9c>
   1b774:	bl	14148 <__assert_fail@plt>
   1b778:	ldr	r3, [r4, #16]
   1b77c:	cmp	r3, #5
   1b780:	beq	1c2d0 <__flatcc_gen_sort@@Base+0x1fe0>
   1b784:	sub	r3, r3, #1
   1b788:	cmp	r3, #10
   1b78c:	ldrls	pc, [pc, r3, lsl #2]
   1b790:	b	1b7c0 <__flatcc_gen_sort@@Base+0x14d0>
   1b794:	strdeq	fp, [r1], -r8
   1b798:	andeq	ip, r1, r0, lsr #5
   1b79c:			; <UNDEFINED> instruction: 0x0001c2b0
   1b7a0:	andeq	ip, r1, r0, asr #5
   1b7a4:	andeq	ip, r1, r0, ror #5
   1b7a8:	andeq	ip, r1, r8, ror #5
   1b7ac:	strheq	ip, [r1], -r0
   1b7b0:	andeq	ip, r1, ip, asr #3
   1b7b4:	andeq	ip, r1, r0, ror r2
   1b7b8:	muleq	r1, r0, r2
   1b7bc:	andeq	ip, r1, r0, lsl #5
   1b7c0:	ldr	r4, [pc, #2304]	; 1c0c8 <__flatcc_gen_sort@@Base+0x1dd8>
   1b7c4:	ldr	r3, [pc, #2480]	; 1c17c <__flatcc_gen_sort@@Base+0x1e8c>
   1b7c8:	ldr	r0, [r3]
   1b7cc:	ldr	r3, [pc, #2296]	; 1c0cc <__flatcc_gen_sort@@Base+0x1ddc>
   1b7d0:	str	r3, [sp]
   1b7d4:	mov	r3, #141	; 0x8d
   1b7d8:	mov	r2, r4
   1b7dc:	ldr	r1, [pc, #2464]	; 1c184 <__flatcc_gen_sort@@Base+0x1e94>
   1b7e0:	bl	14094 <fprintf@plt>
   1b7e4:	ldr	r3, [pc, #2276]	; 1c0d0 <__flatcc_gen_sort@@Base+0x1de0>
   1b7e8:	mov	r2, #141	; 0x8d
   1b7ec:	mov	r1, r4
   1b7f0:	ldr	r0, [pc, #2452]	; 1c18c <__flatcc_gen_sort@@Base+0x1e9c>
   1b7f4:	bl	14148 <__assert_fail@plt>
   1b7f8:	ldr	r2, [pc, #2260]	; 1c0d4 <__flatcc_gen_sort@@Base+0x1de4>
   1b7fc:	ldr	r3, [pc, #2484]	; 1c1b8 <__flatcc_gen_sort@@Base+0x1ec8>
   1b800:	ldr	r1, [pc, #2256]	; 1c0d8 <__flatcc_gen_sort@@Base+0x1de8>
   1b804:	b	1c1d8 <__flatcc_gen_sort@@Base+0x1ee8>
   1b808:	add	r9, sp, #168	; 0xa8
   1b80c:	mov	r2, r9
   1b810:	mov	r1, r3
   1b814:	ldr	r0, [r3, #12]
   1b818:	bl	15edc <__flatcc_fb_scoped_symbol_name@@Base>
   1b81c:	str	r9, [sp, #20]
   1b820:	str	r9, [sp, #16]
   1b824:	str	r9, [sp, #12]
   1b828:	str	r6, [sp, #8]
   1b82c:	str	r5, [sp, #4]
   1b830:	add	r3, sp, #388	; 0x184
   1b834:	str	r3, [sp]
   1b838:	mov	r3, r7
   1b83c:	mov	r2, r7
   1b840:	ldr	r1, [pc, #2260]	; 1c11c <__flatcc_gen_sort@@Base+0x1e2c>
   1b844:	ldr	r0, [r8, #204]	; 0xcc
   1b848:	bl	14094 <fprintf@plt>
   1b84c:	b	1b1f0 <__flatcc_gen_sort@@Base+0xf00>
   1b850:	add	r9, sp, #168	; 0xa8
   1b854:	mov	r2, r9
   1b858:	mov	r1, r3
   1b85c:	ldr	r0, [r3, #12]
   1b860:	bl	15edc <__flatcc_fb_scoped_symbol_name@@Base>
   1b864:	str	r9, [sp, #24]
   1b868:	str	r9, [sp, #20]
   1b86c:	ldr	r3, [r4, #104]	; 0x68
   1b870:	ldrh	r3, [r3, #104]	; 0x68
   1b874:	str	r3, [sp, #16]
   1b878:	str	r9, [sp, #12]
   1b87c:	str	r6, [sp, #8]
   1b880:	str	r5, [sp, #4]
   1b884:	add	r3, sp, #388	; 0x184
   1b888:	str	r3, [sp]
   1b88c:	mov	r3, r7
   1b890:	mov	r2, r7
   1b894:	ldr	r1, [pc, #2180]	; 1c120 <__flatcc_gen_sort@@Base+0x1e30>
   1b898:	ldr	r0, [r8, #204]	; 0xcc
   1b89c:	bl	14094 <fprintf@plt>
   1b8a0:	b	1b1f0 <__flatcc_gen_sort@@Base+0xf00>
   1b8a4:	str	r6, [sp, #20]
   1b8a8:	str	r5, [sp, #16]
   1b8ac:	add	r3, sp, #388	; 0x184
   1b8b0:	str	r3, [sp, #12]
   1b8b4:	str	r7, [sp, #8]
   1b8b8:	ldrd	r2, [r4, #96]	; 0x60
   1b8bc:	strd	r2, [sp]
   1b8c0:	mov	r2, r7
   1b8c4:	ldr	r1, [pc, #2136]	; 1c124 <__flatcc_gen_sort@@Base+0x1e34>
   1b8c8:	ldr	r0, [r8, #204]	; 0xcc
   1b8cc:	bl	14094 <fprintf@plt>
   1b8d0:	b	1b1f0 <__flatcc_gen_sort@@Base+0xf00>
   1b8d4:	str	r6, [sp, #20]
   1b8d8:	str	r5, [sp, #16]
   1b8dc:	add	r3, sp, #388	; 0x184
   1b8e0:	str	r3, [sp, #12]
   1b8e4:	str	r7, [sp, #8]
   1b8e8:	ldrd	r2, [r4, #96]	; 0x60
   1b8ec:	strd	r2, [sp]
   1b8f0:	mov	r2, r7
   1b8f4:	ldr	r1, [pc, #2092]	; 1c128 <__flatcc_gen_sort@@Base+0x1e38>
   1b8f8:	ldr	r0, [r8, #204]	; 0xcc
   1b8fc:	bl	14094 <fprintf@plt>
   1b900:	b	1b1f0 <__flatcc_gen_sort@@Base+0xf00>
   1b904:	ldr	r3, [r4, #16]
   1b908:	add	r2, sp, #168	; 0xa8
   1b90c:	mov	r1, r3
   1b910:	ldr	r0, [r3, #12]
   1b914:	bl	15edc <__flatcc_fb_scoped_symbol_name@@Base>
   1b918:	ldr	r2, [r4, #16]
   1b91c:	ldrh	r3, [r2, #8]
   1b920:	cmp	r3, #4
   1b924:	ldrls	pc, [pc, r3, lsl #2]
   1b928:	b	1bd4c <__flatcc_gen_sort@@Base+0x1a5c>
   1b92c:	andeq	fp, r1, r8, lsl #19
   1b930:	andeq	fp, r1, r0, asr #18
   1b934:	andeq	fp, r1, ip, asr #26
   1b938:	andeq	fp, r1, r0, asr #19
   1b93c:	strdeq	fp, [r1], -r0
   1b940:	ldrh	r3, [r4, #74]	; 0x4a
   1b944:	str	r3, [sp, #40]	; 0x28
   1b948:	ldrd	r2, [r4, #88]	; 0x58
   1b94c:	strd	r2, [sp, #32]
   1b950:	add	r3, sp, #168	; 0xa8
   1b954:	str	r3, [sp, #24]
   1b958:	str	r6, [sp, #20]
   1b95c:	str	r5, [sp, #16]
   1b960:	add	r3, sp, #388	; 0x184
   1b964:	str	r3, [sp, #12]
   1b968:	str	r7, [sp, #8]
   1b96c:	ldrd	r2, [r4, #96]	; 0x60
   1b970:	strd	r2, [sp]
   1b974:	mov	r2, r7
   1b978:	ldr	r1, [pc, #1964]	; 1c12c <__flatcc_gen_sort@@Base+0x1e3c>
   1b97c:	ldr	r0, [r8, #204]	; 0xcc
   1b980:	bl	14094 <fprintf@plt>
   1b984:	b	1b1f0 <__flatcc_gen_sort@@Base+0xf00>
   1b988:	add	r3, sp, #168	; 0xa8
   1b98c:	str	r3, [sp, #24]
   1b990:	str	r6, [sp, #20]
   1b994:	str	r5, [sp, #16]
   1b998:	add	r3, sp, #388	; 0x184
   1b99c:	str	r3, [sp, #12]
   1b9a0:	str	r7, [sp, #8]
   1b9a4:	ldrd	r2, [r4, #96]	; 0x60
   1b9a8:	strd	r2, [sp]
   1b9ac:	mov	r2, r7
   1b9b0:	ldr	r1, [pc, #1912]	; 1c130 <__flatcc_gen_sort@@Base+0x1e40>
   1b9b4:	ldr	r0, [r8, #204]	; 0xcc
   1b9b8:	bl	14094 <fprintf@plt>
   1b9bc:	b	1b1f0 <__flatcc_gen_sort@@Base+0xf00>
   1b9c0:	ldr	r2, [r2, #40]	; 0x28
   1b9c4:	ldrh	r3, [r4, #56]	; 0x38
   1b9c8:	sub	r3, r3, #3
   1b9cc:	cmp	r3, #3
   1b9d0:	ldrls	pc, [pc, r3, lsl #2]
   1b9d4:	b	1bcb8 <__flatcc_gen_sort@@Base+0x19c8>
   1b9d8:	andeq	fp, r1, ip, lsr ip
   1b9dc:			; <UNDEFINED> instruction: 0x0001bab0
   1b9e0:	andeq	fp, r1, r8, ror #19
   1b9e4:	andeq	fp, r1, r8, ror fp
   1b9e8:	sub	r2, r2, #1
   1b9ec:	cmp	r2, #8
   1b9f0:	ldrls	pc, [pc, r2, lsl #2]
   1b9f4:	b	1ba68 <__flatcc_gen_sort@@Base+0x1778>
   1b9f8:	andeq	fp, r1, r0, lsr #21
   1b9fc:	andeq	fp, r1, ip, lsl sl
   1ba00:	andeq	fp, r1, r8, lsr #21
   1ba04:	andeq	fp, r1, r8, lsr sl
   1ba08:	andeq	fp, r1, r0, asr #20
   1ba0c:	andeq	fp, r1, r8, asr #20
   1ba10:	andeq	fp, r1, r0, asr sl
   1ba14:	andeq	fp, r1, r8, asr sl
   1ba18:	andeq	fp, r1, r0, ror #20
   1ba1c:	ldr	r2, [pc, #1720]	; 1c0dc <__flatcc_gen_sort@@Base+0x1dec>
   1ba20:	ldrd	r0, [r4, #48]	; 0x30
   1ba24:	strd	r0, [sp]
   1ba28:	ldr	r1, [pc, #1744]	; 1c100 <__flatcc_gen_sort@@Base+0x1e10>
   1ba2c:	add	r0, sp, #68	; 0x44
   1ba30:	bl	14100 <sprintf@plt>
   1ba34:	b	1bc64 <__flatcc_gen_sort@@Base+0x1974>
   1ba38:	ldr	r2, [pc, #1696]	; 1c0e0 <__flatcc_gen_sort@@Base+0x1df0>
   1ba3c:	b	1ba20 <__flatcc_gen_sort@@Base+0x1730>
   1ba40:	ldr	r2, [pc, #1688]	; 1c0e0 <__flatcc_gen_sort@@Base+0x1df0>
   1ba44:	b	1ba20 <__flatcc_gen_sort@@Base+0x1730>
   1ba48:	ldr	r2, [pc, #1684]	; 1c0e4 <__flatcc_gen_sort@@Base+0x1df4>
   1ba4c:	b	1ba20 <__flatcc_gen_sort@@Base+0x1730>
   1ba50:	ldr	r2, [pc, #1680]	; 1c0e8 <__flatcc_gen_sort@@Base+0x1df8>
   1ba54:	b	1ba20 <__flatcc_gen_sort@@Base+0x1730>
   1ba58:	ldr	r2, [pc, #1676]	; 1c0ec <__flatcc_gen_sort@@Base+0x1dfc>
   1ba5c:	b	1ba20 <__flatcc_gen_sort@@Base+0x1730>
   1ba60:	ldr	r2, [pc, #1672]	; 1c0f0 <__flatcc_gen_sort@@Base+0x1e00>
   1ba64:	b	1ba20 <__flatcc_gen_sort@@Base+0x1730>
   1ba68:	ldr	r4, [pc, #1624]	; 1c0c8 <__flatcc_gen_sort@@Base+0x1dd8>
   1ba6c:	ldr	r3, [pc, #1800]	; 1c17c <__flatcc_gen_sort@@Base+0x1e8c>
   1ba70:	ldr	r0, [r3]
   1ba74:	ldr	r3, [pc, #1616]	; 1c0cc <__flatcc_gen_sort@@Base+0x1ddc>
   1ba78:	str	r3, [sp]
   1ba7c:	mov	r3, #226	; 0xe2
   1ba80:	mov	r2, r4
   1ba84:	ldr	r1, [pc, #1784]	; 1c184 <__flatcc_gen_sort@@Base+0x1e94>
   1ba88:	bl	14094 <fprintf@plt>
   1ba8c:	ldr	r3, [pc, #1632]	; 1c0f4 <__flatcc_gen_sort@@Base+0x1e04>
   1ba90:	mov	r2, #226	; 0xe2
   1ba94:	mov	r1, r4
   1ba98:	ldr	r0, [pc, #1772]	; 1c18c <__flatcc_gen_sort@@Base+0x1e9c>
   1ba9c:	bl	14148 <__assert_fail@plt>
   1baa0:	ldr	r2, [pc, #1616]	; 1c0f8 <__flatcc_gen_sort@@Base+0x1e08>
   1baa4:	b	1ba20 <__flatcc_gen_sort@@Base+0x1730>
   1baa8:	ldr	r2, [pc, #1612]	; 1c0fc <__flatcc_gen_sort@@Base+0x1e0c>
   1baac:	b	1ba20 <__flatcc_gen_sort@@Base+0x1730>
   1bab0:	sub	r2, r2, #1
   1bab4:	cmp	r2, #8
   1bab8:	ldrls	pc, [pc, r2, lsl #2]
   1babc:	b	1bb30 <__flatcc_gen_sort@@Base+0x1840>
   1bac0:	andeq	fp, r1, r8, ror #22
   1bac4:	andeq	fp, r1, r4, ror #21
   1bac8:	andeq	fp, r1, r0, ror fp
   1bacc:	andeq	fp, r1, r0, lsl #22
   1bad0:	andeq	fp, r1, r8, lsl #22
   1bad4:	andeq	fp, r1, r0, lsl fp
   1bad8:	andeq	fp, r1, r8, lsl fp
   1badc:	andeq	fp, r1, r0, lsr #22
   1bae0:	andeq	fp, r1, r8, lsr #22
   1bae4:	ldr	r2, [pc, #1520]	; 1c0dc <__flatcc_gen_sort@@Base+0x1dec>
   1bae8:	ldrd	r0, [r4, #48]	; 0x30
   1baec:	strd	r0, [sp]
   1baf0:	ldr	r1, [pc, #1552]	; 1c108 <__flatcc_gen_sort@@Base+0x1e18>
   1baf4:	add	r0, sp, #68	; 0x44
   1baf8:	bl	14100 <sprintf@plt>
   1bafc:	b	1bc64 <__flatcc_gen_sort@@Base+0x1974>
   1bb00:	ldr	r2, [pc, #1496]	; 1c0e0 <__flatcc_gen_sort@@Base+0x1df0>
   1bb04:	b	1bae8 <__flatcc_gen_sort@@Base+0x17f8>
   1bb08:	ldr	r2, [pc, #1488]	; 1c0e0 <__flatcc_gen_sort@@Base+0x1df0>
   1bb0c:	b	1bae8 <__flatcc_gen_sort@@Base+0x17f8>
   1bb10:	ldr	r2, [pc, #1484]	; 1c0e4 <__flatcc_gen_sort@@Base+0x1df4>
   1bb14:	b	1bae8 <__flatcc_gen_sort@@Base+0x17f8>
   1bb18:	ldr	r2, [pc, #1480]	; 1c0e8 <__flatcc_gen_sort@@Base+0x1df8>
   1bb1c:	b	1bae8 <__flatcc_gen_sort@@Base+0x17f8>
   1bb20:	ldr	r2, [pc, #1476]	; 1c0ec <__flatcc_gen_sort@@Base+0x1dfc>
   1bb24:	b	1bae8 <__flatcc_gen_sort@@Base+0x17f8>
   1bb28:	ldr	r2, [pc, #1472]	; 1c0f0 <__flatcc_gen_sort@@Base+0x1e00>
   1bb2c:	b	1bae8 <__flatcc_gen_sort@@Base+0x17f8>
   1bb30:	ldr	r4, [pc, #1424]	; 1c0c8 <__flatcc_gen_sort@@Base+0x1dd8>
   1bb34:	ldr	r3, [pc, #1600]	; 1c17c <__flatcc_gen_sort@@Base+0x1e8c>
   1bb38:	ldr	r0, [r3]
   1bb3c:	ldr	r3, [pc, #1416]	; 1c0cc <__flatcc_gen_sort@@Base+0x1ddc>
   1bb40:	str	r3, [sp]
   1bb44:	mov	r3, #226	; 0xe2
   1bb48:	mov	r2, r4
   1bb4c:	ldr	r1, [pc, #1584]	; 1c184 <__flatcc_gen_sort@@Base+0x1e94>
   1bb50:	bl	14094 <fprintf@plt>
   1bb54:	ldr	r3, [pc, #1432]	; 1c0f4 <__flatcc_gen_sort@@Base+0x1e04>
   1bb58:	mov	r2, #226	; 0xe2
   1bb5c:	mov	r1, r4
   1bb60:	ldr	r0, [pc, #1572]	; 1c18c <__flatcc_gen_sort@@Base+0x1e9c>
   1bb64:	bl	14148 <__assert_fail@plt>
   1bb68:	ldr	r2, [pc, #1416]	; 1c0f8 <__flatcc_gen_sort@@Base+0x1e08>
   1bb6c:	b	1bae8 <__flatcc_gen_sort@@Base+0x17f8>
   1bb70:	ldr	r2, [pc, #1412]	; 1c0fc <__flatcc_gen_sort@@Base+0x1e0c>
   1bb74:	b	1bae8 <__flatcc_gen_sort@@Base+0x17f8>
   1bb78:	sub	r2, r2, #1
   1bb7c:	cmp	r2, #8
   1bb80:	ldrls	pc, [pc, r2, lsl #2]
   1bb84:	b	1bbf4 <__flatcc_gen_sort@@Base+0x1904>
   1bb88:	andeq	fp, r1, ip, lsr #24
   1bb8c:	andeq	fp, r1, ip, lsr #23
   1bb90:	andeq	fp, r1, r4, lsr ip
   1bb94:	andeq	fp, r1, r4, asr #23
   1bb98:	andeq	fp, r1, ip, asr #23
   1bb9c:	ldrdeq	fp, [r1], -r4
   1bba0:	ldrdeq	fp, [r1], -ip
   1bba4:	andeq	fp, r1, r4, ror #23
   1bba8:	andeq	fp, r1, ip, ror #23
   1bbac:	ldr	r2, [pc, #1320]	; 1c0dc <__flatcc_gen_sort@@Base+0x1dec>
   1bbb0:	ldrb	r3, [r4, #48]	; 0x30
   1bbb4:	ldr	r1, [pc, #1360]	; 1c10c <__flatcc_gen_sort@@Base+0x1e1c>
   1bbb8:	add	r0, sp, #68	; 0x44
   1bbbc:	bl	14100 <sprintf@plt>
   1bbc0:	b	1bc64 <__flatcc_gen_sort@@Base+0x1974>
   1bbc4:	ldr	r2, [pc, #1300]	; 1c0e0 <__flatcc_gen_sort@@Base+0x1df0>
   1bbc8:	b	1bbb0 <__flatcc_gen_sort@@Base+0x18c0>
   1bbcc:	ldr	r2, [pc, #1292]	; 1c0e0 <__flatcc_gen_sort@@Base+0x1df0>
   1bbd0:	b	1bbb0 <__flatcc_gen_sort@@Base+0x18c0>
   1bbd4:	ldr	r2, [pc, #1288]	; 1c0e4 <__flatcc_gen_sort@@Base+0x1df4>
   1bbd8:	b	1bbb0 <__flatcc_gen_sort@@Base+0x18c0>
   1bbdc:	ldr	r2, [pc, #1284]	; 1c0e8 <__flatcc_gen_sort@@Base+0x1df8>
   1bbe0:	b	1bbb0 <__flatcc_gen_sort@@Base+0x18c0>
   1bbe4:	ldr	r2, [pc, #1280]	; 1c0ec <__flatcc_gen_sort@@Base+0x1dfc>
   1bbe8:	b	1bbb0 <__flatcc_gen_sort@@Base+0x18c0>
   1bbec:	ldr	r2, [pc, #1276]	; 1c0f0 <__flatcc_gen_sort@@Base+0x1e00>
   1bbf0:	b	1bbb0 <__flatcc_gen_sort@@Base+0x18c0>
   1bbf4:	ldr	r4, [pc, #1228]	; 1c0c8 <__flatcc_gen_sort@@Base+0x1dd8>
   1bbf8:	ldr	r3, [pc, #1404]	; 1c17c <__flatcc_gen_sort@@Base+0x1e8c>
   1bbfc:	ldr	r0, [r3]
   1bc00:	ldr	r3, [pc, #1220]	; 1c0cc <__flatcc_gen_sort@@Base+0x1ddc>
   1bc04:	str	r3, [sp]
   1bc08:	mov	r3, #226	; 0xe2
   1bc0c:	mov	r2, r4
   1bc10:	ldr	r1, [pc, #1388]	; 1c184 <__flatcc_gen_sort@@Base+0x1e94>
   1bc14:	bl	14094 <fprintf@plt>
   1bc18:	ldr	r3, [pc, #1236]	; 1c0f4 <__flatcc_gen_sort@@Base+0x1e04>
   1bc1c:	mov	r2, #226	; 0xe2
   1bc20:	mov	r1, r4
   1bc24:	ldr	r0, [pc, #1376]	; 1c18c <__flatcc_gen_sort@@Base+0x1e9c>
   1bc28:	bl	14148 <__assert_fail@plt>
   1bc2c:	ldr	r2, [pc, #1220]	; 1c0f8 <__flatcc_gen_sort@@Base+0x1e08>
   1bc30:	b	1bbb0 <__flatcc_gen_sort@@Base+0x18c0>
   1bc34:	ldr	r2, [pc, #1216]	; 1c0fc <__flatcc_gen_sort@@Base+0x1e0c>
   1bc38:	b	1bbb0 <__flatcc_gen_sort@@Base+0x18c0>
   1bc3c:	cmp	r2, #11
   1bc40:	vldreq	d7, [r4, #48]	; 0x30
   1bc44:	vcvteq.f32.f64	s14, d7
   1bc48:	vcvteq.f64.f32	d7, s14
   1bc4c:	vmoveq	r2, r3, d7
   1bc50:	ldreq	r1, [pc, #1212]	; 1c114 <__flatcc_gen_sort@@Base+0x1e24>
   1bc54:	ldrdne	r2, [r4, #48]	; 0x30
   1bc58:	ldrne	r1, [pc, #1200]	; 1c110 <__flatcc_gen_sort@@Base+0x1e20>
   1bc5c:	add	r0, sp, #68	; 0x44
   1bc60:	bl	14100 <sprintf@plt>
   1bc64:	add	r3, sp, #68	; 0x44
   1bc68:	str	r3, [sp, #44]	; 0x2c
   1bc6c:	ldrh	r3, [r4, #74]	; 0x4a
   1bc70:	str	r3, [sp, #40]	; 0x28
   1bc74:	ldrd	r2, [r4, #88]	; 0x58
   1bc78:	strd	r2, [sp, #32]
   1bc7c:	add	r3, sp, #168	; 0xa8
   1bc80:	str	r3, [sp, #28]
   1bc84:	str	r3, [sp, #24]
   1bc88:	str	r6, [sp, #20]
   1bc8c:	str	r5, [sp, #16]
   1bc90:	add	r3, sp, #388	; 0x184
   1bc94:	str	r3, [sp, #12]
   1bc98:	str	r7, [sp, #8]
   1bc9c:	ldrd	r2, [r4, #96]	; 0x60
   1bca0:	strd	r2, [sp]
   1bca4:	mov	r2, r7
   1bca8:	ldr	r1, [pc, #1156]	; 1c134 <__flatcc_gen_sort@@Base+0x1e44>
   1bcac:	ldr	r0, [r8, #204]	; 0xcc
   1bcb0:	bl	14094 <fprintf@plt>
   1bcb4:	b	1b1f0 <__flatcc_gen_sort@@Base+0xf00>
   1bcb8:	ldr	r4, [pc, #1032]	; 1c0c8 <__flatcc_gen_sort@@Base+0x1dd8>
   1bcbc:	ldr	r3, [pc, #1208]	; 1c17c <__flatcc_gen_sort@@Base+0x1e8c>
   1bcc0:	ldr	r0, [r3]
   1bcc4:	ldr	r3, [pc, #1024]	; 1c0cc <__flatcc_gen_sort@@Base+0x1ddc>
   1bcc8:	str	r3, [sp]
   1bccc:	mov	r3, #260	; 0x104
   1bcd0:	mov	r2, r4
   1bcd4:	ldr	r1, [pc, #1192]	; 1c184 <__flatcc_gen_sort@@Base+0x1e94>
   1bcd8:	bl	14094 <fprintf@plt>
   1bcdc:	ldr	r3, [pc, #1076]	; 1c118 <__flatcc_gen_sort@@Base+0x1e28>
   1bce0:	mov	r2, #260	; 0x104
   1bce4:	mov	r1, r4
   1bce8:	ldr	r0, [pc, #1180]	; 1c18c <__flatcc_gen_sort@@Base+0x1e9c>
   1bcec:	bl	14148 <__assert_fail@plt>
   1bcf0:	add	r3, sp, #168	; 0xa8
   1bcf4:	str	r3, [sp, #24]
   1bcf8:	str	r6, [sp, #20]
   1bcfc:	str	r5, [sp, #16]
   1bd00:	add	r9, sp, #388	; 0x184
   1bd04:	str	r9, [sp, #12]
   1bd08:	str	r7, [sp, #8]
   1bd0c:	ldrd	r2, [r4, #96]	; 0x60
   1bd10:	strd	r2, [sp]
   1bd14:	mov	r2, r7
   1bd18:	ldr	r1, [pc, #1048]	; 1c138 <__flatcc_gen_sort@@Base+0x1e48>
   1bd1c:	ldr	r0, [r8, #204]	; 0xcc
   1bd20:	bl	14094 <fprintf@plt>
   1bd24:	mov	r3, #0
   1bd28:	str	r3, [sp, #4]
   1bd2c:	ldr	r3, [r4, #16]
   1bd30:	str	r3, [sp]
   1bd34:	mov	r3, r6
   1bd38:	mov	r2, r5
   1bd3c:	mov	r1, r9
   1bd40:	mov	r0, r8
   1bd44:	bl	1a484 <__flatcc_gen_sort@@Base+0x194>
   1bd48:	b	1b1f0 <__flatcc_gen_sort@@Base+0xf00>
   1bd4c:	ldr	r4, [pc, #1060]	; 1c178 <__flatcc_gen_sort@@Base+0x1e88>
   1bd50:	ldr	r3, [pc, #1060]	; 1c17c <__flatcc_gen_sort@@Base+0x1e8c>
   1bd54:	ldr	r0, [r3]
   1bd58:	ldr	r3, [pc, #988]	; 1c13c <__flatcc_gen_sort@@Base+0x1e4c>
   1bd5c:	str	r3, [sp]
   1bd60:	mov	r3, #1472	; 0x5c0
   1bd64:	mov	r2, r4
   1bd68:	ldr	r1, [pc, #1044]	; 1c184 <__flatcc_gen_sort@@Base+0x1e94>
   1bd6c:	bl	14094 <fprintf@plt>
   1bd70:	ldr	r3, [pc, #1040]	; 1c188 <__flatcc_gen_sort@@Base+0x1e98>
   1bd74:	mov	r2, #1472	; 0x5c0
   1bd78:	mov	r1, r4
   1bd7c:	ldr	r0, [pc, #1032]	; 1c18c <__flatcc_gen_sort@@Base+0x1e9c>
   1bd80:	bl	14148 <__assert_fail@plt>
   1bd84:	ldr	r3, [r4, #16]
   1bd88:	add	r2, sp, #168	; 0xa8
   1bd8c:	mov	r1, r3
   1bd90:	ldr	r0, [r3, #12]
   1bd94:	bl	15edc <__flatcc_fb_scoped_symbol_name@@Base>
   1bd98:	ldr	r2, [r4, #16]
   1bd9c:	ldrh	r3, [r2, #8]
   1bda0:	cmp	r3, #4
   1bda4:	ldrls	pc, [pc, r3, lsl #2]
   1bda8:	b	1bf14 <__flatcc_gen_sort@@Base+0x1c24>
   1bdac:	andeq	fp, r1, r0, lsr #28
   1bdb0:	andeq	fp, r1, r0, asr #27
   1bdb4:	andeq	fp, r1, r4, lsl pc
   1bdb8:	andeq	fp, r1, ip, ror lr
   1bdbc:			; <UNDEFINED> instruction: 0x0001beb8
   1bdc0:	ldrh	r3, [r2, #10]
   1bdc4:	tst	r3, #8
   1bdc8:	bne	1be08 <__flatcc_gen_sort@@Base+0x1b18>
   1bdcc:	add	r3, sp, #168	; 0xa8
   1bdd0:	str	r3, [sp, #28]
   1bdd4:	str	r3, [sp, #24]
   1bdd8:	str	r6, [sp, #20]
   1bddc:	str	r5, [sp, #16]
   1bde0:	add	r3, sp, #388	; 0x184
   1bde4:	str	r3, [sp, #12]
   1bde8:	str	r7, [sp, #8]
   1bdec:	ldrd	r2, [r4, #96]	; 0x60
   1bdf0:	strd	r2, [sp]
   1bdf4:	mov	r2, r7
   1bdf8:	mov	r1, fp
   1bdfc:	ldr	r0, [r8, #204]	; 0xcc
   1be00:	bl	14094 <fprintf@plt>
   1be04:	b	1b1f0 <__flatcc_gen_sort@@Base+0xf00>
   1be08:	ldr	r3, [r8, #204]	; 0xcc
   1be0c:	mov	r2, #32
   1be10:	mov	r1, #1
   1be14:	ldr	r0, [pc, #804]	; 1c140 <__flatcc_gen_sort@@Base+0x1e50>
   1be18:	bl	1401c <fwrite@plt>
   1be1c:	b	1bdcc <__flatcc_gen_sort@@Base+0x1adc>
   1be20:	ldrh	r3, [r2, #10]
   1be24:	tst	r3, #8
   1be28:	bne	1be64 <__flatcc_gen_sort@@Base+0x1b74>
   1be2c:	add	r3, sp, #168	; 0xa8
   1be30:	str	r3, [sp, #24]
   1be34:	str	r6, [sp, #20]
   1be38:	str	r5, [sp, #16]
   1be3c:	add	r3, sp, #388	; 0x184
   1be40:	str	r3, [sp, #12]
   1be44:	str	r7, [sp, #8]
   1be48:	ldrd	r2, [r4, #96]	; 0x60
   1be4c:	strd	r2, [sp]
   1be50:	mov	r2, r7
   1be54:	ldr	r1, [pc, #744]	; 1c144 <__flatcc_gen_sort@@Base+0x1e54>
   1be58:	ldr	r0, [r8, #204]	; 0xcc
   1be5c:	bl	14094 <fprintf@plt>
   1be60:	b	1b1f0 <__flatcc_gen_sort@@Base+0xf00>
   1be64:	ldr	r3, [r8, #204]	; 0xcc
   1be68:	mov	r2, #32
   1be6c:	mov	r1, #1
   1be70:	ldr	r0, [pc, #712]	; 1c140 <__flatcc_gen_sort@@Base+0x1e50>
   1be74:	bl	1401c <fwrite@plt>
   1be78:	b	1be2c <__flatcc_gen_sort@@Base+0x1b3c>
   1be7c:	add	r3, sp, #168	; 0xa8
   1be80:	str	r3, [sp, #28]
   1be84:	str	r3, [sp, #24]
   1be88:	str	r6, [sp, #20]
   1be8c:	str	r5, [sp, #16]
   1be90:	add	r3, sp, #388	; 0x184
   1be94:	str	r3, [sp, #12]
   1be98:	str	r7, [sp, #8]
   1be9c:	ldrd	r2, [r4, #96]	; 0x60
   1bea0:	strd	r2, [sp]
   1bea4:	mov	r2, r7
   1bea8:	ldr	r1, [pc, #664]	; 1c148 <__flatcc_gen_sort@@Base+0x1e58>
   1beac:	ldr	r0, [r8, #204]	; 0xcc
   1beb0:	bl	14094 <fprintf@plt>
   1beb4:	b	1b1f0 <__flatcc_gen_sort@@Base+0xf00>
   1beb8:	add	r3, sp, #168	; 0xa8
   1bebc:	str	r3, [sp, #24]
   1bec0:	str	r6, [sp, #20]
   1bec4:	str	r5, [sp, #16]
   1bec8:	add	r9, sp, #388	; 0x184
   1becc:	str	r9, [sp, #12]
   1bed0:	str	r7, [sp, #8]
   1bed4:	ldrd	r2, [r4, #96]	; 0x60
   1bed8:	strd	r2, [sp]
   1bedc:	mov	r2, r7
   1bee0:	ldr	r1, [pc, #612]	; 1c14c <__flatcc_gen_sort@@Base+0x1e5c>
   1bee4:	ldr	r0, [r8, #204]	; 0xcc
   1bee8:	bl	14094 <fprintf@plt>
   1beec:	mov	r3, #1
   1bef0:	str	r3, [sp, #4]
   1bef4:	ldr	r3, [r4, #16]
   1bef8:	str	r3, [sp]
   1befc:	mov	r3, r6
   1bf00:	mov	r2, r5
   1bf04:	mov	r1, r9
   1bf08:	mov	r0, r8
   1bf0c:	bl	1a484 <__flatcc_gen_sort@@Base+0x194>
   1bf10:	b	1b1f0 <__flatcc_gen_sort@@Base+0xf00>
   1bf14:	ldr	r5, [pc, #564]	; 1c150 <__flatcc_gen_sort@@Base+0x1e60>
   1bf18:	ldr	r4, [pc, #600]	; 1c178 <__flatcc_gen_sort@@Base+0x1e88>
   1bf1c:	ldr	r3, [pc, #600]	; 1c17c <__flatcc_gen_sort@@Base+0x1e8c>
   1bf20:	ldr	r0, [r3]
   1bf24:	ldr	r3, [pc, #552]	; 1c154 <__flatcc_gen_sort@@Base+0x1e64>
   1bf28:	str	r3, [sp]
   1bf2c:	mov	r3, r5
   1bf30:	mov	r2, r4
   1bf34:	ldr	r1, [pc, #584]	; 1c184 <__flatcc_gen_sort@@Base+0x1e94>
   1bf38:	bl	14094 <fprintf@plt>
   1bf3c:	ldr	r3, [pc, #580]	; 1c188 <__flatcc_gen_sort@@Base+0x1e98>
   1bf40:	mov	r2, r5
   1bf44:	mov	r1, r4
   1bf48:	ldr	r0, [pc, #572]	; 1c18c <__flatcc_gen_sort@@Base+0x1e9c>
   1bf4c:	bl	14148 <__assert_fail@plt>
   1bf50:	ldr	r5, [pc, #512]	; 1c158 <__flatcc_gen_sort@@Base+0x1e68>
   1bf54:	ldr	r4, [pc, #540]	; 1c178 <__flatcc_gen_sort@@Base+0x1e88>
   1bf58:	ldr	r3, [pc, #540]	; 1c17c <__flatcc_gen_sort@@Base+0x1e8c>
   1bf5c:	ldr	r0, [r3]
   1bf60:	ldr	r3, [pc, #500]	; 1c15c <__flatcc_gen_sort@@Base+0x1e6c>
   1bf64:	str	r3, [sp]
   1bf68:	mov	r3, r5
   1bf6c:	mov	r2, r4
   1bf70:	ldr	r1, [pc, #524]	; 1c184 <__flatcc_gen_sort@@Base+0x1e94>
   1bf74:	bl	14094 <fprintf@plt>
   1bf78:	ldr	r3, [pc, #520]	; 1c188 <__flatcc_gen_sort@@Base+0x1e98>
   1bf7c:	mov	r2, r5
   1bf80:	mov	r1, r4
   1bf84:	ldr	r0, [pc, #512]	; 1c18c <__flatcc_gen_sort@@Base+0x1e9c>
   1bf88:	bl	14148 <__assert_fail@plt>
   1bf8c:	ldr	r9, [pc, #524]	; 1c1a0 <__flatcc_gen_sort@@Base+0x1eb0>
   1bf90:	ldr	r2, [pc, #544]	; 1c1b8 <__flatcc_gen_sort@@Base+0x1ec8>
   1bf94:	str	r2, [sp, #56]	; 0x38
   1bf98:	ldr	r2, [pc, #516]	; 1c1a4 <__flatcc_gen_sort@@Base+0x1eb4>
   1bf9c:	str	r2, [sp, #60]	; 0x3c
   1bfa0:	b	1bfb8 <__flatcc_gen_sort@@Base+0x1cc8>
   1bfa4:	ldr	r9, [pc, #516]	; 1c1b0 <__flatcc_gen_sort@@Base+0x1ec0>
   1bfa8:	ldr	r2, [pc, #520]	; 1c1b8 <__flatcc_gen_sort@@Base+0x1ec8>
   1bfac:	str	r2, [sp, #56]	; 0x38
   1bfb0:	ldr	r2, [pc, #500]	; 1c1ac <__flatcc_gen_sort@@Base+0x1ebc>
   1bfb4:	str	r2, [sp, #60]	; 0x3c
   1bfb8:	ldrh	r2, [r4, #56]	; 0x38
   1bfbc:	sub	r2, r2, #3
   1bfc0:	cmp	r2, #3
   1bfc4:	ldrls	pc, [pc, r2, lsl #2]
   1bfc8:	b	1b740 <__flatcc_gen_sort@@Base+0x1450>
   1bfcc:	andeq	fp, r1, ip, ror #13
   1bfd0:	andeq	fp, r1, r0, asr #9
   1bfd4:	andeq	fp, r1, r0, lsr r3
   1bfd8:	andeq	fp, r1, r8, asr #11
   1bfdc:	str	r7, [sp, #56]	; 0x38
   1bfe0:	ldr	r9, [pc, #476]	; 1c1c4 <__flatcc_gen_sort@@Base+0x1ed4>
   1bfe4:	ldr	r2, [pc, #456]	; 1c1b4 <__flatcc_gen_sort@@Base+0x1ec4>
   1bfe8:	str	r2, [sp, #60]	; 0x3c
   1bfec:	b	1bfb8 <__flatcc_gen_sort@@Base+0x1cc8>
   1bff0:	ldr	r2, [pc, #448]	; 1c1b8 <__flatcc_gen_sort@@Base+0x1ec8>
   1bff4:	str	r2, [sp, #56]	; 0x38
   1bff8:	b	1bfe0 <__flatcc_gen_sort@@Base+0x1cf0>
   1bffc:	ldr	r9, [pc, #444]	; 1c1c0 <__flatcc_gen_sort@@Base+0x1ed0>
   1c000:	ldr	r2, [pc, #432]	; 1c1b8 <__flatcc_gen_sort@@Base+0x1ec8>
   1c004:	str	r2, [sp, #56]	; 0x38
   1c008:	ldr	r2, [pc, #428]	; 1c1bc <__flatcc_gen_sort@@Base+0x1ecc>
   1c00c:	str	r2, [sp, #60]	; 0x3c
   1c010:	b	1bfb8 <__flatcc_gen_sort@@Base+0x1cc8>
   1c014:	ldrh	r2, [r4, #56]	; 0x38
   1c018:	sub	r2, r2, #3
   1c01c:	cmp	r2, #3
   1c020:	ldrls	pc, [pc, r2, lsl #2]
   1c024:	b	1b740 <__flatcc_gen_sort@@Base+0x1450>
   1c028:	andeq	fp, r1, r4, asr #13
   1c02c:	muleq	r1, r8, r4
   1c030:	andeq	fp, r1, r8, lsl #6
   1c034:	andeq	fp, r1, r0, asr r6
   1c038:	ldrh	r2, [r4, #56]	; 0x38
   1c03c:	sub	r2, r2, #3
   1c040:	cmp	r2, #3
   1c044:	ldrls	pc, [pc, r2, lsl #2]
   1c048:	b	1b740 <__flatcc_gen_sort@@Base+0x1450>
   1c04c:	ldrdeq	fp, [r1], -r4
   1c050:			; <UNDEFINED> instruction: 0x0001b4b0
   1c054:	andeq	fp, r1, r0, lsr #6
   1c058:	andeq	fp, r1, ip, ror #12
   1c05c:	ldr	r9, [pc, #252]	; 1c160 <__flatcc_gen_sort@@Base+0x1e70>
   1c060:	ldr	r2, [pc, #336]	; 1c1b8 <__flatcc_gen_sort@@Base+0x1ec8>
   1c064:	str	r2, [sp, #56]	; 0x38
   1c068:	ldr	r2, [pc, #244]	; 1c164 <__flatcc_gen_sort@@Base+0x1e74>
   1c06c:	str	r2, [sp, #60]	; 0x3c
   1c070:	b	1bfb8 <__flatcc_gen_sort@@Base+0x1cc8>
   1c074:	ldr	r9, [pc, #332]	; 1c1c8 <__flatcc_gen_sort@@Base+0x1ed8>
   1c078:	ldr	r2, [pc, #312]	; 1c1b8 <__flatcc_gen_sort@@Base+0x1ec8>
   1c07c:	str	r2, [sp, #56]	; 0x38
   1c080:	ldr	r2, [pc, #288]	; 1c1a8 <__flatcc_gen_sort@@Base+0x1eb8>
   1c084:	str	r2, [sp, #60]	; 0x3c
   1c088:	b	1bfb8 <__flatcc_gen_sort@@Base+0x1cc8>
   1c08c:	ldrh	r2, [r4, #56]	; 0x38
   1c090:	sub	r2, r2, #3
   1c094:	cmp	r2, #3
   1c098:	ldrls	pc, [pc, r2, lsl #2]
   1c09c:	b	1b740 <__flatcc_gen_sort@@Base+0x1450>
   1c0a0:	andeq	fp, r1, r0, lsl #14
   1c0a4:	strdeq	fp, [r1], -r4
   1c0a8:	andeq	fp, r1, r4, ror #6
   1c0ac:	andeq	fp, r1, r4, lsr r6
   1c0b0:	ldr	r2, [pc, #168]	; 1c160 <__flatcc_gen_sort@@Base+0x1e70>
   1c0b4:	ldr	r3, [pc, #252]	; 1c1b8 <__flatcc_gen_sort@@Base+0x1ec8>
   1c0b8:	ldr	r1, [pc, #164]	; 1c164 <__flatcc_gen_sort@@Base+0x1e74>
   1c0bc:	b	1c1d8 <__flatcc_gen_sort@@Base+0x1ee8>
   1c0c0:	andeq	r5, r4, ip, asr #6
   1c0c4:	andeq	r5, r4, r0, asr #12
   1c0c8:	andeq	ip, r3, ip, asr sp
   1c0cc:			; <UNDEFINED> instruction: 0x0003cdb4
   1c0d0:	andeq	r4, r4, r8, lsl #29
   1c0d4:	andeq	ip, r3, r8, lsr ip
   1c0d8:	strheq	sp, [r3], -r4
   1c0dc:			; <UNDEFINED> instruction: 0x0003ccbc
   1c0e0:	ldrdeq	ip, [r3], -r4
   1c0e4:	ldrdeq	ip, [r3], -ip	; <UNPREDICTABLE>
   1c0e8:	andeq	ip, r3, r4, ror #25
   1c0ec:	andeq	ip, r3, ip, ror #25
   1c0f0:	strdeq	ip, [r3], -r4
   1c0f4:	andeq	r4, r4, r8, ror #29
   1c0f8:			; <UNDEFINED> instruction: 0x0003ccb0
   1c0fc:	andeq	ip, r3, r8, asr #25
   1c100:	andeq	ip, r3, ip, asr lr
   1c104:	andeq	r5, r4, r4, lsl #7
   1c108:	andeq	ip, r3, r8, ror #28
   1c10c:	andeq	ip, r3, r4, ror lr
   1c110:	andeq	ip, r3, r0, lsl #29
   1c114:	andeq	ip, r3, ip, ror lr
   1c118:	strdeq	r4, [r4], -r4	; <UNPREDICTABLE>
   1c11c:	andeq	r5, r4, r4, lsl #8
   1c120:	andeq	r5, r4, r8, asr r4
   1c124:	ldrdeq	r5, [r4], -r8
   1c128:	andeq	r5, r4, r4, lsl #10
   1c12c:	andeq	r5, r4, r8, lsr r5
   1c130:	andeq	r5, r4, r4, ror r5
   1c134:	andeq	r5, r4, r4, lsr #11
   1c138:	andeq	r5, r4, ip, ror #11
   1c13c:	andeq	sp, r3, r4, lsl pc
   1c140:	andeq	r5, r4, ip, lsl r6
   1c144:	andeq	r5, r4, r8, ror r6
   1c148:			; <UNDEFINED> instruction: 0x000456b0
   1c14c:	andeq	r5, r4, ip, ror #13
   1c150:	andeq	r0, r0, r3, ror #11
   1c154:	andeq	sp, r3, r0, ror #30
   1c158:	andeq	r0, r0, r8, ror #11
   1c15c:	andeq	lr, r3, r4, lsr #32
   1c160:	andeq	ip, r3, r4, ror ip
   1c164:	ldrdeq	sp, [r3], -ip
   1c168:	andeq	ip, r3, ip, ror ip
   1c16c:	andeq	sp, r3, r4, ror #1
   1c170:	andeq	r5, r4, ip, asr #7
   1c174:	muleq	r0, r6, r5
   1c178:	andeq	r4, r4, r8, ror #31
   1c17c:	andeq	r7, r6, r8, lsr #1
   1c180:			; <UNDEFINED> instruction: 0x000454b0
   1c184:	andeq	ip, r3, r8, lsr #27
   1c188:	andeq	r4, r4, r4, lsl #30
   1c18c:	andeq	r5, r4, r0, ror #3
   1c190:	andeq	ip, r3, r4, lsl #25
   1c194:	andeq	sp, r3, ip, ror #1
   1c198:	andeq	ip, r3, ip, lsl #25
   1c19c:	muleq	r3, r4, ip
   1c1a0:	andeq	ip, r3, r4, asr #24
   1c1a4:	strheq	sp, [r3], -ip
   1c1a8:	andeq	sp, r3, r4, asr #1
   1c1ac:	andeq	sp, r3, ip, asr #1
   1c1b0:	andeq	ip, r3, ip, asr ip
   1c1b4:	andeq	r4, r5, r4, asr #24
   1c1b8:	muleq	r4, r0, r4
   1c1bc:	ldrdeq	sp, [r3], -r4
   1c1c0:	andeq	ip, r3, ip, ror #24
   1c1c4:	andeq	ip, r3, r4, ror #24
   1c1c8:	andeq	ip, r3, r0, asr ip
   1c1cc:	ldr	r2, [pc, #-108]	; 1c168 <__flatcc_gen_sort@@Base+0x1e78>
   1c1d0:	ldr	r3, [pc, #-32]	; 1c1b8 <__flatcc_gen_sort@@Base+0x1ec8>
   1c1d4:	ldr	r1, [pc, #-112]	; 1c16c <__flatcc_gen_sort@@Base+0x1e7c>
   1c1d8:	str	r2, [sp, #36]	; 0x24
   1c1dc:	str	r3, [sp, #32]
   1c1e0:	str	r1, [sp, #28]
   1c1e4:	str	r7, [sp, #24]
   1c1e8:	str	r6, [sp, #20]
   1c1ec:	str	r5, [sp, #16]
   1c1f0:	add	r3, sp, #388	; 0x184
   1c1f4:	str	r3, [sp, #12]
   1c1f8:	str	r7, [sp, #8]
   1c1fc:	ldrd	r2, [r4, #96]	; 0x60
   1c200:	strd	r2, [sp]
   1c204:	mov	r2, r7
   1c208:	ldr	r1, [pc, #-160]	; 1c170 <__flatcc_gen_sort@@Base+0x1e80>
   1c20c:	ldr	r0, [r8, #204]	; 0xcc
   1c210:	bl	14094 <fprintf@plt>
   1c214:	ldr	r3, [r4, #104]	; 0x68
   1c218:	cmp	r3, #0
   1c21c:	beq	1b1f0 <__flatcc_gen_sort@@Base+0xf00>
   1c220:	ldrh	r2, [r3, #8]
   1c224:	cmp	r2, #0
   1c228:	beq	1b808 <__flatcc_gen_sort@@Base+0x1518>
   1c22c:	cmp	r2, #1
   1c230:	beq	1b850 <__flatcc_gen_sort@@Base+0x1560>
   1c234:	ldr	r5, [pc, #-200]	; 1c174 <__flatcc_gen_sort@@Base+0x1e84>
   1c238:	ldr	r4, [pc, #-200]	; 1c178 <__flatcc_gen_sort@@Base+0x1e88>
   1c23c:	ldr	r3, [pc, #-200]	; 1c17c <__flatcc_gen_sort@@Base+0x1e8c>
   1c240:	ldr	r0, [r3]
   1c244:	ldr	r3, [pc, #-204]	; 1c180 <__flatcc_gen_sort@@Base+0x1e90>
   1c248:	str	r3, [sp]
   1c24c:	mov	r3, r5
   1c250:	mov	r2, r4
   1c254:	ldr	r1, [pc, #-216]	; 1c184 <__flatcc_gen_sort@@Base+0x1e94>
   1c258:	bl	14094 <fprintf@plt>
   1c25c:	ldr	r3, [pc, #-220]	; 1c188 <__flatcc_gen_sort@@Base+0x1e98>
   1c260:	mov	r2, r5
   1c264:	mov	r1, r4
   1c268:	ldr	r0, [pc, #-228]	; 1c18c <__flatcc_gen_sort@@Base+0x1e9c>
   1c26c:	bl	14148 <__assert_fail@plt>
   1c270:	ldr	r2, [pc, #-232]	; 1c190 <__flatcc_gen_sort@@Base+0x1ea0>
   1c274:	ldr	r3, [pc, #-196]	; 1c1b8 <__flatcc_gen_sort@@Base+0x1ec8>
   1c278:	ldr	r1, [pc, #-236]	; 1c194 <__flatcc_gen_sort@@Base+0x1ea4>
   1c27c:	b	1c1d8 <__flatcc_gen_sort@@Base+0x1ee8>
   1c280:	ldr	r2, [pc, #-240]	; 1c198 <__flatcc_gen_sort@@Base+0x1ea8>
   1c284:	ldr	r3, [pc, #-212]	; 1c1b8 <__flatcc_gen_sort@@Base+0x1ec8>
   1c288:	mov	r1, r2
   1c28c:	b	1c1d8 <__flatcc_gen_sort@@Base+0x1ee8>
   1c290:	ldr	r2, [pc, #-252]	; 1c19c <__flatcc_gen_sort@@Base+0x1eac>
   1c294:	ldr	r3, [pc, #-228]	; 1c1b8 <__flatcc_gen_sort@@Base+0x1ec8>
   1c298:	mov	r1, r2
   1c29c:	b	1c1d8 <__flatcc_gen_sort@@Base+0x1ee8>
   1c2a0:	ldr	r2, [pc, #-264]	; 1c1a0 <__flatcc_gen_sort@@Base+0x1eb0>
   1c2a4:	ldr	r3, [pc, #-244]	; 1c1b8 <__flatcc_gen_sort@@Base+0x1ec8>
   1c2a8:	ldr	r1, [pc, #-268]	; 1c1a4 <__flatcc_gen_sort@@Base+0x1eb4>
   1c2ac:	b	1c1d8 <__flatcc_gen_sort@@Base+0x1ee8>
   1c2b0:	ldr	r2, [pc, #-240]	; 1c1c8 <__flatcc_gen_sort@@Base+0x1ed8>
   1c2b4:	ldr	r3, [pc, #-260]	; 1c1b8 <__flatcc_gen_sort@@Base+0x1ec8>
   1c2b8:	ldr	r1, [pc, #-280]	; 1c1a8 <__flatcc_gen_sort@@Base+0x1eb8>
   1c2bc:	b	1c1d8 <__flatcc_gen_sort@@Base+0x1ee8>
   1c2c0:	ldr	r2, [pc, #-280]	; 1c1b0 <__flatcc_gen_sort@@Base+0x1ec0>
   1c2c4:	ldr	r3, [pc, #-276]	; 1c1b8 <__flatcc_gen_sort@@Base+0x1ec8>
   1c2c8:	ldr	r1, [pc, #-292]	; 1c1ac <__flatcc_gen_sort@@Base+0x1ebc>
   1c2cc:	b	1c1d8 <__flatcc_gen_sort@@Base+0x1ee8>
   1c2d0:	mov	r3, r7
   1c2d4:	ldr	r2, [pc, #-280]	; 1c1c4 <__flatcc_gen_sort@@Base+0x1ed4>
   1c2d8:	ldr	r1, [pc, #-300]	; 1c1b4 <__flatcc_gen_sort@@Base+0x1ec4>
   1c2dc:	b	1c1d8 <__flatcc_gen_sort@@Base+0x1ee8>
   1c2e0:	ldr	r3, [pc, #-304]	; 1c1b8 <__flatcc_gen_sort@@Base+0x1ec8>
   1c2e4:	b	1c2d4 <__flatcc_gen_sort@@Base+0x1fe4>
   1c2e8:	ldr	r2, [pc, #-304]	; 1c1c0 <__flatcc_gen_sort@@Base+0x1ed0>
   1c2ec:	ldr	r3, [pc, #-316]	; 1c1b8 <__flatcc_gen_sort@@Base+0x1ec8>
   1c2f0:	ldr	r1, [pc, #-316]	; 1c1bc <__flatcc_gen_sort@@Base+0x1ecc>
   1c2f4:	b	1c1d8 <__flatcc_gen_sort@@Base+0x1ee8>
   1c2f8:	ldrh	r2, [r4, #56]	; 0x38
   1c2fc:	sub	r2, r2, #3
   1c300:	cmp	r2, #3
   1c304:	ldrls	pc, [pc, r2, lsl #2]
   1c308:	b	1b740 <__flatcc_gen_sort@@Base+0x1450>
   1c30c:	andeq	fp, r1, r0, lsl r7
   1c310:	andeq	fp, r1, ip, lsl #10
   1c314:	andeq	fp, r1, ip, ror r3
   1c318:	andeq	fp, r1, ip, ror #12
   1c31c:	ldr	r1, [r8, #204]	; 0xcc
   1c320:	mov	r0, #10
   1c324:	bl	140f4 <fputc@plt>
   1c328:	mov	r0, #0
   1c32c:	add	sp, sp, #612	; 0x264
   1c330:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001c334 <__flatcc_fb_gen_common_c_builder_header@@Base>:
   1c334:	push	{r4, r5, lr}
   1c338:	sub	sp, sp, #12
   1c33c:	mov	r4, r0
   1c340:	add	r5, r0, #102	; 0x66
   1c344:	mov	r2, r5
   1c348:	ldr	r1, [pc, #1836]	; 1ca7c <__flatcc_fb_gen_common_c_builder_header@@Base+0x748>
   1c34c:	ldr	r0, [r0, #204]	; 0xcc
   1c350:	bl	14094 <fprintf@plt>
   1c354:	mov	r2, r5
   1c358:	ldr	r1, [pc, #1824]	; 1ca80 <__flatcc_fb_gen_common_c_builder_header@@Base+0x74c>
   1c35c:	ldr	r0, [r4, #204]	; 0xcc
   1c360:	bl	14094 <fprintf@plt>
   1c364:	ldr	r3, [r4, #204]	; 0xcc
   1c368:	mov	r2, #81	; 0x51
   1c36c:	mov	r1, #1
   1c370:	ldr	r0, [pc, #1804]	; 1ca84 <__flatcc_fb_gen_common_c_builder_header@@Base+0x750>
   1c374:	bl	1401c <fwrite@plt>
   1c378:	ldr	r3, [r4, #204]	; 0xcc
   1c37c:	mov	r2, #53	; 0x35
   1c380:	mov	r1, #1
   1c384:	ldr	r0, [pc, #1788]	; 1ca88 <__flatcc_fb_gen_common_c_builder_header@@Base+0x754>
   1c388:	bl	1401c <fwrite@plt>
   1c38c:	ldr	r3, [r4, #212]	; 0xd4
   1c390:	ldr	r3, [r3, #140]	; 0x8c
   1c394:	cmp	r3, #0
   1c398:	bne	1c9c4 <__flatcc_fb_gen_common_c_builder_header@@Base+0x690>
   1c39c:	ldr	r3, [r4, #204]	; 0xcc
   1c3a0:	mov	r2, #22
   1c3a4:	mov	r1, #1
   1c3a8:	ldr	r0, [pc, #1756]	; 1ca8c <__flatcc_fb_gen_common_c_builder_header@@Base+0x758>
   1c3ac:	bl	1401c <fwrite@plt>
   1c3b0:	ldr	r3, [r4, #204]	; 0xcc
   1c3b4:	mov	r2, #35	; 0x23
   1c3b8:	mov	r1, #1
   1c3bc:	ldr	r0, [pc, #1740]	; 1ca90 <__flatcc_fb_gen_common_c_builder_header@@Base+0x75c>
   1c3c0:	bl	1401c <fwrite@plt>
   1c3c4:	ldr	r3, [r4, #204]	; 0xcc
   1c3c8:	mov	r2, #7
   1c3cc:	mov	r1, #1
   1c3d0:	ldr	r0, [pc, #1724]	; 1ca94 <__flatcc_fb_gen_common_c_builder_header@@Base+0x760>
   1c3d4:	bl	1401c <fwrite@plt>
   1c3d8:	ldr	r1, [pc, #1720]	; 1ca98 <__flatcc_fb_gen_common_c_builder_header@@Base+0x764>
   1c3dc:	mov	r0, r4
   1c3e0:	bl	13fbc <strcmp@plt>
   1c3e4:	cmp	r0, #0
   1c3e8:	bne	1c9dc <__flatcc_fb_gen_common_c_builder_header@@Base+0x6a8>
   1c3ec:	mov	r3, r4
   1c3f0:	mov	r2, r4
   1c3f4:	ldr	r1, [pc, #1696]	; 1ca9c <__flatcc_fb_gen_common_c_builder_header@@Base+0x768>
   1c3f8:	ldr	r0, [r4, #204]	; 0xcc
   1c3fc:	bl	14094 <fprintf@plt>
   1c400:	mov	r3, r4
   1c404:	mov	r2, r4
   1c408:	ldr	r1, [pc, #1680]	; 1caa0 <__flatcc_fb_gen_common_c_builder_header@@Base+0x76c>
   1c40c:	ldr	r0, [r4, #204]	; 0xcc
   1c410:	bl	14094 <fprintf@plt>
   1c414:	ldr	r1, [pc, #1672]	; 1caa4 <__flatcc_fb_gen_common_c_builder_header@@Base+0x770>
   1c418:	mov	r0, r4
   1c41c:	bl	13fbc <strcmp@plt>
   1c420:	cmp	r0, #0
   1c424:	bne	1ca40 <__flatcc_fb_gen_common_c_builder_header@@Base+0x70c>
   1c428:	ldr	r1, [r4, #204]	; 0xcc
   1c42c:	mov	r0, #10
   1c430:	bl	140f4 <fputc@plt>
   1c434:	mov	r2, r4
   1c438:	ldr	r1, [pc, #1640]	; 1caa8 <__flatcc_fb_gen_common_c_builder_header@@Base+0x774>
   1c43c:	ldr	r0, [r4, #204]	; 0xcc
   1c440:	bl	14094 <fprintf@plt>
   1c444:	mov	r2, r4
   1c448:	ldr	r1, [pc, #1628]	; 1caac <__flatcc_fb_gen_common_c_builder_header@@Base+0x778>
   1c44c:	ldr	r0, [r4, #204]	; 0xcc
   1c450:	bl	14094 <fprintf@plt>
   1c454:	str	r4, [sp]
   1c458:	mov	r3, r4
   1c45c:	mov	r2, r4
   1c460:	ldr	r1, [pc, #1608]	; 1cab0 <__flatcc_fb_gen_common_c_builder_header@@Base+0x77c>
   1c464:	ldr	r0, [r4, #204]	; 0xcc
   1c468:	bl	14094 <fprintf@plt>
   1c46c:	mov	r2, r4
   1c470:	ldr	r1, [pc, #1596]	; 1cab4 <__flatcc_fb_gen_common_c_builder_header@@Base+0x780>
   1c474:	ldr	r0, [r4, #204]	; 0xcc
   1c478:	bl	14094 <fprintf@plt>
   1c47c:	mov	r2, r4
   1c480:	ldr	r1, [pc, #1584]	; 1cab8 <__flatcc_fb_gen_common_c_builder_header@@Base+0x784>
   1c484:	ldr	r0, [r4, #204]	; 0xcc
   1c488:	bl	14094 <fprintf@plt>
   1c48c:	mov	r2, r4
   1c490:	ldr	r1, [pc, #1572]	; 1cabc <__flatcc_fb_gen_common_c_builder_header@@Base+0x788>
   1c494:	ldr	r0, [r4, #204]	; 0xcc
   1c498:	bl	14094 <fprintf@plt>
   1c49c:	mov	r2, r4
   1c4a0:	ldr	r1, [pc, #1560]	; 1cac0 <__flatcc_fb_gen_common_c_builder_header@@Base+0x78c>
   1c4a4:	ldr	r0, [r4, #204]	; 0xcc
   1c4a8:	bl	14094 <fprintf@plt>
   1c4ac:	mov	r3, r4
   1c4b0:	mov	r2, r4
   1c4b4:	ldr	r1, [pc, #1544]	; 1cac4 <__flatcc_fb_gen_common_c_builder_header@@Base+0x790>
   1c4b8:	ldr	r0, [r4, #204]	; 0xcc
   1c4bc:	bl	14094 <fprintf@plt>
   1c4c0:	str	r4, [sp]
   1c4c4:	mov	r3, r4
   1c4c8:	mov	r2, r4
   1c4cc:	ldr	r1, [pc, #1524]	; 1cac8 <__flatcc_fb_gen_common_c_builder_header@@Base+0x794>
   1c4d0:	ldr	r0, [r4, #204]	; 0xcc
   1c4d4:	bl	14094 <fprintf@plt>
   1c4d8:	mov	r2, r4
   1c4dc:	ldr	r1, [pc, #1512]	; 1cacc <__flatcc_fb_gen_common_c_builder_header@@Base+0x798>
   1c4e0:	ldr	r0, [r4, #204]	; 0xcc
   1c4e4:	bl	14094 <fprintf@plt>
   1c4e8:	mov	r2, r4
   1c4ec:	ldr	r1, [pc, #1500]	; 1cad0 <__flatcc_fb_gen_common_c_builder_header@@Base+0x79c>
   1c4f0:	ldr	r0, [r4, #204]	; 0xcc
   1c4f4:	bl	14094 <fprintf@plt>
   1c4f8:	mov	r2, r4
   1c4fc:	ldr	r1, [pc, #1488]	; 1cad4 <__flatcc_fb_gen_common_c_builder_header@@Base+0x7a0>
   1c500:	ldr	r0, [r4, #204]	; 0xcc
   1c504:	bl	14094 <fprintf@plt>
   1c508:	mov	r3, r4
   1c50c:	mov	r2, r4
   1c510:	ldr	r1, [pc, #1472]	; 1cad8 <__flatcc_fb_gen_common_c_builder_header@@Base+0x7a4>
   1c514:	ldr	r0, [r4, #204]	; 0xcc
   1c518:	bl	14094 <fprintf@plt>
   1c51c:	mov	r2, r4
   1c520:	ldr	r1, [pc, #1460]	; 1cadc <__flatcc_fb_gen_common_c_builder_header@@Base+0x7a8>
   1c524:	ldr	r0, [r4, #204]	; 0xcc
   1c528:	bl	14094 <fprintf@plt>
   1c52c:	str	r4, [sp]
   1c530:	mov	r3, r4
   1c534:	mov	r2, r4
   1c538:	ldr	r1, [pc, #1440]	; 1cae0 <__flatcc_fb_gen_common_c_builder_header@@Base+0x7ac>
   1c53c:	ldr	r0, [r4, #204]	; 0xcc
   1c540:	bl	14094 <fprintf@plt>
   1c544:	str	r4, [sp, #4]
   1c548:	str	r4, [sp]
   1c54c:	mov	r3, r4
   1c550:	mov	r2, r4
   1c554:	ldr	r1, [pc, #1416]	; 1cae4 <__flatcc_fb_gen_common_c_builder_header@@Base+0x7b0>
   1c558:	ldr	r0, [r4, #204]	; 0xcc
   1c55c:	bl	14094 <fprintf@plt>
   1c560:	mov	r3, r4
   1c564:	mov	r2, r4
   1c568:	ldr	r1, [pc, #1400]	; 1cae8 <__flatcc_fb_gen_common_c_builder_header@@Base+0x7b4>
   1c56c:	ldr	r0, [r4, #204]	; 0xcc
   1c570:	bl	14094 <fprintf@plt>
   1c574:	str	r4, [sp, #4]
   1c578:	str	r4, [sp]
   1c57c:	mov	r3, r4
   1c580:	mov	r2, r4
   1c584:	ldr	r1, [pc, #1376]	; 1caec <__flatcc_fb_gen_common_c_builder_header@@Base+0x7b8>
   1c588:	ldr	r0, [r4, #204]	; 0xcc
   1c58c:	bl	14094 <fprintf@plt>
   1c590:	mov	r3, r4
   1c594:	mov	r2, r4
   1c598:	ldr	r1, [pc, #1360]	; 1caf0 <__flatcc_fb_gen_common_c_builder_header@@Base+0x7bc>
   1c59c:	ldr	r0, [r4, #204]	; 0xcc
   1c5a0:	bl	14094 <fprintf@plt>
   1c5a4:	mov	r2, r4
   1c5a8:	ldr	r1, [pc, #1348]	; 1caf4 <__flatcc_fb_gen_common_c_builder_header@@Base+0x7c0>
   1c5ac:	ldr	r0, [r4, #204]	; 0xcc
   1c5b0:	bl	14094 <fprintf@plt>
   1c5b4:	mov	r2, r4
   1c5b8:	ldr	r1, [pc, #1336]	; 1caf8 <__flatcc_fb_gen_common_c_builder_header@@Base+0x7c4>
   1c5bc:	ldr	r0, [r4, #204]	; 0xcc
   1c5c0:	bl	14094 <fprintf@plt>
   1c5c4:	mov	r2, r4
   1c5c8:	ldr	r1, [pc, #1324]	; 1cafc <__flatcc_fb_gen_common_c_builder_header@@Base+0x7c8>
   1c5cc:	ldr	r0, [r4, #204]	; 0xcc
   1c5d0:	bl	14094 <fprintf@plt>
   1c5d4:	mov	r2, r4
   1c5d8:	ldr	r1, [pc, #1312]	; 1cb00 <__flatcc_fb_gen_common_c_builder_header@@Base+0x7cc>
   1c5dc:	ldr	r0, [r4, #204]	; 0xcc
   1c5e0:	bl	14094 <fprintf@plt>
   1c5e4:	mov	r3, r4
   1c5e8:	mov	r2, r4
   1c5ec:	ldr	r1, [pc, #1296]	; 1cb04 <__flatcc_fb_gen_common_c_builder_header@@Base+0x7d0>
   1c5f0:	ldr	r0, [r4, #204]	; 0xcc
   1c5f4:	bl	14094 <fprintf@plt>
   1c5f8:	mov	r2, r4
   1c5fc:	ldr	r1, [pc, #1284]	; 1cb08 <__flatcc_fb_gen_common_c_builder_header@@Base+0x7d4>
   1c600:	ldr	r0, [r4, #204]	; 0xcc
   1c604:	bl	14094 <fprintf@plt>
   1c608:	mov	r2, r4
   1c60c:	ldr	r1, [pc, #1272]	; 1cb0c <__flatcc_fb_gen_common_c_builder_header@@Base+0x7d8>
   1c610:	ldr	r0, [r4, #204]	; 0xcc
   1c614:	bl	14094 <fprintf@plt>
   1c618:	mov	r3, r4
   1c61c:	mov	r2, r4
   1c620:	ldr	r1, [pc, #1256]	; 1cb10 <__flatcc_fb_gen_common_c_builder_header@@Base+0x7dc>
   1c624:	ldr	r0, [r4, #204]	; 0xcc
   1c628:	bl	14094 <fprintf@plt>
   1c62c:	mov	r3, r4
   1c630:	mov	r2, r4
   1c634:	ldr	r1, [pc, #1240]	; 1cb14 <__flatcc_fb_gen_common_c_builder_header@@Base+0x7e0>
   1c638:	ldr	r0, [r4, #204]	; 0xcc
   1c63c:	bl	14094 <fprintf@plt>
   1c640:	mov	r3, r4
   1c644:	mov	r2, r4
   1c648:	ldr	r1, [pc, #1224]	; 1cb18 <__flatcc_fb_gen_common_c_builder_header@@Base+0x7e4>
   1c64c:	ldr	r0, [r4, #204]	; 0xcc
   1c650:	bl	14094 <fprintf@plt>
   1c654:	mov	r3, r4
   1c658:	mov	r2, r4
   1c65c:	ldr	r1, [pc, #1208]	; 1cb1c <__flatcc_fb_gen_common_c_builder_header@@Base+0x7e8>
   1c660:	ldr	r0, [r4, #204]	; 0xcc
   1c664:	bl	14094 <fprintf@plt>
   1c668:	str	r4, [sp]
   1c66c:	mov	r3, r4
   1c670:	mov	r2, r4
   1c674:	ldr	r1, [pc, #1188]	; 1cb20 <__flatcc_fb_gen_common_c_builder_header@@Base+0x7ec>
   1c678:	ldr	r0, [r4, #204]	; 0xcc
   1c67c:	bl	14094 <fprintf@plt>
   1c680:	mov	r3, r4
   1c684:	mov	r2, r4
   1c688:	ldr	r1, [pc, #1172]	; 1cb24 <__flatcc_fb_gen_common_c_builder_header@@Base+0x7f0>
   1c68c:	ldr	r0, [r4, #204]	; 0xcc
   1c690:	bl	14094 <fprintf@plt>
   1c694:	mov	r2, r4
   1c698:	ldr	r1, [pc, #1160]	; 1cb28 <__flatcc_fb_gen_common_c_builder_header@@Base+0x7f4>
   1c69c:	ldr	r0, [r4, #204]	; 0xcc
   1c6a0:	bl	14094 <fprintf@plt>
   1c6a4:	mov	r2, r4
   1c6a8:	ldr	r1, [pc, #1148]	; 1cb2c <__flatcc_fb_gen_common_c_builder_header@@Base+0x7f8>
   1c6ac:	ldr	r0, [r4, #204]	; 0xcc
   1c6b0:	bl	14094 <fprintf@plt>
   1c6b4:	mov	r2, r4
   1c6b8:	ldr	r1, [pc, #1136]	; 1cb30 <__flatcc_fb_gen_common_c_builder_header@@Base+0x7fc>
   1c6bc:	ldr	r0, [r4, #204]	; 0xcc
   1c6c0:	bl	14094 <fprintf@plt>
   1c6c4:	str	r4, [sp]
   1c6c8:	mov	r3, r4
   1c6cc:	mov	r2, r4
   1c6d0:	ldr	r1, [pc, #1116]	; 1cb34 <__flatcc_fb_gen_common_c_builder_header@@Base+0x800>
   1c6d4:	ldr	r0, [r4, #204]	; 0xcc
   1c6d8:	bl	14094 <fprintf@plt>
   1c6dc:	mov	r2, r4
   1c6e0:	ldr	r1, [pc, #1104]	; 1cb38 <__flatcc_fb_gen_common_c_builder_header@@Base+0x804>
   1c6e4:	ldr	r0, [r4, #204]	; 0xcc
   1c6e8:	bl	14094 <fprintf@plt>
   1c6ec:	mov	r2, r4
   1c6f0:	ldr	r1, [pc, #1092]	; 1cb3c <__flatcc_fb_gen_common_c_builder_header@@Base+0x808>
   1c6f4:	ldr	r0, [r4, #204]	; 0xcc
   1c6f8:	bl	14094 <fprintf@plt>
   1c6fc:	mov	r2, r4
   1c700:	ldr	r1, [pc, #1080]	; 1cb40 <__flatcc_fb_gen_common_c_builder_header@@Base+0x80c>
   1c704:	ldr	r0, [r4, #204]	; 0xcc
   1c708:	bl	14094 <fprintf@plt>
   1c70c:	mov	r2, r4
   1c710:	ldr	r1, [pc, #1068]	; 1cb44 <__flatcc_fb_gen_common_c_builder_header@@Base+0x810>
   1c714:	ldr	r0, [r4, #204]	; 0xcc
   1c718:	bl	14094 <fprintf@plt>
   1c71c:	mov	r3, r4
   1c720:	mov	r2, r4
   1c724:	ldr	r1, [pc, #1052]	; 1cb48 <__flatcc_fb_gen_common_c_builder_header@@Base+0x814>
   1c728:	ldr	r0, [r4, #204]	; 0xcc
   1c72c:	bl	14094 <fprintf@plt>
   1c730:	mov	r2, r4
   1c734:	ldr	r1, [pc, #1040]	; 1cb4c <__flatcc_fb_gen_common_c_builder_header@@Base+0x818>
   1c738:	ldr	r0, [r4, #204]	; 0xcc
   1c73c:	bl	14094 <fprintf@plt>
   1c740:	mov	r2, r4
   1c744:	ldr	r1, [pc, #1028]	; 1cb50 <__flatcc_fb_gen_common_c_builder_header@@Base+0x81c>
   1c748:	ldr	r0, [r4, #204]	; 0xcc
   1c74c:	bl	14094 <fprintf@plt>
   1c750:	mov	r2, r4
   1c754:	ldr	r1, [pc, #1016]	; 1cb54 <__flatcc_fb_gen_common_c_builder_header@@Base+0x820>
   1c758:	ldr	r0, [r4, #204]	; 0xcc
   1c75c:	bl	14094 <fprintf@plt>
   1c760:	mov	r2, r4
   1c764:	ldr	r1, [pc, #1004]	; 1cb58 <__flatcc_fb_gen_common_c_builder_header@@Base+0x824>
   1c768:	ldr	r0, [r4, #204]	; 0xcc
   1c76c:	bl	14094 <fprintf@plt>
   1c770:	mov	r2, r4
   1c774:	ldr	r1, [pc, #992]	; 1cb5c <__flatcc_fb_gen_common_c_builder_header@@Base+0x828>
   1c778:	ldr	r0, [r4, #204]	; 0xcc
   1c77c:	bl	14094 <fprintf@plt>
   1c780:	mov	r2, r4
   1c784:	ldr	r1, [pc, #980]	; 1cb60 <__flatcc_fb_gen_common_c_builder_header@@Base+0x82c>
   1c788:	ldr	r0, [r4, #204]	; 0xcc
   1c78c:	bl	14094 <fprintf@plt>
   1c790:	mov	r2, r4
   1c794:	ldr	r1, [pc, #968]	; 1cb64 <__flatcc_fb_gen_common_c_builder_header@@Base+0x830>
   1c798:	ldr	r0, [r4, #204]	; 0xcc
   1c79c:	bl	14094 <fprintf@plt>
   1c7a0:	mov	r2, r4
   1c7a4:	ldr	r1, [pc, #956]	; 1cb68 <__flatcc_fb_gen_common_c_builder_header@@Base+0x834>
   1c7a8:	ldr	r0, [r4, #204]	; 0xcc
   1c7ac:	bl	14094 <fprintf@plt>
   1c7b0:	mov	r2, r4
   1c7b4:	ldr	r1, [pc, #944]	; 1cb6c <__flatcc_fb_gen_common_c_builder_header@@Base+0x838>
   1c7b8:	ldr	r0, [r4, #204]	; 0xcc
   1c7bc:	bl	14094 <fprintf@plt>
   1c7c0:	mov	r2, r4
   1c7c4:	ldr	r1, [pc, #932]	; 1cb70 <__flatcc_fb_gen_common_c_builder_header@@Base+0x83c>
   1c7c8:	ldr	r0, [r4, #204]	; 0xcc
   1c7cc:	bl	14094 <fprintf@plt>
   1c7d0:	mov	r2, r4
   1c7d4:	ldr	r1, [pc, #920]	; 1cb74 <__flatcc_fb_gen_common_c_builder_header@@Base+0x840>
   1c7d8:	ldr	r0, [r4, #204]	; 0xcc
   1c7dc:	bl	14094 <fprintf@plt>
   1c7e0:	mov	r2, r4
   1c7e4:	ldr	r1, [pc, #908]	; 1cb78 <__flatcc_fb_gen_common_c_builder_header@@Base+0x844>
   1c7e8:	ldr	r0, [r4, #204]	; 0xcc
   1c7ec:	bl	14094 <fprintf@plt>
   1c7f0:	mov	r2, r4
   1c7f4:	ldr	r1, [pc, #896]	; 1cb7c <__flatcc_fb_gen_common_c_builder_header@@Base+0x848>
   1c7f8:	ldr	r0, [r4, #204]	; 0xcc
   1c7fc:	bl	14094 <fprintf@plt>
   1c800:	mov	r2, r4
   1c804:	ldr	r1, [pc, #884]	; 1cb80 <__flatcc_fb_gen_common_c_builder_header@@Base+0x84c>
   1c808:	ldr	r0, [r4, #204]	; 0xcc
   1c80c:	bl	14094 <fprintf@plt>
   1c810:	mov	r2, r4
   1c814:	ldr	r1, [pc, #872]	; 1cb84 <__flatcc_fb_gen_common_c_builder_header@@Base+0x850>
   1c818:	ldr	r0, [r4, #204]	; 0xcc
   1c81c:	bl	14094 <fprintf@plt>
   1c820:	mov	r2, r4
   1c824:	ldr	r1, [pc, #860]	; 1cb88 <__flatcc_fb_gen_common_c_builder_header@@Base+0x854>
   1c828:	ldr	r0, [r4, #204]	; 0xcc
   1c82c:	bl	14094 <fprintf@plt>
   1c830:	mov	r2, r4
   1c834:	ldr	r1, [pc, #848]	; 1cb8c <__flatcc_fb_gen_common_c_builder_header@@Base+0x858>
   1c838:	ldr	r0, [r4, #204]	; 0xcc
   1c83c:	bl	14094 <fprintf@plt>
   1c840:	ldr	r1, [r4, #204]	; 0xcc
   1c844:	mov	r0, #10
   1c848:	bl	140f4 <fputc@plt>
   1c84c:	str	r4, [sp]
   1c850:	mov	r3, r4
   1c854:	mov	r2, r4
   1c858:	ldr	r1, [pc, #816]	; 1cb90 <__flatcc_fb_gen_common_c_builder_header@@Base+0x85c>
   1c85c:	ldr	r0, [r4, #204]	; 0xcc
   1c860:	bl	14094 <fprintf@plt>
   1c864:	str	r4, [sp]
   1c868:	mov	r3, r4
   1c86c:	mov	r2, r4
   1c870:	ldr	r1, [pc, #796]	; 1cb94 <__flatcc_fb_gen_common_c_builder_header@@Base+0x860>
   1c874:	ldr	r0, [r4, #204]	; 0xcc
   1c878:	bl	14094 <fprintf@plt>
   1c87c:	str	r4, [sp, #4]
   1c880:	str	r4, [sp]
   1c884:	mov	r3, r4
   1c888:	mov	r2, r4
   1c88c:	ldr	r1, [pc, #772]	; 1cb98 <__flatcc_fb_gen_common_c_builder_header@@Base+0x864>
   1c890:	ldr	r0, [r4, #204]	; 0xcc
   1c894:	bl	14094 <fprintf@plt>
   1c898:	str	r4, [sp]
   1c89c:	mov	r3, r4
   1c8a0:	mov	r2, r4
   1c8a4:	ldr	r1, [pc, #752]	; 1cb9c <__flatcc_fb_gen_common_c_builder_header@@Base+0x868>
   1c8a8:	ldr	r0, [r4, #204]	; 0xcc
   1c8ac:	bl	14094 <fprintf@plt>
   1c8b0:	str	r4, [sp]
   1c8b4:	mov	r3, r4
   1c8b8:	mov	r2, r4
   1c8bc:	ldr	r1, [pc, #732]	; 1cba0 <__flatcc_fb_gen_common_c_builder_header@@Base+0x86c>
   1c8c0:	ldr	r0, [r4, #204]	; 0xcc
   1c8c4:	bl	14094 <fprintf@plt>
   1c8c8:	str	r4, [sp]
   1c8cc:	mov	r3, r4
   1c8d0:	mov	r2, r4
   1c8d4:	ldr	r1, [pc, #712]	; 1cba4 <__flatcc_fb_gen_common_c_builder_header@@Base+0x870>
   1c8d8:	ldr	r0, [r4, #204]	; 0xcc
   1c8dc:	bl	14094 <fprintf@plt>
   1c8e0:	str	r4, [sp]
   1c8e4:	mov	r3, r4
   1c8e8:	mov	r2, r4
   1c8ec:	ldr	r1, [pc, #692]	; 1cba8 <__flatcc_fb_gen_common_c_builder_header@@Base+0x874>
   1c8f0:	ldr	r0, [r4, #204]	; 0xcc
   1c8f4:	bl	14094 <fprintf@plt>
   1c8f8:	str	r4, [sp]
   1c8fc:	mov	r3, r4
   1c900:	mov	r2, r4
   1c904:	ldr	r1, [pc, #672]	; 1cbac <__flatcc_fb_gen_common_c_builder_header@@Base+0x878>
   1c908:	ldr	r0, [r4, #204]	; 0xcc
   1c90c:	bl	14094 <fprintf@plt>
   1c910:	str	r4, [sp]
   1c914:	mov	r3, r4
   1c918:	mov	r2, r4
   1c91c:	ldr	r1, [pc, #652]	; 1cbb0 <__flatcc_fb_gen_common_c_builder_header@@Base+0x87c>
   1c920:	ldr	r0, [r4, #204]	; 0xcc
   1c924:	bl	14094 <fprintf@plt>
   1c928:	str	r4, [sp]
   1c92c:	mov	r3, r4
   1c930:	mov	r2, r4
   1c934:	ldr	r1, [pc, #632]	; 1cbb4 <__flatcc_fb_gen_common_c_builder_header@@Base+0x880>
   1c938:	ldr	r0, [r4, #204]	; 0xcc
   1c93c:	bl	14094 <fprintf@plt>
   1c940:	str	r4, [sp]
   1c944:	mov	r3, r4
   1c948:	mov	r2, r4
   1c94c:	ldr	r1, [pc, #612]	; 1cbb8 <__flatcc_fb_gen_common_c_builder_header@@Base+0x884>
   1c950:	ldr	r0, [r4, #204]	; 0xcc
   1c954:	bl	14094 <fprintf@plt>
   1c958:	ldr	r1, [r4, #204]	; 0xcc
   1c95c:	mov	r0, #10
   1c960:	bl	140f4 <fputc@plt>
   1c964:	mov	r3, r4
   1c968:	mov	r2, r4
   1c96c:	ldr	r1, [pc, #584]	; 1cbbc <__flatcc_fb_gen_common_c_builder_header@@Base+0x888>
   1c970:	ldr	r0, [r4, #204]	; 0xcc
   1c974:	bl	14094 <fprintf@plt>
   1c978:	ldr	r1, [r4, #204]	; 0xcc
   1c97c:	mov	r0, #10
   1c980:	bl	140f4 <fputc@plt>
   1c984:	mov	r3, r4
   1c988:	mov	r2, r4
   1c98c:	ldr	r1, [pc, #556]	; 1cbc0 <__flatcc_fb_gen_common_c_builder_header@@Base+0x88c>
   1c990:	ldr	r0, [r4, #204]	; 0xcc
   1c994:	bl	14094 <fprintf@plt>
   1c998:	ldr	r3, [r4, #212]	; 0xd4
   1c99c:	ldr	r3, [r3, #140]	; 0x8c
   1c9a0:	cmp	r3, #0
   1c9a4:	bne	1ca64 <__flatcc_fb_gen_common_c_builder_header@@Base+0x730>
   1c9a8:	mov	r2, r5
   1c9ac:	ldr	r1, [pc, #528]	; 1cbc4 <__flatcc_fb_gen_common_c_builder_header@@Base+0x890>
   1c9b0:	ldr	r0, [r4, #204]	; 0xcc
   1c9b4:	bl	14094 <fprintf@plt>
   1c9b8:	mov	r0, #0
   1c9bc:	add	sp, sp, #12
   1c9c0:	pop	{r4, r5, pc}
   1c9c4:	ldr	r3, [r4, #204]	; 0xcc
   1c9c8:	mov	r2, #36	; 0x24
   1c9cc:	mov	r1, #1
   1c9d0:	ldr	r0, [pc, #496]	; 1cbc8 <__flatcc_fb_gen_common_c_builder_header@@Base+0x894>
   1c9d4:	bl	1401c <fwrite@plt>
   1c9d8:	b	1c39c <__flatcc_fb_gen_common_c_builder_header@@Base+0x68>
   1c9dc:	mov	r2, r4
   1c9e0:	ldr	r1, [pc, #484]	; 1cbcc <__flatcc_fb_gen_common_c_builder_header@@Base+0x898>
   1c9e4:	ldr	r0, [r4, #204]	; 0xcc
   1c9e8:	bl	14094 <fprintf@plt>
   1c9ec:	mov	r2, r4
   1c9f0:	ldr	r1, [pc, #472]	; 1cbd0 <__flatcc_fb_gen_common_c_builder_header@@Base+0x89c>
   1c9f4:	ldr	r0, [r4, #204]	; 0xcc
   1c9f8:	bl	14094 <fprintf@plt>
   1c9fc:	mov	r2, r4
   1ca00:	ldr	r1, [pc, #460]	; 1cbd4 <__flatcc_fb_gen_common_c_builder_header@@Base+0x8a0>
   1ca04:	ldr	r0, [r4, #204]	; 0xcc
   1ca08:	bl	14094 <fprintf@plt>
   1ca0c:	mov	r2, r4
   1ca10:	ldr	r1, [pc, #448]	; 1cbd8 <__flatcc_fb_gen_common_c_builder_header@@Base+0x8a4>
   1ca14:	ldr	r0, [r4, #204]	; 0xcc
   1ca18:	bl	14094 <fprintf@plt>
   1ca1c:	mov	r2, r4
   1ca20:	ldr	r1, [pc, #436]	; 1cbdc <__flatcc_fb_gen_common_c_builder_header@@Base+0x8a8>
   1ca24:	ldr	r0, [r4, #204]	; 0xcc
   1ca28:	bl	14094 <fprintf@plt>
   1ca2c:	mov	r2, r4
   1ca30:	ldr	r1, [pc, #424]	; 1cbe0 <__flatcc_fb_gen_common_c_builder_header@@Base+0x8ac>
   1ca34:	ldr	r0, [r4, #204]	; 0xcc
   1ca38:	bl	14094 <fprintf@plt>
   1ca3c:	b	1c3ec <__flatcc_fb_gen_common_c_builder_header@@Base+0xb8>
   1ca40:	mov	r2, r4
   1ca44:	ldr	r1, [pc, #408]	; 1cbe4 <__flatcc_fb_gen_common_c_builder_header@@Base+0x8b0>
   1ca48:	ldr	r0, [r4, #204]	; 0xcc
   1ca4c:	bl	14094 <fprintf@plt>
   1ca50:	mov	r2, r4
   1ca54:	ldr	r1, [pc, #396]	; 1cbe8 <__flatcc_fb_gen_common_c_builder_header@@Base+0x8b4>
   1ca58:	ldr	r0, [r4, #204]	; 0xcc
   1ca5c:	bl	14094 <fprintf@plt>
   1ca60:	b	1c428 <__flatcc_fb_gen_common_c_builder_header@@Base+0xf4>
   1ca64:	ldr	r3, [r4, #204]	; 0xcc
   1ca68:	mov	r2, #36	; 0x24
   1ca6c:	mov	r1, #1
   1ca70:	ldr	r0, [pc, #372]	; 1cbec <__flatcc_fb_gen_common_c_builder_header@@Base+0x8b8>
   1ca74:	bl	1401c <fwrite@plt>
   1ca78:	b	1c9a8 <__flatcc_fb_gen_common_c_builder_header@@Base+0x674>
   1ca7c:	andeq	r5, r4, r4, lsr #14
   1ca80:	andeq	r5, r4, r4, asr #14
   1ca84:	andeq	lr, r3, r0, lsr #1
   1ca88:	andeq	r5, r4, r4, ror #14
   1ca8c:	muleq	r4, ip, r7
   1ca90:			; <UNDEFINED> instruction: 0x000457b4
   1ca94:	andeq	r4, r4, ip, ror r2
   1ca98:	ldrdeq	r5, [r4], -r8
   1ca9c:	andeq	r5, r4, ip, lsr #18
   1caa0:	andeq	r5, r4, r8, asr #18
   1caa4:	andeq	lr, r3, r8, lsl #4
   1caa8:	andeq	r5, r4, r8, asr #19
   1caac:	andeq	r5, r4, ip, lsr sp
   1cab0:	andeq	r6, r4, r8, lsl #8
   1cab4:	muleq	r4, r4, r4
   1cab8:	andeq	r6, r4, r0, asr pc
   1cabc:	andeq	r7, r4, ip, lsr #6
   1cac0:	andeq	r7, r4, r4, ror #18
   1cac4:	andeq	r7, r4, r0, ror #27
   1cac8:	andeq	r8, r4, r4, asr r5
   1cacc:	muleq	r4, ip, sl
   1cad0:	andeq	r8, r4, ip, lsl pc
   1cad4:	andeq	r9, r4, ip, lsr #1
   1cad8:	andeq	r9, r4, r8, lsl #8
   1cadc:	andeq	r9, r4, r0, lsl r6
   1cae0:	andeq	r9, r4, ip, ror r9
   1cae4:	andeq	r9, r4, r8, ror lr
   1cae8:	andeq	r9, r4, r4, lsl #31
   1caec:	andeq	sl, r4, ip, ror #5
   1caf0:	andeq	sl, r4, ip, ror #17
   1caf4:	andeq	sl, r4, r0, lsr #21
   1caf8:	andeq	sl, r4, r8, asr #25
   1cafc:	andeq	fp, r4, r8, lsl #1
   1cb00:	andeq	fp, r4, r8, asr #6
   1cb04:	andeq	fp, r4, ip, asr r7
   1cb08:	andeq	fp, r4, r8, asr #16
   1cb0c:	andeq	fp, r4, ip, lsr #21
   1cb10:	andeq	fp, r4, r4, lsr #28
   1cb14:	andeq	ip, r4, r4, ror r2
   1cb18:	andeq	ip, r4, ip, lsl #10
   1cb1c:	andeq	ip, r4, r8, lsl #18
   1cb20:	andeq	ip, r4, r4, lsl sl
   1cb24:	andeq	ip, r4, r0, lsr #21
   1cb28:	andeq	ip, r4, ip, ror #27
   1cb2c:	andeq	sp, r4, r4, ror r0
   1cb30:	andeq	sp, r4, r4, lsl #6
   1cb34:			; <UNDEFINED> instruction: 0x0004d8bc
   1cb38:	andeq	sp, r4, ip, asr #18
   1cb3c:	andeq	sp, r4, r8, ror r9
   1cb40:	muleq	r4, ip, r9
   1cb44:	andeq	sp, r4, r8, asr #19
   1cb48:	andeq	sp, r4, ip, ror #19
   1cb4c:	andeq	sp, r4, r8, lsl sl
   1cb50:	andeq	sp, r4, ip, lsr sl
   1cb54:	andeq	sp, r4, ip, ror #20
   1cb58:	muleq	r4, r0, sl
   1cb5c:	andeq	sp, r4, r0, asr #21
   1cb60:	andeq	sp, r4, r4, ror #21
   1cb64:	andeq	sp, r4, r4, lsl fp
   1cb68:	andeq	sp, r4, r8, lsr fp
   1cb6c:	andeq	sp, r4, r4, ror #22
   1cb70:	andeq	sp, r4, r8, lsl #23
   1cb74:			; <UNDEFINED> instruction: 0x0004dbb4
   1cb78:	ldrdeq	sp, [r4], -r8
   1cb7c:	andeq	sp, r4, r4, lsl #24
   1cb80:	andeq	sp, r4, r8, lsr #24
   1cb84:	andeq	sp, r4, r4, asr ip
   1cb88:	andeq	sp, r4, r8, ror ip
   1cb8c:	andeq	sp, r4, r4, lsr #25
   1cb90:	andeq	sp, r4, r8, asr #25
   1cb94:	strdeq	sp, [r4], -r0
   1cb98:	andeq	sp, r4, r8, lsl sp
   1cb9c:	andeq	sp, r4, r0, asr #26
   1cba0:	andeq	sp, r4, ip, ror #26
   1cba4:	muleq	r4, r8, sp
   1cba8:	andeq	sp, r4, r4, asr #27
   1cbac:	andeq	sp, r4, ip, ror #27
   1cbb0:	andeq	sp, r4, r4, lsl lr
   1cbb4:	andeq	sp, r4, ip, lsr lr
   1cbb8:	andeq	sp, r4, r4, ror #28
   1cbbc:	andeq	sp, r4, ip, lsl #29
   1cbc0:	andeq	sp, r4, r4, lsr #29
   1cbc4:			; <UNDEFINED> instruction: 0x0004debc
   1cbc8:			; <UNDEFINED> instruction: 0x0003e1b4
   1cbcc:	andeq	r5, r4, r8, ror #15
   1cbd0:	andeq	r5, r4, r0, lsl r8
   1cbd4:	andeq	r5, r4, r8, lsr r8
   1cbd8:	andeq	r5, r4, r4, ror #16
   1cbdc:	muleq	r4, r8, r8
   1cbe0:	ldrdeq	r5, [r4], -r4
   1cbe4:	andeq	r5, r4, r0, ror r9
   1cbe8:	andeq	r5, r4, r4, lsr #19
   1cbec:	andeq	r4, r4, r8, lsl r0

0001cbf0 <__flatcc_fb_gen_c_builder@@Base>:
   1cbf0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1cbf4:	sub	sp, sp, #484	; 0x1e4
   1cbf8:	mov	fp, r0
   1cbfc:	str	r0, [sp, #32]
   1cc00:	ldr	r3, [r0, #208]	; 0xd0
   1cc04:	ldr	r2, [r3, #164]	; 0xa4
   1cc08:	mov	r3, r2
   1cc0c:	ldr	r1, [pc, #3956]	; 1db88 <__flatcc_fb_gen_c_builder@@Base+0xf98>
   1cc10:	ldr	r0, [r0, #204]	; 0xcc
   1cc14:	bl	14094 <fprintf@plt>
   1cc18:	ldr	r3, [fp, #204]	; 0xcc
   1cc1c:	mov	r2, #81	; 0x51
   1cc20:	mov	r1, #1
   1cc24:	ldr	r0, [pc, #3936]	; 1db8c <__flatcc_fb_gen_c_builder@@Base+0xf9c>
   1cc28:	bl	1401c <fwrite@plt>
   1cc2c:	ldr	r3, [fp, #208]	; 0xd0
   1cc30:	ldr	r2, [r3, #164]	; 0xa4
   1cc34:	ldr	r1, [pc, #3924]	; 1db90 <__flatcc_fb_gen_c_builder@@Base+0xfa0>
   1cc38:	ldr	r0, [fp, #204]	; 0xcc
   1cc3c:	bl	14094 <fprintf@plt>
   1cc40:	ldr	r3, [fp, #208]	; 0xd0
   1cc44:	ldr	r2, [r3, #160]	; 0xa0
   1cc48:	ldr	r1, [pc, #3908]	; 1db94 <__flatcc_fb_gen_c_builder@@Base+0xfa4>
   1cc4c:	ldr	r0, [fp, #204]	; 0xcc
   1cc50:	bl	14094 <fprintf@plt>
   1cc54:	ldr	r4, [pc, #3900]	; 1db98 <__flatcc_fb_gen_c_builder@@Base+0xfa8>
   1cc58:	ldr	r3, [fp, #204]	; 0xcc
   1cc5c:	mov	r2, #7
   1cc60:	mov	r1, #1
   1cc64:	mov	r0, r4
   1cc68:	bl	1401c <fwrite@plt>
   1cc6c:	add	r2, fp, #102	; 0x66
   1cc70:	ldr	r1, [pc, #3876]	; 1db9c <__flatcc_fb_gen_c_builder@@Base+0xfac>
   1cc74:	ldr	r0, [fp, #204]	; 0xcc
   1cc78:	bl	14094 <fprintf@plt>
   1cc7c:	mov	r2, fp
   1cc80:	ldr	r1, [pc, #3864]	; 1dba0 <__flatcc_fb_gen_c_builder@@Base+0xfb0>
   1cc84:	ldr	r0, [fp, #204]	; 0xcc
   1cc88:	bl	14094 <fprintf@plt>
   1cc8c:	ldr	r3, [fp, #204]	; 0xcc
   1cc90:	mov	r2, #7
   1cc94:	mov	r1, #1
   1cc98:	mov	r0, r4
   1cc9c:	bl	1401c <fwrite@plt>
   1cca0:	ldr	r2, [pc, #3836]	; 1dba4 <__flatcc_fb_gen_c_builder@@Base+0xfb4>
   1cca4:	ldr	r1, [pc, #3836]	; 1dba8 <__flatcc_fb_gen_c_builder@@Base+0xfb8>
   1cca8:	mov	r0, fp
   1ccac:	bl	15ca8 <__flatcc_fb_gen_c_includes@@Base>
   1ccb0:	ldr	r3, [fp, #212]	; 0xd4
   1ccb4:	ldr	r3, [r3, #140]	; 0x8c
   1ccb8:	cmp	r3, #0
   1ccbc:	bne	1cd58 <__flatcc_fb_gen_c_builder@@Base+0x168>
   1ccc0:	ldr	r3, [fp, #208]	; 0xd0
   1ccc4:	ldrh	r2, [r3, #16]
   1ccc8:	cmp	r2, #2
   1cccc:	beq	1cd70 <__flatcc_fb_gen_c_builder@@Base+0x180>
   1ccd0:	mov	r3, fp
   1ccd4:	mov	r2, fp
   1ccd8:	ldr	r1, [pc, #3788]	; 1dbac <__flatcc_fb_gen_c_builder@@Base+0xfbc>
   1ccdc:	ldr	r0, [fp, #204]	; 0xcc
   1cce0:	bl	14094 <fprintf@plt>
   1cce4:	ldr	r3, [fp, #208]	; 0xd0
   1cce8:	ldrh	r2, [r3, #32]
   1ccec:	cmp	r2, #2
   1ccf0:	beq	1cd98 <__flatcc_fb_gen_c_builder@@Base+0x1a8>
   1ccf4:	ldr	r3, [fp, #212]	; 0xd4
   1ccf8:	ldr	r3, [r3, #104]	; 0x68
   1ccfc:	str	r3, [sp]
   1cd00:	mov	r3, fp
   1cd04:	mov	r2, fp
   1cd08:	ldr	r1, [pc, #3744]	; 1dbb0 <__flatcc_fb_gen_c_builder@@Base+0xfc0>
   1cd0c:	ldr	r0, [fp, #204]	; 0xcc
   1cd10:	bl	14094 <fprintf@plt>
   1cd14:	ldr	r1, [fp, #204]	; 0xcc
   1cd18:	mov	r0, #10
   1cd1c:	bl	140f4 <fputc@plt>
   1cd20:	mov	r2, #220	; 0xdc
   1cd24:	mov	r1, #0
   1cd28:	add	r0, sp, #260	; 0x104
   1cd2c:	bl	140ac <memset@plt>
   1cd30:	ldr	r3, [fp, #208]	; 0xd0
   1cd34:	ldr	r4, [r3, #40]	; 0x28
   1cd38:	cmp	r4, #0
   1cd3c:	beq	1ce2c <__flatcc_fb_gen_c_builder@@Base+0x23c>
   1cd40:	mov	r2, #0
   1cd44:	add	r5, sp, #260	; 0x104
   1cd48:	ldr	r8, [pc, #3684]	; 1dbb4 <__flatcc_fb_gen_c_builder@@Base+0xfc4>
   1cd4c:	ldr	r7, [pc, #3684]	; 1dbb8 <__flatcc_fb_gen_c_builder@@Base+0xfc8>
   1cd50:	mov	r6, #1
   1cd54:	b	1cdcc <__flatcc_fb_gen_c_builder@@Base+0x1dc>
   1cd58:	ldr	r3, [fp, #204]	; 0xcc
   1cd5c:	mov	r2, #36	; 0x24
   1cd60:	mov	r1, #1
   1cd64:	ldr	r0, [pc, #3664]	; 1dbbc <__flatcc_fb_gen_c_builder@@Base+0xfcc>
   1cd68:	bl	1401c <fwrite@plt>
   1cd6c:	b	1ccc0 <__flatcc_fb_gen_c_builder@@Base+0xd0>
   1cd70:	ldr	r2, [r3, #8]
   1cd74:	str	r2, [sp, #4]
   1cd78:	ldr	r3, [r3, #12]
   1cd7c:	str	r3, [sp]
   1cd80:	mov	r3, fp
   1cd84:	mov	r2, fp
   1cd88:	ldr	r1, [pc, #3632]	; 1dbc0 <__flatcc_fb_gen_c_builder@@Base+0xfd0>
   1cd8c:	ldr	r0, [fp, #204]	; 0xcc
   1cd90:	bl	14094 <fprintf@plt>
   1cd94:	b	1cce4 <__flatcc_fb_gen_c_builder@@Base+0xf4>
   1cd98:	ldr	r2, [r3, #24]
   1cd9c:	str	r2, [sp, #4]
   1cda0:	ldr	r3, [r3, #28]
   1cda4:	str	r3, [sp]
   1cda8:	mov	r3, fp
   1cdac:	mov	r2, fp
   1cdb0:	ldr	r1, [pc, #3596]	; 1dbc4 <__flatcc_fb_gen_c_builder@@Base+0xfd4>
   1cdb4:	ldr	r0, [fp, #204]	; 0xcc
   1cdb8:	bl	14094 <fprintf@plt>
   1cdbc:	b	1cd14 <__flatcc_fb_gen_c_builder@@Base+0x124>
   1cdc0:	ldr	r4, [r4]
   1cdc4:	cmp	r4, #0
   1cdc8:	beq	1ce24 <__flatcc_fb_gen_c_builder@@Base+0x234>
   1cdcc:	ldrh	r3, [r4, #8]
   1cdd0:	cmp	r3, #3
   1cdd4:	bne	1cdc0 <__flatcc_fb_gen_c_builder@@Base+0x1d0>
   1cdd8:	mov	r2, r5
   1cddc:	mov	r1, r4
   1cde0:	ldr	r0, [r4, #12]
   1cde4:	bl	15edc <__flatcc_fb_scoped_symbol_name@@Base>
   1cde8:	str	r5, [sp]
   1cdec:	mov	r3, r5
   1cdf0:	mov	r2, r5
   1cdf4:	mov	r1, r8
   1cdf8:	ldr	r0, [fp, #204]	; 0xcc
   1cdfc:	bl	14094 <fprintf@plt>
   1ce00:	str	r5, [sp, #4]
   1ce04:	str	r5, [sp]
   1ce08:	ldr	r2, [sp, #32]
   1ce0c:	mov	r3, r2
   1ce10:	mov	r1, r7
   1ce14:	ldr	r0, [fp, #204]	; 0xcc
   1ce18:	bl	14094 <fprintf@plt>
   1ce1c:	mov	r2, r6
   1ce20:	b	1cdc0 <__flatcc_fb_gen_c_builder@@Base+0x1d0>
   1ce24:	cmp	r2, #0
   1ce28:	bne	1d1e0 <__flatcc_fb_gen_c_builder@@Base+0x5f0>
   1ce2c:	ldr	r3, [fp, #208]	; 0xd0
   1ce30:	ldr	r5, [r3, #44]	; 0x2c
   1ce34:	cmp	r5, #0
   1ce38:	beq	1d1a8 <__flatcc_fb_gen_c_builder@@Base+0x5b8>
   1ce3c:	mov	r2, #220	; 0xdc
   1ce40:	mov	r1, #0
   1ce44:	add	r0, sp, #260	; 0x104
   1ce48:	bl	140ac <memset@plt>
   1ce4c:	ldrh	r3, [r5, #8]
   1ce50:	cmp	r3, #1
   1ce54:	bne	1d1f0 <__flatcc_fb_gen_c_builder@@Base+0x600>
   1ce58:	add	r4, sp, #260	; 0x104
   1ce5c:	mov	r2, r4
   1ce60:	mov	r1, r5
   1ce64:	ldr	r0, [r5, #12]
   1ce68:	bl	15edc <__flatcc_fb_scoped_symbol_name@@Base>
   1ce6c:	mov	r0, r5
   1ce70:	bl	1a41c <__flatcc_gen_sort@@Base+0x12c>
   1ce74:	mov	r8, r0
   1ce78:	mov	r2, r4
   1ce7c:	ldr	r1, [pc, #3396]	; 1dbc8 <__flatcc_fb_gen_c_builder@@Base+0xfd8>
   1ce80:	ldr	r0, [fp, #204]	; 0xcc
   1ce84:	bl	14094 <fprintf@plt>
   1ce88:	mov	r6, #1
   1ce8c:	str	r6, [sp]
   1ce90:	mov	r3, r8
   1ce94:	mov	r2, #0
   1ce98:	mov	r1, r5
   1ce9c:	mov	r0, fp
   1cea0:	bl	1a7e0 <__flatcc_gen_sort@@Base+0x4f0>
   1cea4:	mov	r2, r4
   1cea8:	ldr	r1, [pc, #3356]	; 1dbcc <__flatcc_fb_gen_c_builder@@Base+0xfdc>
   1ceac:	ldr	r0, [fp, #204]	; 0xcc
   1ceb0:	bl	14094 <fprintf@plt>
   1ceb4:	str	r6, [sp]
   1ceb8:	mov	r3, r8
   1cebc:	mov	r2, #0
   1cec0:	mov	r1, r5
   1cec4:	mov	r0, fp
   1cec8:	bl	1a6cc <__flatcc_gen_sort@@Base+0x3dc>
   1cecc:	ldr	r1, [fp, #204]	; 0xcc
   1ced0:	mov	r0, #10
   1ced4:	bl	140f4 <fputc@plt>
   1ced8:	str	r4, [sp]
   1cedc:	mov	r3, r4
   1cee0:	mov	r2, r4
   1cee4:	ldr	r1, [pc, #3300]	; 1dbd0 <__flatcc_fb_gen_c_builder@@Base+0xfe0>
   1cee8:	ldr	r0, [fp, #204]	; 0xcc
   1ceec:	bl	14094 <fprintf@plt>
   1cef0:	mov	r7, #0
   1cef4:	str	r7, [sp]
   1cef8:	mov	r3, r8
   1cefc:	mov	r2, r7
   1cf00:	mov	r1, r5
   1cf04:	mov	r0, fp
   1cf08:	bl	1a7e0 <__flatcc_gen_sort@@Base+0x4f0>
   1cf0c:	ldr	r3, [fp, #204]	; 0xcc
   1cf10:	mov	r2, #4
   1cf14:	mov	r1, r6
   1cf18:	ldr	r0, [pc, #3252]	; 1dbd4 <__flatcc_fb_gen_c_builder@@Base+0xfe4>
   1cf1c:	bl	1401c <fwrite@plt>
   1cf20:	str	r7, [sp, #4]
   1cf24:	str	r7, [sp]
   1cf28:	mov	r3, r8
   1cf2c:	mov	r2, r7
   1cf30:	mov	r1, r5
   1cf34:	mov	r0, fp
   1cf38:	bl	1aba0 <__flatcc_gen_sort@@Base+0x8b0>
   1cf3c:	ldr	r3, [fp, #204]	; 0xcc
   1cf40:	mov	r2, #12
   1cf44:	mov	r1, r6
   1cf48:	ldr	r0, [pc, #3208]	; 1dbd8 <__flatcc_fb_gen_c_builder@@Base+0xfe8>
   1cf4c:	bl	1401c <fwrite@plt>
   1cf50:	str	r4, [sp, #4]
   1cf54:	str	r4, [sp]
   1cf58:	mov	r3, r4
   1cf5c:	mov	r2, r4
   1cf60:	ldr	r1, [pc, #3188]	; 1dbdc <__flatcc_fb_gen_c_builder@@Base+0xfec>
   1cf64:	ldr	r0, [fp, #204]	; 0xcc
   1cf68:	bl	14094 <fprintf@plt>
   1cf6c:	ldr	sl, [pc, #3180]	; 1dbe0 <__flatcc_fb_gen_c_builder@@Base+0xff0>
   1cf70:	ldr	r3, [fp, #204]	; 0xcc
   1cf74:	mov	r2, #2
   1cf78:	mov	r1, r6
   1cf7c:	mov	r0, sl
   1cf80:	bl	1401c <fwrite@plt>
   1cf84:	str	r6, [sp, #4]
   1cf88:	str	r7, [sp]
   1cf8c:	mov	r3, r8
   1cf90:	mov	r2, r7
   1cf94:	mov	r1, r5
   1cf98:	mov	r0, fp
   1cf9c:	bl	1aba0 <__flatcc_gen_sort@@Base+0x8b0>
   1cfa0:	ldr	r3, [fp, #204]	; 0xcc
   1cfa4:	mov	r2, #12
   1cfa8:	mov	r1, r6
   1cfac:	ldr	r0, [pc, #3108]	; 1dbd8 <__flatcc_fb_gen_c_builder@@Base+0xfe8>
   1cfb0:	bl	1401c <fwrite@plt>
   1cfb4:	str	r4, [sp]
   1cfb8:	mov	r3, r4
   1cfbc:	mov	r2, r4
   1cfc0:	ldr	r1, [pc, #3100]	; 1dbe4 <__flatcc_fb_gen_c_builder@@Base+0xff4>
   1cfc4:	ldr	r0, [fp, #204]	; 0xcc
   1cfc8:	bl	14094 <fprintf@plt>
   1cfcc:	str	r7, [sp]
   1cfd0:	mov	r3, r8
   1cfd4:	mov	r2, r7
   1cfd8:	mov	r1, r5
   1cfdc:	mov	r0, fp
   1cfe0:	bl	1a7e0 <__flatcc_gen_sort@@Base+0x4f0>
   1cfe4:	ldr	r3, [fp, #204]	; 0xcc
   1cfe8:	mov	r2, #4
   1cfec:	mov	r1, r6
   1cff0:	ldr	r0, [pc, #3036]	; 1dbd4 <__flatcc_fb_gen_c_builder@@Base+0xfe4>
   1cff4:	bl	1401c <fwrite@plt>
   1cff8:	str	r7, [sp, #4]
   1cffc:	mov	r9, #2
   1d000:	str	r9, [sp]
   1d004:	mov	r3, r8
   1d008:	mov	r2, r7
   1d00c:	mov	r1, r5
   1d010:	mov	r0, fp
   1d014:	bl	1aba0 <__flatcc_gen_sort@@Base+0x8b0>
   1d018:	ldr	r3, [fp, #204]	; 0xcc
   1d01c:	mov	r2, #12
   1d020:	mov	r1, r6
   1d024:	ldr	r0, [pc, #2988]	; 1dbd8 <__flatcc_fb_gen_c_builder@@Base+0xfe8>
   1d028:	bl	1401c <fwrite@plt>
   1d02c:	str	r4, [sp, #4]
   1d030:	str	r4, [sp]
   1d034:	mov	r3, r4
   1d038:	mov	r2, r4
   1d03c:	ldr	r1, [pc, #2980]	; 1dbe8 <__flatcc_fb_gen_c_builder@@Base+0xff8>
   1d040:	ldr	r0, [fp, #204]	; 0xcc
   1d044:	bl	14094 <fprintf@plt>
   1d048:	ldr	r3, [fp, #204]	; 0xcc
   1d04c:	mov	r2, r9
   1d050:	mov	r1, r6
   1d054:	mov	r0, sl
   1d058:	bl	1401c <fwrite@plt>
   1d05c:	str	r6, [sp, #4]
   1d060:	str	r9, [sp]
   1d064:	mov	r3, r8
   1d068:	mov	r2, r7
   1d06c:	mov	r1, r5
   1d070:	mov	r0, fp
   1d074:	bl	1aba0 <__flatcc_gen_sort@@Base+0x8b0>
   1d078:	ldr	r3, [fp, #204]	; 0xcc
   1d07c:	mov	r2, #12
   1d080:	mov	r1, r6
   1d084:	ldr	r0, [pc, #2892]	; 1dbd8 <__flatcc_fb_gen_c_builder@@Base+0xfe8>
   1d088:	bl	1401c <fwrite@plt>
   1d08c:	str	r4, [sp]
   1d090:	mov	r3, r4
   1d094:	mov	r2, r4
   1d098:	ldr	r1, [pc, #2892]	; 1dbec <__flatcc_fb_gen_c_builder@@Base+0xffc>
   1d09c:	ldr	r0, [fp, #204]	; 0xcc
   1d0a0:	bl	14094 <fprintf@plt>
   1d0a4:	str	r7, [sp]
   1d0a8:	mov	r3, r8
   1d0ac:	mov	r2, r7
   1d0b0:	mov	r1, r5
   1d0b4:	mov	r0, fp
   1d0b8:	bl	1a7e0 <__flatcc_gen_sort@@Base+0x4f0>
   1d0bc:	ldr	r3, [fp, #204]	; 0xcc
   1d0c0:	mov	r2, #4
   1d0c4:	mov	r1, r6
   1d0c8:	ldr	r0, [pc, #2820]	; 1dbd4 <__flatcc_fb_gen_c_builder@@Base+0xfe4>
   1d0cc:	bl	1401c <fwrite@plt>
   1d0d0:	str	r7, [sp, #4]
   1d0d4:	str	r6, [sp]
   1d0d8:	mov	r3, r8
   1d0dc:	mov	r2, r7
   1d0e0:	mov	r1, r5
   1d0e4:	mov	r0, fp
   1d0e8:	bl	1aba0 <__flatcc_gen_sort@@Base+0x8b0>
   1d0ec:	ldr	r3, [fp, #204]	; 0xcc
   1d0f0:	mov	r2, #12
   1d0f4:	mov	r1, r6
   1d0f8:	ldr	r0, [pc, #2776]	; 1dbd8 <__flatcc_fb_gen_c_builder@@Base+0xfe8>
   1d0fc:	bl	1401c <fwrite@plt>
   1d100:	str	r4, [sp, #4]
   1d104:	str	r4, [sp]
   1d108:	mov	r3, r4
   1d10c:	mov	r2, r4
   1d110:	ldr	r1, [pc, #2776]	; 1dbf0 <__flatcc_fb_gen_c_builder@@Base+0x1000>
   1d114:	ldr	r0, [fp, #204]	; 0xcc
   1d118:	bl	14094 <fprintf@plt>
   1d11c:	ldr	r3, [fp, #204]	; 0xcc
   1d120:	mov	r2, r9
   1d124:	mov	r1, r6
   1d128:	mov	r0, sl
   1d12c:	bl	1401c <fwrite@plt>
   1d130:	str	r6, [sp, #4]
   1d134:	str	r6, [sp]
   1d138:	mov	r3, r8
   1d13c:	mov	r2, r7
   1d140:	mov	r1, r5
   1d144:	mov	r0, fp
   1d148:	bl	1aba0 <__flatcc_gen_sort@@Base+0x8b0>
   1d14c:	ldr	r3, [fp, #204]	; 0xcc
   1d150:	mov	r2, #12
   1d154:	mov	r1, r6
   1d158:	ldr	r0, [pc, #2680]	; 1dbd8 <__flatcc_fb_gen_c_builder@@Base+0xfe8>
   1d15c:	bl	1401c <fwrite@plt>
   1d160:	str	r4, [sp, #24]
   1d164:	str	r4, [sp, #20]
   1d168:	ldrh	r3, [r5, #104]	; 0x68
   1d16c:	str	r3, [sp, #16]
   1d170:	ldrd	r2, [r5, #112]	; 0x70
   1d174:	strd	r2, [sp, #8]
   1d178:	str	r4, [sp]
   1d17c:	ldr	r2, [sp, #32]
   1d180:	mov	r3, r2
   1d184:	ldr	r1, [pc, #2664]	; 1dbf4 <__flatcc_fb_gen_c_builder@@Base+0x1004>
   1d188:	ldr	r0, [fp, #204]	; 0xcc
   1d18c:	bl	14094 <fprintf@plt>
   1d190:	ldr	r1, [fp, #204]	; 0xcc
   1d194:	mov	r0, #10
   1d198:	bl	140f4 <fputc@plt>
   1d19c:	ldr	r5, [r5, #120]	; 0x78
   1d1a0:	cmp	r5, r7
   1d1a4:	bne	1ce3c <__flatcc_fb_gen_c_builder@@Base+0x24c>
   1d1a8:	mov	r2, #220	; 0xdc
   1d1ac:	mov	r1, #0
   1d1b0:	add	r0, sp, #260	; 0x104
   1d1b4:	bl	140ac <memset@plt>
   1d1b8:	ldr	r3, [fp, #208]	; 0xd0
   1d1bc:	ldr	r4, [r3, #40]	; 0x28
   1d1c0:	cmp	r4, #0
   1d1c4:	beq	1d258 <__flatcc_fb_gen_c_builder@@Base+0x668>
   1d1c8:	mov	r2, #0
   1d1cc:	add	r5, sp, #260	; 0x104
   1d1d0:	ldr	r7, [pc, #2592]	; 1dbf8 <__flatcc_fb_gen_c_builder@@Base+0x1008>
   1d1d4:	mov	r6, #1
   1d1d8:	ldr	r8, [sp, #32]
   1d1dc:	b	1d210 <__flatcc_fb_gen_c_builder@@Base+0x620>
   1d1e0:	ldr	r1, [fp, #204]	; 0xcc
   1d1e4:	mov	r0, #10
   1d1e8:	bl	140f4 <fputc@plt>
   1d1ec:	b	1ce2c <__flatcc_fb_gen_c_builder@@Base+0x23c>
   1d1f0:	ldr	r3, [pc, #2564]	; 1dbfc <__flatcc_fb_gen_c_builder@@Base+0x100c>
   1d1f4:	ldr	r2, [pc, #2564]	; 1dc00 <__flatcc_fb_gen_c_builder@@Base+0x1010>
   1d1f8:	ldr	r1, [pc, #2804]	; 1dcf4 <__flatcc_fb_gen_c_builder@@Base+0x1104>
   1d1fc:	ldr	r0, [pc, #2560]	; 1dc04 <__flatcc_fb_gen_c_builder@@Base+0x1014>
   1d200:	bl	14148 <__assert_fail@plt>
   1d204:	ldr	r4, [r4]
   1d208:	cmp	r4, #0
   1d20c:	beq	1d250 <__flatcc_fb_gen_c_builder@@Base+0x660>
   1d210:	ldrh	r3, [r4, #8]
   1d214:	cmp	r3, #4
   1d218:	bne	1d204 <__flatcc_fb_gen_c_builder@@Base+0x614>
   1d21c:	mov	r2, r5
   1d220:	mov	r1, r4
   1d224:	ldr	r0, [r4, #12]
   1d228:	bl	15edc <__flatcc_fb_scoped_symbol_name@@Base>
   1d22c:	str	r5, [sp, #4]
   1d230:	str	r8, [sp]
   1d234:	mov	r3, r5
   1d238:	mov	r2, r8
   1d23c:	mov	r1, r7
   1d240:	ldr	r0, [fp, #204]	; 0xcc
   1d244:	bl	14094 <fprintf@plt>
   1d248:	mov	r2, r6
   1d24c:	b	1d204 <__flatcc_fb_gen_c_builder@@Base+0x614>
   1d250:	cmp	r2, #0
   1d254:	bne	1d270 <__flatcc_fb_gen_c_builder@@Base+0x680>
   1d258:	ldr	r3, [fp, #208]	; 0xd0
   1d25c:	ldr	r5, [r3, #40]	; 0x28
   1d260:	cmp	r5, #0
   1d264:	beq	1db80 <__flatcc_fb_gen_c_builder@@Base+0xf90>
   1d268:	mov	sl, #0
   1d26c:	b	1d388 <__flatcc_fb_gen_c_builder@@Base+0x798>
   1d270:	ldr	r1, [fp, #204]	; 0xcc
   1d274:	mov	r0, #10
   1d278:	bl	140f4 <fputc@plt>
   1d27c:	b	1d258 <__flatcc_fb_gen_c_builder@@Base+0x668>
   1d280:	mov	r6, #0
   1d284:	b	1d3cc <__flatcc_fb_gen_c_builder@@Base+0x7dc>
   1d288:	ldr	r2, [pc, #2424]	; 1dc08 <__flatcc_fb_gen_c_builder@@Base+0x1018>
   1d28c:	mov	r1, r8
   1d290:	ldr	r0, [fp, #204]	; 0xcc
   1d294:	bl	14094 <fprintf@plt>
   1d298:	b	1d2a8 <__flatcc_fb_gen_c_builder@@Base+0x6b8>
   1d29c:	ldr	r1, [fp, #204]	; 0xcc
   1d2a0:	mov	r0, r9
   1d2a4:	bl	140f4 <fputc@plt>
   1d2a8:	ldr	r2, [r4, #96]	; 0x60
   1d2ac:	ldr	r1, [pc, #2392]	; 1dc0c <__flatcc_fb_gen_c_builder@@Base+0x101c>
   1d2b0:	ldr	r0, [fp, #204]	; 0xcc
   1d2b4:	bl	14094 <fprintf@plt>
   1d2b8:	add	r7, r7, #1
   1d2bc:	ldr	r4, [r4]
   1d2c0:	cmp	r4, #0
   1d2c4:	beq	1d318 <__flatcc_fb_gen_c_builder@@Base+0x728>
   1d2c8:	ldrh	r3, [r4, #72]	; 0x48
   1d2cc:	tst	r3, #4
   1d2d0:	bne	1d2bc <__flatcc_fb_gen_c_builder@@Base+0x6cc>
   1d2d4:	tst	r3, #256	; 0x100
   1d2d8:	beq	1d2bc <__flatcc_fb_gen_c_builder@@Base+0x6cc>
   1d2dc:	cmp	r7, #0
   1d2e0:	ble	1d29c <__flatcc_fb_gen_c_builder@@Base+0x6ac>
   1d2e4:	cmp	r6, #0
   1d2e8:	beq	1d2a8 <__flatcc_fb_gen_c_builder@@Base+0x6b8>
   1d2ec:	tst	r7, #3
   1d2f0:	bne	1d300 <__flatcc_fb_gen_c_builder@@Base+0x710>
   1d2f4:	sub	r3, r6, r7
   1d2f8:	cmp	r3, #2
   1d2fc:	bgt	1d288 <__flatcc_fb_gen_c_builder@@Base+0x698>
   1d300:	ldr	r3, [fp, #204]	; 0xcc
   1d304:	mov	r2, sl
   1d308:	mov	r1, #1
   1d30c:	ldr	r0, [pc, #2300]	; 1dc10 <__flatcc_fb_gen_c_builder@@Base+0x1020>
   1d310:	bl	1401c <fwrite@plt>
   1d314:	b	1d2a8 <__flatcc_fb_gen_c_builder@@Base+0x6b8>
   1d318:	cmp	r7, #0
   1d31c:	ble	1d414 <__flatcc_fb_gen_c_builder@@Base+0x824>
   1d320:	ldr	r3, [fp, #204]	; 0xcc
   1d324:	mov	r2, #7
   1d328:	mov	r1, #1
   1d32c:	ldr	r0, [pc, #2272]	; 1dc14 <__flatcc_fb_gen_c_builder@@Base+0x1024>
   1d330:	bl	1401c <fwrite@plt>
   1d334:	add	r4, sp, #260	; 0x104
   1d338:	mov	r2, #220	; 0xdc
   1d33c:	mov	r1, #0
   1d340:	mov	r0, r4
   1d344:	bl	140ac <memset@plt>
   1d348:	mov	r2, r4
   1d34c:	ldr	r1, [sp, #36]	; 0x24
   1d350:	ldr	r0, [r5, #12]
   1d354:	bl	15edc <__flatcc_fb_scoped_symbol_name@@Base>
   1d358:	ldrd	r2, [r5, #96]	; 0x60
   1d35c:	strd	r2, [sp, #8]
   1d360:	str	r4, [sp]
   1d364:	ldr	r2, [sp, #32]
   1d368:	mov	r3, r2
   1d36c:	ldr	r1, [pc, #2212]	; 1dc18 <__flatcc_fb_gen_c_builder@@Base+0x1028>
   1d370:	ldr	r0, [fp, #204]	; 0xcc
   1d374:	bl	14094 <fprintf@plt>
   1d378:	mov	sl, #1
   1d37c:	ldr	r5, [r5]
   1d380:	cmp	r5, #0
   1d384:	beq	1d42c <__flatcc_fb_gen_c_builder@@Base+0x83c>
   1d388:	ldrh	r3, [r5, #8]
   1d38c:	cmp	r3, #0
   1d390:	bne	1d37c <__flatcc_fb_gen_c_builder@@Base+0x78c>
   1d394:	mov	r2, #220	; 0xdc
   1d398:	mov	r1, #0
   1d39c:	add	r0, sp, #260	; 0x104
   1d3a0:	bl	140ac <memset@plt>
   1d3a4:	ldr	r3, [r5, #20]
   1d3a8:	cmp	r3, #0
   1d3ac:	beq	1d280 <__flatcc_fb_gen_c_builder@@Base+0x690>
   1d3b0:	mov	r6, #0
   1d3b4:	ldrh	r2, [r3, #72]	; 0x48
   1d3b8:	tst	r2, #4
   1d3bc:	addeq	r6, r6, #1
   1d3c0:	ldr	r3, [r3]
   1d3c4:	cmp	r3, #0
   1d3c8:	bne	1d3b4 <__flatcc_fb_gen_c_builder@@Base+0x7c4>
   1d3cc:	str	r5, [sp, #36]	; 0x24
   1d3d0:	add	r2, sp, #260	; 0x104
   1d3d4:	mov	r1, r5
   1d3d8:	ldr	r0, [r5, #12]
   1d3dc:	bl	15edc <__flatcc_fb_scoped_symbol_name@@Base>
   1d3e0:	add	r3, sp, #260	; 0x104
   1d3e4:	ldr	r2, [sp, #32]
   1d3e8:	ldr	r1, [pc, #2092]	; 1dc1c <__flatcc_fb_gen_c_builder@@Base+0x102c>
   1d3ec:	ldr	r0, [fp, #204]	; 0xcc
   1d3f0:	bl	14094 <fprintf@plt>
   1d3f4:	ldr	r4, [r5, #20]
   1d3f8:	cmp	r4, #0
   1d3fc:	beq	1d414 <__flatcc_fb_gen_c_builder@@Base+0x824>
   1d400:	mov	r7, #0
   1d404:	mov	r9, #32
   1d408:	mov	sl, #2
   1d40c:	ldr	r8, [pc, #2060]	; 1dc20 <__flatcc_fb_gen_c_builder@@Base+0x1030>
   1d410:	b	1d2c8 <__flatcc_fb_gen_c_builder@@Base+0x6d8>
   1d414:	ldr	r3, [fp, #204]	; 0xcc
   1d418:	mov	r2, #6
   1d41c:	mov	r1, #1
   1d420:	ldr	r0, [pc, #2044]	; 1dc24 <__flatcc_fb_gen_c_builder@@Base+0x1034>
   1d424:	bl	1401c <fwrite@plt>
   1d428:	b	1d334 <__flatcc_fb_gen_c_builder@@Base+0x744>
   1d42c:	ldr	r3, [fp, #208]	; 0xd0
   1d430:	ldr	r9, [r3, #40]	; 0x28
   1d434:	cmp	r9, #0
   1d438:	bne	1dae0 <__flatcc_fb_gen_c_builder@@Base+0xef0>
   1d43c:	cmp	sl, #0
   1d440:	bne	1db70 <__flatcc_fb_gen_c_builder@@Base+0xf80>
   1d444:	ldr	r3, [fp, #208]	; 0xd0
   1d448:	ldr	r4, [r3, #40]	; 0x28
   1d44c:	cmp	r4, #0
   1d450:	beq	1e0bc <__flatcc_fb_gen_c_builder@@Base+0x14cc>
   1d454:	mov	r2, #0
   1d458:	add	r6, sp, #40	; 0x28
   1d45c:	mov	r7, #220	; 0xdc
   1d460:	ldr	r9, [pc, #1984]	; 1dc28 <__flatcc_fb_gen_c_builder@@Base+0x1038>
   1d464:	ldr	r8, [pc, #1984]	; 1dc2c <__flatcc_fb_gen_c_builder@@Base+0x103c>
   1d468:	ldrh	r3, [r4, #8]
   1d46c:	cmp	r3, #4
   1d470:	beq	1dd2c <__flatcc_fb_gen_c_builder@@Base+0x113c>
   1d474:	ldr	r4, [r4]
   1d478:	cmp	r4, #0
   1d47c:	bne	1d468 <__flatcc_fb_gen_c_builder@@Base+0x878>
   1d480:	cmp	r2, #0
   1d484:	beq	1d494 <__flatcc_fb_gen_c_builder@@Base+0x8a4>
   1d488:	ldr	r1, [fp, #204]	; 0xcc
   1d48c:	mov	r0, #10
   1d490:	bl	140f4 <fputc@plt>
   1d494:	cmp	sl, #0
   1d498:	beq	1e0bc <__flatcc_fb_gen_c_builder@@Base+0x14cc>
   1d49c:	ldr	r3, [fp, #208]	; 0xd0
   1d4a0:	ldr	r5, [r3, #40]	; 0x28
   1d4a4:	cmp	r5, #0
   1d4a8:	beq	1e0bc <__flatcc_fb_gen_c_builder@@Base+0x14cc>
   1d4ac:	ldr	r9, [pc, #1916]	; 1dc30 <__flatcc_fb_gen_c_builder@@Base+0x1040>
   1d4b0:	str	sl, [sp, #36]	; 0x24
   1d4b4:	ldr	sl, [sp, #32]
   1d4b8:	b	1e02c <__flatcc_fb_gen_c_builder@@Base+0x143c>
   1d4bc:	mov	r5, #0
   1d4c0:	b	1db34 <__flatcc_fb_gen_c_builder@@Base+0xf44>
   1d4c4:	ldr	r3, [fp, #204]	; 0xcc
   1d4c8:	mov	r2, #2
   1d4cc:	mov	r1, #1
   1d4d0:	ldr	r0, [pc, #1848]	; 1dc10 <__flatcc_fb_gen_c_builder@@Base+0x1020>
   1d4d4:	bl	1401c <fwrite@plt>
   1d4d8:	b	1d504 <__flatcc_fb_gen_c_builder@@Base+0x914>
   1d4dc:	tst	r2, #3
   1d4e0:	bne	1d4f0 <__flatcc_fb_gen_c_builder@@Base+0x900>
   1d4e4:	sub	r2, r5, r2
   1d4e8:	cmp	r2, #2
   1d4ec:	bgt	1d53c <__flatcc_fb_gen_c_builder@@Base+0x94c>
   1d4f0:	ldr	r3, [fp, #204]	; 0xcc
   1d4f4:	mov	r2, #2
   1d4f8:	mov	r1, #1
   1d4fc:	ldr	r0, [pc, #1804]	; 1dc10 <__flatcc_fb_gen_c_builder@@Base+0x1020>
   1d500:	bl	1401c <fwrite@plt>
   1d504:	ldrh	r3, [r4, #24]
   1d508:	sub	r3, r3, #7
   1d50c:	cmp	r3, #8
   1d510:	ldrls	pc, [pc, r3, lsl #2]
   1d514:	b	1d994 <__flatcc_fb_gen_c_builder@@Base+0xda4>
   1d518:	andeq	sp, r1, r4, lsr #16
   1d51c:	andeq	sp, r1, r0, lsl #14
   1d520:	andeq	sp, r1, r4, ror r9
   1d524:	andeq	sp, r1, r0, lsl r9
   1d528:	muleq	r1, r4, r9
   1d52c:	muleq	r1, r4, r9
   1d530:	muleq	r1, r4, r9
   1d534:	andeq	sp, r1, r0, asr r5
   1d538:	andeq	sp, r1, r8, asr #12
   1d53c:	ldr	r2, [pc, #1776]	; 1dc34 <__flatcc_fb_gen_c_builder@@Base+0x1044>
   1d540:	ldr	r1, [pc, #1752]	; 1dc20 <__flatcc_fb_gen_c_builder@@Base+0x1030>
   1d544:	ldr	r0, [fp, #204]	; 0xcc
   1d548:	bl	14094 <fprintf@plt>
   1d54c:	b	1d504 <__flatcc_fb_gen_c_builder@@Base+0x914>
   1d550:	ldr	r3, [r4, #16]
   1d554:	add	r2, sp, #260	; 0x104
   1d558:	mov	r1, r3
   1d55c:	ldr	r0, [r3, #12]
   1d560:	bl	15edc <__flatcc_fb_scoped_symbol_name@@Base>
   1d564:	ldr	r3, [r4, #16]
   1d568:	ldrh	r3, [r3, #8]
   1d56c:	cmp	r3, #4
   1d570:	ldrls	pc, [pc, r3, lsl #2]
   1d574:	b	1d60c <__flatcc_fb_gen_c_builder@@Base+0xa1c>
   1d578:	andeq	sp, r1, ip, asr #11
   1d57c:	andeq	sp, r1, ip, lsl #11
   1d580:	andeq	sp, r1, ip, lsl #12
   1d584:	andeq	sp, r1, ip, lsr #11
   1d588:	andeq	sp, r1, ip, ror #11
   1d58c:	ldrd	r2, [r4, #96]	; 0x60
   1d590:	strd	r2, [sp]
   1d594:	add	r2, sp, #260	; 0x104
   1d598:	ldr	r1, [pc, #1688]	; 1dc38 <__flatcc_fb_gen_c_builder@@Base+0x1048>
   1d59c:	ldr	r0, [fp, #204]	; 0xcc
   1d5a0:	bl	14094 <fprintf@plt>
   1d5a4:	mov	r2, r6
   1d5a8:	b	1d92c <__flatcc_fb_gen_c_builder@@Base+0xd3c>
   1d5ac:	ldrd	r2, [r4, #96]	; 0x60
   1d5b0:	strd	r2, [sp]
   1d5b4:	add	r2, sp, #260	; 0x104
   1d5b8:	ldr	r1, [pc, #1660]	; 1dc3c <__flatcc_fb_gen_c_builder@@Base+0x104c>
   1d5bc:	ldr	r0, [fp, #204]	; 0xcc
   1d5c0:	bl	14094 <fprintf@plt>
   1d5c4:	mov	r2, r6
   1d5c8:	b	1d92c <__flatcc_fb_gen_c_builder@@Base+0xd3c>
   1d5cc:	ldrd	r2, [r4, #96]	; 0x60
   1d5d0:	strd	r2, [sp]
   1d5d4:	add	r2, sp, #260	; 0x104
   1d5d8:	ldr	r1, [pc, #1632]	; 1dc40 <__flatcc_fb_gen_c_builder@@Base+0x1050>
   1d5dc:	ldr	r0, [fp, #204]	; 0xcc
   1d5e0:	bl	14094 <fprintf@plt>
   1d5e4:	mov	r2, r6
   1d5e8:	b	1d92c <__flatcc_fb_gen_c_builder@@Base+0xd3c>
   1d5ec:	ldrd	r2, [r4, #96]	; 0x60
   1d5f0:	strd	r2, [sp]
   1d5f4:	add	r2, sp, #260	; 0x104
   1d5f8:	ldr	r1, [pc, #1604]	; 1dc44 <__flatcc_fb_gen_c_builder@@Base+0x1054>
   1d5fc:	ldr	r0, [fp, #204]	; 0xcc
   1d600:	bl	14094 <fprintf@plt>
   1d604:	mov	r2, r6
   1d608:	b	1d92c <__flatcc_fb_gen_c_builder@@Base+0xd3c>
   1d60c:	ldr	r5, [pc, #1588]	; 1dc48 <__flatcc_fb_gen_c_builder@@Base+0x1058>
   1d610:	ldr	r4, [pc, #1756]	; 1dcf4 <__flatcc_fb_gen_c_builder@@Base+0x1104>
   1d614:	ldr	r3, [pc, #1756]	; 1dcf8 <__flatcc_fb_gen_c_builder@@Base+0x1108>
   1d618:	ldr	r0, [r3]
   1d61c:	ldr	r3, [pc, #1576]	; 1dc4c <__flatcc_fb_gen_c_builder@@Base+0x105c>
   1d620:	str	r3, [sp]
   1d624:	mov	r3, r5
   1d628:	mov	r2, r4
   1d62c:	ldr	r1, [pc, #1740]	; 1dd00 <__flatcc_fb_gen_c_builder@@Base+0x1110>
   1d630:	bl	14094 <fprintf@plt>
   1d634:	ldr	r3, [pc, #1556]	; 1dc50 <__flatcc_fb_gen_c_builder@@Base+0x1060>
   1d638:	mov	r2, r5
   1d63c:	mov	r1, r4
   1d640:	ldr	r0, [pc, #1728]	; 1dd08 <__flatcc_fb_gen_c_builder@@Base+0x1118>
   1d644:	bl	14148 <__assert_fail@plt>
   1d648:	ldr	r3, [r4, #16]
   1d64c:	add	r2, sp, #260	; 0x104
   1d650:	mov	r1, r3
   1d654:	ldr	r0, [r3, #12]
   1d658:	bl	15edc <__flatcc_fb_scoped_symbol_name@@Base>
   1d65c:	ldr	r3, [r4, #16]
   1d660:	ldrh	r3, [r3, #8]
   1d664:	cmp	r3, #4
   1d668:	ldrls	pc, [pc, r3, lsl #2]
   1d66c:	b	1d6c4 <__flatcc_fb_gen_c_builder@@Base+0xad4>
   1d670:	andeq	sp, r1, r4, lsl #13
   1d674:	andeq	sp, r1, r4, lsl #13
   1d678:	andeq	sp, r1, r4, asr #13
   1d67c:	andeq	sp, r1, r4, lsl #13
   1d680:	andeq	sp, r1, r4, lsr #13
   1d684:	ldrd	r2, [r4, #96]	; 0x60
   1d688:	strd	r2, [sp]
   1d68c:	add	r2, sp, #260	; 0x104
   1d690:	ldr	r1, [pc, #1468]	; 1dc54 <__flatcc_fb_gen_c_builder@@Base+0x1064>
   1d694:	ldr	r0, [fp, #204]	; 0xcc
   1d698:	bl	14094 <fprintf@plt>
   1d69c:	mov	r2, r6
   1d6a0:	b	1d92c <__flatcc_fb_gen_c_builder@@Base+0xd3c>
   1d6a4:	ldrd	r2, [r4, #96]	; 0x60
   1d6a8:	strd	r2, [sp]
   1d6ac:	add	r2, sp, #260	; 0x104
   1d6b0:	ldr	r1, [pc, #1440]	; 1dc58 <__flatcc_fb_gen_c_builder@@Base+0x1068>
   1d6b4:	ldr	r0, [fp, #204]	; 0xcc
   1d6b8:	bl	14094 <fprintf@plt>
   1d6bc:	mov	r2, r6
   1d6c0:	b	1d92c <__flatcc_fb_gen_c_builder@@Base+0xd3c>
   1d6c4:	ldr	r5, [pc, #1424]	; 1dc5c <__flatcc_fb_gen_c_builder@@Base+0x106c>
   1d6c8:	ldr	r4, [pc, #1572]	; 1dcf4 <__flatcc_fb_gen_c_builder@@Base+0x1104>
   1d6cc:	ldr	r3, [pc, #1572]	; 1dcf8 <__flatcc_fb_gen_c_builder@@Base+0x1108>
   1d6d0:	ldr	r0, [r3]
   1d6d4:	ldr	r3, [pc, #1412]	; 1dc60 <__flatcc_fb_gen_c_builder@@Base+0x1070>
   1d6d8:	str	r3, [sp]
   1d6dc:	mov	r3, r5
   1d6e0:	mov	r2, r4
   1d6e4:	ldr	r1, [pc, #1556]	; 1dd00 <__flatcc_fb_gen_c_builder@@Base+0x1110>
   1d6e8:	bl	14094 <fprintf@plt>
   1d6ec:	ldr	r3, [pc, #1372]	; 1dc50 <__flatcc_fb_gen_c_builder@@Base+0x1060>
   1d6f0:	mov	r2, r5
   1d6f4:	mov	r1, r4
   1d6f8:	ldr	r0, [pc, #1544]	; 1dd08 <__flatcc_fb_gen_c_builder@@Base+0x1118>
   1d6fc:	bl	14148 <__assert_fail@plt>
   1d700:	ldr	r3, [r4, #16]
   1d704:	cmp	r3, #5
   1d708:	beq	1d778 <__flatcc_fb_gen_c_builder@@Base+0xb88>
   1d70c:	sub	r3, r3, #1
   1d710:	cmp	r3, #10
   1d714:	ldrls	pc, [pc, r3, lsl #2]
   1d718:	b	1d7d4 <__flatcc_fb_gen_c_builder@@Base+0xbe4>
   1d71c:	andeq	sp, r1, ip, lsl #16
   1d720:	andeq	sp, r1, r8, asr #14
   1d724:	andeq	sp, r1, r8, lsl r8
   1d728:	andeq	sp, r1, r4, asr r7
   1d72c:	andeq	sp, r1, r4, lsl #15
   1d730:	andeq	sp, r1, ip, lsl #15
   1d734:	muleq	r1, r8, r7
   1d738:	andeq	sp, r1, r4, lsr #15
   1d73c:			; <UNDEFINED> instruction: 0x0001d7b0
   1d740:	andeq	sp, r1, r8, asr #15
   1d744:			; <UNDEFINED> instruction: 0x0001d7bc
   1d748:	ldr	r2, [pc, #1300]	; 1dc64 <__flatcc_fb_gen_c_builder@@Base+0x1074>
   1d74c:	ldr	r3, [pc, #1300]	; 1dc68 <__flatcc_fb_gen_c_builder@@Base+0x1078>
   1d750:	b	1d75c <__flatcc_fb_gen_c_builder@@Base+0xb6c>
   1d754:	ldr	r2, [pc, #1288]	; 1dc64 <__flatcc_fb_gen_c_builder@@Base+0x1074>
   1d758:	ldr	r3, [pc, #1292]	; 1dc6c <__flatcc_fb_gen_c_builder@@Base+0x107c>
   1d75c:	ldrd	r0, [r4, #96]	; 0x60
   1d760:	strd	r0, [sp]
   1d764:	ldr	r1, [pc, #1284]	; 1dc70 <__flatcc_fb_gen_c_builder@@Base+0x1080>
   1d768:	ldr	r0, [fp, #204]	; 0xcc
   1d76c:	bl	14094 <fprintf@plt>
   1d770:	mov	r2, r6
   1d774:	b	1d92c <__flatcc_fb_gen_c_builder@@Base+0xd3c>
   1d778:	ldr	r2, [sp, #32]
   1d77c:	ldr	r3, [pc, #1264]	; 1dc74 <__flatcc_fb_gen_c_builder@@Base+0x1084>
   1d780:	b	1d75c <__flatcc_fb_gen_c_builder@@Base+0xb6c>
   1d784:	ldr	r2, [pc, #1240]	; 1dc64 <__flatcc_fb_gen_c_builder@@Base+0x1074>
   1d788:	b	1d77c <__flatcc_fb_gen_c_builder@@Base+0xb8c>
   1d78c:	ldr	r2, [pc, #1232]	; 1dc64 <__flatcc_fb_gen_c_builder@@Base+0x1074>
   1d790:	ldr	r3, [pc, #1248]	; 1dc78 <__flatcc_fb_gen_c_builder@@Base+0x1088>
   1d794:	b	1d75c <__flatcc_fb_gen_c_builder@@Base+0xb6c>
   1d798:	ldr	r2, [pc, #1220]	; 1dc64 <__flatcc_fb_gen_c_builder@@Base+0x1074>
   1d79c:	ldr	r3, [pc, #1240]	; 1dc7c <__flatcc_fb_gen_c_builder@@Base+0x108c>
   1d7a0:	b	1d75c <__flatcc_fb_gen_c_builder@@Base+0xb6c>
   1d7a4:	ldr	r2, [pc, #1208]	; 1dc64 <__flatcc_fb_gen_c_builder@@Base+0x1074>
   1d7a8:	ldr	r3, [pc, #1232]	; 1dc80 <__flatcc_fb_gen_c_builder@@Base+0x1090>
   1d7ac:	b	1d75c <__flatcc_fb_gen_c_builder@@Base+0xb6c>
   1d7b0:	ldr	r2, [pc, #1196]	; 1dc64 <__flatcc_fb_gen_c_builder@@Base+0x1074>
   1d7b4:	ldr	r3, [pc, #1224]	; 1dc84 <__flatcc_fb_gen_c_builder@@Base+0x1094>
   1d7b8:	b	1d75c <__flatcc_fb_gen_c_builder@@Base+0xb6c>
   1d7bc:	ldr	r2, [pc, #1184]	; 1dc64 <__flatcc_fb_gen_c_builder@@Base+0x1074>
   1d7c0:	ldr	r3, [pc, #1216]	; 1dc88 <__flatcc_fb_gen_c_builder@@Base+0x1098>
   1d7c4:	b	1d75c <__flatcc_fb_gen_c_builder@@Base+0xb6c>
   1d7c8:	ldr	r2, [pc, #1172]	; 1dc64 <__flatcc_fb_gen_c_builder@@Base+0x1074>
   1d7cc:	ldr	r3, [pc, #1208]	; 1dc8c <__flatcc_fb_gen_c_builder@@Base+0x109c>
   1d7d0:	b	1d75c <__flatcc_fb_gen_c_builder@@Base+0xb6c>
   1d7d4:	ldr	r4, [pc, #1204]	; 1dc90 <__flatcc_fb_gen_c_builder@@Base+0x10a0>
   1d7d8:	ldr	r3, [pc, #1304]	; 1dcf8 <__flatcc_fb_gen_c_builder@@Base+0x1108>
   1d7dc:	ldr	r0, [r3]
   1d7e0:	ldr	r3, [pc, #1196]	; 1dc94 <__flatcc_fb_gen_c_builder@@Base+0x10a4>
   1d7e4:	str	r3, [sp]
   1d7e8:	mov	r3, #141	; 0x8d
   1d7ec:	mov	r2, r4
   1d7f0:	ldr	r1, [pc, #1288]	; 1dd00 <__flatcc_fb_gen_c_builder@@Base+0x1110>
   1d7f4:	bl	14094 <fprintf@plt>
   1d7f8:	ldr	r3, [pc, #1176]	; 1dc98 <__flatcc_fb_gen_c_builder@@Base+0x10a8>
   1d7fc:	mov	r2, #141	; 0x8d
   1d800:	mov	r1, r4
   1d804:	ldr	r0, [pc, #1276]	; 1dd08 <__flatcc_fb_gen_c_builder@@Base+0x1118>
   1d808:	bl	14148 <__assert_fail@plt>
   1d80c:	ldr	r2, [pc, #1104]	; 1dc64 <__flatcc_fb_gen_c_builder@@Base+0x1074>
   1d810:	ldr	r3, [pc, #1156]	; 1dc9c <__flatcc_fb_gen_c_builder@@Base+0x10ac>
   1d814:	b	1d75c <__flatcc_fb_gen_c_builder@@Base+0xb6c>
   1d818:	ldr	r2, [pc, #1092]	; 1dc64 <__flatcc_fb_gen_c_builder@@Base+0x1074>
   1d81c:	ldr	r3, [pc, #1148]	; 1dca0 <__flatcc_fb_gen_c_builder@@Base+0x10b0>
   1d820:	b	1d75c <__flatcc_fb_gen_c_builder@@Base+0xb6c>
   1d824:	ldr	r3, [r4, #16]
   1d828:	sub	r3, r3, #1
   1d82c:	cmp	r3, #10
   1d830:	ldrls	pc, [pc, r3, lsl #2]
   1d834:	b	1d8ac <__flatcc_fb_gen_c_builder@@Base+0xcbc>
   1d838:	andeq	sp, r1, r4, ror #17
   1d83c:	andeq	sp, r1, r4, ror #16
   1d840:	andeq	sp, r1, ip, ror #17
   1d844:	andeq	sp, r1, ip, ror #16
   1d848:	andeq	sp, r1, r4, ror r8
   1d84c:	andeq	sp, r1, ip, ror r8
   1d850:	andeq	sp, r1, r4, lsl #17
   1d854:	andeq	sp, r1, ip, lsl #17
   1d858:	muleq	r1, r4, r8
   1d85c:	andeq	sp, r1, r4, lsr #17
   1d860:	muleq	r1, ip, r8
   1d864:	ldr	r3, [pc, #1080]	; 1dca4 <__flatcc_fb_gen_c_builder@@Base+0x10b4>
   1d868:	b	1d8f0 <__flatcc_fb_gen_c_builder@@Base+0xd00>
   1d86c:	ldr	r3, [pc, #1076]	; 1dca8 <__flatcc_fb_gen_c_builder@@Base+0x10b8>
   1d870:	b	1d8f0 <__flatcc_fb_gen_c_builder@@Base+0xd00>
   1d874:	ldr	r3, [pc, #1072]	; 1dcac <__flatcc_fb_gen_c_builder@@Base+0x10bc>
   1d878:	b	1d8f0 <__flatcc_fb_gen_c_builder@@Base+0xd00>
   1d87c:	ldr	r3, [pc, #1068]	; 1dcb0 <__flatcc_fb_gen_c_builder@@Base+0x10c0>
   1d880:	b	1d8f0 <__flatcc_fb_gen_c_builder@@Base+0xd00>
   1d884:	ldr	r3, [pc, #1064]	; 1dcb4 <__flatcc_fb_gen_c_builder@@Base+0x10c4>
   1d888:	b	1d8f0 <__flatcc_fb_gen_c_builder@@Base+0xd00>
   1d88c:	ldr	r3, [pc, #1060]	; 1dcb8 <__flatcc_fb_gen_c_builder@@Base+0x10c8>
   1d890:	b	1d8f0 <__flatcc_fb_gen_c_builder@@Base+0xd00>
   1d894:	ldr	r3, [pc, #1056]	; 1dcbc <__flatcc_fb_gen_c_builder@@Base+0x10cc>
   1d898:	b	1d8f0 <__flatcc_fb_gen_c_builder@@Base+0xd00>
   1d89c:	ldr	r3, [pc, #996]	; 1dc88 <__flatcc_fb_gen_c_builder@@Base+0x1098>
   1d8a0:	b	1d8f0 <__flatcc_fb_gen_c_builder@@Base+0xd00>
   1d8a4:	ldr	r3, [pc, #992]	; 1dc8c <__flatcc_fb_gen_c_builder@@Base+0x109c>
   1d8a8:	b	1d8f0 <__flatcc_fb_gen_c_builder@@Base+0xd00>
   1d8ac:	ldr	r4, [pc, #988]	; 1dc90 <__flatcc_fb_gen_c_builder@@Base+0x10a0>
   1d8b0:	ldr	r3, [pc, #1088]	; 1dcf8 <__flatcc_fb_gen_c_builder@@Base+0x1108>
   1d8b4:	ldr	r0, [r3]
   1d8b8:	ldr	r3, [pc, #980]	; 1dc94 <__flatcc_fb_gen_c_builder@@Base+0x10a4>
   1d8bc:	str	r3, [sp]
   1d8c0:	mov	r3, #96	; 0x60
   1d8c4:	mov	r2, r4
   1d8c8:	ldr	r1, [pc, #1072]	; 1dd00 <__flatcc_fb_gen_c_builder@@Base+0x1110>
   1d8cc:	bl	14094 <fprintf@plt>
   1d8d0:	ldr	r3, [pc, #1000]	; 1dcc0 <__flatcc_fb_gen_c_builder@@Base+0x10d0>
   1d8d4:	mov	r2, #96	; 0x60
   1d8d8:	mov	r1, r4
   1d8dc:	ldr	r0, [pc, #1060]	; 1dd08 <__flatcc_fb_gen_c_builder@@Base+0x1118>
   1d8e0:	bl	14148 <__assert_fail@plt>
   1d8e4:	ldr	r3, [pc, #984]	; 1dcc4 <__flatcc_fb_gen_c_builder@@Base+0x10d4>
   1d8e8:	b	1d8f0 <__flatcc_fb_gen_c_builder@@Base+0xd00>
   1d8ec:	ldr	r3, [pc, #980]	; 1dcc8 <__flatcc_fb_gen_c_builder@@Base+0x10d8>
   1d8f0:	ldrd	r0, [r4, #96]	; 0x60
   1d8f4:	strd	r0, [sp]
   1d8f8:	ldr	r2, [sp, #32]
   1d8fc:	ldr	r1, [pc, #968]	; 1dccc <__flatcc_fb_gen_c_builder@@Base+0x10dc>
   1d900:	ldr	r0, [fp, #204]	; 0xcc
   1d904:	bl	14094 <fprintf@plt>
   1d908:	mov	r2, r6
   1d90c:	b	1d92c <__flatcc_fb_gen_c_builder@@Base+0xd3c>
   1d910:	ldrd	r2, [r4, #96]	; 0x60
   1d914:	strd	r2, [sp]
   1d918:	ldr	r2, [sp, #32]
   1d91c:	mov	r1, r7
   1d920:	ldr	r0, [fp, #204]	; 0xcc
   1d924:	bl	14094 <fprintf@plt>
   1d928:	mov	r2, r6
   1d92c:	ldr	r4, [r4]
   1d930:	cmp	r4, #0
   1d934:	beq	1d9d0 <__flatcc_fb_gen_c_builder@@Base+0xde0>
   1d938:	ldrh	r3, [r4, #72]	; 0x48
   1d93c:	tst	r3, #4
   1d940:	bne	1d92c <__flatcc_fb_gen_c_builder@@Base+0xd3c>
   1d944:	add	r6, r2, #1
   1d948:	cmp	r5, #0
   1d94c:	beq	1d504 <__flatcc_fb_gen_c_builder@@Base+0x914>
   1d950:	cmp	r2, #0
   1d954:	bne	1d4dc <__flatcc_fb_gen_c_builder@@Base+0x8ec>
   1d958:	cmp	r5, #4
   1d95c:	ble	1d4c4 <__flatcc_fb_gen_c_builder@@Base+0x8d4>
   1d960:	ldr	r2, [pc, #716]	; 1dc34 <__flatcc_fb_gen_c_builder@@Base+0x1044>
   1d964:	ldr	r1, [pc, #692]	; 1dc20 <__flatcc_fb_gen_c_builder@@Base+0x1030>
   1d968:	ldr	r0, [fp, #204]	; 0xcc
   1d96c:	bl	14094 <fprintf@plt>
   1d970:	b	1d504 <__flatcc_fb_gen_c_builder@@Base+0x914>
   1d974:	ldrd	r2, [r4, #96]	; 0x60
   1d978:	strd	r2, [sp]
   1d97c:	ldr	r2, [sp, #32]
   1d980:	mov	r1, r8
   1d984:	ldr	r0, [fp, #204]	; 0xcc
   1d988:	bl	14094 <fprintf@plt>
   1d98c:	mov	r2, r6
   1d990:	b	1d92c <__flatcc_fb_gen_c_builder@@Base+0xd3c>
   1d994:	ldr	r5, [pc, #820]	; 1dcd0 <__flatcc_fb_gen_c_builder@@Base+0x10e0>
   1d998:	ldr	r4, [pc, #852]	; 1dcf4 <__flatcc_fb_gen_c_builder@@Base+0x1104>
   1d99c:	ldr	r3, [pc, #852]	; 1dcf8 <__flatcc_fb_gen_c_builder@@Base+0x1108>
   1d9a0:	ldr	r0, [r3]
   1d9a4:	ldr	r3, [pc, #808]	; 1dcd4 <__flatcc_fb_gen_c_builder@@Base+0x10e4>
   1d9a8:	str	r3, [sp]
   1d9ac:	mov	r3, r5
   1d9b0:	mov	r2, r4
   1d9b4:	ldr	r1, [pc, #836]	; 1dd00 <__flatcc_fb_gen_c_builder@@Base+0x1110>
   1d9b8:	bl	14094 <fprintf@plt>
   1d9bc:	ldr	r3, [pc, #652]	; 1dc50 <__flatcc_fb_gen_c_builder@@Base+0x1060>
   1d9c0:	mov	r2, r5
   1d9c4:	mov	r1, r4
   1d9c8:	ldr	r0, [pc, #824]	; 1dd08 <__flatcc_fb_gen_c_builder@@Base+0x1118>
   1d9cc:	bl	14148 <__assert_fail@plt>
   1d9d0:	add	r2, sp, #40	; 0x28
   1d9d4:	ldr	r1, [pc, #496]	; 1dbcc <__flatcc_fb_gen_c_builder@@Base+0xfdc>
   1d9d8:	ldr	r0, [fp, #204]	; 0xcc
   1d9dc:	bl	14094 <fprintf@plt>
   1d9e0:	ldr	r4, [r9, #20]
   1d9e4:	cmp	r4, #0
   1d9e8:	beq	1daa8 <__flatcc_fb_gen_c_builder@@Base+0xeb8>
   1d9ec:	mov	r6, #0
   1d9f0:	mov	r8, #2
   1d9f4:	mov	r7, #1
   1d9f8:	b	1da5c <__flatcc_fb_gen_c_builder@@Base+0xe6c>
   1d9fc:	ldr	r3, [fp, #204]	; 0xcc
   1da00:	mov	r2, r8
   1da04:	mov	r1, r7
   1da08:	ldr	r0, [pc, #512]	; 1dc10 <__flatcc_fb_gen_c_builder@@Base+0x1020>
   1da0c:	bl	1401c <fwrite@plt>
   1da10:	b	1da3c <__flatcc_fb_gen_c_builder@@Base+0xe4c>
   1da14:	tst	r6, #3
   1da18:	bne	1da28 <__flatcc_fb_gen_c_builder@@Base+0xe38>
   1da1c:	sub	r3, r5, r6
   1da20:	cmp	r3, #2
   1da24:	bgt	1da94 <__flatcc_fb_gen_c_builder@@Base+0xea4>
   1da28:	ldr	r3, [fp, #204]	; 0xcc
   1da2c:	mov	r2, r8
   1da30:	mov	r1, r7
   1da34:	ldr	r0, [pc, #468]	; 1dc10 <__flatcc_fb_gen_c_builder@@Base+0x1020>
   1da38:	bl	1401c <fwrite@plt>
   1da3c:	ldrd	r2, [r4, #96]	; 0x60
   1da40:	ldr	r1, [pc, #656]	; 1dcd8 <__flatcc_fb_gen_c_builder@@Base+0x10e8>
   1da44:	ldr	r0, [fp, #204]	; 0xcc
   1da48:	bl	14094 <fprintf@plt>
   1da4c:	add	r6, r6, #1
   1da50:	ldr	r4, [r4]
   1da54:	cmp	r4, #0
   1da58:	beq	1daa8 <__flatcc_fb_gen_c_builder@@Base+0xeb8>
   1da5c:	ldrh	r3, [r4, #72]	; 0x48
   1da60:	tst	r3, #4
   1da64:	bne	1da50 <__flatcc_fb_gen_c_builder@@Base+0xe60>
   1da68:	cmp	r5, #0
   1da6c:	beq	1da3c <__flatcc_fb_gen_c_builder@@Base+0xe4c>
   1da70:	cmp	r6, #0
   1da74:	bne	1da14 <__flatcc_fb_gen_c_builder@@Base+0xe24>
   1da78:	cmp	r5, #4
   1da7c:	ble	1d9fc <__flatcc_fb_gen_c_builder@@Base+0xe0c>
   1da80:	ldr	r2, [pc, #428]	; 1dc34 <__flatcc_fb_gen_c_builder@@Base+0x1044>
   1da84:	ldr	r1, [pc, #404]	; 1dc20 <__flatcc_fb_gen_c_builder@@Base+0x1030>
   1da88:	ldr	r0, [fp, #204]	; 0xcc
   1da8c:	bl	14094 <fprintf@plt>
   1da90:	b	1da3c <__flatcc_fb_gen_c_builder@@Base+0xe4c>
   1da94:	ldr	r2, [pc, #408]	; 1dc34 <__flatcc_fb_gen_c_builder@@Base+0x1044>
   1da98:	ldr	r1, [pc, #384]	; 1dc20 <__flatcc_fb_gen_c_builder@@Base+0x1030>
   1da9c:	ldr	r0, [fp, #204]	; 0xcc
   1daa0:	bl	14094 <fprintf@plt>
   1daa4:	b	1da3c <__flatcc_fb_gen_c_builder@@Base+0xe4c>
   1daa8:	ldr	r1, [fp, #204]	; 0xcc
   1daac:	mov	r0, #10
   1dab0:	bl	140f4 <fputc@plt>
   1dab4:	add	r2, sp, #40	; 0x28
   1dab8:	str	r2, [sp, #4]
   1dabc:	ldr	r3, [sp, #32]
   1dac0:	str	r3, [sp]
   1dac4:	mov	r3, r2
   1dac8:	ldr	r1, [pc, #524]	; 1dcdc <__flatcc_fb_gen_c_builder@@Base+0x10ec>
   1dacc:	ldr	r0, [fp, #204]	; 0xcc
   1dad0:	bl	14094 <fprintf@plt>
   1dad4:	ldr	r9, [r9]
   1dad8:	cmp	r9, #0
   1dadc:	beq	1d43c <__flatcc_fb_gen_c_builder@@Base+0x84c>
   1dae0:	ldrh	r3, [r9, #8]
   1dae4:	cmp	r3, #0
   1dae8:	bne	1dad4 <__flatcc_fb_gen_c_builder@@Base+0xee4>
   1daec:	mov	r2, #220	; 0xdc
   1daf0:	mov	r1, #0
   1daf4:	add	r0, sp, #40	; 0x28
   1daf8:	bl	140ac <memset@plt>
   1dafc:	add	r2, sp, #40	; 0x28
   1db00:	mov	r1, r9
   1db04:	ldr	r0, [r9, #12]
   1db08:	bl	15edc <__flatcc_fb_scoped_symbol_name@@Base>
   1db0c:	ldr	r3, [r9, #20]
   1db10:	cmp	r3, #0
   1db14:	beq	1d4bc <__flatcc_fb_gen_c_builder@@Base+0x8cc>
   1db18:	mov	r5, #0
   1db1c:	ldrh	r2, [r3, #72]	; 0x48
   1db20:	tst	r2, #4
   1db24:	addeq	r5, r5, #1
   1db28:	ldr	r3, [r3]
   1db2c:	cmp	r3, #0
   1db30:	bne	1db1c <__flatcc_fb_gen_c_builder@@Base+0xf2c>
   1db34:	add	r2, sp, #40	; 0x28
   1db38:	ldr	r1, [pc, #136]	; 1dbc8 <__flatcc_fb_gen_c_builder@@Base+0xfd8>
   1db3c:	ldr	r0, [fp, #204]	; 0xcc
   1db40:	bl	14094 <fprintf@plt>
   1db44:	mov	r2, #220	; 0xdc
   1db48:	mov	r1, #0
   1db4c:	add	r0, sp, #260	; 0x104
   1db50:	bl	140ac <memset@plt>
   1db54:	ldr	r4, [r9, #20]
   1db58:	cmp	r4, #0
   1db5c:	beq	1d9d0 <__flatcc_fb_gen_c_builder@@Base+0xde0>
   1db60:	mov	r2, #0
   1db64:	ldr	r8, [pc, #372]	; 1dce0 <__flatcc_fb_gen_c_builder@@Base+0x10f0>
   1db68:	ldr	r7, [pc, #372]	; 1dce4 <__flatcc_fb_gen_c_builder@@Base+0x10f4>
   1db6c:	b	1d938 <__flatcc_fb_gen_c_builder@@Base+0xd48>
   1db70:	ldr	r1, [fp, #204]	; 0xcc
   1db74:	mov	r0, #10
   1db78:	bl	140f4 <fputc@plt>
   1db7c:	b	1d444 <__flatcc_fb_gen_c_builder@@Base+0x854>
   1db80:	mov	sl, #0
   1db84:	b	1d444 <__flatcc_fb_gen_c_builder@@Base+0x854>
   1db88:	andeq	sp, r4, r0, ror #29
   1db8c:	andeq	lr, r3, r0, lsr #1
   1db90:	andeq	sp, r4, ip, lsl #30
   1db94:	andeq	sp, r4, r4, lsr #30
   1db98:	andeq	r4, r4, ip, ror r2
   1db9c:	andeq	r5, r4, r4, lsr #14
   1dba0:	andeq	sp, r4, ip, lsr pc
   1dba4:	andeq	sp, r4, ip, asr pc
   1dba8:	andeq	r3, r5, ip, lsr r2
   1dbac:	andeq	r4, r4, ip, ror #5
   1dbb0:	andeq	r4, r4, r0, asr r3
   1dbb4:	andeq	sp, r4, r8, ror #30
   1dbb8:			; <UNDEFINED> instruction: 0x0004dfb0
   1dbbc:			; <UNDEFINED> instruction: 0x0003e1b4
   1dbc0:			; <UNDEFINED> instruction: 0x000442b8
   1dbc4:	andeq	r4, r4, r0, lsr #6
   1dbc8:	ldrdeq	sp, [r4], -r8
   1dbcc:	strdeq	sp, [r4], -r4
   1dbd0:	andeq	lr, r4, r0, lsl r0
   1dbd4:	andeq	lr, r4, r8, lsr r0
   1dbd8:	andeq	lr, r4, r0, asr #32
   1dbdc:	andeq	lr, r4, r0, asr r0
   1dbe0:	andeq	lr, r4, r8, lsl #1
   1dbe4:	andeq	lr, r4, ip, lsl #1
   1dbe8:	strheq	lr, [r4], -r8
   1dbec:	strdeq	lr, [r4], -r4
   1dbf0:	andeq	lr, r4, r4, lsr #2
   1dbf4:	andeq	lr, r4, r4, ror #2
   1dbf8:	andeq	lr, r4, ip, lsr #3
   1dbfc:	andeq	r4, r4, r0, lsr #30
   1dc00:	strdeq	r0, [r0], -r2
   1dc04:	strdeq	sp, [r3], -r4
   1dc08:	andeq	lr, r3, r4, lsl #4
   1dc0c:	andeq	lr, r4, r4, lsr r2
   1dc10:	andeq	r5, r4, r4, ror #1
   1dc14:	andeq	lr, r4, r8, lsr r2
   1dc18:	andeq	lr, r4, r8, asr #4
   1dc1c:	andeq	lr, r4, r4, lsl #4
   1dc20:	ldrdeq	r5, [r4], -ip
   1dc24:	andeq	lr, r4, r0, asr #4
   1dc28:	andeq	lr, r4, r8, ror #9
   1dc2c:	andeq	lr, r4, ip, asr r4
   1dc30:			; <UNDEFINED> instruction: 0x0004e6b8
   1dc34:	andeq	pc, r3, ip, asr #18
   1dc38:	andeq	lr, r4, r8, ror #4
   1dc3c:	andeq	lr, r4, r4, ror r2
   1dc40:	andeq	lr, r4, r4, lsl #5
   1dc44:	muleq	r4, r4, r2
   1dc48:	muleq	r0, r5, r4
   1dc4c:	andeq	lr, r4, ip, lsr #5
   1dc50:	andeq	r4, r4, r4, lsr pc
   1dc54:	ldrdeq	lr, [r4], -r8
   1dc58:	andeq	lr, r4, ip, ror #5
   1dc5c:	andeq	r0, r0, r5, lsr #9
   1dc60:	andeq	lr, r4, r8, lsl #6
   1dc64:	muleq	r4, r0, r4
   1dc68:	andeq	ip, r3, r4, asr #24
   1dc6c:	andeq	ip, r3, ip, asr ip
   1dc70:	andeq	lr, r4, r4, lsr r3
   1dc74:	andeq	ip, r3, r4, ror #24
   1dc78:	andeq	ip, r3, ip, ror #24
   1dc7c:	andeq	ip, r3, r4, ror ip
   1dc80:	andeq	ip, r3, ip, ror ip
   1dc84:	andeq	ip, r3, r4, lsl #25
   1dc88:	andeq	ip, r3, ip, lsl #25
   1dc8c:	muleq	r3, r4, ip
   1dc90:	andeq	ip, r3, ip, asr sp
   1dc94:			; <UNDEFINED> instruction: 0x0003cdb4
   1dc98:	andeq	r4, r4, r8, lsl #29
   1dc9c:	andeq	ip, r3, r8, lsr ip
   1dca0:	andeq	ip, r3, r0, asr ip
   1dca4:	strheq	sp, [r3], -ip
   1dca8:	andeq	sp, r3, ip, asr #1
   1dcac:	andeq	r4, r5, r4, asr #24
   1dcb0:	ldrdeq	sp, [r3], -r4
   1dcb4:	ldrdeq	sp, [r3], -ip
   1dcb8:	andeq	sp, r3, r4, ror #1
   1dcbc:	andeq	sp, r3, ip, ror #1
   1dcc0:			; <UNDEFINED> instruction: 0x00044eb4
   1dcc4:	strheq	sp, [r3], -r4
   1dcc8:	andeq	sp, r3, r4, asr #1
   1dccc:	andeq	lr, r4, r0, asr #6
   1dcd0:			; <UNDEFINED> instruction: 0x000004b9
   1dcd4:	andeq	r5, r4, r8, lsl #2
   1dcd8:	andeq	lr, r4, ip, lsl #7
   1dcdc:	muleq	r4, r4, r3
   1dce0:	andeq	lr, r4, r0, ror r3
   1dce4:	andeq	lr, r4, r8, asr r3
   1dce8:	andeq	lr, r4, ip, lsl #11
   1dcec:	ldrdeq	lr, [r4], -r8
   1dcf0:	andeq	r0, r0, r8, asr #12
   1dcf4:	andeq	r4, r4, r8, ror #31
   1dcf8:	andeq	r7, r6, r8, lsr #1
   1dcfc:	andeq	lr, r4, r0, ror #10
   1dd00:	andeq	ip, r3, r8, lsr #27
   1dd04:	andeq	r4, r4, ip, asr #30
   1dd08:	andeq	r5, r4, r0, ror #3
   1dd0c:	andeq	lr, r4, r0, lsr r6
   1dd10:	andeq	lr, r4, r8, lsl #12
   1dd14:	andeq	lr, r4, r4, asr r6
   1dd18:	andeq	lr, r4, r0, lsl #13
   1dd1c:	andeq	lr, r4, ip, lsr #11
   1dd20:	strdeq	lr, [r4], -r0
   1dd24:	strdeq	lr, [r4], -ip
   1dd28:	andeq	r4, r4, r8, lsl r0
   1dd2c:	mov	r2, r7
   1dd30:	mov	r1, #0
   1dd34:	mov	r0, r6
   1dd38:	bl	140ac <memset@plt>
   1dd3c:	mov	r2, r7
   1dd40:	mov	r1, #0
   1dd44:	add	r0, sp, #260	; 0x104
   1dd48:	bl	140ac <memset@plt>
   1dd4c:	mov	r2, r6
   1dd50:	mov	r1, r4
   1dd54:	ldr	r0, [r4, #12]
   1dd58:	bl	15edc <__flatcc_fb_scoped_symbol_name@@Base>
   1dd5c:	ldr	r5, [r4, #20]
   1dd60:	cmp	r5, #0
   1dd64:	bne	1dde8 <__flatcc_fb_gen_c_builder@@Base+0x11f8>
   1dd68:	str	r6, [sp]
   1dd6c:	ldr	r2, [sp, #32]
   1dd70:	mov	r3, r2
   1dd74:	ldr	r1, [pc, #-148]	; 1dce8 <__flatcc_fb_gen_c_builder@@Base+0x10f8>
   1dd78:	ldr	r0, [fp, #204]	; 0xcc
   1dd7c:	bl	14094 <fprintf@plt>
   1dd80:	mov	r2, #1
   1dd84:	b	1d474 <__flatcc_fb_gen_c_builder@@Base+0x884>
   1dd88:	ldr	r3, [r5, #16]
   1dd8c:	add	r2, sp, #260	; 0x104
   1dd90:	mov	r1, r3
   1dd94:	ldr	r0, [r3, #12]
   1dd98:	bl	15edc <__flatcc_fb_scoped_symbol_name@@Base>
   1dd9c:	ldr	r2, [r5, #4]
   1dda0:	ldr	r3, [r2, #4]
   1dda4:	ldr	r2, [r2]
   1dda8:	str	r2, [sp, #24]
   1ddac:	str	r3, [sp, #20]
   1ddb0:	str	r6, [sp, #16]
   1ddb4:	str	r6, [sp, #12]
   1ddb8:	add	r1, sp, #260	; 0x104
   1ddbc:	str	r1, [sp, #8]
   1ddc0:	str	r2, [sp, #4]
   1ddc4:	str	r3, [sp]
   1ddc8:	mov	r3, r6
   1ddcc:	mov	r2, r6
   1ddd0:	ldr	r1, [pc, #-236]	; 1dcec <__flatcc_fb_gen_c_builder@@Base+0x10fc>
   1ddd4:	ldr	r0, [fp, #204]	; 0xcc
   1ddd8:	bl	14094 <fprintf@plt>
   1dddc:	ldr	r5, [r5]
   1dde0:	cmp	r5, #0
   1dde4:	beq	1dd68 <__flatcc_fb_gen_c_builder@@Base+0x1178>
   1dde8:	ldrh	r3, [r5, #24]
   1ddec:	cmp	r3, #10
   1ddf0:	beq	1de40 <__flatcc_fb_gen_c_builder@@Base+0x1250>
   1ddf4:	cmp	r3, #14
   1ddf8:	beq	1dd88 <__flatcc_fb_gen_c_builder@@Base+0x1198>
   1ddfc:	cmp	r3, #0
   1de00:	beq	1de84 <__flatcc_fb_gen_c_builder@@Base+0x1294>
   1de04:	ldr	r5, [pc, #-284]	; 1dcf0 <__flatcc_fb_gen_c_builder@@Base+0x1100>
   1de08:	ldr	r4, [pc, #-284]	; 1dcf4 <__flatcc_fb_gen_c_builder@@Base+0x1104>
   1de0c:	ldr	r3, [pc, #-284]	; 1dcf8 <__flatcc_fb_gen_c_builder@@Base+0x1108>
   1de10:	ldr	r0, [r3]
   1de14:	ldr	r3, [pc, #-288]	; 1dcfc <__flatcc_fb_gen_c_builder@@Base+0x110c>
   1de18:	str	r3, [sp]
   1de1c:	mov	r3, r5
   1de20:	mov	r2, r4
   1de24:	ldr	r1, [pc, #-300]	; 1dd00 <__flatcc_fb_gen_c_builder@@Base+0x1110>
   1de28:	bl	14094 <fprintf@plt>
   1de2c:	ldr	r3, [pc, #-304]	; 1dd04 <__flatcc_fb_gen_c_builder@@Base+0x1114>
   1de30:	mov	r2, r5
   1de34:	mov	r1, r4
   1de38:	ldr	r0, [pc, #-312]	; 1dd08 <__flatcc_fb_gen_c_builder@@Base+0x1118>
   1de3c:	bl	14148 <__assert_fail@plt>
   1de40:	ldr	r2, [r5, #4]
   1de44:	ldr	r3, [r2, #4]
   1de48:	ldr	r2, [r2]
   1de4c:	str	r2, [sp, #24]
   1de50:	str	r3, [sp, #20]
   1de54:	str	r6, [sp, #16]
   1de58:	str	r6, [sp, #12]
   1de5c:	ldr	r1, [sp, #32]
   1de60:	str	r1, [sp, #8]
   1de64:	str	r2, [sp, #4]
   1de68:	str	r3, [sp]
   1de6c:	mov	r3, r6
   1de70:	mov	r2, r6
   1de74:	mov	r1, r8
   1de78:	ldr	r0, [fp, #204]	; 0xcc
   1de7c:	bl	14094 <fprintf@plt>
   1de80:	b	1dddc <__flatcc_fb_gen_c_builder@@Base+0x11ec>
   1de84:	str	r6, [sp, #4]
   1de88:	str	r6, [sp]
   1de8c:	mov	r3, r6
   1de90:	mov	r2, r6
   1de94:	mov	r1, r9
   1de98:	ldr	r0, [fp, #204]	; 0xcc
   1de9c:	bl	14094 <fprintf@plt>
   1dea0:	b	1dddc <__flatcc_fb_gen_c_builder@@Base+0x11ec>
   1dea4:	ldrd	r2, [r4, #96]	; 0x60
   1dea8:	strd	r2, [sp, #8]
   1deac:	str	r0, [sp]
   1deb0:	mov	r3, r1
   1deb4:	add	r2, sp, #260	; 0x104
   1deb8:	ldr	r1, [pc, #-436]	; 1dd0c <__flatcc_fb_gen_c_builder@@Base+0x111c>
   1debc:	ldr	r0, [fp, #204]	; 0xcc
   1dec0:	bl	14094 <fprintf@plt>
   1dec4:	ldr	r4, [r4, #108]	; 0x6c
   1dec8:	cmp	r4, #0
   1decc:	beq	1df38 <__flatcc_fb_gen_c_builder@@Base+0x1348>
   1ded0:	ldrh	r3, [r4, #72]	; 0x48
   1ded4:	tst	r3, #4
   1ded8:	bne	1dec4 <__flatcc_fb_gen_c_builder@@Base+0x12d4>
   1dedc:	ldr	r2, [r4, #4]
   1dee0:	ldr	r1, [r2, #4]
   1dee4:	ldr	r0, [r2]
   1dee8:	ldrh	r3, [r4, #24]
   1deec:	cmp	r3, #14
   1def0:	bne	1dea4 <__flatcc_fb_gen_c_builder@@Base+0x12b4>
   1def4:	ldr	r3, [r4, #16]
   1def8:	ldrh	r3, [r3, #8]
   1defc:	cmp	r3, #4
   1df00:	bne	1dea4 <__flatcc_fb_gen_c_builder@@Base+0x12b4>
   1df04:	cmp	r6, #0
   1df08:	ldrne	r8, [sp, #36]	; 0x24
   1df0c:	bne	1dea4 <__flatcc_fb_gen_c_builder@@Base+0x12b4>
   1df10:	ldrd	r2, [r4, #96]	; 0x60
   1df14:	strd	r2, [sp, #8]
   1df18:	str	r0, [sp]
   1df1c:	mov	r3, r1
   1df20:	add	r2, sp, #260	; 0x104
   1df24:	ldr	r1, [pc, #-540]	; 1dd10 <__flatcc_fb_gen_c_builder@@Base+0x1120>
   1df28:	ldr	r0, [fp, #204]	; 0xcc
   1df2c:	bl	14094 <fprintf@plt>
   1df30:	ldr	r8, [sp, #36]	; 0x24
   1df34:	b	1dec4 <__flatcc_fb_gen_c_builder@@Base+0x12d4>
   1df38:	cmp	r8, #0
   1df3c:	moveq	r7, #0
   1df40:	andne	r7, r7, #1
   1df44:	cmp	r7, #0
   1df48:	beq	1dfc0 <__flatcc_fb_gen_c_builder@@Base+0x13d0>
   1df4c:	ldr	r4, [r5, #24]
   1df50:	cmp	r4, #0
   1df54:	beq	1dfc0 <__flatcc_fb_gen_c_builder@@Base+0x13d0>
   1df58:	ldr	r8, [pc, #-588]	; 1dd14 <__flatcc_fb_gen_c_builder@@Base+0x1124>
   1df5c:	b	1df6c <__flatcc_fb_gen_c_builder@@Base+0x137c>
   1df60:	ldr	r4, [r4, #108]	; 0x6c
   1df64:	cmp	r4, #0
   1df68:	beq	1dfc0 <__flatcc_fb_gen_c_builder@@Base+0x13d0>
   1df6c:	ldrh	r3, [r4, #72]	; 0x48
   1df70:	tst	r3, #4
   1df74:	bne	1df60 <__flatcc_fb_gen_c_builder@@Base+0x1370>
   1df78:	ldrh	r3, [r4, #24]
   1df7c:	cmp	r3, #14
   1df80:	bne	1df60 <__flatcc_fb_gen_c_builder@@Base+0x1370>
   1df84:	ldr	r3, [r4, #16]
   1df88:	ldrh	r3, [r3, #8]
   1df8c:	cmp	r3, #4
   1df90:	bne	1df60 <__flatcc_fb_gen_c_builder@@Base+0x1370>
   1df94:	ldr	r1, [r4, #4]
   1df98:	ldr	r3, [r1, #4]
   1df9c:	ldrd	r6, [r4, #96]	; 0x60
   1dfa0:	strd	r6, [sp, #8]
   1dfa4:	ldr	r2, [r1]
   1dfa8:	str	r2, [sp]
   1dfac:	add	r2, sp, #260	; 0x104
   1dfb0:	mov	r1, r8
   1dfb4:	ldr	r0, [fp, #204]	; 0xcc
   1dfb8:	bl	14094 <fprintf@plt>
   1dfbc:	b	1df60 <__flatcc_fb_gen_c_builder@@Base+0x1370>
   1dfc0:	add	r4, sp, #260	; 0x104
   1dfc4:	mov	r2, r4
   1dfc8:	ldr	r1, [pc, #-696]	; 1dd18 <__flatcc_fb_gen_c_builder@@Base+0x1128>
   1dfcc:	ldr	r0, [fp, #204]	; 0xcc
   1dfd0:	bl	14094 <fprintf@plt>
   1dfd4:	mov	r2, #220	; 0xdc
   1dfd8:	mov	r1, #0
   1dfdc:	mov	r0, r4
   1dfe0:	bl	140ac <memset@plt>
   1dfe4:	mov	r2, r4
   1dfe8:	ldr	r1, [sp, #32]
   1dfec:	ldr	r0, [r5, #12]
   1dff0:	bl	15edc <__flatcc_fb_scoped_symbol_name@@Base>
   1dff4:	str	r4, [sp, #8]
   1dff8:	str	r4, [sp, #4]
   1dffc:	str	r4, [sp]
   1e000:	mov	r3, sl
   1e004:	mov	r2, sl
   1e008:	mov	r1, r9
   1e00c:	ldr	r0, [fp, #204]	; 0xcc
   1e010:	bl	14094 <fprintf@plt>
   1e014:	ldr	r1, [fp, #204]	; 0xcc
   1e018:	mov	r0, #10
   1e01c:	bl	140f4 <fputc@plt>
   1e020:	ldr	r5, [r5]
   1e024:	cmp	r5, #0
   1e028:	beq	1e0bc <__flatcc_fb_gen_c_builder@@Base+0x14cc>
   1e02c:	ldrh	r3, [r5, #8]
   1e030:	cmp	r3, #0
   1e034:	bne	1e020 <__flatcc_fb_gen_c_builder@@Base+0x1430>
   1e038:	mov	r1, r5
   1e03c:	mov	r0, fp
   1e040:	bl	1b178 <__flatcc_gen_sort@@Base+0xe88>
   1e044:	ldrh	r6, [r5, #92]	; 0x5c
   1e048:	ands	r6, r6, #8
   1e04c:	moveq	r7, #1
   1e050:	movne	r7, #0
   1e054:	add	r4, sp, #260	; 0x104
   1e058:	mov	r2, #220	; 0xdc
   1e05c:	mov	r1, #0
   1e060:	mov	r0, r4
   1e064:	bl	140ac <memset@plt>
   1e068:	str	r5, [sp, #32]
   1e06c:	mov	r2, r4
   1e070:	mov	r1, r5
   1e074:	ldr	r0, [r5, #12]
   1e078:	bl	15edc <__flatcc_fb_scoped_symbol_name@@Base>
   1e07c:	str	r4, [sp, #4]
   1e080:	str	sl, [sp]
   1e084:	mov	r3, r4
   1e088:	mov	r2, r4
   1e08c:	ldr	r1, [pc, #-888]	; 1dd1c <__flatcc_fb_gen_c_builder@@Base+0x112c>
   1e090:	ldr	r0, [fp, #204]	; 0xcc
   1e094:	bl	14094 <fprintf@plt>
   1e098:	mov	r2, r4
   1e09c:	ldr	r1, [pc, #-900]	; 1dd20 <__flatcc_fb_gen_c_builder@@Base+0x1130>
   1e0a0:	ldr	r0, [fp, #204]	; 0xcc
   1e0a4:	bl	14094 <fprintf@plt>
   1e0a8:	ldr	r4, [r5, #24]
   1e0ac:	cmp	r4, #0
   1e0b0:	beq	1dfc0 <__flatcc_fb_gen_c_builder@@Base+0x13d0>
   1e0b4:	mov	r8, #0
   1e0b8:	b	1ded0 <__flatcc_fb_gen_c_builder@@Base+0x12e0>
   1e0bc:	ldr	r3, [fp, #212]	; 0xd4
   1e0c0:	ldr	r3, [r3, #140]	; 0x8c
   1e0c4:	cmp	r3, #0
   1e0c8:	bne	1e0ec <__flatcc_fb_gen_c_builder@@Base+0x14fc>
   1e0cc:	ldr	r3, [fp, #208]	; 0xd0
   1e0d0:	ldr	r2, [r3, #164]	; 0xa4
   1e0d4:	ldr	r1, [pc, #-952]	; 1dd24 <__flatcc_fb_gen_c_builder@@Base+0x1134>
   1e0d8:	ldr	r0, [fp, #204]	; 0xcc
   1e0dc:	bl	14094 <fprintf@plt>
   1e0e0:	mov	r0, #0
   1e0e4:	add	sp, sp, #484	; 0x1e4
   1e0e8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1e0ec:	ldr	r3, [fp, #204]	; 0xcc
   1e0f0:	mov	r2, #36	; 0x24
   1e0f4:	mov	r1, #1
   1e0f8:	ldr	r0, [pc, #-984]	; 1dd28 <__flatcc_fb_gen_c_builder@@Base+0x1138>
   1e0fc:	bl	1401c <fwrite@plt>
   1e100:	b	1e0cc <__flatcc_fb_gen_c_builder@@Base+0x14dc>
   1e104:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1e108:	sub	sp, sp, #464	; 0x1d0
   1e10c:	mov	r6, r0
   1e110:	mov	r4, r1
   1e114:	mov	r5, #220	; 0xdc
   1e118:	mov	r2, r5
   1e11c:	mov	r1, #0
   1e120:	add	r0, sp, #244	; 0xf4
   1e124:	bl	140ac <memset@plt>
   1e128:	mov	r2, r5
   1e12c:	mov	r1, #0
   1e130:	add	r0, sp, #24
   1e134:	bl	140ac <memset@plt>
   1e138:	add	r2, sp, #244	; 0xf4
   1e13c:	mov	r1, r4
   1e140:	ldr	r0, [r4, #12]
   1e144:	bl	15edc <__flatcc_fb_scoped_symbol_name@@Base>
   1e148:	add	r2, sp, #244	; 0xf4
   1e14c:	ldr	r1, [pc, #372]	; 1e2c8 <__flatcc_fb_gen_c_builder@@Base+0x16d8>
   1e150:	ldr	r0, [r6, #204]	; 0xcc
   1e154:	bl	14094 <fprintf@plt>
   1e158:	ldr	r4, [r4, #20]
   1e15c:	cmp	r4, #0
   1e160:	beq	1e2a8 <__flatcc_fb_gen_c_builder@@Base+0x16b8>
   1e164:	ldr	r9, [pc, #352]	; 1e2cc <__flatcc_fb_gen_c_builder@@Base+0x16dc>
   1e168:	ldr	r8, [pc, #352]	; 1e2d0 <__flatcc_fb_gen_c_builder@@Base+0x16e0>
   1e16c:	ldr	r7, [pc, #352]	; 1e2d4 <__flatcc_fb_gen_c_builder@@Base+0x16e4>
   1e170:	b	1e248 <__flatcc_fb_gen_c_builder@@Base+0x1658>
   1e174:	ldr	r3, [r4, #16]
   1e178:	add	r2, sp, #24
   1e17c:	mov	r1, r3
   1e180:	ldr	r0, [r3, #12]
   1e184:	bl	15edc <__flatcc_fb_scoped_symbol_name@@Base>
   1e188:	ldr	r1, [r4, #16]
   1e18c:	ldrh	r3, [r1, #8]
   1e190:	cmp	r3, #0
   1e194:	beq	1e1d8 <__flatcc_fb_gen_c_builder@@Base+0x15e8>
   1e198:	cmp	r3, #1
   1e19c:	beq	1e1f8 <__flatcc_fb_gen_c_builder@@Base+0x1608>
   1e1a0:	ldr	r4, [pc, #304]	; 1e2d8 <__flatcc_fb_gen_c_builder@@Base+0x16e8>
   1e1a4:	ldr	r3, [pc, #304]	; 1e2dc <__flatcc_fb_gen_c_builder@@Base+0x16ec>
   1e1a8:	ldr	r0, [r3]
   1e1ac:	ldr	r3, [pc, #300]	; 1e2e0 <__flatcc_fb_gen_c_builder@@Base+0x16f0>
   1e1b0:	str	r3, [sp]
   1e1b4:	mov	r3, #74	; 0x4a
   1e1b8:	mov	r2, r4
   1e1bc:	ldr	r1, [pc, #288]	; 1e2e4 <__flatcc_fb_gen_c_builder@@Base+0x16f4>
   1e1c0:	bl	14094 <fprintf@plt>
   1e1c4:	ldr	r3, [pc, #284]	; 1e2e8 <__flatcc_fb_gen_c_builder@@Base+0x16f8>
   1e1c8:	mov	r2, #74	; 0x4a
   1e1cc:	mov	r1, r4
   1e1d0:	ldr	r0, [pc, #276]	; 1e2ec <__flatcc_fb_gen_c_builder@@Base+0x16fc>
   1e1d4:	bl	14148 <__assert_fail@plt>
   1e1d8:	ldr	r2, [r4, #48]	; 0x30
   1e1dc:	str	sl, [sp, #4]
   1e1e0:	str	r5, [sp]
   1e1e4:	add	r3, sp, #24
   1e1e8:	mov	r1, r9
   1e1ec:	ldr	r0, [r6, #204]	; 0xcc
   1e1f0:	bl	14094 <fprintf@plt>
   1e1f4:	b	1e23c <__flatcc_fb_gen_c_builder@@Base+0x164c>
   1e1f8:	ldr	r2, [r4, #48]	; 0x30
   1e1fc:	str	sl, [sp, #16]
   1e200:	str	r5, [sp, #12]
   1e204:	ldrh	r3, [r1, #104]	; 0x68
   1e208:	str	r3, [sp, #8]
   1e20c:	ldrd	r0, [r1, #112]	; 0x70
   1e210:	strd	r0, [sp]
   1e214:	mov	r1, r8
   1e218:	ldr	r0, [r6, #204]	; 0xcc
   1e21c:	bl	14094 <fprintf@plt>
   1e220:	b	1e23c <__flatcc_fb_gen_c_builder@@Base+0x164c>
   1e224:	ldr	r2, [r4, #48]	; 0x30
   1e228:	str	sl, [sp]
   1e22c:	mov	r3, r5
   1e230:	mov	r1, r7
   1e234:	ldr	r0, [r6, #204]	; 0xcc
   1e238:	bl	14094 <fprintf@plt>
   1e23c:	ldr	r4, [r4]
   1e240:	cmp	r4, #0
   1e244:	beq	1e2a8 <__flatcc_fb_gen_c_builder@@Base+0x16b8>
   1e248:	ldr	r3, [r4, #4]
   1e24c:	ldr	r5, [r3, #4]
   1e250:	ldr	sl, [r3]
   1e254:	ldrh	r3, [r4, #24]
   1e258:	cmp	r3, #10
   1e25c:	beq	1e224 <__flatcc_fb_gen_c_builder@@Base+0x1634>
   1e260:	cmp	r3, #14
   1e264:	beq	1e174 <__flatcc_fb_gen_c_builder@@Base+0x1584>
   1e268:	cmp	r3, #0
   1e26c:	beq	1e23c <__flatcc_fb_gen_c_builder@@Base+0x164c>
   1e270:	ldr	r4, [pc, #96]	; 1e2d8 <__flatcc_fb_gen_c_builder@@Base+0x16e8>
   1e274:	ldr	r3, [pc, #96]	; 1e2dc <__flatcc_fb_gen_c_builder@@Base+0x16ec>
   1e278:	ldr	r0, [r3]
   1e27c:	ldr	r3, [pc, #108]	; 1e2f0 <__flatcc_fb_gen_c_builder@@Base+0x1700>
   1e280:	str	r3, [sp]
   1e284:	mov	r3, #83	; 0x53
   1e288:	mov	r2, r4
   1e28c:	ldr	r1, [pc, #80]	; 1e2e4 <__flatcc_fb_gen_c_builder@@Base+0x16f4>
   1e290:	bl	14094 <fprintf@plt>
   1e294:	ldr	r3, [pc, #76]	; 1e2e8 <__flatcc_fb_gen_c_builder@@Base+0x16f8>
   1e298:	mov	r2, #83	; 0x53
   1e29c:	mov	r1, r4
   1e2a0:	ldr	r0, [pc, #68]	; 1e2ec <__flatcc_fb_gen_c_builder@@Base+0x16fc>
   1e2a4:	bl	14148 <__assert_fail@plt>
   1e2a8:	ldr	r3, [r6, #204]	; 0xcc
   1e2ac:	mov	r2, #47	; 0x2f
   1e2b0:	mov	r1, #1
   1e2b4:	ldr	r0, [pc, #56]	; 1e2f4 <__flatcc_fb_gen_c_builder@@Base+0x1704>
   1e2b8:	bl	1401c <fwrite@plt>
   1e2bc:	mov	r0, #0
   1e2c0:	add	sp, sp, #464	; 0x1d0
   1e2c4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1e2c8:	andeq	lr, r4, r0, asr #14
   1e2cc:	andeq	lr, r4, r0, lsr #15
   1e2d0:	strdeq	lr, [r4], -r0
   1e2d4:	andeq	lr, r4, ip, asr #17
   1e2d8:	andeq	lr, r4, ip, lsr r8
   1e2dc:	andeq	r7, r6, r8, lsr #1
   1e2e0:	muleq	r4, r0, r8
   1e2e4:	andeq	ip, r3, r8, lsr #27
   1e2e8:	andeq	lr, r4, r8, lsl r7
   1e2ec:	andeq	r5, r4, r0, ror #3
   1e2f0:	andeq	lr, r4, ip, lsl #18
   1e2f4:	andeq	lr, r4, r0, asr #18
   1e2f8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e2fc:	sub	sp, sp, #484	; 0x1e4
   1e300:	mov	sl, r0
   1e304:	mov	r4, r1
   1e308:	mov	r5, #220	; 0xdc
   1e30c:	mov	r2, r5
   1e310:	mov	r1, #0
   1e314:	add	r0, sp, #260	; 0x104
   1e318:	bl	140ac <memset@plt>
   1e31c:	mov	r2, r5
   1e320:	mov	r1, #0
   1e324:	add	r0, sp, #40	; 0x28
   1e328:	bl	140ac <memset@plt>
   1e32c:	add	r2, sp, #260	; 0x104
   1e330:	mov	r1, r4
   1e334:	ldr	r0, [r4, #12]
   1e338:	bl	15edc <__flatcc_fb_scoped_symbol_name@@Base>
   1e33c:	add	r2, sp, #260	; 0x104
   1e340:	ldr	r1, [pc, #1148]	; 1e7c4 <__flatcc_fb_gen_c_builder@@Base+0x1bd4>
   1e344:	ldr	r0, [sl, #204]	; 0xcc
   1e348:	bl	14094 <fprintf@plt>
   1e34c:	ldr	r4, [r4, #20]
   1e350:	cmp	r4, #0
   1e354:	beq	1e718 <__flatcc_fb_gen_c_builder@@Base+0x1b28>
   1e358:	mov	r2, #1
   1e35c:	ldr	r8, [pc, #1124]	; 1e7c8 <__flatcc_fb_gen_c_builder@@Base+0x1bd8>
   1e360:	b	1e3ac <__flatcc_fb_gen_c_builder@@Base+0x17bc>
   1e364:	ldrd	r2, [r4, #96]	; 0x60
   1e368:	ldrh	r1, [r4, #74]	; 0x4a
   1e36c:	str	r1, [sp, #8]
   1e370:	ldrd	r0, [r4, #88]	; 0x58
   1e374:	strd	r0, [sp]
   1e378:	ldr	r1, [pc, #1100]	; 1e7cc <__flatcc_fb_gen_c_builder@@Base+0x1bdc>
   1e37c:	ldr	r0, [sl, #204]	; 0xcc
   1e380:	bl	14094 <fprintf@plt>
   1e384:	ldr	r2, [r4, #4]
   1e388:	ldr	r3, [r2]
   1e38c:	ldr	r2, [r2, #4]
   1e390:	mov	r1, r8
   1e394:	ldr	r0, [sl, #204]	; 0xcc
   1e398:	bl	14094 <fprintf@plt>
   1e39c:	mov	r2, #0
   1e3a0:	ldr	r4, [r4]
   1e3a4:	cmp	r4, #0
   1e3a8:	beq	1e710 <__flatcc_fb_gen_c_builder@@Base+0x1b20>
   1e3ac:	ldrh	r3, [r4, #72]	; 0x48
   1e3b0:	tst	r3, #4
   1e3b4:	bne	1e3a0 <__flatcc_fb_gen_c_builder@@Base+0x17b0>
   1e3b8:	cmp	r2, #0
   1e3bc:	ldr	r3, [sl, #204]	; 0xcc
   1e3c0:	movne	r2, #28
   1e3c4:	movne	r1, #1
   1e3c8:	ldrne	r0, [pc, #1024]	; 1e7d0 <__flatcc_fb_gen_c_builder@@Base+0x1be0>
   1e3cc:	moveq	r2, #30
   1e3d0:	moveq	r1, #1
   1e3d4:	ldreq	r0, [pc, #1016]	; 1e7d4 <__flatcc_fb_gen_c_builder@@Base+0x1be4>
   1e3d8:	bl	1401c <fwrite@plt>
   1e3dc:	ldrh	r5, [r4, #72]	; 0x48
   1e3e0:	lsr	r5, r5, #8
   1e3e4:	and	r5, r5, #1
   1e3e8:	ldrh	r3, [r4, #24]
   1e3ec:	sub	r3, r3, #7
   1e3f0:	cmp	r3, #8
   1e3f4:	ldrls	pc, [pc, r3, lsl #2]
   1e3f8:	b	1e384 <__flatcc_fb_gen_c_builder@@Base+0x1794>
   1e3fc:	andeq	lr, r1, r0, lsr #8
   1e400:	andeq	lr, r1, r4, ror #6
   1e404:	andeq	lr, r1, r0, lsl r5
   1e408:	strdeq	lr, [r1], -r8
   1e40c:	andeq	lr, r1, r4, lsl #7
   1e410:	andeq	lr, r1, r4, lsl #7
   1e414:	andeq	lr, r1, r4, lsl #7
   1e418:	andeq	lr, r1, r8, lsr #10
   1e41c:	andeq	lr, r1, r0, lsl #12
   1e420:	ldr	r3, [r4, #104]	; 0x68
   1e424:	cmp	r3, #0
   1e428:	beq	1e49c <__flatcc_fb_gen_c_builder@@Base+0x18ac>
   1e42c:	add	r2, sp, #40	; 0x28
   1e430:	mov	r1, r3
   1e434:	ldr	r0, [r3, #12]
   1e438:	bl	15edc <__flatcc_fb_scoped_symbol_name@@Base>
   1e43c:	ldr	r3, [r4, #104]	; 0x68
   1e440:	ldrh	r3, [r3, #8]
   1e444:	cmp	r3, #0
   1e448:	bne	1e474 <__flatcc_fb_gen_c_builder@@Base+0x1884>
   1e44c:	ldrd	r2, [r4, #96]	; 0x60
   1e450:	add	r1, sp, #40	; 0x28
   1e454:	str	r1, [sp, #8]
   1e458:	ldrh	r1, [r4, #74]	; 0x4a
   1e45c:	str	r1, [sp, #4]
   1e460:	str	r5, [sp]
   1e464:	ldr	r1, [pc, #876]	; 1e7d8 <__flatcc_fb_gen_c_builder@@Base+0x1be8>
   1e468:	ldr	r0, [sl, #204]	; 0xcc
   1e46c:	bl	14094 <fprintf@plt>
   1e470:	b	1e384 <__flatcc_fb_gen_c_builder@@Base+0x1794>
   1e474:	ldrd	r2, [r4, #96]	; 0x60
   1e478:	ldrh	r1, [r4, #74]	; 0x4a
   1e47c:	str	r1, [sp, #16]
   1e480:	ldrd	r0, [r4, #88]	; 0x58
   1e484:	strd	r0, [sp, #8]
   1e488:	str	r5, [sp]
   1e48c:	ldr	r1, [pc, #840]	; 1e7dc <__flatcc_fb_gen_c_builder@@Base+0x1bec>
   1e490:	ldr	r0, [sl, #204]	; 0xcc
   1e494:	bl	14094 <fprintf@plt>
   1e498:	b	1e384 <__flatcc_fb_gen_c_builder@@Base+0x1794>
   1e49c:	ldr	r9, [sl, #204]	; 0xcc
   1e4a0:	ldrd	r2, [r4, #96]	; 0x60
   1e4a4:	strd	r2, [sp, #32]
   1e4a8:	ldrd	r6, [r4, #88]	; 0x58
   1e4ac:	ldrh	fp, [r4, #74]	; 0x4a
   1e4b0:	orrs	r3, r6, r7
   1e4b4:	mvneq	r0, #0
   1e4b8:	moveq	r1, #0
   1e4bc:	beq	1e4d4 <__flatcc_fb_gen_c_builder@@Base+0x18e4>
   1e4c0:	mov	r2, r6
   1e4c4:	mov	r3, r7
   1e4c8:	mvn	r0, #0
   1e4cc:	mov	r1, #0
   1e4d0:	bl	3ad64 <fb_value_set_visit@@Base+0x614>
   1e4d4:	strd	r0, [sp, #24]
   1e4d8:	str	fp, [sp, #16]
   1e4dc:	strd	r6, [sp, #8]
   1e4e0:	str	r5, [sp]
   1e4e4:	ldrd	r2, [sp, #32]
   1e4e8:	ldr	r1, [pc, #752]	; 1e7e0 <__flatcc_fb_gen_c_builder@@Base+0x1bf0>
   1e4ec:	mov	r0, r9
   1e4f0:	bl	14094 <fprintf@plt>
   1e4f4:	b	1e384 <__flatcc_fb_gen_c_builder@@Base+0x1794>
   1e4f8:	ldrd	r2, [r4, #96]	; 0x60
   1e4fc:	str	r5, [sp]
   1e500:	ldr	r1, [pc, #732]	; 1e7e4 <__flatcc_fb_gen_c_builder@@Base+0x1bf4>
   1e504:	ldr	r0, [sl, #204]	; 0xcc
   1e508:	bl	14094 <fprintf@plt>
   1e50c:	b	1e384 <__flatcc_fb_gen_c_builder@@Base+0x1794>
   1e510:	ldrd	r2, [r4, #96]	; 0x60
   1e514:	str	r5, [sp]
   1e518:	ldr	r1, [pc, #712]	; 1e7e8 <__flatcc_fb_gen_c_builder@@Base+0x1bf8>
   1e51c:	ldr	r0, [sl, #204]	; 0xcc
   1e520:	bl	14094 <fprintf@plt>
   1e524:	b	1e384 <__flatcc_fb_gen_c_builder@@Base+0x1794>
   1e528:	ldr	r3, [r4, #16]
   1e52c:	add	r2, sp, #40	; 0x28
   1e530:	mov	r1, r3
   1e534:	ldr	r0, [r3, #12]
   1e538:	bl	15edc <__flatcc_fb_scoped_symbol_name@@Base>
   1e53c:	ldr	r3, [r4, #16]
   1e540:	ldrh	r3, [r3, #8]
   1e544:	cmp	r3, #4
   1e548:	ldrls	pc, [pc, r3, lsl #2]
   1e54c:	b	1e5c8 <__flatcc_fb_gen_c_builder@@Base+0x19d8>
   1e550:	andeq	lr, r1, r8, lsl #11
   1e554:	andeq	lr, r1, r4, ror #10
   1e558:	andeq	lr, r1, r8, asr #11
   1e55c:	andeq	lr, r1, r4, ror #10
   1e560:	andeq	lr, r1, r8, lsr #11
   1e564:	ldrd	r2, [r4, #96]	; 0x60
   1e568:	ldrh	r1, [r4, #74]	; 0x4a
   1e56c:	str	r1, [sp, #8]
   1e570:	ldrd	r0, [r4, #88]	; 0x58
   1e574:	strd	r0, [sp]
   1e578:	ldr	r1, [pc, #588]	; 1e7cc <__flatcc_fb_gen_c_builder@@Base+0x1bdc>
   1e57c:	ldr	r0, [sl, #204]	; 0xcc
   1e580:	bl	14094 <fprintf@plt>
   1e584:	b	1e384 <__flatcc_fb_gen_c_builder@@Base+0x1794>
   1e588:	ldrd	r2, [r4, #96]	; 0x60
   1e58c:	add	r1, sp, #40	; 0x28
   1e590:	str	r1, [sp, #4]
   1e594:	str	r5, [sp]
   1e598:	ldr	r1, [pc, #588]	; 1e7ec <__flatcc_fb_gen_c_builder@@Base+0x1bfc>
   1e59c:	ldr	r0, [sl, #204]	; 0xcc
   1e5a0:	bl	14094 <fprintf@plt>
   1e5a4:	b	1e384 <__flatcc_fb_gen_c_builder@@Base+0x1794>
   1e5a8:	ldrd	r2, [r4, #96]	; 0x60
   1e5ac:	add	r1, sp, #40	; 0x28
   1e5b0:	str	r1, [sp, #4]
   1e5b4:	str	r5, [sp]
   1e5b8:	ldr	r1, [pc, #560]	; 1e7f0 <__flatcc_fb_gen_c_builder@@Base+0x1c00>
   1e5bc:	ldr	r0, [sl, #204]	; 0xcc
   1e5c0:	bl	14094 <fprintf@plt>
   1e5c4:	b	1e384 <__flatcc_fb_gen_c_builder@@Base+0x1794>
   1e5c8:	ldr	r4, [pc, #548]	; 1e7f4 <__flatcc_fb_gen_c_builder@@Base+0x1c04>
   1e5cc:	ldr	r3, [pc, #548]	; 1e7f8 <__flatcc_fb_gen_c_builder@@Base+0x1c08>
   1e5d0:	ldr	r0, [r3]
   1e5d4:	ldr	r3, [pc, #544]	; 1e7fc <__flatcc_fb_gen_c_builder@@Base+0x1c0c>
   1e5d8:	str	r3, [sp]
   1e5dc:	mov	r3, #178	; 0xb2
   1e5e0:	mov	r2, r4
   1e5e4:	ldr	r1, [pc, #532]	; 1e800 <__flatcc_fb_gen_c_builder@@Base+0x1c10>
   1e5e8:	bl	14094 <fprintf@plt>
   1e5ec:	ldr	r3, [pc, #528]	; 1e804 <__flatcc_fb_gen_c_builder@@Base+0x1c14>
   1e5f0:	mov	r2, #178	; 0xb2
   1e5f4:	mov	r1, r4
   1e5f8:	ldr	r0, [pc, #520]	; 1e808 <__flatcc_fb_gen_c_builder@@Base+0x1c18>
   1e5fc:	bl	14148 <__assert_fail@plt>
   1e600:	ldr	r3, [r4, #16]
   1e604:	add	r2, sp, #40	; 0x28
   1e608:	mov	r1, r3
   1e60c:	ldr	r0, [r3, #12]
   1e610:	bl	15edc <__flatcc_fb_scoped_symbol_name@@Base>
   1e614:	ldr	r3, [r4, #16]
   1e618:	ldrh	r3, [r3, #8]
   1e61c:	cmp	r3, #4
   1e620:	ldrls	pc, [pc, r3, lsl #2]
   1e624:	b	1e6d8 <__flatcc_fb_gen_c_builder@@Base+0x1ae8>
   1e628:	andeq	lr, r1, ip, lsr r6
   1e62c:	andeq	lr, r1, ip, asr r6
   1e630:	ldrdeq	lr, [r1], -r8
   1e634:	andeq	lr, r1, ip, asr r6
   1e638:			; <UNDEFINED> instruction: 0x0001e6b8
   1e63c:	ldrd	r2, [r4, #96]	; 0x60
   1e640:	add	r1, sp, #40	; 0x28
   1e644:	str	r1, [sp, #4]
   1e648:	str	r5, [sp]
   1e64c:	ldr	r1, [pc, #440]	; 1e80c <__flatcc_fb_gen_c_builder@@Base+0x1c1c>
   1e650:	ldr	r0, [sl, #204]	; 0xcc
   1e654:	bl	14094 <fprintf@plt>
   1e658:	b	1e384 <__flatcc_fb_gen_c_builder@@Base+0x1794>
   1e65c:	ldr	r9, [sl, #204]	; 0xcc
   1e660:	ldrd	r2, [r4, #96]	; 0x60
   1e664:	strd	r2, [sp, #32]
   1e668:	ldrd	r6, [r4, #88]	; 0x58
   1e66c:	ldrh	fp, [r4, #74]	; 0x4a
   1e670:	orrs	r3, r6, r7
   1e674:	mvneq	r0, #0
   1e678:	moveq	r1, #0
   1e67c:	beq	1e694 <__flatcc_fb_gen_c_builder@@Base+0x1aa4>
   1e680:	mov	r2, r6
   1e684:	mov	r3, r7
   1e688:	mvn	r0, #0
   1e68c:	mov	r1, #0
   1e690:	bl	3ad64 <fb_value_set_visit@@Base+0x614>
   1e694:	strd	r0, [sp, #24]
   1e698:	str	fp, [sp, #16]
   1e69c:	strd	r6, [sp, #8]
   1e6a0:	str	r5, [sp]
   1e6a4:	ldrd	r2, [sp, #32]
   1e6a8:	ldr	r1, [pc, #304]	; 1e7e0 <__flatcc_fb_gen_c_builder@@Base+0x1bf0>
   1e6ac:	mov	r0, r9
   1e6b0:	bl	14094 <fprintf@plt>
   1e6b4:	b	1e384 <__flatcc_fb_gen_c_builder@@Base+0x1794>
   1e6b8:	ldrd	r2, [r4, #96]	; 0x60
   1e6bc:	add	r1, sp, #40	; 0x28
   1e6c0:	str	r1, [sp, #4]
   1e6c4:	str	r5, [sp]
   1e6c8:	ldr	r1, [pc, #320]	; 1e810 <__flatcc_fb_gen_c_builder@@Base+0x1c20>
   1e6cc:	ldr	r0, [sl, #204]	; 0xcc
   1e6d0:	bl	14094 <fprintf@plt>
   1e6d4:	b	1e384 <__flatcc_fb_gen_c_builder@@Base+0x1794>
   1e6d8:	ldr	r4, [pc, #276]	; 1e7f4 <__flatcc_fb_gen_c_builder@@Base+0x1c04>
   1e6dc:	ldr	r3, [pc, #276]	; 1e7f8 <__flatcc_fb_gen_c_builder@@Base+0x1c08>
   1e6e0:	ldr	r0, [r3]
   1e6e4:	ldr	r3, [pc, #296]	; 1e814 <__flatcc_fb_gen_c_builder@@Base+0x1c24>
   1e6e8:	str	r3, [sp]
   1e6ec:	mov	r3, #202	; 0xca
   1e6f0:	mov	r2, r4
   1e6f4:	ldr	r1, [pc, #260]	; 1e800 <__flatcc_fb_gen_c_builder@@Base+0x1c10>
   1e6f8:	bl	14094 <fprintf@plt>
   1e6fc:	ldr	r3, [pc, #256]	; 1e804 <__flatcc_fb_gen_c_builder@@Base+0x1c14>
   1e700:	mov	r2, #202	; 0xca
   1e704:	mov	r1, r4
   1e708:	ldr	r0, [pc, #248]	; 1e808 <__flatcc_fb_gen_c_builder@@Base+0x1c18>
   1e70c:	bl	14148 <__assert_fail@plt>
   1e710:	cmp	r2, #0
   1e714:	beq	1e7ac <__flatcc_fb_gen_c_builder@@Base+0x1bbc>
   1e718:	ldr	r3, [sl, #204]	; 0xcc
   1e71c:	mov	r2, #29
   1e720:	mov	r1, #1
   1e724:	ldr	r0, [pc, #236]	; 1e818 <__flatcc_fb_gen_c_builder@@Base+0x1c28>
   1e728:	bl	1401c <fwrite@plt>
   1e72c:	ldr	r3, [sl, #204]	; 0xcc
   1e730:	mov	r2, #3
   1e734:	mov	r1, #1
   1e738:	ldr	r0, [pc, #220]	; 1e81c <__flatcc_fb_gen_c_builder@@Base+0x1c2c>
   1e73c:	bl	1401c <fwrite@plt>
   1e740:	add	r4, sp, #260	; 0x104
   1e744:	str	r4, [sp]
   1e748:	mov	r3, r4
   1e74c:	mov	r2, r4
   1e750:	ldr	r1, [pc, #200]	; 1e820 <__flatcc_fb_gen_c_builder@@Base+0x1c30>
   1e754:	ldr	r0, [sl, #204]	; 0xcc
   1e758:	bl	14094 <fprintf@plt>
   1e75c:	str	r4, [sp]
   1e760:	mov	r3, r4
   1e764:	mov	r2, r4
   1e768:	ldr	r1, [pc, #180]	; 1e824 <__flatcc_fb_gen_c_builder@@Base+0x1c34>
   1e76c:	ldr	r0, [sl, #204]	; 0xcc
   1e770:	bl	14094 <fprintf@plt>
   1e774:	mov	r3, r4
   1e778:	mov	r2, r4
   1e77c:	ldr	r1, [pc, #164]	; 1e828 <__flatcc_fb_gen_c_builder@@Base+0x1c38>
   1e780:	ldr	r0, [sl, #204]	; 0xcc
   1e784:	bl	14094 <fprintf@plt>
   1e788:	ldr	r0, [sl, #204]	; 0xcc
   1e78c:	str	r4, [sp]
   1e790:	mov	r3, sl
   1e794:	mov	r2, r4
   1e798:	ldr	r1, [pc, #140]	; 1e82c <__flatcc_fb_gen_c_builder@@Base+0x1c3c>
   1e79c:	bl	14094 <fprintf@plt>
   1e7a0:	mov	r0, #0
   1e7a4:	add	sp, sp, #484	; 0x1e4
   1e7a8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1e7ac:	ldr	r3, [sl, #204]	; 0xcc
   1e7b0:	mov	r2, #15
   1e7b4:	mov	r1, #1
   1e7b8:	ldr	r0, [pc, #112]	; 1e830 <__flatcc_fb_gen_c_builder@@Base+0x1c40>
   1e7bc:	bl	1401c <fwrite@plt>
   1e7c0:	b	1e718 <__flatcc_fb_gen_c_builder@@Base+0x1b28>
   1e7c4:	andeq	lr, r4, r0, ror r9
   1e7c8:	andeq	pc, r4, r4, lsr #18
   1e7cc:	strdeq	lr, [r4], -r8
   1e7d0:			; <UNDEFINED> instruction: 0x0004e9b8
   1e7d4:	ldrdeq	lr, [r4], -r8
   1e7d8:	andeq	lr, r4, r0, lsr #20
   1e7dc:	andeq	lr, r4, ip, ror #20
   1e7e0:	andeq	lr, r4, ip, lsr #21
   1e7e4:	strdeq	lr, [r4], -r0
   1e7e8:	andeq	lr, r4, ip, lsl fp
   1e7ec:	andeq	lr, r4, ip, asr #22
   1e7f0:	andeq	lr, r4, r8, lsl #23
   1e7f4:	andeq	lr, r4, ip, lsr r8
   1e7f8:	andeq	r7, r6, r8, lsr #1
   1e7fc:	andeq	lr, r4, r4, asr #23
   1e800:	andeq	ip, r3, r8, lsr #27
   1e804:	andeq	lr, r4, ip, lsr #14
   1e808:	andeq	r5, r4, r0, ror #3
   1e80c:	andeq	lr, r4, r0, lsl #24
   1e810:	andeq	lr, r4, r4, asr #24
   1e814:	andeq	lr, r4, r8, lsl #25
   1e818:	ldrdeq	lr, [r4], -ip
   1e81c:	muleq	r4, r8, sp
   1e820:	strdeq	lr, [r4], -ip
   1e824:	muleq	r4, ip, sp
   1e828:	andeq	lr, r4, r8, asr #28
   1e82c:	andeq	lr, r4, r0, lsl #30
   1e830:	andeq	lr, r4, ip, asr #25

0001e834 <__flatcc_fb_gen_c_verifier@@Base>:
   1e834:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1e838:	sub	sp, sp, #240	; 0xf0
   1e83c:	mov	r5, r0
   1e840:	ldr	r3, [r0, #208]	; 0xd0
   1e844:	ldr	r2, [r3, #164]	; 0xa4
   1e848:	mov	r3, r2
   1e84c:	ldr	r1, [pc, #712]	; 1eb1c <__flatcc_fb_gen_c_verifier@@Base+0x2e8>
   1e850:	ldr	r0, [r0, #204]	; 0xcc
   1e854:	bl	14094 <fprintf@plt>
   1e858:	ldr	r3, [r5, #204]	; 0xcc
   1e85c:	mov	r2, #81	; 0x51
   1e860:	mov	r1, #1
   1e864:	ldr	r0, [pc, #692]	; 1eb20 <__flatcc_fb_gen_c_verifier@@Base+0x2ec>
   1e868:	bl	1401c <fwrite@plt>
   1e86c:	ldr	r3, [r5, #208]	; 0xd0
   1e870:	ldr	r2, [r3, #164]	; 0xa4
   1e874:	ldr	r1, [pc, #680]	; 1eb24 <__flatcc_fb_gen_c_verifier@@Base+0x2f0>
   1e878:	ldr	r0, [r5, #204]	; 0xcc
   1e87c:	bl	14094 <fprintf@plt>
   1e880:	ldr	r3, [r5, #208]	; 0xd0
   1e884:	ldr	r2, [r3, #160]	; 0xa0
   1e888:	ldr	r1, [pc, #664]	; 1eb28 <__flatcc_fb_gen_c_verifier@@Base+0x2f4>
   1e88c:	ldr	r0, [r5, #204]	; 0xcc
   1e890:	bl	14094 <fprintf@plt>
   1e894:	ldr	r3, [r5, #204]	; 0xcc
   1e898:	mov	r2, #7
   1e89c:	mov	r1, #1
   1e8a0:	ldr	r0, [pc, #644]	; 1eb2c <__flatcc_fb_gen_c_verifier@@Base+0x2f8>
   1e8a4:	bl	1401c <fwrite@plt>
   1e8a8:	ldr	r3, [r5, #204]	; 0xcc
   1e8ac:	mov	r2, #36	; 0x24
   1e8b0:	mov	r1, #1
   1e8b4:	ldr	r0, [pc, #628]	; 1eb30 <__flatcc_fb_gen_c_verifier@@Base+0x2fc>
   1e8b8:	bl	1401c <fwrite@plt>
   1e8bc:	ldr	r2, [pc, #624]	; 1eb34 <__flatcc_fb_gen_c_verifier@@Base+0x300>
   1e8c0:	ldr	r1, [pc, #624]	; 1eb38 <__flatcc_fb_gen_c_verifier@@Base+0x304>
   1e8c4:	mov	r0, r5
   1e8c8:	bl	15ca8 <__flatcc_fb_gen_c_includes@@Base>
   1e8cc:	ldr	r3, [r5, #212]	; 0xd4
   1e8d0:	ldr	r3, [r3, #140]	; 0x8c
   1e8d4:	cmp	r3, #0
   1e8d8:	bne	1e910 <__flatcc_fb_gen_c_verifier@@Base+0xdc>
   1e8dc:	ldr	r1, [r5, #204]	; 0xcc
   1e8e0:	mov	r0, #10
   1e8e4:	bl	140f4 <fputc@plt>
   1e8e8:	mov	r2, #220	; 0xdc
   1e8ec:	mov	r1, #0
   1e8f0:	add	r0, sp, #20
   1e8f4:	bl	140ac <memset@plt>
   1e8f8:	ldr	r3, [r5, #208]	; 0xd0
   1e8fc:	ldr	r4, [r3, #40]	; 0x28
   1e900:	cmp	r4, #0
   1e904:	beq	1e964 <__flatcc_fb_gen_c_verifier@@Base+0x130>
   1e908:	ldr	r6, [pc, #556]	; 1eb3c <__flatcc_fb_gen_c_verifier@@Base+0x308>
   1e90c:	b	1e934 <__flatcc_fb_gen_c_verifier@@Base+0x100>
   1e910:	ldr	r3, [r5, #204]	; 0xcc
   1e914:	mov	r2, #36	; 0x24
   1e918:	mov	r1, #1
   1e91c:	ldr	r0, [pc, #540]	; 1eb40 <__flatcc_fb_gen_c_verifier@@Base+0x30c>
   1e920:	bl	1401c <fwrite@plt>
   1e924:	b	1e8dc <__flatcc_fb_gen_c_verifier@@Base+0xa8>
   1e928:	ldr	r4, [r4]
   1e92c:	cmp	r4, #0
   1e930:	beq	1e964 <__flatcc_fb_gen_c_verifier@@Base+0x130>
   1e934:	ldrh	r3, [r4, #8]
   1e938:	cmp	r3, #0
   1e93c:	bne	1e928 <__flatcc_fb_gen_c_verifier@@Base+0xf4>
   1e940:	add	r2, sp, #20
   1e944:	mov	r1, r4
   1e948:	ldr	r0, [r4, #12]
   1e94c:	bl	15edc <__flatcc_fb_scoped_symbol_name@@Base>
   1e950:	add	r2, sp, #20
   1e954:	mov	r1, r6
   1e958:	ldr	r0, [r5, #204]	; 0xcc
   1e95c:	bl	14094 <fprintf@plt>
   1e960:	b	1e928 <__flatcc_fb_gen_c_verifier@@Base+0xf4>
   1e964:	ldr	r1, [r5, #204]	; 0xcc
   1e968:	mov	r0, #10
   1e96c:	bl	140f4 <fputc@plt>
   1e970:	ldr	r3, [r5, #208]	; 0xd0
   1e974:	ldr	r4, [r3, #40]	; 0x28
   1e978:	cmp	r4, #0
   1e97c:	bne	1e9bc <__flatcc_fb_gen_c_verifier@@Base+0x188>
   1e980:	ldr	r3, [r5, #212]	; 0xd4
   1e984:	ldr	r3, [r3, #140]	; 0x8c
   1e988:	cmp	r3, #0
   1e98c:	bne	1eb04 <__flatcc_fb_gen_c_verifier@@Base+0x2d0>
   1e990:	ldr	r3, [r5, #208]	; 0xd0
   1e994:	ldr	r2, [r3, #164]	; 0xa4
   1e998:	ldr	r1, [pc, #420]	; 1eb44 <__flatcc_fb_gen_c_verifier@@Base+0x310>
   1e99c:	ldr	r0, [r5, #204]	; 0xcc
   1e9a0:	bl	14094 <fprintf@plt>
   1e9a4:	mov	r0, #0
   1e9a8:	add	sp, sp, #240	; 0xf0
   1e9ac:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1e9b0:	ldr	r4, [r4]
   1e9b4:	cmp	r4, #0
   1e9b8:	beq	1e9d8 <__flatcc_fb_gen_c_verifier@@Base+0x1a4>
   1e9bc:	ldrh	r3, [r4, #8]
   1e9c0:	cmp	r3, #4
   1e9c4:	bne	1e9b0 <__flatcc_fb_gen_c_verifier@@Base+0x17c>
   1e9c8:	mov	r1, r4
   1e9cc:	mov	r0, r5
   1e9d0:	bl	1e104 <__flatcc_fb_gen_c_builder@@Base+0x1514>
   1e9d4:	b	1e9b0 <__flatcc_fb_gen_c_verifier@@Base+0x17c>
   1e9d8:	ldr	r3, [r5, #208]	; 0xd0
   1e9dc:	ldr	r4, [r3, #40]	; 0x28
   1e9e0:	cmp	r4, #0
   1e9e4:	beq	1e980 <__flatcc_fb_gen_c_verifier@@Base+0x14c>
   1e9e8:	mov	sl, #220	; 0xdc
   1e9ec:	ldr	r9, [pc, #340]	; 1eb48 <__flatcc_fb_gen_c_verifier@@Base+0x314>
   1e9f0:	ldr	r8, [pc, #340]	; 1eb4c <__flatcc_fb_gen_c_verifier@@Base+0x318>
   1e9f4:	ldr	r7, [pc, #340]	; 1eb50 <__flatcc_fb_gen_c_verifier@@Base+0x31c>
   1e9f8:	ldr	r6, [pc, #340]	; 1eb54 <__flatcc_fb_gen_c_verifier@@Base+0x320>
   1e9fc:	b	1ea0c <__flatcc_fb_gen_c_verifier@@Base+0x1d8>
   1ea00:	ldr	r4, [r4]
   1ea04:	cmp	r4, #0
   1ea08:	beq	1eac8 <__flatcc_fb_gen_c_verifier@@Base+0x294>
   1ea0c:	ldrh	r3, [r4, #8]
   1ea10:	cmp	r3, #1
   1ea14:	bne	1ea00 <__flatcc_fb_gen_c_verifier@@Base+0x1cc>
   1ea18:	mov	r2, sl
   1ea1c:	mov	r1, #0
   1ea20:	add	r0, sp, #20
   1ea24:	bl	140ac <memset@plt>
   1ea28:	add	r2, sp, #20
   1ea2c:	mov	r1, r4
   1ea30:	ldr	r0, [r4, #12]
   1ea34:	bl	15edc <__flatcc_fb_scoped_symbol_name@@Base>
   1ea38:	ldrh	r3, [r4, #104]	; 0x68
   1ea3c:	str	r3, [sp, #8]
   1ea40:	ldrd	r2, [r4, #112]	; 0x70
   1ea44:	strd	r2, [sp]
   1ea48:	add	r3, sp, #20
   1ea4c:	mov	r2, r3
   1ea50:	mov	r1, r9
   1ea54:	ldr	r0, [r5, #204]	; 0xcc
   1ea58:	bl	14094 <fprintf@plt>
   1ea5c:	ldrh	r3, [r4, #104]	; 0x68
   1ea60:	str	r3, [sp, #8]
   1ea64:	ldrd	r2, [r4, #112]	; 0x70
   1ea68:	strd	r2, [sp]
   1ea6c:	add	r3, sp, #20
   1ea70:	mov	r2, r3
   1ea74:	mov	r1, r8
   1ea78:	ldr	r0, [r5, #204]	; 0xcc
   1ea7c:	bl	14094 <fprintf@plt>
   1ea80:	ldrh	r3, [r4, #104]	; 0x68
   1ea84:	str	r3, [sp, #8]
   1ea88:	ldrd	r2, [r4, #112]	; 0x70
   1ea8c:	strd	r2, [sp]
   1ea90:	mov	r3, r5
   1ea94:	add	r2, sp, #20
   1ea98:	mov	r1, r7
   1ea9c:	ldr	r0, [r5, #204]	; 0xcc
   1eaa0:	bl	14094 <fprintf@plt>
   1eaa4:	ldrh	r3, [r4, #104]	; 0x68
   1eaa8:	str	r3, [sp, #8]
   1eaac:	ldrd	r2, [r4, #112]	; 0x70
   1eab0:	strd	r2, [sp]
   1eab4:	add	r2, sp, #20
   1eab8:	mov	r1, r6
   1eabc:	ldr	r0, [r5, #204]	; 0xcc
   1eac0:	bl	14094 <fprintf@plt>
   1eac4:	b	1ea00 <__flatcc_fb_gen_c_verifier@@Base+0x1cc>
   1eac8:	ldr	r3, [r5, #208]	; 0xd0
   1eacc:	ldr	r4, [r3, #40]	; 0x28
   1ead0:	cmp	r4, #0
   1ead4:	bne	1eae8 <__flatcc_fb_gen_c_verifier@@Base+0x2b4>
   1ead8:	b	1e980 <__flatcc_fb_gen_c_verifier@@Base+0x14c>
   1eadc:	ldr	r4, [r4]
   1eae0:	cmp	r4, #0
   1eae4:	beq	1e980 <__flatcc_fb_gen_c_verifier@@Base+0x14c>
   1eae8:	ldrh	r3, [r4, #8]
   1eaec:	cmp	r3, #0
   1eaf0:	bne	1eadc <__flatcc_fb_gen_c_verifier@@Base+0x2a8>
   1eaf4:	mov	r1, r4
   1eaf8:	mov	r0, r5
   1eafc:	bl	1e2f8 <__flatcc_fb_gen_c_builder@@Base+0x1708>
   1eb00:	b	1eadc <__flatcc_fb_gen_c_verifier@@Base+0x2a8>
   1eb04:	ldr	r3, [r5, #204]	; 0xcc
   1eb08:	mov	r2, #36	; 0x24
   1eb0c:	mov	r1, #1
   1eb10:	ldr	r0, [pc, #64]	; 1eb58 <__flatcc_fb_gen_c_verifier@@Base+0x324>
   1eb14:	bl	1401c <fwrite@plt>
   1eb18:	b	1e990 <__flatcc_fb_gen_c_verifier@@Base+0x15c>
   1eb1c:	andeq	lr, r4, r0, asr #31
   1eb20:	andeq	lr, r3, r0, lsr #1
   1eb24:	andeq	sp, r4, ip, lsl #30
   1eb28:	andeq	sp, r4, r4, lsr #30
   1eb2c:	andeq	r4, r4, ip, ror r2
   1eb30:	strdeq	lr, [r4], -r0
   1eb34:	andeq	pc, r4, r8, lsl r0	; <UNPREDICTABLE>
   1eb38:	andeq	ip, r3, ip, ror #18
   1eb3c:	andeq	pc, r4, r4, lsr #32
   1eb40:			; <UNDEFINED> instruction: 0x0003e1b4
   1eb44:	andeq	pc, r4, r4, lsl r3	; <UNPREDICTABLE>
   1eb48:	andeq	pc, r4, ip, rrx
   1eb4c:	andeq	pc, r4, r8, lsl #2
   1eb50:	andeq	pc, r4, ip, lsr #3
   1eb54:	andeq	pc, r4, r4, ror #4
   1eb58:	andeq	r4, r4, r8, lsl r0
   1eb5c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1eb60:	ldr	ip, [r0, #4]
   1eb64:	cmp	ip, r1
   1eb68:	movlt	fp, #0
   1eb6c:	movlt	r0, fp
   1eb70:	blt	1ec08 <__flatcc_fb_gen_c_verifier@@Base+0x3d4>
   1eb74:	ldr	fp, [r0]
   1eb78:	add	fp, fp, r1
   1eb7c:	sub	r0, ip, r1
   1eb80:	cmp	r0, #8
   1eb84:	movge	r0, #8
   1eb88:	cmp	r0, #0
   1eb8c:	beq	1ec24 <__flatcc_fb_gen_c_verifier@@Base+0x3f0>
   1eb90:	add	ip, fp, r0
   1eb94:	rsb	r1, r0, #8
   1eb98:	lsl	r1, r1, #3
   1eb9c:	mov	sl, fp
   1eba0:	mov	r8, #0
   1eba4:	mov	r9, #0
   1eba8:	ldrb	r6, [ip, #-1]!
   1ebac:	sub	r7, r1, #32
   1ebb0:	rsb	lr, r1, #32
   1ebb4:	mov	r5, #0
   1ebb8:	orr	r5, r5, r6, lsl r7
   1ebbc:	orr	r5, r5, r6, lsr lr
   1ebc0:	lsl	r4, r6, r1
   1ebc4:	orr	r8, r8, r4
   1ebc8:	orr	r9, r9, r5
   1ebcc:	add	r1, r1, #8
   1ebd0:	cmp	ip, sl
   1ebd4:	bne	1eba8 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   1ebd8:	strd	r8, [r2]
   1ebdc:	rsb	r2, r0, #8
   1ebe0:	lsl	r2, r2, #3
   1ebe4:	mov	r1, #1
   1ebe8:	sub	lr, r2, #32
   1ebec:	rsb	ip, r2, #32
   1ebf0:	lsl	r5, r1, lr
   1ebf4:	orr	r5, r5, r1, lsr ip
   1ebf8:	lsl	r4, r1, r2
   1ebfc:	rsbs	r4, r4, #0
   1ec00:	rsc	r5, r5, #0
   1ec04:	strd	r4, [r3]
   1ec08:	ldr	r3, [sp, #36]	; 0x24
   1ec0c:	cmp	r3, #0
   1ec10:	strne	fp, [r3]
   1ec14:	ldr	r3, [sp, #40]	; 0x28
   1ec18:	cmp	r3, #0
   1ec1c:	strne	r0, [r3]
   1ec20:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1ec24:	mov	r8, #0
   1ec28:	mov	r9, #0
   1ec2c:	b	1ebd8 <__flatcc_fb_gen_c_verifier@@Base+0x3a4>
   1ec30:	push	{r1, r2, r3}
   1ec34:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1ec38:	sub	sp, sp, #12
   1ec3c:	mov	r5, r0
   1ec40:	ldr	r8, [sp, #44]	; 0x2c
   1ec44:	ldr	r4, [r0, #220]	; 0xdc
   1ec48:	ldr	r3, [r0, #212]	; 0xd4
   1ec4c:	ldr	r6, [r3, #176]	; 0xb0
   1ec50:	ldr	r3, [pc, #184]	; 1ed10 <__flatcc_fb_gen_c_verifier@@Base+0x4dc>
   1ec54:	ldrb	r3, [r3]
   1ec58:	cmp	r3, #0
   1ec5c:	beq	1ecfc <__flatcc_fb_gen_c_verifier@@Base+0x4c8>
   1ec60:	ldrb	r3, [r8]
   1ec64:	cmp	r3, #0
   1ec68:	beq	1ece0 <__flatcc_fb_gen_c_verifier@@Base+0x4ac>
   1ec6c:	mul	r6, r6, r4
   1ec70:	cmp	r6, #64	; 0x40
   1ec74:	ble	1ecb8 <__flatcc_fb_gen_c_verifier@@Base+0x484>
   1ec78:	mov	r4, r6
   1ec7c:	ldr	sl, [pc, #140]	; 1ed10 <__flatcc_fb_gen_c_verifier@@Base+0x4dc>
   1ec80:	ldr	r9, [pc, #140]	; 1ed14 <__flatcc_fb_gen_c_verifier@@Base+0x4e0>
   1ec84:	mov	r7, #64	; 0x40
   1ec88:	mov	r3, sl
   1ec8c:	mov	r2, r7
   1ec90:	mov	r1, r9
   1ec94:	ldr	r0, [r5, #204]	; 0xcc
   1ec98:	bl	14094 <fprintf@plt>
   1ec9c:	sub	r4, r4, #64	; 0x40
   1eca0:	cmp	r4, #64	; 0x40
   1eca4:	bgt	1ec88 <__flatcc_fb_gen_c_verifier@@Base+0x454>
   1eca8:	sub	r3, r6, #64	; 0x40
   1ecac:	sub	r6, r6, #65	; 0x41
   1ecb0:	bic	r6, r6, #63	; 0x3f
   1ecb4:	sub	r6, r3, r6
   1ecb8:	ldr	r3, [pc, #80]	; 1ed10 <__flatcc_fb_gen_c_verifier@@Base+0x4dc>
   1ecbc:	mov	r2, r6
   1ecc0:	ldr	r1, [pc, #76]	; 1ed14 <__flatcc_fb_gen_c_verifier@@Base+0x4e0>
   1ecc4:	ldr	r0, [r5, #204]	; 0xcc
   1ecc8:	bl	14094 <fprintf@plt>
   1eccc:	add	r2, sp, #48	; 0x30
   1ecd0:	str	r2, [sp, #4]
   1ecd4:	mov	r1, r8
   1ecd8:	ldr	r0, [r5, #204]	; 0xcc
   1ecdc:	bl	140e8 <vfprintf@plt>
   1ece0:	ldr	r1, [r5, #204]	; 0xcc
   1ece4:	mov	r0, #10
   1ece8:	bl	140f4 <fputc@plt>
   1ecec:	add	sp, sp, #12
   1ecf0:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   1ecf4:	add	sp, sp, #12
   1ecf8:	bx	lr
   1ecfc:	mov	r2, #64	; 0x40
   1ed00:	mov	r1, #32
   1ed04:	ldr	r0, [pc, #4]	; 1ed10 <__flatcc_fb_gen_c_verifier@@Base+0x4dc>
   1ed08:	bl	140ac <memset@plt>
   1ed0c:	b	1ec60 <__flatcc_fb_gen_c_verifier@@Base+0x42c>
   1ed10:	strheq	r7, [r6], -r4
   1ed14:	andeq	r5, r4, r4, asr #3
   1ed18:	push	{r4, lr}
   1ed1c:	ldr	r1, [pc, #4]	; 1ed28 <__flatcc_fb_gen_c_verifier@@Base+0x4f4>
   1ed20:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   1ed24:	pop	{r4, pc}
   1ed28:	ldrdeq	pc, [r4], -r4
   1ed2c:	push	{r4, lr}
   1ed30:	ldr	r1, [pc, #4]	; 1ed3c <__flatcc_fb_gen_c_verifier@@Base+0x508>
   1ed34:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   1ed38:	pop	{r4, pc}
   1ed3c:	andeq	pc, r4, r8, ror #9
   1ed40:	push	{r4, lr}
   1ed44:	ldr	r1, [pc, #4]	; 1ed50 <__flatcc_fb_gen_c_verifier@@Base+0x51c>
   1ed48:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   1ed4c:	pop	{r4, pc}
   1ed50:	ldrdeq	pc, [r4], -r4
   1ed54:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ed58:	sub	sp, sp, #44	; 0x2c
   1ed5c:	mov	r4, r0
   1ed60:	mov	r7, r1
   1ed64:	mov	r6, r2
   1ed68:	mov	r8, r3
   1ed6c:	ldr	r9, [sp, #84]	; 0x54
   1ed70:	mov	r0, #0
   1ed74:	mov	r1, #0
   1ed78:	strd	r0, [sp, #32]
   1ed7c:	add	r3, sp, #40	; 0x28
   1ed80:	strd	r0, [r3, #-16]!
   1ed84:	sub	r5, r8, r2
   1ed88:	add	r5, r5, #1
   1ed8c:	add	r5, r5, r5, lsr #31
   1ed90:	add	r5, r2, r5, asr #1
   1ed94:	lsl	fp, r5, #4
   1ed98:	ldr	r0, [r7]
   1ed9c:	add	r2, sp, #16
   1eda0:	str	r2, [sp, #4]
   1eda4:	add	r2, sp, #20
   1eda8:	str	r2, [sp]
   1edac:	add	r2, sp, #32
   1edb0:	ldr	r1, [sp, #80]	; 0x50
   1edb4:	add	r0, r0, fp
   1edb8:	bl	1eb5c <__flatcc_fb_gen_c_verifier@@Base+0x328>
   1edbc:	mov	sl, r0
   1edc0:	cmp	r0, #8
   1edc4:	beq	1eeb0 <__flatcc_fb_gen_c_verifier@@Base+0x67c>
   1edc8:	ldr	r3, [sp, #20]
   1edcc:	str	r3, [sp, #12]
   1edd0:	ldr	r3, [sp, #16]
   1edd4:	str	r3, [sp, #8]
   1edd8:	ldrd	r2, [sp, #32]
   1eddc:	strd	r2, [sp]
   1ede0:	ldrd	r2, [sp, #24]
   1ede4:	ldr	r1, [pc, #660]	; 1f080 <__flatcc_fb_gen_c_verifier@@Base+0x84c>
   1ede8:	mov	r0, r4
   1edec:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   1edf0:	ldr	r3, [r4, #220]	; 0xdc
   1edf4:	add	r3, r3, #1
   1edf8:	str	r3, [r4, #220]	; 0xdc
   1edfc:	cmp	r6, r5
   1ee00:	beq	1eee0 <__flatcc_fb_gen_c_verifier@@Base+0x6ac>
   1ee04:	cmp	r8, r5
   1ee08:	beq	1efd4 <__flatcc_fb_gen_c_verifier@@Base+0x7a0>
   1ee0c:	str	r9, [sp, #4]
   1ee10:	ldr	r3, [sp, #80]	; 0x50
   1ee14:	str	r3, [sp]
   1ee18:	mov	r3, r8
   1ee1c:	mov	r2, r5
   1ee20:	mov	r1, r7
   1ee24:	mov	r0, r4
   1ee28:	bl	1ed54 <__flatcc_fb_gen_c_verifier@@Base+0x520>
   1ee2c:	ldr	r3, [r4, #220]	; 0xdc
   1ee30:	cmp	r3, #0
   1ee34:	beq	1f058 <__flatcc_fb_gen_c_verifier@@Base+0x824>
   1ee38:	sub	r3, r3, #1
   1ee3c:	str	r3, [r4, #220]	; 0xdc
   1ee40:	ldr	r3, [sp, #20]
   1ee44:	ldr	r2, [sp, #16]
   1ee48:	ldr	r1, [pc, #564]	; 1f084 <__flatcc_fb_gen_c_verifier@@Base+0x850>
   1ee4c:	mov	r0, r4
   1ee50:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   1ee54:	ldr	r3, [r4, #220]	; 0xdc
   1ee58:	add	r3, r3, #1
   1ee5c:	str	r3, [r4, #220]	; 0xdc
   1ee60:	str	r9, [sp, #4]
   1ee64:	ldr	r3, [sp, #80]	; 0x50
   1ee68:	str	r3, [sp]
   1ee6c:	sub	r3, r5, #1
   1ee70:	mov	r2, r6
   1ee74:	mov	r1, r7
   1ee78:	mov	r0, r4
   1ee7c:	bl	1ed54 <__flatcc_fb_gen_c_verifier@@Base+0x520>
   1ee80:	ldr	r3, [r4, #220]	; 0xdc
   1ee84:	cmp	r3, #0
   1ee88:	beq	1f06c <__flatcc_fb_gen_c_verifier@@Base+0x838>
   1ee8c:	sub	r3, r3, #1
   1ee90:	str	r3, [r4, #220]	; 0xdc
   1ee94:	ldr	r3, [sp, #20]
   1ee98:	ldr	r2, [sp, #16]
   1ee9c:	ldr	r1, [pc, #484]	; 1f088 <__flatcc_fb_gen_c_verifier@@Base+0x854>
   1eea0:	mov	r0, r4
   1eea4:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   1eea8:	add	sp, sp, #44	; 0x2c
   1eeac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1eeb0:	ldr	r3, [sp, #20]
   1eeb4:	str	r3, [sp, #4]
   1eeb8:	ldr	r3, [sp, #16]
   1eebc:	str	r3, [sp]
   1eec0:	ldrd	r2, [sp, #32]
   1eec4:	ldr	r1, [pc, #448]	; 1f08c <__flatcc_fb_gen_c_verifier@@Base+0x858>
   1eec8:	mov	r0, r4
   1eecc:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   1eed0:	ldr	r3, [r4, #220]	; 0xdc
   1eed4:	add	r3, r3, #1
   1eed8:	str	r3, [r4, #220]	; 0xdc
   1eedc:	b	1edfc <__flatcc_fb_gen_c_verifier@@Base+0x5c8>
   1eee0:	ldr	r3, [r7]
   1eee4:	add	fp, r3, fp
   1eee8:	ldr	r3, [fp, #12]
   1eeec:	ldr	r2, [fp, #8]
   1eef0:	str	sl, [sp]
   1eef4:	ldr	r5, [r7, #4]
   1eef8:	ldr	r1, [r7, #12]
   1eefc:	mov	r0, r4
   1ef00:	blx	r5
   1ef04:	cmp	r9, #0
   1ef08:	ble	1ef8c <__flatcc_fb_gen_c_verifier@@Base+0x758>
   1ef0c:	mov	r2, r9
   1ef10:	ldr	r1, [pc, #376]	; 1f090 <__flatcc_fb_gen_c_verifier@@Base+0x85c>
   1ef14:	mov	r0, r4
   1ef18:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   1ef1c:	ldr	r3, [r4, #220]	; 0xdc
   1ef20:	cmp	r3, #0
   1ef24:	beq	1ef9c <__flatcc_fb_gen_c_verifier@@Base+0x768>
   1ef28:	sub	r3, r3, #1
   1ef2c:	str	r3, [r4, #220]	; 0xdc
   1ef30:	ldr	r1, [pc, #348]	; 1f094 <__flatcc_fb_gen_c_verifier@@Base+0x860>
   1ef34:	mov	r0, r4
   1ef38:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   1ef3c:	ldr	r3, [r4, #220]	; 0xdc
   1ef40:	cmp	r3, #0
   1ef44:	beq	1efb0 <__flatcc_fb_gen_c_verifier@@Base+0x77c>
   1ef48:	sub	r3, r3, #1
   1ef4c:	str	r3, [r4, #220]	; 0xdc
   1ef50:	ldr	r3, [sp, #20]
   1ef54:	ldr	r2, [sp, #16]
   1ef58:	ldr	r1, [pc, #292]	; 1f084 <__flatcc_fb_gen_c_verifier@@Base+0x850>
   1ef5c:	mov	r0, r4
   1ef60:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   1ef64:	ldr	r3, [r4, #220]	; 0xdc
   1ef68:	add	r3, r3, #1
   1ef6c:	str	r3, [r4, #220]	; 0xdc
   1ef70:	cmp	r9, #0
   1ef74:	ble	1efc4 <__flatcc_fb_gen_c_verifier@@Base+0x790>
   1ef78:	mov	r2, r9
   1ef7c:	ldr	r1, [pc, #268]	; 1f090 <__flatcc_fb_gen_c_verifier@@Base+0x85c>
   1ef80:	mov	r0, r4
   1ef84:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   1ef88:	b	1ee80 <__flatcc_fb_gen_c_verifier@@Base+0x64c>
   1ef8c:	ldr	r3, [r7, #8]
   1ef90:	mov	r0, r4
   1ef94:	blx	r3
   1ef98:	b	1ef1c <__flatcc_fb_gen_c_verifier@@Base+0x6e8>
   1ef9c:	ldr	r3, [pc, #244]	; 1f098 <__flatcc_fb_gen_c_verifier@@Base+0x864>
   1efa0:	mov	r2, #888	; 0x378
   1efa4:	ldr	r1, [pc, #240]	; 1f09c <__flatcc_fb_gen_c_verifier@@Base+0x868>
   1efa8:	ldr	r0, [pc, #240]	; 1f0a0 <__flatcc_fb_gen_c_verifier@@Base+0x86c>
   1efac:	bl	14148 <__assert_fail@plt>
   1efb0:	ldr	r3, [pc, #224]	; 1f098 <__flatcc_fb_gen_c_verifier@@Base+0x864>
   1efb4:	ldr	r2, [pc, #232]	; 1f0a4 <__flatcc_fb_gen_c_verifier@@Base+0x870>
   1efb8:	ldr	r1, [pc, #220]	; 1f09c <__flatcc_fb_gen_c_verifier@@Base+0x868>
   1efbc:	ldr	r0, [pc, #220]	; 1f0a0 <__flatcc_fb_gen_c_verifier@@Base+0x86c>
   1efc0:	bl	14148 <__assert_fail@plt>
   1efc4:	ldr	r3, [r7, #8]
   1efc8:	mov	r0, r4
   1efcc:	blx	r3
   1efd0:	b	1ee80 <__flatcc_fb_gen_c_verifier@@Base+0x64c>
   1efd4:	ldr	r3, [r7]
   1efd8:	add	fp, r3, fp
   1efdc:	ldr	r3, [fp, #12]
   1efe0:	ldr	r2, [fp, #8]
   1efe4:	str	sl, [sp]
   1efe8:	ldr	r8, [r7, #4]
   1efec:	ldr	r1, [r7, #12]
   1eff0:	mov	r0, r4
   1eff4:	blx	r8
   1eff8:	cmp	r9, #0
   1effc:	ble	1f034 <__flatcc_fb_gen_c_verifier@@Base+0x800>
   1f000:	mov	r2, r9
   1f004:	ldr	r1, [pc, #132]	; 1f090 <__flatcc_fb_gen_c_verifier@@Base+0x85c>
   1f008:	mov	r0, r4
   1f00c:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   1f010:	ldr	r3, [r4, #220]	; 0xdc
   1f014:	cmp	r3, #0
   1f018:	beq	1f044 <__flatcc_fb_gen_c_verifier@@Base+0x810>
   1f01c:	sub	r3, r3, #1
   1f020:	str	r3, [r4, #220]	; 0xdc
   1f024:	ldr	r1, [pc, #104]	; 1f094 <__flatcc_fb_gen_c_verifier@@Base+0x860>
   1f028:	mov	r0, r4
   1f02c:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   1f030:	b	1ee2c <__flatcc_fb_gen_c_verifier@@Base+0x5f8>
   1f034:	ldr	r3, [r7, #8]
   1f038:	mov	r0, r4
   1f03c:	blx	r3
   1f040:	b	1f010 <__flatcc_fb_gen_c_verifier@@Base+0x7dc>
   1f044:	ldr	r3, [pc, #76]	; 1f098 <__flatcc_fb_gen_c_verifier@@Base+0x864>
   1f048:	ldr	r2, [pc, #88]	; 1f0a8 <__flatcc_fb_gen_c_verifier@@Base+0x874>
   1f04c:	ldr	r1, [pc, #72]	; 1f09c <__flatcc_fb_gen_c_verifier@@Base+0x868>
   1f050:	ldr	r0, [pc, #72]	; 1f0a0 <__flatcc_fb_gen_c_verifier@@Base+0x86c>
   1f054:	bl	14148 <__assert_fail@plt>
   1f058:	ldr	r3, [pc, #56]	; 1f098 <__flatcc_fb_gen_c_verifier@@Base+0x864>
   1f05c:	ldr	r2, [pc, #72]	; 1f0ac <__flatcc_fb_gen_c_verifier@@Base+0x878>
   1f060:	ldr	r1, [pc, #52]	; 1f09c <__flatcc_fb_gen_c_verifier@@Base+0x868>
   1f064:	ldr	r0, [pc, #52]	; 1f0a0 <__flatcc_fb_gen_c_verifier@@Base+0x86c>
   1f068:	bl	14148 <__assert_fail@plt>
   1f06c:	ldr	r3, [pc, #36]	; 1f098 <__flatcc_fb_gen_c_verifier@@Base+0x864>
   1f070:	ldr	r2, [pc, #56]	; 1f0b0 <__flatcc_fb_gen_c_verifier@@Base+0x87c>
   1f074:	ldr	r1, [pc, #32]	; 1f09c <__flatcc_fb_gen_c_verifier@@Base+0x868>
   1f078:	ldr	r0, [pc, #32]	; 1f0a0 <__flatcc_fb_gen_c_verifier@@Base+0x86c>
   1f07c:	bl	14148 <__assert_fail@plt>
   1f080:	andeq	pc, r4, r4, asr #10
   1f084:	andeq	pc, r4, r8, ror #11
   1f088:	andeq	pc, r4, r0, lsl #12
   1f08c:	andeq	pc, r4, r4, lsr #10
   1f090:	andeq	pc, r4, r0, ror r5	; <UNPREDICTABLE>
   1f094:	andeq	pc, r4, r4, ror #11
   1f098:	andeq	pc, r4, r0, lsr r3	; <UNPREDICTABLE>
   1f09c:	andeq	pc, r4, r0, lsl #11
   1f0a0:	ldrdeq	pc, [r4], -r8
   1f0a4:	andeq	r0, r0, r9, ror r3
   1f0a8:	andeq	r0, r0, r7, lsl #7
   1f0ac:	andeq	r0, r0, fp, lsl #7
   1f0b0:	andeq	r0, r0, lr, lsl #7
   1f0b4:	push	{r4, r5, r6, lr}
   1f0b8:	sub	sp, sp, #8
   1f0bc:	mov	r4, r0
   1f0c0:	mov	r5, r1
   1f0c4:	mov	r6, r2
   1f0c8:	ldr	r2, [sp, #24]
   1f0cc:	ldr	r1, [pc, #260]	; 1f1d8 <__flatcc_fb_gen_c_verifier@@Base+0x9a4>
   1f0d0:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   1f0d4:	ldr	r1, [pc, #256]	; 1f1dc <__flatcc_fb_gen_c_verifier@@Base+0x9a8>
   1f0d8:	mov	r0, r4
   1f0dc:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   1f0e0:	ldr	r3, [r4, #220]	; 0xdc
   1f0e4:	add	r3, r3, #1
   1f0e8:	str	r3, [r4, #220]	; 0xdc
   1f0ec:	ldr	r3, [r5, #40]	; 0x28
   1f0f0:	sub	r3, r3, #1
   1f0f4:	cmp	r3, #8
   1f0f8:	ldrls	pc, [pc, r3, lsl #2]
   1f0fc:	b	1f188 <__flatcc_fb_gen_c_verifier@@Base+0x954>
   1f100:	andeq	pc, r1, r4, lsr #2
   1f104:	andeq	pc, r1, r4, lsr #2
   1f108:	andeq	pc, r1, r4, lsr #2
   1f10c:	andeq	pc, r1, r4, lsr #2
   1f110:	andeq	pc, r1, r4, lsr #2
   1f114:	andeq	pc, r1, r8, ror #2
   1f118:	andeq	pc, r1, r8, ror #2
   1f11c:	andeq	pc, r1, r8, ror #2
   1f120:	andeq	pc, r1, r8, ror #2
   1f124:	ldrd	r2, [r6, #48]	; 0x30
   1f128:	ldr	r1, [pc, #176]	; 1f1e0 <__flatcc_fb_gen_c_verifier@@Base+0x9ac>
   1f12c:	mov	r0, r4
   1f130:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   1f134:	ldr	r3, [r4, #220]	; 0xdc
   1f138:	cmp	r3, #0
   1f13c:	beq	1f1c4 <__flatcc_fb_gen_c_verifier@@Base+0x990>
   1f140:	sub	r3, r3, #1
   1f144:	str	r3, [r4, #220]	; 0xdc
   1f148:	ldr	r1, [pc, #148]	; 1f1e4 <__flatcc_fb_gen_c_verifier@@Base+0x9b0>
   1f14c:	mov	r0, r4
   1f150:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   1f154:	ldr	r3, [r4, #220]	; 0xdc
   1f158:	add	r3, r3, #1
   1f15c:	str	r3, [r4, #220]	; 0xdc
   1f160:	add	sp, sp, #8
   1f164:	pop	{r4, r5, r6, pc}
   1f168:	ldrd	r2, [r6, #48]	; 0x30
   1f16c:	cmp	r2, #0
   1f170:	sbcs	r1, r3, #0
   1f174:	ldrlt	r1, [pc, #108]	; 1f1e8 <__flatcc_fb_gen_c_verifier@@Base+0x9b4>
   1f178:	ldrge	r1, [pc, #96]	; 1f1e0 <__flatcc_fb_gen_c_verifier@@Base+0x9ac>
   1f17c:	mov	r0, r4
   1f180:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   1f184:	b	1f134 <__flatcc_fb_gen_c_verifier@@Base+0x900>
   1f188:	ldr	r5, [pc, #92]	; 1f1ec <__flatcc_fb_gen_c_verifier@@Base+0x9b8>
   1f18c:	ldr	r4, [pc, #92]	; 1f1f0 <__flatcc_fb_gen_c_verifier@@Base+0x9bc>
   1f190:	ldr	r3, [pc, #92]	; 1f1f4 <__flatcc_fb_gen_c_verifier@@Base+0x9c0>
   1f194:	ldr	r0, [r3]
   1f198:	ldr	r3, [pc, #88]	; 1f1f8 <__flatcc_fb_gen_c_verifier@@Base+0x9c4>
   1f19c:	str	r3, [sp]
   1f1a0:	mov	r3, r5
   1f1a4:	mov	r2, r4
   1f1a8:	ldr	r1, [pc, #76]	; 1f1fc <__flatcc_fb_gen_c_verifier@@Base+0x9c8>
   1f1ac:	bl	14094 <fprintf@plt>
   1f1b0:	ldr	r3, [pc, #72]	; 1f200 <__flatcc_fb_gen_c_verifier@@Base+0x9cc>
   1f1b4:	mov	r2, r5
   1f1b8:	mov	r1, r4
   1f1bc:	ldr	r0, [pc, #64]	; 1f204 <__flatcc_fb_gen_c_verifier@@Base+0x9d0>
   1f1c0:	bl	14148 <__assert_fail@plt>
   1f1c4:	ldr	r3, [pc, #60]	; 1f208 <__flatcc_fb_gen_c_verifier@@Base+0x9d4>
   1f1c8:	ldr	r2, [pc, #60]	; 1f20c <__flatcc_fb_gen_c_verifier@@Base+0x9d8>
   1f1cc:	ldr	r1, [pc, #28]	; 1f1f0 <__flatcc_fb_gen_c_verifier@@Base+0x9bc>
   1f1d0:	ldr	r0, [pc, #56]	; 1f210 <__flatcc_fb_gen_c_verifier@@Base+0x9dc>
   1f1d4:	bl	14148 <__assert_fail@plt>
   1f1d8:	andeq	pc, r4, r0, lsl r6	; <UNPREDICTABLE>
   1f1dc:	andeq	pc, r4, r0, ror #12
   1f1e0:	andeq	pc, r4, r4, ror r6	; <UNPREDICTABLE>
   1f1e4:	strdeq	pc, [r4], -r0
   1f1e8:	andeq	pc, r4, r0, lsr #13
   1f1ec:	andeq	r0, r0, r6, asr #5
   1f1f0:	andeq	pc, r4, r0, lsl #11
   1f1f4:	andeq	r7, r6, r8, lsr #1
   1f1f8:	andeq	pc, r4, ip, asr #13
   1f1fc:	andeq	ip, r3, r8, lsr #27
   1f200:	andeq	pc, r4, r0, asr #6
   1f204:	andeq	r5, r4, r0, ror #3
   1f208:	andeq	pc, r4, r8, asr r3	; <UNPREDICTABLE>
   1f20c:	andeq	r0, r0, pc, asr #5
   1f210:	ldrdeq	pc, [r4], -r8
   1f214:	push	{r4, lr}
   1f218:	sub	sp, sp, #208	; 0xd0
   1f21c:	mov	r4, r0
   1f220:	mov	r0, r1
   1f224:	add	r1, sp, #4
   1f228:	bl	15e20 <__flatcc_fb_copy_scope@@Base>
   1f22c:	ldr	r2, [r4, #208]	; 0xd0
   1f230:	add	r3, sp, #4
   1f234:	ldr	r2, [r2, #160]	; 0xa0
   1f238:	ldr	r1, [pc, #24]	; 1f258 <__flatcc_fb_gen_c_verifier@@Base+0xa24>
   1f23c:	mov	r0, r4
   1f240:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   1f244:	ldr	r1, [pc, #16]	; 1f25c <__flatcc_fb_gen_c_verifier@@Base+0xa28>
   1f248:	mov	r0, r4
   1f24c:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   1f250:	add	sp, sp, #208	; 0xd0
   1f254:	pop	{r4, pc}
   1f258:	strdeq	pc, [r4], -ip
   1f25c:	andeq	pc, r4, r8, ror #14
   1f260:	push	{r4, r5, lr}
   1f264:	sub	sp, sp, #228	; 0xe4
   1f268:	mov	r4, r0
   1f26c:	mov	r5, r2
   1f270:	ldr	r2, [sp, #240]	; 0xf0
   1f274:	ldr	r1, [pc, #184]	; 1f334 <__flatcc_fb_gen_c_verifier@@Base+0xb00>
   1f278:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   1f27c:	ldr	r1, [pc, #180]	; 1f338 <__flatcc_fb_gen_c_verifier@@Base+0xb04>
   1f280:	mov	r0, r4
   1f284:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   1f288:	ldr	r3, [r4, #220]	; 0xdc
   1f28c:	add	r3, r3, #1
   1f290:	str	r3, [r4, #220]	; 0xdc
   1f294:	ldrh	r3, [r5, #8]
   1f298:	sub	r3, r3, #3
   1f29c:	uxth	r3, r3
   1f2a0:	cmp	r3, #1
   1f2a4:	bhi	1f30c <__flatcc_fb_gen_c_verifier@@Base+0xad8>
   1f2a8:	mov	r2, #220	; 0xdc
   1f2ac:	mov	r1, #0
   1f2b0:	add	r0, sp, #4
   1f2b4:	bl	140ac <memset@plt>
   1f2b8:	add	r2, sp, #4
   1f2bc:	mov	r1, r5
   1f2c0:	ldr	r0, [r5, #12]
   1f2c4:	bl	15edc <__flatcc_fb_scoped_symbol_name@@Base>
   1f2c8:	add	r2, sp, #4
   1f2cc:	ldr	r1, [pc, #104]	; 1f33c <__flatcc_fb_gen_c_verifier@@Base+0xb08>
   1f2d0:	mov	r0, r4
   1f2d4:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   1f2d8:	ldr	r3, [r4, #220]	; 0xdc
   1f2dc:	cmp	r3, #0
   1f2e0:	beq	1f320 <__flatcc_fb_gen_c_verifier@@Base+0xaec>
   1f2e4:	sub	r3, r3, #1
   1f2e8:	str	r3, [r4, #220]	; 0xdc
   1f2ec:	ldr	r1, [pc, #76]	; 1f340 <__flatcc_fb_gen_c_verifier@@Base+0xb0c>
   1f2f0:	mov	r0, r4
   1f2f4:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   1f2f8:	ldr	r3, [r4, #220]	; 0xdc
   1f2fc:	add	r3, r3, #1
   1f300:	str	r3, [r4, #220]	; 0xdc
   1f304:	add	sp, sp, #228	; 0xe4
   1f308:	pop	{r4, r5, pc}
   1f30c:	ldr	r3, [pc, #48]	; 1f344 <__flatcc_fb_gen_c_verifier@@Base+0xb10>
   1f310:	ldr	r2, [pc, #48]	; 1f348 <__flatcc_fb_gen_c_verifier@@Base+0xb14>
   1f314:	ldr	r1, [pc, #48]	; 1f34c <__flatcc_fb_gen_c_verifier@@Base+0xb18>
   1f318:	ldr	r0, [pc, #48]	; 1f350 <__flatcc_fb_gen_c_verifier@@Base+0xb1c>
   1f31c:	bl	14148 <__assert_fail@plt>
   1f320:	ldr	r3, [pc, #44]	; 1f354 <__flatcc_fb_gen_c_verifier@@Base+0xb20>
   1f324:	ldr	r2, [pc, #44]	; 1f358 <__flatcc_fb_gen_c_verifier@@Base+0xb24>
   1f328:	ldr	r1, [pc, #28]	; 1f34c <__flatcc_fb_gen_c_verifier@@Base+0xb18>
   1f32c:	ldr	r0, [pc, #40]	; 1f35c <__flatcc_fb_gen_c_verifier@@Base+0xb28>
   1f330:	bl	14148 <__assert_fail@plt>
   1f334:	muleq	r4, ip, r7
   1f338:	andeq	pc, r4, r0, ror #12
   1f33c:	andeq	pc, r4, r0, ror #15
   1f340:	strdeq	pc, [r4], -r0
   1f344:	andeq	pc, r4, r8, ror #6
   1f348:	ldrdeq	r0, [r0], -r9
   1f34c:	andeq	pc, r4, r0, lsl #11
   1f350:	strdeq	ip, [r3], -ip	; <UNPREDICTABLE>
   1f354:	andeq	pc, r4, r0, lsl #7
   1f358:	andeq	r0, r0, r6, ror #5
   1f35c:	ldrdeq	pc, [r4], -r8
   1f360:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1f364:	sub	sp, sp, #452	; 0x1c4
   1f368:	mov	r4, r0
   1f36c:	mov	r5, r1
   1f370:	mov	r6, #220	; 0xdc
   1f374:	mov	r2, r6
   1f378:	mov	r1, #0
   1f37c:	add	r0, sp, #228	; 0xe4
   1f380:	bl	140ac <memset@plt>
   1f384:	mov	r2, r6
   1f388:	mov	r1, #0
   1f38c:	add	r0, sp, #8
   1f390:	bl	140ac <memset@plt>
   1f394:	add	r2, sp, #228	; 0xe4
   1f398:	mov	r1, r5
   1f39c:	ldr	r0, [r5, #12]
   1f3a0:	bl	15edc <__flatcc_fb_scoped_symbol_name@@Base>
   1f3a4:	add	r2, sp, #228	; 0xe4
   1f3a8:	ldr	r1, [pc, #1044]	; 1f7c4 <__flatcc_fb_gen_c_verifier@@Base+0xf90>
   1f3ac:	mov	r0, r4
   1f3b0:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   1f3b4:	ldr	r1, [pc, #1036]	; 1f7c8 <__flatcc_fb_gen_c_verifier@@Base+0xf94>
   1f3b8:	mov	r0, r4
   1f3bc:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   1f3c0:	ldr	r3, [r4, #220]	; 0xdc
   1f3c4:	add	r3, r3, #1
   1f3c8:	str	r3, [r4, #220]	; 0xdc
   1f3cc:	ldr	r1, [pc, #1016]	; 1f7cc <__flatcc_fb_gen_c_verifier@@Base+0xf98>
   1f3d0:	mov	r0, r4
   1f3d4:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   1f3d8:	ldr	r1, [pc, #1008]	; 1f7d0 <__flatcc_fb_gen_c_verifier@@Base+0xf9c>
   1f3dc:	mov	r0, r4
   1f3e0:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   1f3e4:	ldr	r1, [pc, #1000]	; 1f7d4 <__flatcc_fb_gen_c_verifier@@Base+0xfa0>
   1f3e8:	mov	r0, r4
   1f3ec:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   1f3f0:	ldr	r1, [pc, #992]	; 1f7d8 <__flatcc_fb_gen_c_verifier@@Base+0xfa4>
   1f3f4:	mov	r0, r4
   1f3f8:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   1f3fc:	ldr	r3, [r4, #220]	; 0xdc
   1f400:	add	r3, r3, #1
   1f404:	str	r3, [r4, #220]	; 0xdc
   1f408:	ldr	r1, [pc, #972]	; 1f7dc <__flatcc_fb_gen_c_verifier@@Base+0xfa8>
   1f40c:	mov	r0, r4
   1f410:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   1f414:	ldr	r3, [r4, #220]	; 0xdc
   1f418:	cmp	r3, #0
   1f41c:	beq	1f448 <__flatcc_fb_gen_c_verifier@@Base+0xc14>
   1f420:	sub	r3, r3, #1
   1f424:	str	r3, [r4, #220]	; 0xdc
   1f428:	ldr	r5, [r5, #20]
   1f42c:	cmp	r5, #0
   1f430:	beq	1f618 <__flatcc_fb_gen_c_verifier@@Base+0xde4>
   1f434:	ldr	r8, [pc, #932]	; 1f7e0 <__flatcc_fb_gen_c_verifier@@Base+0xfac>
   1f438:	ldr	r9, [pc, #932]	; 1f7e4 <__flatcc_fb_gen_c_verifier@@Base+0xfb0>
   1f43c:	ldr	fp, [pc, #932]	; 1f7e8 <__flatcc_fb_gen_c_verifier@@Base+0xfb4>
   1f440:	ldr	sl, [pc, #932]	; 1f7ec <__flatcc_fb_gen_c_verifier@@Base+0xfb8>
   1f444:	b	1f5a0 <__flatcc_fb_gen_c_verifier@@Base+0xd6c>
   1f448:	ldr	r3, [pc, #928]	; 1f7f0 <__flatcc_fb_gen_c_verifier@@Base+0xfbc>
   1f44c:	ldr	r2, [pc, #928]	; 1f7f4 <__flatcc_fb_gen_c_verifier@@Base+0xfc0>
   1f450:	ldr	r1, [pc, #928]	; 1f7f8 <__flatcc_fb_gen_c_verifier@@Base+0xfc4>
   1f454:	ldr	r0, [pc, #928]	; 1f7fc <__flatcc_fb_gen_c_verifier@@Base+0xfc8>
   1f458:	bl	14148 <__assert_fail@plt>
   1f45c:	ldr	r3, [r5, #16]
   1f460:	add	r2, sp, #8
   1f464:	mov	r1, r3
   1f468:	ldr	r0, [r3, #12]
   1f46c:	bl	15edc <__flatcc_fb_scoped_symbol_name@@Base>
   1f470:	ldr	r2, [r5, #48]	; 0x30
   1f474:	str	r7, [sp]
   1f478:	mov	r3, r6
   1f47c:	mov	r1, r8
   1f480:	mov	r0, r4
   1f484:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   1f488:	ldr	r3, [r4, #220]	; 0xdc
   1f48c:	add	r3, r3, #1
   1f490:	str	r3, [r4, #220]	; 0xdc
   1f494:	ldr	r3, [r5, #16]
   1f498:	ldrh	r3, [r3, #8]
   1f49c:	cmp	r3, #0
   1f4a0:	beq	1f4e8 <__flatcc_fb_gen_c_verifier@@Base+0xcb4>
   1f4a4:	cmp	r3, #1
   1f4a8:	beq	1f51c <__flatcc_fb_gen_c_verifier@@Base+0xce8>
   1f4ac:	ldr	r5, [pc, #844]	; 1f800 <__flatcc_fb_gen_c_verifier@@Base+0xfcc>
   1f4b0:	ldr	r4, [pc, #832]	; 1f7f8 <__flatcc_fb_gen_c_verifier@@Base+0xfc4>
   1f4b4:	ldr	r3, [pc, #840]	; 1f804 <__flatcc_fb_gen_c_verifier@@Base+0xfd0>
   1f4b8:	ldr	r0, [r3]
   1f4bc:	ldr	r3, [pc, #836]	; 1f808 <__flatcc_fb_gen_c_verifier@@Base+0xfd4>
   1f4c0:	str	r3, [sp]
   1f4c4:	mov	r3, r5
   1f4c8:	mov	r2, r4
   1f4cc:	ldr	r1, [pc, #824]	; 1f80c <__flatcc_fb_gen_c_verifier@@Base+0xfd8>
   1f4d0:	bl	14094 <fprintf@plt>
   1f4d4:	ldr	r3, [pc, #788]	; 1f7f0 <__flatcc_fb_gen_c_verifier@@Base+0xfbc>
   1f4d8:	mov	r2, r5
   1f4dc:	mov	r1, r4
   1f4e0:	ldr	r0, [pc, #808]	; 1f810 <__flatcc_fb_gen_c_verifier@@Base+0xfdc>
   1f4e4:	bl	14148 <__assert_fail@plt>
   1f4e8:	add	r2, sp, #8
   1f4ec:	mov	r1, fp
   1f4f0:	mov	r0, r4
   1f4f4:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   1f4f8:	mov	r1, r9
   1f4fc:	mov	r0, r4
   1f500:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   1f504:	ldr	r3, [r4, #220]	; 0xdc
   1f508:	cmp	r3, #0
   1f50c:	beq	1f530 <__flatcc_fb_gen_c_verifier@@Base+0xcfc>
   1f510:	sub	r3, r3, #1
   1f514:	str	r3, [r4, #220]	; 0xdc
   1f518:	b	1f594 <__flatcc_fb_gen_c_verifier@@Base+0xd60>
   1f51c:	add	r2, sp, #8
   1f520:	ldr	r1, [pc, #748]	; 1f814 <__flatcc_fb_gen_c_verifier@@Base+0xfe0>
   1f524:	mov	r0, r4
   1f528:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   1f52c:	b	1f4f8 <__flatcc_fb_gen_c_verifier@@Base+0xcc4>
   1f530:	ldr	r3, [pc, #696]	; 1f7f0 <__flatcc_fb_gen_c_verifier@@Base+0xfbc>
   1f534:	ldr	r2, [pc, #732]	; 1f818 <__flatcc_fb_gen_c_verifier@@Base+0xfe4>
   1f538:	ldr	r1, [pc, #696]	; 1f7f8 <__flatcc_fb_gen_c_verifier@@Base+0xfc4>
   1f53c:	ldr	r0, [pc, #696]	; 1f7fc <__flatcc_fb_gen_c_verifier@@Base+0xfc8>
   1f540:	bl	14148 <__assert_fail@plt>
   1f544:	ldr	r2, [r5, #48]	; 0x30
   1f548:	str	r7, [sp]
   1f54c:	mov	r3, r6
   1f550:	mov	r1, r8
   1f554:	mov	r0, r4
   1f558:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   1f55c:	ldr	r3, [r4, #220]	; 0xdc
   1f560:	add	r3, r3, #1
   1f564:	str	r3, [r4, #220]	; 0xdc
   1f568:	mov	r1, sl
   1f56c:	mov	r0, r4
   1f570:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   1f574:	mov	r1, r9
   1f578:	mov	r0, r4
   1f57c:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   1f580:	ldr	r3, [r4, #220]	; 0xdc
   1f584:	cmp	r3, #0
   1f588:	beq	1f604 <__flatcc_fb_gen_c_verifier@@Base+0xdd0>
   1f58c:	sub	r3, r3, #1
   1f590:	str	r3, [r4, #220]	; 0xdc
   1f594:	ldr	r5, [r5]
   1f598:	cmp	r5, #0
   1f59c:	beq	1f618 <__flatcc_fb_gen_c_verifier@@Base+0xde4>
   1f5a0:	ldr	r3, [r5, #4]
   1f5a4:	ldr	r6, [r3, #4]
   1f5a8:	ldr	r7, [r3]
   1f5ac:	ldrh	r3, [r5, #24]
   1f5b0:	cmp	r3, #10
   1f5b4:	beq	1f544 <__flatcc_fb_gen_c_verifier@@Base+0xd10>
   1f5b8:	cmp	r3, #14
   1f5bc:	beq	1f45c <__flatcc_fb_gen_c_verifier@@Base+0xc28>
   1f5c0:	cmp	r3, #0
   1f5c4:	beq	1f594 <__flatcc_fb_gen_c_verifier@@Base+0xd60>
   1f5c8:	ldr	r5, [pc, #588]	; 1f81c <__flatcc_fb_gen_c_verifier@@Base+0xfe8>
   1f5cc:	ldr	r4, [pc, #548]	; 1f7f8 <__flatcc_fb_gen_c_verifier@@Base+0xfc4>
   1f5d0:	ldr	r3, [pc, #556]	; 1f804 <__flatcc_fb_gen_c_verifier@@Base+0xfd0>
   1f5d4:	ldr	r0, [r3]
   1f5d8:	ldr	r3, [pc, #576]	; 1f820 <__flatcc_fb_gen_c_verifier@@Base+0xfec>
   1f5dc:	str	r3, [sp]
   1f5e0:	mov	r3, r5
   1f5e4:	mov	r2, r4
   1f5e8:	ldr	r1, [pc, #540]	; 1f80c <__flatcc_fb_gen_c_verifier@@Base+0xfd8>
   1f5ec:	bl	14094 <fprintf@plt>
   1f5f0:	ldr	r3, [pc, #504]	; 1f7f0 <__flatcc_fb_gen_c_verifier@@Base+0xfbc>
   1f5f4:	mov	r2, r5
   1f5f8:	mov	r1, r4
   1f5fc:	ldr	r0, [pc, #524]	; 1f810 <__flatcc_fb_gen_c_verifier@@Base+0xfdc>
   1f600:	bl	14148 <__assert_fail@plt>
   1f604:	ldr	r3, [pc, #484]	; 1f7f0 <__flatcc_fb_gen_c_verifier@@Base+0xfbc>
   1f608:	ldr	r2, [pc, #532]	; 1f824 <__flatcc_fb_gen_c_verifier@@Base+0xff0>
   1f60c:	ldr	r1, [pc, #484]	; 1f7f8 <__flatcc_fb_gen_c_verifier@@Base+0xfc4>
   1f610:	ldr	r0, [pc, #484]	; 1f7fc <__flatcc_fb_gen_c_verifier@@Base+0xfc8>
   1f614:	bl	14148 <__assert_fail@plt>
   1f618:	ldr	r1, [pc, #520]	; 1f828 <__flatcc_fb_gen_c_verifier@@Base+0xff4>
   1f61c:	mov	r0, r4
   1f620:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   1f624:	ldr	r3, [r4, #220]	; 0xdc
   1f628:	add	r3, r3, #1
   1f62c:	str	r3, [r4, #220]	; 0xdc
   1f630:	ldr	r1, [pc, #500]	; 1f82c <__flatcc_fb_gen_c_verifier@@Base+0xff8>
   1f634:	mov	r0, r4
   1f638:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   1f63c:	ldr	r3, [r4, #220]	; 0xdc
   1f640:	add	r3, r3, #1
   1f644:	str	r3, [r4, #220]	; 0xdc
   1f648:	ldr	r1, [pc, #480]	; 1f830 <__flatcc_fb_gen_c_verifier@@Base+0xffc>
   1f64c:	mov	r0, r4
   1f650:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   1f654:	ldr	r3, [r4, #220]	; 0xdc
   1f658:	cmp	r3, #0
   1f65c:	beq	1f760 <__flatcc_fb_gen_c_verifier@@Base+0xf2c>
   1f660:	sub	r3, r3, #1
   1f664:	str	r3, [r4, #220]	; 0xdc
   1f668:	ldr	r1, [pc, #452]	; 1f834 <__flatcc_fb_gen_c_verifier@@Base+0x1000>
   1f66c:	mov	r0, r4
   1f670:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   1f674:	ldr	r3, [r4, #220]	; 0xdc
   1f678:	add	r3, r3, #1
   1f67c:	str	r3, [r4, #220]	; 0xdc
   1f680:	ldr	r1, [pc, #432]	; 1f838 <__flatcc_fb_gen_c_verifier@@Base+0x1004>
   1f684:	mov	r0, r4
   1f688:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   1f68c:	ldr	r3, [r4, #220]	; 0xdc
   1f690:	cmp	r3, #0
   1f694:	beq	1f774 <__flatcc_fb_gen_c_verifier@@Base+0xf40>
   1f698:	sub	r3, r3, #1
   1f69c:	str	r3, [r4, #220]	; 0xdc
   1f6a0:	ldr	r1, [pc, #404]	; 1f83c <__flatcc_fb_gen_c_verifier@@Base+0x1008>
   1f6a4:	mov	r0, r4
   1f6a8:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   1f6ac:	ldr	r3, [r4, #220]	; 0xdc
   1f6b0:	cmp	r3, #0
   1f6b4:	beq	1f788 <__flatcc_fb_gen_c_verifier@@Base+0xf54>
   1f6b8:	sub	r3, r3, #1
   1f6bc:	str	r3, [r4, #220]	; 0xdc
   1f6c0:	ldr	r1, [pc, #372]	; 1f83c <__flatcc_fb_gen_c_verifier@@Base+0x1008>
   1f6c4:	mov	r0, r4
   1f6c8:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   1f6cc:	ldr	r1, [pc, #364]	; 1f840 <__flatcc_fb_gen_c_verifier@@Base+0x100c>
   1f6d0:	mov	r0, r4
   1f6d4:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   1f6d8:	ldr	r1, [pc, #356]	; 1f844 <__flatcc_fb_gen_c_verifier@@Base+0x1010>
   1f6dc:	mov	r0, r4
   1f6e0:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   1f6e4:	ldr	r3, [r4, #220]	; 0xdc
   1f6e8:	add	r3, r3, #1
   1f6ec:	str	r3, [r4, #220]	; 0xdc
   1f6f0:	ldr	r1, [pc, #336]	; 1f848 <__flatcc_fb_gen_c_verifier@@Base+0x1014>
   1f6f4:	mov	r0, r4
   1f6f8:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   1f6fc:	ldr	r3, [r4, #220]	; 0xdc
   1f700:	cmp	r3, #0
   1f704:	beq	1f79c <__flatcc_fb_gen_c_verifier@@Base+0xf68>
   1f708:	sub	r3, r3, #1
   1f70c:	str	r3, [r4, #220]	; 0xdc
   1f710:	ldr	r1, [pc, #292]	; 1f83c <__flatcc_fb_gen_c_verifier@@Base+0x1008>
   1f714:	mov	r0, r4
   1f718:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   1f71c:	ldr	r1, [pc, #296]	; 1f84c <__flatcc_fb_gen_c_verifier@@Base+0x1018>
   1f720:	mov	r0, r4
   1f724:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   1f728:	ldr	r3, [r4, #220]	; 0xdc
   1f72c:	cmp	r3, #0
   1f730:	beq	1f7b0 <__flatcc_fb_gen_c_verifier@@Base+0xf7c>
   1f734:	sub	r3, r3, #1
   1f738:	str	r3, [r4, #220]	; 0xdc
   1f73c:	ldr	r1, [pc, #248]	; 1f83c <__flatcc_fb_gen_c_verifier@@Base+0x1008>
   1f740:	mov	r0, r4
   1f744:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   1f748:	ldr	r1, [pc, #124]	; 1f7cc <__flatcc_fb_gen_c_verifier@@Base+0xf98>
   1f74c:	mov	r0, r4
   1f750:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   1f754:	mov	r0, #0
   1f758:	add	sp, sp, #452	; 0x1c4
   1f75c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1f760:	ldr	r3, [pc, #136]	; 1f7f0 <__flatcc_fb_gen_c_verifier@@Base+0xfbc>
   1f764:	ldr	r2, [pc, #228]	; 1f850 <__flatcc_fb_gen_c_verifier@@Base+0x101c>
   1f768:	ldr	r1, [pc, #136]	; 1f7f8 <__flatcc_fb_gen_c_verifier@@Base+0xfc4>
   1f76c:	ldr	r0, [pc, #136]	; 1f7fc <__flatcc_fb_gen_c_verifier@@Base+0xfc8>
   1f770:	bl	14148 <__assert_fail@plt>
   1f774:	ldr	r3, [pc, #116]	; 1f7f0 <__flatcc_fb_gen_c_verifier@@Base+0xfbc>
   1f778:	ldr	r2, [pc, #212]	; 1f854 <__flatcc_fb_gen_c_verifier@@Base+0x1020>
   1f77c:	ldr	r1, [pc, #116]	; 1f7f8 <__flatcc_fb_gen_c_verifier@@Base+0xfc4>
   1f780:	ldr	r0, [pc, #116]	; 1f7fc <__flatcc_fb_gen_c_verifier@@Base+0xfc8>
   1f784:	bl	14148 <__assert_fail@plt>
   1f788:	ldr	r3, [pc, #96]	; 1f7f0 <__flatcc_fb_gen_c_verifier@@Base+0xfbc>
   1f78c:	ldr	r2, [pc, #196]	; 1f858 <__flatcc_fb_gen_c_verifier@@Base+0x1024>
   1f790:	ldr	r1, [pc, #96]	; 1f7f8 <__flatcc_fb_gen_c_verifier@@Base+0xfc4>
   1f794:	ldr	r0, [pc, #96]	; 1f7fc <__flatcc_fb_gen_c_verifier@@Base+0xfc8>
   1f798:	bl	14148 <__assert_fail@plt>
   1f79c:	ldr	r3, [pc, #76]	; 1f7f0 <__flatcc_fb_gen_c_verifier@@Base+0xfbc>
   1f7a0:	ldr	r2, [pc, #180]	; 1f85c <__flatcc_fb_gen_c_verifier@@Base+0x1028>
   1f7a4:	ldr	r1, [pc, #76]	; 1f7f8 <__flatcc_fb_gen_c_verifier@@Base+0xfc4>
   1f7a8:	ldr	r0, [pc, #76]	; 1f7fc <__flatcc_fb_gen_c_verifier@@Base+0xfc8>
   1f7ac:	bl	14148 <__assert_fail@plt>
   1f7b0:	ldr	r3, [pc, #56]	; 1f7f0 <__flatcc_fb_gen_c_verifier@@Base+0xfbc>
   1f7b4:	mov	r2, #1552	; 0x610
   1f7b8:	ldr	r1, [pc, #56]	; 1f7f8 <__flatcc_fb_gen_c_verifier@@Base+0xfc4>
   1f7bc:	ldr	r0, [pc, #56]	; 1f7fc <__flatcc_fb_gen_c_verifier@@Base+0xfc8>
   1f7c0:	bl	14148 <__assert_fail@plt>
   1f7c4:	andeq	pc, r4, r8, lsr #16
   1f7c8:	andeq	r2, r5, r0, asr #3
   1f7cc:	muleq	r4, r0, r4
   1f7d0:			; <UNDEFINED> instruction: 0x0004f8b8
   1f7d4:	andeq	pc, r4, r8, asr #17
   1f7d8:	ldrdeq	pc, [r4], -r8
   1f7dc:	andeq	pc, r4, ip, ror #17
   1f7e0:	andeq	pc, r4, ip, lsl r9	; <UNPREDICTABLE>
   1f7e4:	ldrdeq	pc, [r4], -r0
   1f7e8:	andeq	pc, r4, r0, lsr r9	; <UNPREDICTABLE>
   1f7ec:	ldrdeq	pc, [r4], -r8
   1f7f0:	muleq	r4, r0, r3
   1f7f4:	ldrdeq	r0, [r0], -pc	; <UNPREDICTABLE>
   1f7f8:	andeq	pc, r4, r0, lsl #11
   1f7fc:	ldrdeq	pc, [r4], -r8
   1f800:	strdeq	r0, [r0], -r2
   1f804:	andeq	r7, r6, r8, lsr #1
   1f808:	muleq	r4, r8, r9
   1f80c:	andeq	ip, r3, r8, lsr #27
   1f810:	andeq	r5, r4, r0, ror #3
   1f814:	andeq	pc, r4, r4, ror #18
   1f818:	strdeq	r0, [r0], -r6
   1f81c:	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
   1f820:	andeq	pc, r4, r8, lsl sl	; <UNPREDICTABLE>
   1f824:	strdeq	r0, [r0], -ip
   1f828:	andeq	pc, r4, r8, asr #20
   1f82c:	andeq	pc, r4, r4, asr sl	; <UNPREDICTABLE>
   1f830:	muleq	r4, r0, sl
   1f834:	strdeq	pc, [r4], -r0
   1f838:	andeq	pc, r4, ip, ror #21
   1f83c:	andeq	pc, r4, r4, ror #11
   1f840:	andeq	pc, r4, r4, lsr #22
   1f844:	andeq	pc, r4, r0, asr #22
   1f848:	andeq	pc, r4, r0, asr fp	; <UNPREDICTABLE>
   1f84c:	andeq	pc, r4, r4, lsr fp	; <UNPREDICTABLE>
   1f850:	andeq	r0, r0, r7, lsl #12
   1f854:	andeq	r0, r0, r9, lsl #12
   1f858:	andeq	r0, r0, sl, lsl #12
   1f85c:	andeq	r0, r0, lr, lsl #12
   1f860:	push	{r4, r5, r6, r7, lr}
   1f864:	sub	sp, sp, #452	; 0x1c4
   1f868:	mov	r5, r0
   1f86c:	mov	r4, r1
   1f870:	mov	r6, #220	; 0xdc
   1f874:	mov	r2, r6
   1f878:	mov	r1, #0
   1f87c:	add	r0, sp, #228	; 0xe4
   1f880:	bl	140ac <memset@plt>
   1f884:	mov	r2, r6
   1f888:	mov	r1, #0
   1f88c:	add	r0, sp, #8
   1f890:	bl	140ac <memset@plt>
   1f894:	add	r2, sp, #228	; 0xe4
   1f898:	mov	r1, r4
   1f89c:	ldr	r0, [r4, #12]
   1f8a0:	bl	15edc <__flatcc_fb_scoped_symbol_name@@Base>
   1f8a4:	add	r2, sp, #228	; 0xe4
   1f8a8:	ldr	r1, [pc, #280]	; 1f9c8 <__flatcc_fb_gen_c_verifier@@Base+0x1194>
   1f8ac:	mov	r0, r5
   1f8b0:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   1f8b4:	ldr	r1, [pc, #272]	; 1f9cc <__flatcc_fb_gen_c_verifier@@Base+0x1198>
   1f8b8:	mov	r0, r5
   1f8bc:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   1f8c0:	ldr	r3, [r5, #220]	; 0xdc
   1f8c4:	add	r3, r3, #1
   1f8c8:	str	r3, [r5, #220]	; 0xdc
   1f8cc:	ldr	r1, [pc, #252]	; 1f9d0 <__flatcc_fb_gen_c_verifier@@Base+0x119c>
   1f8d0:	mov	r0, r5
   1f8d4:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   1f8d8:	ldr	r4, [r4, #20]
   1f8dc:	cmp	r4, #0
   1f8e0:	beq	1f938 <__flatcc_fb_gen_c_verifier@@Base+0x1104>
   1f8e4:	ldr	r7, [pc, #232]	; 1f9d4 <__flatcc_fb_gen_c_verifier@@Base+0x11a0>
   1f8e8:	ldr	r6, [pc, #232]	; 1f9d8 <__flatcc_fb_gen_c_verifier@@Base+0x11a4>
   1f8ec:	b	1f91c <__flatcc_fb_gen_c_verifier@@Base+0x10e8>
   1f8f0:	ldr	r1, [r4, #4]
   1f8f4:	ldr	r3, [r1, #4]
   1f8f8:	ldr	r2, [r4, #48]	; 0x30
   1f8fc:	ldr	r1, [r1]
   1f900:	str	r1, [sp]
   1f904:	mov	r1, r6
   1f908:	mov	r0, r5
   1f90c:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   1f910:	ldr	r4, [r4]
   1f914:	cmp	r4, #0
   1f918:	beq	1f938 <__flatcc_fb_gen_c_verifier@@Base+0x1104>
   1f91c:	ldrh	r3, [r4, #24]
   1f920:	cmp	r3, #0
   1f924:	bne	1f8f0 <__flatcc_fb_gen_c_verifier@@Base+0x10bc>
   1f928:	mov	r1, r7
   1f92c:	mov	r0, r5
   1f930:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   1f934:	b	1f910 <__flatcc_fb_gen_c_verifier@@Base+0x10dc>
   1f938:	ldr	r1, [pc, #156]	; 1f9dc <__flatcc_fb_gen_c_verifier@@Base+0x11a8>
   1f93c:	mov	r0, r5
   1f940:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   1f944:	ldr	r3, [r5, #220]	; 0xdc
   1f948:	add	r2, r3, #1
   1f94c:	str	r2, [r5, #220]	; 0xdc
   1f950:	cmp	r2, #0
   1f954:	beq	1f9a0 <__flatcc_fb_gen_c_verifier@@Base+0x116c>
   1f958:	str	r3, [r5, #220]	; 0xdc
   1f95c:	ldr	r1, [pc, #124]	; 1f9e0 <__flatcc_fb_gen_c_verifier@@Base+0x11ac>
   1f960:	mov	r0, r5
   1f964:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   1f968:	ldr	r3, [r5, #220]	; 0xdc
   1f96c:	cmp	r3, #0
   1f970:	beq	1f9b4 <__flatcc_fb_gen_c_verifier@@Base+0x1180>
   1f974:	sub	r3, r3, #1
   1f978:	str	r3, [r5, #220]	; 0xdc
   1f97c:	ldr	r1, [pc, #92]	; 1f9e0 <__flatcc_fb_gen_c_verifier@@Base+0x11ac>
   1f980:	mov	r0, r5
   1f984:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   1f988:	ldr	r1, [pc, #84]	; 1f9e4 <__flatcc_fb_gen_c_verifier@@Base+0x11b0>
   1f98c:	mov	r0, r5
   1f990:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   1f994:	mov	r0, #0
   1f998:	add	sp, sp, #452	; 0x1c4
   1f99c:	pop	{r4, r5, r6, r7, pc}
   1f9a0:	ldr	r3, [pc, #64]	; 1f9e8 <__flatcc_fb_gen_c_verifier@@Base+0x11b4>
   1f9a4:	ldr	r2, [pc, #64]	; 1f9ec <__flatcc_fb_gen_c_verifier@@Base+0x11b8>
   1f9a8:	ldr	r1, [pc, #64]	; 1f9f0 <__flatcc_fb_gen_c_verifier@@Base+0x11bc>
   1f9ac:	ldr	r0, [pc, #64]	; 1f9f4 <__flatcc_fb_gen_c_verifier@@Base+0x11c0>
   1f9b0:	bl	14148 <__assert_fail@plt>
   1f9b4:	ldr	r3, [pc, #44]	; 1f9e8 <__flatcc_fb_gen_c_verifier@@Base+0x11b4>
   1f9b8:	ldr	r2, [pc, #56]	; 1f9f8 <__flatcc_fb_gen_c_verifier@@Base+0x11c4>
   1f9bc:	ldr	r1, [pc, #44]	; 1f9f0 <__flatcc_fb_gen_c_verifier@@Base+0x11bc>
   1f9c0:	ldr	r0, [pc, #44]	; 1f9f4 <__flatcc_fb_gen_c_verifier@@Base+0x11c0>
   1f9c4:	bl	14148 <__assert_fail@plt>
   1f9c8:	andeq	pc, r4, r8, lsr #23
   1f9cc:	andeq	r2, r5, r0, asr #3
   1f9d0:	andeq	pc, r4, r8, asr #17
   1f9d4:	ldrdeq	pc, [r4], -ip
   1f9d8:	strdeq	pc, [r4], -ip
   1f9dc:	andeq	pc, r4, ip, lsl ip	; <UNPREDICTABLE>
   1f9e0:	andeq	pc, r4, r4, ror #11
   1f9e4:	muleq	r4, r0, r4
   1f9e8:	andeq	pc, r4, r4, lsr #7
   1f9ec:	andeq	r0, r0, lr, lsr #12
   1f9f0:	andeq	pc, r4, r0, lsl #11
   1f9f4:	ldrdeq	pc, [r4], -r8
   1f9f8:	andeq	r0, r0, pc, lsr #12
   1f9fc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1fa00:	sub	sp, sp, #516	; 0x204
   1fa04:	mov	r4, r0
   1fa08:	mov	r5, r1
   1fa0c:	mov	sl, r2
   1fa10:	str	r3, [sp, #16]
   1fa14:	mov	r2, #220	; 0xdc
   1fa18:	mov	r1, #0
   1fa1c:	add	r0, sp, #292	; 0x124
   1fa20:	bl	140ac <memset@plt>
   1fa24:	add	r1, sp, #88	; 0x58
   1fa28:	ldr	r0, [r5, #12]
   1fa2c:	bl	15e20 <__flatcc_fb_copy_scope@@Base>
   1fa30:	ldrh	r3, [r5, #8]
   1fa34:	str	r3, [sp, #24]
   1fa38:	cmp	r3, #1
   1fa3c:	movne	r3, #0
   1fa40:	moveq	r3, #1
   1fa44:	str	r3, [sp, #68]	; 0x44
   1fa48:	ldrh	r3, [sl, #24]
   1fa4c:	cmp	r3, #9
   1fa50:	beq	1fa98 <__flatcc_fb_gen_c_verifier@@Base+0x1264>
   1fa54:	cmp	r3, #15
   1fa58:	beq	1fa98 <__flatcc_fb_gen_c_verifier@@Base+0x1264>
   1fa5c:	cmp	r3, #7
   1fa60:	beq	1fa98 <__flatcc_fb_gen_c_verifier@@Base+0x1264>
   1fa64:	sub	r3, r3, #7
   1fa68:	cmp	r3, #8
   1fa6c:	ldrls	pc, [pc, r3, lsl #2]
   1fa70:	b	1fcf0 <__flatcc_fb_gen_c_verifier@@Base+0x14bc>
   1fa74:	andeq	pc, r1, r8, lsr ip	; <UNPREDICTABLE>
   1fa78:	andeq	pc, r1, ip, asr ip	; <UNPREDICTABLE>
   1fa7c:	andeq	r0, r2, r8, lsr #12
   1fa80:	andeq	r0, r2, r8, lsr #12
   1fa84:	strdeq	pc, [r1], -r0
   1fa88:	strdeq	pc, [r1], -r0
   1fa8c:	strdeq	pc, [r1], -r0
   1fa90:	andeq	pc, r1, r0, asr fp	; <UNPREDICTABLE>
   1fa94:	andeq	pc, r1, r0, asr fp	; <UNPREDICTABLE>
   1fa98:	sub	r3, r3, #7
   1fa9c:	cmp	r3, #8
   1faa0:	ldrls	pc, [pc, r3, lsl #2]
   1faa4:	b	1fc74 <__flatcc_fb_gen_c_verifier@@Base+0x1440>
   1faa8:	andeq	pc, r1, r4, ror fp	; <UNPREDICTABLE>
   1faac:	andeq	pc, r1, r4, asr #24
   1fab0:	andeq	r0, r2, r0, lsl #12
   1fab4:	andeq	r0, r2, r0, lsl #12
   1fab8:	andeq	pc, r1, r4, ror ip	; <UNPREDICTABLE>
   1fabc:	andeq	pc, r1, r4, ror ip	; <UNPREDICTABLE>
   1fac0:	andeq	pc, r1, r4, ror ip	; <UNPREDICTABLE>
   1fac4:	andeq	pc, r1, ip, asr #21
   1fac8:	andeq	pc, r1, ip, asr #21
   1facc:	mov	r3, #1
   1fad0:	str	r3, [sp, #64]	; 0x40
   1fad4:	ldr	r3, [sl, #16]
   1fad8:	add	r2, sp, #292	; 0x124
   1fadc:	mov	r1, r3
   1fae0:	ldr	r0, [r3, #12]
   1fae4:	bl	15edc <__flatcc_fb_scoped_symbol_name@@Base>
   1fae8:	ldr	r1, [sl, #16]
   1faec:	ldrh	r2, [r1, #8]
   1faf0:	cmp	r2, #1
   1faf4:	movne	fp, #0
   1faf8:	moveq	fp, #1
   1fafc:	clz	r3, r2
   1fb00:	lsr	r3, r3, #5
   1fb04:	str	r3, [sp, #28]
   1fb08:	ldr	r3, [sp, #16]
   1fb0c:	cmp	r3, #0
   1fb10:	cmpeq	r2, #4
   1fb14:	moveq	r3, #1
   1fb18:	movne	r3, #0
   1fb1c:	cmp	r2, #3
   1fb20:	beq	1fb5c <__flatcc_fb_gen_c_verifier@@Base+0x1328>
   1fb24:	mov	r2, #0
   1fb28:	str	r2, [sp, #60]	; 0x3c
   1fb2c:	mov	r5, r2
   1fb30:	str	r2, [sp, #44]	; 0x2c
   1fb34:	str	r5, [sp, #72]	; 0x48
   1fb38:	mov	r2, #0
   1fb3c:	str	r2, [sp, #52]	; 0x34
   1fb40:	str	r2, [sp, #56]	; 0x38
   1fb44:	str	r2, [sp, #48]	; 0x30
   1fb48:	mov	r9, r2
   1fb4c:	b	1fbfc <__flatcc_fb_gen_c_verifier@@Base+0x13c8>
   1fb50:	mov	r3, #0
   1fb54:	str	r3, [sp, #64]	; 0x40
   1fb58:	b	1fad4 <__flatcc_fb_gen_c_verifier@@Base+0x12a0>
   1fb5c:	ldr	r2, [r1, #40]	; 0x28
   1fb60:	str	r2, [sp, #60]	; 0x3c
   1fb64:	mov	r5, #1
   1fb68:	mov	r2, #0
   1fb6c:	str	r2, [sp, #44]	; 0x2c
   1fb70:	b	1fb34 <__flatcc_fb_gen_c_verifier@@Base+0x1300>
   1fb74:	mov	r3, #1
   1fb78:	str	r3, [sp, #64]	; 0x40
   1fb7c:	ldr	r3, [sl, #104]	; 0x68
   1fb80:	adds	r9, r3, #0
   1fb84:	movne	r9, #1
   1fb88:	ldrh	r3, [sl, #72]	; 0x48
   1fb8c:	and	r2, r3, #1024	; 0x400
   1fb90:	str	r2, [sp, #48]	; 0x30
   1fb94:	and	r3, r3, #2048	; 0x800
   1fb98:	str	r3, [sp, #56]	; 0x38
   1fb9c:	ldr	r3, [sl, #16]
   1fba0:	str	r3, [sp, #60]	; 0x3c
   1fba4:	mov	r5, #1
   1fba8:	ldr	r3, [sp, #48]	; 0x30
   1fbac:	ldr	r2, [sp, #56]	; 0x38
   1fbb0:	orrs	r3, r3, r2
   1fbb4:	str	r3, [sp, #52]	; 0x34
   1fbb8:	beq	1fcd4 <__flatcc_fb_gen_c_verifier@@Base+0x14a0>
   1fbbc:	ldr	r3, [sp, #64]	; 0x40
   1fbc0:	clz	r3, r3
   1fbc4:	lsr	r3, r3, #5
   1fbc8:	ldr	r2, [sp, #60]	; 0x3c
   1fbcc:	cmp	r2, #4
   1fbd0:	orrne	r3, r3, #1
   1fbd4:	cmp	r3, #0
   1fbd8:	bne	1fc98 <__flatcc_fb_gen_c_verifier@@Base+0x1464>
   1fbdc:	mov	r3, #0
   1fbe0:	mov	fp, r3
   1fbe4:	str	r3, [sp, #28]
   1fbe8:	str	r3, [sp, #72]	; 0x48
   1fbec:	str	r3, [sp, #44]	; 0x2c
   1fbf0:	mov	r9, r3
   1fbf4:	mov	r5, r3
   1fbf8:	str	r3, [sp, #64]	; 0x40
   1fbfc:	ldr	r2, [sp, #16]
   1fc00:	cmp	r2, #0
   1fc04:	beq	2064c <__flatcc_fb_gen_c_verifier@@Base+0x1e18>
   1fc08:	ldr	r2, [sp, #64]	; 0x40
   1fc0c:	cmp	r2, #0
   1fc10:	beq	206a8 <__flatcc_fb_gen_c_verifier@@Base+0x1e74>
   1fc14:	adds	r3, r3, #0
   1fc18:	movne	r3, #1
   1fc1c:	str	r3, [sp, #76]	; 0x4c
   1fc20:	mov	r3, #1
   1fc24:	str	r3, [sp, #80]	; 0x50
   1fc28:	mov	r5, #0
   1fc2c:	str	r5, [sp, #84]	; 0x54
   1fc30:	mov	r7, r5
   1fc34:	b	20690 <__flatcc_fb_gen_c_verifier@@Base+0x1e5c>
   1fc38:	mov	r3, #0
   1fc3c:	str	r3, [sp, #64]	; 0x40
   1fc40:	b	1fb7c <__flatcc_fb_gen_c_verifier@@Base+0x1348>
   1fc44:	mov	r3, #1
   1fc48:	str	r3, [sp, #64]	; 0x40
   1fc4c:	mov	r9, #0
   1fc50:	str	r9, [sp, #56]	; 0x38
   1fc54:	str	r9, [sp, #48]	; 0x30
   1fc58:	b	1fb9c <__flatcc_fb_gen_c_verifier@@Base+0x1368>
   1fc5c:	mov	r3, #0
   1fc60:	str	r3, [sp, #64]	; 0x40
   1fc64:	mov	r9, r3
   1fc68:	str	r3, [sp, #56]	; 0x38
   1fc6c:	str	r3, [sp, #48]	; 0x30
   1fc70:	b	1fb9c <__flatcc_fb_gen_c_verifier@@Base+0x1368>
   1fc74:	mov	r3, #1
   1fc78:	str	r3, [sp, #64]	; 0x40
   1fc7c:	mov	r3, #0
   1fc80:	str	r3, [sp, #60]	; 0x3c
   1fc84:	mov	r9, r3
   1fc88:	str	r3, [sp, #56]	; 0x38
   1fc8c:	str	r3, [sp, #48]	; 0x30
   1fc90:	mov	r5, r3
   1fc94:	b	1fba8 <__flatcc_fb_gen_c_verifier@@Base+0x1374>
   1fc98:	ldr	r5, [pc, #2804]	; 20794 <__flatcc_fb_gen_c_verifier@@Base+0x1f60>
   1fc9c:	ldr	r4, [pc, #2804]	; 20798 <__flatcc_fb_gen_c_verifier@@Base+0x1f64>
   1fca0:	ldr	r3, [pc, #2804]	; 2079c <__flatcc_fb_gen_c_verifier@@Base+0x1f68>
   1fca4:	str	r3, [sp]
   1fca8:	mov	r3, r5
   1fcac:	mov	r2, r4
   1fcb0:	ldr	r1, [pc, #2792]	; 207a0 <__flatcc_fb_gen_c_verifier@@Base+0x1f6c>
   1fcb4:	ldr	r0, [pc, #2792]	; 207a4 <__flatcc_fb_gen_c_verifier@@Base+0x1f70>
   1fcb8:	ldr	r0, [r0]
   1fcbc:	bl	14094 <fprintf@plt>
   1fcc0:	ldr	r3, [pc, #2784]	; 207a8 <__flatcc_fb_gen_c_verifier@@Base+0x1f74>
   1fcc4:	mov	r2, r5
   1fcc8:	mov	r1, r4
   1fccc:	ldr	r0, [pc, #2776]	; 207ac <__flatcc_fb_gen_c_verifier@@Base+0x1f78>
   1fcd0:	bl	14148 <__assert_fail@plt>
   1fcd4:	ldr	r2, [sp, #52]	; 0x34
   1fcd8:	mov	r3, r2
   1fcdc:	mov	fp, r2
   1fce0:	str	r2, [sp, #28]
   1fce4:	str	r2, [sp, #72]	; 0x48
   1fce8:	str	r2, [sp, #44]	; 0x2c
   1fcec:	b	1fbfc <__flatcc_fb_gen_c_verifier@@Base+0x13c8>
   1fcf0:	mov	r3, #0
   1fcf4:	str	r3, [sp, #52]	; 0x34
   1fcf8:	str	r3, [sp, #60]	; 0x3c
   1fcfc:	str	r3, [sp, #56]	; 0x38
   1fd00:	str	r3, [sp, #48]	; 0x30
   1fd04:	mov	fp, r3
   1fd08:	str	r3, [sp, #28]
   1fd0c:	str	r3, [sp, #72]	; 0x48
   1fd10:	str	r3, [sp, #44]	; 0x2c
   1fd14:	mov	r9, r3
   1fd18:	mov	r5, r3
   1fd1c:	str	r3, [sp, #64]	; 0x40
   1fd20:	b	1fbfc <__flatcc_fb_gen_c_verifier@@Base+0x13c8>
   1fd24:	ldr	r3, [sp, #16]
   1fd28:	str	r3, [sp, #84]	; 0x54
   1fd2c:	ldr	r7, [sp, #64]	; 0x40
   1fd30:	str	r3, [sp, #64]	; 0x40
   1fd34:	b	20690 <__flatcc_fb_gen_c_verifier@@Base+0x1e5c>
   1fd38:	ldr	r1, [pc, #2672]	; 207b0 <__flatcc_fb_gen_c_verifier@@Base+0x1f7c>
   1fd3c:	mov	r0, r4
   1fd40:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   1fd44:	ldr	r3, [r4, #220]	; 0xdc
   1fd48:	add	r3, r3, #1
   1fd4c:	str	r3, [r4, #220]	; 0xdc
   1fd50:	b	20698 <__flatcc_fb_gen_c_verifier@@Base+0x1e64>
   1fd54:	ldr	r3, [r4, #220]	; 0xdc
   1fd58:	cmp	r3, #0
   1fd5c:	beq	1fe6c <__flatcc_fb_gen_c_verifier@@Base+0x1638>
   1fd60:	sub	r3, r3, #1
   1fd64:	str	r3, [r4, #220]	; 0xdc
   1fd68:	ldr	r1, [pc, #2628]	; 207b4 <__flatcc_fb_gen_c_verifier@@Base+0x1f80>
   1fd6c:	mov	r0, r4
   1fd70:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   1fd74:	ldr	r3, [r4, #220]	; 0xdc
   1fd78:	add	r3, r3, #1
   1fd7c:	str	r3, [r4, #220]	; 0xdc
   1fd80:	ldr	r3, [sl, #104]	; 0x68
   1fd84:	add	r2, sp, #292	; 0x124
   1fd88:	mov	r1, r3
   1fd8c:	ldr	r0, [r3, #12]
   1fd90:	bl	15edc <__flatcc_fb_scoped_symbol_name@@Base>
   1fd94:	ldr	r3, [sl, #104]	; 0x68
   1fd98:	ldrh	r3, [r3, #8]
   1fd9c:	cmp	r3, #0
   1fda0:	movne	fp, #1
   1fda4:	ldr	r2, [sp, #28]
   1fda8:	cmp	r3, #0
   1fdac:	moveq	r2, #1
   1fdb0:	str	r2, [sp, #28]
   1fdb4:	ldr	r1, [pc, #2556]	; 207b8 <__flatcc_fb_gen_c_verifier@@Base+0x1f84>
   1fdb8:	mov	r0, r4
   1fdbc:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   1fdc0:	ldr	r3, [sp, #16]
   1fdc4:	orr	r8, fp, r3
   1fdc8:	mov	r7, #0
   1fdcc:	mov	r5, #0
   1fdd0:	mov	r6, r5
   1fdd4:	ldr	r3, [sp, #24]
   1fdd8:	cmp	r3, #1
   1fddc:	beq	20034 <__flatcc_fb_gen_c_verifier@@Base+0x1800>
   1fde0:	adds	r3, fp, #0
   1fde4:	movne	r3, #1
   1fde8:	cmp	r7, #0
   1fdec:	movne	r3, #0
   1fdf0:	cmp	r3, #0
   1fdf4:	bne	20048 <__flatcc_fb_gen_c_verifier@@Base+0x1814>
   1fdf8:	cmp	r5, #0
   1fdfc:	bne	2006c <__flatcc_fb_gen_c_verifier@@Base+0x1838>
   1fe00:	cmp	fp, #0
   1fe04:	bne	2023c <__flatcc_fb_gen_c_verifier@@Base+0x1a08>
   1fe08:	ldr	r3, [sp, #44]	; 0x2c
   1fe0c:	cmp	r3, #0
   1fe10:	bne	2031c <__flatcc_fb_gen_c_verifier@@Base+0x1ae8>
   1fe14:	ldr	r3, [sp, #52]	; 0x34
   1fe18:	cmp	r3, #0
   1fe1c:	bne	2032c <__flatcc_fb_gen_c_verifier@@Base+0x1af8>
   1fe20:	ldr	r3, [sp, #28]
   1fe24:	cmp	r3, #0
   1fe28:	bne	20348 <__flatcc_fb_gen_c_verifier@@Base+0x1b14>
   1fe2c:	ldr	r3, [sp, #76]	; 0x4c
   1fe30:	cmp	r3, #0
   1fe34:	beq	2035c <__flatcc_fb_gen_c_verifier@@Base+0x1b28>
   1fe38:	ldr	r3, [sp, #84]	; 0x54
   1fe3c:	cmp	r3, #0
   1fe40:	add	r3, sp, #292	; 0x124
   1fe44:	str	r3, [sp, #8]
   1fe48:	ldrd	r2, [sl, #96]	; 0x60
   1fe4c:	strd	r2, [sp]
   1fe50:	ldr	r2, [sl, #112]	; 0x70
   1fe54:	mov	r3, #0
   1fe58:	ldrne	r1, [pc, #2396]	; 207bc <__flatcc_fb_gen_c_verifier@@Base+0x1f88>
   1fe5c:	ldreq	r1, [pc, #2396]	; 207c0 <__flatcc_fb_gen_c_verifier@@Base+0x1f8c>
   1fe60:	mov	r0, r4
   1fe64:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   1fe68:	b	2024c <__flatcc_fb_gen_c_verifier@@Base+0x1a18>
   1fe6c:	ldr	r3, [pc, #2356]	; 207a8 <__flatcc_fb_gen_c_verifier@@Base+0x1f74>
   1fe70:	ldr	r2, [pc, #2380]	; 207c4 <__flatcc_fb_gen_c_verifier@@Base+0x1f90>
   1fe74:	ldr	r1, [pc, #2332]	; 20798 <__flatcc_fb_gen_c_verifier@@Base+0x1f64>
   1fe78:	ldr	r0, [pc, #2376]	; 207c8 <__flatcc_fb_gen_c_verifier@@Base+0x1f94>
   1fe7c:	bl	14148 <__assert_fail@plt>
   1fe80:	ldr	r3, [sp, #60]	; 0x3c
   1fe84:	sub	r3, r3, #1
   1fe88:	cmp	r3, #10
   1fe8c:	ldrls	pc, [pc, r3, lsl #2]
   1fe90:	b	1fec0 <__flatcc_fb_gen_c_verifier@@Base+0x168c>
   1fe94:	ldrdeq	r0, [r2], -r0	; <UNPREDICTABLE>
   1fe98:	andeq	r0, r2, r4, ror #13
   1fe9c:	strdeq	pc, [r1], -r8
   1fea0:	andeq	pc, r1, ip, lsl #30
   1fea4:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   1fea8:	andeq	pc, r1, r0, lsr #30
   1feac:	andeq	pc, r1, r4, lsr pc	; <UNPREDICTABLE>
   1feb0:	andeq	pc, r1, r8, asr #30
   1feb4:	andeq	pc, r1, ip, asr pc	; <UNPREDICTABLE>
   1feb8:	andeq	pc, r1, r0, lsl #31
   1febc:	andeq	pc, r1, r0, ror pc	; <UNPREDICTABLE>
   1fec0:	ldr	r4, [pc, #2308]	; 207cc <__flatcc_fb_gen_c_verifier@@Base+0x1f98>
   1fec4:	ldr	r3, [pc, #2264]	; 207a4 <__flatcc_fb_gen_c_verifier@@Base+0x1f70>
   1fec8:	ldr	r0, [r3]
   1fecc:	ldr	r3, [pc, #2300]	; 207d0 <__flatcc_fb_gen_c_verifier@@Base+0x1f9c>
   1fed0:	str	r3, [sp]
   1fed4:	mov	r3, #96	; 0x60
   1fed8:	mov	r2, r4
   1fedc:	ldr	r1, [pc, #2236]	; 207a0 <__flatcc_fb_gen_c_verifier@@Base+0x1f6c>
   1fee0:	bl	14094 <fprintf@plt>
   1fee4:	ldr	r3, [pc, #2280]	; 207d4 <__flatcc_fb_gen_c_verifier@@Base+0x1fa0>
   1fee8:	mov	r2, #96	; 0x60
   1feec:	mov	r1, r4
   1fef0:	ldr	r0, [pc, #2228]	; 207ac <__flatcc_fb_gen_c_verifier@@Base+0x1f78>
   1fef4:	bl	14148 <__assert_fail@plt>
   1fef8:	ldr	r3, [pc, #2264]	; 207d8 <__flatcc_fb_gen_c_verifier@@Base+0x1fa4>
   1fefc:	str	r3, [sp, #40]	; 0x28
   1ff00:	ldr	r3, [pc, #2260]	; 207dc <__flatcc_fb_gen_c_verifier@@Base+0x1fa8>
   1ff04:	str	r3, [sp, #20]
   1ff08:	b	206f4 <__flatcc_fb_gen_c_verifier@@Base+0x1ec0>
   1ff0c:	ldr	r3, [pc, #2252]	; 207e0 <__flatcc_fb_gen_c_verifier@@Base+0x1fac>
   1ff10:	str	r3, [sp, #40]	; 0x28
   1ff14:	ldr	r3, [pc, #2248]	; 207e4 <__flatcc_fb_gen_c_verifier@@Base+0x1fb0>
   1ff18:	str	r3, [sp, #20]
   1ff1c:	b	206f4 <__flatcc_fb_gen_c_verifier@@Base+0x1ec0>
   1ff20:	ldr	r3, [pc, #2240]	; 207e8 <__flatcc_fb_gen_c_verifier@@Base+0x1fb4>
   1ff24:	str	r3, [sp, #40]	; 0x28
   1ff28:	ldr	r3, [pc, #2236]	; 207ec <__flatcc_fb_gen_c_verifier@@Base+0x1fb8>
   1ff2c:	str	r3, [sp, #20]
   1ff30:	b	206f4 <__flatcc_fb_gen_c_verifier@@Base+0x1ec0>
   1ff34:	ldr	r3, [pc, #2228]	; 207f0 <__flatcc_fb_gen_c_verifier@@Base+0x1fbc>
   1ff38:	str	r3, [sp, #40]	; 0x28
   1ff3c:	ldr	r3, [pc, #2224]	; 207f4 <__flatcc_fb_gen_c_verifier@@Base+0x1fc0>
   1ff40:	str	r3, [sp, #20]
   1ff44:	b	206f4 <__flatcc_fb_gen_c_verifier@@Base+0x1ec0>
   1ff48:	ldr	r3, [pc, #2216]	; 207f8 <__flatcc_fb_gen_c_verifier@@Base+0x1fc4>
   1ff4c:	str	r3, [sp, #40]	; 0x28
   1ff50:	ldr	r3, [pc, #2212]	; 207fc <__flatcc_fb_gen_c_verifier@@Base+0x1fc8>
   1ff54:	str	r3, [sp, #20]
   1ff58:	b	206f4 <__flatcc_fb_gen_c_verifier@@Base+0x1ec0>
   1ff5c:	ldr	r3, [pc, #2204]	; 20800 <__flatcc_fb_gen_c_verifier@@Base+0x1fcc>
   1ff60:	str	r3, [sp, #40]	; 0x28
   1ff64:	ldr	r3, [pc, #2200]	; 20804 <__flatcc_fb_gen_c_verifier@@Base+0x1fd0>
   1ff68:	str	r3, [sp, #20]
   1ff6c:	b	206f4 <__flatcc_fb_gen_c_verifier@@Base+0x1ec0>
   1ff70:	ldr	r3, [pc, #2192]	; 20808 <__flatcc_fb_gen_c_verifier@@Base+0x1fd4>
   1ff74:	str	r3, [sp, #40]	; 0x28
   1ff78:	str	r3, [sp, #20]
   1ff7c:	b	206f4 <__flatcc_fb_gen_c_verifier@@Base+0x1ec0>
   1ff80:	ldr	r3, [pc, #2180]	; 2080c <__flatcc_fb_gen_c_verifier@@Base+0x1fd8>
   1ff84:	str	r3, [sp, #40]	; 0x28
   1ff88:	str	r3, [sp, #20]
   1ff8c:	b	206f4 <__flatcc_fb_gen_c_verifier@@Base+0x1ec0>
   1ff90:	cmp	r7, #0
   1ff94:	beq	1ffc8 <__flatcc_fb_gen_c_verifier@@Base+0x1794>
   1ff98:	mov	r5, r7
   1ff9c:	ldr	r3, [pc, #2108]	; 207e0 <__flatcc_fb_gen_c_verifier@@Base+0x1fac>
   1ffa0:	str	r3, [sp, #40]	; 0x28
   1ffa4:	ldr	r3, [pc, #2148]	; 20810 <__flatcc_fb_gen_c_verifier@@Base+0x1fdc>
   1ffa8:	str	r3, [sp, #20]
   1ffac:	b	20284 <__flatcc_fb_gen_c_verifier@@Base+0x1a50>
   1ffb0:	mov	r5, r7
   1ffb4:	b	20284 <__flatcc_fb_gen_c_verifier@@Base+0x1a50>
   1ffb8:	ldr	r1, [pc, #2132]	; 20814 <__flatcc_fb_gen_c_verifier@@Base+0x1fe0>
   1ffbc:	mov	r0, r4
   1ffc0:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   1ffc4:	b	202cc <__flatcc_fb_gen_c_verifier@@Base+0x1a98>
   1ffc8:	ldr	r3, [pc, #2064]	; 207e0 <__flatcc_fb_gen_c_verifier@@Base+0x1fac>
   1ffcc:	str	r3, [sp, #40]	; 0x28
   1ffd0:	ldr	r3, [pc, #2104]	; 20810 <__flatcc_fb_gen_c_verifier@@Base+0x1fdc>
   1ffd4:	str	r3, [sp, #20]
   1ffd8:	b	206fc <__flatcc_fb_gen_c_verifier@@Base+0x1ec8>
   1ffdc:	ldr	r2, [r4, #208]	; 0xd0
   1ffe0:	add	r3, sp, #88	; 0x58
   1ffe4:	ldr	r2, [r2, #160]	; 0xa0
   1ffe8:	ldr	r1, [pc, #2088]	; 20818 <__flatcc_fb_gen_c_verifier@@Base+0x1fe4>
   1ffec:	mov	r0, r4
   1fff0:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   1fff4:	ldr	r3, [r4, #208]	; 0xd0
   1fff8:	ldr	r2, [r3, #160]	; 0xa0
   1fffc:	ldr	r1, [pc, #2072]	; 2081c <__flatcc_fb_gen_c_verifier@@Base+0x1fe8>
   20000:	mov	r0, r4
   20004:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   20008:	b	2076c <__flatcc_fb_gen_c_verifier@@Base+0x1f38>
   2000c:	ldr	r3, [pc, #1940]	; 207a8 <__flatcc_fb_gen_c_verifier@@Base+0x1f74>
   20010:	ldr	r2, [pc, #2056]	; 20820 <__flatcc_fb_gen_c_verifier@@Base+0x1fec>
   20014:	ldr	r1, [pc, #1916]	; 20798 <__flatcc_fb_gen_c_verifier@@Base+0x1f64>
   20018:	ldr	r0, [pc, #1960]	; 207c8 <__flatcc_fb_gen_c_verifier@@Base+0x1f94>
   2001c:	bl	14148 <__assert_fail@plt>
   20020:	ldr	r3, [pc, #1920]	; 207a8 <__flatcc_fb_gen_c_verifier@@Base+0x1f74>
   20024:	ldr	r2, [pc, #2036]	; 20820 <__flatcc_fb_gen_c_verifier@@Base+0x1fec>
   20028:	ldr	r1, [pc, #1896]	; 20798 <__flatcc_fb_gen_c_verifier@@Base+0x1f64>
   2002c:	ldr	r0, [pc, #1940]	; 207c8 <__flatcc_fb_gen_c_verifier@@Base+0x1f94>
   20030:	bl	14148 <__assert_fail@plt>
   20034:	ldrd	r2, [sl, #80]	; 0x50
   20038:	ldr	r1, [pc, #2020]	; 20824 <__flatcc_fb_gen_c_verifier@@Base+0x1ff0>
   2003c:	mov	r0, r4
   20040:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   20044:	b	1fdf8 <__flatcc_fb_gen_c_verifier@@Base+0x15c4>
   20048:	ldrh	r3, [sl, #74]	; 0x4a
   2004c:	str	r3, [sp, #8]
   20050:	ldrd	r2, [sl, #88]	; 0x58
   20054:	strd	r2, [sp]
   20058:	ldrd	r2, [sl, #96]	; 0x60
   2005c:	ldr	r1, [pc, #1988]	; 20828 <__flatcc_fb_gen_c_verifier@@Base+0x1ff4>
   20060:	mov	r0, r4
   20064:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   20068:	b	1fdf8 <__flatcc_fb_gen_c_verifier@@Base+0x15c4>
   2006c:	ldr	r2, [sp, #20]
   20070:	ldr	r1, [pc, #1972]	; 2082c <__flatcc_fb_gen_c_verifier@@Base+0x1ff8>
   20074:	mov	r0, r4
   20078:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   2007c:	ldr	r1, [pc, #1964]	; 20830 <__flatcc_fb_gen_c_verifier@@Base+0x1ffc>
   20080:	mov	r0, r4
   20084:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   20088:	ldr	r3, [r4, #220]	; 0xdc
   2008c:	add	r3, r3, #1
   20090:	str	r3, [r4, #220]	; 0xdc
   20094:	ldr	r2, [sp, #20]
   20098:	ldr	r1, [pc, #1940]	; 20834 <__flatcc_fb_gen_c_verifier@@Base+0x2000>
   2009c:	mov	r0, r4
   200a0:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   200a4:	ldr	r1, [pc, #1932]	; 20838 <__flatcc_fb_gen_c_verifier@@Base+0x2004>
   200a8:	mov	r0, r4
   200ac:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   200b0:	ldr	r3, [r4, #220]	; 0xdc
   200b4:	cmp	r3, #0
   200b8:	beq	20118 <__flatcc_fb_gen_c_verifier@@Base+0x18e4>
   200bc:	sub	r3, r3, #1
   200c0:	str	r3, [r4, #220]	; 0xdc
   200c4:	ldr	r1, [pc, #1904]	; 2083c <__flatcc_fb_gen_c_verifier@@Base+0x2008>
   200c8:	mov	r0, r4
   200cc:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   200d0:	ldr	r3, [sp, #68]	; 0x44
   200d4:	orr	r3, r3, r7
   200d8:	mov	r2, r3
   200dc:	str	r3, [sp, #32]
   200e0:	ldr	r3, [sp, #48]	; 0x30
   200e4:	ldr	r1, [sp, #56]	; 0x38
   200e8:	orr	r3, r3, r1
   200ec:	orrs	r3, r3, r2
   200f0:	bne	20168 <__flatcc_fb_gen_c_verifier@@Base+0x1934>
   200f4:	ldrh	r3, [sl, #56]	; 0x38
   200f8:	sub	r3, r3, #3
   200fc:	cmp	r3, #3
   20100:	ldrls	pc, [pc, r3, lsl #2]
   20104:	b	201ec <__flatcc_fb_gen_c_verifier@@Base+0x19b8>
   20108:	andeq	r0, r2, ip, asr #3
   2010c:	andeq	r0, r2, ip, lsr #3
   20110:	andeq	r0, r2, ip, lsr #2
   20114:	andeq	r0, r2, ip, lsr #2
   20118:	ldr	r3, [pc, #1672]	; 207a8 <__flatcc_fb_gen_c_verifier@@Base+0x1f74>
   2011c:	ldr	r2, [pc, #1820]	; 20840 <__flatcc_fb_gen_c_verifier@@Base+0x200c>
   20120:	ldr	r1, [pc, #1648]	; 20798 <__flatcc_fb_gen_c_verifier@@Base+0x1f64>
   20124:	ldr	r0, [pc, #1692]	; 207c8 <__flatcc_fb_gen_c_verifier@@Base+0x1f94>
   20128:	bl	14148 <__assert_fail@plt>
   2012c:	ldrd	r2, [sl, #48]	; 0x30
   20130:	ldr	r1, [pc, #1804]	; 20844 <__flatcc_fb_gen_c_verifier@@Base+0x2010>
   20134:	mov	r0, r4
   20138:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   2013c:	ldr	r3, [r4, #220]	; 0xdc
   20140:	add	r3, r3, #1
   20144:	str	r3, [r4, #220]	; 0xdc
   20148:	ldrsh	r3, [sl, #74]	; 0x4a
   2014c:	str	r3, [sp, #8]
   20150:	ldrd	r2, [sl, #88]	; 0x58
   20154:	strd	r2, [sp]
   20158:	ldrd	r2, [sl, #96]	; 0x60
   2015c:	ldr	r1, [pc, #1764]	; 20848 <__flatcc_fb_gen_c_verifier@@Base+0x2014>
   20160:	mov	r0, r4
   20164:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   20168:	ldr	r3, [sp, #20]
   2016c:	mov	r2, r4
   20170:	ldr	r1, [pc, #1748]	; 2084c <__flatcc_fb_gen_c_verifier@@Base+0x2018>
   20174:	mov	r0, r4
   20178:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   2017c:	ldr	r3, [sp, #32]
   20180:	cmp	r3, #0
   20184:	bne	2024c <__flatcc_fb_gen_c_verifier@@Base+0x1a18>
   20188:	ldr	r3, [r4, #220]	; 0xdc
   2018c:	cmp	r3, #0
   20190:	beq	20228 <__flatcc_fb_gen_c_verifier@@Base+0x19f4>
   20194:	sub	r3, r3, #1
   20198:	str	r3, [r4, #220]	; 0xdc
   2019c:	ldr	r1, [pc, #1688]	; 2083c <__flatcc_fb_gen_c_verifier@@Base+0x2008>
   201a0:	mov	r0, r4
   201a4:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   201a8:	b	2024c <__flatcc_fb_gen_c_verifier@@Base+0x1a18>
   201ac:	ldrd	r2, [sl, #48]	; 0x30
   201b0:	ldr	r1, [pc, #1688]	; 20850 <__flatcc_fb_gen_c_verifier@@Base+0x201c>
   201b4:	mov	r0, r4
   201b8:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   201bc:	ldr	r3, [r4, #220]	; 0xdc
   201c0:	add	r3, r3, #1
   201c4:	str	r3, [r4, #220]	; 0xdc
   201c8:	b	20148 <__flatcc_fb_gen_c_verifier@@Base+0x1914>
   201cc:	ldrd	r2, [sl, #48]	; 0x30
   201d0:	ldr	r1, [pc, #1660]	; 20854 <__flatcc_fb_gen_c_verifier@@Base+0x2020>
   201d4:	mov	r0, r4
   201d8:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   201dc:	ldr	r3, [r4, #220]	; 0xdc
   201e0:	add	r3, r3, #1
   201e4:	str	r3, [r4, #220]	; 0xdc
   201e8:	b	20148 <__flatcc_fb_gen_c_verifier@@Base+0x1914>
   201ec:	ldr	r5, [pc, #1636]	; 20858 <__flatcc_fb_gen_c_verifier@@Base+0x2024>
   201f0:	ldr	r4, [pc, #1440]	; 20798 <__flatcc_fb_gen_c_verifier@@Base+0x1f64>
   201f4:	ldr	r3, [pc, #1448]	; 207a4 <__flatcc_fb_gen_c_verifier@@Base+0x1f70>
   201f8:	ldr	r0, [r3]
   201fc:	ldr	r3, [pc, #1624]	; 2085c <__flatcc_fb_gen_c_verifier@@Base+0x2028>
   20200:	str	r3, [sp]
   20204:	mov	r3, r5
   20208:	mov	r2, r4
   2020c:	ldr	r1, [pc, #1420]	; 207a0 <__flatcc_fb_gen_c_verifier@@Base+0x1f6c>
   20210:	bl	14094 <fprintf@plt>
   20214:	ldr	r3, [pc, #1420]	; 207a8 <__flatcc_fb_gen_c_verifier@@Base+0x1f74>
   20218:	mov	r2, r5
   2021c:	mov	r1, r4
   20220:	ldr	r0, [pc, #1412]	; 207ac <__flatcc_fb_gen_c_verifier@@Base+0x1f78>
   20224:	bl	14148 <__assert_fail@plt>
   20228:	ldr	r3, [pc, #1400]	; 207a8 <__flatcc_fb_gen_c_verifier@@Base+0x1f74>
   2022c:	ldr	r2, [pc, #1580]	; 20860 <__flatcc_fb_gen_c_verifier@@Base+0x202c>
   20230:	ldr	r1, [pc, #1376]	; 20798 <__flatcc_fb_gen_c_verifier@@Base+0x1f64>
   20234:	ldr	r0, [pc, #1420]	; 207c8 <__flatcc_fb_gen_c_verifier@@Base+0x1f94>
   20238:	bl	14148 <__assert_fail@plt>
   2023c:	add	r2, sp, #292	; 0x124
   20240:	ldr	r1, [pc, #1564]	; 20864 <__flatcc_fb_gen_c_verifier@@Base+0x2030>
   20244:	mov	r0, r4
   20248:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   2024c:	cmp	r6, #0
   20250:	bne	20370 <__flatcc_fb_gen_c_verifier@@Base+0x1b3c>
   20254:	cmp	r9, #1
   20258:	bne	20554 <__flatcc_fb_gen_c_verifier@@Base+0x1d20>
   2025c:	mov	r9, #2
   20260:	cmp	r9, #2
   20264:	beq	1fd54 <__flatcc_fb_gen_c_verifier@@Base+0x1520>
   20268:	orr	r3, r5, fp
   2026c:	ldr	r2, [sp, #16]
   20270:	orr	r8, r3, r2
   20274:	cmp	r5, #0
   20278:	bne	1fe80 <__flatcc_fb_gen_c_verifier@@Base+0x164c>
   2027c:	cmp	r7, #0
   20280:	beq	1fdcc <__flatcc_fb_gen_c_verifier@@Base+0x1598>
   20284:	cmp	r8, #0
   20288:	beq	1ffb8 <__flatcc_fb_gen_c_verifier@@Base+0x1784>
   2028c:	ldrd	r2, [sl, #88]	; 0x58
   20290:	strd	r2, [sp, #32]
   20294:	ldrsh	r6, [sl, #74]	; 0x4a
   20298:	orrs	r1, r2, r3
   2029c:	mvneq	r0, #0
   202a0:	moveq	r1, #0
   202a4:	beq	202b4 <__flatcc_fb_gen_c_verifier@@Base+0x1a80>
   202a8:	mvn	r0, #0
   202ac:	mov	r1, #0
   202b0:	bl	3ad64 <fb_value_set_visit@@Base+0x614>
   202b4:	strd	r0, [sp, #8]
   202b8:	str	r6, [sp]
   202bc:	ldrd	r2, [sp, #32]
   202c0:	ldr	r1, [pc, #1440]	; 20868 <__flatcc_fb_gen_c_verifier@@Base+0x2034>
   202c4:	mov	r0, r4
   202c8:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   202cc:	ldr	r1, [pc, #1432]	; 2086c <__flatcc_fb_gen_c_verifier@@Base+0x2038>
   202d0:	mov	r0, r4
   202d4:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   202d8:	ldr	r1, [pc, #1424]	; 20870 <__flatcc_fb_gen_c_verifier@@Base+0x203c>
   202dc:	mov	r0, r4
   202e0:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   202e4:	ldr	r3, [r4, #220]	; 0xdc
   202e8:	add	r3, r3, #1
   202ec:	str	r3, [r4, #220]	; 0xdc
   202f0:	cmp	r5, #0
   202f4:	bne	206fc <__flatcc_fb_gen_c_verifier@@Base+0x1ec8>
   202f8:	adds	r6, r7, #0
   202fc:	movne	r6, #1
   20300:	cmp	r8, #0
   20304:	cmpne	r7, #0
   20308:	beq	1fdd4 <__flatcc_fb_gen_c_verifier@@Base+0x15a0>
   2030c:	ldr	r1, [pc, #1376]	; 20874 <__flatcc_fb_gen_c_verifier@@Base+0x2040>
   20310:	mov	r0, r4
   20314:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   20318:	b	1fdd4 <__flatcc_fb_gen_c_verifier@@Base+0x15a0>
   2031c:	ldr	r1, [pc, #1364]	; 20878 <__flatcc_fb_gen_c_verifier@@Base+0x2044>
   20320:	mov	r0, r4
   20324:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   20328:	b	2024c <__flatcc_fb_gen_c_verifier@@Base+0x1a18>
   2032c:	ldr	r3, [sp, #48]	; 0x30
   20330:	clz	r2, r3
   20334:	lsr	r2, r2, #5
   20338:	ldr	r1, [pc, #1340]	; 2087c <__flatcc_fb_gen_c_verifier@@Base+0x2048>
   2033c:	mov	r0, r4
   20340:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   20344:	b	2024c <__flatcc_fb_gen_c_verifier@@Base+0x1a18>
   20348:	add	r2, sp, #292	; 0x124
   2034c:	ldr	r1, [pc, #1324]	; 20880 <__flatcc_fb_gen_c_verifier@@Base+0x204c>
   20350:	mov	r0, r4
   20354:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   20358:	b	2024c <__flatcc_fb_gen_c_verifier@@Base+0x1a18>
   2035c:	ldr	r3, [sp, #80]	; 0x50
   20360:	cmp	r3, #0
   20364:	bne	203b4 <__flatcc_fb_gen_c_verifier@@Base+0x1b80>
   20368:	cmp	r7, #0
   2036c:	beq	204b4 <__flatcc_fb_gen_c_verifier@@Base+0x1c80>
   20370:	cmp	r8, #0
   20374:	beq	204ec <__flatcc_fb_gen_c_verifier@@Base+0x1cb8>
   20378:	ldr	r1, [pc, #1284]	; 20884 <__flatcc_fb_gen_c_verifier@@Base+0x2050>
   2037c:	mov	r0, r4
   20380:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   20384:	ldr	r3, [r4, #220]	; 0xdc
   20388:	cmp	r3, #0
   2038c:	beq	20540 <__flatcc_fb_gen_c_verifier@@Base+0x1d0c>
   20390:	sub	r3, r3, #1
   20394:	str	r3, [r4, #220]	; 0xdc
   20398:	ldr	r1, [pc, #1180]	; 2083c <__flatcc_fb_gen_c_verifier@@Base+0x2008>
   2039c:	mov	r0, r4
   203a0:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   203a4:	ldr	r1, [pc, #1244]	; 20888 <__flatcc_fb_gen_c_verifier@@Base+0x2054>
   203a8:	mov	r0, r4
   203ac:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   203b0:	b	20254 <__flatcc_fb_gen_c_verifier@@Base+0x1a20>
   203b4:	ldr	r1, [pc, #1232]	; 2088c <__flatcc_fb_gen_c_verifier@@Base+0x2058>
   203b8:	mov	r0, r4
   203bc:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   203c0:	ldr	r3, [r4, #220]	; 0xdc
   203c4:	add	r3, r3, #2
   203c8:	str	r3, [r4, #220]	; 0xdc
   203cc:	add	r2, sp, #292	; 0x124
   203d0:	ldr	r1, [pc, #1208]	; 20890 <__flatcc_fb_gen_c_verifier@@Base+0x205c>
   203d4:	mov	r0, r4
   203d8:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   203dc:	ldr	r2, [r4, #208]	; 0xd0
   203e0:	add	r3, sp, #88	; 0x58
   203e4:	ldr	r2, [r2, #160]	; 0xa0
   203e8:	ldr	r1, [pc, #1064]	; 20818 <__flatcc_fb_gen_c_verifier@@Base+0x1fe4>
   203ec:	mov	r0, r4
   203f0:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   203f4:	ldr	r3, [r4, #208]	; 0xd0
   203f8:	ldr	r2, [r3, #160]	; 0xa0
   203fc:	ldr	r1, [pc, #1048]	; 2081c <__flatcc_fb_gen_c_verifier@@Base+0x1fe8>
   20400:	mov	r0, r4
   20404:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   20408:	ldr	r3, [r4, #220]	; 0xdc
   2040c:	cmp	r3, #0
   20410:	beq	20464 <__flatcc_fb_gen_c_verifier@@Base+0x1c30>
   20414:	sub	r2, r3, #1
   20418:	str	r2, [r4, #220]	; 0xdc
   2041c:	cmp	r2, #0
   20420:	beq	20478 <__flatcc_fb_gen_c_verifier@@Base+0x1c44>
   20424:	sub	r3, r3, #2
   20428:	str	r3, [r4, #220]	; 0xdc
   2042c:	ldr	r3, [sp, #64]	; 0x40
   20430:	cmp	r3, #0
   20434:	beq	2048c <__flatcc_fb_gen_c_verifier@@Base+0x1c58>
   20438:	add	r3, sp, #292	; 0x124
   2043c:	str	r3, [sp, #12]
   20440:	str	r3, [sp, #8]
   20444:	ldrd	r2, [sl, #96]	; 0x60
   20448:	strd	r2, [sp]
   2044c:	ldr	r2, [sl, #112]	; 0x70
   20450:	mov	r3, #0
   20454:	ldr	r1, [pc, #1080]	; 20894 <__flatcc_fb_gen_c_verifier@@Base+0x2060>
   20458:	mov	r0, r4
   2045c:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   20460:	b	2024c <__flatcc_fb_gen_c_verifier@@Base+0x1a18>
   20464:	ldr	r3, [pc, #828]	; 207a8 <__flatcc_fb_gen_c_verifier@@Base+0x1f74>
   20468:	ldr	r2, [pc, #1064]	; 20898 <__flatcc_fb_gen_c_verifier@@Base+0x2064>
   2046c:	ldr	r1, [pc, #804]	; 20798 <__flatcc_fb_gen_c_verifier@@Base+0x1f64>
   20470:	ldr	r0, [pc, #848]	; 207c8 <__flatcc_fb_gen_c_verifier@@Base+0x1f94>
   20474:	bl	14148 <__assert_fail@plt>
   20478:	ldr	r3, [pc, #808]	; 207a8 <__flatcc_fb_gen_c_verifier@@Base+0x1f74>
   2047c:	ldr	r2, [pc, #1044]	; 20898 <__flatcc_fb_gen_c_verifier@@Base+0x2064>
   20480:	ldr	r1, [pc, #784]	; 20798 <__flatcc_fb_gen_c_verifier@@Base+0x1f64>
   20484:	ldr	r0, [pc, #828]	; 207c8 <__flatcc_fb_gen_c_verifier@@Base+0x1f94>
   20488:	bl	14148 <__assert_fail@plt>
   2048c:	add	r3, sp, #292	; 0x124
   20490:	str	r3, [sp, #8]
   20494:	ldrd	r2, [sl, #96]	; 0x60
   20498:	strd	r2, [sp]
   2049c:	ldr	r2, [sl, #112]	; 0x70
   204a0:	mov	r3, #0
   204a4:	ldr	r1, [pc, #1008]	; 2089c <__flatcc_fb_gen_c_verifier@@Base+0x2068>
   204a8:	mov	r0, r4
   204ac:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   204b0:	b	2024c <__flatcc_fb_gen_c_verifier@@Base+0x1a18>
   204b4:	ldr	r4, [pc, #732]	; 20798 <__flatcc_fb_gen_c_verifier@@Base+0x1f64>
   204b8:	ldr	r3, [pc, #992]	; 208a0 <__flatcc_fb_gen_c_verifier@@Base+0x206c>
   204bc:	str	r3, [sp]
   204c0:	mov	r3, #636	; 0x27c
   204c4:	mov	r2, r4
   204c8:	ldr	r1, [pc, #720]	; 207a0 <__flatcc_fb_gen_c_verifier@@Base+0x1f6c>
   204cc:	ldr	r0, [pc, #720]	; 207a4 <__flatcc_fb_gen_c_verifier@@Base+0x1f70>
   204d0:	ldr	r0, [r0]
   204d4:	bl	14094 <fprintf@plt>
   204d8:	ldr	r3, [pc, #712]	; 207a8 <__flatcc_fb_gen_c_verifier@@Base+0x1f74>
   204dc:	mov	r2, #636	; 0x27c
   204e0:	mov	r1, r4
   204e4:	ldr	r0, [pc, #704]	; 207ac <__flatcc_fb_gen_c_verifier@@Base+0x1f78>
   204e8:	bl	14148 <__assert_fail@plt>
   204ec:	ldr	r1, [pc, #944]	; 208a4 <__flatcc_fb_gen_c_verifier@@Base+0x2070>
   204f0:	mov	r0, r4
   204f4:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   204f8:	ldr	r1, [pc, #936]	; 208a8 <__flatcc_fb_gen_c_verifier@@Base+0x2074>
   204fc:	mov	r0, r4
   20500:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   20504:	ldr	r1, [pc, #888]	; 20884 <__flatcc_fb_gen_c_verifier@@Base+0x2050>
   20508:	mov	r0, r4
   2050c:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   20510:	ldr	r3, [r4, #220]	; 0xdc
   20514:	cmp	r3, #0
   20518:	beq	20540 <__flatcc_fb_gen_c_verifier@@Base+0x1d0c>
   2051c:	sub	r3, r3, #1
   20520:	str	r3, [r4, #220]	; 0xdc
   20524:	ldr	r1, [pc, #784]	; 2083c <__flatcc_fb_gen_c_verifier@@Base+0x2008>
   20528:	mov	r0, r4
   2052c:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   20530:	ldr	r1, [pc, #884]	; 208ac <__flatcc_fb_gen_c_verifier@@Base+0x2078>
   20534:	mov	r0, r4
   20538:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   2053c:	b	20254 <__flatcc_fb_gen_c_verifier@@Base+0x1a20>
   20540:	ldr	r3, [pc, #608]	; 207a8 <__flatcc_fb_gen_c_verifier@@Base+0x1f74>
   20544:	ldr	r2, [pc, #868]	; 208b0 <__flatcc_fb_gen_c_verifier@@Base+0x207c>
   20548:	ldr	r1, [pc, #584]	; 20798 <__flatcc_fb_gen_c_verifier@@Base+0x1f64>
   2054c:	ldr	r0, [pc, #628]	; 207c8 <__flatcc_fb_gen_c_verifier@@Base+0x1f94>
   20550:	bl	14148 <__assert_fail@plt>
   20554:	cmp	r9, #2
   20558:	beq	20590 <__flatcc_fb_gen_c_verifier@@Base+0x1d5c>
   2055c:	ldr	r3, [sp, #44]	; 0x2c
   20560:	ldr	r2, [sp, #48]	; 0x30
   20564:	orr	r3, r3, r2
   20568:	ldr	r2, [sp, #56]	; 0x38
   2056c:	orr	r3, r3, r2
   20570:	orr	r3, r3, r9
   20574:	orr	r7, r3, r7
   20578:	ldr	r3, [sp, #28]
   2057c:	orrs	r3, r7, r3
   20580:	bne	205e0 <__flatcc_fb_gen_c_verifier@@Base+0x1dac>
   20584:	mov	r0, #0
   20588:	add	sp, sp, #516	; 0x204
   2058c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   20590:	ldr	r1, [pc, #796]	; 208b4 <__flatcc_fb_gen_c_verifier@@Base+0x2080>
   20594:	mov	r0, r4
   20598:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   2059c:	ldr	r1, [pc, #788]	; 208b8 <__flatcc_fb_gen_c_verifier@@Base+0x2084>
   205a0:	mov	r0, r4
   205a4:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   205a8:	ldr	r3, [r4, #220]	; 0xdc
   205ac:	cmp	r3, #0
   205b0:	beq	205cc <__flatcc_fb_gen_c_verifier@@Base+0x1d98>
   205b4:	sub	r3, r3, #1
   205b8:	str	r3, [r4, #220]	; 0xdc
   205bc:	ldr	r1, [pc, #760]	; 208bc <__flatcc_fb_gen_c_verifier@@Base+0x2088>
   205c0:	mov	r0, r4
   205c4:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   205c8:	b	2055c <__flatcc_fb_gen_c_verifier@@Base+0x1d28>
   205cc:	ldr	r3, [pc, #468]	; 207a8 <__flatcc_fb_gen_c_verifier@@Base+0x1f74>
   205d0:	ldr	r2, [pc, #744]	; 208c0 <__flatcc_fb_gen_c_verifier@@Base+0x208c>
   205d4:	ldr	r1, [pc, #444]	; 20798 <__flatcc_fb_gen_c_verifier@@Base+0x1f64>
   205d8:	ldr	r0, [pc, #488]	; 207c8 <__flatcc_fb_gen_c_verifier@@Base+0x1f94>
   205dc:	bl	14148 <__assert_fail@plt>
   205e0:	ldrd	r2, [sl, #96]	; 0x60
   205e4:	ldr	r1, [pc, #728]	; 208c4 <__flatcc_fb_gen_c_verifier@@Base+0x2090>
   205e8:	mov	r0, r4
   205ec:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   205f0:	ldr	r1, [pc, #688]	; 208a8 <__flatcc_fb_gen_c_verifier@@Base+0x2074>
   205f4:	mov	r0, r4
   205f8:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   205fc:	b	20584 <__flatcc_fb_gen_c_verifier@@Base+0x1d50>
   20600:	mov	r3, #1
   20604:	mov	r1, r3
   20608:	str	r3, [sp, #64]	; 0x40
   2060c:	mov	r3, #0
   20610:	str	r3, [sp, #60]	; 0x3c
   20614:	mov	fp, r3
   20618:	str	r3, [sp, #28]
   2061c:	mov	r5, r3
   20620:	str	r1, [sp, #44]	; 0x2c
   20624:	b	1fb34 <__flatcc_fb_gen_c_verifier@@Base+0x1300>
   20628:	mov	r3, #0
   2062c:	str	r3, [sp, #64]	; 0x40
   20630:	str	r3, [sp, #60]	; 0x3c
   20634:	mov	fp, r3
   20638:	str	r3, [sp, #28]
   2063c:	mov	r5, r3
   20640:	mov	r2, #1
   20644:	str	r2, [sp, #44]	; 0x2c
   20648:	b	1fb34 <__flatcc_fb_gen_c_verifier@@Base+0x1300>
   2064c:	adds	r3, r3, #0
   20650:	movne	r3, #1
   20654:	str	r3, [sp, #76]	; 0x4c
   20658:	ldr	r2, [sp, #64]	; 0x40
   2065c:	cmp	r2, #0
   20660:	moveq	r3, #0
   20664:	andne	r3, r3, #1
   20668:	str	r3, [sp, #80]	; 0x50
   2066c:	cmp	r3, #0
   20670:	beq	1fd24 <__flatcc_fb_gen_c_verifier@@Base+0x14f0>
   20674:	ldr	r3, [sp, #16]
   20678:	str	r3, [sp, #64]	; 0x40
   2067c:	mov	r7, r3
   20680:	mov	r3, #0
   20684:	str	r3, [sp, #80]	; 0x50
   20688:	mov	r3, #1
   2068c:	str	r3, [sp, #84]	; 0x54
   20690:	cmp	r9, #1
   20694:	beq	1fd38 <__flatcc_fb_gen_c_verifier@@Base+0x1504>
   20698:	ldr	r3, [pc, #552]	; 208c8 <__flatcc_fb_gen_c_verifier@@Base+0x2094>
   2069c:	str	r3, [sp, #40]	; 0x28
   206a0:	str	r3, [sp, #20]
   206a4:	b	20260 <__flatcc_fb_gen_c_verifier@@Base+0x1a2c>
   206a8:	adds	r3, r3, #0
   206ac:	movne	r3, #1
   206b0:	str	r3, [sp, #76]	; 0x4c
   206b4:	ldr	r3, [sp, #64]	; 0x40
   206b8:	mov	r5, r3
   206bc:	str	r3, [sp, #84]	; 0x54
   206c0:	mov	r7, r3
   206c4:	mov	r3, #1
   206c8:	str	r3, [sp, #80]	; 0x50
   206cc:	b	20690 <__flatcc_fb_gen_c_verifier@@Base+0x1e5c>
   206d0:	ldr	r3, [pc, #500]	; 208cc <__flatcc_fb_gen_c_verifier@@Base+0x2098>
   206d4:	str	r3, [sp, #40]	; 0x28
   206d8:	ldr	r3, [pc, #496]	; 208d0 <__flatcc_fb_gen_c_verifier@@Base+0x209c>
   206dc:	str	r3, [sp, #20]
   206e0:	b	206f4 <__flatcc_fb_gen_c_verifier@@Base+0x1ec0>
   206e4:	ldr	r3, [pc, #488]	; 208d4 <__flatcc_fb_gen_c_verifier@@Base+0x20a0>
   206e8:	str	r3, [sp, #40]	; 0x28
   206ec:	ldr	r3, [pc, #484]	; 208d8 <__flatcc_fb_gen_c_verifier@@Base+0x20a4>
   206f0:	str	r3, [sp, #20]
   206f4:	cmp	r7, #0
   206f8:	bne	1ffb0 <__flatcc_fb_gen_c_verifier@@Base+0x177c>
   206fc:	ldr	r2, [sp, #40]	; 0x28
   20700:	ldr	r1, [pc, #468]	; 208dc <__flatcc_fb_gen_c_verifier@@Base+0x20a8>
   20704:	mov	r0, r4
   20708:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   2070c:	ldr	r1, [pc, #376]	; 2088c <__flatcc_fb_gen_c_verifier@@Base+0x2058>
   20710:	mov	r0, r4
   20714:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   20718:	ldr	r3, [r4, #220]	; 0xdc
   2071c:	add	r3, r3, #2
   20720:	str	r3, [r4, #220]	; 0xdc
   20724:	ldr	r3, [sp, #72]	; 0x48
   20728:	cmp	r3, #0
   2072c:	beq	1ffdc <__flatcc_fb_gen_c_verifier@@Base+0x17a8>
   20730:	add	r2, sp, #292	; 0x124
   20734:	ldr	r1, [pc, #340]	; 20890 <__flatcc_fb_gen_c_verifier@@Base+0x205c>
   20738:	mov	r0, r4
   2073c:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   20740:	ldr	r2, [r4, #208]	; 0xd0
   20744:	add	r3, sp, #88	; 0x58
   20748:	ldr	r2, [r2, #160]	; 0xa0
   2074c:	ldr	r1, [pc, #196]	; 20818 <__flatcc_fb_gen_c_verifier@@Base+0x1fe4>
   20750:	mov	r0, r4
   20754:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   20758:	ldr	r3, [r4, #208]	; 0xd0
   2075c:	ldr	r2, [r3, #160]	; 0xa0
   20760:	ldr	r1, [pc, #180]	; 2081c <__flatcc_fb_gen_c_verifier@@Base+0x1fe8>
   20764:	mov	r0, r4
   20768:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   2076c:	ldr	r3, [r4, #220]	; 0xdc
   20770:	cmp	r3, #0
   20774:	beq	2000c <__flatcc_fb_gen_c_verifier@@Base+0x17d8>
   20778:	sub	r2, r3, #1
   2077c:	str	r2, [r4, #220]	; 0xdc
   20780:	cmp	r2, #0
   20784:	beq	20020 <__flatcc_fb_gen_c_verifier@@Base+0x17ec>
   20788:	sub	r3, r3, #2
   2078c:	str	r3, [r4, #220]	; 0xdc
   20790:	b	202f8 <__flatcc_fb_gen_c_verifier@@Base+0x1ac4>
   20794:	ldrdeq	r0, [r0], -r2
   20798:	andeq	pc, r4, r0, lsl #11
   2079c:	andeq	pc, r4, r4, lsr ip	; <UNPREDICTABLE>
   207a0:	andeq	ip, r3, r8, lsr #27
   207a4:	andeq	r7, r6, r8, lsr #1
   207a8:			; <UNDEFINED> instruction: 0x0004f3bc
   207ac:	andeq	r5, r4, r0, ror #3
   207b0:	andeq	pc, r4, r0, ror ip	; <UNPREDICTABLE>
   207b4:	andeq	pc, r4, r4, lsr #25
   207b8:			; <UNDEFINED> instruction: 0x0004fcbc
   207bc:	andeq	r0, r5, r4, lsl #5
   207c0:	andeq	r0, r5, r8, ror #5
   207c4:	andeq	r0, r0, sl, ror #3
   207c8:	ldrdeq	pc, [r4], -r8
   207cc:	andeq	ip, r3, ip, asr sp
   207d0:			; <UNDEFINED> instruction: 0x0003cdb4
   207d4:	ldrdeq	pc, [r4], -r4
   207d8:	andeq	ip, r3, r0, asr ip
   207dc:	andeq	sp, r3, r4, asr #1
   207e0:	andeq	ip, r3, ip, asr ip
   207e4:	andeq	sp, r3, ip, asr #1
   207e8:	andeq	ip, r3, ip, ror #24
   207ec:	ldrdeq	sp, [r3], -r4
   207f0:	andeq	ip, r3, r4, ror ip
   207f4:	ldrdeq	sp, [r3], -ip
   207f8:	andeq	ip, r3, ip, ror ip
   207fc:	andeq	sp, r3, r4, ror #1
   20800:	andeq	ip, r3, r4, lsl #25
   20804:	andeq	sp, r3, ip, ror #1
   20808:	andeq	ip, r3, ip, lsl #25
   2080c:	muleq	r3, r4, ip
   20810:	andeq	r4, r5, r4, asr #24
   20814:	andeq	pc, r4, r0, lsl #26
   20818:	andeq	pc, r4, r4, asr #28
   2081c:	andeq	pc, r4, r4, ror #28
   20820:	andeq	r0, r0, fp, lsl r2
   20824:	ldrdeq	pc, [r4], -r0
   20828:	andeq	pc, r4, r0, lsl #30
   2082c:	andeq	pc, r4, r0, asr pc	; <UNPREDICTABLE>
   20830:	andeq	pc, r4, ip, lsl #31
   20834:	andeq	pc, r4, r0, lsr #31
   20838:	strdeq	pc, [r4], -r8
   2083c:	andeq	pc, r4, r4, ror #11
   20840:	andeq	r0, r0, pc, lsr #4
   20844:	andeq	r0, r5, r4, lsr #32
   20848:	andeq	r0, r5, r0, lsr #2
   2084c:	andeq	r0, r5, r0, ror r1
   20850:	andeq	r0, r5, r8, rrx
   20854:	andeq	r0, r5, ip, lsr #1
   20858:	andeq	r0, r0, lr, asr #4
   2085c:	strdeq	r0, [r5], -r0	; <UNPREDICTABLE>
   20860:	andeq	r0, r0, sl, asr r2
   20864:	muleq	r5, r0, r1
   20868:	andeq	pc, r4, r0, asr #26
   2086c:	muleq	r4, r4, sp
   20870:	ldrdeq	pc, [r4], -r0
   20874:	andeq	pc, r4, r8, lsl #29
   20878:	andeq	r0, r5, r8, asr #3
   2087c:	andeq	r0, r5, r4, lsl #4
   20880:	andeq	r0, r5, r4, asr r2
   20884:	andeq	r0, r5, r8, ror #9
   20888:	andeq	r0, r5, r8, lsl #12
   2088c:	andeq	pc, r4, ip, ror #27
   20890:	andeq	pc, r4, r0, lsr lr	; <UNPREDICTABLE>
   20894:	andeq	r0, r5, r4, asr #6
   20898:	andeq	r0, r0, r3, ror r2
   2089c:	ldrdeq	r0, [r5], -r8
   208a0:	andeq	r0, r5, ip, asr #8
   208a4:	andeq	r0, r5, r0, lsl #9
   208a8:	ldrdeq	r0, [r5], -r8
   208ac:	ldrdeq	r0, [r5], -r4
   208b0:	andeq	r0, r0, r7, lsl #5
   208b4:	andeq	r0, r5, r4, lsr #10
   208b8:	andeq	r0, r5, ip, lsr r5
   208bc:	andeq	r0, r5, ip, ror #10
   208c0:	muleq	r0, r5, r2
   208c4:	andeq	r0, r5, r0, lsl #11
   208c8:	andeq	pc, r4, r0, lsr ip	; <UNPREDICTABLE>
   208cc:	andeq	ip, r3, r8, lsr ip
   208d0:	strheq	sp, [r3], -r4
   208d4:	andeq	ip, r3, r4, asr #24
   208d8:	strheq	sp, [r3], -ip
   208dc:	andeq	pc, r4, r0, ror #27
   208e0:	push	{r4, r5, r6, r7, r8, lr}
   208e4:	mov	r4, r0
   208e8:	mov	r5, r1
   208ec:	mov	r6, r2
   208f0:	mov	r7, r3
   208f4:	ldr	r2, [sp, #24]
   208f8:	ldr	r1, [pc, #112]	; 20970 <__flatcc_fb_gen_c_verifier@@Base+0x213c>
   208fc:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   20900:	ldr	r1, [pc, #108]	; 20974 <__flatcc_fb_gen_c_verifier@@Base+0x2140>
   20904:	mov	r0, r4
   20908:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   2090c:	ldr	r3, [r4, #220]	; 0xdc
   20910:	add	r3, r3, #1
   20914:	str	r3, [r4, #220]	; 0xdc
   20918:	mov	r3, r7
   2091c:	mov	r2, r6
   20920:	mov	r1, r5
   20924:	mov	r0, r4
   20928:	bl	1f9fc <__flatcc_fb_gen_c_verifier@@Base+0x11c8>
   2092c:	ldr	r3, [r4, #220]	; 0xdc
   20930:	cmp	r3, #0
   20934:	beq	2095c <__flatcc_fb_gen_c_verifier@@Base+0x2128>
   20938:	sub	r3, r3, #1
   2093c:	str	r3, [r4, #220]	; 0xdc
   20940:	ldr	r1, [pc, #48]	; 20978 <__flatcc_fb_gen_c_verifier@@Base+0x2144>
   20944:	mov	r0, r4
   20948:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   2094c:	ldr	r3, [r4, #220]	; 0xdc
   20950:	add	r3, r3, #1
   20954:	str	r3, [r4, #220]	; 0xdc
   20958:	pop	{r4, r5, r6, r7, r8, pc}
   2095c:	ldr	r3, [pc, #24]	; 2097c <__flatcc_fb_gen_c_verifier@@Base+0x2148>
   20960:	ldr	r2, [pc, #24]	; 20980 <__flatcc_fb_gen_c_verifier@@Base+0x214c>
   20964:	ldr	r1, [pc, #24]	; 20984 <__flatcc_fb_gen_c_verifier@@Base+0x2150>
   20968:	ldr	r0, [pc, #24]	; 20988 <__flatcc_fb_gen_c_verifier@@Base+0x2154>
   2096c:	bl	14148 <__assert_fail@plt>
   20970:	andeq	r0, r5, r4, lsr r6
   20974:	andeq	r0, r5, r8, ror r6
   20978:	strdeq	pc, [r4], -r0
   2097c:	andeq	pc, r4, r8, ror #7
   20980:	andeq	r0, r0, r3, lsr #5
   20984:	andeq	pc, r4, r0, lsl #11
   20988:	ldrdeq	pc, [r4], -r8
   2098c:	push	{r4, lr}
   20990:	add	r3, r1, #4
   20994:	mov	r2, r0
   20998:	ldr	r1, [pc, #8]	; 209a8 <__flatcc_fb_gen_c_verifier@@Base+0x2174>
   2099c:	mov	r0, r3
   209a0:	bl	28510 <fb_symbol_table_visit@@Base>
   209a4:	pop	{r4, pc}
   209a8:	andeq	r0, r2, r8, asr ip
   209ac:	push	{r4, lr}
   209b0:	add	r3, r1, #4
   209b4:	mov	r2, r0
   209b8:	ldr	r1, [pc, #8]	; 209c8 <__flatcc_fb_gen_c_verifier@@Base+0x2194>
   209bc:	mov	r0, r3
   209c0:	bl	28510 <fb_symbol_table_visit@@Base>
   209c4:	pop	{r4, pc}
   209c8:	andeq	r0, r2, ip, lsl #22
   209cc:	push	{r4, r5, r6, lr}
   209d0:	mov	r5, r0
   209d4:	mov	r4, r1
   209d8:	ldr	r3, [pc, #40]	; 20a08 <__flatcc_fb_gen_c_verifier@@Base+0x21d4>
   209dc:	mov	r2, #8
   209e0:	bl	14118 <qsort@plt>
   209e4:	cmp	r4, #0
   209e8:	pople	{r4, r5, r6, pc}
   209ec:	mov	r3, #0
   209f0:	ldr	r2, [r5, r3, lsl #3]
   209f4:	str	r3, [r2, #124]	; 0x7c
   209f8:	add	r3, r3, #1
   209fc:	cmp	r4, r3
   20a00:	bne	209f0 <__flatcc_fb_gen_c_verifier@@Base+0x21bc>
   20a04:	pop	{r4, r5, r6, pc}
   20a08:	andeq	r0, r2, ip, asr pc
   20a0c:	push	{r4, r5, r6, lr}
   20a10:	ldr	r5, [r0, #4]
   20a14:	ldr	r4, [r1, #4]
   20a18:	cmp	r5, r4
   20a1c:	movlt	r2, r5
   20a20:	movge	r2, r4
   20a24:	ldr	r1, [r1]
   20a28:	ldr	r0, [r0]
   20a2c:	bl	13ff8 <memcmp@plt>
   20a30:	cmp	r0, #0
   20a34:	subeq	r0, r5, r4
   20a38:	pop	{r4, r5, r6, pc}
   20a3c:	push	{r4, r5, r6, lr}
   20a40:	mov	r4, r0
   20a44:	mov	r5, r1
   20a48:	ldrh	r3, [r1, #8]
   20a4c:	sub	r3, r3, #3
   20a50:	cmp	r3, #1
   20a54:	movhi	r3, #0
   20a58:	bls	20a9c <__flatcc_fb_gen_c_verifier@@Base+0x2268>
   20a5c:	cmp	r3, #0
   20a60:	popeq	{r4, r5, r6, pc}
   20a64:	ldr	r3, [r4, #8]
   20a68:	ldr	r2, [r5, #4]
   20a6c:	ldr	r2, [r2]
   20a70:	str	r2, [r3]
   20a74:	ldr	r3, [r4, #8]
   20a78:	ldr	r2, [r5, #4]
   20a7c:	ldr	r2, [r2, #4]
   20a80:	str	r2, [r3, #4]
   20a84:	ldr	r3, [r4, #8]
   20a88:	str	r5, [r3, #8]
   20a8c:	ldr	r3, [r4, #8]
   20a90:	add	r3, r3, #16
   20a94:	str	r3, [r4, #8]
   20a98:	pop	{r4, r5, r6, pc}
   20a9c:	ldr	r0, [r0, #4]
   20aa0:	ldr	r1, [r1, #16]
   20aa4:	add	r0, r0, #172	; 0xac
   20aa8:	bl	27e80 <ptr_set_find_item@@Base>
   20aac:	cmp	r0, #0
   20ab0:	movne	r3, r5
   20ab4:	bne	20a5c <__flatcc_fb_gen_c_verifier@@Base+0x2228>
   20ab8:	pop	{r4, r5, r6, pc}
   20abc:	push	{r4, r5, r6, lr}
   20ac0:	mov	r5, r0
   20ac4:	ldrh	r3, [r1, #8]
   20ac8:	sub	r3, r3, #3
   20acc:	cmp	r3, #1
   20ad0:	movhi	r4, #0
   20ad4:	bls	20aec <__flatcc_fb_gen_c_verifier@@Base+0x22b8>
   20ad8:	cmp	r4, #0
   20adc:	ldrne	r3, [r5]
   20ae0:	addne	r3, r3, #1
   20ae4:	strne	r3, [r5]
   20ae8:	pop	{r4, r5, r6, pc}
   20aec:	mov	r4, r1
   20af0:	ldr	r0, [r0, #4]
   20af4:	ldr	r1, [r1, #16]
   20af8:	add	r0, r0, #172	; 0xac
   20afc:	bl	27e80 <ptr_set_find_item@@Base>
   20b00:	cmp	r0, #0
   20b04:	bne	20ad8 <__flatcc_fb_gen_c_verifier@@Base+0x22a4>
   20b08:	pop	{r4, r5, r6, pc}
   20b0c:	push	{r4, r5, r6, lr}
   20b10:	mov	r4, r0
   20b14:	mov	r5, r1
   20b18:	ldrh	r3, [r1, #8]
   20b1c:	cmp	r3, #4
   20b20:	movhi	r3, #0
   20b24:	bls	20bb0 <__flatcc_fb_gen_c_verifier@@Base+0x237c>
   20b28:	cmp	r3, #0
   20b2c:	popeq	{r4, r5, r6, pc}
   20b30:	ldr	r2, [r4]
   20b34:	cmp	r2, #0
   20b38:	moveq	r1, #0
   20b3c:	beq	20b70 <__flatcc_fb_gen_c_verifier@@Base+0x233c>
   20b40:	ldr	r3, [r3, #12]
   20b44:	ldr	r3, [r3]
   20b48:	cmp	r3, #0
   20b4c:	beq	20bd0 <__flatcc_fb_gen_c_verifier@@Base+0x239c>
   20b50:	mov	r1, #0
   20b54:	ldr	r2, [r3, #4]
   20b58:	ldr	r2, [r2, #4]
   20b5c:	add	r2, r2, #1
   20b60:	add	r1, r1, r2
   20b64:	ldr	r3, [r3]
   20b68:	cmp	r3, #0
   20b6c:	bne	20b54 <__flatcc_fb_gen_c_verifier@@Base+0x2320>
   20b70:	ldr	r3, [r5, #4]
   20b74:	ldr	r3, [r3, #4]
   20b78:	ldr	r2, [r4, #12]
   20b7c:	add	r3, r3, r2
   20b80:	add	r3, r3, #1
   20b84:	add	r1, r3, r1
   20b88:	str	r1, [r4, #12]
   20b8c:	ldrh	r3, [r5, #8]
   20b90:	cmp	r3, #4
   20b94:	ldrls	pc, [pc, r3, lsl #2]
   20b98:	b	20bf4 <__flatcc_fb_gen_c_verifier@@Base+0x23c0>
   20b9c:	ldrdeq	r0, [r2], -r8
   20ba0:	ldrdeq	r0, [r2], -r8
   20ba4:	strdeq	r0, [r2], -r4
   20ba8:	andeq	r0, r2, r8, ror #23
   20bac:	andeq	r0, r2, r8, ror #23
   20bb0:	ldr	r0, [r0, #40]	; 0x28
   20bb4:	ldr	r1, [r1, #16]
   20bb8:	add	r0, r0, #172	; 0xac
   20bbc:	bl	27e80 <ptr_set_find_item@@Base>
   20bc0:	cmp	r0, #0
   20bc4:	movne	r3, r5
   20bc8:	bne	20b28 <__flatcc_fb_gen_c_verifier@@Base+0x22f4>
   20bcc:	pop	{r4, r5, r6, pc}
   20bd0:	mov	r1, #0
   20bd4:	b	20b70 <__flatcc_fb_gen_c_verifier@@Base+0x233c>
   20bd8:	ldr	r3, [r4, #4]
   20bdc:	add	r3, r3, #1
   20be0:	str	r3, [r4, #4]
   20be4:	pop	{r4, r5, r6, pc}
   20be8:	ldr	r3, [r4, #8]
   20bec:	add	r3, r3, #1
   20bf0:	str	r3, [r4, #8]
   20bf4:	pop	{r4, r5, r6, pc}
   20bf8:	cmp	r0, #0
   20bfc:	bxeq	lr
   20c00:	push	{r4, lr}
   20c04:	bl	13fd4 <free@plt>
   20c08:	pop	{r4, pc}
   20c0c:	push	{r4, lr}
   20c10:	mov	r4, r0
   20c14:	ldr	r0, [r0, #16]
   20c18:	cmp	r0, #0
   20c1c:	beq	20c24 <__flatcc_fb_gen_c_verifier@@Base+0x23f0>
   20c20:	bl	13fd4 <free@plt>
   20c24:	ldr	r0, [r4, #20]
   20c28:	cmp	r0, #0
   20c2c:	beq	20c34 <__flatcc_fb_gen_c_verifier@@Base+0x2400>
   20c30:	bl	13fd4 <free@plt>
   20c34:	ldr	r0, [r4, #24]
   20c38:	cmp	r0, #0
   20c3c:	beq	20c44 <__flatcc_fb_gen_c_verifier@@Base+0x2410>
   20c40:	bl	13fd4 <free@plt>
   20c44:	mov	r2, #44	; 0x2c
   20c48:	mov	r1, #0
   20c4c:	mov	r0, r4
   20c50:	bl	140ac <memset@plt>
   20c54:	pop	{r4, pc}
   20c58:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   20c5c:	mov	r7, r0
   20c60:	mov	r9, r1
   20c64:	ldrh	r3, [r1, #8]
   20c68:	cmp	r3, #4
   20c6c:	movhi	r3, #0
   20c70:	bls	20d28 <__flatcc_fb_gen_c_verifier@@Base+0x24f4>
   20c74:	cmp	r3, #0
   20c78:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   20c7c:	ldr	sl, [r7, #36]	; 0x24
   20c80:	ldr	r2, [r7]
   20c84:	cmp	r2, #0
   20c88:	moveq	r6, sl
   20c8c:	beq	20cd8 <__flatcc_fb_gen_c_verifier@@Base+0x24a4>
   20c90:	ldr	r3, [r3, #12]
   20c94:	ldr	r5, [r3]
   20c98:	cmp	r5, #0
   20c9c:	beq	20d48 <__flatcc_fb_gen_c_verifier@@Base+0x2514>
   20ca0:	mov	r6, sl
   20ca4:	mov	r8, #46	; 0x2e
   20ca8:	ldr	r3, [r5, #4]
   20cac:	ldr	r4, [r3, #4]
   20cb0:	mov	r2, r4
   20cb4:	ldr	r1, [r3]
   20cb8:	mov	r0, r6
   20cbc:	bl	13fe0 <memcpy@plt>
   20cc0:	add	r4, r6, r4
   20cc4:	add	r6, r4, #1
   20cc8:	strb	r8, [r4]
   20ccc:	ldr	r5, [r5]
   20cd0:	cmp	r5, #0
   20cd4:	bne	20ca8 <__flatcc_fb_gen_c_verifier@@Base+0x2474>
   20cd8:	ldr	r3, [r9, #4]
   20cdc:	ldr	r4, [r3, #4]
   20ce0:	mov	r2, r4
   20ce4:	ldr	r1, [r3]
   20ce8:	mov	r0, r6
   20cec:	bl	13fe0 <memcpy@plt>
   20cf0:	add	r3, r6, r4
   20cf4:	mov	r2, #0
   20cf8:	strb	r2, [r6, r4]
   20cfc:	add	r3, r3, #1
   20d00:	str	r3, [r7, #36]	; 0x24
   20d04:	ldrh	r3, [r9, #8]
   20d08:	cmp	r3, #4
   20d0c:	ldrls	pc, [pc, r3, lsl #2]
   20d10:	b	20d8c <__flatcc_fb_gen_c_verifier@@Base+0x2558>
   20d14:	andeq	r0, r2, r0, asr sp
   20d18:	andeq	r0, r2, r0, asr sp
   20d1c:	andeq	r0, r2, ip, lsl #27
   20d20:	andeq	r0, r2, r0, ror sp
   20d24:	andeq	r0, r2, r0, ror sp
   20d28:	ldr	r0, [r0, #40]	; 0x28
   20d2c:	ldr	r1, [r1, #16]
   20d30:	add	r0, r0, #172	; 0xac
   20d34:	bl	27e80 <ptr_set_find_item@@Base>
   20d38:	cmp	r0, #0
   20d3c:	movne	r3, r9
   20d40:	bne	20c74 <__flatcc_fb_gen_c_verifier@@Base+0x2440>
   20d44:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   20d48:	mov	r6, sl
   20d4c:	b	20cd8 <__flatcc_fb_gen_c_verifier@@Base+0x24a4>
   20d50:	ldr	r3, [r7, #28]
   20d54:	str	r9, [r3]
   20d58:	ldr	r3, [r7, #28]
   20d5c:	str	sl, [r3, #4]
   20d60:	ldr	r3, [r7, #28]
   20d64:	add	r3, r3, #8
   20d68:	str	r3, [r7, #28]
   20d6c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   20d70:	ldr	r3, [r7, #32]
   20d74:	str	r9, [r3]
   20d78:	ldr	r3, [r7, #32]
   20d7c:	str	sl, [r3, #4]
   20d80:	ldr	r3, [r7, #32]
   20d84:	add	r3, r3, #8
   20d88:	str	r3, [r7, #32]
   20d8c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   20d90:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   20d94:	sub	sp, sp, #12
   20d98:	ldr	r3, [r0, #20]
   20d9c:	cmp	r3, #0
   20da0:	beq	20e7c <__flatcc_fb_gen_c_verifier@@Base+0x2648>
   20da4:	mov	ip, #0
   20da8:	mov	r6, ip
   20dac:	b	20e48 <__flatcc_fb_gen_c_verifier@@Base+0x2614>
   20db0:	str	r6, [r1]
   20db4:	cmp	r6, #0
   20db8:	moveq	r8, #0
   20dbc:	beq	20e18 <__flatcc_fb_gen_c_verifier@@Base+0x25e4>
   20dc0:	mov	r4, r0
   20dc4:	str	r6, [sp, #4]
   20dc8:	lsl	r6, r6, #4
   20dcc:	add	r0, ip, r6
   20dd0:	bl	14040 <malloc@plt>
   20dd4:	subs	r8, r0, #0
   20dd8:	beq	20e18 <__flatcc_fb_gen_c_verifier@@Base+0x25e4>
   20ddc:	add	r6, r8, r6
   20de0:	ldr	r4, [r4, #20]
   20de4:	cmp	r4, #0
   20de8:	beq	20e04 <__flatcc_fb_gen_c_verifier@@Base+0x25d0>
   20dec:	mov	r5, r8
   20df0:	mov	r2, #0
   20df4:	mov	r7, r2
   20df8:	ldr	r9, [pc, #340]	; 20f54 <__flatcc_fb_gen_c_verifier@@Base+0x2720>
   20dfc:	mov	fp, #1
   20e00:	b	20ef4 <__flatcc_fb_gen_c_verifier@@Base+0x26c0>
   20e04:	ldr	r3, [pc, #332]	; 20f58 <__flatcc_fb_gen_c_verifier@@Base+0x2724>
   20e08:	mov	r2, #16
   20e0c:	ldr	r1, [sp, #4]
   20e10:	mov	r0, r8
   20e14:	bl	14118 <qsort@plt>
   20e18:	mov	r0, r8
   20e1c:	add	sp, sp, #12
   20e20:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   20e24:	add	r6, r6, #1
   20e28:	ldr	r2, [r3, #4]
   20e2c:	ldr	r2, [r2, #4]
   20e30:	add	r2, r2, #6
   20e34:	add	ip, ip, r2
   20e38:	add	r6, r6, #1
   20e3c:	ldr	r3, [r3]
   20e40:	cmp	r3, #0
   20e44:	beq	20db0 <__flatcc_fb_gen_c_verifier@@Base+0x257c>
   20e48:	ldrh	r2, [r3, #72]	; 0x48
   20e4c:	tst	r2, #4
   20e50:	bne	20e3c <__flatcc_fb_gen_c_verifier@@Base+0x2608>
   20e54:	ldrh	r2, [r3, #24]
   20e58:	sub	r2, r2, #14
   20e5c:	uxth	r2, r2
   20e60:	cmp	r2, #1
   20e64:	bhi	20e38 <__flatcc_fb_gen_c_verifier@@Base+0x2604>
   20e68:	ldr	r2, [r3, #16]
   20e6c:	ldrh	r2, [r2, #8]
   20e70:	cmp	r2, #4
   20e74:	bne	20e38 <__flatcc_fb_gen_c_verifier@@Base+0x2604>
   20e78:	b	20e24 <__flatcc_fb_gen_c_verifier@@Base+0x25f0>
   20e7c:	mov	r8, #0
   20e80:	str	r8, [r1]
   20e84:	b	20e18 <__flatcc_fb_gen_c_verifier@@Base+0x25e4>
   20e88:	add	sl, r2, #1
   20e8c:	str	r2, [r4, #112]	; 0x70
   20e90:	ldr	r3, [r4, #4]
   20e94:	ldr	r3, [r3, #4]
   20e98:	add	r3, r3, #5
   20e9c:	str	r3, [r5, #20]
   20ea0:	str	r6, [r5, #16]
   20ea4:	ldr	r3, [r4, #4]
   20ea8:	ldr	r2, [r3, #4]
   20eac:	ldr	r1, [r3]
   20eb0:	mov	r0, r6
   20eb4:	bl	13fe0 <memcpy@plt>
   20eb8:	ldr	r3, [r4, #4]
   20ebc:	ldr	r2, [r3, #4]
   20ec0:	add	r3, r6, r2
   20ec4:	ldr	r0, [r9]
   20ec8:	str	r0, [r6, r2]
   20ecc:	ldrh	r2, [r9, #4]
   20ed0:	strh	r2, [r3, #4]
   20ed4:	add	r6, r3, #6
   20ed8:	str	r4, [r5, #24]
   20edc:	str	fp, [r5, #28]
   20ee0:	add	r5, r5, #32
   20ee4:	mov	r2, sl
   20ee8:	ldr	r4, [r4]
   20eec:	cmp	r4, #0
   20ef0:	beq	20e04 <__flatcc_fb_gen_c_verifier@@Base+0x25d0>
   20ef4:	ldrh	r3, [r4, #72]	; 0x48
   20ef8:	tst	r3, #4
   20efc:	bne	20ee8 <__flatcc_fb_gen_c_verifier@@Base+0x26b4>
   20f00:	ldr	r3, [r4, #4]
   20f04:	ldr	r3, [r3]
   20f08:	str	r3, [r5]
   20f0c:	ldr	r3, [r4, #4]
   20f10:	ldr	r3, [r3, #4]
   20f14:	str	r3, [r5, #4]
   20f18:	str	r4, [r5, #8]
   20f1c:	str	r7, [r5, #12]
   20f20:	add	r1, r5, #16
   20f24:	ldrh	r3, [r4, #24]
   20f28:	sub	r3, r3, #14
   20f2c:	uxth	r3, r3
   20f30:	cmp	r3, #1
   20f34:	movhi	r5, r1
   20f38:	bhi	20ee8 <__flatcc_fb_gen_c_verifier@@Base+0x26b4>
   20f3c:	ldr	r3, [r4, #16]
   20f40:	ldrh	r3, [r3, #8]
   20f44:	cmp	r3, #4
   20f48:	movne	r5, r1
   20f4c:	bne	20ee8 <__flatcc_fb_gen_c_verifier@@Base+0x26b4>
   20f50:	b	20e88 <__flatcc_fb_gen_c_verifier@@Base+0x2654>
   20f54:	andeq	r3, r5, ip, lsr #31
   20f58:	andeq	r0, r2, ip, lsl #20
   20f5c:	push	{r4, lr}
   20f60:	ldr	r1, [r1, #4]
   20f64:	ldr	r0, [r0, #4]
   20f68:	bl	13fbc <strcmp@plt>
   20f6c:	pop	{r4, pc}
   20f70:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   20f74:	sub	sp, sp, #84	; 0x54
   20f78:	mov	r9, r0
   20f7c:	str	r1, [sp, #12]
   20f80:	mov	r8, r2
   20f84:	mov	sl, r3
   20f88:	ldr	fp, [sp, #120]	; 0x78
   20f8c:	mov	r2, #0
   20f90:	mov	r3, #0
   20f94:	strd	r2, [sp, #72]	; 0x48
   20f98:	strd	r2, [sp, #64]	; 0x40
   20f9c:	ldr	r3, [pc, #2056]	; 217ac <__flatcc_fb_gen_c_verifier@@Base+0x2f78>
   20fa0:	str	r3, [sp, #60]	; 0x3c
   20fa4:	mov	r3, #0
   20fa8:	str	r3, [sp, #56]	; 0x38
   20fac:	ldr	r5, [r1]
   20fb0:	lsl	r3, r8, #4
   20fb4:	str	r3, [sp, #20]
   20fb8:	add	r3, r5, r3
   20fbc:	ldr	r3, [r3, #4]
   20fc0:	add	r2, fp, #8
   20fc4:	str	r2, [sp, #16]
   20fc8:	cmp	r3, r2
   20fcc:	blt	20fdc <__flatcc_fb_gen_c_verifier@@Base+0x27a8>
   20fd0:	sub	r3, r3, fp
   20fd4:	cmp	r3, #8
   20fd8:	bne	20ff0 <__flatcc_fb_gen_c_verifier@@Base+0x27bc>
   20fdc:	cmp	r8, sl
   20fe0:	beq	21188 <__flatcc_fb_gen_c_verifier@@Base+0x2954>
   20fe4:	add	r3, r8, #1
   20fe8:	cmp	sl, r3
   20fec:	beq	21168 <__flatcc_fb_gen_c_verifier@@Base+0x2934>
   20ff0:	sub	r4, sl, r8
   20ff4:	add	r4, r4, r4, lsr #31
   20ff8:	add	r4, r8, r4, asr #1
   20ffc:	mov	r2, #0
   21000:	mov	r3, #0
   21004:	strd	r2, [sp, #24]
   21008:	strd	r2, [sp, #32]
   2100c:	strd	r2, [sp, #40]	; 0x28
   21010:	strd	r2, [sp, #48]	; 0x30
   21014:	cmp	r8, r4
   21018:	bge	2109c <__flatcc_fb_gen_c_verifier@@Base+0x2868>
   2101c:	add	r5, r5, r4, lsl #4
   21020:	mov	r7, r4
   21024:	mov	r6, #0
   21028:	str	r6, [sp, #4]
   2102c:	str	r6, [sp]
   21030:	add	r3, sp, #40	; 0x28
   21034:	add	r2, sp, #24
   21038:	mov	r1, fp
   2103c:	sub	r0, r5, #16
   21040:	bl	1eb5c <__flatcc_fb_gen_c_verifier@@Base+0x328>
   21044:	str	r6, [sp, #4]
   21048:	str	r6, [sp]
   2104c:	add	r3, sp, #48	; 0x30
   21050:	add	r2, sp, #32
   21054:	mov	r1, fp
   21058:	mov	r0, r5
   2105c:	bl	1eb5c <__flatcc_fb_gen_c_verifier@@Base+0x328>
   21060:	ldrd	r0, [sp, #32]
   21064:	ldrd	r2, [sp, #24]
   21068:	eor	r2, r2, r0
   2106c:	eor	r3, r3, r1
   21070:	ldrd	r0, [sp, #40]	; 0x28
   21074:	and	r0, r0, r2
   21078:	and	r1, r1, r3
   2107c:	mov	r2, r0
   21080:	mov	r3, r1
   21084:	orrs	r3, r2, r3
   21088:	bne	211ac <__flatcc_fb_gen_c_verifier@@Base+0x2978>
   2108c:	sub	r7, r7, #1
   21090:	sub	r5, r5, #16
   21094:	cmp	r8, r7
   21098:	bne	21028 <__flatcc_fb_gen_c_verifier@@Base+0x27f4>
   2109c:	ldr	r3, [sp, #12]
   210a0:	ldr	r5, [r3]
   210a4:	mov	r2, #0
   210a8:	mov	r3, #0
   210ac:	strd	r2, [sp, #24]
   210b0:	strd	r2, [sp, #32]
   210b4:	strd	r2, [sp, #40]	; 0x28
   210b8:	strd	r2, [sp, #48]	; 0x30
   210bc:	cmp	sl, r4
   210c0:	ble	21140 <__flatcc_fb_gen_c_verifier@@Base+0x290c>
   210c4:	add	r5, r5, r4, lsl #4
   210c8:	mov	r6, #0
   210cc:	str	r6, [sp, #4]
   210d0:	str	r6, [sp]
   210d4:	add	r3, sp, #40	; 0x28
   210d8:	add	r2, sp, #24
   210dc:	mov	r1, fp
   210e0:	mov	r0, r5
   210e4:	bl	1eb5c <__flatcc_fb_gen_c_verifier@@Base+0x328>
   210e8:	add	r5, r5, #16
   210ec:	str	r6, [sp, #4]
   210f0:	str	r6, [sp]
   210f4:	add	r3, sp, #48	; 0x30
   210f8:	add	r2, sp, #32
   210fc:	mov	r1, fp
   21100:	mov	r0, r5
   21104:	bl	1eb5c <__flatcc_fb_gen_c_verifier@@Base+0x328>
   21108:	ldrd	r0, [sp, #32]
   2110c:	ldrd	r2, [sp, #24]
   21110:	eor	r2, r2, r0
   21114:	eor	r3, r3, r1
   21118:	ldrd	r0, [sp, #40]	; 0x28
   2111c:	and	r0, r0, r2
   21120:	and	r1, r1, r3
   21124:	mov	r2, r0
   21128:	mov	r3, r1
   2112c:	orrs	r3, r2, r3
   21130:	bne	212c8 <__flatcc_fb_gen_c_verifier@@Base+0x2a94>
   21134:	add	r4, r4, #1
   21138:	cmp	sl, r4
   2113c:	bne	210cc <__flatcc_fb_gen_c_verifier@@Base+0x2898>
   21140:	add	r7, r4, #1
   21144:	ldr	r3, [sp, #12]
   21148:	ldr	r0, [r3]
   2114c:	cmp	r8, r4
   21150:	bgt	21640 <__flatcc_fb_gen_c_verifier@@Base+0x2e0c>
   21154:	ldr	r3, [sp, #20]
   21158:	add	r2, r0, r3
   2115c:	mov	r5, r8
   21160:	ldr	r1, [sp, #16]
   21164:	b	212e0 <__flatcc_fb_gen_c_verifier@@Base+0x2aac>
   21168:	add	r3, r5, sl, lsl #4
   2116c:	ldr	r3, [r3, #4]
   21170:	ldr	r2, [sp, #16]
   21174:	cmp	r2, r3
   21178:	bgt	21188 <__flatcc_fb_gen_c_verifier@@Base+0x2954>
   2117c:	sub	r3, r3, fp
   21180:	cmp	r3, #8
   21184:	bne	20ff0 <__flatcc_fb_gen_c_verifier@@Base+0x27bc>
   21188:	mov	r3, #0
   2118c:	str	r3, [sp, #4]
   21190:	str	fp, [sp]
   21194:	mov	r3, sl
   21198:	mov	r2, r8
   2119c:	ldr	r1, [sp, #12]
   211a0:	mov	r0, r9
   211a4:	bl	1ed54 <__flatcc_fb_gen_c_verifier@@Base+0x520>
   211a8:	b	21298 <__flatcc_fb_gen_c_verifier@@Base+0x2a64>
   211ac:	cmp	r8, r7
   211b0:	bge	2109c <__flatcc_fb_gen_c_verifier@@Base+0x2868>
   211b4:	ldr	r4, [sp, #12]
   211b8:	ldr	r0, [r4]
   211bc:	add	r3, sp, #56	; 0x38
   211c0:	str	r3, [sp, #4]
   211c4:	add	r3, sp, #60	; 0x3c
   211c8:	str	r3, [sp]
   211cc:	add	r3, sp, #64	; 0x40
   211d0:	add	r2, sp, #72	; 0x48
   211d4:	mov	r1, fp
   211d8:	add	r0, r0, r7, lsl #4
   211dc:	bl	1eb5c <__flatcc_fb_gen_c_verifier@@Base+0x328>
   211e0:	ldr	r3, [sp, #60]	; 0x3c
   211e4:	str	r3, [sp, #4]
   211e8:	ldr	r3, [sp, #56]	; 0x38
   211ec:	str	r3, [sp]
   211f0:	ldrd	r2, [sp, #72]	; 0x48
   211f4:	ldr	r1, [pc, #1460]	; 217b0 <__flatcc_fb_gen_c_verifier@@Base+0x2f7c>
   211f8:	mov	r0, r9
   211fc:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   21200:	ldr	r3, [r9, #220]	; 0xdc
   21204:	add	r3, r3, #1
   21208:	str	r3, [r9, #220]	; 0xdc
   2120c:	str	fp, [sp]
   21210:	sub	r3, r7, #1
   21214:	mov	r2, r8
   21218:	mov	r1, r4
   2121c:	mov	r0, r9
   21220:	bl	20f70 <__flatcc_fb_gen_c_verifier@@Base+0x273c>
   21224:	ldr	r3, [r9, #220]	; 0xdc
   21228:	cmp	r3, #0
   2122c:	beq	212a0 <__flatcc_fb_gen_c_verifier@@Base+0x2a6c>
   21230:	sub	r3, r3, #1
   21234:	str	r3, [r9, #220]	; 0xdc
   21238:	ldr	r3, [sp, #60]	; 0x3c
   2123c:	ldr	r2, [sp, #56]	; 0x38
   21240:	ldr	r1, [pc, #1388]	; 217b4 <__flatcc_fb_gen_c_verifier@@Base+0x2f80>
   21244:	mov	r0, r9
   21248:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   2124c:	ldr	r3, [r9, #220]	; 0xdc
   21250:	add	r3, r3, #1
   21254:	str	r3, [r9, #220]	; 0xdc
   21258:	str	fp, [sp]
   2125c:	mov	r3, sl
   21260:	mov	r2, r7
   21264:	ldr	r1, [sp, #12]
   21268:	mov	r0, r9
   2126c:	bl	20f70 <__flatcc_fb_gen_c_verifier@@Base+0x273c>
   21270:	ldr	r3, [r9, #220]	; 0xdc
   21274:	cmp	r3, #0
   21278:	beq	212b4 <__flatcc_fb_gen_c_verifier@@Base+0x2a80>
   2127c:	sub	r3, r3, #1
   21280:	str	r3, [r9, #220]	; 0xdc
   21284:	ldr	r3, [sp, #60]	; 0x3c
   21288:	ldr	r2, [sp, #56]	; 0x38
   2128c:	ldr	r1, [pc, #1316]	; 217b8 <__flatcc_fb_gen_c_verifier@@Base+0x2f84>
   21290:	mov	r0, r9
   21294:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   21298:	add	sp, sp, #84	; 0x54
   2129c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   212a0:	ldr	r3, [pc, #1300]	; 217bc <__flatcc_fb_gen_c_verifier@@Base+0x2f88>
   212a4:	ldr	r2, [pc, #1300]	; 217c0 <__flatcc_fb_gen_c_verifier@@Base+0x2f8c>
   212a8:	ldr	r1, [pc, #1300]	; 217c4 <__flatcc_fb_gen_c_verifier@@Base+0x2f90>
   212ac:	ldr	r0, [pc, #1300]	; 217c8 <__flatcc_fb_gen_c_verifier@@Base+0x2f94>
   212b0:	bl	14148 <__assert_fail@plt>
   212b4:	ldr	r3, [pc, #1280]	; 217bc <__flatcc_fb_gen_c_verifier@@Base+0x2f88>
   212b8:	ldr	r2, [pc, #1292]	; 217cc <__flatcc_fb_gen_c_verifier@@Base+0x2f98>
   212bc:	ldr	r1, [pc, #1280]	; 217c4 <__flatcc_fb_gen_c_verifier@@Base+0x2f90>
   212c0:	ldr	r0, [pc, #1280]	; 217c8 <__flatcc_fb_gen_c_verifier@@Base+0x2f94>
   212c4:	bl	14148 <__assert_fail@plt>
   212c8:	add	r7, r4, #1
   212cc:	b	21144 <__flatcc_fb_gen_c_verifier@@Base+0x2910>
   212d0:	add	r5, r5, #1
   212d4:	add	r2, r2, #16
   212d8:	cmp	r4, r5
   212dc:	blt	212fc <__flatcc_fb_gen_c_verifier@@Base+0x2ac8>
   212e0:	ldr	r3, [r2, #4]
   212e4:	cmp	r1, r3
   212e8:	bgt	212d0 <__flatcc_fb_gen_c_verifier@@Base+0x2a9c>
   212ec:	sub	r3, r3, fp
   212f0:	sub	r3, r3, #8
   212f4:	cmp	r3, #0
   212f8:	ble	212d0 <__flatcc_fb_gen_c_verifier@@Base+0x2a9c>
   212fc:	cmp	r7, r5
   21300:	ble	21538 <__flatcc_fb_gen_c_verifier@@Base+0x2d04>
   21304:	cmp	r8, r5
   21308:	bge	21654 <__flatcc_fb_gen_c_verifier@@Base+0x2e20>
   2130c:	sub	r6, r5, #-268435455	; 0xf0000001
   21310:	lsl	r6, r6, #4
   21314:	add	r3, r0, r6
   21318:	ldr	r3, [r3, #4]
   2131c:	ldr	r2, [sp, #16]
   21320:	cmp	r2, r3
   21324:	blt	216e0 <__flatcc_fb_gen_c_verifier@@Base+0x2eac>
   21328:	sub	r3, r3, fp
   2132c:	str	r3, [sp, #20]
   21330:	add	ip, r6, #16
   21334:	add	r3, sp, #56	; 0x38
   21338:	str	r3, [sp, #4]
   2133c:	add	r3, sp, #60	; 0x3c
   21340:	str	r3, [sp]
   21344:	add	r3, sp, #64	; 0x40
   21348:	add	r2, sp, #72	; 0x48
   2134c:	mov	r1, fp
   21350:	add	r0, r0, ip
   21354:	bl	1eb5c <__flatcc_fb_gen_c_verifier@@Base+0x328>
   21358:	ldr	r3, [sp, #60]	; 0x3c
   2135c:	str	r3, [sp, #4]
   21360:	ldr	r3, [sp, #56]	; 0x38
   21364:	str	r3, [sp]
   21368:	ldrd	r2, [sp, #72]	; 0x48
   2136c:	ldr	r1, [pc, #1116]	; 217d0 <__flatcc_fb_gen_c_verifier@@Base+0x2f9c>
   21370:	mov	r0, r9
   21374:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   21378:	ldr	r3, [r9, #220]	; 0xdc
   2137c:	add	r3, r3, #1
   21380:	str	r3, [r9, #220]	; 0xdc
   21384:	ldr	r3, [sp, #20]
   21388:	cmp	r3, #8
   2138c:	bne	21734 <__flatcc_fb_gen_c_verifier@@Base+0x2f00>
   21390:	ldr	r3, [sp, #60]	; 0x3c
   21394:	ldr	r2, [sp, #56]	; 0x38
   21398:	ldr	r1, [pc, #1076]	; 217d4 <__flatcc_fb_gen_c_verifier@@Base+0x2fa0>
   2139c:	mov	r0, r9
   213a0:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   213a4:	ldr	r0, [sp, #12]
   213a8:	ldr	r3, [r0]
   213ac:	add	r6, r3, r6
   213b0:	ldr	r3, [r6, #12]
   213b4:	ldr	r2, [r6, #8]
   213b8:	ldr	r1, [r0, #12]
   213bc:	str	r1, [sp, #20]
   213c0:	mov	r1, #8
   213c4:	str	r1, [sp]
   213c8:	ldr	r6, [r0, #4]
   213cc:	ldr	r1, [sp, #20]
   213d0:	mov	r0, r9
   213d4:	blx	r6
   213d8:	ldr	r3, [sp, #60]	; 0x3c
   213dc:	ldr	r2, [sp, #56]	; 0x38
   213e0:	ldr	r1, [pc, #1008]	; 217d8 <__flatcc_fb_gen_c_verifier@@Base+0x2fa4>
   213e4:	mov	r0, r9
   213e8:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   213ec:	ldr	r1, [pc, #1000]	; 217dc <__flatcc_fb_gen_c_verifier@@Base+0x2fa8>
   213f0:	mov	r0, r9
   213f4:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   213f8:	ldr	r1, [pc, #992]	; 217e0 <__flatcc_fb_gen_c_verifier@@Base+0x2fac>
   213fc:	mov	r0, r9
   21400:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   21404:	ldr	r2, [sp, #16]
   21408:	str	r2, [sp]
   2140c:	mov	r3, r4
   21410:	mov	r2, r5
   21414:	ldr	r1, [sp, #12]
   21418:	mov	r0, r9
   2141c:	bl	20f70 <__flatcc_fb_gen_c_verifier@@Base+0x273c>
   21420:	ldr	r3, [r9, #220]	; 0xdc
   21424:	cmp	r3, #0
   21428:	beq	21510 <__flatcc_fb_gen_c_verifier@@Base+0x2cdc>
   2142c:	sub	r3, r3, #1
   21430:	str	r3, [r9, #220]	; 0xdc
   21434:	ldr	r3, [sp, #60]	; 0x3c
   21438:	ldr	r2, [sp, #56]	; 0x38
   2143c:	ldr	r1, [pc, #928]	; 217e4 <__flatcc_fb_gen_c_verifier@@Base+0x2fb0>
   21440:	mov	r0, r9
   21444:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   21448:	str	r5, [sp, #16]
   2144c:	sub	r5, r5, #1
   21450:	ldr	r3, [r9, #220]	; 0xdc
   21454:	cmp	r3, #0
   21458:	beq	21524 <__flatcc_fb_gen_c_verifier@@Base+0x2cf0>
   2145c:	sub	r3, r3, #1
   21460:	str	r3, [r9, #220]	; 0xdc
   21464:	ldr	r3, [sp, #60]	; 0x3c
   21468:	ldr	r2, [sp, #56]	; 0x38
   2146c:	ldr	r1, [pc, #884]	; 217e8 <__flatcc_fb_gen_c_verifier@@Base+0x2fb4>
   21470:	mov	r0, r9
   21474:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   21478:	ldr	r3, [r9, #220]	; 0xdc
   2147c:	add	r3, r3, #1
   21480:	str	r3, [r9, #220]	; 0xdc
   21484:	cmp	sl, r7
   21488:	cmpge	r5, r8
   2148c:	movgt	r6, #1
   21490:	movle	r6, #0
   21494:	ble	21540 <__flatcc_fb_gen_c_verifier@@Base+0x2d0c>
   21498:	ldr	r3, [sp, #12]
   2149c:	ldr	r4, [r3, #24]
   214a0:	add	r4, r4, #1
   214a4:	str	r4, [r3, #24]
   214a8:	cmp	r5, r8
   214ac:	bgt	21770 <__flatcc_fb_gen_c_verifier@@Base+0x2f3c>
   214b0:	cmp	sl, r7
   214b4:	blt	21550 <__flatcc_fb_gen_c_verifier@@Base+0x2d1c>
   214b8:	str	fp, [sp]
   214bc:	mov	r3, sl
   214c0:	mov	r2, r7
   214c4:	ldr	r1, [sp, #12]
   214c8:	mov	r0, r9
   214cc:	bl	20f70 <__flatcc_fb_gen_c_verifier@@Base+0x273c>
   214d0:	cmp	r6, #0
   214d4:	beq	21558 <__flatcc_fb_gen_c_verifier@@Base+0x2d24>
   214d8:	ldr	r3, [r9, #220]	; 0xdc
   214dc:	str	r3, [r9, #228]	; 0xe4
   214e0:	mov	r3, #0
   214e4:	str	r3, [r9, #220]	; 0xdc
   214e8:	mov	r2, r4
   214ec:	ldr	r1, [pc, #760]	; 217ec <__flatcc_fb_gen_c_verifier@@Base+0x2fb8>
   214f0:	mov	r0, r9
   214f4:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   214f8:	ldr	r3, [r9, #228]	; 0xe4
   214fc:	str	r3, [r9, #220]	; 0xdc
   21500:	ldr	r1, [pc, #744]	; 217f0 <__flatcc_fb_gen_c_verifier@@Base+0x2fbc>
   21504:	mov	r0, r9
   21508:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   2150c:	b	21558 <__flatcc_fb_gen_c_verifier@@Base+0x2d24>
   21510:	ldr	r3, [pc, #676]	; 217bc <__flatcc_fb_gen_c_verifier@@Base+0x2f88>
   21514:	mov	r2, #1040	; 0x410
   21518:	ldr	r1, [pc, #676]	; 217c4 <__flatcc_fb_gen_c_verifier@@Base+0x2f90>
   2151c:	ldr	r0, [pc, #676]	; 217c8 <__flatcc_fb_gen_c_verifier@@Base+0x2f94>
   21520:	bl	14148 <__assert_fail@plt>
   21524:	ldr	r3, [pc, #656]	; 217bc <__flatcc_fb_gen_c_verifier@@Base+0x2f88>
   21528:	ldr	r2, [pc, #708]	; 217f4 <__flatcc_fb_gen_c_verifier@@Base+0x2fc0>
   2152c:	ldr	r1, [pc, #656]	; 217c4 <__flatcc_fb_gen_c_verifier@@Base+0x2f90>
   21530:	ldr	r0, [pc, #656]	; 217c8 <__flatcc_fb_gen_c_verifier@@Base+0x2f94>
   21534:	bl	14148 <__assert_fail@plt>
   21538:	str	r5, [sp, #16]
   2153c:	b	21484 <__flatcc_fb_gen_c_verifier@@Base+0x2c50>
   21540:	cmp	r5, r8
   21544:	bgt	21590 <__flatcc_fb_gen_c_verifier@@Base+0x2d5c>
   21548:	cmp	sl, r7
   2154c:	bge	21790 <__flatcc_fb_gen_c_verifier@@Base+0x2f5c>
   21550:	cmp	r5, r8
   21554:	ble	21618 <__flatcc_fb_gen_c_verifier@@Base+0x2de4>
   21558:	ldr	r3, [sp, #16]
   2155c:	cmp	r7, r3
   21560:	ble	21298 <__flatcc_fb_gen_c_verifier@@Base+0x2a64>
   21564:	ldr	r3, [r9, #220]	; 0xdc
   21568:	cmp	r3, #0
   2156c:	beq	2162c <__flatcc_fb_gen_c_verifier@@Base+0x2df8>
   21570:	sub	r3, r3, #1
   21574:	str	r3, [r9, #220]	; 0xdc
   21578:	ldr	r3, [sp, #60]	; 0x3c
   2157c:	ldr	r2, [sp, #56]	; 0x38
   21580:	ldr	r1, [pc, #624]	; 217f8 <__flatcc_fb_gen_c_verifier@@Base+0x2fc4>
   21584:	mov	r0, r9
   21588:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   2158c:	b	21298 <__flatcc_fb_gen_c_verifier@@Base+0x2a64>
   21590:	mov	r3, #0
   21594:	str	r3, [sp, #4]
   21598:	str	fp, [sp]
   2159c:	sub	r3, r5, #1
   215a0:	mov	r2, r8
   215a4:	ldr	r1, [sp, #12]
   215a8:	mov	r0, r9
   215ac:	bl	1ed54 <__flatcc_fb_gen_c_verifier@@Base+0x520>
   215b0:	cmp	r6, #0
   215b4:	beq	21548 <__flatcc_fb_gen_c_verifier@@Base+0x2d14>
   215b8:	mov	r4, #0
   215bc:	mov	r2, r4
   215c0:	ldr	r1, [pc, #564]	; 217fc <__flatcc_fb_gen_c_verifier@@Base+0x2fc8>
   215c4:	mov	r0, r9
   215c8:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   215cc:	ldr	r3, [r9, #220]	; 0xdc
   215d0:	str	r3, [r9, #228]	; 0xe4
   215d4:	mov	r3, #0
   215d8:	str	r3, [r9, #220]	; 0xdc
   215dc:	mov	r2, r4
   215e0:	ldr	r1, [pc, #536]	; 21800 <__flatcc_fb_gen_c_verifier@@Base+0x2fcc>
   215e4:	mov	r0, r9
   215e8:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   215ec:	ldr	r3, [r9, #228]	; 0xe4
   215f0:	str	r3, [r9, #220]	; 0xdc
   215f4:	cmp	sl, r7
   215f8:	blt	21550 <__flatcc_fb_gen_c_verifier@@Base+0x2d1c>
   215fc:	str	fp, [sp]
   21600:	mov	r3, sl
   21604:	mov	r2, r7
   21608:	ldr	r1, [sp, #12]
   2160c:	mov	r0, r9
   21610:	bl	20f70 <__flatcc_fb_gen_c_verifier@@Base+0x273c>
   21614:	b	214d8 <__flatcc_fb_gen_c_verifier@@Base+0x2ca4>
   21618:	ldr	r3, [sp, #12]
   2161c:	ldr	r3, [r3, #8]
   21620:	mov	r0, r9
   21624:	blx	r3
   21628:	b	21558 <__flatcc_fb_gen_c_verifier@@Base+0x2d24>
   2162c:	ldr	r3, [pc, #392]	; 217bc <__flatcc_fb_gen_c_verifier@@Base+0x2f88>
   21630:	mov	r2, #1072	; 0x430
   21634:	ldr	r1, [pc, #392]	; 217c4 <__flatcc_fb_gen_c_verifier@@Base+0x2f90>
   21638:	ldr	r0, [pc, #392]	; 217c8 <__flatcc_fb_gen_c_verifier@@Base+0x2f94>
   2163c:	bl	14148 <__assert_fail@plt>
   21640:	cmp	r8, r7
   21644:	strge	r8, [sp, #16]
   21648:	movge	r5, r8
   2164c:	bge	21484 <__flatcc_fb_gen_c_verifier@@Base+0x2c50>
   21650:	mov	r5, r8
   21654:	add	r3, sp, #56	; 0x38
   21658:	str	r3, [sp, #4]
   2165c:	add	r3, sp, #60	; 0x3c
   21660:	str	r3, [sp]
   21664:	add	r3, sp, #64	; 0x40
   21668:	add	r2, sp, #72	; 0x48
   2166c:	mov	r1, fp
   21670:	add	r0, r0, r5, lsl #4
   21674:	bl	1eb5c <__flatcc_fb_gen_c_verifier@@Base+0x328>
   21678:	ldr	r3, [sp, #60]	; 0x3c
   2167c:	str	r3, [sp, #4]
   21680:	ldr	r3, [sp, #56]	; 0x38
   21684:	str	r3, [sp]
   21688:	ldrd	r2, [sp, #72]	; 0x48
   2168c:	ldr	r1, [pc, #316]	; 217d0 <__flatcc_fb_gen_c_verifier@@Base+0x2f9c>
   21690:	mov	r0, r9
   21694:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   21698:	ldr	r3, [r9, #220]	; 0xdc
   2169c:	add	r3, r3, #1
   216a0:	str	r3, [r9, #220]	; 0xdc
   216a4:	ldr	r1, [pc, #304]	; 217dc <__flatcc_fb_gen_c_verifier@@Base+0x2fa8>
   216a8:	mov	r0, r9
   216ac:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   216b0:	ldr	r1, [pc, #296]	; 217e0 <__flatcc_fb_gen_c_verifier@@Base+0x2fac>
   216b4:	mov	r0, r9
   216b8:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   216bc:	ldr	r3, [sp, #16]
   216c0:	str	r3, [sp]
   216c4:	mov	r3, r4
   216c8:	mov	r2, r5
   216cc:	ldr	r1, [sp, #12]
   216d0:	mov	r0, r9
   216d4:	bl	20f70 <__flatcc_fb_gen_c_verifier@@Base+0x273c>
   216d8:	str	r5, [sp, #16]
   216dc:	b	21450 <__flatcc_fb_gen_c_verifier@@Base+0x2c1c>
   216e0:	add	r6, r6, #16
   216e4:	add	r3, sp, #56	; 0x38
   216e8:	str	r3, [sp, #4]
   216ec:	add	r3, sp, #60	; 0x3c
   216f0:	str	r3, [sp]
   216f4:	add	r3, sp, #64	; 0x40
   216f8:	add	r2, sp, #72	; 0x48
   216fc:	mov	r1, fp
   21700:	add	r0, r0, r6
   21704:	bl	1eb5c <__flatcc_fb_gen_c_verifier@@Base+0x328>
   21708:	ldr	r3, [sp, #60]	; 0x3c
   2170c:	str	r3, [sp, #4]
   21710:	ldr	r3, [sp, #56]	; 0x38
   21714:	str	r3, [sp]
   21718:	ldrd	r2, [sp, #72]	; 0x48
   2171c:	ldr	r1, [pc, #172]	; 217d0 <__flatcc_fb_gen_c_verifier@@Base+0x2f9c>
   21720:	mov	r0, r9
   21724:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   21728:	ldr	r3, [r9, #220]	; 0xdc
   2172c:	add	r3, r3, #1
   21730:	str	r3, [r9, #220]	; 0xdc
   21734:	ldr	r1, [pc, #160]	; 217dc <__flatcc_fb_gen_c_verifier@@Base+0x2fa8>
   21738:	mov	r0, r9
   2173c:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   21740:	ldr	r1, [pc, #152]	; 217e0 <__flatcc_fb_gen_c_verifier@@Base+0x2fac>
   21744:	mov	r0, r9
   21748:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   2174c:	ldr	r3, [sp, #16]
   21750:	str	r3, [sp]
   21754:	mov	r3, r4
   21758:	mov	r2, r5
   2175c:	ldr	r1, [sp, #12]
   21760:	mov	r0, r9
   21764:	bl	20f70 <__flatcc_fb_gen_c_verifier@@Base+0x273c>
   21768:	str	r5, [sp, #16]
   2176c:	b	21450 <__flatcc_fb_gen_c_verifier@@Base+0x2c1c>
   21770:	str	r4, [sp, #4]
   21774:	str	fp, [sp]
   21778:	sub	r3, r5, #1
   2177c:	mov	r2, r8
   21780:	ldr	r1, [sp, #12]
   21784:	mov	r0, r9
   21788:	bl	1ed54 <__flatcc_fb_gen_c_verifier@@Base+0x520>
   2178c:	b	215bc <__flatcc_fb_gen_c_verifier@@Base+0x2d88>
   21790:	str	fp, [sp]
   21794:	mov	r3, sl
   21798:	mov	r2, r7
   2179c:	ldr	r1, [sp, #12]
   217a0:	mov	r0, r9
   217a4:	bl	20f70 <__flatcc_fb_gen_c_verifier@@Base+0x273c>
   217a8:	b	21558 <__flatcc_fb_gen_c_verifier@@Base+0x2d24>
   217ac:	muleq	r4, r0, r4
   217b0:	andeq	r0, r5, ip, lsl #13
   217b4:			; <UNDEFINED> instruction: 0x000506b4
   217b8:	ldrdeq	r0, [r5], -r4
   217bc:	strdeq	pc, [r4], -r8
   217c0:	andeq	r0, r0, sp, asr #7
   217c4:	andeq	pc, r4, r0, lsl #11
   217c8:	ldrdeq	pc, [r4], -r8
   217cc:	andeq	r0, r0, pc, asr #7
   217d0:	andeq	r0, r5, ip, ror #13
   217d4:	andeq	r0, r5, r4, lsl r7
   217d8:	andeq	r0, r5, r4, lsr r7
   217dc:	andeq	r0, r5, r0, asr r7
   217e0:	andeq	r0, r5, ip, asr r7
   217e4:	andeq	r0, r5, ip, lsl #15
   217e8:	andeq	r0, r5, ip, lsr #15
   217ec:	andeq	r0, r5, ip, ror #15
   217f0:	strdeq	r0, [r5], -ip
   217f4:	andeq	r0, r0, r4, lsl r4
   217f8:	andeq	r0, r5, r8, lsl #16
   217fc:	andeq	r0, r5, ip, asr #15
   21800:	andeq	r0, r5, r0, ror #15
   21804:	push	{r4, r5, r6, r7, lr}
   21808:	sub	sp, sp, #260	; 0x104
   2180c:	mov	r4, r0
   21810:	mov	r6, r1
   21814:	mov	r5, #0
   21818:	str	r5, [sp, #228]	; 0xe4
   2181c:	str	r5, [sp, #232]	; 0xe8
   21820:	str	r5, [sp, #236]	; 0xec
   21824:	str	r5, [sp, #240]	; 0xf0
   21828:	str	r5, [sp, #244]	; 0xf4
   2182c:	str	r5, [sp, #248]	; 0xf8
   21830:	str	r5, [sp, #252]	; 0xfc
   21834:	add	r1, sp, #24
   21838:	mov	r0, r6
   2183c:	bl	15e20 <__flatcc_fb_copy_scope@@Base>
   21840:	ldr	r3, [r4, #208]	; 0xd0
   21844:	str	r5, [sp, #12]
   21848:	str	r5, [sp, #20]
   2184c:	str	r3, [sp, #16]
   21850:	add	r6, r6, #4
   21854:	add	r2, sp, #12
   21858:	ldr	r1, [pc, #604]	; 21abc <__flatcc_fb_gen_c_verifier@@Base+0x3288>
   2185c:	mov	r0, r6
   21860:	bl	28510 <fb_symbol_table_visit@@Base>
   21864:	ldr	r5, [sp, #12]
   21868:	cmp	r5, #0
   2186c:	beq	21ab4 <__flatcc_fb_gen_c_verifier@@Base+0x3280>
   21870:	lsl	r0, r5, #4
   21874:	bl	14040 <malloc@plt>
   21878:	subs	r7, r0, #0
   2187c:	beq	21994 <__flatcc_fb_gen_c_verifier@@Base+0x3160>
   21880:	str	r7, [sp, #20]
   21884:	add	r2, sp, #12
   21888:	ldr	r1, [pc, #560]	; 21ac0 <__flatcc_fb_gen_c_verifier@@Base+0x328c>
   2188c:	mov	r0, r6
   21890:	bl	28510 <fb_symbol_table_visit@@Base>
   21894:	ldr	r3, [pc, #552]	; 21ac4 <__flatcc_fb_gen_c_verifier@@Base+0x3290>
   21898:	mov	r2, #16
   2189c:	ldr	r1, [sp, #12]
   218a0:	mov	r0, r7
   218a4:	bl	14118 <qsort@plt>
   218a8:	str	r7, [sp, #228]	; 0xe4
   218ac:	mov	r3, #0
   218b0:	str	r3, [sp, #240]	; 0xf0
   218b4:	mov	r3, #3
   218b8:	str	r3, [sp, #244]	; 0xf4
   218bc:	ldr	r3, [pc, #516]	; 21ac8 <__flatcc_fb_gen_c_verifier@@Base+0x3294>
   218c0:	str	r3, [sp, #232]	; 0xe8
   218c4:	ldr	r3, [pc, #512]	; 21acc <__flatcc_fb_gen_c_verifier@@Base+0x3298>
   218c8:	str	r3, [sp, #236]	; 0xec
   218cc:	ldr	r2, [r4, #208]	; 0xd0
   218d0:	add	r3, sp, #24
   218d4:	ldr	r2, [r2, #160]	; 0xa0
   218d8:	ldr	r1, [pc, #496]	; 21ad0 <__flatcc_fb_gen_c_verifier@@Base+0x329c>
   218dc:	mov	r0, r4
   218e0:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   218e4:	ldr	r3, [r4, #220]	; 0xdc
   218e8:	add	r3, r3, #2
   218ec:	str	r3, [r4, #220]	; 0xdc
   218f0:	ldr	r1, [pc, #476]	; 21ad4 <__flatcc_fb_gen_c_verifier@@Base+0x32a0>
   218f4:	mov	r0, r4
   218f8:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   218fc:	ldr	r3, [r4, #220]	; 0xdc
   21900:	cmp	r3, #0
   21904:	beq	219e0 <__flatcc_fb_gen_c_verifier@@Base+0x31ac>
   21908:	sub	r2, r3, #1
   2190c:	str	r2, [r4, #220]	; 0xdc
   21910:	cmp	r2, #0
   21914:	beq	219f4 <__flatcc_fb_gen_c_verifier@@Base+0x31c0>
   21918:	sub	r3, r3, #2
   2191c:	str	r3, [r4, #220]	; 0xdc
   21920:	ldr	r1, [pc, #432]	; 21ad8 <__flatcc_fb_gen_c_verifier@@Base+0x32a4>
   21924:	mov	r0, r4
   21928:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   2192c:	ldr	r3, [r4, #220]	; 0xdc
   21930:	add	r3, r3, #1
   21934:	str	r3, [r4, #220]	; 0xdc
   21938:	cmp	r5, #0
   2193c:	bne	21a1c <__flatcc_fb_gen_c_verifier@@Base+0x31e8>
   21940:	ldr	r1, [pc, #404]	; 21adc <__flatcc_fb_gen_c_verifier@@Base+0x32a8>
   21944:	mov	r0, r4
   21948:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   2194c:	ldr	r1, [pc, #396]	; 21ae0 <__flatcc_fb_gen_c_verifier@@Base+0x32ac>
   21950:	mov	r0, r4
   21954:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   21958:	ldr	r3, [r4, #220]	; 0xdc
   2195c:	cmp	r3, #0
   21960:	beq	21a08 <__flatcc_fb_gen_c_verifier@@Base+0x31d4>
   21964:	sub	r3, r3, #1
   21968:	str	r3, [r4, #220]	; 0xdc
   2196c:	ldr	r1, [pc, #368]	; 21ae4 <__flatcc_fb_gen_c_verifier@@Base+0x32b0>
   21970:	mov	r0, r4
   21974:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   21978:	ldr	r1, [pc, #360]	; 21ae8 <__flatcc_fb_gen_c_verifier@@Base+0x32b4>
   2197c:	mov	r0, r4
   21980:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   21984:	ldr	r0, [sp, #228]	; 0xe4
   21988:	bl	20bf8 <__flatcc_fb_gen_c_verifier@@Base+0x23c4>
   2198c:	add	sp, sp, #260	; 0x104
   21990:	pop	{r4, r5, r6, r7, pc}
   21994:	mov	r3, #0
   21998:	str	r3, [sp, #228]	; 0xe4
   2199c:	cmp	r5, r3
   219a0:	ble	218ac <__flatcc_fb_gen_c_verifier@@Base+0x3078>
   219a4:	ldr	r5, [pc, #320]	; 21aec <__flatcc_fb_gen_c_verifier@@Base+0x32b8>
   219a8:	ldr	r4, [pc, #320]	; 21af0 <__flatcc_fb_gen_c_verifier@@Base+0x32bc>
   219ac:	ldr	r3, [pc, #320]	; 21af4 <__flatcc_fb_gen_c_verifier@@Base+0x32c0>
   219b0:	str	r3, [sp]
   219b4:	mov	r3, r5
   219b8:	mov	r2, r4
   219bc:	ldr	r1, [pc, #308]	; 21af8 <__flatcc_fb_gen_c_verifier@@Base+0x32c4>
   219c0:	ldr	r0, [pc, #308]	; 21afc <__flatcc_fb_gen_c_verifier@@Base+0x32c8>
   219c4:	ldr	r0, [r0]
   219c8:	bl	14094 <fprintf@plt>
   219cc:	ldr	r3, [pc, #300]	; 21b00 <__flatcc_fb_gen_c_verifier@@Base+0x32cc>
   219d0:	mov	r2, r5
   219d4:	mov	r1, r4
   219d8:	ldr	r0, [pc, #292]	; 21b04 <__flatcc_fb_gen_c_verifier@@Base+0x32d0>
   219dc:	bl	14148 <__assert_fail@plt>
   219e0:	ldr	r3, [pc, #280]	; 21b00 <__flatcc_fb_gen_c_verifier@@Base+0x32cc>
   219e4:	mov	r2, #1152	; 0x480
   219e8:	ldr	r1, [pc, #256]	; 21af0 <__flatcc_fb_gen_c_verifier@@Base+0x32bc>
   219ec:	ldr	r0, [pc, #276]	; 21b08 <__flatcc_fb_gen_c_verifier@@Base+0x32d4>
   219f0:	bl	14148 <__assert_fail@plt>
   219f4:	ldr	r3, [pc, #260]	; 21b00 <__flatcc_fb_gen_c_verifier@@Base+0x32cc>
   219f8:	mov	r2, #1152	; 0x480
   219fc:	ldr	r1, [pc, #236]	; 21af0 <__flatcc_fb_gen_c_verifier@@Base+0x32bc>
   21a00:	ldr	r0, [pc, #256]	; 21b08 <__flatcc_fb_gen_c_verifier@@Base+0x32d4>
   21a04:	bl	14148 <__assert_fail@plt>
   21a08:	ldr	r3, [pc, #240]	; 21b00 <__flatcc_fb_gen_c_verifier@@Base+0x32cc>
   21a0c:	ldr	r2, [pc, #248]	; 21b0c <__flatcc_fb_gen_c_verifier@@Base+0x32d8>
   21a10:	ldr	r1, [pc, #216]	; 21af0 <__flatcc_fb_gen_c_verifier@@Base+0x32bc>
   21a14:	ldr	r0, [pc, #236]	; 21b08 <__flatcc_fb_gen_c_verifier@@Base+0x32d4>
   21a18:	bl	14148 <__assert_fail@plt>
   21a1c:	ldr	r1, [pc, #236]	; 21b10 <__flatcc_fb_gen_c_verifier@@Base+0x32dc>
   21a20:	mov	r0, r4
   21a24:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   21a28:	ldr	r1, [pc, #228]	; 21b14 <__flatcc_fb_gen_c_verifier@@Base+0x32e0>
   21a2c:	mov	r0, r4
   21a30:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   21a34:	ldr	r1, [pc, #220]	; 21b18 <__flatcc_fb_gen_c_verifier@@Base+0x32e4>
   21a38:	mov	r0, r4
   21a3c:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   21a40:	ldr	r1, [pc, #160]	; 21ae8 <__flatcc_fb_gen_c_verifier@@Base+0x32b4>
   21a44:	mov	r0, r4
   21a48:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   21a4c:	ldr	r1, [pc, #200]	; 21b1c <__flatcc_fb_gen_c_verifier@@Base+0x32e8>
   21a50:	mov	r0, r4
   21a54:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   21a58:	mov	r2, #0
   21a5c:	str	r2, [sp]
   21a60:	sub	r3, r5, #1
   21a64:	add	r1, sp, #228	; 0xe4
   21a68:	mov	r0, r4
   21a6c:	bl	20f70 <__flatcc_fb_gen_c_verifier@@Base+0x273c>
   21a70:	ldr	r1, [pc, #168]	; 21b20 <__flatcc_fb_gen_c_verifier@@Base+0x32ec>
   21a74:	mov	r0, r4
   21a78:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   21a7c:	ldr	r3, [r4, #220]	; 0xdc
   21a80:	cmp	r3, #0
   21a84:	beq	21aa0 <__flatcc_fb_gen_c_verifier@@Base+0x326c>
   21a88:	sub	r3, r3, #1
   21a8c:	str	r3, [r4, #220]	; 0xdc
   21a90:	ldr	r1, [pc, #76]	; 21ae4 <__flatcc_fb_gen_c_verifier@@Base+0x32b0>
   21a94:	mov	r0, r4
   21a98:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   21a9c:	b	21978 <__flatcc_fb_gen_c_verifier@@Base+0x3144>
   21aa0:	ldr	r3, [pc, #88]	; 21b00 <__flatcc_fb_gen_c_verifier@@Base+0x32cc>
   21aa4:	ldr	r2, [pc, #120]	; 21b24 <__flatcc_fb_gen_c_verifier@@Base+0x32f0>
   21aa8:	ldr	r1, [pc, #64]	; 21af0 <__flatcc_fb_gen_c_verifier@@Base+0x32bc>
   21aac:	ldr	r0, [pc, #84]	; 21b08 <__flatcc_fb_gen_c_verifier@@Base+0x32d4>
   21ab0:	bl	14148 <__assert_fail@plt>
   21ab4:	mov	r7, #0
   21ab8:	b	218a8 <__flatcc_fb_gen_c_verifier@@Base+0x3074>
   21abc:			; <UNDEFINED> instruction: 0x00020abc
   21ac0:	andeq	r0, r2, ip, lsr sl
   21ac4:	andeq	r0, r2, ip, lsl #20
   21ac8:	andeq	pc, r1, r0, ror #4
   21acc:	andeq	lr, r1, r8, lsl sp
   21ad0:	strdeq	pc, [r4], -ip
   21ad4:	andeq	r0, r5, ip, asr r8
   21ad8:	andeq	r2, r5, r0, asr #3
   21adc:	muleq	r5, r0, r8
   21ae0:	andeq	r0, r5, r4, asr #17
   21ae4:	andeq	pc, r4, r4, ror #11
   21ae8:	muleq	r4, r0, r4
   21aec:	andeq	r0, r0, r4, ror r4
   21af0:	andeq	pc, r4, r0, lsl #11
   21af4:	andeq	r0, r5, r0, lsr #16
   21af8:	andeq	ip, r3, r8, lsr #27
   21afc:	andeq	r7, r6, r8, lsr #1
   21b00:	andeq	pc, r4, r4, lsl #8
   21b04:	andeq	r5, r4, r0, ror #3
   21b08:	ldrdeq	pc, [r4], -r8
   21b0c:	andeq	r0, r0, r5, lsl #9
   21b10:	andeq	r0, r5, r4, ror #17
   21b14:	andeq	r0, r5, r4, lsl #18
   21b18:	andeq	r0, r5, r8, lsl r9
   21b1c:	andeq	r0, r5, ip, asr r7
   21b20:	andeq	pc, r4, r4, lsr fp	; <UNPREDICTABLE>
   21b24:	andeq	r0, r0, lr, lsl #9
   21b28:	push	{r4, r5, lr}
   21b2c:	sub	sp, sp, #268	; 0x10c
   21b30:	mov	r3, #0
   21b34:	str	r3, [sp, #40]	; 0x28
   21b38:	str	r3, [sp, #12]
   21b3c:	str	r3, [sp, #16]
   21b40:	str	r3, [sp, #20]
   21b44:	str	r3, [sp, #24]
   21b48:	str	r3, [sp, #28]
   21b4c:	str	r3, [sp, #32]
   21b50:	str	r3, [sp, #36]	; 0x24
   21b54:	ldrh	r3, [r1, #8]
   21b58:	sub	r3, r3, #3
   21b5c:	uxth	r3, r3
   21b60:	cmp	r3, #1
   21b64:	bhi	21c98 <__flatcc_fb_gen_c_verifier@@Base+0x3464>
   21b68:	mov	r4, r0
   21b6c:	mov	r5, r1
   21b70:	add	r1, sp, #40	; 0x28
   21b74:	mov	r0, r5
   21b78:	bl	20d90 <__flatcc_fb_gen_c_verifier@@Base+0x255c>
   21b7c:	str	r0, [sp, #12]
   21b80:	cmp	r0, #0
   21b84:	beq	21cac <__flatcc_fb_gen_c_verifier@@Base+0x3478>
   21b88:	str	r5, [sp, #24]
   21b8c:	mov	r3, #2
   21b90:	str	r3, [sp, #28]
   21b94:	ldr	r3, [pc, #560]	; 21dcc <__flatcc_fb_gen_c_verifier@@Base+0x3598>
   21b98:	str	r3, [sp, #16]
   21b9c:	ldr	r3, [pc, #556]	; 21dd0 <__flatcc_fb_gen_c_verifier@@Base+0x359c>
   21ba0:	str	r3, [sp, #20]
   21ba4:	mov	r2, #220	; 0xdc
   21ba8:	mov	r1, #0
   21bac:	add	r0, sp, #44	; 0x2c
   21bb0:	bl	140ac <memset@plt>
   21bb4:	add	r2, sp, #44	; 0x2c
   21bb8:	mov	r1, r5
   21bbc:	ldr	r0, [r5, #12]
   21bc0:	bl	15edc <__flatcc_fb_scoped_symbol_name@@Base>
   21bc4:	add	r2, sp, #44	; 0x2c
   21bc8:	ldr	r1, [pc, #516]	; 21dd4 <__flatcc_fb_gen_c_verifier@@Base+0x35a0>
   21bcc:	mov	r0, r4
   21bd0:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   21bd4:	ldr	r3, [r4, #220]	; 0xdc
   21bd8:	add	r3, r3, #2
   21bdc:	str	r3, [r4, #220]	; 0xdc
   21be0:	ldr	r1, [pc, #496]	; 21dd8 <__flatcc_fb_gen_c_verifier@@Base+0x35a4>
   21be4:	mov	r0, r4
   21be8:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   21bec:	ldr	r3, [r4, #220]	; 0xdc
   21bf0:	cmp	r3, #0
   21bf4:	beq	21cf4 <__flatcc_fb_gen_c_verifier@@Base+0x34c0>
   21bf8:	sub	r2, r3, #1
   21bfc:	str	r2, [r4, #220]	; 0xdc
   21c00:	cmp	r2, #0
   21c04:	beq	21d08 <__flatcc_fb_gen_c_verifier@@Base+0x34d4>
   21c08:	sub	r3, r3, #2
   21c0c:	str	r3, [r4, #220]	; 0xdc
   21c10:	ldr	r1, [pc, #452]	; 21ddc <__flatcc_fb_gen_c_verifier@@Base+0x35a8>
   21c14:	mov	r0, r4
   21c18:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   21c1c:	ldr	r3, [r4, #220]	; 0xdc
   21c20:	add	r3, r3, #1
   21c24:	str	r3, [r4, #220]	; 0xdc
   21c28:	ldr	r3, [sp, #40]	; 0x28
   21c2c:	cmp	r3, #0
   21c30:	bne	21d30 <__flatcc_fb_gen_c_verifier@@Base+0x34fc>
   21c34:	ldr	r1, [pc, #420]	; 21de0 <__flatcc_fb_gen_c_verifier@@Base+0x35ac>
   21c38:	mov	r0, r4
   21c3c:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   21c40:	ldr	r1, [pc, #412]	; 21de4 <__flatcc_fb_gen_c_verifier@@Base+0x35b0>
   21c44:	mov	r0, r4
   21c48:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   21c4c:	ldr	r1, [pc, #404]	; 21de8 <__flatcc_fb_gen_c_verifier@@Base+0x35b4>
   21c50:	mov	r0, r4
   21c54:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   21c58:	ldr	r3, [r4, #220]	; 0xdc
   21c5c:	cmp	r3, #0
   21c60:	beq	21d1c <__flatcc_fb_gen_c_verifier@@Base+0x34e8>
   21c64:	sub	r3, r3, #1
   21c68:	str	r3, [r4, #220]	; 0xdc
   21c6c:	ldr	r1, [pc, #376]	; 21dec <__flatcc_fb_gen_c_verifier@@Base+0x35b8>
   21c70:	mov	r0, r4
   21c74:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   21c78:	ldr	r1, [pc, #368]	; 21df0 <__flatcc_fb_gen_c_verifier@@Base+0x35bc>
   21c7c:	mov	r0, r4
   21c80:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   21c84:	ldr	r0, [sp, #12]
   21c88:	bl	20bf8 <__flatcc_fb_gen_c_verifier@@Base+0x23c4>
   21c8c:	mov	r0, #0
   21c90:	add	sp, sp, #268	; 0x10c
   21c94:	pop	{r4, r5, pc}
   21c98:	ldr	r3, [pc, #340]	; 21df4 <__flatcc_fb_gen_c_verifier@@Base+0x35c0>
   21c9c:	ldr	r2, [pc, #340]	; 21df8 <__flatcc_fb_gen_c_verifier@@Base+0x35c4>
   21ca0:	ldr	r1, [pc, #340]	; 21dfc <__flatcc_fb_gen_c_verifier@@Base+0x35c8>
   21ca4:	ldr	r0, [pc, #340]	; 21e00 <__flatcc_fb_gen_c_verifier@@Base+0x35cc>
   21ca8:	bl	14148 <__assert_fail@plt>
   21cac:	ldr	r3, [sp, #40]	; 0x28
   21cb0:	cmp	r3, #0
   21cb4:	ble	21b88 <__flatcc_fb_gen_c_verifier@@Base+0x3354>
   21cb8:	ldr	r5, [pc, #324]	; 21e04 <__flatcc_fb_gen_c_verifier@@Base+0x35d0>
   21cbc:	ldr	r4, [pc, #312]	; 21dfc <__flatcc_fb_gen_c_verifier@@Base+0x35c8>
   21cc0:	ldr	r3, [pc, #320]	; 21e08 <__flatcc_fb_gen_c_verifier@@Base+0x35d4>
   21cc4:	str	r3, [sp]
   21cc8:	mov	r3, r5
   21ccc:	mov	r2, r4
   21cd0:	ldr	r1, [pc, #308]	; 21e0c <__flatcc_fb_gen_c_verifier@@Base+0x35d8>
   21cd4:	ldr	r0, [pc, #308]	; 21e10 <__flatcc_fb_gen_c_verifier@@Base+0x35dc>
   21cd8:	ldr	r0, [r0]
   21cdc:	bl	14094 <fprintf@plt>
   21ce0:	ldr	r3, [pc, #268]	; 21df4 <__flatcc_fb_gen_c_verifier@@Base+0x35c0>
   21ce4:	mov	r2, r5
   21ce8:	mov	r1, r4
   21cec:	ldr	r0, [pc, #288]	; 21e14 <__flatcc_fb_gen_c_verifier@@Base+0x35e0>
   21cf0:	bl	14148 <__assert_fail@plt>
   21cf4:	ldr	r3, [pc, #248]	; 21df4 <__flatcc_fb_gen_c_verifier@@Base+0x35c0>
   21cf8:	ldr	r2, [pc, #280]	; 21e18 <__flatcc_fb_gen_c_verifier@@Base+0x35e4>
   21cfc:	ldr	r1, [pc, #248]	; 21dfc <__flatcc_fb_gen_c_verifier@@Base+0x35c8>
   21d00:	ldr	r0, [pc, #276]	; 21e1c <__flatcc_fb_gen_c_verifier@@Base+0x35e8>
   21d04:	bl	14148 <__assert_fail@plt>
   21d08:	ldr	r3, [pc, #228]	; 21df4 <__flatcc_fb_gen_c_verifier@@Base+0x35c0>
   21d0c:	ldr	r2, [pc, #260]	; 21e18 <__flatcc_fb_gen_c_verifier@@Base+0x35e4>
   21d10:	ldr	r1, [pc, #228]	; 21dfc <__flatcc_fb_gen_c_verifier@@Base+0x35c8>
   21d14:	ldr	r0, [pc, #256]	; 21e1c <__flatcc_fb_gen_c_verifier@@Base+0x35e8>
   21d18:	bl	14148 <__assert_fail@plt>
   21d1c:	ldr	r3, [pc, #208]	; 21df4 <__flatcc_fb_gen_c_verifier@@Base+0x35c0>
   21d20:	ldr	r2, [pc, #248]	; 21e20 <__flatcc_fb_gen_c_verifier@@Base+0x35ec>
   21d24:	ldr	r1, [pc, #208]	; 21dfc <__flatcc_fb_gen_c_verifier@@Base+0x35c8>
   21d28:	ldr	r0, [pc, #236]	; 21e1c <__flatcc_fb_gen_c_verifier@@Base+0x35e8>
   21d2c:	bl	14148 <__assert_fail@plt>
   21d30:	ldr	r1, [pc, #236]	; 21e24 <__flatcc_fb_gen_c_verifier@@Base+0x35f0>
   21d34:	mov	r0, r4
   21d38:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   21d3c:	ldr	r1, [pc, #228]	; 21e28 <__flatcc_fb_gen_c_verifier@@Base+0x35f4>
   21d40:	mov	r0, r4
   21d44:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   21d48:	ldr	r1, [pc, #220]	; 21e2c <__flatcc_fb_gen_c_verifier@@Base+0x35f8>
   21d4c:	mov	r0, r4
   21d50:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   21d54:	ldr	r1, [pc, #148]	; 21df0 <__flatcc_fb_gen_c_verifier@@Base+0x35bc>
   21d58:	mov	r0, r4
   21d5c:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   21d60:	ldr	r1, [pc, #200]	; 21e30 <__flatcc_fb_gen_c_verifier@@Base+0x35fc>
   21d64:	mov	r0, r4
   21d68:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   21d6c:	mov	r2, #0
   21d70:	str	r2, [sp]
   21d74:	ldr	r3, [sp, #40]	; 0x28
   21d78:	sub	r3, r3, #1
   21d7c:	add	r1, sp, #12
   21d80:	mov	r0, r4
   21d84:	bl	20f70 <__flatcc_fb_gen_c_verifier@@Base+0x273c>
   21d88:	ldr	r1, [pc, #164]	; 21e34 <__flatcc_fb_gen_c_verifier@@Base+0x3600>
   21d8c:	mov	r0, r4
   21d90:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   21d94:	ldr	r3, [r4, #220]	; 0xdc
   21d98:	cmp	r3, #0
   21d9c:	beq	21db8 <__flatcc_fb_gen_c_verifier@@Base+0x3584>
   21da0:	sub	r3, r3, #1
   21da4:	str	r3, [r4, #220]	; 0xdc
   21da8:	ldr	r1, [pc, #60]	; 21dec <__flatcc_fb_gen_c_verifier@@Base+0x35b8>
   21dac:	mov	r0, r4
   21db0:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   21db4:	b	21c78 <__flatcc_fb_gen_c_verifier@@Base+0x3444>
   21db8:	ldr	r3, [pc, #52]	; 21df4 <__flatcc_fb_gen_c_verifier@@Base+0x35c0>
   21dbc:	ldr	r2, [pc, #116]	; 21e38 <__flatcc_fb_gen_c_verifier@@Base+0x3604>
   21dc0:	ldr	r1, [pc, #52]	; 21dfc <__flatcc_fb_gen_c_verifier@@Base+0x35c8>
   21dc4:	ldr	r0, [pc, #80]	; 21e1c <__flatcc_fb_gen_c_verifier@@Base+0x35e8>
   21dc8:	bl	14148 <__assert_fail@plt>
   21dcc:	strheq	pc, [r1], -r4	; <UNPREDICTABLE>
   21dd0:	andeq	lr, r1, r0, asr #26
   21dd4:	andeq	r0, r5, r4, lsr #18
   21dd8:	andeq	r0, r5, r8, lsl #19
   21ddc:	andeq	r2, r5, r0, asr #3
   21de0:			; <UNDEFINED> instruction: 0x000509bc
   21de4:	ldrdeq	r0, [r5], -r8
   21de8:	andeq	r0, r5, r4, asr #17
   21dec:	andeq	pc, r4, r4, ror #11
   21df0:	muleq	r4, r0, r4
   21df4:	andeq	pc, r4, ip, lsl r4	; <UNPREDICTABLE>
   21df8:	ldrdeq	r0, [r0], -lr
   21dfc:	andeq	pc, r4, r0, lsl #11
   21e00:	strdeq	ip, [r3], -ip	; <UNPREDICTABLE>
   21e04:	andeq	r0, r0, r1, ror #9
   21e08:	andeq	r0, r5, r0, lsr #16
   21e0c:	andeq	ip, r3, r8, lsr #27
   21e10:	andeq	r7, r6, r8, lsr #1
   21e14:	andeq	r5, r4, r0, ror #3
   21e18:	andeq	r0, r0, pc, ror #9
   21e1c:	ldrdeq	pc, [r4], -r8
   21e20:	strdeq	r0, [r0], -r5
   21e24:	andeq	r0, r5, r4, ror #17
   21e28:	andeq	r0, r5, r4, lsl #18
   21e2c:	andeq	r0, r5, r8, lsl r9
   21e30:	andeq	r0, r5, ip, asr r7
   21e34:	andeq	pc, r4, r4, lsr fp	; <UNPREDICTABLE>
   21e38:	strdeq	r0, [r0], -lr

00021e3c <__flatcc_fb_gen_c_json_parser@@Base>:
   21e3c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   21e40:	sub	sp, sp, #276	; 0x114
   21e44:	mov	r4, r0
   21e48:	ldr	r3, [r0, #208]	; 0xd0
   21e4c:	ldr	r2, [r3, #164]	; 0xa4
   21e50:	ldr	r1, [pc, #3700]	; 22ccc <__flatcc_fb_gen_c_json_parser@@Base+0xe90>
   21e54:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   21e58:	ldr	r3, [r4, #208]	; 0xd0
   21e5c:	ldr	r2, [r3, #164]	; 0xa4
   21e60:	ldr	r1, [pc, #3688]	; 22cd0 <__flatcc_fb_gen_c_json_parser@@Base+0xe94>
   21e64:	mov	r0, r4
   21e68:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   21e6c:	ldr	r5, [pc, #3680]	; 22cd4 <__flatcc_fb_gen_c_json_parser@@Base+0xe98>
   21e70:	mov	r1, r5
   21e74:	mov	r0, r4
   21e78:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   21e7c:	ldr	r1, [pc, #3668]	; 22cd8 <__flatcc_fb_gen_c_json_parser@@Base+0xe9c>
   21e80:	mov	r0, r4
   21e84:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   21e88:	mov	r1, r5
   21e8c:	mov	r0, r4
   21e90:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   21e94:	ldr	r1, [pc, #3648]	; 22cdc <__flatcc_fb_gen_c_json_parser@@Base+0xea0>
   21e98:	mov	r0, r4
   21e9c:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   21ea0:	ldr	r2, [pc, #3640]	; 22ce0 <__flatcc_fb_gen_c_json_parser@@Base+0xea4>
   21ea4:	ldr	r1, [pc, #3640]	; 22ce4 <__flatcc_fb_gen_c_json_parser@@Base+0xea8>
   21ea8:	mov	r0, r4
   21eac:	bl	15ca8 <__flatcc_fb_gen_c_includes@@Base>
   21eb0:	ldr	r3, [r4, #212]	; 0xd4
   21eb4:	ldr	r3, [r3, #140]	; 0x8c
   21eb8:	cmp	r3, #0
   21ebc:	bne	21f24 <__flatcc_fb_gen_c_json_parser@@Base+0xe8>
   21ec0:	ldr	r1, [pc, #3596]	; 22cd4 <__flatcc_fb_gen_c_json_parser@@Base+0xe98>
   21ec4:	mov	r0, r4
   21ec8:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   21ecc:	ldr	r3, [r4, #208]	; 0xd0
   21ed0:	ldr	r5, [r3, #52]	; 0x34
   21ed4:	mov	r2, #220	; 0xdc
   21ed8:	mov	r1, #0
   21edc:	add	r0, sp, #52	; 0x34
   21ee0:	bl	140ac <memset@plt>
   21ee4:	cmp	r5, #0
   21ee8:	beq	21ef8 <__flatcc_fb_gen_c_json_parser@@Base+0xbc>
   21eec:	ldrh	r3, [r5, #8]
   21ef0:	cmp	r3, #1
   21ef4:	bls	21f3c <__flatcc_fb_gen_c_json_parser@@Base+0x100>
   21ef8:	ldr	r3, [r4, #208]	; 0xd0
   21efc:	ldr	r5, [r3, #40]	; 0x28
   21f00:	cmp	r5, #0
   21f04:	beq	221e8 <__flatcc_fb_gen_c_json_parser@@Base+0x3ac>
   21f08:	ldr	fp, [pc, #3544]	; 22ce8 <__flatcc_fb_gen_c_json_parser@@Base+0xeac>
   21f0c:	ldr	sl, [pc, #3544]	; 22cec <__flatcc_fb_gen_c_json_parser@@Base+0xeb0>
   21f10:	ldr	r7, [pc, #3544]	; 22cf0 <__flatcc_fb_gen_c_json_parser@@Base+0xeb4>
   21f14:	ldr	r6, [pc, #3544]	; 22cf4 <__flatcc_fb_gen_c_json_parser@@Base+0xeb8>
   21f18:	ldr	r9, [pc, #3544]	; 22cf8 <__flatcc_fb_gen_c_json_parser@@Base+0xebc>
   21f1c:	ldr	r8, [pc, #3544]	; 22cfc <__flatcc_fb_gen_c_json_parser@@Base+0xec0>
   21f20:	b	22114 <__flatcc_fb_gen_c_json_parser@@Base+0x2d8>
   21f24:	ldr	r3, [r4, #204]	; 0xcc
   21f28:	mov	r2, #36	; 0x24
   21f2c:	mov	r1, #1
   21f30:	ldr	r0, [pc, #3528]	; 22d00 <__flatcc_fb_gen_c_json_parser@@Base+0xec4>
   21f34:	bl	1401c <fwrite@plt>
   21f38:	b	21ec0 <__flatcc_fb_gen_c_json_parser@@Base+0x84>
   21f3c:	ldr	r1, [pc, #3520]	; 22d04 <__flatcc_fb_gen_c_json_parser@@Base+0xec8>
   21f40:	mov	r0, r4
   21f44:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   21f48:	ldr	r1, [pc, #3512]	; 22d08 <__flatcc_fb_gen_c_json_parser@@Base+0xecc>
   21f4c:	mov	r0, r4
   21f50:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   21f54:	ldr	r1, [pc, #3504]	; 22d0c <__flatcc_fb_gen_c_json_parser@@Base+0xed0>
   21f58:	mov	r0, r4
   21f5c:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   21f60:	ldr	r1, [pc, #3496]	; 22d10 <__flatcc_fb_gen_c_json_parser@@Base+0xed4>
   21f64:	mov	r0, r4
   21f68:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   21f6c:	ldr	r1, [pc, #3488]	; 22d14 <__flatcc_fb_gen_c_json_parser@@Base+0xed8>
   21f70:	mov	r0, r4
   21f74:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   21f78:	ldr	r1, [pc, #3480]	; 22d18 <__flatcc_fb_gen_c_json_parser@@Base+0xedc>
   21f7c:	mov	r0, r4
   21f80:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   21f84:	ldr	r1, [pc, #3472]	; 22d1c <__flatcc_fb_gen_c_json_parser@@Base+0xee0>
   21f88:	mov	r0, r4
   21f8c:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   21f90:	ldr	r1, [pc, #3464]	; 22d20 <__flatcc_fb_gen_c_json_parser@@Base+0xee4>
   21f94:	mov	r0, r4
   21f98:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   21f9c:	ldr	r1, [pc, #3456]	; 22d24 <__flatcc_fb_gen_c_json_parser@@Base+0xee8>
   21fa0:	mov	r0, r4
   21fa4:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   21fa8:	ldr	r3, [r4, #208]	; 0xd0
   21fac:	ldr	r2, [r3, #160]	; 0xa0
   21fb0:	ldr	r1, [pc, #3816]	; 22ea0 <__flatcc_fb_gen_c_json_parser@@Base+0x1064>
   21fb4:	mov	r0, r4
   21fb8:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   21fbc:	ldr	r3, [r4, #220]	; 0xdc
   21fc0:	add	r3, r3, #2
   21fc4:	str	r3, [r4, #220]	; 0xdc
   21fc8:	ldr	r1, [pc, #3416]	; 22d28 <__flatcc_fb_gen_c_json_parser@@Base+0xeec>
   21fcc:	mov	r0, r4
   21fd0:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   21fd4:	ldr	r3, [r4, #220]	; 0xdc
   21fd8:	cmp	r3, #0
   21fdc:	beq	22008 <__flatcc_fb_gen_c_json_parser@@Base+0x1cc>
   21fe0:	sub	r2, r3, #1
   21fe4:	str	r2, [r4, #220]	; 0xdc
   21fe8:	cmp	r2, #0
   21fec:	beq	2201c <__flatcc_fb_gen_c_json_parser@@Base+0x1e0>
   21ff0:	sub	r3, r3, #2
   21ff4:	str	r3, [r4, #220]	; 0xdc
   21ff8:	ldr	r1, [pc, #3284]	; 22cd4 <__flatcc_fb_gen_c_json_parser@@Base+0xe98>
   21ffc:	mov	r0, r4
   22000:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   22004:	b	21ef8 <__flatcc_fb_gen_c_json_parser@@Base+0xbc>
   22008:	ldr	r3, [pc, #3356]	; 22d2c <__flatcc_fb_gen_c_json_parser@@Base+0xef0>
   2200c:	ldr	r2, [pc, #3356]	; 22d30 <__flatcc_fb_gen_c_json_parser@@Base+0xef4>
   22010:	ldr	r1, [pc, #3808]	; 22ef8 <__flatcc_fb_gen_c_json_parser@@Base+0x10bc>
   22014:	ldr	r0, [pc, #3796]	; 22ef0 <__flatcc_fb_gen_c_json_parser@@Base+0x10b4>
   22018:	bl	14148 <__assert_fail@plt>
   2201c:	ldr	r3, [pc, #3336]	; 22d2c <__flatcc_fb_gen_c_json_parser@@Base+0xef0>
   22020:	ldr	r2, [pc, #3336]	; 22d30 <__flatcc_fb_gen_c_json_parser@@Base+0xef4>
   22024:	ldr	r1, [pc, #3788]	; 22ef8 <__flatcc_fb_gen_c_json_parser@@Base+0x10bc>
   22028:	ldr	r0, [pc, #3776]	; 22ef0 <__flatcc_fb_gen_c_json_parser@@Base+0x10b4>
   2202c:	bl	14148 <__assert_fail@plt>
   22030:	add	r2, sp, #52	; 0x34
   22034:	mov	r1, r5
   22038:	ldr	r0, [r5, #12]
   2203c:	bl	15edc <__flatcc_fb_scoped_symbol_name@@Base>
   22040:	add	r2, sp, #52	; 0x34
   22044:	mov	r1, fp
   22048:	mov	r0, r4
   2204c:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   22050:	add	r2, sp, #52	; 0x34
   22054:	mov	r1, sl
   22058:	mov	r0, r4
   2205c:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   22060:	add	r2, sp, #52	; 0x34
   22064:	mov	r1, r7
   22068:	mov	r0, r4
   2206c:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   22070:	ldr	r3, [r4, #220]	; 0xdc
   22074:	add	r3, r3, #2
   22078:	str	r3, [r4, #220]	; 0xdc
   2207c:	mov	r1, r6
   22080:	mov	r0, r4
   22084:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   22088:	ldr	r3, [r4, #220]	; 0xdc
   2208c:	cmp	r3, #0
   22090:	beq	220b0 <__flatcc_fb_gen_c_json_parser@@Base+0x274>
   22094:	sub	r2, r3, #1
   22098:	str	r2, [r4, #220]	; 0xdc
   2209c:	cmp	r2, #0
   220a0:	beq	220c4 <__flatcc_fb_gen_c_json_parser@@Base+0x288>
   220a4:	sub	r3, r3, #2
   220a8:	str	r3, [r4, #220]	; 0xdc
   220ac:	b	22108 <__flatcc_fb_gen_c_json_parser@@Base+0x2cc>
   220b0:	ldr	r3, [pc, #3188]	; 22d2c <__flatcc_fb_gen_c_json_parser@@Base+0xef0>
   220b4:	ldr	r2, [pc, #3192]	; 22d34 <__flatcc_fb_gen_c_json_parser@@Base+0xef8>
   220b8:	ldr	r1, [pc, #3640]	; 22ef8 <__flatcc_fb_gen_c_json_parser@@Base+0x10bc>
   220bc:	ldr	r0, [pc, #3628]	; 22ef0 <__flatcc_fb_gen_c_json_parser@@Base+0x10b4>
   220c0:	bl	14148 <__assert_fail@plt>
   220c4:	ldr	r3, [pc, #3168]	; 22d2c <__flatcc_fb_gen_c_json_parser@@Base+0xef0>
   220c8:	ldr	r2, [pc, #3172]	; 22d34 <__flatcc_fb_gen_c_json_parser@@Base+0xef8>
   220cc:	ldr	r1, [pc, #3620]	; 22ef8 <__flatcc_fb_gen_c_json_parser@@Base+0x10bc>
   220d0:	ldr	r0, [pc, #3608]	; 22ef0 <__flatcc_fb_gen_c_json_parser@@Base+0x10b4>
   220d4:	bl	14148 <__assert_fail@plt>
   220d8:	add	r2, sp, #52	; 0x34
   220dc:	mov	r1, r5
   220e0:	ldr	r0, [r5, #12]
   220e4:	bl	15edc <__flatcc_fb_scoped_symbol_name@@Base>
   220e8:	add	r2, sp, #52	; 0x34
   220ec:	mov	r1, r9
   220f0:	mov	r0, r4
   220f4:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   220f8:	add	r2, sp, #52	; 0x34
   220fc:	mov	r1, r8
   22100:	mov	r0, r4
   22104:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   22108:	ldr	r5, [r5]
   2210c:	cmp	r5, #0
   22110:	beq	221e8 <__flatcc_fb_gen_c_json_parser@@Base+0x3ac>
   22114:	ldrh	r3, [r5, #8]
   22118:	cmp	r3, #4
   2211c:	ldrls	pc, [pc, r3, lsl #2]
   22120:	b	22108 <__flatcc_fb_gen_c_json_parser@@Base+0x2cc>
   22124:	andeq	r2, r2, r8, lsr r1
   22128:	ldrdeq	r2, [r2], -r8
   2212c:	andeq	r2, r2, r8, lsl #2
   22130:	andeq	r2, r2, ip, asr r1
   22134:	andeq	r2, r2, r0, lsr r0
   22138:	add	r2, sp, #52	; 0x34
   2213c:	mov	r1, r5
   22140:	ldr	r0, [r5, #12]
   22144:	bl	15edc <__flatcc_fb_scoped_symbol_name@@Base>
   22148:	add	r2, sp, #52	; 0x34
   2214c:	ldr	r1, [pc, #3044]	; 22d38 <__flatcc_fb_gen_c_json_parser@@Base+0xefc>
   22150:	mov	r0, r4
   22154:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   22158:	b	22108 <__flatcc_fb_gen_c_json_parser@@Base+0x2cc>
   2215c:	add	r2, sp, #52	; 0x34
   22160:	mov	r1, r5
   22164:	ldr	r0, [r5, #12]
   22168:	bl	15edc <__flatcc_fb_scoped_symbol_name@@Base>
   2216c:	add	r2, sp, #52	; 0x34
   22170:	mov	r1, r7
   22174:	mov	r0, r4
   22178:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   2217c:	ldr	r3, [r4, #220]	; 0xdc
   22180:	add	r3, r3, #2
   22184:	str	r3, [r4, #220]	; 0xdc
   22188:	add	r2, sp, #52	; 0x34
   2218c:	mov	r1, r6
   22190:	mov	r0, r4
   22194:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   22198:	ldr	r3, [r4, #220]	; 0xdc
   2219c:	cmp	r3, #0
   221a0:	beq	221c0 <__flatcc_fb_gen_c_json_parser@@Base+0x384>
   221a4:	sub	r2, r3, #1
   221a8:	str	r2, [r4, #220]	; 0xdc
   221ac:	cmp	r2, #0
   221b0:	beq	221d4 <__flatcc_fb_gen_c_json_parser@@Base+0x398>
   221b4:	sub	r3, r3, #2
   221b8:	str	r3, [r4, #220]	; 0xdc
   221bc:	b	22108 <__flatcc_fb_gen_c_json_parser@@Base+0x2cc>
   221c0:	ldr	r3, [pc, #2916]	; 22d2c <__flatcc_fb_gen_c_json_parser@@Base+0xef0>
   221c4:	ldr	r2, [pc, #2928]	; 22d3c <__flatcc_fb_gen_c_json_parser@@Base+0xf00>
   221c8:	ldr	r1, [pc, #3368]	; 22ef8 <__flatcc_fb_gen_c_json_parser@@Base+0x10bc>
   221cc:	ldr	r0, [pc, #3356]	; 22ef0 <__flatcc_fb_gen_c_json_parser@@Base+0x10b4>
   221d0:	bl	14148 <__assert_fail@plt>
   221d4:	ldr	r3, [pc, #2896]	; 22d2c <__flatcc_fb_gen_c_json_parser@@Base+0xef0>
   221d8:	ldr	r2, [pc, #2908]	; 22d3c <__flatcc_fb_gen_c_json_parser@@Base+0xf00>
   221dc:	ldr	r1, [pc, #3348]	; 22ef8 <__flatcc_fb_gen_c_json_parser@@Base+0x10bc>
   221e0:	ldr	r0, [pc, #3336]	; 22ef0 <__flatcc_fb_gen_c_json_parser@@Base+0x10b4>
   221e4:	bl	14148 <__assert_fail@plt>
   221e8:	ldr	r3, [r4, #208]	; 0xd0
   221ec:	mov	r2, r4
   221f0:	ldr	r1, [pc, #2888]	; 22d40 <__flatcc_fb_gen_c_json_parser@@Base+0xf04>
   221f4:	ldr	r0, [r3, #60]	; 0x3c
   221f8:	bl	29458 <fb_scope_table_visit@@Base>
   221fc:	ldr	r3, [r4, #208]	; 0xd0
   22200:	ldr	r2, [r3, #160]	; 0xa0
   22204:	ldr	r1, [pc, #3116]	; 22e38 <__flatcc_fb_gen_c_json_parser@@Base+0xffc>
   22208:	mov	r0, r4
   2220c:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   22210:	ldr	r3, [r4, #220]	; 0xdc
   22214:	add	r3, r3, #2
   22218:	str	r3, [r4, #220]	; 0xdc
   2221c:	ldr	r1, [pc, #2768]	; 22cf4 <__flatcc_fb_gen_c_json_parser@@Base+0xeb8>
   22220:	mov	r0, r4
   22224:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   22228:	ldr	r3, [r4, #220]	; 0xdc
   2222c:	cmp	r3, #0
   22230:	beq	22274 <__flatcc_fb_gen_c_json_parser@@Base+0x438>
   22234:	sub	r2, r3, #1
   22238:	str	r2, [r4, #220]	; 0xdc
   2223c:	cmp	r2, #0
   22240:	beq	22288 <__flatcc_fb_gen_c_json_parser@@Base+0x44c>
   22244:	sub	r3, r3, #2
   22248:	str	r3, [r4, #220]	; 0xdc
   2224c:	ldr	r1, [pc, #2688]	; 22cd4 <__flatcc_fb_gen_c_json_parser@@Base+0xe98>
   22250:	mov	r0, r4
   22254:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   22258:	ldr	r3, [r4, #208]	; 0xd0
   2225c:	ldr	r6, [r3, #40]	; 0x28
   22260:	cmp	r6, #0
   22264:	beq	22f00 <__flatcc_fb_gen_c_json_parser@@Base+0x10c4>
   22268:	ldr	fp, [pc, #2772]	; 22d44 <__flatcc_fb_gen_c_json_parser@@Base+0xf08>
   2226c:	ldr	sl, [pc, #2656]	; 22cd4 <__flatcc_fb_gen_c_json_parser@@Base+0xe98>
   22270:	b	222cc <__flatcc_fb_gen_c_json_parser@@Base+0x490>
   22274:	ldr	r3, [pc, #2736]	; 22d2c <__flatcc_fb_gen_c_json_parser@@Base+0xef0>
   22278:	ldr	r2, [pc, #2760]	; 22d48 <__flatcc_fb_gen_c_json_parser@@Base+0xf0c>
   2227c:	ldr	r1, [pc, #3188]	; 22ef8 <__flatcc_fb_gen_c_json_parser@@Base+0x10bc>
   22280:	ldr	r0, [pc, #3176]	; 22ef0 <__flatcc_fb_gen_c_json_parser@@Base+0x10b4>
   22284:	bl	14148 <__assert_fail@plt>
   22288:	ldr	r3, [pc, #2716]	; 22d2c <__flatcc_fb_gen_c_json_parser@@Base+0xef0>
   2228c:	ldr	r2, [pc, #2740]	; 22d48 <__flatcc_fb_gen_c_json_parser@@Base+0xf0c>
   22290:	ldr	r1, [pc, #3168]	; 22ef8 <__flatcc_fb_gen_c_json_parser@@Base+0x10bc>
   22294:	ldr	r0, [pc, #3156]	; 22ef0 <__flatcc_fb_gen_c_json_parser@@Base+0x10b4>
   22298:	bl	14148 <__assert_fail@plt>
   2229c:	mov	r1, r6
   222a0:	mov	r0, r4
   222a4:	bl	1f360 <__flatcc_fb_gen_c_verifier@@Base+0xb2c>
   222a8:	mov	r1, r6
   222ac:	mov	r0, r4
   222b0:	bl	1f860 <__flatcc_fb_gen_c_verifier@@Base+0x102c>
   222b4:	mov	r1, r6
   222b8:	mov	r0, r4
   222bc:	bl	21b28 <__flatcc_fb_gen_c_verifier@@Base+0x32f4>
   222c0:	ldr	r6, [r6]
   222c4:	cmp	r6, #0
   222c8:	beq	22f00 <__flatcc_fb_gen_c_json_parser@@Base+0x10c4>
   222cc:	ldrh	r3, [r6, #8]
   222d0:	cmp	r3, #4
   222d4:	ldrls	pc, [pc, r3, lsl #2]
   222d8:	b	222c0 <__flatcc_fb_gen_c_json_parser@@Base+0x484>
   222dc:	andeq	r2, r2, r0, asr r7
   222e0:	strdeq	r2, [r2], -r0
   222e4:	andeq	r2, r2, r0, asr #5
   222e8:			; <UNDEFINED> instruction: 0x00022cbc
   222ec:	muleq	r2, ip, r2
   222f0:	mov	r3, #0
   222f4:	str	r3, [sp, #24]
   222f8:	str	r3, [sp, #28]
   222fc:	str	r3, [sp, #32]
   22300:	str	r3, [sp, #36]	; 0x24
   22304:	str	r3, [sp, #40]	; 0x28
   22308:	str	r3, [sp, #44]	; 0x2c
   2230c:	str	r3, [sp, #48]	; 0x30
   22310:	ldrh	r3, [r6, #8]
   22314:	cmp	r3, #1
   22318:	bne	22658 <__flatcc_fb_gen_c_json_parser@@Base+0x81c>
   2231c:	add	r1, sp, #20
   22320:	mov	r0, r6
   22324:	bl	20d90 <__flatcc_fb_gen_c_verifier@@Base+0x255c>
   22328:	str	r0, [sp, #24]
   2232c:	cmp	r0, #0
   22330:	beq	2266c <__flatcc_fb_gen_c_json_parser@@Base+0x830>
   22334:	str	r6, [sp, #36]	; 0x24
   22338:	mov	r3, #1
   2233c:	str	r3, [sp, #40]	; 0x28
   22340:	ldr	r3, [pc, #2564]	; 22d4c <__flatcc_fb_gen_c_json_parser@@Base+0xf10>
   22344:	str	r3, [sp, #28]
   22348:	str	fp, [sp, #32]
   2234c:	mov	r2, #220	; 0xdc
   22350:	mov	r1, #0
   22354:	add	r0, sp, #52	; 0x34
   22358:	bl	140ac <memset@plt>
   2235c:	mov	r5, r6
   22360:	add	r2, sp, #52	; 0x34
   22364:	mov	r1, r6
   22368:	ldr	r0, [r6, #12]
   2236c:	bl	15edc <__flatcc_fb_scoped_symbol_name@@Base>
   22370:	add	r2, sp, #52	; 0x34
   22374:	ldr	r1, [pc, #2516]	; 22d50 <__flatcc_fb_gen_c_json_parser@@Base+0xf14>
   22378:	mov	r0, r4
   2237c:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   22380:	ldr	r1, [pc, #2848]	; 22ea8 <__flatcc_fb_gen_c_json_parser@@Base+0x106c>
   22384:	mov	r0, r4
   22388:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   2238c:	ldr	r3, [r4, #220]	; 0xdc
   22390:	add	r3, r3, #1
   22394:	str	r3, [r4, #220]	; 0xdc
   22398:	ldr	r1, [pc, #2484]	; 22d54 <__flatcc_fb_gen_c_json_parser@@Base+0xf18>
   2239c:	mov	r0, r4
   223a0:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   223a4:	ldr	r3, [sp, #20]
   223a8:	cmp	r3, #0
   223ac:	ble	223e0 <__flatcc_fb_gen_c_json_parser@@Base+0x5a4>
   223b0:	ldr	r1, [pc, #2464]	; 22d58 <__flatcc_fb_gen_c_json_parser@@Base+0xf1c>
   223b4:	mov	r0, r4
   223b8:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   223bc:	ldr	r1, [pc, #2456]	; 22d5c <__flatcc_fb_gen_c_json_parser@@Base+0xf20>
   223c0:	mov	r0, r4
   223c4:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   223c8:	ldr	r1, [pc, #2716]	; 22e6c <__flatcc_fb_gen_c_json_parser@@Base+0x1030>
   223cc:	mov	r0, r4
   223d0:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   223d4:	ldr	r1, [pc, #2708]	; 22e70 <__flatcc_fb_gen_c_json_parser@@Base+0x1034>
   223d8:	mov	r0, r4
   223dc:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   223e0:	mov	r1, sl
   223e4:	mov	r0, r4
   223e8:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   223ec:	ldr	r1, [pc, #2412]	; 22d60 <__flatcc_fb_gen_c_json_parser@@Base+0xf24>
   223f0:	mov	r0, r4
   223f4:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   223f8:	ldr	r1, [pc, #2404]	; 22d64 <__flatcc_fb_gen_c_json_parser@@Base+0xf28>
   223fc:	mov	r0, r4
   22400:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   22404:	ldr	r3, [r4, #220]	; 0xdc
   22408:	add	r3, r3, #1
   2240c:	str	r3, [r4, #220]	; 0xdc
   22410:	ldr	r3, [sp, #20]
   22414:	cmp	r3, #0
   22418:	bne	226b4 <__flatcc_fb_gen_c_json_parser@@Base+0x878>
   2241c:	ldr	r1, [pc, #2372]	; 22d68 <__flatcc_fb_gen_c_json_parser@@Base+0xf2c>
   22420:	mov	r0, r4
   22424:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   22428:	ldr	r1, [pc, #2364]	; 22d6c <__flatcc_fb_gen_c_json_parser@@Base+0xf30>
   2242c:	mov	r0, r4
   22430:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   22434:	ldr	r1, [pc, #2356]	; 22d70 <__flatcc_fb_gen_c_json_parser@@Base+0xf34>
   22438:	mov	r0, r4
   2243c:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   22440:	ldr	r3, [r4, #220]	; 0xdc
   22444:	cmp	r3, #0
   22448:	beq	226ec <__flatcc_fb_gen_c_json_parser@@Base+0x8b0>
   2244c:	sub	r3, r3, #1
   22450:	str	r3, [r4, #220]	; 0xdc
   22454:	ldr	r1, [pc, #2684]	; 22ed8 <__flatcc_fb_gen_c_json_parser@@Base+0x109c>
   22458:	mov	r0, r4
   2245c:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   22460:	ldr	r1, [pc, #2576]	; 22e78 <__flatcc_fb_gen_c_json_parser@@Base+0x103c>
   22464:	mov	r0, r4
   22468:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   2246c:	ldr	r3, [sp, #20]
   22470:	cmp	r3, #0
   22474:	ble	224a8 <__flatcc_fb_gen_c_json_parser@@Base+0x66c>
   22478:	ldr	r3, [r4, #220]	; 0xdc
   2247c:	str	r3, [r4, #228]	; 0xe4
   22480:	mov	r3, #0
   22484:	str	r3, [r4, #220]	; 0xdc
   22488:	ldr	r1, [pc, #2276]	; 22d74 <__flatcc_fb_gen_c_json_parser@@Base+0xf38>
   2248c:	mov	r0, r4
   22490:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   22494:	ldr	r3, [r4, #228]	; 0xe4
   22498:	str	r3, [r4, #220]	; 0xdc
   2249c:	ldr	r1, [pc, #2260]	; 22d78 <__flatcc_fb_gen_c_json_parser@@Base+0xf3c>
   224a0:	mov	r0, r4
   224a4:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   224a8:	ldr	r3, [r4, #220]	; 0xdc
   224ac:	cmp	r3, #0
   224b0:	beq	22700 <__flatcc_fb_gen_c_json_parser@@Base+0x8c4>
   224b4:	sub	r3, r3, #1
   224b8:	str	r3, [r4, #220]	; 0xdc
   224bc:	ldr	r1, [pc, #2580]	; 22ed8 <__flatcc_fb_gen_c_json_parser@@Base+0x109c>
   224c0:	mov	r0, r4
   224c4:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   224c8:	mov	r1, sl
   224cc:	mov	r0, r4
   224d0:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   224d4:	ldr	r0, [sp, #24]
   224d8:	bl	20bf8 <__flatcc_fb_gen_c_verifier@@Base+0x23c4>
   224dc:	ldrh	r3, [r6, #8]
   224e0:	cmp	r3, #1
   224e4:	bne	22714 <__flatcc_fb_gen_c_json_parser@@Base+0x8d8>
   224e8:	mov	r2, #220	; 0xdc
   224ec:	mov	r1, #0
   224f0:	add	r0, sp, #52	; 0x34
   224f4:	bl	140ac <memset@plt>
   224f8:	add	r2, sp, #52	; 0x34
   224fc:	mov	r1, r5
   22500:	ldr	r0, [r6, #12]
   22504:	bl	15edc <__flatcc_fb_scoped_symbol_name@@Base>
   22508:	add	r2, sp, #52	; 0x34
   2250c:	ldr	r1, [pc, #2152]	; 22d7c <__flatcc_fb_gen_c_json_parser@@Base+0xf40>
   22510:	mov	r0, r4
   22514:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   22518:	ldr	r1, [pc, #2440]	; 22ea8 <__flatcc_fb_gen_c_json_parser@@Base+0x106c>
   2251c:	mov	r0, r4
   22520:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   22524:	ldr	r3, [r4, #220]	; 0xdc
   22528:	add	r3, r3, #1
   2252c:	str	r3, [r4, #220]	; 0xdc
   22530:	ldr	r1, [pc, #2084]	; 22d5c <__flatcc_fb_gen_c_json_parser@@Base+0xf20>
   22534:	mov	r0, r4
   22538:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   2253c:	mov	r1, sl
   22540:	mov	r0, r4
   22544:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   22548:	ldr	r1, [pc, #2096]	; 22d80 <__flatcc_fb_gen_c_json_parser@@Base+0xf44>
   2254c:	mov	r0, r4
   22550:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   22554:	ldrd	r2, [r6, #112]	; 0x70
   22558:	ldrh	r1, [r6, #104]	; 0x68
   2255c:	str	r1, [sp]
   22560:	ldr	r1, [pc, #2076]	; 22d84 <__flatcc_fb_gen_c_json_parser@@Base+0xf48>
   22564:	mov	r0, r4
   22568:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   2256c:	add	r2, sp, #52	; 0x34
   22570:	ldr	r1, [pc, #2064]	; 22d88 <__flatcc_fb_gen_c_json_parser@@Base+0xf4c>
   22574:	mov	r0, r4
   22578:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   2257c:	ldr	r1, [pc, #2056]	; 22d8c <__flatcc_fb_gen_c_json_parser@@Base+0xf50>
   22580:	mov	r0, r4
   22584:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   22588:	ldr	r1, [pc, #2280]	; 22e78 <__flatcc_fb_gen_c_json_parser@@Base+0x103c>
   2258c:	mov	r0, r4
   22590:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   22594:	ldr	r3, [r4, #220]	; 0xdc
   22598:	str	r3, [r4, #228]	; 0xe4
   2259c:	mov	r3, #0
   225a0:	str	r3, [r4, #220]	; 0xdc
   225a4:	ldr	r1, [pc, #1992]	; 22d74 <__flatcc_fb_gen_c_json_parser@@Base+0xf38>
   225a8:	mov	r0, r4
   225ac:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   225b0:	ldr	r3, [r4, #228]	; 0xe4
   225b4:	str	r3, [r4, #220]	; 0xdc
   225b8:	ldr	r1, [pc, #1976]	; 22d78 <__flatcc_fb_gen_c_json_parser@@Base+0xf3c>
   225bc:	mov	r0, r4
   225c0:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   225c4:	ldr	r3, [r4, #220]	; 0xdc
   225c8:	cmp	r3, #0
   225cc:	beq	22728 <__flatcc_fb_gen_c_json_parser@@Base+0x8ec>
   225d0:	sub	r3, r3, #1
   225d4:	str	r3, [r4, #220]	; 0xdc
   225d8:	ldr	r1, [pc, #2296]	; 22ed8 <__flatcc_fb_gen_c_json_parser@@Base+0x109c>
   225dc:	mov	r0, r4
   225e0:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   225e4:	mov	r1, sl
   225e8:	mov	r0, r4
   225ec:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   225f0:	add	r2, sp, #52	; 0x34
   225f4:	ldr	r1, [pc, #1940]	; 22d90 <__flatcc_fb_gen_c_json_parser@@Base+0xf54>
   225f8:	mov	r0, r4
   225fc:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   22600:	ldr	r1, [pc, #2208]	; 22ea8 <__flatcc_fb_gen_c_json_parser@@Base+0x106c>
   22604:	mov	r0, r4
   22608:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   2260c:	ldr	r3, [r4, #220]	; 0xdc
   22610:	add	r3, r3, #1
   22614:	str	r3, [r4, #220]	; 0xdc
   22618:	add	r2, sp, #52	; 0x34
   2261c:	ldr	r1, [pc, #1904]	; 22d94 <__flatcc_fb_gen_c_json_parser@@Base+0xf58>
   22620:	mov	r0, r4
   22624:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   22628:	ldr	r3, [r4, #220]	; 0xdc
   2262c:	cmp	r3, #0
   22630:	beq	2273c <__flatcc_fb_gen_c_json_parser@@Base+0x900>
   22634:	sub	r3, r3, #1
   22638:	str	r3, [r4, #220]	; 0xdc
   2263c:	ldr	r1, [pc, #2196]	; 22ed8 <__flatcc_fb_gen_c_json_parser@@Base+0x109c>
   22640:	mov	r0, r4
   22644:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   22648:	mov	r1, sl
   2264c:	mov	r0, r4
   22650:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   22654:	b	222c0 <__flatcc_fb_gen_c_json_parser@@Base+0x484>
   22658:	ldr	r3, [pc, #1848]	; 22d98 <__flatcc_fb_gen_c_json_parser@@Base+0xf5c>
   2265c:	ldr	r2, [pc, #1848]	; 22d9c <__flatcc_fb_gen_c_json_parser@@Base+0xf60>
   22660:	ldr	r1, [pc, #2192]	; 22ef8 <__flatcc_fb_gen_c_json_parser@@Base+0x10bc>
   22664:	ldr	r0, [pc, #1844]	; 22da0 <__flatcc_fb_gen_c_json_parser@@Base+0xf64>
   22668:	bl	14148 <__assert_fail@plt>
   2266c:	ldr	r3, [sp, #20]
   22670:	cmp	r3, #0
   22674:	ble	22334 <__flatcc_fb_gen_c_json_parser@@Base+0x4f8>
   22678:	ldr	r5, [pc, #1828]	; 22da4 <__flatcc_fb_gen_c_json_parser@@Base+0xf68>
   2267c:	ldr	r4, [pc, #2164]	; 22ef8 <__flatcc_fb_gen_c_json_parser@@Base+0x10bc>
   22680:	ldr	r3, [pc, #1992]	; 22e50 <__flatcc_fb_gen_c_json_parser@@Base+0x1014>
   22684:	ldr	r0, [r3]
   22688:	ldr	r3, [pc, #1988]	; 22e54 <__flatcc_fb_gen_c_json_parser@@Base+0x1018>
   2268c:	str	r3, [sp]
   22690:	mov	r3, r5
   22694:	mov	r2, r4
   22698:	ldr	r1, [pc, #1976]	; 22e58 <__flatcc_fb_gen_c_json_parser@@Base+0x101c>
   2269c:	bl	14094 <fprintf@plt>
   226a0:	ldr	r3, [pc, #1776]	; 22d98 <__flatcc_fb_gen_c_json_parser@@Base+0xf5c>
   226a4:	mov	r2, r5
   226a8:	mov	r1, r4
   226ac:	ldr	r0, [pc, #1960]	; 22e5c <__flatcc_fb_gen_c_json_parser@@Base+0x1020>
   226b0:	bl	14148 <__assert_fail@plt>
   226b4:	ldr	r1, [pc, #1772]	; 22da8 <__flatcc_fb_gen_c_json_parser@@Base+0xf6c>
   226b8:	mov	r0, r4
   226bc:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   226c0:	ldr	r1, [pc, #1964]	; 22e74 <__flatcc_fb_gen_c_json_parser@@Base+0x1038>
   226c4:	mov	r0, r4
   226c8:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   226cc:	mov	r2, #0
   226d0:	str	r2, [sp]
   226d4:	ldr	r3, [sp, #20]
   226d8:	sub	r3, r3, #1
   226dc:	add	r1, sp, #24
   226e0:	mov	r0, r4
   226e4:	bl	20f70 <__flatcc_fb_gen_c_verifier@@Base+0x273c>
   226e8:	b	22434 <__flatcc_fb_gen_c_json_parser@@Base+0x5f8>
   226ec:	ldr	r3, [pc, #1700]	; 22d98 <__flatcc_fb_gen_c_json_parser@@Base+0xf5c>
   226f0:	ldr	r2, [pc, #1716]	; 22dac <__flatcc_fb_gen_c_json_parser@@Base+0xf70>
   226f4:	ldr	r1, [pc, #2044]	; 22ef8 <__flatcc_fb_gen_c_json_parser@@Base+0x10bc>
   226f8:	ldr	r0, [pc, #2032]	; 22ef0 <__flatcc_fb_gen_c_json_parser@@Base+0x10b4>
   226fc:	bl	14148 <__assert_fail@plt>
   22700:	ldr	r3, [pc, #1680]	; 22d98 <__flatcc_fb_gen_c_json_parser@@Base+0xf5c>
   22704:	ldr	r2, [pc, #1700]	; 22db0 <__flatcc_fb_gen_c_json_parser@@Base+0xf74>
   22708:	ldr	r1, [pc, #2024]	; 22ef8 <__flatcc_fb_gen_c_json_parser@@Base+0x10bc>
   2270c:	ldr	r0, [pc, #2012]	; 22ef0 <__flatcc_fb_gen_c_json_parser@@Base+0x10b4>
   22710:	bl	14148 <__assert_fail@plt>
   22714:	ldr	r3, [pc, #1688]	; 22db4 <__flatcc_fb_gen_c_json_parser@@Base+0xf78>
   22718:	ldr	r2, [pc, #1688]	; 22db8 <__flatcc_fb_gen_c_json_parser@@Base+0xf7c>
   2271c:	ldr	r1, [pc, #2004]	; 22ef8 <__flatcc_fb_gen_c_json_parser@@Base+0x10bc>
   22720:	ldr	r0, [pc, #1656]	; 22da0 <__flatcc_fb_gen_c_json_parser@@Base+0xf64>
   22724:	bl	14148 <__assert_fail@plt>
   22728:	ldr	r3, [pc, #1668]	; 22db4 <__flatcc_fb_gen_c_json_parser@@Base+0xf78>
   2272c:	ldr	r2, [pc, #1672]	; 22dbc <__flatcc_fb_gen_c_json_parser@@Base+0xf80>
   22730:	ldr	r1, [pc, #1984]	; 22ef8 <__flatcc_fb_gen_c_json_parser@@Base+0x10bc>
   22734:	ldr	r0, [pc, #1972]	; 22ef0 <__flatcc_fb_gen_c_json_parser@@Base+0x10b4>
   22738:	bl	14148 <__assert_fail@plt>
   2273c:	ldr	r3, [pc, #1648]	; 22db4 <__flatcc_fb_gen_c_json_parser@@Base+0xf78>
   22740:	mov	r2, #1376	; 0x560
   22744:	ldr	r1, [pc, #1964]	; 22ef8 <__flatcc_fb_gen_c_json_parser@@Base+0x10bc>
   22748:	ldr	r0, [pc, #1952]	; 22ef0 <__flatcc_fb_gen_c_json_parser@@Base+0x10b4>
   2274c:	bl	14148 <__assert_fail@plt>
   22750:	mov	r3, #0
   22754:	str	r3, [sp, #24]
   22758:	str	r3, [sp, #28]
   2275c:	str	r3, [sp, #32]
   22760:	str	r3, [sp, #36]	; 0x24
   22764:	str	r3, [sp, #40]	; 0x28
   22768:	str	r3, [sp, #44]	; 0x2c
   2276c:	str	r3, [sp, #48]	; 0x30
   22770:	ldrh	r3, [r6, #8]
   22774:	cmp	r3, #0
   22778:	bne	22970 <__flatcc_fb_gen_c_json_parser@@Base+0xb34>
   2277c:	add	r1, sp, #20
   22780:	mov	r0, r6
   22784:	bl	20d90 <__flatcc_fb_gen_c_verifier@@Base+0x255c>
   22788:	str	r0, [sp, #24]
   2278c:	cmp	r0, #0
   22790:	beq	22984 <__flatcc_fb_gen_c_json_parser@@Base+0xb48>
   22794:	str	r6, [sp, #36]	; 0x24
   22798:	mov	r3, #0
   2279c:	str	r3, [sp, #40]	; 0x28
   227a0:	ldr	r2, [pc, #1444]	; 22d4c <__flatcc_fb_gen_c_json_parser@@Base+0xf10>
   227a4:	str	r2, [sp, #28]
   227a8:	str	fp, [sp, #32]
   227ac:	str	r3, [sp, #44]	; 0x2c
   227b0:	ldr	r3, [sp, #20]
   227b4:	cmp	r3, #0
   227b8:	ble	227e4 <__flatcc_fb_gen_c_json_parser@@Base+0x9a8>
   227bc:	mov	r1, r0
   227c0:	add	r0, r0, r3, lsl #4
   227c4:	ldr	r2, [r1, #12]
   227c8:	ldr	r3, [sp, #44]	; 0x2c
   227cc:	cmp	r2, #0
   227d0:	addne	r3, r3, #1
   227d4:	str	r3, [sp, #44]	; 0x2c
   227d8:	add	r1, r1, #16
   227dc:	cmp	r0, r1
   227e0:	bne	227c4 <__flatcc_fb_gen_c_json_parser@@Base+0x988>
   227e4:	mov	r2, #220	; 0xdc
   227e8:	mov	r1, #0
   227ec:	add	r0, sp, #52	; 0x34
   227f0:	bl	140ac <memset@plt>
   227f4:	add	r2, sp, #52	; 0x34
   227f8:	mov	r1, r6
   227fc:	ldr	r0, [r6, #12]
   22800:	bl	15edc <__flatcc_fb_scoped_symbol_name@@Base>
   22804:	add	r2, sp, #52	; 0x34
   22808:	ldr	r1, [pc, #1456]	; 22dc0 <__flatcc_fb_gen_c_json_parser@@Base+0xf84>
   2280c:	mov	r0, r4
   22810:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   22814:	ldr	r1, [pc, #1676]	; 22ea8 <__flatcc_fb_gen_c_json_parser@@Base+0x106c>
   22818:	mov	r0, r4
   2281c:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   22820:	ldr	r3, [r4, #220]	; 0xdc
   22824:	add	r3, r3, #1
   22828:	str	r3, [r4, #220]	; 0xdc
   2282c:	ldr	r1, [pc, #1312]	; 22d54 <__flatcc_fb_gen_c_json_parser@@Base+0xf18>
   22830:	mov	r0, r4
   22834:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   22838:	ldr	r3, [sp, #20]
   2283c:	cmp	r3, #0
   22840:	ble	22874 <__flatcc_fb_gen_c_json_parser@@Base+0xa38>
   22844:	ldr	r1, [pc, #1296]	; 22d5c <__flatcc_fb_gen_c_json_parser@@Base+0xf20>
   22848:	mov	r0, r4
   2284c:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   22850:	ldr	r1, [pc, #1388]	; 22dc4 <__flatcc_fb_gen_c_json_parser@@Base+0xf88>
   22854:	mov	r0, r4
   22858:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   2285c:	ldr	r1, [pc, #1544]	; 22e6c <__flatcc_fb_gen_c_json_parser@@Base+0x1030>
   22860:	mov	r0, r4
   22864:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   22868:	ldr	r1, [pc, #1536]	; 22e70 <__flatcc_fb_gen_c_json_parser@@Base+0x1034>
   2286c:	mov	r0, r4
   22870:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   22874:	ldr	r3, [sp, #44]	; 0x2c
   22878:	cmp	r3, #0
   2287c:	bne	229e8 <__flatcc_fb_gen_c_json_parser@@Base+0xbac>
   22880:	mov	r1, sl
   22884:	mov	r0, r4
   22888:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   2288c:	ldr	r1, [pc, #1260]	; 22d80 <__flatcc_fb_gen_c_json_parser@@Base+0xf44>
   22890:	mov	r0, r4
   22894:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   22898:	ldrd	r2, [r6, #96]	; 0x60
   2289c:	ldr	r1, [pc, #1316]	; 22dc8 <__flatcc_fb_gen_c_json_parser@@Base+0xf8c>
   228a0:	mov	r0, r4
   228a4:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   228a8:	ldr	r2, [sp, #44]	; 0x2c
   228ac:	cmp	r2, #0
   228b0:	bne	229f8 <__flatcc_fb_gen_c_json_parser@@Base+0xbbc>
   228b4:	ldr	r1, [pc, #1188]	; 22d60 <__flatcc_fb_gen_c_json_parser@@Base+0xf24>
   228b8:	mov	r0, r4
   228bc:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   228c0:	ldr	r1, [pc, #1180]	; 22d64 <__flatcc_fb_gen_c_json_parser@@Base+0xf28>
   228c4:	mov	r0, r4
   228c8:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   228cc:	ldr	r3, [r4, #220]	; 0xdc
   228d0:	add	r3, r3, #1
   228d4:	str	r3, [r4, #220]	; 0xdc
   228d8:	ldr	r1, [pc, #1224]	; 22da8 <__flatcc_fb_gen_c_json_parser@@Base+0xf6c>
   228dc:	mov	r0, r4
   228e0:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   228e4:	ldr	r3, [sp, #20]
   228e8:	cmp	r3, #0
   228ec:	ble	22a0c <__flatcc_fb_gen_c_json_parser@@Base+0xbd0>
   228f0:	ldr	r1, [pc, #1404]	; 22e74 <__flatcc_fb_gen_c_json_parser@@Base+0x1038>
   228f4:	mov	r0, r4
   228f8:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   228fc:	mov	r2, #0
   22900:	str	r2, [sp]
   22904:	ldr	r3, [sp, #20]
   22908:	sub	r3, r3, #1
   2290c:	add	r1, sp, #24
   22910:	mov	r0, r4
   22914:	bl	20f70 <__flatcc_fb_gen_c_verifier@@Base+0x273c>
   22918:	ldr	r1, [pc, #1196]	; 22dcc <__flatcc_fb_gen_c_json_parser@@Base+0xf90>
   2291c:	mov	r0, r4
   22920:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   22924:	ldr	r3, [r4, #220]	; 0xdc
   22928:	cmp	r3, #0
   2292c:	beq	22a28 <__flatcc_fb_gen_c_json_parser@@Base+0xbec>
   22930:	sub	r3, r3, #1
   22934:	str	r3, [r4, #220]	; 0xdc
   22938:	ldr	r1, [pc, #1432]	; 22ed8 <__flatcc_fb_gen_c_json_parser@@Base+0x109c>
   2293c:	mov	r0, r4
   22940:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   22944:	ldr	r1, [pc, #1156]	; 22dd0 <__flatcc_fb_gen_c_json_parser@@Base+0xf94>
   22948:	mov	r0, r4
   2294c:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   22950:	ldr	r3, [sp, #20]
   22954:	cmp	r3, #0
   22958:	ble	22b6c <__flatcc_fb_gen_c_json_parser@@Base+0xd30>
   2295c:	mov	r8, #1
   22960:	mov	r5, #0
   22964:	mov	r7, r5
   22968:	str	r8, [sp, #12]
   2296c:	b	22a84 <__flatcc_fb_gen_c_json_parser@@Base+0xc48>
   22970:	ldr	r3, [pc, #1116]	; 22dd4 <__flatcc_fb_gen_c_json_parser@@Base+0xf98>
   22974:	ldr	r2, [pc, #1116]	; 22dd8 <__flatcc_fb_gen_c_json_parser@@Base+0xf9c>
   22978:	ldr	r1, [pc, #1400]	; 22ef8 <__flatcc_fb_gen_c_json_parser@@Base+0x10bc>
   2297c:	ldr	r0, [pc, #1112]	; 22ddc <__flatcc_fb_gen_c_json_parser@@Base+0xfa0>
   22980:	bl	14148 <__assert_fail@plt>
   22984:	ldr	r3, [sp, #20]
   22988:	cmp	r3, #0
   2298c:	bgt	229b0 <__flatcc_fb_gen_c_json_parser@@Base+0xb74>
   22990:	str	r6, [sp, #36]	; 0x24
   22994:	mov	r3, #0
   22998:	str	r3, [sp, #40]	; 0x28
   2299c:	ldr	r2, [pc, #936]	; 22d4c <__flatcc_fb_gen_c_json_parser@@Base+0xf10>
   229a0:	str	r2, [sp, #28]
   229a4:	str	fp, [sp, #32]
   229a8:	str	r3, [sp, #44]	; 0x2c
   229ac:	b	227e4 <__flatcc_fb_gen_c_json_parser@@Base+0x9a8>
   229b0:	ldr	r4, [pc, #1344]	; 22ef8 <__flatcc_fb_gen_c_json_parser@@Base+0x10bc>
   229b4:	ldr	r3, [pc, #1172]	; 22e50 <__flatcc_fb_gen_c_json_parser@@Base+0x1014>
   229b8:	ldr	r0, [r3]
   229bc:	ldr	r3, [pc, #1168]	; 22e54 <__flatcc_fb_gen_c_json_parser@@Base+0x1018>
   229c0:	str	r3, [sp]
   229c4:	mov	r3, #1392	; 0x570
   229c8:	mov	r2, r4
   229cc:	ldr	r1, [pc, #1156]	; 22e58 <__flatcc_fb_gen_c_json_parser@@Base+0x101c>
   229d0:	bl	14094 <fprintf@plt>
   229d4:	ldr	r3, [pc, #1016]	; 22dd4 <__flatcc_fb_gen_c_json_parser@@Base+0xf98>
   229d8:	mov	r2, #1392	; 0x570
   229dc:	mov	r1, r4
   229e0:	ldr	r0, [pc, #1140]	; 22e5c <__flatcc_fb_gen_c_json_parser@@Base+0x1020>
   229e4:	bl	14148 <__assert_fail@plt>
   229e8:	ldr	r1, [pc, #1008]	; 22de0 <__flatcc_fb_gen_c_json_parser@@Base+0xfa4>
   229ec:	mov	r0, r4
   229f0:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   229f4:	b	22880 <__flatcc_fb_gen_c_json_parser@@Base+0xa44>
   229f8:	asr	r3, r2, #31
   229fc:	ldr	r1, [pc, #992]	; 22de4 <__flatcc_fb_gen_c_json_parser@@Base+0xfa8>
   22a00:	mov	r0, r4
   22a04:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   22a08:	b	228b4 <__flatcc_fb_gen_c_json_parser@@Base+0xa78>
   22a0c:	ldr	r1, [pc, #980]	; 22de8 <__flatcc_fb_gen_c_json_parser@@Base+0xfac>
   22a10:	mov	r0, r4
   22a14:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   22a18:	ldr	r1, [pc, #844]	; 22d6c <__flatcc_fb_gen_c_json_parser@@Base+0xf30>
   22a1c:	mov	r0, r4
   22a20:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   22a24:	b	22918 <__flatcc_fb_gen_c_json_parser@@Base+0xadc>
   22a28:	ldr	r3, [pc, #932]	; 22dd4 <__flatcc_fb_gen_c_json_parser@@Base+0xf98>
   22a2c:	ldr	r2, [pc, #952]	; 22dec <__flatcc_fb_gen_c_json_parser@@Base+0xfb0>
   22a30:	ldr	r1, [pc, #1216]	; 22ef8 <__flatcc_fb_gen_c_json_parser@@Base+0x10bc>
   22a34:	ldr	r0, [pc, #1204]	; 22ef0 <__flatcc_fb_gen_c_json_parser@@Base+0x10b4>
   22a38:	bl	14148 <__assert_fail@plt>
   22a3c:	ldr	r3, [r1, #16]
   22a40:	ldrh	r2, [r3, #8]
   22a44:	cmp	r2, #4
   22a48:	movne	r2, #0
   22a4c:	moveq	r2, #1
   22a50:	b	22ab4 <__flatcc_fb_gen_c_json_parser@@Base+0xc78>
   22a54:	ldrd	r0, [r1, #96]	; 0x60
   22a58:	subs	r8, r0, r2
   22a5c:	sbc	r9, r1, r2, asr #31
   22a60:	mov	r2, r8
   22a64:	mov	r3, r9
   22a68:	ldr	r1, [pc, #896]	; 22df0 <__flatcc_fb_gen_c_json_parser@@Base+0xfb4>
   22a6c:	mov	r0, r4
   22a70:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   22a74:	add	r5, r5, #1
   22a78:	ldr	r3, [sp, #20]
   22a7c:	cmp	r5, r3
   22a80:	bge	22afc <__flatcc_fb_gen_c_json_parser@@Base+0xcc0>
   22a84:	ldr	r3, [sp, #24]
   22a88:	add	r3, r3, r5, lsl #4
   22a8c:	ldr	r1, [r3, #8]
   22a90:	ldrh	r0, [r1, #72]	; 0x48
   22a94:	tst	r0, #4
   22a98:	bne	22a74 <__flatcc_fb_gen_c_json_parser@@Base+0xc38>
   22a9c:	ldrh	r3, [r1, #24]
   22aa0:	sub	r3, r3, #14
   22aa4:	uxth	r3, r3
   22aa8:	cmp	r3, #1
   22aac:	movhi	r2, r7
   22ab0:	bls	22a3c <__flatcc_fb_gen_c_json_parser@@Base+0xc00>
   22ab4:	tst	r0, #256	; 0x100
   22ab8:	beq	22a74 <__flatcc_fb_gen_c_json_parser@@Base+0xc38>
   22abc:	ldr	r3, [sp, #12]
   22ac0:	cmp	r3, #0
   22ac4:	beq	22a54 <__flatcc_fb_gen_c_json_parser@@Base+0xc18>
   22ac8:	ldrd	r0, [r1, #96]	; 0x60
   22acc:	subs	r8, r0, r2
   22ad0:	sbc	r9, r1, r2, asr #31
   22ad4:	mov	r2, r8
   22ad8:	mov	r3, r9
   22adc:	ldr	r1, [pc, #784]	; 22df4 <__flatcc_fb_gen_c_json_parser@@Base+0xfb8>
   22ae0:	mov	r0, r4
   22ae4:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   22ae8:	ldr	r3, [r4, #220]	; 0xdc
   22aec:	add	r3, r3, #1
   22af0:	str	r3, [r4, #220]	; 0xdc
   22af4:	str	r7, [sp, #12]
   22af8:	b	22a74 <__flatcc_fb_gen_c_json_parser@@Base+0xc38>
   22afc:	ldr	r8, [sp, #12]
   22b00:	cmp	r8, #0
   22b04:	bne	22b6c <__flatcc_fb_gen_c_json_parser@@Base+0xd30>
   22b08:	ldr	r3, [r4, #220]	; 0xdc
   22b0c:	cmp	r3, #0
   22b10:	beq	22c5c <__flatcc_fb_gen_c_json_parser@@Base+0xe20>
   22b14:	sub	r3, r3, #1
   22b18:	str	r3, [r4, #220]	; 0xdc
   22b1c:	ldr	r1, [pc, #724]	; 22df8 <__flatcc_fb_gen_c_json_parser@@Base+0xfbc>
   22b20:	mov	r0, r4
   22b24:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   22b28:	ldr	r3, [r4, #220]	; 0xdc
   22b2c:	add	r3, r3, #1
   22b30:	str	r3, [r4, #220]	; 0xdc
   22b34:	ldr	r1, [pc, #704]	; 22dfc <__flatcc_fb_gen_c_json_parser@@Base+0xfc0>
   22b38:	mov	r0, r4
   22b3c:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   22b40:	ldr	r1, [pc, #696]	; 22e00 <__flatcc_fb_gen_c_json_parser@@Base+0xfc4>
   22b44:	mov	r0, r4
   22b48:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   22b4c:	ldr	r3, [r4, #220]	; 0xdc
   22b50:	cmp	r3, #0
   22b54:	beq	22c70 <__flatcc_fb_gen_c_json_parser@@Base+0xe34>
   22b58:	sub	r3, r3, #1
   22b5c:	str	r3, [r4, #220]	; 0xdc
   22b60:	ldr	r1, [pc, #880]	; 22ed8 <__flatcc_fb_gen_c_json_parser@@Base+0x109c>
   22b64:	mov	r0, r4
   22b68:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   22b6c:	ldr	r3, [sp, #44]	; 0x2c
   22b70:	cmp	r3, #0
   22b74:	bne	22c84 <__flatcc_fb_gen_c_json_parser@@Base+0xe48>
   22b78:	ldr	r1, [pc, #644]	; 22e04 <__flatcc_fb_gen_c_json_parser@@Base+0xfc8>
   22b7c:	mov	r0, r4
   22b80:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   22b84:	ldr	r1, [pc, #748]	; 22e78 <__flatcc_fb_gen_c_json_parser@@Base+0x103c>
   22b88:	mov	r0, r4
   22b8c:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   22b90:	ldr	r3, [r4, #220]	; 0xdc
   22b94:	str	r3, [r4, #228]	; 0xe4
   22b98:	mov	r3, #0
   22b9c:	str	r3, [r4, #220]	; 0xdc
   22ba0:	ldr	r1, [pc, #460]	; 22d74 <__flatcc_fb_gen_c_json_parser@@Base+0xf38>
   22ba4:	mov	r0, r4
   22ba8:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   22bac:	ldr	r3, [r4, #228]	; 0xe4
   22bb0:	str	r3, [r4, #220]	; 0xdc
   22bb4:	ldr	r1, [pc, #444]	; 22d78 <__flatcc_fb_gen_c_json_parser@@Base+0xf3c>
   22bb8:	mov	r0, r4
   22bbc:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   22bc0:	ldr	r3, [r4, #220]	; 0xdc
   22bc4:	cmp	r3, #0
   22bc8:	beq	22c94 <__flatcc_fb_gen_c_json_parser@@Base+0xe58>
   22bcc:	sub	r3, r3, #1
   22bd0:	str	r3, [r4, #220]	; 0xdc
   22bd4:	ldr	r1, [pc, #764]	; 22ed8 <__flatcc_fb_gen_c_json_parser@@Base+0x109c>
   22bd8:	mov	r0, r4
   22bdc:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   22be0:	mov	r1, sl
   22be4:	mov	r0, r4
   22be8:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   22bec:	add	r2, sp, #52	; 0x34
   22bf0:	ldr	r1, [pc, #408]	; 22d90 <__flatcc_fb_gen_c_json_parser@@Base+0xf54>
   22bf4:	mov	r0, r4
   22bf8:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   22bfc:	ldr	r1, [pc, #676]	; 22ea8 <__flatcc_fb_gen_c_json_parser@@Base+0x106c>
   22c00:	mov	r0, r4
   22c04:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   22c08:	ldr	r3, [r4, #220]	; 0xdc
   22c0c:	add	r3, r3, #1
   22c10:	str	r3, [r4, #220]	; 0xdc
   22c14:	add	r2, sp, #52	; 0x34
   22c18:	ldr	r1, [pc, #488]	; 22e08 <__flatcc_fb_gen_c_json_parser@@Base+0xfcc>
   22c1c:	mov	r0, r4
   22c20:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   22c24:	ldr	r3, [r4, #220]	; 0xdc
   22c28:	cmp	r3, #0
   22c2c:	beq	22ca8 <__flatcc_fb_gen_c_json_parser@@Base+0xe6c>
   22c30:	sub	r3, r3, #1
   22c34:	str	r3, [r4, #220]	; 0xdc
   22c38:	ldr	r1, [pc, #664]	; 22ed8 <__flatcc_fb_gen_c_json_parser@@Base+0x109c>
   22c3c:	mov	r0, r4
   22c40:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   22c44:	mov	r1, sl
   22c48:	mov	r0, r4
   22c4c:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   22c50:	ldr	r0, [sp, #24]
   22c54:	bl	20bf8 <__flatcc_fb_gen_c_verifier@@Base+0x23c4>
   22c58:	b	222c0 <__flatcc_fb_gen_c_json_parser@@Base+0x484>
   22c5c:	ldr	r3, [pc, #368]	; 22dd4 <__flatcc_fb_gen_c_json_parser@@Base+0xf98>
   22c60:	ldr	r2, [pc, #420]	; 22e0c <__flatcc_fb_gen_c_json_parser@@Base+0xfd0>
   22c64:	ldr	r1, [pc, #652]	; 22ef8 <__flatcc_fb_gen_c_json_parser@@Base+0x10bc>
   22c68:	ldr	r0, [pc, #640]	; 22ef0 <__flatcc_fb_gen_c_json_parser@@Base+0x10b4>
   22c6c:	bl	14148 <__assert_fail@plt>
   22c70:	ldr	r3, [pc, #348]	; 22dd4 <__flatcc_fb_gen_c_json_parser@@Base+0xf98>
   22c74:	ldr	r2, [pc, #404]	; 22e10 <__flatcc_fb_gen_c_json_parser@@Base+0xfd4>
   22c78:	ldr	r1, [pc, #632]	; 22ef8 <__flatcc_fb_gen_c_json_parser@@Base+0x10bc>
   22c7c:	ldr	r0, [pc, #620]	; 22ef0 <__flatcc_fb_gen_c_json_parser@@Base+0x10b4>
   22c80:	bl	14148 <__assert_fail@plt>
   22c84:	ldr	r1, [pc, #392]	; 22e14 <__flatcc_fb_gen_c_json_parser@@Base+0xfd8>
   22c88:	mov	r0, r4
   22c8c:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   22c90:	b	22b78 <__flatcc_fb_gen_c_json_parser@@Base+0xd3c>
   22c94:	ldr	r3, [pc, #312]	; 22dd4 <__flatcc_fb_gen_c_json_parser@@Base+0xf98>
   22c98:	ldr	r2, [pc, #376]	; 22e18 <__flatcc_fb_gen_c_json_parser@@Base+0xfdc>
   22c9c:	ldr	r1, [pc, #596]	; 22ef8 <__flatcc_fb_gen_c_json_parser@@Base+0x10bc>
   22ca0:	ldr	r0, [pc, #584]	; 22ef0 <__flatcc_fb_gen_c_json_parser@@Base+0x10b4>
   22ca4:	bl	14148 <__assert_fail@plt>
   22ca8:	ldr	r3, [pc, #292]	; 22dd4 <__flatcc_fb_gen_c_json_parser@@Base+0xf98>
   22cac:	ldr	r2, [pc, #360]	; 22e1c <__flatcc_fb_gen_c_json_parser@@Base+0xfe0>
   22cb0:	ldr	r1, [pc, #576]	; 22ef8 <__flatcc_fb_gen_c_json_parser@@Base+0x10bc>
   22cb4:	ldr	r0, [pc, #564]	; 22ef0 <__flatcc_fb_gen_c_json_parser@@Base+0x10b4>
   22cb8:	bl	14148 <__assert_fail@plt>
   22cbc:	mov	r1, r6
   22cc0:	mov	r0, r4
   22cc4:	bl	21b28 <__flatcc_fb_gen_c_verifier@@Base+0x32f4>
   22cc8:	b	222c0 <__flatcc_fb_gen_c_json_parser@@Base+0x484>
   22ccc:	andeq	r0, r5, r8, ror #19
   22cd0:	andeq	r0, r5, r4, lsl #20
   22cd4:	muleq	r4, r0, r4
   22cd8:	andeq	r0, r5, r0, lsr #20
   22cdc:	andeq	r0, r5, r0, ror sl
   22ce0:	muleq	r5, r8, sl
   22ce4:	andeq	ip, r3, r8, ror r9
   22ce8:	andeq	r0, r5, ip, lsr #25
   22cec:	andeq	r0, r5, ip, lsr sp
   22cf0:	andeq	r0, r5, r4, lsr #18
   22cf4:	andeq	pc, r4, r8, ror #14
   22cf8:	andeq	r0, r5, r0, ror sp
   22cfc:	strdeq	r0, [r5], -r0	; <UNPREDICTABLE>
   22d00:			; <UNDEFINED> instruction: 0x0003e1b4
   22d04:	andeq	r0, r5, r8, lsr #21
   22d08:	andeq	r0, r5, ip, lsr #21
   22d0c:	andeq	r0, r5, r4, lsl #22
   22d10:	andeq	r0, r5, r8, lsl #22
   22d14:	andeq	r0, r5, ip, asr #22
   22d18:	andeq	r0, r5, r4, lsl #23
   22d1c:	andeq	r0, r5, ip, lsr #23
   22d20:	strdeq	r0, [r5], -r4
   22d24:	andeq	pc, r4, r0, asr #10
   22d28:	andeq	r0, r5, r0, lsl #25
   22d2c:	andeq	pc, r4, ip, lsr #8
   22d30:			; <UNDEFINED> instruction: 0x000006b4
   22d34:	andeq	r0, r0, r3, asr #13
   22d38:	andeq	r0, r5, r4, ror lr
   22d3c:	ldrdeq	r0, [r0], -r3
   22d40:	andeq	pc, r1, r4, lsl r2	; <UNPREDICTABLE>
   22d44:	andeq	lr, r1, ip, lsr #26
   22d48:	ldrdeq	r0, [r0], -fp
   22d4c:	andeq	r0, r2, r0, ror #17
   22d50:	andeq	r0, r5, r4, ror #30
   22d54:	andeq	r0, r5, r4, ror #31
   22d58:	strdeq	r0, [r5], -r0	; <UNPREDICTABLE>
   22d5c:	andeq	r1, r5, ip
   22d60:	andeq	r1, r5, r8, lsl r0
   22d64:	ldrdeq	pc, [r4], -r0
   22d68:	andeq	r1, r5, r8, asr r0
   22d6c:	andeq	pc, r4, r8, ror #9
   22d70:	andeq	r1, r5, r4, lsr #1
   22d74:	andeq	r1, r5, r0, ror #1
   22d78:	andeq	pc, r4, r0, asr fp	; <UNPREDICTABLE>
   22d7c:	andeq	r1, r5, r8, ror #1
   22d80:			; <UNDEFINED> instruction: 0x0004f8b8
   22d84:	andeq	r1, r5, ip, ror #2
   22d88:	muleq	r5, r0, r1
   22d8c:			; <UNDEFINED> instruction: 0x000511b8
   22d90:	andeq	r1, r5, ip, lsl #4
   22d94:	andeq	r1, r5, r0, lsr #5
   22d98:	andeq	pc, r4, r8, asr #8
   22d9c:	andeq	r0, r0, r5, lsl r5
   22da0:	strdeq	sp, [r3], -r4
   22da4:	andeq	r0, r0, r7, lsl r5
   22da8:	andeq	r1, r5, ip, rrx
   22dac:	andeq	r0, r0, r6, lsr r5
   22db0:	andeq	r0, r0, pc, lsr r5
   22db4:	andeq	pc, r4, r4, ror #8
   22db8:	andeq	r0, r0, r9, asr #10
   22dbc:	andeq	r0, r0, sl, asr r5
   22dc0:	andeq	r1, r5, r4, lsl #6
   22dc4:	andeq	r1, r5, r8, lsl #7
   22dc8:	andeq	r1, r5, r0, asr #7
   22dcc:	andeq	r1, r5, r8, ror r4
   22dd0:			; <UNDEFINED> instruction: 0x000514b4
   22dd4:	andeq	pc, r4, r8, ror r4	; <UNPREDICTABLE>
   22dd8:	andeq	r0, r0, lr, ror #10
   22ddc:	andeq	sp, r3, r0, lsl #19
   22de0:	andeq	r1, r5, ip, lsr #7
   22de4:	andeq	r1, r5, r0, lsl #8
   22de8:	andeq	r1, r5, ip, asr r4
   22dec:	muleq	r0, lr, r5
   22df0:	andeq	r1, r5, r0, lsl r5
   22df4:	ldrdeq	r1, [r5], -r4
   22df8:	andeq	r0, r5, r8, lsr #1
   22dfc:	andeq	r1, r5, ip, asr #10
   22e00:	andeq	r0, r5, r8, asr #9
   22e04:	andeq	r1, r5, r8, ror #11
   22e08:	andeq	r1, r5, ip, lsr #12
   22e0c:			; <UNDEFINED> instruction: 0x000005b2
   22e10:			; <UNDEFINED> instruction: 0x000005b5
   22e14:	andeq	r1, r5, r4, lsr #11
   22e18:	andeq	r0, r0, r1, asr #11
   22e1c:	andeq	r0, r0, r7, asr #11
   22e20:	andeq	r1, r2, r4, lsl #16
   22e24:	andeq	r0, r2, ip, lsr #19
   22e28:	andeq	r0, r2, ip, lsl #19
   22e2c:	andeq	r0, r2, ip, lsl #20
   22e30:	andeq	pc, r1, r0, ror #4
   22e34:	andeq	lr, r1, r8, lsl sp
   22e38:	strdeq	r0, [r5], -r8
   22e3c:	andeq	r0, r5, ip, asr r8
   22e40:	andeq	r1, r5, ip, lsl #13
   22e44:	andeq	r0, r5, r4, asr #17
   22e48:	andeq	r1, r5, r4, lsr #18
   22e4c:	andeq	r0, r0, sl, lsr #9
   22e50:	andeq	r7, r6, r8, lsr #1
   22e54:	andeq	r0, r5, r0, lsr #16
   22e58:	andeq	ip, r3, r8, lsr #27
   22e5c:	andeq	r5, r4, r0, ror #3
   22e60:			; <UNDEFINED> instruction: 0x000004b5
   22e64:			; <UNDEFINED> instruction: 0x000004ba
   22e68:	andeq	r0, r5, r4, ror #17
   22e6c:	andeq	r0, r5, r4, lsl #18
   22e70:	andeq	r0, r5, r8, lsl r9
   22e74:	andeq	r0, r5, ip, asr r7
   22e78:	andeq	pc, r4, r4, lsr fp	; <UNPREDICTABLE>
   22e7c:	andeq	pc, r4, ip, lsl #9
   22e80:	andeq	r0, r0, r3, asr #9
   22e84:	strdeq	r1, [r5], -r4
   22e88:	andeq	r1, r5, r0, lsr r7
   22e8c:	andeq	r1, r5, r0, lsl #16
   22e90:	andeq	r0, r0, sl, asr #12
   22e94:	andeq	r0, r0, sl, asr r6
   22e98:	andeq	r0, r0, lr, asr r6
   22e9c:	andeq	pc, r4, r4, lsr #9
   22ea0:	andeq	r0, r5, r4, lsr ip
   22ea4:	andeq	r1, r5, r8, asr #13
   22ea8:	andeq	r2, r5, r0, asr #3
   22eac:			; <UNDEFINED> instruction: 0x000518b0
   22eb0:	andeq	r1, r5, r4, lsl r7
   22eb4:	andeq	r1, r5, ip, asr #17
   22eb8:	andeq	r1, r5, ip, asr #14
   22ebc:	andeq	r1, r5, r8, asr #15
   22ec0:	andeq	r1, r5, r8, ror #17
   22ec4:	andeq	r1, r5, r4, lsr r8
   22ec8:	andeq	r1, r5, r8, asr #16
   22ecc:	andeq	r1, r5, ip, asr r8
   22ed0:	muleq	r5, r0, r8
   22ed4:	andeq	r1, r5, r4, lsr #17
   22ed8:	andeq	pc, r4, r4, ror #11
   22edc:	muleq	r4, r0, r4
   22ee0:	andeq	r0, r0, sp, ror #12
   22ee4:	andeq	r1, r5, r8, lsl #15
   22ee8:	andeq	r0, r0, sp, ror r6
   22eec:	andeq	r0, r0, r1, lsl #13
   22ef0:	ldrdeq	pc, [r4], -r8
   22ef4:			; <UNDEFINED> instruction: 0x0004f4bc
   22ef8:	andeq	pc, r4, r0, lsl #11
   22efc:	andeq	r4, r4, r8, lsl r0
   22f00:	ldr	r3, [r4, #208]	; 0xd0
   22f04:	mov	r2, r4
   22f08:	ldr	r1, [pc, #-240]	; 22e20 <__flatcc_fb_gen_c_json_parser@@Base+0xfe4>
   22f0c:	ldr	r0, [r3, #60]	; 0x3c
   22f10:	bl	29458 <fb_scope_table_visit@@Base>
   22f14:	mov	r1, #0
   22f18:	str	r1, [sp, #24]
   22f1c:	str	r1, [sp, #28]
   22f20:	str	r1, [sp, #32]
   22f24:	str	r1, [sp, #36]	; 0x24
   22f28:	str	r1, [sp, #40]	; 0x28
   22f2c:	str	r1, [sp, #44]	; 0x2c
   22f30:	str	r1, [sp, #48]	; 0x30
   22f34:	ldr	r5, [r4, #208]	; 0xd0
   22f38:	ldr	r7, [r5, #60]	; 0x3c
   22f3c:	mov	r2, #44	; 0x2c
   22f40:	add	r0, sp, #52	; 0x34
   22f44:	bl	140ac <memset@plt>
   22f48:	mov	r3, #1
   22f4c:	str	r3, [sp, #52]	; 0x34
   22f50:	str	r5, [sp, #92]	; 0x5c
   22f54:	add	r2, sp, #52	; 0x34
   22f58:	ldr	r1, [pc, #-316]	; 22e24 <__flatcc_fb_gen_c_json_parser@@Base+0xfe8>
   22f5c:	mov	r0, r7
   22f60:	bl	29458 <fb_scope_table_visit@@Base>
   22f64:	ldr	r8, [sp, #56]	; 0x38
   22f68:	mov	r1, #8
   22f6c:	mov	r0, r8
   22f70:	bl	13fa4 <calloc@plt>
   22f74:	mov	r5, r0
   22f78:	str	r0, [sp, #68]	; 0x44
   22f7c:	ldr	r9, [sp, #60]	; 0x3c
   22f80:	mov	r1, #8
   22f84:	mov	r0, r9
   22f88:	bl	13fa4 <calloc@plt>
   22f8c:	mov	r6, r0
   22f90:	str	r0, [sp, #72]	; 0x48
   22f94:	ldr	sl, [sp, #64]	; 0x40
   22f98:	mov	r0, sl
   22f9c:	bl	14040 <malloc@plt>
   22fa0:	str	r0, [sp, #76]	; 0x4c
   22fa4:	str	r5, [sp, #80]	; 0x50
   22fa8:	str	r6, [sp, #84]	; 0x54
   22fac:	str	r0, [sp, #88]	; 0x58
   22fb0:	clz	r5, r5
   22fb4:	lsr	r5, r5, #5
   22fb8:	cmp	r8, #0
   22fbc:	movle	r5, #0
   22fc0:	cmp	r5, #0
   22fc4:	bne	231e0 <__flatcc_fb_gen_c_json_parser@@Base+0x13a4>
   22fc8:	cmp	r9, #0
   22fcc:	movle	r9, #0
   22fd0:	movgt	r9, #1
   22fd4:	cmp	r6, #0
   22fd8:	movne	r9, #0
   22fdc:	cmp	r9, #0
   22fe0:	bne	231e0 <__flatcc_fb_gen_c_json_parser@@Base+0x13a4>
   22fe4:	clz	r0, r0
   22fe8:	lsr	r0, r0, #5
   22fec:	cmp	sl, #0
   22ff0:	moveq	r0, #0
   22ff4:	cmp	r0, #0
   22ff8:	bne	231e0 <__flatcc_fb_gen_c_json_parser@@Base+0x13a4>
   22ffc:	add	r2, sp, #52	; 0x34
   23000:	ldr	r1, [pc, #-480]	; 22e28 <__flatcc_fb_gen_c_json_parser@@Base+0xfec>
   23004:	mov	r0, r7
   23008:	bl	29458 <fb_scope_table_visit@@Base>
   2300c:	ldr	r1, [sp, #56]	; 0x38
   23010:	ldr	r0, [sp, #68]	; 0x44
   23014:	bl	209cc <__flatcc_fb_gen_c_verifier@@Base+0x2198>
   23018:	ldr	r1, [sp, #60]	; 0x3c
   2301c:	ldr	r0, [sp, #72]	; 0x48
   23020:	bl	209cc <__flatcc_fb_gen_c_verifier@@Base+0x2198>
   23024:	ldr	r5, [sp, #60]	; 0x3c
   23028:	cmp	r5, #0
   2302c:	beq	2370c <__flatcc_fb_gen_c_json_parser@@Base+0x18d0>
   23030:	mov	sl, r5
   23034:	lsl	r7, r5, #4
   23038:	mov	r0, r7
   2303c:	bl	14040 <malloc@plt>
   23040:	subs	r9, r0, #0
   23044:	beq	231ec <__flatcc_fb_gen_c_json_parser@@Base+0x13b0>
   23048:	cmp	r5, #0
   2304c:	ble	2308c <__flatcc_fb_gen_c_json_parser@@Base+0x1250>
   23050:	ldr	r6, [sp, #72]	; 0x48
   23054:	mov	r5, r9
   23058:	add	r7, r9, r7
   2305c:	mov	r8, #0
   23060:	ldr	r3, [r6, #4]
   23064:	str	r3, [r5]
   23068:	ldr	r0, [r6, #4]
   2306c:	bl	1407c <strlen@plt>
   23070:	str	r0, [r5, #4]
   23074:	ldr	r3, [r6], #8
   23078:	str	r3, [r5, #8]
   2307c:	str	r8, [r5, #12]
   23080:	add	r5, r5, #16
   23084:	cmp	r7, r5
   23088:	bne	23060 <__flatcc_fb_gen_c_json_parser@@Base+0x1224>
   2308c:	ldr	r3, [pc, #-616]	; 22e2c <__flatcc_fb_gen_c_json_parser@@Base+0xff0>
   23090:	mov	r2, #16
   23094:	mov	r1, sl
   23098:	mov	r0, r9
   2309c:	bl	14118 <qsort@plt>
   230a0:	ldr	r5, [sp, #60]	; 0x3c
   230a4:	str	r9, [sp, #24]
   230a8:	mov	r3, #0
   230ac:	str	r3, [sp, #36]	; 0x24
   230b0:	mov	r3, #4
   230b4:	str	r3, [sp, #40]	; 0x28
   230b8:	ldr	r3, [pc, #-656]	; 22e30 <__flatcc_fb_gen_c_json_parser@@Base+0xff4>
   230bc:	str	r3, [sp, #28]
   230c0:	ldr	r3, [pc, #-660]	; 22e34 <__flatcc_fb_gen_c_json_parser@@Base+0xff8>
   230c4:	str	r3, [sp, #32]
   230c8:	ldr	r3, [r4, #208]	; 0xd0
   230cc:	ldr	r2, [r3, #160]	; 0xa0
   230d0:	ldr	r1, [pc, #-672]	; 22e38 <__flatcc_fb_gen_c_json_parser@@Base+0xffc>
   230d4:	mov	r0, r4
   230d8:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   230dc:	ldr	r3, [r4, #220]	; 0xdc
   230e0:	add	r3, r3, #2
   230e4:	str	r3, [r4, #220]	; 0xdc
   230e8:	ldr	r1, [pc, #-692]	; 22e3c <__flatcc_fb_gen_c_json_parser@@Base+0x1000>
   230ec:	mov	r0, r4
   230f0:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   230f4:	ldr	r3, [r4, #220]	; 0xdc
   230f8:	cmp	r3, #0
   230fc:	beq	23240 <__flatcc_fb_gen_c_json_parser@@Base+0x1404>
   23100:	sub	r2, r3, #1
   23104:	str	r2, [r4, #220]	; 0xdc
   23108:	cmp	r2, #0
   2310c:	beq	23254 <__flatcc_fb_gen_c_json_parser@@Base+0x1418>
   23110:	sub	r3, r3, #2
   23114:	str	r3, [r4, #220]	; 0xdc
   23118:	ldr	r1, [pc, #-632]	; 22ea8 <__flatcc_fb_gen_c_json_parser@@Base+0x106c>
   2311c:	mov	r0, r4
   23120:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   23124:	ldr	r3, [r4, #220]	; 0xdc
   23128:	add	r3, r3, #1
   2312c:	str	r3, [r4, #220]	; 0xdc
   23130:	cmp	r5, #0
   23134:	bne	2327c <__flatcc_fb_gen_c_json_parser@@Base+0x1440>
   23138:	ldr	r1, [pc, #-768]	; 22e40 <__flatcc_fb_gen_c_json_parser@@Base+0x1004>
   2313c:	mov	r0, r4
   23140:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   23144:	ldr	r1, [pc, #-776]	; 22e44 <__flatcc_fb_gen_c_json_parser@@Base+0x1008>
   23148:	mov	r0, r4
   2314c:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   23150:	ldr	r3, [r4, #220]	; 0xdc
   23154:	cmp	r3, #0
   23158:	beq	23268 <__flatcc_fb_gen_c_json_parser@@Base+0x142c>
   2315c:	sub	r3, r3, #1
   23160:	str	r3, [r4, #220]	; 0xdc
   23164:	ldr	r1, [pc, #-660]	; 22ed8 <__flatcc_fb_gen_c_json_parser@@Base+0x109c>
   23168:	mov	r0, r4
   2316c:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   23170:	ldr	r1, [pc, #-668]	; 22edc <__flatcc_fb_gen_c_json_parser@@Base+0x10a0>
   23174:	mov	r0, r4
   23178:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   2317c:	ldr	r0, [sp, #24]
   23180:	bl	20bf8 <__flatcc_fb_gen_c_verifier@@Base+0x23c4>
   23184:	add	r0, sp, #52	; 0x34
   23188:	bl	20c0c <__flatcc_fb_gen_c_verifier@@Base+0x23d8>
   2318c:	ldr	r3, [r4, #208]	; 0xd0
   23190:	ldr	r5, [r3, #52]	; 0x34
   23194:	cmp	r5, #0
   23198:	beq	231b0 <__flatcc_fb_gen_c_json_parser@@Base+0x1374>
   2319c:	ldrh	r3, [r5, #8]
   231a0:	cmp	r3, #0
   231a4:	beq	23314 <__flatcc_fb_gen_c_json_parser@@Base+0x14d8>
   231a8:	cmp	r3, #1
   231ac:	beq	23504 <__flatcc_fb_gen_c_json_parser@@Base+0x16c8>
   231b0:	ldr	r3, [r4, #212]	; 0xd4
   231b4:	ldr	r3, [r3, #140]	; 0x8c
   231b8:	cmp	r3, #0
   231bc:	bne	236f4 <__flatcc_fb_gen_c_json_parser@@Base+0x18b8>
   231c0:	ldr	r3, [r4, #208]	; 0xd0
   231c4:	ldr	r2, [r3, #164]	; 0xa4
   231c8:	ldr	r1, [pc, #-904]	; 22e48 <__flatcc_fb_gen_c_json_parser@@Base+0x100c>
   231cc:	mov	r0, r4
   231d0:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   231d4:	mov	r0, #0
   231d8:	add	sp, sp, #276	; 0x114
   231dc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   231e0:	add	r0, sp, #52	; 0x34
   231e4:	bl	20c0c <__flatcc_fb_gen_c_verifier@@Base+0x23d8>
   231e8:	b	2318c <__flatcc_fb_gen_c_json_parser@@Base+0x1350>
   231ec:	mov	r3, #0
   231f0:	str	r3, [sp, #24]
   231f4:	cmp	r5, r3
   231f8:	ble	230a8 <__flatcc_fb_gen_c_json_parser@@Base+0x126c>
   231fc:	add	r0, sp, #52	; 0x34
   23200:	bl	20c0c <__flatcc_fb_gen_c_verifier@@Base+0x23d8>
   23204:	ldr	r5, [pc, #-960]	; 22e4c <__flatcc_fb_gen_c_json_parser@@Base+0x1010>
   23208:	ldr	r4, [pc, #-792]	; 22ef8 <__flatcc_fb_gen_c_json_parser@@Base+0x10bc>
   2320c:	ldr	r3, [pc, #-964]	; 22e50 <__flatcc_fb_gen_c_json_parser@@Base+0x1014>
   23210:	ldr	r0, [r3]
   23214:	ldr	r3, [pc, #-968]	; 22e54 <__flatcc_fb_gen_c_json_parser@@Base+0x1018>
   23218:	str	r3, [sp]
   2321c:	mov	r3, r5
   23220:	mov	r2, r4
   23224:	ldr	r1, [pc, #-980]	; 22e58 <__flatcc_fb_gen_c_json_parser@@Base+0x101c>
   23228:	bl	14094 <fprintf@plt>
   2322c:	ldr	r3, [pc, #-952]	; 22e7c <__flatcc_fb_gen_c_json_parser@@Base+0x1040>
   23230:	mov	r2, r5
   23234:	mov	r1, r4
   23238:	ldr	r0, [pc, #-996]	; 22e5c <__flatcc_fb_gen_c_json_parser@@Base+0x1020>
   2323c:	bl	14148 <__assert_fail@plt>
   23240:	ldr	r3, [pc, #-972]	; 22e7c <__flatcc_fb_gen_c_json_parser@@Base+0x1040>
   23244:	ldr	r2, [pc, #-1004]	; 22e60 <__flatcc_fb_gen_c_json_parser@@Base+0x1024>
   23248:	ldr	r1, [pc, #-856]	; 22ef8 <__flatcc_fb_gen_c_json_parser@@Base+0x10bc>
   2324c:	ldr	r0, [pc, #-868]	; 22ef0 <__flatcc_fb_gen_c_json_parser@@Base+0x10b4>
   23250:	bl	14148 <__assert_fail@plt>
   23254:	ldr	r3, [pc, #-992]	; 22e7c <__flatcc_fb_gen_c_json_parser@@Base+0x1040>
   23258:	ldr	r2, [pc, #-1024]	; 22e60 <__flatcc_fb_gen_c_json_parser@@Base+0x1024>
   2325c:	ldr	r1, [pc, #-876]	; 22ef8 <__flatcc_fb_gen_c_json_parser@@Base+0x10bc>
   23260:	ldr	r0, [pc, #-888]	; 22ef0 <__flatcc_fb_gen_c_json_parser@@Base+0x10b4>
   23264:	bl	14148 <__assert_fail@plt>
   23268:	ldr	r3, [pc, #-1012]	; 22e7c <__flatcc_fb_gen_c_json_parser@@Base+0x1040>
   2326c:	ldr	r2, [pc, #-1040]	; 22e64 <__flatcc_fb_gen_c_json_parser@@Base+0x1028>
   23270:	ldr	r1, [pc, #-896]	; 22ef8 <__flatcc_fb_gen_c_json_parser@@Base+0x10bc>
   23274:	ldr	r0, [pc, #-908]	; 22ef0 <__flatcc_fb_gen_c_json_parser@@Base+0x10b4>
   23278:	bl	14148 <__assert_fail@plt>
   2327c:	ldr	r1, [pc, #-1052]	; 22e68 <__flatcc_fb_gen_c_json_parser@@Base+0x102c>
   23280:	mov	r0, r4
   23284:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   23288:	ldr	r1, [pc, #-1060]	; 22e6c <__flatcc_fb_gen_c_json_parser@@Base+0x1030>
   2328c:	mov	r0, r4
   23290:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   23294:	ldr	r1, [pc, #-1068]	; 22e70 <__flatcc_fb_gen_c_json_parser@@Base+0x1034>
   23298:	mov	r0, r4
   2329c:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   232a0:	ldr	r1, [pc, #-972]	; 22edc <__flatcc_fb_gen_c_json_parser@@Base+0x10a0>
   232a4:	mov	r0, r4
   232a8:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   232ac:	ldr	r1, [pc, #-1088]	; 22e74 <__flatcc_fb_gen_c_json_parser@@Base+0x1038>
   232b0:	mov	r0, r4
   232b4:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   232b8:	mov	r2, #0
   232bc:	str	r2, [sp]
   232c0:	sub	r3, r5, #1
   232c4:	add	r1, sp, #24
   232c8:	mov	r0, r4
   232cc:	bl	20f70 <__flatcc_fb_gen_c_verifier@@Base+0x273c>
   232d0:	ldr	r1, [pc, #-1120]	; 22e78 <__flatcc_fb_gen_c_json_parser@@Base+0x103c>
   232d4:	mov	r0, r4
   232d8:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   232dc:	ldr	r3, [r4, #220]	; 0xdc
   232e0:	cmp	r3, #0
   232e4:	beq	23300 <__flatcc_fb_gen_c_json_parser@@Base+0x14c4>
   232e8:	sub	r3, r3, #1
   232ec:	str	r3, [r4, #220]	; 0xdc
   232f0:	ldr	r1, [pc, #-1056]	; 22ed8 <__flatcc_fb_gen_c_json_parser@@Base+0x109c>
   232f4:	mov	r0, r4
   232f8:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   232fc:	b	23170 <__flatcc_fb_gen_c_json_parser@@Base+0x1334>
   23300:	ldr	r3, [pc, #-1164]	; 22e7c <__flatcc_fb_gen_c_json_parser@@Base+0x1040>
   23304:	ldr	r2, [pc, #-1164]	; 22e80 <__flatcc_fb_gen_c_json_parser@@Base+0x1044>
   23308:	ldr	r1, [pc, #-1048]	; 22ef8 <__flatcc_fb_gen_c_json_parser@@Base+0x10bc>
   2330c:	ldr	r0, [pc, #-1060]	; 22ef0 <__flatcc_fb_gen_c_json_parser@@Base+0x10b4>
   23310:	bl	14148 <__assert_fail@plt>
   23314:	mov	r2, #220	; 0xdc
   23318:	mov	r1, #0
   2331c:	add	r0, sp, #52	; 0x34
   23320:	bl	140ac <memset@plt>
   23324:	add	r2, sp, #52	; 0x34
   23328:	mov	r1, r5
   2332c:	ldr	r0, [r5, #12]
   23330:	bl	15edc <__flatcc_fb_scoped_symbol_name@@Base>
   23334:	ldr	r3, [r4, #208]	; 0xd0
   23338:	ldr	r2, [r3, #160]	; 0xa0
   2333c:	ldr	r1, [pc, #-1188]	; 22ea0 <__flatcc_fb_gen_c_json_parser@@Base+0x1064>
   23340:	mov	r0, r4
   23344:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   23348:	ldr	r3, [r4, #220]	; 0xdc
   2334c:	add	r3, r3, #2
   23350:	str	r3, [r4, #220]	; 0xdc
   23354:	ldr	r1, [pc, #-1208]	; 22ea4 <__flatcc_fb_gen_c_json_parser@@Base+0x1068>
   23358:	mov	r0, r4
   2335c:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   23360:	ldr	r3, [r4, #220]	; 0xdc
   23364:	cmp	r3, #0
   23368:	beq	2349c <__flatcc_fb_gen_c_json_parser@@Base+0x1660>
   2336c:	sub	r2, r3, #1
   23370:	str	r2, [r4, #220]	; 0xdc
   23374:	cmp	r2, #0
   23378:	beq	234b0 <__flatcc_fb_gen_c_json_parser@@Base+0x1674>
   2337c:	sub	r3, r3, #2
   23380:	str	r3, [r4, #220]	; 0xdc
   23384:	ldr	r1, [pc, #-1252]	; 22ea8 <__flatcc_fb_gen_c_json_parser@@Base+0x106c>
   23388:	mov	r0, r4
   2338c:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   23390:	ldr	r3, [r4, #220]	; 0xdc
   23394:	add	r3, r3, #1
   23398:	str	r3, [r4, #220]	; 0xdc
   2339c:	ldr	r1, [pc, #-1312]	; 22e84 <__flatcc_fb_gen_c_json_parser@@Base+0x1048>
   233a0:	mov	r0, r4
   233a4:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   233a8:	ldr	r1, [pc, #-1280]	; 22eb0 <__flatcc_fb_gen_c_json_parser@@Base+0x1074>
   233ac:	mov	r0, r4
   233b0:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   233b4:	ldr	r1, [pc, #-1248]	; 22edc <__flatcc_fb_gen_c_json_parser@@Base+0x10a0>
   233b8:	mov	r0, r4
   233bc:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   233c0:	ldr	r1, [pc, #-1344]	; 22e88 <__flatcc_fb_gen_c_json_parser@@Base+0x104c>
   233c4:	mov	r0, r4
   233c8:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   233cc:	ldr	r1, [pc, #-1308]	; 22eb8 <__flatcc_fb_gen_c_json_parser@@Base+0x107c>
   233d0:	mov	r0, r4
   233d4:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   233d8:	ldr	r2, [r4, #208]	; 0xd0
   233dc:	ldrh	r3, [r2, #16]
   233e0:	cmp	r3, #2
   233e4:	beq	234c4 <__flatcc_fb_gen_c_json_parser@@Base+0x1688>
   233e8:	ldr	r1, [pc, #-1332]	; 22ebc <__flatcc_fb_gen_c_json_parser@@Base+0x1080>
   233ec:	mov	r0, r4
   233f0:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   233f4:	add	r2, sp, #52	; 0x34
   233f8:	ldr	r1, [pc, #-1396]	; 22e8c <__flatcc_fb_gen_c_json_parser@@Base+0x1050>
   233fc:	mov	r0, r4
   23400:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   23404:	ldr	r1, [pc, #-1352]	; 22ec4 <__flatcc_fb_gen_c_json_parser@@Base+0x1088>
   23408:	mov	r0, r4
   2340c:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   23410:	ldr	r3, [r4, #220]	; 0xdc
   23414:	add	r3, r3, #1
   23418:	str	r3, [r4, #220]	; 0xdc
   2341c:	ldr	r1, [pc, #-1372]	; 22ec8 <__flatcc_fb_gen_c_json_parser@@Base+0x108c>
   23420:	mov	r0, r4
   23424:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   23428:	ldr	r3, [r4, #220]	; 0xdc
   2342c:	cmp	r3, #0
   23430:	beq	234dc <__flatcc_fb_gen_c_json_parser@@Base+0x16a0>
   23434:	sub	r3, r3, #1
   23438:	str	r3, [r4, #220]	; 0xdc
   2343c:	ldr	r1, [pc, #-1388]	; 22ed8 <__flatcc_fb_gen_c_json_parser@@Base+0x109c>
   23440:	mov	r0, r4
   23444:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   23448:	ldr	r1, [pc, #-1412]	; 22ecc <__flatcc_fb_gen_c_json_parser@@Base+0x1090>
   2344c:	mov	r0, r4
   23450:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   23454:	ldr	r1, [pc, #-1420]	; 22ed0 <__flatcc_fb_gen_c_json_parser@@Base+0x1094>
   23458:	mov	r0, r4
   2345c:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   23460:	ldr	r1, [pc, #-1428]	; 22ed4 <__flatcc_fb_gen_c_json_parser@@Base+0x1098>
   23464:	mov	r0, r4
   23468:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   2346c:	ldr	r3, [r4, #220]	; 0xdc
   23470:	cmp	r3, #0
   23474:	beq	234f0 <__flatcc_fb_gen_c_json_parser@@Base+0x16b4>
   23478:	sub	r3, r3, #1
   2347c:	str	r3, [r4, #220]	; 0xdc
   23480:	ldr	r1, [pc, #-1456]	; 22ed8 <__flatcc_fb_gen_c_json_parser@@Base+0x109c>
   23484:	mov	r0, r4
   23488:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   2348c:	ldr	r1, [pc, #-1464]	; 22edc <__flatcc_fb_gen_c_json_parser@@Base+0x10a0>
   23490:	mov	r0, r4
   23494:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   23498:	b	231b0 <__flatcc_fb_gen_c_json_parser@@Base+0x1374>
   2349c:	ldr	r3, [pc, #-1544]	; 22e9c <__flatcc_fb_gen_c_json_parser@@Base+0x1060>
   234a0:	ldr	r2, [pc, #-1560]	; 22e90 <__flatcc_fb_gen_c_json_parser@@Base+0x1054>
   234a4:	ldr	r1, [pc, #-1460]	; 22ef8 <__flatcc_fb_gen_c_json_parser@@Base+0x10bc>
   234a8:	ldr	r0, [pc, #-1472]	; 22ef0 <__flatcc_fb_gen_c_json_parser@@Base+0x10b4>
   234ac:	bl	14148 <__assert_fail@plt>
   234b0:	ldr	r3, [pc, #-1564]	; 22e9c <__flatcc_fb_gen_c_json_parser@@Base+0x1060>
   234b4:	ldr	r2, [pc, #-1580]	; 22e90 <__flatcc_fb_gen_c_json_parser@@Base+0x1054>
   234b8:	ldr	r1, [pc, #-1480]	; 22ef8 <__flatcc_fb_gen_c_json_parser@@Base+0x10bc>
   234bc:	ldr	r0, [pc, #-1492]	; 22ef0 <__flatcc_fb_gen_c_json_parser@@Base+0x10b4>
   234c0:	bl	14148 <__assert_fail@plt>
   234c4:	ldr	r3, [r2, #8]
   234c8:	ldr	r2, [r2, #12]
   234cc:	ldr	r1, [pc, #-1520]	; 22ee4 <__flatcc_fb_gen_c_json_parser@@Base+0x10a8>
   234d0:	mov	r0, r4
   234d4:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   234d8:	b	233f4 <__flatcc_fb_gen_c_json_parser@@Base+0x15b8>
   234dc:	ldr	r3, [pc, #-1608]	; 22e9c <__flatcc_fb_gen_c_json_parser@@Base+0x1060>
   234e0:	ldr	r2, [pc, #-1620]	; 22e94 <__flatcc_fb_gen_c_json_parser@@Base+0x1058>
   234e4:	ldr	r1, [pc, #-1524]	; 22ef8 <__flatcc_fb_gen_c_json_parser@@Base+0x10bc>
   234e8:	ldr	r0, [pc, #-1536]	; 22ef0 <__flatcc_fb_gen_c_json_parser@@Base+0x10b4>
   234ec:	bl	14148 <__assert_fail@plt>
   234f0:	ldr	r3, [pc, #-1628]	; 22e9c <__flatcc_fb_gen_c_json_parser@@Base+0x1060>
   234f4:	ldr	r2, [pc, #-1636]	; 22e98 <__flatcc_fb_gen_c_json_parser@@Base+0x105c>
   234f8:	ldr	r1, [pc, #-1544]	; 22ef8 <__flatcc_fb_gen_c_json_parser@@Base+0x10bc>
   234fc:	ldr	r0, [pc, #-1556]	; 22ef0 <__flatcc_fb_gen_c_json_parser@@Base+0x10b4>
   23500:	bl	14148 <__assert_fail@plt>
   23504:	mov	r2, #220	; 0xdc
   23508:	mov	r1, #0
   2350c:	add	r0, sp, #52	; 0x34
   23510:	bl	140ac <memset@plt>
   23514:	add	r2, sp, #52	; 0x34
   23518:	mov	r1, r5
   2351c:	ldr	r0, [r5, #12]
   23520:	bl	15edc <__flatcc_fb_scoped_symbol_name@@Base>
   23524:	ldr	r3, [r4, #208]	; 0xd0
   23528:	ldr	r2, [r3, #160]	; 0xa0
   2352c:	ldr	r1, [pc, #-1684]	; 22ea0 <__flatcc_fb_gen_c_json_parser@@Base+0x1064>
   23530:	mov	r0, r4
   23534:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   23538:	ldr	r3, [r4, #220]	; 0xdc
   2353c:	add	r3, r3, #2
   23540:	str	r3, [r4, #220]	; 0xdc
   23544:	ldr	r1, [pc, #-1704]	; 22ea4 <__flatcc_fb_gen_c_json_parser@@Base+0x1068>
   23548:	mov	r0, r4
   2354c:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   23550:	ldr	r3, [r4, #220]	; 0xdc
   23554:	cmp	r3, #0
   23558:	beq	2368c <__flatcc_fb_gen_c_json_parser@@Base+0x1850>
   2355c:	sub	r2, r3, #1
   23560:	str	r2, [r4, #220]	; 0xdc
   23564:	cmp	r2, #0
   23568:	beq	236a0 <__flatcc_fb_gen_c_json_parser@@Base+0x1864>
   2356c:	sub	r3, r3, #2
   23570:	str	r3, [r4, #220]	; 0xdc
   23574:	ldr	r1, [pc, #-1748]	; 22ea8 <__flatcc_fb_gen_c_json_parser@@Base+0x106c>
   23578:	mov	r0, r4
   2357c:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   23580:	ldr	r3, [r4, #220]	; 0xdc
   23584:	add	r3, r3, #1
   23588:	str	r3, [r4, #220]	; 0xdc
   2358c:	ldr	r1, [pc, #-1768]	; 22eac <__flatcc_fb_gen_c_json_parser@@Base+0x1070>
   23590:	mov	r0, r4
   23594:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   23598:	ldr	r1, [pc, #-1776]	; 22eb0 <__flatcc_fb_gen_c_json_parser@@Base+0x1074>
   2359c:	mov	r0, r4
   235a0:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   235a4:	ldr	r1, [pc, #-1744]	; 22edc <__flatcc_fb_gen_c_json_parser@@Base+0x10a0>
   235a8:	mov	r0, r4
   235ac:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   235b0:	ldr	r1, [pc, #-1796]	; 22eb4 <__flatcc_fb_gen_c_json_parser@@Base+0x1078>
   235b4:	mov	r0, r4
   235b8:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   235bc:	ldr	r1, [pc, #-1804]	; 22eb8 <__flatcc_fb_gen_c_json_parser@@Base+0x107c>
   235c0:	mov	r0, r4
   235c4:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   235c8:	ldr	r2, [r4, #208]	; 0xd0
   235cc:	ldrh	r3, [r2, #16]
   235d0:	cmp	r3, #2
   235d4:	beq	236b4 <__flatcc_fb_gen_c_json_parser@@Base+0x1878>
   235d8:	ldr	r1, [pc, #-1828]	; 22ebc <__flatcc_fb_gen_c_json_parser@@Base+0x1080>
   235dc:	mov	r0, r4
   235e0:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   235e4:	add	r2, sp, #52	; 0x34
   235e8:	ldr	r1, [pc, #-1840]	; 22ec0 <__flatcc_fb_gen_c_json_parser@@Base+0x1084>
   235ec:	mov	r0, r4
   235f0:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   235f4:	ldr	r1, [pc, #-1848]	; 22ec4 <__flatcc_fb_gen_c_json_parser@@Base+0x1088>
   235f8:	mov	r0, r4
   235fc:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   23600:	ldr	r3, [r4, #220]	; 0xdc
   23604:	add	r3, r3, #1
   23608:	str	r3, [r4, #220]	; 0xdc
   2360c:	ldr	r1, [pc, #-1868]	; 22ec8 <__flatcc_fb_gen_c_json_parser@@Base+0x108c>
   23610:	mov	r0, r4
   23614:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   23618:	ldr	r3, [r4, #220]	; 0xdc
   2361c:	cmp	r3, #0
   23620:	beq	236cc <__flatcc_fb_gen_c_json_parser@@Base+0x1890>
   23624:	sub	r3, r3, #1
   23628:	str	r3, [r4, #220]	; 0xdc
   2362c:	ldr	r1, [pc, #-1884]	; 22ed8 <__flatcc_fb_gen_c_json_parser@@Base+0x109c>
   23630:	mov	r0, r4
   23634:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   23638:	ldr	r1, [pc, #-1908]	; 22ecc <__flatcc_fb_gen_c_json_parser@@Base+0x1090>
   2363c:	mov	r0, r4
   23640:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   23644:	ldr	r1, [pc, #-1916]	; 22ed0 <__flatcc_fb_gen_c_json_parser@@Base+0x1094>
   23648:	mov	r0, r4
   2364c:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   23650:	ldr	r1, [pc, #-1924]	; 22ed4 <__flatcc_fb_gen_c_json_parser@@Base+0x1098>
   23654:	mov	r0, r4
   23658:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   2365c:	ldr	r3, [r4, #220]	; 0xdc
   23660:	cmp	r3, #0
   23664:	beq	236e0 <__flatcc_fb_gen_c_json_parser@@Base+0x18a4>
   23668:	sub	r3, r3, #1
   2366c:	str	r3, [r4, #220]	; 0xdc
   23670:	ldr	r1, [pc, #-1952]	; 22ed8 <__flatcc_fb_gen_c_json_parser@@Base+0x109c>
   23674:	mov	r0, r4
   23678:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   2367c:	ldr	r1, [pc, #-1960]	; 22edc <__flatcc_fb_gen_c_json_parser@@Base+0x10a0>
   23680:	mov	r0, r4
   23684:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   23688:	b	231b0 <__flatcc_fb_gen_c_json_parser@@Base+0x1374>
   2368c:	ldr	r3, [pc, #-1952]	; 22ef4 <__flatcc_fb_gen_c_json_parser@@Base+0x10b8>
   23690:	ldr	r2, [pc, #-1976]	; 22ee0 <__flatcc_fb_gen_c_json_parser@@Base+0x10a4>
   23694:	ldr	r1, [pc, #-1956]	; 22ef8 <__flatcc_fb_gen_c_json_parser@@Base+0x10bc>
   23698:	ldr	r0, [pc, #-1968]	; 22ef0 <__flatcc_fb_gen_c_json_parser@@Base+0x10b4>
   2369c:	bl	14148 <__assert_fail@plt>
   236a0:	ldr	r3, [pc, #-1972]	; 22ef4 <__flatcc_fb_gen_c_json_parser@@Base+0x10b8>
   236a4:	ldr	r2, [pc, #-1996]	; 22ee0 <__flatcc_fb_gen_c_json_parser@@Base+0x10a4>
   236a8:	ldr	r1, [pc, #-1976]	; 22ef8 <__flatcc_fb_gen_c_json_parser@@Base+0x10bc>
   236ac:	ldr	r0, [pc, #-1988]	; 22ef0 <__flatcc_fb_gen_c_json_parser@@Base+0x10b4>
   236b0:	bl	14148 <__assert_fail@plt>
   236b4:	ldr	r3, [r2, #8]
   236b8:	ldr	r2, [r2, #12]
   236bc:	ldr	r1, [pc, #-2016]	; 22ee4 <__flatcc_fb_gen_c_json_parser@@Base+0x10a8>
   236c0:	mov	r0, r4
   236c4:	bl	1ec30 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   236c8:	b	235e4 <__flatcc_fb_gen_c_json_parser@@Base+0x17a8>
   236cc:	ldr	r3, [pc, #-2016]	; 22ef4 <__flatcc_fb_gen_c_json_parser@@Base+0x10b8>
   236d0:	ldr	r2, [pc, #-2032]	; 22ee8 <__flatcc_fb_gen_c_json_parser@@Base+0x10ac>
   236d4:	ldr	r1, [pc, #-2020]	; 22ef8 <__flatcc_fb_gen_c_json_parser@@Base+0x10bc>
   236d8:	ldr	r0, [pc, #-2032]	; 22ef0 <__flatcc_fb_gen_c_json_parser@@Base+0x10b4>
   236dc:	bl	14148 <__assert_fail@plt>
   236e0:	ldr	r3, [pc, #-2036]	; 22ef4 <__flatcc_fb_gen_c_json_parser@@Base+0x10b8>
   236e4:	ldr	r2, [pc, #-2048]	; 22eec <__flatcc_fb_gen_c_json_parser@@Base+0x10b0>
   236e8:	ldr	r1, [pc, #-2040]	; 22ef8 <__flatcc_fb_gen_c_json_parser@@Base+0x10bc>
   236ec:	ldr	r0, [pc, #-2052]	; 22ef0 <__flatcc_fb_gen_c_json_parser@@Base+0x10b4>
   236f0:	bl	14148 <__assert_fail@plt>
   236f4:	ldr	r3, [r4, #204]	; 0xcc
   236f8:	mov	r2, #36	; 0x24
   236fc:	mov	r1, #1
   23700:	ldr	r0, [pc, #-2060]	; 22efc <__flatcc_fb_gen_c_json_parser@@Base+0x10c0>
   23704:	bl	1401c <fwrite@plt>
   23708:	b	231c0 <__flatcc_fb_gen_c_json_parser@@Base+0x1384>
   2370c:	mov	r9, #0
   23710:	b	230a4 <__flatcc_fb_gen_c_json_parser@@Base+0x1268>
   23714:	push	{r4, r5, r6, r7, r8, lr}
   23718:	sub	sp, sp, #448	; 0x1c0
   2371c:	mov	r5, r0
   23720:	mov	r4, r1
   23724:	mov	r6, #220	; 0xdc
   23728:	mov	r2, r6
   2372c:	mov	r1, #0
   23730:	add	r0, sp, #228	; 0xe4
   23734:	bl	140ac <memset@plt>
   23738:	mov	r2, r6
   2373c:	mov	r1, #0
   23740:	add	r0, sp, #8
   23744:	bl	140ac <memset@plt>
   23748:	add	r2, sp, #228	; 0xe4
   2374c:	mov	r1, r4
   23750:	ldr	r0, [r4, #12]
   23754:	bl	15edc <__flatcc_fb_scoped_symbol_name@@Base>
   23758:	add	r2, sp, #228	; 0xe4
   2375c:	ldr	r1, [pc, #344]	; 238bc <__flatcc_fb_gen_c_json_parser@@Base+0x1a80>
   23760:	ldr	r0, [r5, #204]	; 0xcc
   23764:	bl	14094 <fprintf@plt>
   23768:	ldr	r4, [r4, #20]
   2376c:	cmp	r4, #0
   23770:	beq	23888 <__flatcc_fb_gen_c_json_parser@@Base+0x1a4c>
   23774:	ldr	r8, [pc, #324]	; 238c0 <__flatcc_fb_gen_c_json_parser@@Base+0x1a84>
   23778:	ldr	r7, [pc, #324]	; 238c4 <__flatcc_fb_gen_c_json_parser@@Base+0x1a88>
   2377c:	ldr	r6, [pc, #324]	; 238c8 <__flatcc_fb_gen_c_json_parser@@Base+0x1a8c>
   23780:	b	23834 <__flatcc_fb_gen_c_json_parser@@Base+0x19f8>
   23784:	ldr	r3, [r4, #16]
   23788:	add	r2, sp, #8
   2378c:	mov	r1, r3
   23790:	ldr	r0, [r3, #12]
   23794:	bl	15edc <__flatcc_fb_scoped_symbol_name@@Base>
   23798:	ldr	r3, [r4, #16]
   2379c:	ldrh	r3, [r3, #8]
   237a0:	cmp	r3, #0
   237a4:	beq	237e8 <__flatcc_fb_gen_c_json_parser@@Base+0x19ac>
   237a8:	cmp	r3, #1
   237ac:	beq	23800 <__flatcc_fb_gen_c_json_parser@@Base+0x19c4>
   237b0:	ldr	r4, [pc, #276]	; 238cc <__flatcc_fb_gen_c_json_parser@@Base+0x1a90>
   237b4:	ldr	r3, [pc, #276]	; 238d0 <__flatcc_fb_gen_c_json_parser@@Base+0x1a94>
   237b8:	ldr	r0, [r3]
   237bc:	ldr	r3, [pc, #272]	; 238d4 <__flatcc_fb_gen_c_json_parser@@Base+0x1a98>
   237c0:	str	r3, [sp]
   237c4:	mov	r3, #240	; 0xf0
   237c8:	mov	r2, r4
   237cc:	ldr	r1, [pc, #260]	; 238d8 <__flatcc_fb_gen_c_json_parser@@Base+0x1a9c>
   237d0:	bl	14094 <fprintf@plt>
   237d4:	ldr	r3, [pc, #256]	; 238dc <__flatcc_fb_gen_c_json_parser@@Base+0x1aa0>
   237d8:	mov	r2, #240	; 0xf0
   237dc:	mov	r1, r4
   237e0:	ldr	r0, [pc, #248]	; 238e0 <__flatcc_fb_gen_c_json_parser@@Base+0x1aa4>
   237e4:	bl	14148 <__assert_fail@plt>
   237e8:	add	r3, sp, #8
   237ec:	ldr	r2, [r4, #48]	; 0x30
   237f0:	mov	r1, r8
   237f4:	ldr	r0, [r5, #204]	; 0xcc
   237f8:	bl	14094 <fprintf@plt>
   237fc:	b	23828 <__flatcc_fb_gen_c_json_parser@@Base+0x19ec>
   23800:	add	r3, sp, #8
   23804:	ldr	r2, [r4, #48]	; 0x30
   23808:	mov	r1, r7
   2380c:	ldr	r0, [r5, #204]	; 0xcc
   23810:	bl	14094 <fprintf@plt>
   23814:	b	23828 <__flatcc_fb_gen_c_json_parser@@Base+0x19ec>
   23818:	ldr	r2, [r4, #48]	; 0x30
   2381c:	mov	r1, r6
   23820:	ldr	r0, [r5, #204]	; 0xcc
   23824:	bl	14094 <fprintf@plt>
   23828:	ldr	r4, [r4]
   2382c:	cmp	r4, #0
   23830:	beq	23888 <__flatcc_fb_gen_c_json_parser@@Base+0x1a4c>
   23834:	ldrh	r3, [r4, #24]
   23838:	cmp	r3, #10
   2383c:	beq	23818 <__flatcc_fb_gen_c_json_parser@@Base+0x19dc>
   23840:	cmp	r3, #14
   23844:	beq	23784 <__flatcc_fb_gen_c_json_parser@@Base+0x1948>
   23848:	cmp	r3, #0
   2384c:	beq	23828 <__flatcc_fb_gen_c_json_parser@@Base+0x19ec>
   23850:	ldr	r4, [pc, #116]	; 238cc <__flatcc_fb_gen_c_json_parser@@Base+0x1a90>
   23854:	ldr	r3, [pc, #116]	; 238d0 <__flatcc_fb_gen_c_json_parser@@Base+0x1a94>
   23858:	ldr	r0, [r3]
   2385c:	ldr	r3, [pc, #112]	; 238d4 <__flatcc_fb_gen_c_json_parser@@Base+0x1a98>
   23860:	str	r3, [sp]
   23864:	mov	r3, #251	; 0xfb
   23868:	mov	r2, r4
   2386c:	ldr	r1, [pc, #100]	; 238d8 <__flatcc_fb_gen_c_json_parser@@Base+0x1a9c>
   23870:	bl	14094 <fprintf@plt>
   23874:	ldr	r3, [pc, #96]	; 238dc <__flatcc_fb_gen_c_json_parser@@Base+0x1aa0>
   23878:	mov	r2, #251	; 0xfb
   2387c:	mov	r1, r4
   23880:	ldr	r0, [pc, #88]	; 238e0 <__flatcc_fb_gen_c_json_parser@@Base+0x1aa4>
   23884:	bl	14148 <__assert_fail@plt>
   23888:	ldr	r3, [r5, #204]	; 0xcc
   2388c:	mov	r2, #28
   23890:	mov	r1, #1
   23894:	ldr	r0, [pc, #72]	; 238e4 <__flatcc_fb_gen_c_json_parser@@Base+0x1aa8>
   23898:	bl	1401c <fwrite@plt>
   2389c:	ldr	r3, [r5, #204]	; 0xcc
   238a0:	mov	r2, #9
   238a4:	mov	r1, #1
   238a8:	ldr	r0, [pc, #56]	; 238e8 <__flatcc_fb_gen_c_json_parser@@Base+0x1aac>
   238ac:	bl	1401c <fwrite@plt>
   238b0:	mov	r0, #0
   238b4:	add	sp, sp, #448	; 0x1c0
   238b8:	pop	{r4, r5, r6, r7, r8, pc}
   238bc:	andeq	r1, r5, r8, lsr #19
   238c0:	andeq	r1, r5, ip, lsr #20
   238c4:	muleq	r5, r0, sl
   238c8:	andeq	r1, r5, r8, ror fp
   238cc:	strdeq	r1, [r5], -r8
   238d0:	andeq	r7, r6, r8, lsr #1
   238d4:	andeq	r1, r5, r0, asr fp
   238d8:	andeq	ip, r3, r8, lsr #27
   238dc:	andeq	r1, r5, r4, asr #18
   238e0:	andeq	r5, r4, r0, ror #3
   238e4:	andeq	r1, r5, r8, asr #23
   238e8:	andeq	r1, r5, r8, ror #23
   238ec:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   238f0:	sub	sp, sp, #468	; 0x1d4
   238f4:	mov	r6, r0
   238f8:	mov	r4, r1
   238fc:	mov	r5, #220	; 0xdc
   23900:	mov	r2, r5
   23904:	mov	r1, #0
   23908:	add	r0, sp, #244	; 0xf4
   2390c:	bl	140ac <memset@plt>
   23910:	mov	r2, r5
   23914:	mov	r1, #0
   23918:	add	r0, sp, #24
   2391c:	bl	140ac <memset@plt>
   23920:	add	r2, sp, #244	; 0xf4
   23924:	mov	r1, r4
   23928:	ldr	r0, [r4, #12]
   2392c:	bl	15edc <__flatcc_fb_scoped_symbol_name@@Base>
   23930:	add	r2, sp, #244	; 0xf4
   23934:	ldr	r1, [pc, #764]	; 23c38 <__flatcc_fb_gen_c_json_parser@@Base+0x1dfc>
   23938:	ldr	r0, [r6, #204]	; 0xcc
   2393c:	bl	14094 <fprintf@plt>
   23940:	ldr	r4, [r4, #20]
   23944:	cmp	r4, #0
   23948:	beq	23c04 <__flatcc_fb_gen_c_json_parser@@Base+0x1dc8>
   2394c:	mov	r5, #0
   23950:	ldr	r7, [pc, #740]	; 23c3c <__flatcc_fb_gen_c_json_parser@@Base+0x1e00>
   23954:	ldr	r8, [pc, #740]	; 23c40 <__flatcc_fb_gen_c_json_parser@@Base+0x1e04>
   23958:	ldr	fp, [pc, #740]	; 23c44 <__flatcc_fb_gen_c_json_parser@@Base+0x1e08>
   2395c:	ldr	sl, [pc, #740]	; 23c48 <__flatcc_fb_gen_c_json_parser@@Base+0x1e0c>
   23960:	ldr	r9, [pc, #740]	; 23c4c <__flatcc_fb_gen_c_json_parser@@Base+0x1e10>
   23964:	b	23a74 <__flatcc_fb_gen_c_json_parser@@Base+0x1c38>
   23968:	ldr	r3, [r4, #16]
   2396c:	sub	r3, r3, #1
   23970:	cmp	r3, #10
   23974:	ldrls	pc, [pc, r3, lsl #2]
   23978:	b	239f0 <__flatcc_fb_gen_c_json_parser@@Base+0x1bb4>
   2397c:	andeq	r3, r2, r8, lsr #20
   23980:	andeq	r3, r2, r8, lsr #19
   23984:	andeq	r3, r2, r0, lsr sl
   23988:			; <UNDEFINED> instruction: 0x000239b0
   2398c:			; <UNDEFINED> instruction: 0x000239b8
   23990:	andeq	r3, r2, r0, asr #19
   23994:	andeq	r3, r2, r8, asr #19
   23998:	ldrdeq	r3, [r2], -r0
   2399c:	ldrdeq	r3, [r2], -r8
   239a0:	andeq	r3, r2, r8, ror #19
   239a4:	andeq	r3, r2, r0, ror #19
   239a8:	ldr	r2, [pc, #672]	; 23c50 <__flatcc_fb_gen_c_json_parser@@Base+0x1e14>
   239ac:	b	23a34 <__flatcc_fb_gen_c_json_parser@@Base+0x1bf8>
   239b0:	ldr	r2, [pc, #668]	; 23c54 <__flatcc_fb_gen_c_json_parser@@Base+0x1e18>
   239b4:	b	23a34 <__flatcc_fb_gen_c_json_parser@@Base+0x1bf8>
   239b8:	ldr	r2, [pc, #664]	; 23c58 <__flatcc_fb_gen_c_json_parser@@Base+0x1e1c>
   239bc:	b	23a34 <__flatcc_fb_gen_c_json_parser@@Base+0x1bf8>
   239c0:	ldr	r2, [pc, #660]	; 23c5c <__flatcc_fb_gen_c_json_parser@@Base+0x1e20>
   239c4:	b	23a34 <__flatcc_fb_gen_c_json_parser@@Base+0x1bf8>
   239c8:	ldr	r2, [pc, #656]	; 23c60 <__flatcc_fb_gen_c_json_parser@@Base+0x1e24>
   239cc:	b	23a34 <__flatcc_fb_gen_c_json_parser@@Base+0x1bf8>
   239d0:	ldr	r2, [pc, #652]	; 23c64 <__flatcc_fb_gen_c_json_parser@@Base+0x1e28>
   239d4:	b	23a34 <__flatcc_fb_gen_c_json_parser@@Base+0x1bf8>
   239d8:	ldr	r2, [pc, #648]	; 23c68 <__flatcc_fb_gen_c_json_parser@@Base+0x1e2c>
   239dc:	b	23a34 <__flatcc_fb_gen_c_json_parser@@Base+0x1bf8>
   239e0:	mov	r2, r9
   239e4:	b	23a34 <__flatcc_fb_gen_c_json_parser@@Base+0x1bf8>
   239e8:	mov	r2, sl
   239ec:	b	23a34 <__flatcc_fb_gen_c_json_parser@@Base+0x1bf8>
   239f0:	ldr	r4, [pc, #628]	; 23c6c <__flatcc_fb_gen_c_json_parser@@Base+0x1e30>
   239f4:	ldr	r3, [pc, #628]	; 23c70 <__flatcc_fb_gen_c_json_parser@@Base+0x1e34>
   239f8:	ldr	r0, [r3]
   239fc:	ldr	r3, [pc, #624]	; 23c74 <__flatcc_fb_gen_c_json_parser@@Base+0x1e38>
   23a00:	str	r3, [sp]
   23a04:	mov	r3, #96	; 0x60
   23a08:	mov	r2, r4
   23a0c:	ldr	r1, [pc, #612]	; 23c78 <__flatcc_fb_gen_c_json_parser@@Base+0x1e3c>
   23a10:	bl	14094 <fprintf@plt>
   23a14:	ldr	r3, [pc, #608]	; 23c7c <__flatcc_fb_gen_c_json_parser@@Base+0x1e40>
   23a18:	mov	r2, #96	; 0x60
   23a1c:	mov	r1, r4
   23a20:	ldr	r0, [pc, #600]	; 23c80 <__flatcc_fb_gen_c_json_parser@@Base+0x1e44>
   23a24:	bl	14148 <__assert_fail@plt>
   23a28:	mov	r2, fp
   23a2c:	b	23a34 <__flatcc_fb_gen_c_json_parser@@Base+0x1bf8>
   23a30:	mov	r2, r8
   23a34:	ldr	r1, [r4, #4]
   23a38:	ldr	r3, [r1, #4]
   23a3c:	str	r3, [sp, #16]
   23a40:	ldr	r1, [r1]
   23a44:	str	r1, [sp, #12]
   23a48:	str	r3, [sp, #8]
   23a4c:	ldrd	r0, [r4, #80]	; 0x50
   23a50:	strd	r0, [sp]
   23a54:	mov	r3, r5
   23a58:	mov	r1, r7
   23a5c:	ldr	r0, [r6, #204]	; 0xcc
   23a60:	bl	14094 <fprintf@plt>
   23a64:	add	r5, r5, #1
   23a68:	ldr	r4, [r4]
   23a6c:	cmp	r4, #0
   23a70:	beq	23c04 <__flatcc_fb_gen_c_json_parser@@Base+0x1dc8>
   23a74:	ldrh	r3, [r4, #72]	; 0x48
   23a78:	tst	r3, #4
   23a7c:	bne	23a64 <__flatcc_fb_gen_c_json_parser@@Base+0x1c28>
   23a80:	ldrh	r3, [r4, #24]
   23a84:	cmp	r3, #8
   23a88:	beq	23968 <__flatcc_fb_gen_c_json_parser@@Base+0x1b2c>
   23a8c:	cmp	r3, #14
   23a90:	bne	23a64 <__flatcc_fb_gen_c_json_parser@@Base+0x1c28>
   23a94:	ldr	r3, [r4, #16]
   23a98:	add	r2, sp, #24
   23a9c:	mov	r1, r3
   23aa0:	ldr	r0, [r3, #12]
   23aa4:	bl	15edc <__flatcc_fb_scoped_symbol_name@@Base>
   23aa8:	ldr	r2, [r4, #16]
   23aac:	ldrh	r3, [r2, #8]
   23ab0:	cmp	r3, #1
   23ab4:	beq	23bc8 <__flatcc_fb_gen_c_json_parser@@Base+0x1d8c>
   23ab8:	cmp	r3, #3
   23abc:	bne	23a64 <__flatcc_fb_gen_c_json_parser@@Base+0x1c28>
   23ac0:	ldr	r3, [r2, #40]	; 0x28
   23ac4:	sub	r3, r3, #1
   23ac8:	cmp	r3, #10
   23acc:	ldrls	pc, [pc, r3, lsl #2]
   23ad0:	b	23b48 <__flatcc_fb_gen_c_json_parser@@Base+0x1d0c>
   23ad4:	andeq	r3, r2, r0, lsl #23
   23ad8:	andeq	r3, r2, r0, lsl #22
   23adc:	andeq	r3, r2, r8, lsl #23
   23ae0:	andeq	r3, r2, r8, lsl #22
   23ae4:	andeq	r3, r2, r0, lsl fp
   23ae8:	andeq	r3, r2, r8, lsl fp
   23aec:	andeq	r3, r2, r0, lsr #22
   23af0:	andeq	r3, r2, r8, lsr #22
   23af4:	andeq	r3, r2, r0, lsr fp
   23af8:	andeq	r3, r2, r0, asr #22
   23afc:	andeq	r3, r2, r8, lsr fp
   23b00:	ldr	r2, [pc, #328]	; 23c50 <__flatcc_fb_gen_c_json_parser@@Base+0x1e14>
   23b04:	b	23b8c <__flatcc_fb_gen_c_json_parser@@Base+0x1d50>
   23b08:	ldr	r2, [pc, #324]	; 23c54 <__flatcc_fb_gen_c_json_parser@@Base+0x1e18>
   23b0c:	b	23b8c <__flatcc_fb_gen_c_json_parser@@Base+0x1d50>
   23b10:	ldr	r2, [pc, #320]	; 23c58 <__flatcc_fb_gen_c_json_parser@@Base+0x1e1c>
   23b14:	b	23b8c <__flatcc_fb_gen_c_json_parser@@Base+0x1d50>
   23b18:	ldr	r2, [pc, #316]	; 23c5c <__flatcc_fb_gen_c_json_parser@@Base+0x1e20>
   23b1c:	b	23b8c <__flatcc_fb_gen_c_json_parser@@Base+0x1d50>
   23b20:	ldr	r2, [pc, #312]	; 23c60 <__flatcc_fb_gen_c_json_parser@@Base+0x1e24>
   23b24:	b	23b8c <__flatcc_fb_gen_c_json_parser@@Base+0x1d50>
   23b28:	ldr	r2, [pc, #308]	; 23c64 <__flatcc_fb_gen_c_json_parser@@Base+0x1e28>
   23b2c:	b	23b8c <__flatcc_fb_gen_c_json_parser@@Base+0x1d50>
   23b30:	ldr	r2, [pc, #304]	; 23c68 <__flatcc_fb_gen_c_json_parser@@Base+0x1e2c>
   23b34:	b	23b8c <__flatcc_fb_gen_c_json_parser@@Base+0x1d50>
   23b38:	mov	r2, r9
   23b3c:	b	23b8c <__flatcc_fb_gen_c_json_parser@@Base+0x1d50>
   23b40:	mov	r2, sl
   23b44:	b	23b8c <__flatcc_fb_gen_c_json_parser@@Base+0x1d50>
   23b48:	ldr	r4, [pc, #284]	; 23c6c <__flatcc_fb_gen_c_json_parser@@Base+0x1e30>
   23b4c:	ldr	r3, [pc, #284]	; 23c70 <__flatcc_fb_gen_c_json_parser@@Base+0x1e34>
   23b50:	ldr	r0, [r3]
   23b54:	ldr	r3, [pc, #280]	; 23c74 <__flatcc_fb_gen_c_json_parser@@Base+0x1e38>
   23b58:	str	r3, [sp]
   23b5c:	mov	r3, #96	; 0x60
   23b60:	mov	r2, r4
   23b64:	ldr	r1, [pc, #268]	; 23c78 <__flatcc_fb_gen_c_json_parser@@Base+0x1e3c>
   23b68:	bl	14094 <fprintf@plt>
   23b6c:	ldr	r3, [pc, #264]	; 23c7c <__flatcc_fb_gen_c_json_parser@@Base+0x1e40>
   23b70:	mov	r2, #96	; 0x60
   23b74:	mov	r1, r4
   23b78:	ldr	r0, [pc, #256]	; 23c80 <__flatcc_fb_gen_c_json_parser@@Base+0x1e44>
   23b7c:	bl	14148 <__assert_fail@plt>
   23b80:	mov	r2, fp
   23b84:	b	23b8c <__flatcc_fb_gen_c_json_parser@@Base+0x1d50>
   23b88:	mov	r2, r8
   23b8c:	ldr	r1, [r4, #4]
   23b90:	ldr	r3, [r1, #4]
   23b94:	add	r0, sp, #24
   23b98:	str	r0, [sp, #20]
   23b9c:	str	r3, [sp, #16]
   23ba0:	ldr	r1, [r1]
   23ba4:	str	r1, [sp, #12]
   23ba8:	str	r3, [sp, #8]
   23bac:	ldrd	r0, [r4, #80]	; 0x50
   23bb0:	strd	r0, [sp]
   23bb4:	mov	r3, r5
   23bb8:	ldr	r1, [pc, #196]	; 23c84 <__flatcc_fb_gen_c_json_parser@@Base+0x1e48>
   23bbc:	ldr	r0, [r6, #204]	; 0xcc
   23bc0:	bl	14094 <fprintf@plt>
   23bc4:	b	23a64 <__flatcc_fb_gen_c_json_parser@@Base+0x1c28>
   23bc8:	ldr	r2, [r4, #4]
   23bcc:	ldr	r3, [r2, #4]
   23bd0:	add	r1, sp, #24
   23bd4:	str	r1, [sp, #20]
   23bd8:	str	r3, [sp, #16]
   23bdc:	ldr	r2, [r2]
   23be0:	str	r2, [sp, #12]
   23be4:	str	r3, [sp, #8]
   23be8:	ldrd	r2, [r4, #80]	; 0x50
   23bec:	strd	r2, [sp]
   23bf0:	mov	r2, r5
   23bf4:	ldr	r1, [pc, #140]	; 23c88 <__flatcc_fb_gen_c_json_parser@@Base+0x1e4c>
   23bf8:	ldr	r0, [r6, #204]	; 0xcc
   23bfc:	bl	14094 <fprintf@plt>
   23c00:	b	23a64 <__flatcc_fb_gen_c_json_parser@@Base+0x1c28>
   23c04:	ldr	r3, [r6, #204]	; 0xcc
   23c08:	mov	r2, #3
   23c0c:	mov	r1, #1
   23c10:	ldr	r0, [pc, #116]	; 23c8c <__flatcc_fb_gen_c_json_parser@@Base+0x1e50>
   23c14:	bl	1401c <fwrite@plt>
   23c18:	add	r3, sp, #244	; 0xf4
   23c1c:	mov	r2, r3
   23c20:	ldr	r1, [pc, #104]	; 23c90 <__flatcc_fb_gen_c_json_parser@@Base+0x1e54>
   23c24:	ldr	r0, [r6, #204]	; 0xcc
   23c28:	bl	14094 <fprintf@plt>
   23c2c:	mov	r0, #0
   23c30:	add	sp, sp, #468	; 0x1d4
   23c34:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   23c38:	strdeq	r1, [r5], -r4
   23c3c:	andeq	r1, r5, r4, asr #24
   23c40:	andeq	sp, r3, r4, asr #1
   23c44:	strheq	sp, [r3], -r4
   23c48:	muleq	r3, r4, ip
   23c4c:	andeq	ip, r3, ip, lsl #25
   23c50:	strheq	sp, [r3], -ip
   23c54:	andeq	sp, r3, ip, asr #1
   23c58:	andeq	r4, r5, r4, asr #24
   23c5c:	ldrdeq	sp, [r3], -r4
   23c60:	ldrdeq	sp, [r3], -ip
   23c64:	andeq	sp, r3, r4, ror #1
   23c68:	andeq	sp, r3, ip, ror #1
   23c6c:	andeq	ip, r3, ip, asr sp
   23c70:	andeq	r7, r6, r8, lsr #1
   23c74:			; <UNDEFINED> instruction: 0x0003cdb4
   23c78:	andeq	ip, r3, r8, lsr #27
   23c7c:	andeq	r1, r5, r4, ror #18
   23c80:	andeq	r5, r4, r0, ror #3
   23c84:	muleq	r5, r0, ip
   23c88:	strdeq	r1, [r5], -r4
   23c8c:	muleq	r4, r8, sp
   23c90:	andeq	r1, r5, ip, asr sp
   23c94:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   23c98:	sub	sp, sp, #460	; 0x1cc
   23c9c:	mov	r6, r0
   23ca0:	mov	r7, r1
   23ca4:	mov	r4, #220	; 0xdc
   23ca8:	mov	r2, r4
   23cac:	mov	r1, #0
   23cb0:	add	r0, sp, #236	; 0xec
   23cb4:	bl	140ac <memset@plt>
   23cb8:	mov	r2, r4
   23cbc:	mov	r1, #0
   23cc0:	add	r0, sp, #16
   23cc4:	bl	140ac <memset@plt>
   23cc8:	add	r2, sp, #236	; 0xec
   23ccc:	mov	r1, r7
   23cd0:	ldr	r0, [r7, #12]
   23cd4:	bl	15edc <__flatcc_fb_scoped_symbol_name@@Base>
   23cd8:	ldr	r3, [r7, #40]	; 0x28
   23cdc:	sub	r3, r3, #1
   23ce0:	cmp	r3, #10
   23ce4:	ldrls	pc, [pc, r3, lsl #2]
   23ce8:	b	23d18 <__flatcc_fb_gen_c_json_parser@@Base+0x1edc>
   23cec:	andeq	r3, r2, r4, lsr #27
   23cf0:	andeq	r4, r2, r8, asr #2
   23cf4:	andeq	r4, r2, r4, asr r1
   23cf8:	andeq	r3, r2, r0, asr sp
   23cfc:	andeq	r4, r2, r8, lsr #3
   23d00:	andeq	r3, r2, ip, asr sp
   23d04:	andeq	r3, r2, r8, ror #26
   23d08:	andeq	r3, r2, r4, ror sp
   23d0c:	andeq	r3, r2, r0, lsl #27
   23d10:	muleq	r2, r8, sp
   23d14:	andeq	r3, r2, ip, lsl #27
   23d18:	ldr	r4, [pc, #1248]	; 24200 <__flatcc_fb_gen_c_json_parser@@Base+0x23c4>
   23d1c:	ldr	r3, [pc, #1248]	; 24204 <__flatcc_fb_gen_c_json_parser@@Base+0x23c8>
   23d20:	ldr	r0, [r3]
   23d24:	ldr	r3, [pc, #1244]	; 24208 <__flatcc_fb_gen_c_json_parser@@Base+0x23cc>
   23d28:	str	r3, [sp]
   23d2c:	mov	r3, #96	; 0x60
   23d30:	mov	r2, r4
   23d34:	ldr	r1, [pc, #1232]	; 2420c <__flatcc_fb_gen_c_json_parser@@Base+0x23d0>
   23d38:	bl	14094 <fprintf@plt>
   23d3c:	ldr	r3, [pc, #1228]	; 24210 <__flatcc_fb_gen_c_json_parser@@Base+0x23d4>
   23d40:	mov	r2, #96	; 0x60
   23d44:	mov	r1, r4
   23d48:	ldr	r0, [pc, #1220]	; 24214 <__flatcc_fb_gen_c_json_parser@@Base+0x23d8>
   23d4c:	bl	14148 <__assert_fail@plt>
   23d50:	ldr	sl, [pc, #1216]	; 24218 <__flatcc_fb_gen_c_json_parser@@Base+0x23dc>
   23d54:	ldr	r8, [pc, #1216]	; 2421c <__flatcc_fb_gen_c_json_parser@@Base+0x23e0>
   23d58:	b	2415c <__flatcc_fb_gen_c_json_parser@@Base+0x2320>
   23d5c:	ldr	sl, [pc, #1212]	; 24220 <__flatcc_fb_gen_c_json_parser@@Base+0x23e4>
   23d60:	ldr	r8, [pc, #1212]	; 24224 <__flatcc_fb_gen_c_json_parser@@Base+0x23e8>
   23d64:	b	2415c <__flatcc_fb_gen_c_json_parser@@Base+0x2320>
   23d68:	ldr	sl, [pc, #1208]	; 24228 <__flatcc_fb_gen_c_json_parser@@Base+0x23ec>
   23d6c:	ldr	r8, [pc, #1208]	; 2422c <__flatcc_fb_gen_c_json_parser@@Base+0x23f0>
   23d70:	b	2415c <__flatcc_fb_gen_c_json_parser@@Base+0x2320>
   23d74:	ldr	sl, [pc, #1204]	; 24230 <__flatcc_fb_gen_c_json_parser@@Base+0x23f4>
   23d78:	ldr	r8, [pc, #1204]	; 24234 <__flatcc_fb_gen_c_json_parser@@Base+0x23f8>
   23d7c:	b	2415c <__flatcc_fb_gen_c_json_parser@@Base+0x2320>
   23d80:	ldr	sl, [pc, #1200]	; 24238 <__flatcc_fb_gen_c_json_parser@@Base+0x23fc>
   23d84:	ldr	r8, [pc, #1200]	; 2423c <__flatcc_fb_gen_c_json_parser@@Base+0x2400>
   23d88:	b	2415c <__flatcc_fb_gen_c_json_parser@@Base+0x2320>
   23d8c:	ldr	sl, [pc, #1196]	; 24240 <__flatcc_fb_gen_c_json_parser@@Base+0x2404>
   23d90:	mov	r8, sl
   23d94:	b	2415c <__flatcc_fb_gen_c_json_parser@@Base+0x2320>
   23d98:	ldr	sl, [pc, #1188]	; 24244 <__flatcc_fb_gen_c_json_parser@@Base+0x2408>
   23d9c:	mov	r8, sl
   23da0:	b	2415c <__flatcc_fb_gen_c_json_parser@@Base+0x2320>
   23da4:	ldr	sl, [pc, #1180]	; 24248 <__flatcc_fb_gen_c_json_parser@@Base+0x240c>
   23da8:	ldr	r8, [pc, #1180]	; 2424c <__flatcc_fb_gen_c_json_parser@@Base+0x2410>
   23dac:	ldr	r0, [pc, #1180]	; 24250 <__flatcc_fb_gen_c_json_parser@@Base+0x2414>
   23db0:	b	24160 <__flatcc_fb_gen_c_json_parser@@Base+0x2324>
   23db4:	ldr	fp, [pc, #1176]	; 24254 <__flatcc_fb_gen_c_json_parser@@Base+0x2418>
   23db8:	ldr	r9, [pc, #1176]	; 24258 <__flatcc_fb_gen_c_json_parser@@Base+0x241c>
   23dbc:	ldr	r4, [pc, #1176]	; 2425c <__flatcc_fb_gen_c_json_parser@@Base+0x2420>
   23dc0:	mov	r5, #0
   23dc4:	ldr	r1, [r7, #20]
   23dc8:	cmp	r1, #0
   23dcc:	bne	23e50 <__flatcc_fb_gen_c_json_parser@@Base+0x2014>
   23dd0:	str	r8, [sp]
   23dd4:	mov	r3, r0
   23dd8:	add	r2, sp, #236	; 0xec
   23ddc:	ldr	r1, [pc, #1148]	; 24260 <__flatcc_fb_gen_c_json_parser@@Base+0x2424>
   23de0:	ldr	r0, [r6, #204]	; 0xcc
   23de4:	bl	14094 <fprintf@plt>
   23de8:	mov	r1, r8
   23dec:	mov	r0, fp
   23df0:	bl	13fbc <strcmp@plt>
   23df4:	cmp	r0, #0
   23df8:	bne	23e8c <__flatcc_fb_gen_c_json_parser@@Base+0x2050>
   23dfc:	mov	r2, fp
   23e00:	ldr	r1, [pc, #1116]	; 24264 <__flatcc_fb_gen_c_json_parser@@Base+0x2428>
   23e04:	ldr	r0, [r6, #204]	; 0xcc
   23e08:	bl	14094 <fprintf@plt>
   23e0c:	b	23ea0 <__flatcc_fb_gen_c_json_parser@@Base+0x2064>
   23e10:	ldr	fp, [pc, #1104]	; 24268 <__flatcc_fb_gen_c_json_parser@@Base+0x242c>
   23e14:	ldr	r9, [pc, #1104]	; 2426c <__flatcc_fb_gen_c_json_parser@@Base+0x2430>
   23e18:	mvn	r4, #0
   23e1c:	mov	r5, #0
   23e20:	b	23dc4 <__flatcc_fb_gen_c_json_parser@@Base+0x1f88>
   23e24:	ldr	fp, [pc, #1008]	; 2421c <__flatcc_fb_gen_c_json_parser@@Base+0x23e0>
   23e28:	ldr	r9, [pc, #1064]	; 24258 <__flatcc_fb_gen_c_json_parser@@Base+0x241c>
   23e2c:	mov	r4, #255	; 0xff
   23e30:	mov	r5, #0
   23e34:	b	23dc4 <__flatcc_fb_gen_c_json_parser@@Base+0x1f88>
   23e38:	ldrd	r2, [r1, #48]	; 0x30
   23e3c:	bic	r4, r4, r2
   23e40:	bic	r5, r5, r3
   23e44:	ldr	r1, [r1]
   23e48:	cmp	r1, #0
   23e4c:	beq	23dd0 <__flatcc_fb_gen_c_json_parser@@Base+0x1f94>
   23e50:	ldrh	r3, [r1, #56]	; 0x38
   23e54:	cmp	r3, #5
   23e58:	beq	23e38 <__flatcc_fb_gen_c_json_parser@@Base+0x1ffc>
   23e5c:	cmp	r3, #6
   23e60:	beq	23e78 <__flatcc_fb_gen_c_json_parser@@Base+0x203c>
   23e64:	cmp	r3, #4
   23e68:	ldrdeq	r2, [r1, #48]	; 0x30
   23e6c:	biceq	r4, r4, r2
   23e70:	biceq	r5, r5, r3
   23e74:	b	23e44 <__flatcc_fb_gen_c_json_parser@@Base+0x2008>
   23e78:	ldrb	r2, [r1, #48]	; 0x30
   23e7c:	mov	r3, #0
   23e80:	bic	r4, r4, r2
   23e84:	bic	r5, r5, r3
   23e88:	b	23e44 <__flatcc_fb_gen_c_json_parser@@Base+0x2008>
   23e8c:	mov	r3, fp
   23e90:	mov	r2, fp
   23e94:	ldr	r1, [pc, #980]	; 24270 <__flatcc_fb_gen_c_json_parser@@Base+0x2434>
   23e98:	ldr	r0, [r6, #204]	; 0xcc
   23e9c:	bl	14094 <fprintf@plt>
   23ea0:	ldr	r3, [r6, #204]	; 0xcc
   23ea4:	mov	r2, #54	; 0x36
   23ea8:	mov	r1, #1
   23eac:	ldr	r0, [pc, #960]	; 24274 <__flatcc_fb_gen_c_json_parser@@Base+0x2438>
   23eb0:	bl	1401c <fwrite@plt>
   23eb4:	ldr	r1, [r6, #204]	; 0xcc
   23eb8:	mov	r0, #10
   23ebc:	bl	140f4 <fputc@plt>
   23ec0:	orrs	r3, r4, r5
   23ec4:	bne	23ef0 <__flatcc_fb_gen_c_json_parser@@Base+0x20b4>
   23ec8:	ldr	r3, [r6, #204]	; 0xcc
   23ecc:	mov	r2, #59	; 0x3b
   23ed0:	mov	r1, #1
   23ed4:	ldr	r0, [pc, #924]	; 24278 <__flatcc_fb_gen_c_json_parser@@Base+0x243c>
   23ed8:	bl	1401c <fwrite@plt>
   23edc:	ldr	r4, [r7, #20]
   23ee0:	cmp	r4, #0
   23ee4:	beq	24014 <__flatcc_fb_gen_c_json_parser@@Base+0x21d8>
   23ee8:	ldr	r5, [pc, #908]	; 2427c <__flatcc_fb_gen_c_json_parser@@Base+0x2440>
   23eec:	b	23f4c <__flatcc_fb_gen_c_json_parser@@Base+0x2110>
   23ef0:	str	sl, [sp]
   23ef4:	mov	r2, r4
   23ef8:	mov	r3, r5
   23efc:	ldr	r1, [pc, #892]	; 24280 <__flatcc_fb_gen_c_json_parser@@Base+0x2444>
   23f00:	ldr	r0, [r6, #204]	; 0xcc
   23f04:	bl	14094 <fprintf@plt>
   23f08:	b	23ec8 <__flatcc_fb_gen_c_json_parser@@Base+0x208c>
   23f0c:	ldr	r2, [r4, #4]
   23f10:	ldr	r3, [r2, #4]
   23f14:	ldrd	r0, [r4, #48]	; 0x30
   23f18:	str	r3, [sp, #12]
   23f1c:	ldr	r2, [r2]
   23f20:	str	r2, [sp, #8]
   23f24:	str	r3, [sp, #4]
   23f28:	str	r9, [sp]
   23f2c:	mov	r2, r0
   23f30:	mov	r3, r1
   23f34:	mov	r1, r5
   23f38:	ldr	r0, [r6, #204]	; 0xcc
   23f3c:	bl	14094 <fprintf@plt>
   23f40:	ldr	r4, [r4]
   23f44:	cmp	r4, #0
   23f48:	beq	24014 <__flatcc_fb_gen_c_json_parser@@Base+0x21d8>
   23f4c:	ldrh	r3, [r4, #56]	; 0x38
   23f50:	cmp	r3, #5
   23f54:	beq	23f0c <__flatcc_fb_gen_c_json_parser@@Base+0x20d0>
   23f58:	cmp	r3, #6
   23f5c:	beq	23fd8 <__flatcc_fb_gen_c_json_parser@@Base+0x219c>
   23f60:	cmp	r3, #4
   23f64:	beq	23fa0 <__flatcc_fb_gen_c_json_parser@@Base+0x2164>
   23f68:	ldr	r4, [pc, #788]	; 24284 <__flatcc_fb_gen_c_json_parser@@Base+0x2448>
   23f6c:	ldr	r3, [pc, #656]	; 24204 <__flatcc_fb_gen_c_json_parser@@Base+0x23c8>
   23f70:	ldr	r0, [r3]
   23f74:	ldr	r3, [pc, #780]	; 24288 <__flatcc_fb_gen_c_json_parser@@Base+0x244c>
   23f78:	str	r3, [sp]
   23f7c:	mov	r3, #134	; 0x86
   23f80:	mov	r2, r4
   23f84:	ldr	r1, [pc, #640]	; 2420c <__flatcc_fb_gen_c_json_parser@@Base+0x23d0>
   23f88:	bl	14094 <fprintf@plt>
   23f8c:	ldr	r3, [pc, #760]	; 2428c <__flatcc_fb_gen_c_json_parser@@Base+0x2450>
   23f90:	mov	r2, #134	; 0x86
   23f94:	mov	r1, r4
   23f98:	ldr	r0, [pc, #628]	; 24214 <__flatcc_fb_gen_c_json_parser@@Base+0x23d8>
   23f9c:	bl	14148 <__assert_fail@plt>
   23fa0:	ldr	r2, [r4, #4]
   23fa4:	ldr	r3, [r2, #4]
   23fa8:	ldrd	r0, [r4, #48]	; 0x30
   23fac:	str	r3, [sp, #12]
   23fb0:	ldr	r2, [r2]
   23fb4:	str	r2, [sp, #8]
   23fb8:	str	r3, [sp, #4]
   23fbc:	str	r9, [sp]
   23fc0:	mov	r2, r0
   23fc4:	mov	r3, r1
   23fc8:	mov	r1, r5
   23fcc:	ldr	r0, [r6, #204]	; 0xcc
   23fd0:	bl	14094 <fprintf@plt>
   23fd4:	b	23f40 <__flatcc_fb_gen_c_json_parser@@Base+0x2104>
   23fd8:	ldr	r2, [r4, #4]
   23fdc:	ldr	r3, [r2, #4]
   23fe0:	ldrb	r0, [r4, #48]	; 0x30
   23fe4:	mov	r1, #0
   23fe8:	str	r3, [sp, #12]
   23fec:	ldr	r2, [r2]
   23ff0:	str	r2, [sp, #8]
   23ff4:	str	r3, [sp, #4]
   23ff8:	str	r9, [sp]
   23ffc:	mov	r2, r0
   24000:	mov	r3, r1
   24004:	mov	r1, r5
   24008:	ldr	r0, [r6, #204]	; 0xcc
   2400c:	bl	14094 <fprintf@plt>
   24010:	b	23f40 <__flatcc_fb_gen_c_json_parser@@Base+0x2104>
   24014:	ldr	r3, [r6, #204]	; 0xcc
   24018:	mov	r2, #59	; 0x3b
   2401c:	mov	r1, #1
   24020:	ldr	r0, [pc, #592]	; 24278 <__flatcc_fb_gen_c_json_parser@@Base+0x243c>
   24024:	bl	1401c <fwrite@plt>
   24028:	ldr	r3, [r6, #204]	; 0xcc
   2402c:	mov	r2, #3
   24030:	mov	r1, #1
   24034:	ldr	r0, [pc, #596]	; 24290 <__flatcc_fb_gen_c_json_parser@@Base+0x2454>
   24038:	bl	1401c <fwrite@plt>
   2403c:	mov	r0, #0
   24040:	add	sp, sp, #460	; 0x1cc
   24044:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   24048:	ldr	r2, [r4, #4]
   2404c:	ldr	r3, [r2, #4]
   24050:	ldrd	r0, [r4, #48]	; 0x30
   24054:	str	r3, [sp, #8]
   24058:	ldr	r2, [r2]
   2405c:	str	r2, [sp, #4]
   24060:	str	r3, [sp]
   24064:	mov	r2, r0
   24068:	mov	r3, r1
   2406c:	mov	r1, r5
   24070:	ldr	r0, [r6, #204]	; 0xcc
   24074:	bl	14094 <fprintf@plt>
   24078:	ldr	r4, [r4]
   2407c:	cmp	r4, #0
   24080:	beq	24134 <__flatcc_fb_gen_c_json_parser@@Base+0x22f8>
   24084:	ldrh	r3, [r4, #56]	; 0x38
   24088:	cmp	r3, #5
   2408c:	beq	24048 <__flatcc_fb_gen_c_json_parser@@Base+0x220c>
   24090:	cmp	r3, #6
   24094:	beq	2410c <__flatcc_fb_gen_c_json_parser@@Base+0x22d0>
   24098:	cmp	r3, #4
   2409c:	beq	240d8 <__flatcc_fb_gen_c_json_parser@@Base+0x229c>
   240a0:	ldr	r4, [pc, #476]	; 24284 <__flatcc_fb_gen_c_json_parser@@Base+0x2448>
   240a4:	ldr	r3, [pc, #344]	; 24204 <__flatcc_fb_gen_c_json_parser@@Base+0x23c8>
   240a8:	ldr	r0, [r3]
   240ac:	ldr	r3, [pc, #468]	; 24288 <__flatcc_fb_gen_c_json_parser@@Base+0x244c>
   240b0:	str	r3, [sp]
   240b4:	mov	r3, #157	; 0x9d
   240b8:	mov	r2, r4
   240bc:	ldr	r1, [pc, #328]	; 2420c <__flatcc_fb_gen_c_json_parser@@Base+0x23d0>
   240c0:	bl	14094 <fprintf@plt>
   240c4:	ldr	r3, [pc, #448]	; 2428c <__flatcc_fb_gen_c_json_parser@@Base+0x2450>
   240c8:	mov	r2, #157	; 0x9d
   240cc:	mov	r1, r4
   240d0:	ldr	r0, [pc, #316]	; 24214 <__flatcc_fb_gen_c_json_parser@@Base+0x23d8>
   240d4:	bl	14148 <__assert_fail@plt>
   240d8:	ldr	r2, [r4, #4]
   240dc:	ldr	r3, [r2, #4]
   240e0:	ldrd	r0, [r4, #48]	; 0x30
   240e4:	str	r3, [sp, #8]
   240e8:	ldr	r2, [r2]
   240ec:	str	r2, [sp, #4]
   240f0:	str	r3, [sp]
   240f4:	mov	r2, r0
   240f8:	mov	r3, r1
   240fc:	mov	r1, r7
   24100:	ldr	r0, [r6, #204]	; 0xcc
   24104:	bl	14094 <fprintf@plt>
   24108:	b	24078 <__flatcc_fb_gen_c_json_parser@@Base+0x223c>
   2410c:	ldr	r1, [r4, #4]
   24110:	ldr	r3, [r1, #4]
   24114:	ldrb	r2, [r4, #48]	; 0x30
   24118:	str	r3, [sp, #4]
   2411c:	ldr	r1, [r1]
   24120:	str	r1, [sp]
   24124:	mov	r1, r8
   24128:	ldr	r0, [r6, #204]	; 0xcc
   2412c:	bl	14094 <fprintf@plt>
   24130:	b	24078 <__flatcc_fb_gen_c_json_parser@@Base+0x223c>
   24134:	mov	r2, sl
   24138:	ldr	r1, [pc, #340]	; 24294 <__flatcc_fb_gen_c_json_parser@@Base+0x2458>
   2413c:	ldr	r0, [r6, #204]	; 0xcc
   24140:	bl	14094 <fprintf@plt>
   24144:	b	24028 <__flatcc_fb_gen_c_json_parser@@Base+0x21ec>
   24148:	ldr	sl, [pc, #328]	; 24298 <__flatcc_fb_gen_c_json_parser@@Base+0x245c>
   2414c:	ldr	r8, [pc, #276]	; 24268 <__flatcc_fb_gen_c_json_parser@@Base+0x242c>
   24150:	b	2415c <__flatcc_fb_gen_c_json_parser@@Base+0x2320>
   24154:	ldr	sl, [pc, #320]	; 2429c <__flatcc_fb_gen_c_json_parser@@Base+0x2460>
   24158:	ldr	r8, [pc, #244]	; 24254 <__flatcc_fb_gen_c_json_parser@@Base+0x2418>
   2415c:	ldr	r0, [pc, #236]	; 24250 <__flatcc_fb_gen_c_json_parser@@Base+0x2414>
   24160:	ldrh	r3, [r7, #92]	; 0x5c
   24164:	tst	r3, #32
   24168:	beq	241b8 <__flatcc_fb_gen_c_json_parser@@Base+0x237c>
   2416c:	ldrd	r2, [r7, #112]	; 0x70
   24170:	cmp	r3, #0
   24174:	cmpeq	r2, #2
   24178:	beq	23db4 <__flatcc_fb_gen_c_json_parser@@Base+0x1f78>
   2417c:	cmp	r3, #0
   24180:	cmpeq	r2, #4
   24184:	beq	23e10 <__flatcc_fb_gen_c_json_parser@@Base+0x1fd4>
   24188:	cmp	r3, #0
   2418c:	cmpeq	r2, #1
   24190:	beq	23e24 <__flatcc_fb_gen_c_json_parser@@Base+0x1fe8>
   24194:	ldr	fp, [pc, #176]	; 2424c <__flatcc_fb_gen_c_json_parser@@Base+0x2410>
   24198:	ldr	r9, [pc, #256]	; 242a0 <__flatcc_fb_gen_c_json_parser@@Base+0x2464>
   2419c:	mvn	r4, #0
   241a0:	mvn	r5, #0
   241a4:	b	23dc4 <__flatcc_fb_gen_c_json_parser@@Base+0x1f88>
   241a8:	mov	r0, r6
   241ac:	ldr	sl, [pc, #240]	; 242a4 <__flatcc_fb_gen_c_json_parser@@Base+0x2468>
   241b0:	ldr	r8, [pc, #240]	; 242a8 <__flatcc_fb_gen_c_json_parser@@Base+0x246c>
   241b4:	b	24160 <__flatcc_fb_gen_c_json_parser@@Base+0x2324>
   241b8:	str	r8, [sp]
   241bc:	mov	r3, r0
   241c0:	add	r2, sp, #236	; 0xec
   241c4:	ldr	r1, [pc, #148]	; 24260 <__flatcc_fb_gen_c_json_parser@@Base+0x2424>
   241c8:	ldr	r0, [r6, #204]	; 0xcc
   241cc:	bl	14094 <fprintf@plt>
   241d0:	ldr	r3, [r6, #204]	; 0xcc
   241d4:	mov	r2, #18
   241d8:	mov	r1, #1
   241dc:	ldr	r0, [pc, #200]	; 242ac <__flatcc_fb_gen_c_json_parser@@Base+0x2470>
   241e0:	bl	1401c <fwrite@plt>
   241e4:	ldr	r4, [r7, #20]
   241e8:	cmp	r4, #0
   241ec:	beq	24134 <__flatcc_fb_gen_c_json_parser@@Base+0x22f8>
   241f0:	ldr	r8, [pc, #184]	; 242b0 <__flatcc_fb_gen_c_json_parser@@Base+0x2474>
   241f4:	ldr	r7, [pc, #184]	; 242b4 <__flatcc_fb_gen_c_json_parser@@Base+0x2478>
   241f8:	ldr	r5, [pc, #184]	; 242b8 <__flatcc_fb_gen_c_json_parser@@Base+0x247c>
   241fc:	b	24084 <__flatcc_fb_gen_c_json_parser@@Base+0x2248>
   24200:	andeq	ip, r3, ip, asr sp
   24204:	andeq	r7, r6, r8, lsr #1
   24208:			; <UNDEFINED> instruction: 0x0003cdb4
   2420c:	andeq	ip, r3, r8, lsr #27
   24210:	andeq	r1, r5, r4, ror #18
   24214:	andeq	r5, r4, r0, ror #3
   24218:	andeq	sp, r3, ip, asr #1
   2421c:	andeq	ip, r3, ip, asr ip
   24220:	ldrdeq	sp, [r3], -r4
   24224:	andeq	ip, r3, ip, ror #24
   24228:	ldrdeq	sp, [r3], -ip
   2422c:	andeq	ip, r3, r4, ror ip
   24230:	andeq	sp, r3, r4, ror #1
   24234:	andeq	ip, r3, ip, ror ip
   24238:	andeq	sp, r3, ip, ror #1
   2423c:	andeq	ip, r3, r4, lsl #25
   24240:	andeq	ip, r3, ip, lsl #25
   24244:	muleq	r3, r4, ip
   24248:	strheq	sp, [r3], -r4
   2424c:	andeq	ip, r3, r8, lsr ip
   24250:	muleq	r4, r0, r4
   24254:	andeq	ip, r3, r0, asr ip
   24258:	andeq	r1, r5, r4, lsr lr
   2425c:	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>
   24260:	ldrdeq	r2, [r5], -r0
   24264:	andeq	r1, r5, r4, asr lr
   24268:	andeq	ip, r3, r4, asr #24
   2426c:	andeq	r1, r5, r8, lsr lr
   24270:	andeq	r1, r5, r0, asr #28
   24274:	andeq	r1, r5, r4, ror #28
   24278:	andeq	r1, r5, r0, lsl #30
   2427c:	andeq	r1, r5, ip, lsr pc
   24280:	muleq	r5, ip, lr
   24284:	strdeq	r1, [r5], -r8
   24288:	andeq	r1, r5, ip, lsl #31
   2428c:	andeq	r1, r5, r8, ror r9
   24290:	muleq	r4, r8, sp
   24294:	muleq	r5, r4, r0
   24298:	strheq	sp, [r3], -ip
   2429c:	andeq	sp, r3, r4, asr #1
   242a0:	andeq	r1, r5, ip, lsr lr
   242a4:	andeq	r4, r5, r4, asr #24
   242a8:	andeq	ip, r3, r4, ror #24
   242ac:	andeq	r2, r5, r8, lsl r1
   242b0:	andeq	r2, r5, r0, asr r0
   242b4:	andeq	r2, r5, ip
   242b8:	andeq	r1, r5, r8, asr #31
   242bc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   242c0:	sub	sp, sp, #484	; 0x1e4
   242c4:	mov	sl, r0
   242c8:	mov	r8, r1
   242cc:	mov	r4, #220	; 0xdc
   242d0:	mov	r2, r4
   242d4:	mov	r1, #0
   242d8:	add	r0, sp, #260	; 0x104
   242dc:	bl	140ac <memset@plt>
   242e0:	mov	r2, r4
   242e4:	mov	r1, #0
   242e8:	add	r0, sp, #40	; 0x28
   242ec:	bl	140ac <memset@plt>
   242f0:	add	r2, sp, #260	; 0x104
   242f4:	mov	r1, r8
   242f8:	ldr	r0, [r8, #12]
   242fc:	bl	15edc <__flatcc_fb_scoped_symbol_name@@Base>
   24300:	ldr	r4, [r8, #96]	; 0x60
   24304:	ldr	r5, [r8, #100]	; 0x64
   24308:	mov	r1, #4
   2430c:	mov	r0, r4
   24310:	bl	13fa4 <calloc@plt>
   24314:	orr	r4, r4, r5
   24318:	clz	r3, r0
   2431c:	lsr	r3, r3, #5
   24320:	cmp	r4, #0
   24324:	moveq	r3, #0
   24328:	cmp	r3, #0
   2432c:	bne	24384 <__flatcc_fb_gen_c_json_parser@@Base+0x2548>
   24330:	mov	r9, r0
   24334:	ldr	r3, [r8, #20]
   24338:	cmp	r3, #0
   2433c:	beq	24354 <__flatcc_fb_gen_c_json_parser@@Base+0x2518>
   24340:	ldr	r2, [r3, #96]	; 0x60
   24344:	str	r3, [r9, r2, lsl #2]
   24348:	ldr	r3, [r3]
   2434c:	cmp	r3, #0
   24350:	bne	24340 <__flatcc_fb_gen_c_json_parser@@Base+0x2504>
   24354:	add	r2, sp, #260	; 0x104
   24358:	ldr	r1, [pc, #2576]	; 24d70 <__flatcc_fb_gen_c_json_parser@@Base+0x2f34>
   2435c:	ldr	r0, [sl, #204]	; 0xcc
   24360:	bl	14094 <fprintf@plt>
   24364:	ldrd	r2, [r8, #96]	; 0x60
   24368:	orrs	r3, r2, r3
   2436c:	beq	24d2c <__flatcc_fb_gen_c_json_parser@@Base+0x2ef0>
   24370:	sub	r5, r9, #4
   24374:	mov	r6, #0
   24378:	mov	r7, #0
   2437c:	ldr	fp, [pc, #2544]	; 24d74 <__flatcc_fb_gen_c_json_parser@@Base+0x2f38>
   24380:	b	24790 <__flatcc_fb_gen_c_json_parser@@Base+0x2954>
   24384:	ldr	r5, [pc, #2540]	; 24d78 <__flatcc_fb_gen_c_json_parser@@Base+0x2f3c>
   24388:	ldr	r4, [pc, #2540]	; 24d7c <__flatcc_fb_gen_c_json_parser@@Base+0x2f40>
   2438c:	ldr	r3, [pc, #2540]	; 24d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2f44>
   24390:	ldr	r0, [r3]
   24394:	ldr	r3, [pc, #2536]	; 24d84 <__flatcc_fb_gen_c_json_parser@@Base+0x2f48>
   24398:	str	r3, [sp]
   2439c:	mov	r3, r5
   243a0:	mov	r2, r4
   243a4:	ldr	r1, [pc, #2524]	; 24d88 <__flatcc_fb_gen_c_json_parser@@Base+0x2f4c>
   243a8:	bl	14094 <fprintf@plt>
   243ac:	ldr	r3, [pc, #2520]	; 24d8c <__flatcc_fb_gen_c_json_parser@@Base+0x2f50>
   243b0:	mov	r2, r5
   243b4:	mov	r1, r4
   243b8:	ldr	r0, [pc, #2512]	; 24d90 <__flatcc_fb_gen_c_json_parser@@Base+0x2f54>
   243bc:	bl	14148 <__assert_fail@plt>
   243c0:	ldr	r3, [r4, #16]
   243c4:	sub	r3, r3, #1
   243c8:	cmp	r3, #10
   243cc:	ldrls	pc, [pc, r3, lsl #2]
   243d0:	b	24448 <__flatcc_fb_gen_c_json_parser@@Base+0x260c>
   243d4:	andeq	r4, r2, r0, lsl #9
   243d8:	andeq	r4, r2, r0, lsl #8
   243dc:	andeq	r4, r2, r8, lsl #9
   243e0:	andeq	r4, r2, r8, lsl #8
   243e4:	andeq	r4, r2, r0, lsl r4
   243e8:	andeq	r4, r2, r8, lsl r4
   243ec:	andeq	r4, r2, r0, lsr #8
   243f0:	andeq	r4, r2, r8, lsr #8
   243f4:	andeq	r4, r2, r0, lsr r4
   243f8:	andeq	r4, r2, r0, asr #8
   243fc:	andeq	r4, r2, r8, lsr r4
   24400:	ldr	r2, [pc, #2444]	; 24d94 <__flatcc_fb_gen_c_json_parser@@Base+0x2f58>
   24404:	b	2448c <__flatcc_fb_gen_c_json_parser@@Base+0x2650>
   24408:	ldr	r2, [pc, #2440]	; 24d98 <__flatcc_fb_gen_c_json_parser@@Base+0x2f5c>
   2440c:	b	2448c <__flatcc_fb_gen_c_json_parser@@Base+0x2650>
   24410:	ldr	r2, [pc, #2436]	; 24d9c <__flatcc_fb_gen_c_json_parser@@Base+0x2f60>
   24414:	b	2448c <__flatcc_fb_gen_c_json_parser@@Base+0x2650>
   24418:	ldr	r2, [pc, #2432]	; 24da0 <__flatcc_fb_gen_c_json_parser@@Base+0x2f64>
   2441c:	b	2448c <__flatcc_fb_gen_c_json_parser@@Base+0x2650>
   24420:	ldr	r2, [pc, #2428]	; 24da4 <__flatcc_fb_gen_c_json_parser@@Base+0x2f68>
   24424:	b	2448c <__flatcc_fb_gen_c_json_parser@@Base+0x2650>
   24428:	ldr	r2, [pc, #2424]	; 24da8 <__flatcc_fb_gen_c_json_parser@@Base+0x2f6c>
   2442c:	b	2448c <__flatcc_fb_gen_c_json_parser@@Base+0x2650>
   24430:	ldr	r2, [pc, #2420]	; 24dac <__flatcc_fb_gen_c_json_parser@@Base+0x2f70>
   24434:	b	2448c <__flatcc_fb_gen_c_json_parser@@Base+0x2650>
   24438:	ldr	r2, [pc, #2416]	; 24db0 <__flatcc_fb_gen_c_json_parser@@Base+0x2f74>
   2443c:	b	2448c <__flatcc_fb_gen_c_json_parser@@Base+0x2650>
   24440:	ldr	r2, [pc, #2412]	; 24db4 <__flatcc_fb_gen_c_json_parser@@Base+0x2f78>
   24444:	b	2448c <__flatcc_fb_gen_c_json_parser@@Base+0x2650>
   24448:	ldr	r4, [pc, #2408]	; 24db8 <__flatcc_fb_gen_c_json_parser@@Base+0x2f7c>
   2444c:	ldr	r3, [pc, #2348]	; 24d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2f44>
   24450:	ldr	r0, [r3]
   24454:	ldr	r3, [pc, #2400]	; 24dbc <__flatcc_fb_gen_c_json_parser@@Base+0x2f80>
   24458:	str	r3, [sp]
   2445c:	mov	r3, #96	; 0x60
   24460:	mov	r2, r4
   24464:	ldr	r1, [pc, #2332]	; 24d88 <__flatcc_fb_gen_c_json_parser@@Base+0x2f4c>
   24468:	bl	14094 <fprintf@plt>
   2446c:	ldr	r3, [pc, #2380]	; 24dc0 <__flatcc_fb_gen_c_json_parser@@Base+0x2f84>
   24470:	mov	r2, #96	; 0x60
   24474:	mov	r1, r4
   24478:	ldr	r0, [pc, #2320]	; 24d90 <__flatcc_fb_gen_c_json_parser@@Base+0x2f54>
   2447c:	bl	14148 <__assert_fail@plt>
   24480:	ldr	r2, [pc, #2364]	; 24dc4 <__flatcc_fb_gen_c_json_parser@@Base+0x2f88>
   24484:	b	2448c <__flatcc_fb_gen_c_json_parser@@Base+0x2650>
   24488:	ldr	r2, [pc, #2360]	; 24dc8 <__flatcc_fb_gen_c_json_parser@@Base+0x2f8c>
   2448c:	ldrh	r3, [r4, #56]	; 0x38
   24490:	sub	r3, r3, #3
   24494:	cmp	r3, #3
   24498:	ldrls	pc, [pc, r3, lsl #2]
   2449c:	b	24558 <__flatcc_fb_gen_c_json_parser@@Base+0x271c>
   244a0:	andeq	r4, r2, r0, lsr #10
   244a4:	andeq	r4, r2, r8, ror #9
   244a8:			; <UNDEFINED> instruction: 0x000244b0
   244ac:			; <UNDEFINED> instruction: 0x000244b0
   244b0:	ldr	ip, [r4, #4]
   244b4:	ldr	r3, [ip, #4]
   244b8:	ldrd	r0, [r4, #48]	; 0x30
   244bc:	strd	r0, [sp, #24]
   244c0:	str	r3, [sp, #16]
   244c4:	ldr	r1, [ip]
   244c8:	str	r1, [sp, #12]
   244cc:	str	r3, [sp, #8]
   244d0:	ldrd	r0, [r4, #96]	; 0x60
   244d4:	strd	r0, [sp]
   244d8:	ldr	r1, [pc, #2284]	; 24dcc <__flatcc_fb_gen_c_json_parser@@Base+0x2f90>
   244dc:	ldr	r0, [sl, #204]	; 0xcc
   244e0:	bl	14094 <fprintf@plt>
   244e4:	b	24778 <__flatcc_fb_gen_c_json_parser@@Base+0x293c>
   244e8:	ldr	ip, [r4, #4]
   244ec:	ldr	r3, [ip, #4]
   244f0:	ldrd	r0, [r4, #48]	; 0x30
   244f4:	strd	r0, [sp, #24]
   244f8:	str	r3, [sp, #16]
   244fc:	ldr	r1, [ip]
   24500:	str	r1, [sp, #12]
   24504:	str	r3, [sp, #8]
   24508:	ldrd	r0, [r4, #96]	; 0x60
   2450c:	strd	r0, [sp]
   24510:	ldr	r1, [pc, #2232]	; 24dd0 <__flatcc_fb_gen_c_json_parser@@Base+0x2f94>
   24514:	ldr	r0, [sl, #204]	; 0xcc
   24518:	bl	14094 <fprintf@plt>
   2451c:	b	24778 <__flatcc_fb_gen_c_json_parser@@Base+0x293c>
   24520:	ldr	r1, [r4, #4]
   24524:	ldr	r3, [r1, #4]
   24528:	vldr	d7, [r4, #48]	; 0x30
   2452c:	vstr	d7, [sp, #24]
   24530:	str	r3, [sp, #16]
   24534:	ldr	r1, [r1]
   24538:	str	r1, [sp, #12]
   2453c:	str	r3, [sp, #8]
   24540:	ldrd	r0, [r4, #96]	; 0x60
   24544:	strd	r0, [sp]
   24548:	ldr	r1, [pc, #2180]	; 24dd4 <__flatcc_fb_gen_c_json_parser@@Base+0x2f98>
   2454c:	ldr	r0, [sl, #204]	; 0xcc
   24550:	bl	14094 <fprintf@plt>
   24554:	b	24778 <__flatcc_fb_gen_c_json_parser@@Base+0x293c>
   24558:	ldr	r5, [pc, #2168]	; 24dd8 <__flatcc_fb_gen_c_json_parser@@Base+0x2f9c>
   2455c:	ldr	r4, [pc, #2072]	; 24d7c <__flatcc_fb_gen_c_json_parser@@Base+0x2f40>
   24560:	ldr	r3, [pc, #2072]	; 24d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2f44>
   24564:	ldr	r0, [r3]
   24568:	ldr	r3, [pc, #2156]	; 24ddc <__flatcc_fb_gen_c_json_parser@@Base+0x2fa0>
   2456c:	str	r3, [sp]
   24570:	mov	r3, r5
   24574:	mov	r2, r4
   24578:	ldr	r1, [pc, #2056]	; 24d88 <__flatcc_fb_gen_c_json_parser@@Base+0x2f4c>
   2457c:	bl	14094 <fprintf@plt>
   24580:	ldr	r3, [pc, #2052]	; 24d8c <__flatcc_fb_gen_c_json_parser@@Base+0x2f50>
   24584:	mov	r2, r5
   24588:	mov	r1, r4
   2458c:	ldr	r0, [pc, #2044]	; 24d90 <__flatcc_fb_gen_c_json_parser@@Base+0x2f54>
   24590:	bl	14148 <__assert_fail@plt>
   24594:	ldrh	r3, [r4, #72]	; 0x48
   24598:	tst	r3, #3072	; 0xc00
   2459c:	bne	24608 <__flatcc_fb_gen_c_json_parser@@Base+0x27cc>
   245a0:	ldr	r3, [r4, #104]	; 0x68
   245a4:	cmp	r3, #0
   245a8:	beq	2464c <__flatcc_fb_gen_c_json_parser@@Base+0x2810>
   245ac:	add	r2, sp, #40	; 0x28
   245b0:	mov	r1, r3
   245b4:	ldr	r0, [r3, #12]
   245b8:	bl	15edc <__flatcc_fb_scoped_symbol_name@@Base>
   245bc:	ldr	r3, [r4, #104]	; 0x68
   245c0:	ldrh	r3, [r3, #8]
   245c4:	cmp	r3, #0
   245c8:	ldr	r2, [r4, #4]
   245cc:	ldr	r3, [r2, #4]
   245d0:	ldrd	r0, [r4, #96]	; 0x60
   245d4:	add	ip, sp, #40	; 0x28
   245d8:	str	ip, [sp, #12]
   245dc:	str	r3, [sp, #8]
   245e0:	ldr	r2, [r2]
   245e4:	str	r2, [sp, #4]
   245e8:	str	r3, [sp]
   245ec:	mov	r2, r0
   245f0:	mov	r3, r1
   245f4:	ldreq	r1, [pc, #2020]	; 24de0 <__flatcc_fb_gen_c_json_parser@@Base+0x2fa4>
   245f8:	ldrne	r1, [pc, #2020]	; 24de4 <__flatcc_fb_gen_c_json_parser@@Base+0x2fa8>
   245fc:	ldr	r0, [sl, #204]	; 0xcc
   24600:	bl	14094 <fprintf@plt>
   24604:	b	24778 <__flatcc_fb_gen_c_json_parser@@Base+0x293c>
   24608:	ldr	ip, [r4, #4]
   2460c:	ldr	r2, [ip, #4]
   24610:	ldrd	r0, [r4, #96]	; 0x60
   24614:	lsr	r3, r3, #10
   24618:	eor	r3, r3, #1
   2461c:	and	r3, r3, #1
   24620:	str	r3, [sp, #12]
   24624:	str	r2, [sp, #8]
   24628:	ldr	r3, [ip]
   2462c:	str	r3, [sp, #4]
   24630:	str	r2, [sp]
   24634:	mov	r2, r0
   24638:	mov	r3, r1
   2463c:	ldr	r1, [pc, #1956]	; 24de8 <__flatcc_fb_gen_c_json_parser@@Base+0x2fac>
   24640:	ldr	r0, [sl, #204]	; 0xcc
   24644:	bl	14094 <fprintf@plt>
   24648:	b	24778 <__flatcc_fb_gen_c_json_parser@@Base+0x293c>
   2464c:	ldr	r3, [r4, #16]
   24650:	sub	r3, r3, #1
   24654:	cmp	r3, #10
   24658:	ldrls	pc, [pc, r3, lsl #2]
   2465c:	b	24700 <__flatcc_fb_gen_c_json_parser@@Base+0x28c4>
   24660:	andeq	r4, r2, r8, lsr r7
   24664:	andeq	r4, r2, ip, lsl #13
   24668:	andeq	r4, r2, r0, asr #14
   2466c:	andeq	r4, r2, r0, asr #13
   24670:	andeq	r4, r2, r8, asr #13
   24674:	ldrdeq	r4, [r2], -r0
   24678:	ldrdeq	r4, [r2], -r8
   2467c:	andeq	r4, r2, r0, ror #13
   24680:	andeq	r4, r2, r8, ror #13
   24684:	strdeq	r4, [r2], -r8
   24688:	strdeq	r4, [r2], -r0
   2468c:	ldr	r2, [pc, #1792]	; 24d94 <__flatcc_fb_gen_c_json_parser@@Base+0x2f58>
   24690:	ldr	r1, [r4, #4]
   24694:	ldr	r3, [r1, #4]
   24698:	str	r3, [sp, #16]
   2469c:	ldr	r1, [r1]
   246a0:	str	r1, [sp, #12]
   246a4:	str	r3, [sp, #8]
   246a8:	ldrd	r0, [r4, #96]	; 0x60
   246ac:	strd	r0, [sp]
   246b0:	ldr	r1, [pc, #1844]	; 24dec <__flatcc_fb_gen_c_json_parser@@Base+0x2fb0>
   246b4:	ldr	r0, [sl, #204]	; 0xcc
   246b8:	bl	14094 <fprintf@plt>
   246bc:	b	24778 <__flatcc_fb_gen_c_json_parser@@Base+0x293c>
   246c0:	ldr	r2, [pc, #1744]	; 24d98 <__flatcc_fb_gen_c_json_parser@@Base+0x2f5c>
   246c4:	b	24690 <__flatcc_fb_gen_c_json_parser@@Base+0x2854>
   246c8:	ldr	r2, [pc, #1740]	; 24d9c <__flatcc_fb_gen_c_json_parser@@Base+0x2f60>
   246cc:	b	24690 <__flatcc_fb_gen_c_json_parser@@Base+0x2854>
   246d0:	ldr	r2, [pc, #1736]	; 24da0 <__flatcc_fb_gen_c_json_parser@@Base+0x2f64>
   246d4:	b	24690 <__flatcc_fb_gen_c_json_parser@@Base+0x2854>
   246d8:	ldr	r2, [pc, #1732]	; 24da4 <__flatcc_fb_gen_c_json_parser@@Base+0x2f68>
   246dc:	b	24690 <__flatcc_fb_gen_c_json_parser@@Base+0x2854>
   246e0:	ldr	r2, [pc, #1728]	; 24da8 <__flatcc_fb_gen_c_json_parser@@Base+0x2f6c>
   246e4:	b	24690 <__flatcc_fb_gen_c_json_parser@@Base+0x2854>
   246e8:	ldr	r2, [pc, #1724]	; 24dac <__flatcc_fb_gen_c_json_parser@@Base+0x2f70>
   246ec:	b	24690 <__flatcc_fb_gen_c_json_parser@@Base+0x2854>
   246f0:	ldr	r2, [pc, #1720]	; 24db0 <__flatcc_fb_gen_c_json_parser@@Base+0x2f74>
   246f4:	b	24690 <__flatcc_fb_gen_c_json_parser@@Base+0x2854>
   246f8:	ldr	r2, [pc, #1716]	; 24db4 <__flatcc_fb_gen_c_json_parser@@Base+0x2f78>
   246fc:	b	24690 <__flatcc_fb_gen_c_json_parser@@Base+0x2854>
   24700:	ldr	r4, [pc, #1712]	; 24db8 <__flatcc_fb_gen_c_json_parser@@Base+0x2f7c>
   24704:	ldr	r3, [pc, #1652]	; 24d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2f44>
   24708:	ldr	r0, [r3]
   2470c:	ldr	r3, [pc, #1704]	; 24dbc <__flatcc_fb_gen_c_json_parser@@Base+0x2f80>
   24710:	str	r3, [sp]
   24714:	mov	r3, #96	; 0x60
   24718:	mov	r2, r4
   2471c:	ldr	r1, [pc, #1636]	; 24d88 <__flatcc_fb_gen_c_json_parser@@Base+0x2f4c>
   24720:	bl	14094 <fprintf@plt>
   24724:	ldr	r3, [pc, #1684]	; 24dc0 <__flatcc_fb_gen_c_json_parser@@Base+0x2f84>
   24728:	mov	r2, #96	; 0x60
   2472c:	mov	r1, r4
   24730:	ldr	r0, [pc, #1624]	; 24d90 <__flatcc_fb_gen_c_json_parser@@Base+0x2f54>
   24734:	bl	14148 <__assert_fail@plt>
   24738:	ldr	r2, [pc, #1668]	; 24dc4 <__flatcc_fb_gen_c_json_parser@@Base+0x2f88>
   2473c:	b	24690 <__flatcc_fb_gen_c_json_parser@@Base+0x2854>
   24740:	ldr	r2, [pc, #1664]	; 24dc8 <__flatcc_fb_gen_c_json_parser@@Base+0x2f8c>
   24744:	b	24690 <__flatcc_fb_gen_c_json_parser@@Base+0x2854>
   24748:	ldr	r2, [r4, #4]
   2474c:	ldr	r3, [r2, #4]
   24750:	ldrd	r0, [r4, #96]	; 0x60
   24754:	str	r3, [sp, #8]
   24758:	ldr	r2, [r2]
   2475c:	str	r2, [sp, #4]
   24760:	str	r3, [sp]
   24764:	mov	r2, r0
   24768:	mov	r3, r1
   2476c:	ldr	r1, [pc, #1660]	; 24df0 <__flatcc_fb_gen_c_json_parser@@Base+0x2fb4>
   24770:	ldr	r0, [sl, #204]	; 0xcc
   24774:	bl	14094 <fprintf@plt>
   24778:	adds	r6, r6, #1
   2477c:	adc	r7, r7, #0
   24780:	ldrd	r2, [r8, #96]	; 0x60
   24784:	cmp	r3, r7
   24788:	cmpeq	r2, r6
   2478c:	bls	24d2c <__flatcc_fb_gen_c_json_parser@@Base+0x2ef0>
   24790:	ldr	r4, [r5, #4]!
   24794:	cmp	r4, #0
   24798:	beq	24778 <__flatcc_fb_gen_c_json_parser@@Base+0x293c>
   2479c:	ldrh	r3, [r4, #72]	; 0x48
   247a0:	tst	r3, #4
   247a4:	bne	24778 <__flatcc_fb_gen_c_json_parser@@Base+0x293c>
   247a8:	ldr	r3, [sl, #204]	; 0xcc
   247ac:	mov	r2, #5
   247b0:	mov	r1, #1
   247b4:	mov	r0, fp
   247b8:	bl	1401c <fwrite@plt>
   247bc:	ldrh	r3, [r4, #24]
   247c0:	sub	r3, r3, #7
   247c4:	cmp	r3, #8
   247c8:	ldrls	pc, [pc, r3, lsl #2]
   247cc:	b	24778 <__flatcc_fb_gen_c_json_parser@@Base+0x293c>
   247d0:	muleq	r2, r4, r5
   247d4:	andeq	r4, r2, r0, asr #7
   247d8:	strdeq	r4, [r2], -r4	; <UNPREDICTABLE>
   247dc:	andeq	r4, r2, r8, asr #14
   247e0:	andeq	r4, r2, r8, ror r7
   247e4:	andeq	r4, r2, r8, ror r7
   247e8:	andeq	r4, r2, r8, ror r7
   247ec:	andeq	r4, r2, r8, lsr #16
   247f0:	strdeq	r4, [r2], -r4	; <UNPREDICTABLE>
   247f4:	ldr	r2, [r4, #4]
   247f8:	ldr	r3, [r2, #4]
   247fc:	ldrd	r0, [r4, #96]	; 0x60
   24800:	str	r3, [sp, #8]
   24804:	ldr	r2, [r2]
   24808:	str	r2, [sp, #4]
   2480c:	str	r3, [sp]
   24810:	mov	r2, r0
   24814:	mov	r3, r1
   24818:	ldr	r1, [pc, #1492]	; 24df4 <__flatcc_fb_gen_c_json_parser@@Base+0x2fb8>
   2481c:	ldr	r0, [sl, #204]	; 0xcc
   24820:	bl	14094 <fprintf@plt>
   24824:	b	24778 <__flatcc_fb_gen_c_json_parser@@Base+0x293c>
   24828:	ldr	r3, [r4, #16]
   2482c:	add	r2, sp, #40	; 0x28
   24830:	mov	r1, r3
   24834:	ldr	r0, [r3, #12]
   24838:	bl	15edc <__flatcc_fb_scoped_symbol_name@@Base>
   2483c:	ldr	r2, [r4, #16]
   24840:	ldrh	r3, [r2, #8]
   24844:	cmp	r3, #4
   24848:	ldrls	pc, [pc, r3, lsl #2]
   2484c:	b	24abc <__flatcc_fb_gen_c_json_parser@@Base+0x2c80>
   24850:	andeq	r4, r2, r0, asr #20
   24854:	andeq	r4, r2, r4, lsl #20
   24858:			; <UNDEFINED> instruction: 0x00024abc
   2485c:	andeq	r4, r2, r4, ror #16
   24860:	andeq	r4, r2, ip, ror sl
   24864:	ldr	r3, [r2, #40]	; 0x28
   24868:	sub	r3, r3, #1
   2486c:	cmp	r3, #10
   24870:	ldrls	pc, [pc, r3, lsl #2]
   24874:	b	24940 <__flatcc_fb_gen_c_json_parser@@Base+0x2b04>
   24878:	andeq	r4, r2, r8, ror r9
   2487c:	andeq	r4, r2, r4, lsr #17
   24880:	andeq	r4, r2, r0, lsl #19
   24884:	andeq	r4, r2, r0, lsl #18
   24888:	andeq	r4, r2, r8, lsl #18
   2488c:	andeq	r4, r2, r0, lsl r9
   24890:	andeq	r4, r2, r8, lsl r9
   24894:	andeq	r4, r2, r0, lsr #18
   24898:	andeq	r4, r2, r8, lsr #18
   2489c:	andeq	r4, r2, r8, lsr r9
   248a0:	andeq	r4, r2, r0, lsr r9
   248a4:	ldr	r2, [pc, #1256]	; 24d94 <__flatcc_fb_gen_c_json_parser@@Base+0x2f58>
   248a8:	ldrh	r3, [r4, #56]	; 0x38
   248ac:	cmp	r3, #4
   248b0:	beq	24988 <__flatcc_fb_gen_c_json_parser@@Base+0x2b4c>
   248b4:	bcc	249c8 <__flatcc_fb_gen_c_json_parser@@Base+0x2b8c>
   248b8:	cmp	r3, #6
   248bc:	bhi	249c8 <__flatcc_fb_gen_c_json_parser@@Base+0x2b8c>
   248c0:	ldr	ip, [r4, #4]
   248c4:	ldr	r3, [ip, #4]
   248c8:	add	r1, sp, #40	; 0x28
   248cc:	str	r1, [sp, #32]
   248d0:	ldrd	r0, [r4, #48]	; 0x30
   248d4:	strd	r0, [sp, #24]
   248d8:	str	r3, [sp, #16]
   248dc:	ldr	r1, [ip]
   248e0:	str	r1, [sp, #12]
   248e4:	str	r3, [sp, #8]
   248e8:	ldrd	r0, [r4, #96]	; 0x60
   248ec:	strd	r0, [sp]
   248f0:	ldr	r1, [pc, #1280]	; 24df8 <__flatcc_fb_gen_c_json_parser@@Base+0x2fbc>
   248f4:	ldr	r0, [sl, #204]	; 0xcc
   248f8:	bl	14094 <fprintf@plt>
   248fc:	b	24778 <__flatcc_fb_gen_c_json_parser@@Base+0x293c>
   24900:	ldr	r2, [pc, #1168]	; 24d98 <__flatcc_fb_gen_c_json_parser@@Base+0x2f5c>
   24904:	b	248a8 <__flatcc_fb_gen_c_json_parser@@Base+0x2a6c>
   24908:	ldr	r2, [pc, #1164]	; 24d9c <__flatcc_fb_gen_c_json_parser@@Base+0x2f60>
   2490c:	b	248a8 <__flatcc_fb_gen_c_json_parser@@Base+0x2a6c>
   24910:	ldr	r2, [pc, #1160]	; 24da0 <__flatcc_fb_gen_c_json_parser@@Base+0x2f64>
   24914:	b	248a8 <__flatcc_fb_gen_c_json_parser@@Base+0x2a6c>
   24918:	ldr	r2, [pc, #1156]	; 24da4 <__flatcc_fb_gen_c_json_parser@@Base+0x2f68>
   2491c:	b	248a8 <__flatcc_fb_gen_c_json_parser@@Base+0x2a6c>
   24920:	ldr	r2, [pc, #1152]	; 24da8 <__flatcc_fb_gen_c_json_parser@@Base+0x2f6c>
   24924:	b	248a8 <__flatcc_fb_gen_c_json_parser@@Base+0x2a6c>
   24928:	ldr	r2, [pc, #1148]	; 24dac <__flatcc_fb_gen_c_json_parser@@Base+0x2f70>
   2492c:	b	248a8 <__flatcc_fb_gen_c_json_parser@@Base+0x2a6c>
   24930:	ldr	r2, [pc, #1144]	; 24db0 <__flatcc_fb_gen_c_json_parser@@Base+0x2f74>
   24934:	b	248a8 <__flatcc_fb_gen_c_json_parser@@Base+0x2a6c>
   24938:	ldr	r2, [pc, #1140]	; 24db4 <__flatcc_fb_gen_c_json_parser@@Base+0x2f78>
   2493c:	b	248a8 <__flatcc_fb_gen_c_json_parser@@Base+0x2a6c>
   24940:	ldr	r4, [pc, #1136]	; 24db8 <__flatcc_fb_gen_c_json_parser@@Base+0x2f7c>
   24944:	ldr	r3, [pc, #1076]	; 24d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2f44>
   24948:	ldr	r0, [r3]
   2494c:	ldr	r3, [pc, #1128]	; 24dbc <__flatcc_fb_gen_c_json_parser@@Base+0x2f80>
   24950:	str	r3, [sp]
   24954:	mov	r3, #96	; 0x60
   24958:	mov	r2, r4
   2495c:	ldr	r1, [pc, #1060]	; 24d88 <__flatcc_fb_gen_c_json_parser@@Base+0x2f4c>
   24960:	bl	14094 <fprintf@plt>
   24964:	ldr	r3, [pc, #1108]	; 24dc0 <__flatcc_fb_gen_c_json_parser@@Base+0x2f84>
   24968:	mov	r2, #96	; 0x60
   2496c:	mov	r1, r4
   24970:	ldr	r0, [pc, #1048]	; 24d90 <__flatcc_fb_gen_c_json_parser@@Base+0x2f54>
   24974:	bl	14148 <__assert_fail@plt>
   24978:	ldr	r2, [pc, #1092]	; 24dc4 <__flatcc_fb_gen_c_json_parser@@Base+0x2f88>
   2497c:	b	248a8 <__flatcc_fb_gen_c_json_parser@@Base+0x2a6c>
   24980:	ldr	r2, [pc, #1088]	; 24dc8 <__flatcc_fb_gen_c_json_parser@@Base+0x2f8c>
   24984:	b	248a8 <__flatcc_fb_gen_c_json_parser@@Base+0x2a6c>
   24988:	ldr	ip, [r4, #4]
   2498c:	ldr	r3, [ip, #4]
   24990:	add	r1, sp, #40	; 0x28
   24994:	str	r1, [sp, #32]
   24998:	ldrd	r0, [r4, #48]	; 0x30
   2499c:	strd	r0, [sp, #24]
   249a0:	str	r3, [sp, #16]
   249a4:	ldr	r1, [ip]
   249a8:	str	r1, [sp, #12]
   249ac:	str	r3, [sp, #8]
   249b0:	ldrd	r0, [r4, #96]	; 0x60
   249b4:	strd	r0, [sp]
   249b8:	ldr	r1, [pc, #1084]	; 24dfc <__flatcc_fb_gen_c_json_parser@@Base+0x2fc0>
   249bc:	ldr	r0, [sl, #204]	; 0xcc
   249c0:	bl	14094 <fprintf@plt>
   249c4:	b	24778 <__flatcc_fb_gen_c_json_parser@@Base+0x293c>
   249c8:	ldr	r5, [pc, #1072]	; 24e00 <__flatcc_fb_gen_c_json_parser@@Base+0x2fc4>
   249cc:	ldr	r4, [pc, #936]	; 24d7c <__flatcc_fb_gen_c_json_parser@@Base+0x2f40>
   249d0:	ldr	r3, [pc, #936]	; 24d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2f44>
   249d4:	ldr	r0, [r3]
   249d8:	ldr	r3, [pc, #1060]	; 24e04 <__flatcc_fb_gen_c_json_parser@@Base+0x2fc8>
   249dc:	str	r3, [sp]
   249e0:	mov	r3, r5
   249e4:	mov	r2, r4
   249e8:	ldr	r1, [pc, #920]	; 24d88 <__flatcc_fb_gen_c_json_parser@@Base+0x2f4c>
   249ec:	bl	14094 <fprintf@plt>
   249f0:	ldr	r3, [pc, #916]	; 24d8c <__flatcc_fb_gen_c_json_parser@@Base+0x2f50>
   249f4:	mov	r2, r5
   249f8:	mov	r1, r4
   249fc:	ldr	r0, [pc, #908]	; 24d90 <__flatcc_fb_gen_c_json_parser@@Base+0x2f54>
   24a00:	bl	14148 <__assert_fail@plt>
   24a04:	ldr	r2, [r4, #4]
   24a08:	ldr	r3, [r2, #4]
   24a0c:	ldrd	r0, [r4, #96]	; 0x60
   24a10:	add	ip, sp, #40	; 0x28
   24a14:	str	ip, [sp, #12]
   24a18:	str	r3, [sp, #8]
   24a1c:	ldr	r2, [r2]
   24a20:	str	r2, [sp, #4]
   24a24:	str	r3, [sp]
   24a28:	mov	r2, r0
   24a2c:	mov	r3, r1
   24a30:	ldr	r1, [pc, #976]	; 24e08 <__flatcc_fb_gen_c_json_parser@@Base+0x2fcc>
   24a34:	ldr	r0, [sl, #204]	; 0xcc
   24a38:	bl	14094 <fprintf@plt>
   24a3c:	b	24778 <__flatcc_fb_gen_c_json_parser@@Base+0x293c>
   24a40:	ldr	r2, [r4, #4]
   24a44:	ldr	r3, [r2, #4]
   24a48:	ldrd	r0, [r4, #96]	; 0x60
   24a4c:	add	ip, sp, #40	; 0x28
   24a50:	str	ip, [sp, #12]
   24a54:	str	r3, [sp, #8]
   24a58:	ldr	r2, [r2]
   24a5c:	str	r2, [sp, #4]
   24a60:	str	r3, [sp]
   24a64:	mov	r2, r0
   24a68:	mov	r3, r1
   24a6c:	ldr	r1, [pc, #920]	; 24e0c <__flatcc_fb_gen_c_json_parser@@Base+0x2fd0>
   24a70:	ldr	r0, [sl, #204]	; 0xcc
   24a74:	bl	14094 <fprintf@plt>
   24a78:	b	24778 <__flatcc_fb_gen_c_json_parser@@Base+0x293c>
   24a7c:	ldr	r2, [r4, #4]
   24a80:	ldr	r3, [r2, #4]
   24a84:	ldrd	r0, [r4, #96]	; 0x60
   24a88:	add	ip, sp, #40	; 0x28
   24a8c:	str	ip, [sp, #16]
   24a90:	str	ip, [sp, #12]
   24a94:	str	r3, [sp, #8]
   24a98:	ldr	r2, [r2]
   24a9c:	str	r2, [sp, #4]
   24aa0:	str	r3, [sp]
   24aa4:	mov	r2, r0
   24aa8:	mov	r3, r1
   24aac:	ldr	r1, [pc, #860]	; 24e10 <__flatcc_fb_gen_c_json_parser@@Base+0x2fd4>
   24ab0:	ldr	r0, [sl, #204]	; 0xcc
   24ab4:	bl	14094 <fprintf@plt>
   24ab8:	b	24778 <__flatcc_fb_gen_c_json_parser@@Base+0x293c>
   24abc:	ldr	r4, [pc, #696]	; 24d7c <__flatcc_fb_gen_c_json_parser@@Base+0x2f40>
   24ac0:	ldr	r3, [pc, #696]	; 24d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2f44>
   24ac4:	ldr	r0, [r3]
   24ac8:	ldr	r3, [pc, #836]	; 24e14 <__flatcc_fb_gen_c_json_parser@@Base+0x2fd8>
   24acc:	str	r3, [sp]
   24ad0:	mov	r3, #504	; 0x1f8
   24ad4:	mov	r2, r4
   24ad8:	ldr	r1, [pc, #680]	; 24d88 <__flatcc_fb_gen_c_json_parser@@Base+0x2f4c>
   24adc:	bl	14094 <fprintf@plt>
   24ae0:	ldr	r3, [pc, #676]	; 24d8c <__flatcc_fb_gen_c_json_parser@@Base+0x2f50>
   24ae4:	mov	r2, #504	; 0x1f8
   24ae8:	mov	r1, r4
   24aec:	ldr	r0, [pc, #668]	; 24d90 <__flatcc_fb_gen_c_json_parser@@Base+0x2f54>
   24af0:	bl	14148 <__assert_fail@plt>
   24af4:	ldr	r3, [r4, #16]
   24af8:	add	r2, sp, #40	; 0x28
   24afc:	mov	r1, r3
   24b00:	ldr	r0, [r3, #12]
   24b04:	bl	15edc <__flatcc_fb_scoped_symbol_name@@Base>
   24b08:	ldr	r2, [r4, #16]
   24b0c:	ldrh	r3, [r2, #8]
   24b10:	cmp	r3, #4
   24b14:	ldrls	pc, [pc, r3, lsl #2]
   24b18:	b	24cf0 <__flatcc_fb_gen_c_json_parser@@Base+0x2eb4>
   24b1c:	andeq	r4, r2, r0, lsr fp
   24b20:	andeq	r4, r2, r4, ror ip
   24b24:	strdeq	r4, [r2], -r0
   24b28:	andeq	r4, r2, ip, ror #22
   24b2c:			; <UNDEFINED> instruction: 0x00024cb0
   24b30:	ldr	r2, [r4, #4]
   24b34:	ldr	r3, [r2, #4]
   24b38:	ldrd	r0, [r4, #96]	; 0x60
   24b3c:	add	ip, sp, #40	; 0x28
   24b40:	str	ip, [sp, #12]
   24b44:	str	r3, [sp, #8]
   24b48:	ldr	r2, [r2]
   24b4c:	str	r2, [sp, #4]
   24b50:	str	r3, [sp]
   24b54:	mov	r2, r0
   24b58:	mov	r3, r1
   24b5c:	ldr	r1, [pc, #692]	; 24e18 <__flatcc_fb_gen_c_json_parser@@Base+0x2fdc>
   24b60:	ldr	r0, [sl, #204]	; 0xcc
   24b64:	bl	14094 <fprintf@plt>
   24b68:	b	24778 <__flatcc_fb_gen_c_json_parser@@Base+0x293c>
   24b6c:	sub	r2, r2, #1
   24b70:	cmp	r2, #10
   24b74:	ldrls	pc, [pc, r2, lsl #2]
   24b78:	b	24c2c <__flatcc_fb_gen_c_json_parser@@Base+0x2df0>
   24b7c:	andeq	r4, r2, r4, ror #24
   24b80:	andeq	r4, r2, r8, lsr #23
   24b84:	andeq	r4, r2, ip, ror #24
   24b88:	andeq	r4, r2, ip, ror #23
   24b8c:	strdeq	r4, [r2], -r4	; <UNPREDICTABLE>
   24b90:	strdeq	r4, [r2], -ip
   24b94:	andeq	r4, r2, r4, lsl #24
   24b98:	andeq	r4, r2, ip, lsl #24
   24b9c:	andeq	r4, r2, r4, lsl ip
   24ba0:	andeq	r4, r2, r4, lsr #24
   24ba4:	andeq	r4, r2, ip, lsl ip
   24ba8:	ldr	r2, [pc, #484]	; 24d94 <__flatcc_fb_gen_c_json_parser@@Base+0x2f58>
   24bac:	ldr	ip, [r4, #4]
   24bb0:	ldr	r3, [ip, #4]
   24bb4:	add	r1, sp, #40	; 0x28
   24bb8:	str	r1, [sp, #32]
   24bbc:	ldrd	r0, [r8, #112]	; 0x70
   24bc0:	strd	r0, [sp, #24]
   24bc4:	str	r3, [sp, #16]
   24bc8:	ldr	r1, [ip]
   24bcc:	str	r1, [sp, #12]
   24bd0:	str	r3, [sp, #8]
   24bd4:	ldrd	r0, [r4, #96]	; 0x60
   24bd8:	strd	r0, [sp]
   24bdc:	ldr	r1, [pc, #568]	; 24e1c <__flatcc_fb_gen_c_json_parser@@Base+0x2fe0>
   24be0:	ldr	r0, [sl, #204]	; 0xcc
   24be4:	bl	14094 <fprintf@plt>
   24be8:	b	24778 <__flatcc_fb_gen_c_json_parser@@Base+0x293c>
   24bec:	ldr	r2, [pc, #420]	; 24d98 <__flatcc_fb_gen_c_json_parser@@Base+0x2f5c>
   24bf0:	b	24bac <__flatcc_fb_gen_c_json_parser@@Base+0x2d70>
   24bf4:	ldr	r2, [pc, #416]	; 24d9c <__flatcc_fb_gen_c_json_parser@@Base+0x2f60>
   24bf8:	b	24bac <__flatcc_fb_gen_c_json_parser@@Base+0x2d70>
   24bfc:	ldr	r2, [pc, #412]	; 24da0 <__flatcc_fb_gen_c_json_parser@@Base+0x2f64>
   24c00:	b	24bac <__flatcc_fb_gen_c_json_parser@@Base+0x2d70>
   24c04:	ldr	r2, [pc, #408]	; 24da4 <__flatcc_fb_gen_c_json_parser@@Base+0x2f68>
   24c08:	b	24bac <__flatcc_fb_gen_c_json_parser@@Base+0x2d70>
   24c0c:	ldr	r2, [pc, #404]	; 24da8 <__flatcc_fb_gen_c_json_parser@@Base+0x2f6c>
   24c10:	b	24bac <__flatcc_fb_gen_c_json_parser@@Base+0x2d70>
   24c14:	ldr	r2, [pc, #400]	; 24dac <__flatcc_fb_gen_c_json_parser@@Base+0x2f70>
   24c18:	b	24bac <__flatcc_fb_gen_c_json_parser@@Base+0x2d70>
   24c1c:	ldr	r2, [pc, #396]	; 24db0 <__flatcc_fb_gen_c_json_parser@@Base+0x2f74>
   24c20:	b	24bac <__flatcc_fb_gen_c_json_parser@@Base+0x2d70>
   24c24:	ldr	r2, [pc, #392]	; 24db4 <__flatcc_fb_gen_c_json_parser@@Base+0x2f78>
   24c28:	b	24bac <__flatcc_fb_gen_c_json_parser@@Base+0x2d70>
   24c2c:	ldr	r4, [pc, #388]	; 24db8 <__flatcc_fb_gen_c_json_parser@@Base+0x2f7c>
   24c30:	ldr	r3, [pc, #328]	; 24d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2f44>
   24c34:	ldr	r0, [r3]
   24c38:	ldr	r3, [pc, #380]	; 24dbc <__flatcc_fb_gen_c_json_parser@@Base+0x2f80>
   24c3c:	str	r3, [sp]
   24c40:	mov	r3, #96	; 0x60
   24c44:	mov	r2, r4
   24c48:	ldr	r1, [pc, #312]	; 24d88 <__flatcc_fb_gen_c_json_parser@@Base+0x2f4c>
   24c4c:	bl	14094 <fprintf@plt>
   24c50:	ldr	r3, [pc, #360]	; 24dc0 <__flatcc_fb_gen_c_json_parser@@Base+0x2f84>
   24c54:	mov	r2, #96	; 0x60
   24c58:	mov	r1, r4
   24c5c:	ldr	r0, [pc, #300]	; 24d90 <__flatcc_fb_gen_c_json_parser@@Base+0x2f54>
   24c60:	bl	14148 <__assert_fail@plt>
   24c64:	ldr	r2, [pc, #344]	; 24dc4 <__flatcc_fb_gen_c_json_parser@@Base+0x2f88>
   24c68:	b	24bac <__flatcc_fb_gen_c_json_parser@@Base+0x2d70>
   24c6c:	ldr	r2, [pc, #340]	; 24dc8 <__flatcc_fb_gen_c_json_parser@@Base+0x2f8c>
   24c70:	b	24bac <__flatcc_fb_gen_c_json_parser@@Base+0x2d70>
   24c74:	ldr	lr, [r4, #4]
   24c78:	ldr	ip, [lr, #4]
   24c7c:	ldrd	r2, [r4, #96]	; 0x60
   24c80:	add	r1, sp, #40	; 0x28
   24c84:	str	r1, [sp, #24]
   24c88:	ldrd	r0, [r4, #88]	; 0x58
   24c8c:	strd	r0, [sp, #16]
   24c90:	str	ip, [sp, #8]
   24c94:	ldr	r1, [lr]
   24c98:	str	r1, [sp, #4]
   24c9c:	str	ip, [sp]
   24ca0:	ldr	r1, [pc, #376]	; 24e20 <__flatcc_fb_gen_c_json_parser@@Base+0x2fe4>
   24ca4:	ldr	r0, [sl, #204]	; 0xcc
   24ca8:	bl	14094 <fprintf@plt>
   24cac:	b	24778 <__flatcc_fb_gen_c_json_parser@@Base+0x293c>
   24cb0:	ldr	r2, [r4, #4]
   24cb4:	ldr	r3, [r2, #4]
   24cb8:	ldrd	r0, [r4, #96]	; 0x60
   24cbc:	add	ip, sp, #40	; 0x28
   24cc0:	str	ip, [sp, #16]
   24cc4:	str	ip, [sp, #12]
   24cc8:	str	r3, [sp, #8]
   24ccc:	ldr	r2, [r2]
   24cd0:	str	r2, [sp, #4]
   24cd4:	str	r3, [sp]
   24cd8:	mov	r2, r0
   24cdc:	mov	r3, r1
   24ce0:	ldr	r1, [pc, #316]	; 24e24 <__flatcc_fb_gen_c_json_parser@@Base+0x2fe8>
   24ce4:	ldr	r0, [sl, #204]	; 0xcc
   24ce8:	bl	14094 <fprintf@plt>
   24cec:	b	24778 <__flatcc_fb_gen_c_json_parser@@Base+0x293c>
   24cf0:	ldr	r5, [pc, #304]	; 24e28 <__flatcc_fb_gen_c_json_parser@@Base+0x2fec>
   24cf4:	ldr	r4, [pc, #128]	; 24d7c <__flatcc_fb_gen_c_json_parser@@Base+0x2f40>
   24cf8:	ldr	r3, [pc, #128]	; 24d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2f44>
   24cfc:	ldr	r0, [r3]
   24d00:	ldr	r3, [pc, #292]	; 24e2c <__flatcc_fb_gen_c_json_parser@@Base+0x2ff0>
   24d04:	str	r3, [sp]
   24d08:	mov	r3, r5
   24d0c:	mov	r2, r4
   24d10:	ldr	r1, [pc, #112]	; 24d88 <__flatcc_fb_gen_c_json_parser@@Base+0x2f4c>
   24d14:	bl	14094 <fprintf@plt>
   24d18:	ldr	r3, [pc, #108]	; 24d8c <__flatcc_fb_gen_c_json_parser@@Base+0x2f50>
   24d1c:	mov	r2, r5
   24d20:	mov	r1, r4
   24d24:	ldr	r0, [pc, #100]	; 24d90 <__flatcc_fb_gen_c_json_parser@@Base+0x2f54>
   24d28:	bl	14148 <__assert_fail@plt>
   24d2c:	ldr	r3, [sl, #204]	; 0xcc
   24d30:	mov	r2, #4
   24d34:	mov	r1, #1
   24d38:	ldr	r0, [pc, #240]	; 24e30 <__flatcc_fb_gen_c_json_parser@@Base+0x2ff4>
   24d3c:	bl	1401c <fwrite@plt>
   24d40:	add	r3, sp, #260	; 0x104
   24d44:	mov	r2, r3
   24d48:	ldr	r1, [pc, #228]	; 24e34 <__flatcc_fb_gen_c_json_parser@@Base+0x2ff8>
   24d4c:	ldr	r0, [sl, #204]	; 0xcc
   24d50:	bl	14094 <fprintf@plt>
   24d54:	cmp	r9, #0
   24d58:	beq	24d64 <__flatcc_fb_gen_c_json_parser@@Base+0x2f28>
   24d5c:	mov	r0, r9
   24d60:	bl	13fd4 <free@plt>
   24d64:	mov	r0, #0
   24d68:	add	sp, sp, #484	; 0x1e4
   24d6c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   24d70:	andeq	r2, r5, r8, asr r1
   24d74:	andeq	r2, r5, r4, asr #3
   24d78:	andeq	r0, r0, r9, ror #2
   24d7c:	strdeq	r1, [r5], -r8
   24d80:	andeq	r7, r6, r8, lsr #1
   24d84:	andeq	r2, r5, ip, lsr #2
   24d88:	andeq	ip, r3, r8, lsr #27
   24d8c:	muleq	r5, r0, r9
   24d90:	andeq	r5, r4, r0, ror #3
   24d94:	strheq	sp, [r3], -ip
   24d98:	andeq	sp, r3, ip, asr #1
   24d9c:	andeq	r4, r5, r4, asr #24
   24da0:	ldrdeq	sp, [r3], -r4
   24da4:	ldrdeq	sp, [r3], -ip
   24da8:	andeq	sp, r3, r4, ror #1
   24dac:	andeq	sp, r3, ip, ror #1
   24db0:	andeq	ip, r3, ip, lsl #25
   24db4:	muleq	r3, r4, ip
   24db8:	andeq	ip, r3, ip, asr sp
   24dbc:			; <UNDEFINED> instruction: 0x0003cdb4
   24dc0:	andeq	r1, r5, r4, ror #18
   24dc4:	strheq	sp, [r3], -r4
   24dc8:	andeq	sp, r3, r4, asr #1
   24dcc:	andeq	r2, r5, ip, asr #3
   24dd0:	andeq	r2, r5, ip, lsl #4
   24dd4:	andeq	r2, r5, ip, asr #4
   24dd8:	muleq	r0, r6, r1
   24ddc:	strdeq	r0, [r5], -r0	; <UNPREDICTABLE>
   24de0:	ldrdeq	r2, [r5], -ip
   24de4:	andeq	r2, r5, ip, lsr r3
   24de8:	andeq	r2, r5, ip, lsl #5
   24dec:	muleq	r5, ip, r3
   24df0:	andeq	r2, r5, r0, ror #7
   24df4:	andeq	r2, r5, r0, lsr #8
   24df8:	andeq	r2, r5, r8, ror #8
   24dfc:	andeq	r2, r5, r4, asr #9
   24e00:	andeq	r0, r0, r3, ror #3
   24e04:	andeq	r2, r5, r0, lsr #10
   24e08:	andeq	r2, r5, r8, asr r5
   24e0c:	andeq	r2, r5, ip, lsr #11
   24e10:	andeq	r2, r5, r0, lsl #12
   24e14:	andeq	r2, r5, ip, ror #12
   24e18:	andeq	r2, r5, ip, lsr #13
   24e1c:	andeq	r2, r5, r8, lsl #14
   24e20:	andeq	r2, r5, r8, ror #14
   24e24:	andeq	r2, r5, ip, asr #15
   24e28:	andeq	r0, r0, pc, lsl r2
   24e2c:	andeq	r2, r5, r0, asr #16
   24e30:	andeq	r2, r5, r8, asr r9
   24e34:	andeq	r2, r5, r8, lsl #17

00024e38 <__flatcc_fb_gen_c_json_printer@@Base>:
   24e38:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   24e3c:	sub	sp, sp, #236	; 0xec
   24e40:	mov	r5, r0
   24e44:	ldr	r3, [r0, #208]	; 0xd0
   24e48:	ldr	r2, [r3, #164]	; 0xa4
   24e4c:	mov	r3, r2
   24e50:	ldr	r1, [pc, #1060]	; 2527c <__flatcc_fb_gen_c_json_printer@@Base+0x444>
   24e54:	ldr	r0, [r0, #204]	; 0xcc
   24e58:	bl	14094 <fprintf@plt>
   24e5c:	ldr	r3, [r5, #204]	; 0xcc
   24e60:	mov	r2, #81	; 0x51
   24e64:	mov	r1, #1
   24e68:	ldr	r0, [pc, #1040]	; 25280 <__flatcc_fb_gen_c_json_printer@@Base+0x448>
   24e6c:	bl	1401c <fwrite@plt>
   24e70:	ldr	r3, [r5, #204]	; 0xcc
   24e74:	mov	r2, #40	; 0x28
   24e78:	mov	r1, #1
   24e7c:	ldr	r0, [pc, #1024]	; 25284 <__flatcc_fb_gen_c_json_printer@@Base+0x44c>
   24e80:	bl	1401c <fwrite@plt>
   24e84:	ldr	r2, [pc, #1020]	; 25288 <__flatcc_fb_gen_c_json_printer@@Base+0x450>
   24e88:	ldr	r1, [pc, #1020]	; 2528c <__flatcc_fb_gen_c_json_printer@@Base+0x454>
   24e8c:	mov	r0, r5
   24e90:	bl	15ca8 <__flatcc_fb_gen_c_includes@@Base>
   24e94:	ldr	r3, [r5, #212]	; 0xd4
   24e98:	ldr	r3, [r3, #140]	; 0x8c
   24e9c:	cmp	r3, #0
   24ea0:	bne	24efc <__flatcc_fb_gen_c_json_printer@@Base+0xc4>
   24ea4:	ldr	r1, [r5, #204]	; 0xcc
   24ea8:	mov	r0, #10
   24eac:	bl	140f4 <fputc@plt>
   24eb0:	ldr	r3, [r5, #208]	; 0xd0
   24eb4:	ldr	r4, [r3, #52]	; 0x34
   24eb8:	mov	r2, #220	; 0xdc
   24ebc:	mov	r1, #0
   24ec0:	add	r0, sp, #12
   24ec4:	bl	140ac <memset@plt>
   24ec8:	cmp	r4, #0
   24ecc:	beq	24edc <__flatcc_fb_gen_c_json_printer@@Base+0xa4>
   24ed0:	ldrh	r3, [r4, #8]
   24ed4:	cmp	r3, #1
   24ed8:	bls	24f14 <__flatcc_fb_gen_c_json_printer@@Base+0xdc>
   24edc:	ldr	r3, [r5, #208]	; 0xd0
   24ee0:	ldr	r4, [r3, #40]	; 0x28
   24ee4:	cmp	r4, #0
   24ee8:	beq	24fd0 <__flatcc_fb_gen_c_json_printer@@Base+0x198>
   24eec:	ldr	r8, [pc, #924]	; 25290 <__flatcc_fb_gen_c_json_printer@@Base+0x458>
   24ef0:	ldr	r7, [pc, #924]	; 25294 <__flatcc_fb_gen_c_json_printer@@Base+0x45c>
   24ef4:	ldr	r6, [pc, #924]	; 25298 <__flatcc_fb_gen_c_json_printer@@Base+0x460>
   24ef8:	b	24f6c <__flatcc_fb_gen_c_json_printer@@Base+0x134>
   24efc:	ldr	r3, [r5, #204]	; 0xcc
   24f00:	mov	r2, #36	; 0x24
   24f04:	mov	r1, #1
   24f08:	ldr	r0, [pc, #908]	; 2529c <__flatcc_fb_gen_c_json_printer@@Base+0x464>
   24f0c:	bl	1401c <fwrite@plt>
   24f10:	b	24ea4 <__flatcc_fb_gen_c_json_printer@@Base+0x6c>
   24f14:	ldr	r3, [r5, #204]	; 0xcc
   24f18:	ldr	r2, [pc, #896]	; 252a0 <__flatcc_fb_gen_c_json_printer@@Base+0x468>
   24f1c:	mov	r1, #1
   24f20:	ldr	r0, [pc, #892]	; 252a4 <__flatcc_fb_gen_c_json_printer@@Base+0x46c>
   24f24:	bl	1401c <fwrite@plt>
   24f28:	ldr	r3, [r5, #208]	; 0xd0
   24f2c:	ldr	r2, [r3, #160]	; 0xa0
   24f30:	ldr	r1, [pc, #880]	; 252a8 <__flatcc_fb_gen_c_json_printer@@Base+0x470>
   24f34:	ldr	r0, [r5, #204]	; 0xcc
   24f38:	bl	14094 <fprintf@plt>
   24f3c:	b	24edc <__flatcc_fb_gen_c_json_printer@@Base+0xa4>
   24f40:	add	r2, sp, #12
   24f44:	mov	r1, r4
   24f48:	ldr	r0, [r4, #12]
   24f4c:	bl	15edc <__flatcc_fb_scoped_symbol_name@@Base>
   24f50:	add	r2, sp, #12
   24f54:	mov	r1, r8
   24f58:	ldr	r0, [r5, #204]	; 0xcc
   24f5c:	bl	14094 <fprintf@plt>
   24f60:	ldr	r4, [r4]
   24f64:	cmp	r4, #0
   24f68:	beq	24fd0 <__flatcc_fb_gen_c_json_printer@@Base+0x198>
   24f6c:	ldrh	r3, [r4, #8]
   24f70:	cmp	r3, #1
   24f74:	beq	24fac <__flatcc_fb_gen_c_json_printer@@Base+0x174>
   24f78:	bcc	24f40 <__flatcc_fb_gen_c_json_printer@@Base+0x108>
   24f7c:	cmp	r3, #4
   24f80:	bne	24f60 <__flatcc_fb_gen_c_json_printer@@Base+0x128>
   24f84:	add	r2, sp, #12
   24f88:	mov	r1, r4
   24f8c:	ldr	r0, [r4, #12]
   24f90:	bl	15edc <__flatcc_fb_scoped_symbol_name@@Base>
   24f94:	add	r3, sp, #12
   24f98:	mov	r2, r3
   24f9c:	mov	r1, r7
   24fa0:	ldr	r0, [r5, #204]	; 0xcc
   24fa4:	bl	14094 <fprintf@plt>
   24fa8:	b	24f60 <__flatcc_fb_gen_c_json_printer@@Base+0x128>
   24fac:	add	r2, sp, #12
   24fb0:	mov	r1, r4
   24fb4:	ldr	r0, [r4, #12]
   24fb8:	bl	15edc <__flatcc_fb_scoped_symbol_name@@Base>
   24fbc:	add	r2, sp, #12
   24fc0:	mov	r1, r6
   24fc4:	ldr	r0, [r5, #204]	; 0xcc
   24fc8:	bl	14094 <fprintf@plt>
   24fcc:	b	24f60 <__flatcc_fb_gen_c_json_printer@@Base+0x128>
   24fd0:	ldr	r1, [r5, #204]	; 0xcc
   24fd4:	mov	r0, #10
   24fd8:	bl	140f4 <fputc@plt>
   24fdc:	ldr	r3, [r5, #208]	; 0xd0
   24fe0:	ldr	r4, [r3, #40]	; 0x28
   24fe4:	cmp	r4, #0
   24fe8:	bne	25044 <__flatcc_fb_gen_c_json_printer@@Base+0x20c>
   24fec:	ldr	r3, [r5, #208]	; 0xd0
   24ff0:	ldr	r4, [r3, #52]	; 0x34
   24ff4:	cmp	r4, #0
   24ff8:	beq	25008 <__flatcc_fb_gen_c_json_printer@@Base+0x1d0>
   24ffc:	ldrh	r3, [r4, #8]
   25000:	cmp	r3, #1
   25004:	bls	251cc <__flatcc_fb_gen_c_json_printer@@Base+0x394>
   25008:	ldr	r3, [r5, #212]	; 0xd4
   2500c:	ldr	r3, [r3, #140]	; 0x8c
   25010:	cmp	r3, #0
   25014:	bne	25264 <__flatcc_fb_gen_c_json_printer@@Base+0x42c>
   25018:	ldr	r3, [r5, #208]	; 0xd0
   2501c:	ldr	r2, [r3, #164]	; 0xa4
   25020:	ldr	r1, [pc, #644]	; 252ac <__flatcc_fb_gen_c_json_printer@@Base+0x474>
   25024:	ldr	r0, [r5, #204]	; 0xcc
   25028:	bl	14094 <fprintf@plt>
   2502c:	mov	r0, #0
   25030:	add	sp, sp, #236	; 0xec
   25034:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   25038:	ldr	r4, [r4]
   2503c:	cmp	r4, #0
   25040:	beq	25060 <__flatcc_fb_gen_c_json_printer@@Base+0x228>
   25044:	ldrh	r3, [r4, #8]
   25048:	cmp	r3, #3
   2504c:	bne	25038 <__flatcc_fb_gen_c_json_printer@@Base+0x200>
   25050:	mov	r1, r4
   25054:	mov	r0, r5
   25058:	bl	23c94 <__flatcc_fb_gen_c_json_parser@@Base+0x1e58>
   2505c:	b	25038 <__flatcc_fb_gen_c_json_printer@@Base+0x200>
   25060:	ldr	r3, [r5, #208]	; 0xd0
   25064:	ldr	r6, [r3, #40]	; 0x28
   25068:	cmp	r6, #0
   2506c:	beq	24fec <__flatcc_fb_gen_c_json_printer@@Base+0x1b4>
   25070:	mov	fp, #220	; 0xdc
   25074:	ldr	sl, [pc, #564]	; 252b0 <__flatcc_fb_gen_c_json_printer@@Base+0x478>
   25078:	ldr	r7, [pc, #564]	; 252b4 <__flatcc_fb_gen_c_json_printer@@Base+0x47c>
   2507c:	ldr	r9, [pc, #564]	; 252b8 <__flatcc_fb_gen_c_json_printer@@Base+0x480>
   25080:	ldr	r8, [pc, #564]	; 252bc <__flatcc_fb_gen_c_json_printer@@Base+0x484>
   25084:	b	25108 <__flatcc_fb_gen_c_json_printer@@Base+0x2d0>
   25088:	ldr	r4, [r4]
   2508c:	cmp	r4, #0
   25090:	beq	250c8 <__flatcc_fb_gen_c_json_printer@@Base+0x290>
   25094:	ldrh	r3, [r4, #24]
   25098:	cmp	r3, #0
   2509c:	beq	25088 <__flatcc_fb_gen_c_json_printer@@Base+0x250>
   250a0:	ldr	r1, [r4, #4]
   250a4:	ldr	r3, [r1, #4]
   250a8:	ldr	r2, [r4, #48]	; 0x30
   250ac:	str	r3, [sp, #4]
   250b0:	ldr	r1, [r1]
   250b4:	str	r1, [sp]
   250b8:	mov	r1, r7
   250bc:	ldr	r0, [r5, #204]	; 0xcc
   250c0:	bl	14094 <fprintf@plt>
   250c4:	b	25088 <__flatcc_fb_gen_c_json_printer@@Base+0x250>
   250c8:	ldr	r3, [r5, #204]	; 0xcc
   250cc:	mov	r2, #78	; 0x4e
   250d0:	mov	r1, #1
   250d4:	mov	r0, r9
   250d8:	bl	1401c <fwrite@plt>
   250dc:	ldr	r3, [r5, #204]	; 0xcc
   250e0:	mov	r2, #9
   250e4:	mov	r1, #1
   250e8:	mov	r0, r8
   250ec:	bl	1401c <fwrite@plt>
   250f0:	mov	r1, r6
   250f4:	mov	r0, r5
   250f8:	bl	23714 <__flatcc_fb_gen_c_json_parser@@Base+0x18d8>
   250fc:	ldr	r6, [r6]
   25100:	cmp	r6, #0
   25104:	beq	25154 <__flatcc_fb_gen_c_json_printer@@Base+0x31c>
   25108:	ldrh	r3, [r6, #8]
   2510c:	cmp	r3, #4
   25110:	bne	250fc <__flatcc_fb_gen_c_json_printer@@Base+0x2c4>
   25114:	mov	r2, fp
   25118:	mov	r1, #0
   2511c:	add	r0, sp, #12
   25120:	bl	140ac <memset@plt>
   25124:	add	r2, sp, #12
   25128:	mov	r1, r6
   2512c:	ldr	r0, [r6, #12]
   25130:	bl	15edc <__flatcc_fb_scoped_symbol_name@@Base>
   25134:	add	r2, sp, #12
   25138:	mov	r1, sl
   2513c:	ldr	r0, [r5, #204]	; 0xcc
   25140:	bl	14094 <fprintf@plt>
   25144:	ldr	r4, [r6, #20]
   25148:	cmp	r4, #0
   2514c:	bne	25094 <__flatcc_fb_gen_c_json_printer@@Base+0x25c>
   25150:	b	250c8 <__flatcc_fb_gen_c_json_printer@@Base+0x290>
   25154:	ldr	r3, [r5, #208]	; 0xd0
   25158:	ldr	r4, [r3, #40]	; 0x28
   2515c:	cmp	r4, #0
   25160:	bne	25174 <__flatcc_fb_gen_c_json_printer@@Base+0x33c>
   25164:	b	24fec <__flatcc_fb_gen_c_json_printer@@Base+0x1b4>
   25168:	ldr	r4, [r4]
   2516c:	cmp	r4, #0
   25170:	beq	25190 <__flatcc_fb_gen_c_json_printer@@Base+0x358>
   25174:	ldrh	r3, [r4, #8]
   25178:	cmp	r3, #1
   2517c:	bne	25168 <__flatcc_fb_gen_c_json_printer@@Base+0x330>
   25180:	mov	r1, r4
   25184:	mov	r0, r5
   25188:	bl	238ec <__flatcc_fb_gen_c_json_parser@@Base+0x1ab0>
   2518c:	b	25168 <__flatcc_fb_gen_c_json_printer@@Base+0x330>
   25190:	ldr	r3, [r5, #208]	; 0xd0
   25194:	ldr	r4, [r3, #40]	; 0x28
   25198:	cmp	r4, #0
   2519c:	bne	251b0 <__flatcc_fb_gen_c_json_printer@@Base+0x378>
   251a0:	b	24fec <__flatcc_fb_gen_c_json_printer@@Base+0x1b4>
   251a4:	ldr	r4, [r4]
   251a8:	cmp	r4, #0
   251ac:	beq	24fec <__flatcc_fb_gen_c_json_printer@@Base+0x1b4>
   251b0:	ldrh	r3, [r4, #8]
   251b4:	cmp	r3, #0
   251b8:	bne	251a4 <__flatcc_fb_gen_c_json_printer@@Base+0x36c>
   251bc:	mov	r1, r4
   251c0:	mov	r0, r5
   251c4:	bl	242bc <__flatcc_fb_gen_c_json_parser@@Base+0x2480>
   251c8:	b	251a4 <__flatcc_fb_gen_c_json_printer@@Base+0x36c>
   251cc:	mov	r2, #220	; 0xdc
   251d0:	mov	r1, #0
   251d4:	add	r0, sp, #12
   251d8:	bl	140ac <memset@plt>
   251dc:	add	r2, sp, #12
   251e0:	mov	r1, r4
   251e4:	ldr	r0, [r4, #12]
   251e8:	bl	15edc <__flatcc_fb_scoped_symbol_name@@Base>
   251ec:	ldr	r3, [r5, #208]	; 0xd0
   251f0:	ldr	r2, [r3, #160]	; 0xa0
   251f4:	ldr	r1, [pc, #196]	; 252c0 <__flatcc_fb_gen_c_json_printer@@Base+0x488>
   251f8:	ldr	r0, [r5, #204]	; 0xcc
   251fc:	bl	14094 <fprintf@plt>
   25200:	add	r2, sp, #12
   25204:	ldr	r1, [pc, #184]	; 252c4 <__flatcc_fb_gen_c_json_printer@@Base+0x48c>
   25208:	ldr	r0, [r5, #204]	; 0xcc
   2520c:	bl	14094 <fprintf@plt>
   25210:	ldr	r2, [r5, #208]	; 0xd0
   25214:	ldrh	r3, [r2, #16]
   25218:	cmp	r3, #2
   2521c:	beq	2524c <__flatcc_fb_gen_c_json_printer@@Base+0x414>
   25220:	ldr	r3, [r5, #204]	; 0xcc
   25224:	mov	r2, #3
   25228:	mov	r1, #1
   2522c:	ldr	r0, [pc, #148]	; 252c8 <__flatcc_fb_gen_c_json_printer@@Base+0x490>
   25230:	bl	1401c <fwrite@plt>
   25234:	ldr	r3, [r5, #204]	; 0xcc
   25238:	mov	r2, #3
   2523c:	mov	r1, #1
   25240:	ldr	r0, [pc, #132]	; 252cc <__flatcc_fb_gen_c_json_printer@@Base+0x494>
   25244:	bl	1401c <fwrite@plt>
   25248:	b	25008 <__flatcc_fb_gen_c_json_printer@@Base+0x1d0>
   2524c:	ldr	r3, [r2, #8]
   25250:	ldr	r2, [r2, #12]
   25254:	ldr	r1, [pc, #116]	; 252d0 <__flatcc_fb_gen_c_json_printer@@Base+0x498>
   25258:	ldr	r0, [r5, #204]	; 0xcc
   2525c:	bl	14094 <fprintf@plt>
   25260:	b	25234 <__flatcc_fb_gen_c_json_printer@@Base+0x3fc>
   25264:	ldr	r3, [r5, #204]	; 0xcc
   25268:	mov	r2, #36	; 0x24
   2526c:	mov	r1, #1
   25270:	ldr	r0, [pc, #92]	; 252d4 <__flatcc_fb_gen_c_json_printer@@Base+0x49c>
   25274:	bl	1401c <fwrite@plt>
   25278:	b	25018 <__flatcc_fb_gen_c_json_printer@@Base+0x1e0>
   2527c:	andeq	r2, r5, r0, ror #18
   25280:	andeq	lr, r3, r0, lsr #1
   25284:	muleq	r5, r8, r9
   25288:	andeq	r2, r5, r4, asr #19
   2528c:	andeq	ip, r3, r8, lsl #19
   25290:	ldrdeq	r2, [r5], -r8
   25294:	andeq	r2, r5, r0, lsl ip
   25298:	andeq	r2, r5, r4, asr #26
   2529c:			; <UNDEFINED> instruction: 0x0003e1b4
   252a0:	andeq	r0, r0, r2, ror #3
   252a4:	ldrdeq	r2, [r5], -r4
   252a8:			; <UNDEFINED> instruction: 0x00052bb8
   252ac:	andeq	r2, r5, ip, asr #31
   252b0:	muleq	r5, r4, sp
   252b4:	andeq	r2, r5, r8, lsl #28
   252b8:	andeq	r2, r5, ip, asr lr
   252bc:	andeq	r1, r5, r8, ror #23
   252c0:	andeq	r2, r5, ip, lsr #29
   252c4:	andeq	r2, r5, r4, lsl #30
   252c8:	andeq	r2, r5, r8, asr #31
   252cc:	muleq	r4, r8, sp
   252d0:			; <UNDEFINED> instruction: 0x00052fbc
   252d4:	andeq	r4, r4, r8, lsl r0
   252d8:	push	{r4, lr}
   252dc:	mov	r4, r0
   252e0:	ldr	r0, [r0, #16]
   252e4:	cmp	r0, #0
   252e8:	beq	252f0 <__flatcc_fb_gen_c_json_printer@@Base+0x4b8>
   252ec:	bl	13fd4 <free@plt>
   252f0:	ldr	r0, [r4, #20]
   252f4:	cmp	r0, #0
   252f8:	beq	25300 <__flatcc_fb_gen_c_json_printer@@Base+0x4c8>
   252fc:	bl	13fd4 <free@plt>
   25300:	ldr	r0, [r4, #24]
   25304:	cmp	r0, #0
   25308:	beq	25310 <__flatcc_fb_gen_c_json_printer@@Base+0x4d8>
   2530c:	bl	13fd4 <free@plt>
   25310:	mov	r2, #44	; 0x2c
   25314:	mov	r1, #0
   25318:	mov	r0, r4
   2531c:	bl	140ac <memset@plt>
   25320:	pop	{r4, pc}
   25324:	push	{r4, lr}
   25328:	add	r3, r1, #4
   2532c:	mov	r2, r0
   25330:	ldr	r1, [pc, #8]	; 25340 <__flatcc_fb_gen_c_json_printer@@Base+0x508>
   25334:	mov	r0, r3
   25338:	bl	28510 <fb_symbol_table_visit@@Base>
   2533c:	pop	{r4, pc}
   25340:	andeq	r5, r2, r4, ror #6
   25344:	push	{r4, lr}
   25348:	add	r3, r1, #4
   2534c:	mov	r2, r0
   25350:	ldr	r1, [pc, #8]	; 25360 <__flatcc_fb_gen_c_json_printer@@Base+0x528>
   25354:	mov	r0, r3
   25358:	bl	28510 <fb_symbol_table_visit@@Base>
   2535c:	pop	{r4, pc}
   25360:	muleq	r2, ip, r4
   25364:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   25368:	mov	r7, r0
   2536c:	mov	r9, r1
   25370:	ldrh	r3, [r1, #8]
   25374:	cmp	r3, #4
   25378:	movhi	r3, #0
   2537c:	bls	25434 <__flatcc_fb_gen_c_json_printer@@Base+0x5fc>
   25380:	cmp	r3, #0
   25384:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   25388:	ldr	sl, [r7, #36]	; 0x24
   2538c:	ldr	r2, [r7]
   25390:	cmp	r2, #0
   25394:	moveq	r6, sl
   25398:	beq	253e4 <__flatcc_fb_gen_c_json_printer@@Base+0x5ac>
   2539c:	ldr	r3, [r3, #12]
   253a0:	ldr	r5, [r3]
   253a4:	cmp	r5, #0
   253a8:	beq	25454 <__flatcc_fb_gen_c_json_printer@@Base+0x61c>
   253ac:	mov	r6, sl
   253b0:	mov	r8, #46	; 0x2e
   253b4:	ldr	r3, [r5, #4]
   253b8:	ldr	r4, [r3, #4]
   253bc:	mov	r2, r4
   253c0:	ldr	r1, [r3]
   253c4:	mov	r0, r6
   253c8:	bl	13fe0 <memcpy@plt>
   253cc:	add	r4, r6, r4
   253d0:	add	r6, r4, #1
   253d4:	strb	r8, [r4]
   253d8:	ldr	r5, [r5]
   253dc:	cmp	r5, #0
   253e0:	bne	253b4 <__flatcc_fb_gen_c_json_printer@@Base+0x57c>
   253e4:	ldr	r3, [r9, #4]
   253e8:	ldr	r4, [r3, #4]
   253ec:	mov	r2, r4
   253f0:	ldr	r1, [r3]
   253f4:	mov	r0, r6
   253f8:	bl	13fe0 <memcpy@plt>
   253fc:	add	r3, r6, r4
   25400:	mov	r2, #0
   25404:	strb	r2, [r6, r4]
   25408:	add	r3, r3, #1
   2540c:	str	r3, [r7, #36]	; 0x24
   25410:	ldrh	r3, [r9, #8]
   25414:	cmp	r3, #4
   25418:	ldrls	pc, [pc, r3, lsl #2]
   2541c:	b	25498 <__flatcc_fb_gen_c_json_printer@@Base+0x660>
   25420:	andeq	r5, r2, ip, asr r4
   25424:	andeq	r5, r2, ip, asr r4
   25428:	muleq	r2, r8, r4
   2542c:	andeq	r5, r2, ip, ror r4
   25430:	andeq	r5, r2, ip, ror r4
   25434:	ldr	r0, [r0, #40]	; 0x28
   25438:	ldr	r1, [r1, #16]
   2543c:	add	r0, r0, #172	; 0xac
   25440:	bl	27e80 <ptr_set_find_item@@Base>
   25444:	cmp	r0, #0
   25448:	movne	r3, r9
   2544c:	bne	25380 <__flatcc_fb_gen_c_json_printer@@Base+0x548>
   25450:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   25454:	mov	r6, sl
   25458:	b	253e4 <__flatcc_fb_gen_c_json_printer@@Base+0x5ac>
   2545c:	ldr	r3, [r7, #28]
   25460:	str	r9, [r3]
   25464:	ldr	r3, [r7, #28]
   25468:	str	sl, [r3, #4]
   2546c:	ldr	r3, [r7, #28]
   25470:	add	r3, r3, #8
   25474:	str	r3, [r7, #28]
   25478:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   2547c:	ldr	r3, [r7, #32]
   25480:	str	r9, [r3]
   25484:	ldr	r3, [r7, #32]
   25488:	str	sl, [r3, #4]
   2548c:	ldr	r3, [r7, #32]
   25490:	add	r3, r3, #8
   25494:	str	r3, [r7, #32]
   25498:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   2549c:	push	{r4, r5, r6, lr}
   254a0:	mov	r4, r0
   254a4:	mov	r5, r1
   254a8:	ldrh	r3, [r1, #8]
   254ac:	cmp	r3, #4
   254b0:	movhi	r3, #0
   254b4:	bls	25540 <__flatcc_fb_gen_c_json_printer@@Base+0x708>
   254b8:	cmp	r3, #0
   254bc:	popeq	{r4, r5, r6, pc}
   254c0:	ldr	r2, [r4]
   254c4:	cmp	r2, #0
   254c8:	moveq	r1, #0
   254cc:	beq	25500 <__flatcc_fb_gen_c_json_printer@@Base+0x6c8>
   254d0:	ldr	r3, [r3, #12]
   254d4:	ldr	r3, [r3]
   254d8:	cmp	r3, #0
   254dc:	beq	25560 <__flatcc_fb_gen_c_json_printer@@Base+0x728>
   254e0:	mov	r1, #0
   254e4:	ldr	r2, [r3, #4]
   254e8:	ldr	r2, [r2, #4]
   254ec:	add	r2, r2, #1
   254f0:	add	r1, r1, r2
   254f4:	ldr	r3, [r3]
   254f8:	cmp	r3, #0
   254fc:	bne	254e4 <__flatcc_fb_gen_c_json_printer@@Base+0x6ac>
   25500:	ldr	r3, [r5, #4]
   25504:	ldr	r3, [r3, #4]
   25508:	ldr	r2, [r4, #12]
   2550c:	add	r3, r3, r2
   25510:	add	r3, r3, #1
   25514:	add	r1, r3, r1
   25518:	str	r1, [r4, #12]
   2551c:	ldrh	r3, [r5, #8]
   25520:	cmp	r3, #4
   25524:	ldrls	pc, [pc, r3, lsl #2]
   25528:	b	25584 <__flatcc_fb_gen_c_json_printer@@Base+0x74c>
   2552c:	andeq	r5, r2, r8, ror #10
   25530:	andeq	r5, r2, r8, ror #10
   25534:	andeq	r5, r2, r4, lsl #11
   25538:	andeq	r5, r2, r8, ror r5
   2553c:	andeq	r5, r2, r8, ror r5
   25540:	ldr	r0, [r0, #40]	; 0x28
   25544:	ldr	r1, [r1, #16]
   25548:	add	r0, r0, #172	; 0xac
   2554c:	bl	27e80 <ptr_set_find_item@@Base>
   25550:	cmp	r0, #0
   25554:	movne	r3, r5
   25558:	bne	254b8 <__flatcc_fb_gen_c_json_printer@@Base+0x680>
   2555c:	pop	{r4, r5, r6, pc}
   25560:	mov	r1, #0
   25564:	b	25500 <__flatcc_fb_gen_c_json_printer@@Base+0x6c8>
   25568:	ldr	r3, [r4, #4]
   2556c:	add	r3, r3, #1
   25570:	str	r3, [r4, #4]
   25574:	pop	{r4, r5, r6, pc}
   25578:	ldr	r3, [r4, #8]
   2557c:	add	r3, r3, #1
   25580:	str	r3, [r4, #8]
   25584:	pop	{r4, r5, r6, pc}
   25588:	push	{r4, r5, r6, lr}
   2558c:	mov	r5, r0
   25590:	mov	r4, r1
   25594:	ldr	r3, [pc, #40]	; 255c4 <__flatcc_fb_gen_c_json_printer@@Base+0x78c>
   25598:	mov	r2, #8
   2559c:	bl	14118 <qsort@plt>
   255a0:	cmp	r4, #0
   255a4:	pople	{r4, r5, r6, pc}
   255a8:	mov	r3, #0
   255ac:	ldr	r2, [r5, r3, lsl #3]
   255b0:	str	r3, [r2, #124]	; 0x7c
   255b4:	add	r3, r3, #1
   255b8:	cmp	r4, r3
   255bc:	bne	255ac <__flatcc_fb_gen_c_json_printer@@Base+0x774>
   255c0:	pop	{r4, r5, r6, pc}
   255c4:	andeq	r5, r2, r8, asr #11
   255c8:	push	{r4, lr}
   255cc:	ldr	r1, [r1, #4]
   255d0:	ldr	r0, [r0, #4]
   255d4:	bl	13fbc <strcmp@plt>
   255d8:	pop	{r4, pc}
   255dc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   255e0:	sub	sp, sp, #36	; 0x24
   255e4:	cmp	r0, #0
   255e8:	beq	2564c <__flatcc_fb_gen_c_json_printer@@Base+0x814>
   255ec:	ldr	r2, [r0, #4]
   255f0:	ldr	r3, [pc, #2100]	; 25e2c <__flatcc_fb_gen_c_json_printer@@Base+0xff4>
   255f4:	cmp	r2, r3
   255f8:	bne	2564c <__flatcc_fb_gen_c_json_printer@@Base+0x814>
   255fc:	ldr	r3, [r0]
   25600:	adds	r2, r0, r3
   25604:	beq	2564c <__flatcc_fb_gen_c_json_printer@@Base+0x814>
   25608:	ldr	r3, [r0, r3]
   2560c:	sub	r3, r2, r3
   25610:	ldrh	r1, [r3]
   25614:	cmp	r1, #5
   25618:	bls	25660 <__flatcc_fb_gen_c_json_printer@@Base+0x828>
   2561c:	ldrh	r3, [r3, #4]
   25620:	cmp	r3, #0
   25624:	beq	25660 <__flatcc_fb_gen_c_json_printer@@Base+0x828>
   25628:	add	r1, r2, r3
   2562c:	ldr	r3, [r2, r3]
   25630:	add	r3, r3, #4
   25634:	add	r3, r1, r3
   25638:	str	r3, [sp, #28]
   2563c:	str	r3, [sp, #24]
   25640:	mov	r3, #0
   25644:	str	r3, [sp, #20]
   25648:	b	25d68 <__flatcc_fb_gen_c_json_printer@@Base+0xf30>
   2564c:	ldr	r3, [pc, #2012]	; 25e30 <__flatcc_fb_gen_c_json_printer@@Base+0xff8>
   25650:	mov	r2, #237	; 0xed
   25654:	ldr	r1, [pc, #2008]	; 25e34 <__flatcc_fb_gen_c_json_printer@@Base+0xffc>
   25658:	ldr	r0, [pc, #2008]	; 25e38 <__flatcc_fb_gen_c_json_printer@@Base+0x1000>
   2565c:	bl	14148 <__assert_fail@plt>
   25660:	ldr	r3, [pc, #1992]	; 25e30 <__flatcc_fb_gen_c_json_printer@@Base+0xff8>
   25664:	mov	r2, #237	; 0xed
   25668:	ldr	r1, [pc, #1988]	; 25e34 <__flatcc_fb_gen_c_json_printer@@Base+0xffc>
   2566c:	ldr	r0, [pc, #1992]	; 25e3c <__flatcc_fb_gen_c_json_printer@@Base+0x1004>
   25670:	bl	14148 <__assert_fail@plt>
   25674:	ldr	r3, [pc, #1988]	; 25e40 <__flatcc_fb_gen_c_json_printer@@Base+0x1008>
   25678:	mov	r2, #224	; 0xe0
   2567c:	ldr	r1, [pc, #1968]	; 25e34 <__flatcc_fb_gen_c_json_printer@@Base+0xffc>
   25680:	ldr	r0, [pc, #1968]	; 25e38 <__flatcc_fb_gen_c_json_printer@@Base+0x1000>
   25684:	bl	14148 <__assert_fail@plt>
   25688:	ldr	r3, [pc, #1968]	; 25e40 <__flatcc_fb_gen_c_json_printer@@Base+0x1008>
   2568c:	mov	r2, #224	; 0xe0
   25690:	ldr	r1, [pc, #1948]	; 25e34 <__flatcc_fb_gen_c_json_printer@@Base+0xffc>
   25694:	ldr	r0, [pc, #1952]	; 25e3c <__flatcc_fb_gen_c_json_printer@@Base+0x1004>
   25698:	bl	14148 <__assert_fail@plt>
   2569c:	lsl	r3, r4, #2
   256a0:	add	r2, fp, r3
   256a4:	ldr	ip, [fp, #-4]
   256a8:	cmp	r4, ip
   256ac:	bcs	25774 <__flatcc_fb_gen_c_json_printer@@Base+0x93c>
   256b0:	ldr	r0, [fp, r4, lsl #2]
   256b4:	adds	r1, r2, r0
   256b8:	beq	25788 <__flatcc_fb_gen_c_json_printer@@Base+0x950>
   256bc:	ldr	r2, [r2, r0]
   256c0:	sub	r2, r1, r2
   256c4:	ldrh	r0, [r2]
   256c8:	cmp	r0, #5
   256cc:	bls	2579c <__flatcc_fb_gen_c_json_printer@@Base+0x964>
   256d0:	ldrh	r2, [r2, #4]
   256d4:	cmp	r2, #0
   256d8:	beq	2579c <__flatcc_fb_gen_c_json_printer@@Base+0x964>
   256dc:	add	lr, r1, r2
   256e0:	ldr	r0, [r1, r2]
   256e4:	add	r0, r0, #4
   256e8:	add	r0, lr, r0
   256ec:	add	r5, r4, #1
   256f0:	add	r3, r3, #4
   256f4:	add	r1, fp, r3
   256f8:	cmp	r5, ip
   256fc:	bcs	257b0 <__flatcc_fb_gen_c_json_printer@@Base+0x978>
   25700:	ldr	r3, [fp, r3]
   25704:	adds	r2, r1, r3
   25708:	beq	257c4 <__flatcc_fb_gen_c_json_printer@@Base+0x98c>
   2570c:	ldr	r3, [r1, r3]
   25710:	sub	r3, r2, r3
   25714:	ldrh	r1, [r3]
   25718:	cmp	r1, #5
   2571c:	bls	257d8 <__flatcc_fb_gen_c_json_printer@@Base+0x9a0>
   25720:	ldrh	r3, [r3, #4]
   25724:	cmp	r3, #0
   25728:	beq	257d8 <__flatcc_fb_gen_c_json_printer@@Base+0x9a0>
   2572c:	add	r1, r2, r3
   25730:	ldr	r3, [r2, r3]
   25734:	add	r3, r3, #4
   25738:	adds	r1, r1, r3
   2573c:	moveq	r7, #0
   25740:	ldrne	r7, [r1, #-4]
   25744:	cmp	r0, #0
   25748:	beq	257ec <__flatcc_fb_gen_c_json_printer@@Base+0x9b4>
   2574c:	ldr	r6, [r0, #-4]
   25750:	cmp	r7, r6
   25754:	movcc	r2, r7
   25758:	movcs	r2, r6
   2575c:	bl	14130 <strncmp@plt>
   25760:	cmp	r0, #0
   25764:	bne	257f4 <__flatcc_fb_gen_c_json_printer@@Base+0x9bc>
   25768:	cmp	r7, r6
   2576c:	movls	r5, r4
   25770:	b	258c8 <__flatcc_fb_gen_c_json_printer@@Base+0xa90>
   25774:	ldr	r3, [pc, #1736]	; 25e44 <__flatcc_fb_gen_c_json_printer@@Base+0x100c>
   25778:	mov	r2, #192	; 0xc0
   2577c:	ldr	r1, [pc, #1712]	; 25e34 <__flatcc_fb_gen_c_json_printer@@Base+0xffc>
   25780:	ldr	r0, [pc, #1728]	; 25e48 <__flatcc_fb_gen_c_json_printer@@Base+0x1010>
   25784:	bl	14148 <__assert_fail@plt>
   25788:	ldr	r3, [pc, #1724]	; 25e4c <__flatcc_fb_gen_c_json_printer@@Base+0x1014>
   2578c:	mov	r2, #195	; 0xc3
   25790:	ldr	r1, [pc, #1692]	; 25e34 <__flatcc_fb_gen_c_json_printer@@Base+0xffc>
   25794:	ldr	r0, [pc, #1692]	; 25e38 <__flatcc_fb_gen_c_json_printer@@Base+0x1000>
   25798:	bl	14148 <__assert_fail@plt>
   2579c:	ldr	r3, [pc, #1704]	; 25e4c <__flatcc_fb_gen_c_json_printer@@Base+0x1014>
   257a0:	mov	r2, #195	; 0xc3
   257a4:	ldr	r1, [pc, #1672]	; 25e34 <__flatcc_fb_gen_c_json_printer@@Base+0xffc>
   257a8:	ldr	r0, [pc, #1676]	; 25e3c <__flatcc_fb_gen_c_json_printer@@Base+0x1004>
   257ac:	bl	14148 <__assert_fail@plt>
   257b0:	ldr	r3, [pc, #1676]	; 25e44 <__flatcc_fb_gen_c_json_printer@@Base+0x100c>
   257b4:	mov	r2, #192	; 0xc0
   257b8:	ldr	r1, [pc, #1652]	; 25e34 <__flatcc_fb_gen_c_json_printer@@Base+0xffc>
   257bc:	ldr	r0, [pc, #1668]	; 25e48 <__flatcc_fb_gen_c_json_printer@@Base+0x1010>
   257c0:	bl	14148 <__assert_fail@plt>
   257c4:	ldr	r3, [pc, #1664]	; 25e4c <__flatcc_fb_gen_c_json_printer@@Base+0x1014>
   257c8:	mov	r2, #195	; 0xc3
   257cc:	ldr	r1, [pc, #1632]	; 25e34 <__flatcc_fb_gen_c_json_printer@@Base+0xffc>
   257d0:	ldr	r0, [pc, #1632]	; 25e38 <__flatcc_fb_gen_c_json_printer@@Base+0x1000>
   257d4:	bl	14148 <__assert_fail@plt>
   257d8:	ldr	r3, [pc, #1644]	; 25e4c <__flatcc_fb_gen_c_json_printer@@Base+0x1014>
   257dc:	mov	r2, #195	; 0xc3
   257e0:	ldr	r1, [pc, #1612]	; 25e34 <__flatcc_fb_gen_c_json_printer@@Base+0xffc>
   257e4:	ldr	r0, [pc, #1616]	; 25e3c <__flatcc_fb_gen_c_json_printer@@Base+0x1004>
   257e8:	bl	14148 <__assert_fail@plt>
   257ec:	mov	r6, #0
   257f0:	b	25768 <__flatcc_fb_gen_c_json_printer@@Base+0x930>
   257f4:	cmp	r0, #0
   257f8:	movge	r5, r4
   257fc:	b	258c8 <__flatcc_fb_gen_c_json_printer@@Base+0xa90>
   25800:	ldr	r3, [pc, #1596]	; 25e44 <__flatcc_fb_gen_c_json_printer@@Base+0x100c>
   25804:	mov	r2, #192	; 0xc0
   25808:	ldr	r1, [pc, #1572]	; 25e34 <__flatcc_fb_gen_c_json_printer@@Base+0xffc>
   2580c:	ldr	r0, [pc, #1588]	; 25e48 <__flatcc_fb_gen_c_json_printer@@Base+0x1010>
   25810:	bl	14148 <__assert_fail@plt>
   25814:	ldr	r3, [pc, #1584]	; 25e4c <__flatcc_fb_gen_c_json_printer@@Base+0x1014>
   25818:	mov	r2, #195	; 0xc3
   2581c:	ldr	r1, [pc, #1552]	; 25e34 <__flatcc_fb_gen_c_json_printer@@Base+0xffc>
   25820:	ldr	r0, [pc, #1552]	; 25e38 <__flatcc_fb_gen_c_json_printer@@Base+0x1000>
   25824:	bl	14148 <__assert_fail@plt>
   25828:	ldr	r3, [pc, #1564]	; 25e4c <__flatcc_fb_gen_c_json_printer@@Base+0x1014>
   2582c:	mov	r2, #195	; 0xc3
   25830:	ldr	r1, [pc, #1532]	; 25e34 <__flatcc_fb_gen_c_json_printer@@Base+0xffc>
   25834:	ldr	r0, [pc, #1536]	; 25e3c <__flatcc_fb_gen_c_json_printer@@Base+0x1004>
   25838:	bl	14148 <__assert_fail@plt>
   2583c:	ldr	r3, [pc, #1536]	; 25e44 <__flatcc_fb_gen_c_json_printer@@Base+0x100c>
   25840:	mov	r2, #192	; 0xc0
   25844:	ldr	r1, [pc, #1512]	; 25e34 <__flatcc_fb_gen_c_json_printer@@Base+0xffc>
   25848:	ldr	r0, [pc, #1528]	; 25e48 <__flatcc_fb_gen_c_json_printer@@Base+0x1010>
   2584c:	bl	14148 <__assert_fail@plt>
   25850:	ldr	r3, [pc, #1524]	; 25e4c <__flatcc_fb_gen_c_json_printer@@Base+0x1014>
   25854:	mov	r2, #195	; 0xc3
   25858:	ldr	r1, [pc, #1492]	; 25e34 <__flatcc_fb_gen_c_json_printer@@Base+0xffc>
   2585c:	ldr	r0, [pc, #1492]	; 25e38 <__flatcc_fb_gen_c_json_printer@@Base+0x1000>
   25860:	bl	14148 <__assert_fail@plt>
   25864:	ldr	r3, [pc, #1504]	; 25e4c <__flatcc_fb_gen_c_json_printer@@Base+0x1014>
   25868:	mov	r2, #195	; 0xc3
   2586c:	ldr	r1, [pc, #1472]	; 25e34 <__flatcc_fb_gen_c_json_printer@@Base+0xffc>
   25870:	ldr	r0, [pc, #1476]	; 25e3c <__flatcc_fb_gen_c_json_printer@@Base+0x1004>
   25874:	bl	14148 <__assert_fail@plt>
   25878:	mov	r7, #0
   2587c:	b	25994 <__flatcc_fb_gen_c_json_printer@@Base+0xb5c>
   25880:	cmp	r0, #0
   25884:	bge	2599c <__flatcc_fb_gen_c_json_printer@@Base+0xb64>
   25888:	sub	r3, sl, r5
   2588c:	lsl	r3, r3, #2
   25890:	sub	r4, r4, r3
   25894:	str	r4, [fp, r9]
   25898:	add	r6, r3, r6
   2589c:	ldr	r3, [sp, #4]
   258a0:	str	r6, [fp, r3]
   258a4:	lsl	r4, r5, #1
   258a8:	mov	sl, r5
   258ac:	ldr	r3, [sp]
   258b0:	cmp	r3, r4
   258b4:	bcc	2599c <__flatcc_fb_gen_c_json_printer@@Base+0xb64>
   258b8:	ldr	r3, [sp]
   258bc:	cmp	r3, r4
   258c0:	movls	r5, r4
   258c4:	bhi	2569c <__flatcc_fb_gen_c_json_printer@@Base+0x864>
   258c8:	lsl	r9, sl, #2
   258cc:	add	r3, fp, r9
   258d0:	ldr	r1, [fp, #-4]
   258d4:	cmp	sl, r1
   258d8:	bcs	25800 <__flatcc_fb_gen_c_json_printer@@Base+0x9c8>
   258dc:	ldr	r6, [fp, sl, lsl #2]
   258e0:	adds	r2, r3, r6
   258e4:	beq	25814 <__flatcc_fb_gen_c_json_printer@@Base+0x9dc>
   258e8:	ldr	r3, [r3, r6]
   258ec:	sub	r3, r2, r3
   258f0:	ldrh	r0, [r3]
   258f4:	cmp	r0, #5
   258f8:	bls	25828 <__flatcc_fb_gen_c_json_printer@@Base+0x9f0>
   258fc:	ldrh	r3, [r3, #4]
   25900:	cmp	r3, #0
   25904:	beq	25828 <__flatcc_fb_gen_c_json_printer@@Base+0x9f0>
   25908:	add	ip, r2, r3
   2590c:	ldr	r0, [r2, r3]
   25910:	add	r0, r0, #4
   25914:	add	r0, ip, r0
   25918:	lsl	r3, r5, #2
   2591c:	str	r3, [sp, #4]
   25920:	add	r3, fp, r3
   25924:	cmp	r5, r1
   25928:	bcs	2583c <__flatcc_fb_gen_c_json_printer@@Base+0xa04>
   2592c:	ldr	r4, [fp, r5, lsl #2]
   25930:	adds	r2, r3, r4
   25934:	beq	25850 <__flatcc_fb_gen_c_json_printer@@Base+0xa18>
   25938:	ldr	r3, [r3, r4]
   2593c:	sub	r3, r2, r3
   25940:	ldrh	r1, [r3]
   25944:	cmp	r1, #5
   25948:	bls	25864 <__flatcc_fb_gen_c_json_printer@@Base+0xa2c>
   2594c:	ldrh	r3, [r3, #4]
   25950:	cmp	r3, #0
   25954:	beq	25864 <__flatcc_fb_gen_c_json_printer@@Base+0xa2c>
   25958:	add	r1, r2, r3
   2595c:	ldr	r3, [r2, r3]
   25960:	add	r3, r3, #4
   25964:	adds	r1, r1, r3
   25968:	moveq	r8, #0
   2596c:	ldrne	r8, [r1, #-4]
   25970:	cmp	r0, #0
   25974:	beq	25878 <__flatcc_fb_gen_c_json_printer@@Base+0xa40>
   25978:	ldr	r7, [r0, #-4]
   2597c:	cmp	r8, r7
   25980:	movcc	r2, r8
   25984:	movcs	r2, r7
   25988:	bl	14130 <strncmp@plt>
   2598c:	cmp	r0, #0
   25990:	bne	25880 <__flatcc_fb_gen_c_json_printer@@Base+0xa48>
   25994:	cmp	r8, r7
   25998:	bhi	25888 <__flatcc_fb_gen_c_json_printer@@Base+0xa50>
   2599c:	ldr	r2, [sp, #8]
   259a0:	sub	r3, r2, #1
   259a4:	ldr	r1, [sp, #12]
   259a8:	sub	r1, r1, #2
   259ac:	str	r1, [sp, #12]
   259b0:	cmp	r2, #0
   259b4:	beq	259d8 <__flatcc_fb_gen_c_json_printer@@Base+0xba0>
   259b8:	str	r3, [sp, #8]
   259bc:	ldr	r2, [sp]
   259c0:	ldr	r3, [sp, #12]
   259c4:	cmp	r2, r3
   259c8:	bcc	2599c <__flatcc_fb_gen_c_json_printer@@Base+0xb64>
   259cc:	ldr	sl, [sp, #8]
   259d0:	mov	r4, r3
   259d4:	b	258b8 <__flatcc_fb_gen_c_json_printer@@Base+0xa80>
   259d8:	ldr	r3, [sp]
   259dc:	cmp	r3, #0
   259e0:	beq	25d5c <__flatcc_fb_gen_c_json_printer@@Base+0xf24>
   259e4:	ldr	r3, [sp, #16]
   259e8:	add	r2, fp, r3, lsl #2
   259ec:	str	r2, [sp, #16]
   259f0:	rsb	r3, r3, r3, lsl #30
   259f4:	lsl	r3, r3, #2
   259f8:	add	r3, r3, #4
   259fc:	str	r3, [sp, #12]
   25a00:	b	25d1c <__flatcc_fb_gen_c_json_printer@@Base+0xee4>
   25a04:	lsl	r3, r4, #2
   25a08:	add	r0, fp, r3
   25a0c:	ldr	ip, [fp, #-4]
   25a10:	cmp	r4, ip
   25a14:	bcs	25adc <__flatcc_fb_gen_c_json_printer@@Base+0xca4>
   25a18:	ldr	r2, [fp, r4, lsl #2]
   25a1c:	adds	r1, r0, r2
   25a20:	beq	25af0 <__flatcc_fb_gen_c_json_printer@@Base+0xcb8>
   25a24:	ldr	r2, [r0, r2]
   25a28:	sub	r2, r1, r2
   25a2c:	ldrh	r0, [r2]
   25a30:	cmp	r0, #5
   25a34:	bls	25b04 <__flatcc_fb_gen_c_json_printer@@Base+0xccc>
   25a38:	ldrh	r2, [r2, #4]
   25a3c:	cmp	r2, #0
   25a40:	beq	25b04 <__flatcc_fb_gen_c_json_printer@@Base+0xccc>
   25a44:	add	lr, r1, r2
   25a48:	ldr	r0, [r1, r2]
   25a4c:	add	r0, r0, #4
   25a50:	add	r0, lr, r0
   25a54:	add	r5, r4, #1
   25a58:	add	r3, r3, #4
   25a5c:	add	r1, fp, r3
   25a60:	cmp	r5, ip
   25a64:	bcs	25b18 <__flatcc_fb_gen_c_json_printer@@Base+0xce0>
   25a68:	ldr	r3, [fp, r3]
   25a6c:	adds	r2, r1, r3
   25a70:	beq	25b2c <__flatcc_fb_gen_c_json_printer@@Base+0xcf4>
   25a74:	ldr	r3, [r1, r3]
   25a78:	sub	r3, r2, r3
   25a7c:	ldrh	r1, [r3]
   25a80:	cmp	r1, #5
   25a84:	bls	25b40 <__flatcc_fb_gen_c_json_printer@@Base+0xd08>
   25a88:	ldrh	r3, [r3, #4]
   25a8c:	cmp	r3, #0
   25a90:	beq	25b40 <__flatcc_fb_gen_c_json_printer@@Base+0xd08>
   25a94:	add	r1, r2, r3
   25a98:	ldr	r3, [r2, r3]
   25a9c:	add	r3, r3, #4
   25aa0:	adds	r1, r1, r3
   25aa4:	beq	25e00 <__flatcc_fb_gen_c_json_printer@@Base+0xfc8>
   25aa8:	ldr	r6, [r1, #-4]
   25aac:	cmp	r0, #0
   25ab0:	beq	25b54 <__flatcc_fb_gen_c_json_printer@@Base+0xd1c>
   25ab4:	ldr	r7, [r0, #-4]
   25ab8:	cmp	r6, r7
   25abc:	movcc	r2, r6
   25ac0:	movcs	r2, r7
   25ac4:	bl	14130 <strncmp@plt>
   25ac8:	cmp	r0, #0
   25acc:	bne	25b5c <__flatcc_fb_gen_c_json_printer@@Base+0xd24>
   25ad0:	cmp	r7, r6
   25ad4:	movcs	r5, r4
   25ad8:	b	25c30 <__flatcc_fb_gen_c_json_printer@@Base+0xdf8>
   25adc:	ldr	r3, [pc, #864]	; 25e44 <__flatcc_fb_gen_c_json_printer@@Base+0x100c>
   25ae0:	mov	r2, #192	; 0xc0
   25ae4:	ldr	r1, [pc, #840]	; 25e34 <__flatcc_fb_gen_c_json_printer@@Base+0xffc>
   25ae8:	ldr	r0, [pc, #856]	; 25e48 <__flatcc_fb_gen_c_json_printer@@Base+0x1010>
   25aec:	bl	14148 <__assert_fail@plt>
   25af0:	ldr	r3, [pc, #852]	; 25e4c <__flatcc_fb_gen_c_json_printer@@Base+0x1014>
   25af4:	mov	r2, #195	; 0xc3
   25af8:	ldr	r1, [pc, #820]	; 25e34 <__flatcc_fb_gen_c_json_printer@@Base+0xffc>
   25afc:	ldr	r0, [pc, #820]	; 25e38 <__flatcc_fb_gen_c_json_printer@@Base+0x1000>
   25b00:	bl	14148 <__assert_fail@plt>
   25b04:	ldr	r3, [pc, #832]	; 25e4c <__flatcc_fb_gen_c_json_printer@@Base+0x1014>
   25b08:	mov	r2, #195	; 0xc3
   25b0c:	ldr	r1, [pc, #800]	; 25e34 <__flatcc_fb_gen_c_json_printer@@Base+0xffc>
   25b10:	ldr	r0, [pc, #804]	; 25e3c <__flatcc_fb_gen_c_json_printer@@Base+0x1004>
   25b14:	bl	14148 <__assert_fail@plt>
   25b18:	ldr	r3, [pc, #804]	; 25e44 <__flatcc_fb_gen_c_json_printer@@Base+0x100c>
   25b1c:	mov	r2, #192	; 0xc0
   25b20:	ldr	r1, [pc, #780]	; 25e34 <__flatcc_fb_gen_c_json_printer@@Base+0xffc>
   25b24:	ldr	r0, [pc, #796]	; 25e48 <__flatcc_fb_gen_c_json_printer@@Base+0x1010>
   25b28:	bl	14148 <__assert_fail@plt>
   25b2c:	ldr	r3, [pc, #792]	; 25e4c <__flatcc_fb_gen_c_json_printer@@Base+0x1014>
   25b30:	mov	r2, #195	; 0xc3
   25b34:	ldr	r1, [pc, #760]	; 25e34 <__flatcc_fb_gen_c_json_printer@@Base+0xffc>
   25b38:	ldr	r0, [pc, #760]	; 25e38 <__flatcc_fb_gen_c_json_printer@@Base+0x1000>
   25b3c:	bl	14148 <__assert_fail@plt>
   25b40:	ldr	r3, [pc, #772]	; 25e4c <__flatcc_fb_gen_c_json_printer@@Base+0x1014>
   25b44:	mov	r2, #195	; 0xc3
   25b48:	ldr	r1, [pc, #740]	; 25e34 <__flatcc_fb_gen_c_json_printer@@Base+0xffc>
   25b4c:	ldr	r0, [pc, #744]	; 25e3c <__flatcc_fb_gen_c_json_printer@@Base+0x1004>
   25b50:	bl	14148 <__assert_fail@plt>
   25b54:	ldr	r7, [sp, #8]
   25b58:	b	25ad0 <__flatcc_fb_gen_c_json_printer@@Base+0xc98>
   25b5c:	cmp	r0, #0
   25b60:	movge	r5, r4
   25b64:	b	25c30 <__flatcc_fb_gen_c_json_printer@@Base+0xdf8>
   25b68:	ldr	r3, [pc, #724]	; 25e44 <__flatcc_fb_gen_c_json_printer@@Base+0x100c>
   25b6c:	mov	r2, #192	; 0xc0
   25b70:	ldr	r1, [pc, #700]	; 25e34 <__flatcc_fb_gen_c_json_printer@@Base+0xffc>
   25b74:	ldr	r0, [pc, #716]	; 25e48 <__flatcc_fb_gen_c_json_printer@@Base+0x1010>
   25b78:	bl	14148 <__assert_fail@plt>
   25b7c:	ldr	r3, [pc, #712]	; 25e4c <__flatcc_fb_gen_c_json_printer@@Base+0x1014>
   25b80:	mov	r2, #195	; 0xc3
   25b84:	ldr	r1, [pc, #680]	; 25e34 <__flatcc_fb_gen_c_json_printer@@Base+0xffc>
   25b88:	ldr	r0, [pc, #680]	; 25e38 <__flatcc_fb_gen_c_json_printer@@Base+0x1000>
   25b8c:	bl	14148 <__assert_fail@plt>
   25b90:	ldr	r3, [pc, #692]	; 25e4c <__flatcc_fb_gen_c_json_printer@@Base+0x1014>
   25b94:	mov	r2, #195	; 0xc3
   25b98:	ldr	r1, [pc, #660]	; 25e34 <__flatcc_fb_gen_c_json_printer@@Base+0xffc>
   25b9c:	ldr	r0, [pc, #664]	; 25e3c <__flatcc_fb_gen_c_json_printer@@Base+0x1004>
   25ba0:	bl	14148 <__assert_fail@plt>
   25ba4:	ldr	r3, [pc, #664]	; 25e44 <__flatcc_fb_gen_c_json_printer@@Base+0x100c>
   25ba8:	mov	r2, #192	; 0xc0
   25bac:	ldr	r1, [pc, #640]	; 25e34 <__flatcc_fb_gen_c_json_printer@@Base+0xffc>
   25bb0:	ldr	r0, [pc, #656]	; 25e48 <__flatcc_fb_gen_c_json_printer@@Base+0x1010>
   25bb4:	bl	14148 <__assert_fail@plt>
   25bb8:	ldr	r3, [pc, #652]	; 25e4c <__flatcc_fb_gen_c_json_printer@@Base+0x1014>
   25bbc:	mov	r2, #195	; 0xc3
   25bc0:	ldr	r1, [pc, #620]	; 25e34 <__flatcc_fb_gen_c_json_printer@@Base+0xffc>
   25bc4:	ldr	r0, [pc, #620]	; 25e38 <__flatcc_fb_gen_c_json_printer@@Base+0x1000>
   25bc8:	bl	14148 <__assert_fail@plt>
   25bcc:	ldr	r3, [pc, #632]	; 25e4c <__flatcc_fb_gen_c_json_printer@@Base+0x1014>
   25bd0:	mov	r2, #195	; 0xc3
   25bd4:	ldr	r1, [pc, #600]	; 25e34 <__flatcc_fb_gen_c_json_printer@@Base+0xffc>
   25bd8:	ldr	r0, [pc, #604]	; 25e3c <__flatcc_fb_gen_c_json_printer@@Base+0x1004>
   25bdc:	bl	14148 <__assert_fail@plt>
   25be0:	ldr	r7, [sp, #8]
   25be4:	b	25cfc <__flatcc_fb_gen_c_json_printer@@Base+0xec4>
   25be8:	cmp	r0, #0
   25bec:	bge	25d04 <__flatcc_fb_gen_c_json_printer@@Base+0xecc>
   25bf0:	sub	r3, sl, r5
   25bf4:	lsl	r3, r3, #2
   25bf8:	sub	r4, r4, r3
   25bfc:	str	r4, [fp, r9]
   25c00:	add	r6, r3, r6
   25c04:	ldr	r3, [sp, #4]
   25c08:	str	r6, [fp, r3]
   25c0c:	lsl	r4, r5, #1
   25c10:	mov	sl, r5
   25c14:	ldr	r3, [sp]
   25c18:	cmp	r3, r4
   25c1c:	bcc	25d04 <__flatcc_fb_gen_c_json_printer@@Base+0xecc>
   25c20:	ldr	r3, [sp]
   25c24:	cmp	r3, r4
   25c28:	movls	r5, r4
   25c2c:	bhi	25a04 <__flatcc_fb_gen_c_json_printer@@Base+0xbcc>
   25c30:	lsl	r9, sl, #2
   25c34:	add	r3, fp, r9
   25c38:	ldr	r1, [fp, #-4]
   25c3c:	cmp	sl, r1
   25c40:	bcs	25b68 <__flatcc_fb_gen_c_json_printer@@Base+0xd30>
   25c44:	ldr	r6, [fp, sl, lsl #2]
   25c48:	adds	r2, r3, r6
   25c4c:	beq	25b7c <__flatcc_fb_gen_c_json_printer@@Base+0xd44>
   25c50:	ldr	r3, [r3, r6]
   25c54:	sub	r3, r2, r3
   25c58:	ldrh	r0, [r3]
   25c5c:	cmp	r0, #5
   25c60:	bls	25b90 <__flatcc_fb_gen_c_json_printer@@Base+0xd58>
   25c64:	ldrh	r3, [r3, #4]
   25c68:	cmp	r3, #0
   25c6c:	beq	25b90 <__flatcc_fb_gen_c_json_printer@@Base+0xd58>
   25c70:	add	ip, r2, r3
   25c74:	ldr	r0, [r2, r3]
   25c78:	add	r0, r0, #4
   25c7c:	add	r0, ip, r0
   25c80:	lsl	r3, r5, #2
   25c84:	str	r3, [sp, #4]
   25c88:	add	r3, fp, r3
   25c8c:	cmp	r5, r1
   25c90:	bcs	25ba4 <__flatcc_fb_gen_c_json_printer@@Base+0xd6c>
   25c94:	ldr	r4, [fp, r5, lsl #2]
   25c98:	adds	r2, r3, r4
   25c9c:	beq	25bb8 <__flatcc_fb_gen_c_json_printer@@Base+0xd80>
   25ca0:	ldr	r3, [r3, r4]
   25ca4:	sub	r3, r2, r3
   25ca8:	ldrh	r1, [r3]
   25cac:	cmp	r1, #5
   25cb0:	bls	25bcc <__flatcc_fb_gen_c_json_printer@@Base+0xd94>
   25cb4:	ldrh	r3, [r3, #4]
   25cb8:	cmp	r3, #0
   25cbc:	beq	25bcc <__flatcc_fb_gen_c_json_printer@@Base+0xd94>
   25cc0:	add	r1, r2, r3
   25cc4:	ldr	r3, [r2, r3]
   25cc8:	add	r3, r3, #4
   25ccc:	adds	r1, r1, r3
   25cd0:	beq	25e14 <__flatcc_fb_gen_c_json_printer@@Base+0xfdc>
   25cd4:	ldr	r8, [r1, #-4]
   25cd8:	cmp	r0, #0
   25cdc:	beq	25be0 <__flatcc_fb_gen_c_json_printer@@Base+0xda8>
   25ce0:	ldr	r7, [r0, #-4]
   25ce4:	cmp	r8, r7
   25ce8:	movcc	r2, r8
   25cec:	movcs	r2, r7
   25cf0:	bl	14130 <strncmp@plt>
   25cf4:	cmp	r0, #0
   25cf8:	bne	25be8 <__flatcc_fb_gen_c_json_printer@@Base+0xdb0>
   25cfc:	cmp	r8, r7
   25d00:	bhi	25bf0 <__flatcc_fb_gen_c_json_printer@@Base+0xdb8>
   25d04:	ldr	r3, [sp, #12]
   25d08:	add	r3, r3, #4
   25d0c:	str	r3, [sp, #12]
   25d10:	ldr	r3, [sp]
   25d14:	cmp	r3, #0
   25d18:	beq	25d5c <__flatcc_fb_gen_c_json_printer@@Base+0xf24>
   25d1c:	ldr	r3, [fp]
   25d20:	ldr	r0, [sp, #12]
   25d24:	add	r3, r0, r3
   25d28:	ldr	r1, [sp, #16]
   25d2c:	ldr	r2, [r1, #-4]
   25d30:	sub	r2, r2, r0
   25d34:	str	r2, [fp]
   25d38:	mov	r2, r1
   25d3c:	str	r3, [r2, #-4]!
   25d40:	str	r2, [sp, #16]
   25d44:	ldr	r3, [sp]
   25d48:	sub	r3, r3, #1
   25d4c:	str	r3, [sp]
   25d50:	ldr	r4, [sp, #8]
   25d54:	mov	sl, r4
   25d58:	b	25c20 <__flatcc_fb_gen_c_json_printer@@Base+0xde8>
   25d5c:	ldr	r3, [sp, #20]
   25d60:	add	r3, r3, #1
   25d64:	str	r3, [sp, #20]
   25d68:	ldr	r3, [sp, #28]
   25d6c:	cmp	r3, #0
   25d70:	beq	25e24 <__flatcc_fb_gen_c_json_printer@@Base+0xfec>
   25d74:	ldr	r3, [r3, #-4]
   25d78:	ldr	r2, [sp, #20]
   25d7c:	cmp	r2, r3
   25d80:	bcs	25e24 <__flatcc_fb_gen_c_json_printer@@Base+0xfec>
   25d84:	ldr	r2, [sp, #24]
   25d88:	mov	r3, r2
   25d8c:	add	r2, r2, #4
   25d90:	str	r2, [sp, #24]
   25d94:	ldr	r1, [r3]
   25d98:	adds	r2, r3, r1
   25d9c:	beq	25674 <__flatcc_fb_gen_c_json_printer@@Base+0x83c>
   25da0:	ldr	r3, [r3, r1]
   25da4:	sub	r3, r2, r3
   25da8:	ldrh	r1, [r3]
   25dac:	cmp	r1, #7
   25db0:	bls	25688 <__flatcc_fb_gen_c_json_printer@@Base+0x850>
   25db4:	ldrh	r3, [r3, #6]
   25db8:	cmp	r3, #0
   25dbc:	beq	25688 <__flatcc_fb_gen_c_json_printer@@Base+0x850>
   25dc0:	add	r1, r2, r3
   25dc4:	ldr	r3, [r2, r3]
   25dc8:	add	r3, r3, #4
   25dcc:	adds	fp, r1, r3
   25dd0:	beq	25d5c <__flatcc_fb_gen_c_json_printer@@Base+0xf24>
   25dd4:	ldr	r3, [fp, #-4]
   25dd8:	str	r3, [sp, #16]
   25ddc:	cmp	r3, #0
   25de0:	beq	25d5c <__flatcc_fb_gen_c_json_printer@@Base+0xf24>
   25de4:	sub	r2, r3, #1
   25de8:	str	r2, [sp]
   25dec:	lsr	r3, r3, #1
   25df0:	str	r3, [sp, #8]
   25df4:	lsl	r3, r3, #1
   25df8:	str	r3, [sp, #12]
   25dfc:	b	259bc <__flatcc_fb_gen_c_json_printer@@Base+0xb84>
   25e00:	cmp	r0, #0
   25e04:	moveq	r5, r4
   25e08:	beq	25c30 <__flatcc_fb_gen_c_json_printer@@Base+0xdf8>
   25e0c:	ldr	r6, [sp, #8]
   25e10:	b	25ab4 <__flatcc_fb_gen_c_json_printer@@Base+0xc7c>
   25e14:	cmp	r0, #0
   25e18:	beq	25d04 <__flatcc_fb_gen_c_json_printer@@Base+0xecc>
   25e1c:	ldr	r8, [sp, #8]
   25e20:	b	25ce0 <__flatcc_fb_gen_c_json_printer@@Base+0xea8>
   25e24:	add	sp, sp, #36	; 0x24
   25e28:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   25e2c:	movtpl	r4, #9794	; 0x2642
   25e30:	andeq	r2, r5, ip, ror #31
   25e34:	andeq	r3, r5, r4, lsl #2
   25e38:	andeq	r3, r5, r4, ror #2
   25e3c:	andeq	r3, r5, ip, lsl #3
   25e40:	andeq	r3, r5, r8
   25e44:	andeq	r3, r5, r4, lsr #32
   25e48:			; <UNDEFINED> instruction: 0x000531b0
   25e4c:	andeq	r3, r5, ip, lsr r0
   25e50:	sub	sp, sp, #8
   25e54:	push	{r4, r5, r6, r7, r8, lr}
   25e58:	mov	r4, r0
   25e5c:	add	r1, sp, #20
   25e60:	stmib	r1, {r2, r3}
   25e64:	ldr	r2, [sp, #24]
   25e68:	ldrh	r3, [sp, #32]
   25e6c:	sub	r3, r3, #2
   25e70:	cmp	r3, #13
   25e74:	ldrls	pc, [pc, r3, lsl #2]
   25e78:	b	25f5c <__flatcc_fb_gen_c_json_printer@@Base+0x1124>
   25e7c:			; <UNDEFINED> instruction: 0x00025eb4
   25e80:	andeq	r5, r2, ip, asr pc
   25e84:	andeq	r5, r2, ip, asr pc
   25e88:	andeq	r5, r2, ip, asr pc
   25e8c:	andeq	r5, r2, ip, asr pc
   25e90:	andeq	r6, r2, r0, ror r2
   25e94:	andeq	r6, r2, ip, lsr #5
   25e98:			; <UNDEFINED> instruction: 0x000261bc
   25e9c:	andeq	r5, r2, ip, asr pc
   25ea0:	andeq	r5, r2, ip, asr pc
   25ea4:	andeq	r5, r2, ip, asr pc
   25ea8:	andeq	r5, r2, ip, asr pc
   25eac:	andeq	r5, r2, ip, lsl pc
   25eb0:	andeq	r5, r2, r4, asr #29
   25eb4:	mov	r5, #0
   25eb8:	mov	r3, #13
   25ebc:	mvn	r7, #0
   25ec0:	b	261c8 <__flatcc_fb_gen_c_json_printer@@Base+0x1390>
   25ec4:	ldr	r7, [r2, #124]	; 0x7c
   25ec8:	ldrh	r3, [r2, #8]
   25ecc:	cmp	r3, #1
   25ed0:	bls	26258 <__flatcc_fb_gen_c_json_printer@@Base+0x1420>
   25ed4:	cmp	r3, #3
   25ed8:	bne	25f70 <__flatcc_fb_gen_c_json_printer@@Base+0x1138>
   25edc:	ldr	r3, [r2, #40]	; 0x28
   25ee0:	sub	r3, r3, #1
   25ee4:	cmp	r3, #10
   25ee8:	ldrls	pc, [pc, r3, lsl #2]
   25eec:	b	26120 <__flatcc_fb_gen_c_json_printer@@Base+0x12e8>
   25ef0:	andeq	r5, r2, r0, lsl #31
   25ef4:	andeq	r5, r2, r4, lsr #31
   25ef8:	andeq	r5, r2, r8, asr #31
   25efc:	andeq	r5, r2, ip, ror #31
   25f00:	andeq	r6, r2, r0, lsl r0
   25f04:	andeq	r6, r2, r4, lsr r0
   25f08:	andeq	r6, r2, r8, asr r0
   25f0c:	andeq	r6, r2, ip, ror r0
   25f10:	andeq	r6, r2, r0, lsr #1
   25f14:	andeq	r6, r2, r4, asr #1
   25f18:	andeq	r6, r2, r8, ror #1
   25f1c:	ldr	r7, [r2, #124]	; 0x7c
   25f20:	ldrh	r3, [r2, #8]
   25f24:	cmp	r3, #4
   25f28:	ldrls	pc, [pc, r3, lsl #2]
   25f2c:	b	25f44 <__flatcc_fb_gen_c_json_printer@@Base+0x110c>
   25f30:	andeq	r5, r2, r8, ror pc
   25f34:	andeq	r5, r2, r8, ror pc
   25f38:	andeq	r5, r2, r4, asr #30
   25f3c:	andeq	r5, r2, r4, asr pc
   25f40:	andeq	r6, r2, r4, ror #4
   25f44:	mov	r5, #0
   25f48:	mov	r3, r5
   25f4c:	mvn	r7, #0
   25f50:	b	261c8 <__flatcc_fb_gen_c_json_printer@@Base+0x1390>
   25f54:	ldr	r2, [r2, #40]	; 0x28
   25f58:	b	262b0 <__flatcc_fb_gen_c_json_printer@@Base+0x1478>
   25f5c:	mov	r3, #0
   25f60:	mvn	r7, #0
   25f64:	mov	r5, #0
   25f68:	mov	r6, r5
   25f6c:	b	261cc <__flatcc_fb_gen_c_json_printer@@Base+0x1394>
   25f70:	mov	r3, #0
   25f74:	b	25f64 <__flatcc_fb_gen_c_json_printer@@Base+0x112c>
   25f78:	mov	r3, #15
   25f7c:	b	25f64 <__flatcc_fb_gen_c_json_printer@@Base+0x112c>
   25f80:	mov	r3, #14
   25f84:	b	25f98 <__flatcc_fb_gen_c_json_printer@@Base+0x1160>
   25f88:	mov	r3, #14
   25f8c:	mvn	r7, #0
   25f90:	b	25f98 <__flatcc_fb_gen_c_json_printer@@Base+0x1160>
   25f94:	mov	r3, #0
   25f98:	mov	r5, #0
   25f9c:	mov	r6, #10
   25fa0:	b	261cc <__flatcc_fb_gen_c_json_printer@@Base+0x1394>
   25fa4:	mov	r3, #14
   25fa8:	b	25fbc <__flatcc_fb_gen_c_json_printer@@Base+0x1184>
   25fac:	mov	r3, #14
   25fb0:	mvn	r7, #0
   25fb4:	b	25fbc <__flatcc_fb_gen_c_json_printer@@Base+0x1184>
   25fb8:	mov	r3, #0
   25fbc:	mov	r5, #0
   25fc0:	mov	r6, #8
   25fc4:	b	261cc <__flatcc_fb_gen_c_json_printer@@Base+0x1394>
   25fc8:	mov	r3, #14
   25fcc:	b	25fe0 <__flatcc_fb_gen_c_json_printer@@Base+0x11a8>
   25fd0:	mov	r3, #14
   25fd4:	mvn	r7, #0
   25fd8:	b	25fe0 <__flatcc_fb_gen_c_json_printer@@Base+0x11a8>
   25fdc:	mov	r3, #0
   25fe0:	mov	r5, #0
   25fe4:	mov	r6, #6
   25fe8:	b	261cc <__flatcc_fb_gen_c_json_printer@@Base+0x1394>
   25fec:	mov	r3, #14
   25ff0:	b	26004 <__flatcc_fb_gen_c_json_printer@@Base+0x11cc>
   25ff4:	mov	r3, #14
   25ff8:	mvn	r7, #0
   25ffc:	b	26004 <__flatcc_fb_gen_c_json_printer@@Base+0x11cc>
   26000:	mov	r3, #0
   26004:	mov	r5, #0
   26008:	mov	r6, #4
   2600c:	b	261cc <__flatcc_fb_gen_c_json_printer@@Base+0x1394>
   26010:	mov	r3, #14
   26014:	b	26028 <__flatcc_fb_gen_c_json_printer@@Base+0x11f0>
   26018:	mov	r3, #14
   2601c:	mvn	r7, #0
   26020:	b	26028 <__flatcc_fb_gen_c_json_printer@@Base+0x11f0>
   26024:	mov	r3, #0
   26028:	mov	r5, #0
   2602c:	mov	r6, #2
   26030:	b	261cc <__flatcc_fb_gen_c_json_printer@@Base+0x1394>
   26034:	mov	r3, #14
   26038:	b	2604c <__flatcc_fb_gen_c_json_printer@@Base+0x1214>
   2603c:	mov	r3, #14
   26040:	mvn	r7, #0
   26044:	b	2604c <__flatcc_fb_gen_c_json_printer@@Base+0x1214>
   26048:	mov	r3, #0
   2604c:	mov	r5, #0
   26050:	mov	r6, #9
   26054:	b	261cc <__flatcc_fb_gen_c_json_printer@@Base+0x1394>
   26058:	mov	r3, #14
   2605c:	b	26070 <__flatcc_fb_gen_c_json_printer@@Base+0x1238>
   26060:	mov	r3, #14
   26064:	mvn	r7, #0
   26068:	b	26070 <__flatcc_fb_gen_c_json_printer@@Base+0x1238>
   2606c:	mov	r3, #0
   26070:	mov	r5, #0
   26074:	mov	r6, #7
   26078:	b	261cc <__flatcc_fb_gen_c_json_printer@@Base+0x1394>
   2607c:	mov	r3, #14
   26080:	b	26094 <__flatcc_fb_gen_c_json_printer@@Base+0x125c>
   26084:	mov	r3, #14
   26088:	mvn	r7, #0
   2608c:	b	26094 <__flatcc_fb_gen_c_json_printer@@Base+0x125c>
   26090:	mov	r3, #0
   26094:	mov	r5, #0
   26098:	mov	r6, #5
   2609c:	b	261cc <__flatcc_fb_gen_c_json_printer@@Base+0x1394>
   260a0:	mov	r3, #14
   260a4:	b	260b8 <__flatcc_fb_gen_c_json_printer@@Base+0x1280>
   260a8:	mov	r3, #14
   260ac:	mvn	r7, #0
   260b0:	b	260b8 <__flatcc_fb_gen_c_json_printer@@Base+0x1280>
   260b4:	mov	r3, #0
   260b8:	mov	r5, #0
   260bc:	mov	r6, #3
   260c0:	b	261cc <__flatcc_fb_gen_c_json_printer@@Base+0x1394>
   260c4:	mov	r3, #14
   260c8:	b	260dc <__flatcc_fb_gen_c_json_printer@@Base+0x12a4>
   260cc:	mov	r3, #14
   260d0:	mvn	r7, #0
   260d4:	b	260dc <__flatcc_fb_gen_c_json_printer@@Base+0x12a4>
   260d8:	mov	r3, #0
   260dc:	mov	r5, #0
   260e0:	mov	r6, #12
   260e4:	b	261cc <__flatcc_fb_gen_c_json_printer@@Base+0x1394>
   260e8:	mov	r3, #14
   260ec:	mov	r5, #0
   260f0:	mov	r6, #11
   260f4:	b	261cc <__flatcc_fb_gen_c_json_printer@@Base+0x1394>
   260f8:	mov	r3, #14
   260fc:	mvn	r7, #0
   26100:	b	260ec <__flatcc_fb_gen_c_json_printer@@Base+0x12b4>
   26104:	mov	r3, #0
   26108:	b	260ec <__flatcc_fb_gen_c_json_printer@@Base+0x12b4>
   2610c:	mov	r6, #0
   26110:	mov	r5, r6
   26114:	mov	r3, #14
   26118:	mvn	r7, #0
   2611c:	b	261d4 <__flatcc_fb_gen_c_json_printer@@Base+0x139c>
   26120:	mov	r5, #0
   26124:	mov	r6, #14
   26128:	b	261e8 <__flatcc_fb_gen_c_json_printer@@Base+0x13b0>
   2612c:	mov	r6, r3
   26130:	b	261e8 <__flatcc_fb_gen_c_json_printer@@Base+0x13b0>
   26134:	mov	r5, #0
   26138:	mov	r6, r5
   2613c:	b	261e8 <__flatcc_fb_gen_c_json_printer@@Base+0x13b0>
   26140:	mov	r3, #1
   26144:	mov	r2, r3
   26148:	mov	r1, #0
   2614c:	mov	r0, r4
   26150:	bl	37534 <flatcc_builder_table_add@@Base>
   26154:	cmp	r0, #0
   26158:	strbne	r6, [r0]
   2615c:	bne	2622c <__flatcc_fb_gen_c_json_printer@@Base+0x13f4>
   26160:	mov	r0, #0
   26164:	b	261a8 <__flatcc_fb_gen_c_json_printer@@Base+0x1370>
   26168:	mov	r3, #1
   2616c:	mov	r2, r3
   26170:	mov	r1, r3
   26174:	mov	r0, r4
   26178:	bl	37534 <flatcc_builder_table_add@@Base>
   2617c:	cmp	r0, #0
   26180:	strbne	r5, [r0]
   26184:	bne	26234 <__flatcc_fb_gen_c_json_printer@@Base+0x13fc>
   26188:	mov	r0, #0
   2618c:	b	261a8 <__flatcc_fb_gen_c_json_printer@@Base+0x1370>
   26190:	ldr	r3, [pc, #340]	; 262ec <__flatcc_fb_gen_c_json_printer@@Base+0x14b4>
   26194:	mov	r2, #23
   26198:	ldr	r1, [pc, #336]	; 262f0 <__flatcc_fb_gen_c_json_printer@@Base+0x14b8>
   2619c:	ldr	r0, [pc, #336]	; 262f4 <__flatcc_fb_gen_c_json_printer@@Base+0x14bc>
   261a0:	bl	14148 <__assert_fail@plt>
   261a4:	mov	r0, #0
   261a8:	pop	{r4, r5, r6, r7, r8, lr}
   261ac:	add	sp, sp, #8
   261b0:	bx	lr
   261b4:	mov	r0, #0
   261b8:	b	261a8 <__flatcc_fb_gen_c_json_printer@@Base+0x1370>
   261bc:	mov	r5, #13
   261c0:	mov	r3, #14
   261c4:	mvn	r7, #0
   261c8:	mov	r6, #0
   261cc:	cmp	r3, #0
   261d0:	beq	261e8 <__flatcc_fb_gen_c_json_printer@@Base+0x13b0>
   261d4:	cmp	r3, #14
   261d8:	cmpeq	r5, #0
   261dc:	moveq	r5, r6
   261e0:	moveq	r6, r3
   261e4:	bne	2612c <__flatcc_fb_gen_c_json_printer@@Base+0x12f4>
   261e8:	mov	r1, #3
   261ec:	mov	r0, r4
   261f0:	bl	35b38 <flatcc_builder_start_table@@Base>
   261f4:	cmp	r0, #0
   261f8:	bne	261a4 <__flatcc_fb_gen_c_json_printer@@Base+0x136c>
   261fc:	cmn	r7, #1
   26200:	beq	26224 <__flatcc_fb_gen_c_json_printer@@Base+0x13ec>
   26204:	mov	r3, #4
   26208:	mov	r2, r3
   2620c:	mov	r1, #2
   26210:	mov	r0, r4
   26214:	bl	37534 <flatcc_builder_table_add@@Base>
   26218:	cmp	r0, #0
   2621c:	strne	r7, [r0]
   26220:	beq	261b4 <__flatcc_fb_gen_c_json_printer@@Base+0x137c>
   26224:	cmp	r6, #0
   26228:	bne	26140 <__flatcc_fb_gen_c_json_printer@@Base+0x1308>
   2622c:	cmp	r5, #0
   26230:	bne	26168 <__flatcc_fb_gen_c_json_printer@@Base+0x1330>
   26234:	mov	r2, #0
   26238:	ldr	r1, [pc, #184]	; 262f8 <__flatcc_fb_gen_c_json_printer@@Base+0x14c0>
   2623c:	mov	r0, r4
   26240:	bl	364dc <flatcc_builder_check_required@@Base>
   26244:	cmp	r0, #0
   26248:	beq	26190 <__flatcc_fb_gen_c_json_printer@@Base+0x1358>
   2624c:	mov	r0, r4
   26250:	bl	36588 <flatcc_builder_end_table@@Base>
   26254:	b	261a8 <__flatcc_fb_gen_c_json_printer@@Base+0x1370>
   26258:	mov	r5, #15
   2625c:	mov	r3, #14
   26260:	b	261c8 <__flatcc_fb_gen_c_json_printer@@Base+0x1390>
   26264:	mov	r5, #0
   26268:	mov	r3, #16
   2626c:	b	261c8 <__flatcc_fb_gen_c_json_printer@@Base+0x1390>
   26270:	sub	r2, r2, #1
   26274:	cmp	r2, #10
   26278:	ldrls	pc, [pc, r2, lsl #2]
   2627c:	b	2610c <__flatcc_fb_gen_c_json_printer@@Base+0x12d4>
   26280:	andeq	r5, r2, r8, lsl #31
   26284:	andeq	r5, r2, ip, lsr #31
   26288:	ldrdeq	r5, [r2], -r0
   2628c:	strdeq	r5, [r2], -r4
   26290:	andeq	r6, r2, r8, lsl r0
   26294:	andeq	r6, r2, ip, lsr r0
   26298:	andeq	r6, r2, r0, rrx
   2629c:	andeq	r6, r2, r4, lsl #1
   262a0:	andeq	r6, r2, r8, lsr #1
   262a4:	andeq	r6, r2, ip, asr #1
   262a8:	strdeq	r6, [r2], -r8
   262ac:	mvn	r7, #0
   262b0:	sub	r2, r2, #1
   262b4:	cmp	r2, #10
   262b8:	ldrls	pc, [pc, r2, lsl #2]
   262bc:	b	26134 <__flatcc_fb_gen_c_json_printer@@Base+0x12fc>
   262c0:	muleq	r2, r4, pc	; <UNPREDICTABLE>
   262c4:			; <UNDEFINED> instruction: 0x00025fb8
   262c8:	ldrdeq	r5, [r2], -ip
   262cc:	andeq	r6, r2, r0
   262d0:	andeq	r6, r2, r4, lsr #32
   262d4:	andeq	r6, r2, r8, asr #32
   262d8:	andeq	r6, r2, ip, rrx
   262dc:	muleq	r2, r0, r0
   262e0:	strheq	r6, [r2], -r4
   262e4:	ldrdeq	r6, [r2], -r8
   262e8:	andeq	r6, r2, r4, lsl #2
   262ec:	andeq	r3, r5, r4, asr r0
   262f0:	andeq	r3, r5, r8, ror #3
   262f4:	andeq	r3, r5, r8, asr #4
   262f8:	andeq	r3, r5, r8, rrx
   262fc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   26300:	vpush	{d8-d9}
   26304:	sub	sp, sp, #108	; 0x6c
   26308:	mov	r9, r0
   2630c:	mov	r6, r1
   26310:	mov	r5, r2
   26314:	str	r2, [sp, #52]	; 0x34
   26318:	ldr	r4, [r1, #184]	; 0xb8
   2631c:	ldr	r7, [r2, #60]	; 0x3c
   26320:	mov	r2, #44	; 0x2c
   26324:	mov	r1, #0
   26328:	add	r0, sp, #60	; 0x3c
   2632c:	bl	140ac <memset@plt>
   26330:	str	r4, [sp, #60]	; 0x3c
   26334:	str	r5, [sp, #100]	; 0x64
   26338:	add	r2, sp, #60	; 0x3c
   2633c:	ldr	r1, [pc, #1316]	; 26868 <__flatcc_fb_gen_c_json_printer@@Base+0x1a30>
   26340:	mov	r0, r7
   26344:	bl	29458 <fb_scope_table_visit@@Base>
   26348:	ldr	r8, [sp, #64]	; 0x40
   2634c:	mov	r1, #8
   26350:	mov	r0, r8
   26354:	bl	13fa4 <calloc@plt>
   26358:	mov	r4, r0
   2635c:	str	r0, [sp, #76]	; 0x4c
   26360:	ldr	sl, [sp, #68]	; 0x44
   26364:	mov	r1, #8
   26368:	mov	r0, sl
   2636c:	bl	13fa4 <calloc@plt>
   26370:	mov	r5, r0
   26374:	str	r0, [sp, #80]	; 0x50
   26378:	ldr	fp, [sp, #72]	; 0x48
   2637c:	mov	r0, fp
   26380:	bl	14040 <malloc@plt>
   26384:	str	r0, [sp, #84]	; 0x54
   26388:	str	r4, [sp, #88]	; 0x58
   2638c:	str	r5, [sp, #92]	; 0x5c
   26390:	str	r0, [sp, #96]	; 0x60
   26394:	clz	r4, r4
   26398:	lsr	r4, r4, #5
   2639c:	cmp	r8, #0
   263a0:	movle	r4, #0
   263a4:	cmp	r4, #0
   263a8:	bne	264c8 <__flatcc_fb_gen_c_json_printer@@Base+0x1690>
   263ac:	clz	r5, r5
   263b0:	lsr	r5, r5, #5
   263b4:	cmp	sl, #0
   263b8:	movle	r5, #0
   263bc:	cmp	r5, #0
   263c0:	bne	264c8 <__flatcc_fb_gen_c_json_printer@@Base+0x1690>
   263c4:	clz	r3, r0
   263c8:	lsr	r3, r3, #5
   263cc:	cmp	fp, #0
   263d0:	moveq	r3, #0
   263d4:	str	r3, [sp, #24]
   263d8:	cmp	r3, #0
   263dc:	bne	264c8 <__flatcc_fb_gen_c_json_printer@@Base+0x1690>
   263e0:	add	r2, sp, #60	; 0x3c
   263e4:	ldr	r1, [pc, #1152]	; 2686c <__flatcc_fb_gen_c_json_printer@@Base+0x1a34>
   263e8:	mov	r0, r7
   263ec:	bl	29458 <fb_scope_table_visit@@Base>
   263f0:	ldr	r1, [sp, #64]	; 0x40
   263f4:	ldr	r0, [sp, #76]	; 0x4c
   263f8:	bl	25588 <__flatcc_fb_gen_c_json_printer@@Base+0x750>
   263fc:	ldr	r1, [sp, #68]	; 0x44
   26400:	ldr	r0, [sp, #80]	; 0x50
   26404:	bl	25588 <__flatcc_fb_gen_c_json_printer@@Base+0x750>
   26408:	ldr	r0, [sp, #64]	; 0x40
   2640c:	cmp	r0, #0
   26410:	ble	264e8 <__flatcc_fb_gen_c_json_printer@@Base+0x16b0>
   26414:	lsl	r0, r0, #2
   26418:	bl	14040 <malloc@plt>
   2641c:	subs	r3, r0, #0
   26420:	str	r3, [sp, #28]
   26424:	beq	264d8 <__flatcc_fb_gen_c_json_printer@@Base+0x16a0>
   26428:	ldr	r3, [r6, #188]	; 0xbc
   2642c:	cmp	r3, #0
   26430:	beq	264f4 <__flatcc_fb_gen_c_json_printer@@Base+0x16bc>
   26434:	mov	r3, #2
   26438:	mov	r2, #0
   2643c:	ldr	r1, [pc, #1068]	; 26870 <__flatcc_fb_gen_c_json_printer@@Base+0x1a38>
   26440:	mov	r0, r9
   26444:	bl	34d0c <flatcc_builder_start_buffer@@Base>
   26448:	cmp	r0, #0
   2644c:	bne	2645c <__flatcc_fb_gen_c_json_printer@@Base+0x1624>
   26450:	mov	r1, #5
   26454:	mov	r0, r9
   26458:	bl	35b38 <flatcc_builder_start_table@@Base>
   2645c:	ldr	r3, [sp, #52]	; 0x34
   26460:	ldrh	r3, [r3, #16]
   26464:	cmp	r3, #2
   26468:	beq	26520 <__flatcc_fb_gen_c_json_printer@@Base+0x16e8>
   2646c:	ldr	r3, [sp, #52]	; 0x34
   26470:	ldrh	r3, [r3, #32]
   26474:	cmp	r3, #2
   26478:	beq	26554 <__flatcc_fb_gen_c_json_printer@@Base+0x171c>
   2647c:	ldr	r3, [sp, #76]	; 0x4c
   26480:	mov	r2, r3
   26484:	str	r3, [sp, #48]	; 0x30
   26488:	ldr	r3, [sp, #64]	; 0x40
   2648c:	str	r3, [sp, #44]	; 0x2c
   26490:	cmp	r3, #0
   26494:	ble	26c18 <__flatcc_fb_gen_c_json_printer@@Base+0x1de0>
   26498:	str	r2, [sp, #36]	; 0x24
   2649c:	ldr	r3, [sp, #28]
   264a0:	sub	r3, r3, #4
   264a4:	str	r3, [sp, #40]	; 0x28
   264a8:	mov	r3, #0
   264ac:	str	r3, [sp, #32]
   264b0:	ldr	r3, [pc, #992]	; 26898 <__flatcc_fb_gen_c_json_printer@@Base+0x1a60>
   264b4:	add	r3, r3, #128	; 0x80
   264b8:	str	r3, [sp, #12]
   264bc:	vldr	d9, [pc, #924]	; 26860 <__flatcc_fb_gen_c_json_printer@@Base+0x1a28>
   264c0:	str	r9, [sp, #8]
   264c4:	b	26b30 <__flatcc_fb_gen_c_json_printer@@Base+0x1cf8>
   264c8:	add	r0, sp, #60	; 0x3c
   264cc:	bl	252d8 <__flatcc_fb_gen_c_json_printer@@Base+0x4a0>
   264d0:	mvn	r0, #0
   264d4:	b	26fc0 <__flatcc_fb_gen_c_json_printer@@Base+0x2188>
   264d8:	add	r0, sp, #60	; 0x3c
   264dc:	bl	252d8 <__flatcc_fb_gen_c_json_printer@@Base+0x4a0>
   264e0:	mvn	r0, #0
   264e4:	b	26fc0 <__flatcc_fb_gen_c_json_printer@@Base+0x2188>
   264e8:	mov	r3, #0
   264ec:	str	r3, [sp, #28]
   264f0:	b	26428 <__flatcc_fb_gen_c_json_printer@@Base+0x15f0>
   264f4:	mov	r3, #0
   264f8:	mov	r2, r3
   264fc:	ldr	r1, [pc, #876]	; 26870 <__flatcc_fb_gen_c_json_printer@@Base+0x1a38>
   26500:	mov	r0, r9
   26504:	bl	34d0c <flatcc_builder_start_buffer@@Base>
   26508:	cmp	r0, #0
   2650c:	bne	2645c <__flatcc_fb_gen_c_json_printer@@Base+0x1624>
   26510:	mov	r1, #5
   26514:	mov	r0, r9
   26518:	bl	35b38 <flatcc_builder_start_table@@Base>
   2651c:	b	2645c <__flatcc_fb_gen_c_json_printer@@Base+0x1624>
   26520:	ldr	r3, [sp, #52]	; 0x34
   26524:	ldr	r2, [r3, #12]
   26528:	ldr	r1, [r3, #8]
   2652c:	mov	r0, r9
   26530:	bl	372a8 <flatcc_builder_create_string@@Base>
   26534:	subs	r4, r0, #0
   26538:	beq	2646c <__flatcc_fb_gen_c_json_printer@@Base+0x1634>
   2653c:	mov	r1, #2
   26540:	mov	r0, r9
   26544:	bl	37700 <flatcc_builder_table_add_offset@@Base>
   26548:	cmp	r0, #0
   2654c:	strne	r4, [r0]
   26550:	b	2646c <__flatcc_fb_gen_c_json_printer@@Base+0x1634>
   26554:	ldr	r3, [sp, #52]	; 0x34
   26558:	ldr	r2, [r3, #28]
   2655c:	ldr	r1, [r3, #24]
   26560:	mov	r0, r9
   26564:	bl	372a8 <flatcc_builder_create_string@@Base>
   26568:	subs	r4, r0, #0
   2656c:	beq	2647c <__flatcc_fb_gen_c_json_printer@@Base+0x1644>
   26570:	mov	r1, #3
   26574:	mov	r0, r9
   26578:	bl	37700 <flatcc_builder_table_add_offset@@Base>
   2657c:	cmp	r0, #0
   26580:	strne	r4, [r0]
   26584:	b	2647c <__flatcc_fb_gen_c_json_printer@@Base+0x1644>
   26588:	ldr	r3, [r4, #16]
   2658c:	ldrh	r3, [r3, #8]
   26590:	cmp	r3, #4
   26594:	bne	26978 <__flatcc_fb_gen_c_json_printer@@Base+0x1b40>
   26598:	mov	r1, #9
   2659c:	ldr	r8, [sp, #8]
   265a0:	mov	r0, r8
   265a4:	bl	35b38 <flatcc_builder_start_table@@Base>
   265a8:	mov	r0, r8
   265ac:	bl	3598c <flatcc_builder_start_string@@Base>
   265b0:	ldr	r3, [r4, #4]
   265b4:	ldr	r2, [r3, #4]
   265b8:	ldr	r1, [r3]
   265bc:	mov	r0, r8
   265c0:	bl	355a4 <flatcc_builder_append_string@@Base>
   265c4:	mov	r2, #5
   265c8:	ldr	r1, [pc, #676]	; 26874 <__flatcc_fb_gen_c_json_printer@@Base+0x1a3c>
   265cc:	mov	r0, r8
   265d0:	bl	355a4 <flatcc_builder_append_string@@Base>
   265d4:	str	r8, [sp, #8]
   265d8:	mov	r0, r8
   265dc:	bl	37420 <flatcc_builder_end_string@@Base>
   265e0:	subs	r8, r0, #0
   265e4:	beq	265fc <__flatcc_fb_gen_c_json_printer@@Base+0x17c4>
   265e8:	mov	r1, #0
   265ec:	ldr	r0, [sp, #8]
   265f0:	bl	37700 <flatcc_builder_table_add_offset@@Base>
   265f4:	cmp	r0, #0
   265f8:	strne	r8, [r0]
   265fc:	mov	r1, #3
   26600:	ldr	r8, [sp, #8]
   26604:	mov	r0, r8
   26608:	bl	35b38 <flatcc_builder_start_table@@Base>
   2660c:	cmp	r0, #0
   26610:	bne	26678 <__flatcc_fb_gen_c_json_printer@@Base+0x1840>
   26614:	mov	r3, #1
   26618:	mov	r2, r3
   2661c:	mov	r1, #0
   26620:	mov	r0, r8
   26624:	bl	37534 <flatcc_builder_table_add@@Base>
   26628:	cmp	r0, #0
   2662c:	beq	26678 <__flatcc_fb_gen_c_json_printer@@Base+0x1840>
   26630:	mov	r3, #1
   26634:	strb	r3, [r0]
   26638:	mov	r2, #0
   2663c:	ldr	r3, [pc, #596]	; 26898 <__flatcc_fb_gen_c_json_printer@@Base+0x1a60>
   26640:	add	r1, r3, #124	; 0x7c
   26644:	mov	r0, r8
   26648:	bl	364dc <flatcc_builder_check_required@@Base>
   2664c:	cmp	r0, #0
   26650:	beq	266e4 <__flatcc_fb_gen_c_json_printer@@Base+0x18ac>
   26654:	ldr	r0, [sp, #8]
   26658:	bl	36588 <flatcc_builder_end_table@@Base>
   2665c:	subs	r8, r0, #0
   26660:	beq	26678 <__flatcc_fb_gen_c_json_printer@@Base+0x1840>
   26664:	mov	r1, #1
   26668:	ldr	r0, [sp, #8]
   2666c:	bl	37700 <flatcc_builder_table_add_offset@@Base>
   26670:	cmp	r0, #0
   26674:	strne	r8, [r0]
   26678:	ldrh	r8, [r4, #96]	; 0x60
   2667c:	add	r8, r8, #1
   26680:	lsl	r8, r8, #1
   26684:	uxth	r8, r8
   26688:	cmp	r8, #0
   2668c:	bne	266f8 <__flatcc_fb_gen_c_json_printer@@Base+0x18c0>
   26690:	ldrh	r8, [r4, #96]	; 0x60
   26694:	sub	r8, r8, #1
   26698:	uxth	r8, r8
   2669c:	cmp	r8, #0
   266a0:	bne	26718 <__flatcc_fb_gen_c_json_printer@@Base+0x18e0>
   266a4:	cmp	sl, #0
   266a8:	bne	26738 <__flatcc_fb_gen_c_json_printer@@Base+0x1900>
   266ac:	mov	r2, #2
   266b0:	ldr	r1, [sp, #12]
   266b4:	ldr	r0, [sp, #8]
   266b8:	bl	364dc <flatcc_builder_check_required@@Base>
   266bc:	cmp	r0, #0
   266c0:	beq	26758 <__flatcc_fb_gen_c_json_printer@@Base+0x1920>
   266c4:	ldr	r8, [sp, #8]
   266c8:	mov	r0, r8
   266cc:	bl	36588 <flatcc_builder_end_table@@Base>
   266d0:	subs	r1, r0, #0
   266d4:	beq	26978 <__flatcc_fb_gen_c_json_printer@@Base+0x1b40>
   266d8:	mov	r0, r8
   266dc:	bl	3537c <flatcc_builder_offset_vector_push@@Base>
   266e0:	b	26978 <__flatcc_fb_gen_c_json_printer@@Base+0x1b40>
   266e4:	ldr	r3, [pc, #396]	; 26878 <__flatcc_fb_gen_c_json_printer@@Base+0x1a40>
   266e8:	mov	r2, #23
   266ec:	ldr	r1, [pc, #440]	; 268ac <__flatcc_fb_gen_c_json_printer@@Base+0x1a74>
   266f0:	ldr	r0, [pc, #388]	; 2687c <__flatcc_fb_gen_c_json_printer@@Base+0x1a44>
   266f4:	bl	14148 <__assert_fail@plt>
   266f8:	mov	r3, #2
   266fc:	mov	r2, r3
   26700:	mov	r1, #3
   26704:	ldr	r0, [sp, #8]
   26708:	bl	37534 <flatcc_builder_table_add@@Base>
   2670c:	cmp	r0, #0
   26710:	strhne	r8, [r0]
   26714:	b	26690 <__flatcc_fb_gen_c_json_printer@@Base+0x1858>
   26718:	mov	r3, #2
   2671c:	mov	r2, r3
   26720:	mov	r1, r3
   26724:	ldr	r0, [sp, #8]
   26728:	bl	37534 <flatcc_builder_table_add@@Base>
   2672c:	cmp	r0, #0
   26730:	strhne	r8, [r0]
   26734:	b	266a4 <__flatcc_fb_gen_c_json_printer@@Base+0x186c>
   26738:	mov	r3, #1
   2673c:	mov	r2, r3
   26740:	mov	r1, #6
   26744:	ldr	r0, [sp, #8]
   26748:	bl	37534 <flatcc_builder_table_add@@Base>
   2674c:	cmp	r0, #0
   26750:	strbne	fp, [r0]
   26754:	b	266ac <__flatcc_fb_gen_c_json_printer@@Base+0x1874>
   26758:	ldr	r3, [pc, #288]	; 26880 <__flatcc_fb_gen_c_json_printer@@Base+0x1a48>
   2675c:	mov	r2, #29
   26760:	ldr	r1, [pc, #324]	; 268ac <__flatcc_fb_gen_c_json_printer@@Base+0x1a74>
   26764:	ldr	r0, [pc, #280]	; 26884 <__flatcc_fb_gen_c_json_printer@@Base+0x1a4c>
   26768:	bl	14148 <__assert_fail@plt>
   2676c:	mov	r1, #1
   26770:	ldr	r0, [sp, #8]
   26774:	bl	37700 <flatcc_builder_table_add_offset@@Base>
   26778:	cmp	r0, #0
   2677c:	strne	r8, [r0]
   26780:	b	269e0 <__flatcc_fb_gen_c_json_printer@@Base+0x1ba8>
   26784:	ldrh	r3, [r4, #56]	; 0x38
   26788:	sub	r3, r3, #3
   2678c:	cmp	r3, #3
   26790:	ldrls	pc, [pc, r3, lsl #2]
   26794:	b	26858 <__flatcc_fb_gen_c_json_printer@@Base+0x1a20>
   26798:	strdeq	r6, [r2], -ip
   2679c:	andeq	r6, r2, r0, ror #15
   267a0:	andeq	r6, r2, r8, lsr #15
   267a4:	andeq	r6, r2, ip, ror #15
   267a8:	ldrd	r2, [r4, #48]	; 0x30
   267ac:	strd	r2, [sp, #16]
   267b0:	ldrd	r2, [sp, #16]
   267b4:	orrs	r3, r2, r3
   267b8:	beq	26828 <__flatcc_fb_gen_c_json_printer@@Base+0x19f0>
   267bc:	mov	r3, #8
   267c0:	mov	r2, r3
   267c4:	mov	r1, #4
   267c8:	ldr	r0, [sp, #8]
   267cc:	bl	37534 <flatcc_builder_table_add@@Base>
   267d0:	cmp	r0, #0
   267d4:	ldrdne	r2, [sp, #16]
   267d8:	strdne	r2, [r0]
   267dc:	b	26828 <__flatcc_fb_gen_c_json_printer@@Base+0x19f0>
   267e0:	ldrd	r2, [r4, #48]	; 0x30
   267e4:	strd	r2, [sp, #16]
   267e8:	b	267b0 <__flatcc_fb_gen_c_json_printer@@Base+0x1978>
   267ec:	ldrb	r2, [r4, #48]	; 0x30
   267f0:	mov	r3, #0
   267f4:	strd	r2, [sp, #16]
   267f8:	b	267b0 <__flatcc_fb_gen_c_json_printer@@Base+0x1978>
   267fc:	vldr	d8, [r4, #48]	; 0x30
   26800:	vcmp.f64	d8, d9
   26804:	vmrs	APSR_nzcv, fpscr
   26808:	beq	26828 <__flatcc_fb_gen_c_json_printer@@Base+0x19f0>
   2680c:	mov	r3, #8
   26810:	mov	r2, r3
   26814:	mov	r1, #5
   26818:	ldr	r0, [sp, #8]
   2681c:	bl	37534 <flatcc_builder_table_add@@Base>
   26820:	cmp	r0, #0
   26824:	vstrne	d8, [r0]
   26828:	ldrh	r8, [r4, #96]	; 0x60
   2682c:	cmp	r8, #0
   26830:	moveq	r8, #4
   26834:	bne	268b4 <__flatcc_fb_gen_c_json_printer@@Base+0x1a7c>
   26838:	mov	r3, #2
   2683c:	mov	r2, r3
   26840:	mov	r1, #3
   26844:	ldr	r0, [sp, #8]
   26848:	bl	37534 <flatcc_builder_table_add@@Base>
   2684c:	cmp	r0, #0
   26850:	strhne	r8, [r0]
   26854:	b	268e8 <__flatcc_fb_gen_c_json_printer@@Base+0x1ab0>
   26858:	vmov.f64	d8, d9
   2685c:	b	26800 <__flatcc_fb_gen_c_json_printer@@Base+0x19c8>
	...
   26868:	andeq	r5, r2, r4, asr #6
   2686c:	andeq	r5, r2, r4, lsr #6
   26870:	ldrdeq	r3, [r5], -r8
   26874:	andeq	r3, r5, ip, lsr #31
   26878:	andeq	r3, r5, r4, asr r0
   2687c:	andeq	r3, r5, r8, asr #4
   26880:	andeq	r3, r5, r4, ror r0
   26884:	andeq	r3, r5, r0, ror #5
   26888:	muleq	r5, r4, r0
   2688c:	andeq	r3, r5, r0, ror r3
   26890:	strheq	r3, [r5], -r0
   26894:	andeq	r3, r5, r4, lsl #8
   26898:	andeq	r2, r5, ip, ror #31
   2689c:	ldrdeq	r3, [r5], -r0
   268a0:	muleq	r5, ip, r4
   268a4:	andeq	r3, r5, r4, ror #1
   268a8:	andeq	r3, r5, ip, ror #1
   268ac:	andeq	r3, r5, r8, ror #3
   268b0:	andeq	r3, r5, ip, lsr #10
   268b4:	mov	r3, #2
   268b8:	mov	r2, r3
   268bc:	mov	r1, r3
   268c0:	ldr	r0, [sp, #8]
   268c4:	bl	37534 <flatcc_builder_table_add@@Base>
   268c8:	cmp	r0, #0
   268cc:	strhne	r8, [r0]
   268d0:	ldrh	r8, [r4, #96]	; 0x60
   268d4:	add	r8, r8, #2
   268d8:	lsl	r8, r8, #1
   268dc:	uxth	r8, r8
   268e0:	cmp	r8, #0
   268e4:	bne	26838 <__flatcc_fb_gen_c_json_printer@@Base+0x1a00>
   268e8:	cmp	r5, #0
   268ec:	bne	26a20 <__flatcc_fb_gen_c_json_printer@@Base+0x1be8>
   268f0:	tst	r6, #256	; 0x100
   268f4:	bne	26a44 <__flatcc_fb_gen_c_json_printer@@Base+0x1c0c>
   268f8:	cmp	sl, #0
   268fc:	bne	26a68 <__flatcc_fb_gen_c_json_printer@@Base+0x1c30>
   26900:	mov	r2, #2
   26904:	ldr	r1, [sp, #12]
   26908:	ldr	r0, [sp, #8]
   2690c:	bl	364dc <flatcc_builder_check_required@@Base>
   26910:	cmp	r0, #0
   26914:	beq	26a88 <__flatcc_fb_gen_c_json_printer@@Base+0x1c50>
   26918:	ldr	r6, [sp, #8]
   2691c:	mov	r0, r6
   26920:	bl	36588 <flatcc_builder_end_table@@Base>
   26924:	subs	r1, r0, #0
   26928:	beq	26934 <__flatcc_fb_gen_c_json_printer@@Base+0x1afc>
   2692c:	mov	r0, r6
   26930:	bl	3537c <flatcc_builder_offset_vector_push@@Base>
   26934:	orr	r7, r5, r7
   26938:	ldr	r4, [r4]
   2693c:	cmp	r4, #0
   26940:	beq	26a9c <__flatcc_fb_gen_c_json_printer@@Base+0x1c64>
   26944:	cmp	r7, #0
   26948:	ldrheq	r5, [r4, #72]	; 0x48
   2694c:	lsreq	r5, r5, #7
   26950:	andeq	r5, r5, #1
   26954:	ldrne	r5, [sp, #24]
   26958:	uxtb	r5, r5
   2695c:	ldrh	r6, [r4, #72]	; 0x48
   26960:	ands	sl, r6, #4
   26964:	movne	fp, #1
   26968:	moveq	fp, #0
   2696c:	ldrh	r3, [r4, #24]
   26970:	cmp	r3, #14
   26974:	beq	26588 <__flatcc_fb_gen_c_json_printer@@Base+0x1750>
   26978:	mov	r1, #9
   2697c:	ldr	r8, [sp, #8]
   26980:	mov	r0, r8
   26984:	bl	35b38 <flatcc_builder_start_table@@Base>
   26988:	ldr	r3, [r4, #4]
   2698c:	ldr	r2, [r3, #4]
   26990:	ldr	r1, [r3]
   26994:	str	r8, [sp, #8]
   26998:	mov	r0, r8
   2699c:	bl	372a8 <flatcc_builder_create_string@@Base>
   269a0:	subs	r8, r0, #0
   269a4:	beq	269bc <__flatcc_fb_gen_c_json_printer@@Base+0x1b84>
   269a8:	mov	r1, #0
   269ac:	ldr	r0, [sp, #8]
   269b0:	bl	37700 <flatcc_builder_table_add_offset@@Base>
   269b4:	cmp	r0, #0
   269b8:	strne	r8, [r0]
   269bc:	add	r3, r4, #24
   269c0:	ldm	r3, {r0, r1}
   269c4:	stm	sp, {r0, r1}
   269c8:	add	r3, r4, #16
   269cc:	ldm	r3, {r2, r3}
   269d0:	ldr	r0, [sp, #8]
   269d4:	bl	25e50 <__flatcc_fb_gen_c_json_printer@@Base+0x1018>
   269d8:	subs	r8, r0, #0
   269dc:	bne	2676c <__flatcc_fb_gen_c_json_printer@@Base+0x1934>
   269e0:	ldrh	r3, [r9, #8]
   269e4:	cmp	r3, #0
   269e8:	beq	26784 <__flatcc_fb_gen_c_json_printer@@Base+0x194c>
   269ec:	cmp	r3, #1
   269f0:	bne	268f8 <__flatcc_fb_gen_c_json_printer@@Base+0x1ac0>
   269f4:	ldrh	r6, [r4, #80]	; 0x50
   269f8:	cmp	r6, #0
   269fc:	beq	268f8 <__flatcc_fb_gen_c_json_printer@@Base+0x1ac0>
   26a00:	mov	r3, #2
   26a04:	mov	r2, r3
   26a08:	mov	r1, #3
   26a0c:	ldr	r0, [sp, #8]
   26a10:	bl	37534 <flatcc_builder_table_add@@Base>
   26a14:	cmp	r0, #0
   26a18:	strhne	r6, [r0]
   26a1c:	b	268f8 <__flatcc_fb_gen_c_json_printer@@Base+0x1ac0>
   26a20:	mov	r3, #1
   26a24:	mov	r2, r3
   26a28:	mov	r1, #8
   26a2c:	ldr	r0, [sp, #8]
   26a30:	bl	37534 <flatcc_builder_table_add@@Base>
   26a34:	cmp	r0, #0
   26a38:	movne	r3, #1
   26a3c:	strbne	r3, [r0]
   26a40:	b	268f0 <__flatcc_fb_gen_c_json_printer@@Base+0x1ab8>
   26a44:	mov	r3, #1
   26a48:	mov	r2, r3
   26a4c:	mov	r1, #7
   26a50:	ldr	r0, [sp, #8]
   26a54:	bl	37534 <flatcc_builder_table_add@@Base>
   26a58:	cmp	r0, #0
   26a5c:	movne	r3, #1
   26a60:	strbne	r3, [r0]
   26a64:	b	268f8 <__flatcc_fb_gen_c_json_printer@@Base+0x1ac0>
   26a68:	mov	r3, #1
   26a6c:	mov	r2, r3
   26a70:	mov	r1, #6
   26a74:	ldr	r0, [sp, #8]
   26a78:	bl	37534 <flatcc_builder_table_add@@Base>
   26a7c:	cmp	r0, #0
   26a80:	strbne	fp, [r0]
   26a84:	b	26900 <__flatcc_fb_gen_c_json_printer@@Base+0x1ac8>
   26a88:	ldr	r3, [pc, #-528]	; 26880 <__flatcc_fb_gen_c_json_printer@@Base+0x1a48>
   26a8c:	mov	r2, #29
   26a90:	ldr	r1, [pc, #-492]	; 268ac <__flatcc_fb_gen_c_json_printer@@Base+0x1a74>
   26a94:	ldr	r0, [pc, #-536]	; 26884 <__flatcc_fb_gen_c_json_printer@@Base+0x1a4c>
   26a98:	bl	14148 <__assert_fail@plt>
   26a9c:	ldr	r5, [sp, #8]
   26aa0:	mov	r0, r5
   26aa4:	bl	369b0 <flatcc_builder_end_offset_vector@@Base>
   26aa8:	subs	r4, r0, #0
   26aac:	beq	26b94 <__flatcc_fb_gen_c_json_printer@@Base+0x1d5c>
   26ab0:	mov	r1, #1
   26ab4:	mov	r0, r5
   26ab8:	bl	37700 <flatcc_builder_table_add_offset@@Base>
   26abc:	cmp	r0, #0
   26ac0:	strne	r4, [r0]
   26ac4:	ldrh	r4, [r9, #8]
   26ac8:	cmp	r4, #1
   26acc:	beq	26ff8 <__flatcc_fb_gen_c_json_printer@@Base+0x21c0>
   26ad0:	ldrh	r4, [r9, #104]	; 0x68
   26ad4:	cmp	r4, #0
   26ad8:	bne	26be0 <__flatcc_fb_gen_c_json_printer@@Base+0x1da8>
   26adc:	mov	r2, #2
   26ae0:	ldr	r3, [pc, #-592]	; 26898 <__flatcc_fb_gen_c_json_printer@@Base+0x1a60>
   26ae4:	add	r1, r3, #160	; 0xa0
   26ae8:	ldr	r0, [sp, #8]
   26aec:	bl	364dc <flatcc_builder_check_required@@Base>
   26af0:	cmp	r0, #0
   26af4:	beq	26c00 <__flatcc_fb_gen_c_json_printer@@Base+0x1dc8>
   26af8:	ldr	r0, [sp, #8]
   26afc:	bl	36588 <flatcc_builder_end_table@@Base>
   26b00:	ldr	r3, [sp, #40]	; 0x28
   26b04:	str	r0, [r3, #4]!
   26b08:	str	r3, [sp, #40]	; 0x28
   26b0c:	ldr	r3, [sp, #32]
   26b10:	add	r3, r3, #1
   26b14:	str	r3, [sp, #32]
   26b18:	ldr	r2, [sp, #36]	; 0x24
   26b1c:	add	r2, r2, #8
   26b20:	str	r2, [sp, #36]	; 0x24
   26b24:	ldr	r2, [sp, #44]	; 0x2c
   26b28:	cmp	r2, r3
   26b2c:	beq	26c14 <__flatcc_fb_gen_c_json_printer@@Base+0x1ddc>
   26b30:	ldr	r3, [sp, #48]	; 0x30
   26b34:	ldr	r2, [sp, #32]
   26b38:	ldr	r9, [r3, r2, lsl #3]
   26b3c:	mov	r1, #5
   26b40:	ldr	r5, [sp, #8]
   26b44:	mov	r0, r5
   26b48:	bl	35b38 <flatcc_builder_start_table@@Base>
   26b4c:	ldr	r3, [sp, #36]	; 0x24
   26b50:	ldr	r1, [r3, #4]
   26b54:	mov	r0, r5
   26b58:	bl	373c0 <flatcc_builder_create_string_str@@Base>
   26b5c:	subs	r4, r0, #0
   26b60:	beq	26b78 <__flatcc_fb_gen_c_json_printer@@Base+0x1d40>
   26b64:	mov	r1, #0
   26b68:	mov	r0, r5
   26b6c:	bl	37700 <flatcc_builder_table_add_offset@@Base>
   26b70:	cmp	r0, #0
   26b74:	strne	r4, [r0]
   26b78:	ldr	r0, [sp, #8]
   26b7c:	bl	35914 <flatcc_builder_start_offset_vector@@Base>
   26b80:	ldr	r4, [r9, #20]
   26b84:	cmp	r4, #0
   26b88:	beq	26a9c <__flatcc_fb_gen_c_json_printer@@Base+0x1c64>
   26b8c:	mov	r7, #0
   26b90:	b	26944 <__flatcc_fb_gen_c_json_printer@@Base+0x1b0c>
   26b94:	ldrh	r4, [r9, #8]
   26b98:	cmp	r4, #1
   26b9c:	ldrne	r5, [sp, #24]
   26ba0:	beq	26bcc <__flatcc_fb_gen_c_json_printer@@Base+0x1d94>
   26ba4:	cmp	r4, #1
   26ba8:	bne	26ad0 <__flatcc_fb_gen_c_json_printer@@Base+0x1c98>
   26bac:	mov	r3, #1
   26bb0:	mov	r2, r3
   26bb4:	mov	r1, #2
   26bb8:	ldr	r0, [sp, #8]
   26bbc:	bl	37534 <flatcc_builder_table_add@@Base>
   26bc0:	cmp	r0, #0
   26bc4:	strbne	r5, [r0]
   26bc8:	b	26ad0 <__flatcc_fb_gen_c_json_printer@@Base+0x1c98>
   26bcc:	ldr	r5, [r9, #112]	; 0x70
   26bd0:	cmp	r5, #0
   26bd4:	moveq	r5, #1
   26bd8:	beq	26ba4 <__flatcc_fb_gen_c_json_printer@@Base+0x1d6c>
   26bdc:	b	27008 <__flatcc_fb_gen_c_json_printer@@Base+0x21d0>
   26be0:	mov	r3, #4
   26be4:	mov	r2, r3
   26be8:	mov	r1, #3
   26bec:	ldr	r0, [sp, #8]
   26bf0:	bl	37534 <flatcc_builder_table_add@@Base>
   26bf4:	cmp	r0, #0
   26bf8:	strne	r4, [r0]
   26bfc:	b	26adc <__flatcc_fb_gen_c_json_printer@@Base+0x1ca4>
   26c00:	ldr	r3, [pc, #-896]	; 26888 <__flatcc_fb_gen_c_json_printer@@Base+0x1a50>
   26c04:	mov	r2, #31
   26c08:	ldr	r1, [pc, #-868]	; 268ac <__flatcc_fb_gen_c_json_printer@@Base+0x1a74>
   26c0c:	ldr	r0, [pc, #-904]	; 2688c <__flatcc_fb_gen_c_json_printer@@Base+0x1a54>
   26c10:	bl	14148 <__assert_fail@plt>
   26c14:	ldr	r9, [sp, #8]
   26c18:	ldr	r2, [sp, #44]	; 0x2c
   26c1c:	ldr	r1, [sp, #28]
   26c20:	mov	r0, r9
   26c24:	bl	36a88 <flatcc_builder_create_offset_vector@@Base>
   26c28:	subs	r4, r0, #0
   26c2c:	beq	26c44 <__flatcc_fb_gen_c_json_printer@@Base+0x1e0c>
   26c30:	mov	r1, #0
   26c34:	mov	r0, r9
   26c38:	bl	37700 <flatcc_builder_table_add_offset@@Base>
   26c3c:	cmp	r0, #0
   26c40:	strne	r4, [r0]
   26c44:	ldr	r3, [sp, #80]	; 0x50
   26c48:	mov	sl, r3
   26c4c:	str	r3, [sp, #12]
   26c50:	ldr	r3, [sp, #68]	; 0x44
   26c54:	mov	r4, r3
   26c58:	str	r3, [sp, #16]
   26c5c:	mov	r0, r9
   26c60:	bl	35914 <flatcc_builder_start_offset_vector@@Base>
   26c64:	cmp	r4, #0
   26c68:	ble	26f1c <__flatcc_fb_gen_c_json_printer@@Base+0x20e4>
   26c6c:	mov	fp, #0
   26c70:	ldr	r3, [pc, #-992]	; 26898 <__flatcc_fb_gen_c_json_printer@@Base+0x1a60>
   26c74:	add	r3, r3, #192	; 0xc0
   26c78:	str	r3, [sp, #8]
   26c7c:	b	26e74 <__flatcc_fb_gen_c_json_printer@@Base+0x203c>
   26c80:	mov	r1, #3
   26c84:	mov	r0, r9
   26c88:	bl	35b38 <flatcc_builder_start_table@@Base>
   26c8c:	ldr	r3, [r4, #4]
   26c90:	ldr	r2, [r3, #4]
   26c94:	ldr	r1, [r3]
   26c98:	mov	r0, r9
   26c9c:	bl	372a8 <flatcc_builder_create_string@@Base>
   26ca0:	subs	r6, r0, #0
   26ca4:	beq	26cc4 <__flatcc_fb_gen_c_json_printer@@Base+0x1e8c>
   26ca8:	mov	r1, #0
   26cac:	mov	r0, r9
   26cb0:	bl	37700 <flatcc_builder_table_add_offset@@Base>
   26cb4:	cmp	r0, #0
   26cb8:	beq	26ccc <__flatcc_fb_gen_c_json_printer@@Base+0x1e94>
   26cbc:	ldr	r3, [sp, #28]
   26cc0:	b	26d64 <__flatcc_fb_gen_c_json_printer@@Base+0x1f2c>
   26cc4:	ldr	r3, [sp, #28]
   26cc8:	b	26d68 <__flatcc_fb_gen_c_json_printer@@Base+0x1f30>
   26ccc:	ldr	r3, [sp, #28]
   26cd0:	b	26d68 <__flatcc_fb_gen_c_json_printer@@Base+0x1f30>
   26cd4:	ldrd	r6, [r4, #48]	; 0x30
   26cd8:	orrs	r3, r6, r7
   26cdc:	bne	26da8 <__flatcc_fb_gen_c_json_printer@@Base+0x1f70>
   26ce0:	mov	r2, #1
   26ce4:	ldr	r1, [sp, #8]
   26ce8:	mov	r0, r9
   26cec:	bl	364dc <flatcc_builder_check_required@@Base>
   26cf0:	cmp	r0, #0
   26cf4:	beq	26dc8 <__flatcc_fb_gen_c_json_printer@@Base+0x1f90>
   26cf8:	mov	r0, r9
   26cfc:	bl	36588 <flatcc_builder_end_table@@Base>
   26d00:	subs	r1, r0, #0
   26d04:	beq	26d10 <__flatcc_fb_gen_c_json_printer@@Base+0x1ed8>
   26d08:	mov	r0, r9
   26d0c:	bl	3537c <flatcc_builder_offset_vector_push@@Base>
   26d10:	ldr	r4, [r4]
   26d14:	cmp	r4, #0
   26d18:	beq	26ddc <__flatcc_fb_gen_c_json_printer@@Base+0x1fa4>
   26d1c:	cmp	r5, #4
   26d20:	beq	26c80 <__flatcc_fb_gen_c_json_printer@@Base+0x1e48>
   26d24:	mov	r1, #3
   26d28:	mov	r0, r9
   26d2c:	bl	35b38 <flatcc_builder_start_table@@Base>
   26d30:	ldr	r3, [r4, #4]
   26d34:	ldr	r2, [r3, #4]
   26d38:	ldr	r1, [r3]
   26d3c:	mov	r0, r9
   26d40:	bl	372a8 <flatcc_builder_create_string@@Base>
   26d44:	subs	r6, r0, #0
   26d48:	beq	26cd4 <__flatcc_fb_gen_c_json_printer@@Base+0x1e9c>
   26d4c:	mov	r1, #0
   26d50:	mov	r0, r9
   26d54:	bl	37700 <flatcc_builder_table_add_offset@@Base>
   26d58:	cmp	r0, #0
   26d5c:	movne	r3, #0
   26d60:	beq	26cd4 <__flatcc_fb_gen_c_json_printer@@Base+0x1e9c>
   26d64:	str	r6, [r0]
   26d68:	cmp	r3, #0
   26d6c:	beq	26cd4 <__flatcc_fb_gen_c_json_printer@@Base+0x1e9c>
   26d70:	ldrh	r2, [r4, #24]
   26d74:	cmp	r2, #14
   26d78:	bne	26cd4 <__flatcc_fb_gen_c_json_printer@@Base+0x1e9c>
   26d7c:	ldr	r2, [r4, #16]
   26d80:	ldr	r2, [r2, #124]	; 0x7c
   26d84:	ldr	r6, [r3, r2, lsl #2]
   26d88:	cmp	r6, #0
   26d8c:	beq	26cd4 <__flatcc_fb_gen_c_json_printer@@Base+0x1e9c>
   26d90:	mov	r1, #2
   26d94:	mov	r0, r9
   26d98:	bl	37700 <flatcc_builder_table_add_offset@@Base>
   26d9c:	cmp	r0, #0
   26da0:	strne	r6, [r0]
   26da4:	b	26cd4 <__flatcc_fb_gen_c_json_printer@@Base+0x1e9c>
   26da8:	mov	r3, #8
   26dac:	mov	r2, r3
   26db0:	mov	r1, #1
   26db4:	mov	r0, r9
   26db8:	bl	37534 <flatcc_builder_table_add@@Base>
   26dbc:	cmp	r0, #0
   26dc0:	strdne	r6, [r0]
   26dc4:	b	26ce0 <__flatcc_fb_gen_c_json_printer@@Base+0x1ea8>
   26dc8:	ldr	r3, [pc, #-1344]	; 26890 <__flatcc_fb_gen_c_json_printer@@Base+0x1a58>
   26dcc:	mov	r2, #25
   26dd0:	ldr	r1, [pc, #-1324]	; 268ac <__flatcc_fb_gen_c_json_printer@@Base+0x1a74>
   26dd4:	ldr	r0, [pc, #-1352]	; 26894 <__flatcc_fb_gen_c_json_printer@@Base+0x1a5c>
   26dd8:	bl	14148 <__assert_fail@plt>
   26ddc:	mov	r0, r9
   26de0:	bl	369b0 <flatcc_builder_end_offset_vector@@Base>
   26de4:	subs	r4, r0, #0
   26de8:	beq	26e00 <__flatcc_fb_gen_c_json_printer@@Base+0x1fc8>
   26dec:	mov	r1, #1
   26df0:	mov	r0, r9
   26df4:	bl	37700 <flatcc_builder_table_add_offset@@Base>
   26df8:	cmp	r0, #0
   26dfc:	strne	r4, [r0]
   26e00:	cmp	r5, #4
   26e04:	beq	26ecc <__flatcc_fb_gen_c_json_printer@@Base+0x2094>
   26e08:	add	r3, r8, #48	; 0x30
   26e0c:	ldm	r3, {r0, r1}
   26e10:	stm	sp, {r0, r1}
   26e14:	add	r8, r8, #40	; 0x28
   26e18:	ldm	r8, {r2, r3}
   26e1c:	mov	r0, r9
   26e20:	bl	25e50 <__flatcc_fb_gen_c_json_printer@@Base+0x1018>
   26e24:	subs	r4, r0, #0
   26e28:	bne	26ef0 <__flatcc_fb_gen_c_json_printer@@Base+0x20b8>
   26e2c:	mov	r2, #3
   26e30:	ldr	r3, [pc, #-1440]	; 26898 <__flatcc_fb_gen_c_json_printer@@Base+0x1a60>
   26e34:	add	r1, r3, #220	; 0xdc
   26e38:	mov	r0, r9
   26e3c:	bl	364dc <flatcc_builder_check_required@@Base>
   26e40:	cmp	r0, #0
   26e44:	beq	26f08 <__flatcc_fb_gen_c_json_printer@@Base+0x20d0>
   26e48:	mov	r0, r9
   26e4c:	bl	36588 <flatcc_builder_end_table@@Base>
   26e50:	subs	r1, r0, #0
   26e54:	beq	26e60 <__flatcc_fb_gen_c_json_printer@@Base+0x2028>
   26e58:	mov	r0, r9
   26e5c:	bl	3537c <flatcc_builder_offset_vector_push@@Base>
   26e60:	add	fp, fp, #1
   26e64:	add	sl, sl, #8
   26e68:	ldr	r3, [sp, #16]
   26e6c:	cmp	r3, fp
   26e70:	beq	26f1c <__flatcc_fb_gen_c_json_printer@@Base+0x20e4>
   26e74:	ldr	r3, [sp, #12]
   26e78:	ldr	r8, [r3, fp, lsl #3]
   26e7c:	ldrh	r5, [r8, #8]
   26e80:	mov	r1, #4
   26e84:	mov	r0, r9
   26e88:	bl	35b38 <flatcc_builder_start_table@@Base>
   26e8c:	ldr	r1, [sl, #4]
   26e90:	mov	r0, r9
   26e94:	bl	373c0 <flatcc_builder_create_string_str@@Base>
   26e98:	subs	r4, r0, #0
   26e9c:	beq	26eb4 <__flatcc_fb_gen_c_json_printer@@Base+0x207c>
   26ea0:	mov	r1, #0
   26ea4:	mov	r0, r9
   26ea8:	bl	37700 <flatcc_builder_table_add_offset@@Base>
   26eac:	cmp	r0, #0
   26eb0:	strne	r4, [r0]
   26eb4:	mov	r0, r9
   26eb8:	bl	35914 <flatcc_builder_start_offset_vector@@Base>
   26ebc:	ldr	r4, [r8, #20]
   26ec0:	cmp	r4, #0
   26ec4:	bne	26d1c <__flatcc_fb_gen_c_json_printer@@Base+0x1ee4>
   26ec8:	b	26ddc <__flatcc_fb_gen_c_json_printer@@Base+0x1fa4>
   26ecc:	mov	r3, #1
   26ed0:	mov	r2, r3
   26ed4:	mov	r1, #2
   26ed8:	mov	r0, r9
   26edc:	bl	37534 <flatcc_builder_table_add@@Base>
   26ee0:	cmp	r0, #0
   26ee4:	movne	r3, #1
   26ee8:	strbne	r3, [r0]
   26eec:	b	26e08 <__flatcc_fb_gen_c_json_printer@@Base+0x1fd0>
   26ef0:	mov	r1, #3
   26ef4:	mov	r0, r9
   26ef8:	bl	37700 <flatcc_builder_table_add_offset@@Base>
   26efc:	cmp	r0, #0
   26f00:	strne	r4, [r0]
   26f04:	b	26e2c <__flatcc_fb_gen_c_json_printer@@Base+0x1ff4>
   26f08:	ldr	r3, [pc, #-1652]	; 2689c <__flatcc_fb_gen_c_json_printer@@Base+0x1a64>
   26f0c:	mov	r2, #27
   26f10:	ldr	r1, [pc, #-1644]	; 268ac <__flatcc_fb_gen_c_json_printer@@Base+0x1a74>
   26f14:	ldr	r0, [pc, #-1660]	; 268a0 <__flatcc_fb_gen_c_json_printer@@Base+0x1a68>
   26f18:	bl	14148 <__assert_fail@plt>
   26f1c:	mov	r0, r9
   26f20:	bl	369b0 <flatcc_builder_end_offset_vector@@Base>
   26f24:	subs	r4, r0, #0
   26f28:	beq	26f40 <__flatcc_fb_gen_c_json_printer@@Base+0x2108>
   26f2c:	mov	r1, #1
   26f30:	mov	r0, r9
   26f34:	bl	37700 <flatcc_builder_table_add_offset@@Base>
   26f38:	cmp	r0, #0
   26f3c:	strne	r4, [r0]
   26f40:	ldr	r3, [sp, #52]	; 0x34
   26f44:	ldr	r3, [r3, #52]	; 0x34
   26f48:	cmp	r3, #0
   26f4c:	beq	26f70 <__flatcc_fb_gen_c_json_printer@@Base+0x2138>
   26f50:	ldrh	r2, [r3, #8]
   26f54:	cmp	r2, #0
   26f58:	bne	26f70 <__flatcc_fb_gen_c_json_printer@@Base+0x2138>
   26f5c:	ldr	r3, [r3, #124]	; 0x7c
   26f60:	ldr	r2, [sp, #28]
   26f64:	ldr	r4, [r2, r3, lsl #2]
   26f68:	cmp	r4, #0
   26f6c:	bne	26fcc <__flatcc_fb_gen_c_json_printer@@Base+0x2194>
   26f70:	mov	r2, #2
   26f74:	ldr	r1, [pc, #-1752]	; 268a4 <__flatcc_fb_gen_c_json_printer@@Base+0x1a6c>
   26f78:	mov	r0, r9
   26f7c:	bl	364dc <flatcc_builder_check_required@@Base>
   26f80:	cmp	r0, #0
   26f84:	beq	26fe4 <__flatcc_fb_gen_c_json_printer@@Base+0x21ac>
   26f88:	mov	r0, r9
   26f8c:	bl	36588 <flatcc_builder_end_table@@Base>
   26f90:	mov	r1, r0
   26f94:	mov	r0, r9
   26f98:	bl	34dc4 <flatcc_builder_end_buffer@@Base>
   26f9c:	add	r0, sp, #60	; 0x3c
   26fa0:	bl	252d8 <__flatcc_fb_gen_c_json_printer@@Base+0x4a0>
   26fa4:	ldr	r3, [sp, #28]
   26fa8:	cmp	r3, #0
   26fac:	moveq	r0, #0
   26fb0:	beq	26fc0 <__flatcc_fb_gen_c_json_printer@@Base+0x2188>
   26fb4:	mov	r0, r3
   26fb8:	bl	13fd4 <free@plt>
   26fbc:	mov	r0, #0
   26fc0:	add	sp, sp, #108	; 0x6c
   26fc4:	vpop	{d8-d9}
   26fc8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   26fcc:	mov	r1, #4
   26fd0:	mov	r0, r9
   26fd4:	bl	37700 <flatcc_builder_table_add_offset@@Base>
   26fd8:	cmp	r0, #0
   26fdc:	strne	r4, [r0]
   26fe0:	b	26f70 <__flatcc_fb_gen_c_json_printer@@Base+0x2138>
   26fe4:	ldr	r3, [pc, #-1860]	; 268a8 <__flatcc_fb_gen_c_json_printer@@Base+0x1a70>
   26fe8:	mov	r2, #33	; 0x21
   26fec:	ldr	r1, [pc, #-1864]	; 268ac <__flatcc_fb_gen_c_json_printer@@Base+0x1a74>
   26ff0:	ldr	r0, [pc, #-1864]	; 268b0 <__flatcc_fb_gen_c_json_printer@@Base+0x1a78>
   26ff4:	bl	14148 <__assert_fail@plt>
   26ff8:	ldr	r5, [r9, #112]	; 0x70
   26ffc:	cmp	r5, #0
   27000:	moveq	r5, #1
   27004:	beq	26bac <__flatcc_fb_gen_c_json_printer@@Base+0x1d74>
   27008:	mov	r3, #4
   2700c:	mov	r2, r3
   27010:	mov	r1, r3
   27014:	ldr	r0, [sp, #8]
   27018:	bl	37534 <flatcc_builder_table_add@@Base>
   2701c:	cmp	r0, #0
   27020:	strne	r5, [r0]
   27024:	mov	r5, #1
   27028:	b	26ba4 <__flatcc_fb_gen_c_json_printer@@Base+0x1d6c>

0002702c <__flatcc_fb_codegen_bfbs_to_buffer@@Base>:
   2702c:	push	{r4, r5, r6, r7, lr}
   27030:	sub	sp, sp, #236	; 0xec
   27034:	mov	r6, r0
   27038:	mov	r7, r1
   2703c:	mov	r4, r2
   27040:	mov	r5, r3
   27044:	mov	r0, sp
   27048:	bl	343d8 <flatcc_builder_init@@Base>
   2704c:	mov	r2, r7
   27050:	mov	r1, r6
   27054:	mov	r0, sp
   27058:	bl	262fc <__flatcc_fb_gen_c_json_printer@@Base+0x14c4>
   2705c:	ldr	r2, [r5]
   27060:	mov	r1, r4
   27064:	mov	r0, sp
   27068:	bl	37bb8 <flatcc_builder_copy_buffer@@Base>
   2706c:	cmp	r0, #0
   27070:	beq	2707c <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x50>
   27074:	mov	r0, r4
   27078:	bl	255dc <__flatcc_fb_gen_c_json_printer@@Base+0x7a4>
   2707c:	mov	r0, sp
   27080:	bl	37abc <flatcc_builder_get_buffer_size@@Base>
   27084:	str	r0, [r5]
   27088:	mov	r0, sp
   2708c:	bl	34580 <flatcc_builder_clear@@Base>
   27090:	mov	r0, r4
   27094:	add	sp, sp, #236	; 0xec
   27098:	pop	{r4, r5, r6, r7, pc}

0002709c <__flatcc_fb_codegen_bfbs_alloc_buffer@@Base>:
   2709c:	push	{r4, r5, r6, lr}
   270a0:	sub	sp, sp, #232	; 0xe8
   270a4:	mov	r4, r0
   270a8:	mov	r5, r1
   270ac:	mov	r6, r2
   270b0:	mov	r0, sp
   270b4:	bl	343d8 <flatcc_builder_init@@Base>
   270b8:	mov	r2, r5
   270bc:	mov	r1, r4
   270c0:	mov	r0, sp
   270c4:	bl	262fc <__flatcc_fb_gen_c_json_printer@@Base+0x14c4>
   270c8:	cmp	r0, #0
   270cc:	movne	r4, #0
   270d0:	bne	270f0 <__flatcc_fb_codegen_bfbs_alloc_buffer@@Base+0x54>
   270d4:	mov	r1, r6
   270d8:	mov	r0, sp
   270dc:	bl	37c04 <flatcc_builder_finalize_buffer@@Base>
   270e0:	subs	r4, r0, #0
   270e4:	beq	270f0 <__flatcc_fb_codegen_bfbs_alloc_buffer@@Base+0x54>
   270e8:	mov	r0, r4
   270ec:	bl	255dc <__flatcc_fb_gen_c_json_printer@@Base+0x7a4>
   270f0:	mov	r0, sp
   270f4:	bl	34580 <flatcc_builder_clear@@Base>
   270f8:	mov	r0, r4
   270fc:	add	sp, sp, #232	; 0xe8
   27100:	pop	{r4, r5, r6, pc}

00027104 <__flatcc_fb_codegen_bfbs_to_file@@Base>:
   27104:	push	{r4, r5, r6, r7, r8, lr}
   27108:	sub	sp, sp, #16
   2710c:	mov	r5, r0
   27110:	mov	r6, r1
   27114:	ldr	r4, [r0, #216]	; 0xd8
   27118:	ldr	r3, [pc, #344]	; 27278 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x174>
   2711c:	cmp	r4, #0
   27120:	moveq	r4, r3
   27124:	mov	r0, r4
   27128:	bl	1407c <strlen@plt>
   2712c:	mov	r8, r0
   27130:	ldr	r7, [r6, #160]	; 0xa0
   27134:	mov	r0, r7
   27138:	bl	1407c <strlen@plt>
   2713c:	ldr	r2, [r5, #108]	; 0x6c
   27140:	cmp	r2, #0
   27144:	beq	271dc <__flatcc_fb_codegen_bfbs_to_file@@Base+0xd8>
   27148:	ldr	r3, [pc, #300]	; 2727c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x178>
   2714c:	ldr	r4, [r3]
   27150:	cmp	r4, #0
   27154:	beq	27270 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x16c>
   27158:	add	r2, sp, #12
   2715c:	mov	r1, r6
   27160:	mov	r0, r5
   27164:	bl	2709c <__flatcc_fb_codegen_bfbs_alloc_buffer@@Base>
   27168:	subs	r5, r0, #0
   2716c:	beq	27260 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x15c>
   27170:	mov	r3, r4
   27174:	ldr	r2, [sp, #12]
   27178:	mov	r1, #1
   2717c:	mov	r0, r5
   27180:	bl	1401c <fwrite@plt>
   27184:	ldr	r3, [sp, #12]
   27188:	cmp	r0, r3
   2718c:	moveq	r6, #0
   27190:	beq	271b0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xac>
   27194:	ldr	r3, [pc, #228]	; 27280 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x17c>
   27198:	ldr	r3, [r3]
   2719c:	mov	r2, #38	; 0x26
   271a0:	mov	r1, #1
   271a4:	ldr	r0, [pc, #216]	; 27284 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x180>
   271a8:	bl	1401c <fwrite@plt>
   271ac:	mvn	r6, #0
   271b0:	mov	r0, r5
   271b4:	bl	13fd4 <free@plt>
   271b8:	ldr	r3, [pc, #188]	; 2727c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x178>
   271bc:	ldr	r3, [r3]
   271c0:	cmp	r4, r3
   271c4:	beq	271d0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xcc>
   271c8:	mov	r0, r4
   271cc:	bl	140dc <fclose@plt>
   271d0:	mov	r0, r6
   271d4:	add	sp, sp, #16
   271d8:	pop	{r4, r5, r6, r7, r8, pc}
   271dc:	mov	r3, #1
   271e0:	str	r3, [sp, #4]
   271e4:	ldr	r3, [pc, #156]	; 27288 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x184>
   271e8:	str	r3, [sp]
   271ec:	mov	r3, r0
   271f0:	mov	r2, r7
   271f4:	mov	r1, r8
   271f8:	mov	r0, r4
   271fc:	bl	29b88 <__flatcc_fb_create_join_path_n@@Base>
   27200:	subs	r7, r0, #0
   27204:	beq	27228 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x124>
   27208:	ldr	r1, [pc, #124]	; 2728c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x188>
   2720c:	mov	r0, r7
   27210:	bl	13fc8 <fopen@plt>
   27214:	subs	r4, r0, #0
   27218:	beq	27248 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x144>
   2721c:	mov	r0, r7
   27220:	bl	13fd4 <free@plt>
   27224:	b	27150 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x4c>
   27228:	ldr	r3, [pc, #80]	; 27280 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x17c>
   2722c:	ldr	r3, [r3]
   27230:	mov	r2, #34	; 0x22
   27234:	mov	r1, #1
   27238:	ldr	r0, [pc, #80]	; 27290 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x18c>
   2723c:	bl	1401c <fwrite@plt>
   27240:	mov	r0, #1
   27244:	bl	14070 <exit@plt>
   27248:	mov	r2, r7
   2724c:	ldr	r1, [pc, #64]	; 27294 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x190>
   27250:	ldr	r3, [pc, #40]	; 27280 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x17c>
   27254:	ldr	r0, [r3]
   27258:	bl	14094 <fprintf@plt>
   2725c:	b	2721c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x118>
   27260:	ldr	r0, [pc, #48]	; 27298 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x194>
   27264:	bl	14034 <puts@plt>
   27268:	mvn	r6, #0
   2726c:	b	271b8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xb4>
   27270:	mvn	r6, #0
   27274:	b	271d0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xcc>
   27278:	muleq	r4, r0, r4
   2727c:	andeq	r7, r6, ip, lsr #1
   27280:	andeq	r7, r6, r8, lsr #1
   27284:	andeq	r3, r5, r8, lsl r6
   27288:	andeq	ip, r3, r8, lsr #14
   2728c:	andeq	ip, r3, r4, lsl #16
   27290:	strdeq	ip, [r3], -ip	; <UNPREDICTABLE>
   27294:	andeq	r3, r5, r0, asr #11
   27298:	strdeq	r3, [r5], -r4
   2729c:	push	{r4, r5, r6, r7, r8, lr}
   272a0:	ldr	r5, [r0]
   272a4:	ldr	r3, [r0, #12]
   272a8:	cmp	r3, #0
   272ac:	popeq	{r4, r5, r6, r7, r8, pc}
   272b0:	mov	r8, r2
   272b4:	mov	r7, r1
   272b8:	mov	r6, r0
   272bc:	sub	r5, r5, #4
   272c0:	mov	r4, #0
   272c4:	b	272d8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1d4>
   272c8:	add	r4, r4, #1
   272cc:	ldr	r3, [r6, #12]
   272d0:	cmp	r3, r4
   272d4:	bls	272f4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1f0>
   272d8:	ldr	r1, [r5, #4]!
   272dc:	cmp	r1, #0
   272e0:	cmpne	r1, #2
   272e4:	beq	272c8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1c4>
   272e8:	mov	r0, r8
   272ec:	blx	r7
   272f0:	b	272c8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1c4>
   272f4:	pop	{r4, r5, r6, r7, r8, pc}
   272f8:	push	{r4, lr}
   272fc:	mov	r4, r0
   27300:	ldr	r0, [r0]
   27304:	cmp	r0, #0
   27308:	beq	27310 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x20c>
   2730c:	bl	13fd4 <free@plt>
   27310:	mov	r3, #0
   27314:	str	r3, [r4]
   27318:	str	r3, [r4, #4]
   2731c:	str	r3, [r4, #8]
   27320:	str	r3, [r4, #12]
   27324:	pop	{r4, pc}
   27328:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2732c:	sub	sp, sp, #28
   27330:	str	r1, [sp, #8]
   27334:	str	r2, [sp, #12]
   27338:	subs	fp, r3, #0
   2733c:	beq	273e0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x2dc>
   27340:	mov	sl, r0
   27344:	cmp	fp, #2
   27348:	beq	273f4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x2f0>
   2734c:	cmp	fp, #1
   27350:	beq	27408 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x304>
   27354:	ldr	r1, [r0, #8]
   27358:	ldr	r2, [r0, #12]
   2735c:	mov	r3, #179	; 0xb3
   27360:	mul	r3, r3, r2
   27364:	cmp	r1, r3, lsr #8
   27368:	bcc	2737c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x278>
   2736c:	lsl	r1, r1, #1
   27370:	bl	27520 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x41c>
   27374:	cmp	r0, #0
   27378:	bne	2741c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x318>
   2737c:	ldr	r6, [sl]
   27380:	ldr	r7, [sl, #12]
   27384:	sub	r7, r7, #1
   27388:	add	r3, sp, #16
   2738c:	str	r3, [sp, #4]
   27390:	ldr	r3, [pc, #356]	; 274fc <__flatcc_fb_codegen_bfbs_to_file@@Base+0x3f8>
   27394:	str	r3, [sp]
   27398:	ldr	r2, [sp, #12]
   2739c:	mov	r3, #0
   273a0:	ldr	r0, [sp, #8]
   273a4:	bl	383b0 <cmetrohash64_1@@Base>
   273a8:	ldr	r5, [sp, #16]
   273ac:	and	r3, r7, r5
   273b0:	ldr	r2, [sp, #64]	; 0x40
   273b4:	sub	r2, r2, #2
   273b8:	cmp	r2, #1
   273bc:	bls	27438 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x334>
   273c0:	add	r8, r6, r3, lsl #2
   273c4:	ldr	r4, [r6, r3, lsl #2]
   273c8:	cmp	r4, #0
   273cc:	moveq	r9, r8
   273d0:	beq	274dc <__flatcc_fb_codegen_bfbs_to_file@@Base+0x3d8>
   273d4:	add	r5, r5, #1
   273d8:	mov	r9, #0
   273dc:	b	274a4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x3a0>
   273e0:	ldr	r3, [pc, #280]	; 27500 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x3fc>
   273e4:	mov	r2, #114	; 0x72
   273e8:	ldr	r1, [pc, #276]	; 27504 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x400>
   273ec:	ldr	r0, [pc, #276]	; 27508 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x404>
   273f0:	bl	14148 <__assert_fail@plt>
   273f4:	ldr	r3, [pc, #260]	; 27500 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x3fc>
   273f8:	mov	r2, #115	; 0x73
   273fc:	ldr	r1, [pc, #256]	; 27504 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x400>
   27400:	ldr	r0, [pc, #260]	; 2750c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x408>
   27404:	bl	14148 <__assert_fail@plt>
   27408:	ldr	r3, [pc, #240]	; 27500 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x3fc>
   2740c:	mov	r2, #116	; 0x74
   27410:	ldr	r1, [pc, #236]	; 27504 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x400>
   27414:	ldr	r0, [pc, #244]	; 27510 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x40c>
   27418:	bl	14148 <__assert_fail@plt>
   2741c:	ldr	r2, [pc, #240]	; 27514 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x410>
   27420:	ldr	r1, [pc, #240]	; 27518 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x414>
   27424:	ldr	r3, [pc, #240]	; 2751c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x418>
   27428:	ldr	r0, [r3]
   2742c:	bl	14094 <fprintf@plt>
   27430:	mov	r0, #1
   27434:	bl	14070 <exit@plt>
   27438:	ldr	r2, [sl, #8]
   2743c:	add	r2, r2, #1
   27440:	str	r2, [sl, #8]
   27444:	add	r2, r6, r3, lsl #2
   27448:	ldr	r3, [r6, r3, lsl #2]
   2744c:	cmp	r3, #0
   27450:	cmpne	r3, #2
   27454:	beq	27478 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x374>
   27458:	add	r5, r5, #1
   2745c:	and	r3, r5, r7
   27460:	add	r2, r6, r3, lsl #2
   27464:	ldr	r3, [r6, r3, lsl #2]
   27468:	add	r5, r5, #1
   2746c:	cmp	r3, #0
   27470:	cmpne	r3, #2
   27474:	bne	2745c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x358>
   27478:	str	fp, [r2]
   2747c:	mov	r4, #0
   27480:	b	274f0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x3ec>
   27484:	cmp	r9, #0
   27488:	moveq	r9, r8
   2748c:	and	r3, r7, r5
   27490:	add	r8, r6, r3, lsl #2
   27494:	ldr	r4, [r6, r3, lsl #2]
   27498:	add	r5, r5, #1
   2749c:	cmp	r4, #0
   274a0:	beq	274d4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x3d0>
   274a4:	cmp	r4, #2
   274a8:	beq	27484 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x380>
   274ac:	ldr	r2, [sp, #12]
   274b0:	mov	r1, r4
   274b4:	ldr	r0, [sp, #8]
   274b8:	bl	14130 <strncmp@plt>
   274bc:	cmp	r0, #0
   274c0:	bne	2748c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x388>
   274c4:	ldr	r3, [sp, #64]	; 0x40
   274c8:	cmp	r3, #0
   274cc:	streq	fp, [r8]
   274d0:	b	274f0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x3ec>
   274d4:	cmp	r9, #0
   274d8:	moveq	r9, r8
   274dc:	ldr	r3, [sl, #8]
   274e0:	add	r3, r3, #1
   274e4:	str	r3, [sl, #8]
   274e8:	str	fp, [r9]
   274ec:	mov	r4, #0
   274f0:	mov	r0, r4
   274f4:	add	sp, sp, #28
   274f8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   274fc:	svccs	0x00693b52
   27500:	andeq	r3, r5, r0, asr #12
   27504:	andeq	r3, r5, r8, asr r6
   27508:	andeq	r3, r5, r8, lsr #13
   2750c:	andeq	r3, r5, r0, asr #13
   27510:	ldrdeq	r3, [r5], -r8
   27514:	strdeq	r3, [r5], -r0
   27518:	andeq	r3, r5, r4, lsr #14
   2751c:	andeq	r7, r6, r8, lsr #1
   27520:	push	{r4, r5, r6, r7, r8, lr}
   27524:	sub	sp, sp, #24
   27528:	mov	r7, r0
   2752c:	ldr	r6, [r0]
   27530:	ldr	r3, [r0, #8]
   27534:	cmp	r1, r3
   27538:	movcc	r1, r3
   2753c:	cmp	r1, #2
   27540:	bls	275a0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x49c>
   27544:	mov	r4, #4
   27548:	mov	r2, #179	; 0xb3
   2754c:	lsl	r4, r4, #1
   27550:	mul	r3, r2, r4
   27554:	cmp	r1, r3, lsr #8
   27558:	bhi	2754c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x448>
   2755c:	mov	r1, #4
   27560:	mov	r0, r4
   27564:	bl	13fa4 <calloc@plt>
   27568:	str	r0, [sp, #8]
   2756c:	cmp	r0, #0
   27570:	beq	27618 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x514>
   27574:	mov	r3, #0
   27578:	str	r3, [sp, #12]
   2757c:	str	r4, [sp, #20]
   27580:	str	r3, [sp, #16]
   27584:	ldr	r3, [r7, #12]
   27588:	cmp	r3, #0
   2758c:	beq	275ec <__flatcc_fb_codegen_bfbs_to_file@@Base+0x4e8>
   27590:	sub	r6, r6, #4
   27594:	mov	r5, #0
   27598:	mov	r8, #3
   2759c:	b	275b8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x4b4>
   275a0:	mov	r4, #4
   275a4:	b	2755c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x458>
   275a8:	add	r5, r5, #1
   275ac:	ldr	r3, [r7, #12]
   275b0:	cmp	r3, r5
   275b4:	bls	275ec <__flatcc_fb_codegen_bfbs_to_file@@Base+0x4e8>
   275b8:	ldr	r4, [r6, #4]!
   275bc:	cmp	r4, #0
   275c0:	cmpne	r4, #2
   275c4:	beq	275a8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x4a4>
   275c8:	mov	r0, r4
   275cc:	bl	1407c <strlen@plt>
   275d0:	str	r8, [sp]
   275d4:	mov	r3, r4
   275d8:	mov	r2, r0
   275dc:	mov	r1, r4
   275e0:	add	r0, sp, #8
   275e4:	bl	27328 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x224>
   275e8:	b	275a8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x4a4>
   275ec:	mov	r0, r7
   275f0:	bl	272f8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1f4>
   275f4:	add	ip, sp, #8
   275f8:	ldm	ip!, {r0, r1, r2, r3}
   275fc:	str	r0, [r7]
   27600:	str	r1, [r7, #4]
   27604:	str	r2, [r7, #8]
   27608:	str	r3, [r7, #12]
   2760c:	mov	r0, #0
   27610:	add	sp, sp, #24
   27614:	pop	{r4, r5, r6, r7, r8, pc}
   27618:	mvn	r0, #0
   2761c:	b	27610 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x50c>
   27620:	push	{r4, r5, r6, r7, r8, r9, lr}
   27624:	sub	sp, sp, #20
   27628:	ldr	r7, [r0]
   2762c:	cmp	r7, #0
   27630:	beq	276bc <__flatcc_fb_codegen_bfbs_to_file@@Base+0x5b8>
   27634:	mov	r9, r2
   27638:	mov	r8, r1
   2763c:	ldr	r6, [r0, #12]
   27640:	sub	r6, r6, #1
   27644:	add	r3, sp, #8
   27648:	str	r3, [sp, #4]
   2764c:	ldr	r3, [pc, #112]	; 276c4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x5c0>
   27650:	str	r3, [sp]
   27654:	mov	r3, #0
   27658:	mov	r0, r1
   2765c:	bl	383b0 <cmetrohash64_1@@Base>
   27660:	ldr	r5, [sp, #8]
   27664:	and	r3, r6, r5
   27668:	ldr	r4, [r7, r3, lsl #2]
   2766c:	cmp	r4, #0
   27670:	beq	276b0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x5ac>
   27674:	add	r5, r5, #1
   27678:	b	27690 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x58c>
   2767c:	and	r3, r5, r6
   27680:	ldr	r4, [r7, r3, lsl #2]
   27684:	add	r5, r5, #1
   27688:	cmp	r4, #0
   2768c:	beq	276b0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x5ac>
   27690:	cmp	r4, #2
   27694:	beq	2767c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x578>
   27698:	mov	r2, r9
   2769c:	mov	r1, r4
   276a0:	mov	r0, r8
   276a4:	bl	14130 <strncmp@plt>
   276a8:	cmp	r0, #0
   276ac:	bne	2767c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x578>
   276b0:	mov	r0, r4
   276b4:	add	sp, sp, #20
   276b8:	pop	{r4, r5, r6, r7, r8, r9, pc}
   276bc:	mov	r4, #0
   276c0:	b	276b0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x5ac>
   276c4:	svccs	0x00693b52
   276c8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   276cc:	sub	sp, sp, #20
   276d0:	ldr	r6, [r0]
   276d4:	cmp	r6, #0
   276d8:	beq	27784 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x680>
   276dc:	mov	r9, r2
   276e0:	mov	r8, r1
   276e4:	mov	fp, r0
   276e8:	ldr	r7, [r0, #12]
   276ec:	sub	r7, r7, #1
   276f0:	add	r3, sp, #8
   276f4:	str	r3, [sp, #4]
   276f8:	ldr	r3, [pc, #140]	; 2778c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x688>
   276fc:	str	r3, [sp]
   27700:	mov	r3, #0
   27704:	mov	r0, r1
   27708:	bl	383b0 <cmetrohash64_1@@Base>
   2770c:	ldr	r5, [sp, #8]
   27710:	and	r3, r7, r5
   27714:	add	sl, r6, r3, lsl #2
   27718:	ldr	r4, [r6, r3, lsl #2]
   2771c:	cmp	r4, #0
   27720:	beq	27778 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x674>
   27724:	add	r5, r5, #1
   27728:	b	27744 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x640>
   2772c:	and	r3, r5, r7
   27730:	add	sl, r6, r3, lsl #2
   27734:	ldr	r4, [r6, r3, lsl #2]
   27738:	add	r5, r5, #1
   2773c:	cmp	r4, #0
   27740:	beq	27778 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x674>
   27744:	cmp	r4, #2
   27748:	beq	2772c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x628>
   2774c:	mov	r2, r9
   27750:	mov	r1, r4
   27754:	mov	r0, r8
   27758:	bl	14130 <strncmp@plt>
   2775c:	cmp	r0, #0
   27760:	bne	2772c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x628>
   27764:	mov	r3, #2
   27768:	str	r3, [sl]
   2776c:	ldr	r3, [fp, #8]
   27770:	sub	r3, r3, #1
   27774:	str	r3, [fp, #8]
   27778:	mov	r0, r4
   2777c:	add	sp, sp, #20
   27780:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27784:	mov	r4, #0
   27788:	b	27778 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x674>
   2778c:	svccs	0x00693b52

00027790 <str_set_clear@@Base>:
   27790:	push	{r4, lr}
   27794:	bl	272f8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1f4>
   27798:	pop	{r4, pc}

0002779c <str_set_destroy@@Base>:
   2779c:	push	{r4, lr}
   277a0:	mov	r4, r0
   277a4:	cmp	r1, #0
   277a8:	beq	277b0 <str_set_destroy@@Base+0x14>
   277ac:	bl	2729c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x198>
   277b0:	mov	r0, r4
   277b4:	bl	272f8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1f4>
   277b8:	pop	{r4, pc}

000277bc <str_set_init@@Base>:
   277bc:	push	{r4, r5, r6, lr}
   277c0:	mov	r5, r0
   277c4:	cmp	r1, #2
   277c8:	bls	27810 <str_set_init@@Base+0x54>
   277cc:	mov	r4, #4
   277d0:	mov	r2, #179	; 0xb3
   277d4:	lsl	r4, r4, #1
   277d8:	mul	r3, r2, r4
   277dc:	cmp	r1, r3, lsr #8
   277e0:	bhi	277d4 <str_set_init@@Base+0x18>
   277e4:	mov	r1, #4
   277e8:	mov	r0, r4
   277ec:	bl	13fa4 <calloc@plt>
   277f0:	str	r0, [r5]
   277f4:	cmp	r0, #0
   277f8:	movne	r0, #0
   277fc:	strne	r0, [r5, #4]
   27800:	strne	r4, [r5, #12]
   27804:	strne	r0, [r5, #8]
   27808:	mvneq	r0, #0
   2780c:	pop	{r4, r5, r6, pc}
   27810:	mov	r4, #4
   27814:	b	277e4 <str_set_init@@Base+0x28>

00027818 <str_set_resize@@Base>:
   27818:	push	{r4, lr}
   2781c:	bl	27520 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x41c>
   27820:	pop	{r4, pc}

00027824 <str_set_insert@@Base>:
   27824:	push	{lr}		; (str lr, [sp, #-4]!)
   27828:	sub	sp, sp, #12
   2782c:	ldr	ip, [sp, #16]
   27830:	str	ip, [sp]
   27834:	bl	27328 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x224>
   27838:	add	sp, sp, #12
   2783c:	pop	{pc}		; (ldr pc, [sp], #4)

00027840 <str_set_insert_item@@Base>:
   27840:	push	{r4, r5, r6, lr}
   27844:	sub	sp, sp, #8
   27848:	mov	r5, r0
   2784c:	mov	r4, r1
   27850:	mov	r6, r2
   27854:	mov	r0, r1
   27858:	bl	1407c <strlen@plt>
   2785c:	str	r6, [sp]
   27860:	mov	r3, r4
   27864:	mov	r2, r0
   27868:	mov	r1, r4
   2786c:	mov	r0, r5
   27870:	bl	27328 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x224>
   27874:	add	sp, sp, #8
   27878:	pop	{r4, r5, r6, pc}

0002787c <str_set_find@@Base>:
   2787c:	push	{r4, lr}
   27880:	bl	27620 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x51c>
   27884:	pop	{r4, pc}

00027888 <str_set_find_item@@Base>:
   27888:	push	{r4, r5, r6, lr}
   2788c:	mov	r5, r0
   27890:	mov	r4, r1
   27894:	mov	r0, r1
   27898:	bl	1407c <strlen@plt>
   2789c:	mov	r2, r0
   278a0:	mov	r1, r4
   278a4:	mov	r0, r5
   278a8:	bl	27620 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x51c>
   278ac:	pop	{r4, r5, r6, pc}

000278b0 <str_set_remove@@Base>:
   278b0:	push	{r4, lr}
   278b4:	bl	276c8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x5c4>
   278b8:	pop	{r4, pc}

000278bc <str_set_remove_item@@Base>:
   278bc:	push	{r4, r5, r6, lr}
   278c0:	mov	r5, r0
   278c4:	mov	r4, r1
   278c8:	mov	r0, r1
   278cc:	bl	1407c <strlen@plt>
   278d0:	mov	r2, r0
   278d4:	mov	r1, r4
   278d8:	mov	r0, r5
   278dc:	bl	276c8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x5c4>
   278e0:	pop	{r4, r5, r6, pc}

000278e4 <str_set_visit@@Base>:
   278e4:	push	{r4, lr}
   278e8:	bl	2729c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x198>
   278ec:	pop	{r4, pc}
   278f0:	push	{r4, r5, r6, r7, r8, lr}
   278f4:	ldr	r5, [r0]
   278f8:	ldr	r3, [r0, #12]
   278fc:	cmp	r3, #0
   27900:	popeq	{r4, r5, r6, r7, r8, pc}
   27904:	mov	r8, r2
   27908:	mov	r7, r1
   2790c:	mov	r6, r0
   27910:	sub	r5, r5, #4
   27914:	mov	r4, #0
   27918:	b	2792c <str_set_visit@@Base+0x48>
   2791c:	add	r4, r4, #1
   27920:	ldr	r3, [r6, #12]
   27924:	cmp	r3, r4
   27928:	bls	27948 <str_set_visit@@Base+0x64>
   2792c:	ldr	r1, [r5, #4]!
   27930:	cmp	r1, #0
   27934:	cmpne	r1, #2
   27938:	beq	2791c <str_set_visit@@Base+0x38>
   2793c:	mov	r0, r8
   27940:	blx	r7
   27944:	b	2791c <str_set_visit@@Base+0x38>
   27948:	pop	{r4, r5, r6, r7, r8, pc}
   2794c:	push	{r4, lr}
   27950:	mov	r4, r0
   27954:	ldr	r0, [r0]
   27958:	cmp	r0, #0
   2795c:	beq	27964 <str_set_visit@@Base+0x80>
   27960:	bl	13fd4 <free@plt>
   27964:	mov	r3, #0
   27968:	str	r3, [r4]
   2796c:	str	r3, [r4, #4]
   27970:	str	r3, [r4, #8]
   27974:	str	r3, [r4, #12]
   27978:	pop	{r4, pc}
   2797c:	push	{r4, r5, r6, r7, r8, r9, lr}
   27980:	sub	sp, sp, #28
   27984:	ldr	r9, [sp, #56]	; 0x38
   27988:	subs	r8, r3, #0
   2798c:	beq	27a34 <str_set_visit@@Base+0x150>
   27990:	mov	r7, r0
   27994:	mov	r6, r1
   27998:	cmp	r8, #2
   2799c:	beq	27a48 <str_set_visit@@Base+0x164>
   279a0:	cmp	r8, #1
   279a4:	beq	27a5c <str_set_visit@@Base+0x178>
   279a8:	ldr	r1, [r0, #8]
   279ac:	ldr	r2, [r0, #12]
   279b0:	mov	r3, #179	; 0xb3
   279b4:	mul	r3, r3, r2
   279b8:	cmp	r1, r3, lsr #8
   279bc:	bcc	279d0 <str_set_visit@@Base+0xec>
   279c0:	lsl	r1, r1, #1
   279c4:	bl	27b5c <str_set_visit@@Base+0x278>
   279c8:	cmp	r0, #0
   279cc:	bne	27a70 <str_set_visit@@Base+0x18c>
   279d0:	ldr	r4, [r7]
   279d4:	ldr	r5, [r7, #12]
   279d8:	sub	r5, r5, #1
   279dc:	add	r0, sp, #24
   279e0:	str	r6, [r0, #-12]!
   279e4:	add	r3, sp, #16
   279e8:	str	r3, [sp, #4]
   279ec:	ldr	r3, [pc, #324]	; 27b38 <str_set_visit@@Base+0x254>
   279f0:	str	r3, [sp]
   279f4:	mov	r2, #4
   279f8:	mov	r3, #0
   279fc:	bl	383b0 <cmetrohash64_1@@Base>
   27a00:	ldr	r3, [sp, #16]
   27a04:	and	r2, r5, r3
   27a08:	sub	r1, r9, #2
   27a0c:	cmp	r1, #1
   27a10:	bls	27a8c <str_set_visit@@Base+0x1a8>
   27a14:	add	r1, r4, r2, lsl #2
   27a18:	ldr	r0, [r4, r2, lsl #2]
   27a1c:	cmp	r0, #0
   27a20:	moveq	ip, r1
   27a24:	beq	27b1c <str_set_visit@@Base+0x238>
   27a28:	add	r3, r3, #1
   27a2c:	mov	ip, #0
   27a30:	b	27af8 <str_set_visit@@Base+0x214>
   27a34:	ldr	r3, [pc, #256]	; 27b3c <str_set_visit@@Base+0x258>
   27a38:	mov	r2, #114	; 0x72
   27a3c:	ldr	r1, [pc, #252]	; 27b40 <str_set_visit@@Base+0x25c>
   27a40:	ldr	r0, [pc, #252]	; 27b44 <str_set_visit@@Base+0x260>
   27a44:	bl	14148 <__assert_fail@plt>
   27a48:	ldr	r3, [pc, #236]	; 27b3c <str_set_visit@@Base+0x258>
   27a4c:	mov	r2, #115	; 0x73
   27a50:	ldr	r1, [pc, #232]	; 27b40 <str_set_visit@@Base+0x25c>
   27a54:	ldr	r0, [pc, #236]	; 27b48 <str_set_visit@@Base+0x264>
   27a58:	bl	14148 <__assert_fail@plt>
   27a5c:	ldr	r3, [pc, #216]	; 27b3c <str_set_visit@@Base+0x258>
   27a60:	mov	r2, #116	; 0x74
   27a64:	ldr	r1, [pc, #212]	; 27b40 <str_set_visit@@Base+0x25c>
   27a68:	ldr	r0, [pc, #220]	; 27b4c <str_set_visit@@Base+0x268>
   27a6c:	bl	14148 <__assert_fail@plt>
   27a70:	ldr	r2, [pc, #216]	; 27b50 <str_set_visit@@Base+0x26c>
   27a74:	ldr	r1, [pc, #216]	; 27b54 <str_set_visit@@Base+0x270>
   27a78:	ldr	r3, [pc, #216]	; 27b58 <str_set_visit@@Base+0x274>
   27a7c:	ldr	r0, [r3]
   27a80:	bl	14094 <fprintf@plt>
   27a84:	mov	r0, #1
   27a88:	bl	14070 <exit@plt>
   27a8c:	ldr	r1, [r7, #8]
   27a90:	add	r1, r1, #1
   27a94:	str	r1, [r7, #8]
   27a98:	add	r1, r4, r2, lsl #2
   27a9c:	ldr	r2, [r4, r2, lsl #2]
   27aa0:	cmp	r2, #0
   27aa4:	cmpne	r2, #2
   27aa8:	beq	27acc <str_set_visit@@Base+0x1e8>
   27aac:	add	r3, r3, #1
   27ab0:	and	r2, r3, r5
   27ab4:	add	r1, r4, r2, lsl #2
   27ab8:	ldr	r2, [r4, r2, lsl #2]
   27abc:	add	r3, r3, #1
   27ac0:	cmp	r2, #0
   27ac4:	cmpne	r2, #2
   27ac8:	bne	27ab0 <str_set_visit@@Base+0x1cc>
   27acc:	str	r8, [r1]
   27ad0:	mov	r0, #0
   27ad4:	b	27b30 <str_set_visit@@Base+0x24c>
   27ad8:	cmp	ip, #0
   27adc:	moveq	ip, r1
   27ae0:	and	r2, r5, r3
   27ae4:	add	r1, r4, r2, lsl #2
   27ae8:	ldr	r0, [r4, r2, lsl #2]
   27aec:	add	r3, r3, #1
   27af0:	cmp	r0, #0
   27af4:	beq	27b14 <str_set_visit@@Base+0x230>
   27af8:	cmp	r0, #2
   27afc:	beq	27ad8 <str_set_visit@@Base+0x1f4>
   27b00:	cmp	r6, r0
   27b04:	bne	27ae0 <str_set_visit@@Base+0x1fc>
   27b08:	cmp	r9, #0
   27b0c:	streq	r8, [r1]
   27b10:	b	27b30 <str_set_visit@@Base+0x24c>
   27b14:	cmp	ip, #0
   27b18:	moveq	ip, r1
   27b1c:	ldr	r3, [r7, #8]
   27b20:	add	r3, r3, #1
   27b24:	str	r3, [r7, #8]
   27b28:	str	r8, [ip]
   27b2c:	mov	r0, #0
   27b30:	add	sp, sp, #28
   27b34:	pop	{r4, r5, r6, r7, r8, r9, pc}
   27b38:	svccs	0x00693b52
   27b3c:	andeq	r3, r5, ip, lsr r7
   27b40:	andeq	r3, r5, r8, asr r6
   27b44:	andeq	r3, r5, r8, lsr #13
   27b48:	andeq	r3, r5, r0, asr #13
   27b4c:	ldrdeq	r3, [r5], -r8
   27b50:	strdeq	r3, [r5], -r0
   27b54:	andeq	r3, r5, r4, lsr #14
   27b58:	andeq	r7, r6, r8, lsr #1
   27b5c:	push	{r4, r5, r6, r7, r8, lr}
   27b60:	sub	sp, sp, #24
   27b64:	mov	r6, r0
   27b68:	ldr	r5, [r0]
   27b6c:	ldr	r3, [r0, #8]
   27b70:	cmp	r1, r3
   27b74:	movcc	r1, r3
   27b78:	cmp	r1, #2
   27b7c:	bls	27be0 <str_set_visit@@Base+0x2fc>
   27b80:	mov	r4, #4
   27b84:	mov	r2, #179	; 0xb3
   27b88:	lsl	r4, r4, #1
   27b8c:	mul	r3, r2, r4
   27b90:	cmp	r1, r3, lsr #8
   27b94:	bhi	27b88 <str_set_visit@@Base+0x2a4>
   27b98:	mov	r1, #4
   27b9c:	mov	r0, r4
   27ba0:	bl	13fa4 <calloc@plt>
   27ba4:	str	r0, [sp, #8]
   27ba8:	cmp	r0, #0
   27bac:	beq	27c4c <str_set_visit@@Base+0x368>
   27bb0:	mov	r3, #0
   27bb4:	str	r3, [sp, #12]
   27bb8:	str	r4, [sp, #20]
   27bbc:	str	r3, [sp, #16]
   27bc0:	ldr	r3, [r6, #12]
   27bc4:	cmp	r3, #0
   27bc8:	beq	27c20 <str_set_visit@@Base+0x33c>
   27bcc:	sub	r5, r5, #4
   27bd0:	mov	r4, #0
   27bd4:	mov	r8, #3
   27bd8:	mov	r7, #4
   27bdc:	b	27bf8 <str_set_visit@@Base+0x314>
   27be0:	mov	r4, #4
   27be4:	b	27b98 <str_set_visit@@Base+0x2b4>
   27be8:	add	r4, r4, #1
   27bec:	ldr	r3, [r6, #12]
   27bf0:	cmp	r3, r4
   27bf4:	bls	27c20 <str_set_visit@@Base+0x33c>
   27bf8:	ldr	r1, [r5, #4]!
   27bfc:	cmp	r1, #0
   27c00:	cmpne	r1, #2
   27c04:	beq	27be8 <str_set_visit@@Base+0x304>
   27c08:	str	r8, [sp]
   27c0c:	mov	r3, r1
   27c10:	mov	r2, r7
   27c14:	add	r0, sp, #8
   27c18:	bl	2797c <str_set_visit@@Base+0x98>
   27c1c:	b	27be8 <str_set_visit@@Base+0x304>
   27c20:	mov	r0, r6
   27c24:	bl	2794c <str_set_visit@@Base+0x68>
   27c28:	add	ip, sp, #8
   27c2c:	ldm	ip!, {r0, r1, r2, r3}
   27c30:	str	r0, [r6]
   27c34:	str	r1, [r6, #4]
   27c38:	str	r2, [r6, #8]
   27c3c:	str	r3, [r6, #12]
   27c40:	mov	r0, #0
   27c44:	add	sp, sp, #24
   27c48:	pop	{r4, r5, r6, r7, r8, pc}
   27c4c:	mvn	r0, #0
   27c50:	b	27c44 <str_set_visit@@Base+0x360>
   27c54:	push	{r4, r5, r6, lr}
   27c58:	sub	sp, sp, #24
   27c5c:	ldr	r5, [r0]
   27c60:	cmp	r5, #0
   27c64:	beq	27ce0 <str_set_visit@@Base+0x3fc>
   27c68:	mov	r6, r1
   27c6c:	ldr	r4, [r0, #12]
   27c70:	sub	r4, r4, #1
   27c74:	add	r0, sp, #24
   27c78:	str	r1, [r0, #-12]!
   27c7c:	add	r3, sp, #16
   27c80:	str	r3, [sp, #4]
   27c84:	ldr	r3, [pc, #92]	; 27ce8 <str_set_visit@@Base+0x404>
   27c88:	str	r3, [sp]
   27c8c:	mov	r2, #4
   27c90:	mov	r3, #0
   27c94:	bl	383b0 <cmetrohash64_1@@Base>
   27c98:	ldr	r3, [sp, #16]
   27c9c:	and	r2, r4, r3
   27ca0:	ldr	r0, [r5, r2, lsl #2]
   27ca4:	cmp	r0, #0
   27ca8:	beq	27cd8 <str_set_visit@@Base+0x3f4>
   27cac:	add	r3, r3, #1
   27cb0:	b	27cc8 <str_set_visit@@Base+0x3e4>
   27cb4:	and	r2, r3, r4
   27cb8:	ldr	r0, [r5, r2, lsl #2]
   27cbc:	add	r3, r3, #1
   27cc0:	cmp	r0, #0
   27cc4:	beq	27cd8 <str_set_visit@@Base+0x3f4>
   27cc8:	cmp	r0, #2
   27ccc:	beq	27cb4 <str_set_visit@@Base+0x3d0>
   27cd0:	cmp	r6, r0
   27cd4:	bne	27cb4 <str_set_visit@@Base+0x3d0>
   27cd8:	add	sp, sp, #24
   27cdc:	pop	{r4, r5, r6, pc}
   27ce0:	mov	r0, #0
   27ce4:	b	27cd8 <str_set_visit@@Base+0x3f4>
   27ce8:	svccs	0x00693b52
   27cec:	push	{r4, r5, r6, r7, lr}
   27cf0:	sub	sp, sp, #28
   27cf4:	ldr	r4, [r0]
   27cf8:	cmp	r4, #0
   27cfc:	beq	27d98 <str_set_visit@@Base+0x4b4>
   27d00:	mov	r6, r1
   27d04:	mov	r7, r0
   27d08:	ldr	r5, [r0, #12]
   27d0c:	sub	r5, r5, #1
   27d10:	add	r0, sp, #24
   27d14:	str	r1, [r0, #-12]!
   27d18:	add	r3, sp, #16
   27d1c:	str	r3, [sp, #4]
   27d20:	ldr	r3, [pc, #120]	; 27da0 <str_set_visit@@Base+0x4bc>
   27d24:	str	r3, [sp]
   27d28:	mov	r2, #4
   27d2c:	mov	r3, #0
   27d30:	bl	383b0 <cmetrohash64_1@@Base>
   27d34:	ldr	r3, [sp, #16]
   27d38:	and	r2, r5, r3
   27d3c:	add	r1, r4, r2, lsl #2
   27d40:	ldr	r0, [r4, r2, lsl #2]
   27d44:	cmp	r0, #0
   27d48:	beq	27d90 <str_set_visit@@Base+0x4ac>
   27d4c:	add	r3, r3, #1
   27d50:	b	27d6c <str_set_visit@@Base+0x488>
   27d54:	and	r2, r3, r5
   27d58:	add	r1, r4, r2, lsl #2
   27d5c:	ldr	r0, [r4, r2, lsl #2]
   27d60:	add	r3, r3, #1
   27d64:	cmp	r0, #0
   27d68:	beq	27d90 <str_set_visit@@Base+0x4ac>
   27d6c:	cmp	r0, #2
   27d70:	beq	27d54 <str_set_visit@@Base+0x470>
   27d74:	cmp	r6, r0
   27d78:	bne	27d54 <str_set_visit@@Base+0x470>
   27d7c:	mov	r3, #2
   27d80:	str	r3, [r1]
   27d84:	ldr	r3, [r7, #8]
   27d88:	sub	r3, r3, #1
   27d8c:	str	r3, [r7, #8]
   27d90:	add	sp, sp, #28
   27d94:	pop	{r4, r5, r6, r7, pc}
   27d98:	mov	r0, #0
   27d9c:	b	27d90 <str_set_visit@@Base+0x4ac>
   27da0:	svccs	0x00693b52

00027da4 <ptr_set_clear@@Base>:
   27da4:	push	{r4, lr}
   27da8:	bl	2794c <str_set_visit@@Base+0x68>
   27dac:	pop	{r4, pc}

00027db0 <ptr_set_destroy@@Base>:
   27db0:	push	{r4, lr}
   27db4:	mov	r4, r0
   27db8:	cmp	r1, #0
   27dbc:	beq	27dc4 <ptr_set_destroy@@Base+0x14>
   27dc0:	bl	278f0 <str_set_visit@@Base+0xc>
   27dc4:	mov	r0, r4
   27dc8:	bl	2794c <str_set_visit@@Base+0x68>
   27dcc:	pop	{r4, pc}

00027dd0 <ptr_set_init@@Base>:
   27dd0:	push	{r4, r5, r6, lr}
   27dd4:	mov	r5, r0
   27dd8:	cmp	r1, #2
   27ddc:	bls	27e24 <ptr_set_init@@Base+0x54>
   27de0:	mov	r4, #4
   27de4:	mov	r2, #179	; 0xb3
   27de8:	lsl	r4, r4, #1
   27dec:	mul	r3, r2, r4
   27df0:	cmp	r1, r3, lsr #8
   27df4:	bhi	27de8 <ptr_set_init@@Base+0x18>
   27df8:	mov	r1, #4
   27dfc:	mov	r0, r4
   27e00:	bl	13fa4 <calloc@plt>
   27e04:	str	r0, [r5]
   27e08:	cmp	r0, #0
   27e0c:	movne	r0, #0
   27e10:	strne	r0, [r5, #4]
   27e14:	strne	r4, [r5, #12]
   27e18:	strne	r0, [r5, #8]
   27e1c:	mvneq	r0, #0
   27e20:	pop	{r4, r5, r6, pc}
   27e24:	mov	r4, #4
   27e28:	b	27df8 <ptr_set_init@@Base+0x28>

00027e2c <ptr_set_resize@@Base>:
   27e2c:	push	{r4, lr}
   27e30:	bl	27b5c <str_set_visit@@Base+0x278>
   27e34:	pop	{r4, pc}

00027e38 <ptr_set_insert@@Base>:
   27e38:	push	{lr}		; (str lr, [sp, #-4]!)
   27e3c:	sub	sp, sp, #12
   27e40:	ldr	ip, [sp, #16]
   27e44:	str	ip, [sp]
   27e48:	bl	2797c <str_set_visit@@Base+0x98>
   27e4c:	add	sp, sp, #12
   27e50:	pop	{pc}		; (ldr pc, [sp], #4)

00027e54 <ptr_set_insert_item@@Base>:
   27e54:	push	{lr}		; (str lr, [sp, #-4]!)
   27e58:	sub	sp, sp, #12
   27e5c:	str	r2, [sp]
   27e60:	mov	r3, r1
   27e64:	mov	r2, #4
   27e68:	bl	2797c <str_set_visit@@Base+0x98>
   27e6c:	add	sp, sp, #12
   27e70:	pop	{pc}		; (ldr pc, [sp], #4)

00027e74 <ptr_set_find@@Base>:
   27e74:	push	{r4, lr}
   27e78:	bl	27c54 <str_set_visit@@Base+0x370>
   27e7c:	pop	{r4, pc}

00027e80 <ptr_set_find_item@@Base>:
   27e80:	push	{r4, lr}
   27e84:	mov	r2, #4
   27e88:	bl	27c54 <str_set_visit@@Base+0x370>
   27e8c:	pop	{r4, pc}

00027e90 <ptr_set_remove@@Base>:
   27e90:	push	{r4, lr}
   27e94:	bl	27cec <str_set_visit@@Base+0x408>
   27e98:	pop	{r4, pc}

00027e9c <ptr_set_remove_item@@Base>:
   27e9c:	push	{r4, lr}
   27ea0:	mov	r2, #4
   27ea4:	bl	27cec <str_set_visit@@Base+0x408>
   27ea8:	pop	{r4, pc}

00027eac <ptr_set_visit@@Base>:
   27eac:	push	{r4, lr}
   27eb0:	bl	278f0 <str_set_visit@@Base+0xc>
   27eb4:	pop	{r4, pc}
   27eb8:	push	{r4, r5, r6, r7, r8, lr}
   27ebc:	ldr	r5, [r0]
   27ec0:	ldr	r3, [r0, #12]
   27ec4:	cmp	r3, #0
   27ec8:	popeq	{r4, r5, r6, r7, r8, pc}
   27ecc:	mov	r8, r2
   27ed0:	mov	r7, r1
   27ed4:	mov	r6, r0
   27ed8:	sub	r5, r5, #4
   27edc:	mov	r4, #0
   27ee0:	b	27ef4 <ptr_set_visit@@Base+0x48>
   27ee4:	add	r4, r4, #1
   27ee8:	ldr	r3, [r6, #12]
   27eec:	cmp	r3, r4
   27ef0:	bls	27f10 <ptr_set_visit@@Base+0x64>
   27ef4:	ldr	r1, [r5, #4]!
   27ef8:	cmp	r1, #0
   27efc:	cmpne	r1, #2
   27f00:	beq	27ee4 <ptr_set_visit@@Base+0x38>
   27f04:	mov	r0, r8
   27f08:	blx	r7
   27f0c:	b	27ee4 <ptr_set_visit@@Base+0x38>
   27f10:	pop	{r4, r5, r6, r7, r8, pc}
   27f14:	push	{r4, lr}
   27f18:	mov	r4, r0
   27f1c:	ldr	r0, [r0]
   27f20:	cmp	r0, #0
   27f24:	beq	27f2c <ptr_set_visit@@Base+0x80>
   27f28:	bl	13fd4 <free@plt>
   27f2c:	mov	r3, #0
   27f30:	str	r3, [r4]
   27f34:	str	r3, [r4, #4]
   27f38:	str	r3, [r4, #8]
   27f3c:	str	r3, [r4, #12]
   27f40:	pop	{r4, pc}
   27f44:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   27f48:	sub	sp, sp, #28
   27f4c:	str	r1, [sp, #8]
   27f50:	cmp	r3, #0
   27f54:	str	r3, [sp, #12]
   27f58:	beq	28008 <ptr_set_visit@@Base+0x15c>
   27f5c:	mov	fp, r0
   27f60:	mov	r8, r2
   27f64:	ldr	r3, [sp, #12]
   27f68:	cmp	r3, #2
   27f6c:	beq	2801c <ptr_set_visit@@Base+0x170>
   27f70:	ldr	r3, [sp, #12]
   27f74:	cmp	r3, #1
   27f78:	beq	28030 <ptr_set_visit@@Base+0x184>
   27f7c:	ldr	r1, [r0, #8]
   27f80:	ldr	r2, [r0, #12]
   27f84:	mov	r3, #179	; 0xb3
   27f88:	mul	r3, r3, r2
   27f8c:	cmp	r1, r3, lsr #8
   27f90:	bcc	27fa4 <ptr_set_visit@@Base+0xf8>
   27f94:	lsl	r1, r1, #1
   27f98:	bl	28164 <ptr_set_visit@@Base+0x2b8>
   27f9c:	cmp	r0, #0
   27fa0:	bne	28044 <ptr_set_visit@@Base+0x198>
   27fa4:	ldr	r6, [fp]
   27fa8:	ldr	r7, [fp, #12]
   27fac:	sub	r7, r7, #1
   27fb0:	add	r3, sp, #16
   27fb4:	str	r3, [sp, #4]
   27fb8:	ldr	r3, [pc, #384]	; 28140 <ptr_set_visit@@Base+0x294>
   27fbc:	str	r3, [sp]
   27fc0:	mov	r2, r8
   27fc4:	mov	r3, #0
   27fc8:	ldr	r0, [sp, #8]
   27fcc:	bl	383b0 <cmetrohash64_1@@Base>
   27fd0:	ldr	r5, [sp, #16]
   27fd4:	and	r3, r7, r5
   27fd8:	ldr	r2, [sp, #64]	; 0x40
   27fdc:	sub	r2, r2, #2
   27fe0:	cmp	r2, #1
   27fe4:	bls	28060 <ptr_set_visit@@Base+0x1b4>
   27fe8:	add	r9, r6, r3, lsl #2
   27fec:	ldr	r4, [r6, r3, lsl #2]
   27ff0:	cmp	r4, #0
   27ff4:	moveq	sl, r9
   27ff8:	beq	2811c <ptr_set_visit@@Base+0x270>
   27ffc:	add	r5, r5, #1
   28000:	mov	sl, #0
   28004:	b	280d0 <ptr_set_visit@@Base+0x224>
   28008:	ldr	r3, [pc, #308]	; 28144 <ptr_set_visit@@Base+0x298>
   2800c:	mov	r2, #114	; 0x72
   28010:	ldr	r1, [pc, #304]	; 28148 <ptr_set_visit@@Base+0x29c>
   28014:	ldr	r0, [pc, #304]	; 2814c <ptr_set_visit@@Base+0x2a0>
   28018:	bl	14148 <__assert_fail@plt>
   2801c:	ldr	r3, [pc, #288]	; 28144 <ptr_set_visit@@Base+0x298>
   28020:	mov	r2, #115	; 0x73
   28024:	ldr	r1, [pc, #284]	; 28148 <ptr_set_visit@@Base+0x29c>
   28028:	ldr	r0, [pc, #288]	; 28150 <ptr_set_visit@@Base+0x2a4>
   2802c:	bl	14148 <__assert_fail@plt>
   28030:	ldr	r3, [pc, #268]	; 28144 <ptr_set_visit@@Base+0x298>
   28034:	mov	r2, #116	; 0x74
   28038:	ldr	r1, [pc, #264]	; 28148 <ptr_set_visit@@Base+0x29c>
   2803c:	ldr	r0, [pc, #272]	; 28154 <ptr_set_visit@@Base+0x2a8>
   28040:	bl	14148 <__assert_fail@plt>
   28044:	ldr	r2, [pc, #268]	; 28158 <ptr_set_visit@@Base+0x2ac>
   28048:	ldr	r1, [pc, #268]	; 2815c <ptr_set_visit@@Base+0x2b0>
   2804c:	ldr	r3, [pc, #268]	; 28160 <ptr_set_visit@@Base+0x2b4>
   28050:	ldr	r0, [r3]
   28054:	bl	14094 <fprintf@plt>
   28058:	mov	r0, #1
   2805c:	bl	14070 <exit@plt>
   28060:	ldr	r2, [fp, #8]
   28064:	add	r2, r2, #1
   28068:	str	r2, [fp, #8]
   2806c:	add	r2, r6, r3, lsl #2
   28070:	ldr	r3, [r6, r3, lsl #2]
   28074:	cmp	r3, #0
   28078:	cmpne	r3, #2
   2807c:	beq	280a0 <ptr_set_visit@@Base+0x1f4>
   28080:	add	r5, r5, #1
   28084:	and	r3, r5, r7
   28088:	add	r2, r6, r3, lsl #2
   2808c:	ldr	r3, [r6, r3, lsl #2]
   28090:	add	r5, r5, #1
   28094:	cmp	r3, #0
   28098:	cmpne	r3, #2
   2809c:	bne	28084 <ptr_set_visit@@Base+0x1d8>
   280a0:	ldr	r3, [sp, #12]
   280a4:	str	r3, [r2]
   280a8:	mov	r4, #0
   280ac:	b	28134 <ptr_set_visit@@Base+0x288>
   280b0:	cmp	sl, #0
   280b4:	moveq	sl, r9
   280b8:	and	r3, r7, r5
   280bc:	add	r9, r6, r3, lsl #2
   280c0:	ldr	r4, [r6, r3, lsl #2]
   280c4:	add	r5, r5, #1
   280c8:	cmp	r4, #0
   280cc:	beq	28114 <ptr_set_visit@@Base+0x268>
   280d0:	cmp	r4, #2
   280d4:	beq	280b0 <ptr_set_visit@@Base+0x204>
   280d8:	ldr	r3, [r4, #4]
   280dc:	ldr	r2, [r3, #4]
   280e0:	cmp	r8, r2
   280e4:	bne	280b8 <ptr_set_visit@@Base+0x20c>
   280e8:	mov	r2, r8
   280ec:	ldr	r1, [r3]
   280f0:	ldr	r0, [sp, #8]
   280f4:	bl	13ff8 <memcmp@plt>
   280f8:	cmp	r0, #0
   280fc:	bne	280b8 <ptr_set_visit@@Base+0x20c>
   28100:	ldr	r3, [sp, #64]	; 0x40
   28104:	cmp	r3, #0
   28108:	ldreq	r3, [sp, #12]
   2810c:	streq	r3, [r9]
   28110:	b	28134 <ptr_set_visit@@Base+0x288>
   28114:	cmp	sl, #0
   28118:	moveq	sl, r9
   2811c:	ldr	r3, [fp, #8]
   28120:	add	r3, r3, #1
   28124:	str	r3, [fp, #8]
   28128:	ldr	r3, [sp, #12]
   2812c:	str	r3, [sl]
   28130:	mov	r4, #0
   28134:	mov	r0, r4
   28138:	add	sp, sp, #28
   2813c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   28140:	svccs	0x00693b52
   28144:	andeq	r3, r5, r4, asr r7
   28148:	andeq	r3, r5, r8, asr r6
   2814c:	andeq	r3, r5, r8, lsr #13
   28150:	andeq	r3, r5, r0, asr #13
   28154:	ldrdeq	r3, [r5], -r8
   28158:	strdeq	r3, [r5], -r0
   2815c:	andeq	r3, r5, r4, lsr #14
   28160:	andeq	r7, r6, r8, lsr #1
   28164:	push	{r4, r5, r6, r7, lr}
   28168:	sub	sp, sp, #28
   2816c:	mov	r6, r0
   28170:	ldr	r5, [r0]
   28174:	ldr	r3, [r0, #8]
   28178:	cmp	r1, r3
   2817c:	movcc	r1, r3
   28180:	cmp	r1, #2
   28184:	bls	281e4 <ptr_set_visit@@Base+0x338>
   28188:	mov	r4, #4
   2818c:	mov	r2, #179	; 0xb3
   28190:	lsl	r4, r4, #1
   28194:	mul	r3, r2, r4
   28198:	cmp	r1, r3, lsr #8
   2819c:	bhi	28190 <ptr_set_visit@@Base+0x2e4>
   281a0:	mov	r1, #4
   281a4:	mov	r0, r4
   281a8:	bl	13fa4 <calloc@plt>
   281ac:	str	r0, [sp, #8]
   281b0:	cmp	r0, #0
   281b4:	beq	28254 <ptr_set_visit@@Base+0x3a8>
   281b8:	mov	r3, #0
   281bc:	str	r3, [sp, #12]
   281c0:	str	r4, [sp, #20]
   281c4:	str	r3, [sp, #16]
   281c8:	ldr	r3, [r6, #12]
   281cc:	cmp	r3, #0
   281d0:	beq	28228 <ptr_set_visit@@Base+0x37c>
   281d4:	sub	r5, r5, #4
   281d8:	mov	r4, #0
   281dc:	mov	r7, #3
   281e0:	b	281fc <ptr_set_visit@@Base+0x350>
   281e4:	mov	r4, #4
   281e8:	b	281a0 <ptr_set_visit@@Base+0x2f4>
   281ec:	add	r4, r4, #1
   281f0:	ldr	r3, [r6, #12]
   281f4:	cmp	r3, r4
   281f8:	bls	28228 <ptr_set_visit@@Base+0x37c>
   281fc:	ldr	r3, [r5, #4]!
   28200:	cmp	r3, #0
   28204:	cmpne	r3, #2
   28208:	beq	281ec <ptr_set_visit@@Base+0x340>
   2820c:	ldr	r1, [r3, #4]
   28210:	ldr	r2, [r1, #4]
   28214:	ldr	r1, [r1]
   28218:	str	r7, [sp]
   2821c:	add	r0, sp, #8
   28220:	bl	27f44 <ptr_set_visit@@Base+0x98>
   28224:	b	281ec <ptr_set_visit@@Base+0x340>
   28228:	mov	r0, r6
   2822c:	bl	27f14 <ptr_set_visit@@Base+0x68>
   28230:	add	ip, sp, #8
   28234:	ldm	ip!, {r0, r1, r2, r3}
   28238:	str	r0, [r6]
   2823c:	str	r1, [r6, #4]
   28240:	str	r2, [r6, #8]
   28244:	str	r3, [r6, #12]
   28248:	mov	r0, #0
   2824c:	add	sp, sp, #28
   28250:	pop	{r4, r5, r6, r7, pc}
   28254:	mvn	r0, #0
   28258:	b	2824c <ptr_set_visit@@Base+0x3a0>
   2825c:	push	{r4, r5, r6, r7, r8, r9, lr}
   28260:	sub	sp, sp, #20
   28264:	ldr	r8, [r0]
   28268:	cmp	r8, #0
   2826c:	beq	28308 <ptr_set_visit@@Base+0x45c>
   28270:	mov	r6, r2
   28274:	mov	r9, r1
   28278:	ldr	r7, [r0, #12]
   2827c:	sub	r7, r7, #1
   28280:	add	r3, sp, #8
   28284:	str	r3, [sp, #4]
   28288:	ldr	r3, [pc, #128]	; 28310 <ptr_set_visit@@Base+0x464>
   2828c:	str	r3, [sp]
   28290:	mov	r3, #0
   28294:	mov	r0, r1
   28298:	bl	383b0 <cmetrohash64_1@@Base>
   2829c:	ldr	r5, [sp, #8]
   282a0:	and	r3, r7, r5
   282a4:	ldr	r4, [r8, r3, lsl #2]
   282a8:	cmp	r4, #0
   282ac:	beq	282fc <ptr_set_visit@@Base+0x450>
   282b0:	add	r5, r5, #1
   282b4:	b	282cc <ptr_set_visit@@Base+0x420>
   282b8:	and	r3, r7, r5
   282bc:	ldr	r4, [r8, r3, lsl #2]
   282c0:	add	r5, r5, #1
   282c4:	cmp	r4, #0
   282c8:	beq	282fc <ptr_set_visit@@Base+0x450>
   282cc:	cmp	r4, #2
   282d0:	beq	282b8 <ptr_set_visit@@Base+0x40c>
   282d4:	ldr	r3, [r4, #4]
   282d8:	ldr	r2, [r3, #4]
   282dc:	cmp	r6, r2
   282e0:	bne	282b8 <ptr_set_visit@@Base+0x40c>
   282e4:	mov	r2, r6
   282e8:	ldr	r1, [r3]
   282ec:	mov	r0, r9
   282f0:	bl	13ff8 <memcmp@plt>
   282f4:	cmp	r0, #0
   282f8:	bne	282b8 <ptr_set_visit@@Base+0x40c>
   282fc:	mov	r0, r4
   28300:	add	sp, sp, #20
   28304:	pop	{r4, r5, r6, r7, r8, r9, pc}
   28308:	mov	r4, #0
   2830c:	b	282fc <ptr_set_visit@@Base+0x450>
   28310:	svccs	0x00693b52
   28314:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   28318:	sub	sp, sp, #20
   2831c:	ldr	r6, [r0]
   28320:	cmp	r6, #0
   28324:	beq	283e0 <ptr_set_visit@@Base+0x534>
   28328:	mov	r7, r2
   2832c:	mov	sl, r1
   28330:	mov	fp, r0
   28334:	ldr	r8, [r0, #12]
   28338:	sub	r8, r8, #1
   2833c:	add	r3, sp, #8
   28340:	str	r3, [sp, #4]
   28344:	ldr	r3, [pc, #156]	; 283e8 <ptr_set_visit@@Base+0x53c>
   28348:	str	r3, [sp]
   2834c:	mov	r3, #0
   28350:	mov	r0, r1
   28354:	bl	383b0 <cmetrohash64_1@@Base>
   28358:	ldr	r5, [sp, #8]
   2835c:	and	r3, r8, r5
   28360:	add	r9, r6, r3, lsl #2
   28364:	ldr	r4, [r6, r3, lsl #2]
   28368:	cmp	r4, #0
   2836c:	beq	283d4 <ptr_set_visit@@Base+0x528>
   28370:	add	r5, r5, #1
   28374:	b	28390 <ptr_set_visit@@Base+0x4e4>
   28378:	and	r3, r8, r5
   2837c:	add	r9, r6, r3, lsl #2
   28380:	ldr	r4, [r6, r3, lsl #2]
   28384:	add	r5, r5, #1
   28388:	cmp	r4, #0
   2838c:	beq	283d4 <ptr_set_visit@@Base+0x528>
   28390:	cmp	r4, #2
   28394:	beq	28378 <ptr_set_visit@@Base+0x4cc>
   28398:	ldr	r3, [r4, #4]
   2839c:	ldr	r2, [r3, #4]
   283a0:	cmp	r7, r2
   283a4:	bne	28378 <ptr_set_visit@@Base+0x4cc>
   283a8:	mov	r2, r7
   283ac:	ldr	r1, [r3]
   283b0:	mov	r0, sl
   283b4:	bl	13ff8 <memcmp@plt>
   283b8:	cmp	r0, #0
   283bc:	bne	28378 <ptr_set_visit@@Base+0x4cc>
   283c0:	mov	r3, #2
   283c4:	str	r3, [r9]
   283c8:	ldr	r3, [fp, #8]
   283cc:	sub	r3, r3, #1
   283d0:	str	r3, [fp, #8]
   283d4:	mov	r0, r4
   283d8:	add	sp, sp, #20
   283dc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   283e0:	mov	r4, #0
   283e4:	b	283d4 <ptr_set_visit@@Base+0x528>
   283e8:	svccs	0x00693b52

000283ec <fb_symbol_table_clear@@Base>:
   283ec:	push	{r4, lr}
   283f0:	bl	27f14 <ptr_set_visit@@Base+0x68>
   283f4:	pop	{r4, pc}

000283f8 <fb_symbol_table_destroy@@Base>:
   283f8:	push	{r4, lr}
   283fc:	mov	r4, r0
   28400:	cmp	r1, #0
   28404:	beq	2840c <fb_symbol_table_destroy@@Base+0x14>
   28408:	bl	27eb8 <ptr_set_visit@@Base+0xc>
   2840c:	mov	r0, r4
   28410:	bl	27f14 <ptr_set_visit@@Base+0x68>
   28414:	pop	{r4, pc}

00028418 <fb_symbol_table_init@@Base>:
   28418:	push	{r4, r5, r6, lr}
   2841c:	mov	r5, r0
   28420:	cmp	r1, #2
   28424:	bls	2846c <fb_symbol_table_init@@Base+0x54>
   28428:	mov	r4, #4
   2842c:	mov	r2, #179	; 0xb3
   28430:	lsl	r4, r4, #1
   28434:	mul	r3, r2, r4
   28438:	cmp	r1, r3, lsr #8
   2843c:	bhi	28430 <fb_symbol_table_init@@Base+0x18>
   28440:	mov	r1, #4
   28444:	mov	r0, r4
   28448:	bl	13fa4 <calloc@plt>
   2844c:	str	r0, [r5]
   28450:	cmp	r0, #0
   28454:	movne	r0, #0
   28458:	strne	r0, [r5, #4]
   2845c:	strne	r4, [r5, #12]
   28460:	strne	r0, [r5, #8]
   28464:	mvneq	r0, #0
   28468:	pop	{r4, r5, r6, pc}
   2846c:	mov	r4, #4
   28470:	b	28440 <fb_symbol_table_init@@Base+0x28>

00028474 <fb_symbol_table_resize@@Base>:
   28474:	push	{r4, lr}
   28478:	bl	28164 <ptr_set_visit@@Base+0x2b8>
   2847c:	pop	{r4, pc}

00028480 <fb_symbol_table_insert@@Base>:
   28480:	push	{lr}		; (str lr, [sp, #-4]!)
   28484:	sub	sp, sp, #12
   28488:	ldr	ip, [sp, #16]
   2848c:	str	ip, [sp]
   28490:	bl	27f44 <ptr_set_visit@@Base+0x98>
   28494:	add	sp, sp, #12
   28498:	pop	{pc}		; (ldr pc, [sp], #4)

0002849c <fb_symbol_table_insert_item@@Base>:
   2849c:	push	{lr}		; (str lr, [sp, #-4]!)
   284a0:	sub	sp, sp, #12
   284a4:	mov	r3, r1
   284a8:	ldr	r1, [r1, #4]
   284ac:	ldr	ip, [r1, #4]
   284b0:	ldr	r1, [r1]
   284b4:	str	r2, [sp]
   284b8:	mov	r2, ip
   284bc:	bl	27f44 <ptr_set_visit@@Base+0x98>
   284c0:	add	sp, sp, #12
   284c4:	pop	{pc}		; (ldr pc, [sp], #4)

000284c8 <fb_symbol_table_find@@Base>:
   284c8:	push	{r4, lr}
   284cc:	bl	2825c <ptr_set_visit@@Base+0x3b0>
   284d0:	pop	{r4, pc}

000284d4 <fb_symbol_table_find_item@@Base>:
   284d4:	push	{r4, lr}
   284d8:	ldr	r3, [r1, #4]
   284dc:	ldr	r2, [r3, #4]
   284e0:	ldr	r1, [r3]
   284e4:	bl	2825c <ptr_set_visit@@Base+0x3b0>
   284e8:	pop	{r4, pc}

000284ec <fb_symbol_table_remove@@Base>:
   284ec:	push	{r4, lr}
   284f0:	bl	28314 <ptr_set_visit@@Base+0x468>
   284f4:	pop	{r4, pc}

000284f8 <fb_symbol_table_remove_item@@Base>:
   284f8:	push	{r4, lr}
   284fc:	ldr	r3, [r1, #4]
   28500:	ldr	r2, [r3, #4]
   28504:	ldr	r1, [r3]
   28508:	bl	28314 <ptr_set_visit@@Base+0x468>
   2850c:	pop	{r4, pc}

00028510 <fb_symbol_table_visit@@Base>:
   28510:	push	{r4, lr}
   28514:	bl	27eb8 <ptr_set_visit@@Base+0xc>
   28518:	pop	{r4, pc}
   2851c:	push	{r4, r5, r6, r7, r8, lr}
   28520:	ldr	r5, [r0]
   28524:	ldr	r3, [r0, #12]
   28528:	cmp	r3, #0
   2852c:	popeq	{r4, r5, r6, r7, r8, pc}
   28530:	mov	r8, r2
   28534:	mov	r7, r1
   28538:	mov	r6, r0
   2853c:	sub	r5, r5, #4
   28540:	mov	r4, #0
   28544:	b	28558 <fb_symbol_table_visit@@Base+0x48>
   28548:	add	r4, r4, #1
   2854c:	ldr	r3, [r6, #12]
   28550:	cmp	r3, r4
   28554:	bls	28574 <fb_symbol_table_visit@@Base+0x64>
   28558:	ldr	r1, [r5, #4]!
   2855c:	cmp	r1, #0
   28560:	cmpne	r1, #2
   28564:	beq	28548 <fb_symbol_table_visit@@Base+0x38>
   28568:	mov	r0, r8
   2856c:	blx	r7
   28570:	b	28548 <fb_symbol_table_visit@@Base+0x38>
   28574:	pop	{r4, r5, r6, r7, r8, pc}
   28578:	push	{r4, lr}
   2857c:	mov	r4, r0
   28580:	ldr	r0, [r0]
   28584:	cmp	r0, #0
   28588:	beq	28590 <fb_symbol_table_visit@@Base+0x80>
   2858c:	bl	13fd4 <free@plt>
   28590:	mov	r3, #0
   28594:	str	r3, [r4]
   28598:	str	r3, [r4, #4]
   2859c:	str	r3, [r4, #8]
   285a0:	str	r3, [r4, #12]
   285a4:	pop	{r4, pc}
   285a8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   285ac:	sub	sp, sp, #28
   285b0:	str	r0, [sp, #20]
   285b4:	str	r1, [sp, #8]
   285b8:	str	r2, [sp, #12]
   285bc:	cmp	r3, #0
   285c0:	str	r3, [sp, #16]
   285c4:	beq	28654 <fb_symbol_table_visit@@Base+0x144>
   285c8:	ldr	r3, [sp, #16]
   285cc:	cmp	r3, #2
   285d0:	beq	28668 <fb_symbol_table_visit@@Base+0x158>
   285d4:	ldr	r3, [sp, #16]
   285d8:	cmp	r3, #1
   285dc:	beq	2867c <fb_symbol_table_visit@@Base+0x16c>
   285e0:	ldr	r0, [sp, #20]
   285e4:	ldr	r1, [r0, #8]
   285e8:	ldr	r2, [r0, #12]
   285ec:	mov	r3, #179	; 0xb3
   285f0:	mul	r3, r3, r2
   285f4:	cmp	r1, r3, lsr #8
   285f8:	bcc	2860c <fb_symbol_table_visit@@Base+0xfc>
   285fc:	lsl	r1, r1, #1
   28600:	bl	28ad8 <fb_symbol_table_visit@@Base+0x5c8>
   28604:	cmp	r0, #0
   28608:	bne	28690 <fb_symbol_table_visit@@Base+0x180>
   2860c:	ldr	r3, [sp, #20]
   28610:	ldr	r7, [r3]
   28614:	ldr	r3, [r3, #12]
   28618:	sub	r3, r3, #1
   2861c:	str	r3, [sp]
   28620:	ldr	r3, [sp, #12]
   28624:	str	r3, [sp, #4]
   28628:	cmp	r3, #0
   2862c:	ble	28724 <fb_symbol_table_visit@@Base+0x214>
   28630:	ldr	r5, [sp, #8]
   28634:	mov	lr, r3
   28638:	mov	r4, #0
   2863c:	mvn	fp, #0
   28640:	ldr	sl, [pc, #1124]	; 28aac <fb_symbol_table_visit@@Base+0x59c>
   28644:	ldr	r8, [pc, #1124]	; 28ab0 <fb_symbol_table_visit@@Base+0x5a0>
   28648:	ldr	r6, [pc, #1124]	; 28ab4 <fb_symbol_table_visit@@Base+0x5a4>
   2864c:	mov	r9, r4
   28650:	b	287b0 <fb_symbol_table_visit@@Base+0x2a0>
   28654:	ldr	r3, [pc, #1116]	; 28ab8 <fb_symbol_table_visit@@Base+0x5a8>
   28658:	mov	r2, #114	; 0x72
   2865c:	ldr	r1, [pc, #1112]	; 28abc <fb_symbol_table_visit@@Base+0x5ac>
   28660:	ldr	r0, [pc, #1112]	; 28ac0 <fb_symbol_table_visit@@Base+0x5b0>
   28664:	bl	14148 <__assert_fail@plt>
   28668:	ldr	r3, [pc, #1096]	; 28ab8 <fb_symbol_table_visit@@Base+0x5a8>
   2866c:	mov	r2, #115	; 0x73
   28670:	ldr	r1, [pc, #1092]	; 28abc <fb_symbol_table_visit@@Base+0x5ac>
   28674:	ldr	r0, [pc, #1096]	; 28ac4 <fb_symbol_table_visit@@Base+0x5b4>
   28678:	bl	14148 <__assert_fail@plt>
   2867c:	ldr	r3, [pc, #1076]	; 28ab8 <fb_symbol_table_visit@@Base+0x5a8>
   28680:	mov	r2, #116	; 0x74
   28684:	ldr	r1, [pc, #1072]	; 28abc <fb_symbol_table_visit@@Base+0x5ac>
   28688:	ldr	r0, [pc, #1080]	; 28ac8 <fb_symbol_table_visit@@Base+0x5b8>
   2868c:	bl	14148 <__assert_fail@plt>
   28690:	ldr	r2, [pc, #1076]	; 28acc <fb_symbol_table_visit@@Base+0x5bc>
   28694:	ldr	r1, [pc, #1076]	; 28ad0 <fb_symbol_table_visit@@Base+0x5c0>
   28698:	ldr	r3, [pc, #1076]	; 28ad4 <fb_symbol_table_visit@@Base+0x5c4>
   2869c:	ldr	r0, [r3]
   286a0:	bl	14094 <fprintf@plt>
   286a4:	mov	r0, #1
   286a8:	bl	14070 <exit@plt>
   286ac:	mov	r3, r9
   286b0:	eor	r4, r4, r6
   286b4:	eor	r3, r3, r4
   286b8:	mul	r4, r5, r3
   286bc:	ldr	ip, [ip]
   286c0:	adds	lr, lr, #1
   286c4:	beq	28a74 <fb_symbol_table_visit@@Base+0x564>
   286c8:	cmp	ip, #0
   286cc:	beq	28a74 <fb_symbol_table_visit@@Base+0x564>
   286d0:	ldr	r3, [ip, #4]
   286d4:	ldr	r0, [r3]
   286d8:	ldr	r3, [r3, #4]
   286dc:	subs	r3, r3, #1
   286e0:	beq	286ac <fb_symbol_table_visit@@Base+0x19c>
   286e4:	add	r1, r0, #1
   286e8:	ldrb	r2, [r0]
   286ec:	cmp	r2, #0
   286f0:	beq	2871c <fb_symbol_table_visit@@Base+0x20c>
   286f4:	add	r0, r0, r3
   286f8:	mov	r3, r9
   286fc:	add	r3, r3, r3, lsl #5
   28700:	eor	r3, r3, r2
   28704:	cmp	r0, r1
   28708:	beq	286b0 <fb_symbol_table_visit@@Base+0x1a0>
   2870c:	ldrb	r2, [r1], #1
   28710:	cmp	r2, #0
   28714:	bne	286fc <fb_symbol_table_visit@@Base+0x1ec>
   28718:	b	286b0 <fb_symbol_table_visit@@Base+0x1a0>
   2871c:	mov	r3, r9
   28720:	b	286b0 <fb_symbol_table_visit@@Base+0x1a0>
   28724:	ldr	r3, [sp, #8]
   28728:	cmp	r3, #0
   2872c:	moveq	r4, #0
   28730:	beq	28a74 <fb_symbol_table_visit@@Base+0x564>
   28734:	ldr	lr, [sp, #12]
   28738:	ldr	ip, [sp, #8]
   2873c:	mov	r4, #0
   28740:	ldr	r9, [pc, #868]	; 28aac <fb_symbol_table_visit@@Base+0x59c>
   28744:	ldr	r6, [pc, #868]	; 28ab0 <fb_symbol_table_visit@@Base+0x5a0>
   28748:	ldr	r5, [pc, #868]	; 28ab4 <fb_symbol_table_visit@@Base+0x5a4>
   2874c:	b	286d0 <fb_symbol_table_visit@@Base+0x1c0>
   28750:	cmp	r1, #0
   28754:	beq	28a64 <fb_symbol_table_visit@@Base+0x554>
   28758:	add	ip, r5, #1
   2875c:	ldrb	r0, [r5]
   28760:	cmp	r0, #0
   28764:	beq	28a38 <fb_symbol_table_visit@@Base+0x528>
   28768:	add	r1, r5, r1
   2876c:	mov	r3, sl
   28770:	add	r3, r3, r3, lsl #5
   28774:	eor	r3, r3, r0
   28778:	cmp	r1, ip
   2877c:	beq	2878c <fb_symbol_table_visit@@Base+0x27c>
   28780:	ldrb	r0, [ip], #1
   28784:	cmp	r0, #0
   28788:	bne	28770 <fb_symbol_table_visit@@Base+0x260>
   2878c:	eor	r4, r4, r8
   28790:	eor	r3, r3, r4
   28794:	mul	r4, r6, r3
   28798:	cmp	lr, r2
   2879c:	beq	28a74 <fb_symbol_table_visit@@Base+0x564>
   287a0:	mvn	r3, r2
   287a4:	add	lr, lr, r3
   287a8:	add	r2, r2, #1
   287ac:	add	r5, r5, r2
   287b0:	cmp	lr, #0
   287b4:	beq	28a4c <fb_symbol_table_visit@@Base+0x53c>
   287b8:	ldrb	r3, [r5]
   287bc:	cmp	r3, #46	; 0x2e
   287c0:	movne	r3, r5
   287c4:	movne	r1, r9
   287c8:	beq	28a58 <fb_symbol_table_visit@@Base+0x548>
   287cc:	add	r2, r1, #1
   287d0:	cmp	r2, lr
   287d4:	beq	28750 <fb_symbol_table_visit@@Base+0x240>
   287d8:	ldrb	r0, [r3, #1]!
   287dc:	cmp	r0, #46	; 0x2e
   287e0:	beq	28a10 <fb_symbol_table_visit@@Base+0x500>
   287e4:	mov	r1, r2
   287e8:	b	287cc <fb_symbol_table_visit@@Base+0x2bc>
   287ec:	ldr	r1, [sp, #20]
   287f0:	ldr	r2, [r1, #8]
   287f4:	add	r2, r2, #1
   287f8:	str	r2, [r1, #8]
   287fc:	add	r2, r7, r3, lsl #2
   28800:	ldr	r3, [r7, r3, lsl #2]
   28804:	cmp	r3, #0
   28808:	cmpne	r3, #2
   2880c:	beq	28834 <fb_symbol_table_visit@@Base+0x324>
   28810:	add	r4, r4, #1
   28814:	ldr	r1, [sp]
   28818:	and	r3, r1, r4
   2881c:	add	r2, r7, r3, lsl #2
   28820:	ldr	r3, [r7, r3, lsl #2]
   28824:	add	r4, r4, #1
   28828:	cmp	r3, #0
   2882c:	cmpne	r3, #2
   28830:	bne	28818 <fb_symbol_table_visit@@Base+0x308>
   28834:	ldr	r3, [sp, #16]
   28838:	str	r3, [r2]
   2883c:	mov	r6, #0
   28840:	b	289f4 <fb_symbol_table_visit@@Base+0x4e4>
   28844:	cmp	r9, #0
   28848:	moveq	r9, r8
   2884c:	ldr	r3, [sp]
   28850:	and	r3, r3, r4
   28854:	add	r8, r7, r3, lsl #2
   28858:	ldr	r6, [r7, r3, lsl #2]
   2885c:	add	r4, r4, #1
   28860:	cmp	r6, #0
   28864:	beq	289d0 <fb_symbol_table_visit@@Base+0x4c0>
   28868:	cmp	r6, #2
   2886c:	beq	28844 <fb_symbol_table_visit@@Base+0x334>
   28870:	ldr	r5, [r6]
   28874:	ldr	r3, [sp, #4]
   28878:	cmp	r3, #0
   2887c:	ble	288e8 <fb_symbol_table_visit@@Base+0x3d8>
   28880:	cmp	r5, #0
   28884:	beq	2884c <fb_symbol_table_visit@@Base+0x33c>
   28888:	ldr	r3, [r5, #4]
   2888c:	ldr	r2, [r3]
   28890:	ldr	lr, [r3, #4]
   28894:	ldr	r3, [sp, #12]
   28898:	cmp	r3, lr
   2889c:	bcc	2884c <fb_symbol_table_visit@@Base+0x33c>
   288a0:	ldr	sl, [sp, #8]
   288a4:	mov	fp, r3
   288a8:	cmp	lr, #0
   288ac:	beq	28974 <fb_symbol_table_visit@@Base+0x464>
   288b0:	ldrb	r1, [r2]
   288b4:	ldrb	r3, [sl]
   288b8:	cmp	r1, r3
   288bc:	bne	2884c <fb_symbol_table_visit@@Base+0x33c>
   288c0:	mov	r1, sl
   288c4:	mov	r3, #0
   288c8:	add	r3, r3, #1
   288cc:	cmp	r3, lr
   288d0:	beq	28978 <fb_symbol_table_visit@@Base+0x468>
   288d4:	ldrb	ip, [r2, #1]!
   288d8:	ldrb	r0, [r1, #1]!
   288dc:	cmp	ip, r0
   288e0:	beq	288c8 <fb_symbol_table_visit@@Base+0x3b8>
   288e4:	b	2884c <fb_symbol_table_visit@@Base+0x33c>
   288e8:	ldr	sl, [sp, #8]
   288ec:	ldr	fp, [sp, #4]
   288f0:	adds	r3, r5, #0
   288f4:	movne	r3, #1
   288f8:	adds	r2, sl, #0
   288fc:	movne	r2, #1
   28900:	tst	r3, r2
   28904:	beq	28950 <fb_symbol_table_visit@@Base+0x440>
   28908:	ldr	r3, [r5, #4]
   2890c:	ldr	r2, [r3, #4]
   28910:	ldr	r1, [sl, #4]
   28914:	ldr	r0, [r1, #4]
   28918:	cmp	r2, r0
   2891c:	bne	2884c <fb_symbol_table_visit@@Base+0x33c>
   28920:	ldr	r1, [r1]
   28924:	ldr	r0, [r3]
   28928:	bl	14130 <strncmp@plt>
   2892c:	cmp	r0, #0
   28930:	bne	2884c <fb_symbol_table_visit@@Base+0x33c>
   28934:	ldr	r5, [r5]
   28938:	ldr	sl, [sl]
   2893c:	adds	fp, fp, #1
   28940:	bne	288f0 <fb_symbol_table_visit@@Base+0x3e0>
   28944:	clz	r5, r5
   28948:	lsr	r5, r5, #5
   2894c:	b	28958 <fb_symbol_table_visit@@Base+0x448>
   28950:	orr	r5, r3, r2
   28954:	eor	r5, r5, #1
   28958:	cmp	r5, #0
   2895c:	beq	2884c <fb_symbol_table_visit@@Base+0x33c>
   28960:	ldr	r3, [sp, #64]	; 0x40
   28964:	cmp	r3, #0
   28968:	ldreq	r3, [sp, #16]
   2896c:	streq	r3, [r8]
   28970:	b	289f4 <fb_symbol_table_visit@@Base+0x4e4>
   28974:	mov	r3, lr
   28978:	cmp	lr, fp
   2897c:	beq	289c0 <fb_symbol_table_visit@@Base+0x4b0>
   28980:	ldrb	r3, [sl, r3]
   28984:	cmp	r3, #46	; 0x2e
   28988:	bne	2884c <fb_symbol_table_visit@@Base+0x33c>
   2898c:	mvn	r3, lr
   28990:	add	fp, fp, r3
   28994:	add	lr, lr, #1
   28998:	add	sl, sl, lr
   2899c:	ldr	r5, [r5]
   289a0:	cmp	r5, #0
   289a4:	beq	2884c <fb_symbol_table_visit@@Base+0x33c>
   289a8:	ldr	r3, [r5, #4]
   289ac:	ldr	r2, [r3]
   289b0:	ldr	lr, [r3, #4]
   289b4:	cmp	lr, fp
   289b8:	bls	288a8 <fb_symbol_table_visit@@Base+0x398>
   289bc:	b	2884c <fb_symbol_table_visit@@Base+0x33c>
   289c0:	ldr	r5, [r5]
   289c4:	clz	r5, r5
   289c8:	lsr	r5, r5, #5
   289cc:	b	28958 <fb_symbol_table_visit@@Base+0x448>
   289d0:	cmp	r9, #0
   289d4:	moveq	r9, r8
   289d8:	ldr	r2, [sp, #20]
   289dc:	ldr	r3, [r2, #8]
   289e0:	add	r3, r3, #1
   289e4:	str	r3, [r2, #8]
   289e8:	ldr	r3, [sp, #16]
   289ec:	str	r3, [r9]
   289f0:	mov	r6, #0
   289f4:	mov	r0, r6
   289f8:	add	sp, sp, #28
   289fc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   28a00:	eor	r4, r4, #5376	; 0x1500
   28a04:	eor	r4, r4, #5
   28a08:	mul	r4, r6, r4
   28a0c:	b	287a0 <fb_symbol_table_visit@@Base+0x290>
   28a10:	cmp	r1, #0
   28a14:	beq	28a00 <fb_symbol_table_visit@@Base+0x4f0>
   28a18:	add	ip, r5, #1
   28a1c:	ldrb	r0, [r5]
   28a20:	cmp	r0, #0
   28a24:	bne	28768 <fb_symbol_table_visit@@Base+0x258>
   28a28:	eor	r4, r4, #5376	; 0x1500
   28a2c:	eor	r4, r4, #5
   28a30:	mul	r4, r6, r4
   28a34:	b	287a0 <fb_symbol_table_visit@@Base+0x290>
   28a38:	eor	r4, r4, #5376	; 0x1500
   28a3c:	eor	r4, r4, #5
   28a40:	ldr	r3, [pc, #108]	; 28ab4 <fb_symbol_table_visit@@Base+0x5a4>
   28a44:	mul	r4, r3, r4
   28a48:	b	28a74 <fb_symbol_table_visit@@Base+0x564>
   28a4c:	mov	r2, lr
   28a50:	mov	r1, fp
   28a54:	b	28758 <fb_symbol_table_visit@@Base+0x248>
   28a58:	mov	r1, fp
   28a5c:	mov	r2, r9
   28a60:	b	28a18 <fb_symbol_table_visit@@Base+0x508>
   28a64:	eor	r4, r4, #5376	; 0x1500
   28a68:	eor	r4, r4, #5
   28a6c:	ldr	r3, [pc, #64]	; 28ab4 <fb_symbol_table_visit@@Base+0x5a4>
   28a70:	mul	r4, r3, r4
   28a74:	ldr	r3, [sp]
   28a78:	and	r3, r3, r4
   28a7c:	ldr	r2, [sp, #64]	; 0x40
   28a80:	sub	r2, r2, #2
   28a84:	cmp	r2, #1
   28a88:	bls	287ec <fb_symbol_table_visit@@Base+0x2dc>
   28a8c:	add	r8, r7, r3, lsl #2
   28a90:	ldr	r6, [r7, r3, lsl #2]
   28a94:	cmp	r6, #0
   28a98:	moveq	r9, r8
   28a9c:	beq	289d8 <fb_symbol_table_visit@@Base+0x4c8>
   28aa0:	add	r4, r4, #1
   28aa4:	mov	r9, #0
   28aa8:	b	28868 <fb_symbol_table_visit@@Base+0x358>
   28aac:	svccs	0x00692e57
   28ab0:	svccs	0x00693b52
   28ab4:			; <UNDEFINED> instruction: 0x9e3779b1
   28ab8:	andeq	r3, r5, ip, ror #14
   28abc:	andeq	r3, r5, r8, asr r6
   28ac0:	andeq	r3, r5, r8, lsr #13
   28ac4:	andeq	r3, r5, r0, asr #13
   28ac8:	ldrdeq	r3, [r5], -r8
   28acc:	strdeq	r3, [r5], -r0
   28ad0:	andeq	r3, r5, r4, lsr #14
   28ad4:	andeq	r7, r6, r8, lsr #1
   28ad8:	push	{r4, r5, r6, r7, r8, lr}
   28adc:	sub	sp, sp, #24
   28ae0:	mov	r6, r0
   28ae4:	ldr	r5, [r0]
   28ae8:	ldr	r3, [r0, #8]
   28aec:	cmp	r1, r3
   28af0:	movcc	r1, r3
   28af4:	cmp	r1, #2
   28af8:	bls	28b5c <fb_symbol_table_visit@@Base+0x64c>
   28afc:	mov	r4, #4
   28b00:	mov	r2, #179	; 0xb3
   28b04:	lsl	r4, r4, #1
   28b08:	mul	r3, r2, r4
   28b0c:	cmp	r1, r3, lsr #8
   28b10:	bhi	28b04 <fb_symbol_table_visit@@Base+0x5f4>
   28b14:	mov	r1, #4
   28b18:	mov	r0, r4
   28b1c:	bl	13fa4 <calloc@plt>
   28b20:	str	r0, [sp, #8]
   28b24:	cmp	r0, #0
   28b28:	beq	28bc8 <fb_symbol_table_visit@@Base+0x6b8>
   28b2c:	mov	r3, #0
   28b30:	str	r3, [sp, #12]
   28b34:	str	r4, [sp, #20]
   28b38:	str	r3, [sp, #16]
   28b3c:	ldr	r3, [r6, #12]
   28b40:	cmp	r3, #0
   28b44:	beq	28b9c <fb_symbol_table_visit@@Base+0x68c>
   28b48:	sub	r5, r5, #4
   28b4c:	mov	r4, #0
   28b50:	mov	r8, #3
   28b54:	mov	r7, r4
   28b58:	b	28b74 <fb_symbol_table_visit@@Base+0x664>
   28b5c:	mov	r4, #4
   28b60:	b	28b14 <fb_symbol_table_visit@@Base+0x604>
   28b64:	add	r4, r4, #1
   28b68:	ldr	r3, [r6, #12]
   28b6c:	cmp	r3, r4
   28b70:	bls	28b9c <fb_symbol_table_visit@@Base+0x68c>
   28b74:	ldr	r3, [r5, #4]!
   28b78:	cmp	r3, #0
   28b7c:	cmpne	r3, #2
   28b80:	beq	28b64 <fb_symbol_table_visit@@Base+0x654>
   28b84:	ldr	r1, [r3]
   28b88:	str	r8, [sp]
   28b8c:	mov	r2, r7
   28b90:	add	r0, sp, #8
   28b94:	bl	285a8 <fb_symbol_table_visit@@Base+0x98>
   28b98:	b	28b64 <fb_symbol_table_visit@@Base+0x654>
   28b9c:	mov	r0, r6
   28ba0:	bl	28578 <fb_symbol_table_visit@@Base+0x68>
   28ba4:	add	ip, sp, #8
   28ba8:	ldm	ip!, {r0, r1, r2, r3}
   28bac:	str	r0, [r6]
   28bb0:	str	r1, [r6, #4]
   28bb4:	str	r2, [r6, #8]
   28bb8:	str	r3, [r6, #12]
   28bbc:	mov	r0, #0
   28bc0:	add	sp, sp, #24
   28bc4:	pop	{r4, r5, r6, r7, r8, pc}
   28bc8:	mvn	r0, #0
   28bcc:	b	28bc0 <fb_symbol_table_visit@@Base+0x6b0>
   28bd0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   28bd4:	sub	sp, sp, #20
   28bd8:	str	r1, [sp, #4]
   28bdc:	ldr	r8, [r0]
   28be0:	cmp	r8, #0
   28be4:	beq	28ebc <fb_symbol_table_visit@@Base+0x9ac>
   28be8:	ldr	r3, [r0, #12]
   28bec:	sub	r9, r3, #1
   28bf0:	str	r2, [sp, #12]
   28bf4:	cmp	r2, #0
   28bf8:	ble	28c90 <fb_symbol_table_visit@@Base+0x780>
   28bfc:	mov	r6, r1
   28c00:	mov	r5, r2
   28c04:	mov	r4, #0
   28c08:	ldr	r7, [pc, #848]	; 28f60 <fb_symbol_table_visit@@Base+0xa50>
   28c0c:	ldr	fp, [pc, #848]	; 28f64 <fb_symbol_table_visit@@Base+0xa54>
   28c10:	mov	sl, r4
   28c14:	b	28d1c <fb_symbol_table_visit@@Base+0x80c>
   28c18:	mov	r3, r6
   28c1c:	eor	r4, r4, fp
   28c20:	eor	r3, r3, r4
   28c24:	mul	r4, r7, r3
   28c28:	ldr	lr, [lr]
   28c2c:	adds	r5, r5, #1
   28c30:	beq	28f40 <fb_symbol_table_visit@@Base+0xa30>
   28c34:	cmp	lr, #0
   28c38:	beq	28f40 <fb_symbol_table_visit@@Base+0xa30>
   28c3c:	ldr	r3, [lr, #4]
   28c40:	ldr	ip, [r3]
   28c44:	ldr	r3, [r3, #4]
   28c48:	subs	r3, r3, #1
   28c4c:	beq	28c18 <fb_symbol_table_visit@@Base+0x708>
   28c50:	add	r0, ip, #1
   28c54:	ldrb	r1, [ip]
   28c58:	cmp	r1, #0
   28c5c:	beq	28c88 <fb_symbol_table_visit@@Base+0x778>
   28c60:	add	ip, ip, r3
   28c64:	mov	r3, r6
   28c68:	add	r3, r3, r3, lsl #5
   28c6c:	eor	r3, r3, r1
   28c70:	cmp	ip, r0
   28c74:	beq	28c1c <fb_symbol_table_visit@@Base+0x70c>
   28c78:	ldrb	r1, [r0], #1
   28c7c:	cmp	r1, #0
   28c80:	bne	28c68 <fb_symbol_table_visit@@Base+0x758>
   28c84:	b	28c1c <fb_symbol_table_visit@@Base+0x70c>
   28c88:	mov	r3, r6
   28c8c:	b	28c1c <fb_symbol_table_visit@@Base+0x70c>
   28c90:	ldr	r3, [sp, #4]
   28c94:	cmp	r3, #0
   28c98:	moveq	r4, #0
   28c9c:	beq	28f40 <fb_symbol_table_visit@@Base+0xa30>
   28ca0:	mov	r5, r2
   28ca4:	ldr	lr, [sp, #4]
   28ca8:	mov	r4, #0
   28cac:	ldr	r6, [pc, #692]	; 28f68 <fb_symbol_table_visit@@Base+0xa58>
   28cb0:	ldr	fp, [pc, #680]	; 28f60 <fb_symbol_table_visit@@Base+0xa50>
   28cb4:	ldr	r7, [pc, #680]	; 28f64 <fb_symbol_table_visit@@Base+0xa54>
   28cb8:	b	28c3c <fb_symbol_table_visit@@Base+0x72c>
   28cbc:	cmp	r0, #0
   28cc0:	beq	28f30 <fb_symbol_table_visit@@Base+0xa20>
   28cc4:	add	lr, r6, #1
   28cc8:	ldrb	ip, [r6]
   28ccc:	cmp	ip, #0
   28cd0:	beq	28f04 <fb_symbol_table_visit@@Base+0x9f4>
   28cd4:	add	r0, r6, r0
   28cd8:	ldr	r3, [pc, #648]	; 28f68 <fb_symbol_table_visit@@Base+0xa58>
   28cdc:	add	r3, r3, r3, lsl #5
   28ce0:	eor	r3, r3, ip
   28ce4:	cmp	r0, lr
   28ce8:	beq	28cf8 <fb_symbol_table_visit@@Base+0x7e8>
   28cec:	ldrb	ip, [lr], #1
   28cf0:	cmp	ip, #0
   28cf4:	bne	28cdc <fb_symbol_table_visit@@Base+0x7cc>
   28cf8:	eor	r4, r4, r7
   28cfc:	eor	r3, r3, r4
   28d00:	mul	r4, fp, r3
   28d04:	cmp	r5, r1
   28d08:	beq	28f40 <fb_symbol_table_visit@@Base+0xa30>
   28d0c:	mvn	r3, r1
   28d10:	add	r5, r5, r3
   28d14:	add	r1, r1, #1
   28d18:	add	r6, r6, r1
   28d1c:	cmp	r5, #0
   28d20:	beq	28f18 <fb_symbol_table_visit@@Base+0xa08>
   28d24:	ldrb	r3, [r6]
   28d28:	cmp	r3, #46	; 0x2e
   28d2c:	movne	r3, r6
   28d30:	movne	r0, sl
   28d34:	beq	28f24 <fb_symbol_table_visit@@Base+0xa14>
   28d38:	add	r1, r0, #1
   28d3c:	cmp	r1, r5
   28d40:	beq	28cbc <fb_symbol_table_visit@@Base+0x7ac>
   28d44:	ldrb	ip, [r3, #1]!
   28d48:	cmp	ip, #46	; 0x2e
   28d4c:	beq	28edc <fb_symbol_table_visit@@Base+0x9cc>
   28d50:	mov	r0, r1
   28d54:	b	28d38 <fb_symbol_table_visit@@Base+0x828>
   28d58:	ldr	sl, [sp, #4]
   28d5c:	mov	fp, r7
   28d60:	adds	r3, r5, #0
   28d64:	movne	r3, #1
   28d68:	adds	r2, sl, #0
   28d6c:	movne	r2, #1
   28d70:	tst	r3, r2
   28d74:	beq	28dc0 <fb_symbol_table_visit@@Base+0x8b0>
   28d78:	ldr	r3, [r5, #4]
   28d7c:	ldr	r2, [r3, #4]
   28d80:	ldr	r1, [sl, #4]
   28d84:	ldr	r0, [r1, #4]
   28d88:	cmp	r2, r0
   28d8c:	bne	28dd0 <fb_symbol_table_visit@@Base+0x8c0>
   28d90:	ldr	r1, [r1]
   28d94:	ldr	r0, [r3]
   28d98:	bl	14130 <strncmp@plt>
   28d9c:	cmp	r0, #0
   28da0:	bne	28dd0 <fb_symbol_table_visit@@Base+0x8c0>
   28da4:	ldr	r5, [r5]
   28da8:	ldr	sl, [sl]
   28dac:	adds	fp, fp, #1
   28db0:	bne	28d60 <fb_symbol_table_visit@@Base+0x850>
   28db4:	clz	r5, r5
   28db8:	lsr	r5, r5, #5
   28dbc:	b	28dc8 <fb_symbol_table_visit@@Base+0x8b8>
   28dc0:	orr	r5, r3, r2
   28dc4:	eor	r5, r5, #1
   28dc8:	cmp	r5, #0
   28dcc:	bne	28ec0 <fb_symbol_table_visit@@Base+0x9b0>
   28dd0:	and	r3, r9, r4
   28dd4:	ldr	r6, [r8, r3, lsl #2]
   28dd8:	add	r4, r4, #1
   28ddc:	cmp	r6, #0
   28de0:	beq	28ec0 <fb_symbol_table_visit@@Base+0x9b0>
   28de4:	cmp	r6, #2
   28de8:	beq	28dd0 <fb_symbol_table_visit@@Base+0x8c0>
   28dec:	ldr	r5, [r6]
   28df0:	cmp	r7, #0
   28df4:	ble	28d58 <fb_symbol_table_visit@@Base+0x848>
   28df8:	cmp	r5, #0
   28dfc:	beq	28dd0 <fb_symbol_table_visit@@Base+0x8c0>
   28e00:	ldr	r3, [r5, #4]
   28e04:	ldr	r2, [r3]
   28e08:	ldr	lr, [r3, #4]
   28e0c:	ldr	r3, [sp, #8]
   28e10:	cmp	r3, lr
   28e14:	bcc	28dd0 <fb_symbol_table_visit@@Base+0x8c0>
   28e18:	ldr	sl, [sp, #4]
   28e1c:	mov	fp, r3
   28e20:	cmp	lr, #0
   28e24:	beq	28e60 <fb_symbol_table_visit@@Base+0x950>
   28e28:	ldrb	r1, [r2]
   28e2c:	ldrb	r3, [sl]
   28e30:	cmp	r1, r3
   28e34:	bne	28dd0 <fb_symbol_table_visit@@Base+0x8c0>
   28e38:	mov	r1, sl
   28e3c:	mov	r3, #0
   28e40:	add	r3, r3, #1
   28e44:	cmp	r3, lr
   28e48:	beq	28e64 <fb_symbol_table_visit@@Base+0x954>
   28e4c:	ldrb	ip, [r2, #1]!
   28e50:	ldrb	r0, [r1, #1]!
   28e54:	cmp	ip, r0
   28e58:	beq	28e40 <fb_symbol_table_visit@@Base+0x930>
   28e5c:	b	28dd0 <fb_symbol_table_visit@@Base+0x8c0>
   28e60:	mov	r3, lr
   28e64:	cmp	lr, fp
   28e68:	beq	28eac <fb_symbol_table_visit@@Base+0x99c>
   28e6c:	ldrb	r3, [sl, r3]
   28e70:	cmp	r3, #46	; 0x2e
   28e74:	bne	28dd0 <fb_symbol_table_visit@@Base+0x8c0>
   28e78:	mvn	r3, lr
   28e7c:	add	fp, fp, r3
   28e80:	add	lr, lr, #1
   28e84:	add	sl, sl, lr
   28e88:	ldr	r5, [r5]
   28e8c:	cmp	r5, #0
   28e90:	beq	28dd0 <fb_symbol_table_visit@@Base+0x8c0>
   28e94:	ldr	r3, [r5, #4]
   28e98:	ldr	r2, [r3]
   28e9c:	ldr	lr, [r3, #4]
   28ea0:	cmp	lr, fp
   28ea4:	bls	28e20 <fb_symbol_table_visit@@Base+0x910>
   28ea8:	b	28dd0 <fb_symbol_table_visit@@Base+0x8c0>
   28eac:	ldr	r5, [r5]
   28eb0:	clz	r5, r5
   28eb4:	lsr	r5, r5, #5
   28eb8:	b	28dc8 <fb_symbol_table_visit@@Base+0x8b8>
   28ebc:	mov	r6, #0
   28ec0:	mov	r0, r6
   28ec4:	add	sp, sp, #20
   28ec8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   28ecc:	eor	r4, r4, #5376	; 0x1500
   28ed0:	eor	r4, r4, #5
   28ed4:	mul	r4, fp, r4
   28ed8:	b	28d0c <fb_symbol_table_visit@@Base+0x7fc>
   28edc:	cmp	r0, #0
   28ee0:	beq	28ecc <fb_symbol_table_visit@@Base+0x9bc>
   28ee4:	add	lr, r6, #1
   28ee8:	ldrb	ip, [r6]
   28eec:	cmp	ip, #0
   28ef0:	bne	28cd4 <fb_symbol_table_visit@@Base+0x7c4>
   28ef4:	eor	r4, r4, #5376	; 0x1500
   28ef8:	eor	r4, r4, #5
   28efc:	mul	r4, fp, r4
   28f00:	b	28d0c <fb_symbol_table_visit@@Base+0x7fc>
   28f04:	eor	r4, r4, #5376	; 0x1500
   28f08:	eor	r4, r4, #5
   28f0c:	ldr	r3, [pc, #80]	; 28f64 <fb_symbol_table_visit@@Base+0xa54>
   28f10:	mul	r4, r3, r4
   28f14:	b	28f40 <fb_symbol_table_visit@@Base+0xa30>
   28f18:	mov	r1, r5
   28f1c:	mvn	r0, #0
   28f20:	b	28cc4 <fb_symbol_table_visit@@Base+0x7b4>
   28f24:	mvn	r0, #0
   28f28:	mov	r1, sl
   28f2c:	b	28ee4 <fb_symbol_table_visit@@Base+0x9d4>
   28f30:	eor	r4, r4, #5376	; 0x1500
   28f34:	eor	r4, r4, #5
   28f38:	ldr	r3, [pc, #36]	; 28f64 <fb_symbol_table_visit@@Base+0xa54>
   28f3c:	mul	r4, r3, r4
   28f40:	and	r3, r9, r4
   28f44:	ldr	r6, [r8, r3, lsl #2]
   28f48:	cmp	r6, #0
   28f4c:	beq	28ec0 <fb_symbol_table_visit@@Base+0x9b0>
   28f50:	add	r4, r4, #1
   28f54:	str	r2, [sp, #8]
   28f58:	ldr	r7, [sp, #12]
   28f5c:	b	28de4 <fb_symbol_table_visit@@Base+0x8d4>
   28f60:	svccs	0x00693b52
   28f64:			; <UNDEFINED> instruction: 0x9e3779b1
   28f68:	svccs	0x00692e57
   28f6c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   28f70:	sub	sp, sp, #20
   28f74:	str	r1, [sp, #4]
   28f78:	ldr	r7, [r0]
   28f7c:	cmp	r7, #0
   28f80:	beq	292cc <fb_symbol_table_visit@@Base+0xdbc>
   28f84:	mov	sl, r2
   28f88:	ldr	r3, [r0, #12]
   28f8c:	sub	r3, r3, #1
   28f90:	str	r3, [sp, #8]
   28f94:	str	r2, [sp]
   28f98:	cmp	r2, #0
   28f9c:	ble	29034 <fb_symbol_table_visit@@Base+0xb24>
   28fa0:	mov	r6, r1
   28fa4:	mov	r5, r2
   28fa8:	mov	r4, #0
   28fac:	ldr	r9, [pc, #900]	; 29338 <fb_symbol_table_visit@@Base+0xe28>
   28fb0:	ldr	r8, [pc, #900]	; 2933c <fb_symbol_table_visit@@Base+0xe2c>
   28fb4:	mov	fp, r4
   28fb8:	b	290c0 <fb_symbol_table_visit@@Base+0xbb0>
   28fbc:	mov	r3, fp
   28fc0:	eor	r4, r4, r8
   28fc4:	eor	r3, r3, r4
   28fc8:	mul	r4, r6, r3
   28fcc:	ldr	lr, [lr]
   28fd0:	adds	r5, r5, #1
   28fd4:	beq	2910c <fb_symbol_table_visit@@Base+0xbfc>
   28fd8:	cmp	lr, #0
   28fdc:	beq	2910c <fb_symbol_table_visit@@Base+0xbfc>
   28fe0:	ldr	r3, [lr, #4]
   28fe4:	ldr	ip, [r3]
   28fe8:	ldr	r3, [r3, #4]
   28fec:	subs	r3, r3, #1
   28ff0:	beq	28fbc <fb_symbol_table_visit@@Base+0xaac>
   28ff4:	add	r1, ip, #1
   28ff8:	ldrb	r2, [ip]
   28ffc:	cmp	r2, #0
   29000:	beq	2902c <fb_symbol_table_visit@@Base+0xb1c>
   29004:	add	ip, ip, r3
   29008:	mov	r3, fp
   2900c:	add	r3, r3, r3, lsl #5
   29010:	eor	r3, r3, r2
   29014:	cmp	ip, r1
   29018:	beq	28fc0 <fb_symbol_table_visit@@Base+0xab0>
   2901c:	ldrb	r2, [r1], #1
   29020:	cmp	r2, #0
   29024:	bne	2900c <fb_symbol_table_visit@@Base+0xafc>
   29028:	b	28fc0 <fb_symbol_table_visit@@Base+0xab0>
   2902c:	mov	r3, fp
   29030:	b	28fc0 <fb_symbol_table_visit@@Base+0xab0>
   29034:	ldr	r3, [sp, #4]
   29038:	cmp	r3, #0
   2903c:	moveq	r4, #0
   29040:	beq	2910c <fb_symbol_table_visit@@Base+0xbfc>
   29044:	mov	r5, sl
   29048:	ldr	lr, [sp, #4]
   2904c:	mov	r4, #0
   29050:	ldr	fp, [pc, #744]	; 29340 <fb_symbol_table_visit@@Base+0xe30>
   29054:	ldr	r8, [pc, #732]	; 29338 <fb_symbol_table_visit@@Base+0xe28>
   29058:	ldr	r6, [pc, #732]	; 2933c <fb_symbol_table_visit@@Base+0xe2c>
   2905c:	b	28fe0 <fb_symbol_table_visit@@Base+0xad0>
   29060:	cmp	r1, #0
   29064:	beq	290fc <fb_symbol_table_visit@@Base+0xbec>
   29068:	add	lr, r6, #1
   2906c:	ldrb	ip, [r6]
   29070:	cmp	ip, #0
   29074:	beq	29318 <fb_symbol_table_visit@@Base+0xe08>
   29078:	add	r1, r6, r1
   2907c:	ldr	r3, [pc, #700]	; 29340 <fb_symbol_table_visit@@Base+0xe30>
   29080:	add	r3, r3, r3, lsl #5
   29084:	eor	r3, r3, ip
   29088:	cmp	r1, lr
   2908c:	beq	2909c <fb_symbol_table_visit@@Base+0xb8c>
   29090:	ldrb	ip, [lr], #1
   29094:	cmp	ip, #0
   29098:	bne	29080 <fb_symbol_table_visit@@Base+0xb70>
   2909c:	eor	r4, r4, r9
   290a0:	eor	r3, r3, r4
   290a4:	mul	r4, r8, r3
   290a8:	cmp	r5, r2
   290ac:	beq	2910c <fb_symbol_table_visit@@Base+0xbfc>
   290b0:	mvn	r3, r2
   290b4:	add	r5, r5, r3
   290b8:	add	r2, r2, #1
   290bc:	add	r6, r6, r2
   290c0:	cmp	r5, #0
   290c4:	beq	2930c <fb_symbol_table_visit@@Base+0xdfc>
   290c8:	ldrb	r3, [r6]
   290cc:	cmp	r3, #46	; 0x2e
   290d0:	movne	r3, r6
   290d4:	movne	r1, fp
   290d8:	beq	2932c <fb_symbol_table_visit@@Base+0xe1c>
   290dc:	add	r2, r1, #1
   290e0:	cmp	r2, r5
   290e4:	beq	29060 <fb_symbol_table_visit@@Base+0xb50>
   290e8:	ldrb	ip, [r3, #1]!
   290ec:	cmp	ip, #46	; 0x2e
   290f0:	beq	292e4 <fb_symbol_table_visit@@Base+0xdd4>
   290f4:	mov	r1, r2
   290f8:	b	290dc <fb_symbol_table_visit@@Base+0xbcc>
   290fc:	eor	r4, r4, #5376	; 0x1500
   29100:	eor	r4, r4, #5
   29104:	ldr	r3, [pc, #560]	; 2933c <fb_symbol_table_visit@@Base+0xe2c>
   29108:	mul	r4, r3, r4
   2910c:	ldr	r2, [sp, #8]
   29110:	mov	r3, r2
   29114:	and	r3, r3, r4
   29118:	add	r8, r7, r3, lsl #2
   2911c:	ldr	r6, [r7, r3, lsl #2]
   29120:	cmp	r6, #0
   29124:	beq	292c0 <fb_symbol_table_visit@@Base+0xdb0>
   29128:	str	r0, [sp, #12]
   2912c:	add	r4, r4, #1
   29130:	str	sl, [sp, #8]
   29134:	mov	r9, r2
   29138:	b	291cc <fb_symbol_table_visit@@Base+0xcbc>
   2913c:	ldr	sl, [sp, #4]
   29140:	ldr	fp, [sp]
   29144:	adds	r3, r5, #0
   29148:	movne	r3, #1
   2914c:	adds	r2, sl, #0
   29150:	movne	r2, #1
   29154:	tst	r3, r2
   29158:	beq	291a4 <fb_symbol_table_visit@@Base+0xc94>
   2915c:	ldr	r3, [r5, #4]
   29160:	ldr	r2, [r3, #4]
   29164:	ldr	r1, [sl, #4]
   29168:	ldr	r0, [r1, #4]
   2916c:	cmp	r2, r0
   29170:	bne	291b4 <fb_symbol_table_visit@@Base+0xca4>
   29174:	ldr	r1, [r1]
   29178:	ldr	r0, [r3]
   2917c:	bl	14130 <strncmp@plt>
   29180:	cmp	r0, #0
   29184:	bne	291b4 <fb_symbol_table_visit@@Base+0xca4>
   29188:	ldr	r5, [r5]
   2918c:	ldr	sl, [sl]
   29190:	adds	fp, fp, #1
   29194:	bne	29144 <fb_symbol_table_visit@@Base+0xc34>
   29198:	clz	r5, r5
   2919c:	lsr	r5, r5, #5
   291a0:	b	291ac <fb_symbol_table_visit@@Base+0xc9c>
   291a4:	orr	r5, r3, r2
   291a8:	eor	r5, r5, #1
   291ac:	cmp	r5, #0
   291b0:	bne	292a8 <fb_symbol_table_visit@@Base+0xd98>
   291b4:	and	r3, r9, r4
   291b8:	add	r8, r7, r3, lsl #2
   291bc:	ldr	r6, [r7, r3, lsl #2]
   291c0:	add	r4, r4, #1
   291c4:	cmp	r6, #0
   291c8:	beq	292c0 <fb_symbol_table_visit@@Base+0xdb0>
   291cc:	cmp	r6, #2
   291d0:	beq	291b4 <fb_symbol_table_visit@@Base+0xca4>
   291d4:	ldr	r5, [r6]
   291d8:	ldr	r3, [sp]
   291dc:	cmp	r3, #0
   291e0:	ble	2913c <fb_symbol_table_visit@@Base+0xc2c>
   291e4:	cmp	r5, #0
   291e8:	beq	291b4 <fb_symbol_table_visit@@Base+0xca4>
   291ec:	ldr	r3, [r5, #4]
   291f0:	ldr	r2, [r3]
   291f4:	ldr	lr, [r3, #4]
   291f8:	ldr	r3, [sp, #8]
   291fc:	cmp	r3, lr
   29200:	bcc	291b4 <fb_symbol_table_visit@@Base+0xca4>
   29204:	ldr	sl, [sp, #4]
   29208:	mov	fp, r3
   2920c:	cmp	lr, #0
   29210:	beq	2924c <fb_symbol_table_visit@@Base+0xd3c>
   29214:	ldrb	r1, [r2]
   29218:	ldrb	r3, [sl]
   2921c:	cmp	r1, r3
   29220:	bne	291b4 <fb_symbol_table_visit@@Base+0xca4>
   29224:	mov	r1, sl
   29228:	mov	r3, #0
   2922c:	add	r3, r3, #1
   29230:	cmp	r3, lr
   29234:	beq	29250 <fb_symbol_table_visit@@Base+0xd40>
   29238:	ldrb	ip, [r2, #1]!
   2923c:	ldrb	r0, [r1, #1]!
   29240:	cmp	ip, r0
   29244:	beq	2922c <fb_symbol_table_visit@@Base+0xd1c>
   29248:	b	291b4 <fb_symbol_table_visit@@Base+0xca4>
   2924c:	mov	r3, lr
   29250:	cmp	lr, fp
   29254:	beq	29298 <fb_symbol_table_visit@@Base+0xd88>
   29258:	ldrb	r3, [sl, r3]
   2925c:	cmp	r3, #46	; 0x2e
   29260:	bne	291b4 <fb_symbol_table_visit@@Base+0xca4>
   29264:	mvn	r3, lr
   29268:	add	fp, fp, r3
   2926c:	add	lr, lr, #1
   29270:	add	sl, sl, lr
   29274:	ldr	r5, [r5]
   29278:	cmp	r5, #0
   2927c:	beq	291b4 <fb_symbol_table_visit@@Base+0xca4>
   29280:	ldr	r3, [r5, #4]
   29284:	ldr	r2, [r3]
   29288:	ldr	lr, [r3, #4]
   2928c:	cmp	lr, fp
   29290:	bls	2920c <fb_symbol_table_visit@@Base+0xcfc>
   29294:	b	291b4 <fb_symbol_table_visit@@Base+0xca4>
   29298:	ldr	r5, [r5]
   2929c:	clz	r5, r5
   292a0:	lsr	r5, r5, #5
   292a4:	b	291ac <fb_symbol_table_visit@@Base+0xc9c>
   292a8:	mov	r3, #2
   292ac:	str	r3, [r8]
   292b0:	ldr	r2, [sp, #12]
   292b4:	ldr	r3, [r2, #8]
   292b8:	sub	r3, r3, #1
   292bc:	str	r3, [r2, #8]
   292c0:	mov	r0, r6
   292c4:	add	sp, sp, #20
   292c8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   292cc:	mov	r6, #0
   292d0:	b	292c0 <fb_symbol_table_visit@@Base+0xdb0>
   292d4:	eor	r4, r4, #5376	; 0x1500
   292d8:	eor	r4, r4, #5
   292dc:	mul	r4, r8, r4
   292e0:	b	290b0 <fb_symbol_table_visit@@Base+0xba0>
   292e4:	cmp	r1, #0
   292e8:	beq	292d4 <fb_symbol_table_visit@@Base+0xdc4>
   292ec:	add	lr, r6, #1
   292f0:	ldrb	ip, [r6]
   292f4:	cmp	ip, #0
   292f8:	bne	29078 <fb_symbol_table_visit@@Base+0xb68>
   292fc:	eor	r4, r4, #5376	; 0x1500
   29300:	eor	r4, r4, #5
   29304:	mul	r4, r8, r4
   29308:	b	290b0 <fb_symbol_table_visit@@Base+0xba0>
   2930c:	mov	r2, r5
   29310:	mvn	r1, #0
   29314:	b	29068 <fb_symbol_table_visit@@Base+0xb58>
   29318:	eor	r4, r4, #5376	; 0x1500
   2931c:	eor	r4, r4, #5
   29320:	ldr	r3, [pc, #20]	; 2933c <fb_symbol_table_visit@@Base+0xe2c>
   29324:	mul	r4, r3, r4
   29328:	b	2910c <fb_symbol_table_visit@@Base+0xbfc>
   2932c:	mvn	r1, #0
   29330:	mov	r2, fp
   29334:	b	292ec <fb_symbol_table_visit@@Base+0xddc>
   29338:	svccs	0x00693b52
   2933c:			; <UNDEFINED> instruction: 0x9e3779b1
   29340:	svccs	0x00692e57

00029344 <fb_scope_table_clear@@Base>:
   29344:	push	{r4, lr}
   29348:	bl	28578 <fb_symbol_table_visit@@Base+0x68>
   2934c:	pop	{r4, pc}

00029350 <fb_scope_table_destroy@@Base>:
   29350:	push	{r4, lr}
   29354:	mov	r4, r0
   29358:	cmp	r1, #0
   2935c:	beq	29364 <fb_scope_table_destroy@@Base+0x14>
   29360:	bl	2851c <fb_symbol_table_visit@@Base+0xc>
   29364:	mov	r0, r4
   29368:	bl	28578 <fb_symbol_table_visit@@Base+0x68>
   2936c:	pop	{r4, pc}

00029370 <fb_scope_table_init@@Base>:
   29370:	push	{r4, r5, r6, lr}
   29374:	mov	r5, r0
   29378:	cmp	r1, #2
   2937c:	bls	293c4 <fb_scope_table_init@@Base+0x54>
   29380:	mov	r4, #4
   29384:	mov	r2, #179	; 0xb3
   29388:	lsl	r4, r4, #1
   2938c:	mul	r3, r2, r4
   29390:	cmp	r1, r3, lsr #8
   29394:	bhi	29388 <fb_scope_table_init@@Base+0x18>
   29398:	mov	r1, #4
   2939c:	mov	r0, r4
   293a0:	bl	13fa4 <calloc@plt>
   293a4:	str	r0, [r5]
   293a8:	cmp	r0, #0
   293ac:	movne	r0, #0
   293b0:	strne	r0, [r5, #4]
   293b4:	strne	r4, [r5, #12]
   293b8:	strne	r0, [r5, #8]
   293bc:	mvneq	r0, #0
   293c0:	pop	{r4, r5, r6, pc}
   293c4:	mov	r4, #4
   293c8:	b	29398 <fb_scope_table_init@@Base+0x28>

000293cc <fb_scope_table_resize@@Base>:
   293cc:	push	{r4, lr}
   293d0:	bl	28ad8 <fb_symbol_table_visit@@Base+0x5c8>
   293d4:	pop	{r4, pc}

000293d8 <fb_scope_table_insert@@Base>:
   293d8:	push	{lr}		; (str lr, [sp, #-4]!)
   293dc:	sub	sp, sp, #12
   293e0:	ldr	ip, [sp, #16]
   293e4:	str	ip, [sp]
   293e8:	bl	285a8 <fb_symbol_table_visit@@Base+0x98>
   293ec:	add	sp, sp, #12
   293f0:	pop	{pc}		; (ldr pc, [sp], #4)

000293f4 <fb_scope_table_insert_item@@Base>:
   293f4:	push	{lr}		; (str lr, [sp, #-4]!)
   293f8:	sub	sp, sp, #12
   293fc:	mov	r3, r1
   29400:	ldr	r1, [r1]
   29404:	str	r2, [sp]
   29408:	mov	r2, #0
   2940c:	bl	285a8 <fb_symbol_table_visit@@Base+0x98>
   29410:	add	sp, sp, #12
   29414:	pop	{pc}		; (ldr pc, [sp], #4)

00029418 <fb_scope_table_find@@Base>:
   29418:	push	{r4, lr}
   2941c:	bl	28bd0 <fb_symbol_table_visit@@Base+0x6c0>
   29420:	pop	{r4, pc}

00029424 <fb_scope_table_find_item@@Base>:
   29424:	push	{r4, lr}
   29428:	mov	r2, #0
   2942c:	ldr	r1, [r1]
   29430:	bl	28bd0 <fb_symbol_table_visit@@Base+0x6c0>
   29434:	pop	{r4, pc}

00029438 <fb_scope_table_remove@@Base>:
   29438:	push	{r4, lr}
   2943c:	bl	28f6c <fb_symbol_table_visit@@Base+0xa5c>
   29440:	pop	{r4, pc}

00029444 <fb_scope_table_remove_item@@Base>:
   29444:	push	{r4, lr}
   29448:	mov	r2, #0
   2944c:	ldr	r1, [r1]
   29450:	bl	28f6c <fb_symbol_table_visit@@Base+0xa5c>
   29454:	pop	{r4, pc}

00029458 <fb_scope_table_visit@@Base>:
   29458:	push	{r4, lr}
   2945c:	bl	2851c <fb_symbol_table_visit@@Base+0xc>
   29460:	pop	{r4, pc}
   29464:	push	{r4, r5, r6, r7, r8, lr}
   29468:	ldr	r5, [r0]
   2946c:	ldr	r3, [r0, #12]
   29470:	cmp	r3, #0
   29474:	popeq	{r4, r5, r6, r7, r8, pc}
   29478:	mov	r8, r2
   2947c:	mov	r7, r1
   29480:	mov	r6, r0
   29484:	sub	r5, r5, #4
   29488:	mov	r4, #0
   2948c:	b	294a0 <fb_scope_table_visit@@Base+0x48>
   29490:	add	r4, r4, #1
   29494:	ldr	r3, [r6, #12]
   29498:	cmp	r3, r4
   2949c:	bls	294bc <fb_scope_table_visit@@Base+0x64>
   294a0:	ldr	r1, [r5, #4]!
   294a4:	cmp	r1, #0
   294a8:	cmpne	r1, #2
   294ac:	beq	29490 <fb_scope_table_visit@@Base+0x38>
   294b0:	mov	r0, r8
   294b4:	blx	r7
   294b8:	b	29490 <fb_scope_table_visit@@Base+0x38>
   294bc:	pop	{r4, r5, r6, r7, r8, pc}
   294c0:	push	{r4, lr}
   294c4:	mov	r4, r0
   294c8:	ldr	r0, [r0]
   294cc:	cmp	r0, #0
   294d0:	beq	294d8 <fb_scope_table_visit@@Base+0x80>
   294d4:	bl	13fd4 <free@plt>
   294d8:	mov	r3, #0
   294dc:	str	r3, [r4]
   294e0:	str	r3, [r4, #4]
   294e4:	str	r3, [r4, #8]
   294e8:	str	r3, [r4, #12]
   294ec:	pop	{r4, pc}
   294f0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   294f4:	sub	sp, sp, #28
   294f8:	str	r1, [sp, #8]
   294fc:	cmp	r3, #0
   29500:	str	r3, [sp, #12]
   29504:	beq	295b4 <fb_scope_table_visit@@Base+0x15c>
   29508:	mov	fp, r0
   2950c:	mov	r8, r2
   29510:	ldr	r3, [sp, #12]
   29514:	cmp	r3, #2
   29518:	beq	295c8 <fb_scope_table_visit@@Base+0x170>
   2951c:	ldr	r3, [sp, #12]
   29520:	cmp	r3, #1
   29524:	beq	295dc <fb_scope_table_visit@@Base+0x184>
   29528:	ldr	r1, [r0, #8]
   2952c:	ldr	r2, [r0, #12]
   29530:	mov	r3, #179	; 0xb3
   29534:	mul	r3, r3, r2
   29538:	cmp	r1, r3, lsr #8
   2953c:	bcc	29550 <fb_scope_table_visit@@Base+0xf8>
   29540:	lsl	r1, r1, #1
   29544:	bl	2970c <fb_scope_table_visit@@Base+0x2b4>
   29548:	cmp	r0, #0
   2954c:	bne	295f0 <fb_scope_table_visit@@Base+0x198>
   29550:	ldr	r6, [fp]
   29554:	ldr	r7, [fp, #12]
   29558:	sub	r7, r7, #1
   2955c:	add	r3, sp, #16
   29560:	str	r3, [sp, #4]
   29564:	ldr	r3, [pc, #380]	; 296e8 <fb_scope_table_visit@@Base+0x290>
   29568:	str	r3, [sp]
   2956c:	mov	r2, r8
   29570:	mov	r3, #0
   29574:	ldr	r0, [sp, #8]
   29578:	bl	383b0 <cmetrohash64_1@@Base>
   2957c:	ldr	r5, [sp, #16]
   29580:	and	r3, r7, r5
   29584:	ldr	r2, [sp, #64]	; 0x40
   29588:	sub	r2, r2, #2
   2958c:	cmp	r2, #1
   29590:	bls	2960c <fb_scope_table_visit@@Base+0x1b4>
   29594:	add	r9, r6, r3, lsl #2
   29598:	ldr	r4, [r6, r3, lsl #2]
   2959c:	cmp	r4, #0
   295a0:	moveq	sl, r9
   295a4:	beq	296c4 <fb_scope_table_visit@@Base+0x26c>
   295a8:	add	r5, r5, #1
   295ac:	mov	sl, #0
   295b0:	b	2967c <fb_scope_table_visit@@Base+0x224>
   295b4:	ldr	r3, [pc, #304]	; 296ec <fb_scope_table_visit@@Base+0x294>
   295b8:	mov	r2, #114	; 0x72
   295bc:	ldr	r1, [pc, #300]	; 296f0 <fb_scope_table_visit@@Base+0x298>
   295c0:	ldr	r0, [pc, #300]	; 296f4 <fb_scope_table_visit@@Base+0x29c>
   295c4:	bl	14148 <__assert_fail@plt>
   295c8:	ldr	r3, [pc, #284]	; 296ec <fb_scope_table_visit@@Base+0x294>
   295cc:	mov	r2, #115	; 0x73
   295d0:	ldr	r1, [pc, #280]	; 296f0 <fb_scope_table_visit@@Base+0x298>
   295d4:	ldr	r0, [pc, #284]	; 296f8 <fb_scope_table_visit@@Base+0x2a0>
   295d8:	bl	14148 <__assert_fail@plt>
   295dc:	ldr	r3, [pc, #264]	; 296ec <fb_scope_table_visit@@Base+0x294>
   295e0:	mov	r2, #116	; 0x74
   295e4:	ldr	r1, [pc, #260]	; 296f0 <fb_scope_table_visit@@Base+0x298>
   295e8:	ldr	r0, [pc, #268]	; 296fc <fb_scope_table_visit@@Base+0x2a4>
   295ec:	bl	14148 <__assert_fail@plt>
   295f0:	ldr	r2, [pc, #264]	; 29700 <fb_scope_table_visit@@Base+0x2a8>
   295f4:	ldr	r1, [pc, #264]	; 29704 <fb_scope_table_visit@@Base+0x2ac>
   295f8:	ldr	r3, [pc, #264]	; 29708 <fb_scope_table_visit@@Base+0x2b0>
   295fc:	ldr	r0, [r3]
   29600:	bl	14094 <fprintf@plt>
   29604:	mov	r0, #1
   29608:	bl	14070 <exit@plt>
   2960c:	ldr	r2, [fp, #8]
   29610:	add	r2, r2, #1
   29614:	str	r2, [fp, #8]
   29618:	add	r2, r6, r3, lsl #2
   2961c:	ldr	r3, [r6, r3, lsl #2]
   29620:	cmp	r3, #0
   29624:	cmpne	r3, #2
   29628:	beq	2964c <fb_scope_table_visit@@Base+0x1f4>
   2962c:	add	r5, r5, #1
   29630:	and	r3, r7, r5
   29634:	add	r2, r6, r3, lsl #2
   29638:	ldr	r3, [r6, r3, lsl #2]
   2963c:	add	r5, r5, #1
   29640:	cmp	r3, #0
   29644:	cmpne	r3, #2
   29648:	bne	29630 <fb_scope_table_visit@@Base+0x1d8>
   2964c:	ldr	r3, [sp, #12]
   29650:	str	r3, [r2]
   29654:	mov	r4, #0
   29658:	b	296dc <fb_scope_table_visit@@Base+0x284>
   2965c:	cmp	sl, #0
   29660:	moveq	sl, r9
   29664:	and	r3, r7, r5
   29668:	add	r9, r6, r3, lsl #2
   2966c:	ldr	r4, [r6, r3, lsl #2]
   29670:	add	r5, r5, #1
   29674:	cmp	r4, #0
   29678:	beq	296bc <fb_scope_table_visit@@Base+0x264>
   2967c:	cmp	r4, #2
   29680:	beq	2965c <fb_scope_table_visit@@Base+0x204>
   29684:	ldr	r3, [r4, #148]	; 0x94
   29688:	cmp	r8, r3
   2968c:	bne	29664 <fb_scope_table_visit@@Base+0x20c>
   29690:	mov	r2, r8
   29694:	ldr	r1, [r4, #144]	; 0x90
   29698:	ldr	r0, [sp, #8]
   2969c:	bl	13ff8 <memcmp@plt>
   296a0:	cmp	r0, #0
   296a4:	bne	29664 <fb_scope_table_visit@@Base+0x20c>
   296a8:	ldr	r3, [sp, #64]	; 0x40
   296ac:	cmp	r3, #0
   296b0:	ldreq	r3, [sp, #12]
   296b4:	streq	r3, [r9]
   296b8:	b	296dc <fb_scope_table_visit@@Base+0x284>
   296bc:	cmp	sl, #0
   296c0:	moveq	sl, r9
   296c4:	ldr	r3, [fp, #8]
   296c8:	add	r3, r3, #1
   296cc:	str	r3, [fp, #8]
   296d0:	ldr	r3, [sp, #12]
   296d4:	str	r3, [sl]
   296d8:	mov	r4, #0
   296dc:	mov	r0, r4
   296e0:	add	sp, sp, #28
   296e4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   296e8:	svccs	0x00693b52
   296ec:	andeq	r3, r5, r4, lsl #15
   296f0:	andeq	r3, r5, r8, asr r6
   296f4:	andeq	r3, r5, r8, lsr #13
   296f8:	andeq	r3, r5, r0, asr #13
   296fc:	ldrdeq	r3, [r5], -r8
   29700:	strdeq	r3, [r5], -r0
   29704:	andeq	r3, r5, r4, lsr #14
   29708:	andeq	r7, r6, r8, lsr #1
   2970c:	push	{r4, r5, r6, r7, lr}
   29710:	sub	sp, sp, #28
   29714:	mov	r6, r0
   29718:	ldr	r5, [r0]
   2971c:	ldr	r3, [r0, #8]
   29720:	cmp	r1, r3
   29724:	movcc	r1, r3
   29728:	cmp	r1, #2
   2972c:	bls	2978c <fb_scope_table_visit@@Base+0x334>
   29730:	mov	r4, #4
   29734:	mov	r2, #179	; 0xb3
   29738:	lsl	r4, r4, #1
   2973c:	mul	r3, r2, r4
   29740:	cmp	r1, r3, lsr #8
   29744:	bhi	29738 <fb_scope_table_visit@@Base+0x2e0>
   29748:	mov	r1, #4
   2974c:	mov	r0, r4
   29750:	bl	13fa4 <calloc@plt>
   29754:	str	r0, [sp, #8]
   29758:	cmp	r0, #0
   2975c:	beq	297f8 <fb_scope_table_visit@@Base+0x3a0>
   29760:	mov	r3, #0
   29764:	str	r3, [sp, #12]
   29768:	str	r4, [sp, #20]
   2976c:	str	r3, [sp, #16]
   29770:	ldr	r3, [r6, #12]
   29774:	cmp	r3, #0
   29778:	beq	297cc <fb_scope_table_visit@@Base+0x374>
   2977c:	sub	r5, r5, #4
   29780:	mov	r4, #0
   29784:	mov	r7, #3
   29788:	b	297a4 <fb_scope_table_visit@@Base+0x34c>
   2978c:	mov	r4, #4
   29790:	b	29748 <fb_scope_table_visit@@Base+0x2f0>
   29794:	add	r4, r4, #1
   29798:	ldr	r3, [r6, #12]
   2979c:	cmp	r3, r4
   297a0:	bls	297cc <fb_scope_table_visit@@Base+0x374>
   297a4:	ldr	r3, [r5, #4]!
   297a8:	cmp	r3, #0
   297ac:	cmpne	r3, #2
   297b0:	beq	29794 <fb_scope_table_visit@@Base+0x33c>
   297b4:	ldr	r2, [r3, #148]	; 0x94
   297b8:	ldr	r1, [r3, #144]	; 0x90
   297bc:	str	r7, [sp]
   297c0:	add	r0, sp, #8
   297c4:	bl	294f0 <fb_scope_table_visit@@Base+0x98>
   297c8:	b	29794 <fb_scope_table_visit@@Base+0x33c>
   297cc:	mov	r0, r6
   297d0:	bl	294c0 <fb_scope_table_visit@@Base+0x68>
   297d4:	add	ip, sp, #8
   297d8:	ldm	ip!, {r0, r1, r2, r3}
   297dc:	str	r0, [r6]
   297e0:	str	r1, [r6, #4]
   297e4:	str	r2, [r6, #8]
   297e8:	str	r3, [r6, #12]
   297ec:	mov	r0, #0
   297f0:	add	sp, sp, #28
   297f4:	pop	{r4, r5, r6, r7, pc}
   297f8:	mvn	r0, #0
   297fc:	b	297f0 <fb_scope_table_visit@@Base+0x398>
   29800:	push	{r4, r5, r6, r7, r8, r9, lr}
   29804:	sub	sp, sp, #20
   29808:	ldr	r8, [r0]
   2980c:	cmp	r8, #0
   29810:	beq	298a8 <fb_scope_table_visit@@Base+0x450>
   29814:	mov	r6, r2
   29818:	mov	r9, r1
   2981c:	ldr	r7, [r0, #12]
   29820:	sub	r7, r7, #1
   29824:	add	r3, sp, #8
   29828:	str	r3, [sp, #4]
   2982c:	ldr	r3, [pc, #124]	; 298b0 <fb_scope_table_visit@@Base+0x458>
   29830:	str	r3, [sp]
   29834:	mov	r3, #0
   29838:	mov	r0, r1
   2983c:	bl	383b0 <cmetrohash64_1@@Base>
   29840:	ldr	r5, [sp, #8]
   29844:	and	r3, r7, r5
   29848:	ldr	r4, [r8, r3, lsl #2]
   2984c:	cmp	r4, #0
   29850:	beq	2989c <fb_scope_table_visit@@Base+0x444>
   29854:	add	r5, r5, #1
   29858:	b	29870 <fb_scope_table_visit@@Base+0x418>
   2985c:	and	r3, r7, r5
   29860:	ldr	r4, [r8, r3, lsl #2]
   29864:	add	r5, r5, #1
   29868:	cmp	r4, #0
   2986c:	beq	2989c <fb_scope_table_visit@@Base+0x444>
   29870:	cmp	r4, #2
   29874:	beq	2985c <fb_scope_table_visit@@Base+0x404>
   29878:	ldr	r3, [r4, #148]	; 0x94
   2987c:	cmp	r6, r3
   29880:	bne	2985c <fb_scope_table_visit@@Base+0x404>
   29884:	mov	r2, r6
   29888:	ldr	r1, [r4, #144]	; 0x90
   2988c:	mov	r0, r9
   29890:	bl	13ff8 <memcmp@plt>
   29894:	cmp	r0, #0
   29898:	bne	2985c <fb_scope_table_visit@@Base+0x404>
   2989c:	mov	r0, r4
   298a0:	add	sp, sp, #20
   298a4:	pop	{r4, r5, r6, r7, r8, r9, pc}
   298a8:	mov	r4, #0
   298ac:	b	2989c <fb_scope_table_visit@@Base+0x444>
   298b0:	svccs	0x00693b52
   298b4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   298b8:	sub	sp, sp, #20
   298bc:	ldr	r6, [r0]
   298c0:	cmp	r6, #0
   298c4:	beq	2997c <fb_scope_table_visit@@Base+0x524>
   298c8:	mov	r7, r2
   298cc:	mov	sl, r1
   298d0:	mov	fp, r0
   298d4:	ldr	r8, [r0, #12]
   298d8:	sub	r8, r8, #1
   298dc:	add	r3, sp, #8
   298e0:	str	r3, [sp, #4]
   298e4:	ldr	r3, [pc, #152]	; 29984 <fb_scope_table_visit@@Base+0x52c>
   298e8:	str	r3, [sp]
   298ec:	mov	r3, #0
   298f0:	mov	r0, r1
   298f4:	bl	383b0 <cmetrohash64_1@@Base>
   298f8:	ldr	r5, [sp, #8]
   298fc:	and	r3, r8, r5
   29900:	add	r9, r6, r3, lsl #2
   29904:	ldr	r4, [r6, r3, lsl #2]
   29908:	cmp	r4, #0
   2990c:	beq	29970 <fb_scope_table_visit@@Base+0x518>
   29910:	add	r5, r5, #1
   29914:	b	29930 <fb_scope_table_visit@@Base+0x4d8>
   29918:	and	r3, r8, r5
   2991c:	add	r9, r6, r3, lsl #2
   29920:	ldr	r4, [r6, r3, lsl #2]
   29924:	add	r5, r5, #1
   29928:	cmp	r4, #0
   2992c:	beq	29970 <fb_scope_table_visit@@Base+0x518>
   29930:	cmp	r4, #2
   29934:	beq	29918 <fb_scope_table_visit@@Base+0x4c0>
   29938:	ldr	r3, [r4, #148]	; 0x94
   2993c:	cmp	r7, r3
   29940:	bne	29918 <fb_scope_table_visit@@Base+0x4c0>
   29944:	mov	r2, r7
   29948:	ldr	r1, [r4, #144]	; 0x90
   2994c:	mov	r0, sl
   29950:	bl	13ff8 <memcmp@plt>
   29954:	cmp	r0, #0
   29958:	bne	29918 <fb_scope_table_visit@@Base+0x4c0>
   2995c:	mov	r3, #2
   29960:	str	r3, [r9]
   29964:	ldr	r3, [fp, #8]
   29968:	sub	r3, r3, #1
   2996c:	str	r3, [fp, #8]
   29970:	mov	r0, r4
   29974:	add	sp, sp, #20
   29978:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2997c:	mov	r4, #0
   29980:	b	29970 <fb_scope_table_visit@@Base+0x518>
   29984:	svccs	0x00693b52

00029988 <fb_schema_table_clear@@Base>:
   29988:	push	{r4, lr}
   2998c:	bl	294c0 <fb_scope_table_visit@@Base+0x68>
   29990:	pop	{r4, pc}

00029994 <fb_schema_table_destroy@@Base>:
   29994:	push	{r4, lr}
   29998:	mov	r4, r0
   2999c:	cmp	r1, #0
   299a0:	beq	299a8 <fb_schema_table_destroy@@Base+0x14>
   299a4:	bl	29464 <fb_scope_table_visit@@Base+0xc>
   299a8:	mov	r0, r4
   299ac:	bl	294c0 <fb_scope_table_visit@@Base+0x68>
   299b0:	pop	{r4, pc}

000299b4 <fb_schema_table_init@@Base>:
   299b4:	push	{r4, r5, r6, lr}
   299b8:	mov	r5, r0
   299bc:	cmp	r1, #2
   299c0:	bls	29a08 <fb_schema_table_init@@Base+0x54>
   299c4:	mov	r4, #4
   299c8:	mov	r2, #179	; 0xb3
   299cc:	lsl	r4, r4, #1
   299d0:	mul	r3, r2, r4
   299d4:	cmp	r1, r3, lsr #8
   299d8:	bhi	299cc <fb_schema_table_init@@Base+0x18>
   299dc:	mov	r1, #4
   299e0:	mov	r0, r4
   299e4:	bl	13fa4 <calloc@plt>
   299e8:	str	r0, [r5]
   299ec:	cmp	r0, #0
   299f0:	movne	r0, #0
   299f4:	strne	r0, [r5, #4]
   299f8:	strne	r4, [r5, #12]
   299fc:	strne	r0, [r5, #8]
   29a00:	mvneq	r0, #0
   29a04:	pop	{r4, r5, r6, pc}
   29a08:	mov	r4, #4
   29a0c:	b	299dc <fb_schema_table_init@@Base+0x28>

00029a10 <fb_schema_table_resize@@Base>:
   29a10:	push	{r4, lr}
   29a14:	bl	2970c <fb_scope_table_visit@@Base+0x2b4>
   29a18:	pop	{r4, pc}

00029a1c <fb_schema_table_insert@@Base>:
   29a1c:	push	{lr}		; (str lr, [sp, #-4]!)
   29a20:	sub	sp, sp, #12
   29a24:	ldr	ip, [sp, #16]
   29a28:	str	ip, [sp]
   29a2c:	bl	294f0 <fb_scope_table_visit@@Base+0x98>
   29a30:	add	sp, sp, #12
   29a34:	pop	{pc}		; (ldr pc, [sp], #4)

00029a38 <fb_schema_table_insert_item@@Base>:
   29a38:	push	{lr}		; (str lr, [sp, #-4]!)
   29a3c:	sub	sp, sp, #12
   29a40:	mov	r3, r1
   29a44:	ldr	ip, [r1, #148]	; 0x94
   29a48:	ldr	r1, [r1, #144]	; 0x90
   29a4c:	str	r2, [sp]
   29a50:	mov	r2, ip
   29a54:	bl	294f0 <fb_scope_table_visit@@Base+0x98>
   29a58:	add	sp, sp, #12
   29a5c:	pop	{pc}		; (ldr pc, [sp], #4)

00029a60 <fb_schema_table_find@@Base>:
   29a60:	push	{r4, lr}
   29a64:	bl	29800 <fb_scope_table_visit@@Base+0x3a8>
   29a68:	pop	{r4, pc}

00029a6c <fb_schema_table_find_item@@Base>:
   29a6c:	push	{r4, lr}
   29a70:	ldr	r2, [r1, #148]	; 0x94
   29a74:	ldr	r1, [r1, #144]	; 0x90
   29a78:	bl	29800 <fb_scope_table_visit@@Base+0x3a8>
   29a7c:	pop	{r4, pc}

00029a80 <fb_schema_table_remove@@Base>:
   29a80:	push	{r4, lr}
   29a84:	bl	298b4 <fb_scope_table_visit@@Base+0x45c>
   29a88:	pop	{r4, pc}

00029a8c <fb_schema_table_remove_item@@Base>:
   29a8c:	push	{r4, lr}
   29a90:	ldr	r2, [r1, #148]	; 0x94
   29a94:	ldr	r1, [r1, #144]	; 0x90
   29a98:	bl	298b4 <fb_scope_table_visit@@Base+0x45c>
   29a9c:	pop	{r4, pc}

00029aa0 <fb_schema_table_visit@@Base>:
   29aa0:	push	{r4, lr}
   29aa4:	bl	29464 <fb_scope_table_visit@@Base+0xc>
   29aa8:	pop	{r4, pc}

00029aac <__flatcc_fb_copy_path_n@@Base>:
   29aac:	push	{r4, r5, r6, lr}
   29ab0:	mov	r6, r0
   29ab4:	mov	r4, r1
   29ab8:	mov	r2, r1
   29abc:	mov	r1, #0
   29ac0:	bl	140d0 <memchr@plt>
   29ac4:	cmp	r0, #0
   29ac8:	subne	r4, r0, r6
   29acc:	add	r0, r4, #1
   29ad0:	bl	14040 <malloc@plt>
   29ad4:	subs	r5, r0, #0
   29ad8:	beq	29af4 <__flatcc_fb_copy_path_n@@Base+0x48>
   29adc:	mov	r2, r4
   29ae0:	mov	r1, r6
   29ae4:	mov	r0, r5
   29ae8:	bl	13fe0 <memcpy@plt>
   29aec:	mov	r3, #0
   29af0:	strb	r3, [r5, r4]
   29af4:	mov	r0, r5
   29af8:	pop	{r4, r5, r6, pc}

00029afc <__flatcc_fb_copy_path@@Base>:
   29afc:	push	{r4, r5, r6, lr}
   29b00:	mov	r6, r0
   29b04:	bl	1407c <strlen@plt>
   29b08:	mov	r5, r0
   29b0c:	add	r0, r0, #1
   29b10:	bl	14040 <malloc@plt>
   29b14:	subs	r4, r0, #0
   29b18:	beq	29b34 <__flatcc_fb_copy_path@@Base+0x38>
   29b1c:	mov	r2, r5
   29b20:	mov	r1, r6
   29b24:	mov	r0, r4
   29b28:	bl	13fe0 <memcpy@plt>
   29b2c:	mov	r3, #0
   29b30:	strb	r3, [r4, r5]
   29b34:	mov	r0, r4
   29b38:	pop	{r4, r5, r6, pc}

00029b3c <__flatcc_fb_chomp@@Base>:
   29b3c:	push	{r4, r5, r6, r7, r8, lr}
   29b40:	mov	r7, r0
   29b44:	mov	r4, r1
   29b48:	subs	r5, r2, #0
   29b4c:	moveq	r0, #0
   29b50:	beq	29b5c <__flatcc_fb_chomp@@Base+0x20>
   29b54:	mov	r0, r5
   29b58:	bl	1407c <strlen@plt>
   29b5c:	cmp	r0, r4
   29b60:	bcs	29b80 <__flatcc_fb_chomp@@Base+0x44>
   29b64:	sub	r6, r4, r0
   29b68:	mov	r2, r0
   29b6c:	mov	r1, r5
   29b70:	add	r0, r7, r6
   29b74:	bl	14130 <strncmp@plt>
   29b78:	cmp	r0, #0
   29b7c:	moveq	r4, r6
   29b80:	mov	r0, r4
   29b84:	pop	{r4, r5, r6, r7, r8, pc}

00029b88 <__flatcc_fb_create_join_path_n@@Base>:
   29b88:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   29b8c:	mov	r9, r0
   29b90:	mov	r4, r1
   29b94:	mov	sl, r2
   29b98:	mov	r7, r3
   29b9c:	ldr	r8, [sp, #32]
   29ba0:	cmp	r8, #0
   29ba4:	moveq	r6, #0
   29ba8:	beq	29bb8 <__flatcc_fb_create_join_path_n@@Base+0x30>
   29bac:	mov	r0, r8
   29bb0:	bl	1407c <strlen@plt>
   29bb4:	mov	r6, r0
   29bb8:	cmp	r9, #0
   29bbc:	beq	29c88 <__flatcc_fb_create_join_path_n@@Base+0x100>
   29bc0:	cmp	r7, #0
   29bc4:	beq	29bec <__flatcc_fb_create_join_path_n@@Base+0x64>
   29bc8:	ldrb	r3, [sl]
   29bcc:	cmp	r3, #92	; 0x5c
   29bd0:	cmpne	r3, #47	; 0x2f
   29bd4:	beq	29c90 <__flatcc_fb_create_join_path_n@@Base+0x108>
   29bd8:	cmp	r7, #1
   29bdc:	bls	29bec <__flatcc_fb_create_join_path_n@@Base+0x64>
   29be0:	ldrb	r3, [sl, #1]
   29be4:	cmp	r3, #58	; 0x3a
   29be8:	beq	29cc0 <__flatcc_fb_create_join_path_n@@Base+0x138>
   29bec:	ldr	r3, [sp, #36]	; 0x24
   29bf0:	cmp	r3, #0
   29bf4:	beq	29c94 <__flatcc_fb_create_join_path_n@@Base+0x10c>
   29bf8:	cmp	r4, #0
   29bfc:	beq	29c94 <__flatcc_fb_create_join_path_n@@Base+0x10c>
   29c00:	add	r3, r9, r4
   29c04:	ldrb	r3, [r3, #-1]
   29c08:	cmp	r3, #92	; 0x5c
   29c0c:	cmpne	r3, #47	; 0x2f
   29c10:	beq	29c94 <__flatcc_fb_create_join_path_n@@Base+0x10c>
   29c14:	ldr	r3, [sp, #36]	; 0x24
   29c18:	add	r0, r3, #1
   29c1c:	add	r0, r0, r7
   29c20:	add	r0, r0, r6
   29c24:	add	r0, r0, r4
   29c28:	bl	14040 <malloc@plt>
   29c2c:	subs	r5, r0, #0
   29c30:	beq	29c80 <__flatcc_fb_create_join_path_n@@Base+0xf8>
   29c34:	mov	r2, r4
   29c38:	mov	r1, r9
   29c3c:	mov	r0, r5
   29c40:	bl	13fe0 <memcpy@plt>
   29c44:	mov	r3, #47	; 0x2f
   29c48:	strb	r3, [r5, r4]
   29c4c:	add	r4, r4, #1
   29c50:	mov	r2, r7
   29c54:	mov	r1, sl
   29c58:	add	r0, r5, r4
   29c5c:	bl	13fe0 <memcpy@plt>
   29c60:	add	r4, r4, r7
   29c64:	mov	r2, r6
   29c68:	mov	r1, r8
   29c6c:	add	r0, r5, r4
   29c70:	bl	13fe0 <memcpy@plt>
   29c74:	add	r6, r5, r6
   29c78:	mov	r3, #0
   29c7c:	strb	r3, [r6, r4]
   29c80:	mov	r0, r5
   29c84:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   29c88:	mov	r4, #0
   29c8c:	b	29c94 <__flatcc_fb_create_join_path_n@@Base+0x10c>
   29c90:	mov	r4, #0
   29c94:	add	r0, r7, #1
   29c98:	add	r0, r0, r6
   29c9c:	add	r0, r0, r4
   29ca0:	bl	14040 <malloc@plt>
   29ca4:	subs	r5, r0, #0
   29ca8:	beq	29c80 <__flatcc_fb_create_join_path_n@@Base+0xf8>
   29cac:	mov	r2, r4
   29cb0:	mov	r1, r9
   29cb4:	mov	r0, r5
   29cb8:	bl	13fe0 <memcpy@plt>
   29cbc:	b	29c50 <__flatcc_fb_create_join_path_n@@Base+0xc8>
   29cc0:	mov	r4, #0
   29cc4:	b	29c94 <__flatcc_fb_create_join_path_n@@Base+0x10c>

00029cc8 <__flatcc_fb_create_join_path@@Base>:
   29cc8:	push	{r4, r5, r6, r7, r8, lr}
   29ccc:	sub	sp, sp, #8
   29cd0:	mov	r4, r1
   29cd4:	mov	r7, r2
   29cd8:	mov	r8, r3
   29cdc:	subs	r5, r0, #0
   29ce0:	moveq	r6, #0
   29ce4:	beq	29cf4 <__flatcc_fb_create_join_path@@Base+0x2c>
   29ce8:	mov	r0, r5
   29cec:	bl	1407c <strlen@plt>
   29cf0:	mov	r6, r0
   29cf4:	cmp	r4, #0
   29cf8:	beq	29d28 <__flatcc_fb_create_join_path@@Base+0x60>
   29cfc:	mov	r0, r4
   29d00:	bl	1407c <strlen@plt>
   29d04:	mov	r3, r0
   29d08:	str	r8, [sp, #4]
   29d0c:	str	r7, [sp]
   29d10:	mov	r2, r4
   29d14:	mov	r1, r6
   29d18:	mov	r0, r5
   29d1c:	bl	29b88 <__flatcc_fb_create_join_path_n@@Base>
   29d20:	add	sp, sp, #8
   29d24:	pop	{r4, r5, r6, r7, r8, pc}
   29d28:	mov	r3, #0
   29d2c:	b	29d08 <__flatcc_fb_create_join_path@@Base+0x40>

00029d30 <__flatcc_fb_create_path_ext_n@@Base>:
   29d30:	push	{lr}		; (str lr, [sp, #-4]!)
   29d34:	sub	sp, sp, #12
   29d38:	mov	ip, #0
   29d3c:	str	ip, [sp, #4]
   29d40:	str	r2, [sp]
   29d44:	mov	r3, r1
   29d48:	mov	r2, r0
   29d4c:	mov	r1, ip
   29d50:	mov	r0, ip
   29d54:	bl	29b88 <__flatcc_fb_create_join_path_n@@Base>
   29d58:	add	sp, sp, #12
   29d5c:	pop	{pc}		; (ldr pc, [sp], #4)

00029d60 <__flatcc_fb_create_path_ext@@Base>:
   29d60:	push	{r4, lr}
   29d64:	mov	r3, #0
   29d68:	mov	r2, r1
   29d6c:	mov	r1, r0
   29d70:	mov	r0, r3
   29d74:	bl	29cc8 <__flatcc_fb_create_join_path@@Base>
   29d78:	pop	{r4, pc}

00029d7c <__flatcc_fb_create_make_path_n@@Base>:
   29d7c:	push	{r4, r5, r6, lr}
   29d80:	mov	r4, r0
   29d84:	cmp	r1, #1
   29d88:	beq	29df0 <__flatcc_fb_create_make_path_n@@Base+0x74>
   29d8c:	cmp	r1, #1
   29d90:	bls	29e00 <__flatcc_fb_create_make_path_n@@Base+0x84>
   29d94:	subs	r5, r1, #1
   29d98:	movne	r3, r0
   29d9c:	addne	r0, r0, r5
   29da0:	bne	29e40 <__flatcc_fb_create_make_path_n@@Base+0xc4>
   29da4:	ldrb	r0, [r4]
   29da8:	add	r1, r1, #1
   29dac:	cmp	r0, #32
   29db0:	movne	r0, r1
   29db4:	addeq	r0, r1, #1
   29db8:	bl	14040 <malloc@plt>
   29dbc:	cmp	r0, #0
   29dc0:	popeq	{r4, r5, r6, pc}
   29dc4:	mov	r3, r5
   29dc8:	ldrb	r1, [r4, r5]
   29dcc:	cmp	r1, #32
   29dd0:	moveq	r2, #92	; 0x5c
   29dd4:	strbeq	r2, [r0, r3]
   29dd8:	addeq	r3, r3, #1
   29ddc:	mov	r2, r0
   29de0:	strb	r1, [r2, r3]!
   29de4:	mov	r3, #0
   29de8:	strb	r3, [r2, #1]
   29dec:	pop	{r4, r5, r6, pc}
   29df0:	ldrb	r5, [r0]
   29df4:	cmp	r5, #92	; 0x5c
   29df8:	cmpne	r5, #32
   29dfc:	beq	29e0c <__flatcc_fb_create_make_path_n@@Base+0x90>
   29e00:	mov	r0, r4
   29e04:	bl	29aac <__flatcc_fb_copy_path_n@@Base>
   29e08:	pop	{r4, r5, r6, pc}
   29e0c:	mov	r0, #3
   29e10:	bl	14040 <malloc@plt>
   29e14:	cmp	r0, #0
   29e18:	movne	r3, #92	; 0x5c
   29e1c:	strbne	r3, [r0]
   29e20:	strbne	r5, [r0, #1]
   29e24:	movne	r3, #0
   29e28:	strbne	r3, [r0, #2]
   29e2c:	pop	{r4, r5, r6, pc}
   29e30:	cmp	r2, #32
   29e34:	addeq	r1, r1, #1
   29e38:	cmp	r3, r0
   29e3c:	beq	29e5c <__flatcc_fb_create_make_path_n@@Base+0xe0>
   29e40:	ldrb	r2, [r3], #1
   29e44:	cmp	r2, #92	; 0x5c
   29e48:	bne	29e30 <__flatcc_fb_create_make_path_n@@Base+0xb4>
   29e4c:	ldrb	ip, [r3]
   29e50:	cmp	ip, #32
   29e54:	addeq	r1, r1, #1
   29e58:	b	29e30 <__flatcc_fb_create_make_path_n@@Base+0xb4>
   29e5c:	add	r6, r4, r5
   29e60:	ldrb	r0, [r4, r5]
   29e64:	add	r1, r1, #1
   29e68:	cmp	r0, #32
   29e6c:	movne	r0, r1
   29e70:	addeq	r0, r1, #1
   29e74:	bl	14040 <malloc@plt>
   29e78:	cmp	r0, #0
   29e7c:	popeq	{r4, r5, r6, pc}
   29e80:	mov	r1, r4
   29e84:	mov	ip, r6
   29e88:	mov	r3, #0
   29e8c:	mov	r6, #92	; 0x5c
   29e90:	b	29eb4 <__flatcc_fb_create_make_path_n@@Base+0x138>
   29e94:	ldrb	lr, [r1]
   29e98:	cmp	lr, #32
   29e9c:	strbeq	r6, [r0, r3]
   29ea0:	addeq	r3, r3, #1
   29ea4:	strb	r2, [r0, r3]
   29ea8:	add	r3, r3, #1
   29eac:	cmp	r1, ip
   29eb0:	beq	29dc8 <__flatcc_fb_create_make_path_n@@Base+0x4c>
   29eb4:	ldrb	r2, [r1], #1
   29eb8:	cmp	r2, #92	; 0x5c
   29ebc:	beq	29e94 <__flatcc_fb_create_make_path_n@@Base+0x118>
   29ec0:	cmp	r2, #32
   29ec4:	strbeq	r6, [r0, r3]
   29ec8:	addeq	r3, r3, #1
   29ecc:	b	29ea4 <__flatcc_fb_create_make_path_n@@Base+0x128>

00029ed0 <__flatcc_fb_create_make_path@@Base>:
   29ed0:	push	{r4, lr}
   29ed4:	mov	r4, r0
   29ed8:	bl	1407c <strlen@plt>
   29edc:	mov	r1, r0
   29ee0:	mov	r0, r4
   29ee4:	bl	29d7c <__flatcc_fb_create_make_path_n@@Base>
   29ee8:	pop	{r4, pc}

00029eec <__flatcc_fb_find_basename@@Base>:
   29eec:	add	r1, r0, r1
   29ef0:	cmp	r0, r1
   29ef4:	beq	29f30 <__flatcc_fb_find_basename@@Base+0x44>
   29ef8:	sub	r3, r1, #1
   29efc:	ldrb	r2, [r1, #-1]
   29f00:	cmp	r2, #92	; 0x5c
   29f04:	cmpne	r2, #47	; 0x2f
   29f08:	beq	29f3c <__flatcc_fb_find_basename@@Base+0x50>
   29f0c:	cmp	r0, r3
   29f10:	beq	29f34 <__flatcc_fb_find_basename@@Base+0x48>
   29f14:	sub	r1, r3, #1
   29f18:	ldrb	r2, [r3, #-1]
   29f1c:	cmp	r2, #92	; 0x5c
   29f20:	cmpne	r2, #47	; 0x2f
   29f24:	beq	29f34 <__flatcc_fb_find_basename@@Base+0x48>
   29f28:	mov	r3, r1
   29f2c:	b	29f0c <__flatcc_fb_find_basename@@Base+0x20>
   29f30:	mov	r3, r1
   29f34:	sub	r0, r3, r0
   29f38:	bx	lr
   29f3c:	mov	r3, r1
   29f40:	b	29f34 <__flatcc_fb_find_basename@@Base+0x48>

00029f44 <__flatcc_fb_create_basename@@Base>:
   29f44:	push	{r4, r5, r6, lr}
   29f48:	mov	r4, r0
   29f4c:	mov	r5, r1
   29f50:	mov	r6, r2
   29f54:	bl	29eec <__flatcc_fb_find_basename@@Base>
   29f58:	add	r4, r4, r0
   29f5c:	mov	r2, r6
   29f60:	sub	r1, r5, r0
   29f64:	mov	r0, r4
   29f68:	bl	29b3c <__flatcc_fb_chomp@@Base>
   29f6c:	mov	r6, r0
   29f70:	add	r0, r0, #1
   29f74:	bl	14040 <malloc@plt>
   29f78:	subs	r5, r0, #0
   29f7c:	beq	29f98 <__flatcc_fb_create_basename@@Base+0x54>
   29f80:	mov	r2, r6
   29f84:	mov	r1, r4
   29f88:	mov	r0, r5
   29f8c:	bl	13fe0 <memcpy@plt>
   29f90:	mov	r3, #0
   29f94:	strb	r3, [r5, r6]
   29f98:	mov	r0, r5
   29f9c:	pop	{r4, r5, r6, pc}

00029fa0 <__flatcc_fb_read_file@@Base>:
   29fa0:	push	{r4, r5, r6, r7, r8, r9, lr}
   29fa4:	sub	sp, sp, #12
   29fa8:	mov	r4, r1
   29fac:	subs	r9, r2, #0
   29fb0:	addeq	r9, sp, #4
   29fb4:	ldr	r1, [pc, #208]	; 2a08c <__flatcc_fb_read_file@@Base+0xec>
   29fb8:	bl	13fc8 <fopen@plt>
   29fbc:	subs	r6, r0, #0
   29fc0:	beq	2a054 <__flatcc_fb_read_file@@Base+0xb4>
   29fc4:	mov	r2, #2
   29fc8:	mov	r1, #0
   29fcc:	mov	r0, r6
   29fd0:	bl	14124 <fseek@plt>
   29fd4:	mov	r0, r6
   29fd8:	bl	13fec <ftell@plt>
   29fdc:	mov	r5, r0
   29fe0:	str	r0, [r9]
   29fe4:	cmp	r4, #0
   29fe8:	cmpne	r0, r4
   29fec:	bhi	2a05c <__flatcc_fb_read_file@@Base+0xbc>
   29ff0:	mov	r0, r6
   29ff4:	bl	14004 <rewind@plt>
   29ff8:	cmp	r5, #0
   29ffc:	movne	r0, r5
   2a000:	moveq	r0, #1
   2a004:	bl	14040 <malloc@plt>
   2a008:	subs	r7, r0, #0
   2a00c:	beq	2a060 <__flatcc_fb_read_file@@Base+0xc0>
   2a010:	mov	r4, #0
   2a014:	mov	r8, #1
   2a018:	b	2a020 <__flatcc_fb_read_file@@Base+0x80>
   2a01c:	add	r4, r4, r0
   2a020:	mov	r3, r6
   2a024:	sub	r2, r5, r4
   2a028:	mov	r1, r8
   2a02c:	add	r0, r7, r4
   2a030:	bl	14028 <fread@plt>
   2a034:	cmp	r0, #0
   2a038:	bne	2a01c <__flatcc_fb_read_file@@Base+0x7c>
   2a03c:	cmp	r4, r5
   2a040:	bne	2a060 <__flatcc_fb_read_file@@Base+0xc0>
   2a044:	mov	r0, r6
   2a048:	bl	140dc <fclose@plt>
   2a04c:	str	r4, [r9]
   2a050:	b	2a080 <__flatcc_fb_read_file@@Base+0xe0>
   2a054:	mov	r5, #0
   2a058:	b	2a078 <__flatcc_fb_read_file@@Base+0xd8>
   2a05c:	mov	r7, #0
   2a060:	mov	r0, r6
   2a064:	bl	140dc <fclose@plt>
   2a068:	cmp	r7, #0
   2a06c:	beq	2a078 <__flatcc_fb_read_file@@Base+0xd8>
   2a070:	mov	r0, r7
   2a074:	bl	13fd4 <free@plt>
   2a078:	str	r5, [r9]
   2a07c:	mov	r7, #0
   2a080:	mov	r0, r7
   2a084:	add	sp, sp, #12
   2a088:	pop	{r4, r5, r6, r7, r8, r9, pc}
   2a08c:	muleq	r5, ip, r7
   2a090:	ldr	r3, [r0]
   2a094:	cmp	r3, #0
   2a098:	beq	2a0bc <__flatcc_fb_read_file@@Base+0x11c>
   2a09c:	mov	r1, #0
   2a0a0:	b	2a0a8 <__flatcc_fb_read_file@@Base+0x108>
   2a0a4:	mov	r3, r2
   2a0a8:	ldr	r2, [r3]
   2a0ac:	str	r1, [r3]
   2a0b0:	mov	r1, r3
   2a0b4:	cmp	r2, #0
   2a0b8:	bne	2a0a4 <__flatcc_fb_read_file@@Base+0x104>
   2a0bc:	str	r3, [r0]
   2a0c0:	bx	lr

0002a0c4 <__flatcc_fb_default_error_out@@Base>:
   2a0c4:	push	{r4, lr}
   2a0c8:	mov	r0, r1
   2a0cc:	ldr	r3, [pc, #12]	; 2a0e0 <__flatcc_fb_default_error_out@@Base+0x1c>
   2a0d0:	ldr	r3, [r3]
   2a0d4:	mov	r1, #1
   2a0d8:	bl	1401c <fwrite@plt>
   2a0dc:	pop	{r4, pc}
   2a0e0:	andeq	r7, r6, r8, lsr #1
   2a0e4:	push	{r4, r5, r6, r7, r8, lr}
   2a0e8:	mov	r4, r0
   2a0ec:	mov	r7, r1
   2a0f0:	mov	r5, r2
   2a0f4:	mov	r6, r3
   2a0f8:	ldr	r0, [r0, #20]
   2a0fc:	ldr	r1, [r4, #28]
   2a100:	add	r8, r1, r1, lsl #2
   2a104:	lsl	r8, r8, #2
   2a108:	add	r3, r0, r8
   2a10c:	str	r3, [r4, #24]
   2a110:	ldr	r2, [r4, #40]	; 0x28
   2a114:	cmp	r3, r2
   2a118:	beq	2a158 <__flatcc_fb_default_error_out@@Base+0x94>
   2a11c:	ldr	r2, [r4, #40]	; 0x28
   2a120:	str	r7, [r2, #16]
   2a124:	str	r5, [r2]
   2a128:	sub	r6, r6, r5
   2a12c:	str	r6, [r2, #4]
   2a130:	ldr	r3, [r4, #64]	; 0x40
   2a134:	str	r3, [r2, #8]
   2a138:	ldr	r3, [r4, #60]	; 0x3c
   2a13c:	sub	r5, r5, r3
   2a140:	add	r5, r5, #1
   2a144:	str	r5, [r2, #12]
   2a148:	ldr	r3, [r4, #40]	; 0x28
   2a14c:	add	r3, r3, #20
   2a150:	str	r3, [r4, #40]	; 0x28
   2a154:	pop	{r4, r5, r6, r7, r8, pc}
   2a158:	cmp	r1, #0
   2a15c:	lslne	r1, r1, #1
   2a160:	moveq	r1, #1024	; 0x400
   2a164:	str	r1, [r4, #28]
   2a168:	add	r1, r1, r1, lsl #2
   2a16c:	lsl	r1, r1, #2
   2a170:	bl	14010 <realloc@plt>
   2a174:	str	r0, [r4, #20]
   2a178:	cmp	r0, #0
   2a17c:	beq	2a19c <__flatcc_fb_default_error_out@@Base+0xd8>
   2a180:	ldr	r3, [r4, #28]
   2a184:	add	r3, r3, r3, lsl #2
   2a188:	add	r3, r0, r3, lsl #2
   2a18c:	str	r3, [r4, #24]
   2a190:	add	r0, r0, r8
   2a194:	str	r0, [r4, #40]	; 0x28
   2a198:	b	2a11c <__flatcc_fb_default_error_out@@Base+0x58>
   2a19c:	ldr	r3, [pc, #24]	; 2a1bc <__flatcc_fb_default_error_out@@Base+0xf8>
   2a1a0:	ldr	r3, [r3]
   2a1a4:	mov	r2, #34	; 0x22
   2a1a8:	mov	r1, #1
   2a1ac:	ldr	r0, [pc, #12]	; 2a1c0 <__flatcc_fb_default_error_out@@Base+0xfc>
   2a1b0:	bl	1401c <fwrite@plt>
   2a1b4:	mov	r0, #1
   2a1b8:	bl	14070 <exit@plt>
   2a1bc:	andeq	r7, r6, r8, lsr #1
   2a1c0:	strdeq	ip, [r3], -ip	; <UNPREDICTABLE>
   2a1c4:	push	{r4, lr}
   2a1c8:	add	r0, r1, #4
   2a1cc:	bl	283ec <fb_symbol_table_clear@@Base>
   2a1d0:	pop	{r4, pc}
   2a1d4:	push	{r4, r5, r6, r7, r8, lr}
   2a1d8:	mov	r4, r0
   2a1dc:	ldr	r3, [r0, #40]	; 0x28
   2a1e0:	add	r5, r3, #20
   2a1e4:	str	r5, [r0, #40]	; 0x28
   2a1e8:	ldr	r2, [r0, #24]
   2a1ec:	cmp	r5, r2
   2a1f0:	beq	2a210 <__flatcc_fb_default_error_out@@Base+0x14c>
   2a1f4:	ldr	r3, [r3, #36]	; 0x24
   2a1f8:	cmn	r3, #964	; 0x3c4
   2a1fc:	moveq	r7, #1
   2a200:	moveq	r6, #65536	; 0x10000
   2a204:	beq	2a288 <__flatcc_fb_default_error_out@@Base+0x1c4>
   2a208:	mov	r0, r5
   2a20c:	pop	{r4, r5, r6, r7, r8, pc}
   2a210:	str	r3, [r4, #40]	; 0x28
   2a214:	ldr	r3, [pc, #180]	; 2a2d0 <__flatcc_fb_default_error_out@@Base+0x20c>
   2a218:	ldr	r2, [pc, #180]	; 2a2d4 <__flatcc_fb_default_error_out@@Base+0x210>
   2a21c:	ldr	r1, [pc, #180]	; 2a2d8 <__flatcc_fb_default_error_out@@Base+0x214>
   2a220:	ldr	r0, [pc, #180]	; 2a2dc <__flatcc_fb_default_error_out@@Base+0x218>
   2a224:	bl	14148 <__assert_fail@plt>
   2a228:	ldr	r3, [pc, #176]	; 2a2e0 <__flatcc_fb_default_error_out@@Base+0x21c>
   2a22c:	ldr	r3, [r3]
   2a230:	mov	r2, #34	; 0x22
   2a234:	mov	r1, #1
   2a238:	ldr	r0, [pc, #164]	; 2a2e4 <__flatcc_fb_default_error_out@@Base+0x220>
   2a23c:	bl	1401c <fwrite@plt>
   2a240:	mov	r0, #1
   2a244:	bl	14070 <exit@plt>
   2a248:	ldr	r2, [r4, #52]	; 0x34
   2a24c:	add	r2, r2, #16
   2a250:	str	r2, [r4, #52]	; 0x34
   2a254:	str	r5, [r3, #4]
   2a258:	ldr	r2, [r4, #36]	; 0x24
   2a25c:	str	r2, [r3]
   2a260:	str	r3, [r4, #36]	; 0x24
   2a264:	ldr	r3, [r4, #40]	; 0x28
   2a268:	add	r5, r3, #20
   2a26c:	str	r5, [r4, #40]	; 0x28
   2a270:	ldr	r2, [r4, #24]
   2a274:	cmp	r5, r2
   2a278:	beq	2a210 <__flatcc_fb_default_error_out@@Base+0x14c>
   2a27c:	ldr	r3, [r3, #36]	; 0x24
   2a280:	cmn	r3, #964	; 0x3c4
   2a284:	bne	2a208 <__flatcc_fb_default_error_out@@Base+0x144>
   2a288:	ldr	r3, [r4, #52]	; 0x34
   2a28c:	add	r1, r3, #16
   2a290:	ldr	r2, [r4, #44]	; 0x2c
   2a294:	cmp	r1, r2
   2a298:	bls	2a248 <__flatcc_fb_default_error_out@@Base+0x184>
   2a29c:	mov	r1, r7
   2a2a0:	mov	r0, r6
   2a2a4:	bl	13fa4 <calloc@plt>
   2a2a8:	cmp	r0, #0
   2a2ac:	beq	2a228 <__flatcc_fb_default_error_out@@Base+0x164>
   2a2b0:	ldr	r3, [r4, #48]	; 0x30
   2a2b4:	str	r3, [r0]
   2a2b8:	str	r0, [r4, #48]	; 0x30
   2a2bc:	add	r3, r0, #16
   2a2c0:	str	r3, [r4, #52]	; 0x34
   2a2c4:	add	r0, r0, #65536	; 0x10000
   2a2c8:	str	r0, [r4, #44]	; 0x2c
   2a2cc:	b	2a248 <__flatcc_fb_default_error_out@@Base+0x184>
   2a2d0:	andeq	r3, r5, r0, lsr #15
   2a2d4:	andeq	r0, r0, r5, asr r1
   2a2d8:	andeq	r3, r5, r8, asr #17
   2a2dc:	andeq	r5, r4, r0, ror #3
   2a2e0:	andeq	r7, r6, r8, lsr #1
   2a2e4:	strdeq	ip, [r3], -ip	; <UNPREDICTABLE>
   2a2e8:	ldr	r3, [r0, #40]	; 0x28
   2a2ec:	ldr	r3, [r3, #16]
   2a2f0:	cmp	r3, #0
   2a2f4:	bxeq	lr
   2a2f8:	push	{r4, r5, r6, lr}
   2a2fc:	mov	r6, r2
   2a300:	mov	r5, r1
   2a304:	mov	r4, r0
   2a308:	cmp	r1, r3
   2a30c:	beq	2a330 <__flatcc_fb_default_error_out@@Base+0x26c>
   2a310:	mov	r0, r4
   2a314:	bl	2a1d4 <__flatcc_fb_default_error_out@@Base+0x110>
   2a318:	ldr	r3, [r4, #40]	; 0x28
   2a31c:	ldr	r3, [r3, #16]
   2a320:	cmp	r3, #0
   2a324:	beq	2a350 <__flatcc_fb_default_error_out@@Base+0x28c>
   2a328:	cmp	r3, r5
   2a32c:	bne	2a310 <__flatcc_fb_default_error_out@@Base+0x24c>
   2a330:	cmp	r6, #0
   2a334:	bne	2a344 <__flatcc_fb_default_error_out@@Base+0x280>
   2a338:	mov	r3, #0
   2a33c:	str	r3, [r4, #36]	; 0x24
   2a340:	pop	{r4, r5, r6, pc}
   2a344:	mov	r0, r4
   2a348:	bl	2a1d4 <__flatcc_fb_default_error_out@@Base+0x110>
   2a34c:	b	2a338 <__flatcc_fb_default_error_out@@Base+0x274>
   2a350:	pop	{r4, r5, r6, pc}

0002a354 <__flatcc_fb_print_error@@Base>:
   2a354:	push	{r1, r2, r3}
   2a358:	push	{r4, r5, lr}
   2a35c:	sub	sp, sp, #208	; 0xd0
   2a360:	mov	r5, r0
   2a364:	add	r3, sp, #224	; 0xe0
   2a368:	str	r3, [sp, #204]	; 0xcc
   2a36c:	ldr	r2, [sp, #220]	; 0xdc
   2a370:	mov	r1, #200	; 0xc8
   2a374:	add	r0, sp, #4
   2a378:	bl	1410c <vsnprintf@plt>
   2a37c:	mov	r4, r0
   2a380:	cmp	r0, #199	; 0xc7
   2a384:	bgt	2a3b0 <__flatcc_fb_print_error@@Base+0x5c>
   2a388:	ldr	r3, [r5, #8]
   2a38c:	mov	r2, r4
   2a390:	add	r1, sp, #4
   2a394:	ldr	r0, [r5, #12]
   2a398:	blx	r3
   2a39c:	mov	r0, r4
   2a3a0:	add	sp, sp, #208	; 0xd0
   2a3a4:	pop	{r4, r5, lr}
   2a3a8:	add	sp, sp, #12
   2a3ac:	bx	lr
   2a3b0:	ldr	r3, [pc, #20]	; 2a3cc <__flatcc_fb_print_error@@Base+0x78>
   2a3b4:	ldr	r0, [r3]
   2a3b8:	str	r0, [sp, #199]	; 0xc7
   2a3bc:	ldrb	r3, [r3, #4]
   2a3c0:	strb	r3, [sp, #203]	; 0xcb
   2a3c4:	mov	r4, #199	; 0xc7
   2a3c8:	b	2a388 <__flatcc_fb_print_error@@Base+0x34>
   2a3cc:	andeq	r3, r5, r0, lsl r9

0002a3d0 <__flatcc_error_find_file_of_token@@Base>:
   2a3d0:	cmp	r0, #0
   2a3d4:	bne	2a3ec <__flatcc_error_find_file_of_token@@Base+0x1c>
   2a3d8:	ldr	r0, [pc, #52]	; 2a414 <__flatcc_error_find_file_of_token@@Base+0x44>
   2a3dc:	bx	lr
   2a3e0:	ldr	r0, [r0]
   2a3e4:	cmp	r0, #0
   2a3e8:	beq	2a40c <__flatcc_error_find_file_of_token@@Base+0x3c>
   2a3ec:	ldr	r3, [r0, #20]
   2a3f0:	cmp	r3, r1
   2a3f4:	bhi	2a3e0 <__flatcc_error_find_file_of_token@@Base+0x10>
   2a3f8:	ldr	r3, [r0, #24]
   2a3fc:	cmp	r1, r3
   2a400:	bcs	2a3e0 <__flatcc_error_find_file_of_token@@Base+0x10>
   2a404:	ldr	r0, [r0, #520]	; 0x208
   2a408:	bx	lr
   2a40c:	ldr	r0, [pc]	; 2a414 <__flatcc_error_find_file_of_token@@Base+0x44>
   2a410:	bx	lr
   2a414:	muleq	r4, r0, r4

0002a418 <__flatcc_error_report@@Base>:
   2a418:	push	{r4, r5, r6, r7, r8, r9, lr}
   2a41c:	sub	sp, sp, #44	; 0x2c
   2a420:	mov	r5, r0
   2a424:	mov	r6, r2
   2a428:	mov	r4, r3
   2a42c:	ldr	r7, [sp, #72]	; 0x48
   2a430:	mov	r8, r1
   2a434:	adds	r1, r1, #0
   2a438:	movne	r1, #1
   2a43c:	cmp	r7, #0
   2a440:	movne	r3, #0
   2a444:	andeq	r3, r1, #1
   2a448:	cmp	r3, #0
   2a44c:	ldrne	r7, [r8]
   2a450:	ldrne	r3, [r8, #4]
   2a454:	strne	r3, [sp, #76]	; 0x4c
   2a458:	ldr	r3, [pc, #356]	; 2a5c4 <__flatcc_error_report@@Base+0x1ac>
   2a45c:	cmp	r2, #0
   2a460:	moveq	r6, r3
   2a464:	cmp	r7, #0
   2a468:	moveq	r3, #0
   2a46c:	streq	r3, [sp, #76]	; 0x4c
   2a470:	ldreq	r7, [pc, #332]	; 2a5c4 <__flatcc_error_report@@Base+0x1ac>
   2a474:	clz	r3, r4
   2a478:	lsr	r3, r3, #5
   2a47c:	tst	r1, r3
   2a480:	bne	2a504 <__flatcc_error_report@@Base+0xec>
   2a484:	cmp	r4, #0
   2a488:	moveq	r1, #0
   2a48c:	andne	r1, r1, #1
   2a490:	cmp	r1, #0
   2a494:	bne	2a53c <__flatcc_error_report@@Base+0x124>
   2a498:	cmp	r8, #0
   2a49c:	movne	r3, #0
   2a4a0:	andeq	r3, r3, #1
   2a4a4:	cmp	r3, #0
   2a4a8:	bne	2a5a8 <__flatcc_error_report@@Base+0x190>
   2a4ac:	cmp	r4, #0
   2a4b0:	beq	2a5b8 <__flatcc_error_report@@Base+0x1a0>
   2a4b4:	mov	r1, r4
   2a4b8:	bl	2a3d0 <__flatcc_error_find_file_of_token@@Base>
   2a4bc:	ldr	r3, [r4]
   2a4c0:	str	r3, [sp, #12]
   2a4c4:	ldr	r3, [r4, #4]
   2a4c8:	str	r3, [sp, #8]
   2a4cc:	ldr	r3, [r4, #12]
   2a4d0:	str	r3, [sp, #4]
   2a4d4:	ldr	r3, [r4, #8]
   2a4d8:	str	r3, [sp]
   2a4dc:	mov	r3, r0
   2a4e0:	mov	r2, r6
   2a4e4:	ldr	r1, [pc, #220]	; 2a5c8 <__flatcc_error_report@@Base+0x1b0>
   2a4e8:	mov	r0, r5
   2a4ec:	bl	2a354 <__flatcc_fb_print_error@@Base>
   2a4f0:	ldr	r3, [r5, #108]	; 0x6c
   2a4f4:	add	r3, r3, #1
   2a4f8:	str	r3, [r5, #108]	; 0x6c
   2a4fc:	add	sp, sp, #44	; 0x2c
   2a500:	pop	{r4, r5, r6, r7, r8, r9, pc}
   2a504:	mov	r1, r8
   2a508:	bl	2a3d0 <__flatcc_error_find_file_of_token@@Base>
   2a50c:	ldr	r3, [r8, #8]
   2a510:	str	r6, [sp, #12]
   2a514:	str	r7, [sp, #8]
   2a518:	ldr	r2, [sp, #76]	; 0x4c
   2a51c:	str	r2, [sp, #4]
   2a520:	ldr	r2, [r8, #12]
   2a524:	str	r2, [sp]
   2a528:	mov	r2, r0
   2a52c:	ldr	r1, [pc, #152]	; 2a5cc <__flatcc_error_report@@Base+0x1b4>
   2a530:	mov	r0, r5
   2a534:	bl	2a354 <__flatcc_fb_print_error@@Base>
   2a538:	b	2a4f0 <__flatcc_error_report@@Base+0xd8>
   2a53c:	mov	r1, r8
   2a540:	bl	2a3d0 <__flatcc_error_find_file_of_token@@Base>
   2a544:	mov	r9, r0
   2a548:	mov	r1, r4
   2a54c:	mov	r0, r5
   2a550:	bl	2a3d0 <__flatcc_error_find_file_of_token@@Base>
   2a554:	ldr	r3, [r8, #8]
   2a558:	ldr	r2, [r4]
   2a55c:	str	r2, [sp, #32]
   2a560:	ldr	r2, [r4, #4]
   2a564:	str	r2, [sp, #28]
   2a568:	ldr	r2, [r4, #12]
   2a56c:	str	r2, [sp, #24]
   2a570:	ldr	r2, [r4, #8]
   2a574:	str	r2, [sp, #20]
   2a578:	str	r0, [sp, #16]
   2a57c:	str	r6, [sp, #12]
   2a580:	str	r7, [sp, #8]
   2a584:	ldr	r2, [sp, #76]	; 0x4c
   2a588:	str	r2, [sp, #4]
   2a58c:	ldr	r2, [r8, #12]
   2a590:	str	r2, [sp]
   2a594:	mov	r2, r9
   2a598:	ldr	r1, [pc, #48]	; 2a5d0 <__flatcc_error_report@@Base+0x1b8>
   2a59c:	mov	r0, r5
   2a5a0:	bl	2a354 <__flatcc_fb_print_error@@Base>
   2a5a4:	b	2a4f0 <__flatcc_error_report@@Base+0xd8>
   2a5a8:	mov	r2, r6
   2a5ac:	ldr	r1, [pc, #32]	; 2a5d4 <__flatcc_error_report@@Base+0x1bc>
   2a5b0:	bl	2a354 <__flatcc_fb_print_error@@Base>
   2a5b4:	b	2a4f0 <__flatcc_error_report@@Base+0xd8>
   2a5b8:	ldr	r1, [pc, #24]	; 2a5d8 <__flatcc_error_report@@Base+0x1c0>
   2a5bc:	bl	2a354 <__flatcc_fb_print_error@@Base>
   2a5c0:	b	2a4f0 <__flatcc_error_report@@Base+0xd8>
   2a5c4:	muleq	r4, r0, r4
   2a5c8:	andeq	r3, r5, r8, ror r9
   2a5cc:	andeq	r3, r5, r8, lsl r9
   2a5d0:	andeq	r3, r5, r8, lsr r9
   2a5d4:	andeq	r3, r5, ip, ror #18
   2a5d8:	muleq	r5, r8, r9
   2a5dc:	push	{lr}		; (str lr, [sp, #-4]!)
   2a5e0:	sub	sp, sp, #12
   2a5e4:	mov	ip, #0
   2a5e8:	str	ip, [sp, #4]
   2a5ec:	str	ip, [sp]
   2a5f0:	bl	2a418 <__flatcc_error_report@@Base>
   2a5f4:	add	sp, sp, #12
   2a5f8:	pop	{pc}		; (ldr pc, [sp], #4)
   2a5fc:	push	{r4, r5, r6, r7, r8, lr}
   2a600:	mov	r4, r0
   2a604:	mov	r5, r1
   2a608:	ldr	r6, [r0, #40]	; 0x28
   2a60c:	ldr	r3, [r0, #52]	; 0x34
   2a610:	add	r1, r3, #16
   2a614:	ldr	r2, [r0, #44]	; 0x2c
   2a618:	cmp	r1, r2
   2a61c:	bhi	2a64c <__flatcc_error_report@@Base+0x234>
   2a620:	ldr	r2, [r4, #52]	; 0x34
   2a624:	add	r2, r2, #16
   2a628:	str	r2, [r4, #52]	; 0x34
   2a62c:	str	r6, [r3, #4]
   2a630:	str	r3, [r5]
   2a634:	mov	r0, r4
   2a638:	bl	2a1d4 <__flatcc_fb_default_error_out@@Base+0x110>
   2a63c:	ldr	r6, [r5]
   2a640:	mov	r8, #1
   2a644:	mov	r7, #65536	; 0x10000
   2a648:	b	2a6f8 <__flatcc_error_report@@Base+0x2e0>
   2a64c:	mov	r1, #1
   2a650:	mov	r0, #65536	; 0x10000
   2a654:	bl	13fa4 <calloc@plt>
   2a658:	cmp	r0, #0
   2a65c:	beq	2a680 <__flatcc_error_report@@Base+0x268>
   2a660:	ldr	r3, [r4, #48]	; 0x30
   2a664:	str	r3, [r0]
   2a668:	str	r0, [r4, #48]	; 0x30
   2a66c:	add	r3, r0, #16
   2a670:	str	r3, [r4, #52]	; 0x34
   2a674:	add	r0, r0, #65536	; 0x10000
   2a678:	str	r0, [r4, #44]	; 0x2c
   2a67c:	b	2a620 <__flatcc_error_report@@Base+0x208>
   2a680:	ldr	r3, [pc, #236]	; 2a774 <__flatcc_error_report@@Base+0x35c>
   2a684:	ldr	r3, [r3]
   2a688:	mov	r2, #34	; 0x22
   2a68c:	mov	r1, #1
   2a690:	ldr	r0, [pc, #224]	; 2a778 <__flatcc_error_report@@Base+0x360>
   2a694:	bl	1401c <fwrite@plt>
   2a698:	mov	r0, #1
   2a69c:	bl	14070 <exit@plt>
   2a6a0:	mov	r3, #0
   2a6a4:	ldr	r2, [pc, #208]	; 2a77c <__flatcc_error_report@@Base+0x364>
   2a6a8:	mov	r1, r5
   2a6ac:	mov	r0, r4
   2a6b0:	bl	2a5dc <__flatcc_error_report@@Base+0x1c4>
   2a6b4:	pop	{r4, r5, r6, r7, r8, pc}
   2a6b8:	ldr	r3, [pc, #180]	; 2a774 <__flatcc_error_report@@Base+0x35c>
   2a6bc:	ldr	r3, [r3]
   2a6c0:	mov	r2, #34	; 0x22
   2a6c4:	mov	r1, #1
   2a6c8:	ldr	r0, [pc, #168]	; 2a778 <__flatcc_error_report@@Base+0x360>
   2a6cc:	bl	1401c <fwrite@plt>
   2a6d0:	mov	r0, #1
   2a6d4:	bl	14070 <exit@plt>
   2a6d8:	ldr	r2, [r4, #52]	; 0x34
   2a6dc:	add	r2, r2, #16
   2a6e0:	str	r2, [r4, #52]	; 0x34
   2a6e4:	str	r5, [r3, #4]
   2a6e8:	str	r3, [r6]
   2a6ec:	mov	r6, r3
   2a6f0:	mov	r0, r4
   2a6f4:	bl	2a1d4 <__flatcc_fb_default_error_out@@Base+0x110>
   2a6f8:	ldr	r5, [r4, #40]	; 0x28
   2a6fc:	ldr	r3, [r5, #16]
   2a700:	cmp	r3, #46	; 0x2e
   2a704:	popne	{r4, r5, r6, r7, r8, pc}
   2a708:	mov	r0, r4
   2a70c:	bl	2a1d4 <__flatcc_fb_default_error_out@@Base+0x110>
   2a710:	cmp	r5, #0
   2a714:	beq	2a770 <__flatcc_error_report@@Base+0x358>
   2a718:	ldr	r5, [r4, #40]	; 0x28
   2a71c:	ldr	r3, [r5, #16]
   2a720:	cmp	r3, #9
   2a724:	bne	2a6a0 <__flatcc_error_report@@Base+0x288>
   2a728:	ldr	r3, [r4, #52]	; 0x34
   2a72c:	add	r1, r3, #16
   2a730:	ldr	r2, [r4, #44]	; 0x2c
   2a734:	cmp	r1, r2
   2a738:	bls	2a6d8 <__flatcc_error_report@@Base+0x2c0>
   2a73c:	mov	r1, r8
   2a740:	mov	r0, r7
   2a744:	bl	13fa4 <calloc@plt>
   2a748:	cmp	r0, #0
   2a74c:	beq	2a6b8 <__flatcc_error_report@@Base+0x2a0>
   2a750:	ldr	r3, [r4, #48]	; 0x30
   2a754:	str	r3, [r0]
   2a758:	str	r0, [r4, #48]	; 0x30
   2a75c:	add	r3, r0, #16
   2a760:	str	r3, [r4, #52]	; 0x34
   2a764:	add	r0, r0, #65536	; 0x10000
   2a768:	str	r0, [r4, #44]	; 0x2c
   2a76c:	b	2a6d8 <__flatcc_error_report@@Base+0x2c0>
   2a770:	pop	{r4, r5, r6, r7, r8, pc}
   2a774:	andeq	r7, r6, r8, lsr #1
   2a778:	strdeq	ip, [r3], -ip	; <UNPREDICTABLE>
   2a77c:			; <UNDEFINED> instruction: 0x000539bc
   2a780:	push	{r4, lr}
   2a784:	mov	r4, r0
   2a788:	mov	r0, #0
   2a78c:	str	r0, [r4, #36]	; 0x24
   2a790:	ldr	r0, [r4, #40]	; 0x28
   2a794:	ldr	ip, [r0, #16]
   2a798:	cmp	ip, r1
   2a79c:	beq	2a7b4 <__flatcc_error_report@@Base+0x39c>
   2a7a0:	mov	r1, r0
   2a7a4:	mov	r0, r4
   2a7a8:	bl	2a5dc <__flatcc_error_report@@Base+0x1c4>
   2a7ac:	ldr	r0, [r4, #40]	; 0x28
   2a7b0:	pop	{r4, pc}
   2a7b4:	mov	r0, r4
   2a7b8:	bl	2a1d4 <__flatcc_fb_default_error_out@@Base+0x110>
   2a7bc:	pop	{r4, pc}
   2a7c0:	push	{r4, r5, r6, r7, r8, lr}
   2a7c4:	mov	r4, r0
   2a7c8:	mov	r8, r1
   2a7cc:	ldr	r7, [r0, #40]	; 0x28
   2a7d0:	mov	r3, #1
   2a7d4:	strh	r3, [r1, #8]
   2a7d8:	mov	r5, #0
   2a7dc:	b	2a7e4 <__flatcc_error_report@@Base+0x3cc>
   2a7e0:	add	r5, r5, #1
   2a7e4:	ldr	r6, [r4, #40]	; 0x28
   2a7e8:	ldr	r3, [r6, #16]
   2a7ec:	cmp	r3, #91	; 0x5b
   2a7f0:	bne	2a804 <__flatcc_error_report@@Base+0x3ec>
   2a7f4:	mov	r0, r4
   2a7f8:	bl	2a1d4 <__flatcc_fb_default_error_out@@Base+0x110>
   2a7fc:	cmp	r6, #0
   2a800:	bne	2a7e0 <__flatcc_error_report@@Base+0x3c8>
   2a804:	cmp	r5, #1
   2a808:	ble	2a820 <__flatcc_error_report@@Base+0x408>
   2a80c:	mov	r3, #0
   2a810:	ldr	r2, [pc, #476]	; 2a9f4 <__flatcc_error_report@@Base+0x5dc>
   2a814:	mov	r1, r7
   2a818:	mov	r0, r4
   2a81c:	bl	2a5dc <__flatcc_error_report@@Base+0x1c4>
   2a820:	ldr	r2, [r4, #40]	; 0x28
   2a824:	ldr	r3, [r2, #16]
   2a828:	cmn	r3, #984	; 0x3d8
   2a82c:	ble	2a868 <__flatcc_error_report@@Base+0x450>
   2a830:	ldr	r1, [pc, #448]	; 2a9f8 <__flatcc_error_report@@Base+0x5e0>
   2a834:	cmp	r3, r1
   2a838:	beq	2a908 <__flatcc_error_report@@Base+0x4f0>
   2a83c:	ble	2a8c4 <__flatcc_error_report@@Base+0x4ac>
   2a840:	cmp	r3, #9
   2a844:	beq	2a928 <__flatcc_error_report@@Base+0x510>
   2a848:	cmp	r3, #93	; 0x5d
   2a84c:	bne	2a8e8 <__flatcc_error_report@@Base+0x4d0>
   2a850:	mov	r3, #0
   2a854:	ldr	r2, [pc, #416]	; 2a9fc <__flatcc_error_report@@Base+0x5e4>
   2a858:	mov	r1, r3
   2a85c:	mov	r0, r4
   2a860:	bl	2a5dc <__flatcc_error_report@@Base+0x1c4>
   2a864:	b	2a954 <__flatcc_error_report@@Base+0x53c>
   2a868:	mvn	r1, #984	; 0x3d8
   2a86c:	cmp	r3, r1
   2a870:	bge	2a894 <__flatcc_error_report@@Base+0x47c>
   2a874:	cmn	r3, #988	; 0x3dc
   2a878:	bge	2a8b4 <__flatcc_error_report@@Base+0x49c>
   2a87c:	cmn	r3, #996	; 0x3e4
   2a880:	bge	2a894 <__flatcc_error_report@@Base+0x47c>
   2a884:	add	r3, r3, #996	; 0x3e4
   2a888:	add	r3, r3, #3
   2a88c:	cmp	r3, #1
   2a890:	bhi	2a8f0 <__flatcc_error_report@@Base+0x4d8>
   2a894:	str	r2, [r8]
   2a898:	cmp	r5, #0
   2a89c:	movne	r3, #7
   2a8a0:	moveq	r3, #8
   2a8a4:	strh	r3, [r8, #8]
   2a8a8:	mov	r0, r4
   2a8ac:	bl	2a1d4 <__flatcc_fb_default_error_out@@Base+0x110>
   2a8b0:	b	2a954 <__flatcc_error_report@@Base+0x53c>
   2a8b4:	ldr	r1, [pc, #324]	; 2aa00 <__flatcc_error_report@@Base+0x5e8>
   2a8b8:	cmp	r3, r1
   2a8bc:	bne	2a8f0 <__flatcc_error_report@@Base+0x4d8>
   2a8c0:	b	2a894 <__flatcc_error_report@@Base+0x47c>
   2a8c4:	sub	r1, r1, #8
   2a8c8:	cmp	r3, r1
   2a8cc:	blt	2a8f0 <__flatcc_error_report@@Base+0x4d8>
   2a8d0:	cmn	r3, #976	; 0x3d0
   2a8d4:	blt	2a894 <__flatcc_error_report@@Base+0x47c>
   2a8d8:	add	r1, r1, #7
   2a8dc:	cmp	r3, r1
   2a8e0:	beq	2a894 <__flatcc_error_report@@Base+0x47c>
   2a8e4:	b	2a8f0 <__flatcc_error_report@@Base+0x4d8>
   2a8e8:	cmn	r3, #972	; 0x3cc
   2a8ec:	beq	2a894 <__flatcc_error_report@@Base+0x47c>
   2a8f0:	mov	r3, #0
   2a8f4:	ldr	r2, [pc, #264]	; 2aa04 <__flatcc_error_report@@Base+0x5ec>
   2a8f8:	mov	r1, r3
   2a8fc:	mov	r0, r4
   2a900:	bl	2a5dc <__flatcc_error_report@@Base+0x1c4>
   2a904:	b	2a954 <__flatcc_error_report@@Base+0x53c>
   2a908:	str	r2, [r8]
   2a90c:	cmp	r5, #0
   2a910:	movne	r3, #9
   2a914:	moveq	r3, #10
   2a918:	strh	r3, [r8, #8]
   2a91c:	mov	r0, r4
   2a920:	bl	2a1d4 <__flatcc_fb_default_error_out@@Base+0x110>
   2a924:	b	2a954 <__flatcc_error_report@@Base+0x53c>
   2a928:	mov	r1, r8
   2a92c:	mov	r0, r4
   2a930:	bl	2a5fc <__flatcc_error_report@@Base+0x1e4>
   2a934:	cmp	r5, #0
   2a938:	movne	r3, #11
   2a93c:	moveq	r3, #12
   2a940:	strh	r3, [r8, #8]
   2a944:	b	2a954 <__flatcc_error_report@@Base+0x53c>
   2a948:	sub	r5, r5, #1
   2a94c:	cmn	r5, #1
   2a950:	beq	2a974 <__flatcc_error_report@@Base+0x55c>
   2a954:	ldr	r6, [r4, #40]	; 0x28
   2a958:	ldr	r3, [r6, #16]
   2a95c:	cmp	r3, #93	; 0x5d
   2a960:	bne	2a9e8 <__flatcc_error_report@@Base+0x5d0>
   2a964:	mov	r0, r4
   2a968:	bl	2a1d4 <__flatcc_fb_default_error_out@@Base+0x110>
   2a96c:	cmp	r6, #0
   2a970:	bne	2a948 <__flatcc_error_report@@Base+0x530>
   2a974:	cmp	r5, #0
   2a978:	beq	2a990 <__flatcc_error_report@@Base+0x578>
   2a97c:	mov	r3, r7
   2a980:	ldr	r2, [pc, #128]	; 2aa08 <__flatcc_error_report@@Base+0x5f0>
   2a984:	mov	r1, #0
   2a988:	mov	r0, r4
   2a98c:	bl	2a5dc <__flatcc_error_report@@Base+0x1c4>
   2a990:	ldr	r5, [r4, #40]	; 0x28
   2a994:	ldr	r3, [r5, #16]
   2a998:	cmp	r3, #93	; 0x5d
   2a99c:	popne	{r4, r5, r6, r7, r8, pc}
   2a9a0:	mov	r0, r4
   2a9a4:	bl	2a1d4 <__flatcc_fb_default_error_out@@Base+0x110>
   2a9a8:	cmp	r5, #0
   2a9ac:	popeq	{r4, r5, r6, r7, r8, pc}
   2a9b0:	mov	r3, r7
   2a9b4:	ldr	r2, [pc, #80]	; 2aa0c <__flatcc_error_report@@Base+0x5f4>
   2a9b8:	mov	r1, r5
   2a9bc:	mov	r0, r4
   2a9c0:	bl	2a5dc <__flatcc_error_report@@Base+0x1c4>
   2a9c4:	ldr	r5, [r4, #40]	; 0x28
   2a9c8:	ldr	r3, [r5, #16]
   2a9cc:	cmp	r3, #93	; 0x5d
   2a9d0:	popne	{r4, r5, r6, r7, r8, pc}
   2a9d4:	mov	r0, r4
   2a9d8:	bl	2a1d4 <__flatcc_fb_default_error_out@@Base+0x110>
   2a9dc:	cmp	r5, #0
   2a9e0:	bne	2a9c4 <__flatcc_error_report@@Base+0x5ac>
   2a9e4:	pop	{r4, r5, r6, r7, r8, pc}
   2a9e8:	cmp	r5, #0
   2a9ec:	bne	2a97c <__flatcc_error_report@@Base+0x564>
   2a9f0:	pop	{r4, r5, r6, r7, r8, pc}
   2a9f4:	andeq	r3, r5, r4, ror #19
   2a9f8:			; <UNDEFINED> instruction: 0xfffffc32
   2a9fc:	andeq	r3, r5, ip, lsl #20
   2aa00:			; <UNDEFINED> instruction: 0xfffffc25
   2aa04:	andeq	r3, r5, r8, lsr #20
   2aa08:	andeq	r3, r5, r0, asr #20
   2aa0c:	andeq	r3, r5, r4, ror #20
   2aa10:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2aa14:	sub	sp, sp, #12
   2aa18:	mov	r4, r0
   2aa1c:	mov	r5, r1
   2aa20:	mov	r3, #2
   2aa24:	strh	r3, [r1, #8]
   2aa28:	mov	r3, #0
   2aa2c:	str	r3, [r1]
   2aa30:	str	r3, [r1, #4]
   2aa34:	mov	r6, #1
   2aa38:	ldr	fp, [pc, #336]	; 2ab90 <__flatcc_error_report@@Base+0x778>
   2aa3c:	mov	r7, r3
   2aa40:	ldr	sl, [pc, #332]	; 2ab94 <__flatcc_error_report@@Base+0x77c>
   2aa44:	ldr	r9, [pc, #332]	; 2ab98 <__flatcc_error_report@@Base+0x780>
   2aa48:	ldr	r8, [pc, #332]	; 2ab9c <__flatcc_error_report@@Base+0x784>
   2aa4c:	b	2aa80 <__flatcc_error_report@@Base+0x668>
   2aa50:	ldr	r3, [r5]
   2aa54:	cmp	r3, #0
   2aa58:	ldreq	r3, [r1]
   2aa5c:	streq	r3, [r5]
   2aa60:	b	2aa78 <__flatcc_error_report@@Base+0x660>
   2aa64:	strh	r6, [r5, #8]
   2aa68:	mov	r3, r7
   2aa6c:	mov	r2, r8
   2aa70:	mov	r0, r4
   2aa74:	bl	2a5dc <__flatcc_error_report@@Base+0x1c4>
   2aa78:	mov	r0, r4
   2aa7c:	bl	2a1d4 <__flatcc_fb_default_error_out@@Base+0x110>
   2aa80:	ldr	r1, [r4, #40]	; 0x28
   2aa84:	ldr	r3, [r1, #16]
   2aa88:	sub	r3, r3, #6
   2aa8c:	cmp	r3, #17
   2aa90:	ldrls	pc, [pc, r3, lsl #2]
   2aa94:	b	2ab18 <__flatcc_error_report@@Base+0x700>
   2aa98:	andeq	sl, r2, r0, ror #21
   2aa9c:	andeq	sl, r2, r8, lsl fp
   2aaa0:	andeq	sl, r2, r8, lsl fp
   2aaa4:	andeq	sl, r2, r8, lsl fp
   2aaa8:	andeq	sl, r2, r8, lsl fp
   2aaac:	andeq	sl, r2, r8, lsl fp
   2aab0:	andeq	sl, r2, r8, lsl fp
   2aab4:	andeq	sl, r2, r8, lsl fp
   2aab8:	andeq	sl, r2, r8, lsl fp
   2aabc:	andeq	sl, r2, r8, lsl fp
   2aac0:	andeq	sl, r2, r8, lsl fp
   2aac4:	andeq	sl, r2, r8, lsl fp
   2aac8:	andeq	sl, r2, r0, lsl #22
   2aacc:	andeq	sl, r2, r8, lsl fp
   2aad0:	andeq	sl, r2, r0, asr sl
   2aad4:	andeq	sl, r2, r4, ror #20
   2aad8:	andeq	sl, r2, r0, lsr fp
   2aadc:	andeq	sl, r2, r0, lsr fp
   2aae0:	strh	r6, [r5, #8]
   2aae4:	str	r6, [sp, #4]
   2aae8:	str	r9, [sp]
   2aaec:	mov	r3, r7
   2aaf0:	mov	r2, sl
   2aaf4:	mov	r0, r4
   2aaf8:	bl	2a418 <__flatcc_error_report@@Base>
   2aafc:	b	2aa78 <__flatcc_error_report@@Base+0x660>
   2ab00:	strh	r6, [r5, #8]
   2ab04:	mov	r3, r7
   2ab08:	mov	r2, fp
   2ab0c:	mov	r0, r4
   2ab10:	bl	2a5dc <__flatcc_error_report@@Base+0x1c4>
   2ab14:	b	2aa78 <__flatcc_error_report@@Base+0x660>
   2ab18:	mov	r3, #0
   2ab1c:	ldr	r2, [pc, #124]	; 2aba0 <__flatcc_error_report@@Base+0x788>
   2ab20:	mov	r0, r4
   2ab24:	bl	2a5dc <__flatcc_error_report@@Base+0x1c4>
   2ab28:	mov	r3, #1
   2ab2c:	strh	r3, [r5, #8]
   2ab30:	ldr	r2, [r5]
   2ab34:	cmp	r2, #0
   2ab38:	ldrne	r3, [r4, #40]	; 0x28
   2ab3c:	ldrne	r3, [r3]
   2ab40:	subne	r3, r3, r2
   2ab44:	strne	r3, [r5, #4]
   2ab48:	ldr	r6, [r4, #40]	; 0x28
   2ab4c:	ldr	r3, [r6, #16]
   2ab50:	cmp	r3, #22
   2ab54:	bne	2ab70 <__flatcc_error_report@@Base+0x758>
   2ab58:	mov	r0, r4
   2ab5c:	bl	2a1d4 <__flatcc_fb_default_error_out@@Base+0x110>
   2ab60:	cmp	r6, #0
   2ab64:	beq	2ab84 <__flatcc_error_report@@Base+0x76c>
   2ab68:	add	sp, sp, #12
   2ab6c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2ab70:	mov	r3, #0
   2ab74:	ldr	r2, [pc, #40]	; 2aba4 <__flatcc_error_report@@Base+0x78c>
   2ab78:	mov	r1, r6
   2ab7c:	mov	r0, r4
   2ab80:	bl	2a5dc <__flatcc_error_report@@Base+0x1c4>
   2ab84:	mov	r3, #1
   2ab88:	strh	r3, [r5, #8]
   2ab8c:	b	2ab68 <__flatcc_error_report@@Base+0x750>
   2ab90:	andeq	r3, r5, ip, asr #21
   2ab94:	muleq	r5, ip, sl
   2ab98:	andeq	r3, r5, r8, asr #21
   2ab9c:	andeq	r3, r5, ip, ror sl
   2aba0:	andeq	r3, r5, ip, ror #21
   2aba4:	andeq	r3, r5, r8, lsl fp
   2aba8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2abac:	sub	sp, sp, #44	; 0x2c
   2abb0:	mov	sl, r0
   2abb4:	mov	r8, r1
   2abb8:	mov	r7, r2
   2abbc:	mov	r6, r3
   2abc0:	ldr	r4, [r0, #40]	; 0x28
   2abc4:	ldr	r3, [r4, #16]
   2abc8:	cmp	r3, #45	; 0x2d
   2abcc:	beq	2ac0c <__flatcc_error_report@@Base+0x7f4>
   2abd0:	cmp	r3, #10
   2abd4:	beq	2ae88 <__flatcc_error_report@@Base+0xa70>
   2abd8:	ble	2b190 <__flatcc_error_report@@Base+0xd78>
   2abdc:	cmp	r3, #14
   2abe0:	beq	2acb4 <__flatcc_error_report@@Base+0x89c>
   2abe4:	cmp	r3, #19
   2abe8:	beq	2b110 <__flatcc_error_report@@Base+0xcf8>
   2abec:	cmp	r3, #11
   2abf0:	beq	2b020 <__flatcc_error_report@@Base+0xc08>
   2abf4:	mov	r3, #0
   2abf8:	mov	r2, r6
   2abfc:	mov	r1, r4
   2ac00:	mov	r0, sl
   2ac04:	bl	2a5dc <__flatcc_error_report@@Base+0x1c4>
   2ac08:	b	2b08c <__flatcc_error_report@@Base+0xc74>
   2ac0c:	bl	2a1d4 <__flatcc_fb_default_error_out@@Base+0x110>
   2ac10:	ldr	r5, [sl, #40]	; 0x28
   2ac14:	ldr	r3, [r5, #16]
   2ac18:	cmp	r3, #10
   2ac1c:	beq	2ae7c <__flatcc_error_report@@Base+0xa64>
   2ac20:	bgt	2ac84 <__flatcc_error_report@@Base+0x86c>
   2ac24:	ldr	r2, [pc, #1540]	; 2b230 <__flatcc_error_report@@Base+0xe18>
   2ac28:	cmp	r3, r2
   2ac2c:	beq	2b0e0 <__flatcc_error_report@@Base+0xcc8>
   2ac30:	cmp	r3, #9
   2ac34:	bne	2ac74 <__flatcc_error_report@@Base+0x85c>
   2ac38:	mov	r1, r8
   2ac3c:	mov	r0, sl
   2ac40:	bl	2a5fc <__flatcc_error_report@@Base+0x1e4>
   2ac44:	cmp	r4, #0
   2ac48:	moveq	r3, #13
   2ac4c:	strheq	r3, [r8, #8]
   2ac50:	beq	2b08c <__flatcc_error_report@@Base+0xc74>
   2ac54:	mov	r3, #1
   2ac58:	strh	r3, [r8, #8]
   2ac5c:	mov	r3, #0
   2ac60:	ldr	r2, [pc, #1484]	; 2b234 <__flatcc_error_report@@Base+0xe1c>
   2ac64:	mov	r1, r5
   2ac68:	mov	r0, sl
   2ac6c:	bl	2a5dc <__flatcc_error_report@@Base+0x1c4>
   2ac70:	b	2b08c <__flatcc_error_report@@Base+0xc74>
   2ac74:	cmn	r3, #988	; 0x3dc
   2ac78:	beq	2b0d4 <__flatcc_error_report@@Base+0xcbc>
   2ac7c:	mov	r4, r5
   2ac80:	b	2abf4 <__flatcc_error_report@@Base+0x7dc>
   2ac84:	cmp	r3, #14
   2ac88:	beq	2aca8 <__flatcc_error_report@@Base+0x890>
   2ac8c:	cmp	r3, #19
   2ac90:	beq	2b104 <__flatcc_error_report@@Base+0xcec>
   2ac94:	cmp	r3, #11
   2ac98:	bne	2ac7c <__flatcc_error_report@@Base+0x864>
   2ac9c:	mov	r6, r4
   2aca0:	mov	r4, r5
   2aca4:	b	2b024 <__flatcc_error_report@@Base+0xc0c>
   2aca8:	mov	fp, r4
   2acac:	mov	r4, r5
   2acb0:	b	2acb8 <__flatcc_error_report@@Base+0x8a0>
   2acb4:	mov	fp, #0
   2acb8:	mov	r3, #5
   2acbc:	strh	r3, [r8, #8]
   2acc0:	ldr	r3, [r4]
   2acc4:	ldr	r2, [r4, #4]
   2acc8:	add	lr, r3, r2
   2accc:	cmp	r3, lr
   2acd0:	beq	2ad00 <__flatcc_error_report@@Base+0x8e8>
   2acd4:	ldrb	r5, [r3]
   2acd8:	cmp	r5, #45	; 0x2d
   2acdc:	movne	r1, #0
   2ace0:	moveq	r1, #1
   2ace4:	add	r9, r3, r1
   2ace8:	sub	r2, r2, r1
   2acec:	cmp	r2, #1
   2acf0:	ble	2ad00 <__flatcc_error_report@@Base+0x8e8>
   2acf4:	ldrb	r3, [r3, r1]
   2acf8:	cmp	r3, #48	; 0x30
   2acfc:	beq	2ad40 <__flatcc_error_report@@Base+0x928>
   2ad00:	mov	r3, #1
   2ad04:	strh	r3, [r8, #8]
   2ad08:	mov	r3, #0
   2ad0c:	ldr	r2, [pc, #1316]	; 2b238 <__flatcc_error_report@@Base+0xe20>
   2ad10:	mov	r1, r4
   2ad14:	mov	r0, sl
   2ad18:	bl	2a5dc <__flatcc_error_report@@Base+0x1c4>
   2ad1c:	cmp	fp, #0
   2ad20:	beq	2b084 <__flatcc_error_report@@Base+0xc6c>
   2ad24:	ldrd	r2, [r8]
   2ad28:	rsbs	r2, r2, #0
   2ad2c:	rsc	r3, r3, #0
   2ad30:	strd	r2, [r8]
   2ad34:	mov	r3, #4
   2ad38:	strh	r3, [r8, #8]
   2ad3c:	b	2b084 <__flatcc_error_report@@Base+0xc6c>
   2ad40:	ldrb	r3, [r9, #1]
   2ad44:	orr	r3, r3, #32
   2ad48:	cmp	r3, #120	; 0x78
   2ad4c:	bne	2ad00 <__flatcc_error_report@@Base+0x8e8>
   2ad50:	add	r3, r9, #2
   2ad54:	str	r3, [sp]
   2ad58:	sub	r3, lr, r3
   2ad5c:	cmp	r3, #16
   2ad60:	addgt	r9, r9, #18
   2ad64:	movle	r9, lr
   2ad68:	ldr	r3, [sp]
   2ad6c:	cmp	r3, r9
   2ad70:	beq	2ad00 <__flatcc_error_report@@Base+0x8e8>
   2ad74:	mov	ip, r3
   2ad78:	mov	r2, #0
   2ad7c:	mov	r3, #0
   2ad80:	str	r4, [sp, #4]
   2ad84:	str	lr, [sp, #8]
   2ad88:	mov	r6, r5
   2ad8c:	mov	r7, fp
   2ad90:	str	sl, [sp, #12]
   2ad94:	b	2addc <__flatcc_error_report@@Base+0x9c4>
   2ad98:	orr	lr, lr, #32
   2ad9c:	sub	r0, lr, #97	; 0x61
   2ada0:	uxtb	r0, r0
   2ada4:	cmp	r0, #5
   2ada8:	bhi	2ae1c <__flatcc_error_report@@Base+0xa04>
   2adac:	lsl	fp, r3, #4
   2adb0:	orr	fp, fp, r2, lsr #28
   2adb4:	lsl	sl, r2, #4
   2adb8:	subs	r0, sl, #87	; 0x57
   2adbc:	sbc	r1, fp, #0
   2adc0:	uxtb	r2, lr
   2adc4:	mov	r3, #0
   2adc8:	adds	r2, r2, r0
   2adcc:	adc	r3, r3, r1
   2add0:	mov	r1, ip
   2add4:	cmp	r9, ip
   2add8:	beq	2b1e8 <__flatcc_error_report@@Base+0xdd0>
   2addc:	mov	r1, ip
   2ade0:	ldrb	lr, [ip], #1
   2ade4:	sub	r0, lr, #48	; 0x30
   2ade8:	uxtb	r0, r0
   2adec:	cmp	r0, #9
   2adf0:	bhi	2ad98 <__flatcc_error_report@@Base+0x980>
   2adf4:	lsl	r5, r3, #4
   2adf8:	orr	r5, r5, r2, lsr #28
   2adfc:	lsl	r4, r2, #4
   2ae00:	subs	r0, r4, #48	; 0x30
   2ae04:	sbc	r1, r5, #0
   2ae08:	uxtb	r2, lr
   2ae0c:	mov	r3, #0
   2ae10:	adds	r2, r2, r0
   2ae14:	adc	r3, r3, r1
   2ae18:	b	2add0 <__flatcc_error_report@@Base+0x9b8>
   2ae1c:	ldr	r4, [sp, #4]
   2ae20:	ldr	lr, [sp, #8]
   2ae24:	mov	r5, r6
   2ae28:	mov	r6, r1
   2ae2c:	mov	fp, r7
   2ae30:	ldr	sl, [sp, #12]
   2ae34:	ldr	r1, [sp]
   2ae38:	cmp	r1, r6
   2ae3c:	beq	2ad00 <__flatcc_error_report@@Base+0x8e8>
   2ae40:	cmp	lr, r6
   2ae44:	beq	2ae6c <__flatcc_error_report@@Base+0xa54>
   2ae48:	ldrb	r1, [r6]
   2ae4c:	cmp	r9, r6
   2ae50:	beq	2b208 <__flatcc_error_report@@Base+0xdf0>
   2ae54:	cmp	r1, #80	; 0x50
   2ae58:	beq	2ad00 <__flatcc_error_report@@Base+0x8e8>
   2ae5c:	cmp	r1, #112	; 0x70
   2ae60:	beq	2ad00 <__flatcc_error_report@@Base+0x8e8>
   2ae64:	cmp	r1, #46	; 0x2e
   2ae68:	beq	2ad00 <__flatcc_error_report@@Base+0x8e8>
   2ae6c:	strd	r2, [r8]
   2ae70:	cmp	r5, #45	; 0x2d
   2ae74:	bne	2ad1c <__flatcc_error_report@@Base+0x904>
   2ae78:	b	2ad00 <__flatcc_error_report@@Base+0x8e8>
   2ae7c:	str	r4, [sp]
   2ae80:	mov	r4, r5
   2ae84:	b	2ae90 <__flatcc_error_report@@Base+0xa78>
   2ae88:	mov	r3, #0
   2ae8c:	str	r3, [sp]
   2ae90:	mov	r3, #5
   2ae94:	strh	r3, [r8, #8]
   2ae98:	ldr	r9, [r4]
   2ae9c:	ldr	fp, [r4, #4]
   2aea0:	add	fp, r9, fp
   2aea4:	cmp	r9, fp
   2aea8:	beq	2b000 <__flatcc_error_report@@Base+0xbe8>
   2aeac:	ldrb	r3, [r9]
   2aeb0:	cmp	r3, #45	; 0x2d
   2aeb4:	movne	r3, #0
   2aeb8:	moveq	r3, #1
   2aebc:	str	r3, [sp, #8]
   2aec0:	add	r2, r9, r3
   2aec4:	str	r2, [sp, #4]
   2aec8:	cmp	fp, r2
   2aecc:	beq	2b000 <__flatcc_error_report@@Base+0xbe8>
   2aed0:	ldrb	r0, [r9, r3]
   2aed4:	sub	r3, r0, #48	; 0x30
   2aed8:	uxtb	r3, r3
   2aedc:	cmp	r3, #9
   2aee0:	bhi	2b000 <__flatcc_error_report@@Base+0xbe8>
   2aee4:	uxtb	r0, r0
   2aee8:	mov	r1, #0
   2aeec:	subs	r0, r0, #48	; 0x30
   2aef0:	sbc	r1, r1, #0
   2aef4:	add	ip, r2, #1
   2aef8:	mov	lr, #10
   2aefc:	mov	r6, r9
   2af00:	mov	r9, r4
   2af04:	mov	r7, fp
   2af08:	mov	r4, ip
   2af0c:	cmp	ip, r7
   2af10:	beq	2af60 <__flatcc_error_report@@Base+0xb48>
   2af14:	ldrb	r2, [ip], #1
   2af18:	sub	r3, r2, #48	; 0x30
   2af1c:	uxtb	r3, r3
   2af20:	cmp	r3, #9
   2af24:	bhi	2af60 <__flatcc_error_report@@Base+0xb48>
   2af28:	umull	r4, r5, r0, lr
   2af2c:	mla	r5, lr, r1, r5
   2af30:	subs	r4, r4, #48	; 0x30
   2af34:	sbc	r5, r5, #0
   2af38:	uxtb	r2, r2
   2af3c:	mov	r3, #0
   2af40:	adds	r2, r2, r4
   2af44:	adc	r3, r3, r5
   2af48:	cmp	r3, r1
   2af4c:	cmpeq	r2, r0
   2af50:	bcc	2affc <__flatcc_error_report@@Base+0xbe4>
   2af54:	mov	r0, r2
   2af58:	mov	r1, r3
   2af5c:	b	2af08 <__flatcc_error_report@@Base+0xaf0>
   2af60:	mov	r3, r4
   2af64:	mov	r4, r9
   2af68:	mov	r9, r6
   2af6c:	mov	r6, r3
   2af70:	cmp	r9, r3
   2af74:	beq	2b000 <__flatcc_error_report@@Base+0xbe8>
   2af78:	ldr	r3, [sp, #4]
   2af7c:	cmp	r3, r6
   2af80:	beq	2b000 <__flatcc_error_report@@Base+0xbe8>
   2af84:	cmp	fp, r6
   2af88:	beq	2afac <__flatcc_error_report@@Base+0xb94>
   2af8c:	ldrb	r3, [r6]
   2af90:	cmp	r3, #80	; 0x50
   2af94:	beq	2aff4 <__flatcc_error_report@@Base+0xbdc>
   2af98:	bhi	2afe4 <__flatcc_error_report@@Base+0xbcc>
   2af9c:	cmp	r3, #46	; 0x2e
   2afa0:	beq	2aff4 <__flatcc_error_report@@Base+0xbdc>
   2afa4:	cmp	r3, #69	; 0x45
   2afa8:	beq	2aff4 <__flatcc_error_report@@Base+0xbdc>
   2afac:	ldr	r3, [sp, #8]
   2afb0:	strd	r0, [r8]
   2afb4:	cmp	r3, #0
   2afb8:	bne	2b000 <__flatcc_error_report@@Base+0xbe8>
   2afbc:	ldr	r3, [sp]
   2afc0:	cmp	r3, #0
   2afc4:	beq	2b084 <__flatcc_error_report@@Base+0xc6c>
   2afc8:	ldrd	r2, [r8]
   2afcc:	rsbs	r2, r2, #0
   2afd0:	rsc	r3, r3, #0
   2afd4:	strd	r2, [r8]
   2afd8:	mov	r3, #4
   2afdc:	strh	r3, [r8, #8]
   2afe0:	b	2b084 <__flatcc_error_report@@Base+0xc6c>
   2afe4:	cmp	r3, #101	; 0x65
   2afe8:	beq	2aff4 <__flatcc_error_report@@Base+0xbdc>
   2afec:	cmp	r3, #112	; 0x70
   2aff0:	bne	2afac <__flatcc_error_report@@Base+0xb94>
   2aff4:	mvn	r3, #2
   2aff8:	b	2afb4 <__flatcc_error_report@@Base+0xb9c>
   2affc:	mov	r4, r9
   2b000:	mov	r3, #1
   2b004:	strh	r3, [r8, #8]
   2b008:	mov	r3, #0
   2b00c:	ldr	r2, [pc, #552]	; 2b23c <__flatcc_error_report@@Base+0xe24>
   2b010:	mov	r1, r4
   2b014:	mov	r0, sl
   2b018:	bl	2a5dc <__flatcc_error_report@@Base+0x1c4>
   2b01c:	b	2afbc <__flatcc_error_report@@Base+0xba4>
   2b020:	mov	r6, #0
   2b024:	mov	r3, #3
   2b028:	strh	r3, [r8, #8]
   2b02c:	add	r1, sp, #36	; 0x24
   2b030:	ldr	r0, [r4]
   2b034:	bl	140c4 <strtod@plt>
   2b038:	vstr	d0, [r8]
   2b03c:	ldr	r2, [r4]
   2b040:	ldr	r3, [r4, #4]
   2b044:	add	r3, r2, r3
   2b048:	ldr	r1, [sp, #36]	; 0x24
   2b04c:	cmp	r1, r3
   2b050:	beq	2b094 <__flatcc_error_report@@Base+0xc7c>
   2b054:	mov	r3, #1
   2b058:	strh	r3, [r8, #8]
   2b05c:	mov	r3, #0
   2b060:	ldr	r2, [pc, #472]	; 2b240 <__flatcc_error_report@@Base+0xe28>
   2b064:	mov	r1, r4
   2b068:	mov	r0, sl
   2b06c:	bl	2a5dc <__flatcc_error_report@@Base+0x1c4>
   2b070:	cmp	r6, #0
   2b074:	beq	2b084 <__flatcc_error_report@@Base+0xc6c>
   2b078:	ldrh	r3, [r8, #8]
   2b07c:	cmp	r3, #6
   2b080:	beq	2b1c8 <__flatcc_error_report@@Base+0xdb0>
   2b084:	mov	r0, sl
   2b088:	bl	2a1d4 <__flatcc_fb_default_error_out@@Base+0x110>
   2b08c:	add	sp, sp, #44	; 0x2c
   2b090:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2b094:	ldrb	r3, [r2]
   2b098:	cmp	r3, #46	; 0x2e
   2b09c:	beq	2b0b4 <__flatcc_error_report@@Base+0xc9c>
   2b0a0:	cmp	r6, #0
   2b0a4:	vnegne.f64	d0, d0
   2b0a8:	vstrne	d0, [r8]
   2b0ac:	bne	2b078 <__flatcc_error_report@@Base+0xc60>
   2b0b0:	b	2b084 <__flatcc_error_report@@Base+0xc6c>
   2b0b4:	mov	r3, #1
   2b0b8:	strh	r3, [r8, #8]
   2b0bc:	mov	r3, #0
   2b0c0:	ldr	r2, [pc, #380]	; 2b244 <__flatcc_error_report@@Base+0xe2c>
   2b0c4:	mov	r1, r4
   2b0c8:	mov	r0, sl
   2b0cc:	bl	2a5dc <__flatcc_error_report@@Base+0x1c4>
   2b0d0:	b	2b070 <__flatcc_error_report@@Base+0xc58>
   2b0d4:	mov	r3, r4
   2b0d8:	mov	r4, r5
   2b0dc:	b	2b1b0 <__flatcc_error_report@@Base+0xd98>
   2b0e0:	mov	r3, r4
   2b0e4:	mov	r4, r5
   2b0e8:	b	2b0f0 <__flatcc_error_report@@Base+0xcd8>
   2b0ec:	mov	r3, #0
   2b0f0:	mov	r2, #0
   2b0f4:	strb	r2, [r8]
   2b0f8:	mov	r2, #6
   2b0fc:	strh	r2, [r8, #8]
   2b100:	b	2b1c0 <__flatcc_error_report@@Base+0xda8>
   2b104:	mov	r9, r4
   2b108:	mov	r4, r5
   2b10c:	b	2b114 <__flatcc_error_report@@Base+0xcfc>
   2b110:	mov	r9, #0
   2b114:	mov	r0, sl
   2b118:	bl	2a1d4 <__flatcc_fb_default_error_out@@Base+0x110>
   2b11c:	mov	r1, r8
   2b120:	mov	r0, sl
   2b124:	bl	2aa10 <__flatcc_error_report@@Base+0x5f8>
   2b128:	tst	r7, #1
   2b12c:	beq	2b158 <__flatcc_error_report@@Base+0xd40>
   2b130:	cmp	r9, #0
   2b134:	beq	2b08c <__flatcc_error_report@@Base+0xc74>
   2b138:	mov	r3, #1
   2b13c:	strh	r3, [r8, #8]
   2b140:	mov	r3, #0
   2b144:	ldr	r2, [pc, #252]	; 2b248 <__flatcc_error_report@@Base+0xe30>
   2b148:	mov	r1, r4
   2b14c:	mov	r0, sl
   2b150:	bl	2a5dc <__flatcc_error_report@@Base+0x1c4>
   2b154:	b	2b08c <__flatcc_error_report@@Base+0xc74>
   2b158:	mov	r3, #1
   2b15c:	strh	r3, [r8, #8]
   2b160:	mov	r3, #0
   2b164:	mov	r2, r6
   2b168:	mov	r1, r4
   2b16c:	mov	r0, sl
   2b170:	bl	2a5dc <__flatcc_error_report@@Base+0x1c4>
   2b174:	b	2b08c <__flatcc_error_report@@Base+0xc74>
   2b178:	mov	r1, r8
   2b17c:	mov	r0, sl
   2b180:	bl	2a5fc <__flatcc_error_report@@Base+0x1e4>
   2b184:	mov	r3, #13
   2b188:	strh	r3, [r8, #8]
   2b18c:	b	2b08c <__flatcc_error_report@@Base+0xc74>
   2b190:	ldr	r2, [pc, #152]	; 2b230 <__flatcc_error_report@@Base+0xe18>
   2b194:	cmp	r3, r2
   2b198:	beq	2b0ec <__flatcc_error_report@@Base+0xcd4>
   2b19c:	cmp	r3, #9
   2b1a0:	beq	2b178 <__flatcc_error_report@@Base+0xd60>
   2b1a4:	cmn	r3, #988	; 0x3dc
   2b1a8:	moveq	r3, #0
   2b1ac:	bne	2abf4 <__flatcc_error_report@@Base+0x7dc>
   2b1b0:	mov	r2, #1
   2b1b4:	strb	r2, [r8]
   2b1b8:	mov	r2, #6
   2b1bc:	strh	r2, [r8, #8]
   2b1c0:	cmp	r3, #0
   2b1c4:	beq	2b084 <__flatcc_error_report@@Base+0xc6c>
   2b1c8:	mov	r3, #1
   2b1cc:	strh	r3, [r8, #8]
   2b1d0:	mov	r3, #0
   2b1d4:	ldr	r2, [pc, #112]	; 2b24c <__flatcc_error_report@@Base+0xe34>
   2b1d8:	mov	r1, r4
   2b1dc:	mov	r0, sl
   2b1e0:	bl	2a5dc <__flatcc_error_report@@Base+0x1c4>
   2b1e4:	b	2b084 <__flatcc_error_report@@Base+0xc6c>
   2b1e8:	ldr	r4, [sp, #4]
   2b1ec:	ldr	lr, [sp, #8]
   2b1f0:	mov	r5, r6
   2b1f4:	mov	fp, r7
   2b1f8:	ldr	sl, [sp, #12]
   2b1fc:	cmp	lr, ip
   2b200:	beq	2ae6c <__flatcc_error_report@@Base+0xa54>
   2b204:	ldrb	r1, [r1]
   2b208:	sub	r0, r1, #48	; 0x30
   2b20c:	uxtb	r0, r0
   2b210:	cmp	r0, #9
   2b214:	bls	2ad00 <__flatcc_error_report@@Base+0x8e8>
   2b218:	orr	r1, r1, #32
   2b21c:	sub	r0, r1, #97	; 0x61
   2b220:	uxtb	r0, r0
   2b224:	cmp	r0, #5
   2b228:	bhi	2ae54 <__flatcc_error_report@@Base+0xa3c>
   2b22c:	b	2ad00 <__flatcc_error_report@@Base+0x8e8>
   2b230:			; <UNDEFINED> instruction: 0xfffffc26
   2b234:	andeq	r3, r5, r4, asr #23
   2b238:	andeq	r3, r5, ip, lsr #22
   2b23c:	andeq	r3, r5, r8, asr #22
   2b240:	andeq	r3, r5, r0, ror #22
   2b244:	andeq	r3, r5, r8, ror fp
   2b248:	andeq	r3, r5, r0, lsr #23
   2b24c:	andeq	r3, r5, r4, ror #23
   2b250:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2b254:	ldr	fp, [r0, #40]	; 0x28
   2b258:	ldr	r3, [fp, #16]
   2b25c:	cmp	r3, #40	; 0x28
   2b260:	beq	2b26c <__flatcc_error_report@@Base+0xe54>
   2b264:	mov	r0, #0
   2b268:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2b26c:	mov	r4, r0
   2b270:	bl	2a1d4 <__flatcc_fb_default_error_out@@Base+0x110>
   2b274:	cmp	fp, #0
   2b278:	beq	2b42c <__flatcc_error_report@@Base+0x1014>
   2b27c:	ldr	r6, [r4, #40]	; 0x28
   2b280:	ldr	r3, [r6, #16]
   2b284:	cmp	r3, #9
   2b288:	beq	2b2a8 <__flatcc_error_report@@Base+0xe90>
   2b28c:	mov	r3, fp
   2b290:	ldr	r2, [pc, #456]	; 2b460 <__flatcc_error_report@@Base+0x1048>
   2b294:	mov	r1, #41	; 0x29
   2b298:	mov	r0, r4
   2b29c:	bl	2a780 <__flatcc_error_report@@Base+0x368>
   2b2a0:	mov	r0, #0
   2b2a4:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2b2a8:	mov	r0, r4
   2b2ac:	bl	2a1d4 <__flatcc_fb_default_error_out@@Base+0x110>
   2b2b0:	cmp	r6, #0
   2b2b4:	beq	2b444 <__flatcc_error_report@@Base+0x102c>
   2b2b8:	mov	r7, #0
   2b2bc:	mov	r8, #1
   2b2c0:	mov	sl, #65536	; 0x10000
   2b2c4:	ldr	r9, [pc, #408]	; 2b464 <__flatcc_error_report@@Base+0x104c>
   2b2c8:	b	2b364 <__flatcc_error_report@@Base+0xf4c>
   2b2cc:	ldr	r3, [pc, #404]	; 2b468 <__flatcc_error_report@@Base+0x1050>
   2b2d0:	ldr	r3, [r3]
   2b2d4:	mov	r2, #34	; 0x22
   2b2d8:	mov	r1, #1
   2b2dc:	ldr	r0, [pc, #392]	; 2b46c <__flatcc_error_report@@Base+0x1054>
   2b2e0:	bl	1401c <fwrite@plt>
   2b2e4:	mov	r0, #1
   2b2e8:	bl	14070 <exit@plt>
   2b2ec:	ldr	r2, [r4, #52]	; 0x34
   2b2f0:	add	r2, r2, #32
   2b2f4:	str	r2, [r4, #52]	; 0x34
   2b2f8:	mov	r5, r3
   2b2fc:	str	r7, [r3]
   2b300:	str	r6, [r3, #4]
   2b304:	ldr	r6, [r4, #40]	; 0x28
   2b308:	ldr	r3, [r6, #16]
   2b30c:	cmp	r3, #58	; 0x3a
   2b310:	beq	2b3ac <__flatcc_error_report@@Base+0xf94>
   2b314:	ldr	r3, [r4, #108]	; 0x6c
   2b318:	cmp	r3, #9
   2b31c:	bgt	2b434 <__flatcc_error_report@@Base+0x101c>
   2b320:	ldr	r6, [r4, #40]	; 0x28
   2b324:	ldr	r3, [r6, #16]
   2b328:	cmp	r3, #44	; 0x2c
   2b32c:	bne	2b3e8 <__flatcc_error_report@@Base+0xfd0>
   2b330:	mov	r0, r4
   2b334:	bl	2a1d4 <__flatcc_fb_default_error_out@@Base+0x110>
   2b338:	cmp	r6, #0
   2b33c:	beq	2b3e8 <__flatcc_error_report@@Base+0xfd0>
   2b340:	ldr	r6, [r4, #40]	; 0x28
   2b344:	ldr	r3, [r6, #16]
   2b348:	cmp	r3, #9
   2b34c:	bne	2b3d4 <__flatcc_error_report@@Base+0xfbc>
   2b350:	mov	r0, r4
   2b354:	bl	2a1d4 <__flatcc_fb_default_error_out@@Base+0x110>
   2b358:	mov	r7, r5
   2b35c:	cmp	r6, #0
   2b360:	beq	2b3e8 <__flatcc_error_report@@Base+0xfd0>
   2b364:	ldr	r3, [r4, #52]	; 0x34
   2b368:	add	r1, r3, #32
   2b36c:	ldr	r2, [r4, #44]	; 0x2c
   2b370:	cmp	r1, r2
   2b374:	bls	2b2ec <__flatcc_error_report@@Base+0xed4>
   2b378:	mov	r1, r8
   2b37c:	mov	r0, sl
   2b380:	bl	13fa4 <calloc@plt>
   2b384:	cmp	r0, #0
   2b388:	beq	2b2cc <__flatcc_error_report@@Base+0xeb4>
   2b38c:	ldr	r3, [r4, #48]	; 0x30
   2b390:	str	r3, [r0]
   2b394:	str	r0, [r4, #48]	; 0x30
   2b398:	add	r3, r0, #16
   2b39c:	str	r3, [r4, #52]	; 0x34
   2b3a0:	add	r0, r0, #65536	; 0x10000
   2b3a4:	str	r0, [r4, #44]	; 0x2c
   2b3a8:	b	2b2ec <__flatcc_error_report@@Base+0xed4>
   2b3ac:	mov	r0, r4
   2b3b0:	bl	2a1d4 <__flatcc_fb_default_error_out@@Base+0x110>
   2b3b4:	cmp	r6, #0
   2b3b8:	beq	2b314 <__flatcc_error_report@@Base+0xefc>
   2b3bc:	mov	r3, r9
   2b3c0:	mov	r2, r8
   2b3c4:	add	r1, r5, #8
   2b3c8:	mov	r0, r4
   2b3cc:	bl	2aba8 <__flatcc_error_report@@Base+0x790>
   2b3d0:	b	2b314 <__flatcc_error_report@@Base+0xefc>
   2b3d4:	mov	r3, #0
   2b3d8:	ldr	r2, [pc, #144]	; 2b470 <__flatcc_error_report@@Base+0x1058>
   2b3dc:	mov	r1, r6
   2b3e0:	mov	r0, r4
   2b3e4:	bl	2a5dc <__flatcc_error_report@@Base+0x1c4>
   2b3e8:	mov	r3, fp
   2b3ec:	ldr	r2, [pc, #108]	; 2b460 <__flatcc_error_report@@Base+0x1048>
   2b3f0:	mov	r1, #41	; 0x29
   2b3f4:	mov	r0, r4
   2b3f8:	bl	2a780 <__flatcc_error_report@@Base+0x368>
   2b3fc:	cmp	r5, #0
   2b400:	beq	2b43c <__flatcc_error_report@@Base+0x1024>
   2b404:	mov	r0, r5
   2b408:	mov	r2, #0
   2b40c:	b	2b414 <__flatcc_error_report@@Base+0xffc>
   2b410:	mov	r0, r3
   2b414:	ldr	r3, [r0]
   2b418:	str	r2, [r0]
   2b41c:	mov	r2, r0
   2b420:	cmp	r3, #0
   2b424:	bne	2b410 <__flatcc_error_report@@Base+0xff8>
   2b428:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2b42c:	mov	r0, #0
   2b430:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2b434:	mov	r0, r5
   2b438:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2b43c:	mov	r0, #0
   2b440:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2b444:	mov	r3, fp
   2b448:	ldr	r2, [pc, #16]	; 2b460 <__flatcc_error_report@@Base+0x1048>
   2b44c:	mov	r1, #41	; 0x29
   2b450:	mov	r0, r4
   2b454:	bl	2a780 <__flatcc_error_report@@Base+0x368>
   2b458:	mov	r0, #0
   2b45c:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2b460:	andeq	r3, r5, r8, asr ip
   2b464:	andeq	r3, r5, r8, lsl #24
   2b468:	andeq	r7, r6, r8, lsr #1
   2b46c:	strdeq	ip, [r3], -ip	; <UNPREDICTABLE>
   2b470:	andeq	r3, r5, r8, lsr #24
   2b474:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2b478:	mov	r4, r0
   2b47c:	ldr	r5, [r0, #40]	; 0x28
   2b480:	ldr	r3, [r5, #16]
   2b484:	cmp	r3, #9
   2b488:	bne	2b4e0 <__flatcc_error_report@@Base+0x10c8>
   2b48c:	mov	r7, r1
   2b490:	mov	r8, r2
   2b494:	bl	2a1d4 <__flatcc_fb_default_error_out@@Base+0x110>
   2b498:	cmp	r5, #0
   2b49c:	beq	2b4f0 <__flatcc_error_report@@Base+0x10d8>
   2b4a0:	str	r5, [r7, #4]
   2b4a4:	mov	r0, r4
   2b4a8:	bl	2b250 <__flatcc_error_report@@Base+0xe38>
   2b4ac:	str	r0, [r7, #28]
   2b4b0:	ldr	r5, [r4, #40]	; 0x28
   2b4b4:	ldr	r3, [r5, #16]
   2b4b8:	cmp	r3, #123	; 0x7b
   2b4bc:	bne	2b504 <__flatcc_error_report@@Base+0x10ec>
   2b4c0:	mov	r0, r4
   2b4c4:	bl	2a1d4 <__flatcc_fb_default_error_out@@Base+0x110>
   2b4c8:	cmp	r5, #0
   2b4cc:	beq	2b4f0 <__flatcc_error_report@@Base+0x10d8>
   2b4d0:	ldr	fp, [r4, #40]	; 0x28
   2b4d4:	ldr	r9, [pc, #1256]	; 2b9c4 <__flatcc_error_report@@Base+0x15ac>
   2b4d8:	ldr	sl, [pc, #1256]	; 2b9c8 <__flatcc_error_report@@Base+0x15b0>
   2b4dc:	b	2b890 <__flatcc_error_report@@Base+0x1478>
   2b4e0:	mov	r3, #0
   2b4e4:	ldr	r2, [pc, #1248]	; 2b9cc <__flatcc_error_report@@Base+0x15b4>
   2b4e8:	mov	r1, r5
   2b4ec:	bl	2a5dc <__flatcc_error_report@@Base+0x1c4>
   2b4f0:	mov	r2, #1
   2b4f4:	mov	r1, #125	; 0x7d
   2b4f8:	mov	r0, r4
   2b4fc:	bl	2a2e8 <__flatcc_fb_default_error_out@@Base+0x224>
   2b500:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2b504:	mov	r3, #0
   2b508:	ldr	r2, [pc, #1216]	; 2b9d0 <__flatcc_error_report@@Base+0x15b8>
   2b50c:	mov	r1, r5
   2b510:	mov	r0, r4
   2b514:	bl	2a5dc <__flatcc_error_report@@Base+0x1c4>
   2b518:	b	2b4f0 <__flatcc_error_report@@Base+0x10d8>
   2b51c:	ldr	r5, [r4, #52]	; 0x34
   2b520:	add	r2, r5, #128	; 0x80
   2b524:	ldr	r3, [r4, #44]	; 0x2c
   2b528:	cmp	r2, r3
   2b52c:	bhi	2b63c <__flatcc_error_report@@Base+0x1224>
   2b530:	ldr	r3, [r4, #52]	; 0x34
   2b534:	add	r3, r3, #128	; 0x80
   2b538:	str	r3, [r4, #52]	; 0x34
   2b53c:	mov	r6, r5
   2b540:	ldr	r3, [r7, #20]
   2b544:	str	r3, [r5]
   2b548:	mov	r3, #5
   2b54c:	strh	r3, [r5, #8]
   2b550:	str	r5, [r7, #20]
   2b554:	add	r0, r4, #36	; 0x24
   2b558:	bl	2a090 <__flatcc_fb_read_file@@Base+0xf0>
   2b55c:	ldr	r3, [r4, #36]	; 0x24
   2b560:	str	r3, [r5, #68]	; 0x44
   2b564:	mov	r3, #0
   2b568:	str	r3, [r4, #36]	; 0x24
   2b56c:	ldr	r5, [r4, #40]	; 0x28
   2b570:	ldr	r3, [r5, #16]
   2b574:	cmp	r3, #9
   2b578:	bne	2b690 <__flatcc_error_report@@Base+0x1278>
   2b57c:	mov	r0, r4
   2b580:	bl	2a1d4 <__flatcc_fb_default_error_out@@Base+0x110>
   2b584:	cmp	r5, #0
   2b588:	beq	2b714 <__flatcc_error_report@@Base+0x12fc>
   2b58c:	str	r5, [r6, #4]
   2b590:	ldr	r5, [r4, #40]	; 0x28
   2b594:	ldr	r3, [r5, #16]
   2b598:	cmp	r3, #40	; 0x28
   2b59c:	bne	2b6a8 <__flatcc_error_report@@Base+0x1290>
   2b5a0:	mov	r0, r4
   2b5a4:	bl	2a1d4 <__flatcc_fb_default_error_out@@Base+0x110>
   2b5a8:	cmp	r5, #0
   2b5ac:	beq	2b714 <__flatcc_error_report@@Base+0x12fc>
   2b5b0:	add	r1, r6, #32
   2b5b4:	mov	r0, r4
   2b5b8:	bl	2a7c0 <__flatcc_error_report@@Base+0x3a8>
   2b5bc:	ldr	r5, [r4, #40]	; 0x28
   2b5c0:	ldr	r3, [r5, #16]
   2b5c4:	cmp	r3, #41	; 0x29
   2b5c8:	bne	2b6c0 <__flatcc_error_report@@Base+0x12a8>
   2b5cc:	mov	r0, r4
   2b5d0:	bl	2a1d4 <__flatcc_fb_default_error_out@@Base+0x110>
   2b5d4:	cmp	r5, #0
   2b5d8:	beq	2b714 <__flatcc_error_report@@Base+0x12fc>
   2b5dc:	ldr	r5, [r4, #40]	; 0x28
   2b5e0:	ldr	r3, [r5, #16]
   2b5e4:	cmp	r3, #58	; 0x3a
   2b5e8:	bne	2b6d8 <__flatcc_error_report@@Base+0x12c0>
   2b5ec:	mov	r0, r4
   2b5f0:	bl	2a1d4 <__flatcc_fb_default_error_out@@Base+0x110>
   2b5f4:	cmp	r5, #0
   2b5f8:	beq	2b714 <__flatcc_error_report@@Base+0x12fc>
   2b5fc:	add	r1, r6, #16
   2b600:	mov	r0, r4
   2b604:	bl	2a7c0 <__flatcc_error_report@@Base+0x3a8>
   2b608:	ldr	r5, [r4, #40]	; 0x28
   2b60c:	ldr	r3, [r5, #16]
   2b610:	cmp	r3, #61	; 0x3d
   2b614:	beq	2b6f0 <__flatcc_error_report@@Base+0x12d8>
   2b618:	mov	r0, r4
   2b61c:	bl	2b250 <__flatcc_error_report@@Base+0xe38>
   2b620:	str	r0, [r6, #64]	; 0x40
   2b624:	mov	r3, #0
   2b628:	ldr	r2, [pc, #932]	; 2b9d4 <__flatcc_error_report@@Base+0x15bc>
   2b62c:	mov	r1, #59	; 0x3b
   2b630:	mov	r0, r4
   2b634:	bl	2a780 <__flatcc_error_report@@Base+0x368>
   2b638:	b	2b884 <__flatcc_error_report@@Base+0x146c>
   2b63c:	mov	r1, #1
   2b640:	mov	r0, #65536	; 0x10000
   2b644:	bl	13fa4 <calloc@plt>
   2b648:	cmp	r0, #0
   2b64c:	beq	2b670 <__flatcc_error_report@@Base+0x1258>
   2b650:	ldr	r3, [r4, #48]	; 0x30
   2b654:	str	r3, [r0]
   2b658:	str	r0, [r4, #48]	; 0x30
   2b65c:	add	r5, r0, #16
   2b660:	str	r5, [r4, #52]	; 0x34
   2b664:	add	r0, r0, #65536	; 0x10000
   2b668:	str	r0, [r4, #44]	; 0x2c
   2b66c:	b	2b530 <__flatcc_error_report@@Base+0x1118>
   2b670:	ldr	r3, [pc, #864]	; 2b9d8 <__flatcc_error_report@@Base+0x15c0>
   2b674:	ldr	r3, [r3]
   2b678:	mov	r2, #34	; 0x22
   2b67c:	mov	r1, #1
   2b680:	ldr	r0, [pc, #852]	; 2b9dc <__flatcc_error_report@@Base+0x15c4>
   2b684:	bl	1401c <fwrite@plt>
   2b688:	mov	r0, #1
   2b68c:	bl	14070 <exit@plt>
   2b690:	mov	r3, #0
   2b694:	ldr	r2, [pc, #836]	; 2b9e0 <__flatcc_error_report@@Base+0x15c8>
   2b698:	mov	r1, r5
   2b69c:	mov	r0, r4
   2b6a0:	bl	2a5dc <__flatcc_error_report@@Base+0x1c4>
   2b6a4:	b	2b714 <__flatcc_error_report@@Base+0x12fc>
   2b6a8:	mov	r3, #0
   2b6ac:	ldr	r2, [pc, #816]	; 2b9e4 <__flatcc_error_report@@Base+0x15cc>
   2b6b0:	mov	r1, r5
   2b6b4:	mov	r0, r4
   2b6b8:	bl	2a5dc <__flatcc_error_report@@Base+0x1c4>
   2b6bc:	b	2b714 <__flatcc_error_report@@Base+0x12fc>
   2b6c0:	mov	r3, #0
   2b6c4:	ldr	r2, [pc, #796]	; 2b9e8 <__flatcc_error_report@@Base+0x15d0>
   2b6c8:	mov	r1, r5
   2b6cc:	mov	r0, r4
   2b6d0:	bl	2a5dc <__flatcc_error_report@@Base+0x1c4>
   2b6d4:	b	2b714 <__flatcc_error_report@@Base+0x12fc>
   2b6d8:	mov	r3, #0
   2b6dc:	ldr	r2, [pc, #776]	; 2b9ec <__flatcc_error_report@@Base+0x15d4>
   2b6e0:	mov	r1, r5
   2b6e4:	mov	r0, r4
   2b6e8:	bl	2a5dc <__flatcc_error_report@@Base+0x1c4>
   2b6ec:	b	2b714 <__flatcc_error_report@@Base+0x12fc>
   2b6f0:	mov	r0, r4
   2b6f4:	bl	2a1d4 <__flatcc_fb_default_error_out@@Base+0x110>
   2b6f8:	cmp	r5, #0
   2b6fc:	beq	2b618 <__flatcc_error_report@@Base+0x1200>
   2b700:	mov	r3, #0
   2b704:	ldr	r2, [pc, #740]	; 2b9f0 <__flatcc_error_report@@Base+0x15d8>
   2b708:	mov	r1, r5
   2b70c:	mov	r0, r4
   2b710:	bl	2a5dc <__flatcc_error_report@@Base+0x1c4>
   2b714:	ldr	r3, [r4, #40]	; 0x28
   2b718:	ldr	r3, [r3, #16]
   2b71c:	cmp	r3, #0
   2b720:	beq	2b884 <__flatcc_error_report@@Base+0x146c>
   2b724:	cmp	r3, #59	; 0x3b
   2b728:	beq	2b768 <__flatcc_error_report@@Base+0x1350>
   2b72c:	cmp	r3, #125	; 0x7d
   2b730:	beq	2b75c <__flatcc_error_report@@Base+0x1344>
   2b734:	mov	r0, r4
   2b738:	bl	2a1d4 <__flatcc_fb_default_error_out@@Base+0x110>
   2b73c:	ldr	r3, [r4, #40]	; 0x28
   2b740:	ldr	r3, [r3, #16]
   2b744:	cmp	r3, #0
   2b748:	beq	2b884 <__flatcc_error_report@@Base+0x146c>
   2b74c:	cmp	r3, #59	; 0x3b
   2b750:	beq	2b768 <__flatcc_error_report@@Base+0x1350>
   2b754:	cmp	r3, #125	; 0x7d
   2b758:	bne	2b734 <__flatcc_error_report@@Base+0x131c>
   2b75c:	mov	r3, #0
   2b760:	str	r3, [r4, #36]	; 0x24
   2b764:	b	2b884 <__flatcc_error_report@@Base+0x146c>
   2b768:	mov	r0, r4
   2b76c:	bl	2a1d4 <__flatcc_fb_default_error_out@@Base+0x110>
   2b770:	mov	r3, #0
   2b774:	str	r3, [r4, #36]	; 0x24
   2b778:	b	2b884 <__flatcc_error_report@@Base+0x146c>
   2b77c:	mov	r1, #1
   2b780:	mov	r0, #65536	; 0x10000
   2b784:	bl	13fa4 <calloc@plt>
   2b788:	cmp	r0, #0
   2b78c:	beq	2b7b0 <__flatcc_error_report@@Base+0x1398>
   2b790:	ldr	r3, [r4, #48]	; 0x30
   2b794:	str	r3, [r0]
   2b798:	str	r0, [r4, #48]	; 0x30
   2b79c:	add	r5, r0, #16
   2b7a0:	str	r5, [r4, #52]	; 0x34
   2b7a4:	add	r0, r0, #65536	; 0x10000
   2b7a8:	str	r0, [r4, #44]	; 0x2c
   2b7ac:	b	2b8c0 <__flatcc_error_report@@Base+0x14a8>
   2b7b0:	ldr	r3, [pc, #544]	; 2b9d8 <__flatcc_error_report@@Base+0x15c0>
   2b7b4:	ldr	r3, [r3]
   2b7b8:	mov	r2, #34	; 0x22
   2b7bc:	mov	r1, #1
   2b7c0:	ldr	r0, [pc, #532]	; 2b9dc <__flatcc_error_report@@Base+0x15c4>
   2b7c4:	bl	1401c <fwrite@plt>
   2b7c8:	mov	r0, #1
   2b7cc:	bl	14070 <exit@plt>
   2b7d0:	mov	r3, #0
   2b7d4:	ldr	r2, [pc, #536]	; 2b9f4 <__flatcc_error_report@@Base+0x15dc>
   2b7d8:	mov	r1, r5
   2b7dc:	mov	r0, r4
   2b7e0:	bl	2a5dc <__flatcc_error_report@@Base+0x1c4>
   2b7e4:	ldr	r3, [r4, #40]	; 0x28
   2b7e8:	ldr	r3, [r3, #16]
   2b7ec:	cmp	r3, #0
   2b7f0:	beq	2b884 <__flatcc_error_report@@Base+0x146c>
   2b7f4:	cmp	r3, #59	; 0x3b
   2b7f8:	beq	2b970 <__flatcc_error_report@@Base+0x1558>
   2b7fc:	cmp	r3, #125	; 0x7d
   2b800:	beq	2b82c <__flatcc_error_report@@Base+0x1414>
   2b804:	mov	r0, r4
   2b808:	bl	2a1d4 <__flatcc_fb_default_error_out@@Base+0x110>
   2b80c:	ldr	r3, [r4, #40]	; 0x28
   2b810:	ldr	r3, [r3, #16]
   2b814:	cmp	r3, #0
   2b818:	beq	2b884 <__flatcc_error_report@@Base+0x146c>
   2b81c:	cmp	r3, #59	; 0x3b
   2b820:	beq	2b970 <__flatcc_error_report@@Base+0x1558>
   2b824:	cmp	r3, #125	; 0x7d
   2b828:	bne	2b804 <__flatcc_error_report@@Base+0x13ec>
   2b82c:	mov	r3, #0
   2b830:	str	r3, [r4, #36]	; 0x24
   2b834:	b	2b884 <__flatcc_error_report@@Base+0x146c>
   2b838:	mov	r3, #0
   2b83c:	ldr	r2, [pc, #436]	; 2b9f8 <__flatcc_error_report@@Base+0x15e0>
   2b840:	mov	r1, r5
   2b844:	mov	r0, r4
   2b848:	bl	2a5dc <__flatcc_error_report@@Base+0x1c4>
   2b84c:	b	2b7e4 <__flatcc_error_report@@Base+0x13cc>
   2b850:	mov	r3, sl
   2b854:	mov	r2, #2
   2b858:	add	r1, r6, #48	; 0x30
   2b85c:	mov	r0, r4
   2b860:	bl	2aba8 <__flatcc_error_report@@Base+0x790>
   2b864:	mov	r0, r4
   2b868:	bl	2b250 <__flatcc_error_report@@Base+0xe38>
   2b86c:	str	r0, [r6, #64]	; 0x40
   2b870:	mov	r3, #0
   2b874:	mov	r2, r9
   2b878:	mov	r1, #59	; 0x3b
   2b87c:	mov	r0, r4
   2b880:	bl	2a780 <__flatcc_error_report@@Base+0x368>
   2b884:	ldr	r3, [r4, #108]	; 0x6c
   2b888:	cmp	r3, #9
   2b88c:	bgt	2b4f0 <__flatcc_error_report@@Base+0x10d8>
   2b890:	ldr	r5, [r4, #40]	; 0x28
   2b894:	ldr	r3, [r5, #16]
   2b898:	cmp	r3, #125	; 0x7d
   2b89c:	beq	2b984 <__flatcc_error_report@@Base+0x156c>
   2b8a0:	ldr	r3, [pc, #340]	; 2b9fc <__flatcc_error_report@@Base+0x15e4>
   2b8a4:	cmp	r8, r3
   2b8a8:	beq	2b51c <__flatcc_error_report@@Base+0x1104>
   2b8ac:	ldr	r5, [r4, #52]	; 0x34
   2b8b0:	add	r2, r5, #128	; 0x80
   2b8b4:	ldr	r3, [r4, #44]	; 0x2c
   2b8b8:	cmp	r2, r3
   2b8bc:	bhi	2b77c <__flatcc_error_report@@Base+0x1364>
   2b8c0:	ldr	r3, [r4, #52]	; 0x34
   2b8c4:	add	r3, r3, #128	; 0x80
   2b8c8:	str	r3, [r4, #52]	; 0x34
   2b8cc:	mov	r6, r5
   2b8d0:	ldr	r3, [r7, #20]
   2b8d4:	str	r3, [r5]
   2b8d8:	mov	r3, #5
   2b8dc:	strh	r3, [r5, #8]
   2b8e0:	str	r5, [r7, #20]
   2b8e4:	add	r0, r4, #36	; 0x24
   2b8e8:	bl	2a090 <__flatcc_fb_read_file@@Base+0xf0>
   2b8ec:	ldr	r3, [r4, #36]	; 0x24
   2b8f0:	str	r3, [r5, #68]	; 0x44
   2b8f4:	mov	r3, #0
   2b8f8:	str	r3, [r4, #36]	; 0x24
   2b8fc:	ldr	r5, [r4, #40]	; 0x28
   2b900:	ldr	r3, [r5, #16]
   2b904:	cmp	r3, #9
   2b908:	bne	2b7d0 <__flatcc_error_report@@Base+0x13b8>
   2b90c:	mov	r0, r4
   2b910:	bl	2a1d4 <__flatcc_fb_default_error_out@@Base+0x110>
   2b914:	cmp	r5, #0
   2b918:	beq	2b7e4 <__flatcc_error_report@@Base+0x13cc>
   2b91c:	str	r5, [r6, #4]
   2b920:	ldr	r5, [r4, #40]	; 0x28
   2b924:	ldr	r3, [r5, #16]
   2b928:	cmp	r3, #58	; 0x3a
   2b92c:	bne	2b838 <__flatcc_error_report@@Base+0x1420>
   2b930:	mov	r0, r4
   2b934:	bl	2a1d4 <__flatcc_fb_default_error_out@@Base+0x110>
   2b938:	cmp	r5, #0
   2b93c:	beq	2b7e4 <__flatcc_error_report@@Base+0x13cc>
   2b940:	add	r1, r6, #16
   2b944:	mov	r0, r4
   2b948:	bl	2a7c0 <__flatcc_error_report@@Base+0x3a8>
   2b94c:	ldr	r5, [r4, #40]	; 0x28
   2b950:	ldr	r3, [r5, #16]
   2b954:	cmp	r3, #61	; 0x3d
   2b958:	bne	2b864 <__flatcc_error_report@@Base+0x144c>
   2b95c:	mov	r0, r4
   2b960:	bl	2a1d4 <__flatcc_fb_default_error_out@@Base+0x110>
   2b964:	cmp	r5, #0
   2b968:	bne	2b850 <__flatcc_error_report@@Base+0x1438>
   2b96c:	b	2b864 <__flatcc_error_report@@Base+0x144c>
   2b970:	mov	r0, r4
   2b974:	bl	2a1d4 <__flatcc_fb_default_error_out@@Base+0x110>
   2b978:	mov	r3, #0
   2b97c:	str	r3, [r4, #36]	; 0x24
   2b980:	b	2b884 <__flatcc_error_report@@Base+0x146c>
   2b984:	mov	r0, r4
   2b988:	bl	2a1d4 <__flatcc_fb_default_error_out@@Base+0x110>
   2b98c:	clz	r5, r5
   2b990:	lsr	r5, r5, #5
   2b994:	cmp	fp, #0
   2b998:	moveq	r5, #0
   2b99c:	cmp	r5, #0
   2b9a0:	beq	2b9b8 <__flatcc_error_report@@Base+0x15a0>
   2b9a4:	mov	r3, fp
   2b9a8:	ldr	r2, [pc, #80]	; 2ba00 <__flatcc_error_report@@Base+0x15e8>
   2b9ac:	ldr	r1, [r4, #40]	; 0x28
   2b9b0:	mov	r0, r4
   2b9b4:	bl	2a5dc <__flatcc_error_report@@Base+0x1c4>
   2b9b8:	add	r0, r7, #20
   2b9bc:	bl	2a090 <__flatcc_fb_read_file@@Base+0xf0>
   2b9c0:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2b9c4:	andeq	r3, r5, r0, lsl lr
   2b9c8:	andeq	r3, r5, ip, ror #27
   2b9cc:	andeq	r3, r5, r8, ror ip
   2b9d0:	muleq	r5, ip, ip
   2b9d4:	andeq	r3, r5, r0, lsl #27
   2b9d8:	andeq	r7, r6, r8, lsr #1
   2b9dc:	strdeq	ip, [r3], -ip	; <UNPREDICTABLE>
   2b9e0:			; <UNDEFINED> instruction: 0x00053cb8
   2b9e4:	ldrdeq	r3, [r5], -r4
   2b9e8:	strdeq	r3, [r5], -ip
   2b9ec:	andeq	r3, r5, r4, lsr #26
   2b9f0:	andeq	r3, r5, r8, asr sp
   2b9f4:	andeq	r3, r5, r4, lsr #27
   2b9f8:	andeq	r3, r5, r0, asr #27
   2b9fc:			; <UNDEFINED> instruction: 0xfffffc39
   2ba00:	andeq	r3, r5, r4, lsr lr

0002ba04 <error_ref_sym@@Base>:
   2ba04:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2ba08:	sub	sp, sp, #76	; 0x4c
   2ba0c:	str	r0, [sp, #12]
   2ba10:	mov	fp, r2
   2ba14:	mov	sl, r3
   2ba18:	subs	r9, r1, #0
   2ba1c:	beq	2badc <error_ref_sym@@Base+0xd8>
   2ba20:	mov	r6, r9
   2ba24:	mov	r7, #0
   2ba28:	mov	r5, #50	; 0x32
   2ba2c:	mov	r8, #46	; 0x2e
   2ba30:	ldr	r3, [r6, #4]
   2ba34:	ldr	r4, [r3, #4]
   2ba38:	cmp	r4, r5
   2ba3c:	movge	r4, r5
   2ba40:	mov	r2, r4
   2ba44:	ldr	r1, [r3]
   2ba48:	add	r3, sp, #20
   2ba4c:	add	r0, r3, r7
   2ba50:	bl	13fe0 <memcpy@plt>
   2ba54:	sub	r5, r5, r4
   2ba58:	add	r4, r4, r7
   2ba5c:	add	r3, sp, #72	; 0x48
   2ba60:	add	r3, r3, r4
   2ba64:	strb	r8, [r3, #-52]	; 0xffffffcc
   2ba68:	sub	r5, r5, #1
   2ba6c:	add	r7, r4, #1
   2ba70:	ldr	r6, [r6]
   2ba74:	cmp	r6, #0
   2ba78:	cmpne	r5, #0
   2ba7c:	bgt	2ba30 <error_ref_sym@@Base+0x2c>
   2ba80:	add	r3, sp, #72	; 0x48
   2ba84:	add	r3, r3, r7
   2ba88:	mov	r2, #0
   2ba8c:	strb	r2, [r3, #-52]	; 0xffffffcc
   2ba90:	cmp	r7, r2
   2ba94:	movle	r4, r7
   2ba98:	cmp	r5, r2
   2ba9c:	ldrle	r3, [pc, #68]	; 2bae8 <error_ref_sym@@Base+0xe4>
   2baa0:	ldrle	r0, [r3, #8]
   2baa4:	strle	r0, [sp, #67]	; 0x43
   2baa8:	movle	r4, #50	; 0x32
   2baac:	ldr	r1, [r9, #4]
   2bab0:	cmp	sl, #0
   2bab4:	ldrne	r3, [sl, #4]
   2bab8:	moveq	r3, #0
   2babc:	str	r4, [sp, #4]
   2bac0:	add	r2, sp, #20
   2bac4:	str	r2, [sp]
   2bac8:	mov	r2, fp
   2bacc:	ldr	r0, [sp, #12]
   2bad0:	bl	2a418 <__flatcc_error_report@@Base>
   2bad4:	add	sp, sp, #76	; 0x4c
   2bad8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2badc:	mov	r4, #0
   2bae0:	strb	r4, [sp, #20]
   2bae4:	b	2baac <error_ref_sym@@Base+0xa8>
   2bae8:	andeq	r3, r5, r0, lsr #15

0002baec <__flatcc_fb_init_parser@@Base>:
   2baec:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   2baf0:	mov	r5, r0
   2baf4:	mov	r7, r1
   2baf8:	mov	r6, r2
   2bafc:	mov	r8, r3
   2bb00:	ldr	r4, [sp, #36]	; 0x24
   2bb04:	mov	r2, #560	; 0x230
   2bb08:	mov	r1, #0
   2bb0c:	bl	140ac <memset@plt>
   2bb10:	cmp	r8, #0
   2bb14:	strne	r8, [r5, #8]
   2bb18:	ldrne	r3, [sp, #32]
   2bb1c:	strne	r3, [r5, #12]
   2bb20:	ldreq	r3, [pc, #712]	; 2bdf0 <__flatcc_fb_init_parser@@Base+0x304>
   2bb24:	streq	r3, [r5, #8]
   2bb28:	cmp	r7, #0
   2bb2c:	beq	2bb84 <__flatcc_fb_init_parser@@Base+0x98>
   2bb30:	mov	r2, #224	; 0xe0
   2bb34:	mov	r1, r7
   2bb38:	add	r0, r5, #128	; 0x80
   2bb3c:	bl	13fe0 <memcpy@plt>
   2bb40:	cmp	r4, #0
   2bb44:	addeq	r4, r5, #416	; 0x1a0
   2bb48:	str	r4, [r5, #412]	; 0x19c
   2bb4c:	ldr	r3, [r5, #192]	; 0xc0
   2bb50:	cmp	r3, #4
   2bb54:	beq	2bb90 <__flatcc_fb_init_parser@@Base+0xa4>
   2bb58:	cmp	r3, #8
   2bb5c:	beq	2bb90 <__flatcc_fb_init_parser@@Base+0xa4>
   2bb60:	cmp	r3, #2
   2bb64:	beq	2bb90 <__flatcc_fb_init_parser@@Base+0xa4>
   2bb68:	mov	r3, #0
   2bb6c:	ldr	r2, [pc, #640]	; 2bdf4 <__flatcc_fb_init_parser@@Base+0x308>
   2bb70:	mov	r1, r3
   2bb74:	mov	r0, r5
   2bb78:	bl	2a5dc <__flatcc_error_report@@Base+0x1c4>
   2bb7c:	mvn	r0, #0
   2bb80:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   2bb84:	add	r0, r5, #128	; 0x80
   2bb88:	bl	14f6c <flatcc_init_options@@Base>
   2bb8c:	b	2bb40 <__flatcc_fb_init_parser@@Base+0x54>
   2bb90:	ldr	r3, [r5, #196]	; 0xc4
   2bb94:	cmp	r3, #4
   2bb98:	beq	2bbc8 <__flatcc_fb_init_parser@@Base+0xdc>
   2bb9c:	cmp	r3, #8
   2bba0:	beq	2bbc8 <__flatcc_fb_init_parser@@Base+0xdc>
   2bba4:	cmp	r3, #2
   2bba8:	beq	2bbc8 <__flatcc_fb_init_parser@@Base+0xdc>
   2bbac:	mov	r3, #0
   2bbb0:	ldr	r2, [pc, #576]	; 2bdf8 <__flatcc_fb_init_parser@@Base+0x30c>
   2bbb4:	mov	r1, r3
   2bbb8:	mov	r0, r5
   2bbbc:	bl	2a5dc <__flatcc_error_report@@Base+0x1c4>
   2bbc0:	mvn	r0, #0
   2bbc4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   2bbc8:	ldr	r3, [pc, #556]	; 2bdfc <__flatcc_fb_init_parser@@Base+0x310>
   2bbcc:	cmp	r6, #0
   2bbd0:	moveq	r6, r3
   2bbd4:	mov	r0, r6
   2bbd8:	bl	1407c <strlen@plt>
   2bbdc:	mov	sl, r0
   2bbe0:	ldr	r2, [r7, #96]	; 0x60
   2bbe4:	mov	r1, r0
   2bbe8:	mov	r0, r6
   2bbec:	bl	29f44 <__flatcc_fb_create_basename@@Base>
   2bbf0:	mov	r4, r0
   2bbf4:	str	r0, [r5, #512]	; 0x200
   2bbf8:	cmp	r0, #0
   2bbfc:	beq	2bcdc <__flatcc_fb_init_parser@@Base+0x1f0>
   2bc00:	bl	1407c <strlen@plt>
   2bc04:	mov	r9, r0
   2bc08:	mov	r1, r0
   2bc0c:	mov	r0, r4
   2bc10:	bl	29aac <__flatcc_fb_copy_path_n@@Base>
   2bc14:	subs	r8, r0, #0
   2bc18:	beq	2bcfc <__flatcc_fb_init_parser@@Base+0x210>
   2bc1c:	cmp	r9, #0
   2bc20:	beq	2bc5c <__flatcc_fb_init_parser@@Base+0x170>
   2bc24:	ldrb	r4, [r8]
   2bc28:	cmp	r4, #0
   2bc2c:	beq	2bc5c <__flatcc_fb_init_parser@@Base+0x170>
   2bc30:	bl	14058 <__ctype_toupper_loc@plt>
   2bc34:	mov	r3, r8
   2bc38:	add	r1, r8, r9
   2bc3c:	ldr	r2, [r0]
   2bc40:	ldr	r2, [r2, r4, lsl #2]
   2bc44:	strb	r2, [r3], #1
   2bc48:	cmp	r1, r3
   2bc4c:	beq	2bc5c <__flatcc_fb_init_parser@@Base+0x170>
   2bc50:	ldrb	r4, [r3]
   2bc54:	cmp	r4, #0
   2bc58:	bne	2bc3c <__flatcc_fb_init_parser@@Base+0x150>
   2bc5c:	str	r8, [r5, #516]	; 0x204
   2bc60:	str	r8, [r5, #496]	; 0x1f0
   2bc64:	str	r9, [r5, #500]	; 0x1f4
   2bc68:	ldr	r2, [pc, #400]	; 2be00 <__flatcc_fb_init_parser@@Base+0x314>
   2bc6c:	mov	r1, sl
   2bc70:	mov	r0, r6
   2bc74:	bl	29f44 <__flatcc_fb_create_basename@@Base>
   2bc78:	str	r0, [r5, #520]	; 0x208
   2bc7c:	cmp	r0, #0
   2bc80:	beq	2bd1c <__flatcc_fb_init_parser@@Base+0x230>
   2bc84:	ldr	r3, [r7, #192]	; 0xc0
   2bc88:	cmp	r3, #0
   2bc8c:	beq	2bca0 <__flatcc_fb_init_parser@@Base+0x1b4>
   2bc90:	str	r3, [r5, #476]	; 0x1dc
   2bc94:	ldr	r0, [r7, #192]	; 0xc0
   2bc98:	bl	1407c <strlen@plt>
   2bc9c:	str	r0, [r5, #480]	; 0x1e0
   2bca0:	mov	r2, #0
   2bca4:	mov	r1, r2
   2bca8:	ldr	r0, [r5, #412]	; 0x19c
   2bcac:	bl	29418 <fb_scope_table_find@@Base>
   2bcb0:	subs	r4, r0, #0
   2bcb4:	beq	2bd3c <__flatcc_fb_init_parser@@Base+0x250>
   2bcb8:	str	r4, [r5, #544]	; 0x220
   2bcbc:	mov	r2, #0
   2bcc0:	mov	r1, r2
   2bcc4:	ldr	r0, [r5, #412]	; 0x19c
   2bcc8:	bl	29418 <fb_scope_table_find@@Base>
   2bccc:	cmp	r4, r0
   2bcd0:	bne	2bddc <__flatcc_fb_init_parser@@Base+0x2f0>
   2bcd4:	mov	r0, #0
   2bcd8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   2bcdc:	ldr	r3, [pc, #288]	; 2be04 <__flatcc_fb_init_parser@@Base+0x318>
   2bce0:	ldr	r3, [r3]
   2bce4:	mov	r2, #34	; 0x22
   2bce8:	mov	r1, #1
   2bcec:	ldr	r0, [pc, #276]	; 2be08 <__flatcc_fb_init_parser@@Base+0x31c>
   2bcf0:	bl	1401c <fwrite@plt>
   2bcf4:	mov	r0, #1
   2bcf8:	bl	14070 <exit@plt>
   2bcfc:	ldr	r3, [pc, #256]	; 2be04 <__flatcc_fb_init_parser@@Base+0x318>
   2bd00:	ldr	r3, [r3]
   2bd04:	mov	r2, #34	; 0x22
   2bd08:	mov	r1, #1
   2bd0c:	ldr	r0, [pc, #244]	; 2be08 <__flatcc_fb_init_parser@@Base+0x31c>
   2bd10:	bl	1401c <fwrite@plt>
   2bd14:	mov	r0, #1
   2bd18:	bl	14070 <exit@plt>
   2bd1c:	ldr	r3, [pc, #224]	; 2be04 <__flatcc_fb_init_parser@@Base+0x318>
   2bd20:	ldr	r3, [r3]
   2bd24:	mov	r2, #34	; 0x22
   2bd28:	mov	r1, #1
   2bd2c:	ldr	r0, [pc, #212]	; 2be08 <__flatcc_fb_init_parser@@Base+0x31c>
   2bd30:	bl	1401c <fwrite@plt>
   2bd34:	mov	r0, #1
   2bd38:	bl	14070 <exit@plt>
   2bd3c:	ldr	r4, [r5, #52]	; 0x34
   2bd40:	add	r2, r4, #32
   2bd44:	ldr	r3, [r5, #44]	; 0x2c
   2bd48:	cmp	r2, r3
   2bd4c:	bhi	2bd88 <__flatcc_fb_init_parser@@Base+0x29c>
   2bd50:	ldr	r3, [r5, #52]	; 0x34
   2bd54:	add	r3, r3, #32
   2bd58:	str	r3, [r5, #52]	; 0x34
   2bd5c:	mov	r3, r4
   2bd60:	mov	r2, #0
   2bd64:	str	r2, [r3], #20
   2bd68:	add	r2, r5, #476	; 0x1dc
   2bd6c:	ldm	r2, {r0, r1}
   2bd70:	stm	r3, {r0, r1}
   2bd74:	mov	r2, #1
   2bd78:	mov	r1, r4
   2bd7c:	ldr	r0, [r5, #412]	; 0x19c
   2bd80:	bl	293f4 <fb_scope_table_insert_item@@Base>
   2bd84:	b	2bcb8 <__flatcc_fb_init_parser@@Base+0x1cc>
   2bd88:	mov	r1, #1
   2bd8c:	mov	r0, #65536	; 0x10000
   2bd90:	bl	13fa4 <calloc@plt>
   2bd94:	cmp	r0, #0
   2bd98:	beq	2bdbc <__flatcc_fb_init_parser@@Base+0x2d0>
   2bd9c:	ldr	r3, [r5, #48]	; 0x30
   2bda0:	str	r3, [r0]
   2bda4:	str	r0, [r5, #48]	; 0x30
   2bda8:	add	r4, r0, #16
   2bdac:	str	r4, [r5, #52]	; 0x34
   2bdb0:	add	r0, r0, #65536	; 0x10000
   2bdb4:	str	r0, [r5, #44]	; 0x2c
   2bdb8:	b	2bd50 <__flatcc_fb_init_parser@@Base+0x264>
   2bdbc:	ldr	r3, [pc, #64]	; 2be04 <__flatcc_fb_init_parser@@Base+0x318>
   2bdc0:	ldr	r3, [r3]
   2bdc4:	mov	r2, #34	; 0x22
   2bdc8:	mov	r1, #1
   2bdcc:	ldr	r0, [pc, #52]	; 2be08 <__flatcc_fb_init_parser@@Base+0x31c>
   2bdd0:	bl	1401c <fwrite@plt>
   2bdd4:	mov	r0, #1
   2bdd8:	bl	14070 <exit@plt>
   2bddc:	ldr	r3, [pc, #40]	; 2be0c <__flatcc_fb_init_parser@@Base+0x320>
   2bde0:	ldr	r2, [pc, #40]	; 2be10 <__flatcc_fb_init_parser@@Base+0x324>
   2bde4:	ldr	r1, [pc, #40]	; 2be14 <__flatcc_fb_init_parser@@Base+0x328>
   2bde8:	ldr	r0, [pc, #40]	; 2be18 <__flatcc_fb_init_parser@@Base+0x32c>
   2bdec:	bl	14148 <__assert_fail@plt>
   2bdf0:	andeq	sl, r2, r4, asr #1
   2bdf4:	andeq	r3, r5, r8, ror #28
   2bdf8:	andeq	r3, r5, r0, lsr #29
   2bdfc:	andeq	r3, r5, r0, ror #28
   2be00:	muleq	r4, r0, r4
   2be04:	andeq	r7, r6, r8, lsr #1
   2be08:	strdeq	ip, [r3], -ip	; <UNPREDICTABLE>
   2be0c:			; <UNDEFINED> instruction: 0x000537b0
   2be10:	andeq	r0, r0, r3, lsr r5
   2be14:	andeq	r3, r5, r8, asr #17
   2be18:	ldrdeq	r3, [r5], -ip

0002be1c <__flatcc_fb_parse@@Base>:
   2be1c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2be20:	sub	sp, sp, #28
   2be24:	mov	r9, r0
   2be28:	mov	r4, r1
   2be2c:	str	r1, [r0, #60]	; 0x3c
   2be30:	mov	r1, #1
   2be34:	str	r1, [r0, #64]	; 0x40
   2be38:	mov	r1, #9
   2be3c:	str	r1, [r0, #84]	; 0x54
   2be40:	ldr	r1, [pc, #4028]	; 2ce04 <__flatcc_fb_parse@@Base+0xfe8>
   2be44:	str	r1, [r0, #68]	; 0x44
   2be48:	mov	r1, #4
   2be4c:	str	r1, [r0, #72]	; 0x48
   2be50:	mov	r1, #0
   2be54:	str	r1, [r0, #80]	; 0x50
   2be58:	str	r1, [r0, #76]	; 0x4c
   2be5c:	ldr	r0, [pc, #4004]	; 2ce08 <__flatcc_fb_parse@@Base+0xfec>
   2be60:	str	r0, [r9, #104]	; 0x68
   2be64:	ldr	r0, [pc, #4000]	; 2ce0c <__flatcc_fb_parse@@Base+0xff0>
   2be68:	str	r0, [r9, #88]	; 0x58
   2be6c:	mov	r0, #5
   2be70:	str	r0, [r9, #92]	; 0x5c
   2be74:	str	r1, [r9, #100]	; 0x64
   2be78:	str	r1, [r9, #96]	; 0x60
   2be7c:	cmp	r3, r1
   2be80:	strne	r4, [r9, #16]
   2be84:	add	r6, r4, r2
   2be88:	ldr	sl, [pc, #3968]	; 2ce10 <__flatcc_fb_parse@@Base+0xff4>
   2be8c:	ldr	fp, [pc, #3968]	; 2ce14 <__flatcc_fb_parse@@Base+0xff8>
   2be90:	cmp	r6, r4
   2be94:	bne	2cb88 <__flatcc_fb_parse@@Base+0xd6c>
   2be98:	mov	r7, r6
   2be9c:	b	2c100 <__flatcc_fb_parse@@Base+0x2e4>
   2bea0:	mov	r5, r4
   2bea4:	add	r4, r5, #1
   2bea8:	cmp	r6, r4
   2beac:	beq	2bed0 <__flatcc_fb_parse@@Base+0xb4>
   2beb0:	ldrb	r3, [r5, #1]
   2beb4:	cmp	r3, #34	; 0x22
   2beb8:	cmpne	r3, #92	; 0x5c
   2bebc:	beq	2bed4 <__flatcc_fb_parse@@Base+0xb8>
   2bec0:	cmp	r3, #127	; 0x7f
   2bec4:	cmpne	r3, #31
   2bec8:	bhi	2bea0 <__flatcc_fb_parse@@Base+0x84>
   2becc:	b	2bed4 <__flatcc_fb_parse@@Base+0xb8>
   2bed0:	mov	r4, r6
   2bed4:	cmp	r7, r4
   2bed8:	beq	2bef0 <__flatcc_fb_parse@@Base+0xd4>
   2bedc:	mov	r3, r4
   2bee0:	mov	r2, r7
   2bee4:	mov	r1, #20
   2bee8:	mov	r0, r9
   2beec:	bl	2a0e4 <__flatcc_fb_default_error_out@@Base+0x20>
   2bef0:	ldrb	r3, [r4]
   2bef4:	cmp	r3, #34	; 0x22
   2bef8:	beq	2bf44 <__flatcc_fb_parse@@Base+0x128>
   2befc:	cmp	r3, #0
   2bf00:	cmpne	r6, r4
   2bf04:	beq	2bf64 <__flatcc_fb_parse@@Base+0x148>
   2bf08:	cmp	r3, #92	; 0x5c
   2bf0c:	beq	2bf7c <__flatcc_fb_parse@@Base+0x160>
   2bf10:	ldrb	r3, [r4]
   2bf14:	cmp	r3, #13
   2bf18:	cmpne	r3, #10
   2bf1c:	beq	2c078 <__flatcc_fb_parse@@Base+0x25c>
   2bf20:	add	r5, r4, #1
   2bf24:	mov	r3, r5
   2bf28:	mov	r2, r4
   2bf2c:	mov	r1, r8
   2bf30:	mov	r0, r9
   2bf34:	bl	2a0e4 <__flatcc_fb_default_error_out@@Base+0x20>
   2bf38:	mov	r7, r5
   2bf3c:	sub	r5, r5, #1
   2bf40:	b	2bea4 <__flatcc_fb_parse@@Base+0x88>
   2bf44:	add	r5, r5, #2
   2bf48:	mov	r3, r5
   2bf4c:	mov	r2, r4
   2bf50:	mov	r1, #22
   2bf54:	mov	r0, r9
   2bf58:	bl	2a0e4 <__flatcc_fb_default_error_out@@Base+0x20>
   2bf5c:	mov	r4, r5
   2bf60:	b	2be90 <__flatcc_fb_parse@@Base+0x74>
   2bf64:	mov	r3, r4
   2bf68:	mov	r2, r4
   2bf6c:	mov	r1, #23
   2bf70:	mov	r0, r9
   2bf74:	bl	2a0e4 <__flatcc_fb_default_error_out@@Base+0x20>
   2bf78:	b	2be90 <__flatcc_fb_parse@@Base+0x74>
   2bf7c:	add	r7, r5, #2
   2bf80:	mov	r3, r7
   2bf84:	mov	r2, r4
   2bf88:	mov	r1, #21
   2bf8c:	mov	r0, r9
   2bf90:	bl	2a0e4 <__flatcc_fb_default_error_out@@Base+0x20>
   2bf94:	cmp	r6, r7
   2bf98:	beq	2c02c <__flatcc_fb_parse@@Base+0x210>
   2bf9c:	ldrb	r3, [r4, #1]
   2bfa0:	cmp	r3, #0
   2bfa4:	beq	2c010 <__flatcc_fb_parse@@Base+0x1f4>
   2bfa8:	cmp	r3, #34	; 0x22
   2bfac:	cmpne	r3, #92	; 0x5c
   2bfb0:	addeq	r5, r4, #2
   2bfb4:	beq	2bf3c <__flatcc_fb_parse@@Base+0x120>
   2bfb8:	cmp	r3, #10
   2bfbc:	beq	2c034 <__flatcc_fb_parse@@Base+0x218>
   2bfc0:	cmp	r3, #13
   2bfc4:	movne	r4, r7
   2bfc8:	bne	2bf10 <__flatcc_fb_parse@@Base+0xf4>
   2bfcc:	add	r5, r4, #2
   2bfd0:	cmp	r6, r5
   2bfd4:	beq	2bfe4 <__flatcc_fb_parse@@Base+0x1c8>
   2bfd8:	ldrb	r3, [r4, #2]
   2bfdc:	cmp	r3, #10
   2bfe0:	addeq	r5, r4, #3
   2bfe4:	ldr	r3, [r9, #64]	; 0x40
   2bfe8:	add	r3, r3, #1
   2bfec:	str	r3, [r9, #64]	; 0x40
   2bff0:	str	r5, [r9, #60]	; 0x3c
   2bff4:	mov	r3, r5
   2bff8:	mov	r2, r7
   2bffc:	mov	r1, #18
   2c000:	mov	r0, r9
   2c004:	bl	2a0e4 <__flatcc_fb_default_error_out@@Base+0x20>
   2c008:	mov	r7, r5
   2c00c:	b	2bf3c <__flatcc_fb_parse@@Base+0x120>
   2c010:	mov	r4, r7
   2c014:	mov	r3, r4
   2c018:	mov	r2, r4
   2c01c:	mov	r1, #23
   2c020:	mov	r0, r9
   2c024:	bl	2a0e4 <__flatcc_fb_default_error_out@@Base+0x20>
   2c028:	b	2be90 <__flatcc_fb_parse@@Base+0x74>
   2c02c:	mov	r4, r6
   2c030:	b	2c014 <__flatcc_fb_parse@@Base+0x1f8>
   2c034:	add	r5, r4, #2
   2c038:	cmp	r6, r5
   2c03c:	beq	2c04c <__flatcc_fb_parse@@Base+0x230>
   2c040:	ldrb	r3, [r4, #2]
   2c044:	cmp	r3, #13
   2c048:	addeq	r5, r4, #3
   2c04c:	ldr	r3, [r9, #64]	; 0x40
   2c050:	add	r3, r3, #1
   2c054:	str	r3, [r9, #64]	; 0x40
   2c058:	str	r5, [r9, #60]	; 0x3c
   2c05c:	mov	r3, r5
   2c060:	mov	r2, r7
   2c064:	mov	r1, #18
   2c068:	mov	r0, r9
   2c06c:	bl	2a0e4 <__flatcc_fb_default_error_out@@Base+0x20>
   2c070:	mov	r7, r5
   2c074:	b	2bf3c <__flatcc_fb_parse@@Base+0x120>
   2c078:	mov	r3, r4
   2c07c:	mov	r2, r4
   2c080:	mov	r1, #23
   2c084:	mov	r0, r9
   2c088:	bl	2a0e4 <__flatcc_fb_default_error_out@@Base+0x20>
   2c08c:	b	2be90 <__flatcc_fb_parse@@Base+0x74>
   2c090:	mov	r5, r4
   2c094:	add	r4, r5, #1
   2c098:	cmp	r6, r4
   2c09c:	beq	2eb24 <__flatcc_fb_parse@@Base+0x2d08>
   2c0a0:	ldrb	r3, [r5, #1]
   2c0a4:	cmp	r3, #127	; 0x7f
   2c0a8:	cmpne	r3, #31
   2c0ac:	bhi	2c090 <__flatcc_fb_parse@@Base+0x274>
   2c0b0:	cmp	r7, r4
   2c0b4:	beq	2eb58 <__flatcc_fb_parse@@Base+0x2d3c>
   2c0b8:	ldr	r3, [r9, #32]
   2c0bc:	cmp	r3, #0
   2c0c0:	beq	2eb58 <__flatcc_fb_parse@@Base+0x2d3c>
   2c0c4:	b	2eb3c <__flatcc_fb_parse@@Base+0x2d20>
   2c0c8:	mov	r7, r6
   2c0cc:	b	2c0d4 <__flatcc_fb_parse@@Base+0x2b8>
   2c0d0:	mov	r7, r4
   2c0d4:	mov	r3, r7
   2c0d8:	mov	r2, r7
   2c0dc:	mov	r1, #27
   2c0e0:	mov	r0, r9
   2c0e4:	bl	2a0e4 <__flatcc_fb_default_error_out@@Base+0x20>
   2c0e8:	mov	r4, r7
   2c0ec:	cmp	r6, r7
   2c0f0:	beq	2c100 <__flatcc_fb_parse@@Base+0x2e4>
   2c0f4:	ldrb	r3, [r7]
   2c0f8:	cmp	r3, #0
   2c0fc:	beq	2d8b0 <__flatcc_fb_parse@@Base+0x1a94>
   2c100:	mov	r3, r7
   2c104:	mov	r2, r7
   2c108:	mov	r1, #0
   2c10c:	mov	r0, r9
   2c110:	bl	2a0e4 <__flatcc_fb_default_error_out@@Base+0x20>
   2c114:	ldr	r3, [r9, #40]	; 0x28
   2c118:	str	r3, [r9, #24]
   2c11c:	ldr	r4, [r9, #20]
   2c120:	str	r4, [r9, #40]	; 0x28
   2c124:	ldr	r0, [r9, #216]	; 0xd8
   2c128:	bl	14040 <malloc@plt>
   2c12c:	str	r0, [r9, #112]	; 0x70
   2c130:	cmp	r0, #0
   2c134:	beq	2d8c8 <__flatcc_fb_parse@@Base+0x1aac>
   2c138:	ldr	r3, [r4, #16]
   2c13c:	cmn	r3, #964	; 0x3c4
   2c140:	beq	2d8e8 <__flatcc_fb_parse@@Base+0x1acc>
   2c144:	ldr	sl, [r9, #40]	; 0x28
   2c148:	ldr	r5, [pc, #3724]	; 2cfdc <__flatcc_fb_parse@@Base+0x11c0>
   2c14c:	ldr	r8, [pc, #3268]	; 2ce18 <__flatcc_fb_parse@@Base+0xffc>
   2c150:	mov	r6, #0
   2c154:	mov	r7, #1
   2c158:	ldr	fp, [pc, #3260]	; 2ce1c <__flatcc_fb_parse@@Base+0x1000>
   2c15c:	b	2d990 <__flatcc_fb_parse@@Base+0x1b74>
   2c160:	mov	r3, #0
   2c164:	str	r3, [r9, #32]
   2c168:	b	2be90 <__flatcc_fb_parse@@Base+0x74>
   2c16c:	mov	r3, r7
   2c170:	mov	r2, r4
   2c174:	mov	r1, r8
   2c178:	mov	r0, r9
   2c17c:	bl	2a0e4 <__flatcc_fb_default_error_out@@Base+0x20>
   2c180:	b	2eb8c <__flatcc_fb_parse@@Base+0x2d70>
   2c184:	mov	r3, r7
   2c188:	mov	r2, r4
   2c18c:	mov	r1, #7
   2c190:	mov	r0, r9
   2c194:	bl	2a0e4 <__flatcc_fb_default_error_out@@Base+0x20>
   2c198:	b	2eb8c <__flatcc_fb_parse@@Base+0x2d70>
   2c19c:	cmp	r5, r2
   2c1a0:	moveq	r7, r2
   2c1a4:	beq	2ebd8 <__flatcc_fb_parse@@Base+0x2dbc>
   2c1a8:	ldr	r3, [r9, #32]
   2c1ac:	cmp	r3, #0
   2c1b0:	movne	r7, r2
   2c1b4:	bne	2ebc4 <__flatcc_fb_parse@@Base+0x2da8>
   2c1b8:	mov	r7, r2
   2c1bc:	b	2ebd8 <__flatcc_fb_parse@@Base+0x2dbc>
   2c1c0:	mov	r7, r6
   2c1c4:	b	2ec40 <__flatcc_fb_parse@@Base+0x2e24>
   2c1c8:	add	r5, r7, #1
   2c1cc:	cmp	r6, r5
   2c1d0:	beq	2c1e0 <__flatcc_fb_parse@@Base+0x3c4>
   2c1d4:	ldrb	r3, [r7, #1]
   2c1d8:	cmp	r3, #13
   2c1dc:	addeq	r5, r7, #2
   2c1e0:	ldr	r3, [r9, #64]	; 0x40
   2c1e4:	add	r3, r3, #1
   2c1e8:	str	r3, [r9, #64]	; 0x40
   2c1ec:	str	r5, [r9, #60]	; 0x3c
   2c1f0:	sub	r2, r5, #1
   2c1f4:	add	r7, r2, #1
   2c1f8:	cmp	r6, r7
   2c1fc:	beq	2ebac <__flatcc_fb_parse@@Base+0x2d90>
   2c200:	ldrb	r3, [r2, #1]
   2c204:	cmp	r3, #127	; 0x7f
   2c208:	cmpne	r3, #31
   2c20c:	bls	2eb94 <__flatcc_fb_parse@@Base+0x2d78>
   2c210:	cmp	r3, #47	; 0x2f
   2c214:	movne	r2, r7
   2c218:	bne	2c1f4 <__flatcc_fb_parse@@Base+0x3d8>
   2c21c:	ldrb	r3, [r7, #-1]
   2c220:	cmp	r3, #42	; 0x2a
   2c224:	beq	2c19c <__flatcc_fb_parse@@Base+0x380>
   2c228:	mov	r2, r7
   2c22c:	b	2c1f4 <__flatcc_fb_parse@@Base+0x3d8>
   2c230:	add	r5, r7, #1
   2c234:	cmp	r6, r5
   2c238:	beq	2c248 <__flatcc_fb_parse@@Base+0x42c>
   2c23c:	ldrb	r3, [r7, #1]
   2c240:	cmp	r3, #10
   2c244:	addeq	r5, r7, #2
   2c248:	ldr	r3, [r9, #64]	; 0x40
   2c24c:	add	r3, r3, #1
   2c250:	str	r3, [r9, #64]	; 0x40
   2c254:	str	r5, [r9, #60]	; 0x3c
   2c258:	b	2c1f0 <__flatcc_fb_parse@@Base+0x3d4>
   2c25c:	mov	r3, r5
   2c260:	mov	r2, r7
   2c264:	mov	r1, r8
   2c268:	mov	r0, r9
   2c26c:	bl	2a0e4 <__flatcc_fb_default_error_out@@Base+0x20>
   2c270:	b	2c1f0 <__flatcc_fb_parse@@Base+0x3d4>
   2c274:	add	r4, r7, #2
   2c278:	mov	r3, #0
   2c27c:	str	r3, [r9, #32]
   2c280:	b	2be90 <__flatcc_fb_parse@@Base+0x74>
   2c284:	mov	r3, r4
   2c288:	mov	r2, r4
   2c28c:	mov	r1, #0
   2c290:	mov	r0, r9
   2c294:	bl	2a0e4 <__flatcc_fb_default_error_out@@Base+0x20>
   2c298:	b	2c114 <__flatcc_fb_parse@@Base+0x2f8>
   2c29c:	add	r3, r4, #1
   2c2a0:	mov	r1, r6
   2c2a4:	mov	r7, r3
   2c2a8:	cmp	r3, r1
   2c2ac:	beq	2c0ec <__flatcc_fb_parse@@Base+0x2d0>
   2c2b0:	ldrb	r2, [r3], #1
   2c2b4:	cmp	r2, #9
   2c2b8:	cmpne	r2, #32
   2c2bc:	beq	2c2a4 <__flatcc_fb_parse@@Base+0x488>
   2c2c0:	mov	r4, r7
   2c2c4:	b	2cb88 <__flatcc_fb_parse@@Base+0xd6c>
   2c2c8:	add	r3, r4, #1
   2c2cc:	cmp	r6, r3
   2c2d0:	beq	2c2e0 <__flatcc_fb_parse@@Base+0x4c4>
   2c2d4:	ldrb	r2, [r4, #1]
   2c2d8:	cmp	r2, #13
   2c2dc:	addeq	r3, r4, #2
   2c2e0:	ldr	r2, [r9, #64]	; 0x40
   2c2e4:	add	r2, r2, #1
   2c2e8:	str	r2, [r9, #64]	; 0x40
   2c2ec:	str	r3, [r9, #60]	; 0x3c
   2c2f0:	mov	r4, r3
   2c2f4:	b	2cb80 <__flatcc_fb_parse@@Base+0xd64>
   2c2f8:	add	r3, r4, #1
   2c2fc:	cmp	r6, r3
   2c300:	beq	2c310 <__flatcc_fb_parse@@Base+0x4f4>
   2c304:	ldrb	r2, [r4, #1]
   2c308:	cmp	r2, #10
   2c30c:	addeq	r3, r4, #2
   2c310:	ldr	r2, [r9, #64]	; 0x40
   2c314:	add	r2, r2, #1
   2c318:	str	r2, [r9, #64]	; 0x40
   2c31c:	str	r3, [r9, #60]	; 0x3c
   2c320:	mov	r4, r3
   2c324:	b	2cb80 <__flatcc_fb_parse@@Base+0xd64>
   2c328:	add	r5, r4, #1
   2c32c:	mov	r3, r5
   2c330:	mov	r2, r4
   2c334:	mov	r1, #19
   2c338:	mov	r0, r9
   2c33c:	bl	2a0e4 <__flatcc_fb_default_error_out@@Base+0x20>
   2c340:	mov	r7, r5
   2c344:	mov	r8, #6
   2c348:	b	2bf3c <__flatcc_fb_parse@@Base+0x120>
   2c34c:	add	r5, r4, #1
   2c350:	cmp	r6, r5
   2c354:	beq	2c374 <__flatcc_fb_parse@@Base+0x558>
   2c358:	ldrb	r3, [r4, #1]
   2c35c:	cmp	r3, #47	; 0x2f
   2c360:	beq	2c390 <__flatcc_fb_parse@@Base+0x574>
   2c364:	cmp	r3, #61	; 0x3d
   2c368:	beq	2c454 <__flatcc_fb_parse@@Base+0x638>
   2c36c:	cmp	r3, #42	; 0x2a
   2c370:	beq	2c3f0 <__flatcc_fb_parse@@Base+0x5d4>
   2c374:	mov	r3, r5
   2c378:	mov	r2, r4
   2c37c:	mov	r1, #47	; 0x2f
   2c380:	mov	r0, r9
   2c384:	bl	2a0e4 <__flatcc_fb_default_error_out@@Base+0x20>
   2c388:	mov	r4, r5
   2c38c:	b	2cb80 <__flatcc_fb_parse@@Base+0xd64>
   2c390:	add	r7, r4, #2
   2c394:	cmp	r6, r7
   2c398:	moveq	r3, #0
   2c39c:	beq	2c3b4 <__flatcc_fb_parse@@Base+0x598>
   2c3a0:	ldrb	r3, [r4, #2]
   2c3a4:	cmp	r3, #33	; 0x21
   2c3a8:	cmpne	r3, #47	; 0x2f
   2c3ac:	moveq	r3, #1
   2c3b0:	movne	r3, #0
   2c3b4:	add	r7, r7, r3
   2c3b8:	sub	r4, r7, r4
   2c3bc:	cmp	r4, #3
   2c3c0:	moveq	r3, #1
   2c3c4:	movne	r3, #0
   2c3c8:	str	r3, [r9, #32]
   2c3cc:	beq	2c3d8 <__flatcc_fb_parse@@Base+0x5bc>
   2c3d0:	ldr	r8, [pc, #2632]	; 2ce20 <__flatcc_fb_parse@@Base+0x1004>
   2c3d4:	b	2eb8c <__flatcc_fb_parse@@Base+0x2d70>
   2c3d8:	mov	r3, r7
   2c3dc:	mov	r2, r7
   2c3e0:	ldr	r1, [pc, #2616]	; 2ce20 <__flatcc_fb_parse@@Base+0x1004>
   2c3e4:	mov	r0, r9
   2c3e8:	bl	2a0e4 <__flatcc_fb_default_error_out@@Base+0x20>
   2c3ec:	b	2c3d0 <__flatcc_fb_parse@@Base+0x5b4>
   2c3f0:	add	r5, r4, #2
   2c3f4:	cmp	r6, r5
   2c3f8:	moveq	r3, #0
   2c3fc:	beq	2c414 <__flatcc_fb_parse@@Base+0x5f8>
   2c400:	ldrb	r3, [r4, #2]
   2c404:	cmp	r3, #33	; 0x21
   2c408:	cmpne	r3, #42	; 0x2a
   2c40c:	moveq	r3, #1
   2c410:	movne	r3, #0
   2c414:	add	r5, r5, r3
   2c418:	sub	r4, r5, r4
   2c41c:	cmp	r4, #3
   2c420:	moveq	r3, #1
   2c424:	movne	r3, #0
   2c428:	str	r3, [r9, #32]
   2c42c:	beq	2c43c <__flatcc_fb_parse@@Base+0x620>
   2c430:	ldr	r4, [pc, #2536]	; 2ce20 <__flatcc_fb_parse@@Base+0x1004>
   2c434:	mov	r8, #7
   2c438:	b	2c1f0 <__flatcc_fb_parse@@Base+0x3d4>
   2c43c:	mov	r3, r5
   2c440:	mov	r2, r5
   2c444:	ldr	r1, [pc, #2516]	; 2ce20 <__flatcc_fb_parse@@Base+0x1004>
   2c448:	mov	r0, r9
   2c44c:	bl	2a0e4 <__flatcc_fb_default_error_out@@Base+0x20>
   2c450:	b	2c430 <__flatcc_fb_parse@@Base+0x614>
   2c454:	add	r5, r4, #2
   2c458:	mov	r3, r5
   2c45c:	mov	r2, r4
   2c460:	ldr	r1, [pc, #2492]	; 2ce24 <__flatcc_fb_parse@@Base+0x1008>
   2c464:	mov	r0, r9
   2c468:	bl	2a0e4 <__flatcc_fb_default_error_out@@Base+0x20>
   2c46c:	mov	r4, r5
   2c470:	b	2cb80 <__flatcc_fb_parse@@Base+0xd64>
   2c474:	add	r5, r4, #1
   2c478:	mov	r3, r5
   2c47c:	mov	r2, r4
   2c480:	mov	r0, r9
   2c484:	bl	2a0e4 <__flatcc_fb_default_error_out@@Base+0x20>
   2c488:	mov	r4, r5
   2c48c:	b	2cb80 <__flatcc_fb_parse@@Base+0xd64>
   2c490:	add	r5, r4, #1
   2c494:	cmp	r6, r5
   2c498:	beq	2c4a8 <__flatcc_fb_parse@@Base+0x68c>
   2c49c:	ldrb	r3, [r4, #1]
   2c4a0:	cmp	r3, #61	; 0x3d
   2c4a4:	beq	2c4c0 <__flatcc_fb_parse@@Base+0x6a4>
   2c4a8:	mov	r3, r5
   2c4ac:	mov	r2, r4
   2c4b0:	mov	r0, r9
   2c4b4:	bl	2a0e4 <__flatcc_fb_default_error_out@@Base+0x20>
   2c4b8:	mov	r4, r5
   2c4bc:	b	2cb80 <__flatcc_fb_parse@@Base+0xd64>
   2c4c0:	add	r5, r4, #2
   2c4c4:	mov	r3, r5
   2c4c8:	mov	r2, r4
   2c4cc:	orr	r1, r1, #15616	; 0x3d00
   2c4d0:	mov	r0, r9
   2c4d4:	bl	2a0e4 <__flatcc_fb_default_error_out@@Base+0x20>
   2c4d8:	mov	r4, r5
   2c4dc:	b	2cb80 <__flatcc_fb_parse@@Base+0xd64>
   2c4e0:	add	r5, r4, #1
   2c4e4:	cmp	r6, r5
   2c4e8:	beq	2c500 <__flatcc_fb_parse@@Base+0x6e4>
   2c4ec:	ldrb	r3, [r4, #1]
   2c4f0:	cmp	r3, #61	; 0x3d
   2c4f4:	beq	2c51c <__flatcc_fb_parse@@Base+0x700>
   2c4f8:	cmp	r3, #124	; 0x7c
   2c4fc:	beq	2c53c <__flatcc_fb_parse@@Base+0x720>
   2c500:	mov	r3, r5
   2c504:	mov	r2, r4
   2c508:	mov	r1, #124	; 0x7c
   2c50c:	mov	r0, r9
   2c510:	bl	2a0e4 <__flatcc_fb_default_error_out@@Base+0x20>
   2c514:	mov	r4, r5
   2c518:	b	2cb80 <__flatcc_fb_parse@@Base+0xd64>
   2c51c:	add	r5, r4, #2
   2c520:	mov	r3, r5
   2c524:	mov	r2, r4
   2c528:	ldr	r1, [pc, #2296]	; 2ce28 <__flatcc_fb_parse@@Base+0x100c>
   2c52c:	mov	r0, r9
   2c530:	bl	2a0e4 <__flatcc_fb_default_error_out@@Base+0x20>
   2c534:	mov	r4, r5
   2c538:	b	2cb80 <__flatcc_fb_parse@@Base+0xd64>
   2c53c:	add	r5, r4, #2
   2c540:	mov	r3, r5
   2c544:	mov	r2, r4
   2c548:	ldr	r1, [pc, #2268]	; 2ce2c <__flatcc_fb_parse@@Base+0x1010>
   2c54c:	mov	r0, r9
   2c550:	bl	2a0e4 <__flatcc_fb_default_error_out@@Base+0x20>
   2c554:	b	2c500 <__flatcc_fb_parse@@Base+0x6e4>
   2c558:	add	r5, r4, #1
   2c55c:	cmp	r6, r5
   2c560:	beq	2c5b0 <__flatcc_fb_parse@@Base+0x794>
   2c564:	ldrb	r3, [r4, #1]
   2c568:	cmp	r3, #38	; 0x26
   2c56c:	beq	2c598 <__flatcc_fb_parse@@Base+0x77c>
   2c570:	cmp	r3, #61	; 0x3d
   2c574:	bne	2c5b0 <__flatcc_fb_parse@@Base+0x794>
   2c578:	add	r5, r4, #2
   2c57c:	mov	r3, r5
   2c580:	mov	r2, r4
   2c584:	ldr	r1, [pc, #2212]	; 2ce30 <__flatcc_fb_parse@@Base+0x1014>
   2c588:	mov	r0, r9
   2c58c:	bl	2a0e4 <__flatcc_fb_default_error_out@@Base+0x20>
   2c590:	mov	r4, r5
   2c594:	b	2cb80 <__flatcc_fb_parse@@Base+0xd64>
   2c598:	add	r5, r4, #2
   2c59c:	mov	r3, r5
   2c5a0:	mov	r2, r4
   2c5a4:	ldr	r1, [pc, #2184]	; 2ce34 <__flatcc_fb_parse@@Base+0x1018>
   2c5a8:	mov	r0, r9
   2c5ac:	bl	2a0e4 <__flatcc_fb_default_error_out@@Base+0x20>
   2c5b0:	mov	r3, r5
   2c5b4:	mov	r2, r4
   2c5b8:	mov	r1, #38	; 0x26
   2c5bc:	mov	r0, r9
   2c5c0:	bl	2a0e4 <__flatcc_fb_default_error_out@@Base+0x20>
   2c5c4:	mov	r4, r5
   2c5c8:	b	2cb80 <__flatcc_fb_parse@@Base+0xd64>
   2c5cc:	add	r5, r4, #1
   2c5d0:	cmp	r6, r5
   2c5d4:	beq	2c638 <__flatcc_fb_parse@@Base+0x81c>
   2c5d8:	ldrb	r3, [r4, #1]
   2c5dc:	cmp	r3, #61	; 0x3d
   2c5e0:	beq	2c60c <__flatcc_fb_parse@@Base+0x7f0>
   2c5e4:	cmp	r3, #62	; 0x3e
   2c5e8:	bne	2c638 <__flatcc_fb_parse@@Base+0x81c>
   2c5ec:	add	r5, r4, #2
   2c5f0:	mov	r3, r5
   2c5f4:	mov	r2, r4
   2c5f8:	ldr	r1, [pc, #2104]	; 2ce38 <__flatcc_fb_parse@@Base+0x101c>
   2c5fc:	mov	r0, r9
   2c600:	bl	2a0e4 <__flatcc_fb_default_error_out@@Base+0x20>
   2c604:	mov	r4, r5
   2c608:	b	2cb80 <__flatcc_fb_parse@@Base+0xd64>
   2c60c:	add	r5, r4, #2
   2c610:	cmp	r6, r5
   2c614:	beq	2c624 <__flatcc_fb_parse@@Base+0x808>
   2c618:	ldrb	r3, [r4, #2]
   2c61c:	cmp	r3, #61	; 0x3d
   2c620:	beq	2c654 <__flatcc_fb_parse@@Base+0x838>
   2c624:	mov	r3, r5
   2c628:	mov	r2, r4
   2c62c:	ldr	r1, [pc, #2056]	; 2ce3c <__flatcc_fb_parse@@Base+0x1020>
   2c630:	mov	r0, r9
   2c634:	bl	2a0e4 <__flatcc_fb_default_error_out@@Base+0x20>
   2c638:	mov	r3, r5
   2c63c:	mov	r2, r4
   2c640:	mov	r1, #61	; 0x3d
   2c644:	mov	r0, r9
   2c648:	bl	2a0e4 <__flatcc_fb_default_error_out@@Base+0x20>
   2c64c:	mov	r4, r5
   2c650:	b	2cb80 <__flatcc_fb_parse@@Base+0xd64>
   2c654:	add	r5, r4, #3
   2c658:	mov	r3, r5
   2c65c:	mov	r2, r4
   2c660:	ldr	r1, [pc, #2008]	; 2ce40 <__flatcc_fb_parse@@Base+0x1024>
   2c664:	mov	r0, r9
   2c668:	bl	2a0e4 <__flatcc_fb_default_error_out@@Base+0x20>
   2c66c:	mov	r4, r5
   2c670:	b	2cb80 <__flatcc_fb_parse@@Base+0xd64>
   2c674:	add	r5, r4, #1
   2c678:	cmp	r6, r5
   2c67c:	beq	2c708 <__flatcc_fb_parse@@Base+0x8ec>
   2c680:	ldrb	r3, [r4, #1]
   2c684:	cmp	r3, #58	; 0x3a
   2c688:	beq	2c6b4 <__flatcc_fb_parse@@Base+0x898>
   2c68c:	cmp	r3, #61	; 0x3d
   2c690:	bne	2c708 <__flatcc_fb_parse@@Base+0x8ec>
   2c694:	add	r5, r4, #2
   2c698:	mov	r3, r5
   2c69c:	mov	r2, r4
   2c6a0:	ldr	r1, [pc, #1948]	; 2ce44 <__flatcc_fb_parse@@Base+0x1028>
   2c6a4:	mov	r0, r9
   2c6a8:	bl	2a0e4 <__flatcc_fb_default_error_out@@Base+0x20>
   2c6ac:	mov	r4, r5
   2c6b0:	b	2cb80 <__flatcc_fb_parse@@Base+0xd64>
   2c6b4:	add	r5, r4, #2
   2c6b8:	cmp	r6, r5
   2c6bc:	beq	2c6cc <__flatcc_fb_parse@@Base+0x8b0>
   2c6c0:	ldrb	r3, [r4, #2]
   2c6c4:	cmp	r3, #61	; 0x3d
   2c6c8:	beq	2c6e8 <__flatcc_fb_parse@@Base+0x8cc>
   2c6cc:	mov	r3, r5
   2c6d0:	mov	r2, r4
   2c6d4:	ldr	r1, [pc, #1900]	; 2ce48 <__flatcc_fb_parse@@Base+0x102c>
   2c6d8:	mov	r0, r9
   2c6dc:	bl	2a0e4 <__flatcc_fb_default_error_out@@Base+0x20>
   2c6e0:	mov	r4, r5
   2c6e4:	b	2cb80 <__flatcc_fb_parse@@Base+0xd64>
   2c6e8:	add	r5, r4, #3
   2c6ec:	mov	r3, r5
   2c6f0:	mov	r2, r4
   2c6f4:	ldr	r1, [pc, #1872]	; 2ce4c <__flatcc_fb_parse@@Base+0x1030>
   2c6f8:	mov	r0, r9
   2c6fc:	bl	2a0e4 <__flatcc_fb_default_error_out@@Base+0x20>
   2c700:	mov	r4, r5
   2c704:	b	2cb80 <__flatcc_fb_parse@@Base+0xd64>
   2c708:	mov	r3, r5
   2c70c:	mov	r2, r4
   2c710:	mov	r1, #58	; 0x3a
   2c714:	mov	r0, r9
   2c718:	bl	2a0e4 <__flatcc_fb_default_error_out@@Base+0x20>
   2c71c:	mov	r4, r5
   2c720:	b	2cb80 <__flatcc_fb_parse@@Base+0xd64>
   2c724:	add	r5, r4, #1
   2c728:	cmp	r6, r5
   2c72c:	beq	2c77c <__flatcc_fb_parse@@Base+0x960>
   2c730:	ldrb	r3, [r4, #1]
   2c734:	cmp	r3, #42	; 0x2a
   2c738:	beq	2c760 <__flatcc_fb_parse@@Base+0x944>
   2c73c:	cmp	r3, #61	; 0x3d
   2c740:	bne	2c77c <__flatcc_fb_parse@@Base+0x960>
   2c744:	mov	r3, r5
   2c748:	mov	r2, r4
   2c74c:	ldr	r1, [pc, #1788]	; 2ce50 <__flatcc_fb_parse@@Base+0x1034>
   2c750:	mov	r0, r9
   2c754:	bl	2a0e4 <__flatcc_fb_default_error_out@@Base+0x20>
   2c758:	mov	r4, r5
   2c75c:	b	2cb88 <__flatcc_fb_parse@@Base+0xd6c>
   2c760:	mov	r3, r5
   2c764:	mov	r2, r4
   2c768:	ldr	r1, [pc, #1764]	; 2ce54 <__flatcc_fb_parse@@Base+0x1038>
   2c76c:	mov	r0, r9
   2c770:	bl	2a0e4 <__flatcc_fb_default_error_out@@Base+0x20>
   2c774:	mov	r4, r5
   2c778:	b	2cb88 <__flatcc_fb_parse@@Base+0xd6c>
   2c77c:	mov	r3, r5
   2c780:	mov	r2, r4
   2c784:	mov	r1, #42	; 0x2a
   2c788:	mov	r0, r9
   2c78c:	bl	2a0e4 <__flatcc_fb_default_error_out@@Base+0x20>
   2c790:	mov	r4, r5
   2c794:	b	2cb80 <__flatcc_fb_parse@@Base+0xd64>
   2c798:	add	r5, r4, #1
   2c79c:	cmp	r6, r5
   2c7a0:	beq	2c7c0 <__flatcc_fb_parse@@Base+0x9a4>
   2c7a4:	ldrb	r3, [r4, #1]
   2c7a8:	cmp	r3, #60	; 0x3c
   2c7ac:	beq	2c81c <__flatcc_fb_parse@@Base+0xa00>
   2c7b0:	cmp	r3, #61	; 0x3d
   2c7b4:	beq	2c7fc <__flatcc_fb_parse@@Base+0x9e0>
   2c7b8:	cmp	r3, #45	; 0x2d
   2c7bc:	beq	2c7dc <__flatcc_fb_parse@@Base+0x9c0>
   2c7c0:	mov	r3, r5
   2c7c4:	mov	r2, r4
   2c7c8:	mov	r1, #60	; 0x3c
   2c7cc:	mov	r0, r9
   2c7d0:	bl	2a0e4 <__flatcc_fb_default_error_out@@Base+0x20>
   2c7d4:	mov	r4, r5
   2c7d8:	b	2cb80 <__flatcc_fb_parse@@Base+0xd64>
   2c7dc:	add	r5, r4, #2
   2c7e0:	mov	r3, r5
   2c7e4:	mov	r2, r4
   2c7e8:	ldr	r1, [pc, #1640]	; 2ce58 <__flatcc_fb_parse@@Base+0x103c>
   2c7ec:	mov	r0, r9
   2c7f0:	bl	2a0e4 <__flatcc_fb_default_error_out@@Base+0x20>
   2c7f4:	mov	r4, r5
   2c7f8:	b	2cb80 <__flatcc_fb_parse@@Base+0xd64>
   2c7fc:	add	r5, r4, #2
   2c800:	mov	r3, r5
   2c804:	mov	r2, r4
   2c808:	ldr	r1, [pc, #1612]	; 2ce5c <__flatcc_fb_parse@@Base+0x1040>
   2c80c:	mov	r0, r9
   2c810:	bl	2a0e4 <__flatcc_fb_default_error_out@@Base+0x20>
   2c814:	mov	r4, r5
   2c818:	b	2cb80 <__flatcc_fb_parse@@Base+0xd64>
   2c81c:	add	r5, r4, #2
   2c820:	cmp	r6, r5
   2c824:	beq	2c8b0 <__flatcc_fb_parse@@Base+0xa94>
   2c828:	ldrb	r3, [r4, #2]
   2c82c:	cmp	r3, #60	; 0x3c
   2c830:	beq	2c85c <__flatcc_fb_parse@@Base+0xa40>
   2c834:	cmp	r3, #61	; 0x3d
   2c838:	bne	2c8b0 <__flatcc_fb_parse@@Base+0xa94>
   2c83c:	add	r5, r4, #3
   2c840:	mov	r3, r5
   2c844:	mov	r2, r4
   2c848:	ldr	r1, [pc, #1552]	; 2ce60 <__flatcc_fb_parse@@Base+0x1044>
   2c84c:	mov	r0, r9
   2c850:	bl	2a0e4 <__flatcc_fb_default_error_out@@Base+0x20>
   2c854:	mov	r4, r5
   2c858:	b	2cb80 <__flatcc_fb_parse@@Base+0xd64>
   2c85c:	add	r5, r4, #3
   2c860:	cmp	r6, r5
   2c864:	beq	2c874 <__flatcc_fb_parse@@Base+0xa58>
   2c868:	ldrb	r3, [r4, #3]
   2c86c:	cmp	r3, #61	; 0x3d
   2c870:	beq	2c890 <__flatcc_fb_parse@@Base+0xa74>
   2c874:	mov	r3, r5
   2c878:	mov	r2, r4
   2c87c:	ldr	r1, [pc, #1504]	; 2ce64 <__flatcc_fb_parse@@Base+0x1048>
   2c880:	mov	r0, r9
   2c884:	bl	2a0e4 <__flatcc_fb_default_error_out@@Base+0x20>
   2c888:	mov	r4, r5
   2c88c:	b	2cb80 <__flatcc_fb_parse@@Base+0xd64>
   2c890:	add	r5, r4, #4
   2c894:	mov	r3, r5
   2c898:	mov	r2, r4
   2c89c:	ldr	r1, [pc, #1476]	; 2ce68 <__flatcc_fb_parse@@Base+0x104c>
   2c8a0:	mov	r0, r9
   2c8a4:	bl	2a0e4 <__flatcc_fb_default_error_out@@Base+0x20>
   2c8a8:	mov	r4, r5
   2c8ac:	b	2cb80 <__flatcc_fb_parse@@Base+0xd64>
   2c8b0:	mov	r3, r5
   2c8b4:	mov	r2, r4
   2c8b8:	ldr	r1, [pc, #1452]	; 2ce6c <__flatcc_fb_parse@@Base+0x1050>
   2c8bc:	mov	r0, r9
   2c8c0:	bl	2a0e4 <__flatcc_fb_default_error_out@@Base+0x20>
   2c8c4:	mov	r4, r5
   2c8c8:	b	2cb80 <__flatcc_fb_parse@@Base+0xd64>
   2c8cc:	add	r5, r4, #1
   2c8d0:	cmp	r6, r5
   2c8d4:	beq	2c8ec <__flatcc_fb_parse@@Base+0xad0>
   2c8d8:	ldrb	r3, [r4, #1]
   2c8dc:	cmp	r3, #61	; 0x3d
   2c8e0:	beq	2c908 <__flatcc_fb_parse@@Base+0xaec>
   2c8e4:	cmp	r3, #62	; 0x3e
   2c8e8:	beq	2c928 <__flatcc_fb_parse@@Base+0xb0c>
   2c8ec:	mov	r3, r5
   2c8f0:	mov	r2, r4
   2c8f4:	mov	r1, #62	; 0x3e
   2c8f8:	mov	r0, r9
   2c8fc:	bl	2a0e4 <__flatcc_fb_default_error_out@@Base+0x20>
   2c900:	mov	r4, r5
   2c904:	b	2cb80 <__flatcc_fb_parse@@Base+0xd64>
   2c908:	add	r5, r4, #2
   2c90c:	mov	r3, r5
   2c910:	mov	r2, r4
   2c914:	ldr	r1, [pc, #1364]	; 2ce70 <__flatcc_fb_parse@@Base+0x1054>
   2c918:	mov	r0, r9
   2c91c:	bl	2a0e4 <__flatcc_fb_default_error_out@@Base+0x20>
   2c920:	mov	r4, r5
   2c924:	b	2cb80 <__flatcc_fb_parse@@Base+0xd64>
   2c928:	add	r5, r4, #2
   2c92c:	cmp	r6, r5
   2c930:	beq	2c948 <__flatcc_fb_parse@@Base+0xb2c>
   2c934:	ldrb	r3, [r4, #2]
   2c938:	cmp	r3, #61	; 0x3d
   2c93c:	beq	2c964 <__flatcc_fb_parse@@Base+0xb48>
   2c940:	cmp	r3, #62	; 0x3e
   2c944:	beq	2c984 <__flatcc_fb_parse@@Base+0xb68>
   2c948:	mov	r3, r5
   2c94c:	mov	r2, r4
   2c950:	ldr	r1, [pc, #1308]	; 2ce74 <__flatcc_fb_parse@@Base+0x1058>
   2c954:	mov	r0, r9
   2c958:	bl	2a0e4 <__flatcc_fb_default_error_out@@Base+0x20>
   2c95c:	mov	r4, r5
   2c960:	b	2cb80 <__flatcc_fb_parse@@Base+0xd64>
   2c964:	add	r5, r4, #3
   2c968:	mov	r3, r5
   2c96c:	mov	r2, r4
   2c970:	ldr	r1, [pc, #1280]	; 2ce78 <__flatcc_fb_parse@@Base+0x105c>
   2c974:	mov	r0, r9
   2c978:	bl	2a0e4 <__flatcc_fb_default_error_out@@Base+0x20>
   2c97c:	mov	r4, r5
   2c980:	b	2cb80 <__flatcc_fb_parse@@Base+0xd64>
   2c984:	add	r5, r4, #3
   2c988:	cmp	r6, r5
   2c98c:	beq	2c99c <__flatcc_fb_parse@@Base+0xb80>
   2c990:	ldrb	r3, [r4, #3]
   2c994:	cmp	r3, #61	; 0x3d
   2c998:	beq	2c9b8 <__flatcc_fb_parse@@Base+0xb9c>
   2c99c:	mov	r3, r5
   2c9a0:	mov	r2, r4
   2c9a4:	ldr	r1, [pc, #1232]	; 2ce7c <__flatcc_fb_parse@@Base+0x1060>
   2c9a8:	mov	r0, r9
   2c9ac:	bl	2a0e4 <__flatcc_fb_default_error_out@@Base+0x20>
   2c9b0:	mov	r4, r5
   2c9b4:	b	2cb80 <__flatcc_fb_parse@@Base+0xd64>
   2c9b8:	add	r5, r4, #4
   2c9bc:	mov	r3, r5
   2c9c0:	mov	r2, r4
   2c9c4:	ldr	r1, [pc, #1204]	; 2ce80 <__flatcc_fb_parse@@Base+0x1064>
   2c9c8:	mov	r0, r9
   2c9cc:	bl	2a0e4 <__flatcc_fb_default_error_out@@Base+0x20>
   2c9d0:	mov	r4, r5
   2c9d4:	b	2cb80 <__flatcc_fb_parse@@Base+0xd64>
   2c9d8:	add	r5, r4, #1
   2c9dc:	cmp	r6, r5
   2c9e0:	beq	2ca00 <__flatcc_fb_parse@@Base+0xbe4>
   2c9e4:	ldrb	r3, [r4, #1]
   2c9e8:	cmp	r3, #61	; 0x3d
   2c9ec:	beq	2ca1c <__flatcc_fb_parse@@Base+0xc00>
   2c9f0:	cmp	r3, #62	; 0x3e
   2c9f4:	beq	2ca5c <__flatcc_fb_parse@@Base+0xc40>
   2c9f8:	cmp	r3, #45	; 0x2d
   2c9fc:	beq	2ca3c <__flatcc_fb_parse@@Base+0xc20>
   2ca00:	mov	r3, r5
   2ca04:	mov	r2, r4
   2ca08:	mov	r1, #45	; 0x2d
   2ca0c:	mov	r0, r9
   2ca10:	bl	2a0e4 <__flatcc_fb_default_error_out@@Base+0x20>
   2ca14:	mov	r4, r5
   2ca18:	b	2cb80 <__flatcc_fb_parse@@Base+0xd64>
   2ca1c:	add	r5, r4, #2
   2ca20:	mov	r3, r5
   2ca24:	mov	r2, r4
   2ca28:	ldr	r1, [pc, #1108]	; 2ce84 <__flatcc_fb_parse@@Base+0x1068>
   2ca2c:	mov	r0, r9
   2ca30:	bl	2a0e4 <__flatcc_fb_default_error_out@@Base+0x20>
   2ca34:	mov	r4, r5
   2ca38:	b	2cb80 <__flatcc_fb_parse@@Base+0xd64>
   2ca3c:	add	r5, r4, #2
   2ca40:	mov	r3, r5
   2ca44:	mov	r2, r4
   2ca48:	ldr	r1, [pc, #1080]	; 2ce88 <__flatcc_fb_parse@@Base+0x106c>
   2ca4c:	mov	r0, r9
   2ca50:	bl	2a0e4 <__flatcc_fb_default_error_out@@Base+0x20>
   2ca54:	mov	r4, r5
   2ca58:	b	2cb80 <__flatcc_fb_parse@@Base+0xd64>
   2ca5c:	add	r5, r4, #2
   2ca60:	mov	r3, r5
   2ca64:	mov	r2, r4
   2ca68:	ldr	r1, [pc, #1052]	; 2ce8c <__flatcc_fb_parse@@Base+0x1070>
   2ca6c:	mov	r0, r9
   2ca70:	bl	2a0e4 <__flatcc_fb_default_error_out@@Base+0x20>
   2ca74:	mov	r4, r5
   2ca78:	b	2cb80 <__flatcc_fb_parse@@Base+0xd64>
   2ca7c:	add	r5, r4, #1
   2ca80:	cmp	r6, r5
   2ca84:	beq	2cadc <__flatcc_fb_parse@@Base+0xcc0>
   2ca88:	ldrb	r3, [r4, #1]
   2ca8c:	cmp	r3, #43	; 0x2b
   2ca90:	beq	2cabc <__flatcc_fb_parse@@Base+0xca0>
   2ca94:	cmp	r3, #61	; 0x3d
   2ca98:	bne	2cadc <__flatcc_fb_parse@@Base+0xcc0>
   2ca9c:	add	r5, r4, #2
   2caa0:	mov	r3, r5
   2caa4:	mov	r2, r4
   2caa8:	ldr	r1, [pc, #992]	; 2ce90 <__flatcc_fb_parse@@Base+0x1074>
   2caac:	mov	r0, r9
   2cab0:	bl	2a0e4 <__flatcc_fb_default_error_out@@Base+0x20>
   2cab4:	mov	r4, r5
   2cab8:	b	2cb80 <__flatcc_fb_parse@@Base+0xd64>
   2cabc:	add	r5, r4, #2
   2cac0:	mov	r3, r5
   2cac4:	mov	r2, r4
   2cac8:	ldr	r1, [pc, #964]	; 2ce94 <__flatcc_fb_parse@@Base+0x1078>
   2cacc:	mov	r0, r9
   2cad0:	bl	2a0e4 <__flatcc_fb_default_error_out@@Base+0x20>
   2cad4:	mov	r4, r5
   2cad8:	b	2cb80 <__flatcc_fb_parse@@Base+0xd64>
   2cadc:	mov	r3, r5
   2cae0:	mov	r2, r4
   2cae4:	mov	r1, #43	; 0x2b
   2cae8:	mov	r0, r9
   2caec:	bl	2a0e4 <__flatcc_fb_default_error_out@@Base+0x20>
   2caf0:	mov	r4, r5
   2caf4:	b	2cb80 <__flatcc_fb_parse@@Base+0xd64>
   2caf8:	add	r5, r4, #1
   2cafc:	cmp	r6, r5
   2cb00:	beq	2cde8 <__flatcc_fb_parse@@Base+0xfcc>
   2cb04:	ldrb	r3, [r4, #1]
   2cb08:	cmp	r3, #46	; 0x2e
   2cb0c:	beq	2cd94 <__flatcc_fb_parse@@Base+0xf78>
   2cb10:	bcc	2cde8 <__flatcc_fb_parse@@Base+0xfcc>
   2cb14:	sub	r3, r3, #48	; 0x30
   2cb18:	cmp	r3, #9
   2cb1c:	movls	r1, r4
   2cb20:	bhi	2cde8 <__flatcc_fb_parse@@Base+0xfcc>
   2cb24:	add	r2, r5, #1
   2cb28:	mov	r0, r6
   2cb2c:	mov	r5, r2
   2cb30:	cmp	r2, r0
   2cb34:	beq	2cb60 <__flatcc_fb_parse@@Base+0xd44>
   2cb38:	add	r2, r2, #1
   2cb3c:	ldrb	r3, [r5]
   2cb40:	sub	r3, r3, #48	; 0x30
   2cb44:	uxtb	r3, r3
   2cb48:	cmp	r3, #9
   2cb4c:	bls	2cb2c <__flatcc_fb_parse@@Base+0xd10>
   2cb50:	ldrb	r3, [r5]
   2cb54:	and	r3, r3, #223	; 0xdf
   2cb58:	cmp	r3, #69	; 0x45
   2cb5c:	beq	2d124 <__flatcc_fb_parse@@Base+0x1308>
   2cb60:	cmp	r5, r1
   2cb64:	beq	2d174 <__flatcc_fb_parse@@Base+0x1358>
   2cb68:	mov	r3, r5
   2cb6c:	mov	r2, r4
   2cb70:	mov	r1, #11
   2cb74:	mov	r0, r9
   2cb78:	bl	2a0e4 <__flatcc_fb_default_error_out@@Base+0x20>
   2cb7c:	mov	r4, r5
   2cb80:	cmp	r6, r4
   2cb84:	beq	2be98 <__flatcc_fb_parse@@Base+0x7c>
   2cb88:	ldrb	r1, [r4]
   2cb8c:	cmp	r1, #126	; 0x7e
   2cb90:	ldrls	pc, [pc, r1, lsl #2]
   2cb94:	b	2d85c <__flatcc_fb_parse@@Base+0x1a40>
   2cb98:	andeq	ip, r2, r4, lsl #5
   2cb9c:	andeq	sp, r2, ip, asr r8
   2cba0:	andeq	sp, r2, ip, asr r8
   2cba4:	andeq	sp, r2, ip, asr r8
   2cba8:	andeq	sp, r2, ip, asr r8
   2cbac:	andeq	sp, r2, ip, asr r8
   2cbb0:	andeq	sp, r2, ip, asr r8
   2cbb4:	andeq	sp, r2, ip, asr r8
   2cbb8:	andeq	sp, r2, ip, asr r8
   2cbbc:	muleq	r2, ip, r2
   2cbc0:	andeq	ip, r2, r8, asr #5
   2cbc4:	andeq	sp, r2, ip, asr r8
   2cbc8:	andeq	sp, r2, ip, asr r8
   2cbcc:	strdeq	ip, [r2], -r8
   2cbd0:	andeq	sp, r2, ip, asr r8
   2cbd4:	andeq	sp, r2, ip, asr r8
   2cbd8:	andeq	sp, r2, ip, asr r8
   2cbdc:	andeq	sp, r2, ip, asr r8
   2cbe0:	andeq	sp, r2, ip, asr r8
   2cbe4:	andeq	sp, r2, ip, asr r8
   2cbe8:	andeq	sp, r2, ip, asr r8
   2cbec:	andeq	sp, r2, ip, asr r8
   2cbf0:	andeq	sp, r2, ip, asr r8
   2cbf4:	andeq	sp, r2, ip, asr r8
   2cbf8:	andeq	sp, r2, ip, asr r8
   2cbfc:	andeq	sp, r2, ip, asr r8
   2cc00:	andeq	sp, r2, ip, asr r8
   2cc04:	andeq	sp, r2, ip, asr r8
   2cc08:	andeq	sp, r2, ip, asr r8
   2cc0c:	andeq	sp, r2, ip, asr r8
   2cc10:	andeq	sp, r2, ip, asr r8
   2cc14:	andeq	sp, r2, ip, asr r8
   2cc18:	muleq	r2, ip, r2
   2cc1c:	muleq	r2, r0, r4
   2cc20:	andeq	ip, r2, r8, lsr #6
   2cc24:	andeq	sp, r2, ip, asr r8
   2cc28:	andeq	sp, r2, ip, asr r8
   2cc2c:	muleq	r2, r0, r4
   2cc30:	andeq	ip, r2, r8, asr r5
   2cc34:	andeq	sp, r2, ip, asr r8
   2cc38:	andeq	ip, r2, r4, ror r4
   2cc3c:	andeq	ip, r2, r4, ror r4
   2cc40:	andeq	ip, r2, r4, lsr #14
   2cc44:	andeq	ip, r2, ip, ror sl
   2cc48:	andeq	ip, r2, r4, ror r4
   2cc4c:	ldrdeq	ip, [r2], -r8
   2cc50:	strdeq	ip, [r2], -r8
   2cc54:	andeq	ip, r2, ip, asr #6
   2cc58:	andeq	sp, r2, r0, asr r0
   2cc5c:	andeq	sp, r2, r0, ror r0
   2cc60:	andeq	sp, r2, r0, ror r0
   2cc64:	andeq	sp, r2, r0, ror r0
   2cc68:	andeq	sp, r2, r0, ror r0
   2cc6c:	andeq	sp, r2, r0, ror r0
   2cc70:	andeq	sp, r2, r0, ror r0
   2cc74:	andeq	sp, r2, r0, ror r0
   2cc78:	andeq	sp, r2, r0, ror r0
   2cc7c:	andeq	sp, r2, r0, ror r0
   2cc80:	andeq	ip, r2, r4, ror r6
   2cc84:	andeq	ip, r2, r4, ror r4
   2cc88:	muleq	r2, r8, r7
   2cc8c:	andeq	ip, r2, ip, asr #11
   2cc90:	andeq	ip, r2, ip, asr #17
   2cc94:	andeq	ip, r2, r4, ror r4
   2cc98:	andeq	sp, r2, ip, asr r8
   2cc9c:	muleq	r2, r4, r1
   2cca0:	muleq	r2, r4, r1
   2cca4:	muleq	r2, r4, r1
   2cca8:	muleq	r2, r4, r1
   2ccac:	muleq	r2, r4, r1
   2ccb0:	muleq	r2, r4, r1
   2ccb4:	muleq	r2, r4, r1
   2ccb8:	muleq	r2, r4, r1
   2ccbc:	muleq	r2, r4, r1
   2ccc0:	muleq	r2, r4, r1
   2ccc4:	muleq	r2, r4, r1
   2ccc8:	muleq	r2, r4, r1
   2cccc:	muleq	r2, r4, r1
   2ccd0:	muleq	r2, r4, r1
   2ccd4:	muleq	r2, r4, r1
   2ccd8:	muleq	r2, r4, r1
   2ccdc:	muleq	r2, r4, r1
   2cce0:	muleq	r2, r4, r1
   2cce4:	muleq	r2, r4, r1
   2cce8:	muleq	r2, r4, r1
   2ccec:	muleq	r2, r4, r1
   2ccf0:	muleq	r2, r4, r1
   2ccf4:	muleq	r2, r4, r1
   2ccf8:	muleq	r2, r4, r1
   2ccfc:	muleq	r2, r4, r1
   2cd00:	muleq	r2, r4, r1
   2cd04:	andeq	ip, r2, r4, ror r4
   2cd08:	andeq	ip, r2, r4, ror r4
   2cd0c:	andeq	ip, r2, r4, ror r4
   2cd10:	muleq	r2, r0, r4
   2cd14:	muleq	r2, r4, r1
   2cd18:	andeq	sp, r2, ip, asr r8
   2cd1c:	muleq	r2, r4, r1
   2cd20:	muleq	r2, r4, r1
   2cd24:	muleq	r2, r4, r1
   2cd28:	muleq	r2, r4, r1
   2cd2c:	muleq	r2, r4, r1
   2cd30:	muleq	r2, r4, r1
   2cd34:	muleq	r2, r4, r1
   2cd38:	muleq	r2, r4, r1
   2cd3c:	muleq	r2, r4, r1
   2cd40:	muleq	r2, r4, r1
   2cd44:	muleq	r2, r4, r1
   2cd48:	muleq	r2, r4, r1
   2cd4c:	muleq	r2, r4, r1
   2cd50:	muleq	r2, r4, r1
   2cd54:	muleq	r2, r4, r1
   2cd58:	muleq	r2, r4, r1
   2cd5c:	muleq	r2, r4, r1
   2cd60:	muleq	r2, r4, r1
   2cd64:	muleq	r2, r4, r1
   2cd68:	muleq	r2, r4, r1
   2cd6c:	muleq	r2, r4, r1
   2cd70:	muleq	r2, r4, r1
   2cd74:	muleq	r2, r4, r1
   2cd78:	muleq	r2, r4, r1
   2cd7c:	muleq	r2, r4, r1
   2cd80:	muleq	r2, r4, r1
   2cd84:	andeq	ip, r2, r4, ror r4
   2cd88:	andeq	ip, r2, r0, ror #9
   2cd8c:	andeq	ip, r2, r4, ror r4
   2cd90:	muleq	r2, r0, r4
   2cd94:	add	r5, r4, #2
   2cd98:	cmp	r6, r5
   2cd9c:	beq	2cdac <__flatcc_fb_parse@@Base+0xf90>
   2cda0:	ldrb	r3, [r4, #2]
   2cda4:	cmp	r3, #46	; 0x2e
   2cda8:	beq	2cdc8 <__flatcc_fb_parse@@Base+0xfac>
   2cdac:	mov	r3, r5
   2cdb0:	mov	r2, r4
   2cdb4:	ldr	r1, [pc, #220]	; 2ce98 <__flatcc_fb_parse@@Base+0x107c>
   2cdb8:	mov	r0, r9
   2cdbc:	bl	2a0e4 <__flatcc_fb_default_error_out@@Base+0x20>
   2cdc0:	mov	r4, r5
   2cdc4:	b	2cb80 <__flatcc_fb_parse@@Base+0xd64>
   2cdc8:	add	r5, r4, #3
   2cdcc:	mov	r3, r5
   2cdd0:	mov	r2, r4
   2cdd4:	ldr	r1, [pc, #192]	; 2ce9c <__flatcc_fb_parse@@Base+0x1080>
   2cdd8:	mov	r0, r9
   2cddc:	bl	2a0e4 <__flatcc_fb_default_error_out@@Base+0x20>
   2cde0:	mov	r4, r5
   2cde4:	b	2cb80 <__flatcc_fb_parse@@Base+0xd64>
   2cde8:	mov	r3, r5
   2cdec:	mov	r2, r4
   2cdf0:	mov	r1, #46	; 0x2e
   2cdf4:	mov	r0, r9
   2cdf8:	bl	2a0e4 <__flatcc_fb_default_error_out@@Base+0x20>
   2cdfc:	mov	r4, r5
   2ce00:	b	2cb80 <__flatcc_fb_parse@@Base+0xd64>
   2ce04:	andeq	r3, r5, r0, lsr pc
   2ce08:			; <UNDEFINED> instruction: 0xfffffc2a
   2ce0c:	andeq	r3, r5, r8, lsr pc
   2ce10:	ldrbvs	r7, [r0, #-571]!	; 0xfffffdc5
   2ce14:	strbtvc	r6, [lr], #-2355	; 0xfffff6cd
   2ce18:	andeq	r3, r5, r0, ror #31
   2ce1c:	andeq	r4, r5, r8, asr #32
   2ce20:			; <UNDEFINED> instruction: 0xfffffc3c
   2ce24:	andeq	r3, r0, pc, lsr #26
   2ce28:	andeq	r3, r0, ip, ror sp
   2ce2c:	andeq	r7, r0, ip, ror ip
   2ce30:	andeq	r3, r0, r6, lsr #26
   2ce34:	andeq	r2, r0, r6, lsr #12
   2ce38:	andeq	r3, r0, sp, lsr lr
   2ce3c:	andeq	r3, r0, sp, lsr sp
   2ce40:	eorseq	r3, sp, sp, lsr sp
   2ce44:	andeq	r3, r0, sl, lsr sp
   2ce48:	andeq	r3, r0, sl, lsr sl
   2ce4c:	eorseq	r3, sp, sl, lsr sl
   2ce50:	andeq	r3, r0, sl, lsr #26
   2ce54:	andeq	r2, r0, sl, lsr #20
   2ce58:	andeq	r2, r0, ip, lsr sp
   2ce5c:	andeq	r3, r0, ip, lsr sp
   2ce60:	eorseq	r3, sp, ip, lsr ip
   2ce64:	eorseq	r3, ip, ip, lsr ip
   2ce68:	ldccc	12, cr3, [ip, #-240]!	; 0xffffff10
   2ce6c:	andeq	r3, r0, ip, lsr ip
   2ce70:	andeq	r3, r0, lr, lsr sp
   2ce74:	andeq	r3, r0, lr, lsr lr
   2ce78:	eorseq	r3, sp, lr, lsr lr
   2ce7c:	eorseq	r3, lr, lr, lsr lr
   2ce80:	ldccc	14, cr3, [lr, #-248]!	; 0xffffff08
   2ce84:	andeq	r3, r0, sp, lsr #26
   2ce88:	andeq	r2, r0, sp, lsr #26
   2ce8c:	andeq	r3, r0, sp, lsr #28
   2ce90:	andeq	r3, r0, fp, lsr #26
   2ce94:	andeq	r2, r0, fp, lsr #22
   2ce98:	andeq	r2, r0, lr, lsr #28
   2ce9c:	eoreq	r2, lr, lr, lsr #28
   2cea0:	andeq	r3, r5, r0, lsr #15
   2cea4:	stmdacc	r9!, {r0, r2, r4, r5, r8, sl, ip, sp, lr}^
   2cea8:	rsbcc	r6, ip, #57671680	; 0x3700000
   2ceac:	rsbcc	r6, lr, #868352	; 0xd4000
   2ceb0:	rsbcc	r7, r9, #226492416	; 0xd800000
   2ceb4:	strbtcc	r6, [lr], #-2357	; 0xfffff6cb
   2ceb8:	strbtcc	r6, [ip], #-1591	; 0xfffff9c9
   2cebc:	andeq	r3, r5, ip, lsl #31
   2cec0:			; <UNDEFINED> instruction: 0xfffffc1d
   2cec4:			; <UNDEFINED> instruction: 0x36697536
   2cec8:			; <UNDEFINED> instruction: 0x366e6935
   2cecc:	andeq	sp, r3, r4, ror #1
   2ced0:			; <UNDEFINED> instruction: 0xfffffc20
   2ced4:	strbvs	r7, [r1, #-1077]!	; 0xfffffbcb
   2ced8:	strbvs	r6, [lr, #-2359]!	; 0xfffff6c9
   2cedc:	strbvs	r7, [r2, #-1333]!	; 0xfffffacb
   2cee0:	andeq	r3, r5, r8, lsr pc
   2cee4:			; <UNDEFINED> instruction: 0xfffffc2a
   2cee8:	stmdacc	lr!, {r2, r4, r5, r8, fp, sp, lr}^
   2ceec:	andeq	sp, r3, ip, ror #1
   2cef0:	strbvs	r6, [pc, #-1078]!	; 2cac2 <__flatcc_fb_parse@@Base+0xca6>
   2cef4:	andeq	r3, r5, r8, lsr #31
   2cef8:			; <UNDEFINED> instruction: 0xfffffc38
   2cefc:	mcrvs	6, 3, r6, cr9, cr14, {1}
   2cf00:			; <UNDEFINED> instruction: 0x676c7535
   2cf04:	ldrbvs	r6, [r4, #-313]!	; 0xfffffec7
   2cf08:	ldrbvs	r7, [r2, #-1076]!	; 0xfffffbcc
   2cf0c:	andeq	r4, r5, r0, ror lr
   2cf10:			; <UNDEFINED> instruction: 0xfffffc24
   2cf14:			; <UNDEFINED> instruction: 0x67747336
   2cf18:			; <UNDEFINED> instruction: 0x676f6c34
   2cf1c:	andeq	r3, r5, ip, asr #30
   2cf20:	sfmvs	f6, 2, [pc], #-208	; 2ce58 <__flatcc_fb_parse@@Base+0x103c>
   2cf24:	muleq	r3, ip, ip
   2cf28:	strbtvc	r7, [r9], #-1332	; 0xfffffacc
   2cf2c:	strbtvc	r6, [ip], #-1589	; 0xfffff9cb
   2cf30:	andeq	ip, r3, ip, lsl #25
   2cf34:	rsbvc	r6, r9, #66060288	; 0x3f00000
   2cf38:	strbtvc	r7, [r8], #-821	; 0xfffffccb
   2cf3c:	mcrvs	5, 3, r7, cr14, cr5, {1}
   2cf40:	andeq	r3, r5, ip, ror #30
   2cf44:			; <UNDEFINED> instruction: 0xfffffc30
   2cf48:	ldrbtvc	r7, [r3], #-1334	; 0xfffffaca
   2cf4c:	andeq	r4, r5, ip, lsl #27
   2cf50:	andeq	r3, r5, r0, asr #30
   2cf54:			; <UNDEFINED> instruction: 0xfffffc1e
   2cf58:	andeq	r4, r5, r4, asr #24
   2cf5c:			; <UNDEFINED> instruction: 0xfffffc19
   2cf60:	andeq	r3, r5, r4, asr #30
   2cf64:			; <UNDEFINED> instruction: 0xfffffc1a
   2cf68:	andeq	r3, r5, r4, asr pc
   2cf6c:			; <UNDEFINED> instruction: 0xfffffc25
   2cf70:	andeq	r3, r5, ip, asr pc
   2cf74:			; <UNDEFINED> instruction: 0xfffffc26
   2cf78:	ldrdeq	sp, [r3], -ip
   2cf7c:			; <UNDEFINED> instruction: 0xfffffc21
   2cf80:	ldrdeq	sp, [r3], -r4
   2cf84:			; <UNDEFINED> instruction: 0xfffffc22
   2cf88:	andeq	r5, r5, ip, asr fp
   2cf8c:			; <UNDEFINED> instruction: 0xfffffc29
   2cf90:	andeq	sp, r3, ip, asr #1
   2cf94:	andeq	r3, r5, r4, ror #30
   2cf98:	andeq	r3, r5, r4, ror pc
   2cf9c:			; <UNDEFINED> instruction: 0xfffffc28
   2cfa0:	muleq	r3, r4, ip
   2cfa4:			; <UNDEFINED> instruction: 0xfffffc31
   2cfa8:	andeq	r3, r5, r0, lsl fp
   2cfac:			; <UNDEFINED> instruction: 0xfffffc32
   2cfb0:	strheq	sp, [r3], -ip
   2cfb4:			; <UNDEFINED> instruction: 0xfffffc2d
   2cfb8:	andeq	sp, r3, r4, asr #1
   2cfbc:			; <UNDEFINED> instruction: 0xfffffc2c
   2cfc0:	strheq	sp, [r3], -r4
   2cfc4:			; <UNDEFINED> instruction: 0xfffffc2e
   2cfc8:	andeq	r3, r5, ip, ror pc
   2cfcc:			; <UNDEFINED> instruction: 0xfffffc34
   2cfd0:	andeq	r3, r5, r4, lsl #31
   2cfd4:			; <UNDEFINED> instruction: 0xfffffc1c
   2cfd8:	muleq	r5, r4, pc	; <UNPREDICTABLE>
   2cfdc:			; <UNDEFINED> instruction: 0xfffffc35
   2cfe0:	muleq	r5, ip, pc	; <UNPREDICTABLE>
   2cfe4:	andeq	ip, r3, r0, lsl r3
   2cfe8:			; <UNDEFINED> instruction: 0x00053fb4
   2cfec:			; <UNDEFINED> instruction: 0xfffffc39
   2cff0:	andeq	r3, r5, r0, asr #31
   2cff4:	ldrdeq	r3, [r5], -r0
   2cff8:	andeq	r4, r5, r8, lsl r0
   2cffc:			; <UNDEFINED> instruction: 0xfffffc36
   2d000:			; <UNDEFINED> instruction: 0x000543b8
   2d004:			; <UNDEFINED> instruction: 0xfffffc3a
   2d008:	andeq	r4, r5, r4, asr r1
   2d00c:	andeq	r3, r5, r8, asr #21
   2d010:	andeq	r4, r5, r8, lsl #9
   2d014:	andeq	r4, r5, r8, rrx
   2d018:	andeq	r4, r5, r8, lsl #1
   2d01c:	strheq	r4, [r5], -r0
   2d020:	andeq	r4, r5, ip, asr #1
   2d024:	strdeq	r4, [r5], -r4	; <UNPREDICTABLE>
   2d028:	andeq	r4, r5, r0, lsl r1
   2d02c:	andeq	r4, r5, ip, lsr #2
   2d030:	andeq	r4, r5, ip, ror r1
   2d034:	muleq	r5, ip, r1
   2d038:			; <UNDEFINED> instruction: 0x000541b4
   2d03c:	ldrdeq	r4, [r5], -r0
   2d040:	andeq	r7, r6, r8, lsr #1
   2d044:	strdeq	ip, [r3], -ip	; <UNPREDICTABLE>
   2d048:	ldrdeq	r4, [r5], -ip
   2d04c:	andeq	r4, r5, r0, lsl #4
   2d050:	add	r3, r4, #1
   2d054:	cmp	r6, r3
   2d058:	beq	2d070 <__flatcc_fb_parse@@Base+0x1254>
   2d05c:	ldrb	r3, [r4, #1]
   2d060:	cmp	r3, #88	; 0x58
   2d064:	beq	2d09c <__flatcc_fb_parse@@Base+0x1280>
   2d068:	cmp	r3, #120	; 0x78
   2d06c:	beq	2d09c <__flatcc_fb_parse@@Base+0x1280>
   2d070:	add	r2, r4, #1
   2d074:	mov	r5, r2
   2d078:	cmp	r2, #0
   2d07c:	beq	2d0f4 <__flatcc_fb_parse@@Base+0x12d8>
   2d080:	add	r2, r2, #1
   2d084:	ldrb	r3, [r5]
   2d088:	sub	r3, r3, #48	; 0x30
   2d08c:	uxtb	r3, r3
   2d090:	cmp	r3, #9
   2d094:	bls	2d074 <__flatcc_fb_parse@@Base+0x1258>
   2d098:	b	2d0f8 <__flatcc_fb_parse@@Base+0x12dc>
   2d09c:	add	r2, r4, #2
   2d0a0:	mov	r0, r6
   2d0a4:	mov	r5, r2
   2d0a8:	cmp	r0, r2
   2d0ac:	beq	2d0d8 <__flatcc_fb_parse@@Base+0x12bc>
   2d0b0:	ldrb	r3, [r2], #1
   2d0b4:	sub	r1, r3, #48	; 0x30
   2d0b8:	uxtb	r1, r1
   2d0bc:	cmp	r1, #9
   2d0c0:	bls	2d0a4 <__flatcc_fb_parse@@Base+0x1288>
   2d0c4:	orr	r3, r3, #32
   2d0c8:	sub	r3, r3, #97	; 0x61
   2d0cc:	uxtb	r3, r3
   2d0d0:	cmp	r3, #5
   2d0d4:	bls	2d0a4 <__flatcc_fb_parse@@Base+0x1288>
   2d0d8:	mov	r3, r5
   2d0dc:	mov	r2, r4
   2d0e0:	mov	r1, #14
   2d0e4:	mov	r0, r9
   2d0e8:	bl	2a0e4 <__flatcc_fb_default_error_out@@Base+0x20>
   2d0ec:	mov	r4, r5
   2d0f0:	b	2cb80 <__flatcc_fb_parse@@Base+0xd64>
   2d0f4:	mov	r5, #0
   2d0f8:	ldrb	r3, [r5]
   2d0fc:	cmp	r3, #46	; 0x2e
   2d100:	moveq	r1, r5
   2d104:	beq	2cb24 <__flatcc_fb_parse@@Base+0xd08>
   2d108:	cmp	r6, r5
   2d10c:	beq	2d178 <__flatcc_fb_parse@@Base+0x135c>
   2d110:	ldrb	r3, [r5]
   2d114:	and	r3, r3, #223	; 0xdf
   2d118:	cmp	r3, #69	; 0x45
   2d11c:	moveq	r1, r5
   2d120:	bne	2d178 <__flatcc_fb_parse@@Base+0x135c>
   2d124:	add	r2, r5, #1
   2d128:	cmp	r6, r2
   2d12c:	beq	2d144 <__flatcc_fb_parse@@Base+0x1328>
   2d130:	ldrb	r3, [r5, #1]
   2d134:	sub	r3, r3, #43	; 0x2b
   2d138:	and	r3, r3, #253	; 0xfd
   2d13c:	cmp	r3, #0
   2d140:	movne	r2, r5
   2d144:	add	r2, r2, #1
   2d148:	mov	r0, r6
   2d14c:	mov	r5, r2
   2d150:	cmp	r0, r2
   2d154:	beq	2cb60 <__flatcc_fb_parse@@Base+0xd44>
   2d158:	add	r2, r2, #1
   2d15c:	ldrb	r3, [r5]
   2d160:	sub	r3, r3, #48	; 0x30
   2d164:	uxtb	r3, r3
   2d168:	cmp	r3, #9
   2d16c:	bls	2d14c <__flatcc_fb_parse@@Base+0x1330>
   2d170:	b	2cb60 <__flatcc_fb_parse@@Base+0xd44>
   2d174:	mov	r5, r1
   2d178:	mov	r3, r5
   2d17c:	mov	r2, r4
   2d180:	mov	r1, #10
   2d184:	mov	r0, r9
   2d188:	bl	2a0e4 <__flatcc_fb_default_error_out@@Base+0x20>
   2d18c:	mov	r4, r5
   2d190:	b	2cb80 <__flatcc_fb_parse@@Base+0xd64>
   2d194:	lsl	r1, r1, #8
   2d198:	add	r5, r4, #1
   2d19c:	cmp	r6, r5
   2d1a0:	beq	2d1f0 <__flatcc_fb_parse@@Base+0x13d4>
   2d1a4:	ldrb	r2, [r4, #1]
   2d1a8:	ldr	r3, [pc, #-784]	; 2cea0 <__flatcc_fb_parse@@Base+0x1084>
   2d1ac:	add	r3, r3, r2
   2d1b0:	ldrb	r3, [r3, #40]	; 0x28
   2d1b4:	cmp	r3, #0
   2d1b8:	beq	2d1f0 <__flatcc_fb_parse@@Base+0x13d4>
   2d1bc:	orr	r1, r1, r2, lsl #16
   2d1c0:	add	r3, r4, #2
   2d1c4:	mov	ip, r6
   2d1c8:	ldr	r0, [pc, #-816]	; 2cea0 <__flatcc_fb_parse@@Base+0x1084>
   2d1cc:	mov	r5, r3
   2d1d0:	cmp	ip, r3
   2d1d4:	beq	2d1f0 <__flatcc_fb_parse@@Base+0x13d4>
   2d1d8:	add	r3, r3, #1
   2d1dc:	ldrb	r2, [r5]
   2d1e0:	add	r2, r0, r2
   2d1e4:	ldrb	r2, [r2, #40]	; 0x28
   2d1e8:	cmp	r2, #0
   2d1ec:	bne	2d1cc <__flatcc_fb_parse@@Base+0x13b0>
   2d1f0:	ldrb	r3, [r5, #-1]
   2d1f4:	orr	r1, r1, r3, lsl #24
   2d1f8:	sub	r3, r5, r4
   2d1fc:	uxtb	r3, r3
   2d200:	add	r3, r3, #48	; 0x30
   2d204:	orr	r1, r3, r1
   2d208:	cmp	r1, sl
   2d20c:	beq	2d7fc <__flatcc_fb_parse@@Base+0x19e0>
   2d210:	bhi	2d3a4 <__flatcc_fb_parse@@Base+0x1588>
   2d214:	ldr	r3, [pc, #-888]	; 2cea4 <__flatcc_fb_parse@@Base+0x1088>
   2d218:	cmp	r1, r3
   2d21c:	beq	2d65c <__flatcc_fb_parse@@Base+0x1840>
   2d220:	bhi	2d2d4 <__flatcc_fb_parse@@Base+0x14b8>
   2d224:	add	r3, r3, #-67108863	; 0xfc000001
   2d228:	cmp	r1, r3
   2d22c:	beq	2d73c <__flatcc_fb_parse@@Base+0x1920>
   2d230:	bhi	2d260 <__flatcc_fb_parse@@Base+0x1444>
   2d234:	ldr	r3, [pc, #-916]	; 2cea8 <__flatcc_fb_parse@@Base+0x108c>
   2d238:	cmp	r1, r3
   2d23c:	beq	2d77c <__flatcc_fb_parse@@Base+0x1960>
   2d240:	ldr	r3, [pc, #-924]	; 2ceac <__flatcc_fb_parse@@Base+0x1090>
   2d244:	cmp	r1, r3
   2d248:	beq	2d5fc <__flatcc_fb_parse@@Base+0x17e0>
   2d24c:	ldr	r3, [pc, #-932]	; 2ceb0 <__flatcc_fb_parse@@Base+0x1094>
   2d250:	cmp	r1, r3
   2d254:	beq	2d6fc <__flatcc_fb_parse@@Base+0x18e0>
   2d258:	mov	r1, #9
   2d25c:	b	2d564 <__flatcc_fb_parse@@Base+0x1748>
   2d260:	ldr	r3, [pc, #-948]	; 2ceb4 <__flatcc_fb_parse@@Base+0x1098>
   2d264:	cmp	r1, r3
   2d268:	beq	2d61c <__flatcc_fb_parse@@Base+0x1800>
   2d26c:	bhi	2d29c <__flatcc_fb_parse@@Base+0x1480>
   2d270:	ldr	r3, [pc, #-960]	; 2ceb8 <__flatcc_fb_parse@@Base+0x109c>
   2d274:	cmp	r1, r3
   2d278:	bne	2d258 <__flatcc_fb_parse@@Base+0x143c>
   2d27c:	mov	r2, #7
   2d280:	mov	r1, r4
   2d284:	ldr	r0, [pc, #-976]	; 2cebc <__flatcc_fb_parse@@Base+0x10a0>
   2d288:	bl	13ff8 <memcmp@plt>
   2d28c:	ldr	r1, [pc, #-980]	; 2cec0 <__flatcc_fb_parse@@Base+0x10a4>
   2d290:	cmp	r0, #0
   2d294:	movne	r1, #9
   2d298:	b	2d564 <__flatcc_fb_parse@@Base+0x1748>
   2d29c:	ldr	r3, [pc, #-992]	; 2cec4 <__flatcc_fb_parse@@Base+0x10a8>
   2d2a0:	cmp	r1, r3
   2d2a4:	beq	2d71c <__flatcc_fb_parse@@Base+0x1900>
   2d2a8:	ldr	r3, [pc, #-1000]	; 2cec8 <__flatcc_fb_parse@@Base+0x10ac>
   2d2ac:	cmp	r1, r3
   2d2b0:	bne	2d258 <__flatcc_fb_parse@@Base+0x143c>
   2d2b4:	mov	r2, #5
   2d2b8:	mov	r1, r4
   2d2bc:	ldr	r0, [pc, #-1016]	; 2cecc <__flatcc_fb_parse@@Base+0x10b0>
   2d2c0:	bl	13ff8 <memcmp@plt>
   2d2c4:	ldr	r1, [pc, #-1020]	; 2ced0 <__flatcc_fb_parse@@Base+0x10b4>
   2d2c8:	cmp	r0, #0
   2d2cc:	movne	r1, #9
   2d2d0:	b	2d564 <__flatcc_fb_parse@@Base+0x1748>
   2d2d4:	ldr	r3, [pc, #-1032]	; 2ced4 <__flatcc_fb_parse@@Base+0x10b8>
   2d2d8:	cmp	r1, r3
   2d2dc:	beq	2d63c <__flatcc_fb_parse@@Base+0x1820>
   2d2e0:	bls	2d320 <__flatcc_fb_parse@@Base+0x1504>
   2d2e4:	ldr	r3, [pc, #-1044]	; 2ced8 <__flatcc_fb_parse@@Base+0x10bc>
   2d2e8:	cmp	r1, r3
   2d2ec:	beq	2d79c <__flatcc_fb_parse@@Base+0x1980>
   2d2f0:	bhi	2d368 <__flatcc_fb_parse@@Base+0x154c>
   2d2f4:	ldr	r3, [pc, #-1056]	; 2cedc <__flatcc_fb_parse@@Base+0x10c0>
   2d2f8:	cmp	r1, r3
   2d2fc:	bne	2d258 <__flatcc_fb_parse@@Base+0x143c>
   2d300:	mov	r2, #5
   2d304:	mov	r1, r4
   2d308:	ldr	r0, [pc, #-1072]	; 2cee0 <__flatcc_fb_parse@@Base+0x10c4>
   2d30c:	bl	13ff8 <memcmp@plt>
   2d310:	ldr	r1, [pc, #-1076]	; 2cee4 <__flatcc_fb_parse@@Base+0x10c8>
   2d314:	cmp	r0, #0
   2d318:	movne	r1, #9
   2d31c:	b	2d564 <__flatcc_fb_parse@@Base+0x1748>
   2d320:	sub	r3, r3, #3584	; 0xe00
   2d324:	cmp	r1, r3
   2d328:	beq	2d5dc <__flatcc_fb_parse@@Base+0x17c0>
   2d32c:	add	r3, r3, #2048	; 0x800
   2d330:	add	r3, r3, #4
   2d334:	cmp	r1, r3
   2d338:	beq	2d7dc <__flatcc_fb_parse@@Base+0x19c0>
   2d33c:	ldr	r3, [pc, #-1116]	; 2cee8 <__flatcc_fb_parse@@Base+0x10cc>
   2d340:	cmp	r1, r3
   2d344:	bne	2d258 <__flatcc_fb_parse@@Base+0x143c>
   2d348:	mov	r2, #4
   2d34c:	mov	r1, r4
   2d350:	ldr	r0, [pc, #-1132]	; 2ceec <__flatcc_fb_parse@@Base+0x10d0>
   2d354:	bl	13ff8 <memcmp@plt>
   2d358:	cmp	r0, #0
   2d35c:	movne	r1, #9
   2d360:	mvneq	r1, #992	; 0x3e0
   2d364:	b	2d564 <__flatcc_fb_parse@@Base+0x1748>
   2d368:	ldr	r3, [pc, #-1152]	; 2cef0 <__flatcc_fb_parse@@Base+0x10d4>
   2d36c:	cmp	r1, r3
   2d370:	beq	2d6bc <__flatcc_fb_parse@@Base+0x18a0>
   2d374:	add	r3, r3, #3584	; 0xe00
   2d378:	add	r3, r3, #3
   2d37c:	cmp	r1, r3
   2d380:	bne	2d258 <__flatcc_fb_parse@@Base+0x143c>
   2d384:	mov	r2, #9
   2d388:	mov	r1, r4
   2d38c:	ldr	r0, [pc, #-1184]	; 2cef4 <__flatcc_fb_parse@@Base+0x10d8>
   2d390:	bl	13ff8 <memcmp@plt>
   2d394:	ldr	r1, [pc, #-1188]	; 2cef8 <__flatcc_fb_parse@@Base+0x10dc>
   2d398:	cmp	r0, #0
   2d39c:	movne	r1, #9
   2d3a0:	b	2d564 <__flatcc_fb_parse@@Base+0x1748>
   2d3a4:	ldr	r3, [pc, #-1200]	; 2cefc <__flatcc_fb_parse@@Base+0x10e0>
   2d3a8:	cmp	r1, r3
   2d3ac:	beq	2d81c <__flatcc_fb_parse@@Base+0x1a00>
   2d3b0:	bhi	2d484 <__flatcc_fb_parse@@Base+0x1668>
   2d3b4:	ldr	r3, [pc, #-1212]	; 2cf00 <__flatcc_fb_parse@@Base+0x10e4>
   2d3b8:	cmp	r1, r3
   2d3bc:	beq	2d67c <__flatcc_fb_parse@@Base+0x1860>
   2d3c0:	bhi	2d40c <__flatcc_fb_parse@@Base+0x15f0>
   2d3c4:	ldr	r3, [pc, #-1224]	; 2cf04 <__flatcc_fb_parse@@Base+0x10e8>
   2d3c8:	cmp	r1, r3
   2d3cc:	beq	2d7bc <__flatcc_fb_parse@@Base+0x19a0>
   2d3d0:	add	r3, r3, #327680	; 0x50000
   2d3d4:	add	r3, r3, #251	; 0xfb
   2d3d8:	cmp	r1, r3
   2d3dc:	beq	2d59c <__flatcc_fb_parse@@Base+0x1780>
   2d3e0:	ldr	r3, [pc, #-1248]	; 2cf08 <__flatcc_fb_parse@@Base+0x10ec>
   2d3e4:	cmp	r1, r3
   2d3e8:	bne	2d258 <__flatcc_fb_parse@@Base+0x143c>
   2d3ec:	mov	r2, #4
   2d3f0:	mov	r1, r4
   2d3f4:	ldr	r0, [pc, #-1264]	; 2cf0c <__flatcc_fb_parse@@Base+0x10f0>
   2d3f8:	bl	13ff8 <memcmp@plt>
   2d3fc:	ldr	r1, [pc, #-1268]	; 2cf10 <__flatcc_fb_parse@@Base+0x10f4>
   2d400:	cmp	r0, #0
   2d404:	movne	r1, #9
   2d408:	b	2d564 <__flatcc_fb_parse@@Base+0x1748>
   2d40c:	ldr	r3, [pc, #-1280]	; 2cf14 <__flatcc_fb_parse@@Base+0x10f8>
   2d410:	cmp	r1, r3
   2d414:	beq	2d6dc <__flatcc_fb_parse@@Base+0x18c0>
   2d418:	bhi	2d448 <__flatcc_fb_parse@@Base+0x162c>
   2d41c:	ldr	r3, [pc, #-1292]	; 2cf18 <__flatcc_fb_parse@@Base+0x10fc>
   2d420:	cmp	r1, r3
   2d424:	bne	2d258 <__flatcc_fb_parse@@Base+0x143c>
   2d428:	mov	r2, #4
   2d42c:	mov	r1, r4
   2d430:	ldr	r0, [pc, #-1308]	; 2cf1c <__flatcc_fb_parse@@Base+0x1100>
   2d434:	bl	13ff8 <memcmp@plt>
   2d438:	cmp	r0, #0
   2d43c:	movne	r1, #9
   2d440:	mvneq	r1, #988	; 0x3dc
   2d444:	b	2d564 <__flatcc_fb_parse@@Base+0x1748>
   2d448:	ldr	r3, [pc, #-1328]	; 2cf20 <__flatcc_fb_parse@@Base+0x1104>
   2d44c:	cmp	r1, r3
   2d450:	beq	2d57c <__flatcc_fb_parse@@Base+0x1760>
   2d454:	add	r3, r3, #16711680	; 0xff0000
   2d458:	add	r3, r3, #768	; 0x300
   2d45c:	cmp	r1, r3
   2d460:	bne	2d258 <__flatcc_fb_parse@@Base+0x143c>
   2d464:	mov	r2, #4
   2d468:	mov	r1, r4
   2d46c:	ldr	r0, [pc, #-1360]	; 2cf24 <__flatcc_fb_parse@@Base+0x1108>
   2d470:	bl	13ff8 <memcmp@plt>
   2d474:	cmp	r0, #0
   2d478:	movne	r1, #9
   2d47c:	mvneq	r1, #996	; 0x3e4
   2d480:	b	2d564 <__flatcc_fb_parse@@Base+0x1748>
   2d484:	ldr	r3, [pc, #-1380]	; 2cf28 <__flatcc_fb_parse@@Base+0x110c>
   2d488:	cmp	r1, r3
   2d48c:	beq	2d5bc <__flatcc_fb_parse@@Base+0x17a0>
   2d490:	bls	2d4cc <__flatcc_fb_parse@@Base+0x16b0>
   2d494:	cmp	r1, fp
   2d498:	beq	2d548 <__flatcc_fb_parse@@Base+0x172c>
   2d49c:	bhi	2d510 <__flatcc_fb_parse@@Base+0x16f4>
   2d4a0:	ldr	r3, [pc, #-1404]	; 2cf2c <__flatcc_fb_parse@@Base+0x1110>
   2d4a4:	cmp	r1, r3
   2d4a8:	bne	2d258 <__flatcc_fb_parse@@Base+0x143c>
   2d4ac:	mov	r2, #5
   2d4b0:	mov	r1, r4
   2d4b4:	ldr	r0, [pc, #-1420]	; 2cf30 <__flatcc_fb_parse@@Base+0x1114>
   2d4b8:	bl	13ff8 <memcmp@plt>
   2d4bc:	cmp	r0, #0
   2d4c0:	movne	r1, #9
   2d4c4:	mvneq	r1, #984	; 0x3d8
   2d4c8:	b	2d564 <__flatcc_fb_parse@@Base+0x1748>
   2d4cc:	ldr	r3, [pc, #-1440]	; 2cf34 <__flatcc_fb_parse@@Base+0x1118>
   2d4d0:	cmp	r1, r3
   2d4d4:	beq	2d83c <__flatcc_fb_parse@@Base+0x1a20>
   2d4d8:	ldr	r3, [pc, #-1448]	; 2cf38 <__flatcc_fb_parse@@Base+0x111c>
   2d4dc:	cmp	r1, r3
   2d4e0:	beq	2d69c <__flatcc_fb_parse@@Base+0x1880>
   2d4e4:	ldr	r3, [pc, #-1456]	; 2cf3c <__flatcc_fb_parse@@Base+0x1120>
   2d4e8:	cmp	r1, r3
   2d4ec:	bne	2d258 <__flatcc_fb_parse@@Base+0x143c>
   2d4f0:	mov	r2, #5
   2d4f4:	mov	r1, r4
   2d4f8:	ldr	r0, [pc, #-1472]	; 2cf40 <__flatcc_fb_parse@@Base+0x1124>
   2d4fc:	bl	13ff8 <memcmp@plt>
   2d500:	ldr	r1, [pc, #-1476]	; 2cf44 <__flatcc_fb_parse@@Base+0x1128>
   2d504:	cmp	r0, #0
   2d508:	movne	r1, #9
   2d50c:	b	2d564 <__flatcc_fb_parse@@Base+0x1748>
   2d510:	ldr	r3, [pc, #-1488]	; 2cf48 <__flatcc_fb_parse@@Base+0x112c>
   2d514:	cmp	r1, r3
   2d518:	beq	2d75c <__flatcc_fb_parse@@Base+0x1940>
   2d51c:	add	r3, r3, #65024	; 0xfe00
   2d520:	cmp	r1, r3
   2d524:	bne	2d258 <__flatcc_fb_parse@@Base+0x143c>
   2d528:	mov	r2, #6
   2d52c:	mov	r1, r4
   2d530:	ldr	r0, [pc, #-1516]	; 2cf4c <__flatcc_fb_parse@@Base+0x1130>
   2d534:	bl	13ff8 <memcmp@plt>
   2d538:	cmp	r0, #0
   2d53c:	movne	r1, #9
   2d540:	mvneq	r1, #972	; 0x3cc
   2d544:	b	2d564 <__flatcc_fb_parse@@Base+0x1748>
   2d548:	mov	r2, #3
   2d54c:	mov	r1, r4
   2d550:	ldr	r0, [pc, #-1544]	; 2cf50 <__flatcc_fb_parse@@Base+0x1134>
   2d554:	bl	13ff8 <memcmp@plt>
   2d558:	ldr	r1, [pc, #-1548]	; 2cf54 <__flatcc_fb_parse@@Base+0x1138>
   2d55c:	cmp	r0, #0
   2d560:	movne	r1, #9
   2d564:	mov	r3, r5
   2d568:	mov	r2, r4
   2d56c:	mov	r0, r9
   2d570:	bl	2a0e4 <__flatcc_fb_default_error_out@@Base+0x20>
   2d574:	mov	r4, r5
   2d578:	b	2cb80 <__flatcc_fb_parse@@Base+0xd64>
   2d57c:	mov	r2, #4
   2d580:	mov	r1, r4
   2d584:	ldr	r0, [pc, #-1588]	; 2cf58 <__flatcc_fb_parse@@Base+0x113c>
   2d588:	bl	13ff8 <memcmp@plt>
   2d58c:	ldr	r1, [pc, #-1592]	; 2cf5c <__flatcc_fb_parse@@Base+0x1140>
   2d590:	cmp	r0, #0
   2d594:	movne	r1, #9
   2d598:	b	2d564 <__flatcc_fb_parse@@Base+0x1748>
   2d59c:	mov	r2, #4
   2d5a0:	mov	r1, r4
   2d5a4:	ldr	r0, [pc, #-1612]	; 2cf60 <__flatcc_fb_parse@@Base+0x1144>
   2d5a8:	bl	13ff8 <memcmp@plt>
   2d5ac:	ldr	r1, [pc, #-1616]	; 2cf64 <__flatcc_fb_parse@@Base+0x1148>
   2d5b0:	cmp	r0, #0
   2d5b4:	movne	r1, #9
   2d5b8:	b	2d564 <__flatcc_fb_parse@@Base+0x1748>
   2d5bc:	mov	r2, #4
   2d5c0:	mov	r1, r4
   2d5c4:	ldr	r0, [pc, #-1636]	; 2cf68 <__flatcc_fb_parse@@Base+0x114c>
   2d5c8:	bl	13ff8 <memcmp@plt>
   2d5cc:	ldr	r1, [pc, #-1640]	; 2cf6c <__flatcc_fb_parse@@Base+0x1150>
   2d5d0:	cmp	r0, #0
   2d5d4:	movne	r1, #9
   2d5d8:	b	2d564 <__flatcc_fb_parse@@Base+0x1748>
   2d5dc:	mov	r2, #5
   2d5e0:	mov	r1, r4
   2d5e4:	ldr	r0, [pc, #-1660]	; 2cf70 <__flatcc_fb_parse@@Base+0x1154>
   2d5e8:	bl	13ff8 <memcmp@plt>
   2d5ec:	ldr	r1, [pc, #-1664]	; 2cf74 <__flatcc_fb_parse@@Base+0x1158>
   2d5f0:	cmp	r0, #0
   2d5f4:	movne	r1, #9
   2d5f8:	b	2d564 <__flatcc_fb_parse@@Base+0x1748>
   2d5fc:	mov	r2, #5
   2d600:	mov	r1, r4
   2d604:	ldr	r0, [pc, #-1684]	; 2cf78 <__flatcc_fb_parse@@Base+0x115c>
   2d608:	bl	13ff8 <memcmp@plt>
   2d60c:	ldr	r1, [pc, #-1688]	; 2cf7c <__flatcc_fb_parse@@Base+0x1160>
   2d610:	cmp	r0, #0
   2d614:	movne	r1, #9
   2d618:	b	2d564 <__flatcc_fb_parse@@Base+0x1748>
   2d61c:	mov	r2, #5
   2d620:	mov	r1, r4
   2d624:	ldr	r0, [pc, #-1708]	; 2cf80 <__flatcc_fb_parse@@Base+0x1164>
   2d628:	bl	13ff8 <memcmp@plt>
   2d62c:	ldr	r1, [pc, #-1712]	; 2cf84 <__flatcc_fb_parse@@Base+0x1168>
   2d630:	cmp	r0, #0
   2d634:	movne	r1, #9
   2d638:	b	2d564 <__flatcc_fb_parse@@Base+0x1748>
   2d63c:	mov	r2, #5
   2d640:	mov	r1, r4
   2d644:	ldr	r0, [pc, #-1732]	; 2cf88 <__flatcc_fb_parse@@Base+0x116c>
   2d648:	bl	13ff8 <memcmp@plt>
   2d64c:	ldr	r1, [pc, #-1736]	; 2cf8c <__flatcc_fb_parse@@Base+0x1170>
   2d650:	cmp	r0, #0
   2d654:	movne	r1, #9
   2d658:	b	2d564 <__flatcc_fb_parse@@Base+0x1748>
   2d65c:	mov	r2, #5
   2d660:	mov	r1, r4
   2d664:	ldr	r0, [pc, #-1756]	; 2cf90 <__flatcc_fb_parse@@Base+0x1174>
   2d668:	bl	13ff8 <memcmp@plt>
   2d66c:	cmp	r0, #0
   2d670:	movne	r1, #9
   2d674:	mvneq	r1, #980	; 0x3d4
   2d678:	b	2d564 <__flatcc_fb_parse@@Base+0x1748>
   2d67c:	mov	r2, #5
   2d680:	mov	r1, r4
   2d684:	ldr	r0, [pc, #-1784]	; 2cf94 <__flatcc_fb_parse@@Base+0x1178>
   2d688:	bl	13ff8 <memcmp@plt>
   2d68c:	cmp	r0, #0
   2d690:	movne	r1, #9
   2d694:	mvneq	r1, #976	; 0x3d0
   2d698:	b	2d564 <__flatcc_fb_parse@@Base+0x1748>
   2d69c:	mov	r2, #5
   2d6a0:	mov	r1, r4
   2d6a4:	ldr	r0, [pc, #-1812]	; 2cf98 <__flatcc_fb_parse@@Base+0x117c>
   2d6a8:	bl	13ff8 <memcmp@plt>
   2d6ac:	ldr	r1, [pc, #-1816]	; 2cf9c <__flatcc_fb_parse@@Base+0x1180>
   2d6b0:	cmp	r0, #0
   2d6b4:	movne	r1, #9
   2d6b8:	b	2d564 <__flatcc_fb_parse@@Base+0x1748>
   2d6bc:	mov	r2, #6
   2d6c0:	mov	r1, r4
   2d6c4:	ldr	r0, [pc, #-1836]	; 2cfa0 <__flatcc_fb_parse@@Base+0x1184>
   2d6c8:	bl	13ff8 <memcmp@plt>
   2d6cc:	ldr	r1, [pc, #-1840]	; 2cfa4 <__flatcc_fb_parse@@Base+0x1188>
   2d6d0:	cmp	r0, #0
   2d6d4:	movne	r1, #9
   2d6d8:	b	2d564 <__flatcc_fb_parse@@Base+0x1748>
   2d6dc:	mov	r2, #6
   2d6e0:	mov	r1, r4
   2d6e4:	ldr	r0, [pc, #-1860]	; 2cfa8 <__flatcc_fb_parse@@Base+0x118c>
   2d6e8:	bl	13ff8 <memcmp@plt>
   2d6ec:	ldr	r1, [pc, #-1864]	; 2cfac <__flatcc_fb_parse@@Base+0x1190>
   2d6f0:	cmp	r0, #0
   2d6f4:	movne	r1, #9
   2d6f8:	b	2d564 <__flatcc_fb_parse@@Base+0x1748>
   2d6fc:	mov	r2, #6
   2d700:	mov	r1, r4
   2d704:	ldr	r0, [pc, #-1884]	; 2cfb0 <__flatcc_fb_parse@@Base+0x1194>
   2d708:	bl	13ff8 <memcmp@plt>
   2d70c:	ldr	r1, [pc, #-1888]	; 2cfb4 <__flatcc_fb_parse@@Base+0x1198>
   2d710:	cmp	r0, #0
   2d714:	movne	r1, #9
   2d718:	b	2d564 <__flatcc_fb_parse@@Base+0x1748>
   2d71c:	mov	r2, #6
   2d720:	mov	r1, r4
   2d724:	ldr	r0, [pc, #-1908]	; 2cfb8 <__flatcc_fb_parse@@Base+0x119c>
   2d728:	bl	13ff8 <memcmp@plt>
   2d72c:	ldr	r1, [pc, #-1912]	; 2cfbc <__flatcc_fb_parse@@Base+0x11a0>
   2d730:	cmp	r0, #0
   2d734:	movne	r1, #9
   2d738:	b	2d564 <__flatcc_fb_parse@@Base+0x1748>
   2d73c:	mov	r2, #6
   2d740:	mov	r1, r4
   2d744:	ldr	r0, [pc, #-1932]	; 2cfc0 <__flatcc_fb_parse@@Base+0x11a4>
   2d748:	bl	13ff8 <memcmp@plt>
   2d74c:	ldr	r1, [pc, #-1936]	; 2cfc4 <__flatcc_fb_parse@@Base+0x11a8>
   2d750:	cmp	r0, #0
   2d754:	movne	r1, #9
   2d758:	b	2d564 <__flatcc_fb_parse@@Base+0x1748>
   2d75c:	mov	r2, #6
   2d760:	mov	r1, r4
   2d764:	ldr	r0, [pc, #-1956]	; 2cfc8 <__flatcc_fb_parse@@Base+0x11ac>
   2d768:	bl	13ff8 <memcmp@plt>
   2d76c:	ldr	r1, [pc, #-1960]	; 2cfcc <__flatcc_fb_parse@@Base+0x11b0>
   2d770:	cmp	r0, #0
   2d774:	movne	r1, #9
   2d778:	b	2d564 <__flatcc_fb_parse@@Base+0x1748>
   2d77c:	mov	r2, #7
   2d780:	mov	r1, r4
   2d784:	ldr	r0, [pc, #-1980]	; 2cfd0 <__flatcc_fb_parse@@Base+0x11b4>
   2d788:	bl	13ff8 <memcmp@plt>
   2d78c:	ldr	r1, [pc, #-1984]	; 2cfd4 <__flatcc_fb_parse@@Base+0x11b8>
   2d790:	cmp	r0, #0
   2d794:	movne	r1, #9
   2d798:	b	2d564 <__flatcc_fb_parse@@Base+0x1748>
   2d79c:	mov	r2, #7
   2d7a0:	mov	r1, r4
   2d7a4:	ldr	r0, [pc, #-2004]	; 2cfd8 <__flatcc_fb_parse@@Base+0x11bc>
   2d7a8:	bl	13ff8 <memcmp@plt>
   2d7ac:	ldr	r1, [pc, #-2008]	; 2cfdc <__flatcc_fb_parse@@Base+0x11c0>
   2d7b0:	cmp	r0, #0
   2d7b4:	movne	r1, #9
   2d7b8:	b	2d564 <__flatcc_fb_parse@@Base+0x1748>
   2d7bc:	mov	r2, #9
   2d7c0:	mov	r1, r4
   2d7c4:	ldr	r0, [pc, #-2028]	; 2cfe0 <__flatcc_fb_parse@@Base+0x11c4>
   2d7c8:	bl	13ff8 <memcmp@plt>
   2d7cc:	ldr	r1, [pc, #-2008]	; 2cffc <__flatcc_fb_parse@@Base+0x11e0>
   2d7d0:	cmp	r0, #0
   2d7d4:	movne	r1, #9
   2d7d8:	b	2d564 <__flatcc_fb_parse@@Base+0x1748>
   2d7dc:	mov	r2, #9
   2d7e0:	mov	r1, r4
   2d7e4:	ldr	r0, [pc, #-2056]	; 2cfe4 <__flatcc_fb_parse@@Base+0x11c8>
   2d7e8:	bl	13ff8 <memcmp@plt>
   2d7ec:	cmp	r0, #0
   2d7f0:	movne	r1, #9
   2d7f4:	mvneq	r1, #968	; 0x3c8
   2d7f8:	b	2d564 <__flatcc_fb_parse@@Base+0x1748>
   2d7fc:	mov	r2, #11
   2d800:	mov	r1, r4
   2d804:	ldr	r0, [pc, #-2084]	; 2cfe8 <__flatcc_fb_parse@@Base+0x11cc>
   2d808:	bl	13ff8 <memcmp@plt>
   2d80c:	ldr	r1, [pc, #-2088]	; 2cfec <__flatcc_fb_parse@@Base+0x11d0>
   2d810:	cmp	r0, #0
   2d814:	movne	r1, #9
   2d818:	b	2d564 <__flatcc_fb_parse@@Base+0x1748>
   2d81c:	mov	r2, #14
   2d820:	mov	r1, r4
   2d824:	ldr	r0, [pc, #-2108]	; 2cff0 <__flatcc_fb_parse@@Base+0x11d4>
   2d828:	bl	13ff8 <memcmp@plt>
   2d82c:	ldr	r1, [pc, #-2096]	; 2d004 <__flatcc_fb_parse@@Base+0x11e8>
   2d830:	cmp	r0, #0
   2d834:	movne	r1, #9
   2d838:	b	2d564 <__flatcc_fb_parse@@Base+0x1748>
   2d83c:	mov	r2, #15
   2d840:	mov	r1, r4
   2d844:	ldr	r0, [pc, #-2136]	; 2cff4 <__flatcc_fb_parse@@Base+0x11d8>
   2d848:	bl	13ff8 <memcmp@plt>
   2d84c:	cmp	r0, #0
   2d850:	movne	r1, #9
   2d854:	mvneq	r1, #964	; 0x3c4
   2d858:	b	2d564 <__flatcc_fb_parse@@Base+0x1748>
   2d85c:	add	r5, r4, #1
   2d860:	cmp	r1, #127	; 0x7f
   2d864:	cmpne	r1, #31
   2d868:	bhi	2d878 <__flatcc_fb_parse@@Base+0x1a5c>
   2d86c:	cmp	r1, #32
   2d870:	cmpne	r1, #9
   2d874:	bne	2d894 <__flatcc_fb_parse@@Base+0x1a78>
   2d878:	mov	r3, r5
   2d87c:	mov	r2, r4
   2d880:	mov	r1, #8
   2d884:	mov	r0, r9
   2d888:	bl	2a0e4 <__flatcc_fb_default_error_out@@Base+0x20>
   2d88c:	mov	r4, r5
   2d890:	b	2cb80 <__flatcc_fb_parse@@Base+0xd64>
   2d894:	mov	r3, r5
   2d898:	mov	r2, r4
   2d89c:	mov	r1, #5
   2d8a0:	mov	r0, r9
   2d8a4:	bl	2a0e4 <__flatcc_fb_default_error_out@@Base+0x20>
   2d8a8:	mov	r4, r5
   2d8ac:	b	2cb80 <__flatcc_fb_parse@@Base+0xd64>
   2d8b0:	mov	r3, r7
   2d8b4:	mov	r2, r4
   2d8b8:	mov	r1, #0
   2d8bc:	mov	r0, r9
   2d8c0:	bl	2a0e4 <__flatcc_fb_default_error_out@@Base+0x20>
   2d8c4:	b	2c114 <__flatcc_fb_parse@@Base+0x2f8>
   2d8c8:	ldr	r3, [pc, #-2192]	; 2d040 <__flatcc_fb_parse@@Base+0x1224>
   2d8cc:	ldr	r3, [r3]
   2d8d0:	mov	r2, #34	; 0x22
   2d8d4:	mov	r1, #1
   2d8d8:	ldr	r0, [pc, #-2204]	; 2d044 <__flatcc_fb_parse@@Base+0x1228>
   2d8dc:	bl	1401c <fwrite@plt>
   2d8e0:	mov	r0, #1
   2d8e4:	bl	14070 <exit@plt>
   2d8e8:	mov	r0, r9
   2d8ec:	bl	2a1d4 <__flatcc_fb_default_error_out@@Base+0x110>
   2d8f0:	b	2c144 <__flatcc_fb_parse@@Base+0x328>
   2d8f4:	mov	r3, r6
   2d8f8:	mov	r2, r8
   2d8fc:	mov	r1, sl
   2d900:	mov	r0, r9
   2d904:	bl	2a5dc <__flatcc_error_report@@Base+0x1c4>
   2d908:	b	2d9bc <__flatcc_fb_parse@@Base+0x1ba0>
   2d90c:	mov	r3, r6
   2d910:	ldr	r2, [pc, #-2336]	; 2cff8 <__flatcc_fb_parse@@Base+0x11dc>
   2d914:	mov	r1, r4
   2d918:	mov	r0, r9
   2d91c:	bl	2a5dc <__flatcc_error_report@@Base+0x1c4>
   2d920:	mov	r2, r7
   2d924:	mov	r1, #59	; 0x3b
   2d928:	mov	r0, r9
   2d92c:	bl	2a2e8 <__flatcc_fb_default_error_out@@Base+0x224>
   2d930:	b	2d9e8 <__flatcc_fb_parse@@Base+0x1bcc>
   2d934:	ldr	r3, [pc, #-2300]	; 2d040 <__flatcc_fb_parse@@Base+0x1224>
   2d938:	ldr	r3, [r3]
   2d93c:	mov	r2, #34	; 0x22
   2d940:	mov	r1, #1
   2d944:	ldr	r0, [pc, #-2312]	; 2d044 <__flatcc_fb_parse@@Base+0x1228>
   2d948:	bl	1401c <fwrite@plt>
   2d94c:	mov	r0, #1
   2d950:	bl	14070 <exit@plt>
   2d954:	ldr	r3, [r9, #52]	; 0x34
   2d958:	add	r3, r3, #32
   2d95c:	str	r3, [r9, #52]	; 0x34
   2d960:	ldr	r3, [r9, #352]	; 0x160
   2d964:	str	r3, [r1]
   2d968:	str	r1, [r9, #352]	; 0x160
   2d96c:	add	r1, r1, #8
   2d970:	mov	r0, r9
   2d974:	bl	2aa10 <__flatcc_error_report@@Base+0x5f8>
   2d978:	ldr	r1, [r9, #40]	; 0x28
   2d97c:	ldr	r3, [r1, #16]
   2d980:	cmp	r3, #59	; 0x3b
   2d984:	bne	2da30 <__flatcc_fb_parse@@Base+0x1c14>
   2d988:	mov	r0, r9
   2d98c:	bl	2a1d4 <__flatcc_fb_default_error_out@@Base+0x110>
   2d990:	ldr	r4, [r9, #40]	; 0x28
   2d994:	ldr	r3, [r4, #16]
   2d998:	cmp	r3, r5
   2d99c:	bne	2da44 <__flatcc_fb_parse@@Base+0x1c28>
   2d9a0:	mov	r0, r9
   2d9a4:	bl	2a1d4 <__flatcc_fb_default_error_out@@Base+0x110>
   2d9a8:	cmp	r4, #0
   2d9ac:	beq	2da44 <__flatcc_fb_parse@@Base+0x1c28>
   2d9b0:	ldr	r3, [r9, #140]	; 0x8c
   2d9b4:	cmp	r3, #0
   2d9b8:	bne	2d8f4 <__flatcc_fb_parse@@Base+0x1ad8>
   2d9bc:	ldr	r3, [r9, #108]	; 0x6c
   2d9c0:	cmp	r3, #9
   2d9c4:	bgt	2da44 <__flatcc_fb_parse@@Base+0x1c28>
   2d9c8:	ldr	r4, [r9, #40]	; 0x28
   2d9cc:	ldr	r3, [r4, #16]
   2d9d0:	cmp	r3, #19
   2d9d4:	bne	2d90c <__flatcc_fb_parse@@Base+0x1af0>
   2d9d8:	mov	r0, r9
   2d9dc:	bl	2a1d4 <__flatcc_fb_default_error_out@@Base+0x110>
   2d9e0:	cmp	r4, #0
   2d9e4:	beq	2d920 <__flatcc_fb_parse@@Base+0x1b04>
   2d9e8:	ldr	r1, [r9, #52]	; 0x34
   2d9ec:	add	r2, r1, #32
   2d9f0:	ldr	r3, [r9, #44]	; 0x2c
   2d9f4:	cmp	r2, r3
   2d9f8:	bls	2d954 <__flatcc_fb_parse@@Base+0x1b38>
   2d9fc:	mov	r1, r7
   2da00:	mov	r0, #65536	; 0x10000
   2da04:	bl	13fa4 <calloc@plt>
   2da08:	cmp	r0, #0
   2da0c:	beq	2d934 <__flatcc_fb_parse@@Base+0x1b18>
   2da10:	ldr	r3, [r9, #48]	; 0x30
   2da14:	str	r3, [r0]
   2da18:	str	r0, [r9, #48]	; 0x30
   2da1c:	add	r1, r0, #16
   2da20:	str	r1, [r9, #52]	; 0x34
   2da24:	add	r0, r0, #65536	; 0x10000
   2da28:	str	r0, [r9, #44]	; 0x2c
   2da2c:	b	2d954 <__flatcc_fb_parse@@Base+0x1b38>
   2da30:	mov	r3, r6
   2da34:	mov	r2, fp
   2da38:	mov	r0, r9
   2da3c:	bl	2a5dc <__flatcc_error_report@@Base+0x1c4>
   2da40:	b	2d990 <__flatcc_fb_parse@@Base+0x1b74>
   2da44:	ldr	fp, [r9, #40]	; 0x28
   2da48:	b	2de5c <__flatcc_fb_parse@@Base+0x2040>
   2da4c:	ldr	r2, [pc, #-2648]	; 2cffc <__flatcc_fb_parse@@Base+0x11e0>
   2da50:	cmp	r3, r2
   2da54:	beq	2ded0 <__flatcc_fb_parse@@Base+0x20b4>
   2da58:	bgt	2db7c <__flatcc_fb_parse@@Base+0x1d60>
   2da5c:	sub	r2, r2, #1
   2da60:	cmp	r3, r2
   2da64:	bne	2debc <__flatcc_fb_parse@@Base+0x20a0>
   2da68:	mov	r3, #0
   2da6c:	ldr	r2, [pc, #-2676]	; 2d000 <__flatcc_fb_parse@@Base+0x11e4>
   2da70:	mov	r0, r9
   2da74:	bl	2a5dc <__flatcc_error_report@@Base+0x1c4>
   2da78:	b	2de4c <__flatcc_fb_parse@@Base+0x2030>
   2da7c:	cmp	r3, #5
   2da80:	beq	2ea78 <__flatcc_fb_parse@@Base+0x2c5c>
   2da84:	bgt	2db40 <__flatcc_fb_parse@@Base+0x1d24>
   2da88:	ldr	r2, [pc, #-2700]	; 2d004 <__flatcc_fb_parse@@Base+0x11e8>
   2da8c:	cmp	r3, r2
   2da90:	beq	2dccc <__flatcc_fb_parse@@Base+0x1eb0>
   2da94:	blt	2e17c <__flatcc_fb_parse@@Base+0x2360>
   2da98:	mvn	r2, #964	; 0x3c4
   2da9c:	cmp	r3, r2
   2daa0:	bne	2debc <__flatcc_fb_parse@@Base+0x20a0>
   2daa4:	mov	r0, r9
   2daa8:	bl	2a1d4 <__flatcc_fb_default_error_out@@Base+0x110>
   2daac:	add	r4, r9, #360	; 0x168
   2dab0:	ldrh	r3, [r4, #8]
   2dab4:	cmp	r3, #0
   2dab8:	bne	2dd90 <__flatcc_fb_parse@@Base+0x1f74>
   2dabc:	ldr	r5, [r9, #40]	; 0x28
   2dac0:	ldr	r3, [r5, #16]
   2dac4:	cmp	r3, #19
   2dac8:	bne	2ddb8 <__flatcc_fb_parse@@Base+0x1f9c>
   2dacc:	mov	r0, r9
   2dad0:	bl	2a1d4 <__flatcc_fb_default_error_out@@Base+0x110>
   2dad4:	cmp	r5, #0
   2dad8:	beq	2ddcc <__flatcc_fb_parse@@Base+0x1fb0>
   2dadc:	ldr	r5, [r9, #40]	; 0x28
   2dae0:	mov	r1, r4
   2dae4:	mov	r0, r9
   2dae8:	bl	2aa10 <__flatcc_error_report@@Base+0x5f8>
   2daec:	ldr	r3, [r9, #360]	; 0x168
   2daf0:	cmp	r3, #0
   2daf4:	beq	2db24 <__flatcc_fb_parse@@Base+0x1d08>
   2daf8:	ldr	r3, [r9, #364]	; 0x16c
   2dafc:	cmp	r3, #4
   2db00:	beq	2db24 <__flatcc_fb_parse@@Base+0x1d08>
   2db04:	add	r3, r9, #360	; 0x168
   2db08:	mov	r2, #1
   2db0c:	strh	r2, [r3, #8]
   2db10:	mov	r3, #0
   2db14:	ldr	r2, [pc, #-2836]	; 2d008 <__flatcc_fb_parse@@Base+0x11ec>
   2db18:	mov	r1, r5
   2db1c:	mov	r0, r9
   2db20:	bl	2a5dc <__flatcc_error_report@@Base+0x1c4>
   2db24:	ldr	r1, [r9, #40]	; 0x28
   2db28:	ldr	r3, [r1, #16]
   2db2c:	cmp	r3, #59	; 0x3b
   2db30:	bne	2dde0 <__flatcc_fb_parse@@Base+0x1fc4>
   2db34:	mov	r0, r9
   2db38:	bl	2a1d4 <__flatcc_fb_default_error_out@@Base+0x110>
   2db3c:	b	2de4c <__flatcc_fb_parse@@Base+0x2030>
   2db40:	cmp	r3, #27
   2db44:	beq	2ea9c <__flatcc_fb_parse@@Base+0x2c80>
   2db48:	cmp	r3, #123	; 0x7b
   2db4c:	beq	2ea64 <__flatcc_fb_parse@@Base+0x2c48>
   2db50:	cmp	r3, #7
   2db54:	bne	2debc <__flatcc_fb_parse@@Base+0x20a0>
   2db58:	mov	r3, #1
   2db5c:	str	r3, [sp, #4]
   2db60:	ldr	r3, [pc, #-2908]	; 2d00c <__flatcc_fb_parse@@Base+0x11f0>
   2db64:	str	r3, [sp]
   2db68:	mov	r3, #0
   2db6c:	ldr	r2, [pc, #-2916]	; 2d010 <__flatcc_fb_parse@@Base+0x11f4>
   2db70:	mov	r0, r9
   2db74:	bl	2a418 <__flatcc_error_report@@Base>
   2db78:	b	2de4c <__flatcc_fb_parse@@Base+0x2030>
   2db7c:	mov	r0, r9
   2db80:	bl	2a1d4 <__flatcc_fb_default_error_out@@Base+0x110>
   2db84:	mov	r3, #0
   2db88:	str	r3, [sp, #20]
   2db8c:	ldr	r4, [r9, #40]	; 0x28
   2db90:	ldr	r3, [r4, #16]
   2db94:	cmp	r3, #59	; 0x3b
   2db98:	beq	2dbd0 <__flatcc_fb_parse@@Base+0x1db4>
   2db9c:	ldr	r1, [r9, #40]	; 0x28
   2dba0:	ldr	r3, [r1, #16]
   2dba4:	cmp	r3, #9
   2dba8:	beq	2dbec <__flatcc_fb_parse@@Base+0x1dd0>
   2dbac:	mov	r3, #0
   2dbb0:	ldr	r2, [pc, #-2980]	; 2d014 <__flatcc_fb_parse@@Base+0x11f8>
   2dbb4:	mov	r0, r9
   2dbb8:	bl	2a5dc <__flatcc_error_report@@Base+0x1c4>
   2dbbc:	mov	r2, #1
   2dbc0:	mov	r1, #59	; 0x3b
   2dbc4:	mov	r0, r9
   2dbc8:	bl	2a2e8 <__flatcc_fb_default_error_out@@Base+0x224>
   2dbcc:	b	2de4c <__flatcc_fb_parse@@Base+0x2030>
   2dbd0:	mov	r0, r9
   2dbd4:	bl	2a1d4 <__flatcc_fb_default_error_out@@Base+0x110>
   2dbd8:	cmp	r4, #0
   2dbdc:	beq	2db9c <__flatcc_fb_parse@@Base+0x1d80>
   2dbe0:	mov	r3, #0
   2dbe4:	str	r3, [r9, #544]	; 0x220
   2dbe8:	b	2de4c <__flatcc_fb_parse@@Base+0x2030>
   2dbec:	add	r1, sp, #20
   2dbf0:	mov	r0, r9
   2dbf4:	bl	2a5fc <__flatcc_error_report@@Base+0x1e4>
   2dbf8:	mov	r3, r4
   2dbfc:	ldr	r2, [pc, #-3052]	; 2d018 <__flatcc_fb_parse@@Base+0x11fc>
   2dc00:	mov	r1, #59	; 0x3b
   2dc04:	mov	r0, r9
   2dc08:	bl	2a780 <__flatcc_error_report@@Base+0x368>
   2dc0c:	ldr	r5, [sp, #20]
   2dc10:	mov	r2, #0
   2dc14:	mov	r1, r5
   2dc18:	ldr	r0, [r9, #412]	; 0x19c
   2dc1c:	bl	29418 <fb_scope_table_find@@Base>
   2dc20:	cmp	r0, #0
   2dc24:	beq	2dc30 <__flatcc_fb_parse@@Base+0x1e14>
   2dc28:	str	r0, [r9, #544]	; 0x220
   2dc2c:	b	2de4c <__flatcc_fb_parse@@Base+0x2030>
   2dc30:	ldr	r4, [r9, #52]	; 0x34
   2dc34:	add	r2, r4, #32
   2dc38:	ldr	r3, [r9, #44]	; 0x2c
   2dc3c:	cmp	r2, r3
   2dc40:	bls	2dc94 <__flatcc_fb_parse@@Base+0x1e78>
   2dc44:	mov	r1, #1
   2dc48:	mov	r0, #65536	; 0x10000
   2dc4c:	bl	13fa4 <calloc@plt>
   2dc50:	cmp	r0, #0
   2dc54:	bne	2dc78 <__flatcc_fb_parse@@Base+0x1e5c>
   2dc58:	ldr	r3, [pc, #-3104]	; 2d040 <__flatcc_fb_parse@@Base+0x1224>
   2dc5c:	ldr	r3, [r3]
   2dc60:	mov	r2, #34	; 0x22
   2dc64:	mov	r1, #1
   2dc68:	ldr	r0, [pc, #-3116]	; 2d044 <__flatcc_fb_parse@@Base+0x1228>
   2dc6c:	bl	1401c <fwrite@plt>
   2dc70:	mov	r0, #1
   2dc74:	bl	14070 <exit@plt>
   2dc78:	ldr	r3, [r9, #48]	; 0x30
   2dc7c:	str	r3, [r0]
   2dc80:	str	r0, [r9, #48]	; 0x30
   2dc84:	add	r4, r0, #16
   2dc88:	str	r4, [r9, #52]	; 0x34
   2dc8c:	add	r0, r0, #65536	; 0x10000
   2dc90:	str	r0, [r9, #44]	; 0x2c
   2dc94:	ldr	r3, [r9, #52]	; 0x34
   2dc98:	add	r3, r3, #32
   2dc9c:	str	r3, [r9, #52]	; 0x34
   2dca0:	mov	r3, r4
   2dca4:	str	r5, [r3], #20
   2dca8:	add	r2, r9, #476	; 0x1dc
   2dcac:	ldm	r2, {r0, r1}
   2dcb0:	stm	r3, {r0, r1}
   2dcb4:	mov	r2, #1
   2dcb8:	mov	r1, r4
   2dcbc:	ldr	r0, [r9, #412]	; 0x19c
   2dcc0:	bl	293f4 <fb_scope_table_insert_item@@Base>
   2dcc4:	mov	r0, r4
   2dcc8:	b	2dc28 <__flatcc_fb_parse@@Base+0x1e0c>
   2dccc:	mov	r0, r9
   2dcd0:	bl	2a1d4 <__flatcc_fb_default_error_out@@Base+0x110>
   2dcd4:	add	r5, r9, #376	; 0x178
   2dcd8:	ldrh	r3, [r5, #8]
   2dcdc:	cmp	r3, #2
   2dce0:	beq	2dd2c <__flatcc_fb_parse@@Base+0x1f10>
   2dce4:	ldr	r4, [r9, #40]	; 0x28
   2dce8:	ldr	r3, [r4, #16]
   2dcec:	cmp	r3, #19
   2dcf0:	bne	2dd54 <__flatcc_fb_parse@@Base+0x1f38>
   2dcf4:	mov	r0, r9
   2dcf8:	bl	2a1d4 <__flatcc_fb_default_error_out@@Base+0x110>
   2dcfc:	cmp	r4, #0
   2dd00:	beq	2dd68 <__flatcc_fb_parse@@Base+0x1f4c>
   2dd04:	mov	r1, r5
   2dd08:	mov	r0, r9
   2dd0c:	bl	2aa10 <__flatcc_error_report@@Base+0x5f8>
   2dd10:	ldr	r1, [r9, #40]	; 0x28
   2dd14:	ldr	r3, [r1, #16]
   2dd18:	cmp	r3, #59	; 0x3b
   2dd1c:	bne	2dd7c <__flatcc_fb_parse@@Base+0x1f60>
   2dd20:	mov	r0, r9
   2dd24:	bl	2a1d4 <__flatcc_fb_default_error_out@@Base+0x110>
   2dd28:	b	2de4c <__flatcc_fb_parse@@Base+0x2030>
   2dd2c:	ldr	r3, [r9, #380]	; 0x17c
   2dd30:	str	r3, [sp, #4]
   2dd34:	ldr	r3, [r9, #376]	; 0x178
   2dd38:	str	r3, [sp]
   2dd3c:	mov	r3, #0
   2dd40:	ldr	r2, [pc, #-3372]	; 2d01c <__flatcc_fb_parse@@Base+0x1200>
   2dd44:	ldr	r1, [r9, #40]	; 0x28
   2dd48:	mov	r0, r9
   2dd4c:	bl	2a418 <__flatcc_error_report@@Base>
   2dd50:	b	2dce4 <__flatcc_fb_parse@@Base+0x1ec8>
   2dd54:	mov	r3, #0
   2dd58:	ldr	r2, [pc, #-3392]	; 2d020 <__flatcc_fb_parse@@Base+0x1204>
   2dd5c:	mov	r1, r4
   2dd60:	mov	r0, r9
   2dd64:	bl	2a5dc <__flatcc_error_report@@Base+0x1c4>
   2dd68:	mov	r2, #1
   2dd6c:	mov	r1, #59	; 0x3b
   2dd70:	mov	r0, r9
   2dd74:	bl	2a2e8 <__flatcc_fb_default_error_out@@Base+0x224>
   2dd78:	b	2de4c <__flatcc_fb_parse@@Base+0x2030>
   2dd7c:	mov	r3, #0
   2dd80:	ldr	r2, [pc, #-3428]	; 2d024 <__flatcc_fb_parse@@Base+0x1208>
   2dd84:	mov	r0, r9
   2dd88:	bl	2a5dc <__flatcc_error_report@@Base+0x1c4>
   2dd8c:	b	2de4c <__flatcc_fb_parse@@Base+0x2030>
   2dd90:	ldr	r3, [r9, #364]	; 0x16c
   2dd94:	str	r3, [sp, #4]
   2dd98:	ldr	r3, [r9, #360]	; 0x168
   2dd9c:	str	r3, [sp]
   2dda0:	mov	r3, #0
   2dda4:	ldr	r2, [pc, #-3460]	; 2d028 <__flatcc_fb_parse@@Base+0x120c>
   2dda8:	ldr	r1, [r9, #40]	; 0x28
   2ddac:	mov	r0, r9
   2ddb0:	bl	2a418 <__flatcc_error_report@@Base>
   2ddb4:	b	2dabc <__flatcc_fb_parse@@Base+0x1ca0>
   2ddb8:	mov	r3, #0
   2ddbc:	ldr	r2, [pc, #-3480]	; 2d02c <__flatcc_fb_parse@@Base+0x1210>
   2ddc0:	mov	r1, r5
   2ddc4:	mov	r0, r9
   2ddc8:	bl	2a5dc <__flatcc_error_report@@Base+0x1c4>
   2ddcc:	mov	r2, #1
   2ddd0:	mov	r1, #59	; 0x3b
   2ddd4:	mov	r0, r9
   2ddd8:	bl	2a2e8 <__flatcc_fb_default_error_out@@Base+0x224>
   2dddc:	b	2de4c <__flatcc_fb_parse@@Base+0x2030>
   2dde0:	mov	r3, #0
   2dde4:	ldr	r2, [pc, #-3516]	; 2d030 <__flatcc_fb_parse@@Base+0x1214>
   2dde8:	mov	r0, r9
   2ddec:	bl	2a5dc <__flatcc_error_report@@Base+0x1c4>
   2ddf0:	b	2de4c <__flatcc_fb_parse@@Base+0x2030>
   2ddf4:	mov	r0, r9
   2ddf8:	bl	2a1d4 <__flatcc_fb_default_error_out@@Base+0x110>
   2ddfc:	add	r5, r9, #400	; 0x190
   2de00:	ldr	r4, [r9, #40]	; 0x28
   2de04:	ldr	r3, [r9, #400]	; 0x190
   2de08:	cmp	r3, #0
   2de0c:	beq	2de24 <__flatcc_fb_parse@@Base+0x2008>
   2de10:	mov	r3, #0
   2de14:	ldr	r2, [pc, #-3560]	; 2d034 <__flatcc_fb_parse@@Base+0x1218>
   2de18:	mov	r1, r4
   2de1c:	mov	r0, r9
   2de20:	bl	2a5dc <__flatcc_error_report@@Base+0x1c4>
   2de24:	mov	r1, r5
   2de28:	mov	r0, r9
   2de2c:	bl	2a5fc <__flatcc_error_report@@Base+0x1e4>
   2de30:	ldr	r3, [r9, #544]	; 0x220
   2de34:	str	r3, [r9, #408]	; 0x198
   2de38:	mov	r3, r4
   2de3c:	ldr	r2, [pc, #-3596]	; 2d038 <__flatcc_fb_parse@@Base+0x121c>
   2de40:	mov	r1, #59	; 0x3b
   2de44:	mov	r0, r9
   2de48:	bl	2a780 <__flatcc_error_report@@Base+0x368>
   2de4c:	ldr	r3, [r9, #40]	; 0x28
   2de50:	cmp	fp, r3
   2de54:	beq	2eac0 <__flatcc_fb_parse@@Base+0x2ca4>
   2de58:	mov	fp, r3
   2de5c:	ldr	r3, [fp, #16]
   2de60:	cmp	r3, #0
   2de64:	beq	2eae0 <__flatcc_fb_parse@@Base+0x2cc4>
   2de68:	ldr	r3, [r9, #108]	; 0x6c
   2de6c:	cmp	r3, #9
   2de70:	bgt	2eb18 <__flatcc_fb_parse@@Base+0x2cfc>
   2de74:	ldr	r1, [r9, #40]	; 0x28
   2de78:	ldr	r3, [r1, #16]
   2de7c:	cmn	r3, #968	; 0x3c8
   2de80:	beq	2ddf4 <__flatcc_fb_parse@@Base+0x1fd8>
   2de84:	bgt	2da7c <__flatcc_fb_parse@@Base+0x1c60>
   2de88:	mvn	r2, #972	; 0x3cc
   2de8c:	cmp	r3, r2
   2de90:	beq	2dff8 <__flatcc_fb_parse@@Base+0x21dc>
   2de94:	cmn	r3, #972	; 0x3cc
   2de98:	bge	2da4c <__flatcc_fb_parse@@Base+0x1c30>
   2de9c:	sub	r2, r2, #10
   2dea0:	cmp	r3, r2
   2dea4:	beq	2e0bc <__flatcc_fb_parse@@Base+0x22a0>
   2dea8:	cmn	r3, #976	; 0x3d0
   2deac:	beq	2e5ec <__flatcc_fb_parse@@Base+0x27d0>
   2deb0:	mvn	r2, #996	; 0x3e4
   2deb4:	cmp	r3, r2
   2deb8:	beq	2e240 <__flatcc_fb_parse@@Base+0x2424>
   2debc:	mov	r3, #0
   2dec0:	ldr	r2, [pc, #-3724]	; 2d03c <__flatcc_fb_parse@@Base+0x1220>
   2dec4:	mov	r0, r9
   2dec8:	bl	2a5dc <__flatcc_error_report@@Base+0x1c4>
   2decc:	b	2de4c <__flatcc_fb_parse@@Base+0x2030>
   2ded0:	mov	r0, r9
   2ded4:	bl	2a1d4 <__flatcc_fb_default_error_out@@Base+0x110>
   2ded8:	ldr	r3, [r9, #52]	; 0x34
   2dedc:	add	r1, r3, #32
   2dee0:	ldr	r2, [r9, #44]	; 0x2c
   2dee4:	cmp	r1, r2
   2dee8:	bhi	2df5c <__flatcc_fb_parse@@Base+0x2140>
   2deec:	ldr	r2, [r9, #52]	; 0x34
   2def0:	add	r2, r2, #32
   2def4:	str	r2, [r9, #52]	; 0x34
   2def8:	mov	r5, r3
   2defc:	ldr	r2, [r9, #356]	; 0x164
   2df00:	str	r2, [r3]
   2df04:	str	r3, [r9, #356]	; 0x164
   2df08:	ldr	r4, [r9, #40]	; 0x28
   2df0c:	ldr	r3, [r4, #16]
   2df10:	cmp	r3, #19
   2df14:	bne	2dfb0 <__flatcc_fb_parse@@Base+0x2194>
   2df18:	mov	r0, r9
   2df1c:	bl	2a1d4 <__flatcc_fb_default_error_out@@Base+0x110>
   2df20:	cmp	r4, #0
   2df24:	beq	2df40 <__flatcc_fb_parse@@Base+0x2124>
   2df28:	add	r1, r5, #8
   2df2c:	mov	r0, r9
   2df30:	bl	2aa10 <__flatcc_error_report@@Base+0x5f8>
   2df34:	ldr	r3, [r5, #12]
   2df38:	cmp	r3, #0
   2df3c:	beq	2dfc8 <__flatcc_fb_parse@@Base+0x21ac>
   2df40:	ldr	r1, [r9, #40]	; 0x28
   2df44:	ldr	r3, [r1, #16]
   2df48:	cmp	r3, #59	; 0x3b
   2df4c:	bne	2dfe4 <__flatcc_fb_parse@@Base+0x21c8>
   2df50:	mov	r0, r9
   2df54:	bl	2a1d4 <__flatcc_fb_default_error_out@@Base+0x110>
   2df58:	b	2de4c <__flatcc_fb_parse@@Base+0x2030>
   2df5c:	mov	r1, #1
   2df60:	mov	r0, #65536	; 0x10000
   2df64:	bl	13fa4 <calloc@plt>
   2df68:	cmp	r0, #0
   2df6c:	beq	2df90 <__flatcc_fb_parse@@Base+0x2174>
   2df70:	ldr	r3, [r9, #48]	; 0x30
   2df74:	str	r3, [r0]
   2df78:	str	r0, [r9, #48]	; 0x30
   2df7c:	add	r3, r0, #16
   2df80:	str	r3, [r9, #52]	; 0x34
   2df84:	add	r0, r0, #65536	; 0x10000
   2df88:	str	r0, [r9, #44]	; 0x2c
   2df8c:	b	2deec <__flatcc_fb_parse@@Base+0x20d0>
   2df90:	ldr	r3, [pc, #-3928]	; 2d040 <__flatcc_fb_parse@@Base+0x1224>
   2df94:	ldr	r3, [r3]
   2df98:	mov	r2, #34	; 0x22
   2df9c:	mov	r1, #1
   2dfa0:	ldr	r0, [pc, #-3940]	; 2d044 <__flatcc_fb_parse@@Base+0x1228>
   2dfa4:	bl	1401c <fwrite@plt>
   2dfa8:	mov	r0, #1
   2dfac:	bl	14070 <exit@plt>
   2dfb0:	mov	r3, #0
   2dfb4:	ldr	r2, [pc, #-3956]	; 2d048 <__flatcc_fb_parse@@Base+0x122c>
   2dfb8:	mov	r1, r4
   2dfbc:	mov	r0, r9
   2dfc0:	bl	2a5dc <__flatcc_error_report@@Base+0x1c4>
   2dfc4:	b	2df40 <__flatcc_fb_parse@@Base+0x2124>
   2dfc8:	str	r3, [sp, #4]
   2dfcc:	str	r3, [sp]
   2dfd0:	ldr	r2, [pc, #-3980]	; 2d04c <__flatcc_fb_parse@@Base+0x1230>
   2dfd4:	mov	r1, r4
   2dfd8:	mov	r0, r9
   2dfdc:	bl	2a418 <__flatcc_error_report@@Base>
   2dfe0:	b	2df40 <__flatcc_fb_parse@@Base+0x2124>
   2dfe4:	mov	r3, #0
   2dfe8:	ldr	r2, [pc, #3176]	; 2ec58 <__flatcc_fb_parse@@Base+0x2e3c>
   2dfec:	mov	r0, r9
   2dff0:	bl	2a5dc <__flatcc_error_report@@Base+0x1c4>
   2dff4:	b	2de4c <__flatcc_fb_parse@@Base+0x2030>
   2dff8:	mov	r0, r9
   2dffc:	bl	2a1d4 <__flatcc_fb_default_error_out@@Base+0x110>
   2e000:	ldr	r4, [r9, #52]	; 0x34
   2e004:	add	r2, r4, #128	; 0x80
   2e008:	ldr	r3, [r9, #44]	; 0x2c
   2e00c:	cmp	r2, r3
   2e010:	bhi	2e068 <__flatcc_fb_parse@@Base+0x224c>
   2e014:	ldr	r3, [r9, #52]	; 0x34
   2e018:	add	r3, r3, #128	; 0x80
   2e01c:	str	r3, [r9, #52]	; 0x34
   2e020:	ldr	r3, [r9, #392]	; 0x188
   2e024:	str	r3, [r4]
   2e028:	mov	r3, #1
   2e02c:	strh	r3, [r4, #8]
   2e030:	str	r4, [r9, #392]	; 0x188
   2e034:	ldr	r3, [r9, #544]	; 0x220
   2e038:	str	r3, [r4, #12]
   2e03c:	add	r0, r9, #36	; 0x24
   2e040:	bl	2a090 <__flatcc_fb_read_file@@Base+0xf0>
   2e044:	ldr	r3, [r9, #36]	; 0x24
   2e048:	str	r3, [r4, #32]
   2e04c:	mov	r3, #0
   2e050:	str	r3, [r9, #36]	; 0x24
   2e054:	mvn	r2, #972	; 0x3cc
   2e058:	mov	r1, r4
   2e05c:	mov	r0, r9
   2e060:	bl	2b474 <__flatcc_error_report@@Base+0x105c>
   2e064:	b	2de4c <__flatcc_fb_parse@@Base+0x2030>
   2e068:	mov	r1, #1
   2e06c:	mov	r0, #65536	; 0x10000
   2e070:	bl	13fa4 <calloc@plt>
   2e074:	cmp	r0, #0
   2e078:	beq	2e09c <__flatcc_fb_parse@@Base+0x2280>
   2e07c:	ldr	r3, [r9, #48]	; 0x30
   2e080:	str	r3, [r0]
   2e084:	str	r0, [r9, #48]	; 0x30
   2e088:	add	r4, r0, #16
   2e08c:	str	r4, [r9, #52]	; 0x34
   2e090:	add	r0, r0, #65536	; 0x10000
   2e094:	str	r0, [r9, #44]	; 0x2c
   2e098:	b	2e014 <__flatcc_fb_parse@@Base+0x21f8>
   2e09c:	ldr	r3, [pc, #3000]	; 2ec5c <__flatcc_fb_parse@@Base+0x2e40>
   2e0a0:	ldr	r3, [r3]
   2e0a4:	mov	r2, #34	; 0x22
   2e0a8:	mov	r1, #1
   2e0ac:	ldr	r0, [pc, #2988]	; 2ec60 <__flatcc_fb_parse@@Base+0x2e44>
   2e0b0:	bl	1401c <fwrite@plt>
   2e0b4:	mov	r0, #1
   2e0b8:	bl	14070 <exit@plt>
   2e0bc:	mov	r0, r9
   2e0c0:	bl	2a1d4 <__flatcc_fb_default_error_out@@Base+0x110>
   2e0c4:	ldr	r4, [r9, #52]	; 0x34
   2e0c8:	add	r2, r4, #128	; 0x80
   2e0cc:	ldr	r3, [r9, #44]	; 0x2c
   2e0d0:	cmp	r2, r3
   2e0d4:	bhi	2e128 <__flatcc_fb_parse@@Base+0x230c>
   2e0d8:	ldr	r3, [r9, #52]	; 0x34
   2e0dc:	add	r3, r3, #128	; 0x80
   2e0e0:	str	r3, [r9, #52]	; 0x34
   2e0e4:	ldr	r3, [r9, #392]	; 0x188
   2e0e8:	str	r3, [r4]
   2e0ec:	mov	r5, #0
   2e0f0:	strh	r5, [r4, #8]
   2e0f4:	str	r4, [r9, #392]	; 0x188
   2e0f8:	ldr	r3, [r9, #544]	; 0x220
   2e0fc:	str	r3, [r4, #12]
   2e100:	add	r0, r9, #36	; 0x24
   2e104:	bl	2a090 <__flatcc_fb_read_file@@Base+0xf0>
   2e108:	ldr	r3, [r9, #36]	; 0x24
   2e10c:	str	r3, [r4, #32]
   2e110:	str	r5, [r9, #36]	; 0x24
   2e114:	ldr	r2, [pc, #2888]	; 2ec64 <__flatcc_fb_parse@@Base+0x2e48>
   2e118:	mov	r1, r4
   2e11c:	mov	r0, r9
   2e120:	bl	2b474 <__flatcc_error_report@@Base+0x105c>
   2e124:	b	2de4c <__flatcc_fb_parse@@Base+0x2030>
   2e128:	mov	r1, #1
   2e12c:	mov	r0, #65536	; 0x10000
   2e130:	bl	13fa4 <calloc@plt>
   2e134:	cmp	r0, #0
   2e138:	beq	2e15c <__flatcc_fb_parse@@Base+0x2340>
   2e13c:	ldr	r3, [r9, #48]	; 0x30
   2e140:	str	r3, [r0]
   2e144:	str	r0, [r9, #48]	; 0x30
   2e148:	add	r4, r0, #16
   2e14c:	str	r4, [r9, #52]	; 0x34
   2e150:	add	r0, r0, #65536	; 0x10000
   2e154:	str	r0, [r9, #44]	; 0x2c
   2e158:	b	2e0d8 <__flatcc_fb_parse@@Base+0x22bc>
   2e15c:	ldr	r3, [pc, #2808]	; 2ec5c <__flatcc_fb_parse@@Base+0x2e40>
   2e160:	ldr	r3, [r3]
   2e164:	mov	r2, #34	; 0x22
   2e168:	mov	r1, #1
   2e16c:	ldr	r0, [pc, #2796]	; 2ec60 <__flatcc_fb_parse@@Base+0x2e44>
   2e170:	bl	1401c <fwrite@plt>
   2e174:	mov	r0, #1
   2e178:	bl	14070 <exit@plt>
   2e17c:	mov	r0, r9
   2e180:	bl	2a1d4 <__flatcc_fb_default_error_out@@Base+0x110>
   2e184:	ldr	r4, [r9, #52]	; 0x34
   2e188:	add	r2, r4, #128	; 0x80
   2e18c:	ldr	r3, [r9, #44]	; 0x2c
   2e190:	cmp	r2, r3
   2e194:	bhi	2e1ec <__flatcc_fb_parse@@Base+0x23d0>
   2e198:	ldr	r3, [r9, #52]	; 0x34
   2e19c:	add	r3, r3, #128	; 0x80
   2e1a0:	str	r3, [r9, #52]	; 0x34
   2e1a4:	ldr	r3, [r9, #392]	; 0x188
   2e1a8:	str	r3, [r4]
   2e1ac:	mov	r3, #2
   2e1b0:	strh	r3, [r4, #8]
   2e1b4:	str	r4, [r9, #392]	; 0x188
   2e1b8:	ldr	r3, [r9, #544]	; 0x220
   2e1bc:	str	r3, [r4, #12]
   2e1c0:	add	r0, r9, #36	; 0x24
   2e1c4:	bl	2a090 <__flatcc_fb_read_file@@Base+0xf0>
   2e1c8:	ldr	r3, [r9, #36]	; 0x24
   2e1cc:	str	r3, [r4, #32]
   2e1d0:	mov	r3, #0
   2e1d4:	str	r3, [r9, #36]	; 0x24
   2e1d8:	ldr	r2, [pc, #2696]	; 2ec68 <__flatcc_fb_parse@@Base+0x2e4c>
   2e1dc:	mov	r1, r4
   2e1e0:	mov	r0, r9
   2e1e4:	bl	2b474 <__flatcc_error_report@@Base+0x105c>
   2e1e8:	b	2de4c <__flatcc_fb_parse@@Base+0x2030>
   2e1ec:	mov	r1, #1
   2e1f0:	mov	r0, #65536	; 0x10000
   2e1f4:	bl	13fa4 <calloc@plt>
   2e1f8:	cmp	r0, #0
   2e1fc:	beq	2e220 <__flatcc_fb_parse@@Base+0x2404>
   2e200:	ldr	r3, [r9, #48]	; 0x30
   2e204:	str	r3, [r0]
   2e208:	str	r0, [r9, #48]	; 0x30
   2e20c:	add	r4, r0, #16
   2e210:	str	r4, [r9, #52]	; 0x34
   2e214:	add	r0, r0, #65536	; 0x10000
   2e218:	str	r0, [r9, #44]	; 0x2c
   2e21c:	b	2e198 <__flatcc_fb_parse@@Base+0x237c>
   2e220:	ldr	r3, [pc, #2612]	; 2ec5c <__flatcc_fb_parse@@Base+0x2e40>
   2e224:	ldr	r3, [r3]
   2e228:	mov	r2, #34	; 0x22
   2e22c:	mov	r1, #1
   2e230:	ldr	r0, [pc, #2600]	; 2ec60 <__flatcc_fb_parse@@Base+0x2e44>
   2e234:	bl	1401c <fwrite@plt>
   2e238:	mov	r0, #1
   2e23c:	bl	14070 <exit@plt>
   2e240:	mov	r0, r9
   2e244:	bl	2a1d4 <__flatcc_fb_default_error_out@@Base+0x110>
   2e248:	ldr	r4, [r9, #52]	; 0x34
   2e24c:	add	r2, r4, #128	; 0x80
   2e250:	ldr	r3, [r9, #44]	; 0x2c
   2e254:	cmp	r2, r3
   2e258:	bhi	2e31c <__flatcc_fb_parse@@Base+0x2500>
   2e25c:	ldr	r3, [r9, #52]	; 0x34
   2e260:	add	r3, r3, #128	; 0x80
   2e264:	str	r3, [r9, #52]	; 0x34
   2e268:	mov	r7, r4
   2e26c:	ldr	r3, [r9, #392]	; 0x188
   2e270:	str	r3, [r4]
   2e274:	mov	r3, #3
   2e278:	strh	r3, [r4, #8]
   2e27c:	str	r4, [r9, #392]	; 0x188
   2e280:	ldr	r3, [r9, #544]	; 0x220
   2e284:	str	r3, [r4, #12]
   2e288:	add	r3, r9, #36	; 0x24
   2e28c:	str	r3, [sp, #8]
   2e290:	mov	r0, r3
   2e294:	bl	2a090 <__flatcc_fb_read_file@@Base+0xf0>
   2e298:	ldr	r3, [r9, #36]	; 0x24
   2e29c:	str	r3, [r4, #32]
   2e2a0:	mov	r3, #0
   2e2a4:	str	r3, [r9, #36]	; 0x24
   2e2a8:	ldr	r5, [r9, #40]	; 0x28
   2e2ac:	ldr	r3, [r5, #16]
   2e2b0:	cmp	r3, #9
   2e2b4:	bne	2e370 <__flatcc_fb_parse@@Base+0x2554>
   2e2b8:	mov	r0, r9
   2e2bc:	bl	2a1d4 <__flatcc_fb_default_error_out@@Base+0x110>
   2e2c0:	str	r5, [r4, #4]
   2e2c4:	cmp	r5, #0
   2e2c8:	beq	2e480 <__flatcc_fb_parse@@Base+0x2664>
   2e2cc:	ldr	r4, [r9, #40]	; 0x28
   2e2d0:	ldr	r3, [r4, #16]
   2e2d4:	cmp	r3, #58	; 0x3a
   2e2d8:	beq	2e390 <__flatcc_fb_parse@@Base+0x2574>
   2e2dc:	mov	r0, r9
   2e2e0:	bl	2b250 <__flatcc_error_report@@Base+0xe38>
   2e2e4:	str	r0, [r7, #28]
   2e2e8:	ldr	r3, [r9, #40]	; 0x28
   2e2ec:	mov	r4, r3
   2e2f0:	str	r3, [sp, #12]
   2e2f4:	ldr	r3, [r3, #16]
   2e2f8:	cmp	r3, #123	; 0x7b
   2e2fc:	bne	2e454 <__flatcc_fb_parse@@Base+0x2638>
   2e300:	mov	r0, r9
   2e304:	bl	2a1d4 <__flatcc_fb_default_error_out@@Base+0x110>
   2e308:	cmp	r4, #0
   2e30c:	beq	2e480 <__flatcc_fb_parse@@Base+0x2664>
   2e310:	mov	sl, #5
   2e314:	mov	r6, #0
   2e318:	b	2e530 <__flatcc_fb_parse@@Base+0x2714>
   2e31c:	mov	r1, #1
   2e320:	mov	r0, #65536	; 0x10000
   2e324:	bl	13fa4 <calloc@plt>
   2e328:	cmp	r0, #0
   2e32c:	beq	2e350 <__flatcc_fb_parse@@Base+0x2534>
   2e330:	ldr	r3, [r9, #48]	; 0x30
   2e334:	str	r3, [r0]
   2e338:	str	r0, [r9, #48]	; 0x30
   2e33c:	add	r4, r0, #16
   2e340:	str	r4, [r9, #52]	; 0x34
   2e344:	add	r0, r0, #65536	; 0x10000
   2e348:	str	r0, [r9, #44]	; 0x2c
   2e34c:	b	2e25c <__flatcc_fb_parse@@Base+0x2440>
   2e350:	ldr	r3, [pc, #2308]	; 2ec5c <__flatcc_fb_parse@@Base+0x2e40>
   2e354:	ldr	r3, [r3]
   2e358:	mov	r2, #34	; 0x22
   2e35c:	mov	r1, #1
   2e360:	ldr	r0, [pc, #2296]	; 2ec60 <__flatcc_fb_parse@@Base+0x2e44>
   2e364:	bl	1401c <fwrite@plt>
   2e368:	mov	r0, #1
   2e36c:	bl	14070 <exit@plt>
   2e370:	mov	r3, #0
   2e374:	ldr	r2, [pc, #2288]	; 2ec6c <__flatcc_fb_parse@@Base+0x2e50>
   2e378:	mov	r1, r5
   2e37c:	mov	r0, r9
   2e380:	bl	2a5dc <__flatcc_error_report@@Base+0x1c4>
   2e384:	mov	r3, #0
   2e388:	str	r3, [r4, #4]
   2e38c:	b	2e480 <__flatcc_fb_parse@@Base+0x2664>
   2e390:	mov	r0, r9
   2e394:	bl	2a1d4 <__flatcc_fb_default_error_out@@Base+0x110>
   2e398:	cmp	r4, #0
   2e39c:	beq	2e2dc <__flatcc_fb_parse@@Base+0x24c0>
   2e3a0:	add	r1, r7, #40	; 0x28
   2e3a4:	mov	r0, r9
   2e3a8:	bl	2a7c0 <__flatcc_error_report@@Base+0x3a8>
   2e3ac:	ldrh	r3, [r7, #48]	; 0x30
   2e3b0:	cmp	r3, #8
   2e3b4:	beq	2e3d0 <__flatcc_fb_parse@@Base+0x25b4>
   2e3b8:	mov	r3, #0
   2e3bc:	ldr	r2, [pc, #2220]	; 2ec70 <__flatcc_fb_parse@@Base+0x2e54>
   2e3c0:	ldr	r1, [r7, #40]	; 0x28
   2e3c4:	mov	r0, r9
   2e3c8:	bl	2a5dc <__flatcc_error_report@@Base+0x1c4>
   2e3cc:	b	2e2dc <__flatcc_fb_parse@@Base+0x24c0>
   2e3d0:	ldr	r1, [r7, #40]	; 0x28
   2e3d4:	ldr	r3, [r1, #16]
   2e3d8:	add	r3, r3, #996	; 0x3e4
   2e3dc:	cmp	r3, #21
   2e3e0:	ldrls	pc, [pc, r3, lsl #2]
   2e3e4:	b	2e2dc <__flatcc_fb_parse@@Base+0x24c0>
   2e3e8:	andeq	lr, r2, r0, asr #8
   2e3ec:	andeq	lr, r2, r0, asr #8
   2e3f0:	ldrdeq	lr, [r2], -ip
   2e3f4:	ldrdeq	lr, [r2], -ip
   2e3f8:	ldrdeq	lr, [r2], -ip
   2e3fc:	ldrdeq	lr, [r2], -ip
   2e400:	ldrdeq	lr, [r2], -ip
   2e404:	ldrdeq	lr, [r2], -ip
   2e408:	ldrdeq	lr, [r2], -ip
   2e40c:	ldrdeq	lr, [r2], -ip
   2e410:	ldrdeq	lr, [r2], -ip
   2e414:	andeq	lr, r2, r0, asr #8
   2e418:	ldrdeq	lr, [r2], -ip
   2e41c:	ldrdeq	lr, [r2], -ip
   2e420:	ldrdeq	lr, [r2], -ip
   2e424:	ldrdeq	lr, [r2], -ip
   2e428:	ldrdeq	lr, [r2], -ip
   2e42c:	ldrdeq	lr, [r2], -ip
   2e430:	ldrdeq	lr, [r2], -ip
   2e434:	ldrdeq	lr, [r2], -ip
   2e438:	ldrdeq	lr, [r2], -ip
   2e43c:	andeq	lr, r2, r0, asr #8
   2e440:	mov	r3, #0
   2e444:	ldr	r2, [pc, #2084]	; 2ec70 <__flatcc_fb_parse@@Base+0x2e54>
   2e448:	mov	r0, r9
   2e44c:	bl	2a5dc <__flatcc_error_report@@Base+0x1c4>
   2e450:	b	2e2dc <__flatcc_fb_parse@@Base+0x24c0>
   2e454:	mov	r3, #0
   2e458:	ldr	r2, [pc, #2068]	; 2ec74 <__flatcc_fb_parse@@Base+0x2e58>
   2e45c:	ldr	r1, [sp, #12]
   2e460:	mov	r0, r9
   2e464:	bl	2a5dc <__flatcc_error_report@@Base+0x1c4>
   2e468:	b	2e480 <__flatcc_fb_parse@@Base+0x2664>
   2e46c:	mov	r3, #0
   2e470:	ldr	r2, [pc, #2048]	; 2ec78 <__flatcc_fb_parse@@Base+0x2e5c>
   2e474:	mov	r1, r5
   2e478:	mov	r0, r9
   2e47c:	bl	2a5dc <__flatcc_error_report@@Base+0x1c4>
   2e480:	mov	r2, #1
   2e484:	mov	r1, #125	; 0x7d
   2e488:	mov	r0, r9
   2e48c:	bl	2a2e8 <__flatcc_fb_default_error_out@@Base+0x224>
   2e490:	b	2de4c <__flatcc_fb_parse@@Base+0x2030>
   2e494:	ldr	r3, [pc, #1984]	; 2ec5c <__flatcc_fb_parse@@Base+0x2e40>
   2e498:	ldr	r3, [r3]
   2e49c:	mov	r2, #34	; 0x22
   2e4a0:	mov	r1, #1
   2e4a4:	ldr	r0, [pc, #1972]	; 2ec60 <__flatcc_fb_parse@@Base+0x2e44>
   2e4a8:	bl	1401c <fwrite@plt>
   2e4ac:	mov	r0, #1
   2e4b0:	bl	14070 <exit@plt>
   2e4b4:	ldr	r3, [r9, #52]	; 0x34
   2e4b8:	add	r3, r3, #128	; 0x80
   2e4bc:	str	r3, [r9, #52]	; 0x34
   2e4c0:	mov	r8, r4
   2e4c4:	ldr	r3, [r7, #20]
   2e4c8:	str	r3, [r4]
   2e4cc:	strh	sl, [r4, #8]
   2e4d0:	str	r4, [r7, #20]
   2e4d4:	ldr	r0, [sp, #8]
   2e4d8:	bl	2a090 <__flatcc_fb_read_file@@Base+0xf0>
   2e4dc:	ldr	r3, [r9, #36]	; 0x24
   2e4e0:	str	r3, [r4, #68]	; 0x44
   2e4e4:	str	r6, [r9, #36]	; 0x24
   2e4e8:	str	r5, [r4, #4]
   2e4ec:	ldr	r4, [r9, #40]	; 0x28
   2e4f0:	ldr	r3, [r4, #16]
   2e4f4:	cmp	r3, #61	; 0x3d
   2e4f8:	beq	2e5a4 <__flatcc_fb_parse@@Base+0x2788>
   2e4fc:	ldr	r4, [r9, #40]	; 0x28
   2e500:	ldr	r3, [r4, #16]
   2e504:	cmp	r3, #44	; 0x2c
   2e508:	bne	2e5cc <__flatcc_fb_parse@@Base+0x27b0>
   2e50c:	mov	r0, r9
   2e510:	bl	2a1d4 <__flatcc_fb_default_error_out@@Base+0x110>
   2e514:	cmp	r4, #0
   2e518:	beq	2e5cc <__flatcc_fb_parse@@Base+0x27b0>
   2e51c:	ldr	r3, [r9, #40]	; 0x28
   2e520:	ldr	r3, [r3, #16]
   2e524:	cmp	r3, #125	; 0x7d
   2e528:	beq	2e5cc <__flatcc_fb_parse@@Base+0x27b0>
   2e52c:	str	r6, [r9, #36]	; 0x24
   2e530:	ldr	r5, [r9, #40]	; 0x28
   2e534:	ldr	r3, [r5, #16]
   2e538:	cmp	r3, #9
   2e53c:	bne	2e46c <__flatcc_fb_parse@@Base+0x2650>
   2e540:	mov	r0, r9
   2e544:	bl	2a1d4 <__flatcc_fb_default_error_out@@Base+0x110>
   2e548:	cmp	r5, #0
   2e54c:	beq	2e480 <__flatcc_fb_parse@@Base+0x2664>
   2e550:	ldr	r3, [r9, #108]	; 0x6c
   2e554:	cmp	r3, #9
   2e558:	bgt	2e480 <__flatcc_fb_parse@@Base+0x2664>
   2e55c:	ldr	r4, [r9, #52]	; 0x34
   2e560:	add	r2, r4, #128	; 0x80
   2e564:	ldr	r3, [r9, #44]	; 0x2c
   2e568:	cmp	r2, r3
   2e56c:	bls	2e4b4 <__flatcc_fb_parse@@Base+0x2698>
   2e570:	mov	r1, #1
   2e574:	mov	r0, #65536	; 0x10000
   2e578:	bl	13fa4 <calloc@plt>
   2e57c:	cmp	r0, #0
   2e580:	beq	2e494 <__flatcc_fb_parse@@Base+0x2678>
   2e584:	ldr	r3, [r9, #48]	; 0x30
   2e588:	str	r3, [r0]
   2e58c:	str	r0, [r9, #48]	; 0x30
   2e590:	add	r4, r0, #16
   2e594:	str	r4, [r9, #52]	; 0x34
   2e598:	add	r0, r0, #65536	; 0x10000
   2e59c:	str	r0, [r9, #44]	; 0x2c
   2e5a0:	b	2e4b4 <__flatcc_fb_parse@@Base+0x2698>
   2e5a4:	mov	r0, r9
   2e5a8:	bl	2a1d4 <__flatcc_fb_default_error_out@@Base+0x110>
   2e5ac:	cmp	r4, #0
   2e5b0:	beq	2e4fc <__flatcc_fb_parse@@Base+0x26e0>
   2e5b4:	ldr	r3, [pc, #1728]	; 2ec7c <__flatcc_fb_parse@@Base+0x2e60>
   2e5b8:	mov	r2, r6
   2e5bc:	add	r1, r8, #48	; 0x30
   2e5c0:	mov	r0, r9
   2e5c4:	bl	2aba8 <__flatcc_error_report@@Base+0x790>
   2e5c8:	b	2e4fc <__flatcc_fb_parse@@Base+0x26e0>
   2e5cc:	ldr	r3, [sp, #12]
   2e5d0:	ldr	r2, [pc, #1704]	; 2ec80 <__flatcc_fb_parse@@Base+0x2e64>
   2e5d4:	mov	r1, #125	; 0x7d
   2e5d8:	mov	r0, r9
   2e5dc:	bl	2a780 <__flatcc_error_report@@Base+0x368>
   2e5e0:	add	r0, r7, #20
   2e5e4:	bl	2a090 <__flatcc_fb_read_file@@Base+0xf0>
   2e5e8:	b	2de4c <__flatcc_fb_parse@@Base+0x2030>
   2e5ec:	mov	r0, r9
   2e5f0:	bl	2a1d4 <__flatcc_fb_default_error_out@@Base+0x110>
   2e5f4:	ldr	r4, [r9, #52]	; 0x34
   2e5f8:	add	r2, r4, #128	; 0x80
   2e5fc:	ldr	r3, [r9, #44]	; 0x2c
   2e600:	cmp	r2, r3
   2e604:	bhi	2e6d4 <__flatcc_fb_parse@@Base+0x28b8>
   2e608:	ldr	r3, [r9, #52]	; 0x34
   2e60c:	add	r3, r3, #128	; 0x80
   2e610:	str	r3, [r9, #52]	; 0x34
   2e614:	mov	r8, r4
   2e618:	ldr	r3, [r9, #392]	; 0x188
   2e61c:	str	r3, [r4]
   2e620:	mov	r3, #4
   2e624:	strh	r3, [r4, #8]
   2e628:	str	r4, [r9, #392]	; 0x188
   2e62c:	ldr	r3, [r9, #544]	; 0x220
   2e630:	str	r3, [r4, #12]
   2e634:	add	r3, r9, #36	; 0x24
   2e638:	str	r3, [sp, #8]
   2e63c:	mov	r0, r3
   2e640:	bl	2a090 <__flatcc_fb_read_file@@Base+0xf0>
   2e644:	ldr	r3, [r9, #36]	; 0x24
   2e648:	str	r3, [r4, #32]
   2e64c:	mov	r3, #0
   2e650:	str	r3, [r9, #36]	; 0x24
   2e654:	ldr	r5, [r9, #40]	; 0x28
   2e658:	ldr	r3, [r5, #16]
   2e65c:	cmp	r3, #9
   2e660:	bne	2e728 <__flatcc_fb_parse@@Base+0x290c>
   2e664:	mov	r0, r9
   2e668:	bl	2a1d4 <__flatcc_fb_default_error_out@@Base+0x110>
   2e66c:	str	r5, [r4, #4]
   2e670:	cmp	r5, #0
   2e674:	beq	2e744 <__flatcc_fb_parse@@Base+0x2928>
   2e678:	mov	r0, r9
   2e67c:	bl	2b250 <__flatcc_error_report@@Base+0xe38>
   2e680:	str	r0, [r4, #28]
   2e684:	ldr	r3, [r9, #40]	; 0x28
   2e688:	mov	r4, r3
   2e68c:	str	r3, [sp, #12]
   2e690:	ldr	r3, [r3, #16]
   2e694:	cmp	r3, #123	; 0x7b
   2e698:	bne	2e798 <__flatcc_fb_parse@@Base+0x297c>
   2e69c:	mov	r0, r9
   2e6a0:	bl	2a1d4 <__flatcc_fb_default_error_out@@Base+0x110>
   2e6a4:	cmp	r4, #0
   2e6a8:	beq	2e744 <__flatcc_fb_parse@@Base+0x2928>
   2e6ac:	ldr	r6, [r9, #40]	; 0x28
   2e6b0:	ldr	r3, [r6, #16]
   2e6b4:	cmp	r3, #9
   2e6b8:	bne	2e7b0 <__flatcc_fb_parse@@Base+0x2994>
   2e6bc:	ldr	r3, [r9, #108]	; 0x6c
   2e6c0:	cmp	r3, #9
   2e6c4:	bgt	2e764 <__flatcc_fb_parse@@Base+0x2948>
   2e6c8:	mov	sl, #5
   2e6cc:	mov	r7, #0
   2e6d0:	b	2e8a4 <__flatcc_fb_parse@@Base+0x2a88>
   2e6d4:	mov	r1, #1
   2e6d8:	mov	r0, #65536	; 0x10000
   2e6dc:	bl	13fa4 <calloc@plt>
   2e6e0:	cmp	r0, #0
   2e6e4:	beq	2e708 <__flatcc_fb_parse@@Base+0x28ec>
   2e6e8:	ldr	r3, [r9, #48]	; 0x30
   2e6ec:	str	r3, [r0]
   2e6f0:	str	r0, [r9, #48]	; 0x30
   2e6f4:	add	r4, r0, #16
   2e6f8:	str	r4, [r9, #52]	; 0x34
   2e6fc:	add	r0, r0, #65536	; 0x10000
   2e700:	str	r0, [r9, #44]	; 0x2c
   2e704:	b	2e608 <__flatcc_fb_parse@@Base+0x27ec>
   2e708:	ldr	r3, [pc, #1356]	; 2ec5c <__flatcc_fb_parse@@Base+0x2e40>
   2e70c:	ldr	r3, [r3]
   2e710:	mov	r2, #34	; 0x22
   2e714:	mov	r1, #1
   2e718:	ldr	r0, [pc, #1344]	; 2ec60 <__flatcc_fb_parse@@Base+0x2e44>
   2e71c:	bl	1401c <fwrite@plt>
   2e720:	mov	r0, #1
   2e724:	bl	14070 <exit@plt>
   2e728:	mov	r3, #0
   2e72c:	ldr	r2, [pc, #1360]	; 2ec84 <__flatcc_fb_parse@@Base+0x2e68>
   2e730:	mov	r1, r5
   2e734:	mov	r0, r9
   2e738:	bl	2a5dc <__flatcc_error_report@@Base+0x1c4>
   2e73c:	mov	r3, #0
   2e740:	str	r3, [r4, #4]
   2e744:	ldr	r3, [r9, #40]	; 0x28
   2e748:	ldr	r3, [r3, #16]
   2e74c:	cmp	r3, #0
   2e750:	beq	2de4c <__flatcc_fb_parse@@Base+0x2030>
   2e754:	cmp	r3, #59	; 0x3b
   2e758:	beq	2ea50 <__flatcc_fb_parse@@Base+0x2c34>
   2e75c:	cmp	r3, #125	; 0x7d
   2e760:	beq	2e78c <__flatcc_fb_parse@@Base+0x2970>
   2e764:	mov	r0, r9
   2e768:	bl	2a1d4 <__flatcc_fb_default_error_out@@Base+0x110>
   2e76c:	ldr	r3, [r9, #40]	; 0x28
   2e770:	ldr	r3, [r3, #16]
   2e774:	cmp	r3, #0
   2e778:	beq	2de4c <__flatcc_fb_parse@@Base+0x2030>
   2e77c:	cmp	r3, #59	; 0x3b
   2e780:	beq	2ea50 <__flatcc_fb_parse@@Base+0x2c34>
   2e784:	cmp	r3, #125	; 0x7d
   2e788:	bne	2e764 <__flatcc_fb_parse@@Base+0x2948>
   2e78c:	mov	r3, #0
   2e790:	str	r3, [r9, #36]	; 0x24
   2e794:	b	2de4c <__flatcc_fb_parse@@Base+0x2030>
   2e798:	mov	r3, #0
   2e79c:	ldr	r2, [pc, #1252]	; 2ec88 <__flatcc_fb_parse@@Base+0x2e6c>
   2e7a0:	ldr	r1, [sp, #12]
   2e7a4:	mov	r0, r9
   2e7a8:	bl	2a5dc <__flatcc_error_report@@Base+0x1c4>
   2e7ac:	b	2e744 <__flatcc_fb_parse@@Base+0x2928>
   2e7b0:	mov	r3, #0
   2e7b4:	ldr	r2, [pc, #1232]	; 2ec8c <__flatcc_fb_parse@@Base+0x2e70>
   2e7b8:	mov	r1, r6
   2e7bc:	mov	r0, r9
   2e7c0:	bl	2a5dc <__flatcc_error_report@@Base+0x1c4>
   2e7c4:	b	2e744 <__flatcc_fb_parse@@Base+0x2928>
   2e7c8:	mov	r1, #1
   2e7cc:	mov	r0, #65536	; 0x10000
   2e7d0:	bl	13fa4 <calloc@plt>
   2e7d4:	cmp	r0, #0
   2e7d8:	beq	2e7fc <__flatcc_fb_parse@@Base+0x29e0>
   2e7dc:	ldr	r3, [r9, #48]	; 0x30
   2e7e0:	str	r3, [r0]
   2e7e4:	str	r0, [r9, #48]	; 0x30
   2e7e8:	add	r5, r0, #16
   2e7ec:	str	r5, [r9, #52]	; 0x34
   2e7f0:	add	r0, r0, #65536	; 0x10000
   2e7f4:	str	r0, [r9, #44]	; 0x2c
   2e7f8:	b	2e8b8 <__flatcc_fb_parse@@Base+0x2a9c>
   2e7fc:	ldr	r3, [pc, #1112]	; 2ec5c <__flatcc_fb_parse@@Base+0x2e40>
   2e800:	ldr	r3, [r3]
   2e804:	mov	r2, #34	; 0x22
   2e808:	mov	r1, #1
   2e80c:	ldr	r0, [pc, #1100]	; 2ec60 <__flatcc_fb_parse@@Base+0x2e44>
   2e810:	bl	1401c <fwrite@plt>
   2e814:	mov	r0, #1
   2e818:	bl	14070 <exit@plt>
   2e81c:	mov	r3, r2
   2e820:	str	r3, [sp, #20]
   2e824:	ldr	r2, [r3]
   2e828:	cmp	r2, #0
   2e82c:	bne	2e81c <__flatcc_fb_parse@@Base+0x2a00>
   2e830:	ldr	r3, [r3, #4]
   2e834:	str	r3, [r4, #4]
   2e838:	ldr	r5, [r9, #40]	; 0x28
   2e83c:	ldr	r3, [r5, #16]
   2e840:	cmp	r3, #58	; 0x3a
   2e844:	beq	2e91c <__flatcc_fb_parse@@Base+0x2b00>
   2e848:	ldr	r5, [r9, #40]	; 0x28
   2e84c:	ldr	r3, [r5, #16]
   2e850:	cmp	r3, #61	; 0x3d
   2e854:	beq	2e960 <__flatcc_fb_parse@@Base+0x2b44>
   2e858:	ldr	r4, [r9, #40]	; 0x28
   2e85c:	ldr	r3, [r4, #16]
   2e860:	cmp	r3, #44	; 0x2c
   2e864:	bne	2e988 <__flatcc_fb_parse@@Base+0x2b6c>
   2e868:	mov	r0, r9
   2e86c:	bl	2a1d4 <__flatcc_fb_default_error_out@@Base+0x110>
   2e870:	cmp	r4, #0
   2e874:	beq	2e988 <__flatcc_fb_parse@@Base+0x2b6c>
   2e878:	ldr	r6, [r9, #40]	; 0x28
   2e87c:	ldr	r3, [r6, #16]
   2e880:	cmp	r3, #125	; 0x7d
   2e884:	beq	2e988 <__flatcc_fb_parse@@Base+0x2b6c>
   2e888:	str	r7, [r9, #36]	; 0x24
   2e88c:	ldr	r3, [r6, #16]
   2e890:	cmp	r3, #9
   2e894:	bne	2e7b0 <__flatcc_fb_parse@@Base+0x2994>
   2e898:	ldr	r3, [r9, #108]	; 0x6c
   2e89c:	cmp	r3, #9
   2e8a0:	bgt	2e764 <__flatcc_fb_parse@@Base+0x2948>
   2e8a4:	ldr	r5, [r9, #52]	; 0x34
   2e8a8:	add	r2, r5, #128	; 0x80
   2e8ac:	ldr	r3, [r9, #44]	; 0x2c
   2e8b0:	cmp	r2, r3
   2e8b4:	bhi	2e7c8 <__flatcc_fb_parse@@Base+0x29ac>
   2e8b8:	ldr	r3, [r9, #52]	; 0x34
   2e8bc:	add	r3, r3, #128	; 0x80
   2e8c0:	str	r3, [r9, #52]	; 0x34
   2e8c4:	mov	r4, r5
   2e8c8:	ldr	r3, [r8, #20]
   2e8cc:	str	r3, [r5]
   2e8d0:	strh	sl, [r5, #8]
   2e8d4:	str	r5, [r8, #20]
   2e8d8:	ldr	r0, [sp, #8]
   2e8dc:	bl	2a090 <__flatcc_fb_read_file@@Base+0xf0>
   2e8e0:	ldr	r3, [r9, #36]	; 0x24
   2e8e4:	str	r3, [r5, #68]	; 0x44
   2e8e8:	str	r7, [r9, #36]	; 0x24
   2e8ec:	add	r1, sp, #20
   2e8f0:	mov	r0, r9
   2e8f4:	bl	2a5fc <__flatcc_error_report@@Base+0x1e4>
   2e8f8:	ldr	r2, [sp, #20]
   2e8fc:	str	r2, [r5, #16]
   2e900:	mov	r3, #12
   2e904:	strh	r3, [r5, #24]
   2e908:	ldr	r3, [r2]
   2e90c:	cmp	r3, #0
   2e910:	bne	2e820 <__flatcc_fb_parse@@Base+0x2a04>
   2e914:	mov	r3, r2
   2e918:	b	2e830 <__flatcc_fb_parse@@Base+0x2a14>
   2e91c:	mov	r0, r9
   2e920:	bl	2a1d4 <__flatcc_fb_default_error_out@@Base+0x110>
   2e924:	cmp	r5, #0
   2e928:	beq	2e848 <__flatcc_fb_parse@@Base+0x2a2c>
   2e92c:	ldr	r3, [r4, #16]
   2e930:	ldr	r3, [r3]
   2e934:	cmp	r3, #0
   2e938:	beq	2e950 <__flatcc_fb_parse@@Base+0x2b34>
   2e93c:	mov	r3, r7
   2e940:	ldr	r2, [pc, #840]	; 2ec90 <__flatcc_fb_parse@@Base+0x2e74>
   2e944:	mov	r1, r6
   2e948:	mov	r0, r9
   2e94c:	bl	2a5dc <__flatcc_error_report@@Base+0x1c4>
   2e950:	add	r1, r4, #16
   2e954:	mov	r0, r9
   2e958:	bl	2a7c0 <__flatcc_error_report@@Base+0x3a8>
   2e95c:	b	2e848 <__flatcc_fb_parse@@Base+0x2a2c>
   2e960:	mov	r0, r9
   2e964:	bl	2a1d4 <__flatcc_fb_default_error_out@@Base+0x110>
   2e968:	cmp	r5, #0
   2e96c:	beq	2e858 <__flatcc_fb_parse@@Base+0x2a3c>
   2e970:	ldr	r3, [pc, #772]	; 2ec7c <__flatcc_fb_parse@@Base+0x2e60>
   2e974:	mov	r2, r7
   2e978:	add	r1, r4, #48	; 0x30
   2e97c:	mov	r0, r9
   2e980:	bl	2aba8 <__flatcc_error_report@@Base+0x790>
   2e984:	b	2e858 <__flatcc_fb_parse@@Base+0x2a3c>
   2e988:	ldr	r3, [sp, #12]
   2e98c:	ldr	r2, [pc, #768]	; 2ec94 <__flatcc_fb_parse@@Base+0x2e78>
   2e990:	mov	r1, #125	; 0x7d
   2e994:	mov	r0, r9
   2e998:	bl	2a780 <__flatcc_error_report@@Base+0x368>
   2e99c:	add	r0, r8, #20
   2e9a0:	bl	2a090 <__flatcc_fb_read_file@@Base+0xf0>
   2e9a4:	ldr	r4, [r9, #52]	; 0x34
   2e9a8:	add	r2, r4, #128	; 0x80
   2e9ac:	ldr	r3, [r9, #44]	; 0x2c
   2e9b0:	cmp	r2, r3
   2e9b4:	bhi	2e9fc <__flatcc_fb_parse@@Base+0x2be0>
   2e9b8:	ldr	r3, [r9, #52]	; 0x34
   2e9bc:	add	r3, r3, #128	; 0x80
   2e9c0:	str	r3, [r9, #52]	; 0x34
   2e9c4:	ldr	r3, [r8, #20]
   2e9c8:	str	r3, [r4]
   2e9cc:	mov	r3, #5
   2e9d0:	strh	r3, [r4, #8]
   2e9d4:	str	r4, [r8, #20]
   2e9d8:	ldr	r0, [sp, #8]
   2e9dc:	bl	2a090 <__flatcc_fb_read_file@@Base+0xf0>
   2e9e0:	ldr	r3, [r9, #36]	; 0x24
   2e9e4:	str	r3, [r4, #68]	; 0x44
   2e9e8:	mov	r3, #0
   2e9ec:	str	r3, [r9, #36]	; 0x24
   2e9f0:	add	r3, r9, #68	; 0x44
   2e9f4:	str	r3, [r4, #4]
   2e9f8:	b	2de4c <__flatcc_fb_parse@@Base+0x2030>
   2e9fc:	mov	r1, #1
   2ea00:	mov	r0, #65536	; 0x10000
   2ea04:	bl	13fa4 <calloc@plt>
   2ea08:	cmp	r0, #0
   2ea0c:	beq	2ea30 <__flatcc_fb_parse@@Base+0x2c14>
   2ea10:	ldr	r3, [r9, #48]	; 0x30
   2ea14:	str	r3, [r0]
   2ea18:	str	r0, [r9, #48]	; 0x30
   2ea1c:	add	r4, r0, #16
   2ea20:	str	r4, [r9, #52]	; 0x34
   2ea24:	add	r0, r0, #65536	; 0x10000
   2ea28:	str	r0, [r9, #44]	; 0x2c
   2ea2c:	b	2e9b8 <__flatcc_fb_parse@@Base+0x2b9c>
   2ea30:	ldr	r3, [pc, #548]	; 2ec5c <__flatcc_fb_parse@@Base+0x2e40>
   2ea34:	ldr	r3, [r3]
   2ea38:	mov	r2, #34	; 0x22
   2ea3c:	mov	r1, #1
   2ea40:	ldr	r0, [pc, #536]	; 2ec60 <__flatcc_fb_parse@@Base+0x2e44>
   2ea44:	bl	1401c <fwrite@plt>
   2ea48:	mov	r0, #1
   2ea4c:	bl	14070 <exit@plt>
   2ea50:	mov	r0, r9
   2ea54:	bl	2a1d4 <__flatcc_fb_default_error_out@@Base+0x110>
   2ea58:	mov	r3, #0
   2ea5c:	str	r3, [r9, #36]	; 0x24
   2ea60:	b	2de4c <__flatcc_fb_parse@@Base+0x2030>
   2ea64:	mov	r3, #0
   2ea68:	ldr	r2, [pc, #552]	; 2ec98 <__flatcc_fb_parse@@Base+0x2e7c>
   2ea6c:	mov	r0, r9
   2ea70:	bl	2a5dc <__flatcc_error_report@@Base+0x1c4>
   2ea74:	b	2de4c <__flatcc_fb_parse@@Base+0x2030>
   2ea78:	mov	r3, #1
   2ea7c:	str	r3, [sp, #4]
   2ea80:	ldr	r3, [pc, #532]	; 2ec9c <__flatcc_fb_parse@@Base+0x2e80>
   2ea84:	str	r3, [sp]
   2ea88:	mov	r3, #0
   2ea8c:	ldr	r2, [pc, #524]	; 2eca0 <__flatcc_fb_parse@@Base+0x2e84>
   2ea90:	mov	r0, r9
   2ea94:	bl	2a418 <__flatcc_error_report@@Base>
   2ea98:	b	2de4c <__flatcc_fb_parse@@Base+0x2030>
   2ea9c:	mov	r3, #5
   2eaa0:	str	r3, [sp, #4]
   2eaa4:	ldr	r3, [pc, #504]	; 2eca4 <__flatcc_fb_parse@@Base+0x2e88>
   2eaa8:	str	r3, [sp]
   2eaac:	mov	r3, #0
   2eab0:	ldr	r2, [pc, #496]	; 2eca8 <__flatcc_fb_parse@@Base+0x2e8c>
   2eab4:	mov	r0, r9
   2eab8:	bl	2a418 <__flatcc_error_report@@Base>
   2eabc:	b	2de4c <__flatcc_fb_parse@@Base+0x2030>
   2eac0:	ldr	r3, [r9, #108]	; 0x6c
   2eac4:	cmp	r3, #0
   2eac8:	bne	2eb18 <__flatcc_fb_parse@@Base+0x2cfc>
   2eacc:	ldr	r2, [pc, #472]	; 2ecac <__flatcc_fb_parse@@Base+0x2e90>
   2ead0:	mov	r1, fp
   2ead4:	mov	r0, r9
   2ead8:	bl	2a5dc <__flatcc_error_report@@Base+0x1c4>
   2eadc:	b	2eb18 <__flatcc_fb_parse@@Base+0x2cfc>
   2eae0:	ldr	r3, [r9, #356]	; 0x164
   2eae4:	cmp	r3, #0
   2eae8:	beq	2eb0c <__flatcc_fb_parse@@Base+0x2cf0>
   2eaec:	mov	r1, #0
   2eaf0:	b	2eaf8 <__flatcc_fb_parse@@Base+0x2cdc>
   2eaf4:	mov	r3, r2
   2eaf8:	ldr	r2, [r3]
   2eafc:	str	r1, [r3]
   2eb00:	mov	r1, r3
   2eb04:	cmp	r2, #0
   2eb08:	bne	2eaf4 <__flatcc_fb_parse@@Base+0x2cd8>
   2eb0c:	str	r3, [r9, #356]	; 0x164
   2eb10:	add	r0, r9, #392	; 0x188
   2eb14:	bl	2a090 <__flatcc_fb_read_file@@Base+0xf0>
   2eb18:	ldr	r0, [r9, #108]	; 0x6c
   2eb1c:	add	sp, sp, #28
   2eb20:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2eb24:	cmp	r6, r7
   2eb28:	beq	2c0d4 <__flatcc_fb_parse@@Base+0x2b8>
   2eb2c:	ldr	r3, [r9, #32]
   2eb30:	cmp	r3, #0
   2eb34:	beq	2c0c8 <__flatcc_fb_parse@@Base+0x2ac>
   2eb38:	mov	r4, r6
   2eb3c:	mov	r3, r4
   2eb40:	mov	r2, r7
   2eb44:	mov	r1, r8
   2eb48:	mov	r0, r9
   2eb4c:	bl	2a0e4 <__flatcc_fb_default_error_out@@Base+0x20>
   2eb50:	cmp	r6, r4
   2eb54:	beq	2c0c8 <__flatcc_fb_parse@@Base+0x2ac>
   2eb58:	ldrb	r3, [r4]
   2eb5c:	cmp	r3, #0
   2eb60:	beq	2c0d0 <__flatcc_fb_parse@@Base+0x2b4>
   2eb64:	cmp	r3, #13
   2eb68:	cmpne	r3, #10
   2eb6c:	beq	2c160 <__flatcc_fb_parse@@Base+0x344>
   2eb70:	add	r7, r5, #2
   2eb74:	cmp	r3, #9
   2eb78:	cmpne	r3, #32
   2eb7c:	bne	2c184 <__flatcc_fb_parse@@Base+0x368>
   2eb80:	ldr	r3, [r9, #32]
   2eb84:	cmp	r3, #0
   2eb88:	bne	2c16c <__flatcc_fb_parse@@Base+0x350>
   2eb8c:	sub	r5, r7, #1
   2eb90:	b	2c094 <__flatcc_fb_parse@@Base+0x278>
   2eb94:	cmp	r5, r7
   2eb98:	beq	2ebe0 <__flatcc_fb_parse@@Base+0x2dc4>
   2eb9c:	ldr	r3, [r9, #32]
   2eba0:	cmp	r3, #0
   2eba4:	beq	2ebe0 <__flatcc_fb_parse@@Base+0x2dc4>
   2eba8:	b	2ebc4 <__flatcc_fb_parse@@Base+0x2da8>
   2ebac:	cmp	r6, r5
   2ebb0:	beq	2ec3c <__flatcc_fb_parse@@Base+0x2e20>
   2ebb4:	ldr	r3, [r9, #32]
   2ebb8:	cmp	r3, #0
   2ebbc:	beq	2c1c0 <__flatcc_fb_parse@@Base+0x3a4>
   2ebc0:	mov	r7, r6
   2ebc4:	mov	r3, r7
   2ebc8:	mov	r2, r5
   2ebcc:	mov	r1, r4
   2ebd0:	mov	r0, r9
   2ebd4:	bl	2a0e4 <__flatcc_fb_default_error_out@@Base+0x20>
   2ebd8:	cmp	r6, r7
   2ebdc:	beq	2c1c0 <__flatcc_fb_parse@@Base+0x3a4>
   2ebe0:	ldrb	r3, [r7]
   2ebe4:	cmp	r3, #0
   2ebe8:	beq	2ec40 <__flatcc_fb_parse@@Base+0x2e24>
   2ebec:	cmp	r3, #10
   2ebf0:	beq	2c1c8 <__flatcc_fb_parse@@Base+0x3ac>
   2ebf4:	cmp	r3, #13
   2ebf8:	beq	2c230 <__flatcc_fb_parse@@Base+0x414>
   2ebfc:	cmp	r3, #127	; 0x7f
   2ec00:	cmpne	r3, #31
   2ec04:	bhi	2c274 <__flatcc_fb_parse@@Base+0x458>
   2ec08:	add	r5, r7, #1
   2ec0c:	cmp	r3, #9
   2ec10:	cmpne	r3, #32
   2ec14:	bne	2c25c <__flatcc_fb_parse@@Base+0x440>
   2ec18:	ldr	r3, [r9, #32]
   2ec1c:	cmp	r3, #0
   2ec20:	beq	2c1f0 <__flatcc_fb_parse@@Base+0x3d4>
   2ec24:	mov	r3, r5
   2ec28:	mov	r2, r7
   2ec2c:	mov	r1, r4
   2ec30:	mov	r0, r9
   2ec34:	bl	2a0e4 <__flatcc_fb_default_error_out@@Base+0x20>
   2ec38:	b	2c1f0 <__flatcc_fb_parse@@Base+0x3d4>
   2ec3c:	mov	r7, r5
   2ec40:	mov	r3, r7
   2ec44:	mov	r2, r7
   2ec48:	mov	r1, #27
   2ec4c:	mov	r0, r9
   2ec50:	bl	2a0e4 <__flatcc_fb_default_error_out@@Base+0x20>
   2ec54:	b	2c0e8 <__flatcc_fb_parse@@Base+0x2cc>
   2ec58:	andeq	r4, r5, r0, lsr #4
   2ec5c:	andeq	r7, r6, r8, lsr #1
   2ec60:	strdeq	ip, [r3], -ip	; <UNPREDICTABLE>
   2ec64:			; <UNDEFINED> instruction: 0xfffffc29
   2ec68:			; <UNDEFINED> instruction: 0xfffffc39
   2ec6c:	andeq	r4, r5, r8, lsr r2
   2ec70:	andeq	r4, r5, r0, ror #4
   2ec74:	andeq	r4, r5, r8, ror r2
   2ec78:	muleq	r5, r8, r2
   2ec7c:			; <UNDEFINED> instruction: 0x000542b4
   2ec80:	ldrdeq	r4, [r5], -r0
   2ec84:	strdeq	r4, [r5], -r4	; <UNPREDICTABLE>
   2ec88:	andeq	r4, r5, ip, lsl r3
   2ec8c:	andeq	r4, r5, ip, lsr r3
   2ec90:	andeq	r4, r5, r8, asr r3
   2ec94:	muleq	r5, r4, r3
   2ec98:	strdeq	r4, [r5], -r0
   2ec9c:	andeq	r3, r5, r8, asr #21
   2eca0:	andeq	r4, r5, r4, asr r4
   2eca4:	andeq	r4, r5, r8, asr #9
   2eca8:			; <UNDEFINED> instruction: 0x000544b0
   2ecac:	strdeq	r4, [r5], -r8

0002ecb0 <__flatcc_fb_clear_parser@@Base>:
   2ecb0:	push	{r4, r5, r6, lr}
   2ecb4:	mov	r5, r0
   2ecb8:	ldr	r4, [r0, #392]	; 0x188
   2ecbc:	cmp	r4, #0
   2ecc0:	bne	2ed9c <__flatcc_fb_clear_parser@@Base+0xec>
   2ecc4:	add	r0, r5, #448	; 0x1c0
   2ecc8:	bl	29988 <fb_schema_table_clear@@Base>
   2eccc:	add	r0, r5, #432	; 0x1b0
   2ecd0:	bl	39ed4 <fb_name_table_clear@@Base>
   2ecd4:	add	r0, r5, #524	; 0x20c
   2ecd8:	bl	27da4 <ptr_set_clear@@Base>
   2ecdc:	ldr	r0, [r5, #112]	; 0x70
   2ece0:	cmp	r0, #0
   2ece4:	beq	2ecec <__flatcc_fb_clear_parser@@Base+0x3c>
   2ece8:	bl	13fd4 <free@plt>
   2ecec:	ldr	r0, [r5, #20]
   2ecf0:	cmp	r0, #0
   2ecf4:	beq	2ecfc <__flatcc_fb_clear_parser@@Base+0x4c>
   2ecf8:	bl	13fd4 <free@plt>
   2ecfc:	ldr	r0, [r5, #512]	; 0x200
   2ed00:	cmp	r0, #0
   2ed04:	beq	2ed0c <__flatcc_fb_clear_parser@@Base+0x5c>
   2ed08:	bl	13fd4 <free@plt>
   2ed0c:	ldr	r0, [r5, #516]	; 0x204
   2ed10:	cmp	r0, #0
   2ed14:	beq	2ed1c <__flatcc_fb_clear_parser@@Base+0x6c>
   2ed18:	bl	13fd4 <free@plt>
   2ed1c:	ldr	r0, [r5, #520]	; 0x208
   2ed20:	cmp	r0, #0
   2ed24:	beq	2ed2c <__flatcc_fb_clear_parser@@Base+0x7c>
   2ed28:	bl	13fd4 <free@plt>
   2ed2c:	ldr	r0, [r5, #548]	; 0x224
   2ed30:	cmp	r0, #0
   2ed34:	beq	2ed3c <__flatcc_fb_clear_parser@@Base+0x8c>
   2ed38:	bl	13fd4 <free@plt>
   2ed3c:	mov	r2, #0
   2ed40:	ldr	r1, [pc, #116]	; 2edbc <__flatcc_fb_clear_parser@@Base+0x10c>
   2ed44:	add	r0, r5, #416	; 0x1a0
   2ed48:	bl	29350 <fb_scope_table_destroy@@Base>
   2ed4c:	ldr	r0, [r5, #48]	; 0x30
   2ed50:	cmp	r0, #0
   2ed54:	beq	2ed6c <__flatcc_fb_clear_parser@@Base+0xbc>
   2ed58:	ldr	r4, [r0]
   2ed5c:	bl	13fd4 <free@plt>
   2ed60:	mov	r0, r4
   2ed64:	cmp	r4, #0
   2ed68:	bne	2ed58 <__flatcc_fb_clear_parser@@Base+0xa8>
   2ed6c:	ldr	r0, [r5, #16]
   2ed70:	cmp	r0, #0
   2ed74:	beq	2ed7c <__flatcc_fb_clear_parser@@Base+0xcc>
   2ed78:	bl	13fd4 <free@plt>
   2ed7c:	mov	r2, #560	; 0x230
   2ed80:	mov	r1, #0
   2ed84:	mov	r0, r5
   2ed88:	bl	140ac <memset@plt>
   2ed8c:	pop	{r4, r5, r6, pc}
   2ed90:	ldr	r4, [r4]
   2ed94:	cmp	r4, #0
   2ed98:	beq	2ecc4 <__flatcc_fb_clear_parser@@Base+0x14>
   2ed9c:	ldrh	r3, [r4, #8]
   2eda0:	cmp	r3, #4
   2eda4:	bhi	2ed90 <__flatcc_fb_clear_parser@@Base+0xe0>
   2eda8:	add	r0, r4, #56	; 0x38
   2edac:	bl	283ec <fb_symbol_table_clear@@Base>
   2edb0:	add	r0, r4, #72	; 0x48
   2edb4:	bl	3a648 <fb_value_set_clear@@Base>
   2edb8:	b	2ed90 <__flatcc_fb_clear_parser@@Base+0xe0>
   2edbc:	andeq	sl, r2, r4, asr #3
   2edc0:	ldr	r3, [r0, #16]
   2edc4:	add	r3, r3, #996	; 0x3e4
   2edc8:	add	r3, r3, #3
   2edcc:	cmp	r3, #27
   2edd0:	ldrls	pc, [pc, r3, lsl #2]
   2edd4:	b	2ee98 <__flatcc_fb_clear_parser@@Base+0x1e8>
   2edd8:	andeq	lr, r2, r0, ror #28
   2eddc:	andeq	lr, r2, r0, lsl #29
   2ede0:	muleq	r2, r8, lr
   2ede4:	muleq	r2, r0, lr
   2ede8:	andeq	lr, r2, r8, lsl #29
   2edec:	andeq	lr, r2, r0, ror lr
   2edf0:	andeq	lr, r2, r0, lsl #29
   2edf4:	andeq	lr, r2, r8, ror lr
   2edf8:	andeq	lr, r2, r0, ror lr
   2edfc:	andeq	lr, r2, r8, ror #28
   2ee00:	andeq	lr, r2, r8, ror #28
   2ee04:	muleq	r2, r8, lr
   2ee08:	andeq	lr, r2, r8, asr #28
   2ee0c:	muleq	r2, r8, lr
   2ee10:	muleq	r2, r0, lr
   2ee14:	andeq	lr, r2, r8, ror lr
   2ee18:	muleq	r2, r8, lr
   2ee1c:	andeq	lr, r2, r8, asr lr
   2ee20:	andeq	lr, r2, r8, asr lr
   2ee24:	andeq	lr, r2, r0, asr lr
   2ee28:	andeq	lr, r2, r8, asr #28
   2ee2c:	andeq	lr, r2, r0, lsr #29
   2ee30:	andeq	lr, r2, r0, lsr #29
   2ee34:	muleq	r2, r8, lr
   2ee38:	andeq	lr, r2, r8, lsl #29
   2ee3c:	muleq	r2, r8, lr
   2ee40:	muleq	r2, r8, lr
   2ee44:	andeq	lr, r2, r0, asr lr
   2ee48:	mov	r0, #2
   2ee4c:	bx	lr
   2ee50:	mov	r0, #3
   2ee54:	bx	lr
   2ee58:	mov	r0, #4
   2ee5c:	bx	lr
   2ee60:	mov	r0, #5
   2ee64:	bx	lr
   2ee68:	mov	r0, #6
   2ee6c:	bx	lr
   2ee70:	mov	r0, #7
   2ee74:	bx	lr
   2ee78:	mov	r0, #8
   2ee7c:	bx	lr
   2ee80:	mov	r0, #9
   2ee84:	bx	lr
   2ee88:	mov	r0, #10
   2ee8c:	bx	lr
   2ee90:	mov	r0, #11
   2ee94:	bx	lr
   2ee98:	mov	r0, #0
   2ee9c:	bx	lr
   2eea0:	mov	r0, #1
   2eea4:	bx	lr
   2eea8:	push	{lr}		; (str lr, [sp, #-4]!)
   2eeac:	sub	sp, sp, #12
   2eeb0:	mov	ip, #0
   2eeb4:	str	ip, [sp, #4]
   2eeb8:	str	ip, [sp]
   2eebc:	bl	2a418 <__flatcc_error_report@@Base>
   2eec0:	add	sp, sp, #12
   2eec4:	pop	{pc}		; (ldr pc, [sp], #4)
   2eec8:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2eecc:	ldrh	fp, [r1, #8]
   2eed0:	cmp	fp, #1
   2eed4:	bne	2ef58 <__flatcc_fb_clear_parser@@Base+0x2a8>
   2eed8:	mov	sl, r0
   2eedc:	mov	r5, r1
   2eee0:	ldrh	r3, [r1, #10]
   2eee4:	tst	r3, #1
   2eee8:	bne	2ef6c <__flatcc_fb_clear_parser@@Base+0x2bc>
   2eeec:	tst	r3, #2
   2eef0:	bne	2f2e4 <__flatcc_fb_clear_parser@@Base+0x634>
   2eef4:	ldr	r2, [r1, #120]	; 0x78
   2eef8:	cmp	r2, #0
   2eefc:	bne	2ef80 <__flatcc_fb_clear_parser@@Base+0x2d0>
   2ef00:	orr	r3, r3, #1
   2ef04:	strh	r3, [r1, #10]
   2ef08:	ldr	r4, [r1, #20]
   2ef0c:	cmp	r4, #0
   2ef10:	beq	2f20c <__flatcc_fb_clear_parser@@Base+0x55c>
   2ef14:	ldr	r3, [r0, #116]	; 0x74
   2ef18:	cmp	r3, #99	; 0x63
   2ef1c:	bgt	2f0d8 <__flatcc_fb_clear_parser@@Base+0x428>
   2ef20:	ldrh	r3, [r4, #24]
   2ef24:	cmp	r3, #8
   2ef28:	beq	2ef94 <__flatcc_fb_clear_parser@@Base+0x2e4>
   2ef2c:	cmp	r3, #14
   2ef30:	beq	2f110 <__flatcc_fb_clear_parser@@Base+0x460>
   2ef34:	cmp	r3, #1
   2ef38:	beq	2f2ec <__flatcc_fb_clear_parser@@Base+0x63c>
   2ef3c:	mov	r3, #0
   2ef40:	ldr	r2, [pc, #980]	; 2f31c <__flatcc_fb_clear_parser@@Base+0x66c>
   2ef44:	ldr	r1, [r4, #4]
   2ef48:	mov	r0, sl
   2ef4c:	bl	2eea8 <__flatcc_fb_clear_parser@@Base+0x1f8>
   2ef50:	mvn	r0, #0
   2ef54:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2ef58:	ldr	r3, [pc, #960]	; 2f320 <__flatcc_fb_clear_parser@@Base+0x670>
   2ef5c:	ldr	r2, [pc, #960]	; 2f324 <__flatcc_fb_clear_parser@@Base+0x674>
   2ef60:	ldr	r1, [pc, #960]	; 2f328 <__flatcc_fb_clear_parser@@Base+0x678>
   2ef64:	ldr	r0, [pc, #960]	; 2f32c <__flatcc_fb_clear_parser@@Base+0x67c>
   2ef68:	bl	14148 <__assert_fail@plt>
   2ef6c:	ldr	r3, [pc, #940]	; 2f320 <__flatcc_fb_clear_parser@@Base+0x670>
   2ef70:	mov	r2, #504	; 0x1f8
   2ef74:	ldr	r1, [pc, #940]	; 2f328 <__flatcc_fb_clear_parser@@Base+0x678>
   2ef78:	ldr	r0, [pc, #944]	; 2f330 <__flatcc_fb_clear_parser@@Base+0x680>
   2ef7c:	bl	14148 <__assert_fail@plt>
   2ef80:	ldr	r3, [pc, #920]	; 2f320 <__flatcc_fb_clear_parser@@Base+0x670>
   2ef84:	mov	r2, #508	; 0x1fc
   2ef88:	ldr	r1, [pc, #920]	; 2f328 <__flatcc_fb_clear_parser@@Base+0x678>
   2ef8c:	ldr	r0, [pc, #928]	; 2f334 <__flatcc_fb_clear_parser@@Base+0x684>
   2ef90:	bl	14148 <__assert_fail@plt>
   2ef94:	ldr	r6, [r4, #16]
   2ef98:	mov	r0, r6
   2ef9c:	bl	2edc0 <__flatcc_fb_clear_parser@@Base+0x110>
   2efa0:	str	r0, [r4, #16]
   2efa4:	ldr	r3, [pc, #884]	; 2f320 <__flatcc_fb_clear_parser@@Base+0x670>
   2efa8:	add	r0, r3, r0, lsl #2
   2efac:	ldr	r1, [r0, #16]
   2efb0:	mov	r2, r1
   2efb4:	mov	r3, #0
   2efb8:	orrs	r0, r2, r3
   2efbc:	beq	2f0f4 <__flatcc_fb_clear_parser@@Base+0x444>
   2efc0:	strh	r1, [r4, #74]	; 0x4a
   2efc4:	strd	r2, [r4, #88]	; 0x58
   2efc8:	ldrd	r8, [r5, #112]	; 0x70
   2efcc:	ldrh	r0, [r4, #74]	; 0x4a
   2efd0:	sub	r3, r0, #1
   2efd4:	uxth	r3, r3
   2efd8:	cmp	r3, #255	; 0xff
   2efdc:	bhi	2f2f4 <__flatcc_fb_clear_parser@@Base+0x644>
   2efe0:	uxth	r0, r0
   2efe4:	mov	r1, #0
   2efe8:	cmp	r1, #0
   2efec:	cmpeq	r0, #1
   2eff0:	beq	2f024 <__flatcc_fb_clear_parser@@Base+0x374>
   2eff4:	mov	r6, #1
   2eff8:	mov	r7, #0
   2effc:	adds	r2, r6, r6
   2f000:	adc	r3, r7, r7
   2f004:	mov	r6, r2
   2f008:	mov	r7, r3
   2f00c:	cmp	r1, r3
   2f010:	cmpeq	r0, r2
   2f014:	bcc	2f2f4 <__flatcc_fb_clear_parser@@Base+0x644>
   2f018:	cmp	r1, r3
   2f01c:	cmpeq	r0, r2
   2f020:	bne	2effc <__flatcc_fb_clear_parser@@Base+0x34c>
   2f024:	subs	r8, r8, #1
   2f028:	sbc	r9, r9, #0
   2f02c:	adds	r8, r8, r0
   2f030:	adc	r9, r9, r1
   2f034:	rsbs	r0, r0, #0
   2f038:	rsc	r1, r1, #0
   2f03c:	and	r0, r0, r8
   2f040:	and	r1, r1, r9
   2f044:	strd	r0, [r4, #80]	; 0x50
   2f048:	ldrd	r2, [r5, #112]	; 0x70
   2f04c:	cmp	r3, r1
   2f050:	cmpeq	r2, r0
   2f054:	bhi	2f1f0 <__flatcc_fb_clear_parser@@Base+0x540>
   2f058:	ldrd	r6, [r4, #88]	; 0x58
   2f05c:	adds	r6, r6, r0
   2f060:	adc	r7, r7, r1
   2f064:	cmp	r7, r1
   2f068:	cmpeq	r6, r0
   2f06c:	bcc	2f1f0 <__flatcc_fb_clear_parser@@Base+0x540>
   2f070:	cmp	r3, r7
   2f074:	cmpeq	r2, r6
   2f078:	movhi	r3, #1
   2f07c:	movls	r3, #0
   2f080:	ldr	r0, [pc, #688]	; 2f338 <__flatcc_fb_clear_parser@@Base+0x688>
   2f084:	mov	r1, #0
   2f088:	cmp	r7, r1
   2f08c:	cmpeq	r6, r0
   2f090:	orrhi	r3, r3, #1
   2f094:	cmp	r3, #0
   2f098:	beq	2f0b0 <__flatcc_fb_clear_parser@@Base+0x400>
   2f09c:	mov	r3, #0
   2f0a0:	ldr	r2, [pc, #660]	; 2f33c <__flatcc_fb_clear_parser@@Base+0x68c>
   2f0a4:	ldr	r1, [r4, #4]
   2f0a8:	mov	r0, sl
   2f0ac:	bl	2eea8 <__flatcc_fb_clear_parser@@Base+0x1f8>
   2f0b0:	strd	r6, [r5, #112]	; 0x70
   2f0b4:	ldrh	r3, [r4, #74]	; 0x4a
   2f0b8:	cmp	r3, fp
   2f0bc:	movcs	fp, r3
   2f0c0:	ldr	r4, [r4]
   2f0c4:	cmp	r4, #0
   2f0c8:	beq	2f20c <__flatcc_fb_clear_parser@@Base+0x55c>
   2f0cc:	ldr	r3, [sl, #116]	; 0x74
   2f0d0:	cmp	r3, #99	; 0x63
   2f0d4:	ble	2ef20 <__flatcc_fb_clear_parser@@Base+0x270>
   2f0d8:	mov	r3, #0
   2f0dc:	ldr	r2, [pc, #604]	; 2f340 <__flatcc_fb_clear_parser@@Base+0x690>
   2f0e0:	mov	r1, r3
   2f0e4:	mov	r0, sl
   2f0e8:	bl	2eea8 <__flatcc_fb_clear_parser@@Base+0x1f8>
   2f0ec:	mvn	r0, #0
   2f0f0:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2f0f4:	mov	r3, r6
   2f0f8:	ldr	r2, [pc, #540]	; 2f31c <__flatcc_fb_clear_parser@@Base+0x66c>
   2f0fc:	ldr	r1, [r4, #4]
   2f100:	mov	r0, sl
   2f104:	bl	2eea8 <__flatcc_fb_clear_parser@@Base+0x1f8>
   2f108:	mvn	r0, #0
   2f10c:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2f110:	ldr	r6, [r4, #16]
   2f114:	ldrh	r3, [r6, #8]
   2f118:	cmp	r3, #3
   2f11c:	beq	2f188 <__flatcc_fb_clear_parser@@Base+0x4d8>
   2f120:	cmp	r3, #1
   2f124:	bne	2f1d4 <__flatcc_fb_clear_parser@@Base+0x524>
   2f128:	ldrh	r3, [r6, #10]
   2f12c:	tst	r3, #1
   2f130:	bne	2f1a0 <__flatcc_fb_clear_parser@@Base+0x4f0>
   2f134:	tst	r3, #2
   2f138:	bne	2f174 <__flatcc_fb_clear_parser@@Base+0x4c4>
   2f13c:	ldr	r3, [sl, #188]	; 0xbc
   2f140:	cmp	r3, #0
   2f144:	bne	2f1bc <__flatcc_fb_clear_parser@@Base+0x50c>
   2f148:	ldr	r3, [sl, #116]	; 0x74
   2f14c:	add	r3, r3, #1
   2f150:	str	r3, [sl, #116]	; 0x74
   2f154:	mov	r1, r6
   2f158:	mov	r0, sl
   2f15c:	bl	2eec8 <__flatcc_fb_clear_parser@@Base+0x218>
   2f160:	ldr	r3, [sl, #116]	; 0x74
   2f164:	sub	r3, r3, #1
   2f168:	str	r3, [sl, #116]	; 0x74
   2f16c:	cmp	r0, #0
   2f170:	popne	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2f174:	ldrh	r3, [r6, #104]	; 0x68
   2f178:	strh	r3, [r4, #74]	; 0x4a
   2f17c:	ldrd	r2, [r6, #112]	; 0x70
   2f180:	strd	r2, [r4, #88]	; 0x58
   2f184:	b	2efc8 <__flatcc_fb_clear_parser@@Base+0x318>
   2f188:	ldr	r3, [r6, #112]	; 0x70
   2f18c:	ldr	r2, [r6, #116]	; 0x74
   2f190:	strh	r3, [r4, #74]	; 0x4a
   2f194:	str	r3, [r4, #88]	; 0x58
   2f198:	str	r2, [r4, #92]	; 0x5c
   2f19c:	b	2efc8 <__flatcc_fb_clear_parser@@Base+0x318>
   2f1a0:	ldr	r3, [r6, #4]
   2f1a4:	ldr	r2, [pc, #408]	; 2f344 <__flatcc_fb_clear_parser@@Base+0x694>
   2f1a8:	ldr	r1, [r4, #4]
   2f1ac:	mov	r0, sl
   2f1b0:	bl	2eea8 <__flatcc_fb_clear_parser@@Base+0x1f8>
   2f1b4:	mvn	r0, #0
   2f1b8:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2f1bc:	ldr	r3, [r6, #4]
   2f1c0:	ldr	r2, [pc, #384]	; 2f348 <__flatcc_fb_clear_parser@@Base+0x698>
   2f1c4:	ldr	r1, [r4, #4]
   2f1c8:	mov	r0, sl
   2f1cc:	bl	2eea8 <__flatcc_fb_clear_parser@@Base+0x1f8>
   2f1d0:	b	2f148 <__flatcc_fb_clear_parser@@Base+0x498>
   2f1d4:	mov	r3, #0
   2f1d8:	ldr	r2, [pc, #364]	; 2f34c <__flatcc_fb_clear_parser@@Base+0x69c>
   2f1dc:	ldr	r1, [r4, #4]
   2f1e0:	mov	r0, sl
   2f1e4:	bl	2eea8 <__flatcc_fb_clear_parser@@Base+0x1f8>
   2f1e8:	mvn	r0, #0
   2f1ec:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2f1f0:	mov	r3, #0
   2f1f4:	ldr	r2, [pc, #340]	; 2f350 <__flatcc_fb_clear_parser@@Base+0x6a0>
   2f1f8:	ldr	r1, [r4, #4]
   2f1fc:	mov	r0, sl
   2f200:	bl	2eea8 <__flatcc_fb_clear_parser@@Base+0x1f8>
   2f204:	mvn	r0, #0
   2f208:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2f20c:	ldrh	r3, [r5, #104]	; 0x68
   2f210:	cmp	r3, #0
   2f214:	strheq	fp, [r5, #104]	; 0x68
   2f218:	beq	2f224 <__flatcc_fb_clear_parser@@Base+0x574>
   2f21c:	cmp	r3, fp
   2f220:	bcc	2f2c8 <__flatcc_fb_clear_parser@@Base+0x618>
   2f224:	ldrd	r8, [r5, #112]	; 0x70
   2f228:	ldrh	r0, [r5, #104]	; 0x68
   2f22c:	sub	r3, r0, #1
   2f230:	uxth	r3, r3
   2f234:	cmp	r3, #255	; 0xff
   2f238:	bhi	2f308 <__flatcc_fb_clear_parser@@Base+0x658>
   2f23c:	uxth	r0, r0
   2f240:	mov	r1, #0
   2f244:	cmp	r1, #0
   2f248:	cmpeq	r0, #1
   2f24c:	beq	2f280 <__flatcc_fb_clear_parser@@Base+0x5d0>
   2f250:	mov	r6, #1
   2f254:	mov	r7, #0
   2f258:	adds	r2, r6, r6
   2f25c:	adc	r3, r7, r7
   2f260:	mov	r6, r2
   2f264:	mov	r7, r3
   2f268:	cmp	r1, r3
   2f26c:	cmpeq	r0, r2
   2f270:	bcc	2f308 <__flatcc_fb_clear_parser@@Base+0x658>
   2f274:	cmp	r1, r3
   2f278:	cmpeq	r0, r2
   2f27c:	bne	2f258 <__flatcc_fb_clear_parser@@Base+0x5a8>
   2f280:	subs	r2, r8, #1
   2f284:	sbc	r3, r9, #0
   2f288:	adds	r2, r2, r0
   2f28c:	adc	r3, r3, r1
   2f290:	rsbs	r0, r0, #0
   2f294:	rsc	r1, r1, #0
   2f298:	and	r0, r0, r2
   2f29c:	and	r1, r1, r3
   2f2a0:	strd	r0, [r5, #112]	; 0x70
   2f2a4:	ldrh	r3, [r5, #10]
   2f2a8:	bic	r3, r3, #1
   2f2ac:	orr	r3, r3, #2
   2f2b0:	strh	r3, [r5, #10]
   2f2b4:	ldr	r3, [sl, #396]	; 0x18c
   2f2b8:	str	r3, [r5, #120]	; 0x78
   2f2bc:	str	r5, [sl, #396]	; 0x18c
   2f2c0:	mov	r0, #0
   2f2c4:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2f2c8:	mov	r3, #0
   2f2cc:	ldr	r2, [pc, #128]	; 2f354 <__flatcc_fb_clear_parser@@Base+0x6a4>
   2f2d0:	ldr	r1, [r5, #4]
   2f2d4:	mov	r0, sl
   2f2d8:	bl	2eea8 <__flatcc_fb_clear_parser@@Base+0x1f8>
   2f2dc:	strh	fp, [r5, #104]	; 0x68
   2f2e0:	b	2f224 <__flatcc_fb_clear_parser@@Base+0x574>
   2f2e4:	mov	r0, #0
   2f2e8:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2f2ec:	mvn	r0, #0
   2f2f0:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2f2f4:	ldr	r3, [pc, #92]	; 2f358 <__flatcc_fb_clear_parser@@Base+0x6a8>
   2f2f8:	mov	r2, #108	; 0x6c
   2f2fc:	ldr	r1, [pc, #36]	; 2f328 <__flatcc_fb_clear_parser@@Base+0x678>
   2f300:	ldr	r0, [pc, #84]	; 2f35c <__flatcc_fb_clear_parser@@Base+0x6ac>
   2f304:	bl	14148 <__assert_fail@plt>
   2f308:	ldr	r3, [pc, #72]	; 2f358 <__flatcc_fb_clear_parser@@Base+0x6a8>
   2f30c:	mov	r2, #108	; 0x6c
   2f310:	ldr	r1, [pc, #16]	; 2f328 <__flatcc_fb_clear_parser@@Base+0x678>
   2f314:	ldr	r0, [pc, #64]	; 2f35c <__flatcc_fb_clear_parser@@Base+0x6ac>
   2f318:	bl	14148 <__assert_fail@plt>
   2f31c:	andeq	r4, r5, r0, lsl #14
   2f320:	andeq	r4, r5, r0, lsl r5
   2f324:	strdeq	r0, [r0], -r6
   2f328:	andeq	r4, r5, r4, lsr r6
   2f32c:	strdeq	sp, [r3], -r4
   2f330:	andeq	r4, r5, r0, lsl #13
   2f334:	andeq	r4, r5, r8, lsr #13
   2f338:	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>
   2f33c:			; <UNDEFINED> instruction: 0x000547b4
   2f340:			; <UNDEFINED> instruction: 0x000546b4
   2f344:	andeq	r4, r5, r0, lsl r7
   2f348:	andeq	r4, r5, r0, lsr r7
   2f34c:	andeq	r4, r5, r8, ror r7
   2f350:	muleq	r5, ip, r7
   2f354:	andeq	r4, r5, r8, ror #15
   2f358:	andeq	r4, r5, r0, asr r5
   2f35c:	andeq	r4, r5, r4, lsr #16
   2f360:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2f364:	sub	sp, sp, #68	; 0x44
   2f368:	mov	r6, r0
   2f36c:	mov	fp, r1
   2f370:	ldrh	r3, [r1, #48]	; 0x30
   2f374:	str	r3, [sp, #8]
   2f378:	cmp	r3, #0
   2f37c:	bne	2f3b4 <__flatcc_fb_clear_parser@@Base+0x704>
   2f380:	ldr	r4, [r1, #28]
   2f384:	mov	r2, #48	; 0x30
   2f388:	mov	r1, #0
   2f38c:	add	r0, sp, #16
   2f390:	bl	140ac <memset@plt>
   2f394:	cmp	r4, #0
   2f398:	beq	2f600 <__flatcc_fb_clear_parser@@Base+0x950>
   2f39c:	ldr	r7, [sp, #8]
   2f3a0:	mov	r5, #100	; 0x64
   2f3a4:	ldr	r8, [pc, #2244]	; 2fc70 <__flatcc_fb_clear_parser@@Base+0xfc0>
   2f3a8:	ldr	sl, [pc, #2244]	; 2fc74 <__flatcc_fb_clear_parser@@Base+0xfc4>
   2f3ac:	ldr	r9, [pc, #2244]	; 2fc78 <__flatcc_fb_clear_parser@@Base+0xfc8>
   2f3b0:	b	2f420 <__flatcc_fb_clear_parser@@Base+0x770>
   2f3b4:	mov	r3, #0
   2f3b8:	ldr	r2, [pc, #2236]	; 2fc7c <__flatcc_fb_clear_parser@@Base+0xfcc>
   2f3bc:	ldr	r1, [r1, #4]
   2f3c0:	bl	2eea8 <__flatcc_fb_clear_parser@@Base+0x1f8>
   2f3c4:	mvn	r3, #0
   2f3c8:	str	r3, [sp, #4]
   2f3cc:	b	2fc64 <__flatcc_fb_clear_parser@@Base+0xfb4>
   2f3d0:	mov	r3, #0
   2f3d4:	ldr	r2, [pc, #2212]	; 2fc80 <__flatcc_fb_clear_parser@@Base+0xfd0>
   2f3d8:	ldr	r1, [r4, #4]
   2f3dc:	mov	r0, r6
   2f3e0:	bl	2eea8 <__flatcc_fb_clear_parser@@Base+0x1f8>
   2f3e4:	b	2f3fc <__flatcc_fb_clear_parser@@Base+0x74c>
   2f3e8:	mov	r3, #0
   2f3ec:	ldr	r2, [pc, #2192]	; 2fc84 <__flatcc_fb_clear_parser@@Base+0xfd4>
   2f3f0:	ldr	r1, [r4, #4]
   2f3f4:	mov	r0, r6
   2f3f8:	bl	2eea8 <__flatcc_fb_clear_parser@@Base+0x1f8>
   2f3fc:	ldr	r4, [r4]
   2f400:	subs	r5, r5, #1
   2f404:	movne	r3, #1
   2f408:	moveq	r3, #0
   2f40c:	cmp	r4, #0
   2f410:	moveq	r3, #0
   2f414:	andne	r3, r3, #1
   2f418:	cmp	r3, #0
   2f41c:	beq	2f57c <__flatcc_fb_clear_parser@@Base+0x8cc>
   2f420:	ldr	r3, [r4, #4]
   2f424:	ldr	r0, [r6, #412]	; 0x19c
   2f428:	ldr	r2, [r3, #4]
   2f42c:	ldr	r1, [r3]
   2f430:	add	r0, r0, #16
   2f434:	bl	39fac <fb_name_table_find@@Base>
   2f438:	cmp	r0, #0
   2f43c:	beq	2f3d0 <__flatcc_fb_clear_parser@@Base+0x720>
   2f440:	ldr	r3, [r0, #24]
   2f444:	cmp	r3, #0
   2f448:	beq	2f3fc <__flatcc_fb_clear_parser@@Base+0x74c>
   2f44c:	cmp	r3, #4
   2f450:	bne	2f3e8 <__flatcc_fb_clear_parser@@Base+0x738>
   2f454:	mov	r2, #1
   2f458:	orr	r7, r7, r2, lsl r3
   2f45c:	uxth	r7, r7
   2f460:	add	r2, sp, #16
   2f464:	ldr	r2, [r2, r3, lsl #2]
   2f468:	cmp	r2, #0
   2f46c:	beq	2f488 <__flatcc_fb_clear_parser@@Base+0x7d8>
   2f470:	mov	r3, #0
   2f474:	ldr	r2, [pc, #2060]	; 2fc88 <__flatcc_fb_clear_parser@@Base+0xfd8>
   2f478:	ldr	r1, [r4, #4]
   2f47c:	mov	r0, r6
   2f480:	bl	2eea8 <__flatcc_fb_clear_parser@@Base+0x1f8>
   2f484:	b	2f3fc <__flatcc_fb_clear_parser@@Base+0x74c>
   2f488:	add	r2, sp, #16
   2f48c:	str	r4, [r2, r3, lsl #2]
   2f490:	add	r3, r8, r3, lsl #2
   2f494:	ldr	r3, [r3, #76]	; 0x4c
   2f498:	cmp	r3, #0
   2f49c:	bne	2f4c4 <__flatcc_fb_clear_parser@@Base+0x814>
   2f4a0:	ldrh	r3, [r4, #16]
   2f4a4:	cmp	r3, #0
   2f4a8:	beq	2f3fc <__flatcc_fb_clear_parser@@Base+0x74c>
   2f4ac:	mov	r3, #0
   2f4b0:	mov	r2, r9
   2f4b4:	ldr	r1, [r4, #4]
   2f4b8:	mov	r0, r6
   2f4bc:	bl	2eea8 <__flatcc_fb_clear_parser@@Base+0x1f8>
   2f4c0:	b	2f3fc <__flatcc_fb_clear_parser@@Base+0x74c>
   2f4c4:	cmp	r3, #2
   2f4c8:	beq	2f4f8 <__flatcc_fb_clear_parser@@Base+0x848>
   2f4cc:	cmp	r3, #5
   2f4d0:	bne	2f51c <__flatcc_fb_clear_parser@@Base+0x86c>
   2f4d4:	ldrh	r3, [r4, #16]
   2f4d8:	cmp	r3, #5
   2f4dc:	beq	2f3fc <__flatcc_fb_clear_parser@@Base+0x74c>
   2f4e0:	mov	r3, #0
   2f4e4:	mov	r2, sl
   2f4e8:	ldr	r1, [r4, #4]
   2f4ec:	mov	r0, r6
   2f4f0:	bl	2eea8 <__flatcc_fb_clear_parser@@Base+0x1f8>
   2f4f4:	b	2f3fc <__flatcc_fb_clear_parser@@Base+0x74c>
   2f4f8:	ldrh	r3, [r4, #16]
   2f4fc:	cmp	r3, #2
   2f500:	beq	2f3fc <__flatcc_fb_clear_parser@@Base+0x74c>
   2f504:	mov	r3, #0
   2f508:	ldr	r2, [pc, #1916]	; 2fc8c <__flatcc_fb_clear_parser@@Base+0xfdc>
   2f50c:	ldr	r1, [r4, #4]
   2f510:	mov	r0, r6
   2f514:	bl	2eea8 <__flatcc_fb_clear_parser@@Base+0x1f8>
   2f518:	b	2f3fc <__flatcc_fb_clear_parser@@Base+0x74c>
   2f51c:	cmp	r3, #4
   2f520:	bne	2f550 <__flatcc_fb_clear_parser@@Base+0x8a0>
   2f524:	ldrh	r3, [r4, #16]
   2f528:	sub	r3, r3, #4
   2f52c:	uxth	r3, r3
   2f530:	cmp	r3, #1
   2f534:	bls	2f3fc <__flatcc_fb_clear_parser@@Base+0x74c>
   2f538:	mov	r3, #0
   2f53c:	ldr	r2, [pc, #1868]	; 2fc90 <__flatcc_fb_clear_parser@@Base+0xfe0>
   2f540:	ldr	r1, [r4, #4]
   2f544:	mov	r0, r6
   2f548:	bl	2eea8 <__flatcc_fb_clear_parser@@Base+0x1f8>
   2f54c:	b	2f3fc <__flatcc_fb_clear_parser@@Base+0x74c>
   2f550:	cmp	r3, #6
   2f554:	bne	2f3fc <__flatcc_fb_clear_parser@@Base+0x74c>
   2f558:	ldrh	r3, [r4, #16]
   2f55c:	cmp	r3, #6
   2f560:	beq	2f3fc <__flatcc_fb_clear_parser@@Base+0x74c>
   2f564:	mov	r3, #0
   2f568:	ldr	r2, [pc, #1828]	; 2fc94 <__flatcc_fb_clear_parser@@Base+0xfe4>
   2f56c:	ldr	r1, [r4, #4]
   2f570:	mov	r0, r6
   2f574:	bl	2eea8 <__flatcc_fb_clear_parser@@Base+0x1f8>
   2f578:	b	2f3fc <__flatcc_fb_clear_parser@@Base+0x74c>
   2f57c:	cmp	r4, #0
   2f580:	beq	2f594 <__flatcc_fb_clear_parser@@Base+0x8e4>
   2f584:	ldr	r2, [pc, #1804]	; 2fc98 <__flatcc_fb_clear_parser@@Base+0xfe8>
   2f588:	ldr	r1, [r4, #4]
   2f58c:	mov	r0, r6
   2f590:	bl	2eea8 <__flatcc_fb_clear_parser@@Base+0x1f8>
   2f594:	strh	r7, [fp, #92]	; 0x5c
   2f598:	ldr	r3, [sp, #32]
   2f59c:	cmp	r3, #0
   2f5a0:	beq	2fc14 <__flatcc_fb_clear_parser@@Base+0xf64>
   2f5a4:	ldrd	r4, [r3, #8]
   2f5a8:	subs	r2, r4, #1
   2f5ac:	sbc	r3, r5, #0
   2f5b0:	cmp	r3, #0
   2f5b4:	cmpeq	r2, #255	; 0xff
   2f5b8:	bhi	2fc00 <__flatcc_fb_clear_parser@@Base+0xf50>
   2f5bc:	cmp	r5, #0
   2f5c0:	cmpeq	r4, #1
   2f5c4:	beq	2f5f8 <__flatcc_fb_clear_parser@@Base+0x948>
   2f5c8:	mov	r0, #1
   2f5cc:	mov	r1, #0
   2f5d0:	adds	r2, r0, r0
   2f5d4:	adc	r3, r1, r1
   2f5d8:	mov	r0, r2
   2f5dc:	mov	r1, r3
   2f5e0:	cmp	r5, r3
   2f5e4:	cmpeq	r4, r2
   2f5e8:	bcc	2fc00 <__flatcc_fb_clear_parser@@Base+0xf50>
   2f5ec:	cmp	r5, r3
   2f5f0:	cmpeq	r4, r2
   2f5f4:	bne	2f5d0 <__flatcc_fb_clear_parser@@Base+0x920>
   2f5f8:	strh	r4, [fp, #104]	; 0x68
   2f5fc:	b	2fc14 <__flatcc_fb_clear_parser@@Base+0xf64>
   2f600:	ldr	r7, [sp, #8]
   2f604:	b	2f594 <__flatcc_fb_clear_parser@@Base+0x8e4>
   2f608:	ldr	r3, [r0, #4]
   2f60c:	ldr	r2, [pc, #1672]	; 2fc9c <__flatcc_fb_clear_parser@@Base+0xfec>
   2f610:	ldr	r1, [sl, #4]
   2f614:	mov	r0, r6
   2f618:	bl	2eea8 <__flatcc_fb_clear_parser@@Base+0x1f8>
   2f61c:	ldr	sl, [sl]
   2f620:	cmp	sl, #0
   2f624:	beq	2fb98 <__flatcc_fb_clear_parser@@Base+0xee8>
   2f628:	mov	r2, #1
   2f62c:	mov	r1, sl
   2f630:	add	r0, fp, #56	; 0x38
   2f634:	bl	2849c <fb_symbol_table_insert_item@@Base>
   2f638:	cmp	r0, #0
   2f63c:	bne	2f608 <__flatcc_fb_clear_parser@@Base+0x958>
   2f640:	ldrh	r3, [sl, #8]
   2f644:	cmp	r3, #5
   2f648:	bne	2f694 <__flatcc_fb_clear_parser@@Base+0x9e4>
   2f64c:	ldr	r8, [r6, #172]	; 0xac
   2f650:	cmp	r8, #0
   2f654:	movne	r8, #128	; 0x80
   2f658:	moveq	r8, #0
   2f65c:	ldr	r3, [r6, #168]	; 0xa8
   2f660:	cmp	r3, #0
   2f664:	orrne	r8, r8, #4
   2f668:	ldr	r4, [sl, #64]	; 0x40
   2f66c:	mov	r2, #48	; 0x30
   2f670:	mov	r1, #0
   2f674:	add	r0, sp, #16
   2f678:	bl	140ac <memset@plt>
   2f67c:	cmp	r4, #0
   2f680:	beq	2fc2c <__flatcc_fb_clear_parser@@Base+0xf7c>
   2f684:	ldr	r7, [sp, #8]
   2f688:	mov	r5, #100	; 0x64
   2f68c:	ldr	r9, [pc, #1508]	; 2fc78 <__flatcc_fb_clear_parser@@Base+0xfc8>
   2f690:	b	2f71c <__flatcc_fb_clear_parser@@Base+0xa6c>
   2f694:	mov	r3, #0
   2f698:	ldr	r2, [pc, #1536]	; 2fca0 <__flatcc_fb_clear_parser@@Base+0xff0>
   2f69c:	ldr	r1, [sl, #4]
   2f6a0:	mov	r0, r6
   2f6a4:	bl	2eea8 <__flatcc_fb_clear_parser@@Base+0x1f8>
   2f6a8:	mvn	r3, #0
   2f6ac:	str	r3, [sp, #4]
   2f6b0:	b	2fc64 <__flatcc_fb_clear_parser@@Base+0xfb4>
   2f6b4:	mov	r3, #0
   2f6b8:	ldr	r2, [pc, #1472]	; 2fc80 <__flatcc_fb_clear_parser@@Base+0xfd0>
   2f6bc:	ldr	r1, [r4, #4]
   2f6c0:	mov	r0, r6
   2f6c4:	bl	2eea8 <__flatcc_fb_clear_parser@@Base+0x1f8>
   2f6c8:	b	2f6f8 <__flatcc_fb_clear_parser@@Base+0xa48>
   2f6cc:	mov	r3, #0
   2f6d0:	ldr	r2, [pc, #1452]	; 2fc84 <__flatcc_fb_clear_parser@@Base+0xfd4>
   2f6d4:	ldr	r1, [r4, #4]
   2f6d8:	mov	r0, r6
   2f6dc:	bl	2eea8 <__flatcc_fb_clear_parser@@Base+0x1f8>
   2f6e0:	b	2f6f8 <__flatcc_fb_clear_parser@@Base+0xa48>
   2f6e4:	mov	r3, #0
   2f6e8:	ldr	r2, [pc, #1432]	; 2fc88 <__flatcc_fb_clear_parser@@Base+0xfd8>
   2f6ec:	ldr	r1, [r4, #4]
   2f6f0:	mov	r0, r6
   2f6f4:	bl	2eea8 <__flatcc_fb_clear_parser@@Base+0x1f8>
   2f6f8:	ldr	r4, [r4]
   2f6fc:	subs	r5, r5, #1
   2f700:	movne	r3, #1
   2f704:	moveq	r3, #0
   2f708:	cmp	r4, #0
   2f70c:	moveq	r3, #0
   2f710:	andne	r3, r3, #1
   2f714:	cmp	r3, #0
   2f718:	beq	2f868 <__flatcc_fb_clear_parser@@Base+0xbb8>
   2f71c:	ldr	r3, [r4, #4]
   2f720:	ldr	r0, [r6, #412]	; 0x19c
   2f724:	ldr	r2, [r3, #4]
   2f728:	ldr	r1, [r3]
   2f72c:	add	r0, r0, #16
   2f730:	bl	39fac <fb_name_table_find@@Base>
   2f734:	cmp	r0, #0
   2f738:	beq	2f6b4 <__flatcc_fb_clear_parser@@Base+0xa04>
   2f73c:	ldr	r3, [r0, #24]
   2f740:	cmp	r3, #0
   2f744:	beq	2f6f8 <__flatcc_fb_clear_parser@@Base+0xa48>
   2f748:	asr	r2, r8, r3
   2f74c:	tst	r2, #1
   2f750:	beq	2f6cc <__flatcc_fb_clear_parser@@Base+0xa1c>
   2f754:	mov	r2, #1
   2f758:	orr	r7, r7, r2, lsl r3
   2f75c:	uxth	r7, r7
   2f760:	add	r2, sp, #16
   2f764:	ldr	r2, [r2, r3, lsl #2]
   2f768:	cmp	r2, #0
   2f76c:	bne	2f6e4 <__flatcc_fb_clear_parser@@Base+0xa34>
   2f770:	add	r2, sp, #16
   2f774:	str	r4, [r2, r3, lsl #2]
   2f778:	ldr	r2, [pc, #1264]	; 2fc70 <__flatcc_fb_clear_parser@@Base+0xfc0>
   2f77c:	add	r3, r2, r3, lsl #2
   2f780:	ldr	r3, [r3, #76]	; 0x4c
   2f784:	cmp	r3, #0
   2f788:	bne	2f7b0 <__flatcc_fb_clear_parser@@Base+0xb00>
   2f78c:	ldrh	r3, [r4, #16]
   2f790:	cmp	r3, #0
   2f794:	beq	2f6f8 <__flatcc_fb_clear_parser@@Base+0xa48>
   2f798:	mov	r3, #0
   2f79c:	mov	r2, r9
   2f7a0:	ldr	r1, [r4, #4]
   2f7a4:	mov	r0, r6
   2f7a8:	bl	2eea8 <__flatcc_fb_clear_parser@@Base+0x1f8>
   2f7ac:	b	2f6f8 <__flatcc_fb_clear_parser@@Base+0xa48>
   2f7b0:	cmp	r3, #2
   2f7b4:	beq	2f7e4 <__flatcc_fb_clear_parser@@Base+0xb34>
   2f7b8:	cmp	r3, #5
   2f7bc:	bne	2f808 <__flatcc_fb_clear_parser@@Base+0xb58>
   2f7c0:	ldrh	r3, [r4, #16]
   2f7c4:	cmp	r3, #5
   2f7c8:	beq	2f6f8 <__flatcc_fb_clear_parser@@Base+0xa48>
   2f7cc:	mov	r3, #0
   2f7d0:	ldr	r2, [pc, #1180]	; 2fc74 <__flatcc_fb_clear_parser@@Base+0xfc4>
   2f7d4:	ldr	r1, [r4, #4]
   2f7d8:	mov	r0, r6
   2f7dc:	bl	2eea8 <__flatcc_fb_clear_parser@@Base+0x1f8>
   2f7e0:	b	2f6f8 <__flatcc_fb_clear_parser@@Base+0xa48>
   2f7e4:	ldrh	r3, [r4, #16]
   2f7e8:	cmp	r3, #2
   2f7ec:	beq	2f6f8 <__flatcc_fb_clear_parser@@Base+0xa48>
   2f7f0:	mov	r3, #0
   2f7f4:	ldr	r2, [pc, #1168]	; 2fc8c <__flatcc_fb_clear_parser@@Base+0xfdc>
   2f7f8:	ldr	r1, [r4, #4]
   2f7fc:	mov	r0, r6
   2f800:	bl	2eea8 <__flatcc_fb_clear_parser@@Base+0x1f8>
   2f804:	b	2f6f8 <__flatcc_fb_clear_parser@@Base+0xa48>
   2f808:	cmp	r3, #4
   2f80c:	bne	2f83c <__flatcc_fb_clear_parser@@Base+0xb8c>
   2f810:	ldrh	r3, [r4, #16]
   2f814:	sub	r3, r3, #4
   2f818:	uxth	r3, r3
   2f81c:	cmp	r3, #1
   2f820:	bls	2f6f8 <__flatcc_fb_clear_parser@@Base+0xa48>
   2f824:	mov	r3, #0
   2f828:	ldr	r2, [pc, #1120]	; 2fc90 <__flatcc_fb_clear_parser@@Base+0xfe0>
   2f82c:	ldr	r1, [r4, #4]
   2f830:	mov	r0, r6
   2f834:	bl	2eea8 <__flatcc_fb_clear_parser@@Base+0x1f8>
   2f838:	b	2f6f8 <__flatcc_fb_clear_parser@@Base+0xa48>
   2f83c:	cmp	r3, #6
   2f840:	bne	2f6f8 <__flatcc_fb_clear_parser@@Base+0xa48>
   2f844:	ldrh	r3, [r4, #16]
   2f848:	cmp	r3, #6
   2f84c:	beq	2f6f8 <__flatcc_fb_clear_parser@@Base+0xa48>
   2f850:	mov	r3, #0
   2f854:	ldr	r2, [pc, #1080]	; 2fc94 <__flatcc_fb_clear_parser@@Base+0xfe4>
   2f858:	ldr	r1, [r4, #4]
   2f85c:	mov	r0, r6
   2f860:	bl	2eea8 <__flatcc_fb_clear_parser@@Base+0x1f8>
   2f864:	b	2f6f8 <__flatcc_fb_clear_parser@@Base+0xa48>
   2f868:	cmp	r4, #0
   2f86c:	beq	2f880 <__flatcc_fb_clear_parser@@Base+0xbd0>
   2f870:	ldr	r2, [pc, #1056]	; 2fc98 <__flatcc_fb_clear_parser@@Base+0xfe8>
   2f874:	ldr	r1, [r4, #4]
   2f878:	mov	r0, r6
   2f87c:	bl	2eea8 <__flatcc_fb_clear_parser@@Base+0x1f8>
   2f880:	strh	r7, [sl, #72]	; 0x48
   2f884:	ldrh	r3, [sl, #24]
   2f888:	cmp	r3, #8
   2f88c:	beq	2fb64 <__flatcc_fb_clear_parser@@Base+0xeb4>
   2f890:	cmp	r3, #12
   2f894:	bne	2fc48 <__flatcc_fb_clear_parser@@Base+0xf98>
   2f898:	ldr	r8, [fp, #12]
   2f89c:	ldr	r1, [sl, #16]
   2f8a0:	cmp	r1, #0
   2f8a4:	beq	2f940 <__flatcc_fb_clear_parser@@Base+0xc90>
   2f8a8:	mov	r9, r1
   2f8ac:	mov	r2, #0
   2f8b0:	b	2f8bc <__flatcc_fb_clear_parser@@Base+0xc0c>
   2f8b4:	mov	r2, r0
   2f8b8:	mov	r9, r3
   2f8bc:	ldr	r3, [r9]
   2f8c0:	add	r0, r2, #1
   2f8c4:	cmp	r3, #0
   2f8c8:	bne	2f8b4 <__flatcc_fb_clear_parser@@Base+0xc04>
   2f8cc:	cmp	r9, #0
   2f8d0:	beq	2f940 <__flatcc_fb_clear_parser@@Base+0xc90>
   2f8d4:	adds	ip, r8, #0
   2f8d8:	movne	ip, #1
   2f8dc:	cmp	r0, #1
   2f8e0:	movne	ip, #0
   2f8e4:	cmp	ip, #0
   2f8e8:	bne	2f960 <__flatcc_fb_clear_parser@@Base+0xcb0>
   2f8ec:	cmp	r0, #1
   2f8f0:	moveq	r1, r3
   2f8f4:	cmn	r6, #352	; 0x160
   2f8f8:	beq	2f940 <__flatcc_fb_clear_parser@@Base+0xc90>
   2f8fc:	ldr	r0, [r6, #412]	; 0x19c
   2f900:	cmp	r0, #0
   2f904:	beq	2f940 <__flatcc_fb_clear_parser@@Base+0xc90>
   2f908:	rsb	r2, r2, #0
   2f90c:	bl	29418 <fb_scope_table_find@@Base>
   2f910:	cmp	r0, #0
   2f914:	beq	2f940 <__flatcc_fb_clear_parser@@Base+0xc90>
   2f918:	ldr	r3, [r9, #4]
   2f91c:	ldr	r2, [r3, #4]
   2f920:	ldr	r1, [r3]
   2f924:	add	r0, r0, #4
   2f928:	bl	284c8 <fb_symbol_table_find@@Base>
   2f92c:	subs	r4, r0, #0
   2f930:	beq	2f940 <__flatcc_fb_clear_parser@@Base+0xc90>
   2f934:	ldrh	r3, [r4, #8]
   2f938:	cmp	r3, #4
   2f93c:	bls	2faa4 <__flatcc_fb_clear_parser@@Base+0xdf4>
   2f940:	mov	r3, sl
   2f944:	ldr	r2, [pc, #856]	; 2fca4 <__flatcc_fb_clear_parser@@Base+0xff4>
   2f948:	ldr	r1, [sl, #16]
   2f94c:	mov	r0, r6
   2f950:	bl	2ba04 <error_ref_sym@@Base>
   2f954:	mov	r3, #1
   2f958:	strh	r3, [sl, #24]
   2f95c:	b	2f61c <__flatcc_fb_clear_parser@@Base+0x96c>
   2f960:	add	r3, r6, #524	; 0x20c
   2f964:	str	r3, [sp, #12]
   2f968:	add	r7, r6, #352	; 0x160
   2f96c:	b	2fa14 <__flatcc_fb_clear_parser@@Base+0xd64>
   2f970:	ldr	r1, [r4, #16]
   2f974:	ldr	r0, [sp, #12]
   2f978:	bl	27e80 <ptr_set_find_item@@Base>
   2f97c:	cmp	r0, #0
   2f980:	beq	2fa3c <__flatcc_fb_clear_parser@@Base+0xd8c>
   2f984:	str	r4, [sl, #16]
   2f988:	mov	r3, #14
   2f98c:	strh	r3, [sl, #24]
   2f990:	ldrh	r3, [r4, #8]
   2f994:	cmp	r3, #1
   2f998:	beq	2fb30 <__flatcc_fb_clear_parser@@Base+0xe80>
   2f99c:	ldr	r2, [r6, #152]	; 0x98
   2f9a0:	cmp	r2, #0
   2f9a4:	beq	2fb08 <__flatcc_fb_clear_parser@@Base+0xe58>
   2f9a8:	cmp	r3, #3
   2f9ac:	bne	2fabc <__flatcc_fb_clear_parser@@Base+0xe0c>
   2f9b0:	ldrh	r3, [sl, #72]	; 0x48
   2f9b4:	tst	r3, #128	; 0x80
   2f9b8:	beq	2fb74 <__flatcc_fb_clear_parser@@Base+0xec4>
   2f9bc:	ldr	r3, [r6, #148]	; 0x94
   2f9c0:	cmp	r3, #0
   2f9c4:	beq	2fae4 <__flatcc_fb_clear_parser@@Base+0xe34>
   2f9c8:	ldr	r3, [sp, #4]
   2f9cc:	add	r3, r3, #1
   2f9d0:	str	r3, [sp, #4]
   2f9d4:	b	2fb74 <__flatcc_fb_clear_parser@@Base+0xec4>
   2f9d8:	sub	r5, r5, #1
   2f9dc:	add	r4, r4, #1
   2f9e0:	cmp	r5, #1
   2f9e4:	ble	2fa78 <__flatcc_fb_clear_parser@@Base+0xdc8>
   2f9e8:	cmp	r7, #0
   2f9ec:	beq	2f9d8 <__flatcc_fb_clear_parser@@Base+0xd28>
   2f9f0:	ldr	r0, [r6, #412]	; 0x19c
   2f9f4:	cmp	r0, #0
   2f9f8:	beq	2f9d8 <__flatcc_fb_clear_parser@@Base+0xd28>
   2f9fc:	mov	r2, r4
   2fa00:	ldr	r1, [r8]
   2fa04:	bl	29418 <fb_scope_table_find@@Base>
   2fa08:	cmp	r0, #0
   2fa0c:	beq	2f9d8 <__flatcc_fb_clear_parser@@Base+0xd28>
   2fa10:	mov	r8, r0
   2fa14:	ldr	r3, [r9, #4]
   2fa18:	ldr	r2, [r3, #4]
   2fa1c:	ldr	r1, [r3]
   2fa20:	add	r0, r8, #4
   2fa24:	bl	284c8 <fb_symbol_table_find@@Base>
   2fa28:	subs	r4, r0, #0
   2fa2c:	beq	2fa3c <__flatcc_fb_clear_parser@@Base+0xd8c>
   2fa30:	ldrh	r3, [r4, #8]
   2fa34:	cmp	r3, #4
   2fa38:	bls	2f970 <__flatcc_fb_clear_parser@@Base+0xcc0>
   2fa3c:	cmp	r8, #0
   2fa40:	beq	2f940 <__flatcc_fb_clear_parser@@Base+0xc90>
   2fa44:	ldr	r3, [r8]
   2fa48:	cmp	r3, #0
   2fa4c:	beq	2f940 <__flatcc_fb_clear_parser@@Base+0xc90>
   2fa50:	mov	r4, #0
   2fa54:	add	r4, r4, #1
   2fa58:	ldr	r3, [r3]
   2fa5c:	cmp	r3, #0
   2fa60:	bne	2fa54 <__flatcc_fb_clear_parser@@Base+0xda4>
   2fa64:	cmp	r4, #0
   2fa68:	beq	2f940 <__flatcc_fb_clear_parser@@Base+0xc90>
   2fa6c:	mov	r5, r4
   2fa70:	rsb	r4, r4, #1
   2fa74:	b	2f9e0 <__flatcc_fb_clear_parser@@Base+0xd30>
   2fa78:	cmp	r7, #0
   2fa7c:	beq	2f940 <__flatcc_fb_clear_parser@@Base+0xc90>
   2fa80:	ldr	r0, [r6, #412]	; 0x19c
   2fa84:	cmp	r0, #0
   2fa88:	beq	2f940 <__flatcc_fb_clear_parser@@Base+0xc90>
   2fa8c:	mov	r2, #0
   2fa90:	mov	r1, r2
   2fa94:	bl	29418 <fb_scope_table_find@@Base>
   2fa98:	subs	r8, r0, #0
   2fa9c:	bne	2fa14 <__flatcc_fb_clear_parser@@Base+0xd64>
   2faa0:	b	2f940 <__flatcc_fb_clear_parser@@Base+0xc90>
   2faa4:	ldr	r1, [r4, #16]
   2faa8:	add	r0, r6, #524	; 0x20c
   2faac:	bl	27e80 <ptr_set_find_item@@Base>
   2fab0:	cmp	r0, #0
   2fab4:	bne	2f984 <__flatcc_fb_clear_parser@@Base+0xcd4>
   2fab8:	b	2f940 <__flatcc_fb_clear_parser@@Base+0xc90>
   2fabc:	ldr	r3, [r4, #4]
   2fac0:	ldr	r2, [pc, #480]	; 2fca8 <__flatcc_fb_clear_parser@@Base+0xff8>
   2fac4:	ldr	r1, [sl, #4]
   2fac8:	mov	r0, r6
   2facc:	bl	2eea8 <__flatcc_fb_clear_parser@@Base+0x1f8>
   2fad0:	mov	r3, #1
   2fad4:	strh	r3, [sl, #24]
   2fad8:	mvn	r3, #0
   2fadc:	str	r3, [sp, #4]
   2fae0:	b	2fc64 <__flatcc_fb_clear_parser@@Base+0xfb4>
   2fae4:	ldr	r2, [pc, #448]	; 2fcac <__flatcc_fb_clear_parser@@Base+0xffc>
   2fae8:	ldr	r1, [sl, #4]
   2faec:	mov	r0, r6
   2faf0:	bl	2eea8 <__flatcc_fb_clear_parser@@Base+0x1f8>
   2faf4:	mov	r3, #1
   2faf8:	strh	r3, [sl, #24]
   2fafc:	mvn	r3, #0
   2fb00:	str	r3, [sp, #4]
   2fb04:	b	2fc64 <__flatcc_fb_clear_parser@@Base+0xfb4>
   2fb08:	ldr	r3, [r4, #4]
   2fb0c:	ldr	r2, [pc, #412]	; 2fcb0 <__flatcc_fb_clear_parser@@Base+0x1000>
   2fb10:	ldr	r1, [sl, #4]
   2fb14:	mov	r0, r6
   2fb18:	bl	2eea8 <__flatcc_fb_clear_parser@@Base+0x1f8>
   2fb1c:	mov	r3, #1
   2fb20:	strh	r3, [sl, #24]
   2fb24:	mvn	r3, #0
   2fb28:	str	r3, [sp, #4]
   2fb2c:	b	2fc64 <__flatcc_fb_clear_parser@@Base+0xfb4>
   2fb30:	ldrh	r3, [sl, #72]	; 0x48
   2fb34:	tst	r3, #128	; 0x80
   2fb38:	beq	2fb74 <__flatcc_fb_clear_parser@@Base+0xec4>
   2fb3c:	mov	r3, #0
   2fb40:	ldr	r2, [pc, #356]	; 2fcac <__flatcc_fb_clear_parser@@Base+0xffc>
   2fb44:	ldr	r1, [sl, #4]
   2fb48:	mov	r0, r6
   2fb4c:	bl	2eea8 <__flatcc_fb_clear_parser@@Base+0x1f8>
   2fb50:	mov	r3, #1
   2fb54:	strh	r3, [sl, #24]
   2fb58:	mvn	r3, #0
   2fb5c:	str	r3, [sp, #4]
   2fb60:	b	2fc64 <__flatcc_fb_clear_parser@@Base+0xfb4>
   2fb64:	tst	r7, #128	; 0x80
   2fb68:	ldrne	r3, [sp, #4]
   2fb6c:	addne	r3, r3, #1
   2fb70:	strne	r3, [sp, #4]
   2fb74:	ldrh	r3, [sl, #56]	; 0x38
   2fb78:	cmp	r3, #0
   2fb7c:	beq	2f61c <__flatcc_fb_clear_parser@@Base+0x96c>
   2fb80:	mov	r3, #0
   2fb84:	ldr	r2, [pc, #296]	; 2fcb4 <__flatcc_fb_clear_parser@@Base+0x1004>
   2fb88:	ldr	r1, [sl, #4]
   2fb8c:	mov	r0, r6
   2fb90:	bl	2eea8 <__flatcc_fb_clear_parser@@Base+0x1f8>
   2fb94:	b	2f61c <__flatcc_fb_clear_parser@@Base+0x96c>
   2fb98:	ldr	r2, [sp, #4]
   2fb9c:	cmp	r2, #0
   2fba0:	beq	2fc64 <__flatcc_fb_clear_parser@@Base+0xfb4>
   2fba4:	ldrh	r3, [fp, #10]
   2fba8:	orr	r3, r3, #8
   2fbac:	strh	r3, [fp, #10]
   2fbb0:	mov	r3, r2
   2fbb4:	cmp	r2, #1
   2fbb8:	movle	r3, #0
   2fbbc:	strle	r3, [sp, #4]
   2fbc0:	ble	2fc64 <__flatcc_fb_clear_parser@@Base+0xfb4>
   2fbc4:	ldr	r3, [r6, #156]	; 0x9c
   2fbc8:	cmp	r3, #0
   2fbcc:	movne	r3, #0
   2fbd0:	strne	r3, [sp, #4]
   2fbd4:	bne	2fc64 <__flatcc_fb_clear_parser@@Base+0xfb4>
   2fbd8:	ldr	r2, [pc, #216]	; 2fcb8 <__flatcc_fb_clear_parser@@Base+0x1008>
   2fbdc:	ldr	r1, [fp, #4]
   2fbe0:	mov	r0, r6
   2fbe4:	bl	2eea8 <__flatcc_fb_clear_parser@@Base+0x1f8>
   2fbe8:	mvn	r3, #0
   2fbec:	str	r3, [sp, #4]
   2fbf0:	b	2fc64 <__flatcc_fb_clear_parser@@Base+0xfb4>
   2fbf4:	mov	r3, #0
   2fbf8:	str	r3, [sp, #4]
   2fbfc:	b	2fc64 <__flatcc_fb_clear_parser@@Base+0xfb4>
   2fc00:	mov	r3, #0
   2fc04:	ldr	r2, [pc, #176]	; 2fcbc <__flatcc_fb_clear_parser@@Base+0x100c>
   2fc08:	ldr	r1, [fp, #4]
   2fc0c:	mov	r0, r6
   2fc10:	bl	2eea8 <__flatcc_fb_clear_parser@@Base+0x1f8>
   2fc14:	ldr	sl, [fp, #20]
   2fc18:	cmp	sl, #0
   2fc1c:	beq	2fbf4 <__flatcc_fb_clear_parser@@Base+0xf44>
   2fc20:	mov	r3, #0
   2fc24:	str	r3, [sp, #4]
   2fc28:	b	2f628 <__flatcc_fb_clear_parser@@Base+0x978>
   2fc2c:	mov	r3, #0
   2fc30:	strh	r3, [sl, #72]	; 0x48
   2fc34:	ldrh	r3, [sl, #24]
   2fc38:	cmp	r3, #8
   2fc3c:	beq	2fb74 <__flatcc_fb_clear_parser@@Base+0xec4>
   2fc40:	cmp	r3, #12
   2fc44:	beq	2f898 <__flatcc_fb_clear_parser@@Base+0xbe8>
   2fc48:	mov	r3, #0
   2fc4c:	ldr	r2, [pc, #108]	; 2fcc0 <__flatcc_fb_clear_parser@@Base+0x1010>
   2fc50:	ldr	r1, [sl, #4]
   2fc54:	mov	r0, r6
   2fc58:	bl	2eea8 <__flatcc_fb_clear_parser@@Base+0x1f8>
   2fc5c:	mvn	r3, #0
   2fc60:	str	r3, [sp, #4]
   2fc64:	ldr	r0, [sp, #4]
   2fc68:	add	sp, sp, #68	; 0x44
   2fc6c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2fc70:	andeq	r4, r5, r0, lsl r5
   2fc74:	andeq	r4, r5, ip, lsr #18
   2fc78:	andeq	r4, r5, r0, ror #17
   2fc7c:	andeq	r4, r5, ip, lsr r8
   2fc80:	andeq	r4, r5, r8, ror #16
   2fc84:	andeq	r4, r5, r8, lsl #17
   2fc88:			; <UNDEFINED> instruction: 0x000548b8
   2fc8c:	andeq	r4, r5, r8, lsl #18
   2fc90:	andeq	r4, r5, r8, asr r9
   2fc94:	andeq	r4, r5, ip, ror r9
   2fc98:	andeq	r4, r5, r8, lsr #19
   2fc9c:			; <UNDEFINED> instruction: 0x000549bc
   2fca0:	andeq	r4, r5, r0, ror #19
   2fca4:	andeq	r4, r5, r4, lsl #20
   2fca8:	andeq	r4, r5, r4, lsr sl
   2fcac:	andeq	r4, r5, r8, ror sl
   2fcb0:	andeq	r4, r5, ip, lsr #21
   2fcb4:	andeq	r4, r5, r4, lsr #22
   2fcb8:	andeq	r4, r5, r8, asr fp
   2fcbc:	muleq	r5, r4, fp
   2fcc0:	andeq	r4, r5, r8, ror #21
   2fcc4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2fcc8:	sub	sp, sp, #100	; 0x64
   2fccc:	mov	r5, r0
   2fcd0:	mov	r6, r1
   2fcd4:	ldrh	fp, [r1, #8]
   2fcd8:	cmp	fp, #4
   2fcdc:	beq	2fda0 <__flatcc_fb_clear_parser@@Base+0x10f0>
   2fce0:	cmp	fp, #3
   2fce4:	bne	2fd54 <__flatcc_fb_clear_parser@@Base+0x10a4>
   2fce8:	ldrh	r3, [r1, #48]	; 0x30
   2fcec:	cmp	r3, #0
   2fcf0:	beq	2fd68 <__flatcc_fb_clear_parser@@Base+0x10b8>
   2fcf4:	cmp	r3, #8
   2fcf8:	bne	2fd88 <__flatcc_fb_clear_parser@@Base+0x10d8>
   2fcfc:	ldr	r0, [r1, #40]	; 0x28
   2fd00:	bl	2edc0 <__flatcc_fb_clear_parser@@Base+0x110>
   2fd04:	str	r0, [r6, #40]	; 0x28
   2fd08:	ldr	r3, [pc, #2660]	; 30774 <__flatcc_fb_clear_parser@@Base+0x1ac4>
   2fd0c:	add	r0, r3, r0, lsl #2
   2fd10:	ldr	r3, [r0, #16]
   2fd14:	str	r3, [r6, #112]	; 0x70
   2fd18:	mov	r2, #0
   2fd1c:	str	r2, [r6, #116]	; 0x74
   2fd20:	strh	r3, [r6, #104]	; 0x68
   2fd24:	ldr	r4, [r6, #28]
   2fd28:	mov	r2, #48	; 0x30
   2fd2c:	mov	r1, #0
   2fd30:	add	r0, sp, r2
   2fd34:	bl	140ac <memset@plt>
   2fd38:	cmp	r4, #0
   2fd3c:	beq	30764 <__flatcc_fb_clear_parser@@Base+0x1ab4>
   2fd40:	mov	r7, #100	; 0x64
   2fd44:	mov	r8, #0
   2fd48:	ldr	r9, [pc, #2596]	; 30774 <__flatcc_fb_clear_parser@@Base+0x1ac4>
   2fd4c:	ldr	sl, [pc, #2596]	; 30778 <__flatcc_fb_clear_parser@@Base+0x1ac8>
   2fd50:	b	2fe3c <__flatcc_fb_clear_parser@@Base+0x118c>
   2fd54:	ldr	r3, [pc, #2592]	; 3077c <__flatcc_fb_clear_parser@@Base+0x1acc>
   2fd58:	ldr	r2, [pc, #2592]	; 30780 <__flatcc_fb_clear_parser@@Base+0x1ad0>
   2fd5c:	ldr	r1, [pc, #2592]	; 30784 <__flatcc_fb_clear_parser@@Base+0x1ad4>
   2fd60:	ldr	r0, [pc, #2592]	; 30788 <__flatcc_fb_clear_parser@@Base+0x1ad8>
   2fd64:	bl	14148 <__assert_fail@plt>
   2fd68:	mov	r3, #1
   2fd6c:	strh	r3, [r1, #48]	; 0x30
   2fd70:	mov	r3, #0
   2fd74:	ldr	r2, [pc, #2576]	; 3078c <__flatcc_fb_clear_parser@@Base+0x1adc>
   2fd78:	ldr	r1, [r1, #4]
   2fd7c:	bl	2eea8 <__flatcc_fb_clear_parser@@Base+0x1f8>
   2fd80:	mvn	r0, #0
   2fd84:	b	30754 <__flatcc_fb_clear_parser@@Base+0x1aa4>
   2fd88:	mov	r3, #0
   2fd8c:	ldr	r2, [pc, #2556]	; 30790 <__flatcc_fb_clear_parser@@Base+0x1ae0>
   2fd90:	ldr	r1, [r1, #4]
   2fd94:	bl	2eea8 <__flatcc_fb_clear_parser@@Base+0x1f8>
   2fd98:	mvn	r0, #0
   2fd9c:	b	30754 <__flatcc_fb_clear_parser@@Base+0x1aa4>
   2fda0:	ldrh	r3, [r1, #48]	; 0x30
   2fda4:	cmp	r3, #0
   2fda8:	bne	2fdd4 <__flatcc_fb_clear_parser@@Base+0x1124>
   2fdac:	mov	r3, #8
   2fdb0:	strh	r3, [r1, #48]	; 0x30
   2fdb4:	mov	r3, #4
   2fdb8:	str	r3, [r1, #40]	; 0x28
   2fdbc:	mov	r2, #1
   2fdc0:	mov	r3, #0
   2fdc4:	strd	r2, [r1, #112]	; 0x70
   2fdc8:	mov	r3, #1
   2fdcc:	strh	r3, [r1, #104]	; 0x68
   2fdd0:	b	2fd24 <__flatcc_fb_clear_parser@@Base+0x1074>
   2fdd4:	mov	r3, #0
   2fdd8:	ldr	r2, [pc, #2484]	; 30794 <__flatcc_fb_clear_parser@@Base+0x1ae4>
   2fddc:	ldr	r1, [r1, #4]
   2fde0:	bl	2eea8 <__flatcc_fb_clear_parser@@Base+0x1f8>
   2fde4:	mvn	r0, #0
   2fde8:	b	30754 <__flatcc_fb_clear_parser@@Base+0x1aa4>
   2fdec:	mov	r3, #0
   2fdf0:	ldr	r2, [pc, #2464]	; 30798 <__flatcc_fb_clear_parser@@Base+0x1ae8>
   2fdf4:	ldr	r1, [r4, #4]
   2fdf8:	mov	r0, r5
   2fdfc:	bl	2eea8 <__flatcc_fb_clear_parser@@Base+0x1f8>
   2fe00:	b	2fe18 <__flatcc_fb_clear_parser@@Base+0x1168>
   2fe04:	mov	r3, #0
   2fe08:	ldr	r2, [pc, #2444]	; 3079c <__flatcc_fb_clear_parser@@Base+0x1aec>
   2fe0c:	ldr	r1, [r4, #4]
   2fe10:	mov	r0, r5
   2fe14:	bl	2eea8 <__flatcc_fb_clear_parser@@Base+0x1f8>
   2fe18:	ldr	r4, [r4]
   2fe1c:	subs	r7, r7, #1
   2fe20:	movne	r3, #1
   2fe24:	moveq	r3, #0
   2fe28:	cmp	r4, #0
   2fe2c:	moveq	r3, #0
   2fe30:	andne	r3, r3, #1
   2fe34:	cmp	r3, #0
   2fe38:	beq	2ff98 <__flatcc_fb_clear_parser@@Base+0x12e8>
   2fe3c:	ldr	r3, [r4, #4]
   2fe40:	ldr	r0, [r5, #412]	; 0x19c
   2fe44:	ldr	r2, [r3, #4]
   2fe48:	ldr	r1, [r3]
   2fe4c:	add	r0, r0, #16
   2fe50:	bl	39fac <fb_name_table_find@@Base>
   2fe54:	cmp	r0, #0
   2fe58:	beq	2fdec <__flatcc_fb_clear_parser@@Base+0x113c>
   2fe5c:	ldr	r3, [r0, #24]
   2fe60:	cmp	r3, #0
   2fe64:	beq	2fe18 <__flatcc_fb_clear_parser@@Base+0x1168>
   2fe68:	cmp	r3, #5
   2fe6c:	bne	2fe04 <__flatcc_fb_clear_parser@@Base+0x1154>
   2fe70:	mov	r2, #1
   2fe74:	orr	r8, r8, r2, lsl r3
   2fe78:	uxth	r8, r8
   2fe7c:	add	r2, sp, #48	; 0x30
   2fe80:	ldr	r2, [r2, r3, lsl #2]
   2fe84:	cmp	r2, #0
   2fe88:	beq	2fea4 <__flatcc_fb_clear_parser@@Base+0x11f4>
   2fe8c:	mov	r3, #0
   2fe90:	ldr	r2, [pc, #2312]	; 307a0 <__flatcc_fb_clear_parser@@Base+0x1af0>
   2fe94:	ldr	r1, [r4, #4]
   2fe98:	mov	r0, r5
   2fe9c:	bl	2eea8 <__flatcc_fb_clear_parser@@Base+0x1f8>
   2fea0:	b	2fe18 <__flatcc_fb_clear_parser@@Base+0x1168>
   2fea4:	add	r2, sp, #48	; 0x30
   2fea8:	str	r4, [r2, r3, lsl #2]
   2feac:	add	r3, r9, r3, lsl #2
   2feb0:	ldr	r3, [r3, #76]	; 0x4c
   2feb4:	cmp	r3, #0
   2feb8:	bne	2fee0 <__flatcc_fb_clear_parser@@Base+0x1230>
   2febc:	ldrh	r3, [r4, #16]
   2fec0:	cmp	r3, #0
   2fec4:	beq	2fe18 <__flatcc_fb_clear_parser@@Base+0x1168>
   2fec8:	mov	r3, #0
   2fecc:	mov	r2, sl
   2fed0:	ldr	r1, [r4, #4]
   2fed4:	mov	r0, r5
   2fed8:	bl	2eea8 <__flatcc_fb_clear_parser@@Base+0x1f8>
   2fedc:	b	2fe18 <__flatcc_fb_clear_parser@@Base+0x1168>
   2fee0:	cmp	r3, #2
   2fee4:	beq	2ff14 <__flatcc_fb_clear_parser@@Base+0x1264>
   2fee8:	cmp	r3, #5
   2feec:	bne	2ff38 <__flatcc_fb_clear_parser@@Base+0x1288>
   2fef0:	ldrh	r3, [r4, #16]
   2fef4:	cmp	r3, #5
   2fef8:	beq	2fe18 <__flatcc_fb_clear_parser@@Base+0x1168>
   2fefc:	mov	r3, #0
   2ff00:	ldr	r2, [pc, #2204]	; 307a4 <__flatcc_fb_clear_parser@@Base+0x1af4>
   2ff04:	ldr	r1, [r4, #4]
   2ff08:	mov	r0, r5
   2ff0c:	bl	2eea8 <__flatcc_fb_clear_parser@@Base+0x1f8>
   2ff10:	b	2fe18 <__flatcc_fb_clear_parser@@Base+0x1168>
   2ff14:	ldrh	r3, [r4, #16]
   2ff18:	cmp	r3, #2
   2ff1c:	beq	2fe18 <__flatcc_fb_clear_parser@@Base+0x1168>
   2ff20:	mov	r3, #0
   2ff24:	ldr	r2, [pc, #2172]	; 307a8 <__flatcc_fb_clear_parser@@Base+0x1af8>
   2ff28:	ldr	r1, [r4, #4]
   2ff2c:	mov	r0, r5
   2ff30:	bl	2eea8 <__flatcc_fb_clear_parser@@Base+0x1f8>
   2ff34:	b	2fe18 <__flatcc_fb_clear_parser@@Base+0x1168>
   2ff38:	cmp	r3, #4
   2ff3c:	bne	2ff6c <__flatcc_fb_clear_parser@@Base+0x12bc>
   2ff40:	ldrh	r3, [r4, #16]
   2ff44:	sub	r3, r3, #4
   2ff48:	uxth	r3, r3
   2ff4c:	cmp	r3, #1
   2ff50:	bls	2fe18 <__flatcc_fb_clear_parser@@Base+0x1168>
   2ff54:	mov	r3, #0
   2ff58:	ldr	r2, [pc, #2124]	; 307ac <__flatcc_fb_clear_parser@@Base+0x1afc>
   2ff5c:	ldr	r1, [r4, #4]
   2ff60:	mov	r0, r5
   2ff64:	bl	2eea8 <__flatcc_fb_clear_parser@@Base+0x1f8>
   2ff68:	b	2fe18 <__flatcc_fb_clear_parser@@Base+0x1168>
   2ff6c:	cmp	r3, #6
   2ff70:	bne	2fe18 <__flatcc_fb_clear_parser@@Base+0x1168>
   2ff74:	ldrh	r3, [r4, #16]
   2ff78:	cmp	r3, #6
   2ff7c:	beq	2fe18 <__flatcc_fb_clear_parser@@Base+0x1168>
   2ff80:	mov	r3, #0
   2ff84:	ldr	r2, [pc, #2084]	; 307b0 <__flatcc_fb_clear_parser@@Base+0x1b00>
   2ff88:	ldr	r1, [r4, #4]
   2ff8c:	mov	r0, r5
   2ff90:	bl	2eea8 <__flatcc_fb_clear_parser@@Base+0x1f8>
   2ff94:	b	2fe18 <__flatcc_fb_clear_parser@@Base+0x1168>
   2ff98:	cmp	r4, #0
   2ff9c:	beq	2ffb0 <__flatcc_fb_clear_parser@@Base+0x1300>
   2ffa0:	ldr	r2, [pc, #2060]	; 307b4 <__flatcc_fb_clear_parser@@Base+0x1b04>
   2ffa4:	ldr	r1, [r4, #4]
   2ffa8:	mov	r0, r5
   2ffac:	bl	2eea8 <__flatcc_fb_clear_parser@@Base+0x1f8>
   2ffb0:	strh	r8, [r6, #92]	; 0x5c
   2ffb4:	tst	r8, #32
   2ffb8:	moveq	r3, #0
   2ffbc:	streq	r3, [sp]
   2ffc0:	beq	2ffd8 <__flatcc_fb_clear_parser@@Base+0x1328>
   2ffc4:	mov	r2, #0
   2ffc8:	mov	r3, #0
   2ffcc:	strd	r2, [sp, #32]
   2ffd0:	mov	r3, #1
   2ffd4:	str	r3, [sp]
   2ffd8:	ldr	r2, [r6, #40]	; 0x28
   2ffdc:	cmp	r2, #5
   2ffe0:	beq	30034 <__flatcc_fb_clear_parser@@Base+0x1384>
   2ffe4:	mov	r0, #0
   2ffe8:	mov	r1, #0
   2ffec:	strd	r0, [sp, #32]
   2fff0:	mov	r3, #4
   2fff4:	strh	r3, [sp, #40]	; 0x28
   2fff8:	add	r3, sp, #32
   2fffc:	mov	r1, r6
   30000:	mov	r0, r5
   30004:	bl	334d4 <__flatcc_fb_coerce_scalar_type@@Base>
   30008:	cmp	r0, #0
   3000c:	bne	30048 <__flatcc_fb_clear_parser@@Base+0x1398>
   30010:	add	ip, sp, #16
   30014:	add	r3, sp, #32
   30018:	ldm	r3, {r0, r1, r2, r3}
   3001c:	stm	ip, {r0, r1, r2, r3}
   30020:	ldr	r4, [r6, #20]
   30024:	cmp	r4, #0
   30028:	beq	3075c <__flatcc_fb_clear_parser@@Base+0x1aac>
   3002c:	mov	sl, #1
   30030:	b	30674 <__flatcc_fb_clear_parser@@Base+0x19c4>
   30034:	mov	r3, #0
   30038:	strb	r3, [sp, #32]
   3003c:	mov	r3, #6
   30040:	strh	r3, [sp, #40]	; 0x28
   30044:	b	30010 <__flatcc_fb_clear_parser@@Base+0x1360>
   30048:	mov	r3, #0
   3004c:	ldr	r2, [pc, #1892]	; 307b8 <__flatcc_fb_clear_parser@@Base+0x1b08>
   30050:	mov	r1, r3
   30054:	mov	r0, r5
   30058:	bl	2eea8 <__flatcc_fb_clear_parser@@Base+0x1f8>
   3005c:	mvn	r0, #0
   30060:	b	30754 <__flatcc_fb_clear_parser@@Base+0x1aa4>
   30064:	ldrh	r3, [r4, #8]
   30068:	cmp	r3, #5
   3006c:	bne	30174 <__flatcc_fb_clear_parser@@Base+0x14c4>
   30070:	ldr	r3, [r4, #64]	; 0x40
   30074:	cmp	r3, #0
   30078:	bne	30190 <__flatcc_fb_clear_parser@@Base+0x14e0>
   3007c:	cmp	fp, #4
   30080:	beq	301a4 <__flatcc_fb_clear_parser@@Base+0x14f4>
   30084:	ldrh	r2, [r4, #56]	; 0x38
   30088:	eor	r3, sl, #1
   3008c:	cmp	r2, #0
   30090:	movne	r3, #0
   30094:	andeq	r3, r3, #1
   30098:	cmp	r3, #0
   3009c:	beq	300bc <__flatcc_fb_clear_parser@@Base+0x140c>
   300a0:	ldrh	r3, [sp, #40]	; 0x28
   300a4:	cmp	r3, #5
   300a8:	beq	30438 <__flatcc_fb_clear_parser@@Base+0x1788>
   300ac:	cmp	r3, #4
   300b0:	beq	30488 <__flatcc_fb_clear_parser@@Base+0x17d8>
   300b4:	cmp	r3, #6
   300b8:	beq	304d8 <__flatcc_fb_clear_parser@@Base+0x1828>
   300bc:	ldr	r3, [sp]
   300c0:	cmp	r3, #0
   300c4:	beq	30540 <__flatcc_fb_clear_parser@@Base+0x1890>
   300c8:	ldrh	r3, [r4, #56]	; 0x38
   300cc:	cmp	r3, #0
   300d0:	beq	300ec <__flatcc_fb_clear_parser@@Base+0x143c>
   300d4:	cmp	r3, #5
   300d8:	bne	30508 <__flatcc_fb_clear_parser@@Base+0x1858>
   300dc:	add	ip, sp, #32
   300e0:	add	r3, r4, #48	; 0x30
   300e4:	ldm	r3, {r0, r1, r2, r3}
   300e8:	stm	ip, {r0, r1, r2, r3}
   300ec:	ldrd	r0, [sp, #32]
   300f0:	ldr	r3, [r6, #40]	; 0x28
   300f4:	ldr	r2, [pc, #1656]	; 30774 <__flatcc_fb_clear_parser@@Base+0x1ac4>
   300f8:	add	r3, r2, r3, lsl #2
   300fc:	ldr	r2, [r3, #16]
   30100:	lsl	r2, r2, #3
   30104:	mov	r3, #0
   30108:	cmp	r1, r3
   3010c:	cmpeq	r0, r2
   30110:	bcs	30524 <__flatcc_fb_clear_parser@@Base+0x1874>
   30114:	mov	r2, #1
   30118:	sub	r3, r0, #32
   3011c:	rsb	r1, r0, #32
   30120:	lsl	r3, r2, r3
   30124:	orr	r3, r3, r2, lsr r1
   30128:	lsl	r0, r2, r0
   3012c:	str	r0, [r4, #48]	; 0x30
   30130:	str	r3, [r4, #52]	; 0x34
   30134:	mov	r3, #5
   30138:	strh	r3, [r4, #56]	; 0x38
   3013c:	add	r3, r4, #48	; 0x30
   30140:	ldr	r2, [r6, #40]	; 0x28
   30144:	mov	r1, r4
   30148:	mov	r0, r5
   3014c:	bl	334d4 <__flatcc_fb_coerce_scalar_type@@Base>
   30150:	cmp	r0, #0
   30154:	beq	3055c <__flatcc_fb_clear_parser@@Base+0x18ac>
   30158:	mov	r3, #0
   3015c:	ldr	r2, [pc, #1624]	; 307bc <__flatcc_fb_clear_parser@@Base+0x1b0c>
   30160:	ldr	r1, [r4, #4]
   30164:	mov	r0, r5
   30168:	bl	2eea8 <__flatcc_fb_clear_parser@@Base+0x1f8>
   3016c:	mvn	r0, #0
   30170:	b	30754 <__flatcc_fb_clear_parser@@Base+0x1aa4>
   30174:	mov	r3, #0
   30178:	ldr	r2, [pc, #1600]	; 307c0 <__flatcc_fb_clear_parser@@Base+0x1b10>
   3017c:	ldr	r1, [r4, #4]
   30180:	mov	r0, r5
   30184:	bl	2eea8 <__flatcc_fb_clear_parser@@Base+0x1f8>
   30188:	mvn	r0, #0
   3018c:	b	30754 <__flatcc_fb_clear_parser@@Base+0x1aa4>
   30190:	ldr	r3, [pc, #1508]	; 3077c <__flatcc_fb_clear_parser@@Base+0x1acc>
   30194:	ldr	r2, [pc, #1576]	; 307c4 <__flatcc_fb_clear_parser@@Base+0x1b14>
   30198:	ldr	r1, [pc, #1508]	; 30784 <__flatcc_fb_clear_parser@@Base+0x1ad4>
   3019c:	ldr	r0, [pc, #1572]	; 307c8 <__flatcc_fb_clear_parser@@Base+0x1b18>
   301a0:	bl	14148 <__assert_fail@plt>
   301a4:	ldr	r1, [r4, #4]
   301a8:	add	r3, r5, #68	; 0x44
   301ac:	cmp	r1, r3
   301b0:	moveq	r3, #0
   301b4:	strheq	r3, [r4, #24]
   301b8:	beq	30084 <__flatcc_fb_clear_parser@@Base+0x13d4>
   301bc:	ldrh	r3, [r4, #24]
   301c0:	cmp	r3, #10
   301c4:	beq	301f4 <__flatcc_fb_clear_parser@@Base+0x1544>
   301c8:	cmp	r3, #12
   301cc:	beq	30204 <__flatcc_fb_clear_parser@@Base+0x1554>
   301d0:	cmp	r3, #1
   301d4:	beq	30664 <__flatcc_fb_clear_parser@@Base+0x19b4>
   301d8:	mov	r3, #0
   301dc:	ldr	r2, [pc, #1512]	; 307cc <__flatcc_fb_clear_parser@@Base+0x1b1c>
   301e0:	mov	r0, r5
   301e4:	bl	2eea8 <__flatcc_fb_clear_parser@@Base+0x1f8>
   301e8:	mov	r3, #1
   301ec:	strh	r3, [r4, #24]
   301f0:	b	30664 <__flatcc_fb_clear_parser@@Base+0x19b4>
   301f4:	mov	r2, #0
   301f8:	mov	r3, #0
   301fc:	strd	r2, [r4, #88]	; 0x58
   30200:	b	30084 <__flatcc_fb_clear_parser@@Base+0x13d4>
   30204:	ldr	r3, [r6, #12]
   30208:	mov	lr, r3
   3020c:	ldr	r1, [r4, #16]
   30210:	cmp	r1, #0
   30214:	beq	302b8 <__flatcc_fb_clear_parser@@Base+0x1608>
   30218:	mov	ip, r1
   3021c:	mov	r2, #0
   30220:	b	3022c <__flatcc_fb_clear_parser@@Base+0x157c>
   30224:	mov	r2, r0
   30228:	mov	ip, r3
   3022c:	ldr	r3, [ip]
   30230:	add	r0, r2, #1
   30234:	cmp	r3, #0
   30238:	bne	30224 <__flatcc_fb_clear_parser@@Base+0x1574>
   3023c:	str	ip, [sp, #4]
   30240:	cmp	ip, #0
   30244:	beq	302b8 <__flatcc_fb_clear_parser@@Base+0x1608>
   30248:	adds	ip, lr, #0
   3024c:	movne	ip, #1
   30250:	cmp	r0, #1
   30254:	movne	ip, #0
   30258:	cmp	ip, #0
   3025c:	bne	302d8 <__flatcc_fb_clear_parser@@Base+0x1628>
   30260:	cmp	r0, #1
   30264:	moveq	r1, r3
   30268:	cmn	r5, #352	; 0x160
   3026c:	beq	302b8 <__flatcc_fb_clear_parser@@Base+0x1608>
   30270:	ldr	r0, [r5, #412]	; 0x19c
   30274:	cmp	r0, #0
   30278:	beq	302b8 <__flatcc_fb_clear_parser@@Base+0x1608>
   3027c:	rsb	r2, r2, #0
   30280:	bl	29418 <fb_scope_table_find@@Base>
   30284:	cmp	r0, #0
   30288:	beq	302b8 <__flatcc_fb_clear_parser@@Base+0x1608>
   3028c:	ldr	r3, [sp, #4]
   30290:	ldr	r3, [r3, #4]
   30294:	ldr	r2, [r3, #4]
   30298:	ldr	r1, [r3]
   3029c:	add	r0, r0, #4
   302a0:	bl	284c8 <fb_symbol_table_find@@Base>
   302a4:	subs	r7, r0, #0
   302a8:	beq	302b8 <__flatcc_fb_clear_parser@@Base+0x1608>
   302ac:	ldrh	r3, [r7, #8]
   302b0:	cmp	r3, #4
   302b4:	bls	30404 <__flatcc_fb_clear_parser@@Base+0x1754>
   302b8:	mov	r3, r4
   302bc:	ldr	r2, [pc, #1292]	; 307d0 <__flatcc_fb_clear_parser@@Base+0x1b20>
   302c0:	ldr	r1, [r4, #16]
   302c4:	mov	r0, r5
   302c8:	bl	2ba04 <error_ref_sym@@Base>
   302cc:	mov	r3, #1
   302d0:	strh	r3, [r4, #24]
   302d4:	b	30664 <__flatcc_fb_clear_parser@@Base+0x19b4>
   302d8:	add	r3, r5, #524	; 0x20c
   302dc:	str	r3, [sp, #8]
   302e0:	add	r9, r5, #352	; 0x160
   302e4:	str	sl, [sp, #12]
   302e8:	mov	sl, lr
   302ec:	b	30370 <__flatcc_fb_clear_parser@@Base+0x16c0>
   302f0:	ldr	r1, [r7, #16]
   302f4:	ldr	r0, [sp, #8]
   302f8:	bl	27e80 <ptr_set_find_item@@Base>
   302fc:	cmp	r0, #0
   30300:	beq	3039c <__flatcc_fb_clear_parser@@Base+0x16ec>
   30304:	ldr	sl, [sp, #12]
   30308:	ldrh	r3, [r7, #8]
   3030c:	cmp	r3, #1
   30310:	bls	3041c <__flatcc_fb_clear_parser@@Base+0x176c>
   30314:	ldr	r3, [r7, #4]
   30318:	ldr	r2, [pc, #1204]	; 307d4 <__flatcc_fb_clear_parser@@Base+0x1b24>
   3031c:	ldr	r1, [r4, #4]
   30320:	mov	r0, r5
   30324:	bl	2eea8 <__flatcc_fb_clear_parser@@Base+0x1f8>
   30328:	mov	r3, #1
   3032c:	strh	r3, [r4, #24]
   30330:	b	30664 <__flatcc_fb_clear_parser@@Base+0x19b4>
   30334:	sub	r8, r8, #1
   30338:	add	r7, r7, #1
   3033c:	cmp	r8, #1
   30340:	ble	303d8 <__flatcc_fb_clear_parser@@Base+0x1728>
   30344:	cmp	r9, #0
   30348:	beq	30334 <__flatcc_fb_clear_parser@@Base+0x1684>
   3034c:	ldr	r0, [r5, #412]	; 0x19c
   30350:	cmp	r0, #0
   30354:	beq	30334 <__flatcc_fb_clear_parser@@Base+0x1684>
   30358:	mov	r2, r7
   3035c:	ldr	r1, [sl]
   30360:	bl	29418 <fb_scope_table_find@@Base>
   30364:	cmp	r0, #0
   30368:	beq	30334 <__flatcc_fb_clear_parser@@Base+0x1684>
   3036c:	mov	sl, r0
   30370:	ldr	r3, [sp, #4]
   30374:	ldr	r3, [r3, #4]
   30378:	ldr	r2, [r3, #4]
   3037c:	ldr	r1, [r3]
   30380:	add	r0, sl, #4
   30384:	bl	284c8 <fb_symbol_table_find@@Base>
   30388:	subs	r7, r0, #0
   3038c:	beq	3039c <__flatcc_fb_clear_parser@@Base+0x16ec>
   30390:	ldrh	r3, [r7, #8]
   30394:	cmp	r3, #4
   30398:	bls	302f0 <__flatcc_fb_clear_parser@@Base+0x1640>
   3039c:	cmp	sl, #0
   303a0:	beq	302b8 <__flatcc_fb_clear_parser@@Base+0x1608>
   303a4:	ldr	r3, [sl]
   303a8:	cmp	r3, #0
   303ac:	beq	302b8 <__flatcc_fb_clear_parser@@Base+0x1608>
   303b0:	mov	r7, #0
   303b4:	add	r7, r7, #1
   303b8:	ldr	r3, [r3]
   303bc:	cmp	r3, #0
   303c0:	bne	303b4 <__flatcc_fb_clear_parser@@Base+0x1704>
   303c4:	cmp	r7, #0
   303c8:	beq	302b8 <__flatcc_fb_clear_parser@@Base+0x1608>
   303cc:	mov	r8, r7
   303d0:	rsb	r7, r7, #1
   303d4:	b	3033c <__flatcc_fb_clear_parser@@Base+0x168c>
   303d8:	cmp	r9, #0
   303dc:	beq	302b8 <__flatcc_fb_clear_parser@@Base+0x1608>
   303e0:	ldr	r0, [r5, #412]	; 0x19c
   303e4:	cmp	r0, #0
   303e8:	beq	302b8 <__flatcc_fb_clear_parser@@Base+0x1608>
   303ec:	mov	r2, #0
   303f0:	mov	r1, r2
   303f4:	bl	29418 <fb_scope_table_find@@Base>
   303f8:	subs	sl, r0, #0
   303fc:	bne	30370 <__flatcc_fb_clear_parser@@Base+0x16c0>
   30400:	b	302b8 <__flatcc_fb_clear_parser@@Base+0x1608>
   30404:	ldr	r1, [r7, #16]
   30408:	add	r0, r5, #524	; 0x20c
   3040c:	bl	27e80 <ptr_set_find_item@@Base>
   30410:	cmp	r0, #0
   30414:	bne	30308 <__flatcc_fb_clear_parser@@Base+0x1658>
   30418:	b	302b8 <__flatcc_fb_clear_parser@@Base+0x1608>
   3041c:	mov	r3, #14
   30420:	strh	r3, [r4, #24]
   30424:	str	r7, [r4, #16]
   30428:	mov	r2, #0
   3042c:	mov	r3, #0
   30430:	strd	r2, [r4, #88]	; 0x58
   30434:	b	30084 <__flatcc_fb_clear_parser@@Base+0x13d4>
   30438:	ldr	r3, [r6, #40]	; 0x28
   3043c:	cmp	r3, #6
   30440:	beq	30458 <__flatcc_fb_clear_parser@@Base+0x17a8>
   30444:	ldrd	r2, [sp, #32]
   30448:	adds	r2, r2, #1
   3044c:	adc	r3, r3, #0
   30450:	strd	r2, [sp, #32]
   30454:	b	300bc <__flatcc_fb_clear_parser@@Base+0x140c>
   30458:	mvn	r0, #0
   3045c:	mvn	r1, #0
   30460:	ldrd	r2, [sp, #32]
   30464:	cmp	r3, r1
   30468:	cmpeq	r2, r0
   3046c:	bne	30444 <__flatcc_fb_clear_parser@@Base+0x1794>
   30470:	mov	r3, #0
   30474:	ldr	r2, [pc, #860]	; 307d8 <__flatcc_fb_clear_parser@@Base+0x1b28>
   30478:	ldr	r1, [r4, #4]
   3047c:	mov	r0, r5
   30480:	bl	2eea8 <__flatcc_fb_clear_parser@@Base+0x1f8>
   30484:	b	30444 <__flatcc_fb_clear_parser@@Base+0x1794>
   30488:	ldr	r3, [r6, #40]	; 0x28
   3048c:	cmp	r3, #6
   30490:	beq	304a8 <__flatcc_fb_clear_parser@@Base+0x17f8>
   30494:	ldrd	r2, [sp, #32]
   30498:	adds	r2, r2, #1
   3049c:	adc	r3, r3, #0
   304a0:	strd	r2, [sp, #32]
   304a4:	b	300bc <__flatcc_fb_clear_parser@@Base+0x140c>
   304a8:	mvn	r0, #0
   304ac:	mvn	r1, #-2147483648	; 0x80000000
   304b0:	ldrd	r2, [sp, #32]
   304b4:	cmp	r3, r1
   304b8:	cmpeq	r2, r0
   304bc:	bne	30494 <__flatcc_fb_clear_parser@@Base+0x17e4>
   304c0:	mov	r3, #0
   304c4:	ldr	r2, [pc, #784]	; 307dc <__flatcc_fb_clear_parser@@Base+0x1b2c>
   304c8:	ldr	r1, [r4, #4]
   304cc:	mov	r0, r5
   304d0:	bl	2eea8 <__flatcc_fb_clear_parser@@Base+0x1f8>
   304d4:	b	30494 <__flatcc_fb_clear_parser@@Base+0x17e4>
   304d8:	ldrb	r3, [sp, #32]
   304dc:	cmp	r3, #1
   304e0:	beq	304f0 <__flatcc_fb_clear_parser@@Base+0x1840>
   304e4:	mov	r3, #1
   304e8:	strb	r3, [sp, #32]
   304ec:	b	300bc <__flatcc_fb_clear_parser@@Base+0x140c>
   304f0:	mov	r3, #0
   304f4:	ldr	r2, [pc, #740]	; 307e0 <__flatcc_fb_clear_parser@@Base+0x1b30>
   304f8:	ldr	r1, [r4, #4]
   304fc:	mov	r0, r5
   30500:	bl	2eea8 <__flatcc_fb_clear_parser@@Base+0x1f8>
   30504:	b	304e4 <__flatcc_fb_clear_parser@@Base+0x1834>
   30508:	mov	r3, #0
   3050c:	ldr	r2, [pc, #720]	; 307e4 <__flatcc_fb_clear_parser@@Base+0x1b34>
   30510:	ldr	r1, [r4, #4]
   30514:	mov	r0, r5
   30518:	bl	2eea8 <__flatcc_fb_clear_parser@@Base+0x1f8>
   3051c:	mvn	r0, #0
   30520:	b	30754 <__flatcc_fb_clear_parser@@Base+0x1aa4>
   30524:	mov	r3, #0
   30528:	ldr	r2, [pc, #652]	; 307bc <__flatcc_fb_clear_parser@@Base+0x1b0c>
   3052c:	ldr	r1, [r4, #4]
   30530:	mov	r0, r5
   30534:	bl	2eea8 <__flatcc_fb_clear_parser@@Base+0x1f8>
   30538:	mvn	r0, #0
   3053c:	b	30754 <__flatcc_fb_clear_parser@@Base+0x1aa4>
   30540:	ldrh	r3, [r4, #56]	; 0x38
   30544:	cmp	r3, #0
   30548:	bne	305c0 <__flatcc_fb_clear_parser@@Base+0x1910>
   3054c:	add	ip, r4, #48	; 0x30
   30550:	add	r3, sp, #32
   30554:	ldm	r3, {r0, r1, r2, r3}
   30558:	stm	ip, {r0, r1, r2, r3}
   3055c:	cmp	sl, #0
   30560:	bne	30608 <__flatcc_fb_clear_parser@@Base+0x1958>
   30564:	ldr	r3, [r5, #180]	; 0xb4
   30568:	cmp	r3, #0
   3056c:	beq	30608 <__flatcc_fb_clear_parser@@Base+0x1958>
   30570:	ldrh	r3, [sp, #40]	; 0x28
   30574:	cmp	r3, #5
   30578:	beq	305f4 <__flatcc_fb_clear_parser@@Base+0x1944>
   3057c:	cmp	r3, #4
   30580:	beq	306bc <__flatcc_fb_clear_parser@@Base+0x1a0c>
   30584:	cmp	r3, #6
   30588:	bne	30608 <__flatcc_fb_clear_parser@@Base+0x1958>
   3058c:	ldrb	r2, [sp, #32]
   30590:	ldrb	r3, [sp, #16]
   30594:	cmp	r2, r3
   30598:	bhi	30608 <__flatcc_fb_clear_parser@@Base+0x1958>
   3059c:	mov	r3, #0
   305a0:	ldr	r2, [pc, #576]	; 307e8 <__flatcc_fb_clear_parser@@Base+0x1b38>
   305a4:	ldr	r1, [r4, #4]
   305a8:	mov	r0, r5
   305ac:	bl	2eea8 <__flatcc_fb_clear_parser@@Base+0x1f8>
   305b0:	mov	r3, #1
   305b4:	strh	r3, [r4, #56]	; 0x38
   305b8:	mvn	r0, #0
   305bc:	b	30754 <__flatcc_fb_clear_parser@@Base+0x1aa4>
   305c0:	add	ip, sp, #32
   305c4:	add	r3, r4, #48	; 0x30
   305c8:	ldm	r3, {r0, r1, r2, r3}
   305cc:	stm	ip, {r0, r1, r2, r3}
   305d0:	mov	r3, ip
   305d4:	ldr	r2, [r6, #40]	; 0x28
   305d8:	mov	r1, r4
   305dc:	mov	r0, r5
   305e0:	bl	334d4 <__flatcc_fb_coerce_scalar_type@@Base>
   305e4:	cmp	r0, #0
   305e8:	beq	3054c <__flatcc_fb_clear_parser@@Base+0x189c>
   305ec:	mvn	r0, #0
   305f0:	b	30754 <__flatcc_fb_clear_parser@@Base+0x1aa4>
   305f4:	ldrd	r2, [sp, #16]
   305f8:	ldrd	r0, [sp, #32]
   305fc:	cmp	r1, r3
   30600:	cmpeq	r0, r2
   30604:	bls	306d0 <__flatcc_fb_clear_parser@@Base+0x1a20>
   30608:	add	ip, sp, #16
   3060c:	add	r3, sp, #32
   30610:	ldm	r3, {r0, r1, r2, r3}
   30614:	stm	ip, {r0, r1, r2, r3}
   30618:	mov	r2, #1
   3061c:	add	r1, r4, #48	; 0x30
   30620:	add	r0, r6, #72	; 0x48
   30624:	bl	3a6f8 <fb_value_set_insert_item@@Base>
   30628:	cmp	r0, #0
   3062c:	beq	30644 <__flatcc_fb_clear_parser@@Base+0x1994>
   30630:	cmp	fp, #4
   30634:	beq	3072c <__flatcc_fb_clear_parser@@Base+0x1a7c>
   30638:	ldrh	r3, [r4, #10]
   3063c:	orr	r3, r3, #4
   30640:	strh	r3, [r4, #10]
   30644:	ldr	r3, [r4, #64]	; 0x40
   30648:	cmp	r3, #0
   3064c:	beq	30664 <__flatcc_fb_clear_parser@@Base+0x19b4>
   30650:	mov	r3, #0
   30654:	ldr	r2, [pc, #400]	; 307ec <__flatcc_fb_clear_parser@@Base+0x1b3c>
   30658:	ldr	r1, [r4, #4]
   3065c:	mov	r0, r5
   30660:	bl	2eea8 <__flatcc_fb_clear_parser@@Base+0x1f8>
   30664:	ldr	r4, [r4]
   30668:	mov	sl, #0
   3066c:	cmp	r4, sl
   30670:	beq	30750 <__flatcc_fb_clear_parser@@Base+0x1aa0>
   30674:	mov	r2, #1
   30678:	mov	r1, r4
   3067c:	add	r0, r6, #56	; 0x38
   30680:	bl	2849c <fb_symbol_table_insert_item@@Base>
   30684:	cmp	r0, #0
   30688:	beq	30064 <__flatcc_fb_clear_parser@@Base+0x13b4>
   3068c:	ldr	r3, [r0, #4]
   30690:	add	r2, r5, #68	; 0x44
   30694:	cmp	r3, r2
   30698:	moveq	r3, #0
   3069c:	ldreq	r2, [pc, #332]	; 307f0 <__flatcc_fb_clear_parser@@Base+0x1b40>
   306a0:	ldrne	r2, [pc, #332]	; 307f4 <__flatcc_fb_clear_parser@@Base+0x1b44>
   306a4:	ldr	r1, [r4, #4]
   306a8:	mov	r0, r5
   306ac:	bl	2eea8 <__flatcc_fb_clear_parser@@Base+0x1f8>
   306b0:	mov	r3, #1
   306b4:	strh	r3, [r4, #24]
   306b8:	b	30664 <__flatcc_fb_clear_parser@@Base+0x19b4>
   306bc:	ldrd	r0, [sp, #16]
   306c0:	ldrd	r2, [sp, #32]
   306c4:	cmp	r0, r2
   306c8:	sbcs	r3, r1, r3
   306cc:	blt	30608 <__flatcc_fb_clear_parser@@Base+0x1958>
   306d0:	cmp	fp, #4
   306d4:	bne	306e4 <__flatcc_fb_clear_parser@@Base+0x1a34>
   306d8:	ldrd	r2, [sp, #16]
   306dc:	orrs	r3, r2, r3
   306e0:	beq	30708 <__flatcc_fb_clear_parser@@Base+0x1a58>
   306e4:	mov	r3, #0
   306e8:	ldr	r2, [pc, #264]	; 307f8 <__flatcc_fb_clear_parser@@Base+0x1b48>
   306ec:	ldr	r1, [r4, #4]
   306f0:	mov	r0, r5
   306f4:	bl	2eea8 <__flatcc_fb_clear_parser@@Base+0x1f8>
   306f8:	mov	r3, #1
   306fc:	strh	r3, [r4, #56]	; 0x38
   30700:	mvn	r0, #0
   30704:	b	30754 <__flatcc_fb_clear_parser@@Base+0x1aa4>
   30708:	mov	r3, #0
   3070c:	ldr	r2, [pc, #232]	; 307fc <__flatcc_fb_clear_parser@@Base+0x1b4c>
   30710:	ldr	r1, [r4, #4]
   30714:	mov	r0, r5
   30718:	bl	2eea8 <__flatcc_fb_clear_parser@@Base+0x1f8>
   3071c:	mov	r3, #1
   30720:	strh	r3, [r4, #56]	; 0x38
   30724:	mvn	r0, #0
   30728:	b	30754 <__flatcc_fb_clear_parser@@Base+0x1aa4>
   3072c:	mov	r3, #0
   30730:	ldr	r2, [pc, #200]	; 30800 <__flatcc_fb_clear_parser@@Base+0x1b50>
   30734:	ldr	r1, [r4, #4]
   30738:	mov	r0, r5
   3073c:	bl	2eea8 <__flatcc_fb_clear_parser@@Base+0x1f8>
   30740:	mov	r3, #1
   30744:	strh	r3, [r4, #56]	; 0x38
   30748:	mvn	r0, #0
   3074c:	b	30754 <__flatcc_fb_clear_parser@@Base+0x1aa4>
   30750:	mov	r0, sl
   30754:	add	sp, sp, #100	; 0x64
   30758:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3075c:	mov	r0, #0
   30760:	b	30754 <__flatcc_fb_clear_parser@@Base+0x1aa4>
   30764:	mov	r3, #0
   30768:	strh	r3, [r6, #92]	; 0x5c
   3076c:	str	r3, [sp]
   30770:	b	2ffd8 <__flatcc_fb_clear_parser@@Base+0x1328>
   30774:	andeq	r4, r5, r0, lsl r5
   30778:	andeq	r4, r5, r0, ror #17
   3077c:	andeq	r4, r5, ip, lsl #11
   30780:	andeq	r0, r0, sp, asr #9
   30784:	andeq	r4, r5, r4, lsr r6
   30788:	andeq	r4, r5, r0, ror #23
   3078c:	andeq	r4, r5, r0, lsl #24
   30790:	andeq	r4, r5, r8, lsl ip
   30794:	andeq	r4, r5, ip, asr #24
   30798:	andeq	r4, r5, r8, ror #16
   3079c:	andeq	r4, r5, r8, lsl #17
   307a0:			; <UNDEFINED> instruction: 0x000548b8
   307a4:	andeq	r4, r5, ip, lsr #18
   307a8:	andeq	r4, r5, r8, lsl #18
   307ac:	andeq	r4, r5, r8, asr r9
   307b0:	andeq	r4, r5, ip, ror r9
   307b4:	andeq	r4, r5, r8, lsr #19
   307b8:	andeq	r4, r5, ip, lsl #25
   307bc:			; <UNDEFINED> instruction: 0x00054eb4
   307c0:	andeq	r4, r5, r8, lsl #26
   307c4:	andeq	r0, r0, r3, lsr #10
   307c8:	andeq	r4, r5, r4, lsr sp
   307cc:	andeq	r4, r5, ip, asr #26
   307d0:	muleq	r5, r4, sp
   307d4:	andeq	r4, r5, r4, asr #27
   307d8:	andeq	r4, r5, ip, lsl #28
   307dc:	andeq	r4, r5, ip, lsr #28
   307e0:	andeq	r4, r5, r8, asr #28
   307e4:	andeq	r4, r5, r8, ror lr
   307e8:	andeq	r4, r5, r4, asr pc
   307ec:	andeq	r4, r5, r0, ror #31
   307f0:	andeq	r4, r5, ip, asr #25
   307f4:	andeq	r4, r5, ip, ror #25
   307f8:	andeq	r4, r5, ip, lsr #30
   307fc:	andeq	r4, r5, r8, ror #29
   30800:	muleq	r5, r4, pc	; <UNPREDICTABLE>

00030804 <__flatcc_fb_build_schema@@Base>:
   30804:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   30808:	sub	sp, sp, #236	; 0xec
   3080c:	mov	fp, r0
   30810:	add	sl, r0, #352	; 0x160
   30814:	add	r3, r0, #524	; 0x20c
   30818:	str	r3, [sp, #16]
   3081c:	mov	r1, sl
   30820:	mov	r0, r3
   30824:	bl	27e80 <ptr_set_find_item@@Base>
   30828:	cmp	r0, #0
   3082c:	beq	30850 <__flatcc_fb_build_schema@@Base+0x4c>
   30830:	ldr	r5, [fp, #392]	; 0x188
   30834:	cmp	r5, #0
   30838:	beq	30954 <__flatcc_fb_build_schema@@Base+0x150>
   3083c:	mov	r7, #1
   30840:	ldr	r8, [pc, #3972]	; 317cc <__flatcc_fb_build_schema@@Base+0xfc8>
   30844:	ldr	r4, [pc, #3972]	; 317d0 <__flatcc_fb_build_schema@@Base+0xfcc>
   30848:	ldr	r6, [pc, #3972]	; 317d4 <__flatcc_fb_build_schema@@Base+0xfd0>
   3084c:	b	30870 <__flatcc_fb_build_schema@@Base+0x6c>
   30850:	ldr	r3, [pc, #3968]	; 317d8 <__flatcc_fb_build_schema@@Base+0xfd4>
   30854:	ldr	r2, [pc, #3968]	; 317dc <__flatcc_fb_build_schema@@Base+0xfd8>
   30858:	ldr	r1, [pc, #3968]	; 317e0 <__flatcc_fb_build_schema@@Base+0xfdc>
   3085c:	ldr	r0, [pc, #3968]	; 317e4 <__flatcc_fb_build_schema@@Base+0xfe0>
   30860:	bl	14148 <__assert_fail@plt>
   30864:	ldr	r5, [r5]
   30868:	cmp	r5, #0
   3086c:	beq	30954 <__flatcc_fb_build_schema@@Base+0x150>
   30870:	ldrh	r3, [r5, #8]
   30874:	cmp	r3, #4
   30878:	bhi	30864 <__flatcc_fb_build_schema@@Base+0x60>
   3087c:	ldr	r0, [r5, #12]
   30880:	cmp	r0, #0
   30884:	beq	333ac <__flatcc_fb_build_schema@@Base+0x2ba8>
   30888:	ldr	lr, [r0]
   3088c:	cmp	lr, #0
   30890:	beq	333ac <__flatcc_fb_build_schema@@Base+0x2ba8>
   30894:	ldr	r1, [pc, #3896]	; 317d4 <__flatcc_fb_build_schema@@Base+0xfd0>
   30898:	ldr	r3, [lr, #4]
   3089c:	ldr	r2, [r3]
   308a0:	ldr	ip, [r3, #4]
   308a4:	cmp	ip, #0
   308a8:	beq	308c4 <__flatcc_fb_build_schema@@Base+0xc0>
   308ac:	add	ip, r2, ip
   308b0:	ldrb	r3, [r2], #1
   308b4:	eor	r3, r3, r1
   308b8:	mul	r1, r4, r3
   308bc:	cmp	r2, ip
   308c0:	bne	308b0 <__flatcc_fb_build_schema@@Base+0xac>
   308c4:	eor	r3, r1, #46	; 0x2e
   308c8:	mul	r1, r4, r3
   308cc:	ldr	lr, [lr]
   308d0:	cmp	lr, #0
   308d4:	bne	30898 <__flatcc_fb_build_schema@@Base+0x94>
   308d8:	ldr	r2, [r5, #4]
   308dc:	ldr	r3, [r2]
   308e0:	ldr	r2, [r2, #4]
   308e4:	sub	ip, r2, #1
   308e8:	cmp	r2, #0
   308ec:	beq	33404 <__flatcc_fb_build_schema@@Base+0x2c00>
   308f0:	sub	r2, r3, #1
   308f4:	add	ip, r3, ip
   308f8:	ldrb	r3, [r2, #1]!
   308fc:	eor	r3, r3, r1
   30900:	mul	r1, r4, r3
   30904:	cmp	ip, r2
   30908:	bne	308f8 <__flatcc_fb_build_schema@@Base+0xf4>
   3090c:	cmp	r1, #0
   30910:	moveq	r1, r6
   30914:	str	r1, [r5, #88]	; 0x58
   30918:	str	sl, [r5, #16]
   3091c:	cmp	r0, #0
   30920:	beq	30864 <__flatcc_fb_build_schema@@Base+0x60>
   30924:	mov	r2, r7
   30928:	mov	r1, r5
   3092c:	add	r0, r0, #4
   30930:	bl	2849c <fb_symbol_table_insert_item@@Base>
   30934:	cmp	r0, #0
   30938:	beq	30864 <__flatcc_fb_build_schema@@Base+0x60>
   3093c:	ldr	r3, [r0, #4]
   30940:	mov	r2, r8
   30944:	ldr	r1, [r5, #4]
   30948:	mov	r0, fp
   3094c:	bl	2eea8 <__flatcc_fb_clear_parser@@Base+0x1f8>
   30950:	b	30864 <__flatcc_fb_build_schema@@Base+0x60>
   30954:	ldr	r4, [fp, #356]	; 0x164
   30958:	cmp	r4, #0
   3095c:	beq	309dc <__flatcc_fb_build_schema@@Base+0x1d8>
   30960:	mov	r5, #1
   30964:	ldr	r7, [pc, #3708]	; 317e8 <__flatcc_fb_build_schema@@Base+0xfe4>
   30968:	mov	r6, #0
   3096c:	b	309a0 <__flatcc_fb_build_schema@@Base+0x19c>
   30970:	ldr	r3, [r4, #12]
   30974:	str	r3, [sp, #4]
   30978:	ldr	r3, [r4, #8]
   3097c:	str	r3, [sp]
   30980:	mov	r3, r6
   30984:	mov	r2, r7
   30988:	mov	r1, r6
   3098c:	mov	r0, fp
   30990:	bl	2a418 <__flatcc_error_report@@Base>
   30994:	ldr	r4, [r4]
   30998:	cmp	r4, #0
   3099c:	beq	309dc <__flatcc_fb_build_schema@@Base+0x1d8>
   309a0:	ldr	r0, [fp, #412]	; 0x19c
   309a4:	mov	r2, r5
   309a8:	mov	r1, r4
   309ac:	add	r0, r0, #16
   309b0:	bl	39f84 <fb_name_table_insert_item@@Base>
   309b4:	cmp	r0, #0
   309b8:	beq	30994 <__flatcc_fb_build_schema@@Base+0x190>
   309bc:	cmp	r4, #0
   309c0:	bne	30970 <__flatcc_fb_build_schema@@Base+0x16c>
   309c4:	mov	r3, r6
   309c8:	mov	r2, r7
   309cc:	mov	r1, r6
   309d0:	mov	r0, fp
   309d4:	bl	2eea8 <__flatcc_fb_clear_parser@@Base+0x1f8>
   309d8:	b	30994 <__flatcc_fb_build_schema@@Base+0x190>
   309dc:	ldr	r6, [pc, #3592]	; 317ec <__flatcc_fb_build_schema@@Base+0xfe8>
   309e0:	mov	r5, #0
   309e4:	mov	r7, #1
   309e8:	mov	r9, #2
   309ec:	mov	r8, r5
   309f0:	b	30a64 <__flatcc_fb_build_schema@@Base+0x260>
   309f4:	ldr	r3, [pc, #3572]	; 317f0 <__flatcc_fb_build_schema@@Base+0xfec>
   309f8:	ldr	r3, [r3]
   309fc:	mov	r2, #34	; 0x22
   30a00:	mov	r1, #1
   30a04:	ldr	r0, [pc, #3560]	; 317f4 <__flatcc_fb_build_schema@@Base+0xff0>
   30a08:	bl	1401c <fwrite@plt>
   30a0c:	mov	r0, #1
   30a10:	bl	14070 <exit@plt>
   30a14:	ldr	r3, [fp, #52]	; 0x34
   30a18:	add	r3, r3, #32
   30a1c:	str	r3, [fp, #52]	; 0x34
   30a20:	str	r5, [r4, #24]
   30a24:	ldr	r0, [r6, #4]!
   30a28:	str	r0, [r4, #8]
   30a2c:	bl	1407c <strlen@plt>
   30a30:	str	r0, [r4, #12]
   30a34:	strh	r9, [r4, #16]
   30a38:	str	r8, [r4]
   30a3c:	ldr	r0, [fp, #412]	; 0x19c
   30a40:	mov	r2, r7
   30a44:	mov	r1, r4
   30a48:	add	r0, r0, #16
   30a4c:	bl	39f84 <fb_name_table_insert_item@@Base>
   30a50:	cmp	r0, #0
   30a54:	strne	r5, [r0, #24]
   30a58:	add	r5, r5, #1
   30a5c:	cmp	r5, #12
   30a60:	beq	30aac <__flatcc_fb_build_schema@@Base+0x2a8>
   30a64:	ldr	r4, [fp, #52]	; 0x34
   30a68:	add	r2, r4, #32
   30a6c:	ldr	r3, [fp, #44]	; 0x2c
   30a70:	cmp	r2, r3
   30a74:	bls	30a14 <__flatcc_fb_build_schema@@Base+0x210>
   30a78:	mov	r1, r7
   30a7c:	mov	r0, #65536	; 0x10000
   30a80:	bl	13fa4 <calloc@plt>
   30a84:	cmp	r0, #0
   30a88:	beq	309f4 <__flatcc_fb_build_schema@@Base+0x1f0>
   30a8c:	ldr	r3, [fp, #48]	; 0x30
   30a90:	str	r3, [r0]
   30a94:	str	r0, [fp, #48]	; 0x30
   30a98:	add	r4, r0, #16
   30a9c:	str	r4, [fp, #52]	; 0x34
   30aa0:	add	r0, r0, #65536	; 0x10000
   30aa4:	str	r0, [fp, #44]	; 0x2c
   30aa8:	b	30a14 <__flatcc_fb_build_schema@@Base+0x210>
   30aac:	ldr	r3, [fp, #184]	; 0xb8
   30ab0:	cmp	r3, #0
   30ab4:	bne	30afc <__flatcc_fb_build_schema@@Base+0x2f8>
   30ab8:	ldr	r4, [fp, #392]	; 0x188
   30abc:	cmp	r4, #0
   30ac0:	beq	30bb0 <__flatcc_fb_build_schema@@Base+0x3ac>
   30ac4:	mov	r5, #1
   30ac8:	b	30ad8 <__flatcc_fb_build_schema@@Base+0x2d4>
   30acc:	ldr	r4, [r4]
   30ad0:	cmp	r4, #0
   30ad4:	beq	30afc <__flatcc_fb_build_schema@@Base+0x2f8>
   30ad8:	ldrh	r3, [r4, #8]
   30adc:	cmp	r3, #3
   30ae0:	bne	30acc <__flatcc_fb_build_schema@@Base+0x2c8>
   30ae4:	mov	r1, r4
   30ae8:	mov	r0, fp
   30aec:	bl	2fcc4 <__flatcc_fb_clear_parser@@Base+0x1014>
   30af0:	cmp	r0, #0
   30af4:	strhne	r5, [r4, #48]	; 0x30
   30af8:	b	30acc <__flatcc_fb_build_schema@@Base+0x2c8>
   30afc:	ldr	r4, [fp, #392]	; 0x188
   30b00:	cmp	r4, #0
   30b04:	beq	30bb0 <__flatcc_fb_build_schema@@Base+0x3ac>
   30b08:	mov	r5, #1
   30b0c:	b	30b30 <__flatcc_fb_build_schema@@Base+0x32c>
   30b10:	mov	r1, r4
   30b14:	mov	r0, fp
   30b18:	bl	2f360 <__flatcc_fb_clear_parser@@Base+0x6b0>
   30b1c:	cmp	r0, #0
   30b20:	strhne	r5, [r4, #48]	; 0x30
   30b24:	ldr	r4, [r4]
   30b28:	cmp	r4, #0
   30b2c:	beq	30bb0 <__flatcc_fb_build_schema@@Base+0x3ac>
   30b30:	ldrh	r3, [r4, #8]
   30b34:	cmp	r3, #4
   30b38:	ldrls	pc, [pc, r3, lsl #2]
   30b3c:	b	30b90 <__flatcc_fb_build_schema@@Base+0x38c>
   30b40:	andeq	r0, r3, r4, lsr #22
   30b44:	andeq	r0, r3, r0, lsl fp
   30b48:	andeq	r0, r3, r4, lsr #22
   30b4c:	andeq	r0, r3, r4, asr fp
   30b50:	andeq	r0, r3, r8, ror fp
   30b54:	ldr	r3, [fp, #184]	; 0xb8
   30b58:	cmp	r3, #0
   30b5c:	beq	30b24 <__flatcc_fb_build_schema@@Base+0x320>
   30b60:	mov	r1, r4
   30b64:	mov	r0, fp
   30b68:	bl	2fcc4 <__flatcc_fb_clear_parser@@Base+0x1014>
   30b6c:	cmp	r0, #0
   30b70:	strhne	r5, [r4, #48]	; 0x30
   30b74:	b	30b24 <__flatcc_fb_build_schema@@Base+0x320>
   30b78:	mov	r1, r4
   30b7c:	mov	r0, fp
   30b80:	bl	2fcc4 <__flatcc_fb_clear_parser@@Base+0x1014>
   30b84:	cmp	r0, #0
   30b88:	strhne	r5, [r4, #48]	; 0x30
   30b8c:	b	30b24 <__flatcc_fb_build_schema@@Base+0x320>
   30b90:	mov	r3, #0
   30b94:	ldr	r2, [pc, #3164]	; 317f8 <__flatcc_fb_build_schema@@Base+0xff4>
   30b98:	ldr	r1, [r4, #4]
   30b9c:	mov	r0, fp
   30ba0:	bl	2eea8 <__flatcc_fb_clear_parser@@Base+0x1f8>
   30ba4:	mvn	r0, #0
   30ba8:	add	sp, sp, #236	; 0xec
   30bac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   30bb0:	ldr	r4, [fp, #392]	; 0x188
   30bb4:	cmp	r4, #0
   30bb8:	beq	32e80 <__flatcc_fb_build_schema@@Base+0x267c>
   30bbc:	mov	r5, #1
   30bc0:	b	30bd0 <__flatcc_fb_build_schema@@Base+0x3cc>
   30bc4:	ldr	r4, [r4]
   30bc8:	cmp	r4, #0
   30bcc:	beq	30c00 <__flatcc_fb_build_schema@@Base+0x3fc>
   30bd0:	ldrh	r3, [r4, #8]
   30bd4:	cmp	r3, #1
   30bd8:	bne	30bc4 <__flatcc_fb_build_schema@@Base+0x3c0>
   30bdc:	ldrh	r3, [r4, #48]	; 0x30
   30be0:	cmp	r3, #1
   30be4:	beq	30bc4 <__flatcc_fb_build_schema@@Base+0x3c0>
   30be8:	mov	r1, r4
   30bec:	mov	r0, fp
   30bf0:	bl	2eec8 <__flatcc_fb_clear_parser@@Base+0x218>
   30bf4:	cmp	r0, #0
   30bf8:	strhne	r5, [r4, #48]	; 0x30
   30bfc:	b	30bc4 <__flatcc_fb_build_schema@@Base+0x3c0>
   30c00:	ldr	r3, [fp, #392]	; 0x188
   30c04:	str	r3, [sp, #12]
   30c08:	cmp	r3, #0
   30c0c:	beq	32e80 <__flatcc_fb_build_schema@@Base+0x267c>
   30c10:	mov	r9, sl
   30c14:	mov	r8, fp
   30c18:	b	32720 <__flatcc_fb_build_schema@@Base+0x1f1c>
   30c1c:	ldr	r3, [sp, #12]
   30c20:	ldrh	r3, [r3, #48]	; 0x30
   30c24:	str	r3, [sp, #56]	; 0x38
   30c28:	cmp	r3, #1
   30c2c:	beq	3270c <__flatcc_fb_build_schema@@Base+0x1f08>
   30c30:	cmp	r3, #0
   30c34:	bne	30c70 <__flatcc_fb_build_schema@@Base+0x46c>
   30c38:	ldr	r3, [sp, #12]
   30c3c:	ldr	r4, [r3, #28]
   30c40:	mov	r2, #48	; 0x30
   30c44:	mov	r1, #0
   30c48:	add	r0, sp, #84	; 0x54
   30c4c:	bl	140ac <memset@plt>
   30c50:	cmp	r4, #0
   30c54:	beq	30e98 <__flatcc_fb_build_schema@@Base+0x694>
   30c58:	ldr	r6, [sp, #56]	; 0x38
   30c5c:	mov	r5, #100	; 0x64
   30c60:	ldr	r7, [pc, #2964]	; 317fc <__flatcc_fb_build_schema@@Base+0xff8>
   30c64:	ldr	fp, [pc, #2964]	; 31800 <__flatcc_fb_build_schema@@Base+0xffc>
   30c68:	ldr	sl, [pc, #2964]	; 31804 <__flatcc_fb_build_schema@@Base+0x1000>
   30c6c:	b	30cec <__flatcc_fb_build_schema@@Base+0x4e8>
   30c70:	ldr	r3, [pc, #2960]	; 31808 <__flatcc_fb_build_schema@@Base+0x1004>
   30c74:	ldr	r2, [pc, #2960]	; 3180c <__flatcc_fb_build_schema@@Base+0x1008>
   30c78:	ldr	r1, [pc, #2912]	; 317e0 <__flatcc_fb_build_schema@@Base+0xfdc>
   30c7c:	ldr	r0, [pc, #3180]	; 318f0 <__flatcc_fb_build_schema@@Base+0x10ec>
   30c80:	bl	14148 <__assert_fail@plt>
   30c84:	mov	r3, #0
   30c88:	ldr	r2, [pc, #2944]	; 31810 <__flatcc_fb_build_schema@@Base+0x100c>
   30c8c:	ldr	r1, [r4, #4]
   30c90:	mov	r0, r8
   30c94:	bl	2eea8 <__flatcc_fb_clear_parser@@Base+0x1f8>
   30c98:	b	30cc8 <__flatcc_fb_build_schema@@Base+0x4c4>
   30c9c:	mov	r3, #0
   30ca0:	ldr	r2, [pc, #2924]	; 31814 <__flatcc_fb_build_schema@@Base+0x1010>
   30ca4:	ldr	r1, [r4, #4]
   30ca8:	mov	r0, r8
   30cac:	bl	2eea8 <__flatcc_fb_clear_parser@@Base+0x1f8>
   30cb0:	b	30cc8 <__flatcc_fb_build_schema@@Base+0x4c4>
   30cb4:	mov	r3, #0
   30cb8:	ldr	r2, [pc, #2904]	; 31818 <__flatcc_fb_build_schema@@Base+0x1014>
   30cbc:	ldr	r1, [r4, #4]
   30cc0:	mov	r0, r8
   30cc4:	bl	2eea8 <__flatcc_fb_clear_parser@@Base+0x1f8>
   30cc8:	ldr	r4, [r4]
   30ccc:	subs	r5, r5, #1
   30cd0:	movne	r3, #1
   30cd4:	moveq	r3, #0
   30cd8:	cmp	r4, #0
   30cdc:	moveq	r3, #0
   30ce0:	andne	r3, r3, #1
   30ce4:	cmp	r3, #0
   30ce8:	beq	30e34 <__flatcc_fb_build_schema@@Base+0x630>
   30cec:	ldr	r3, [r4, #4]
   30cf0:	ldr	r0, [r8, #412]	; 0x19c
   30cf4:	ldr	r2, [r3, #4]
   30cf8:	ldr	r1, [r3]
   30cfc:	add	r0, r0, #16
   30d00:	bl	39fac <fb_name_table_find@@Base>
   30d04:	cmp	r0, #0
   30d08:	beq	30c84 <__flatcc_fb_build_schema@@Base+0x480>
   30d0c:	ldr	r3, [r0, #24]
   30d10:	cmp	r3, #0
   30d14:	beq	30cc8 <__flatcc_fb_build_schema@@Base+0x4c4>
   30d18:	cmp	r3, #3
   30d1c:	bne	30c9c <__flatcc_fb_build_schema@@Base+0x498>
   30d20:	mov	r2, #1
   30d24:	orr	r6, r6, r2, lsl r3
   30d28:	uxth	r6, r6
   30d2c:	add	r2, sp, #84	; 0x54
   30d30:	ldr	r2, [r2, r3, lsl #2]
   30d34:	cmp	r2, #0
   30d38:	bne	30cb4 <__flatcc_fb_build_schema@@Base+0x4b0>
   30d3c:	add	r2, sp, #84	; 0x54
   30d40:	str	r4, [r2, r3, lsl #2]
   30d44:	ldr	r2, [pc, #2824]	; 31854 <__flatcc_fb_build_schema@@Base+0x1050>
   30d48:	add	r3, r2, r3, lsl #2
   30d4c:	ldr	r3, [r3, #76]	; 0x4c
   30d50:	cmp	r3, #0
   30d54:	bne	30d7c <__flatcc_fb_build_schema@@Base+0x578>
   30d58:	ldrh	r3, [r4, #16]
   30d5c:	cmp	r3, #0
   30d60:	beq	30cc8 <__flatcc_fb_build_schema@@Base+0x4c4>
   30d64:	mov	r3, #0
   30d68:	mov	r2, sl
   30d6c:	ldr	r1, [r4, #4]
   30d70:	mov	r0, r8
   30d74:	bl	2eea8 <__flatcc_fb_clear_parser@@Base+0x1f8>
   30d78:	b	30cc8 <__flatcc_fb_build_schema@@Base+0x4c4>
   30d7c:	cmp	r3, #2
   30d80:	beq	30db0 <__flatcc_fb_build_schema@@Base+0x5ac>
   30d84:	cmp	r3, #5
   30d88:	bne	30dd4 <__flatcc_fb_build_schema@@Base+0x5d0>
   30d8c:	ldrh	r3, [r4, #16]
   30d90:	cmp	r3, #5
   30d94:	beq	30cc8 <__flatcc_fb_build_schema@@Base+0x4c4>
   30d98:	mov	r3, #0
   30d9c:	mov	r2, r7
   30da0:	ldr	r1, [r4, #4]
   30da4:	mov	r0, r8
   30da8:	bl	2eea8 <__flatcc_fb_clear_parser@@Base+0x1f8>
   30dac:	b	30cc8 <__flatcc_fb_build_schema@@Base+0x4c4>
   30db0:	ldrh	r3, [r4, #16]
   30db4:	cmp	r3, #2
   30db8:	beq	30cc8 <__flatcc_fb_build_schema@@Base+0x4c4>
   30dbc:	mov	r3, #0
   30dc0:	mov	r2, fp
   30dc4:	ldr	r1, [r4, #4]
   30dc8:	mov	r0, r8
   30dcc:	bl	2eea8 <__flatcc_fb_clear_parser@@Base+0x1f8>
   30dd0:	b	30cc8 <__flatcc_fb_build_schema@@Base+0x4c4>
   30dd4:	cmp	r3, #4
   30dd8:	bne	30e08 <__flatcc_fb_build_schema@@Base+0x604>
   30ddc:	ldrh	r3, [r4, #16]
   30de0:	sub	r3, r3, #4
   30de4:	uxth	r3, r3
   30de8:	cmp	r3, #1
   30dec:	bls	30cc8 <__flatcc_fb_build_schema@@Base+0x4c4>
   30df0:	mov	r3, #0
   30df4:	ldr	r2, [pc, #2592]	; 3181c <__flatcc_fb_build_schema@@Base+0x1018>
   30df8:	ldr	r1, [r4, #4]
   30dfc:	mov	r0, r8
   30e00:	bl	2eea8 <__flatcc_fb_clear_parser@@Base+0x1f8>
   30e04:	b	30cc8 <__flatcc_fb_build_schema@@Base+0x4c4>
   30e08:	cmp	r3, #6
   30e0c:	bne	30cc8 <__flatcc_fb_build_schema@@Base+0x4c4>
   30e10:	ldrh	r3, [r4, #16]
   30e14:	cmp	r3, #6
   30e18:	beq	30cc8 <__flatcc_fb_build_schema@@Base+0x4c4>
   30e1c:	mov	r3, #0
   30e20:	ldr	r2, [pc, #2552]	; 31820 <__flatcc_fb_build_schema@@Base+0x101c>
   30e24:	ldr	r1, [r4, #4]
   30e28:	mov	r0, r8
   30e2c:	bl	2eea8 <__flatcc_fb_clear_parser@@Base+0x1f8>
   30e30:	b	30cc8 <__flatcc_fb_build_schema@@Base+0x4c4>
   30e34:	cmp	r4, #0
   30e38:	beq	30e4c <__flatcc_fb_build_schema@@Base+0x648>
   30e3c:	ldr	r2, [pc, #2528]	; 31824 <__flatcc_fb_build_schema@@Base+0x1020>
   30e40:	ldr	r1, [r4, #4]
   30e44:	mov	r0, r8
   30e48:	bl	2eea8 <__flatcc_fb_clear_parser@@Base+0x1f8>
   30e4c:	ldr	sl, [sp, #12]
   30e50:	strh	r6, [sl, #92]	; 0x5c
   30e54:	ldr	fp, [sl, #20]
   30e58:	cmp	fp, #0
   30e5c:	beq	33434 <__flatcc_fb_build_schema@@Base+0x2c30>
   30e60:	mov	r3, #0
   30e64:	mov	r1, r3
   30e68:	str	r3, [sp, #68]	; 0x44
   30e6c:	str	r3, [sp, #40]	; 0x28
   30e70:	str	r3, [sp, #64]	; 0x40
   30e74:	mov	r2, #0
   30e78:	mov	r3, #0
   30e7c:	mov	r4, r2
   30e80:	mov	r5, r3
   30e84:	strd	r4, [sp, #48]	; 0x30
   30e88:	str	r1, [sp, #20]
   30e8c:	mov	r3, r5
   30e90:	strd	r2, [sp, #24]
   30e94:	b	323bc <__flatcc_fb_build_schema@@Base+0x1bb8>
   30e98:	ldr	r6, [sp, #56]	; 0x38
   30e9c:	b	30e4c <__flatcc_fb_build_schema@@Base+0x648>
   30ea0:	ldrh	r3, [fp, #8]
   30ea4:	cmp	r3, #5
   30ea8:	bne	30ef0 <__flatcc_fb_build_schema@@Base+0x6ec>
   30eac:	ldrh	r3, [fp, #24]
   30eb0:	cmp	r3, #1
   30eb4:	beq	323b0 <__flatcc_fb_build_schema@@Base+0x1bac>
   30eb8:	sub	r3, r3, #7
   30ebc:	uxth	r3, r3
   30ec0:	cmp	r3, #1
   30ec4:	bls	30f14 <__flatcc_fb_build_schema@@Base+0x710>
   30ec8:	ldr	r4, [fp, #64]	; 0x40
   30ecc:	mov	r2, #48	; 0x30
   30ed0:	mov	r1, #0
   30ed4:	add	r0, sp, #84	; 0x54
   30ed8:	bl	140ac <memset@plt>
   30edc:	cmp	r4, #0
   30ee0:	beq	31220 <__flatcc_fb_build_schema@@Base+0xa1c>
   30ee4:	ldr	r6, [sp, #56]	; 0x38
   30ee8:	mov	r5, #100	; 0x64
   30eec:	b	30f74 <__flatcc_fb_build_schema@@Base+0x770>
   30ef0:	mov	r3, #0
   30ef4:	ldr	r2, [pc, #2560]	; 318fc <__flatcc_fb_build_schema@@Base+0x10f8>
   30ef8:	ldr	r1, [fp, #4]
   30efc:	mov	r0, r8
   30f00:	bl	2eea8 <__flatcc_fb_clear_parser@@Base+0x1f8>
   30f04:	mov	r3, #1
   30f08:	ldr	r2, [sp, #12]
   30f0c:	strh	r3, [r2, #48]	; 0x30
   30f10:	b	3270c <__flatcc_fb_build_schema@@Base+0x1f08>
   30f14:	ldr	r0, [fp, #16]
   30f18:	bl	2edc0 <__flatcc_fb_clear_parser@@Base+0x110>
   30f1c:	str	r0, [fp, #16]
   30f20:	b	30ec8 <__flatcc_fb_build_schema@@Base+0x6c4>
   30f24:	mov	r3, #0
   30f28:	ldr	r2, [pc, #2272]	; 31810 <__flatcc_fb_build_schema@@Base+0x100c>
   30f2c:	ldr	r1, [r4, #4]
   30f30:	mov	r0, r8
   30f34:	bl	2eea8 <__flatcc_fb_clear_parser@@Base+0x1f8>
   30f38:	b	30f50 <__flatcc_fb_build_schema@@Base+0x74c>
   30f3c:	mov	r3, #0
   30f40:	ldr	r2, [pc, #2252]	; 31814 <__flatcc_fb_build_schema@@Base+0x1010>
   30f44:	ldr	r1, [r4, #4]
   30f48:	mov	r0, r8
   30f4c:	bl	2eea8 <__flatcc_fb_clear_parser@@Base+0x1f8>
   30f50:	ldr	r4, [r4]
   30f54:	subs	r5, r5, #1
   30f58:	movne	r3, #1
   30f5c:	moveq	r3, #0
   30f60:	cmp	r4, #0
   30f64:	moveq	r3, #0
   30f68:	andne	r3, r3, #1
   30f6c:	cmp	r3, #0
   30f70:	beq	310dc <__flatcc_fb_build_schema@@Base+0x8d8>
   30f74:	ldr	r3, [r4, #4]
   30f78:	ldr	r0, [r8, #412]	; 0x19c
   30f7c:	ldr	r2, [r3, #4]
   30f80:	ldr	r1, [r3]
   30f84:	add	r0, r0, #16
   30f88:	bl	39fac <fb_name_table_find@@Base>
   30f8c:	cmp	r0, #0
   30f90:	beq	30f24 <__flatcc_fb_build_schema@@Base+0x720>
   30f94:	ldr	r3, [r0, #24]
   30f98:	cmp	r3, #0
   30f9c:	beq	30f50 <__flatcc_fb_build_schema@@Base+0x74c>
   30fa0:	ldr	r2, [pc, #2176]	; 31828 <__flatcc_fb_build_schema@@Base+0x1024>
   30fa4:	asr	r2, r2, r3
   30fa8:	tst	r2, #1
   30fac:	beq	30f3c <__flatcc_fb_build_schema@@Base+0x738>
   30fb0:	mov	r2, #1
   30fb4:	orr	r6, r6, r2, lsl r3
   30fb8:	uxth	r6, r6
   30fbc:	add	r2, sp, #84	; 0x54
   30fc0:	ldr	r2, [r2, r3, lsl #2]
   30fc4:	cmp	r2, #0
   30fc8:	beq	30fe4 <__flatcc_fb_build_schema@@Base+0x7e0>
   30fcc:	mov	r3, #0
   30fd0:	ldr	r2, [pc, #2112]	; 31818 <__flatcc_fb_build_schema@@Base+0x1014>
   30fd4:	ldr	r1, [r4, #4]
   30fd8:	mov	r0, r8
   30fdc:	bl	2eea8 <__flatcc_fb_clear_parser@@Base+0x1f8>
   30fe0:	b	30f50 <__flatcc_fb_build_schema@@Base+0x74c>
   30fe4:	add	r2, sp, #84	; 0x54
   30fe8:	str	r4, [r2, r3, lsl #2]
   30fec:	ldr	r2, [pc, #2144]	; 31854 <__flatcc_fb_build_schema@@Base+0x1050>
   30ff0:	add	r3, r2, r3, lsl #2
   30ff4:	ldr	r3, [r3, #76]	; 0x4c
   30ff8:	cmp	r3, #0
   30ffc:	bne	31024 <__flatcc_fb_build_schema@@Base+0x820>
   31000:	ldrh	r3, [r4, #16]
   31004:	cmp	r3, #0
   31008:	beq	30f50 <__flatcc_fb_build_schema@@Base+0x74c>
   3100c:	mov	r3, #0
   31010:	ldr	r2, [pc, #2028]	; 31804 <__flatcc_fb_build_schema@@Base+0x1000>
   31014:	ldr	r1, [r4, #4]
   31018:	mov	r0, r8
   3101c:	bl	2eea8 <__flatcc_fb_clear_parser@@Base+0x1f8>
   31020:	b	30f50 <__flatcc_fb_build_schema@@Base+0x74c>
   31024:	cmp	r3, #2
   31028:	beq	31058 <__flatcc_fb_build_schema@@Base+0x854>
   3102c:	cmp	r3, #5
   31030:	bne	3107c <__flatcc_fb_build_schema@@Base+0x878>
   31034:	ldrh	r3, [r4, #16]
   31038:	cmp	r3, #5
   3103c:	beq	30f50 <__flatcc_fb_build_schema@@Base+0x74c>
   31040:	mov	r3, #0
   31044:	ldr	r2, [pc, #1968]	; 317fc <__flatcc_fb_build_schema@@Base+0xff8>
   31048:	ldr	r1, [r4, #4]
   3104c:	mov	r0, r8
   31050:	bl	2eea8 <__flatcc_fb_clear_parser@@Base+0x1f8>
   31054:	b	30f50 <__flatcc_fb_build_schema@@Base+0x74c>
   31058:	ldrh	r3, [r4, #16]
   3105c:	cmp	r3, #2
   31060:	beq	30f50 <__flatcc_fb_build_schema@@Base+0x74c>
   31064:	mov	r3, #0
   31068:	ldr	r2, [pc, #1936]	; 31800 <__flatcc_fb_build_schema@@Base+0xffc>
   3106c:	ldr	r1, [r4, #4]
   31070:	mov	r0, r8
   31074:	bl	2eea8 <__flatcc_fb_clear_parser@@Base+0x1f8>
   31078:	b	30f50 <__flatcc_fb_build_schema@@Base+0x74c>
   3107c:	cmp	r3, #4
   31080:	bne	310b0 <__flatcc_fb_build_schema@@Base+0x8ac>
   31084:	ldrh	r3, [r4, #16]
   31088:	sub	r3, r3, #4
   3108c:	uxth	r3, r3
   31090:	cmp	r3, #1
   31094:	bls	30f50 <__flatcc_fb_build_schema@@Base+0x74c>
   31098:	mov	r3, #0
   3109c:	ldr	r2, [pc, #1912]	; 3181c <__flatcc_fb_build_schema@@Base+0x1018>
   310a0:	ldr	r1, [r4, #4]
   310a4:	mov	r0, r8
   310a8:	bl	2eea8 <__flatcc_fb_clear_parser@@Base+0x1f8>
   310ac:	b	30f50 <__flatcc_fb_build_schema@@Base+0x74c>
   310b0:	cmp	r3, #6
   310b4:	bne	30f50 <__flatcc_fb_build_schema@@Base+0x74c>
   310b8:	ldrh	r3, [r4, #16]
   310bc:	cmp	r3, #6
   310c0:	beq	30f50 <__flatcc_fb_build_schema@@Base+0x74c>
   310c4:	mov	r3, #0
   310c8:	ldr	r2, [pc, #1872]	; 31820 <__flatcc_fb_build_schema@@Base+0x101c>
   310cc:	ldr	r1, [r4, #4]
   310d0:	mov	r0, r8
   310d4:	bl	2eea8 <__flatcc_fb_clear_parser@@Base+0x1f8>
   310d8:	b	30f50 <__flatcc_fb_build_schema@@Base+0x74c>
   310dc:	cmp	r4, #0
   310e0:	beq	310f4 <__flatcc_fb_build_schema@@Base+0x8f0>
   310e4:	ldr	r2, [pc, #1848]	; 31824 <__flatcc_fb_build_schema@@Base+0x1020>
   310e8:	ldr	r1, [r4, #4]
   310ec:	mov	r0, r8
   310f0:	bl	2eea8 <__flatcc_fb_clear_parser@@Base+0x1f8>
   310f4:	strh	r6, [fp, #72]	; 0x48
   310f8:	ldr	r3, [sp, #108]	; 0x6c
   310fc:	str	r3, [sp, #44]	; 0x2c
   31100:	cmp	r3, #0
   31104:	beq	31298 <__flatcc_fb_build_schema@@Base+0xa94>
   31108:	ldrh	r3, [fp, #24]
   3110c:	cmp	r3, #7
   31110:	bne	31228 <__flatcc_fb_build_schema@@Base+0xa24>
   31114:	ldr	r3, [fp, #16]
   31118:	cmp	r3, #4
   3111c:	bne	31228 <__flatcc_fb_build_schema@@Base+0xa24>
   31120:	ldr	r2, [sp, #44]	; 0x2c
   31124:	ldrh	r3, [r2, #16]
   31128:	cmp	r3, #2
   3112c:	bne	33418 <__flatcc_fb_build_schema@@Base+0x2c14>
   31130:	ldr	r1, [r2, #8]
   31134:	ldr	lr, [r2, #12]
   31138:	cmp	lr, #0
   3113c:	ble	31254 <__flatcc_fb_build_schema@@Base+0xa50>
   31140:	sub	r4, lr, #1
   31144:	mov	ip, r4
   31148:	ldrb	r3, [r1, r4]
   3114c:	cmp	r3, #46	; 0x2e
   31150:	subne	r2, lr, #1
   31154:	addne	r2, r1, r2
   31158:	movne	r3, r4
   3115c:	beq	31244 <__flatcc_fb_build_schema@@Base+0xa40>
   31160:	cmp	r3, #0
   31164:	beq	3124c <__flatcc_fb_build_schema@@Base+0xa48>
   31168:	sub	r3, r3, #1
   3116c:	mov	ip, r3
   31170:	ldrb	r0, [r2, #-1]!
   31174:	cmp	r0, #46	; 0x2e
   31178:	bne	31160 <__flatcc_fb_build_schema@@Base+0x95c>
   3117c:	add	ip, ip, #1
   31180:	add	r2, r1, ip
   31184:	str	r2, [sp, #32]
   31188:	mov	lr, r4
   3118c:	ldr	r6, [sl, #12]
   31190:	sub	r2, lr, r3
   31194:	str	r2, [sp, #36]	; 0x24
   31198:	adds	r2, r6, #0
   3119c:	movne	r2, #1
   311a0:	cmp	r3, #0
   311a4:	movne	r2, #0
   311a8:	cmp	r2, #0
   311ac:	bne	313fc <__flatcc_fb_build_schema@@Base+0xbf8>
   311b0:	cmp	r9, #0
   311b4:	beq	311f4 <__flatcc_fb_build_schema@@Base+0x9f0>
   311b8:	ldr	r0, [r8, #412]	; 0x19c
   311bc:	cmp	r0, #0
   311c0:	beq	311f4 <__flatcc_fb_build_schema@@Base+0x9f0>
   311c4:	mov	r2, r3
   311c8:	cmp	r3, #0
   311cc:	moveq	r1, #0
   311d0:	bl	29418 <fb_scope_table_find@@Base>
   311d4:	cmp	r0, #0
   311d8:	beq	311f4 <__flatcc_fb_build_schema@@Base+0x9f0>
   311dc:	ldr	r2, [sp, #36]	; 0x24
   311e0:	ldr	r1, [sp, #32]
   311e4:	add	r0, r0, #4
   311e8:	bl	284c8 <fb_symbol_table_find@@Base>
   311ec:	subs	r4, r0, #0
   311f0:	bne	31274 <__flatcc_fb_build_schema@@Base+0xa70>
   311f4:	ldr	r2, [sp, #44]	; 0x2c
   311f8:	ldr	r1, [r2, #4]
   311fc:	ldr	r3, [r2, #12]
   31200:	str	r3, [sp, #4]
   31204:	ldr	r3, [r2, #8]
   31208:	str	r3, [sp]
   3120c:	mov	r3, #0
   31210:	ldr	r2, [pc, #1556]	; 3182c <__flatcc_fb_build_schema@@Base+0x1028>
   31214:	mov	r0, r8
   31218:	bl	2a418 <__flatcc_error_report@@Base>
   3121c:	b	31298 <__flatcc_fb_build_schema@@Base+0xa94>
   31220:	ldr	r6, [sp, #56]	; 0x38
   31224:	b	310f4 <__flatcc_fb_build_schema@@Base+0x8f0>
   31228:	mov	r3, #0
   3122c:	ldr	r2, [pc, #1532]	; 31830 <__flatcc_fb_build_schema@@Base+0x102c>
   31230:	ldr	r1, [sp, #44]	; 0x2c
   31234:	ldr	r1, [r1, #4]
   31238:	mov	r0, r8
   3123c:	bl	2eea8 <__flatcc_fb_clear_parser@@Base+0x1f8>
   31240:	b	31298 <__flatcc_fb_build_schema@@Base+0xa94>
   31244:	mov	r3, r4
   31248:	b	3117c <__flatcc_fb_build_schema@@Base+0x978>
   3124c:	str	r1, [sp, #32]
   31250:	b	3118c <__flatcc_fb_build_schema@@Base+0x988>
   31254:	mov	r3, lr
   31258:	str	r1, [sp, #32]
   3125c:	b	3118c <__flatcc_fb_build_schema@@Base+0x988>
   31260:	ldr	r1, [r4, #16]
   31264:	ldr	r0, [sp, #16]
   31268:	bl	27e80 <ptr_set_find_item@@Base>
   3126c:	cmp	r0, #0
   31270:	beq	31420 <__flatcc_fb_build_schema@@Base+0xc1c>
   31274:	ldrh	r3, [r4, #8]
   31278:	cmp	r3, #0
   3127c:	beq	31294 <__flatcc_fb_build_schema@@Base+0xa90>
   31280:	ldr	r2, [r8, #176]	; 0xb0
   31284:	cmp	r2, #0
   31288:	beq	31488 <__flatcc_fb_build_schema@@Base+0xc84>
   3128c:	cmp	r3, #1
   31290:	bne	314a4 <__flatcc_fb_build_schema@@Base+0xca0>
   31294:	str	r4, [fp, #104]	; 0x68
   31298:	ldrh	r3, [fp, #72]	; 0x48
   3129c:	tst	r3, #256	; 0x100
   312a0:	beq	312b0 <__flatcc_fb_build_schema@@Base+0xaac>
   312a4:	ldrh	r3, [fp, #24]
   312a8:	cmp	r3, #8
   312ac:	beq	314c0 <__flatcc_fb_build_schema@@Base+0xcbc>
   312b0:	ldrh	r3, [fp, #72]	; 0x48
   312b4:	tst	r3, #1024	; 0x400
   312b8:	beq	312dc <__flatcc_fb_build_schema@@Base+0xad8>
   312bc:	ldrh	r3, [fp, #24]
   312c0:	cmp	r3, #7
   312c4:	beq	33424 <__flatcc_fb_build_schema@@Base+0x2c20>
   312c8:	mov	r3, #0
   312cc:	ldr	r2, [pc, #1376]	; 31834 <__flatcc_fb_build_schema@@Base+0x1030>
   312d0:	ldr	r1, [fp, #4]
   312d4:	mov	r0, r8
   312d8:	bl	2eea8 <__flatcc_fb_clear_parser@@Base+0x1f8>
   312dc:	ldrh	r3, [fp, #72]	; 0x48
   312e0:	tst	r3, #2048	; 0x800
   312e4:	beq	31308 <__flatcc_fb_build_schema@@Base+0xb04>
   312e8:	ldrh	r3, [fp, #24]
   312ec:	cmp	r3, #7
   312f0:	beq	314d8 <__flatcc_fb_build_schema@@Base+0xcd4>
   312f4:	mov	r3, #0
   312f8:	ldr	r2, [pc, #1336]	; 31838 <__flatcc_fb_build_schema@@Base+0x1034>
   312fc:	ldr	r1, [fp, #4]
   31300:	mov	r0, r8
   31304:	bl	2eea8 <__flatcc_fb_clear_parser@@Base+0x1f8>
   31308:	ldrh	r3, [fp, #72]	; 0x48
   3130c:	and	r3, r3, #3072	; 0xc00
   31310:	cmp	r3, #3072	; 0xc00
   31314:	beq	314e8 <__flatcc_fb_build_schema@@Base+0xce4>
   31318:	ldr	r6, [sp, #88]	; 0x58
   3131c:	adds	r3, r6, #0
   31320:	movne	r3, #1
   31324:	mov	r1, r3
   31328:	str	r3, [sp, #60]	; 0x3c
   3132c:	ldrd	r2, [sp, #24]
   31330:	mov	r0, r2
   31334:	orrs	r3, r0, r3
   31338:	mov	r3, r1
   3133c:	movne	r3, #0
   31340:	andeq	r3, r3, #1
   31344:	cmp	r3, #0
   31348:	bne	31500 <__flatcc_fb_build_schema@@Base+0xcfc>
   3134c:	ldr	r3, [sp, #20]
   31350:	cmp	r3, #0
   31354:	bne	31394 <__flatcc_fb_build_schema@@Base+0xb90>
   31358:	ldrd	r2, [r8, #216]	; 0xd8
   3135c:	ldrd	r0, [sp, #24]
   31360:	cmp	r3, r1
   31364:	cmpeq	r2, r0
   31368:	bls	31524 <__flatcc_fb_build_schema@@Base+0xd20>
   3136c:	ldr	r1, [sp, #40]	; 0x28
   31370:	cmp	r1, #0
   31374:	ldrheq	r2, [sp, #24]
   31378:	moveq	r3, #0
   3137c:	strdeq	r2, [fp, #96]	; 0x60
   31380:	streq	r1, [sp, #20]
   31384:	ldrd	r2, [sp, #24]
   31388:	adds	r2, r2, #1
   3138c:	adc	r3, r3, #0
   31390:	strd	r2, [sp, #24]
   31394:	ldrh	r3, [fp, #24]
   31398:	sub	r3, r3, #7
   3139c:	cmp	r3, #5
   313a0:	ldrls	pc, [pc, r3, lsl #2]
   313a4:	b	32350 <__flatcc_fb_build_schema@@Base+0x1b4c>
   313a8:	andeq	r1, r3, r4, lsl #18
   313ac:	andeq	r1, r3, r4, asr #10
   313b0:	strdeq	r1, [r3], -r8
   313b4:	andeq	r1, r3, r4, asr #19
   313b8:	andeq	r2, r3, ip, lsr #1
   313bc:	andeq	r1, r3, ip, lsr #20
   313c0:	sub	r5, r5, #1
   313c4:	add	r4, r4, #1
   313c8:	cmp	r5, #1
   313cc:	ble	3145c <__flatcc_fb_build_schema@@Base+0xc58>
   313d0:	cmp	r9, #0
   313d4:	beq	313c0 <__flatcc_fb_build_schema@@Base+0xbbc>
   313d8:	ldr	r0, [r8, #412]	; 0x19c
   313dc:	cmp	r0, #0
   313e0:	beq	313c0 <__flatcc_fb_build_schema@@Base+0xbbc>
   313e4:	mov	r2, r4
   313e8:	ldr	r1, [r6]
   313ec:	bl	29418 <fb_scope_table_find@@Base>
   313f0:	cmp	r0, #0
   313f4:	beq	313c0 <__flatcc_fb_build_schema@@Base+0xbbc>
   313f8:	mov	r6, r0
   313fc:	ldr	r2, [sp, #36]	; 0x24
   31400:	ldr	r1, [sp, #32]
   31404:	add	r0, r6, #4
   31408:	bl	284c8 <fb_symbol_table_find@@Base>
   3140c:	subs	r4, r0, #0
   31410:	beq	31420 <__flatcc_fb_build_schema@@Base+0xc1c>
   31414:	ldrh	r3, [r4, #8]
   31418:	cmp	r3, #4
   3141c:	bls	31260 <__flatcc_fb_build_schema@@Base+0xa5c>
   31420:	cmp	r6, #0
   31424:	beq	311f4 <__flatcc_fb_build_schema@@Base+0x9f0>
   31428:	ldr	r3, [r6]
   3142c:	cmp	r3, #0
   31430:	beq	311f4 <__flatcc_fb_build_schema@@Base+0x9f0>
   31434:	mov	r4, #0
   31438:	add	r4, r4, #1
   3143c:	ldr	r3, [r3]
   31440:	cmp	r3, #0
   31444:	bne	31438 <__flatcc_fb_build_schema@@Base+0xc34>
   31448:	cmp	r4, #0
   3144c:	beq	311f4 <__flatcc_fb_build_schema@@Base+0x9f0>
   31450:	mov	r5, r4
   31454:	rsb	r4, r4, #1
   31458:	b	313c8 <__flatcc_fb_build_schema@@Base+0xbc4>
   3145c:	cmp	r9, #0
   31460:	beq	311f4 <__flatcc_fb_build_schema@@Base+0x9f0>
   31464:	ldr	r0, [r8, #412]	; 0x19c
   31468:	cmp	r0, #0
   3146c:	beq	311f4 <__flatcc_fb_build_schema@@Base+0x9f0>
   31470:	mov	r2, #0
   31474:	mov	r1, r2
   31478:	bl	29418 <fb_scope_table_find@@Base>
   3147c:	subs	r6, r0, #0
   31480:	bne	313fc <__flatcc_fb_build_schema@@Base+0xbf8>
   31484:	b	311f4 <__flatcc_fb_build_schema@@Base+0x9f0>
   31488:	ldr	r3, [r4, #4]
   3148c:	ldr	r2, [pc, #936]	; 3183c <__flatcc_fb_build_schema@@Base+0x1038>
   31490:	ldr	r1, [sp, #44]	; 0x2c
   31494:	ldr	r1, [r1, #4]
   31498:	mov	r0, r8
   3149c:	bl	2eea8 <__flatcc_fb_clear_parser@@Base+0x1f8>
   314a0:	b	31298 <__flatcc_fb_build_schema@@Base+0xa94>
   314a4:	ldr	r3, [r4, #4]
   314a8:	ldr	r2, [pc, #912]	; 31840 <__flatcc_fb_build_schema@@Base+0x103c>
   314ac:	ldr	r1, [sp, #44]	; 0x2c
   314b0:	ldr	r1, [r1, #4]
   314b4:	mov	r0, r8
   314b8:	bl	2eea8 <__flatcc_fb_clear_parser@@Base+0x1f8>
   314bc:	b	31298 <__flatcc_fb_build_schema@@Base+0xa94>
   314c0:	mov	r3, #0
   314c4:	ldr	r2, [pc, #888]	; 31844 <__flatcc_fb_build_schema@@Base+0x1040>
   314c8:	ldr	r1, [fp, #4]
   314cc:	mov	r0, r8
   314d0:	bl	2eea8 <__flatcc_fb_clear_parser@@Base+0x1f8>
   314d4:	b	312b0 <__flatcc_fb_build_schema@@Base+0xaac>
   314d8:	ldr	r3, [fp, #16]
   314dc:	cmp	r3, #4
   314e0:	bne	312f4 <__flatcc_fb_build_schema@@Base+0xaf0>
   314e4:	b	31308 <__flatcc_fb_build_schema@@Base+0xb04>
   314e8:	mov	r3, #0
   314ec:	ldr	r2, [pc, #852]	; 31848 <__flatcc_fb_build_schema@@Base+0x1044>
   314f0:	ldr	r1, [fp, #4]
   314f4:	mov	r0, r8
   314f8:	bl	2eea8 <__flatcc_fb_clear_parser@@Base+0x1f8>
   314fc:	b	31318 <__flatcc_fb_build_schema@@Base+0xb14>
   31500:	ldr	r3, [r8, #112]	; 0x70
   31504:	str	r3, [sp, #68]	; 0x44
   31508:	ldr	r2, [r8, #216]	; 0xd8
   3150c:	mov	r1, #0
   31510:	mov	r0, r3
   31514:	bl	140ac <memset@plt>
   31518:	mov	r3, #1
   3151c:	str	r3, [sp, #40]	; 0x28
   31520:	b	3134c <__flatcc_fb_build_schema@@Base+0xb48>
   31524:	mov	r3, #0
   31528:	ldr	r2, [pc, #796]	; 3184c <__flatcc_fb_build_schema@@Base+0x1048>
   3152c:	ldr	r1, [fp, #4]
   31530:	mov	r0, r8
   31534:	bl	2eea8 <__flatcc_fb_clear_parser@@Base+0x1f8>
   31538:	mov	r3, #1
   3153c:	str	r3, [sp, #20]
   31540:	b	31384 <__flatcc_fb_build_schema@@Base+0xb80>
   31544:	ldrh	r3, [fp, #56]	; 0x38
   31548:	cmp	r3, #13
   3154c:	beq	315c0 <__flatcc_fb_build_schema@@Base+0xdbc>
   31550:	ldrh	r3, [fp, #56]	; 0x38
   31554:	cmp	r3, #0
   31558:	bne	31570 <__flatcc_fb_build_schema@@Base+0xd6c>
   3155c:	mov	r3, #5
   31560:	strh	r3, [fp, #56]	; 0x38
   31564:	mov	r2, #0
   31568:	mov	r3, #0
   3156c:	strd	r2, [fp, #48]	; 0x30
   31570:	add	r3, fp, #48	; 0x30
   31574:	ldr	r2, [fp, #16]
   31578:	mov	r1, fp
   3157c:	mov	r0, r8
   31580:	bl	334d4 <__flatcc_fb_coerce_scalar_type@@Base>
   31584:	cmp	r0, #0
   31588:	movne	r3, #1
   3158c:	strhne	r3, [fp, #24]
   31590:	bne	323b0 <__flatcc_fb_build_schema@@Base+0x1bac>
   31594:	ldr	r3, [fp, #16]
   31598:	ldr	r2, [pc, #692]	; 31854 <__flatcc_fb_build_schema@@Base+0x1050>
   3159c:	add	r3, r2, r3, lsl #2
   315a0:	ldr	r3, [r3, #16]
   315a4:	str	r3, [fp, #88]	; 0x58
   315a8:	mov	r2, #0
   315ac:	str	r2, [fp, #92]	; 0x5c
   315b0:	strh	r3, [fp, #74]	; 0x4a
   315b4:	mov	r3, #1
   315b8:	str	r3, [sp, #32]
   315bc:	b	31938 <__flatcc_fb_build_schema@@Base+0x1134>
   315c0:	ldr	r3, [sl, #12]
   315c4:	mov	ip, r3
   315c8:	ldr	r3, [fp, #48]	; 0x30
   315cc:	cmp	r3, #0
   315d0:	strne	r3, [sp, #32]
   315d4:	movne	r2, #0
   315d8:	strne	r2, [sp, #36]	; 0x24
   315dc:	bne	31604 <__flatcc_fb_build_schema@@Base+0xe00>
   315e0:	ldr	r3, [pc, #664]	; 31880 <__flatcc_fb_build_schema@@Base+0x107c>
   315e4:	ldr	r2, [pc, #664]	; 31884 <__flatcc_fb_build_schema@@Base+0x1080>
   315e8:	ldr	r1, [pc, #496]	; 317e0 <__flatcc_fb_build_schema@@Base+0xfdc>
   315ec:	ldr	r0, [pc, #660]	; 31888 <__flatcc_fb_build_schema@@Base+0x1084>
   315f0:	bl	14148 <__assert_fail@plt>
   315f4:	ldr	r2, [sp, #32]
   315f8:	str	r2, [sp, #36]	; 0x24
   315fc:	mov	r2, r0
   31600:	str	r1, [sp, #32]
   31604:	ldr	r1, [sp, #32]
   31608:	ldr	r1, [r1]
   3160c:	add	r0, r2, #1
   31610:	cmp	r1, #0
   31614:	bne	315f4 <__flatcc_fb_build_schema@@Base+0xdf0>
   31618:	ldr	r0, [sp, #36]	; 0x24
   3161c:	cmp	r0, #0
   31620:	beq	316dc <__flatcc_fb_build_schema@@Base+0xed8>
   31624:	adds	r0, ip, #0
   31628:	movne	r0, #1
   3162c:	cmp	r2, #1
   31630:	movne	r0, #0
   31634:	cmp	r0, #0
   31638:	bne	316ac <__flatcc_fb_build_schema@@Base+0xea8>
   3163c:	cmp	r2, #1
   31640:	movne	r1, r3
   31644:	cmp	r9, #0
   31648:	beq	316dc <__flatcc_fb_build_schema@@Base+0xed8>
   3164c:	ldr	r0, [r8, #412]	; 0x19c
   31650:	cmp	r0, #0
   31654:	beq	316dc <__flatcc_fb_build_schema@@Base+0xed8>
   31658:	rsb	r2, r2, #1
   3165c:	bl	29418 <fb_scope_table_find@@Base>
   31660:	cmp	r0, #0
   31664:	beq	316dc <__flatcc_fb_build_schema@@Base+0xed8>
   31668:	ldr	r3, [sp, #36]	; 0x24
   3166c:	ldr	r3, [r3, #4]
   31670:	ldr	r2, [r3, #4]
   31674:	ldr	r1, [r3]
   31678:	add	r0, r0, #4
   3167c:	bl	284c8 <fb_symbol_table_find@@Base>
   31680:	subs	r4, r0, #0
   31684:	beq	316dc <__flatcc_fb_build_schema@@Base+0xed8>
   31688:	ldrh	r3, [r4, #8]
   3168c:	cmp	r3, #4
   31690:	bhi	316dc <__flatcc_fb_build_schema@@Base+0xed8>
   31694:	ldr	r1, [r4, #16]
   31698:	ldr	r0, [sp, #16]
   3169c:	bl	27e80 <ptr_set_find_item@@Base>
   316a0:	cmp	r0, #0
   316a4:	bne	316d0 <__flatcc_fb_build_schema@@Base+0xecc>
   316a8:	b	316dc <__flatcc_fb_build_schema@@Base+0xed8>
   316ac:	str	r6, [sp, #44]	; 0x2c
   316b0:	mov	r6, ip
   316b4:	b	31764 <__flatcc_fb_build_schema@@Base+0xf60>
   316b8:	ldr	r1, [r4, #16]
   316bc:	ldr	r0, [sp, #16]
   316c0:	bl	27e80 <ptr_set_find_item@@Base>
   316c4:	cmp	r0, #0
   316c8:	beq	31790 <__flatcc_fb_build_schema@@Base+0xf8c>
   316cc:	ldr	r6, [sp, #44]	; 0x2c
   316d0:	ldrh	r3, [r4, #8]
   316d4:	cmp	r3, #3
   316d8:	beq	333d0 <__flatcc_fb_build_schema@@Base+0x2bcc>
   316dc:	mov	r3, fp
   316e0:	ldr	r2, [pc, #360]	; 31850 <__flatcc_fb_build_schema@@Base+0x104c>
   316e4:	ldr	r1, [fp, #48]	; 0x30
   316e8:	mov	r0, r8
   316ec:	bl	2ba04 <error_ref_sym@@Base>
   316f0:	mov	r3, #1
   316f4:	strh	r3, [fp, #24]
   316f8:	b	323b0 <__flatcc_fb_build_schema@@Base+0x1bac>
   316fc:	sub	r5, r5, #1
   31700:	add	r4, r4, #1
   31704:	cmp	r5, #1
   31708:	ble	3173c <__flatcc_fb_build_schema@@Base+0xf38>
   3170c:	cmp	r9, #0
   31710:	beq	316fc <__flatcc_fb_build_schema@@Base+0xef8>
   31714:	ldr	r0, [r8, #412]	; 0x19c
   31718:	cmp	r0, #0
   3171c:	beq	316fc <__flatcc_fb_build_schema@@Base+0xef8>
   31720:	mov	r2, r4
   31724:	ldr	r1, [r6]
   31728:	bl	29418 <fb_scope_table_find@@Base>
   3172c:	cmp	r0, #0
   31730:	beq	316fc <__flatcc_fb_build_schema@@Base+0xef8>
   31734:	mov	r6, r0
   31738:	b	31764 <__flatcc_fb_build_schema@@Base+0xf60>
   3173c:	cmp	r9, #0
   31740:	beq	316dc <__flatcc_fb_build_schema@@Base+0xed8>
   31744:	ldr	r0, [r8, #412]	; 0x19c
   31748:	cmp	r0, #0
   3174c:	beq	316dc <__flatcc_fb_build_schema@@Base+0xed8>
   31750:	mov	r2, #0
   31754:	mov	r1, r2
   31758:	bl	29418 <fb_scope_table_find@@Base>
   3175c:	subs	r6, r0, #0
   31760:	beq	316dc <__flatcc_fb_build_schema@@Base+0xed8>
   31764:	ldr	r3, [sp, #36]	; 0x24
   31768:	ldr	r3, [r3, #4]
   3176c:	ldr	r2, [r3, #4]
   31770:	ldr	r1, [r3]
   31774:	add	r0, r6, #4
   31778:	bl	284c8 <fb_symbol_table_find@@Base>
   3177c:	subs	r4, r0, #0
   31780:	beq	31790 <__flatcc_fb_build_schema@@Base+0xf8c>
   31784:	ldrh	r3, [r4, #8]
   31788:	cmp	r3, #4
   3178c:	bls	316b8 <__flatcc_fb_build_schema@@Base+0xeb4>
   31790:	cmp	r6, #0
   31794:	beq	316dc <__flatcc_fb_build_schema@@Base+0xed8>
   31798:	ldr	r3, [r6]
   3179c:	cmp	r3, #0
   317a0:	beq	316dc <__flatcc_fb_build_schema@@Base+0xed8>
   317a4:	mov	r4, #0
   317a8:	add	r4, r4, #1
   317ac:	ldr	r3, [r3]
   317b0:	cmp	r3, #0
   317b4:	bne	317a8 <__flatcc_fb_build_schema@@Base+0xfa4>
   317b8:	cmp	r4, #0
   317bc:	beq	316dc <__flatcc_fb_build_schema@@Base+0xed8>
   317c0:	mov	r5, r4
   317c4:	rsb	r4, r4, #1
   317c8:	b	31704 <__flatcc_fb_build_schema@@Base+0xf00>
   317cc:	andeq	r5, r5, r0, asr #4
   317d0:			; <UNDEFINED> instruction: 0x01000193
   317d4:	tsthi	ip, r5, asr #27
   317d8:	muleq	r5, ip, r5
   317dc:	andeq	r0, r0, r6, lsl r6
   317e0:	andeq	r4, r5, r4, lsr r6
   317e4:	andeq	r5, r5, r8, lsl #4
   317e8:	andeq	r5, r5, ip, asr r2
   317ec:			; <UNDEFINED> instruction: 0x000545b4
   317f0:	andeq	r7, r6, r8, lsr #1
   317f4:	strdeq	ip, [r3], -ip	; <UNPREDICTABLE>
   317f8:	andeq	r5, r5, r8, ror r2
   317fc:	andeq	r4, r5, ip, lsr #18
   31800:	andeq	r4, r5, r8, lsl #18
   31804:	andeq	r4, r5, r0, ror #17
   31808:	andeq	r4, r5, r8, ror #11
   3180c:	andeq	r0, r0, r2, lsl #6
   31810:	andeq	r4, r5, r8, ror #16
   31814:	andeq	r4, r5, r8, lsl #17
   31818:			; <UNDEFINED> instruction: 0x000548b8
   3181c:	andeq	r4, r5, r8, asr r9
   31820:	andeq	r4, r5, ip, ror r9
   31824:	andeq	r4, r5, r8, lsr #19
   31828:	andeq	r0, r0, r6, asr #31
   3182c:	andeq	r5, r5, r8, asr #6
   31830:	andeq	r5, r5, r8, lsl #6
   31834:	andeq	r5, r5, r0, lsl #8
   31838:	andeq	r5, r5, ip, lsr r4
   3183c:	andeq	r5, r5, r4, ror #6
   31840:	muleq	r5, r0, r3
   31844:	andeq	r5, r5, r8, asr #7
   31848:	andeq	r5, r5, ip, ror r4
   3184c:			; <UNDEFINED> instruction: 0x000554b4
   31850:	ldrdeq	r5, [r5], -r8
   31854:	andeq	r4, r5, r0, lsl r5
   31858:	andeq	r5, r5, ip, lsr #16
   3185c:	andeq	r5, r5, ip, asr #16
   31860:	andeq	r5, r5, ip, lsl #10
   31864:	andeq	r5, r5, r8, lsr r5
   31868:	andeq	r5, r5, ip, asr r5
   3186c:	andeq	r5, r5, r8, lsl #11
   31870:			; <UNDEFINED> instruction: 0x000555b8
   31874:	strdeq	r5, [r5], -r0
   31878:	andeq	r5, r5, ip, lsl r6
   3187c:	andeq	r5, r5, r0, ror r6
   31880:	strdeq	r4, [r5], -r8
   31884:	andeq	r0, r0, fp, asr r1
   31888:	ldrdeq	r5, [r5], -r4
   3188c:	andeq	r5, r5, r4, ror #22
   31890:	andeq	r5, r5, r0, lsr #13
   31894:	andeq	r5, r5, r8, ror #13
   31898:	andeq	r5, r5, ip, lsl r7
   3189c:	andeq	r5, r5, r4, asr #12
   318a0:	andeq	r5, r5, r8, ror #14
   318a4:	muleq	r5, r0, r7
   318a8:			; <UNDEFINED> instruction: 0x000552bc
   318ac:	ldrdeq	r5, [r5], -r0
   318b0:	andeq	r5, r5, r4, asr r0
   318b4:	andeq	r5, r5, r4
   318b8:	andeq	r5, r5, ip, lsl #16
   318bc:	andeq	r5, r5, r8, ror #16
   318c0:	andeq	r5, r5, r0, lsr #17
   318c4:	andeq	r5, r5, r0, ror #2
   318c8:			; <UNDEFINED> instruction: 0x000551b8
   318cc:	andeq	r5, r5, r0, lsr #1
   318d0:	andeq	r5, r5, r4, lsl #2
   318d4:	ldrdeq	r5, [r5], -r0
   318d8:	andeq	r5, r5, ip, lsl r9
   318dc:	andeq	r5, r5, r4, lsl #18
   318e0:	andeq	r5, r5, r0, asr r9
   318e4:	andeq	r4, r5, r8, asr fp
   318e8:	andeq	r4, r5, ip, lsl #12
   318ec:	andeq	r0, r0, r9, ror #8
   318f0:	andeq	r5, r5, ip, lsr #5
   318f4:	andeq	r4, r5, r4, lsr r6
   318f8:	ldrdeq	r5, [r5], -r4
   318fc:	andeq	r5, r5, r0, ror #5
   31900:	muleq	r5, r4, r9
   31904:	ldr	r3, [fp, #16]
   31908:	ldr	r2, [pc, #-188]	; 31854 <__flatcc_fb_build_schema@@Base+0x1050>
   3190c:	add	r3, r2, r3, lsl #2
   31910:	ldr	r3, [r3, #16]
   31914:	str	r3, [fp, #88]	; 0x58
   31918:	mov	r2, #0
   3191c:	str	r2, [fp, #92]	; 0x5c
   31920:	strh	r3, [fp, #74]	; 0x4a
   31924:	ldrh	r3, [fp, #56]	; 0x38
   31928:	cmp	r3, r2
   3192c:	moveq	r3, #0
   31930:	streq	r3, [sp, #32]
   31934:	bne	319a4 <__flatcc_fb_build_schema@@Base+0x11a0>
   31938:	ldr	r3, [sp, #20]
   3193c:	cmp	r3, #0
   31940:	bne	32384 <__flatcc_fb_build_schema@@Base+0x1b80>
   31944:	ldr	r3, [sp, #40]	; 0x28
   31948:	eor	r3, r3, #1
   3194c:	ldr	r2, [sp, #60]	; 0x3c
   31950:	tst	r2, r3
   31954:	bne	32370 <__flatcc_fb_build_schema@@Base+0x1b6c>
   31958:	ldr	r3, [sp, #40]	; 0x28
   3195c:	cmp	r6, #0
   31960:	movne	r3, #0
   31964:	andeq	r3, r3, #1
   31968:	cmp	r3, #0
   3196c:	bne	323ec <__flatcc_fb_build_schema@@Base+0x1be8>
   31970:	cmp	r6, #0
   31974:	beq	32434 <__flatcc_fb_build_schema@@Base+0x1c30>
   31978:	ldrh	r3, [r6, #16]
   3197c:	cmp	r3, #5
   31980:	beq	32404 <__flatcc_fb_build_schema@@Base+0x1c00>
   31984:	cmp	r3, #4
   31988:	mov	r3, #0
   3198c:	ldreq	r2, [pc, #-316]	; 31858 <__flatcc_fb_build_schema@@Base+0x1054>
   31990:	ldrne	r2, [pc, #-316]	; 3185c <__flatcc_fb_build_schema@@Base+0x1058>
   31994:	ldr	r1, [r6, #4]
   31998:	mov	r0, r8
   3199c:	bl	2eea8 <__flatcc_fb_clear_parser@@Base+0x1f8>
   319a0:	b	32384 <__flatcc_fb_build_schema@@Base+0x1b80>
   319a4:	mov	r3, r2
   319a8:	ldr	r2, [pc, #-336]	; 31860 <__flatcc_fb_build_schema@@Base+0x105c>
   319ac:	ldr	r1, [fp, #4]
   319b0:	mov	r0, r8
   319b4:	bl	2eea8 <__flatcc_fb_clear_parser@@Base+0x1f8>
   319b8:	mov	r3, #1
   319bc:	strh	r3, [fp, #24]
   319c0:	b	323b0 <__flatcc_fb_build_schema@@Base+0x1bac>
   319c4:	ldrh	r3, [fp, #56]	; 0x38
   319c8:	cmp	r3, #0
   319cc:	ldreq	r3, [r8, #164]	; 0xa4
   319d0:	streq	r3, [sp, #32]
   319d4:	beq	31938 <__flatcc_fb_build_schema@@Base+0x1134>
   319d8:	mov	r3, #0
   319dc:	ldr	r2, [pc, #-384]	; 31864 <__flatcc_fb_build_schema@@Base+0x1060>
   319e0:	ldr	r1, [fp, #4]
   319e4:	mov	r0, r8
   319e8:	bl	2eea8 <__flatcc_fb_clear_parser@@Base+0x1f8>
   319ec:	mov	r3, #1
   319f0:	strh	r3, [fp, #24]
   319f4:	b	323b0 <__flatcc_fb_build_schema@@Base+0x1bac>
   319f8:	ldrh	r3, [fp, #56]	; 0x38
   319fc:	cmp	r3, #0
   31a00:	moveq	r3, #0
   31a04:	streq	r3, [sp, #32]
   31a08:	beq	31938 <__flatcc_fb_build_schema@@Base+0x1134>
   31a0c:	mov	r3, #0
   31a10:	ldr	r2, [pc, #-432]	; 31868 <__flatcc_fb_build_schema@@Base+0x1064>
   31a14:	ldr	r1, [fp, #4]
   31a18:	mov	r0, r8
   31a1c:	bl	2eea8 <__flatcc_fb_clear_parser@@Base+0x1f8>
   31a20:	mov	r3, #1
   31a24:	strh	r3, [fp, #24]
   31a28:	b	323b0 <__flatcc_fb_build_schema@@Base+0x1bac>
   31a2c:	ldr	r5, [sl, #12]
   31a30:	ldr	r1, [fp, #16]
   31a34:	cmp	r1, #0
   31a38:	beq	31ae4 <__flatcc_fb_build_schema@@Base+0x12e0>
   31a3c:	mov	ip, r1
   31a40:	mov	r2, #0
   31a44:	b	31a50 <__flatcc_fb_build_schema@@Base+0x124c>
   31a48:	mov	r2, r3
   31a4c:	mov	ip, r0
   31a50:	ldr	r0, [ip]
   31a54:	add	r3, r2, #1
   31a58:	cmp	r0, #0
   31a5c:	bne	31a48 <__flatcc_fb_build_schema@@Base+0x1244>
   31a60:	str	r0, [sp, #44]	; 0x2c
   31a64:	str	ip, [sp, #32]
   31a68:	cmp	ip, #0
   31a6c:	beq	31ae4 <__flatcc_fb_build_schema@@Base+0x12e0>
   31a70:	adds	r0, r5, #0
   31a74:	movne	r0, #1
   31a78:	cmp	r3, #1
   31a7c:	movne	r0, #0
   31a80:	cmp	r0, #0
   31a84:	bne	31b7c <__flatcc_fb_build_schema@@Base+0x1378>
   31a88:	ldr	r0, [sp, #44]	; 0x2c
   31a8c:	cmp	r3, #1
   31a90:	moveq	r1, r0
   31a94:	cmp	r9, #0
   31a98:	beq	31ae4 <__flatcc_fb_build_schema@@Base+0x12e0>
   31a9c:	ldr	r0, [r8, #412]	; 0x19c
   31aa0:	cmp	r0, #0
   31aa4:	beq	31ae4 <__flatcc_fb_build_schema@@Base+0x12e0>
   31aa8:	rsb	r2, r2, #0
   31aac:	bl	29418 <fb_scope_table_find@@Base>
   31ab0:	cmp	r0, #0
   31ab4:	beq	31ae4 <__flatcc_fb_build_schema@@Base+0x12e0>
   31ab8:	ldr	r3, [sp, #32]
   31abc:	ldr	r3, [r3, #4]
   31ac0:	ldr	r2, [r3, #4]
   31ac4:	ldr	r1, [r3]
   31ac8:	add	r0, r0, #4
   31acc:	bl	284c8 <fb_symbol_table_find@@Base>
   31ad0:	subs	r7, r0, #0
   31ad4:	beq	31ae4 <__flatcc_fb_build_schema@@Base+0x12e0>
   31ad8:	ldrh	r3, [r7, #8]
   31adc:	cmp	r3, #4
   31ae0:	bls	31c10 <__flatcc_fb_build_schema@@Base+0x140c>
   31ae4:	mov	r3, fp
   31ae8:	ldr	r2, [pc, #-644]	; 3186c <__flatcc_fb_build_schema@@Base+0x1068>
   31aec:	ldr	r1, [fp, #16]
   31af0:	mov	r0, r8
   31af4:	bl	2ba04 <error_ref_sym@@Base>
   31af8:	mov	r3, #1
   31afc:	strh	r3, [fp, #24]
   31b00:	str	r3, [sp, #20]
   31b04:	b	323b0 <__flatcc_fb_build_schema@@Base+0x1bac>
   31b08:	ldr	r1, [r7, #16]
   31b0c:	ldr	r0, [sp, #16]
   31b10:	bl	27e80 <ptr_set_find_item@@Base>
   31b14:	cmp	r0, #0
   31b18:	beq	31ba8 <__flatcc_fb_build_schema@@Base+0x13a4>
   31b1c:	ldrh	r3, [r7, #8]
   31b20:	cmp	r3, #4
   31b24:	ldrls	pc, [pc, r3, lsl #2]
   31b28:	b	31c74 <__flatcc_fb_build_schema@@Base+0x1470>
   31b2c:	muleq	r3, r4, ip
   31b30:	muleq	r3, r4, ip
   31b34:	andeq	r1, r3, r4, asr ip
   31b38:	andeq	r1, r3, r8, lsr #24
   31b3c:	muleq	r3, r4, ip
   31b40:	sub	r7, r7, #1
   31b44:	add	r4, r4, #1
   31b48:	cmp	r7, #1
   31b4c:	ble	31be4 <__flatcc_fb_build_schema@@Base+0x13e0>
   31b50:	cmp	r9, #0
   31b54:	beq	31b40 <__flatcc_fb_build_schema@@Base+0x133c>
   31b58:	ldr	r0, [r8, #412]	; 0x19c
   31b5c:	cmp	r0, #0
   31b60:	beq	31b40 <__flatcc_fb_build_schema@@Base+0x133c>
   31b64:	mov	r2, r4
   31b68:	ldr	r1, [r5]
   31b6c:	bl	29418 <fb_scope_table_find@@Base>
   31b70:	cmp	r0, #0
   31b74:	beq	31b40 <__flatcc_fb_build_schema@@Base+0x133c>
   31b78:	mov	r5, r0
   31b7c:	ldr	r3, [sp, #32]
   31b80:	ldr	r3, [r3, #4]
   31b84:	ldr	r2, [r3, #4]
   31b88:	ldr	r1, [r3]
   31b8c:	add	r0, r5, #4
   31b90:	bl	284c8 <fb_symbol_table_find@@Base>
   31b94:	subs	r7, r0, #0
   31b98:	beq	31ba8 <__flatcc_fb_build_schema@@Base+0x13a4>
   31b9c:	ldrh	r3, [r7, #8]
   31ba0:	cmp	r3, #4
   31ba4:	bls	31b08 <__flatcc_fb_build_schema@@Base+0x1304>
   31ba8:	cmp	r5, #0
   31bac:	beq	31ae4 <__flatcc_fb_build_schema@@Base+0x12e0>
   31bb0:	ldr	r3, [r5]
   31bb4:	cmp	r3, #0
   31bb8:	beq	31ae4 <__flatcc_fb_build_schema@@Base+0x12e0>
   31bbc:	mov	r4, #0
   31bc0:	add	r4, r4, #1
   31bc4:	ldr	r3, [r3]
   31bc8:	cmp	r3, #0
   31bcc:	bne	31bc0 <__flatcc_fb_build_schema@@Base+0x13bc>
   31bd0:	cmp	r4, #0
   31bd4:	beq	31ae4 <__flatcc_fb_build_schema@@Base+0x12e0>
   31bd8:	mov	r7, r4
   31bdc:	rsb	r4, r4, #1
   31be0:	b	31b48 <__flatcc_fb_build_schema@@Base+0x1344>
   31be4:	cmp	r9, #0
   31be8:	beq	31ae4 <__flatcc_fb_build_schema@@Base+0x12e0>
   31bec:	ldr	r0, [r8, #412]	; 0x19c
   31bf0:	cmp	r0, #0
   31bf4:	beq	31ae4 <__flatcc_fb_build_schema@@Base+0x12e0>
   31bf8:	mov	r2, #0
   31bfc:	mov	r1, r2
   31c00:	bl	29418 <fb_scope_table_find@@Base>
   31c04:	subs	r5, r0, #0
   31c08:	bne	31b7c <__flatcc_fb_build_schema@@Base+0x1378>
   31c0c:	b	31ae4 <__flatcc_fb_build_schema@@Base+0x12e0>
   31c10:	ldr	r1, [r7, #16]
   31c14:	ldr	r0, [sp, #16]
   31c18:	bl	27e80 <ptr_set_find_item@@Base>
   31c1c:	cmp	r0, #0
   31c20:	bne	31b1c <__flatcc_fb_build_schema@@Base+0x1318>
   31c24:	b	31ae4 <__flatcc_fb_build_schema@@Base+0x12e0>
   31c28:	ldrh	r3, [fp, #72]	; 0x48
   31c2c:	tst	r3, #256	; 0x100
   31c30:	beq	31c48 <__flatcc_fb_build_schema@@Base+0x1444>
   31c34:	mov	r3, #0
   31c38:	ldr	r2, [pc, #-976]	; 31870 <__flatcc_fb_build_schema@@Base+0x106c>
   31c3c:	ldr	r1, [fp, #4]
   31c40:	mov	r0, r8
   31c44:	bl	2eea8 <__flatcc_fb_clear_parser@@Base+0x1f8>
   31c48:	ldr	r3, [r8, #148]	; 0x94
   31c4c:	str	r3, [sp, #32]
   31c50:	b	31c9c <__flatcc_fb_build_schema@@Base+0x1498>
   31c54:	ldr	r3, [r7, #4]
   31c58:	ldr	r2, [pc, #-1004]	; 31874 <__flatcc_fb_build_schema@@Base+0x1070>
   31c5c:	ldr	r1, [fp, #4]
   31c60:	mov	r0, r8
   31c64:	bl	2eea8 <__flatcc_fb_clear_parser@@Base+0x1f8>
   31c68:	mov	r3, #1
   31c6c:	strh	r3, [fp, #24]
   31c70:	b	323b0 <__flatcc_fb_build_schema@@Base+0x1bac>
   31c74:	ldr	r3, [r7, #4]
   31c78:	ldr	r2, [pc, #-1032]	; 31878 <__flatcc_fb_build_schema@@Base+0x1074>
   31c7c:	ldr	r1, [fp, #4]
   31c80:	mov	r0, r8
   31c84:	bl	2eea8 <__flatcc_fb_clear_parser@@Base+0x1f8>
   31c88:	mov	r3, #1
   31c8c:	strh	r3, [fp, #24]
   31c90:	b	323b0 <__flatcc_fb_build_schema@@Base+0x1bac>
   31c94:	mov	r3, #0
   31c98:	str	r3, [sp, #32]
   31c9c:	mov	r3, #14
   31ca0:	strh	r3, [fp, #24]
   31ca4:	str	r7, [fp, #16]
   31ca8:	ldrd	r2, [r7, #112]	; 0x70
   31cac:	strd	r2, [fp, #88]	; 0x58
   31cb0:	ldrh	r3, [r7, #104]	; 0x68
   31cb4:	strh	r3, [fp, #74]	; 0x4a
   31cb8:	ldrh	r3, [r7, #8]
   31cbc:	ldr	r2, [sp, #20]
   31cc0:	cmp	r3, #4
   31cc4:	cmpeq	r2, #0
   31cc8:	bne	31cf0 <__flatcc_fb_build_schema@@Base+0x14ec>
   31ccc:	ldr	r3, [sp, #40]	; 0x28
   31cd0:	cmp	r3, #0
   31cd4:	ldrheq	r2, [sp, #24]
   31cd8:	moveq	r3, #0
   31cdc:	strdeq	r2, [fp, #96]	; 0x60
   31ce0:	ldrd	r2, [sp, #24]
   31ce4:	adds	r2, r2, #1
   31ce8:	adc	r3, r3, #0
   31cec:	strd	r2, [sp, #24]
   31cf0:	ldrh	r3, [fp, #56]	; 0x38
   31cf4:	cmp	r3, #0
   31cf8:	beq	32020 <__flatcc_fb_build_schema@@Base+0x181c>
   31cfc:	ldrh	r2, [r7, #8]
   31d00:	cmp	r2, #3
   31d04:	beq	31d28 <__flatcc_fb_build_schema@@Base+0x1524>
   31d08:	mov	r3, #0
   31d0c:	ldr	r2, [pc, #-1144]	; 3189c <__flatcc_fb_build_schema@@Base+0x1098>
   31d10:	ldr	r1, [fp, #4]
   31d14:	mov	r0, r8
   31d18:	bl	2eea8 <__flatcc_fb_clear_parser@@Base+0x1f8>
   31d1c:	mov	r3, #1
   31d20:	strh	r3, [fp, #24]
   31d24:	b	323b0 <__flatcc_fb_build_schema@@Base+0x1bac>
   31d28:	cmp	r3, #13
   31d2c:	beq	31d9c <__flatcc_fb_build_schema@@Base+0x1598>
   31d30:	add	r4, fp, #48	; 0x30
   31d34:	mov	r3, r4
   31d38:	ldr	r2, [r7, #40]	; 0x28
   31d3c:	mov	r1, fp
   31d40:	mov	r0, r8
   31d44:	bl	334d4 <__flatcc_fb_coerce_scalar_type@@Base>
   31d48:	cmp	r0, #0
   31d4c:	movne	r3, #1
   31d50:	strhne	r3, [fp, #24]
   31d54:	bne	323b0 <__flatcc_fb_build_schema@@Base+0x1bac>
   31d58:	ldr	r3, [r8, #212]	; 0xd4
   31d5c:	cmp	r3, #0
   31d60:	beq	31938 <__flatcc_fb_build_schema@@Base+0x1134>
   31d64:	ldr	r0, [fp, #16]
   31d68:	mov	r1, r4
   31d6c:	add	r0, r0, #72	; 0x48
   31d70:	bl	3a724 <fb_value_set_find_item@@Base>
   31d74:	cmp	r0, #0
   31d78:	bne	31938 <__flatcc_fb_build_schema@@Base+0x1134>
   31d7c:	mov	r3, #0
   31d80:	ldr	r2, [pc, #-1292]	; 3187c <__flatcc_fb_build_schema@@Base+0x1078>
   31d84:	ldr	r1, [fp, #4]
   31d88:	mov	r0, r8
   31d8c:	bl	2eea8 <__flatcc_fb_clear_parser@@Base+0x1f8>
   31d90:	mov	r3, #1
   31d94:	strh	r3, [fp, #24]
   31d98:	b	323b0 <__flatcc_fb_build_schema@@Base+0x1bac>
   31d9c:	ldr	r5, [sl, #12]
   31da0:	ldr	r3, [fp, #48]	; 0x30
   31da4:	str	r3, [sp, #76]	; 0x4c
   31da8:	cmp	r3, #0
   31dac:	bne	31dc4 <__flatcc_fb_build_schema@@Base+0x15c0>
   31db0:	ldr	r3, [pc, #-1336]	; 31880 <__flatcc_fb_build_schema@@Base+0x107c>
   31db4:	ldr	r2, [pc, #-1336]	; 31884 <__flatcc_fb_build_schema@@Base+0x1080>
   31db8:	ldr	r1, [pc, #-1228]	; 318f4 <__flatcc_fb_build_schema@@Base+0x10f0>
   31dbc:	ldr	r0, [pc, #-1340]	; 31888 <__flatcc_fb_build_schema@@Base+0x1084>
   31dc0:	bl	14148 <__assert_fail@plt>
   31dc4:	ldr	r3, [sp, #76]	; 0x4c
   31dc8:	str	r3, [sp, #72]	; 0x48
   31dcc:	mov	r2, #0
   31dd0:	b	31de4 <__flatcc_fb_build_schema@@Base+0x15e0>
   31dd4:	ldr	r2, [sp, #72]	; 0x48
   31dd8:	str	r2, [sp, #44]	; 0x2c
   31ddc:	mov	r2, r3
   31de0:	str	r1, [sp, #72]	; 0x48
   31de4:	ldr	r3, [sp, #72]	; 0x48
   31de8:	ldr	r1, [r3]
   31dec:	add	r3, r2, #1
   31df0:	cmp	r1, #0
   31df4:	bne	31dd4 <__flatcc_fb_build_schema@@Base+0x15d0>
   31df8:	ldr	r3, [sp, #44]	; 0x2c
   31dfc:	cmp	r3, #0
   31e00:	beq	31fc4 <__flatcc_fb_build_schema@@Base+0x17c0>
   31e04:	adds	r3, r5, #0
   31e08:	movne	r3, #1
   31e0c:	cmp	r2, #1
   31e10:	movne	r3, #0
   31e14:	cmp	r3, #0
   31e18:	bne	31ed0 <__flatcc_fb_build_schema@@Base+0x16cc>
   31e1c:	ldr	r3, [sp, #76]	; 0x4c
   31e20:	cmp	r2, #1
   31e24:	movne	r1, r3
   31e28:	cmp	r9, #0
   31e2c:	beq	31fc4 <__flatcc_fb_build_schema@@Base+0x17c0>
   31e30:	ldr	r0, [r8, #412]	; 0x19c
   31e34:	cmp	r0, #0
   31e38:	beq	31fc4 <__flatcc_fb_build_schema@@Base+0x17c0>
   31e3c:	rsb	r2, r2, #1
   31e40:	bl	29418 <fb_scope_table_find@@Base>
   31e44:	cmp	r0, #0
   31e48:	beq	31fc4 <__flatcc_fb_build_schema@@Base+0x17c0>
   31e4c:	ldr	r3, [sp, #44]	; 0x2c
   31e50:	ldr	r3, [r3, #4]
   31e54:	ldr	r2, [r3, #4]
   31e58:	ldr	r1, [r3]
   31e5c:	add	r0, r0, #4
   31e60:	bl	284c8 <fb_symbol_table_find@@Base>
   31e64:	subs	r4, r0, #0
   31e68:	beq	31fc4 <__flatcc_fb_build_schema@@Base+0x17c0>
   31e6c:	ldrh	r3, [r4, #8]
   31e70:	cmp	r3, #4
   31e74:	bhi	31fc4 <__flatcc_fb_build_schema@@Base+0x17c0>
   31e78:	ldr	r1, [r4, #16]
   31e7c:	ldr	r0, [sp, #16]
   31e80:	bl	27e80 <ptr_set_find_item@@Base>
   31e84:	cmp	r0, #0
   31e88:	beq	31fc4 <__flatcc_fb_build_schema@@Base+0x17c0>
   31e8c:	ldrh	r3, [r4, #8]
   31e90:	cmp	r3, #3
   31e94:	bne	31fc4 <__flatcc_fb_build_schema@@Base+0x17c0>
   31e98:	mov	r0, r4
   31e9c:	ldr	r3, [sp, #72]	; 0x48
   31ea0:	ldr	r3, [r3, #4]
   31ea4:	ldr	r2, [r3, #4]
   31ea8:	ldr	r1, [r3]
   31eac:	add	r0, r0, #56	; 0x38
   31eb0:	bl	284c8 <fb_symbol_table_find@@Base>
   31eb4:	subs	r3, r0, #0
   31eb8:	beq	31fd8 <__flatcc_fb_build_schema@@Base+0x17d4>
   31ebc:	add	ip, fp, #48	; 0x30
   31ec0:	add	r3, r3, #48	; 0x30
   31ec4:	ldm	r3, {r0, r1, r2, r3}
   31ec8:	stm	ip, {r0, r1, r2, r3}
   31ecc:	b	31938 <__flatcc_fb_build_schema@@Base+0x1134>
   31ed0:	str	r6, [sp, #36]	; 0x24
   31ed4:	b	31f30 <__flatcc_fb_build_schema@@Base+0x172c>
   31ed8:	ldr	r1, [r4, #16]
   31edc:	ldr	r0, [sp, #16]
   31ee0:	bl	27e80 <ptr_set_find_item@@Base>
   31ee4:	cmp	r0, #0
   31ee8:	beq	31f5c <__flatcc_fb_build_schema@@Base+0x1758>
   31eec:	ldr	r6, [sp, #36]	; 0x24
   31ef0:	b	31e8c <__flatcc_fb_build_schema@@Base+0x1688>
   31ef4:	sub	r4, r4, #1
   31ef8:	add	r6, r6, #1
   31efc:	cmp	r4, #1
   31f00:	ble	31f98 <__flatcc_fb_build_schema@@Base+0x1794>
   31f04:	cmp	r9, #0
   31f08:	beq	31ef4 <__flatcc_fb_build_schema@@Base+0x16f0>
   31f0c:	ldr	r0, [r8, #412]	; 0x19c
   31f10:	cmp	r0, #0
   31f14:	beq	31ef4 <__flatcc_fb_build_schema@@Base+0x16f0>
   31f18:	mov	r2, r6
   31f1c:	ldr	r1, [r5]
   31f20:	bl	29418 <fb_scope_table_find@@Base>
   31f24:	cmp	r0, #0
   31f28:	beq	31ef4 <__flatcc_fb_build_schema@@Base+0x16f0>
   31f2c:	mov	r5, r0
   31f30:	ldr	r3, [sp, #44]	; 0x2c
   31f34:	ldr	r3, [r3, #4]
   31f38:	ldr	r2, [r3, #4]
   31f3c:	ldr	r1, [r3]
   31f40:	add	r0, r5, #4
   31f44:	bl	284c8 <fb_symbol_table_find@@Base>
   31f48:	subs	r4, r0, #0
   31f4c:	beq	31f5c <__flatcc_fb_build_schema@@Base+0x1758>
   31f50:	ldrh	r3, [r4, #8]
   31f54:	cmp	r3, #4
   31f58:	bls	31ed8 <__flatcc_fb_build_schema@@Base+0x16d4>
   31f5c:	cmp	r5, #0
   31f60:	beq	31ff8 <__flatcc_fb_build_schema@@Base+0x17f4>
   31f64:	ldr	r2, [r5]
   31f68:	cmp	r2, #0
   31f6c:	beq	32000 <__flatcc_fb_build_schema@@Base+0x17fc>
   31f70:	mov	r3, #0
   31f74:	add	r3, r3, #1
   31f78:	ldr	r2, [r2]
   31f7c:	cmp	r2, #0
   31f80:	bne	31f74 <__flatcc_fb_build_schema@@Base+0x1770>
   31f84:	cmp	r3, #0
   31f88:	beq	32008 <__flatcc_fb_build_schema@@Base+0x1804>
   31f8c:	mov	r4, r3
   31f90:	rsb	r6, r3, #1
   31f94:	b	31efc <__flatcc_fb_build_schema@@Base+0x16f8>
   31f98:	cmp	r9, #0
   31f9c:	beq	32010 <__flatcc_fb_build_schema@@Base+0x180c>
   31fa0:	ldr	r0, [r8, #412]	; 0x19c
   31fa4:	cmp	r0, #0
   31fa8:	beq	32018 <__flatcc_fb_build_schema@@Base+0x1814>
   31fac:	mov	r2, #0
   31fb0:	mov	r1, r2
   31fb4:	bl	29418 <fb_scope_table_find@@Base>
   31fb8:	cmp	r0, #0
   31fbc:	bne	31f2c <__flatcc_fb_build_schema@@Base+0x1728>
   31fc0:	ldr	r6, [sp, #36]	; 0x24
   31fc4:	ldr	r3, [sp, #76]	; 0x4c
   31fc8:	ldr	r3, [r3]
   31fcc:	cmp	r3, #0
   31fd0:	moveq	r0, r7
   31fd4:	beq	31e9c <__flatcc_fb_build_schema@@Base+0x1698>
   31fd8:	mov	r3, fp
   31fdc:	ldr	r2, [pc, #-1880]	; 3188c <__flatcc_fb_build_schema@@Base+0x1088>
   31fe0:	ldr	r1, [fp, #48]	; 0x30
   31fe4:	mov	r0, r8
   31fe8:	bl	2ba04 <error_ref_sym@@Base>
   31fec:	mov	r3, #1
   31ff0:	strh	r3, [fp, #24]
   31ff4:	b	323b0 <__flatcc_fb_build_schema@@Base+0x1bac>
   31ff8:	ldr	r6, [sp, #36]	; 0x24
   31ffc:	b	31fc4 <__flatcc_fb_build_schema@@Base+0x17c0>
   32000:	ldr	r6, [sp, #36]	; 0x24
   32004:	b	31fc4 <__flatcc_fb_build_schema@@Base+0x17c0>
   32008:	ldr	r6, [sp, #36]	; 0x24
   3200c:	b	31fc4 <__flatcc_fb_build_schema@@Base+0x17c0>
   32010:	ldr	r6, [sp, #36]	; 0x24
   32014:	b	31fc4 <__flatcc_fb_build_schema@@Base+0x17c0>
   32018:	ldr	r6, [sp, #36]	; 0x24
   3201c:	b	31fc4 <__flatcc_fb_build_schema@@Base+0x17c0>
   32020:	ldrh	r3, [r7, #8]
   32024:	cmp	r3, #3
   32028:	bne	31938 <__flatcc_fb_build_schema@@Base+0x1134>
   3202c:	mov	r3, #5
   32030:	strh	r3, [fp, #56]	; 0x38
   32034:	mov	r4, fp
   32038:	mov	r2, #0
   3203c:	mov	r3, #0
   32040:	strd	r2, [r4, #48]!	; 0x30
   32044:	mov	r3, r4
   32048:	ldr	r2, [r7, #40]	; 0x28
   3204c:	mov	r1, r7
   32050:	mov	r0, r8
   32054:	bl	334d4 <__flatcc_fb_coerce_scalar_type@@Base>
   32058:	cmp	r0, #0
   3205c:	movne	r3, #1
   32060:	strhne	r3, [fp, #24]
   32064:	bne	323b0 <__flatcc_fb_build_schema@@Base+0x1bac>
   32068:	ldr	r3, [r8, #212]	; 0xd4
   3206c:	cmp	r3, #0
   32070:	beq	31938 <__flatcc_fb_build_schema@@Base+0x1134>
   32074:	ldr	r0, [fp, #16]
   32078:	mov	r1, r4
   3207c:	add	r0, r0, #72	; 0x48
   32080:	bl	3a724 <fb_value_set_find_item@@Base>
   32084:	cmp	r0, #0
   32088:	bne	31938 <__flatcc_fb_build_schema@@Base+0x1134>
   3208c:	ldr	r3, [r7, #4]
   32090:	ldr	r2, [pc, #-2056]	; 31890 <__flatcc_fb_build_schema@@Base+0x108c>
   32094:	ldr	r1, [fp, #4]
   32098:	mov	r0, r8
   3209c:	bl	2eea8 <__flatcc_fb_clear_parser@@Base+0x1f8>
   320a0:	mov	r3, #1
   320a4:	strh	r3, [fp, #24]
   320a8:	b	323b0 <__flatcc_fb_build_schema@@Base+0x1bac>
   320ac:	ldr	r5, [sl, #12]
   320b0:	ldr	r1, [fp, #16]
   320b4:	cmp	r1, #0
   320b8:	beq	3215c <__flatcc_fb_build_schema@@Base+0x1958>
   320bc:	mov	ip, r1
   320c0:	mov	r2, #0
   320c4:	b	320d0 <__flatcc_fb_build_schema@@Base+0x18cc>
   320c8:	mov	r2, r0
   320cc:	mov	ip, r3
   320d0:	ldr	r3, [ip]
   320d4:	add	r0, r2, #1
   320d8:	cmp	r3, #0
   320dc:	bne	320c8 <__flatcc_fb_build_schema@@Base+0x18c4>
   320e0:	str	ip, [sp, #32]
   320e4:	cmp	ip, #0
   320e8:	beq	3215c <__flatcc_fb_build_schema@@Base+0x1958>
   320ec:	adds	ip, r5, #0
   320f0:	movne	ip, #1
   320f4:	cmp	r0, #1
   320f8:	movne	ip, #0
   320fc:	cmp	ip, #0
   32100:	bne	321f0 <__flatcc_fb_build_schema@@Base+0x19ec>
   32104:	cmp	r0, #1
   32108:	moveq	r1, r3
   3210c:	cmp	r9, #0
   32110:	beq	3215c <__flatcc_fb_build_schema@@Base+0x1958>
   32114:	ldr	r0, [r8, #412]	; 0x19c
   32118:	cmp	r0, #0
   3211c:	beq	3215c <__flatcc_fb_build_schema@@Base+0x1958>
   32120:	rsb	r2, r2, #0
   32124:	bl	29418 <fb_scope_table_find@@Base>
   32128:	cmp	r0, #0
   3212c:	beq	3215c <__flatcc_fb_build_schema@@Base+0x1958>
   32130:	ldr	r3, [sp, #32]
   32134:	ldr	r3, [r3, #4]
   32138:	ldr	r2, [r3, #4]
   3213c:	ldr	r1, [r3]
   32140:	add	r0, r0, #4
   32144:	bl	284c8 <fb_symbol_table_find@@Base>
   32148:	subs	r7, r0, #0
   3214c:	beq	3215c <__flatcc_fb_build_schema@@Base+0x1958>
   32150:	ldrh	r3, [r7, #8]
   32154:	cmp	r3, #4
   32158:	bls	32284 <__flatcc_fb_build_schema@@Base+0x1a80>
   3215c:	mov	r3, fp
   32160:	ldr	r2, [pc, #-2260]	; 31894 <__flatcc_fb_build_schema@@Base+0x1090>
   32164:	ldr	r1, [fp, #16]
   32168:	mov	r0, r8
   3216c:	bl	2ba04 <error_ref_sym@@Base>
   32170:	mov	r3, #1
   32174:	strh	r3, [fp, #24]
   32178:	b	323b0 <__flatcc_fb_build_schema@@Base+0x1bac>
   3217c:	ldr	r1, [r7, #16]
   32180:	ldr	r0, [sp, #16]
   32184:	bl	27e80 <ptr_set_find_item@@Base>
   32188:	cmp	r0, #0
   3218c:	beq	3221c <__flatcc_fb_build_schema@@Base+0x1a18>
   32190:	ldrh	r3, [r7, #8]
   32194:	cmp	r3, #4
   32198:	ldrls	pc, [pc, r3, lsl #2]
   3219c:	b	3229c <__flatcc_fb_build_schema@@Base+0x1a98>
   321a0:			; <UNDEFINED> instruction: 0x000322bc
   321a4:			; <UNDEFINED> instruction: 0x000322bc
   321a8:	muleq	r3, ip, r2
   321ac:			; <UNDEFINED> instruction: 0x000322bc
   321b0:			; <UNDEFINED> instruction: 0x000322bc
   321b4:	sub	r7, r7, #1
   321b8:	add	r4, r4, #1
   321bc:	cmp	r7, #1
   321c0:	ble	32258 <__flatcc_fb_build_schema@@Base+0x1a54>
   321c4:	cmp	r9, #0
   321c8:	beq	321b4 <__flatcc_fb_build_schema@@Base+0x19b0>
   321cc:	ldr	r0, [r8, #412]	; 0x19c
   321d0:	cmp	r0, #0
   321d4:	beq	321b4 <__flatcc_fb_build_schema@@Base+0x19b0>
   321d8:	mov	r2, r4
   321dc:	ldr	r1, [r5]
   321e0:	bl	29418 <fb_scope_table_find@@Base>
   321e4:	cmp	r0, #0
   321e8:	beq	321b4 <__flatcc_fb_build_schema@@Base+0x19b0>
   321ec:	mov	r5, r0
   321f0:	ldr	r3, [sp, #32]
   321f4:	ldr	r3, [r3, #4]
   321f8:	ldr	r2, [r3, #4]
   321fc:	ldr	r1, [r3]
   32200:	add	r0, r5, #4
   32204:	bl	284c8 <fb_symbol_table_find@@Base>
   32208:	subs	r7, r0, #0
   3220c:	beq	3221c <__flatcc_fb_build_schema@@Base+0x1a18>
   32210:	ldrh	r3, [r7, #8]
   32214:	cmp	r3, #4
   32218:	bls	3217c <__flatcc_fb_build_schema@@Base+0x1978>
   3221c:	cmp	r5, #0
   32220:	beq	3215c <__flatcc_fb_build_schema@@Base+0x1958>
   32224:	ldr	r3, [r5]
   32228:	cmp	r3, #0
   3222c:	beq	3215c <__flatcc_fb_build_schema@@Base+0x1958>
   32230:	mov	r4, #0
   32234:	add	r4, r4, #1
   32238:	ldr	r3, [r3]
   3223c:	cmp	r3, #0
   32240:	bne	32234 <__flatcc_fb_build_schema@@Base+0x1a30>
   32244:	cmp	r4, #0
   32248:	beq	3215c <__flatcc_fb_build_schema@@Base+0x1958>
   3224c:	mov	r7, r4
   32250:	rsb	r4, r4, #1
   32254:	b	321bc <__flatcc_fb_build_schema@@Base+0x19b8>
   32258:	cmp	r9, #0
   3225c:	beq	3215c <__flatcc_fb_build_schema@@Base+0x1958>
   32260:	ldr	r0, [r8, #412]	; 0x19c
   32264:	cmp	r0, #0
   32268:	beq	3215c <__flatcc_fb_build_schema@@Base+0x1958>
   3226c:	mov	r2, #0
   32270:	mov	r1, r2
   32274:	bl	29418 <fb_scope_table_find@@Base>
   32278:	subs	r5, r0, #0
   3227c:	bne	321f0 <__flatcc_fb_build_schema@@Base+0x19ec>
   32280:	b	3215c <__flatcc_fb_build_schema@@Base+0x1958>
   32284:	ldr	r1, [r7, #16]
   32288:	ldr	r0, [sp, #16]
   3228c:	bl	27e80 <ptr_set_find_item@@Base>
   32290:	cmp	r0, #0
   32294:	bne	32190 <__flatcc_fb_build_schema@@Base+0x198c>
   32298:	b	3215c <__flatcc_fb_build_schema@@Base+0x1958>
   3229c:	ldr	r3, [fp, #16]
   322a0:	ldr	r2, [pc, #-2576]	; 31898 <__flatcc_fb_build_schema@@Base+0x1094>
   322a4:	ldr	r1, [fp, #4]
   322a8:	mov	r0, r8
   322ac:	bl	2eea8 <__flatcc_fb_clear_parser@@Base+0x1f8>
   322b0:	mov	r3, #1
   322b4:	strh	r3, [fp, #24]
   322b8:	b	323b0 <__flatcc_fb_build_schema@@Base+0x1bac>
   322bc:	ldrh	r3, [fp, #56]	; 0x38
   322c0:	cmp	r3, #0
   322c4:	bne	32330 <__flatcc_fb_build_schema@@Base+0x1b2c>
   322c8:	mov	r3, #15
   322cc:	strh	r3, [fp, #24]
   322d0:	str	r7, [fp, #16]
   322d4:	ldrd	r2, [r7, #112]	; 0x70
   322d8:	strd	r2, [fp, #88]	; 0x58
   322dc:	ldrh	r3, [r7, #104]	; 0x68
   322e0:	strh	r3, [fp, #74]	; 0x4a
   322e4:	ldrh	r3, [r7, #8]
   322e8:	ldr	r2, [sp, #20]
   322ec:	cmp	r3, #4
   322f0:	cmpeq	r2, #0
   322f4:	movne	r3, #0
   322f8:	strne	r3, [sp, #32]
   322fc:	bne	31938 <__flatcc_fb_build_schema@@Base+0x1134>
   32300:	ldr	r3, [sp, #40]	; 0x28
   32304:	cmp	r3, #0
   32308:	ldrheq	r2, [sp, #24]
   3230c:	moveq	r3, #0
   32310:	strdeq	r2, [fp, #96]	; 0x60
   32314:	ldrd	r2, [sp, #24]
   32318:	adds	r2, r2, #1
   3231c:	adc	r3, r3, #0
   32320:	strd	r2, [sp, #24]
   32324:	mov	r3, #0
   32328:	str	r3, [sp, #32]
   3232c:	b	31938 <__flatcc_fb_build_schema@@Base+0x1134>
   32330:	mov	r3, #0
   32334:	ldr	r2, [pc, #-2720]	; 3189c <__flatcc_fb_build_schema@@Base+0x1098>
   32338:	ldr	r1, [fp, #4]
   3233c:	mov	r0, r8
   32340:	bl	2eea8 <__flatcc_fb_clear_parser@@Base+0x1f8>
   32344:	mov	r3, #1
   32348:	strh	r3, [fp, #24]
   3234c:	b	323b0 <__flatcc_fb_build_schema@@Base+0x1bac>
   32350:	mov	r3, #0
   32354:	ldr	r2, [pc, #-2748]	; 318a0 <__flatcc_fb_build_schema@@Base+0x109c>
   32358:	ldr	r1, [fp, #4]
   3235c:	mov	r0, r8
   32360:	bl	2eea8 <__flatcc_fb_clear_parser@@Base+0x1f8>
   32364:	mov	r3, #1
   32368:	strh	r3, [fp, #24]
   3236c:	b	323b0 <__flatcc_fb_build_schema@@Base+0x1bac>
   32370:	mov	r3, #0
   32374:	ldr	r2, [pc, #-2776]	; 318a4 <__flatcc_fb_build_schema@@Base+0x10a0>
   32378:	ldr	r1, [r6, #4]
   3237c:	mov	r0, r8
   32380:	bl	2eea8 <__flatcc_fb_clear_parser@@Base+0x1f8>
   32384:	mov	r3, #1
   32388:	str	r3, [sp, #20]
   3238c:	ldrh	r3, [fp, #72]	; 0x48
   32390:	tst	r3, #128	; 0x80
   32394:	beq	323b0 <__flatcc_fb_build_schema@@Base+0x1bac>
   32398:	ldr	r3, [sp, #64]	; 0x40
   3239c:	add	r3, r3, #1
   323a0:	str	r3, [sp, #64]	; 0x40
   323a4:	ldr	r3, [sp, #32]
   323a8:	cmp	r3, #0
   323ac:	beq	325a4 <__flatcc_fb_build_schema@@Base+0x1da0>
   323b0:	ldr	fp, [fp]
   323b4:	cmp	fp, #0
   323b8:	beq	325b8 <__flatcc_fb_build_schema@@Base+0x1db4>
   323bc:	mov	r2, #1
   323c0:	mov	r1, fp
   323c4:	add	r0, sl, #56	; 0x38
   323c8:	bl	2849c <fb_symbol_table_insert_item@@Base>
   323cc:	subs	r7, r0, #0
   323d0:	beq	30ea0 <__flatcc_fb_build_schema@@Base+0x69c>
   323d4:	ldr	r3, [r7, #4]
   323d8:	ldr	r2, [pc, #-2872]	; 318a8 <__flatcc_fb_build_schema@@Base+0x10a4>
   323dc:	ldr	r1, [fp, #4]
   323e0:	mov	r0, r8
   323e4:	bl	2eea8 <__flatcc_fb_clear_parser@@Base+0x1f8>
   323e8:	b	323b0 <__flatcc_fb_build_schema@@Base+0x1bac>
   323ec:	mov	r3, #0
   323f0:	ldr	r2, [pc, #-2892]	; 318ac <__flatcc_fb_build_schema@@Base+0x10a8>
   323f4:	ldr	r1, [fp, #4]
   323f8:	mov	r0, r8
   323fc:	bl	2eea8 <__flatcc_fb_clear_parser@@Base+0x1f8>
   32400:	b	32384 <__flatcc_fb_build_schema@@Base+0x1b80>
   32404:	ldrd	r2, [r6, #8]
   32408:	ldrd	r0, [r8, #216]	; 0xd8
   3240c:	cmp	r3, r1
   32410:	cmpeq	r2, r0
   32414:	bcs	324c0 <__flatcc_fb_build_schema@@Base+0x1cbc>
   32418:	uxth	r2, r2
   3241c:	mov	r3, #0
   32420:	strd	r2, [fp, #96]	; 0x60
   32424:	ldrd	r0, [sp, #48]	; 0x30
   32428:	cmp	r1, r3
   3242c:	cmpeq	r0, r2
   32430:	strdcc	r2, [sp, #48]	; 0x30
   32434:	ldr	r3, [sp, #40]	; 0x28
   32438:	cmp	r3, #0
   3243c:	beq	32598 <__flatcc_fb_build_schema@@Base+0x1d94>
   32440:	ldr	r3, [fp, #96]	; 0x60
   32444:	ldr	r1, [sp, #68]	; 0x44
   32448:	add	r2, r1, r3
   3244c:	ldrb	r3, [r1, r3]
   32450:	cmp	r3, #2
   32454:	beq	324d8 <__flatcc_fb_build_schema@@Base+0x1cd4>
   32458:	cmp	r3, #0
   3245c:	moveq	r3, #1
   32460:	strbeq	r3, [r2]
   32464:	bne	324f8 <__flatcc_fb_build_schema@@Base+0x1cf4>
   32468:	cmp	r7, #0
   3246c:	beq	3238c <__flatcc_fb_build_schema@@Base+0x1b88>
   32470:	ldrh	r3, [r7, #8]
   32474:	cmp	r3, #4
   32478:	bne	3238c <__flatcc_fb_build_schema@@Base+0x1b88>
   3247c:	ldrh	r2, [fp, #24]
   32480:	ldrd	r0, [fp, #96]	; 0x60
   32484:	cmp	r1, #0
   32488:	cmpeq	r0, #1
   3248c:	bhi	32510 <__flatcc_fb_build_schema@@Base+0x1d0c>
   32490:	mov	r3, #0
   32494:	ldr	r1, [pc, #-3052]	; 318b0 <__flatcc_fb_build_schema@@Base+0x10ac>
   32498:	ldr	r0, [pc, #-3052]	; 318b4 <__flatcc_fb_build_schema@@Base+0x10b0>
   3249c:	cmp	r2, #11
   324a0:	movne	r0, r1
   324a4:	mov	r2, r0
   324a8:	ldr	r1, [r6, #4]
   324ac:	mov	r0, r8
   324b0:	bl	2eea8 <__flatcc_fb_clear_parser@@Base+0x1f8>
   324b4:	ldr	r3, [sp, #40]	; 0x28
   324b8:	str	r3, [sp, #20]
   324bc:	b	3238c <__flatcc_fb_build_schema@@Base+0x1b88>
   324c0:	mov	r3, #0
   324c4:	ldr	r2, [pc, #-3092]	; 318b8 <__flatcc_fb_build_schema@@Base+0x10b4>
   324c8:	ldr	r1, [fp, #4]
   324cc:	mov	r0, r8
   324d0:	bl	2eea8 <__flatcc_fb_clear_parser@@Base+0x1f8>
   324d4:	b	32384 <__flatcc_fb_build_schema@@Base+0x1b80>
   324d8:	mov	r3, #0
   324dc:	ldr	r2, [pc, #-3112]	; 318bc <__flatcc_fb_build_schema@@Base+0x10b8>
   324e0:	ldr	r1, [r6, #4]
   324e4:	mov	r0, r8
   324e8:	bl	2eea8 <__flatcc_fb_clear_parser@@Base+0x1f8>
   324ec:	ldr	r3, [sp, #40]	; 0x28
   324f0:	str	r3, [sp, #20]
   324f4:	b	3238c <__flatcc_fb_build_schema@@Base+0x1b88>
   324f8:	mov	r3, #0
   324fc:	ldr	r2, [pc, #-3140]	; 318c0 <__flatcc_fb_build_schema@@Base+0x10bc>
   32500:	ldr	r1, [r6, #4]
   32504:	mov	r0, r8
   32508:	bl	2eea8 <__flatcc_fb_clear_parser@@Base+0x1f8>
   3250c:	b	32468 <__flatcc_fb_build_schema@@Base+0x1c64>
   32510:	sub	r0, r0, #1
   32514:	ldr	r3, [sp, #68]	; 0x44
   32518:	add	r1, r3, r0
   3251c:	ldrb	r3, [r3, r0]
   32520:	cmp	r3, #2
   32524:	beq	32568 <__flatcc_fb_build_schema@@Base+0x1d64>
   32528:	cmp	r3, #0
   3252c:	moveq	r3, #2
   32530:	strbeq	r3, [r1]
   32534:	beq	3238c <__flatcc_fb_build_schema@@Base+0x1b88>
   32538:	mov	r3, #0
   3253c:	ldr	r1, [pc, #-3200]	; 318c4 <__flatcc_fb_build_schema@@Base+0x10c0>
   32540:	ldr	r0, [pc, #-3200]	; 318c8 <__flatcc_fb_build_schema@@Base+0x10c4>
   32544:	cmp	r2, #11
   32548:	movne	r1, r0
   3254c:	mov	r2, r1
   32550:	ldr	r1, [r6, #4]
   32554:	mov	r0, r8
   32558:	bl	2eea8 <__flatcc_fb_clear_parser@@Base+0x1f8>
   3255c:	ldr	r3, [sp, #40]	; 0x28
   32560:	str	r3, [sp, #20]
   32564:	b	3238c <__flatcc_fb_build_schema@@Base+0x1b88>
   32568:	mov	r3, #0
   3256c:	ldr	r1, [pc, #-3240]	; 318cc <__flatcc_fb_build_schema@@Base+0x10c8>
   32570:	ldr	r0, [pc, #-3240]	; 318d0 <__flatcc_fb_build_schema@@Base+0x10cc>
   32574:	cmp	r2, #11
   32578:	movne	r1, r0
   3257c:	mov	r2, r1
   32580:	ldr	r1, [r6, #4]
   32584:	mov	r0, r8
   32588:	bl	2eea8 <__flatcc_fb_clear_parser@@Base+0x1f8>
   3258c:	ldr	r3, [sp, #40]	; 0x28
   32590:	str	r3, [sp, #20]
   32594:	b	3238c <__flatcc_fb_build_schema@@Base+0x1b88>
   32598:	ldr	r3, [sp, #40]	; 0x28
   3259c:	str	r3, [sp, #20]
   325a0:	b	3238c <__flatcc_fb_build_schema@@Base+0x1b88>
   325a4:	ldr	r2, [pc, #-3288]	; 318d4 <__flatcc_fb_build_schema@@Base+0x10d0>
   325a8:	ldr	r1, [fp, #4]
   325ac:	mov	r0, r8
   325b0:	bl	2eea8 <__flatcc_fb_clear_parser@@Base+0x1f8>
   325b4:	b	323b0 <__flatcc_fb_build_schema@@Base+0x1bac>
   325b8:	ldr	ip, [sp, #20]
   325bc:	cmp	ip, #0
   325c0:	bne	326d0 <__flatcc_fb_build_schema@@Base+0x1ecc>
   325c4:	ldr	lr, [sp, #12]
   325c8:	ldrd	r0, [sp, #24]
   325cc:	mov	r2, r0
   325d0:	mov	r3, r1
   325d4:	strd	r2, [lr, #96]	; 0x60
   325d8:	ldr	r2, [sp, #40]	; 0x28
   325dc:	cmp	ip, #0
   325e0:	movne	r2, #0
   325e4:	andeq	r2, r2, #1
   325e8:	cmp	r2, #0
   325ec:	beq	326d0 <__flatcc_fb_build_schema@@Base+0x1ecc>
   325f0:	mov	r3, r0
   325f4:	orrs	r3, r3, r1
   325f8:	movne	r3, #1
   325fc:	moveq	r3, #0
   32600:	ldrd	r4, [sp, #48]	; 0x30
   32604:	cmp	r1, r5
   32608:	cmpeq	r0, r4
   3260c:	movhi	r3, #0
   32610:	andls	r3, r3, #1
   32614:	cmp	r3, #0
   32618:	beq	326d0 <__flatcc_fb_build_schema@@Base+0x1ecc>
   3261c:	orrs	r3, r4, r5
   32620:	beq	32790 <__flatcc_fb_build_schema@@Base+0x1f8c>
   32624:	ldr	r3, [sp, #68]	; 0x44
   32628:	sub	r6, r3, #1
   3262c:	mov	r2, #10
   32630:	mov	r4, #0
   32634:	mov	r5, #0
   32638:	ldr	fp, [pc, #-3432]	; 318d8 <__flatcc_fb_build_schema@@Base+0x10d4>
   3263c:	mov	sl, #0
   32640:	b	3267c <__flatcc_fb_build_schema@@Base+0x1e78>
   32644:	ldr	r2, [pc, #-3440]	; 318dc <__flatcc_fb_build_schema@@Base+0x10d8>
   32648:	ldr	r1, [sp, #12]
   3264c:	ldr	r1, [r1, #4]
   32650:	mov	r0, r8
   32654:	bl	2eea8 <__flatcc_fb_clear_parser@@Base+0x1f8>
   32658:	mov	r3, #1
   3265c:	str	r3, [sp, #20]
   32660:	b	326d0 <__flatcc_fb_build_schema@@Base+0x1ecc>
   32664:	adds	r4, r4, #1
   32668:	adc	r5, r5, #0
   3266c:	ldrd	r0, [sp, #48]	; 0x30
   32670:	cmp	r5, r1
   32674:	cmpeq	r4, r0
   32678:	beq	326c8 <__flatcc_fb_build_schema@@Base+0x1ec4>
   3267c:	ldrb	r3, [r6, #1]!
   32680:	cmp	r3, #0
   32684:	bne	32664 <__flatcc_fb_build_schema@@Base+0x1e60>
   32688:	sub	r7, r2, #1
   3268c:	cmp	r2, #0
   32690:	beq	32644 <__flatcc_fb_build_schema@@Base+0x1e40>
   32694:	mov	r2, r4
   32698:	mov	r3, r5
   3269c:	mov	r1, fp
   326a0:	add	r0, sp, #132	; 0x84
   326a4:	bl	14100 <sprintf@plt>
   326a8:	mov	r3, sl
   326ac:	add	r2, sp, #132	; 0x84
   326b0:	ldr	r1, [sp, #12]
   326b4:	ldr	r1, [r1, #4]
   326b8:	mov	r0, r8
   326bc:	bl	2eea8 <__flatcc_fb_clear_parser@@Base+0x1f8>
   326c0:	mov	r2, r7
   326c4:	b	32664 <__flatcc_fb_build_schema@@Base+0x1e60>
   326c8:	mov	r3, #1
   326cc:	str	r3, [sp, #20]
   326d0:	ldr	r2, [sp, #64]	; 0x40
   326d4:	cmp	r2, #0
   326d8:	beq	32700 <__flatcc_fb_build_schema@@Base+0x1efc>
   326dc:	ldr	r1, [sp, #12]
   326e0:	ldrh	r3, [r1, #10]
   326e4:	orr	r3, r3, #8
   326e8:	strh	r3, [r1, #10]
   326ec:	cmp	r2, #1
   326f0:	ble	32700 <__flatcc_fb_build_schema@@Base+0x1efc>
   326f4:	ldr	r3, [r8, #156]	; 0x9c
   326f8:	cmp	r3, #0
   326fc:	beq	3279c <__flatcc_fb_build_schema@@Base+0x1f98>
   32700:	ldr	r3, [sp, #20]
   32704:	cmp	r3, #0
   32708:	bne	30f04 <__flatcc_fb_build_schema@@Base+0x700>
   3270c:	ldr	r3, [sp, #12]
   32710:	ldr	r3, [r3]
   32714:	str	r3, [sp, #12]
   32718:	cmp	r3, #0
   3271c:	beq	32e78 <__flatcc_fb_build_schema@@Base+0x2674>
   32720:	ldr	r3, [sp, #12]
   32724:	ldrh	r3, [r3, #8]
   32728:	cmp	r3, #0
   3272c:	beq	30c1c <__flatcc_fb_build_schema@@Base+0x418>
   32730:	cmp	r3, #2
   32734:	bne	3270c <__flatcc_fb_build_schema@@Base+0x1f08>
   32738:	ldr	r3, [sp, #12]
   3273c:	ldrh	fp, [r3, #48]	; 0x30
   32740:	cmp	fp, #1
   32744:	beq	3270c <__flatcc_fb_build_schema@@Base+0x1f08>
   32748:	cmp	fp, #0
   3274c:	bne	327b0 <__flatcc_fb_build_schema@@Base+0x1fac>
   32750:	ldr	r1, [sp, #12]
   32754:	ldr	r3, [r1, #28]
   32758:	cmp	r3, #0
   3275c:	beq	32774 <__flatcc_fb_build_schema@@Base+0x1f70>
   32760:	mov	r3, #0
   32764:	ldr	r2, [pc, #-3724]	; 318e0 <__flatcc_fb_build_schema@@Base+0x10dc>
   32768:	ldr	r1, [r1, #4]
   3276c:	mov	r0, r8
   32770:	bl	2eea8 <__flatcc_fb_clear_parser@@Base+0x1f8>
   32774:	ldr	r3, [sp, #12]
   32778:	ldr	sl, [r3, #20]
   3277c:	cmp	sl, #0
   32780:	beq	3270c <__flatcc_fb_build_schema@@Base+0x1f08>
   32784:	str	fp, [sp, #20]
   32788:	mov	r6, r3
   3278c:	b	32a5c <__flatcc_fb_build_schema@@Base+0x2258>
   32790:	mov	r3, #1
   32794:	str	r3, [sp, #20]
   32798:	b	326d0 <__flatcc_fb_build_schema@@Base+0x1ecc>
   3279c:	ldr	r2, [pc, #-3776]	; 318e4 <__flatcc_fb_build_schema@@Base+0x10e0>
   327a0:	ldr	r1, [r1, #4]
   327a4:	mov	r0, r8
   327a8:	bl	2eea8 <__flatcc_fb_clear_parser@@Base+0x1f8>
   327ac:	b	30f04 <__flatcc_fb_build_schema@@Base+0x700>
   327b0:	ldr	r3, [pc, #-3792]	; 318e8 <__flatcc_fb_build_schema@@Base+0x10e4>
   327b4:	ldr	r2, [pc, #-3792]	; 318ec <__flatcc_fb_build_schema@@Base+0x10e8>
   327b8:	ldr	r1, [pc, #-3788]	; 318f4 <__flatcc_fb_build_schema@@Base+0x10f0>
   327bc:	ldr	r0, [pc, #-3796]	; 318f0 <__flatcc_fb_build_schema@@Base+0x10ec>
   327c0:	bl	14148 <__assert_fail@plt>
   327c4:	ldrh	r3, [sl, #8]
   327c8:	cmp	r3, #5
   327cc:	bne	32820 <__flatcc_fb_build_schema@@Base+0x201c>
   327d0:	ldrh	r3, [sl, #56]	; 0x38
   327d4:	cmp	r3, #0
   327d8:	bne	32844 <__flatcc_fb_build_schema@@Base+0x2040>
   327dc:	ldrh	r3, [sl, #24]
   327e0:	cmp	r3, #1
   327e4:	beq	32a50 <__flatcc_fb_build_schema@@Base+0x224c>
   327e8:	cmp	r3, #12
   327ec:	beq	32804 <__flatcc_fb_build_schema@@Base+0x2000>
   327f0:	mov	r3, #0
   327f4:	ldr	r2, [pc, #-3844]	; 318f8 <__flatcc_fb_build_schema@@Base+0x10f4>
   327f8:	ldr	r1, [sl, #4]
   327fc:	mov	r0, r8
   32800:	bl	2eea8 <__flatcc_fb_clear_parser@@Base+0x1f8>
   32804:	ldr	r7, [r6, #12]
   32808:	ldr	r1, [sl, #32]
   3280c:	cmp	r1, #0
   32810:	beq	328e8 <__flatcc_fb_build_schema@@Base+0x20e4>
   32814:	mov	fp, r1
   32818:	mov	r2, #0
   3281c:	b	32864 <__flatcc_fb_build_schema@@Base+0x2060>
   32820:	mov	r3, #0
   32824:	ldr	r2, [pc, #-3888]	; 318fc <__flatcc_fb_build_schema@@Base+0x10f8>
   32828:	ldr	r1, [sl, #4]
   3282c:	mov	r0, r8
   32830:	bl	2eea8 <__flatcc_fb_clear_parser@@Base+0x1f8>
   32834:	mov	r3, #1
   32838:	ldr	r2, [sp, #12]
   3283c:	strh	r3, [r2, #48]	; 0x30
   32840:	b	3270c <__flatcc_fb_build_schema@@Base+0x1f08>
   32844:	mov	r3, #0
   32848:	ldr	r2, [pc, #-3920]	; 31900 <__flatcc_fb_build_schema@@Base+0x10fc>
   3284c:	ldr	r1, [sl, #4]
   32850:	mov	r0, r8
   32854:	bl	2eea8 <__flatcc_fb_clear_parser@@Base+0x1f8>
   32858:	b	327dc <__flatcc_fb_build_schema@@Base+0x1fd8>
   3285c:	mov	r2, r0
   32860:	mov	fp, r3
   32864:	ldr	r3, [fp]
   32868:	add	r0, r2, #1
   3286c:	cmp	r3, #0
   32870:	bne	3285c <__flatcc_fb_build_schema@@Base+0x2058>
   32874:	cmp	fp, #0
   32878:	beq	328e8 <__flatcc_fb_build_schema@@Base+0x20e4>
   3287c:	adds	ip, r7, #0
   32880:	movne	ip, #1
   32884:	cmp	r0, #1
   32888:	movne	ip, #0
   3288c:	cmp	ip, #0
   32890:	bne	3298c <__flatcc_fb_build_schema@@Base+0x2188>
   32894:	cmp	r0, #1
   32898:	moveq	r1, r3
   3289c:	cmp	r9, #0
   328a0:	beq	328e8 <__flatcc_fb_build_schema@@Base+0x20e4>
   328a4:	ldr	r0, [r8, #412]	; 0x19c
   328a8:	cmp	r0, #0
   328ac:	beq	328e8 <__flatcc_fb_build_schema@@Base+0x20e4>
   328b0:	rsb	r2, r2, #0
   328b4:	bl	29418 <fb_scope_table_find@@Base>
   328b8:	cmp	r0, #0
   328bc:	beq	328e8 <__flatcc_fb_build_schema@@Base+0x20e4>
   328c0:	ldr	r3, [fp, #4]
   328c4:	ldr	r2, [r3, #4]
   328c8:	ldr	r1, [r3]
   328cc:	add	r0, r0, #4
   328d0:	bl	284c8 <fb_symbol_table_find@@Base>
   328d4:	subs	r4, r0, #0
   328d8:	beq	328e8 <__flatcc_fb_build_schema@@Base+0x20e4>
   328dc:	ldrh	r3, [r4, #8]
   328e0:	cmp	r3, #4
   328e4:	bls	32a1c <__flatcc_fb_build_schema@@Base+0x2218>
   328e8:	mov	r3, sl
   328ec:	ldr	r2, [pc, #2912]	; 33454 <__flatcc_fb_build_schema@@Base+0x2c50>
   328f0:	ldr	r1, [sl, #32]
   328f4:	mov	r0, r8
   328f8:	bl	2ba04 <error_ref_sym@@Base>
   328fc:	mov	r3, #1
   32900:	strh	r3, [sl, #24]
   32904:	b	32a50 <__flatcc_fb_build_schema@@Base+0x224c>
   32908:	ldr	r1, [r4, #16]
   3290c:	ldr	r0, [sp, #16]
   32910:	bl	27e80 <ptr_set_find_item@@Base>
   32914:	cmp	r0, #0
   32918:	beq	329b4 <__flatcc_fb_build_schema@@Base+0x21b0>
   3291c:	ldrh	r3, [r4, #8]
   32920:	cmp	r3, #0
   32924:	bne	32a34 <__flatcc_fb_build_schema@@Base+0x2230>
   32928:	mov	r3, #14
   3292c:	strh	r3, [sl, #40]	; 0x28
   32930:	str	r4, [sl, #32]
   32934:	ldr	r7, [r6, #12]
   32938:	ldr	r1, [sl, #16]
   3293c:	cmp	r1, #0
   32940:	beq	32b18 <__flatcc_fb_build_schema@@Base+0x2314>
   32944:	mov	fp, r1
   32948:	mov	r2, #0
   3294c:	b	32a94 <__flatcc_fb_build_schema@@Base+0x2290>
   32950:	sub	r5, r5, #1
   32954:	add	r4, r4, #1
   32958:	cmp	r5, #1
   3295c:	ble	329f0 <__flatcc_fb_build_schema@@Base+0x21ec>
   32960:	cmp	r9, #0
   32964:	beq	32950 <__flatcc_fb_build_schema@@Base+0x214c>
   32968:	ldr	r0, [r8, #412]	; 0x19c
   3296c:	cmp	r0, #0
   32970:	beq	32950 <__flatcc_fb_build_schema@@Base+0x214c>
   32974:	mov	r2, r4
   32978:	ldr	r1, [r7]
   3297c:	bl	29418 <fb_scope_table_find@@Base>
   32980:	cmp	r0, #0
   32984:	beq	32950 <__flatcc_fb_build_schema@@Base+0x214c>
   32988:	mov	r7, r0
   3298c:	ldr	r3, [fp, #4]
   32990:	ldr	r2, [r3, #4]
   32994:	ldr	r1, [r3]
   32998:	add	r0, r7, #4
   3299c:	bl	284c8 <fb_symbol_table_find@@Base>
   329a0:	subs	r4, r0, #0
   329a4:	beq	329b4 <__flatcc_fb_build_schema@@Base+0x21b0>
   329a8:	ldrh	r3, [r4, #8]
   329ac:	cmp	r3, #4
   329b0:	bls	32908 <__flatcc_fb_build_schema@@Base+0x2104>
   329b4:	cmp	r7, #0
   329b8:	beq	328e8 <__flatcc_fb_build_schema@@Base+0x20e4>
   329bc:	ldr	r3, [r7]
   329c0:	cmp	r3, #0
   329c4:	beq	328e8 <__flatcc_fb_build_schema@@Base+0x20e4>
   329c8:	mov	r4, #0
   329cc:	add	r4, r4, #1
   329d0:	ldr	r3, [r3]
   329d4:	cmp	r3, #0
   329d8:	bne	329cc <__flatcc_fb_build_schema@@Base+0x21c8>
   329dc:	cmp	r4, #0
   329e0:	beq	328e8 <__flatcc_fb_build_schema@@Base+0x20e4>
   329e4:	mov	r5, r4
   329e8:	rsb	r4, r4, #1
   329ec:	b	32958 <__flatcc_fb_build_schema@@Base+0x2154>
   329f0:	cmp	r9, #0
   329f4:	beq	328e8 <__flatcc_fb_build_schema@@Base+0x20e4>
   329f8:	ldr	r0, [r8, #412]	; 0x19c
   329fc:	cmp	r0, #0
   32a00:	beq	328e8 <__flatcc_fb_build_schema@@Base+0x20e4>
   32a04:	mov	r2, #0
   32a08:	mov	r1, r2
   32a0c:	bl	29418 <fb_scope_table_find@@Base>
   32a10:	subs	r7, r0, #0
   32a14:	bne	3298c <__flatcc_fb_build_schema@@Base+0x2188>
   32a18:	b	328e8 <__flatcc_fb_build_schema@@Base+0x20e4>
   32a1c:	ldr	r1, [r4, #16]
   32a20:	ldr	r0, [sp, #16]
   32a24:	bl	27e80 <ptr_set_find_item@@Base>
   32a28:	cmp	r0, #0
   32a2c:	bne	3291c <__flatcc_fb_build_schema@@Base+0x2118>
   32a30:	b	328e8 <__flatcc_fb_build_schema@@Base+0x20e4>
   32a34:	ldr	r3, [r4, #4]
   32a38:	ldr	r2, [pc, #2584]	; 33458 <__flatcc_fb_build_schema@@Base+0x2c54>
   32a3c:	ldr	r1, [sl, #4]
   32a40:	mov	r0, r8
   32a44:	bl	2eea8 <__flatcc_fb_clear_parser@@Base+0x1f8>
   32a48:	mov	r3, #1
   32a4c:	strh	r3, [sl, #24]
   32a50:	ldr	sl, [sl]
   32a54:	cmp	sl, #0
   32a58:	beq	3270c <__flatcc_fb_build_schema@@Base+0x1f08>
   32a5c:	mov	r2, #1
   32a60:	mov	r1, sl
   32a64:	add	r0, r6, #56	; 0x38
   32a68:	bl	2849c <fb_symbol_table_insert_item@@Base>
   32a6c:	cmp	r0, #0
   32a70:	beq	327c4 <__flatcc_fb_build_schema@@Base+0x1fc0>
   32a74:	ldr	r3, [r0, #4]
   32a78:	ldr	r2, [pc, #2524]	; 3345c <__flatcc_fb_build_schema@@Base+0x2c58>
   32a7c:	ldr	r1, [sl, #4]
   32a80:	mov	r0, r8
   32a84:	bl	2eea8 <__flatcc_fb_clear_parser@@Base+0x1f8>
   32a88:	b	32a50 <__flatcc_fb_build_schema@@Base+0x224c>
   32a8c:	mov	r2, r0
   32a90:	mov	fp, r3
   32a94:	ldr	r3, [fp]
   32a98:	add	r0, r2, #1
   32a9c:	cmp	r3, #0
   32aa0:	bne	32a8c <__flatcc_fb_build_schema@@Base+0x2288>
   32aa4:	cmp	fp, #0
   32aa8:	beq	32b18 <__flatcc_fb_build_schema@@Base+0x2314>
   32aac:	adds	ip, r7, #0
   32ab0:	movne	ip, #1
   32ab4:	cmp	r0, #1
   32ab8:	movne	ip, #0
   32abc:	cmp	ip, #0
   32ac0:	bne	32bd8 <__flatcc_fb_build_schema@@Base+0x23d4>
   32ac4:	cmp	r0, #1
   32ac8:	moveq	r1, r3
   32acc:	cmp	r9, #0
   32ad0:	beq	32b18 <__flatcc_fb_build_schema@@Base+0x2314>
   32ad4:	ldr	r0, [r8, #412]	; 0x19c
   32ad8:	cmp	r0, #0
   32adc:	beq	32b18 <__flatcc_fb_build_schema@@Base+0x2314>
   32ae0:	rsb	r2, r2, #0
   32ae4:	bl	29418 <fb_scope_table_find@@Base>
   32ae8:	cmp	r0, #0
   32aec:	beq	32b18 <__flatcc_fb_build_schema@@Base+0x2314>
   32af0:	ldr	r3, [fp, #4]
   32af4:	ldr	r2, [r3, #4]
   32af8:	ldr	r1, [r3]
   32afc:	add	r0, r0, #4
   32b00:	bl	284c8 <fb_symbol_table_find@@Base>
   32b04:	subs	r4, r0, #0
   32b08:	beq	32b18 <__flatcc_fb_build_schema@@Base+0x2314>
   32b0c:	ldrh	r3, [r4, #8]
   32b10:	cmp	r3, #4
   32b14:	bls	32c68 <__flatcc_fb_build_schema@@Base+0x2464>
   32b18:	mov	r3, sl
   32b1c:	ldr	r2, [pc, #2364]	; 33460 <__flatcc_fb_build_schema@@Base+0x2c5c>
   32b20:	ldr	r1, [sl, #16]
   32b24:	mov	r0, r8
   32b28:	bl	2ba04 <error_ref_sym@@Base>
   32b2c:	mov	r3, #1
   32b30:	strh	r3, [sl, #24]
   32b34:	b	32a50 <__flatcc_fb_build_schema@@Base+0x224c>
   32b38:	ldr	r1, [r4, #16]
   32b3c:	ldr	r0, [sp, #16]
   32b40:	bl	27e80 <ptr_set_find_item@@Base>
   32b44:	cmp	r0, #0
   32b48:	beq	32c00 <__flatcc_fb_build_schema@@Base+0x23fc>
   32b4c:	ldrh	r3, [r4, #8]
   32b50:	cmp	r3, #0
   32b54:	bne	32c80 <__flatcc_fb_build_schema@@Base+0x247c>
   32b58:	mov	r3, #14
   32b5c:	strh	r3, [sl, #24]
   32b60:	str	r4, [sl, #16]
   32b64:	mov	r2, #0
   32b68:	mov	r3, #0
   32b6c:	strd	r2, [sl, #88]	; 0x58
   32b70:	ldr	r4, [sl, #64]	; 0x40
   32b74:	mov	r2, #48	; 0x30
   32b78:	mov	r1, #0
   32b7c:	add	r0, sp, #132	; 0x84
   32b80:	bl	140ac <memset@plt>
   32b84:	cmp	r4, #0
   32b88:	beq	32e70 <__flatcc_fb_build_schema@@Base+0x266c>
   32b8c:	ldr	r7, [sp, #20]
   32b90:	mov	r5, #100	; 0x64
   32b94:	ldr	fp, [pc, #2248]	; 33464 <__flatcc_fb_build_schema@@Base+0x2c60>
   32b98:	b	32cf0 <__flatcc_fb_build_schema@@Base+0x24ec>
   32b9c:	sub	r5, r5, #1
   32ba0:	add	r4, r4, #1
   32ba4:	cmp	r5, #1
   32ba8:	ble	32c3c <__flatcc_fb_build_schema@@Base+0x2438>
   32bac:	cmp	r9, #0
   32bb0:	beq	32b9c <__flatcc_fb_build_schema@@Base+0x2398>
   32bb4:	ldr	r0, [r8, #412]	; 0x19c
   32bb8:	cmp	r0, #0
   32bbc:	beq	32b9c <__flatcc_fb_build_schema@@Base+0x2398>
   32bc0:	mov	r2, r4
   32bc4:	ldr	r1, [r7]
   32bc8:	bl	29418 <fb_scope_table_find@@Base>
   32bcc:	cmp	r0, #0
   32bd0:	beq	32b9c <__flatcc_fb_build_schema@@Base+0x2398>
   32bd4:	mov	r7, r0
   32bd8:	ldr	r3, [fp, #4]
   32bdc:	ldr	r2, [r3, #4]
   32be0:	ldr	r1, [r3]
   32be4:	add	r0, r7, #4
   32be8:	bl	284c8 <fb_symbol_table_find@@Base>
   32bec:	subs	r4, r0, #0
   32bf0:	beq	32c00 <__flatcc_fb_build_schema@@Base+0x23fc>
   32bf4:	ldrh	r3, [r4, #8]
   32bf8:	cmp	r3, #4
   32bfc:	bls	32b38 <__flatcc_fb_build_schema@@Base+0x2334>
   32c00:	cmp	r7, #0
   32c04:	beq	32b18 <__flatcc_fb_build_schema@@Base+0x2314>
   32c08:	ldr	r3, [r7]
   32c0c:	cmp	r3, #0
   32c10:	beq	32b18 <__flatcc_fb_build_schema@@Base+0x2314>
   32c14:	mov	r4, #0
   32c18:	add	r4, r4, #1
   32c1c:	ldr	r3, [r3]
   32c20:	cmp	r3, #0
   32c24:	bne	32c18 <__flatcc_fb_build_schema@@Base+0x2414>
   32c28:	cmp	r4, #0
   32c2c:	beq	32b18 <__flatcc_fb_build_schema@@Base+0x2314>
   32c30:	mov	r5, r4
   32c34:	rsb	r4, r4, #1
   32c38:	b	32ba4 <__flatcc_fb_build_schema@@Base+0x23a0>
   32c3c:	cmp	r9, #0
   32c40:	beq	32b18 <__flatcc_fb_build_schema@@Base+0x2314>
   32c44:	ldr	r0, [r8, #412]	; 0x19c
   32c48:	cmp	r0, #0
   32c4c:	beq	32b18 <__flatcc_fb_build_schema@@Base+0x2314>
   32c50:	mov	r2, #0
   32c54:	mov	r1, r2
   32c58:	bl	29418 <fb_scope_table_find@@Base>
   32c5c:	subs	r7, r0, #0
   32c60:	bne	32bd8 <__flatcc_fb_build_schema@@Base+0x23d4>
   32c64:	b	32b18 <__flatcc_fb_build_schema@@Base+0x2314>
   32c68:	ldr	r1, [r4, #16]
   32c6c:	ldr	r0, [sp, #16]
   32c70:	bl	27e80 <ptr_set_find_item@@Base>
   32c74:	cmp	r0, #0
   32c78:	bne	32b4c <__flatcc_fb_build_schema@@Base+0x2348>
   32c7c:	b	32b18 <__flatcc_fb_build_schema@@Base+0x2314>
   32c80:	ldr	r3, [r4, #4]
   32c84:	ldr	r2, [pc, #2012]	; 33468 <__flatcc_fb_build_schema@@Base+0x2c64>
   32c88:	ldr	r1, [sl, #4]
   32c8c:	mov	r0, r8
   32c90:	bl	2eea8 <__flatcc_fb_clear_parser@@Base+0x1f8>
   32c94:	mov	r3, #1
   32c98:	strh	r3, [sl, #24]
   32c9c:	b	32a50 <__flatcc_fb_build_schema@@Base+0x224c>
   32ca0:	mov	r3, #0
   32ca4:	ldr	r2, [pc, #1984]	; 3346c <__flatcc_fb_build_schema@@Base+0x2c68>
   32ca8:	ldr	r1, [r4, #4]
   32cac:	mov	r0, r8
   32cb0:	bl	2eea8 <__flatcc_fb_clear_parser@@Base+0x1f8>
   32cb4:	b	32ccc <__flatcc_fb_build_schema@@Base+0x24c8>
   32cb8:	mov	r3, #0
   32cbc:	ldr	r2, [pc, #1964]	; 33470 <__flatcc_fb_build_schema@@Base+0x2c6c>
   32cc0:	ldr	r1, [r4, #4]
   32cc4:	mov	r0, r8
   32cc8:	bl	2eea8 <__flatcc_fb_clear_parser@@Base+0x1f8>
   32ccc:	ldr	r4, [r4]
   32cd0:	subs	r5, r5, #1
   32cd4:	movne	r3, #1
   32cd8:	moveq	r3, #0
   32cdc:	cmp	r4, #0
   32ce0:	moveq	r3, #0
   32ce4:	andne	r3, r3, #1
   32ce8:	cmp	r3, #0
   32cec:	beq	32e50 <__flatcc_fb_build_schema@@Base+0x264c>
   32cf0:	ldr	r3, [r4, #4]
   32cf4:	ldr	r0, [r8, #412]	; 0x19c
   32cf8:	ldr	r2, [r3, #4]
   32cfc:	ldr	r1, [r3]
   32d00:	add	r0, r0, #16
   32d04:	bl	39fac <fb_name_table_find@@Base>
   32d08:	cmp	r0, #0
   32d0c:	beq	32ca0 <__flatcc_fb_build_schema@@Base+0x249c>
   32d10:	ldr	r3, [r0, #24]
   32d14:	cmp	r3, #0
   32d18:	beq	32ccc <__flatcc_fb_build_schema@@Base+0x24c8>
   32d1c:	cmp	r3, #2
   32d20:	bne	32cb8 <__flatcc_fb_build_schema@@Base+0x24b4>
   32d24:	mov	r2, #1
   32d28:	orr	r7, r7, r2, lsl r3
   32d2c:	uxth	r7, r7
   32d30:	add	r2, sp, #132	; 0x84
   32d34:	ldr	r2, [r2, r3, lsl #2]
   32d38:	cmp	r2, #0
   32d3c:	beq	32d58 <__flatcc_fb_build_schema@@Base+0x2554>
   32d40:	mov	r3, #0
   32d44:	ldr	r2, [pc, #1832]	; 33474 <__flatcc_fb_build_schema@@Base+0x2c70>
   32d48:	ldr	r1, [r4, #4]
   32d4c:	mov	r0, r8
   32d50:	bl	2eea8 <__flatcc_fb_clear_parser@@Base+0x1f8>
   32d54:	b	32ccc <__flatcc_fb_build_schema@@Base+0x24c8>
   32d58:	add	r2, sp, #132	; 0x84
   32d5c:	str	r4, [r2, r3, lsl #2]
   32d60:	ldr	r2, [pc, #1808]	; 33478 <__flatcc_fb_build_schema@@Base+0x2c74>
   32d64:	add	r3, r2, r3, lsl #2
   32d68:	ldr	r3, [r3, #76]	; 0x4c
   32d6c:	cmp	r3, #0
   32d70:	bne	32d98 <__flatcc_fb_build_schema@@Base+0x2594>
   32d74:	ldrh	r3, [r4, #16]
   32d78:	cmp	r3, #0
   32d7c:	beq	32ccc <__flatcc_fb_build_schema@@Base+0x24c8>
   32d80:	mov	r3, #0
   32d84:	ldr	r2, [pc, #1776]	; 3347c <__flatcc_fb_build_schema@@Base+0x2c78>
   32d88:	ldr	r1, [r4, #4]
   32d8c:	mov	r0, r8
   32d90:	bl	2eea8 <__flatcc_fb_clear_parser@@Base+0x1f8>
   32d94:	b	32ccc <__flatcc_fb_build_schema@@Base+0x24c8>
   32d98:	cmp	r3, #2
   32d9c:	beq	32dcc <__flatcc_fb_build_schema@@Base+0x25c8>
   32da0:	cmp	r3, #5
   32da4:	bne	32df0 <__flatcc_fb_build_schema@@Base+0x25ec>
   32da8:	ldrh	r3, [r4, #16]
   32dac:	cmp	r3, #5
   32db0:	beq	32ccc <__flatcc_fb_build_schema@@Base+0x24c8>
   32db4:	mov	r3, #0
   32db8:	mov	r2, fp
   32dbc:	ldr	r1, [r4, #4]
   32dc0:	mov	r0, r8
   32dc4:	bl	2eea8 <__flatcc_fb_clear_parser@@Base+0x1f8>
   32dc8:	b	32ccc <__flatcc_fb_build_schema@@Base+0x24c8>
   32dcc:	ldrh	r3, [r4, #16]
   32dd0:	cmp	r3, #2
   32dd4:	beq	32ccc <__flatcc_fb_build_schema@@Base+0x24c8>
   32dd8:	mov	r3, #0
   32ddc:	ldr	r2, [pc, #1692]	; 33480 <__flatcc_fb_build_schema@@Base+0x2c7c>
   32de0:	ldr	r1, [r4, #4]
   32de4:	mov	r0, r8
   32de8:	bl	2eea8 <__flatcc_fb_clear_parser@@Base+0x1f8>
   32dec:	b	32ccc <__flatcc_fb_build_schema@@Base+0x24c8>
   32df0:	cmp	r3, #4
   32df4:	bne	32e24 <__flatcc_fb_build_schema@@Base+0x2620>
   32df8:	ldrh	r3, [r4, #16]
   32dfc:	sub	r3, r3, #4
   32e00:	uxth	r3, r3
   32e04:	cmp	r3, #1
   32e08:	bls	32ccc <__flatcc_fb_build_schema@@Base+0x24c8>
   32e0c:	mov	r3, #0
   32e10:	ldr	r2, [pc, #1644]	; 33484 <__flatcc_fb_build_schema@@Base+0x2c80>
   32e14:	ldr	r1, [r4, #4]
   32e18:	mov	r0, r8
   32e1c:	bl	2eea8 <__flatcc_fb_clear_parser@@Base+0x1f8>
   32e20:	b	32ccc <__flatcc_fb_build_schema@@Base+0x24c8>
   32e24:	cmp	r3, #6
   32e28:	bne	32ccc <__flatcc_fb_build_schema@@Base+0x24c8>
   32e2c:	ldrh	r3, [r4, #16]
   32e30:	cmp	r3, #6
   32e34:	beq	32ccc <__flatcc_fb_build_schema@@Base+0x24c8>
   32e38:	mov	r3, #0
   32e3c:	ldr	r2, [pc, #1604]	; 33488 <__flatcc_fb_build_schema@@Base+0x2c84>
   32e40:	ldr	r1, [r4, #4]
   32e44:	mov	r0, r8
   32e48:	bl	2eea8 <__flatcc_fb_clear_parser@@Base+0x1f8>
   32e4c:	b	32ccc <__flatcc_fb_build_schema@@Base+0x24c8>
   32e50:	cmp	r4, #0
   32e54:	beq	32e68 <__flatcc_fb_build_schema@@Base+0x2664>
   32e58:	ldr	r2, [pc, #1580]	; 3348c <__flatcc_fb_build_schema@@Base+0x2c88>
   32e5c:	ldr	r1, [r4, #4]
   32e60:	mov	r0, r8
   32e64:	bl	2eea8 <__flatcc_fb_clear_parser@@Base+0x1f8>
   32e68:	strh	r7, [sl, #72]	; 0x48
   32e6c:	b	32a50 <__flatcc_fb_build_schema@@Base+0x224c>
   32e70:	ldr	r7, [sp, #20]
   32e74:	b	32e68 <__flatcc_fb_build_schema@@Base+0x2664>
   32e78:	mov	sl, r9
   32e7c:	mov	fp, r8
   32e80:	ldr	r3, [fp, #396]	; 0x18c
   32e84:	cmp	r3, #0
   32e88:	beq	32eac <__flatcc_fb_build_schema@@Base+0x26a8>
   32e8c:	mov	r1, #0
   32e90:	b	32e98 <__flatcc_fb_build_schema@@Base+0x2694>
   32e94:	mov	r3, r2
   32e98:	ldr	r2, [r3, #120]	; 0x78
   32e9c:	str	r1, [r3, #120]	; 0x78
   32ea0:	mov	r1, r3
   32ea4:	cmp	r2, #0
   32ea8:	bne	32e94 <__flatcc_fb_build_schema@@Base+0x2690>
   32eac:	str	r3, [fp, #396]	; 0x18c
   32eb0:	ldr	r5, [fp, #392]	; 0x188
   32eb4:	cmp	r5, #0
   32eb8:	beq	33148 <__flatcc_fb_build_schema@@Base+0x2944>
   32ebc:	mov	r7, #36	; 0x24
   32ec0:	mov	r6, #0
   32ec4:	add	r9, sp, #116	; 0x74
   32ec8:	mov	r8, #8
   32ecc:	b	32eec <__flatcc_fb_build_schema@@Base+0x26e8>
   32ed0:	add	r2, sp, #132	; 0x84
   32ed4:	str	r6, [r2]
   32ed8:	ldr	r3, [sp, #132]	; 0x84
   32edc:	str	r3, [r5, #24]
   32ee0:	ldr	r5, [r5]
   32ee4:	cmp	r5, #0
   32ee8:	beq	33148 <__flatcc_fb_build_schema@@Base+0x2944>
   32eec:	ldrh	r3, [r5, #8]
   32ef0:	cmp	r3, #0
   32ef4:	bne	32ee0 <__flatcc_fb_build_schema@@Base+0x26dc>
   32ef8:	ldrh	r3, [r5, #92]	; 0x5c
   32efc:	tst	r3, #8
   32f00:	beq	32f30 <__flatcc_fb_build_schema@@Base+0x272c>
   32f04:	ldr	r3, [r5, #20]
   32f08:	str	r6, [sp, #132]	; 0x84
   32f0c:	cmp	r3, #0
   32f10:	beq	32ed0 <__flatcc_fb_build_schema@@Base+0x26cc>
   32f14:	add	r2, sp, #132	; 0x84
   32f18:	str	r3, [r2]
   32f1c:	add	r2, r3, #108	; 0x6c
   32f20:	ldr	r3, [r3]
   32f24:	cmp	r3, #0
   32f28:	bne	32f18 <__flatcc_fb_build_schema@@Base+0x2714>
   32f2c:	b	32ed4 <__flatcc_fb_build_schema@@Base+0x26d0>
   32f30:	ldr	r4, [r5, #20]
   32f34:	mov	r2, r7
   32f38:	mov	r1, r6
   32f3c:	add	r0, sp, #84	; 0x54
   32f40:	bl	140ac <memset@plt>
   32f44:	mov	r2, r7
   32f48:	mov	r1, r6
   32f4c:	add	r0, sp, #132	; 0x84
   32f50:	bl	140ac <memset@plt>
   32f54:	cmp	r4, #0
   32f58:	beq	330a8 <__flatcc_fb_build_schema@@Base+0x28a4>
   32f5c:	mov	r1, r4
   32f60:	b	3300c <__flatcc_fb_build_schema@@Base+0x2808>
   32f64:	ldr	r2, [r1, #16]
   32f68:	ldrh	r3, [r2, #8]
   32f6c:	cmp	r3, #3
   32f70:	beq	32f88 <__flatcc_fb_build_schema@@Base+0x2784>
   32f74:	cmp	r3, #4
   32f78:	beq	32f90 <__flatcc_fb_build_schema@@Base+0x278c>
   32f7c:	cmp	r3, #1
   32f80:	ldrhne	r2, [fp, #192]	; 0xc0
   32f84:	bne	32f9c <__flatcc_fb_build_schema@@Base+0x2798>
   32f88:	ldrh	r2, [r2, #104]	; 0x68
   32f8c:	b	32f9c <__flatcc_fb_build_schema@@Base+0x2798>
   32f90:	ldrh	r2, [fp, #192]	; 0xc0
   32f94:	b	32f9c <__flatcc_fb_build_schema@@Base+0x2798>
   32f98:	ldrh	r2, [fp, #192]	; 0xc0
   32f9c:	cmp	r2, #0
   32fa0:	beq	33094 <__flatcc_fb_build_schema@@Base+0x2890>
   32fa4:	lsrs	r2, r2, #1
   32fa8:	moveq	r3, r2
   32fac:	beq	32fc4 <__flatcc_fb_build_schema@@Base+0x27c0>
   32fb0:	mov	r3, r6
   32fb4:	add	r3, r3, #1
   32fb8:	uxth	r3, r3
   32fbc:	lsrs	r2, r2, #1
   32fc0:	bne	32fb4 <__flatcc_fb_build_schema@@Base+0x27b0>
   32fc4:	cmp	r3, #7
   32fc8:	movcs	r3, #7
   32fcc:	add	r2, sp, #232	; 0xe8
   32fd0:	add	r2, r2, r3, lsl #2
   32fd4:	ldr	r2, [r2, #-148]	; 0xffffff6c
   32fd8:	cmp	r2, #0
   32fdc:	add	r2, sp, #232	; 0xe8
   32fe0:	add	r2, r2, r3, lsl #2
   32fe4:	streq	r1, [r2, #-148]	; 0xffffff6c
   32fe8:	ldrne	r2, [r2, #-100]	; 0xffffff9c
   32fec:	strne	r1, [r2]
   32ff0:	add	r2, sp, #232	; 0xe8
   32ff4:	add	r3, r2, r3, lsl #2
   32ff8:	add	r2, r1, #108	; 0x6c
   32ffc:	str	r2, [r3, #-100]	; 0xffffff9c
   33000:	ldr	r1, [r1]
   33004:	cmp	r1, #0
   33008:	beq	330a8 <__flatcc_fb_build_schema@@Base+0x28a4>
   3300c:	ldrh	r2, [r1, #74]	; 0x4a
   33010:	ldrh	r3, [r1, #24]
   33014:	sub	r3, r3, #1
   33018:	cmp	r3, #14
   3301c:	ldrls	pc, [pc, r3, lsl #2]
   33020:	b	32f9c <__flatcc_fb_build_schema@@Base+0x2798>
   33024:	andeq	r3, r3, r0, rrx
   33028:	muleq	r3, ip, pc	; <UNPREDICTABLE>
   3302c:	muleq	r3, ip, pc	; <UNPREDICTABLE>
   33030:	muleq	r3, ip, pc	; <UNPREDICTABLE>
   33034:	muleq	r3, ip, pc	; <UNPREDICTABLE>
   33038:	muleq	r3, ip, pc	; <UNPREDICTABLE>
   3303c:	muleq	r3, r8, pc	; <UNPREDICTABLE>
   33040:	muleq	r3, ip, pc	; <UNPREDICTABLE>
   33044:	muleq	r3, r8, pc	; <UNPREDICTABLE>
   33048:	muleq	r3, r8, pc	; <UNPREDICTABLE>
   3304c:	muleq	r3, ip, pc	; <UNPREDICTABLE>
   33050:	muleq	r3, ip, pc	; <UNPREDICTABLE>
   33054:	muleq	r3, ip, pc	; <UNPREDICTABLE>
   33058:	andeq	r2, r3, r4, ror #30
   3305c:	muleq	r3, r8, pc	; <UNPREDICTABLE>
   33060:	add	r2, sp, #232	; 0xe8
   33064:	str	r6, [r2, #-152]!	; 0xffffff68
   33068:	b	33070 <__flatcc_fb_build_schema@@Base+0x286c>
   3306c:	mov	r4, r3
   33070:	str	r4, [r2]
   33074:	add	r2, r4, #108	; 0x6c
   33078:	ldr	r3, [r4]
   3307c:	cmp	r3, #0
   33080:	bne	3306c <__flatcc_fb_build_schema@@Base+0x2868>
   33084:	str	r6, [r4, #108]	; 0x6c
   33088:	ldr	r3, [sp, #80]	; 0x50
   3308c:	str	r3, [r5, #24]
   33090:	b	32ee0 <__flatcc_fb_build_schema@@Base+0x26dc>
   33094:	ldr	r3, [pc, #1012]	; 33490 <__flatcc_fb_build_schema@@Base+0x2c8c>
   33098:	ldr	r2, [pc, #1012]	; 33494 <__flatcc_fb_build_schema@@Base+0x2c90>
   3309c:	ldr	r1, [pc, #1012]	; 33498 <__flatcc_fb_build_schema@@Base+0x2c94>
   330a0:	ldr	r0, [pc, #1012]	; 3349c <__flatcc_fb_build_schema@@Base+0x2c98>
   330a4:	bl	14148 <__assert_fail@plt>
   330a8:	str	r9, [sp, #164]	; 0xa4
   330ac:	mov	r0, r8
   330b0:	mov	r1, r8
   330b4:	b	330fc <__flatcc_fb_build_schema@@Base+0x28f8>
   330b8:	add	r3, sp, #232	; 0xe8
   330bc:	add	r1, r3, r1, lsl #2
   330c0:	ldr	r3, [r1, #-100]	; 0xffffff9c
   330c4:	ldr	r2, [sp, #84]	; 0x54
   330c8:	str	r2, [r3]
   330cc:	ldr	r3, [sp, #116]	; 0x74
   330d0:	b	3308c <__flatcc_fb_build_schema@@Base+0x2888>
   330d4:	add	r3, sp, #232	; 0xe8
   330d8:	add	r3, r3, r1, lsl #2
   330dc:	ldr	r2, [r3, #-148]	; 0xffffff6c
   330e0:	add	r3, sp, #232	; 0xe8
   330e4:	add	r0, r3, r0, lsl #2
   330e8:	ldr	r3, [r0, #-100]	; 0xffffff9c
   330ec:	str	r2, [r3]
   330f0:	cmp	r1, #0
   330f4:	beq	330cc <__flatcc_fb_build_schema@@Base+0x28c8>
   330f8:	mov	r0, r1
   330fc:	sub	r3, r1, #1
   33100:	uxth	r3, r3
   33104:	add	r2, sp, #232	; 0xe8
   33108:	add	r2, r2, r3, lsl #2
   3310c:	ldr	r2, [r2, #-148]	; 0xffffff6c
   33110:	cmp	r2, #0
   33114:	movne	r1, r3
   33118:	bne	330d4 <__flatcc_fb_build_schema@@Base+0x28d0>
   3311c:	cmp	r3, #0
   33120:	beq	330b8 <__flatcc_fb_build_schema@@Base+0x28b4>
   33124:	sub	r3, r3, #1
   33128:	uxth	r3, r3
   3312c:	add	r2, sp, #232	; 0xe8
   33130:	add	r2, r2, r3, lsl #2
   33134:	ldr	r2, [r2, #-148]	; 0xffffff6c
   33138:	cmp	r2, #0
   3313c:	beq	3311c <__flatcc_fb_build_schema@@Base+0x2918>
   33140:	mov	r1, r3
   33144:	b	330d4 <__flatcc_fb_build_schema@@Base+0x28d0>
   33148:	ldr	r1, [fp, #400]	; 0x190
   3314c:	cmp	r1, #0
   33150:	ldrne	r5, [fp, #408]	; 0x198
   33154:	movne	r6, r1
   33158:	movne	r2, #0
   3315c:	bne	3318c <__flatcc_fb_build_schema@@Base+0x2988>
   33160:	ldr	r3, [fp, #208]	; 0xd0
   33164:	cmp	r3, #0
   33168:	beq	3325c <__flatcc_fb_build_schema@@Base+0x2a58>
   3316c:	mov	r3, #0
   33170:	ldr	r2, [pc, #808]	; 334a0 <__flatcc_fb_build_schema@@Base+0x2c9c>
   33174:	mov	r1, r3
   33178:	mov	r0, fp
   3317c:	bl	2eea8 <__flatcc_fb_clear_parser@@Base+0x1f8>
   33180:	b	3325c <__flatcc_fb_build_schema@@Base+0x2a58>
   33184:	mov	r2, r0
   33188:	mov	r6, r3
   3318c:	ldr	r3, [r6]
   33190:	add	r0, r2, #1
   33194:	cmp	r3, #0
   33198:	bne	33184 <__flatcc_fb_build_schema@@Base+0x2980>
   3319c:	cmp	r6, #0
   331a0:	beq	33210 <__flatcc_fb_build_schema@@Base+0x2a0c>
   331a4:	adds	ip, r5, #0
   331a8:	movne	ip, #1
   331ac:	cmp	r0, #1
   331b0:	movne	ip, #0
   331b4:	cmp	ip, #0
   331b8:	bne	3321c <__flatcc_fb_build_schema@@Base+0x2a18>
   331bc:	cmp	r0, #1
   331c0:	moveq	r1, r3
   331c4:	cmp	sl, #0
   331c8:	beq	33350 <__flatcc_fb_build_schema@@Base+0x2b4c>
   331cc:	ldr	r0, [fp, #412]	; 0x19c
   331d0:	cmp	r0, #0
   331d4:	beq	33350 <__flatcc_fb_build_schema@@Base+0x2b4c>
   331d8:	rsb	r2, r2, #0
   331dc:	bl	29418 <fb_scope_table_find@@Base>
   331e0:	cmp	r0, #0
   331e4:	beq	33210 <__flatcc_fb_build_schema@@Base+0x2a0c>
   331e8:	ldr	r3, [r6, #4]
   331ec:	ldr	r2, [r3, #4]
   331f0:	ldr	r1, [r3]
   331f4:	add	r0, r0, #4
   331f8:	bl	284c8 <fb_symbol_table_find@@Base>
   331fc:	subs	r4, r0, #0
   33200:	beq	33210 <__flatcc_fb_build_schema@@Base+0x2a0c>
   33204:	ldrh	r3, [r4, #8]
   33208:	cmp	r3, #4
   3320c:	bls	3333c <__flatcc_fb_build_schema@@Base+0x2b38>
   33210:	mov	r3, #0
   33214:	str	r3, [fp, #404]	; 0x194
   33218:	b	33358 <__flatcc_fb_build_schema@@Base+0x2b54>
   3321c:	mov	r7, #0
   33220:	b	332ac <__flatcc_fb_build_schema@@Base+0x2aa8>
   33224:	ldr	r1, [r4, #16]
   33228:	ldr	r0, [sp, #16]
   3322c:	bl	27e80 <ptr_set_find_item@@Base>
   33230:	cmp	r0, #0
   33234:	beq	332d4 <__flatcc_fb_build_schema@@Base+0x2ad0>
   33238:	str	r4, [fp, #404]	; 0x194
   3323c:	ldr	r3, [fp, #176]	; 0xb0
   33240:	cmp	r3, #0
   33244:	bne	33370 <__flatcc_fb_build_schema@@Base+0x2b6c>
   33248:	ldrh	r3, [r4, #8]
   3324c:	cmp	r3, #0
   33250:	bne	33394 <__flatcc_fb_build_schema@@Base+0x2b90>
   33254:	mov	r3, #0
   33258:	str	r3, [fp, #400]	; 0x190
   3325c:	ldr	r0, [fp, #108]	; 0x6c
   33260:	clz	r3, r0
   33264:	lsr	r3, r3, #5
   33268:	str	r3, [fp, #120]	; 0x78
   3326c:	b	30ba8 <__flatcc_fb_build_schema@@Base+0x3a4>
   33270:	sub	r8, r8, #1
   33274:	add	r4, r4, #1
   33278:	cmp	r8, #1
   3327c:	ble	33310 <__flatcc_fb_build_schema@@Base+0x2b0c>
   33280:	cmp	sl, #0
   33284:	beq	33270 <__flatcc_fb_build_schema@@Base+0x2a6c>
   33288:	ldr	r0, [fp, #412]	; 0x19c
   3328c:	cmp	r0, #0
   33290:	beq	33270 <__flatcc_fb_build_schema@@Base+0x2a6c>
   33294:	mov	r2, r4
   33298:	ldr	r1, [r5]
   3329c:	bl	29418 <fb_scope_table_find@@Base>
   332a0:	cmp	r0, #0
   332a4:	beq	33270 <__flatcc_fb_build_schema@@Base+0x2a6c>
   332a8:	mov	r5, r0
   332ac:	ldr	r3, [r6, #4]
   332b0:	ldr	r2, [r3, #4]
   332b4:	ldr	r1, [r3]
   332b8:	add	r0, r5, #4
   332bc:	bl	284c8 <fb_symbol_table_find@@Base>
   332c0:	subs	r4, r0, #0
   332c4:	beq	332d4 <__flatcc_fb_build_schema@@Base+0x2ad0>
   332c8:	ldrh	r3, [r4, #8]
   332cc:	cmp	r3, #4
   332d0:	bls	33224 <__flatcc_fb_build_schema@@Base+0x2a20>
   332d4:	cmp	r5, #0
   332d8:	beq	33350 <__flatcc_fb_build_schema@@Base+0x2b4c>
   332dc:	ldr	r3, [r5]
   332e0:	cmp	r3, #0
   332e4:	beq	33210 <__flatcc_fb_build_schema@@Base+0x2a0c>
   332e8:	mov	r4, #0
   332ec:	add	r4, r4, #1
   332f0:	ldr	r3, [r3]
   332f4:	cmp	r3, #0
   332f8:	bne	332ec <__flatcc_fb_build_schema@@Base+0x2ae8>
   332fc:	cmp	r4, #0
   33300:	beq	33350 <__flatcc_fb_build_schema@@Base+0x2b4c>
   33304:	mov	r8, r4
   33308:	rsb	r4, r4, #1
   3330c:	b	33278 <__flatcc_fb_build_schema@@Base+0x2a74>
   33310:	cmp	sl, #0
   33314:	beq	33350 <__flatcc_fb_build_schema@@Base+0x2b4c>
   33318:	ldr	r0, [fp, #412]	; 0x19c
   3331c:	cmp	r0, #0
   33320:	beq	33350 <__flatcc_fb_build_schema@@Base+0x2b4c>
   33324:	mov	r2, r7
   33328:	mov	r1, r7
   3332c:	bl	29418 <fb_scope_table_find@@Base>
   33330:	subs	r5, r0, #0
   33334:	bne	332ac <__flatcc_fb_build_schema@@Base+0x2aa8>
   33338:	b	33210 <__flatcc_fb_build_schema@@Base+0x2a0c>
   3333c:	ldr	r1, [r4, #16]
   33340:	ldr	r0, [sp, #16]
   33344:	bl	27e80 <ptr_set_find_item@@Base>
   33348:	cmp	r0, #0
   3334c:	bne	33238 <__flatcc_fb_build_schema@@Base+0x2a34>
   33350:	mov	r3, #0
   33354:	str	r3, [fp, #404]	; 0x194
   33358:	mov	r3, #0
   3335c:	ldr	r2, [pc, #320]	; 334a4 <__flatcc_fb_build_schema@@Base+0x2ca0>
   33360:	ldr	r1, [fp, #400]	; 0x190
   33364:	mov	r0, fp
   33368:	bl	2ba04 <error_ref_sym@@Base>
   3336c:	b	33254 <__flatcc_fb_build_schema@@Base+0x2a50>
   33370:	ldrh	r3, [r4, #8]
   33374:	cmp	r3, #1
   33378:	bls	33254 <__flatcc_fb_build_schema@@Base+0x2a50>
   3337c:	mov	r3, #0
   33380:	ldr	r2, [pc, #288]	; 334a8 <__flatcc_fb_build_schema@@Base+0x2ca4>
   33384:	ldr	r1, [fp, #400]	; 0x190
   33388:	mov	r0, fp
   3338c:	bl	2ba04 <error_ref_sym@@Base>
   33390:	b	33254 <__flatcc_fb_build_schema@@Base+0x2a50>
   33394:	mov	r3, #0
   33398:	ldr	r2, [pc, #268]	; 334ac <__flatcc_fb_build_schema@@Base+0x2ca8>
   3339c:	ldr	r1, [fp, #400]	; 0x190
   333a0:	mov	r0, fp
   333a4:	bl	2ba04 <error_ref_sym@@Base>
   333a8:	b	33254 <__flatcc_fb_build_schema@@Base+0x2a50>
   333ac:	ldr	r2, [r5, #4]
   333b0:	ldr	r3, [r2]
   333b4:	ldr	r2, [r2, #4]
   333b8:	sub	ip, r2, #1
   333bc:	cmp	r2, #0
   333c0:	ldreq	r1, [pc, #232]	; 334b0 <__flatcc_fb_build_schema@@Base+0x2cac>
   333c4:	beq	30914 <__flatcc_fb_build_schema@@Base+0x110>
   333c8:	ldr	r1, [pc, #224]	; 334b0 <__flatcc_fb_build_schema@@Base+0x2cac>
   333cc:	b	308f0 <__flatcc_fb_build_schema@@Base+0xec>
   333d0:	ldr	r3, [sp, #32]
   333d4:	ldr	r3, [r3, #4]
   333d8:	ldr	r2, [r3, #4]
   333dc:	ldr	r1, [r3]
   333e0:	add	r0, r4, #56	; 0x38
   333e4:	bl	284c8 <fb_symbol_table_find@@Base>
   333e8:	subs	r3, r0, #0
   333ec:	beq	316dc <__flatcc_fb_build_schema@@Base+0xed8>
   333f0:	add	ip, fp, #48	; 0x30
   333f4:	add	r3, r3, #48	; 0x30
   333f8:	ldm	r3, {r0, r1, r2, r3}
   333fc:	stm	ip, {r0, r1, r2, r3}
   33400:	b	31550 <__flatcc_fb_build_schema@@Base+0xd4c>
   33404:	cmp	r1, #0
   33408:	streq	r6, [r5, #88]	; 0x58
   3340c:	streq	sl, [r5, #16]
   33410:	beq	30924 <__flatcc_fb_build_schema@@Base+0x120>
   33414:	b	30914 <__flatcc_fb_build_schema@@Base+0x110>
   33418:	ldrh	r3, [fp, #72]	; 0x48
   3341c:	tst	r3, #1024	; 0x400
   33420:	beq	312dc <__flatcc_fb_build_schema@@Base+0xad8>
   33424:	ldr	r3, [fp, #16]
   33428:	cmp	r3, #4
   3342c:	bne	312c8 <__flatcc_fb_build_schema@@Base+0xac4>
   33430:	b	31308 <__flatcc_fb_build_schema@@Base+0xb04>
   33434:	mov	r2, #0
   33438:	mov	r3, #0
   3343c:	ldr	r1, [sp, #12]
   33440:	strd	r2, [r1, #96]	; 0x60
   33444:	mov	r3, #0
   33448:	str	r3, [sp, #64]	; 0x40
   3344c:	str	r3, [sp, #20]
   33450:	b	326d0 <__flatcc_fb_build_schema@@Base+0x1ecc>
   33454:	andeq	r5, r5, r4, lsl sl
   33458:	andeq	r5, r5, r8, asr #20
   3345c:	andeq	r5, r5, r4, ror r9
   33460:	andeq	r5, r5, r0, lsl #21
   33464:	andeq	r4, r5, ip, lsr #18
   33468:			; <UNDEFINED> instruction: 0x00055ab4
   3346c:	andeq	r4, r5, r8, ror #16
   33470:	andeq	r4, r5, r8, lsl #17
   33474:			; <UNDEFINED> instruction: 0x000548b8
   33478:	andeq	r4, r5, r0, lsl r5
   3347c:	andeq	r4, r5, r0, ror #17
   33480:	andeq	r4, r5, r8, lsl #18
   33484:	andeq	r4, r5, r8, asr r9
   33488:	andeq	r4, r5, ip, ror r9
   3348c:	andeq	r4, r5, r8, lsr #19
   33490:	andeq	r4, r5, r0, lsr #12
   33494:	strdeq	r0, [r0], -r1
   33498:	andeq	r4, r5, r4, lsr r6
   3349c:	andeq	r5, r5, ip, ror #21
   334a0:	strdeq	r5, [r5], -r4
   334a4:	andeq	r5, r5, ip, lsl #22
   334a8:	andeq	r5, r5, r0, lsr #22
   334ac:	andeq	r5, r5, r8, asr #22
   334b0:	tsthi	ip, r5, asr #27
   334b4:	push	{lr}		; (str lr, [sp, #-4]!)
   334b8:	sub	sp, sp, #12
   334bc:	mov	ip, #0
   334c0:	str	ip, [sp, #4]
   334c4:	str	ip, [sp]
   334c8:	bl	2a418 <__flatcc_error_report@@Base>
   334cc:	add	sp, sp, #12
   334d0:	pop	{pc}		; (ldr pc, [sp], #4)

000334d4 <__flatcc_fb_coerce_scalar_type@@Base>:
   334d4:	ldrh	ip, [r3, #8]
   334d8:	cmp	ip, #0
   334dc:	beq	33cb4 <__flatcc_fb_coerce_scalar_type@@Base+0x7e0>
   334e0:	push	{r4, r5, r6, r8, r9, sl, fp, lr}
   334e4:	vpush	{d8}
   334e8:	cmp	ip, #4
   334ec:	beq	33584 <__flatcc_fb_coerce_scalar_type@@Base+0xb0>
   334f0:	cmp	ip, #1
   334f4:	beq	33cbc <__flatcc_fb_coerce_scalar_type@@Base+0x7e8>
   334f8:	mov	r4, r3
   334fc:	mov	r6, r1
   33500:	mov	r5, r0
   33504:	subs	r3, r2, #5
   33508:	movne	r3, #1
   3350c:	cmp	ip, #6
   33510:	movne	r3, #0
   33514:	cmp	r3, #0
   33518:	beq	335b4 <__flatcc_fb_coerce_scalar_type@@Base+0xe0>
   3351c:	ldr	r3, [r0, #144]	; 0x90
   33520:	cmp	r3, #0
   33524:	beq	335b4 <__flatcc_fb_coerce_scalar_type@@Base+0xe0>
   33528:	mov	r3, #5
   3352c:	strh	r3, [r4, #8]
   33530:	ldrb	r0, [r4]
   33534:	mov	r1, #0
   33538:	strd	r0, [r4]
   3353c:	cmp	r1, #0
   33540:	cmpeq	r0, #1
   33544:	bhi	335a0 <__flatcc_fb_coerce_scalar_type@@Base+0xcc>
   33548:	sub	r2, r2, #1
   3354c:	cmp	r2, #10
   33550:	ldrls	pc, [pc, r2, lsl #2]
   33554:	b	33c90 <__flatcc_fb_coerce_scalar_type@@Base+0x7bc>
   33558:	ldrdeq	r3, [r3], -r8
   3355c:	andeq	r3, r3, r4, lsr #12
   33560:	muleq	r3, r4, r6
   33564:	andeq	r3, r3, r4, lsl #14
   33568:	andeq	r3, r3, r8, lsl sl
   3356c:	andeq	r3, r3, ip, ror #14
   33570:	strdeq	r3, [r3], -r0
   33574:	andeq	r3, r3, r8, lsr #17
   33578:	andeq	r3, r3, r0, ror #18
   3357c:	muleq	r3, r8, sl
   33580:	muleq	r3, r0, fp
   33584:	ldrd	r4, [r3]
   33588:	cmp	r4, #0
   3358c:	sbcs	ip, r5, #0
   33590:	movge	ip, #5
   33594:	strhge	ip, [r3, #8]
   33598:	ldrh	ip, [r3, #8]
   3359c:	b	334f8 <__flatcc_fb_coerce_scalar_type@@Base+0x24>
   335a0:	ldr	r3, [pc, #1848]	; 33ce0 <__flatcc_fb_coerce_scalar_type@@Base+0x80c>
   335a4:	mov	r2, #52	; 0x34
   335a8:	ldr	r1, [pc, #1844]	; 33ce4 <__flatcc_fb_coerce_scalar_type@@Base+0x810>
   335ac:	ldr	r0, [pc, #1844]	; 33ce8 <__flatcc_fb_coerce_scalar_type@@Base+0x814>
   335b0:	bl	14148 <__assert_fail@plt>
   335b4:	sub	r2, r2, #1
   335b8:	cmp	r2, #10
   335bc:	ldrls	pc, [pc, r2, lsl #2]
   335c0:	b	33c90 <__flatcc_fb_coerce_scalar_type@@Base+0x7bc>
   335c4:	strdeq	r3, [r3], -r0
   335c8:	andeq	r3, r3, r4, lsr #12
   335cc:	muleq	r3, r4, r6
   335d0:	andeq	r3, r3, r4, lsl #14
   335d4:	andeq	r3, r3, r8, lsl sl
   335d8:	andeq	r3, r3, ip, ror #14
   335dc:	strdeq	r3, [r3], -r0
   335e0:	andeq	r3, r3, r8, lsr #17
   335e4:	andeq	r3, r3, r0, ror #18
   335e8:	muleq	r3, r8, sl
   335ec:	muleq	r3, r0, fp
   335f0:	ldrh	r3, [r4, #8]
   335f4:	cmp	r3, #5
   335f8:	moveq	r0, #0
   335fc:	beq	33cc0 <__flatcc_fb_coerce_scalar_type@@Base+0x7ec>
   33600:	mov	r3, #0
   33604:	ldr	r2, [pc, #1760]	; 33cec <__flatcc_fb_coerce_scalar_type@@Base+0x818>
   33608:	ldr	r1, [r6, #4]
   3360c:	mov	r0, r5
   33610:	bl	334b4 <__flatcc_fb_build_schema@@Base+0x2cb0>
   33614:	mov	r3, #1
   33618:	strh	r3, [r4, #8]
   3361c:	mvn	r0, #0
   33620:	b	33cc0 <__flatcc_fb_coerce_scalar_type@@Base+0x7ec>
   33624:	ldrh	r3, [r4, #8]
   33628:	cmp	r3, #5
   3362c:	bne	33670 <__flatcc_fb_coerce_scalar_type@@Base+0x19c>
   33630:	ldrd	r2, [r4]
   33634:	mvn	r0, #0
   33638:	mov	r1, #0
   3363c:	cmp	r3, r1
   33640:	cmpeq	r2, r0
   33644:	movls	r0, #0
   33648:	bls	33cc0 <__flatcc_fb_coerce_scalar_type@@Base+0x7ec>
   3364c:	mov	r3, #0
   33650:	ldr	r2, [pc, #1688]	; 33cf0 <__flatcc_fb_coerce_scalar_type@@Base+0x81c>
   33654:	ldr	r1, [r6, #4]
   33658:	mov	r0, r5
   3365c:	bl	334b4 <__flatcc_fb_build_schema@@Base+0x2cb0>
   33660:	mov	r3, #1
   33664:	strh	r3, [r4, #8]
   33668:	mvn	r0, #0
   3366c:	b	33cc0 <__flatcc_fb_coerce_scalar_type@@Base+0x7ec>
   33670:	mov	r3, #0
   33674:	ldr	r2, [pc, #1656]	; 33cf4 <__flatcc_fb_coerce_scalar_type@@Base+0x820>
   33678:	ldr	r1, [r6, #4]
   3367c:	mov	r0, r5
   33680:	bl	334b4 <__flatcc_fb_build_schema@@Base+0x2cb0>
   33684:	mov	r3, #1
   33688:	strh	r3, [r4, #8]
   3368c:	mvn	r0, #0
   33690:	b	33cc0 <__flatcc_fb_coerce_scalar_type@@Base+0x7ec>
   33694:	ldrh	r3, [r4, #8]
   33698:	cmp	r3, #5
   3369c:	bne	336e0 <__flatcc_fb_coerce_scalar_type@@Base+0x20c>
   336a0:	ldrd	r2, [r4]
   336a4:	ldr	r0, [pc, #1612]	; 33cf8 <__flatcc_fb_coerce_scalar_type@@Base+0x824>
   336a8:	mov	r1, #0
   336ac:	cmp	r3, r1
   336b0:	cmpeq	r2, r0
   336b4:	movls	r0, #0
   336b8:	bls	33cc0 <__flatcc_fb_coerce_scalar_type@@Base+0x7ec>
   336bc:	mov	r3, #0
   336c0:	ldr	r2, [pc, #1588]	; 33cfc <__flatcc_fb_coerce_scalar_type@@Base+0x828>
   336c4:	ldr	r1, [r6, #4]
   336c8:	mov	r0, r5
   336cc:	bl	334b4 <__flatcc_fb_build_schema@@Base+0x2cb0>
   336d0:	mov	r3, #1
   336d4:	strh	r3, [r4, #8]
   336d8:	mvn	r0, #0
   336dc:	b	33cc0 <__flatcc_fb_coerce_scalar_type@@Base+0x7ec>
   336e0:	mov	r3, #0
   336e4:	ldr	r2, [pc, #1556]	; 33d00 <__flatcc_fb_coerce_scalar_type@@Base+0x82c>
   336e8:	ldr	r1, [r6, #4]
   336ec:	mov	r0, r5
   336f0:	bl	334b4 <__flatcc_fb_build_schema@@Base+0x2cb0>
   336f4:	mov	r3, #1
   336f8:	strh	r3, [r4, #8]
   336fc:	mvn	r0, #0
   33700:	b	33cc0 <__flatcc_fb_coerce_scalar_type@@Base+0x7ec>
   33704:	ldrh	r3, [r4, #8]
   33708:	cmp	r3, #5
   3370c:	bne	33748 <__flatcc_fb_coerce_scalar_type@@Base+0x274>
   33710:	ldrd	r2, [r4]
   33714:	cmp	r3, #0
   33718:	cmpeq	r2, #255	; 0xff
   3371c:	movls	r0, #0
   33720:	bls	33cc0 <__flatcc_fb_coerce_scalar_type@@Base+0x7ec>
   33724:	mov	r3, #0
   33728:	ldr	r2, [pc, #1492]	; 33d04 <__flatcc_fb_coerce_scalar_type@@Base+0x830>
   3372c:	ldr	r1, [r6, #4]
   33730:	mov	r0, r5
   33734:	bl	334b4 <__flatcc_fb_build_schema@@Base+0x2cb0>
   33738:	mov	r3, #1
   3373c:	strh	r3, [r4, #8]
   33740:	mvn	r0, #0
   33744:	b	33cc0 <__flatcc_fb_coerce_scalar_type@@Base+0x7ec>
   33748:	mov	r3, #0
   3374c:	ldr	r2, [pc, #1460]	; 33d08 <__flatcc_fb_coerce_scalar_type@@Base+0x834>
   33750:	ldr	r1, [r6, #4]
   33754:	mov	r0, r5
   33758:	bl	334b4 <__flatcc_fb_build_schema@@Base+0x2cb0>
   3375c:	mov	r3, #1
   33760:	strh	r3, [r4, #8]
   33764:	mvn	r0, #0
   33768:	b	33cc0 <__flatcc_fb_coerce_scalar_type@@Base+0x7ec>
   3376c:	ldrh	r3, [r4, #8]
   33770:	cmp	r3, #4
   33774:	moveq	r0, #0
   33778:	beq	33cc0 <__flatcc_fb_coerce_scalar_type@@Base+0x7ec>
   3377c:	cmp	r3, #5
   33780:	bne	337cc <__flatcc_fb_coerce_scalar_type@@Base+0x2f8>
   33784:	ldrd	r2, [r4]
   33788:	cmp	r2, #0
   3378c:	sbcs	r1, r3, #0
   33790:	blt	337a8 <__flatcc_fb_coerce_scalar_type@@Base+0x2d4>
   33794:	strd	r2, [r4]
   33798:	mov	r3, #4
   3379c:	strh	r3, [r4, #8]
   337a0:	mov	r0, #0
   337a4:	b	33cc0 <__flatcc_fb_coerce_scalar_type@@Base+0x7ec>
   337a8:	mov	r3, #0
   337ac:	ldr	r2, [pc, #1368]	; 33d0c <__flatcc_fb_coerce_scalar_type@@Base+0x838>
   337b0:	ldr	r1, [r6, #4]
   337b4:	mov	r0, r5
   337b8:	bl	334b4 <__flatcc_fb_build_schema@@Base+0x2cb0>
   337bc:	mov	r3, #1
   337c0:	strh	r3, [r4, #8]
   337c4:	mvn	r0, #0
   337c8:	b	33cc0 <__flatcc_fb_coerce_scalar_type@@Base+0x7ec>
   337cc:	mov	r3, #0
   337d0:	ldr	r2, [pc, #1336]	; 33d10 <__flatcc_fb_coerce_scalar_type@@Base+0x83c>
   337d4:	ldr	r1, [r6, #4]
   337d8:	mov	r0, r5
   337dc:	bl	334b4 <__flatcc_fb_build_schema@@Base+0x2cb0>
   337e0:	mov	r3, #1
   337e4:	strh	r3, [r4, #8]
   337e8:	mvn	r0, #0
   337ec:	b	33cc0 <__flatcc_fb_coerce_scalar_type@@Base+0x7ec>
   337f0:	ldrh	r3, [r4, #8]
   337f4:	cmp	r3, #4
   337f8:	beq	33844 <__flatcc_fb_coerce_scalar_type@@Base+0x370>
   337fc:	cmp	r3, #5
   33800:	bne	33884 <__flatcc_fb_coerce_scalar_type@@Base+0x3b0>
   33804:	ldrd	r2, [r4]
   33808:	cmp	r2, #-2147483648	; 0x80000000
   3380c:	sbcs	r3, r3, #0
   33810:	movlt	r3, #4
   33814:	strhlt	r3, [r4, #8]
   33818:	movlt	r0, #0
   3381c:	blt	33cc0 <__flatcc_fb_coerce_scalar_type@@Base+0x7ec>
   33820:	mov	r3, #0
   33824:	ldr	r2, [pc, #1256]	; 33d14 <__flatcc_fb_coerce_scalar_type@@Base+0x840>
   33828:	ldr	r1, [r6, #4]
   3382c:	mov	r0, r5
   33830:	bl	334b4 <__flatcc_fb_build_schema@@Base+0x2cb0>
   33834:	mov	r3, #1
   33838:	strh	r3, [r4, #8]
   3383c:	mvn	r0, #0
   33840:	b	33cc0 <__flatcc_fb_coerce_scalar_type@@Base+0x7ec>
   33844:	ldrd	r2, [r4]
   33848:	mov	r0, #-2147483648	; 0x80000000
   3384c:	mvn	r1, #0
   33850:	cmp	r2, r0
   33854:	sbcs	r3, r3, r1
   33858:	movge	r0, #0
   3385c:	bge	33cc0 <__flatcc_fb_coerce_scalar_type@@Base+0x7ec>
   33860:	mov	r3, #0
   33864:	ldr	r2, [pc, #1196]	; 33d18 <__flatcc_fb_coerce_scalar_type@@Base+0x844>
   33868:	ldr	r1, [r6, #4]
   3386c:	mov	r0, r5
   33870:	bl	334b4 <__flatcc_fb_build_schema@@Base+0x2cb0>
   33874:	mov	r3, #1
   33878:	strh	r3, [r4, #8]
   3387c:	mvn	r0, #0
   33880:	b	33cc0 <__flatcc_fb_coerce_scalar_type@@Base+0x7ec>
   33884:	mov	r3, #0
   33888:	ldr	r2, [pc, #1164]	; 33d1c <__flatcc_fb_coerce_scalar_type@@Base+0x848>
   3388c:	ldr	r1, [r6, #4]
   33890:	mov	r0, r5
   33894:	bl	334b4 <__flatcc_fb_build_schema@@Base+0x2cb0>
   33898:	mov	r3, #1
   3389c:	strh	r3, [r4, #8]
   338a0:	mvn	r0, #0
   338a4:	b	33cc0 <__flatcc_fb_coerce_scalar_type@@Base+0x7ec>
   338a8:	ldrh	r3, [r4, #8]
   338ac:	cmp	r3, #4
   338b0:	beq	338fc <__flatcc_fb_coerce_scalar_type@@Base+0x428>
   338b4:	cmp	r3, #5
   338b8:	bne	3393c <__flatcc_fb_coerce_scalar_type@@Base+0x468>
   338bc:	ldrd	r2, [r4]
   338c0:	cmp	r2, #32768	; 0x8000
   338c4:	sbcs	r3, r3, #0
   338c8:	movlt	r3, #4
   338cc:	strhlt	r3, [r4, #8]
   338d0:	movlt	r0, #0
   338d4:	blt	33cc0 <__flatcc_fb_coerce_scalar_type@@Base+0x7ec>
   338d8:	mov	r3, #0
   338dc:	ldr	r2, [pc, #1084]	; 33d20 <__flatcc_fb_coerce_scalar_type@@Base+0x84c>
   338e0:	ldr	r1, [r6, #4]
   338e4:	mov	r0, r5
   338e8:	bl	334b4 <__flatcc_fb_build_schema@@Base+0x2cb0>
   338ec:	mov	r3, #1
   338f0:	strh	r3, [r4, #8]
   338f4:	mvn	r0, #0
   338f8:	b	33cc0 <__flatcc_fb_coerce_scalar_type@@Base+0x7ec>
   338fc:	ldrd	r2, [r4]
   33900:	ldr	r0, [pc, #1052]	; 33d24 <__flatcc_fb_coerce_scalar_type@@Base+0x850>
   33904:	mvn	r1, #0
   33908:	cmp	r2, r0
   3390c:	sbcs	r3, r3, r1
   33910:	movge	r0, #0
   33914:	bge	33cc0 <__flatcc_fb_coerce_scalar_type@@Base+0x7ec>
   33918:	mov	r3, #0
   3391c:	ldr	r2, [pc, #1028]	; 33d28 <__flatcc_fb_coerce_scalar_type@@Base+0x854>
   33920:	ldr	r1, [r6, #4]
   33924:	mov	r0, r5
   33928:	bl	334b4 <__flatcc_fb_build_schema@@Base+0x2cb0>
   3392c:	mov	r3, #1
   33930:	strh	r3, [r4, #8]
   33934:	mvn	r0, #0
   33938:	b	33cc0 <__flatcc_fb_coerce_scalar_type@@Base+0x7ec>
   3393c:	mov	r3, #0
   33940:	ldr	r2, [pc, #996]	; 33d2c <__flatcc_fb_coerce_scalar_type@@Base+0x858>
   33944:	ldr	r1, [r6, #4]
   33948:	mov	r0, r5
   3394c:	bl	334b4 <__flatcc_fb_build_schema@@Base+0x2cb0>
   33950:	mov	r3, #1
   33954:	strh	r3, [r4, #8]
   33958:	mvn	r0, #0
   3395c:	b	33cc0 <__flatcc_fb_coerce_scalar_type@@Base+0x7ec>
   33960:	ldrh	r3, [r4, #8]
   33964:	cmp	r3, #4
   33968:	beq	339b4 <__flatcc_fb_coerce_scalar_type@@Base+0x4e0>
   3396c:	cmp	r3, #5
   33970:	bne	339f4 <__flatcc_fb_coerce_scalar_type@@Base+0x520>
   33974:	ldrd	r2, [r4]
   33978:	cmp	r2, #128	; 0x80
   3397c:	sbcs	r3, r3, #0
   33980:	movlt	r3, #4
   33984:	strhlt	r3, [r4, #8]
   33988:	movlt	r0, #0
   3398c:	blt	33cc0 <__flatcc_fb_coerce_scalar_type@@Base+0x7ec>
   33990:	mov	r3, #0
   33994:	ldr	r2, [pc, #916]	; 33d30 <__flatcc_fb_coerce_scalar_type@@Base+0x85c>
   33998:	ldr	r1, [r6, #4]
   3399c:	mov	r0, r5
   339a0:	bl	334b4 <__flatcc_fb_build_schema@@Base+0x2cb0>
   339a4:	mov	r3, #1
   339a8:	strh	r3, [r4, #8]
   339ac:	mvn	r0, #0
   339b0:	b	33cc0 <__flatcc_fb_coerce_scalar_type@@Base+0x7ec>
   339b4:	ldrd	r2, [r4]
   339b8:	mvn	r0, #127	; 0x7f
   339bc:	mvn	r1, #0
   339c0:	cmp	r2, r0
   339c4:	sbcs	r3, r3, r1
   339c8:	movge	r0, #0
   339cc:	bge	33cc0 <__flatcc_fb_coerce_scalar_type@@Base+0x7ec>
   339d0:	mov	r3, #0
   339d4:	ldr	r2, [pc, #856]	; 33d34 <__flatcc_fb_coerce_scalar_type@@Base+0x860>
   339d8:	ldr	r1, [r6, #4]
   339dc:	mov	r0, r5
   339e0:	bl	334b4 <__flatcc_fb_build_schema@@Base+0x2cb0>
   339e4:	mov	r3, #1
   339e8:	strh	r3, [r4, #8]
   339ec:	mvn	r0, #0
   339f0:	b	33cc0 <__flatcc_fb_coerce_scalar_type@@Base+0x7ec>
   339f4:	mov	r3, #0
   339f8:	ldr	r2, [pc, #824]	; 33d38 <__flatcc_fb_coerce_scalar_type@@Base+0x864>
   339fc:	ldr	r1, [r6, #4]
   33a00:	mov	r0, r5
   33a04:	bl	334b4 <__flatcc_fb_build_schema@@Base+0x2cb0>
   33a08:	mov	r3, #1
   33a0c:	strh	r3, [r4, #8]
   33a10:	mvn	r0, #0
   33a14:	b	33cc0 <__flatcc_fb_coerce_scalar_type@@Base+0x7ec>
   33a18:	ldrh	r3, [r4, #8]
   33a1c:	cmp	r3, #5
   33a20:	beq	33a54 <__flatcc_fb_coerce_scalar_type@@Base+0x580>
   33a24:	cmp	r3, #6
   33a28:	moveq	r0, #0
   33a2c:	beq	33cc0 <__flatcc_fb_coerce_scalar_type@@Base+0x7ec>
   33a30:	mov	r3, #0
   33a34:	ldr	r2, [pc, #768]	; 33d3c <__flatcc_fb_coerce_scalar_type@@Base+0x868>
   33a38:	ldr	r1, [r6, #4]
   33a3c:	mov	r0, r5
   33a40:	bl	334b4 <__flatcc_fb_build_schema@@Base+0x2cb0>
   33a44:	mov	r3, #1
   33a48:	strh	r3, [r4, #8]
   33a4c:	mvn	r0, #0
   33a50:	b	33cc0 <__flatcc_fb_coerce_scalar_type@@Base+0x7ec>
   33a54:	ldr	r3, [r5, #144]	; 0x90
   33a58:	cmp	r3, #0
   33a5c:	beq	33a30 <__flatcc_fb_coerce_scalar_type@@Base+0x55c>
   33a60:	ldrd	r2, [r4]
   33a64:	cmp	r3, #0
   33a68:	cmpeq	r2, #1
   33a6c:	movls	r0, #0
   33a70:	bls	33cc0 <__flatcc_fb_coerce_scalar_type@@Base+0x7ec>
   33a74:	mov	r3, #0
   33a78:	ldr	r2, [pc, #704]	; 33d40 <__flatcc_fb_coerce_scalar_type@@Base+0x86c>
   33a7c:	ldr	r1, [r6, #4]
   33a80:	mov	r0, r5
   33a84:	bl	334b4 <__flatcc_fb_build_schema@@Base+0x2cb0>
   33a88:	mov	r3, #1
   33a8c:	strh	r3, [r4, #8]
   33a90:	mvn	r0, #0
   33a94:	b	33cc0 <__flatcc_fb_coerce_scalar_type@@Base+0x7ec>
   33a98:	ldrh	r3, [r4, #8]
   33a9c:	cmp	r3, #4
   33aa0:	beq	33ad8 <__flatcc_fb_coerce_scalar_type@@Base+0x604>
   33aa4:	cmp	r3, #5
   33aa8:	beq	33b34 <__flatcc_fb_coerce_scalar_type@@Base+0x660>
   33aac:	cmp	r3, #3
   33ab0:	beq	33cc8 <__flatcc_fb_coerce_scalar_type@@Base+0x7f4>
   33ab4:	mov	r3, #0
   33ab8:	ldr	r2, [pc, #644]	; 33d44 <__flatcc_fb_coerce_scalar_type@@Base+0x870>
   33abc:	ldr	r1, [r6, #4]
   33ac0:	mov	r0, r5
   33ac4:	bl	334b4 <__flatcc_fb_build_schema@@Base+0x2cb0>
   33ac8:	mov	r3, #1
   33acc:	strh	r3, [r4, #8]
   33ad0:	mvn	r0, #0
   33ad4:	b	33cc0 <__flatcc_fb_coerce_scalar_type@@Base+0x7ec>
   33ad8:	ldrd	r8, [r4]
   33adc:	mov	r0, r8
   33ae0:	mov	r1, r9
   33ae4:	bl	3aab4 <fb_value_set_visit@@Base+0x364>
   33ae8:	mov	sl, r0
   33aec:	mov	fp, r1
   33af0:	bl	3addc <fb_value_set_visit@@Base+0x68c>
   33af4:	cmp	r9, r1
   33af8:	cmpeq	r8, r0
   33afc:	strdeq	sl, [r4]
   33b00:	moveq	r3, #3
   33b04:	strheq	r3, [r4, #8]
   33b08:	moveq	r0, #0
   33b0c:	beq	33cc0 <__flatcc_fb_coerce_scalar_type@@Base+0x7ec>
   33b10:	mov	r3, #0
   33b14:	ldr	r2, [pc, #556]	; 33d48 <__flatcc_fb_coerce_scalar_type@@Base+0x874>
   33b18:	ldr	r1, [r6, #4]
   33b1c:	mov	r0, r5
   33b20:	bl	334b4 <__flatcc_fb_build_schema@@Base+0x2cb0>
   33b24:	mov	r3, #1
   33b28:	strh	r3, [r4, #8]
   33b2c:	mvn	r0, #0
   33b30:	b	33cc0 <__flatcc_fb_coerce_scalar_type@@Base+0x7ec>
   33b34:	ldrd	r8, [r4]
   33b38:	mov	r0, r8
   33b3c:	mov	r1, r9
   33b40:	bl	3aaa0 <fb_value_set_visit@@Base+0x350>
   33b44:	mov	sl, r0
   33b48:	mov	fp, r1
   33b4c:	bl	3ae50 <fb_value_set_visit@@Base+0x700>
   33b50:	cmp	r9, r1
   33b54:	cmpeq	r8, r0
   33b58:	strdeq	sl, [r4]
   33b5c:	moveq	r3, #3
   33b60:	strheq	r3, [r4, #8]
   33b64:	moveq	r0, #0
   33b68:	beq	33cc0 <__flatcc_fb_coerce_scalar_type@@Base+0x7ec>
   33b6c:	mov	r3, #0
   33b70:	ldr	r2, [pc, #464]	; 33d48 <__flatcc_fb_coerce_scalar_type@@Base+0x874>
   33b74:	ldr	r1, [r6, #4]
   33b78:	mov	r0, r5
   33b7c:	bl	334b4 <__flatcc_fb_build_schema@@Base+0x2cb0>
   33b80:	mov	r3, #1
   33b84:	strh	r3, [r4, #8]
   33b88:	mvn	r0, #0
   33b8c:	b	33cc0 <__flatcc_fb_coerce_scalar_type@@Base+0x7ec>
   33b90:	ldrh	r3, [r4, #8]
   33b94:	cmp	r3, #4
   33b98:	beq	33bd0 <__flatcc_fb_coerce_scalar_type@@Base+0x6fc>
   33b9c:	cmp	r3, #5
   33ba0:	beq	33c30 <__flatcc_fb_coerce_scalar_type@@Base+0x75c>
   33ba4:	cmp	r3, #3
   33ba8:	beq	33cd0 <__flatcc_fb_coerce_scalar_type@@Base+0x7fc>
   33bac:	mov	r3, #0
   33bb0:	ldr	r2, [pc, #404]	; 33d4c <__flatcc_fb_coerce_scalar_type@@Base+0x878>
   33bb4:	ldr	r1, [r6, #4]
   33bb8:	mov	r0, r5
   33bbc:	bl	334b4 <__flatcc_fb_build_schema@@Base+0x2cb0>
   33bc0:	mov	r3, #1
   33bc4:	strh	r3, [r4, #8]
   33bc8:	mvn	r0, #0
   33bcc:	b	33cc0 <__flatcc_fb_coerce_scalar_type@@Base+0x7ec>
   33bd0:	ldrd	r8, [r4]
   33bd4:	mov	r0, r8
   33bd8:	mov	r1, r9
   33bdc:	bl	3ace8 <fb_value_set_visit@@Base+0x598>
   33be0:	vmov	s16, r0
   33be4:	bl	3adb0 <fb_value_set_visit@@Base+0x660>
   33be8:	cmp	r9, r1
   33bec:	cmpeq	r8, r0
   33bf0:	bne	33c0c <__flatcc_fb_coerce_scalar_type@@Base+0x738>
   33bf4:	vcvt.f64.f32	d8, s16
   33bf8:	vstr	d8, [r4]
   33bfc:	mov	r3, #3
   33c00:	strh	r3, [r4, #8]
   33c04:	mov	r0, #0
   33c08:	b	33cc0 <__flatcc_fb_coerce_scalar_type@@Base+0x7ec>
   33c0c:	mov	r3, #0
   33c10:	ldr	r2, [pc, #312]	; 33d50 <__flatcc_fb_coerce_scalar_type@@Base+0x87c>
   33c14:	ldr	r1, [r6, #4]
   33c18:	mov	r0, r5
   33c1c:	bl	334b4 <__flatcc_fb_build_schema@@Base+0x2cb0>
   33c20:	mov	r3, #1
   33c24:	strh	r3, [r4, #8]
   33c28:	mvn	r0, #0
   33c2c:	b	33cc0 <__flatcc_fb_coerce_scalar_type@@Base+0x7ec>
   33c30:	ldrd	r8, [r4]
   33c34:	mov	r0, r8
   33c38:	mov	r1, r9
   33c3c:	bl	3acd8 <fb_value_set_visit@@Base+0x588>
   33c40:	vmov	s16, r0
   33c44:	bl	3ae08 <fb_value_set_visit@@Base+0x6b8>
   33c48:	cmp	r9, r1
   33c4c:	cmpeq	r8, r0
   33c50:	bne	33c6c <__flatcc_fb_coerce_scalar_type@@Base+0x798>
   33c54:	vcvt.f64.f32	d8, s16
   33c58:	vstr	d8, [r4]
   33c5c:	mov	r3, #3
   33c60:	strh	r3, [r4, #8]
   33c64:	mov	r0, #0
   33c68:	b	33cc0 <__flatcc_fb_coerce_scalar_type@@Base+0x7ec>
   33c6c:	mov	r3, #0
   33c70:	ldr	r2, [pc, #216]	; 33d50 <__flatcc_fb_coerce_scalar_type@@Base+0x87c>
   33c74:	ldr	r1, [r6, #4]
   33c78:	mov	r0, r5
   33c7c:	bl	334b4 <__flatcc_fb_build_schema@@Base+0x2cb0>
   33c80:	mov	r3, #1
   33c84:	strh	r3, [r4, #8]
   33c88:	mvn	r0, #0
   33c8c:	b	33cc0 <__flatcc_fb_coerce_scalar_type@@Base+0x7ec>
   33c90:	mov	r3, #0
   33c94:	ldr	r2, [pc, #184]	; 33d54 <__flatcc_fb_coerce_scalar_type@@Base+0x880>
   33c98:	ldr	r1, [r6, #4]
   33c9c:	mov	r0, r5
   33ca0:	bl	334b4 <__flatcc_fb_build_schema@@Base+0x2cb0>
   33ca4:	mov	r3, #1
   33ca8:	strh	r3, [r4, #8]
   33cac:	mvn	r0, #0
   33cb0:	b	33cc0 <__flatcc_fb_coerce_scalar_type@@Base+0x7ec>
   33cb4:	mov	r0, #0
   33cb8:	bx	lr
   33cbc:	mov	r0, #0
   33cc0:	vpop	{d8}
   33cc4:	pop	{r4, r5, r6, r8, r9, sl, fp, pc}
   33cc8:	mov	r0, #0
   33ccc:	b	33cc0 <__flatcc_fb_coerce_scalar_type@@Base+0x7ec>
   33cd0:	mov	r0, #0
   33cd4:	b	33cc0 <__flatcc_fb_coerce_scalar_type@@Base+0x7ec>
   33cd8:	mov	r0, #0
   33cdc:	b	33cc0 <__flatcc_fb_coerce_scalar_type@@Base+0x7ec>
   33ce0:	andeq	r5, r5, ip, lsl #24
   33ce4:	andeq	r5, r5, ip, lsr #24
   33ce8:	andeq	r5, r5, r4, ror ip
   33cec:	muleq	r5, r4, ip
   33cf0:	andeq	r5, r5, r0, lsl #26
   33cf4:	andeq	r5, r5, r8, asr #25
   33cf8:	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>
   33cfc:	andeq	r5, r5, ip, asr sp
   33d00:	andeq	r5, r5, r0, lsr #26
   33d04:			; <UNDEFINED> instruction: 0x00055db4
   33d08:	andeq	r5, r5, ip, ror sp
   33d0c:	ldrdeq	r5, [r5], -r4
   33d10:	strdeq	r5, [r5], -r4
   33d14:	andeq	r5, r5, ip, lsr lr
   33d18:	andeq	r5, r5, r0, lsr #28
   33d1c:	andeq	r5, r5, r8, asr lr
   33d20:	andeq	r5, r5, r8, lsr #29
   33d24:			; <UNDEFINED> instruction: 0xffff8000
   33d28:	andeq	r5, r5, r8, lsl #29
   33d2c:	andeq	r5, r5, r8, asr #29
   33d30:	andeq	r5, r5, r4, lsl pc
   33d34:	strdeq	r5, [r5], -r8
   33d38:	andeq	r5, r5, r0, lsr pc
   33d3c:	andeq	r5, r5, r0, lsr #31
   33d40:	andeq	r5, r5, r0, ror #30
   33d44:	andeq	r6, r5, r8
   33d48:	ldrdeq	r5, [r5], -r8
   33d4c:	andeq	r6, r5, r4, ror r0
   33d50:	andeq	r6, r5, r4, asr #32
   33d54:	andeq	r6, r5, ip, lsr #1
   33d58:	push	{r4, r5, r6, lr}
   33d5c:	sub	sp, sp, #8
   33d60:	mov	r4, r0
   33d64:	mov	r5, r2
   33d68:	ldr	r2, [r0, #28]
   33d6c:	mov	r3, #1
   33d70:	str	r3, [sp]
   33d74:	ldr	r6, [r0, #48]	; 0x30
   33d78:	add	r2, r1, r2
   33d7c:	add	r1, r0, #60	; 0x3c
   33d80:	ldr	r0, [r0, #40]	; 0x28
   33d84:	blx	r6
   33d88:	cmp	r0, #0
   33d8c:	bne	33dc4 <__flatcc_fb_coerce_scalar_type@@Base+0x8f0>
   33d90:	ldr	r1, [r4, #28]
   33d94:	ldr	r2, [r4, #60]	; 0x3c
   33d98:	add	r2, r2, r1
   33d9c:	str	r2, [r4, #16]
   33da0:	ldr	r3, [r4, #64]	; 0x40
   33da4:	sub	r3, r3, r1
   33da8:	cmp	r3, r5
   33dac:	movcs	r3, r5
   33db0:	str	r3, [r4, #24]
   33db4:	ldr	r3, [r4, #32]
   33db8:	str	r5, [r3, #4]
   33dbc:	add	sp, sp, #8
   33dc0:	pop	{r4, r5, r6, pc}
   33dc4:	mvn	r0, #0
   33dc8:	b	33dbc <__flatcc_fb_coerce_scalar_type@@Base+0x8e8>

00033dcc <flatcc_builder_default_alloc@@Base>:
   33dcc:	push	{r4, r5, r6, r7, r8, lr}
   33dd0:	mov	r5, r1
   33dd4:	cmp	r2, #0
   33dd8:	bne	33dfc <flatcc_builder_default_alloc@@Base+0x30>
   33ddc:	ldr	r0, [r1]
   33de0:	cmp	r0, #0
   33de4:	beq	33ec8 <flatcc_builder_default_alloc@@Base+0xfc>
   33de8:	bl	13fd4 <free@plt>
   33dec:	mov	r0, #0
   33df0:	str	r0, [r5]
   33df4:	str	r0, [r5, #4]
   33df8:	pop	{r4, r5, r6, r7, r8, pc}
   33dfc:	mov	r6, r3
   33e00:	ldr	r3, [sp, #24]
   33e04:	sub	r3, r3, #1
   33e08:	cmp	r3, #6
   33e0c:	ldrls	pc, [pc, r3, lsl #2]
   33e10:	b	33ea4 <flatcc_builder_default_alloc@@Base+0xd8>
   33e14:	andeq	r3, r3, r8, lsr lr
   33e18:	andeq	r3, r3, r4, lsr #29
   33e1c:	andeq	r3, r3, r4, lsr #29
   33e20:	andeq	r3, r3, r0, lsr lr
   33e24:	andeq	r3, r3, ip, lsr #29
   33e28:	andeq	r3, r3, r4, lsr #29
   33e2c:	muleq	r3, ip, lr
   33e30:	mov	r4, #288	; 0x120
   33e34:	b	33e3c <flatcc_builder_default_alloc@@Base+0x70>
   33e38:	mov	r4, #256	; 0x100
   33e3c:	cmp	r4, r2
   33e40:	bcs	33e50 <flatcc_builder_default_alloc@@Base+0x84>
   33e44:	lsl	r4, r4, #1
   33e48:	cmp	r2, r4
   33e4c:	bhi	33e44 <flatcc_builder_default_alloc@@Base+0x78>
   33e50:	ldr	r3, [r5, #4]
   33e54:	cmp	r2, r3
   33e58:	bhi	33e64 <flatcc_builder_default_alloc@@Base+0x98>
   33e5c:	cmp	r4, r3, lsr #1
   33e60:	bls	33ed0 <flatcc_builder_default_alloc@@Base+0x104>
   33e64:	mov	r1, r4
   33e68:	ldr	r0, [r5]
   33e6c:	bl	14010 <realloc@plt>
   33e70:	subs	r7, r0, #0
   33e74:	beq	33ed8 <flatcc_builder_default_alloc@@Base+0x10c>
   33e78:	cmp	r6, #0
   33e7c:	beq	33e8c <flatcc_builder_default_alloc@@Base+0xc0>
   33e80:	ldr	r0, [r5, #4]
   33e84:	cmp	r0, r4
   33e88:	bcc	33eb4 <flatcc_builder_default_alloc@@Base+0xe8>
   33e8c:	str	r7, [r5]
   33e90:	str	r4, [r5, #4]
   33e94:	mov	r0, #0
   33e98:	pop	{r4, r5, r6, r7, r8, pc}
   33e9c:	mov	r4, #64	; 0x40
   33ea0:	b	33e3c <flatcc_builder_default_alloc@@Base+0x70>
   33ea4:	mov	r4, #32
   33ea8:	b	33e3c <flatcc_builder_default_alloc@@Base+0x70>
   33eac:	mov	r4, r2
   33eb0:	b	33e50 <flatcc_builder_default_alloc@@Base+0x84>
   33eb4:	sub	r2, r4, r0
   33eb8:	mov	r1, #0
   33ebc:	add	r0, r7, r0
   33ec0:	bl	140ac <memset@plt>
   33ec4:	b	33e8c <flatcc_builder_default_alloc@@Base+0xc0>
   33ec8:	mov	r0, #0
   33ecc:	pop	{r4, r5, r6, r7, r8, pc}
   33ed0:	mov	r0, #0
   33ed4:	pop	{r4, r5, r6, r7, r8, pc}
   33ed8:	mvn	r0, #0
   33edc:	pop	{r4, r5, r6, r7, r8, pc}
   33ee0:	cmp	r2, #0
   33ee4:	bne	33ef4 <flatcc_builder_default_alloc@@Base+0x128>
   33ee8:	ldrh	r2, [r0, #132]	; 0x84
   33eec:	cmp	r2, #0
   33ef0:	moveq	r2, #1
   33ef4:	ldrh	ip, [r1]
   33ef8:	cmp	ip, #3
   33efc:	movls	ip, #4
   33f00:	strhls	ip, [r1]
   33f04:	ldrh	ip, [r1]
   33f08:	cmp	ip, r2
   33f0c:	strhcc	r2, [r1]
   33f10:	cmp	r3, #0
   33f14:	bne	33fd0 <flatcc_builder_default_alloc@@Base+0x204>
   33f18:	push	{r4, r5, lr}
   33f1c:	sub	sp, sp, #84	; 0x54
   33f20:	ldr	r4, [r0, #140]	; 0x8c
   33f24:	sub	r2, r2, #1
   33f28:	ands	r2, r2, r4
   33f2c:	bne	33f3c <flatcc_builder_default_alloc@@Base+0x170>
   33f30:	mov	r0, #0
   33f34:	add	sp, sp, #84	; 0x54
   33f38:	pop	{r4, r5, pc}
   33f3c:	str	r2, [sp, #8]
   33f40:	ldr	r3, [pc, #144]	; 33fd8 <flatcc_builder_default_alloc@@Base+0x20c>
   33f44:	str	r3, [sp, #16]
   33f48:	str	r2, [sp, #20]
   33f4c:	mov	r3, #1
   33f50:	str	r3, [sp, #12]
   33f54:	add	r3, r4, r2
   33f58:	str	r3, [r0, #140]	; 0x8c
   33f5c:	cmp	r4, r3
   33f60:	bgt	33fa8 <flatcc_builder_default_alloc@@Base+0x1dc>
   33f64:	ldr	ip, [r0, #36]	; 0x24
   33f68:	str	r2, [sp]
   33f6c:	ldr	r5, [r0, #44]	; 0x2c
   33f70:	mov	r3, r4
   33f74:	mov	r2, #1
   33f78:	add	r1, sp, #16
   33f7c:	mov	r0, ip
   33f80:	blx	r5
   33f84:	cmp	r0, #0
   33f88:	bne	33fbc <flatcc_builder_default_alloc@@Base+0x1f0>
   33f8c:	cmn	r4, #1
   33f90:	bne	33f30 <flatcc_builder_default_alloc@@Base+0x164>
   33f94:	ldr	r3, [pc, #64]	; 33fdc <flatcc_builder_default_alloc@@Base+0x210>
   33f98:	ldr	r2, [pc, #64]	; 33fe0 <flatcc_builder_default_alloc@@Base+0x214>
   33f9c:	ldr	r1, [pc, #64]	; 33fe4 <flatcc_builder_default_alloc@@Base+0x218>
   33fa0:	ldr	r0, [pc, #64]	; 33fe8 <flatcc_builder_default_alloc@@Base+0x21c>
   33fa4:	bl	14148 <__assert_fail@plt>
   33fa8:	ldr	r3, [pc, #60]	; 33fec <flatcc_builder_default_alloc@@Base+0x220>
   33fac:	ldr	r2, [pc, #60]	; 33ff0 <flatcc_builder_default_alloc@@Base+0x224>
   33fb0:	ldr	r1, [pc, #44]	; 33fe4 <flatcc_builder_default_alloc@@Base+0x218>
   33fb4:	ldr	r0, [pc, #44]	; 33fe8 <flatcc_builder_default_alloc@@Base+0x21c>
   33fb8:	bl	14148 <__assert_fail@plt>
   33fbc:	ldr	r3, [pc, #40]	; 33fec <flatcc_builder_default_alloc@@Base+0x220>
   33fc0:	ldr	r2, [pc, #44]	; 33ff4 <flatcc_builder_default_alloc@@Base+0x228>
   33fc4:	ldr	r1, [pc, #24]	; 33fe4 <flatcc_builder_default_alloc@@Base+0x218>
   33fc8:	ldr	r0, [pc, #24]	; 33fe8 <flatcc_builder_default_alloc@@Base+0x21c>
   33fcc:	bl	14148 <__assert_fail@plt>
   33fd0:	mov	r0, #0
   33fd4:	bx	lr
   33fd8:	andeq	r6, r5, r4, asr #1
   33fdc:	ldrdeq	r6, [r5], -r0
   33fe0:			; <UNDEFINED> instruction: 0x000002be
   33fe4:	andeq	r6, r5, r4, lsl r8
   33fe8:	andeq	r5, r4, r0, ror #3
   33fec:	andeq	r6, r5, r4, asr #5
   33ff0:	andeq	r0, r0, r1, lsr #5
   33ff4:	andeq	r0, r0, r5, lsr #5
   33ff8:	push	{r4, r5, r6, r7, lr}
   33ffc:	sub	sp, sp, #12
   34000:	mov	r4, r0
   34004:	mov	r6, r1
   34008:	ldr	r3, [r0, #156]	; 0x9c
   3400c:	add	r2, r3, #1
   34010:	str	r2, [r0, #156]	; 0x9c
   34014:	ldr	r1, [r0, #160]	; 0xa0
   34018:	cmp	r2, r1
   3401c:	ble	340bc <flatcc_builder_default_alloc@@Base+0x2f0>
   34020:	ldr	r1, [r0, #176]	; 0xb0
   34024:	cmp	r2, r1
   34028:	cmpgt	r1, #0
   3402c:	bgt	34124 <flatcc_builder_default_alloc@@Base+0x358>
   34030:	add	r3, r3, r3, lsl #3
   34034:	lsl	r5, r3, #2
   34038:	add	r2, r5, #36	; 0x24
   3403c:	ldr	r3, [r0, #88]	; 0x58
   34040:	cmp	r2, r3
   34044:	bhi	34084 <flatcc_builder_default_alloc@@Base+0x2b8>
   34048:	ldr	r3, [r4, #84]	; 0x54
   3404c:	add	r5, r3, r5
   34050:	str	r5, [r4, #32]
   34054:	cmp	r5, #0
   34058:	beq	3412c <flatcc_builder_default_alloc@@Base+0x360>
   3405c:	ldr	r3, [r4, #88]	; 0x58
   34060:	ldr	r2, [pc, #204]	; 34134 <flatcc_builder_default_alloc@@Base+0x368>
   34064:	umull	r2, r3, r2, r3
   34068:	lsr	r3, r3, #3
   3406c:	str	r3, [r4, #160]	; 0xa0
   34070:	ldr	r2, [r4, #176]	; 0xb0
   34074:	cmp	r2, #0
   34078:	cmpgt	r3, r2
   3407c:	strgt	r2, [r4, #160]	; 0xa0
   34080:	b	340c8 <flatcc_builder_default_alloc@@Base+0x2fc>
   34084:	mov	r3, #4
   34088:	str	r3, [sp]
   3408c:	ldr	r7, [r0, #48]	; 0x30
   34090:	mov	r3, #0
   34094:	add	r1, r0, #84	; 0x54
   34098:	ldr	r0, [r0, #40]	; 0x28
   3409c:	blx	r7
   340a0:	cmp	r0, #0
   340a4:	beq	34048 <flatcc_builder_default_alloc@@Base+0x27c>
   340a8:	ldr	r3, [pc, #136]	; 34138 <flatcc_builder_default_alloc@@Base+0x36c>
   340ac:	mov	r2, #308	; 0x134
   340b0:	ldr	r1, [pc, #132]	; 3413c <flatcc_builder_default_alloc@@Base+0x370>
   340b4:	ldr	r0, [pc, #132]	; 34140 <flatcc_builder_default_alloc@@Base+0x374>
   340b8:	bl	14148 <__assert_fail@plt>
   340bc:	ldr	r3, [r0, #32]
   340c0:	add	r3, r3, #36	; 0x24
   340c4:	str	r3, [r0, #32]
   340c8:	ldr	r3, [r4, #32]
   340cc:	ldr	r2, [r4, #20]
   340d0:	str	r2, [r3, #8]
   340d4:	ldr	r3, [r4, #32]
   340d8:	ldrh	r2, [r4, #130]	; 0x82
   340dc:	strh	r2, [r3, #12]
   340e0:	strh	r6, [r4, #130]	; 0x82
   340e4:	ldr	r3, [r4, #32]
   340e8:	ldr	r2, [r4, #28]
   340ec:	str	r2, [r3]
   340f0:	ldr	r3, [r4, #32]
   340f4:	mvn	r2, #3
   340f8:	str	r2, [r3, #4]
   340fc:	ldr	r3, [r4, #28]
   34100:	ldr	r2, [r4, #20]
   34104:	add	r3, r3, r2
   34108:	add	r3, r3, #7
   3410c:	bic	r3, r3, #7
   34110:	str	r3, [r4, #28]
   34114:	mov	r0, #0
   34118:	str	r0, [r4, #20]
   3411c:	add	sp, sp, #12
   34120:	pop	{r4, r5, r6, r7, pc}
   34124:	mvn	r0, #0
   34128:	b	3411c <flatcc_builder_default_alloc@@Base+0x350>
   3412c:	mvn	r0, #0
   34130:	b	3411c <flatcc_builder_default_alloc@@Base+0x350>
   34134:	stmiacc	r3!, {r0, r3, r4, r5, r9, sl, fp, pc}^
   34138:	andeq	r6, r5, r0, ror #5
   3413c:	andeq	r6, r5, r4, lsl r8
   34140:	andeq	r5, r4, r0, ror #3
   34144:	push	{r4, r5, r6, r7, r8, lr}
   34148:	sub	sp, sp, #88	; 0x58
   3414c:	cmn	r2, #-1073741823	; 0xc0000001
   34150:	bhi	34304 <flatcc_builder_default_alloc@@Base+0x538>
   34154:	ldrh	ip, [r0, #128]	; 0x80
   34158:	cmp	ip, #3
   3415c:	movls	ip, #4
   34160:	strhls	ip, [r0, #128]	; 0x80
   34164:	str	r2, [sp, #84]	; 0x54
   34168:	ldr	r7, [r0, #136]	; 0x88
   3416c:	and	lr, r7, #3
   34170:	mov	ip, #4
   34174:	str	ip, [sp, #12]
   34178:	add	r4, sp, #84	; 0x54
   3417c:	str	r4, [sp, #20]
   34180:	str	ip, [sp, #24]
   34184:	mov	ip, #1
   34188:	str	ip, [sp, #16]
   3418c:	lsls	r5, r2, #2
   34190:	beq	341ac <flatcc_builder_default_alloc@@Base+0x3e0>
   34194:	add	ip, r5, #4
   34198:	str	ip, [sp, #12]
   3419c:	str	r1, [sp, #28]
   341a0:	str	r5, [sp, #32]
   341a4:	mov	ip, #2
   341a8:	str	ip, [sp, #16]
   341ac:	cmp	lr, #0
   341b0:	beq	341e0 <flatcc_builder_default_alloc@@Base+0x414>
   341b4:	ldr	ip, [sp, #12]
   341b8:	add	ip, ip, lr
   341bc:	str	ip, [sp, #12]
   341c0:	ldr	ip, [sp, #16]
   341c4:	add	ip, ip, #1
   341c8:	add	r4, sp, #88	; 0x58
   341cc:	add	r4, r4, ip, lsl #3
   341d0:	ldr	r6, [pc, #308]	; 3430c <flatcc_builder_default_alloc@@Base+0x540>
   341d4:	str	r6, [r4, #-76]	; 0xffffffb4
   341d8:	str	lr, [r4, #-72]	; 0xffffffb8
   341dc:	str	ip, [sp, #16]
   341e0:	mov	r6, r0
   341e4:	ldr	r8, [sp, #12]
   341e8:	sub	r7, r7, r8
   341ec:	cmp	r2, #0
   341f0:	beq	34298 <flatcc_builder_default_alloc@@Base+0x4cc>
   341f4:	mov	r2, r1
   341f8:	mov	ip, r3
   341fc:	add	r5, r1, r5
   34200:	mvn	r1, #3
   34204:	b	34230 <flatcc_builder_default_alloc@@Base+0x464>
   34208:	cmp	r3, #0
   3420c:	beq	34284 <flatcc_builder_default_alloc@@Base+0x4b8>
   34210:	ldrb	r0, [ip]
   34214:	cmp	r0, #0
   34218:	bne	34270 <flatcc_builder_default_alloc@@Base+0x4a4>
   3421c:	add	r2, r2, #4
   34220:	add	ip, ip, #1
   34224:	sub	r1, r1, #4
   34228:	cmp	r2, r5
   3422c:	beq	34298 <flatcc_builder_default_alloc@@Base+0x4cc>
   34230:	ldr	lr, [r2]
   34234:	cmp	lr, #0
   34238:	beq	34208 <flatcc_builder_default_alloc@@Base+0x43c>
   3423c:	sub	r4, r1, r7
   34240:	add	lr, r4, lr
   34244:	str	lr, [r2]
   34248:	cmp	r3, #0
   3424c:	beq	3421c <flatcc_builder_default_alloc@@Base+0x450>
   34250:	ldrb	r0, [ip]
   34254:	cmp	r0, #0
   34258:	bne	3421c <flatcc_builder_default_alloc@@Base+0x450>
   3425c:	ldr	r3, [pc, #172]	; 34310 <flatcc_builder_default_alloc@@Base+0x544>
   34260:	ldr	r2, [pc, #172]	; 34314 <flatcc_builder_default_alloc@@Base+0x548>
   34264:	ldr	r1, [pc, #172]	; 34318 <flatcc_builder_default_alloc@@Base+0x54c>
   34268:	ldr	r0, [pc, #172]	; 3431c <flatcc_builder_default_alloc@@Base+0x550>
   3426c:	bl	14148 <__assert_fail@plt>
   34270:	ldr	r3, [pc, #152]	; 34310 <flatcc_builder_default_alloc@@Base+0x544>
   34274:	ldr	r2, [pc, #164]	; 34320 <flatcc_builder_default_alloc@@Base+0x554>
   34278:	ldr	r1, [pc, #152]	; 34318 <flatcc_builder_default_alloc@@Base+0x54c>
   3427c:	ldr	r0, [pc, #160]	; 34324 <flatcc_builder_default_alloc@@Base+0x558>
   34280:	bl	14148 <__assert_fail@plt>
   34284:	ldr	r3, [pc, #132]	; 34310 <flatcc_builder_default_alloc@@Base+0x544>
   34288:	ldr	r2, [pc, #152]	; 34328 <flatcc_builder_default_alloc@@Base+0x55c>
   3428c:	ldr	r1, [pc, #132]	; 34318 <flatcc_builder_default_alloc@@Base+0x54c>
   34290:	ldr	r0, [pc, #148]	; 3432c <flatcc_builder_default_alloc@@Base+0x560>
   34294:	bl	14148 <__assert_fail@plt>
   34298:	ldr	r3, [r6, #136]	; 0x88
   3429c:	sub	r4, r3, r8
   342a0:	cmp	r3, r4
   342a4:	ble	342dc <flatcc_builder_default_alloc@@Base+0x510>
   342a8:	str	r8, [sp]
   342ac:	ldr	r5, [r6, #44]	; 0x2c
   342b0:	mov	r3, r4
   342b4:	ldr	r2, [sp, #16]
   342b8:	add	r1, sp, #20
   342bc:	ldr	r0, [r6, #36]	; 0x24
   342c0:	blx	r5
   342c4:	cmp	r0, #0
   342c8:	streq	r4, [r6, #136]	; 0x88
   342cc:	bne	342f0 <flatcc_builder_default_alloc@@Base+0x524>
   342d0:	mov	r0, r4
   342d4:	add	sp, sp, #88	; 0x58
   342d8:	pop	{r4, r5, r6, r7, r8, pc}
   342dc:	ldr	r3, [pc, #76]	; 34330 <flatcc_builder_default_alloc@@Base+0x564>
   342e0:	ldr	r2, [pc, #76]	; 34334 <flatcc_builder_default_alloc@@Base+0x568>
   342e4:	ldr	r1, [pc, #44]	; 34318 <flatcc_builder_default_alloc@@Base+0x54c>
   342e8:	ldr	r0, [pc, #60]	; 3432c <flatcc_builder_default_alloc@@Base+0x560>
   342ec:	bl	14148 <__assert_fail@plt>
   342f0:	ldr	r3, [pc, #56]	; 34330 <flatcc_builder_default_alloc@@Base+0x564>
   342f4:	ldr	r2, [pc, #60]	; 34338 <flatcc_builder_default_alloc@@Base+0x56c>
   342f8:	ldr	r1, [pc, #24]	; 34318 <flatcc_builder_default_alloc@@Base+0x54c>
   342fc:	ldr	r0, [pc, #40]	; 3432c <flatcc_builder_default_alloc@@Base+0x560>
   34300:	bl	14148 <__assert_fail@plt>
   34304:	mov	r4, #0
   34308:	b	342d0 <flatcc_builder_default_alloc@@Base+0x504>
   3430c:	andeq	r6, r5, r4, asr #1
   34310:	strdeq	r6, [r5], -r0
   34314:			; <UNDEFINED> instruction: 0x000005b1
   34318:	andeq	r6, r5, r4, lsl r8
   3431c:	andeq	r6, r5, ip, asr r8
   34320:			; <UNDEFINED> instruction: 0x000005b5
   34324:	andeq	r6, r5, ip, ror #16
   34328:			; <UNDEFINED> instruction: 0x000005b7
   3432c:	andeq	r5, r4, r0, ror #3
   34330:	andeq	r6, r5, r0, lsl r3
   34334:	andeq	r0, r0, r7, lsl #5
   34338:	andeq	r0, r0, fp, lsl #5

0003433c <flatcc_builder_flush_vtable_cache@@Base>:
   3433c:	ldr	r3, [r0, #116]	; 0x74
   34340:	cmp	r3, #0
   34344:	bxeq	lr
   34348:	push	{r4, lr}
   3434c:	mov	r4, r0
   34350:	ldr	r2, [r0, #96]	; 0x60
   34354:	mov	r1, #0
   34358:	ldr	r0, [r0, #92]	; 0x5c
   3435c:	bl	140ac <memset@plt>
   34360:	mov	r3, #16
   34364:	str	r3, [r4, #124]	; 0x7c
   34368:	mov	r3, #0
   3436c:	str	r3, [r4, #120]	; 0x78
   34370:	pop	{r4, pc}

00034374 <flatcc_builder_custom_init@@Base>:
   34374:	push	{r4, r5, r6, r7, r8, lr}
   34378:	mov	r4, r0
   3437c:	mov	r6, r1
   34380:	mov	r7, r2
   34384:	mov	r5, r3
   34388:	mov	r2, #232	; 0xe8
   3438c:	mov	r1, #0
   34390:	bl	140ac <memset@plt>
   34394:	cmp	r6, #0
   34398:	moveq	r3, #1
   3439c:	streq	r3, [r4, #184]	; 0xb8
   343a0:	addeq	r7, r4, #188	; 0xbc
   343a4:	ldreq	r6, [pc, #36]	; 343d0 <flatcc_builder_custom_init@@Base+0x5c>
   343a8:	ldr	r3, [pc, #36]	; 343d4 <flatcc_builder_custom_init@@Base+0x60>
   343ac:	cmp	r5, #0
   343b0:	moveq	r5, r3
   343b4:	ldr	r3, [sp, #24]
   343b8:	str	r3, [r4, #40]	; 0x28
   343bc:	str	r5, [r4, #48]	; 0x30
   343c0:	str	r7, [r4, #36]	; 0x24
   343c4:	str	r6, [r4, #44]	; 0x2c
   343c8:	mov	r0, #0
   343cc:	pop	{r4, r5, r6, r7, r8, pc}
   343d0:	andeq	r7, r3, ip, asr #30
   343d4:	andeq	r3, r3, ip, asr #27

000343d8 <flatcc_builder_init@@Base>:
   343d8:	push	{r4, lr}
   343dc:	mov	r4, r0
   343e0:	mov	r2, #232	; 0xe8
   343e4:	mov	r1, #0
   343e8:	bl	140ac <memset@plt>
   343ec:	mov	r3, #1
   343f0:	str	r3, [r4, #184]	; 0xb8
   343f4:	ldr	r3, [pc, #24]	; 34414 <flatcc_builder_init@@Base+0x3c>
   343f8:	str	r3, [r4, #48]	; 0x30
   343fc:	add	r3, r4, #188	; 0xbc
   34400:	str	r3, [r4, #36]	; 0x24
   34404:	ldr	r3, [pc, #12]	; 34418 <flatcc_builder_init@@Base+0x40>
   34408:	str	r3, [r4, #44]	; 0x2c
   3440c:	mov	r0, #0
   34410:	pop	{r4, pc}
   34414:	andeq	r3, r3, ip, asr #27
   34418:	andeq	r7, r3, ip, asr #30

0003441c <flatcc_builder_custom_reset@@Base>:
   3441c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   34420:	sub	sp, sp, #12
   34424:	mov	r6, r0
   34428:	mov	fp, r1
   3442c:	mov	r8, r2
   34430:	mov	r4, r0
   34434:	mov	r5, #0
   34438:	mov	r9, r5
   3443c:	mov	sl, #1
   34440:	b	34464 <flatcc_builder_custom_reset@@Base+0x48>
   34444:	ldr	r2, [r7, #56]	; 0x38
   34448:	mov	r1, r9
   3444c:	ldr	r0, [r7, #52]	; 0x34
   34450:	bl	140ac <memset@plt>
   34454:	add	r5, r5, #1
   34458:	add	r4, r4, #8
   3445c:	cmp	r5, #8
   34460:	beq	344cc <flatcc_builder_custom_reset@@Base+0xb0>
   34464:	add	r1, r4, #52	; 0x34
   34468:	mov	r7, r4
   3446c:	ldr	r3, [r4, #52]	; 0x34
   34470:	cmp	r3, #0
   34474:	beq	344ac <flatcc_builder_custom_reset@@Base+0x90>
   34478:	cmp	r5, #5
   3447c:	cmpne	r8, #0
   34480:	beq	34444 <flatcc_builder_custom_reset@@Base+0x28>
   34484:	str	r5, [sp]
   34488:	mov	r3, sl
   3448c:	mov	r2, sl
   34490:	ldr	r0, [r6, #40]	; 0x28
   34494:	ldr	ip, [r6, #48]	; 0x30
   34498:	blx	ip
   3449c:	cmp	r0, #0
   344a0:	beq	34444 <flatcc_builder_custom_reset@@Base+0x28>
   344a4:	mvn	r0, #0
   344a8:	b	34544 <flatcc_builder_custom_reset@@Base+0x128>
   344ac:	ldr	r3, [r4, #56]	; 0x38
   344b0:	cmp	r3, #0
   344b4:	beq	34454 <flatcc_builder_custom_reset@@Base+0x38>
   344b8:	ldr	r3, [pc, #156]	; 3455c <flatcc_builder_custom_reset@@Base+0x140>
   344bc:	ldr	r2, [pc, #156]	; 34560 <flatcc_builder_custom_reset@@Base+0x144>
   344c0:	ldr	r1, [pc, #156]	; 34564 <flatcc_builder_custom_reset@@Base+0x148>
   344c4:	ldr	r0, [pc, #156]	; 34568 <flatcc_builder_custom_reset@@Base+0x14c>
   344c8:	bl	14148 <__assert_fail@plt>
   344cc:	mov	r3, #0
   344d0:	str	r3, [r6, #120]	; 0x78
   344d4:	ldr	r3, [r6, #124]	; 0x7c
   344d8:	cmp	r3, #0
   344dc:	movne	r3, #16
   344e0:	strne	r3, [r6, #124]	; 0x7c
   344e4:	mov	r3, #0
   344e8:	strh	r3, [r6, #128]	; 0x80
   344ec:	str	r3, [r6, #136]	; 0x88
   344f0:	str	r3, [r6, #140]	; 0x8c
   344f4:	str	r3, [r6, #156]	; 0x9c
   344f8:	str	r3, [r6, #160]	; 0xa0
   344fc:	str	r3, [r6, #20]
   34500:	str	r3, [r6, #24]
   34504:	str	r3, [r6, #148]	; 0x94
   34508:	str	r3, [r6, #152]	; 0x98
   3450c:	ldr	r2, [r6, #60]	; 0x3c
   34510:	str	r2, [r6, #16]
   34514:	ldr	r2, [r6, #76]	; 0x4c
   34518:	str	r2, [r6]
   3451c:	ldr	r2, [r6, #52]	; 0x34
   34520:	str	r2, [r6, #4]
   34524:	str	r3, [r6, #32]
   34528:	cmp	fp, r3
   3452c:	strne	r3, [r6, #172]	; 0xac
   34530:	strne	r3, [r6, #176]	; 0xb0
   34534:	strne	r3, [r6, #180]	; 0xb4
   34538:	ldr	r0, [r6, #184]	; 0xb8
   3453c:	cmp	r0, #0
   34540:	bne	3454c <flatcc_builder_custom_reset@@Base+0x130>
   34544:	add	sp, sp, #12
   34548:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3454c:	add	r0, r6, #188	; 0xbc
   34550:	bl	37e14 <flatcc_emitter_reset@@Base>
   34554:	mov	r0, #0
   34558:	b	34544 <flatcc_builder_custom_reset@@Base+0x128>
   3455c:	andeq	r6, r5, ip, lsl r3
   34560:			; <UNDEFINED> instruction: 0x000001b2
   34564:	andeq	r6, r5, r4, lsl r8
   34568:	andeq	r6, r5, ip, ror r8

0003456c <flatcc_builder_reset@@Base>:
   3456c:	push	{r4, lr}
   34570:	mov	r2, #0
   34574:	mov	r1, r2
   34578:	bl	3441c <flatcc_builder_custom_reset@@Base>
   3457c:	pop	{r4, pc}

00034580 <flatcc_builder_clear@@Base>:
   34580:	push	{r4, r5, r6, r7, r8, lr}
   34584:	sub	sp, sp, #8
   34588:	mov	r6, r0
   3458c:	add	r5, r0, #52	; 0x34
   34590:	mov	r4, #0
   34594:	mov	r8, r4
   34598:	str	r4, [sp]
   3459c:	ldr	r7, [r6, #48]	; 0x30
   345a0:	mov	r3, r8
   345a4:	mov	r2, r8
   345a8:	mov	r1, r5
   345ac:	ldr	r0, [r6, #40]	; 0x28
   345b0:	blx	r7
   345b4:	add	r4, r4, #1
   345b8:	add	r5, r5, #8
   345bc:	cmp	r4, #8
   345c0:	bne	34598 <flatcc_builder_clear@@Base+0x18>
   345c4:	ldr	r3, [r6, #184]	; 0xb8
   345c8:	cmp	r3, #0
   345cc:	bne	345e8 <flatcc_builder_clear@@Base+0x68>
   345d0:	mov	r2, #232	; 0xe8
   345d4:	mov	r1, #0
   345d8:	mov	r0, r6
   345dc:	bl	140ac <memset@plt>
   345e0:	add	sp, sp, #8
   345e4:	pop	{r4, r5, r6, r7, r8, pc}
   345e8:	add	r0, r6, #188	; 0xbc
   345ec:	bl	37ee4 <flatcc_emitter_clear@@Base>
   345f0:	b	345d0 <flatcc_builder_clear@@Base+0x50>

000345f4 <flatcc_builder_enter_user_frame_ptr@@Base>:
   345f4:	push	{r4, r5, r6, r7, r8, lr}
   345f8:	sub	sp, sp, #8
   345fc:	mov	r7, r0
   34600:	add	r4, r1, #3
   34604:	bic	r4, r4, #3
   34608:	add	r4, r4, #4
   3460c:	ldr	r5, [r0, #228]	; 0xe4
   34610:	add	r2, r4, r5
   34614:	ldr	r3, [r0, #112]	; 0x70
   34618:	cmp	r2, r3
   3461c:	bhi	34664 <flatcc_builder_enter_user_frame_ptr@@Base+0x70>
   34620:	ldr	r8, [r7, #108]	; 0x6c
   34624:	adds	r6, r8, r5
   34628:	beq	3469c <flatcc_builder_enter_user_frame_ptr@@Base+0xa8>
   3462c:	mov	r2, r4
   34630:	mov	r1, #0
   34634:	mov	r0, r6
   34638:	bl	140ac <memset@plt>
   3463c:	ldr	r3, [r7, #224]	; 0xe0
   34640:	str	r3, [r8, r5]
   34644:	ldr	r1, [r7, #228]	; 0xe4
   34648:	add	r3, r1, #4
   3464c:	str	r3, [r7, #224]	; 0xe0
   34650:	add	r4, r4, r1
   34654:	str	r4, [r7, #228]	; 0xe4
   34658:	add	r0, r6, #4
   3465c:	add	sp, sp, #8
   34660:	pop	{r4, r5, r6, r7, r8, pc}
   34664:	mov	r3, #7
   34668:	str	r3, [sp]
   3466c:	ldr	r6, [r0, #48]	; 0x30
   34670:	mov	r3, #0
   34674:	add	r1, r0, #108	; 0x6c
   34678:	ldr	r0, [r0, #40]	; 0x28
   3467c:	blx	r6
   34680:	cmp	r0, #0
   34684:	beq	34620 <flatcc_builder_enter_user_frame_ptr@@Base+0x2c>
   34688:	ldr	r3, [pc, #20]	; 346a4 <flatcc_builder_enter_user_frame_ptr@@Base+0xb0>
   3468c:	mov	r2, #308	; 0x134
   34690:	ldr	r1, [pc, #16]	; 346a8 <flatcc_builder_enter_user_frame_ptr@@Base+0xb4>
   34694:	ldr	r0, [pc, #16]	; 346ac <flatcc_builder_enter_user_frame_ptr@@Base+0xb8>
   34698:	bl	14148 <__assert_fail@plt>
   3469c:	mov	r0, #0
   346a0:	b	3465c <flatcc_builder_enter_user_frame_ptr@@Base+0x68>
   346a4:	andeq	r6, r5, r0, ror #5
   346a8:	andeq	r6, r5, r4, lsl r8
   346ac:	andeq	r5, r4, r0, ror #3

000346b0 <flatcc_builder_enter_user_frame@@Base>:
   346b0:	push	{r4, r5, r6, r7, lr}
   346b4:	sub	sp, sp, #12
   346b8:	mov	r6, r0
   346bc:	add	r4, r1, #3
   346c0:	bic	r4, r4, #3
   346c4:	add	r4, r4, #4
   346c8:	ldr	r5, [r0, #228]	; 0xe4
   346cc:	add	r2, r4, r5
   346d0:	ldr	r3, [r0, #112]	; 0x70
   346d4:	cmp	r2, r3
   346d8:	bhi	3471c <flatcc_builder_enter_user_frame@@Base+0x6c>
   346dc:	ldr	r7, [r6, #108]	; 0x6c
   346e0:	adds	r0, r7, r5
   346e4:	moveq	r0, #0
   346e8:	beq	34714 <flatcc_builder_enter_user_frame@@Base+0x64>
   346ec:	mov	r2, r4
   346f0:	mov	r1, #0
   346f4:	bl	140ac <memset@plt>
   346f8:	ldr	r3, [r6, #224]	; 0xe0
   346fc:	str	r3, [r7, r5]
   34700:	ldr	r1, [r6, #228]	; 0xe4
   34704:	add	r0, r1, #4
   34708:	str	r0, [r6, #224]	; 0xe0
   3470c:	add	r4, r4, r1
   34710:	str	r4, [r6, #228]	; 0xe4
   34714:	add	sp, sp, #12
   34718:	pop	{r4, r5, r6, r7, pc}
   3471c:	mov	r3, #7
   34720:	str	r3, [sp]
   34724:	ldr	r7, [r0, #48]	; 0x30
   34728:	mov	r3, #0
   3472c:	add	r1, r0, #108	; 0x6c
   34730:	ldr	r0, [r0, #40]	; 0x28
   34734:	blx	r7
   34738:	cmp	r0, #0
   3473c:	beq	346dc <flatcc_builder_enter_user_frame@@Base+0x2c>
   34740:	ldr	r3, [pc, #12]	; 34754 <flatcc_builder_enter_user_frame@@Base+0xa4>
   34744:	mov	r2, #308	; 0x134
   34748:	ldr	r1, [pc, #8]	; 34758 <flatcc_builder_enter_user_frame@@Base+0xa8>
   3474c:	ldr	r0, [pc, #8]	; 3475c <flatcc_builder_enter_user_frame@@Base+0xac>
   34750:	bl	14148 <__assert_fail@plt>
   34754:	andeq	r6, r5, r0, ror #5
   34758:	andeq	r6, r5, r4, lsl r8
   3475c:	andeq	r5, r4, r0, ror #3

00034760 <flatcc_builder_exit_user_frame@@Base>:
   34760:	ldr	r3, [r0, #224]	; 0xe0
   34764:	cmp	r3, #0
   34768:	beq	3478c <flatcc_builder_exit_user_frame@@Base+0x2c>
   3476c:	ldr	r2, [r0, #108]	; 0x6c
   34770:	add	r2, r2, r3
   34774:	sub	r3, r3, #4
   34778:	str	r3, [r0, #228]	; 0xe4
   3477c:	ldr	r3, [r2, #-4]
   34780:	str	r3, [r0, #224]	; 0xe0
   34784:	mov	r0, r3
   34788:	bx	lr
   3478c:	push	{r4, lr}
   34790:	ldr	r3, [pc, #12]	; 347a4 <flatcc_builder_exit_user_frame@@Base+0x44>
   34794:	ldr	r2, [pc, #12]	; 347a8 <flatcc_builder_exit_user_frame@@Base+0x48>
   34798:	ldr	r1, [pc, #12]	; 347ac <flatcc_builder_exit_user_frame@@Base+0x4c>
   3479c:	ldr	r0, [pc, #12]	; 347b0 <flatcc_builder_exit_user_frame@@Base+0x50>
   347a0:	bl	14148 <__assert_fail@plt>
   347a4:	andeq	r6, r5, r8, lsr r3
   347a8:	andeq	r0, r0, lr, lsl r2
   347ac:	andeq	r6, r5, r4, lsl r8
   347b0:	muleq	r5, r0, r8

000347b4 <flatcc_builder_exit_user_frame_at@@Base>:
   347b4:	push	{r4, lr}
   347b8:	ldr	r3, [r0, #224]	; 0xe0
   347bc:	cmp	r3, r1
   347c0:	bcc	347d0 <flatcc_builder_exit_user_frame_at@@Base+0x1c>
   347c4:	str	r1, [r0, #224]	; 0xe0
   347c8:	bl	34760 <flatcc_builder_exit_user_frame@@Base>
   347cc:	pop	{r4, pc}
   347d0:	ldr	r3, [pc, #12]	; 347e4 <flatcc_builder_exit_user_frame_at@@Base+0x30>
   347d4:	ldr	r2, [pc, #12]	; 347e8 <flatcc_builder_exit_user_frame_at@@Base+0x34>
   347d8:	ldr	r1, [pc, #12]	; 347ec <flatcc_builder_exit_user_frame_at@@Base+0x38>
   347dc:	ldr	r0, [pc, #12]	; 347f0 <flatcc_builder_exit_user_frame_at@@Base+0x3c>
   347e0:	bl	14148 <__assert_fail@plt>
   347e4:	andeq	r6, r5, r8, asr r3
   347e8:	andeq	r0, r0, r7, lsr #4
   347ec:	andeq	r6, r5, r4, lsl r8
   347f0:	andeq	r6, r5, ip, lsr #17

000347f4 <flatcc_builder_get_current_user_frame@@Base>:
   347f4:	ldr	r0, [r0, #224]	; 0xe0
   347f8:	bx	lr

000347fc <flatcc_builder_get_user_frame_ptr@@Base>:
   347fc:	ldr	r0, [r0, #108]	; 0x6c
   34800:	add	r0, r0, r1
   34804:	bx	lr

00034808 <flatcc_builder_embed_buffer@@Base>:
   34808:	push	{r4, r5, r6, lr}
   3480c:	sub	sp, sp, #88	; 0x58
   34810:	mov	r4, r0
   34814:	mov	r6, r2
   34818:	mov	r5, r3
   3481c:	ldr	r3, [r0, #152]	; 0x98
   34820:	adds	r3, r3, #0
   34824:	movne	r3, #1
   34828:	mov	r2, r1
   3482c:	add	r1, sp, #104	; 0x68
   34830:	bl	33ee0 <flatcc_builder_default_alloc@@Base+0x114>
   34834:	cmp	r0, #0
   34838:	bne	34974 <flatcc_builder_embed_buffer@@Base+0x16c>
   3483c:	ldr	r3, [sp, #108]	; 0x6c
   34840:	and	r3, r3, #2
   34844:	cmp	r3, #0
   34848:	movne	r3, #4
   3484c:	moveq	r3, #0
   34850:	ldr	r1, [r4, #136]	; 0x88
   34854:	sub	r2, r1, r5
   34858:	sub	r3, r2, r3
   3485c:	ldrh	r2, [sp, #104]	; 0x68
   34860:	sub	r2, r2, #1
   34864:	and	r3, r3, r2
   34868:	add	r2, r5, r3
   3486c:	str	r2, [sp, #84]	; 0x54
   34870:	mov	r2, #0
   34874:	str	r2, [sp, #12]
   34878:	str	r2, [sp, #16]
   3487c:	ldr	r2, [r4, #152]	; 0x98
   34880:	cmp	r2, #0
   34884:	beq	348a4 <flatcc_builder_embed_buffer@@Base+0x9c>
   34888:	mov	r2, #4
   3488c:	str	r2, [sp, #12]
   34890:	add	r0, sp, #84	; 0x54
   34894:	str	r0, [sp, #20]
   34898:	str	r2, [sp, #24]
   3489c:	mov	r2, #1
   348a0:	str	r2, [sp, #16]
   348a4:	cmp	r5, #0
   348a8:	beq	348d4 <flatcc_builder_embed_buffer@@Base+0xcc>
   348ac:	ldr	r2, [sp, #12]
   348b0:	add	r2, r2, r5
   348b4:	str	r2, [sp, #12]
   348b8:	ldr	r2, [sp, #16]
   348bc:	add	r2, r2, #1
   348c0:	add	r0, sp, #88	; 0x58
   348c4:	add	r0, r0, r2, lsl #3
   348c8:	str	r6, [r0, #-76]	; 0xffffffb4
   348cc:	str	r5, [r0, #-72]	; 0xffffffb8
   348d0:	str	r2, [sp, #16]
   348d4:	cmp	r3, #0
   348d8:	beq	34908 <flatcc_builder_embed_buffer@@Base+0x100>
   348dc:	ldr	r2, [sp, #12]
   348e0:	add	r2, r2, r3
   348e4:	str	r2, [sp, #12]
   348e8:	ldr	r2, [sp, #16]
   348ec:	add	r2, r2, #1
   348f0:	add	r0, sp, #88	; 0x58
   348f4:	add	r0, r0, r2, lsl #3
   348f8:	ldr	ip, [pc, #124]	; 3497c <flatcc_builder_embed_buffer@@Base+0x174>
   348fc:	str	ip, [r0, #-76]	; 0xffffffb4
   34900:	str	r3, [r0, #-72]	; 0xffffffb8
   34904:	str	r2, [sp, #16]
   34908:	ldr	r3, [sp, #12]
   3490c:	sub	r5, r1, r3
   34910:	cmp	r1, r5
   34914:	ble	3494c <flatcc_builder_embed_buffer@@Base+0x144>
   34918:	str	r3, [sp]
   3491c:	ldr	r6, [r4, #44]	; 0x2c
   34920:	mov	r3, r5
   34924:	ldr	r2, [sp, #16]
   34928:	add	r1, sp, #20
   3492c:	ldr	r0, [r4, #36]	; 0x24
   34930:	blx	r6
   34934:	cmp	r0, #0
   34938:	streq	r5, [r4, #136]	; 0x88
   3493c:	bne	34960 <flatcc_builder_embed_buffer@@Base+0x158>
   34940:	mov	r0, r5
   34944:	add	sp, sp, #88	; 0x58
   34948:	pop	{r4, r5, r6, pc}
   3494c:	ldr	r3, [pc, #44]	; 34980 <flatcc_builder_embed_buffer@@Base+0x178>
   34950:	ldr	r2, [pc, #44]	; 34984 <flatcc_builder_embed_buffer@@Base+0x17c>
   34954:	ldr	r1, [pc, #44]	; 34988 <flatcc_builder_embed_buffer@@Base+0x180>
   34958:	ldr	r0, [pc, #44]	; 3498c <flatcc_builder_embed_buffer@@Base+0x184>
   3495c:	bl	14148 <__assert_fail@plt>
   34960:	ldr	r3, [pc, #24]	; 34980 <flatcc_builder_embed_buffer@@Base+0x178>
   34964:	ldr	r2, [pc, #36]	; 34990 <flatcc_builder_embed_buffer@@Base+0x188>
   34968:	ldr	r1, [pc, #24]	; 34988 <flatcc_builder_embed_buffer@@Base+0x180>
   3496c:	ldr	r0, [pc, #24]	; 3498c <flatcc_builder_embed_buffer@@Base+0x184>
   34970:	bl	14148 <__assert_fail@plt>
   34974:	mov	r5, #0
   34978:	b	34940 <flatcc_builder_embed_buffer@@Base+0x138>
   3497c:	andeq	r6, r5, r4, asr #1
   34980:	andeq	r6, r5, r0, lsl r3
   34984:	andeq	r0, r0, r7, lsl #5
   34988:	andeq	r6, r5, r4, lsl r8
   3498c:	andeq	r5, r4, r0, ror #3
   34990:	andeq	r0, r0, fp, lsl #5

00034994 <flatcc_builder_create_buffer@@Base>:
   34994:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   34998:	sub	sp, sp, #96	; 0x60
   3499c:	mov	r5, r0
   349a0:	mov	r9, r1
   349a4:	mov	r6, r3
   349a8:	ldr	r8, [sp, #132]	; 0x84
   349ac:	mov	r3, #0
   349b0:	str	r3, [sp, #12]
   349b4:	and	r4, r8, #1
   349b8:	uxtb	r7, r4
   349bc:	mov	r3, r7
   349c0:	add	r1, sp, #128	; 0x80
   349c4:	bl	33ee0 <flatcc_builder_default_alloc@@Base+0x114>
   349c8:	cmp	r0, #0
   349cc:	bne	34b70 <flatcc_builder_create_buffer@@Base+0x1dc>
   349d0:	ldrh	r0, [sp, #128]	; 0x80
   349d4:	ldrh	r3, [r5, #128]	; 0x80
   349d8:	cmp	r3, r0
   349dc:	strhcc	r0, [r5, #128]	; 0x80
   349e0:	cmp	r9, #0
   349e4:	ldrne	r3, [r9]
   349e8:	strne	r3, [sp, #12]
   349ec:	ldr	r1, [sp, #12]
   349f0:	cmp	r1, #0
   349f4:	movne	r1, #4
   349f8:	moveq	r1, #0
   349fc:	tst	r8, #2
   34a00:	bne	34b78 <flatcc_builder_create_buffer@@Base+0x1e4>
   34a04:	ldr	ip, [r5, #136]	; 0x88
   34a08:	mov	r2, ip
   34a0c:	sub	r3, ip, #4
   34a10:	sub	r3, r3, r1
   34a14:	sub	r0, r0, #1
   34a18:	and	r3, r3, r0
   34a1c:	mov	r0, #0
   34a20:	str	r0, [sp, #16]
   34a24:	str	r0, [sp, #20]
   34a28:	cmp	r4, r0
   34a2c:	bne	34b94 <flatcc_builder_create_buffer@@Base+0x200>
   34a30:	ldr	lr, [sp, #16]
   34a34:	add	lr, lr, #4
   34a38:	str	lr, [sp, #16]
   34a3c:	ldr	r8, [sp, #20]
   34a40:	add	r0, r8, #1
   34a44:	add	r9, sp, #96	; 0x60
   34a48:	add	r9, r9, r0, lsl #3
   34a4c:	add	sl, sp, #92	; 0x5c
   34a50:	str	sl, [r9, #-80]	; 0xffffffb0
   34a54:	mov	sl, #4
   34a58:	str	sl, [r9, #-76]	; 0xffffffb4
   34a5c:	str	r0, [sp, #20]
   34a60:	cmp	r1, #0
   34a64:	beq	34a90 <flatcc_builder_create_buffer@@Base+0xfc>
   34a68:	add	lr, r1, lr
   34a6c:	str	lr, [sp, #16]
   34a70:	add	r0, r8, #2
   34a74:	add	lr, sp, #96	; 0x60
   34a78:	add	r0, lr, r0, lsl #3
   34a7c:	add	lr, sp, #12
   34a80:	str	lr, [r0, #-80]	; 0xffffffb0
   34a84:	str	r1, [r0, #-76]	; 0xffffffb4
   34a88:	add	r8, r8, #2
   34a8c:	str	r8, [sp, #20]
   34a90:	cmp	r3, #0
   34a94:	beq	34ac4 <flatcc_builder_create_buffer@@Base+0x130>
   34a98:	ldr	r1, [sp, #16]
   34a9c:	add	r1, r1, r3
   34aa0:	str	r1, [sp, #16]
   34aa4:	ldr	r1, [sp, #20]
   34aa8:	add	r1, r1, #1
   34aac:	add	r0, sp, #96	; 0x60
   34ab0:	add	r0, r0, r1, lsl #3
   34ab4:	ldr	lr, [pc, #248]	; 34bb4 <flatcc_builder_create_buffer@@Base+0x220>
   34ab8:	str	lr, [r0, #-80]	; 0xffffffb0
   34abc:	str	r3, [r0, #-76]	; 0xffffffb4
   34ac0:	str	r1, [sp, #20]
   34ac4:	ldr	r1, [sp, #16]
   34ac8:	sub	r3, r2, r1
   34acc:	add	r3, r3, r7, lsl #2
   34ad0:	cmp	r4, #0
   34ad4:	ldrne	r2, [r5, #144]	; 0x90
   34ad8:	ldreq	r2, [r5, #140]	; 0x8c
   34adc:	sub	r2, r2, r3
   34ae0:	str	r2, [sp, #88]	; 0x58
   34ae4:	sub	r3, r6, r3
   34ae8:	str	r3, [sp, #92]	; 0x5c
   34aec:	sub	r4, ip, r1
   34af0:	cmp	r4, ip
   34af4:	bge	34b34 <flatcc_builder_create_buffer@@Base+0x1a0>
   34af8:	str	r1, [sp]
   34afc:	ldr	r6, [r5, #44]	; 0x2c
   34b00:	mov	r3, r4
   34b04:	ldr	r2, [sp, #20]
   34b08:	add	r1, sp, #24
   34b0c:	ldr	r0, [r5, #36]	; 0x24
   34b10:	blx	r6
   34b14:	cmp	r0, #0
   34b18:	bne	34b48 <flatcc_builder_create_buffer@@Base+0x1b4>
   34b1c:	str	r4, [r5, #136]	; 0x88
   34b20:	cmp	r4, #0
   34b24:	beq	34b5c <flatcc_builder_create_buffer@@Base+0x1c8>
   34b28:	mov	r0, r4
   34b2c:	add	sp, sp, #96	; 0x60
   34b30:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   34b34:	ldr	r3, [pc, #124]	; 34bb8 <flatcc_builder_create_buffer@@Base+0x224>
   34b38:	ldr	r2, [pc, #124]	; 34bbc <flatcc_builder_create_buffer@@Base+0x228>
   34b3c:	ldr	r1, [pc, #124]	; 34bc0 <flatcc_builder_create_buffer@@Base+0x22c>
   34b40:	ldr	r0, [pc, #124]	; 34bc4 <flatcc_builder_create_buffer@@Base+0x230>
   34b44:	bl	14148 <__assert_fail@plt>
   34b48:	ldr	r3, [pc, #104]	; 34bb8 <flatcc_builder_create_buffer@@Base+0x224>
   34b4c:	ldr	r2, [pc, #116]	; 34bc8 <flatcc_builder_create_buffer@@Base+0x234>
   34b50:	ldr	r1, [pc, #104]	; 34bc0 <flatcc_builder_create_buffer@@Base+0x22c>
   34b54:	ldr	r0, [pc, #104]	; 34bc4 <flatcc_builder_create_buffer@@Base+0x230>
   34b58:	bl	14148 <__assert_fail@plt>
   34b5c:	ldr	r3, [pc, #104]	; 34bcc <flatcc_builder_create_buffer@@Base+0x238>
   34b60:	mov	r2, #772	; 0x304
   34b64:	ldr	r1, [pc, #84]	; 34bc0 <flatcc_builder_create_buffer@@Base+0x22c>
   34b68:	ldr	r0, [pc, #84]	; 34bc4 <flatcc_builder_create_buffer@@Base+0x230>
   34b6c:	bl	14148 <__assert_fail@plt>
   34b70:	mov	r4, #0
   34b74:	b	34b28 <flatcc_builder_create_buffer@@Base+0x194>
   34b78:	ldr	ip, [r5, #136]	; 0x88
   34b7c:	mov	r2, ip
   34b80:	sub	r3, ip, #8
   34b84:	sub	r3, r3, r1
   34b88:	sub	r0, r0, #1
   34b8c:	and	r3, r3, r0
   34b90:	mov	r7, #1
   34b94:	mov	r0, #4
   34b98:	str	r0, [sp, #16]
   34b9c:	add	lr, sp, #88	; 0x58
   34ba0:	str	lr, [sp, #24]
   34ba4:	str	r0, [sp, #28]
   34ba8:	mov	r0, #1
   34bac:	str	r0, [sp, #20]
   34bb0:	b	34a30 <flatcc_builder_create_buffer@@Base+0x9c>
   34bb4:	andeq	r6, r5, r4, asr #1
   34bb8:	andeq	r6, r5, r0, lsl r3
   34bbc:	andeq	r0, r0, r7, lsl #5
   34bc0:	andeq	r6, r5, r4, lsl r8
   34bc4:	andeq	r5, r4, r0, ror #3
   34bc8:	andeq	r0, r0, fp, lsl #5
   34bcc:	andeq	r6, r5, ip, ror r3

00034bd0 <flatcc_builder_create_struct@@Base>:
   34bd0:	push	{r4, r5, r6, lr}
   34bd4:	sub	sp, sp, #80	; 0x50
   34bd8:	cmp	r3, #0
   34bdc:	beq	34c34 <flatcc_builder_create_struct@@Base+0x64>
   34be0:	mov	r4, r0
   34be4:	ldrh	r0, [r0, #128]	; 0x80
   34be8:	cmp	r0, r3
   34bec:	strhcc	r3, [r4, #128]	; 0x80
   34bf0:	ldr	ip, [r4, #136]	; 0x88
   34bf4:	sub	r0, ip, r2
   34bf8:	sub	r3, r3, #1
   34bfc:	and	r3, r3, r0
   34c00:	mov	r0, #0
   34c04:	str	r0, [sp, #8]
   34c08:	str	r0, [sp, #12]
   34c0c:	cmp	r2, r0
   34c10:	beq	34c70 <flatcc_builder_create_struct@@Base+0xa0>
   34c14:	str	r2, [sp, #8]
   34c18:	str	r1, [sp, #16]
   34c1c:	str	r2, [sp, #20]
   34c20:	mov	r2, #1
   34c24:	str	r2, [sp, #12]
   34c28:	cmp	r3, r0
   34c2c:	beq	34ca4 <flatcc_builder_create_struct@@Base+0xd4>
   34c30:	b	34c78 <flatcc_builder_create_struct@@Base+0xa8>
   34c34:	ldr	r3, [pc, #172]	; 34ce8 <flatcc_builder_create_struct@@Base+0x118>
   34c38:	ldr	r2, [pc, #172]	; 34cec <flatcc_builder_create_struct@@Base+0x11c>
   34c3c:	ldr	r1, [pc, #172]	; 34cf0 <flatcc_builder_create_struct@@Base+0x120>
   34c40:	ldr	r0, [pc, #172]	; 34cf4 <flatcc_builder_create_struct@@Base+0x124>
   34c44:	bl	14148 <__assert_fail@plt>
   34c48:	ldr	r3, [pc, #168]	; 34cf8 <flatcc_builder_create_struct@@Base+0x128>
   34c4c:	ldr	r2, [pc, #168]	; 34cfc <flatcc_builder_create_struct@@Base+0x12c>
   34c50:	ldr	r1, [pc, #152]	; 34cf0 <flatcc_builder_create_struct@@Base+0x120>
   34c54:	ldr	r0, [pc, #164]	; 34d00 <flatcc_builder_create_struct@@Base+0x130>
   34c58:	bl	14148 <__assert_fail@plt>
   34c5c:	ldr	r3, [pc, #148]	; 34cf8 <flatcc_builder_create_struct@@Base+0x128>
   34c60:	ldr	r2, [pc, #156]	; 34d04 <flatcc_builder_create_struct@@Base+0x134>
   34c64:	ldr	r1, [pc, #132]	; 34cf0 <flatcc_builder_create_struct@@Base+0x120>
   34c68:	ldr	r0, [pc, #144]	; 34d00 <flatcc_builder_create_struct@@Base+0x130>
   34c6c:	bl	14148 <__assert_fail@plt>
   34c70:	cmp	r3, #0
   34c74:	beq	34c48 <flatcc_builder_create_struct@@Base+0x78>
   34c78:	ldr	r2, [sp, #8]
   34c7c:	add	r2, r2, r3
   34c80:	str	r2, [sp, #8]
   34c84:	ldr	r2, [sp, #12]
   34c88:	add	r2, r2, #1
   34c8c:	add	r1, sp, #80	; 0x50
   34c90:	add	r1, r1, r2, lsl #3
   34c94:	ldr	r0, [pc, #108]	; 34d08 <flatcc_builder_create_struct@@Base+0x138>
   34c98:	str	r0, [r1, #-72]	; 0xffffffb8
   34c9c:	str	r3, [r1, #-68]	; 0xffffffbc
   34ca0:	str	r2, [sp, #12]
   34ca4:	ldr	r3, [sp, #8]
   34ca8:	sub	r5, ip, r3
   34cac:	cmp	ip, r5
   34cb0:	ble	34c48 <flatcc_builder_create_struct@@Base+0x78>
   34cb4:	str	r3, [sp]
   34cb8:	ldr	r6, [r4, #44]	; 0x2c
   34cbc:	mov	r3, r5
   34cc0:	ldr	r2, [sp, #12]
   34cc4:	add	r1, sp, #16
   34cc8:	ldr	r0, [r4, #36]	; 0x24
   34ccc:	blx	r6
   34cd0:	cmp	r0, #0
   34cd4:	bne	34c5c <flatcc_builder_create_struct@@Base+0x8c>
   34cd8:	str	r5, [r4, #136]	; 0x88
   34cdc:	mov	r0, r5
   34ce0:	add	sp, sp, #80	; 0x50
   34ce4:	pop	{r4, r5, r6, pc}
   34ce8:	muleq	r5, ip, r3
   34cec:	andeq	r0, r0, pc, lsl #6
   34cf0:	andeq	r6, r5, r4, lsl r8
   34cf4:	andeq	r6, r5, ip, asr #17
   34cf8:	andeq	r6, r5, r0, lsl r3
   34cfc:	andeq	r0, r0, r7, lsl #5
   34d00:	andeq	r5, r4, r0, ror #3
   34d04:	andeq	r0, r0, fp, lsl #5
   34d08:	andeq	r6, r5, r4, asr #1

00034d0c <flatcc_builder_start_buffer@@Base>:
   34d0c:	push	{r4, r5, r6, r7, r8, lr}
   34d10:	mov	r4, r0
   34d14:	mov	r5, r1
   34d18:	mov	r7, r2
   34d1c:	mov	r6, r3
   34d20:	ldrh	r1, [r0, #128]	; 0x80
   34d24:	bl	33ff8 <flatcc_builder_default_alloc@@Base+0x22c>
   34d28:	cmp	r0, #0
   34d2c:	bne	34db8 <flatcc_builder_start_buffer@@Base+0xac>
   34d30:	mov	r3, #1
   34d34:	strh	r3, [r4, #128]	; 0x80
   34d38:	ldr	r3, [r4, #32]
   34d3c:	ldrh	r2, [r4, #132]	; 0x84
   34d40:	strh	r2, [r3, #34]	; 0x22
   34d44:	strh	r7, [r4, #132]	; 0x84
   34d48:	ldr	r3, [r4, #32]
   34d4c:	ldrh	r2, [r4, #164]	; 0xa4
   34d50:	strh	r2, [r3, #32]
   34d54:	strh	r6, [r4, #164]	; 0xa4
   34d58:	ldr	r3, [r4, #32]
   34d5c:	ldr	r2, [r4, #144]	; 0x90
   34d60:	str	r2, [r3, #20]
   34d64:	ldr	r3, [r4, #32]
   34d68:	ldr	r2, [r4, #152]	; 0x98
   34d6c:	str	r2, [r3, #28]
   34d70:	ldr	r3, [r4, #136]	; 0x88
   34d74:	str	r3, [r4, #144]	; 0x90
   34d78:	ldr	r3, [r4, #148]	; 0x94
   34d7c:	add	r2, r3, #1
   34d80:	str	r2, [r4, #148]	; 0x94
   34d84:	str	r3, [r4, #152]	; 0x98
   34d88:	ldr	r3, [r4, #32]
   34d8c:	ldr	r2, [r4, #168]	; 0xa8
   34d90:	str	r2, [r3, #16]
   34d94:	ldr	r3, [pc, #36]	; 34dc0 <flatcc_builder_start_buffer@@Base+0xb4>
   34d98:	cmp	r5, #0
   34d9c:	moveq	r5, r3
   34da0:	ldr	r3, [r5]
   34da4:	str	r3, [r4, #168]	; 0xa8
   34da8:	ldr	r3, [r4, #32]
   34dac:	mov	r2, #1
   34db0:	strh	r2, [r3, #14]
   34db4:	pop	{r4, r5, r6, r7, r8, pc}
   34db8:	mvn	r0, #0
   34dbc:	pop	{r4, r5, r6, r7, r8, pc}
   34dc0:	andeq	r6, r5, r4, asr #1

00034dc4 <flatcc_builder_end_buffer@@Base>:
   34dc4:	push	{r4, r5, lr}
   34dc8:	sub	sp, sp, #12
   34dcc:	mov	r4, r0
   34dd0:	ldrh	r2, [r0, #164]	; 0xa4
   34dd4:	and	r2, r2, #2
   34dd8:	ldr	r0, [r0, #152]	; 0x98
   34ddc:	cmp	r0, #0
   34de0:	moveq	r0, r2
   34de4:	orrne	r0, r2, #1
   34de8:	ldr	r2, [r4, #32]
   34dec:	ldrh	r2, [r2, #14]
   34df0:	cmp	r2, #1
   34df4:	bne	34e38 <flatcc_builder_end_buffer@@Base+0x74>
   34df8:	ldrh	r2, [r4, #132]	; 0x84
   34dfc:	ldrh	r3, [r4, #128]	; 0x80
   34e00:	cmp	r3, r2
   34e04:	strhcc	r2, [r4, #128]	; 0x80
   34e08:	str	r0, [sp, #4]
   34e0c:	ldrh	r3, [r4, #128]	; 0x80
   34e10:	str	r3, [sp]
   34e14:	mov	r3, r1
   34e18:	add	r1, r4, #168	; 0xa8
   34e1c:	mov	r0, r4
   34e20:	bl	34994 <flatcc_builder_create_buffer@@Base>
   34e24:	subs	r5, r0, #0
   34e28:	bne	34e4c <flatcc_builder_end_buffer@@Base+0x88>
   34e2c:	mov	r0, r5
   34e30:	add	sp, sp, #12
   34e34:	pop	{r4, r5, pc}
   34e38:	ldr	r3, [pc, #176]	; 34ef0 <flatcc_builder_end_buffer@@Base+0x12c>
   34e3c:	ldr	r2, [pc, #176]	; 34ef4 <flatcc_builder_end_buffer@@Base+0x130>
   34e40:	ldr	r1, [pc, #176]	; 34ef8 <flatcc_builder_end_buffer@@Base+0x134>
   34e44:	ldr	r0, [pc, #176]	; 34efc <flatcc_builder_end_buffer@@Base+0x138>
   34e48:	bl	14148 <__assert_fail@plt>
   34e4c:	ldr	r3, [r4, #32]
   34e50:	ldr	r2, [r3, #20]
   34e54:	str	r2, [r4, #144]	; 0x90
   34e58:	ldr	r2, [r3, #28]
   34e5c:	str	r2, [r4, #152]	; 0x98
   34e60:	ldr	r2, [r3, #16]
   34e64:	str	r2, [r4, #168]	; 0xa8
   34e68:	ldrh	r3, [r3, #32]
   34e6c:	strh	r3, [r4, #164]	; 0xa4
   34e70:	ldr	r2, [r4, #20]
   34e74:	mov	r1, #0
   34e78:	ldr	r0, [r4, #16]
   34e7c:	bl	140ac <memset@plt>
   34e80:	ldr	r2, [r4, #32]
   34e84:	ldr	r3, [r2, #8]
   34e88:	str	r3, [r4, #20]
   34e8c:	ldr	r0, [r2]
   34e90:	str	r0, [r4, #28]
   34e94:	ldr	r1, [r2, #4]
   34e98:	ldr	r3, [r4, #60]	; 0x3c
   34e9c:	add	r3, r3, r0
   34ea0:	str	r3, [r4, #16]
   34ea4:	ldr	r3, [r4, #64]	; 0x40
   34ea8:	sub	r3, r3, r0
   34eac:	cmp	r3, r1
   34eb0:	movcs	r3, r1
   34eb4:	str	r3, [r4, #24]
   34eb8:	str	r1, [r2, #4]
   34ebc:	ldrh	r3, [r4, #130]	; 0x82
   34ec0:	ldrh	r2, [r4, #128]	; 0x80
   34ec4:	cmp	r2, r3
   34ec8:	strhcc	r3, [r4, #128]	; 0x80
   34ecc:	ldr	r3, [r4, #32]
   34ed0:	ldrh	r2, [r3, #12]
   34ed4:	strh	r2, [r4, #130]	; 0x82
   34ed8:	sub	r3, r3, #36	; 0x24
   34edc:	str	r3, [r4, #32]
   34ee0:	ldr	r3, [r4, #156]	; 0x9c
   34ee4:	sub	r3, r3, #1
   34ee8:	str	r3, [r4, #156]	; 0x9c
   34eec:	b	34e2c <flatcc_builder_end_buffer@@Base+0x68>
   34ef0:			; <UNDEFINED> instruction: 0x000563bc
   34ef4:	andeq	r0, r0, r6, asr #6
   34ef8:	andeq	r6, r5, r4, lsl r8
   34efc:	ldrdeq	r6, [r5], -r8

00034f00 <flatcc_builder_start_struct@@Base>:
   34f00:	push	{r4, r5, r6, lr}
   34f04:	mov	r4, r0
   34f08:	mov	r5, r1
   34f0c:	mov	r1, r2
   34f10:	bl	33ff8 <flatcc_builder_default_alloc@@Base+0x22c>
   34f14:	cmp	r0, #0
   34f18:	bne	34f98 <flatcc_builder_start_struct@@Base+0x98>
   34f1c:	ldr	r3, [r4, #32]
   34f20:	mov	r2, #2
   34f24:	strh	r2, [r3, #14]
   34f28:	ldr	r1, [r4, #28]
   34f2c:	ldr	r2, [r4, #60]	; 0x3c
   34f30:	add	r2, r2, r1
   34f34:	str	r2, [r4, #16]
   34f38:	ldr	r3, [r4, #64]	; 0x40
   34f3c:	sub	r3, r3, r1
   34f40:	cmn	r3, #4
   34f44:	mvnhi	r3, #3
   34f48:	str	r3, [r4, #24]
   34f4c:	ldr	r3, [r4, #32]
   34f50:	mvn	r2, #3
   34f54:	str	r2, [r3, #4]
   34f58:	ldr	r6, [r4, #20]
   34f5c:	add	r5, r5, r6
   34f60:	str	r5, [r4, #20]
   34f64:	ldr	r3, [r4, #24]
   34f68:	cmp	r5, r3
   34f6c:	bcs	34f7c <flatcc_builder_start_struct@@Base+0x7c>
   34f70:	ldr	r0, [r4, #16]
   34f74:	add	r0, r0, r6
   34f78:	pop	{r4, r5, r6, pc}
   34f7c:	add	r1, r5, #1
   34f80:	mov	r0, r4
   34f84:	bl	33d58 <__flatcc_fb_coerce_scalar_type@@Base+0x884>
   34f88:	cmp	r0, #0
   34f8c:	beq	34f70 <flatcc_builder_start_struct@@Base+0x70>
   34f90:	mov	r0, #0
   34f94:	pop	{r4, r5, r6, pc}
   34f98:	mov	r0, #0
   34f9c:	pop	{r4, r5, r6, pc}

00034fa0 <flatcc_builder_struct_edit@@Base>:
   34fa0:	ldr	r0, [r0, #16]
   34fa4:	bx	lr

00034fa8 <flatcc_builder_end_struct@@Base>:
   34fa8:	push	{r4, r5, r6, lr}
   34fac:	ldr	r3, [r0, #32]
   34fb0:	ldrh	r3, [r3, #14]
   34fb4:	cmp	r3, #2
   34fb8:	bne	34fe0 <flatcc_builder_end_struct@@Base+0x38>
   34fbc:	mov	r4, r0
   34fc0:	ldrh	r3, [r0, #130]	; 0x82
   34fc4:	ldr	r2, [r0, #20]
   34fc8:	ldr	r1, [r0, #16]
   34fcc:	bl	34bd0 <flatcc_builder_create_struct@@Base>
   34fd0:	subs	r5, r0, #0
   34fd4:	bne	34ff4 <flatcc_builder_end_struct@@Base+0x4c>
   34fd8:	mov	r0, r5
   34fdc:	pop	{r4, r5, r6, pc}
   34fe0:	ldr	r3, [pc, #140]	; 35074 <flatcc_builder_end_struct@@Base+0xcc>
   34fe4:	mov	r2, #872	; 0x368
   34fe8:	ldr	r1, [pc, #136]	; 35078 <flatcc_builder_end_struct@@Base+0xd0>
   34fec:	ldr	r0, [pc, #136]	; 3507c <flatcc_builder_end_struct@@Base+0xd4>
   34ff0:	bl	14148 <__assert_fail@plt>
   34ff4:	ldr	r2, [r4, #20]
   34ff8:	mov	r1, #0
   34ffc:	ldr	r0, [r4, #16]
   35000:	bl	140ac <memset@plt>
   35004:	ldr	r2, [r4, #32]
   35008:	ldr	r3, [r2, #8]
   3500c:	str	r3, [r4, #20]
   35010:	ldr	r0, [r2]
   35014:	str	r0, [r4, #28]
   35018:	ldr	r1, [r2, #4]
   3501c:	ldr	r3, [r4, #60]	; 0x3c
   35020:	add	r3, r3, r0
   35024:	str	r3, [r4, #16]
   35028:	ldr	r3, [r4, #64]	; 0x40
   3502c:	sub	r3, r3, r0
   35030:	cmp	r3, r1
   35034:	movcs	r3, r1
   35038:	str	r3, [r4, #24]
   3503c:	str	r1, [r2, #4]
   35040:	ldrh	r3, [r4, #130]	; 0x82
   35044:	ldrh	r2, [r4, #128]	; 0x80
   35048:	cmp	r2, r3
   3504c:	strhcc	r3, [r4, #128]	; 0x80
   35050:	ldr	r3, [r4, #32]
   35054:	ldrh	r2, [r3, #12]
   35058:	strh	r2, [r4, #130]	; 0x82
   3505c:	sub	r3, r3, #36	; 0x24
   35060:	str	r3, [r4, #32]
   35064:	ldr	r3, [r4, #156]	; 0x9c
   35068:	sub	r3, r3, #1
   3506c:	str	r3, [r4, #156]	; 0x9c
   35070:	b	34fd8 <flatcc_builder_end_struct@@Base+0x30>
   35074:	ldrdeq	r6, [r5], -r8
   35078:	andeq	r6, r5, r4, lsl r8
   3507c:	andeq	r6, r5, r4, lsl #18

00035080 <flatcc_builder_extend_vector@@Base>:
   35080:	push	{r4, r5, r6, lr}
   35084:	mov	r4, r0
   35088:	ldr	r2, [r0, #32]
   3508c:	ldr	r3, [r2, #20]
   35090:	add	r0, r1, r3
   35094:	ldr	ip, [r2, #24]
   35098:	cmp	r3, r0
   3509c:	movls	r3, #0
   350a0:	movhi	r3, #1
   350a4:	cmp	ip, r0
   350a8:	orrcc	r3, r3, #1
   350ac:	cmp	r3, #0
   350b0:	bne	350e4 <flatcc_builder_extend_vector@@Base+0x64>
   350b4:	str	r0, [r2, #20]
   350b8:	ldr	r5, [r4, #20]
   350bc:	ldr	r3, [r4, #32]
   350c0:	ldr	r3, [r3, #16]
   350c4:	mla	r1, r3, r1, r5
   350c8:	str	r1, [r4, #20]
   350cc:	ldr	r3, [r4, #24]
   350d0:	cmp	r1, r3
   350d4:	bcs	350f8 <flatcc_builder_extend_vector@@Base+0x78>
   350d8:	ldr	r0, [r4, #16]
   350dc:	add	r0, r0, r5
   350e0:	pop	{r4, r5, r6, pc}
   350e4:	ldr	r3, [pc, #44]	; 35118 <flatcc_builder_extend_vector@@Base+0x98>
   350e8:	mov	r2, #892	; 0x37c
   350ec:	ldr	r1, [pc, #40]	; 3511c <flatcc_builder_extend_vector@@Base+0x9c>
   350f0:	ldr	r0, [pc, #40]	; 35120 <flatcc_builder_extend_vector@@Base+0xa0>
   350f4:	bl	14148 <__assert_fail@plt>
   350f8:	mvn	r2, #3
   350fc:	add	r1, r1, #1
   35100:	mov	r0, r4
   35104:	bl	33d58 <__flatcc_fb_coerce_scalar_type@@Base+0x884>
   35108:	cmp	r0, #0
   3510c:	beq	350d8 <flatcc_builder_extend_vector@@Base+0x58>
   35110:	mov	r0, #0
   35114:	pop	{r4, r5, r6, pc}
   35118:	strdeq	r6, [r5], -r4
   3511c:	andeq	r6, r5, r4, lsl r8
   35120:	andeq	r6, r5, r0, lsr r9

00035124 <flatcc_builder_vector_push@@Base>:
   35124:	push	{r4, r5, r6, r7, r8, lr}
   35128:	ldr	r3, [r0, #32]
   3512c:	ldrh	r2, [r3, #14]
   35130:	cmp	r2, #4
   35134:	bne	3519c <flatcc_builder_vector_push@@Base+0x78>
   35138:	mov	r4, r0
   3513c:	mov	r6, r1
   35140:	ldr	r2, [r3, #20]
   35144:	ldr	r1, [r3, #24]
   35148:	cmp	r2, r1
   3514c:	bhi	351b0 <flatcc_builder_vector_push@@Base+0x8c>
   35150:	add	r2, r2, #1
   35154:	str	r2, [r3, #20]
   35158:	ldr	r3, [r0, #32]
   3515c:	ldr	r7, [r3, #16]
   35160:	ldr	r5, [r0, #20]
   35164:	add	r1, r7, r5
   35168:	str	r1, [r0, #20]
   3516c:	ldr	r3, [r0, #24]
   35170:	cmp	r1, r3
   35174:	bcs	351c4 <flatcc_builder_vector_push@@Base+0xa0>
   35178:	ldr	r4, [r4, #16]
   3517c:	adds	r4, r4, r5
   35180:	beq	35194 <flatcc_builder_vector_push@@Base+0x70>
   35184:	mov	r2, r7
   35188:	mov	r1, r6
   3518c:	mov	r0, r4
   35190:	bl	13fe0 <memcpy@plt>
   35194:	mov	r0, r4
   35198:	pop	{r4, r5, r6, r7, r8, pc}
   3519c:	ldr	r3, [pc, #60]	; 351e0 <flatcc_builder_vector_push@@Base+0xbc>
   351a0:	ldr	r2, [pc, #60]	; 351e4 <flatcc_builder_vector_push@@Base+0xc0>
   351a4:	ldr	r1, [pc, #60]	; 351e8 <flatcc_builder_vector_push@@Base+0xc4>
   351a8:	ldr	r0, [pc, #60]	; 351ec <flatcc_builder_vector_push@@Base+0xc8>
   351ac:	bl	14148 <__assert_fail@plt>
   351b0:	ldr	r3, [pc, #40]	; 351e0 <flatcc_builder_vector_push@@Base+0xbc>
   351b4:	mov	r2, #908	; 0x38c
   351b8:	ldr	r1, [pc, #40]	; 351e8 <flatcc_builder_vector_push@@Base+0xc4>
   351bc:	ldr	r0, [pc, #44]	; 351f0 <flatcc_builder_vector_push@@Base+0xcc>
   351c0:	bl	14148 <__assert_fail@plt>
   351c4:	mvn	r2, #3
   351c8:	add	r1, r1, #1
   351cc:	bl	33d58 <__flatcc_fb_coerce_scalar_type@@Base+0x884>
   351d0:	cmp	r0, #0
   351d4:	beq	35178 <flatcc_builder_vector_push@@Base+0x54>
   351d8:	mov	r4, #0
   351dc:	b	35194 <flatcc_builder_vector_push@@Base+0x70>
   351e0:	andeq	r6, r5, r8, lsl #8
   351e4:	andeq	r0, r0, fp, lsl #7
   351e8:	andeq	r6, r5, r4, lsl r8
   351ec:	andeq	r6, r5, ip, asr #18
   351f0:	andeq	r6, r5, r8, ror r9

000351f4 <flatcc_builder_append_vector@@Base>:
   351f4:	push	{r4, r5, r6, r7, r8, lr}
   351f8:	mov	r5, r1
   351fc:	ldr	r1, [r0, #32]
   35200:	ldrh	r3, [r1, #14]
   35204:	cmp	r3, #4
   35208:	bne	35284 <flatcc_builder_append_vector@@Base+0x90>
   3520c:	mov	r4, r0
   35210:	ldr	r3, [r1, #20]
   35214:	add	r0, r2, r3
   35218:	ldr	ip, [r1, #24]
   3521c:	cmp	r3, r0
   35220:	movls	r3, #0
   35224:	movhi	r3, #1
   35228:	cmp	ip, r0
   3522c:	orrcc	r3, r3, #1
   35230:	cmp	r3, #0
   35234:	bne	35298 <flatcc_builder_append_vector@@Base+0xa4>
   35238:	str	r0, [r1, #20]
   3523c:	ldr	r3, [r4, #32]
   35240:	ldr	r6, [r3, #16]
   35244:	mul	r6, r6, r2
   35248:	ldr	r7, [r4, #20]
   3524c:	add	r1, r6, r7
   35250:	str	r1, [r4, #20]
   35254:	ldr	r3, [r4, #24]
   35258:	cmp	r1, r3
   3525c:	bcs	352ac <flatcc_builder_append_vector@@Base+0xb8>
   35260:	ldr	r4, [r4, #16]
   35264:	adds	r4, r4, r7
   35268:	beq	3527c <flatcc_builder_append_vector@@Base+0x88>
   3526c:	mov	r2, r6
   35270:	mov	r1, r5
   35274:	mov	r0, r4
   35278:	bl	13fe0 <memcpy@plt>
   3527c:	mov	r0, r4
   35280:	pop	{r4, r5, r6, r7, r8, pc}
   35284:	ldr	r3, [pc, #64]	; 352cc <flatcc_builder_append_vector@@Base+0xd8>
   35288:	ldr	r2, [pc, #64]	; 352d0 <flatcc_builder_append_vector@@Base+0xdc>
   3528c:	ldr	r1, [pc, #64]	; 352d4 <flatcc_builder_append_vector@@Base+0xe0>
   35290:	ldr	r0, [pc, #64]	; 352d8 <flatcc_builder_append_vector@@Base+0xe4>
   35294:	bl	14148 <__assert_fail@plt>
   35298:	ldr	r3, [pc, #60]	; 352dc <flatcc_builder_append_vector@@Base+0xe8>
   3529c:	mov	r2, #892	; 0x37c
   352a0:	ldr	r1, [pc, #44]	; 352d4 <flatcc_builder_append_vector@@Base+0xe0>
   352a4:	ldr	r0, [pc, #52]	; 352e0 <flatcc_builder_append_vector@@Base+0xec>
   352a8:	bl	14148 <__assert_fail@plt>
   352ac:	mvn	r2, #3
   352b0:	add	r1, r1, #1
   352b4:	mov	r0, r4
   352b8:	bl	33d58 <__flatcc_fb_coerce_scalar_type@@Base+0x884>
   352bc:	cmp	r0, #0
   352c0:	beq	35260 <flatcc_builder_append_vector@@Base+0x6c>
   352c4:	mov	r4, #0
   352c8:	b	3527c <flatcc_builder_append_vector@@Base+0x88>
   352cc:	andeq	r6, r5, r4, lsr #8
   352d0:	muleq	r0, r3, r3
   352d4:	andeq	r6, r5, r4, lsl r8
   352d8:	andeq	r6, r5, ip, asr #18
   352dc:	strdeq	r6, [r5], -r4
   352e0:	andeq	r6, r5, r0, lsr r9

000352e4 <flatcc_builder_extend_offset_vector@@Base>:
   352e4:	push	{r4, r5, r6, lr}
   352e8:	mov	r4, r0
   352ec:	ldr	r2, [r0, #32]
   352f0:	ldr	r3, [r2, #20]
   352f4:	adds	r3, r1, r3
   352f8:	movcs	ip, #1
   352fc:	movcc	ip, #0
   35300:	cmn	r3, #-1073741823	; 0xc0000001
   35304:	movls	r0, #0
   35308:	movhi	r0, #1
   3530c:	orrs	r0, ip, r0
   35310:	bne	3533c <flatcc_builder_extend_offset_vector@@Base+0x58>
   35314:	str	r3, [r2, #20]
   35318:	ldr	r5, [r4, #20]
   3531c:	add	r1, r5, r1, lsl #2
   35320:	str	r1, [r4, #20]
   35324:	ldr	r3, [r4, #24]
   35328:	cmp	r1, r3
   3532c:	bcs	35350 <flatcc_builder_extend_offset_vector@@Base+0x6c>
   35330:	ldr	r0, [r4, #16]
   35334:	add	r0, r0, r5
   35338:	pop	{r4, r5, r6, pc}
   3533c:	ldr	r3, [pc, #44]	; 35370 <flatcc_builder_extend_offset_vector@@Base+0x8c>
   35340:	mov	r2, #892	; 0x37c
   35344:	ldr	r1, [pc, #40]	; 35374 <flatcc_builder_extend_offset_vector@@Base+0x90>
   35348:	ldr	r0, [pc, #40]	; 35378 <flatcc_builder_extend_offset_vector@@Base+0x94>
   3534c:	bl	14148 <__assert_fail@plt>
   35350:	mvn	r2, #3
   35354:	add	r1, r1, #1
   35358:	mov	r0, r4
   3535c:	bl	33d58 <__flatcc_fb_coerce_scalar_type@@Base+0x884>
   35360:	cmp	r0, #0
   35364:	beq	35330 <flatcc_builder_extend_offset_vector@@Base+0x4c>
   35368:	mov	r0, #0
   3536c:	pop	{r4, r5, r6, pc}
   35370:	strdeq	r6, [r5], -r4
   35374:	andeq	r6, r5, r4, lsl r8
   35378:	andeq	r6, r5, r0, lsr r9

0003537c <flatcc_builder_offset_vector_push@@Base>:
   3537c:	push	{r4, r5, r6, lr}
   35380:	ldr	r2, [r0, #32]
   35384:	ldrh	r3, [r2, #14]
   35388:	cmp	r3, #5
   3538c:	bne	353d4 <flatcc_builder_offset_vector_push@@Base+0x58>
   35390:	mov	r4, r0
   35394:	mov	r6, r1
   35398:	ldr	r3, [r2, #20]
   3539c:	cmn	r3, #-1073741823	; 0xc0000001
   353a0:	beq	35404 <flatcc_builder_offset_vector_push@@Base+0x88>
   353a4:	add	r3, r3, #1
   353a8:	str	r3, [r2, #20]
   353ac:	ldr	r5, [r0, #20]
   353b0:	add	r3, r5, #4
   353b4:	str	r3, [r0, #20]
   353b8:	ldr	r2, [r0, #24]
   353bc:	cmp	r3, r2
   353c0:	bcs	353e8 <flatcc_builder_offset_vector_push@@Base+0x6c>
   353c4:	ldr	r3, [r4, #16]
   353c8:	adds	r0, r3, r5
   353cc:	strne	r6, [r3, r5]
   353d0:	pop	{r4, r5, r6, pc}
   353d4:	ldr	r3, [pc, #48]	; 3540c <flatcc_builder_offset_vector_push@@Base+0x90>
   353d8:	ldr	r2, [pc, #48]	; 35410 <flatcc_builder_offset_vector_push@@Base+0x94>
   353dc:	ldr	r1, [pc, #48]	; 35414 <flatcc_builder_offset_vector_push@@Base+0x98>
   353e0:	ldr	r0, [pc, #48]	; 35418 <flatcc_builder_offset_vector_push@@Base+0x9c>
   353e4:	bl	14148 <__assert_fail@plt>
   353e8:	mvn	r2, #3
   353ec:	add	r1, r5, #5
   353f0:	bl	33d58 <__flatcc_fb_coerce_scalar_type@@Base+0x884>
   353f4:	cmp	r0, #0
   353f8:	beq	353c4 <flatcc_builder_offset_vector_push@@Base+0x48>
   353fc:	mov	r0, #0
   35400:	pop	{r4, r5, r6, pc}
   35404:	mov	r0, #0
   35408:	pop	{r4, r5, r6, pc}
   3540c:	andeq	r6, r5, r4, asr #8
   35410:	andeq	r0, r0, r6, lsr #7
   35414:	andeq	r6, r5, r4, lsl r8
   35418:			; <UNDEFINED> instruction: 0x000569b8

0003541c <flatcc_builder_append_offset_vector@@Base>:
   3541c:	push	{r4, r5, r6, r7, r8, lr}
   35420:	mov	r6, r1
   35424:	ldr	r1, [r0, #32]
   35428:	ldrh	r3, [r1, #14]
   3542c:	cmp	r3, #5
   35430:	bne	354a0 <flatcc_builder_append_offset_vector@@Base+0x84>
   35434:	mov	r5, r0
   35438:	ldr	r3, [r1, #20]
   3543c:	adds	r3, r2, r3
   35440:	movcs	ip, #1
   35444:	movcc	ip, #0
   35448:	cmn	r3, #-1073741823	; 0xc0000001
   3544c:	movls	r0, #0
   35450:	movhi	r0, #1
   35454:	orrs	r0, ip, r0
   35458:	bne	354b4 <flatcc_builder_append_offset_vector@@Base+0x98>
   3545c:	str	r3, [r1, #20]
   35460:	lsl	r4, r2, #2
   35464:	ldr	r7, [r5, #20]
   35468:	add	r1, r4, r7
   3546c:	str	r1, [r5, #20]
   35470:	ldr	r3, [r5, #24]
   35474:	cmp	r1, r3
   35478:	bcs	354c8 <flatcc_builder_append_offset_vector@@Base+0xac>
   3547c:	ldr	r5, [r5, #16]
   35480:	adds	r5, r5, r7
   35484:	beq	35498 <flatcc_builder_append_offset_vector@@Base+0x7c>
   35488:	mov	r2, r4
   3548c:	mov	r1, r6
   35490:	mov	r0, r5
   35494:	bl	13fe0 <memcpy@plt>
   35498:	mov	r0, r5
   3549c:	pop	{r4, r5, r6, r7, r8, pc}
   354a0:	ldr	r3, [pc, #64]	; 354e8 <flatcc_builder_append_offset_vector@@Base+0xcc>
   354a4:	mov	r2, #948	; 0x3b4
   354a8:	ldr	r1, [pc, #60]	; 354ec <flatcc_builder_append_offset_vector@@Base+0xd0>
   354ac:	ldr	r0, [pc, #60]	; 354f0 <flatcc_builder_append_offset_vector@@Base+0xd4>
   354b0:	bl	14148 <__assert_fail@plt>
   354b4:	ldr	r3, [pc, #56]	; 354f4 <flatcc_builder_append_offset_vector@@Base+0xd8>
   354b8:	mov	r2, #892	; 0x37c
   354bc:	ldr	r1, [pc, #40]	; 354ec <flatcc_builder_append_offset_vector@@Base+0xd0>
   354c0:	ldr	r0, [pc, #48]	; 354f8 <flatcc_builder_append_offset_vector@@Base+0xdc>
   354c4:	bl	14148 <__assert_fail@plt>
   354c8:	mvn	r2, #3
   354cc:	add	r1, r1, #1
   354d0:	mov	r0, r5
   354d4:	bl	33d58 <__flatcc_fb_coerce_scalar_type@@Base+0x884>
   354d8:	cmp	r0, #0
   354dc:	beq	3547c <flatcc_builder_append_offset_vector@@Base+0x60>
   354e0:	mov	r5, #0
   354e4:	b	35498 <flatcc_builder_append_offset_vector@@Base+0x7c>
   354e8:	andeq	r6, r5, r8, ror #8
   354ec:	andeq	r6, r5, r4, lsl r8
   354f0:			; <UNDEFINED> instruction: 0x000569b8
   354f4:	strdeq	r6, [r5], -r4
   354f8:	andeq	r6, r5, r0, lsr r9

000354fc <flatcc_builder_extend_string@@Base>:
   354fc:	push	{r4, r5, r6, lr}
   35500:	ldr	r2, [r0, #32]
   35504:	ldrh	r3, [r2, #14]
   35508:	cmp	r3, #6
   3550c:	bne	35548 <flatcc_builder_extend_string@@Base+0x4c>
   35510:	mov	r4, r0
   35514:	ldr	r3, [r2, #20]
   35518:	adds	r3, r1, r3
   3551c:	bcs	3555c <flatcc_builder_extend_string@@Base+0x60>
   35520:	str	r3, [r2, #20]
   35524:	ldr	r5, [r0, #20]
   35528:	add	r1, r1, r5
   3552c:	str	r1, [r0, #20]
   35530:	ldr	r3, [r0, #24]
   35534:	cmp	r1, r3
   35538:	bcs	35570 <flatcc_builder_extend_string@@Base+0x74>
   3553c:	ldr	r0, [r4, #16]
   35540:	add	r0, r0, r5
   35544:	pop	{r4, r5, r6, pc}
   35548:	ldr	r3, [pc, #60]	; 3558c <flatcc_builder_extend_string@@Base+0x90>
   3554c:	ldr	r2, [pc, #60]	; 35590 <flatcc_builder_extend_string@@Base+0x94>
   35550:	ldr	r1, [pc, #60]	; 35594 <flatcc_builder_extend_string@@Base+0x98>
   35554:	ldr	r0, [pc, #60]	; 35598 <flatcc_builder_extend_string@@Base+0x9c>
   35558:	bl	14148 <__assert_fail@plt>
   3555c:	ldr	r3, [pc, #56]	; 3559c <flatcc_builder_extend_string@@Base+0xa0>
   35560:	mov	r2, #892	; 0x37c
   35564:	ldr	r1, [pc, #40]	; 35594 <flatcc_builder_extend_string@@Base+0x98>
   35568:	ldr	r0, [pc, #48]	; 355a0 <flatcc_builder_extend_string@@Base+0xa4>
   3556c:	bl	14148 <__assert_fail@plt>
   35570:	mvn	r2, #3
   35574:	add	r1, r1, #1
   35578:	bl	33d58 <__flatcc_fb_coerce_scalar_type@@Base+0x884>
   3557c:	cmp	r0, #0
   35580:	beq	3553c <flatcc_builder_extend_string@@Base+0x40>
   35584:	mov	r0, #0
   35588:	pop	{r4, r5, r6, pc}
   3558c:	andeq	r6, r5, ip, lsl #9
   35590:			; <UNDEFINED> instruction: 0x000003bd
   35594:	andeq	r6, r5, r4, lsl r8
   35598:	andeq	r6, r5, ip, ror #19
   3559c:	strdeq	r6, [r5], -r4
   355a0:	andeq	r6, r5, r0, lsr r9

000355a4 <flatcc_builder_append_string@@Base>:
   355a4:	push	{r4, r5, r6, r7, r8, lr}
   355a8:	mov	r5, r2
   355ac:	ldr	r2, [r0, #32]
   355b0:	ldrh	r3, [r2, #14]
   355b4:	cmp	r3, #6
   355b8:	bne	35610 <flatcc_builder_append_string@@Base+0x6c>
   355bc:	mov	r4, r0
   355c0:	mov	r6, r1
   355c4:	ldr	r3, [r2, #20]
   355c8:	adds	r3, r5, r3
   355cc:	bcs	35624 <flatcc_builder_append_string@@Base+0x80>
   355d0:	str	r3, [r2, #20]
   355d4:	ldr	r7, [r0, #20]
   355d8:	add	r1, r5, r7
   355dc:	str	r1, [r0, #20]
   355e0:	ldr	r3, [r0, #24]
   355e4:	cmp	r1, r3
   355e8:	bcs	35638 <flatcc_builder_append_string@@Base+0x94>
   355ec:	ldr	r4, [r4, #16]
   355f0:	adds	r4, r4, r7
   355f4:	beq	35608 <flatcc_builder_append_string@@Base+0x64>
   355f8:	mov	r2, r5
   355fc:	mov	r1, r6
   35600:	mov	r0, r4
   35604:	bl	13fe0 <memcpy@plt>
   35608:	mov	r0, r4
   3560c:	pop	{r4, r5, r6, r7, r8, pc}
   35610:	ldr	r3, [pc, #60]	; 35654 <flatcc_builder_append_string@@Base+0xb0>
   35614:	ldr	r2, [pc, #60]	; 35658 <flatcc_builder_append_string@@Base+0xb4>
   35618:	ldr	r1, [pc, #60]	; 3565c <flatcc_builder_append_string@@Base+0xb8>
   3561c:	ldr	r0, [pc, #60]	; 35660 <flatcc_builder_append_string@@Base+0xbc>
   35620:	bl	14148 <__assert_fail@plt>
   35624:	ldr	r3, [pc, #56]	; 35664 <flatcc_builder_append_string@@Base+0xc0>
   35628:	mov	r2, #892	; 0x37c
   3562c:	ldr	r1, [pc, #40]	; 3565c <flatcc_builder_append_string@@Base+0xb8>
   35630:	ldr	r0, [pc, #48]	; 35668 <flatcc_builder_append_string@@Base+0xc4>
   35634:	bl	14148 <__assert_fail@plt>
   35638:	mvn	r2, #3
   3563c:	add	r1, r1, #1
   35640:	bl	33d58 <__flatcc_fb_coerce_scalar_type@@Base+0x884>
   35644:	cmp	r0, #0
   35648:	beq	355ec <flatcc_builder_append_string@@Base+0x48>
   3564c:	mov	r4, #0
   35650:	b	35608 <flatcc_builder_append_string@@Base+0x64>
   35654:	andeq	r6, r5, ip, lsr #9
   35658:	andeq	r0, r0, r6, asr #7
   3565c:	andeq	r6, r5, r4, lsl r8
   35660:	andeq	r6, r5, ip, ror #19
   35664:	strdeq	r6, [r5], -r4
   35668:	andeq	r6, r5, r0, lsr r9

0003566c <flatcc_builder_append_string_str@@Base>:
   3566c:	push	{r4, r5, r6, lr}
   35670:	mov	r5, r0
   35674:	mov	r4, r1
   35678:	mov	r0, r1
   3567c:	bl	1407c <strlen@plt>
   35680:	mov	r2, r0
   35684:	mov	r1, r4
   35688:	mov	r0, r5
   3568c:	bl	355a4 <flatcc_builder_append_string@@Base>
   35690:	pop	{r4, r5, r6, pc}

00035694 <flatcc_builder_append_string_strn@@Base>:
   35694:	push	{r4, r5, r6, lr}
   35698:	mov	r6, r0
   3569c:	mov	r4, r1
   356a0:	mov	r5, r2
   356a4:	mov	r1, #0
   356a8:	mov	r0, r4
   356ac:	bl	140d0 <memchr@plt>
   356b0:	cmp	r0, #0
   356b4:	subne	r5, r0, r4
   356b8:	mov	r2, r5
   356bc:	mov	r1, r4
   356c0:	mov	r0, r6
   356c4:	bl	355a4 <flatcc_builder_append_string@@Base>
   356c8:	pop	{r4, r5, r6, pc}

000356cc <flatcc_builder_truncate_vector@@Base>:
   356cc:	push	{r4, lr}
   356d0:	ldr	ip, [r0, #32]
   356d4:	ldrh	r3, [ip, #14]
   356d8:	cmp	r3, #4
   356dc:	bne	35724 <flatcc_builder_truncate_vector@@Base+0x58>
   356e0:	ldr	r3, [ip, #20]
   356e4:	cmp	r3, r1
   356e8:	bcc	35738 <flatcc_builder_truncate_vector@@Base+0x6c>
   356ec:	sub	r3, r3, r1
   356f0:	str	r3, [ip, #20]
   356f4:	ldr	r3, [r0, #32]
   356f8:	ldr	r2, [r3, #16]
   356fc:	mul	r2, r2, r1
   35700:	ldr	r3, [r0, #20]
   35704:	sub	r3, r3, r2
   35708:	str	r3, [r0, #20]
   3570c:	ldr	r0, [r0, #16]
   35710:	mov	r1, #0
   35714:	add	r0, r0, r3
   35718:	bl	140ac <memset@plt>
   3571c:	mov	r0, #0
   35720:	pop	{r4, pc}
   35724:	ldr	r3, [pc, #32]	; 3574c <flatcc_builder_truncate_vector@@Base+0x80>
   35728:	ldr	r2, [pc, #32]	; 35750 <flatcc_builder_truncate_vector@@Base+0x84>
   3572c:	ldr	r1, [pc, #32]	; 35754 <flatcc_builder_truncate_vector@@Base+0x88>
   35730:	ldr	r0, [pc, #32]	; 35758 <flatcc_builder_truncate_vector@@Base+0x8c>
   35734:	bl	14148 <__assert_fail@plt>
   35738:	ldr	r3, [pc, #12]	; 3574c <flatcc_builder_truncate_vector@@Base+0x80>
   3573c:	ldr	r2, [pc, #24]	; 3575c <flatcc_builder_truncate_vector@@Base+0x90>
   35740:	ldr	r1, [pc, #12]	; 35754 <flatcc_builder_truncate_vector@@Base+0x88>
   35744:	ldr	r0, [pc, #20]	; 35760 <flatcc_builder_truncate_vector@@Base+0x94>
   35748:	bl	14148 <__assert_fail@plt>
   3574c:	andeq	r6, r5, ip, asr #9
   35750:	ldrdeq	r0, [r0], -r9
   35754:	andeq	r6, r5, r4, lsl r8
   35758:	andeq	r6, r5, ip, asr #18
   3575c:	ldrdeq	r0, [r0], -sl
   35760:	andeq	r6, r5, r8, lsl sl

00035764 <flatcc_builder_truncate_offset_vector@@Base>:
   35764:	push	{r4, lr}
   35768:	ldr	ip, [r0, #32]
   3576c:	ldrh	r3, [ip, #14]
   35770:	cmp	r3, #5
   35774:	bne	357bc <flatcc_builder_truncate_offset_vector@@Base+0x58>
   35778:	ldr	r3, [ip, #20]
   3577c:	cmp	r3, r1
   35780:	bcc	357d0 <flatcc_builder_truncate_offset_vector@@Base+0x6c>
   35784:	sub	r3, r3, r1
   35788:	str	r3, [ip, #20]
   3578c:	ldr	r3, [r0, #32]
   35790:	ldr	r2, [r3, #16]
   35794:	mul	r2, r2, r1
   35798:	ldr	r3, [r0, #20]
   3579c:	sub	r3, r3, r2
   357a0:	str	r3, [r0, #20]
   357a4:	ldr	r0, [r0, #16]
   357a8:	mov	r1, #0
   357ac:	add	r0, r0, r3
   357b0:	bl	140ac <memset@plt>
   357b4:	mov	r0, #0
   357b8:	pop	{r4, pc}
   357bc:	ldr	r3, [pc, #32]	; 357e4 <flatcc_builder_truncate_offset_vector@@Base+0x80>
   357c0:	ldr	r2, [pc, #32]	; 357e8 <flatcc_builder_truncate_offset_vector@@Base+0x84>
   357c4:	ldr	r1, [pc, #32]	; 357ec <flatcc_builder_truncate_offset_vector@@Base+0x88>
   357c8:	ldr	r0, [pc, #32]	; 357f0 <flatcc_builder_truncate_offset_vector@@Base+0x8c>
   357cc:	bl	14148 <__assert_fail@plt>
   357d0:	ldr	r3, [pc, #12]	; 357e4 <flatcc_builder_truncate_offset_vector@@Base+0x80>
   357d4:	ldr	r2, [pc, #24]	; 357f4 <flatcc_builder_truncate_offset_vector@@Base+0x90>
   357d8:	ldr	r1, [pc, #12]	; 357ec <flatcc_builder_truncate_offset_vector@@Base+0x88>
   357dc:	ldr	r0, [pc, #20]	; 357f8 <flatcc_builder_truncate_offset_vector@@Base+0x94>
   357e0:	bl	14148 <__assert_fail@plt>
   357e4:	andeq	r6, r5, ip, ror #9
   357e8:	andeq	r0, r0, r2, ror #7
   357ec:	andeq	r6, r5, r4, lsl r8
   357f0:			; <UNDEFINED> instruction: 0x000569b8
   357f4:	andeq	r0, r0, r3, ror #7
   357f8:	andeq	r6, r5, ip, lsr sl

000357fc <flatcc_builder_truncate_string@@Base>:
   357fc:	push	{r4, lr}
   35800:	ldr	r2, [r0, #32]
   35804:	ldrh	r3, [r2, #14]
   35808:	cmp	r3, #6
   3580c:	bne	3584c <flatcc_builder_truncate_string@@Base+0x50>
   35810:	ldr	r3, [r2, #20]
   35814:	cmp	r3, r1
   35818:	bcc	35860 <flatcc_builder_truncate_string@@Base+0x64>
   3581c:	sub	r3, r3, r1
   35820:	str	r3, [r2, #20]
   35824:	ldr	r3, [r0, #20]
   35828:	sub	r3, r3, r1
   3582c:	str	r3, [r0, #20]
   35830:	ldr	r0, [r0, #16]
   35834:	mov	r2, r1
   35838:	mov	r1, #0
   3583c:	add	r0, r0, r3
   35840:	bl	140ac <memset@plt>
   35844:	mov	r0, #0
   35848:	pop	{r4, pc}
   3584c:	ldr	r3, [pc, #32]	; 35874 <flatcc_builder_truncate_string@@Base+0x78>
   35850:	ldr	r2, [pc, #32]	; 35878 <flatcc_builder_truncate_string@@Base+0x7c>
   35854:	ldr	r1, [pc, #32]	; 3587c <flatcc_builder_truncate_string@@Base+0x80>
   35858:	ldr	r0, [pc, #32]	; 35880 <flatcc_builder_truncate_string@@Base+0x84>
   3585c:	bl	14148 <__assert_fail@plt>
   35860:	ldr	r3, [pc, #12]	; 35874 <flatcc_builder_truncate_string@@Base+0x78>
   35864:	mov	r2, #1004	; 0x3ec
   35868:	ldr	r1, [pc, #12]	; 3587c <flatcc_builder_truncate_string@@Base+0x80>
   3586c:	ldr	r0, [pc, #16]	; 35884 <flatcc_builder_truncate_string@@Base+0x88>
   35870:	bl	14148 <__assert_fail@plt>
   35874:	andeq	r6, r5, r4, lsl r5
   35878:	andeq	r0, r0, fp, ror #7
   3587c:	andeq	r6, r5, r4, lsl r8
   35880:	andeq	r6, r5, ip, ror #19
   35884:	andeq	r6, r5, r8, ror sl

00035888 <flatcc_builder_start_vector@@Base>:
   35888:	push	{r4, r5, r6, lr}
   3588c:	mov	r4, r0
   35890:	mov	r6, r1
   35894:	mov	r5, r3
   35898:	cmp	r2, #4
   3589c:	movcs	r1, r2
   358a0:	movcc	r1, #4
   358a4:	bl	33ff8 <flatcc_builder_default_alloc@@Base+0x22c>
   358a8:	cmp	r0, #0
   358ac:	bne	3590c <flatcc_builder_start_vector@@Base+0x84>
   358b0:	ldr	r3, [r4, #32]
   358b4:	str	r6, [r3, #16]
   358b8:	ldr	r3, [r4, #32]
   358bc:	mov	r2, #0
   358c0:	str	r2, [r3, #20]
   358c4:	ldr	r3, [r4, #32]
   358c8:	str	r5, [r3, #24]
   358cc:	ldr	r3, [r4, #32]
   358d0:	mov	r2, #4
   358d4:	strh	r2, [r3, #14]
   358d8:	ldr	r1, [r4, #28]
   358dc:	ldr	r2, [r4, #60]	; 0x3c
   358e0:	add	r2, r2, r1
   358e4:	str	r2, [r4, #16]
   358e8:	ldr	r3, [r4, #64]	; 0x40
   358ec:	sub	r3, r3, r1
   358f0:	cmn	r3, #4
   358f4:	mvnhi	r3, #3
   358f8:	str	r3, [r4, #24]
   358fc:	ldr	r3, [r4, #32]
   35900:	mvn	r2, #3
   35904:	str	r2, [r3, #4]
   35908:	pop	{r4, r5, r6, pc}
   3590c:	mvn	r0, #0
   35910:	pop	{r4, r5, r6, pc}

00035914 <flatcc_builder_start_offset_vector@@Base>:
   35914:	push	{r4, lr}
   35918:	mov	r4, r0
   3591c:	mov	r1, #4
   35920:	bl	33ff8 <flatcc_builder_default_alloc@@Base+0x22c>
   35924:	cmp	r0, #0
   35928:	bne	35984 <flatcc_builder_start_offset_vector@@Base+0x70>
   3592c:	ldr	r3, [r4, #32]
   35930:	mov	r2, #4
   35934:	str	r2, [r3, #16]
   35938:	ldr	r3, [r4, #32]
   3593c:	mov	r2, #0
   35940:	str	r2, [r3, #20]
   35944:	ldr	r3, [r4, #32]
   35948:	mov	r2, #5
   3594c:	strh	r2, [r3, #14]
   35950:	ldr	r1, [r4, #28]
   35954:	ldr	r2, [r4, #60]	; 0x3c
   35958:	add	r2, r2, r1
   3595c:	str	r2, [r4, #16]
   35960:	ldr	r3, [r4, #64]	; 0x40
   35964:	sub	r3, r3, r1
   35968:	cmn	r3, #4
   3596c:	mvnhi	r3, #3
   35970:	str	r3, [r4, #24]
   35974:	ldr	r3, [r4, #32]
   35978:	mvn	r2, #3
   3597c:	str	r2, [r3, #4]
   35980:	pop	{r4, pc}
   35984:	mvn	r0, #0
   35988:	pop	{r4, pc}

0003598c <flatcc_builder_start_string@@Base>:
   3598c:	push	{r4, lr}
   35990:	mov	r4, r0
   35994:	mov	r1, #1
   35998:	bl	33ff8 <flatcc_builder_default_alloc@@Base+0x22c>
   3599c:	cmp	r0, #0
   359a0:	bne	359fc <flatcc_builder_start_string@@Base+0x70>
   359a4:	ldr	r3, [r4, #32]
   359a8:	mov	r2, #1
   359ac:	str	r2, [r3, #16]
   359b0:	ldr	r3, [r4, #32]
   359b4:	mov	r2, #0
   359b8:	str	r2, [r3, #20]
   359bc:	ldr	r3, [r4, #32]
   359c0:	mov	r2, #6
   359c4:	strh	r2, [r3, #14]
   359c8:	ldr	r1, [r4, #28]
   359cc:	ldr	r2, [r4, #60]	; 0x3c
   359d0:	add	r2, r2, r1
   359d4:	str	r2, [r4, #16]
   359d8:	ldr	r3, [r4, #64]	; 0x40
   359dc:	sub	r3, r3, r1
   359e0:	cmn	r3, #4
   359e4:	mvnhi	r3, #3
   359e8:	str	r3, [r4, #24]
   359ec:	ldr	r3, [r4, #32]
   359f0:	mvn	r2, #3
   359f4:	str	r2, [r3, #4]
   359f8:	pop	{r4, pc}
   359fc:	mvn	r0, #0
   35a00:	pop	{r4, pc}

00035a04 <flatcc_builder_reserve_table@@Base>:
   35a04:	push	{r4, r5, r6, r7, lr}
   35a08:	sub	sp, sp, #12
   35a0c:	cmp	r1, #0
   35a10:	blt	35a9c <flatcc_builder_reserve_table@@Base+0x98>
   35a14:	mov	r5, r0
   35a18:	ldr	r2, [r0, #32]
   35a1c:	ldrh	r6, [r2, #28]
   35a20:	ldr	r3, [r2, #16]
   35a24:	add	r6, r3, r6, lsl #1
   35a28:	add	r1, r1, #2
   35a2c:	lsl	r4, r1, #1
   35a30:	add	r2, r6, r4
   35a34:	ldr	r3, [r0, #56]	; 0x38
   35a38:	cmp	r2, r3
   35a3c:	bhi	35ab0 <flatcc_builder_reserve_table@@Base+0xac>
   35a40:	ldr	r3, [r5, #52]	; 0x34
   35a44:	adds	r3, r3, r6
   35a48:	moveq	r3, #0
   35a4c:	streq	r3, [r5, #4]
   35a50:	mvneq	r0, #0
   35a54:	beq	35a94 <flatcc_builder_reserve_table@@Base+0x90>
   35a58:	add	r3, r3, #4
   35a5c:	str	r3, [r5, #4]
   35a60:	ldr	r3, [r5, #32]
   35a64:	ldr	r6, [r3, #20]
   35a68:	add	r2, r4, r6
   35a6c:	sub	r2, r2, #3
   35a70:	ldr	r3, [r5, #80]	; 0x50
   35a74:	cmp	r2, r3
   35a78:	bhi	35ae8 <flatcc_builder_reserve_table@@Base+0xe4>
   35a7c:	ldr	r0, [r5, #76]	; 0x4c
   35a80:	add	r0, r0, r6
   35a84:	str	r0, [r5]
   35a88:	cmp	r0, #0
   35a8c:	movne	r0, #0
   35a90:	mvneq	r0, #0
   35a94:	add	sp, sp, #12
   35a98:	pop	{r4, r5, r6, r7, pc}
   35a9c:	ldr	r3, [pc, #124]	; 35b20 <flatcc_builder_reserve_table@@Base+0x11c>
   35aa0:	ldr	r2, [pc, #124]	; 35b24 <flatcc_builder_reserve_table@@Base+0x120>
   35aa4:	ldr	r1, [pc, #124]	; 35b28 <flatcc_builder_reserve_table@@Base+0x124>
   35aa8:	ldr	r0, [pc, #124]	; 35b2c <flatcc_builder_reserve_table@@Base+0x128>
   35aac:	bl	14148 <__assert_fail@plt>
   35ab0:	mov	r3, #0
   35ab4:	str	r3, [sp]
   35ab8:	ldr	r7, [r0, #48]	; 0x30
   35abc:	mov	r3, #1
   35ac0:	add	r1, r0, #52	; 0x34
   35ac4:	ldr	r0, [r0, #40]	; 0x28
   35ac8:	blx	r7
   35acc:	cmp	r0, #0
   35ad0:	beq	35a40 <flatcc_builder_reserve_table@@Base+0x3c>
   35ad4:	ldr	r3, [pc, #84]	; 35b30 <flatcc_builder_reserve_table@@Base+0x12c>
   35ad8:	mov	r2, #308	; 0x134
   35adc:	ldr	r1, [pc, #68]	; 35b28 <flatcc_builder_reserve_table@@Base+0x124>
   35ae0:	ldr	r0, [pc, #76]	; 35b34 <flatcc_builder_reserve_table@@Base+0x130>
   35ae4:	bl	14148 <__assert_fail@plt>
   35ae8:	mov	r3, #3
   35aec:	str	r3, [sp]
   35af0:	ldr	r4, [r5, #48]	; 0x30
   35af4:	mov	r3, #0
   35af8:	add	r1, r5, #76	; 0x4c
   35afc:	ldr	r0, [r5, #40]	; 0x28
   35b00:	blx	r4
   35b04:	cmp	r0, #0
   35b08:	beq	35a7c <flatcc_builder_reserve_table@@Base+0x78>
   35b0c:	ldr	r3, [pc, #28]	; 35b30 <flatcc_builder_reserve_table@@Base+0x12c>
   35b10:	mov	r2, #308	; 0x134
   35b14:	ldr	r1, [pc, #12]	; 35b28 <flatcc_builder_reserve_table@@Base+0x124>
   35b18:	ldr	r0, [pc, #20]	; 35b34 <flatcc_builder_reserve_table@@Base+0x130>
   35b1c:	bl	14148 <__assert_fail@plt>
   35b20:	andeq	r6, r5, r4, lsr r5
   35b24:	andeq	r0, r0, r9, lsr #8
   35b28:	andeq	r6, r5, r4, lsl r8
   35b2c:	muleq	r5, ip, sl
   35b30:	andeq	r6, r5, r0, ror #5
   35b34:	andeq	r5, r4, r0, ror #3

00035b38 <flatcc_builder_start_table@@Base>:
   35b38:	push	{r4, r5, r6, r7, lr}
   35b3c:	sub	sp, sp, #12
   35b40:	mov	r4, r0
   35b44:	mov	r5, r1
   35b48:	mov	r1, #4
   35b4c:	bl	33ff8 <flatcc_builder_default_alloc@@Base+0x22c>
   35b50:	cmp	r0, #0
   35b54:	bne	35ce4 <flatcc_builder_start_table@@Base+0x1ac>
   35b58:	ldr	r2, [r4, #32]
   35b5c:	ldr	r3, [r4, #4]
   35b60:	ldr	r1, [r4, #52]	; 0x34
   35b64:	sub	r3, r3, r1
   35b68:	str	r3, [r2, #16]
   35b6c:	ldr	r2, [r4, #32]
   35b70:	ldr	r3, [r4]
   35b74:	ldr	r1, [r4, #76]	; 0x4c
   35b78:	sub	r3, r3, r1
   35b7c:	str	r3, [r2, #20]
   35b80:	ldr	r3, [r4, #32]
   35b84:	ldr	r2, [r4, #12]
   35b88:	str	r2, [r3, #24]
   35b8c:	ldr	r3, [r4, #32]
   35b90:	ldrh	r2, [r4, #8]
   35b94:	strh	r2, [r3, #28]
   35b98:	ldr	r3, [pc, #340]	; 35cf4 <flatcc_builder_start_table@@Base+0x1bc>
   35b9c:	str	r3, [r4, #12]
   35ba0:	mov	r3, #0
   35ba4:	strh	r3, [r4, #8]
   35ba8:	ldr	r3, [r4, #32]
   35bac:	mov	r2, #3
   35bb0:	strh	r2, [r3, #14]
   35bb4:	ldr	r2, [r4, #32]
   35bb8:	ldrh	r6, [r2, #28]
   35bbc:	ldr	r3, [r2, #16]
   35bc0:	add	r6, r3, r6, lsl #1
   35bc4:	add	r5, r5, #2
   35bc8:	lsl	r5, r5, #1
   35bcc:	add	r2, r6, r5
   35bd0:	ldr	r3, [r4, #56]	; 0x38
   35bd4:	cmp	r2, r3
   35bd8:	bhi	35c74 <flatcc_builder_start_table@@Base+0x13c>
   35bdc:	ldr	r3, [r4, #52]	; 0x34
   35be0:	adds	r3, r3, r6
   35be4:	moveq	r3, #0
   35be8:	streq	r3, [r4, #4]
   35bec:	mvneq	r0, #0
   35bf0:	beq	35c6c <flatcc_builder_start_table@@Base+0x134>
   35bf4:	add	r3, r3, #4
   35bf8:	str	r3, [r4, #4]
   35bfc:	ldr	r3, [r4, #32]
   35c00:	ldr	r6, [r3, #20]
   35c04:	sub	r2, r5, #3
   35c08:	add	r2, r2, r6
   35c0c:	ldr	r3, [r4, #80]	; 0x50
   35c10:	cmp	r2, r3
   35c14:	bhi	35cac <flatcc_builder_start_table@@Base+0x174>
   35c18:	ldr	r0, [r4, #76]	; 0x4c
   35c1c:	add	r0, r0, r6
   35c20:	str	r0, [r4]
   35c24:	cmp	r0, #0
   35c28:	movne	r0, #0
   35c2c:	mvneq	r0, #0
   35c30:	cmp	r0, #0
   35c34:	bne	35cec <flatcc_builder_start_table@@Base+0x1b4>
   35c38:	ldr	r1, [r4, #28]
   35c3c:	ldr	r2, [r4, #60]	; 0x3c
   35c40:	add	r2, r2, r1
   35c44:	str	r2, [r4, #16]
   35c48:	ldr	r3, [r4, #64]	; 0x40
   35c4c:	sub	r3, r3, r1
   35c50:	ldr	r2, [pc, #160]	; 35cf8 <flatcc_builder_start_table@@Base+0x1c0>
   35c54:	cmp	r3, r2
   35c58:	ldrhi	r3, [pc, #152]	; 35cf8 <flatcc_builder_start_table@@Base+0x1c0>
   35c5c:	str	r3, [r4, #24]
   35c60:	ldr	r3, [r4, #32]
   35c64:	ldr	r2, [pc, #140]	; 35cf8 <flatcc_builder_start_table@@Base+0x1c0>
   35c68:	str	r2, [r3, #4]
   35c6c:	add	sp, sp, #12
   35c70:	pop	{r4, r5, r6, r7, pc}
   35c74:	mov	r3, #0
   35c78:	str	r3, [sp]
   35c7c:	ldr	r7, [r4, #48]	; 0x30
   35c80:	mov	r3, #1
   35c84:	add	r1, r4, #52	; 0x34
   35c88:	ldr	r0, [r4, #40]	; 0x28
   35c8c:	blx	r7
   35c90:	cmp	r0, #0
   35c94:	beq	35bdc <flatcc_builder_start_table@@Base+0xa4>
   35c98:	ldr	r3, [pc, #92]	; 35cfc <flatcc_builder_start_table@@Base+0x1c4>
   35c9c:	mov	r2, #308	; 0x134
   35ca0:	ldr	r1, [pc, #88]	; 35d00 <flatcc_builder_start_table@@Base+0x1c8>
   35ca4:	ldr	r0, [pc, #88]	; 35d04 <flatcc_builder_start_table@@Base+0x1cc>
   35ca8:	bl	14148 <__assert_fail@plt>
   35cac:	mov	r3, #3
   35cb0:	str	r3, [sp]
   35cb4:	ldr	r5, [r4, #48]	; 0x30
   35cb8:	mov	r3, #0
   35cbc:	add	r1, r4, #76	; 0x4c
   35cc0:	ldr	r0, [r4, #40]	; 0x28
   35cc4:	blx	r5
   35cc8:	cmp	r0, #0
   35ccc:	beq	35c18 <flatcc_builder_start_table@@Base+0xe0>
   35cd0:	ldr	r3, [pc, #36]	; 35cfc <flatcc_builder_start_table@@Base+0x1c4>
   35cd4:	mov	r2, #308	; 0x134
   35cd8:	ldr	r1, [pc, #32]	; 35d00 <flatcc_builder_start_table@@Base+0x1c8>
   35cdc:	ldr	r0, [pc, #32]	; 35d04 <flatcc_builder_start_table@@Base+0x1cc>
   35ce0:	bl	14148 <__assert_fail@plt>
   35ce4:	mvn	r0, #0
   35ce8:	b	35c6c <flatcc_builder_start_table@@Base+0x134>
   35cec:	mvn	r0, #0
   35cf0:	b	35c6c <flatcc_builder_start_table@@Base+0x134>
   35cf4:	svccs	0x00693b52
   35cf8:	strdeq	pc, [r0], -ip
   35cfc:	andeq	r6, r5, r0, ror #5
   35d00:	andeq	r6, r5, r4, lsl r8
   35d04:	andeq	r5, r4, r0, ror #3

00035d08 <flatcc_builder_create_vtable@@Base>:
   35d08:	push	{r4, r5, r6, lr}
   35d0c:	sub	sp, sp, #80	; 0x50
   35d10:	mov	r5, r0
   35d14:	mov	r3, #0
   35d18:	str	r3, [sp, #8]
   35d1c:	str	r3, [sp, #12]
   35d20:	cmp	r2, #0
   35d24:	beq	35da8 <flatcc_builder_create_vtable@@Base+0xa0>
   35d28:	str	r2, [sp, #8]
   35d2c:	str	r1, [sp, #16]
   35d30:	str	r2, [sp, #20]
   35d34:	mov	r3, #1
   35d38:	str	r3, [sp, #12]
   35d3c:	ldr	r3, [r0, #152]	; 0x98
   35d40:	cmp	r3, #0
   35d44:	bne	35dc0 <flatcc_builder_create_vtable@@Base+0xb8>
   35d48:	ldr	r3, [r0, #180]	; 0xb4
   35d4c:	cmp	r3, #0
   35d50:	bne	35dc0 <flatcc_builder_create_vtable@@Base+0xb8>
   35d54:	ldr	r4, [r0, #140]	; 0x8c
   35d58:	mov	r3, r2
   35d5c:	add	r2, r2, r4
   35d60:	str	r2, [r0, #140]	; 0x8c
   35d64:	cmp	r4, r2
   35d68:	ble	35e20 <flatcc_builder_create_vtable@@Base+0x118>
   35d6c:	ldr	r3, [pc, #232]	; 35e5c <flatcc_builder_create_vtable@@Base+0x154>
   35d70:	ldr	r2, [pc, #232]	; 35e60 <flatcc_builder_create_vtable@@Base+0x158>
   35d74:	ldr	r1, [pc, #232]	; 35e64 <flatcc_builder_create_vtable@@Base+0x15c>
   35d78:	ldr	r0, [pc, #232]	; 35e68 <flatcc_builder_create_vtable@@Base+0x160>
   35d7c:	bl	14148 <__assert_fail@plt>
   35d80:	ldr	r3, [pc, #228]	; 35e6c <flatcc_builder_create_vtable@@Base+0x164>
   35d84:	ldr	r2, [pc, #228]	; 35e70 <flatcc_builder_create_vtable@@Base+0x168>
   35d88:	ldr	r1, [pc, #212]	; 35e64 <flatcc_builder_create_vtable@@Base+0x15c>
   35d8c:	ldr	r0, [pc, #212]	; 35e68 <flatcc_builder_create_vtable@@Base+0x160>
   35d90:	bl	14148 <__assert_fail@plt>
   35d94:	ldr	r3, [pc, #208]	; 35e6c <flatcc_builder_create_vtable@@Base+0x164>
   35d98:	ldr	r2, [pc, #212]	; 35e74 <flatcc_builder_create_vtable@@Base+0x16c>
   35d9c:	ldr	r1, [pc, #192]	; 35e64 <flatcc_builder_create_vtable@@Base+0x15c>
   35da0:	ldr	r0, [pc, #192]	; 35e68 <flatcc_builder_create_vtable@@Base+0x160>
   35da4:	bl	14148 <__assert_fail@plt>
   35da8:	ldr	r3, [r0, #152]	; 0x98
   35dac:	cmp	r3, #0
   35db0:	bne	35d80 <flatcc_builder_create_vtable@@Base+0x78>
   35db4:	ldr	r3, [r0, #180]	; 0xb4
   35db8:	cmp	r3, #0
   35dbc:	beq	35e10 <flatcc_builder_create_vtable@@Base+0x108>
   35dc0:	ldr	r2, [r5, #136]	; 0x88
   35dc4:	ldr	r3, [sp, #8]
   35dc8:	sub	r4, r2, r3
   35dcc:	cmp	r2, r4
   35dd0:	ble	35d80 <flatcc_builder_create_vtable@@Base+0x78>
   35dd4:	str	r3, [sp]
   35dd8:	ldr	r6, [r5, #44]	; 0x2c
   35ddc:	mov	r3, r4
   35de0:	ldr	r2, [sp, #12]
   35de4:	add	r1, sp, #16
   35de8:	ldr	r0, [r5, #36]	; 0x24
   35dec:	blx	r6
   35df0:	cmp	r0, #0
   35df4:	bne	35d94 <flatcc_builder_create_vtable@@Base+0x8c>
   35df8:	str	r4, [r5, #136]	; 0x88
   35dfc:	cmp	r4, #0
   35e00:	addne	r4, r4, #1
   35e04:	mov	r0, r4
   35e08:	add	sp, sp, #80	; 0x50
   35e0c:	pop	{r4, r5, r6, pc}
   35e10:	ldr	r4, [r5, #140]	; 0x8c
   35e14:	ldr	r3, [sp, #8]
   35e18:	add	r2, r3, r4
   35e1c:	str	r2, [r5, #140]	; 0x8c
   35e20:	ldr	r0, [r5, #36]	; 0x24
   35e24:	str	r3, [sp]
   35e28:	ldr	r5, [r5, #44]	; 0x2c
   35e2c:	mov	r3, r4
   35e30:	ldr	r2, [sp, #12]
   35e34:	add	r1, sp, #16
   35e38:	blx	r5
   35e3c:	cmp	r0, #0
   35e40:	addeq	r4, r4, #1
   35e44:	beq	35e04 <flatcc_builder_create_vtable@@Base+0xfc>
   35e48:	ldr	r3, [pc, #12]	; 35e5c <flatcc_builder_create_vtable@@Base+0x154>
   35e4c:	ldr	r2, [pc, #36]	; 35e78 <flatcc_builder_create_vtable@@Base+0x170>
   35e50:	ldr	r1, [pc, #12]	; 35e64 <flatcc_builder_create_vtable@@Base+0x15c>
   35e54:	ldr	r0, [pc, #12]	; 35e68 <flatcc_builder_create_vtable@@Base+0x160>
   35e58:	bl	14148 <__assert_fail@plt>
   35e5c:	andeq	r6, r5, r4, asr #5
   35e60:	andeq	r0, r0, r1, lsr #5
   35e64:	andeq	r6, r5, r4, lsl r8
   35e68:	andeq	r5, r4, r0, ror #3
   35e6c:	andeq	r6, r5, r0, lsl r3
   35e70:	andeq	r0, r0, r7, lsl #5
   35e74:	andeq	r0, r0, fp, lsl #5
   35e78:	andeq	r0, r0, r5, lsr #5

00035e7c <flatcc_builder_create_cached_vtable@@Base>:
   35e7c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   35e80:	sub	sp, sp, #28
   35e84:	mov	r8, r0
   35e88:	str	r1, [sp, #8]
   35e8c:	mov	r7, r2
   35e90:	mov	fp, r3
   35e94:	ldr	r4, [r0, #116]	; 0x74
   35e98:	cmp	r4, #0
   35e9c:	beq	35ee4 <flatcc_builder_create_cached_vtable@@Base+0x68>
   35ea0:	ldr	r3, [r8, #116]	; 0x74
   35ea4:	rsb	r3, r3, #32
   35ea8:	lsr	fp, fp, r3
   35eac:	ldr	r3, [r8, #92]	; 0x5c
   35eb0:	str	r3, [sp, #16]
   35eb4:	adds	r2, r3, fp, lsl #2
   35eb8:	str	r2, [sp, #20]
   35ebc:	beq	361b4 <flatcc_builder_create_cached_vtable@@Base+0x338>
   35ec0:	ldr	r5, [r3, fp, lsl #2]
   35ec4:	cmp	r5, #0
   35ec8:	beq	36054 <flatcc_builder_create_cached_vtable@@Base+0x1d8>
   35ecc:	ldr	sl, [r8, #100]	; 0x64
   35ed0:	ldr	r6, [r8, #68]	; 0x44
   35ed4:	mov	r9, r2
   35ed8:	mov	r3, #0
   35edc:	str	r3, [sp, #12]
   35ee0:	b	35fdc <flatcc_builder_create_cached_vtable@@Base+0x160>
   35ee4:	add	r6, r0, #92	; 0x5c
   35ee8:	ldr	r3, [r0, #124]	; 0x7c
   35eec:	cmp	r3, #0
   35ef0:	bne	35f48 <flatcc_builder_create_cached_vtable@@Base+0xcc>
   35ef4:	ldr	r3, [r0, #104]	; 0x68
   35ef8:	cmp	r3, #15
   35efc:	bls	35f5c <flatcc_builder_create_cached_vtable@@Base+0xe0>
   35f00:	ldr	r3, [r8, #100]	; 0x64
   35f04:	cmp	r3, #0
   35f08:	beq	361d4 <flatcc_builder_create_cached_vtable@@Base+0x358>
   35f0c:	mov	r3, #16
   35f10:	str	r3, [r8, #124]	; 0x7c
   35f14:	mov	r3, #5
   35f18:	str	r3, [sp]
   35f1c:	ldr	r5, [r8, #48]	; 0x30
   35f20:	mov	r3, #1
   35f24:	mov	r2, #256	; 0x100
   35f28:	mov	r1, r6
   35f2c:	ldr	r0, [r8, #40]	; 0x28
   35f30:	blx	r5
   35f34:	cmp	r0, #0
   35f38:	bne	361d4 <flatcc_builder_create_cached_vtable@@Base+0x358>
   35f3c:	ldr	r1, [r8, #96]	; 0x60
   35f40:	mov	r3, #256	; 0x100
   35f44:	b	35f9c <flatcc_builder_create_cached_vtable@@Base+0x120>
   35f48:	ldr	r3, [pc, #652]	; 361dc <flatcc_builder_create_cached_vtable@@Base+0x360>
   35f4c:	ldr	r2, [pc, #652]	; 361e0 <flatcc_builder_create_cached_vtable@@Base+0x364>
   35f50:	ldr	r1, [pc, #652]	; 361e4 <flatcc_builder_create_cached_vtable@@Base+0x368>
   35f54:	ldr	r0, [pc, #652]	; 361e8 <flatcc_builder_create_cached_vtable@@Base+0x36c>
   35f58:	bl	14148 <__assert_fail@plt>
   35f5c:	mov	r3, #6
   35f60:	str	r3, [sp]
   35f64:	ldr	r5, [r0, #48]	; 0x30
   35f68:	mov	r3, #0
   35f6c:	mov	r2, #16
   35f70:	add	r1, r0, #100	; 0x64
   35f74:	ldr	r0, [r0, #40]	; 0x28
   35f78:	blx	r5
   35f7c:	cmp	r0, #0
   35f80:	beq	35f00 <flatcc_builder_create_cached_vtable@@Base+0x84>
   35f84:	ldr	r3, [pc, #608]	; 361ec <flatcc_builder_create_cached_vtable@@Base+0x370>
   35f88:	mov	r2, #308	; 0x134
   35f8c:	ldr	r1, [pc, #592]	; 361e4 <flatcc_builder_create_cached_vtable@@Base+0x368>
   35f90:	ldr	r0, [pc, #600]	; 361f0 <flatcc_builder_create_cached_vtable@@Base+0x374>
   35f94:	bl	14148 <__assert_fail@plt>
   35f98:	mov	r3, r2
   35f9c:	lsl	r2, r3, #1
   35fa0:	cmp	r2, r1
   35fa4:	bls	35f98 <flatcc_builder_create_cached_vtable@@Base+0x11c>
   35fa8:	lsr	r3, r3, #2
   35fac:	cmp	r3, #1
   35fb0:	bls	35fc4 <flatcc_builder_create_cached_vtable@@Base+0x148>
   35fb4:	mov	r2, #1
   35fb8:	add	r4, r4, #1
   35fbc:	cmp	r3, r2, lsl r4
   35fc0:	bhi	35fb8 <flatcc_builder_create_cached_vtable@@Base+0x13c>
   35fc4:	str	r4, [r8, #116]	; 0x74
   35fc8:	b	35ea0 <flatcc_builder_create_cached_vtable@@Base+0x24>
   35fcc:	add	r9, r4, #12
   35fd0:	ldr	r5, [r4, #12]
   35fd4:	cmp	r5, #0
   35fd8:	beq	3605c <flatcc_builder_create_cached_vtable@@Base+0x1e0>
   35fdc:	add	r4, sl, r5
   35fe0:	ldr	r3, [r4, #8]
   35fe4:	add	r1, r6, r3
   35fe8:	ldrh	r3, [r6, r3]
   35fec:	cmp	r3, r7
   35ff0:	bne	35fcc <flatcc_builder_create_cached_vtable@@Base+0x150>
   35ff4:	mov	r2, r7
   35ff8:	ldr	r0, [sp, #8]
   35ffc:	bl	13ff8 <memcmp@plt>
   36000:	cmp	r0, #0
   36004:	bne	35fcc <flatcc_builder_create_cached_vtable@@Base+0x150>
   36008:	ldr	r2, [r4, #4]
   3600c:	ldr	r3, [r8, #152]	; 0x98
   36010:	cmp	r2, r3
   36014:	addne	r9, r4, #12
   36018:	ldrne	r5, [r4, #12]
   3601c:	strne	r4, [sp, #12]
   36020:	bne	35fd4 <flatcc_builder_create_cached_vtable@@Base+0x158>
   36024:	ldr	r3, [sp, #20]
   36028:	cmp	r3, r9
   3602c:	beq	36048 <flatcc_builder_create_cached_vtable@@Base+0x1cc>
   36030:	ldr	r3, [r4, #12]
   36034:	str	r3, [r9]
   36038:	ldr	r2, [sp, #16]
   3603c:	ldr	r3, [r2, fp, lsl #2]
   36040:	str	r3, [r4, #12]
   36044:	str	r5, [r2, fp, lsl #2]
   36048:	ldr	r0, [r4]
   3604c:	add	sp, sp, #28
   36050:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   36054:	mov	r3, #0
   36058:	str	r3, [sp, #12]
   3605c:	ldr	r4, [r8, #124]	; 0x7c
   36060:	add	r2, r4, #16
   36064:	ldr	r3, [r8, #104]	; 0x68
   36068:	cmp	r2, r3
   3606c:	bhi	360d8 <flatcc_builder_create_cached_vtable@@Base+0x25c>
   36070:	ldr	r5, [r8, #100]	; 0x64
   36074:	adds	r6, r5, r4
   36078:	beq	361bc <flatcc_builder_create_cached_vtable@@Base+0x340>
   3607c:	ldr	r3, [r8, #124]	; 0x7c
   36080:	add	r2, r3, #16
   36084:	str	r2, [r8, #124]	; 0x7c
   36088:	ldr	r2, [r8, #152]	; 0x98
   3608c:	str	r2, [r6, #4]
   36090:	ldr	r1, [sp, #16]
   36094:	ldr	r2, [r1, fp, lsl #2]
   36098:	str	r2, [r6, #12]
   3609c:	str	r3, [r1, fp, lsl #2]
   360a0:	mov	r2, r7
   360a4:	ldr	r1, [sp, #8]
   360a8:	mov	r0, r8
   360ac:	bl	35d08 <flatcc_builder_create_vtable@@Base>
   360b0:	str	r0, [r5, r4]
   360b4:	cmp	r0, #0
   360b8:	beq	361c4 <flatcc_builder_create_cached_vtable@@Base+0x348>
   360bc:	ldr	r3, [sp, #12]
   360c0:	cmp	r3, #0
   360c4:	beq	36110 <flatcc_builder_create_cached_vtable@@Base+0x294>
   360c8:	ldr	r3, [r3, #8]
   360cc:	str	r3, [r6, #8]
   360d0:	ldr	r0, [r5, r4]
   360d4:	b	3604c <flatcc_builder_create_cached_vtable@@Base+0x1d0>
   360d8:	mov	r3, #6
   360dc:	str	r3, [sp]
   360e0:	ldr	r5, [r8, #48]	; 0x30
   360e4:	mov	r3, #0
   360e8:	add	r1, r8, #100	; 0x64
   360ec:	ldr	r0, [r8, #40]	; 0x28
   360f0:	blx	r5
   360f4:	cmp	r0, #0
   360f8:	beq	36070 <flatcc_builder_create_cached_vtable@@Base+0x1f4>
   360fc:	ldr	r3, [pc, #232]	; 361ec <flatcc_builder_create_cached_vtable@@Base+0x370>
   36100:	mov	r2, #308	; 0x134
   36104:	ldr	r1, [pc, #216]	; 361e4 <flatcc_builder_create_cached_vtable@@Base+0x368>
   36108:	ldr	r0, [pc, #224]	; 361f0 <flatcc_builder_create_cached_vtable@@Base+0x374>
   3610c:	bl	14148 <__assert_fail@plt>
   36110:	ldr	r2, [r8, #172]	; 0xac
   36114:	cmp	r2, #0
   36118:	beq	3612c <flatcc_builder_create_cached_vtable@@Base+0x2b0>
   3611c:	ldr	r3, [r8, #120]	; 0x78
   36120:	add	r3, r7, r3
   36124:	cmp	r2, r3
   36128:	bcc	36170 <flatcc_builder_create_cached_vtable@@Base+0x2f4>
   3612c:	ldr	r9, [r8, #120]	; 0x78
   36130:	add	r2, r9, r7
   36134:	ldr	r3, [r8, #72]	; 0x48
   36138:	cmp	r2, r3
   3613c:	bhi	3617c <flatcc_builder_create_cached_vtable@@Base+0x300>
   36140:	ldr	r3, [r8, #68]	; 0x44
   36144:	adds	r0, r3, r9
   36148:	beq	361cc <flatcc_builder_create_cached_vtable@@Base+0x350>
   3614c:	ldr	r3, [r8, #120]	; 0x78
   36150:	str	r3, [r6, #8]
   36154:	ldr	r3, [r8, #120]	; 0x78
   36158:	add	r3, r3, r7
   3615c:	str	r3, [r8, #120]	; 0x78
   36160:	mov	r2, r7
   36164:	ldr	r1, [sp, #8]
   36168:	bl	13fe0 <memcpy@plt>
   3616c:	b	360d0 <flatcc_builder_create_cached_vtable@@Base+0x254>
   36170:	mov	r0, r8
   36174:	bl	3433c <flatcc_builder_flush_vtable_cache@@Base>
   36178:	b	360d0 <flatcc_builder_create_cached_vtable@@Base+0x254>
   3617c:	mov	r3, #2
   36180:	str	r3, [sp]
   36184:	ldr	sl, [r8, #48]	; 0x30
   36188:	mov	r3, #0
   3618c:	add	r1, r8, #68	; 0x44
   36190:	ldr	r0, [r8, #40]	; 0x28
   36194:	blx	sl
   36198:	cmp	r0, #0
   3619c:	beq	36140 <flatcc_builder_create_cached_vtable@@Base+0x2c4>
   361a0:	ldr	r3, [pc, #68]	; 361ec <flatcc_builder_create_cached_vtable@@Base+0x370>
   361a4:	mov	r2, #308	; 0x134
   361a8:	ldr	r1, [pc, #52]	; 361e4 <flatcc_builder_create_cached_vtable@@Base+0x368>
   361ac:	ldr	r0, [pc, #60]	; 361f0 <flatcc_builder_create_cached_vtable@@Base+0x374>
   361b0:	bl	14148 <__assert_fail@plt>
   361b4:	mov	r0, #0
   361b8:	b	3604c <flatcc_builder_create_cached_vtable@@Base+0x1d0>
   361bc:	mov	r0, #0
   361c0:	b	3604c <flatcc_builder_create_cached_vtable@@Base+0x1d0>
   361c4:	mov	r0, #0
   361c8:	b	3604c <flatcc_builder_create_cached_vtable@@Base+0x1d0>
   361cc:	mvn	r0, #0
   361d0:	b	3604c <flatcc_builder_create_cached_vtable@@Base+0x1d0>
   361d4:	mov	r0, #0
   361d8:	b	3604c <flatcc_builder_create_cached_vtable@@Base+0x1d0>
   361dc:	andeq	r6, r5, r4, asr r5
   361e0:	andeq	r0, r0, r6, asr r1
   361e4:	andeq	r6, r5, r4, lsl r8
   361e8:	andeq	r6, r5, r8, lsr #21
   361ec:	andeq	r6, r5, r0, ror #5
   361f0:	andeq	r5, r4, r0, ror #3

000361f4 <flatcc_builder_create_table@@Base>:
   361f4:	push	{r4, r5, r6, r7, lr}
   361f8:	sub	sp, sp, #92	; 0x5c
   361fc:	ldr	r4, [sp, #116]	; 0x74
   36200:	ldr	ip, [sp, #120]	; 0x78
   36204:	cmp	r4, #0
   36208:	blt	36348 <flatcc_builder_create_table@@Base+0x154>
   3620c:	mov	r5, r0
   36210:	tst	ip, #1
   36214:	beq	3635c <flatcc_builder_create_table@@Base+0x168>
   36218:	cmp	r3, #4
   3621c:	movcs	r0, r3
   36220:	movcc	r0, #4
   36224:	ldrh	r3, [r5, #128]	; 0x80
   36228:	cmp	r3, r0
   3622c:	strhcc	r0, [r5, #128]	; 0x80
   36230:	ldr	lr, [r5, #136]	; 0x88
   36234:	sub	r7, lr, r2
   36238:	sub	r0, r0, #1
   3623c:	and	r7, r7, r0
   36240:	mvn	r3, #3
   36244:	sub	r3, r3, r2
   36248:	add	r3, r3, lr
   3624c:	sub	r3, r3, r7
   36250:	sub	ip, ip, #1
   36254:	sub	ip, r3, ip
   36258:	str	ip, [sp, #84]	; 0x54
   3625c:	cmp	r4, #0
   36260:	ble	36290 <flatcc_builder_create_table@@Base+0x9c>
   36264:	ldr	ip, [sp, #112]	; 0x70
   36268:	add	r4, ip, r4, lsl #1
   3626c:	mvn	r6, #3
   36270:	sub	r6, r6, r3
   36274:	ldrh	r3, [ip], #2
   36278:	sub	lr, r6, r3
   3627c:	ldr	r0, [r1, r3]
   36280:	add	r0, r0, lr
   36284:	str	r0, [r1, r3]
   36288:	cmp	ip, r4
   3628c:	bne	36274 <flatcc_builder_create_table@@Base+0x80>
   36290:	mov	r3, #4
   36294:	str	r3, [sp, #12]
   36298:	add	r0, sp, #84	; 0x54
   3629c:	str	r0, [sp, #20]
   362a0:	str	r3, [sp, #24]
   362a4:	mov	r3, #1
   362a8:	str	r3, [sp, #16]
   362ac:	cmp	r2, #0
   362b0:	beq	362cc <flatcc_builder_create_table@@Base+0xd8>
   362b4:	add	r3, r2, #4
   362b8:	str	r3, [sp, #12]
   362bc:	str	r1, [sp, #28]
   362c0:	str	r2, [sp, #32]
   362c4:	mov	r3, #2
   362c8:	str	r3, [sp, #16]
   362cc:	cmp	r7, #0
   362d0:	beq	36300 <flatcc_builder_create_table@@Base+0x10c>
   362d4:	ldr	r3, [sp, #12]
   362d8:	add	r3, r3, r7
   362dc:	str	r3, [sp, #12]
   362e0:	ldr	r3, [sp, #16]
   362e4:	add	r3, r3, #1
   362e8:	add	r2, sp, #88	; 0x58
   362ec:	add	r2, r2, r3, lsl #3
   362f0:	ldr	r1, [pc, #160]	; 36398 <flatcc_builder_create_table@@Base+0x1a4>
   362f4:	str	r1, [r2, #-76]	; 0xffffffb4
   362f8:	str	r7, [r2, #-72]	; 0xffffffb8
   362fc:	str	r3, [sp, #16]
   36300:	ldr	r2, [r5, #136]	; 0x88
   36304:	ldr	r3, [sp, #12]
   36308:	sub	r4, r2, r3
   3630c:	cmp	r2, r4
   36310:	ble	36370 <flatcc_builder_create_table@@Base+0x17c>
   36314:	str	r3, [sp]
   36318:	ldr	r6, [r5, #44]	; 0x2c
   3631c:	mov	r3, r4
   36320:	ldr	r2, [sp, #16]
   36324:	add	r1, sp, #20
   36328:	ldr	r0, [r5, #36]	; 0x24
   3632c:	blx	r6
   36330:	cmp	r0, #0
   36334:	bne	36384 <flatcc_builder_create_table@@Base+0x190>
   36338:	str	r4, [r5, #136]	; 0x88
   3633c:	mov	r0, r4
   36340:	add	sp, sp, #92	; 0x5c
   36344:	pop	{r4, r5, r6, r7, pc}
   36348:	ldr	r3, [pc, #76]	; 3639c <flatcc_builder_create_table@@Base+0x1a8>
   3634c:	ldr	r2, [pc, #76]	; 363a0 <flatcc_builder_create_table@@Base+0x1ac>
   36350:	ldr	r1, [pc, #76]	; 363a4 <flatcc_builder_create_table@@Base+0x1b0>
   36354:	ldr	r0, [pc, #76]	; 363a8 <flatcc_builder_create_table@@Base+0x1b4>
   36358:	bl	14148 <__assert_fail@plt>
   3635c:	ldr	r3, [pc, #56]	; 3639c <flatcc_builder_create_table@@Base+0x1a8>
   36360:	ldr	r2, [pc, #68]	; 363ac <flatcc_builder_create_table@@Base+0x1b8>
   36364:	ldr	r1, [pc, #56]	; 363a4 <flatcc_builder_create_table@@Base+0x1b0>
   36368:	ldr	r0, [pc, #64]	; 363b0 <flatcc_builder_create_table@@Base+0x1bc>
   3636c:	bl	14148 <__assert_fail@plt>
   36370:	ldr	r3, [pc, #60]	; 363b4 <flatcc_builder_create_table@@Base+0x1c0>
   36374:	ldr	r2, [pc, #60]	; 363b8 <flatcc_builder_create_table@@Base+0x1c4>
   36378:	ldr	r1, [pc, #36]	; 363a4 <flatcc_builder_create_table@@Base+0x1b0>
   3637c:	ldr	r0, [pc, #56]	; 363bc <flatcc_builder_create_table@@Base+0x1c8>
   36380:	bl	14148 <__assert_fail@plt>
   36384:	ldr	r3, [pc, #40]	; 363b4 <flatcc_builder_create_table@@Base+0x1c0>
   36388:	ldr	r2, [pc, #48]	; 363c0 <flatcc_builder_create_table@@Base+0x1cc>
   3638c:	ldr	r1, [pc, #16]	; 363a4 <flatcc_builder_create_table@@Base+0x1b0>
   36390:	ldr	r0, [pc, #36]	; 363bc <flatcc_builder_create_table@@Base+0x1c8>
   36394:	bl	14148 <__assert_fail@plt>
   36398:	andeq	r6, r5, r4, asr #1
   3639c:	andeq	r6, r5, r0, ror #10
   363a0:	ldrdeq	r0, [r0], -r5
   363a4:	andeq	r6, r5, r4, lsl r8
   363a8:			; <UNDEFINED> instruction: 0x00056ab8
   363ac:	ldrdeq	r0, [r0], -fp
   363b0:	andeq	r6, r5, ip, asr #21
   363b4:	andeq	r6, r5, r0, lsl r3
   363b8:	andeq	r0, r0, r7, lsl #5
   363bc:	andeq	r5, r4, r0, ror #3
   363c0:	andeq	r0, r0, fp, lsl #5

000363c4 <flatcc_builder_check_required_field@@Base>:
   363c4:	ldr	r3, [r0, #32]
   363c8:	ldrh	r3, [r3, #14]
   363cc:	cmp	r3, #3
   363d0:	bne	363fc <flatcc_builder_check_required_field@@Base+0x38>
   363d4:	ldrh	r3, [r0, #8]
   363d8:	cmp	r3, r1
   363dc:	movls	r0, #0
   363e0:	bls	363f8 <flatcc_builder_check_required_field@@Base+0x34>
   363e4:	ldr	r3, [r0, #4]
   363e8:	lsl	r1, r1, #1
   363ec:	ldrh	r0, [r3, r1]
   363f0:	adds	r0, r0, #0
   363f4:	movne	r0, #1
   363f8:	bx	lr
   363fc:	push	{r4, lr}
   36400:	ldr	r3, [pc, #12]	; 36414 <flatcc_builder_check_required_field@@Base+0x50>
   36404:	ldr	r2, [pc, #12]	; 36418 <flatcc_builder_check_required_field@@Base+0x54>
   36408:	ldr	r1, [pc, #12]	; 3641c <flatcc_builder_check_required_field@@Base+0x58>
   3640c:	ldr	r0, [pc, #12]	; 36420 <flatcc_builder_check_required_field@@Base+0x5c>
   36410:	bl	14148 <__assert_fail@plt>
   36414:	andeq	r6, r5, ip, ror r5
   36418:	strdeq	r0, [r0], -r8
   3641c:	andeq	r6, r5, r4, lsl r8
   36420:	ldrdeq	r6, [r5], -r8

00036424 <flatcc_builder_check_union_field@@Base>:
   36424:	ldr	r3, [r0, #32]
   36428:	ldrh	r3, [r3, #14]
   3642c:	cmp	r3, #3
   36430:	bne	3648c <flatcc_builder_check_union_field@@Base+0x68>
   36434:	cmp	r1, #0
   36438:	moveq	r0, #0
   3643c:	beq	364b4 <flatcc_builder_check_union_field@@Base+0x90>
   36440:	ldrh	r3, [r0, #8]
   36444:	cmp	r3, r1
   36448:	movls	r0, #0
   3644c:	bls	364b4 <flatcc_builder_check_union_field@@Base+0x90>
   36450:	ldr	r3, [r0, #4]
   36454:	sub	r1, r1, #-2147483647	; 0x80000001
   36458:	lsl	r1, r1, #1
   3645c:	ldrh	r2, [r3, r1]
   36460:	cmp	r2, #0
   36464:	beq	364a4 <flatcc_builder_check_union_field@@Base+0x80>
   36468:	ldr	r0, [r0, #16]
   3646c:	ldrb	r2, [r0, r2]
   36470:	cmp	r2, #0
   36474:	bne	364b8 <flatcc_builder_check_union_field@@Base+0x94>
   36478:	add	r1, r3, r1
   3647c:	ldrh	r0, [r1, #2]
   36480:	clz	r0, r0
   36484:	lsr	r0, r0, #5
   36488:	b	364b4 <flatcc_builder_check_union_field@@Base+0x90>
   3648c:	push	{r4, lr}
   36490:	ldr	r3, [pc, #52]	; 364cc <flatcc_builder_check_union_field@@Base+0xa8>
   36494:	ldr	r2, [pc, #52]	; 364d0 <flatcc_builder_check_union_field@@Base+0xac>
   36498:	ldr	r1, [pc, #52]	; 364d4 <flatcc_builder_check_union_field@@Base+0xb0>
   3649c:	ldr	r0, [pc, #52]	; 364d8 <flatcc_builder_check_union_field@@Base+0xb4>
   364a0:	bl	14148 <__assert_fail@plt>
   364a4:	add	r1, r3, r1
   364a8:	ldrh	r0, [r1, #2]
   364ac:	clz	r0, r0
   364b0:	lsr	r0, r0, #5
   364b4:	bx	lr
   364b8:	add	r1, r3, r1
   364bc:	ldrh	r0, [r1, #2]
   364c0:	adds	r0, r0, #0
   364c4:	movne	r0, #1
   364c8:	b	364b4 <flatcc_builder_check_union_field@@Base+0x90>
   364cc:	andeq	r6, r5, r0, lsr #11
   364d0:	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
   364d4:	andeq	r6, r5, r4, lsl r8
   364d8:	ldrdeq	r6, [r5], -r8

000364dc <flatcc_builder_check_required@@Base>:
   364dc:	ldr	r3, [r0, #32]
   364e0:	ldrh	r3, [r3, #14]
   364e4:	cmp	r3, #3
   364e8:	bne	36548 <flatcc_builder_check_required@@Base+0x6c>
   364ec:	ldrh	r3, [r0, #8]
   364f0:	cmp	r3, r2
   364f4:	movlt	r0, #0
   364f8:	blt	36564 <flatcc_builder_check_required@@Base+0x88>
   364fc:	cmp	r2, #0
   36500:	ble	36568 <flatcc_builder_check_required@@Base+0x8c>
   36504:	ldr	ip, [r0, #4]
   36508:	ldrh	r3, [r1]
   3650c:	lsl	r3, r3, #1
   36510:	ldrh	r3, [ip, r3]
   36514:	cmp	r3, #0
   36518:	beq	36570 <flatcc_builder_check_required@@Base+0x94>
   3651c:	add	r0, r1, #2
   36520:	add	r2, r1, r2, lsl #1
   36524:	cmp	r0, r2
   36528:	beq	36560 <flatcc_builder_check_required@@Base+0x84>
   3652c:	ldrh	r3, [r0], #2
   36530:	lsl	r3, r3, #1
   36534:	ldrh	r3, [ip, r3]
   36538:	cmp	r3, #0
   3653c:	bne	36524 <flatcc_builder_check_required@@Base+0x48>
   36540:	mov	r0, #0
   36544:	b	36564 <flatcc_builder_check_required@@Base+0x88>
   36548:	push	{r4, lr}
   3654c:	ldr	r3, [pc, #36]	; 36578 <flatcc_builder_check_required@@Base+0x9c>
   36550:	ldr	r2, [pc, #36]	; 3657c <flatcc_builder_check_required@@Base+0xa0>
   36554:	ldr	r1, [pc, #36]	; 36580 <flatcc_builder_check_required@@Base+0xa4>
   36558:	ldr	r0, [pc, #36]	; 36584 <flatcc_builder_check_required@@Base+0xa8>
   3655c:	bl	14148 <__assert_fail@plt>
   36560:	mov	r0, #1
   36564:	bx	lr
   36568:	mov	r0, #1
   3656c:	b	36564 <flatcc_builder_check_required@@Base+0x88>
   36570:	mov	r0, #0
   36574:	b	36564 <flatcc_builder_check_required@@Base+0x88>
   36578:	andeq	r6, r5, r4, asr #11
   3657c:	andeq	r0, r0, r1, lsl r5
   36580:	andeq	r6, r5, r4, lsl r8
   36584:	ldrdeq	r6, [r5], -r8

00036588 <flatcc_builder_end_table@@Base>:
   36588:	push	{r4, r5, r6, r7, lr}
   3658c:	sub	sp, sp, #20
   36590:	ldr	r3, [r0, #32]
   36594:	ldrh	r3, [r3, #14]
   36598:	cmp	r3, #3
   3659c:	bne	3660c <flatcc_builder_end_table@@Base+0x84>
   365a0:	mov	r4, r0
   365a4:	ldr	r1, [r0, #4]
   365a8:	sub	r6, r1, #4
   365ac:	ldrh	r5, [r0, #8]
   365b0:	add	r5, r5, #2
   365b4:	lsl	r5, r5, #1
   365b8:	uxth	r5, r5
   365bc:	strh	r5, [r1, #-4]
   365c0:	ldr	r3, [r0, #20]
   365c4:	add	r3, r3, #4
   365c8:	uxth	r2, r3
   365cc:	strh	r2, [r1, #-2]
   365d0:	ldr	r3, [r0, #12]
   365d4:	eor	r3, r3, r5
   365d8:	ldr	r1, [pc, #328]	; 36728 <flatcc_builder_end_table@@Base+0x1a0>
   365dc:	mul	r3, r1, r3
   365e0:	eor	r3, r3, r2
   365e4:	mul	r3, r1, r3
   365e8:	str	r3, [r0, #12]
   365ec:	mov	r2, r5
   365f0:	mov	r1, r6
   365f4:	bl	35e7c <flatcc_builder_create_cached_vtable@@Base>
   365f8:	subs	r7, r0, #0
   365fc:	bne	36620 <flatcc_builder_end_table@@Base+0x98>
   36600:	mov	r0, r7
   36604:	add	sp, sp, #20
   36608:	pop	{r4, r5, r6, r7, pc}
   3660c:	ldr	r3, [pc, #280]	; 3672c <flatcc_builder_end_table@@Base+0x1a4>
   36610:	ldr	r2, [pc, #280]	; 36730 <flatcc_builder_end_table@@Base+0x1a8>
   36614:	ldr	r1, [pc, #280]	; 36734 <flatcc_builder_end_table@@Base+0x1ac>
   36618:	ldr	r0, [pc, #280]	; 36738 <flatcc_builder_end_table@@Base+0x1b0>
   3661c:	bl	14148 <__assert_fail@plt>
   36620:	mov	r2, r5
   36624:	mov	r1, #0
   36628:	mov	r0, r6
   3662c:	bl	140ac <memset@plt>
   36630:	ldr	r3, [r4, #32]
   36634:	ldr	r1, [r4, #76]	; 0x4c
   36638:	ldr	r3, [r3, #20]
   3663c:	add	r1, r1, r3
   36640:	ldrh	r3, [r4, #130]	; 0x82
   36644:	str	r7, [sp, #8]
   36648:	ldr	r2, [r4]
   3664c:	sub	r2, r2, r1
   36650:	asr	r2, r2, #1
   36654:	str	r2, [sp, #4]
   36658:	str	r1, [sp]
   3665c:	ldr	r2, [r4, #20]
   36660:	ldr	r1, [r4, #16]
   36664:	mov	r0, r4
   36668:	bl	361f4 <flatcc_builder_create_table@@Base>
   3666c:	subs	r7, r0, #0
   36670:	beq	36600 <flatcc_builder_end_table@@Base+0x78>
   36674:	ldr	r3, [r4, #32]
   36678:	ldr	r2, [r3, #24]
   3667c:	str	r2, [r4, #12]
   36680:	ldrh	r2, [r3, #28]
   36684:	strh	r2, [r4, #8]
   36688:	ldr	r2, [r4, #52]	; 0x34
   3668c:	ldr	r1, [r3, #16]
   36690:	add	r2, r2, r1
   36694:	str	r2, [r4, #4]
   36698:	ldr	r2, [r4, #76]	; 0x4c
   3669c:	ldr	r3, [r3, #20]
   366a0:	add	r3, r2, r3
   366a4:	str	r3, [r4]
   366a8:	ldr	r2, [r4, #20]
   366ac:	mov	r1, #0
   366b0:	ldr	r0, [r4, #16]
   366b4:	bl	140ac <memset@plt>
   366b8:	ldr	r2, [r4, #32]
   366bc:	ldr	r3, [r2, #8]
   366c0:	str	r3, [r4, #20]
   366c4:	ldr	r0, [r2]
   366c8:	str	r0, [r4, #28]
   366cc:	ldr	r1, [r2, #4]
   366d0:	ldr	r3, [r4, #60]	; 0x3c
   366d4:	add	r3, r3, r0
   366d8:	str	r3, [r4, #16]
   366dc:	ldr	r3, [r4, #64]	; 0x40
   366e0:	sub	r3, r3, r0
   366e4:	cmp	r3, r1
   366e8:	movcs	r3, r1
   366ec:	str	r3, [r4, #24]
   366f0:	str	r1, [r2, #4]
   366f4:	ldrh	r3, [r4, #130]	; 0x82
   366f8:	ldrh	r2, [r4, #128]	; 0x80
   366fc:	cmp	r2, r3
   36700:	strhcc	r3, [r4, #128]	; 0x80
   36704:	ldr	r3, [r4, #32]
   36708:	ldrh	r2, [r3, #12]
   3670c:	strh	r2, [r4, #130]	; 0x82
   36710:	sub	r3, r3, #36	; 0x24
   36714:	str	r3, [r4, #32]
   36718:	ldr	r3, [r4, #156]	; 0x9c
   3671c:	sub	r3, r3, #1
   36720:	str	r3, [r4, #156]	; 0x9c
   36724:	b	36600 <flatcc_builder_end_table@@Base+0x78>
   36728:			; <UNDEFINED> instruction: 0x9e3779b1
   3672c:	andeq	r6, r5, r4, ror #11
   36730:	andeq	r0, r0, r5, lsr #10
   36734:	andeq	r6, r5, r4, lsl r8
   36738:	ldrdeq	r6, [r5], -r8

0003673c <flatcc_builder_create_vector@@Base>:
   3673c:	push	{r4, r5, r6, lr}
   36740:	sub	sp, sp, #88	; 0x58
   36744:	mov	r4, r0
   36748:	ldrh	r0, [sp, #104]	; 0x68
   3674c:	ldr	ip, [sp, #108]	; 0x6c
   36750:	cmp	r2, ip
   36754:	bhi	36838 <flatcc_builder_create_vector@@Base+0xfc>
   36758:	cmp	r0, #4
   3675c:	movcc	r0, #4
   36760:	ldrh	ip, [r4, #128]	; 0x80
   36764:	cmp	ip, r0
   36768:	strhcc	r0, [r4, #128]	; 0x80
   3676c:	mul	r3, r3, r2
   36770:	str	r2, [sp, #84]	; 0x54
   36774:	ldr	r2, [r4, #136]	; 0x88
   36778:	sub	ip, r2, r3
   3677c:	sub	r0, r0, #1
   36780:	and	r0, r0, ip
   36784:	mov	ip, #4
   36788:	str	ip, [sp, #12]
   3678c:	add	lr, sp, #84	; 0x54
   36790:	str	lr, [sp, #20]
   36794:	str	ip, [sp, #24]
   36798:	mov	ip, #1
   3679c:	str	ip, [sp, #16]
   367a0:	cmp	r3, #0
   367a4:	beq	367c0 <flatcc_builder_create_vector@@Base+0x84>
   367a8:	add	ip, r3, #4
   367ac:	str	ip, [sp, #12]
   367b0:	str	r1, [sp, #28]
   367b4:	str	r3, [sp, #32]
   367b8:	mov	r3, #2
   367bc:	str	r3, [sp, #16]
   367c0:	cmp	r0, #0
   367c4:	beq	367f4 <flatcc_builder_create_vector@@Base+0xb8>
   367c8:	ldr	r3, [sp, #12]
   367cc:	add	r3, r3, r0
   367d0:	str	r3, [sp, #12]
   367d4:	ldr	r3, [sp, #16]
   367d8:	add	r3, r3, #1
   367dc:	add	r1, sp, #88	; 0x58
   367e0:	add	r1, r1, r3, lsl #3
   367e4:	ldr	ip, [pc, #136]	; 36874 <flatcc_builder_create_vector@@Base+0x138>
   367e8:	str	ip, [r1, #-76]	; 0xffffffb4
   367ec:	str	r0, [r1, #-72]	; 0xffffffb8
   367f0:	str	r3, [sp, #16]
   367f4:	ldr	r3, [sp, #12]
   367f8:	sub	r5, r2, r3
   367fc:	cmp	r2, r5
   36800:	ble	3684c <flatcc_builder_create_vector@@Base+0x110>
   36804:	str	r3, [sp]
   36808:	ldr	r6, [r4, #44]	; 0x2c
   3680c:	mov	r3, r5
   36810:	ldr	r2, [sp, #16]
   36814:	add	r1, sp, #20
   36818:	ldr	r0, [r4, #36]	; 0x24
   3681c:	blx	r6
   36820:	cmp	r0, #0
   36824:	bne	36860 <flatcc_builder_create_vector@@Base+0x124>
   36828:	str	r5, [r4, #136]	; 0x88
   3682c:	mov	r0, r5
   36830:	add	sp, sp, #88	; 0x58
   36834:	pop	{r4, r5, r6, pc}
   36838:	ldr	r3, [pc, #56]	; 36878 <flatcc_builder_create_vector@@Base+0x13c>
   3683c:	ldr	r2, [pc, #56]	; 3687c <flatcc_builder_create_vector@@Base+0x140>
   36840:	ldr	r1, [pc, #56]	; 36880 <flatcc_builder_create_vector@@Base+0x144>
   36844:	ldr	r0, [pc, #56]	; 36884 <flatcc_builder_create_vector@@Base+0x148>
   36848:	bl	14148 <__assert_fail@plt>
   3684c:	ldr	r3, [pc, #52]	; 36888 <flatcc_builder_create_vector@@Base+0x14c>
   36850:	ldr	r2, [pc, #52]	; 3688c <flatcc_builder_create_vector@@Base+0x150>
   36854:	ldr	r1, [pc, #36]	; 36880 <flatcc_builder_create_vector@@Base+0x144>
   36858:	ldr	r0, [pc, #48]	; 36890 <flatcc_builder_create_vector@@Base+0x154>
   3685c:	bl	14148 <__assert_fail@plt>
   36860:	ldr	r3, [pc, #32]	; 36888 <flatcc_builder_create_vector@@Base+0x14c>
   36864:	ldr	r2, [pc, #40]	; 36894 <flatcc_builder_create_vector@@Base+0x158>
   36868:	ldr	r1, [pc, #16]	; 36880 <flatcc_builder_create_vector@@Base+0x144>
   3686c:	ldr	r0, [pc, #28]	; 36890 <flatcc_builder_create_vector@@Base+0x154>
   36870:	bl	14148 <__assert_fail@plt>
   36874:	andeq	r6, r5, r4, asr #1
   36878:	andeq	r6, r5, r0, lsl #12
   3687c:	andeq	r0, r0, r5, asr r5
   36880:	andeq	r6, r5, r4, lsl r8
   36884:	andeq	r6, r5, r4, lsl #22
   36888:	andeq	r6, r5, r0, lsl r3
   3688c:	andeq	r0, r0, r7, lsl #5
   36890:	andeq	r5, r4, r0, ror #3
   36894:	andeq	r0, r0, fp, lsl #5

00036898 <flatcc_builder_end_vector@@Base>:
   36898:	push	{r4, r5, lr}
   3689c:	sub	sp, sp, #12
   368a0:	ldr	r1, [r0, #32]
   368a4:	ldrh	r3, [r1, #14]
   368a8:	cmp	r3, #4
   368ac:	bne	368e8 <flatcc_builder_end_vector@@Base+0x50>
   368b0:	mov	r4, r0
   368b4:	ldr	r3, [r1, #16]
   368b8:	ldr	r2, [r1, #20]
   368bc:	ldr	r1, [r1, #24]
   368c0:	str	r1, [sp, #4]
   368c4:	ldrh	r1, [r0, #130]	; 0x82
   368c8:	str	r1, [sp]
   368cc:	ldr	r1, [r0, #16]
   368d0:	bl	3673c <flatcc_builder_create_vector@@Base>
   368d4:	subs	r5, r0, #0
   368d8:	bne	368fc <flatcc_builder_end_vector@@Base+0x64>
   368dc:	mov	r0, r5
   368e0:	add	sp, sp, #12
   368e4:	pop	{r4, r5, pc}
   368e8:	ldr	r3, [pc, #140]	; 3697c <flatcc_builder_end_vector@@Base+0xe4>
   368ec:	ldr	r2, [pc, #140]	; 36980 <flatcc_builder_end_vector@@Base+0xe8>
   368f0:	ldr	r1, [pc, #140]	; 36984 <flatcc_builder_end_vector@@Base+0xec>
   368f4:	ldr	r0, [pc, #140]	; 36988 <flatcc_builder_end_vector@@Base+0xf0>
   368f8:	bl	14148 <__assert_fail@plt>
   368fc:	ldr	r2, [r4, #20]
   36900:	mov	r1, #0
   36904:	ldr	r0, [r4, #16]
   36908:	bl	140ac <memset@plt>
   3690c:	ldr	r2, [r4, #32]
   36910:	ldr	r3, [r2, #8]
   36914:	str	r3, [r4, #20]
   36918:	ldr	r0, [r2]
   3691c:	str	r0, [r4, #28]
   36920:	ldr	r1, [r2, #4]
   36924:	ldr	r3, [r4, #60]	; 0x3c
   36928:	add	r3, r3, r0
   3692c:	str	r3, [r4, #16]
   36930:	ldr	r3, [r4, #64]	; 0x40
   36934:	sub	r3, r3, r0
   36938:	cmp	r3, r1
   3693c:	movcs	r3, r1
   36940:	str	r3, [r4, #24]
   36944:	str	r1, [r2, #4]
   36948:	ldrh	r3, [r4, #130]	; 0x82
   3694c:	ldrh	r2, [r4, #128]	; 0x80
   36950:	cmp	r2, r3
   36954:	strhcc	r3, [r4, #128]	; 0x80
   36958:	ldr	r3, [r4, #32]
   3695c:	ldrh	r2, [r3, #12]
   36960:	strh	r2, [r4, #130]	; 0x82
   36964:	sub	r3, r3, #36	; 0x24
   36968:	str	r3, [r4, #32]
   3696c:	ldr	r3, [r4, #156]	; 0x9c
   36970:	sub	r3, r3, #1
   36974:	str	r3, [r4, #156]	; 0x9c
   36978:	b	368dc <flatcc_builder_end_vector@@Base+0x44>
   3697c:	andeq	r6, r5, r0, lsr #12
   36980:	andeq	r0, r0, r8, ror r5
   36984:	andeq	r6, r5, r4, lsl r8
   36988:	andeq	r6, r5, ip, asr #18

0003698c <flatcc_builder_vector_count@@Base>:
   3698c:	ldr	r3, [r0, #32]
   36990:	ldr	r0, [r3, #20]
   36994:	bx	lr

00036998 <flatcc_builder_vector_edit@@Base>:
   36998:	ldr	r0, [r0, #16]
   3699c:	bx	lr

000369a0 <flatcc_builder_create_offset_vector_direct@@Base>:
   369a0:	push	{r4, lr}
   369a4:	mov	r3, #0
   369a8:	bl	34144 <flatcc_builder_default_alloc@@Base+0x378>
   369ac:	pop	{r4, pc}

000369b0 <flatcc_builder_end_offset_vector@@Base>:
   369b0:	push	{r4, r5, r6, lr}
   369b4:	ldr	r3, [r0, #32]
   369b8:	ldrh	r2, [r3, #14]
   369bc:	cmp	r2, #5
   369c0:	bne	369e4 <flatcc_builder_end_offset_vector@@Base+0x34>
   369c4:	mov	r4, r0
   369c8:	ldr	r2, [r3, #20]
   369cc:	ldr	r1, [r0, #16]
   369d0:	bl	369a0 <flatcc_builder_create_offset_vector_direct@@Base>
   369d4:	subs	r5, r0, #0
   369d8:	bne	369f8 <flatcc_builder_end_offset_vector@@Base+0x48>
   369dc:	mov	r0, r5
   369e0:	pop	{r4, r5, r6, pc}
   369e4:	ldr	r3, [pc, #140]	; 36a78 <flatcc_builder_end_offset_vector@@Base+0xc8>
   369e8:	ldr	r2, [pc, #140]	; 36a7c <flatcc_builder_end_offset_vector@@Base+0xcc>
   369ec:	ldr	r1, [pc, #140]	; 36a80 <flatcc_builder_end_offset_vector@@Base+0xd0>
   369f0:	ldr	r0, [pc, #140]	; 36a84 <flatcc_builder_end_offset_vector@@Base+0xd4>
   369f4:	bl	14148 <__assert_fail@plt>
   369f8:	ldr	r2, [r4, #20]
   369fc:	mov	r1, #0
   36a00:	ldr	r0, [r4, #16]
   36a04:	bl	140ac <memset@plt>
   36a08:	ldr	r2, [r4, #32]
   36a0c:	ldr	r3, [r2, #8]
   36a10:	str	r3, [r4, #20]
   36a14:	ldr	r0, [r2]
   36a18:	str	r0, [r4, #28]
   36a1c:	ldr	r1, [r2, #4]
   36a20:	ldr	r3, [r4, #60]	; 0x3c
   36a24:	add	r3, r3, r0
   36a28:	str	r3, [r4, #16]
   36a2c:	ldr	r3, [r4, #64]	; 0x40
   36a30:	sub	r3, r3, r0
   36a34:	cmp	r3, r1
   36a38:	movcs	r3, r1
   36a3c:	str	r3, [r4, #24]
   36a40:	str	r1, [r2, #4]
   36a44:	ldrh	r3, [r4, #130]	; 0x82
   36a48:	ldrh	r2, [r4, #128]	; 0x80
   36a4c:	cmp	r2, r3
   36a50:	strhcc	r3, [r4, #128]	; 0x80
   36a54:	ldr	r3, [r4, #32]
   36a58:	ldrh	r2, [r3, #12]
   36a5c:	strh	r2, [r4, #130]	; 0x82
   36a60:	sub	r3, r3, #36	; 0x24
   36a64:	str	r3, [r4, #32]
   36a68:	ldr	r3, [r4, #156]	; 0x9c
   36a6c:	sub	r3, r3, #1
   36a70:	str	r3, [r4, #156]	; 0x9c
   36a74:	b	369dc <flatcc_builder_end_offset_vector@@Base+0x2c>
   36a78:	andeq	r6, r5, ip, lsr r6
   36a7c:	andeq	r0, r0, r8, asr #11
   36a80:	andeq	r6, r5, r4, lsl r8
   36a84:			; <UNDEFINED> instruction: 0x000569b8

00036a88 <flatcc_builder_create_offset_vector@@Base>:
   36a88:	push	{r4, r5, r6, lr}
   36a8c:	mov	r4, r0
   36a90:	mov	r6, r1
   36a94:	mov	r5, r2
   36a98:	bl	35914 <flatcc_builder_start_offset_vector@@Base>
   36a9c:	cmp	r0, #0
   36aa0:	beq	36aac <flatcc_builder_create_offset_vector@@Base+0x24>
   36aa4:	mov	r0, #0
   36aa8:	pop	{r4, r5, r6, pc}
   36aac:	mov	r1, r5
   36ab0:	mov	r0, r4
   36ab4:	bl	352e4 <flatcc_builder_extend_offset_vector@@Base>
   36ab8:	cmp	r0, #0
   36abc:	beq	36ad8 <flatcc_builder_create_offset_vector@@Base+0x50>
   36ac0:	lsl	r2, r5, #2
   36ac4:	mov	r1, r6
   36ac8:	bl	13fe0 <memcpy@plt>
   36acc:	mov	r0, r4
   36ad0:	bl	369b0 <flatcc_builder_end_offset_vector@@Base>
   36ad4:	pop	{r4, r5, r6, pc}
   36ad8:	mov	r0, #0
   36adc:	pop	{r4, r5, r6, pc}

00036ae0 <flatcc_builder_end_offset_vector_for_unions@@Base>:
   36ae0:	push	{r4, r5, r6, lr}
   36ae4:	mov	r4, r0
   36ae8:	ldr	r2, [r0, #32]
   36aec:	ldrh	r0, [r2, #14]
   36af0:	cmp	r0, #5
   36af4:	bne	36b1c <flatcc_builder_end_offset_vector_for_unions@@Base+0x3c>
   36af8:	mov	r3, r1
   36afc:	ldr	r2, [r2, #20]
   36b00:	ldr	r1, [r4, #16]
   36b04:	mov	r0, r4
   36b08:	bl	34144 <flatcc_builder_default_alloc@@Base+0x378>
   36b0c:	subs	r5, r0, #0
   36b10:	bne	36b30 <flatcc_builder_end_offset_vector_for_unions@@Base+0x50>
   36b14:	mov	r0, r5
   36b18:	pop	{r4, r5, r6, pc}
   36b1c:	ldr	r3, [pc, #140]	; 36bb0 <flatcc_builder_end_offset_vector_for_unions@@Base+0xd0>
   36b20:	ldr	r2, [pc, #140]	; 36bb4 <flatcc_builder_end_offset_vector_for_unions@@Base+0xd4>
   36b24:	ldr	r1, [pc, #140]	; 36bb8 <flatcc_builder_end_offset_vector_for_unions@@Base+0xd8>
   36b28:	ldr	r0, [pc, #140]	; 36bbc <flatcc_builder_end_offset_vector_for_unions@@Base+0xdc>
   36b2c:	bl	14148 <__assert_fail@plt>
   36b30:	ldr	r2, [r4, #20]
   36b34:	mov	r1, #0
   36b38:	ldr	r0, [r4, #16]
   36b3c:	bl	140ac <memset@plt>
   36b40:	ldr	r2, [r4, #32]
   36b44:	ldr	r3, [r2, #8]
   36b48:	str	r3, [r4, #20]
   36b4c:	ldr	r0, [r2]
   36b50:	str	r0, [r4, #28]
   36b54:	ldr	r1, [r2, #4]
   36b58:	ldr	r3, [r4, #60]	; 0x3c
   36b5c:	add	r3, r3, r0
   36b60:	str	r3, [r4, #16]
   36b64:	ldr	r3, [r4, #64]	; 0x40
   36b68:	sub	r3, r3, r0
   36b6c:	cmp	r3, r1
   36b70:	movcs	r3, r1
   36b74:	str	r3, [r4, #24]
   36b78:	str	r1, [r2, #4]
   36b7c:	ldrh	r3, [r4, #130]	; 0x82
   36b80:	ldrh	r2, [r4, #128]	; 0x80
   36b84:	cmp	r2, r3
   36b88:	strhcc	r3, [r4, #128]	; 0x80
   36b8c:	ldr	r3, [r4, #32]
   36b90:	ldrh	r2, [r3, #12]
   36b94:	strh	r2, [r4, #130]	; 0x82
   36b98:	sub	r3, r3, #36	; 0x24
   36b9c:	str	r3, [r4, #32]
   36ba0:	ldr	r3, [r4, #156]	; 0x9c
   36ba4:	sub	r3, r3, #1
   36ba8:	str	r3, [r4, #156]	; 0x9c
   36bac:	b	36b14 <flatcc_builder_end_offset_vector_for_unions@@Base+0x34>
   36bb0:	andeq	r6, r5, r0, ror #12
   36bb4:	ldrdeq	r0, [r0], -r5
   36bb8:	andeq	r6, r5, r4, lsl r8
   36bbc:			; <UNDEFINED> instruction: 0x000569b8

00036bc0 <flatcc_builder_offset_vector_edit@@Base>:
   36bc0:	ldr	r0, [r0, #16]
   36bc4:	bx	lr

00036bc8 <flatcc_builder_offset_vector_count@@Base>:
   36bc8:	ldr	r3, [r0, #32]
   36bcc:	ldr	r0, [r3, #20]
   36bd0:	bx	lr

00036bd4 <flatcc_builder_create_union_vector_direct@@Base>:
   36bd4:	push	{r4, r5, r6, r7, lr}
   36bd8:	sub	sp, sp, #12
   36bdc:	mov	r4, r0
   36be0:	mov	r5, r1
   36be4:	mov	r6, r2
   36be8:	mov	r1, r3
   36bec:	mov	r3, r2
   36bf0:	ldr	r2, [sp, #32]
   36bf4:	mov	r0, r5
   36bf8:	bl	34144 <flatcc_builder_default_alloc@@Base+0x378>
   36bfc:	subs	r7, r0, #0
   36c00:	bne	36c1c <flatcc_builder_create_union_vector_direct@@Base+0x48>
   36c04:	mov	r3, #0
   36c08:	str	r3, [r4]
   36c0c:	str	r3, [r4, #4]
   36c10:	mov	r0, r4
   36c14:	add	sp, sp, #12
   36c18:	pop	{r4, r5, r6, r7, pc}
   36c1c:	mvn	r3, #0
   36c20:	str	r3, [sp, #4]
   36c24:	mov	r3, #1
   36c28:	str	r3, [sp]
   36c2c:	ldr	r2, [sp, #32]
   36c30:	mov	r1, r6
   36c34:	mov	r0, r5
   36c38:	bl	3673c <flatcc_builder_create_vector@@Base>
   36c3c:	cmp	r0, #0
   36c40:	moveq	r3, #0
   36c44:	streq	r3, [r4]
   36c48:	strne	r0, [r4]
   36c4c:	str	r7, [r4, #4]
   36c50:	b	36c10 <flatcc_builder_create_union_vector_direct@@Base+0x3c>

00036c54 <flatcc_builder_create_union_vector@@Base>:
   36c54:	push	{r4, r5, r6, r7, r8, lr}
   36c58:	sub	sp, sp, #16
   36c5c:	mov	r5, r0
   36c60:	mov	r4, r1
   36c64:	mov	r7, r2
   36c68:	mov	r6, r3
   36c6c:	mov	r0, r1
   36c70:	bl	35914 <flatcc_builder_start_offset_vector@@Base>
   36c74:	cmp	r0, #0
   36c78:	beq	36c94 <flatcc_builder_create_union_vector@@Base+0x40>
   36c7c:	mov	r3, #0
   36c80:	str	r3, [r5]
   36c84:	str	r3, [r5, #4]
   36c88:	mov	r0, r5
   36c8c:	add	sp, sp, #16
   36c90:	pop	{r4, r5, r6, r7, r8, pc}
   36c94:	mov	r1, r6
   36c98:	mov	r0, r4
   36c9c:	bl	352e4 <flatcc_builder_extend_offset_vector@@Base>
   36ca0:	cmp	r0, #0
   36ca4:	moveq	r3, #0
   36ca8:	streq	r3, [r5]
   36cac:	streq	r3, [r5, #4]
   36cb0:	beq	36c88 <flatcc_builder_create_union_vector@@Base+0x34>
   36cb4:	ldr	r8, [r4, #20]
   36cb8:	add	r1, r6, r8
   36cbc:	str	r1, [r4, #20]
   36cc0:	ldr	r3, [r4, #24]
   36cc4:	cmp	r1, r3
   36cc8:	bcs	36dac <flatcc_builder_create_union_vector@@Base+0x158>
   36ccc:	ldr	r3, [r4, #16]
   36cd0:	adds	r2, r3, r8
   36cd4:	beq	36dc4 <flatcc_builder_create_union_vector@@Base+0x170>
   36cd8:	cmp	r6, #0
   36cdc:	beq	36d0c <flatcc_builder_create_union_vector@@Base+0xb8>
   36ce0:	mov	r1, r7
   36ce4:	sub	ip, r2, #1
   36ce8:	sub	r0, r3, #4
   36cec:	add	r7, r7, r6, lsl #3
   36cf0:	ldrb	lr, [r1]
   36cf4:	strb	lr, [ip, #1]!
   36cf8:	ldr	lr, [r1, #4]
   36cfc:	str	lr, [r0, #4]!
   36d00:	add	r1, r1, #8
   36d04:	cmp	r1, r7
   36d08:	bne	36cf0 <flatcc_builder_create_union_vector@@Base+0x9c>
   36d0c:	str	r6, [sp]
   36d10:	mov	r1, r4
   36d14:	add	r0, sp, #8
   36d18:	bl	36bd4 <flatcc_builder_create_union_vector_direct@@Base>
   36d1c:	ldr	r7, [sp, #8]
   36d20:	ldr	r6, [sp, #12]
   36d24:	ldr	r2, [r4, #20]
   36d28:	mov	r1, #0
   36d2c:	ldr	r0, [r4, #16]
   36d30:	bl	140ac <memset@plt>
   36d34:	ldr	r2, [r4, #32]
   36d38:	ldr	r3, [r2, #8]
   36d3c:	str	r3, [r4, #20]
   36d40:	ldr	r0, [r2]
   36d44:	str	r0, [r4, #28]
   36d48:	ldr	r1, [r2, #4]
   36d4c:	ldr	r3, [r4, #60]	; 0x3c
   36d50:	add	r3, r3, r0
   36d54:	str	r3, [r4, #16]
   36d58:	ldr	r3, [r4, #64]	; 0x40
   36d5c:	sub	r3, r3, r0
   36d60:	cmp	r3, r1
   36d64:	movcs	r3, r1
   36d68:	str	r3, [r4, #24]
   36d6c:	str	r1, [r2, #4]
   36d70:	ldrh	r3, [r4, #130]	; 0x82
   36d74:	ldrh	r2, [r4, #128]	; 0x80
   36d78:	cmp	r2, r3
   36d7c:	strhcc	r3, [r4, #128]	; 0x80
   36d80:	ldr	r3, [r4, #32]
   36d84:	ldrh	r2, [r3, #12]
   36d88:	strh	r2, [r4, #130]	; 0x82
   36d8c:	sub	r3, r3, #36	; 0x24
   36d90:	str	r3, [r4, #32]
   36d94:	ldr	r3, [r4, #156]	; 0x9c
   36d98:	sub	r3, r3, #1
   36d9c:	str	r3, [r4, #156]	; 0x9c
   36da0:	str	r7, [r5]
   36da4:	str	r6, [r5, #4]
   36da8:	b	36c88 <flatcc_builder_create_union_vector@@Base+0x34>
   36dac:	mvn	r2, #3
   36db0:	add	r1, r1, #1
   36db4:	mov	r0, r4
   36db8:	bl	33d58 <__flatcc_fb_coerce_scalar_type@@Base+0x884>
   36dbc:	cmp	r0, #0
   36dc0:	beq	36ccc <flatcc_builder_create_union_vector@@Base+0x78>
   36dc4:	mov	r3, #0
   36dc8:	str	r3, [r5]
   36dcc:	str	r3, [r5, #4]
   36dd0:	b	36c88 <flatcc_builder_create_union_vector@@Base+0x34>

00036dd4 <flatcc_builder_start_union_vector@@Base>:
   36dd4:	push	{r4, lr}
   36dd8:	mov	r4, r0
   36ddc:	mov	r1, #4
   36de0:	bl	33ff8 <flatcc_builder_default_alloc@@Base+0x22c>
   36de4:	cmp	r0, #0
   36de8:	bne	36e44 <flatcc_builder_start_union_vector@@Base+0x70>
   36dec:	ldr	r3, [r4, #32]
   36df0:	mov	r2, #8
   36df4:	str	r2, [r3, #16]
   36df8:	ldr	r3, [r4, #32]
   36dfc:	mov	r2, #0
   36e00:	str	r2, [r3, #20]
   36e04:	ldr	r3, [r4, #32]
   36e08:	mov	r2, #7
   36e0c:	strh	r2, [r3, #14]
   36e10:	ldr	r1, [r4, #28]
   36e14:	ldr	r2, [r4, #60]	; 0x3c
   36e18:	add	r2, r2, r1
   36e1c:	str	r2, [r4, #16]
   36e20:	ldr	r3, [r4, #64]	; 0x40
   36e24:	sub	r3, r3, r1
   36e28:	cmn	r3, #4
   36e2c:	mvnhi	r3, #3
   36e30:	str	r3, [r4, #24]
   36e34:	ldr	r3, [r4, #32]
   36e38:	mvn	r2, #3
   36e3c:	str	r2, [r3, #4]
   36e40:	pop	{r4, pc}
   36e44:	mvn	r0, #0
   36e48:	pop	{r4, pc}

00036e4c <flatcc_builder_end_union_vector@@Base>:
   36e4c:	push	{r4, r5, r6, r7, r8, lr}
   36e50:	sub	sp, sp, #16
   36e54:	ldr	r3, [r1, #32]
   36e58:	ldrh	r2, [r3, #14]
   36e5c:	cmp	r2, #7
   36e60:	bne	36f78 <flatcc_builder_end_union_vector@@Base+0x12c>
   36e64:	mov	r6, r0
   36e68:	mov	r4, r1
   36e6c:	ldr	r5, [r3, #20]
   36e70:	ldr	r8, [r1, #20]
   36e74:	add	r1, r5, r5, lsl #2
   36e78:	add	r1, r1, r8
   36e7c:	str	r1, [r4, #20]
   36e80:	ldr	r3, [r4, #24]
   36e84:	cmp	r1, r3
   36e88:	bcs	36f8c <flatcc_builder_end_union_vector@@Base+0x140>
   36e8c:	ldr	r7, [r4, #16]
   36e90:	adds	r3, r7, r8
   36e94:	beq	36fa4 <flatcc_builder_end_union_vector@@Base+0x158>
   36e98:	add	r2, r3, r5, lsl #2
   36e9c:	cmp	r5, #0
   36ea0:	beq	36ed0 <flatcc_builder_end_union_vector@@Base+0x84>
   36ea4:	mov	r1, r7
   36ea8:	sub	ip, r2, #1
   36eac:	sub	r0, r3, #4
   36eb0:	add	r7, r7, r5, lsl #3
   36eb4:	ldrb	lr, [r1]
   36eb8:	strb	lr, [ip, #1]!
   36ebc:	ldr	lr, [r1, #4]
   36ec0:	str	lr, [r0, #4]!
   36ec4:	add	r1, r1, #8
   36ec8:	cmp	r1, r7
   36ecc:	bne	36eb4 <flatcc_builder_end_union_vector@@Base+0x68>
   36ed0:	str	r5, [sp]
   36ed4:	mov	r1, r4
   36ed8:	add	r0, sp, #8
   36edc:	bl	36bd4 <flatcc_builder_create_union_vector_direct@@Base>
   36ee0:	ldr	r7, [sp, #8]
   36ee4:	ldr	r5, [sp, #12]
   36ee8:	ldr	r2, [r4, #20]
   36eec:	mov	r1, #0
   36ef0:	ldr	r0, [r4, #16]
   36ef4:	bl	140ac <memset@plt>
   36ef8:	ldr	r2, [r4, #32]
   36efc:	ldr	r3, [r2, #8]
   36f00:	str	r3, [r4, #20]
   36f04:	ldr	r0, [r2]
   36f08:	str	r0, [r4, #28]
   36f0c:	ldr	r1, [r2, #4]
   36f10:	ldr	r3, [r4, #60]	; 0x3c
   36f14:	add	r3, r3, r0
   36f18:	str	r3, [r4, #16]
   36f1c:	ldr	r3, [r4, #64]	; 0x40
   36f20:	sub	r3, r3, r0
   36f24:	cmp	r3, r1
   36f28:	movcs	r3, r1
   36f2c:	str	r3, [r4, #24]
   36f30:	str	r1, [r2, #4]
   36f34:	ldrh	r3, [r4, #130]	; 0x82
   36f38:	ldrh	r2, [r4, #128]	; 0x80
   36f3c:	cmp	r2, r3
   36f40:	strhcc	r3, [r4, #128]	; 0x80
   36f44:	ldr	r3, [r4, #32]
   36f48:	ldrh	r2, [r3, #12]
   36f4c:	strh	r2, [r4, #130]	; 0x82
   36f50:	sub	r3, r3, #36	; 0x24
   36f54:	str	r3, [r4, #32]
   36f58:	ldr	r3, [r4, #156]	; 0x9c
   36f5c:	sub	r3, r3, #1
   36f60:	str	r3, [r4, #156]	; 0x9c
   36f64:	str	r7, [r6]
   36f68:	str	r5, [r6, #4]
   36f6c:	mov	r0, r6
   36f70:	add	sp, sp, #16
   36f74:	pop	{r4, r5, r6, r7, r8, pc}
   36f78:	ldr	r3, [pc, #52]	; 36fb4 <flatcc_builder_end_union_vector@@Base+0x168>
   36f7c:	ldr	r2, [pc, #52]	; 36fb8 <flatcc_builder_end_union_vector@@Base+0x16c>
   36f80:	ldr	r1, [pc, #52]	; 36fbc <flatcc_builder_end_union_vector@@Base+0x170>
   36f84:	ldr	r0, [pc, #52]	; 36fc0 <flatcc_builder_end_union_vector@@Base+0x174>
   36f88:	bl	14148 <__assert_fail@plt>
   36f8c:	mvn	r2, #3
   36f90:	add	r1, r1, #1
   36f94:	mov	r0, r4
   36f98:	bl	33d58 <__flatcc_fb_coerce_scalar_type@@Base+0x884>
   36f9c:	cmp	r0, #0
   36fa0:	beq	36e8c <flatcc_builder_end_union_vector@@Base+0x40>
   36fa4:	mov	r3, #0
   36fa8:	str	r3, [r6]
   36fac:	str	r3, [r6, #4]
   36fb0:	b	36f6c <flatcc_builder_end_union_vector@@Base+0x120>
   36fb4:	andeq	r6, r5, ip, lsl #13
   36fb8:	andeq	r0, r0, r1, asr r6
   36fbc:	andeq	r6, r5, r4, lsl r8
   36fc0:	andeq	r6, r5, r8, lsl fp

00036fc4 <flatcc_builder_union_vector_edit@@Base>:
   36fc4:	ldr	r0, [r0, #16]
   36fc8:	bx	lr

00036fcc <flatcc_builder_union_vector_count@@Base>:
   36fcc:	ldr	r3, [r0, #32]
   36fd0:	ldr	r0, [r3, #20]
   36fd4:	bx	lr

00036fd8 <flatcc_builder_extend_union_vector@@Base>:
   36fd8:	push	{r4, r5, r6, lr}
   36fdc:	mov	r4, r0
   36fe0:	ldr	r2, [r0, #32]
   36fe4:	ldr	r3, [r2, #20]
   36fe8:	adds	r3, r1, r3
   36fec:	movcs	ip, #1
   36ff0:	movcc	ip, #0
   36ff4:	cmn	r3, #-536870911	; 0xe0000001
   36ff8:	movls	r0, #0
   36ffc:	movhi	r0, #1
   37000:	orrs	r0, ip, r0
   37004:	bne	37030 <flatcc_builder_extend_union_vector@@Base+0x58>
   37008:	str	r3, [r2, #20]
   3700c:	ldr	r5, [r4, #20]
   37010:	add	r1, r5, r1, lsl #3
   37014:	str	r1, [r4, #20]
   37018:	ldr	r3, [r4, #24]
   3701c:	cmp	r1, r3
   37020:	bcs	37044 <flatcc_builder_extend_union_vector@@Base+0x6c>
   37024:	ldr	r0, [r4, #16]
   37028:	add	r0, r0, r5
   3702c:	pop	{r4, r5, r6, pc}
   37030:	ldr	r3, [pc, #44]	; 37064 <flatcc_builder_extend_union_vector@@Base+0x8c>
   37034:	mov	r2, #892	; 0x37c
   37038:	ldr	r1, [pc, #40]	; 37068 <flatcc_builder_extend_union_vector@@Base+0x90>
   3703c:	ldr	r0, [pc, #40]	; 3706c <flatcc_builder_extend_union_vector@@Base+0x94>
   37040:	bl	14148 <__assert_fail@plt>
   37044:	mvn	r2, #3
   37048:	add	r1, r1, #1
   3704c:	mov	r0, r4
   37050:	bl	33d58 <__flatcc_fb_coerce_scalar_type@@Base+0x884>
   37054:	cmp	r0, #0
   37058:	beq	37024 <flatcc_builder_extend_union_vector@@Base+0x4c>
   3705c:	mov	r0, #0
   37060:	pop	{r4, r5, r6, pc}
   37064:	strdeq	r6, [r5], -r4
   37068:	andeq	r6, r5, r4, lsl r8
   3706c:	andeq	r6, r5, r0, lsr r9

00037070 <flatcc_builder_truncate_union_vector@@Base>:
   37070:	push	{r4, lr}
   37074:	ldr	ip, [r0, #32]
   37078:	ldrh	r3, [ip, #14]
   3707c:	cmp	r3, #7
   37080:	bne	370c8 <flatcc_builder_truncate_union_vector@@Base+0x58>
   37084:	ldr	r3, [ip, #20]
   37088:	cmp	r3, r1
   3708c:	bcc	370dc <flatcc_builder_truncate_union_vector@@Base+0x6c>
   37090:	sub	r3, r3, r1
   37094:	str	r3, [ip, #20]
   37098:	ldr	r3, [r0, #32]
   3709c:	ldr	r2, [r3, #16]
   370a0:	mul	r2, r2, r1
   370a4:	ldr	r3, [r0, #20]
   370a8:	sub	r3, r3, r2
   370ac:	str	r3, [r0, #20]
   370b0:	ldr	r0, [r0, #16]
   370b4:	mov	r1, #0
   370b8:	add	r0, r0, r3
   370bc:	bl	140ac <memset@plt>
   370c0:	mov	r0, #0
   370c4:	pop	{r4, pc}
   370c8:	ldr	r3, [pc, #32]	; 370f0 <flatcc_builder_truncate_union_vector@@Base+0x80>
   370cc:	ldr	r2, [pc, #32]	; 370f4 <flatcc_builder_truncate_union_vector@@Base+0x84>
   370d0:	ldr	r1, [pc, #32]	; 370f8 <flatcc_builder_truncate_union_vector@@Base+0x88>
   370d4:	ldr	r0, [pc, #32]	; 370fc <flatcc_builder_truncate_union_vector@@Base+0x8c>
   370d8:	bl	14148 <__assert_fail@plt>
   370dc:	ldr	r3, [pc, #12]	; 370f0 <flatcc_builder_truncate_union_vector@@Base+0x80>
   370e0:	ldr	r2, [pc, #24]	; 37100 <flatcc_builder_truncate_union_vector@@Base+0x90>
   370e4:	ldr	r1, [pc, #12]	; 370f8 <flatcc_builder_truncate_union_vector@@Base+0x88>
   370e8:	ldr	r0, [pc, #20]	; 37104 <flatcc_builder_truncate_union_vector@@Base+0x94>
   370ec:	bl	14148 <__assert_fail@plt>
   370f0:	andeq	r6, r5, ip, lsr #13
   370f4:	andeq	r0, r0, r1, lsl #13
   370f8:	andeq	r6, r5, r4, lsl r8
   370fc:	andeq	r6, r5, r8, lsl fp
   37100:	andeq	r0, r0, r2, lsl #13
   37104:	andeq	r6, r5, ip, lsr sl

00037108 <flatcc_builder_union_vector_push@@Base>:
   37108:	push	{r4, r5, lr}
   3710c:	sub	sp, sp, #12
   37110:	add	r3, sp, #8
   37114:	stmdb	r3, {r1, r2}
   37118:	ldr	r2, [r0, #32]
   3711c:	ldrh	r3, [r2, #14]
   37120:	cmp	r3, #7
   37124:	bne	3717c <flatcc_builder_union_vector_push@@Base+0x74>
   37128:	mov	r4, r0
   3712c:	ldr	r3, [r2, #20]
   37130:	cmn	r3, #-536870911	; 0xe0000001
   37134:	beq	371ac <flatcc_builder_union_vector_push@@Base+0xa4>
   37138:	add	r3, r3, #1
   3713c:	str	r3, [r2, #20]
   37140:	ldr	r5, [r0, #20]
   37144:	add	r3, r5, #8
   37148:	str	r3, [r0, #20]
   3714c:	ldr	r2, [r0, #24]
   37150:	cmp	r3, r2
   37154:	bcs	37190 <flatcc_builder_union_vector_push@@Base+0x88>
   37158:	ldr	r3, [r4, #16]
   3715c:	adds	r3, r3, r5
   37160:	moveq	r0, r3
   37164:	addne	r2, sp, #8
   37168:	ldmdbne	r2, {r0, r1}
   3716c:	stmne	r3, {r0, r1}
   37170:	movne	r0, r3
   37174:	add	sp, sp, #12
   37178:	pop	{r4, r5, pc}
   3717c:	ldr	r3, [pc, #48]	; 371b4 <flatcc_builder_union_vector_push@@Base+0xac>
   37180:	ldr	r2, [pc, #48]	; 371b8 <flatcc_builder_union_vector_push@@Base+0xb0>
   37184:	ldr	r1, [pc, #48]	; 371bc <flatcc_builder_union_vector_push@@Base+0xb4>
   37188:	ldr	r0, [pc, #48]	; 371c0 <flatcc_builder_union_vector_push@@Base+0xb8>
   3718c:	bl	14148 <__assert_fail@plt>
   37190:	mvn	r2, #3
   37194:	add	r1, r5, #9
   37198:	bl	33d58 <__flatcc_fb_coerce_scalar_type@@Base+0x884>
   3719c:	cmp	r0, #0
   371a0:	beq	37158 <flatcc_builder_union_vector_push@@Base+0x50>
   371a4:	mov	r0, #0
   371a8:	b	37174 <flatcc_builder_union_vector_push@@Base+0x6c>
   371ac:	mov	r0, #0
   371b0:	b	37174 <flatcc_builder_union_vector_push@@Base+0x6c>
   371b4:	ldrdeq	r6, [r5], -r4
   371b8:	andeq	r0, r0, sp, lsl #13
   371bc:	andeq	r6, r5, r4, lsl r8
   371c0:	andeq	r6, r5, r8, lsl fp

000371c4 <flatcc_builder_append_union_vector@@Base>:
   371c4:	push	{r4, r5, r6, r7, r8, lr}
   371c8:	mov	r6, r1
   371cc:	ldr	r1, [r0, #32]
   371d0:	ldrh	r3, [r1, #14]
   371d4:	cmp	r3, #7
   371d8:	bne	37248 <flatcc_builder_append_union_vector@@Base+0x84>
   371dc:	mov	r5, r0
   371e0:	ldr	r3, [r1, #20]
   371e4:	adds	r3, r2, r3
   371e8:	movcs	ip, #1
   371ec:	movcc	ip, #0
   371f0:	cmn	r3, #-536870911	; 0xe0000001
   371f4:	movls	r0, #0
   371f8:	movhi	r0, #1
   371fc:	orrs	r0, ip, r0
   37200:	bne	3725c <flatcc_builder_append_union_vector@@Base+0x98>
   37204:	str	r3, [r1, #20]
   37208:	lsl	r4, r2, #3
   3720c:	ldr	r7, [r5, #20]
   37210:	add	r1, r4, r7
   37214:	str	r1, [r5, #20]
   37218:	ldr	r3, [r5, #24]
   3721c:	cmp	r1, r3
   37220:	bcs	37270 <flatcc_builder_append_union_vector@@Base+0xac>
   37224:	ldr	r5, [r5, #16]
   37228:	adds	r5, r5, r7
   3722c:	beq	37240 <flatcc_builder_append_union_vector@@Base+0x7c>
   37230:	mov	r2, r4
   37234:	mov	r1, r6
   37238:	mov	r0, r5
   3723c:	bl	13fe0 <memcpy@plt>
   37240:	mov	r0, r5
   37244:	pop	{r4, r5, r6, r7, r8, pc}
   37248:	ldr	r3, [pc, #64]	; 37290 <flatcc_builder_append_union_vector@@Base+0xcc>
   3724c:	ldr	r2, [pc, #64]	; 37294 <flatcc_builder_append_union_vector@@Base+0xd0>
   37250:	ldr	r1, [pc, #64]	; 37298 <flatcc_builder_append_union_vector@@Base+0xd4>
   37254:	ldr	r0, [pc, #64]	; 3729c <flatcc_builder_append_union_vector@@Base+0xd8>
   37258:	bl	14148 <__assert_fail@plt>
   3725c:	ldr	r3, [pc, #60]	; 372a0 <flatcc_builder_append_union_vector@@Base+0xdc>
   37260:	mov	r2, #892	; 0x37c
   37264:	ldr	r1, [pc, #44]	; 37298 <flatcc_builder_append_union_vector@@Base+0xd4>
   37268:	ldr	r0, [pc, #52]	; 372a4 <flatcc_builder_append_union_vector@@Base+0xe0>
   3726c:	bl	14148 <__assert_fail@plt>
   37270:	mvn	r2, #3
   37274:	add	r1, r1, #1
   37278:	mov	r0, r5
   3727c:	bl	33d58 <__flatcc_fb_coerce_scalar_type@@Base+0x884>
   37280:	cmp	r0, #0
   37284:	beq	37224 <flatcc_builder_append_union_vector@@Base+0x60>
   37288:	mov	r5, #0
   3728c:	b	37240 <flatcc_builder_append_union_vector@@Base+0x7c>
   37290:	strdeq	r6, [r5], -r8
   37294:	muleq	r0, ip, r6
   37298:	andeq	r6, r5, r4, lsl r8
   3729c:	andeq	r6, r5, r8, lsl fp
   372a0:	strdeq	r6, [r5], -r4
   372a4:	andeq	r6, r5, r0, lsr r9

000372a8 <flatcc_builder_create_string@@Base>:
   372a8:	push	{r4, r5, r6, lr}
   372ac:	sub	sp, sp, #88	; 0x58
   372b0:	mov	r5, r0
   372b4:	str	r2, [sp, #84]	; 0x54
   372b8:	ldr	r0, [r0, #136]	; 0x88
   372bc:	sub	r3, r0, r2
   372c0:	sub	r3, r3, #1
   372c4:	and	r3, r3, #3
   372c8:	add	r3, r3, #1
   372cc:	mov	ip, #4
   372d0:	str	ip, [sp, #12]
   372d4:	add	lr, sp, #84	; 0x54
   372d8:	str	lr, [sp, #20]
   372dc:	str	ip, [sp, #24]
   372e0:	mov	ip, #1
   372e4:	str	ip, [sp, #16]
   372e8:	cmp	r2, #0
   372ec:	beq	37308 <flatcc_builder_create_string@@Base+0x60>
   372f0:	add	ip, r2, #4
   372f4:	str	ip, [sp, #12]
   372f8:	str	r1, [sp, #28]
   372fc:	str	r2, [sp, #32]
   37300:	mov	r2, #2
   37304:	str	r2, [sp, #16]
   37308:	cmp	r3, #0
   3730c:	beq	3733c <flatcc_builder_create_string@@Base+0x94>
   37310:	ldr	r2, [sp, #12]
   37314:	add	r2, r2, r3
   37318:	str	r2, [sp, #12]
   3731c:	ldr	r2, [sp, #16]
   37320:	add	r2, r2, #1
   37324:	add	r1, sp, #88	; 0x58
   37328:	add	r1, r1, r2, lsl #3
   3732c:	ldr	ip, [pc, #116]	; 373a8 <flatcc_builder_create_string@@Base+0x100>
   37330:	str	ip, [r1, #-76]	; 0xffffffb4
   37334:	str	r3, [r1, #-72]	; 0xffffffb8
   37338:	str	r2, [sp, #16]
   3733c:	ldr	r3, [sp, #12]
   37340:	sub	r4, r0, r3
   37344:	cmp	r0, r4
   37348:	ble	37380 <flatcc_builder_create_string@@Base+0xd8>
   3734c:	str	r3, [sp]
   37350:	ldr	r6, [r5, #44]	; 0x2c
   37354:	mov	r3, r4
   37358:	ldr	r2, [sp, #16]
   3735c:	add	r1, sp, #20
   37360:	ldr	r0, [r5, #36]	; 0x24
   37364:	blx	r6
   37368:	cmp	r0, #0
   3736c:	bne	37394 <flatcc_builder_create_string@@Base+0xec>
   37370:	str	r4, [r5, #136]	; 0x88
   37374:	mov	r0, r4
   37378:	add	sp, sp, #88	; 0x58
   3737c:	pop	{r4, r5, r6, pc}
   37380:	ldr	r3, [pc, #36]	; 373ac <flatcc_builder_create_string@@Base+0x104>
   37384:	ldr	r2, [pc, #36]	; 373b0 <flatcc_builder_create_string@@Base+0x108>
   37388:	ldr	r1, [pc, #36]	; 373b4 <flatcc_builder_create_string@@Base+0x10c>
   3738c:	ldr	r0, [pc, #36]	; 373b8 <flatcc_builder_create_string@@Base+0x110>
   37390:	bl	14148 <__assert_fail@plt>
   37394:	ldr	r3, [pc, #16]	; 373ac <flatcc_builder_create_string@@Base+0x104>
   37398:	ldr	r2, [pc, #28]	; 373bc <flatcc_builder_create_string@@Base+0x114>
   3739c:	ldr	r1, [pc, #16]	; 373b4 <flatcc_builder_create_string@@Base+0x10c>
   373a0:	ldr	r0, [pc, #16]	; 373b8 <flatcc_builder_create_string@@Base+0x110>
   373a4:	bl	14148 <__assert_fail@plt>
   373a8:	andeq	r6, r5, r4, asr #1
   373ac:	andeq	r6, r5, r0, lsl r3
   373b0:	andeq	r0, r0, r7, lsl #5
   373b4:	andeq	r6, r5, r4, lsl r8
   373b8:	andeq	r5, r4, r0, ror #3
   373bc:	andeq	r0, r0, fp, lsl #5

000373c0 <flatcc_builder_create_string_str@@Base>:
   373c0:	push	{r4, r5, r6, lr}
   373c4:	mov	r5, r0
   373c8:	mov	r4, r1
   373cc:	mov	r0, r1
   373d0:	bl	1407c <strlen@plt>
   373d4:	mov	r2, r0
   373d8:	mov	r1, r4
   373dc:	mov	r0, r5
   373e0:	bl	372a8 <flatcc_builder_create_string@@Base>
   373e4:	pop	{r4, r5, r6, pc}

000373e8 <flatcc_builder_create_string_strn@@Base>:
   373e8:	push	{r4, r5, r6, lr}
   373ec:	mov	r6, r0
   373f0:	mov	r4, r1
   373f4:	mov	r5, r2
   373f8:	mov	r1, #0
   373fc:	mov	r0, r4
   37400:	bl	140d0 <memchr@plt>
   37404:	cmp	r0, #0
   37408:	subne	r5, r0, r4
   3740c:	mov	r2, r5
   37410:	mov	r1, r4
   37414:	mov	r0, r6
   37418:	bl	372a8 <flatcc_builder_create_string@@Base>
   3741c:	pop	{r4, r5, r6, pc}

00037420 <flatcc_builder_end_string@@Base>:
   37420:	push	{r4, r5, r6, lr}
   37424:	ldr	r3, [r0, #32]
   37428:	ldrh	r2, [r3, #14]
   3742c:	cmp	r2, #6
   37430:	bne	37460 <flatcc_builder_end_string@@Base+0x40>
   37434:	mov	r4, r0
   37438:	ldr	r2, [r3, #20]
   3743c:	ldr	r3, [r0, #20]
   37440:	cmp	r2, r3
   37444:	bne	37474 <flatcc_builder_end_string@@Base+0x54>
   37448:	ldr	r1, [r0, #16]
   3744c:	bl	372a8 <flatcc_builder_create_string@@Base>
   37450:	subs	r5, r0, #0
   37454:	bne	37488 <flatcc_builder_end_string@@Base+0x68>
   37458:	mov	r0, r5
   3745c:	pop	{r4, r5, r6, pc}
   37460:	ldr	r3, [pc, #160]	; 37508 <flatcc_builder_end_string@@Base+0xe8>
   37464:	ldr	r2, [pc, #160]	; 3750c <flatcc_builder_end_string@@Base+0xec>
   37468:	ldr	r1, [pc, #160]	; 37510 <flatcc_builder_end_string@@Base+0xf0>
   3746c:	ldr	r0, [pc, #160]	; 37514 <flatcc_builder_end_string@@Base+0xf4>
   37470:	bl	14148 <__assert_fail@plt>
   37474:	ldr	r3, [pc, #140]	; 37508 <flatcc_builder_end_string@@Base+0xe8>
   37478:	ldr	r2, [pc, #152]	; 37518 <flatcc_builder_end_string@@Base+0xf8>
   3747c:	ldr	r1, [pc, #140]	; 37510 <flatcc_builder_end_string@@Base+0xf0>
   37480:	ldr	r0, [pc, #148]	; 3751c <flatcc_builder_end_string@@Base+0xfc>
   37484:	bl	14148 <__assert_fail@plt>
   37488:	ldr	r2, [r4, #20]
   3748c:	mov	r1, #0
   37490:	ldr	r0, [r4, #16]
   37494:	bl	140ac <memset@plt>
   37498:	ldr	r2, [r4, #32]
   3749c:	ldr	r3, [r2, #8]
   374a0:	str	r3, [r4, #20]
   374a4:	ldr	r0, [r2]
   374a8:	str	r0, [r4, #28]
   374ac:	ldr	r1, [r2, #4]
   374b0:	ldr	r3, [r4, #60]	; 0x3c
   374b4:	add	r3, r3, r0
   374b8:	str	r3, [r4, #16]
   374bc:	ldr	r3, [r4, #64]	; 0x40
   374c0:	sub	r3, r3, r0
   374c4:	cmp	r3, r1
   374c8:	movcs	r3, r1
   374cc:	str	r3, [r4, #24]
   374d0:	str	r1, [r2, #4]
   374d4:	ldrh	r3, [r4, #130]	; 0x82
   374d8:	ldrh	r2, [r4, #128]	; 0x80
   374dc:	cmp	r2, r3
   374e0:	strhcc	r3, [r4, #128]	; 0x80
   374e4:	ldr	r3, [r4, #32]
   374e8:	ldrh	r2, [r3, #12]
   374ec:	strh	r2, [r4, #130]	; 0x82
   374f0:	sub	r3, r3, #36	; 0x24
   374f4:	str	r3, [r4, #32]
   374f8:	ldr	r3, [r4, #156]	; 0x9c
   374fc:	sub	r3, r3, #1
   37500:	str	r3, [r4, #156]	; 0x9c
   37504:	b	37458 <flatcc_builder_end_string@@Base+0x38>
   37508:	andeq	r6, r5, ip, lsl r7
   3750c:	andeq	r0, r0, r4, asr #13
   37510:	andeq	r6, r5, r4, lsl r8
   37514:	andeq	r6, r5, ip, ror #19
   37518:	andeq	r0, r0, r5, asr #13
   3751c:	andeq	r6, r5, ip, asr #22

00037520 <flatcc_builder_string_edit@@Base>:
   37520:	ldr	r0, [r0, #16]
   37524:	bx	lr

00037528 <flatcc_builder_string_len@@Base>:
   37528:	ldr	r3, [r0, #32]
   3752c:	ldr	r0, [r3, #20]
   37530:	bx	lr

00037534 <flatcc_builder_table_add@@Base>:
   37534:	push	{r4, r5, r6, r7, r8, lr}
   37538:	mov	r5, r1
   3753c:	ldr	r1, [r0, #32]
   37540:	ldrh	r1, [r1, #14]
   37544:	cmp	r1, #3
   37548:	bne	375f4 <flatcc_builder_table_add@@Base+0xc0>
   3754c:	mov	r4, r0
   37550:	ldr	r1, [pc, #248]	; 37650 <flatcc_builder_table_add@@Base+0x11c>
   37554:	cmp	r5, r1
   37558:	bhi	37608 <flatcc_builder_table_add@@Base+0xd4>
   3755c:	ldrh	r1, [r0, #130]	; 0x82
   37560:	cmp	r1, r3
   37564:	strhcc	r3, [r0, #130]	; 0x82
   37568:	ldr	r0, [r0, #4]
   3756c:	lsl	r1, r5, #1
   37570:	ldrh	r1, [r0, r1]
   37574:	cmp	r1, #0
   37578:	bne	3761c <flatcc_builder_table_add@@Base+0xe8>
   3757c:	ldr	r0, [r4, #12]
   37580:	eor	r0, r0, r5
   37584:	ldr	r1, [pc, #200]	; 37654 <flatcc_builder_table_add@@Base+0x120>
   37588:	mul	r0, r1, r0
   3758c:	eor	r0, r0, r2
   37590:	mul	r0, r1, r0
   37594:	str	r0, [r4, #12]
   37598:	uxth	r7, r5
   3759c:	sub	r6, r3, #1
   375a0:	ldr	r0, [r4, #20]
   375a4:	add	r6, r6, r0
   375a8:	rsb	r3, r3, #0
   375ac:	and	r6, r6, r3
   375b0:	add	r1, r2, r6
   375b4:	str	r1, [r4, #20]
   375b8:	ldr	r3, [r4, #24]
   375bc:	cmp	r1, r3
   375c0:	bcs	37630 <flatcc_builder_table_add@@Base+0xfc>
   375c4:	uxth	r5, r5
   375c8:	ldr	r3, [r4, #4]
   375cc:	lsl	r5, r5, #1
   375d0:	add	r2, r6, #4
   375d4:	strh	r2, [r3, r5]
   375d8:	ldrh	r3, [r4, #8]
   375dc:	cmp	r3, r7
   375e0:	addls	r7, r7, #1
   375e4:	strhls	r7, [r4, #8]
   375e8:	ldr	r0, [r4, #16]
   375ec:	add	r0, r0, r6
   375f0:	pop	{r4, r5, r6, r7, r8, pc}
   375f4:	ldr	r3, [pc, #92]	; 37658 <flatcc_builder_table_add@@Base+0x124>
   375f8:	ldr	r2, [pc, #92]	; 3765c <flatcc_builder_table_add@@Base+0x128>
   375fc:	ldr	r1, [pc, #92]	; 37660 <flatcc_builder_table_add@@Base+0x12c>
   37600:	ldr	r0, [pc, #92]	; 37664 <flatcc_builder_table_add@@Base+0x130>
   37604:	bl	14148 <__assert_fail@plt>
   37608:	ldr	r3, [pc, #72]	; 37658 <flatcc_builder_table_add@@Base+0x124>
   3760c:	ldr	r2, [pc, #84]	; 37668 <flatcc_builder_table_add@@Base+0x134>
   37610:	ldr	r1, [pc, #72]	; 37660 <flatcc_builder_table_add@@Base+0x12c>
   37614:	ldr	r0, [pc, #80]	; 3766c <flatcc_builder_table_add@@Base+0x138>
   37618:	bl	14148 <__assert_fail@plt>
   3761c:	ldr	r3, [pc, #52]	; 37658 <flatcc_builder_table_add@@Base+0x124>
   37620:	ldr	r2, [pc, #72]	; 37670 <flatcc_builder_table_add@@Base+0x13c>
   37624:	ldr	r1, [pc, #52]	; 37660 <flatcc_builder_table_add@@Base+0x12c>
   37628:	ldr	r0, [pc, #68]	; 37674 <flatcc_builder_table_add@@Base+0x140>
   3762c:	bl	14148 <__assert_fail@plt>
   37630:	ldr	r2, [pc, #64]	; 37678 <flatcc_builder_table_add@@Base+0x144>
   37634:	add	r1, r1, #1
   37638:	mov	r0, r4
   3763c:	bl	33d58 <__flatcc_fb_coerce_scalar_type@@Base+0x884>
   37640:	cmp	r0, #0
   37644:	beq	375c4 <flatcc_builder_table_add@@Base+0x90>
   37648:	mov	r0, #0
   3764c:	pop	{r4, r5, r6, r7, r8, pc}
   37650:	strdeq	r7, [r0], -ip
   37654:			; <UNDEFINED> instruction: 0x9e3779b1
   37658:	andeq	r6, r5, r8, lsr r7
   3765c:	andeq	r0, r0, sp, ror #13
   37660:	andeq	r6, r5, r4, lsl r8
   37664:	ldrdeq	r6, [r5], -r8
   37668:	andeq	r0, r0, lr, ror #13
   3766c:	andeq	r6, r5, r0, ror fp
   37670:	strdeq	r0, [r0], -r8
   37674:	andeq	r5, r4, r0, ror #3
   37678:	strdeq	pc, [r0], -ip

0003767c <flatcc_builder_table_edit@@Base>:
   3767c:	ldr	r3, [r0, #32]
   37680:	ldrh	r3, [r3, #14]
   37684:	cmp	r3, #3
   37688:	bne	376a0 <flatcc_builder_table_edit@@Base+0x24>
   3768c:	ldr	r3, [r0, #20]
   37690:	sub	r1, r3, r1
   37694:	ldr	r0, [r0, #16]
   37698:	add	r0, r0, r1
   3769c:	bx	lr
   376a0:	push	{r4, lr}
   376a4:	ldr	r3, [pc, #12]	; 376b8 <flatcc_builder_table_edit@@Base+0x3c>
   376a8:	ldr	r2, [pc, #12]	; 376bc <flatcc_builder_table_edit@@Base+0x40>
   376ac:	ldr	r1, [pc, #12]	; 376c0 <flatcc_builder_table_edit@@Base+0x44>
   376b0:	ldr	r0, [pc, #12]	; 376c4 <flatcc_builder_table_edit@@Base+0x48>
   376b4:	bl	14148 <__assert_fail@plt>
   376b8:	andeq	r6, r5, r4, asr r7
   376bc:	andeq	r0, r0, r2, lsl #14
   376c0:	andeq	r6, r5, r4, lsl r8
   376c4:	ldrdeq	r6, [r5], -r8

000376c8 <flatcc_builder_table_add_copy@@Base>:
   376c8:	push	{r4, r5, r6, lr}
   376cc:	mov	r6, r2
   376d0:	mov	r5, r3
   376d4:	ldrh	r3, [sp, #16]
   376d8:	mov	r2, r5
   376dc:	bl	37534 <flatcc_builder_table_add@@Base>
   376e0:	subs	r4, r0, #0
   376e4:	beq	376f8 <flatcc_builder_table_add_copy@@Base+0x30>
   376e8:	mov	r2, r5
   376ec:	mov	r1, r6
   376f0:	mov	r0, r4
   376f4:	bl	13fe0 <memcpy@plt>
   376f8:	mov	r0, r4
   376fc:	pop	{r4, r5, r6, pc}

00037700 <flatcc_builder_table_add_offset@@Base>:
   37700:	push	{r4, r5, r6, r7, r8, lr}
   37704:	ldr	r3, [r0, #32]
   37708:	ldrh	r3, [r3, #14]
   3770c:	cmp	r3, #3
   37710:	bne	377c0 <flatcc_builder_table_add_offset@@Base+0xc0>
   37714:	mov	r4, r0
   37718:	mov	r5, r1
   3771c:	ldr	r3, [pc, #240]	; 37814 <flatcc_builder_table_add_offset@@Base+0x114>
   37720:	cmp	r1, r3
   37724:	bhi	377d4 <flatcc_builder_table_add_offset@@Base+0xd4>
   37728:	ldr	r2, [r0, #4]
   3772c:	lsl	r3, r1, #1
   37730:	ldrh	r3, [r2, r3]
   37734:	cmp	r3, #0
   37738:	bne	377e8 <flatcc_builder_table_add_offset@@Base+0xe8>
   3773c:	ldr	r3, [r0, #12]
   37740:	eor	r3, r3, r1
   37744:	ldr	r2, [pc, #204]	; 37818 <flatcc_builder_table_add_offset@@Base+0x118>
   37748:	mul	r3, r2, r3
   3774c:	eor	r3, r3, #4
   37750:	mul	r3, r2, r3
   37754:	str	r3, [r0, #12]
   37758:	uxth	r7, r1
   3775c:	ldr	r6, [r0, #20]
   37760:	add	r6, r6, #3
   37764:	bic	r6, r6, #3
   37768:	add	r1, r6, #4
   3776c:	str	r1, [r0, #20]
   37770:	ldr	r3, [r0, #24]
   37774:	cmp	r1, r3
   37778:	bhi	377fc <flatcc_builder_table_add_offset@@Base+0xfc>
   3777c:	uxth	r2, r6
   37780:	uxth	r5, r5
   37784:	ldr	r3, [r4, #4]
   37788:	lsl	r5, r5, #1
   3778c:	add	r1, r2, #4
   37790:	strh	r1, [r3, r5]
   37794:	ldrh	r3, [r4, #8]
   37798:	cmp	r3, r7
   3779c:	addls	r7, r7, #1
   377a0:	strhls	r7, [r4, #8]
   377a4:	ldr	r3, [r4]
   377a8:	add	r1, r3, #2
   377ac:	str	r1, [r4]
   377b0:	strh	r2, [r3]
   377b4:	ldr	r0, [r4, #16]
   377b8:	add	r0, r0, r6
   377bc:	pop	{r4, r5, r6, r7, r8, pc}
   377c0:	ldr	r3, [pc, #84]	; 3781c <flatcc_builder_table_add_offset@@Base+0x11c>
   377c4:	ldr	r2, [pc, #84]	; 37820 <flatcc_builder_table_add_offset@@Base+0x120>
   377c8:	ldr	r1, [pc, #84]	; 37824 <flatcc_builder_table_add_offset@@Base+0x124>
   377cc:	ldr	r0, [pc, #84]	; 37828 <flatcc_builder_table_add_offset@@Base+0x128>
   377d0:	bl	14148 <__assert_fail@plt>
   377d4:	ldr	r3, [pc, #64]	; 3781c <flatcc_builder_table_add_offset@@Base+0x11c>
   377d8:	ldr	r2, [pc, #76]	; 3782c <flatcc_builder_table_add_offset@@Base+0x12c>
   377dc:	ldr	r1, [pc, #64]	; 37824 <flatcc_builder_table_add_offset@@Base+0x124>
   377e0:	ldr	r0, [pc, #72]	; 37830 <flatcc_builder_table_add_offset@@Base+0x130>
   377e4:	bl	14148 <__assert_fail@plt>
   377e8:	ldr	r3, [pc, #44]	; 3781c <flatcc_builder_table_add_offset@@Base+0x11c>
   377ec:	ldr	r2, [pc, #64]	; 37834 <flatcc_builder_table_add_offset@@Base+0x134>
   377f0:	ldr	r1, [pc, #44]	; 37824 <flatcc_builder_table_add_offset@@Base+0x124>
   377f4:	ldr	r0, [pc, #60]	; 37838 <flatcc_builder_table_add_offset@@Base+0x138>
   377f8:	bl	14148 <__assert_fail@plt>
   377fc:	ldr	r2, [pc, #56]	; 3783c <flatcc_builder_table_add_offset@@Base+0x13c>
   37800:	bl	33d58 <__flatcc_fb_coerce_scalar_type@@Base+0x884>
   37804:	cmp	r0, #0
   37808:	beq	3777c <flatcc_builder_table_add_offset@@Base+0x7c>
   3780c:	mov	r0, #0
   37810:	pop	{r4, r5, r6, r7, r8, pc}
   37814:	strdeq	r7, [r0], -ip
   37818:			; <UNDEFINED> instruction: 0x9e3779b1
   3781c:	andeq	r6, r5, r0, ror r7
   37820:	andeq	r0, r0, r3, lsl r7
   37824:	andeq	r6, r5, r4, lsl r8
   37828:	ldrdeq	r6, [r5], -r8
   3782c:	andeq	r0, r0, r4, lsl r7
   37830:	andeq	r6, r5, r0, ror fp
   37834:	andeq	r0, r0, fp, lsl r7
   37838:	andeq	r5, r4, r0, ror #3
   3783c:	strdeq	pc, [r0], -ip

00037840 <flatcc_builder_table_add_union@@Base>:
   37840:	push	{r4, r5, r6, r7, lr}
   37844:	sub	sp, sp, #12
   37848:	mov	r5, r1
   3784c:	add	r1, sp, #8
   37850:	stmdb	r1, {r2, r3}
   37854:	ldr	r3, [r0, #32]
   37858:	ldrh	r3, [r3, #14]
   3785c:	cmp	r3, #3
   37860:	bne	378d0 <flatcc_builder_table_add_union@@Base+0x90>
   37864:	mov	r4, r0
   37868:	ldrb	r7, [sp]
   3786c:	ldr	r6, [sp, #4]
   37870:	adds	r3, r6, #0
   37874:	movne	r3, #1
   37878:	cmp	r7, #0
   3787c:	movne	r3, #0
   37880:	cmp	r3, #0
   37884:	bne	378e4 <flatcc_builder_table_add_union@@Base+0xa4>
   37888:	cmp	r6, #0
   3788c:	beq	378a4 <flatcc_builder_table_add_union@@Base+0x64>
   37890:	mov	r1, r5
   37894:	bl	37700 <flatcc_builder_table_add_offset@@Base>
   37898:	cmp	r0, #0
   3789c:	strne	r6, [r0]
   378a0:	beq	378f8 <flatcc_builder_table_add_union@@Base+0xb8>
   378a4:	mov	r3, #1
   378a8:	mov	r2, r3
   378ac:	sub	r1, r5, #1
   378b0:	mov	r0, r4
   378b4:	bl	37534 <flatcc_builder_table_add@@Base>
   378b8:	cmp	r0, #0
   378bc:	beq	3790c <flatcc_builder_table_add_union@@Base+0xcc>
   378c0:	strb	r7, [r0]
   378c4:	mov	r0, #0
   378c8:	add	sp, sp, #12
   378cc:	pop	{r4, r5, r6, r7, pc}
   378d0:	ldr	r3, [pc, #72]	; 37920 <flatcc_builder_table_add_union@@Base+0xe0>
   378d4:	ldr	r2, [pc, #72]	; 37924 <flatcc_builder_table_add_union@@Base+0xe4>
   378d8:	ldr	r1, [pc, #72]	; 37928 <flatcc_builder_table_add_union@@Base+0xe8>
   378dc:	ldr	r0, [pc, #72]	; 3792c <flatcc_builder_table_add_union@@Base+0xec>
   378e0:	bl	14148 <__assert_fail@plt>
   378e4:	ldr	r3, [pc, #52]	; 37920 <flatcc_builder_table_add_union@@Base+0xe0>
   378e8:	ldr	r2, [pc, #64]	; 37930 <flatcc_builder_table_add_union@@Base+0xf0>
   378ec:	ldr	r1, [pc, #52]	; 37928 <flatcc_builder_table_add_union@@Base+0xe8>
   378f0:	ldr	r0, [pc, #60]	; 37934 <flatcc_builder_table_add_union@@Base+0xf4>
   378f4:	bl	14148 <__assert_fail@plt>
   378f8:	ldr	r3, [pc, #32]	; 37920 <flatcc_builder_table_add_union@@Base+0xe0>
   378fc:	ldr	r2, [pc, #52]	; 37938 <flatcc_builder_table_add_union@@Base+0xf8>
   37900:	ldr	r1, [pc, #32]	; 37928 <flatcc_builder_table_add_union@@Base+0xe8>
   37904:	ldr	r0, [pc, #48]	; 3793c <flatcc_builder_table_add_union@@Base+0xfc>
   37908:	bl	14148 <__assert_fail@plt>
   3790c:	ldr	r3, [pc, #12]	; 37920 <flatcc_builder_table_add_union@@Base+0xe0>
   37910:	ldr	r2, [pc, #40]	; 37940 <flatcc_builder_table_add_union@@Base+0x100>
   37914:	ldr	r1, [pc, #12]	; 37928 <flatcc_builder_table_add_union@@Base+0xe8>
   37918:	ldr	r0, [pc, #36]	; 37944 <flatcc_builder_table_add_union@@Base+0x104>
   3791c:	bl	14148 <__assert_fail@plt>
   37920:	muleq	r5, r0, r7
   37924:	andeq	r0, r0, lr, ror #11
   37928:	andeq	r6, r5, r4, lsl r8
   3792c:	ldrdeq	r6, [r5], -r8
   37930:	andeq	r0, r0, pc, ror #11
   37934:			; <UNDEFINED> instruction: 0x00056bb4
   37938:	strdeq	r0, [r0], -r2
   3793c:	ldrdeq	r6, [r5], -r8
   37940:	strdeq	r0, [r0], -r6
   37944:	andeq	r6, r5, r4, ror #23

00037948 <flatcc_builder_table_add_union_vector@@Base>:
   37948:	push	{r4, r5, r6, r7, lr}
   3794c:	sub	sp, sp, #12
   37950:	mov	r7, r1
   37954:	add	r1, sp, #8
   37958:	stmdb	r1, {r2, r3}
   3795c:	ldr	r4, [sp]
   37960:	ldr	r6, [sp, #4]
   37964:	ldr	r3, [r0, #32]
   37968:	ldrh	r3, [r3, #14]
   3796c:	cmp	r3, #3
   37970:	bne	379ac <flatcc_builder_table_add_union_vector@@Base+0x64>
   37974:	mov	r5, r0
   37978:	clz	r3, r6
   3797c:	lsr	r3, r3, #5
   37980:	clz	r2, r4
   37984:	lsr	r2, r2, #5
   37988:	cmp	r2, r3
   3798c:	beq	379d4 <flatcc_builder_table_add_union_vector@@Base+0x8c>
   37990:	adds	r4, r4, #0
   37994:	movne	r4, #1
   37998:	cmp	r4, r3
   3799c:	mvnne	r0, #0
   379a0:	beq	379c0 <flatcc_builder_table_add_union_vector@@Base+0x78>
   379a4:	add	sp, sp, #12
   379a8:	pop	{r4, r5, r6, r7, pc}
   379ac:	ldr	r3, [pc, #136]	; 37a3c <flatcc_builder_table_add_union_vector@@Base+0xf4>
   379b0:	mov	r2, #1536	; 0x600
   379b4:	ldr	r1, [pc, #132]	; 37a40 <flatcc_builder_table_add_union_vector@@Base+0xf8>
   379b8:	ldr	r0, [pc, #132]	; 37a44 <flatcc_builder_table_add_union_vector@@Base+0xfc>
   379bc:	bl	14148 <__assert_fail@plt>
   379c0:	ldr	r3, [pc, #116]	; 37a3c <flatcc_builder_table_add_union_vector@@Base+0xf4>
   379c4:	ldr	r2, [pc, #124]	; 37a48 <flatcc_builder_table_add_union_vector@@Base+0x100>
   379c8:	ldr	r1, [pc, #112]	; 37a40 <flatcc_builder_table_add_union_vector@@Base+0xf8>
   379cc:	ldr	r0, [pc, #120]	; 37a4c <flatcc_builder_table_add_union_vector@@Base+0x104>
   379d0:	bl	14148 <__assert_fail@plt>
   379d4:	cmp	r4, #0
   379d8:	moveq	r0, #0
   379dc:	beq	379a4 <flatcc_builder_table_add_union_vector@@Base+0x5c>
   379e0:	sub	r1, r7, #1
   379e4:	mov	r0, r5
   379e8:	bl	37700 <flatcc_builder_table_add_offset@@Base>
   379ec:	cmp	r0, #0
   379f0:	beq	37a28 <flatcc_builder_table_add_union_vector@@Base+0xe0>
   379f4:	str	r4, [r0]
   379f8:	mov	r1, r7
   379fc:	mov	r0, r5
   37a00:	bl	37700 <flatcc_builder_table_add_offset@@Base>
   37a04:	cmp	r0, #0
   37a08:	strne	r6, [r0]
   37a0c:	movne	r0, #0
   37a10:	bne	379a4 <flatcc_builder_table_add_union_vector@@Base+0x5c>
   37a14:	ldr	r3, [pc, #32]	; 37a3c <flatcc_builder_table_add_union_vector@@Base+0xf4>
   37a18:	ldr	r2, [pc, #48]	; 37a50 <flatcc_builder_table_add_union_vector@@Base+0x108>
   37a1c:	ldr	r1, [pc, #28]	; 37a40 <flatcc_builder_table_add_union_vector@@Base+0xf8>
   37a20:	ldr	r0, [pc, #44]	; 37a54 <flatcc_builder_table_add_union_vector@@Base+0x10c>
   37a24:	bl	14148 <__assert_fail@plt>
   37a28:	ldr	r3, [pc, #12]	; 37a3c <flatcc_builder_table_add_union_vector@@Base+0xf4>
   37a2c:	ldr	r2, [pc, #36]	; 37a58 <flatcc_builder_table_add_union_vector@@Base+0x110>
   37a30:	ldr	r1, [pc, #8]	; 37a40 <flatcc_builder_table_add_union_vector@@Base+0xf8>
   37a34:	ldr	r0, [pc, #24]	; 37a54 <flatcc_builder_table_add_union_vector@@Base+0x10c>
   37a38:	bl	14148 <__assert_fail@plt>
   37a3c:			; <UNDEFINED> instruction: 0x000567b0
   37a40:	andeq	r6, r5, r4, lsl r8
   37a44:	ldrdeq	r6, [r5], -r8
   37a48:	andeq	r0, r0, r1, lsl #12
   37a4c:	strdeq	r6, [r5], -r0
   37a50:	andeq	r0, r0, r8, lsl #12
   37a54:	ldrdeq	r6, [r5], -r8
   37a58:	andeq	r0, r0, r4, lsl #12

00037a5c <flatcc_builder_push_buffer_alignment@@Base>:
   37a5c:	mov	r3, r0
   37a60:	ldrh	r0, [r0, #128]	; 0x80
   37a64:	mov	r2, #4
   37a68:	strh	r2, [r3, #128]	; 0x80
   37a6c:	bx	lr

00037a70 <flatcc_builder_pop_buffer_alignment@@Base>:
   37a70:	ldrh	r3, [r0, #128]	; 0x80
   37a74:	cmp	r3, r1
   37a78:	strhcc	r1, [r0, #128]	; 0x80
   37a7c:	bx	lr

00037a80 <flatcc_builder_get_buffer_alignment@@Base>:
   37a80:	ldrh	r0, [r0, #128]	; 0x80
   37a84:	bx	lr

00037a88 <flatcc_builder_set_vtable_clustering@@Base>:
   37a88:	clz	r1, r1
   37a8c:	lsr	r1, r1, #5
   37a90:	str	r1, [r0, #180]	; 0xb4
   37a94:	bx	lr

00037a98 <flatcc_builder_set_block_align@@Base>:
   37a98:	strh	r1, [r0, #132]	; 0x84
   37a9c:	bx	lr

00037aa0 <flatcc_builder_get_level@@Base>:
   37aa0:	ldr	r0, [r0, #156]	; 0x9c
   37aa4:	bx	lr

00037aa8 <flatcc_builder_set_max_level@@Base>:
   37aa8:	str	r1, [r0, #176]	; 0xb0
   37aac:	ldr	r3, [r0, #160]	; 0xa0
   37ab0:	cmp	r1, r3
   37ab4:	strgt	r1, [r0, #160]	; 0xa0
   37ab8:	bx	lr

00037abc <flatcc_builder_get_buffer_size@@Base>:
   37abc:	ldr	r2, [r0, #140]	; 0x8c
   37ac0:	ldr	r0, [r0, #136]	; 0x88
   37ac4:	sub	r0, r2, r0
   37ac8:	bx	lr

00037acc <flatcc_builder_get_buffer_start@@Base>:
   37acc:	ldr	r0, [r0, #136]	; 0x88
   37ad0:	bx	lr

00037ad4 <flatcc_builder_get_buffer_end@@Base>:
   37ad4:	ldr	r0, [r0, #140]	; 0x8c
   37ad8:	bx	lr

00037adc <flatcc_builder_set_vtable_cache_limit@@Base>:
   37adc:	str	r1, [r0, #172]	; 0xac
   37ae0:	bx	lr

00037ae4 <flatcc_builder_set_identifier@@Base>:
   37ae4:	ldr	r3, [pc, #16]	; 37afc <flatcc_builder_set_identifier@@Base+0x18>
   37ae8:	cmp	r1, #0
   37aec:	moveq	r1, r3
   37af0:	ldr	r3, [r1]
   37af4:	str	r3, [r0, #168]	; 0xa8
   37af8:	bx	lr
   37afc:	andeq	r6, r5, r4, asr #1

00037b00 <flatcc_builder_get_type@@Base>:
   37b00:	ldr	r3, [r0, #32]
   37b04:	cmp	r3, #0
   37b08:	ldrhne	r0, [r3, #14]
   37b0c:	moveq	r0, #0
   37b10:	bx	lr

00037b14 <flatcc_builder_get_type_at@@Base>:
   37b14:	cmp	r1, #0
   37b18:	ble	37b40 <flatcc_builder_get_type_at@@Base+0x2c>
   37b1c:	ldr	r3, [r0, #156]	; 0x9c
   37b20:	cmp	r1, r3
   37b24:	bgt	37b48 <flatcc_builder_get_type_at@@Base+0x34>
   37b28:	sub	r1, r1, r3
   37b2c:	ldr	r3, [r0, #32]
   37b30:	add	r1, r1, r1, lsl #3
   37b34:	add	r1, r3, r1, lsl #2
   37b38:	ldrh	r0, [r1, #14]
   37b3c:	bx	lr
   37b40:	mov	r0, #0
   37b44:	bx	lr
   37b48:	mov	r0, #0
   37b4c:	bx	lr

00037b50 <flatcc_builder_get_direct_buffer@@Base>:
   37b50:	ldr	r3, [r0, #184]	; 0xb8
   37b54:	cmp	r3, #0
   37b58:	beq	37b94 <flatcc_builder_get_direct_buffer@@Base+0x44>
   37b5c:	ldr	r2, [r0, #188]	; 0xbc
   37b60:	ldr	r3, [r0, #192]	; 0xc0
   37b64:	cmp	r2, r3
   37b68:	beq	37b80 <flatcc_builder_get_direct_buffer@@Base+0x30>
   37b6c:	cmp	r1, #0
   37b70:	beq	37ba8 <flatcc_builder_get_direct_buffer@@Base+0x58>
   37b74:	mov	r0, #0
   37b78:	str	r0, [r1]
   37b7c:	bx	lr
   37b80:	cmp	r1, #0
   37b84:	ldrne	r3, [r0, #212]	; 0xd4
   37b88:	strne	r3, [r1]
   37b8c:	ldr	r0, [r0, #196]	; 0xc4
   37b90:	bx	lr
   37b94:	cmp	r1, #0
   37b98:	beq	37bb0 <flatcc_builder_get_direct_buffer@@Base+0x60>
   37b9c:	mov	r0, #0
   37ba0:	str	r0, [r1]
   37ba4:	bx	lr
   37ba8:	mov	r0, #0
   37bac:	bx	lr
   37bb0:	mov	r0, #0
   37bb4:	bx	lr

00037bb8 <flatcc_builder_copy_buffer@@Base>:
   37bb8:	ldr	r3, [r0, #184]	; 0xb8
   37bbc:	cmp	r3, #0
   37bc0:	beq	37bec <flatcc_builder_copy_buffer@@Base+0x34>
   37bc4:	push	{r4, lr}
   37bc8:	add	r0, r0, #188	; 0xbc
   37bcc:	bl	382e8 <flatcc_emitter_copy_buffer@@Base>
   37bd0:	cmp	r0, #0
   37bd4:	popne	{r4, pc}
   37bd8:	ldr	r3, [pc, #20]	; 37bf4 <flatcc_builder_copy_buffer@@Base+0x3c>
   37bdc:	ldr	r2, [pc, #20]	; 37bf8 <flatcc_builder_copy_buffer@@Base+0x40>
   37be0:	ldr	r1, [pc, #20]	; 37bfc <flatcc_builder_copy_buffer@@Base+0x44>
   37be4:	ldr	r0, [pc, #20]	; 37c00 <flatcc_builder_copy_buffer@@Base+0x48>
   37be8:	bl	14148 <__assert_fail@plt>
   37bec:	mov	r0, #0
   37bf0:	bx	lr
   37bf4:	ldrdeq	r6, [r5], -r8
   37bf8:	andeq	r0, r0, r6, lsl #15
   37bfc:	andeq	r6, r5, r4, lsl r8
   37c00:	andeq	r6, r5, r8, lsl ip

00037c04 <flatcc_builder_finalize_buffer@@Base>:
   37c04:	push	{r4, r5, r6, lr}
   37c08:	mov	r5, r0
   37c0c:	ldr	r4, [r0, #140]	; 0x8c
   37c10:	ldr	r3, [r0, #136]	; 0x88
   37c14:	sub	r4, r4, r3
   37c18:	cmp	r1, #0
   37c1c:	strne	r4, [r1]
   37c20:	mov	r0, r4
   37c24:	bl	14040 <malloc@plt>
   37c28:	subs	r6, r0, #0
   37c2c:	beq	37c50 <flatcc_builder_finalize_buffer@@Base+0x4c>
   37c30:	mov	r2, r4
   37c34:	mov	r1, r6
   37c38:	mov	r0, r5
   37c3c:	bl	37bb8 <flatcc_builder_copy_buffer@@Base>
   37c40:	cmp	r0, #0
   37c44:	beq	37c64 <flatcc_builder_finalize_buffer@@Base+0x60>
   37c48:	mov	r0, r6
   37c4c:	pop	{r4, r5, r6, pc}
   37c50:	ldr	r3, [pc, #32]	; 37c78 <flatcc_builder_finalize_buffer@@Base+0x74>
   37c54:	ldr	r2, [pc, #32]	; 37c7c <flatcc_builder_finalize_buffer@@Base+0x78>
   37c58:	ldr	r1, [pc, #32]	; 37c80 <flatcc_builder_finalize_buffer@@Base+0x7c>
   37c5c:	ldr	r0, [pc, #32]	; 37c84 <flatcc_builder_finalize_buffer@@Base+0x80>
   37c60:	bl	14148 <__assert_fail@plt>
   37c64:	ldr	r3, [pc, #12]	; 37c78 <flatcc_builder_finalize_buffer@@Base+0x74>
   37c68:	ldr	r2, [pc, #24]	; 37c88 <flatcc_builder_finalize_buffer@@Base+0x84>
   37c6c:	ldr	r1, [pc, #12]	; 37c80 <flatcc_builder_finalize_buffer@@Base+0x7c>
   37c70:	ldr	r0, [pc, #12]	; 37c84 <flatcc_builder_finalize_buffer@@Base+0x80>
   37c74:	bl	14148 <__assert_fail@plt>
   37c78:	strdeq	r6, [r5], -r4
   37c7c:	muleq	r0, r8, r7
   37c80:	andeq	r6, r5, r4, lsl r8
   37c84:	andeq	r5, r4, r0, ror #3
   37c88:	muleq	r0, ip, r7

00037c8c <flatcc_builder_finalize_aligned_buffer@@Base>:
   37c8c:	push	{r4, r5, r6, r7, lr}
   37c90:	sub	sp, sp, #12
   37c94:	mov	r7, r0
   37c98:	ldr	r4, [r0, #140]	; 0x8c
   37c9c:	ldr	r3, [r0, #136]	; 0x88
   37ca0:	sub	r3, r4, r3
   37ca4:	subs	r6, r1, #0
   37ca8:	strne	r3, [r6]
   37cac:	ldrh	r1, [r0, #128]	; 0x80
   37cb0:	sub	r4, r1, #1
   37cb4:	add	r4, r4, r3
   37cb8:	rsb	r3, r1, #0
   37cbc:	and	r4, r4, r3
   37cc0:	add	r0, sp, #8
   37cc4:	mov	r3, #0
   37cc8:	str	r3, [r0, #-4]!
   37ccc:	mov	r2, r4
   37cd0:	cmp	r1, #4
   37cd4:	movcc	r1, #4
   37cd8:	bl	140a0 <posix_memalign@plt>
   37cdc:	cmp	r0, #0
   37ce0:	beq	37d04 <flatcc_builder_finalize_aligned_buffer@@Base+0x78>
   37ce4:	ldr	r0, [sp, #4]
   37ce8:	cmp	r0, #0
   37cec:	beq	37cf4 <flatcc_builder_finalize_aligned_buffer@@Base+0x68>
   37cf0:	bl	13fd4 <free@plt>
   37cf4:	cmp	r6, #0
   37cf8:	mov	r5, #0
   37cfc:	strne	r5, [r6]
   37d00:	b	37d28 <flatcc_builder_finalize_aligned_buffer@@Base+0x9c>
   37d04:	ldr	r5, [sp, #4]
   37d08:	cmp	r5, #0
   37d0c:	beq	37cf4 <flatcc_builder_finalize_aligned_buffer@@Base+0x68>
   37d10:	mov	r2, r4
   37d14:	mov	r1, r5
   37d18:	mov	r0, r7
   37d1c:	bl	37bb8 <flatcc_builder_copy_buffer@@Base>
   37d20:	cmp	r0, #0
   37d24:	beq	37d34 <flatcc_builder_finalize_aligned_buffer@@Base+0xa8>
   37d28:	mov	r0, r5
   37d2c:	add	sp, sp, #12
   37d30:	pop	{r4, r5, r6, r7, pc}
   37d34:	mov	r0, r5
   37d38:	bl	13fd4 <free@plt>
   37d3c:	b	37cf4 <flatcc_builder_finalize_aligned_buffer@@Base+0x68>

00037d40 <flatcc_builder_aligned_alloc@@Base>:
   37d40:	push	{lr}		; (str lr, [sp, #-4]!)
   37d44:	sub	sp, sp, #12
   37d48:	add	r3, sp, #8
   37d4c:	mov	r2, #0
   37d50:	str	r2, [r3, #-4]!
   37d54:	mov	r2, r1
   37d58:	cmp	r0, #4
   37d5c:	movcs	r1, r0
   37d60:	movcc	r1, #4
   37d64:	mov	r0, r3
   37d68:	bl	140a0 <posix_memalign@plt>
   37d6c:	cmp	r0, #0
   37d70:	beq	37d8c <flatcc_builder_aligned_alloc@@Base+0x4c>
   37d74:	ldr	r0, [sp, #4]
   37d78:	cmp	r0, #0
   37d7c:	beq	37d8c <flatcc_builder_aligned_alloc@@Base+0x4c>
   37d80:	bl	13fd4 <free@plt>
   37d84:	mov	r3, #0
   37d88:	str	r3, [sp, #4]
   37d8c:	ldr	r0, [sp, #4]
   37d90:	add	sp, sp, #12
   37d94:	pop	{pc}		; (ldr pc, [sp], #4)

00037d98 <flatcc_builder_aligned_free@@Base>:
   37d98:	push	{r4, lr}
   37d9c:	bl	13fd4 <free@plt>
   37da0:	pop	{r4, pc}

00037da4 <flatcc_builder_get_emit_context@@Base>:
   37da4:	ldr	r0, [r0, #36]	; 0x24
   37da8:	bx	lr

00037dac <flatcc_emitter_recycle_page@@Base>:
   37dac:	ldr	r3, [r0]
   37db0:	cmp	r3, r1
   37db4:	beq	37e04 <flatcc_emitter_recycle_page@@Base+0x58>
   37db8:	ldr	r3, [r0, #4]
   37dbc:	cmp	r1, r3
   37dc0:	beq	37e0c <flatcc_emitter_recycle_page@@Base+0x60>
   37dc4:	ldr	r3, [r1, #2944]	; 0xb80
   37dc8:	ldr	r2, [r1, #2948]	; 0xb84
   37dcc:	str	r2, [r3, #2948]	; 0xb84
   37dd0:	ldr	r3, [r1, #2948]	; 0xb84
   37dd4:	ldr	r2, [r1, #2944]	; 0xb80
   37dd8:	str	r2, [r3, #2944]	; 0xb80
   37ddc:	ldr	r3, [r0]
   37de0:	ldr	r3, [r3, #2948]	; 0xb84
   37de4:	str	r3, [r1, #2948]	; 0xb84
   37de8:	ldr	r2, [r0]
   37dec:	str	r2, [r1, #2944]	; 0xb80
   37df0:	str	r1, [r3, #2944]	; 0xb80
   37df4:	ldr	r3, [r1, #2944]	; 0xb80
   37df8:	str	r1, [r3, #2948]	; 0xb84
   37dfc:	mov	r0, #0
   37e00:	bx	lr
   37e04:	mvn	r0, #0
   37e08:	bx	lr
   37e0c:	mvn	r0, #0
   37e10:	bx	lr

00037e14 <flatcc_emitter_reset@@Base>:
   37e14:	ldr	r3, [r0]
   37e18:	cmp	r3, #0
   37e1c:	bxeq	lr
   37e20:	str	r3, [r0, #4]
   37e24:	add	r2, r3, #1472	; 0x5c0
   37e28:	str	r2, [r0, #8]
   37e2c:	str	r2, [r0, #16]
   37e30:	mov	r2, #1472	; 0x5c0
   37e34:	str	r2, [r0, #12]
   37e38:	str	r2, [r0, #20]
   37e3c:	sub	r2, r2, #2944	; 0xb80
   37e40:	str	r2, [r3, #2952]	; 0xb88
   37e44:	ldr	r3, [r0, #32]
   37e48:	cmp	r3, #0
   37e4c:	ldreq	r3, [r0, #24]
   37e50:	streq	r3, [r0, #32]
   37e54:	ldr	r3, [r0, #32]
   37e58:	add	r2, r3, r3, lsl #1
   37e5c:	ldr	r3, [r0, #24]
   37e60:	lsr	r3, r3, #2
   37e64:	add	r3, r3, r2, lsr #2
   37e68:	str	r3, [r0, #32]
   37e6c:	mov	r2, #0
   37e70:	str	r2, [r0, #24]
   37e74:	ldr	r2, [r0, #28]
   37e78:	cmp	r2, r3, lsl #1
   37e7c:	bxls	lr
   37e80:	push	{r4, lr}
   37e84:	mov	r4, r0
   37e88:	ldr	r3, [r0, #4]
   37e8c:	ldr	r0, [r3, #2944]	; 0xb80
   37e90:	ldr	r2, [r4]
   37e94:	cmp	r0, r2
   37e98:	popeq	{r4, pc}
   37e9c:	ldr	r2, [r0, #2944]	; 0xb80
   37ea0:	str	r2, [r3, #2944]	; 0xb80
   37ea4:	ldr	r3, [r0, #2944]	; 0xb80
   37ea8:	ldr	r2, [r4, #4]
   37eac:	str	r2, [r3, #2948]	; 0xb84
   37eb0:	bl	13fd4 <free@plt>
   37eb4:	ldr	r3, [r4, #28]
   37eb8:	sub	r3, r3, #2944	; 0xb80
   37ebc:	str	r3, [r4, #28]
   37ec0:	ldr	r2, [r4, #32]
   37ec4:	cmp	r3, r2, lsl #1
   37ec8:	popls	{r4, pc}
   37ecc:	ldr	r3, [r4, #4]
   37ed0:	ldr	r0, [r3, #2944]	; 0xb80
   37ed4:	ldr	r2, [r4]
   37ed8:	cmp	r0, r2
   37edc:	bne	37e9c <flatcc_emitter_reset@@Base+0x88>
   37ee0:	pop	{r4, pc}

00037ee4 <flatcc_emitter_clear@@Base>:
   37ee4:	ldr	r3, [r0]
   37ee8:	cmp	r3, #0
   37eec:	bxeq	lr
   37ef0:	push	{r4, r5, r6, lr}
   37ef4:	mov	r5, r0
   37ef8:	ldr	r2, [r3, #2948]	; 0xb84
   37efc:	mov	r1, #0
   37f00:	str	r1, [r2, #2944]	; 0xb80
   37f04:	ldr	r4, [r3, #2944]	; 0xb80
   37f08:	cmp	r4, r1
   37f0c:	bne	37f1c <flatcc_emitter_clear@@Base+0x38>
   37f10:	mov	r4, r3
   37f14:	b	37f30 <flatcc_emitter_clear@@Base+0x4c>
   37f18:	mov	r4, r3
   37f1c:	ldr	r0, [r4, #2948]	; 0xb84
   37f20:	bl	13fd4 <free@plt>
   37f24:	ldr	r3, [r4, #2944]	; 0xb80
   37f28:	cmp	r3, #0
   37f2c:	bne	37f18 <flatcc_emitter_clear@@Base+0x34>
   37f30:	mov	r0, r4
   37f34:	bl	13fd4 <free@plt>
   37f38:	mov	r2, #36	; 0x24
   37f3c:	mov	r1, #0
   37f40:	mov	r0, r5
   37f44:	bl	140ac <memset@plt>
   37f48:	pop	{r4, r5, r6, pc}

00037f4c <flatcc_emitter@@Base>:
   37f4c:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   37f50:	mov	r4, r0
   37f54:	ldr	ip, [sp, #40]	; 0x28
   37f58:	ldr	r0, [r0, #24]
   37f5c:	add	r0, r0, ip
   37f60:	str	r0, [r4, #24]
   37f64:	cmp	r3, #0
   37f68:	blt	37f94 <flatcc_emitter@@Base+0x48>
   37f6c:	ldr	r3, [r4, #20]
   37f70:	cmp	ip, r3
   37f74:	bls	38080 <flatcc_emitter@@Base+0x134>
   37f78:	cmp	r2, #0
   37f7c:	addne	r7, r1, #8
   37f80:	movne	sl, r2
   37f84:	movne	fp, #2944	; 0xb80
   37f88:	bne	38234 <flatcc_emitter@@Base+0x2e8>
   37f8c:	mov	r0, r2
   37f90:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   37f94:	ldr	r3, [r4, #12]
   37f98:	cmp	ip, r3
   37f9c:	bhi	37fc0 <flatcc_emitter@@Base+0x74>
   37fa0:	ldr	r5, [r4, #8]
   37fa4:	sub	r5, r5, ip
   37fa8:	str	r5, [r4, #8]
   37fac:	sub	r3, r3, ip
   37fb0:	str	r3, [r4, #12]
   37fb4:	b	38094 <flatcc_emitter@@Base+0x148>
   37fb8:	mov	r0, r2
   37fbc:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   37fc0:	add	r7, r1, r2, lsl #3
   37fc4:	mov	r8, r2
   37fc8:	mov	fp, #1472	; 0x5c0
   37fcc:	mov	sl, #2944	; 0xb80
   37fd0:	b	381b0 <flatcc_emitter@@Base+0x264>
   37fd4:	mov	r2, r5
   37fd8:	rsb	r1, r2, #0
   37fdc:	ldr	r0, [r4, #8]
   37fe0:	add	r0, r0, r1
   37fe4:	str	r0, [r4, #8]
   37fe8:	sub	r3, r3, r2
   37fec:	str	r3, [r4, #12]
   37ff0:	add	r6, r6, r1
   37ff4:	sub	r5, r5, r2
   37ff8:	mov	r1, r6
   37ffc:	bl	13fe0 <memcpy@plt>
   38000:	cmp	r5, #0
   38004:	beq	381a8 <flatcc_emitter@@Base+0x25c>
   38008:	ldr	r3, [r4, #12]
   3800c:	cmp	r3, r5
   38010:	bcs	37fd4 <flatcc_emitter@@Base+0x88>
   38014:	cmp	r3, #0
   38018:	movne	r2, r3
   3801c:	bne	37fd8 <flatcc_emitter@@Base+0x8c>
   38020:	ldr	r9, [r4]
   38024:	cmp	r9, #0
   38028:	beq	382c8 <flatcc_emitter@@Base+0x37c>
   3802c:	ldr	r2, [r9, #2948]	; 0xb84
   38030:	ldr	r3, [r4, #4]
   38034:	cmp	r2, r3
   38038:	beq	38250 <flatcc_emitter@@Base+0x304>
   3803c:	ldr	r3, [r9, #2952]	; 0xb88
   38040:	sub	r3, r3, #2944	; 0xb80
   38044:	str	r3, [r2, #2952]	; 0xb88
   38048:	ldr	r3, [r4]
   3804c:	ldr	r3, [r3, #2948]	; 0xb84
   38050:	str	r3, [r4]
   38054:	ldr	r3, [r4]
   38058:	add	r2, r3, #2944	; 0xb80
   3805c:	str	r2, [r4, #8]
   38060:	str	sl, [r4, #12]
   38064:	ldr	r2, [r3, #2944]	; 0xb80
   38068:	ldr	r2, [r2, #2952]	; 0xb88
   3806c:	sub	r2, r2, #2944	; 0xb80
   38070:	str	r2, [r3, #2952]	; 0xb88
   38074:	b	38000 <flatcc_emitter@@Base+0xb4>
   38078:	mov	r0, #0
   3807c:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   38080:	ldr	r5, [r4, #16]
   38084:	add	r0, r5, ip
   38088:	str	r0, [r4, #16]
   3808c:	sub	r3, r3, ip
   38090:	str	r3, [r4, #20]
   38094:	cmp	r2, #0
   38098:	addne	r4, r1, #8
   3809c:	movne	r8, r2
   380a0:	beq	37fb8 <flatcc_emitter@@Base+0x6c>
   380a4:	ldr	r2, [r4, #-4]
   380a8:	ldr	r1, [r4, #-8]
   380ac:	mov	r0, r5
   380b0:	bl	13fe0 <memcpy@plt>
   380b4:	ldr	r3, [r4, #-4]
   380b8:	add	r5, r5, r3
   380bc:	add	r4, r4, #8
   380c0:	subs	r8, r8, #1
   380c4:	bne	380a4 <flatcc_emitter@@Base+0x158>
   380c8:	mov	r0, #0
   380cc:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   380d0:	ldr	r0, [pc, #520]	; 382e0 <flatcc_emitter@@Base+0x394>
   380d4:	bl	14040 <malloc@plt>
   380d8:	cmp	r0, #0
   380dc:	beq	38198 <flatcc_emitter@@Base+0x24c>
   380e0:	ldr	r3, [r4, #28]
   380e4:	add	r3, r3, #2944	; 0xb80
   380e8:	str	r3, [r4, #28]
   380ec:	str	r5, [r0, #2948]	; 0xb84
   380f0:	str	r9, [r0, #2944]	; 0xb80
   380f4:	str	r0, [r9, #2948]	; 0xb84
   380f8:	ldr	r3, [r4, #4]
   380fc:	str	r0, [r3, #2944]	; 0xb80
   38100:	str	r0, [r4, #4]
   38104:	b	38178 <flatcc_emitter@@Base+0x22c>
   38108:	mov	r5, r6
   3810c:	mov	r2, r5
   38110:	mov	r1, r8
   38114:	ldr	r0, [r4, #16]
   38118:	bl	13fe0 <memcpy@plt>
   3811c:	sub	r6, r6, r5
   38120:	add	r8, r8, r5
   38124:	ldr	r3, [r4, #16]
   38128:	add	r3, r3, r5
   3812c:	str	r3, [r4, #16]
   38130:	ldr	r3, [r4, #20]
   38134:	sub	r5, r3, r5
   38138:	str	r5, [r4, #20]
   3813c:	cmp	r6, #0
   38140:	beq	38228 <flatcc_emitter@@Base+0x2dc>
   38144:	ldr	r5, [r4, #20]
   38148:	cmp	r5, r6
   3814c:	bcs	38108 <flatcc_emitter@@Base+0x1bc>
   38150:	cmp	r5, #0
   38154:	bne	3810c <flatcc_emitter@@Base+0x1c0>
   38158:	ldr	r5, [r4, #4]
   3815c:	cmp	r5, #0
   38160:	beq	38210 <flatcc_emitter@@Base+0x2c4>
   38164:	ldr	r9, [r5, #2944]	; 0xb80
   38168:	ldr	r3, [r4]
   3816c:	cmp	r9, r3
   38170:	strne	r9, [r4, #4]
   38174:	beq	380d0 <flatcc_emitter@@Base+0x184>
   38178:	ldr	r3, [r4, #4]
   3817c:	str	r3, [r4, #16]
   38180:	str	fp, [r4, #20]
   38184:	ldr	r2, [r3, #2948]	; 0xb84
   38188:	ldr	r2, [r2, #2952]	; 0xb88
   3818c:	add	r2, r2, #2944	; 0xb80
   38190:	str	r2, [r3, #2952]	; 0xb88
   38194:	b	3813c <flatcc_emitter@@Base+0x1f0>
   38198:	mvn	r0, #0
   3819c:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   381a0:	mvn	r0, #0
   381a4:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   381a8:	sub	r7, r7, #8
   381ac:	sub	r8, r8, #1
   381b0:	cmp	r8, #0
   381b4:	beq	38078 <flatcc_emitter@@Base+0x12c>
   381b8:	ldr	r5, [r7, #-4]
   381bc:	ldr	r6, [r7, #-8]
   381c0:	add	r6, r6, r5
   381c4:	cmp	r5, #0
   381c8:	bne	38008 <flatcc_emitter@@Base+0xbc>
   381cc:	b	381a8 <flatcc_emitter@@Base+0x25c>
   381d0:	ldr	r3, [r4, #28]
   381d4:	add	r3, r3, #2944	; 0xb80
   381d8:	str	r3, [r4, #28]
   381dc:	str	r0, [r4]
   381e0:	str	r0, [r4, #4]
   381e4:	str	r0, [r0, #2944]	; 0xb80
   381e8:	str	r0, [r0, #2948]	; 0xb84
   381ec:	add	r3, r0, #1472	; 0x5c0
   381f0:	str	r3, [r4, #8]
   381f4:	str	r3, [r4, #16]
   381f8:	mov	r3, #1472	; 0x5c0
   381fc:	str	r3, [r4, #12]
   38200:	str	r3, [r4, #20]
   38204:	sub	r3, r3, #2944	; 0xb80
   38208:	str	r3, [r0, #2952]	; 0xb88
   3820c:	b	3813c <flatcc_emitter@@Base+0x1f0>
   38210:	ldr	r0, [pc, #200]	; 382e0 <flatcc_emitter@@Base+0x394>
   38214:	bl	14040 <malloc@plt>
   38218:	cmp	r0, #0
   3821c:	bne	381d0 <flatcc_emitter@@Base+0x284>
   38220:	mvn	r0, #0
   38224:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   38228:	add	r7, r7, #8
   3822c:	subs	sl, sl, #1
   38230:	beq	38248 <flatcc_emitter@@Base+0x2fc>
   38234:	ldr	r8, [r7, #-8]
   38238:	ldr	r6, [r7, #-4]
   3823c:	cmp	r6, #0
   38240:	bne	38144 <flatcc_emitter@@Base+0x1f8>
   38244:	b	38228 <flatcc_emitter@@Base+0x2dc>
   38248:	mov	r0, #0
   3824c:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   38250:	ldr	r0, [pc, #136]	; 382e0 <flatcc_emitter@@Base+0x394>
   38254:	bl	14040 <malloc@plt>
   38258:	cmp	r0, #0
   3825c:	beq	381a0 <flatcc_emitter@@Base+0x254>
   38260:	ldr	r3, [r4, #28]
   38264:	add	r3, r3, #2944	; 0xb80
   38268:	str	r3, [r4, #28]
   3826c:	ldr	r3, [r4, #4]
   38270:	str	r3, [r0, #2948]	; 0xb84
   38274:	str	r9, [r0, #2944]	; 0xb80
   38278:	str	r0, [r9, #2948]	; 0xb84
   3827c:	ldr	r3, [r4, #4]
   38280:	str	r0, [r3, #2944]	; 0xb80
   38284:	str	r0, [r4]
   38288:	b	38054 <flatcc_emitter@@Base+0x108>
   3828c:	ldr	r3, [r4, #28]
   38290:	add	r3, r3, #2944	; 0xb80
   38294:	str	r3, [r4, #28]
   38298:	str	r0, [r4]
   3829c:	str	r0, [r4, #4]
   382a0:	str	r0, [r0, #2944]	; 0xb80
   382a4:	str	r0, [r0, #2948]	; 0xb84
   382a8:	add	r3, r0, #1472	; 0x5c0
   382ac:	str	r3, [r4, #8]
   382b0:	str	r3, [r4, #16]
   382b4:	str	fp, [r4, #12]
   382b8:	str	fp, [r4, #20]
   382bc:	ldr	r3, [pc, #32]	; 382e4 <flatcc_emitter@@Base+0x398>
   382c0:	str	r3, [r0, #2952]	; 0xb88
   382c4:	b	38000 <flatcc_emitter@@Base+0xb4>
   382c8:	ldr	r0, [pc, #16]	; 382e0 <flatcc_emitter@@Base+0x394>
   382cc:	bl	14040 <malloc@plt>
   382d0:	cmp	r0, #0
   382d4:	bne	3828c <flatcc_emitter@@Base+0x340>
   382d8:	mvn	r0, #0
   382dc:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   382e0:	andeq	r0, r0, ip, lsl #23
   382e4:			; <UNDEFINED> instruction: 0xfffffa40

000382e8 <flatcc_emitter_copy_buffer@@Base>:
   382e8:	push	{r4, r5, r6, r7, r8, lr}
   382ec:	mov	r5, r1
   382f0:	ldr	r1, [r0, #24]
   382f4:	cmp	r1, r2
   382f8:	bhi	3839c <flatcc_emitter_copy_buffer@@Base+0xb4>
   382fc:	ldr	r3, [r0]
   38300:	cmp	r3, #0
   38304:	beq	383a4 <flatcc_emitter_copy_buffer@@Base+0xbc>
   38308:	mov	r6, r0
   3830c:	ldr	r2, [r0, #4]
   38310:	cmp	r3, r2
   38314:	beq	38388 <flatcc_emitter_copy_buffer@@Base+0xa0>
   38318:	ldr	r4, [r0, #12]
   3831c:	rsb	r4, r4, #2944	; 0xb80
   38320:	mov	r2, r4
   38324:	ldr	r1, [r0, #8]
   38328:	mov	r0, r5
   3832c:	bl	13fe0 <memcpy@plt>
   38330:	add	r5, r5, r4
   38334:	ldr	r3, [r6]
   38338:	ldr	r4, [r3, #2944]	; 0xb80
   3833c:	ldr	r1, [r6, #4]
   38340:	cmp	r4, r1
   38344:	beq	38370 <flatcc_emitter_copy_buffer@@Base+0x88>
   38348:	mov	r7, #2944	; 0xb80
   3834c:	mov	r2, r7
   38350:	mov	r1, r4
   38354:	mov	r0, r5
   38358:	bl	13fe0 <memcpy@plt>
   3835c:	add	r5, r5, #2944	; 0xb80
   38360:	ldr	r4, [r4, #2944]	; 0xb80
   38364:	ldr	r1, [r6, #4]
   38368:	cmp	r1, r4
   3836c:	bne	3834c <flatcc_emitter_copy_buffer@@Base+0x64>
   38370:	ldr	r2, [r6, #20]
   38374:	rsb	r2, r2, #2944	; 0xb80
   38378:	mov	r0, r5
   3837c:	bl	13fe0 <memcpy@plt>
   38380:	mov	r0, r5
   38384:	pop	{r4, r5, r6, r7, r8, pc}
   38388:	mov	r2, r1
   3838c:	ldr	r1, [r0, #8]
   38390:	mov	r0, r5
   38394:	bl	13fe0 <memcpy@plt>
   38398:	b	38380 <flatcc_emitter_copy_buffer@@Base+0x98>
   3839c:	mov	r5, #0
   383a0:	b	38380 <flatcc_emitter_copy_buffer@@Base+0x98>
   383a4:	mov	r5, #0
   383a8:	b	38380 <flatcc_emitter_copy_buffer@@Base+0x98>
   383ac:	andeq	r0, r0, r0

000383b0 <cmetrohash64_1@@Base>:
   383b0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   383b4:	sub	sp, sp, #300	; 0x12c
   383b8:	add	r1, r0, r2
   383bc:	mov	r7, r1
   383c0:	str	r1, [sp, #276]	; 0x114
   383c4:	add	r5, pc, #100	; 0x64
   383c8:	ldrd	r4, [r5]
   383cc:	adds	r4, r4, r2
   383d0:	adc	r5, r5, r3
   383d4:	ldr	r1, [pc, #104]	; 38444 <cmetrohash64_1@@Base+0x94>
   383d8:	ldr	ip, [sp, #336]	; 0x150
   383dc:	umlal	r4, r5, r1, ip
   383e0:	add	r1, sp, #280	; 0x118
   383e4:	strd	r4, [r1]
   383e8:	add	r1, sp, #288	; 0x120
   383ec:	strd	r4, [r1]
   383f0:	cmp	r3, #0
   383f4:	cmpeq	r2, #31
   383f8:	bls	38a4c <cmetrohash64_1@@Base+0x69c>
   383fc:	strd	r4, [sp, #8]
   38400:	strd	r4, [sp, #16]
   38404:	mov	r8, r4
   38408:	mov	r9, r5
   3840c:	strd	r4, [sp]
   38410:	ldr	lr, [pc, #44]	; 38444 <cmetrohash64_1@@Base+0x94>
   38414:	ldr	ip, [pc, #36]	; 38440 <cmetrohash64_1@@Base+0x90>
   38418:	ldr	r6, [pc, #24]	; 38438 <cmetrohash64_1@@Base+0x88>
   3841c:	ldr	r1, [pc, #24]	; 3843c <cmetrohash64_1@@Base+0x8c>
   38420:	sub	r7, r7, #32
   38424:	str	r7, [sp, #272]	; 0x110
   38428:	b	38448 <cmetrohash64_1@@Base+0x98>
   3842c:	nop			; (mov r0, r0)
   38430:	svcge	0x00065edb
   38434:	rscvs	r5, r2, fp, lsr sp
   38438:	blvc	ff7e852c <__bss_end__@@Base+0xff781438>
   3843c:	svccs	0x005870a5
   38440:			; <UNDEFINED> instruction: 0x8648dbdb
   38444:	ldmdagt	sl!, {r0, r5, r6, r7, r8, ip, pc}
   38448:	ldrb	r2, [r0, #1]
   3844c:	mov	r4, #0
   38450:	str	r4, [sp, #28]
   38454:	lsl	r3, r2, #8
   38458:	str	r3, [sp, #24]
   3845c:	ldrb	r2, [r0, #2]
   38460:	str	r4, [sp, #36]	; 0x24
   38464:	lsl	r3, r2, #16
   38468:	str	r3, [sp, #32]
   3846c:	ldrd	r4, [sp, #24]
   38470:	ldrd	r2, [sp, #32]
   38474:	orr	r4, r4, r2
   38478:	orr	r5, r5, r3
   3847c:	ldrb	r2, [r0]
   38480:	mov	r3, #0
   38484:	orr	r2, r2, r4
   38488:	orr	r3, r3, r5
   3848c:	ldrb	r4, [r0, #3]
   38490:	mov	r7, #0
   38494:	str	r7, [sp, #44]	; 0x2c
   38498:	lsl	r4, r4, #24
   3849c:	str	r4, [sp, #40]	; 0x28
   384a0:	ldrd	r4, [sp, #40]	; 0x28
   384a4:	orr	r4, r4, r2
   384a8:	orr	r5, r5, r3
   384ac:	ldrb	fp, [r0, #4]
   384b0:	orr	r2, r4, r7
   384b4:	orr	r3, r5, fp
   384b8:	ldrb	r4, [r0, #5]
   384bc:	lsl	r4, r4, #8
   384c0:	str	r4, [sp, #52]	; 0x34
   384c4:	str	r7, [sp, #48]	; 0x30
   384c8:	ldrd	r4, [sp, #48]	; 0x30
   384cc:	orr	r4, r4, r2
   384d0:	orr	r5, r5, r3
   384d4:	mov	r2, r4
   384d8:	mov	r3, r5
   384dc:	ldrb	r4, [r0, #6]
   384e0:	lsl	r4, r4, #16
   384e4:	str	r4, [sp, #60]	; 0x3c
   384e8:	str	r7, [sp, #56]	; 0x38
   384ec:	ldrd	r4, [sp, #56]	; 0x38
   384f0:	orr	r4, r4, r2
   384f4:	orr	r5, r5, r3
   384f8:	mov	r2, r4
   384fc:	mov	r3, r5
   38500:	ldrb	r4, [r0, #7]
   38504:	lsl	r4, r4, #24
   38508:	str	r4, [sp, #68]	; 0x44
   3850c:	str	r7, [sp, #64]	; 0x40
   38510:	ldrd	r4, [sp, #64]	; 0x40
   38514:	orr	r4, r4, r2
   38518:	orr	r5, r5, r3
   3851c:	umull	r2, r3, r4, lr
   38520:	mla	r3, lr, r5, r3
   38524:	ldrd	r4, [sp]
   38528:	adds	r4, r4, r2
   3852c:	adc	r5, r5, r3
   38530:	mov	r2, r4
   38534:	lsr	r4, r4, #29
   38538:	orr	r4, r4, r5, lsl #3
   3853c:	str	r4, [sp, #72]	; 0x48
   38540:	lsr	r3, r5, #29
   38544:	orr	r3, r3, r2, lsl #3
   38548:	str	r3, [sp, #76]	; 0x4c
   3854c:	ldrd	r2, [sp, #72]	; 0x48
   38550:	ldrd	r4, [sp, #16]
   38554:	adds	r2, r2, r4
   38558:	adc	r3, r3, r5
   3855c:	strd	r2, [sp]
   38560:	ldrb	r2, [r0, #9]
   38564:	str	r7, [sp, #84]	; 0x54
   38568:	lsl	r3, r2, #8
   3856c:	str	r3, [sp, #80]	; 0x50
   38570:	ldrb	r2, [r0, #10]
   38574:	str	r7, [sp, #92]	; 0x5c
   38578:	lsl	r3, r2, #16
   3857c:	str	r3, [sp, #88]	; 0x58
   38580:	ldrd	r4, [sp, #80]	; 0x50
   38584:	ldrd	r2, [sp, #88]	; 0x58
   38588:	orr	r4, r4, r2
   3858c:	orr	r5, r5, r3
   38590:	ldrb	r2, [r0, #8]
   38594:	mov	r3, #0
   38598:	orr	r2, r2, r4
   3859c:	orr	r3, r3, r5
   385a0:	ldrb	r4, [r0, #11]
   385a4:	str	r7, [sp, #100]	; 0x64
   385a8:	lsl	r5, r4, #24
   385ac:	str	r5, [sp, #96]	; 0x60
   385b0:	ldrd	r4, [sp, #96]	; 0x60
   385b4:	orr	r4, r4, r2
   385b8:	orr	r5, r5, r3
   385bc:	mov	r2, r4
   385c0:	mov	r3, r5
   385c4:	ldrb	r5, [r0, #12]
   385c8:	str	r5, [sp, #108]	; 0x6c
   385cc:	str	r7, [sp, #104]	; 0x68
   385d0:	ldrd	r4, [sp, #104]	; 0x68
   385d4:	orr	r4, r4, r2
   385d8:	orr	r5, r5, r3
   385dc:	mov	r2, r4
   385e0:	mov	r3, r5
   385e4:	ldrb	r4, [r0, #13]
   385e8:	lsl	r5, r4, #8
   385ec:	str	r5, [sp, #116]	; 0x74
   385f0:	str	r7, [sp, #112]	; 0x70
   385f4:	ldrd	r4, [sp, #112]	; 0x70
   385f8:	orr	r4, r4, r2
   385fc:	orr	r5, r5, r3
   38600:	mov	r2, r4
   38604:	mov	r3, r5
   38608:	ldrb	r4, [r0, #14]
   3860c:	lsl	r5, r4, #16
   38610:	str	r5, [sp, #124]	; 0x7c
   38614:	str	r7, [sp, #120]	; 0x78
   38618:	ldrd	r4, [sp, #120]	; 0x78
   3861c:	orr	r4, r4, r2
   38620:	orr	r5, r5, r3
   38624:	mov	r2, r4
   38628:	mov	r3, r5
   3862c:	ldrb	r4, [r0, #15]
   38630:	lsl	r5, r4, #24
   38634:	str	r5, [sp, #132]	; 0x84
   38638:	str	r7, [sp, #128]	; 0x80
   3863c:	ldrd	r4, [sp, #128]	; 0x80
   38640:	orr	r4, r4, r2
   38644:	orr	r5, r5, r3
   38648:	mov	r3, r5
   3864c:	umull	r4, r5, r4, ip
   38650:	mla	r5, ip, r3, r5
   38654:	adds	r4, r4, r8
   38658:	adc	r5, r5, r9
   3865c:	lsr	r3, r4, #29
   38660:	orr	r3, r3, r5, lsl #3
   38664:	str	r3, [sp, #136]	; 0x88
   38668:	lsr	r3, r5, #29
   3866c:	orr	r3, r3, r4, lsl #3
   38670:	str	r3, [sp, #140]	; 0x8c
   38674:	ldrd	r2, [sp, #136]	; 0x88
   38678:	ldrd	r8, [sp, #8]
   3867c:	adds	r2, r2, r8
   38680:	adc	r3, r3, r9
   38684:	mov	r8, r2
   38688:	mov	r9, r3
   3868c:	ldrb	r2, [r0, #17]
   38690:	str	r7, [sp, #148]	; 0x94
   38694:	lsl	r3, r2, #8
   38698:	str	r3, [sp, #144]	; 0x90
   3869c:	ldrb	r2, [r0, #18]
   386a0:	str	r7, [sp, #156]	; 0x9c
   386a4:	lsl	r3, r2, #16
   386a8:	str	r3, [sp, #152]	; 0x98
   386ac:	ldrd	r2, [sp, #144]	; 0x90
   386b0:	ldrd	r4, [sp, #152]	; 0x98
   386b4:	orr	r2, r2, r4
   386b8:	orr	r3, r3, r5
   386bc:	mov	r4, r2
   386c0:	mov	r5, r3
   386c4:	ldrb	r2, [r0, #16]
   386c8:	mov	r3, #0
   386cc:	orr	r2, r2, r4
   386d0:	orr	r3, r3, r5
   386d4:	ldrb	r4, [r0, #19]
   386d8:	str	r7, [sp, #164]	; 0xa4
   386dc:	lsl	r5, r4, #24
   386e0:	str	r5, [sp, #160]	; 0xa0
   386e4:	ldrd	r4, [sp, #160]	; 0xa0
   386e8:	orr	r4, r4, r2
   386ec:	orr	r5, r5, r3
   386f0:	mov	r2, r4
   386f4:	mov	r3, r5
   386f8:	ldrb	r5, [r0, #20]
   386fc:	str	r5, [sp, #172]	; 0xac
   38700:	str	r7, [sp, #168]	; 0xa8
   38704:	ldrd	r4, [sp, #168]	; 0xa8
   38708:	orr	r4, r4, r2
   3870c:	orr	r5, r5, r3
   38710:	mov	r2, r4
   38714:	mov	r3, r5
   38718:	ldrb	r4, [r0, #21]
   3871c:	lsl	r5, r4, #8
   38720:	str	r5, [sp, #180]	; 0xb4
   38724:	str	r7, [sp, #176]	; 0xb0
   38728:	ldrd	r4, [sp, #176]	; 0xb0
   3872c:	orr	r4, r4, r2
   38730:	orr	r5, r5, r3
   38734:	mov	r2, r4
   38738:	mov	r3, r5
   3873c:	ldrb	r4, [r0, #22]
   38740:	lsl	r5, r4, #16
   38744:	str	r5, [sp, #188]	; 0xbc
   38748:	str	r7, [sp, #184]	; 0xb8
   3874c:	ldrd	r4, [sp, #184]	; 0xb8
   38750:	orr	r4, r4, r2
   38754:	orr	r5, r5, r3
   38758:	mov	r2, r4
   3875c:	mov	r3, r5
   38760:	ldrb	r4, [r0, #23]
   38764:	lsl	r5, r4, #24
   38768:	str	r5, [sp, #196]	; 0xc4
   3876c:	str	r7, [sp, #192]	; 0xc0
   38770:	ldrd	r4, [sp, #192]	; 0xc0
   38774:	orr	r4, r4, r2
   38778:	orr	r5, r5, r3
   3877c:	umull	r2, r3, r4, r6
   38780:	mla	r3, r6, r5, r3
   38784:	ldrd	r4, [sp, #16]
   38788:	adds	r4, r4, r2
   3878c:	adc	r5, r5, r3
   38790:	mov	r2, r4
   38794:	mov	r3, r5
   38798:	lsr	r4, r4, #29
   3879c:	orr	r5, r4, r5, lsl #3
   387a0:	str	r5, [sp, #200]	; 0xc8
   387a4:	lsr	r3, r3, #29
   387a8:	orr	r3, r3, r2, lsl #3
   387ac:	str	r3, [sp, #204]	; 0xcc
   387b0:	ldrd	r4, [sp, #200]	; 0xc8
   387b4:	ldrd	r2, [sp]
   387b8:	adds	r4, r4, r2
   387bc:	adc	r5, r5, r3
   387c0:	strd	r4, [sp, #16]
   387c4:	ldrb	r2, [r0, #26]
   387c8:	str	r7, [sp, #212]	; 0xd4
   387cc:	lsl	r3, r2, #16
   387d0:	str	r3, [sp, #208]	; 0xd0
   387d4:	ldrb	r2, [r0, #25]
   387d8:	str	r7, [sp, #220]	; 0xdc
   387dc:	lsl	r3, r2, #8
   387e0:	str	r3, [sp, #216]	; 0xd8
   387e4:	ldrd	r2, [sp, #208]	; 0xd0
   387e8:	ldrd	r4, [sp, #216]	; 0xd8
   387ec:	orr	r2, r2, r4
   387f0:	orr	r3, r3, r5
   387f4:	mov	r4, r2
   387f8:	mov	r5, r3
   387fc:	ldrb	r2, [r0, #24]
   38800:	mov	r3, #0
   38804:	orr	r2, r2, r4
   38808:	orr	r3, r3, r5
   3880c:	ldrb	r4, [r0, #27]
   38810:	str	r7, [sp, #228]	; 0xe4
   38814:	lsl	r5, r4, #24
   38818:	str	r5, [sp, #224]	; 0xe0
   3881c:	ldrd	r4, [sp, #224]	; 0xe0
   38820:	orr	r4, r4, r2
   38824:	orr	r5, r5, r3
   38828:	mov	r2, r4
   3882c:	mov	r3, r5
   38830:	ldrb	r5, [r0, #28]
   38834:	str	r5, [sp, #236]	; 0xec
   38838:	str	r7, [sp, #232]	; 0xe8
   3883c:	ldrd	r4, [sp, #232]	; 0xe8
   38840:	orr	r4, r4, r2
   38844:	orr	r5, r5, r3
   38848:	mov	r2, r4
   3884c:	mov	r3, r5
   38850:	ldrb	r4, [r0, #29]
   38854:	lsl	r5, r4, #8
   38858:	str	r5, [sp, #244]	; 0xf4
   3885c:	str	r7, [sp, #240]	; 0xf0
   38860:	ldrd	r4, [sp, #240]	; 0xf0
   38864:	orr	r4, r4, r2
   38868:	orr	r5, r5, r3
   3886c:	mov	r2, r4
   38870:	mov	r3, r5
   38874:	ldrb	r4, [r0, #30]
   38878:	lsl	r5, r4, #16
   3887c:	str	r5, [sp, #252]	; 0xfc
   38880:	str	r7, [sp, #248]	; 0xf8
   38884:	ldrd	r4, [sp, #248]	; 0xf8
   38888:	orr	r4, r4, r2
   3888c:	orr	r5, r5, r3
   38890:	mov	r2, r4
   38894:	mov	r3, r5
   38898:	ldrb	r4, [r0, #31]
   3889c:	lsl	r5, r4, #24
   388a0:	str	r5, [sp, #260]	; 0x104
   388a4:	str	r7, [sp, #256]	; 0x100
   388a8:	add	r4, sp, #256	; 0x100
   388ac:	ldrd	r4, [r4]
   388b0:	orr	r4, r4, r2
   388b4:	orr	r5, r5, r3
   388b8:	umull	r2, r3, r4, r1
   388bc:	mla	r3, r1, r5, r3
   388c0:	ldrd	r4, [sp, #8]
   388c4:	adds	r4, r4, r2
   388c8:	adc	r5, r5, r3
   388cc:	mov	r2, r4
   388d0:	add	r0, r0, #32
   388d4:	lsr	r4, r4, #29
   388d8:	orr	r4, r4, r5, lsl #3
   388dc:	str	r4, [sp, #264]	; 0x108
   388e0:	lsr	r3, r5, #29
   388e4:	orr	r3, r3, r2, lsl #3
   388e8:	str	r3, [sp, #268]	; 0x10c
   388ec:	add	r3, sp, #264	; 0x108
   388f0:	ldrd	r2, [r3]
   388f4:	adds	r2, r2, r8
   388f8:	adc	r3, r3, r9
   388fc:	strd	r2, [sp, #8]
   38900:	ldr	r3, [sp, #272]	; 0x110
   38904:	cmp	r0, r3
   38908:	bls	38448 <cmetrohash64_1@@Base+0x98>
   3890c:	ldrd	sl, [sp]
   38910:	ldrd	r2, [sp, #8]
   38914:	adds	r6, sl, r2
   38918:	adc	r7, fp, r3
   3891c:	ldr	r3, [pc, #-1248]	; 38444 <cmetrohash64_1@@Base+0x94>
   38920:	umull	r4, r5, r6, r3
   38924:	mla	r5, r3, r7, r5
   38928:	adds	r4, r4, r8
   3892c:	adc	r5, r5, r9
   38930:	lsl	r1, r5, #31
   38934:	orr	r1, r1, r4, lsr #1
   38938:	lsl	r4, r4, #31
   3893c:	orr	r4, r4, r5, lsr #1
   38940:	ldr	r2, [pc, #-1288]	; 38440 <cmetrohash64_1@@Base+0x90>
   38944:	umull	r4, r5, r4, r2
   38948:	mla	r5, r2, r1, r5
   3894c:	ldrd	r6, [sp, #16]
   38950:	eor	r6, r6, r4
   38954:	eor	r7, r7, r5
   38958:	strd	r6, [sp, #16]
   3895c:	adds	r6, r6, r8
   38960:	adc	r7, r7, r9
   38964:	umull	r4, r5, r6, r2
   38968:	mla	r5, r2, r7, r5
   3896c:	mov	r6, sl
   38970:	mov	r7, fp
   38974:	adds	sl, sl, r4
   38978:	adc	fp, fp, r5
   3897c:	lsl	r1, fp, #31
   38980:	orr	r1, r1, sl, lsr #1
   38984:	lsl	sl, sl, #31
   38988:	orr	sl, sl, fp, lsr #1
   3898c:	umull	sl, fp, sl, r3
   38990:	mla	fp, r3, r1, fp
   38994:	ldrd	r4, [sp, #8]
   38998:	eor	r4, r4, sl
   3899c:	eor	r5, r5, fp
   389a0:	mov	sl, r4
   389a4:	mov	fp, r5
   389a8:	ldrd	r4, [sp, #16]
   389ac:	adds	r6, r6, r4
   389b0:	adc	r7, r7, r5
   389b4:	umull	r4, r5, r6, r3
   389b8:	mla	r5, r3, r7, r5
   389bc:	adds	r4, r4, sl
   389c0:	adc	r5, r5, fp
   389c4:	lsl	r1, r5, #31
   389c8:	orr	r1, r1, r4, lsr #1
   389cc:	lsl	r4, r4, #31
   389d0:	orr	r4, r4, r5, lsr #1
   389d4:	umull	r6, r7, r4, r2
   389d8:	mla	r7, r2, r1, r7
   389dc:	ldrd	r4, [sp]
   389e0:	eor	r4, r4, r8
   389e4:	eor	r5, r5, r9
   389e8:	eor	r4, r4, r6
   389ec:	eor	r5, r5, r7
   389f0:	adds	r8, r8, sl
   389f4:	adc	r9, r9, fp
   389f8:	umull	r6, r7, r8, r2
   389fc:	mla	r7, r2, r9, r7
   38a00:	ldrd	r8, [sp, #16]
   38a04:	adds	r8, r8, r6
   38a08:	adc	r9, r9, r7
   38a0c:	lsl	r2, r9, #31
   38a10:	orr	r2, r2, r8, lsr #1
   38a14:	lsl	r6, r8, #31
   38a18:	orr	r6, r6, r9, lsr #1
   38a1c:	umull	r6, r7, r6, r3
   38a20:	mla	r7, r3, r2, r7
   38a24:	eor	r4, r4, r6
   38a28:	eor	r5, r5, r7
   38a2c:	add	r3, sp, #280	; 0x118
   38a30:	ldrd	r2, [r3]
   38a34:	adds	r2, r2, r4
   38a38:	adc	r3, r3, r5
   38a3c:	mov	r4, r2
   38a40:	mov	r5, r3
   38a44:	add	r3, sp, #288	; 0x120
   38a48:	strd	r4, [r3]
   38a4c:	ldr	r3, [sp, #276]	; 0x114
   38a50:	sub	r3, r3, r0
   38a54:	cmp	r3, #15
   38a58:	ble	38c48 <cmetrohash64_1@@Base+0x898>
   38a5c:	ldrb	r4, [r0, #1]
   38a60:	mov	r3, #0
   38a64:	lsl	r2, r4, #8
   38a68:	ldrb	r6, [r0, #2]
   38a6c:	mov	r5, #0
   38a70:	lsl	r4, r6, #16
   38a74:	orr	r2, r2, r4
   38a78:	orr	r3, r3, r5
   38a7c:	ldrb	r4, [r0]
   38a80:	mov	r5, #0
   38a84:	orr	r2, r2, r4
   38a88:	orr	r3, r3, r5
   38a8c:	ldrb	r6, [r0, #3]
   38a90:	mov	r5, #0
   38a94:	lsl	r4, r6, #24
   38a98:	orr	r2, r2, r4
   38a9c:	orr	r3, r3, r5
   38aa0:	mov	r8, #0
   38aa4:	ldrb	r9, [r0, #4]
   38aa8:	orr	r2, r2, r8
   38aac:	orr	r3, r3, r9
   38ab0:	ldrb	r6, [r0, #5]
   38ab4:	lsl	r5, r6, #8
   38ab8:	orr	r2, r2, r8
   38abc:	orr	r3, r3, r5
   38ac0:	ldrb	r6, [r0, #6]
   38ac4:	lsl	r5, r6, #16
   38ac8:	orr	r4, r8, r2
   38acc:	orr	r5, r5, r3
   38ad0:	ldrb	r6, [r0, #7]
   38ad4:	lsl	r3, r6, #24
   38ad8:	orr	r4, r4, r8
   38adc:	orr	r5, r5, r3
   38ae0:	ldr	r1, [pc, #-1700]	; 38444 <cmetrohash64_1@@Base+0x94>
   38ae4:	umull	r6, r7, r4, r1
   38ae8:	mla	r7, r1, r5, r7
   38aec:	add	r3, sp, #288	; 0x120
   38af0:	ldrd	r2, [r3]
   38af4:	adds	r2, r2, r6
   38af8:	adc	r3, r3, r7
   38afc:	mov	r7, r3
   38b00:	lsl	r3, r3, #31
   38b04:	orr	r3, r3, r2, lsr #1
   38b08:	lsl	sl, r2, #31
   38b0c:	orr	sl, sl, r7, lsr #1
   38b10:	ldr	ip, [pc, #-1752]	; 38440 <cmetrohash64_1@@Base+0x90>
   38b14:	umull	sl, fp, sl, ip
   38b18:	mla	fp, ip, r3, fp
   38b1c:	ldrb	r4, [r0, #9]
   38b20:	mov	r3, #0
   38b24:	lsl	r2, r4, #8
   38b28:	ldrb	r6, [r0, #10]
   38b2c:	mov	r5, #0
   38b30:	lsl	r4, r6, #16
   38b34:	orr	r2, r2, r4
   38b38:	orr	r3, r3, r5
   38b3c:	ldrb	r4, [r0, #8]
   38b40:	mov	r5, #0
   38b44:	orr	r2, r2, r4
   38b48:	orr	r3, r3, r5
   38b4c:	ldrb	r6, [r0, #11]
   38b50:	mov	r5, #0
   38b54:	lsl	r4, r6, #24
   38b58:	orr	r2, r2, r4
   38b5c:	orr	r3, r3, r5
   38b60:	ldrb	r7, [r0, #12]
   38b64:	orr	r2, r2, r8
   38b68:	orr	r3, r3, r7
   38b6c:	ldrb	r6, [r0, #13]
   38b70:	lsl	r5, r6, #8
   38b74:	orr	r2, r2, r8
   38b78:	orr	r3, r3, r5
   38b7c:	ldrb	r6, [r0, #14]
   38b80:	lsl	r5, r6, #16
   38b84:	orr	r2, r2, r8
   38b88:	orr	r3, r3, r5
   38b8c:	ldrb	r6, [r0, #15]
   38b90:	lsl	r5, r6, #24
   38b94:	orr	r2, r2, r8
   38b98:	orr	r3, r3, r5
   38b9c:	umull	r6, r7, r2, ip
   38ba0:	mla	r7, ip, r3, r7
   38ba4:	add	r3, sp, #288	; 0x120
   38ba8:	ldrd	r2, [r3]
   38bac:	adds	r2, r2, r6
   38bb0:	adc	r3, r3, r7
   38bb4:	add	r0, r0, #16
   38bb8:	lsl	ip, r3, #31
   38bbc:	orr	ip, ip, r2, lsr #1
   38bc0:	lsl	r2, r2, #31
   38bc4:	orr	r2, r2, r3, lsr #1
   38bc8:	ldr	lr, [pc, #-1944]	; 38438 <cmetrohash64_1@@Base+0x88>
   38bcc:	umull	r2, r3, r2, lr
   38bd0:	mla	r3, lr, ip, r3
   38bd4:	umull	r4, r5, sl, r1
   38bd8:	mla	r5, r1, fp, r5
   38bdc:	lsl	r1, r5, #29
   38be0:	orr	r9, r1, r4, lsr #3
   38be4:	lsl	r1, r4, #29
   38be8:	orr	r8, r1, r5, lsr #3
   38bec:	adds	r8, r8, r2
   38bf0:	adc	r9, r9, r3
   38bf4:	ldr	r1, [pc, #-1984]	; 3843c <cmetrohash64_1@@Base+0x8c>
   38bf8:	umull	r4, r5, r2, r1
   38bfc:	mla	r5, r1, r3, r5
   38c00:	lsl	r1, r5, #29
   38c04:	orr	r7, r1, r4, lsr #3
   38c08:	lsl	r1, r4, #29
   38c0c:	orr	r6, r1, r5, lsr #3
   38c10:	eor	sl, sl, r8
   38c14:	eor	fp, fp, r9
   38c18:	adds	sl, sl, r6
   38c1c:	adc	fp, fp, r7
   38c20:	eor	sl, sl, r2
   38c24:	eor	fp, fp, r3
   38c28:	add	r3, sp, #288	; 0x120
   38c2c:	ldrd	r2, [r3]
   38c30:	adds	r2, r2, sl
   38c34:	adc	r3, r3, fp
   38c38:	mov	sl, r2
   38c3c:	mov	fp, r3
   38c40:	add	r3, sp, #288	; 0x120
   38c44:	strd	sl, [r3]
   38c48:	ldr	r3, [sp, #276]	; 0x114
   38c4c:	sub	r3, r3, r0
   38c50:	cmp	r3, #7
   38c54:	ble	38d28 <cmetrohash64_1@@Base+0x978>
   38c58:	ldrb	r4, [r0, #1]
   38c5c:	mov	r3, #0
   38c60:	lsl	r2, r4, #8
   38c64:	ldrb	r6, [r0, #2]
   38c68:	mov	r5, #0
   38c6c:	lsl	r4, r6, #16
   38c70:	orr	r2, r2, r4
   38c74:	orr	r3, r3, r5
   38c78:	ldrb	r4, [r0]
   38c7c:	mov	r5, #0
   38c80:	orr	r2, r2, r4
   38c84:	orr	r3, r3, r5
   38c88:	ldrb	r6, [r0, #3]
   38c8c:	mov	r5, #0
   38c90:	lsl	r4, r6, #24
   38c94:	orr	r2, r2, r4
   38c98:	orr	r3, r3, r5
   38c9c:	mov	r4, #0
   38ca0:	ldrb	r5, [r0, #4]
   38ca4:	orr	r2, r2, r4
   38ca8:	orr	r3, r3, r5
   38cac:	ldrb	r8, [r0, #5]
   38cb0:	lsl	r7, r8, #8
   38cb4:	orr	r2, r2, r4
   38cb8:	orr	r3, r3, r7
   38cbc:	ldrb	r8, [r0, #6]
   38cc0:	lsl	r7, r8, #16
   38cc4:	orr	r2, r2, r4
   38cc8:	orr	r3, r3, r7
   38ccc:	ldrb	r8, [r0, #7]
   38cd0:	lsl	r7, r8, #24
   38cd4:	orr	r2, r2, r4
   38cd8:	orr	r3, r3, r7
   38cdc:	ldr	r1, [pc, #-2216]	; 3843c <cmetrohash64_1@@Base+0x8c>
   38ce0:	umull	r4, r5, r2, r1
   38ce4:	mla	r5, r1, r3, r5
   38ce8:	add	r3, sp, #288	; 0x120
   38cec:	ldrd	r2, [r3]
   38cf0:	adds	r2, r2, r4
   38cf4:	adc	r3, r3, r5
   38cf8:	add	r0, r0, #8
   38cfc:	lsl	r1, r3, #31
   38d00:	orr	r1, r1, r2, lsr #1
   38d04:	lsl	r4, r2, #31
   38d08:	orr	r4, r4, r3, lsr #1
   38d0c:	ldr	ip, [pc, #-2260]	; 38440 <cmetrohash64_1@@Base+0x90>
   38d10:	umull	r4, r5, r4, ip
   38d14:	mla	r5, ip, r1, r5
   38d18:	eor	r4, r4, r2
   38d1c:	eor	r5, r5, r3
   38d20:	add	r3, sp, #288	; 0x120
   38d24:	strd	r4, [r3]
   38d28:	ldr	r3, [sp, #276]	; 0x114
   38d2c:	sub	r3, r3, r0
   38d30:	cmp	r3, #3
   38d34:	ble	38d98 <cmetrohash64_1@@Base+0x9e8>
   38d38:	ldrb	r3, [r0, #1]
   38d3c:	ldrb	r1, [r0, #2]
   38d40:	lsl	r1, r1, #16
   38d44:	orr	r1, r1, r3, lsl #8
   38d48:	ldrb	r3, [r0]
   38d4c:	orr	r1, r1, r3
   38d50:	ldrb	r3, [r0, #3]
   38d54:	orr	r1, r1, r3, lsl #24
   38d58:	add	r3, sp, #288	; 0x120
   38d5c:	ldrd	r2, [r3]
   38d60:	ldr	ip, [pc, #-2348]	; 3843c <cmetrohash64_1@@Base+0x8c>
   38d64:	umlal	r2, r3, ip, r1
   38d68:	add	r0, r0, #4
   38d6c:	lsr	r4, r2, #15
   38d70:	orr	r4, r4, r3, lsl #17
   38d74:	lsr	r1, r3, #15
   38d78:	orr	r1, r1, r2, lsl #17
   38d7c:	ldr	ip, [pc, #-2372]	; 38440 <cmetrohash64_1@@Base+0x90>
   38d80:	umull	r4, r5, r4, ip
   38d84:	mla	r5, ip, r1, r5
   38d88:	eor	r4, r4, r2
   38d8c:	eor	r5, r5, r3
   38d90:	add	r3, sp, #288	; 0x120
   38d94:	strd	r4, [r3]
   38d98:	ldr	r3, [sp, #276]	; 0x114
   38d9c:	sub	r3, r3, r0
   38da0:	cmp	r3, #1
   38da4:	ble	38e00 <cmetrohash64_1@@Base+0xa50>
   38da8:	ldrb	r4, [r0, #1]
   38dac:	ldrb	r2, [r0], #2
   38db0:	orr	r2, r2, r4, lsl #8
   38db4:	asr	r7, r2, #31
   38db8:	ldr	r3, [pc, #-2436]	; 3843c <cmetrohash64_1@@Base+0x8c>
   38dbc:	umull	r4, r5, r2, r3
   38dc0:	mla	r5, r3, r7, r5
   38dc4:	add	r3, sp, #288	; 0x120
   38dc8:	ldrd	r2, [r3]
   38dcc:	adds	r2, r2, r4
   38dd0:	adc	r3, r3, r5
   38dd4:	lsr	r4, r2, #13
   38dd8:	orr	r4, r4, r3, lsl #19
   38ddc:	lsr	r1, r3, #13
   38de0:	orr	r1, r1, r2, lsl #19
   38de4:	ldr	ip, [pc, #-2476]	; 38440 <cmetrohash64_1@@Base+0x90>
   38de8:	umull	r4, r5, r4, ip
   38dec:	mla	r5, ip, r1, r5
   38df0:	eor	r2, r2, r4
   38df4:	eor	r3, r3, r5
   38df8:	add	r1, sp, #288	; 0x120
   38dfc:	strd	r2, [r1]
   38e00:	ldr	r3, [sp, #276]	; 0x114
   38e04:	sub	r3, r3, r0
   38e08:	cmp	r3, #0
   38e0c:	ble	38e58 <cmetrohash64_1@@Base+0xaa8>
   38e10:	ldrb	r2, [r0]
   38e14:	ldr	r0, [pc, #-2528]	; 3843c <cmetrohash64_1@@Base+0x8c>
   38e18:	umull	r2, r3, r2, r0
   38e1c:	add	r1, sp, #288	; 0x120
   38e20:	ldrd	r0, [r1]
   38e24:	adds	r0, r0, r2
   38e28:	adc	r1, r1, r3
   38e2c:	lsr	r2, r0, #25
   38e30:	orr	r2, r2, r1, lsl #7
   38e34:	lsr	ip, r1, #25
   38e38:	orr	ip, ip, r0, lsl #7
   38e3c:	ldr	lr, [pc, #-2564]	; 38440 <cmetrohash64_1@@Base+0x90>
   38e40:	umull	r2, r3, r2, lr
   38e44:	mla	r3, lr, ip, r3
   38e48:	eor	r2, r2, r0
   38e4c:	eor	r3, r3, r1
   38e50:	add	r1, sp, #288	; 0x120
   38e54:	strd	r2, [r1]
   38e58:	add	r3, sp, #288	; 0x120
   38e5c:	ldrd	r0, [r3]
   38e60:	lsl	ip, r1, #31
   38e64:	orr	r3, ip, r0, lsr #1
   38e68:	lsl	ip, r0, #31
   38e6c:	orr	r2, ip, r1, lsr #1
   38e70:	eor	r0, r0, r2
   38e74:	eor	r1, r1, r3
   38e78:	ldr	ip, [pc, #-2620]	; 38444 <cmetrohash64_1@@Base+0x94>
   38e7c:	umull	r2, r3, r0, ip
   38e80:	mla	r3, ip, r1, r3
   38e84:	lsl	ip, r3, #31
   38e88:	orr	r1, ip, r2, lsr #1
   38e8c:	lsl	ip, r2, #31
   38e90:	orr	r0, ip, r3, lsr #1
   38e94:	eor	r0, r0, r2
   38e98:	eor	r1, r1, r3
   38e9c:	add	r3, sp, #296	; 0x128
   38ea0:	strd	r0, [r3, #-8]!
   38ea4:	ldm	r3!, {r0, r1}
   38ea8:	ldr	r3, [sp, #340]	; 0x154
   38eac:	str	r0, [r3]
   38eb0:	str	r1, [r3, #4]
   38eb4:	add	sp, sp, #300	; 0x12c
   38eb8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00038ebc <cmetrohash64_2@@Base>:
   38ebc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   38ec0:	sub	sp, sp, #292	; 0x124
   38ec4:	add	r1, r0, r2
   38ec8:	mov	lr, r1
   38ecc:	str	r1, [sp, #268]	; 0x10c
   38ed0:	add	r5, pc, #896	; 0x380
   38ed4:	ldrd	r4, [r5]
   38ed8:	adds	r4, r4, r2
   38edc:	adc	r5, r5, r3
   38ee0:	ldr	r1, [pc, #900]	; 3926c <cmetrohash64_2@@Base+0x3b0>
   38ee4:	ldr	ip, [sp, #328]	; 0x148
   38ee8:	umlal	r4, r5, r1, ip
   38eec:	add	r1, sp, #272	; 0x110
   38ef0:	strd	r4, [r1]
   38ef4:	add	r1, sp, #280	; 0x118
   38ef8:	strd	r4, [r1]
   38efc:	cmp	r3, #0
   38f00:	cmpeq	r2, #31
   38f04:	bls	39544 <cmetrohash64_2@@Base+0x688>
   38f08:	mov	sl, r4
   38f0c:	mov	fp, r5
   38f10:	strd	r4, [sp, #8]
   38f14:	mov	r8, r4
   38f18:	mov	r9, r5
   38f1c:	strd	r4, [sp]
   38f20:	ldr	ip, [pc, #832]	; 39268 <cmetrohash64_2@@Base+0x3ac>
   38f24:	ldr	r1, [pc, #824]	; 39264 <cmetrohash64_2@@Base+0x3a8>
   38f28:	sub	r3, lr, #32
   38f2c:	str	r3, [sp, #264]	; 0x108
   38f30:	ldrb	r2, [r0, #1]
   38f34:	mov	r4, #0
   38f38:	str	r4, [sp, #20]
   38f3c:	lsl	r3, r2, #8
   38f40:	str	r3, [sp, #16]
   38f44:	ldrb	r2, [r0, #2]
   38f48:	str	r4, [sp, #28]
   38f4c:	lsl	r3, r2, #16
   38f50:	str	r3, [sp, #24]
   38f54:	ldrd	r2, [sp, #16]
   38f58:	ldrd	r4, [sp, #24]
   38f5c:	orr	r2, r2, r4
   38f60:	orr	r3, r3, r5
   38f64:	ldrb	r4, [r0]
   38f68:	mov	r5, #0
   38f6c:	orr	r4, r4, r2
   38f70:	orr	r5, r5, r3
   38f74:	ldrb	r2, [r0, #3]
   38f78:	mov	lr, #0
   38f7c:	str	lr, [sp, #36]	; 0x24
   38f80:	lsl	r3, r2, #24
   38f84:	str	r3, [sp, #32]
   38f88:	ldrd	r2, [sp, #32]
   38f8c:	orr	r2, r2, r4
   38f90:	orr	r3, r3, r5
   38f94:	ldrb	r7, [r0, #4]
   38f98:	mov	r6, lr
   38f9c:	orr	r4, r2, lr
   38fa0:	orr	r5, r3, r7
   38fa4:	ldrb	r2, [r0, #5]
   38fa8:	lsl	r3, r2, #8
   38fac:	str	r3, [sp, #44]	; 0x2c
   38fb0:	str	lr, [sp, #40]	; 0x28
   38fb4:	ldrd	r2, [sp, #40]	; 0x28
   38fb8:	orr	r2, r2, r4
   38fbc:	orr	r3, r3, r5
   38fc0:	mov	r4, r2
   38fc4:	mov	r5, r3
   38fc8:	ldrb	r2, [r0, #6]
   38fcc:	lsl	r3, r2, #16
   38fd0:	str	r3, [sp, #52]	; 0x34
   38fd4:	str	lr, [sp, #48]	; 0x30
   38fd8:	ldrd	r2, [sp, #48]	; 0x30
   38fdc:	orr	r2, r2, r4
   38fe0:	orr	r3, r3, r5
   38fe4:	mov	r4, r2
   38fe8:	mov	r5, r3
   38fec:	ldrb	r2, [r0, #7]
   38ff0:	lsl	r3, r2, #24
   38ff4:	str	r3, [sp, #60]	; 0x3c
   38ff8:	str	lr, [sp, #56]	; 0x38
   38ffc:	ldrd	r2, [sp, #56]	; 0x38
   39000:	orr	r2, r2, r4
   39004:	orr	r3, r3, r5
   39008:	mov	r5, r3
   3900c:	ldr	r3, [pc, #600]	; 3926c <cmetrohash64_2@@Base+0x3b0>
   39010:	umull	r2, r3, r2, r3
   39014:	ldr	lr, [pc, #592]	; 3926c <cmetrohash64_2@@Base+0x3b0>
   39018:	mla	r3, lr, r5, r3
   3901c:	ldrd	r4, [sp]
   39020:	adds	r4, r4, r2
   39024:	adc	r5, r5, r3
   39028:	mov	r2, r4
   3902c:	lsr	r4, r4, #29
   39030:	orr	lr, r4, r5, lsl #3
   39034:	str	lr, [sp, #64]	; 0x40
   39038:	lsr	r3, r5, #29
   3903c:	orr	r3, r3, r2, lsl #3
   39040:	str	r3, [sp, #68]	; 0x44
   39044:	ldrd	r2, [sp, #64]	; 0x40
   39048:	ldrd	r4, [sp, #8]
   3904c:	adds	r2, r2, r4
   39050:	adc	r3, r3, r5
   39054:	strd	r2, [sp]
   39058:	ldrb	r2, [r0, #9]
   3905c:	str	r6, [sp, #76]	; 0x4c
   39060:	lsl	r3, r2, #8
   39064:	str	r3, [sp, #72]	; 0x48
   39068:	ldrb	r2, [r0, #10]
   3906c:	str	r6, [sp, #84]	; 0x54
   39070:	lsl	r3, r2, #16
   39074:	str	r3, [sp, #80]	; 0x50
   39078:	ldrd	r2, [sp, #72]	; 0x48
   3907c:	ldrd	r4, [sp, #80]	; 0x50
   39080:	orr	r2, r2, r4
   39084:	orr	r3, r3, r5
   39088:	ldrb	r4, [r0, #8]
   3908c:	mov	r5, #0
   39090:	orr	r4, r4, r2
   39094:	orr	r5, r5, r3
   39098:	ldrb	r2, [r0, #11]
   3909c:	str	r6, [sp, #92]	; 0x5c
   390a0:	lsl	r3, r2, #24
   390a4:	str	r3, [sp, #88]	; 0x58
   390a8:	ldrd	r2, [sp, #88]	; 0x58
   390ac:	orr	r2, r2, r4
   390b0:	orr	r3, r3, r5
   390b4:	mov	r4, r2
   390b8:	mov	r5, r3
   390bc:	ldrb	r3, [r0, #12]
   390c0:	str	r3, [sp, #100]	; 0x64
   390c4:	str	r6, [sp, #96]	; 0x60
   390c8:	ldrd	r2, [sp, #96]	; 0x60
   390cc:	orr	r2, r2, r4
   390d0:	orr	r3, r3, r5
   390d4:	mov	r4, r2
   390d8:	mov	r5, r3
   390dc:	ldrb	r2, [r0, #13]
   390e0:	lsl	r3, r2, #8
   390e4:	str	r3, [sp, #108]	; 0x6c
   390e8:	str	r6, [sp, #104]	; 0x68
   390ec:	ldrd	r2, [sp, #104]	; 0x68
   390f0:	orr	r2, r2, r4
   390f4:	orr	r3, r3, r5
   390f8:	mov	r4, r2
   390fc:	mov	r5, r3
   39100:	ldrb	r2, [r0, #14]
   39104:	lsl	r3, r2, #16
   39108:	str	r3, [sp, #116]	; 0x74
   3910c:	str	r6, [sp, #112]	; 0x70
   39110:	ldrd	r2, [sp, #112]	; 0x70
   39114:	orr	r2, r2, r4
   39118:	orr	r3, r3, r5
   3911c:	mov	r4, r2
   39120:	mov	r5, r3
   39124:	ldrb	r2, [r0, #15]
   39128:	lsl	r3, r2, #24
   3912c:	str	r3, [sp, #124]	; 0x7c
   39130:	str	r6, [sp, #120]	; 0x78
   39134:	ldrd	r2, [sp, #120]	; 0x78
   39138:	orr	r2, r2, r4
   3913c:	orr	r3, r3, r5
   39140:	mov	r5, r3
   39144:	umull	r2, r3, r2, ip
   39148:	mla	r3, ip, r5, r3
   3914c:	adds	r2, r2, r8
   39150:	adc	r3, r3, r9
   39154:	lsr	r4, r2, #29
   39158:	orr	lr, r4, r3, lsl #3
   3915c:	str	lr, [sp, #128]	; 0x80
   39160:	lsr	r3, r3, #29
   39164:	orr	r3, r3, r2, lsl #3
   39168:	str	r3, [sp, #132]	; 0x84
   3916c:	ldrd	r8, [sp, #128]	; 0x80
   39170:	adds	r8, r8, sl
   39174:	adc	r9, r9, fp
   39178:	ldrb	r2, [r0, #17]
   3917c:	str	r6, [sp, #140]	; 0x8c
   39180:	lsl	r3, r2, #8
   39184:	str	r3, [sp, #136]	; 0x88
   39188:	ldrb	r2, [r0, #18]
   3918c:	str	r6, [sp, #148]	; 0x94
   39190:	lsl	r3, r2, #16
   39194:	str	r3, [sp, #144]	; 0x90
   39198:	ldrd	r2, [sp, #136]	; 0x88
   3919c:	ldrd	r4, [sp, #144]	; 0x90
   391a0:	orr	r2, r2, r4
   391a4:	orr	r3, r3, r5
   391a8:	ldrb	r4, [r0, #16]
   391ac:	mov	r5, #0
   391b0:	orr	r4, r4, r2
   391b4:	orr	r5, r5, r3
   391b8:	ldrb	r2, [r0, #19]
   391bc:	str	r6, [sp, #156]	; 0x9c
   391c0:	lsl	r3, r2, #24
   391c4:	str	r3, [sp, #152]	; 0x98
   391c8:	ldrd	r2, [sp, #152]	; 0x98
   391cc:	orr	r2, r2, r4
   391d0:	orr	r3, r3, r5
   391d4:	mov	r4, r2
   391d8:	mov	r5, r3
   391dc:	ldrb	r3, [r0, #20]
   391e0:	str	r3, [sp, #164]	; 0xa4
   391e4:	str	r6, [sp, #160]	; 0xa0
   391e8:	ldrd	r2, [sp, #160]	; 0xa0
   391ec:	orr	r2, r2, r4
   391f0:	orr	r3, r3, r5
   391f4:	mov	r4, r2
   391f8:	mov	r5, r3
   391fc:	ldrb	r2, [r0, #21]
   39200:	lsl	r3, r2, #8
   39204:	str	r3, [sp, #172]	; 0xac
   39208:	str	r6, [sp, #168]	; 0xa8
   3920c:	ldrd	r2, [sp, #168]	; 0xa8
   39210:	orr	r2, r2, r4
   39214:	orr	r3, r3, r5
   39218:	mov	r4, r2
   3921c:	mov	r5, r3
   39220:	ldrb	r2, [r0, #22]
   39224:	lsl	r3, r2, #16
   39228:	str	r3, [sp, #180]	; 0xb4
   3922c:	str	r6, [sp, #176]	; 0xb0
   39230:	ldrd	r2, [sp, #176]	; 0xb0
   39234:	orr	r2, r2, r4
   39238:	orr	r3, r3, r5
   3923c:	mov	r4, r2
   39240:	mov	r5, r3
   39244:	ldrb	r2, [r0, #23]
   39248:	lsl	r3, r2, #24
   3924c:	str	r3, [sp, #188]	; 0xbc
   39250:	str	r6, [sp, #184]	; 0xb8
   39254:	b	39270 <cmetrohash64_2@@Base+0x3b4>
   39258:	blle	ff96c134 <__bss_end__@@Base+0xff905040>
   3925c:	adcspl	r3, ip, #-134217725	; 0xf8000003
   39260:	addsvs	r2, r9, #772	; 0x304
   39264:	adcscc	r5, ip, r9, lsr #22
   39268:	adcge	r0, sl, #-335544320	; 0xec000000
   3926c:			; <UNDEFINED> instruction: 0xd6d018f5
   39270:	ldrd	r2, [sp, #184]	; 0xb8
   39274:	orr	r2, r2, r4
   39278:	orr	r3, r3, r5
   3927c:	mov	r5, r3
   39280:	ldr	r3, [pc, #-40]	; 39260 <cmetrohash64_2@@Base+0x3a4>
   39284:	umull	r2, r3, r2, r3
   39288:	ldr	lr, [pc, #-48]	; 39260 <cmetrohash64_2@@Base+0x3a4>
   3928c:	mla	r3, lr, r5, r3
   39290:	ldrd	r4, [sp, #8]
   39294:	adds	r4, r4, r2
   39298:	adc	r5, r5, r3
   3929c:	mov	r2, r4
   392a0:	lsr	r4, r4, #29
   392a4:	orr	lr, r4, r5, lsl #3
   392a8:	str	lr, [sp, #192]	; 0xc0
   392ac:	lsr	r3, r5, #29
   392b0:	orr	r3, r3, r2, lsl #3
   392b4:	str	r3, [sp, #196]	; 0xc4
   392b8:	ldrd	r4, [sp, #192]	; 0xc0
   392bc:	ldrd	r2, [sp]
   392c0:	adds	r4, r4, r2
   392c4:	adc	r5, r5, r3
   392c8:	strd	r4, [sp, #8]
   392cc:	ldrb	r2, [r0, #26]
   392d0:	str	r6, [sp, #204]	; 0xcc
   392d4:	lsl	r3, r2, #16
   392d8:	str	r3, [sp, #200]	; 0xc8
   392dc:	ldrb	r2, [r0, #25]
   392e0:	str	r6, [sp, #212]	; 0xd4
   392e4:	lsl	r3, r2, #8
   392e8:	str	r3, [sp, #208]	; 0xd0
   392ec:	ldrd	r2, [sp, #200]	; 0xc8
   392f0:	ldrd	r4, [sp, #208]	; 0xd0
   392f4:	orr	r2, r2, r4
   392f8:	orr	r3, r3, r5
   392fc:	ldrb	r4, [r0, #24]
   39300:	mov	r5, #0
   39304:	orr	r4, r4, r2
   39308:	orr	r5, r5, r3
   3930c:	ldrb	r2, [r0, #27]
   39310:	str	r6, [sp, #220]	; 0xdc
   39314:	lsl	r3, r2, #24
   39318:	str	r3, [sp, #216]	; 0xd8
   3931c:	ldrd	r2, [sp, #216]	; 0xd8
   39320:	orr	r2, r2, r4
   39324:	orr	r3, r3, r5
   39328:	mov	r4, r2
   3932c:	mov	r5, r3
   39330:	ldrb	r3, [r0, #28]
   39334:	str	r3, [sp, #228]	; 0xe4
   39338:	str	r6, [sp, #224]	; 0xe0
   3933c:	ldrd	r2, [sp, #224]	; 0xe0
   39340:	orr	r2, r2, r4
   39344:	orr	r3, r3, r5
   39348:	mov	r4, r2
   3934c:	mov	r5, r3
   39350:	ldrb	r2, [r0, #29]
   39354:	lsl	r3, r2, #8
   39358:	str	r3, [sp, #236]	; 0xec
   3935c:	str	r6, [sp, #232]	; 0xe8
   39360:	ldrd	r2, [sp, #232]	; 0xe8
   39364:	orr	r2, r2, r4
   39368:	orr	r3, r3, r5
   3936c:	mov	r4, r2
   39370:	mov	r5, r3
   39374:	ldrb	r2, [r0, #30]
   39378:	lsl	r3, r2, #16
   3937c:	str	r3, [sp, #244]	; 0xf4
   39380:	str	r6, [sp, #240]	; 0xf0
   39384:	ldrd	r2, [sp, #240]	; 0xf0
   39388:	orr	r2, r2, r4
   3938c:	orr	r3, r3, r5
   39390:	mov	r4, r2
   39394:	mov	r5, r3
   39398:	ldrb	r2, [r0, #31]
   3939c:	lsl	r3, r2, #24
   393a0:	str	r3, [sp, #252]	; 0xfc
   393a4:	str	r6, [sp, #248]	; 0xf8
   393a8:	ldrd	r2, [sp, #248]	; 0xf8
   393ac:	orr	r2, r2, r4
   393b0:	orr	r3, r3, r5
   393b4:	mov	r5, r3
   393b8:	umull	r2, r3, r2, r1
   393bc:	mla	r3, r1, r5, r3
   393c0:	adds	r2, r2, sl
   393c4:	adc	r3, r3, fp
   393c8:	add	r0, r0, #32
   393cc:	lsr	r4, r2, #29
   393d0:	orr	lr, r4, r3, lsl #3
   393d4:	str	lr, [sp, #256]	; 0x100
   393d8:	lsr	r3, r3, #29
   393dc:	orr	r3, r3, r2, lsl #3
   393e0:	str	r3, [sp, #260]	; 0x104
   393e4:	add	r3, sp, #256	; 0x100
   393e8:	ldrd	sl, [r3]
   393ec:	adds	sl, sl, r8
   393f0:	adc	fp, fp, r9
   393f4:	ldr	r3, [sp, #264]	; 0x108
   393f8:	cmp	r0, r3
   393fc:	bls	38f30 <cmetrohash64_2@@Base+0x74>
   39400:	ldrd	r6, [sp]
   39404:	adds	r6, r6, sl
   39408:	adc	r7, r7, fp
   3940c:	ldr	r3, [pc, #-424]	; 3926c <cmetrohash64_2@@Base+0x3b0>
   39410:	umull	r4, r5, r6, r3
   39414:	mla	r5, r3, r7, r5
   39418:	adds	r4, r4, r8
   3941c:	adc	r5, r5, r9
   39420:	lsr	r6, r4, #30
   39424:	orr	r6, r6, r5, lsl #2
   39428:	lsr	r2, r5, #30
   3942c:	orr	r4, r2, r4, lsl #2
   39430:	ldr	r2, [pc, #-464]	; 39268 <cmetrohash64_2@@Base+0x3ac>
   39434:	umull	r6, r7, r6, r2
   39438:	mla	r7, r2, r4, r7
   3943c:	ldrd	r4, [sp, #8]
   39440:	eor	r4, r4, r6
   39444:	eor	r5, r5, r7
   39448:	strd	r4, [sp, #8]
   3944c:	adds	r4, r4, r8
   39450:	adc	r5, r5, r9
   39454:	mov	r7, r5
   39458:	umull	r4, r5, r4, r2
   3945c:	mla	r5, r2, r7, r5
   39460:	ldrd	r6, [sp]
   39464:	adds	r6, r6, r4
   39468:	adc	r7, r7, r5
   3946c:	mov	r4, r6
   39470:	lsr	r6, r6, #30
   39474:	orr	r6, r6, r7, lsl #2
   39478:	lsr	r1, r7, #30
   3947c:	orr	r4, r1, r4, lsl #2
   39480:	umull	r6, r7, r6, r3
   39484:	mla	r7, r3, r4, r7
   39488:	eor	r4, r6, sl
   3948c:	eor	r5, r7, fp
   39490:	ldrd	r6, [sp]
   39494:	ldrd	sl, [sp, #8]
   39498:	adds	r6, r6, sl
   3949c:	adc	r7, r7, fp
   394a0:	umull	sl, fp, r6, r3
   394a4:	mla	fp, r3, r7, fp
   394a8:	strd	r4, [sp, #16]
   394ac:	adds	r6, r4, sl
   394b0:	adc	r7, r5, fp
   394b4:	lsr	r4, r6, #30
   394b8:	orr	r4, r4, r7, lsl #2
   394bc:	lsr	r1, r7, #30
   394c0:	orr	sl, r1, r6, lsl #2
   394c4:	umull	r6, r7, r4, r2
   394c8:	mla	r7, r2, sl, r7
   394cc:	ldrd	r4, [sp]
   394d0:	eor	r4, r4, r8
   394d4:	eor	r5, r5, r9
   394d8:	eor	r4, r4, r6
   394dc:	eor	r5, r5, r7
   394e0:	ldrd	r6, [sp, #16]
   394e4:	adds	r6, r6, r8
   394e8:	adc	r7, r7, r9
   394ec:	mov	r9, r7
   394f0:	umull	r6, r7, r6, r2
   394f4:	mla	r7, r2, r9, r7
   394f8:	ldrd	sl, [sp, #8]
   394fc:	adds	sl, sl, r6
   39500:	adc	fp, fp, r7
   39504:	lsr	r8, sl, #30
   39508:	orr	r8, r8, fp, lsl #2
   3950c:	lsr	r2, fp, #30
   39510:	orr	r6, r2, sl, lsl #2
   39514:	umull	r8, r9, r8, r3
   39518:	mla	r9, r3, r6, r9
   3951c:	eor	r4, r4, r8
   39520:	eor	r5, r5, r9
   39524:	add	r3, sp, #272	; 0x110
   39528:	ldrd	r2, [r3]
   3952c:	adds	r2, r2, r4
   39530:	adc	r3, r3, r5
   39534:	mov	r4, r2
   39538:	mov	r5, r3
   3953c:	add	r3, sp, #280	; 0x118
   39540:	strd	r4, [r3]
   39544:	ldr	r3, [sp, #268]	; 0x10c
   39548:	sub	r3, r3, r0
   3954c:	cmp	r3, #15
   39550:	ble	3973c <cmetrohash64_2@@Base+0x880>
   39554:	ldrb	r4, [r0, #1]
   39558:	mov	r3, #0
   3955c:	lsl	r2, r4, #8
   39560:	ldrb	r6, [r0, #2]
   39564:	mov	r5, #0
   39568:	lsl	r4, r6, #16
   3956c:	orr	r2, r2, r4
   39570:	orr	r3, r3, r5
   39574:	ldrb	r4, [r0]
   39578:	mov	r5, #0
   3957c:	orr	r2, r2, r4
   39580:	orr	r3, r3, r5
   39584:	ldrb	r6, [r0, #3]
   39588:	mov	r5, #0
   3958c:	lsl	r4, r6, #24
   39590:	orr	r2, r2, r4
   39594:	orr	r3, r3, r5
   39598:	mov	r8, #0
   3959c:	ldrb	r9, [r0, #4]
   395a0:	orr	r2, r2, r8
   395a4:	orr	r3, r3, r9
   395a8:	ldrb	r6, [r0, #5]
   395ac:	lsl	r5, r6, #8
   395b0:	orr	r2, r2, r8
   395b4:	orr	r3, r3, r5
   395b8:	ldrb	r6, [r0, #6]
   395bc:	lsl	r5, r6, #16
   395c0:	orr	r4, r8, r2
   395c4:	orr	r5, r5, r3
   395c8:	ldrb	r6, [r0, #7]
   395cc:	lsl	r3, r6, #24
   395d0:	orr	r4, r4, r8
   395d4:	orr	r5, r5, r3
   395d8:	ldr	ip, [pc, #-896]	; 39260 <cmetrohash64_2@@Base+0x3a4>
   395dc:	umull	r6, r7, r4, ip
   395e0:	mla	r7, ip, r5, r7
   395e4:	add	r3, sp, #280	; 0x118
   395e8:	ldrd	r2, [r3]
   395ec:	adds	r2, r2, r6
   395f0:	adc	r3, r3, r7
   395f4:	lsr	sl, r2, #29
   395f8:	orr	sl, sl, r3, lsl #3
   395fc:	lsr	r3, r3, #29
   39600:	orr	r6, r3, r2, lsl #3
   39604:	ldr	r1, [pc, #-936]	; 39264 <cmetrohash64_2@@Base+0x3a8>
   39608:	umull	sl, fp, sl, r1
   3960c:	mla	fp, r1, r6, fp
   39610:	ldrb	r4, [r0, #9]
   39614:	mov	r3, #0
   39618:	lsl	r2, r4, #8
   3961c:	ldrb	r6, [r0, #10]
   39620:	mov	r5, #0
   39624:	lsl	r4, r6, #16
   39628:	orr	r2, r2, r4
   3962c:	orr	r3, r3, r5
   39630:	ldrb	r4, [r0, #8]
   39634:	mov	r5, #0
   39638:	orr	r2, r2, r4
   3963c:	orr	r3, r3, r5
   39640:	ldrb	r6, [r0, #11]
   39644:	mov	r5, #0
   39648:	lsl	r4, r6, #24
   3964c:	orr	r2, r2, r4
   39650:	orr	r3, r3, r5
   39654:	ldrb	r7, [r0, #12]
   39658:	orr	r2, r2, r8
   3965c:	orr	r3, r3, r7
   39660:	ldrb	r6, [r0, #13]
   39664:	lsl	r5, r6, #8
   39668:	orr	r2, r2, r8
   3966c:	orr	r3, r3, r5
   39670:	ldrb	r6, [r0, #14]
   39674:	lsl	r5, r6, #16
   39678:	orr	r2, r2, r8
   3967c:	orr	r3, r3, r5
   39680:	ldrb	r6, [r0, #15]
   39684:	lsl	r5, r6, #24
   39688:	orr	r2, r2, r8
   3968c:	orr	r3, r3, r5
   39690:	umull	r6, r7, r2, ip
   39694:	mla	r7, ip, r3, r7
   39698:	add	r3, sp, #280	; 0x118
   3969c:	ldrd	r2, [r3]
   396a0:	adds	r2, r2, r6
   396a4:	adc	r3, r3, r7
   396a8:	mov	r6, r2
   396ac:	add	r0, r0, #16
   396b0:	lsr	r2, r2, #29
   396b4:	orr	r2, r2, r3, lsl #3
   396b8:	lsr	r3, r3, #29
   396bc:	orr	r6, r3, r6, lsl #3
   396c0:	umull	r2, r3, r2, r1
   396c4:	mla	r3, r1, r6, r3
   396c8:	ldr	ip, [pc, #-1124]	; 3926c <cmetrohash64_2@@Base+0x3b0>
   396cc:	umull	r4, r5, sl, ip
   396d0:	mla	r5, ip, fp, r5
   396d4:	lsl	ip, r5, #30
   396d8:	orr	r7, ip, r4, lsr #2
   396dc:	lsl	ip, r4, #30
   396e0:	orr	r6, ip, r5, lsr #2
   396e4:	adds	r6, r6, r2
   396e8:	adc	r7, r7, r3
   396ec:	umull	r4, r5, r2, r1
   396f0:	mla	r5, r1, r3, r5
   396f4:	lsl	r1, r5, #30
   396f8:	orr	r9, r1, r4, lsr #2
   396fc:	lsl	r1, r4, #30
   39700:	orr	r8, r1, r5, lsr #2
   39704:	eor	r6, r6, sl
   39708:	eor	r7, r7, fp
   3970c:	adds	r6, r6, r8
   39710:	adc	r7, r7, r9
   39714:	eor	r6, r6, r2
   39718:	eor	r7, r7, r3
   3971c:	add	r3, sp, #280	; 0x118
   39720:	ldrd	r2, [r3]
   39724:	adds	r2, r2, r6
   39728:	adc	r3, r3, r7
   3972c:	mov	r6, r2
   39730:	mov	r7, r3
   39734:	add	r3, sp, #280	; 0x118
   39738:	strd	r6, [r3]
   3973c:	ldr	r3, [sp, #268]	; 0x10c
   39740:	sub	r3, r3, r0
   39744:	cmp	r3, #7
   39748:	ble	3981c <cmetrohash64_2@@Base+0x960>
   3974c:	ldrb	r4, [r0, #1]
   39750:	mov	r3, #0
   39754:	lsl	r2, r4, #8
   39758:	ldrb	r6, [r0, #2]
   3975c:	mov	r5, #0
   39760:	lsl	r4, r6, #16
   39764:	orr	r2, r2, r4
   39768:	orr	r3, r3, r5
   3976c:	ldrb	r4, [r0]
   39770:	mov	r5, #0
   39774:	orr	r2, r2, r4
   39778:	orr	r3, r3, r5
   3977c:	ldrb	r6, [r0, #3]
   39780:	mov	r5, #0
   39784:	lsl	r4, r6, #24
   39788:	orr	r2, r2, r4
   3978c:	orr	r3, r3, r5
   39790:	mov	r4, #0
   39794:	ldrb	r5, [r0, #4]
   39798:	orr	r2, r2, r4
   3979c:	orr	r3, r3, r5
   397a0:	ldrb	r8, [r0, #5]
   397a4:	lsl	r7, r8, #8
   397a8:	orr	r2, r2, r4
   397ac:	orr	r3, r3, r7
   397b0:	ldrb	r8, [r0, #6]
   397b4:	lsl	r7, r8, #16
   397b8:	orr	r2, r2, r4
   397bc:	orr	r3, r3, r7
   397c0:	ldrb	r8, [r0, #7]
   397c4:	lsl	r7, r8, #24
   397c8:	orr	r2, r2, r4
   397cc:	orr	r3, r3, r7
   397d0:	ldr	r1, [pc, #-1396]	; 39264 <cmetrohash64_2@@Base+0x3a8>
   397d4:	umull	r4, r5, r2, r1
   397d8:	mla	r5, r1, r3, r5
   397dc:	add	r3, sp, #280	; 0x118
   397e0:	ldrd	r2, [r3]
   397e4:	adds	r2, r2, r4
   397e8:	adc	r3, r3, r5
   397ec:	add	r0, r0, #8
   397f0:	lsl	r1, r3, #28
   397f4:	orr	r1, r1, r2, lsr #4
   397f8:	lsl	r4, r2, #28
   397fc:	orr	r4, r4, r3, lsr #4
   39800:	ldr	ip, [pc, #-1440]	; 39268 <cmetrohash64_2@@Base+0x3ac>
   39804:	umull	r4, r5, r4, ip
   39808:	mla	r5, ip, r1, r5
   3980c:	eor	r4, r4, r2
   39810:	eor	r5, r5, r3
   39814:	add	r3, sp, #280	; 0x118
   39818:	strd	r4, [r3]
   3981c:	ldr	r3, [sp, #268]	; 0x10c
   39820:	sub	r3, r3, r0
   39824:	cmp	r3, #3
   39828:	ble	3988c <cmetrohash64_2@@Base+0x9d0>
   3982c:	ldrb	r3, [r0, #1]
   39830:	ldrb	r1, [r0, #2]
   39834:	lsl	r1, r1, #16
   39838:	orr	r1, r1, r3, lsl #8
   3983c:	ldrb	r3, [r0]
   39840:	orr	r1, r1, r3
   39844:	ldrb	r3, [r0, #3]
   39848:	orr	r1, r1, r3, lsl #24
   3984c:	add	r3, sp, #280	; 0x118
   39850:	ldrd	r2, [r3]
   39854:	ldr	ip, [pc, #-1528]	; 39264 <cmetrohash64_2@@Base+0x3a8>
   39858:	umlal	r2, r3, ip, r1
   3985c:	add	r0, r0, #4
   39860:	lsr	r4, r2, #15
   39864:	orr	r4, r4, r3, lsl #17
   39868:	lsr	r1, r3, #15
   3986c:	orr	r1, r1, r2, lsl #17
   39870:	ldr	ip, [pc, #-1552]	; 39268 <cmetrohash64_2@@Base+0x3ac>
   39874:	umull	r4, r5, r4, ip
   39878:	mla	r5, ip, r1, r5
   3987c:	eor	r4, r4, r2
   39880:	eor	r5, r5, r3
   39884:	add	r3, sp, #280	; 0x118
   39888:	strd	r4, [r3]
   3988c:	ldr	r3, [sp, #268]	; 0x10c
   39890:	sub	r3, r3, r0
   39894:	cmp	r3, #1
   39898:	ble	398f4 <cmetrohash64_2@@Base+0xa38>
   3989c:	ldrb	r4, [r0, #1]
   398a0:	ldrb	r2, [r0], #2
   398a4:	orr	r2, r2, r4, lsl #8
   398a8:	asr	r7, r2, #31
   398ac:	ldr	r3, [pc, #-1616]	; 39264 <cmetrohash64_2@@Base+0x3a8>
   398b0:	umull	r4, r5, r2, r3
   398b4:	mla	r5, r3, r7, r5
   398b8:	add	r3, sp, #280	; 0x118
   398bc:	ldrd	r2, [r3]
   398c0:	adds	r2, r2, r4
   398c4:	adc	r3, r3, r5
   398c8:	lsr	r4, r2, #15
   398cc:	orr	r4, r4, r3, lsl #17
   398d0:	lsr	r1, r3, #15
   398d4:	orr	r1, r1, r2, lsl #17
   398d8:	ldr	ip, [pc, #-1656]	; 39268 <cmetrohash64_2@@Base+0x3ac>
   398dc:	umull	r4, r5, r4, ip
   398e0:	mla	r5, ip, r1, r5
   398e4:	eor	r2, r2, r4
   398e8:	eor	r3, r3, r5
   398ec:	add	r1, sp, #280	; 0x118
   398f0:	strd	r2, [r1]
   398f4:	ldr	r3, [sp, #268]	; 0x10c
   398f8:	sub	r3, r3, r0
   398fc:	cmp	r3, #0
   39900:	ble	3994c <cmetrohash64_2@@Base+0xa90>
   39904:	ldrb	r2, [r0]
   39908:	ldr	r0, [pc, #-1708]	; 39264 <cmetrohash64_2@@Base+0x3a8>
   3990c:	umull	r2, r3, r2, r0
   39910:	add	r1, sp, #280	; 0x118
   39914:	ldrd	r0, [r1]
   39918:	adds	r0, r0, r2
   3991c:	adc	r1, r1, r3
   39920:	lsr	r2, r0, #23
   39924:	orr	r2, r2, r1, lsl #9
   39928:	lsr	ip, r1, #23
   3992c:	orr	ip, ip, r0, lsl #9
   39930:	ldr	lr, [pc, #-1744]	; 39268 <cmetrohash64_2@@Base+0x3ac>
   39934:	umull	r2, r3, r2, lr
   39938:	mla	r3, lr, ip, r3
   3993c:	eor	r2, r2, r0
   39940:	eor	r3, r3, r1
   39944:	add	r1, sp, #280	; 0x118
   39948:	strd	r2, [r1]
   3994c:	add	r3, sp, #280	; 0x118
   39950:	ldrd	r0, [r3]
   39954:	lsr	ip, r0, #28
   39958:	orr	r2, ip, r1, lsl #4
   3995c:	lsr	ip, r1, #28
   39960:	orr	r3, ip, r0, lsl #4
   39964:	eor	r0, r0, r2
   39968:	eor	r1, r1, r3
   3996c:	ldr	ip, [pc, #-1800]	; 3926c <cmetrohash64_2@@Base+0x3b0>
   39970:	umull	r2, r3, r0, ip
   39974:	mla	r3, ip, r1, r3
   39978:	lsr	ip, r2, #29
   3997c:	orr	r0, ip, r3, lsl #3
   39980:	lsr	ip, r3, #29
   39984:	orr	r1, ip, r2, lsl #3
   39988:	eor	r0, r0, r2
   3998c:	eor	r1, r1, r3
   39990:	add	r3, sp, #288	; 0x120
   39994:	strd	r0, [r3, #-8]!
   39998:	ldm	r3!, {r0, r1}
   3999c:	ldr	r3, [sp, #332]	; 0x14c
   399a0:	str	r0, [r3]
   399a4:	str	r1, [r3, #4]
   399a8:	add	sp, sp, #292	; 0x124
   399ac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   399b0:	push	{r4, r5, r6, r7, r8, lr}
   399b4:	ldr	r5, [r0]
   399b8:	ldr	r3, [r0, #12]
   399bc:	cmp	r3, #0
   399c0:	popeq	{r4, r5, r6, r7, r8, pc}
   399c4:	mov	r8, r2
   399c8:	mov	r7, r1
   399cc:	mov	r6, r0
   399d0:	sub	r5, r5, #4
   399d4:	mov	r4, #0
   399d8:	b	399ec <cmetrohash64_2@@Base+0xb30>
   399dc:	add	r4, r4, #1
   399e0:	ldr	r3, [r6, #12]
   399e4:	cmp	r3, r4
   399e8:	bls	39a08 <cmetrohash64_2@@Base+0xb4c>
   399ec:	ldr	r1, [r5, #4]!
   399f0:	cmp	r1, #0
   399f4:	cmpne	r1, #2
   399f8:	beq	399dc <cmetrohash64_2@@Base+0xb20>
   399fc:	mov	r0, r8
   39a00:	blx	r7
   39a04:	b	399dc <cmetrohash64_2@@Base+0xb20>
   39a08:	pop	{r4, r5, r6, r7, r8, pc}
   39a0c:	push	{r4, lr}
   39a10:	mov	r4, r0
   39a14:	ldr	r0, [r0]
   39a18:	cmp	r0, #0
   39a1c:	beq	39a24 <cmetrohash64_2@@Base+0xb68>
   39a20:	bl	13fd4 <free@plt>
   39a24:	mov	r3, #0
   39a28:	str	r3, [r4]
   39a2c:	str	r3, [r4, #4]
   39a30:	str	r3, [r4, #8]
   39a34:	str	r3, [r4, #12]
   39a38:	pop	{r4, pc}
   39a3c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   39a40:	sub	sp, sp, #28
   39a44:	str	r1, [sp, #8]
   39a48:	cmp	r3, #0
   39a4c:	str	r3, [sp, #12]
   39a50:	beq	39b00 <cmetrohash64_2@@Base+0xc44>
   39a54:	mov	fp, r0
   39a58:	mov	r8, r2
   39a5c:	ldr	r3, [sp, #12]
   39a60:	cmp	r3, #2
   39a64:	beq	39b14 <cmetrohash64_2@@Base+0xc58>
   39a68:	ldr	r3, [sp, #12]
   39a6c:	cmp	r3, #1
   39a70:	beq	39b28 <cmetrohash64_2@@Base+0xc6c>
   39a74:	ldr	r1, [r0, #8]
   39a78:	ldr	r2, [r0, #12]
   39a7c:	mov	r3, #179	; 0xb3
   39a80:	mul	r3, r3, r2
   39a84:	cmp	r1, r3, lsr #8
   39a88:	bcc	39a9c <cmetrohash64_2@@Base+0xbe0>
   39a8c:	lsl	r1, r1, #1
   39a90:	bl	39c58 <cmetrohash64_2@@Base+0xd9c>
   39a94:	cmp	r0, #0
   39a98:	bne	39b3c <cmetrohash64_2@@Base+0xc80>
   39a9c:	ldr	r6, [fp]
   39aa0:	ldr	r7, [fp, #12]
   39aa4:	sub	r7, r7, #1
   39aa8:	add	r3, sp, #16
   39aac:	str	r3, [sp, #4]
   39ab0:	ldr	r3, [pc, #380]	; 39c34 <cmetrohash64_2@@Base+0xd78>
   39ab4:	str	r3, [sp]
   39ab8:	mov	r2, r8
   39abc:	mov	r3, #0
   39ac0:	ldr	r0, [sp, #8]
   39ac4:	bl	383b0 <cmetrohash64_1@@Base>
   39ac8:	ldr	r5, [sp, #16]
   39acc:	and	r3, r7, r5
   39ad0:	ldr	r2, [sp, #64]	; 0x40
   39ad4:	sub	r2, r2, #2
   39ad8:	cmp	r2, #1
   39adc:	bls	39b58 <cmetrohash64_2@@Base+0xc9c>
   39ae0:	add	r9, r6, r3, lsl #2
   39ae4:	ldr	r4, [r6, r3, lsl #2]
   39ae8:	cmp	r4, #0
   39aec:	moveq	sl, r9
   39af0:	beq	39c10 <cmetrohash64_2@@Base+0xd54>
   39af4:	add	r5, r5, #1
   39af8:	mov	sl, #0
   39afc:	b	39bc8 <cmetrohash64_2@@Base+0xd0c>
   39b00:	ldr	r3, [pc, #304]	; 39c38 <cmetrohash64_2@@Base+0xd7c>
   39b04:	mov	r2, #114	; 0x72
   39b08:	ldr	r1, [pc, #300]	; 39c3c <cmetrohash64_2@@Base+0xd80>
   39b0c:	ldr	r0, [pc, #300]	; 39c40 <cmetrohash64_2@@Base+0xd84>
   39b10:	bl	14148 <__assert_fail@plt>
   39b14:	ldr	r3, [pc, #284]	; 39c38 <cmetrohash64_2@@Base+0xd7c>
   39b18:	mov	r2, #115	; 0x73
   39b1c:	ldr	r1, [pc, #280]	; 39c3c <cmetrohash64_2@@Base+0xd80>
   39b20:	ldr	r0, [pc, #284]	; 39c44 <cmetrohash64_2@@Base+0xd88>
   39b24:	bl	14148 <__assert_fail@plt>
   39b28:	ldr	r3, [pc, #264]	; 39c38 <cmetrohash64_2@@Base+0xd7c>
   39b2c:	mov	r2, #116	; 0x74
   39b30:	ldr	r1, [pc, #260]	; 39c3c <cmetrohash64_2@@Base+0xd80>
   39b34:	ldr	r0, [pc, #268]	; 39c48 <cmetrohash64_2@@Base+0xd8c>
   39b38:	bl	14148 <__assert_fail@plt>
   39b3c:	ldr	r2, [pc, #264]	; 39c4c <cmetrohash64_2@@Base+0xd90>
   39b40:	ldr	r1, [pc, #264]	; 39c50 <cmetrohash64_2@@Base+0xd94>
   39b44:	ldr	r3, [pc, #264]	; 39c54 <cmetrohash64_2@@Base+0xd98>
   39b48:	ldr	r0, [r3]
   39b4c:	bl	14094 <fprintf@plt>
   39b50:	mov	r0, #1
   39b54:	bl	14070 <exit@plt>
   39b58:	ldr	r2, [fp, #8]
   39b5c:	add	r2, r2, #1
   39b60:	str	r2, [fp, #8]
   39b64:	add	r2, r6, r3, lsl #2
   39b68:	ldr	r3, [r6, r3, lsl #2]
   39b6c:	cmp	r3, #0
   39b70:	cmpne	r3, #2
   39b74:	beq	39b98 <cmetrohash64_2@@Base+0xcdc>
   39b78:	add	r5, r5, #1
   39b7c:	and	r3, r7, r5
   39b80:	add	r2, r6, r3, lsl #2
   39b84:	ldr	r3, [r6, r3, lsl #2]
   39b88:	add	r5, r5, #1
   39b8c:	cmp	r3, #0
   39b90:	cmpne	r3, #2
   39b94:	bne	39b7c <cmetrohash64_2@@Base+0xcc0>
   39b98:	ldr	r3, [sp, #12]
   39b9c:	str	r3, [r2]
   39ba0:	mov	r4, #0
   39ba4:	b	39c28 <cmetrohash64_2@@Base+0xd6c>
   39ba8:	cmp	sl, #0
   39bac:	moveq	sl, r9
   39bb0:	and	r3, r7, r5
   39bb4:	add	r9, r6, r3, lsl #2
   39bb8:	ldr	r4, [r6, r3, lsl #2]
   39bbc:	add	r5, r5, #1
   39bc0:	cmp	r4, #0
   39bc4:	beq	39c08 <cmetrohash64_2@@Base+0xd4c>
   39bc8:	cmp	r4, #2
   39bcc:	beq	39ba8 <cmetrohash64_2@@Base+0xcec>
   39bd0:	ldr	r3, [r4, #12]
   39bd4:	cmp	r8, r3
   39bd8:	bne	39bb0 <cmetrohash64_2@@Base+0xcf4>
   39bdc:	mov	r2, r8
   39be0:	ldr	r1, [r4, #8]
   39be4:	ldr	r0, [sp, #8]
   39be8:	bl	13ff8 <memcmp@plt>
   39bec:	cmp	r0, #0
   39bf0:	bne	39bb0 <cmetrohash64_2@@Base+0xcf4>
   39bf4:	ldr	r3, [sp, #64]	; 0x40
   39bf8:	cmp	r3, #0
   39bfc:	ldreq	r3, [sp, #12]
   39c00:	streq	r3, [r9]
   39c04:	b	39c28 <cmetrohash64_2@@Base+0xd6c>
   39c08:	cmp	sl, #0
   39c0c:	moveq	sl, r9
   39c10:	ldr	r3, [fp, #8]
   39c14:	add	r3, r3, #1
   39c18:	str	r3, [fp, #8]
   39c1c:	ldr	r3, [sp, #12]
   39c20:	str	r3, [sl]
   39c24:	mov	r4, #0
   39c28:	mov	r0, r4
   39c2c:	add	sp, sp, #28
   39c30:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   39c34:	svccs	0x00693b52
   39c38:	andeq	r6, r5, r0, lsr #24
   39c3c:	andeq	r3, r5, r8, asr r6
   39c40:	andeq	r3, r5, r8, lsr #13
   39c44:	andeq	r3, r5, r0, asr #13
   39c48:	ldrdeq	r3, [r5], -r8
   39c4c:	strdeq	r3, [r5], -r0
   39c50:	andeq	r3, r5, r4, lsr #14
   39c54:	andeq	r7, r6, r8, lsr #1
   39c58:	push	{r4, r5, r6, r7, lr}
   39c5c:	sub	sp, sp, #28
   39c60:	mov	r6, r0
   39c64:	ldr	r5, [r0]
   39c68:	ldr	r3, [r0, #8]
   39c6c:	cmp	r1, r3
   39c70:	movcc	r1, r3
   39c74:	cmp	r1, #2
   39c78:	bls	39cd8 <cmetrohash64_2@@Base+0xe1c>
   39c7c:	mov	r4, #4
   39c80:	mov	r2, #179	; 0xb3
   39c84:	lsl	r4, r4, #1
   39c88:	mul	r3, r2, r4
   39c8c:	cmp	r1, r3, lsr #8
   39c90:	bhi	39c84 <cmetrohash64_2@@Base+0xdc8>
   39c94:	mov	r1, #4
   39c98:	mov	r0, r4
   39c9c:	bl	13fa4 <calloc@plt>
   39ca0:	str	r0, [sp, #8]
   39ca4:	cmp	r0, #0
   39ca8:	beq	39d44 <cmetrohash64_2@@Base+0xe88>
   39cac:	mov	r3, #0
   39cb0:	str	r3, [sp, #12]
   39cb4:	str	r4, [sp, #20]
   39cb8:	str	r3, [sp, #16]
   39cbc:	ldr	r3, [r6, #12]
   39cc0:	cmp	r3, #0
   39cc4:	beq	39d18 <cmetrohash64_2@@Base+0xe5c>
   39cc8:	sub	r5, r5, #4
   39ccc:	mov	r4, #0
   39cd0:	mov	r7, #3
   39cd4:	b	39cf0 <cmetrohash64_2@@Base+0xe34>
   39cd8:	mov	r4, #4
   39cdc:	b	39c94 <cmetrohash64_2@@Base+0xdd8>
   39ce0:	add	r4, r4, #1
   39ce4:	ldr	r3, [r6, #12]
   39ce8:	cmp	r3, r4
   39cec:	bls	39d18 <cmetrohash64_2@@Base+0xe5c>
   39cf0:	ldr	r3, [r5, #4]!
   39cf4:	cmp	r3, #0
   39cf8:	cmpne	r3, #2
   39cfc:	beq	39ce0 <cmetrohash64_2@@Base+0xe24>
   39d00:	ldr	r2, [r3, #12]
   39d04:	ldr	r1, [r3, #8]
   39d08:	str	r7, [sp]
   39d0c:	add	r0, sp, #8
   39d10:	bl	39a3c <cmetrohash64_2@@Base+0xb80>
   39d14:	b	39ce0 <cmetrohash64_2@@Base+0xe24>
   39d18:	mov	r0, r6
   39d1c:	bl	39a0c <cmetrohash64_2@@Base+0xb50>
   39d20:	add	ip, sp, #8
   39d24:	ldm	ip!, {r0, r1, r2, r3}
   39d28:	str	r0, [r6]
   39d2c:	str	r1, [r6, #4]
   39d30:	str	r2, [r6, #8]
   39d34:	str	r3, [r6, #12]
   39d38:	mov	r0, #0
   39d3c:	add	sp, sp, #28
   39d40:	pop	{r4, r5, r6, r7, pc}
   39d44:	mvn	r0, #0
   39d48:	b	39d3c <cmetrohash64_2@@Base+0xe80>
   39d4c:	push	{r4, r5, r6, r7, r8, r9, lr}
   39d50:	sub	sp, sp, #20
   39d54:	ldr	r8, [r0]
   39d58:	cmp	r8, #0
   39d5c:	beq	39df4 <cmetrohash64_2@@Base+0xf38>
   39d60:	mov	r6, r2
   39d64:	mov	r9, r1
   39d68:	ldr	r7, [r0, #12]
   39d6c:	sub	r7, r7, #1
   39d70:	add	r3, sp, #8
   39d74:	str	r3, [sp, #4]
   39d78:	ldr	r3, [pc, #124]	; 39dfc <cmetrohash64_2@@Base+0xf40>
   39d7c:	str	r3, [sp]
   39d80:	mov	r3, #0
   39d84:	mov	r0, r1
   39d88:	bl	383b0 <cmetrohash64_1@@Base>
   39d8c:	ldr	r5, [sp, #8]
   39d90:	and	r3, r7, r5
   39d94:	ldr	r4, [r8, r3, lsl #2]
   39d98:	cmp	r4, #0
   39d9c:	beq	39de8 <cmetrohash64_2@@Base+0xf2c>
   39da0:	add	r5, r5, #1
   39da4:	b	39dbc <cmetrohash64_2@@Base+0xf00>
   39da8:	and	r3, r7, r5
   39dac:	ldr	r4, [r8, r3, lsl #2]
   39db0:	add	r5, r5, #1
   39db4:	cmp	r4, #0
   39db8:	beq	39de8 <cmetrohash64_2@@Base+0xf2c>
   39dbc:	cmp	r4, #2
   39dc0:	beq	39da8 <cmetrohash64_2@@Base+0xeec>
   39dc4:	ldr	r3, [r4, #12]
   39dc8:	cmp	r6, r3
   39dcc:	bne	39da8 <cmetrohash64_2@@Base+0xeec>
   39dd0:	mov	r2, r6
   39dd4:	ldr	r1, [r4, #8]
   39dd8:	mov	r0, r9
   39ddc:	bl	13ff8 <memcmp@plt>
   39de0:	cmp	r0, #0
   39de4:	bne	39da8 <cmetrohash64_2@@Base+0xeec>
   39de8:	mov	r0, r4
   39dec:	add	sp, sp, #20
   39df0:	pop	{r4, r5, r6, r7, r8, r9, pc}
   39df4:	mov	r4, #0
   39df8:	b	39de8 <cmetrohash64_2@@Base+0xf2c>
   39dfc:	svccs	0x00693b52
   39e00:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   39e04:	sub	sp, sp, #20
   39e08:	ldr	r6, [r0]
   39e0c:	cmp	r6, #0
   39e10:	beq	39ec8 <cmetrohash64_2@@Base+0x100c>
   39e14:	mov	r7, r2
   39e18:	mov	sl, r1
   39e1c:	mov	fp, r0
   39e20:	ldr	r8, [r0, #12]
   39e24:	sub	r8, r8, #1
   39e28:	add	r3, sp, #8
   39e2c:	str	r3, [sp, #4]
   39e30:	ldr	r3, [pc, #152]	; 39ed0 <cmetrohash64_2@@Base+0x1014>
   39e34:	str	r3, [sp]
   39e38:	mov	r3, #0
   39e3c:	mov	r0, r1
   39e40:	bl	383b0 <cmetrohash64_1@@Base>
   39e44:	ldr	r5, [sp, #8]
   39e48:	and	r3, r8, r5
   39e4c:	add	r9, r6, r3, lsl #2
   39e50:	ldr	r4, [r6, r3, lsl #2]
   39e54:	cmp	r4, #0
   39e58:	beq	39ebc <cmetrohash64_2@@Base+0x1000>
   39e5c:	add	r5, r5, #1
   39e60:	b	39e7c <cmetrohash64_2@@Base+0xfc0>
   39e64:	and	r3, r8, r5
   39e68:	add	r9, r6, r3, lsl #2
   39e6c:	ldr	r4, [r6, r3, lsl #2]
   39e70:	add	r5, r5, #1
   39e74:	cmp	r4, #0
   39e78:	beq	39ebc <cmetrohash64_2@@Base+0x1000>
   39e7c:	cmp	r4, #2
   39e80:	beq	39e64 <cmetrohash64_2@@Base+0xfa8>
   39e84:	ldr	r3, [r4, #12]
   39e88:	cmp	r7, r3
   39e8c:	bne	39e64 <cmetrohash64_2@@Base+0xfa8>
   39e90:	mov	r2, r7
   39e94:	ldr	r1, [r4, #8]
   39e98:	mov	r0, sl
   39e9c:	bl	13ff8 <memcmp@plt>
   39ea0:	cmp	r0, #0
   39ea4:	bne	39e64 <cmetrohash64_2@@Base+0xfa8>
   39ea8:	mov	r3, #2
   39eac:	str	r3, [r9]
   39eb0:	ldr	r3, [fp, #8]
   39eb4:	sub	r3, r3, #1
   39eb8:	str	r3, [fp, #8]
   39ebc:	mov	r0, r4
   39ec0:	add	sp, sp, #20
   39ec4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   39ec8:	mov	r4, #0
   39ecc:	b	39ebc <cmetrohash64_2@@Base+0x1000>
   39ed0:	svccs	0x00693b52

00039ed4 <fb_name_table_clear@@Base>:
   39ed4:	push	{r4, lr}
   39ed8:	bl	39a0c <cmetrohash64_2@@Base+0xb50>
   39edc:	pop	{r4, pc}

00039ee0 <fb_name_table_destroy@@Base>:
   39ee0:	push	{r4, lr}
   39ee4:	mov	r4, r0
   39ee8:	cmp	r1, #0
   39eec:	beq	39ef4 <fb_name_table_destroy@@Base+0x14>
   39ef0:	bl	399b0 <cmetrohash64_2@@Base+0xaf4>
   39ef4:	mov	r0, r4
   39ef8:	bl	39a0c <cmetrohash64_2@@Base+0xb50>
   39efc:	pop	{r4, pc}

00039f00 <fb_name_table_init@@Base>:
   39f00:	push	{r4, r5, r6, lr}
   39f04:	mov	r5, r0
   39f08:	cmp	r1, #2
   39f0c:	bls	39f54 <fb_name_table_init@@Base+0x54>
   39f10:	mov	r4, #4
   39f14:	mov	r2, #179	; 0xb3
   39f18:	lsl	r4, r4, #1
   39f1c:	mul	r3, r2, r4
   39f20:	cmp	r1, r3, lsr #8
   39f24:	bhi	39f18 <fb_name_table_init@@Base+0x18>
   39f28:	mov	r1, #4
   39f2c:	mov	r0, r4
   39f30:	bl	13fa4 <calloc@plt>
   39f34:	str	r0, [r5]
   39f38:	cmp	r0, #0
   39f3c:	movne	r0, #0
   39f40:	strne	r0, [r5, #4]
   39f44:	strne	r4, [r5, #12]
   39f48:	strne	r0, [r5, #8]
   39f4c:	mvneq	r0, #0
   39f50:	pop	{r4, r5, r6, pc}
   39f54:	mov	r4, #4
   39f58:	b	39f28 <fb_name_table_init@@Base+0x28>

00039f5c <fb_name_table_resize@@Base>:
   39f5c:	push	{r4, lr}
   39f60:	bl	39c58 <cmetrohash64_2@@Base+0xd9c>
   39f64:	pop	{r4, pc}

00039f68 <fb_name_table_insert@@Base>:
   39f68:	push	{lr}		; (str lr, [sp, #-4]!)
   39f6c:	sub	sp, sp, #12
   39f70:	ldr	ip, [sp, #16]
   39f74:	str	ip, [sp]
   39f78:	bl	39a3c <cmetrohash64_2@@Base+0xb80>
   39f7c:	add	sp, sp, #12
   39f80:	pop	{pc}		; (ldr pc, [sp], #4)

00039f84 <fb_name_table_insert_item@@Base>:
   39f84:	push	{lr}		; (str lr, [sp, #-4]!)
   39f88:	sub	sp, sp, #12
   39f8c:	mov	r3, r1
   39f90:	ldr	ip, [r1, #12]
   39f94:	ldr	r1, [r1, #8]
   39f98:	str	r2, [sp]
   39f9c:	mov	r2, ip
   39fa0:	bl	39a3c <cmetrohash64_2@@Base+0xb80>
   39fa4:	add	sp, sp, #12
   39fa8:	pop	{pc}		; (ldr pc, [sp], #4)

00039fac <fb_name_table_find@@Base>:
   39fac:	push	{r4, lr}
   39fb0:	bl	39d4c <cmetrohash64_2@@Base+0xe90>
   39fb4:	pop	{r4, pc}

00039fb8 <fb_name_table_find_item@@Base>:
   39fb8:	push	{r4, lr}
   39fbc:	ldr	r2, [r1, #12]
   39fc0:	ldr	r1, [r1, #8]
   39fc4:	bl	39d4c <cmetrohash64_2@@Base+0xe90>
   39fc8:	pop	{r4, pc}

00039fcc <fb_name_table_remove@@Base>:
   39fcc:	push	{r4, lr}
   39fd0:	bl	39e00 <cmetrohash64_2@@Base+0xf44>
   39fd4:	pop	{r4, pc}

00039fd8 <fb_name_table_remove_item@@Base>:
   39fd8:	push	{r4, lr}
   39fdc:	ldr	r2, [r1, #12]
   39fe0:	ldr	r1, [r1, #8]
   39fe4:	bl	39e00 <cmetrohash64_2@@Base+0xf44>
   39fe8:	pop	{r4, pc}

00039fec <fb_name_table_visit@@Base>:
   39fec:	push	{r4, lr}
   39ff0:	bl	399b0 <cmetrohash64_2@@Base+0xaf4>
   39ff4:	pop	{r4, pc}
   39ff8:	ldrh	r3, [r0, #8]
   39ffc:	cmp	r3, #5
   3a000:	beq	3a034 <fb_name_table_visit@@Base+0x48>
   3a004:	cmp	r3, #6
   3a008:	beq	3a04c <fb_name_table_visit@@Base+0x60>
   3a00c:	cmp	r3, #4
   3a010:	beq	3a01c <fb_name_table_visit@@Base+0x30>
   3a014:	mov	r0, #0
   3a018:	bx	lr
   3a01c:	ldr	r2, [r0]
   3a020:	ldr	r3, [pc, #60]	; 3a064 <fb_name_table_visit@@Base+0x78>
   3a024:	eor	r3, r3, r2
   3a028:	ldr	r0, [pc, #56]	; 3a068 <fb_name_table_visit@@Base+0x7c>
   3a02c:	mul	r0, r0, r3
   3a030:	bx	lr
   3a034:	ldr	r2, [r0]
   3a038:	ldr	r3, [pc, #44]	; 3a06c <fb_name_table_visit@@Base+0x80>
   3a03c:	eor	r3, r3, r2
   3a040:	ldr	r0, [pc, #32]	; 3a068 <fb_name_table_visit@@Base+0x7c>
   3a044:	mul	r0, r0, r3
   3a048:	bx	lr
   3a04c:	ldrb	r2, [r0]
   3a050:	ldr	r3, [pc, #24]	; 3a070 <fb_name_table_visit@@Base+0x84>
   3a054:	eor	r3, r3, r2
   3a058:	ldr	r0, [pc, #8]	; 3a068 <fb_name_table_visit@@Base+0x7c>
   3a05c:	mul	r0, r0, r3
   3a060:	bx	lr
   3a064:	svccs	0x00693b56
   3a068:			; <UNDEFINED> instruction: 0x9e3779b1
   3a06c:	svccs	0x00693b57
   3a070:	svccs	0x00693b54
   3a074:	push	{r4, r5, r6, r7, r8, lr}
   3a078:	ldr	r4, [r0]
   3a07c:	cmp	r4, #0
   3a080:	beq	3a158 <fb_name_table_visit@@Base+0x16c>
   3a084:	mov	r5, r1
   3a088:	ldr	r8, [r0, #12]
   3a08c:	sub	r8, r8, #1
   3a090:	mov	r1, r2
   3a094:	mov	r0, r5
   3a098:	bl	39ff8 <fb_name_table_visit@@Base+0xc>
   3a09c:	and	r3, r8, r0
   3a0a0:	ldr	r1, [r4, r3, lsl #2]
   3a0a4:	cmp	r1, #0
   3a0a8:	beq	3a15c <fb_name_table_visit@@Base+0x170>
   3a0ac:	add	r0, r0, #1
   3a0b0:	mov	ip, #0
   3a0b4:	b	3a0ec <fb_name_table_visit@@Base+0x100>
   3a0b8:	ldrd	r6, [r5]
   3a0bc:	ldrd	r2, [r1]
   3a0c0:	cmp	r7, r3
   3a0c4:	cmpeq	r6, r2
   3a0c8:	moveq	r3, #1
   3a0cc:	movne	r3, #0
   3a0d0:	cmp	r3, #0
   3a0d4:	bne	3a15c <fb_name_table_visit@@Base+0x170>
   3a0d8:	and	r3, r8, r0
   3a0dc:	ldr	r1, [r4, r3, lsl #2]
   3a0e0:	add	r0, r0, #1
   3a0e4:	cmp	r1, #0
   3a0e8:	beq	3a15c <fb_name_table_visit@@Base+0x170>
   3a0ec:	cmp	r1, #2
   3a0f0:	beq	3a0d8 <fb_name_table_visit@@Base+0xec>
   3a0f4:	ldrh	r3, [r1, #8]
   3a0f8:	ldrh	r2, [r5, #8]
   3a0fc:	cmp	r2, r3
   3a100:	bne	3a0d8 <fb_name_table_visit@@Base+0xec>
   3a104:	cmp	r3, #5
   3a108:	beq	3a124 <fb_name_table_visit@@Base+0x138>
   3a10c:	cmp	r3, #6
   3a110:	beq	3a140 <fb_name_table_visit@@Base+0x154>
   3a114:	cmp	r3, #4
   3a118:	movne	r3, ip
   3a11c:	bne	3a0d0 <fb_name_table_visit@@Base+0xe4>
   3a120:	b	3a0b8 <fb_name_table_visit@@Base+0xcc>
   3a124:	ldrd	r6, [r5]
   3a128:	ldrd	r2, [r1]
   3a12c:	cmp	r7, r3
   3a130:	cmpeq	r6, r2
   3a134:	moveq	r3, #1
   3a138:	movne	r3, #0
   3a13c:	b	3a0d0 <fb_name_table_visit@@Base+0xe4>
   3a140:	ldrb	r3, [r5]
   3a144:	ldrb	r2, [r1]
   3a148:	cmp	r3, r2
   3a14c:	movne	r3, #0
   3a150:	moveq	r3, #1
   3a154:	b	3a0d0 <fb_name_table_visit@@Base+0xe4>
   3a158:	mov	r1, #0
   3a15c:	mov	r0, r1
   3a160:	pop	{r4, r5, r6, r7, r8, pc}
   3a164:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   3a168:	ldr	r4, [r0]
   3a16c:	cmp	r4, #0
   3a170:	beq	3a270 <fb_name_table_visit@@Base+0x284>
   3a174:	mov	r5, r1
   3a178:	mov	r9, r0
   3a17c:	ldr	r8, [r0, #12]
   3a180:	sub	r8, r8, #1
   3a184:	mov	r1, r2
   3a188:	mov	r0, r5
   3a18c:	bl	39ff8 <fb_name_table_visit@@Base+0xc>
   3a190:	and	r3, r8, r0
   3a194:	add	ip, r4, r3, lsl #2
   3a198:	ldr	r1, [r4, r3, lsl #2]
   3a19c:	cmp	r1, #0
   3a1a0:	beq	3a268 <fb_name_table_visit@@Base+0x27c>
   3a1a4:	add	r0, r0, #1
   3a1a8:	mov	lr, #0
   3a1ac:	b	3a1e8 <fb_name_table_visit@@Base+0x1fc>
   3a1b0:	ldrd	r6, [r5]
   3a1b4:	ldrd	r2, [r1]
   3a1b8:	cmp	r7, r3
   3a1bc:	cmpeq	r6, r2
   3a1c0:	moveq	r3, #1
   3a1c4:	movne	r3, #0
   3a1c8:	cmp	r3, #0
   3a1cc:	bne	3a254 <fb_name_table_visit@@Base+0x268>
   3a1d0:	and	r3, r8, r0
   3a1d4:	add	ip, r4, r3, lsl #2
   3a1d8:	ldr	r1, [r4, r3, lsl #2]
   3a1dc:	add	r0, r0, #1
   3a1e0:	cmp	r1, #0
   3a1e4:	beq	3a268 <fb_name_table_visit@@Base+0x27c>
   3a1e8:	cmp	r1, #2
   3a1ec:	beq	3a1d0 <fb_name_table_visit@@Base+0x1e4>
   3a1f0:	ldrh	r3, [r1, #8]
   3a1f4:	ldrh	r2, [r5, #8]
   3a1f8:	cmp	r2, r3
   3a1fc:	bne	3a1d0 <fb_name_table_visit@@Base+0x1e4>
   3a200:	cmp	r3, #5
   3a204:	beq	3a220 <fb_name_table_visit@@Base+0x234>
   3a208:	cmp	r3, #6
   3a20c:	beq	3a23c <fb_name_table_visit@@Base+0x250>
   3a210:	cmp	r3, #4
   3a214:	movne	r3, lr
   3a218:	bne	3a1c8 <fb_name_table_visit@@Base+0x1dc>
   3a21c:	b	3a1b0 <fb_name_table_visit@@Base+0x1c4>
   3a220:	ldrd	r6, [r5]
   3a224:	ldrd	r2, [r1]
   3a228:	cmp	r7, r3
   3a22c:	cmpeq	r6, r2
   3a230:	moveq	r3, #1
   3a234:	movne	r3, #0
   3a238:	b	3a1c8 <fb_name_table_visit@@Base+0x1dc>
   3a23c:	ldrb	r3, [r5]
   3a240:	ldrb	r2, [r1]
   3a244:	cmp	r3, r2
   3a248:	movne	r3, #0
   3a24c:	moveq	r3, #1
   3a250:	b	3a1c8 <fb_name_table_visit@@Base+0x1dc>
   3a254:	mov	r3, #2
   3a258:	str	r3, [ip]
   3a25c:	ldr	r3, [r9, #8]
   3a260:	sub	r3, r3, #1
   3a264:	str	r3, [r9, #8]
   3a268:	mov	r0, r1
   3a26c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   3a270:	mov	r1, #0
   3a274:	b	3a268 <fb_name_table_visit@@Base+0x27c>
   3a278:	push	{r4, r5, r6, r7, r8, lr}
   3a27c:	ldr	r5, [r0]
   3a280:	ldr	r3, [r0, #12]
   3a284:	cmp	r3, #0
   3a288:	popeq	{r4, r5, r6, r7, r8, pc}
   3a28c:	mov	r8, r2
   3a290:	mov	r7, r1
   3a294:	mov	r6, r0
   3a298:	sub	r5, r5, #4
   3a29c:	mov	r4, #0
   3a2a0:	b	3a2b4 <fb_name_table_visit@@Base+0x2c8>
   3a2a4:	add	r4, r4, #1
   3a2a8:	ldr	r3, [r6, #12]
   3a2ac:	cmp	r3, r4
   3a2b0:	bls	3a2d0 <fb_name_table_visit@@Base+0x2e4>
   3a2b4:	ldr	r1, [r5, #4]!
   3a2b8:	cmp	r1, #0
   3a2bc:	cmpne	r1, #2
   3a2c0:	beq	3a2a4 <fb_name_table_visit@@Base+0x2b8>
   3a2c4:	mov	r0, r8
   3a2c8:	blx	r7
   3a2cc:	b	3a2a4 <fb_name_table_visit@@Base+0x2b8>
   3a2d0:	pop	{r4, r5, r6, r7, r8, pc}
   3a2d4:	push	{r4, lr}
   3a2d8:	mov	r4, r0
   3a2dc:	ldr	r0, [r0]
   3a2e0:	cmp	r0, #0
   3a2e4:	beq	3a2ec <fb_name_table_visit@@Base+0x300>
   3a2e8:	bl	13fd4 <free@plt>
   3a2ec:	mov	r3, #0
   3a2f0:	str	r3, [r4]
   3a2f4:	str	r3, [r4, #4]
   3a2f8:	str	r3, [r4, #8]
   3a2fc:	str	r3, [r4, #12]
   3a300:	pop	{r4, pc}
   3a304:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3a308:	ldr	r7, [sp, #40]	; 0x28
   3a30c:	subs	sl, r3, #0
   3a310:	beq	3a398 <fb_name_table_visit@@Base+0x3ac>
   3a314:	mov	r9, r0
   3a318:	mov	r5, r1
   3a31c:	mov	r6, r2
   3a320:	cmp	sl, #2
   3a324:	beq	3a3ac <fb_name_table_visit@@Base+0x3c0>
   3a328:	cmp	sl, #1
   3a32c:	beq	3a3c0 <fb_name_table_visit@@Base+0x3d4>
   3a330:	ldr	r1, [r0, #8]
   3a334:	ldr	r2, [r0, #12]
   3a338:	mov	r3, #179	; 0xb3
   3a33c:	mul	r3, r3, r2
   3a340:	cmp	r1, r3, lsr #8
   3a344:	bcs	3a3d4 <fb_name_table_visit@@Base+0x3e8>
   3a348:	ldr	r4, [r9]
   3a34c:	ldr	r8, [r9, #12]
   3a350:	sub	r8, r8, #1
   3a354:	mov	r1, r6
   3a358:	mov	r0, r5
   3a35c:	bl	39ff8 <fb_name_table_visit@@Base+0xc>
   3a360:	and	r3, r8, r0
   3a364:	sub	r2, r7, #2
   3a368:	cmp	r2, #1
   3a36c:	bls	3a400 <fb_name_table_visit@@Base+0x414>
   3a370:	add	ip, r4, r3, lsl #2
   3a374:	ldr	r1, [r4, r3, lsl #2]
   3a378:	cmp	r1, #0
   3a37c:	moveq	lr, ip
   3a380:	beq	3a514 <fb_name_table_visit@@Base+0x528>
   3a384:	add	r0, r0, #1
   3a388:	mov	lr, #0
   3a38c:	mov	fp, lr
   3a390:	str	r7, [sp, #40]	; 0x28
   3a394:	b	3a490 <fb_name_table_visit@@Base+0x4a4>
   3a398:	ldr	r3, [pc, #400]	; 3a530 <fb_name_table_visit@@Base+0x544>
   3a39c:	mov	r2, #114	; 0x72
   3a3a0:	ldr	r1, [pc, #396]	; 3a534 <fb_name_table_visit@@Base+0x548>
   3a3a4:	ldr	r0, [pc, #396]	; 3a538 <fb_name_table_visit@@Base+0x54c>
   3a3a8:	bl	14148 <__assert_fail@plt>
   3a3ac:	ldr	r3, [pc, #380]	; 3a530 <fb_name_table_visit@@Base+0x544>
   3a3b0:	mov	r2, #115	; 0x73
   3a3b4:	ldr	r1, [pc, #376]	; 3a534 <fb_name_table_visit@@Base+0x548>
   3a3b8:	ldr	r0, [pc, #380]	; 3a53c <fb_name_table_visit@@Base+0x550>
   3a3bc:	bl	14148 <__assert_fail@plt>
   3a3c0:	ldr	r3, [pc, #360]	; 3a530 <fb_name_table_visit@@Base+0x544>
   3a3c4:	mov	r2, #116	; 0x74
   3a3c8:	ldr	r1, [pc, #356]	; 3a534 <fb_name_table_visit@@Base+0x548>
   3a3cc:	ldr	r0, [pc, #364]	; 3a540 <fb_name_table_visit@@Base+0x554>
   3a3d0:	bl	14148 <__assert_fail@plt>
   3a3d4:	lsl	r1, r1, #1
   3a3d8:	bl	3a550 <fb_name_table_visit@@Base+0x564>
   3a3dc:	cmp	r0, #0
   3a3e0:	beq	3a348 <fb_name_table_visit@@Base+0x35c>
   3a3e4:	ldr	r2, [pc, #344]	; 3a544 <fb_name_table_visit@@Base+0x558>
   3a3e8:	ldr	r1, [pc, #344]	; 3a548 <fb_name_table_visit@@Base+0x55c>
   3a3ec:	ldr	r3, [pc, #344]	; 3a54c <fb_name_table_visit@@Base+0x560>
   3a3f0:	ldr	r0, [r3]
   3a3f4:	bl	14094 <fprintf@plt>
   3a3f8:	mov	r0, #1
   3a3fc:	bl	14070 <exit@plt>
   3a400:	ldr	r2, [r9, #8]
   3a404:	add	r2, r2, #1
   3a408:	str	r2, [r9, #8]
   3a40c:	add	r2, r4, r3, lsl #2
   3a410:	ldr	r3, [r4, r3, lsl #2]
   3a414:	cmp	r3, #0
   3a418:	cmpne	r3, #2
   3a41c:	beq	3a440 <fb_name_table_visit@@Base+0x454>
   3a420:	add	r0, r0, #1
   3a424:	and	r3, r8, r0
   3a428:	add	r2, r4, r3, lsl #2
   3a42c:	ldr	r3, [r4, r3, lsl #2]
   3a430:	add	r0, r0, #1
   3a434:	cmp	r3, #0
   3a438:	cmpne	r3, #2
   3a43c:	bne	3a424 <fb_name_table_visit@@Base+0x438>
   3a440:	str	sl, [r2]
   3a444:	mov	r1, #0
   3a448:	b	3a528 <fb_name_table_visit@@Base+0x53c>
   3a44c:	cmp	lr, #0
   3a450:	moveq	lr, ip
   3a454:	b	3a478 <fb_name_table_visit@@Base+0x48c>
   3a458:	ldrd	r2, [r1]
   3a45c:	ldrd	r6, [r5]
   3a460:	cmp	r7, r3
   3a464:	cmpeq	r6, r2
   3a468:	moveq	r3, #1
   3a46c:	movne	r3, #0
   3a470:	cmp	r3, #0
   3a474:	bne	3a4fc <fb_name_table_visit@@Base+0x510>
   3a478:	and	r3, r8, r0
   3a47c:	add	ip, r4, r3, lsl #2
   3a480:	ldr	r1, [r4, r3, lsl #2]
   3a484:	add	r0, r0, #1
   3a488:	cmp	r1, #0
   3a48c:	beq	3a50c <fb_name_table_visit@@Base+0x520>
   3a490:	cmp	r1, #2
   3a494:	beq	3a44c <fb_name_table_visit@@Base+0x460>
   3a498:	ldrh	r3, [r1, #8]
   3a49c:	ldrh	r2, [r5, #8]
   3a4a0:	cmp	r2, r3
   3a4a4:	bne	3a478 <fb_name_table_visit@@Base+0x48c>
   3a4a8:	cmp	r3, #5
   3a4ac:	beq	3a4c8 <fb_name_table_visit@@Base+0x4dc>
   3a4b0:	cmp	r3, #6
   3a4b4:	beq	3a4e4 <fb_name_table_visit@@Base+0x4f8>
   3a4b8:	cmp	r3, #4
   3a4bc:	movne	r3, fp
   3a4c0:	bne	3a470 <fb_name_table_visit@@Base+0x484>
   3a4c4:	b	3a458 <fb_name_table_visit@@Base+0x46c>
   3a4c8:	ldrd	r2, [r1]
   3a4cc:	ldrd	r6, [r5]
   3a4d0:	cmp	r7, r3
   3a4d4:	cmpeq	r6, r2
   3a4d8:	moveq	r3, #1
   3a4dc:	movne	r3, #0
   3a4e0:	b	3a470 <fb_name_table_visit@@Base+0x484>
   3a4e4:	ldrb	r3, [r5]
   3a4e8:	ldrb	r2, [r1]
   3a4ec:	cmp	r3, r2
   3a4f0:	movne	r3, #0
   3a4f4:	moveq	r3, #1
   3a4f8:	b	3a470 <fb_name_table_visit@@Base+0x484>
   3a4fc:	ldr	r7, [sp, #40]	; 0x28
   3a500:	cmp	r7, #0
   3a504:	streq	sl, [ip]
   3a508:	b	3a528 <fb_name_table_visit@@Base+0x53c>
   3a50c:	cmp	lr, #0
   3a510:	moveq	lr, ip
   3a514:	ldr	r3, [r9, #8]
   3a518:	add	r3, r3, #1
   3a51c:	str	r3, [r9, #8]
   3a520:	str	sl, [lr]
   3a524:	mov	r1, #0
   3a528:	mov	r0, r1
   3a52c:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3a530:	andeq	r6, r5, r8, lsr ip
   3a534:	andeq	r3, r5, r8, asr r6
   3a538:	andeq	r3, r5, r8, lsr #13
   3a53c:	andeq	r3, r5, r0, asr #13
   3a540:	ldrdeq	r3, [r5], -r8
   3a544:	strdeq	r3, [r5], -r0
   3a548:	andeq	r3, r5, r4, lsr #14
   3a54c:	andeq	r7, r6, r8, lsr #1
   3a550:	push	{r4, r5, r6, r7, r8, lr}
   3a554:	sub	sp, sp, #24
   3a558:	mov	r6, r0
   3a55c:	ldr	r5, [r0]
   3a560:	ldr	r3, [r0, #8]
   3a564:	cmp	r1, r3
   3a568:	movcc	r1, r3
   3a56c:	cmp	r1, #2
   3a570:	bls	3a5d4 <fb_name_table_visit@@Base+0x5e8>
   3a574:	mov	r4, #4
   3a578:	mov	r2, #179	; 0xb3
   3a57c:	lsl	r4, r4, #1
   3a580:	mul	r3, r2, r4
   3a584:	cmp	r1, r3, lsr #8
   3a588:	bhi	3a57c <fb_name_table_visit@@Base+0x590>
   3a58c:	mov	r1, #4
   3a590:	mov	r0, r4
   3a594:	bl	13fa4 <calloc@plt>
   3a598:	str	r0, [sp, #8]
   3a59c:	cmp	r0, #0
   3a5a0:	beq	3a640 <fb_name_table_visit@@Base+0x654>
   3a5a4:	mov	r3, #0
   3a5a8:	str	r3, [sp, #12]
   3a5ac:	str	r4, [sp, #20]
   3a5b0:	str	r3, [sp, #16]
   3a5b4:	ldr	r3, [r6, #12]
   3a5b8:	cmp	r3, #0
   3a5bc:	beq	3a614 <fb_name_table_visit@@Base+0x628>
   3a5c0:	sub	r5, r5, #4
   3a5c4:	mov	r4, #0
   3a5c8:	mov	r8, #3
   3a5cc:	mov	r7, r4
   3a5d0:	b	3a5ec <fb_name_table_visit@@Base+0x600>
   3a5d4:	mov	r4, #4
   3a5d8:	b	3a58c <fb_name_table_visit@@Base+0x5a0>
   3a5dc:	add	r4, r4, #1
   3a5e0:	ldr	r3, [r6, #12]
   3a5e4:	cmp	r3, r4
   3a5e8:	bls	3a614 <fb_name_table_visit@@Base+0x628>
   3a5ec:	ldr	r1, [r5, #4]!
   3a5f0:	cmp	r1, #0
   3a5f4:	cmpne	r1, #2
   3a5f8:	beq	3a5dc <fb_name_table_visit@@Base+0x5f0>
   3a5fc:	str	r8, [sp]
   3a600:	mov	r3, r1
   3a604:	mov	r2, r7
   3a608:	add	r0, sp, #8
   3a60c:	bl	3a304 <fb_name_table_visit@@Base+0x318>
   3a610:	b	3a5dc <fb_name_table_visit@@Base+0x5f0>
   3a614:	mov	r0, r6
   3a618:	bl	3a2d4 <fb_name_table_visit@@Base+0x2e8>
   3a61c:	add	ip, sp, #8
   3a620:	ldm	ip!, {r0, r1, r2, r3}
   3a624:	str	r0, [r6]
   3a628:	str	r1, [r6, #4]
   3a62c:	str	r2, [r6, #8]
   3a630:	str	r3, [r6, #12]
   3a634:	mov	r0, #0
   3a638:	add	sp, sp, #24
   3a63c:	pop	{r4, r5, r6, r7, r8, pc}
   3a640:	mvn	r0, #0
   3a644:	b	3a638 <fb_name_table_visit@@Base+0x64c>

0003a648 <fb_value_set_clear@@Base>:
   3a648:	push	{r4, lr}
   3a64c:	bl	3a2d4 <fb_name_table_visit@@Base+0x2e8>
   3a650:	pop	{r4, pc}

0003a654 <fb_value_set_destroy@@Base>:
   3a654:	push	{r4, lr}
   3a658:	mov	r4, r0
   3a65c:	cmp	r1, #0
   3a660:	beq	3a668 <fb_value_set_destroy@@Base+0x14>
   3a664:	bl	3a278 <fb_name_table_visit@@Base+0x28c>
   3a668:	mov	r0, r4
   3a66c:	bl	3a2d4 <fb_name_table_visit@@Base+0x2e8>
   3a670:	pop	{r4, pc}

0003a674 <fb_value_set_init@@Base>:
   3a674:	push	{r4, r5, r6, lr}
   3a678:	mov	r5, r0
   3a67c:	cmp	r1, #2
   3a680:	bls	3a6c8 <fb_value_set_init@@Base+0x54>
   3a684:	mov	r4, #4
   3a688:	mov	r2, #179	; 0xb3
   3a68c:	lsl	r4, r4, #1
   3a690:	mul	r3, r2, r4
   3a694:	cmp	r1, r3, lsr #8
   3a698:	bhi	3a68c <fb_value_set_init@@Base+0x18>
   3a69c:	mov	r1, #4
   3a6a0:	mov	r0, r4
   3a6a4:	bl	13fa4 <calloc@plt>
   3a6a8:	str	r0, [r5]
   3a6ac:	cmp	r0, #0
   3a6b0:	movne	r0, #0
   3a6b4:	strne	r0, [r5, #4]
   3a6b8:	strne	r4, [r5, #12]
   3a6bc:	strne	r0, [r5, #8]
   3a6c0:	mvneq	r0, #0
   3a6c4:	pop	{r4, r5, r6, pc}
   3a6c8:	mov	r4, #4
   3a6cc:	b	3a69c <fb_value_set_init@@Base+0x28>

0003a6d0 <fb_value_set_resize@@Base>:
   3a6d0:	push	{r4, lr}
   3a6d4:	bl	3a550 <fb_name_table_visit@@Base+0x564>
   3a6d8:	pop	{r4, pc}

0003a6dc <fb_value_set_insert@@Base>:
   3a6dc:	push	{lr}		; (str lr, [sp, #-4]!)
   3a6e0:	sub	sp, sp, #12
   3a6e4:	ldr	ip, [sp, #16]
   3a6e8:	str	ip, [sp]
   3a6ec:	bl	3a304 <fb_name_table_visit@@Base+0x318>
   3a6f0:	add	sp, sp, #12
   3a6f4:	pop	{pc}		; (ldr pc, [sp], #4)

0003a6f8 <fb_value_set_insert_item@@Base>:
   3a6f8:	push	{lr}		; (str lr, [sp, #-4]!)
   3a6fc:	sub	sp, sp, #12
   3a700:	str	r2, [sp]
   3a704:	mov	r3, r1
   3a708:	mov	r2, #0
   3a70c:	bl	3a304 <fb_name_table_visit@@Base+0x318>
   3a710:	add	sp, sp, #12
   3a714:	pop	{pc}		; (ldr pc, [sp], #4)

0003a718 <fb_value_set_find@@Base>:
   3a718:	push	{r4, lr}
   3a71c:	bl	3a074 <fb_name_table_visit@@Base+0x88>
   3a720:	pop	{r4, pc}

0003a724 <fb_value_set_find_item@@Base>:
   3a724:	push	{r4, lr}
   3a728:	mov	r2, #0
   3a72c:	bl	3a074 <fb_name_table_visit@@Base+0x88>
   3a730:	pop	{r4, pc}

0003a734 <fb_value_set_remove@@Base>:
   3a734:	push	{r4, lr}
   3a738:	bl	3a164 <fb_name_table_visit@@Base+0x178>
   3a73c:	pop	{r4, pc}

0003a740 <fb_value_set_remove_item@@Base>:
   3a740:	push	{r4, lr}
   3a744:	mov	r2, #0
   3a748:	bl	3a164 <fb_name_table_visit@@Base+0x178>
   3a74c:	pop	{r4, pc}

0003a750 <fb_value_set_visit@@Base>:
   3a750:	push	{r4, lr}
   3a754:	bl	3a278 <fb_name_table_visit@@Base+0x28c>
   3a758:	pop	{r4, pc}
   3a75c:	eor	r1, r1, #-2147483648	; 0x80000000
   3a760:	b	3a768 <fb_value_set_visit@@Base+0x18>
   3a764:	eor	r3, r3, #-2147483648	; 0x80000000
   3a768:	push	{r4, r5, lr}
   3a76c:	lsl	r4, r1, #1
   3a770:	lsl	r5, r3, #1
   3a774:	teq	r4, r5
   3a778:	teqeq	r0, r2
   3a77c:	orrsne	ip, r4, r0
   3a780:	orrsne	ip, r5, r2
   3a784:	mvnsne	ip, r4, asr #21
   3a788:	mvnsne	ip, r5, asr #21
   3a78c:	beq	3a978 <fb_value_set_visit@@Base+0x228>
   3a790:	lsr	r4, r4, #21
   3a794:	rsbs	r5, r4, r5, lsr #21
   3a798:	rsblt	r5, r5, #0
   3a79c:	ble	3a7bc <fb_value_set_visit@@Base+0x6c>
   3a7a0:	add	r4, r4, r5
   3a7a4:	eor	r2, r0, r2
   3a7a8:	eor	r3, r1, r3
   3a7ac:	eor	r0, r2, r0
   3a7b0:	eor	r1, r3, r1
   3a7b4:	eor	r2, r0, r2
   3a7b8:	eor	r3, r1, r3
   3a7bc:	cmp	r5, #54	; 0x36
   3a7c0:	pophi	{r4, r5, pc}
   3a7c4:	tst	r1, #-2147483648	; 0x80000000
   3a7c8:	lsl	r1, r1, #12
   3a7cc:	mov	ip, #1048576	; 0x100000
   3a7d0:	orr	r1, ip, r1, lsr #12
   3a7d4:	beq	3a7e0 <fb_value_set_visit@@Base+0x90>
   3a7d8:	rsbs	r0, r0, #0
   3a7dc:	rsc	r1, r1, #0
   3a7e0:	tst	r3, #-2147483648	; 0x80000000
   3a7e4:	lsl	r3, r3, #12
   3a7e8:	orr	r3, ip, r3, lsr #12
   3a7ec:	beq	3a7f8 <fb_value_set_visit@@Base+0xa8>
   3a7f0:	rsbs	r2, r2, #0
   3a7f4:	rsc	r3, r3, #0
   3a7f8:	teq	r4, r5
   3a7fc:	beq	3a960 <fb_value_set_visit@@Base+0x210>
   3a800:	sub	r4, r4, #1
   3a804:	rsbs	lr, r5, #32
   3a808:	blt	3a824 <fb_value_set_visit@@Base+0xd4>
   3a80c:	lsl	ip, r2, lr
   3a810:	adds	r0, r0, r2, lsr r5
   3a814:	adc	r1, r1, #0
   3a818:	adds	r0, r0, r3, lsl lr
   3a81c:	adcs	r1, r1, r3, asr r5
   3a820:	b	3a840 <fb_value_set_visit@@Base+0xf0>
   3a824:	sub	r5, r5, #32
   3a828:	add	lr, lr, #32
   3a82c:	cmp	r2, #1
   3a830:	lsl	ip, r3, lr
   3a834:	orrcs	ip, ip, #2
   3a838:	adds	r0, r0, r3, asr r5
   3a83c:	adcs	r1, r1, r3, asr #31
   3a840:	and	r5, r1, #-2147483648	; 0x80000000
   3a844:	bpl	3a854 <fb_value_set_visit@@Base+0x104>
   3a848:	rsbs	ip, ip, #0
   3a84c:	rscs	r0, r0, #0
   3a850:	rsc	r1, r1, #0
   3a854:	cmp	r1, #1048576	; 0x100000
   3a858:	bcc	3a898 <fb_value_set_visit@@Base+0x148>
   3a85c:	cmp	r1, #2097152	; 0x200000
   3a860:	bcc	3a880 <fb_value_set_visit@@Base+0x130>
   3a864:	lsrs	r1, r1, #1
   3a868:	rrxs	r0, r0
   3a86c:	rrx	ip, ip
   3a870:	add	r4, r4, #1
   3a874:	lsl	r2, r4, #21
   3a878:	cmn	r2, #4194304	; 0x400000
   3a87c:	bcs	3a9d8 <fb_value_set_visit@@Base+0x288>
   3a880:	cmp	ip, #-2147483648	; 0x80000000
   3a884:	lsrseq	ip, r0, #1
   3a888:	adcs	r0, r0, #0
   3a88c:	adc	r1, r1, r4, lsl #20
   3a890:	orr	r1, r1, r5
   3a894:	pop	{r4, r5, pc}
   3a898:	lsls	ip, ip, #1
   3a89c:	adcs	r0, r0, r0
   3a8a0:	adc	r1, r1, r1
   3a8a4:	tst	r1, #1048576	; 0x100000
   3a8a8:	sub	r4, r4, #1
   3a8ac:	bne	3a880 <fb_value_set_visit@@Base+0x130>
   3a8b0:	teq	r1, #0
   3a8b4:	moveq	r1, r0
   3a8b8:	moveq	r0, #0
   3a8bc:	clz	r3, r1
   3a8c0:	addeq	r3, r3, #32
   3a8c4:	sub	r3, r3, #11
   3a8c8:	subs	r2, r3, #32
   3a8cc:	bge	3a8f0 <fb_value_set_visit@@Base+0x1a0>
   3a8d0:	adds	r2, r2, #12
   3a8d4:	ble	3a8ec <fb_value_set_visit@@Base+0x19c>
   3a8d8:	add	ip, r2, #20
   3a8dc:	rsb	r2, r2, #12
   3a8e0:	lsl	r0, r1, ip
   3a8e4:	lsr	r1, r1, r2
   3a8e8:	b	3a900 <fb_value_set_visit@@Base+0x1b0>
   3a8ec:	add	r2, r2, #20
   3a8f0:	rsble	ip, r2, #32
   3a8f4:	lsl	r1, r1, r2
   3a8f8:	orrle	r1, r1, r0, lsr ip
   3a8fc:	lslle	r0, r0, r2
   3a900:	subs	r4, r4, r3
   3a904:	addge	r1, r1, r4, lsl #20
   3a908:	orrge	r1, r1, r5
   3a90c:	popge	{r4, r5, pc}
   3a910:	mvn	r4, r4
   3a914:	subs	r4, r4, #31
   3a918:	bge	3a954 <fb_value_set_visit@@Base+0x204>
   3a91c:	adds	r4, r4, #12
   3a920:	bgt	3a93c <fb_value_set_visit@@Base+0x1ec>
   3a924:	add	r4, r4, #20
   3a928:	rsb	r2, r4, #32
   3a92c:	lsr	r0, r0, r4
   3a930:	orr	r0, r0, r1, lsl r2
   3a934:	orr	r1, r5, r1, lsr r4
   3a938:	pop	{r4, r5, pc}
   3a93c:	rsb	r4, r4, #12
   3a940:	rsb	r2, r4, #32
   3a944:	lsr	r0, r0, r2
   3a948:	orr	r0, r0, r1, lsl r4
   3a94c:	mov	r1, r5
   3a950:	pop	{r4, r5, pc}
   3a954:	lsr	r0, r1, r4
   3a958:	mov	r1, r5
   3a95c:	pop	{r4, r5, pc}
   3a960:	teq	r4, #0
   3a964:	eor	r3, r3, #1048576	; 0x100000
   3a968:	eoreq	r1, r1, #1048576	; 0x100000
   3a96c:	addeq	r4, r4, #1
   3a970:	subne	r5, r5, #1
   3a974:	b	3a800 <fb_value_set_visit@@Base+0xb0>
   3a978:	mvns	ip, r4, asr #21
   3a97c:	mvnsne	ip, r5, asr #21
   3a980:	beq	3a9e8 <fb_value_set_visit@@Base+0x298>
   3a984:	teq	r4, r5
   3a988:	teqeq	r0, r2
   3a98c:	beq	3a9a0 <fb_value_set_visit@@Base+0x250>
   3a990:	orrs	ip, r4, r0
   3a994:	moveq	r1, r3
   3a998:	moveq	r0, r2
   3a99c:	pop	{r4, r5, pc}
   3a9a0:	teq	r1, r3
   3a9a4:	movne	r1, #0
   3a9a8:	movne	r0, #0
   3a9ac:	popne	{r4, r5, pc}
   3a9b0:	lsrs	ip, r4, #21
   3a9b4:	bne	3a9c8 <fb_value_set_visit@@Base+0x278>
   3a9b8:	lsls	r0, r0, #1
   3a9bc:	adcs	r1, r1, r1
   3a9c0:	orrcs	r1, r1, #-2147483648	; 0x80000000
   3a9c4:	pop	{r4, r5, pc}
   3a9c8:	adds	r4, r4, #4194304	; 0x400000
   3a9cc:	addcc	r1, r1, #1048576	; 0x100000
   3a9d0:	popcc	{r4, r5, pc}
   3a9d4:	and	r5, r1, #-2147483648	; 0x80000000
   3a9d8:	orr	r1, r5, #2130706432	; 0x7f000000
   3a9dc:	orr	r1, r1, #15728640	; 0xf00000
   3a9e0:	mov	r0, #0
   3a9e4:	pop	{r4, r5, pc}
   3a9e8:	mvns	ip, r4, asr #21
   3a9ec:	movne	r1, r3
   3a9f0:	movne	r0, r2
   3a9f4:	mvnseq	ip, r5, asr #21
   3a9f8:	movne	r3, r1
   3a9fc:	movne	r2, r0
   3aa00:	orrs	r4, r0, r1, lsl #12
   3aa04:	orrseq	r5, r2, r3, lsl #12
   3aa08:	teqeq	r1, r3
   3aa0c:	orrne	r1, r1, #524288	; 0x80000
   3aa10:	pop	{r4, r5, pc}
   3aa14:	teq	r0, #0
   3aa18:	moveq	r1, #0
   3aa1c:	bxeq	lr
   3aa20:	push	{r4, r5, lr}
   3aa24:	mov	r4, #1024	; 0x400
   3aa28:	add	r4, r4, #50	; 0x32
   3aa2c:	mov	r5, #0
   3aa30:	mov	r1, #0
   3aa34:	b	3a8b0 <fb_value_set_visit@@Base+0x160>
   3aa38:	teq	r0, #0
   3aa3c:	moveq	r1, #0
   3aa40:	bxeq	lr
   3aa44:	push	{r4, r5, lr}
   3aa48:	mov	r4, #1024	; 0x400
   3aa4c:	add	r4, r4, #50	; 0x32
   3aa50:	ands	r5, r0, #-2147483648	; 0x80000000
   3aa54:	rsbmi	r0, r0, #0
   3aa58:	mov	r1, #0
   3aa5c:	b	3a8b0 <fb_value_set_visit@@Base+0x160>
   3aa60:	lsls	r2, r0, #1
   3aa64:	asr	r1, r2, #3
   3aa68:	rrx	r1, r1
   3aa6c:	lsl	r0, r2, #28
   3aa70:	andsne	r3, r2, #-16777216	; 0xff000000
   3aa74:	teqne	r3, #-16777216	; 0xff000000
   3aa78:	eorne	r1, r1, #939524096	; 0x38000000
   3aa7c:	bxne	lr
   3aa80:	teq	r2, #0
   3aa84:	teqne	r3, #-16777216	; 0xff000000
   3aa88:	bxeq	lr
   3aa8c:	push	{r4, r5, lr}
   3aa90:	mov	r4, #896	; 0x380
   3aa94:	and	r5, r1, #-2147483648	; 0x80000000
   3aa98:	bic	r1, r1, #-2147483648	; 0x80000000
   3aa9c:	b	3a8b0 <fb_value_set_visit@@Base+0x160>
   3aaa0:	orrs	r2, r0, r1
   3aaa4:	bxeq	lr
   3aaa8:	push	{r4, r5, lr}
   3aaac:	mov	r5, #0
   3aab0:	b	3aad0 <fb_value_set_visit@@Base+0x380>
   3aab4:	orrs	r2, r0, r1
   3aab8:	bxeq	lr
   3aabc:	push	{r4, r5, lr}
   3aac0:	ands	r5, r1, #-2147483648	; 0x80000000
   3aac4:	bpl	3aad0 <fb_value_set_visit@@Base+0x380>
   3aac8:	rsbs	r0, r0, #0
   3aacc:	rsc	r1, r1, #0
   3aad0:	mov	r4, #1024	; 0x400
   3aad4:	add	r4, r4, #50	; 0x32
   3aad8:	lsrs	ip, r1, #22
   3aadc:	beq	3a854 <fb_value_set_visit@@Base+0x104>
   3aae0:	mov	r2, #3
   3aae4:	lsrs	ip, ip, #3
   3aae8:	addne	r2, r2, #3
   3aaec:	lsrs	ip, ip, #3
   3aaf0:	addne	r2, r2, #3
   3aaf4:	add	r2, r2, ip, lsr #3
   3aaf8:	rsb	r3, r2, #32
   3aafc:	lsl	ip, r0, r3
   3ab00:	lsr	r0, r0, r2
   3ab04:	orr	r0, r0, r1, lsl r3
   3ab08:	lsr	r1, r1, r2
   3ab0c:	add	r4, r4, r2
   3ab10:	b	3a854 <fb_value_set_visit@@Base+0x104>
   3ab14:	eor	r0, r0, #-2147483648	; 0x80000000
   3ab18:	b	3ab20 <fb_value_set_visit@@Base+0x3d0>
   3ab1c:	eor	r1, r1, #-2147483648	; 0x80000000
   3ab20:	lsls	r2, r0, #1
   3ab24:	lslsne	r3, r1, #1
   3ab28:	teqne	r2, r3
   3ab2c:	mvnsne	ip, r2, asr #24
   3ab30:	mvnsne	ip, r3, asr #24
   3ab34:	beq	3ac2c <fb_value_set_visit@@Base+0x4dc>
   3ab38:	lsr	r2, r2, #24
   3ab3c:	rsbs	r3, r2, r3, lsr #24
   3ab40:	addgt	r2, r2, r3
   3ab44:	eorgt	r1, r0, r1
   3ab48:	eorgt	r0, r1, r0
   3ab4c:	eorgt	r1, r0, r1
   3ab50:	rsblt	r3, r3, #0
   3ab54:	cmp	r3, #25
   3ab58:	bxhi	lr
   3ab5c:	tst	r0, #-2147483648	; 0x80000000
   3ab60:	orr	r0, r0, #8388608	; 0x800000
   3ab64:	bic	r0, r0, #-16777216	; 0xff000000
   3ab68:	rsbne	r0, r0, #0
   3ab6c:	tst	r1, #-2147483648	; 0x80000000
   3ab70:	orr	r1, r1, #8388608	; 0x800000
   3ab74:	bic	r1, r1, #-16777216	; 0xff000000
   3ab78:	rsbne	r1, r1, #0
   3ab7c:	teq	r2, r3
   3ab80:	beq	3ac14 <fb_value_set_visit@@Base+0x4c4>
   3ab84:	sub	r2, r2, #1
   3ab88:	adds	r0, r0, r1, asr r3
   3ab8c:	rsb	r3, r3, #32
   3ab90:	lsl	r1, r1, r3
   3ab94:	and	r3, r0, #-2147483648	; 0x80000000
   3ab98:	bpl	3aba4 <fb_value_set_visit@@Base+0x454>
   3ab9c:	rsbs	r1, r1, #0
   3aba0:	rsc	r0, r0, #0
   3aba4:	cmp	r0, #8388608	; 0x800000
   3aba8:	bcc	3abdc <fb_value_set_visit@@Base+0x48c>
   3abac:	cmp	r0, #16777216	; 0x1000000
   3abb0:	bcc	3abc8 <fb_value_set_visit@@Base+0x478>
   3abb4:	lsrs	r0, r0, #1
   3abb8:	rrx	r1, r1
   3abbc:	add	r2, r2, #1
   3abc0:	cmp	r2, #254	; 0xfe
   3abc4:	bcs	3ac80 <fb_value_set_visit@@Base+0x530>
   3abc8:	cmp	r1, #-2147483648	; 0x80000000
   3abcc:	adc	r0, r0, r2, lsl #23
   3abd0:	biceq	r0, r0, #1
   3abd4:	orr	r0, r0, r3
   3abd8:	bx	lr
   3abdc:	lsls	r1, r1, #1
   3abe0:	adc	r0, r0, r0
   3abe4:	tst	r0, #8388608	; 0x800000
   3abe8:	sub	r2, r2, #1
   3abec:	bne	3abc8 <fb_value_set_visit@@Base+0x478>
   3abf0:	clz	ip, r0
   3abf4:	sub	ip, ip, #8
   3abf8:	subs	r2, r2, ip
   3abfc:	lsl	r0, r0, ip
   3ac00:	addge	r0, r0, r2, lsl #23
   3ac04:	rsblt	r2, r2, #0
   3ac08:	orrge	r0, r0, r3
   3ac0c:	orrlt	r0, r3, r0, lsr r2
   3ac10:	bx	lr
   3ac14:	teq	r2, #0
   3ac18:	eor	r1, r1, #8388608	; 0x800000
   3ac1c:	eoreq	r0, r0, #8388608	; 0x800000
   3ac20:	addeq	r2, r2, #1
   3ac24:	subne	r3, r3, #1
   3ac28:	b	3ab84 <fb_value_set_visit@@Base+0x434>
   3ac2c:	lsl	r3, r1, #1
   3ac30:	mvns	ip, r2, asr #24
   3ac34:	mvnsne	ip, r3, asr #24
   3ac38:	beq	3ac8c <fb_value_set_visit@@Base+0x53c>
   3ac3c:	teq	r2, r3
   3ac40:	beq	3ac50 <fb_value_set_visit@@Base+0x500>
   3ac44:	teq	r2, #0
   3ac48:	moveq	r0, r1
   3ac4c:	bx	lr
   3ac50:	teq	r0, r1
   3ac54:	movne	r0, #0
   3ac58:	bxne	lr
   3ac5c:	tst	r2, #-16777216	; 0xff000000
   3ac60:	bne	3ac70 <fb_value_set_visit@@Base+0x520>
   3ac64:	lsls	r0, r0, #1
   3ac68:	orrcs	r0, r0, #-2147483648	; 0x80000000
   3ac6c:	bx	lr
   3ac70:	adds	r2, r2, #33554432	; 0x2000000
   3ac74:	addcc	r0, r0, #8388608	; 0x800000
   3ac78:	bxcc	lr
   3ac7c:	and	r3, r0, #-2147483648	; 0x80000000
   3ac80:	orr	r0, r3, #2130706432	; 0x7f000000
   3ac84:	orr	r0, r0, #8388608	; 0x800000
   3ac88:	bx	lr
   3ac8c:	mvns	r2, r2, asr #24
   3ac90:	movne	r0, r1
   3ac94:	mvnseq	r3, r3, asr #24
   3ac98:	movne	r1, r0
   3ac9c:	lsls	r2, r0, #9
   3aca0:	lslseq	r3, r1, #9
   3aca4:	teqeq	r0, r1
   3aca8:	orrne	r0, r0, #4194304	; 0x400000
   3acac:	bx	lr
   3acb0:	mov	r3, #0
   3acb4:	b	3acc0 <fb_value_set_visit@@Base+0x570>
   3acb8:	ands	r3, r0, #-2147483648	; 0x80000000
   3acbc:	rsbmi	r0, r0, #0
   3acc0:	movs	ip, r0
   3acc4:	bxeq	lr
   3acc8:	orr	r3, r3, #1258291200	; 0x4b000000
   3accc:	mov	r1, r0
   3acd0:	mov	r0, #0
   3acd4:	b	3ad18 <fb_value_set_visit@@Base+0x5c8>
   3acd8:	orrs	r2, r0, r1
   3acdc:	bxeq	lr
   3ace0:	mov	r3, #0
   3ace4:	b	3ad00 <fb_value_set_visit@@Base+0x5b0>
   3ace8:	orrs	r2, r0, r1
   3acec:	bxeq	lr
   3acf0:	ands	r3, r1, #-2147483648	; 0x80000000
   3acf4:	bpl	3ad00 <fb_value_set_visit@@Base+0x5b0>
   3acf8:	rsbs	r0, r0, #0
   3acfc:	rsc	r1, r1, #0
   3ad00:	movs	ip, r1
   3ad04:	moveq	ip, r0
   3ad08:	moveq	r1, r0
   3ad0c:	moveq	r0, #0
   3ad10:	orr	r3, r3, #1526726656	; 0x5b000000
   3ad14:	subeq	r3, r3, #268435456	; 0x10000000
   3ad18:	sub	r3, r3, #8388608	; 0x800000
   3ad1c:	clz	r2, ip
   3ad20:	subs	r2, r2, #8
   3ad24:	sub	r3, r3, r2, lsl #23
   3ad28:	blt	3ad48 <fb_value_set_visit@@Base+0x5f8>
   3ad2c:	add	r3, r3, r1, lsl r2
   3ad30:	lsl	ip, r0, r2
   3ad34:	rsb	r2, r2, #32
   3ad38:	cmp	ip, #-2147483648	; 0x80000000
   3ad3c:	adc	r0, r3, r0, lsr r2
   3ad40:	biceq	r0, r0, #1
   3ad44:	bx	lr
   3ad48:	add	r2, r2, #32
   3ad4c:	lsl	ip, r1, r2
   3ad50:	rsb	r2, r2, #32
   3ad54:	orrs	r0, r0, ip, lsl #1
   3ad58:	adc	r0, r3, r1, lsr r2
   3ad5c:	biceq	r0, r0, ip, lsr #31
   3ad60:	bx	lr
   3ad64:	cmp	r3, #0
   3ad68:	cmpeq	r2, #0
   3ad6c:	bne	3ad84 <fb_value_set_visit@@Base+0x634>
   3ad70:	cmp	r1, #0
   3ad74:	cmpeq	r0, #0
   3ad78:	mvnne	r1, #0
   3ad7c:	mvnne	r0, #0
   3ad80:	b	3ada0 <fb_value_set_visit@@Base+0x650>
   3ad84:	sub	sp, sp, #8
   3ad88:	push	{sp, lr}
   3ad8c:	bl	3ae98 <fb_value_set_visit@@Base+0x748>
   3ad90:	ldr	lr, [sp, #4]
   3ad94:	add	sp, sp, #8
   3ad98:	pop	{r2, r3}
   3ad9c:	bx	lr
   3ada0:	push	{r1, lr}
   3ada4:	mov	r0, #8
   3ada8:	bl	13fb0 <raise@plt>
   3adac:	pop	{r1, pc}
   3adb0:	vmov	s15, r0
   3adb4:	vcmpe.f32	s15, #0.0
   3adb8:	vmrs	APSR_nzcv, fpscr
   3adbc:	bmi	3adc4 <fb_value_set_visit@@Base+0x674>
   3adc0:	b	3ae08 <fb_value_set_visit@@Base+0x6b8>
   3adc4:	push	{r4, lr}
   3adc8:	eor	r0, r0, #-2147483648	; 0x80000000
   3adcc:	bl	3ae08 <fb_value_set_visit@@Base+0x6b8>
   3add0:	rsbs	r0, r0, #0
   3add4:	rsc	r1, r1, #0
   3add8:	pop	{r4, pc}
   3addc:	vmov	d7, r0, r1
   3ade0:	vcmpe.f64	d7, #0.0
   3ade4:	vmrs	APSR_nzcv, fpscr
   3ade8:	bmi	3adf0 <fb_value_set_visit@@Base+0x6a0>
   3adec:	b	3ae50 <fb_value_set_visit@@Base+0x700>
   3adf0:	push	{r4, lr}
   3adf4:	eor	r1, r1, #-2147483648	; 0x80000000
   3adf8:	bl	3ae50 <fb_value_set_visit@@Base+0x700>
   3adfc:	rsbs	r0, r0, #0
   3ae00:	rsc	r1, r1, #0
   3ae04:	pop	{r4, pc}
   3ae08:	vmov	s15, r0
   3ae0c:	vldr	d6, [pc, #44]	; 3ae40 <fb_value_set_visit@@Base+0x6f0>
   3ae10:	vldr	d5, [pc, #48]	; 3ae48 <fb_value_set_visit@@Base+0x6f8>
   3ae14:	mov	r0, #0
   3ae18:	vcvt.f64.f32	d7, s15
   3ae1c:	vmul.f64	d6, d7, d6
   3ae20:	vcvt.u32.f64	s12, d6
   3ae24:	vcvt.f64.u32	d4, s12
   3ae28:	vmov	r1, s12
   3ae2c:	vmls.f64	d7, d4, d5
   3ae30:	vcvt.u32.f64	s14, d7
   3ae34:	vmov	r3, s14
   3ae38:	orr	r0, r0, r3
   3ae3c:	bx	lr
   3ae40:	andeq	r0, r0, r0
   3ae44:	ldclcc	0, cr0, [r0]
   3ae48:	andeq	r0, r0, r0
   3ae4c:	mvnsmi	r0, r0
   3ae50:	vmov	d7, r0, r1
   3ae54:	vldr	d6, [pc, #44]	; 3ae88 <fb_value_set_visit@@Base+0x738>
   3ae58:	vldr	d5, [pc, #48]	; 3ae90 <fb_value_set_visit@@Base+0x740>
   3ae5c:	mov	r0, #0
   3ae60:	vmul.f64	d6, d7, d6
   3ae64:	vcvt.u32.f64	s12, d6
   3ae68:	vcvt.f64.u32	d4, s12
   3ae6c:	vmov	r1, s12
   3ae70:	vmls.f64	d7, d4, d5
   3ae74:	vcvt.u32.f64	s14, d7
   3ae78:	vmov	r3, s14
   3ae7c:	orr	r0, r0, r3
   3ae80:	bx	lr
   3ae84:	nop			; (mov r0, r0)
   3ae88:	andeq	r0, r0, r0
   3ae8c:	ldclcc	0, cr0, [r0]
   3ae90:	andeq	r0, r0, r0
   3ae94:	mvnsmi	r0, r0
   3ae98:	cmp	r1, r3
   3ae9c:	push	{r4, r5, r6, r7, r8, r9, lr}
   3aea0:	cmpeq	r0, r2
   3aea4:	mov	r4, r0
   3aea8:	mov	r5, r1
   3aeac:	ldr	r9, [sp, #28]
   3aeb0:	movcc	r0, #0
   3aeb4:	movcc	r1, #0
   3aeb8:	bcc	3afb0 <fb_value_set_visit@@Base+0x860>
   3aebc:	cmp	r3, #0
   3aec0:	clzeq	ip, r2
   3aec4:	clzne	ip, r3
   3aec8:	addeq	ip, ip, #32
   3aecc:	cmp	r5, #0
   3aed0:	clzeq	r1, r4
   3aed4:	addeq	r1, r1, #32
   3aed8:	clzne	r1, r5
   3aedc:	sub	ip, ip, r1
   3aee0:	sub	lr, ip, #32
   3aee4:	lsl	r7, r3, ip
   3aee8:	rsb	r8, ip, #32
   3aeec:	orr	r7, r7, r2, lsl lr
   3aef0:	orr	r7, r7, r2, lsr r8
   3aef4:	lsl	r6, r2, ip
   3aef8:	cmp	r5, r7
   3aefc:	cmpeq	r4, r6
   3af00:	movcc	r0, #0
   3af04:	movcc	r1, #0
   3af08:	bcc	3af24 <fb_value_set_visit@@Base+0x7d4>
   3af0c:	mov	r3, #1
   3af10:	subs	r4, r4, r6
   3af14:	lsl	r1, r3, lr
   3af18:	lsl	r0, r3, ip
   3af1c:	orr	r1, r1, r3, lsr r8
   3af20:	sbc	r5, r5, r7
   3af24:	cmp	ip, #0
   3af28:	beq	3afb0 <fb_value_set_visit@@Base+0x860>
   3af2c:	lsrs	r3, r7, #1
   3af30:	rrx	r2, r6
   3af34:	mov	r6, ip
   3af38:	b	3af5c <fb_value_set_visit@@Base+0x80c>
   3af3c:	subs	r4, r4, r2
   3af40:	sbc	r5, r5, r3
   3af44:	adds	r4, r4, r4
   3af48:	adc	r5, r5, r5
   3af4c:	adds	r4, r4, #1
   3af50:	adc	r5, r5, #0
   3af54:	subs	r6, r6, #1
   3af58:	beq	3af78 <fb_value_set_visit@@Base+0x828>
   3af5c:	cmp	r5, r3
   3af60:	cmpeq	r4, r2
   3af64:	bcs	3af3c <fb_value_set_visit@@Base+0x7ec>
   3af68:	adds	r4, r4, r4
   3af6c:	adc	r5, r5, r5
   3af70:	subs	r6, r6, #1
   3af74:	bne	3af5c <fb_value_set_visit@@Base+0x80c>
   3af78:	lsr	r6, r4, ip
   3af7c:	lsr	r7, r5, ip
   3af80:	orr	r6, r6, r5, lsl r8
   3af84:	adds	r2, r0, r4
   3af88:	orr	r6, r6, r5, lsr lr
   3af8c:	adc	r3, r1, r5
   3af90:	lsl	r1, r7, ip
   3af94:	orr	r1, r1, r6, lsl lr
   3af98:	lsl	r0, r6, ip
   3af9c:	orr	r1, r1, r6, lsr r8
   3afa0:	subs	r0, r2, r0
   3afa4:	mov	r4, r6
   3afa8:	mov	r5, r7
   3afac:	sbc	r1, r3, r1
   3afb0:	cmp	r9, #0
   3afb4:	popeq	{r4, r5, r6, r7, r8, r9, pc}
   3afb8:	strd	r4, [r9]
   3afbc:	pop	{r4, r5, r6, r7, r8, r9, pc}

0003afc0 <__libc_csu_init@@Base>:
   3afc0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   3afc4:	mov	r7, r0
   3afc8:	ldr	r6, [pc, #72]	; 3b018 <__libc_csu_init@@Base+0x58>
   3afcc:	ldr	r5, [pc, #72]	; 3b01c <__libc_csu_init@@Base+0x5c>
   3afd0:	add	r6, pc, r6
   3afd4:	add	r5, pc, r5
   3afd8:	sub	r6, r6, r5
   3afdc:	mov	r8, r1
   3afe0:	mov	r9, r2
   3afe4:	bl	13f84 <calloc@plt-0x20>
   3afe8:	asrs	r6, r6, #2
   3afec:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   3aff0:	mov	r4, #0
   3aff4:	add	r4, r4, #1
   3aff8:	ldr	r3, [r5], #4
   3affc:	mov	r2, r9
   3b000:	mov	r1, r8
   3b004:	mov	r0, r7
   3b008:	blx	r3
   3b00c:	cmp	r6, r4
   3b010:	bne	3aff4 <__libc_csu_init@@Base+0x34>
   3b014:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   3b018:	andeq	fp, r2, r8, lsr pc
   3b01c:	andeq	fp, r2, r0, lsr pc

0003b020 <__libc_csu_fini@@Base>:
   3b020:	bx	lr

Disassembly of section .fini:

0003b024 <.fini>:
   3b024:	push	{r3, lr}
   3b028:	pop	{r3, pc}
