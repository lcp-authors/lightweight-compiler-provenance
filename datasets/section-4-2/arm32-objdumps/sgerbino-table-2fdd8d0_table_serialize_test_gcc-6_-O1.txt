
../repos/sgerbino-table-2fdd8d0/bin/table_serialize_test:     file format elf32-littlearm


Disassembly of section .init:

00011b4c <.init>:
   11b4c:	push	{r3, lr}
   11b50:	bl	11c74 <_start@@Base+0x3c>
   11b54:	pop	{r3, pc}

Disassembly of section .plt:

00011b58 <raise@plt-0x14>:
   11b58:	push	{lr}		; (str lr, [sp, #-4]!)
   11b5c:	ldr	lr, [pc, #4]	; 11b68 <raise@plt-0x4>
   11b60:	add	lr, pc, lr
   11b64:	ldr	pc, [lr, #8]!
   11b68:	muleq	r1, r8, r4

00011b6c <raise@plt>:
   11b6c:	add	ip, pc, #0, 12
   11b70:	add	ip, ip, #86016	; 0x15000
   11b74:	ldr	pc, [ip, #1176]!	; 0x498

00011b78 <strcmp@plt>:
   11b78:	add	ip, pc, #0, 12
   11b7c:	add	ip, ip, #86016	; 0x15000
   11b80:	ldr	pc, [ip, #1168]!	; 0x490

00011b84 <printf@plt>:
   11b84:	add	ip, pc, #0, 12
   11b88:	add	ip, ip, #86016	; 0x15000
   11b8c:	ldr	pc, [ip, #1160]!	; 0x488

00011b90 <free@plt>:
   11b90:	add	ip, pc, #0, 12
   11b94:	add	ip, ip, #86016	; 0x15000
   11b98:	ldr	pc, [ip, #1152]!	; 0x480

00011b9c <time@plt>:
   11b9c:	add	ip, pc, #0, 12
   11ba0:	add	ip, ip, #86016	; 0x15000
   11ba4:	ldr	pc, [ip, #1144]!	; 0x478

00011ba8 <realloc@plt>:
   11ba8:	add	ip, pc, #0, 12
   11bac:	add	ip, ip, #86016	; 0x15000
   11bb0:	ldr	pc, [ip, #1136]!	; 0x470

00011bb4 <strcpy@plt>:
   11bb4:	add	ip, pc, #0, 12
   11bb8:	add	ip, ip, #86016	; 0x15000
   11bbc:	ldr	pc, [ip, #1128]!	; 0x468

00011bc0 <malloc@plt>:
   11bc0:	add	ip, pc, #0, 12
   11bc4:	add	ip, ip, #86016	; 0x15000
   11bc8:	ldr	pc, [ip, #1120]!	; 0x460

00011bcc <__libc_start_main@plt>:
   11bcc:	add	ip, pc, #0, 12
   11bd0:	add	ip, ip, #86016	; 0x15000
   11bd4:	ldr	pc, [ip, #1112]!	; 0x458

00011bd8 <__gmon_start__@plt>:
   11bd8:	add	ip, pc, #0, 12
   11bdc:	add	ip, ip, #86016	; 0x15000
   11be0:	ldr	pc, [ip, #1104]!	; 0x450

00011be4 <strlen@plt>:
   11be4:	add	ip, pc, #0, 12
   11be8:	add	ip, ip, #86016	; 0x15000
   11bec:	ldr	pc, [ip, #1096]!	; 0x448

00011bf0 <srand@plt>:
   11bf0:	add	ip, pc, #0, 12
   11bf4:	add	ip, ip, #86016	; 0x15000
   11bf8:	ldr	pc, [ip, #1088]!	; 0x440

00011bfc <snprintf@plt>:
   11bfc:	add	ip, pc, #0, 12
   11c00:	add	ip, ip, #86016	; 0x15000
   11c04:	ldr	pc, [ip, #1080]!	; 0x438

00011c08 <__isoc99_sscanf@plt>:
   11c08:	add	ip, pc, #0, 12
   11c0c:	add	ip, ip, #86016	; 0x15000
   11c10:	ldr	pc, [ip, #1072]!	; 0x430

00011c14 <strncpy@plt>:
   11c14:	add	ip, pc, #0, 12
   11c18:	add	ip, ip, #86016	; 0x15000
   11c1c:	ldr	pc, [ip, #1064]!	; 0x428

00011c20 <rand@plt>:
   11c20:	add	ip, pc, #0, 12
   11c24:	add	ip, ip, #86016	; 0x15000
   11c28:	ldr	pc, [ip, #1056]!	; 0x420

00011c2c <abort@plt>:
   11c2c:	add	ip, pc, #0, 12
   11c30:	add	ip, ip, #86016	; 0x15000
   11c34:	ldr	pc, [ip, #1048]!	; 0x418

Disassembly of section .text:

00011c38 <_start@@Base>:
   11c38:	mov	fp, #0
   11c3c:	mov	lr, #0
   11c40:	pop	{r1}		; (ldr r1, [sp], #4)
   11c44:	mov	r2, sp
   11c48:	push	{r2}		; (str r2, [sp, #-4]!)
   11c4c:	push	{r0}		; (str r0, [sp, #-4]!)
   11c50:	ldr	ip, [pc, #16]	; 11c68 <_start@@Base+0x30>
   11c54:	push	{ip}		; (str ip, [sp, #-4]!)
   11c58:	ldr	r0, [pc, #12]	; 11c6c <_start@@Base+0x34>
   11c5c:	ldr	r3, [pc, #12]	; 11c70 <_start@@Base+0x38>
   11c60:	bl	11bcc <__libc_start_main@plt>
   11c64:	bl	11c2c <abort@plt>
   11c68:	andeq	r5, r1, r8, lsr #29
   11c6c:	andeq	r1, r1, r0, ror #26
   11c70:	andeq	r5, r1, r8, asr #28
   11c74:	ldr	r3, [pc, #20]	; 11c90 <_start@@Base+0x58>
   11c78:	ldr	r2, [pc, #20]	; 11c94 <_start@@Base+0x5c>
   11c7c:	add	r3, pc, r3
   11c80:	ldr	r2, [r3, r2]
   11c84:	cmp	r2, #0
   11c88:	bxeq	lr
   11c8c:	b	11bd8 <__gmon_start__@plt>
   11c90:	andeq	r5, r1, ip, ror r3
   11c94:	andeq	r0, r0, r0, asr r0
   11c98:	ldr	r3, [pc, #28]	; 11cbc <_start@@Base+0x84>
   11c9c:	ldr	r0, [pc, #28]	; 11cc0 <_start@@Base+0x88>
   11ca0:	sub	r3, r3, r0
   11ca4:	cmp	r3, #6
   11ca8:	bxls	lr
   11cac:	ldr	r3, [pc, #16]	; 11cc4 <_start@@Base+0x8c>
   11cb0:	cmp	r3, #0
   11cb4:	bxeq	lr
   11cb8:	bx	r3
   11cbc:	andeq	r7, r2, pc, asr r0
   11cc0:	andeq	r7, r2, ip, asr r0
   11cc4:	andeq	r0, r0, r0
   11cc8:	ldr	r1, [pc, #36]	; 11cf4 <_start@@Base+0xbc>
   11ccc:	ldr	r0, [pc, #36]	; 11cf8 <_start@@Base+0xc0>
   11cd0:	sub	r1, r1, r0
   11cd4:	asr	r1, r1, #2
   11cd8:	add	r1, r1, r1, lsr #31
   11cdc:	asrs	r1, r1, #1
   11ce0:	bxeq	lr
   11ce4:	ldr	r3, [pc, #16]	; 11cfc <_start@@Base+0xc4>
   11ce8:	cmp	r3, #0
   11cec:	bxeq	lr
   11cf0:	bx	r3
   11cf4:	andeq	r7, r2, ip, asr r0
   11cf8:	andeq	r7, r2, ip, asr r0
   11cfc:	andeq	r0, r0, r0
   11d00:	push	{r4, lr}
   11d04:	ldr	r4, [pc, #24]	; 11d24 <_start@@Base+0xec>
   11d08:	ldrb	r3, [r4]
   11d0c:	cmp	r3, #0
   11d10:	popne	{r4, pc}
   11d14:	bl	11c98 <_start@@Base+0x60>
   11d18:	mov	r3, #1
   11d1c:	strb	r3, [r4]
   11d20:	pop	{r4, pc}
   11d24:	andeq	r7, r2, ip, asr r0
   11d28:	ldr	r0, [pc, #40]	; 11d58 <_start@@Base+0x120>
   11d2c:	ldr	r3, [r0]
   11d30:	cmp	r3, #0
   11d34:	bne	11d3c <_start@@Base+0x104>
   11d38:	b	11cc8 <_start@@Base+0x90>
   11d3c:	ldr	r3, [pc, #24]	; 11d5c <_start@@Base+0x124>
   11d40:	cmp	r3, #0
   11d44:	beq	11d38 <_start@@Base+0x100>
   11d48:	push	{r4, lr}
   11d4c:	blx	r3
   11d50:	pop	{r4, lr}
   11d54:	b	11cc8 <_start@@Base+0x90>
   11d58:	andeq	r6, r2, r4, lsl pc
   11d5c:	andeq	r0, r0, r0

00011d60 <main@@Base>:
   11d60:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11d64:	vpush	{d8}
   11d68:	sub	sp, sp, #99328	; 0x18400
   11d6c:	sub	sp, sp, #1004	; 0x3ec
   11d70:	add	r0, sp, #99328	; 0x18400
   11d74:	add	r0, r0, #940	; 0x3ac
   11d78:	bl	11b9c <time@plt>
   11d7c:	bl	11bf0 <srand@plt>
   11d80:	bl	11c20 <rand@plt>
   11d84:	ldr	r3, [pc, #1988]	; 12550 <main@@Base+0x7f0>
   11d88:	smull	r2, r3, r3, r0
   11d8c:	asr	r5, r0, #31
   11d90:	rsb	r5, r5, r3, asr #5
   11d94:	mov	r3, #100	; 0x64
   11d98:	mul	r5, r3, r5
   11d9c:	sub	r5, r0, r5
   11da0:	add	r0, sp, #99328	; 0x18400
   11da4:	add	r0, r0, #944	; 0x3b0
   11da8:	bl	12570 <table_init@@Base>
   11dac:	mov	r2, #0
   11db0:	ldr	r1, [pc, #1948]	; 12554 <main@@Base+0x7f4>
   11db4:	add	r0, sp, #99328	; 0x18400
   11db8:	add	r0, r0, #944	; 0x3b0
   11dbc:	bl	12f78 <table_add_column@@Base>
   11dc0:	mov	r6, r0
   11dc4:	mov	r2, #21
   11dc8:	ldr	r1, [pc, #1928]	; 12558 <main@@Base+0x7f8>
   11dcc:	add	r0, sp, #99328	; 0x18400
   11dd0:	add	r0, r0, #944	; 0x3b0
   11dd4:	bl	12f78 <table_add_column@@Base>
   11dd8:	add	r3, r5, #100	; 0x64
   11ddc:	cmp	r3, #0
   11de0:	ble	11e5c <main@@Base+0xfc>
   11de4:	mov	r7, r0
   11de8:	mov	r5, r3
   11dec:	mov	r4, #0
   11df0:	ldr	r9, [pc, #1892]	; 1255c <main@@Base+0x7fc>
   11df4:	add	r3, sp, #12
   11df8:	str	r3, [sp, #4]
   11dfc:	mov	r8, #255	; 0xff
   11e00:	mov	r3, r4
   11e04:	mov	r2, r9
   11e08:	mov	r1, r8
   11e0c:	ldr	r0, [sp, #4]
   11e10:	bl	11bfc <snprintf@plt>
   11e14:	add	r0, sp, #99328	; 0x18400
   11e18:	add	r0, r0, #944	; 0x3b0
   11e1c:	bl	13cd8 <table_add_row@@Base>
   11e20:	mov	r3, r4
   11e24:	mov	r2, r6
   11e28:	mov	r1, r4
   11e2c:	add	r0, sp, #99328	; 0x18400
   11e30:	add	r0, r0, #944	; 0x3b0
   11e34:	bl	14534 <table_set_int@@Base>
   11e38:	ldr	r3, [sp, #4]
   11e3c:	mov	r2, r7
   11e40:	mov	r1, r4
   11e44:	add	r0, sp, #99328	; 0x18400
   11e48:	add	r0, r0, #944	; 0x3b0
   11e4c:	bl	14800 <table_set_string@@Base>
   11e50:	add	r4, r4, #1
   11e54:	cmp	r5, r4
   11e58:	bne	11e00 <main@@Base+0xa0>
   11e5c:	ldr	r4, [pc, #1788]	; 12560 <main@@Base+0x800>
   11e60:	add	r3, sp, #268	; 0x10c
   11e64:	str	r3, [sp, #4]
   11e68:	mov	r2, r4
   11e6c:	mov	r1, r3
   11e70:	add	r0, sp, #99328	; 0x18400
   11e74:	add	r0, r0, #944	; 0x3b0
   11e78:	bl	14888 <table_serialize@@Base>
   11e7c:	mov	r1, r4
   11e80:	ldr	r0, [sp, #4]
   11e84:	bl	14cdc <table_deserialize@@Base>
   11e88:	mov	r7, r0
   11e8c:	add	r0, sp, #99328	; 0x18400
   11e90:	add	r0, r0, #944	; 0x3b0
   11e94:	bl	13cd0 <table_get_row_length@@Base>
   11e98:	mov	sl, r0
   11e9c:	mov	r0, r7
   11ea0:	bl	13cd0 <table_get_row_length@@Base>
   11ea4:	cmp	sl, r0
   11ea8:	beq	124f4 <main@@Base+0x794>
   11eac:	mov	r2, r0
   11eb0:	mov	r1, sl
   11eb4:	ldr	r0, [pc, #1704]	; 12564 <main@@Base+0x804>
   11eb8:	bl	11b84 <printf@plt>
   11ebc:	add	r0, sp, #99328	; 0x18400
   11ec0:	add	r0, r0, #944	; 0x3b0
   11ec4:	bl	12efc <table_get_column_length@@Base>
   11ec8:	mov	r6, r0
   11ecc:	mov	r0, r7
   11ed0:	bl	12efc <table_get_column_length@@Base>
   11ed4:	cmp	r6, r0
   11ed8:	mvneq	fp, #0
   11edc:	beq	12528 <main@@Base+0x7c8>
   11ee0:	b	12514 <main@@Base+0x7b4>
   11ee4:	mov	r2, r4
   11ee8:	mov	r1, r5
   11eec:	add	r0, sp, #99328	; 0x18400
   11ef0:	add	r0, r0, #944	; 0x3b0
   11ef4:	bl	13ae8 <table_get_bool@@Base>
   11ef8:	mov	r8, r0
   11efc:	mov	r2, r4
   11f00:	mov	r1, r5
   11f04:	mov	r0, r7
   11f08:	bl	13ae8 <table_get_bool@@Base>
   11f0c:	subs	r0, r8, r0
   11f10:	movne	r0, #1
   11f14:	cmp	r0, #0
   11f18:	bne	124ac <main@@Base+0x74c>
   11f1c:	add	r4, r4, #1
   11f20:	cmp	r4, r6
   11f24:	beq	124c0 <main@@Base+0x760>
   11f28:	mov	r1, r4
   11f2c:	add	r0, sp, #99328	; 0x18400
   11f30:	add	r0, r0, #944	; 0x3b0
   11f34:	bl	12f64 <table_get_column_data_type@@Base>
   11f38:	cmp	r0, #23
   11f3c:	ldrls	pc, [pc, r0, lsl #2]
   11f40:	b	124a4 <main@@Base+0x744>
   11f44:	andeq	r1, r1, r4, lsr #31
   11f48:	ldrdeq	r1, [r1], -r8
   11f4c:	andeq	r2, r1, ip
   11f50:	andeq	r2, r1, r0, asr #32
   11f54:	andeq	r2, r1, r4, ror r0
   11f58:	andeq	r2, r1, r8, lsr #1
   11f5c:	ldrdeq	r2, [r1], -ip
   11f60:	andeq	r2, r1, r0, lsl r1
   11f64:	andeq	r2, r1, r4, asr #2
   11f68:	andeq	r2, r1, r4, lsl #3
   11f6c:	andeq	r2, r1, r4, asr #3
   11f70:	strdeq	r2, [r1], -r8
   11f74:	andeq	r2, r1, ip, lsr #4
   11f78:	andeq	r2, r1, r0, ror #4
   11f7c:	muleq	r1, r4, r2
   11f80:	ldrdeq	r2, [r1], -r4
   11f84:	andeq	r2, r1, r4, lsl r3
   11f88:	andeq	r2, r1, r0, asr r3
   11f8c:	andeq	r2, r1, ip, lsl #7
   11f90:	andeq	r2, r1, r8, lsl #8
   11f94:	andeq	r2, r1, ip, lsr r4
   11f98:	andeq	r2, r1, r8, asr #7
   11f9c:	andeq	r1, r1, r4, ror #29
   11fa0:	andeq	r2, r1, r0, ror r4
   11fa4:	mov	r2, r4
   11fa8:	mov	r1, r5
   11fac:	add	r0, sp, #99328	; 0x18400
   11fb0:	add	r0, r0, #944	; 0x3b0
   11fb4:	bl	13af8 <table_get_int@@Base>
   11fb8:	mov	r8, r0
   11fbc:	mov	r2, r4
   11fc0:	mov	r1, r5
   11fc4:	mov	r0, r7
   11fc8:	bl	13af8 <table_get_int@@Base>
   11fcc:	subs	r0, r8, r0
   11fd0:	movne	r0, #1
   11fd4:	b	11f14 <main@@Base+0x1b4>
   11fd8:	mov	r2, r4
   11fdc:	mov	r1, r5
   11fe0:	add	r0, sp, #99328	; 0x18400
   11fe4:	add	r0, r0, #944	; 0x3b0
   11fe8:	bl	13b08 <table_get_uint@@Base>
   11fec:	mov	r8, r0
   11ff0:	mov	r2, r4
   11ff4:	mov	r1, r5
   11ff8:	mov	r0, r7
   11ffc:	bl	13b08 <table_get_uint@@Base>
   12000:	subs	r0, r8, r0
   12004:	movne	r0, #1
   12008:	b	11f14 <main@@Base+0x1b4>
   1200c:	mov	r2, r4
   12010:	mov	r1, r5
   12014:	add	r0, sp, #99328	; 0x18400
   12018:	add	r0, r0, #944	; 0x3b0
   1201c:	bl	13b18 <table_get_int8@@Base>
   12020:	mov	r8, r0
   12024:	mov	r2, r4
   12028:	mov	r1, r5
   1202c:	mov	r0, r7
   12030:	bl	13b18 <table_get_int8@@Base>
   12034:	subs	r0, r8, r0
   12038:	movne	r0, #1
   1203c:	b	11f14 <main@@Base+0x1b4>
   12040:	mov	r2, r4
   12044:	mov	r1, r5
   12048:	add	r0, sp, #99328	; 0x18400
   1204c:	add	r0, r0, #944	; 0x3b0
   12050:	bl	13b28 <table_get_uint8@@Base>
   12054:	mov	r8, r0
   12058:	mov	r2, r4
   1205c:	mov	r1, r5
   12060:	mov	r0, r7
   12064:	bl	13b28 <table_get_uint8@@Base>
   12068:	subs	r0, r8, r0
   1206c:	movne	r0, #1
   12070:	b	11f14 <main@@Base+0x1b4>
   12074:	mov	r2, r4
   12078:	mov	r1, r5
   1207c:	add	r0, sp, #99328	; 0x18400
   12080:	add	r0, r0, #944	; 0x3b0
   12084:	bl	13b38 <table_get_int16@@Base>
   12088:	mov	r8, r0
   1208c:	mov	r2, r4
   12090:	mov	r1, r5
   12094:	mov	r0, r7
   12098:	bl	13b38 <table_get_int16@@Base>
   1209c:	subs	r0, r8, r0
   120a0:	movne	r0, #1
   120a4:	b	11f14 <main@@Base+0x1b4>
   120a8:	mov	r2, r4
   120ac:	mov	r1, r5
   120b0:	add	r0, sp, #99328	; 0x18400
   120b4:	add	r0, r0, #944	; 0x3b0
   120b8:	bl	13b48 <table_get_uint16@@Base>
   120bc:	mov	r8, r0
   120c0:	mov	r2, r4
   120c4:	mov	r1, r5
   120c8:	mov	r0, r7
   120cc:	bl	13b48 <table_get_uint16@@Base>
   120d0:	subs	r0, r8, r0
   120d4:	movne	r0, #1
   120d8:	b	11f14 <main@@Base+0x1b4>
   120dc:	mov	r2, r4
   120e0:	mov	r1, r5
   120e4:	add	r0, sp, #99328	; 0x18400
   120e8:	add	r0, r0, #944	; 0x3b0
   120ec:	bl	13b58 <table_get_int32@@Base>
   120f0:	mov	r8, r0
   120f4:	mov	r2, r4
   120f8:	mov	r1, r5
   120fc:	mov	r0, r7
   12100:	bl	13b58 <table_get_int32@@Base>
   12104:	subs	r0, r8, r0
   12108:	movne	r0, #1
   1210c:	b	11f14 <main@@Base+0x1b4>
   12110:	mov	r2, r4
   12114:	mov	r1, r5
   12118:	add	r0, sp, #99328	; 0x18400
   1211c:	add	r0, r0, #944	; 0x3b0
   12120:	bl	13b68 <table_get_uint32@@Base>
   12124:	mov	r8, r0
   12128:	mov	r2, r4
   1212c:	mov	r1, r5
   12130:	mov	r0, r7
   12134:	bl	13b68 <table_get_uint32@@Base>
   12138:	subs	r0, r8, r0
   1213c:	movne	r0, #1
   12140:	b	11f14 <main@@Base+0x1b4>
   12144:	mov	r2, r4
   12148:	mov	r1, r5
   1214c:	add	r0, sp, #99328	; 0x18400
   12150:	add	r0, r0, #944	; 0x3b0
   12154:	bl	13b78 <table_get_int64@@Base>
   12158:	mov	r8, r0
   1215c:	mov	r9, r1
   12160:	mov	r2, r4
   12164:	mov	r1, r5
   12168:	mov	r0, r7
   1216c:	bl	13b78 <table_get_int64@@Base>
   12170:	cmp	r9, r1
   12174:	cmpeq	r8, r0
   12178:	movne	r0, #1
   1217c:	moveq	r0, #0
   12180:	b	11f14 <main@@Base+0x1b4>
   12184:	mov	r2, r4
   12188:	mov	r1, r5
   1218c:	add	r0, sp, #99328	; 0x18400
   12190:	add	r0, r0, #944	; 0x3b0
   12194:	bl	13b88 <table_get_uint64@@Base>
   12198:	mov	r8, r0
   1219c:	mov	r9, r1
   121a0:	mov	r2, r4
   121a4:	mov	r1, r5
   121a8:	mov	r0, r7
   121ac:	bl	13b88 <table_get_uint64@@Base>
   121b0:	cmp	r9, r1
   121b4:	cmpeq	r8, r0
   121b8:	movne	r0, #1
   121bc:	moveq	r0, #0
   121c0:	b	11f14 <main@@Base+0x1b4>
   121c4:	mov	r2, r4
   121c8:	mov	r1, r5
   121cc:	add	r0, sp, #99328	; 0x18400
   121d0:	add	r0, r0, #944	; 0x3b0
   121d4:	bl	13b98 <table_get_short@@Base>
   121d8:	mov	r8, r0
   121dc:	mov	r2, r4
   121e0:	mov	r1, r5
   121e4:	mov	r0, r7
   121e8:	bl	13b98 <table_get_short@@Base>
   121ec:	subs	r0, r8, r0
   121f0:	movne	r0, #1
   121f4:	b	11f14 <main@@Base+0x1b4>
   121f8:	mov	r2, r4
   121fc:	mov	r1, r5
   12200:	add	r0, sp, #99328	; 0x18400
   12204:	add	r0, r0, #944	; 0x3b0
   12208:	bl	13ba8 <table_get_ushort@@Base>
   1220c:	mov	r8, r0
   12210:	mov	r2, r4
   12214:	mov	r1, r5
   12218:	mov	r0, r7
   1221c:	bl	13ba8 <table_get_ushort@@Base>
   12220:	subs	r0, r8, r0
   12224:	movne	r0, #1
   12228:	b	11f14 <main@@Base+0x1b4>
   1222c:	mov	r2, r4
   12230:	mov	r1, r5
   12234:	add	r0, sp, #99328	; 0x18400
   12238:	add	r0, r0, #944	; 0x3b0
   1223c:	bl	13bb8 <table_get_long@@Base>
   12240:	mov	r8, r0
   12244:	mov	r2, r4
   12248:	mov	r1, r5
   1224c:	mov	r0, r7
   12250:	bl	13bb8 <table_get_long@@Base>
   12254:	subs	r0, r8, r0
   12258:	movne	r0, #1
   1225c:	b	11f14 <main@@Base+0x1b4>
   12260:	mov	r2, r4
   12264:	mov	r1, r5
   12268:	add	r0, sp, #99328	; 0x18400
   1226c:	add	r0, r0, #944	; 0x3b0
   12270:	bl	13bc8 <table_get_ulong@@Base>
   12274:	mov	r8, r0
   12278:	mov	r2, r4
   1227c:	mov	r1, r5
   12280:	mov	r0, r7
   12284:	bl	13bc8 <table_get_ulong@@Base>
   12288:	subs	r0, r8, r0
   1228c:	movne	r0, #1
   12290:	b	11f14 <main@@Base+0x1b4>
   12294:	mov	r2, r4
   12298:	mov	r1, r5
   1229c:	add	r0, sp, #99328	; 0x18400
   122a0:	add	r0, r0, #944	; 0x3b0
   122a4:	bl	13bd8 <table_get_llong@@Base>
   122a8:	mov	r8, r0
   122ac:	mov	r9, r1
   122b0:	mov	r2, r4
   122b4:	mov	r1, r5
   122b8:	mov	r0, r7
   122bc:	bl	13bd8 <table_get_llong@@Base>
   122c0:	cmp	r9, r1
   122c4:	cmpeq	r8, r0
   122c8:	movne	r0, #1
   122cc:	moveq	r0, #0
   122d0:	b	11f14 <main@@Base+0x1b4>
   122d4:	mov	r2, r4
   122d8:	mov	r1, r5
   122dc:	add	r0, sp, #99328	; 0x18400
   122e0:	add	r0, r0, #944	; 0x3b0
   122e4:	bl	13be8 <table_get_ullong@@Base>
   122e8:	mov	r8, r0
   122ec:	mov	r9, r1
   122f0:	mov	r2, r4
   122f4:	mov	r1, r5
   122f8:	mov	r0, r7
   122fc:	bl	13be8 <table_get_ullong@@Base>
   12300:	cmp	r9, r1
   12304:	cmpeq	r8, r0
   12308:	movne	r0, #1
   1230c:	moveq	r0, #0
   12310:	b	11f14 <main@@Base+0x1b4>
   12314:	mov	r2, r4
   12318:	mov	r1, r5
   1231c:	add	r0, sp, #99328	; 0x18400
   12320:	add	r0, r0, #944	; 0x3b0
   12324:	bl	13bf8 <table_get_float@@Base>
   12328:	vmov.f32	s16, s0
   1232c:	mov	r2, r4
   12330:	mov	r1, r5
   12334:	mov	r0, r7
   12338:	bl	13bf8 <table_get_float@@Base>
   1233c:	vcmp.f32	s16, s0
   12340:	vmrs	APSR_nzcv, fpscr
   12344:	movne	r0, #1
   12348:	moveq	r0, #0
   1234c:	b	11f14 <main@@Base+0x1b4>
   12350:	mov	r2, r4
   12354:	mov	r1, r5
   12358:	add	r0, sp, #99328	; 0x18400
   1235c:	add	r0, r0, #944	; 0x3b0
   12360:	bl	13c08 <table_get_double@@Base>
   12364:	vmov.f64	d8, d0
   12368:	mov	r2, r4
   1236c:	mov	r1, r5
   12370:	mov	r0, r7
   12374:	bl	13c08 <table_get_double@@Base>
   12378:	vcmp.f64	d8, d0
   1237c:	vmrs	APSR_nzcv, fpscr
   12380:	movne	r0, #1
   12384:	moveq	r0, #0
   12388:	b	11f14 <main@@Base+0x1b4>
   1238c:	mov	r2, r4
   12390:	mov	r1, r5
   12394:	add	r0, sp, #99328	; 0x18400
   12398:	add	r0, r0, #944	; 0x3b0
   1239c:	bl	13c18 <table_get_ldouble@@Base>
   123a0:	vmov.f64	d8, d0
   123a4:	mov	r2, r4
   123a8:	mov	r1, r5
   123ac:	mov	r0, r7
   123b0:	bl	13c18 <table_get_ldouble@@Base>
   123b4:	vcmp.f64	d8, d0
   123b8:	vmrs	APSR_nzcv, fpscr
   123bc:	movne	r0, #1
   123c0:	moveq	r0, #0
   123c4:	b	11f14 <main@@Base+0x1b4>
   123c8:	mov	r2, r4
   123cc:	mov	r1, r5
   123d0:	add	r0, sp, #99328	; 0x18400
   123d4:	add	r0, r0, #944	; 0x3b0
   123d8:	bl	13c48 <table_get_string@@Base>
   123dc:	mov	r8, r0
   123e0:	mov	r2, r4
   123e4:	mov	r1, r5
   123e8:	mov	r0, r7
   123ec:	bl	13c48 <table_get_string@@Base>
   123f0:	mov	r1, r0
   123f4:	mov	r0, r8
   123f8:	bl	11b78 <strcmp@plt>
   123fc:	adds	r0, r0, #0
   12400:	movne	r0, #1
   12404:	b	11f14 <main@@Base+0x1b4>
   12408:	mov	r2, r4
   1240c:	mov	r1, r5
   12410:	add	r0, sp, #99328	; 0x18400
   12414:	add	r0, r0, #944	; 0x3b0
   12418:	bl	13c28 <table_get_char@@Base>
   1241c:	mov	r8, r0
   12420:	mov	r2, r4
   12424:	mov	r1, r5
   12428:	mov	r0, r7
   1242c:	bl	13c28 <table_get_char@@Base>
   12430:	subs	r0, r8, r0
   12434:	movne	r0, #1
   12438:	b	11f14 <main@@Base+0x1b4>
   1243c:	mov	r2, r4
   12440:	mov	r1, r5
   12444:	add	r0, sp, #99328	; 0x18400
   12448:	add	r0, r0, #944	; 0x3b0
   1244c:	bl	13c38 <table_get_uchar@@Base>
   12450:	mov	r8, r0
   12454:	mov	r2, r4
   12458:	mov	r1, r5
   1245c:	mov	r0, r7
   12460:	bl	13c38 <table_get_uchar@@Base>
   12464:	subs	r0, r8, r0
   12468:	movne	r0, #1
   1246c:	b	11f14 <main@@Base+0x1b4>
   12470:	mov	r2, r4
   12474:	mov	r1, r5
   12478:	add	r0, sp, #99328	; 0x18400
   1247c:	add	r0, r0, #944	; 0x3b0
   12480:	bl	13c54 <table_get_ptr@@Base>
   12484:	mov	r8, r0
   12488:	mov	r2, r4
   1248c:	mov	r1, r5
   12490:	mov	r0, r7
   12494:	bl	13c54 <table_get_ptr@@Base>
   12498:	subs	r0, r8, r0
   1249c:	movne	r0, #1
   124a0:	b	11f14 <main@@Base+0x1b4>
   124a4:	mov	r0, #0
   124a8:	b	11f14 <main@@Base+0x1b4>
   124ac:	mov	r2, r4
   124b0:	mov	r1, r5
   124b4:	ldr	r0, [pc, #172]	; 12568 <main@@Base+0x808>
   124b8:	bl	11b84 <printf@plt>
   124bc:	mvn	fp, #0
   124c0:	add	r5, r5, #1
   124c4:	cmp	sl, r5
   124c8:	beq	12528 <main@@Base+0x7c8>
   124cc:	cmp	r6, #0
   124d0:	movgt	r4, #0
   124d4:	bgt	11f28 <main@@Base+0x1c8>
   124d8:	b	124c0 <main@@Base+0x760>
   124dc:	cmp	sl, #0
   124e0:	movle	fp, #0
   124e4:	ble	12528 <main@@Base+0x7c8>
   124e8:	mov	fp, #0
   124ec:	mov	r5, fp
   124f0:	b	124cc <main@@Base+0x76c>
   124f4:	add	r0, sp, #99328	; 0x18400
   124f8:	add	r0, r0, #944	; 0x3b0
   124fc:	bl	12efc <table_get_column_length@@Base>
   12500:	mov	r6, r0
   12504:	mov	r0, r7
   12508:	bl	12efc <table_get_column_length@@Base>
   1250c:	cmp	r6, r0
   12510:	beq	124dc <main@@Base+0x77c>
   12514:	mov	r2, r0
   12518:	mov	r1, r6
   1251c:	ldr	r0, [pc, #72]	; 1256c <main@@Base+0x80c>
   12520:	bl	11b84 <printf@plt>
   12524:	mvn	fp, #0
   12528:	add	r0, sp, #99328	; 0x18400
   1252c:	add	r0, r0, #944	; 0x3b0
   12530:	bl	125d4 <table_destroy@@Base>
   12534:	mov	r0, r7
   12538:	bl	126a0 <table_delete@@Base>
   1253c:	mov	r0, fp
   12540:	add	sp, sp, #99328	; 0x18400
   12544:	add	sp, sp, #1004	; 0x3ec
   12548:	vpop	{d8}
   1254c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12550:	mvnpl	r8, pc, lsl r5
   12554:			; <UNDEFINED> instruction: 0x00015eb8
   12558:			; <UNDEFINED> instruction: 0x00015ebc
   1255c:	strdeq	r5, [r1], -ip
   12560:	andeq	r8, r1, r0, lsr #13
   12564:	andeq	r5, r1, r4, asr #29
   12568:	andeq	r5, r1, r0, asr #30
   1256c:	andeq	r5, r1, r0, lsl #30

00012570 <table_init@@Base>:
   12570:	mov	r3, #0
   12574:	str	r3, [r0]
   12578:	str	r3, [r0, #4]
   1257c:	str	r3, [r0, #12]
   12580:	mov	r2, #10
   12584:	str	r2, [r0, #8]
   12588:	str	r3, [r0, #16]
   1258c:	str	r3, [r0, #20]
   12590:	str	r3, [r0, #28]
   12594:	mov	r1, #20
   12598:	str	r1, [r0, #24]
   1259c:	str	r3, [r0, #36]	; 0x24
   125a0:	str	r3, [r0, #40]	; 0x28
   125a4:	str	r3, [r0, #44]	; 0x2c
   125a8:	str	r3, [r0, #32]
   125ac:	str	r3, [r0, #52]	; 0x34
   125b0:	str	r2, [r0, #48]	; 0x30
   125b4:	bx	lr

000125b8 <table_new@@Base>:
   125b8:	push	{r4, lr}
   125bc:	mov	r0, #56	; 0x38
   125c0:	bl	11bc0 <malloc@plt>
   125c4:	mov	r4, r0
   125c8:	bl	12570 <table_init@@Base>
   125cc:	mov	r0, r4
   125d0:	pop	{r4, pc}

000125d4 <table_destroy@@Base>:
   125d4:	push	{r4, r5, r6, lr}
   125d8:	subs	r5, r0, #0
   125dc:	popeq	{r4, r5, r6, pc}
   125e0:	mov	r3, #64	; 0x40
   125e4:	mvn	r2, #0
   125e8:	mov	r1, r2
   125ec:	mov	r0, r5
   125f0:	bl	12e0c <table_notify@@Base>
   125f4:	mov	r0, r5
   125f8:	bl	13cd0 <table_get_row_length@@Base>
   125fc:	subs	r6, r0, #0
   12600:	ble	12620 <table_destroy@@Base+0x4c>
   12604:	mov	r4, #0
   12608:	mov	r1, r4
   1260c:	mov	r0, r5
   12610:	bl	13c80 <table_row_destroy@@Base>
   12614:	add	r4, r4, #1
   12618:	cmp	r6, r4
   1261c:	bne	12608 <table_destroy@@Base+0x34>
   12620:	ldr	r0, [r5, #16]
   12624:	cmp	r0, #0
   12628:	beq	12630 <table_destroy@@Base+0x5c>
   1262c:	bl	11b90 <free@plt>
   12630:	mov	r0, r5
   12634:	bl	12efc <table_get_column_length@@Base>
   12638:	subs	r6, r0, #0
   1263c:	ble	1265c <table_destroy@@Base+0x88>
   12640:	mov	r4, #0
   12644:	mov	r1, r4
   12648:	mov	r0, r5
   1264c:	bl	12edc <table_column_destroy@@Base>
   12650:	add	r4, r4, #1
   12654:	cmp	r6, r4
   12658:	bne	12644 <table_destroy@@Base+0x70>
   1265c:	ldr	r0, [r5]
   12660:	cmp	r0, #0
   12664:	beq	1266c <table_destroy@@Base+0x98>
   12668:	bl	11b90 <free@plt>
   1266c:	ldr	r0, [r5, #36]	; 0x24
   12670:	cmp	r0, #0
   12674:	beq	1267c <table_destroy@@Base+0xa8>
   12678:	bl	11b90 <free@plt>
   1267c:	ldr	r0, [r5, #40]	; 0x28
   12680:	cmp	r0, #0
   12684:	beq	1268c <table_destroy@@Base+0xb8>
   12688:	bl	11b90 <free@plt>
   1268c:	ldr	r0, [r5, #44]	; 0x2c
   12690:	cmp	r0, #0
   12694:	popeq	{r4, r5, r6, pc}
   12698:	bl	11b90 <free@plt>
   1269c:	pop	{r4, r5, r6, pc}

000126a0 <table_delete@@Base>:
   126a0:	push	{r4, lr}
   126a4:	mov	r4, r0
   126a8:	bl	125d4 <table_destroy@@Base>
   126ac:	mov	r0, r4
   126b0:	bl	11b90 <free@plt>
   126b4:	pop	{r4, pc}

000126b8 <table_dupe@@Base>:
   126b8:	push	{r4, r5, r6, r7, r8, r9, lr}
   126bc:	sub	sp, sp, #20
   126c0:	mov	r6, r0
   126c4:	bl	13cd0 <table_get_row_length@@Base>
   126c8:	mov	r9, r0
   126cc:	mov	r0, r6
   126d0:	bl	12efc <table_get_column_length@@Base>
   126d4:	mov	r7, r0
   126d8:	bl	125b8 <table_new@@Base>
   126dc:	mov	r8, r0
   126e0:	cmp	r7, #0
   126e4:	ble	12724 <table_dupe@@Base+0x6c>
   126e8:	mov	r4, #0
   126ec:	mov	r1, r4
   126f0:	mov	r0, r6
   126f4:	bl	13208 <table_get_column_name@@Base>
   126f8:	mov	r5, r0
   126fc:	mov	r1, r4
   12700:	mov	r0, r6
   12704:	bl	12f64 <table_get_column_data_type@@Base>
   12708:	mov	r2, r0
   1270c:	mov	r1, r5
   12710:	mov	r0, r8
   12714:	bl	12f78 <table_add_column@@Base>
   12718:	add	r4, r4, #1
   1271c:	cmp	r7, r4
   12720:	bne	126ec <table_dupe@@Base+0x34>
   12724:	cmp	r9, #0
   12728:	ble	12b90 <table_dupe@@Base+0x4d8>
   1272c:	mov	r5, #0
   12730:	b	12b78 <table_dupe@@Base+0x4c0>
   12734:	mov	r2, r4
   12738:	mov	r1, r5
   1273c:	mov	r0, r6
   12740:	bl	13af8 <table_get_int@@Base>
   12744:	mov	r3, r0
   12748:	mov	r2, r4
   1274c:	mov	r1, r5
   12750:	mov	r0, r8
   12754:	bl	14534 <table_set_int@@Base>
   12758:	add	r4, r4, #1
   1275c:	cmp	r7, r4
   12760:	beq	12b6c <table_dupe@@Base+0x4b4>
   12764:	mov	r1, r4
   12768:	mov	r0, r6
   1276c:	bl	12f64 <table_get_column_data_type@@Base>
   12770:	cmp	r0, #23
   12774:	ldrls	pc, [pc, r0, lsl #2]
   12778:	b	12758 <table_dupe@@Base+0xa0>
   1277c:	andeq	r2, r1, r4, lsr r7
   12780:	ldrdeq	r2, [r1], -ip
   12784:	andeq	r2, r1, r4, lsl #16
   12788:	andeq	r2, r1, ip, lsr #16
   1278c:	andeq	r2, r1, r4, asr r8
   12790:	andeq	r2, r1, ip, ror r8
   12794:	andeq	r2, r1, r4, lsr #17
   12798:	andeq	r2, r1, ip, asr #17
   1279c:	strdeq	r2, [r1], -r4
   127a0:	andeq	r2, r1, ip, lsl r9
   127a4:	andeq	r2, r1, r4, asr #18
   127a8:	andeq	r2, r1, ip, ror #18
   127ac:	muleq	r1, r4, r9
   127b0:			; <UNDEFINED> instruction: 0x000129bc
   127b4:	andeq	r2, r1, r4, ror #19
   127b8:	andeq	r2, r1, ip, lsl #20
   127bc:	andeq	r2, r1, ip, asr sl
   127c0:	andeq	r2, r1, r0, lsl #21
   127c4:	andeq	r2, r1, r4, lsr #21
   127c8:	strdeq	r2, [r1], -r0
   127cc:	andeq	r2, r1, r8, lsl fp
   127d0:	andeq	r2, r1, r4, lsr sl
   127d4:	andeq	r2, r1, r8, asr #21
   127d8:	andeq	r2, r1, r0, asr #22
   127dc:	mov	r2, r4
   127e0:	mov	r1, r5
   127e4:	mov	r0, r6
   127e8:	bl	13b08 <table_get_uint@@Base>
   127ec:	mov	r3, r0
   127f0:	mov	r2, r4
   127f4:	mov	r1, r5
   127f8:	mov	r0, r8
   127fc:	bl	1455c <table_set_uint@@Base>
   12800:	b	12758 <table_dupe@@Base+0xa0>
   12804:	mov	r2, r4
   12808:	mov	r1, r5
   1280c:	mov	r0, r6
   12810:	bl	13b18 <table_get_int8@@Base>
   12814:	mov	r3, r0
   12818:	mov	r2, r4
   1281c:	mov	r1, r5
   12820:	mov	r0, r8
   12824:	bl	14584 <table_set_int8@@Base>
   12828:	b	12758 <table_dupe@@Base+0xa0>
   1282c:	mov	r2, r4
   12830:	mov	r1, r5
   12834:	mov	r0, r6
   12838:	bl	13b28 <table_get_uint8@@Base>
   1283c:	mov	r3, r0
   12840:	mov	r2, r4
   12844:	mov	r1, r5
   12848:	mov	r0, r8
   1284c:	bl	145ac <table_set_uint8@@Base>
   12850:	b	12758 <table_dupe@@Base+0xa0>
   12854:	mov	r2, r4
   12858:	mov	r1, r5
   1285c:	mov	r0, r6
   12860:	bl	13b38 <table_get_int16@@Base>
   12864:	mov	r3, r0
   12868:	mov	r2, r4
   1286c:	mov	r1, r5
   12870:	mov	r0, r8
   12874:	bl	145d4 <table_set_int16@@Base>
   12878:	b	12758 <table_dupe@@Base+0xa0>
   1287c:	mov	r2, r4
   12880:	mov	r1, r5
   12884:	mov	r0, r6
   12888:	bl	13b48 <table_get_uint16@@Base>
   1288c:	mov	r3, r0
   12890:	mov	r2, r4
   12894:	mov	r1, r5
   12898:	mov	r0, r8
   1289c:	bl	145fc <table_set_uint16@@Base>
   128a0:	b	12758 <table_dupe@@Base+0xa0>
   128a4:	mov	r2, r4
   128a8:	mov	r1, r5
   128ac:	mov	r0, r6
   128b0:	bl	13b58 <table_get_int32@@Base>
   128b4:	mov	r3, r0
   128b8:	mov	r2, r4
   128bc:	mov	r1, r5
   128c0:	mov	r0, r8
   128c4:	bl	14624 <table_set_int32@@Base>
   128c8:	b	12758 <table_dupe@@Base+0xa0>
   128cc:	mov	r2, r4
   128d0:	mov	r1, r5
   128d4:	mov	r0, r6
   128d8:	bl	13b68 <table_get_uint32@@Base>
   128dc:	mov	r3, r0
   128e0:	mov	r2, r4
   128e4:	mov	r1, r5
   128e8:	mov	r0, r8
   128ec:	bl	1464c <table_set_uint32@@Base>
   128f0:	b	12758 <table_dupe@@Base+0xa0>
   128f4:	mov	r2, r4
   128f8:	mov	r1, r5
   128fc:	mov	r0, r6
   12900:	bl	13b78 <table_get_int64@@Base>
   12904:	strd	r0, [sp]
   12908:	mov	r2, r4
   1290c:	mov	r1, r5
   12910:	mov	r0, r8
   12914:	bl	14674 <table_set_int64@@Base>
   12918:	b	12758 <table_dupe@@Base+0xa0>
   1291c:	mov	r2, r4
   12920:	mov	r1, r5
   12924:	mov	r0, r6
   12928:	bl	13b88 <table_get_uint64@@Base>
   1292c:	strd	r0, [sp]
   12930:	mov	r2, r4
   12934:	mov	r1, r5
   12938:	mov	r0, r8
   1293c:	bl	14694 <table_set_uint64@@Base>
   12940:	b	12758 <table_dupe@@Base+0xa0>
   12944:	mov	r2, r4
   12948:	mov	r1, r5
   1294c:	mov	r0, r6
   12950:	bl	13b98 <table_get_short@@Base>
   12954:	mov	r3, r0
   12958:	mov	r2, r4
   1295c:	mov	r1, r5
   12960:	mov	r0, r8
   12964:	bl	146b4 <table_set_short@@Base>
   12968:	b	12758 <table_dupe@@Base+0xa0>
   1296c:	mov	r2, r4
   12970:	mov	r1, r5
   12974:	mov	r0, r6
   12978:	bl	13ba8 <table_get_ushort@@Base>
   1297c:	mov	r3, r0
   12980:	mov	r2, r4
   12984:	mov	r1, r5
   12988:	mov	r0, r8
   1298c:	bl	146dc <table_set_ushort@@Base>
   12990:	b	12758 <table_dupe@@Base+0xa0>
   12994:	mov	r2, r4
   12998:	mov	r1, r5
   1299c:	mov	r0, r6
   129a0:	bl	13bb8 <table_get_long@@Base>
   129a4:	mov	r3, r0
   129a8:	mov	r2, r4
   129ac:	mov	r1, r5
   129b0:	mov	r0, r8
   129b4:	bl	14704 <table_set_long@@Base>
   129b8:	b	12758 <table_dupe@@Base+0xa0>
   129bc:	mov	r2, r4
   129c0:	mov	r1, r5
   129c4:	mov	r0, r6
   129c8:	bl	13bc8 <table_get_ulong@@Base>
   129cc:	mov	r3, r0
   129d0:	mov	r2, r4
   129d4:	mov	r1, r5
   129d8:	mov	r0, r8
   129dc:	bl	1472c <table_set_ulong@@Base>
   129e0:	b	12758 <table_dupe@@Base+0xa0>
   129e4:	mov	r2, r4
   129e8:	mov	r1, r5
   129ec:	mov	r0, r6
   129f0:	bl	13bd8 <table_get_llong@@Base>
   129f4:	strd	r0, [sp]
   129f8:	mov	r2, r4
   129fc:	mov	r1, r5
   12a00:	mov	r0, r8
   12a04:	bl	14754 <table_set_llong@@Base>
   12a08:	b	12758 <table_dupe@@Base+0xa0>
   12a0c:	mov	r2, r4
   12a10:	mov	r1, r5
   12a14:	mov	r0, r6
   12a18:	bl	13be8 <table_get_ullong@@Base>
   12a1c:	strd	r0, [sp]
   12a20:	mov	r2, r4
   12a24:	mov	r1, r5
   12a28:	mov	r0, r8
   12a2c:	bl	14774 <table_set_ullong@@Base>
   12a30:	b	12758 <table_dupe@@Base+0xa0>
   12a34:	mov	r2, r4
   12a38:	mov	r1, r5
   12a3c:	mov	r0, r6
   12a40:	bl	13c48 <table_get_string@@Base>
   12a44:	mov	r3, r0
   12a48:	mov	r2, r4
   12a4c:	mov	r1, r5
   12a50:	mov	r0, r8
   12a54:	bl	14800 <table_set_string@@Base>
   12a58:	b	12758 <table_dupe@@Base+0xa0>
   12a5c:	mov	r2, r4
   12a60:	mov	r1, r5
   12a64:	mov	r0, r6
   12a68:	bl	13bf8 <table_get_float@@Base>
   12a6c:	mov	r2, r4
   12a70:	mov	r1, r5
   12a74:	mov	r0, r8
   12a78:	bl	14794 <table_set_float@@Base>
   12a7c:	b	12758 <table_dupe@@Base+0xa0>
   12a80:	mov	r2, r4
   12a84:	mov	r1, r5
   12a88:	mov	r0, r6
   12a8c:	bl	13c08 <table_get_double@@Base>
   12a90:	mov	r2, r4
   12a94:	mov	r1, r5
   12a98:	mov	r0, r8
   12a9c:	bl	147b8 <table_set_double@@Base>
   12aa0:	b	12758 <table_dupe@@Base+0xa0>
   12aa4:	mov	r2, r4
   12aa8:	mov	r1, r5
   12aac:	mov	r0, r6
   12ab0:	bl	13c18 <table_get_ldouble@@Base>
   12ab4:	mov	r2, r4
   12ab8:	mov	r1, r5
   12abc:	mov	r0, r8
   12ac0:	bl	147dc <table_set_ldouble@@Base>
   12ac4:	b	12758 <table_dupe@@Base+0xa0>
   12ac8:	mov	r2, r4
   12acc:	mov	r1, r5
   12ad0:	mov	r0, r6
   12ad4:	bl	13ae8 <table_get_bool@@Base>
   12ad8:	mov	r3, r0
   12adc:	mov	r2, r4
   12ae0:	mov	r1, r5
   12ae4:	mov	r0, r8
   12ae8:	bl	1450c <table_set_bool@@Base>
   12aec:	b	12758 <table_dupe@@Base+0xa0>
   12af0:	mov	r2, r4
   12af4:	mov	r1, r5
   12af8:	mov	r0, r6
   12afc:	bl	13c28 <table_get_char@@Base>
   12b00:	mov	r3, r0
   12b04:	mov	r2, r4
   12b08:	mov	r1, r5
   12b0c:	mov	r0, r8
   12b10:	bl	1481c <table_set_char@@Base>
   12b14:	b	12758 <table_dupe@@Base+0xa0>
   12b18:	mov	r2, r4
   12b1c:	mov	r1, r5
   12b20:	mov	r0, r6
   12b24:	bl	13c38 <table_get_uchar@@Base>
   12b28:	mov	r3, r0
   12b2c:	mov	r2, r4
   12b30:	mov	r1, r5
   12b34:	mov	r0, r8
   12b38:	bl	14844 <table_set_uchar@@Base>
   12b3c:	b	12758 <table_dupe@@Base+0xa0>
   12b40:	mov	r2, r4
   12b44:	mov	r1, r5
   12b48:	mov	r0, r6
   12b4c:	bl	13c54 <table_get_ptr@@Base>
   12b50:	str	r0, [sp, #12]
   12b54:	add	r3, sp, #12
   12b58:	mov	r2, r4
   12b5c:	mov	r1, r5
   12b60:	mov	r0, r8
   12b64:	bl	1486c <table_set_ptr@@Base>
   12b68:	b	12758 <table_dupe@@Base+0xa0>
   12b6c:	add	r5, r5, #1
   12b70:	cmp	r9, r5
   12b74:	beq	12b90 <table_dupe@@Base+0x4d8>
   12b78:	mov	r0, r8
   12b7c:	bl	13cd8 <table_add_row@@Base>
   12b80:	cmp	r7, #0
   12b84:	ble	12b6c <table_dupe@@Base+0x4b4>
   12b88:	mov	r4, #0
   12b8c:	b	12764 <table_dupe@@Base+0xac>
   12b90:	mov	r0, r8
   12b94:	add	sp, sp, #20
   12b98:	pop	{r4, r5, r6, r7, r8, r9, pc}

00012b9c <table_get_major_version@@Base>:
   12b9c:	mov	r0, #0
   12ba0:	bx	lr

00012ba4 <table_get_minor_version@@Base>:
   12ba4:	mov	r0, #0
   12ba8:	bx	lr

00012bac <table_get_patch_version@@Base>:
   12bac:	mov	r0, #0
   12bb0:	bx	lr

00012bb4 <table_get_version@@Base>:
   12bb4:	ldr	r0, [pc]	; 12bbc <table_get_version@@Base+0x8>
   12bb8:	bx	lr
   12bbc:			; <UNDEFINED> instruction: 0x00015fb4

00012bc0 <table_get_callback_length@@Base>:
   12bc0:	ldr	r0, [r0, #32]
   12bc4:	bx	lr

00012bc8 <table_register_callback@@Base>:
   12bc8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12bcc:	ldr	r5, [r0, #32]
   12bd0:	cmp	r5, #0
   12bd4:	ble	12c30 <table_register_callback@@Base+0x68>
   12bd8:	ldr	lr, [r0, #36]	; 0x24
   12bdc:	sub	lr, lr, #4
   12be0:	mov	ip, #0
   12be4:	b	12bf4 <table_register_callback@@Base+0x2c>
   12be8:	add	ip, ip, #1
   12bec:	cmp	ip, r5
   12bf0:	beq	12c30 <table_register_callback@@Base+0x68>
   12bf4:	lsl	r6, ip, #2
   12bf8:	ldr	r4, [lr, #4]!
   12bfc:	cmp	r1, r4
   12c00:	bne	12be8 <table_register_callback@@Base+0x20>
   12c04:	ldr	r4, [r0, #40]	; 0x28
   12c08:	ldr	r4, [r4, ip, lsl #2]
   12c0c:	cmp	r2, r4
   12c10:	bne	12be8 <table_register_callback@@Base+0x20>
   12c14:	cmp	ip, #0
   12c18:	ble	12c30 <table_register_callback@@Base+0x68>
   12c1c:	ldr	r1, [r0, #44]	; 0x2c
   12c20:	ldr	r2, [r1, r6]
   12c24:	orr	r3, r2, r3
   12c28:	str	r3, [r1, r6]
   12c2c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12c30:	mov	r7, r3
   12c34:	mov	r4, r2
   12c38:	mov	r9, r1
   12c3c:	mov	r6, r0
   12c40:	ldr	r8, [r0, #48]	; 0x30
   12c44:	mov	r1, r8
   12c48:	mov	r0, r5
   12c4c:	bl	15e18 <table_cell_nullify@@Base+0x218>
   12c50:	cmp	r1, #0
   12c54:	beq	12c84 <table_register_callback@@Base+0xbc>
   12c58:	ldr	r3, [r6, #32]
   12c5c:	ldr	r2, [r6, #36]	; 0x24
   12c60:	str	r9, [r2, r3, lsl #2]
   12c64:	ldr	r2, [r6, #40]	; 0x28
   12c68:	str	r4, [r2, r3, lsl #2]
   12c6c:	ldr	r2, [r6, #44]	; 0x2c
   12c70:	str	r7, [r2, r3, lsl #2]
   12c74:	ldr	r3, [r6, #32]
   12c78:	add	r3, r3, #1
   12c7c:	str	r3, [r6, #32]
   12c80:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12c84:	ldr	r1, [r6, #52]	; 0x34
   12c88:	add	r1, r8, r1
   12c8c:	str	r1, [r6, #52]	; 0x34
   12c90:	lsl	r1, r1, #2
   12c94:	ldr	r0, [r6, #36]	; 0x24
   12c98:	bl	11ba8 <realloc@plt>
   12c9c:	str	r0, [r6, #36]	; 0x24
   12ca0:	ldr	r1, [r6, #52]	; 0x34
   12ca4:	lsl	r1, r1, #2
   12ca8:	ldr	r0, [r6, #40]	; 0x28
   12cac:	bl	11ba8 <realloc@plt>
   12cb0:	str	r0, [r6, #40]	; 0x28
   12cb4:	ldr	r1, [r6, #52]	; 0x34
   12cb8:	lsl	r1, r1, #2
   12cbc:	ldr	r0, [r6, #44]	; 0x2c
   12cc0:	bl	11ba8 <realloc@plt>
   12cc4:	str	r0, [r6, #44]	; 0x2c
   12cc8:	b	12c58 <table_register_callback@@Base+0x90>

00012ccc <table_unregister_callback@@Base>:
   12ccc:	push	{r4, r5, r6, lr}
   12cd0:	ldr	lr, [r0, #32]
   12cd4:	cmp	lr, #0
   12cd8:	pople	{r4, r5, r6, pc}
   12cdc:	ldr	r4, [r0, #36]	; 0x24
   12ce0:	sub	r4, r4, #4
   12ce4:	mov	r3, #0
   12ce8:	b	12cf8 <table_unregister_callback@@Base+0x2c>
   12cec:	add	r3, r3, #1
   12cf0:	cmp	r3, lr
   12cf4:	beq	12dcc <table_unregister_callback@@Base+0x100>
   12cf8:	lsl	ip, r3, #2
   12cfc:	ldr	r5, [r4, #4]!
   12d00:	cmp	r1, r5
   12d04:	bne	12cec <table_unregister_callback@@Base+0x20>
   12d08:	ldr	r5, [r0, #40]	; 0x28
   12d0c:	ldr	r5, [r5, r3, lsl #2]
   12d10:	cmp	r2, r5
   12d14:	bne	12cec <table_unregister_callback@@Base+0x20>
   12d18:	cmn	r3, #1
   12d1c:	popeq	{r4, r5, r6, pc}
   12d20:	sub	lr, lr, #1
   12d24:	cmp	lr, r3
   12d28:	ble	12d6c <table_unregister_callback@@Base+0xa0>
   12d2c:	ldr	r1, [r0, #36]	; 0x24
   12d30:	add	r2, ip, #4
   12d34:	ldr	lr, [r1, r2]
   12d38:	str	lr, [r1, ip]
   12d3c:	ldr	r1, [r0, #40]	; 0x28
   12d40:	ldr	lr, [r1, r2]
   12d44:	str	lr, [r1, ip]
   12d48:	ldr	r1, [r0, #44]	; 0x2c
   12d4c:	ldr	lr, [r1, r2]
   12d50:	str	lr, [r1, ip]
   12d54:	add	r3, r3, #1
   12d58:	ldr	lr, [r0, #32]
   12d5c:	sub	lr, lr, #1
   12d60:	mov	ip, r2
   12d64:	cmp	lr, r3
   12d68:	bgt	12d2c <table_unregister_callback@@Base+0x60>
   12d6c:	mov	r4, r0
   12d70:	str	lr, [r0, #32]
   12d74:	ldr	r5, [r0, #48]	; 0x30
   12d78:	mov	r1, r5
   12d7c:	mov	r0, lr
   12d80:	bl	15e18 <table_cell_nullify@@Base+0x218>
   12d84:	cmp	r1, #0
   12d88:	popne	{r4, r5, r6, pc}
   12d8c:	ldr	r1, [r4, #52]	; 0x34
   12d90:	sub	r1, r1, r5
   12d94:	str	r1, [r4, #52]	; 0x34
   12d98:	cmp	r1, #0
   12d9c:	bne	12dd0 <table_unregister_callback@@Base+0x104>
   12da0:	ldr	r0, [r4, #36]	; 0x24
   12da4:	bl	11b90 <free@plt>
   12da8:	ldr	r0, [r4, #40]	; 0x28
   12dac:	bl	11b90 <free@plt>
   12db0:	ldr	r0, [r4, #44]	; 0x2c
   12db4:	bl	11b90 <free@plt>
   12db8:	mov	r3, #0
   12dbc:	str	r3, [r4, #36]	; 0x24
   12dc0:	str	r3, [r4, #40]	; 0x28
   12dc4:	str	r3, [r4, #44]	; 0x2c
   12dc8:	pop	{r4, r5, r6, pc}
   12dcc:	pop	{r4, r5, r6, pc}
   12dd0:	lsl	r1, r1, #2
   12dd4:	ldr	r0, [r4, #36]	; 0x24
   12dd8:	bl	11ba8 <realloc@plt>
   12ddc:	str	r0, [r4, #36]	; 0x24
   12de0:	ldr	r1, [r4, #52]	; 0x34
   12de4:	lsl	r1, r1, #2
   12de8:	ldr	r0, [r4, #40]	; 0x28
   12dec:	bl	11ba8 <realloc@plt>
   12df0:	str	r0, [r4, #40]	; 0x28
   12df4:	ldr	r1, [r4, #52]	; 0x34
   12df8:	lsl	r1, r1, #2
   12dfc:	ldr	r0, [r4, #44]	; 0x2c
   12e00:	bl	11ba8 <realloc@plt>
   12e04:	str	r0, [r4, #44]	; 0x2c
   12e08:	pop	{r4, r5, r6, pc}

00012e0c <table_notify@@Base>:
   12e0c:	ldr	ip, [r0, #32]
   12e10:	cmp	ip, #0
   12e14:	bxle	lr
   12e18:	push	{r4, r5, r6, r7, r8, r9, lr}
   12e1c:	sub	sp, sp, #12
   12e20:	mov	r6, r3
   12e24:	mov	r8, r2
   12e28:	mov	r7, r1
   12e2c:	mov	r5, r0
   12e30:	mov	r4, #0
   12e34:	b	12e48 <table_notify@@Base+0x3c>
   12e38:	add	r4, r4, #1
   12e3c:	ldr	r0, [r5, #32]
   12e40:	cmp	r0, r4
   12e44:	ble	12e84 <table_notify@@Base+0x78>
   12e48:	ldr	r0, [r5, #44]	; 0x2c
   12e4c:	ldr	r0, [r0, r4, lsl #2]
   12e50:	tst	r6, r0
   12e54:	beq	12e38 <table_notify@@Base+0x2c>
   12e58:	ldr	r3, [r5, #36]	; 0x24
   12e5c:	ldr	r2, [r5, #40]	; 0x28
   12e60:	ldr	r2, [r2, r4, lsl #2]
   12e64:	str	r2, [sp]
   12e68:	ldr	r9, [r3, r4, lsl #2]
   12e6c:	mov	r3, r6
   12e70:	mov	r2, r8
   12e74:	mov	r1, r7
   12e78:	mov	r0, r5
   12e7c:	blx	r9
   12e80:	b	12e38 <table_notify@@Base+0x2c>
   12e84:	add	sp, sp, #12
   12e88:	pop	{r4, r5, r6, r7, r8, r9, pc}

00012e8c <table_column_init@@Base>:
   12e8c:	push	{r4, r5, r6, r7, r8, lr}
   12e90:	mov	r7, r2
   12e94:	mov	r8, r3
   12e98:	add	r1, r1, r1, lsl #1
   12e9c:	lsl	r4, r1, #2
   12ea0:	ldr	r6, [r0]
   12ea4:	add	r5, r6, r4
   12ea8:	mov	r0, r2
   12eac:	bl	11be4 <strlen@plt>
   12eb0:	add	r0, r0, #1
   12eb4:	bl	11bc0 <malloc@plt>
   12eb8:	str	r0, [r6, r4]
   12ebc:	cmp	r0, #0
   12ec0:	beq	12ecc <table_column_init@@Base+0x40>
   12ec4:	mov	r1, r7
   12ec8:	bl	11bb4 <strcpy@plt>
   12ecc:	str	r8, [r5, #4]
   12ed0:	ldr	r3, [sp, #24]
   12ed4:	str	r3, [r5, #8]
   12ed8:	pop	{r4, r5, r6, r7, r8, pc}

00012edc <table_column_destroy@@Base>:
   12edc:	ldr	r3, [r0]
   12ee0:	add	r1, r1, r1, lsl #1
   12ee4:	ldr	r0, [r3, r1, lsl #2]
   12ee8:	cmp	r0, #0
   12eec:	bxeq	lr
   12ef0:	push	{r4, lr}
   12ef4:	bl	11b90 <free@plt>
   12ef8:	pop	{r4, pc}

00012efc <table_get_column_length@@Base>:
   12efc:	ldr	r0, [r0, #4]
   12f00:	bx	lr

00012f04 <table_get_column@@Base>:
   12f04:	push	{r4, r5, r6, r7, r8, lr}
   12f08:	ldr	r7, [r0, #4]
   12f0c:	cmp	r7, #0
   12f10:	ble	12f50 <table_get_column@@Base+0x4c>
   12f14:	mov	r6, r1
   12f18:	ldr	r8, [r0]
   12f1c:	mov	r5, #0
   12f20:	mov	r4, r5
   12f24:	mov	r1, r6
   12f28:	ldr	r0, [r8, r5]
   12f2c:	bl	11b78 <strcmp@plt>
   12f30:	cmp	r0, #0
   12f34:	beq	12f54 <table_get_column@@Base+0x50>
   12f38:	add	r4, r4, #1
   12f3c:	add	r5, r5, #12
   12f40:	cmp	r4, r7
   12f44:	bne	12f24 <table_get_column@@Base+0x20>
   12f48:	mvn	r4, #0
   12f4c:	b	12f5c <table_get_column@@Base+0x58>
   12f50:	mov	r4, #0
   12f54:	cmp	r7, r4
   12f58:	mvneq	r4, #0
   12f5c:	mov	r0, r4
   12f60:	pop	{r4, r5, r6, r7, r8, pc}

00012f64 <table_get_column_data_type@@Base>:
   12f64:	ldr	r3, [r0]
   12f68:	add	r1, r1, r1, lsl #1
   12f6c:	add	r3, r3, r1, lsl #2
   12f70:	ldr	r0, [r3, #4]
   12f74:	bx	lr

00012f78 <table_add_column@@Base>:
   12f78:	push	{r4, r5, r6, r7, r8, r9, lr}
   12f7c:	sub	sp, sp, #12
   12f80:	mov	r5, r0
   12f84:	mov	r9, r1
   12f88:	mov	r8, r2
   12f8c:	ldr	r4, [r0, #8]
   12f90:	mov	r1, r4
   12f94:	ldr	r0, [r0, #4]
   12f98:	bl	15e18 <table_cell_nullify@@Base+0x218>
   12f9c:	cmp	r1, #0
   12fa0:	beq	13024 <table_add_column@@Base+0xac>
   12fa4:	mov	r0, r5
   12fa8:	bl	13cd0 <table_get_row_length@@Base>
   12fac:	mov	r6, r0
   12fb0:	ldr	r7, [r5, #4]
   12fb4:	mov	r0, r8
   12fb8:	bl	13944 <table_get_default_compare_function_for_data_type@@Base>
   12fbc:	str	r0, [sp]
   12fc0:	mov	r3, r8
   12fc4:	mov	r2, r9
   12fc8:	mov	r1, r7
   12fcc:	mov	r0, r5
   12fd0:	bl	12e8c <table_column_init@@Base>
   12fd4:	cmp	r6, #0
   12fd8:	ble	12ffc <table_add_column@@Base+0x84>
   12fdc:	mov	r4, #0
   12fe0:	mov	r2, r7
   12fe4:	mov	r1, r4
   12fe8:	mov	r0, r5
   12fec:	bl	15ba8 <table_cell_init@@Base>
   12ff0:	add	r4, r4, #1
   12ff4:	cmp	r6, r4
   12ff8:	bne	12fe0 <table_add_column@@Base+0x68>
   12ffc:	mov	r3, #8
   13000:	ldr	r2, [r5, #4]
   13004:	mvn	r1, #0
   13008:	mov	r0, r5
   1300c:	bl	12e0c <table_notify@@Base>
   13010:	ldr	r0, [r5, #4]
   13014:	add	r3, r0, #1
   13018:	str	r3, [r5, #4]
   1301c:	add	sp, sp, #12
   13020:	pop	{r4, r5, r6, r7, r8, r9, pc}
   13024:	ldr	r1, [r5, #12]
   13028:	add	r4, r4, r1
   1302c:	str	r4, [r5, #12]
   13030:	add	r4, r4, r4, lsl #1
   13034:	lsl	r1, r4, #2
   13038:	ldr	r0, [r5]
   1303c:	bl	11ba8 <realloc@plt>
   13040:	str	r0, [r5]
   13044:	mov	r0, r5
   13048:	bl	13cd0 <table_get_row_length@@Base>
   1304c:	subs	r7, r0, #0
   13050:	ble	12fa4 <table_add_column@@Base+0x2c>
   13054:	mov	r4, #0
   13058:	mov	r1, r4
   1305c:	mov	r0, r5
   13060:	bl	13e90 <table_get_row_ptr@@Base>
   13064:	mov	r6, r0
   13068:	ldr	r1, [r5, #12]
   1306c:	lsl	r1, r1, #2
   13070:	ldr	r0, [r0]
   13074:	bl	11ba8 <realloc@plt>
   13078:	str	r0, [r6]
   1307c:	add	r4, r4, #1
   13080:	cmp	r7, r4
   13084:	bne	13058 <table_add_column@@Base+0xe0>
   13088:	b	12fa4 <table_add_column@@Base+0x2c>

0001308c <table_remove_column@@Base>:
   1308c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   13090:	mov	r6, r0
   13094:	mov	r7, r1
   13098:	bl	12edc <table_column_destroy@@Base>
   1309c:	ldr	r4, [r6, #4]
   130a0:	sub	r8, r4, #1
   130a4:	cmp	r7, r8
   130a8:	bge	130f0 <table_remove_column@@Base+0x64>
   130ac:	add	r3, r7, r7, lsl #1
   130b0:	lsl	r3, r3, #2
   130b4:	mov	r0, r7
   130b8:	ldr	r2, [r6]
   130bc:	add	ip, r3, #12
   130c0:	add	lr, r2, r3
   130c4:	add	r1, r2, ip
   130c8:	ldr	r9, [r1]
   130cc:	ldr	r5, [r1, #4]
   130d0:	ldr	r1, [r1, #8]
   130d4:	str	r9, [r2, r3]
   130d8:	str	r5, [lr, #4]
   130dc:	str	r1, [lr, #8]
   130e0:	add	r0, r0, #1
   130e4:	mov	r3, ip
   130e8:	cmp	r8, r0
   130ec:	bgt	130b8 <table_remove_column@@Base+0x2c>
   130f0:	mov	r0, r6
   130f4:	bl	13cd0 <table_get_row_length@@Base>
   130f8:	subs	r9, r0, #0
   130fc:	ble	13164 <table_remove_column@@Base+0xd8>
   13100:	lsl	sl, r7, #2
   13104:	mov	r5, #0
   13108:	sub	r4, r4, #1
   1310c:	mov	r2, r7
   13110:	mov	r1, r5
   13114:	mov	r0, r6
   13118:	bl	15bbc <table_cell_destroy@@Base>
   1311c:	mov	r1, r5
   13120:	mov	r0, r6
   13124:	bl	13e90 <table_get_row_ptr@@Base>
   13128:	cmp	r7, r8
   1312c:	bge	13158 <table_remove_column@@Base+0xcc>
   13130:	mov	r2, sl
   13134:	mov	r3, r7
   13138:	ldr	ip, [r0]
   1313c:	add	r1, r2, #4
   13140:	ldr	lr, [ip, r1]
   13144:	str	lr, [ip, r2]
   13148:	add	r3, r3, #1
   1314c:	mov	r2, r1
   13150:	cmp	r3, r4
   13154:	bne	13138 <table_remove_column@@Base+0xac>
   13158:	add	r5, r5, #1
   1315c:	cmp	r9, r5
   13160:	bne	1310c <table_remove_column@@Base+0x80>
   13164:	ldr	r0, [r6, #4]
   13168:	sub	r0, r0, #1
   1316c:	str	r0, [r6, #4]
   13170:	ldr	r4, [r6, #8]
   13174:	mov	r1, r4
   13178:	bl	15e18 <table_cell_nullify@@Base+0x218>
   1317c:	cmp	r1, #0
   13180:	beq	131a0 <table_remove_column@@Base+0x114>
   13184:	mov	r3, #16
   13188:	mov	r2, r7
   1318c:	mvn	r1, #0
   13190:	mov	r0, r6
   13194:	bl	12e0c <table_notify@@Base>
   13198:	mov	r0, #0
   1319c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   131a0:	ldr	r1, [r6, #12]
   131a4:	sub	r1, r1, r4
   131a8:	str	r1, [r6, #12]
   131ac:	add	r1, r1, r1, lsl #1
   131b0:	lsl	r1, r1, #2
   131b4:	ldr	r0, [r6]
   131b8:	bl	11ba8 <realloc@plt>
   131bc:	str	r0, [r6]
   131c0:	mov	r0, r6
   131c4:	bl	13cd0 <table_get_row_length@@Base>
   131c8:	subs	r8, r0, #0
   131cc:	ble	13184 <table_remove_column@@Base+0xf8>
   131d0:	mov	r4, #0
   131d4:	mov	r1, r4
   131d8:	mov	r0, r6
   131dc:	bl	13e90 <table_get_row_ptr@@Base>
   131e0:	mov	r5, r0
   131e4:	ldr	r1, [r6, #12]
   131e8:	lsl	r1, r1, #2
   131ec:	ldr	r0, [r0]
   131f0:	bl	11ba8 <realloc@plt>
   131f4:	str	r0, [r5]
   131f8:	add	r4, r4, #1
   131fc:	cmp	r8, r4
   13200:	bne	131d4 <table_remove_column@@Base+0x148>
   13204:	b	13184 <table_remove_column@@Base+0xf8>

00013208 <table_get_column_name@@Base>:
   13208:	ldr	r3, [r0]
   1320c:	add	r1, r1, r1, lsl #1
   13210:	ldr	r0, [r3, r1, lsl #2]
   13214:	bx	lr

00013218 <table_get_col_ptr@@Base>:
   13218:	add	r1, r1, r1, lsl #1
   1321c:	ldr	r0, [r0]
   13220:	add	r0, r0, r1, lsl #2
   13224:	bx	lr

00013228 <table_get_column_compare_function@@Base>:
   13228:	ldr	r3, [r0]
   1322c:	add	r1, r1, r1, lsl #1
   13230:	add	r3, r3, r1, lsl #2
   13234:	ldr	r0, [r3, #8]
   13238:	bx	lr

0001323c <table_set_column_compare_function@@Base>:
   1323c:	ldr	r3, [r0]
   13240:	add	r1, r1, r1, lsl #1
   13244:	add	r3, r3, r1, lsl #2
   13248:	str	r2, [r3, #8]
   1324c:	bx	lr

00013250 <table_compare_bool@@Base>:
   13250:	cmp	r0, #0
   13254:	beq	13280 <table_compare_bool@@Base+0x30>
   13258:	cmp	r1, #0
   1325c:	beq	1328c <table_compare_bool@@Base+0x3c>
   13260:	ldrb	r0, [r0]
   13264:	ldrb	r1, [r1]
   13268:	cmp	r0, r1
   1326c:	bgt	13294 <table_compare_bool@@Base+0x44>
   13270:	cmp	r0, r1
   13274:	movge	r0, #0
   13278:	mvnlt	r0, #0
   1327c:	bx	lr
   13280:	adds	r0, r1, #0
   13284:	mvnne	r0, #0
   13288:	bx	lr
   1328c:	mov	r0, #1
   13290:	bx	lr
   13294:	mov	r0, #1
   13298:	bx	lr

0001329c <table_compare_int@@Base>:
   1329c:	cmp	r0, #0
   132a0:	beq	132cc <table_compare_int@@Base+0x30>
   132a4:	cmp	r1, #0
   132a8:	beq	132d8 <table_compare_int@@Base+0x3c>
   132ac:	ldr	r0, [r0]
   132b0:	ldr	r1, [r1]
   132b4:	cmp	r0, r1
   132b8:	bgt	132e0 <table_compare_int@@Base+0x44>
   132bc:	cmp	r0, r1
   132c0:	movge	r0, #0
   132c4:	mvnlt	r0, #0
   132c8:	bx	lr
   132cc:	adds	r0, r1, #0
   132d0:	mvnne	r0, #0
   132d4:	bx	lr
   132d8:	mov	r0, #1
   132dc:	bx	lr
   132e0:	mov	r0, #1
   132e4:	bx	lr

000132e8 <table_compare_uint@@Base>:
   132e8:	cmp	r0, #0
   132ec:	beq	13318 <table_compare_uint@@Base+0x30>
   132f0:	cmp	r1, #0
   132f4:	beq	13324 <table_compare_uint@@Base+0x3c>
   132f8:	ldr	r0, [r0]
   132fc:	ldr	r1, [r1]
   13300:	cmp	r0, r1
   13304:	bhi	1332c <table_compare_uint@@Base+0x44>
   13308:	cmp	r0, r1
   1330c:	movcs	r0, #0
   13310:	mvncc	r0, #0
   13314:	bx	lr
   13318:	adds	r0, r1, #0
   1331c:	mvnne	r0, #0
   13320:	bx	lr
   13324:	mov	r0, #1
   13328:	bx	lr
   1332c:	mov	r0, #1
   13330:	bx	lr

00013334 <table_compare_int8@@Base>:
   13334:	cmp	r0, #0
   13338:	beq	13364 <table_compare_int8@@Base+0x30>
   1333c:	cmp	r1, #0
   13340:	beq	13370 <table_compare_int8@@Base+0x3c>
   13344:	ldrsb	r0, [r0]
   13348:	ldrsb	r1, [r1]
   1334c:	cmp	r0, r1
   13350:	bgt	13378 <table_compare_int8@@Base+0x44>
   13354:	cmp	r0, r1
   13358:	movge	r0, #0
   1335c:	mvnlt	r0, #0
   13360:	bx	lr
   13364:	adds	r0, r1, #0
   13368:	mvnne	r0, #0
   1336c:	bx	lr
   13370:	mov	r0, #1
   13374:	bx	lr
   13378:	mov	r0, #1
   1337c:	bx	lr

00013380 <table_compare_uint8@@Base>:
   13380:	cmp	r0, #0
   13384:	beq	133b0 <table_compare_uint8@@Base+0x30>
   13388:	cmp	r1, #0
   1338c:	beq	133bc <table_compare_uint8@@Base+0x3c>
   13390:	ldrb	r0, [r0]
   13394:	ldrb	r1, [r1]
   13398:	cmp	r0, r1
   1339c:	bhi	133c4 <table_compare_uint8@@Base+0x44>
   133a0:	cmp	r0, r1
   133a4:	movcs	r0, #0
   133a8:	mvncc	r0, #0
   133ac:	bx	lr
   133b0:	adds	r0, r1, #0
   133b4:	mvnne	r0, #0
   133b8:	bx	lr
   133bc:	mov	r0, #1
   133c0:	bx	lr
   133c4:	mov	r0, #1
   133c8:	bx	lr

000133cc <table_compare_int16@@Base>:
   133cc:	cmp	r0, #0
   133d0:	beq	133fc <table_compare_int16@@Base+0x30>
   133d4:	cmp	r1, #0
   133d8:	beq	13408 <table_compare_int16@@Base+0x3c>
   133dc:	ldrsh	r0, [r0]
   133e0:	ldrsh	r1, [r1]
   133e4:	cmp	r0, r1
   133e8:	bgt	13410 <table_compare_int16@@Base+0x44>
   133ec:	cmp	r0, r1
   133f0:	movge	r0, #0
   133f4:	mvnlt	r0, #0
   133f8:	bx	lr
   133fc:	adds	r0, r1, #0
   13400:	mvnne	r0, #0
   13404:	bx	lr
   13408:	mov	r0, #1
   1340c:	bx	lr
   13410:	mov	r0, #1
   13414:	bx	lr

00013418 <table_compare_uint16@@Base>:
   13418:	cmp	r0, #0
   1341c:	beq	13448 <table_compare_uint16@@Base+0x30>
   13420:	cmp	r1, #0
   13424:	beq	13454 <table_compare_uint16@@Base+0x3c>
   13428:	ldrh	r0, [r0]
   1342c:	ldrh	r1, [r1]
   13430:	cmp	r0, r1
   13434:	bhi	1345c <table_compare_uint16@@Base+0x44>
   13438:	cmp	r0, r1
   1343c:	movcs	r0, #0
   13440:	mvncc	r0, #0
   13444:	bx	lr
   13448:	adds	r0, r1, #0
   1344c:	mvnne	r0, #0
   13450:	bx	lr
   13454:	mov	r0, #1
   13458:	bx	lr
   1345c:	mov	r0, #1
   13460:	bx	lr

00013464 <table_compare_int32@@Base>:
   13464:	cmp	r0, #0
   13468:	beq	13494 <table_compare_int32@@Base+0x30>
   1346c:	cmp	r1, #0
   13470:	beq	134a0 <table_compare_int32@@Base+0x3c>
   13474:	ldr	r0, [r0]
   13478:	ldr	r1, [r1]
   1347c:	cmp	r0, r1
   13480:	bgt	134a8 <table_compare_int32@@Base+0x44>
   13484:	cmp	r0, r1
   13488:	movge	r0, #0
   1348c:	mvnlt	r0, #0
   13490:	bx	lr
   13494:	adds	r0, r1, #0
   13498:	mvnne	r0, #0
   1349c:	bx	lr
   134a0:	mov	r0, #1
   134a4:	bx	lr
   134a8:	mov	r0, #1
   134ac:	bx	lr

000134b0 <table_compare_uint32@@Base>:
   134b0:	cmp	r0, #0
   134b4:	beq	134e0 <table_compare_uint32@@Base+0x30>
   134b8:	cmp	r1, #0
   134bc:	beq	134ec <table_compare_uint32@@Base+0x3c>
   134c0:	ldr	r0, [r0]
   134c4:	ldr	r1, [r1]
   134c8:	cmp	r0, r1
   134cc:	bhi	134f4 <table_compare_uint32@@Base+0x44>
   134d0:	cmp	r0, r1
   134d4:	movcs	r0, #0
   134d8:	mvncc	r0, #0
   134dc:	bx	lr
   134e0:	adds	r0, r1, #0
   134e4:	mvnne	r0, #0
   134e8:	bx	lr
   134ec:	mov	r0, #1
   134f0:	bx	lr
   134f4:	mov	r0, #1
   134f8:	bx	lr

000134fc <table_compare_int64@@Base>:
   134fc:	cmp	r0, #0
   13500:	beq	13540 <table_compare_int64@@Base+0x44>
   13504:	cmp	r1, #0
   13508:	beq	1354c <table_compare_int64@@Base+0x50>
   1350c:	push	{r4, r5}
   13510:	ldrd	r4, [r0]
   13514:	ldrd	r2, [r1]
   13518:	cmp	r2, r4
   1351c:	sbcs	r1, r3, r5
   13520:	movlt	r0, #1
   13524:	blt	13538 <table_compare_int64@@Base+0x3c>
   13528:	cmp	r4, r2
   1352c:	sbcs	r3, r5, r3
   13530:	mvnlt	r0, #0
   13534:	movge	r0, #0
   13538:	pop	{r4, r5}
   1353c:	bx	lr
   13540:	adds	r0, r1, #0
   13544:	mvnne	r0, #0
   13548:	bx	lr
   1354c:	mov	r0, #1
   13550:	bx	lr

00013554 <table_compare_uint64@@Base>:
   13554:	cmp	r0, #0
   13558:	beq	13590 <table_compare_uint64@@Base+0x3c>
   1355c:	cmp	r1, #0
   13560:	beq	1359c <table_compare_uint64@@Base+0x48>
   13564:	push	{r4, r5}
   13568:	ldrd	r4, [r0]
   1356c:	ldrd	r2, [r1]
   13570:	cmp	r5, r3
   13574:	cmpeq	r4, r2
   13578:	movhi	r0, #1
   1357c:	bhi	13588 <table_compare_uint64@@Base+0x34>
   13580:	mvncc	r0, #0
   13584:	movcs	r0, #0
   13588:	pop	{r4, r5}
   1358c:	bx	lr
   13590:	adds	r0, r1, #0
   13594:	mvnne	r0, #0
   13598:	bx	lr
   1359c:	mov	r0, #1
   135a0:	bx	lr

000135a4 <table_compare_short@@Base>:
   135a4:	cmp	r0, #0
   135a8:	beq	135d4 <table_compare_short@@Base+0x30>
   135ac:	cmp	r1, #0
   135b0:	beq	135e0 <table_compare_short@@Base+0x3c>
   135b4:	ldrsh	r0, [r0]
   135b8:	ldrsh	r1, [r1]
   135bc:	cmp	r0, r1
   135c0:	bgt	135e8 <table_compare_short@@Base+0x44>
   135c4:	cmp	r0, r1
   135c8:	movge	r0, #0
   135cc:	mvnlt	r0, #0
   135d0:	bx	lr
   135d4:	adds	r0, r1, #0
   135d8:	mvnne	r0, #0
   135dc:	bx	lr
   135e0:	mov	r0, #1
   135e4:	bx	lr
   135e8:	mov	r0, #1
   135ec:	bx	lr

000135f0 <table_compare_ushort@@Base>:
   135f0:	cmp	r0, #0
   135f4:	beq	13620 <table_compare_ushort@@Base+0x30>
   135f8:	cmp	r1, #0
   135fc:	beq	1362c <table_compare_ushort@@Base+0x3c>
   13600:	ldrh	r0, [r0]
   13604:	ldrh	r1, [r1]
   13608:	cmp	r0, r1
   1360c:	bhi	13634 <table_compare_ushort@@Base+0x44>
   13610:	cmp	r0, r1
   13614:	movcs	r0, #0
   13618:	mvncc	r0, #0
   1361c:	bx	lr
   13620:	adds	r0, r1, #0
   13624:	mvnne	r0, #0
   13628:	bx	lr
   1362c:	mov	r0, #1
   13630:	bx	lr
   13634:	mov	r0, #1
   13638:	bx	lr

0001363c <table_compare_long@@Base>:
   1363c:	cmp	r0, #0
   13640:	beq	1366c <table_compare_long@@Base+0x30>
   13644:	cmp	r1, #0
   13648:	beq	13678 <table_compare_long@@Base+0x3c>
   1364c:	ldr	r0, [r0]
   13650:	ldr	r1, [r1]
   13654:	cmp	r0, r1
   13658:	bgt	13680 <table_compare_long@@Base+0x44>
   1365c:	cmp	r0, r1
   13660:	movge	r0, #0
   13664:	mvnlt	r0, #0
   13668:	bx	lr
   1366c:	adds	r0, r1, #0
   13670:	mvnne	r0, #0
   13674:	bx	lr
   13678:	mov	r0, #1
   1367c:	bx	lr
   13680:	mov	r0, #1
   13684:	bx	lr

00013688 <table_compare_ulong@@Base>:
   13688:	cmp	r0, #0
   1368c:	beq	136b8 <table_compare_ulong@@Base+0x30>
   13690:	cmp	r1, #0
   13694:	beq	136c4 <table_compare_ulong@@Base+0x3c>
   13698:	ldr	r0, [r0]
   1369c:	ldr	r1, [r1]
   136a0:	cmp	r0, r1
   136a4:	bhi	136cc <table_compare_ulong@@Base+0x44>
   136a8:	cmp	r0, r1
   136ac:	movcs	r0, #0
   136b0:	mvncc	r0, #0
   136b4:	bx	lr
   136b8:	adds	r0, r1, #0
   136bc:	mvnne	r0, #0
   136c0:	bx	lr
   136c4:	mov	r0, #1
   136c8:	bx	lr
   136cc:	mov	r0, #1
   136d0:	bx	lr

000136d4 <table_compare_llong@@Base>:
   136d4:	cmp	r0, #0
   136d8:	beq	13718 <table_compare_llong@@Base+0x44>
   136dc:	cmp	r1, #0
   136e0:	beq	13724 <table_compare_llong@@Base+0x50>
   136e4:	push	{r4, r5}
   136e8:	ldrd	r4, [r0]
   136ec:	ldrd	r2, [r1]
   136f0:	cmp	r2, r4
   136f4:	sbcs	r1, r3, r5
   136f8:	movlt	r0, #1
   136fc:	blt	13710 <table_compare_llong@@Base+0x3c>
   13700:	cmp	r4, r2
   13704:	sbcs	r3, r5, r3
   13708:	mvnlt	r0, #0
   1370c:	movge	r0, #0
   13710:	pop	{r4, r5}
   13714:	bx	lr
   13718:	adds	r0, r1, #0
   1371c:	mvnne	r0, #0
   13720:	bx	lr
   13724:	mov	r0, #1
   13728:	bx	lr

0001372c <table_compare_ullong@@Base>:
   1372c:	cmp	r0, #0
   13730:	beq	1375c <table_compare_ullong@@Base+0x30>
   13734:	cmp	r1, #0
   13738:	beq	13768 <table_compare_ullong@@Base+0x3c>
   1373c:	ldr	r0, [r0]
   13740:	ldr	r1, [r1]
   13744:	cmp	r0, r1
   13748:	bhi	13770 <table_compare_ullong@@Base+0x44>
   1374c:	cmp	r0, r1
   13750:	movcs	r0, #0
   13754:	mvncc	r0, #0
   13758:	bx	lr
   1375c:	adds	r0, r1, #0
   13760:	mvnne	r0, #0
   13764:	bx	lr
   13768:	mov	r0, #1
   1376c:	bx	lr
   13770:	mov	r0, #1
   13774:	bx	lr

00013778 <table_compare_float@@Base>:
   13778:	cmp	r0, #0
   1377c:	beq	137a8 <table_compare_float@@Base+0x30>
   13780:	cmp	r1, #0
   13784:	beq	137b4 <table_compare_float@@Base+0x3c>
   13788:	vldr	s14, [r0]
   1378c:	vldr	s15, [r1]
   13790:	vcmpe.f32	s14, s15
   13794:	vmrs	APSR_nzcv, fpscr
   13798:	bgt	137bc <table_compare_float@@Base+0x44>
   1379c:	mvnmi	r0, #0
   137a0:	movpl	r0, #0
   137a4:	bx	lr
   137a8:	adds	r0, r1, #0
   137ac:	mvnne	r0, #0
   137b0:	bx	lr
   137b4:	mov	r0, #1
   137b8:	bx	lr
   137bc:	mov	r0, #1
   137c0:	bx	lr

000137c4 <table_compare_double@@Base>:
   137c4:	cmp	r0, #0
   137c8:	beq	137f4 <table_compare_double@@Base+0x30>
   137cc:	cmp	r1, #0
   137d0:	beq	13800 <table_compare_double@@Base+0x3c>
   137d4:	vldr	d6, [r0]
   137d8:	vldr	d7, [r1]
   137dc:	vcmpe.f64	d6, d7
   137e0:	vmrs	APSR_nzcv, fpscr
   137e4:	bgt	13808 <table_compare_double@@Base+0x44>
   137e8:	mvnmi	r0, #0
   137ec:	movpl	r0, #0
   137f0:	bx	lr
   137f4:	adds	r0, r1, #0
   137f8:	mvnne	r0, #0
   137fc:	bx	lr
   13800:	mov	r0, #1
   13804:	bx	lr
   13808:	mov	r0, #1
   1380c:	bx	lr

00013810 <table_compare_ldouble@@Base>:
   13810:	cmp	r0, #0
   13814:	beq	13840 <table_compare_ldouble@@Base+0x30>
   13818:	cmp	r1, #0
   1381c:	beq	1384c <table_compare_ldouble@@Base+0x3c>
   13820:	vldr	d6, [r0]
   13824:	vldr	d7, [r1]
   13828:	vcmpe.f64	d6, d7
   1382c:	vmrs	APSR_nzcv, fpscr
   13830:	bgt	13854 <table_compare_ldouble@@Base+0x44>
   13834:	mvnmi	r0, #0
   13838:	movpl	r0, #0
   1383c:	bx	lr
   13840:	adds	r0, r1, #0
   13844:	mvnne	r0, #0
   13848:	bx	lr
   1384c:	mov	r0, #1
   13850:	bx	lr
   13854:	mov	r0, #1
   13858:	bx	lr

0001385c <table_compare_char@@Base>:
   1385c:	cmp	r0, #0
   13860:	beq	1388c <table_compare_char@@Base+0x30>
   13864:	cmp	r1, #0
   13868:	beq	13898 <table_compare_char@@Base+0x3c>
   1386c:	ldrb	r0, [r0]
   13870:	ldrb	r1, [r1]
   13874:	cmp	r0, r1
   13878:	bhi	138a0 <table_compare_char@@Base+0x44>
   1387c:	cmp	r0, r1
   13880:	movcs	r0, #0
   13884:	mvncc	r0, #0
   13888:	bx	lr
   1388c:	adds	r0, r1, #0
   13890:	mvnne	r0, #0
   13894:	bx	lr
   13898:	mov	r0, #1
   1389c:	bx	lr
   138a0:	mov	r0, #1
   138a4:	bx	lr

000138a8 <table_compare_uchar@@Base>:
   138a8:	cmp	r0, #0
   138ac:	beq	138d8 <table_compare_uchar@@Base+0x30>
   138b0:	cmp	r1, #0
   138b4:	beq	138e4 <table_compare_uchar@@Base+0x3c>
   138b8:	ldrb	r0, [r0]
   138bc:	ldrb	r1, [r1]
   138c0:	cmp	r0, r1
   138c4:	bhi	138ec <table_compare_uchar@@Base+0x44>
   138c8:	cmp	r0, r1
   138cc:	movcs	r0, #0
   138d0:	mvncc	r0, #0
   138d4:	bx	lr
   138d8:	adds	r0, r1, #0
   138dc:	mvnne	r0, #0
   138e0:	bx	lr
   138e4:	mov	r0, #1
   138e8:	bx	lr
   138ec:	mov	r0, #1
   138f0:	bx	lr

000138f4 <table_compare_ptr@@Base>:
   138f4:	cmp	r0, r1
   138f8:	bhi	1390c <table_compare_ptr@@Base+0x18>
   138fc:	cmp	r0, r1
   13900:	movcs	r0, #0
   13904:	mvncc	r0, #0
   13908:	bx	lr
   1390c:	mov	r0, #1
   13910:	bx	lr

00013914 <table_compare_string@@Base>:
   13914:	cmp	r0, #0
   13918:	beq	13930 <table_compare_string@@Base+0x1c>
   1391c:	cmp	r1, #0
   13920:	beq	1393c <table_compare_string@@Base+0x28>
   13924:	push	{r4, lr}
   13928:	bl	11b78 <strcmp@plt>
   1392c:	pop	{r4, pc}
   13930:	adds	r0, r1, #0
   13934:	mvnne	r0, #0
   13938:	bx	lr
   1393c:	mov	r0, #1
   13940:	bx	lr

00013944 <table_get_default_compare_function_for_data_type@@Base>:
   13944:	cmp	r0, #23
   13948:	ldrls	pc, [pc, r0, lsl #2]
   1394c:	b	13a70 <table_get_default_compare_function_for_data_type@@Base+0x12c>
   13950:			; <UNDEFINED> instruction: 0x000139b0
   13954:			; <UNDEFINED> instruction: 0x000139b8
   13958:	andeq	r3, r1, r0, asr #19
   1395c:	andeq	r3, r1, r8, asr #19
   13960:	ldrdeq	r3, [r1], -r0
   13964:	ldrdeq	r3, [r1], -r8
   13968:	andeq	r3, r1, r0, ror #19
   1396c:	andeq	r3, r1, r8, ror #19
   13970:	strdeq	r3, [r1], -r0
   13974:	strdeq	r3, [r1], -r8
   13978:	andeq	r3, r1, r0, lsl #20
   1397c:	andeq	r3, r1, r8, lsl #20
   13980:	andeq	r3, r1, r0, lsl sl
   13984:	andeq	r3, r1, r8, lsl sl
   13988:	andeq	r3, r1, r0, lsr #20
   1398c:	andeq	r3, r1, r8, lsr #20
   13990:	andeq	r3, r1, r8, lsr sl
   13994:	andeq	r3, r1, r0, asr #20
   13998:	andeq	r3, r1, r8, asr #20
   1399c:	andeq	r3, r1, r8, asr sl
   139a0:	andeq	r3, r1, r0, ror #20
   139a4:	andeq	r3, r1, r0, lsr sl
   139a8:	andeq	r3, r1, r0, asr sl
   139ac:	andeq	r3, r1, r8, ror #20
   139b0:	ldr	r0, [pc, #192]	; 13a78 <table_get_default_compare_function_for_data_type@@Base+0x134>
   139b4:	bx	lr
   139b8:	ldr	r0, [pc, #188]	; 13a7c <table_get_default_compare_function_for_data_type@@Base+0x138>
   139bc:	bx	lr
   139c0:	ldr	r0, [pc, #184]	; 13a80 <table_get_default_compare_function_for_data_type@@Base+0x13c>
   139c4:	bx	lr
   139c8:	ldr	r0, [pc, #180]	; 13a84 <table_get_default_compare_function_for_data_type@@Base+0x140>
   139cc:	bx	lr
   139d0:	ldr	r0, [pc, #176]	; 13a88 <table_get_default_compare_function_for_data_type@@Base+0x144>
   139d4:	bx	lr
   139d8:	ldr	r0, [pc, #172]	; 13a8c <table_get_default_compare_function_for_data_type@@Base+0x148>
   139dc:	bx	lr
   139e0:	ldr	r0, [pc, #168]	; 13a90 <table_get_default_compare_function_for_data_type@@Base+0x14c>
   139e4:	bx	lr
   139e8:	ldr	r0, [pc, #164]	; 13a94 <table_get_default_compare_function_for_data_type@@Base+0x150>
   139ec:	bx	lr
   139f0:	ldr	r0, [pc, #160]	; 13a98 <table_get_default_compare_function_for_data_type@@Base+0x154>
   139f4:	bx	lr
   139f8:	ldr	r0, [pc, #156]	; 13a9c <table_get_default_compare_function_for_data_type@@Base+0x158>
   139fc:	bx	lr
   13a00:	ldr	r0, [pc, #152]	; 13aa0 <table_get_default_compare_function_for_data_type@@Base+0x15c>
   13a04:	bx	lr
   13a08:	ldr	r0, [pc, #148]	; 13aa4 <table_get_default_compare_function_for_data_type@@Base+0x160>
   13a0c:	bx	lr
   13a10:	ldr	r0, [pc, #144]	; 13aa8 <table_get_default_compare_function_for_data_type@@Base+0x164>
   13a14:	bx	lr
   13a18:	ldr	r0, [pc, #140]	; 13aac <table_get_default_compare_function_for_data_type@@Base+0x168>
   13a1c:	bx	lr
   13a20:	ldr	r0, [pc, #136]	; 13ab0 <table_get_default_compare_function_for_data_type@@Base+0x16c>
   13a24:	bx	lr
   13a28:	ldr	r0, [pc, #132]	; 13ab4 <table_get_default_compare_function_for_data_type@@Base+0x170>
   13a2c:	bx	lr
   13a30:	ldr	r0, [pc, #128]	; 13ab8 <table_get_default_compare_function_for_data_type@@Base+0x174>
   13a34:	bx	lr
   13a38:	ldr	r0, [pc, #124]	; 13abc <table_get_default_compare_function_for_data_type@@Base+0x178>
   13a3c:	bx	lr
   13a40:	ldr	r0, [pc, #120]	; 13ac0 <table_get_default_compare_function_for_data_type@@Base+0x17c>
   13a44:	bx	lr
   13a48:	ldr	r0, [pc, #116]	; 13ac4 <table_get_default_compare_function_for_data_type@@Base+0x180>
   13a4c:	bx	lr
   13a50:	ldr	r0, [pc, #112]	; 13ac8 <table_get_default_compare_function_for_data_type@@Base+0x184>
   13a54:	bx	lr
   13a58:	ldr	r0, [pc, #108]	; 13acc <table_get_default_compare_function_for_data_type@@Base+0x188>
   13a5c:	bx	lr
   13a60:	ldr	r0, [pc, #104]	; 13ad0 <table_get_default_compare_function_for_data_type@@Base+0x18c>
   13a64:	bx	lr
   13a68:	ldr	r0, [pc, #100]	; 13ad4 <table_get_default_compare_function_for_data_type@@Base+0x190>
   13a6c:	bx	lr
   13a70:	mov	r0, #0
   13a74:	bx	lr
   13a78:	muleq	r1, ip, r2
   13a7c:	andeq	r3, r1, r8, ror #5
   13a80:	andeq	r3, r1, r4, lsr r3
   13a84:	andeq	r3, r1, r0, lsl #7
   13a88:	andeq	r3, r1, ip, asr #7
   13a8c:	andeq	r3, r1, r8, lsl r4
   13a90:	andeq	r3, r1, r4, ror #8
   13a94:			; <UNDEFINED> instruction: 0x000134b0
   13a98:	strdeq	r3, [r1], -ip
   13a9c:	andeq	r3, r1, r4, asr r5
   13aa0:	andeq	r3, r1, r4, lsr #11
   13aa4:	strdeq	r3, [r1], -r0
   13aa8:	andeq	r3, r1, ip, lsr r6
   13aac:	andeq	r3, r1, r8, lsl #13
   13ab0:	ldrdeq	r3, [r1], -r4
   13ab4:	andeq	r3, r1, ip, lsr #14
   13ab8:	andeq	r3, r1, r4, lsl r9
   13abc:	andeq	r3, r1, r8, ror r7
   13ac0:	andeq	r3, r1, r4, asr #15
   13ac4:	andeq	r3, r1, r0, lsl r8
   13ac8:	andeq	r3, r1, r0, asr r2
   13acc:	andeq	r3, r1, ip, asr r8
   13ad0:	andeq	r3, r1, r8, lsr #17
   13ad4:	strdeq	r3, [r1], -r4

00013ad8 <table_get@@Base>:
   13ad8:	push	{r4, lr}
   13adc:	bl	15b90 <table_get_cell_ptr@@Base>
   13ae0:	ldr	r0, [r0]
   13ae4:	pop	{r4, pc}

00013ae8 <table_get_bool@@Base>:
   13ae8:	push	{r4, lr}
   13aec:	bl	13ad8 <table_get@@Base>
   13af0:	ldrb	r0, [r0]
   13af4:	pop	{r4, pc}

00013af8 <table_get_int@@Base>:
   13af8:	push	{r4, lr}
   13afc:	bl	13ad8 <table_get@@Base>
   13b00:	ldr	r0, [r0]
   13b04:	pop	{r4, pc}

00013b08 <table_get_uint@@Base>:
   13b08:	push	{r4, lr}
   13b0c:	bl	13ad8 <table_get@@Base>
   13b10:	ldr	r0, [r0]
   13b14:	pop	{r4, pc}

00013b18 <table_get_int8@@Base>:
   13b18:	push	{r4, lr}
   13b1c:	bl	13ad8 <table_get@@Base>
   13b20:	ldrsb	r0, [r0]
   13b24:	pop	{r4, pc}

00013b28 <table_get_uint8@@Base>:
   13b28:	push	{r4, lr}
   13b2c:	bl	13ad8 <table_get@@Base>
   13b30:	ldrb	r0, [r0]
   13b34:	pop	{r4, pc}

00013b38 <table_get_int16@@Base>:
   13b38:	push	{r4, lr}
   13b3c:	bl	13ad8 <table_get@@Base>
   13b40:	ldrsh	r0, [r0]
   13b44:	pop	{r4, pc}

00013b48 <table_get_uint16@@Base>:
   13b48:	push	{r4, lr}
   13b4c:	bl	13ad8 <table_get@@Base>
   13b50:	ldrh	r0, [r0]
   13b54:	pop	{r4, pc}

00013b58 <table_get_int32@@Base>:
   13b58:	push	{r4, lr}
   13b5c:	bl	13ad8 <table_get@@Base>
   13b60:	ldr	r0, [r0]
   13b64:	pop	{r4, pc}

00013b68 <table_get_uint32@@Base>:
   13b68:	push	{r4, lr}
   13b6c:	bl	13ad8 <table_get@@Base>
   13b70:	ldr	r0, [r0]
   13b74:	pop	{r4, pc}

00013b78 <table_get_int64@@Base>:
   13b78:	push	{r4, lr}
   13b7c:	bl	13ad8 <table_get@@Base>
   13b80:	ldrd	r0, [r0]
   13b84:	pop	{r4, pc}

00013b88 <table_get_uint64@@Base>:
   13b88:	push	{r4, lr}
   13b8c:	bl	13ad8 <table_get@@Base>
   13b90:	ldrd	r0, [r0]
   13b94:	pop	{r4, pc}

00013b98 <table_get_short@@Base>:
   13b98:	push	{r4, lr}
   13b9c:	bl	13ad8 <table_get@@Base>
   13ba0:	ldrsh	r0, [r0]
   13ba4:	pop	{r4, pc}

00013ba8 <table_get_ushort@@Base>:
   13ba8:	push	{r4, lr}
   13bac:	bl	13ad8 <table_get@@Base>
   13bb0:	ldrh	r0, [r0]
   13bb4:	pop	{r4, pc}

00013bb8 <table_get_long@@Base>:
   13bb8:	push	{r4, lr}
   13bbc:	bl	13ad8 <table_get@@Base>
   13bc0:	ldr	r0, [r0]
   13bc4:	pop	{r4, pc}

00013bc8 <table_get_ulong@@Base>:
   13bc8:	push	{r4, lr}
   13bcc:	bl	13ad8 <table_get@@Base>
   13bd0:	ldr	r0, [r0]
   13bd4:	pop	{r4, pc}

00013bd8 <table_get_llong@@Base>:
   13bd8:	push	{r4, lr}
   13bdc:	bl	13ad8 <table_get@@Base>
   13be0:	ldrd	r0, [r0]
   13be4:	pop	{r4, pc}

00013be8 <table_get_ullong@@Base>:
   13be8:	push	{r4, lr}
   13bec:	bl	13ad8 <table_get@@Base>
   13bf0:	ldrd	r0, [r0]
   13bf4:	pop	{r4, pc}

00013bf8 <table_get_float@@Base>:
   13bf8:	push	{r4, lr}
   13bfc:	bl	13ad8 <table_get@@Base>
   13c00:	vldr	s0, [r0]
   13c04:	pop	{r4, pc}

00013c08 <table_get_double@@Base>:
   13c08:	push	{r4, lr}
   13c0c:	bl	13ad8 <table_get@@Base>
   13c10:	vldr	d0, [r0]
   13c14:	pop	{r4, pc}

00013c18 <table_get_ldouble@@Base>:
   13c18:	push	{r4, lr}
   13c1c:	bl	13ad8 <table_get@@Base>
   13c20:	vldr	d0, [r0]
   13c24:	pop	{r4, pc}

00013c28 <table_get_char@@Base>:
   13c28:	push	{r4, lr}
   13c2c:	bl	13ad8 <table_get@@Base>
   13c30:	ldrb	r0, [r0]
   13c34:	pop	{r4, pc}

00013c38 <table_get_uchar@@Base>:
   13c38:	push	{r4, lr}
   13c3c:	bl	13ad8 <table_get@@Base>
   13c40:	ldrb	r0, [r0]
   13c44:	pop	{r4, pc}

00013c48 <table_get_string@@Base>:
   13c48:	push	{r4, lr}
   13c4c:	bl	13ad8 <table_get@@Base>
   13c50:	pop	{r4, pc}

00013c54 <table_get_ptr@@Base>:
   13c54:	push	{r4, lr}
   13c58:	bl	13ad8 <table_get@@Base>
   13c5c:	pop	{r4, pc}

00013c60 <table_row_init@@Base>:
   13c60:	push	{r4, r5, r6, lr}
   13c64:	mov	r5, r1
   13c68:	ldr	r4, [r0, #16]
   13c6c:	ldr	r0, [r0, #12]
   13c70:	lsl	r0, r0, #2
   13c74:	bl	11bc0 <malloc@plt>
   13c78:	str	r0, [r4, r5, lsl #2]
   13c7c:	pop	{r4, r5, r6, pc}

00013c80 <table_row_destroy@@Base>:
   13c80:	push	{r4, r5, r6, r7, r8, lr}
   13c84:	mov	r6, r0
   13c88:	mov	r5, r1
   13c8c:	bl	12efc <table_get_column_length@@Base>
   13c90:	ldr	r8, [r6, #16]
   13c94:	subs	r7, r0, #0
   13c98:	ble	13cbc <table_row_destroy@@Base+0x3c>
   13c9c:	mov	r4, #0
   13ca0:	mov	r2, r4
   13ca4:	mov	r1, r5
   13ca8:	mov	r0, r6
   13cac:	bl	15bbc <table_cell_destroy@@Base>
   13cb0:	add	r4, r4, #1
   13cb4:	cmp	r7, r4
   13cb8:	bne	13ca0 <table_row_destroy@@Base+0x20>
   13cbc:	ldr	r0, [r8, r5, lsl #2]
   13cc0:	cmp	r0, #0
   13cc4:	popeq	{r4, r5, r6, r7, r8, pc}
   13cc8:	bl	11b90 <free@plt>
   13ccc:	pop	{r4, r5, r6, r7, r8, pc}

00013cd0 <table_get_row_length@@Base>:
   13cd0:	ldr	r0, [r0, #20]
   13cd4:	bx	lr

00013cd8 <table_add_row@@Base>:
   13cd8:	push	{r4, r5, r6, r7, r8, lr}
   13cdc:	mov	r5, r0
   13ce0:	ldr	r4, [r0, #24]
   13ce4:	mov	r1, r4
   13ce8:	ldr	r0, [r0, #20]
   13cec:	bl	15e18 <table_cell_nullify@@Base+0x218>
   13cf0:	cmp	r1, #0
   13cf4:	beq	13d60 <table_add_row@@Base+0x88>
   13cf8:	ldr	r7, [r5, #20]
   13cfc:	mov	r0, r5
   13d00:	bl	12efc <table_get_column_length@@Base>
   13d04:	mov	r6, r0
   13d08:	mov	r1, r7
   13d0c:	mov	r0, r5
   13d10:	bl	13c60 <table_row_init@@Base>
   13d14:	cmp	r6, #0
   13d18:	ble	13d3c <table_add_row@@Base+0x64>
   13d1c:	mov	r4, #0
   13d20:	mov	r2, r4
   13d24:	mov	r1, r7
   13d28:	mov	r0, r5
   13d2c:	bl	15ba8 <table_cell_init@@Base>
   13d30:	add	r4, r4, #1
   13d34:	cmp	r6, r4
   13d38:	bne	13d20 <table_add_row@@Base+0x48>
   13d3c:	mov	r3, #2
   13d40:	mvn	r2, #0
   13d44:	ldr	r1, [r5, #20]
   13d48:	mov	r0, r5
   13d4c:	bl	12e0c <table_notify@@Base>
   13d50:	ldr	r0, [r5, #20]
   13d54:	add	r3, r0, #1
   13d58:	str	r3, [r5, #20]
   13d5c:	pop	{r4, r5, r6, r7, r8, pc}
   13d60:	ldr	r1, [r5, #28]
   13d64:	add	r1, r4, r1
   13d68:	str	r1, [r5, #28]
   13d6c:	lsl	r1, r1, #2
   13d70:	ldr	r0, [r5, #16]
   13d74:	bl	11ba8 <realloc@plt>
   13d78:	str	r0, [r5, #16]
   13d7c:	b	13cf8 <table_add_row@@Base+0x20>

00013d80 <table_remove_row@@Base>:
   13d80:	push	{r4, r5, r6, r7, r8, lr}
   13d84:	mov	r5, r0
   13d88:	mov	r6, r1
   13d8c:	ldr	r7, [r0, #20]
   13d90:	bl	12efc <table_get_column_length@@Base>
   13d94:	subs	r8, r0, #0
   13d98:	ble	13de8 <table_remove_row@@Base+0x68>
   13d9c:	mov	r4, #0
   13da0:	b	13db0 <table_remove_row@@Base+0x30>
   13da4:	add	r4, r4, #1
   13da8:	cmp	r8, r4
   13dac:	beq	13de8 <table_remove_row@@Base+0x68>
   13db0:	mov	r1, r4
   13db4:	mov	r0, r5
   13db8:	bl	12f64 <table_get_column_data_type@@Base>
   13dbc:	cmp	r0, #23
   13dc0:	beq	13da4 <table_remove_row@@Base+0x24>
   13dc4:	mov	r2, r4
   13dc8:	mov	r1, r6
   13dcc:	mov	r0, r5
   13dd0:	bl	15b90 <table_get_cell_ptr@@Base>
   13dd4:	ldr	r0, [r0]
   13dd8:	cmp	r0, #0
   13ddc:	beq	13da4 <table_remove_row@@Base+0x24>
   13de0:	bl	11b90 <free@plt>
   13de4:	b	13da4 <table_remove_row@@Base+0x24>
   13de8:	lsl	r4, r6, #2
   13dec:	ldr	r3, [r5, #16]
   13df0:	ldr	r0, [r3, r6, lsl #2]
   13df4:	cmp	r0, #0
   13df8:	beq	13e00 <table_remove_row@@Base+0x80>
   13dfc:	bl	11b90 <free@plt>
   13e00:	sub	r3, r7, #1
   13e04:	cmp	r6, r3
   13e08:	bge	13e34 <table_remove_row@@Base+0xb4>
   13e0c:	mov	ip, r3
   13e10:	mov	r3, r6
   13e14:	ldr	r1, [r5, #16]
   13e18:	add	r2, r4, #4
   13e1c:	ldr	r0, [r1, r2]
   13e20:	str	r0, [r1, r4]
   13e24:	add	r3, r3, #1
   13e28:	mov	r4, r2
   13e2c:	cmp	ip, r3
   13e30:	bne	13e14 <table_remove_row@@Base+0x94>
   13e34:	ldr	r0, [r5, #20]
   13e38:	sub	r0, r0, #1
   13e3c:	str	r0, [r5, #20]
   13e40:	ldr	r4, [r5, #24]
   13e44:	mov	r1, r4
   13e48:	bl	15e18 <table_cell_nullify@@Base+0x218>
   13e4c:	cmp	r1, #0
   13e50:	beq	13e70 <table_remove_row@@Base+0xf0>
   13e54:	mov	r3, #4
   13e58:	mvn	r2, #0
   13e5c:	mov	r1, r6
   13e60:	mov	r0, r5
   13e64:	bl	12e0c <table_notify@@Base>
   13e68:	mov	r0, #0
   13e6c:	pop	{r4, r5, r6, r7, r8, pc}
   13e70:	ldr	r1, [r5, #28]
   13e74:	sub	r1, r1, r4
   13e78:	str	r1, [r5, #28]
   13e7c:	lsl	r1, r1, #2
   13e80:	ldr	r0, [r5, #16]
   13e84:	bl	11ba8 <realloc@plt>
   13e88:	str	r0, [r5, #16]
   13e8c:	b	13e54 <table_remove_row@@Base+0xd4>

00013e90 <table_get_row_ptr@@Base>:
   13e90:	ldr	r0, [r0, #16]
   13e94:	add	r0, r0, r1, lsl #2
   13e98:	bx	lr

00013e9c <table_set_row_ptr@@Base>:
   13e9c:	ldr	r3, [r0, #16]
   13ea0:	ldr	r2, [r2]
   13ea4:	str	r2, [r3, r1, lsl #2]
   13ea8:	bx	lr

00013eac <table_set@@Base>:
   13eac:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   13eb0:	mov	r5, r0
   13eb4:	mov	r9, r1
   13eb8:	mov	r6, r2
   13ebc:	mov	r7, r3
   13ec0:	ldr	r4, [sp, #32]
   13ec4:	bl	15b90 <table_get_cell_ptr@@Base>
   13ec8:	mov	r8, r0
   13ecc:	mov	r1, r6
   13ed0:	mov	r0, r5
   13ed4:	bl	13218 <table_get_col_ptr@@Base>
   13ed8:	cmp	r4, #23
   13edc:	ldrls	pc, [pc, r4, lsl #2]
   13ee0:	b	14504 <table_set@@Base+0x658>
   13ee4:	andeq	r3, r1, r0, lsl #31
   13ee8:			; <UNDEFINED> instruction: 0x00013fbc
   13eec:	strdeq	r3, [r1], -r8
   13ef0:	andeq	r4, r1, r4, lsr r0
   13ef4:	andeq	r4, r1, r0, ror r0
   13ef8:	andeq	r4, r1, ip, lsr #1
   13efc:	andeq	r4, r1, r8, ror #1
   13f00:	andeq	r4, r1, r4, lsr #2
   13f04:	andeq	r4, r1, r0, ror #2
   13f08:	andeq	r4, r1, r8, lsr #3
   13f0c:	andeq	r4, r1, ip, ror #3
   13f10:	andeq	r4, r1, r8, lsr #4
   13f14:	andeq	r4, r1, r4, ror #4
   13f18:	andeq	r4, r1, r0, lsr #5
   13f1c:	ldrdeq	r4, [r1], -ip
   13f20:	andeq	r4, r1, r0, lsr #6
   13f24:	andeq	r4, r1, r4, ror #6
   13f28:	andeq	r4, r1, r0, lsr #7
   13f2c:	andeq	r4, r1, r4, ror #7
   13f30:	andeq	r4, r1, r0, ror #8
   13f34:	muleq	r1, ip, r4
   13f38:	andeq	r4, r1, r8, lsr #8
   13f3c:	andeq	r3, r1, r4, asr #30
   13f40:	ldrdeq	r4, [r1], -r8
   13f44:	ldr	r3, [r0, #4]
   13f48:	cmp	r3, #22
   13f4c:	bne	141a0 <table_set@@Base+0x2f4>
   13f50:	ldr	r0, [r8]
   13f54:	cmp	r0, #0
   13f58:	beq	13f68 <table_set@@Base+0xbc>
   13f5c:	ldrb	r3, [r7]
   13f60:	strb	r3, [r0]
   13f64:	b	144e8 <table_set@@Base+0x63c>
   13f68:	mov	r0, #1
   13f6c:	bl	11bc0 <malloc@plt>
   13f70:	str	r0, [r8]
   13f74:	cmp	r0, #0
   13f78:	bne	13f5c <table_set@@Base+0xb0>
   13f7c:	b	141a0 <table_set@@Base+0x2f4>
   13f80:	ldr	r3, [r0, #4]
   13f84:	cmp	r3, #0
   13f88:	bne	141a0 <table_set@@Base+0x2f4>
   13f8c:	ldr	r0, [r8]
   13f90:	cmp	r0, #0
   13f94:	beq	13fa4 <table_set@@Base+0xf8>
   13f98:	ldr	r3, [r7]
   13f9c:	str	r3, [r0]
   13fa0:	b	144e8 <table_set@@Base+0x63c>
   13fa4:	mov	r0, #4
   13fa8:	bl	11bc0 <malloc@plt>
   13fac:	str	r0, [r8]
   13fb0:	cmp	r0, #0
   13fb4:	bne	13f98 <table_set@@Base+0xec>
   13fb8:	b	141a0 <table_set@@Base+0x2f4>
   13fbc:	ldr	r3, [r0, #4]
   13fc0:	cmp	r3, #1
   13fc4:	bne	141a0 <table_set@@Base+0x2f4>
   13fc8:	ldr	r0, [r8]
   13fcc:	cmp	r0, #0
   13fd0:	beq	13fe0 <table_set@@Base+0x134>
   13fd4:	ldr	r3, [r7]
   13fd8:	str	r3, [r0]
   13fdc:	b	144e8 <table_set@@Base+0x63c>
   13fe0:	mov	r0, #4
   13fe4:	bl	11bc0 <malloc@plt>
   13fe8:	str	r0, [r8]
   13fec:	cmp	r0, #0
   13ff0:	bne	13fd4 <table_set@@Base+0x128>
   13ff4:	b	141a0 <table_set@@Base+0x2f4>
   13ff8:	ldr	r3, [r0, #4]
   13ffc:	cmp	r3, #2
   14000:	bne	141a0 <table_set@@Base+0x2f4>
   14004:	ldr	r0, [r8]
   14008:	cmp	r0, #0
   1400c:	beq	1401c <table_set@@Base+0x170>
   14010:	ldrb	r3, [r7]
   14014:	strb	r3, [r0]
   14018:	b	144e8 <table_set@@Base+0x63c>
   1401c:	mov	r0, #1
   14020:	bl	11bc0 <malloc@plt>
   14024:	str	r0, [r8]
   14028:	cmp	r0, #0
   1402c:	bne	14010 <table_set@@Base+0x164>
   14030:	b	141a0 <table_set@@Base+0x2f4>
   14034:	ldr	r3, [r0, #4]
   14038:	cmp	r3, #3
   1403c:	bne	141a0 <table_set@@Base+0x2f4>
   14040:	ldr	r0, [r8]
   14044:	cmp	r0, #0
   14048:	beq	14058 <table_set@@Base+0x1ac>
   1404c:	ldrb	r3, [r7]
   14050:	strb	r3, [r0]
   14054:	b	144e8 <table_set@@Base+0x63c>
   14058:	mov	r0, #1
   1405c:	bl	11bc0 <malloc@plt>
   14060:	str	r0, [r8]
   14064:	cmp	r0, #0
   14068:	bne	1404c <table_set@@Base+0x1a0>
   1406c:	b	141a0 <table_set@@Base+0x2f4>
   14070:	ldr	r3, [r0, #4]
   14074:	cmp	r3, #4
   14078:	bne	141a0 <table_set@@Base+0x2f4>
   1407c:	ldr	r0, [r8]
   14080:	cmp	r0, #0
   14084:	beq	14094 <table_set@@Base+0x1e8>
   14088:	ldrh	r3, [r7]
   1408c:	strh	r3, [r0]
   14090:	b	144e8 <table_set@@Base+0x63c>
   14094:	mov	r0, #2
   14098:	bl	11bc0 <malloc@plt>
   1409c:	str	r0, [r8]
   140a0:	cmp	r0, #0
   140a4:	bne	14088 <table_set@@Base+0x1dc>
   140a8:	b	141a0 <table_set@@Base+0x2f4>
   140ac:	ldr	r3, [r0, #4]
   140b0:	cmp	r3, #5
   140b4:	bne	141a0 <table_set@@Base+0x2f4>
   140b8:	ldr	r0, [r8]
   140bc:	cmp	r0, #0
   140c0:	beq	140d0 <table_set@@Base+0x224>
   140c4:	ldrh	r3, [r7]
   140c8:	strh	r3, [r0]
   140cc:	b	144e8 <table_set@@Base+0x63c>
   140d0:	mov	r0, #2
   140d4:	bl	11bc0 <malloc@plt>
   140d8:	str	r0, [r8]
   140dc:	cmp	r0, #0
   140e0:	bne	140c4 <table_set@@Base+0x218>
   140e4:	b	141a0 <table_set@@Base+0x2f4>
   140e8:	ldr	r3, [r0, #4]
   140ec:	cmp	r3, #6
   140f0:	bne	141a0 <table_set@@Base+0x2f4>
   140f4:	ldr	r0, [r8]
   140f8:	cmp	r0, #0
   140fc:	beq	1410c <table_set@@Base+0x260>
   14100:	ldr	r3, [r7]
   14104:	str	r3, [r0]
   14108:	b	144e8 <table_set@@Base+0x63c>
   1410c:	mov	r0, #4
   14110:	bl	11bc0 <malloc@plt>
   14114:	str	r0, [r8]
   14118:	cmp	r0, #0
   1411c:	bne	14100 <table_set@@Base+0x254>
   14120:	b	141a0 <table_set@@Base+0x2f4>
   14124:	ldr	r3, [r0, #4]
   14128:	cmp	r3, #7
   1412c:	bne	141a0 <table_set@@Base+0x2f4>
   14130:	ldr	r0, [r8]
   14134:	cmp	r0, #0
   14138:	beq	14148 <table_set@@Base+0x29c>
   1413c:	ldr	r3, [r7]
   14140:	str	r3, [r0]
   14144:	b	144e8 <table_set@@Base+0x63c>
   14148:	mov	r0, #4
   1414c:	bl	11bc0 <malloc@plt>
   14150:	str	r0, [r8]
   14154:	cmp	r0, #0
   14158:	bne	1413c <table_set@@Base+0x290>
   1415c:	b	141a0 <table_set@@Base+0x2f4>
   14160:	ldr	r3, [r0, #4]
   14164:	cmp	r3, #8
   14168:	bne	141a0 <table_set@@Base+0x2f4>
   1416c:	ldr	r0, [r8]
   14170:	cmp	r0, #0
   14174:	beq	1418c <table_set@@Base+0x2e0>
   14178:	ldr	r2, [r7]
   1417c:	ldr	r3, [r7, #4]
   14180:	str	r2, [r0]
   14184:	str	r3, [r0, #4]
   14188:	b	144e8 <table_set@@Base+0x63c>
   1418c:	mov	r0, #8
   14190:	bl	11bc0 <malloc@plt>
   14194:	str	r0, [r8]
   14198:	cmp	r0, #0
   1419c:	bne	14178 <table_set@@Base+0x2cc>
   141a0:	mvn	r0, #0
   141a4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   141a8:	ldr	r3, [r0, #4]
   141ac:	cmp	r3, #9
   141b0:	bne	141a0 <table_set@@Base+0x2f4>
   141b4:	ldr	r0, [r8]
   141b8:	cmp	r0, #0
   141bc:	beq	141d4 <table_set@@Base+0x328>
   141c0:	ldr	r2, [r7]
   141c4:	ldr	r3, [r7, #4]
   141c8:	str	r2, [r0]
   141cc:	str	r3, [r0, #4]
   141d0:	b	144e8 <table_set@@Base+0x63c>
   141d4:	mov	r0, #8
   141d8:	bl	11bc0 <malloc@plt>
   141dc:	str	r0, [r8]
   141e0:	cmp	r0, #0
   141e4:	bne	141c0 <table_set@@Base+0x314>
   141e8:	b	141a0 <table_set@@Base+0x2f4>
   141ec:	ldr	r3, [r0, #4]
   141f0:	cmp	r3, #10
   141f4:	bne	141a0 <table_set@@Base+0x2f4>
   141f8:	ldr	r0, [r8]
   141fc:	cmp	r0, #0
   14200:	beq	14210 <table_set@@Base+0x364>
   14204:	ldrh	r3, [r7]
   14208:	strh	r3, [r0]
   1420c:	b	144e8 <table_set@@Base+0x63c>
   14210:	mov	r0, #2
   14214:	bl	11bc0 <malloc@plt>
   14218:	str	r0, [r8]
   1421c:	cmp	r0, #0
   14220:	bne	14204 <table_set@@Base+0x358>
   14224:	b	141a0 <table_set@@Base+0x2f4>
   14228:	ldr	r3, [r0, #4]
   1422c:	cmp	r3, #11
   14230:	bne	141a0 <table_set@@Base+0x2f4>
   14234:	ldr	r0, [r8]
   14238:	cmp	r0, #0
   1423c:	beq	1424c <table_set@@Base+0x3a0>
   14240:	ldrh	r3, [r7]
   14244:	strh	r3, [r0]
   14248:	b	144e8 <table_set@@Base+0x63c>
   1424c:	mov	r0, #2
   14250:	bl	11bc0 <malloc@plt>
   14254:	str	r0, [r8]
   14258:	cmp	r0, #0
   1425c:	bne	14240 <table_set@@Base+0x394>
   14260:	b	141a0 <table_set@@Base+0x2f4>
   14264:	ldr	r3, [r0, #4]
   14268:	cmp	r3, #12
   1426c:	bne	141a0 <table_set@@Base+0x2f4>
   14270:	ldr	r0, [r8]
   14274:	cmp	r0, #0
   14278:	beq	14288 <table_set@@Base+0x3dc>
   1427c:	ldr	r3, [r7]
   14280:	str	r3, [r0]
   14284:	b	144e8 <table_set@@Base+0x63c>
   14288:	mov	r0, #4
   1428c:	bl	11bc0 <malloc@plt>
   14290:	str	r0, [r8]
   14294:	cmp	r0, #0
   14298:	bne	1427c <table_set@@Base+0x3d0>
   1429c:	b	141a0 <table_set@@Base+0x2f4>
   142a0:	ldr	r3, [r0, #4]
   142a4:	cmp	r3, #13
   142a8:	bne	141a0 <table_set@@Base+0x2f4>
   142ac:	ldr	r0, [r8]
   142b0:	cmp	r0, #0
   142b4:	beq	142c4 <table_set@@Base+0x418>
   142b8:	ldr	r3, [r7]
   142bc:	str	r3, [r0]
   142c0:	b	144e8 <table_set@@Base+0x63c>
   142c4:	mov	r0, #4
   142c8:	bl	11bc0 <malloc@plt>
   142cc:	str	r0, [r8]
   142d0:	cmp	r0, #0
   142d4:	bne	142b8 <table_set@@Base+0x40c>
   142d8:	b	141a0 <table_set@@Base+0x2f4>
   142dc:	ldr	r3, [r0, #4]
   142e0:	cmp	r3, #14
   142e4:	bne	141a0 <table_set@@Base+0x2f4>
   142e8:	ldr	r0, [r8]
   142ec:	cmp	r0, #0
   142f0:	beq	14308 <table_set@@Base+0x45c>
   142f4:	ldr	r2, [r7]
   142f8:	ldr	r3, [r7, #4]
   142fc:	str	r2, [r0]
   14300:	str	r3, [r0, #4]
   14304:	b	144e8 <table_set@@Base+0x63c>
   14308:	mov	r0, #8
   1430c:	bl	11bc0 <malloc@plt>
   14310:	str	r0, [r8]
   14314:	cmp	r0, #0
   14318:	bne	142f4 <table_set@@Base+0x448>
   1431c:	b	141a0 <table_set@@Base+0x2f4>
   14320:	ldr	r3, [r0, #4]
   14324:	cmp	r3, #15
   14328:	bne	141a0 <table_set@@Base+0x2f4>
   1432c:	ldr	r0, [r8]
   14330:	cmp	r0, #0
   14334:	beq	1434c <table_set@@Base+0x4a0>
   14338:	ldr	r2, [r7]
   1433c:	ldr	r3, [r7, #4]
   14340:	str	r2, [r0]
   14344:	str	r3, [r0, #4]
   14348:	b	144e8 <table_set@@Base+0x63c>
   1434c:	mov	r0, #8
   14350:	bl	11bc0 <malloc@plt>
   14354:	str	r0, [r8]
   14358:	cmp	r0, #0
   1435c:	bne	14338 <table_set@@Base+0x48c>
   14360:	b	141a0 <table_set@@Base+0x2f4>
   14364:	ldr	r3, [r0, #4]
   14368:	cmp	r3, #16
   1436c:	bne	141a0 <table_set@@Base+0x2f4>
   14370:	ldr	r0, [r8]
   14374:	cmp	r0, #0
   14378:	beq	14388 <table_set@@Base+0x4dc>
   1437c:	ldr	r3, [r7]
   14380:	str	r3, [r0]
   14384:	b	144e8 <table_set@@Base+0x63c>
   14388:	mov	r0, #4
   1438c:	bl	11bc0 <malloc@plt>
   14390:	str	r0, [r8]
   14394:	cmp	r0, #0
   14398:	bne	1437c <table_set@@Base+0x4d0>
   1439c:	b	141a0 <table_set@@Base+0x2f4>
   143a0:	ldr	r3, [r0, #4]
   143a4:	cmp	r3, #17
   143a8:	bne	141a0 <table_set@@Base+0x2f4>
   143ac:	ldr	r0, [r8]
   143b0:	cmp	r0, #0
   143b4:	beq	143cc <table_set@@Base+0x520>
   143b8:	ldr	r2, [r7]
   143bc:	ldr	r3, [r7, #4]
   143c0:	str	r2, [r0]
   143c4:	str	r3, [r0, #4]
   143c8:	b	144e8 <table_set@@Base+0x63c>
   143cc:	mov	r0, #8
   143d0:	bl	11bc0 <malloc@plt>
   143d4:	str	r0, [r8]
   143d8:	cmp	r0, #0
   143dc:	bne	143b8 <table_set@@Base+0x50c>
   143e0:	b	141a0 <table_set@@Base+0x2f4>
   143e4:	ldr	r3, [r0, #4]
   143e8:	cmp	r3, #18
   143ec:	bne	141a0 <table_set@@Base+0x2f4>
   143f0:	ldr	r0, [r8]
   143f4:	cmp	r0, #0
   143f8:	beq	14410 <table_set@@Base+0x564>
   143fc:	ldr	r2, [r7]
   14400:	ldr	r3, [r7, #4]
   14404:	str	r2, [r0]
   14408:	str	r3, [r0, #4]
   1440c:	b	144e8 <table_set@@Base+0x63c>
   14410:	mov	r0, #8
   14414:	bl	11bc0 <malloc@plt>
   14418:	str	r0, [r8]
   1441c:	cmp	r0, #0
   14420:	bne	143fc <table_set@@Base+0x550>
   14424:	b	141a0 <table_set@@Base+0x2f4>
   14428:	ldr	r3, [r0, #4]
   1442c:	cmp	r3, #21
   14430:	bne	141a0 <table_set@@Base+0x2f4>
   14434:	mov	r0, r7
   14438:	bl	11be4 <strlen@plt>
   1443c:	add	r1, r0, #1
   14440:	ldr	r0, [r8]
   14444:	bl	11ba8 <realloc@plt>
   14448:	str	r0, [r8]
   1444c:	cmp	r0, #0
   14450:	beq	141a0 <table_set@@Base+0x2f4>
   14454:	mov	r1, r7
   14458:	bl	11bb4 <strcpy@plt>
   1445c:	b	144e8 <table_set@@Base+0x63c>
   14460:	ldr	r3, [r0, #4]
   14464:	cmp	r3, #19
   14468:	bne	141a0 <table_set@@Base+0x2f4>
   1446c:	ldr	r0, [r8]
   14470:	cmp	r0, #0
   14474:	beq	14484 <table_set@@Base+0x5d8>
   14478:	ldrb	r3, [r7]
   1447c:	strb	r3, [r0]
   14480:	b	144e8 <table_set@@Base+0x63c>
   14484:	mov	r0, #1
   14488:	bl	11bc0 <malloc@plt>
   1448c:	str	r0, [r8]
   14490:	cmp	r0, #0
   14494:	bne	14478 <table_set@@Base+0x5cc>
   14498:	b	141a0 <table_set@@Base+0x2f4>
   1449c:	ldr	r3, [r0, #4]
   144a0:	cmp	r3, #20
   144a4:	bne	141a0 <table_set@@Base+0x2f4>
   144a8:	ldr	r0, [r8]
   144ac:	cmp	r0, #0
   144b0:	beq	144c0 <table_set@@Base+0x614>
   144b4:	ldrb	r3, [r7]
   144b8:	strb	r3, [r0]
   144bc:	b	144e8 <table_set@@Base+0x63c>
   144c0:	mov	r0, #1
   144c4:	bl	11bc0 <malloc@plt>
   144c8:	str	r0, [r8]
   144cc:	cmp	r0, #0
   144d0:	bne	144b4 <table_set@@Base+0x608>
   144d4:	b	141a0 <table_set@@Base+0x2f4>
   144d8:	ldr	r3, [r0, #4]
   144dc:	cmp	r3, #23
   144e0:	bne	141a0 <table_set@@Base+0x2f4>
   144e4:	str	r7, [r8]
   144e8:	mov	r3, #1
   144ec:	mov	r2, r6
   144f0:	mov	r1, r9
   144f4:	mov	r0, r5
   144f8:	bl	12e0c <table_notify@@Base>
   144fc:	mov	r0, #0
   14500:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14504:	mvn	r0, #0
   14508:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}

0001450c <table_set_bool@@Base>:
   1450c:	push	{lr}		; (str lr, [sp, #-4]!)
   14510:	sub	sp, sp, #20
   14514:	add	ip, sp, #16
   14518:	strb	r3, [ip, #-1]!
   1451c:	mov	r3, #22
   14520:	str	r3, [sp]
   14524:	mov	r3, ip
   14528:	bl	13eac <table_set@@Base>
   1452c:	add	sp, sp, #20
   14530:	pop	{pc}		; (ldr pc, [sp], #4)

00014534 <table_set_int@@Base>:
   14534:	push	{lr}		; (str lr, [sp, #-4]!)
   14538:	sub	sp, sp, #20
   1453c:	add	ip, sp, #16
   14540:	str	r3, [ip, #-4]!
   14544:	mov	r3, #0
   14548:	str	r3, [sp]
   1454c:	mov	r3, ip
   14550:	bl	13eac <table_set@@Base>
   14554:	add	sp, sp, #20
   14558:	pop	{pc}		; (ldr pc, [sp], #4)

0001455c <table_set_uint@@Base>:
   1455c:	push	{lr}		; (str lr, [sp, #-4]!)
   14560:	sub	sp, sp, #20
   14564:	add	ip, sp, #16
   14568:	str	r3, [ip, #-4]!
   1456c:	mov	r3, #1
   14570:	str	r3, [sp]
   14574:	mov	r3, ip
   14578:	bl	13eac <table_set@@Base>
   1457c:	add	sp, sp, #20
   14580:	pop	{pc}		; (ldr pc, [sp], #4)

00014584 <table_set_int8@@Base>:
   14584:	push	{lr}		; (str lr, [sp, #-4]!)
   14588:	sub	sp, sp, #20
   1458c:	add	ip, sp, #16
   14590:	strb	r3, [ip, #-1]!
   14594:	mov	r3, #2
   14598:	str	r3, [sp]
   1459c:	mov	r3, ip
   145a0:	bl	13eac <table_set@@Base>
   145a4:	add	sp, sp, #20
   145a8:	pop	{pc}		; (ldr pc, [sp], #4)

000145ac <table_set_uint8@@Base>:
   145ac:	push	{lr}		; (str lr, [sp, #-4]!)
   145b0:	sub	sp, sp, #20
   145b4:	add	ip, sp, #16
   145b8:	strb	r3, [ip, #-1]!
   145bc:	mov	r3, #3
   145c0:	str	r3, [sp]
   145c4:	mov	r3, ip
   145c8:	bl	13eac <table_set@@Base>
   145cc:	add	sp, sp, #20
   145d0:	pop	{pc}		; (ldr pc, [sp], #4)

000145d4 <table_set_int16@@Base>:
   145d4:	push	{lr}		; (str lr, [sp, #-4]!)
   145d8:	sub	sp, sp, #20
   145dc:	add	ip, sp, #16
   145e0:	strh	r3, [ip, #-2]!
   145e4:	mov	r3, #4
   145e8:	str	r3, [sp]
   145ec:	mov	r3, ip
   145f0:	bl	13eac <table_set@@Base>
   145f4:	add	sp, sp, #20
   145f8:	pop	{pc}		; (ldr pc, [sp], #4)

000145fc <table_set_uint16@@Base>:
   145fc:	push	{lr}		; (str lr, [sp, #-4]!)
   14600:	sub	sp, sp, #20
   14604:	add	ip, sp, #16
   14608:	strh	r3, [ip, #-2]!
   1460c:	mov	r3, #5
   14610:	str	r3, [sp]
   14614:	mov	r3, ip
   14618:	bl	13eac <table_set@@Base>
   1461c:	add	sp, sp, #20
   14620:	pop	{pc}		; (ldr pc, [sp], #4)

00014624 <table_set_int32@@Base>:
   14624:	push	{lr}		; (str lr, [sp, #-4]!)
   14628:	sub	sp, sp, #20
   1462c:	add	ip, sp, #16
   14630:	str	r3, [ip, #-4]!
   14634:	mov	r3, #6
   14638:	str	r3, [sp]
   1463c:	mov	r3, ip
   14640:	bl	13eac <table_set@@Base>
   14644:	add	sp, sp, #20
   14648:	pop	{pc}		; (ldr pc, [sp], #4)

0001464c <table_set_uint32@@Base>:
   1464c:	push	{lr}		; (str lr, [sp, #-4]!)
   14650:	sub	sp, sp, #20
   14654:	add	ip, sp, #16
   14658:	str	r3, [ip, #-4]!
   1465c:	mov	r3, #7
   14660:	str	r3, [sp]
   14664:	mov	r3, ip
   14668:	bl	13eac <table_set@@Base>
   1466c:	add	sp, sp, #20
   14670:	pop	{pc}		; (ldr pc, [sp], #4)

00014674 <table_set_int64@@Base>:
   14674:	push	{lr}		; (str lr, [sp, #-4]!)
   14678:	sub	sp, sp, #12
   1467c:	mov	r3, #8
   14680:	str	r3, [sp]
   14684:	add	r3, sp, #16
   14688:	bl	13eac <table_set@@Base>
   1468c:	add	sp, sp, #12
   14690:	pop	{pc}		; (ldr pc, [sp], #4)

00014694 <table_set_uint64@@Base>:
   14694:	push	{lr}		; (str lr, [sp, #-4]!)
   14698:	sub	sp, sp, #12
   1469c:	mov	r3, #9
   146a0:	str	r3, [sp]
   146a4:	add	r3, sp, #16
   146a8:	bl	13eac <table_set@@Base>
   146ac:	add	sp, sp, #12
   146b0:	pop	{pc}		; (ldr pc, [sp], #4)

000146b4 <table_set_short@@Base>:
   146b4:	push	{lr}		; (str lr, [sp, #-4]!)
   146b8:	sub	sp, sp, #20
   146bc:	add	ip, sp, #16
   146c0:	strh	r3, [ip, #-2]!
   146c4:	mov	r3, #10
   146c8:	str	r3, [sp]
   146cc:	mov	r3, ip
   146d0:	bl	13eac <table_set@@Base>
   146d4:	add	sp, sp, #20
   146d8:	pop	{pc}		; (ldr pc, [sp], #4)

000146dc <table_set_ushort@@Base>:
   146dc:	push	{lr}		; (str lr, [sp, #-4]!)
   146e0:	sub	sp, sp, #20
   146e4:	add	ip, sp, #16
   146e8:	strh	r3, [ip, #-2]!
   146ec:	mov	r3, #11
   146f0:	str	r3, [sp]
   146f4:	mov	r3, ip
   146f8:	bl	13eac <table_set@@Base>
   146fc:	add	sp, sp, #20
   14700:	pop	{pc}		; (ldr pc, [sp], #4)

00014704 <table_set_long@@Base>:
   14704:	push	{lr}		; (str lr, [sp, #-4]!)
   14708:	sub	sp, sp, #20
   1470c:	add	ip, sp, #16
   14710:	str	r3, [ip, #-4]!
   14714:	mov	r3, #12
   14718:	str	r3, [sp]
   1471c:	mov	r3, ip
   14720:	bl	13eac <table_set@@Base>
   14724:	add	sp, sp, #20
   14728:	pop	{pc}		; (ldr pc, [sp], #4)

0001472c <table_set_ulong@@Base>:
   1472c:	push	{lr}		; (str lr, [sp, #-4]!)
   14730:	sub	sp, sp, #20
   14734:	add	ip, sp, #16
   14738:	str	r3, [ip, #-4]!
   1473c:	mov	r3, #13
   14740:	str	r3, [sp]
   14744:	mov	r3, ip
   14748:	bl	13eac <table_set@@Base>
   1474c:	add	sp, sp, #20
   14750:	pop	{pc}		; (ldr pc, [sp], #4)

00014754 <table_set_llong@@Base>:
   14754:	push	{lr}		; (str lr, [sp, #-4]!)
   14758:	sub	sp, sp, #12
   1475c:	mov	r3, #14
   14760:	str	r3, [sp]
   14764:	add	r3, sp, #16
   14768:	bl	13eac <table_set@@Base>
   1476c:	add	sp, sp, #12
   14770:	pop	{pc}		; (ldr pc, [sp], #4)

00014774 <table_set_ullong@@Base>:
   14774:	push	{lr}		; (str lr, [sp, #-4]!)
   14778:	sub	sp, sp, #12
   1477c:	mov	r3, #15
   14780:	str	r3, [sp]
   14784:	add	r3, sp, #16
   14788:	bl	13eac <table_set@@Base>
   1478c:	add	sp, sp, #12
   14790:	pop	{pc}		; (ldr pc, [sp], #4)

00014794 <table_set_float@@Base>:
   14794:	push	{lr}		; (str lr, [sp, #-4]!)
   14798:	sub	sp, sp, #20
   1479c:	add	r3, sp, #16
   147a0:	vstmdb	r3!, {s0}
   147a4:	mov	ip, #16
   147a8:	str	ip, [sp]
   147ac:	bl	13eac <table_set@@Base>
   147b0:	add	sp, sp, #20
   147b4:	pop	{pc}		; (ldr pc, [sp], #4)

000147b8 <table_set_double@@Base>:
   147b8:	push	{lr}		; (str lr, [sp, #-4]!)
   147bc:	sub	sp, sp, #20
   147c0:	add	r3, sp, #16
   147c4:	vstmdb	r3!, {d0}
   147c8:	mov	ip, #17
   147cc:	str	ip, [sp]
   147d0:	bl	13eac <table_set@@Base>
   147d4:	add	sp, sp, #20
   147d8:	pop	{pc}		; (ldr pc, [sp], #4)

000147dc <table_set_ldouble@@Base>:
   147dc:	push	{lr}		; (str lr, [sp, #-4]!)
   147e0:	sub	sp, sp, #20
   147e4:	add	r3, sp, #16
   147e8:	vstmdb	r3!, {d0}
   147ec:	mov	ip, #18
   147f0:	str	ip, [sp]
   147f4:	bl	13eac <table_set@@Base>
   147f8:	add	sp, sp, #20
   147fc:	pop	{pc}		; (ldr pc, [sp], #4)

00014800 <table_set_string@@Base>:
   14800:	push	{lr}		; (str lr, [sp, #-4]!)
   14804:	sub	sp, sp, #12
   14808:	mov	ip, #21
   1480c:	str	ip, [sp]
   14810:	bl	13eac <table_set@@Base>
   14814:	add	sp, sp, #12
   14818:	pop	{pc}		; (ldr pc, [sp], #4)

0001481c <table_set_char@@Base>:
   1481c:	push	{lr}		; (str lr, [sp, #-4]!)
   14820:	sub	sp, sp, #20
   14824:	add	ip, sp, #16
   14828:	strb	r3, [ip, #-1]!
   1482c:	mov	r3, #19
   14830:	str	r3, [sp]
   14834:	mov	r3, ip
   14838:	bl	13eac <table_set@@Base>
   1483c:	add	sp, sp, #20
   14840:	pop	{pc}		; (ldr pc, [sp], #4)

00014844 <table_set_uchar@@Base>:
   14844:	push	{lr}		; (str lr, [sp, #-4]!)
   14848:	sub	sp, sp, #20
   1484c:	add	ip, sp, #16
   14850:	strb	r3, [ip, #-1]!
   14854:	mov	r3, #20
   14858:	str	r3, [sp]
   1485c:	mov	r3, ip
   14860:	bl	13eac <table_set@@Base>
   14864:	add	sp, sp, #20
   14868:	pop	{pc}		; (ldr pc, [sp], #4)

0001486c <table_set_ptr@@Base>:
   1486c:	push	{lr}		; (str lr, [sp, #-4]!)
   14870:	sub	sp, sp, #12
   14874:	mov	ip, #23
   14878:	str	ip, [sp]
   1487c:	bl	13eac <table_set@@Base>
   14880:	add	sp, sp, #12
   14884:	pop	{pc}		; (ldr pc, [sp], #4)

00014888 <table_serialize@@Base>:
   14888:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1488c:	mov	r6, r0
   14890:	mov	r5, r1
   14894:	bl	13cd0 <table_get_row_length@@Base>
   14898:	mov	r8, r0
   1489c:	mov	r0, r6
   148a0:	bl	12efc <table_get_column_length@@Base>
   148a4:	mov	r7, r0
   148a8:	str	r0, [r5]
   148ac:	ldr	r3, [r6, #8]
   148b0:	str	r3, [r5, #4]
   148b4:	add	r5, r5, #8
   148b8:	cmp	r0, #0
   148bc:	ble	1490c <table_serialize@@Base+0x84>
   148c0:	mov	r4, #0
   148c4:	mov	r1, r4
   148c8:	mov	r0, r6
   148cc:	bl	13208 <table_get_column_name@@Base>
   148d0:	mov	sl, r0
   148d4:	bl	11be4 <strlen@plt>
   148d8:	add	r9, r0, #1
   148dc:	mov	r1, r4
   148e0:	mov	r0, r6
   148e4:	bl	12f64 <table_get_column_data_type@@Base>
   148e8:	str	r0, [r5], #4
   148ec:	mov	r2, r9
   148f0:	mov	r1, sl
   148f4:	mov	r0, r5
   148f8:	bl	11c14 <strncpy@plt>
   148fc:	add	r5, r5, r9
   14900:	add	r4, r4, #1
   14904:	cmp	r7, r4
   14908:	bne	148c4 <table_serialize@@Base+0x3c>
   1490c:	str	r8, [r5]
   14910:	ldr	r3, [r6, #24]
   14914:	str	r3, [r5, #4]
   14918:	add	r5, r5, #8
   1491c:	cmp	r8, #0
   14920:	movgt	r9, #0
   14924:	bgt	14ccc <table_serialize@@Base+0x444>
   14928:	ldr	r3, [r6, #32]
   1492c:	str	r3, [r5]
   14930:	ldr	r3, [r6, #48]	; 0x30
   14934:	str	r3, [r5, #4]
   14938:	ldr	r3, [r6, #32]
   1493c:	cmp	r3, #0
   14940:	pople	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14944:	add	r5, r5, #20
   14948:	mov	r3, #0
   1494c:	ldr	r2, [r6, #36]	; 0x24
   14950:	ldr	r2, [r2, r3, lsl #2]
   14954:	str	r2, [r5, #-12]
   14958:	ldr	r2, [r6, #40]	; 0x28
   1495c:	ldr	r2, [r2, r3, lsl #2]
   14960:	str	r2, [r5, #-8]
   14964:	ldr	r2, [r6, #44]	; 0x2c
   14968:	ldr	r2, [r2, r3, lsl #2]
   1496c:	str	r2, [r5, #-4]
   14970:	add	r3, r3, #1
   14974:	add	r5, r5, #12
   14978:	ldr	r2, [r6, #32]
   1497c:	cmp	r2, r3
   14980:	bgt	1494c <table_serialize@@Base+0xc4>
   14984:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14988:	mov	r2, r4
   1498c:	mov	r1, r9
   14990:	mov	r0, r6
   14994:	bl	13ad8 <table_get@@Base>
   14998:	ldrb	r3, [r0]
   1499c:	strb	r3, [r5], #1
   149a0:	add	r4, r4, #1
   149a4:	cmp	r7, r4
   149a8:	beq	14cc0 <table_serialize@@Base+0x438>
   149ac:	mov	r1, r4
   149b0:	mov	r0, r6
   149b4:	bl	12f64 <table_get_column_data_type@@Base>
   149b8:	cmp	r0, #23
   149bc:	ldrls	pc, [pc, r0, lsl #2]
   149c0:	b	149a0 <table_serialize@@Base+0x118>
   149c4:	andeq	r4, r1, r4, lsr #20
   149c8:	andeq	r4, r1, r0, asr #20
   149cc:	andeq	r4, r1, ip, asr sl
   149d0:	andeq	r4, r1, r8, ror sl
   149d4:	muleq	r1, r4, sl
   149d8:			; <UNDEFINED> instruction: 0x00014ab0
   149dc:	andeq	r4, r1, ip, asr #21
   149e0:	andeq	r4, r1, r8, ror #21
   149e4:	andeq	r4, r1, r4, lsl #22
   149e8:	andeq	r4, r1, r0, lsr #22
   149ec:	andeq	r4, r1, ip, lsr fp
   149f0:	andeq	r4, r1, r8, asr fp
   149f4:	andeq	r4, r1, r4, ror fp
   149f8:	muleq	r1, r0, fp
   149fc:	andeq	r4, r1, ip, lsr #23
   14a00:	andeq	r4, r1, r8, asr #23
   14a04:	andeq	r4, r1, r4, ror #23
   14a08:	andeq	r4, r1, r0, lsl #24
   14a0c:	andeq	r4, r1, ip, lsl ip
   14a10:	andeq	r4, r1, ip, ror #24
   14a14:	andeq	r4, r1, r8, lsl #25
   14a18:	andeq	r4, r1, r8, lsr ip
   14a1c:	andeq	r4, r1, r8, lsl #19
   14a20:	andeq	r4, r1, r4, lsr #25
   14a24:	mov	r2, r4
   14a28:	mov	r1, r9
   14a2c:	mov	r0, r6
   14a30:	bl	13ad8 <table_get@@Base>
   14a34:	ldr	r3, [r0]
   14a38:	str	r3, [r5], #4
   14a3c:	b	149a0 <table_serialize@@Base+0x118>
   14a40:	mov	r2, r4
   14a44:	mov	r1, r9
   14a48:	mov	r0, r6
   14a4c:	bl	13ad8 <table_get@@Base>
   14a50:	ldr	r3, [r0]
   14a54:	str	r3, [r5], #4
   14a58:	b	149a0 <table_serialize@@Base+0x118>
   14a5c:	mov	r2, r4
   14a60:	mov	r1, r9
   14a64:	mov	r0, r6
   14a68:	bl	13ad8 <table_get@@Base>
   14a6c:	ldrsb	r3, [r0]
   14a70:	strb	r3, [r5], #1
   14a74:	b	149a0 <table_serialize@@Base+0x118>
   14a78:	mov	r2, r4
   14a7c:	mov	r1, r9
   14a80:	mov	r0, r6
   14a84:	bl	13ad8 <table_get@@Base>
   14a88:	ldrb	r3, [r0]
   14a8c:	strb	r3, [r5], #1
   14a90:	b	149a0 <table_serialize@@Base+0x118>
   14a94:	mov	r2, r4
   14a98:	mov	r1, r9
   14a9c:	mov	r0, r6
   14aa0:	bl	13ad8 <table_get@@Base>
   14aa4:	ldrsh	r3, [r0]
   14aa8:	strh	r3, [r5], #2
   14aac:	b	149a0 <table_serialize@@Base+0x118>
   14ab0:	mov	r2, r4
   14ab4:	mov	r1, r9
   14ab8:	mov	r0, r6
   14abc:	bl	13ad8 <table_get@@Base>
   14ac0:	ldrh	r3, [r0]
   14ac4:	strh	r3, [r5], #2
   14ac8:	b	149a0 <table_serialize@@Base+0x118>
   14acc:	mov	r2, r4
   14ad0:	mov	r1, r9
   14ad4:	mov	r0, r6
   14ad8:	bl	13ad8 <table_get@@Base>
   14adc:	ldr	r3, [r0]
   14ae0:	str	r3, [r5], #4
   14ae4:	b	149a0 <table_serialize@@Base+0x118>
   14ae8:	mov	r2, r4
   14aec:	mov	r1, r9
   14af0:	mov	r0, r6
   14af4:	bl	13ad8 <table_get@@Base>
   14af8:	ldr	r3, [r0]
   14afc:	str	r3, [r5], #4
   14b00:	b	149a0 <table_serialize@@Base+0x118>
   14b04:	mov	r2, r4
   14b08:	mov	r1, r9
   14b0c:	mov	r0, r6
   14b10:	bl	13ad8 <table_get@@Base>
   14b14:	ldrd	r2, [r0]
   14b18:	strd	r2, [r5], #8
   14b1c:	b	149a0 <table_serialize@@Base+0x118>
   14b20:	mov	r2, r4
   14b24:	mov	r1, r9
   14b28:	mov	r0, r6
   14b2c:	bl	13ad8 <table_get@@Base>
   14b30:	ldrd	r2, [r0]
   14b34:	strd	r2, [r5], #8
   14b38:	b	149a0 <table_serialize@@Base+0x118>
   14b3c:	mov	r2, r4
   14b40:	mov	r1, r9
   14b44:	mov	r0, r6
   14b48:	bl	13ad8 <table_get@@Base>
   14b4c:	ldrsh	r3, [r0]
   14b50:	strh	r3, [r5], #2
   14b54:	b	149a0 <table_serialize@@Base+0x118>
   14b58:	mov	r2, r4
   14b5c:	mov	r1, r9
   14b60:	mov	r0, r6
   14b64:	bl	13ad8 <table_get@@Base>
   14b68:	ldrh	r3, [r0]
   14b6c:	strh	r3, [r5], #2
   14b70:	b	149a0 <table_serialize@@Base+0x118>
   14b74:	mov	r2, r4
   14b78:	mov	r1, r9
   14b7c:	mov	r0, r6
   14b80:	bl	13ad8 <table_get@@Base>
   14b84:	ldr	r3, [r0]
   14b88:	str	r3, [r5], #4
   14b8c:	b	149a0 <table_serialize@@Base+0x118>
   14b90:	mov	r2, r4
   14b94:	mov	r1, r9
   14b98:	mov	r0, r6
   14b9c:	bl	13ad8 <table_get@@Base>
   14ba0:	ldr	r3, [r0]
   14ba4:	str	r3, [r5], #4
   14ba8:	b	149a0 <table_serialize@@Base+0x118>
   14bac:	mov	r2, r4
   14bb0:	mov	r1, r9
   14bb4:	mov	r0, r6
   14bb8:	bl	13ad8 <table_get@@Base>
   14bbc:	ldrd	r2, [r0]
   14bc0:	strd	r2, [r5], #8
   14bc4:	b	149a0 <table_serialize@@Base+0x118>
   14bc8:	mov	r2, r4
   14bcc:	mov	r1, r9
   14bd0:	mov	r0, r6
   14bd4:	bl	13ad8 <table_get@@Base>
   14bd8:	ldrd	r2, [r0]
   14bdc:	strd	r2, [r5], #8
   14be0:	b	149a0 <table_serialize@@Base+0x118>
   14be4:	mov	r2, r4
   14be8:	mov	r1, r9
   14bec:	mov	r0, r6
   14bf0:	bl	13ad8 <table_get@@Base>
   14bf4:	ldr	r3, [r0]
   14bf8:	str	r3, [r5], #4
   14bfc:	b	149a0 <table_serialize@@Base+0x118>
   14c00:	mov	r2, r4
   14c04:	mov	r1, r9
   14c08:	mov	r0, r6
   14c0c:	bl	13ad8 <table_get@@Base>
   14c10:	ldrd	r2, [r0]
   14c14:	strd	r2, [r5], #8
   14c18:	b	149a0 <table_serialize@@Base+0x118>
   14c1c:	mov	r2, r4
   14c20:	mov	r1, r9
   14c24:	mov	r0, r6
   14c28:	bl	13ad8 <table_get@@Base>
   14c2c:	ldrd	r2, [r0]
   14c30:	strd	r2, [r5], #8
   14c34:	b	149a0 <table_serialize@@Base+0x118>
   14c38:	mov	r2, r4
   14c3c:	mov	r1, r9
   14c40:	mov	r0, r6
   14c44:	bl	13c48 <table_get_string@@Base>
   14c48:	mov	fp, r0
   14c4c:	bl	11be4 <strlen@plt>
   14c50:	add	sl, r0, #1
   14c54:	mov	r2, sl
   14c58:	mov	r1, fp
   14c5c:	mov	r0, r5
   14c60:	bl	11c14 <strncpy@plt>
   14c64:	add	r5, r5, sl
   14c68:	b	149a0 <table_serialize@@Base+0x118>
   14c6c:	mov	r2, r4
   14c70:	mov	r1, r9
   14c74:	mov	r0, r6
   14c78:	bl	13ad8 <table_get@@Base>
   14c7c:	ldrb	r3, [r0]
   14c80:	strb	r3, [r5], #1
   14c84:	b	149a0 <table_serialize@@Base+0x118>
   14c88:	mov	r2, r4
   14c8c:	mov	r1, r9
   14c90:	mov	r0, r6
   14c94:	bl	13ad8 <table_get@@Base>
   14c98:	ldrb	r3, [r0]
   14c9c:	strb	r3, [r5], #1
   14ca0:	b	149a0 <table_serialize@@Base+0x118>
   14ca4:	mov	r2, r4
   14ca8:	mov	r1, r9
   14cac:	mov	r0, r6
   14cb0:	bl	13ad8 <table_get@@Base>
   14cb4:	ldr	r3, [r0]
   14cb8:	str	r3, [r5], #4
   14cbc:	b	149a0 <table_serialize@@Base+0x118>
   14cc0:	add	r9, r9, #1
   14cc4:	cmp	r8, r9
   14cc8:	beq	14928 <table_serialize@@Base+0xa0>
   14ccc:	cmp	r7, #0
   14cd0:	movgt	r4, #0
   14cd4:	bgt	149ac <table_serialize@@Base+0x124>
   14cd8:	b	14cc0 <table_serialize@@Base+0x438>

00014cdc <table_deserialize@@Base>:
   14cdc:	push	{r4, r5, r6, r7, r8, r9, lr}
   14ce0:	sub	sp, sp, #12
   14ce4:	mov	r5, r0
   14ce8:	bl	125b8 <table_new@@Base>
   14cec:	mov	r7, r0
   14cf0:	ldr	r8, [r5]
   14cf4:	ldr	r3, [r5, #4]
   14cf8:	str	r3, [r0, #8]
   14cfc:	add	r0, r5, #8
   14d00:	cmp	r8, #0
   14d04:	ble	14d3c <table_deserialize@@Base+0x60>
   14d08:	mov	r5, #0
   14d0c:	add	r4, r0, #4
   14d10:	ldr	r2, [r0]
   14d14:	mov	r1, r4
   14d18:	mov	r0, r7
   14d1c:	bl	12f78 <table_add_column@@Base>
   14d20:	mov	r0, r4
   14d24:	bl	11be4 <strlen@plt>
   14d28:	add	r0, r0, #1
   14d2c:	add	r0, r4, r0
   14d30:	add	r5, r5, #1
   14d34:	cmp	r8, r5
   14d38:	bne	14d0c <table_deserialize@@Base+0x30>
   14d3c:	ldr	r9, [r0]
   14d40:	ldr	r3, [r0, #4]
   14d44:	str	r3, [r7, #24]
   14d48:	add	r5, r0, #8
   14d4c:	cmp	r9, #0
   14d50:	ble	15060 <table_deserialize@@Base+0x384>
   14d54:	mov	r6, #0
   14d58:	b	15048 <table_deserialize@@Base+0x36c>
   14d5c:	ldrb	r3, [r5], #1
   14d60:	mov	r2, r4
   14d64:	mov	r1, r6
   14d68:	mov	r0, r7
   14d6c:	bl	1450c <table_set_bool@@Base>
   14d70:	add	r4, r4, #1
   14d74:	cmp	r8, r4
   14d78:	beq	1503c <table_deserialize@@Base+0x360>
   14d7c:	mov	r1, r4
   14d80:	mov	r0, r7
   14d84:	bl	12f64 <table_get_column_data_type@@Base>
   14d88:	cmp	r0, #23
   14d8c:	ldrls	pc, [pc, r0, lsl #2]
   14d90:	b	14d70 <table_deserialize@@Base+0x94>
   14d94:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   14d98:	andeq	r4, r1, ip, lsl #28
   14d9c:	andeq	r4, r1, r4, lsr #28
   14da0:	andeq	r4, r1, ip, lsr lr
   14da4:	andeq	r4, r1, r4, asr lr
   14da8:	andeq	r4, r1, ip, ror #28
   14dac:	andeq	r4, r1, r4, lsl #29
   14db0:	muleq	r1, ip, lr
   14db4:			; <UNDEFINED> instruction: 0x00014eb4
   14db8:	ldrdeq	r4, [r1], -r0
   14dbc:	andeq	r4, r1, ip, ror #29
   14dc0:	andeq	r4, r1, r4, lsl #30
   14dc4:	andeq	r4, r1, ip, lsl pc
   14dc8:	andeq	r4, r1, r4, lsr pc
   14dcc:	andeq	r4, r1, ip, asr #30
   14dd0:	andeq	r4, r1, r8, ror #30
   14dd4:	andeq	r4, r1, r4, lsl #31
   14dd8:	muleq	r1, ip, pc	; <UNPREDICTABLE>
   14ddc:			; <UNDEFINED> instruction: 0x00014fb4
   14de0:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   14de4:	andeq	r5, r1, ip
   14de8:	andeq	r4, r1, ip, asr #31
   14dec:	andeq	r4, r1, ip, asr sp
   14df0:	andeq	r5, r1, r4, lsr #32
   14df4:	ldr	r3, [r5], #4
   14df8:	mov	r2, r4
   14dfc:	mov	r1, r6
   14e00:	mov	r0, r7
   14e04:	bl	14534 <table_set_int@@Base>
   14e08:	b	14d70 <table_deserialize@@Base+0x94>
   14e0c:	ldr	r3, [r5], #4
   14e10:	mov	r2, r4
   14e14:	mov	r1, r6
   14e18:	mov	r0, r7
   14e1c:	bl	1455c <table_set_uint@@Base>
   14e20:	b	14d70 <table_deserialize@@Base+0x94>
   14e24:	ldrsb	r3, [r5], #1
   14e28:	mov	r2, r4
   14e2c:	mov	r1, r6
   14e30:	mov	r0, r7
   14e34:	bl	14584 <table_set_int8@@Base>
   14e38:	b	14d70 <table_deserialize@@Base+0x94>
   14e3c:	ldrb	r3, [r5], #1
   14e40:	mov	r2, r4
   14e44:	mov	r1, r6
   14e48:	mov	r0, r7
   14e4c:	bl	145ac <table_set_uint8@@Base>
   14e50:	b	14d70 <table_deserialize@@Base+0x94>
   14e54:	ldrsh	r3, [r5], #2
   14e58:	mov	r2, r4
   14e5c:	mov	r1, r6
   14e60:	mov	r0, r7
   14e64:	bl	145d4 <table_set_int16@@Base>
   14e68:	b	14d70 <table_deserialize@@Base+0x94>
   14e6c:	ldrh	r3, [r5], #2
   14e70:	mov	r2, r4
   14e74:	mov	r1, r6
   14e78:	mov	r0, r7
   14e7c:	bl	145fc <table_set_uint16@@Base>
   14e80:	b	14d70 <table_deserialize@@Base+0x94>
   14e84:	ldr	r3, [r5], #4
   14e88:	mov	r2, r4
   14e8c:	mov	r1, r6
   14e90:	mov	r0, r7
   14e94:	bl	14624 <table_set_int32@@Base>
   14e98:	b	14d70 <table_deserialize@@Base+0x94>
   14e9c:	ldr	r3, [r5], #4
   14ea0:	mov	r2, r4
   14ea4:	mov	r1, r6
   14ea8:	mov	r0, r7
   14eac:	bl	1464c <table_set_uint32@@Base>
   14eb0:	b	14d70 <table_deserialize@@Base+0x94>
   14eb4:	ldrd	r2, [r5], #8
   14eb8:	strd	r2, [sp]
   14ebc:	mov	r2, r4
   14ec0:	mov	r1, r6
   14ec4:	mov	r0, r7
   14ec8:	bl	14674 <table_set_int64@@Base>
   14ecc:	b	14d70 <table_deserialize@@Base+0x94>
   14ed0:	ldrd	r2, [r5], #8
   14ed4:	strd	r2, [sp]
   14ed8:	mov	r2, r4
   14edc:	mov	r1, r6
   14ee0:	mov	r0, r7
   14ee4:	bl	14694 <table_set_uint64@@Base>
   14ee8:	b	14d70 <table_deserialize@@Base+0x94>
   14eec:	ldrsh	r3, [r5], #2
   14ef0:	mov	r2, r4
   14ef4:	mov	r1, r6
   14ef8:	mov	r0, r7
   14efc:	bl	146b4 <table_set_short@@Base>
   14f00:	b	14d70 <table_deserialize@@Base+0x94>
   14f04:	ldrh	r3, [r5], #2
   14f08:	mov	r2, r4
   14f0c:	mov	r1, r6
   14f10:	mov	r0, r7
   14f14:	bl	146dc <table_set_ushort@@Base>
   14f18:	b	14d70 <table_deserialize@@Base+0x94>
   14f1c:	ldr	r3, [r5], #4
   14f20:	mov	r2, r4
   14f24:	mov	r1, r6
   14f28:	mov	r0, r7
   14f2c:	bl	14704 <table_set_long@@Base>
   14f30:	b	14d70 <table_deserialize@@Base+0x94>
   14f34:	ldr	r3, [r5], #4
   14f38:	mov	r2, r4
   14f3c:	mov	r1, r6
   14f40:	mov	r0, r7
   14f44:	bl	1472c <table_set_ulong@@Base>
   14f48:	b	14d70 <table_deserialize@@Base+0x94>
   14f4c:	ldrd	r2, [r5], #8
   14f50:	strd	r2, [sp]
   14f54:	mov	r2, r4
   14f58:	mov	r1, r6
   14f5c:	mov	r0, r7
   14f60:	bl	14754 <table_set_llong@@Base>
   14f64:	b	14d70 <table_deserialize@@Base+0x94>
   14f68:	ldrd	r2, [r5], #8
   14f6c:	strd	r2, [sp]
   14f70:	mov	r2, r4
   14f74:	mov	r1, r6
   14f78:	mov	r0, r7
   14f7c:	bl	14774 <table_set_ullong@@Base>
   14f80:	b	14d70 <table_deserialize@@Base+0x94>
   14f84:	vldmia	r5!, {s0}
   14f88:	mov	r2, r4
   14f8c:	mov	r1, r6
   14f90:	mov	r0, r7
   14f94:	bl	14794 <table_set_float@@Base>
   14f98:	b	14d70 <table_deserialize@@Base+0x94>
   14f9c:	vldmia	r5!, {d0}
   14fa0:	mov	r2, r4
   14fa4:	mov	r1, r6
   14fa8:	mov	r0, r7
   14fac:	bl	147b8 <table_set_double@@Base>
   14fb0:	b	14d70 <table_deserialize@@Base+0x94>
   14fb4:	vldmia	r5!, {d0}
   14fb8:	mov	r2, r4
   14fbc:	mov	r1, r6
   14fc0:	mov	r0, r7
   14fc4:	bl	147dc <table_set_ldouble@@Base>
   14fc8:	b	14d70 <table_deserialize@@Base+0x94>
   14fcc:	mov	r3, r5
   14fd0:	mov	r2, r4
   14fd4:	mov	r1, r6
   14fd8:	mov	r0, r7
   14fdc:	bl	14800 <table_set_string@@Base>
   14fe0:	mov	r0, r5
   14fe4:	bl	11be4 <strlen@plt>
   14fe8:	add	r0, r0, #1
   14fec:	add	r5, r5, r0
   14ff0:	b	14d70 <table_deserialize@@Base+0x94>
   14ff4:	ldrb	r3, [r5], #1
   14ff8:	mov	r2, r4
   14ffc:	mov	r1, r6
   15000:	mov	r0, r7
   15004:	bl	1481c <table_set_char@@Base>
   15008:	b	14d70 <table_deserialize@@Base+0x94>
   1500c:	ldrb	r3, [r5], #1
   15010:	mov	r2, r4
   15014:	mov	r1, r6
   15018:	mov	r0, r7
   1501c:	bl	14844 <table_set_uchar@@Base>
   15020:	b	14d70 <table_deserialize@@Base+0x94>
   15024:	ldr	r3, [r5], #4
   15028:	mov	r2, r4
   1502c:	mov	r1, r6
   15030:	mov	r0, r7
   15034:	bl	1486c <table_set_ptr@@Base>
   15038:	b	14d70 <table_deserialize@@Base+0x94>
   1503c:	add	r6, r6, #1
   15040:	cmp	r9, r6
   15044:	beq	15060 <table_deserialize@@Base+0x384>
   15048:	mov	r0, r7
   1504c:	bl	13cd8 <table_add_row@@Base>
   15050:	cmp	r8, #0
   15054:	ble	1503c <table_deserialize@@Base+0x360>
   15058:	mov	r4, #0
   1505c:	b	14d7c <table_deserialize@@Base+0xa0>
   15060:	ldr	r6, [r5]
   15064:	ldr	r3, [r5, #4]
   15068:	str	r3, [r7, #48]	; 0x30
   1506c:	cmp	r6, #0
   15070:	ble	150a0 <table_deserialize@@Base+0x3c4>
   15074:	add	r5, r5, #20
   15078:	mov	r4, #0
   1507c:	ldr	r3, [r5, #-4]
   15080:	ldr	r2, [r5, #-8]
   15084:	ldr	r1, [r5, #-12]
   15088:	mov	r0, r7
   1508c:	bl	12bc8 <table_register_callback@@Base>
   15090:	add	r4, r4, #1
   15094:	add	r5, r5, #12
   15098:	cmp	r6, r4
   1509c:	bne	1507c <table_deserialize@@Base+0x3a0>
   150a0:	mov	r0, r7
   150a4:	add	sp, sp, #12
   150a8:	pop	{r4, r5, r6, r7, r8, r9, pc}

000150ac <table_cell_to_buffer@@Base>:
   150ac:	push	{r4, r5, r6, r7, lr}
   150b0:	sub	sp, sp, #12
   150b4:	mov	r6, r0
   150b8:	mov	r7, r1
   150bc:	mov	r4, r2
   150c0:	mov	r5, r3
   150c4:	mov	r1, r2
   150c8:	bl	12f64 <table_get_column_data_type@@Base>
   150cc:	cmp	r0, #23
   150d0:	ldrls	pc, [pc, r0, lsl #2]
   150d4:	b	1515c <table_cell_to_buffer@@Base+0xb0>
   150d8:	andeq	r5, r1, r8, lsr r1
   150dc:	andeq	r5, r1, r8, ror #2
   150e0:	muleq	r1, r0, r1
   150e4:			; <UNDEFINED> instruction: 0x000151b8
   150e8:	andeq	r5, r1, r0, ror #3
   150ec:	andeq	r5, r1, r8, lsl #4
   150f0:	andeq	r5, r1, r0, lsr r2
   150f4:	andeq	r5, r1, r8, asr r2
   150f8:	andeq	r5, r1, r0, lsl #5
   150fc:	andeq	r5, r1, r8, lsr #5
   15100:	ldrdeq	r5, [r1], -r0
   15104:	strdeq	r5, [r1], -r8
   15108:	andeq	r5, r1, r0, lsr #6
   1510c:	andeq	r5, r1, r8, asr #6
   15110:	andeq	r5, r1, r0, ror r3
   15114:	muleq	r1, r8, r3
   15118:	andeq	r5, r1, r8, ror #7
   1511c:	andeq	r5, r1, r4, lsl r4
   15120:	andeq	r5, r1, ip, lsr r4
   15124:	andeq	r5, r1, ip, lsl #9
   15128:			; <UNDEFINED> instruction: 0x000154b4
   1512c:	andeq	r5, r1, r0, asr #7
   15130:	andeq	r5, r1, r4, ror #8
   15134:	ldrdeq	r5, [r1], -ip
   15138:	mov	r2, r4
   1513c:	mov	r1, r7
   15140:	mov	r0, r6
   15144:	bl	13af8 <table_get_int@@Base>
   15148:	mov	r3, r0
   1514c:	ldr	r2, [pc, #944]	; 15504 <table_cell_to_buffer@@Base+0x458>
   15150:	ldr	r1, [sp, #32]
   15154:	mov	r0, r5
   15158:	bl	11bfc <snprintf@plt>
   1515c:	mov	r0, #0
   15160:	add	sp, sp, #12
   15164:	pop	{r4, r5, r6, r7, pc}
   15168:	mov	r2, r4
   1516c:	mov	r1, r7
   15170:	mov	r0, r6
   15174:	bl	13b08 <table_get_uint@@Base>
   15178:	mov	r3, r0
   1517c:	ldr	r2, [pc, #900]	; 15508 <table_cell_to_buffer@@Base+0x45c>
   15180:	ldr	r1, [sp, #32]
   15184:	mov	r0, r5
   15188:	bl	11bfc <snprintf@plt>
   1518c:	b	1515c <table_cell_to_buffer@@Base+0xb0>
   15190:	mov	r2, r4
   15194:	mov	r1, r7
   15198:	mov	r0, r6
   1519c:	bl	13b18 <table_get_int8@@Base>
   151a0:	mov	r3, r0
   151a4:	ldr	r2, [pc, #856]	; 15504 <table_cell_to_buffer@@Base+0x458>
   151a8:	ldr	r1, [sp, #32]
   151ac:	mov	r0, r5
   151b0:	bl	11bfc <snprintf@plt>
   151b4:	b	1515c <table_cell_to_buffer@@Base+0xb0>
   151b8:	mov	r2, r4
   151bc:	mov	r1, r7
   151c0:	mov	r0, r6
   151c4:	bl	13b28 <table_get_uint8@@Base>
   151c8:	mov	r3, r0
   151cc:	ldr	r2, [pc, #820]	; 15508 <table_cell_to_buffer@@Base+0x45c>
   151d0:	ldr	r1, [sp, #32]
   151d4:	mov	r0, r5
   151d8:	bl	11bfc <snprintf@plt>
   151dc:	b	1515c <table_cell_to_buffer@@Base+0xb0>
   151e0:	mov	r2, r4
   151e4:	mov	r1, r7
   151e8:	mov	r0, r6
   151ec:	bl	13b38 <table_get_int16@@Base>
   151f0:	mov	r3, r0
   151f4:	ldr	r2, [pc, #776]	; 15504 <table_cell_to_buffer@@Base+0x458>
   151f8:	ldr	r1, [sp, #32]
   151fc:	mov	r0, r5
   15200:	bl	11bfc <snprintf@plt>
   15204:	b	1515c <table_cell_to_buffer@@Base+0xb0>
   15208:	mov	r2, r4
   1520c:	mov	r1, r7
   15210:	mov	r0, r6
   15214:	bl	13b48 <table_get_uint16@@Base>
   15218:	mov	r3, r0
   1521c:	ldr	r2, [pc, #740]	; 15508 <table_cell_to_buffer@@Base+0x45c>
   15220:	ldr	r1, [sp, #32]
   15224:	mov	r0, r5
   15228:	bl	11bfc <snprintf@plt>
   1522c:	b	1515c <table_cell_to_buffer@@Base+0xb0>
   15230:	mov	r2, r4
   15234:	mov	r1, r7
   15238:	mov	r0, r6
   1523c:	bl	13b58 <table_get_int32@@Base>
   15240:	mov	r3, r0
   15244:	ldr	r2, [pc, #696]	; 15504 <table_cell_to_buffer@@Base+0x458>
   15248:	ldr	r1, [sp, #32]
   1524c:	mov	r0, r5
   15250:	bl	11bfc <snprintf@plt>
   15254:	b	1515c <table_cell_to_buffer@@Base+0xb0>
   15258:	mov	r2, r4
   1525c:	mov	r1, r7
   15260:	mov	r0, r6
   15264:	bl	13b68 <table_get_uint32@@Base>
   15268:	mov	r3, r0
   1526c:	ldr	r2, [pc, #660]	; 15508 <table_cell_to_buffer@@Base+0x45c>
   15270:	ldr	r1, [sp, #32]
   15274:	mov	r0, r5
   15278:	bl	11bfc <snprintf@plt>
   1527c:	b	1515c <table_cell_to_buffer@@Base+0xb0>
   15280:	mov	r2, r4
   15284:	mov	r1, r7
   15288:	mov	r0, r6
   1528c:	bl	13b78 <table_get_int64@@Base>
   15290:	strd	r0, [sp]
   15294:	ldr	r2, [pc, #624]	; 1550c <table_cell_to_buffer@@Base+0x460>
   15298:	ldr	r1, [sp, #32]
   1529c:	mov	r0, r5
   152a0:	bl	11bfc <snprintf@plt>
   152a4:	b	1515c <table_cell_to_buffer@@Base+0xb0>
   152a8:	mov	r2, r4
   152ac:	mov	r1, r7
   152b0:	mov	r0, r6
   152b4:	bl	13b88 <table_get_uint64@@Base>
   152b8:	strd	r0, [sp]
   152bc:	ldr	r2, [pc, #588]	; 15510 <table_cell_to_buffer@@Base+0x464>
   152c0:	ldr	r1, [sp, #32]
   152c4:	mov	r0, r5
   152c8:	bl	11bfc <snprintf@plt>
   152cc:	b	1515c <table_cell_to_buffer@@Base+0xb0>
   152d0:	mov	r2, r4
   152d4:	mov	r1, r7
   152d8:	mov	r0, r6
   152dc:	bl	13b98 <table_get_short@@Base>
   152e0:	mov	r3, r0
   152e4:	ldr	r2, [pc, #552]	; 15514 <table_cell_to_buffer@@Base+0x468>
   152e8:	ldr	r1, [sp, #32]
   152ec:	mov	r0, r5
   152f0:	bl	11bfc <snprintf@plt>
   152f4:	b	1515c <table_cell_to_buffer@@Base+0xb0>
   152f8:	mov	r2, r4
   152fc:	mov	r1, r7
   15300:	mov	r0, r6
   15304:	bl	13ba8 <table_get_ushort@@Base>
   15308:	mov	r3, r0
   1530c:	ldr	r2, [pc, #516]	; 15518 <table_cell_to_buffer@@Base+0x46c>
   15310:	ldr	r1, [sp, #32]
   15314:	mov	r0, r5
   15318:	bl	11bfc <snprintf@plt>
   1531c:	b	1515c <table_cell_to_buffer@@Base+0xb0>
   15320:	mov	r2, r4
   15324:	mov	r1, r7
   15328:	mov	r0, r6
   1532c:	bl	13bb8 <table_get_long@@Base>
   15330:	mov	r3, r0
   15334:	ldr	r2, [pc, #480]	; 1551c <table_cell_to_buffer@@Base+0x470>
   15338:	ldr	r1, [sp, #32]
   1533c:	mov	r0, r5
   15340:	bl	11bfc <snprintf@plt>
   15344:	b	1515c <table_cell_to_buffer@@Base+0xb0>
   15348:	mov	r2, r4
   1534c:	mov	r1, r7
   15350:	mov	r0, r6
   15354:	bl	13bc8 <table_get_ulong@@Base>
   15358:	mov	r3, r0
   1535c:	ldr	r2, [pc, #444]	; 15520 <table_cell_to_buffer@@Base+0x474>
   15360:	ldr	r1, [sp, #32]
   15364:	mov	r0, r5
   15368:	bl	11bfc <snprintf@plt>
   1536c:	b	1515c <table_cell_to_buffer@@Base+0xb0>
   15370:	mov	r2, r4
   15374:	mov	r1, r7
   15378:	mov	r0, r6
   1537c:	bl	13bd8 <table_get_llong@@Base>
   15380:	strd	r0, [sp]
   15384:	ldr	r2, [pc, #384]	; 1550c <table_cell_to_buffer@@Base+0x460>
   15388:	ldr	r1, [sp, #32]
   1538c:	mov	r0, r5
   15390:	bl	11bfc <snprintf@plt>
   15394:	b	1515c <table_cell_to_buffer@@Base+0xb0>
   15398:	mov	r2, r4
   1539c:	mov	r1, r7
   153a0:	mov	r0, r6
   153a4:	bl	13be8 <table_get_ullong@@Base>
   153a8:	strd	r0, [sp]
   153ac:	ldr	r2, [pc, #348]	; 15510 <table_cell_to_buffer@@Base+0x464>
   153b0:	ldr	r1, [sp, #32]
   153b4:	mov	r0, r5
   153b8:	bl	11bfc <snprintf@plt>
   153bc:	b	1515c <table_cell_to_buffer@@Base+0xb0>
   153c0:	mov	r2, r4
   153c4:	mov	r1, r7
   153c8:	mov	r0, r6
   153cc:	bl	13c48 <table_get_string@@Base>
   153d0:	mov	r3, r0
   153d4:	ldr	r2, [pc, #328]	; 15524 <table_cell_to_buffer@@Base+0x478>
   153d8:	ldr	r1, [sp, #32]
   153dc:	mov	r0, r5
   153e0:	bl	11bfc <snprintf@plt>
   153e4:	b	1515c <table_cell_to_buffer@@Base+0xb0>
   153e8:	mov	r2, r4
   153ec:	mov	r1, r7
   153f0:	mov	r0, r6
   153f4:	bl	13bf8 <table_get_float@@Base>
   153f8:	vcvt.f64.f32	d0, s0
   153fc:	vstr	d0, [sp]
   15400:	ldr	r2, [pc, #288]	; 15528 <table_cell_to_buffer@@Base+0x47c>
   15404:	ldr	r1, [sp, #32]
   15408:	mov	r0, r5
   1540c:	bl	11bfc <snprintf@plt>
   15410:	b	1515c <table_cell_to_buffer@@Base+0xb0>
   15414:	mov	r2, r4
   15418:	mov	r1, r7
   1541c:	mov	r0, r6
   15420:	bl	13c08 <table_get_double@@Base>
   15424:	vstr	d0, [sp]
   15428:	ldr	r2, [pc, #252]	; 1552c <table_cell_to_buffer@@Base+0x480>
   1542c:	ldr	r1, [sp, #32]
   15430:	mov	r0, r5
   15434:	bl	11bfc <snprintf@plt>
   15438:	b	1515c <table_cell_to_buffer@@Base+0xb0>
   1543c:	mov	r2, r4
   15440:	mov	r1, r7
   15444:	mov	r0, r6
   15448:	bl	13c18 <table_get_ldouble@@Base>
   1544c:	vstr	d0, [sp]
   15450:	ldr	r2, [pc, #216]	; 15530 <table_cell_to_buffer@@Base+0x484>
   15454:	ldr	r1, [sp, #32]
   15458:	mov	r0, r5
   1545c:	bl	11bfc <snprintf@plt>
   15460:	b	1515c <table_cell_to_buffer@@Base+0xb0>
   15464:	mov	r2, r4
   15468:	mov	r1, r7
   1546c:	mov	r0, r6
   15470:	bl	13ae8 <table_get_bool@@Base>
   15474:	mov	r3, r0
   15478:	ldr	r2, [pc, #132]	; 15504 <table_cell_to_buffer@@Base+0x458>
   1547c:	ldr	r1, [sp, #32]
   15480:	mov	r0, r5
   15484:	bl	11bfc <snprintf@plt>
   15488:	b	1515c <table_cell_to_buffer@@Base+0xb0>
   1548c:	mov	r2, r4
   15490:	mov	r1, r7
   15494:	mov	r0, r6
   15498:	bl	13c28 <table_get_char@@Base>
   1549c:	mov	r3, r0
   154a0:	ldr	r2, [pc, #140]	; 15534 <table_cell_to_buffer@@Base+0x488>
   154a4:	ldr	r1, [sp, #32]
   154a8:	mov	r0, r5
   154ac:	bl	11bfc <snprintf@plt>
   154b0:	b	1515c <table_cell_to_buffer@@Base+0xb0>
   154b4:	mov	r2, r4
   154b8:	mov	r1, r7
   154bc:	mov	r0, r6
   154c0:	bl	13c38 <table_get_uchar@@Base>
   154c4:	mov	r3, r0
   154c8:	ldr	r2, [pc, #100]	; 15534 <table_cell_to_buffer@@Base+0x488>
   154cc:	ldr	r1, [sp, #32]
   154d0:	mov	r0, r5
   154d4:	bl	11bfc <snprintf@plt>
   154d8:	b	1515c <table_cell_to_buffer@@Base+0xb0>
   154dc:	mov	r2, r4
   154e0:	mov	r1, r7
   154e4:	mov	r0, r6
   154e8:	bl	13c54 <table_get_ptr@@Base>
   154ec:	mov	r3, r0
   154f0:	ldr	r2, [pc, #64]	; 15538 <table_cell_to_buffer@@Base+0x48c>
   154f4:	ldr	r1, [sp, #32]
   154f8:	mov	r0, r5
   154fc:	bl	11bfc <snprintf@plt>
   15500:	b	1515c <table_cell_to_buffer@@Base+0xb0>
   15504:	strdeq	r5, [r1], -ip
   15508:	andeq	r5, r1, r4, ror pc
   1550c:	andeq	r5, r1, r8, ror pc
   15510:	andeq	r5, r1, r0, lsl #31
   15514:	andeq	r5, r1, r8, lsl #31
   15518:	andeq	r5, r1, ip, lsl #31
   1551c:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   15520:	muleq	r1, r4, pc	; <UNPREDICTABLE>
   15524:	muleq	r1, r8, pc	; <UNPREDICTABLE>
   15528:	muleq	r1, ip, pc	; <UNPREDICTABLE>
   1552c:	andeq	r5, r1, r0, lsr #31
   15530:	andeq	r5, r1, r4, lsr #31
   15534:	andeq	r5, r1, r8, lsr #31
   15538:	andeq	r5, r1, ip, lsr #31

0001553c <table_cell_from_buffer@@Base>:
   1553c:	push	{r4, r5, r6, r7, lr}
   15540:	sub	sp, sp, #268	; 0x10c
   15544:	mov	r6, r0
   15548:	mov	r7, r1
   1554c:	mov	r4, r2
   15550:	mov	r5, r3
   15554:	mov	r1, r2
   15558:	bl	12f64 <table_get_column_data_type@@Base>
   1555c:	cmp	r0, #23
   15560:	ldrls	pc, [pc, r0, lsl #2]
   15564:	b	15b48 <table_cell_from_buffer@@Base+0x60c>
   15568:	andeq	r5, r1, r8, asr #11
   1556c:	andeq	r5, r1, r0, lsl #12
   15570:	andeq	r5, r1, r8, lsr r6
   15574:	andeq	r5, r1, r0, ror r6
   15578:	andeq	r5, r1, r8, lsr #13
   1557c:	andeq	r5, r1, r0, ror #13
   15580:	andeq	r5, r1, r8, lsl r7
   15584:	andeq	r5, r1, r0, asr r7
   15588:	andeq	r5, r1, r8, lsl #15
   1558c:	andeq	r5, r1, r4, asr #15
   15590:	andeq	r5, r1, r0, lsl #16
   15594:	andeq	r5, r1, r8, lsr r8
   15598:	andeq	r5, r1, r0, ror r8
   1559c:	andeq	r5, r1, r8, lsr #17
   155a0:	andeq	r5, r1, r0, ror #17
   155a4:	andeq	r5, r1, ip, lsl r9
   155a8:	muleq	r1, r0, r9
   155ac:	andeq	r5, r1, r8, asr #19
   155b0:	andeq	r5, r1, r0, lsl #20
   155b4:	muleq	r1, r4, sl
   155b8:	andeq	r5, r1, ip, asr #21
   155bc:	andeq	r5, r1, r8, asr r9
   155c0:	andeq	r5, r1, r8, lsr sl
   155c4:	andeq	r5, r1, r4, lsl #22
   155c8:	add	r2, sp, #8
   155cc:	ldr	r1, [pc, #1404]	; 15b50 <table_cell_from_buffer@@Base+0x614>
   155d0:	mov	r0, r5
   155d4:	bl	11c08 <__isoc99_sscanf@plt>
   155d8:	cmp	r0, #1
   155dc:	mvnne	r5, #0
   155e0:	bne	15b20 <table_cell_from_buffer@@Base+0x5e4>
   155e4:	ldr	r3, [sp, #8]
   155e8:	mov	r2, r4
   155ec:	mov	r1, r7
   155f0:	mov	r0, r6
   155f4:	bl	14534 <table_set_int@@Base>
   155f8:	mov	r5, #0
   155fc:	b	15b20 <table_cell_from_buffer@@Base+0x5e4>
   15600:	add	r2, sp, #8
   15604:	ldr	r1, [pc, #1352]	; 15b54 <table_cell_from_buffer@@Base+0x618>
   15608:	mov	r0, r5
   1560c:	bl	11c08 <__isoc99_sscanf@plt>
   15610:	cmp	r0, #1
   15614:	mvnne	r5, #0
   15618:	bne	15b20 <table_cell_from_buffer@@Base+0x5e4>
   1561c:	ldr	r3, [sp, #8]
   15620:	mov	r2, r4
   15624:	mov	r1, r7
   15628:	mov	r0, r6
   1562c:	bl	1455c <table_set_uint@@Base>
   15630:	mov	r5, #0
   15634:	b	15b20 <table_cell_from_buffer@@Base+0x5e4>
   15638:	add	r2, sp, #8
   1563c:	ldr	r1, [pc, #1300]	; 15b58 <table_cell_from_buffer@@Base+0x61c>
   15640:	mov	r0, r5
   15644:	bl	11c08 <__isoc99_sscanf@plt>
   15648:	cmp	r0, #1
   1564c:	mvnne	r5, #0
   15650:	bne	15b20 <table_cell_from_buffer@@Base+0x5e4>
   15654:	ldrsb	r3, [sp, #8]
   15658:	mov	r2, r4
   1565c:	mov	r1, r7
   15660:	mov	r0, r6
   15664:	bl	14584 <table_set_int8@@Base>
   15668:	mov	r5, #0
   1566c:	b	15b20 <table_cell_from_buffer@@Base+0x5e4>
   15670:	add	r2, sp, #8
   15674:	ldr	r1, [pc, #1248]	; 15b5c <table_cell_from_buffer@@Base+0x620>
   15678:	mov	r0, r5
   1567c:	bl	11c08 <__isoc99_sscanf@plt>
   15680:	cmp	r0, #1
   15684:	mvnne	r5, #0
   15688:	bne	15b20 <table_cell_from_buffer@@Base+0x5e4>
   1568c:	ldrb	r3, [sp, #8]
   15690:	mov	r2, r4
   15694:	mov	r1, r7
   15698:	mov	r0, r6
   1569c:	bl	145ac <table_set_uint8@@Base>
   156a0:	mov	r5, #0
   156a4:	b	15b20 <table_cell_from_buffer@@Base+0x5e4>
   156a8:	add	r2, sp, #8
   156ac:	ldr	r1, [pc, #1196]	; 15b60 <table_cell_from_buffer@@Base+0x624>
   156b0:	mov	r0, r5
   156b4:	bl	11c08 <__isoc99_sscanf@plt>
   156b8:	cmp	r0, #1
   156bc:	mvnne	r5, #0
   156c0:	bne	15b20 <table_cell_from_buffer@@Base+0x5e4>
   156c4:	ldrsh	r3, [sp, #8]
   156c8:	mov	r2, r4
   156cc:	mov	r1, r7
   156d0:	mov	r0, r6
   156d4:	bl	145d4 <table_set_int16@@Base>
   156d8:	mov	r5, #0
   156dc:	b	15b20 <table_cell_from_buffer@@Base+0x5e4>
   156e0:	add	r2, sp, #8
   156e4:	ldr	r1, [pc, #1144]	; 15b64 <table_cell_from_buffer@@Base+0x628>
   156e8:	mov	r0, r5
   156ec:	bl	11c08 <__isoc99_sscanf@plt>
   156f0:	cmp	r0, #1
   156f4:	mvnne	r5, #0
   156f8:	bne	15b20 <table_cell_from_buffer@@Base+0x5e4>
   156fc:	ldrh	r3, [sp, #8]
   15700:	mov	r2, r4
   15704:	mov	r1, r7
   15708:	mov	r0, r6
   1570c:	bl	145fc <table_set_uint16@@Base>
   15710:	mov	r5, #0
   15714:	b	15b20 <table_cell_from_buffer@@Base+0x5e4>
   15718:	add	r2, sp, #8
   1571c:	ldr	r1, [pc, #1068]	; 15b50 <table_cell_from_buffer@@Base+0x614>
   15720:	mov	r0, r5
   15724:	bl	11c08 <__isoc99_sscanf@plt>
   15728:	cmp	r0, #1
   1572c:	mvnne	r5, #0
   15730:	bne	15b20 <table_cell_from_buffer@@Base+0x5e4>
   15734:	ldr	r3, [sp, #8]
   15738:	mov	r2, r4
   1573c:	mov	r1, r7
   15740:	mov	r0, r6
   15744:	bl	14624 <table_set_int32@@Base>
   15748:	mov	r5, #0
   1574c:	b	15b20 <table_cell_from_buffer@@Base+0x5e4>
   15750:	add	r2, sp, #8
   15754:	ldr	r1, [pc, #1016]	; 15b54 <table_cell_from_buffer@@Base+0x618>
   15758:	mov	r0, r5
   1575c:	bl	11c08 <__isoc99_sscanf@plt>
   15760:	cmp	r0, #1
   15764:	mvnne	r5, #0
   15768:	bne	15b20 <table_cell_from_buffer@@Base+0x5e4>
   1576c:	ldr	r3, [sp, #8]
   15770:	mov	r2, r4
   15774:	mov	r1, r7
   15778:	mov	r0, r6
   1577c:	bl	1464c <table_set_uint32@@Base>
   15780:	mov	r5, #0
   15784:	b	15b20 <table_cell_from_buffer@@Base+0x5e4>
   15788:	add	r2, sp, #8
   1578c:	ldr	r1, [pc, #980]	; 15b68 <table_cell_from_buffer@@Base+0x62c>
   15790:	mov	r0, r5
   15794:	bl	11c08 <__isoc99_sscanf@plt>
   15798:	cmp	r0, #1
   1579c:	mvnne	r5, #0
   157a0:	bne	15b20 <table_cell_from_buffer@@Base+0x5e4>
   157a4:	ldrd	r2, [sp, #8]
   157a8:	strd	r2, [sp]
   157ac:	mov	r2, r4
   157b0:	mov	r1, r7
   157b4:	mov	r0, r6
   157b8:	bl	14674 <table_set_int64@@Base>
   157bc:	mov	r5, #0
   157c0:	b	15b20 <table_cell_from_buffer@@Base+0x5e4>
   157c4:	add	r2, sp, #8
   157c8:	ldr	r1, [pc, #924]	; 15b6c <table_cell_from_buffer@@Base+0x630>
   157cc:	mov	r0, r5
   157d0:	bl	11c08 <__isoc99_sscanf@plt>
   157d4:	cmp	r0, #1
   157d8:	mvnne	r5, #0
   157dc:	bne	15b20 <table_cell_from_buffer@@Base+0x5e4>
   157e0:	ldrd	r2, [sp, #8]
   157e4:	strd	r2, [sp]
   157e8:	mov	r2, r4
   157ec:	mov	r1, r7
   157f0:	mov	r0, r6
   157f4:	bl	14694 <table_set_uint64@@Base>
   157f8:	mov	r5, #0
   157fc:	b	15b20 <table_cell_from_buffer@@Base+0x5e4>
   15800:	add	r2, sp, #8
   15804:	ldr	r1, [pc, #852]	; 15b60 <table_cell_from_buffer@@Base+0x624>
   15808:	mov	r0, r5
   1580c:	bl	11c08 <__isoc99_sscanf@plt>
   15810:	cmp	r0, #1
   15814:	mvnne	r5, #0
   15818:	bne	15b20 <table_cell_from_buffer@@Base+0x5e4>
   1581c:	ldrsh	r3, [sp, #8]
   15820:	mov	r2, r4
   15824:	mov	r1, r7
   15828:	mov	r0, r6
   1582c:	bl	146b4 <table_set_short@@Base>
   15830:	mov	r5, #0
   15834:	b	15b20 <table_cell_from_buffer@@Base+0x5e4>
   15838:	add	r2, sp, #8
   1583c:	ldr	r1, [pc, #800]	; 15b64 <table_cell_from_buffer@@Base+0x628>
   15840:	mov	r0, r5
   15844:	bl	11c08 <__isoc99_sscanf@plt>
   15848:	cmp	r0, #1
   1584c:	mvnne	r5, #0
   15850:	bne	15b20 <table_cell_from_buffer@@Base+0x5e4>
   15854:	ldrh	r3, [sp, #8]
   15858:	mov	r2, r4
   1585c:	mov	r1, r7
   15860:	mov	r0, r6
   15864:	bl	146dc <table_set_ushort@@Base>
   15868:	mov	r5, #0
   1586c:	b	15b20 <table_cell_from_buffer@@Base+0x5e4>
   15870:	add	r2, sp, #8
   15874:	ldr	r1, [pc, #756]	; 15b70 <table_cell_from_buffer@@Base+0x634>
   15878:	mov	r0, r5
   1587c:	bl	11c08 <__isoc99_sscanf@plt>
   15880:	cmp	r0, #1
   15884:	mvnne	r5, #0
   15888:	bne	15b20 <table_cell_from_buffer@@Base+0x5e4>
   1588c:	ldr	r3, [sp, #8]
   15890:	mov	r2, r4
   15894:	mov	r1, r7
   15898:	mov	r0, r6
   1589c:	bl	14704 <table_set_long@@Base>
   158a0:	mov	r5, #0
   158a4:	b	15b20 <table_cell_from_buffer@@Base+0x5e4>
   158a8:	add	r2, sp, #8
   158ac:	ldr	r1, [pc, #704]	; 15b74 <table_cell_from_buffer@@Base+0x638>
   158b0:	mov	r0, r5
   158b4:	bl	11c08 <__isoc99_sscanf@plt>
   158b8:	cmp	r0, #1
   158bc:	mvnne	r5, #0
   158c0:	bne	15b20 <table_cell_from_buffer@@Base+0x5e4>
   158c4:	ldr	r3, [sp, #8]
   158c8:	mov	r2, r4
   158cc:	mov	r1, r7
   158d0:	mov	r0, r6
   158d4:	bl	1472c <table_set_ulong@@Base>
   158d8:	mov	r5, #0
   158dc:	b	15b20 <table_cell_from_buffer@@Base+0x5e4>
   158e0:	add	r2, sp, #8
   158e4:	ldr	r1, [pc, #636]	; 15b68 <table_cell_from_buffer@@Base+0x62c>
   158e8:	mov	r0, r5
   158ec:	bl	11c08 <__isoc99_sscanf@plt>
   158f0:	cmp	r0, #1
   158f4:	mvnne	r5, #0
   158f8:	bne	15b20 <table_cell_from_buffer@@Base+0x5e4>
   158fc:	ldrd	r2, [sp, #8]
   15900:	strd	r2, [sp]
   15904:	mov	r2, r4
   15908:	mov	r1, r7
   1590c:	mov	r0, r6
   15910:	bl	14754 <table_set_llong@@Base>
   15914:	mov	r5, #0
   15918:	b	15b20 <table_cell_from_buffer@@Base+0x5e4>
   1591c:	add	r2, sp, #8
   15920:	ldr	r1, [pc, #580]	; 15b6c <table_cell_from_buffer@@Base+0x630>
   15924:	mov	r0, r5
   15928:	bl	11c08 <__isoc99_sscanf@plt>
   1592c:	cmp	r0, #1
   15930:	mvnne	r5, #0
   15934:	bne	15b20 <table_cell_from_buffer@@Base+0x5e4>
   15938:	ldrd	r2, [sp, #8]
   1593c:	strd	r2, [sp]
   15940:	mov	r2, r4
   15944:	mov	r1, r7
   15948:	mov	r0, r6
   1594c:	bl	14774 <table_set_ullong@@Base>
   15950:	mov	r5, #0
   15954:	b	15b20 <table_cell_from_buffer@@Base+0x5e4>
   15958:	add	r2, sp, #8
   1595c:	ldr	r1, [pc, #532]	; 15b78 <table_cell_from_buffer@@Base+0x63c>
   15960:	mov	r0, r5
   15964:	bl	11c08 <__isoc99_sscanf@plt>
   15968:	cmp	r0, #1
   1596c:	mvnne	r5, #0
   15970:	bne	15b20 <table_cell_from_buffer@@Base+0x5e4>
   15974:	add	r3, sp, #8
   15978:	mov	r2, r4
   1597c:	mov	r1, r7
   15980:	mov	r0, r6
   15984:	bl	14800 <table_set_string@@Base>
   15988:	mov	r5, #0
   1598c:	b	15b20 <table_cell_from_buffer@@Base+0x5e4>
   15990:	add	r2, sp, #8
   15994:	ldr	r1, [pc, #480]	; 15b7c <table_cell_from_buffer@@Base+0x640>
   15998:	mov	r0, r5
   1599c:	bl	11c08 <__isoc99_sscanf@plt>
   159a0:	cmp	r0, #1
   159a4:	mvnne	r5, #0
   159a8:	bne	15b20 <table_cell_from_buffer@@Base+0x5e4>
   159ac:	vldr	s0, [sp, #8]
   159b0:	mov	r2, r4
   159b4:	mov	r1, r7
   159b8:	mov	r0, r6
   159bc:	bl	14794 <table_set_float@@Base>
   159c0:	mov	r5, #0
   159c4:	b	15b20 <table_cell_from_buffer@@Base+0x5e4>
   159c8:	add	r2, sp, #8
   159cc:	ldr	r1, [pc, #428]	; 15b80 <table_cell_from_buffer@@Base+0x644>
   159d0:	mov	r0, r5
   159d4:	bl	11c08 <__isoc99_sscanf@plt>
   159d8:	cmp	r0, #1
   159dc:	mvnne	r5, #0
   159e0:	bne	15b20 <table_cell_from_buffer@@Base+0x5e4>
   159e4:	vldr	d0, [sp, #8]
   159e8:	mov	r2, r4
   159ec:	mov	r1, r7
   159f0:	mov	r0, r6
   159f4:	bl	147b8 <table_set_double@@Base>
   159f8:	mov	r5, #0
   159fc:	b	15b20 <table_cell_from_buffer@@Base+0x5e4>
   15a00:	add	r2, sp, #8
   15a04:	ldr	r1, [pc, #376]	; 15b84 <table_cell_from_buffer@@Base+0x648>
   15a08:	mov	r0, r5
   15a0c:	bl	11c08 <__isoc99_sscanf@plt>
   15a10:	cmp	r0, #1
   15a14:	mvnne	r5, #0
   15a18:	bne	15b20 <table_cell_from_buffer@@Base+0x5e4>
   15a1c:	vldr	d0, [sp, #8]
   15a20:	mov	r2, r4
   15a24:	mov	r1, r7
   15a28:	mov	r0, r6
   15a2c:	bl	147dc <table_set_ldouble@@Base>
   15a30:	mov	r5, #0
   15a34:	b	15b20 <table_cell_from_buffer@@Base+0x5e4>
   15a38:	add	r2, sp, #8
   15a3c:	ldr	r1, [pc, #268]	; 15b50 <table_cell_from_buffer@@Base+0x614>
   15a40:	mov	r0, r5
   15a44:	bl	11c08 <__isoc99_sscanf@plt>
   15a48:	cmp	r0, #1
   15a4c:	mvnne	r5, #0
   15a50:	bne	15b20 <table_cell_from_buffer@@Base+0x5e4>
   15a54:	ldr	r5, [sp, #8]
   15a58:	cmp	r5, #0
   15a5c:	beq	15a7c <table_cell_from_buffer@@Base+0x540>
   15a60:	mov	r3, #1
   15a64:	mov	r2, r4
   15a68:	mov	r1, r7
   15a6c:	mov	r0, r6
   15a70:	bl	1450c <table_set_bool@@Base>
   15a74:	mov	r5, #0
   15a78:	b	15b20 <table_cell_from_buffer@@Base+0x5e4>
   15a7c:	mov	r3, #0
   15a80:	mov	r2, r4
   15a84:	mov	r1, r7
   15a88:	mov	r0, r6
   15a8c:	bl	1450c <table_set_bool@@Base>
   15a90:	b	15b20 <table_cell_from_buffer@@Base+0x5e4>
   15a94:	add	r2, sp, #8
   15a98:	ldr	r1, [pc, #232]	; 15b88 <table_cell_from_buffer@@Base+0x64c>
   15a9c:	mov	r0, r5
   15aa0:	bl	11c08 <__isoc99_sscanf@plt>
   15aa4:	cmp	r0, #1
   15aa8:	mvnne	r5, #0
   15aac:	bne	15b20 <table_cell_from_buffer@@Base+0x5e4>
   15ab0:	ldrb	r3, [sp, #8]
   15ab4:	mov	r2, r4
   15ab8:	mov	r1, r7
   15abc:	mov	r0, r6
   15ac0:	bl	1481c <table_set_char@@Base>
   15ac4:	mov	r5, #0
   15ac8:	b	15b20 <table_cell_from_buffer@@Base+0x5e4>
   15acc:	add	r2, sp, #8
   15ad0:	ldr	r1, [pc, #176]	; 15b88 <table_cell_from_buffer@@Base+0x64c>
   15ad4:	mov	r0, r5
   15ad8:	bl	11c08 <__isoc99_sscanf@plt>
   15adc:	cmp	r0, #1
   15ae0:	mvnne	r5, #0
   15ae4:	bne	15b20 <table_cell_from_buffer@@Base+0x5e4>
   15ae8:	ldrb	r3, [sp, #8]
   15aec:	mov	r2, r4
   15af0:	mov	r1, r7
   15af4:	mov	r0, r6
   15af8:	bl	14844 <table_set_uchar@@Base>
   15afc:	mov	r5, #0
   15b00:	b	15b20 <table_cell_from_buffer@@Base+0x5e4>
   15b04:	add	r2, sp, #8
   15b08:	ldr	r1, [pc, #124]	; 15b8c <table_cell_from_buffer@@Base+0x650>
   15b0c:	mov	r0, r5
   15b10:	bl	11c08 <__isoc99_sscanf@plt>
   15b14:	cmp	r0, #1
   15b18:	mvnne	r5, #0
   15b1c:	beq	15b2c <table_cell_from_buffer@@Base+0x5f0>
   15b20:	mov	r0, r5
   15b24:	add	sp, sp, #268	; 0x10c
   15b28:	pop	{r4, r5, r6, r7, pc}
   15b2c:	ldr	r3, [sp, #8]
   15b30:	mov	r2, r4
   15b34:	mov	r1, r7
   15b38:	mov	r0, r6
   15b3c:	bl	1486c <table_set_ptr@@Base>
   15b40:	mov	r5, #0
   15b44:	b	15b20 <table_cell_from_buffer@@Base+0x5e4>
   15b48:	mov	r5, #0
   15b4c:	b	15b20 <table_cell_from_buffer@@Base+0x5e4>
   15b50:	strdeq	r5, [r1], -ip
   15b54:	andeq	r5, r1, r4, ror pc
   15b58:			; <UNDEFINED> instruction: 0x00015fb0
   15b5c:			; <UNDEFINED> instruction: 0x00015fb8
   15b60:	andeq	r5, r1, r8, lsl #31
   15b64:	andeq	r5, r1, ip, lsl #31
   15b68:	andeq	r5, r1, r8, ror pc
   15b6c:	andeq	r5, r1, r0, lsl #31
   15b70:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   15b74:	muleq	r1, r4, pc	; <UNPREDICTABLE>
   15b78:	muleq	r1, r8, pc	; <UNPREDICTABLE>
   15b7c:	muleq	r1, ip, pc	; <UNPREDICTABLE>
   15b80:	andeq	r5, r1, r0, lsr #31
   15b84:	andeq	r5, r1, r4, lsr #31
   15b88:	andeq	r5, r1, r8, lsr #31
   15b8c:	andeq	r5, r1, ip, lsr #31

00015b90 <table_get_cell_ptr@@Base>:
   15b90:	push	{r4, lr}
   15b94:	mov	r4, r2
   15b98:	bl	13e90 <table_get_row_ptr@@Base>
   15b9c:	ldr	r0, [r0]
   15ba0:	add	r0, r0, r4, lsl #2
   15ba4:	pop	{r4, pc}

00015ba8 <table_cell_init@@Base>:
   15ba8:	push	{r4, lr}
   15bac:	bl	15b90 <table_get_cell_ptr@@Base>
   15bb0:	mov	r3, #0
   15bb4:	str	r3, [r0]
   15bb8:	pop	{r4, pc}

00015bbc <table_cell_destroy@@Base>:
   15bbc:	push	{r4, r5, r6, lr}
   15bc0:	mov	r5, r0
   15bc4:	mov	r6, r1
   15bc8:	mov	r4, r2
   15bcc:	mov	r1, r2
   15bd0:	bl	12f64 <table_get_column_data_type@@Base>
   15bd4:	cmp	r0, #23
   15bd8:	popeq	{r4, r5, r6, pc}
   15bdc:	mov	r2, r4
   15be0:	mov	r1, r6
   15be4:	mov	r0, r5
   15be8:	bl	15b90 <table_get_cell_ptr@@Base>
   15bec:	ldr	r0, [r0]
   15bf0:	cmp	r0, #0
   15bf4:	popeq	{r4, r5, r6, pc}
   15bf8:	bl	11b90 <free@plt>
   15bfc:	pop	{r4, r5, r6, pc}

00015c00 <table_cell_nullify@@Base>:
   15c00:	push	{r4, lr}
   15c04:	bl	15b90 <table_get_cell_ptr@@Base>
   15c08:	mov	r4, r0
   15c0c:	ldr	r0, [r0]
   15c10:	cmp	r0, #0
   15c14:	beq	15c24 <table_cell_nullify@@Base+0x24>
   15c18:	bl	11b90 <free@plt>
   15c1c:	mov	r3, #0
   15c20:	str	r3, [r4]
   15c24:	mov	r0, #0
   15c28:	pop	{r4, pc}
   15c2c:	subs	r2, r1, #1
   15c30:	bxeq	lr
   15c34:	bcc	15e0c <table_cell_nullify@@Base+0x20c>
   15c38:	cmp	r0, r1
   15c3c:	bls	15df0 <table_cell_nullify@@Base+0x1f0>
   15c40:	tst	r1, r2
   15c44:	beq	15dfc <table_cell_nullify@@Base+0x1fc>
   15c48:	clz	r3, r0
   15c4c:	clz	r2, r1
   15c50:	sub	r3, r2, r3
   15c54:	rsbs	r3, r3, #31
   15c58:	addne	r3, r3, r3, lsl #1
   15c5c:	mov	r2, #0
   15c60:	addne	pc, pc, r3, lsl #2
   15c64:	nop			; (mov r0, r0)
   15c68:	cmp	r0, r1, lsl #31
   15c6c:	adc	r2, r2, r2
   15c70:	subcs	r0, r0, r1, lsl #31
   15c74:	cmp	r0, r1, lsl #30
   15c78:	adc	r2, r2, r2
   15c7c:	subcs	r0, r0, r1, lsl #30
   15c80:	cmp	r0, r1, lsl #29
   15c84:	adc	r2, r2, r2
   15c88:	subcs	r0, r0, r1, lsl #29
   15c8c:	cmp	r0, r1, lsl #28
   15c90:	adc	r2, r2, r2
   15c94:	subcs	r0, r0, r1, lsl #28
   15c98:	cmp	r0, r1, lsl #27
   15c9c:	adc	r2, r2, r2
   15ca0:	subcs	r0, r0, r1, lsl #27
   15ca4:	cmp	r0, r1, lsl #26
   15ca8:	adc	r2, r2, r2
   15cac:	subcs	r0, r0, r1, lsl #26
   15cb0:	cmp	r0, r1, lsl #25
   15cb4:	adc	r2, r2, r2
   15cb8:	subcs	r0, r0, r1, lsl #25
   15cbc:	cmp	r0, r1, lsl #24
   15cc0:	adc	r2, r2, r2
   15cc4:	subcs	r0, r0, r1, lsl #24
   15cc8:	cmp	r0, r1, lsl #23
   15ccc:	adc	r2, r2, r2
   15cd0:	subcs	r0, r0, r1, lsl #23
   15cd4:	cmp	r0, r1, lsl #22
   15cd8:	adc	r2, r2, r2
   15cdc:	subcs	r0, r0, r1, lsl #22
   15ce0:	cmp	r0, r1, lsl #21
   15ce4:	adc	r2, r2, r2
   15ce8:	subcs	r0, r0, r1, lsl #21
   15cec:	cmp	r0, r1, lsl #20
   15cf0:	adc	r2, r2, r2
   15cf4:	subcs	r0, r0, r1, lsl #20
   15cf8:	cmp	r0, r1, lsl #19
   15cfc:	adc	r2, r2, r2
   15d00:	subcs	r0, r0, r1, lsl #19
   15d04:	cmp	r0, r1, lsl #18
   15d08:	adc	r2, r2, r2
   15d0c:	subcs	r0, r0, r1, lsl #18
   15d10:	cmp	r0, r1, lsl #17
   15d14:	adc	r2, r2, r2
   15d18:	subcs	r0, r0, r1, lsl #17
   15d1c:	cmp	r0, r1, lsl #16
   15d20:	adc	r2, r2, r2
   15d24:	subcs	r0, r0, r1, lsl #16
   15d28:	cmp	r0, r1, lsl #15
   15d2c:	adc	r2, r2, r2
   15d30:	subcs	r0, r0, r1, lsl #15
   15d34:	cmp	r0, r1, lsl #14
   15d38:	adc	r2, r2, r2
   15d3c:	subcs	r0, r0, r1, lsl #14
   15d40:	cmp	r0, r1, lsl #13
   15d44:	adc	r2, r2, r2
   15d48:	subcs	r0, r0, r1, lsl #13
   15d4c:	cmp	r0, r1, lsl #12
   15d50:	adc	r2, r2, r2
   15d54:	subcs	r0, r0, r1, lsl #12
   15d58:	cmp	r0, r1, lsl #11
   15d5c:	adc	r2, r2, r2
   15d60:	subcs	r0, r0, r1, lsl #11
   15d64:	cmp	r0, r1, lsl #10
   15d68:	adc	r2, r2, r2
   15d6c:	subcs	r0, r0, r1, lsl #10
   15d70:	cmp	r0, r1, lsl #9
   15d74:	adc	r2, r2, r2
   15d78:	subcs	r0, r0, r1, lsl #9
   15d7c:	cmp	r0, r1, lsl #8
   15d80:	adc	r2, r2, r2
   15d84:	subcs	r0, r0, r1, lsl #8
   15d88:	cmp	r0, r1, lsl #7
   15d8c:	adc	r2, r2, r2
   15d90:	subcs	r0, r0, r1, lsl #7
   15d94:	cmp	r0, r1, lsl #6
   15d98:	adc	r2, r2, r2
   15d9c:	subcs	r0, r0, r1, lsl #6
   15da0:	cmp	r0, r1, lsl #5
   15da4:	adc	r2, r2, r2
   15da8:	subcs	r0, r0, r1, lsl #5
   15dac:	cmp	r0, r1, lsl #4
   15db0:	adc	r2, r2, r2
   15db4:	subcs	r0, r0, r1, lsl #4
   15db8:	cmp	r0, r1, lsl #3
   15dbc:	adc	r2, r2, r2
   15dc0:	subcs	r0, r0, r1, lsl #3
   15dc4:	cmp	r0, r1, lsl #2
   15dc8:	adc	r2, r2, r2
   15dcc:	subcs	r0, r0, r1, lsl #2
   15dd0:	cmp	r0, r1, lsl #1
   15dd4:	adc	r2, r2, r2
   15dd8:	subcs	r0, r0, r1, lsl #1
   15ddc:	cmp	r0, r1
   15de0:	adc	r2, r2, r2
   15de4:	subcs	r0, r0, r1
   15de8:	mov	r0, r2
   15dec:	bx	lr
   15df0:	moveq	r0, #1
   15df4:	movne	r0, #0
   15df8:	bx	lr
   15dfc:	clz	r2, r1
   15e00:	rsb	r2, r2, #31
   15e04:	lsr	r0, r0, r2
   15e08:	bx	lr
   15e0c:	cmp	r0, #0
   15e10:	mvnne	r0, #0
   15e14:	b	15e38 <table_cell_nullify@@Base+0x238>
   15e18:	cmp	r1, #0
   15e1c:	beq	15e0c <table_cell_nullify@@Base+0x20c>
   15e20:	push	{r0, r1, lr}
   15e24:	bl	15c2c <table_cell_nullify@@Base+0x2c>
   15e28:	pop	{r1, r2, lr}
   15e2c:	mul	r3, r2, r0
   15e30:	sub	r1, r1, r3
   15e34:	bx	lr
   15e38:	push	{r1, lr}
   15e3c:	mov	r0, #8
   15e40:	bl	11b6c <raise@plt>
   15e44:	pop	{r1, pc}

00015e48 <__libc_csu_init@@Base>:
   15e48:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   15e4c:	mov	r7, r0
   15e50:	ldr	r6, [pc, #72]	; 15ea0 <__libc_csu_init@@Base+0x58>
   15e54:	ldr	r5, [pc, #72]	; 15ea4 <__libc_csu_init@@Base+0x5c>
   15e58:	add	r6, pc, r6
   15e5c:	add	r5, pc, r5
   15e60:	sub	r6, r6, r5
   15e64:	mov	r8, r1
   15e68:	mov	r9, r2
   15e6c:	bl	11b4c <raise@plt-0x20>
   15e70:	asrs	r6, r6, #2
   15e74:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   15e78:	mov	r4, #0
   15e7c:	add	r4, r4, #1
   15e80:	ldr	r3, [r5], #4
   15e84:	mov	r2, r9
   15e88:	mov	r1, r8
   15e8c:	mov	r0, r7
   15e90:	blx	r3
   15e94:	cmp	r6, r4
   15e98:	bne	15e7c <__libc_csu_init@@Base+0x34>
   15e9c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   15ea0:	strheq	r1, [r1], -r0
   15ea4:	andeq	r1, r1, r8, lsr #1

00015ea8 <__libc_csu_fini@@Base>:
   15ea8:	bx	lr

Disassembly of section .fini:

00015eac <.fini>:
   15eac:	push	{r3, lr}
   15eb0:	pop	{r3, pc}
