
../repos/sgerbino-table-2fdd8d0/bin/table_row_test:     file format elf32-littlearm


Disassembly of section .init:

00011ee0 <.init>:
   11ee0:	push	{r3, lr}
   11ee4:	bl	11ff0 <_start@@Base+0x3c>
   11ee8:	pop	{r3, pc}

Disassembly of section .plt:

00011eec <strcmp@plt-0x14>:
   11eec:	push	{lr}		; (str lr, [sp, #-4]!)
   11ef0:	ldr	lr, [pc, #4]	; 11efc <strcmp@plt-0x4>
   11ef4:	add	lr, pc, lr
   11ef8:	ldr	pc, [lr, #8]!
   11efc:	andeq	r4, r1, r4, lsl #2

00011f00 <strcmp@plt>:
   11f00:	add	ip, pc, #0, 12
   11f04:	add	ip, ip, #20, 20	; 0x14000
   11f08:	ldr	pc, [ip, #260]!	; 0x104

00011f0c <printf@plt>:
   11f0c:	add	ip, pc, #0, 12
   11f10:	add	ip, ip, #20, 20	; 0x14000
   11f14:	ldr	pc, [ip, #252]!	; 0xfc

00011f18 <free@plt>:
   11f18:	add	ip, pc, #0, 12
   11f1c:	add	ip, ip, #20, 20	; 0x14000
   11f20:	ldr	pc, [ip, #244]!	; 0xf4

00011f24 <time@plt>:
   11f24:	add	ip, pc, #0, 12
   11f28:	add	ip, ip, #20, 20	; 0x14000
   11f2c:	ldr	pc, [ip, #236]!	; 0xec

00011f30 <realloc@plt>:
   11f30:	add	ip, pc, #0, 12
   11f34:	add	ip, ip, #20, 20	; 0x14000
   11f38:	ldr	pc, [ip, #228]!	; 0xe4

00011f3c <strcpy@plt>:
   11f3c:	add	ip, pc, #0, 12
   11f40:	add	ip, ip, #20, 20	; 0x14000
   11f44:	ldr	pc, [ip, #220]!	; 0xdc

00011f48 <malloc@plt>:
   11f48:	add	ip, pc, #0, 12
   11f4c:	add	ip, ip, #20, 20	; 0x14000
   11f50:	ldr	pc, [ip, #212]!	; 0xd4

00011f54 <__libc_start_main@plt>:
   11f54:	add	ip, pc, #0, 12
   11f58:	add	ip, ip, #20, 20	; 0x14000
   11f5c:	ldr	pc, [ip, #204]!	; 0xcc

00011f60 <__gmon_start__@plt>:
   11f60:	add	ip, pc, #0, 12
   11f64:	add	ip, ip, #20, 20	; 0x14000
   11f68:	ldr	pc, [ip, #196]!	; 0xc4

00011f6c <strlen@plt>:
   11f6c:	add	ip, pc, #0, 12
   11f70:	add	ip, ip, #20, 20	; 0x14000
   11f74:	ldr	pc, [ip, #188]!	; 0xbc

00011f78 <srand@plt>:
   11f78:	add	ip, pc, #0, 12
   11f7c:	add	ip, ip, #20, 20	; 0x14000
   11f80:	ldr	pc, [ip, #180]!	; 0xb4

00011f84 <snprintf@plt>:
   11f84:	add	ip, pc, #0, 12
   11f88:	add	ip, ip, #20, 20	; 0x14000
   11f8c:	ldr	pc, [ip, #172]!	; 0xac

00011f90 <__isoc99_sscanf@plt>:
   11f90:	add	ip, pc, #0, 12
   11f94:	add	ip, ip, #20, 20	; 0x14000
   11f98:	ldr	pc, [ip, #164]!	; 0xa4

00011f9c <rand@plt>:
   11f9c:	add	ip, pc, #0, 12
   11fa0:	add	ip, ip, #20, 20	; 0x14000
   11fa4:	ldr	pc, [ip, #156]!	; 0x9c

00011fa8 <abort@plt>:
   11fa8:	add	ip, pc, #0, 12
   11fac:	add	ip, ip, #20, 20	; 0x14000
   11fb0:	ldr	pc, [ip, #148]!	; 0x94

Disassembly of section .text:

00011fb4 <_start@@Base>:
   11fb4:	mov	fp, #0
   11fb8:	mov	lr, #0
   11fbc:	pop	{r1}		; (ldr r1, [sp], #4)
   11fc0:	mov	r2, sp
   11fc4:	push	{r2}		; (str r2, [sp, #-4]!)
   11fc8:	push	{r0}		; (str r0, [sp, #-4]!)
   11fcc:	ldr	ip, [pc, #16]	; 11fe4 <_start@@Base+0x30>
   11fd0:	push	{ip}		; (str ip, [sp, #-4]!)
   11fd4:	ldr	r0, [pc, #12]	; 11fe8 <_start@@Base+0x34>
   11fd8:	ldr	r3, [pc, #12]	; 11fec <_start@@Base+0x38>
   11fdc:	bl	11f54 <__libc_start_main@plt>
   11fe0:	bl	11fa8 <abort@plt>
   11fe4:			; <UNDEFINED> instruction: 0x000156b8
   11fe8:	andeq	r2, r1, r4, lsr #1
   11fec:	andeq	r5, r1, r8, asr r6
   11ff0:	ldr	r3, [pc, #20]	; 1200c <_start@@Base+0x58>
   11ff4:	ldr	r2, [pc, #20]	; 12010 <_start@@Base+0x5c>
   11ff8:	add	r3, pc, r3
   11ffc:	ldr	r2, [r3, r2]
   12000:	cmp	r2, #0
   12004:	bxeq	lr
   12008:	b	11f60 <__gmon_start__@plt>
   1200c:	andeq	r4, r1, r0
   12010:	andeq	r0, r0, r8, asr #32
   12014:	ldr	r0, [pc, #24]	; 12034 <_start@@Base+0x80>
   12018:	ldr	r3, [pc, #24]	; 12038 <_start@@Base+0x84>
   1201c:	cmp	r3, r0
   12020:	bxeq	lr
   12024:	ldr	r3, [pc, #16]	; 1203c <_start@@Base+0x88>
   12028:	cmp	r3, #0
   1202c:	bxeq	lr
   12030:	bx	r3
   12034:	andeq	r6, r2, r4, asr r0
   12038:	andeq	r6, r2, r4, asr r0
   1203c:	andeq	r0, r0, r0
   12040:	ldr	r0, [pc, #36]	; 1206c <_start@@Base+0xb8>
   12044:	ldr	r1, [pc, #36]	; 12070 <_start@@Base+0xbc>
   12048:	sub	r1, r1, r0
   1204c:	asr	r1, r1, #2
   12050:	add	r1, r1, r1, lsr #31
   12054:	asrs	r1, r1, #1
   12058:	bxeq	lr
   1205c:	ldr	r3, [pc, #16]	; 12074 <_start@@Base+0xc0>
   12060:	cmp	r3, #0
   12064:	bxeq	lr
   12068:	bx	r3
   1206c:	andeq	r6, r2, r4, asr r0
   12070:	andeq	r6, r2, r4, asr r0
   12074:	andeq	r0, r0, r0
   12078:	push	{r4, lr}
   1207c:	ldr	r4, [pc, #24]	; 1209c <_start@@Base+0xe8>
   12080:	ldrb	r3, [r4]
   12084:	cmp	r3, #0
   12088:	popne	{r4, pc}
   1208c:	bl	12014 <_start@@Base+0x60>
   12090:	mov	r3, #1
   12094:	strb	r3, [r4]
   12098:	pop	{r4, pc}
   1209c:	andeq	r6, r2, r4, asr r0
   120a0:	b	12040 <_start@@Base+0x8c>

000120a4 <main@@Base>:
   120a4:	push	{r4, r5, r6, sl, fp, lr}
   120a8:	add	fp, sp, #16
   120ac:	sub	sp, sp, #64	; 0x40
   120b0:	add	r0, sp, #4
   120b4:	bl	11f24 <time@plt>
   120b8:	bl	11f78 <srand@plt>
   120bc:	bl	11f9c <rand@plt>
   120c0:	add	r5, sp, #8
   120c4:	mov	r4, r0
   120c8:	mov	r0, r5
   120cc:	bl	12194 <table_init@@Base>
   120d0:	movw	r0, #34079	; 0x851f
   120d4:	mov	r6, #0
   120d8:	movt	r0, #20971	; 0x51eb
   120dc:	umull	r0, r1, r4, r0
   120e0:	lsr	r0, r1, #5
   120e4:	mov	r1, #100	; 0x64
   120e8:	mls	r0, r0, r1, r4
   120ec:	add	r4, r0, #100	; 0x64
   120f0:	mov	r0, r5
   120f4:	bl	13aa0 <table_add_row@@Base>
   120f8:	add	r6, r6, #1
   120fc:	cmp	r6, r4
   12100:	bcc	120f0 <main@@Base+0x4c>
   12104:	add	r0, sp, #8
   12108:	bl	13a98 <table_get_row_length@@Base>
   1210c:	mov	r5, #0
   12110:	cmp	r0, r4
   12114:	beq	12130 <main@@Base+0x8c>
   12118:	mov	r2, r0
   1211c:	movw	r0, #22216	; 0x56c8
   12120:	mov	r1, r4
   12124:	movt	r0, #1
   12128:	bl	11f0c <printf@plt>
   1212c:	mvn	r5, #0
   12130:	add	r0, sp, #8
   12134:	bl	121f0 <table_destroy@@Base>
   12138:	mov	r0, r5
   1213c:	sub	sp, fp, #16
   12140:	pop	{r4, r5, r6, sl, fp, pc}

00012144 <table_new@@Base>:
   12144:	push	{fp, lr}
   12148:	mov	fp, sp
   1214c:	mov	r0, #56	; 0x38
   12150:	bl	11f48 <malloc@plt>
   12154:	vmov.i32	q8, #0	; 0x00000000
   12158:	mov	r1, #0
   1215c:	mov	r2, #10
   12160:	mov	r3, #20
   12164:	str	r1, [r0]
   12168:	stmib	r0, {r1, r2}
   1216c:	str	r1, [r0, #12]
   12170:	str	r1, [r0, #16]
   12174:	str	r1, [r0, #20]
   12178:	str	r3, [r0, #24]
   1217c:	str	r1, [r0, #28]
   12180:	str	r2, [r0, #48]	; 0x30
   12184:	str	r1, [r0, #52]	; 0x34
   12188:	add	r1, r0, #32
   1218c:	vst1.32	{d16-d17}, [r1]
   12190:	pop	{fp, pc}

00012194 <table_init@@Base>:
   12194:	vmov.i32	q8, #0	; 0x00000000
   12198:	mov	r1, #0
   1219c:	mov	r2, #10
   121a0:	mov	r3, #20
   121a4:	str	r1, [r0]
   121a8:	stmib	r0, {r1, r2}
   121ac:	str	r1, [r0, #12]
   121b0:	str	r1, [r0, #16]
   121b4:	str	r1, [r0, #20]
   121b8:	str	r3, [r0, #24]
   121bc:	str	r1, [r0, #28]
   121c0:	str	r2, [r0, #48]	; 0x30
   121c4:	str	r1, [r0, #52]	; 0x34
   121c8:	add	r0, r0, #32
   121cc:	vst1.32	{d16-d17}, [r0]
   121d0:	bx	lr

000121d4 <table_delete@@Base>:
   121d4:	push	{r4, sl, fp, lr}
   121d8:	add	fp, sp, #8
   121dc:	mov	r4, r0
   121e0:	bl	121f0 <table_destroy@@Base>
   121e4:	mov	r0, r4
   121e8:	pop	{r4, sl, fp, lr}
   121ec:	b	11f18 <free@plt>

000121f0 <table_destroy@@Base>:
   121f0:	cmp	r0, #0
   121f4:	bxeq	lr
   121f8:	push	{r4, r5, r6, sl, fp, lr}
   121fc:	add	fp, sp, #16
   12200:	mvn	r1, #0
   12204:	mvn	r2, #0
   12208:	mov	r3, #64	; 0x40
   1220c:	mov	r4, r0
   12210:	bl	12bb0 <table_notify@@Base>
   12214:	mov	r0, r4
   12218:	bl	13a98 <table_get_row_length@@Base>
   1221c:	cmp	r0, #1
   12220:	blt	12244 <table_destroy@@Base+0x54>
   12224:	mov	r5, r0
   12228:	mov	r6, #0
   1222c:	mov	r0, r4
   12230:	mov	r1, r6
   12234:	bl	13a3c <table_row_destroy@@Base>
   12238:	add	r6, r6, #1
   1223c:	cmp	r5, r6
   12240:	bne	1222c <table_destroy@@Base+0x3c>
   12244:	ldr	r0, [r4, #16]
   12248:	cmp	r0, #0
   1224c:	beq	12254 <table_destroy@@Base+0x64>
   12250:	bl	11f18 <free@plt>
   12254:	mov	r0, r4
   12258:	bl	12cc0 <table_get_column_length@@Base>
   1225c:	cmp	r0, #1
   12260:	blt	12284 <table_destroy@@Base+0x94>
   12264:	mov	r5, r0
   12268:	mov	r6, #0
   1226c:	mov	r0, r4
   12270:	mov	r1, r6
   12274:	bl	12ca8 <table_column_destroy@@Base>
   12278:	add	r6, r6, #1
   1227c:	cmp	r5, r6
   12280:	bne	1226c <table_destroy@@Base+0x7c>
   12284:	ldr	r0, [r4]
   12288:	cmp	r0, #0
   1228c:	beq	12294 <table_destroy@@Base+0xa4>
   12290:	bl	11f18 <free@plt>
   12294:	ldr	r0, [r4, #36]	; 0x24
   12298:	cmp	r0, #0
   1229c:	beq	122a4 <table_destroy@@Base+0xb4>
   122a0:	bl	11f18 <free@plt>
   122a4:	ldr	r0, [r4, #40]	; 0x28
   122a8:	cmp	r0, #0
   122ac:	beq	122b4 <table_destroy@@Base+0xc4>
   122b0:	bl	11f18 <free@plt>
   122b4:	ldr	r0, [r4, #44]	; 0x2c
   122b8:	cmp	r0, #0
   122bc:	pop	{r4, r5, r6, sl, fp, lr}
   122c0:	beq	122c8 <table_destroy@@Base+0xd8>
   122c4:	b	11f18 <free@plt>
   122c8:	bx	lr

000122cc <table_dupe@@Base>:
   122cc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   122d0:	add	fp, sp, #28
   122d4:	sub	sp, sp, #12
   122d8:	mov	r4, r0
   122dc:	bl	13a98 <table_get_row_length@@Base>
   122e0:	mov	r8, r0
   122e4:	mov	r0, r4
   122e8:	bl	12cc0 <table_get_column_length@@Base>
   122ec:	mov	r6, r0
   122f0:	mov	r0, #56	; 0x38
   122f4:	bl	11f48 <malloc@plt>
   122f8:	vmov.i32	q8, #0	; 0x00000000
   122fc:	mov	sl, r0
   12300:	mov	r5, #0
   12304:	mov	r0, #10
   12308:	mov	r1, #20
   1230c:	cmp	r6, #1
   12310:	str	r5, [sl]
   12314:	str	r5, [sl, #4]
   12318:	str	r0, [sl, #8]
   1231c:	str	r5, [sl, #12]
   12320:	str	r5, [sl, #16]
   12324:	str	r5, [sl, #20]
   12328:	str	r1, [sl, #24]
   1232c:	str	r5, [sl, #28]
   12330:	str	r0, [sl, #48]	; 0x30
   12334:	add	r0, sl, #32
   12338:	str	r5, [sl, #52]	; 0x34
   1233c:	vst1.32	{d16-d17}, [r0]
   12340:	blt	1237c <table_dupe@@Base+0xb0>
   12344:	mov	r0, r4
   12348:	mov	r1, r5
   1234c:	bl	12d34 <table_get_column_name@@Base>
   12350:	mov	r7, r0
   12354:	mov	r0, r4
   12358:	mov	r1, r5
   1235c:	bl	12d44 <table_get_column_data_type@@Base>
   12360:	mov	r2, r0
   12364:	mov	r0, sl
   12368:	mov	r1, r7
   1236c:	bl	12d58 <table_add_column@@Base>
   12370:	add	r5, r5, #1
   12374:	cmp	r6, r5
   12378:	bne	12344 <table_dupe@@Base+0x78>
   1237c:	cmp	r8, #1
   12380:	blt	12910 <table_dupe@@Base+0x644>
   12384:	mov	r5, #0
   12388:	add	r9, sp, #8
   1238c:	mov	r0, sl
   12390:	bl	13aa0 <table_add_row@@Base>
   12394:	cmp	r6, #1
   12398:	bge	123b8 <table_dupe@@Base+0xec>
   1239c:	add	r5, r5, #1
   123a0:	cmp	r5, r8
   123a4:	beq	12910 <table_dupe@@Base+0x644>
   123a8:	mov	r0, sl
   123ac:	bl	13aa0 <table_add_row@@Base>
   123b0:	cmp	r6, #1
   123b4:	blt	1239c <table_dupe@@Base+0xd0>
   123b8:	mov	r7, #0
   123bc:	b	123f4 <table_dupe@@Base+0x128>
   123c0:	mov	r0, r4
   123c4:	mov	r1, r5
   123c8:	mov	r2, r7
   123cc:	bl	139f8 <table_get_ptr@@Base>
   123d0:	str	r0, [sp, #8]
   123d4:	mov	r0, sl
   123d8:	mov	r1, r5
   123dc:	mov	r2, r7
   123e0:	mov	r3, r9
   123e4:	bl	14b90 <table_set_ptr@@Base>
   123e8:	add	r7, r7, #1
   123ec:	cmp	r6, r7
   123f0:	beq	1239c <table_dupe@@Base+0xd0>
   123f4:	mov	r0, r4
   123f8:	mov	r1, r7
   123fc:	bl	12d44 <table_get_column_data_type@@Base>
   12400:	cmp	r0, #23
   12404:	bhi	123e8 <table_dupe@@Base+0x11c>
   12408:	add	r1, pc, #0
   1240c:	ldr	pc, [r1, r0, lsl #2]
   12410:	andeq	r2, r1, r0, ror r4
   12414:	andeq	r2, r1, r4, lsr #9
   12418:	ldrdeq	r2, [r1], -r8
   1241c:	andeq	r2, r1, ip, lsl #10
   12420:	andeq	r2, r1, r0, asr #10
   12424:	andeq	r2, r1, r4, ror r5
   12428:	andeq	r2, r1, r8, lsr #11
   1242c:	ldrdeq	r2, [r1], -ip
   12430:	andeq	r2, r1, r0, lsl r6
   12434:	andeq	r2, r1, r4, asr #12
   12438:	andeq	r2, r1, r8, ror r6
   1243c:	andeq	r2, r1, ip, lsr #13
   12440:	andeq	r2, r1, r0, ror #13
   12444:	andeq	r2, r1, r4, lsl r7
   12448:	andeq	r2, r1, r8, asr #14
   1244c:	andeq	r2, r1, ip, ror r7
   12450:			; <UNDEFINED> instruction: 0x000127b0
   12454:	andeq	r2, r1, r0, ror #15
   12458:	andeq	r2, r1, r0, lsl r8
   1245c:	andeq	r2, r1, r0, asr #16
   12460:	andeq	r2, r1, r4, ror r8
   12464:	andeq	r2, r1, r8, lsr #17
   12468:	ldrdeq	r2, [r1], -ip
   1246c:	andeq	r2, r1, r0, asr #7
   12470:	mov	r0, r4
   12474:	mov	r1, r5
   12478:	mov	r2, r7
   1247c:	bl	137ec <table_get_int@@Base>
   12480:	mov	r3, r0
   12484:	mov	r0, sl
   12488:	mov	r1, r5
   1248c:	mov	r2, r7
   12490:	bl	1404c <table_set_int@@Base>
   12494:	add	r7, r7, #1
   12498:	cmp	r6, r7
   1249c:	bne	123f4 <table_dupe@@Base+0x128>
   124a0:	b	1239c <table_dupe@@Base+0xd0>
   124a4:	mov	r0, r4
   124a8:	mov	r1, r5
   124ac:	mov	r2, r7
   124b0:	bl	13804 <table_get_uint@@Base>
   124b4:	mov	r3, r0
   124b8:	mov	r0, sl
   124bc:	mov	r1, r5
   124c0:	mov	r2, r7
   124c4:	bl	140cc <table_set_uint@@Base>
   124c8:	add	r7, r7, #1
   124cc:	cmp	r6, r7
   124d0:	bne	123f4 <table_dupe@@Base+0x128>
   124d4:	b	1239c <table_dupe@@Base+0xd0>
   124d8:	mov	r0, r4
   124dc:	mov	r1, r5
   124e0:	mov	r2, r7
   124e4:	bl	1381c <table_get_int8@@Base>
   124e8:	mov	r3, r0
   124ec:	mov	r0, sl
   124f0:	mov	r1, r5
   124f4:	mov	r2, r7
   124f8:	bl	1414c <table_set_int8@@Base>
   124fc:	add	r7, r7, #1
   12500:	cmp	r6, r7
   12504:	bne	123f4 <table_dupe@@Base+0x128>
   12508:	b	1239c <table_dupe@@Base+0xd0>
   1250c:	mov	r0, r4
   12510:	mov	r1, r5
   12514:	mov	r2, r7
   12518:	bl	13834 <table_get_uint8@@Base>
   1251c:	mov	r3, r0
   12520:	mov	r0, sl
   12524:	mov	r1, r5
   12528:	mov	r2, r7
   1252c:	bl	141cc <table_set_uint8@@Base>
   12530:	add	r7, r7, #1
   12534:	cmp	r6, r7
   12538:	bne	123f4 <table_dupe@@Base+0x128>
   1253c:	b	1239c <table_dupe@@Base+0xd0>
   12540:	mov	r0, r4
   12544:	mov	r1, r5
   12548:	mov	r2, r7
   1254c:	bl	1384c <table_get_int16@@Base>
   12550:	mov	r3, r0
   12554:	mov	r0, sl
   12558:	mov	r1, r5
   1255c:	mov	r2, r7
   12560:	bl	1424c <table_set_int16@@Base>
   12564:	add	r7, r7, #1
   12568:	cmp	r6, r7
   1256c:	bne	123f4 <table_dupe@@Base+0x128>
   12570:	b	1239c <table_dupe@@Base+0xd0>
   12574:	mov	r0, r4
   12578:	mov	r1, r5
   1257c:	mov	r2, r7
   12580:	bl	13864 <table_get_uint16@@Base>
   12584:	mov	r3, r0
   12588:	mov	r0, sl
   1258c:	mov	r1, r5
   12590:	mov	r2, r7
   12594:	bl	142cc <table_set_uint16@@Base>
   12598:	add	r7, r7, #1
   1259c:	cmp	r6, r7
   125a0:	bne	123f4 <table_dupe@@Base+0x128>
   125a4:	b	1239c <table_dupe@@Base+0xd0>
   125a8:	mov	r0, r4
   125ac:	mov	r1, r5
   125b0:	mov	r2, r7
   125b4:	bl	1387c <table_get_int32@@Base>
   125b8:	mov	r3, r0
   125bc:	mov	r0, sl
   125c0:	mov	r1, r5
   125c4:	mov	r2, r7
   125c8:	bl	1434c <table_set_int32@@Base>
   125cc:	add	r7, r7, #1
   125d0:	cmp	r6, r7
   125d4:	bne	123f4 <table_dupe@@Base+0x128>
   125d8:	b	1239c <table_dupe@@Base+0xd0>
   125dc:	mov	r0, r4
   125e0:	mov	r1, r5
   125e4:	mov	r2, r7
   125e8:	bl	13894 <table_get_uint32@@Base>
   125ec:	mov	r3, r0
   125f0:	mov	r0, sl
   125f4:	mov	r1, r5
   125f8:	mov	r2, r7
   125fc:	bl	143cc <table_set_uint32@@Base>
   12600:	add	r7, r7, #1
   12604:	cmp	r6, r7
   12608:	bne	123f4 <table_dupe@@Base+0x128>
   1260c:	b	1239c <table_dupe@@Base+0xd0>
   12610:	mov	r0, r4
   12614:	mov	r1, r5
   12618:	mov	r2, r7
   1261c:	bl	138ac <table_get_int64@@Base>
   12620:	stm	sp, {r0, r1}
   12624:	mov	r0, sl
   12628:	mov	r1, r5
   1262c:	mov	r2, r7
   12630:	bl	1444c <table_set_int64@@Base>
   12634:	add	r7, r7, #1
   12638:	cmp	r6, r7
   1263c:	bne	123f4 <table_dupe@@Base+0x128>
   12640:	b	1239c <table_dupe@@Base+0xd0>
   12644:	mov	r0, r4
   12648:	mov	r1, r5
   1264c:	mov	r2, r7
   12650:	bl	138c4 <table_get_uint64@@Base>
   12654:	stm	sp, {r0, r1}
   12658:	mov	r0, sl
   1265c:	mov	r1, r5
   12660:	mov	r2, r7
   12664:	bl	144d4 <table_set_uint64@@Base>
   12668:	add	r7, r7, #1
   1266c:	cmp	r6, r7
   12670:	bne	123f4 <table_dupe@@Base+0x128>
   12674:	b	1239c <table_dupe@@Base+0xd0>
   12678:	mov	r0, r4
   1267c:	mov	r1, r5
   12680:	mov	r2, r7
   12684:	bl	138dc <table_get_short@@Base>
   12688:	mov	r3, r0
   1268c:	mov	r0, sl
   12690:	mov	r1, r5
   12694:	mov	r2, r7
   12698:	bl	1455c <table_set_short@@Base>
   1269c:	add	r7, r7, #1
   126a0:	cmp	r6, r7
   126a4:	bne	123f4 <table_dupe@@Base+0x128>
   126a8:	b	1239c <table_dupe@@Base+0xd0>
   126ac:	mov	r0, r4
   126b0:	mov	r1, r5
   126b4:	mov	r2, r7
   126b8:	bl	138f4 <table_get_ushort@@Base>
   126bc:	mov	r3, r0
   126c0:	mov	r0, sl
   126c4:	mov	r1, r5
   126c8:	mov	r2, r7
   126cc:	bl	145dc <table_set_ushort@@Base>
   126d0:	add	r7, r7, #1
   126d4:	cmp	r6, r7
   126d8:	bne	123f4 <table_dupe@@Base+0x128>
   126dc:	b	1239c <table_dupe@@Base+0xd0>
   126e0:	mov	r0, r4
   126e4:	mov	r1, r5
   126e8:	mov	r2, r7
   126ec:	bl	1390c <table_get_long@@Base>
   126f0:	mov	r3, r0
   126f4:	mov	r0, sl
   126f8:	mov	r1, r5
   126fc:	mov	r2, r7
   12700:	bl	1465c <table_set_long@@Base>
   12704:	add	r7, r7, #1
   12708:	cmp	r6, r7
   1270c:	bne	123f4 <table_dupe@@Base+0x128>
   12710:	b	1239c <table_dupe@@Base+0xd0>
   12714:	mov	r0, r4
   12718:	mov	r1, r5
   1271c:	mov	r2, r7
   12720:	bl	13924 <table_get_ulong@@Base>
   12724:	mov	r3, r0
   12728:	mov	r0, sl
   1272c:	mov	r1, r5
   12730:	mov	r2, r7
   12734:	bl	146dc <table_set_ulong@@Base>
   12738:	add	r7, r7, #1
   1273c:	cmp	r6, r7
   12740:	bne	123f4 <table_dupe@@Base+0x128>
   12744:	b	1239c <table_dupe@@Base+0xd0>
   12748:	mov	r0, r4
   1274c:	mov	r1, r5
   12750:	mov	r2, r7
   12754:	bl	1393c <table_get_llong@@Base>
   12758:	stm	sp, {r0, r1}
   1275c:	mov	r0, sl
   12760:	mov	r1, r5
   12764:	mov	r2, r7
   12768:	bl	1475c <table_set_llong@@Base>
   1276c:	add	r7, r7, #1
   12770:	cmp	r6, r7
   12774:	bne	123f4 <table_dupe@@Base+0x128>
   12778:	b	1239c <table_dupe@@Base+0xd0>
   1277c:	mov	r0, r4
   12780:	mov	r1, r5
   12784:	mov	r2, r7
   12788:	bl	13954 <table_get_ullong@@Base>
   1278c:	stm	sp, {r0, r1}
   12790:	mov	r0, sl
   12794:	mov	r1, r5
   12798:	mov	r2, r7
   1279c:	bl	147e4 <table_set_ullong@@Base>
   127a0:	add	r7, r7, #1
   127a4:	cmp	r6, r7
   127a8:	bne	123f4 <table_dupe@@Base+0x128>
   127ac:	b	1239c <table_dupe@@Base+0xd0>
   127b0:	mov	r0, r4
   127b4:	mov	r1, r5
   127b8:	mov	r2, r7
   127bc:	bl	1396c <table_get_float@@Base>
   127c0:	mov	r0, sl
   127c4:	mov	r1, r5
   127c8:	mov	r2, r7
   127cc:	bl	1486c <table_set_float@@Base>
   127d0:	add	r7, r7, #1
   127d4:	cmp	r6, r7
   127d8:	bne	123f4 <table_dupe@@Base+0x128>
   127dc:	b	1239c <table_dupe@@Base+0xd0>
   127e0:	mov	r0, r4
   127e4:	mov	r1, r5
   127e8:	mov	r2, r7
   127ec:	bl	13984 <table_get_double@@Base>
   127f0:	mov	r0, sl
   127f4:	mov	r1, r5
   127f8:	mov	r2, r7
   127fc:	bl	148f8 <table_set_double@@Base>
   12800:	add	r7, r7, #1
   12804:	cmp	r6, r7
   12808:	bne	123f4 <table_dupe@@Base+0x128>
   1280c:	b	1239c <table_dupe@@Base+0xd0>
   12810:	mov	r0, r4
   12814:	mov	r1, r5
   12818:	mov	r2, r7
   1281c:	bl	1399c <table_get_ldouble@@Base>
   12820:	mov	r0, sl
   12824:	mov	r1, r5
   12828:	mov	r2, r7
   1282c:	bl	14980 <table_set_ldouble@@Base>
   12830:	add	r7, r7, #1
   12834:	cmp	r6, r7
   12838:	bne	123f4 <table_dupe@@Base+0x128>
   1283c:	b	1239c <table_dupe@@Base+0xd0>
   12840:	mov	r0, r4
   12844:	mov	r1, r5
   12848:	mov	r2, r7
   1284c:	bl	139b4 <table_get_char@@Base>
   12850:	mov	r3, r0
   12854:	mov	r0, sl
   12858:	mov	r1, r5
   1285c:	mov	r2, r7
   12860:	bl	14a90 <table_set_char@@Base>
   12864:	add	r7, r7, #1
   12868:	cmp	r6, r7
   1286c:	bne	123f4 <table_dupe@@Base+0x128>
   12870:	b	1239c <table_dupe@@Base+0xd0>
   12874:	mov	r0, r4
   12878:	mov	r1, r5
   1287c:	mov	r2, r7
   12880:	bl	139cc <table_get_uchar@@Base>
   12884:	mov	r3, r0
   12888:	mov	r0, sl
   1288c:	mov	r1, r5
   12890:	mov	r2, r7
   12894:	bl	14b10 <table_set_uchar@@Base>
   12898:	add	r7, r7, #1
   1289c:	cmp	r6, r7
   128a0:	bne	123f4 <table_dupe@@Base+0x128>
   128a4:	b	1239c <table_dupe@@Base+0xd0>
   128a8:	mov	r0, r4
   128ac:	mov	r1, r5
   128b0:	mov	r2, r7
   128b4:	bl	139e4 <table_get_string@@Base>
   128b8:	mov	r3, r0
   128bc:	mov	r0, sl
   128c0:	mov	r1, r5
   128c4:	mov	r2, r7
   128c8:	bl	14a08 <table_set_string@@Base>
   128cc:	add	r7, r7, #1
   128d0:	cmp	r6, r7
   128d4:	bne	123f4 <table_dupe@@Base+0x128>
   128d8:	b	1239c <table_dupe@@Base+0xd0>
   128dc:	mov	r0, r4
   128e0:	mov	r1, r5
   128e4:	mov	r2, r7
   128e8:	bl	137d4 <table_get_bool@@Base>
   128ec:	mov	r3, r0
   128f0:	mov	r0, sl
   128f4:	mov	r1, r5
   128f8:	mov	r2, r7
   128fc:	bl	13fcc <table_set_bool@@Base>
   12900:	add	r7, r7, #1
   12904:	cmp	r6, r7
   12908:	bne	123f4 <table_dupe@@Base+0x128>
   1290c:	b	1239c <table_dupe@@Base+0xd0>
   12910:	mov	r0, sl
   12914:	sub	sp, fp, #28
   12918:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001291c <table_get_major_version@@Base>:
   1291c:	mov	r0, #0
   12920:	bx	lr

00012924 <table_get_minor_version@@Base>:
   12924:	mov	r0, #0
   12928:	bx	lr

0001292c <table_get_patch_version@@Base>:
   1292c:	mov	r0, #0
   12930:	bx	lr

00012934 <table_get_version@@Base>:
   12934:	movw	r0, #22417	; 0x5791
   12938:	movt	r0, #1
   1293c:	bx	lr

00012940 <table_get_callback_length@@Base>:
   12940:	ldr	r0, [r0, #32]
   12944:	bx	lr

00012948 <table_register_callback@@Base>:
   12948:	push	{r4, r5, r6, r7, fp, lr}
   1294c:	add	fp, sp, #16
   12950:	mov	r5, r0
   12954:	ldr	r0, [r0, #32]
   12958:	mov	r4, r3
   1295c:	mov	r6, r2
   12960:	mov	r7, r1
   12964:	cmp	r0, #1
   12968:	blt	129c4 <table_register_callback@@Base+0x7c>
   1296c:	ldr	r2, [r5, #36]	; 0x24
   12970:	mov	r1, #0
   12974:	ldr	r3, [r2, r1, lsl #2]
   12978:	cmp	r3, r7
   1297c:	beq	12998 <table_register_callback@@Base+0x50>
   12980:	add	r1, r1, #1
   12984:	cmp	r0, r1
   12988:	beq	129c4 <table_register_callback@@Base+0x7c>
   1298c:	ldr	r3, [r2, r1, lsl #2]
   12990:	cmp	r3, r7
   12994:	bne	12980 <table_register_callback@@Base+0x38>
   12998:	ldr	r3, [r5, #40]	; 0x28
   1299c:	ldr	r3, [r3, r1, lsl #2]
   129a0:	cmp	r3, r6
   129a4:	bne	12980 <table_register_callback@@Base+0x38>
   129a8:	cmp	r1, #0
   129ac:	beq	129c4 <table_register_callback@@Base+0x7c>
   129b0:	ldr	r0, [r5, #44]	; 0x2c
   129b4:	ldr	r2, [r0, r1, lsl #2]
   129b8:	orr	r2, r2, r4
   129bc:	str	r2, [r0, r1, lsl #2]
   129c0:	pop	{r4, r5, r6, r7, fp, pc}
   129c4:	ldr	r1, [r5, #48]	; 0x30
   129c8:	udiv	r2, r0, r1
   129cc:	mls	r2, r2, r1, r0
   129d0:	cmp	r2, #0
   129d4:	bne	12a20 <table_register_callback@@Base+0xd8>
   129d8:	ldr	r2, [r5, #52]	; 0x34
   129dc:	ldr	r0, [r5, #36]	; 0x24
   129e0:	add	r1, r2, r1
   129e4:	str	r1, [r5, #52]	; 0x34
   129e8:	lsl	r1, r1, #2
   129ec:	bl	11f30 <realloc@plt>
   129f0:	str	r0, [r5, #36]	; 0x24
   129f4:	ldr	r1, [r5, #52]	; 0x34
   129f8:	ldr	r0, [r5, #40]	; 0x28
   129fc:	lsl	r1, r1, #2
   12a00:	bl	11f30 <realloc@plt>
   12a04:	str	r0, [r5, #40]	; 0x28
   12a08:	ldr	r1, [r5, #52]	; 0x34
   12a0c:	ldr	r0, [r5, #44]	; 0x2c
   12a10:	lsl	r1, r1, #2
   12a14:	bl	11f30 <realloc@plt>
   12a18:	str	r0, [r5, #44]	; 0x2c
   12a1c:	ldr	r0, [r5, #32]
   12a20:	ldr	r1, [r5, #36]	; 0x24
   12a24:	str	r7, [r1, r0, lsl #2]
   12a28:	ldr	r1, [r5, #40]	; 0x28
   12a2c:	str	r6, [r1, r0, lsl #2]
   12a30:	ldr	r1, [r5, #44]	; 0x2c
   12a34:	str	r4, [r1, r0, lsl #2]
   12a38:	ldr	r0, [r5, #32]
   12a3c:	add	r0, r0, #1
   12a40:	str	r0, [r5, #32]
   12a44:	pop	{r4, r5, r6, r7, fp, pc}

00012a48 <table_unregister_callback@@Base>:
   12a48:	push	{r4, r5, r6, sl, fp, lr}
   12a4c:	add	fp, sp, #16
   12a50:	ldr	r4, [r0, #32]
   12a54:	cmp	r4, #1
   12a58:	blt	12bac <table_unregister_callback@@Base+0x164>
   12a5c:	ldr	r3, [r0, #36]	; 0x24
   12a60:	mov	r6, r0
   12a64:	mov	r0, #0
   12a68:	ldr	r5, [r3, r0, lsl #2]
   12a6c:	cmp	r5, r1
   12a70:	beq	12a8c <table_unregister_callback@@Base+0x44>
   12a74:	add	r0, r0, #1
   12a78:	cmp	r0, r4
   12a7c:	beq	12bac <table_unregister_callback@@Base+0x164>
   12a80:	ldr	r5, [r3, r0, lsl #2]
   12a84:	cmp	r5, r1
   12a88:	bne	12a74 <table_unregister_callback@@Base+0x2c>
   12a8c:	ldr	r5, [r6, #40]	; 0x28
   12a90:	ldr	r5, [r5, r0, lsl #2]
   12a94:	cmp	r5, r2
   12a98:	bne	12a74 <table_unregister_callback@@Base+0x2c>
   12a9c:	sub	r1, r4, #1
   12aa0:	cmp	r0, r1
   12aa4:	bge	12b28 <table_unregister_callback@@Base+0xe0>
   12aa8:	add	r2, r0, #1
   12aac:	ldr	r1, [r3, r2, lsl #2]
   12ab0:	str	r1, [r3, r0, lsl #2]
   12ab4:	ldr	r1, [r6, #40]	; 0x28
   12ab8:	ldr	r3, [r1, r2, lsl #2]
   12abc:	str	r3, [r1, r0, lsl #2]
   12ac0:	ldr	r1, [r6, #44]	; 0x2c
   12ac4:	ldr	r3, [r1, r2, lsl #2]
   12ac8:	str	r3, [r1, r0, lsl #2]
   12acc:	ldr	r1, [r6, #32]
   12ad0:	sub	r1, r1, #1
   12ad4:	cmp	r2, r1
   12ad8:	bge	12b28 <table_unregister_callback@@Base+0xe0>
   12adc:	ldr	r1, [r6, #36]	; 0x24
   12ae0:	add	r1, r1, r0, lsl #2
   12ae4:	ldr	r2, [r1, #8]
   12ae8:	str	r2, [r1, #4]
   12aec:	ldr	r1, [r6, #40]	; 0x28
   12af0:	add	r1, r1, r0, lsl #2
   12af4:	ldr	r2, [r1, #8]
   12af8:	str	r2, [r1, #4]
   12afc:	ldr	r1, [r6, #44]	; 0x2c
   12b00:	add	r1, r1, r0, lsl #2
   12b04:	ldr	r2, [r1, #8]
   12b08:	str	r2, [r1, #4]
   12b0c:	add	r2, r0, #1
   12b10:	add	r0, r0, #2
   12b14:	ldr	r1, [r6, #32]
   12b18:	sub	r1, r1, #1
   12b1c:	cmp	r0, r1
   12b20:	mov	r0, r2
   12b24:	blt	12adc <table_unregister_callback@@Base+0x94>
   12b28:	str	r1, [r6, #32]
   12b2c:	ldr	r2, [r6, #48]	; 0x30
   12b30:	udiv	r0, r1, r2
   12b34:	mls	r0, r0, r2, r1
   12b38:	cmp	r0, #0
   12b3c:	popne	{r4, r5, r6, sl, fp, pc}
   12b40:	ldr	r1, [r6, #52]	; 0x34
   12b44:	ldr	r0, [r6, #36]	; 0x24
   12b48:	subs	r1, r1, r2
   12b4c:	str	r1, [r6, #52]	; 0x34
   12b50:	beq	12b88 <table_unregister_callback@@Base+0x140>
   12b54:	lsl	r1, r1, #2
   12b58:	bl	11f30 <realloc@plt>
   12b5c:	str	r0, [r6, #36]	; 0x24
   12b60:	ldr	r1, [r6, #52]	; 0x34
   12b64:	ldr	r0, [r6, #40]	; 0x28
   12b68:	lsl	r1, r1, #2
   12b6c:	bl	11f30 <realloc@plt>
   12b70:	str	r0, [r6, #40]	; 0x28
   12b74:	ldr	r1, [r6, #52]	; 0x34
   12b78:	ldr	r0, [r6, #44]	; 0x2c
   12b7c:	lsl	r1, r1, #2
   12b80:	bl	11f30 <realloc@plt>
   12b84:	b	12ba8 <table_unregister_callback@@Base+0x160>
   12b88:	bl	11f18 <free@plt>
   12b8c:	ldr	r0, [r6, #40]	; 0x28
   12b90:	bl	11f18 <free@plt>
   12b94:	ldr	r0, [r6, #44]	; 0x2c
   12b98:	bl	11f18 <free@plt>
   12b9c:	mov	r0, #0
   12ba0:	str	r0, [r6, #36]	; 0x24
   12ba4:	str	r0, [r6, #40]	; 0x28
   12ba8:	str	r0, [r6, #44]	; 0x2c
   12bac:	pop	{r4, r5, r6, sl, fp, pc}

00012bb0 <table_notify@@Base>:
   12bb0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   12bb4:	add	fp, sp, #24
   12bb8:	sub	sp, sp, #8
   12bbc:	mov	r7, r0
   12bc0:	ldr	r0, [r0, #32]
   12bc4:	cmp	r0, #1
   12bc8:	blt	12c40 <table_notify@@Base+0x90>
   12bcc:	mov	r4, r3
   12bd0:	mov	r8, r2
   12bd4:	mov	r9, r1
   12bd8:	mov	r5, #0
   12bdc:	ldr	r1, [r7, #44]	; 0x2c
   12be0:	ldr	r1, [r1, r5, lsl #2]
   12be4:	tst	r1, r4
   12be8:	bne	12c08 <table_notify@@Base+0x58>
   12bec:	add	r5, r5, #1
   12bf0:	cmp	r5, r0
   12bf4:	bge	12c40 <table_notify@@Base+0x90>
   12bf8:	ldr	r1, [r7, #44]	; 0x2c
   12bfc:	ldr	r1, [r1, r5, lsl #2]
   12c00:	tst	r1, r4
   12c04:	beq	12bec <table_notify@@Base+0x3c>
   12c08:	ldr	r0, [r7, #36]	; 0x24
   12c0c:	ldr	r1, [r7, #40]	; 0x28
   12c10:	mov	r2, r8
   12c14:	mov	r3, r4
   12c18:	ldr	r6, [r0, r5, lsl #2]
   12c1c:	ldr	r0, [r1, r5, lsl #2]
   12c20:	mov	r1, r9
   12c24:	str	r0, [sp]
   12c28:	mov	r0, r7
   12c2c:	blx	r6
   12c30:	ldr	r0, [r7, #32]
   12c34:	add	r5, r5, #1
   12c38:	cmp	r5, r0
   12c3c:	blt	12bf8 <table_notify@@Base+0x48>
   12c40:	sub	sp, fp, #24
   12c44:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00012c48 <table_column_init@@Base>:
   12c48:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   12c4c:	add	fp, sp, #24
   12c50:	ldr	r7, [r0]
   12c54:	mov	r0, r2
   12c58:	mov	r4, r3
   12c5c:	mov	r5, r2
   12c60:	mov	r6, r1
   12c64:	bl	11f6c <strlen@plt>
   12c68:	add	r0, r0, #1
   12c6c:	bl	11f48 <malloc@plt>
   12c70:	ldr	r8, [fp, #8]
   12c74:	add	r6, r6, r6, lsl #1
   12c78:	cmp	r0, #0
   12c7c:	str	r0, [r7, r6, lsl #2]
   12c80:	beq	12c8c <table_column_init@@Base+0x44>
   12c84:	mov	r1, r5
   12c88:	bl	11f3c <strcpy@plt>
   12c8c:	add	r0, r7, r6, lsl #2
   12c90:	stmib	r0, {r4, r8}
   12c94:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00012c98 <table_get_col_ptr@@Base>:
   12c98:	ldr	r0, [r0]
   12c9c:	add	r1, r1, r1, lsl #1
   12ca0:	add	r0, r0, r1, lsl #2
   12ca4:	bx	lr

00012ca8 <table_column_destroy@@Base>:
   12ca8:	ldr	r0, [r0]
   12cac:	add	r1, r1, r1, lsl #1
   12cb0:	ldr	r0, [r0, r1, lsl #2]
   12cb4:	cmp	r0, #0
   12cb8:	bxeq	lr
   12cbc:	b	11f18 <free@plt>

00012cc0 <table_get_column_length@@Base>:
   12cc0:	ldr	r0, [r0, #4]
   12cc4:	bx	lr

00012cc8 <table_get_column@@Base>:
   12cc8:	push	{r4, r5, r6, r7, fp, lr}
   12ccc:	add	fp, sp, #16
   12cd0:	ldr	r6, [r0, #4]
   12cd4:	cmp	r6, #1
   12cd8:	blt	12d20 <table_get_column@@Base+0x58>
   12cdc:	ldr	r7, [r0]
   12ce0:	mov	r5, r1
   12ce4:	mov	r4, #0
   12ce8:	ldr	r0, [r7]
   12cec:	mov	r1, r5
   12cf0:	bl	11f00 <strcmp@plt>
   12cf4:	cmp	r0, #0
   12cf8:	beq	12d10 <table_get_column@@Base+0x48>
   12cfc:	add	r4, r4, #1
   12d00:	add	r7, r7, #12
   12d04:	cmp	r6, r4
   12d08:	bne	12ce8 <table_get_column@@Base+0x20>
   12d0c:	mov	r4, r6
   12d10:	cmp	r4, r6
   12d14:	mvneq	r4, #0
   12d18:	mov	r0, r4
   12d1c:	pop	{r4, r5, r6, r7, fp, pc}
   12d20:	mov	r4, #0
   12d24:	cmp	r4, r6
   12d28:	mvneq	r4, #0
   12d2c:	mov	r0, r4
   12d30:	pop	{r4, r5, r6, r7, fp, pc}

00012d34 <table_get_column_name@@Base>:
   12d34:	ldr	r0, [r0]
   12d38:	add	r1, r1, r1, lsl #1
   12d3c:	ldr	r0, [r0, r1, lsl #2]
   12d40:	bx	lr

00012d44 <table_get_column_data_type@@Base>:
   12d44:	ldr	r0, [r0]
   12d48:	add	r1, r1, r1, lsl #1
   12d4c:	add	r0, r0, r1, lsl #2
   12d50:	ldr	r0, [r0, #4]
   12d54:	bx	lr

00012d58 <table_add_column@@Base>:
   12d58:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12d5c:	add	fp, sp, #28
   12d60:	sub	sp, sp, #4
   12d64:	mov	r4, r0
   12d68:	mov	r8, r1
   12d6c:	ldr	r0, [r0, #4]
   12d70:	mov	r9, r2
   12d74:	ldr	r1, [r4, #8]
   12d78:	udiv	r2, r0, r1
   12d7c:	mls	r0, r2, r1, r0
   12d80:	cmp	r0, #0
   12d84:	bne	12df0 <table_add_column@@Base+0x98>
   12d88:	ldr	r2, [r4, #12]
   12d8c:	ldr	r0, [r4]
   12d90:	add	r1, r2, r1
   12d94:	str	r1, [r4, #12]
   12d98:	add	r1, r1, r1, lsl #1
   12d9c:	lsl	r1, r1, #2
   12da0:	bl	11f30 <realloc@plt>
   12da4:	str	r0, [r4]
   12da8:	mov	r0, r4
   12dac:	bl	13a98 <table_get_row_length@@Base>
   12db0:	cmp	r0, #1
   12db4:	blt	12df0 <table_add_column@@Base+0x98>
   12db8:	mov	r6, r0
   12dbc:	mov	r5, #0
   12dc0:	mov	r0, r4
   12dc4:	mov	r1, r5
   12dc8:	bl	13a30 <table_get_row_ptr@@Base>
   12dcc:	ldr	r1, [r4, #12]
   12dd0:	mov	r7, r0
   12dd4:	ldr	r0, [r0]
   12dd8:	lsl	r1, r1, #2
   12ddc:	bl	11f30 <realloc@plt>
   12de0:	add	r5, r5, #1
   12de4:	str	r0, [r7]
   12de8:	cmp	r6, r5
   12dec:	bne	12dc0 <table_add_column@@Base+0x68>
   12df0:	mov	r0, r4
   12df4:	bl	13a98 <table_get_row_length@@Base>
   12df8:	ldr	r6, [r4, #4]
   12dfc:	mov	r7, r0
   12e00:	mov	r0, r9
   12e04:	bl	137a4 <table_get_default_compare_function_for_data_type@@Base>
   12e08:	ldr	r5, [r4]
   12e0c:	mov	sl, r0
   12e10:	mov	r0, r8
   12e14:	bl	11f6c <strlen@plt>
   12e18:	add	r0, r0, #1
   12e1c:	bl	11f48 <malloc@plt>
   12e20:	mov	r1, r8
   12e24:	add	r8, r6, r6, lsl #1
   12e28:	cmp	r0, #0
   12e2c:	str	r0, [r5, r8, lsl #2]
   12e30:	beq	12e38 <table_add_column@@Base+0xe0>
   12e34:	bl	11f3c <strcpy@plt>
   12e38:	add	r0, r5, r8, lsl #2
   12e3c:	cmp	r7, #1
   12e40:	stmib	r0, {r9, sl}
   12e44:	blt	12e68 <table_add_column@@Base+0x110>
   12e48:	mov	r5, #0
   12e4c:	mov	r0, r4
   12e50:	mov	r1, r5
   12e54:	mov	r2, r6
   12e58:	bl	14bec <table_cell_init@@Base>
   12e5c:	add	r5, r5, #1
   12e60:	cmp	r7, r5
   12e64:	bne	12e4c <table_add_column@@Base+0xf4>
   12e68:	ldr	r2, [r4, #4]
   12e6c:	mov	r0, r4
   12e70:	mvn	r1, #0
   12e74:	mov	r3, #8
   12e78:	bl	12bb0 <table_notify@@Base>
   12e7c:	ldr	r0, [r4, #4]
   12e80:	add	r1, r0, #1
   12e84:	str	r1, [r4, #4]
   12e88:	sub	sp, fp, #28
   12e8c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00012e90 <table_remove_column@@Base>:
   12e90:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12e94:	add	fp, sp, #28
   12e98:	sub	sp, sp, #12
   12e9c:	mov	r5, r0
   12ea0:	ldr	r0, [r0]
   12ea4:	add	r6, r1, r1, lsl #1
   12ea8:	mov	r4, r1
   12eac:	ldr	r0, [r0, r6, lsl #2]
   12eb0:	cmp	r0, #0
   12eb4:	beq	12ebc <table_remove_column@@Base+0x2c>
   12eb8:	bl	11f18 <free@plt>
   12ebc:	ldr	r7, [r5, #4]
   12ec0:	sub	r0, r7, #1
   12ec4:	cmp	r0, r4
   12ec8:	str	r0, [sp, #8]
   12ecc:	ble	12f00 <table_remove_column@@Base+0x70>
   12ed0:	mvn	r0, r4
   12ed4:	lsl	r1, r6, #2
   12ed8:	add	r0, r0, r7
   12edc:	ldr	r2, [r5]
   12ee0:	subs	r0, r0, #1
   12ee4:	add	r2, r2, r1
   12ee8:	add	r1, r1, #12
   12eec:	vldr	d16, [r2, #12]
   12ef0:	ldr	r3, [r2, #20]
   12ef4:	str	r3, [r2, #8]
   12ef8:	vstr	d16, [r2]
   12efc:	bne	12edc <table_remove_column@@Base+0x4c>
   12f00:	mov	r0, r5
   12f04:	bl	13a98 <table_get_row_length@@Base>
   12f08:	cmp	r0, #1
   12f0c:	blt	12ff8 <table_remove_column@@Base+0x168>
   12f10:	mov	sl, r0
   12f14:	ldr	r0, [sp, #8]
   12f18:	cmp	r0, r4
   12f1c:	ble	12fcc <table_remove_column@@Base+0x13c>
   12f20:	mvn	r0, r4
   12f24:	sub	r8, r7, #2
   12f28:	add	r0, r7, r0
   12f2c:	mov	r7, #0
   12f30:	and	r9, r0, #1
   12f34:	add	r0, r4, #1
   12f38:	str	r0, [sp, #4]
   12f3c:	b	12f4c <table_remove_column@@Base+0xbc>
   12f40:	add	r7, r7, #1
   12f44:	cmp	r7, sl
   12f48:	beq	12ff8 <table_remove_column@@Base+0x168>
   12f4c:	mov	r0, r5
   12f50:	mov	r1, r7
   12f54:	mov	r2, r4
   12f58:	bl	14c28 <table_cell_destroy@@Base>
   12f5c:	mov	r0, r5
   12f60:	mov	r1, r7
   12f64:	bl	13a30 <table_get_row_ptr@@Base>
   12f68:	cmp	r9, #0
   12f6c:	mov	r2, r4
   12f70:	beq	12f88 <table_remove_column@@Base+0xf8>
   12f74:	ldr	r1, [r0]
   12f78:	add	r2, r1, r4, lsl #2
   12f7c:	ldr	r2, [r2, #4]
   12f80:	str	r2, [r1, r4, lsl #2]
   12f84:	ldr	r2, [sp, #4]
   12f88:	cmp	r8, r4
   12f8c:	beq	12f40 <table_remove_column@@Base+0xb0>
   12f90:	ldr	r1, [sp, #8]
   12f94:	sub	r1, r1, r2
   12f98:	lsl	r2, r2, #2
   12f9c:	ldr	r3, [r0]
   12fa0:	subs	r1, r1, #2
   12fa4:	add	r6, r3, r2
   12fa8:	ldr	r6, [r6, #4]
   12fac:	str	r6, [r3, r2]
   12fb0:	ldr	r3, [r0]
   12fb4:	add	r3, r3, r2
   12fb8:	add	r2, r2, #8
   12fbc:	ldr	r6, [r3, #8]
   12fc0:	str	r6, [r3, #4]
   12fc4:	bne	12f9c <table_remove_column@@Base+0x10c>
   12fc8:	b	12f40 <table_remove_column@@Base+0xb0>
   12fcc:	mov	r7, #0
   12fd0:	mov	r0, r5
   12fd4:	mov	r1, r7
   12fd8:	mov	r2, r4
   12fdc:	bl	14c28 <table_cell_destroy@@Base>
   12fe0:	mov	r0, r5
   12fe4:	mov	r1, r7
   12fe8:	bl	13a30 <table_get_row_ptr@@Base>
   12fec:	add	r7, r7, #1
   12ff0:	cmp	sl, r7
   12ff4:	bne	12fd0 <table_remove_column@@Base+0x140>
   12ff8:	ldmib	r5, {r0, r1}
   12ffc:	sub	r0, r0, #1
   13000:	udiv	r2, r0, r1
   13004:	str	r0, [r5, #4]
   13008:	mls	r0, r2, r1, r0
   1300c:	cmp	r0, #0
   13010:	bne	1307c <table_remove_column@@Base+0x1ec>
   13014:	ldr	r2, [r5, #12]
   13018:	ldr	r0, [r5]
   1301c:	sub	r1, r2, r1
   13020:	str	r1, [r5, #12]
   13024:	add	r1, r1, r1, lsl #1
   13028:	lsl	r1, r1, #2
   1302c:	bl	11f30 <realloc@plt>
   13030:	str	r0, [r5]
   13034:	mov	r0, r5
   13038:	bl	13a98 <table_get_row_length@@Base>
   1303c:	cmp	r0, #1
   13040:	blt	1307c <table_remove_column@@Base+0x1ec>
   13044:	mov	r8, r0
   13048:	mov	r7, #0
   1304c:	mov	r0, r5
   13050:	mov	r1, r7
   13054:	bl	13a30 <table_get_row_ptr@@Base>
   13058:	ldr	r1, [r5, #12]
   1305c:	mov	r6, r0
   13060:	ldr	r0, [r0]
   13064:	lsl	r1, r1, #2
   13068:	bl	11f30 <realloc@plt>
   1306c:	add	r7, r7, #1
   13070:	str	r0, [r6]
   13074:	cmp	r8, r7
   13078:	bne	1304c <table_remove_column@@Base+0x1bc>
   1307c:	mov	r0, r5
   13080:	mvn	r1, #0
   13084:	mov	r2, r4
   13088:	mov	r3, #16
   1308c:	bl	12bb0 <table_notify@@Base>
   13090:	mov	r0, #0
   13094:	sub	sp, fp, #28
   13098:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001309c <table_get_column_compare_function@@Base>:
   1309c:	ldr	r0, [r0]
   130a0:	add	r1, r1, r1, lsl #1
   130a4:	add	r0, r0, r1, lsl #2
   130a8:	ldr	r0, [r0, #8]
   130ac:	bx	lr

000130b0 <table_set_column_compare_function@@Base>:
   130b0:	ldr	r0, [r0]
   130b4:	add	r1, r1, r1, lsl #1
   130b8:	add	r0, r0, r1, lsl #2
   130bc:	str	r2, [r0, #8]
   130c0:	bx	lr

000130c4 <table_compare_bool@@Base>:
   130c4:	cmp	r0, #0
   130c8:	beq	130fc <table_compare_bool@@Base+0x38>
   130cc:	cmp	r1, #0
   130d0:	moveq	r1, #1
   130d4:	moveq	r0, r1
   130d8:	bxeq	lr
   130dc:	ldrb	r2, [r1]
   130e0:	ldrb	r0, [r0]
   130e4:	mov	r1, #0
   130e8:	cmp	r0, r2
   130ec:	mvncc	r1, #0
   130f0:	movwhi	r1, #1
   130f4:	mov	r0, r1
   130f8:	bx	lr
   130fc:	cmp	r1, #0
   13100:	mvnne	r1, #0
   13104:	mov	r0, r1
   13108:	bx	lr

0001310c <table_compare_int@@Base>:
   1310c:	cmp	r0, #0
   13110:	beq	13144 <table_compare_int@@Base+0x38>
   13114:	cmp	r1, #0
   13118:	moveq	r1, #1
   1311c:	moveq	r0, r1
   13120:	bxeq	lr
   13124:	ldr	r2, [r1]
   13128:	ldr	r0, [r0]
   1312c:	mov	r1, #0
   13130:	cmp	r0, r2
   13134:	mvnlt	r1, #0
   13138:	movwgt	r1, #1
   1313c:	mov	r0, r1
   13140:	bx	lr
   13144:	cmp	r1, #0
   13148:	mvnne	r1, #0
   1314c:	mov	r0, r1
   13150:	bx	lr

00013154 <table_compare_uint@@Base>:
   13154:	cmp	r0, #0
   13158:	beq	1318c <table_compare_uint@@Base+0x38>
   1315c:	cmp	r1, #0
   13160:	moveq	r1, #1
   13164:	moveq	r0, r1
   13168:	bxeq	lr
   1316c:	ldr	r2, [r1]
   13170:	ldr	r0, [r0]
   13174:	mov	r1, #0
   13178:	cmp	r0, r2
   1317c:	mvncc	r1, #0
   13180:	movwhi	r1, #1
   13184:	mov	r0, r1
   13188:	bx	lr
   1318c:	cmp	r1, #0
   13190:	mvnne	r1, #0
   13194:	mov	r0, r1
   13198:	bx	lr

0001319c <table_compare_int8@@Base>:
   1319c:	cmp	r0, #0
   131a0:	beq	131d4 <table_compare_int8@@Base+0x38>
   131a4:	cmp	r1, #0
   131a8:	moveq	r1, #1
   131ac:	moveq	r0, r1
   131b0:	bxeq	lr
   131b4:	ldrsb	r2, [r1]
   131b8:	ldrsb	r0, [r0]
   131bc:	mov	r1, #0
   131c0:	cmp	r0, r2
   131c4:	mvnlt	r1, #0
   131c8:	movwgt	r1, #1
   131cc:	mov	r0, r1
   131d0:	bx	lr
   131d4:	cmp	r1, #0
   131d8:	mvnne	r1, #0
   131dc:	mov	r0, r1
   131e0:	bx	lr

000131e4 <table_compare_uint8@@Base>:
   131e4:	cmp	r0, #0
   131e8:	beq	1321c <table_compare_uint8@@Base+0x38>
   131ec:	cmp	r1, #0
   131f0:	moveq	r1, #1
   131f4:	moveq	r0, r1
   131f8:	bxeq	lr
   131fc:	ldrb	r2, [r1]
   13200:	ldrb	r0, [r0]
   13204:	mov	r1, #0
   13208:	cmp	r0, r2
   1320c:	mvncc	r1, #0
   13210:	movwhi	r1, #1
   13214:	mov	r0, r1
   13218:	bx	lr
   1321c:	cmp	r1, #0
   13220:	mvnne	r1, #0
   13224:	mov	r0, r1
   13228:	bx	lr

0001322c <table_compare_int16@@Base>:
   1322c:	cmp	r0, #0
   13230:	beq	13264 <table_compare_int16@@Base+0x38>
   13234:	cmp	r1, #0
   13238:	moveq	r1, #1
   1323c:	moveq	r0, r1
   13240:	bxeq	lr
   13244:	ldrsh	r2, [r1]
   13248:	ldrsh	r0, [r0]
   1324c:	mov	r1, #0
   13250:	cmp	r0, r2
   13254:	mvnlt	r1, #0
   13258:	movwgt	r1, #1
   1325c:	mov	r0, r1
   13260:	bx	lr
   13264:	cmp	r1, #0
   13268:	mvnne	r1, #0
   1326c:	mov	r0, r1
   13270:	bx	lr

00013274 <table_compare_uint16@@Base>:
   13274:	cmp	r0, #0
   13278:	beq	132ac <table_compare_uint16@@Base+0x38>
   1327c:	cmp	r1, #0
   13280:	moveq	r1, #1
   13284:	moveq	r0, r1
   13288:	bxeq	lr
   1328c:	ldrh	r2, [r1]
   13290:	ldrh	r0, [r0]
   13294:	mov	r1, #0
   13298:	cmp	r0, r2
   1329c:	mvncc	r1, #0
   132a0:	movwhi	r1, #1
   132a4:	mov	r0, r1
   132a8:	bx	lr
   132ac:	cmp	r1, #0
   132b0:	mvnne	r1, #0
   132b4:	mov	r0, r1
   132b8:	bx	lr

000132bc <table_compare_int32@@Base>:
   132bc:	cmp	r0, #0
   132c0:	beq	132f4 <table_compare_int32@@Base+0x38>
   132c4:	cmp	r1, #0
   132c8:	moveq	r1, #1
   132cc:	moveq	r0, r1
   132d0:	bxeq	lr
   132d4:	ldr	r2, [r1]
   132d8:	ldr	r0, [r0]
   132dc:	mov	r1, #0
   132e0:	cmp	r0, r2
   132e4:	mvnlt	r1, #0
   132e8:	movwgt	r1, #1
   132ec:	mov	r0, r1
   132f0:	bx	lr
   132f4:	cmp	r1, #0
   132f8:	mvnne	r1, #0
   132fc:	mov	r0, r1
   13300:	bx	lr

00013304 <table_compare_uint32@@Base>:
   13304:	cmp	r0, #0
   13308:	beq	1333c <table_compare_uint32@@Base+0x38>
   1330c:	cmp	r1, #0
   13310:	moveq	r1, #1
   13314:	moveq	r0, r1
   13318:	bxeq	lr
   1331c:	ldr	r2, [r1]
   13320:	ldr	r0, [r0]
   13324:	mov	r1, #0
   13328:	cmp	r0, r2
   1332c:	mvncc	r1, #0
   13330:	movwhi	r1, #1
   13334:	mov	r0, r1
   13338:	bx	lr
   1333c:	cmp	r1, #0
   13340:	mvnne	r1, #0
   13344:	mov	r0, r1
   13348:	bx	lr

0001334c <table_compare_int64@@Base>:
   1334c:	cmp	r0, #0
   13350:	beq	133a4 <table_compare_int64@@Base+0x58>
   13354:	cmp	r1, #0
   13358:	moveq	r1, #1
   1335c:	moveq	r0, r1
   13360:	bxeq	lr
   13364:	push	{r5, r7, fp, lr}
   13368:	add	fp, sp, #8
   1336c:	ldm	r0, {r0, r5}
   13370:	ldm	r1, {r2, r7}
   13374:	mov	r1, #0
   13378:	subs	r3, r0, r2
   1337c:	sbcs	r3, r5, r7
   13380:	movwlt	r1, #1
   13384:	cmp	r1, #0
   13388:	mvnne	r1, #0
   1338c:	subs	r0, r2, r0
   13390:	sbcs	r0, r7, r5
   13394:	movwlt	r1, #1
   13398:	pop	{r5, r7, fp, lr}
   1339c:	mov	r0, r1
   133a0:	bx	lr
   133a4:	cmp	r1, #0
   133a8:	mvnne	r1, #0
   133ac:	mov	r0, r1
   133b0:	bx	lr

000133b4 <table_compare_uint64@@Base>:
   133b4:	cmp	r0, #0
   133b8:	beq	1340c <table_compare_uint64@@Base+0x58>
   133bc:	cmp	r1, #0
   133c0:	moveq	r1, #1
   133c4:	moveq	r0, r1
   133c8:	bxeq	lr
   133cc:	push	{r5, r7, fp, lr}
   133d0:	add	fp, sp, #8
   133d4:	ldm	r0, {r0, r5}
   133d8:	ldm	r1, {r2, r7}
   133dc:	mov	r1, #0
   133e0:	subs	r3, r0, r2
   133e4:	sbcs	r3, r5, r7
   133e8:	movwcc	r1, #1
   133ec:	cmp	r1, #0
   133f0:	mvnne	r1, #0
   133f4:	subs	r0, r2, r0
   133f8:	sbcs	r0, r7, r5
   133fc:	movwcc	r1, #1
   13400:	pop	{r5, r7, fp, lr}
   13404:	mov	r0, r1
   13408:	bx	lr
   1340c:	cmp	r1, #0
   13410:	mvnne	r1, #0
   13414:	mov	r0, r1
   13418:	bx	lr

0001341c <table_compare_short@@Base>:
   1341c:	cmp	r0, #0
   13420:	beq	13454 <table_compare_short@@Base+0x38>
   13424:	cmp	r1, #0
   13428:	moveq	r1, #1
   1342c:	moveq	r0, r1
   13430:	bxeq	lr
   13434:	ldrsh	r2, [r1]
   13438:	ldrsh	r0, [r0]
   1343c:	mov	r1, #0
   13440:	cmp	r0, r2
   13444:	mvnlt	r1, #0
   13448:	movwgt	r1, #1
   1344c:	mov	r0, r1
   13450:	bx	lr
   13454:	cmp	r1, #0
   13458:	mvnne	r1, #0
   1345c:	mov	r0, r1
   13460:	bx	lr

00013464 <table_compare_ushort@@Base>:
   13464:	cmp	r0, #0
   13468:	beq	1349c <table_compare_ushort@@Base+0x38>
   1346c:	cmp	r1, #0
   13470:	moveq	r1, #1
   13474:	moveq	r0, r1
   13478:	bxeq	lr
   1347c:	ldrh	r2, [r1]
   13480:	ldrh	r0, [r0]
   13484:	mov	r1, #0
   13488:	cmp	r0, r2
   1348c:	mvncc	r1, #0
   13490:	movwhi	r1, #1
   13494:	mov	r0, r1
   13498:	bx	lr
   1349c:	cmp	r1, #0
   134a0:	mvnne	r1, #0
   134a4:	mov	r0, r1
   134a8:	bx	lr

000134ac <table_compare_long@@Base>:
   134ac:	cmp	r0, #0
   134b0:	beq	134e4 <table_compare_long@@Base+0x38>
   134b4:	cmp	r1, #0
   134b8:	moveq	r1, #1
   134bc:	moveq	r0, r1
   134c0:	bxeq	lr
   134c4:	ldr	r2, [r1]
   134c8:	ldr	r0, [r0]
   134cc:	mov	r1, #0
   134d0:	cmp	r0, r2
   134d4:	mvnlt	r1, #0
   134d8:	movwgt	r1, #1
   134dc:	mov	r0, r1
   134e0:	bx	lr
   134e4:	cmp	r1, #0
   134e8:	mvnne	r1, #0
   134ec:	mov	r0, r1
   134f0:	bx	lr

000134f4 <table_compare_ulong@@Base>:
   134f4:	cmp	r0, #0
   134f8:	beq	1352c <table_compare_ulong@@Base+0x38>
   134fc:	cmp	r1, #0
   13500:	moveq	r1, #1
   13504:	moveq	r0, r1
   13508:	bxeq	lr
   1350c:	ldr	r2, [r1]
   13510:	ldr	r0, [r0]
   13514:	mov	r1, #0
   13518:	cmp	r0, r2
   1351c:	mvncc	r1, #0
   13520:	movwhi	r1, #1
   13524:	mov	r0, r1
   13528:	bx	lr
   1352c:	cmp	r1, #0
   13530:	mvnne	r1, #0
   13534:	mov	r0, r1
   13538:	bx	lr

0001353c <table_compare_llong@@Base>:
   1353c:	cmp	r0, #0
   13540:	beq	13594 <table_compare_llong@@Base+0x58>
   13544:	cmp	r1, #0
   13548:	moveq	r1, #1
   1354c:	moveq	r0, r1
   13550:	bxeq	lr
   13554:	push	{r5, r7, fp, lr}
   13558:	add	fp, sp, #8
   1355c:	ldm	r0, {r0, r5}
   13560:	ldm	r1, {r2, r7}
   13564:	mov	r1, #0
   13568:	subs	r3, r0, r2
   1356c:	sbcs	r3, r5, r7
   13570:	movwlt	r1, #1
   13574:	cmp	r1, #0
   13578:	mvnne	r1, #0
   1357c:	subs	r0, r2, r0
   13580:	sbcs	r0, r7, r5
   13584:	movwlt	r1, #1
   13588:	pop	{r5, r7, fp, lr}
   1358c:	mov	r0, r1
   13590:	bx	lr
   13594:	cmp	r1, #0
   13598:	mvnne	r1, #0
   1359c:	mov	r0, r1
   135a0:	bx	lr

000135a4 <table_compare_ullong@@Base>:
   135a4:	cmp	r0, #0
   135a8:	beq	135dc <table_compare_ullong@@Base+0x38>
   135ac:	cmp	r1, #0
   135b0:	moveq	r1, #1
   135b4:	moveq	r0, r1
   135b8:	bxeq	lr
   135bc:	ldr	r2, [r1]
   135c0:	ldr	r0, [r0]
   135c4:	mov	r1, #0
   135c8:	cmp	r0, r2
   135cc:	mvncc	r1, #0
   135d0:	movwhi	r1, #1
   135d4:	mov	r0, r1
   135d8:	bx	lr
   135dc:	cmp	r1, #0
   135e0:	mvnne	r1, #0
   135e4:	mov	r0, r1
   135e8:	bx	lr

000135ec <table_compare_float@@Base>:
   135ec:	cmp	r0, #0
   135f0:	beq	13628 <table_compare_float@@Base+0x3c>
   135f4:	cmp	r1, #0
   135f8:	moveq	r1, #1
   135fc:	moveq	r0, r1
   13600:	bxeq	lr
   13604:	vldr	s0, [r1]
   13608:	vldr	s2, [r0]
   1360c:	mov	r1, #0
   13610:	vcmpe.f32	s2, s0
   13614:	vmrs	APSR_nzcv, fpscr
   13618:	mvnmi	r1, #0
   1361c:	movwgt	r1, #1
   13620:	mov	r0, r1
   13624:	bx	lr
   13628:	cmp	r1, #0
   1362c:	mvnne	r1, #0
   13630:	mov	r0, r1
   13634:	bx	lr

00013638 <table_compare_double@@Base>:
   13638:	cmp	r0, #0
   1363c:	beq	13674 <table_compare_double@@Base+0x3c>
   13640:	cmp	r1, #0
   13644:	moveq	r1, #1
   13648:	moveq	r0, r1
   1364c:	bxeq	lr
   13650:	vldr	d16, [r1]
   13654:	vldr	d17, [r0]
   13658:	mov	r1, #0
   1365c:	vcmpe.f64	d17, d16
   13660:	vmrs	APSR_nzcv, fpscr
   13664:	mvnmi	r1, #0
   13668:	movwgt	r1, #1
   1366c:	mov	r0, r1
   13670:	bx	lr
   13674:	cmp	r1, #0
   13678:	mvnne	r1, #0
   1367c:	mov	r0, r1
   13680:	bx	lr

00013684 <table_compare_ldouble@@Base>:
   13684:	cmp	r0, #0
   13688:	beq	136c0 <table_compare_ldouble@@Base+0x3c>
   1368c:	cmp	r1, #0
   13690:	moveq	r1, #1
   13694:	moveq	r0, r1
   13698:	bxeq	lr
   1369c:	vldr	d16, [r1]
   136a0:	vldr	d17, [r0]
   136a4:	mov	r1, #0
   136a8:	vcmpe.f64	d17, d16
   136ac:	vmrs	APSR_nzcv, fpscr
   136b0:	mvnmi	r1, #0
   136b4:	movwgt	r1, #1
   136b8:	mov	r0, r1
   136bc:	bx	lr
   136c0:	cmp	r1, #0
   136c4:	mvnne	r1, #0
   136c8:	mov	r0, r1
   136cc:	bx	lr

000136d0 <table_compare_char@@Base>:
   136d0:	cmp	r0, #0
   136d4:	beq	13708 <table_compare_char@@Base+0x38>
   136d8:	cmp	r1, #0
   136dc:	moveq	r1, #1
   136e0:	moveq	r0, r1
   136e4:	bxeq	lr
   136e8:	ldrb	r2, [r1]
   136ec:	ldrb	r0, [r0]
   136f0:	mov	r1, #0
   136f4:	cmp	r0, r2
   136f8:	mvncc	r1, #0
   136fc:	movwhi	r1, #1
   13700:	mov	r0, r1
   13704:	bx	lr
   13708:	cmp	r1, #0
   1370c:	mvnne	r1, #0
   13710:	mov	r0, r1
   13714:	bx	lr

00013718 <table_compare_uchar@@Base>:
   13718:	cmp	r0, #0
   1371c:	beq	13750 <table_compare_uchar@@Base+0x38>
   13720:	cmp	r1, #0
   13724:	moveq	r1, #1
   13728:	moveq	r0, r1
   1372c:	bxeq	lr
   13730:	ldrb	r2, [r1]
   13734:	ldrb	r0, [r0]
   13738:	mov	r1, #0
   1373c:	cmp	r0, r2
   13740:	mvncc	r1, #0
   13744:	movwhi	r1, #1
   13748:	mov	r0, r1
   1374c:	bx	lr
   13750:	cmp	r1, #0
   13754:	mvnne	r1, #0
   13758:	mov	r0, r1
   1375c:	bx	lr

00013760 <table_compare_string@@Base>:
   13760:	cmp	r0, #0
   13764:	beq	1377c <table_compare_string@@Base+0x1c>
   13768:	cmp	r1, #0
   1376c:	moveq	r1, #1
   13770:	moveq	r0, r1
   13774:	bxeq	lr
   13778:	b	11f00 <strcmp@plt>
   1377c:	cmp	r1, #0
   13780:	mvnne	r1, #0
   13784:	mov	r0, r1
   13788:	bx	lr

0001378c <table_compare_ptr@@Base>:
   1378c:	cmp	r0, r1
   13790:	mov	r2, #0
   13794:	mvncc	r2, #0
   13798:	movwhi	r2, #1
   1379c:	mov	r0, r2
   137a0:	bx	lr

000137a4 <table_get_default_compare_function_for_data_type@@Base>:
   137a4:	cmp	r0, #23
   137a8:	movhi	r0, #0
   137ac:	bxhi	lr
   137b0:	movw	r1, #22276	; 0x5704
   137b4:	movt	r1, #1
   137b8:	ldr	r0, [r1, r0, lsl #2]
   137bc:	bx	lr

000137c0 <table_get@@Base>:
   137c0:	push	{fp, lr}
   137c4:	mov	fp, sp
   137c8:	bl	14c0c <table_get_cell_ptr@@Base>
   137cc:	ldr	r0, [r0]
   137d0:	pop	{fp, pc}

000137d4 <table_get_bool@@Base>:
   137d4:	push	{fp, lr}
   137d8:	mov	fp, sp
   137dc:	bl	14c0c <table_get_cell_ptr@@Base>
   137e0:	ldr	r0, [r0]
   137e4:	ldrb	r0, [r0]
   137e8:	pop	{fp, pc}

000137ec <table_get_int@@Base>:
   137ec:	push	{fp, lr}
   137f0:	mov	fp, sp
   137f4:	bl	14c0c <table_get_cell_ptr@@Base>
   137f8:	ldr	r0, [r0]
   137fc:	ldr	r0, [r0]
   13800:	pop	{fp, pc}

00013804 <table_get_uint@@Base>:
   13804:	push	{fp, lr}
   13808:	mov	fp, sp
   1380c:	bl	14c0c <table_get_cell_ptr@@Base>
   13810:	ldr	r0, [r0]
   13814:	ldr	r0, [r0]
   13818:	pop	{fp, pc}

0001381c <table_get_int8@@Base>:
   1381c:	push	{fp, lr}
   13820:	mov	fp, sp
   13824:	bl	14c0c <table_get_cell_ptr@@Base>
   13828:	ldr	r0, [r0]
   1382c:	ldrsb	r0, [r0]
   13830:	pop	{fp, pc}

00013834 <table_get_uint8@@Base>:
   13834:	push	{fp, lr}
   13838:	mov	fp, sp
   1383c:	bl	14c0c <table_get_cell_ptr@@Base>
   13840:	ldr	r0, [r0]
   13844:	ldrb	r0, [r0]
   13848:	pop	{fp, pc}

0001384c <table_get_int16@@Base>:
   1384c:	push	{fp, lr}
   13850:	mov	fp, sp
   13854:	bl	14c0c <table_get_cell_ptr@@Base>
   13858:	ldr	r0, [r0]
   1385c:	ldrsh	r0, [r0]
   13860:	pop	{fp, pc}

00013864 <table_get_uint16@@Base>:
   13864:	push	{fp, lr}
   13868:	mov	fp, sp
   1386c:	bl	14c0c <table_get_cell_ptr@@Base>
   13870:	ldr	r0, [r0]
   13874:	ldrh	r0, [r0]
   13878:	pop	{fp, pc}

0001387c <table_get_int32@@Base>:
   1387c:	push	{fp, lr}
   13880:	mov	fp, sp
   13884:	bl	14c0c <table_get_cell_ptr@@Base>
   13888:	ldr	r0, [r0]
   1388c:	ldr	r0, [r0]
   13890:	pop	{fp, pc}

00013894 <table_get_uint32@@Base>:
   13894:	push	{fp, lr}
   13898:	mov	fp, sp
   1389c:	bl	14c0c <table_get_cell_ptr@@Base>
   138a0:	ldr	r0, [r0]
   138a4:	ldr	r0, [r0]
   138a8:	pop	{fp, pc}

000138ac <table_get_int64@@Base>:
   138ac:	push	{fp, lr}
   138b0:	mov	fp, sp
   138b4:	bl	14c0c <table_get_cell_ptr@@Base>
   138b8:	ldr	r0, [r0]
   138bc:	ldrd	r0, [r0]
   138c0:	pop	{fp, pc}

000138c4 <table_get_uint64@@Base>:
   138c4:	push	{fp, lr}
   138c8:	mov	fp, sp
   138cc:	bl	14c0c <table_get_cell_ptr@@Base>
   138d0:	ldr	r0, [r0]
   138d4:	ldrd	r0, [r0]
   138d8:	pop	{fp, pc}

000138dc <table_get_short@@Base>:
   138dc:	push	{fp, lr}
   138e0:	mov	fp, sp
   138e4:	bl	14c0c <table_get_cell_ptr@@Base>
   138e8:	ldr	r0, [r0]
   138ec:	ldrsh	r0, [r0]
   138f0:	pop	{fp, pc}

000138f4 <table_get_ushort@@Base>:
   138f4:	push	{fp, lr}
   138f8:	mov	fp, sp
   138fc:	bl	14c0c <table_get_cell_ptr@@Base>
   13900:	ldr	r0, [r0]
   13904:	ldrh	r0, [r0]
   13908:	pop	{fp, pc}

0001390c <table_get_long@@Base>:
   1390c:	push	{fp, lr}
   13910:	mov	fp, sp
   13914:	bl	14c0c <table_get_cell_ptr@@Base>
   13918:	ldr	r0, [r0]
   1391c:	ldr	r0, [r0]
   13920:	pop	{fp, pc}

00013924 <table_get_ulong@@Base>:
   13924:	push	{fp, lr}
   13928:	mov	fp, sp
   1392c:	bl	14c0c <table_get_cell_ptr@@Base>
   13930:	ldr	r0, [r0]
   13934:	ldr	r0, [r0]
   13938:	pop	{fp, pc}

0001393c <table_get_llong@@Base>:
   1393c:	push	{fp, lr}
   13940:	mov	fp, sp
   13944:	bl	14c0c <table_get_cell_ptr@@Base>
   13948:	ldr	r0, [r0]
   1394c:	ldrd	r0, [r0]
   13950:	pop	{fp, pc}

00013954 <table_get_ullong@@Base>:
   13954:	push	{fp, lr}
   13958:	mov	fp, sp
   1395c:	bl	14c0c <table_get_cell_ptr@@Base>
   13960:	ldr	r0, [r0]
   13964:	ldrd	r0, [r0]
   13968:	pop	{fp, pc}

0001396c <table_get_float@@Base>:
   1396c:	push	{fp, lr}
   13970:	mov	fp, sp
   13974:	bl	14c0c <table_get_cell_ptr@@Base>
   13978:	ldr	r0, [r0]
   1397c:	vldr	s0, [r0]
   13980:	pop	{fp, pc}

00013984 <table_get_double@@Base>:
   13984:	push	{fp, lr}
   13988:	mov	fp, sp
   1398c:	bl	14c0c <table_get_cell_ptr@@Base>
   13990:	ldr	r0, [r0]
   13994:	vldr	d0, [r0]
   13998:	pop	{fp, pc}

0001399c <table_get_ldouble@@Base>:
   1399c:	push	{fp, lr}
   139a0:	mov	fp, sp
   139a4:	bl	14c0c <table_get_cell_ptr@@Base>
   139a8:	ldr	r0, [r0]
   139ac:	vldr	d0, [r0]
   139b0:	pop	{fp, pc}

000139b4 <table_get_char@@Base>:
   139b4:	push	{fp, lr}
   139b8:	mov	fp, sp
   139bc:	bl	14c0c <table_get_cell_ptr@@Base>
   139c0:	ldr	r0, [r0]
   139c4:	ldrb	r0, [r0]
   139c8:	pop	{fp, pc}

000139cc <table_get_uchar@@Base>:
   139cc:	push	{fp, lr}
   139d0:	mov	fp, sp
   139d4:	bl	14c0c <table_get_cell_ptr@@Base>
   139d8:	ldr	r0, [r0]
   139dc:	ldrb	r0, [r0]
   139e0:	pop	{fp, pc}

000139e4 <table_get_string@@Base>:
   139e4:	push	{fp, lr}
   139e8:	mov	fp, sp
   139ec:	bl	14c0c <table_get_cell_ptr@@Base>
   139f0:	ldr	r0, [r0]
   139f4:	pop	{fp, pc}

000139f8 <table_get_ptr@@Base>:
   139f8:	push	{fp, lr}
   139fc:	mov	fp, sp
   13a00:	bl	14c0c <table_get_cell_ptr@@Base>
   13a04:	ldr	r0, [r0]
   13a08:	pop	{fp, pc}

00013a0c <table_row_init@@Base>:
   13a0c:	push	{r4, r5, fp, lr}
   13a10:	add	fp, sp, #8
   13a14:	mov	r4, r1
   13a18:	ldr	r1, [r0, #12]
   13a1c:	ldr	r5, [r0, #16]
   13a20:	lsl	r0, r1, #2
   13a24:	bl	11f48 <malloc@plt>
   13a28:	str	r0, [r5, r4, lsl #2]
   13a2c:	pop	{r4, r5, fp, pc}

00013a30 <table_get_row_ptr@@Base>:
   13a30:	ldr	r0, [r0, #16]
   13a34:	add	r0, r0, r1, lsl #2
   13a38:	bx	lr

00013a3c <table_row_destroy@@Base>:
   13a3c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   13a40:	add	fp, sp, #24
   13a44:	mov	r4, r1
   13a48:	mov	r5, r0
   13a4c:	bl	12cc0 <table_get_column_length@@Base>
   13a50:	ldr	r8, [r5, #16]
   13a54:	cmp	r0, #1
   13a58:	blt	13a80 <table_row_destroy@@Base+0x44>
   13a5c:	mov	r6, r0
   13a60:	mov	r7, #0
   13a64:	mov	r0, r5
   13a68:	mov	r1, r4
   13a6c:	mov	r2, r7
   13a70:	bl	14c28 <table_cell_destroy@@Base>
   13a74:	add	r7, r7, #1
   13a78:	cmp	r6, r7
   13a7c:	bne	13a64 <table_row_destroy@@Base+0x28>
   13a80:	ldr	r0, [r8, r4, lsl #2]
   13a84:	cmp	r0, #0
   13a88:	beq	13a94 <table_row_destroy@@Base+0x58>
   13a8c:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   13a90:	b	11f18 <free@plt>
   13a94:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00013a98 <table_get_row_length@@Base>:
   13a98:	ldr	r0, [r0, #20]
   13a9c:	bx	lr

00013aa0 <table_add_row@@Base>:
   13aa0:	push	{r4, r5, r6, r7, fp, lr}
   13aa4:	add	fp, sp, #16
   13aa8:	ldr	r5, [r0, #20]
   13aac:	ldr	r1, [r0, #24]
   13ab0:	mov	r4, r0
   13ab4:	udiv	r0, r5, r1
   13ab8:	mls	r0, r0, r1, r5
   13abc:	cmp	r0, #0
   13ac0:	bne	13ae4 <table_add_row@@Base+0x44>
   13ac4:	ldr	r2, [r4, #28]
   13ac8:	ldr	r0, [r4, #16]
   13acc:	add	r1, r2, r1
   13ad0:	str	r1, [r4, #28]
   13ad4:	lsl	r1, r1, #2
   13ad8:	bl	11f30 <realloc@plt>
   13adc:	str	r0, [r4, #16]
   13ae0:	ldr	r5, [r4, #20]
   13ae4:	mov	r0, r4
   13ae8:	bl	12cc0 <table_get_column_length@@Base>
   13aec:	mov	r6, r0
   13af0:	ldr	r0, [r4, #12]
   13af4:	ldr	r7, [r4, #16]
   13af8:	lsl	r0, r0, #2
   13afc:	bl	11f48 <malloc@plt>
   13b00:	cmp	r6, #1
   13b04:	str	r0, [r7, r5, lsl #2]
   13b08:	blt	13b2c <table_add_row@@Base+0x8c>
   13b0c:	mov	r7, #0
   13b10:	mov	r0, r4
   13b14:	mov	r1, r5
   13b18:	mov	r2, r7
   13b1c:	bl	14bec <table_cell_init@@Base>
   13b20:	add	r7, r7, #1
   13b24:	cmp	r6, r7
   13b28:	bne	13b10 <table_add_row@@Base+0x70>
   13b2c:	ldr	r1, [r4, #20]
   13b30:	mov	r0, r4
   13b34:	mvn	r2, #0
   13b38:	mov	r3, #2
   13b3c:	bl	12bb0 <table_notify@@Base>
   13b40:	ldr	r0, [r4, #20]
   13b44:	add	r1, r0, #1
   13b48:	str	r1, [r4, #20]
   13b4c:	pop	{r4, r5, r6, r7, fp, pc}

00013b50 <table_remove_row@@Base>:
   13b50:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   13b54:	add	fp, sp, #24
   13b58:	ldr	r8, [r0, #20]
   13b5c:	mov	r4, r1
   13b60:	mov	r5, r0
   13b64:	bl	12cc0 <table_get_column_length@@Base>
   13b68:	cmp	r0, #1
   13b6c:	blt	13bc0 <table_remove_row@@Base+0x70>
   13b70:	mov	r6, r0
   13b74:	mov	r7, #0
   13b78:	b	13b88 <table_remove_row@@Base+0x38>
   13b7c:	add	r7, r7, #1
   13b80:	cmp	r6, r7
   13b84:	beq	13bc0 <table_remove_row@@Base+0x70>
   13b88:	mov	r0, r5
   13b8c:	mov	r1, r7
   13b90:	bl	12d44 <table_get_column_data_type@@Base>
   13b94:	cmp	r0, #23
   13b98:	beq	13b7c <table_remove_row@@Base+0x2c>
   13b9c:	mov	r0, r5
   13ba0:	mov	r1, r4
   13ba4:	mov	r2, r7
   13ba8:	bl	14c0c <table_get_cell_ptr@@Base>
   13bac:	ldr	r0, [r0]
   13bb0:	cmp	r0, #0
   13bb4:	beq	13b7c <table_remove_row@@Base+0x2c>
   13bb8:	bl	11f18 <free@plt>
   13bbc:	b	13b7c <table_remove_row@@Base+0x2c>
   13bc0:	ldr	r0, [r5, #16]
   13bc4:	ldr	r0, [r0, r4, lsl #2]
   13bc8:	cmp	r0, #0
   13bcc:	beq	13bd4 <table_remove_row@@Base+0x84>
   13bd0:	bl	11f18 <free@plt>
   13bd4:	sub	r0, r8, #1
   13bd8:	cmp	r0, r4
   13bdc:	ble	13c4c <table_remove_row@@Base+0xfc>
   13be0:	mvn	r0, r4
   13be4:	add	r1, r8, r0
   13be8:	sub	r0, r8, #2
   13bec:	tst	r1, #1
   13bf0:	mov	r1, r4
   13bf4:	beq	13c0c <table_remove_row@@Base+0xbc>
   13bf8:	ldr	r1, [r5, #16]
   13bfc:	add	r2, r1, r4, lsl #2
   13c00:	ldr	r2, [r2, #4]
   13c04:	str	r2, [r1, r4, lsl #2]
   13c08:	add	r1, r4, #1
   13c0c:	cmp	r0, r4
   13c10:	beq	13c4c <table_remove_row@@Base+0xfc>
   13c14:	mvn	r0, r1
   13c18:	lsl	r1, r1, #2
   13c1c:	add	r0, r0, r8
   13c20:	ldr	r2, [r5, #16]
   13c24:	subs	r0, r0, #2
   13c28:	add	r3, r2, r1
   13c2c:	ldr	r3, [r3, #4]
   13c30:	str	r3, [r2, r1]
   13c34:	ldr	r2, [r5, #16]
   13c38:	add	r2, r2, r1
   13c3c:	add	r1, r1, #8
   13c40:	ldr	r3, [r2, #8]
   13c44:	str	r3, [r2, #4]
   13c48:	bne	13c20 <table_remove_row@@Base+0xd0>
   13c4c:	ldr	r0, [r5, #20]
   13c50:	ldr	r1, [r5, #24]
   13c54:	sub	r0, r0, #1
   13c58:	udiv	r2, r0, r1
   13c5c:	str	r0, [r5, #20]
   13c60:	mls	r0, r2, r1, r0
   13c64:	cmp	r0, #0
   13c68:	bne	13c88 <table_remove_row@@Base+0x138>
   13c6c:	ldr	r2, [r5, #28]
   13c70:	ldr	r0, [r5, #16]
   13c74:	sub	r1, r2, r1
   13c78:	str	r1, [r5, #28]
   13c7c:	lsl	r1, r1, #2
   13c80:	bl	11f30 <realloc@plt>
   13c84:	str	r0, [r5, #16]
   13c88:	mov	r0, r5
   13c8c:	mov	r1, r4
   13c90:	mvn	r2, #0
   13c94:	mov	r3, #4
   13c98:	bl	12bb0 <table_notify@@Base>
   13c9c:	mov	r0, #0
   13ca0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00013ca4 <table_set_row_ptr@@Base>:
   13ca4:	ldr	r2, [r2]
   13ca8:	ldr	r0, [r0, #16]
   13cac:	str	r2, [r0, r1, lsl #2]
   13cb0:	bx	lr

00013cb4 <table_set@@Base>:
   13cb4:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   13cb8:	add	fp, sp, #24
   13cbc:	mov	r8, r3
   13cc0:	mov	r4, r2
   13cc4:	mov	r9, r1
   13cc8:	mov	r6, r0
   13ccc:	bl	14c0c <table_get_cell_ptr@@Base>
   13cd0:	mov	r5, r0
   13cd4:	mov	r0, r6
   13cd8:	mov	r1, r4
   13cdc:	bl	12c98 <table_get_col_ptr@@Base>
   13ce0:	ldr	r1, [fp, #8]
   13ce4:	mvn	r7, #0
   13ce8:	cmp	r1, #23
   13cec:	bhi	13fb0 <table_set@@Base+0x2fc>
   13cf0:	add	r2, pc, #0
   13cf4:	ldr	pc, [r2, r1, lsl #2]
   13cf8:	andeq	r3, r1, r8, asr sp
   13cfc:	andeq	r3, r1, r8, ror #26
   13d00:	andeq	r3, r1, r8, ror sp
   13d04:	andeq	r3, r1, r8, lsl #27
   13d08:	muleq	r1, r8, sp
   13d0c:	andeq	r3, r1, r8, lsr #27
   13d10:			; <UNDEFINED> instruction: 0x00013db8
   13d14:	andeq	r3, r1, r8, asr #27
   13d18:	ldrdeq	r3, [r1], -r8
   13d1c:	andeq	r3, r1, r8, ror #27
   13d20:	strdeq	r3, [r1], -r8
   13d24:	andeq	r3, r1, r8, lsl #28
   13d28:	andeq	r3, r1, r0, asr #28
   13d2c:	andeq	r3, r1, r0, asr lr
   13d30:	andeq	r3, r1, r0, ror #28
   13d34:	andeq	r3, r1, r0, ror lr
   13d38:	andeq	r3, r1, r0, lsl #29
   13d3c:			; <UNDEFINED> instruction: 0x00013eb8
   13d40:	andeq	r3, r1, r8, asr #29
   13d44:	andeq	r3, r1, r8, lsl #30
   13d48:	andeq	r3, r1, r8, lsl pc
   13d4c:	andeq	r3, r1, r8, lsr #30
   13d50:	andeq	r3, r1, r4, ror #30
   13d54:			; <UNDEFINED> instruction: 0x00013fb8
   13d58:	ldr	r0, [r0, #4]
   13d5c:	cmp	r0, #0
   13d60:	bne	13fb0 <table_set@@Base+0x2fc>
   13d64:	b	13e8c <table_set@@Base+0x1d8>
   13d68:	ldr	r0, [r0, #4]
   13d6c:	cmp	r0, #1
   13d70:	beq	13e8c <table_set@@Base+0x1d8>
   13d74:	b	13fb0 <table_set@@Base+0x2fc>
   13d78:	ldr	r0, [r0, #4]
   13d7c:	cmp	r0, #2
   13d80:	beq	13f70 <table_set@@Base+0x2bc>
   13d84:	b	13fb0 <table_set@@Base+0x2fc>
   13d88:	ldr	r0, [r0, #4]
   13d8c:	cmp	r0, #3
   13d90:	beq	13f70 <table_set@@Base+0x2bc>
   13d94:	b	13fb0 <table_set@@Base+0x2fc>
   13d98:	ldr	r0, [r0, #4]
   13d9c:	cmp	r0, #4
   13da0:	beq	13e14 <table_set@@Base+0x160>
   13da4:	b	13fb0 <table_set@@Base+0x2fc>
   13da8:	ldr	r0, [r0, #4]
   13dac:	cmp	r0, #5
   13db0:	beq	13e14 <table_set@@Base+0x160>
   13db4:	b	13fb0 <table_set@@Base+0x2fc>
   13db8:	ldr	r0, [r0, #4]
   13dbc:	cmp	r0, #6
   13dc0:	beq	13e8c <table_set@@Base+0x1d8>
   13dc4:	b	13fb0 <table_set@@Base+0x2fc>
   13dc8:	ldr	r0, [r0, #4]
   13dcc:	cmp	r0, #7
   13dd0:	beq	13e8c <table_set@@Base+0x1d8>
   13dd4:	b	13fb0 <table_set@@Base+0x2fc>
   13dd8:	ldr	r0, [r0, #4]
   13ddc:	cmp	r0, #8
   13de0:	beq	13ed4 <table_set@@Base+0x220>
   13de4:	b	13fb0 <table_set@@Base+0x2fc>
   13de8:	ldr	r0, [r0, #4]
   13dec:	cmp	r0, #9
   13df0:	beq	13ed4 <table_set@@Base+0x220>
   13df4:	b	13fb0 <table_set@@Base+0x2fc>
   13df8:	ldr	r0, [r0, #4]
   13dfc:	cmp	r0, #10
   13e00:	beq	13e14 <table_set@@Base+0x160>
   13e04:	b	13fb0 <table_set@@Base+0x2fc>
   13e08:	ldr	r0, [r0, #4]
   13e0c:	cmp	r0, #11
   13e10:	bne	13fb0 <table_set@@Base+0x2fc>
   13e14:	ldr	r0, [r5]
   13e18:	cmp	r0, #0
   13e1c:	bne	13e34 <table_set@@Base+0x180>
   13e20:	mov	r0, #2
   13e24:	bl	11f48 <malloc@plt>
   13e28:	cmp	r0, #0
   13e2c:	str	r0, [r5]
   13e30:	beq	13fb0 <table_set@@Base+0x2fc>
   13e34:	ldrh	r1, [r8]
   13e38:	strh	r1, [r0]
   13e3c:	b	13f98 <table_set@@Base+0x2e4>
   13e40:	ldr	r0, [r0, #4]
   13e44:	cmp	r0, #12
   13e48:	beq	13e8c <table_set@@Base+0x1d8>
   13e4c:	b	13fb0 <table_set@@Base+0x2fc>
   13e50:	ldr	r0, [r0, #4]
   13e54:	cmp	r0, #13
   13e58:	beq	13e8c <table_set@@Base+0x1d8>
   13e5c:	b	13fb0 <table_set@@Base+0x2fc>
   13e60:	ldr	r0, [r0, #4]
   13e64:	cmp	r0, #14
   13e68:	beq	13ed4 <table_set@@Base+0x220>
   13e6c:	b	13fb0 <table_set@@Base+0x2fc>
   13e70:	ldr	r0, [r0, #4]
   13e74:	cmp	r0, #15
   13e78:	beq	13ed4 <table_set@@Base+0x220>
   13e7c:	b	13fb0 <table_set@@Base+0x2fc>
   13e80:	ldr	r0, [r0, #4]
   13e84:	cmp	r0, #16
   13e88:	bne	13fb0 <table_set@@Base+0x2fc>
   13e8c:	ldr	r0, [r5]
   13e90:	cmp	r0, #0
   13e94:	bne	13eac <table_set@@Base+0x1f8>
   13e98:	mov	r0, #4
   13e9c:	bl	11f48 <malloc@plt>
   13ea0:	cmp	r0, #0
   13ea4:	str	r0, [r5]
   13ea8:	beq	13fb0 <table_set@@Base+0x2fc>
   13eac:	ldr	r1, [r8]
   13eb0:	str	r1, [r0]
   13eb4:	b	13f98 <table_set@@Base+0x2e4>
   13eb8:	ldr	r0, [r0, #4]
   13ebc:	cmp	r0, #17
   13ec0:	beq	13ed4 <table_set@@Base+0x220>
   13ec4:	b	13fb0 <table_set@@Base+0x2fc>
   13ec8:	ldr	r0, [r0, #4]
   13ecc:	cmp	r0, #18
   13ed0:	bne	13fb0 <table_set@@Base+0x2fc>
   13ed4:	ldr	r0, [r5]
   13ed8:	cmp	r0, #0
   13edc:	bne	13ef4 <table_set@@Base+0x240>
   13ee0:	mov	r0, #8
   13ee4:	bl	11f48 <malloc@plt>
   13ee8:	cmp	r0, #0
   13eec:	str	r0, [r5]
   13ef0:	beq	13fb0 <table_set@@Base+0x2fc>
   13ef4:	ldr	r1, [r8]
   13ef8:	ldr	r2, [r8, #4]
   13efc:	str	r2, [r0, #4]
   13f00:	str	r1, [r0]
   13f04:	b	13f98 <table_set@@Base+0x2e4>
   13f08:	ldr	r0, [r0, #4]
   13f0c:	cmp	r0, #19
   13f10:	beq	13f70 <table_set@@Base+0x2bc>
   13f14:	b	13fb0 <table_set@@Base+0x2fc>
   13f18:	ldr	r0, [r0, #4]
   13f1c:	cmp	r0, #20
   13f20:	beq	13f70 <table_set@@Base+0x2bc>
   13f24:	b	13fb0 <table_set@@Base+0x2fc>
   13f28:	ldr	r0, [r0, #4]
   13f2c:	cmp	r0, #21
   13f30:	bne	13fb0 <table_set@@Base+0x2fc>
   13f34:	mov	r0, r8
   13f38:	bl	11f6c <strlen@plt>
   13f3c:	ldr	r2, [r5]
   13f40:	add	r1, r0, #1
   13f44:	mov	r0, r2
   13f48:	bl	11f30 <realloc@plt>
   13f4c:	cmp	r0, #0
   13f50:	str	r0, [r5]
   13f54:	beq	13fb0 <table_set@@Base+0x2fc>
   13f58:	mov	r1, r8
   13f5c:	bl	11f3c <strcpy@plt>
   13f60:	b	13f98 <table_set@@Base+0x2e4>
   13f64:	ldr	r0, [r0, #4]
   13f68:	cmp	r0, #22
   13f6c:	bne	13fb0 <table_set@@Base+0x2fc>
   13f70:	ldr	r0, [r5]
   13f74:	cmp	r0, #0
   13f78:	bne	13f90 <table_set@@Base+0x2dc>
   13f7c:	mov	r0, #1
   13f80:	bl	11f48 <malloc@plt>
   13f84:	cmp	r0, #0
   13f88:	str	r0, [r5]
   13f8c:	beq	13fb0 <table_set@@Base+0x2fc>
   13f90:	ldrb	r1, [r8]
   13f94:	strb	r1, [r0]
   13f98:	mov	r0, r6
   13f9c:	mov	r1, r9
   13fa0:	mov	r2, r4
   13fa4:	mov	r3, #1
   13fa8:	bl	12bb0 <table_notify@@Base>
   13fac:	mov	r7, #0
   13fb0:	mov	r0, r7
   13fb4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   13fb8:	ldr	r0, [r0, #4]
   13fbc:	cmp	r0, #23
   13fc0:	bne	13fb0 <table_set@@Base+0x2fc>
   13fc4:	str	r8, [r5]
   13fc8:	b	13f98 <table_set@@Base+0x2e4>

00013fcc <table_set_bool@@Base>:
   13fcc:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   13fd0:	add	fp, sp, #24
   13fd4:	mov	r8, r3
   13fd8:	mov	r4, r2
   13fdc:	mov	r9, r1
   13fe0:	mov	r6, r0
   13fe4:	bl	14c0c <table_get_cell_ptr@@Base>
   13fe8:	mov	r5, r0
   13fec:	mov	r0, r6
   13ff0:	mov	r1, r4
   13ff4:	bl	12c98 <table_get_col_ptr@@Base>
   13ff8:	ldr	r0, [r0, #4]
   13ffc:	mvn	r7, #0
   14000:	cmp	r0, #22
   14004:	bne	14044 <table_set_bool@@Base+0x78>
   14008:	ldr	r0, [r5]
   1400c:	cmp	r0, #0
   14010:	bne	14028 <table_set_bool@@Base+0x5c>
   14014:	mov	r0, #1
   14018:	bl	11f48 <malloc@plt>
   1401c:	cmp	r0, #0
   14020:	str	r0, [r5]
   14024:	beq	14044 <table_set_bool@@Base+0x78>
   14028:	strb	r8, [r0]
   1402c:	mov	r0, r6
   14030:	mov	r1, r9
   14034:	mov	r2, r4
   14038:	mov	r3, #1
   1403c:	bl	12bb0 <table_notify@@Base>
   14040:	mov	r7, #0
   14044:	mov	r0, r7
   14048:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

0001404c <table_set_int@@Base>:
   1404c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14050:	add	fp, sp, #24
   14054:	mov	r8, r3
   14058:	mov	r4, r2
   1405c:	mov	r5, r1
   14060:	mov	r6, r0
   14064:	bl	14c0c <table_get_cell_ptr@@Base>
   14068:	mov	r9, r0
   1406c:	mov	r0, r6
   14070:	mov	r1, r4
   14074:	bl	12c98 <table_get_col_ptr@@Base>
   14078:	ldr	r0, [r0, #4]
   1407c:	mvn	r7, #0
   14080:	cmp	r0, #0
   14084:	bne	140c4 <table_set_int@@Base+0x78>
   14088:	ldr	r0, [r9]
   1408c:	cmp	r0, #0
   14090:	bne	140a8 <table_set_int@@Base+0x5c>
   14094:	mov	r0, #4
   14098:	bl	11f48 <malloc@plt>
   1409c:	cmp	r0, #0
   140a0:	str	r0, [r9]
   140a4:	beq	140c4 <table_set_int@@Base+0x78>
   140a8:	str	r8, [r0]
   140ac:	mov	r0, r6
   140b0:	mov	r1, r5
   140b4:	mov	r2, r4
   140b8:	mov	r3, #1
   140bc:	bl	12bb0 <table_notify@@Base>
   140c0:	mov	r7, #0
   140c4:	mov	r0, r7
   140c8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000140cc <table_set_uint@@Base>:
   140cc:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   140d0:	add	fp, sp, #24
   140d4:	mov	r8, r3
   140d8:	mov	r4, r2
   140dc:	mov	r5, r1
   140e0:	mov	r6, r0
   140e4:	bl	14c0c <table_get_cell_ptr@@Base>
   140e8:	mov	r9, r0
   140ec:	mov	r0, r6
   140f0:	mov	r1, r4
   140f4:	bl	12c98 <table_get_col_ptr@@Base>
   140f8:	ldr	r0, [r0, #4]
   140fc:	mvn	r7, #0
   14100:	cmp	r0, #1
   14104:	bne	14144 <table_set_uint@@Base+0x78>
   14108:	ldr	r0, [r9]
   1410c:	cmp	r0, #0
   14110:	bne	14128 <table_set_uint@@Base+0x5c>
   14114:	mov	r0, #4
   14118:	bl	11f48 <malloc@plt>
   1411c:	cmp	r0, #0
   14120:	str	r0, [r9]
   14124:	beq	14144 <table_set_uint@@Base+0x78>
   14128:	str	r8, [r0]
   1412c:	mov	r0, r6
   14130:	mov	r1, r5
   14134:	mov	r2, r4
   14138:	mov	r3, #1
   1413c:	bl	12bb0 <table_notify@@Base>
   14140:	mov	r7, #0
   14144:	mov	r0, r7
   14148:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

0001414c <table_set_int8@@Base>:
   1414c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14150:	add	fp, sp, #24
   14154:	mov	r8, r3
   14158:	mov	r4, r2
   1415c:	mov	r9, r1
   14160:	mov	r6, r0
   14164:	bl	14c0c <table_get_cell_ptr@@Base>
   14168:	mov	r5, r0
   1416c:	mov	r0, r6
   14170:	mov	r1, r4
   14174:	bl	12c98 <table_get_col_ptr@@Base>
   14178:	ldr	r0, [r0, #4]
   1417c:	mvn	r7, #0
   14180:	cmp	r0, #2
   14184:	bne	141c4 <table_set_int8@@Base+0x78>
   14188:	ldr	r0, [r5]
   1418c:	cmp	r0, #0
   14190:	bne	141a8 <table_set_int8@@Base+0x5c>
   14194:	mov	r0, #1
   14198:	bl	11f48 <malloc@plt>
   1419c:	cmp	r0, #0
   141a0:	str	r0, [r5]
   141a4:	beq	141c4 <table_set_int8@@Base+0x78>
   141a8:	strb	r8, [r0]
   141ac:	mov	r0, r6
   141b0:	mov	r1, r9
   141b4:	mov	r2, r4
   141b8:	mov	r3, #1
   141bc:	bl	12bb0 <table_notify@@Base>
   141c0:	mov	r7, #0
   141c4:	mov	r0, r7
   141c8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000141cc <table_set_uint8@@Base>:
   141cc:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   141d0:	add	fp, sp, #24
   141d4:	mov	r8, r3
   141d8:	mov	r4, r2
   141dc:	mov	r9, r1
   141e0:	mov	r6, r0
   141e4:	bl	14c0c <table_get_cell_ptr@@Base>
   141e8:	mov	r5, r0
   141ec:	mov	r0, r6
   141f0:	mov	r1, r4
   141f4:	bl	12c98 <table_get_col_ptr@@Base>
   141f8:	ldr	r0, [r0, #4]
   141fc:	mvn	r7, #0
   14200:	cmp	r0, #3
   14204:	bne	14244 <table_set_uint8@@Base+0x78>
   14208:	ldr	r0, [r5]
   1420c:	cmp	r0, #0
   14210:	bne	14228 <table_set_uint8@@Base+0x5c>
   14214:	mov	r0, #1
   14218:	bl	11f48 <malloc@plt>
   1421c:	cmp	r0, #0
   14220:	str	r0, [r5]
   14224:	beq	14244 <table_set_uint8@@Base+0x78>
   14228:	strb	r8, [r0]
   1422c:	mov	r0, r6
   14230:	mov	r1, r9
   14234:	mov	r2, r4
   14238:	mov	r3, #1
   1423c:	bl	12bb0 <table_notify@@Base>
   14240:	mov	r7, #0
   14244:	mov	r0, r7
   14248:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

0001424c <table_set_int16@@Base>:
   1424c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14250:	add	fp, sp, #24
   14254:	mov	r8, r3
   14258:	mov	r4, r2
   1425c:	mov	r9, r1
   14260:	mov	r6, r0
   14264:	bl	14c0c <table_get_cell_ptr@@Base>
   14268:	mov	r5, r0
   1426c:	mov	r0, r6
   14270:	mov	r1, r4
   14274:	bl	12c98 <table_get_col_ptr@@Base>
   14278:	ldr	r0, [r0, #4]
   1427c:	mvn	r7, #0
   14280:	cmp	r0, #4
   14284:	bne	142c4 <table_set_int16@@Base+0x78>
   14288:	ldr	r0, [r5]
   1428c:	cmp	r0, #0
   14290:	bne	142a8 <table_set_int16@@Base+0x5c>
   14294:	mov	r0, #2
   14298:	bl	11f48 <malloc@plt>
   1429c:	cmp	r0, #0
   142a0:	str	r0, [r5]
   142a4:	beq	142c4 <table_set_int16@@Base+0x78>
   142a8:	strh	r8, [r0]
   142ac:	mov	r0, r6
   142b0:	mov	r1, r9
   142b4:	mov	r2, r4
   142b8:	mov	r3, #1
   142bc:	bl	12bb0 <table_notify@@Base>
   142c0:	mov	r7, #0
   142c4:	mov	r0, r7
   142c8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000142cc <table_set_uint16@@Base>:
   142cc:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   142d0:	add	fp, sp, #24
   142d4:	mov	r8, r3
   142d8:	mov	r4, r2
   142dc:	mov	r9, r1
   142e0:	mov	r6, r0
   142e4:	bl	14c0c <table_get_cell_ptr@@Base>
   142e8:	mov	r5, r0
   142ec:	mov	r0, r6
   142f0:	mov	r1, r4
   142f4:	bl	12c98 <table_get_col_ptr@@Base>
   142f8:	ldr	r0, [r0, #4]
   142fc:	mvn	r7, #0
   14300:	cmp	r0, #5
   14304:	bne	14344 <table_set_uint16@@Base+0x78>
   14308:	ldr	r0, [r5]
   1430c:	cmp	r0, #0
   14310:	bne	14328 <table_set_uint16@@Base+0x5c>
   14314:	mov	r0, #2
   14318:	bl	11f48 <malloc@plt>
   1431c:	cmp	r0, #0
   14320:	str	r0, [r5]
   14324:	beq	14344 <table_set_uint16@@Base+0x78>
   14328:	strh	r8, [r0]
   1432c:	mov	r0, r6
   14330:	mov	r1, r9
   14334:	mov	r2, r4
   14338:	mov	r3, #1
   1433c:	bl	12bb0 <table_notify@@Base>
   14340:	mov	r7, #0
   14344:	mov	r0, r7
   14348:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

0001434c <table_set_int32@@Base>:
   1434c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14350:	add	fp, sp, #24
   14354:	mov	r8, r3
   14358:	mov	r4, r2
   1435c:	mov	r5, r1
   14360:	mov	r6, r0
   14364:	bl	14c0c <table_get_cell_ptr@@Base>
   14368:	mov	r9, r0
   1436c:	mov	r0, r6
   14370:	mov	r1, r4
   14374:	bl	12c98 <table_get_col_ptr@@Base>
   14378:	ldr	r0, [r0, #4]
   1437c:	mvn	r7, #0
   14380:	cmp	r0, #6
   14384:	bne	143c4 <table_set_int32@@Base+0x78>
   14388:	ldr	r0, [r9]
   1438c:	cmp	r0, #0
   14390:	bne	143a8 <table_set_int32@@Base+0x5c>
   14394:	mov	r0, #4
   14398:	bl	11f48 <malloc@plt>
   1439c:	cmp	r0, #0
   143a0:	str	r0, [r9]
   143a4:	beq	143c4 <table_set_int32@@Base+0x78>
   143a8:	str	r8, [r0]
   143ac:	mov	r0, r6
   143b0:	mov	r1, r5
   143b4:	mov	r2, r4
   143b8:	mov	r3, #1
   143bc:	bl	12bb0 <table_notify@@Base>
   143c0:	mov	r7, #0
   143c4:	mov	r0, r7
   143c8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000143cc <table_set_uint32@@Base>:
   143cc:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   143d0:	add	fp, sp, #24
   143d4:	mov	r8, r3
   143d8:	mov	r4, r2
   143dc:	mov	r5, r1
   143e0:	mov	r6, r0
   143e4:	bl	14c0c <table_get_cell_ptr@@Base>
   143e8:	mov	r9, r0
   143ec:	mov	r0, r6
   143f0:	mov	r1, r4
   143f4:	bl	12c98 <table_get_col_ptr@@Base>
   143f8:	ldr	r0, [r0, #4]
   143fc:	mvn	r7, #0
   14400:	cmp	r0, #7
   14404:	bne	14444 <table_set_uint32@@Base+0x78>
   14408:	ldr	r0, [r9]
   1440c:	cmp	r0, #0
   14410:	bne	14428 <table_set_uint32@@Base+0x5c>
   14414:	mov	r0, #4
   14418:	bl	11f48 <malloc@plt>
   1441c:	cmp	r0, #0
   14420:	str	r0, [r9]
   14424:	beq	14444 <table_set_uint32@@Base+0x78>
   14428:	str	r8, [r0]
   1442c:	mov	r0, r6
   14430:	mov	r1, r5
   14434:	mov	r2, r4
   14438:	mov	r3, #1
   1443c:	bl	12bb0 <table_notify@@Base>
   14440:	mov	r7, #0
   14444:	mov	r0, r7
   14448:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

0001444c <table_set_int64@@Base>:
   1444c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14450:	add	fp, sp, #24
   14454:	mov	r4, r2
   14458:	mov	r8, r1
   1445c:	mov	r6, r0
   14460:	bl	14c0c <table_get_cell_ptr@@Base>
   14464:	mov	r5, r0
   14468:	mov	r0, r6
   1446c:	mov	r1, r4
   14470:	bl	12c98 <table_get_col_ptr@@Base>
   14474:	ldr	r0, [r0, #4]
   14478:	mvn	r7, #0
   1447c:	cmp	r0, #8
   14480:	bne	144cc <table_set_int64@@Base+0x80>
   14484:	ldr	r0, [r5]
   14488:	cmp	r0, #0
   1448c:	bne	144a4 <table_set_int64@@Base+0x58>
   14490:	mov	r0, #8
   14494:	bl	11f48 <malloc@plt>
   14498:	cmp	r0, #0
   1449c:	str	r0, [r5]
   144a0:	beq	144cc <table_set_int64@@Base+0x80>
   144a4:	ldr	r1, [fp, #12]
   144a8:	ldr	r2, [fp, #8]
   144ac:	mov	r3, #1
   144b0:	str	r2, [r0]
   144b4:	str	r1, [r0, #4]
   144b8:	mov	r0, r6
   144bc:	mov	r1, r8
   144c0:	mov	r2, r4
   144c4:	bl	12bb0 <table_notify@@Base>
   144c8:	mov	r7, #0
   144cc:	mov	r0, r7
   144d0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

000144d4 <table_set_uint64@@Base>:
   144d4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   144d8:	add	fp, sp, #24
   144dc:	mov	r4, r2
   144e0:	mov	r8, r1
   144e4:	mov	r6, r0
   144e8:	bl	14c0c <table_get_cell_ptr@@Base>
   144ec:	mov	r5, r0
   144f0:	mov	r0, r6
   144f4:	mov	r1, r4
   144f8:	bl	12c98 <table_get_col_ptr@@Base>
   144fc:	ldr	r0, [r0, #4]
   14500:	mvn	r7, #0
   14504:	cmp	r0, #9
   14508:	bne	14554 <table_set_uint64@@Base+0x80>
   1450c:	ldr	r0, [r5]
   14510:	cmp	r0, #0
   14514:	bne	1452c <table_set_uint64@@Base+0x58>
   14518:	mov	r0, #8
   1451c:	bl	11f48 <malloc@plt>
   14520:	cmp	r0, #0
   14524:	str	r0, [r5]
   14528:	beq	14554 <table_set_uint64@@Base+0x80>
   1452c:	ldr	r1, [fp, #12]
   14530:	ldr	r2, [fp, #8]
   14534:	mov	r3, #1
   14538:	str	r2, [r0]
   1453c:	str	r1, [r0, #4]
   14540:	mov	r0, r6
   14544:	mov	r1, r8
   14548:	mov	r2, r4
   1454c:	bl	12bb0 <table_notify@@Base>
   14550:	mov	r7, #0
   14554:	mov	r0, r7
   14558:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0001455c <table_set_short@@Base>:
   1455c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14560:	add	fp, sp, #24
   14564:	mov	r8, r3
   14568:	mov	r4, r2
   1456c:	mov	r9, r1
   14570:	mov	r6, r0
   14574:	bl	14c0c <table_get_cell_ptr@@Base>
   14578:	mov	r5, r0
   1457c:	mov	r0, r6
   14580:	mov	r1, r4
   14584:	bl	12c98 <table_get_col_ptr@@Base>
   14588:	ldr	r0, [r0, #4]
   1458c:	mvn	r7, #0
   14590:	cmp	r0, #10
   14594:	bne	145d4 <table_set_short@@Base+0x78>
   14598:	ldr	r0, [r5]
   1459c:	cmp	r0, #0
   145a0:	bne	145b8 <table_set_short@@Base+0x5c>
   145a4:	mov	r0, #2
   145a8:	bl	11f48 <malloc@plt>
   145ac:	cmp	r0, #0
   145b0:	str	r0, [r5]
   145b4:	beq	145d4 <table_set_short@@Base+0x78>
   145b8:	strh	r8, [r0]
   145bc:	mov	r0, r6
   145c0:	mov	r1, r9
   145c4:	mov	r2, r4
   145c8:	mov	r3, #1
   145cc:	bl	12bb0 <table_notify@@Base>
   145d0:	mov	r7, #0
   145d4:	mov	r0, r7
   145d8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000145dc <table_set_ushort@@Base>:
   145dc:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   145e0:	add	fp, sp, #24
   145e4:	mov	r8, r3
   145e8:	mov	r4, r2
   145ec:	mov	r9, r1
   145f0:	mov	r6, r0
   145f4:	bl	14c0c <table_get_cell_ptr@@Base>
   145f8:	mov	r5, r0
   145fc:	mov	r0, r6
   14600:	mov	r1, r4
   14604:	bl	12c98 <table_get_col_ptr@@Base>
   14608:	ldr	r0, [r0, #4]
   1460c:	mvn	r7, #0
   14610:	cmp	r0, #11
   14614:	bne	14654 <table_set_ushort@@Base+0x78>
   14618:	ldr	r0, [r5]
   1461c:	cmp	r0, #0
   14620:	bne	14638 <table_set_ushort@@Base+0x5c>
   14624:	mov	r0, #2
   14628:	bl	11f48 <malloc@plt>
   1462c:	cmp	r0, #0
   14630:	str	r0, [r5]
   14634:	beq	14654 <table_set_ushort@@Base+0x78>
   14638:	strh	r8, [r0]
   1463c:	mov	r0, r6
   14640:	mov	r1, r9
   14644:	mov	r2, r4
   14648:	mov	r3, #1
   1464c:	bl	12bb0 <table_notify@@Base>
   14650:	mov	r7, #0
   14654:	mov	r0, r7
   14658:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

0001465c <table_set_long@@Base>:
   1465c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14660:	add	fp, sp, #24
   14664:	mov	r8, r3
   14668:	mov	r4, r2
   1466c:	mov	r5, r1
   14670:	mov	r6, r0
   14674:	bl	14c0c <table_get_cell_ptr@@Base>
   14678:	mov	r9, r0
   1467c:	mov	r0, r6
   14680:	mov	r1, r4
   14684:	bl	12c98 <table_get_col_ptr@@Base>
   14688:	ldr	r0, [r0, #4]
   1468c:	mvn	r7, #0
   14690:	cmp	r0, #12
   14694:	bne	146d4 <table_set_long@@Base+0x78>
   14698:	ldr	r0, [r9]
   1469c:	cmp	r0, #0
   146a0:	bne	146b8 <table_set_long@@Base+0x5c>
   146a4:	mov	r0, #4
   146a8:	bl	11f48 <malloc@plt>
   146ac:	cmp	r0, #0
   146b0:	str	r0, [r9]
   146b4:	beq	146d4 <table_set_long@@Base+0x78>
   146b8:	str	r8, [r0]
   146bc:	mov	r0, r6
   146c0:	mov	r1, r5
   146c4:	mov	r2, r4
   146c8:	mov	r3, #1
   146cc:	bl	12bb0 <table_notify@@Base>
   146d0:	mov	r7, #0
   146d4:	mov	r0, r7
   146d8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000146dc <table_set_ulong@@Base>:
   146dc:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   146e0:	add	fp, sp, #24
   146e4:	mov	r8, r3
   146e8:	mov	r4, r2
   146ec:	mov	r5, r1
   146f0:	mov	r6, r0
   146f4:	bl	14c0c <table_get_cell_ptr@@Base>
   146f8:	mov	r9, r0
   146fc:	mov	r0, r6
   14700:	mov	r1, r4
   14704:	bl	12c98 <table_get_col_ptr@@Base>
   14708:	ldr	r0, [r0, #4]
   1470c:	mvn	r7, #0
   14710:	cmp	r0, #13
   14714:	bne	14754 <table_set_ulong@@Base+0x78>
   14718:	ldr	r0, [r9]
   1471c:	cmp	r0, #0
   14720:	bne	14738 <table_set_ulong@@Base+0x5c>
   14724:	mov	r0, #4
   14728:	bl	11f48 <malloc@plt>
   1472c:	cmp	r0, #0
   14730:	str	r0, [r9]
   14734:	beq	14754 <table_set_ulong@@Base+0x78>
   14738:	str	r8, [r0]
   1473c:	mov	r0, r6
   14740:	mov	r1, r5
   14744:	mov	r2, r4
   14748:	mov	r3, #1
   1474c:	bl	12bb0 <table_notify@@Base>
   14750:	mov	r7, #0
   14754:	mov	r0, r7
   14758:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

0001475c <table_set_llong@@Base>:
   1475c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14760:	add	fp, sp, #24
   14764:	mov	r4, r2
   14768:	mov	r8, r1
   1476c:	mov	r6, r0
   14770:	bl	14c0c <table_get_cell_ptr@@Base>
   14774:	mov	r5, r0
   14778:	mov	r0, r6
   1477c:	mov	r1, r4
   14780:	bl	12c98 <table_get_col_ptr@@Base>
   14784:	ldr	r0, [r0, #4]
   14788:	mvn	r7, #0
   1478c:	cmp	r0, #14
   14790:	bne	147dc <table_set_llong@@Base+0x80>
   14794:	ldr	r0, [r5]
   14798:	cmp	r0, #0
   1479c:	bne	147b4 <table_set_llong@@Base+0x58>
   147a0:	mov	r0, #8
   147a4:	bl	11f48 <malloc@plt>
   147a8:	cmp	r0, #0
   147ac:	str	r0, [r5]
   147b0:	beq	147dc <table_set_llong@@Base+0x80>
   147b4:	ldr	r1, [fp, #12]
   147b8:	ldr	r2, [fp, #8]
   147bc:	mov	r3, #1
   147c0:	str	r2, [r0]
   147c4:	str	r1, [r0, #4]
   147c8:	mov	r0, r6
   147cc:	mov	r1, r8
   147d0:	mov	r2, r4
   147d4:	bl	12bb0 <table_notify@@Base>
   147d8:	mov	r7, #0
   147dc:	mov	r0, r7
   147e0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

000147e4 <table_set_ullong@@Base>:
   147e4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   147e8:	add	fp, sp, #24
   147ec:	mov	r4, r2
   147f0:	mov	r8, r1
   147f4:	mov	r6, r0
   147f8:	bl	14c0c <table_get_cell_ptr@@Base>
   147fc:	mov	r5, r0
   14800:	mov	r0, r6
   14804:	mov	r1, r4
   14808:	bl	12c98 <table_get_col_ptr@@Base>
   1480c:	ldr	r0, [r0, #4]
   14810:	mvn	r7, #0
   14814:	cmp	r0, #15
   14818:	bne	14864 <table_set_ullong@@Base+0x80>
   1481c:	ldr	r0, [r5]
   14820:	cmp	r0, #0
   14824:	bne	1483c <table_set_ullong@@Base+0x58>
   14828:	mov	r0, #8
   1482c:	bl	11f48 <malloc@plt>
   14830:	cmp	r0, #0
   14834:	str	r0, [r5]
   14838:	beq	14864 <table_set_ullong@@Base+0x80>
   1483c:	ldr	r1, [fp, #12]
   14840:	ldr	r2, [fp, #8]
   14844:	mov	r3, #1
   14848:	str	r2, [r0]
   1484c:	str	r1, [r0, #4]
   14850:	mov	r0, r6
   14854:	mov	r1, r8
   14858:	mov	r2, r4
   1485c:	bl	12bb0 <table_notify@@Base>
   14860:	mov	r7, #0
   14864:	mov	r0, r7
   14868:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0001486c <table_set_float@@Base>:
   1486c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14870:	add	fp, sp, #24
   14874:	vpush	{d8}
   14878:	vmov.f32	s16, s0
   1487c:	mov	r4, r2
   14880:	mov	r8, r1
   14884:	mov	r6, r0
   14888:	bl	14c0c <table_get_cell_ptr@@Base>
   1488c:	mov	r5, r0
   14890:	mov	r0, r6
   14894:	mov	r1, r4
   14898:	bl	12c98 <table_get_col_ptr@@Base>
   1489c:	ldr	r0, [r0, #4]
   148a0:	mvn	r7, #0
   148a4:	cmp	r0, #16
   148a8:	bne	148ec <table_set_float@@Base+0x80>
   148ac:	ldr	r0, [r5]
   148b0:	cmp	r0, #0
   148b4:	bne	148cc <table_set_float@@Base+0x60>
   148b8:	mov	r0, #4
   148bc:	bl	11f48 <malloc@plt>
   148c0:	cmp	r0, #0
   148c4:	str	r0, [r5]
   148c8:	beq	148ec <table_set_float@@Base+0x80>
   148cc:	vmov	r1, s16
   148d0:	mov	r2, r4
   148d4:	mov	r3, #1
   148d8:	str	r1, [r0]
   148dc:	mov	r0, r6
   148e0:	mov	r1, r8
   148e4:	bl	12bb0 <table_notify@@Base>
   148e8:	mov	r7, #0
   148ec:	mov	r0, r7
   148f0:	vpop	{d8}
   148f4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

000148f8 <table_set_double@@Base>:
   148f8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   148fc:	add	fp, sp, #24
   14900:	vpush	{d8}
   14904:	vorr	d8, d0, d0
   14908:	mov	r4, r2
   1490c:	mov	r5, r1
   14910:	mov	r6, r0
   14914:	bl	14c0c <table_get_cell_ptr@@Base>
   14918:	mov	r8, r0
   1491c:	mov	r0, r6
   14920:	mov	r1, r4
   14924:	bl	12c98 <table_get_col_ptr@@Base>
   14928:	ldr	r0, [r0, #4]
   1492c:	mvn	r7, #0
   14930:	cmp	r0, #17
   14934:	bne	14974 <table_set_double@@Base+0x7c>
   14938:	ldr	r0, [r8]
   1493c:	cmp	r0, #0
   14940:	bne	14958 <table_set_double@@Base+0x60>
   14944:	mov	r0, #8
   14948:	bl	11f48 <malloc@plt>
   1494c:	cmp	r0, #0
   14950:	str	r0, [r8]
   14954:	beq	14974 <table_set_double@@Base+0x7c>
   14958:	vst1.8	{d8}, [r0]
   1495c:	mov	r0, r6
   14960:	mov	r1, r5
   14964:	mov	r2, r4
   14968:	mov	r3, #1
   1496c:	bl	12bb0 <table_notify@@Base>
   14970:	mov	r7, #0
   14974:	mov	r0, r7
   14978:	vpop	{d8}
   1497c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00014980 <table_set_ldouble@@Base>:
   14980:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14984:	add	fp, sp, #24
   14988:	vpush	{d8}
   1498c:	vorr	d8, d0, d0
   14990:	mov	r4, r2
   14994:	mov	r5, r1
   14998:	mov	r6, r0
   1499c:	bl	14c0c <table_get_cell_ptr@@Base>
   149a0:	mov	r8, r0
   149a4:	mov	r0, r6
   149a8:	mov	r1, r4
   149ac:	bl	12c98 <table_get_col_ptr@@Base>
   149b0:	ldr	r0, [r0, #4]
   149b4:	mvn	r7, #0
   149b8:	cmp	r0, #18
   149bc:	bne	149fc <table_set_ldouble@@Base+0x7c>
   149c0:	ldr	r0, [r8]
   149c4:	cmp	r0, #0
   149c8:	bne	149e0 <table_set_ldouble@@Base+0x60>
   149cc:	mov	r0, #8
   149d0:	bl	11f48 <malloc@plt>
   149d4:	cmp	r0, #0
   149d8:	str	r0, [r8]
   149dc:	beq	149fc <table_set_ldouble@@Base+0x7c>
   149e0:	vst1.8	{d8}, [r0]
   149e4:	mov	r0, r6
   149e8:	mov	r1, r5
   149ec:	mov	r2, r4
   149f0:	mov	r3, #1
   149f4:	bl	12bb0 <table_notify@@Base>
   149f8:	mov	r7, #0
   149fc:	mov	r0, r7
   14a00:	vpop	{d8}
   14a04:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00014a08 <table_set_string@@Base>:
   14a08:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14a0c:	add	fp, sp, #24
   14a10:	mov	r8, r3
   14a14:	mov	r4, r2
   14a18:	mov	r9, r1
   14a1c:	mov	r6, r0
   14a20:	bl	14c0c <table_get_cell_ptr@@Base>
   14a24:	mov	r5, r0
   14a28:	mov	r0, r6
   14a2c:	mov	r1, r4
   14a30:	bl	12c98 <table_get_col_ptr@@Base>
   14a34:	ldr	r0, [r0, #4]
   14a38:	mvn	r7, #0
   14a3c:	cmp	r0, #21
   14a40:	bne	14a88 <table_set_string@@Base+0x80>
   14a44:	mov	r0, r8
   14a48:	bl	11f6c <strlen@plt>
   14a4c:	ldr	r2, [r5]
   14a50:	add	r1, r0, #1
   14a54:	mov	r0, r2
   14a58:	bl	11f30 <realloc@plt>
   14a5c:	cmp	r0, #0
   14a60:	str	r0, [r5]
   14a64:	beq	14a88 <table_set_string@@Base+0x80>
   14a68:	mov	r1, r8
   14a6c:	bl	11f3c <strcpy@plt>
   14a70:	mov	r0, r6
   14a74:	mov	r1, r9
   14a78:	mov	r2, r4
   14a7c:	mov	r3, #1
   14a80:	bl	12bb0 <table_notify@@Base>
   14a84:	mov	r7, #0
   14a88:	mov	r0, r7
   14a8c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00014a90 <table_set_char@@Base>:
   14a90:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14a94:	add	fp, sp, #24
   14a98:	mov	r8, r3
   14a9c:	mov	r4, r2
   14aa0:	mov	r9, r1
   14aa4:	mov	r6, r0
   14aa8:	bl	14c0c <table_get_cell_ptr@@Base>
   14aac:	mov	r5, r0
   14ab0:	mov	r0, r6
   14ab4:	mov	r1, r4
   14ab8:	bl	12c98 <table_get_col_ptr@@Base>
   14abc:	ldr	r0, [r0, #4]
   14ac0:	mvn	r7, #0
   14ac4:	cmp	r0, #19
   14ac8:	bne	14b08 <table_set_char@@Base+0x78>
   14acc:	ldr	r0, [r5]
   14ad0:	cmp	r0, #0
   14ad4:	bne	14aec <table_set_char@@Base+0x5c>
   14ad8:	mov	r0, #1
   14adc:	bl	11f48 <malloc@plt>
   14ae0:	cmp	r0, #0
   14ae4:	str	r0, [r5]
   14ae8:	beq	14b08 <table_set_char@@Base+0x78>
   14aec:	strb	r8, [r0]
   14af0:	mov	r0, r6
   14af4:	mov	r1, r9
   14af8:	mov	r2, r4
   14afc:	mov	r3, #1
   14b00:	bl	12bb0 <table_notify@@Base>
   14b04:	mov	r7, #0
   14b08:	mov	r0, r7
   14b0c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00014b10 <table_set_uchar@@Base>:
   14b10:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14b14:	add	fp, sp, #24
   14b18:	mov	r8, r3
   14b1c:	mov	r4, r2
   14b20:	mov	r9, r1
   14b24:	mov	r6, r0
   14b28:	bl	14c0c <table_get_cell_ptr@@Base>
   14b2c:	mov	r5, r0
   14b30:	mov	r0, r6
   14b34:	mov	r1, r4
   14b38:	bl	12c98 <table_get_col_ptr@@Base>
   14b3c:	ldr	r0, [r0, #4]
   14b40:	mvn	r7, #0
   14b44:	cmp	r0, #20
   14b48:	bne	14b88 <table_set_uchar@@Base+0x78>
   14b4c:	ldr	r0, [r5]
   14b50:	cmp	r0, #0
   14b54:	bne	14b6c <table_set_uchar@@Base+0x5c>
   14b58:	mov	r0, #1
   14b5c:	bl	11f48 <malloc@plt>
   14b60:	cmp	r0, #0
   14b64:	str	r0, [r5]
   14b68:	beq	14b88 <table_set_uchar@@Base+0x78>
   14b6c:	strb	r8, [r0]
   14b70:	mov	r0, r6
   14b74:	mov	r1, r9
   14b78:	mov	r2, r4
   14b7c:	mov	r3, #1
   14b80:	bl	12bb0 <table_notify@@Base>
   14b84:	mov	r7, #0
   14b88:	mov	r0, r7
   14b8c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00014b90 <table_set_ptr@@Base>:
   14b90:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14b94:	add	fp, sp, #24
   14b98:	mov	r8, r3
   14b9c:	mov	r4, r2
   14ba0:	mov	r5, r1
   14ba4:	mov	r6, r0
   14ba8:	bl	14c0c <table_get_cell_ptr@@Base>
   14bac:	mov	r7, r0
   14bb0:	mov	r0, r6
   14bb4:	mov	r1, r4
   14bb8:	bl	12c98 <table_get_col_ptr@@Base>
   14bbc:	ldr	r1, [r0, #4]
   14bc0:	mvn	r0, #0
   14bc4:	cmp	r1, #23
   14bc8:	bne	14be8 <table_set_ptr@@Base+0x58>
   14bcc:	mov	r0, r6
   14bd0:	mov	r1, r5
   14bd4:	mov	r2, r4
   14bd8:	mov	r3, #1
   14bdc:	str	r8, [r7]
   14be0:	bl	12bb0 <table_notify@@Base>
   14be4:	mov	r0, #0
   14be8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00014bec <table_cell_init@@Base>:
   14bec:	push	{r4, sl, fp, lr}
   14bf0:	add	fp, sp, #8
   14bf4:	mov	r4, r2
   14bf8:	bl	13a30 <table_get_row_ptr@@Base>
   14bfc:	ldr	r0, [r0]
   14c00:	mov	r1, #0
   14c04:	str	r1, [r0, r4, lsl #2]
   14c08:	pop	{r4, sl, fp, pc}

00014c0c <table_get_cell_ptr@@Base>:
   14c0c:	push	{r4, sl, fp, lr}
   14c10:	add	fp, sp, #8
   14c14:	mov	r4, r2
   14c18:	bl	13a30 <table_get_row_ptr@@Base>
   14c1c:	ldr	r0, [r0]
   14c20:	add	r0, r0, r4, lsl #2
   14c24:	pop	{r4, sl, fp, pc}

00014c28 <table_cell_destroy@@Base>:
   14c28:	push	{r4, r5, r6, sl, fp, lr}
   14c2c:	add	fp, sp, #16
   14c30:	mov	r5, r1
   14c34:	mov	r1, r2
   14c38:	mov	r4, r2
   14c3c:	mov	r6, r0
   14c40:	bl	12d44 <table_get_column_data_type@@Base>
   14c44:	cmp	r0, #23
   14c48:	popeq	{r4, r5, r6, sl, fp, pc}
   14c4c:	mov	r0, r6
   14c50:	mov	r1, r5
   14c54:	bl	13a30 <table_get_row_ptr@@Base>
   14c58:	ldr	r0, [r0]
   14c5c:	ldr	r0, [r0, r4, lsl #2]
   14c60:	cmp	r0, #0
   14c64:	beq	14c70 <table_cell_destroy@@Base+0x48>
   14c68:	pop	{r4, r5, r6, sl, fp, lr}
   14c6c:	b	11f18 <free@plt>
   14c70:	pop	{r4, r5, r6, sl, fp, pc}

00014c74 <table_cell_to_buffer@@Base>:
   14c74:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14c78:	add	fp, sp, #24
   14c7c:	sub	sp, sp, #8
   14c80:	mov	r7, r1
   14c84:	mov	r1, r2
   14c88:	mov	r5, r3
   14c8c:	mov	r6, r2
   14c90:	mov	r4, r0
   14c94:	bl	12d44 <table_get_column_data_type@@Base>
   14c98:	cmp	r0, #23
   14c9c:	bhi	14f0c <table_cell_to_buffer@@Base+0x298>
   14ca0:	ldr	r8, [fp, #8]
   14ca4:	add	r1, pc, #0
   14ca8:	ldr	pc, [r1, r0, lsl #2]
   14cac:	andeq	r4, r1, ip, lsl #26
   14cb0:	andeq	r4, r1, r0, lsr #26
   14cb4:	andeq	r4, r1, r4, lsr sp
   14cb8:	andeq	r4, r1, r8, asr #26
   14cbc:	andeq	r4, r1, ip, asr sp
   14cc0:	andeq	r4, r1, r0, ror sp
   14cc4:	andeq	r4, r1, r4, lsl #27
   14cc8:	muleq	r1, r8, sp
   14ccc:			; <UNDEFINED> instruction: 0x00014db8
   14cd0:	andeq	r4, r1, ip, asr #27
   14cd4:	andeq	r4, r1, r0, ror #27
   14cd8:	andeq	r4, r1, r0, lsl #28
   14cdc:	andeq	r4, r1, r0, lsr #28
   14ce0:	andeq	r4, r1, r0, asr #28
   14ce4:	andeq	r4, r1, r0, ror #28
   14ce8:	andeq	r4, r1, r0, lsl #29
   14cec:	andeq	r4, r1, r0, lsr #29
   14cf0:	andeq	r4, r1, r4, asr #29
   14cf4:	andeq	r4, r1, r4, ror #29
   14cf8:	andeq	r4, r1, r8, lsl pc
   14cfc:	andeq	r4, r1, ip, lsr #30
   14d00:	andeq	r4, r1, ip, asr #30
   14d04:	andeq	r4, r1, ip, ror #30
   14d08:	andeq	r4, r1, r0, lsr #31
   14d0c:	mov	r0, r4
   14d10:	mov	r1, r7
   14d14:	mov	r2, r6
   14d18:	bl	137ec <table_get_int@@Base>
   14d1c:	b	14f7c <table_cell_to_buffer@@Base+0x308>
   14d20:	mov	r0, r4
   14d24:	mov	r1, r7
   14d28:	mov	r2, r6
   14d2c:	bl	13804 <table_get_uint@@Base>
   14d30:	b	14da8 <table_cell_to_buffer@@Base+0x134>
   14d34:	mov	r0, r4
   14d38:	mov	r1, r7
   14d3c:	mov	r2, r6
   14d40:	bl	1381c <table_get_int8@@Base>
   14d44:	b	14f7c <table_cell_to_buffer@@Base+0x308>
   14d48:	mov	r0, r4
   14d4c:	mov	r1, r7
   14d50:	mov	r2, r6
   14d54:	bl	13834 <table_get_uint8@@Base>
   14d58:	b	14da8 <table_cell_to_buffer@@Base+0x134>
   14d5c:	mov	r0, r4
   14d60:	mov	r1, r7
   14d64:	mov	r2, r6
   14d68:	bl	1384c <table_get_int16@@Base>
   14d6c:	b	14f7c <table_cell_to_buffer@@Base+0x308>
   14d70:	mov	r0, r4
   14d74:	mov	r1, r7
   14d78:	mov	r2, r6
   14d7c:	bl	13864 <table_get_uint16@@Base>
   14d80:	b	14da8 <table_cell_to_buffer@@Base+0x134>
   14d84:	mov	r0, r4
   14d88:	mov	r1, r7
   14d8c:	mov	r2, r6
   14d90:	bl	1387c <table_get_int32@@Base>
   14d94:	b	14f7c <table_cell_to_buffer@@Base+0x308>
   14d98:	mov	r0, r4
   14d9c:	mov	r1, r7
   14da0:	mov	r2, r6
   14da4:	bl	13894 <table_get_uint32@@Base>
   14da8:	movw	r2, #22372	; 0x5764
   14dac:	mov	r3, r0
   14db0:	movt	r2, #1
   14db4:	b	14f88 <table_cell_to_buffer@@Base+0x314>
   14db8:	mov	r0, r4
   14dbc:	mov	r1, r7
   14dc0:	mov	r2, r6
   14dc4:	bl	138ac <table_get_int64@@Base>
   14dc8:	b	14e70 <table_cell_to_buffer@@Base+0x1fc>
   14dcc:	mov	r0, r4
   14dd0:	mov	r1, r7
   14dd4:	mov	r2, r6
   14dd8:	bl	138c4 <table_get_uint64@@Base>
   14ddc:	b	14e90 <table_cell_to_buffer@@Base+0x21c>
   14de0:	mov	r0, r4
   14de4:	mov	r1, r7
   14de8:	mov	r2, r6
   14dec:	bl	138dc <table_get_short@@Base>
   14df0:	movw	r2, #22385	; 0x5771
   14df4:	mov	r3, r0
   14df8:	movt	r2, #1
   14dfc:	b	14f88 <table_cell_to_buffer@@Base+0x314>
   14e00:	mov	r0, r4
   14e04:	mov	r1, r7
   14e08:	mov	r2, r6
   14e0c:	bl	138f4 <table_get_ushort@@Base>
   14e10:	movw	r2, #22389	; 0x5775
   14e14:	mov	r3, r0
   14e18:	movt	r2, #1
   14e1c:	b	14f88 <table_cell_to_buffer@@Base+0x314>
   14e20:	mov	r0, r4
   14e24:	mov	r1, r7
   14e28:	mov	r2, r6
   14e2c:	bl	1390c <table_get_long@@Base>
   14e30:	movw	r2, #22393	; 0x5779
   14e34:	mov	r3, r0
   14e38:	movt	r2, #1
   14e3c:	b	14f88 <table_cell_to_buffer@@Base+0x314>
   14e40:	mov	r0, r4
   14e44:	mov	r1, r7
   14e48:	mov	r2, r6
   14e4c:	bl	13924 <table_get_ulong@@Base>
   14e50:	movw	r2, #22397	; 0x577d
   14e54:	mov	r3, r0
   14e58:	movt	r2, #1
   14e5c:	b	14f88 <table_cell_to_buffer@@Base+0x314>
   14e60:	mov	r0, r4
   14e64:	mov	r1, r7
   14e68:	mov	r2, r6
   14e6c:	bl	1393c <table_get_llong@@Base>
   14e70:	movw	r2, #22375	; 0x5767
   14e74:	stm	sp, {r0, r1}
   14e78:	movt	r2, #1
   14e7c:	b	14f00 <table_cell_to_buffer@@Base+0x28c>
   14e80:	mov	r0, r4
   14e84:	mov	r1, r7
   14e88:	mov	r2, r6
   14e8c:	bl	13954 <table_get_ullong@@Base>
   14e90:	movw	r2, #22380	; 0x576c
   14e94:	stm	sp, {r0, r1}
   14e98:	movt	r2, #1
   14e9c:	b	14f00 <table_cell_to_buffer@@Base+0x28c>
   14ea0:	mov	r0, r4
   14ea4:	mov	r1, r7
   14ea8:	mov	r2, r6
   14eac:	bl	1396c <table_get_float@@Base>
   14eb0:	vcvt.f64.f32	d16, s0
   14eb4:	movw	r2, #22404	; 0x5784
   14eb8:	movt	r2, #1
   14ebc:	vstr	d16, [sp]
   14ec0:	b	14f00 <table_cell_to_buffer@@Base+0x28c>
   14ec4:	mov	r0, r4
   14ec8:	mov	r1, r7
   14ecc:	mov	r2, r6
   14ed0:	bl	13984 <table_get_double@@Base>
   14ed4:	movw	r2, #22407	; 0x5787
   14ed8:	vstr	d0, [sp]
   14edc:	movt	r2, #1
   14ee0:	b	14f00 <table_cell_to_buffer@@Base+0x28c>
   14ee4:	mov	r0, r4
   14ee8:	mov	r1, r7
   14eec:	mov	r2, r6
   14ef0:	bl	1399c <table_get_ldouble@@Base>
   14ef4:	movw	r2, #22411	; 0x578b
   14ef8:	vstr	d0, [sp]
   14efc:	movt	r2, #1
   14f00:	mov	r0, r5
   14f04:	mov	r1, r8
   14f08:	bl	11f84 <snprintf@plt>
   14f0c:	mov	r0, #0
   14f10:	sub	sp, fp, #24
   14f14:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   14f18:	mov	r0, r4
   14f1c:	mov	r1, r7
   14f20:	mov	r2, r6
   14f24:	bl	139b4 <table_get_char@@Base>
   14f28:	b	14f3c <table_cell_to_buffer@@Base+0x2c8>
   14f2c:	mov	r0, r4
   14f30:	mov	r1, r7
   14f34:	mov	r2, r6
   14f38:	bl	139cc <table_get_uchar@@Base>
   14f3c:	movw	r2, #22415	; 0x578f
   14f40:	mov	r3, r0
   14f44:	movt	r2, #1
   14f48:	b	14f88 <table_cell_to_buffer@@Base+0x314>
   14f4c:	mov	r0, r4
   14f50:	mov	r1, r7
   14f54:	mov	r2, r6
   14f58:	bl	139e4 <table_get_string@@Base>
   14f5c:	movw	r2, #22401	; 0x5781
   14f60:	mov	r3, r0
   14f64:	movt	r2, #1
   14f68:	b	14f88 <table_cell_to_buffer@@Base+0x314>
   14f6c:	mov	r0, r4
   14f70:	mov	r1, r7
   14f74:	mov	r2, r6
   14f78:	bl	137d4 <table_get_bool@@Base>
   14f7c:	movw	r2, #22272	; 0x5700
   14f80:	mov	r3, r0
   14f84:	movt	r2, #1
   14f88:	mov	r0, r5
   14f8c:	mov	r1, r8
   14f90:	bl	11f84 <snprintf@plt>
   14f94:	mov	r0, #0
   14f98:	sub	sp, fp, #24
   14f9c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   14fa0:	mov	r0, r4
   14fa4:	mov	r1, r7
   14fa8:	mov	r2, r6
   14fac:	bl	139f8 <table_get_ptr@@Base>
   14fb0:	movw	r2, #22418	; 0x5792
   14fb4:	mov	r3, r0
   14fb8:	movt	r2, #1
   14fbc:	b	14f88 <table_cell_to_buffer@@Base+0x314>

00014fc0 <table_cell_from_buffer@@Base>:
   14fc0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14fc4:	add	fp, sp, #24
   14fc8:	sub	sp, sp, #264	; 0x108
   14fcc:	mov	r5, r1
   14fd0:	mov	r1, r2
   14fd4:	mov	r7, r3
   14fd8:	mov	r4, r2
   14fdc:	mov	r6, r0
   14fe0:	bl	12d44 <table_get_column_data_type@@Base>
   14fe4:	cmp	r0, #23
   14fe8:	bhi	15618 <table_cell_from_buffer@@Base+0x658>
   14fec:	add	r1, pc, #0
   14ff0:	ldr	pc, [r1, r0, lsl #2]
   14ff4:	andeq	r5, r1, r4, asr r0
   14ff8:	muleq	r1, r0, r0
   14ffc:	andeq	r5, r1, ip, asr #1
   15000:	andeq	r5, r1, r8, lsl #2
   15004:	andeq	r5, r1, r4, asr #2
   15008:	andeq	r5, r1, r0, lsl #3
   1500c:			; <UNDEFINED> instruction: 0x000151bc
   15010:	strdeq	r5, [r1], -r8
   15014:	andeq	r5, r1, r4, lsr r2
   15018:	andeq	r5, r1, r8, ror r2
   1501c:			; <UNDEFINED> instruction: 0x000152bc
   15020:	strdeq	r5, [r1], -r8
   15024:	andeq	r5, r1, r4, lsr r3
   15028:	andeq	r5, r1, r0, ror r3
   1502c:	andeq	r5, r1, ip, lsr #7
   15030:	strdeq	r5, [r1], -r0
   15034:	andeq	r5, r1, r4, lsr r4
   15038:	andeq	r5, r1, r0, ror r4
   1503c:	andeq	r5, r1, ip, lsr #9
   15040:	andeq	r5, r1, r8, ror #9
   15044:	andeq	r5, r1, r4, lsr #10
   15048:	andeq	r5, r1, r0, ror #10
   1504c:	muleq	r1, ip, r5
   15050:	andeq	r5, r1, r0, ror #11
   15054:	movw	r1, #22272	; 0x5700
   15058:	add	r2, sp, #8
   1505c:	mov	r0, r7
   15060:	movt	r1, #1
   15064:	bl	11f90 <__isoc99_sscanf@plt>
   15068:	mov	r1, r0
   1506c:	mvn	r0, #0
   15070:	cmp	r1, #1
   15074:	bne	1561c <table_cell_from_buffer@@Base+0x65c>
   15078:	ldr	r3, [sp, #8]
   1507c:	mov	r0, r6
   15080:	mov	r1, r5
   15084:	mov	r2, r4
   15088:	bl	1404c <table_set_int@@Base>
   1508c:	b	15618 <table_cell_from_buffer@@Base+0x658>
   15090:	movw	r1, #22372	; 0x5764
   15094:	add	r2, sp, #8
   15098:	mov	r0, r7
   1509c:	movt	r1, #1
   150a0:	bl	11f90 <__isoc99_sscanf@plt>
   150a4:	mov	r1, r0
   150a8:	mvn	r0, #0
   150ac:	cmp	r1, #1
   150b0:	bne	1561c <table_cell_from_buffer@@Base+0x65c>
   150b4:	ldr	r3, [sp, #8]
   150b8:	mov	r0, r6
   150bc:	mov	r1, r5
   150c0:	mov	r2, r4
   150c4:	bl	140cc <table_set_uint@@Base>
   150c8:	b	15618 <table_cell_from_buffer@@Base+0x658>
   150cc:	movw	r1, #22421	; 0x5795
   150d0:	add	r2, sp, #8
   150d4:	mov	r0, r7
   150d8:	movt	r1, #1
   150dc:	bl	11f90 <__isoc99_sscanf@plt>
   150e0:	mov	r1, r0
   150e4:	mvn	r0, #0
   150e8:	cmp	r1, #1
   150ec:	bne	1561c <table_cell_from_buffer@@Base+0x65c>
   150f0:	ldrsb	r3, [sp, #8]
   150f4:	mov	r0, r6
   150f8:	mov	r1, r5
   150fc:	mov	r2, r4
   15100:	bl	1414c <table_set_int8@@Base>
   15104:	b	15618 <table_cell_from_buffer@@Base+0x658>
   15108:	movw	r1, #22426	; 0x579a
   1510c:	add	r2, sp, #8
   15110:	mov	r0, r7
   15114:	movt	r1, #1
   15118:	bl	11f90 <__isoc99_sscanf@plt>
   1511c:	mov	r1, r0
   15120:	mvn	r0, #0
   15124:	cmp	r1, #1
   15128:	bne	1561c <table_cell_from_buffer@@Base+0x65c>
   1512c:	ldrb	r3, [sp, #8]
   15130:	mov	r0, r6
   15134:	mov	r1, r5
   15138:	mov	r2, r4
   1513c:	bl	141cc <table_set_uint8@@Base>
   15140:	b	15618 <table_cell_from_buffer@@Base+0x658>
   15144:	movw	r1, #22385	; 0x5771
   15148:	add	r2, sp, #8
   1514c:	mov	r0, r7
   15150:	movt	r1, #1
   15154:	bl	11f90 <__isoc99_sscanf@plt>
   15158:	mov	r1, r0
   1515c:	mvn	r0, #0
   15160:	cmp	r1, #1
   15164:	bne	1561c <table_cell_from_buffer@@Base+0x65c>
   15168:	ldrsh	r3, [sp, #8]
   1516c:	mov	r0, r6
   15170:	mov	r1, r5
   15174:	mov	r2, r4
   15178:	bl	1424c <table_set_int16@@Base>
   1517c:	b	15618 <table_cell_from_buffer@@Base+0x658>
   15180:	movw	r1, #22389	; 0x5775
   15184:	add	r2, sp, #8
   15188:	mov	r0, r7
   1518c:	movt	r1, #1
   15190:	bl	11f90 <__isoc99_sscanf@plt>
   15194:	mov	r1, r0
   15198:	mvn	r0, #0
   1519c:	cmp	r1, #1
   151a0:	bne	1561c <table_cell_from_buffer@@Base+0x65c>
   151a4:	ldrh	r3, [sp, #8]
   151a8:	mov	r0, r6
   151ac:	mov	r1, r5
   151b0:	mov	r2, r4
   151b4:	bl	142cc <table_set_uint16@@Base>
   151b8:	b	15618 <table_cell_from_buffer@@Base+0x658>
   151bc:	movw	r1, #22272	; 0x5700
   151c0:	add	r2, sp, #8
   151c4:	mov	r0, r7
   151c8:	movt	r1, #1
   151cc:	bl	11f90 <__isoc99_sscanf@plt>
   151d0:	mov	r1, r0
   151d4:	mvn	r0, #0
   151d8:	cmp	r1, #1
   151dc:	bne	1561c <table_cell_from_buffer@@Base+0x65c>
   151e0:	ldr	r3, [sp, #8]
   151e4:	mov	r0, r6
   151e8:	mov	r1, r5
   151ec:	mov	r2, r4
   151f0:	bl	1434c <table_set_int32@@Base>
   151f4:	b	15618 <table_cell_from_buffer@@Base+0x658>
   151f8:	movw	r1, #22372	; 0x5764
   151fc:	add	r2, sp, #8
   15200:	mov	r0, r7
   15204:	movt	r1, #1
   15208:	bl	11f90 <__isoc99_sscanf@plt>
   1520c:	mov	r1, r0
   15210:	mvn	r0, #0
   15214:	cmp	r1, #1
   15218:	bne	1561c <table_cell_from_buffer@@Base+0x65c>
   1521c:	ldr	r3, [sp, #8]
   15220:	mov	r0, r6
   15224:	mov	r1, r5
   15228:	mov	r2, r4
   1522c:	bl	143cc <table_set_uint32@@Base>
   15230:	b	15618 <table_cell_from_buffer@@Base+0x658>
   15234:	movw	r1, #22375	; 0x5767
   15238:	add	r2, sp, #8
   1523c:	mov	r0, r7
   15240:	movt	r1, #1
   15244:	bl	11f90 <__isoc99_sscanf@plt>
   15248:	mov	r1, r0
   1524c:	mvn	r0, #0
   15250:	cmp	r1, #1
   15254:	bne	1561c <table_cell_from_buffer@@Base+0x65c>
   15258:	ldr	r0, [sp, #8]
   1525c:	ldr	r1, [sp, #12]
   15260:	mov	r2, r4
   15264:	stm	sp, {r0, r1}
   15268:	mov	r0, r6
   1526c:	mov	r1, r5
   15270:	bl	1444c <table_set_int64@@Base>
   15274:	b	15618 <table_cell_from_buffer@@Base+0x658>
   15278:	movw	r1, #22380	; 0x576c
   1527c:	add	r2, sp, #8
   15280:	mov	r0, r7
   15284:	movt	r1, #1
   15288:	bl	11f90 <__isoc99_sscanf@plt>
   1528c:	mov	r1, r0
   15290:	mvn	r0, #0
   15294:	cmp	r1, #1
   15298:	bne	1561c <table_cell_from_buffer@@Base+0x65c>
   1529c:	ldr	r0, [sp, #8]
   152a0:	ldr	r1, [sp, #12]
   152a4:	mov	r2, r4
   152a8:	stm	sp, {r0, r1}
   152ac:	mov	r0, r6
   152b0:	mov	r1, r5
   152b4:	bl	144d4 <table_set_uint64@@Base>
   152b8:	b	15618 <table_cell_from_buffer@@Base+0x658>
   152bc:	movw	r1, #22385	; 0x5771
   152c0:	add	r2, sp, #8
   152c4:	mov	r0, r7
   152c8:	movt	r1, #1
   152cc:	bl	11f90 <__isoc99_sscanf@plt>
   152d0:	mov	r1, r0
   152d4:	mvn	r0, #0
   152d8:	cmp	r1, #1
   152dc:	bne	1561c <table_cell_from_buffer@@Base+0x65c>
   152e0:	ldrsh	r3, [sp, #8]
   152e4:	mov	r0, r6
   152e8:	mov	r1, r5
   152ec:	mov	r2, r4
   152f0:	bl	1455c <table_set_short@@Base>
   152f4:	b	15618 <table_cell_from_buffer@@Base+0x658>
   152f8:	movw	r1, #22389	; 0x5775
   152fc:	add	r2, sp, #8
   15300:	mov	r0, r7
   15304:	movt	r1, #1
   15308:	bl	11f90 <__isoc99_sscanf@plt>
   1530c:	mov	r1, r0
   15310:	mvn	r0, #0
   15314:	cmp	r1, #1
   15318:	bne	1561c <table_cell_from_buffer@@Base+0x65c>
   1531c:	ldrh	r3, [sp, #8]
   15320:	mov	r0, r6
   15324:	mov	r1, r5
   15328:	mov	r2, r4
   1532c:	bl	145dc <table_set_ushort@@Base>
   15330:	b	15618 <table_cell_from_buffer@@Base+0x658>
   15334:	movw	r1, #22393	; 0x5779
   15338:	add	r2, sp, #8
   1533c:	mov	r0, r7
   15340:	movt	r1, #1
   15344:	bl	11f90 <__isoc99_sscanf@plt>
   15348:	mov	r1, r0
   1534c:	mvn	r0, #0
   15350:	cmp	r1, #1
   15354:	bne	1561c <table_cell_from_buffer@@Base+0x65c>
   15358:	ldr	r3, [sp, #8]
   1535c:	mov	r0, r6
   15360:	mov	r1, r5
   15364:	mov	r2, r4
   15368:	bl	1465c <table_set_long@@Base>
   1536c:	b	15618 <table_cell_from_buffer@@Base+0x658>
   15370:	movw	r1, #22397	; 0x577d
   15374:	add	r2, sp, #8
   15378:	mov	r0, r7
   1537c:	movt	r1, #1
   15380:	bl	11f90 <__isoc99_sscanf@plt>
   15384:	mov	r1, r0
   15388:	mvn	r0, #0
   1538c:	cmp	r1, #1
   15390:	bne	1561c <table_cell_from_buffer@@Base+0x65c>
   15394:	ldr	r3, [sp, #8]
   15398:	mov	r0, r6
   1539c:	mov	r1, r5
   153a0:	mov	r2, r4
   153a4:	bl	146dc <table_set_ulong@@Base>
   153a8:	b	15618 <table_cell_from_buffer@@Base+0x658>
   153ac:	movw	r1, #22375	; 0x5767
   153b0:	add	r2, sp, #8
   153b4:	mov	r0, r7
   153b8:	movt	r1, #1
   153bc:	bl	11f90 <__isoc99_sscanf@plt>
   153c0:	mov	r1, r0
   153c4:	mvn	r0, #0
   153c8:	cmp	r1, #1
   153cc:	bne	1561c <table_cell_from_buffer@@Base+0x65c>
   153d0:	ldr	r0, [sp, #8]
   153d4:	ldr	r1, [sp, #12]
   153d8:	mov	r2, r4
   153dc:	stm	sp, {r0, r1}
   153e0:	mov	r0, r6
   153e4:	mov	r1, r5
   153e8:	bl	1475c <table_set_llong@@Base>
   153ec:	b	15618 <table_cell_from_buffer@@Base+0x658>
   153f0:	movw	r1, #22380	; 0x576c
   153f4:	add	r2, sp, #8
   153f8:	mov	r0, r7
   153fc:	movt	r1, #1
   15400:	bl	11f90 <__isoc99_sscanf@plt>
   15404:	mov	r1, r0
   15408:	mvn	r0, #0
   1540c:	cmp	r1, #1
   15410:	bne	1561c <table_cell_from_buffer@@Base+0x65c>
   15414:	ldr	r0, [sp, #8]
   15418:	ldr	r1, [sp, #12]
   1541c:	mov	r2, r4
   15420:	stm	sp, {r0, r1}
   15424:	mov	r0, r6
   15428:	mov	r1, r5
   1542c:	bl	147e4 <table_set_ullong@@Base>
   15430:	b	15618 <table_cell_from_buffer@@Base+0x658>
   15434:	movw	r1, #22404	; 0x5784
   15438:	add	r2, sp, #8
   1543c:	mov	r0, r7
   15440:	movt	r1, #1
   15444:	bl	11f90 <__isoc99_sscanf@plt>
   15448:	mov	r1, r0
   1544c:	mvn	r0, #0
   15450:	cmp	r1, #1
   15454:	bne	1561c <table_cell_from_buffer@@Base+0x65c>
   15458:	vldr	s0, [sp, #8]
   1545c:	mov	r0, r6
   15460:	mov	r1, r5
   15464:	mov	r2, r4
   15468:	bl	1486c <table_set_float@@Base>
   1546c:	b	15618 <table_cell_from_buffer@@Base+0x658>
   15470:	movw	r1, #22407	; 0x5787
   15474:	add	r2, sp, #8
   15478:	mov	r0, r7
   1547c:	movt	r1, #1
   15480:	bl	11f90 <__isoc99_sscanf@plt>
   15484:	mov	r1, r0
   15488:	mvn	r0, #0
   1548c:	cmp	r1, #1
   15490:	bne	1561c <table_cell_from_buffer@@Base+0x65c>
   15494:	vldr	d0, [sp, #8]
   15498:	mov	r0, r6
   1549c:	mov	r1, r5
   154a0:	mov	r2, r4
   154a4:	bl	148f8 <table_set_double@@Base>
   154a8:	b	15618 <table_cell_from_buffer@@Base+0x658>
   154ac:	movw	r1, #22411	; 0x578b
   154b0:	add	r2, sp, #8
   154b4:	mov	r0, r7
   154b8:	movt	r1, #1
   154bc:	bl	11f90 <__isoc99_sscanf@plt>
   154c0:	mov	r1, r0
   154c4:	mvn	r0, #0
   154c8:	cmp	r1, #1
   154cc:	bne	1561c <table_cell_from_buffer@@Base+0x65c>
   154d0:	vldr	d0, [sp, #8]
   154d4:	mov	r0, r6
   154d8:	mov	r1, r5
   154dc:	mov	r2, r4
   154e0:	bl	14980 <table_set_ldouble@@Base>
   154e4:	b	15618 <table_cell_from_buffer@@Base+0x658>
   154e8:	movw	r1, #22415	; 0x578f
   154ec:	add	r2, sp, #8
   154f0:	mov	r0, r7
   154f4:	movt	r1, #1
   154f8:	bl	11f90 <__isoc99_sscanf@plt>
   154fc:	mov	r1, r0
   15500:	mvn	r0, #0
   15504:	cmp	r1, #1
   15508:	bne	1561c <table_cell_from_buffer@@Base+0x65c>
   1550c:	ldrb	r3, [sp, #8]
   15510:	mov	r0, r6
   15514:	mov	r1, r5
   15518:	mov	r2, r4
   1551c:	bl	14a90 <table_set_char@@Base>
   15520:	b	15618 <table_cell_from_buffer@@Base+0x658>
   15524:	movw	r1, #22415	; 0x578f
   15528:	add	r2, sp, #8
   1552c:	mov	r0, r7
   15530:	movt	r1, #1
   15534:	bl	11f90 <__isoc99_sscanf@plt>
   15538:	mov	r1, r0
   1553c:	mvn	r0, #0
   15540:	cmp	r1, #1
   15544:	bne	1561c <table_cell_from_buffer@@Base+0x65c>
   15548:	ldrb	r3, [sp, #8]
   1554c:	mov	r0, r6
   15550:	mov	r1, r5
   15554:	mov	r2, r4
   15558:	bl	14b10 <table_set_uchar@@Base>
   1555c:	b	15618 <table_cell_from_buffer@@Base+0x658>
   15560:	movw	r1, #22401	; 0x5781
   15564:	add	r2, sp, #8
   15568:	mov	r0, r7
   1556c:	movt	r1, #1
   15570:	bl	11f90 <__isoc99_sscanf@plt>
   15574:	mov	r1, r0
   15578:	mvn	r0, #0
   1557c:	cmp	r1, #1
   15580:	bne	1561c <table_cell_from_buffer@@Base+0x65c>
   15584:	add	r3, sp, #8
   15588:	mov	r0, r6
   1558c:	mov	r1, r5
   15590:	mov	r2, r4
   15594:	bl	14a08 <table_set_string@@Base>
   15598:	b	15618 <table_cell_from_buffer@@Base+0x658>
   1559c:	movw	r1, #22272	; 0x5700
   155a0:	add	r2, sp, #8
   155a4:	mov	r0, r7
   155a8:	movt	r1, #1
   155ac:	bl	11f90 <__isoc99_sscanf@plt>
   155b0:	mov	r1, r0
   155b4:	mvn	r0, #0
   155b8:	cmp	r1, #1
   155bc:	bne	1561c <table_cell_from_buffer@@Base+0x65c>
   155c0:	ldr	r3, [sp, #8]
   155c4:	mov	r0, r6
   155c8:	mov	r1, r5
   155cc:	mov	r2, r4
   155d0:	cmp	r3, #0
   155d4:	movwne	r3, #1
   155d8:	bl	13fcc <table_set_bool@@Base>
   155dc:	b	15618 <table_cell_from_buffer@@Base+0x658>
   155e0:	movw	r1, #22418	; 0x5792
   155e4:	add	r2, sp, #8
   155e8:	mov	r0, r7
   155ec:	movt	r1, #1
   155f0:	bl	11f90 <__isoc99_sscanf@plt>
   155f4:	mov	r1, r0
   155f8:	mvn	r0, #0
   155fc:	cmp	r1, #1
   15600:	bne	1561c <table_cell_from_buffer@@Base+0x65c>
   15604:	ldr	r3, [sp, #8]
   15608:	mov	r0, r6
   1560c:	mov	r1, r5
   15610:	mov	r2, r4
   15614:	bl	14b90 <table_set_ptr@@Base>
   15618:	mov	r0, #0
   1561c:	sub	sp, fp, #24
   15620:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00015624 <table_cell_nullify@@Base>:
   15624:	push	{r4, r5, fp, lr}
   15628:	add	fp, sp, #8
   1562c:	mov	r4, r2
   15630:	bl	13a30 <table_get_row_ptr@@Base>
   15634:	ldr	r5, [r0]
   15638:	ldr	r0, [r5, r4, lsl #2]
   1563c:	cmp	r0, #0
   15640:	beq	15650 <table_cell_nullify@@Base+0x2c>
   15644:	bl	11f18 <free@plt>
   15648:	mov	r0, #0
   1564c:	str	r0, [r5, r4, lsl #2]
   15650:	mov	r0, #0
   15654:	pop	{r4, r5, fp, pc}

00015658 <__libc_csu_init@@Base>:
   15658:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1565c:	mov	r7, r0
   15660:	ldr	r6, [pc, #72]	; 156b0 <__libc_csu_init@@Base+0x58>
   15664:	ldr	r5, [pc, #72]	; 156b4 <__libc_csu_init@@Base+0x5c>
   15668:	add	r6, pc, r6
   1566c:	add	r5, pc, r5
   15670:	sub	r6, r6, r5
   15674:	mov	r8, r1
   15678:	mov	r9, r2
   1567c:	bl	11ee0 <strcmp@plt-0x20>
   15680:	asrs	r6, r6, #2
   15684:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   15688:	mov	r4, #0
   1568c:	add	r4, r4, #1
   15690:	ldr	r3, [r5], #4
   15694:	mov	r2, r9
   15698:	mov	r1, r8
   1569c:	mov	r0, r7
   156a0:	blx	r3
   156a4:	cmp	r6, r4
   156a8:	bne	1568c <__libc_csu_init@@Base+0x34>
   156ac:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   156b0:	muleq	r1, ip, r8
   156b4:	muleq	r1, r4, r8

000156b8 <__libc_csu_fini@@Base>:
   156b8:	bx	lr

Disassembly of section .fini:

000156bc <.fini>:
   156bc:	push	{r3, lr}
   156c0:	pop	{r3, pc}
