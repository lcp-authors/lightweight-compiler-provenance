
../repos/findutils/find/find:     file format elf32-littlearm


Disassembly of section .init:

0001240c <.init>:
   1240c:	push	{r3, lr}
   12410:	bl	12c04 <__assert_fail@plt+0x4c>
   12414:	pop	{r3, pc}

Disassembly of section .plt:

00012418 <pthread_mutex_unlock@plt-0x14>:
   12418:	push	{lr}		; (str lr, [sp, #-4]!)
   1241c:	ldr	lr, [pc, #4]	; 12428 <pthread_mutex_unlock@plt-0x4>
   12420:	add	lr, pc, lr
   12424:	ldr	pc, [lr, #8]!
   12428:	ldrdeq	ip, [r7], -r8

0001242c <pthread_mutex_unlock@plt>:
   1242c:	add	ip, pc, #0, 12
   12430:	add	ip, ip, #124, 20	; 0x7c000
   12434:	ldr	pc, [ip, #3032]!	; 0xbd8

00012438 <fdopen@plt>:
   12438:	add	ip, pc, #0, 12
   1243c:	add	ip, ip, #124, 20	; 0x7c000
   12440:	ldr	pc, [ip, #3024]!	; 0xbd0

00012444 <fstatfs64@plt>:
   12444:	add	ip, pc, #0, 12
   12448:	add	ip, ip, #124, 20	; 0x7c000
   1244c:	ldr	pc, [ip, #3016]!	; 0xbc8

00012450 <calloc@plt>:
   12450:	add	ip, pc, #0, 12
   12454:	add	ip, ip, #124, 20	; 0x7c000
   12458:	ldr	pc, [ip, #3008]!	; 0xbc0

0001245c <endgrent@plt>:
   1245c:	add	ip, pc, #0, 12
   12460:	add	ip, ip, #124, 20	; 0x7c000
   12464:	ldr	pc, [ip, #3000]!	; 0xbb8

00012468 <wctype@plt>:
   12468:	add	ip, pc, #0, 12
   1246c:	add	ip, ip, #124, 20	; 0x7c000
   12470:	ldr	pc, [ip, #2992]!	; 0xbb0

00012474 <gnu_dev_major@plt>:
   12474:	add	ip, pc, #0, 12
   12478:	add	ip, ip, #124, 20	; 0x7c000
   1247c:	ldr	pc, [ip, #2984]!	; 0xba8

00012480 <raise@plt>:
   12480:	add	ip, pc, #0, 12
   12484:	add	ip, ip, #124, 20	; 0x7c000
   12488:	ldr	pc, [ip, #2976]!	; 0xba0

0001248c <wcrtomb@plt>:
   1248c:	add	ip, pc, #0, 12
   12490:	add	ip, ip, #124, 20	; 0x7c000
   12494:	ldr	pc, [ip, #2968]!	; 0xb98

00012498 <gmtime_r@plt>:
   12498:	add	ip, pc, #0, 12
   1249c:	add	ip, ip, #124, 20	; 0x7c000
   124a0:	ldr	pc, [ip, #2960]!	; 0xb90

000124a4 <getpwnam@plt>:
   124a4:	add	ip, pc, #0, 12
   124a8:	add	ip, ip, #124, 20	; 0x7c000
   124ac:	ldr	pc, [ip, #2952]!	; 0xb88

000124b0 <is_selinux_enabled@plt>:
   124b0:	add	ip, pc, #0, 12
   124b4:	add	ip, ip, #124, 20	; 0x7c000
   124b8:	ldr	pc, [ip, #2944]!	; 0xb80

000124bc <iswctype@plt>:
   124bc:	add	ip, pc, #0, 12
   124c0:	add	ip, ip, #124, 20	; 0x7c000
   124c4:	ldr	pc, [ip, #2936]!	; 0xb78

000124c8 <strcmp@plt>:
   124c8:	add	ip, pc, #0, 12
   124cc:	add	ip, ip, #124, 20	; 0x7c000
   124d0:	ldr	pc, [ip, #2928]!	; 0xb70

000124d4 <strtol@plt>:
   124d4:	add	ip, pc, #0, 12
   124d8:	add	ip, ip, #124, 20	; 0x7c000
   124dc:	ldr	pc, [ip, #2920]!	; 0xb68

000124e0 <getpwuid@plt>:
   124e0:	add	ip, pc, #0, 12
   124e4:	add	ip, ip, #124, 20	; 0x7c000
   124e8:	ldr	pc, [ip, #2912]!	; 0xb60

000124ec <gnu_dev_makedev@plt>:
   124ec:	add	ip, pc, #0, 12
   124f0:	add	ip, ip, #124, 20	; 0x7c000
   124f4:	ldr	pc, [ip, #2904]!	; 0xb58

000124f8 <printf@plt>:
   124f8:	add	ip, pc, #0, 12
   124fc:	add	ip, ip, #124, 20	; 0x7c000
   12500:	ldr	pc, [ip, #2896]!	; 0xb50

00012504 <gnu_dev_minor@plt>:
   12504:	add	ip, pc, #0, 12
   12508:	add	ip, ip, #124, 20	; 0x7c000
   1250c:	ldr	pc, [ip, #2888]!	; 0xb48

00012510 <pthread_mutex_destroy@plt>:
   12510:	add	ip, pc, #0, 12
   12514:	add	ip, ip, #124, 20	; 0x7c000
   12518:	ldr	pc, [ip, #2880]!	; 0xb40

0001251c <mktime@plt>:
   1251c:	add	ip, pc, #0, 12
   12520:	add	ip, ip, #124, 20	; 0x7c000
   12524:	ldr	pc, [ip, #2872]!	; 0xb38

00012528 <fflush@plt>:
   12528:	add	ip, pc, #0, 12
   1252c:	add	ip, ip, #124, 20	; 0x7c000
   12530:	ldr	pc, [ip, #2864]!	; 0xb30

00012534 <unlinkat@plt>:
   12534:	add	ip, pc, #0, 12
   12538:	add	ip, ip, #124, 20	; 0x7c000
   1253c:	ldr	pc, [ip, #2856]!	; 0xb28

00012540 <wcwidth@plt>:
   12540:	add	ip, pc, #0, 12
   12544:	add	ip, ip, #124, 20	; 0x7c000
   12548:	ldr	pc, [ip, #2848]!	; 0xb20

0001254c <lsetfilecon@plt>:
   1254c:	add	ip, pc, #0, 12
   12550:	add	ip, ip, #124, 20	; 0x7c000
   12554:	ldr	pc, [ip, #2840]!	; 0xb18

00012558 <memmove@plt>:
   12558:	add	ip, pc, #0, 12
   1255c:	add	ip, ip, #124, 20	; 0x7c000
   12560:	ldr	pc, [ip, #2832]!	; 0xb10

00012564 <free@plt>:
   12564:	add	ip, pc, #0, 12
   12568:	add	ip, ip, #124, 20	; 0x7c000
   1256c:	ldr	pc, [ip, #2824]!	; 0xb08

00012570 <pthread_mutex_lock@plt>:
   12570:	add	ip, pc, #0, 12
   12574:	add	ip, ip, #124, 20	; 0x7c000
   12578:	ldr	pc, [ip, #2816]!	; 0xb00

0001257c <faccessat@plt>:
   1257c:	add	ip, pc, #0, 12
   12580:	add	ip, ip, #124, 20	; 0x7c000
   12584:	ldr	pc, [ip, #2808]!	; 0xaf8

00012588 <ferror@plt>:
   12588:	add	ip, pc, #0, 12
   1258c:	add	ip, ip, #124, 20	; 0x7c000
   12590:	ldr	pc, [ip, #2800]!	; 0xaf0

00012594 <thrd_exit@plt>:
   12594:	add	ip, pc, #0, 12
   12598:	add	ip, ip, #124, 20	; 0x7c000
   1259c:	ldr	pc, [ip, #2792]!	; 0xae8

000125a0 <strndup@plt>:
   125a0:	add	ip, pc, #0, 12
   125a4:	add	ip, ip, #124, 20	; 0x7c000
   125a8:	ldr	pc, [ip, #2784]!	; 0xae0

000125ac <clock_gettime@plt>:
   125ac:	add	ip, pc, #0, 12
   125b0:	add	ip, ip, #124, 20	; 0x7c000
   125b4:	ldr	pc, [ip, #2776]!	; 0xad8

000125b8 <_exit@plt>:
   125b8:	add	ip, pc, #0, 12
   125bc:	add	ip, ip, #124, 20	; 0x7c000
   125c0:	ldr	pc, [ip, #2768]!	; 0xad0

000125c4 <memcpy@plt>:
   125c4:	add	ip, pc, #0, 12
   125c8:	add	ip, ip, #124, 20	; 0x7c000
   125cc:	ldr	pc, [ip, #2760]!	; 0xac8

000125d0 <execvp@plt>:
   125d0:	add	ip, pc, #0, 12
   125d4:	add	ip, ip, #124, 20	; 0x7c000
   125d8:	ldr	pc, [ip, #2752]!	; 0xac0

000125dc <tolower@plt>:
   125dc:	add	ip, pc, #0, 12
   125e0:	add	ip, ip, #124, 20	; 0x7c000
   125e4:	ldr	pc, [ip, #2744]!	; 0xab8

000125e8 <pthread_mutex_init@plt>:
   125e8:	add	ip, pc, #0, 12
   125ec:	add	ip, ip, #124, 20	; 0x7c000
   125f0:	ldr	pc, [ip, #2736]!	; 0xab0

000125f4 <towlower@plt>:
   125f4:	add	ip, pc, #0, 12
   125f8:	add	ip, ip, #124, 20	; 0x7c000
   125fc:	ldr	pc, [ip, #2728]!	; 0xaa8

00012600 <mbsinit@plt>:
   12600:	add	ip, pc, #0, 12
   12604:	add	ip, ip, #124, 20	; 0x7c000
   12608:	ldr	pc, [ip, #2720]!	; 0xaa0

0001260c <signal@plt>:
   1260c:	add	ip, pc, #0, 12
   12610:	add	ip, ip, #124, 20	; 0x7c000
   12614:	ldr	pc, [ip, #2712]!	; 0xa98

00012618 <time@plt>:
   12618:	add	ip, pc, #0, 12
   1261c:	add	ip, ip, #124, 20	; 0x7c000
   12620:	ldr	pc, [ip, #2704]!	; 0xa90

00012624 <memcmp@plt>:
   12624:	add	ip, pc, #0, 12
   12628:	add	ip, ip, #124, 20	; 0x7c000
   1262c:	ldr	pc, [ip, #2696]!	; 0xa88

00012630 <uname@plt>:
   12630:	add	ip, pc, #0, 12
   12634:	add	ip, ip, #124, 20	; 0x7c000
   12638:	ldr	pc, [ip, #2688]!	; 0xa80

0001263c <ctime@plt>:
   1263c:	add	ip, pc, #0, 12
   12640:	add	ip, ip, #124, 20	; 0x7c000
   12644:	ldr	pc, [ip, #2680]!	; 0xa78

00012648 <strdup@plt>:
   12648:	add	ip, pc, #0, 12
   1264c:	add	ip, ip, #124, 20	; 0x7c000
   12650:	ldr	pc, [ip, #2672]!	; 0xa70

00012654 <sysconf@plt>:
   12654:	add	ip, pc, #0, 12
   12658:	add	ip, ip, #124, 20	; 0x7c000
   1265c:	ldr	pc, [ip, #2664]!	; 0xa68

00012660 <getrlimit64@plt>:
   12660:	add	ip, pc, #0, 12
   12664:	add	ip, ip, #124, 20	; 0x7c000
   12668:	ldr	pc, [ip, #2656]!	; 0xa60

0001266c <realloc@plt>:
   1266c:	add	ip, pc, #0, 12
   12670:	add	ip, ip, #124, 20	; 0x7c000
   12674:	ldr	pc, [ip, #2648]!	; 0xa58

00012678 <fgetfilecon@plt>:
   12678:	add	ip, pc, #0, 12
   1267c:	add	ip, ip, #124, 20	; 0x7c000
   12680:	ldr	pc, [ip, #2640]!	; 0xa50

00012684 <localtime_r@plt>:
   12684:	add	ip, pc, #0, 12
   12688:	add	ip, ip, #124, 20	; 0x7c000
   1268c:	ldr	pc, [ip, #2632]!	; 0xa48

00012690 <textdomain@plt>:
   12690:	add	ip, pc, #0, 12
   12694:	add	ip, ip, #124, 20	; 0x7c000
   12698:	ldr	pc, [ip, #2624]!	; 0xa40

0001269c <iswcntrl@plt>:
   1269c:	add	ip, pc, #0, 12
   126a0:	add	ip, ip, #124, 20	; 0x7c000
   126a4:	ldr	pc, [ip, #2616]!	; 0xa38

000126a8 <chdir@plt>:
   126a8:	add	ip, pc, #0, 12
   126ac:	add	ip, ip, #124, 20	; 0x7c000
   126b0:	ldr	pc, [ip, #2608]!	; 0xa30

000126b4 <__fxstatat64@plt>:
   126b4:	add	ip, pc, #0, 12
   126b8:	add	ip, ip, #124, 20	; 0x7c000
   126bc:	ldr	pc, [ip, #2600]!	; 0xa28

000126c0 <iswprint@plt>:
   126c0:	add	ip, pc, #0, 12
   126c4:	add	ip, ip, #124, 20	; 0x7c000
   126c8:	ldr	pc, [ip, #2592]!	; 0xa20

000126cc <tzset@plt>:
   126cc:	add	ip, pc, #0, 12
   126d0:	add	ip, ip, #124, 20	; 0x7c000
   126d4:	ldr	pc, [ip, #2584]!	; 0xa18

000126d8 <poll@plt>:
   126d8:	add	ip, pc, #0, 12
   126dc:	add	ip, ip, #124, 20	; 0x7c000
   126e0:	ldr	pc, [ip, #2576]!	; 0xa10

000126e4 <__fxstat64@plt>:
   126e4:	add	ip, pc, #0, 12
   126e8:	add	ip, ip, #124, 20	; 0x7c000
   126ec:	ldr	pc, [ip, #2568]!	; 0xa08

000126f0 <fwrite@plt>:
   126f0:	add	ip, pc, #0, 12
   126f4:	add	ip, ip, #124, 20	; 0x7c000
   126f8:	ldr	pc, [ip, #2560]!	; 0xa00

000126fc <strcat@plt>:
   126fc:	add	ip, pc, #0, 12
   12700:	add	ip, ip, #124, 20	; 0x7c000
   12704:	ldr	pc, [ip, #2552]!	; 0x9f8

00012708 <lseek64@plt>:
   12708:	add	ip, pc, #0, 12
   1270c:	add	ip, ip, #124, 20	; 0x7c000
   12710:	ldr	pc, [ip, #2544]!	; 0x9f0

00012714 <waitpid@plt>:
   12714:	add	ip, pc, #0, 12
   12718:	add	ip, ip, #124, 20	; 0x7c000
   1271c:	ldr	pc, [ip, #2536]!	; 0x9e8

00012720 <__ctype_get_mb_cur_max@plt>:
   12720:	add	ip, pc, #0, 12
   12724:	add	ip, ip, #124, 20	; 0x7c000
   12728:	ldr	pc, [ip, #2528]!	; 0x9e0

0001272c <hasmntopt@plt>:
   1272c:	add	ip, pc, #0, 12
   12730:	add	ip, ip, #124, 20	; 0x7c000
   12734:	ldr	pc, [ip, #2520]!	; 0x9d8

00012738 <strcpy@plt>:
   12738:	add	ip, pc, #0, 12
   1273c:	add	ip, ip, #124, 20	; 0x7c000
   12740:	ldr	pc, [ip, #2512]!	; 0x9d0

00012744 <gettimeofday@plt>:
   12744:	add	ip, pc, #0, 12
   12748:	add	ip, ip, #124, 20	; 0x7c000
   1274c:	ldr	pc, [ip, #2504]!	; 0x9c8

00012750 <__fpending@plt>:
   12750:	add	ip, pc, #0, 12
   12754:	add	ip, ip, #124, 20	; 0x7c000
   12758:	ldr	pc, [ip, #2496]!	; 0x9c0

0001275c <ferror_unlocked@plt>:
   1275c:	add	ip, pc, #0, 12
   12760:	add	ip, ip, #124, 20	; 0x7c000
   12764:	ldr	pc, [ip, #2488]!	; 0x9b8

00012768 <mbrtowc@plt>:
   12768:	add	ip, pc, #0, 12
   1276c:	add	ip, ip, #124, 20	; 0x7c000
   12770:	ldr	pc, [ip, #2480]!	; 0x9b0

00012774 <strtok_r@plt>:
   12774:	add	ip, pc, #0, 12
   12778:	add	ip, ip, #124, 20	; 0x7c000
   1277c:	ldr	pc, [ip, #2472]!	; 0x9a8

00012780 <error@plt>:
   12780:	add	ip, pc, #0, 12
   12784:	add	ip, ip, #124, 20	; 0x7c000
   12788:	ldr	pc, [ip, #2464]!	; 0x9a0

0001278c <getmntent@plt>:
   1278c:	add	ip, pc, #0, 12
   12790:	add	ip, ip, #124, 20	; 0x7c000
   12794:	ldr	pc, [ip, #2456]!	; 0x998

00012798 <opendir@plt>:
   12798:	add	ip, pc, #0, 12
   1279c:	add	ip, ip, #124, 20	; 0x7c000
   127a0:	ldr	pc, [ip, #2448]!	; 0x990

000127a4 <fnmatch@plt>:
   127a4:	add	ip, pc, #0, 12
   127a8:	add	ip, ip, #124, 20	; 0x7c000
   127ac:	ldr	pc, [ip, #2440]!	; 0x988

000127b0 <open64@plt>:
   127b0:	add	ip, pc, #0, 12
   127b4:	add	ip, ip, #124, 20	; 0x7c000
   127b8:	ldr	pc, [ip, #2432]!	; 0x980

000127bc <getenv@plt>:
   127bc:	add	ip, pc, #0, 12
   127c0:	add	ip, ip, #124, 20	; 0x7c000
   127c4:	ldr	pc, [ip, #2424]!	; 0x978

000127c8 <lgetfilecon@plt>:
   127c8:	add	ip, pc, #0, 12
   127cc:	add	ip, ip, #124, 20	; 0x7c000
   127d0:	ldr	pc, [ip, #2416]!	; 0x970

000127d4 <malloc@plt>:
   127d4:	add	ip, pc, #0, 12
   127d8:	add	ip, ip, #124, 20	; 0x7c000
   127dc:	ldr	pc, [ip, #2408]!	; 0x968

000127e0 <__libc_start_main@plt>:
   127e0:	add	ip, pc, #0, 12
   127e4:	add	ip, ip, #124, 20	; 0x7c000
   127e8:	ldr	pc, [ip, #2400]!	; 0x960

000127ec <readlinkat@plt>:
   127ec:	add	ip, pc, #0, 12
   127f0:	add	ip, ip, #124, 20	; 0x7c000
   127f4:	ldr	pc, [ip, #2392]!	; 0x958

000127f8 <strftime@plt>:
   127f8:	add	ip, pc, #0, 12
   127fc:	add	ip, ip, #124, 20	; 0x7c000
   12800:	ldr	pc, [ip, #2384]!	; 0x950

00012804 <__freading@plt>:
   12804:	add	ip, pc, #0, 12
   12808:	add	ip, ip, #124, 20	; 0x7c000
   1280c:	ldr	pc, [ip, #2376]!	; 0x948

00012810 <localtime@plt>:
   12810:	add	ip, pc, #0, 12
   12814:	add	ip, ip, #124, 20	; 0x7c000
   12818:	ldr	pc, [ip, #2368]!	; 0x940

0001281c <modf@plt>:
   1281c:	add	ip, pc, #0, 12
   12820:	add	ip, ip, #124, 20	; 0x7c000
   12824:	ldr	pc, [ip, #2360]!	; 0x938

00012828 <__gmon_start__@plt>:
   12828:	add	ip, pc, #0, 12
   1282c:	add	ip, ip, #124, 20	; 0x7c000
   12830:	ldr	pc, [ip, #2352]!	; 0x930

00012834 <__ctype_b_loc@plt>:
   12834:	add	ip, pc, #0, 12
   12838:	add	ip, ip, #124, 20	; 0x7c000
   1283c:	ldr	pc, [ip, #2344]!	; 0x928

00012840 <getcwd@plt>:
   12840:	add	ip, pc, #0, 12
   12844:	add	ip, ip, #124, 20	; 0x7c000
   12848:	ldr	pc, [ip, #2336]!	; 0x920

0001284c <exit@plt>:
   1284c:	add	ip, pc, #0, 12
   12850:	add	ip, ip, #124, 20	; 0x7c000
   12854:	ldr	pc, [ip, #2328]!	; 0x918

00012858 <feof@plt>:
   12858:	add	ip, pc, #0, 12
   1285c:	add	ip, ip, #124, 20	; 0x7c000
   12860:	ldr	pc, [ip, #2320]!	; 0x910

00012864 <gettext@plt>:
   12864:	add	ip, pc, #0, 12
   12868:	add	ip, ip, #124, 20	; 0x7c000
   1286c:	ldr	pc, [ip, #2312]!	; 0x908

00012870 <getfilecon@plt>:
   12870:	add	ip, pc, #0, 12
   12874:	add	ip, ip, #124, 20	; 0x7c000
   12878:	ldr	pc, [ip, #2304]!	; 0x900

0001287c <strtoul@plt>:
   1287c:	add	ip, pc, #0, 12
   12880:	add	ip, ip, #124, 20	; 0x7c000
   12884:	ldr	pc, [ip, #2296]!	; 0x8f8

00012888 <strlen@plt>:
   12888:	add	ip, pc, #0, 12
   1288c:	add	ip, ip, #124, 20	; 0x7c000
   12890:	ldr	pc, [ip, #2288]!	; 0x8f0

00012894 <strchr@plt>:
   12894:	add	ip, pc, #0, 12
   12898:	add	ip, ip, #124, 20	; 0x7c000
   1289c:	ldr	pc, [ip, #2280]!	; 0x8e8

000128a0 <setenv@plt>:
   128a0:	add	ip, pc, #0, 12
   128a4:	add	ip, ip, #124, 20	; 0x7c000
   128a8:	ldr	pc, [ip, #2272]!	; 0x8e0

000128ac <openat64@plt>:
   128ac:	add	ip, pc, #0, 12
   128b0:	add	ip, ip, #124, 20	; 0x7c000
   128b4:	ldr	pc, [ip, #2264]!	; 0x8d8

000128b8 <memrchr@plt>:
   128b8:	add	ip, pc, #0, 12
   128bc:	add	ip, ip, #124, 20	; 0x7c000
   128c0:	ldr	pc, [ip, #2256]!	; 0x8d0

000128c4 <fprintf@plt>:
   128c4:	add	ip, pc, #0, 12
   128c8:	add	ip, ip, #124, 20	; 0x7c000
   128cc:	ldr	pc, [ip, #2248]!	; 0x8c8

000128d0 <__errno_location@plt>:
   128d0:	add	ip, pc, #0, 12
   128d4:	add	ip, ip, #124, 20	; 0x7c000
   128d8:	ldr	pc, [ip, #2240]!	; 0x8c0

000128dc <iswalnum@plt>:
   128dc:	add	ip, pc, #0, 12
   128e0:	add	ip, ip, #124, 20	; 0x7c000
   128e4:	ldr	pc, [ip, #2232]!	; 0x8b8

000128e8 <snprintf@plt>:
   128e8:	add	ip, pc, #0, 12
   128ec:	add	ip, ip, #124, 20	; 0x7c000
   128f0:	ldr	pc, [ip, #2224]!	; 0x8b0

000128f4 <__cxa_atexit@plt>:
   128f4:	add	ip, pc, #0, 12
   128f8:	add	ip, ip, #124, 20	; 0x7c000
   128fc:	ldr	pc, [ip, #2216]!	; 0x8a8

00012900 <memset@plt>:
   12900:	add	ip, pc, #0, 12
   12904:	add	ip, ip, #124, 20	; 0x7c000
   12908:	ldr	pc, [ip, #2208]!	; 0x8a0

0001290c <bsearch@plt>:
   1290c:	add	ip, pc, #0, 12
   12910:	add	ip, ip, #124, 20	; 0x7c000
   12914:	ldr	pc, [ip, #2200]!	; 0x898

00012918 <strncpy@plt>:
   12918:	add	ip, pc, #0, 12
   1291c:	add	ip, ip, #124, 20	; 0x7c000
   12920:	ldr	pc, [ip, #2192]!	; 0x890

00012924 <pthread_mutexattr_gettype@plt>:
   12924:	add	ip, pc, #0, 12
   12928:	add	ip, ip, #124, 20	; 0x7c000
   1292c:	ldr	pc, [ip, #2184]!	; 0x888

00012930 <btowc@plt>:
   12930:	add	ip, pc, #0, 12
   12934:	add	ip, ip, #124, 20	; 0x7c000
   12938:	ldr	pc, [ip, #2176]!	; 0x880

0001293c <strtod@plt>:
   1293c:	add	ip, pc, #0, 12
   12940:	add	ip, ip, #124, 20	; 0x7c000
   12944:	ldr	pc, [ip, #2168]!	; 0x878

00012948 <fileno@plt>:
   12948:	add	ip, pc, #0, 12
   1294c:	add	ip, ip, #124, 20	; 0x7c000
   12950:	ldr	pc, [ip, #2160]!	; 0x870

00012954 <difftime@plt>:
   12954:	add	ip, pc, #0, 12
   12958:	add	ip, ip, #124, 20	; 0x7c000
   1295c:	ldr	pc, [ip, #2152]!	; 0x868

00012960 <strtoumax@plt>:
   12960:	add	ip, pc, #0, 12
   12964:	add	ip, ip, #124, 20	; 0x7c000
   12968:	ldr	pc, [ip, #2144]!	; 0x860

0001296c <memchr@plt>:
   1296c:	add	ip, pc, #0, 12
   12970:	add	ip, ip, #124, 20	; 0x7c000
   12974:	ldr	pc, [ip, #2136]!	; 0x858

00012978 <setfilecon@plt>:
   12978:	add	ip, pc, #0, 12
   1297c:	add	ip, ip, #124, 20	; 0x7c000
   12980:	ldr	pc, [ip, #2128]!	; 0x850

00012984 <access@plt>:
   12984:	add	ip, pc, #0, 12
   12988:	add	ip, ip, #124, 20	; 0x7c000
   1298c:	ldr	pc, [ip, #2120]!	; 0x848

00012990 <fclose@plt>:
   12990:	add	ip, pc, #0, 12
   12994:	add	ip, ip, #124, 20	; 0x7c000
   12998:	ldr	pc, [ip, #2112]!	; 0x840

0001299c <strnlen@plt>:
   1299c:	add	ip, pc, #0, 12
   129a0:	add	ip, ip, #124, 20	; 0x7c000
   129a4:	ldr	pc, [ip, #2104]!	; 0x838

000129a8 <fseeko64@plt>:
   129a8:	add	ip, pc, #0, 12
   129ac:	add	ip, ip, #124, 20	; 0x7c000
   129b0:	ldr	pc, [ip, #2096]!	; 0x830

000129b4 <abs@plt>:
   129b4:	add	ip, pc, #0, 12
   129b8:	add	ip, ip, #124, 20	; 0x7c000
   129bc:	ldr	pc, [ip, #2088]!	; 0x828

000129c0 <endmntent@plt>:
   129c0:	add	ip, pc, #0, 12
   129c4:	add	ip, ip, #124, 20	; 0x7c000
   129c8:	ldr	pc, [ip, #2080]!	; 0x820

000129cc <fcntl64@plt>:
   129cc:	add	ip, pc, #0, 12
   129d0:	add	ip, ip, #124, 20	; 0x7c000
   129d4:	ldr	pc, [ip, #2072]!	; 0x818

000129d8 <rpmatch@plt>:
   129d8:	add	ip, pc, #0, 12
   129dc:	add	ip, ip, #124, 20	; 0x7c000
   129e0:	ldr	pc, [ip, #2064]!	; 0x810

000129e4 <setlocale@plt>:
   129e4:	add	ip, pc, #0, 12
   129e8:	add	ip, ip, #124, 20	; 0x7c000
   129ec:	ldr	pc, [ip, #2056]!	; 0x808

000129f0 <fork@plt>:
   129f0:	add	ip, pc, #0, 12
   129f4:	add	ip, ip, #124, 20	; 0x7c000
   129f8:	ldr	pc, [ip, #2048]!	; 0x800

000129fc <endpwent@plt>:
   129fc:	add	ip, pc, #0, 12
   12a00:	add	ip, ip, #124, 20	; 0x7c000
   12a04:	ldr	pc, [ip, #2040]!	; 0x7f8

00012a08 <toupper@plt>:
   12a08:	add	ip, pc, #0, 12
   12a0c:	add	ip, ip, #124, 20	; 0x7c000
   12a10:	ldr	pc, [ip, #2032]!	; 0x7f0

00012a14 <strrchr@plt>:
   12a14:	add	ip, pc, #0, 12
   12a18:	add	ip, ip, #124, 20	; 0x7c000
   12a1c:	ldr	pc, [ip, #2024]!	; 0x7e8

00012a20 <vfprintf@plt>:
   12a20:	add	ip, pc, #0, 12
   12a24:	add	ip, ip, #124, 20	; 0x7c000
   12a28:	ldr	pc, [ip, #2016]!	; 0x7e0

00012a2c <nl_langinfo@plt>:
   12a2c:	add	ip, pc, #0, 12
   12a30:	add	ip, ip, #124, 20	; 0x7c000
   12a34:	ldr	pc, [ip, #2008]!	; 0x7d8

00012a38 <fputc@plt>:
   12a38:	add	ip, pc, #0, 12
   12a3c:	add	ip, ip, #124, 20	; 0x7c000
   12a40:	ldr	pc, [ip, #2000]!	; 0x7d0

00012a44 <sscanf@plt>:
   12a44:	add	ip, pc, #0, 12
   12a48:	add	ip, ip, #124, 20	; 0x7c000
   12a4c:	ldr	pc, [ip, #1992]!	; 0x7c8

00012a50 <localeconv@plt>:
   12a50:	add	ip, pc, #0, 12
   12a54:	add	ip, ip, #124, 20	; 0x7c000
   12a58:	ldr	pc, [ip, #1984]!	; 0x7c0

00012a5c <sprintf@plt>:
   12a5c:	add	ip, pc, #0, 12
   12a60:	add	ip, ip, #124, 20	; 0x7c000
   12a64:	ldr	pc, [ip, #1976]!	; 0x7b8

00012a68 <readdir64@plt>:
   12a68:	add	ip, pc, #0, 12
   12a6c:	add	ip, ip, #124, 20	; 0x7c000
   12a70:	ldr	pc, [ip, #1968]!	; 0x7b0

00012a74 <fdopendir@plt>:
   12a74:	add	ip, pc, #0, 12
   12a78:	add	ip, ip, #124, 20	; 0x7c000
   12a7c:	ldr	pc, [ip, #1960]!	; 0x7a8

00012a80 <timegm@plt>:
   12a80:	add	ip, pc, #0, 12
   12a84:	add	ip, ip, #124, 20	; 0x7c000
   12a88:	ldr	pc, [ip, #1952]!	; 0x7a0

00012a8c <putc@plt>:
   12a8c:	add	ip, pc, #0, 12
   12a90:	add	ip, ip, #124, 20	; 0x7c000
   12a94:	ldr	pc, [ip, #1944]!	; 0x798

00012a98 <dirfd@plt>:
   12a98:	add	ip, pc, #0, 12
   12a9c:	add	ip, ip, #124, 20	; 0x7c000
   12aa0:	ldr	pc, [ip, #1936]!	; 0x790

00012aa4 <fchdir@plt>:
   12aa4:	add	ip, pc, #0, 12
   12aa8:	add	ip, ip, #124, 20	; 0x7c000
   12aac:	ldr	pc, [ip, #1928]!	; 0x788

00012ab0 <fopen64@plt>:
   12ab0:	add	ip, pc, #0, 12
   12ab4:	add	ip, ip, #124, 20	; 0x7c000
   12ab8:	ldr	pc, [ip, #1920]!	; 0x780

00012abc <qsort@plt>:
   12abc:	add	ip, pc, #0, 12
   12ac0:	add	ip, ip, #124, 20	; 0x7c000
   12ac4:	ldr	pc, [ip, #1912]!	; 0x778

00012ac8 <freecon@plt>:
   12ac8:	add	ip, pc, #0, 12
   12acc:	add	ip, ip, #124, 20	; 0x7c000
   12ad0:	ldr	pc, [ip, #1904]!	; 0x770

00012ad4 <strpbrk@plt>:
   12ad4:	add	ip, pc, #0, 12
   12ad8:	add	ip, ip, #124, 20	; 0x7c000
   12adc:	ldr	pc, [ip, #1896]!	; 0x768

00012ae0 <setmntent@plt>:
   12ae0:	add	ip, pc, #0, 12
   12ae4:	add	ip, ip, #124, 20	; 0x7c000
   12ae8:	ldr	pc, [ip, #1888]!	; 0x760

00012aec <bindtextdomain@plt>:
   12aec:	add	ip, pc, #0, 12
   12af0:	add	ip, ip, #124, 20	; 0x7c000
   12af4:	ldr	pc, [ip, #1880]!	; 0x758

00012af8 <atof@plt>:
   12af8:	add	ip, pc, #0, 12
   12afc:	add	ip, ip, #124, 20	; 0x7c000
   12b00:	ldr	pc, [ip, #1872]!	; 0x750

00012b04 <getline@plt>:
   12b04:	add	ip, pc, #0, 12
   12b08:	add	ip, ip, #124, 20	; 0x7c000
   12b0c:	ldr	pc, [ip, #1864]!	; 0x748

00012b10 <getdelim@plt>:
   12b10:	add	ip, pc, #0, 12
   12b14:	add	ip, ip, #124, 20	; 0x7c000
   12b18:	ldr	pc, [ip, #1856]!	; 0x740

00012b1c <__xstat64@plt>:
   12b1c:	add	ip, pc, #0, 12
   12b20:	add	ip, ip, #124, 20	; 0x7c000
   12b24:	ldr	pc, [ip, #1848]!	; 0x738

00012b28 <isatty@plt>:
   12b28:	add	ip, pc, #0, 12
   12b2c:	add	ip, ip, #124, 20	; 0x7c000
   12b30:	ldr	pc, [ip, #1840]!	; 0x730

00012b34 <unsetenv@plt>:
   12b34:	add	ip, pc, #0, 12
   12b38:	add	ip, ip, #124, 20	; 0x7c000
   12b3c:	ldr	pc, [ip, #1832]!	; 0x728

00012b40 <towupper@plt>:
   12b40:	add	ip, pc, #0, 12
   12b44:	add	ip, ip, #124, 20	; 0x7c000
   12b48:	ldr	pc, [ip, #1824]!	; 0x720

00012b4c <fputs@plt>:
   12b4c:	add	ip, pc, #0, 12
   12b50:	add	ip, ip, #124, 20	; 0x7c000
   12b54:	ldr	pc, [ip, #1816]!	; 0x718

00012b58 <strncmp@plt>:
   12b58:	add	ip, pc, #0, 12
   12b5c:	add	ip, ip, #124, 20	; 0x7c000
   12b60:	ldr	pc, [ip, #1808]!	; 0x710

00012b64 <abort@plt>:
   12b64:	add	ip, pc, #0, 12
   12b68:	add	ip, ip, #124, 20	; 0x7c000
   12b6c:	ldr	pc, [ip, #1800]!	; 0x708

00012b70 <close@plt>:
   12b70:	add	ip, pc, #0, 12
   12b74:	add	ip, ip, #124, 20	; 0x7c000
   12b78:	ldr	pc, [ip, #1792]!	; 0x700

00012b7c <__lxstat64@plt>:
   12b7c:	add	ip, pc, #0, 12
   12b80:	add	ip, ip, #124, 20	; 0x7c000
   12b84:	ldr	pc, [ip, #1784]!	; 0x6f8

00012b88 <closedir@plt>:
   12b88:	add	ip, pc, #0, 12
   12b8c:	add	ip, ip, #124, 20	; 0x7c000
   12b90:	ldr	pc, [ip, #1776]!	; 0x6f0

00012b94 <getgrgid@plt>:
   12b94:	add	ip, pc, #0, 12
   12b98:	add	ip, ip, #124, 20	; 0x7c000
   12b9c:	ldr	pc, [ip, #1768]!	; 0x6e8

00012ba0 <getgrnam@plt>:
   12ba0:	add	ip, pc, #0, 12
   12ba4:	add	ip, ip, #124, 20	; 0x7c000
   12ba8:	ldr	pc, [ip, #1760]!	; 0x6e0

00012bac <strspn@plt>:
   12bac:	add	ip, pc, #0, 12
   12bb0:	add	ip, ip, #124, 20	; 0x7c000
   12bb4:	ldr	pc, [ip, #1752]!	; 0x6d8

00012bb8 <__assert_fail@plt>:
   12bb8:	add	ip, pc, #0, 12
   12bbc:	add	ip, ip, #124, 20	; 0x7c000
   12bc0:	ldr	pc, [ip, #1744]!	; 0x6d0

Disassembly of section .text:

00012bc8 <.text>:
   12bc8:	mov	fp, #0
   12bcc:	mov	lr, #0
   12bd0:	pop	{r1}		; (ldr r1, [sp], #4)
   12bd4:	mov	r2, sp
   12bd8:	push	{r2}		; (str r2, [sp, #-4]!)
   12bdc:	push	{r0}		; (str r0, [sp, #-4]!)
   12be0:	ldr	ip, [pc, #16]	; 12bf8 <__assert_fail@plt+0x40>
   12be4:	push	{ip}		; (str ip, [sp, #-4]!)
   12be8:	ldr	r0, [pc, #12]	; 12bfc <__assert_fail@plt+0x44>
   12bec:	ldr	r3, [pc, #12]	; 12c00 <__assert_fail@plt+0x48>
   12bf0:	bl	127e0 <__libc_start_main@plt>
   12bf4:	bl	12b64 <abort@plt>
   12bf8:	andeq	r7, r7, r8, ror #20
   12bfc:			; <UNDEFINED> instruction: 0x00012cb8
   12c00:	andeq	r7, r7, r8, lsl #20
   12c04:	ldr	r3, [pc, #20]	; 12c20 <__assert_fail@plt+0x68>
   12c08:	ldr	r2, [pc, #20]	; 12c24 <__assert_fail@plt+0x6c>
   12c0c:	add	r3, pc, r3
   12c10:	ldr	r2, [r3, r2]
   12c14:	cmp	r2, #0
   12c18:	bxeq	lr
   12c1c:	b	12828 <__gmon_start__@plt>
   12c20:	andeq	ip, r7, ip, ror #7
   12c24:	muleq	r0, r4, r2
   12c28:	ldr	r0, [pc, #24]	; 12c48 <__assert_fail@plt+0x90>
   12c2c:	ldr	r3, [pc, #24]	; 12c4c <__assert_fail@plt+0x94>
   12c30:	cmp	r3, r0
   12c34:	bxeq	lr
   12c38:	ldr	r3, [pc, #16]	; 12c50 <__assert_fail@plt+0x98>
   12c3c:	cmp	r3, #0
   12c40:	bxeq	lr
   12c44:	bx	r3
   12c48:	andeq	pc, r8, r4, lsl r7	; <UNPREDICTABLE>
   12c4c:	andeq	pc, r8, r4, lsl r7	; <UNPREDICTABLE>
   12c50:	andeq	r0, r0, r0
   12c54:	ldr	r0, [pc, #36]	; 12c80 <__assert_fail@plt+0xc8>
   12c58:	ldr	r1, [pc, #36]	; 12c84 <__assert_fail@plt+0xcc>
   12c5c:	sub	r1, r1, r0
   12c60:	asr	r1, r1, #2
   12c64:	add	r1, r1, r1, lsr #31
   12c68:	asrs	r1, r1, #1
   12c6c:	bxeq	lr
   12c70:	ldr	r3, [pc, #16]	; 12c88 <__assert_fail@plt+0xd0>
   12c74:	cmp	r3, #0
   12c78:	bxeq	lr
   12c7c:	bx	r3
   12c80:	andeq	pc, r8, r4, lsl r7	; <UNPREDICTABLE>
   12c84:	andeq	pc, r8, r4, lsl r7	; <UNPREDICTABLE>
   12c88:	andeq	r0, r0, r0
   12c8c:	push	{r4, lr}
   12c90:	ldr	r4, [pc, #24]	; 12cb0 <__assert_fail@plt+0xf8>
   12c94:	ldrb	r3, [r4]
   12c98:	cmp	r3, #0
   12c9c:	popne	{r4, pc}
   12ca0:	bl	12c28 <__assert_fail@plt+0x70>
   12ca4:	mov	r3, #1
   12ca8:	strb	r3, [r4]
   12cac:	pop	{r4, pc}
   12cb0:	andeq	pc, r8, r8, lsr r7	; <UNPREDICTABLE>
   12cb4:	b	12c54 <__assert_fail@plt+0x9c>
   12cb8:	push	{fp, lr}
   12cbc:	mov	fp, sp
   12cc0:	sub	sp, sp, #64	; 0x40
   12cc4:	movw	r2, #0
   12cc8:	str	r2, [fp, #-4]
   12ccc:	str	r0, [fp, #-8]
   12cd0:	str	r1, [fp, #-12]
   12cd4:	str	r2, [fp, #-16]
   12cd8:	ldr	r0, [fp, #-12]
   12cdc:	ldr	r0, [r0]
   12ce0:	cmp	r0, r2
   12ce4:	beq	12cf8 <__assert_fail@plt+0x140>
   12ce8:	ldr	r0, [fp, #-12]
   12cec:	ldr	r0, [r0]
   12cf0:	bl	48638 <__assert_fail@plt+0x35a80>
   12cf4:	b	12d04 <__assert_fail@plt+0x14c>
   12cf8:	movw	r0, #31464	; 0x7ae8
   12cfc:	movt	r0, #7
   12d00:	bl	48638 <__assert_fail@plt+0x35a80>
   12d04:	bl	1c2f0 <__assert_fail@plt+0x9738>
   12d08:	movw	lr, #0
   12d0c:	movw	r0, #92	; 0x5c
   12d10:	movt	r0, #9
   12d14:	strb	lr, [r0, #40]	; 0x28
   12d18:	movw	r1, #0
   12d1c:	str	r1, [r0, #28]
   12d20:	strb	lr, [r0, #32]
   12d24:	mvn	r1, #99	; 0x63
   12d28:	str	r1, [r0, #16]
   12d2c:	bl	29890 <__assert_fail@plt+0x16cd8>
   12d30:	tst	r0, #1
   12d34:	beq	12d3c <__assert_fail@plt+0x184>
   12d38:	bl	29344 <__assert_fail@plt+0x1678c>
   12d3c:	movw	r0, #43270	; 0xa906
   12d40:	movt	r0, #7
   12d44:	bl	1dca4 <__assert_fail@plt+0xb0ec>
   12d48:	movw	lr, #92	; 0x5c
   12d4c:	movt	lr, #9
   12d50:	str	r0, [lr, #36]	; 0x24
   12d54:	ldr	r0, [lr, #36]	; 0x24
   12d58:	movw	lr, #0
   12d5c:	cmp	lr, r0
   12d60:	bne	12d94 <__assert_fail@plt+0x1dc>
   12d64:	bl	128d0 <__errno_location@plt>
   12d68:	ldr	r1, [r0]
   12d6c:	movw	r0, #31469	; 0x7aed
   12d70:	movt	r0, #7
   12d74:	str	r1, [fp, #-24]	; 0xffffffe8
   12d78:	bl	12864 <gettext@plt>
   12d7c:	movw	r1, #1
   12d80:	str	r0, [fp, #-28]	; 0xffffffe4
   12d84:	mov	r0, r1
   12d88:	ldr	r1, [fp, #-24]	; 0xffffffe8
   12d8c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   12d90:	bl	12780 <error@plt>
   12d94:	movw	r0, #136	; 0x88
   12d98:	movt	r0, #9
   12d9c:	bl	1d548 <__assert_fail@plt+0xa990>
   12da0:	movw	r0, #6
   12da4:	movw	r1, #39197	; 0x991d
   12da8:	movt	r1, #7
   12dac:	bl	129e4 <setlocale@plt>
   12db0:	movw	r1, #49413	; 0xc105
   12db4:	movt	r1, #7
   12db8:	str	r0, [sp, #32]
   12dbc:	mov	r0, r1
   12dc0:	movw	r1, #31513	; 0x7b19
   12dc4:	movt	r1, #7
   12dc8:	bl	12aec <bindtextdomain@plt>
   12dcc:	movw	r1, #49413	; 0xc105
   12dd0:	movt	r1, #7
   12dd4:	str	r0, [sp, #28]
   12dd8:	mov	r0, r1
   12ddc:	bl	12690 <textdomain@plt>
   12de0:	movw	r1, #49676	; 0xc20c
   12de4:	movt	r1, #2
   12de8:	str	r0, [sp, #24]
   12dec:	mov	r0, r1
   12df0:	bl	77a6c <__assert_fail@plt+0x64eb4>
   12df4:	cmp	r0, #0
   12df8:	beq	12e2c <__assert_fail@plt+0x274>
   12dfc:	bl	128d0 <__errno_location@plt>
   12e00:	ldr	r1, [r0]
   12e04:	movw	r0, #31537	; 0x7b31
   12e08:	movt	r0, #7
   12e0c:	str	r1, [sp, #20]
   12e10:	bl	12864 <gettext@plt>
   12e14:	movw	r1, #1
   12e18:	str	r0, [sp, #16]
   12e1c:	mov	r0, r1
   12e20:	ldr	r1, [sp, #20]
   12e24:	ldr	r2, [sp, #16]
   12e28:	bl	12780 <error@plt>
   12e2c:	ldr	r0, [fp, #-8]
   12e30:	ldr	r1, [fp, #-12]
   12e34:	bl	1cf5c <__assert_fail@plt+0xa3a4>
   12e38:	str	r0, [fp, #-16]
   12e3c:	movw	r0, #136	; 0x88
   12e40:	movt	r0, #9
   12e44:	ldr	r0, [r0, #44]	; 0x2c
   12e48:	and	r0, r0, #2
   12e4c:	cmp	r0, #0
   12e50:	beq	12e68 <__assert_fail@plt+0x2b0>
   12e54:	movw	r0, #136	; 0x88
   12e58:	movt	r0, #9
   12e5c:	movw	r1, #51940	; 0xcae4
   12e60:	movt	r1, #1
   12e64:	str	r1, [r0, #52]	; 0x34
   12e68:	movw	r0, #136	; 0x88
   12e6c:	movt	r0, #9
   12e70:	ldr	r0, [r0, #44]	; 0x2c
   12e74:	and	r0, r0, #128	; 0x80
   12e78:	cmp	r0, #0
   12e7c:	beq	12ec0 <__assert_fail@plt+0x308>
   12e80:	movw	r0, #136	; 0x88
   12e84:	movt	r0, #9
   12e88:	add	r0, r0, #28
   12e8c:	movw	r1, #63272	; 0xf728
   12e90:	movt	r1, #8
   12e94:	ldr	r1, [r1]
   12e98:	str	r1, [sp, #12]
   12e9c:	bl	1263c <ctime@plt>
   12ea0:	ldr	r1, [sp, #12]
   12ea4:	str	r0, [sp, #8]
   12ea8:	mov	r0, r1
   12eac:	movw	r1, #31572	; 0x7b54
   12eb0:	movt	r1, #7
   12eb4:	ldr	r2, [sp, #8]
   12eb8:	bl	128c4 <fprintf@plt>
   12ebc:	str	r0, [sp, #4]
   12ec0:	ldr	r0, [fp, #-8]
   12ec4:	ldr	r1, [fp, #-12]
   12ec8:	ldr	r2, [fp, #-16]
   12ecc:	bl	18870 <__assert_fail@plt+0x5cb8>
   12ed0:	str	r0, [fp, #-20]	; 0xffffffec
   12ed4:	movw	r0, #136	; 0x88
   12ed8:	movt	r0, #9
   12edc:	ldrb	r0, [r0, #56]	; 0x38
   12ee0:	tst	r0, #1
   12ee4:	bne	12eec <__assert_fail@plt+0x334>
   12ee8:	b	12eec <__assert_fail@plt+0x334>
   12eec:	ldr	r0, [fp, #-8]
   12ef0:	ldr	r1, [fp, #-16]
   12ef4:	sub	r0, r0, r1
   12ef8:	ldr	r2, [fp, #-12]
   12efc:	add	r1, r2, r1, lsl #2
   12f00:	bl	12f2c <__assert_fail@plt+0x374>
   12f04:	tst	r0, #1
   12f08:	beq	12f18 <__assert_fail@plt+0x360>
   12f0c:	ldr	r0, [fp, #-20]	; 0xffffffec
   12f10:	bl	17244 <__assert_fail@plt+0x468c>
   12f14:	bl	1c430 <__assert_fail@plt+0x9878>
   12f18:	movw	r0, #92	; 0x5c
   12f1c:	movt	r0, #9
   12f20:	ldr	r0, [r0, #28]
   12f24:	mov	sp, fp
   12f28:	pop	{fp, pc}
   12f2c:	push	{r4, r5, fp, lr}
   12f30:	add	fp, sp, #8
   12f34:	sub	sp, sp, #336	; 0x150
   12f38:	str	r0, [fp, #-16]
   12f3c:	str	r1, [fp, #-20]	; 0xffffffec
   12f40:	ldr	r0, [fp, #-16]
   12f44:	movw	r1, #0
   12f48:	cmp	r1, r0
   12f4c:	movw	r0, #0
   12f50:	str	r0, [sp, #76]	; 0x4c
   12f54:	bge	12f78 <__assert_fail@plt+0x3c0>
   12f58:	ldr	r0, [fp, #-20]	; 0xffffffec
   12f5c:	ldr	r0, [r0]
   12f60:	movw	r1, #1
   12f64:	and	r1, r1, #1
   12f68:	bl	1ce3c <__assert_fail@plt+0xa284>
   12f6c:	mvn	r1, #0
   12f70:	eor	r0, r0, r1
   12f74:	str	r0, [sp, #76]	; 0x4c
   12f78:	ldr	r0, [sp, #76]	; 0x4c
   12f7c:	and	r0, r0, #1
   12f80:	strb	r0, [fp, #-21]	; 0xffffffeb
   12f84:	movw	r0, #0
   12f88:	str	r0, [fp, #-28]	; 0xffffffe4
   12f8c:	str	r0, [fp, #-32]	; 0xffffffe0
   12f90:	movw	r1, #136	; 0x88
   12f94:	movt	r1, #9
   12f98:	ldr	r1, [r1, #76]	; 0x4c
   12f9c:	cmp	r1, r0
   12fa0:	beq	13250 <__assert_fail@plt+0x698>
   12fa4:	ldrb	r0, [fp, #-21]	; 0xffffffeb
   12fa8:	tst	r0, #1
   12fac:	beq	13018 <__assert_fail@plt+0x460>
   12fb0:	movw	r0, #31591	; 0x7b67
   12fb4:	movt	r0, #7
   12fb8:	bl	12864 <gettext@plt>
   12fbc:	ldr	lr, [fp, #-20]	; 0xffffffec
   12fc0:	ldr	r1, [lr]
   12fc4:	movw	lr, #0
   12fc8:	str	r0, [sp, #72]	; 0x48
   12fcc:	mov	r0, lr
   12fd0:	bl	1da90 <__assert_fail@plt+0xaed8>
   12fd4:	movw	r1, #0
   12fd8:	str	r0, [sp, #68]	; 0x44
   12fdc:	mov	r0, r1
   12fe0:	ldr	r2, [sp, #72]	; 0x48
   12fe4:	ldr	r3, [sp, #68]	; 0x44
   12fe8:	bl	12780 <error@plt>
   12fec:	movw	r0, #31608	; 0x7b78
   12ff0:	movt	r0, #7
   12ff4:	bl	12864 <gettext@plt>
   12ff8:	movw	r1, #1
   12ffc:	str	r0, [sp, #64]	; 0x40
   13000:	mov	r0, r1
   13004:	movw	r1, #0
   13008:	movw	r2, #59431	; 0xe827
   1300c:	movt	r2, #7
   13010:	ldr	r3, [sp, #64]	; 0x40
   13014:	bl	12780 <error@plt>
   13018:	movw	r0, #136	; 0x88
   1301c:	movt	r0, #9
   13020:	ldr	r0, [r0, #76]	; 0x4c
   13024:	movw	r1, #56893	; 0xde3d
   13028:	movt	r1, #7
   1302c:	bl	124c8 <strcmp@plt>
   13030:	movw	r1, #0
   13034:	cmp	r1, r0
   13038:	bne	130b4 <__assert_fail@plt+0x4fc>
   1303c:	movw	r0, #136	; 0x88
   13040:	movt	r0, #9
   13044:	ldrb	r0, [r0, #80]	; 0x50
   13048:	tst	r0, #1
   1304c:	beq	1307c <__assert_fail@plt+0x4c4>
   13050:	movw	r0, #31659	; 0x7bab
   13054:	movt	r0, #7
   13058:	bl	12864 <gettext@plt>
   1305c:	movw	lr, #1
   13060:	str	r0, [sp, #60]	; 0x3c
   13064:	mov	r0, lr
   13068:	movw	r1, #0
   1306c:	movw	r2, #57048	; 0xded8
   13070:	movt	r2, #7
   13074:	ldr	r3, [sp, #60]	; 0x3c
   13078:	bl	12780 <error@plt>
   1307c:	movw	r0, #31743	; 0x7bff
   13080:	movt	r0, #7
   13084:	bl	12864 <gettext@plt>
   13088:	movw	lr, #0
   1308c:	str	r0, [sp, #56]	; 0x38
   13090:	mov	r0, lr
   13094:	ldr	r1, [sp, #56]	; 0x38
   13098:	bl	1da90 <__assert_fail@plt+0xaed8>
   1309c:	str	r0, [fp, #-32]	; 0xffffffe0
   130a0:	movw	r0, #63280	; 0xf730
   130a4:	movt	r0, #8
   130a8:	ldr	r0, [r0]
   130ac:	str	r0, [fp, #-28]	; 0xffffffe4
   130b0:	b	13240 <__assert_fail@plt+0x688>
   130b4:	movw	r0, #136	; 0x88
   130b8:	movt	r0, #9
   130bc:	ldr	r1, [r0, #76]	; 0x4c
   130c0:	movw	r0, #0
   130c4:	bl	1da90 <__assert_fail@plt+0xaed8>
   130c8:	str	r0, [fp, #-32]	; 0xffffffe0
   130cc:	movw	r0, #136	; 0x88
   130d0:	movt	r0, #9
   130d4:	ldr	r0, [r0, #76]	; 0x4c
   130d8:	movw	r1, #49580	; 0xc1ac
   130dc:	movt	r1, #7
   130e0:	bl	12ab0 <fopen64@plt>
   130e4:	str	r0, [fp, #-28]	; 0xffffffe4
   130e8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   130ec:	movw	r1, #0
   130f0:	cmp	r0, r1
   130f4:	bne	1312c <__assert_fail@plt+0x574>
   130f8:	bl	128d0 <__errno_location@plt>
   130fc:	ldr	r1, [r0]
   13100:	movw	r0, #31760	; 0x7c10
   13104:	movt	r0, #7
   13108:	str	r1, [sp, #52]	; 0x34
   1310c:	bl	12864 <gettext@plt>
   13110:	ldr	r3, [fp, #-32]	; 0xffffffe0
   13114:	movw	r1, #1
   13118:	str	r0, [sp, #48]	; 0x30
   1311c:	mov	r0, r1
   13120:	ldr	r1, [sp, #52]	; 0x34
   13124:	ldr	r2, [sp, #48]	; 0x30
   13128:	bl	12780 <error@plt>
   1312c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   13130:	bl	12948 <fileno@plt>
   13134:	str	r0, [fp, #-40]	; 0xffffffd8
   13138:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1313c:	cmp	r0, #0
   13140:	blt	13148 <__assert_fail@plt+0x590>
   13144:	b	13168 <__assert_fail@plt+0x5b0>
   13148:	movw	r0, #32266	; 0x7e0a
   1314c:	movt	r0, #7
   13150:	movw	r1, #31787	; 0x7c2b
   13154:	movt	r1, #7
   13158:	movw	r2, #610	; 0x262
   1315c:	movw	r3, #31797	; 0x7c35
   13160:	movt	r3, #7
   13164:	bl	12bb8 <__assert_fail@plt>
   13168:	movw	r0, #136	; 0x88
   1316c:	movt	r0, #9
   13170:	ldrb	r0, [r0, #80]	; 0x50
   13174:	tst	r0, #1
   13178:	beq	1322c <__assert_fail@plt+0x674>
   1317c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   13180:	sub	r1, fp, #144	; 0x90
   13184:	bl	77a94 <__assert_fail@plt+0x64edc>
   13188:	cmp	r0, #0
   1318c:	bne	13228 <__assert_fail@plt+0x670>
   13190:	movw	r0, #0
   13194:	add	r1, sp, #96	; 0x60
   13198:	bl	77a94 <__assert_fail@plt+0x64edc>
   1319c:	cmp	r0, #0
   131a0:	bne	13228 <__assert_fail@plt+0x670>
   131a4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   131a8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   131ac:	ldr	r2, [sp, #192]	; 0xc0
   131b0:	ldr	r3, [sp, #196]	; 0xc4
   131b4:	eor	r1, r1, r3
   131b8:	eor	r0, r0, r2
   131bc:	orr	r0, r0, r1
   131c0:	cmp	r0, #0
   131c4:	bne	13228 <__assert_fail@plt+0x670>
   131c8:	b	131cc <__assert_fail@plt+0x614>
   131cc:	ldr	r0, [fp, #-144]	; 0xffffff70
   131d0:	ldr	r1, [fp, #-140]	; 0xffffff74
   131d4:	ldr	r2, [sp, #96]	; 0x60
   131d8:	ldr	r3, [sp, #100]	; 0x64
   131dc:	eor	r1, r1, r3
   131e0:	eor	r0, r0, r2
   131e4:	orr	r0, r0, r1
   131e8:	cmp	r0, #0
   131ec:	bne	13228 <__assert_fail@plt+0x670>
   131f0:	b	131f4 <__assert_fail@plt+0x63c>
   131f4:	movw	r0, #31849	; 0x7c69
   131f8:	movt	r0, #7
   131fc:	bl	12864 <gettext@plt>
   13200:	ldr	lr, [fp, #-32]	; 0xffffffe0
   13204:	movw	r1, #1
   13208:	str	r0, [sp, #44]	; 0x2c
   1320c:	mov	r0, r1
   13210:	movw	r1, #0
   13214:	movw	r2, #31841	; 0x7c61
   13218:	movt	r2, #7
   1321c:	ldr	r3, [sp, #44]	; 0x2c
   13220:	str	lr, [sp]
   13224:	bl	12780 <error@plt>
   13228:	b	1322c <__assert_fail@plt+0x674>
   1322c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   13230:	movw	r1, #1
   13234:	and	r1, r1, #1
   13238:	bl	2c0e0 <__assert_fail@plt+0x19528>
   1323c:	str	r0, [sp, #40]	; 0x28
   13240:	ldr	r0, [fp, #-28]	; 0xffffffe4
   13244:	bl	2baf4 <__assert_fail@plt+0x18f3c>
   13248:	str	r0, [fp, #-36]	; 0xffffffdc
   1324c:	b	13294 <__assert_fail@plt+0x6dc>
   13250:	ldrb	r0, [fp, #-21]	; 0xffffffeb
   13254:	tst	r0, #1
   13258:	bne	13288 <__assert_fail@plt+0x6d0>
   1325c:	add	r0, sp, #94	; 0x5e
   13260:	movw	r1, #35940	; 0x8c64
   13264:	movt	r1, #7
   13268:	ldrb	r2, [r1]
   1326c:	strb	r2, [sp, #94]	; 0x5e
   13270:	ldrb	r1, [r1, #1]
   13274:	strb	r1, [sp, #95]	; 0x5f
   13278:	bl	13574 <__assert_fail@plt+0x9bc>
   1327c:	and	r0, r0, #1
   13280:	strb	r0, [fp, #-9]
   13284:	b	13538 <__assert_fail@plt+0x980>
   13288:	ldr	r0, [fp, #-20]	; 0xffffffec
   1328c:	bl	2ba84 <__assert_fail@plt+0x18ecc>
   13290:	str	r0, [fp, #-36]	; 0xffffffdc
   13294:	ldr	r0, [fp, #-36]	; 0xffffffdc
   13298:	movw	r1, #0
   1329c:	cmp	r0, r1
   132a0:	bne	132a8 <__assert_fail@plt+0x6f0>
   132a4:	bl	4f170 <__assert_fail@plt+0x3c5b8>
   132a8:	movw	r0, #1
   132ac:	strb	r0, [sp, #93]	; 0x5d
   132b0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   132b4:	add	r1, sp, #88	; 0x58
   132b8:	bl	2bb70 <__assert_fail@plt+0x18fb8>
   132bc:	str	r0, [sp, #84]	; 0x54
   132c0:	ldr	r0, [sp, #84]	; 0x54
   132c4:	movw	r1, #0
   132c8:	cmp	r0, r1
   132cc:	bne	1337c <__assert_fail@plt+0x7c4>
   132d0:	ldr	r0, [sp, #88]	; 0x58
   132d4:	cmp	r0, #2
   132d8:	str	r0, [sp, #36]	; 0x24
   132dc:	beq	13304 <__assert_fail@plt+0x74c>
   132e0:	b	132e4 <__assert_fail@plt+0x72c>
   132e4:	ldr	r0, [sp, #36]	; 0x24
   132e8:	cmp	r0, #3
   132ec:	beq	13358 <__assert_fail@plt+0x7a0>
   132f0:	b	132f4 <__assert_fail@plt+0x73c>
   132f4:	ldr	r0, [sp, #36]	; 0x24
   132f8:	cmp	r0, #4
   132fc:	beq	13308 <__assert_fail@plt+0x750>
   13300:	b	1335c <__assert_fail@plt+0x7a4>
   13304:	b	134b8 <__assert_fail@plt+0x900>
   13308:	bl	128d0 <__errno_location@plt>
   1330c:	ldr	r1, [r0]
   13310:	movw	r0, #31948	; 0x7ccc
   13314:	movt	r0, #7
   13318:	str	r1, [sp, #32]
   1331c:	bl	12864 <gettext@plt>
   13320:	ldr	r3, [fp, #-32]	; 0xffffffe0
   13324:	movw	r1, #0
   13328:	str	r0, [sp, #28]
   1332c:	mov	r0, r1
   13330:	ldr	r1, [sp, #32]
   13334:	ldr	r2, [sp, #28]
   13338:	bl	12780 <error@plt>
   1333c:	movw	r0, #92	; 0x5c
   13340:	movt	r0, #9
   13344:	movw	r1, #1
   13348:	str	r1, [r0, #28]
   1334c:	movw	r0, #0
   13350:	strb	r0, [sp, #93]	; 0x5d
   13354:	b	134b8 <__assert_fail@plt+0x900>
   13358:	bl	4f170 <__assert_fail@plt+0x3c5b8>
   1335c:	movw	r0, #31963	; 0x7cdb
   13360:	movt	r0, #7
   13364:	movw	r1, #31787	; 0x7c2b
   13368:	movt	r1, #7
   1336c:	movw	r2, #675	; 0x2a3
   13370:	movw	r3, #31797	; 0x7c35
   13374:	movt	r3, #7
   13378:	bl	12bb8 <__assert_fail@plt>
   1337c:	ldr	r0, [sp, #84]	; 0x54
   13380:	ldrsb	r0, [r0]
   13384:	cmp	r0, #0
   13388:	bne	1344c <__assert_fail@plt+0x894>
   1338c:	movw	r0, #136	; 0x88
   13390:	movt	r0, #9
   13394:	ldr	r0, [r0, #76]	; 0x4c
   13398:	movw	r1, #0
   1339c:	cmp	r0, r1
   133a0:	bne	133d4 <__assert_fail@plt+0x81c>
   133a4:	ldr	r1, [sp, #84]	; 0x54
   133a8:	movw	r0, #0
   133ac:	bl	1da90 <__assert_fail@plt+0xaed8>
   133b0:	movw	r1, #0
   133b4:	str	r0, [sp, #24]
   133b8:	mov	r0, r1
   133bc:	movw	r1, #2
   133c0:	movw	r2, #59431	; 0xe827
   133c4:	movt	r2, #7
   133c8:	ldr	r3, [sp, #24]
   133cc:	bl	12780 <error@plt>
   133d0:	b	13430 <__assert_fail@plt+0x878>
   133d4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   133d8:	bl	2bc8c <__assert_fail@plt+0x190d4>
   133dc:	str	r0, [sp, #80]	; 0x50
   133e0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   133e4:	ldr	r0, [sp, #80]	; 0x50
   133e8:	movw	lr, #32014	; 0x7d0e
   133ec:	movt	lr, #7
   133f0:	str	r0, [sp, #20]
   133f4:	mov	r0, lr
   133f8:	str	r3, [sp, #16]
   133fc:	bl	12864 <gettext@plt>
   13400:	movw	r3, #0
   13404:	str	r0, [sp, #12]
   13408:	mov	r0, r3
   1340c:	mov	r1, r3
   13410:	movw	r2, #32003	; 0x7d03
   13414:	movt	r2, #7
   13418:	ldr	r3, [sp, #16]
   1341c:	ldr	lr, [sp, #20]
   13420:	str	lr, [sp]
   13424:	ldr	ip, [sp, #12]
   13428:	str	ip, [sp, #4]
   1342c:	bl	12780 <error@plt>
   13430:	movw	r0, #92	; 0x5c
   13434:	movt	r0, #9
   13438:	movw	r1, #1
   1343c:	str	r1, [r0, #28]
   13440:	movw	r0, #0
   13444:	strb	r0, [sp, #93]	; 0x5d
   13448:	b	132b0 <__assert_fail@plt+0x6f8>
   1344c:	movw	r0, #136	; 0x88
   13450:	movt	r0, #9
   13454:	ldr	r0, [r0, #76]	; 0x4c
   13458:	movw	r1, #0
   1345c:	cmp	r0, r1
   13460:	bne	13480 <__assert_fail@plt+0x8c8>
   13464:	ldr	r0, [sp, #84]	; 0x54
   13468:	movw	r1, #1
   1346c:	and	r1, r1, #1
   13470:	bl	1ce3c <__assert_fail@plt+0xa284>
   13474:	tst	r0, #1
   13478:	beq	13480 <__assert_fail@plt+0x8c8>
   1347c:	b	134b4 <__assert_fail@plt+0x8fc>
   13480:	ldr	r0, [sp, #84]	; 0x54
   13484:	bl	12888 <strlen@plt>
   13488:	movw	lr, #92	; 0x5c
   1348c:	movt	lr, #9
   13490:	str	r0, [lr, #20]
   13494:	ldr	r0, [sp, #84]	; 0x54
   13498:	bl	13574 <__assert_fail@plt+0x9bc>
   1349c:	tst	r0, #1
   134a0:	bne	134b0 <__assert_fail@plt+0x8f8>
   134a4:	movw	r0, #0
   134a8:	strb	r0, [sp, #93]	; 0x5d
   134ac:	b	134b8 <__assert_fail@plt+0x900>
   134b0:	b	132b0 <__assert_fail@plt+0x6f8>
   134b4:	b	134b8 <__assert_fail@plt+0x900>
   134b8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   134bc:	bl	2bcdc <__assert_fail@plt+0x19124>
   134c0:	ldrb	r0, [sp, #93]	; 0x5d
   134c4:	tst	r0, #1
   134c8:	beq	1352c <__assert_fail@plt+0x974>
   134cc:	movw	r0, #136	; 0x88
   134d0:	movt	r0, #9
   134d4:	ldr	r0, [r0, #76]	; 0x4c
   134d8:	movw	r1, #0
   134dc:	cmp	r0, r1
   134e0:	beq	1352c <__assert_fail@plt+0x974>
   134e4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   134e8:	bl	12588 <ferror@plt>
   134ec:	cmp	r0, #0
   134f0:	bne	13504 <__assert_fail@plt+0x94c>
   134f4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   134f8:	bl	12990 <fclose@plt>
   134fc:	cmp	r0, #0
   13500:	beq	1352c <__assert_fail@plt+0x974>
   13504:	movw	r0, #32044	; 0x7d2c
   13508:	movt	r0, #7
   1350c:	bl	12864 <gettext@plt>
   13510:	ldr	r3, [fp, #-32]	; 0xffffffe0
   13514:	movw	lr, #1
   13518:	str	r0, [sp, #8]
   1351c:	mov	r0, lr
   13520:	movw	r1, #0
   13524:	ldr	r2, [sp, #8]
   13528:	bl	12780 <error@plt>
   1352c:	ldrb	r0, [sp, #93]	; 0x5d
   13530:	and	r0, r0, #1
   13534:	strb	r0, [fp, #-9]
   13538:	ldrb	r0, [fp, #-9]
   1353c:	and	r0, r0, #1
   13540:	sub	sp, fp, #8
   13544:	pop	{r4, r5, fp, pc}
   13548:	sub	sp, sp, #4
   1354c:	str	r0, [sp]
   13550:	movw	r0, #62112	; 0xf2a0
   13554:	movt	r0, #8
   13558:	ldr	r0, [r0]
   1355c:	ldr	r1, [sp]
   13560:	str	r0, [r1]
   13564:	movw	r0, #1
   13568:	and	r0, r0, #1
   1356c:	add	sp, sp, #4
   13570:	bx	lr
   13574:	push	{fp, lr}
   13578:	mov	fp, sp
   1357c:	sub	sp, sp, #72	; 0x48
   13580:	str	r0, [fp, #-8]
   13584:	ldr	r0, [fp, #-8]
   13588:	bl	12888 <strlen@plt>
   1358c:	movw	lr, #92	; 0x5c
   13590:	movt	lr, #9
   13594:	str	r0, [lr, #20]
   13598:	mvn	r0, #99	; 0x63
   1359c:	bl	138d0 <__assert_fail@plt+0xd18>
   135a0:	ldr	r0, [fp, #-8]
   135a4:	str	r0, [fp, #-16]
   135a8:	mov	r0, #0
   135ac:	str	r0, [fp, #-12]
   135b0:	movw	r0, #136	; 0x88
   135b4:	movt	r0, #9
   135b8:	ldr	r0, [r0, #48]	; 0x30
   135bc:	cmp	r0, #0
   135c0:	str	r0, [fp, #-32]	; 0xffffffe0
   135c4:	beq	1361c <__assert_fail@plt+0xa64>
   135c8:	b	135cc <__assert_fail@plt+0xa14>
   135cc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   135d0:	cmp	r0, #1
   135d4:	beq	135ec <__assert_fail@plt+0xa34>
   135d8:	b	135dc <__assert_fail@plt+0xa24>
   135dc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   135e0:	cmp	r0, #2
   135e4:	beq	13604 <__assert_fail@plt+0xa4c>
   135e8:	b	13630 <__assert_fail@plt+0xa78>
   135ec:	movw	r0, #62112	; 0xf2a0
   135f0:	movt	r0, #8
   135f4:	ldr	r1, [r0]
   135f8:	orr	r1, r1, #3
   135fc:	str	r1, [r0]
   13600:	b	13630 <__assert_fail@plt+0xa78>
   13604:	movw	r0, #62112	; 0xf2a0
   13608:	movt	r0, #8
   1360c:	ldr	r1, [r0]
   13610:	orr	r1, r1, #17
   13614:	str	r1, [r0]
   13618:	b	13630 <__assert_fail@plt+0xa78>
   1361c:	movw	r0, #62112	; 0xf2a0
   13620:	movt	r0, #8
   13624:	ldr	r1, [r0]
   13628:	orr	r1, r1, #16
   1362c:	str	r1, [r0]
   13630:	movw	r0, #136	; 0x88
   13634:	movt	r0, #9
   13638:	ldrb	r0, [r0, #13]
   1363c:	tst	r0, #1
   13640:	beq	13658 <__assert_fail@plt+0xaa0>
   13644:	movw	r0, #62112	; 0xf2a0
   13648:	movt	r0, #8
   1364c:	ldr	r1, [r0]
   13650:	orr	r1, r1, #64	; 0x40
   13654:	str	r1, [r0]
   13658:	sub	r0, fp, #16
   1365c:	movw	r1, #62112	; 0xf2a0
   13660:	movt	r1, #8
   13664:	ldr	r1, [r1]
   13668:	movw	r2, #0
   1366c:	bl	50db4 <__assert_fail@plt+0x3e1fc>
   13670:	str	r0, [fp, #-20]	; 0xffffffec
   13674:	ldr	r0, [fp, #-20]	; 0xffffffec
   13678:	movw	r1, #0
   1367c:	cmp	r1, r0
   13680:	bne	136e0 <__assert_fail@plt+0xb28>
   13684:	bl	128d0 <__errno_location@plt>
   13688:	ldr	r1, [r0]
   1368c:	movw	r0, #32061	; 0x7d3d
   13690:	movt	r0, #7
   13694:	str	r1, [sp, #36]	; 0x24
   13698:	bl	12864 <gettext@plt>
   1369c:	ldr	r1, [fp, #-8]
   136a0:	movw	lr, #0
   136a4:	str	r0, [sp, #32]
   136a8:	mov	r0, lr
   136ac:	bl	1da90 <__assert_fail@plt+0xaed8>
   136b0:	movw	r1, #0
   136b4:	str	r0, [sp, #28]
   136b8:	mov	r0, r1
   136bc:	ldr	r1, [sp, #36]	; 0x24
   136c0:	ldr	r2, [sp, #32]
   136c4:	ldr	r3, [sp, #28]
   136c8:	bl	12780 <error@plt>
   136cc:	movw	r0, #92	; 0x5c
   136d0:	movt	r0, #9
   136d4:	movw	r1, #1
   136d8:	str	r1, [r0, #28]
   136dc:	b	138b0 <__assert_fail@plt+0xcf8>
   136e0:	ldr	r0, [pc, #484]	; 138cc <__assert_fail@plt+0xd14>
   136e4:	str	r0, [fp, #-28]	; 0xffffffe4
   136e8:	bl	128d0 <__errno_location@plt>
   136ec:	movw	lr, #0
   136f0:	str	lr, [r0]
   136f4:	ldr	r0, [fp, #-20]	; 0xffffffec
   136f8:	bl	51ec0 <__assert_fail@plt+0x3f308>
   136fc:	str	r0, [fp, #-24]	; 0xffffffe8
   13700:	movw	lr, #0
   13704:	cmp	r0, lr
   13708:	beq	137c8 <__assert_fail@plt+0xc10>
   1370c:	movw	r0, #92	; 0x5c
   13710:	movt	r0, #9
   13714:	ldrb	r0, [r0, #32]
   13718:	tst	r0, #1
   1371c:	beq	13738 <__assert_fail@plt+0xb80>
   13720:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13724:	ldr	r0, [r0, #48]	; 0x30
   13728:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1372c:	cmp	r0, r1
   13730:	beq	13738 <__assert_fail@plt+0xb80>
   13734:	bl	1c130 <__assert_fail@plt+0x9578>
   13738:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1373c:	ldr	r0, [r0, #48]	; 0x30
   13740:	str	r0, [fp, #-28]	; 0xffffffe4
   13744:	movw	r0, #0
   13748:	movw	r1, #92	; 0x5c
   1374c:	movt	r1, #9
   13750:	strb	r0, [r1, #40]	; 0x28
   13754:	strb	r0, [r1, #4]
   13758:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1375c:	ldr	r0, [r0, #80]	; 0x50
   13760:	cmp	r0, #0
   13764:	movw	r0, #0
   13768:	movne	r0, #1
   1376c:	mvn	r2, #0
   13770:	eor	r0, r0, r2
   13774:	eor	r0, r0, r2
   13778:	and	r0, r0, #1
   1377c:	strb	r0, [r1, #5]
   13780:	ldrb	r0, [r1, #5]
   13784:	tst	r0, #1
   13788:	beq	1379c <__assert_fail@plt+0xbe4>
   1378c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13790:	ldr	r0, [r0, #80]	; 0x50
   13794:	str	r0, [sp, #24]
   13798:	b	137a8 <__assert_fail@plt+0xbf0>
   1379c:	movw	r0, #0
   137a0:	str	r0, [sp, #24]
   137a4:	b	137a8 <__assert_fail@plt+0xbf0>
   137a8:	ldr	r0, [sp, #24]
   137ac:	movw	r1, #92	; 0x5c
   137b0:	movt	r1, #9
   137b4:	str	r0, [r1, #8]
   137b8:	ldr	r0, [fp, #-20]	; 0xffffffec
   137bc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   137c0:	bl	13a00 <__assert_fail@plt+0xe48>
   137c4:	b	136e8 <__assert_fail@plt+0xb30>
   137c8:	bl	128d0 <__errno_location@plt>
   137cc:	ldr	r0, [r0]
   137d0:	cmp	r0, #0
   137d4:	beq	13840 <__assert_fail@plt+0xc88>
   137d8:	bl	128d0 <__errno_location@plt>
   137dc:	ldr	r1, [r0]
   137e0:	ldr	r0, [fp, #-8]
   137e4:	movw	lr, #0
   137e8:	str	r0, [sp, #20]
   137ec:	mov	r0, lr
   137f0:	ldr	lr, [sp, #20]
   137f4:	str	r1, [sp, #16]
   137f8:	mov	r1, lr
   137fc:	bl	1da90 <__assert_fail@plt+0xaed8>
   13800:	movw	r1, #0
   13804:	str	r0, [sp, #12]
   13808:	mov	r0, r1
   1380c:	ldr	r1, [sp, #16]
   13810:	movw	r2, #32078	; 0x7d4e
   13814:	movt	r2, #7
   13818:	ldr	r3, [sp, #12]
   1381c:	bl	12780 <error@plt>
   13820:	movw	r0, #92	; 0x5c
   13824:	movt	r0, #9
   13828:	movw	r1, #1
   1382c:	str	r1, [r0, #28]
   13830:	movw	r0, #0
   13834:	and	r0, r0, #1
   13838:	strb	r0, [fp, #-1]
   1383c:	b	138bc <__assert_fail@plt+0xd04>
   13840:	ldr	r0, [fp, #-20]	; 0xffffffec
   13844:	bl	51bfc <__assert_fail@plt+0x3f044>
   13848:	movw	lr, #0
   1384c:	cmp	lr, r0
   13850:	beq	138a8 <__assert_fail@plt+0xcf0>
   13854:	bl	128d0 <__errno_location@plt>
   13858:	ldr	r1, [r0]
   1385c:	movw	r0, #32136	; 0x7d88
   13860:	movt	r0, #7
   13864:	str	r1, [sp, #8]
   13868:	bl	12864 <gettext@plt>
   1386c:	ldr	r3, [fp, #-8]
   13870:	movw	r1, #0
   13874:	str	r0, [sp, #4]
   13878:	mov	r0, r1
   1387c:	ldr	r1, [sp, #8]
   13880:	ldr	r2, [sp, #4]
   13884:	bl	12780 <error@plt>
   13888:	movw	r0, #92	; 0x5c
   1388c:	movt	r0, #9
   13890:	movw	r1, #1
   13894:	str	r1, [r0, #28]
   13898:	movw	r0, #0
   1389c:	and	r0, r0, #1
   138a0:	strb	r0, [fp, #-1]
   138a4:	b	138bc <__assert_fail@plt+0xd04>
   138a8:	movw	r0, #0
   138ac:	str	r0, [fp, #-20]	; 0xffffffec
   138b0:	movw	r0, #1
   138b4:	and	r0, r0, #1
   138b8:	strb	r0, [fp, #-1]
   138bc:	ldrb	r0, [fp, #-1]
   138c0:	and	r0, r0, #1
   138c4:	mov	sp, fp
   138c8:	pop	{fp, pc}
   138cc:	andhi	r0, r0, r0
   138d0:	push	{fp, lr}
   138d4:	mov	fp, sp
   138d8:	sub	sp, sp, #8
   138dc:	str	r0, [sp, #4]
   138e0:	movw	r0, #62112	; 0xf2a0
   138e4:	movt	r0, #8
   138e8:	ldr	r0, [r0]
   138ec:	and	r0, r0, #512	; 0x200
   138f0:	cmp	r0, #0
   138f4:	beq	139f4 <__assert_fail@plt+0xe3c>
   138f8:	ldr	r0, [sp, #4]
   138fc:	cmn	r0, #100	; 0x64
   13900:	beq	13910 <__assert_fail@plt+0xd58>
   13904:	ldr	r0, [sp, #4]
   13908:	cmp	r0, #0
   1390c:	blt	13914 <__assert_fail@plt+0xd5c>
   13910:	b	13934 <__assert_fail@plt+0xd7c>
   13914:	movw	r0, #32191	; 0x7dbf
   13918:	movt	r0, #7
   1391c:	movw	r1, #31787	; 0x7c2b
   13920:	movt	r1, #7
   13924:	movw	r2, #107	; 0x6b
   13928:	movw	r3, #32225	; 0x7de1
   1392c:	movt	r3, #7
   13930:	bl	12bb8 <__assert_fail@plt>
   13934:	ldr	r0, [sp, #4]
   13938:	movw	r1, #92	; 0x5c
   1393c:	movt	r1, #9
   13940:	str	r0, [r1, #16]
   13944:	movw	r0, #62116	; 0xf2a4
   13948:	movt	r0, #8
   1394c:	ldr	r0, [r0]
   13950:	cmp	r0, #0
   13954:	bge	139f0 <__assert_fail@plt+0xe38>
   13958:	ldr	r0, [sp, #4]
   1395c:	mvn	r1, #99	; 0x63
   13960:	cmp	r1, r0
   13964:	bne	1397c <__assert_fail@plt+0xdc4>
   13968:	movw	r0, #62116	; 0xf2a4
   1396c:	movt	r0, #8
   13970:	mvn	r1, #99	; 0x63
   13974:	str	r1, [r0]
   13978:	b	139ec <__assert_fail@plt+0xe34>
   1397c:	ldr	r0, [sp, #4]
   13980:	cmp	r0, #0
   13984:	blt	139a0 <__assert_fail@plt+0xde8>
   13988:	ldr	r0, [sp, #4]
   1398c:	bl	2c19c <__assert_fail@plt+0x195e4>
   13990:	movw	lr, #62116	; 0xf2a4
   13994:	movt	lr, #8
   13998:	str	r0, [lr]
   1399c:	b	139e8 <__assert_fail@plt+0xe30>
   139a0:	movw	r0, #62116	; 0xf2a4
   139a4:	movt	r0, #8
   139a8:	ldr	r0, [r0]
   139ac:	cmp	r0, #0
   139b0:	bge	139c0 <__assert_fail@plt+0xe08>
   139b4:	ldr	r0, [sp, #4]
   139b8:	cmp	r0, #0
   139bc:	blt	139c4 <__assert_fail@plt+0xe0c>
   139c0:	b	139e4 <__assert_fail@plt+0xe2c>
   139c4:	movw	r0, #32246	; 0x7df6
   139c8:	movt	r0, #7
   139cc:	movw	r1, #31787	; 0x7c2b
   139d0:	movt	r1, #7
   139d4:	movw	r2, #125	; 0x7d
   139d8:	movw	r3, #32225	; 0x7de1
   139dc:	movt	r3, #7
   139e0:	bl	12bb8 <__assert_fail@plt>
   139e4:	b	139e8 <__assert_fail@plt+0xe30>
   139e8:	b	139ec <__assert_fail@plt+0xe34>
   139ec:	b	139f0 <__assert_fail@plt+0xe38>
   139f0:	b	139f8 <__assert_fail@plt+0xe40>
   139f4:	b	139f8 <__assert_fail@plt+0xe40>
   139f8:	mov	sp, fp
   139fc:	pop	{fp, pc}
   13a00:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   13a04:	add	fp, sp, #24
   13a08:	sub	sp, sp, #232	; 0xe8
   13a0c:	str	r0, [fp, #-28]	; 0xffffffe4
   13a10:	str	r1, [fp, #-32]	; 0xffffffe0
   13a14:	movw	r0, #136	; 0x88
   13a18:	movt	r0, #9
   13a1c:	ldr	r0, [r0, #44]	; 0x2c
   13a20:	and	r0, r0, #4
   13a24:	cmp	r0, #0
   13a28:	beq	13b20 <__assert_fail@plt+0xf68>
   13a2c:	movw	r0, #63272	; 0xf728
   13a30:	movt	r0, #8
   13a34:	ldr	r0, [r0]
   13a38:	movw	r1, #136	; 0x88
   13a3c:	movt	r1, #9
   13a40:	ldr	r1, [r1, #72]	; 0x48
   13a44:	ldr	r2, [fp, #-32]	; 0xffffffe0
   13a48:	ldr	r2, [r2, #28]
   13a4c:	movw	r3, #0
   13a50:	str	r0, [sp, #104]	; 0x68
   13a54:	mov	r0, r3
   13a58:	bl	4a828 <__assert_fail@plt+0x37c70>
   13a5c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   13a60:	ldrh	r1, [r1, #56]	; 0x38
   13a64:	str	r0, [sp, #100]	; 0x64
   13a68:	mov	r0, r1
   13a6c:	bl	14174 <__assert_fail@plt+0x15bc>
   13a70:	ldr	r1, [fp, #-32]	; 0xffffffe0
   13a74:	ldr	r1, [r1, #48]	; 0x30
   13a78:	movw	r2, #62120	; 0xf2a8
   13a7c:	movt	r2, #8
   13a80:	ldr	r2, [r2]
   13a84:	movw	r3, #136	; 0x88
   13a88:	movt	r3, #9
   13a8c:	ldr	r3, [r3, #72]	; 0x48
   13a90:	ldr	lr, [fp, #-32]	; 0xffffffe0
   13a94:	ldr	lr, [lr, #28]
   13a98:	movw	ip, #1
   13a9c:	str	r0, [sp, #96]	; 0x60
   13aa0:	mov	r0, ip
   13aa4:	str	r1, [sp, #92]	; 0x5c
   13aa8:	mov	r1, r3
   13aac:	str	r2, [sp, #88]	; 0x58
   13ab0:	mov	r2, lr
   13ab4:	bl	4a828 <__assert_fail@plt+0x37c70>
   13ab8:	movw	r1, #136	; 0x88
   13abc:	movt	r1, #9
   13ac0:	ldr	r1, [r1, #72]	; 0x48
   13ac4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   13ac8:	ldr	r2, [r2, #24]
   13acc:	movw	r3, #2
   13ad0:	str	r0, [sp, #84]	; 0x54
   13ad4:	mov	r0, r3
   13ad8:	bl	4a828 <__assert_fail@plt+0x37c70>
   13adc:	ldr	r1, [sp, #104]	; 0x68
   13ae0:	str	r0, [sp, #80]	; 0x50
   13ae4:	mov	r0, r1
   13ae8:	movw	r1, #32274	; 0x7e12
   13aec:	movt	r1, #7
   13af0:	ldr	r2, [sp, #100]	; 0x64
   13af4:	ldr	r3, [sp, #96]	; 0x60
   13af8:	ldr	ip, [sp, #92]	; 0x5c
   13afc:	str	ip, [sp]
   13b00:	ldr	lr, [sp, #88]	; 0x58
   13b04:	str	lr, [sp, #4]
   13b08:	ldr	r4, [sp, #84]	; 0x54
   13b0c:	str	r4, [sp, #8]
   13b10:	ldr	r5, [sp, #80]	; 0x50
   13b14:	str	r5, [sp, #12]
   13b18:	bl	128c4 <fprintf@plt>
   13b1c:	str	r0, [sp, #76]	; 0x4c
   13b20:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13b24:	ldrh	r0, [r0, #56]	; 0x38
   13b28:	cmp	r0, #6
   13b2c:	bne	13b38 <__assert_fail@plt+0xf80>
   13b30:	bl	142f4 <__assert_fail@plt+0x173c>
   13b34:	b	13b6c <__assert_fail@plt+0xfb4>
   13b38:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13b3c:	ldr	r0, [r0, #48]	; 0x30
   13b40:	movw	r1, #62120	; 0xf2a8
   13b44:	movt	r1, #8
   13b48:	ldr	r1, [r1]
   13b4c:	cmp	r0, r1
   13b50:	bgt	13b64 <__assert_fail@plt+0xfac>
   13b54:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13b58:	ldr	r0, [r0, #48]	; 0x30
   13b5c:	cmp	r0, #0
   13b60:	bne	13b68 <__assert_fail@plt+0xfb0>
   13b64:	bl	142f4 <__assert_fail@plt+0x173c>
   13b68:	b	13b6c <__assert_fail@plt+0xfb4>
   13b6c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   13b70:	ldr	r0, [r0, #32]
   13b74:	bl	138d0 <__assert_fail@plt+0xd18>
   13b78:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13b7c:	ldr	r0, [r0, #48]	; 0x30
   13b80:	movw	lr, #62120	; 0xf2a8
   13b84:	movt	lr, #8
   13b88:	str	r0, [lr]
   13b8c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13b90:	ldr	lr, [r0, #160]	; 0xa0
   13b94:	ldr	r0, [r0, #164]	; 0xa4
   13b98:	str	r0, [sp, #220]	; 0xdc
   13b9c:	str	lr, [sp, #216]	; 0xd8
   13ba0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13ba4:	ldrh	r0, [r0, #56]	; 0x38
   13ba8:	cmp	r0, #7
   13bac:	bne	13bc8 <__assert_fail@plt+0x1010>
   13bb0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13bb4:	ldr	r0, [r0, #32]
   13bb8:	ldr	r1, [fp, #-32]	; 0xffffffe0
   13bbc:	ldr	r1, [r1, #28]
   13bc0:	bl	1c000 <__assert_fail@plt+0x9448>
   13bc4:	b	1416c <__assert_fail@plt+0x15b4>
   13bc8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13bcc:	ldrh	r0, [r0, #56]	; 0x38
   13bd0:	cmp	r0, #4
   13bd4:	bne	13c08 <__assert_fail@plt+0x1050>
   13bd8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13bdc:	ldr	r0, [r0, #32]
   13be0:	ldr	r1, [fp, #-32]	; 0xffffffe0
   13be4:	ldr	r1, [r1, #28]
   13be8:	bl	1c000 <__assert_fail@plt+0x9448>
   13bec:	movw	r0, #136	; 0x88
   13bf0:	movt	r0, #9
   13bf4:	ldrb	r0, [r0]
   13bf8:	tst	r0, #1
   13bfc:	beq	13c04 <__assert_fail@plt+0x104c>
   13c00:	b	1416c <__assert_fail@plt+0x15b4>
   13c04:	b	13cf8 <__assert_fail@plt+0x1140>
   13c08:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13c0c:	ldrh	r0, [r0, #56]	; 0x38
   13c10:	cmp	r0, #2
   13c14:	bne	13c34 <__assert_fail@plt+0x107c>
   13c18:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13c1c:	bl	14360 <__assert_fail@plt+0x17a8>
   13c20:	movw	r0, #92	; 0x5c
   13c24:	movt	r0, #9
   13c28:	movw	lr, #1
   13c2c:	str	lr, [r0, #28]
   13c30:	b	1416c <__assert_fail@plt+0x15b4>
   13c34:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13c38:	ldrh	r0, [r0, #56]	; 0x38
   13c3c:	cmp	r0, #13
   13c40:	bne	13c70 <__assert_fail@plt+0x10b8>
   13c44:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13c48:	ldr	r0, [r0, #24]
   13c4c:	bl	14444 <__assert_fail@plt+0x188c>
   13c50:	tst	r0, #1
   13c54:	beq	13c6c <__assert_fail@plt+0x10b4>
   13c58:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13c5c:	ldr	r1, [r0, #28]
   13c60:	movw	r0, #40	; 0x28
   13c64:	bl	1c000 <__assert_fail@plt+0x9448>
   13c68:	b	1416c <__assert_fail@plt+0x15b4>
   13c6c:	b	13cf0 <__assert_fail@plt+0x1138>
   13c70:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13c74:	ldrh	r0, [r0, #56]	; 0x38
   13c78:	cmp	r0, #10
   13c7c:	bne	13cec <__assert_fail@plt+0x1134>
   13c80:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13c84:	ldr	r0, [r0, #48]	; 0x30
   13c88:	cmp	r0, #0
   13c8c:	bne	13ca8 <__assert_fail@plt+0x10f0>
   13c90:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13c94:	ldr	r0, [r0, #32]
   13c98:	ldr	r1, [fp, #-32]	; 0xffffffe0
   13c9c:	ldr	r1, [r1, #28]
   13ca0:	bl	1c000 <__assert_fail@plt+0x9448>
   13ca4:	b	1416c <__assert_fail@plt+0x15b4>
   13ca8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13cac:	ldr	r0, [r0, #24]
   13cb0:	bl	14444 <__assert_fail@plt+0x188c>
   13cb4:	tst	r0, #1
   13cb8:	beq	13cd0 <__assert_fail@plt+0x1118>
   13cbc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13cc0:	ldr	r1, [r0, #28]
   13cc4:	movw	r0, #40	; 0x28
   13cc8:	bl	1c000 <__assert_fail@plt+0x9448>
   13ccc:	b	1416c <__assert_fail@plt+0x15b4>
   13cd0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13cd4:	ldr	r0, [r0, #32]
   13cd8:	ldr	r1, [fp, #-32]	; 0xffffffe0
   13cdc:	ldr	r1, [r1, #28]
   13ce0:	bl	1c000 <__assert_fail@plt+0x9448>
   13ce4:	b	13ce8 <__assert_fail@plt+0x1130>
   13ce8:	b	13cec <__assert_fail@plt+0x1134>
   13cec:	b	13cf0 <__assert_fail@plt+0x1138>
   13cf0:	b	13cf4 <__assert_fail@plt+0x113c>
   13cf4:	b	13cf8 <__assert_fail@plt+0x1140>
   13cf8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13cfc:	ldrh	r0, [r0, #56]	; 0x38
   13d00:	cmp	r0, #11
   13d04:	beq	13d18 <__assert_fail@plt+0x1160>
   13d08:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13d0c:	ldrh	r0, [r0, #56]	; 0x38
   13d10:	cmp	r0, #10
   13d14:	bne	13dac <__assert_fail@plt+0x11f4>
   13d18:	movw	r0, #92	; 0x5c
   13d1c:	movt	r0, #9
   13d20:	ldrb	r0, [r0, #4]
   13d24:	tst	r0, #1
   13d28:	bne	13d30 <__assert_fail@plt+0x1178>
   13d2c:	b	13d50 <__assert_fail@plt+0x1198>
   13d30:	movw	r0, #32378	; 0x7e7a
   13d34:	movt	r0, #7
   13d38:	movw	r1, #31787	; 0x7c2b
   13d3c:	movt	r1, #7
   13d40:	movw	r2, #380	; 0x17c
   13d44:	movw	r3, #32395	; 0x7e8b
   13d48:	movt	r3, #7
   13d4c:	bl	12bb8 <__assert_fail@plt>
   13d50:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13d54:	ldrh	r0, [r0, #56]	; 0x38
   13d58:	cmp	r0, #11
   13d5c:	beq	13d74 <__assert_fail@plt+0x11bc>
   13d60:	movw	r0, #92	; 0x5c
   13d64:	movt	r0, #9
   13d68:	ldr	r0, [r0, #8]
   13d6c:	cmp	r0, #0
   13d70:	bne	13d78 <__assert_fail@plt+0x11c0>
   13d74:	b	13d98 <__assert_fail@plt+0x11e0>
   13d78:	movw	r0, #32435	; 0x7eb3
   13d7c:	movt	r0, #7
   13d80:	movw	r1, #31787	; 0x7c2b
   13d84:	movt	r1, #7
   13d88:	movw	r2, #381	; 0x17d
   13d8c:	movw	r3, #32395	; 0x7e8b
   13d90:	movt	r3, #7
   13d94:	bl	12bb8 <__assert_fail@plt>
   13d98:	movw	r0, #92	; 0x5c
   13d9c:	movt	r0, #9
   13da0:	ldr	r0, [r0, #8]
   13da4:	str	r0, [sp, #116]	; 0x74
   13da8:	b	13e54 <__assert_fail@plt+0x129c>
   13dac:	movw	r0, #1
   13db0:	movw	r1, #92	; 0x5c
   13db4:	movt	r1, #9
   13db8:	strb	r0, [r1, #4]
   13dbc:	strb	r0, [r1, #5]
   13dc0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13dc4:	add	r0, r0, #64	; 0x40
   13dc8:	add	r2, sp, #120	; 0x78
   13dcc:	str	r0, [sp, #72]	; 0x48
   13dd0:	mov	r0, r2
   13dd4:	ldr	r2, [sp, #72]	; 0x48
   13dd8:	str	r1, [sp, #68]	; 0x44
   13ddc:	mov	r1, r2
   13de0:	movw	r2, #104	; 0x68
   13de4:	bl	125c4 <memcpy@plt>
   13de8:	ldr	r0, [sp, #136]	; 0x88
   13dec:	str	r0, [sp, #116]	; 0x74
   13df0:	ldr	r1, [sp, #68]	; 0x44
   13df4:	str	r0, [r1, #8]
   13df8:	ldr	r0, [sp, #116]	; 0x74
   13dfc:	movw	r2, #0
   13e00:	cmp	r2, r0
   13e04:	bne	13e50 <__assert_fail@plt+0x1298>
   13e08:	movw	r0, #32480	; 0x7ee0
   13e0c:	movt	r0, #7
   13e10:	bl	12864 <gettext@plt>
   13e14:	movw	lr, #136	; 0x88
   13e18:	movt	lr, #9
   13e1c:	ldr	r1, [lr, #72]	; 0x48
   13e20:	ldr	lr, [fp, #-32]	; 0xffffffe0
   13e24:	ldr	r2, [lr, #28]
   13e28:	movw	lr, #0
   13e2c:	str	r0, [sp, #64]	; 0x40
   13e30:	mov	r0, lr
   13e34:	bl	4a828 <__assert_fail@plt+0x37c70>
   13e38:	movw	r1, #0
   13e3c:	str	r0, [sp, #60]	; 0x3c
   13e40:	mov	r0, r1
   13e44:	ldr	r2, [sp, #64]	; 0x40
   13e48:	ldr	r3, [sp, #60]	; 0x3c
   13e4c:	bl	12780 <error@plt>
   13e50:	b	13e54 <__assert_fail@plt+0x129c>
   13e54:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13e58:	ldr	r0, [r0, #48]	; 0x30
   13e5c:	movw	r1, #92	; 0x5c
   13e60:	movt	r1, #9
   13e64:	str	r0, [r1]
   13e68:	ldr	r0, [sp, #116]	; 0x74
   13e6c:	cmp	r0, #0
   13e70:	beq	13eac <__assert_fail@plt+0x12f4>
   13e74:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13e78:	ldr	r1, [r0, #28]
   13e7c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13e80:	add	r2, r0, #168	; 0xa8
   13e84:	add	r0, sp, #116	; 0x74
   13e88:	add	r3, sp, #120	; 0x78
   13e8c:	movw	ip, #0
   13e90:	and	ip, ip, #1
   13e94:	str	ip, [sp]
   13e98:	bl	1cc70 <__assert_fail@plt+0xa0b8>
   13e9c:	tst	r0, #1
   13ea0:	bne	13ea8 <__assert_fail@plt+0x12f0>
   13ea4:	b	1416c <__assert_fail@plt+0x15b4>
   13ea8:	b	13eac <__assert_fail@plt+0x12f4>
   13eac:	movw	r0, #0
   13eb0:	str	r0, [sp, #112]	; 0x70
   13eb4:	ldr	r0, [sp, #116]	; 0x74
   13eb8:	and	r0, r0, #61440	; 0xf000
   13ebc:	cmp	r0, #16384	; 0x4000
   13ec0:	movw	r0, #1
   13ec4:	str	r0, [sp, #56]	; 0x38
   13ec8:	beq	13f20 <__assert_fail@plt+0x1368>
   13ecc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13ed0:	ldrh	r0, [r0, #56]	; 0x38
   13ed4:	movw	r1, #1
   13ed8:	cmp	r1, r0
   13edc:	movw	r0, #1
   13ee0:	str	r0, [sp, #56]	; 0x38
   13ee4:	beq	13f20 <__assert_fail@plt+0x1368>
   13ee8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13eec:	ldrh	r0, [r0, #56]	; 0x38
   13ef0:	movw	r1, #6
   13ef4:	cmp	r1, r0
   13ef8:	movw	r0, #1
   13efc:	str	r0, [sp, #56]	; 0x38
   13f00:	beq	13f20 <__assert_fail@plt+0x1368>
   13f04:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13f08:	ldrh	r0, [r0, #56]	; 0x38
   13f0c:	movw	r1, #2
   13f10:	cmp	r1, r0
   13f14:	movw	r0, #0
   13f18:	moveq	r0, #1
   13f1c:	str	r0, [sp, #56]	; 0x38
   13f20:	ldr	r0, [sp, #56]	; 0x38
   13f24:	and	r0, r0, #1
   13f28:	str	r0, [sp, #108]	; 0x6c
   13f2c:	ldr	r0, [sp, #108]	; 0x6c
   13f30:	cmp	r0, #0
   13f34:	beq	13f60 <__assert_fail@plt+0x13a8>
   13f38:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13f3c:	ldrh	r0, [r0, #56]	; 0x38
   13f40:	cmp	r0, #11
   13f44:	bne	13f60 <__assert_fail@plt+0x13a8>
   13f48:	ldr	r0, [fp, #-28]	; 0xffffffe4
   13f4c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   13f50:	movw	r2, #1
   13f54:	bl	53e14 <__assert_fail@plt+0x4125c>
   13f58:	str	r0, [sp, #52]	; 0x34
   13f5c:	b	1416c <__assert_fail@plt+0x15b4>
   13f60:	movw	r0, #136	; 0x88
   13f64:	movt	r0, #9
   13f68:	ldr	r0, [r0, #4]
   13f6c:	cmp	r0, #0
   13f70:	blt	13fd0 <__assert_fail@plt+0x1418>
   13f74:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13f78:	ldr	r0, [r0, #48]	; 0x30
   13f7c:	movw	r1, #136	; 0x88
   13f80:	movt	r1, #9
   13f84:	ldr	r1, [r1, #4]
   13f88:	cmp	r0, r1
   13f8c:	blt	13fcc <__assert_fail@plt+0x1414>
   13f90:	ldr	r0, [fp, #-28]	; 0xffffffe4
   13f94:	ldr	r1, [fp, #-32]	; 0xffffffe0
   13f98:	movw	r2, #4
   13f9c:	bl	53e14 <__assert_fail@plt+0x4125c>
   13fa0:	ldr	r1, [fp, #-32]	; 0xffffffe0
   13fa4:	ldr	r1, [r1, #48]	; 0x30
   13fa8:	movw	r2, #136	; 0x88
   13fac:	movt	r2, #9
   13fb0:	ldr	r2, [r2, #4]
   13fb4:	cmp	r1, r2
   13fb8:	str	r0, [sp, #48]	; 0x30
   13fbc:	ble	13fc8 <__assert_fail@plt+0x1410>
   13fc0:	movw	r0, #1
   13fc4:	str	r0, [sp, #112]	; 0x70
   13fc8:	b	13fcc <__assert_fail@plt+0x1414>
   13fcc:	b	13fd0 <__assert_fail@plt+0x1418>
   13fd0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13fd4:	ldrh	r0, [r0, #56]	; 0x38
   13fd8:	cmp	r0, #1
   13fdc:	bne	14000 <__assert_fail@plt+0x1448>
   13fe0:	movw	r0, #136	; 0x88
   13fe4:	movt	r0, #9
   13fe8:	ldrb	r0, [r0]
   13fec:	tst	r0, #1
   13ff0:	bne	14000 <__assert_fail@plt+0x1448>
   13ff4:	movw	r0, #1
   13ff8:	str	r0, [sp, #112]	; 0x70
   13ffc:	b	1405c <__assert_fail@plt+0x14a4>
   14000:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14004:	ldrh	r0, [r0, #56]	; 0x38
   14008:	cmp	r0, #6
   1400c:	bne	14030 <__assert_fail@plt+0x1478>
   14010:	movw	r0, #136	; 0x88
   14014:	movt	r0, #9
   14018:	ldrb	r0, [r0]
   1401c:	tst	r0, #1
   14020:	beq	14030 <__assert_fail@plt+0x1478>
   14024:	movw	r0, #1
   14028:	str	r0, [sp, #112]	; 0x70
   1402c:	b	14058 <__assert_fail@plt+0x14a0>
   14030:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14034:	ldr	r0, [r0, #48]	; 0x30
   14038:	movw	r1, #136	; 0x88
   1403c:	movt	r1, #9
   14040:	ldr	r1, [r1, #8]
   14044:	cmp	r0, r1
   14048:	bge	14054 <__assert_fail@plt+0x149c>
   1404c:	movw	r0, #1
   14050:	str	r0, [sp, #112]	; 0x70
   14054:	b	14058 <__assert_fail@plt+0x14a0>
   14058:	b	1405c <__assert_fail@plt+0x14a4>
   1405c:	movw	r0, #136	; 0x88
   14060:	movt	r0, #9
   14064:	ldr	r0, [r0, #44]	; 0x2c
   14068:	and	r0, r0, #4
   1406c:	cmp	r0, #0
   14070:	beq	14130 <__assert_fail@plt+0x1578>
   14074:	movw	r0, #63272	; 0xf728
   14078:	movt	r0, #8
   1407c:	ldr	r0, [r0]
   14080:	movw	r1, #136	; 0x88
   14084:	movt	r1, #9
   14088:	ldr	r1, [r1, #72]	; 0x48
   1408c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   14090:	ldr	r2, [r2, #28]
   14094:	movw	r3, #0
   14098:	str	r0, [sp, #44]	; 0x2c
   1409c:	mov	r0, r3
   140a0:	bl	4a828 <__assert_fail@plt+0x37c70>
   140a4:	ldr	r1, [fp, #-32]	; 0xffffffe0
   140a8:	ldrh	r1, [r1, #56]	; 0x38
   140ac:	str	r0, [sp, #40]	; 0x28
   140b0:	mov	r0, r1
   140b4:	bl	14174 <__assert_fail@plt+0x15bc>
   140b8:	ldr	r1, [sp, #108]	; 0x6c
   140bc:	ldr	r2, [sp, #112]	; 0x70
   140c0:	movw	r3, #92	; 0x5c
   140c4:	movt	r3, #9
   140c8:	ldrb	lr, [r3, #4]
   140cc:	and	lr, lr, #1
   140d0:	ldrb	r3, [r3, #5]
   140d4:	and	r3, r3, #1
   140d8:	ldr	ip, [sp, #44]	; 0x2c
   140dc:	str	r0, [sp, #36]	; 0x24
   140e0:	mov	r0, ip
   140e4:	movw	r4, #32523	; 0x7f0b
   140e8:	movt	r4, #7
   140ec:	str	r1, [sp, #32]
   140f0:	mov	r1, r4
   140f4:	ldr	r4, [sp, #40]	; 0x28
   140f8:	str	r2, [sp, #28]
   140fc:	mov	r2, r4
   14100:	ldr	r5, [sp, #36]	; 0x24
   14104:	str	r3, [sp, #24]
   14108:	mov	r3, r5
   1410c:	ldr	r6, [sp, #32]
   14110:	str	r6, [sp]
   14114:	ldr	r7, [sp, #28]
   14118:	str	r7, [sp, #4]
   1411c:	str	lr, [sp, #8]
   14120:	ldr	lr, [sp, #24]
   14124:	str	lr, [sp, #12]
   14128:	bl	128c4 <fprintf@plt>
   1412c:	str	r0, [sp, #20]
   14130:	ldr	r0, [sp, #112]	; 0x70
   14134:	cmp	r0, #0
   14138:	bne	1414c <__assert_fail@plt+0x1594>
   1413c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   14140:	ldr	r1, [fp, #-32]	; 0xffffffe0
   14144:	add	r2, sp, #120	; 0x78
   14148:	bl	144c0 <__assert_fail@plt+0x1908>
   1414c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14150:	ldrh	r0, [r0, #56]	; 0x38
   14154:	cmp	r0, #6
   14158:	bne	1416c <__assert_fail@plt+0x15b4>
   1415c:	movw	r0, #92	; 0x5c
   14160:	movt	r0, #9
   14164:	movw	r1, #0
   14168:	strb	r1, [r0, #24]
   1416c:	sub	sp, fp, #24
   14170:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   14174:	push	{fp, lr}
   14178:	mov	fp, sp
   1417c:	sub	sp, sp, #16
   14180:	str	r0, [sp, #8]
   14184:	ldr	r0, [sp, #8]
   14188:	sub	r0, r0, #1
   1418c:	cmp	r0, #13
   14190:	str	r0, [sp, #4]
   14194:	bhi	142c0 <__assert_fail@plt+0x1708>
   14198:	add	r0, pc, #8
   1419c:	ldr	r1, [sp, #4]
   141a0:	ldr	r0, [r0, r1, lsl #2]
   141a4:	mov	pc, r0
   141a8:	andeq	r4, r1, r0, ror #3
   141ac:	strdeq	r4, [r1], -r0
   141b0:	andeq	r4, r1, r0, lsl #4
   141b4:	andeq	r4, r1, r0, lsl r2
   141b8:	andeq	r4, r1, r0, lsr #4
   141bc:	andeq	r4, r1, r0, lsr r2
   141c0:	andeq	r4, r1, r0, asr #4
   141c4:	andeq	r4, r1, r0, asr r2
   141c8:	andeq	r4, r1, r0, ror #4
   141cc:	andeq	r4, r1, r0, ror r2
   141d0:	andeq	r4, r1, r0, lsl #5
   141d4:	muleq	r1, r0, r2
   141d8:	andeq	r4, r1, r0, lsr #5
   141dc:			; <UNDEFINED> instruction: 0x000142b0
   141e0:	movw	r0, #32615	; 0x7f67
   141e4:	movt	r0, #7
   141e8:	str	r0, [fp, #-4]
   141ec:	b	142e8 <__assert_fail@plt+0x1730>
   141f0:	movw	r0, #32621	; 0x7f6d
   141f4:	movt	r0, #7
   141f8:	str	r0, [fp, #-4]
   141fc:	b	142e8 <__assert_fail@plt+0x1730>
   14200:	movw	r0, #32628	; 0x7f74
   14204:	movt	r0, #7
   14208:	str	r0, [fp, #-4]
   1420c:	b	142e8 <__assert_fail@plt+0x1730>
   14210:	movw	r0, #32640	; 0x7f80
   14214:	movt	r0, #7
   14218:	str	r0, [fp, #-4]
   1421c:	b	142e8 <__assert_fail@plt+0x1730>
   14220:	movw	r0, #32648	; 0x7f88
   14224:	movt	r0, #7
   14228:	str	r0, [fp, #-4]
   1422c:	b	142e8 <__assert_fail@plt+0x1730>
   14230:	movw	r0, #32656	; 0x7f90
   14234:	movt	r0, #7
   14238:	str	r0, [fp, #-4]
   1423c:	b	142e8 <__assert_fail@plt+0x1730>
   14240:	movw	r0, #32663	; 0x7f97
   14244:	movt	r0, #7
   14248:	str	r0, [fp, #-4]
   1424c:	b	142e8 <__assert_fail@plt+0x1730>
   14250:	movw	r0, #32671	; 0x7f9f
   14254:	movt	r0, #7
   14258:	str	r0, [fp, #-4]
   1425c:	b	142e8 <__assert_fail@plt+0x1730>
   14260:	movw	r0, #32677	; 0x7fa5
   14264:	movt	r0, #7
   14268:	str	r0, [fp, #-4]
   1426c:	b	142e8 <__assert_fail@plt+0x1730>
   14270:	movw	r0, #32686	; 0x7fae
   14274:	movt	r0, #7
   14278:	str	r0, [fp, #-4]
   1427c:	b	142e8 <__assert_fail@plt+0x1730>
   14280:	movw	r0, #32693	; 0x7fb5
   14284:	movt	r0, #7
   14288:	str	r0, [fp, #-4]
   1428c:	b	142e8 <__assert_fail@plt+0x1730>
   14290:	movw	r0, #32702	; 0x7fbe
   14294:	movt	r0, #7
   14298:	str	r0, [fp, #-4]
   1429c:	b	142e8 <__assert_fail@plt+0x1730>
   142a0:	movw	r0, #32709	; 0x7fc5
   142a4:	movt	r0, #7
   142a8:	str	r0, [fp, #-4]
   142ac:	b	142e8 <__assert_fail@plt+0x1730>
   142b0:	movw	r0, #32720	; 0x7fd0
   142b4:	movt	r0, #7
   142b8:	str	r0, [fp, #-4]
   142bc:	b	142e8 <__assert_fail@plt+0x1730>
   142c0:	ldr	r2, [sp, #8]
   142c4:	movw	r0, #63289	; 0xf739
   142c8:	movt	r0, #8
   142cc:	movw	r1, #32726	; 0x7fd6
   142d0:	movt	r1, #7
   142d4:	bl	12a5c <sprintf@plt>
   142d8:	movw	r1, #63289	; 0xf739
   142dc:	movt	r1, #8
   142e0:	str	r1, [fp, #-4]
   142e4:	str	r0, [sp]
   142e8:	ldr	r0, [fp, #-4]
   142ec:	mov	sp, fp
   142f0:	pop	{fp, pc}
   142f4:	push	{fp, lr}
   142f8:	mov	fp, sp
   142fc:	sub	sp, sp, #8
   14300:	movw	r0, #62112	; 0xf2a0
   14304:	movt	r0, #8
   14308:	ldr	r0, [r0]
   1430c:	and	r0, r0, #512	; 0x200
   14310:	cmp	r0, #0
   14314:	beq	14354 <__assert_fail@plt+0x179c>
   14318:	movw	r0, #62116	; 0xf2a4
   1431c:	movt	r0, #8
   14320:	ldr	r0, [r0]
   14324:	cmp	r0, #0
   14328:	blt	14350 <__assert_fail@plt+0x1798>
   1432c:	movw	r0, #62116	; 0xf2a4
   14330:	movt	r0, #8
   14334:	ldr	r0, [r0]
   14338:	bl	12b70 <close@plt>
   1433c:	movw	lr, #62116	; 0xf2a4
   14340:	movt	lr, #8
   14344:	mvn	r1, #0
   14348:	str	r1, [lr]
   1434c:	str	r0, [sp, #4]
   14350:	b	14358 <__assert_fail@plt+0x17a0>
   14354:	b	14358 <__assert_fail@plt+0x17a0>
   14358:	mov	sp, fp
   1435c:	pop	{fp, pc}
   14360:	push	{fp, lr}
   14364:	mov	fp, sp
   14368:	sub	sp, sp, #32
   1436c:	str	r0, [fp, #-4]
   14370:	ldr	r0, [fp, #-4]
   14374:	ldr	r0, [r0, #80]	; 0x50
   14378:	and	r0, r0, #61440	; 0xf000
   1437c:	cmp	r0, #40960	; 0xa000
   14380:	bne	143c4 <__assert_fail@plt+0x180c>
   14384:	movw	r0, #32731	; 0x7fdb
   14388:	movt	r0, #7
   1438c:	bl	12864 <gettext@plt>
   14390:	ldr	lr, [fp, #-4]
   14394:	ldr	r1, [lr, #28]
   14398:	movw	lr, #0
   1439c:	str	r0, [fp, #-8]
   143a0:	mov	r0, lr
   143a4:	bl	1da90 <__assert_fail@plt+0xaed8>
   143a8:	movw	r1, #0
   143ac:	str	r0, [fp, #-12]
   143b0:	mov	r0, r1
   143b4:	ldr	r2, [fp, #-8]
   143b8:	ldr	r3, [fp, #-12]
   143bc:	bl	12780 <error@plt>
   143c0:	b	1443c <__assert_fail@plt+0x1884>
   143c4:	movw	r0, #32852	; 0x8054
   143c8:	movt	r0, #7
   143cc:	bl	12864 <gettext@plt>
   143d0:	ldr	lr, [fp, #-4]
   143d4:	ldr	r1, [lr, #28]
   143d8:	movw	lr, #0
   143dc:	str	r0, [sp, #16]
   143e0:	mov	r0, lr
   143e4:	bl	1da90 <__assert_fail@plt+0xaed8>
   143e8:	ldr	r1, [fp, #-4]
   143ec:	ldr	r1, [r1]
   143f0:	ldr	r1, [r1, #28]
   143f4:	ldr	lr, [fp, #-4]
   143f8:	ldr	lr, [lr]
   143fc:	ldr	r2, [lr, #40]	; 0x28
   14400:	movw	lr, #136	; 0x88
   14404:	movt	lr, #9
   14408:	ldr	r3, [lr, #72]	; 0x48
   1440c:	movw	lr, #1
   14410:	str	r0, [sp, #12]
   14414:	mov	r0, lr
   14418:	bl	14584 <__assert_fail@plt+0x19cc>
   1441c:	movw	r1, #0
   14420:	str	r0, [sp, #8]
   14424:	mov	r0, r1
   14428:	ldr	r2, [sp, #16]
   1442c:	ldr	r3, [sp, #12]
   14430:	ldr	lr, [sp, #8]
   14434:	str	lr, [sp]
   14438:	bl	12780 <error@plt>
   1443c:	mov	sp, fp
   14440:	pop	{fp, pc}
   14444:	push	{fp, lr}
   14448:	mov	fp, sp
   1444c:	sub	sp, sp, #128	; 0x80
   14450:	str	r0, [fp, #-4]
   14454:	movw	r0, #136	; 0x88
   14458:	movt	r0, #9
   1445c:	ldr	r0, [r0, #52]	; 0x34
   14460:	ldr	r1, [fp, #-4]
   14464:	str	r0, [sp, #8]
   14468:	mov	r0, r1
   1446c:	add	r1, sp, #16
   14470:	ldr	r2, [sp, #8]
   14474:	blx	r2
   14478:	str	r0, [sp, #12]
   1447c:	ldr	r0, [sp, #12]
   14480:	movw	r1, #0
   14484:	cmp	r1, r0
   14488:	movw	r0, #0
   1448c:	str	r0, [sp, #4]
   14490:	beq	144b0 <__assert_fail@plt+0x18f8>
   14494:	bl	128d0 <__errno_location@plt>
   14498:	ldr	r0, [r0]
   1449c:	movw	lr, #40	; 0x28
   144a0:	cmp	lr, r0
   144a4:	movw	r0, #0
   144a8:	moveq	r0, #1
   144ac:	str	r0, [sp, #4]
   144b0:	ldr	r0, [sp, #4]
   144b4:	and	r0, r0, #1
   144b8:	mov	sp, fp
   144bc:	pop	{fp, pc}
   144c0:	push	{fp, lr}
   144c4:	mov	fp, sp
   144c8:	sub	sp, sp, #32
   144cc:	str	r0, [fp, #-4]
   144d0:	str	r1, [fp, #-8]
   144d4:	str	r2, [fp, #-12]
   144d8:	ldr	r0, [fp, #-8]
   144dc:	ldrh	r0, [r0, #56]	; 0x38
   144e0:	cmp	r0, #10
   144e4:	movw	r0, #0
   144e8:	str	r0, [sp, #12]
   144ec:	beq	14508 <__assert_fail@plt+0x1950>
   144f0:	ldr	r0, [fp, #-8]
   144f4:	ldrh	r0, [r0, #56]	; 0x38
   144f8:	cmp	r0, #11
   144fc:	movw	r0, #0
   14500:	movne	r0, #1
   14504:	str	r0, [sp, #12]
   14508:	ldr	r0, [sp, #12]
   1450c:	and	r0, r0, #1
   14510:	movw	r1, #92	; 0x5c
   14514:	movt	r1, #9
   14518:	strb	r0, [r1, #4]
   1451c:	ldr	r0, [fp, #-8]
   14520:	ldr	r0, [r0, #24]
   14524:	str	r0, [r1, #12]
   14528:	ldr	r0, [fp, #-4]
   1452c:	ldr	r0, [r0, #32]
   14530:	str	r0, [r1, #16]
   14534:	bl	183b0 <__assert_fail@plt+0x57f8>
   14538:	str	r0, [sp, #16]
   1453c:	ldr	r0, [fp, #-8]
   14540:	ldr	r0, [r0, #28]
   14544:	ldr	r1, [fp, #-12]
   14548:	ldr	r2, [sp, #16]
   1454c:	bl	1d804 <__assert_fail@plt+0xac4c>
   14550:	movw	r1, #92	; 0x5c
   14554:	movt	r1, #9
   14558:	ldrb	r1, [r1, #24]
   1455c:	tst	r1, #1
   14560:	str	r0, [sp, #8]
   14564:	beq	1457c <__assert_fail@plt+0x19c4>
   14568:	ldr	r0, [fp, #-4]
   1456c:	ldr	r1, [fp, #-8]
   14570:	movw	r2, #4
   14574:	bl	53e14 <__assert_fail@plt+0x4125c>
   14578:	str	r0, [sp, #4]
   1457c:	mov	sp, fp
   14580:	pop	{fp, pc}
   14584:	push	{fp, lr}
   14588:	mov	fp, sp
   1458c:	sub	sp, sp, #32
   14590:	str	r0, [fp, #-8]
   14594:	str	r1, [fp, #-12]
   14598:	str	r2, [sp, #16]
   1459c:	str	r3, [sp, #12]
   145a0:	ldr	r0, [sp, #16]
   145a4:	movw	r1, #0
   145a8:	cmp	r1, r0
   145ac:	bne	145cc <__assert_fail@plt+0x1a14>
   145b0:	ldr	r0, [fp, #-8]
   145b4:	ldr	r1, [sp, #12]
   145b8:	movw	r2, #39197	; 0x991d
   145bc:	movt	r2, #7
   145c0:	bl	4a828 <__assert_fail@plt+0x37c70>
   145c4:	str	r0, [fp, #-4]
   145c8:	b	14624 <__assert_fail@plt+0x1a6c>
   145cc:	ldr	r0, [fp, #-12]
   145d0:	ldr	r1, [sp, #16]
   145d4:	add	r0, r0, r1
   145d8:	ldrb	r0, [r0]
   145dc:	strb	r0, [sp, #11]
   145e0:	ldr	r0, [fp, #-12]
   145e4:	ldr	r1, [sp, #16]
   145e8:	add	r0, r0, r1
   145ec:	movw	r1, #0
   145f0:	strb	r1, [r0]
   145f4:	ldr	r0, [fp, #-8]
   145f8:	ldr	r1, [sp, #12]
   145fc:	ldr	r2, [fp, #-12]
   14600:	bl	4a828 <__assert_fail@plt+0x37c70>
   14604:	str	r0, [sp, #4]
   14608:	ldrb	r0, [sp, #11]
   1460c:	ldr	r1, [fp, #-12]
   14610:	ldr	r2, [sp, #16]
   14614:	add	r1, r1, r2
   14618:	strb	r0, [r1]
   1461c:	ldr	r0, [sp, #4]
   14620:	str	r0, [fp, #-4]
   14624:	ldr	r0, [fp, #-4]
   14628:	mov	sp, fp
   1462c:	pop	{fp, pc}
   14630:	push	{fp, lr}
   14634:	mov	fp, sp
   14638:	sub	sp, sp, #24
   1463c:	str	r0, [fp, #-4]
   14640:	str	r1, [fp, #-8]
   14644:	str	r2, [sp, #12]
   14648:	ldr	r1, [fp, #-8]
   1464c:	add	r0, sp, #4
   14650:	bl	4b8dc <__assert_fail@plt+0x38d24>
   14654:	ldr	r2, [sp, #12]
   14658:	ldr	r0, [sp, #4]
   1465c:	ldr	r1, [sp, #8]
   14660:	mov	r3, #60	; 0x3c
   14664:	bl	14674 <__assert_fail@plt+0x1abc>
   14668:	and	r0, r0, #1
   1466c:	mov	sp, fp
   14670:	pop	{fp, pc}
   14674:	push	{fp, lr}
   14678:	mov	fp, sp
   1467c:	sub	sp, sp, #56	; 0x38
   14680:	str	r0, [fp, #-12]
   14684:	str	r1, [fp, #-8]
   14688:	str	r2, [fp, #-16]
   1468c:	str	r3, [fp, #-20]	; 0xffffffec
   14690:	ldr	r0, [fp, #-16]
   14694:	ldr	r0, [r0, #44]	; 0x2c
   14698:	cmp	r0, #0
   1469c:	str	r0, [sp, #20]
   146a0:	beq	146c8 <__assert_fail@plt+0x1b10>
   146a4:	b	146a8 <__assert_fail@plt+0x1af0>
   146a8:	ldr	r0, [sp, #20]
   146ac:	cmp	r0, #1
   146b0:	beq	1470c <__assert_fail@plt+0x1b54>
   146b4:	b	146b8 <__assert_fail@plt+0x1b00>
   146b8:	ldr	r0, [sp, #20]
   146bc:	cmp	r0, #2
   146c0:	beq	14750 <__assert_fail@plt+0x1b98>
   146c4:	b	147cc <__assert_fail@plt+0x1c14>
   146c8:	ldr	r0, [fp, #-16]
   146cc:	ldr	r1, [fp, #-12]
   146d0:	ldr	r2, [fp, #-8]
   146d4:	ldr	r3, [r0, #48]	; 0x30
   146d8:	ldr	r0, [r0, #52]	; 0x34
   146dc:	str	r0, [sp, #16]
   146e0:	mov	r0, r1
   146e4:	mov	r1, r2
   146e8:	mov	r2, r3
   146ec:	ldr	r3, [sp, #16]
   146f0:	bl	14914 <__assert_fail@plt+0x1d5c>
   146f4:	cmp	r0, #0
   146f8:	movw	r0, #0
   146fc:	movgt	r0, #1
   14700:	and	r0, r0, #1
   14704:	strb	r0, [fp, #-1]
   14708:	b	147ec <__assert_fail@plt+0x1c34>
   1470c:	ldr	r0, [fp, #-16]
   14710:	ldr	r1, [fp, #-12]
   14714:	ldr	r2, [fp, #-8]
   14718:	ldr	r3, [r0, #48]	; 0x30
   1471c:	ldr	r0, [r0, #52]	; 0x34
   14720:	str	r0, [sp, #12]
   14724:	mov	r0, r1
   14728:	mov	r1, r2
   1472c:	mov	r2, r3
   14730:	ldr	r3, [sp, #12]
   14734:	bl	14914 <__assert_fail@plt+0x1d5c>
   14738:	cmp	r0, #0
   1473c:	movw	r0, #0
   14740:	movlt	r0, #1
   14744:	and	r0, r0, #1
   14748:	strb	r0, [fp, #-1]
   1474c:	b	147ec <__assert_fail@plt+0x1c34>
   14750:	ldr	r0, [fp, #-16]
   14754:	ldr	r1, [fp, #-12]
   14758:	ldr	r2, [fp, #-8]
   1475c:	ldr	r3, [r0, #48]	; 0x30
   14760:	ldr	r0, [r0, #52]	; 0x34
   14764:	str	r0, [sp, #8]
   14768:	mov	r0, r1
   1476c:	mov	r1, r2
   14770:	mov	r2, r3
   14774:	ldr	r3, [sp, #8]
   14778:	bl	175b8 <__assert_fail@plt+0x4a00>
   1477c:	vstr	d0, [sp, #24]
   14780:	vldr	d0, [sp, #24]
   14784:	vcmpe.f64	d0, #0.0
   14788:	vmrs	APSR_nzcv, fpscr
   1478c:	movw	r0, #0
   14790:	str	r0, [sp, #4]
   14794:	ble	147bc <__assert_fail@plt+0x1c04>
   14798:	vldr	d16, [sp, #24]
   1479c:	ldr	r0, [fp, #-20]	; 0xffffffec
   147a0:	vmov	s0, r0
   147a4:	vcvt.f64.s32	d17, s0
   147a8:	vcmpe.f64	d16, d17
   147ac:	vmrs	APSR_nzcv, fpscr
   147b0:	movw	r0, #0
   147b4:	movls	r0, #1
   147b8:	str	r0, [sp, #4]
   147bc:	ldr	r0, [sp, #4]
   147c0:	and	r0, r0, #1
   147c4:	strb	r0, [fp, #-1]
   147c8:	b	147ec <__assert_fail@plt+0x1c34>
   147cc:	movw	r0, #36537	; 0x8eb9
   147d0:	movt	r0, #7
   147d4:	movw	r1, #32965	; 0x80c5
   147d8:	movt	r1, #7
   147dc:	movw	r2, #138	; 0x8a
   147e0:	movw	r3, #33944	; 0x8498
   147e4:	movt	r3, #7
   147e8:	bl	12bb8 <__assert_fail@plt>
   147ec:	ldrb	r0, [fp, #-1]
   147f0:	and	r0, r0, #1
   147f4:	mov	sp, fp
   147f8:	pop	{fp, pc}
   147fc:	push	{fp, lr}
   14800:	mov	fp, sp
   14804:	sub	sp, sp, #16
   14808:	str	r0, [sp, #8]
   1480c:	str	r1, [sp, #4]
   14810:	str	r2, [sp]
   14814:	ldr	r0, [sp]
   14818:	ldr	r0, [r0, #156]	; 0x9c
   1481c:	movw	r1, #0
   14820:	cmp	r0, r1
   14824:	beq	14844 <__assert_fail@plt+0x1c8c>
   14828:	ldr	r0, [sp, #8]
   1482c:	ldr	r1, [sp, #4]
   14830:	ldr	r2, [sp]
   14834:	ldr	r2, [r2, #156]	; 0x9c
   14838:	bl	1d804 <__assert_fail@plt+0xac4c>
   1483c:	tst	r0, #1
   14840:	beq	14864 <__assert_fail@plt+0x1cac>
   14844:	ldr	r0, [sp, #8]
   14848:	ldr	r1, [sp, #4]
   1484c:	ldr	r2, [sp]
   14850:	ldr	r2, [r2, #160]	; 0xa0
   14854:	bl	1d804 <__assert_fail@plt+0xac4c>
   14858:	and	r0, r0, #1
   1485c:	strb	r0, [fp, #-1]
   14860:	b	14870 <__assert_fail@plt+0x1cb8>
   14864:	movw	r0, #0
   14868:	and	r0, r0, #1
   1486c:	strb	r0, [fp, #-1]
   14870:	ldrb	r0, [fp, #-1]
   14874:	and	r0, r0, #1
   14878:	mov	sp, fp
   1487c:	pop	{fp, pc}
   14880:	push	{fp, lr}
   14884:	mov	fp, sp
   14888:	sub	sp, sp, #24
   1488c:	str	r0, [fp, #-4]
   14890:	str	r1, [fp, #-8]
   14894:	str	r2, [sp, #12]
   14898:	ldr	r0, [sp, #12]
   1489c:	ldr	r0, [r0, #44]	; 0x2c
   148a0:	movw	r1, #0
   148a4:	cmp	r1, r0
   148a8:	bne	148b0 <__assert_fail@plt+0x1cf8>
   148ac:	b	148d0 <__assert_fail@plt+0x1d18>
   148b0:	movw	r0, #32926	; 0x809e
   148b4:	movt	r0, #7
   148b8:	movw	r1, #32965	; 0x80c5
   148bc:	movt	r1, #7
   148c0:	movw	r2, #166	; 0xa6
   148c4:	movw	r3, #32972	; 0x80cc
   148c8:	movt	r3, #7
   148cc:	bl	12bb8 <__assert_fail@plt>
   148d0:	ldr	r1, [fp, #-8]
   148d4:	add	r0, sp, #4
   148d8:	bl	4b8dc <__assert_fail@plt+0x38d24>
   148dc:	ldr	r0, [sp, #12]
   148e0:	ldr	r1, [sp, #4]
   148e4:	ldr	lr, [sp, #8]
   148e8:	ldr	r2, [r0, #48]	; 0x30
   148ec:	ldr	r3, [r0, #52]	; 0x34
   148f0:	mov	r0, r1
   148f4:	mov	r1, lr
   148f8:	bl	14914 <__assert_fail@plt+0x1d5c>
   148fc:	cmp	r0, #0
   14900:	movw	r0, #0
   14904:	movgt	r0, #1
   14908:	and	r0, r0, #1
   1490c:	mov	sp, fp
   14910:	pop	{fp, pc}
   14914:	push	{fp, lr}
   14918:	mov	fp, sp
   1491c:	sub	sp, sp, #32
   14920:	str	r0, [fp, #-12]
   14924:	str	r1, [fp, #-8]
   14928:	str	r3, [sp, #16]
   1492c:	str	r2, [sp, #12]
   14930:	ldr	r0, [fp, #-12]
   14934:	ldr	r1, [sp, #12]
   14938:	cmp	r0, r1
   1493c:	bne	1495c <__assert_fail@plt+0x1da4>
   14940:	ldr	r0, [fp, #-8]
   14944:	ldr	r1, [sp, #16]
   14948:	cmp	r0, r1
   1494c:	bne	1495c <__assert_fail@plt+0x1da4>
   14950:	movw	r0, #0
   14954:	str	r0, [fp, #-4]
   14958:	b	14998 <__assert_fail@plt+0x1de0>
   1495c:	ldr	r0, [fp, #-12]
   14960:	ldr	r1, [fp, #-8]
   14964:	ldr	r2, [sp, #12]
   14968:	ldr	r3, [sp, #16]
   1496c:	bl	175b8 <__assert_fail@plt+0x4a00>
   14970:	vstr	d0, [sp]
   14974:	vldr	d0, [sp]
   14978:	vcmpe.f64	d0, #0.0
   1497c:	vmrs	APSR_nzcv, fpscr
   14980:	movw	r0, #0
   14984:	movmi	r0, #1
   14988:	tst	r0, #1
   1498c:	mvn	r0, #0
   14990:	moveq	r0, #1
   14994:	str	r0, [fp, #-4]
   14998:	ldr	r0, [fp, #-4]
   1499c:	mov	sp, fp
   149a0:	pop	{fp, pc}
   149a4:	push	{fp, lr}
   149a8:	mov	fp, sp
   149ac:	sub	sp, sp, #24
   149b0:	str	r0, [fp, #-4]
   149b4:	str	r1, [fp, #-8]
   149b8:	str	r2, [sp, #12]
   149bc:	ldr	r1, [fp, #-8]
   149c0:	add	r0, sp, #4
   149c4:	bl	4b8dc <__assert_fail@plt+0x38d24>
   149c8:	ldr	r2, [sp, #12]
   149cc:	ldr	r0, [sp, #4]
   149d0:	ldr	r1, [sp, #8]
   149d4:	movw	r3, #20864	; 0x5180
   149d8:	movt	r3, #1
   149dc:	bl	14674 <__assert_fail@plt+0x1abc>
   149e0:	and	r0, r0, #1
   149e4:	mov	sp, fp
   149e8:	pop	{fp, pc}
   149ec:	sub	sp, sp, #12
   149f0:	str	r0, [sp, #8]
   149f4:	str	r1, [sp, #4]
   149f8:	str	r2, [sp]
   149fc:	movw	r0, #1
   14a00:	and	r0, r0, #1
   14a04:	add	sp, sp, #12
   14a08:	bx	lr
   14a0c:	push	{fp, lr}
   14a10:	mov	fp, sp
   14a14:	sub	sp, sp, #24
   14a18:	str	r0, [fp, #-4]
   14a1c:	str	r1, [fp, #-8]
   14a20:	str	r2, [sp, #12]
   14a24:	ldr	r1, [fp, #-8]
   14a28:	add	r0, sp, #4
   14a2c:	bl	4b900 <__assert_fail@plt+0x38d48>
   14a30:	ldr	r2, [sp, #12]
   14a34:	ldr	r0, [sp, #4]
   14a38:	ldr	r1, [sp, #8]
   14a3c:	mov	r3, #60	; 0x3c
   14a40:	bl	14674 <__assert_fail@plt+0x1abc>
   14a44:	and	r0, r0, #1
   14a48:	mov	sp, fp
   14a4c:	pop	{fp, pc}
   14a50:	push	{fp, lr}
   14a54:	mov	fp, sp
   14a58:	sub	sp, sp, #24
   14a5c:	str	r0, [fp, #-4]
   14a60:	str	r1, [fp, #-8]
   14a64:	str	r2, [sp, #12]
   14a68:	ldr	r0, [sp, #12]
   14a6c:	ldr	r0, [r0, #44]	; 0x2c
   14a70:	movw	r1, #0
   14a74:	cmp	r1, r0
   14a78:	bne	14a80 <__assert_fail@plt+0x1ec8>
   14a7c:	b	14aa0 <__assert_fail@plt+0x1ee8>
   14a80:	movw	r0, #32926	; 0x809e
   14a84:	movt	r0, #7
   14a88:	movw	r1, #32965	; 0x80c5
   14a8c:	movt	r1, #7
   14a90:	movw	r2, #199	; 0xc7
   14a94:	movw	r3, #33039	; 0x810f
   14a98:	movt	r3, #7
   14a9c:	bl	12bb8 <__assert_fail@plt>
   14aa0:	ldr	r1, [fp, #-8]
   14aa4:	add	r0, sp, #4
   14aa8:	bl	4b900 <__assert_fail@plt+0x38d48>
   14aac:	ldr	r0, [sp, #12]
   14ab0:	ldr	r1, [sp, #4]
   14ab4:	ldr	lr, [sp, #8]
   14ab8:	ldr	r2, [r0, #48]	; 0x30
   14abc:	ldr	r3, [r0, #52]	; 0x34
   14ac0:	mov	r0, r1
   14ac4:	mov	r1, lr
   14ac8:	bl	14914 <__assert_fail@plt+0x1d5c>
   14acc:	cmp	r0, #0
   14ad0:	movw	r0, #0
   14ad4:	movgt	r0, #1
   14ad8:	and	r0, r0, #1
   14adc:	mov	sp, fp
   14ae0:	pop	{fp, pc}
   14ae4:	push	{fp, lr}
   14ae8:	mov	fp, sp
   14aec:	sub	sp, sp, #16
   14af0:	str	r0, [fp, #-4]
   14af4:	str	r1, [sp, #8]
   14af8:	str	r2, [sp, #4]
   14afc:	ldr	r0, [sp, #4]
   14b00:	ldr	r0, [r0, #156]	; 0x9c
   14b04:	movw	r1, #0
   14b08:	cmp	r0, r1
   14b0c:	beq	14b28 <__assert_fail@plt+0x1f70>
   14b10:	ldr	r0, [fp, #-4]
   14b14:	ldr	r1, [sp, #8]
   14b18:	ldr	r2, [sp, #4]
   14b1c:	ldr	r2, [r2, #156]	; 0x9c
   14b20:	bl	1d804 <__assert_fail@plt+0xac4c>
   14b24:	str	r0, [sp]
   14b28:	ldr	r0, [fp, #-4]
   14b2c:	ldr	r1, [sp, #8]
   14b30:	ldr	r2, [sp, #4]
   14b34:	ldr	r2, [r2, #160]	; 0xa0
   14b38:	bl	1d804 <__assert_fail@plt+0xac4c>
   14b3c:	and	r0, r0, #1
   14b40:	mov	sp, fp
   14b44:	pop	{fp, pc}
   14b48:	push	{fp, lr}
   14b4c:	mov	fp, sp
   14b50:	sub	sp, sp, #24
   14b54:	str	r0, [fp, #-4]
   14b58:	str	r1, [fp, #-8]
   14b5c:	str	r2, [sp, #12]
   14b60:	ldr	r1, [fp, #-8]
   14b64:	add	r0, sp, #4
   14b68:	bl	4b900 <__assert_fail@plt+0x38d48>
   14b6c:	ldr	r2, [sp, #12]
   14b70:	ldr	r0, [sp, #4]
   14b74:	ldr	r1, [sp, #8]
   14b78:	movw	r3, #20864	; 0x5180
   14b7c:	movt	r3, #1
   14b80:	bl	14674 <__assert_fail@plt+0x1abc>
   14b84:	and	r0, r0, #1
   14b88:	mov	sp, fp
   14b8c:	pop	{fp, pc}
   14b90:	push	{fp, lr}
   14b94:	mov	fp, sp
   14b98:	sub	sp, sp, #32
   14b9c:	str	r0, [fp, #-8]
   14ba0:	str	r1, [fp, #-12]
   14ba4:	str	r2, [sp, #16]
   14ba8:	movw	r0, #92	; 0x5c
   14bac:	movt	r0, #9
   14bb0:	ldr	r0, [r0, #12]
   14bb4:	movw	r1, #35940	; 0x8c64
   14bb8:	movt	r1, #7
   14bbc:	bl	124c8 <strcmp@plt>
   14bc0:	cmp	r0, #0
   14bc4:	beq	14d2c <__assert_fail@plt+0x2174>
   14bc8:	movw	r0, #0
   14bcc:	str	r0, [sp, #12]
   14bd0:	movw	r0, #92	; 0x5c
   14bd4:	movt	r0, #9
   14bd8:	ldrb	r0, [r0, #4]
   14bdc:	tst	r0, #1
   14be0:	beq	14c04 <__assert_fail@plt+0x204c>
   14be4:	ldr	r0, [fp, #-12]
   14be8:	ldr	r0, [r0, #16]
   14bec:	and	r0, r0, #61440	; 0xf000
   14bf0:	cmp	r0, #16384	; 0x4000
   14bf4:	bne	14c04 <__assert_fail@plt+0x204c>
   14bf8:	ldr	r0, [sp, #12]
   14bfc:	orr	r0, r0, #512	; 0x200
   14c00:	str	r0, [sp, #12]
   14c04:	ldr	r0, [sp, #12]
   14c08:	bl	14d48 <__assert_fail@plt+0x2190>
   14c0c:	tst	r0, #1
   14c10:	beq	14c24 <__assert_fail@plt+0x206c>
   14c14:	movw	r0, #1
   14c18:	and	r0, r0, #1
   14c1c:	strb	r0, [fp, #-1]
   14c20:	b	14d38 <__assert_fail@plt+0x2180>
   14c24:	bl	128d0 <__errno_location@plt>
   14c28:	ldr	r0, [r0]
   14c2c:	movw	lr, #2
   14c30:	cmp	lr, r0
   14c34:	bne	14c68 <__assert_fail@plt+0x20b0>
   14c38:	movw	r0, #136	; 0x88
   14c3c:	movt	r0, #9
   14c40:	ldrb	r0, [r0, #14]
   14c44:	tst	r0, #1
   14c48:	beq	14c68 <__assert_fail@plt+0x20b0>
   14c4c:	bl	128d0 <__errno_location@plt>
   14c50:	movw	lr, #0
   14c54:	str	lr, [r0]
   14c58:	movw	r0, #1
   14c5c:	and	r0, r0, #1
   14c60:	strb	r0, [fp, #-1]
   14c64:	b	14d38 <__assert_fail@plt+0x2180>
   14c68:	bl	128d0 <__errno_location@plt>
   14c6c:	ldr	r0, [r0]
   14c70:	movw	lr, #21
   14c74:	cmp	lr, r0
   14c78:	bne	14cc0 <__assert_fail@plt+0x2108>
   14c7c:	ldr	r0, [sp, #12]
   14c80:	and	r0, r0, #512	; 0x200
   14c84:	cmp	r0, #0
   14c88:	bne	14cbc <__assert_fail@plt+0x2104>
   14c8c:	ldr	r0, [sp, #12]
   14c90:	orr	r0, r0, #512	; 0x200
   14c94:	str	r0, [sp, #12]
   14c98:	ldr	r0, [sp, #12]
   14c9c:	bl	14d48 <__assert_fail@plt+0x2190>
   14ca0:	tst	r0, #1
   14ca4:	beq	14cb8 <__assert_fail@plt+0x2100>
   14ca8:	movw	r0, #1
   14cac:	and	r0, r0, #1
   14cb0:	strb	r0, [fp, #-1]
   14cb4:	b	14d38 <__assert_fail@plt+0x2180>
   14cb8:	b	14cbc <__assert_fail@plt+0x2104>
   14cbc:	b	14cc0 <__assert_fail@plt+0x2108>
   14cc0:	b	14cc4 <__assert_fail@plt+0x210c>
   14cc4:	bl	128d0 <__errno_location@plt>
   14cc8:	ldr	r1, [r0]
   14ccc:	movw	r0, #33106	; 0x8152
   14cd0:	movt	r0, #7
   14cd4:	str	r1, [sp, #8]
   14cd8:	bl	12864 <gettext@plt>
   14cdc:	ldr	r1, [fp, #-8]
   14ce0:	movw	lr, #0
   14ce4:	str	r0, [sp, #4]
   14ce8:	mov	r0, lr
   14cec:	bl	1da90 <__assert_fail@plt+0xaed8>
   14cf0:	movw	r1, #0
   14cf4:	str	r0, [sp]
   14cf8:	mov	r0, r1
   14cfc:	ldr	r1, [sp, #8]
   14d00:	ldr	r2, [sp, #4]
   14d04:	ldr	r3, [sp]
   14d08:	bl	12780 <error@plt>
   14d0c:	movw	r0, #92	; 0x5c
   14d10:	movt	r0, #9
   14d14:	movw	r1, #1
   14d18:	str	r1, [r0, #28]
   14d1c:	movw	r0, #0
   14d20:	and	r0, r0, #1
   14d24:	strb	r0, [fp, #-1]
   14d28:	b	14d38 <__assert_fail@plt+0x2180>
   14d2c:	movw	r0, #1
   14d30:	and	r0, r0, #1
   14d34:	strb	r0, [fp, #-1]
   14d38:	ldrb	r0, [fp, #-1]
   14d3c:	and	r0, r0, #1
   14d40:	mov	sp, fp
   14d44:	pop	{fp, pc}
   14d48:	push	{fp, lr}
   14d4c:	mov	fp, sp
   14d50:	sub	sp, sp, #8
   14d54:	str	r0, [sp, #4]
   14d58:	movw	r0, #92	; 0x5c
   14d5c:	movt	r0, #9
   14d60:	ldr	r1, [r0, #16]
   14d64:	ldr	r0, [r0, #12]
   14d68:	ldr	r2, [sp, #4]
   14d6c:	str	r0, [sp]
   14d70:	mov	r0, r1
   14d74:	ldr	r1, [sp]
   14d78:	bl	12534 <unlinkat@plt>
   14d7c:	movw	r1, #0
   14d80:	cmp	r1, r0
   14d84:	movw	r0, #0
   14d88:	moveq	r0, #1
   14d8c:	and	r0, r0, #1
   14d90:	mov	sp, fp
   14d94:	pop	{fp, pc}
   14d98:	push	{fp, lr}
   14d9c:	mov	fp, sp
   14da0:	sub	sp, sp, #88	; 0x58
   14da4:	str	r0, [fp, #-8]
   14da8:	str	r1, [fp, #-12]
   14dac:	str	r2, [fp, #-16]
   14db0:	ldr	r0, [fp, #-12]
   14db4:	ldr	r0, [r0, #16]
   14db8:	and	r0, r0, #61440	; 0xf000
   14dbc:	cmp	r0, #16384	; 0x4000
   14dc0:	bne	1508c <__assert_fail@plt+0x24d4>
   14dc4:	movw	r0, #1
   14dc8:	strb	r0, [fp, #-29]	; 0xffffffe3
   14dcc:	bl	128d0 <__errno_location@plt>
   14dd0:	ldr	r2, [pc, #776]	; 150e0 <__assert_fail@plt+0x2528>
   14dd4:	movw	lr, #0
   14dd8:	str	lr, [r0]
   14ddc:	movw	r0, #92	; 0x5c
   14de0:	movt	r0, #9
   14de4:	ldr	lr, [r0, #16]
   14de8:	ldr	r1, [r0, #12]
   14dec:	mov	r0, lr
   14df0:	bl	326bc <__assert_fail@plt+0x1fb04>
   14df4:	str	r0, [fp, #-20]	; 0xffffffec
   14df8:	cmp	r0, #0
   14dfc:	bge	14e68 <__assert_fail@plt+0x22b0>
   14e00:	bl	128d0 <__errno_location@plt>
   14e04:	ldr	r1, [r0]
   14e08:	ldr	r0, [fp, #-8]
   14e0c:	movw	lr, #0
   14e10:	str	r0, [fp, #-36]	; 0xffffffdc
   14e14:	mov	r0, lr
   14e18:	ldr	lr, [fp, #-36]	; 0xffffffdc
   14e1c:	str	r1, [fp, #-40]	; 0xffffffd8
   14e20:	mov	r1, lr
   14e24:	bl	1da90 <__assert_fail@plt+0xaed8>
   14e28:	movw	r1, #0
   14e2c:	str	r0, [sp, #44]	; 0x2c
   14e30:	mov	r0, r1
   14e34:	ldr	r1, [fp, #-40]	; 0xffffffd8
   14e38:	movw	r2, #59431	; 0xe827
   14e3c:	movt	r2, #7
   14e40:	ldr	r3, [sp, #44]	; 0x2c
   14e44:	bl	12780 <error@plt>
   14e48:	movw	r0, #92	; 0x5c
   14e4c:	movt	r0, #9
   14e50:	movw	r1, #1
   14e54:	str	r1, [r0, #28]
   14e58:	movw	r0, #0
   14e5c:	and	r0, r0, #1
   14e60:	strb	r0, [fp, #-1]
   14e64:	b	150d0 <__assert_fail@plt+0x2518>
   14e68:	ldr	r0, [fp, #-20]	; 0xffffffec
   14e6c:	bl	12a74 <fdopendir@plt>
   14e70:	str	r0, [fp, #-24]	; 0xffffffe8
   14e74:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14e78:	movw	lr, #0
   14e7c:	cmp	r0, lr
   14e80:	bne	14ef8 <__assert_fail@plt+0x2340>
   14e84:	bl	128d0 <__errno_location@plt>
   14e88:	ldr	r1, [r0]
   14e8c:	ldr	r0, [fp, #-8]
   14e90:	movw	lr, #0
   14e94:	str	r0, [sp, #40]	; 0x28
   14e98:	mov	r0, lr
   14e9c:	ldr	lr, [sp, #40]	; 0x28
   14ea0:	str	r1, [sp, #36]	; 0x24
   14ea4:	mov	r1, lr
   14ea8:	bl	1da90 <__assert_fail@plt+0xaed8>
   14eac:	movw	r1, #0
   14eb0:	str	r0, [sp, #32]
   14eb4:	mov	r0, r1
   14eb8:	ldr	r1, [sp, #36]	; 0x24
   14ebc:	movw	r2, #59431	; 0xe827
   14ec0:	movt	r2, #7
   14ec4:	ldr	r3, [sp, #32]
   14ec8:	bl	12780 <error@plt>
   14ecc:	movw	r0, #92	; 0x5c
   14ed0:	movt	r0, #9
   14ed4:	movw	r1, #1
   14ed8:	str	r1, [r0, #28]
   14edc:	ldr	r0, [fp, #-20]	; 0xffffffec
   14ee0:	bl	12b70 <close@plt>
   14ee4:	movw	r1, #0
   14ee8:	and	r1, r1, #1
   14eec:	strb	r1, [fp, #-1]
   14ef0:	str	r0, [sp, #28]
   14ef4:	b	150d0 <__assert_fail@plt+0x2518>
   14ef8:	bl	128d0 <__errno_location@plt>
   14efc:	movw	lr, #0
   14f00:	str	lr, [r0]
   14f04:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14f08:	bl	12a68 <readdir64@plt>
   14f0c:	str	r0, [fp, #-28]	; 0xffffffe4
   14f10:	ldr	r0, [fp, #-28]	; 0xffffffe4
   14f14:	movw	r1, #0
   14f18:	cmp	r0, r1
   14f1c:	beq	14f80 <__assert_fail@plt+0x23c8>
   14f20:	ldr	r0, [fp, #-28]	; 0xffffffe4
   14f24:	ldrb	r0, [r0, #19]
   14f28:	cmp	r0, #46	; 0x2e
   14f2c:	bne	14f60 <__assert_fail@plt+0x23a8>
   14f30:	ldr	r0, [fp, #-28]	; 0xffffffe4
   14f34:	ldrb	r0, [r0, #20]
   14f38:	cmp	r0, #0
   14f3c:	beq	14f6c <__assert_fail@plt+0x23b4>
   14f40:	ldr	r0, [fp, #-28]	; 0xffffffe4
   14f44:	ldrb	r0, [r0, #20]
   14f48:	cmp	r0, #46	; 0x2e
   14f4c:	bne	14f60 <__assert_fail@plt+0x23a8>
   14f50:	ldr	r0, [fp, #-28]	; 0xffffffe4
   14f54:	ldrb	r0, [r0, #21]
   14f58:	cmp	r0, #0
   14f5c:	beq	14f6c <__assert_fail@plt+0x23b4>
   14f60:	movw	r0, #0
   14f64:	strb	r0, [fp, #-29]	; 0xffffffe3
   14f68:	b	14f80 <__assert_fail@plt+0x23c8>
   14f6c:	b	14f70 <__assert_fail@plt+0x23b8>
   14f70:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14f74:	bl	12a68 <readdir64@plt>
   14f78:	str	r0, [fp, #-28]	; 0xffffffe4
   14f7c:	b	14f10 <__assert_fail@plt+0x2358>
   14f80:	bl	128d0 <__errno_location@plt>
   14f84:	ldr	r0, [r0]
   14f88:	cmp	r0, #0
   14f8c:	beq	15004 <__assert_fail@plt+0x244c>
   14f90:	bl	128d0 <__errno_location@plt>
   14f94:	ldr	r1, [r0]
   14f98:	ldr	r0, [fp, #-8]
   14f9c:	movw	lr, #0
   14fa0:	str	r0, [sp, #24]
   14fa4:	mov	r0, lr
   14fa8:	ldr	lr, [sp, #24]
   14fac:	str	r1, [sp, #20]
   14fb0:	mov	r1, lr
   14fb4:	bl	1da90 <__assert_fail@plt+0xaed8>
   14fb8:	movw	r1, #0
   14fbc:	str	r0, [sp, #16]
   14fc0:	mov	r0, r1
   14fc4:	ldr	r1, [sp, #20]
   14fc8:	movw	r2, #59431	; 0xe827
   14fcc:	movt	r2, #7
   14fd0:	ldr	r3, [sp, #16]
   14fd4:	bl	12780 <error@plt>
   14fd8:	movw	r0, #92	; 0x5c
   14fdc:	movt	r0, #9
   14fe0:	movw	r1, #1
   14fe4:	str	r1, [r0, #28]
   14fe8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14fec:	bl	12b88 <closedir@plt>
   14ff0:	movw	r1, #0
   14ff4:	and	r1, r1, #1
   14ff8:	strb	r1, [fp, #-1]
   14ffc:	str	r0, [sp, #12]
   15000:	b	150d0 <__assert_fail@plt+0x2518>
   15004:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15008:	bl	12b88 <closedir@plt>
   1500c:	cmp	r0, #0
   15010:	beq	1507c <__assert_fail@plt+0x24c4>
   15014:	bl	128d0 <__errno_location@plt>
   15018:	ldr	r1, [r0]
   1501c:	ldr	r0, [fp, #-8]
   15020:	movw	lr, #0
   15024:	str	r0, [sp, #8]
   15028:	mov	r0, lr
   1502c:	ldr	lr, [sp, #8]
   15030:	str	r1, [sp, #4]
   15034:	mov	r1, lr
   15038:	bl	1da90 <__assert_fail@plt+0xaed8>
   1503c:	movw	r1, #0
   15040:	str	r0, [sp]
   15044:	mov	r0, r1
   15048:	ldr	r1, [sp, #4]
   1504c:	movw	r2, #59431	; 0xe827
   15050:	movt	r2, #7
   15054:	ldr	r3, [sp]
   15058:	bl	12780 <error@plt>
   1505c:	movw	r0, #92	; 0x5c
   15060:	movt	r0, #9
   15064:	movw	r1, #1
   15068:	str	r1, [r0, #28]
   1506c:	movw	r0, #0
   15070:	and	r0, r0, #1
   15074:	strb	r0, [fp, #-1]
   15078:	b	150d0 <__assert_fail@plt+0x2518>
   1507c:	ldrb	r0, [fp, #-29]	; 0xffffffe3
   15080:	and	r0, r0, #1
   15084:	strb	r0, [fp, #-1]
   15088:	b	150d0 <__assert_fail@plt+0x2518>
   1508c:	ldr	r0, [fp, #-12]
   15090:	ldr	r0, [r0, #16]
   15094:	and	r0, r0, #61440	; 0xf000
   15098:	cmp	r0, #32768	; 0x8000
   1509c:	bne	150c4 <__assert_fail@plt+0x250c>
   150a0:	ldr	r0, [fp, #-12]
   150a4:	ldr	r1, [r0, #48]	; 0x30
   150a8:	ldr	r0, [r0, #52]	; 0x34
   150ac:	orr	r0, r1, r0
   150b0:	clz	r0, r0
   150b4:	lsr	r0, r0, #5
   150b8:	and	r0, r0, #1
   150bc:	strb	r0, [fp, #-1]
   150c0:	b	150d0 <__assert_fail@plt+0x2518>
   150c4:	movw	r0, #0
   150c8:	and	r0, r0, #1
   150cc:	strb	r0, [fp, #-1]
   150d0:	ldrb	r0, [fp, #-1]
   150d4:	and	r0, r0, #1
   150d8:	mov	sp, fp
   150dc:	pop	{fp, pc}
   150e0:	andeq	r4, sl, r0, lsl #18
   150e4:	push	{fp, lr}
   150e8:	mov	fp, sp
   150ec:	sub	sp, sp, #16
   150f0:	str	r0, [fp, #-4]
   150f4:	str	r1, [sp, #8]
   150f8:	str	r2, [sp, #4]
   150fc:	ldr	r0, [fp, #-4]
   15100:	ldr	r1, [sp, #8]
   15104:	ldr	r2, [sp, #4]
   15108:	bl	17618 <__assert_fail@plt+0x4a60>
   1510c:	and	r0, r0, #1
   15110:	mov	sp, fp
   15114:	pop	{fp, pc}
   15118:	push	{fp, lr}
   1511c:	mov	fp, sp
   15120:	sub	sp, sp, #16
   15124:	str	r0, [fp, #-4]
   15128:	str	r1, [sp, #8]
   1512c:	str	r2, [sp, #4]
   15130:	movw	r0, #92	; 0x5c
   15134:	movt	r0, #9
   15138:	ldr	r0, [r0, #12]
   1513c:	ldr	r1, [sp, #8]
   15140:	ldr	r2, [sp, #4]
   15144:	bl	17618 <__assert_fail@plt+0x4a60>
   15148:	and	r0, r0, #1
   1514c:	mov	sp, fp
   15150:	pop	{fp, pc}
   15154:	sub	sp, sp, #12
   15158:	str	r0, [sp, #8]
   1515c:	str	r1, [sp, #4]
   15160:	str	r2, [sp]
   15164:	movw	r0, #0
   15168:	and	r0, r0, #1
   1516c:	add	sp, sp, #12
   15170:	bx	lr
   15174:	push	{r4, r5, fp, lr}
   15178:	add	fp, sp, #8
   1517c:	sub	sp, sp, #40	; 0x28
   15180:	str	r0, [fp, #-12]
   15184:	str	r1, [fp, #-16]
   15188:	str	r2, [fp, #-20]	; 0xffffffec
   1518c:	ldr	r0, [fp, #-20]	; 0xffffffec
   15190:	ldr	r0, [r0, #44]	; 0x2c
   15194:	str	r0, [sp, #24]
   15198:	ldr	r0, [fp, #-12]
   1519c:	movw	r1, #92	; 0x5c
   151a0:	movt	r1, #9
   151a4:	ldr	r2, [r1, #16]
   151a8:	ldr	r1, [r1, #12]
   151ac:	ldr	r3, [fp, #-16]
   151b0:	movw	ip, #136	; 0x88
   151b4:	movt	ip, #9
   151b8:	ldr	lr, [ip, #20]
   151bc:	ldr	ip, [ip, #40]	; 0x28
   151c0:	ldr	r4, [fp, #-20]	; 0xffffffec
   151c4:	ldrb	r4, [r4, #32]
   151c8:	and	r4, r4, #1
   151cc:	ldr	r5, [sp, #24]
   151d0:	str	r1, [sp, #20]
   151d4:	mov	r1, r2
   151d8:	ldr	r2, [sp, #20]
   151dc:	str	lr, [sp]
   151e0:	str	ip, [sp, #4]
   151e4:	str	r4, [sp, #8]
   151e8:	str	r5, [sp, #12]
   151ec:	bl	29d68 <__assert_fail@plt+0x171b0>
   151f0:	movw	r0, #1
   151f4:	and	r0, r0, #1
   151f8:	sub	sp, fp, #8
   151fc:	pop	{r4, r5, fp, pc}
   15200:	push	{fp, lr}
   15204:	mov	fp, sp
   15208:	sub	sp, sp, #24
   1520c:	str	r0, [fp, #-4]
   15210:	str	r1, [fp, #-8]
   15214:	str	r2, [sp, #12]
   15218:	ldr	r0, [sp, #12]
   1521c:	ldr	r0, [r0, #44]	; 0x2c
   15220:	ldr	r1, [sp, #12]
   15224:	ldr	r1, [r1, #56]	; 0x38
   15228:	ldr	r2, [sp, #12]
   1522c:	ldrb	r2, [r2, #52]	; 0x34
   15230:	ldr	r3, [fp, #-4]
   15234:	and	r2, r2, #1
   15238:	movw	ip, #57048	; 0xded8
   1523c:	movt	ip, #7
   15240:	str	r3, [sp, #8]
   15244:	mov	r3, ip
   15248:	ldr	ip, [sp, #8]
   1524c:	str	ip, [sp]
   15250:	bl	2ad84 <__assert_fail@plt+0x181cc>
   15254:	movw	r1, #1
   15258:	and	r1, r1, #1
   1525c:	str	r0, [sp, #4]
   15260:	mov	r0, r1
   15264:	mov	sp, fp
   15268:	pop	{fp, pc}
   1526c:	push	{fp, lr}
   15270:	mov	fp, sp
   15274:	sub	sp, sp, #24
   15278:	str	r0, [fp, #-4]
   1527c:	str	r1, [fp, #-8]
   15280:	str	r2, [sp, #12]
   15284:	ldr	r0, [sp, #12]
   15288:	ldr	r0, [r0, #44]	; 0x2c
   1528c:	str	r0, [sp, #8]
   15290:	ldr	r0, [fp, #-4]
   15294:	ldr	r1, [sp, #8]
   15298:	bl	12b4c <fputs@plt>
   1529c:	ldr	r1, [sp, #8]
   152a0:	movw	r2, #0
   152a4:	str	r0, [sp, #4]
   152a8:	mov	r0, r2
   152ac:	bl	12a8c <putc@plt>
   152b0:	movw	r1, #1
   152b4:	and	r1, r1, #1
   152b8:	str	r0, [sp]
   152bc:	mov	r0, r1
   152c0:	mov	sp, fp
   152c4:	pop	{fp, pc}
   152c8:	push	{fp, lr}
   152cc:	mov	fp, sp
   152d0:	sub	sp, sp, #16
   152d4:	str	r0, [sp, #8]
   152d8:	str	r1, [sp, #4]
   152dc:	str	r2, [sp]
   152e0:	ldr	r0, [sp, #4]
   152e4:	ldr	r1, [sp, #8]
   152e8:	bl	21384 <__assert_fail@plt+0xe7cc>
   152ec:	ldr	r1, [sp]
   152f0:	ldr	r1, [r1, #40]	; 0x28
   152f4:	bl	124c8 <strcmp@plt>
   152f8:	cmp	r0, #0
   152fc:	bne	15310 <__assert_fail@plt+0x2758>
   15300:	movw	r0, #1
   15304:	and	r0, r0, #1
   15308:	strb	r0, [fp, #-1]
   1530c:	b	1531c <__assert_fail@plt+0x2764>
   15310:	movw	r0, #0
   15314:	and	r0, r0, #1
   15318:	strb	r0, [fp, #-1]
   1531c:	ldrb	r0, [fp, #-1]
   15320:	and	r0, r0, #1
   15324:	mov	sp, fp
   15328:	pop	{fp, pc}
   1532c:	sub	sp, sp, #36	; 0x24
   15330:	str	r0, [sp, #28]
   15334:	str	r1, [sp, #24]
   15338:	str	r2, [sp, #20]
   1533c:	ldr	r0, [sp, #20]
   15340:	ldr	r0, [r0, #40]	; 0x28
   15344:	cmp	r0, #0
   15348:	str	r0, [sp, #16]
   1534c:	beq	15374 <__assert_fail@plt+0x27bc>
   15350:	b	15354 <__assert_fail@plt+0x279c>
   15354:	ldr	r0, [sp, #16]
   15358:	cmp	r0, #1
   1535c:	beq	153b4 <__assert_fail@plt+0x27fc>
   15360:	b	15364 <__assert_fail@plt+0x27ac>
   15364:	ldr	r0, [sp, #16]
   15368:	cmp	r0, #2
   1536c:	beq	153f4 <__assert_fail@plt+0x283c>
   15370:	b	15430 <__assert_fail@plt+0x2878>
   15374:	ldr	r0, [sp, #24]
   15378:	ldr	r0, [r0, #28]
   1537c:	ldr	r1, [sp, #20]
   15380:	ldr	r2, [r1, #48]	; 0x30
   15384:	ldr	r1, [r1, #52]	; 0x34
   15388:	subs	r0, r2, r0
   1538c:	sbcs	r1, r1, #0
   15390:	str	r0, [sp, #12]
   15394:	str	r1, [sp, #8]
   15398:	bcs	153b0 <__assert_fail@plt+0x27f8>
   1539c:	b	153a0 <__assert_fail@plt+0x27e8>
   153a0:	movw	r0, #1
   153a4:	and	r0, r0, #1
   153a8:	strb	r0, [sp, #35]	; 0x23
   153ac:	b	1543c <__assert_fail@plt+0x2884>
   153b0:	b	15430 <__assert_fail@plt+0x2878>
   153b4:	ldr	r0, [sp, #24]
   153b8:	ldr	r0, [r0, #28]
   153bc:	ldr	r1, [sp, #20]
   153c0:	ldr	r2, [r1, #48]	; 0x30
   153c4:	ldr	r1, [r1, #52]	; 0x34
   153c8:	subs	r0, r0, r2
   153cc:	rscs	r1, r1, #0
   153d0:	str	r0, [sp, #4]
   153d4:	str	r1, [sp]
   153d8:	bcs	153f0 <__assert_fail@plt+0x2838>
   153dc:	b	153e0 <__assert_fail@plt+0x2828>
   153e0:	movw	r0, #1
   153e4:	and	r0, r0, #1
   153e8:	strb	r0, [sp, #35]	; 0x23
   153ec:	b	1543c <__assert_fail@plt+0x2884>
   153f0:	b	15430 <__assert_fail@plt+0x2878>
   153f4:	ldr	r0, [sp, #24]
   153f8:	ldr	r0, [r0, #28]
   153fc:	ldr	r1, [sp, #20]
   15400:	ldr	r2, [r1, #48]	; 0x30
   15404:	ldr	r1, [r1, #52]	; 0x34
   15408:	eor	r0, r0, r2
   1540c:	orr	r0, r0, r1
   15410:	cmp	r0, #0
   15414:	bne	1542c <__assert_fail@plt+0x2874>
   15418:	b	1541c <__assert_fail@plt+0x2864>
   1541c:	movw	r0, #1
   15420:	and	r0, r0, #1
   15424:	strb	r0, [sp, #35]	; 0x23
   15428:	b	1543c <__assert_fail@plt+0x2884>
   1542c:	b	15430 <__assert_fail@plt+0x2878>
   15430:	movw	r0, #0
   15434:	and	r0, r0, #1
   15438:	strb	r0, [sp, #35]	; 0x23
   1543c:	ldrb	r0, [sp, #35]	; 0x23
   15440:	and	r0, r0, #1
   15444:	add	sp, sp, #36	; 0x24
   15448:	bx	lr
   1544c:	sub	sp, sp, #16
   15450:	str	r0, [sp, #8]
   15454:	str	r1, [sp, #4]
   15458:	str	r2, [sp]
   1545c:	ldr	r0, [sp]
   15460:	ldr	r0, [r0, #40]	; 0x28
   15464:	ldr	r1, [sp, #4]
   15468:	ldr	r1, [r1, #28]
   1546c:	cmp	r0, r1
   15470:	bne	15484 <__assert_fail@plt+0x28cc>
   15474:	movw	r0, #1
   15478:	and	r0, r0, #1
   1547c:	strb	r0, [sp, #15]
   15480:	b	15490 <__assert_fail@plt+0x28d8>
   15484:	movw	r0, #0
   15488:	and	r0, r0, #1
   1548c:	strb	r0, [sp, #15]
   15490:	ldrb	r0, [sp, #15]
   15494:	and	r0, r0, #1
   15498:	add	sp, sp, #16
   1549c:	bx	lr
   154a0:	push	{fp, lr}
   154a4:	mov	fp, sp
   154a8:	sub	sp, sp, #16
   154ac:	str	r0, [fp, #-4]
   154b0:	str	r1, [sp, #8]
   154b4:	str	r2, [sp, #4]
   154b8:	ldr	r0, [fp, #-4]
   154bc:	ldr	r1, [sp, #8]
   154c0:	ldr	r2, [sp, #4]
   154c4:	movw	r3, #1
   154c8:	and	r3, r3, #1
   154cc:	bl	154dc <__assert_fail@plt+0x2924>
   154d0:	and	r0, r0, #1
   154d4:	mov	sp, fp
   154d8:	pop	{fp, pc}
   154dc:	push	{fp, lr}
   154e0:	mov	fp, sp
   154e4:	sub	sp, sp, #24
   154e8:	str	r0, [fp, #-4]
   154ec:	str	r1, [fp, #-8]
   154f0:	str	r2, [sp, #12]
   154f4:	and	r0, r3, #1
   154f8:	strb	r0, [sp, #11]
   154fc:	movw	r0, #0
   15500:	strb	r0, [sp, #10]
   15504:	ldr	r0, [fp, #-8]
   15508:	ldr	r0, [r0, #16]
   1550c:	and	r0, r0, #61440	; 0xf000
   15510:	cmp	r0, #40960	; 0xa000
   15514:	bne	155a8 <__assert_fail@plt+0x29f0>
   15518:	movw	r0, #92	; 0x5c
   1551c:	movt	r0, #9
   15520:	ldr	r1, [r0, #16]
   15524:	ldr	r0, [r0, #12]
   15528:	str	r0, [sp]
   1552c:	mov	r0, r1
   15530:	ldr	r1, [sp]
   15534:	bl	2ba3c <__assert_fail@plt+0x18e84>
   15538:	str	r0, [sp, #4]
   1553c:	ldr	r0, [sp, #4]
   15540:	movw	r1, #0
   15544:	cmp	r0, r1
   15548:	beq	15580 <__assert_fail@plt+0x29c8>
   1554c:	ldr	r0, [sp, #12]
   15550:	ldr	r0, [r0, #40]	; 0x28
   15554:	ldr	r1, [sp, #4]
   15558:	ldrb	r2, [sp, #11]
   1555c:	tst	r2, #1
   15560:	movw	r2, #16
   15564:	moveq	r2, #0
   15568:	bl	127a4 <fnmatch@plt>
   1556c:	cmp	r0, #0
   15570:	bne	1557c <__assert_fail@plt+0x29c4>
   15574:	movw	r0, #1
   15578:	strb	r0, [sp, #10]
   1557c:	b	155a0 <__assert_fail@plt+0x29e8>
   15580:	bl	128d0 <__errno_location@plt>
   15584:	ldr	r0, [r0]
   15588:	ldr	r1, [fp, #-4]
   1558c:	bl	1c000 <__assert_fail@plt+0x9448>
   15590:	movw	r0, #92	; 0x5c
   15594:	movt	r0, #9
   15598:	movw	r1, #1
   1559c:	str	r1, [r0, #28]
   155a0:	ldr	r0, [sp, #4]
   155a4:	bl	50c68 <__assert_fail@plt+0x3e0b0>
   155a8:	ldrb	r0, [sp, #10]
   155ac:	and	r0, r0, #1
   155b0:	mov	sp, fp
   155b4:	pop	{fp, pc}
   155b8:	push	{fp, lr}
   155bc:	mov	fp, sp
   155c0:	sub	sp, sp, #16
   155c4:	str	r0, [fp, #-4]
   155c8:	str	r1, [sp, #8]
   155cc:	str	r2, [sp, #4]
   155d0:	ldr	r0, [fp, #-4]
   155d4:	ldr	r1, [sp, #4]
   155d8:	ldr	r1, [r1, #40]	; 0x28
   155dc:	movw	r2, #16
   155e0:	bl	155f0 <__assert_fail@plt+0x2a38>
   155e4:	and	r0, r0, #1
   155e8:	mov	sp, fp
   155ec:	pop	{fp, pc}
   155f0:	push	{fp, lr}
   155f4:	mov	fp, sp
   155f8:	sub	sp, sp, #24
   155fc:	str	r0, [fp, #-4]
   15600:	str	r1, [fp, #-8]
   15604:	str	r2, [sp, #12]
   15608:	ldr	r0, [fp, #-4]
   1560c:	bl	2c428 <__assert_fail@plt+0x19870>
   15610:	str	r0, [sp, #4]
   15614:	ldr	r0, [sp, #4]
   15618:	bl	2c6dc <__assert_fail@plt+0x19b24>
   1561c:	ldr	r1, [fp, #-8]
   15620:	ldr	r2, [sp, #4]
   15624:	ldr	lr, [sp, #12]
   15628:	str	r0, [sp]
   1562c:	mov	r0, r1
   15630:	mov	r1, r2
   15634:	mov	r2, lr
   15638:	bl	127a4 <fnmatch@plt>
   1563c:	cmp	r0, #0
   15640:	movw	r0, #0
   15644:	moveq	r0, #1
   15648:	and	r0, r0, #1
   1564c:	strb	r0, [sp, #11]
   15650:	ldr	r0, [sp, #4]
   15654:	bl	50c68 <__assert_fail@plt+0x3e0b0>
   15658:	ldrb	r0, [sp, #11]
   1565c:	and	r0, r0, #1
   15660:	mov	sp, fp
   15664:	pop	{fp, pc}
   15668:	sub	sp, sp, #36	; 0x24
   1566c:	str	r0, [sp, #28]
   15670:	str	r1, [sp, #24]
   15674:	str	r2, [sp, #20]
   15678:	ldr	r0, [sp, #20]
   1567c:	ldr	r0, [r0, #40]	; 0x28
   15680:	cmp	r0, #0
   15684:	str	r0, [sp, #16]
   15688:	beq	156b0 <__assert_fail@plt+0x2af8>
   1568c:	b	15690 <__assert_fail@plt+0x2ad8>
   15690:	ldr	r0, [sp, #16]
   15694:	cmp	r0, #1
   15698:	beq	156f4 <__assert_fail@plt+0x2b3c>
   1569c:	b	156a0 <__assert_fail@plt+0x2ae8>
   156a0:	ldr	r0, [sp, #16]
   156a4:	cmp	r0, #2
   156a8:	beq	15738 <__assert_fail@plt+0x2b80>
   156ac:	b	1577c <__assert_fail@plt+0x2bc4>
   156b0:	ldr	r0, [sp, #24]
   156b4:	ldr	r1, [r0, #96]	; 0x60
   156b8:	ldr	r0, [r0, #100]	; 0x64
   156bc:	ldr	r2, [sp, #20]
   156c0:	ldr	r3, [r2, #48]	; 0x30
   156c4:	ldr	r2, [r2, #52]	; 0x34
   156c8:	subs	r1, r3, r1
   156cc:	sbcs	r0, r2, r0
   156d0:	str	r1, [sp, #12]
   156d4:	str	r0, [sp, #8]
   156d8:	bcs	156f0 <__assert_fail@plt+0x2b38>
   156dc:	b	156e0 <__assert_fail@plt+0x2b28>
   156e0:	movw	r0, #1
   156e4:	and	r0, r0, #1
   156e8:	strb	r0, [sp, #35]	; 0x23
   156ec:	b	15788 <__assert_fail@plt+0x2bd0>
   156f0:	b	1577c <__assert_fail@plt+0x2bc4>
   156f4:	ldr	r0, [sp, #24]
   156f8:	ldr	r1, [r0, #96]	; 0x60
   156fc:	ldr	r0, [r0, #100]	; 0x64
   15700:	ldr	r2, [sp, #20]
   15704:	ldr	r3, [r2, #48]	; 0x30
   15708:	ldr	r2, [r2, #52]	; 0x34
   1570c:	subs	r1, r1, r3
   15710:	sbcs	r0, r0, r2
   15714:	str	r1, [sp, #4]
   15718:	str	r0, [sp]
   1571c:	bcs	15734 <__assert_fail@plt+0x2b7c>
   15720:	b	15724 <__assert_fail@plt+0x2b6c>
   15724:	movw	r0, #1
   15728:	and	r0, r0, #1
   1572c:	strb	r0, [sp, #35]	; 0x23
   15730:	b	15788 <__assert_fail@plt+0x2bd0>
   15734:	b	1577c <__assert_fail@plt+0x2bc4>
   15738:	ldr	r0, [sp, #24]
   1573c:	ldr	r1, [r0, #96]	; 0x60
   15740:	ldr	r0, [r0, #100]	; 0x64
   15744:	ldr	r2, [sp, #20]
   15748:	ldr	r3, [r2, #48]	; 0x30
   1574c:	ldr	r2, [r2, #52]	; 0x34
   15750:	eor	r0, r0, r2
   15754:	eor	r1, r1, r3
   15758:	orr	r0, r1, r0
   1575c:	cmp	r0, #0
   15760:	bne	15778 <__assert_fail@plt+0x2bc0>
   15764:	b	15768 <__assert_fail@plt+0x2bb0>
   15768:	movw	r0, #1
   1576c:	and	r0, r0, #1
   15770:	strb	r0, [sp, #35]	; 0x23
   15774:	b	15788 <__assert_fail@plt+0x2bd0>
   15778:	b	1577c <__assert_fail@plt+0x2bc4>
   1577c:	movw	r0, #0
   15780:	and	r0, r0, #1
   15784:	strb	r0, [sp, #35]	; 0x23
   15788:	ldrb	r0, [sp, #35]	; 0x23
   1578c:	and	r0, r0, #1
   15790:	add	sp, sp, #36	; 0x24
   15794:	bx	lr
   15798:	push	{fp, lr}
   1579c:	mov	fp, sp
   157a0:	sub	sp, sp, #16
   157a4:	str	r0, [sp, #8]
   157a8:	str	r1, [sp, #4]
   157ac:	str	r2, [sp]
   157b0:	ldr	r0, [sp]
   157b4:	ldr	r0, [r0, #40]	; 0x28
   157b8:	ldr	r1, [sp, #8]
   157bc:	movw	r2, #16
   157c0:	bl	127a4 <fnmatch@plt>
   157c4:	cmp	r0, #0
   157c8:	bne	157dc <__assert_fail@plt+0x2c24>
   157cc:	movw	r0, #1
   157d0:	and	r0, r0, #1
   157d4:	strb	r0, [fp, #-1]
   157d8:	b	157e8 <__assert_fail@plt+0x2c30>
   157dc:	movw	r0, #0
   157e0:	and	r0, r0, #1
   157e4:	strb	r0, [fp, #-1]
   157e8:	ldrb	r0, [fp, #-1]
   157ec:	and	r0, r0, #1
   157f0:	mov	sp, fp
   157f4:	pop	{fp, pc}
   157f8:	sub	sp, sp, #36	; 0x24
   157fc:	str	r0, [sp, #28]
   15800:	str	r1, [sp, #24]
   15804:	str	r2, [sp, #20]
   15808:	ldr	r0, [sp, #20]
   1580c:	ldr	r0, [r0, #40]	; 0x28
   15810:	cmp	r0, #0
   15814:	str	r0, [sp, #16]
   15818:	beq	15840 <__assert_fail@plt+0x2c88>
   1581c:	b	15820 <__assert_fail@plt+0x2c68>
   15820:	ldr	r0, [sp, #16]
   15824:	cmp	r0, #1
   15828:	beq	15880 <__assert_fail@plt+0x2cc8>
   1582c:	b	15830 <__assert_fail@plt+0x2c78>
   15830:	ldr	r0, [sp, #16]
   15834:	cmp	r0, #2
   15838:	beq	158c0 <__assert_fail@plt+0x2d08>
   1583c:	b	158fc <__assert_fail@plt+0x2d44>
   15840:	ldr	r0, [sp, #24]
   15844:	ldr	r0, [r0, #20]
   15848:	ldr	r1, [sp, #20]
   1584c:	ldr	r2, [r1, #48]	; 0x30
   15850:	ldr	r1, [r1, #52]	; 0x34
   15854:	subs	r0, r2, r0
   15858:	sbcs	r1, r1, #0
   1585c:	str	r0, [sp, #12]
   15860:	str	r1, [sp, #8]
   15864:	bcs	1587c <__assert_fail@plt+0x2cc4>
   15868:	b	1586c <__assert_fail@plt+0x2cb4>
   1586c:	movw	r0, #1
   15870:	and	r0, r0, #1
   15874:	strb	r0, [sp, #35]	; 0x23
   15878:	b	15908 <__assert_fail@plt+0x2d50>
   1587c:	b	158fc <__assert_fail@plt+0x2d44>
   15880:	ldr	r0, [sp, #24]
   15884:	ldr	r0, [r0, #20]
   15888:	ldr	r1, [sp, #20]
   1588c:	ldr	r2, [r1, #48]	; 0x30
   15890:	ldr	r1, [r1, #52]	; 0x34
   15894:	subs	r0, r0, r2
   15898:	rscs	r1, r1, #0
   1589c:	str	r0, [sp, #4]
   158a0:	str	r1, [sp]
   158a4:	bcs	158bc <__assert_fail@plt+0x2d04>
   158a8:	b	158ac <__assert_fail@plt+0x2cf4>
   158ac:	movw	r0, #1
   158b0:	and	r0, r0, #1
   158b4:	strb	r0, [sp, #35]	; 0x23
   158b8:	b	15908 <__assert_fail@plt+0x2d50>
   158bc:	b	158fc <__assert_fail@plt+0x2d44>
   158c0:	ldr	r0, [sp, #24]
   158c4:	ldr	r0, [r0, #20]
   158c8:	ldr	r1, [sp, #20]
   158cc:	ldr	r2, [r1, #48]	; 0x30
   158d0:	ldr	r1, [r1, #52]	; 0x34
   158d4:	eor	r0, r0, r2
   158d8:	orr	r0, r0, r1
   158dc:	cmp	r0, #0
   158e0:	bne	158f8 <__assert_fail@plt+0x2d40>
   158e4:	b	158e8 <__assert_fail@plt+0x2d30>
   158e8:	movw	r0, #1
   158ec:	and	r0, r0, #1
   158f0:	strb	r0, [sp, #35]	; 0x23
   158f4:	b	15908 <__assert_fail@plt+0x2d50>
   158f8:	b	158fc <__assert_fail@plt+0x2d44>
   158fc:	movw	r0, #0
   15900:	and	r0, r0, #1
   15904:	strb	r0, [sp, #35]	; 0x23
   15908:	ldrb	r0, [sp, #35]	; 0x23
   1590c:	and	r0, r0, #1
   15910:	add	sp, sp, #36	; 0x24
   15914:	bx	lr
   15918:	push	{fp, lr}
   1591c:	mov	fp, sp
   15920:	sub	sp, sp, #16
   15924:	str	r0, [fp, #-4]
   15928:	str	r1, [sp, #8]
   1592c:	str	r2, [sp, #4]
   15930:	ldr	r0, [fp, #-4]
   15934:	ldr	r1, [sp, #8]
   15938:	ldr	r2, [sp, #4]
   1593c:	movw	r3, #0
   15940:	and	r3, r3, #1
   15944:	bl	154dc <__assert_fail@plt+0x2924>
   15948:	and	r0, r0, #1
   1594c:	mov	sp, fp
   15950:	pop	{fp, pc}
   15954:	push	{fp, lr}
   15958:	mov	fp, sp
   1595c:	sub	sp, sp, #16
   15960:	str	r0, [fp, #-4]
   15964:	str	r1, [sp, #8]
   15968:	str	r2, [sp, #4]
   1596c:	ldr	r0, [fp, #-4]
   15970:	ldr	r1, [sp, #8]
   15974:	ldr	r2, [sp, #4]
   15978:	bl	15174 <__assert_fail@plt+0x25bc>
   1597c:	and	r0, r0, #1
   15980:	mov	sp, fp
   15984:	pop	{fp, pc}
   15988:	push	{fp, lr}
   1598c:	mov	fp, sp
   15990:	sub	sp, sp, #24
   15994:	str	r0, [fp, #-4]
   15998:	str	r1, [fp, #-8]
   1599c:	str	r2, [sp, #12]
   159a0:	ldr	r1, [fp, #-8]
   159a4:	add	r0, sp, #4
   159a8:	bl	4b924 <__assert_fail@plt+0x38d6c>
   159ac:	ldr	r2, [sp, #12]
   159b0:	ldr	r0, [sp, #4]
   159b4:	ldr	r1, [sp, #8]
   159b8:	mov	r3, #60	; 0x3c
   159bc:	bl	14674 <__assert_fail@plt+0x1abc>
   159c0:	and	r0, r0, #1
   159c4:	mov	sp, fp
   159c8:	pop	{fp, pc}
   159cc:	push	{fp, lr}
   159d0:	mov	fp, sp
   159d4:	sub	sp, sp, #24
   159d8:	str	r0, [fp, #-4]
   159dc:	str	r1, [fp, #-8]
   159e0:	str	r2, [sp, #12]
   159e4:	ldr	r1, [fp, #-8]
   159e8:	add	r0, sp, #4
   159ec:	bl	4b924 <__assert_fail@plt+0x38d6c>
   159f0:	ldr	r2, [sp, #12]
   159f4:	ldr	r0, [sp, #4]
   159f8:	ldr	r1, [sp, #8]
   159fc:	movw	r3, #20864	; 0x5180
   15a00:	movt	r3, #1
   15a04:	bl	14674 <__assert_fail@plt+0x1abc>
   15a08:	and	r0, r0, #1
   15a0c:	mov	sp, fp
   15a10:	pop	{fp, pc}
   15a14:	push	{fp, lr}
   15a18:	mov	fp, sp
   15a1c:	sub	sp, sp, #16
   15a20:	str	r0, [fp, #-4]
   15a24:	str	r1, [sp, #8]
   15a28:	str	r2, [sp, #4]
   15a2c:	ldr	r0, [fp, #-4]
   15a30:	ldr	r1, [sp, #4]
   15a34:	ldr	r1, [r1, #40]	; 0x28
   15a38:	movw	r2, #0
   15a3c:	bl	155f0 <__assert_fail@plt+0x2a38>
   15a40:	and	r0, r0, #1
   15a44:	mov	sp, fp
   15a48:	pop	{fp, pc}
   15a4c:	push	{fp, lr}
   15a50:	mov	fp, sp
   15a54:	sub	sp, sp, #16
   15a58:	str	r0, [fp, #-4]
   15a5c:	str	r1, [sp, #8]
   15a60:	str	r2, [sp, #4]
   15a64:	ldr	r0, [fp, #-4]
   15a68:	ldr	r1, [sp, #8]
   15a6c:	ldr	r2, [sp, #4]
   15a70:	ldr	r2, [r2, #160]	; 0xa0
   15a74:	bl	1d804 <__assert_fail@plt+0xac4c>
   15a78:	mvn	r1, #0
   15a7c:	eor	r0, r0, r1
   15a80:	and	r0, r0, #1
   15a84:	mov	sp, fp
   15a88:	pop	{fp, pc}
   15a8c:	push	{fp, lr}
   15a90:	mov	fp, sp
   15a94:	sub	sp, sp, #24
   15a98:	str	r0, [fp, #-4]
   15a9c:	str	r1, [fp, #-8]
   15aa0:	str	r2, [sp, #12]
   15aa4:	ldr	r0, [sp, #12]
   15aa8:	ldr	r0, [r0, #44]	; 0x2c
   15aac:	movw	r1, #0
   15ab0:	cmp	r1, r0
   15ab4:	bne	15abc <__assert_fail@plt+0x2f04>
   15ab8:	b	15adc <__assert_fail@plt+0x2f24>
   15abc:	movw	r0, #32926	; 0x809e
   15ac0:	movt	r0, #7
   15ac4:	movw	r1, #32965	; 0x80c5
   15ac8:	movt	r1, #7
   15acc:	movw	r2, #621	; 0x26d
   15ad0:	movw	r3, #33123	; 0x8163
   15ad4:	movt	r3, #7
   15ad8:	bl	12bb8 <__assert_fail@plt>
   15adc:	ldr	r1, [fp, #-8]
   15ae0:	add	r0, sp, #4
   15ae4:	bl	4b924 <__assert_fail@plt+0x38d6c>
   15ae8:	ldr	r0, [sp, #12]
   15aec:	ldr	r1, [sp, #4]
   15af0:	ldr	lr, [sp, #8]
   15af4:	ldr	r2, [r0, #48]	; 0x30
   15af8:	ldr	r3, [r0, #52]	; 0x34
   15afc:	mov	r0, r1
   15b00:	mov	r1, lr
   15b04:	bl	14914 <__assert_fail@plt+0x1d5c>
   15b08:	cmp	r0, #0
   15b0c:	movw	r0, #0
   15b10:	movgt	r0, #1
   15b14:	and	r0, r0, #1
   15b18:	mov	sp, fp
   15b1c:	pop	{fp, pc}
   15b20:	push	{fp, lr}
   15b24:	mov	fp, sp
   15b28:	sub	sp, sp, #80	; 0x50
   15b2c:	str	r0, [fp, #-8]
   15b30:	str	r1, [fp, #-12]
   15b34:	str	r2, [fp, #-16]
   15b38:	movw	r0, #0
   15b3c:	strb	r0, [fp, #-25]	; 0xffffffe7
   15b40:	ldr	r0, [fp, #-16]
   15b44:	ldr	r0, [r0, #44]	; 0x2c
   15b48:	movw	r1, #0
   15b4c:	cmp	r1, r0
   15b50:	bne	15b58 <__assert_fail@plt+0x2fa0>
   15b54:	b	15b78 <__assert_fail@plt+0x2fc0>
   15b58:	movw	r0, #32926	; 0x809e
   15b5c:	movt	r0, #7
   15b60:	movw	r1, #32965	; 0x80c5
   15b64:	movt	r1, #7
   15b68:	movw	r2, #631	; 0x277
   15b6c:	movw	r3, #33189	; 0x81a5
   15b70:	movt	r3, #7
   15b74:	bl	12bb8 <__assert_fail@plt>
   15b78:	ldr	r0, [fp, #-16]
   15b7c:	ldr	r0, [r0, #40]	; 0x28
   15b80:	cmp	r0, #4
   15b84:	str	r0, [sp, #16]
   15b88:	bhi	15ce4 <__assert_fail@plt+0x312c>
   15b8c:	add	r0, pc, #8
   15b90:	ldr	r1, [sp, #16]
   15b94:	ldr	r0, [r0, r1, lsl #2]
   15b98:	mov	pc, r0
   15b9c:	strdeq	r5, [r1], -r4
   15ba0:	andeq	r5, r1, ip, lsl ip
   15ba4:	muleq	r1, r8, ip
   15ba8:	andeq	r5, r1, r0, asr #25
   15bac:			; <UNDEFINED> instruction: 0x00015bb0
   15bb0:	ldr	r0, [fp, #-16]
   15bb4:	ldr	r0, [r0, #40]	; 0x28
   15bb8:	cmp	r0, #4
   15bbc:	beq	15bc4 <__assert_fail@plt+0x300c>
   15bc0:	b	15be4 <__assert_fail@plt+0x302c>
   15bc4:	movw	r0, #33257	; 0x81e9
   15bc8:	movt	r0, #7
   15bcc:	movw	r1, #32965	; 0x80c5
   15bd0:	movt	r1, #7
   15bd4:	movw	r2, #636	; 0x27c
   15bd8:	movw	r3, #33189	; 0x81a5
   15bdc:	movt	r3, #7
   15be0:	bl	12bb8 <__assert_fail@plt>
   15be4:	movw	r0, #0
   15be8:	and	r0, r0, #1
   15bec:	strb	r0, [fp, #-1]
   15bf0:	b	15d54 <__assert_fail@plt+0x319c>
   15bf4:	ldr	r1, [fp, #-12]
   15bf8:	sub	r0, fp, #36	; 0x24
   15bfc:	bl	4b8dc <__assert_fail@plt+0x38d24>
   15c00:	ldr	r0, [fp, #-36]	; 0xffffffdc
   15c04:	str	r0, [fp, #-24]	; 0xffffffe8
   15c08:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15c0c:	str	r0, [fp, #-20]	; 0xffffffec
   15c10:	movw	r0, #1
   15c14:	strb	r0, [fp, #-25]	; 0xffffffe7
   15c18:	b	15ce4 <__assert_fail@plt+0x312c>
   15c1c:	ldr	r1, [fp, #-12]
   15c20:	add	r0, sp, #36	; 0x24
   15c24:	bl	4b948 <__assert_fail@plt+0x38d90>
   15c28:	ldr	r0, [sp, #36]	; 0x24
   15c2c:	str	r0, [fp, #-24]	; 0xffffffe8
   15c30:	ldr	r0, [sp, #40]	; 0x28
   15c34:	str	r0, [fp, #-20]	; 0xffffffec
   15c38:	movw	r0, #1
   15c3c:	strb	r0, [fp, #-25]	; 0xffffffe7
   15c40:	ldr	r0, [fp, #-20]	; 0xffffffec
   15c44:	cmp	r0, #0
   15c48:	bge	15c94 <__assert_fail@plt+0x30dc>
   15c4c:	movw	r0, #33298	; 0x8212
   15c50:	movt	r0, #7
   15c54:	bl	12864 <gettext@plt>
   15c58:	ldr	r1, [fp, #-8]
   15c5c:	movw	lr, #0
   15c60:	str	r0, [sp, #12]
   15c64:	mov	r0, lr
   15c68:	bl	1da90 <__assert_fail@plt+0xaed8>
   15c6c:	movw	r1, #0
   15c70:	str	r0, [sp, #8]
   15c74:	mov	r0, r1
   15c78:	ldr	r2, [sp, #12]
   15c7c:	ldr	r3, [sp, #8]
   15c80:	bl	12780 <error@plt>
   15c84:	movw	r0, #0
   15c88:	and	r0, r0, #1
   15c8c:	strb	r0, [fp, #-1]
   15c90:	b	15d54 <__assert_fail@plt+0x319c>
   15c94:	b	15ce4 <__assert_fail@plt+0x312c>
   15c98:	ldr	r1, [fp, #-12]
   15c9c:	add	r0, sp, #28
   15ca0:	bl	4b900 <__assert_fail@plt+0x38d48>
   15ca4:	ldr	r0, [sp, #28]
   15ca8:	str	r0, [fp, #-24]	; 0xffffffe8
   15cac:	ldr	r0, [sp, #32]
   15cb0:	str	r0, [fp, #-20]	; 0xffffffec
   15cb4:	movw	r0, #1
   15cb8:	strb	r0, [fp, #-25]	; 0xffffffe7
   15cbc:	b	15ce4 <__assert_fail@plt+0x312c>
   15cc0:	ldr	r1, [fp, #-12]
   15cc4:	add	r0, sp, #20
   15cc8:	bl	4b924 <__assert_fail@plt+0x38d6c>
   15ccc:	ldr	r0, [sp, #20]
   15cd0:	str	r0, [fp, #-24]	; 0xffffffe8
   15cd4:	ldr	r0, [sp, #24]
   15cd8:	str	r0, [fp, #-20]	; 0xffffffec
   15cdc:	movw	r0, #1
   15ce0:	strb	r0, [fp, #-25]	; 0xffffffe7
   15ce4:	ldrb	r0, [fp, #-25]	; 0xffffffe7
   15ce8:	tst	r0, #1
   15cec:	beq	15cf4 <__assert_fail@plt+0x313c>
   15cf0:	b	15d14 <__assert_fail@plt+0x315c>
   15cf4:	movw	r0, #33346	; 0x8242
   15cf8:	movt	r0, #7
   15cfc:	movw	r1, #32965	; 0x80c5
   15d00:	movt	r1, #7
   15d04:	movw	r2, #667	; 0x29b
   15d08:	movw	r3, #33189	; 0x81a5
   15d0c:	movt	r3, #7
   15d10:	bl	12bb8 <__assert_fail@plt>
   15d14:	ldr	r0, [fp, #-16]
   15d18:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15d1c:	ldr	r2, [fp, #-20]	; 0xffffffec
   15d20:	ldr	r3, [r0, #48]	; 0x30
   15d24:	ldr	r0, [r0, #52]	; 0x34
   15d28:	str	r0, [sp, #4]
   15d2c:	mov	r0, r1
   15d30:	mov	r1, r2
   15d34:	mov	r2, r3
   15d38:	ldr	r3, [sp, #4]
   15d3c:	bl	14914 <__assert_fail@plt+0x1d5c>
   15d40:	cmp	r0, #0
   15d44:	movw	r0, #0
   15d48:	movgt	r0, #1
   15d4c:	and	r0, r0, #1
   15d50:	strb	r0, [fp, #-1]
   15d54:	ldrb	r0, [fp, #-1]
   15d58:	and	r0, r0, #1
   15d5c:	mov	sp, fp
   15d60:	pop	{fp, pc}
   15d64:	push	{fp, lr}
   15d68:	mov	fp, sp
   15d6c:	sub	sp, sp, #16
   15d70:	str	r0, [fp, #-4]
   15d74:	str	r1, [sp, #8]
   15d78:	str	r2, [sp, #4]
   15d7c:	ldr	r0, [sp, #8]
   15d80:	ldr	r0, [r0, #28]
   15d84:	bl	12b94 <getgrgid@plt>
   15d88:	movw	r1, #0
   15d8c:	cmp	r0, r1
   15d90:	movw	r0, #0
   15d94:	moveq	r0, #1
   15d98:	and	r0, r0, #1
   15d9c:	mov	sp, fp
   15da0:	pop	{fp, pc}
   15da4:	push	{fp, lr}
   15da8:	mov	fp, sp
   15dac:	sub	sp, sp, #16
   15db0:	str	r0, [fp, #-4]
   15db4:	str	r1, [sp, #8]
   15db8:	str	r2, [sp, #4]
   15dbc:	ldr	r0, [sp, #8]
   15dc0:	ldr	r0, [r0, #24]
   15dc4:	bl	124e0 <getpwuid@plt>
   15dc8:	movw	r1, #0
   15dcc:	cmp	r0, r1
   15dd0:	movw	r0, #0
   15dd4:	moveq	r0, #1
   15dd8:	and	r0, r0, #1
   15ddc:	mov	sp, fp
   15de0:	pop	{fp, pc}
   15de4:	push	{fp, lr}
   15de8:	mov	fp, sp
   15dec:	sub	sp, sp, #16
   15df0:	str	r0, [sp, #8]
   15df4:	str	r1, [sp, #4]
   15df8:	str	r2, [sp]
   15dfc:	ldr	r0, [sp]
   15e00:	ldr	r0, [r0, #132]	; 0x84
   15e04:	ldr	r0, [r0]
   15e08:	ldr	r1, [sp, #8]
   15e0c:	bl	15e50 <__assert_fail@plt+0x3298>
   15e10:	tst	r0, #1
   15e14:	beq	15e34 <__assert_fail@plt+0x327c>
   15e18:	ldr	r0, [sp, #8]
   15e1c:	ldr	r1, [sp, #4]
   15e20:	ldr	r2, [sp]
   15e24:	bl	17618 <__assert_fail@plt+0x4a60>
   15e28:	and	r0, r0, #1
   15e2c:	strb	r0, [fp, #-1]
   15e30:	b	15e40 <__assert_fail@plt+0x3288>
   15e34:	movw	r0, #0
   15e38:	and	r0, r0, #1
   15e3c:	strb	r0, [fp, #-1]
   15e40:	ldrb	r0, [fp, #-1]
   15e44:	and	r0, r0, #1
   15e48:	mov	sp, fp
   15e4c:	pop	{fp, pc}
   15e50:	push	{fp, lr}
   15e54:	mov	fp, sp
   15e58:	sub	sp, sp, #32
   15e5c:	str	r0, [fp, #-4]
   15e60:	str	r1, [fp, #-8]
   15e64:	movw	r0, #63284	; 0xf734
   15e68:	movt	r0, #8
   15e6c:	ldr	r0, [r0]
   15e70:	bl	50bb8 <__assert_fail@plt+0x3e000>
   15e74:	movw	r1, #63272	; 0xf728
   15e78:	movt	r1, #8
   15e7c:	ldr	r1, [r1]
   15e80:	movw	lr, #34014	; 0x84de
   15e84:	movt	lr, #7
   15e88:	str	r0, [fp, #-12]
   15e8c:	mov	r0, lr
   15e90:	str	r1, [sp, #16]
   15e94:	bl	12864 <gettext@plt>
   15e98:	ldr	r2, [fp, #-4]
   15e9c:	ldr	r3, [fp, #-8]
   15ea0:	ldr	r1, [sp, #16]
   15ea4:	str	r0, [sp, #12]
   15ea8:	mov	r0, r1
   15eac:	ldr	r1, [sp, #12]
   15eb0:	bl	128c4 <fprintf@plt>
   15eb4:	cmp	r0, #0
   15eb8:	bge	15eec <__assert_fail@plt+0x3334>
   15ebc:	bl	128d0 <__errno_location@plt>
   15ec0:	ldr	r1, [r0]
   15ec4:	movw	r0, #34031	; 0x84ef
   15ec8:	movt	r0, #7
   15ecc:	str	r1, [sp, #8]
   15ed0:	bl	12864 <gettext@plt>
   15ed4:	movw	r1, #1
   15ed8:	str	r0, [sp, #4]
   15edc:	mov	r0, r1
   15ee0:	ldr	r1, [sp, #8]
   15ee4:	ldr	r2, [sp, #4]
   15ee8:	bl	12780 <error@plt>
   15eec:	movw	r0, #63272	; 0xf728
   15ef0:	movt	r0, #8
   15ef4:	ldr	r0, [r0]
   15ef8:	bl	50bb8 <__assert_fail@plt+0x3e000>
   15efc:	str	r0, [sp]
   15f00:	bl	50188 <__assert_fail@plt+0x3d5d0>
   15f04:	and	r0, r0, #1
   15f08:	mov	sp, fp
   15f0c:	pop	{fp, pc}
   15f10:	push	{fp, lr}
   15f14:	mov	fp, sp
   15f18:	sub	sp, sp, #16
   15f1c:	str	r0, [sp, #8]
   15f20:	str	r1, [sp, #4]
   15f24:	str	r2, [sp]
   15f28:	ldr	r0, [sp]
   15f2c:	ldr	r0, [r0, #132]	; 0x84
   15f30:	ldr	r0, [r0]
   15f34:	ldr	r1, [sp, #8]
   15f38:	bl	15e50 <__assert_fail@plt+0x3298>
   15f3c:	tst	r0, #1
   15f40:	beq	15f68 <__assert_fail@plt+0x33b0>
   15f44:	movw	r0, #92	; 0x5c
   15f48:	movt	r0, #9
   15f4c:	ldr	r0, [r0, #12]
   15f50:	ldr	r1, [sp, #4]
   15f54:	ldr	r2, [sp]
   15f58:	bl	17618 <__assert_fail@plt+0x4a60>
   15f5c:	and	r0, r0, #1
   15f60:	strb	r0, [fp, #-1]
   15f64:	b	15f74 <__assert_fail@plt+0x33bc>
   15f68:	movw	r0, #0
   15f6c:	and	r0, r0, #1
   15f70:	strb	r0, [fp, #-1]
   15f74:	ldrb	r0, [fp, #-1]
   15f78:	and	r0, r0, #1
   15f7c:	mov	sp, fp
   15f80:	pop	{fp, pc}
   15f84:	sub	sp, sp, #12
   15f88:	str	r0, [sp, #8]
   15f8c:	str	r1, [sp, #4]
   15f90:	str	r2, [sp]
   15f94:	movw	r0, #1
   15f98:	and	r0, r0, #1
   15f9c:	add	sp, sp, #12
   15fa0:	bx	lr
   15fa4:	push	{fp, lr}
   15fa8:	mov	fp, sp
   15fac:	sub	sp, sp, #16
   15fb0:	str	r0, [sp, #8]
   15fb4:	str	r1, [sp, #4]
   15fb8:	str	r2, [sp]
   15fbc:	ldr	r0, [sp]
   15fc0:	ldr	r0, [r0, #156]	; 0x9c
   15fc4:	movw	r1, #0
   15fc8:	cmp	r0, r1
   15fcc:	beq	15fec <__assert_fail@plt+0x3434>
   15fd0:	ldr	r0, [sp, #8]
   15fd4:	ldr	r1, [sp, #4]
   15fd8:	ldr	r2, [sp]
   15fdc:	ldr	r2, [r2, #156]	; 0x9c
   15fe0:	bl	1d804 <__assert_fail@plt+0xac4c>
   15fe4:	tst	r0, #1
   15fe8:	bne	1600c <__assert_fail@plt+0x3454>
   15fec:	ldr	r0, [sp, #8]
   15ff0:	ldr	r1, [sp, #4]
   15ff4:	ldr	r2, [sp]
   15ff8:	ldr	r2, [r2, #160]	; 0xa0
   15ffc:	bl	1d804 <__assert_fail@plt+0xac4c>
   16000:	and	r0, r0, #1
   16004:	strb	r0, [fp, #-1]
   16008:	b	16018 <__assert_fail@plt+0x3460>
   1600c:	movw	r0, #1
   16010:	and	r0, r0, #1
   16014:	strb	r0, [fp, #-1]
   16018:	ldrb	r0, [fp, #-1]
   1601c:	and	r0, r0, #1
   16020:	mov	sp, fp
   16024:	pop	{fp, pc}
   16028:	push	{fp, lr}
   1602c:	mov	fp, sp
   16030:	sub	sp, sp, #16
   16034:	str	r0, [sp, #8]
   16038:	str	r1, [sp, #4]
   1603c:	str	r2, [sp]
   16040:	ldr	r0, [sp]
   16044:	ldr	r0, [r0, #40]	; 0x28
   16048:	ldr	r1, [sp, #8]
   1604c:	movw	r2, #0
   16050:	bl	127a4 <fnmatch@plt>
   16054:	cmp	r0, #0
   16058:	bne	1606c <__assert_fail@plt+0x34b4>
   1605c:	movw	r0, #1
   16060:	and	r0, r0, #1
   16064:	strb	r0, [fp, #-1]
   16068:	b	16078 <__assert_fail@plt+0x34c0>
   1606c:	movw	r0, #0
   16070:	and	r0, r0, #1
   16074:	strb	r0, [fp, #-1]
   16078:	ldrb	r0, [fp, #-1]
   1607c:	and	r0, r0, #1
   16080:	mov	sp, fp
   16084:	pop	{fp, pc}
   16088:	push	{fp, lr}
   1608c:	mov	fp, sp
   16090:	sub	sp, sp, #32
   16094:	str	r0, [fp, #-8]
   16098:	str	r1, [fp, #-12]
   1609c:	str	r2, [sp, #16]
   160a0:	ldr	r0, [fp, #-12]
   160a4:	ldr	r0, [r0, #16]
   160a8:	str	r0, [sp, #12]
   160ac:	ldr	r0, [sp, #16]
   160b0:	ldr	r1, [sp, #12]
   160b4:	and	r1, r1, #61440	; 0xf000
   160b8:	sub	r1, r1, #16384	; 0x4000
   160bc:	clz	r1, r1
   160c0:	lsr	r1, r1, #5
   160c4:	add	r0, r0, r1, lsl #2
   160c8:	ldr	r0, [r0, #44]	; 0x2c
   160cc:	str	r0, [sp, #8]
   160d0:	ldr	r0, [sp, #16]
   160d4:	ldr	r0, [r0, #40]	; 0x28
   160d8:	cmp	r0, #0
   160dc:	str	r0, [sp, #4]
   160e0:	beq	16108 <__assert_fail@plt+0x3550>
   160e4:	b	160e8 <__assert_fail@plt+0x3530>
   160e8:	ldr	r0, [sp, #4]
   160ec:	cmp	r0, #1
   160f0:	beq	16130 <__assert_fail@plt+0x3578>
   160f4:	b	160f8 <__assert_fail@plt+0x3540>
   160f8:	ldr	r0, [sp, #4]
   160fc:	cmp	r0, #2
   16100:	beq	16174 <__assert_fail@plt+0x35bc>
   16104:	b	1619c <__assert_fail@plt+0x35e4>
   16108:	ldr	r0, [sp, #12]
   1610c:	ldr	r1, [sp, #8]
   16110:	and	r0, r0, r1
   16114:	ldr	r1, [sp, #8]
   16118:	cmp	r0, r1
   1611c:	movw	r0, #0
   16120:	moveq	r0, #1
   16124:	and	r0, r0, #1
   16128:	strb	r0, [fp, #-1]
   1612c:	b	161a0 <__assert_fail@plt+0x35e8>
   16130:	ldr	r0, [sp, #8]
   16134:	movw	r1, #0
   16138:	cmp	r1, r0
   1613c:	bne	16150 <__assert_fail@plt+0x3598>
   16140:	movw	r0, #1
   16144:	and	r0, r0, #1
   16148:	strb	r0, [fp, #-1]
   1614c:	b	161a0 <__assert_fail@plt+0x35e8>
   16150:	ldr	r0, [sp, #12]
   16154:	ldr	r1, [sp, #8]
   16158:	and	r0, r0, r1
   1615c:	cmp	r0, #0
   16160:	movw	r0, #0
   16164:	movne	r0, #1
   16168:	and	r0, r0, #1
   1616c:	strb	r0, [fp, #-1]
   16170:	b	161a0 <__assert_fail@plt+0x35e8>
   16174:	ldr	r0, [sp, #12]
   16178:	movw	r1, #4095	; 0xfff
   1617c:	and	r0, r0, r1
   16180:	ldr	r1, [sp, #8]
   16184:	cmp	r0, r1
   16188:	movw	r0, #0
   1618c:	moveq	r0, #1
   16190:	and	r0, r0, #1
   16194:	strb	r0, [fp, #-1]
   16198:	b	161a0 <__assert_fail@plt+0x35e8>
   1619c:	bl	12b64 <abort@plt>
   161a0:	ldrb	r0, [fp, #-1]
   161a4:	and	r0, r0, #1
   161a8:	mov	sp, fp
   161ac:	pop	{fp, pc}
   161b0:	push	{fp, lr}
   161b4:	mov	fp, sp
   161b8:	sub	sp, sp, #16
   161bc:	str	r0, [fp, #-4]
   161c0:	str	r1, [sp, #8]
   161c4:	str	r2, [sp, #4]
   161c8:	movw	r0, #92	; 0x5c
   161cc:	movt	r0, #9
   161d0:	ldr	r1, [r0, #16]
   161d4:	ldr	r0, [r0, #12]
   161d8:	str	r0, [sp]
   161dc:	mov	r0, r1
   161e0:	ldr	r1, [sp]
   161e4:	movw	r2, #1
   161e8:	movw	r3, #0
   161ec:	bl	1257c <faccessat@plt>
   161f0:	movw	r1, #0
   161f4:	cmp	r1, r0
   161f8:	movw	r0, #0
   161fc:	moveq	r0, #1
   16200:	and	r0, r0, #1
   16204:	mov	sp, fp
   16208:	pop	{fp, pc}
   1620c:	push	{fp, lr}
   16210:	mov	fp, sp
   16214:	sub	sp, sp, #16
   16218:	str	r0, [fp, #-4]
   1621c:	str	r1, [sp, #8]
   16220:	str	r2, [sp, #4]
   16224:	movw	r0, #92	; 0x5c
   16228:	movt	r0, #9
   1622c:	ldr	r1, [r0, #16]
   16230:	ldr	r0, [r0, #12]
   16234:	str	r0, [sp]
   16238:	mov	r0, r1
   1623c:	ldr	r1, [sp]
   16240:	movw	r2, #4
   16244:	movw	r3, #0
   16248:	bl	1257c <faccessat@plt>
   1624c:	movw	r1, #0
   16250:	cmp	r1, r0
   16254:	movw	r0, #0
   16258:	moveq	r0, #1
   1625c:	and	r0, r0, #1
   16260:	mov	sp, fp
   16264:	pop	{fp, pc}
   16268:	push	{fp, lr}
   1626c:	mov	fp, sp
   16270:	sub	sp, sp, #16
   16274:	str	r0, [fp, #-4]
   16278:	str	r1, [sp, #8]
   1627c:	str	r2, [sp, #4]
   16280:	movw	r0, #92	; 0x5c
   16284:	movt	r0, #9
   16288:	ldr	r1, [r0, #16]
   1628c:	ldr	r0, [r0, #12]
   16290:	str	r0, [sp]
   16294:	mov	r0, r1
   16298:	ldr	r1, [sp]
   1629c:	movw	r2, #2
   162a0:	movw	r3, #0
   162a4:	bl	1257c <faccessat@plt>
   162a8:	movw	r1, #0
   162ac:	cmp	r1, r0
   162b0:	movw	r0, #0
   162b4:	moveq	r0, #1
   162b8:	and	r0, r0, #1
   162bc:	mov	sp, fp
   162c0:	pop	{fp, pc}
   162c4:	push	{fp, lr}
   162c8:	mov	fp, sp
   162cc:	sub	sp, sp, #24
   162d0:	str	r0, [fp, #-4]
   162d4:	str	r1, [fp, #-8]
   162d8:	str	r2, [sp, #12]
   162dc:	ldr	r0, [sp, #12]
   162e0:	ldr	r0, [r0, #44]	; 0x2c
   162e4:	ldr	r1, [sp, #12]
   162e8:	ldr	r1, [r1, #56]	; 0x38
   162ec:	ldr	r2, [sp, #12]
   162f0:	ldrb	r2, [r2, #52]	; 0x34
   162f4:	ldr	r3, [fp, #-4]
   162f8:	and	r2, r2, #1
   162fc:	movw	ip, #57048	; 0xded8
   16300:	movt	ip, #7
   16304:	str	r3, [sp, #8]
   16308:	mov	r3, ip
   1630c:	ldr	ip, [sp, #8]
   16310:	str	ip, [sp]
   16314:	bl	2ad84 <__assert_fail@plt+0x181cc>
   16318:	movw	r1, #1
   1631c:	and	r1, r1, #1
   16320:	str	r0, [sp, #4]
   16324:	mov	r0, r1
   16328:	mov	sp, fp
   1632c:	pop	{fp, pc}
   16330:	push	{fp, lr}
   16334:	mov	fp, sp
   16338:	sub	sp, sp, #16
   1633c:	str	r0, [fp, #-4]
   16340:	str	r1, [sp, #8]
   16344:	str	r2, [sp, #4]
   16348:	ldr	r0, [fp, #-4]
   1634c:	ldr	r1, [sp, #8]
   16350:	ldr	r2, [sp, #4]
   16354:	bl	1526c <__assert_fail@plt+0x26b4>
   16358:	and	r0, r0, #1
   1635c:	mov	sp, fp
   16360:	pop	{fp, pc}
   16364:	push	{fp, lr}
   16368:	mov	fp, sp
   1636c:	sub	sp, sp, #16
   16370:	str	r0, [fp, #-4]
   16374:	str	r1, [sp, #8]
   16378:	str	r2, [sp, #4]
   1637c:	movw	r0, #136	; 0x88
   16380:	movt	r0, #9
   16384:	ldrb	r0, [r0]
   16388:	and	r0, r0, #1
   1638c:	cmp	r0, #1
   16390:	bne	16404 <__assert_fail@plt+0x384c>
   16394:	movw	r0, #92	; 0x5c
   16398:	movt	r0, #9
   1639c:	ldrb	r0, [r0, #4]
   163a0:	tst	r0, #1
   163a4:	beq	163ac <__assert_fail@plt+0x37f4>
   163a8:	b	163cc <__assert_fail@plt+0x3814>
   163ac:	movw	r0, #32379	; 0x7e7b
   163b0:	movt	r0, #7
   163b4:	movw	r1, #32965	; 0x80c5
   163b8:	movt	r1, #7
   163bc:	movw	r2, #853	; 0x355
   163c0:	movw	r3, #33356	; 0x824c
   163c4:	movt	r3, #7
   163c8:	bl	12bb8 <__assert_fail@plt>
   163cc:	ldr	r0, [sp, #8]
   163d0:	movw	r1, #0
   163d4:	cmp	r0, r1
   163d8:	beq	16400 <__assert_fail@plt+0x3848>
   163dc:	ldr	r0, [sp, #8]
   163e0:	ldr	r0, [r0, #16]
   163e4:	and	r0, r0, #61440	; 0xf000
   163e8:	cmp	r0, #16384	; 0x4000
   163ec:	bne	16400 <__assert_fail@plt+0x3848>
   163f0:	movw	r0, #92	; 0x5c
   163f4:	movt	r0, #9
   163f8:	movw	r1, #1
   163fc:	strb	r1, [r0, #24]
   16400:	b	16404 <__assert_fail@plt+0x384c>
   16404:	movw	r0, #1
   16408:	and	r0, r0, #1
   1640c:	mov	sp, fp
   16410:	pop	{fp, pc}
   16414:	push	{fp, lr}
   16418:	mov	fp, sp
   1641c:	sub	sp, sp, #16
   16420:	str	r0, [sp, #8]
   16424:	str	r1, [sp, #4]
   16428:	str	r2, [sp]
   1642c:	bl	1c430 <__assert_fail@plt+0x9878>
   16430:	movw	r0, #92	; 0x5c
   16434:	movt	r0, #9
   16438:	ldr	r0, [r0, #28]
   1643c:	bl	1284c <exit@plt>
   16440:	push	{fp, lr}
   16444:	mov	fp, sp
   16448:	sub	sp, sp, #24
   1644c:	str	r0, [fp, #-8]
   16450:	str	r1, [sp, #12]
   16454:	str	r2, [sp, #8]
   16458:	ldr	r0, [fp, #-8]
   1645c:	bl	12888 <strlen@plt>
   16460:	str	r0, [sp, #4]
   16464:	ldr	r0, [sp, #8]
   16468:	ldr	r0, [r0, #40]	; 0x28
   1646c:	ldr	r1, [fp, #-8]
   16470:	ldr	r2, [sp, #4]
   16474:	movw	lr, #0
   16478:	mov	r3, lr
   1647c:	str	lr, [sp]
   16480:	bl	592e4 <__assert_fail@plt+0x4672c>
   16484:	ldr	r1, [sp, #4]
   16488:	cmp	r0, r1
   1648c:	bne	164a0 <__assert_fail@plt+0x38e8>
   16490:	movw	r0, #1
   16494:	and	r0, r0, #1
   16498:	strb	r0, [fp, #-1]
   1649c:	b	164ac <__assert_fail@plt+0x38f4>
   164a0:	movw	r0, #0
   164a4:	and	r0, r0, #1
   164a8:	strb	r0, [fp, #-1]
   164ac:	ldrb	r0, [fp, #-1]
   164b0:	and	r0, r0, #1
   164b4:	mov	sp, fp
   164b8:	pop	{fp, pc}
   164bc:	push	{fp, lr}
   164c0:	mov	fp, sp
   164c4:	sub	sp, sp, #48	; 0x30
   164c8:	str	r0, [fp, #-8]
   164cc:	str	r1, [fp, #-12]
   164d0:	str	r2, [fp, #-16]
   164d4:	ldr	r0, [fp, #-12]
   164d8:	ldr	r1, [r0, #48]	; 0x30
   164dc:	ldr	r0, [r0, #52]	; 0x34
   164e0:	ldr	r2, [fp, #-16]
   164e4:	ldr	r2, [r2, #44]	; 0x2c
   164e8:	asr	r3, r2, #31
   164ec:	str	r0, [sp, #20]
   164f0:	mov	r0, r1
   164f4:	ldr	r1, [sp, #20]
   164f8:	bl	77780 <__assert_fail@plt+0x64bc8>
   164fc:	orr	r2, r2, r3
   16500:	adds	r3, r0, #1
   16504:	adc	lr, r1, #0
   16508:	cmp	r2, #0
   1650c:	movne	r0, r3
   16510:	cmp	r2, #0
   16514:	movne	r1, lr
   16518:	str	r0, [sp, #24]
   1651c:	str	r1, [sp, #28]
   16520:	ldr	r0, [fp, #-16]
   16524:	ldr	r0, [r0, #40]	; 0x28
   16528:	cmp	r0, #0
   1652c:	str	r0, [sp, #16]
   16530:	beq	16558 <__assert_fail@plt+0x39a0>
   16534:	b	16538 <__assert_fail@plt+0x3980>
   16538:	ldr	r0, [sp, #16]
   1653c:	cmp	r0, #1
   16540:	beq	16598 <__assert_fail@plt+0x39e0>
   16544:	b	16548 <__assert_fail@plt+0x3990>
   16548:	ldr	r0, [sp, #16]
   1654c:	cmp	r0, #2
   16550:	beq	165d8 <__assert_fail@plt+0x3a20>
   16554:	b	16618 <__assert_fail@plt+0x3a60>
   16558:	ldr	r0, [sp, #24]
   1655c:	ldr	r1, [sp, #28]
   16560:	ldr	r2, [fp, #-16]
   16564:	ldr	r3, [r2, #48]	; 0x30
   16568:	ldr	r2, [r2, #52]	; 0x34
   1656c:	subs	r0, r3, r0
   16570:	sbcs	r1, r2, r1
   16574:	str	r0, [sp, #12]
   16578:	str	r1, [sp, #8]
   1657c:	bcs	16594 <__assert_fail@plt+0x39dc>
   16580:	b	16584 <__assert_fail@plt+0x39cc>
   16584:	movw	r0, #1
   16588:	and	r0, r0, #1
   1658c:	strb	r0, [fp, #-1]
   16590:	b	16624 <__assert_fail@plt+0x3a6c>
   16594:	b	16618 <__assert_fail@plt+0x3a60>
   16598:	ldr	r0, [sp, #24]
   1659c:	ldr	r1, [sp, #28]
   165a0:	ldr	r2, [fp, #-16]
   165a4:	ldr	r3, [r2, #48]	; 0x30
   165a8:	ldr	r2, [r2, #52]	; 0x34
   165ac:	subs	r0, r0, r3
   165b0:	sbcs	r1, r1, r2
   165b4:	str	r0, [sp, #4]
   165b8:	str	r1, [sp]
   165bc:	bcs	165d4 <__assert_fail@plt+0x3a1c>
   165c0:	b	165c4 <__assert_fail@plt+0x3a0c>
   165c4:	movw	r0, #1
   165c8:	and	r0, r0, #1
   165cc:	strb	r0, [fp, #-1]
   165d0:	b	16624 <__assert_fail@plt+0x3a6c>
   165d4:	b	16618 <__assert_fail@plt+0x3a60>
   165d8:	ldr	r0, [sp, #24]
   165dc:	ldr	r1, [sp, #28]
   165e0:	ldr	r2, [fp, #-16]
   165e4:	ldr	r3, [r2, #48]	; 0x30
   165e8:	ldr	r2, [r2, #52]	; 0x34
   165ec:	eor	r1, r1, r2
   165f0:	eor	r0, r0, r3
   165f4:	orr	r0, r0, r1
   165f8:	cmp	r0, #0
   165fc:	bne	16614 <__assert_fail@plt+0x3a5c>
   16600:	b	16604 <__assert_fail@plt+0x3a4c>
   16604:	movw	r0, #1
   16608:	and	r0, r0, #1
   1660c:	strb	r0, [fp, #-1]
   16610:	b	16624 <__assert_fail@plt+0x3a6c>
   16614:	b	16618 <__assert_fail@plt+0x3a60>
   16618:	movw	r0, #0
   1661c:	and	r0, r0, #1
   16620:	strb	r0, [fp, #-1]
   16624:	ldrb	r0, [fp, #-1]
   16628:	and	r0, r0, #1
   1662c:	mov	sp, fp
   16630:	pop	{fp, pc}
   16634:	push	{fp, lr}
   16638:	mov	fp, sp
   1663c:	sub	sp, sp, #24
   16640:	str	r0, [fp, #-8]
   16644:	str	r1, [sp, #12]
   16648:	str	r2, [sp, #8]
   1664c:	ldr	r0, [sp, #12]
   16650:	ldr	r1, [r0, #96]	; 0x60
   16654:	ldr	r0, [r0, #100]	; 0x64
   16658:	orr	r0, r1, r0
   1665c:	cmp	r0, #0
   16660:	beq	166ac <__assert_fail@plt+0x3af4>
   16664:	b	16668 <__assert_fail@plt+0x3ab0>
   16668:	ldr	r0, [sp, #12]
   1666c:	ldr	r1, [r0, #96]	; 0x60
   16670:	ldr	r0, [r0, #100]	; 0x64
   16674:	ldr	r2, [sp, #8]
   16678:	ldr	r3, [r2, #40]	; 0x28
   1667c:	ldr	r2, [r2, #44]	; 0x2c
   16680:	eor	r0, r0, r2
   16684:	eor	r1, r1, r3
   16688:	orr	r0, r1, r0
   1668c:	cmp	r0, #0
   16690:	beq	166a8 <__assert_fail@plt+0x3af0>
   16694:	b	16698 <__assert_fail@plt+0x3ae0>
   16698:	movw	r0, #0
   1669c:	and	r0, r0, #1
   166a0:	strb	r0, [fp, #-1]
   166a4:	b	16754 <__assert_fail@plt+0x3b9c>
   166a8:	b	166ac <__assert_fail@plt+0x3af4>
   166ac:	ldr	r0, [fp, #-8]
   166b0:	movw	r1, #92	; 0x5c
   166b4:	movt	r1, #9
   166b8:	ldr	r1, [r1, #12]
   166bc:	ldr	r2, [sp, #12]
   166c0:	bl	1beb8 <__assert_fail@plt+0x9300>
   166c4:	movw	r1, #0
   166c8:	cmp	r1, r0
   166cc:	bne	16748 <__assert_fail@plt+0x3b90>
   166d0:	ldr	r0, [sp, #12]
   166d4:	ldr	r1, [r0, #96]	; 0x60
   166d8:	ldr	r0, [r0, #100]	; 0x64
   166dc:	ldr	r2, [sp, #8]
   166e0:	ldr	r3, [r2, #40]	; 0x28
   166e4:	ldr	r2, [r2, #44]	; 0x2c
   166e8:	eor	r0, r0, r2
   166ec:	eor	r1, r1, r3
   166f0:	orr	r0, r1, r0
   166f4:	mov	r1, #0
   166f8:	cmp	r0, #0
   166fc:	str	r1, [sp, #4]
   16700:	bne	16738 <__assert_fail@plt+0x3b80>
   16704:	b	16708 <__assert_fail@plt+0x3b50>
   16708:	ldr	r0, [sp, #12]
   1670c:	ldr	r1, [r0]
   16710:	ldr	r0, [r0, #4]
   16714:	ldr	r2, [sp, #8]
   16718:	ldr	r3, [r2, #48]	; 0x30
   1671c:	ldr	r2, [r2, #52]	; 0x34
   16720:	eor	r0, r0, r2
   16724:	eor	r1, r1, r3
   16728:	orr	r0, r1, r0
   1672c:	clz	r0, r0
   16730:	lsr	r0, r0, #5
   16734:	str	r0, [sp, #4]
   16738:	ldr	r0, [sp, #4]
   1673c:	and	r0, r0, #1
   16740:	strb	r0, [fp, #-1]
   16744:	b	16754 <__assert_fail@plt+0x3b9c>
   16748:	movw	r0, #0
   1674c:	and	r0, r0, #1
   16750:	strb	r0, [fp, #-1]
   16754:	ldrb	r0, [fp, #-1]
   16758:	and	r0, r0, #1
   1675c:	mov	sp, fp
   16760:	pop	{fp, pc}
   16764:	sub	sp, sp, #12
   16768:	str	r0, [sp, #8]
   1676c:	str	r1, [sp, #4]
   16770:	str	r2, [sp]
   16774:	movw	r0, #1
   16778:	and	r0, r0, #1
   1677c:	add	sp, sp, #12
   16780:	bx	lr
   16784:	push	{fp, lr}
   16788:	mov	fp, sp
   1678c:	sub	sp, sp, #32
   16790:	str	r0, [fp, #-8]
   16794:	str	r1, [fp, #-12]
   16798:	str	r2, [sp, #16]
   1679c:	movw	r0, #7
   167a0:	str	r0, [sp, #8]
   167a4:	movw	r0, #92	; 0x5c
   167a8:	movt	r0, #9
   167ac:	ldrb	r0, [r0, #5]
   167b0:	tst	r0, #1
   167b4:	beq	167bc <__assert_fail@plt+0x3c04>
   167b8:	b	167dc <__assert_fail@plt+0x3c24>
   167bc:	movw	r0, #33422	; 0x828e
   167c0:	movt	r0, #7
   167c4:	movw	r1, #32965	; 0x80c5
   167c8:	movt	r1, #7
   167cc:	movw	r2, #977	; 0x3d1
   167d0:	movw	r3, #33438	; 0x829e
   167d4:	movt	r3, #7
   167d8:	bl	12bb8 <__assert_fail@plt>
   167dc:	movw	r0, #92	; 0x5c
   167e0:	movt	r0, #9
   167e4:	ldr	r0, [r0, #8]
   167e8:	movw	r1, #0
   167ec:	cmp	r1, r0
   167f0:	bne	16804 <__assert_fail@plt+0x3c4c>
   167f4:	movw	r0, #0
   167f8:	and	r0, r0, #1
   167fc:	strb	r0, [fp, #-1]
   16800:	b	16944 <__assert_fail@plt+0x3d8c>
   16804:	movw	r0, #92	; 0x5c
   16808:	movt	r0, #9
   1680c:	ldrb	r0, [r0, #4]
   16810:	tst	r0, #1
   16814:	beq	16828 <__assert_fail@plt+0x3c70>
   16818:	ldr	r0, [fp, #-12]
   1681c:	ldr	r0, [r0, #16]
   16820:	str	r0, [sp, #12]
   16824:	b	16838 <__assert_fail@plt+0x3c80>
   16828:	movw	r0, #92	; 0x5c
   1682c:	movt	r0, #9
   16830:	ldr	r0, [r0, #8]
   16834:	str	r0, [sp, #12]
   16838:	ldr	r0, [sp, #12]
   1683c:	and	r0, r0, #61440	; 0xf000
   16840:	cmp	r0, #4096	; 0x1000
   16844:	str	r0, [sp, #4]
   16848:	beq	168f8 <__assert_fail@plt+0x3d40>
   1684c:	b	16850 <__assert_fail@plt+0x3c98>
   16850:	ldr	r0, [sp, #4]
   16854:	cmp	r0, #8192	; 0x2000
   16858:	beq	168e0 <__assert_fail@plt+0x3d28>
   1685c:	b	16860 <__assert_fail@plt+0x3ca8>
   16860:	ldr	r0, [sp, #4]
   16864:	cmp	r0, #16384	; 0x4000
   16868:	beq	168bc <__assert_fail@plt+0x3d04>
   1686c:	b	16870 <__assert_fail@plt+0x3cb8>
   16870:	ldr	r0, [sp, #4]
   16874:	cmp	r0, #24576	; 0x6000
   16878:	beq	168d4 <__assert_fail@plt+0x3d1c>
   1687c:	b	16880 <__assert_fail@plt+0x3cc8>
   16880:	ldr	r0, [sp, #4]
   16884:	cmp	r0, #32768	; 0x8000
   16888:	beq	168b0 <__assert_fail@plt+0x3cf8>
   1688c:	b	16890 <__assert_fail@plt+0x3cd8>
   16890:	ldr	r0, [sp, #4]
   16894:	cmp	r0, #40960	; 0xa000
   16898:	beq	168c8 <__assert_fail@plt+0x3d10>
   1689c:	b	168a0 <__assert_fail@plt+0x3ce8>
   168a0:	ldr	r0, [sp, #4]
   168a4:	cmp	r0, #49152	; 0xc000
   168a8:	beq	168ec <__assert_fail@plt+0x3d34>
   168ac:	b	16900 <__assert_fail@plt+0x3d48>
   168b0:	movw	r0, #3
   168b4:	str	r0, [sp, #8]
   168b8:	b	16900 <__assert_fail@plt+0x3d48>
   168bc:	movw	r0, #2
   168c0:	str	r0, [sp, #8]
   168c4:	b	16900 <__assert_fail@plt+0x3d48>
   168c8:	movw	r0, #4
   168cc:	str	r0, [sp, #8]
   168d0:	b	16900 <__assert_fail@plt+0x3d48>
   168d4:	movw	r0, #0
   168d8:	str	r0, [sp, #8]
   168dc:	b	16900 <__assert_fail@plt+0x3d48>
   168e0:	movw	r0, #1
   168e4:	str	r0, [sp, #8]
   168e8:	b	16900 <__assert_fail@plt+0x3d48>
   168ec:	movw	r0, #6
   168f0:	str	r0, [sp, #8]
   168f4:	b	16900 <__assert_fail@plt+0x3d48>
   168f8:	movw	r0, #5
   168fc:	str	r0, [sp, #8]
   16900:	ldr	r0, [sp, #8]
   16904:	cmp	r0, #7
   16908:	beq	16938 <__assert_fail@plt+0x3d80>
   1690c:	ldr	r0, [sp, #16]
   16910:	add	r0, r0, #40	; 0x28
   16914:	ldr	r1, [sp, #8]
   16918:	add	r0, r0, r1
   1691c:	ldrb	r0, [r0]
   16920:	tst	r0, #1
   16924:	beq	16938 <__assert_fail@plt+0x3d80>
   16928:	movw	r0, #1
   1692c:	and	r0, r0, #1
   16930:	strb	r0, [fp, #-1]
   16934:	b	16944 <__assert_fail@plt+0x3d8c>
   16938:	movw	r0, #0
   1693c:	and	r0, r0, #1
   16940:	strb	r0, [fp, #-1]
   16944:	ldrb	r0, [fp, #-1]
   16948:	and	r0, r0, #1
   1694c:	mov	sp, fp
   16950:	pop	{fp, pc}
   16954:	sub	sp, sp, #36	; 0x24
   16958:	str	r0, [sp, #28]
   1695c:	str	r1, [sp, #24]
   16960:	str	r2, [sp, #20]
   16964:	ldr	r0, [sp, #20]
   16968:	ldr	r0, [r0, #40]	; 0x28
   1696c:	cmp	r0, #0
   16970:	str	r0, [sp, #16]
   16974:	beq	1699c <__assert_fail@plt+0x3de4>
   16978:	b	1697c <__assert_fail@plt+0x3dc4>
   1697c:	ldr	r0, [sp, #16]
   16980:	cmp	r0, #1
   16984:	beq	169dc <__assert_fail@plt+0x3e24>
   16988:	b	1698c <__assert_fail@plt+0x3dd4>
   1698c:	ldr	r0, [sp, #16]
   16990:	cmp	r0, #2
   16994:	beq	16a1c <__assert_fail@plt+0x3e64>
   16998:	b	16a58 <__assert_fail@plt+0x3ea0>
   1699c:	ldr	r0, [sp, #24]
   169a0:	ldr	r0, [r0, #24]
   169a4:	ldr	r1, [sp, #20]
   169a8:	ldr	r2, [r1, #48]	; 0x30
   169ac:	ldr	r1, [r1, #52]	; 0x34
   169b0:	subs	r0, r2, r0
   169b4:	sbcs	r1, r1, #0
   169b8:	str	r0, [sp, #12]
   169bc:	str	r1, [sp, #8]
   169c0:	bcs	169d8 <__assert_fail@plt+0x3e20>
   169c4:	b	169c8 <__assert_fail@plt+0x3e10>
   169c8:	movw	r0, #1
   169cc:	and	r0, r0, #1
   169d0:	strb	r0, [sp, #35]	; 0x23
   169d4:	b	16a64 <__assert_fail@plt+0x3eac>
   169d8:	b	16a58 <__assert_fail@plt+0x3ea0>
   169dc:	ldr	r0, [sp, #24]
   169e0:	ldr	r0, [r0, #24]
   169e4:	ldr	r1, [sp, #20]
   169e8:	ldr	r2, [r1, #48]	; 0x30
   169ec:	ldr	r1, [r1, #52]	; 0x34
   169f0:	subs	r0, r0, r2
   169f4:	rscs	r1, r1, #0
   169f8:	str	r0, [sp, #4]
   169fc:	str	r1, [sp]
   16a00:	bcs	16a18 <__assert_fail@plt+0x3e60>
   16a04:	b	16a08 <__assert_fail@plt+0x3e50>
   16a08:	movw	r0, #1
   16a0c:	and	r0, r0, #1
   16a10:	strb	r0, [sp, #35]	; 0x23
   16a14:	b	16a64 <__assert_fail@plt+0x3eac>
   16a18:	b	16a58 <__assert_fail@plt+0x3ea0>
   16a1c:	ldr	r0, [sp, #24]
   16a20:	ldr	r0, [r0, #24]
   16a24:	ldr	r1, [sp, #20]
   16a28:	ldr	r2, [r1, #48]	; 0x30
   16a2c:	ldr	r1, [r1, #52]	; 0x34
   16a30:	eor	r0, r0, r2
   16a34:	orr	r0, r0, r1
   16a38:	cmp	r0, #0
   16a3c:	bne	16a54 <__assert_fail@plt+0x3e9c>
   16a40:	b	16a44 <__assert_fail@plt+0x3e8c>
   16a44:	movw	r0, #1
   16a48:	and	r0, r0, #1
   16a4c:	strb	r0, [sp, #35]	; 0x23
   16a50:	b	16a64 <__assert_fail@plt+0x3eac>
   16a54:	b	16a58 <__assert_fail@plt+0x3ea0>
   16a58:	movw	r0, #0
   16a5c:	and	r0, r0, #1
   16a60:	strb	r0, [sp, #35]	; 0x23
   16a64:	ldrb	r0, [sp, #35]	; 0x23
   16a68:	and	r0, r0, #1
   16a6c:	add	sp, sp, #36	; 0x24
   16a70:	bx	lr
   16a74:	push	{fp, lr}
   16a78:	mov	fp, sp
   16a7c:	sub	sp, sp, #56	; 0x38
   16a80:	str	r0, [fp, #-8]
   16a84:	str	r1, [fp, #-12]
   16a88:	str	r2, [fp, #-16]
   16a8c:	ldr	r1, [fp, #-12]
   16a90:	add	r0, sp, #8
   16a94:	bl	4b8dc <__assert_fail@plt+0x38d24>
   16a98:	vldr	d16, [sp, #8]
   16a9c:	vstr	d16, [sp, #24]
   16aa0:	ldr	r1, [fp, #-12]
   16aa4:	mov	r0, sp
   16aa8:	bl	4b900 <__assert_fail@plt+0x38d48>
   16aac:	vldr	d16, [sp]
   16ab0:	vstr	d16, [sp, #16]
   16ab4:	ldr	r0, [sp, #24]
   16ab8:	ldr	r1, [sp, #28]
   16abc:	ldr	r2, [sp, #16]
   16ac0:	ldr	r3, [sp, #20]
   16ac4:	bl	14914 <__assert_fail@plt+0x1d5c>
   16ac8:	cmp	r0, #0
   16acc:	bge	16ae0 <__assert_fail@plt+0x3f28>
   16ad0:	movw	r0, #0
   16ad4:	and	r0, r0, #1
   16ad8:	strb	r0, [fp, #-1]
   16adc:	b	16b48 <__assert_fail@plt+0x3f90>
   16ae0:	ldr	r0, [sp, #16]
   16ae4:	ldr	r1, [sp, #24]
   16ae8:	sub	r0, r0, r1
   16aec:	str	r0, [fp, #-24]	; 0xffffffe8
   16af0:	ldr	r0, [sp, #20]
   16af4:	ldr	r1, [sp, #28]
   16af8:	sub	r0, r0, r1
   16afc:	str	r0, [fp, #-20]	; 0xffffffec
   16b00:	ldr	r0, [fp, #-20]	; 0xffffffec
   16b04:	cmp	r0, #0
   16b08:	bge	16b28 <__assert_fail@plt+0x3f70>
   16b0c:	ldr	r0, [pc, #68]	; 16b58 <__assert_fail@plt+0x3fa0>
   16b10:	ldr	r1, [fp, #-20]	; 0xffffffec
   16b14:	add	r0, r1, r0
   16b18:	str	r0, [fp, #-20]	; 0xffffffec
   16b1c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16b20:	sub	r0, r0, #1
   16b24:	str	r0, [fp, #-24]	; 0xffffffe8
   16b28:	ldr	r2, [fp, #-16]
   16b2c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16b30:	ldr	r1, [fp, #-20]	; 0xffffffec
   16b34:	movw	r3, #20864	; 0x5180
   16b38:	movt	r3, #1
   16b3c:	bl	14674 <__assert_fail@plt+0x1abc>
   16b40:	and	r0, r0, #1
   16b44:	strb	r0, [fp, #-1]
   16b48:	ldrb	r0, [fp, #-1]
   16b4c:	and	r0, r0, #1
   16b50:	mov	sp, fp
   16b54:	pop	{fp, pc}
   16b58:	blcc	fe6c9360 <stdout@@GLIBC_2.4+0xfe639c2c>
   16b5c:	sub	sp, sp, #16
   16b60:	str	r0, [sp, #8]
   16b64:	str	r1, [sp, #4]
   16b68:	str	r2, [sp]
   16b6c:	ldr	r0, [sp]
   16b70:	ldr	r0, [r0, #40]	; 0x28
   16b74:	ldr	r1, [sp, #4]
   16b78:	ldr	r1, [r1, #24]
   16b7c:	cmp	r0, r1
   16b80:	bne	16b94 <__assert_fail@plt+0x3fdc>
   16b84:	movw	r0, #1
   16b88:	and	r0, r0, #1
   16b8c:	strb	r0, [sp, #15]
   16b90:	b	16ba0 <__assert_fail@plt+0x3fe8>
   16b94:	movw	r0, #0
   16b98:	and	r0, r0, #1
   16b9c:	strb	r0, [sp, #15]
   16ba0:	ldrb	r0, [sp, #15]
   16ba4:	and	r0, r0, #1
   16ba8:	add	sp, sp, #16
   16bac:	bx	lr
   16bb0:	push	{fp, lr}
   16bb4:	mov	fp, sp
   16bb8:	sub	sp, sp, #144	; 0x90
   16bbc:	str	r0, [fp, #-8]
   16bc0:	str	r1, [fp, #-12]
   16bc4:	str	r2, [fp, #-16]
   16bc8:	bl	1cbdc <__assert_fail@plt+0xa024>
   16bcc:	tst	r0, #1
   16bd0:	beq	16be4 <__assert_fail@plt+0x402c>
   16bd4:	movw	r0, #51800	; 0xca58
   16bd8:	movt	r0, #1
   16bdc:	str	r0, [sp, #20]
   16be0:	b	16bf0 <__assert_fail@plt+0x4038>
   16be4:	movw	r0, #51596	; 0xc98c
   16be8:	movt	r0, #1
   16bec:	str	r0, [sp, #20]
   16bf0:	add	r0, sp, #24
   16bf4:	bl	1bea8 <__assert_fail@plt+0x92f0>
   16bf8:	ldr	r0, [sp, #20]
   16bfc:	movw	lr, #92	; 0x5c
   16c00:	movt	lr, #9
   16c04:	ldr	lr, [lr, #12]
   16c08:	str	r0, [sp, #16]
   16c0c:	mov	r0, lr
   16c10:	add	r1, sp, #24
   16c14:	ldr	lr, [sp, #16]
   16c18:	blx	lr
   16c1c:	cmp	r0, #0
   16c20:	beq	16cc4 <__assert_fail@plt+0x410c>
   16c24:	bl	1cbdc <__assert_fail@plt+0xa024>
   16c28:	tst	r0, #1
   16c2c:	beq	16c5c <__assert_fail@plt+0x40a4>
   16c30:	bl	128d0 <__errno_location@plt>
   16c34:	ldr	r0, [r0]
   16c38:	cmp	r0, #2
   16c3c:	bne	16c5c <__assert_fail@plt+0x40a4>
   16c40:	ldr	r0, [fp, #-8]
   16c44:	ldr	r1, [fp, #-12]
   16c48:	ldr	r2, [fp, #-16]
   16c4c:	bl	16784 <__assert_fail@plt+0x3bcc>
   16c50:	and	r0, r0, #1
   16c54:	strb	r0, [fp, #-1]
   16c58:	b	16cdc <__assert_fail@plt+0x4124>
   16c5c:	bl	128d0 <__errno_location@plt>
   16c60:	ldr	r1, [r0]
   16c64:	ldr	r0, [fp, #-8]
   16c68:	movw	lr, #0
   16c6c:	str	r0, [sp, #12]
   16c70:	mov	r0, lr
   16c74:	ldr	lr, [sp, #12]
   16c78:	str	r1, [sp, #8]
   16c7c:	mov	r1, lr
   16c80:	bl	1da90 <__assert_fail@plt+0xaed8>
   16c84:	movw	r1, #0
   16c88:	str	r0, [sp, #4]
   16c8c:	mov	r0, r1
   16c90:	ldr	r1, [sp, #8]
   16c94:	movw	r2, #59431	; 0xe827
   16c98:	movt	r2, #7
   16c9c:	ldr	r3, [sp, #4]
   16ca0:	bl	12780 <error@plt>
   16ca4:	movw	r0, #92	; 0x5c
   16ca8:	movt	r0, #9
   16cac:	movw	r1, #1
   16cb0:	str	r1, [r0, #28]
   16cb4:	movw	r0, #0
   16cb8:	and	r0, r0, #1
   16cbc:	strb	r0, [fp, #-1]
   16cc0:	b	16cdc <__assert_fail@plt+0x4124>
   16cc4:	ldr	r0, [fp, #-8]
   16cc8:	ldr	r2, [fp, #-16]
   16ccc:	add	r1, sp, #24
   16cd0:	bl	16784 <__assert_fail@plt+0x3bcc>
   16cd4:	and	r0, r0, #1
   16cd8:	strb	r0, [fp, #-1]
   16cdc:	ldrb	r0, [fp, #-1]
   16ce0:	and	r0, r0, #1
   16ce4:	mov	sp, fp
   16ce8:	pop	{fp, pc}
   16cec:	push	{fp, lr}
   16cf0:	mov	fp, sp
   16cf4:	sub	sp, sp, #40	; 0x28
   16cf8:	str	r0, [fp, #-8]
   16cfc:	str	r1, [fp, #-12]
   16d00:	str	r2, [fp, #-16]
   16d04:	movw	r0, #136	; 0x88
   16d08:	movt	r0, #9
   16d0c:	ldr	r0, [r0, #64]	; 0x40
   16d10:	movw	r1, #92	; 0x5c
   16d14:	movt	r1, #9
   16d18:	ldr	r2, [r1, #16]
   16d1c:	ldr	r1, [r1, #12]
   16d20:	str	r0, [sp, #12]
   16d24:	mov	r0, r2
   16d28:	add	r2, sp, #20
   16d2c:	ldr	r3, [sp, #12]
   16d30:	blx	r3
   16d34:	str	r0, [sp, #16]
   16d38:	ldr	r0, [sp, #16]
   16d3c:	cmp	r0, #0
   16d40:	bge	16d9c <__assert_fail@plt+0x41e4>
   16d44:	bl	128d0 <__errno_location@plt>
   16d48:	ldr	r1, [r0]
   16d4c:	movw	r0, #33503	; 0x82df
   16d50:	movt	r0, #7
   16d54:	str	r1, [sp, #8]
   16d58:	bl	12864 <gettext@plt>
   16d5c:	ldr	r1, [fp, #-8]
   16d60:	movw	lr, #0
   16d64:	str	r0, [sp, #4]
   16d68:	mov	r0, lr
   16d6c:	bl	1da90 <__assert_fail@plt+0xaed8>
   16d70:	movw	r1, #0
   16d74:	str	r0, [sp]
   16d78:	mov	r0, r1
   16d7c:	ldr	r1, [sp, #8]
   16d80:	ldr	r2, [sp, #4]
   16d84:	ldr	r3, [sp]
   16d88:	bl	12780 <error@plt>
   16d8c:	movw	r0, #0
   16d90:	and	r0, r0, #1
   16d94:	strb	r0, [fp, #-1]
   16d98:	b	16de4 <__assert_fail@plt+0x422c>
   16d9c:	ldr	r0, [fp, #-16]
   16da0:	ldr	r0, [r0, #40]	; 0x28
   16da4:	ldr	r1, [sp, #20]
   16da8:	movw	r2, #0
   16dac:	bl	127a4 <fnmatch@plt>
   16db0:	cmp	r0, #0
   16db4:	movw	r0, #0
   16db8:	moveq	r0, #1
   16dbc:	and	r0, r0, #1
   16dc0:	str	r0, [sp, #16]
   16dc4:	ldr	r0, [sp, #20]
   16dc8:	bl	12ac8 <freecon@plt>
   16dcc:	ldr	r0, [sp, #16]
   16dd0:	cmp	r0, #0
   16dd4:	movw	r0, #0
   16dd8:	movne	r0, #1
   16ddc:	and	r0, r0, #1
   16de0:	strb	r0, [fp, #-1]
   16de4:	ldrb	r0, [fp, #-1]
   16de8:	and	r0, r0, #1
   16dec:	mov	sp, fp
   16df0:	pop	{fp, pc}
   16df4:	push	{r4, r5, fp, lr}
   16df8:	add	fp, sp, #8
   16dfc:	sub	sp, sp, #288	; 0x120
   16e00:	str	r0, [fp, #-12]
   16e04:	str	r1, [fp, #-16]
   16e08:	ldr	r0, [fp, #-16]
   16e0c:	str	r0, [fp, #-20]	; 0xffffffec
   16e10:	ldr	r0, [fp, #-20]	; 0xffffffec
   16e14:	movw	r1, #0
   16e18:	cmp	r0, r1
   16e1c:	beq	16e6c <__assert_fail@plt+0x42b4>
   16e20:	add	r1, sp, #20
   16e24:	ldr	r0, [fp, #-12]
   16e28:	ldr	r2, [fp, #-20]	; 0xffffffec
   16e2c:	ldr	r2, [r2, #4]
   16e30:	str	r0, [sp, #16]
   16e34:	mov	r0, r2
   16e38:	bl	16e88 <__assert_fail@plt+0x42d0>
   16e3c:	ldr	r1, [sp, #16]
   16e40:	str	r0, [sp, #12]
   16e44:	mov	r0, r1
   16e48:	movw	r1, #33525	; 0x82f5
   16e4c:	movt	r1, #7
   16e50:	ldr	r2, [sp, #12]
   16e54:	bl	128c4 <fprintf@plt>
   16e58:	ldr	r1, [fp, #-20]	; 0xffffffec
   16e5c:	ldr	r1, [r1, #152]	; 0x98
   16e60:	str	r1, [fp, #-20]	; 0xffffffec
   16e64:	str	r0, [sp, #8]
   16e68:	b	16e10 <__assert_fail@plt+0x4258>
   16e6c:	ldr	r0, [fp, #-12]
   16e70:	movw	r1, #39196	; 0x991c
   16e74:	movt	r1, #7
   16e78:	bl	128c4 <fprintf@plt>
   16e7c:	str	r0, [sp, #4]
   16e80:	sub	sp, fp, #8
   16e84:	pop	{r4, r5, fp, pc}
   16e88:	push	{fp, lr}
   16e8c:	mov	fp, sp
   16e90:	sub	sp, sp, #32
   16e94:	str	r0, [fp, #-8]
   16e98:	str	r1, [fp, #-12]
   16e9c:	ldr	r0, [fp, #-8]
   16ea0:	movw	r1, #0
   16ea4:	cmp	r0, r1
   16ea8:	bne	16eb8 <__assert_fail@plt+0x4300>
   16eac:	movw	r0, #0
   16eb0:	str	r0, [fp, #-4]
   16eb4:	b	16f7c <__assert_fail@plt+0x43c4>
   16eb8:	ldr	r0, [fp, #-12]
   16ebc:	ldr	r1, [fp, #-8]
   16ec0:	bl	12738 <strcpy@plt>
   16ec4:	ldr	r1, [fp, #-12]
   16ec8:	str	r0, [sp, #12]
   16ecc:	mov	r0, r1
   16ed0:	bl	12888 <strlen@plt>
   16ed4:	sub	r0, r0, #1
   16ed8:	str	r0, [sp, #16]
   16edc:	ldr	r0, [sp, #16]
   16ee0:	cmp	r0, #0
   16ee4:	movw	r0, #0
   16ee8:	str	r0, [sp, #8]
   16eec:	blt	16f38 <__assert_fail@plt+0x4380>
   16ef0:	ldr	r0, [fp, #-12]
   16ef4:	ldr	r1, [sp, #16]
   16ef8:	add	r0, r0, r1
   16efc:	ldrb	r0, [r0]
   16f00:	cmp	r0, #32
   16f04:	movw	r0, #1
   16f08:	str	r0, [sp, #4]
   16f0c:	beq	16f30 <__assert_fail@plt+0x4378>
   16f10:	ldr	r0, [fp, #-12]
   16f14:	ldr	r1, [sp, #16]
   16f18:	add	r0, r0, r1
   16f1c:	ldrb	r0, [r0]
   16f20:	cmp	r0, #9
   16f24:	movw	r0, #0
   16f28:	moveq	r0, #1
   16f2c:	str	r0, [sp, #4]
   16f30:	ldr	r0, [sp, #4]
   16f34:	str	r0, [sp, #8]
   16f38:	ldr	r0, [sp, #8]
   16f3c:	tst	r0, #1
   16f40:	beq	16f58 <__assert_fail@plt+0x43a0>
   16f44:	ldr	r0, [sp, #16]
   16f48:	mvn	r1, #0
   16f4c:	add	r0, r0, r1
   16f50:	str	r0, [sp, #16]
   16f54:	b	16edc <__assert_fail@plt+0x4324>
   16f58:	ldr	r0, [fp, #-12]
   16f5c:	ldr	r1, [sp, #16]
   16f60:	add	r1, r1, #1
   16f64:	str	r1, [sp, #16]
   16f68:	add	r0, r0, r1
   16f6c:	movw	r1, #0
   16f70:	strb	r1, [r0]
   16f74:	ldr	r0, [fp, #-12]
   16f78:	str	r0, [fp, #-4]
   16f7c:	ldr	r0, [fp, #-4]
   16f80:	mov	sp, fp
   16f84:	pop	{fp, pc}
   16f88:	push	{fp, lr}
   16f8c:	mov	fp, sp
   16f90:	sub	sp, sp, #40	; 0x28
   16f94:	str	r0, [fp, #-4]
   16f98:	str	r1, [fp, #-8]
   16f9c:	ldr	r0, [fp, #-8]
   16fa0:	movw	r1, #0
   16fa4:	cmp	r0, r1
   16fa8:	beq	17120 <__assert_fail@plt+0x4568>
   16fac:	ldr	r0, [fp, #-4]
   16fb0:	ldr	r1, [fp, #-8]
   16fb4:	ldr	r1, [r1, #156]	; 0x9c
   16fb8:	bl	17128 <__assert_fail@plt+0x4570>
   16fbc:	ldr	r0, [fp, #-4]
   16fc0:	ldr	r1, [fp, #-8]
   16fc4:	ldrb	r1, [r1, #18]
   16fc8:	tst	r1, #1
   16fcc:	movw	r1, #33538	; 0x8302
   16fd0:	movt	r1, #7
   16fd4:	movw	lr, #39197	; 0x991d
   16fd8:	movt	lr, #7
   16fdc:	mov	r2, lr
   16fe0:	movne	r2, r1
   16fe4:	ldr	r1, [fp, #-8]
   16fe8:	ldrb	r1, [r1, #19]
   16fec:	tst	r1, #1
   16ff0:	movw	r1, #33551	; 0x830f
   16ff4:	movt	r1, #7
   16ff8:	mov	r3, lr
   16ffc:	movne	r3, r1
   17000:	ldr	r1, [fp, #-8]
   17004:	ldrb	r1, [r1, #20]
   17008:	tst	r1, #1
   1700c:	movw	r1, #33564	; 0x831c
   17010:	movt	r1, #7
   17014:	movne	lr, r1
   17018:	movw	r1, #33531	; 0x82fb
   1701c:	movt	r1, #7
   17020:	str	lr, [sp]
   17024:	bl	128c4 <fprintf@plt>
   17028:	ldr	r1, [fp, #-4]
   1702c:	ldr	r2, [fp, #-8]
   17030:	str	r0, [sp, #20]
   17034:	mov	r0, r1
   17038:	mov	r1, r2
   1703c:	bl	1833c <__assert_fail@plt+0x5784>
   17040:	ldr	r0, [fp, #-4]
   17044:	ldr	r1, [fp, #-8]
   17048:	vldr	s0, [r1, #28]
   1704c:	vcvt.f64.f32	d16, s0
   17050:	movw	r1, #33577	; 0x8329
   17054:	movt	r1, #7
   17058:	vmov	r2, r3, d16
   1705c:	bl	128c4 <fprintf@plt>
   17060:	movw	r1, #136	; 0x88
   17064:	movt	r1, #9
   17068:	ldr	r1, [r1, #44]	; 0x2c
   1706c:	and	r1, r1, #64	; 0x40
   17070:	cmp	r1, #0
   17074:	str	r0, [sp, #16]
   17078:	beq	17110 <__assert_fail@plt+0x4558>
   1707c:	ldr	r0, [fp, #-4]
   17080:	ldr	r1, [fp, #-8]
   17084:	ldr	r2, [r1, #168]	; 0xa8
   17088:	ldr	r1, [fp, #-8]
   1708c:	ldr	r3, [r1, #164]	; 0xa4
   17090:	movw	r1, #33603	; 0x8343
   17094:	movt	r1, #7
   17098:	bl	128c4 <fprintf@plt>
   1709c:	ldr	r1, [fp, #-8]
   170a0:	ldr	r1, [r1, #164]	; 0xa4
   170a4:	cmp	r1, #0
   170a8:	str	r0, [sp, #12]
   170ac:	beq	170f8 <__assert_fail@plt+0x4540>
   170b0:	ldr	r0, [fp, #-8]
   170b4:	ldr	r0, [r0, #168]	; 0xa8
   170b8:	vmov	s0, r0
   170bc:	vcvt.f64.u32	d16, s0
   170c0:	ldr	r0, [fp, #-8]
   170c4:	ldr	r0, [r0, #164]	; 0xa4
   170c8:	vmov	s0, r0
   170cc:	vcvt.f64.u32	d17, s0
   170d0:	vdiv.f64	d16, d16, d17
   170d4:	vstr	d16, [fp, #-16]
   170d8:	ldr	r0, [fp, #-4]
   170dc:	vldr	d16, [fp, #-16]
   170e0:	movw	r1, #33630	; 0x835e
   170e4:	movt	r1, #7
   170e8:	vmov	r2, r3, d16
   170ec:	bl	128c4 <fprintf@plt>
   170f0:	str	r0, [sp, #8]
   170f4:	b	1710c <__assert_fail@plt+0x4554>
   170f8:	ldr	r0, [fp, #-4]
   170fc:	movw	r1, #33638	; 0x8366
   17100:	movt	r1, #7
   17104:	bl	128c4 <fprintf@plt>
   17108:	str	r0, [sp, #4]
   1710c:	b	17110 <__assert_fail@plt+0x4558>
   17110:	ldr	r0, [fp, #-4]
   17114:	ldr	r1, [fp, #-8]
   17118:	ldr	r1, [r1, #160]	; 0xa0
   1711c:	bl	17128 <__assert_fail@plt+0x4570>
   17120:	mov	sp, fp
   17124:	pop	{fp, pc}
   17128:	push	{fp, lr}
   1712c:	mov	fp, sp
   17130:	sub	sp, sp, #24
   17134:	str	r0, [fp, #-4]
   17138:	str	r1, [fp, #-8]
   1713c:	movw	r0, #0
   17140:	str	r0, [sp, #12]
   17144:	ldr	r1, [fp, #-8]
   17148:	cmp	r1, r0
   1714c:	beq	1723c <__assert_fail@plt+0x4684>
   17150:	ldr	r0, [fp, #-8]
   17154:	ldr	r0, [r0]
   17158:	movw	r1, #24484	; 0x5fa4
   1715c:	movt	r1, #1
   17160:	cmp	r0, r1
   17164:	beq	17180 <__assert_fail@plt+0x45c8>
   17168:	ldr	r0, [fp, #-8]
   1716c:	ldr	r0, [r0]
   17170:	movw	r1, #18428	; 0x47fc
   17174:	movt	r1, #1
   17178:	cmp	r0, r1
   1717c:	bne	171a8 <__assert_fail@plt+0x45f0>
   17180:	ldr	r0, [fp, #-8]
   17184:	ldr	r0, [r0, #156]	; 0x9c
   17188:	movw	r1, #0
   1718c:	cmp	r0, r1
   17190:	bne	171a8 <__assert_fail@plt+0x45f0>
   17194:	ldr	r0, [fp, #-4]
   17198:	ldr	r1, [fp, #-8]
   1719c:	ldr	r1, [r1, #160]	; 0xa0
   171a0:	bl	17128 <__assert_fail@plt+0x4570>
   171a4:	b	17238 <__assert_fail@plt+0x4680>
   171a8:	ldr	r0, [fp, #-8]
   171ac:	ldr	r0, [r0, #156]	; 0x9c
   171b0:	movw	r1, #0
   171b4:	cmp	r0, r1
   171b8:	bne	171d0 <__assert_fail@plt+0x4618>
   171bc:	ldr	r0, [fp, #-8]
   171c0:	ldr	r0, [r0, #160]	; 0xa0
   171c4:	movw	r1, #0
   171c8:	cmp	r0, r1
   171cc:	beq	171d8 <__assert_fail@plt+0x4620>
   171d0:	movw	r0, #1
   171d4:	str	r0, [sp, #12]
   171d8:	ldr	r0, [sp, #12]
   171dc:	cmp	r0, #0
   171e0:	beq	17200 <__assert_fail@plt+0x4648>
   171e4:	ldr	r0, [fp, #-4]
   171e8:	movw	r1, #59431	; 0xe827
   171ec:	movt	r1, #7
   171f0:	movw	r2, #34062	; 0x850e
   171f4:	movt	r2, #7
   171f8:	bl	128c4 <fprintf@plt>
   171fc:	str	r0, [sp, #8]
   17200:	ldr	r0, [fp, #-4]
   17204:	ldr	r1, [fp, #-8]
   17208:	bl	16f88 <__assert_fail@plt+0x43d0>
   1720c:	ldr	r0, [sp, #12]
   17210:	cmp	r0, #0
   17214:	beq	17234 <__assert_fail@plt+0x467c>
   17218:	ldr	r0, [fp, #-4]
   1721c:	movw	r1, #59431	; 0xe827
   17220:	movt	r1, #7
   17224:	movw	r2, #34066	; 0x8512
   17228:	movt	r2, #7
   1722c:	bl	128c4 <fprintf@plt>
   17230:	str	r0, [sp, #4]
   17234:	b	17238 <__assert_fail@plt+0x4680>
   17238:	b	1723c <__assert_fail@plt+0x4684>
   1723c:	mov	sp, fp
   17240:	pop	{fp, pc}
   17244:	push	{fp, lr}
   17248:	mov	fp, sp
   1724c:	sub	sp, sp, #16
   17250:	str	r0, [fp, #-4]
   17254:	movw	r0, #136	; 0x88
   17258:	movt	r0, #9
   1725c:	ldr	r0, [r0, #44]	; 0x2c
   17260:	and	r0, r0, #64	; 0x40
   17264:	cmp	r0, #0
   17268:	beq	172c0 <__assert_fail@plt+0x4708>
   1726c:	movw	r0, #63272	; 0xf728
   17270:	movt	r0, #8
   17274:	ldr	r0, [r0]
   17278:	movw	r1, #33643	; 0x836b
   1727c:	movt	r1, #7
   17280:	bl	128c4 <fprintf@plt>
   17284:	movw	r1, #63272	; 0xf728
   17288:	movt	r1, #8
   1728c:	ldr	r1, [r1]
   17290:	ldr	lr, [fp, #-4]
   17294:	str	r0, [sp, #8]
   17298:	mov	r0, r1
   1729c:	mov	r1, lr
   172a0:	bl	16f88 <__assert_fail@plt+0x43d0>
   172a4:	movw	r0, #63272	; 0xf728
   172a8:	movt	r0, #8
   172ac:	ldr	r0, [r0]
   172b0:	movw	r1, #39196	; 0x991c
   172b4:	movt	r1, #7
   172b8:	bl	128c4 <fprintf@plt>
   172bc:	str	r0, [sp, #4]
   172c0:	mov	sp, fp
   172c4:	pop	{fp, pc}
   172c8:	push	{fp, lr}
   172cc:	mov	fp, sp
   172d0:	sub	sp, sp, #16
   172d4:	str	r0, [fp, #-4]
   172d8:	ldr	r0, [fp, #-4]
   172dc:	str	r0, [sp, #8]
   172e0:	ldr	r0, [sp, #8]
   172e4:	movw	r1, #0
   172e8:	cmp	r0, r1
   172ec:	beq	175b0 <__assert_fail@plt+0x49f8>
   172f0:	ldr	r0, [sp, #8]
   172f4:	ldr	r0, [r0]
   172f8:	movw	r1, #0
   172fc:	cmp	r0, r1
   17300:	beq	17308 <__assert_fail@plt+0x4750>
   17304:	b	17328 <__assert_fail@plt+0x4770>
   17308:	movw	r0, #33686	; 0x8396
   1730c:	movt	r0, #7
   17310:	movw	r1, #32965	; 0x80c5
   17314:	movt	r1, #7
   17318:	movw	r2, #1310	; 0x51e
   1731c:	movw	r3, #33707	; 0x83ab
   17320:	movt	r3, #7
   17324:	bl	12bb8 <__assert_fail@plt>
   17328:	ldr	r0, [sp, #8]
   1732c:	ldr	r0, [r0, #172]	; 0xac
   17330:	movw	r1, #0
   17334:	cmp	r0, r1
   17338:	beq	17340 <__assert_fail@plt+0x4788>
   1733c:	b	17360 <__assert_fail@plt+0x47a8>
   17340:	movw	r0, #33756	; 0x83dc
   17344:	movt	r0, #7
   17348:	movw	r1, #32965	; 0x80c5
   1734c:	movt	r1, #7
   17350:	movw	r2, #1313	; 0x521
   17354:	movw	r3, #33707	; 0x83ab
   17358:	movt	r3, #7
   1735c:	bl	12bb8 <__assert_fail@plt>
   17360:	ldr	r0, [sp, #8]
   17364:	ldr	r0, [r0, #172]	; 0xac
   17368:	ldr	r0, [r0, #12]
   1736c:	movw	r1, #0
   17370:	cmp	r0, r1
   17374:	beq	173bc <__assert_fail@plt+0x4804>
   17378:	ldr	r0, [sp, #8]
   1737c:	ldr	r0, [r0, #172]	; 0xac
   17380:	ldr	r0, [r0, #12]
   17384:	ldr	r1, [sp, #8]
   17388:	ldr	r1, [r1]
   1738c:	cmp	r0, r1
   17390:	bne	17398 <__assert_fail@plt+0x47e0>
   17394:	b	173b8 <__assert_fail@plt+0x4800>
   17398:	movw	r0, #33780	; 0x83f4
   1739c:	movt	r0, #7
   173a0:	movw	r1, #32965	; 0x80c5
   173a4:	movt	r1, #7
   173a8:	movw	r2, #1322	; 0x52a
   173ac:	movw	r3, #33707	; 0x83ab
   173b0:	movt	r3, #7
   173b4:	bl	12bb8 <__assert_fail@plt>
   173b8:	b	173bc <__assert_fail@plt+0x4804>
   173bc:	ldr	r0, [sp, #8]
   173c0:	ldr	r0, [r0, #172]	; 0xac
   173c4:	ldr	r0, [r0]
   173c8:	cmp	r0, #0
   173cc:	str	r0, [sp, #4]
   173d0:	beq	1741c <__assert_fail@plt+0x4864>
   173d4:	b	173d8 <__assert_fail@plt+0x4820>
   173d8:	ldr	r0, [sp, #4]
   173dc:	cmp	r0, #1
   173e0:	beq	17530 <__assert_fail@plt+0x4978>
   173e4:	b	173e8 <__assert_fail@plt+0x4830>
   173e8:	ldr	r0, [sp, #4]
   173ec:	cmp	r0, #2
   173f0:	beq	1741c <__assert_fail@plt+0x4864>
   173f4:	b	173f8 <__assert_fail@plt+0x4840>
   173f8:	ldr	r0, [sp, #4]
   173fc:	sub	r1, r0, #3
   17400:	cmp	r1, #3
   17404:	bcc	17530 <__assert_fail@plt+0x4978>
   17408:	b	1740c <__assert_fail@plt+0x4854>
   1740c:	ldr	r0, [sp, #4]
   17410:	cmp	r0, #6
   17414:	beq	17490 <__assert_fail@plt+0x48d8>
   17418:	b	1759c <__assert_fail@plt+0x49e4>
   1741c:	ldr	r0, [sp, #8]
   17420:	ldr	r0, [r0, #172]	; 0xac
   17424:	ldr	r0, [r0]
   17428:	cmp	r0, #0
   1742c:	beq	17434 <__assert_fail@plt+0x487c>
   17430:	b	17454 <__assert_fail@plt+0x489c>
   17434:	movw	r0, #33823	; 0x841f
   17438:	movt	r0, #7
   1743c:	movw	r1, #32965	; 0x80c5
   17440:	movt	r1, #7
   17444:	movw	r2, #1338	; 0x53a
   17448:	movw	r3, #33707	; 0x83ab
   1744c:	movt	r3, #7
   17450:	bl	12bb8 <__assert_fail@plt>
   17454:	ldr	r0, [sp, #8]
   17458:	ldr	r0, [r0, #172]	; 0xac
   1745c:	ldr	r0, [r0]
   17460:	cmp	r0, #2
   17464:	beq	1746c <__assert_fail@plt+0x48b4>
   17468:	b	1748c <__assert_fail@plt+0x48d4>
   1746c:	movw	r0, #33859	; 0x8443
   17470:	movt	r0, #7
   17474:	movw	r1, #32965	; 0x80c5
   17478:	movt	r1, #7
   1747c:	movw	r2, #1339	; 0x53b
   17480:	movw	r3, #33707	; 0x83ab
   17484:	movt	r3, #7
   17488:	bl	12bb8 <__assert_fail@plt>
   1748c:	b	1759c <__assert_fail@plt+0x49e4>
   17490:	ldr	r0, [sp, #8]
   17494:	ldrb	r0, [r0, #16]
   17498:	tst	r0, #1
   1749c:	beq	174a4 <__assert_fail@plt+0x48ec>
   174a0:	b	174c4 <__assert_fail@plt+0x490c>
   174a4:	movw	r0, #33928	; 0x8488
   174a8:	movt	r0, #7
   174ac:	movw	r1, #32965	; 0x80c5
   174b0:	movt	r1, #7
   174b4:	movw	r2, #1343	; 0x53f
   174b8:	movw	r3, #33707	; 0x83ab
   174bc:	movt	r3, #7
   174c0:	bl	12bb8 <__assert_fail@plt>
   174c4:	ldr	r0, [sp, #8]
   174c8:	ldr	r0, [r0]
   174cc:	movw	r1, #25444	; 0x6364
   174d0:	movt	r1, #1
   174d4:	cmp	r0, r1
   174d8:	beq	1752c <__assert_fail@plt+0x4974>
   174dc:	ldr	r0, [sp, #8]
   174e0:	ldr	r0, [r0]
   174e4:	movw	r1, #25620	; 0x6414
   174e8:	movt	r1, #1
   174ec:	cmp	r0, r1
   174f0:	beq	1752c <__assert_fail@plt+0x4974>
   174f4:	ldr	r0, [sp, #8]
   174f8:	ldrb	r0, [r0, #17]
   174fc:	tst	r0, #1
   17500:	beq	17508 <__assert_fail@plt+0x4950>
   17504:	b	17528 <__assert_fail@plt+0x4970>
   17508:	movw	r0, #33907	; 0x8473
   1750c:	movt	r0, #7
   17510:	movw	r1, #32965	; 0x80c5
   17514:	movt	r1, #7
   17518:	movw	r2, #1349	; 0x545
   1751c:	movw	r3, #33707	; 0x83ab
   17520:	movt	r3, #7
   17524:	bl	12bb8 <__assert_fail@plt>
   17528:	b	1752c <__assert_fail@plt+0x4974>
   1752c:	b	1759c <__assert_fail@plt+0x49e4>
   17530:	ldr	r0, [sp, #8]
   17534:	ldrb	r0, [r0, #17]
   17538:	tst	r0, #1
   1753c:	bne	17544 <__assert_fail@plt+0x498c>
   17540:	b	17564 <__assert_fail@plt+0x49ac>
   17544:	movw	r0, #33906	; 0x8472
   17548:	movt	r0, #7
   1754c:	movw	r1, #32965	; 0x80c5
   17550:	movt	r1, #7
   17554:	movw	r2, #1363	; 0x553
   17558:	movw	r3, #33707	; 0x83ab
   1755c:	movt	r3, #7
   17560:	bl	12bb8 <__assert_fail@plt>
   17564:	ldr	r0, [sp, #8]
   17568:	ldrb	r0, [r0, #16]
   1756c:	tst	r0, #1
   17570:	bne	17578 <__assert_fail@plt+0x49c0>
   17574:	b	17598 <__assert_fail@plt+0x49e0>
   17578:	movw	r0, #33927	; 0x8487
   1757c:	movt	r0, #7
   17580:	movw	r1, #32965	; 0x80c5
   17584:	movt	r1, #7
   17588:	movw	r2, #1364	; 0x554
   1758c:	movw	r3, #33707	; 0x83ab
   17590:	movt	r3, #7
   17594:	bl	12bb8 <__assert_fail@plt>
   17598:	b	1759c <__assert_fail@plt+0x49e4>
   1759c:	b	175a0 <__assert_fail@plt+0x49e8>
   175a0:	ldr	r0, [sp, #8]
   175a4:	ldr	r0, [r0, #152]	; 0x98
   175a8:	str	r0, [sp, #8]
   175ac:	b	172e0 <__assert_fail@plt+0x4728>
   175b0:	mov	sp, fp
   175b4:	pop	{fp, pc}
   175b8:	push	{fp, lr}
   175bc:	mov	fp, sp
   175c0:	sub	sp, sp, #24
   175c4:	str	r0, [fp, #-8]
   175c8:	str	r1, [fp, #-4]
   175cc:	str	r3, [sp, #12]
   175d0:	str	r2, [sp, #8]
   175d4:	ldr	r0, [fp, #-8]
   175d8:	ldr	r1, [sp, #8]
   175dc:	bl	12954 <difftime@plt>
   175e0:	vldr	d16, [pc, #40]	; 17610 <__assert_fail@plt+0x4a58>
   175e4:	ldr	r0, [fp, #-4]
   175e8:	ldr	r1, [sp, #12]
   175ec:	sub	r0, r0, r1
   175f0:	vmov	s2, r0
   175f4:	vcvt.f64.s32	d17, s2
   175f8:	vmul.f64	d16, d16, d17
   175fc:	vadd.f64	d16, d0, d16
   17600:	vstr	d16, [sp]
   17604:	vldr	d0, [sp]
   17608:	mov	sp, fp
   1760c:	pop	{fp, pc}
   17610:	stmda	r6!, {r0, r2, r4, r7, r9, sl, ip, lr, pc}
   17614:	cdpcc	14, 1, cr2, cr1, cr11, {0}
   17618:	push	{r4, r5, r6, sl, fp, lr}
   1761c:	add	fp, sp, #16
   17620:	sub	sp, sp, #128	; 0x80
   17624:	str	r0, [fp, #-20]	; 0xffffffec
   17628:	str	r1, [fp, #-24]	; 0xffffffe8
   1762c:	str	r2, [fp, #-28]	; 0xffffffe4
   17630:	ldr	r0, [fp, #-28]	; 0xffffffe4
   17634:	add	r0, r0, #40	; 0x28
   17638:	str	r0, [fp, #-32]	; 0xffffffe0
   1763c:	movw	r0, #0
   17640:	str	r0, [fp, #-36]	; 0xffffffdc
   17644:	ldr	r0, [fp, #-28]	; 0xffffffe4
   17648:	ldr	r0, [r0]
   1764c:	bl	1da40 <__assert_fail@plt+0xae88>
   17650:	and	r0, r0, #1
   17654:	strb	r0, [fp, #-42]	; 0xffffffd6
   17658:	ldrb	r0, [fp, #-42]	; 0xffffffd6
   1765c:	tst	r0, #1
   17660:	beq	17710 <__assert_fail@plt+0x4b58>
   17664:	ldr	r0, [fp, #-32]	; 0xffffffe0
   17668:	bl	179ac <__assert_fail@plt+0x4df4>
   1766c:	tst	r0, #1
   17670:	bne	176bc <__assert_fail@plt+0x4b04>
   17674:	bl	128d0 <__errno_location@plt>
   17678:	ldr	r1, [r0]
   1767c:	movw	r0, #34070	; 0x8516
   17680:	movt	r0, #7
   17684:	str	r1, [fp, #-60]	; 0xffffffc4
   17688:	bl	12864 <gettext@plt>
   1768c:	ldr	r1, [fp, #-20]	; 0xffffffec
   17690:	movw	lr, #0
   17694:	str	r0, [fp, #-64]	; 0xffffffc0
   17698:	mov	r0, lr
   1769c:	bl	1da90 <__assert_fail@plt+0xaed8>
   176a0:	movw	r1, #1
   176a4:	str	r0, [fp, #-68]	; 0xffffffbc
   176a8:	mov	r0, r1
   176ac:	ldr	r1, [fp, #-60]	; 0xffffffc4
   176b0:	ldr	r2, [fp, #-64]	; 0xffffffc0
   176b4:	ldr	r3, [fp, #-68]	; 0xffffffbc
   176b8:	bl	12780 <error@plt>
   176bc:	movw	r0, #92	; 0x5c
   176c0:	movt	r0, #9
   176c4:	ldr	r0, [r0, #12]
   176c8:	bl	2c428 <__assert_fail@plt+0x19870>
   176cc:	str	r0, [fp, #-36]	; 0xffffffdc
   176d0:	str	r0, [fp, #-40]	; 0xffffffd8
   176d4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   176d8:	ldrb	r0, [r0]
   176dc:	movw	lr, #47	; 0x2f
   176e0:	cmp	lr, r0
   176e4:	bne	176f8 <__assert_fail@plt+0x4b40>
   176e8:	movw	r0, #0
   176ec:	str	r0, [fp, #-48]	; 0xffffffd0
   176f0:	str	r0, [fp, #-52]	; 0xffffffcc
   176f4:	b	1770c <__assert_fail@plt+0x4b54>
   176f8:	movw	r0, #34135	; 0x8557
   176fc:	movt	r0, #7
   17700:	str	r0, [fp, #-48]	; 0xffffffd0
   17704:	movw	r0, #2
   17708:	str	r0, [fp, #-52]	; 0xffffffcc
   1770c:	b	17764 <__assert_fail@plt+0x4bac>
   17710:	ldr	r0, [fp, #-32]	; 0xffffffe0
   17714:	ldr	r0, [r0, #104]	; 0x68
   17718:	movw	r1, #63304	; 0xf748
   1771c:	movt	r1, #8
   17720:	ldr	r1, [r1]
   17724:	cmp	r0, r1
   17728:	bne	17730 <__assert_fail@plt+0x4b78>
   1772c:	b	17750 <__assert_fail@plt+0x4b98>
   17730:	movw	r0, #34138	; 0x855a
   17734:	movt	r0, #7
   17738:	movw	r1, #34171	; 0x857b
   1773c:	movt	r1, #7
   17740:	movw	r2, #148	; 0x94
   17744:	movw	r3, #34178	; 0x8582
   17748:	movt	r3, #7
   1774c:	bl	12bb8 <__assert_fail@plt>
   17750:	ldr	r0, [fp, #-20]	; 0xffffffec
   17754:	str	r0, [fp, #-40]	; 0xffffffd8
   17758:	movw	r0, #0
   1775c:	str	r0, [fp, #-48]	; 0xffffffd0
   17760:	str	r0, [fp, #-52]	; 0xffffffcc
   17764:	ldr	r0, [fp, #-32]	; 0xffffffe0
   17768:	ldrb	r0, [r0]
   1776c:	tst	r0, #1
   17770:	beq	17810 <__assert_fail@plt+0x4c58>
   17774:	ldr	r0, [fp, #-32]	; 0xffffffe0
   17778:	add	r0, r0, #4
   1777c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   17780:	add	r1, r1, #48	; 0x30
   17784:	ldr	r2, [fp, #-40]	; 0xffffffd8
   17788:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1778c:	str	r0, [sp, #72]	; 0x48
   17790:	mov	r0, r3
   17794:	str	r2, [sp, #68]	; 0x44
   17798:	str	r1, [sp, #64]	; 0x40
   1779c:	bl	12888 <strlen@plt>
   177a0:	add	r3, r0, #1
   177a4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   177a8:	ldr	r1, [fp, #-52]	; 0xffffffcc
   177ac:	ldr	r2, [sp, #72]	; 0x48
   177b0:	str	r0, [sp, #60]	; 0x3c
   177b4:	mov	r0, r2
   177b8:	ldr	lr, [sp, #64]	; 0x40
   177bc:	str	r1, [sp, #56]	; 0x38
   177c0:	mov	r1, lr
   177c4:	ldr	r2, [sp, #68]	; 0x44
   177c8:	ldr	ip, [sp, #60]	; 0x3c
   177cc:	str	ip, [sp]
   177d0:	ldr	r4, [sp, #56]	; 0x38
   177d4:	str	r4, [sp, #4]
   177d8:	movw	r5, #0
   177dc:	str	r5, [sp, #8]
   177e0:	bl	28010 <__assert_fail@plt+0x15458>
   177e4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   177e8:	ldr	r0, [r0, #76]	; 0x4c
   177ec:	cmp	r0, #0
   177f0:	beq	17804 <__assert_fail@plt+0x4c4c>
   177f4:	movw	r0, #92	; 0x5c
   177f8:	movt	r0, #9
   177fc:	movw	r1, #1
   17800:	strb	r1, [r0, #32]
   17804:	movw	r0, #1
   17808:	strb	r0, [fp, #-41]	; 0xffffffd7
   1780c:	b	17954 <__assert_fail@plt+0x4d9c>
   17810:	movw	r0, #0
   17814:	str	r0, [fp, #-56]	; 0xffffffc8
   17818:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1781c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   17820:	ldr	r1, [r1, #96]	; 0x60
   17824:	cmp	r0, r1
   17828:	bge	178d4 <__assert_fail@plt+0x4d1c>
   1782c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   17830:	add	r1, r0, #4
   17834:	add	r2, r0, #48	; 0x30
   17838:	ldr	r0, [r0, #92]	; 0x5c
   1783c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   17840:	ldr	r3, [r0, r3, lsl #2]!
   17844:	ldr	r0, [r0]
   17848:	str	r2, [sp, #52]	; 0x34
   1784c:	str	r1, [sp, #48]	; 0x30
   17850:	str	r3, [sp, #44]	; 0x2c
   17854:	bl	12888 <strlen@plt>
   17858:	ldr	r1, [fp, #-48]	; 0xffffffd0
   1785c:	ldr	r2, [fp, #-52]	; 0xffffffcc
   17860:	ldr	r3, [fp, #-40]	; 0xffffffd8
   17864:	ldr	lr, [fp, #-40]	; 0xffffffd8
   17868:	str	r0, [sp, #40]	; 0x28
   1786c:	mov	r0, lr
   17870:	str	r3, [sp, #36]	; 0x24
   17874:	str	r1, [sp, #32]
   17878:	str	r2, [sp, #28]
   1787c:	bl	12888 <strlen@plt>
   17880:	ldr	r1, [sp, #48]	; 0x30
   17884:	str	r0, [sp, #24]
   17888:	mov	r0, r1
   1788c:	ldr	r1, [sp, #52]	; 0x34
   17890:	ldr	r2, [sp, #44]	; 0x2c
   17894:	ldr	r3, [sp, #40]	; 0x28
   17898:	ldr	lr, [sp, #32]
   1789c:	str	lr, [sp]
   178a0:	ldr	ip, [sp, #28]
   178a4:	str	ip, [sp, #4]
   178a8:	ldr	r4, [sp, #36]	; 0x24
   178ac:	str	r4, [sp, #8]
   178b0:	ldr	r5, [sp, #24]
   178b4:	str	r5, [sp, #12]
   178b8:	movw	r6, #0
   178bc:	str	r6, [sp, #16]
   178c0:	bl	27d6c <__assert_fail@plt+0x151b4>
   178c4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   178c8:	add	r0, r0, #1
   178cc:	str	r0, [fp, #-56]	; 0xffffffc8
   178d0:	b	17818 <__assert_fail@plt+0x4c60>
   178d4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   178d8:	add	r0, r0, #4
   178dc:	ldr	r1, [fp, #-32]	; 0xffffffe0
   178e0:	add	r1, r1, #48	; 0x30
   178e4:	bl	28384 <__assert_fail@plt+0x157cc>
   178e8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   178ec:	ldr	r0, [r0, #108]	; 0x6c
   178f0:	and	r0, r0, #127	; 0x7f
   178f4:	cmp	r0, #0
   178f8:	bne	17930 <__assert_fail@plt+0x4d78>
   178fc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   17900:	ldr	r0, [r0, #108]	; 0x6c
   17904:	and	r0, r0, #65280	; 0xff00
   17908:	asr	r0, r0, #8
   1790c:	movw	r1, #0
   17910:	cmp	r1, r0
   17914:	bne	17924 <__assert_fail@plt+0x4d6c>
   17918:	movw	r0, #1
   1791c:	strb	r0, [fp, #-41]	; 0xffffffd7
   17920:	b	1792c <__assert_fail@plt+0x4d74>
   17924:	movw	r0, #0
   17928:	strb	r0, [fp, #-41]	; 0xffffffd7
   1792c:	b	17938 <__assert_fail@plt+0x4d80>
   17930:	movw	r0, #0
   17934:	strb	r0, [fp, #-41]	; 0xffffffd7
   17938:	ldrb	r0, [fp, #-42]	; 0xffffffd6
   1793c:	tst	r0, #1
   17940:	beq	17950 <__assert_fail@plt+0x4d98>
   17944:	ldr	r0, [fp, #-32]	; 0xffffffe0
   17948:	ldr	r0, [r0, #104]	; 0x68
   1794c:	bl	4aebc <__assert_fail@plt+0x38304>
   17950:	b	17954 <__assert_fail@plt+0x4d9c>
   17954:	ldr	r0, [fp, #-36]	; 0xffffffdc
   17958:	movw	r1, #0
   1795c:	cmp	r0, r1
   17960:	beq	1799c <__assert_fail@plt+0x4de4>
   17964:	ldrb	r0, [fp, #-42]	; 0xffffffd6
   17968:	tst	r0, #1
   1796c:	beq	17974 <__assert_fail@plt+0x4dbc>
   17970:	b	17994 <__assert_fail@plt+0x4ddc>
   17974:	movw	r0, #34248	; 0x85c8
   17978:	movt	r0, #7
   1797c:	movw	r1, #34171	; 0x857b
   17980:	movt	r1, #7
   17984:	movw	r2, #208	; 0xd0
   17988:	movw	r3, #34178	; 0x8582
   1798c:	movt	r3, #7
   17990:	bl	12bb8 <__assert_fail@plt>
   17994:	ldr	r0, [fp, #-36]	; 0xffffffdc
   17998:	bl	50c68 <__assert_fail@plt+0x3e0b0>
   1799c:	ldrb	r0, [fp, #-41]	; 0xffffffd7
   179a0:	and	r0, r0, #1
   179a4:	sub	sp, fp, #16
   179a8:	pop	{r4, r5, r6, sl, fp, pc}
   179ac:	push	{fp, lr}
   179b0:	mov	fp, sp
   179b4:	sub	sp, sp, #16
   179b8:	str	r0, [sp, #8]
   179bc:	ldr	r0, [sp, #8]
   179c0:	ldr	r0, [r0, #76]	; 0x4c
   179c4:	cmp	r0, #0
   179c8:	bne	17a94 <__assert_fail@plt+0x4edc>
   179cc:	ldr	r0, [sp, #8]
   179d0:	ldr	r0, [r0, #76]	; 0x4c
   179d4:	cmp	r0, #0
   179d8:	bne	179e0 <__assert_fail@plt+0x4e28>
   179dc:	b	17a00 <__assert_fail@plt+0x4e48>
   179e0:	movw	r0, #34505	; 0x86c9
   179e4:	movt	r0, #7
   179e8:	movw	r1, #34171	; 0x857b
   179ec:	movt	r1, #7
   179f0:	movw	r2, #71	; 0x47
   179f4:	movw	r3, #34524	; 0x86dc
   179f8:	movt	r3, #7
   179fc:	bl	12bb8 <__assert_fail@plt>
   17a00:	movw	r0, #92	; 0x5c
   17a04:	movt	r0, #9
   17a08:	ldr	r0, [r0, #12]
   17a0c:	movw	r1, #47	; 0x2f
   17a10:	bl	12894 <strchr@plt>
   17a14:	movw	r1, #0
   17a18:	cmp	r0, r1
   17a1c:	beq	17a6c <__assert_fail@plt+0x4eb4>
   17a20:	movw	r0, #92	; 0x5c
   17a24:	movt	r0, #9
   17a28:	ldr	r0, [r0, #12]
   17a2c:	bl	2c5fc <__assert_fail@plt+0x19a44>
   17a30:	str	r0, [sp, #4]
   17a34:	ldr	r0, [sp, #8]
   17a38:	movw	lr, #92	; 0x5c
   17a3c:	movt	lr, #9
   17a40:	ldr	r1, [lr, #16]
   17a44:	ldr	r2, [sp, #4]
   17a48:	bl	18180 <__assert_fail@plt+0x55c8>
   17a4c:	and	r0, r0, #1
   17a50:	strb	r0, [sp, #3]
   17a54:	ldr	r0, [sp, #4]
   17a58:	bl	50c68 <__assert_fail@plt+0x3e0b0>
   17a5c:	ldrb	r0, [sp, #3]
   17a60:	and	r0, r0, #1
   17a64:	strb	r0, [fp, #-1]
   17a68:	b	17aa0 <__assert_fail@plt+0x4ee8>
   17a6c:	ldr	r0, [sp, #8]
   17a70:	movw	r1, #92	; 0x5c
   17a74:	movt	r1, #9
   17a78:	ldr	r1, [r1, #16]
   17a7c:	movw	r2, #35940	; 0x8c64
   17a80:	movt	r2, #7
   17a84:	bl	18180 <__assert_fail@plt+0x55c8>
   17a88:	and	r0, r0, #1
   17a8c:	strb	r0, [fp, #-1]
   17a90:	b	17aa0 <__assert_fail@plt+0x4ee8>
   17a94:	movw	r0, #1
   17a98:	and	r0, r0, #1
   17a9c:	strb	r0, [fp, #-1]
   17aa0:	ldrb	r0, [fp, #-1]
   17aa4:	and	r0, r0, #1
   17aa8:	mov	sp, fp
   17aac:	pop	{fp, pc}
   17ab0:	push	{fp, lr}
   17ab4:	mov	fp, sp
   17ab8:	sub	sp, sp, #128	; 0x80
   17abc:	str	r0, [fp, #-8]
   17ac0:	str	r1, [fp, #-12]
   17ac4:	str	r2, [fp, #-16]
   17ac8:	str	r3, [fp, #-20]	; 0xffffffec
   17acc:	ldr	r0, [fp, #-12]
   17ad0:	str	r0, [fp, #-28]	; 0xffffffe4
   17ad4:	movw	r0, #136	; 0x88
   17ad8:	movt	r0, #9
   17adc:	ldr	r0, [r0, #44]	; 0x2c
   17ae0:	and	r0, r0, #32
   17ae4:	cmp	r0, #0
   17ae8:	beq	17bb8 <__assert_fail@plt+0x5000>
   17aec:	movw	r0, #63272	; 0xf728
   17af0:	movt	r0, #8
   17af4:	ldr	r0, [r0]
   17af8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   17afc:	ldr	r1, [r1, #48]	; 0x30
   17b00:	subs	r2, r1, #1
   17b04:	mov	r1, #0
   17b08:	sbc	r3, r1, #0
   17b0c:	movw	r1, #34254	; 0x85ce
   17b10:	movt	r1, #7
   17b14:	bl	128c4 <fprintf@plt>
   17b18:	movw	r1, #0
   17b1c:	str	r1, [fp, #-32]	; 0xffffffe0
   17b20:	str	r0, [fp, #-40]	; 0xffffffd8
   17b24:	ldr	r0, [fp, #-32]	; 0xffffffe0
   17b28:	ldr	r1, [fp, #-28]	; 0xffffffe4
   17b2c:	ldr	r1, [r1, #48]	; 0x30
   17b30:	sub	r1, r1, #1
   17b34:	cmp	r0, r1
   17b38:	bcs	17b9c <__assert_fail@plt+0x4fe4>
   17b3c:	movw	r0, #63272	; 0xf728
   17b40:	movt	r0, #8
   17b44:	ldr	r0, [r0]
   17b48:	ldr	r1, [fp, #-28]	; 0xffffffe4
   17b4c:	ldr	r1, [r1, #52]	; 0x34
   17b50:	ldr	r2, [fp, #-32]	; 0xffffffe0
   17b54:	add	r1, r1, r2, lsl #2
   17b58:	ldr	r1, [r1]
   17b5c:	movw	r2, #0
   17b60:	str	r0, [fp, #-44]	; 0xffffffd4
   17b64:	mov	r0, r2
   17b68:	bl	1da90 <__assert_fail@plt+0xaed8>
   17b6c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   17b70:	str	r0, [fp, #-48]	; 0xffffffd0
   17b74:	mov	r0, r1
   17b78:	movw	r1, #59430	; 0xe826
   17b7c:	movt	r1, #7
   17b80:	ldr	r2, [fp, #-48]	; 0xffffffd0
   17b84:	bl	128c4 <fprintf@plt>
   17b88:	str	r0, [fp, #-52]	; 0xffffffcc
   17b8c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   17b90:	add	r0, r0, #1
   17b94:	str	r0, [fp, #-32]	; 0xffffffe0
   17b98:	b	17b24 <__assert_fail@plt+0x4f6c>
   17b9c:	movw	r0, #63272	; 0xf728
   17ba0:	movt	r0, #8
   17ba4:	ldr	r0, [r0]
   17ba8:	movw	r1, #39196	; 0x991c
   17bac:	movt	r1, #7
   17bb0:	bl	128c4 <fprintf@plt>
   17bb4:	str	r0, [fp, #-56]	; 0xffffffc8
   17bb8:	movw	r0, #63284	; 0xf734
   17bbc:	movt	r0, #8
   17bc0:	ldr	r0, [r0]
   17bc4:	bl	50bb8 <__assert_fail@plt+0x3e000>
   17bc8:	movw	lr, #63272	; 0xf728
   17bcc:	movt	lr, #8
   17bd0:	ldr	lr, [lr]
   17bd4:	str	r0, [fp, #-60]	; 0xffffffc4
   17bd8:	mov	r0, lr
   17bdc:	bl	50bb8 <__assert_fail@plt+0x3e000>
   17be0:	movw	lr, #62124	; 0xf2ac
   17be4:	movt	lr, #8
   17be8:	ldr	lr, [lr]
   17bec:	cmp	lr, #0
   17bf0:	str	r0, [sp, #64]	; 0x40
   17bf4:	beq	17c14 <__assert_fail@plt+0x505c>
   17bf8:	movw	r0, #62124	; 0xf2ac
   17bfc:	movt	r0, #8
   17c00:	movw	r1, #0
   17c04:	str	r1, [r0]
   17c08:	movw	r0, #17
   17c0c:	bl	1260c <signal@plt>
   17c10:	str	r0, [sp, #60]	; 0x3c
   17c14:	bl	129f0 <fork@plt>
   17c18:	str	r0, [fp, #-24]	; 0xffffffe8
   17c1c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17c20:	cmn	r0, #1
   17c24:	bne	17c58 <__assert_fail@plt+0x50a0>
   17c28:	bl	128d0 <__errno_location@plt>
   17c2c:	ldr	r1, [r0]
   17c30:	movw	r0, #34296	; 0x85f8
   17c34:	movt	r0, #7
   17c38:	str	r1, [sp, #56]	; 0x38
   17c3c:	bl	12864 <gettext@plt>
   17c40:	movw	r1, #1
   17c44:	str	r0, [sp, #52]	; 0x34
   17c48:	mov	r0, r1
   17c4c:	ldr	r1, [sp, #56]	; 0x38
   17c50:	ldr	r2, [sp, #52]	; 0x34
   17c54:	bl	12780 <error@plt>
   17c58:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17c5c:	cmp	r0, #0
   17c60:	bne	17d60 <__assert_fail@plt+0x51a8>
   17c64:	ldr	r0, [fp, #-28]	; 0xffffffe4
   17c68:	ldr	r0, [r0, #104]	; 0x68
   17c6c:	movw	r1, #0
   17c70:	cmp	r1, r0
   17c74:	beq	17c7c <__assert_fail@plt+0x50c4>
   17c78:	b	17c9c <__assert_fail@plt+0x50e4>
   17c7c:	movw	r0, #34308	; 0x8604
   17c80:	movt	r0, #7
   17c84:	movw	r1, #34171	; 0x857b
   17c88:	movt	r1, #7
   17c8c:	movw	r2, #321	; 0x141
   17c90:	movw	r3, #34335	; 0x861f
   17c94:	movt	r3, #7
   17c98:	bl	12bb8 <__assert_fail@plt>
   17c9c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   17ca0:	ldrb	r0, [r0, #100]	; 0x64
   17ca4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   17ca8:	ldr	r1, [r1, #104]	; 0x68
   17cac:	and	r0, r0, #1
   17cb0:	bl	17f4c <__assert_fail@plt+0x5394>
   17cb4:	tst	r0, #1
   17cb8:	bne	17cc4 <__assert_fail@plt+0x510c>
   17cbc:	movw	r0, #1
   17cc0:	bl	125b8 <_exit@plt>
   17cc4:	bl	29890 <__assert_fail@plt+0x16cd8>
   17cc8:	tst	r0, #1
   17ccc:	beq	17cd4 <__assert_fail@plt+0x511c>
   17cd0:	bl	298e0 <__assert_fail@plt+0x16d28>
   17cd4:	b	17cd8 <__assert_fail@plt+0x5120>
   17cd8:	ldr	r0, [fp, #-20]	; 0xffffffec
   17cdc:	bl	28d4c <__assert_fail@plt+0x16194>
   17ce0:	tst	r0, #1
   17ce4:	beq	17cf8 <__assert_fail@plt+0x5140>
   17ce8:	bl	128d0 <__errno_location@plt>
   17cec:	movw	lr, #7
   17cf0:	str	lr, [r0]
   17cf4:	b	17d0c <__assert_fail@plt+0x5154>
   17cf8:	ldr	r0, [fp, #-20]	; 0xffffffec
   17cfc:	ldr	r0, [r0]
   17d00:	ldr	r1, [fp, #-20]	; 0xffffffec
   17d04:	bl	125d0 <execvp@plt>
   17d08:	str	r0, [sp, #48]	; 0x30
   17d0c:	bl	128d0 <__errno_location@plt>
   17d10:	ldr	r1, [r0]
   17d14:	ldr	r0, [fp, #-20]	; 0xffffffec
   17d18:	ldr	r0, [r0]
   17d1c:	movw	lr, #0
   17d20:	str	r0, [sp, #44]	; 0x2c
   17d24:	mov	r0, lr
   17d28:	ldr	lr, [sp, #44]	; 0x2c
   17d2c:	str	r1, [sp, #40]	; 0x28
   17d30:	mov	r1, lr
   17d34:	bl	1da90 <__assert_fail@plt+0xaed8>
   17d38:	movw	r1, #0
   17d3c:	str	r0, [sp, #36]	; 0x24
   17d40:	mov	r0, r1
   17d44:	ldr	r1, [sp, #40]	; 0x28
   17d48:	movw	r2, #59431	; 0xe827
   17d4c:	movt	r2, #7
   17d50:	ldr	r3, [sp, #36]	; 0x24
   17d54:	bl	12780 <error@plt>
   17d58:	movw	r0, #1
   17d5c:	bl	125b8 <_exit@plt>
   17d60:	b	17d64 <__assert_fail@plt+0x51ac>
   17d64:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17d68:	ldr	r1, [fp, #-28]	; 0xffffffe4
   17d6c:	add	r1, r1, #108	; 0x6c
   17d70:	movw	r2, #0
   17d74:	bl	12714 <waitpid@plt>
   17d78:	cmn	r0, #1
   17d7c:	bne	17dfc <__assert_fail@plt+0x5244>
   17d80:	bl	128d0 <__errno_location@plt>
   17d84:	ldr	r0, [r0]
   17d88:	cmp	r0, #4
   17d8c:	beq	17df8 <__assert_fail@plt+0x5240>
   17d90:	bl	128d0 <__errno_location@plt>
   17d94:	ldr	r1, [r0]
   17d98:	movw	r0, #34395	; 0x865b
   17d9c:	movt	r0, #7
   17da0:	str	r1, [sp, #32]
   17da4:	bl	12864 <gettext@plt>
   17da8:	ldr	r1, [fp, #-20]	; 0xffffffec
   17dac:	ldr	r1, [r1]
   17db0:	movw	lr, #0
   17db4:	str	r0, [sp, #28]
   17db8:	mov	r0, lr
   17dbc:	bl	1da90 <__assert_fail@plt+0xaed8>
   17dc0:	movw	r1, #0
   17dc4:	str	r0, [sp, #24]
   17dc8:	mov	r0, r1
   17dcc:	ldr	r1, [sp, #32]
   17dd0:	ldr	r2, [sp, #28]
   17dd4:	ldr	r3, [sp, #24]
   17dd8:	bl	12780 <error@plt>
   17ddc:	movw	r0, #92	; 0x5c
   17de0:	movt	r0, #9
   17de4:	movw	r1, #1
   17de8:	str	r1, [r0, #28]
   17dec:	movw	r0, #0
   17df0:	str	r0, [fp, #-4]
   17df4:	b	17f40 <__assert_fail@plt+0x5388>
   17df8:	b	17d64 <__assert_fail@plt+0x51ac>
   17dfc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   17e00:	ldr	r0, [r0, #108]	; 0x6c
   17e04:	and	r0, r0, #127	; 0x7f
   17e08:	add	r0, r0, #1
   17e0c:	sxtb	r0, r0
   17e10:	asr	r0, r0, #1
   17e14:	cmp	r0, #0
   17e18:	ble	17eac <__assert_fail@plt+0x52f4>
   17e1c:	movw	r0, #34416	; 0x8670
   17e20:	movt	r0, #7
   17e24:	bl	12864 <gettext@plt>
   17e28:	movw	lr, #136	; 0x88
   17e2c:	movt	lr, #9
   17e30:	ldr	r1, [lr, #72]	; 0x48
   17e34:	ldr	lr, [fp, #-20]	; 0xffffffec
   17e38:	ldr	r2, [lr]
   17e3c:	movw	lr, #0
   17e40:	str	r0, [sp, #20]
   17e44:	mov	r0, lr
   17e48:	bl	4a828 <__assert_fail@plt+0x37c70>
   17e4c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   17e50:	ldr	r1, [r1, #108]	; 0x6c
   17e54:	and	r1, r1, #127	; 0x7f
   17e58:	movw	r2, #0
   17e5c:	str	r0, [sp, #16]
   17e60:	mov	r0, r2
   17e64:	str	r1, [sp, #12]
   17e68:	mov	r1, r2
   17e6c:	ldr	r2, [sp, #20]
   17e70:	ldr	r3, [sp, #16]
   17e74:	ldr	lr, [sp, #12]
   17e78:	str	lr, [sp]
   17e7c:	bl	12780 <error@plt>
   17e80:	ldr	r0, [fp, #-28]	; 0xffffffe4
   17e84:	ldrb	r0, [r0]
   17e88:	tst	r0, #1
   17e8c:	beq	17ea0 <__assert_fail@plt+0x52e8>
   17e90:	movw	r0, #92	; 0x5c
   17e94:	movt	r0, #9
   17e98:	movw	r1, #1
   17e9c:	str	r1, [r0, #28]
   17ea0:	movw	r0, #1
   17ea4:	str	r0, [fp, #-4]
   17ea8:	b	17f40 <__assert_fail@plt+0x5388>
   17eac:	ldr	r0, [fp, #-28]	; 0xffffffe4
   17eb0:	ldr	r0, [r0, #108]	; 0x6c
   17eb4:	and	r0, r0, #65280	; 0xff00
   17eb8:	asr	r0, r0, #8
   17ebc:	str	r0, [fp, #-36]	; 0xffffffdc
   17ec0:	movw	r0, #136	; 0x88
   17ec4:	movt	r0, #9
   17ec8:	ldr	r0, [r0, #44]	; 0x2c
   17ecc:	and	r0, r0, #32
   17ed0:	cmp	r0, #0
   17ed4:	beq	17efc <__assert_fail@plt+0x5344>
   17ed8:	movw	r0, #63272	; 0xf728
   17edc:	movt	r0, #8
   17ee0:	ldr	r0, [r0]
   17ee4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   17ee8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   17eec:	movw	r1, #34443	; 0x868b
   17ef0:	movt	r1, #7
   17ef4:	bl	128c4 <fprintf@plt>
   17ef8:	str	r0, [sp, #8]
   17efc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   17f00:	movw	r1, #0
   17f04:	cmp	r1, r0
   17f08:	bne	17f18 <__assert_fail@plt+0x5360>
   17f0c:	movw	r0, #1
   17f10:	str	r0, [fp, #-4]
   17f14:	b	17f40 <__assert_fail@plt+0x5388>
   17f18:	ldr	r0, [fp, #-28]	; 0xffffffe4
   17f1c:	ldrb	r0, [r0]
   17f20:	tst	r0, #1
   17f24:	beq	17f38 <__assert_fail@plt+0x5380>
   17f28:	movw	r0, #92	; 0x5c
   17f2c:	movt	r0, #9
   17f30:	movw	r1, #1
   17f34:	str	r1, [r0, #28]
   17f38:	movw	r0, #1
   17f3c:	str	r0, [fp, #-4]
   17f40:	ldr	r0, [fp, #-4]
   17f44:	mov	sp, fp
   17f48:	pop	{fp, pc}
   17f4c:	push	{fp, lr}
   17f50:	mov	fp, sp
   17f54:	sub	sp, sp, #64	; 0x40
   17f58:	and	r0, r0, #1
   17f5c:	strb	r0, [fp, #-1]
   17f60:	str	r1, [fp, #-8]
   17f64:	movw	r0, #1
   17f68:	strb	r0, [fp, #-9]
   17f6c:	ldrb	r0, [fp, #-1]
   17f70:	tst	r0, #1
   17f74:	beq	18074 <__assert_fail@plt+0x54bc>
   17f78:	movw	r0, #34565	; 0x8705
   17f7c:	movt	r0, #7
   17f80:	ldrb	r1, [r0]
   17f84:	strb	r1, [fp, #-19]	; 0xffffffed
   17f88:	ldrb	r1, [r0, #1]
   17f8c:	strb	r1, [fp, #-18]	; 0xffffffee
   17f90:	ldrb	r1, [r0, #2]
   17f94:	strb	r1, [fp, #-17]	; 0xffffffef
   17f98:	ldrb	r1, [r0, #3]
   17f9c:	strb	r1, [fp, #-16]
   17fa0:	ldrb	r1, [r0, #4]
   17fa4:	strb	r1, [fp, #-15]
   17fa8:	ldrb	r1, [r0, #5]
   17fac:	strb	r1, [fp, #-14]
   17fb0:	ldrb	r1, [r0, #6]
   17fb4:	strb	r1, [fp, #-13]
   17fb8:	ldrb	r1, [r0, #7]
   17fbc:	strb	r1, [fp, #-12]
   17fc0:	ldrb	r1, [r0, #8]
   17fc4:	strb	r1, [fp, #-11]
   17fc8:	ldrb	r0, [r0, #9]
   17fcc:	strb	r0, [fp, #-10]
   17fd0:	movw	r0, #0
   17fd4:	bl	12b70 <close@plt>
   17fd8:	cmp	r0, #0
   17fdc:	bge	1801c <__assert_fail@plt+0x5464>
   17fe0:	bl	128d0 <__errno_location@plt>
   17fe4:	ldr	r1, [r0]
   17fe8:	movw	r0, #34575	; 0x870f
   17fec:	movt	r0, #7
   17ff0:	str	r1, [fp, #-24]	; 0xffffffe8
   17ff4:	bl	12864 <gettext@plt>
   17ff8:	movw	r1, #0
   17ffc:	str	r0, [fp, #-28]	; 0xffffffe4
   18000:	mov	r0, r1
   18004:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18008:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1800c:	bl	12780 <error@plt>
   18010:	movw	r0, #0
   18014:	strb	r0, [fp, #-9]
   18018:	b	18070 <__assert_fail@plt+0x54b8>
   1801c:	ldr	r1, [pc, #344]	; 1817c <__assert_fail@plt+0x55c4>
   18020:	sub	r0, fp, #19
   18024:	bl	2c768 <__assert_fail@plt+0x19bb0>
   18028:	cmp	r0, #0
   1802c:	bge	1806c <__assert_fail@plt+0x54b4>
   18030:	bl	128d0 <__errno_location@plt>
   18034:	sub	r1, fp, #19
   18038:	ldr	r0, [r0]
   1803c:	movw	lr, #0
   18040:	str	r0, [sp, #32]
   18044:	mov	r0, lr
   18048:	bl	1da90 <__assert_fail@plt+0xaed8>
   1804c:	movw	r1, #0
   18050:	str	r0, [sp, #28]
   18054:	mov	r0, r1
   18058:	ldr	r1, [sp, #32]
   1805c:	movw	r2, #59431	; 0xe827
   18060:	movt	r2, #7
   18064:	ldr	r3, [sp, #28]
   18068:	bl	12780 <error@plt>
   1806c:	b	18070 <__assert_fail@plt+0x54b8>
   18070:	b	18074 <__assert_fail@plt+0x54bc>
   18074:	ldr	r0, [fp, #-8]
   18078:	bl	4ae68 <__assert_fail@plt+0x382b0>
   1807c:	movw	lr, #0
   18080:	cmp	lr, r0
   18084:	beq	1816c <__assert_fail@plt+0x55b4>
   18088:	bl	128d0 <__errno_location@plt>
   1808c:	ldr	r1, [r0]
   18090:	movw	r0, #34603	; 0x872b
   18094:	movt	r0, #7
   18098:	str	r1, [sp, #24]
   1809c:	bl	12864 <gettext@plt>
   180a0:	ldr	r1, [fp, #-8]
   180a4:	ldr	r1, [r1]
   180a8:	cmp	r1, #0
   180ac:	movw	r1, #0
   180b0:	str	r0, [sp, #20]
   180b4:	str	r1, [sp, #16]
   180b8:	bge	180d8 <__assert_fail@plt+0x5520>
   180bc:	ldr	r0, [fp, #-8]
   180c0:	ldr	r0, [r0, #4]
   180c4:	movw	r1, #0
   180c8:	cmp	r0, r1
   180cc:	movw	r0, #0
   180d0:	movne	r0, #1
   180d4:	str	r0, [sp, #16]
   180d8:	ldr	r0, [sp, #16]
   180dc:	tst	r0, #1
   180e0:	movw	r0, #39197	; 0x991d
   180e4:	movt	r0, #7
   180e8:	movw	r1, #46633	; 0xb629
   180ec:	movt	r1, #7
   180f0:	movne	r0, r1
   180f4:	ldr	r1, [fp, #-8]
   180f8:	ldr	r1, [r1]
   180fc:	cmp	r1, #0
   18100:	str	r0, [sp, #12]
   18104:	bge	1812c <__assert_fail@plt+0x5574>
   18108:	ldr	r0, [fp, #-8]
   1810c:	ldr	r0, [r0, #4]
   18110:	movw	r1, #0
   18114:	cmp	r0, r1
   18118:	beq	1812c <__assert_fail@plt+0x5574>
   1811c:	ldr	r0, [fp, #-8]
   18120:	ldr	r0, [r0, #4]
   18124:	str	r0, [sp, #8]
   18128:	b	1813c <__assert_fail@plt+0x5584>
   1812c:	movw	r0, #39197	; 0x991d
   18130:	movt	r0, #7
   18134:	str	r0, [sp, #8]
   18138:	b	1813c <__assert_fail@plt+0x5584>
   1813c:	ldr	r0, [sp, #8]
   18140:	movw	r1, #0
   18144:	str	r0, [sp, #4]
   18148:	mov	r0, r1
   1814c:	ldr	r1, [sp, #24]
   18150:	ldr	r2, [sp, #20]
   18154:	ldr	r3, [sp, #12]
   18158:	ldr	ip, [sp, #4]
   1815c:	str	ip, [sp]
   18160:	bl	12780 <error@plt>
   18164:	movw	r0, #0
   18168:	strb	r0, [fp, #-9]
   1816c:	ldrb	r0, [fp, #-9]
   18170:	and	r0, r0, #1
   18174:	mov	sp, fp
   18178:	pop	{fp, pc}
   1817c:	andeq	r0, r2, r0
   18180:	push	{fp, lr}
   18184:	mov	fp, sp
   18188:	sub	sp, sp, #24
   1818c:	str	r0, [fp, #-8]
   18190:	str	r1, [sp, #12]
   18194:	str	r2, [sp, #8]
   18198:	movw	r0, #8
   1819c:	bl	4c394 <__assert_fail@plt+0x397dc>
   181a0:	ldr	r1, [fp, #-8]
   181a4:	str	r0, [r1, #104]	; 0x68
   181a8:	ldr	r0, [fp, #-8]
   181ac:	ldr	r0, [r0, #104]	; 0x68
   181b0:	movw	r1, #0
   181b4:	str	r1, [r0, #4]
   181b8:	ldr	r0, [sp, #12]
   181bc:	ldr	r2, [sp, #8]
   181c0:	str	r1, [sp, #4]
   181c4:	mov	r1, r2
   181c8:	ldr	r2, [sp, #4]
   181cc:	bl	326bc <__assert_fail@plt+0x1fb04>
   181d0:	ldr	r1, [fp, #-8]
   181d4:	ldr	r1, [r1, #104]	; 0x68
   181d8:	str	r0, [r1]
   181dc:	ldr	r0, [fp, #-8]
   181e0:	ldr	r0, [r0, #104]	; 0x68
   181e4:	ldr	r0, [r0]
   181e8:	cmp	r0, #0
   181ec:	bge	18200 <__assert_fail@plt+0x5648>
   181f0:	movw	r0, #0
   181f4:	and	r0, r0, #1
   181f8:	strb	r0, [fp, #-1]
   181fc:	b	18228 <__assert_fail@plt+0x5670>
   18200:	ldr	r0, [fp, #-8]
   18204:	ldr	r0, [r0, #104]	; 0x68
   18208:	ldr	r0, [r0]
   1820c:	movw	r1, #1
   18210:	and	r1, r1, #1
   18214:	bl	2c0e0 <__assert_fail@plt+0x19528>
   18218:	movw	r1, #1
   1821c:	and	r1, r1, #1
   18220:	strb	r1, [fp, #-1]
   18224:	str	r0, [sp]
   18228:	ldrb	r0, [fp, #-1]
   1822c:	and	r0, r0, #1
   18230:	mov	sp, fp
   18234:	pop	{fp, pc}
   18238:	push	{fp, lr}
   1823c:	mov	fp, sp
   18240:	sub	sp, sp, #24
   18244:	str	r0, [fp, #-8]
   18248:	and	r0, r1, #1
   1824c:	strb	r0, [fp, #-9]
   18250:	movw	r0, #0
   18254:	str	r0, [sp, #8]
   18258:	ldrb	r0, [fp, #-9]
   1825c:	tst	r0, #1
   18260:	beq	18270 <__assert_fail@plt+0x56b8>
   18264:	ldr	r0, [sp, #8]
   18268:	orr	r0, r0, #16
   1826c:	str	r0, [sp, #8]
   18270:	movw	r0, #63308	; 0xf74c
   18274:	movt	r0, #8
   18278:	ldr	r0, [r0]
   1827c:	cmp	r0, #0
   18280:	beq	18304 <__assert_fail@plt+0x574c>
   18284:	movw	r0, #0
   18288:	str	r0, [sp, #4]
   1828c:	ldr	r0, [sp, #4]
   18290:	movw	r1, #63308	; 0xf74c
   18294:	movt	r1, #8
   18298:	ldr	r1, [r1]
   1829c:	cmp	r0, r1
   182a0:	bcs	182f4 <__assert_fail@plt+0x573c>
   182a4:	ldr	r0, [fp, #-8]
   182a8:	movw	r1, #63312	; 0xf750
   182ac:	movt	r1, #8
   182b0:	ldr	r1, [r1]
   182b4:	ldr	r2, [sp, #4]
   182b8:	add	r1, r1, r2, lsl #2
   182bc:	ldr	r1, [r1]
   182c0:	ldr	r2, [sp, #8]
   182c4:	bl	127a4 <fnmatch@plt>
   182c8:	cmp	r0, #0
   182cc:	bne	182e0 <__assert_fail@plt+0x5728>
   182d0:	movw	r0, #1
   182d4:	and	r0, r0, #1
   182d8:	strb	r0, [fp, #-1]
   182dc:	b	1832c <__assert_fail@plt+0x5774>
   182e0:	b	182e4 <__assert_fail@plt+0x572c>
   182e4:	ldr	r0, [sp, #4]
   182e8:	add	r0, r0, #1
   182ec:	str	r0, [sp, #4]
   182f0:	b	1828c <__assert_fail@plt+0x56d4>
   182f4:	movw	r0, #0
   182f8:	and	r0, r0, #1
   182fc:	strb	r0, [fp, #-1]
   18300:	b	1832c <__assert_fail@plt+0x5774>
   18304:	ldr	r0, [fp, #-8]
   18308:	ldr	r2, [sp, #8]
   1830c:	movw	r1, #35940	; 0x8c64
   18310:	movt	r1, #7
   18314:	bl	127a4 <fnmatch@plt>
   18318:	cmp	r0, #0
   1831c:	movw	r0, #0
   18320:	moveq	r0, #1
   18324:	and	r0, r0, #1
   18328:	strb	r0, [fp, #-1]
   1832c:	ldrb	r0, [fp, #-1]
   18330:	and	r0, r0, #1
   18334:	mov	sp, fp
   18338:	pop	{fp, pc}
   1833c:	push	{fp, lr}
   18340:	mov	fp, sp
   18344:	sub	sp, sp, #16
   18348:	str	r0, [fp, #-4]
   1834c:	str	r1, [sp, #8]
   18350:	ldr	r0, [sp, #8]
   18354:	ldr	r0, [r0, #36]	; 0x24
   18358:	movw	r1, #0
   1835c:	cmp	r0, r1
   18360:	beq	1838c <__assert_fail@plt+0x57d4>
   18364:	ldr	r0, [fp, #-4]
   18368:	ldr	r1, [sp, #8]
   1836c:	ldr	r2, [r1, #4]
   18370:	ldr	r1, [sp, #8]
   18374:	ldr	r3, [r1, #36]	; 0x24
   18378:	movw	r1, #34634	; 0x874a
   1837c:	movt	r1, #7
   18380:	bl	128c4 <fprintf@plt>
   18384:	str	r0, [sp, #4]
   18388:	b	183a8 <__assert_fail@plt+0x57f0>
   1838c:	ldr	r0, [fp, #-4]
   18390:	ldr	r1, [sp, #8]
   18394:	ldr	r2, [r1, #4]
   18398:	movw	r1, #59431	; 0xe827
   1839c:	movt	r1, #7
   183a0:	bl	128c4 <fprintf@plt>
   183a4:	str	r0, [sp]
   183a8:	mov	sp, fp
   183ac:	pop	{fp, pc}
   183b0:	movw	r0, #63316	; 0xf754
   183b4:	movt	r0, #8
   183b8:	ldr	r0, [r0]
   183bc:	bx	lr
   183c0:	push	{fp, lr}
   183c4:	mov	fp, sp
   183c8:	sub	sp, sp, #32
   183cc:	str	r0, [fp, #-8]
   183d0:	ldr	r0, [fp, #-8]
   183d4:	movw	r1, #0
   183d8:	cmp	r1, r0
   183dc:	beq	183e4 <__assert_fail@plt+0x582c>
   183e0:	b	18404 <__assert_fail@plt+0x584c>
   183e4:	movw	r0, #34640	; 0x8750
   183e8:	movt	r0, #7
   183ec:	movw	r1, #34650	; 0x875a
   183f0:	movt	r1, #7
   183f4:	movw	r2, #1156	; 0x484
   183f8:	movw	r3, #34657	; 0x8761
   183fc:	movt	r3, #7
   18400:	bl	12bb8 <__assert_fail@plt>
   18404:	ldr	r0, [fp, #-8]
   18408:	ldr	r0, [r0, #160]	; 0xa0
   1840c:	movw	r1, #0
   18410:	cmp	r0, r1
   18414:	beq	18428 <__assert_fail@plt+0x5870>
   18418:	ldr	r0, [fp, #-8]
   1841c:	ldr	r0, [r0, #160]	; 0xa0
   18420:	bl	183c0 <__assert_fail@plt+0x5808>
   18424:	vstr	s0, [sp, #16]
   18428:	ldr	r0, [fp, #-8]
   1842c:	ldr	r0, [r0, #156]	; 0x9c
   18430:	movw	r1, #0
   18434:	cmp	r0, r1
   18438:	beq	1844c <__assert_fail@plt+0x5894>
   1843c:	ldr	r0, [fp, #-8]
   18440:	ldr	r0, [r0, #156]	; 0x9c
   18444:	bl	183c0 <__assert_fail@plt+0x5808>
   18448:	vstr	s0, [sp, #12]
   1844c:	ldr	r0, [fp, #-8]
   18450:	ldr	r0, [r0, #8]
   18454:	cmp	r0, #5
   18458:	beq	18460 <__assert_fail@plt+0x58a8>
   1845c:	b	18480 <__assert_fail@plt+0x58c8>
   18460:	movw	r0, #34707	; 0x8793
   18464:	movt	r0, #7
   18468:	movw	r1, #34650	; 0x875a
   1846c:	movt	r1, #7
   18470:	movw	r2, #1163	; 0x48b
   18474:	movw	r3, #34657	; 0x8761
   18478:	movt	r3, #7
   1847c:	bl	12bb8 <__assert_fail@plt>
   18480:	ldr	r0, [fp, #-8]
   18484:	ldr	r0, [r0, #8]
   18488:	cmp	r0, #4
   1848c:	beq	18494 <__assert_fail@plt+0x58dc>
   18490:	b	184b4 <__assert_fail@plt+0x58fc>
   18494:	movw	r0, #34732	; 0x87ac
   18498:	movt	r0, #7
   1849c:	movw	r1, #34650	; 0x875a
   184a0:	movt	r1, #7
   184a4:	movw	r2, #1164	; 0x48c
   184a8:	movw	r3, #34657	; 0x8761
   184ac:	movt	r3, #7
   184b0:	bl	12bb8 <__assert_fail@plt>
   184b4:	ldr	r0, [fp, #-8]
   184b8:	ldr	r0, [r0, #8]
   184bc:	cmp	r0, #5
   184c0:	str	r0, [sp, #8]
   184c4:	bhi	187a8 <__assert_fail@plt+0x5bf0>
   184c8:	add	r0, pc, #8
   184cc:	ldr	r1, [sp, #8]
   184d0:	ldr	r0, [r0, r1, lsl #2]
   184d4:	mov	pc, r0
   184d8:	strdeq	r8, [r1], -r0
   184dc:	andeq	r8, r1, r0, ror r5
   184e0:	strdeq	r8, [r1], -r0
   184e4:	muleq	r1, r8, r6
   184e8:	andeq	r8, r1, ip, lsl #15
   184ec:	andeq	r8, r1, ip, lsl #15
   184f0:	ldr	r0, [fp, #-8]
   184f4:	ldr	r0, [r0, #160]	; 0xa0
   184f8:	movw	r1, #0
   184fc:	cmp	r1, r0
   18500:	bne	18508 <__assert_fail@plt+0x5950>
   18504:	b	18528 <__assert_fail@plt+0x5970>
   18508:	movw	r0, #34756	; 0x87c4
   1850c:	movt	r0, #7
   18510:	movw	r1, #34650	; 0x875a
   18514:	movt	r1, #7
   18518:	movw	r2, #1169	; 0x491
   1851c:	movw	r3, #34657	; 0x8761
   18520:	movt	r3, #7
   18524:	bl	12bb8 <__assert_fail@plt>
   18528:	ldr	r0, [fp, #-8]
   1852c:	ldr	r0, [r0, #156]	; 0x9c
   18530:	movw	r1, #0
   18534:	cmp	r1, r0
   18538:	bne	18540 <__assert_fail@plt+0x5988>
   1853c:	b	18560 <__assert_fail@plt+0x59a8>
   18540:	movw	r0, #34778	; 0x87da
   18544:	movt	r0, #7
   18548:	movw	r1, #34650	; 0x875a
   1854c:	movt	r1, #7
   18550:	movw	r2, #1170	; 0x492
   18554:	movw	r3, #34657	; 0x8761
   18558:	movt	r3, #7
   1855c:	bl	12bb8 <__assert_fail@plt>
   18560:	ldr	r0, [fp, #-8]
   18564:	vldr	s0, [r0, #28]
   18568:	vstr	s0, [fp, #-4]
   1856c:	b	187c8 <__assert_fail@plt+0x5c10>
   18570:	ldr	r0, [fp, #-8]
   18574:	ldr	r0, [r0, #160]	; 0xa0
   18578:	movw	r1, #0
   1857c:	cmp	r1, r0
   18580:	bne	18588 <__assert_fail@plt+0x59d0>
   18584:	b	185a8 <__assert_fail@plt+0x59f0>
   18588:	movw	r0, #34756	; 0x87c4
   1858c:	movt	r0, #7
   18590:	movw	r1, #34650	; 0x875a
   18594:	movt	r1, #7
   18598:	movw	r2, #1174	; 0x496
   1859c:	movw	r3, #34657	; 0x8761
   185a0:	movt	r3, #7
   185a4:	bl	12bb8 <__assert_fail@plt>
   185a8:	ldr	r0, [fp, #-8]
   185ac:	ldr	r0, [r0, #156]	; 0x9c
   185b0:	movw	r1, #0
   185b4:	cmp	r1, r0
   185b8:	bne	185c0 <__assert_fail@plt+0x5a08>
   185bc:	b	185e0 <__assert_fail@plt+0x5a28>
   185c0:	movw	r0, #34778	; 0x87da
   185c4:	movt	r0, #7
   185c8:	movw	r1, #34650	; 0x875a
   185cc:	movt	r1, #7
   185d0:	movw	r2, #1175	; 0x497
   185d4:	movw	r3, #34657	; 0x8761
   185d8:	movt	r3, #7
   185dc:	bl	12bb8 <__assert_fail@plt>
   185e0:	ldr	r0, [fp, #-8]
   185e4:	vldr	s0, [r0, #28]
   185e8:	vstr	s0, [fp, #-4]
   185ec:	b	187c8 <__assert_fail@plt+0x5c10>
   185f0:	ldr	r0, [fp, #-8]
   185f4:	ldr	r0, [r0]
   185f8:	movw	r1, #23116	; 0x5a4c
   185fc:	movt	r1, #1
   18600:	cmp	r0, r1
   18604:	bne	1860c <__assert_fail@plt+0x5a54>
   18608:	b	1862c <__assert_fail@plt+0x5a74>
   1860c:	movw	r0, #34799	; 0x87ef
   18610:	movt	r0, #7
   18614:	movw	r1, #34650	; 0x875a
   18618:	movt	r1, #7
   1861c:	movw	r2, #1180	; 0x49c
   18620:	movw	r3, #34657	; 0x8761
   18624:	movt	r3, #7
   18628:	bl	12bb8 <__assert_fail@plt>
   1862c:	ldr	r0, [fp, #-8]
   18630:	ldr	r0, [r0, #156]	; 0x9c
   18634:	movw	r1, #0
   18638:	cmp	r1, r0
   1863c:	bne	18644 <__assert_fail@plt+0x5a8c>
   18640:	b	18664 <__assert_fail@plt+0x5aac>
   18644:	movw	r0, #34778	; 0x87da
   18648:	movt	r0, #7
   1864c:	movw	r1, #34650	; 0x875a
   18650:	movt	r1, #7
   18654:	movw	r2, #1181	; 0x49d
   18658:	movw	r3, #34657	; 0x8761
   1865c:	movt	r3, #7
   18660:	bl	12bb8 <__assert_fail@plt>
   18664:	ldr	r0, [fp, #-8]
   18668:	ldr	r0, [r0, #160]	; 0xa0
   1866c:	vldr	s0, [r0, #28]
   18670:	vcvt.f64.f32	d16, s0
   18674:	vmov.f64	d17, #112	; 0x3f800000  1.0
   18678:	vsub.f64	d16, d17, d16
   1867c:	vcvt.f32.f64	s0, d16
   18680:	ldr	r0, [fp, #-8]
   18684:	vstr	s0, [r0, #28]
   18688:	ldr	r0, [fp, #-8]
   1868c:	vldr	s0, [r0, #28]
   18690:	vstr	s0, [fp, #-4]
   18694:	b	187c8 <__assert_fail@plt+0x5c10>
   18698:	ldr	r0, [fp, #-8]
   1869c:	ldr	r0, [r0]
   186a0:	movw	r1, #18428	; 0x47fc
   186a4:	movt	r1, #1
   186a8:	cmp	r0, r1
   186ac:	bne	186dc <__assert_fail@plt+0x5b24>
   186b0:	ldr	r0, [fp, #-8]
   186b4:	ldr	r0, [r0, #160]	; 0xa0
   186b8:	bl	187d4 <__assert_fail@plt+0x5c1c>
   186bc:	ldr	r0, [fp, #-8]
   186c0:	ldr	r0, [r0, #156]	; 0x9c
   186c4:	vstr	s0, [sp, #4]
   186c8:	bl	187d4 <__assert_fail@plt+0x5c1c>
   186cc:	vldr	s2, [sp, #4]
   186d0:	vmul.f32	s0, s2, s0
   186d4:	vstr	s0, [fp, #-12]
   186d8:	b	1876c <__assert_fail@plt+0x5bb4>
   186dc:	ldr	r0, [fp, #-8]
   186e0:	ldr	r0, [r0]
   186e4:	movw	r1, #19172	; 0x4ae4
   186e8:	movt	r1, #1
   186ec:	cmp	r0, r1
   186f0:	bne	18700 <__assert_fail@plt+0x5b48>
   186f4:	vmov.f32	s0, #112	; 0x3f800000  1.0
   186f8:	vstr	s0, [fp, #-12]
   186fc:	b	18768 <__assert_fail@plt+0x5bb0>
   18700:	ldr	r0, [fp, #-8]
   18704:	ldr	r0, [r0]
   18708:	movw	r1, #24484	; 0x5fa4
   1870c:	movt	r1, #1
   18710:	cmp	r0, r1
   18714:	bne	18744 <__assert_fail@plt+0x5b8c>
   18718:	ldr	r0, [fp, #-8]
   1871c:	ldr	r0, [r0, #160]	; 0xa0
   18720:	bl	187d4 <__assert_fail@plt+0x5c1c>
   18724:	ldr	r0, [fp, #-8]
   18728:	ldr	r0, [r0, #156]	; 0x9c
   1872c:	vstr	s0, [sp]
   18730:	bl	187d4 <__assert_fail@plt+0x5c1c>
   18734:	vldr	s2, [sp]
   18738:	vadd.f32	s0, s2, s0
   1873c:	vstr	s0, [fp, #-12]
   18740:	b	18764 <__assert_fail@plt+0x5bac>
   18744:	movw	r0, #36537	; 0x8eb9
   18748:	movt	r0, #7
   1874c:	movw	r1, #34650	; 0x875a
   18750:	movt	r1, #7
   18754:	movw	r2, #1204	; 0x4b4
   18758:	movw	r3, #34657	; 0x8761
   1875c:	movt	r3, #7
   18760:	bl	12bb8 <__assert_fail@plt>
   18764:	b	18768 <__assert_fail@plt+0x5bb0>
   18768:	b	1876c <__assert_fail@plt+0x5bb4>
   1876c:	vldr	s0, [fp, #-12]
   18770:	bl	18810 <__assert_fail@plt+0x5c58>
   18774:	ldr	lr, [fp, #-8]
   18778:	vstr	s0, [lr, #28]
   1877c:	ldr	lr, [fp, #-8]
   18780:	vldr	s0, [lr, #28]
   18784:	vstr	s0, [fp, #-4]
   18788:	b	187c8 <__assert_fail@plt+0x5c10>
   1878c:	ldr	r0, [fp, #-8]
   18790:	vmov.f32	s0, #112	; 0x3f800000  1.0
   18794:	vstr	s0, [r0, #28]
   18798:	ldr	r0, [fp, #-8]
   1879c:	vldr	s0, [r0, #28]
   187a0:	vstr	s0, [fp, #-4]
   187a4:	b	187c8 <__assert_fail@plt+0x5c10>
   187a8:	movw	r0, #36537	; 0x8eb9
   187ac:	movt	r0, #7
   187b0:	movw	r1, #34650	; 0x875a
   187b4:	movt	r1, #7
   187b8:	movw	r2, #1216	; 0x4c0
   187bc:	movw	r3, #34657	; 0x8761
   187c0:	movt	r3, #7
   187c4:	bl	12bb8 <__assert_fail@plt>
   187c8:	vldr	s0, [fp, #-4]
   187cc:	mov	sp, fp
   187d0:	pop	{fp, pc}
   187d4:	sub	sp, sp, #8
   187d8:	str	r0, [sp]
   187dc:	ldr	r0, [sp]
   187e0:	movw	r1, #0
   187e4:	cmp	r0, r1
   187e8:	beq	187fc <__assert_fail@plt+0x5c44>
   187ec:	ldr	r0, [sp]
   187f0:	vldr	s0, [r0, #28]
   187f4:	vstr	s0, [sp, #4]
   187f8:	b	18804 <__assert_fail@plt+0x5c4c>
   187fc:	vmov.f32	s0, #112	; 0x3f800000  1.0
   18800:	vstr	s0, [sp, #4]
   18804:	vldr	s0, [sp, #4]
   18808:	add	sp, sp, #8
   1880c:	bx	lr
   18810:	sub	sp, sp, #8
   18814:	vstr	s0, [sp]
   18818:	vldr	s0, [sp]
   1881c:	vmov.f32	s2, #112	; 0x3f800000  1.0
   18820:	vcmpe.f32	s0, s2
   18824:	vmrs	APSR_nzcv, fpscr
   18828:	ble	18838 <__assert_fail@plt+0x5c80>
   1882c:	vmov.f32	s0, #112	; 0x3f800000  1.0
   18830:	vstr	s0, [sp, #4]
   18834:	b	18860 <__assert_fail@plt+0x5ca8>
   18838:	vldr	s0, [sp]
   1883c:	vcvt.f64.f32	d16, s0
   18840:	vcmpe.f64	d16, #0.0
   18844:	vmrs	APSR_nzcv, fpscr
   18848:	bpl	18858 <__assert_fail@plt+0x5ca0>
   1884c:	vldr	s0, [pc, #24]	; 1886c <__assert_fail@plt+0x5cb4>
   18850:	vstr	s0, [sp, #4]
   18854:	b	18860 <__assert_fail@plt+0x5ca8>
   18858:	vldr	s0, [sp]
   1885c:	vstr	s0, [sp, #4]
   18860:	vldr	s0, [sp, #4]
   18864:	add	sp, sp, #8
   18868:	bx	lr
   1886c:	andeq	r0, r0, r0
   18870:	push	{fp, lr}
   18874:	mov	fp, sp
   18878:	sub	sp, sp, #152	; 0x98
   1887c:	str	r0, [fp, #-4]
   18880:	str	r1, [fp, #-8]
   18884:	str	r2, [fp, #-12]
   18888:	movw	r0, #63320	; 0xf758
   1888c:	movt	r0, #8
   18890:	mov	r1, #0
   18894:	str	r1, [r0]
   18898:	ldr	r0, [fp, #-8]
   1889c:	ldr	r1, [fp, #-12]
   188a0:	add	r0, r0, r1, lsl #2
   188a4:	movw	r1, #63312	; 0xf750
   188a8:	movt	r1, #8
   188ac:	str	r0, [r1]
   188b0:	ldr	r0, [fp, #-12]
   188b4:	str	r0, [fp, #-40]	; 0xffffffd8
   188b8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   188bc:	ldr	r1, [fp, #-4]
   188c0:	cmp	r0, r1
   188c4:	movw	r0, #0
   188c8:	str	r0, [fp, #-48]	; 0xffffffd0
   188cc:	bge	188f8 <__assert_fail@plt+0x5d40>
   188d0:	ldr	r0, [fp, #-8]
   188d4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   188d8:	add	r0, r0, r1, lsl #2
   188dc:	ldr	r0, [r0]
   188e0:	movw	r1, #1
   188e4:	and	r1, r1, #1
   188e8:	bl	1ce3c <__assert_fail@plt+0xa284>
   188ec:	mvn	r1, #0
   188f0:	eor	r0, r0, r1
   188f4:	str	r0, [fp, #-48]	; 0xffffffd0
   188f8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   188fc:	tst	r0, #1
   18900:	beq	18928 <__assert_fail@plt+0x5d70>
   18904:	movw	r0, #63308	; 0xf74c
   18908:	movt	r0, #8
   1890c:	ldr	r1, [r0]
   18910:	add	r1, r1, #1
   18914:	str	r1, [r0]
   18918:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1891c:	add	r0, r0, #1
   18920:	str	r0, [fp, #-40]	; 0xffffffd8
   18924:	b	188b8 <__assert_fail@plt+0x5d00>
   18928:	movw	r0, #46708	; 0xb674
   1892c:	movt	r0, #7
   18930:	bl	21cf4 <__assert_fail@plt+0xf13c>
   18934:	str	r0, [fp, #-36]	; 0xffffffdc
   18938:	movw	r0, #36617	; 0x8f09
   1893c:	movt	r0, #7
   18940:	bl	21cf4 <__assert_fail@plt+0xf13c>
   18944:	str	r0, [fp, #-28]	; 0xffffffe4
   18948:	movw	r0, #35128	; 0x8938
   1894c:	movt	r0, #7
   18950:	bl	21cf4 <__assert_fail@plt+0xf13c>
   18954:	str	r0, [fp, #-32]	; 0xffffffe0
   18958:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1895c:	movw	lr, #0
   18960:	cmp	r0, lr
   18964:	beq	1896c <__assert_fail@plt+0x5db4>
   18968:	b	1898c <__assert_fail@plt+0x5dd4>
   1896c:	movw	r0, #34824	; 0x8808
   18970:	movt	r0, #7
   18974:	movw	r1, #34650	; 0x875a
   18978:	movt	r1, #7
   1897c:	movw	r2, #1270	; 0x4f6
   18980:	movw	r3, #34843	; 0x881b
   18984:	movt	r3, #7
   18988:	bl	12bb8 <__assert_fail@plt>
   1898c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   18990:	movw	r1, #0
   18994:	cmp	r0, r1
   18998:	beq	189a0 <__assert_fail@plt+0x5de8>
   1899c:	b	189c0 <__assert_fail@plt+0x5e08>
   189a0:	movw	r0, #34902	; 0x8856
   189a4:	movt	r0, #7
   189a8:	movw	r1, #34650	; 0x875a
   189ac:	movt	r1, #7
   189b0:	movw	r2, #1271	; 0x4f7
   189b4:	movw	r3, #34843	; 0x881b
   189b8:	movt	r3, #7
   189bc:	bl	12bb8 <__assert_fail@plt>
   189c0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   189c4:	movw	r1, #0
   189c8:	cmp	r0, r1
   189cc:	beq	189d4 <__assert_fail@plt+0x5e1c>
   189d0:	b	189f4 <__assert_fail@plt+0x5e3c>
   189d4:	movw	r0, #34922	; 0x886a
   189d8:	movt	r0, #7
   189dc:	movw	r1, #34650	; 0x875a
   189e0:	movt	r1, #7
   189e4:	movw	r2, #1272	; 0x4f8
   189e8:	movw	r3, #34843	; 0x881b
   189ec:	movt	r3, #7
   189f0:	bl	12bb8 <__assert_fail@plt>
   189f4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   189f8:	ldr	r1, [fp, #-8]
   189fc:	sub	r2, fp, #4
   18a00:	bl	21f7c <__assert_fail@plt+0xf3c4>
   18a04:	movw	r1, #63324	; 0xf75c
   18a08:	movt	r1, #8
   18a0c:	ldr	r2, [r1]
   18a10:	movw	lr, #46708	; 0xb674
   18a14:	movt	lr, #7
   18a18:	str	lr, [r2, #4]
   18a1c:	movw	r2, #63320	; 0xf758
   18a20:	movt	r2, #8
   18a24:	ldr	lr, [r2]
   18a28:	movw	r3, #1
   18a2c:	strb	r3, [lr, #33]	; 0x21
   18a30:	ldr	r3, [fp, #-8]
   18a34:	ldr	lr, [fp, #-4]
   18a38:	ldr	r1, [r1]
   18a3c:	ldr	r2, [r2]
   18a40:	str	r0, [fp, #-52]	; 0xffffffcc
   18a44:	mov	r0, r3
   18a48:	str	r1, [fp, #-56]	; 0xffffffc8
   18a4c:	mov	r1, lr
   18a50:	ldr	r3, [fp, #-56]	; 0xffffffc8
   18a54:	str	r2, [fp, #-60]	; 0xffffffc4
   18a58:	mov	r2, r3
   18a5c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   18a60:	bl	21cac <__assert_fail@plt+0xf0f4>
   18a64:	movw	r0, #63324	; 0xf75c
   18a68:	movt	r0, #8
   18a6c:	ldr	r0, [r0]
   18a70:	bl	172c8 <__assert_fail@plt+0x4710>
   18a74:	ldr	r0, [fp, #-40]	; 0xffffffd8
   18a78:	ldr	r1, [fp, #-4]
   18a7c:	cmp	r0, r1
   18a80:	bge	18d48 <__assert_fail@plt+0x6190>
   18a84:	movw	r0, #92	; 0x5c
   18a88:	movt	r0, #9
   18a8c:	mov	r1, #0
   18a90:	strb	r1, [r0, #40]	; 0x28
   18a94:	ldr	r0, [fp, #-8]
   18a98:	ldr	r1, [fp, #-40]	; 0xffffffd8
   18a9c:	add	r0, r0, r1, lsl #2
   18aa0:	ldr	r0, [r0]
   18aa4:	movw	r1, #0
   18aa8:	and	r1, r1, #1
   18aac:	bl	1ce3c <__assert_fail@plt+0xa284>
   18ab0:	tst	r0, #1
   18ab4:	bne	18b40 <__assert_fail@plt+0x5f88>
   18ab8:	movw	r0, #34942	; 0x887e
   18abc:	movt	r0, #7
   18ac0:	bl	12864 <gettext@plt>
   18ac4:	ldr	lr, [fp, #-8]
   18ac8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   18acc:	ldr	r3, [lr, r1, lsl #2]
   18ad0:	mov	r1, #0
   18ad4:	str	r0, [fp, #-64]	; 0xffffffc0
   18ad8:	mov	r0, r1
   18adc:	ldr	r2, [fp, #-64]	; 0xffffffc0
   18ae0:	bl	12780 <error@plt>
   18ae4:	ldr	r0, [fp, #-8]
   18ae8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   18aec:	add	r0, r0, r1, lsl #2
   18af0:	ldr	r0, [r0]
   18af4:	movw	r1, #0
   18af8:	bl	12984 <access@plt>
   18afc:	cmp	r0, #0
   18b00:	bne	18b38 <__assert_fail@plt+0x5f80>
   18b04:	movw	r0, #34978	; 0x88a2
   18b08:	movt	r0, #7
   18b0c:	bl	12864 <gettext@plt>
   18b10:	movw	lr, #63324	; 0xf75c
   18b14:	movt	lr, #8
   18b18:	ldr	lr, [lr]
   18b1c:	ldr	r3, [lr, #4]
   18b20:	movw	lr, #0
   18b24:	str	r0, [fp, #-68]	; 0xffffffbc
   18b28:	mov	r0, lr
   18b2c:	mov	r1, lr
   18b30:	ldr	r2, [fp, #-68]	; 0xffffffbc
   18b34:	bl	12780 <error@plt>
   18b38:	movw	r0, #1
   18b3c:	bl	1284c <exit@plt>
   18b40:	ldr	r0, [fp, #-8]
   18b44:	ldr	r1, [fp, #-40]	; 0xffffffd8
   18b48:	add	r0, r0, r1, lsl #2
   18b4c:	ldr	r0, [r0]
   18b50:	str	r0, [fp, #-20]	; 0xffffffec
   18b54:	ldr	r0, [fp, #-20]	; 0xffffffec
   18b58:	bl	21cf4 <__assert_fail@plt+0xf13c>
   18b5c:	str	r0, [fp, #-16]
   18b60:	ldr	r0, [fp, #-16]
   18b64:	movw	r1, #0
   18b68:	cmp	r0, r1
   18b6c:	bne	18b98 <__assert_fail@plt+0x5fe0>
   18b70:	movw	r0, #35026	; 0x88d2
   18b74:	movt	r0, #7
   18b78:	bl	12864 <gettext@plt>
   18b7c:	ldr	r3, [fp, #-20]	; 0xffffffec
   18b80:	movw	lr, #1
   18b84:	str	r0, [fp, #-72]	; 0xffffffb8
   18b88:	mov	r0, lr
   18b8c:	movw	r1, #0
   18b90:	ldr	r2, [fp, #-72]	; 0xffffffb8
   18b94:	bl	12780 <error@plt>
   18b98:	ldr	r0, [fp, #-16]
   18b9c:	ldr	r0, [r0]
   18ba0:	cmp	r0, #4
   18ba4:	beq	18bb4 <__assert_fail@plt+0x5ffc>
   18ba8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   18bac:	add	r0, r0, #1
   18bb0:	str	r0, [fp, #-40]	; 0xffffffd8
   18bb4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   18bb8:	str	r0, [fp, #-44]	; 0xffffffd4
   18bbc:	ldr	r0, [fp, #-16]
   18bc0:	ldr	r0, [r0, #8]
   18bc4:	ldr	r1, [fp, #-16]
   18bc8:	ldr	r2, [fp, #-8]
   18bcc:	str	r0, [sp, #76]	; 0x4c
   18bd0:	mov	r0, r1
   18bd4:	mov	r1, r2
   18bd8:	sub	r2, fp, #40	; 0x28
   18bdc:	ldr	r3, [sp, #76]	; 0x4c
   18be0:	blx	r3
   18be4:	tst	r0, #1
   18be8:	bne	18cc4 <__assert_fail@plt+0x610c>
   18bec:	ldr	r0, [fp, #-8]
   18bf0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   18bf4:	add	r0, r0, r1, lsl #2
   18bf8:	ldr	r0, [r0]
   18bfc:	movw	r1, #0
   18c00:	cmp	r0, r1
   18c04:	beq	18c9c <__assert_fail@plt+0x60e4>
   18c08:	ldr	r0, [fp, #-16]
   18c0c:	ldr	r0, [r0]
   18c10:	movw	r1, #4
   18c14:	cmp	r1, r0
   18c18:	bne	18c54 <__assert_fail@plt+0x609c>
   18c1c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   18c20:	ldr	r1, [fp, #-44]	; 0xffffffd4
   18c24:	cmp	r0, r1
   18c28:	bne	18c54 <__assert_fail@plt+0x609c>
   18c2c:	movw	r0, #35049	; 0x88e9
   18c30:	movt	r0, #7
   18c34:	bl	12864 <gettext@plt>
   18c38:	ldr	r3, [fp, #-20]	; 0xffffffec
   18c3c:	movw	lr, #1
   18c40:	str	r0, [sp, #72]	; 0x48
   18c44:	mov	r0, lr
   18c48:	movw	r1, #0
   18c4c:	ldr	r2, [sp, #72]	; 0x48
   18c50:	bl	12780 <error@plt>
   18c54:	movw	r0, #35072	; 0x8900
   18c58:	movt	r0, #7
   18c5c:	bl	12864 <gettext@plt>
   18c60:	ldr	lr, [fp, #-8]
   18c64:	ldr	r1, [fp, #-40]	; 0xffffffd8
   18c68:	add	r1, lr, r1, lsl #2
   18c6c:	ldr	r3, [r1]
   18c70:	ldr	r1, [fp, #-20]	; 0xffffffec
   18c74:	movw	lr, #1
   18c78:	str	r0, [sp, #68]	; 0x44
   18c7c:	mov	r0, lr
   18c80:	movw	lr, #0
   18c84:	str	r1, [sp, #64]	; 0x40
   18c88:	mov	r1, lr
   18c8c:	ldr	r2, [sp, #68]	; 0x44
   18c90:	ldr	lr, [sp, #64]	; 0x40
   18c94:	str	lr, [sp]
   18c98:	bl	12780 <error@plt>
   18c9c:	movw	r0, #35102	; 0x891e
   18ca0:	movt	r0, #7
   18ca4:	bl	12864 <gettext@plt>
   18ca8:	ldr	r3, [fp, #-20]	; 0xffffffec
   18cac:	movw	lr, #1
   18cb0:	str	r0, [sp, #60]	; 0x3c
   18cb4:	mov	r0, lr
   18cb8:	movw	r1, #0
   18cbc:	ldr	r2, [sp, #60]	; 0x3c
   18cc0:	bl	12780 <error@plt>
   18cc4:	ldr	r0, [fp, #-20]	; 0xffffffec
   18cc8:	movw	r1, #63324	; 0xf75c
   18ccc:	movt	r1, #8
   18cd0:	ldr	r1, [r1]
   18cd4:	str	r0, [r1, #4]
   18cd8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   18cdc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   18ce0:	cmp	r0, r1
   18ce4:	beq	18d0c <__assert_fail@plt+0x6154>
   18ce8:	ldr	r0, [fp, #-8]
   18cec:	ldr	r1, [fp, #-44]	; 0xffffffd4
   18cf0:	add	r0, r0, r1, lsl #2
   18cf4:	ldr	r0, [r0]
   18cf8:	movw	r1, #63324	; 0xf75c
   18cfc:	movt	r1, #8
   18d00:	ldr	r1, [r1]
   18d04:	str	r0, [r1, #36]	; 0x24
   18d08:	b	18d20 <__assert_fail@plt+0x6168>
   18d0c:	movw	r0, #63324	; 0xf75c
   18d10:	movt	r0, #8
   18d14:	ldr	r0, [r0]
   18d18:	movw	r1, #0
   18d1c:	str	r1, [r0, #36]	; 0x24
   18d20:	b	18d24 <__assert_fail@plt+0x616c>
   18d24:	movw	r0, #63324	; 0xf75c
   18d28:	movt	r0, #8
   18d2c:	ldr	r0, [r0]
   18d30:	bl	172c8 <__assert_fail@plt+0x4710>
   18d34:	movw	r0, #63320	; 0xf758
   18d38:	movt	r0, #8
   18d3c:	ldr	r0, [r0]
   18d40:	bl	172c8 <__assert_fail@plt+0x4710>
   18d44:	b	18a74 <__assert_fail@plt+0x5ebc>
   18d48:	ldr	r0, [fp, #-8]
   18d4c:	ldr	r1, [fp, #-4]
   18d50:	movw	r2, #63324	; 0xf75c
   18d54:	movt	r2, #8
   18d58:	ldr	r2, [r2]
   18d5c:	movw	r3, #63320	; 0xf758
   18d60:	movt	r3, #8
   18d64:	ldr	r3, [r3]
   18d68:	bl	21cd8 <__assert_fail@plt+0xf120>
   18d6c:	movw	r0, #63320	; 0xf758
   18d70:	movt	r0, #8
   18d74:	ldr	r0, [r0]
   18d78:	ldr	r0, [r0, #152]	; 0x98
   18d7c:	movw	r1, #0
   18d80:	cmp	r0, r1
   18d84:	bne	18e04 <__assert_fail@plt+0x624c>
   18d88:	movw	r0, #63320	; 0xf758
   18d8c:	movt	r0, #8
   18d90:	ldr	r1, [r0]
   18d94:	str	r1, [fp, #-24]	; 0xffffffe8
   18d98:	ldr	r1, [r0]
   18d9c:	ldr	r1, [r1, #152]	; 0x98
   18da0:	movw	r2, #63324	; 0xf75c
   18da4:	movt	r2, #8
   18da8:	str	r1, [r2]
   18dac:	str	r1, [r0]
   18db0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18db4:	bl	50c68 <__assert_fail@plt+0x3e0b0>
   18db8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18dbc:	ldr	r1, [fp, #-8]
   18dc0:	sub	r2, fp, #4
   18dc4:	bl	21ff0 <__assert_fail@plt+0xf438>
   18dc8:	movw	r1, #63324	; 0xf75c
   18dcc:	movt	r1, #8
   18dd0:	ldr	r2, [r1]
   18dd4:	movw	lr, #35127	; 0x8937
   18dd8:	movt	lr, #7
   18ddc:	str	lr, [r2, #4]
   18de0:	ldr	r1, [r1]
   18de4:	str	r0, [sp, #56]	; 0x38
   18de8:	mov	r0, r1
   18dec:	bl	172c8 <__assert_fail@plt+0x4710>
   18df0:	movw	r0, #63320	; 0xf758
   18df4:	movt	r0, #8
   18df8:	ldr	r0, [r0]
   18dfc:	bl	172c8 <__assert_fail@plt+0x4710>
   18e00:	b	18eec <__assert_fail@plt+0x6334>
   18e04:	movw	r0, #63320	; 0xf758
   18e08:	movt	r0, #8
   18e0c:	ldr	r0, [r0]
   18e10:	ldr	r0, [r0, #152]	; 0x98
   18e14:	bl	1cdd8 <__assert_fail@plt+0xa220>
   18e18:	tst	r0, #1
   18e1c:	bne	18e50 <__assert_fail@plt+0x6298>
   18e20:	movw	r0, #63320	; 0xf758
   18e24:	movt	r0, #8
   18e28:	ldr	r1, [r0]
   18e2c:	str	r1, [fp, #-24]	; 0xffffffe8
   18e30:	ldr	r1, [r0]
   18e34:	ldr	r1, [r1, #152]	; 0x98
   18e38:	str	r1, [r0]
   18e3c:	ldr	r0, [r0]
   18e40:	bl	172c8 <__assert_fail@plt+0x4710>
   18e44:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18e48:	bl	50c68 <__assert_fail@plt+0x3e0b0>
   18e4c:	b	18ee8 <__assert_fail@plt+0x6330>
   18e50:	ldr	r0, [fp, #-28]	; 0xffffffe4
   18e54:	ldr	r1, [fp, #-8]
   18e58:	sub	r2, fp, #4
   18e5c:	bl	21f0c <__assert_fail@plt+0xf354>
   18e60:	movw	r1, #63324	; 0xf75c
   18e64:	movt	r1, #8
   18e68:	ldr	r2, [r1]
   18e6c:	movw	lr, #36617	; 0x8f09
   18e70:	movt	lr, #7
   18e74:	str	lr, [r2, #4]
   18e78:	ldr	r2, [r1]
   18e7c:	movw	lr, #1
   18e80:	strb	lr, [r2, #33]	; 0x21
   18e84:	ldr	r1, [r1]
   18e88:	str	r0, [sp, #52]	; 0x34
   18e8c:	mov	r0, r1
   18e90:	bl	172c8 <__assert_fail@plt+0x4710>
   18e94:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18e98:	ldr	r1, [fp, #-8]
   18e9c:	sub	r2, fp, #4
   18ea0:	bl	21ff0 <__assert_fail@plt+0xf438>
   18ea4:	movw	r1, #63324	; 0xf75c
   18ea8:	movt	r1, #8
   18eac:	ldr	r2, [r1]
   18eb0:	movw	lr, #35127	; 0x8937
   18eb4:	movt	lr, #7
   18eb8:	str	lr, [r2, #4]
   18ebc:	ldr	r2, [r1]
   18ec0:	movw	lr, #1
   18ec4:	strb	lr, [r2, #33]	; 0x21
   18ec8:	ldr	r1, [r1]
   18ecc:	str	r0, [sp, #48]	; 0x30
   18ed0:	mov	r0, r1
   18ed4:	bl	172c8 <__assert_fail@plt+0x4710>
   18ed8:	movw	r0, #63320	; 0xf758
   18edc:	movt	r0, #8
   18ee0:	ldr	r0, [r0]
   18ee4:	bl	172c8 <__assert_fail@plt+0x4710>
   18ee8:	b	18eec <__assert_fail@plt+0x6334>
   18eec:	movw	r0, #136	; 0x88
   18ef0:	movt	r0, #9
   18ef4:	ldr	r0, [r0, #44]	; 0x2c
   18ef8:	and	r0, r0, #9
   18efc:	cmp	r0, #0
   18f00:	beq	18f44 <__assert_fail@plt+0x638c>
   18f04:	movw	r0, #63272	; 0xf728
   18f08:	movt	r0, #8
   18f0c:	ldr	r0, [r0]
   18f10:	movw	r1, #35134	; 0x893e
   18f14:	movt	r1, #7
   18f18:	bl	128c4 <fprintf@plt>
   18f1c:	movw	r1, #63272	; 0xf728
   18f20:	movt	r1, #8
   18f24:	ldr	r1, [r1]
   18f28:	movw	lr, #63320	; 0xf758
   18f2c:	movt	lr, #8
   18f30:	ldr	lr, [lr]
   18f34:	str	r0, [sp, #44]	; 0x2c
   18f38:	mov	r0, r1
   18f3c:	mov	r1, lr
   18f40:	bl	16df4 <__assert_fail@plt+0x423c>
   18f44:	movw	r0, #63320	; 0xf758
   18f48:	movt	r0, #8
   18f4c:	ldr	r0, [r0]
   18f50:	bl	21998 <__assert_fail@plt+0xede0>
   18f54:	movw	r0, #63320	; 0xf758
   18f58:	movt	r0, #8
   18f5c:	ldr	r0, [r0]
   18f60:	bl	172c8 <__assert_fail@plt+0x4710>
   18f64:	movw	r0, #63320	; 0xf758
   18f68:	movt	r0, #8
   18f6c:	ldr	r0, [r0]
   18f70:	str	r0, [fp, #-24]	; 0xffffffe8
   18f74:	sub	r0, fp, #24
   18f78:	movw	lr, #0
   18f7c:	sxth	r1, lr
   18f80:	movw	r2, #0
   18f84:	bl	191e4 <__assert_fail@plt+0x662c>
   18f88:	movw	r1, #63316	; 0xf754
   18f8c:	movt	r1, #8
   18f90:	str	r0, [r1]
   18f94:	ldr	r0, [r1]
   18f98:	bl	183c0 <__assert_fail@plt+0x5808>
   18f9c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18fa0:	movw	r1, #0
   18fa4:	cmp	r0, r1
   18fa8:	vstr	s0, [sp, #40]	; 0x28
   18fac:	beq	19050 <__assert_fail@plt+0x6498>
   18fb0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18fb4:	ldr	r0, [r0]
   18fb8:	movw	r1, #18924	; 0x49ec
   18fbc:	movt	r1, #1
   18fc0:	cmp	r0, r1
   18fc4:	bne	18fec <__assert_fail@plt+0x6434>
   18fc8:	movw	r0, #36040	; 0x8cc8
   18fcc:	movt	r0, #7
   18fd0:	bl	12864 <gettext@plt>
   18fd4:	movw	lr, #1
   18fd8:	str	r0, [sp, #36]	; 0x24
   18fdc:	mov	r0, lr
   18fe0:	movw	r1, #0
   18fe4:	ldr	r2, [sp, #36]	; 0x24
   18fe8:	bl	12780 <error@plt>
   18fec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18ff0:	ldr	r0, [r0, #4]
   18ff4:	movw	r1, #0
   18ff8:	cmp	r0, r1
   18ffc:	beq	1902c <__assert_fail@plt+0x6474>
   19000:	movw	r0, #35151	; 0x894f
   19004:	movt	r0, #7
   19008:	bl	12864 <gettext@plt>
   1900c:	ldr	lr, [fp, #-24]	; 0xffffffe8
   19010:	ldr	r3, [lr, #4]
   19014:	movw	lr, #1
   19018:	str	r0, [sp, #32]
   1901c:	mov	r0, lr
   19020:	movw	r1, #0
   19024:	ldr	r2, [sp, #32]
   19028:	bl	12780 <error@plt>
   1902c:	movw	r0, #35183	; 0x896f
   19030:	movt	r0, #7
   19034:	bl	12864 <gettext@plt>
   19038:	movw	lr, #1
   1903c:	str	r0, [sp, #28]
   19040:	mov	r0, lr
   19044:	movw	r1, #0
   19048:	ldr	r2, [sp, #28]
   1904c:	bl	12780 <error@plt>
   19050:	movw	r0, #136	; 0x88
   19054:	movt	r0, #9
   19058:	ldr	r0, [r0, #44]	; 0x2c
   1905c:	and	r0, r0, #9
   19060:	cmp	r0, #0
   19064:	beq	190ac <__assert_fail@plt+0x64f4>
   19068:	movw	r0, #63272	; 0xf728
   1906c:	movt	r0, #8
   19070:	ldr	r0, [r0]
   19074:	movw	r1, #36630	; 0x8f16
   19078:	movt	r1, #7
   1907c:	bl	128c4 <fprintf@plt>
   19080:	movw	r1, #63272	; 0xf728
   19084:	movt	r1, #8
   19088:	ldr	r1, [r1]
   1908c:	movw	lr, #63316	; 0xf754
   19090:	movt	lr, #8
   19094:	ldr	lr, [lr]
   19098:	str	r0, [sp, #24]
   1909c:	mov	r0, r1
   190a0:	mov	r1, lr
   190a4:	movw	r2, #0
   190a8:	bl	19668 <__assert_fail@plt+0x6ab0>
   190ac:	movw	r0, #63316	; 0xf754
   190b0:	movt	r0, #8
   190b4:	ldr	r0, [r0]
   190b8:	bl	19a94 <__assert_fail@plt+0x6edc>
   190bc:	movw	r0, #63316	; 0xf754
   190c0:	movt	r0, #8
   190c4:	bl	19ae4 <__assert_fail@plt+0x6f2c>
   190c8:	movw	lr, #63316	; 0xf754
   190cc:	movt	lr, #8
   190d0:	ldr	lr, [lr]
   190d4:	str	r0, [sp, #20]
   190d8:	mov	r0, lr
   190dc:	movw	lr, #1
   190e0:	and	r1, lr, #1
   190e4:	bl	1a0c4 <__assert_fail@plt+0x750c>
   190e8:	movw	r0, #63316	; 0xf754
   190ec:	movt	r0, #8
   190f0:	ldr	r0, [r0]
   190f4:	bl	1a1b8 <__assert_fail@plt+0x7600>
   190f8:	movw	r1, #63316	; 0xf754
   190fc:	movt	r1, #8
   19100:	ldr	r1, [r1]
   19104:	str	r0, [sp, #16]
   19108:	mov	r0, r1
   1910c:	movw	r1, #1
   19110:	and	r1, r1, #1
   19114:	bl	1a0c4 <__assert_fail@plt+0x750c>
   19118:	movw	r0, #136	; 0x88
   1911c:	movt	r0, #9
   19120:	ldr	r0, [r0, #44]	; 0x2c
   19124:	and	r0, r0, #9
   19128:	cmp	r0, #0
   1912c:	beq	191d0 <__assert_fail@plt+0x6618>
   19130:	movw	r0, #63272	; 0xf728
   19134:	movt	r0, #8
   19138:	ldr	r0, [r0]
   1913c:	movw	r1, #35210	; 0x898a
   19140:	movt	r1, #7
   19144:	bl	128c4 <fprintf@plt>
   19148:	movw	r1, #63272	; 0xf728
   1914c:	movt	r1, #8
   19150:	ldr	r1, [r1]
   19154:	movw	lr, #63316	; 0xf754
   19158:	movt	lr, #8
   1915c:	ldr	lr, [lr]
   19160:	str	r0, [sp, #12]
   19164:	mov	r0, r1
   19168:	mov	r1, lr
   1916c:	movw	r2, #0
   19170:	bl	19668 <__assert_fail@plt+0x6ab0>
   19174:	movw	r0, #63272	; 0xf728
   19178:	movt	r0, #8
   1917c:	ldr	r0, [r0]
   19180:	movw	r1, #35232	; 0x89a0
   19184:	movt	r1, #7
   19188:	bl	128c4 <fprintf@plt>
   1918c:	movw	r1, #63272	; 0xf728
   19190:	movt	r1, #8
   19194:	ldr	r1, [r1]
   19198:	movw	r2, #63316	; 0xf754
   1919c:	movt	r2, #8
   191a0:	ldr	r2, [r2]
   191a4:	str	r0, [sp, #8]
   191a8:	mov	r0, r1
   191ac:	mov	r1, r2
   191b0:	bl	16f88 <__assert_fail@plt+0x43d0>
   191b4:	movw	r0, #63272	; 0xf728
   191b8:	movt	r0, #8
   191bc:	ldr	r0, [r0]
   191c0:	movw	r1, #39196	; 0x991c
   191c4:	movt	r1, #7
   191c8:	bl	128c4 <fprintf@plt>
   191cc:	str	r0, [sp, #4]
   191d0:	movw	r0, #63316	; 0xf754
   191d4:	movt	r0, #8
   191d8:	ldr	r0, [r0]
   191dc:	mov	sp, fp
   191e0:	pop	{fp, pc}
   191e4:	push	{fp, lr}
   191e8:	mov	fp, sp
   191ec:	sub	sp, sp, #80	; 0x50
   191f0:	str	r0, [fp, #-8]
   191f4:	strh	r1, [fp, #-10]
   191f8:	str	r2, [fp, #-16]
   191fc:	movw	r0, #0
   19200:	str	r0, [fp, #-20]	; 0xffffffec
   19204:	ldr	r1, [fp, #-8]
   19208:	ldr	r1, [r1]
   1920c:	str	r1, [fp, #-24]	; 0xffffffe8
   19210:	ldr	r1, [fp, #-8]
   19214:	ldr	r1, [r1]
   19218:	cmp	r1, r0
   1921c:	bne	19244 <__assert_fail@plt+0x668c>
   19220:	movw	r0, #35769	; 0x8bb9
   19224:	movt	r0, #7
   19228:	bl	12864 <gettext@plt>
   1922c:	movw	lr, #1
   19230:	str	r0, [fp, #-28]	; 0xffffffe4
   19234:	mov	r0, lr
   19238:	movw	r1, #0
   1923c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   19240:	bl	12780 <error@plt>
   19244:	ldr	r0, [fp, #-8]
   19248:	ldr	r0, [r0]
   1924c:	ldr	r0, [r0, #8]
   19250:	cmp	r0, #5
   19254:	str	r0, [fp, #-32]	; 0xffffffe0
   19258:	bhi	195ac <__assert_fail@plt+0x69f4>
   1925c:	add	r0, pc, #8
   19260:	ldr	r1, [fp, #-32]	; 0xffffffe0
   19264:	ldr	r0, [r0, r1, lsl #2]
   19268:	mov	pc, r0
   1926c:	andeq	r9, r1, r4, lsl #5
   19270:	ldrdeq	r9, [r1], -r8
   19274:	strdeq	r9, [r1], -ip
   19278:	andeq	r9, r1, r8, lsr #5
   1927c:	andeq	r9, r1, ip, lsr r4
   19280:	ldrdeq	r9, [r1], -r4
   19284:	movw	r0, #35769	; 0x8bb9
   19288:	movt	r0, #7
   1928c:	bl	12864 <gettext@plt>
   19290:	movw	lr, #1
   19294:	str	r0, [fp, #-36]	; 0xffffffdc
   19298:	mov	r0, lr
   1929c:	movw	r1, #0
   192a0:	ldr	r2, [fp, #-36]	; 0xffffffdc
   192a4:	bl	12780 <error@plt>
   192a8:	movw	r0, #35788	; 0x8bcc
   192ac:	movt	r0, #7
   192b0:	bl	12864 <gettext@plt>
   192b4:	ldr	lr, [fp, #-24]	; 0xffffffe8
   192b8:	ldr	r3, [lr, #4]
   192bc:	movw	lr, #1
   192c0:	str	r0, [sp, #40]	; 0x28
   192c4:	mov	r0, lr
   192c8:	movw	r1, #0
   192cc:	ldr	r2, [sp, #40]	; 0x28
   192d0:	bl	12780 <error@plt>
   192d4:	ldr	r0, [fp, #-16]
   192d8:	movw	r1, #0
   192dc:	cmp	r0, r1
   192e0:	bne	19310 <__assert_fail@plt+0x6758>
   192e4:	movw	r0, #35869	; 0x8c1d
   192e8:	movt	r0, #7
   192ec:	bl	12864 <gettext@plt>
   192f0:	ldr	lr, [fp, #-24]	; 0xffffffe8
   192f4:	ldr	r3, [lr, #4]
   192f8:	movw	lr, #1
   192fc:	str	r0, [sp, #36]	; 0x24
   19300:	mov	r0, lr
   19304:	movw	r1, #0
   19308:	ldr	r2, [sp, #36]	; 0x24
   1930c:	bl	12780 <error@plt>
   19310:	ldr	r0, [fp, #-16]
   19314:	ldr	r0, [r0, #8]
   19318:	movw	r1, #2
   1931c:	cmp	r1, r0
   19320:	beq	19338 <__assert_fail@plt+0x6780>
   19324:	ldr	r0, [fp, #-16]
   19328:	ldr	r0, [r0, #8]
   1932c:	movw	r1, #3
   19330:	cmp	r1, r0
   19334:	bne	19374 <__assert_fail@plt+0x67bc>
   19338:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1933c:	ldrb	r0, [r0, #33]	; 0x21
   19340:	tst	r0, #1
   19344:	bne	19374 <__assert_fail@plt+0x67bc>
   19348:	movw	r0, #35942	; 0x8c66
   1934c:	movt	r0, #7
   19350:	bl	12864 <gettext@plt>
   19354:	ldr	lr, [fp, #-16]
   19358:	ldr	r3, [lr, #4]
   1935c:	movw	lr, #1
   19360:	str	r0, [sp, #32]
   19364:	mov	r0, lr
   19368:	movw	r1, #0
   1936c:	ldr	r2, [sp, #32]
   19370:	bl	12780 <error@plt>
   19374:	ldr	r0, [fp, #-8]
   19378:	ldr	r0, [r0]
   1937c:	ldrb	r0, [r0, #33]	; 0x21
   19380:	tst	r0, #1
   19384:	beq	193b4 <__assert_fail@plt+0x67fc>
   19388:	movw	r0, #35986	; 0x8c92
   1938c:	movt	r0, #7
   19390:	bl	12864 <gettext@plt>
   19394:	ldr	lr, [fp, #-16]
   19398:	ldr	r3, [lr, #4]
   1939c:	movw	lr, #1
   193a0:	str	r0, [sp, #28]
   193a4:	mov	r0, lr
   193a8:	movw	r1, #0
   193ac:	ldr	r2, [sp, #28]
   193b0:	bl	12780 <error@plt>
   193b4:	movw	r0, #36020	; 0x8cb4
   193b8:	movt	r0, #7
   193bc:	bl	12864 <gettext@plt>
   193c0:	movw	lr, #1
   193c4:	str	r0, [sp, #24]
   193c8:	mov	r0, lr
   193cc:	movw	r1, #0
   193d0:	ldr	r2, [sp, #24]
   193d4:	bl	12780 <error@plt>
   193d8:	ldr	r0, [fp, #-8]
   193dc:	ldr	r0, [r0]
   193e0:	str	r0, [fp, #-20]	; 0xffffffec
   193e4:	ldr	r0, [fp, #-8]
   193e8:	ldr	r0, [r0]
   193ec:	ldr	r0, [r0, #152]	; 0x98
   193f0:	ldr	r1, [fp, #-8]
   193f4:	str	r0, [r1]
   193f8:	b	195d0 <__assert_fail@plt+0x6a18>
   193fc:	ldr	r0, [fp, #-8]
   19400:	ldr	r0, [r0]
   19404:	str	r0, [fp, #-20]	; 0xffffffec
   19408:	ldr	r0, [fp, #-8]
   1940c:	ldr	r0, [r0]
   19410:	ldr	r0, [r0, #152]	; 0x98
   19414:	ldr	r1, [fp, #-8]
   19418:	str	r0, [r1]
   1941c:	ldr	r0, [fp, #-8]
   19420:	ldr	r2, [fp, #-20]	; 0xffffffec
   19424:	movw	r1, #4
   19428:	sxth	r1, r1
   1942c:	bl	191e4 <__assert_fail@plt+0x662c>
   19430:	ldr	r1, [fp, #-20]	; 0xffffffec
   19434:	str	r0, [r1, #160]	; 0xa0
   19438:	b	195d0 <__assert_fail@plt+0x6a18>
   1943c:	ldr	r0, [fp, #-8]
   19440:	ldr	r0, [r0]
   19444:	ldr	r0, [r0, #152]	; 0x98
   19448:	movw	r1, #0
   1944c:	cmp	r1, r0
   19450:	beq	1946c <__assert_fail@plt+0x68b4>
   19454:	ldr	r0, [fp, #-8]
   19458:	ldr	r0, [r0]
   1945c:	ldr	r0, [r0, #152]	; 0x98
   19460:	ldrb	r0, [r0, #33]	; 0x21
   19464:	tst	r0, #1
   19468:	beq	19498 <__assert_fail@plt+0x68e0>
   1946c:	movw	r0, #36062	; 0x8cde
   19470:	movt	r0, #7
   19474:	bl	12864 <gettext@plt>
   19478:	ldr	lr, [fp, #-24]	; 0xffffffe8
   1947c:	ldr	r3, [lr, #4]
   19480:	movw	lr, #1
   19484:	str	r0, [sp, #20]
   19488:	mov	r0, lr
   1948c:	movw	r1, #0
   19490:	ldr	r2, [sp, #20]
   19494:	bl	12780 <error@plt>
   19498:	ldr	r0, [fp, #-8]
   1949c:	ldr	r0, [r0]
   194a0:	str	r0, [fp, #-16]
   194a4:	ldr	r0, [fp, #-8]
   194a8:	ldr	r0, [r0]
   194ac:	ldr	r0, [r0, #152]	; 0x98
   194b0:	ldr	r1, [fp, #-8]
   194b4:	str	r0, [r1]
   194b8:	ldr	r0, [fp, #-8]
   194bc:	ldr	r0, [r0]
   194c0:	ldr	r0, [r0, #8]
   194c4:	cmp	r0, #5
   194c8:	bne	19530 <__assert_fail@plt+0x6978>
   194cc:	ldr	r0, [fp, #-16]
   194d0:	ldrb	r0, [r0, #33]	; 0x21
   194d4:	tst	r0, #1
   194d8:	beq	1950c <__assert_fail@plt+0x6954>
   194dc:	movw	r0, #35869	; 0x8c1d
   194e0:	movt	r0, #7
   194e4:	bl	12864 <gettext@plt>
   194e8:	ldr	lr, [fp, #-8]
   194ec:	ldr	lr, [lr]
   194f0:	ldr	r3, [lr, #4]
   194f4:	movw	lr, #1
   194f8:	str	r0, [sp, #16]
   194fc:	mov	r0, lr
   19500:	movw	r1, #0
   19504:	ldr	r2, [sp, #16]
   19508:	bl	12780 <error@plt>
   1950c:	movw	r0, #36172	; 0x8d4c
   19510:	movt	r0, #7
   19514:	bl	12864 <gettext@plt>
   19518:	movw	lr, #1
   1951c:	str	r0, [sp, #12]
   19520:	mov	r0, lr
   19524:	movw	r1, #0
   19528:	ldr	r2, [sp, #12]
   1952c:	bl	12780 <error@plt>
   19530:	ldr	r0, [fp, #-8]
   19534:	ldr	r2, [fp, #-16]
   19538:	movw	r1, #0
   1953c:	sxth	r1, r1
   19540:	bl	191e4 <__assert_fail@plt+0x662c>
   19544:	str	r0, [fp, #-20]	; 0xffffffec
   19548:	ldr	r0, [fp, #-8]
   1954c:	ldr	r0, [r0]
   19550:	movw	r1, #0
   19554:	cmp	r0, r1
   19558:	beq	19570 <__assert_fail@plt+0x69b8>
   1955c:	ldr	r0, [fp, #-8]
   19560:	ldr	r0, [r0]
   19564:	ldr	r0, [r0, #8]
   19568:	cmp	r0, #5
   1956c:	beq	19594 <__assert_fail@plt+0x69dc>
   19570:	movw	r0, #36227	; 0x8d83
   19574:	movt	r0, #7
   19578:	bl	12864 <gettext@plt>
   1957c:	movw	lr, #1
   19580:	str	r0, [sp, #8]
   19584:	mov	r0, lr
   19588:	movw	r1, #0
   1958c:	ldr	r2, [sp, #8]
   19590:	bl	12780 <error@plt>
   19594:	ldr	r0, [fp, #-8]
   19598:	ldr	r0, [r0]
   1959c:	ldr	r0, [r0, #152]	; 0x98
   195a0:	ldr	r1, [fp, #-8]
   195a4:	str	r0, [r1]
   195a8:	b	195d0 <__assert_fail@plt+0x6a18>
   195ac:	movw	r0, #36308	; 0x8dd4
   195b0:	movt	r0, #7
   195b4:	bl	12864 <gettext@plt>
   195b8:	movw	lr, #1
   195bc:	str	r0, [sp, #4]
   195c0:	mov	r0, lr
   195c4:	movw	r1, #0
   195c8:	ldr	r2, [sp, #4]
   195cc:	bl	12780 <error@plt>
   195d0:	ldr	r0, [fp, #-8]
   195d4:	ldr	r0, [r0]
   195d8:	movw	r1, #0
   195dc:	cmp	r0, r1
   195e0:	bne	195f0 <__assert_fail@plt+0x6a38>
   195e4:	ldr	r0, [fp, #-20]	; 0xffffffec
   195e8:	str	r0, [fp, #-4]
   195ec:	b	1965c <__assert_fail@plt+0x6aa4>
   195f0:	ldr	r0, [fp, #-8]
   195f4:	ldr	r0, [r0]
   195f8:	ldr	r0, [r0, #12]
   195fc:	ldrsh	r1, [fp, #-10]
   19600:	cmp	r0, r1
   19604:	ble	19654 <__assert_fail@plt+0x6a9c>
   19608:	ldr	r0, [fp, #-8]
   1960c:	ldr	r1, [fp, #-20]	; 0xffffffec
   19610:	ldrsh	r2, [fp, #-10]
   19614:	bl	1a794 <__assert_fail@plt+0x7bdc>
   19618:	str	r0, [fp, #-20]	; 0xffffffec
   1961c:	ldr	r0, [fp, #-20]	; 0xffffffec
   19620:	movw	r1, #0
   19624:	cmp	r0, r1
   19628:	bne	19650 <__assert_fail@plt+0x6a98>
   1962c:	movw	r0, #35769	; 0x8bb9
   19630:	movt	r0, #7
   19634:	bl	12864 <gettext@plt>
   19638:	movw	lr, #1
   1963c:	str	r0, [sp]
   19640:	mov	r0, lr
   19644:	movw	r1, #0
   19648:	ldr	r2, [sp]
   1964c:	bl	12780 <error@plt>
   19650:	b	19654 <__assert_fail@plt+0x6a9c>
   19654:	ldr	r0, [fp, #-20]	; 0xffffffec
   19658:	str	r0, [fp, #-4]
   1965c:	ldr	r0, [fp, #-4]
   19660:	mov	sp, fp
   19664:	pop	{fp, pc}
   19668:	push	{fp, lr}
   1966c:	mov	fp, sp
   19670:	sub	sp, sp, #128	; 0x80
   19674:	str	r0, [fp, #-4]
   19678:	str	r1, [fp, #-8]
   1967c:	str	r2, [fp, #-12]
   19680:	ldr	r0, [fp, #-8]
   19684:	movw	r1, #0
   19688:	cmp	r0, r1
   1968c:	bne	19694 <__assert_fail@plt+0x6adc>
   19690:	b	19a8c <__assert_fail@plt+0x6ed4>
   19694:	movw	r0, #0
   19698:	str	r0, [fp, #-16]
   1969c:	ldr	r0, [fp, #-16]
   196a0:	ldr	r1, [fp, #-12]
   196a4:	cmp	r0, r1
   196a8:	bge	196d0 <__assert_fail@plt+0x6b18>
   196ac:	ldr	r0, [fp, #-4]
   196b0:	movw	r1, #35613	; 0x8b1d
   196b4:	movt	r1, #7
   196b8:	bl	128c4 <fprintf@plt>
   196bc:	str	r0, [fp, #-24]	; 0xffffffe8
   196c0:	ldr	r0, [fp, #-16]
   196c4:	add	r0, r0, #1
   196c8:	str	r0, [fp, #-16]
   196cc:	b	1969c <__assert_fail@plt+0x6ae4>
   196d0:	ldr	r0, [fp, #-4]
   196d4:	movw	r1, #35618	; 0x8b22
   196d8:	movt	r1, #7
   196dc:	bl	128c4 <fprintf@plt>
   196e0:	ldr	r1, [fp, #-4]
   196e4:	ldr	lr, [fp, #-8]
   196e8:	str	r0, [fp, #-28]	; 0xffffffe4
   196ec:	mov	r0, r1
   196f0:	mov	r1, lr
   196f4:	bl	1833c <__assert_fail@plt+0x5784>
   196f8:	ldr	r0, [fp, #-4]
   196fc:	ldr	r1, [fp, #-8]
   19700:	ldr	r1, [r1, #8]
   19704:	sxth	r1, r1
   19708:	str	r0, [fp, #-32]	; 0xffffffe0
   1970c:	mov	r0, r1
   19710:	bl	1a604 <__assert_fail@plt+0x7a4c>
   19714:	ldr	r1, [fp, #-8]
   19718:	ldr	r1, [r1, #12]
   1971c:	sxth	r1, r1
   19720:	str	r0, [fp, #-36]	; 0xffffffdc
   19724:	mov	r0, r1
   19728:	bl	1a684 <__assert_fail@plt+0x7acc>
   1972c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   19730:	str	r0, [fp, #-40]	; 0xffffffd8
   19734:	mov	r0, r1
   19738:	movw	r1, #35625	; 0x8b29
   1973c:	movt	r1, #7
   19740:	ldr	r2, [fp, #-36]	; 0xffffffdc
   19744:	ldr	r3, [fp, #-40]	; 0xffffffd8
   19748:	bl	128c4 <fprintf@plt>
   1974c:	ldr	r1, [fp, #-4]
   19750:	ldr	r2, [fp, #-8]
   19754:	ldr	r2, [r2, #24]
   19758:	str	r0, [fp, #-44]	; 0xffffffd4
   1975c:	mov	r0, r2
   19760:	str	r1, [fp, #-48]	; 0xffffffd0
   19764:	bl	1a704 <__assert_fail@plt+0x7b4c>
   19768:	ldr	r1, [fp, #-8]
   1976c:	vldr	s0, [r1, #28]
   19770:	vcvt.f64.f32	d16, s0
   19774:	ldr	r1, [fp, #-8]
   19778:	ldrb	r1, [r1, #16]
   1977c:	tst	r1, #1
   19780:	movw	r1, #35691	; 0x8b6b
   19784:	movt	r1, #7
   19788:	movw	r2, #39197	; 0x991d
   1978c:	movt	r2, #7
   19790:	movne	r1, r2
   19794:	ldr	r2, [fp, #-48]	; 0xffffffd0
   19798:	str	r0, [fp, #-52]	; 0xffffffcc
   1979c:	mov	r0, r2
   197a0:	movw	r3, #35643	; 0x8b3b
   197a4:	movt	r3, #7
   197a8:	str	r1, [fp, #-56]	; 0xffffffc8
   197ac:	mov	r1, r3
   197b0:	ldr	r2, [fp, #-52]	; 0xffffffcc
   197b4:	vstr	d16, [sp]
   197b8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   197bc:	str	r3, [sp, #8]
   197c0:	bl	128c4 <fprintf@plt>
   197c4:	ldr	r1, [fp, #-8]
   197c8:	ldrb	r1, [r1, #18]
   197cc:	tst	r1, #1
   197d0:	str	r0, [fp, #-60]	; 0xffffffc4
   197d4:	bne	197f8 <__assert_fail@plt+0x6c40>
   197d8:	ldr	r0, [fp, #-8]
   197dc:	ldrb	r0, [r0, #19]
   197e0:	tst	r0, #1
   197e4:	bne	197f8 <__assert_fail@plt+0x6c40>
   197e8:	ldr	r0, [fp, #-8]
   197ec:	ldrb	r0, [r0, #20]
   197f0:	tst	r0, #1
   197f4:	beq	198fc <__assert_fail@plt+0x6d44>
   197f8:	movw	r0, #0
   197fc:	str	r0, [fp, #-20]	; 0xffffffec
   19800:	ldr	r0, [fp, #-4]
   19804:	movw	r1, #35695	; 0x8b6f
   19808:	movt	r1, #7
   1980c:	bl	128c4 <fprintf@plt>
   19810:	ldr	r1, [fp, #-8]
   19814:	ldrb	r1, [r1, #18]
   19818:	tst	r1, #1
   1981c:	str	r0, [sp, #64]	; 0x40
   19820:	beq	19840 <__assert_fail@plt+0x6c88>
   19824:	ldr	r0, [fp, #-4]
   19828:	movw	r1, #43116	; 0xa86c
   1982c:	movt	r1, #7
   19830:	bl	128c4 <fprintf@plt>
   19834:	movw	r1, #1
   19838:	str	r1, [fp, #-20]	; 0xffffffec
   1983c:	str	r0, [sp, #60]	; 0x3c
   19840:	ldr	r0, [fp, #-8]
   19844:	ldrb	r0, [r0, #20]
   19848:	tst	r0, #1
   1984c:	beq	198a0 <__assert_fail@plt+0x6ce8>
   19850:	ldr	r0, [fp, #-4]
   19854:	ldr	r1, [fp, #-20]	; 0xffffffec
   19858:	cmp	r1, #0
   1985c:	movw	r1, #0
   19860:	movne	r1, #1
   19864:	tst	r1, #1
   19868:	movw	r1, #39197	; 0x991d
   1986c:	movt	r1, #7
   19870:	movw	r2, #35710	; 0x8b7e
   19874:	movt	r2, #7
   19878:	movne	r1, r2
   1987c:	movw	r2, #35702	; 0x8b76
   19880:	movt	r2, #7
   19884:	str	r1, [sp, #56]	; 0x38
   19888:	mov	r1, r2
   1988c:	ldr	r2, [sp, #56]	; 0x38
   19890:	bl	128c4 <fprintf@plt>
   19894:	movw	r1, #1
   19898:	str	r1, [fp, #-20]	; 0xffffffec
   1989c:	str	r0, [sp, #52]	; 0x34
   198a0:	ldr	r0, [fp, #-8]
   198a4:	ldrb	r0, [r0, #19]
   198a8:	tst	r0, #1
   198ac:	beq	198f8 <__assert_fail@plt+0x6d40>
   198b0:	ldr	r0, [fp, #-4]
   198b4:	ldr	r1, [fp, #-20]	; 0xffffffec
   198b8:	cmp	r1, #0
   198bc:	movw	r1, #0
   198c0:	movne	r1, #1
   198c4:	tst	r1, #1
   198c8:	movw	r1, #39197	; 0x991d
   198cc:	movt	r1, #7
   198d0:	movw	r2, #35710	; 0x8b7e
   198d4:	movt	r2, #7
   198d8:	movne	r1, r2
   198dc:	movw	r2, #35712	; 0x8b80
   198e0:	movt	r2, #7
   198e4:	str	r1, [sp, #48]	; 0x30
   198e8:	mov	r1, r2
   198ec:	ldr	r2, [sp, #48]	; 0x30
   198f0:	bl	128c4 <fprintf@plt>
   198f4:	str	r0, [sp, #44]	; 0x2c
   198f8:	b	198fc <__assert_fail@plt+0x6d44>
   198fc:	ldr	r0, [fp, #-4]
   19900:	movw	r1, #39196	; 0x991c
   19904:	movt	r1, #7
   19908:	bl	128c4 <fprintf@plt>
   1990c:	movw	r1, #0
   19910:	str	r1, [fp, #-16]
   19914:	str	r0, [sp, #40]	; 0x28
   19918:	ldr	r0, [fp, #-16]
   1991c:	ldr	r1, [fp, #-12]
   19920:	cmp	r0, r1
   19924:	bge	1994c <__assert_fail@plt+0x6d94>
   19928:	ldr	r0, [fp, #-4]
   1992c:	movw	r1, #35613	; 0x8b1d
   19930:	movt	r1, #7
   19934:	bl	128c4 <fprintf@plt>
   19938:	str	r0, [sp, #36]	; 0x24
   1993c:	ldr	r0, [fp, #-16]
   19940:	add	r0, r0, #1
   19944:	str	r0, [fp, #-16]
   19948:	b	19918 <__assert_fail@plt+0x6d60>
   1994c:	ldr	r0, [fp, #-8]
   19950:	ldr	r0, [r0, #156]	; 0x9c
   19954:	movw	r1, #0
   19958:	cmp	r1, r0
   1995c:	bne	1998c <__assert_fail@plt+0x6dd4>
   19960:	ldr	r0, [fp, #-8]
   19964:	ldr	r0, [r0, #160]	; 0xa0
   19968:	movw	r1, #0
   1996c:	cmp	r1, r0
   19970:	bne	1998c <__assert_fail@plt+0x6dd4>
   19974:	ldr	r0, [fp, #-4]
   19978:	movw	r1, #35719	; 0x8b87
   1997c:	movt	r1, #7
   19980:	bl	128c4 <fprintf@plt>
   19984:	str	r0, [sp, #32]
   19988:	b	19a8c <__assert_fail@plt+0x6ed4>
   1998c:	ldr	r0, [fp, #-8]
   19990:	ldr	r0, [r0, #156]	; 0x9c
   19994:	movw	r1, #0
   19998:	cmp	r0, r1
   1999c:	beq	199d8 <__assert_fail@plt+0x6e20>
   199a0:	ldr	r0, [fp, #-4]
   199a4:	movw	r1, #35733	; 0x8b95
   199a8:	movt	r1, #7
   199ac:	bl	128c4 <fprintf@plt>
   199b0:	ldr	r1, [fp, #-4]
   199b4:	ldr	lr, [fp, #-8]
   199b8:	ldr	lr, [lr, #156]	; 0x9c
   199bc:	ldr	r2, [fp, #-12]
   199c0:	add	r2, r2, #1
   199c4:	str	r0, [sp, #28]
   199c8:	mov	r0, r1
   199cc:	mov	r1, lr
   199d0:	bl	19668 <__assert_fail@plt+0x6ab0>
   199d4:	b	199ec <__assert_fail@plt+0x6e34>
   199d8:	ldr	r0, [fp, #-4]
   199dc:	movw	r1, #35740	; 0x8b9c
   199e0:	movt	r1, #7
   199e4:	bl	128c4 <fprintf@plt>
   199e8:	str	r0, [sp, #24]
   199ec:	movw	r0, #0
   199f0:	str	r0, [fp, #-16]
   199f4:	ldr	r0, [fp, #-16]
   199f8:	ldr	r1, [fp, #-12]
   199fc:	cmp	r0, r1
   19a00:	bge	19a28 <__assert_fail@plt+0x6e70>
   19a04:	ldr	r0, [fp, #-4]
   19a08:	movw	r1, #35613	; 0x8b1d
   19a0c:	movt	r1, #7
   19a10:	bl	128c4 <fprintf@plt>
   19a14:	str	r0, [sp, #20]
   19a18:	ldr	r0, [fp, #-16]
   19a1c:	add	r0, r0, #1
   19a20:	str	r0, [fp, #-16]
   19a24:	b	199f4 <__assert_fail@plt+0x6e3c>
   19a28:	ldr	r0, [fp, #-8]
   19a2c:	ldr	r0, [r0, #160]	; 0xa0
   19a30:	movw	r1, #0
   19a34:	cmp	r0, r1
   19a38:	beq	19a74 <__assert_fail@plt+0x6ebc>
   19a3c:	ldr	r0, [fp, #-4]
   19a40:	movw	r1, #35750	; 0x8ba6
   19a44:	movt	r1, #7
   19a48:	bl	128c4 <fprintf@plt>
   19a4c:	ldr	r1, [fp, #-4]
   19a50:	ldr	lr, [fp, #-8]
   19a54:	ldr	lr, [lr, #160]	; 0xa0
   19a58:	ldr	r2, [fp, #-12]
   19a5c:	add	r2, r2, #1
   19a60:	str	r0, [sp, #16]
   19a64:	mov	r0, r1
   19a68:	mov	r1, lr
   19a6c:	bl	19668 <__assert_fail@plt+0x6ab0>
   19a70:	b	19a88 <__assert_fail@plt+0x6ed0>
   19a74:	ldr	r0, [fp, #-4]
   19a78:	movw	r1, #35758	; 0x8bae
   19a7c:	movt	r1, #7
   19a80:	bl	128c4 <fprintf@plt>
   19a84:	str	r0, [sp, #12]
   19a88:	b	19a8c <__assert_fail@plt+0x6ed4>
   19a8c:	mov	sp, fp
   19a90:	pop	{fp, pc}
   19a94:	push	{fp, lr}
   19a98:	mov	fp, sp
   19a9c:	sub	sp, sp, #8
   19aa0:	str	r0, [sp, #4]
   19aa4:	ldr	r0, [sp, #4]
   19aa8:	movw	r1, #0
   19aac:	cmp	r0, r1
   19ab0:	beq	19adc <__assert_fail@plt+0x6f24>
   19ab4:	ldr	r0, [sp, #4]
   19ab8:	ldr	r0, [r0, #160]	; 0xa0
   19abc:	bl	19a94 <__assert_fail@plt+0x6edc>
   19ac0:	ldr	r0, [sp, #4]
   19ac4:	ldr	r0, [r0, #156]	; 0x9c
   19ac8:	bl	19a94 <__assert_fail@plt+0x6edc>
   19acc:	ldr	r0, [sp, #4]
   19ad0:	bl	1a948 <__assert_fail@plt+0x7d90>
   19ad4:	ldr	lr, [sp, #4]
   19ad8:	str	r0, [lr, #24]
   19adc:	mov	sp, fp
   19ae0:	pop	{fp, pc}
   19ae4:	push	{fp, lr}
   19ae8:	mov	fp, sp
   19aec:	sub	sp, sp, #216	; 0xd8
   19af0:	str	r0, [fp, #-8]
   19af4:	sub	r0, fp, #16
   19af8:	movw	r1, #0
   19afc:	and	r2, r1, #255	; 0xff
   19b00:	str	r1, [sp, #60]	; 0x3c
   19b04:	mov	r1, r2
   19b08:	movw	r2, #8
   19b0c:	str	r2, [sp, #56]	; 0x38
   19b10:	bl	12900 <memset@plt>
   19b14:	sub	r0, fp, #24
   19b18:	ldr	r1, [sp, #60]	; 0x3c
   19b1c:	and	r1, r1, #255	; 0xff
   19b20:	ldr	r2, [sp, #56]	; 0x38
   19b24:	bl	12900 <memset@plt>
   19b28:	ldr	r0, [sp, #60]	; 0x3c
   19b2c:	strb	r0, [sp, #79]	; 0x4f
   19b30:	ldr	r1, [fp, #-8]
   19b34:	movw	r2, #0
   19b38:	cmp	r1, r2
   19b3c:	beq	19b54 <__assert_fail@plt+0x6f9c>
   19b40:	ldr	r0, [fp, #-8]
   19b44:	ldr	r0, [r0]
   19b48:	movw	r1, #0
   19b4c:	cmp	r0, r1
   19b50:	bne	19b64 <__assert_fail@plt+0x6fac>
   19b54:	movw	r0, #0
   19b58:	and	r0, r0, #1
   19b5c:	strb	r0, [fp, #-1]
   19b60:	b	1a0b4 <__assert_fail@plt+0x74fc>
   19b64:	movw	r0, #0
   19b68:	str	r0, [sp, #100]	; 0x64
   19b6c:	ldr	r0, [sp, #100]	; 0x64
   19b70:	cmp	r0, #11
   19b74:	bge	19b98 <__assert_fail@plt+0x6fe0>
   19b78:	ldr	r0, [sp, #100]	; 0x64
   19b7c:	add	r1, sp, #104	; 0x68
   19b80:	add	r0, r1, r0, lsl #3
   19b84:	bl	1ad2c <__assert_fail@plt+0x8174>
   19b88:	ldr	r0, [sp, #100]	; 0x64
   19b8c:	add	r0, r0, #1
   19b90:	str	r0, [sp, #100]	; 0x64
   19b94:	b	19b6c <__assert_fail@plt+0x6fb4>
   19b98:	ldr	r0, [fp, #-8]
   19b9c:	str	r0, [sp, #92]	; 0x5c
   19ba0:	movw	r0, #3
   19ba4:	str	r0, [sp, #72]	; 0x48
   19ba8:	ldr	r0, [sp, #92]	; 0x5c
   19bac:	ldr	r0, [r0]
   19bb0:	str	r0, [sp, #96]	; 0x60
   19bb4:	ldr	r0, [sp, #96]	; 0x60
   19bb8:	ldr	r0, [r0, #156]	; 0x9c
   19bbc:	movw	r1, #0
   19bc0:	cmp	r0, r1
   19bc4:	beq	19bf0 <__assert_fail@plt+0x7038>
   19bc8:	ldr	r0, [sp, #96]	; 0x60
   19bcc:	add	r0, r0, #156	; 0x9c
   19bd0:	str	r0, [sp, #92]	; 0x5c
   19bd4:	ldr	r0, [sp, #96]	; 0x60
   19bd8:	ldr	r0, [r0, #12]
   19bdc:	str	r0, [sp, #72]	; 0x48
   19be0:	ldr	r0, [sp, #96]	; 0x60
   19be4:	ldr	r0, [r0, #156]	; 0x9c
   19be8:	str	r0, [sp, #96]	; 0x60
   19bec:	b	19bb4 <__assert_fail@plt+0x6ffc>
   19bf0:	ldr	r0, [sp, #96]	; 0x60
   19bf4:	ldr	r0, [r0, #8]
   19bf8:	cmp	r0, #3
   19bfc:	beq	19c14 <__assert_fail@plt+0x705c>
   19c00:	ldr	r0, [sp, #96]	; 0x60
   19c04:	ldr	r1, [sp, #72]	; 0x48
   19c08:	ldr	r2, [sp, #92]	; 0x5c
   19c0c:	bl	1ad50 <__assert_fail@plt+0x8198>
   19c10:	str	r0, [sp, #52]	; 0x34
   19c14:	movw	r0, #136	; 0x88
   19c18:	movt	r0, #9
   19c1c:	ldr	r0, [r0, #44]	; 0x2c
   19c20:	and	r0, r0, #9
   19c24:	cmp	r0, #0
   19c28:	beq	19c6c <__assert_fail@plt+0x70b4>
   19c2c:	movw	r0, #63272	; 0xf728
   19c30:	movt	r0, #8
   19c34:	ldr	r0, [r0]
   19c38:	movw	r1, #36619	; 0x8f0b
   19c3c:	movt	r1, #7
   19c40:	bl	128c4 <fprintf@plt>
   19c44:	movw	r1, #63272	; 0xf728
   19c48:	movt	r1, #8
   19c4c:	ldr	r1, [r1]
   19c50:	ldr	lr, [fp, #-8]
   19c54:	ldr	lr, [lr]
   19c58:	str	r0, [sp, #48]	; 0x30
   19c5c:	mov	r0, r1
   19c60:	mov	r1, lr
   19c64:	movw	r2, #0
   19c68:	bl	19668 <__assert_fail@plt+0x6ab0>
   19c6c:	ldr	r0, [fp, #-8]
   19c70:	str	r0, [sp, #92]	; 0x5c
   19c74:	movw	r0, #0
   19c78:	str	r0, [sp, #68]	; 0x44
   19c7c:	ldr	r1, [sp, #92]	; 0x5c
   19c80:	ldr	r1, [r1]
   19c84:	cmp	r1, r0
   19c88:	beq	19cb0 <__assert_fail@plt+0x70f8>
   19c8c:	ldr	r0, [sp, #92]	; 0x5c
   19c90:	ldr	r0, [r0]
   19c94:	ldr	r0, [r0, #8]
   19c98:	cmp	r0, #3
   19c9c:	bne	19cb0 <__assert_fail@plt+0x70f8>
   19ca0:	ldr	r0, [sp, #92]	; 0x5c
   19ca4:	ldr	r0, [r0]
   19ca8:	ldr	r0, [r0, #12]
   19cac:	str	r0, [sp, #68]	; 0x44
   19cb0:	b	19cb4 <__assert_fail@plt+0x70fc>
   19cb4:	ldr	r0, [sp, #92]	; 0x5c
   19cb8:	ldr	r0, [r0]
   19cbc:	str	r0, [sp, #96]	; 0x60
   19cc0:	movw	r1, #0
   19cc4:	cmp	r0, r1
   19cc8:	beq	1a078 <__assert_fail@plt+0x74c0>
   19ccc:	ldr	r0, [sp, #96]	; 0x60
   19cd0:	ldr	r0, [r0, #8]
   19cd4:	cmp	r0, #3
   19cd8:	bne	19d08 <__assert_fail@plt+0x7150>
   19cdc:	ldr	r0, [sp, #96]	; 0x60
   19ce0:	ldr	r0, [r0, #12]
   19ce4:	ldr	r1, [sp, #68]	; 0x44
   19ce8:	cmp	r0, r1
   19cec:	beq	19d04 <__assert_fail@plt+0x714c>
   19cf0:	ldr	r0, [sp, #96]	; 0x60
   19cf4:	ldr	r1, [sp, #68]	; 0x44
   19cf8:	ldr	r2, [sp, #92]	; 0x5c
   19cfc:	bl	1ad50 <__assert_fail@plt+0x8198>
   19d00:	str	r0, [sp, #96]	; 0x60
   19d04:	b	19d08 <__assert_fail@plt+0x7150>
   19d08:	ldr	r0, [sp, #96]	; 0x60
   19d0c:	ldr	r0, [r0, #160]	; 0xa0
   19d10:	ldr	r0, [r0, #8]
   19d14:	str	r0, [sp, #80]	; 0x50
   19d18:	ldr	r0, [sp, #96]	; 0x60
   19d1c:	ldr	r0, [r0, #160]	; 0xa0
   19d20:	ldr	r0, [r0]
   19d24:	str	r0, [sp, #84]	; 0x54
   19d28:	ldr	r0, [sp, #80]	; 0x50
   19d2c:	cmp	r0, #2
   19d30:	str	r0, [sp, #44]	; 0x2c
   19d34:	bcc	19d5c <__assert_fail@plt+0x71a4>
   19d38:	b	19d3c <__assert_fail@plt+0x7184>
   19d3c:	ldr	r0, [sp, #44]	; 0x2c
   19d40:	cmp	r0, #2
   19d44:	beq	19fb0 <__assert_fail@plt+0x73f8>
   19d48:	b	19d4c <__assert_fail@plt+0x7194>
   19d4c:	ldr	r0, [sp, #44]	; 0x2c
   19d50:	cmp	r0, #3
   19d54:	beq	19fd4 <__assert_fail@plt+0x741c>
   19d58:	b	19ff4 <__assert_fail@plt+0x743c>
   19d5c:	ldr	r0, [sp, #68]	; 0x44
   19d60:	cmp	r0, #1
   19d64:	bne	19d6c <__assert_fail@plt+0x71b4>
   19d68:	b	1a018 <__assert_fail@plt+0x7460>
   19d6c:	ldr	r0, [sp, #96]	; 0x60
   19d70:	ldr	r0, [r0, #160]	; 0xa0
   19d74:	ldrb	r0, [r0, #16]
   19d78:	tst	r0, #1
   19d7c:	bne	19fac <__assert_fail@plt+0x73f4>
   19d80:	ldr	r0, [sp, #96]	; 0x60
   19d84:	ldr	r0, [r0, #160]	; 0xa0
   19d88:	bl	1ae94 <__assert_fail@plt+0x82dc>
   19d8c:	tst	r0, #1
   19d90:	beq	19e24 <__assert_fail@plt+0x726c>
   19d94:	movw	r0, #136	; 0x88
   19d98:	movt	r0, #9
   19d9c:	ldr	r0, [r0, #44]	; 0x2c
   19da0:	and	r0, r0, #8
   19da4:	cmp	r0, #0
   19da8:	beq	19e10 <__assert_fail@plt+0x7258>
   19dac:	movw	r0, #63272	; 0xf728
   19db0:	movt	r0, #8
   19db4:	ldr	r0, [r0]
   19db8:	movw	r1, #136	; 0x88
   19dbc:	movt	r1, #9
   19dc0:	ldrh	r2, [r1, #68]	; 0x44
   19dc4:	movw	r1, #36642	; 0x8f22
   19dc8:	movt	r1, #7
   19dcc:	bl	128c4 <fprintf@plt>
   19dd0:	movw	r1, #63272	; 0xf728
   19dd4:	movt	r1, #8
   19dd8:	ldr	r1, [r1]
   19ddc:	ldr	r2, [sp, #96]	; 0x60
   19de0:	ldr	r2, [r2, #160]	; 0xa0
   19de4:	str	r0, [sp, #40]	; 0x28
   19de8:	mov	r0, r1
   19dec:	mov	r1, r2
   19df0:	bl	1833c <__assert_fail@plt+0x5784>
   19df4:	movw	r0, #63272	; 0xf728
   19df8:	movt	r0, #8
   19dfc:	ldr	r0, [r0]
   19e00:	movw	r1, #36675	; 0x8f43
   19e04:	movt	r1, #7
   19e08:	bl	128c4 <fprintf@plt>
   19e0c:	str	r0, [sp, #36]	; 0x24
   19e10:	ldr	r1, [sp, #96]	; 0x60
   19e14:	ldr	r2, [sp, #92]	; 0x5c
   19e18:	sub	r0, fp, #24
   19e1c:	bl	1afd0 <__assert_fail@plt+0x8418>
   19e20:	b	19cb4 <__assert_fail@plt+0x70fc>
   19e24:	ldr	r0, [sp, #84]	; 0x54
   19e28:	movw	r1, #25664	; 0x6440
   19e2c:	movt	r1, #1
   19e30:	cmp	r0, r1
   19e34:	bne	19e4c <__assert_fail@plt+0x7294>
   19e38:	ldr	r1, [sp, #96]	; 0x60
   19e3c:	ldr	r2, [sp, #92]	; 0x5c
   19e40:	sub	r0, fp, #16
   19e44:	bl	1afd0 <__assert_fail@plt+0x8418>
   19e48:	b	19cb4 <__assert_fail@plt+0x70fc>
   19e4c:	movw	r0, #136	; 0x88
   19e50:	movt	r0, #9
   19e54:	ldrh	r0, [r0, #68]	; 0x44
   19e58:	cmp	r0, #1
   19e5c:	ble	19eac <__assert_fail@plt+0x72f4>
   19e60:	ldr	r0, [sp, #96]	; 0x60
   19e64:	ldr	r0, [r0, #160]	; 0xa0
   19e68:	ldr	r0, [r0, #24]
   19e6c:	movw	r1, #2
   19e70:	cmp	r1, r0
   19e74:	beq	19e90 <__assert_fail@plt+0x72d8>
   19e78:	ldr	r0, [sp, #96]	; 0x60
   19e7c:	ldr	r0, [r0, #160]	; 0xa0
   19e80:	ldr	r0, [r0, #24]
   19e84:	movw	r1, #1
   19e88:	cmp	r1, r0
   19e8c:	bne	19eac <__assert_fail@plt+0x72f4>
   19e90:	ldr	r0, [sp, #96]	; 0x60
   19e94:	ldr	r0, [r0, #160]	; 0xa0
   19e98:	ldrb	r0, [r0, #18]
   19e9c:	tst	r0, #1
   19ea0:	movw	r0, #1
   19ea4:	str	r0, [sp, #32]
   19ea8:	beq	19ec8 <__assert_fail@plt+0x7310>
   19eac:	movw	r0, #136	; 0x88
   19eb0:	movt	r0, #9
   19eb4:	ldrh	r0, [r0, #68]	; 0x44
   19eb8:	cmp	r0, #2
   19ebc:	movw	r0, #0
   19ec0:	movgt	r0, #1
   19ec4:	str	r0, [sp, #32]
   19ec8:	ldr	r0, [sp, #32]
   19ecc:	and	r0, r0, #1
   19ed0:	strb	r0, [sp, #67]	; 0x43
   19ed4:	ldrb	r0, [sp, #67]	; 0x43
   19ed8:	tst	r0, #1
   19edc:	beq	19fa8 <__assert_fail@plt+0x73f0>
   19ee0:	movw	r0, #136	; 0x88
   19ee4:	movt	r0, #9
   19ee8:	ldr	r0, [r0, #44]	; 0x2c
   19eec:	and	r0, r0, #8
   19ef0:	cmp	r0, #0
   19ef4:	beq	19f84 <__assert_fail@plt+0x73cc>
   19ef8:	movw	r0, #63272	; 0xf728
   19efc:	movt	r0, #8
   19f00:	ldr	r0, [r0]
   19f04:	movw	r1, #136	; 0x88
   19f08:	movt	r1, #9
   19f0c:	ldrh	r2, [r1, #68]	; 0x44
   19f10:	movw	r1, #36692	; 0x8f54
   19f14:	movt	r1, #7
   19f18:	bl	128c4 <fprintf@plt>
   19f1c:	movw	r1, #63272	; 0xf728
   19f20:	movt	r1, #8
   19f24:	ldr	r1, [r1]
   19f28:	ldr	r2, [sp, #96]	; 0x60
   19f2c:	ldr	r2, [r2, #160]	; 0xa0
   19f30:	str	r0, [sp, #28]
   19f34:	mov	r0, r1
   19f38:	mov	r1, r2
   19f3c:	bl	1833c <__assert_fail@plt+0x5784>
   19f40:	movw	r0, #63272	; 0xf728
   19f44:	movt	r0, #8
   19f48:	ldr	r0, [r0]
   19f4c:	ldr	r1, [sp, #96]	; 0x60
   19f50:	ldr	r1, [r1, #160]	; 0xa0
   19f54:	ldr	r1, [r1, #24]
   19f58:	str	r0, [sp, #24]
   19f5c:	mov	r0, r1
   19f60:	bl	1a704 <__assert_fail@plt+0x7b4c>
   19f64:	ldr	r1, [sp, #24]
   19f68:	str	r0, [sp, #20]
   19f6c:	mov	r0, r1
   19f70:	movw	r1, #36722	; 0x8f72
   19f74:	movt	r1, #7
   19f78:	ldr	r2, [sp, #20]
   19f7c:	bl	128c4 <fprintf@plt>
   19f80:	str	r0, [sp, #16]
   19f84:	ldr	r0, [sp, #96]	; 0x60
   19f88:	ldr	r0, [r0, #160]	; 0xa0
   19f8c:	ldr	r0, [r0, #24]
   19f90:	add	r1, sp, #104	; 0x68
   19f94:	add	r0, r1, r0, lsl #3
   19f98:	ldr	r1, [sp, #96]	; 0x60
   19f9c:	ldr	r2, [sp, #92]	; 0x5c
   19fa0:	bl	1afd0 <__assert_fail@plt+0x8418>
   19fa4:	b	19cb4 <__assert_fail@plt+0x70fc>
   19fa8:	b	19fac <__assert_fail@plt+0x73f4>
   19fac:	b	1a018 <__assert_fail@plt+0x7460>
   19fb0:	ldr	r0, [sp, #96]	; 0x60
   19fb4:	ldr	r0, [r0, #160]	; 0xa0
   19fb8:	add	r0, r0, #160	; 0xa0
   19fbc:	bl	19ae4 <__assert_fail@plt+0x6f2c>
   19fc0:	ldr	lr, [sp, #96]	; 0x60
   19fc4:	ldr	lr, [lr, #160]	; 0xa0
   19fc8:	and	r0, r0, #1
   19fcc:	strb	r0, [lr, #16]
   19fd0:	b	1a018 <__assert_fail@plt+0x7460>
   19fd4:	ldr	r0, [sp, #96]	; 0x60
   19fd8:	add	r0, r0, #160	; 0xa0
   19fdc:	bl	19ae4 <__assert_fail@plt+0x6f2c>
   19fe0:	ldr	lr, [sp, #96]	; 0x60
   19fe4:	ldr	lr, [lr, #160]	; 0xa0
   19fe8:	and	r0, r0, #1
   19fec:	strb	r0, [lr, #16]
   19ff0:	b	1a018 <__assert_fail@plt+0x7460>
   19ff4:	movw	r0, #36308	; 0x8dd4
   19ff8:	movt	r0, #7
   19ffc:	bl	12864 <gettext@plt>
   1a000:	movw	lr, #1
   1a004:	str	r0, [sp, #12]
   1a008:	mov	r0, lr
   1a00c:	movw	r1, #0
   1a010:	ldr	r2, [sp, #12]
   1a014:	bl	12780 <error@plt>
   1a018:	ldr	r0, [sp, #96]	; 0x60
   1a01c:	ldr	r0, [r0, #160]	; 0xa0
   1a020:	ldrb	r0, [r0, #16]
   1a024:	and	r0, r0, #1
   1a028:	cmp	r0, #1
   1a02c:	bne	1a068 <__assert_fail@plt+0x74b0>
   1a030:	add	r0, sp, #104	; 0x68
   1a034:	ldr	r1, [sp, #92]	; 0x5c
   1a038:	str	r1, [sp, #88]	; 0x58
   1a03c:	ldr	r1, [sp, #88]	; 0x58
   1a040:	movw	r2, #11
   1a044:	str	r1, [sp, #8]
   1a048:	mov	r1, r2
   1a04c:	sub	r2, fp, #24
   1a050:	sub	r3, fp, #16
   1a054:	ldr	ip, [sp, #8]
   1a058:	str	ip, [sp]
   1a05c:	bl	1b040 <__assert_fail@plt+0x8488>
   1a060:	movw	r0, #1
   1a064:	strb	r0, [sp, #79]	; 0x4f
   1a068:	ldr	r0, [sp, #96]	; 0x60
   1a06c:	add	r0, r0, #156	; 0x9c
   1a070:	str	r0, [sp, #92]	; 0x5c
   1a074:	b	19cb4 <__assert_fail@plt+0x70fc>
   1a078:	add	r0, sp, #104	; 0x68
   1a07c:	ldr	r1, [sp, #92]	; 0x5c
   1a080:	str	r1, [sp, #88]	; 0x58
   1a084:	ldr	r1, [sp, #88]	; 0x58
   1a088:	movw	r2, #11
   1a08c:	str	r1, [sp, #4]
   1a090:	mov	r1, r2
   1a094:	sub	r2, fp, #24
   1a098:	sub	r3, fp, #16
   1a09c:	ldr	ip, [sp, #4]
   1a0a0:	str	ip, [sp]
   1a0a4:	bl	1b040 <__assert_fail@plt+0x8488>
   1a0a8:	ldrb	r0, [sp, #79]	; 0x4f
   1a0ac:	and	r0, r0, #1
   1a0b0:	strb	r0, [fp, #-1]
   1a0b4:	ldrb	r0, [fp, #-1]
   1a0b8:	and	r0, r0, #1
   1a0bc:	mov	sp, fp
   1a0c0:	pop	{fp, pc}
   1a0c4:	push	{fp, lr}
   1a0c8:	mov	fp, sp
   1a0cc:	sub	sp, sp, #8
   1a0d0:	str	r0, [sp, #4]
   1a0d4:	and	r0, r1, #1
   1a0d8:	strb	r0, [sp, #3]
   1a0dc:	ldrb	r0, [sp, #3]
   1a0e0:	tst	r0, #1
   1a0e4:	beq	1a124 <__assert_fail@plt+0x756c>
   1a0e8:	ldr	r0, [sp, #4]
   1a0ec:	ldr	r0, [r0, #8]
   1a0f0:	movw	r1, #3
   1a0f4:	cmp	r1, r0
   1a0f8:	bne	1a100 <__assert_fail@plt+0x7548>
   1a0fc:	b	1a120 <__assert_fail@plt+0x7568>
   1a100:	movw	r0, #36798	; 0x8fbe
   1a104:	movt	r0, #7
   1a108:	movw	r1, #34650	; 0x875a
   1a10c:	movt	r1, #7
   1a110:	movw	r2, #1230	; 0x4ce
   1a114:	movw	r3, #36817	; 0x8fd1
   1a118:	movt	r3, #7
   1a11c:	bl	12bb8 <__assert_fail@plt>
   1a120:	b	1a124 <__assert_fail@plt+0x756c>
   1a124:	ldr	r0, [sp, #4]
   1a128:	ldr	r0, [r0, #156]	; 0x9c
   1a12c:	movw	r1, #0
   1a130:	cmp	r0, r1
   1a134:	beq	1a188 <__assert_fail@plt+0x75d0>
   1a138:	ldr	r0, [sp, #4]
   1a13c:	ldr	r0, [r0, #156]	; 0x9c
   1a140:	ldr	r0, [r0, #8]
   1a144:	movw	r1, #3
   1a148:	cmp	r1, r0
   1a14c:	bne	1a154 <__assert_fail@plt+0x759c>
   1a150:	b	1a174 <__assert_fail@plt+0x75bc>
   1a154:	movw	r0, #36869	; 0x9005
   1a158:	movt	r0, #7
   1a15c:	movw	r1, #34650	; 0x875a
   1a160:	movt	r1, #7
   1a164:	movw	r2, #1235	; 0x4d3
   1a168:	movw	r3, #36817	; 0x8fd1
   1a16c:	movt	r3, #7
   1a170:	bl	12bb8 <__assert_fail@plt>
   1a174:	ldr	r0, [sp, #4]
   1a178:	ldr	r0, [r0, #156]	; 0x9c
   1a17c:	movw	r1, #0
   1a180:	and	r1, r1, #1
   1a184:	bl	1a0c4 <__assert_fail@plt+0x750c>
   1a188:	ldr	r0, [sp, #4]
   1a18c:	ldr	r0, [r0, #160]	; 0xa0
   1a190:	movw	r1, #0
   1a194:	cmp	r0, r1
   1a198:	beq	1a1b0 <__assert_fail@plt+0x75f8>
   1a19c:	ldr	r0, [sp, #4]
   1a1a0:	ldr	r0, [r0, #160]	; 0xa0
   1a1a4:	movw	r1, #0
   1a1a8:	and	r1, r1, #1
   1a1ac:	bl	1a0c4 <__assert_fail@plt+0x750c>
   1a1b0:	mov	sp, fp
   1a1b4:	pop	{fp, pc}
   1a1b8:	push	{fp, lr}
   1a1bc:	mov	fp, sp
   1a1c0:	sub	sp, sp, #16
   1a1c4:	str	r0, [sp, #8]
   1a1c8:	ldr	r0, [sp, #8]
   1a1cc:	movw	r1, #0
   1a1d0:	cmp	r0, r1
   1a1d4:	beq	1a244 <__assert_fail@plt+0x768c>
   1a1d8:	b	1a1dc <__assert_fail@plt+0x7624>
   1a1dc:	movw	r0, #0
   1a1e0:	strb	r0, [sp, #7]
   1a1e4:	ldr	r0, [sp, #8]
   1a1e8:	bl	1b4b4 <__assert_fail@plt+0x88fc>
   1a1ec:	tst	r0, #1
   1a1f0:	bne	1a21c <__assert_fail@plt+0x7664>
   1a1f4:	ldr	r0, [sp, #8]
   1a1f8:	ldr	r0, [r0, #156]	; 0x9c
   1a1fc:	bl	1a1b8 <__assert_fail@plt+0x7600>
   1a200:	tst	r0, #1
   1a204:	bne	1a21c <__assert_fail@plt+0x7664>
   1a208:	ldr	r0, [sp, #8]
   1a20c:	ldr	r0, [r0, #160]	; 0xa0
   1a210:	bl	1a1b8 <__assert_fail@plt+0x7600>
   1a214:	tst	r0, #1
   1a218:	beq	1a224 <__assert_fail@plt+0x766c>
   1a21c:	movw	r0, #1
   1a220:	strb	r0, [sp, #7]
   1a224:	b	1a228 <__assert_fail@plt+0x7670>
   1a228:	ldrb	r0, [sp, #7]
   1a22c:	tst	r0, #1
   1a230:	bne	1a1dc <__assert_fail@plt+0x7624>
   1a234:	ldrb	r0, [sp, #7]
   1a238:	and	r0, r0, #1
   1a23c:	strb	r0, [fp, #-1]
   1a240:	b	1a250 <__assert_fail@plt+0x7698>
   1a244:	movw	r0, #0
   1a248:	and	r0, r0, #1
   1a24c:	strb	r0, [fp, #-1]
   1a250:	ldrb	r0, [fp, #-1]
   1a254:	and	r0, r0, #1
   1a258:	mov	sp, fp
   1a25c:	pop	{fp, pc}
   1a260:	push	{fp, lr}
   1a264:	mov	fp, sp
   1a268:	sub	sp, sp, #8
   1a26c:	str	r0, [sp, #4]
   1a270:	ldr	r0, [sp, #4]
   1a274:	bl	1a2a4 <__assert_fail@plt+0x76ec>
   1a278:	str	r0, [sp]
   1a27c:	ldr	r0, [sp]
   1a280:	movw	lr, #0
   1a284:	cmp	r0, lr
   1a288:	beq	1a298 <__assert_fail@plt+0x76e0>
   1a28c:	ldr	r0, [sp]
   1a290:	movw	r1, #0
   1a294:	str	r1, [r0, #36]	; 0x24
   1a298:	ldr	r0, [sp]
   1a29c:	mov	sp, fp
   1a2a0:	pop	{fp, pc}
   1a2a4:	push	{fp, lr}
   1a2a8:	mov	fp, sp
   1a2ac:	sub	sp, sp, #8
   1a2b0:	str	r0, [sp, #4]
   1a2b4:	ldr	r0, [sp, #4]
   1a2b8:	ldr	r0, [r0]
   1a2bc:	cmp	r0, #0
   1a2c0:	beq	1a2c8 <__assert_fail@plt+0x7710>
   1a2c4:	b	1a2e8 <__assert_fail@plt+0x7730>
   1a2c8:	movw	r0, #33833	; 0x8429
   1a2cc:	movt	r0, #7
   1a2d0:	movw	r1, #34650	; 0x875a
   1a2d4:	movt	r1, #7
   1a2d8:	movw	r2, #1485	; 0x5cd
   1a2dc:	movw	r3, #35257	; 0x89b9
   1a2e0:	movt	r3, #7
   1a2e4:	bl	12bb8 <__assert_fail@plt>
   1a2e8:	ldr	r0, [sp, #4]
   1a2ec:	ldr	r0, [r0]
   1a2f0:	cmp	r0, #2
   1a2f4:	beq	1a2fc <__assert_fail@plt+0x7744>
   1a2f8:	b	1a31c <__assert_fail@plt+0x7764>
   1a2fc:	movw	r0, #33869	; 0x844d
   1a300:	movt	r0, #7
   1a304:	movw	r1, #34650	; 0x875a
   1a308:	movt	r1, #7
   1a30c:	movw	r2, #1486	; 0x5ce
   1a310:	movw	r3, #35257	; 0x89b9
   1a314:	movt	r3, #7
   1a318:	bl	12bb8 <__assert_fail@plt>
   1a31c:	movw	r0, #176	; 0xb0
   1a320:	bl	4efd0 <__assert_fail@plt+0x3c418>
   1a324:	str	r0, [sp]
   1a328:	movw	r0, #63320	; 0xf758
   1a32c:	movt	r0, #8
   1a330:	ldr	r0, [r0]
   1a334:	movw	lr, #0
   1a338:	cmp	r0, lr
   1a33c:	bne	1a360 <__assert_fail@plt+0x77a8>
   1a340:	ldr	r0, [sp]
   1a344:	movw	r1, #63320	; 0xf758
   1a348:	movt	r1, #8
   1a34c:	str	r0, [r1]
   1a350:	movw	r1, #63324	; 0xf75c
   1a354:	movt	r1, #8
   1a358:	str	r0, [r1]
   1a35c:	b	1a37c <__assert_fail@plt+0x77c4>
   1a360:	ldr	r0, [sp]
   1a364:	movw	r1, #63324	; 0xf75c
   1a368:	movt	r1, #8
   1a36c:	ldr	r2, [r1]
   1a370:	str	r0, [r2, #152]	; 0x98
   1a374:	ldr	r0, [sp]
   1a378:	str	r0, [r1]
   1a37c:	ldr	r0, [sp, #4]
   1a380:	movw	r1, #63324	; 0xf75c
   1a384:	movt	r1, #8
   1a388:	ldr	r2, [r1]
   1a38c:	str	r0, [r2, #172]	; 0xac
   1a390:	ldr	r0, [r1]
   1a394:	movw	r2, #0
   1a398:	str	r2, [r0, #8]
   1a39c:	ldr	r0, [r1]
   1a3a0:	str	r2, [r0, #12]
   1a3a4:	ldr	r0, [r1]
   1a3a8:	movw	r2, #1
   1a3ac:	strb	r2, [r0, #18]
   1a3b0:	ldr	r0, [r1]
   1a3b4:	strb	r2, [r0, #19]
   1a3b8:	ldr	r0, [r1]
   1a3bc:	movw	r2, #10
   1a3c0:	str	r2, [r0, #24]
   1a3c4:	ldr	r0, [r1]
   1a3c8:	movw	r2, #35317	; 0x89f5
   1a3cc:	movt	r2, #7
   1a3d0:	str	r2, [r0, #36]	; 0x24
   1a3d4:	movw	r0, #136	; 0x88
   1a3d8:	movt	r0, #9
   1a3dc:	ldrb	r0, [r0, #15]
   1a3e0:	ldr	r2, [r1]
   1a3e4:	and	r0, r0, #1
   1a3e8:	strb	r0, [r2, #32]
   1a3ec:	ldr	r0, [r1]
   1a3f0:	vmov.f32	s0, #112	; 0x3f800000  1.0
   1a3f4:	vstr	s0, [r0, #28]
   1a3f8:	ldr	r0, [r1]
   1a3fc:	bl	1a414 <__assert_fail@plt+0x785c>
   1a400:	movw	r0, #63324	; 0xf75c
   1a404:	movt	r0, #8
   1a408:	ldr	r0, [r0]
   1a40c:	mov	sp, fp
   1a410:	pop	{fp, pc}
   1a414:	sub	sp, sp, #8
   1a418:	str	r0, [sp, #4]
   1a41c:	ldr	r0, [sp, #4]
   1a420:	add	r0, r0, #164	; 0xa4
   1a424:	str	r0, [sp]
   1a428:	ldr	r0, [sp]
   1a42c:	movw	r1, #0
   1a430:	str	r1, [r0, #4]
   1a434:	ldr	r0, [sp]
   1a438:	str	r1, [r0]
   1a43c:	add	sp, sp, #8
   1a440:	bx	lr
   1a444:	push	{fp, lr}
   1a448:	mov	fp, sp
   1a44c:	sub	sp, sp, #24
   1a450:	str	r0, [fp, #-4]
   1a454:	str	r1, [fp, #-8]
   1a458:	movw	r0, #63328	; 0xf760
   1a45c:	movt	r0, #8
   1a460:	ldr	r0, [r0]
   1a464:	movw	r1, #0
   1a468:	cmp	r1, r0
   1a46c:	bne	1a488 <__assert_fail@plt+0x78d0>
   1a470:	movw	r0, #35348	; 0x8a14
   1a474:	movt	r0, #7
   1a478:	bl	21cf4 <__assert_fail@plt+0xf13c>
   1a47c:	movw	lr, #63328	; 0xf760
   1a480:	movt	lr, #8
   1a484:	str	r0, [lr]
   1a488:	movw	r0, #63328	; 0xf760
   1a48c:	movt	r0, #8
   1a490:	ldr	r0, [r0]
   1a494:	movw	r1, #0
   1a498:	cmp	r0, r1
   1a49c:	beq	1a4a4 <__assert_fail@plt+0x78ec>
   1a4a0:	b	1a4c4 <__assert_fail@plt+0x790c>
   1a4a4:	movw	r0, #35352	; 0x8a18
   1a4a8:	movt	r0, #7
   1a4ac:	movw	r1, #34650	; 0x875a
   1a4b0:	movt	r1, #7
   1a4b4:	movw	r2, #1528	; 0x5f8
   1a4b8:	movw	r3, #35370	; 0x8a2a
   1a4bc:	movt	r3, #7
   1a4c0:	bl	12bb8 <__assert_fail@plt>
   1a4c4:	movw	r0, #63324	; 0xf75c
   1a4c8:	movt	r0, #8
   1a4cc:	ldr	r0, [r0]
   1a4d0:	movw	r1, #0
   1a4d4:	cmp	r0, r1
   1a4d8:	beq	1a5d4 <__assert_fail@plt+0x7a1c>
   1a4dc:	movw	r0, #63324	; 0xf75c
   1a4e0:	movt	r0, #8
   1a4e4:	ldr	r0, [r0]
   1a4e8:	ldr	r0, [r0, #8]
   1a4ec:	cmp	r0, #0
   1a4f0:	str	r0, [sp, #8]
   1a4f4:	beq	1a51c <__assert_fail@plt+0x7964>
   1a4f8:	b	1a4fc <__assert_fail@plt+0x7944>
   1a4fc:	ldr	r0, [sp, #8]
   1a500:	cmp	r0, #1
   1a504:	beq	1a540 <__assert_fail@plt+0x7988>
   1a508:	b	1a50c <__assert_fail@plt+0x7954>
   1a50c:	ldr	r0, [sp, #8]
   1a510:	cmp	r0, #5
   1a514:	beq	1a540 <__assert_fail@plt+0x7988>
   1a518:	b	1a5cc <__assert_fail@plt+0x7a14>
   1a51c:	movw	r0, #35451	; 0x8a7b
   1a520:	movt	r0, #7
   1a524:	bl	12864 <gettext@plt>
   1a528:	movw	lr, #1
   1a52c:	str	r0, [sp, #4]
   1a530:	mov	r0, lr
   1a534:	movw	r1, #0
   1a538:	ldr	r2, [sp, #4]
   1a53c:	bl	12780 <error@plt>
   1a540:	movw	r0, #63328	; 0xf760
   1a544:	movt	r0, #8
   1a548:	ldr	r0, [r0]
   1a54c:	bl	1a260 <__assert_fail@plt+0x76a8>
   1a550:	str	r0, [sp, #12]
   1a554:	ldr	r0, [sp, #12]
   1a558:	movw	lr, #18428	; 0x47fc
   1a55c:	movt	lr, #1
   1a560:	str	lr, [r0]
   1a564:	ldr	r0, [sp, #12]
   1a568:	movw	lr, #35493	; 0x8aa5
   1a56c:	movt	lr, #7
   1a570:	str	lr, [r0, #4]
   1a574:	ldr	r0, [sp, #12]
   1a578:	movw	lr, #3
   1a57c:	str	lr, [r0, #8]
   1a580:	ldr	r0, [sp, #12]
   1a584:	str	lr, [r0, #12]
   1a588:	ldr	r0, [sp, #12]
   1a58c:	movw	lr, #0
   1a590:	strb	lr, [r0, #18]
   1a594:	ldr	r0, [sp, #12]
   1a598:	strb	lr, [r0, #19]
   1a59c:	ldr	r0, [sp, #12]
   1a5a0:	strb	lr, [r0, #20]
   1a5a4:	ldr	r0, [sp, #12]
   1a5a8:	movw	r1, #0
   1a5ac:	str	r1, [r0, #36]	; 0x24
   1a5b0:	ldr	r0, [sp, #12]
   1a5b4:	str	r1, [r0, #40]	; 0x28
   1a5b8:	ldr	r0, [sp, #12]
   1a5bc:	strb	lr, [r0, #16]
   1a5c0:	ldr	r0, [sp, #12]
   1a5c4:	strb	lr, [r0, #17]
   1a5c8:	b	1a5d0 <__assert_fail@plt+0x7a18>
   1a5cc:	b	1a5d0 <__assert_fail@plt+0x7a18>
   1a5d0:	b	1a5d4 <__assert_fail@plt+0x7a1c>
   1a5d4:	ldr	r0, [fp, #-4]
   1a5d8:	bl	1a2a4 <__assert_fail@plt+0x76ec>
   1a5dc:	str	r0, [sp, #12]
   1a5e0:	ldr	r0, [fp, #-8]
   1a5e4:	ldr	lr, [sp, #12]
   1a5e8:	str	r0, [lr, #36]	; 0x24
   1a5ec:	ldr	r0, [fp, #-4]
   1a5f0:	ldr	lr, [sp, #12]
   1a5f4:	str	r0, [lr, #172]	; 0xac
   1a5f8:	ldr	r0, [sp, #12]
   1a5fc:	mov	sp, fp
   1a600:	pop	{fp, pc}
   1a604:	sub	sp, sp, #8
   1a608:	strh	r0, [sp, #6]
   1a60c:	movw	r0, #0
   1a610:	str	r0, [sp]
   1a614:	ldr	r0, [sp]
   1a618:	movw	r1, #62688	; 0xf4e0
   1a61c:	movt	r1, #8
   1a620:	add	r0, r1, r0, lsl #3
   1a624:	ldrsh	r0, [r0]
   1a628:	cmn	r0, #1
   1a62c:	beq	1a668 <__assert_fail@plt+0x7ab0>
   1a630:	ldr	r0, [sp]
   1a634:	movw	r1, #62688	; 0xf4e0
   1a638:	movt	r1, #8
   1a63c:	add	r0, r1, r0, lsl #3
   1a640:	ldrsh	r0, [r0]
   1a644:	ldrsh	r1, [sp, #6]
   1a648:	cmp	r0, r1
   1a64c:	bne	1a654 <__assert_fail@plt+0x7a9c>
   1a650:	b	1a668 <__assert_fail@plt+0x7ab0>
   1a654:	b	1a658 <__assert_fail@plt+0x7aa0>
   1a658:	ldr	r0, [sp]
   1a65c:	add	r0, r0, #1
   1a660:	str	r0, [sp]
   1a664:	b	1a614 <__assert_fail@plt+0x7a5c>
   1a668:	ldr	r0, [sp]
   1a66c:	movw	r1, #62688	; 0xf4e0
   1a670:	movt	r1, #8
   1a674:	add	r0, r1, r0, lsl #3
   1a678:	ldr	r0, [r0, #4]
   1a67c:	add	sp, sp, #8
   1a680:	bx	lr
   1a684:	sub	sp, sp, #8
   1a688:	strh	r0, [sp, #6]
   1a68c:	movw	r0, #0
   1a690:	str	r0, [sp]
   1a694:	ldr	r0, [sp]
   1a698:	movw	r1, #62744	; 0xf518
   1a69c:	movt	r1, #8
   1a6a0:	add	r0, r1, r0, lsl #3
   1a6a4:	ldrsh	r0, [r0]
   1a6a8:	cmn	r0, #1
   1a6ac:	beq	1a6e8 <__assert_fail@plt+0x7b30>
   1a6b0:	ldr	r0, [sp]
   1a6b4:	movw	r1, #62744	; 0xf518
   1a6b8:	movt	r1, #8
   1a6bc:	add	r0, r1, r0, lsl #3
   1a6c0:	ldrsh	r0, [r0]
   1a6c4:	ldrsh	r1, [sp, #6]
   1a6c8:	cmp	r0, r1
   1a6cc:	bne	1a6d4 <__assert_fail@plt+0x7b1c>
   1a6d0:	b	1a6e8 <__assert_fail@plt+0x7b30>
   1a6d4:	b	1a6d8 <__assert_fail@plt+0x7b20>
   1a6d8:	ldr	r0, [sp]
   1a6dc:	add	r0, r0, #1
   1a6e0:	str	r0, [sp]
   1a6e4:	b	1a694 <__assert_fail@plt+0x7adc>
   1a6e8:	ldr	r0, [sp]
   1a6ec:	movw	r1, #62744	; 0xf518
   1a6f0:	movt	r1, #8
   1a6f4:	add	r0, r1, r0, lsl #3
   1a6f8:	ldr	r0, [r0, #4]
   1a6fc:	add	sp, sp, #8
   1a700:	bx	lr
   1a704:	sub	sp, sp, #16
   1a708:	str	r0, [sp, #8]
   1a70c:	movw	r0, #11
   1a710:	str	r0, [sp]
   1a714:	movw	r0, #0
   1a718:	str	r0, [sp, #4]
   1a71c:	ldr	r0, [sp, #4]
   1a720:	ldr	r1, [sp]
   1a724:	cmp	r0, r1
   1a728:	bcs	1a77c <__assert_fail@plt+0x7bc4>
   1a72c:	ldr	r0, [sp, #4]
   1a730:	movw	r1, #62128	; 0xf2b0
   1a734:	movt	r1, #8
   1a738:	add	r0, r1, r0, lsl #3
   1a73c:	ldr	r0, [r0]
   1a740:	ldr	r1, [sp, #8]
   1a744:	cmp	r0, r1
   1a748:	bne	1a768 <__assert_fail@plt+0x7bb0>
   1a74c:	ldr	r0, [sp, #4]
   1a750:	movw	r1, #62128	; 0xf2b0
   1a754:	movt	r1, #8
   1a758:	add	r0, r1, r0, lsl #3
   1a75c:	ldr	r0, [r0, #4]
   1a760:	str	r0, [sp, #12]
   1a764:	b	1a788 <__assert_fail@plt+0x7bd0>
   1a768:	b	1a76c <__assert_fail@plt+0x7bb4>
   1a76c:	ldr	r0, [sp, #4]
   1a770:	add	r0, r0, #1
   1a774:	str	r0, [sp, #4]
   1a778:	b	1a71c <__assert_fail@plt+0x7b64>
   1a77c:	movw	r0, #37292	; 0x91ac
   1a780:	movt	r0, #7
   1a784:	str	r0, [sp, #12]
   1a788:	ldr	r0, [sp, #12]
   1a78c:	add	sp, sp, #16
   1a790:	bx	lr
   1a794:	push	{fp, lr}
   1a798:	mov	fp, sp
   1a79c:	sub	sp, sp, #40	; 0x28
   1a7a0:	str	r0, [fp, #-8]
   1a7a4:	str	r1, [fp, #-12]
   1a7a8:	strh	r2, [fp, #-14]
   1a7ac:	ldr	r0, [fp, #-8]
   1a7b0:	ldr	r0, [r0]
   1a7b4:	movw	r1, #0
   1a7b8:	cmp	r0, r1
   1a7bc:	beq	1a7d4 <__assert_fail@plt+0x7c1c>
   1a7c0:	ldr	r0, [fp, #-8]
   1a7c4:	ldr	r0, [r0]
   1a7c8:	ldr	r0, [r0, #8]
   1a7cc:	cmp	r0, #5
   1a7d0:	bne	1a7e0 <__assert_fail@plt+0x7c28>
   1a7d4:	movw	r0, #0
   1a7d8:	str	r0, [fp, #-4]
   1a7dc:	b	1a93c <__assert_fail@plt+0x7d84>
   1a7e0:	ldr	r0, [fp, #-12]
   1a7e4:	str	r0, [sp, #20]
   1a7e8:	ldr	r0, [fp, #-8]
   1a7ec:	ldr	r0, [r0]
   1a7f0:	movw	r1, #0
   1a7f4:	cmp	r0, r1
   1a7f8:	movw	r0, #0
   1a7fc:	str	r0, [sp, #12]
   1a800:	beq	1a824 <__assert_fail@plt+0x7c6c>
   1a804:	ldr	r0, [fp, #-8]
   1a808:	ldr	r0, [r0]
   1a80c:	ldr	r0, [r0, #12]
   1a810:	ldrsh	r1, [fp, #-14]
   1a814:	cmp	r0, r1
   1a818:	movw	r0, #0
   1a81c:	movgt	r0, #1
   1a820:	str	r0, [sp, #12]
   1a824:	ldr	r0, [sp, #12]
   1a828:	tst	r0, #1
   1a82c:	beq	1a934 <__assert_fail@plt+0x7d7c>
   1a830:	ldr	r0, [fp, #-8]
   1a834:	ldr	r0, [r0]
   1a838:	ldr	r0, [r0, #8]
   1a83c:	cmp	r0, #5
   1a840:	str	r0, [sp, #8]
   1a844:	bhi	1a900 <__assert_fail@plt+0x7d48>
   1a848:	add	r0, pc, #8
   1a84c:	ldr	r1, [sp, #8]
   1a850:	ldr	r0, [r0, r1, lsl #2]
   1a854:	mov	pc, r0
   1a858:	andeq	sl, r1, r0, ror r8
   1a85c:	andeq	sl, r1, r0, ror r8
   1a860:	andeq	sl, r1, r0, ror r8
   1a864:	muleq	r1, r4, r8
   1a868:	andeq	sl, r1, r0, ror r8
   1a86c:	strdeq	sl, [r1], -r4
   1a870:	movw	r0, #35769	; 0x8bb9
   1a874:	movt	r0, #7
   1a878:	bl	12864 <gettext@plt>
   1a87c:	movw	lr, #1
   1a880:	str	r0, [sp, #4]
   1a884:	mov	r0, lr
   1a888:	movw	r1, #0
   1a88c:	ldr	r2, [sp, #4]
   1a890:	bl	12780 <error@plt>
   1a894:	ldr	r0, [fp, #-8]
   1a898:	ldr	r0, [r0]
   1a89c:	str	r0, [sp, #16]
   1a8a0:	ldr	r0, [sp, #20]
   1a8a4:	ldr	r1, [fp, #-8]
   1a8a8:	ldr	r1, [r1]
   1a8ac:	str	r0, [r1, #156]	; 0x9c
   1a8b0:	ldr	r0, [fp, #-8]
   1a8b4:	ldr	r0, [r0]
   1a8b8:	str	r0, [sp, #20]
   1a8bc:	ldr	r0, [fp, #-8]
   1a8c0:	ldr	r0, [r0]
   1a8c4:	ldr	r0, [r0, #152]	; 0x98
   1a8c8:	ldr	r1, [fp, #-8]
   1a8cc:	str	r0, [r1]
   1a8d0:	ldr	r0, [fp, #-8]
   1a8d4:	ldr	r1, [sp, #20]
   1a8d8:	ldr	r1, [r1, #12]
   1a8dc:	ldr	r2, [sp, #16]
   1a8e0:	sxth	r1, r1
   1a8e4:	bl	191e4 <__assert_fail@plt+0x662c>
   1a8e8:	ldr	r1, [sp, #20]
   1a8ec:	str	r0, [r1, #160]	; 0xa0
   1a8f0:	b	1a930 <__assert_fail@plt+0x7d78>
   1a8f4:	ldr	r0, [sp, #20]
   1a8f8:	str	r0, [fp, #-4]
   1a8fc:	b	1a93c <__assert_fail@plt+0x7d84>
   1a900:	movw	r0, #36341	; 0x8df5
   1a904:	movt	r0, #7
   1a908:	bl	12864 <gettext@plt>
   1a90c:	ldr	lr, [fp, #-8]
   1a910:	ldr	lr, [lr]
   1a914:	ldr	r3, [lr, #8]
   1a918:	movw	lr, #1
   1a91c:	str	r0, [sp]
   1a920:	mov	r0, lr
   1a924:	movw	r1, #0
   1a928:	ldr	r2, [sp]
   1a92c:	bl	12780 <error@plt>
   1a930:	b	1a7e8 <__assert_fail@plt+0x7c30>
   1a934:	ldr	r0, [sp, #20]
   1a938:	str	r0, [fp, #-4]
   1a93c:	ldr	r0, [fp, #-4]
   1a940:	mov	sp, fp
   1a944:	pop	{fp, pc}
   1a948:	push	{fp, lr}
   1a94c:	mov	fp, sp
   1a950:	sub	sp, sp, #40	; 0x28
   1a954:	str	r0, [fp, #-8]
   1a958:	movw	r0, #0
   1a95c:	str	r0, [fp, #-12]
   1a960:	movw	r0, #10
   1a964:	str	r0, [fp, #-16]
   1a968:	ldr	r0, [fp, #-8]
   1a96c:	ldrb	r0, [r0, #18]
   1a970:	tst	r0, #1
   1a974:	beq	1a984 <__assert_fail@plt+0x7dcc>
   1a978:	movw	r0, #3
   1a97c:	str	r0, [fp, #-12]
   1a980:	b	1a9cc <__assert_fail@plt+0x7e14>
   1a984:	ldr	r0, [fp, #-8]
   1a988:	ldrb	r0, [r0, #20]
   1a98c:	tst	r0, #1
   1a990:	beq	1a9a0 <__assert_fail@plt+0x7de8>
   1a994:	movw	r0, #1
   1a998:	str	r0, [fp, #-12]
   1a99c:	b	1a9c8 <__assert_fail@plt+0x7e10>
   1a9a0:	ldr	r0, [fp, #-8]
   1a9a4:	ldrb	r0, [r0, #19]
   1a9a8:	tst	r0, #1
   1a9ac:	beq	1a9bc <__assert_fail@plt+0x7e04>
   1a9b0:	movw	r0, #2
   1a9b4:	str	r0, [fp, #-12]
   1a9b8:	b	1a9c4 <__assert_fail@plt+0x7e0c>
   1a9bc:	movw	r0, #0
   1a9c0:	str	r0, [fp, #-12]
   1a9c4:	b	1a9c8 <__assert_fail@plt+0x7e10>
   1a9c8:	b	1a9cc <__assert_fail@plt+0x7e14>
   1a9cc:	ldr	r0, [fp, #-8]
   1a9d0:	ldr	r0, [r0]
   1a9d4:	movw	r1, #20708	; 0x50e4
   1a9d8:	movt	r1, #1
   1a9dc:	cmp	r0, r1
   1a9e0:	beq	1a9fc <__assert_fail@plt+0x7e44>
   1a9e4:	ldr	r0, [fp, #-8]
   1a9e8:	ldr	r0, [r0]
   1a9ec:	movw	r1, #20760	; 0x5118
   1a9f0:	movt	r1, #1
   1a9f4:	cmp	r0, r1
   1a9f8:	bne	1aa24 <__assert_fail@plt+0x7e6c>
   1a9fc:	ldr	r0, [fp, #-8]
   1aa00:	ldrb	r0, [r0, #40]	; 0x28
   1aa04:	tst	r0, #1
   1aa08:	beq	1aa18 <__assert_fail@plt+0x7e60>
   1aa0c:	movw	r0, #7
   1aa10:	str	r0, [fp, #-16]
   1aa14:	b	1aa20 <__assert_fail@plt+0x7e68>
   1aa18:	movw	r0, #8
   1aa1c:	str	r0, [fp, #-16]
   1aa20:	b	1ab60 <__assert_fail@plt+0x7fa8>
   1aa24:	ldr	r0, [fp, #-8]
   1aa28:	ldr	r0, [r0]
   1aa2c:	movw	r1, #60700	; 0xed1c
   1aa30:	movt	r1, #1
   1aa34:	cmp	r0, r1
   1aa38:	bne	1aa4c <__assert_fail@plt+0x7e94>
   1aa3c:	ldr	r0, [fp, #-8]
   1aa40:	ldr	r0, [r0, #24]
   1aa44:	str	r0, [fp, #-16]
   1aa48:	b	1ab5c <__assert_fail@plt+0x7fa4>
   1aa4c:	movw	r0, #63332	; 0xf764
   1aa50:	movt	r0, #8
   1aa54:	ldr	r0, [r0]
   1aa58:	cmp	r0, #0
   1aa5c:	bne	1aac4 <__assert_fail@plt+0x7f0c>
   1aa60:	movw	r0, #62216	; 0xf308
   1aa64:	movt	r0, #8
   1aa68:	movw	r1, #59	; 0x3b
   1aa6c:	movw	r2, #8
   1aa70:	movw	r3, #43920	; 0xab90
   1aa74:	movt	r3, #1
   1aa78:	bl	12abc <qsort@plt>
   1aa7c:	movw	r0, #62216	; 0xf308
   1aa80:	movt	r0, #8
   1aa84:	movw	r1, #59	; 0x3b
   1aa88:	movw	r2, #8
   1aa8c:	movw	r3, #43920	; 0xab90
   1aa90:	movt	r3, #1
   1aa94:	bl	1abe4 <__assert_fail@plt+0x802c>
   1aa98:	tst	r0, #1
   1aa9c:	bne	1aab4 <__assert_fail@plt+0x7efc>
   1aaa0:	movw	r0, #1
   1aaa4:	movw	r1, #0
   1aaa8:	movw	r2, #36379	; 0x8e1b
   1aaac:	movt	r2, #7
   1aab0:	bl	12780 <error@plt>
   1aab4:	movw	r0, #63332	; 0xf764
   1aab8:	movt	r0, #8
   1aabc:	movw	r1, #1
   1aac0:	str	r1, [r0]
   1aac4:	movw	r0, #62216	; 0xf308
   1aac8:	movt	r0, #8
   1aacc:	ldr	r1, [fp, #-8]
   1aad0:	ldr	r1, [r1]
   1aad4:	str	r1, [sp, #16]
   1aad8:	add	r1, sp, #16
   1aadc:	str	r0, [sp, #8]
   1aae0:	mov	r0, r1
   1aae4:	ldr	r1, [sp, #8]
   1aae8:	movw	r2, #59	; 0x3b
   1aaec:	movw	r3, #8
   1aaf0:	movw	ip, #43920	; 0xab90
   1aaf4:	movt	ip, #1
   1aaf8:	str	ip, [sp]
   1aafc:	bl	1290c <bsearch@plt>
   1ab00:	str	r0, [sp, #12]
   1ab04:	ldr	r0, [sp, #12]
   1ab08:	movw	r1, #0
   1ab0c:	cmp	r0, r1
   1ab10:	beq	1ab24 <__assert_fail@plt+0x7f6c>
   1ab14:	ldr	r0, [sp, #12]
   1ab18:	ldr	r0, [r0, #4]
   1ab1c:	str	r0, [fp, #-16]
   1ab20:	b	1ab58 <__assert_fail@plt+0x7fa0>
   1ab24:	movw	r0, #36415	; 0x8e3f
   1ab28:	movt	r0, #7
   1ab2c:	bl	12864 <gettext@plt>
   1ab30:	ldr	lr, [fp, #-8]
   1ab34:	ldr	r3, [lr, #4]
   1ab38:	movw	lr, #0
   1ab3c:	str	r0, [sp, #4]
   1ab40:	mov	r0, lr
   1ab44:	mov	r1, lr
   1ab48:	ldr	r2, [sp, #4]
   1ab4c:	bl	12780 <error@plt>
   1ab50:	movw	r0, #10
   1ab54:	str	r0, [fp, #-16]
   1ab58:	b	1ab5c <__assert_fail@plt+0x7fa4>
   1ab5c:	b	1ab60 <__assert_fail@plt+0x7fa8>
   1ab60:	ldr	r0, [fp, #-16]
   1ab64:	ldr	r1, [fp, #-12]
   1ab68:	cmp	r0, r1
   1ab6c:	bls	1ab7c <__assert_fail@plt+0x7fc4>
   1ab70:	ldr	r0, [fp, #-16]
   1ab74:	str	r0, [fp, #-4]
   1ab78:	b	1ab84 <__assert_fail@plt+0x7fcc>
   1ab7c:	ldr	r0, [fp, #-12]
   1ab80:	str	r0, [fp, #-4]
   1ab84:	ldr	r0, [fp, #-4]
   1ab88:	mov	sp, fp
   1ab8c:	pop	{fp, pc}
   1ab90:	push	{fp, lr}
   1ab94:	mov	fp, sp
   1ab98:	sub	sp, sp, #24
   1ab9c:	str	r0, [fp, #-4]
   1aba0:	str	r1, [fp, #-8]
   1aba4:	ldr	r0, [fp, #-4]
   1aba8:	str	r0, [sp, #12]
   1abac:	ldr	r0, [fp, #-8]
   1abb0:	str	r0, [sp, #8]
   1abb4:	ldr	r0, [sp, #12]
   1abb8:	ldr	r0, [r0]
   1abbc:	str	r0, [sp, #4]
   1abc0:	ldr	r0, [sp, #8]
   1abc4:	ldr	r0, [r0]
   1abc8:	str	r0, [sp]
   1abcc:	add	r0, sp, #4
   1abd0:	mov	r1, sp
   1abd4:	mov	r2, #4
   1abd8:	bl	12624 <memcmp@plt>
   1abdc:	mov	sp, fp
   1abe0:	pop	{fp, pc}
   1abe4:	push	{fp, lr}
   1abe8:	mov	fp, sp
   1abec:	sub	sp, sp, #40	; 0x28
   1abf0:	str	r0, [fp, #-8]
   1abf4:	str	r1, [fp, #-12]
   1abf8:	str	r2, [fp, #-16]
   1abfc:	str	r3, [sp, #20]
   1ac00:	ldr	r0, [fp, #-8]
   1ac04:	str	r0, [sp, #16]
   1ac08:	movw	r0, #1
   1ac0c:	str	r0, [sp, #12]
   1ac10:	ldr	r0, [sp, #12]
   1ac14:	ldr	r1, [fp, #-12]
   1ac18:	cmp	r0, r1
   1ac1c:	bcs	1ad10 <__assert_fail@plt+0x8158>
   1ac20:	ldr	r0, [sp, #20]
   1ac24:	ldr	r1, [sp, #16]
   1ac28:	ldr	r2, [sp, #12]
   1ac2c:	ldr	r3, [fp, #-16]
   1ac30:	mul	r2, r2, r3
   1ac34:	add	r1, r1, r2
   1ac38:	ldr	r2, [sp, #16]
   1ac3c:	ldr	r3, [sp, #12]
   1ac40:	sub	r3, r3, #1
   1ac44:	ldr	ip, [fp, #-16]
   1ac48:	mul	r3, r3, ip
   1ac4c:	add	r2, r2, r3
   1ac50:	str	r0, [sp, #4]
   1ac54:	mov	r0, r1
   1ac58:	mov	r1, r2
   1ac5c:	ldr	r2, [sp, #4]
   1ac60:	blx	r2
   1ac64:	str	r0, [sp, #8]
   1ac68:	ldr	r0, [sp, #8]
   1ac6c:	cmp	r0, #0
   1ac70:	bge	1ac84 <__assert_fail@plt+0x80cc>
   1ac74:	movw	r0, #0
   1ac78:	and	r0, r0, #1
   1ac7c:	strb	r0, [fp, #-1]
   1ac80:	b	1ad1c <__assert_fail@plt+0x8164>
   1ac84:	ldr	r0, [sp, #20]
   1ac88:	ldr	r1, [sp, #16]
   1ac8c:	ldr	r2, [sp, #12]
   1ac90:	sub	r2, r2, #1
   1ac94:	ldr	r3, [fp, #-16]
   1ac98:	mul	r2, r2, r3
   1ac9c:	add	r1, r1, r2
   1aca0:	ldr	r2, [sp, #16]
   1aca4:	ldr	r3, [sp, #12]
   1aca8:	ldr	ip, [fp, #-16]
   1acac:	mul	r3, r3, ip
   1acb0:	add	r2, r2, r3
   1acb4:	str	r0, [sp]
   1acb8:	mov	r0, r1
   1acbc:	mov	r1, r2
   1acc0:	ldr	r2, [sp]
   1acc4:	blx	r2
   1acc8:	str	r0, [sp, #8]
   1accc:	ldr	r0, [sp, #8]
   1acd0:	cmp	r0, #0
   1acd4:	bgt	1acdc <__assert_fail@plt+0x8124>
   1acd8:	b	1acfc <__assert_fail@plt+0x8144>
   1acdc:	movw	r0, #36527	; 0x8eaf
   1ace0:	movt	r0, #7
   1ace4:	movw	r1, #34650	; 0x875a
   1ace8:	movt	r1, #7
   1acec:	movw	r2, #1013	; 0x3f5
   1acf0:	movw	r3, #36539	; 0x8ebb
   1acf4:	movt	r3, #7
   1acf8:	bl	12bb8 <__assert_fail@plt>
   1acfc:	b	1ad00 <__assert_fail@plt+0x8148>
   1ad00:	ldr	r0, [sp, #12]
   1ad04:	add	r0, r0, #1
   1ad08:	str	r0, [sp, #12]
   1ad0c:	b	1ac10 <__assert_fail@plt+0x8058>
   1ad10:	movw	r0, #1
   1ad14:	and	r0, r0, #1
   1ad18:	strb	r0, [fp, #-1]
   1ad1c:	ldrb	r0, [fp, #-1]
   1ad20:	and	r0, r0, #1
   1ad24:	mov	sp, fp
   1ad28:	pop	{fp, pc}
   1ad2c:	sub	sp, sp, #4
   1ad30:	str	r0, [sp]
   1ad34:	ldr	r0, [sp]
   1ad38:	movw	r1, #0
   1ad3c:	str	r1, [r0, #4]
   1ad40:	ldr	r0, [sp]
   1ad44:	str	r1, [r0]
   1ad48:	add	sp, sp, #4
   1ad4c:	bx	lr
   1ad50:	push	{fp, lr}
   1ad54:	mov	fp, sp
   1ad58:	sub	sp, sp, #24
   1ad5c:	str	r0, [fp, #-4]
   1ad60:	str	r1, [fp, #-8]
   1ad64:	str	r2, [sp, #12]
   1ad68:	mov	r0, #176	; 0xb0
   1ad6c:	bl	4efd0 <__assert_fail@plt+0x3c418>
   1ad70:	str	r0, [sp, #8]
   1ad74:	ldr	r0, [sp, #8]
   1ad78:	mov	r1, #3
   1ad7c:	str	r1, [r0, #8]
   1ad80:	ldr	r0, [fp, #-8]
   1ad84:	ldr	r1, [sp, #8]
   1ad88:	str	r0, [r1, #12]
   1ad8c:	ldr	r0, [sp, #8]
   1ad90:	mov	r1, #0
   1ad94:	str	r1, [r0, #24]
   1ad98:	ldr	r0, [fp, #-8]
   1ad9c:	cmp	r0, #1
   1ada0:	str	r0, [sp, #4]
   1ada4:	beq	1adcc <__assert_fail@plt+0x8214>
   1ada8:	b	1adac <__assert_fail@plt+0x81f4>
   1adac:	ldr	r0, [sp, #4]
   1adb0:	cmp	r0, #2
   1adb4:	beq	1adfc <__assert_fail@plt+0x8244>
   1adb8:	b	1adbc <__assert_fail@plt+0x8204>
   1adbc:	ldr	r0, [sp, #4]
   1adc0:	cmp	r0, #3
   1adc4:	beq	1ae34 <__assert_fail@plt+0x827c>
   1adc8:	b	1ae6c <__assert_fail@plt+0x82b4>
   1adcc:	ldr	r0, [sp, #8]
   1add0:	movw	r1, #19172	; 0x4ae4
   1add4:	movt	r1, #1
   1add8:	str	r1, [r0]
   1addc:	ldr	r0, [sp, #8]
   1ade0:	movw	r1, #35710	; 0x8b7e
   1ade4:	movt	r1, #7
   1ade8:	str	r1, [r0, #4]
   1adec:	ldr	r0, [sp, #8]
   1adf0:	vmov.f32	s0, #112	; 0x3f800000  1.0
   1adf4:	vstr	s0, [r0, #28]
   1adf8:	b	1ae70 <__assert_fail@plt+0x82b8>
   1adfc:	ldr	r0, [sp, #8]
   1ae00:	movw	r1, #24484	; 0x5fa4
   1ae04:	movt	r1, #1
   1ae08:	str	r1, [r0]
   1ae0c:	ldr	r0, [sp, #8]
   1ae10:	movw	r1, #36737	; 0x8f81
   1ae14:	movt	r1, #7
   1ae18:	str	r1, [r0, #4]
   1ae1c:	ldr	r0, [fp, #-4]
   1ae20:	vldr	s0, [r0, #28]
   1ae24:	bl	18810 <__assert_fail@plt+0x5c58>
   1ae28:	ldr	r0, [sp, #8]
   1ae2c:	vstr	s0, [r0, #28]
   1ae30:	b	1ae70 <__assert_fail@plt+0x82b8>
   1ae34:	ldr	r0, [sp, #8]
   1ae38:	movw	r1, #18428	; 0x47fc
   1ae3c:	movt	r1, #1
   1ae40:	str	r1, [r0]
   1ae44:	ldr	r0, [sp, #8]
   1ae48:	movw	r1, #35493	; 0x8aa5
   1ae4c:	movt	r1, #7
   1ae50:	str	r1, [r0, #4]
   1ae54:	ldr	r0, [fp, #-4]
   1ae58:	vldr	s0, [r0, #28]
   1ae5c:	bl	18810 <__assert_fail@plt+0x5c58>
   1ae60:	ldr	r0, [sp, #8]
   1ae64:	vstr	s0, [r0, #28]
   1ae68:	b	1ae70 <__assert_fail@plt+0x82b8>
   1ae6c:	b	1ae70 <__assert_fail@plt+0x82b8>
   1ae70:	ldr	r0, [fp, #-4]
   1ae74:	ldr	r1, [sp, #8]
   1ae78:	str	r0, [r1, #160]	; 0xa0
   1ae7c:	ldr	r0, [sp, #8]
   1ae80:	ldr	r1, [sp, #12]
   1ae84:	str	r0, [r1]
   1ae88:	ldr	r0, [sp, #8]
   1ae8c:	mov	sp, fp
   1ae90:	pop	{fp, pc}
   1ae94:	sub	sp, sp, #8
   1ae98:	str	r0, [sp]
   1ae9c:	ldr	r0, [sp]
   1aea0:	ldr	r0, [r0]
   1aea4:	movw	r1, #23060	; 0x5a14
   1aea8:	movt	r1, #1
   1aeac:	cmp	r0, r1
   1aeb0:	beq	1aefc <__assert_fail@plt+0x8344>
   1aeb4:	ldr	r0, [sp]
   1aeb8:	ldr	r0, [r0]
   1aebc:	movw	r1, #24616	; 0x6028
   1aec0:	movt	r1, #1
   1aec4:	cmp	r0, r1
   1aec8:	beq	1aefc <__assert_fail@plt+0x8344>
   1aecc:	ldr	r0, [sp]
   1aed0:	ldr	r0, [r0]
   1aed4:	movw	r1, #21944	; 0x55b8
   1aed8:	movt	r1, #1
   1aedc:	cmp	r0, r1
   1aee0:	beq	1aefc <__assert_fail@plt+0x8344>
   1aee4:	ldr	r0, [sp]
   1aee8:	ldr	r0, [r0]
   1aeec:	movw	r1, #22424	; 0x5798
   1aef0:	movt	r1, #1
   1aef4:	cmp	r0, r1
   1aef8:	bne	1af0c <__assert_fail@plt+0x8354>
   1aefc:	movw	r0, #1
   1af00:	and	r0, r0, #1
   1af04:	strb	r0, [sp, #7]
   1af08:	b	1afc0 <__assert_fail@plt+0x8408>
   1af0c:	movw	r0, #136	; 0x88
   1af10:	movt	r0, #9
   1af14:	ldrh	r0, [r0, #68]	; 0x44
   1af18:	cmp	r0, #0
   1af1c:	ble	1afb4 <__assert_fail@plt+0x83fc>
   1af20:	ldr	r0, [sp]
   1af24:	ldr	r0, [r0]
   1af28:	movw	r1, #18428	; 0x47fc
   1af2c:	movt	r1, #1
   1af30:	cmp	r0, r1
   1af34:	beq	1af80 <__assert_fail@plt+0x83c8>
   1af38:	ldr	r0, [sp]
   1af3c:	ldr	r0, [r0]
   1af40:	movw	r1, #23116	; 0x5a4c
   1af44:	movt	r1, #1
   1af48:	cmp	r0, r1
   1af4c:	beq	1af80 <__assert_fail@plt+0x83c8>
   1af50:	ldr	r0, [sp]
   1af54:	ldr	r0, [r0]
   1af58:	movw	r1, #19172	; 0x4ae4
   1af5c:	movt	r1, #1
   1af60:	cmp	r0, r1
   1af64:	beq	1af80 <__assert_fail@plt+0x83c8>
   1af68:	ldr	r0, [sp]
   1af6c:	ldr	r0, [r0]
   1af70:	movw	r1, #24484	; 0x5fa4
   1af74:	movt	r1, #1
   1af78:	cmp	r0, r1
   1af7c:	bne	1af90 <__assert_fail@plt+0x83d8>
   1af80:	movw	r0, #0
   1af84:	and	r0, r0, #1
   1af88:	strb	r0, [sp, #7]
   1af8c:	b	1afc0 <__assert_fail@plt+0x8408>
   1af90:	ldr	r0, [sp]
   1af94:	ldr	r0, [r0, #24]
   1af98:	movw	r1, #0
   1af9c:	cmp	r1, r0
   1afa0:	movw	r0, #0
   1afa4:	moveq	r0, #1
   1afa8:	and	r0, r0, #1
   1afac:	strb	r0, [sp, #7]
   1afb0:	b	1afc0 <__assert_fail@plt+0x8408>
   1afb4:	movw	r0, #0
   1afb8:	and	r0, r0, #1
   1afbc:	strb	r0, [sp, #7]
   1afc0:	ldrb	r0, [sp, #7]
   1afc4:	and	r0, r0, #1
   1afc8:	add	sp, sp, #8
   1afcc:	bx	lr
   1afd0:	sub	sp, sp, #16
   1afd4:	str	r0, [sp, #12]
   1afd8:	str	r1, [sp, #8]
   1afdc:	str	r2, [sp, #4]
   1afe0:	ldr	r0, [sp, #12]
   1afe4:	str	r0, [sp]
   1afe8:	ldr	r0, [sp, #8]
   1afec:	ldr	r0, [r0, #156]	; 0x9c
   1aff0:	ldr	r1, [sp, #4]
   1aff4:	str	r0, [r1]
   1aff8:	ldr	r0, [sp]
   1affc:	ldr	r0, [r0]
   1b000:	ldr	r1, [sp, #8]
   1b004:	str	r0, [r1, #156]	; 0x9c
   1b008:	ldr	r0, [sp, #8]
   1b00c:	ldr	r1, [sp]
   1b010:	str	r0, [r1]
   1b014:	ldr	r0, [sp, #12]
   1b018:	ldr	r0, [r0, #4]
   1b01c:	movw	r1, #0
   1b020:	cmp	r1, r0
   1b024:	bne	1b038 <__assert_fail@plt+0x8480>
   1b028:	ldr	r0, [sp, #12]
   1b02c:	ldr	r0, [r0]
   1b030:	ldr	r1, [sp, #12]
   1b034:	str	r0, [r1, #4]
   1b038:	add	sp, sp, #16
   1b03c:	bx	lr
   1b040:	push	{fp, lr}
   1b044:	mov	fp, sp
   1b048:	sub	sp, sp, #40	; 0x28
   1b04c:	ldr	ip, [fp, #8]
   1b050:	str	r0, [fp, #-4]
   1b054:	str	r1, [fp, #-8]
   1b058:	str	r2, [fp, #-12]
   1b05c:	str	r3, [fp, #-16]
   1b060:	movw	r0, #45344	; 0xb120
   1b064:	movt	r0, #1
   1b068:	movw	r1, #63336	; 0xf768
   1b06c:	movt	r1, #8
   1b070:	str	r0, [r1]
   1b074:	ldr	r0, [r1]
   1b078:	ldr	r1, [fp, #-12]
   1b07c:	ldr	r2, [fp, #8]
   1b080:	str	r0, [sp, #16]
   1b084:	mov	r0, r1
   1b088:	mov	r1, r2
   1b08c:	ldr	r2, [sp, #16]
   1b090:	str	ip, [sp, #12]
   1b094:	blx	r2
   1b098:	movw	r0, #63336	; 0xf768
   1b09c:	movt	r0, #8
   1b0a0:	ldr	r0, [r0]
   1b0a4:	ldr	r1, [fp, #-16]
   1b0a8:	ldr	r2, [fp, #8]
   1b0ac:	str	r0, [sp, #8]
   1b0b0:	mov	r0, r1
   1b0b4:	mov	r1, r2
   1b0b8:	ldr	r2, [sp, #8]
   1b0bc:	blx	r2
   1b0c0:	movw	r0, #0
   1b0c4:	str	r0, [sp, #20]
   1b0c8:	ldr	r0, [sp, #20]
   1b0cc:	ldr	r1, [fp, #-8]
   1b0d0:	cmp	r0, r1
   1b0d4:	bge	1b118 <__assert_fail@plt+0x8560>
   1b0d8:	movw	r0, #63336	; 0xf768
   1b0dc:	movt	r0, #8
   1b0e0:	ldr	r0, [r0]
   1b0e4:	ldr	r1, [fp, #-4]
   1b0e8:	ldr	r2, [sp, #20]
   1b0ec:	add	r1, r1, r2, lsl #3
   1b0f0:	ldr	r2, [fp, #8]
   1b0f4:	str	r0, [sp, #4]
   1b0f8:	mov	r0, r1
   1b0fc:	mov	r1, r2
   1b100:	ldr	r2, [sp, #4]
   1b104:	blx	r2
   1b108:	ldr	r0, [sp, #20]
   1b10c:	add	r0, r0, #1
   1b110:	str	r0, [sp, #20]
   1b114:	b	1b0c8 <__assert_fail@plt+0x8510>
   1b118:	mov	sp, fp
   1b11c:	pop	{fp, pc}
   1b120:	push	{fp, lr}
   1b124:	mov	fp, sp
   1b128:	sub	sp, sp, #48	; 0x30
   1b12c:	str	r0, [fp, #-4]
   1b130:	str	r1, [fp, #-8]
   1b134:	ldr	r0, [fp, #-4]
   1b138:	ldr	r0, [r0]
   1b13c:	movw	r1, #0
   1b140:	cmp	r1, r0
   1b144:	bne	1b14c <__assert_fail@plt+0x8594>
   1b148:	b	1b378 <__assert_fail@plt+0x87c0>
   1b14c:	movw	r0, #136	; 0x88
   1b150:	movt	r0, #9
   1b154:	ldr	r0, [r0, #44]	; 0x2c
   1b158:	and	r0, r0, #8
   1b15c:	cmp	r0, #0
   1b160:	beq	1b1ac <__assert_fail@plt+0x85f4>
   1b164:	movw	r0, #63272	; 0xf728
   1b168:	movt	r0, #8
   1b16c:	ldr	r0, [r0]
   1b170:	movw	r1, #36740	; 0x8f84
   1b174:	movt	r1, #7
   1b178:	movw	r2, #36745	; 0x8f89
   1b17c:	movt	r2, #7
   1b180:	bl	128c4 <fprintf@plt>
   1b184:	movw	r1, #63272	; 0xf728
   1b188:	movt	r1, #8
   1b18c:	ldr	r1, [r1]
   1b190:	ldr	r2, [fp, #-4]
   1b194:	ldr	r2, [r2]
   1b198:	str	r0, [sp, #16]
   1b19c:	mov	r0, r1
   1b1a0:	mov	r1, r2
   1b1a4:	movw	r2, #2
   1b1a8:	bl	19668 <__assert_fail@plt+0x6ab0>
   1b1ac:	ldr	r0, [fp, #-4]
   1b1b0:	ldr	r0, [r0]
   1b1b4:	bl	183c0 <__assert_fail@plt+0x5808>
   1b1b8:	sub	r0, fp, #16
   1b1bc:	vstr	s0, [sp, #12]
   1b1c0:	bl	1ad2c <__assert_fail@plt+0x8174>
   1b1c4:	ldr	r0, [fp, #-4]
   1b1c8:	ldr	r0, [r0]
   1b1cc:	movw	r1, #0
   1b1d0:	cmp	r0, r1
   1b1d4:	beq	1b2f8 <__assert_fail@plt+0x8740>
   1b1d8:	ldr	r0, [fp, #-4]
   1b1dc:	ldr	r0, [r0]
   1b1e0:	str	r0, [sp, #24]
   1b1e4:	ldr	r0, [fp, #-4]
   1b1e8:	ldr	r0, [r0]
   1b1ec:	ldr	r0, [r0, #156]	; 0x9c
   1b1f0:	ldr	r1, [fp, #-4]
   1b1f4:	str	r0, [r1]
   1b1f8:	ldr	r0, [sp, #24]
   1b1fc:	movw	r1, #0
   1b200:	str	r1, [r0, #156]	; 0x9c
   1b204:	ldr	r0, [fp, #-16]
   1b208:	str	r0, [fp, #-20]	; 0xffffffec
   1b20c:	ldr	r0, [fp, #-20]	; 0xffffffec
   1b210:	movw	r1, #0
   1b214:	cmp	r0, r1
   1b218:	beq	1b278 <__assert_fail@plt+0x86c0>
   1b21c:	ldr	r0, [fp, #-20]	; 0xffffffec
   1b220:	ldr	r0, [r0, #12]
   1b224:	movw	r1, #2
   1b228:	cmp	r1, r0
   1b22c:	movw	r0, #0
   1b230:	movne	r0, #1
   1b234:	and	r0, r0, #1
   1b238:	strb	r0, [sp, #23]
   1b23c:	ldr	r0, [fp, #-20]	; 0xffffffec
   1b240:	ldr	r0, [r0, #160]	; 0xa0
   1b244:	ldr	r1, [sp, #24]
   1b248:	ldr	r1, [r1, #160]	; 0xa0
   1b24c:	ldrb	r2, [sp, #23]
   1b250:	and	r2, r2, #1
   1b254:	bl	1b380 <__assert_fail@plt+0x87c8>
   1b258:	cmp	r0, #0
   1b25c:	blt	1b264 <__assert_fail@plt+0x86ac>
   1b260:	b	1b278 <__assert_fail@plt+0x86c0>
   1b264:	b	1b268 <__assert_fail@plt+0x86b0>
   1b268:	ldr	r0, [fp, #-20]	; 0xffffffec
   1b26c:	ldr	r0, [r0, #156]	; 0x9c
   1b270:	str	r0, [fp, #-20]	; 0xffffffec
   1b274:	b	1b20c <__assert_fail@plt+0x8654>
   1b278:	ldr	r0, [fp, #-20]	; 0xffffffec
   1b27c:	movw	r1, #0
   1b280:	cmp	r0, r1
   1b284:	beq	1b2c4 <__assert_fail@plt+0x870c>
   1b288:	ldr	r0, [fp, #-20]	; 0xffffffec
   1b28c:	ldr	r0, [r0, #156]	; 0x9c
   1b290:	ldr	r1, [sp, #24]
   1b294:	str	r0, [r1, #156]	; 0x9c
   1b298:	ldr	r0, [sp, #24]
   1b29c:	ldr	r0, [r0, #156]	; 0x9c
   1b2a0:	movw	r1, #0
   1b2a4:	cmp	r1, r0
   1b2a8:	bne	1b2b4 <__assert_fail@plt+0x86fc>
   1b2ac:	ldr	r0, [sp, #24]
   1b2b0:	str	r0, [fp, #-12]
   1b2b4:	ldr	r0, [sp, #24]
   1b2b8:	ldr	r1, [fp, #-20]	; 0xffffffec
   1b2bc:	str	r0, [r1, #156]	; 0x9c
   1b2c0:	b	1b2f4 <__assert_fail@plt+0x873c>
   1b2c4:	ldr	r0, [fp, #-16]
   1b2c8:	ldr	r1, [sp, #24]
   1b2cc:	str	r0, [r1, #156]	; 0x9c
   1b2d0:	ldr	r0, [sp, #24]
   1b2d4:	str	r0, [fp, #-16]
   1b2d8:	ldr	r0, [fp, #-12]
   1b2dc:	movw	r1, #0
   1b2e0:	cmp	r1, r0
   1b2e4:	bne	1b2f0 <__assert_fail@plt+0x8738>
   1b2e8:	ldr	r0, [sp, #24]
   1b2ec:	str	r0, [fp, #-12]
   1b2f0:	b	1b2f4 <__assert_fail@plt+0x873c>
   1b2f4:	b	1b1c4 <__assert_fail@plt+0x860c>
   1b2f8:	movw	r0, #136	; 0x88
   1b2fc:	movt	r0, #9
   1b300:	ldr	r0, [r0, #44]	; 0x2c
   1b304:	and	r0, r0, #8
   1b308:	cmp	r0, #0
   1b30c:	beq	1b354 <__assert_fail@plt+0x879c>
   1b310:	movw	r0, #63272	; 0xf728
   1b314:	movt	r0, #8
   1b318:	ldr	r0, [r0]
   1b31c:	movw	r1, #36740	; 0x8f84
   1b320:	movt	r1, #7
   1b324:	movw	r2, #36772	; 0x8fa4
   1b328:	movt	r2, #7
   1b32c:	bl	128c4 <fprintf@plt>
   1b330:	movw	r1, #63272	; 0xf728
   1b334:	movt	r1, #8
   1b338:	ldr	r1, [r1]
   1b33c:	ldr	r2, [fp, #-16]
   1b340:	str	r0, [sp, #8]
   1b344:	mov	r0, r1
   1b348:	mov	r1, r2
   1b34c:	movw	r2, #2
   1b350:	bl	19668 <__assert_fail@plt+0x6ab0>
   1b354:	ldr	r0, [fp, #-16]
   1b358:	bl	183c0 <__assert_fail@plt+0x5808>
   1b35c:	ldr	r0, [fp, #-16]
   1b360:	ldr	r1, [fp, #-12]
   1b364:	ldr	r2, [fp, #-8]
   1b368:	vstr	s0, [sp, #4]
   1b36c:	bl	1b480 <__assert_fail@plt+0x88c8>
   1b370:	ldr	r0, [fp, #-4]
   1b374:	bl	1ad2c <__assert_fail@plt+0x8174>
   1b378:	mov	sp, fp
   1b37c:	pop	{fp, pc}
   1b380:	sub	sp, sp, #16
   1b384:	str	r0, [sp, #8]
   1b388:	str	r1, [sp, #4]
   1b38c:	and	r0, r2, #1
   1b390:	strb	r0, [sp, #3]
   1b394:	ldr	r0, [sp, #8]
   1b398:	ldr	r0, [r0, #24]
   1b39c:	ldr	r1, [sp, #4]
   1b3a0:	ldr	r1, [r1, #24]
   1b3a4:	cmp	r0, r1
   1b3a8:	bne	1b448 <__assert_fail@plt+0x8890>
   1b3ac:	ldr	r0, [sp, #8]
   1b3b0:	vldr	s0, [r0, #28]
   1b3b4:	ldr	r0, [sp, #4]
   1b3b8:	vldr	s2, [r0, #28]
   1b3bc:	vcmp.f32	s0, s2
   1b3c0:	vmrs	APSR_nzcv, fpscr
   1b3c4:	bne	1b3d4 <__assert_fail@plt+0x881c>
   1b3c8:	movw	r0, #0
   1b3cc:	str	r0, [sp, #12]
   1b3d0:	b	1b474 <__assert_fail@plt+0x88bc>
   1b3d4:	ldrb	r0, [sp, #3]
   1b3d8:	tst	r0, #1
   1b3dc:	beq	1b414 <__assert_fail@plt+0x885c>
   1b3e0:	ldr	r0, [sp, #8]
   1b3e4:	vldr	s0, [r0, #28]
   1b3e8:	ldr	r0, [sp, #4]
   1b3ec:	vldr	s2, [r0, #28]
   1b3f0:	vcmpe.f32	s0, s2
   1b3f4:	vmrs	APSR_nzcv, fpscr
   1b3f8:	movw	r0, #0
   1b3fc:	movmi	r0, #1
   1b400:	tst	r0, #1
   1b404:	mvn	r0, #0
   1b408:	moveq	r0, #1
   1b40c:	str	r0, [sp, #12]
   1b410:	b	1b474 <__assert_fail@plt+0x88bc>
   1b414:	ldr	r0, [sp, #8]
   1b418:	vldr	s0, [r0, #28]
   1b41c:	ldr	r0, [sp, #4]
   1b420:	vldr	s2, [r0, #28]
   1b424:	vcmpe.f32	s0, s2
   1b428:	vmrs	APSR_nzcv, fpscr
   1b42c:	movw	r0, #0
   1b430:	movmi	r0, #1
   1b434:	tst	r0, #1
   1b438:	movw	r0, #1
   1b43c:	mvneq	r0, #0
   1b440:	str	r0, [sp, #12]
   1b444:	b	1b474 <__assert_fail@plt+0x88bc>
   1b448:	ldr	r0, [sp, #8]
   1b44c:	ldr	r0, [r0, #24]
   1b450:	ldr	r1, [sp, #4]
   1b454:	ldr	r1, [r1, #24]
   1b458:	cmp	r0, r1
   1b45c:	movw	r0, #0
   1b460:	movcc	r0, #1
   1b464:	tst	r0, #1
   1b468:	mvn	r0, #0
   1b46c:	moveq	r0, #1
   1b470:	str	r0, [sp, #12]
   1b474:	ldr	r0, [sp, #12]
   1b478:	add	sp, sp, #16
   1b47c:	bx	lr
   1b480:	sub	sp, sp, #12
   1b484:	str	r0, [sp, #8]
   1b488:	str	r1, [sp, #4]
   1b48c:	str	r2, [sp]
   1b490:	ldr	r0, [sp]
   1b494:	ldr	r0, [r0]
   1b498:	ldr	r1, [sp, #4]
   1b49c:	str	r0, [r1, #156]	; 0x9c
   1b4a0:	ldr	r0, [sp, #8]
   1b4a4:	ldr	r1, [sp]
   1b4a8:	str	r0, [r1]
   1b4ac:	add	sp, sp, #12
   1b4b0:	bx	lr
   1b4b4:	push	{fp, lr}
   1b4b8:	mov	fp, sp
   1b4bc:	sub	sp, sp, #64	; 0x40
   1b4c0:	str	r0, [fp, #-8]
   1b4c4:	movw	r0, #0
   1b4c8:	str	r0, [fp, #-20]	; 0xffffffec
   1b4cc:	ldr	r0, [fp, #-8]
   1b4d0:	ldr	r0, [r0, #8]
   1b4d4:	movw	r1, #3
   1b4d8:	cmp	r1, r0
   1b4dc:	beq	1b4ec <__assert_fail@plt+0x8934>
   1b4e0:	movw	r0, #36899	; 0x9023
   1b4e4:	movt	r0, #7
   1b4e8:	str	r0, [fp, #-20]	; 0xffffffec
   1b4ec:	ldr	r0, [fp, #-20]	; 0xffffffec
   1b4f0:	movw	r1, #0
   1b4f4:	cmp	r0, r1
   1b4f8:	bne	1b534 <__assert_fail@plt+0x897c>
   1b4fc:	ldr	r0, [fp, #-8]
   1b500:	ldr	r0, [r0, #156]	; 0x9c
   1b504:	movw	r1, #0
   1b508:	cmp	r1, r0
   1b50c:	beq	1b524 <__assert_fail@plt+0x896c>
   1b510:	ldr	r0, [fp, #-8]
   1b514:	ldr	r0, [r0, #160]	; 0xa0
   1b518:	movw	r1, #0
   1b51c:	cmp	r1, r0
   1b520:	bne	1b530 <__assert_fail@plt+0x8978>
   1b524:	movw	r0, #36922	; 0x903a
   1b528:	movt	r0, #7
   1b52c:	str	r0, [fp, #-20]	; 0xffffffec
   1b530:	b	1b534 <__assert_fail@plt+0x897c>
   1b534:	ldr	r0, [fp, #-20]	; 0xffffffec
   1b538:	movw	r1, #0
   1b53c:	cmp	r0, r1
   1b540:	bne	1b56c <__assert_fail@plt+0x89b4>
   1b544:	ldr	r0, [fp, #-8]
   1b548:	ldr	r0, [r0, #156]	; 0x9c
   1b54c:	ldr	r0, [r0, #160]	; 0xa0
   1b550:	movw	r1, #0
   1b554:	cmp	r1, r0
   1b558:	bne	1b568 <__assert_fail@plt+0x89b0>
   1b55c:	movw	r0, #36944	; 0x9050
   1b560:	movt	r0, #7
   1b564:	str	r0, [fp, #-20]	; 0xffffffec
   1b568:	b	1b56c <__assert_fail@plt+0x89b4>
   1b56c:	ldr	r0, [fp, #-8]
   1b570:	add	r0, r0, #160	; 0xa0
   1b574:	str	r0, [fp, #-28]	; 0xffffffe4
   1b578:	ldr	r0, [fp, #-8]
   1b57c:	ldr	r0, [r0, #156]	; 0x9c
   1b580:	add	r0, r0, #160	; 0xa0
   1b584:	str	r0, [fp, #-24]	; 0xffffffe8
   1b588:	ldr	r0, [fp, #-20]	; 0xffffffec
   1b58c:	movw	r1, #0
   1b590:	cmp	r0, r1
   1b594:	bne	1b5bc <__assert_fail@plt+0x8a04>
   1b598:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b59c:	ldr	r0, [r0]
   1b5a0:	bl	1b888 <__assert_fail@plt+0x8cd0>
   1b5a4:	tst	r0, #1
   1b5a8:	beq	1b5b8 <__assert_fail@plt+0x8a00>
   1b5ac:	movw	r0, #36973	; 0x906d
   1b5b0:	movt	r0, #7
   1b5b4:	str	r0, [fp, #-20]	; 0xffffffec
   1b5b8:	b	1b5bc <__assert_fail@plt+0x8a04>
   1b5bc:	ldr	r0, [fp, #-20]	; 0xffffffec
   1b5c0:	movw	r1, #0
   1b5c4:	cmp	r0, r1
   1b5c8:	bne	1b5f0 <__assert_fail@plt+0x8a38>
   1b5cc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1b5d0:	ldr	r0, [r0]
   1b5d4:	bl	1b888 <__assert_fail@plt+0x8cd0>
   1b5d8:	tst	r0, #1
   1b5dc:	beq	1b5ec <__assert_fail@plt+0x8a34>
   1b5e0:	movw	r0, #37003	; 0x908b
   1b5e4:	movt	r0, #7
   1b5e8:	str	r0, [fp, #-20]	; 0xffffffec
   1b5ec:	b	1b5f0 <__assert_fail@plt+0x8a38>
   1b5f0:	ldr	r0, [fp, #-20]	; 0xffffffec
   1b5f4:	movw	r1, #0
   1b5f8:	cmp	r0, r1
   1b5fc:	bne	1b640 <__assert_fail@plt+0x8a88>
   1b600:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b604:	ldr	r0, [r0]
   1b608:	bl	1b918 <__assert_fail@plt+0x8d60>
   1b60c:	str	r0, [fp, #-12]
   1b610:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1b614:	ldr	r0, [r0]
   1b618:	bl	1b918 <__assert_fail@plt+0x8d60>
   1b61c:	str	r0, [fp, #-16]
   1b620:	ldr	r0, [fp, #-12]
   1b624:	ldr	lr, [fp, #-16]
   1b628:	cmp	r0, lr
   1b62c:	bge	1b63c <__assert_fail@plt+0x8a84>
   1b630:	movw	r0, #37034	; 0x90aa
   1b634:	movt	r0, #7
   1b638:	str	r0, [fp, #-20]	; 0xffffffec
   1b63c:	b	1b640 <__assert_fail@plt+0x8a88>
   1b640:	ldr	r0, [fp, #-20]	; 0xffffffec
   1b644:	movw	r1, #0
   1b648:	cmp	r0, r1
   1b64c:	bne	1b814 <__assert_fail@plt+0x8c5c>
   1b650:	ldr	r0, [fp, #-12]
   1b654:	ldr	r1, [fp, #-16]
   1b658:	cmp	r0, r1
   1b65c:	bne	1b790 <__assert_fail@plt+0x8bd8>
   1b660:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b664:	ldr	r0, [r0]
   1b668:	vldr	s0, [r0, #28]
   1b66c:	vstr	s0, [sp, #28]
   1b670:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1b674:	ldr	r0, [r0]
   1b678:	vldr	s0, [r0, #28]
   1b67c:	vstr	s0, [sp, #24]
   1b680:	movw	r0, #136	; 0x88
   1b684:	movt	r0, #9
   1b688:	ldr	r0, [r0, #44]	; 0x2c
   1b68c:	and	r0, r0, #8
   1b690:	cmp	r0, #0
   1b694:	beq	1b6cc <__assert_fail@plt+0x8b14>
   1b698:	movw	r0, #63272	; 0xf728
   1b69c:	movt	r0, #8
   1b6a0:	ldr	r0, [r0]
   1b6a4:	vldr	s0, [sp, #28]
   1b6a8:	vcvt.f64.f32	d16, s0
   1b6ac:	vldr	s0, [sp, #24]
   1b6b0:	vcvt.f64.f32	d17, s0
   1b6b4:	movw	r1, #37050	; 0x90ba
   1b6b8:	movt	r1, #7
   1b6bc:	vmov	r2, r3, d16
   1b6c0:	vstr	d17, [sp]
   1b6c4:	bl	128c4 <fprintf@plt>
   1b6c8:	str	r0, [sp, #20]
   1b6cc:	ldr	r0, [fp, #-8]
   1b6d0:	ldr	r0, [r0]
   1b6d4:	movw	r1, #24484	; 0x5fa4
   1b6d8:	movt	r1, #1
   1b6dc:	cmp	r0, r1
   1b6e0:	bne	1b720 <__assert_fail@plt+0x8b68>
   1b6e4:	vldr	s0, [sp, #24]
   1b6e8:	vldr	s2, [sp, #28]
   1b6ec:	vcmpe.f32	s0, s2
   1b6f0:	vmrs	APSR_nzcv, fpscr
   1b6f4:	movw	r0, #0
   1b6f8:	movmi	r0, #1
   1b6fc:	and	r0, r0, #1
   1b700:	strb	r0, [fp, #-29]	; 0xffffffe3
   1b704:	ldrb	r0, [fp, #-29]	; 0xffffffe3
   1b708:	tst	r0, #1
   1b70c:	bne	1b71c <__assert_fail@plt+0x8b64>
   1b710:	movw	r0, #37077	; 0x90d5
   1b714:	movt	r0, #7
   1b718:	str	r0, [fp, #-20]	; 0xffffffec
   1b71c:	b	1b78c <__assert_fail@plt+0x8bd4>
   1b720:	ldr	r0, [fp, #-8]
   1b724:	ldr	r0, [r0]
   1b728:	movw	r1, #18428	; 0x47fc
   1b72c:	movt	r1, #1
   1b730:	cmp	r0, r1
   1b734:	bne	1b774 <__assert_fail@plt+0x8bbc>
   1b738:	vldr	s0, [sp, #24]
   1b73c:	vldr	s2, [sp, #28]
   1b740:	vcmpe.f32	s0, s2
   1b744:	vmrs	APSR_nzcv, fpscr
   1b748:	movw	r0, #0
   1b74c:	movgt	r0, #1
   1b750:	and	r0, r0, #1
   1b754:	strb	r0, [fp, #-29]	; 0xffffffe3
   1b758:	ldrb	r0, [fp, #-29]	; 0xffffffe3
   1b75c:	tst	r0, #1
   1b760:	bne	1b770 <__assert_fail@plt+0x8bb8>
   1b764:	movw	r0, #37121	; 0x9101
   1b768:	movt	r0, #7
   1b76c:	str	r0, [fp, #-20]	; 0xffffffec
   1b770:	b	1b788 <__assert_fail@plt+0x8bd0>
   1b774:	movw	r0, #0
   1b778:	strb	r0, [fp, #-29]	; 0xffffffe3
   1b77c:	movw	r0, #37166	; 0x912e
   1b780:	movt	r0, #7
   1b784:	str	r0, [fp, #-20]	; 0xffffffec
   1b788:	b	1b78c <__assert_fail@plt+0x8bd4>
   1b78c:	b	1b798 <__assert_fail@plt+0x8be0>
   1b790:	movw	r0, #1
   1b794:	strb	r0, [fp, #-29]	; 0xffffffe3
   1b798:	ldrb	r0, [fp, #-29]	; 0xffffffe3
   1b79c:	tst	r0, #1
   1b7a0:	beq	1b810 <__assert_fail@plt+0x8c58>
   1b7a4:	movw	r0, #136	; 0x88
   1b7a8:	movt	r0, #9
   1b7ac:	ldr	r0, [r0, #44]	; 0x2c
   1b7b0:	and	r0, r0, #8
   1b7b4:	cmp	r0, #0
   1b7b8:	beq	1b7f8 <__assert_fail@plt+0x8c40>
   1b7bc:	movw	r0, #63272	; 0xf728
   1b7c0:	movt	r0, #8
   1b7c4:	ldr	r0, [r0]
   1b7c8:	movw	r1, #37184	; 0x9140
   1b7cc:	movt	r1, #7
   1b7d0:	bl	128c4 <fprintf@plt>
   1b7d4:	movw	r1, #63272	; 0xf728
   1b7d8:	movt	r1, #8
   1b7dc:	ldr	r1, [r1]
   1b7e0:	ldr	lr, [fp, #-8]
   1b7e4:	str	r0, [sp, #16]
   1b7e8:	mov	r0, r1
   1b7ec:	mov	r1, lr
   1b7f0:	movw	r2, #0
   1b7f4:	bl	19668 <__assert_fail@plt+0x6ab0>
   1b7f8:	ldr	r0, [fp, #-8]
   1b7fc:	bl	1b9c4 <__assert_fail@plt+0x8e0c>
   1b800:	movw	r0, #1
   1b804:	and	r0, r0, #1
   1b808:	strb	r0, [fp, #-1]
   1b80c:	b	1b878 <__assert_fail@plt+0x8cc0>
   1b810:	b	1b814 <__assert_fail@plt+0x8c5c>
   1b814:	movw	r0, #136	; 0x88
   1b818:	movt	r0, #9
   1b81c:	ldr	r0, [r0, #44]	; 0x2c
   1b820:	and	r0, r0, #8
   1b824:	cmp	r0, #0
   1b828:	beq	1b86c <__assert_fail@plt+0x8cb4>
   1b82c:	movw	r0, #63272	; 0xf728
   1b830:	movt	r0, #8
   1b834:	ldr	r0, [r0]
   1b838:	ldr	r2, [fp, #-20]	; 0xffffffec
   1b83c:	movw	r1, #37209	; 0x9159
   1b840:	movt	r1, #7
   1b844:	bl	128c4 <fprintf@plt>
   1b848:	movw	r1, #63272	; 0xf728
   1b84c:	movt	r1, #8
   1b850:	ldr	r1, [r1]
   1b854:	ldr	r2, [fp, #-8]
   1b858:	str	r0, [sp, #12]
   1b85c:	mov	r0, r1
   1b860:	mov	r1, r2
   1b864:	movw	r2, #0
   1b868:	bl	19668 <__assert_fail@plt+0x6ab0>
   1b86c:	movw	r0, #0
   1b870:	and	r0, r0, #1
   1b874:	strb	r0, [fp, #-1]
   1b878:	ldrb	r0, [fp, #-1]
   1b87c:	and	r0, r0, #1
   1b880:	mov	sp, fp
   1b884:	pop	{fp, pc}
   1b888:	push	{fp, lr}
   1b88c:	mov	fp, sp
   1b890:	sub	sp, sp, #16
   1b894:	str	r0, [sp, #8]
   1b898:	ldr	r0, [sp, #8]
   1b89c:	movw	r1, #0
   1b8a0:	cmp	r0, r1
   1b8a4:	beq	1b8fc <__assert_fail@plt+0x8d44>
   1b8a8:	ldr	r0, [sp, #8]
   1b8ac:	ldrb	r0, [r0, #16]
   1b8b0:	tst	r0, #1
   1b8b4:	movw	r0, #1
   1b8b8:	str	r0, [sp, #4]
   1b8bc:	bne	1b8ec <__assert_fail@plt+0x8d34>
   1b8c0:	ldr	r0, [sp, #8]
   1b8c4:	ldr	r0, [r0, #156]	; 0x9c
   1b8c8:	bl	1b888 <__assert_fail@plt+0x8cd0>
   1b8cc:	tst	r0, #1
   1b8d0:	movw	r0, #1
   1b8d4:	str	r0, [sp, #4]
   1b8d8:	bne	1b8ec <__assert_fail@plt+0x8d34>
   1b8dc:	ldr	r0, [sp, #8]
   1b8e0:	ldr	r0, [r0, #160]	; 0xa0
   1b8e4:	bl	1b888 <__assert_fail@plt+0x8cd0>
   1b8e8:	str	r0, [sp, #4]
   1b8ec:	ldr	r0, [sp, #4]
   1b8f0:	and	r0, r0, #1
   1b8f4:	strb	r0, [fp, #-1]
   1b8f8:	b	1b908 <__assert_fail@plt+0x8d50>
   1b8fc:	movw	r0, #0
   1b900:	and	r0, r0, #1
   1b904:	strb	r0, [fp, #-1]
   1b908:	ldrb	r0, [fp, #-1]
   1b90c:	and	r0, r0, #1
   1b910:	mov	sp, fp
   1b914:	pop	{fp, pc}
   1b918:	push	{fp, lr}
   1b91c:	mov	fp, sp
   1b920:	sub	sp, sp, #24
   1b924:	str	r0, [fp, #-8]
   1b928:	ldr	r0, [fp, #-8]
   1b92c:	movw	r1, #0
   1b930:	cmp	r0, r1
   1b934:	beq	1b9b0 <__assert_fail@plt+0x8df8>
   1b938:	ldr	r0, [fp, #-8]
   1b93c:	ldr	r0, [r0, #156]	; 0x9c
   1b940:	bl	1b918 <__assert_fail@plt+0x8d60>
   1b944:	str	r0, [sp, #8]
   1b948:	ldr	r0, [fp, #-8]
   1b94c:	ldr	r0, [r0, #160]	; 0xa0
   1b950:	bl	1b918 <__assert_fail@plt+0x8d60>
   1b954:	str	r0, [sp, #12]
   1b958:	ldr	r0, [sp, #8]
   1b95c:	ldr	lr, [sp, #12]
   1b960:	cmp	r0, lr
   1b964:	bls	1b974 <__assert_fail@plt+0x8dbc>
   1b968:	ldr	r0, [sp, #8]
   1b96c:	str	r0, [sp]
   1b970:	b	1b97c <__assert_fail@plt+0x8dc4>
   1b974:	ldr	r0, [sp, #12]
   1b978:	str	r0, [sp]
   1b97c:	ldr	r0, [sp]
   1b980:	str	r0, [sp, #4]
   1b984:	ldr	r0, [sp, #4]
   1b988:	ldr	r1, [fp, #-8]
   1b98c:	ldr	r1, [r1, #24]
   1b990:	cmp	r0, r1
   1b994:	bcs	1b9a4 <__assert_fail@plt+0x8dec>
   1b998:	ldr	r0, [fp, #-8]
   1b99c:	ldr	r0, [r0, #24]
   1b9a0:	str	r0, [sp, #4]
   1b9a4:	ldr	r0, [sp, #4]
   1b9a8:	str	r0, [fp, #-4]
   1b9ac:	b	1b9b8 <__assert_fail@plt+0x8e00>
   1b9b0:	movw	r0, #0
   1b9b4:	str	r0, [fp, #-4]
   1b9b8:	ldr	r0, [fp, #-4]
   1b9bc:	mov	sp, fp
   1b9c0:	pop	{fp, pc}
   1b9c4:	sub	sp, sp, #8
   1b9c8:	str	r0, [sp, #4]
   1b9cc:	ldr	r0, [sp, #4]
   1b9d0:	ldr	r0, [r0, #156]	; 0x9c
   1b9d4:	ldr	r0, [r0, #160]	; 0xa0
   1b9d8:	str	r0, [sp]
   1b9dc:	ldr	r0, [sp, #4]
   1b9e0:	ldr	r0, [r0, #160]	; 0xa0
   1b9e4:	ldr	r1, [sp, #4]
   1b9e8:	ldr	r1, [r1, #156]	; 0x9c
   1b9ec:	str	r0, [r1, #160]	; 0xa0
   1b9f0:	ldr	r0, [sp]
   1b9f4:	ldr	r1, [sp, #4]
   1b9f8:	str	r0, [r1, #160]	; 0xa0
   1b9fc:	add	sp, sp, #8
   1ba00:	bx	lr
   1ba04:	push	{fp, lr}
   1ba08:	mov	fp, sp
   1ba0c:	sub	sp, sp, #16
   1ba10:	str	r0, [fp, #-4]
   1ba14:	str	r1, [sp, #8]
   1ba18:	str	r2, [sp, #4]
   1ba1c:	ldr	r0, [fp, #-4]
   1ba20:	ldr	r1, [sp, #4]
   1ba24:	bl	1a444 <__assert_fail@plt+0x788c>
   1ba28:	str	r0, [sp]
   1ba2c:	ldr	r0, [sp, #8]
   1ba30:	ldr	r1, [sp]
   1ba34:	str	r0, [r1]
   1ba38:	ldr	r0, [fp, #-4]
   1ba3c:	ldr	r0, [r0, #4]
   1ba40:	ldr	r1, [sp]
   1ba44:	str	r0, [r1, #4]
   1ba48:	ldr	r0, [sp]
   1ba4c:	movw	r1, #0
   1ba50:	str	r1, [r0, #40]	; 0x28
   1ba54:	ldr	r0, [sp]
   1ba58:	movw	r2, #1
   1ba5c:	str	r2, [r0, #8]
   1ba60:	ldr	r0, [sp]
   1ba64:	str	r1, [r0, #12]
   1ba68:	ldr	r0, [sp]
   1ba6c:	mov	sp, fp
   1ba70:	pop	{fp, pc}
   1ba74:	push	{fp, lr}
   1ba78:	mov	fp, sp
   1ba7c:	sub	sp, sp, #8
   1ba80:	str	r0, [sp, #4]
   1ba84:	str	r1, [sp]
   1ba88:	ldr	r0, [sp, #4]
   1ba8c:	ldr	r0, [r0, #12]
   1ba90:	movw	r1, #0
   1ba94:	cmp	r0, r1
   1ba98:	beq	1baa0 <__assert_fail@plt+0x8ee8>
   1ba9c:	b	1bac0 <__assert_fail@plt+0x8f08>
   1baa0:	movw	r0, #37326	; 0x91ce
   1baa4:	movt	r0, #7
   1baa8:	movw	r1, #37351	; 0x91e7
   1baac:	movt	r1, #7
   1bab0:	movw	r2, #123	; 0x7b
   1bab4:	movw	r3, #37358	; 0x91ee
   1bab8:	movt	r3, #7
   1babc:	bl	12bb8 <__assert_fail@plt>
   1bac0:	ldr	r0, [sp, #4]
   1bac4:	ldr	r1, [sp, #4]
   1bac8:	ldr	r1, [r1, #12]
   1bacc:	ldr	r2, [sp]
   1bad0:	bl	1ba04 <__assert_fail@plt+0x8e4c>
   1bad4:	mov	sp, fp
   1bad8:	pop	{fp, pc}
   1badc:	push	{fp, lr}
   1bae0:	mov	fp, sp
   1bae4:	sub	sp, sp, #8
   1bae8:	str	r0, [sp, #4]
   1baec:	ldr	r0, [sp, #4]
   1baf0:	movw	r1, #0
   1baf4:	bl	1ba74 <__assert_fail@plt+0x8ebc>
   1baf8:	mov	sp, fp
   1bafc:	pop	{fp, pc}
   1bb00:	push	{fp, lr}
   1bb04:	mov	fp, sp
   1bb08:	sub	sp, sp, #72	; 0x48
   1bb0c:	str	r0, [fp, #-4]
   1bb10:	ldr	r0, [fp, #-4]
   1bb14:	cmp	r0, #0
   1bb18:	beq	1bb6c <__assert_fail@plt+0x8fb4>
   1bb1c:	movw	r0, #63272	; 0xf728
   1bb20:	movt	r0, #8
   1bb24:	ldr	r0, [r0]
   1bb28:	movw	r1, #37434	; 0x923a
   1bb2c:	movt	r1, #7
   1bb30:	str	r0, [fp, #-8]
   1bb34:	mov	r0, r1
   1bb38:	bl	12864 <gettext@plt>
   1bb3c:	movw	r1, #65312	; 0xff20
   1bb40:	movt	r1, #8
   1bb44:	ldr	r2, [r1]
   1bb48:	ldr	r1, [fp, #-8]
   1bb4c:	str	r0, [fp, #-12]
   1bb50:	mov	r0, r1
   1bb54:	ldr	r1, [fp, #-12]
   1bb58:	bl	128c4 <fprintf@plt>
   1bb5c:	ldr	r1, [fp, #-4]
   1bb60:	str	r0, [fp, #-16]
   1bb64:	mov	r0, r1
   1bb68:	bl	1284c <exit@plt>
   1bb6c:	movw	r0, #63284	; 0xf734
   1bb70:	movt	r0, #8
   1bb74:	ldr	r0, [r0]
   1bb78:	movw	r1, #37473	; 0x9261
   1bb7c:	movt	r1, #7
   1bb80:	str	r0, [fp, #-20]	; 0xffffffec
   1bb84:	mov	r0, r1
   1bb88:	bl	12864 <gettext@plt>
   1bb8c:	movw	r1, #65312	; 0xff20
   1bb90:	movt	r1, #8
   1bb94:	ldr	r2, [r1]
   1bb98:	ldr	r1, [fp, #-20]	; 0xffffffec
   1bb9c:	str	r0, [fp, #-24]	; 0xffffffe8
   1bba0:	mov	r0, r1
   1bba4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1bba8:	bl	128c4 <fprintf@plt>
   1bbac:	movw	r1, #37547	; 0x92ab
   1bbb0:	movt	r1, #7
   1bbb4:	str	r0, [fp, #-28]	; 0xffffffe4
   1bbb8:	mov	r0, r1
   1bbbc:	bl	12864 <gettext@plt>
   1bbc0:	movw	r1, #63284	; 0xf734
   1bbc4:	movt	r1, #8
   1bbc8:	ldr	r1, [r1]
   1bbcc:	bl	12b4c <fputs@plt>
   1bbd0:	movw	r1, #37685	; 0x9335
   1bbd4:	movt	r1, #7
   1bbd8:	str	r0, [fp, #-32]	; 0xffffffe0
   1bbdc:	mov	r0, r1
   1bbe0:	bl	12864 <gettext@plt>
   1bbe4:	movw	r1, #63284	; 0xf734
   1bbe8:	movt	r1, #8
   1bbec:	ldr	r1, [r1]
   1bbf0:	bl	12b4c <fputs@plt>
   1bbf4:	movw	r1, #37893	; 0x9405
   1bbf8:	movt	r1, #7
   1bbfc:	str	r0, [sp, #36]	; 0x24
   1bc00:	mov	r0, r1
   1bc04:	bl	12864 <gettext@plt>
   1bc08:	movw	r1, #63284	; 0xf734
   1bc0c:	movt	r1, #8
   1bc10:	ldr	r1, [r1]
   1bc14:	bl	12b4c <fputs@plt>
   1bc18:	movw	r1, #37978	; 0x945a
   1bc1c:	movt	r1, #7
   1bc20:	str	r0, [sp, #32]
   1bc24:	mov	r0, r1
   1bc28:	bl	12864 <gettext@plt>
   1bc2c:	movw	r1, #63284	; 0xf734
   1bc30:	movt	r1, #8
   1bc34:	ldr	r1, [r1]
   1bc38:	bl	12b4c <fputs@plt>
   1bc3c:	movw	r1, #38183	; 0x9527
   1bc40:	movt	r1, #7
   1bc44:	str	r0, [sp, #28]
   1bc48:	mov	r0, r1
   1bc4c:	bl	12864 <gettext@plt>
   1bc50:	movw	r1, #63284	; 0xf734
   1bc54:	movt	r1, #8
   1bc58:	ldr	r1, [r1]
   1bc5c:	bl	12b4c <fputs@plt>
   1bc60:	movw	r1, #38724	; 0x9744
   1bc64:	movt	r1, #7
   1bc68:	str	r0, [sp, #24]
   1bc6c:	mov	r0, r1
   1bc70:	bl	12864 <gettext@plt>
   1bc74:	movw	r1, #63284	; 0xf734
   1bc78:	movt	r1, #8
   1bc7c:	ldr	r1, [r1]
   1bc80:	bl	12b4c <fputs@plt>
   1bc84:	movw	r1, #38980	; 0x9844
   1bc88:	movt	r1, #7
   1bc8c:	str	r0, [sp, #20]
   1bc90:	mov	r0, r1
   1bc94:	bl	12864 <gettext@plt>
   1bc98:	movw	r1, #63284	; 0xf734
   1bc9c:	movt	r1, #8
   1bca0:	ldr	r1, [r1]
   1bca4:	bl	12b4c <fputs@plt>
   1bca8:	movw	r1, #39004	; 0x985c
   1bcac:	movt	r1, #7
   1bcb0:	str	r0, [sp, #16]
   1bcb4:	mov	r0, r1
   1bcb8:	bl	12864 <gettext@plt>
   1bcbc:	movw	r1, #63284	; 0xf734
   1bcc0:	movt	r1, #8
   1bcc4:	ldr	r1, [r1]
   1bcc8:	bl	12b4c <fputs@plt>
   1bccc:	movw	r1, #39063	; 0x9897
   1bcd0:	movt	r1, #7
   1bcd4:	str	r0, [sp, #12]
   1bcd8:	mov	r0, r1
   1bcdc:	bl	12864 <gettext@plt>
   1bce0:	movw	r1, #63284	; 0xf734
   1bce4:	movt	r1, #8
   1bce8:	ldr	r1, [r1]
   1bcec:	bl	12b4c <fputs@plt>
   1bcf0:	movw	r1, #0
   1bcf4:	str	r0, [sp, #8]
   1bcf8:	mov	r0, r1
   1bcfc:	bl	1bd54 <__assert_fail@plt+0x919c>
   1bd00:	movw	r0, #39132	; 0x98dc
   1bd04:	movt	r0, #7
   1bd08:	bl	12864 <gettext@plt>
   1bd0c:	movw	r1, #63284	; 0xf734
   1bd10:	movt	r1, #8
   1bd14:	ldr	r1, [r1]
   1bd18:	bl	12b4c <fputs@plt>
   1bd1c:	movw	r1, #63284	; 0xf734
   1bd20:	movt	r1, #8
   1bd24:	ldr	r1, [r1]
   1bd28:	movw	r2, #65312	; 0xff20
   1bd2c:	movt	r2, #8
   1bd30:	ldr	r2, [r2]
   1bd34:	str	r0, [sp, #4]
   1bd38:	mov	r0, r1
   1bd3c:	mov	r1, r2
   1bd40:	bl	2b9c4 <__assert_fail@plt+0x18e0c>
   1bd44:	ldr	r1, [fp, #-4]
   1bd48:	str	r0, [sp]
   1bd4c:	mov	r0, r1
   1bd50:	bl	1284c <exit@plt>
   1bd54:	push	{fp, lr}
   1bd58:	mov	fp, sp
   1bd5c:	sub	sp, sp, #32
   1bd60:	str	r0, [fp, #-4]
   1bd64:	movw	r0, #39778	; 0x9b62
   1bd68:	movt	r0, #7
   1bd6c:	bl	12864 <gettext@plt>
   1bd70:	movw	lr, #63284	; 0xf734
   1bd74:	movt	lr, #8
   1bd78:	ldr	r1, [lr]
   1bd7c:	bl	12b4c <fputs@plt>
   1bd80:	ldr	r1, [fp, #-4]
   1bd84:	cmp	r1, #0
   1bd88:	str	r0, [fp, #-12]
   1bd8c:	beq	1be0c <__assert_fail@plt+0x9254>
   1bd90:	movw	r0, #0
   1bd94:	str	r0, [fp, #-8]
   1bd98:	ldr	r0, [fp, #-8]
   1bd9c:	cmp	r0, #9
   1bda0:	bcs	1be08 <__assert_fail@plt+0x9250>
   1bda4:	movw	r0, #63284	; 0xf734
   1bda8:	movt	r0, #8
   1bdac:	ldr	r0, [r0]
   1bdb0:	ldr	r1, [fp, #-8]
   1bdb4:	movw	r2, #12
   1bdb8:	mul	r1, r1, r2
   1bdbc:	movw	r3, #62800	; 0xf550
   1bdc0:	movt	r3, #8
   1bdc4:	add	r1, r3, r1
   1bdc8:	ldr	r1, [r1]
   1bdcc:	ldr	ip, [fp, #-8]
   1bdd0:	mul	r2, ip, r2
   1bdd4:	add	r2, r3, r2
   1bdd8:	ldr	r3, [r2, #8]
   1bddc:	movw	r2, #39803	; 0x9b7b
   1bde0:	movt	r2, #7
   1bde4:	str	r1, [sp, #16]
   1bde8:	mov	r1, r2
   1bdec:	ldr	r2, [sp, #16]
   1bdf0:	bl	128c4 <fprintf@plt>
   1bdf4:	str	r0, [sp, #12]
   1bdf8:	ldr	r0, [fp, #-8]
   1bdfc:	add	r0, r0, #1
   1be00:	str	r0, [fp, #-8]
   1be04:	b	1bd98 <__assert_fail@plt+0x91e0>
   1be08:	b	1bea0 <__assert_fail@plt+0x92e8>
   1be0c:	movw	r0, #0
   1be10:	str	r0, [fp, #-8]
   1be14:	ldr	r0, [fp, #-8]
   1be18:	cmp	r0, #9
   1be1c:	bcs	1be9c <__assert_fail@plt+0x92e4>
   1be20:	movw	r0, #63284	; 0xf734
   1be24:	movt	r0, #8
   1be28:	ldr	r0, [r0]
   1be2c:	ldr	r1, [fp, #-8]
   1be30:	cmp	r1, #0
   1be34:	movw	r1, #0
   1be38:	movhi	r1, #1
   1be3c:	tst	r1, #1
   1be40:	movw	r1, #39197	; 0x991d
   1be44:	movt	r1, #7
   1be48:	movw	r2, #39813	; 0x9b85
   1be4c:	movt	r2, #7
   1be50:	movne	r1, r2
   1be54:	ldr	r2, [fp, #-8]
   1be58:	movw	r3, #12
   1be5c:	mul	r2, r2, r3
   1be60:	movw	r3, #62800	; 0xf550
   1be64:	movt	r3, #8
   1be68:	add	r2, r3, r2
   1be6c:	ldr	r3, [r2]
   1be70:	movw	r2, #33533	; 0x82fd
   1be74:	movt	r2, #7
   1be78:	str	r1, [sp, #8]
   1be7c:	mov	r1, r2
   1be80:	ldr	r2, [sp, #8]
   1be84:	bl	128c4 <fprintf@plt>
   1be88:	str	r0, [sp, #4]
   1be8c:	ldr	r0, [fp, #-8]
   1be90:	add	r0, r0, #1
   1be94:	str	r0, [fp, #-8]
   1be98:	b	1be14 <__assert_fail@plt+0x925c>
   1be9c:	b	1bea0 <__assert_fail@plt+0x92e8>
   1bea0:	mov	sp, fp
   1bea4:	pop	{fp, pc}
   1bea8:	sub	sp, sp, #4
   1beac:	str	r0, [sp]
   1beb0:	add	sp, sp, #4
   1beb4:	bx	lr
   1beb8:	push	{fp, lr}
   1bebc:	mov	fp, sp
   1bec0:	sub	sp, sp, #32
   1bec4:	str	r0, [fp, #-8]
   1bec8:	str	r1, [fp, #-12]
   1becc:	str	r2, [sp, #16]
   1bed0:	movw	r0, #92	; 0x5c
   1bed4:	movt	r0, #9
   1bed8:	ldrb	r0, [r0, #4]
   1bedc:	tst	r0, #1
   1bee0:	bne	1bfcc <__assert_fail@plt+0x9414>
   1bee4:	ldr	r0, [sp, #16]
   1bee8:	bl	1bea8 <__assert_fail@plt+0x92f0>
   1beec:	movw	r0, #136	; 0x88
   1bef0:	movt	r0, #9
   1bef4:	ldr	r0, [r0, #52]	; 0x34
   1bef8:	ldr	lr, [fp, #-12]
   1befc:	ldr	r1, [sp, #16]
   1bf00:	str	r0, [sp, #12]
   1bf04:	mov	r0, lr
   1bf08:	ldr	lr, [sp, #12]
   1bf0c:	blx	lr
   1bf10:	movw	r1, #0
   1bf14:	cmp	r1, r0
   1bf18:	bne	1bf88 <__assert_fail@plt+0x93d0>
   1bf1c:	ldr	r0, [sp, #16]
   1bf20:	ldr	r0, [r0, #16]
   1bf24:	movw	r1, #0
   1bf28:	cmp	r1, r0
   1bf2c:	bne	1bf84 <__assert_fail@plt+0x93cc>
   1bf30:	movw	r0, #32480	; 0x7ee0
   1bf34:	movt	r0, #7
   1bf38:	bl	12864 <gettext@plt>
   1bf3c:	movw	lr, #136	; 0x88
   1bf40:	movt	lr, #9
   1bf44:	ldr	r1, [lr, #72]	; 0x48
   1bf48:	ldr	r2, [fp, #-12]
   1bf4c:	movw	lr, #0
   1bf50:	str	r0, [sp, #8]
   1bf54:	mov	r0, lr
   1bf58:	bl	4a828 <__assert_fail@plt+0x37c70>
   1bf5c:	movw	r1, #0
   1bf60:	str	r0, [sp, #4]
   1bf64:	mov	r0, r1
   1bf68:	ldr	r2, [sp, #8]
   1bf6c:	ldr	r3, [sp, #4]
   1bf70:	bl	12780 <error@plt>
   1bf74:	movw	r0, #92	; 0x5c
   1bf78:	movt	r0, #9
   1bf7c:	movw	r1, #1
   1bf80:	str	r1, [r0, #28]
   1bf84:	b	1bfc8 <__assert_fail@plt+0x9410>
   1bf88:	movw	r0, #136	; 0x88
   1bf8c:	movt	r0, #9
   1bf90:	ldrb	r0, [r0, #14]
   1bf94:	tst	r0, #1
   1bf98:	beq	1bfac <__assert_fail@plt+0x93f4>
   1bf9c:	bl	128d0 <__errno_location@plt>
   1bfa0:	ldr	r0, [r0]
   1bfa4:	cmp	r0, #2
   1bfa8:	beq	1bfbc <__assert_fail@plt+0x9404>
   1bfac:	bl	128d0 <__errno_location@plt>
   1bfb0:	ldr	r0, [r0]
   1bfb4:	ldr	r1, [fp, #-8]
   1bfb8:	bl	1c000 <__assert_fail@plt+0x9448>
   1bfbc:	mvn	r0, #0
   1bfc0:	str	r0, [fp, #-4]
   1bfc4:	b	1bff4 <__assert_fail@plt+0x943c>
   1bfc8:	b	1bfcc <__assert_fail@plt+0x9414>
   1bfcc:	movw	r0, #1
   1bfd0:	movw	r1, #92	; 0x5c
   1bfd4:	movt	r1, #9
   1bfd8:	strb	r0, [r1, #4]
   1bfdc:	strb	r0, [r1, #5]
   1bfe0:	ldr	r0, [sp, #16]
   1bfe4:	ldr	r0, [r0, #16]
   1bfe8:	str	r0, [r1, #8]
   1bfec:	movw	r0, #0
   1bff0:	str	r0, [fp, #-4]
   1bff4:	ldr	r0, [fp, #-4]
   1bff8:	mov	sp, fp
   1bffc:	pop	{fp, pc}
   1c000:	push	{fp, lr}
   1c004:	mov	fp, sp
   1c008:	sub	sp, sp, #8
   1c00c:	str	r0, [sp, #4]
   1c010:	str	r1, [sp]
   1c014:	ldr	r1, [sp, #4]
   1c018:	ldr	r3, [sp]
   1c01c:	movw	r0, #0
   1c020:	movw	r2, #1
   1c024:	and	r2, r2, #1
   1c028:	bl	1dac4 <__assert_fail@plt+0xaf0c>
   1c02c:	mov	sp, fp
   1c030:	pop	{fp, pc}
   1c034:	push	{r4, r5, fp, lr}
   1c038:	add	fp, sp, #8
   1c03c:	sub	sp, sp, #408	; 0x198
   1c040:	add	r0, sp, #16
   1c044:	bl	12630 <uname@plt>
   1c048:	movw	lr, #0
   1c04c:	cmp	lr, r0
   1c050:	bne	1c10c <__assert_fail@plt+0x9554>
   1c054:	movw	r0, #11000	; 0x2af8
   1c058:	movt	r0, #1
   1c05c:	str	r0, [sp, #8]
   1c060:	ldr	r0, [sp, #8]
   1c064:	add	r1, sp, #16
   1c068:	add	r1, r1, #130	; 0x82
   1c06c:	str	r0, [sp, #4]
   1c070:	mov	r0, r1
   1c074:	ldr	r1, [sp, #4]
   1c078:	blx	r1
   1c07c:	add	r1, sp, #16
   1c080:	vcvt.f32.f64	s2, d0
   1c084:	vstr	s2, [sp, #12]
   1c088:	movw	r0, #39198	; 0x991e
   1c08c:	movt	r0, #7
   1c090:	bl	124c8 <strcmp@plt>
   1c094:	movw	r1, #0
   1c098:	cmp	r1, r0
   1c09c:	bne	1c0c4 <__assert_fail@plt+0x950c>
   1c0a0:	vldr	s0, [pc, #132]	; 1c12c <__assert_fail@plt+0x9574>
   1c0a4:	vldr	s2, [sp, #12]
   1c0a8:	vcmpe.f32	s2, s0
   1c0ac:	vmrs	APSR_nzcv, fpscr
   1c0b0:	movw	r0, #0
   1c0b4:	movge	r0, #1
   1c0b8:	and	r0, r0, #1
   1c0bc:	strb	r0, [fp, #-9]
   1c0c0:	b	1c118 <__assert_fail@plt+0x9560>
   1c0c4:	add	r1, sp, #16
   1c0c8:	movw	r0, #39204	; 0x9924
   1c0cc:	movt	r0, #7
   1c0d0:	bl	124c8 <strcmp@plt>
   1c0d4:	movw	r1, #0
   1c0d8:	cmp	r1, r0
   1c0dc:	bne	1c104 <__assert_fail@plt+0x954c>
   1c0e0:	vldr	s0, [pc, #64]	; 1c128 <__assert_fail@plt+0x9570>
   1c0e4:	vldr	s2, [sp, #12]
   1c0e8:	vcmpe.f32	s2, s0
   1c0ec:	vmrs	APSR_nzcv, fpscr
   1c0f0:	movw	r0, #0
   1c0f4:	movge	r0, #1
   1c0f8:	and	r0, r0, #1
   1c0fc:	strb	r0, [fp, #-9]
   1c100:	b	1c118 <__assert_fail@plt+0x9560>
   1c104:	b	1c108 <__assert_fail@plt+0x9550>
   1c108:	b	1c10c <__assert_fail@plt+0x9554>
   1c10c:	movw	r0, #1
   1c110:	and	r0, r0, #1
   1c114:	strb	r0, [fp, #-9]
   1c118:	ldrb	r0, [fp, #-9]
   1c11c:	and	r0, r0, #1
   1c120:	sub	sp, fp, #8
   1c124:	pop	{r4, r5, fp, pc}
   1c128:	submi	r6, r6, r6, ror #12
   1c12c:	andmi	ip, ip, sp, asr #25
   1c130:	push	{fp, lr}
   1c134:	mov	fp, sp
   1c138:	movw	r0, #92	; 0x5c
   1c13c:	movt	r0, #9
   1c140:	ldrb	r0, [r0, #32]
   1c144:	tst	r0, #1
   1c148:	beq	1c164 <__assert_fail@plt+0x95ac>
   1c14c:	bl	183b0 <__assert_fail@plt+0x57f8>
   1c150:	bl	1c168 <__assert_fail@plt+0x95b0>
   1c154:	movw	r0, #92	; 0x5c
   1c158:	movt	r0, #9
   1c15c:	movw	lr, #0
   1c160:	strb	lr, [r0, #32]
   1c164:	pop	{fp, pc}
   1c168:	push	{fp, lr}
   1c16c:	mov	fp, sp
   1c170:	sub	sp, sp, #8
   1c174:	str	r0, [sp, #4]
   1c178:	ldr	r0, [sp, #4]
   1c17c:	movw	r1, #0
   1c180:	cmp	r1, r0
   1c184:	bne	1c18c <__assert_fail@plt+0x95d4>
   1c188:	b	1c248 <__assert_fail@plt+0x9690>
   1c18c:	movw	r0, #92	; 0x5c
   1c190:	movt	r0, #9
   1c194:	ldrb	r0, [r0, #32]
   1c198:	tst	r0, #1
   1c19c:	beq	1c1a4 <__assert_fail@plt+0x95ec>
   1c1a0:	b	1c1c4 <__assert_fail@plt+0x960c>
   1c1a4:	movw	r0, #40251	; 0x9d3b
   1c1a8:	movt	r0, #7
   1c1ac:	movw	r1, #37351	; 0x91e7
   1c1b0:	movt	r1, #7
   1c1b4:	movw	r2, #396	; 0x18c
   1c1b8:	movw	r3, #40278	; 0x9d56
   1c1bc:	movt	r3, #7
   1c1c0:	bl	12bb8 <__assert_fail@plt>
   1c1c4:	ldr	r0, [sp, #4]
   1c1c8:	ldr	r0, [r0, #156]	; 0x9c
   1c1cc:	bl	1c168 <__assert_fail@plt+0x95b0>
   1c1d0:	ldr	r0, [sp, #4]
   1c1d4:	ldr	r0, [r0]
   1c1d8:	movw	lr, #20760	; 0x5118
   1c1dc:	movt	lr, #1
   1c1e0:	cmp	r0, lr
   1c1e4:	beq	1c200 <__assert_fail@plt+0x9648>
   1c1e8:	ldr	r0, [sp, #4]
   1c1ec:	ldr	r0, [r0]
   1c1f0:	movw	r1, #24336	; 0x5f10
   1c1f4:	movt	r1, #1
   1c1f8:	cmp	r0, r1
   1c1fc:	bne	1c23c <__assert_fail@plt+0x9684>
   1c200:	ldr	r0, [sp, #4]
   1c204:	ldrb	r0, [r0, #40]	; 0x28
   1c208:	tst	r0, #1
   1c20c:	beq	1c238 <__assert_fail@plt+0x9680>
   1c210:	ldr	r0, [sp, #4]
   1c214:	add	r0, r0, #40	; 0x28
   1c218:	str	r0, [sp]
   1c21c:	ldr	r0, [sp]
   1c220:	ldr	r0, [r0, #76]	; 0x4c
   1c224:	cmp	r0, #0
   1c228:	beq	1c234 <__assert_fail@plt+0x967c>
   1c22c:	ldr	r0, [sp]
   1c230:	bl	1dbec <__assert_fail@plt+0xb034>
   1c234:	b	1c238 <__assert_fail@plt+0x9680>
   1c238:	b	1c23c <__assert_fail@plt+0x9684>
   1c23c:	ldr	r0, [sp, #4]
   1c240:	ldr	r0, [r0, #160]	; 0xa0
   1c244:	bl	1c168 <__assert_fail@plt+0x95b0>
   1c248:	mov	sp, fp
   1c24c:	pop	{fp, pc}
   1c250:	push	{fp, lr}
   1c254:	mov	fp, sp
   1c258:	sub	sp, sp, #8
   1c25c:	str	r0, [sp, #4]
   1c260:	ldr	r0, [sp, #4]
   1c264:	movw	r1, #0
   1c268:	cmp	r1, r0
   1c26c:	bne	1c274 <__assert_fail@plt+0x96bc>
   1c270:	b	1c2e8 <__assert_fail@plt+0x9730>
   1c274:	ldr	r0, [sp, #4]
   1c278:	ldr	r0, [r0, #156]	; 0x9c
   1c27c:	bl	1c250 <__assert_fail@plt+0x9698>
   1c280:	ldr	r0, [sp, #4]
   1c284:	ldr	r0, [r0]
   1c288:	movw	lr, #20708	; 0x50e4
   1c28c:	movt	lr, #1
   1c290:	cmp	r0, lr
   1c294:	bne	1c2dc <__assert_fail@plt+0x9724>
   1c298:	ldr	r0, [sp, #4]
   1c29c:	ldrb	r0, [r0, #40]	; 0x28
   1c2a0:	tst	r0, #1
   1c2a4:	beq	1c2dc <__assert_fail@plt+0x9724>
   1c2a8:	ldr	r0, [sp, #4]
   1c2ac:	add	r0, r0, #40	; 0x28
   1c2b0:	str	r0, [sp]
   1c2b4:	ldr	r0, [sp]
   1c2b8:	ldr	r0, [r0, #76]	; 0x4c
   1c2bc:	cmp	r0, #0
   1c2c0:	beq	1c2d8 <__assert_fail@plt+0x9720>
   1c2c4:	ldr	r0, [sp]
   1c2c8:	add	r0, r0, #4
   1c2cc:	ldr	r1, [sp]
   1c2d0:	add	r1, r1, #48	; 0x30
   1c2d4:	bl	28384 <__assert_fail@plt+0x157cc>
   1c2d8:	b	1c2dc <__assert_fail@plt+0x9724>
   1c2dc:	ldr	r0, [sp, #4]
   1c2e0:	ldr	r0, [r0, #160]	; 0xa0
   1c2e4:	bl	1c250 <__assert_fail@plt+0x9698>
   1c2e8:	mov	sp, fp
   1c2ec:	pop	{fp, pc}
   1c2f0:	push	{fp, lr}
   1c2f4:	mov	fp, sp
   1c2f8:	sub	sp, sp, #32
   1c2fc:	movw	r0, #8
   1c300:	bl	4c394 <__assert_fail@plt+0x397dc>
   1c304:	movw	lr, #63304	; 0xf748
   1c308:	movt	lr, #8
   1c30c:	str	r0, [lr]
   1c310:	ldr	r0, [lr]
   1c314:	bl	4adcc <__assert_fail@plt+0x38214>
   1c318:	movw	lr, #0
   1c31c:	cmp	lr, r0
   1c320:	beq	1c428 <__assert_fail@plt+0x9870>
   1c324:	bl	128d0 <__errno_location@plt>
   1c328:	ldr	r1, [r0]
   1c32c:	movw	r0, #39212	; 0x992c
   1c330:	movt	r0, #7
   1c334:	str	r1, [fp, #-4]
   1c338:	bl	12864 <gettext@plt>
   1c33c:	movw	r1, #63304	; 0xf748
   1c340:	movt	r1, #8
   1c344:	ldr	r1, [r1]
   1c348:	ldr	r1, [r1]
   1c34c:	cmp	r1, #0
   1c350:	movw	r1, #0
   1c354:	str	r0, [fp, #-8]
   1c358:	str	r1, [fp, #-12]
   1c35c:	bge	1c384 <__assert_fail@plt+0x97cc>
   1c360:	movw	r0, #63304	; 0xf748
   1c364:	movt	r0, #8
   1c368:	ldr	r0, [r0]
   1c36c:	ldr	r0, [r0, #4]
   1c370:	movw	r1, #0
   1c374:	cmp	r0, r1
   1c378:	movw	r0, #0
   1c37c:	movne	r0, #1
   1c380:	str	r0, [fp, #-12]
   1c384:	ldr	r0, [fp, #-12]
   1c388:	tst	r0, #1
   1c38c:	movw	r0, #39197	; 0x991d
   1c390:	movt	r0, #7
   1c394:	movw	r1, #46633	; 0xb629
   1c398:	movt	r1, #7
   1c39c:	movne	r0, r1
   1c3a0:	movw	r1, #63304	; 0xf748
   1c3a4:	movt	r1, #8
   1c3a8:	ldr	r1, [r1]
   1c3ac:	ldr	r1, [r1]
   1c3b0:	cmp	r1, #0
   1c3b4:	str	r0, [sp, #16]
   1c3b8:	bge	1c3f0 <__assert_fail@plt+0x9838>
   1c3bc:	movw	r0, #63304	; 0xf748
   1c3c0:	movt	r0, #8
   1c3c4:	ldr	r0, [r0]
   1c3c8:	ldr	r0, [r0, #4]
   1c3cc:	movw	r1, #0
   1c3d0:	cmp	r0, r1
   1c3d4:	beq	1c3f0 <__assert_fail@plt+0x9838>
   1c3d8:	movw	r0, #63304	; 0xf748
   1c3dc:	movt	r0, #8
   1c3e0:	ldr	r0, [r0]
   1c3e4:	ldr	r0, [r0, #4]
   1c3e8:	str	r0, [sp, #12]
   1c3ec:	b	1c400 <__assert_fail@plt+0x9848>
   1c3f0:	movw	r0, #39197	; 0x991d
   1c3f4:	movt	r0, #7
   1c3f8:	str	r0, [sp, #12]
   1c3fc:	b	1c400 <__assert_fail@plt+0x9848>
   1c400:	ldr	r0, [sp, #12]
   1c404:	movw	r1, #1
   1c408:	str	r0, [sp, #8]
   1c40c:	mov	r0, r1
   1c410:	ldr	r1, [fp, #-4]
   1c414:	ldr	r2, [fp, #-8]
   1c418:	ldr	r3, [sp, #16]
   1c41c:	ldr	ip, [sp, #8]
   1c420:	str	ip, [sp]
   1c424:	bl	12780 <error@plt>
   1c428:	mov	sp, fp
   1c42c:	pop	{fp, pc}
   1c430:	push	{fp, lr}
   1c434:	mov	fp, sp
   1c438:	sub	sp, sp, #8
   1c43c:	bl	183b0 <__assert_fail@plt+0x57f8>
   1c440:	str	r0, [sp, #4]
   1c444:	ldr	r0, [sp, #4]
   1c448:	movw	lr, #0
   1c44c:	cmp	r0, lr
   1c450:	beq	1c468 <__assert_fail@plt+0x98b0>
   1c454:	ldr	r0, [sp, #4]
   1c458:	movw	r1, #49744	; 0xc250
   1c45c:	movt	r1, #1
   1c460:	bl	1c4e4 <__assert_fail@plt+0x992c>
   1c464:	bl	1c130 <__assert_fail@plt+0x9578>
   1c468:	movw	r0, #92	; 0x5c
   1c46c:	movt	r0, #9
   1c470:	ldr	r0, [r0, #36]	; 0x24
   1c474:	bl	1deec <__assert_fail@plt+0xb334>
   1c478:	ldr	r0, [sp, #4]
   1c47c:	movw	lr, #0
   1c480:	cmp	r0, lr
   1c484:	beq	1c498 <__assert_fail@plt+0x98e0>
   1c488:	ldr	r0, [sp, #4]
   1c48c:	movw	r1, #50528	; 0xc560
   1c490:	movt	r1, #1
   1c494:	bl	1c4e4 <__assert_fail@plt+0x992c>
   1c498:	bl	1c5dc <__assert_fail@plt+0x9a24>
   1c49c:	bl	29890 <__assert_fail@plt+0x16cd8>
   1c4a0:	tst	r0, #1
   1c4a4:	beq	1c4b0 <__assert_fail@plt+0x98f8>
   1c4a8:	bl	298e0 <__assert_fail@plt+0x16d28>
   1c4ac:	bl	29858 <__assert_fail@plt+0x16ca0>
   1c4b0:	movw	r0, #63284	; 0xf734
   1c4b4:	movt	r0, #8
   1c4b8:	ldr	r0, [r0]
   1c4bc:	bl	50bb8 <__assert_fail@plt+0x3e000>
   1c4c0:	cmn	r0, #1
   1c4c4:	bne	1c4dc <__assert_fail@plt+0x9924>
   1c4c8:	bl	128d0 <__errno_location@plt>
   1c4cc:	ldr	r0, [r0]
   1c4d0:	movw	r1, #39257	; 0x9959
   1c4d4:	movt	r1, #7
   1c4d8:	bl	1c74c <__assert_fail@plt+0x9b94>
   1c4dc:	mov	sp, fp
   1c4e0:	pop	{fp, pc}
   1c4e4:	push	{fp, lr}
   1c4e8:	mov	fp, sp
   1c4ec:	sub	sp, sp, #16
   1c4f0:	str	r0, [fp, #-4]
   1c4f4:	str	r1, [sp, #8]
   1c4f8:	ldr	r0, [fp, #-4]
   1c4fc:	ldr	r0, [r0, #156]	; 0x9c
   1c500:	movw	r1, #0
   1c504:	cmp	r0, r1
   1c508:	beq	1c51c <__assert_fail@plt+0x9964>
   1c50c:	ldr	r0, [fp, #-4]
   1c510:	ldr	r0, [r0, #156]	; 0x9c
   1c514:	ldr	r1, [sp, #8]
   1c518:	bl	1c4e4 <__assert_fail@plt+0x992c>
   1c51c:	ldr	r0, [sp, #8]
   1c520:	ldr	r1, [fp, #-4]
   1c524:	str	r0, [sp, #4]
   1c528:	mov	r0, r1
   1c52c:	ldr	r1, [sp, #4]
   1c530:	blx	r1
   1c534:	ldr	r0, [fp, #-4]
   1c538:	ldr	r0, [r0, #160]	; 0xa0
   1c53c:	movw	r1, #0
   1c540:	cmp	r0, r1
   1c544:	beq	1c558 <__assert_fail@plt+0x99a0>
   1c548:	ldr	r0, [fp, #-4]
   1c54c:	ldr	r0, [r0, #160]	; 0xa0
   1c550:	ldr	r1, [sp, #8]
   1c554:	bl	1c4e4 <__assert_fail@plt+0x992c>
   1c558:	mov	sp, fp
   1c55c:	pop	{fp, pc}
   1c560:	sub	sp, sp, #4
   1c564:	str	r0, [sp]
   1c568:	ldr	r0, [sp]
   1c56c:	ldr	r0, [r0]
   1c570:	movw	r1, #20992	; 0x5200
   1c574:	movt	r1, #1
   1c578:	cmp	r0, r1
   1c57c:	beq	1c5c8 <__assert_fail@plt+0x9a10>
   1c580:	ldr	r0, [sp]
   1c584:	ldr	r0, [r0]
   1c588:	movw	r1, #60700	; 0xed1c
   1c58c:	movt	r1, #1
   1c590:	cmp	r0, r1
   1c594:	beq	1c5c8 <__assert_fail@plt+0x9a10>
   1c598:	ldr	r0, [sp]
   1c59c:	ldr	r0, [r0]
   1c5a0:	movw	r1, #20852	; 0x5174
   1c5a4:	movt	r1, #1
   1c5a8:	cmp	r0, r1
   1c5ac:	beq	1c5c8 <__assert_fail@plt+0x9a10>
   1c5b0:	ldr	r0, [sp]
   1c5b4:	ldr	r0, [r0]
   1c5b8:	movw	r1, #21100	; 0x526c
   1c5bc:	movt	r1, #1
   1c5c0:	cmp	r0, r1
   1c5c4:	bne	1c5d4 <__assert_fail@plt+0x9a1c>
   1c5c8:	ldr	r0, [sp]
   1c5cc:	movw	r1, #0
   1c5d0:	str	r1, [r0, #44]	; 0x2c
   1c5d4:	add	sp, sp, #4
   1c5d8:	bx	lr
   1c5dc:	push	{fp, lr}
   1c5e0:	mov	fp, sp
   1c5e4:	sub	sp, sp, #32
   1c5e8:	movw	r0, #63304	; 0xf748
   1c5ec:	movt	r0, #8
   1c5f0:	ldr	r0, [r0]
   1c5f4:	bl	4ae68 <__assert_fail@plt+0x382b0>
   1c5f8:	movw	lr, #0
   1c5fc:	cmp	lr, r0
   1c600:	bne	1c638 <__assert_fail@plt+0x9a80>
   1c604:	movw	r0, #63304	; 0xf748
   1c608:	movt	r0, #8
   1c60c:	ldr	r0, [r0]
   1c610:	bl	4aebc <__assert_fail@plt+0x38304>
   1c614:	movw	r0, #63304	; 0xf748
   1c618:	movt	r0, #8
   1c61c:	ldr	r0, [r0]
   1c620:	bl	50c68 <__assert_fail@plt+0x3e0b0>
   1c624:	movw	r0, #63304	; 0xf748
   1c628:	movt	r0, #8
   1c62c:	movw	lr, #0
   1c630:	str	lr, [r0]
   1c634:	b	1c744 <__assert_fail@plt+0x9b8c>
   1c638:	bl	128d0 <__errno_location@plt>
   1c63c:	ldr	r1, [r0]
   1c640:	movw	r0, #40332	; 0x9d8c
   1c644:	movt	r0, #7
   1c648:	str	r1, [fp, #-4]
   1c64c:	bl	12864 <gettext@plt>
   1c650:	movw	r1, #63304	; 0xf748
   1c654:	movt	r1, #8
   1c658:	ldr	r1, [r1]
   1c65c:	ldr	r1, [r1]
   1c660:	cmp	r1, #0
   1c664:	movw	r1, #0
   1c668:	str	r0, [fp, #-8]
   1c66c:	str	r1, [fp, #-12]
   1c670:	bge	1c698 <__assert_fail@plt+0x9ae0>
   1c674:	movw	r0, #63304	; 0xf748
   1c678:	movt	r0, #8
   1c67c:	ldr	r0, [r0]
   1c680:	ldr	r0, [r0, #4]
   1c684:	movw	r1, #0
   1c688:	cmp	r0, r1
   1c68c:	movw	r0, #0
   1c690:	movne	r0, #1
   1c694:	str	r0, [fp, #-12]
   1c698:	ldr	r0, [fp, #-12]
   1c69c:	tst	r0, #1
   1c6a0:	movw	r0, #39197	; 0x991d
   1c6a4:	movt	r0, #7
   1c6a8:	movw	r1, #46633	; 0xb629
   1c6ac:	movt	r1, #7
   1c6b0:	movne	r0, r1
   1c6b4:	movw	r1, #63304	; 0xf748
   1c6b8:	movt	r1, #8
   1c6bc:	ldr	r1, [r1]
   1c6c0:	ldr	r1, [r1]
   1c6c4:	cmp	r1, #0
   1c6c8:	str	r0, [sp, #16]
   1c6cc:	bge	1c704 <__assert_fail@plt+0x9b4c>
   1c6d0:	movw	r0, #63304	; 0xf748
   1c6d4:	movt	r0, #8
   1c6d8:	ldr	r0, [r0]
   1c6dc:	ldr	r0, [r0, #4]
   1c6e0:	movw	r1, #0
   1c6e4:	cmp	r0, r1
   1c6e8:	beq	1c704 <__assert_fail@plt+0x9b4c>
   1c6ec:	movw	r0, #63304	; 0xf748
   1c6f0:	movt	r0, #8
   1c6f4:	ldr	r0, [r0]
   1c6f8:	ldr	r0, [r0, #4]
   1c6fc:	str	r0, [sp, #12]
   1c700:	b	1c714 <__assert_fail@plt+0x9b5c>
   1c704:	movw	r0, #39197	; 0x991d
   1c708:	movt	r0, #7
   1c70c:	str	r0, [sp, #12]
   1c710:	b	1c714 <__assert_fail@plt+0x9b5c>
   1c714:	ldr	r0, [sp, #12]
   1c718:	movw	r1, #0
   1c71c:	str	r0, [sp, #8]
   1c720:	mov	r0, r1
   1c724:	ldr	r1, [fp, #-4]
   1c728:	ldr	r2, [fp, #-8]
   1c72c:	ldr	r3, [sp, #16]
   1c730:	ldr	ip, [sp, #8]
   1c734:	str	ip, [sp]
   1c738:	bl	12780 <error@plt>
   1c73c:	movw	r0, #1
   1c740:	bl	125b8 <_exit@plt>
   1c744:	mov	sp, fp
   1c748:	pop	{fp, pc}
   1c74c:	push	{fp, lr}
   1c750:	mov	fp, sp
   1c754:	sub	sp, sp, #8
   1c758:	str	r0, [sp, #4]
   1c75c:	str	r1, [sp]
   1c760:	ldr	r1, [sp, #4]
   1c764:	ldr	r3, [sp]
   1c768:	movw	r0, #0
   1c76c:	movw	r2, #0
   1c770:	and	r2, r2, #1
   1c774:	bl	1dac4 <__assert_fail@plt+0xaf0c>
   1c778:	mov	sp, fp
   1c77c:	pop	{fp, pc}
   1c780:	push	{fp, lr}
   1c784:	mov	fp, sp
   1c788:	sub	sp, sp, #16
   1c78c:	str	r0, [sp, #8]
   1c790:	str	r1, [sp, #4]
   1c794:	movw	r0, #92	; 0x5c
   1c798:	movt	r0, #9
   1c79c:	ldr	r0, [r0, #16]
   1c7a0:	mvn	r1, #99	; 0x63
   1c7a4:	cmp	r1, r0
   1c7a8:	beq	1c7e8 <__assert_fail@plt+0x9c30>
   1c7ac:	movw	r0, #92	; 0x5c
   1c7b0:	movt	r0, #9
   1c7b4:	ldr	r0, [r0, #16]
   1c7b8:	cmp	r0, #0
   1c7bc:	blt	1c7c4 <__assert_fail@plt+0x9c0c>
   1c7c0:	b	1c7e4 <__assert_fail@plt+0x9c2c>
   1c7c4:	movw	r0, #39273	; 0x9969
   1c7c8:	movt	r0, #7
   1c7cc:	movw	r1, #37351	; 0x91e7
   1c7d0:	movt	r1, #7
   1c7d4:	movw	r2, #605	; 0x25d
   1c7d8:	movw	r3, #39295	; 0x997f
   1c7dc:	movt	r3, #7
   1c7e0:	bl	12bb8 <__assert_fail@plt>
   1c7e4:	b	1c7e8 <__assert_fail@plt+0x9c30>
   1c7e8:	ldr	r0, [sp, #4]
   1c7ec:	bl	1bea8 <__assert_fail@plt+0x92f0>
   1c7f0:	movw	r0, #92	; 0x5c
   1c7f4:	movt	r0, #9
   1c7f8:	ldr	r0, [r0]
   1c7fc:	movw	lr, #0
   1c800:	cmp	lr, r0
   1c804:	bne	1c85c <__assert_fail@plt+0x9ca4>
   1c808:	movw	r0, #92	; 0x5c
   1c80c:	movt	r0, #9
   1c810:	ldr	r0, [r0, #16]
   1c814:	ldr	r1, [sp, #8]
   1c818:	ldr	r2, [sp, #4]
   1c81c:	movw	r3, #0
   1c820:	bl	77ab4 <__assert_fail@plt+0x64efc>
   1c824:	str	r0, [sp]
   1c828:	ldr	r0, [sp]
   1c82c:	movw	r1, #0
   1c830:	cmp	r1, r0
   1c834:	bne	1c844 <__assert_fail@plt+0x9c8c>
   1c838:	movw	r0, #0
   1c83c:	str	r0, [fp, #-4]
   1c840:	b	1c87c <__assert_fail@plt+0x9cc4>
   1c844:	ldr	r0, [sp, #8]
   1c848:	ldr	r1, [sp, #4]
   1c84c:	ldr	r2, [sp]
   1c850:	bl	1c888 <__assert_fail@plt+0x9cd0>
   1c854:	str	r0, [fp, #-4]
   1c858:	b	1c87c <__assert_fail@plt+0x9cc4>
   1c85c:	movw	r0, #92	; 0x5c
   1c860:	movt	r0, #9
   1c864:	ldr	r0, [r0, #16]
   1c868:	ldr	r1, [sp, #8]
   1c86c:	ldr	r2, [sp, #4]
   1c870:	movw	r3, #256	; 0x100
   1c874:	bl	77ab4 <__assert_fail@plt+0x64efc>
   1c878:	str	r0, [fp, #-4]
   1c87c:	ldr	r0, [fp, #-4]
   1c880:	mov	sp, fp
   1c884:	pop	{fp, pc}
   1c888:	push	{fp, lr}
   1c88c:	mov	fp, sp
   1c890:	sub	sp, sp, #24
   1c894:	str	r0, [fp, #-8]
   1c898:	str	r1, [sp, #12]
   1c89c:	str	r2, [sp, #8]
   1c8a0:	bl	128d0 <__errno_location@plt>
   1c8a4:	ldr	r0, [r0]
   1c8a8:	cmp	r0, #2
   1c8ac:	str	r0, [sp, #4]
   1c8b0:	beq	1c918 <__assert_fail@plt+0x9d60>
   1c8b4:	b	1c8b8 <__assert_fail@plt+0x9d00>
   1c8b8:	ldr	r0, [sp, #4]
   1c8bc:	cmp	r0, #5
   1c8c0:	beq	1c974 <__assert_fail@plt+0x9dbc>
   1c8c4:	b	1c8c8 <__assert_fail@plt+0x9d10>
   1c8c8:	ldr	r0, [sp, #4]
   1c8cc:	cmp	r0, #13
   1c8d0:	beq	1c974 <__assert_fail@plt+0x9dbc>
   1c8d4:	b	1c8d8 <__assert_fail@plt+0x9d20>
   1c8d8:	ldr	r0, [sp, #4]
   1c8dc:	cmp	r0, #20
   1c8e0:	beq	1c918 <__assert_fail@plt+0x9d60>
   1c8e4:	b	1c8e8 <__assert_fail@plt+0x9d30>
   1c8e8:	ldr	r0, [sp, #4]
   1c8ec:	cmp	r0, #36	; 0x24
   1c8f0:	beq	1c974 <__assert_fail@plt+0x9dbc>
   1c8f4:	b	1c8f8 <__assert_fail@plt+0x9d40>
   1c8f8:	ldr	r0, [sp, #4]
   1c8fc:	cmp	r0, #40	; 0x28
   1c900:	beq	1c974 <__assert_fail@plt+0x9dbc>
   1c904:	b	1c908 <__assert_fail@plt+0x9d50>
   1c908:	ldr	r0, [sp, #4]
   1c90c:	cmp	r0, #75	; 0x4b
   1c910:	beq	1c974 <__assert_fail@plt+0x9dbc>
   1c914:	b	1c978 <__assert_fail@plt+0x9dc0>
   1c918:	movw	r0, #136	; 0x88
   1c91c:	movt	r0, #9
   1c920:	ldr	r0, [r0, #44]	; 0x2c
   1c924:	and	r0, r0, #2
   1c928:	cmp	r0, #0
   1c92c:	beq	1c950 <__assert_fail@plt+0x9d98>
   1c930:	movw	r0, #63272	; 0xf728
   1c934:	movt	r0, #8
   1c938:	ldr	r0, [r0]
   1c93c:	ldr	r2, [fp, #-8]
   1c940:	movw	r1, #40380	; 0x9dbc
   1c944:	movt	r1, #7
   1c948:	bl	128c4 <fprintf@plt>
   1c94c:	str	r0, [sp]
   1c950:	movw	r0, #92	; 0x5c
   1c954:	movt	r0, #9
   1c958:	ldr	r0, [r0, #16]
   1c95c:	ldr	r1, [fp, #-8]
   1c960:	ldr	r2, [sp, #12]
   1c964:	movw	r3, #256	; 0x100
   1c968:	bl	77ab4 <__assert_fail@plt+0x64efc>
   1c96c:	str	r0, [fp, #-4]
   1c970:	b	1c980 <__assert_fail@plt+0x9dc8>
   1c974:	b	1c978 <__assert_fail@plt+0x9dc0>
   1c978:	ldr	r0, [sp, #8]
   1c97c:	str	r0, [fp, #-4]
   1c980:	ldr	r0, [fp, #-4]
   1c984:	mov	sp, fp
   1c988:	pop	{fp, pc}
   1c98c:	push	{fp, lr}
   1c990:	mov	fp, sp
   1c994:	sub	sp, sp, #16
   1c998:	str	r0, [sp, #8]
   1c99c:	str	r1, [sp, #4]
   1c9a0:	movw	r0, #92	; 0x5c
   1c9a4:	movt	r0, #9
   1c9a8:	ldr	r0, [r0, #16]
   1c9ac:	mvn	r1, #99	; 0x63
   1c9b0:	cmp	r1, r0
   1c9b4:	beq	1c9f4 <__assert_fail@plt+0x9e3c>
   1c9b8:	movw	r0, #92	; 0x5c
   1c9bc:	movt	r0, #9
   1c9c0:	ldr	r0, [r0, #16]
   1c9c4:	cmp	r0, #0
   1c9c8:	blt	1c9d0 <__assert_fail@plt+0x9e18>
   1c9cc:	b	1c9f0 <__assert_fail@plt+0x9e38>
   1c9d0:	movw	r0, #39273	; 0x9969
   1c9d4:	movt	r0, #7
   1c9d8:	movw	r1, #37351	; 0x91e7
   1c9dc:	movt	r1, #7
   1c9e0:	movw	r2, #636	; 0x27c
   1c9e4:	movw	r3, #39341	; 0x99ad
   1c9e8:	movt	r3, #7
   1c9ec:	bl	12bb8 <__assert_fail@plt>
   1c9f0:	b	1c9f4 <__assert_fail@plt+0x9e3c>
   1c9f4:	ldr	r0, [sp, #4]
   1c9f8:	bl	1bea8 <__assert_fail@plt+0x92f0>
   1c9fc:	movw	r0, #92	; 0x5c
   1ca00:	movt	r0, #9
   1ca04:	ldr	r0, [r0, #16]
   1ca08:	ldr	r1, [sp, #8]
   1ca0c:	ldr	r2, [sp, #4]
   1ca10:	movw	r3, #0
   1ca14:	bl	77ab4 <__assert_fail@plt+0x64efc>
   1ca18:	str	r0, [sp]
   1ca1c:	ldr	r0, [sp]
   1ca20:	movw	r1, #0
   1ca24:	cmp	r1, r0
   1ca28:	bne	1ca38 <__assert_fail@plt+0x9e80>
   1ca2c:	movw	r0, #0
   1ca30:	str	r0, [fp, #-4]
   1ca34:	b	1ca4c <__assert_fail@plt+0x9e94>
   1ca38:	ldr	r0, [sp, #8]
   1ca3c:	ldr	r1, [sp, #4]
   1ca40:	ldr	r2, [sp]
   1ca44:	bl	1c888 <__assert_fail@plt+0x9cd0>
   1ca48:	str	r0, [fp, #-4]
   1ca4c:	ldr	r0, [fp, #-4]
   1ca50:	mov	sp, fp
   1ca54:	pop	{fp, pc}
   1ca58:	push	{fp, lr}
   1ca5c:	mov	fp, sp
   1ca60:	sub	sp, sp, #8
   1ca64:	str	r0, [sp, #4]
   1ca68:	str	r1, [sp]
   1ca6c:	movw	r0, #92	; 0x5c
   1ca70:	movt	r0, #9
   1ca74:	ldr	r0, [r0, #16]
   1ca78:	cmp	r0, #0
   1ca7c:	bge	1ca94 <__assert_fail@plt+0x9edc>
   1ca80:	movw	r0, #92	; 0x5c
   1ca84:	movt	r0, #9
   1ca88:	ldr	r0, [r0, #16]
   1ca8c:	cmn	r0, #100	; 0x64
   1ca90:	bne	1ca98 <__assert_fail@plt+0x9ee0>
   1ca94:	b	1cab8 <__assert_fail@plt+0x9f00>
   1ca98:	movw	r0, #39387	; 0x99db
   1ca9c:	movt	r0, #7
   1caa0:	movw	r1, #37351	; 0x91e7
   1caa4:	movt	r1, #7
   1caa8:	movw	r2, #653	; 0x28d
   1caac:	movw	r3, #39443	; 0x9a13
   1cab0:	movt	r3, #7
   1cab4:	bl	12bb8 <__assert_fail@plt>
   1cab8:	ldr	r0, [sp]
   1cabc:	bl	1bea8 <__assert_fail@plt+0x92f0>
   1cac0:	movw	r0, #92	; 0x5c
   1cac4:	movt	r0, #9
   1cac8:	ldr	r0, [r0, #16]
   1cacc:	ldr	r1, [sp, #4]
   1cad0:	ldr	r2, [sp]
   1cad4:	movw	r3, #256	; 0x100
   1cad8:	bl	77ab4 <__assert_fail@plt+0x64efc>
   1cadc:	mov	sp, fp
   1cae0:	pop	{fp, pc}
   1cae4:	push	{fp, lr}
   1cae8:	mov	fp, sp
   1caec:	sub	sp, sp, #24
   1caf0:	str	r0, [fp, #-8]
   1caf4:	str	r1, [sp, #12]
   1caf8:	movw	r0, #63344	; 0xf770
   1cafc:	movt	r0, #8
   1cb00:	ldr	r1, [r0]
   1cb04:	ldr	r2, [r0, #4]
   1cb08:	adds	r1, r1, #1
   1cb0c:	adc	r2, r2, #0
   1cb10:	str	r1, [r0]
   1cb14:	str	r2, [r0, #4]
   1cb18:	movw	r0, #63272	; 0xf728
   1cb1c:	movt	r0, #8
   1cb20:	ldr	r0, [r0]
   1cb24:	ldr	r2, [fp, #-8]
   1cb28:	movw	r1, #39489	; 0x9a41
   1cb2c:	movt	r1, #7
   1cb30:	bl	128c4 <fprintf@plt>
   1cb34:	movw	r1, #136	; 0x88
   1cb38:	movt	r1, #9
   1cb3c:	ldr	r1, [r1, #48]	; 0x30
   1cb40:	cmp	r1, #0
   1cb44:	str	r0, [sp, #8]
   1cb48:	str	r1, [sp, #4]
   1cb4c:	beq	1cb9c <__assert_fail@plt+0x9fe4>
   1cb50:	b	1cb54 <__assert_fail@plt+0x9f9c>
   1cb54:	ldr	r0, [sp, #4]
   1cb58:	cmp	r0, #1
   1cb5c:	beq	1cb74 <__assert_fail@plt+0x9fbc>
   1cb60:	b	1cb64 <__assert_fail@plt+0x9fac>
   1cb64:	ldr	r0, [sp, #4]
   1cb68:	cmp	r0, #2
   1cb6c:	beq	1cb88 <__assert_fail@plt+0x9fd0>
   1cb70:	b	1cbb0 <__assert_fail@plt+0x9ff8>
   1cb74:	ldr	r0, [fp, #-8]
   1cb78:	ldr	r1, [sp, #12]
   1cb7c:	bl	1c98c <__assert_fail@plt+0x9dd4>
   1cb80:	str	r0, [fp, #-4]
   1cb84:	b	1cbd0 <__assert_fail@plt+0xa018>
   1cb88:	ldr	r0, [fp, #-8]
   1cb8c:	ldr	r1, [sp, #12]
   1cb90:	bl	1c780 <__assert_fail@plt+0x9bc8>
   1cb94:	str	r0, [fp, #-4]
   1cb98:	b	1cbd0 <__assert_fail@plt+0xa018>
   1cb9c:	ldr	r0, [fp, #-8]
   1cba0:	ldr	r1, [sp, #12]
   1cba4:	bl	1ca58 <__assert_fail@plt+0x9ea0>
   1cba8:	str	r0, [fp, #-4]
   1cbac:	b	1cbd0 <__assert_fail@plt+0xa018>
   1cbb0:	movw	r0, #36537	; 0x8eb9
   1cbb4:	movt	r0, #7
   1cbb8:	movw	r1, #37351	; 0x91e7
   1cbbc:	movt	r1, #7
   1cbc0:	movw	r2, #677	; 0x2a5
   1cbc4:	movw	r3, #39506	; 0x9a52
   1cbc8:	movt	r3, #7
   1cbcc:	bl	12bb8 <__assert_fail@plt>
   1cbd0:	ldr	r0, [fp, #-4]
   1cbd4:	mov	sp, fp
   1cbd8:	pop	{fp, pc}
   1cbdc:	sub	sp, sp, #8
   1cbe0:	movw	r0, #136	; 0x88
   1cbe4:	movt	r0, #9
   1cbe8:	ldr	r0, [r0, #48]	; 0x30
   1cbec:	cmp	r0, #0
   1cbf0:	str	r0, [sp]
   1cbf4:	beq	1cc50 <__assert_fail@plt+0xa098>
   1cbf8:	b	1cbfc <__assert_fail@plt+0xa044>
   1cbfc:	ldr	r0, [sp]
   1cc00:	cmp	r0, #1
   1cc04:	beq	1cc1c <__assert_fail@plt+0xa064>
   1cc08:	b	1cc0c <__assert_fail@plt+0xa054>
   1cc0c:	ldr	r0, [sp]
   1cc10:	cmp	r0, #2
   1cc14:	beq	1cc2c <__assert_fail@plt+0xa074>
   1cc18:	b	1cc54 <__assert_fail@plt+0xa09c>
   1cc1c:	movw	r0, #1
   1cc20:	and	r0, r0, #1
   1cc24:	strb	r0, [sp, #7]
   1cc28:	b	1cc60 <__assert_fail@plt+0xa0a8>
   1cc2c:	movw	r0, #92	; 0x5c
   1cc30:	movt	r0, #9
   1cc34:	ldr	r0, [r0]
   1cc38:	cmp	r0, #0
   1cc3c:	movw	r0, #0
   1cc40:	moveq	r0, #1
   1cc44:	and	r0, r0, #1
   1cc48:	strb	r0, [sp, #7]
   1cc4c:	b	1cc60 <__assert_fail@plt+0xa0a8>
   1cc50:	b	1cc54 <__assert_fail@plt+0xa09c>
   1cc54:	movw	r0, #0
   1cc58:	and	r0, r0, #1
   1cc5c:	strb	r0, [sp, #7]
   1cc60:	ldrb	r0, [sp, #7]
   1cc64:	and	r0, r0, #1
   1cc68:	add	sp, sp, #8
   1cc6c:	bx	lr
   1cc70:	push	{fp, lr}
   1cc74:	mov	fp, sp
   1cc78:	sub	sp, sp, #24
   1cc7c:	ldr	ip, [fp, #8]
   1cc80:	str	r0, [fp, #-8]
   1cc84:	str	r1, [sp, #12]
   1cc88:	str	r2, [sp, #8]
   1cc8c:	str	r3, [sp, #4]
   1cc90:	and	r0, ip, #1
   1cc94:	strb	r0, [sp, #3]
   1cc98:	ldr	r0, [fp, #-8]
   1cc9c:	ldr	r0, [r0]
   1cca0:	cmp	r0, #0
   1cca4:	beq	1cd40 <__assert_fail@plt+0xa188>
   1cca8:	ldr	r0, [fp, #-8]
   1ccac:	ldr	r0, [r0]
   1ccb0:	and	r0, r0, #61440	; 0xf000
   1ccb4:	cmp	r0, #40960	; 0xa000
   1ccb8:	bne	1cd18 <__assert_fail@plt+0xa160>
   1ccbc:	bl	1cbdc <__assert_fail@plt+0xa024>
   1ccc0:	tst	r0, #1
   1ccc4:	beq	1cd18 <__assert_fail@plt+0xa160>
   1ccc8:	ldr	r0, [sp, #12]
   1cccc:	ldr	r1, [sp, #8]
   1ccd0:	ldr	r2, [sp, #4]
   1ccd4:	bl	1beb8 <__assert_fail@plt+0x9300>
   1ccd8:	cmp	r0, #0
   1ccdc:	beq	1ccf0 <__assert_fail@plt+0xa138>
   1cce0:	movw	r0, #0
   1cce4:	and	r0, r0, #1
   1cce8:	strb	r0, [fp, #-1]
   1ccec:	b	1cdc8 <__assert_fail@plt+0xa210>
   1ccf0:	ldr	r0, [sp, #4]
   1ccf4:	ldr	r0, [r0, #16]
   1ccf8:	movw	r1, #92	; 0x5c
   1ccfc:	movt	r1, #9
   1cd00:	str	r0, [r1, #8]
   1cd04:	ldr	r2, [fp, #-8]
   1cd08:	str	r0, [r2]
   1cd0c:	movw	r0, #1
   1cd10:	strb	r0, [r1, #5]
   1cd14:	b	1cd3c <__assert_fail@plt+0xa184>
   1cd18:	movw	r0, #1
   1cd1c:	movw	r1, #92	; 0x5c
   1cd20:	movt	r1, #9
   1cd24:	strb	r0, [r1, #5]
   1cd28:	ldr	r0, [fp, #-8]
   1cd2c:	ldr	r0, [r0]
   1cd30:	str	r0, [r1, #8]
   1cd34:	ldr	r1, [sp, #4]
   1cd38:	str	r0, [r1, #16]
   1cd3c:	b	1cdbc <__assert_fail@plt+0xa204>
   1cd40:	ldrb	r0, [sp, #3]
   1cd44:	tst	r0, #1
   1cd48:	beq	1cd6c <__assert_fail@plt+0xa1b4>
   1cd4c:	movw	r0, #0
   1cd50:	movw	r1, #92	; 0x5c
   1cd54:	movt	r1, #9
   1cd58:	strb	r0, [r1, #4]
   1cd5c:	strb	r0, [r1, #5]
   1cd60:	movw	r0, #0
   1cd64:	str	r0, [r1, #8]
   1cd68:	b	1cdb8 <__assert_fail@plt+0xa200>
   1cd6c:	ldr	r0, [sp, #12]
   1cd70:	ldr	r1, [sp, #8]
   1cd74:	ldr	r2, [sp, #4]
   1cd78:	bl	1beb8 <__assert_fail@plt+0x9300>
   1cd7c:	cmp	r0, #0
   1cd80:	beq	1cd94 <__assert_fail@plt+0xa1dc>
   1cd84:	movw	r0, #0
   1cd88:	and	r0, r0, #1
   1cd8c:	strb	r0, [fp, #-1]
   1cd90:	b	1cdc8 <__assert_fail@plt+0xa210>
   1cd94:	ldr	r0, [sp, #4]
   1cd98:	ldr	r0, [r0, #16]
   1cd9c:	ldr	r1, [fp, #-8]
   1cda0:	str	r0, [r1]
   1cda4:	movw	r1, #92	; 0x5c
   1cda8:	movt	r1, #9
   1cdac:	str	r0, [r1, #8]
   1cdb0:	movw	r0, #1
   1cdb4:	strb	r0, [r1, #5]
   1cdb8:	b	1cdbc <__assert_fail@plt+0xa204>
   1cdbc:	movw	r0, #1
   1cdc0:	and	r0, r0, #1
   1cdc4:	strb	r0, [fp, #-1]
   1cdc8:	ldrb	r0, [fp, #-1]
   1cdcc:	and	r0, r0, #1
   1cdd0:	mov	sp, fp
   1cdd4:	pop	{fp, pc}
   1cdd8:	sub	sp, sp, #8
   1cddc:	str	r0, [sp]
   1cde0:	ldr	r0, [sp]
   1cde4:	movw	r1, #0
   1cde8:	cmp	r0, r1
   1cdec:	beq	1ce20 <__assert_fail@plt+0xa268>
   1cdf0:	ldr	r0, [sp]
   1cdf4:	ldrb	r0, [r0, #17]
   1cdf8:	tst	r0, #1
   1cdfc:	beq	1ce10 <__assert_fail@plt+0xa258>
   1ce00:	movw	r0, #0
   1ce04:	and	r0, r0, #1
   1ce08:	strb	r0, [sp, #7]
   1ce0c:	b	1ce2c <__assert_fail@plt+0xa274>
   1ce10:	ldr	r0, [sp]
   1ce14:	ldr	r0, [r0, #152]	; 0x98
   1ce18:	str	r0, [sp]
   1ce1c:	b	1cde0 <__assert_fail@plt+0xa228>
   1ce20:	movw	r0, #1
   1ce24:	and	r0, r0, #1
   1ce28:	strb	r0, [sp, #7]
   1ce2c:	ldrb	r0, [sp, #7]
   1ce30:	and	r0, r0, #1
   1ce34:	add	sp, sp, #8
   1ce38:	bx	lr
   1ce3c:	sub	sp, sp, #16
   1ce40:	str	r0, [sp, #8]
   1ce44:	and	r0, r1, #1
   1ce48:	strb	r0, [sp, #7]
   1ce4c:	ldr	r0, [sp, #8]
   1ce50:	ldrb	r0, [r0]
   1ce54:	sub	r0, r0, #33	; 0x21
   1ce58:	cmp	r0, #12
   1ce5c:	str	r0, [sp]
   1ce60:	bhi	1cf40 <__assert_fail@plt+0xa388>
   1ce64:	add	r0, pc, #8
   1ce68:	ldr	r1, [sp]
   1ce6c:	ldr	r0, [r0, r1, lsl #2]
   1ce70:	mov	pc, r0
   1ce74:	andeq	ip, r1, r0, lsl pc
   1ce78:	andeq	ip, r1, r0, asr #30
   1ce7c:	andeq	ip, r1, r0, asr #30
   1ce80:	andeq	ip, r1, r0, asr #30
   1ce84:	andeq	ip, r1, r0, asr #30
   1ce88:	andeq	ip, r1, r0, asr #30
   1ce8c:	andeq	ip, r1, r0, asr #30
   1ce90:	andeq	ip, r1, r0, lsl pc
   1ce94:	ldrdeq	ip, [r1], -r8
   1ce98:	andeq	ip, r1, r0, asr #30
   1ce9c:	andeq	ip, r1, r0, asr #30
   1cea0:	ldrdeq	ip, [r1], -r8
   1cea4:	andeq	ip, r1, r8, lsr #29
   1cea8:	ldr	r0, [sp, #8]
   1ceac:	ldrsb	r0, [r0, #1]
   1ceb0:	cmp	r0, #0
   1ceb4:	beq	1cec8 <__assert_fail@plt+0xa310>
   1ceb8:	movw	r0, #1
   1cebc:	and	r0, r0, #1
   1cec0:	strb	r0, [sp, #15]
   1cec4:	b	1cf4c <__assert_fail@plt+0xa394>
   1cec8:	movw	r0, #0
   1cecc:	and	r0, r0, #1
   1ced0:	strb	r0, [sp, #15]
   1ced4:	b	1cf4c <__assert_fail@plt+0xa394>
   1ced8:	ldr	r0, [sp, #8]
   1cedc:	ldrsb	r0, [r0, #1]
   1cee0:	cmp	r0, #0
   1cee4:	beq	1cef8 <__assert_fail@plt+0xa340>
   1cee8:	movw	r0, #0
   1ceec:	and	r0, r0, #1
   1cef0:	strb	r0, [sp, #15]
   1cef4:	b	1cf4c <__assert_fail@plt+0xa394>
   1cef8:	ldrb	r0, [sp, #7]
   1cefc:	mvn	r1, #0
   1cf00:	eor	r0, r0, r1
   1cf04:	and	r0, r0, #1
   1cf08:	strb	r0, [sp, #15]
   1cf0c:	b	1cf4c <__assert_fail@plt+0xa394>
   1cf10:	ldr	r0, [sp, #8]
   1cf14:	ldrsb	r0, [r0, #1]
   1cf18:	cmp	r0, #0
   1cf1c:	beq	1cf30 <__assert_fail@plt+0xa378>
   1cf20:	movw	r0, #0
   1cf24:	and	r0, r0, #1
   1cf28:	strb	r0, [sp, #15]
   1cf2c:	b	1cf4c <__assert_fail@plt+0xa394>
   1cf30:	movw	r0, #1
   1cf34:	and	r0, r0, #1
   1cf38:	strb	r0, [sp, #15]
   1cf3c:	b	1cf4c <__assert_fail@plt+0xa394>
   1cf40:	movw	r0, #0
   1cf44:	and	r0, r0, #1
   1cf48:	strb	r0, [sp, #15]
   1cf4c:	ldrb	r0, [sp, #15]
   1cf50:	and	r0, r0, #1
   1cf54:	add	sp, sp, #16
   1cf58:	bx	lr
   1cf5c:	push	{fp, lr}
   1cf60:	mov	fp, sp
   1cf64:	sub	sp, sp, #24
   1cf68:	str	r0, [fp, #-4]
   1cf6c:	str	r1, [fp, #-8]
   1cf70:	movw	r0, #1
   1cf74:	str	r0, [sp, #12]
   1cf78:	ldr	r0, [sp, #12]
   1cf7c:	str	r0, [sp, #8]
   1cf80:	ldr	r1, [fp, #-4]
   1cf84:	cmp	r0, r1
   1cf88:	bge	1d16c <__assert_fail@plt+0xa5b4>
   1cf8c:	ldr	r0, [fp, #-8]
   1cf90:	ldr	r1, [sp, #12]
   1cf94:	add	r0, r0, r1, lsl #2
   1cf98:	ldr	r1, [r0]
   1cf9c:	movw	r0, #39550	; 0x9a7e
   1cfa0:	movt	r0, #7
   1cfa4:	bl	124c8 <strcmp@plt>
   1cfa8:	movw	r1, #0
   1cfac:	cmp	r1, r0
   1cfb0:	bne	1cfc0 <__assert_fail@plt+0xa408>
   1cfb4:	movw	r0, #2
   1cfb8:	bl	21a84 <__assert_fail@plt+0xeecc>
   1cfbc:	b	1d158 <__assert_fail@plt+0xa5a0>
   1cfc0:	ldr	r0, [fp, #-8]
   1cfc4:	ldr	r1, [sp, #12]
   1cfc8:	add	r0, r0, r1, lsl #2
   1cfcc:	ldr	r1, [r0]
   1cfd0:	movw	r0, #39553	; 0x9a81
   1cfd4:	movt	r0, #7
   1cfd8:	bl	124c8 <strcmp@plt>
   1cfdc:	movw	r1, #0
   1cfe0:	cmp	r1, r0
   1cfe4:	bne	1cff4 <__assert_fail@plt+0xa43c>
   1cfe8:	movw	r0, #1
   1cfec:	bl	21a84 <__assert_fail@plt+0xeecc>
   1cff0:	b	1d154 <__assert_fail@plt+0xa59c>
   1cff4:	ldr	r0, [fp, #-8]
   1cff8:	ldr	r1, [sp, #12]
   1cffc:	add	r0, r0, r1, lsl #2
   1d000:	ldr	r1, [r0]
   1d004:	movw	r0, #39556	; 0x9a84
   1d008:	movt	r0, #7
   1d00c:	bl	124c8 <strcmp@plt>
   1d010:	movw	r1, #0
   1d014:	cmp	r1, r0
   1d018:	bne	1d028 <__assert_fail@plt+0xa470>
   1d01c:	movw	r0, #0
   1d020:	bl	21a84 <__assert_fail@plt+0xeecc>
   1d024:	b	1d150 <__assert_fail@plt+0xa598>
   1d028:	ldr	r0, [fp, #-8]
   1d02c:	ldr	r1, [sp, #12]
   1d030:	add	r0, r0, r1, lsl #2
   1d034:	ldr	r1, [r0]
   1d038:	movw	r0, #56892	; 0xde3c
   1d03c:	movt	r0, #7
   1d040:	bl	124c8 <strcmp@plt>
   1d044:	movw	r1, #0
   1d048:	cmp	r1, r0
   1d04c:	bne	1d060 <__assert_fail@plt+0xa4a8>
   1d050:	ldr	r0, [sp, #12]
   1d054:	add	r0, r0, #1
   1d058:	str	r0, [sp, #8]
   1d05c:	b	1d16c <__assert_fail@plt+0xa5b4>
   1d060:	ldr	r0, [fp, #-8]
   1d064:	ldr	r1, [sp, #12]
   1d068:	add	r0, r0, r1, lsl #2
   1d06c:	ldr	r1, [r0]
   1d070:	movw	r0, #39559	; 0x9a87
   1d074:	movt	r0, #7
   1d078:	bl	124c8 <strcmp@plt>
   1d07c:	movw	r1, #0
   1d080:	cmp	r1, r0
   1d084:	bne	1d0f0 <__assert_fail@plt+0xa538>
   1d088:	ldr	r0, [fp, #-4]
   1d08c:	ldr	r1, [sp, #12]
   1d090:	add	r1, r1, #1
   1d094:	cmp	r0, r1
   1d098:	bgt	1d0c8 <__assert_fail@plt+0xa510>
   1d09c:	movw	r0, #39562	; 0x9a8a
   1d0a0:	movt	r0, #7
   1d0a4:	bl	12864 <gettext@plt>
   1d0a8:	movw	lr, #0
   1d0ac:	str	r0, [sp, #4]
   1d0b0:	mov	r0, lr
   1d0b4:	mov	r1, lr
   1d0b8:	ldr	r2, [sp, #4]
   1d0bc:	bl	12780 <error@plt>
   1d0c0:	movw	r0, #1
   1d0c4:	bl	1bb00 <__assert_fail@plt+0x8f48>
   1d0c8:	ldr	r0, [fp, #-8]
   1d0cc:	ldr	r1, [sp, #12]
   1d0d0:	add	r1, r1, #1
   1d0d4:	add	r0, r0, r1, lsl #2
   1d0d8:	ldr	r0, [r0]
   1d0dc:	bl	1d178 <__assert_fail@plt+0xa5c0>
   1d0e0:	ldr	r0, [sp, #12]
   1d0e4:	add	r0, r0, #1
   1d0e8:	str	r0, [sp, #12]
   1d0ec:	b	1d148 <__assert_fail@plt+0xa590>
   1d0f0:	ldr	r0, [fp, #-8]
   1d0f4:	ldr	r1, [sp, #12]
   1d0f8:	add	r0, r0, r1, lsl #2
   1d0fc:	ldr	r1, [r0]
   1d100:	movw	r0, #40622	; 0x9eae
   1d104:	movt	r0, #7
   1d108:	movw	r2, #2
   1d10c:	bl	12b58 <strncmp@plt>
   1d110:	movw	r1, #0
   1d114:	cmp	r1, r0
   1d118:	bne	1d138 <__assert_fail@plt+0xa580>
   1d11c:	ldr	r0, [fp, #-8]
   1d120:	ldr	r1, [sp, #12]
   1d124:	add	r0, r0, r1, lsl #2
   1d128:	ldr	r0, [r0]
   1d12c:	add	r0, r0, #2
   1d130:	bl	1d33c <__assert_fail@plt+0xa784>
   1d134:	b	1d144 <__assert_fail@plt+0xa58c>
   1d138:	ldr	r0, [sp, #12]
   1d13c:	str	r0, [sp, #8]
   1d140:	b	1d16c <__assert_fail@plt+0xa5b4>
   1d144:	b	1d148 <__assert_fail@plt+0xa590>
   1d148:	b	1d14c <__assert_fail@plt+0xa594>
   1d14c:	b	1d150 <__assert_fail@plt+0xa598>
   1d150:	b	1d154 <__assert_fail@plt+0xa59c>
   1d154:	b	1d158 <__assert_fail@plt+0xa5a0>
   1d158:	b	1d15c <__assert_fail@plt+0xa5a4>
   1d15c:	ldr	r0, [sp, #12]
   1d160:	add	r0, r0, #1
   1d164:	str	r0, [sp, #12]
   1d168:	b	1cf78 <__assert_fail@plt+0xa3c0>
   1d16c:	ldr	r0, [sp, #8]
   1d170:	mov	sp, fp
   1d174:	pop	{fp, pc}
   1d178:	push	{fp, lr}
   1d17c:	mov	fp, sp
   1d180:	sub	sp, sp, #32
   1d184:	sub	r1, fp, #14
   1d188:	str	r0, [fp, #-4]
   1d18c:	movw	r0, #0
   1d190:	str	r0, [fp, #-12]
   1d194:	movw	r0, #35710	; 0x8b7e
   1d198:	movt	r0, #7
   1d19c:	ldrb	r2, [r0]
   1d1a0:	strb	r2, [fp, #-14]
   1d1a4:	ldrb	r0, [r0, #1]
   1d1a8:	strb	r0, [fp, #-13]
   1d1ac:	movw	r0, #1
   1d1b0:	strb	r0, [fp, #-15]
   1d1b4:	ldr	r0, [fp, #-4]
   1d1b8:	sub	r2, fp, #12
   1d1bc:	bl	12774 <strtok_r@plt>
   1d1c0:	str	r0, [fp, #-8]
   1d1c4:	ldr	r0, [fp, #-8]
   1d1c8:	movw	r1, #0
   1d1cc:	cmp	r0, r1
   1d1d0:	beq	1d2d0 <__assert_fail@plt+0xa718>
   1d1d4:	movw	r0, #0
   1d1d8:	strb	r0, [fp, #-15]
   1d1dc:	movw	r0, #0
   1d1e0:	str	r0, [sp, #12]
   1d1e4:	ldr	r0, [sp, #12]
   1d1e8:	cmp	r0, #9
   1d1ec:	bcs	1d268 <__assert_fail@plt+0xa6b0>
   1d1f0:	ldr	r0, [sp, #12]
   1d1f4:	movw	r1, #12
   1d1f8:	mul	r0, r0, r1
   1d1fc:	movw	r1, #62800	; 0xf550
   1d200:	movt	r1, #8
   1d204:	add	r0, r1, r0
   1d208:	ldr	r0, [r0]
   1d20c:	ldr	r1, [fp, #-8]
   1d210:	bl	124c8 <strcmp@plt>
   1d214:	movw	r1, #0
   1d218:	cmp	r1, r0
   1d21c:	bne	1d254 <__assert_fail@plt+0xa69c>
   1d220:	ldr	r0, [sp, #12]
   1d224:	movw	r1, #12
   1d228:	mul	r0, r0, r1
   1d22c:	movw	r1, #62800	; 0xf550
   1d230:	movt	r1, #8
   1d234:	add	r0, r1, r0
   1d238:	ldr	r0, [r0, #4]
   1d23c:	movw	r1, #136	; 0x88
   1d240:	movt	r1, #9
   1d244:	ldr	r2, [r1, #44]	; 0x2c
   1d248:	orr	r0, r2, r0
   1d24c:	str	r0, [r1, #44]	; 0x2c
   1d250:	b	1d268 <__assert_fail@plt+0xa6b0>
   1d254:	b	1d258 <__assert_fail@plt+0xa6a0>
   1d258:	ldr	r0, [sp, #12]
   1d25c:	add	r0, r0, #1
   1d260:	str	r0, [sp, #12]
   1d264:	b	1d1e4 <__assert_fail@plt+0xa62c>
   1d268:	ldr	r0, [sp, #12]
   1d26c:	cmp	r0, #9
   1d270:	bcc	1d2b8 <__assert_fail@plt+0xa700>
   1d274:	movw	r0, #40439	; 0x9df7
   1d278:	movt	r0, #7
   1d27c:	bl	12864 <gettext@plt>
   1d280:	movw	lr, #136	; 0x88
   1d284:	movt	lr, #9
   1d288:	ldr	r1, [lr, #72]	; 0x48
   1d28c:	ldr	r2, [fp, #-4]
   1d290:	movw	lr, #0
   1d294:	str	r0, [sp, #8]
   1d298:	mov	r0, lr
   1d29c:	bl	4a828 <__assert_fail@plt+0x37c70>
   1d2a0:	movw	r1, #0
   1d2a4:	str	r0, [sp, #4]
   1d2a8:	mov	r0, r1
   1d2ac:	ldr	r2, [sp, #8]
   1d2b0:	ldr	r3, [sp, #4]
   1d2b4:	bl	12780 <error@plt>
   1d2b8:	sub	r1, fp, #14
   1d2bc:	movw	r0, #0
   1d2c0:	sub	r2, fp, #12
   1d2c4:	bl	12774 <strtok_r@plt>
   1d2c8:	str	r0, [fp, #-8]
   1d2cc:	b	1d1c4 <__assert_fail@plt+0xa60c>
   1d2d0:	ldrb	r0, [fp, #-15]
   1d2d4:	tst	r0, #1
   1d2d8:	beq	1d308 <__assert_fail@plt+0xa750>
   1d2dc:	movw	r0, #40475	; 0x9e1b
   1d2e0:	movt	r0, #7
   1d2e4:	bl	12864 <gettext@plt>
   1d2e8:	movw	lr, #0
   1d2ec:	str	r0, [sp]
   1d2f0:	mov	r0, lr
   1d2f4:	mov	r1, lr
   1d2f8:	ldr	r2, [sp]
   1d2fc:	bl	12780 <error@plt>
   1d300:	movw	r0, #1
   1d304:	bl	1bb00 <__assert_fail@plt+0x8f48>
   1d308:	movw	r0, #136	; 0x88
   1d30c:	movt	r0, #9
   1d310:	ldr	r0, [r0, #44]	; 0x2c
   1d314:	and	r0, r0, #16
   1d318:	cmp	r0, #0
   1d31c:	beq	1d330 <__assert_fail@plt+0xa778>
   1d320:	movw	r0, #1
   1d324:	bl	1bd54 <__assert_fail@plt+0x919c>
   1d328:	movw	r0, #0
   1d32c:	bl	1284c <exit@plt>
   1d330:	b	1d334 <__assert_fail@plt+0xa77c>
   1d334:	mov	sp, fp
   1d338:	pop	{fp, pc}
   1d33c:	push	{fp, lr}
   1d340:	mov	fp, sp
   1d344:	sub	sp, sp, #56	; 0x38
   1d348:	str	r0, [fp, #-4]
   1d34c:	ldr	r0, [fp, #-4]
   1d350:	ldrb	r0, [r0]
   1d354:	movw	r1, #0
   1d358:	cmp	r1, r0
   1d35c:	bne	1d384 <__assert_fail@plt+0xa7cc>
   1d360:	movw	r0, #40508	; 0x9e3c
   1d364:	movt	r0, #7
   1d368:	bl	12864 <gettext@plt>
   1d36c:	movw	lr, #1
   1d370:	str	r0, [fp, #-20]	; 0xffffffec
   1d374:	mov	r0, lr
   1d378:	movw	r1, #0
   1d37c:	ldr	r2, [fp, #-20]	; 0xffffffec
   1d380:	bl	12780 <error@plt>
   1d384:	bl	12834 <__ctype_b_loc@plt>
   1d388:	ldr	r0, [r0]
   1d38c:	ldr	lr, [fp, #-4]
   1d390:	ldrb	lr, [lr]
   1d394:	mov	r1, lr
   1d398:	add	r0, r0, lr, lsl #1
   1d39c:	ldrh	r0, [r0]
   1d3a0:	and	r0, r0, #2048	; 0x800
   1d3a4:	cmp	r0, #0
   1d3a8:	str	r1, [fp, #-24]	; 0xffffffe8
   1d3ac:	bne	1d3d4 <__assert_fail@plt+0xa81c>
   1d3b0:	movw	r0, #40572	; 0x9e7c
   1d3b4:	movt	r0, #7
   1d3b8:	bl	12864 <gettext@plt>
   1d3bc:	movw	lr, #1
   1d3c0:	str	r0, [sp, #28]
   1d3c4:	mov	r0, lr
   1d3c8:	movw	r1, #0
   1d3cc:	ldr	r2, [sp, #28]
   1d3d0:	bl	12780 <error@plt>
   1d3d4:	bl	128d0 <__errno_location@plt>
   1d3d8:	ldr	r0, [r0]
   1d3dc:	str	r0, [fp, #-16]
   1d3e0:	bl	128d0 <__errno_location@plt>
   1d3e4:	movw	lr, #0
   1d3e8:	str	lr, [r0]
   1d3ec:	ldr	r0, [fp, #-4]
   1d3f0:	sub	r1, fp, #12
   1d3f4:	movw	r2, #10
   1d3f8:	bl	1287c <strtoul@plt>
   1d3fc:	str	r0, [fp, #-8]
   1d400:	ldr	r0, [fp, #-8]
   1d404:	movw	r1, #0
   1d408:	cmp	r1, r0
   1d40c:	bne	1d444 <__assert_fail@plt+0xa88c>
   1d410:	ldr	r0, [fp, #-12]
   1d414:	ldr	r1, [fp, #-4]
   1d418:	cmp	r0, r1
   1d41c:	bne	1d444 <__assert_fail@plt+0xa88c>
   1d420:	movw	r0, #40572	; 0x9e7c
   1d424:	movt	r0, #7
   1d428:	bl	12864 <gettext@plt>
   1d42c:	movw	lr, #1
   1d430:	str	r0, [sp, #24]
   1d434:	mov	r0, lr
   1d438:	movw	r1, #0
   1d43c:	ldr	r2, [sp, #24]
   1d440:	bl	12780 <error@plt>
   1d444:	ldr	r0, [fp, #-12]
   1d448:	ldrsb	r0, [r0]
   1d44c:	cmp	r0, #0
   1d450:	beq	1d47c <__assert_fail@plt+0xa8c4>
   1d454:	movw	r0, #40625	; 0x9eb1
   1d458:	movt	r0, #7
   1d45c:	bl	12864 <gettext@plt>
   1d460:	ldr	r3, [fp, #-4]
   1d464:	movw	lr, #1
   1d468:	str	r0, [sp, #20]
   1d46c:	mov	r0, lr
   1d470:	movw	r1, #0
   1d474:	ldr	r2, [sp, #20]
   1d478:	bl	12780 <error@plt>
   1d47c:	ldr	r0, [fp, #-8]
   1d480:	mvn	r1, #0
   1d484:	cmp	r1, r0
   1d488:	bne	1d4d0 <__assert_fail@plt+0xa918>
   1d48c:	bl	128d0 <__errno_location@plt>
   1d490:	ldr	r0, [r0]
   1d494:	cmp	r0, #0
   1d498:	beq	1d4d0 <__assert_fail@plt+0xa918>
   1d49c:	bl	128d0 <__errno_location@plt>
   1d4a0:	ldr	r1, [r0]
   1d4a4:	movw	r0, #40625	; 0x9eb1
   1d4a8:	movt	r0, #7
   1d4ac:	str	r1, [sp, #16]
   1d4b0:	bl	12864 <gettext@plt>
   1d4b4:	ldr	r3, [fp, #-4]
   1d4b8:	movw	r1, #1
   1d4bc:	str	r0, [sp, #12]
   1d4c0:	mov	r0, r1
   1d4c4:	ldr	r1, [sp, #16]
   1d4c8:	ldr	r2, [sp, #12]
   1d4cc:	bl	12780 <error@plt>
   1d4d0:	ldr	r0, [fp, #-8]
   1d4d4:	movw	r1, #65535	; 0xffff
   1d4d8:	cmp	r0, r1
   1d4dc:	bls	1d508 <__assert_fail@plt+0xa950>
   1d4e0:	movw	r0, #40655	; 0x9ecf
   1d4e4:	movt	r0, #7
   1d4e8:	bl	12864 <gettext@plt>
   1d4ec:	ldr	r3, [fp, #-8]
   1d4f0:	movw	lr, #1
   1d4f4:	str	r0, [sp, #8]
   1d4f8:	mov	r0, lr
   1d4fc:	movw	r1, #0
   1d500:	ldr	r2, [sp, #8]
   1d504:	bl	12780 <error@plt>
   1d508:	ldr	r0, [fp, #-8]
   1d50c:	movw	r1, #136	; 0x88
   1d510:	movt	r1, #9
   1d514:	strh	r0, [r1, #68]	; 0x44
   1d518:	ldr	r0, [fp, #-16]
   1d51c:	str	r0, [sp, #4]
   1d520:	bl	128d0 <__errno_location@plt>
   1d524:	ldr	r1, [sp, #4]
   1d528:	str	r1, [r0]
   1d52c:	b	1d530 <__assert_fail@plt+0xa978>
   1d530:	b	1d534 <__assert_fail@plt+0xa97c>
   1d534:	b	1d538 <__assert_fail@plt+0xa980>
   1d538:	b	1d53c <__assert_fail@plt+0xa984>
   1d53c:	b	1d540 <__assert_fail@plt+0xa988>
   1d540:	mov	sp, fp
   1d544:	pop	{fp, pc}
   1d548:	push	{fp, lr}
   1d54c:	mov	fp, sp
   1d550:	sub	sp, sp, #24
   1d554:	str	r0, [fp, #-4]
   1d558:	movw	r0, #39600	; 0x9ab0
   1d55c:	movt	r0, #7
   1d560:	bl	127bc <getenv@plt>
   1d564:	movw	lr, #0
   1d568:	cmp	r0, lr
   1d56c:	beq	1d580 <__assert_fail@plt+0xa9c8>
   1d570:	ldr	r0, [fp, #-4]
   1d574:	movw	r1, #1
   1d578:	strb	r1, [r0, #17]
   1d57c:	b	1d58c <__assert_fail@plt+0xa9d4>
   1d580:	ldr	r0, [fp, #-4]
   1d584:	movw	r1, #0
   1d588:	strb	r1, [r0, #17]
   1d58c:	bl	1c034 <__assert_fail@plt+0x947c>
   1d590:	ldr	lr, [fp, #-4]
   1d594:	and	r0, r0, #1
   1d598:	strb	r0, [lr, #56]	; 0x38
   1d59c:	ldr	r0, [fp, #-4]
   1d5a0:	movw	lr, #0
   1d5a4:	str	lr, [r0, #60]	; 0x3c
   1d5a8:	mov	r0, lr
   1d5ac:	bl	12b28 <isatty@plt>
   1d5b0:	cmp	r0, #0
   1d5b4:	beq	1d5d4 <__assert_fail@plt+0xaa1c>
   1d5b8:	ldr	r0, [fp, #-4]
   1d5bc:	movw	r1, #1
   1d5c0:	strb	r1, [r0, #16]
   1d5c4:	ldr	r0, [fp, #-4]
   1d5c8:	movw	r1, #0
   1d5cc:	strb	r1, [r0, #15]
   1d5d0:	b	1d5e8 <__assert_fail@plt+0xaa30>
   1d5d4:	ldr	r0, [fp, #-4]
   1d5d8:	movw	r1, #0
   1d5dc:	strb	r1, [r0, #16]
   1d5e0:	ldr	r0, [fp, #-4]
   1d5e4:	strb	r1, [r0, #15]
   1d5e8:	ldr	r0, [fp, #-4]
   1d5ec:	ldrb	r0, [r0, #17]
   1d5f0:	tst	r0, #1
   1d5f4:	beq	1d604 <__assert_fail@plt+0xaa4c>
   1d5f8:	ldr	r0, [fp, #-4]
   1d5fc:	movw	r1, #0
   1d600:	strb	r1, [r0, #16]
   1d604:	ldr	r0, [fp, #-4]
   1d608:	movw	r1, #1
   1d60c:	strb	r1, [r0]
   1d610:	ldr	r0, [fp, #-4]
   1d614:	movw	r1, #0
   1d618:	strb	r1, [r0, #1]
   1d61c:	ldr	r0, [fp, #-4]
   1d620:	mvn	r1, #0
   1d624:	str	r1, [r0, #8]
   1d628:	ldr	r0, [fp, #-4]
   1d62c:	str	r1, [r0, #4]
   1d630:	ldr	r0, [fp, #-4]
   1d634:	add	r1, sp, #12
   1d638:	str	r0, [sp, #8]
   1d63c:	mov	r0, r1
   1d640:	bl	1d760 <__assert_fail@plt+0xaba8>
   1d644:	ldr	r0, [pc, #272]	; 1d75c <__assert_fail@plt+0xaba4>
   1d648:	ldr	r1, [sp, #12]
   1d64c:	ldr	lr, [sp, #8]
   1d650:	str	r1, [lr, #20]
   1d654:	ldr	r1, [sp, #16]
   1d658:	str	r1, [lr, #24]
   1d65c:	ldr	r1, [fp, #-4]
   1d660:	ldr	r1, [r1, #20]
   1d664:	sub	r0, r1, r0
   1d668:	ldr	r1, [fp, #-4]
   1d66c:	str	r0, [r1, #28]
   1d670:	ldr	r0, [fp, #-4]
   1d674:	ldr	r0, [r0, #24]
   1d678:	ldr	r1, [fp, #-4]
   1d67c:	str	r0, [r1, #32]
   1d680:	ldr	r0, [fp, #-4]
   1d684:	movw	r1, #0
   1d688:	strb	r1, [r0, #36]	; 0x24
   1d68c:	ldr	r0, [fp, #-4]
   1d690:	strb	r1, [r0, #13]
   1d694:	ldr	r0, [fp, #-4]
   1d698:	strb	r1, [r0, #14]
   1d69c:	ldr	r0, [fp, #-4]
   1d6a0:	ldrb	r0, [r0, #17]
   1d6a4:	tst	r0, #1
   1d6a8:	beq	1d6bc <__assert_fail@plt+0xab04>
   1d6ac:	ldr	r0, [fp, #-4]
   1d6b0:	movw	r1, #512	; 0x200
   1d6b4:	str	r1, [r0, #40]	; 0x28
   1d6b8:	b	1d6c8 <__assert_fail@plt+0xab10>
   1d6bc:	ldr	r0, [fp, #-4]
   1d6c0:	movw	r1, #1024	; 0x400
   1d6c4:	str	r1, [r0, #40]	; 0x28
   1d6c8:	ldr	r0, [fp, #-4]
   1d6cc:	movw	r1, #0
   1d6d0:	str	r1, [r0, #44]	; 0x2c
   1d6d4:	ldr	r0, [fp, #-4]
   1d6d8:	movw	r1, #2
   1d6dc:	strh	r1, [r0, #68]	; 0x44
   1d6e0:	movw	r0, #39616	; 0x9ac0
   1d6e4:	movt	r0, #7
   1d6e8:	bl	127bc <getenv@plt>
   1d6ec:	movw	r1, #0
   1d6f0:	cmp	r0, r1
   1d6f4:	beq	1d71c <__assert_fail@plt+0xab64>
   1d6f8:	movw	r0, #39632	; 0x9ad0
   1d6fc:	movt	r0, #7
   1d700:	bl	12864 <gettext@plt>
   1d704:	movw	lr, #1
   1d708:	str	r0, [sp, #4]
   1d70c:	mov	r0, lr
   1d710:	movw	r1, #0
   1d714:	ldr	r2, [sp, #4]
   1d718:	bl	12780 <error@plt>
   1d71c:	ldr	r0, [fp, #-4]
   1d720:	movw	r1, #0
   1d724:	strb	r1, [r0, #12]
   1d728:	movw	r0, #0
   1d72c:	bl	21a84 <__assert_fail@plt+0xeecc>
   1d730:	ldr	r0, [fp, #-4]
   1d734:	movw	r1, #8
   1d738:	str	r1, [r0, #72]	; 0x48
   1d73c:	ldr	r0, [fp, #-4]
   1d740:	movw	r1, #0
   1d744:	str	r1, [r0, #76]	; 0x4c
   1d748:	ldr	r0, [fp, #-4]
   1d74c:	movw	r1, #0
   1d750:	strb	r1, [r0, #80]	; 0x50
   1d754:	mov	sp, fp
   1d758:	pop	{fp, pc}
   1d75c:	andeq	r5, r1, r0, lsl #3
   1d760:	push	{fp, lr}
   1d764:	mov	fp, sp
   1d768:	sub	sp, sp, #16
   1d76c:	add	r1, sp, #8
   1d770:	str	r0, [sp]
   1d774:	mov	r0, r1
   1d778:	movw	r1, #0
   1d77c:	bl	12744 <gettimeofday@plt>
   1d780:	movw	r1, #0
   1d784:	cmp	r1, r0
   1d788:	bne	1d7ac <__assert_fail@plt+0xabf4>
   1d78c:	ldr	r0, [sp, #8]
   1d790:	ldr	r1, [sp]
   1d794:	str	r0, [r1]
   1d798:	ldr	r0, [sp, #12]
   1d79c:	movw	r2, #1000	; 0x3e8
   1d7a0:	mul	r0, r0, r2
   1d7a4:	str	r0, [r1, #4]
   1d7a8:	b	1d7fc <__assert_fail@plt+0xac44>
   1d7ac:	movw	r0, #0
   1d7b0:	bl	12618 <time@plt>
   1d7b4:	str	r0, [sp, #4]
   1d7b8:	ldr	r0, [sp, #4]
   1d7bc:	cmn	r0, #1
   1d7c0:	beq	1d7c8 <__assert_fail@plt+0xac10>
   1d7c4:	b	1d7e8 <__assert_fail@plt+0xac30>
   1d7c8:	movw	r0, #40759	; 0x9f37
   1d7cc:	movt	r0, #7
   1d7d0:	movw	r1, #37351	; 0x91e7
   1d7d4:	movt	r1, #7
   1d7d8:	movw	r2, #978	; 0x3d2
   1d7dc:	movw	r3, #40775	; 0x9f47
   1d7e0:	movt	r3, #7
   1d7e4:	bl	12bb8 <__assert_fail@plt>
   1d7e8:	ldr	r0, [sp, #4]
   1d7ec:	ldr	r1, [sp]
   1d7f0:	str	r0, [r1]
   1d7f4:	movw	r0, #0
   1d7f8:	str	r0, [r1, #4]
   1d7fc:	mov	sp, fp
   1d800:	pop	{fp, pc}
   1d804:	push	{fp, lr}
   1d808:	mov	fp, sp
   1d80c:	sub	sp, sp, #24
   1d810:	str	r0, [fp, #-8]
   1d814:	str	r1, [sp, #12]
   1d818:	str	r2, [sp, #8]
   1d81c:	ldr	r0, [sp, #8]
   1d820:	ldr	r1, [r0, #164]	; 0xa4
   1d824:	add	r1, r1, #1
   1d828:	str	r1, [r0, #164]	; 0xa4
   1d82c:	ldr	r0, [sp, #8]
   1d830:	ldrb	r0, [r0, #18]
   1d834:	tst	r0, #1
   1d838:	bne	1d85c <__assert_fail@plt+0xaca4>
   1d83c:	ldr	r0, [sp, #8]
   1d840:	ldrb	r0, [r0, #19]
   1d844:	tst	r0, #1
   1d848:	bne	1d85c <__assert_fail@plt+0xaca4>
   1d84c:	ldr	r0, [sp, #8]
   1d850:	ldrb	r0, [r0, #20]
   1d854:	tst	r0, #1
   1d858:	beq	1d888 <__assert_fail@plt+0xacd0>
   1d85c:	ldr	r0, [fp, #-8]
   1d860:	ldr	r1, [sp, #12]
   1d864:	ldr	r2, [sp, #8]
   1d868:	bl	1d8f8 <__assert_fail@plt+0xad40>
   1d86c:	cmp	r0, #0
   1d870:	beq	1d884 <__assert_fail@plt+0xaccc>
   1d874:	movw	r0, #0
   1d878:	and	r0, r0, #1
   1d87c:	strb	r0, [fp, #-1]
   1d880:	b	1d8e8 <__assert_fail@plt+0xad30>
   1d884:	b	1d888 <__assert_fail@plt+0xacd0>
   1d888:	ldr	r0, [sp, #8]
   1d88c:	ldr	r0, [r0]
   1d890:	ldr	r1, [fp, #-8]
   1d894:	ldr	r2, [sp, #12]
   1d898:	ldr	r3, [sp, #8]
   1d89c:	str	r0, [sp, #4]
   1d8a0:	mov	r0, r1
   1d8a4:	mov	r1, r2
   1d8a8:	mov	r2, r3
   1d8ac:	ldr	r3, [sp, #4]
   1d8b0:	blx	r3
   1d8b4:	tst	r0, #1
   1d8b8:	beq	1d8dc <__assert_fail@plt+0xad24>
   1d8bc:	ldr	r0, [sp, #8]
   1d8c0:	ldr	r1, [r0, #168]	; 0xa8
   1d8c4:	add	r1, r1, #1
   1d8c8:	str	r1, [r0, #168]	; 0xa8
   1d8cc:	movw	r0, #1
   1d8d0:	and	r0, r0, #1
   1d8d4:	strb	r0, [fp, #-1]
   1d8d8:	b	1d8e8 <__assert_fail@plt+0xad30>
   1d8dc:	movw	r0, #0
   1d8e0:	and	r0, r0, #1
   1d8e4:	strb	r0, [fp, #-1]
   1d8e8:	ldrb	r0, [fp, #-1]
   1d8ec:	and	r0, r0, #1
   1d8f0:	mov	sp, fp
   1d8f4:	pop	{fp, pc}
   1d8f8:	push	{fp, lr}
   1d8fc:	mov	fp, sp
   1d900:	sub	sp, sp, #24
   1d904:	str	r0, [fp, #-8]
   1d908:	str	r1, [sp, #12]
   1d90c:	str	r2, [sp, #8]
   1d910:	movw	r0, #0
   1d914:	strb	r0, [sp, #7]
   1d918:	ldr	r0, [sp, #8]
   1d91c:	ldrb	r0, [r0, #18]
   1d920:	tst	r0, #1
   1d924:	beq	1d948 <__assert_fail@plt+0xad90>
   1d928:	movw	r0, #92	; 0x5c
   1d92c:	movt	r0, #9
   1d930:	ldrb	r0, [r0, #4]
   1d934:	tst	r0, #1
   1d938:	bne	1d948 <__assert_fail@plt+0xad90>
   1d93c:	movw	r0, #1
   1d940:	strb	r0, [sp, #7]
   1d944:	b	1d9f0 <__assert_fail@plt+0xae38>
   1d948:	ldr	r0, [sp, #8]
   1d94c:	ldrb	r0, [r0, #19]
   1d950:	tst	r0, #1
   1d954:	beq	1d978 <__assert_fail@plt+0xadc0>
   1d958:	movw	r0, #92	; 0x5c
   1d95c:	movt	r0, #9
   1d960:	ldrb	r0, [r0, #5]
   1d964:	tst	r0, #1
   1d968:	bne	1d978 <__assert_fail@plt+0xadc0>
   1d96c:	movw	r0, #1
   1d970:	strb	r0, [sp, #7]
   1d974:	b	1d9ec <__assert_fail@plt+0xae34>
   1d978:	ldr	r0, [sp, #8]
   1d97c:	ldrb	r0, [r0, #20]
   1d980:	tst	r0, #1
   1d984:	beq	1d9e8 <__assert_fail@plt+0xae30>
   1d988:	ldr	r0, [sp, #12]
   1d98c:	ldr	r1, [r0, #96]	; 0x60
   1d990:	ldr	r0, [r0, #100]	; 0x64
   1d994:	orr	r0, r1, r0
   1d998:	cmp	r0, #0
   1d99c:	bne	1d9b0 <__assert_fail@plt+0xadf8>
   1d9a0:	b	1d9a4 <__assert_fail@plt+0xadec>
   1d9a4:	movw	r0, #1
   1d9a8:	strb	r0, [sp, #7]
   1d9ac:	b	1d9e4 <__assert_fail@plt+0xae2c>
   1d9b0:	movw	r0, #92	; 0x5c
   1d9b4:	movt	r0, #9
   1d9b8:	ldrb	r0, [r0, #5]
   1d9bc:	tst	r0, #1
   1d9c0:	beq	1d9d8 <__assert_fail@plt+0xae20>
   1d9c4:	ldr	r0, [sp, #12]
   1d9c8:	ldr	r0, [r0, #16]
   1d9cc:	and	r0, r0, #61440	; 0xf000
   1d9d0:	cmp	r0, #16384	; 0x4000
   1d9d4:	bne	1d9e0 <__assert_fail@plt+0xae28>
   1d9d8:	movw	r0, #1
   1d9dc:	strb	r0, [sp, #7]
   1d9e0:	b	1d9e4 <__assert_fail@plt+0xae2c>
   1d9e4:	b	1d9e8 <__assert_fail@plt+0xae30>
   1d9e8:	b	1d9ec <__assert_fail@plt+0xae34>
   1d9ec:	b	1d9f0 <__assert_fail@plt+0xae38>
   1d9f0:	ldrb	r0, [sp, #7]
   1d9f4:	tst	r0, #1
   1d9f8:	beq	1da2c <__assert_fail@plt+0xae74>
   1d9fc:	ldr	r0, [fp, #-8]
   1da00:	movw	r1, #92	; 0x5c
   1da04:	movt	r1, #9
   1da08:	ldr	r1, [r1, #12]
   1da0c:	ldr	r2, [sp, #12]
   1da10:	bl	1beb8 <__assert_fail@plt+0x9300>
   1da14:	cmp	r0, #0
   1da18:	beq	1da28 <__assert_fail@plt+0xae70>
   1da1c:	mvn	r0, #0
   1da20:	str	r0, [fp, #-4]
   1da24:	b	1da34 <__assert_fail@plt+0xae7c>
   1da28:	b	1da2c <__assert_fail@plt+0xae74>
   1da2c:	movw	r0, #0
   1da30:	str	r0, [fp, #-4]
   1da34:	ldr	r0, [fp, #-4]
   1da38:	mov	sp, fp
   1da3c:	pop	{fp, pc}
   1da40:	sub	sp, sp, #8
   1da44:	str	r0, [sp, #4]
   1da48:	ldr	r0, [sp, #4]
   1da4c:	movw	r1, #20760	; 0x5118
   1da50:	movt	r1, #1
   1da54:	cmp	r1, r0
   1da58:	movw	r0, #1
   1da5c:	str	r0, [sp]
   1da60:	beq	1da80 <__assert_fail@plt+0xaec8>
   1da64:	ldr	r0, [sp, #4]
   1da68:	movw	r1, #24336	; 0x5f10
   1da6c:	movt	r1, #1
   1da70:	cmp	r1, r0
   1da74:	movw	r0, #0
   1da78:	moveq	r0, #1
   1da7c:	str	r0, [sp]
   1da80:	ldr	r0, [sp]
   1da84:	and	r0, r0, #1
   1da88:	add	sp, sp, #8
   1da8c:	bx	lr
   1da90:	push	{fp, lr}
   1da94:	mov	fp, sp
   1da98:	sub	sp, sp, #8
   1da9c:	str	r0, [sp, #4]
   1daa0:	str	r1, [sp]
   1daa4:	ldr	r0, [sp, #4]
   1daa8:	movw	r1, #136	; 0x88
   1daac:	movt	r1, #9
   1dab0:	ldr	r1, [r1, #72]	; 0x48
   1dab4:	ldr	r2, [sp]
   1dab8:	bl	4a828 <__assert_fail@plt+0x37c70>
   1dabc:	mov	sp, fp
   1dac0:	pop	{fp, pc}
   1dac4:	push	{fp, lr}
   1dac8:	mov	fp, sp
   1dacc:	sub	sp, sp, #32
   1dad0:	str	r0, [fp, #-4]
   1dad4:	str	r1, [fp, #-8]
   1dad8:	and	r0, r2, #1
   1dadc:	strb	r0, [fp, #-9]
   1dae0:	str	r3, [sp, #16]
   1dae4:	ldrb	r0, [fp, #-9]
   1dae8:	tst	r0, #1
   1daec:	beq	1db04 <__assert_fail@plt+0xaf4c>
   1daf0:	movw	r0, #92	; 0x5c
   1daf4:	movt	r0, #9
   1daf8:	ldrb	r0, [r0, #40]	; 0x28
   1dafc:	tst	r0, #1
   1db00:	bne	1db58 <__assert_fail@plt+0xafa0>
   1db04:	ldr	r0, [fp, #-4]
   1db08:	ldr	r1, [fp, #-8]
   1db0c:	ldr	r2, [sp, #16]
   1db10:	movw	r3, #0
   1db14:	str	r0, [sp, #12]
   1db18:	mov	r0, r3
   1db1c:	str	r1, [sp, #8]
   1db20:	mov	r1, r2
   1db24:	bl	1da90 <__assert_fail@plt+0xaed8>
   1db28:	ldr	r1, [sp, #12]
   1db2c:	str	r0, [sp, #4]
   1db30:	mov	r0, r1
   1db34:	ldr	r1, [sp, #8]
   1db38:	movw	r2, #59431	; 0xe827
   1db3c:	movt	r2, #7
   1db40:	ldr	r3, [sp, #4]
   1db44:	bl	12780 <error@plt>
   1db48:	movw	r0, #92	; 0x5c
   1db4c:	movt	r0, #9
   1db50:	movw	r1, #1
   1db54:	str	r1, [r0, #28]
   1db58:	ldrb	r0, [fp, #-9]
   1db5c:	tst	r0, #1
   1db60:	beq	1db74 <__assert_fail@plt+0xafbc>
   1db64:	movw	r0, #92	; 0x5c
   1db68:	movt	r0, #9
   1db6c:	movw	r1, #1
   1db70:	strb	r1, [r0, #40]	; 0x28
   1db74:	mov	sp, fp
   1db78:	pop	{fp, pc}
   1db7c:	push	{fp, lr}
   1db80:	mov	fp, sp
   1db84:	sub	sp, sp, #8
   1db88:	str	r0, [sp, #4]
   1db8c:	str	r1, [sp]
   1db90:	ldr	r1, [sp, #4]
   1db94:	ldr	r3, [sp]
   1db98:	movw	r0, #1
   1db9c:	movw	r2, #1
   1dba0:	and	r2, r2, #1
   1dba4:	bl	1dac4 <__assert_fail@plt+0xaf0c>
   1dba8:	bl	12b64 <abort@plt>
   1dbac:	push	{fp, lr}
   1dbb0:	mov	fp, sp
   1dbb4:	sub	sp, sp, #8
   1dbb8:	str	r0, [sp, #4]
   1dbbc:	str	r1, [sp]
   1dbc0:	movw	r0, #92	; 0x5c
   1dbc4:	movt	r0, #9
   1dbc8:	movw	r1, #0
   1dbcc:	strb	r1, [r0, #40]	; 0x28
   1dbd0:	ldr	r1, [sp, #4]
   1dbd4:	ldr	r3, [sp]
   1dbd8:	movw	r0, #1
   1dbdc:	movw	r2, #0
   1dbe0:	and	r2, r2, #1
   1dbe4:	bl	1dac4 <__assert_fail@plt+0xaf0c>
   1dbe8:	bl	12b64 <abort@plt>
   1dbec:	push	{fp, lr}
   1dbf0:	mov	fp, sp
   1dbf4:	sub	sp, sp, #16
   1dbf8:	str	r0, [fp, #-4]
   1dbfc:	ldr	r0, [fp, #-4]
   1dc00:	ldr	r0, [r0, #104]	; 0x68
   1dc04:	ldr	r1, [fp, #-4]
   1dc08:	movw	r2, #56428	; 0xdc6c
   1dc0c:	movt	r2, #1
   1dc10:	str	r1, [sp, #8]
   1dc14:	mov	r1, r2
   1dc18:	ldr	r2, [sp, #8]
   1dc1c:	bl	28ec0 <__assert_fail@plt+0x16308>
   1dc20:	ldr	r1, [fp, #-4]
   1dc24:	ldr	r1, [r1, #104]	; 0x68
   1dc28:	movw	r2, #63304	; 0xf748
   1dc2c:	movt	r2, #8
   1dc30:	ldr	r2, [r2]
   1dc34:	cmp	r1, r2
   1dc38:	str	r0, [sp, #4]
   1dc3c:	beq	1dc64 <__assert_fail@plt+0xb0ac>
   1dc40:	ldr	r0, [fp, #-4]
   1dc44:	ldr	r0, [r0, #104]	; 0x68
   1dc48:	bl	4aebc <__assert_fail@plt+0x38304>
   1dc4c:	ldr	r0, [fp, #-4]
   1dc50:	ldr	r0, [r0, #104]	; 0x68
   1dc54:	bl	50c68 <__assert_fail@plt+0x3e0b0>
   1dc58:	ldr	r0, [fp, #-4]
   1dc5c:	movw	lr, #0
   1dc60:	str	lr, [r0, #104]	; 0x68
   1dc64:	mov	sp, fp
   1dc68:	pop	{fp, pc}
   1dc6c:	push	{fp, lr}
   1dc70:	mov	fp, sp
   1dc74:	sub	sp, sp, #8
   1dc78:	str	r0, [sp, #4]
   1dc7c:	ldr	r0, [sp, #4]
   1dc80:	str	r0, [sp]
   1dc84:	ldr	r0, [sp]
   1dc88:	add	r0, r0, #4
   1dc8c:	ldr	r1, [sp]
   1dc90:	add	r1, r1, #48	; 0x30
   1dc94:	bl	28384 <__assert_fail@plt+0x157cc>
   1dc98:	movw	r0, #0
   1dc9c:	mov	sp, fp
   1dca0:	pop	{fp, pc}
   1dca4:	push	{fp, lr}
   1dca8:	mov	fp, sp
   1dcac:	sub	sp, sp, #16
   1dcb0:	str	r0, [sp, #8]
   1dcb4:	movw	r0, #8
   1dcb8:	bl	549ac <__assert_fail@plt+0x41df4>
   1dcbc:	str	r0, [sp, #4]
   1dcc0:	ldr	r0, [sp, #4]
   1dcc4:	movw	lr, #0
   1dcc8:	cmp	r0, lr
   1dccc:	beq	1dd68 <__assert_fail@plt+0xb1b0>
   1dcd0:	ldr	r0, [sp, #8]
   1dcd4:	bl	12648 <strdup@plt>
   1dcd8:	ldr	lr, [sp, #4]
   1dcdc:	str	r0, [lr]
   1dce0:	ldr	r0, [sp, #4]
   1dce4:	ldr	r0, [r0]
   1dce8:	movw	lr, #0
   1dcec:	cmp	r0, lr
   1dcf0:	beq	1dd5c <__assert_fail@plt+0xb1a4>
   1dcf4:	movw	r0, #11
   1dcf8:	movw	r1, #0
   1dcfc:	movw	r2, #56700	; 0xdd7c
   1dd00:	movt	r2, #1
   1dd04:	movw	r3, #56800	; 0xdde0
   1dd08:	movt	r3, #1
   1dd0c:	movw	ip, #56948	; 0xde74
   1dd10:	movt	ip, #1
   1dd14:	str	ip, [sp]
   1dd18:	bl	2d52c <__assert_fail@plt+0x1a974>
   1dd1c:	ldr	r1, [sp, #4]
   1dd20:	str	r0, [r1, #4]
   1dd24:	ldr	r0, [sp, #4]
   1dd28:	ldr	r0, [r0, #4]
   1dd2c:	movw	r1, #0
   1dd30:	cmp	r0, r1
   1dd34:	beq	1dd44 <__assert_fail@plt+0xb18c>
   1dd38:	ldr	r0, [sp, #4]
   1dd3c:	str	r0, [fp, #-4]
   1dd40:	b	1dd70 <__assert_fail@plt+0xb1b8>
   1dd44:	ldr	r0, [sp, #4]
   1dd48:	ldr	r0, [r0]
   1dd4c:	bl	50c68 <__assert_fail@plt+0x3e0b0>
   1dd50:	ldr	r0, [sp, #4]
   1dd54:	bl	50c68 <__assert_fail@plt+0x3e0b0>
   1dd58:	b	1dd64 <__assert_fail@plt+0xb1ac>
   1dd5c:	ldr	r0, [sp, #4]
   1dd60:	bl	50c68 <__assert_fail@plt+0x3e0b0>
   1dd64:	b	1dd68 <__assert_fail@plt+0xb1b0>
   1dd68:	movw	r0, #0
   1dd6c:	str	r0, [fp, #-4]
   1dd70:	ldr	r0, [fp, #-4]
   1dd74:	mov	sp, fp
   1dd78:	pop	{fp, pc}
   1dd7c:	push	{fp, lr}
   1dd80:	mov	fp, sp
   1dd84:	sub	sp, sp, #24
   1dd88:	str	r0, [fp, #-4]
   1dd8c:	str	r1, [fp, #-8]
   1dd90:	ldr	r0, [fp, #-4]
   1dd94:	str	r0, [sp, #12]
   1dd98:	ldr	r0, [sp, #12]
   1dd9c:	ldr	r1, [r0]
   1dda0:	ldr	r2, [r0, #4]
   1dda4:	ldr	r3, [r0, #8]
   1dda8:	ldr	r0, [r0, #12]
   1ddac:	eor	r1, r1, r3
   1ddb0:	eor	r0, r2, r0
   1ddb4:	ldr	r2, [fp, #-8]
   1ddb8:	mov	r3, #0
   1ddbc:	str	r0, [sp, #8]
   1ddc0:	mov	r0, r1
   1ddc4:	ldr	r1, [sp, #8]
   1ddc8:	bl	77854 <__assert_fail@plt+0x64c9c>
   1ddcc:	str	r0, [sp, #4]
   1ddd0:	mov	r0, r2
   1ddd4:	str	r1, [sp]
   1ddd8:	mov	sp, fp
   1dddc:	pop	{fp, pc}
   1dde0:	sub	sp, sp, #20
   1dde4:	str	r0, [sp, #16]
   1dde8:	str	r1, [sp, #12]
   1ddec:	ldr	r0, [sp, #16]
   1ddf0:	str	r0, [sp, #8]
   1ddf4:	ldr	r0, [sp, #12]
   1ddf8:	str	r0, [sp, #4]
   1ddfc:	ldr	r0, [sp, #8]
   1de00:	ldr	r1, [r0, #8]
   1de04:	ldr	r0, [r0, #12]
   1de08:	ldr	r2, [sp, #4]
   1de0c:	ldr	r3, [r2, #8]
   1de10:	ldr	r2, [r2, #12]
   1de14:	eor	r0, r0, r2
   1de18:	eor	r1, r1, r3
   1de1c:	orr	r0, r1, r0
   1de20:	mov	r1, #0
   1de24:	cmp	r0, #0
   1de28:	str	r1, [sp]
   1de2c:	bne	1de64 <__assert_fail@plt+0xb2ac>
   1de30:	b	1de34 <__assert_fail@plt+0xb27c>
   1de34:	ldr	r0, [sp, #8]
   1de38:	ldr	r1, [r0]
   1de3c:	ldr	r0, [r0, #4]
   1de40:	ldr	r2, [sp, #4]
   1de44:	ldr	r3, [r2]
   1de48:	ldr	r2, [r2, #4]
   1de4c:	eor	r0, r0, r2
   1de50:	eor	r1, r1, r3
   1de54:	orr	r0, r1, r0
   1de58:	clz	r0, r0
   1de5c:	lsr	r0, r0, #5
   1de60:	str	r0, [sp]
   1de64:	ldr	r0, [sp]
   1de68:	and	r0, r0, #1
   1de6c:	add	sp, sp, #20
   1de70:	bx	lr
   1de74:	push	{fp, lr}
   1de78:	mov	fp, sp
   1de7c:	sub	sp, sp, #8
   1de80:	str	r0, [sp, #4]
   1de84:	ldr	r0, [sp, #4]
   1de88:	str	r0, [sp]
   1de8c:	ldr	r0, [sp]
   1de90:	ldr	r0, [r0, #20]
   1de94:	movw	r1, #0
   1de98:	cmp	r0, r1
   1de9c:	beq	1ded0 <__assert_fail@plt+0xb318>
   1dea0:	ldr	r0, [sp]
   1dea4:	ldr	r0, [r0, #20]
   1dea8:	bl	12990 <fclose@plt>
   1deac:	movw	lr, #0
   1deb0:	cmp	lr, r0
   1deb4:	beq	1decc <__assert_fail@plt+0xb314>
   1deb8:	bl	128d0 <__errno_location@plt>
   1debc:	ldr	r0, [r0]
   1dec0:	ldr	lr, [sp]
   1dec4:	ldr	r1, [lr, #16]
   1dec8:	bl	1dbac <__assert_fail@plt+0xaff4>
   1decc:	b	1ded0 <__assert_fail@plt+0xb318>
   1ded0:	ldr	r0, [sp]
   1ded4:	ldr	r0, [r0, #16]
   1ded8:	bl	50c68 <__assert_fail@plt+0x3e0b0>
   1dedc:	ldr	r0, [sp]
   1dee0:	bl	50c68 <__assert_fail@plt+0x3e0b0>
   1dee4:	mov	sp, fp
   1dee8:	pop	{fp, pc}
   1deec:	push	{fp, lr}
   1def0:	mov	fp, sp
   1def4:	sub	sp, sp, #8
   1def8:	str	r0, [sp, #4]
   1defc:	ldr	r0, [sp, #4]
   1df00:	str	r0, [sp]
   1df04:	ldr	r0, [sp]
   1df08:	ldr	r0, [r0]
   1df0c:	bl	50c68 <__assert_fail@plt+0x3e0b0>
   1df10:	ldr	r0, [sp]
   1df14:	ldr	r0, [r0, #4]
   1df18:	bl	2da80 <__assert_fail@plt+0x1aec8>
   1df1c:	mov	sp, fp
   1df20:	pop	{fp, pc}
   1df24:	push	{fp, lr}
   1df28:	mov	fp, sp
   1df2c:	sub	sp, sp, #152	; 0x98
   1df30:	str	r0, [fp, #-8]
   1df34:	str	r1, [fp, #-12]
   1df38:	ldr	r0, [fp, #-8]
   1df3c:	str	r0, [fp, #-16]
   1df40:	movw	r0, #24
   1df44:	bl	549ac <__assert_fail@plt+0x41df4>
   1df48:	str	r0, [fp, #-20]	; 0xffffffec
   1df4c:	ldr	r0, [fp, #-20]	; 0xffffffec
   1df50:	movw	r1, #0
   1df54:	cmp	r0, r1
   1df58:	bne	1df68 <__assert_fail@plt+0xb3b0>
   1df5c:	movw	r0, #0
   1df60:	str	r0, [fp, #-4]
   1df64:	b	1e118 <__assert_fail@plt+0xb560>
   1df68:	ldr	r0, [fp, #-12]
   1df6c:	bl	12648 <strdup@plt>
   1df70:	ldr	lr, [fp, #-20]	; 0xffffffec
   1df74:	str	r0, [lr, #16]
   1df78:	ldr	r0, [fp, #-20]	; 0xffffffec
   1df7c:	ldr	r0, [r0, #16]
   1df80:	movw	lr, #0
   1df84:	cmp	lr, r0
   1df88:	bne	1dfa0 <__assert_fail@plt+0xb3e8>
   1df8c:	ldr	r0, [fp, #-20]	; 0xffffffec
   1df90:	bl	50c68 <__assert_fail@plt+0x3e0b0>
   1df94:	movw	r0, #0
   1df98:	str	r0, [fp, #-4]
   1df9c:	b	1e118 <__assert_fail@plt+0xb560>
   1dfa0:	ldr	r0, [fp, #-12]
   1dfa4:	ldr	r1, [fp, #-16]
   1dfa8:	ldr	r1, [r1]
   1dfac:	bl	2cbf4 <__assert_fail@plt+0x1a03c>
   1dfb0:	ldr	r1, [fp, #-20]	; 0xffffffec
   1dfb4:	str	r0, [r1, #20]
   1dfb8:	movw	r1, #0
   1dfbc:	cmp	r1, r0
   1dfc0:	bne	1dfd8 <__assert_fail@plt+0xb420>
   1dfc4:	ldr	r0, [fp, #-20]	; 0xffffffec
   1dfc8:	bl	1de74 <__assert_fail@plt+0xb2bc>
   1dfcc:	movw	r0, #0
   1dfd0:	str	r0, [fp, #-4]
   1dfd4:	b	1e118 <__assert_fail@plt+0xb560>
   1dfd8:	ldr	r0, [fp, #-20]	; 0xffffffec
   1dfdc:	ldr	r0, [r0, #20]
   1dfe0:	bl	12948 <fileno@plt>
   1dfe4:	str	r0, [sp, #20]
   1dfe8:	ldr	r0, [sp, #20]
   1dfec:	cmp	r0, #0
   1dff0:	blt	1dff8 <__assert_fail@plt+0xb440>
   1dff4:	b	1e018 <__assert_fail@plt+0xb460>
   1dff8:	movw	r0, #32266	; 0x7e0a
   1dffc:	movt	r0, #7
   1e000:	movw	r1, #40801	; 0x9f61
   1e004:	movt	r1, #7
   1e008:	movw	r2, #166	; 0xa6
   1e00c:	movw	r3, #40813	; 0x9f6d
   1e010:	movt	r3, #7
   1e014:	bl	12bb8 <__assert_fail@plt>
   1e018:	ldr	r0, [sp, #20]
   1e01c:	movw	r1, #1
   1e020:	and	r1, r1, #1
   1e024:	bl	2c0e0 <__assert_fail@plt+0x19528>
   1e028:	ldr	r1, [sp, #20]
   1e02c:	str	r0, [sp, #8]
   1e030:	mov	r0, r1
   1e034:	add	r1, sp, #24
   1e038:	bl	77a94 <__assert_fail@plt+0x64edc>
   1e03c:	cmp	r0, #0
   1e040:	bge	1e058 <__assert_fail@plt+0xb4a0>
   1e044:	ldr	r0, [fp, #-20]	; 0xffffffec
   1e048:	bl	1de74 <__assert_fail@plt+0xb2bc>
   1e04c:	movw	r0, #0
   1e050:	str	r0, [fp, #-4]
   1e054:	b	1e118 <__assert_fail@plt+0xb560>
   1e058:	ldr	r0, [sp, #24]
   1e05c:	ldr	r1, [sp, #28]
   1e060:	ldr	r2, [fp, #-20]	; 0xffffffec
   1e064:	str	r1, [r2, #4]
   1e068:	str	r0, [r2]
   1e06c:	ldr	r0, [sp, #120]	; 0x78
   1e070:	ldr	r1, [sp, #124]	; 0x7c
   1e074:	ldr	r2, [fp, #-20]	; 0xffffffec
   1e078:	str	r1, [r2, #12]
   1e07c:	str	r0, [r2, #8]
   1e080:	ldr	r0, [fp, #-16]
   1e084:	ldr	r0, [r0, #4]
   1e088:	ldr	r1, [fp, #-20]	; 0xffffffec
   1e08c:	bl	2d010 <__assert_fail@plt+0x1a458>
   1e090:	str	r0, [sp, #16]
   1e094:	ldr	r0, [sp, #16]
   1e098:	movw	r1, #0
   1e09c:	cmp	r0, r1
   1e0a0:	beq	1e0bc <__assert_fail@plt+0xb504>
   1e0a4:	ldr	r0, [fp, #-20]	; 0xffffffec
   1e0a8:	bl	1de74 <__assert_fail@plt+0xb2bc>
   1e0ac:	ldr	r0, [sp, #16]
   1e0b0:	ldr	r0, [r0, #20]
   1e0b4:	str	r0, [fp, #-4]
   1e0b8:	b	1e118 <__assert_fail@plt+0xb560>
   1e0bc:	ldr	r0, [fp, #-16]
   1e0c0:	ldr	r0, [r0, #4]
   1e0c4:	ldr	r1, [fp, #-20]	; 0xffffffec
   1e0c8:	bl	2e558 <__assert_fail@plt+0x1b9a0>
   1e0cc:	movw	r1, #0
   1e0d0:	cmp	r0, r1
   1e0d4:	beq	1e0e8 <__assert_fail@plt+0xb530>
   1e0d8:	ldr	r0, [fp, #-20]	; 0xffffffec
   1e0dc:	ldr	r0, [r0, #20]
   1e0e0:	str	r0, [fp, #-4]
   1e0e4:	b	1e118 <__assert_fail@plt+0xb560>
   1e0e8:	bl	128d0 <__errno_location@plt>
   1e0ec:	ldr	r0, [r0]
   1e0f0:	str	r0, [sp, #12]
   1e0f4:	ldr	r0, [fp, #-20]	; 0xffffffec
   1e0f8:	bl	1de74 <__assert_fail@plt+0xb2bc>
   1e0fc:	ldr	r0, [sp, #12]
   1e100:	str	r0, [sp, #4]
   1e104:	bl	128d0 <__errno_location@plt>
   1e108:	ldr	lr, [sp, #4]
   1e10c:	str	lr, [r0]
   1e110:	movw	r0, #0
   1e114:	str	r0, [fp, #-4]
   1e118:	ldr	r0, [fp, #-4]
   1e11c:	mov	sp, fp
   1e120:	pop	{fp, pc}
   1e124:	andeq	r0, r0, r0
   1e128:	push	{r4, sl, fp, lr}
   1e12c:	add	fp, sp, #8
   1e130:	sub	sp, sp, #48	; 0x30
   1e134:	ldr	ip, [fp, #16]
   1e138:	ldr	lr, [fp, #12]
   1e13c:	ldr	r4, [fp, #8]
   1e140:	str	r0, [fp, #-16]
   1e144:	str	r1, [fp, #-20]	; 0xffffffec
   1e148:	str	r2, [fp, #-24]	; 0xffffffe8
   1e14c:	str	r3, [sp, #28]
   1e150:	strb	r4, [sp, #27]
   1e154:	strb	lr, [sp, #26]
   1e158:	movw	r0, #0
   1e15c:	str	r0, [sp, #20]
   1e160:	ldrb	r0, [sp, #27]
   1e164:	cmp	r0, #123	; 0x7b
   1e168:	str	ip, [sp, #12]
   1e16c:	beq	1e174 <__assert_fail@plt+0xb5bc>
   1e170:	b	1e194 <__assert_fail@plt+0xb5dc>
   1e174:	movw	r0, #40867	; 0x9fa3
   1e178:	movt	r0, #7
   1e17c:	movw	r1, #40886	; 0x9fb6
   1e180:	movt	r1, #7
   1e184:	movw	r2, #78	; 0x4e
   1e188:	movw	r3, #40894	; 0x9fbe
   1e18c:	movt	r3, #7
   1e190:	bl	12bb8 <__assert_fail@plt>
   1e194:	ldrb	r0, [sp, #27]
   1e198:	cmp	r0, #91	; 0x5b
   1e19c:	beq	1e1a4 <__assert_fail@plt+0xb5ec>
   1e1a0:	b	1e1c4 <__assert_fail@plt+0xb60c>
   1e1a4:	movw	r0, #40993	; 0xa021
   1e1a8:	movt	r0, #7
   1e1ac:	movw	r1, #40886	; 0x9fb6
   1e1b0:	movt	r1, #7
   1e1b4:	movw	r2, #79	; 0x4f
   1e1b8:	movw	r3, #40894	; 0x9fbe
   1e1bc:	movt	r3, #7
   1e1c0:	bl	12bb8 <__assert_fail@plt>
   1e1c4:	ldrb	r0, [sp, #27]
   1e1c8:	cmp	r0, #40	; 0x28
   1e1cc:	beq	1e1d4 <__assert_fail@plt+0xb61c>
   1e1d0:	b	1e1f4 <__assert_fail@plt+0xb63c>
   1e1d4:	movw	r0, #41012	; 0xa034
   1e1d8:	movt	r0, #7
   1e1dc:	movw	r1, #40886	; 0x9fb6
   1e1e0:	movt	r1, #7
   1e1e4:	movw	r2, #80	; 0x50
   1e1e8:	movw	r3, #40894	; 0x9fbe
   1e1ec:	movt	r3, #7
   1e1f0:	bl	12bb8 <__assert_fail@plt>
   1e1f4:	movw	r0, #20
   1e1f8:	bl	4c394 <__assert_fail@plt+0x397dc>
   1e1fc:	ldr	lr, [fp, #-16]
   1e200:	str	r0, [lr]
   1e204:	ldr	r0, [sp, #28]
   1e208:	ldr	lr, [fp, #-16]
   1e20c:	ldr	lr, [lr]
   1e210:	str	r0, [lr]
   1e214:	ldrb	r0, [sp, #27]
   1e218:	ldr	lr, [fp, #-16]
   1e21c:	ldr	lr, [lr]
   1e220:	strb	r0, [lr, #4]
   1e224:	ldrb	r0, [sp, #26]
   1e228:	ldr	lr, [fp, #-16]
   1e22c:	ldr	lr, [lr]
   1e230:	strb	r0, [lr, #5]
   1e234:	ldr	r0, [fp, #-16]
   1e238:	ldr	r0, [r0]
   1e23c:	movw	lr, #0
   1e240:	str	lr, [r0, #16]
   1e244:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e248:	ldr	lr, [fp, #-16]
   1e24c:	ldr	lr, [lr]
   1e250:	str	r0, [lr, #12]
   1e254:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e258:	add	r0, r0, #2
   1e25c:	bl	4c394 <__assert_fail@plt+0x397dc>
   1e260:	ldr	lr, [fp, #-16]
   1e264:	ldr	lr, [lr]
   1e268:	str	r0, [lr, #8]
   1e26c:	str	r0, [sp, #16]
   1e270:	ldr	r0, [sp, #16]
   1e274:	ldr	r1, [fp, #-20]	; 0xffffffec
   1e278:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1e27c:	bl	12918 <strncpy@plt>
   1e280:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e284:	ldr	r2, [sp, #16]
   1e288:	add	r1, r2, r1
   1e28c:	str	r1, [sp, #16]
   1e290:	ldr	r1, [sp, #28]
   1e294:	cmp	r1, #0
   1e298:	str	r0, [sp, #8]
   1e29c:	beq	1e2ac <__assert_fail@plt+0xb6f4>
   1e2a0:	ldr	r0, [sp, #28]
   1e2a4:	cmp	r0, #1
   1e2a8:	bne	1e354 <__assert_fail@plt+0xb79c>
   1e2ac:	ldrb	r0, [sp, #27]
   1e2b0:	movw	r1, #0
   1e2b4:	cmp	r1, r0
   1e2b8:	bne	1e2c0 <__assert_fail@plt+0xb708>
   1e2bc:	b	1e2e0 <__assert_fail@plt+0xb728>
   1e2c0:	movw	r0, #41031	; 0xa047
   1e2c4:	movt	r0, #7
   1e2c8:	movw	r1, #40886	; 0x9fb6
   1e2cc:	movt	r1, #7
   1e2d0:	movw	r2, #97	; 0x61
   1e2d4:	movw	r3, #40894	; 0x9fbe
   1e2d8:	movt	r3, #7
   1e2dc:	bl	12bb8 <__assert_fail@plt>
   1e2e0:	ldrb	r0, [sp, #26]
   1e2e4:	movw	r1, #0
   1e2e8:	cmp	r1, r0
   1e2ec:	bne	1e2f4 <__assert_fail@plt+0xb73c>
   1e2f0:	b	1e314 <__assert_fail@plt+0xb75c>
   1e2f4:	movw	r0, #41048	; 0xa058
   1e2f8:	movt	r0, #7
   1e2fc:	movw	r1, #40886	; 0x9fb6
   1e300:	movt	r1, #7
   1e304:	movw	r2, #98	; 0x62
   1e308:	movw	r3, #40894	; 0x9fbe
   1e30c:	movt	r3, #7
   1e310:	bl	12bb8 <__assert_fail@plt>
   1e314:	ldr	r0, [sp, #16]
   1e318:	movw	r1, #0
   1e31c:	strb	r1, [r0]
   1e320:	ldr	r0, [sp, #20]
   1e324:	ldr	r1, [fp, #16]
   1e328:	ldr	r1, [r1, #24]
   1e32c:	cmp	r0, r1
   1e330:	bls	1e340 <__assert_fail@plt+0xb788>
   1e334:	ldr	r0, [fp, #16]
   1e338:	movw	r1, #0
   1e33c:	str	r1, [r0, #24]
   1e340:	ldr	r0, [fp, #-16]
   1e344:	ldr	r0, [r0]
   1e348:	add	r0, r0, #16
   1e34c:	str	r0, [fp, #-12]
   1e350:	b	1e714 <__assert_fail@plt+0xbb5c>
   1e354:	ldr	r0, [sp, #28]
   1e358:	cmp	r0, #2
   1e35c:	bne	1e364 <__assert_fail@plt+0xb7ac>
   1e360:	b	1e384 <__assert_fail@plt+0xb7cc>
   1e364:	movw	r0, #41069	; 0xa06d
   1e368:	movt	r0, #7
   1e36c:	movw	r1, #40886	; 0x9fb6
   1e370:	movt	r1, #7
   1e374:	movw	r2, #105	; 0x69
   1e378:	movw	r3, #40894	; 0x9fbe
   1e37c:	movt	r3, #7
   1e380:	bl	12bb8 <__assert_fail@plt>
   1e384:	ldrb	r0, [sp, #27]
   1e388:	sub	r0, r0, #37	; 0x25
   1e38c:	cmp	r0, #84	; 0x54
   1e390:	str	r0, [sp, #4]
   1e394:	bhi	1e6d8 <__assert_fail@plt+0xbb20>
   1e398:	add	r0, pc, #8
   1e39c:	ldr	r1, [sp, #4]
   1e3a0:	ldr	r0, [r0, r1, lsl #2]
   1e3a4:	mov	pc, r0
   1e3a8:	strdeq	lr, [r1], -ip
   1e3ac:	ldrdeq	lr, [r1], -r8
   1e3b0:	ldrdeq	lr, [r1], -r8
   1e3b4:	ldrdeq	lr, [r1], -r8
   1e3b8:	ldrdeq	lr, [r1], -r8
   1e3bc:	ldrdeq	lr, [r1], -r8
   1e3c0:	ldrdeq	lr, [r1], -r8
   1e3c4:	ldrdeq	lr, [r1], -r8
   1e3c8:	ldrdeq	lr, [r1], -r8
   1e3cc:	ldrdeq	lr, [r1], -r8
   1e3d0:	ldrdeq	lr, [r1], -r8
   1e3d4:	ldrdeq	lr, [r1], -r8
   1e3d8:	ldrdeq	lr, [r1], -r8
   1e3dc:	ldrdeq	lr, [r1], -r8
   1e3e0:	ldrdeq	lr, [r1], -r8
   1e3e4:	ldrdeq	lr, [r1], -r8
   1e3e8:	ldrdeq	lr, [r1], -r8
   1e3ec:	ldrdeq	lr, [r1], -r8
   1e3f0:	ldrdeq	lr, [r1], -r8
   1e3f4:	ldrdeq	lr, [r1], -r8
   1e3f8:	ldrdeq	lr, [r1], -r8
   1e3fc:	ldrdeq	lr, [r1], -r8
   1e400:	ldrdeq	lr, [r1], -r8
   1e404:	ldrdeq	lr, [r1], -r8
   1e408:	ldrdeq	lr, [r1], -r8
   1e40c:	ldrdeq	lr, [r1], -r8
   1e410:	ldrdeq	lr, [r1], -r8
   1e414:	ldrdeq	lr, [r1], -r8
   1e418:	muleq	r1, r8, r5
   1e41c:	muleq	r1, r8, r5
   1e420:	muleq	r1, r8, r5
   1e424:	andeq	lr, r1, ip, ror #12
   1e428:	ldrdeq	lr, [r1], -r8
   1e42c:	muleq	r1, r8, r5
   1e430:	andeq	lr, r1, ip, ror #12
   1e434:	andeq	lr, r1, r4, asr r6
   1e438:	ldrdeq	lr, [r1], -r8
   1e43c:	ldrdeq	lr, [r1], -r8
   1e440:	ldrdeq	lr, [r1], -r8
   1e444:	ldrdeq	lr, [r1], -r8
   1e448:	muleq	r1, r8, r5
   1e44c:	ldrdeq	lr, [r1], -r8
   1e450:	ldrdeq	lr, [r1], -r8
   1e454:	andeq	lr, r1, ip, lsl r6
   1e458:	ldrdeq	lr, [r1], -r8
   1e45c:	ldrdeq	lr, [r1], -r8
   1e460:	andeq	lr, r1, r4, asr #11
   1e464:	muleq	r1, r8, r5
   1e468:	andeq	lr, r1, ip, ror #12
   1e46c:	ldrdeq	lr, [r1], -r8
   1e470:	ldrdeq	lr, [r1], -r8
   1e474:	ldrdeq	lr, [r1], -r8
   1e478:	strdeq	lr, [r1], -r0
   1e47c:	andeq	lr, r1, r4, lsr r6
   1e480:	ldrdeq	lr, [r1], -r8
   1e484:	ldrdeq	lr, [r1], -r8
   1e488:	ldrdeq	lr, [r1], -r8
   1e48c:	ldrdeq	lr, [r1], -r8
   1e490:	ldrdeq	lr, [r1], -r8
   1e494:	ldrdeq	lr, [r1], -r8
   1e498:	muleq	r1, r8, r5
   1e49c:	andeq	lr, r1, ip, ror #12
   1e4a0:	muleq	r1, r8, r5
   1e4a4:	muleq	r1, r8, r6
   1e4a8:	ldrdeq	lr, [r1], -r8
   1e4ac:	andeq	lr, r1, ip, lsl r6
   1e4b0:	muleq	r1, r8, r5
   1e4b4:	andeq	lr, r1, ip, lsl r6
   1e4b8:	andeq	lr, r1, ip, ror #10
   1e4bc:	ldrdeq	lr, [r1], -r8
   1e4c0:	andeq	lr, r1, ip, ror #12
   1e4c4:	andeq	lr, r1, r4, lsl r5
   1e4c8:			; <UNDEFINED> instruction: 0x0001e6b0
   1e4cc:	andeq	lr, r1, ip, ror #12
   1e4d0:	ldrdeq	lr, [r1], -r8
   1e4d4:	andeq	lr, r1, ip, lsl r6
   1e4d8:	ldrdeq	lr, [r1], -r8
   1e4dc:	ldrdeq	lr, [r1], -r8
   1e4e0:	muleq	r1, r8, r5
   1e4e4:	muleq	r1, r8, r5
   1e4e8:	muleq	r1, r8, r5
   1e4ec:	ldrdeq	lr, [r1], -r8
   1e4f0:	ldrdeq	lr, [r1], -r8
   1e4f4:	ldrdeq	lr, [r1], -r8
   1e4f8:	andeq	lr, r1, r0, asr #10
   1e4fc:	ldr	r0, [sp, #16]
   1e500:	add	r1, r0, #1
   1e504:	str	r1, [sp, #16]
   1e508:	movw	r1, #37	; 0x25
   1e50c:	strb	r1, [r0]
   1e510:	b	1e6d8 <__assert_fail@plt+0xbb20>
   1e514:	ldr	r0, [fp, #16]
   1e518:	movw	r1, #1
   1e51c:	strb	r1, [r0, #18]
   1e520:	movw	r0, #4
   1e524:	str	r0, [sp, #20]
   1e528:	ldr	r0, [sp, #16]
   1e52c:	add	r1, r0, #1
   1e530:	str	r1, [sp, #16]
   1e534:	movw	r1, #115	; 0x73
   1e538:	strb	r1, [r0]
   1e53c:	b	1e6d8 <__assert_fail@plt+0xbb20>
   1e540:	ldr	r0, [fp, #16]
   1e544:	movw	r1, #1
   1e548:	strb	r1, [r0, #19]
   1e54c:	movw	r0, #2
   1e550:	str	r0, [sp, #20]
   1e554:	ldr	r0, [sp, #16]
   1e558:	add	r1, r0, #1
   1e55c:	str	r1, [sp, #16]
   1e560:	movw	r1, #115	; 0x73
   1e564:	strb	r1, [r0]
   1e568:	b	1e6d8 <__assert_fail@plt+0xbb20>
   1e56c:	ldr	r0, [fp, #16]
   1e570:	movw	r1, #1
   1e574:	strb	r1, [r0, #20]
   1e578:	movw	r0, #1
   1e57c:	str	r0, [sp, #20]
   1e580:	ldr	r0, [sp, #16]
   1e584:	add	r1, r0, #1
   1e588:	str	r1, [sp, #16]
   1e58c:	movw	r1, #115	; 0x73
   1e590:	strb	r1, [r0]
   1e594:	b	1e6d8 <__assert_fail@plt+0xbb20>
   1e598:	ldr	r0, [fp, #16]
   1e59c:	movw	r1, #1
   1e5a0:	strb	r1, [r0, #18]
   1e5a4:	movw	r0, #3
   1e5a8:	str	r0, [sp, #20]
   1e5ac:	ldr	r0, [sp, #16]
   1e5b0:	add	r1, r0, #1
   1e5b4:	str	r1, [sp, #16]
   1e5b8:	movw	r1, #115	; 0x73
   1e5bc:	strb	r1, [r0]
   1e5c0:	b	1e6d8 <__assert_fail@plt+0xbb20>
   1e5c4:	ldr	r0, [fp, #16]
   1e5c8:	movw	r1, #1
   1e5cc:	strb	r1, [r0, #18]
   1e5d0:	movw	r0, #3
   1e5d4:	str	r0, [sp, #20]
   1e5d8:	ldr	r0, [sp, #16]
   1e5dc:	add	r1, r0, #1
   1e5e0:	str	r1, [sp, #16]
   1e5e4:	movw	r1, #103	; 0x67
   1e5e8:	strb	r1, [r0]
   1e5ec:	b	1e6d8 <__assert_fail@plt+0xbb20>
   1e5f0:	ldr	r0, [fp, #16]
   1e5f4:	movw	r1, #1
   1e5f8:	strb	r1, [r0, #18]
   1e5fc:	movw	r0, #2
   1e600:	str	r0, [sp, #20]
   1e604:	ldr	r0, [sp, #16]
   1e608:	add	r1, r0, #1
   1e60c:	str	r1, [sp, #16]
   1e610:	movw	r1, #115	; 0x73
   1e614:	strb	r1, [r0]
   1e618:	b	1e6d8 <__assert_fail@plt+0xbb20>
   1e61c:	ldr	r0, [sp, #16]
   1e620:	add	r1, r0, #1
   1e624:	str	r1, [sp, #16]
   1e628:	movw	r1, #115	; 0x73
   1e62c:	strb	r1, [r0]
   1e630:	b	1e6d8 <__assert_fail@plt+0xbb20>
   1e634:	movw	r0, #5
   1e638:	str	r0, [sp, #20]
   1e63c:	ldr	r0, [sp, #16]
   1e640:	add	r1, r0, #1
   1e644:	str	r1, [sp, #16]
   1e648:	movw	r1, #115	; 0x73
   1e64c:	strb	r1, [r0]
   1e650:	b	1e6d8 <__assert_fail@plt+0xbb20>
   1e654:	ldr	r0, [sp, #16]
   1e658:	add	r1, r0, #1
   1e65c:	str	r1, [sp, #16]
   1e660:	movw	r1, #115	; 0x73
   1e664:	strb	r1, [r0]
   1e668:	b	1e6d8 <__assert_fail@plt+0xbb20>
   1e66c:	ldr	r0, [fp, #16]
   1e670:	movw	r1, #1
   1e674:	strb	r1, [r0, #18]
   1e678:	movw	r0, #3
   1e67c:	str	r0, [sp, #20]
   1e680:	ldr	r0, [sp, #16]
   1e684:	add	r1, r0, #1
   1e688:	str	r1, [sp, #16]
   1e68c:	movw	r1, #115	; 0x73
   1e690:	strb	r1, [r0]
   1e694:	b	1e6d8 <__assert_fail@plt+0xbb20>
   1e698:	ldr	r0, [sp, #16]
   1e69c:	add	r1, r0, #1
   1e6a0:	str	r1, [sp, #16]
   1e6a4:	movw	r1, #100	; 0x64
   1e6a8:	strb	r1, [r0]
   1e6ac:	b	1e6d8 <__assert_fail@plt+0xbb20>
   1e6b0:	ldr	r0, [sp, #16]
   1e6b4:	add	r1, r0, #1
   1e6b8:	str	r1, [sp, #16]
   1e6bc:	movw	r1, #111	; 0x6f
   1e6c0:	strb	r1, [r0]
   1e6c4:	ldr	r0, [fp, #16]
   1e6c8:	movw	r1, #1
   1e6cc:	strb	r1, [r0, #18]
   1e6d0:	movw	r0, #3
   1e6d4:	str	r0, [sp, #20]
   1e6d8:	ldr	r0, [sp, #16]
   1e6dc:	movw	r1, #0
   1e6e0:	strb	r1, [r0]
   1e6e4:	ldr	r0, [sp, #20]
   1e6e8:	ldr	r1, [fp, #16]
   1e6ec:	ldr	r1, [r1, #24]
   1e6f0:	cmp	r0, r1
   1e6f4:	bls	1e704 <__assert_fail@plt+0xbb4c>
   1e6f8:	ldr	r0, [sp, #20]
   1e6fc:	ldr	r1, [fp, #16]
   1e700:	str	r0, [r1, #24]
   1e704:	ldr	r0, [fp, #-16]
   1e708:	ldr	r0, [r0]
   1e70c:	add	r0, r0, #16
   1e710:	str	r0, [fp, #-12]
   1e714:	ldr	r0, [fp, #-12]
   1e718:	sub	sp, fp, #8
   1e71c:	pop	{r4, sl, fp, pc}
   1e720:	push	{r4, r5, fp, lr}
   1e724:	add	fp, sp, #8
   1e728:	sub	sp, sp, #120	; 0x78
   1e72c:	str	r0, [fp, #-16]
   1e730:	str	r1, [fp, #-20]	; 0xffffffec
   1e734:	str	r2, [fp, #-24]	; 0xffffffe8
   1e738:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e73c:	str	r0, [fp, #-28]	; 0xffffffe4
   1e740:	ldr	r0, [fp, #-20]	; 0xffffffec
   1e744:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1e748:	movw	r1, #60700	; 0xed1c
   1e74c:	movt	r1, #1
   1e750:	bl	1ba04 <__assert_fail@plt+0x8e4c>
   1e754:	str	r0, [fp, #-40]	; 0xffffffd8
   1e758:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1e75c:	movw	r1, #1
   1e760:	strb	r1, [r0, #17]
   1e764:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1e768:	strb	r1, [r0, #16]
   1e76c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1e770:	add	r0, r0, #40	; 0x28
   1e774:	ldr	r1, [fp, #-16]
   1e778:	movw	r2, #20
   1e77c:	bl	125c4 <memcpy@plt>
   1e780:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1e784:	movw	r1, #0
   1e788:	strb	r1, [r0, #19]
   1e78c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1e790:	strb	r1, [r0, #18]
   1e794:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1e798:	movw	r1, #0
   1e79c:	str	r1, [r0, #24]
   1e7a0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1e7a4:	add	r0, r0, #40	; 0x28
   1e7a8:	str	r0, [fp, #-36]	; 0xffffffdc
   1e7ac:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1e7b0:	str	r1, [r0]
   1e7b4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1e7b8:	str	r0, [fp, #-32]	; 0xffffffe0
   1e7bc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1e7c0:	ldrsb	r0, [r0]
   1e7c4:	cmp	r0, #0
   1e7c8:	beq	1eca8 <__assert_fail@plt+0xc0f0>
   1e7cc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1e7d0:	ldrb	r0, [r0]
   1e7d4:	cmp	r0, #92	; 0x5c
   1e7d8:	bne	1e870 <__assert_fail@plt+0xbcb8>
   1e7dc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1e7e0:	ldrb	r0, [r0, #1]
   1e7e4:	cmp	r0, #99	; 0x63
   1e7e8:	bne	1e870 <__assert_fail@plt+0xbcb8>
   1e7ec:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1e7f0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1e7f4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1e7f8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1e7fc:	sub	r2, r2, r3
   1e800:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1e804:	movw	ip, #1
   1e808:	str	r3, [sp, #64]	; 0x40
   1e80c:	mov	r3, ip
   1e810:	movw	ip, #0
   1e814:	and	lr, ip, #255	; 0xff
   1e818:	str	lr, [sp]
   1e81c:	and	ip, ip, #255	; 0xff
   1e820:	str	ip, [sp, #4]
   1e824:	ldr	ip, [sp, #64]	; 0x40
   1e828:	str	ip, [sp, #8]
   1e82c:	bl	1e128 <__assert_fail@plt+0xb570>
   1e830:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1e834:	ldrb	r1, [r1, #18]
   1e838:	tst	r1, #1
   1e83c:	str	r0, [sp, #60]	; 0x3c
   1e840:	beq	1e860 <__assert_fail@plt+0xbca8>
   1e844:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1e848:	ldr	r0, [r0, #24]
   1e84c:	cmp	r0, #3
   1e850:	bcs	1e860 <__assert_fail@plt+0xbca8>
   1e854:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1e858:	movw	r1, #3
   1e85c:	str	r1, [r0, #24]
   1e860:	movw	r0, #1
   1e864:	and	r0, r0, #1
   1e868:	strb	r0, [fp, #-9]
   1e86c:	b	1ed0c <__assert_fail@plt+0xc154>
   1e870:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1e874:	ldrb	r0, [r0]
   1e878:	cmp	r0, #92	; 0x5c
   1e87c:	bne	1ea20 <__assert_fail@plt+0xbe68>
   1e880:	movw	r0, #1
   1e884:	str	r0, [fp, #-44]	; 0xffffffd4
   1e888:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1e88c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1e890:	add	r0, r0, r1
   1e894:	ldrsb	r0, [r0]
   1e898:	cmp	r0, #0
   1e89c:	bne	1e8d8 <__assert_fail@plt+0xbd20>
   1e8a0:	movw	r0, #41089	; 0xa081
   1e8a4:	movt	r0, #7
   1e8a8:	bl	12864 <gettext@plt>
   1e8ac:	movw	lr, #0
   1e8b0:	str	r0, [sp, #56]	; 0x38
   1e8b4:	mov	r0, lr
   1e8b8:	mov	r1, lr
   1e8bc:	ldr	r2, [sp, #56]	; 0x38
   1e8c0:	bl	12780 <error@plt>
   1e8c4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1e8c8:	mvn	r1, #0
   1e8cc:	add	r0, r0, r1
   1e8d0:	str	r0, [fp, #-44]	; 0xffffffd4
   1e8d4:	b	1e9ac <__assert_fail@plt+0xbdf4>
   1e8d8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1e8dc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1e8e0:	add	r0, r0, r1
   1e8e4:	ldrb	r0, [r0]
   1e8e8:	bl	1efa4 <__assert_fail@plt+0xc3ec>
   1e8ec:	tst	r0, #1
   1e8f0:	beq	1e92c <__assert_fail@plt+0xbd74>
   1e8f4:	movw	r0, #0
   1e8f8:	str	r0, [fp, #-48]	; 0xffffffd0
   1e8fc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1e900:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1e904:	add	r0, r0, r1
   1e908:	sub	r1, fp, #48	; 0x30
   1e90c:	bl	1efe4 <__assert_fail@plt+0xc42c>
   1e910:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1e914:	strb	r0, [r1]
   1e918:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1e91c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1e920:	add	r0, r1, r0
   1e924:	str	r0, [fp, #-44]	; 0xffffffd4
   1e928:	b	1e9a8 <__assert_fail@plt+0xbdf0>
   1e92c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1e930:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1e934:	add	r0, r0, r1
   1e938:	ldrb	r0, [r0]
   1e93c:	bl	1f0ac <__assert_fail@plt+0xc4f4>
   1e940:	strb	r0, [fp, #-49]	; 0xffffffcf
   1e944:	ldrsb	r0, [fp, #-49]	; 0xffffffcf
   1e948:	cmp	r0, #0
   1e94c:	beq	1e960 <__assert_fail@plt+0xbda8>
   1e950:	ldrb	r0, [fp, #-49]	; 0xffffffcf
   1e954:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1e958:	strb	r0, [r1]
   1e95c:	b	1e9a4 <__assert_fail@plt+0xbdec>
   1e960:	movw	r0, #41136	; 0xa0b0
   1e964:	movt	r0, #7
   1e968:	bl	12864 <gettext@plt>
   1e96c:	ldr	lr, [fp, #-32]	; 0xffffffe0
   1e970:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1e974:	add	r1, lr, r1
   1e978:	ldrb	r3, [r1]
   1e97c:	movw	r1, #0
   1e980:	str	r0, [sp, #52]	; 0x34
   1e984:	mov	r0, r1
   1e988:	ldr	r2, [sp, #52]	; 0x34
   1e98c:	bl	12780 <error@plt>
   1e990:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1e994:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1e998:	add	r0, r1, r0
   1e99c:	str	r0, [fp, #-32]	; 0xffffffe0
   1e9a0:	b	1ec98 <__assert_fail@plt+0xc0e0>
   1e9a4:	b	1e9a8 <__assert_fail@plt+0xbdf0>
   1e9a8:	b	1e9ac <__assert_fail@plt+0xbdf4>
   1e9ac:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1e9b0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1e9b4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1e9b8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1e9bc:	sub	r2, r2, r3
   1e9c0:	add	r2, r2, #1
   1e9c4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1e9c8:	movw	ip, #0
   1e9cc:	str	r3, [sp, #48]	; 0x30
   1e9d0:	mov	r3, ip
   1e9d4:	movw	ip, #0
   1e9d8:	and	lr, ip, #255	; 0xff
   1e9dc:	str	lr, [sp]
   1e9e0:	and	ip, ip, #255	; 0xff
   1e9e4:	str	ip, [sp, #4]
   1e9e8:	ldr	ip, [sp, #48]	; 0x30
   1e9ec:	str	ip, [sp, #8]
   1e9f0:	bl	1e128 <__assert_fail@plt+0xb570>
   1e9f4:	str	r0, [fp, #-36]	; 0xffffffdc
   1e9f8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1e9fc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1ea00:	add	r0, r0, r1
   1ea04:	add	r0, r0, #1
   1ea08:	str	r0, [fp, #-28]	; 0xffffffe4
   1ea0c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1ea10:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1ea14:	add	r0, r1, r0
   1ea18:	str	r0, [fp, #-32]	; 0xffffffe0
   1ea1c:	b	1ec90 <__assert_fail@plt+0xc0d8>
   1ea20:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1ea24:	ldrb	r0, [r0]
   1ea28:	cmp	r0, #37	; 0x25
   1ea2c:	bne	1ec8c <__assert_fail@plt+0xc0d4>
   1ea30:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1ea34:	ldrb	r0, [r0, #1]
   1ea38:	cmp	r0, #0
   1ea3c:	bne	1ea68 <__assert_fail@plt+0xbeb0>
   1ea40:	movw	r0, #41171	; 0xa0d3
   1ea44:	movt	r0, #7
   1ea48:	bl	12864 <gettext@plt>
   1ea4c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1ea50:	movw	lr, #1
   1ea54:	str	r0, [sp, #44]	; 0x2c
   1ea58:	mov	r0, lr
   1ea5c:	movw	r1, #0
   1ea60:	ldr	r2, [sp, #44]	; 0x2c
   1ea64:	bl	12780 <error@plt>
   1ea68:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1ea6c:	ldrb	r0, [r0, #1]
   1ea70:	cmp	r0, #37	; 0x25
   1ea74:	bne	1ea84 <__assert_fail@plt+0xbecc>
   1ea78:	movw	r0, #1
   1ea7c:	str	r0, [fp, #-56]	; 0xffffffc8
   1ea80:	b	1ea90 <__assert_fail@plt+0xbed8>
   1ea84:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1ea88:	bl	1f1b4 <__assert_fail@plt+0xc5fc>
   1ea8c:	str	r0, [fp, #-56]	; 0xffffffc8
   1ea90:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1ea94:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1ea98:	add	r0, r1, r0
   1ea9c:	str	r0, [fp, #-32]	; 0xffffffe0
   1eaa0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1eaa4:	ldrb	r0, [r0]
   1eaa8:	bl	1f2f0 <__assert_fail@plt+0xc738>
   1eaac:	str	r0, [fp, #-56]	; 0xffffffc8
   1eab0:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1eab4:	cmp	r0, #0
   1eab8:	beq	1eb70 <__assert_fail@plt+0xbfb8>
   1eabc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1eac0:	ldr	r1, [fp, #-56]	; 0xffffffc8
   1eac4:	sub	r1, r1, #1
   1eac8:	add	r0, r0, r1
   1eacc:	ldrb	r0, [r0]
   1ead0:	cmp	r0, #0
   1ead4:	beq	1eb70 <__assert_fail@plt+0xbfb8>
   1ead8:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1eadc:	cmp	r0, #2
   1eae0:	bne	1eaf4 <__assert_fail@plt+0xbf3c>
   1eae4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1eae8:	ldrb	r0, [r0, #1]
   1eaec:	str	r0, [sp, #40]	; 0x28
   1eaf0:	b	1eb00 <__assert_fail@plt+0xbf48>
   1eaf4:	movw	r0, #0
   1eaf8:	str	r0, [sp, #40]	; 0x28
   1eafc:	b	1eb00 <__assert_fail@plt+0xbf48>
   1eb00:	ldr	r0, [sp, #40]	; 0x28
   1eb04:	strb	r0, [fp, #-57]	; 0xffffffc7
   1eb08:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1eb0c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1eb10:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1eb14:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1eb18:	sub	r2, r2, r3
   1eb1c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1eb20:	ldrb	r3, [r3]
   1eb24:	ldrb	ip, [fp, #-57]	; 0xffffffc7
   1eb28:	ldr	lr, [fp, #-40]	; 0xffffffd8
   1eb2c:	movw	r4, #2
   1eb30:	str	r3, [sp, #36]	; 0x24
   1eb34:	mov	r3, r4
   1eb38:	ldr	r4, [sp, #36]	; 0x24
   1eb3c:	and	r5, r4, #255	; 0xff
   1eb40:	str	r5, [sp]
   1eb44:	and	ip, ip, #255	; 0xff
   1eb48:	str	ip, [sp, #4]
   1eb4c:	str	lr, [sp, #8]
   1eb50:	bl	1e128 <__assert_fail@plt+0xb570>
   1eb54:	str	r0, [fp, #-36]	; 0xffffffdc
   1eb58:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1eb5c:	sub	r0, r0, #1
   1eb60:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1eb64:	add	r0, r1, r0
   1eb68:	str	r0, [fp, #-32]	; 0xffffffe0
   1eb6c:	b	1ec80 <__assert_fail@plt+0xc0c8>
   1eb70:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1eb74:	ldrb	r1, [r0]
   1eb78:	movw	r0, #41205	; 0xa0f5
   1eb7c:	movt	r0, #7
   1eb80:	bl	12894 <strchr@plt>
   1eb84:	movw	r1, #0
   1eb88:	cmp	r0, r1
   1eb8c:	beq	1ebbc <__assert_fail@plt+0xc004>
   1eb90:	movw	r0, #41209	; 0xa0f9
   1eb94:	movt	r0, #7
   1eb98:	bl	12864 <gettext@plt>
   1eb9c:	ldr	lr, [fp, #-32]	; 0xffffffe0
   1eba0:	ldrb	r3, [lr]
   1eba4:	movw	lr, #1
   1eba8:	str	r0, [sp, #32]
   1ebac:	mov	r0, lr
   1ebb0:	movw	r1, #0
   1ebb4:	ldr	r2, [sp, #32]
   1ebb8:	bl	12780 <error@plt>
   1ebbc:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1ebc0:	cmp	r0, #2
   1ebc4:	bne	1ec08 <__assert_fail@plt+0xc050>
   1ebc8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1ebcc:	ldrsb	r0, [r0, #1]
   1ebd0:	cmp	r0, #0
   1ebd4:	bne	1ec08 <__assert_fail@plt+0xc050>
   1ebd8:	movw	r0, #41271	; 0xa137
   1ebdc:	movt	r0, #7
   1ebe0:	bl	12864 <gettext@plt>
   1ebe4:	ldr	lr, [fp, #-32]	; 0xffffffe0
   1ebe8:	ldrb	r3, [lr]
   1ebec:	movw	lr, #0
   1ebf0:	str	r0, [sp, #28]
   1ebf4:	mov	r0, lr
   1ebf8:	mov	r1, lr
   1ebfc:	ldr	r2, [sp, #28]
   1ec00:	bl	12780 <error@plt>
   1ec04:	b	1ec34 <__assert_fail@plt+0xc07c>
   1ec08:	movw	r0, #41344	; 0xa180
   1ec0c:	movt	r0, #7
   1ec10:	bl	12864 <gettext@plt>
   1ec14:	ldr	lr, [fp, #-32]	; 0xffffffe0
   1ec18:	ldrb	r3, [lr]
   1ec1c:	movw	lr, #0
   1ec20:	str	r0, [sp, #24]
   1ec24:	mov	r0, lr
   1ec28:	mov	r1, lr
   1ec2c:	ldr	r2, [sp, #24]
   1ec30:	bl	12780 <error@plt>
   1ec34:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1ec38:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1ec3c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1ec40:	add	r2, r2, #1
   1ec44:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1ec48:	sub	r2, r2, r3
   1ec4c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1ec50:	movw	ip, #0
   1ec54:	str	r3, [sp, #20]
   1ec58:	mov	r3, ip
   1ec5c:	movw	ip, #0
   1ec60:	and	lr, ip, #255	; 0xff
   1ec64:	str	lr, [sp]
   1ec68:	and	ip, ip, #255	; 0xff
   1ec6c:	str	ip, [sp, #4]
   1ec70:	ldr	ip, [sp, #20]
   1ec74:	str	ip, [sp, #8]
   1ec78:	bl	1e128 <__assert_fail@plt+0xb570>
   1ec7c:	str	r0, [fp, #-36]	; 0xffffffdc
   1ec80:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1ec84:	add	r0, r0, #1
   1ec88:	str	r0, [fp, #-28]	; 0xffffffe4
   1ec8c:	b	1ec90 <__assert_fail@plt+0xc0d8>
   1ec90:	b	1ec94 <__assert_fail@plt+0xc0dc>
   1ec94:	b	1ec98 <__assert_fail@plt+0xc0e0>
   1ec98:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1ec9c:	add	r0, r0, #1
   1eca0:	str	r0, [fp, #-32]	; 0xffffffe0
   1eca4:	b	1e7bc <__assert_fail@plt+0xbc04>
   1eca8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1ecac:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1ecb0:	cmp	r0, r1
   1ecb4:	bls	1ed00 <__assert_fail@plt+0xc148>
   1ecb8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1ecbc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1ecc0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1ecc4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1ecc8:	sub	r2, r2, r3
   1eccc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1ecd0:	movw	ip, #0
   1ecd4:	str	r3, [sp, #16]
   1ecd8:	mov	r3, ip
   1ecdc:	movw	ip, #0
   1ece0:	and	lr, ip, #255	; 0xff
   1ece4:	str	lr, [sp]
   1ece8:	and	ip, ip, #255	; 0xff
   1ecec:	str	ip, [sp, #4]
   1ecf0:	ldr	ip, [sp, #16]
   1ecf4:	str	ip, [sp, #8]
   1ecf8:	bl	1e128 <__assert_fail@plt+0xb570>
   1ecfc:	str	r0, [sp, #12]
   1ed00:	movw	r0, #1
   1ed04:	and	r0, r0, #1
   1ed08:	strb	r0, [fp, #-9]
   1ed0c:	ldrb	r0, [fp, #-9]
   1ed10:	and	r0, r0, #1
   1ed14:	sub	sp, fp, #8
   1ed18:	pop	{r4, r5, fp, pc}
   1ed1c:	push	{fp, lr}
   1ed20:	mov	fp, sp
   1ed24:	sub	sp, sp, #88	; 0x58
   1ed28:	str	r0, [fp, #-4]
   1ed2c:	str	r1, [fp, #-8]
   1ed30:	str	r2, [fp, #-12]
   1ed34:	ldr	r0, [fp, #-12]
   1ed38:	add	r0, r0, #40	; 0x28
   1ed3c:	str	r0, [fp, #-16]
   1ed40:	ldr	r0, [fp, #-16]
   1ed44:	ldr	r0, [r0]
   1ed48:	str	r0, [fp, #-20]	; 0xffffffec
   1ed4c:	ldr	r0, [fp, #-20]	; 0xffffffec
   1ed50:	movw	r1, #0
   1ed54:	cmp	r0, r1
   1ed58:	beq	1ef94 <__assert_fail@plt+0xc3dc>
   1ed5c:	ldr	r0, [fp, #-20]	; 0xffffffec
   1ed60:	ldr	r0, [r0]
   1ed64:	movw	r1, #2
   1ed68:	cmp	r1, r0
   1ed6c:	bne	1ef6c <__assert_fail@plt+0xc3b4>
   1ed70:	ldr	r0, [fp, #-20]	; 0xffffffec
   1ed74:	ldrb	r0, [r0, #5]
   1ed78:	cmp	r0, #0
   1ed7c:	beq	1ef6c <__assert_fail@plt+0xc3b4>
   1ed80:	mov	r0, #0
   1ed84:	str	r0, [fp, #-32]	; 0xffffffe0
   1ed88:	ldr	r0, [fp, #-20]	; 0xffffffec
   1ed8c:	ldrb	r0, [r0, #4]
   1ed90:	sub	r0, r0, #65	; 0x41
   1ed94:	cmp	r0, #19
   1ed98:	str	r0, [sp, #20]
   1ed9c:	bhi	1eed0 <__assert_fail@plt+0xc318>
   1eda0:	add	r0, pc, #8
   1eda4:	ldr	r1, [sp, #20]
   1eda8:	ldr	r0, [r0, r1, lsl #2]
   1edac:	mov	pc, r0
   1edb0:	andeq	lr, r1, r0, lsl #28
   1edb4:	andeq	lr, r1, r8, lsr #28
   1edb8:	andeq	lr, r1, r0, lsl #29
   1edbc:	ldrdeq	lr, [r1], -r0
   1edc0:	ldrdeq	lr, [r1], -r0
   1edc4:	ldrdeq	lr, [r1], -r0
   1edc8:	ldrdeq	lr, [r1], -r0
   1edcc:	ldrdeq	lr, [r1], -r0
   1edd0:	ldrdeq	lr, [r1], -r0
   1edd4:	ldrdeq	lr, [r1], -r0
   1edd8:	ldrdeq	lr, [r1], -r0
   1eddc:	ldrdeq	lr, [r1], -r0
   1ede0:	ldrdeq	lr, [r1], -r0
   1ede4:	ldrdeq	lr, [r1], -r0
   1ede8:	ldrdeq	lr, [r1], -r0
   1edec:	ldrdeq	lr, [r1], -r0
   1edf0:	ldrdeq	lr, [r1], -r0
   1edf4:	ldrdeq	lr, [r1], -r0
   1edf8:	ldrdeq	lr, [r1], -r0
   1edfc:	andeq	lr, r1, r8, lsr #29
   1ee00:	ldr	r1, [fp, #-8]
   1ee04:	sub	r0, fp, #40	; 0x28
   1ee08:	bl	4b8dc <__assert_fail@plt+0x38d24>
   1ee0c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1ee10:	str	r0, [fp, #-28]	; 0xffffffe4
   1ee14:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1ee18:	str	r0, [fp, #-24]	; 0xffffffe8
   1ee1c:	movw	r0, #1
   1ee20:	str	r0, [fp, #-32]	; 0xffffffe0
   1ee24:	b	1eef0 <__assert_fail@plt+0xc338>
   1ee28:	ldr	r1, [fp, #-8]
   1ee2c:	add	r0, sp, #40	; 0x28
   1ee30:	bl	4b948 <__assert_fail@plt+0x38d90>
   1ee34:	ldr	r0, [sp, #40]	; 0x28
   1ee38:	str	r0, [fp, #-28]	; 0xffffffe4
   1ee3c:	ldr	r0, [sp, #44]	; 0x2c
   1ee40:	str	r0, [fp, #-24]	; 0xffffffe8
   1ee44:	ldr	r0, [fp, #-20]	; 0xffffffec
   1ee48:	ldrb	r0, [r0, #5]
   1ee4c:	movw	r1, #64	; 0x40
   1ee50:	cmp	r1, r0
   1ee54:	bne	1ee64 <__assert_fail@plt+0xc2ac>
   1ee58:	movw	r0, #1
   1ee5c:	str	r0, [fp, #-32]	; 0xffffffe0
   1ee60:	b	1ee7c <__assert_fail@plt+0xc2c4>
   1ee64:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ee68:	cmp	r0, #0
   1ee6c:	movw	r0, #0
   1ee70:	movge	r0, #1
   1ee74:	and	r0, r0, #1
   1ee78:	str	r0, [fp, #-32]	; 0xffffffe0
   1ee7c:	b	1eef0 <__assert_fail@plt+0xc338>
   1ee80:	ldr	r1, [fp, #-8]
   1ee84:	add	r0, sp, #32
   1ee88:	bl	4b900 <__assert_fail@plt+0x38d48>
   1ee8c:	ldr	r0, [sp, #32]
   1ee90:	str	r0, [fp, #-28]	; 0xffffffe4
   1ee94:	ldr	r0, [sp, #36]	; 0x24
   1ee98:	str	r0, [fp, #-24]	; 0xffffffe8
   1ee9c:	movw	r0, #1
   1eea0:	str	r0, [fp, #-32]	; 0xffffffe0
   1eea4:	b	1eef0 <__assert_fail@plt+0xc338>
   1eea8:	ldr	r1, [fp, #-8]
   1eeac:	add	r0, sp, #24
   1eeb0:	bl	4b924 <__assert_fail@plt+0x38d6c>
   1eeb4:	ldr	r0, [sp, #24]
   1eeb8:	str	r0, [fp, #-28]	; 0xffffffe4
   1eebc:	ldr	r0, [sp, #28]
   1eec0:	str	r0, [fp, #-24]	; 0xffffffe8
   1eec4:	movw	r0, #1
   1eec8:	str	r0, [fp, #-32]	; 0xffffffe0
   1eecc:	b	1eef0 <__assert_fail@plt+0xc338>
   1eed0:	movw	r0, #36537	; 0x8eb9
   1eed4:	movt	r0, #7
   1eed8:	movw	r1, #40886	; 0x9fb6
   1eedc:	movt	r1, #7
   1eee0:	movw	r2, #1304	; 0x518
   1eee4:	movw	r3, #41390	; 0xa1ae
   1eee8:	movt	r3, #7
   1eeec:	bl	12bb8 <__assert_fail@plt>
   1eef0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1eef4:	cmp	r0, #0
   1eef8:	beq	1ef50 <__assert_fail@plt+0xc398>
   1eefc:	ldr	r0, [fp, #-16]
   1ef00:	ldr	r1, [fp, #-20]	; 0xffffffec
   1ef04:	ldr	r2, [r1, #8]
   1ef08:	ldrb	r1, [r1, #5]
   1ef0c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1ef10:	ldr	ip, [fp, #-24]	; 0xffffffe8
   1ef14:	str	r0, [sp, #16]
   1ef18:	mov	r0, r3
   1ef1c:	str	r1, [sp, #12]
   1ef20:	mov	r1, ip
   1ef24:	ldr	r3, [sp, #12]
   1ef28:	str	r2, [sp, #8]
   1ef2c:	mov	r2, r3
   1ef30:	bl	1f3dc <__assert_fail@plt+0xc824>
   1ef34:	ldr	r1, [sp, #16]
   1ef38:	str	r0, [sp, #4]
   1ef3c:	mov	r0, r1
   1ef40:	ldr	r1, [sp, #8]
   1ef44:	ldr	r2, [sp, #4]
   1ef48:	bl	1f364 <__assert_fail@plt+0xc7ac>
   1ef4c:	b	1ef68 <__assert_fail@plt+0xc3b0>
   1ef50:	ldr	r0, [fp, #-16]
   1ef54:	ldr	r1, [fp, #-20]	; 0xffffffec
   1ef58:	ldr	r1, [r1, #8]
   1ef5c:	movw	r2, #39197	; 0x991d
   1ef60:	movt	r2, #7
   1ef64:	bl	1f364 <__assert_fail@plt+0xc7ac>
   1ef68:	b	1ef80 <__assert_fail@plt+0xc3c8>
   1ef6c:	ldr	r0, [fp, #-16]
   1ef70:	ldr	r1, [fp, #-20]	; 0xffffffec
   1ef74:	ldr	r2, [fp, #-4]
   1ef78:	ldr	r3, [fp, #-8]
   1ef7c:	bl	1f7bc <__assert_fail@plt+0xcc04>
   1ef80:	b	1ef84 <__assert_fail@plt+0xc3cc>
   1ef84:	ldr	r0, [fp, #-20]	; 0xffffffec
   1ef88:	ldr	r0, [r0, #16]
   1ef8c:	str	r0, [fp, #-20]	; 0xffffffec
   1ef90:	b	1ed4c <__assert_fail@plt+0xc194>
   1ef94:	movw	r0, #1
   1ef98:	and	r0, r0, #1
   1ef9c:	mov	sp, fp
   1efa0:	pop	{fp, pc}
   1efa4:	sub	sp, sp, #8
   1efa8:	strb	r0, [sp, #7]
   1efac:	ldrb	r0, [sp, #7]
   1efb0:	cmp	r0, #48	; 0x30
   1efb4:	movw	r0, #0
   1efb8:	str	r0, [sp]
   1efbc:	blt	1efd4 <__assert_fail@plt+0xc41c>
   1efc0:	ldrb	r0, [sp, #7]
   1efc4:	cmp	r0, #55	; 0x37
   1efc8:	movw	r0, #0
   1efcc:	movle	r0, #1
   1efd0:	str	r0, [sp]
   1efd4:	ldr	r0, [sp]
   1efd8:	and	r0, r0, #1
   1efdc:	add	sp, sp, #8
   1efe0:	bx	lr
   1efe4:	push	{fp, lr}
   1efe8:	mov	fp, sp
   1efec:	sub	sp, sp, #24
   1eff0:	str	r0, [fp, #-4]
   1eff4:	str	r1, [fp, #-8]
   1eff8:	movw	r0, #0
   1effc:	str	r0, [sp, #4]
   1f000:	str	r0, [sp, #12]
   1f004:	str	r0, [sp, #8]
   1f008:	ldr	r0, [sp, #8]
   1f00c:	cmp	r0, #3
   1f010:	movw	r0, #0
   1f014:	str	r0, [sp]
   1f018:	bge	1f034 <__assert_fail@plt+0xc47c>
   1f01c:	ldr	r0, [fp, #-4]
   1f020:	ldr	r1, [sp, #4]
   1f024:	add	r0, r0, r1
   1f028:	ldrb	r0, [r0]
   1f02c:	bl	1efa4 <__assert_fail@plt+0xc3ec>
   1f030:	str	r0, [sp]
   1f034:	ldr	r0, [sp]
   1f038:	tst	r0, #1
   1f03c:	beq	1f080 <__assert_fail@plt+0xc4c8>
   1f040:	ldr	r0, [sp, #12]
   1f044:	lsl	r0, r0, #3
   1f048:	ldr	r1, [fp, #-4]
   1f04c:	ldr	r2, [sp, #4]
   1f050:	add	r1, r1, r2
   1f054:	ldrb	r1, [r1]
   1f058:	add	r0, r0, r1
   1f05c:	sub	r0, r0, #48	; 0x30
   1f060:	str	r0, [sp, #12]
   1f064:	ldr	r0, [sp, #8]
   1f068:	add	r0, r0, #1
   1f06c:	str	r0, [sp, #8]
   1f070:	ldr	r0, [sp, #4]
   1f074:	add	r0, r0, #1
   1f078:	str	r0, [sp, #4]
   1f07c:	b	1f008 <__assert_fail@plt+0xc450>
   1f080:	ldr	r0, [sp, #4]
   1f084:	mvn	r1, #0
   1f088:	add	r0, r0, r1
   1f08c:	str	r0, [sp, #4]
   1f090:	ldr	r0, [sp, #4]
   1f094:	ldr	r1, [fp, #-8]
   1f098:	str	r0, [r1]
   1f09c:	ldr	r0, [sp, #12]
   1f0a0:	and	r0, r0, #255	; 0xff
   1f0a4:	mov	sp, fp
   1f0a8:	pop	{fp, pc}
   1f0ac:	sub	sp, sp, #8
   1f0b0:	strb	r0, [sp, #7]
   1f0b4:	mov	r0, #0
   1f0b8:	strb	r0, [sp, #6]
   1f0bc:	ldrb	r0, [sp, #7]
   1f0c0:	sub	r0, r0, #92	; 0x5c
   1f0c4:	cmp	r0, #26
   1f0c8:	str	r0, [sp]
   1f0cc:	bhi	1f1a8 <__assert_fail@plt+0xc5f0>
   1f0d0:	add	r0, pc, #8
   1f0d4:	ldr	r1, [sp]
   1f0d8:	ldr	r0, [r0, r1, lsl #2]
   1f0dc:	mov	pc, r0
   1f0e0:	andeq	pc, r1, r0, lsr #3
   1f0e4:	andeq	pc, r1, r8, lsr #3
   1f0e8:	andeq	pc, r1, r8, lsr #3
   1f0ec:	andeq	pc, r1, r8, lsr #3
   1f0f0:	andeq	pc, r1, r8, lsr #3
   1f0f4:	andeq	pc, r1, ip, asr #2
   1f0f8:	andeq	pc, r1, r8, asr r1	; <UNPREDICTABLE>
   1f0fc:	andeq	pc, r1, r8, lsr #3
   1f100:	andeq	pc, r1, r8, lsr #3
   1f104:	andeq	pc, r1, r8, lsr #3
   1f108:	andeq	pc, r1, r4, ror #2
   1f10c:	andeq	pc, r1, r8, lsr #3
   1f110:	andeq	pc, r1, r8, lsr #3
   1f114:	andeq	pc, r1, r8, lsr #3
   1f118:	andeq	pc, r1, r8, lsr #3
   1f11c:	andeq	pc, r1, r8, lsr #3
   1f120:	andeq	pc, r1, r8, lsr #3
   1f124:	andeq	pc, r1, r8, lsr #3
   1f128:	andeq	pc, r1, r0, ror r1	; <UNPREDICTABLE>
   1f12c:	andeq	pc, r1, r8, lsr #3
   1f130:	andeq	pc, r1, r8, lsr #3
   1f134:	andeq	pc, r1, r8, lsr #3
   1f138:	andeq	pc, r1, ip, ror r1	; <UNPREDICTABLE>
   1f13c:	andeq	pc, r1, r8, lsr #3
   1f140:	andeq	pc, r1, r8, lsl #3
   1f144:	andeq	pc, r1, r8, lsr #3
   1f148:	muleq	r1, r4, r1
   1f14c:	movw	r0, #7
   1f150:	strb	r0, [sp, #6]
   1f154:	b	1f1a8 <__assert_fail@plt+0xc5f0>
   1f158:	movw	r0, #8
   1f15c:	strb	r0, [sp, #6]
   1f160:	b	1f1a8 <__assert_fail@plt+0xc5f0>
   1f164:	movw	r0, #12
   1f168:	strb	r0, [sp, #6]
   1f16c:	b	1f1a8 <__assert_fail@plt+0xc5f0>
   1f170:	movw	r0, #10
   1f174:	strb	r0, [sp, #6]
   1f178:	b	1f1a8 <__assert_fail@plt+0xc5f0>
   1f17c:	movw	r0, #13
   1f180:	strb	r0, [sp, #6]
   1f184:	b	1f1a8 <__assert_fail@plt+0xc5f0>
   1f188:	movw	r0, #9
   1f18c:	strb	r0, [sp, #6]
   1f190:	b	1f1a8 <__assert_fail@plt+0xc5f0>
   1f194:	movw	r0, #11
   1f198:	strb	r0, [sp, #6]
   1f19c:	b	1f1a8 <__assert_fail@plt+0xc5f0>
   1f1a0:	movw	r0, #92	; 0x5c
   1f1a4:	strb	r0, [sp, #6]
   1f1a8:	ldrb	r0, [sp, #6]
   1f1ac:	add	sp, sp, #8
   1f1b0:	bx	lr
   1f1b4:	push	{fp, lr}
   1f1b8:	mov	fp, sp
   1f1bc:	sub	sp, sp, #24
   1f1c0:	str	r0, [fp, #-4]
   1f1c4:	movw	r0, #0
   1f1c8:	str	r0, [fp, #-8]
   1f1cc:	ldr	r0, [fp, #-4]
   1f1d0:	ldr	r1, [fp, #-8]
   1f1d4:	add	r1, r1, #1
   1f1d8:	str	r1, [fp, #-8]
   1f1dc:	add	r0, r0, r1
   1f1e0:	ldrb	r0, [r0]
   1f1e4:	cmp	r0, #0
   1f1e8:	movw	r0, #0
   1f1ec:	str	r0, [sp, #12]
   1f1f0:	beq	1f224 <__assert_fail@plt+0xc66c>
   1f1f4:	ldr	r0, [fp, #-4]
   1f1f8:	ldr	r1, [fp, #-8]
   1f1fc:	add	r0, r0, r1
   1f200:	ldrb	r1, [r0]
   1f204:	movw	r0, #41458	; 0xa1f2
   1f208:	movt	r0, #7
   1f20c:	bl	12894 <strchr@plt>
   1f210:	movw	r1, #0
   1f214:	cmp	r0, r1
   1f218:	movw	r0, #0
   1f21c:	movne	r0, #1
   1f220:	str	r0, [sp, #12]
   1f224:	ldr	r0, [sp, #12]
   1f228:	tst	r0, #1
   1f22c:	beq	1f234 <__assert_fail@plt+0xc67c>
   1f230:	b	1f1cc <__assert_fail@plt+0xc614>
   1f234:	b	1f238 <__assert_fail@plt+0xc680>
   1f238:	bl	12834 <__ctype_b_loc@plt>
   1f23c:	ldr	r0, [r0]
   1f240:	ldr	lr, [fp, #-4]
   1f244:	ldr	r1, [fp, #-8]
   1f248:	ldrb	r1, [lr, r1]
   1f24c:	mov	lr, r1
   1f250:	add	r0, r0, r1, lsl #1
   1f254:	ldrh	r0, [r0]
   1f258:	and	r0, r0, #2048	; 0x800
   1f25c:	cmp	r0, #0
   1f260:	str	lr, [sp, #8]
   1f264:	beq	1f278 <__assert_fail@plt+0xc6c0>
   1f268:	ldr	r0, [fp, #-8]
   1f26c:	add	r0, r0, #1
   1f270:	str	r0, [fp, #-8]
   1f274:	b	1f238 <__assert_fail@plt+0xc680>
   1f278:	ldr	r0, [fp, #-4]
   1f27c:	ldr	r1, [fp, #-8]
   1f280:	add	r0, r0, r1
   1f284:	ldrb	r0, [r0]
   1f288:	cmp	r0, #46	; 0x2e
   1f28c:	bne	1f2e4 <__assert_fail@plt+0xc72c>
   1f290:	ldr	r0, [fp, #-8]
   1f294:	add	r0, r0, #1
   1f298:	str	r0, [fp, #-8]
   1f29c:	bl	12834 <__ctype_b_loc@plt>
   1f2a0:	ldr	r0, [r0]
   1f2a4:	ldr	lr, [fp, #-4]
   1f2a8:	ldr	r1, [fp, #-8]
   1f2ac:	ldrb	r1, [lr, r1]
   1f2b0:	mov	lr, r1
   1f2b4:	add	r0, r0, r1, lsl #1
   1f2b8:	ldrh	r0, [r0]
   1f2bc:	and	r0, r0, #2048	; 0x800
   1f2c0:	cmp	r0, #0
   1f2c4:	str	lr, [sp, #4]
   1f2c8:	beq	1f2e0 <__assert_fail@plt+0xc728>
   1f2cc:	b	1f2d0 <__assert_fail@plt+0xc718>
   1f2d0:	ldr	r0, [fp, #-8]
   1f2d4:	add	r0, r0, #1
   1f2d8:	str	r0, [fp, #-8]
   1f2dc:	b	1f29c <__assert_fail@plt+0xc6e4>
   1f2e0:	b	1f2e4 <__assert_fail@plt+0xc72c>
   1f2e4:	ldr	r0, [fp, #-8]
   1f2e8:	mov	sp, fp
   1f2ec:	pop	{fp, pc}
   1f2f0:	push	{fp, lr}
   1f2f4:	mov	fp, sp
   1f2f8:	sub	sp, sp, #8
   1f2fc:	strb	r0, [sp, #3]
   1f300:	ldrb	r1, [sp, #3]
   1f304:	movw	r0, #41463	; 0xa1f7
   1f308:	movt	r0, #7
   1f30c:	bl	12894 <strchr@plt>
   1f310:	movw	r1, #0
   1f314:	cmp	r0, r1
   1f318:	beq	1f328 <__assert_fail@plt+0xc770>
   1f31c:	movw	r0, #1
   1f320:	str	r0, [sp, #4]
   1f324:	b	1f358 <__assert_fail@plt+0xc7a0>
   1f328:	ldrb	r1, [sp, #3]
   1f32c:	movw	r0, #41492	; 0xa214
   1f330:	movt	r0, #7
   1f334:	bl	12894 <strchr@plt>
   1f338:	movw	r1, #0
   1f33c:	cmp	r0, r1
   1f340:	beq	1f350 <__assert_fail@plt+0xc798>
   1f344:	movw	r0, #2
   1f348:	str	r0, [sp, #4]
   1f34c:	b	1f358 <__assert_fail@plt+0xc7a0>
   1f350:	movw	r0, #0
   1f354:	str	r0, [sp, #4]
   1f358:	ldr	r0, [sp, #4]
   1f35c:	mov	sp, fp
   1f360:	pop	{fp, pc}
   1f364:	sub	sp, sp, #8
   1f368:	push	{fp, lr}
   1f36c:	mov	fp, sp
   1f370:	sub	sp, sp, #24
   1f374:	str	r3, [fp, #12]
   1f378:	str	r2, [fp, #8]
   1f37c:	str	r0, [fp, #-4]
   1f380:	str	r1, [fp, #-8]
   1f384:	add	r0, fp, #8
   1f388:	str	r0, [sp, #8]
   1f38c:	ldr	r0, [fp, #-4]
   1f390:	ldr	r0, [r0, #4]
   1f394:	ldr	r1, [fp, #-8]
   1f398:	ldr	r2, [sp, #8]
   1f39c:	bl	12a20 <vfprintf@plt>
   1f3a0:	str	r0, [sp, #12]
   1f3a4:	add	r0, sp, #8
   1f3a8:	ldr	r1, [sp, #12]
   1f3ac:	cmp	r1, #0
   1f3b0:	str	r0, [sp, #4]
   1f3b4:	bge	1f3cc <__assert_fail@plt+0xc814>
   1f3b8:	bl	128d0 <__errno_location@plt>
   1f3bc:	ldr	r0, [r0]
   1f3c0:	ldr	lr, [fp, #-4]
   1f3c4:	ldr	r1, [lr, #8]
   1f3c8:	bl	1c74c <__assert_fail@plt+0x9b94>
   1f3cc:	mov	sp, fp
   1f3d0:	pop	{fp, lr}
   1f3d4:	add	sp, sp, #8
   1f3d8:	bx	lr
   1f3dc:	push	{fp, lr}
   1f3e0:	mov	fp, sp
   1f3e4:	sub	sp, sp, #152	; 0x98
   1f3e8:	str	r0, [fp, #-12]
   1f3ec:	str	r1, [fp, #-8]
   1f3f0:	str	r2, [fp, #-16]
   1f3f4:	movw	r0, #0
   1f3f8:	str	r0, [fp, #-52]	; 0xffffffcc
   1f3fc:	str	r0, [fp, #-56]	; 0xffffffc8
   1f400:	ldr	r0, [fp, #-16]
   1f404:	cmp	r0, #43	; 0x2b
   1f408:	bne	1f42c <__assert_fail@plt+0xc874>
   1f40c:	sub	r0, fp, #72	; 0x48
   1f410:	movw	r1, #41497	; 0xa219
   1f414:	movt	r1, #7
   1f418:	bl	12738 <strcpy@plt>
   1f41c:	movw	r1, #1
   1f420:	str	r1, [fp, #-56]	; 0xffffffc8
   1f424:	str	r0, [sp, #44]	; 0x2c
   1f428:	b	1f494 <__assert_fail@plt+0xc8dc>
   1f42c:	mov	r0, #37	; 0x25
   1f430:	strb	r0, [fp, #-72]	; 0xffffffb8
   1f434:	ldr	r0, [fp, #-16]
   1f438:	strb	r0, [fp, #-71]	; 0xffffffb9
   1f43c:	mov	r0, #0
   1f440:	strb	r0, [fp, #-70]	; 0xffffffba
   1f444:	ldr	r0, [fp, #-16]
   1f448:	cmp	r0, #64	; 0x40
   1f44c:	str	r0, [sp, #40]	; 0x28
   1f450:	beq	1f47c <__assert_fail@plt+0xc8c4>
   1f454:	b	1f458 <__assert_fail@plt+0xc8a0>
   1f458:	ldr	r0, [sp, #40]	; 0x28
   1f45c:	sub	r1, r0, #83	; 0x53
   1f460:	cmp	r1, #2
   1f464:	bcc	1f47c <__assert_fail@plt+0xc8c4>
   1f468:	b	1f46c <__assert_fail@plt+0xc8b4>
   1f46c:	ldr	r0, [sp, #40]	; 0x28
   1f470:	cmp	r0, #88	; 0x58
   1f474:	bne	1f488 <__assert_fail@plt+0xc8d0>
   1f478:	b	1f47c <__assert_fail@plt+0xc8c4>
   1f47c:	movw	r0, #1
   1f480:	str	r0, [fp, #-56]	; 0xffffffc8
   1f484:	b	1f490 <__assert_fail@plt+0xc8d8>
   1f488:	movw	r0, #0
   1f48c:	str	r0, [fp, #-56]	; 0xffffffc8
   1f490:	b	1f494 <__assert_fail@plt+0xc8dc>
   1f494:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1f498:	cmp	r0, #0
   1f49c:	beq	1f4f0 <__assert_fail@plt+0xc938>
   1f4a0:	sub	r0, fp, #48	; 0x30
   1f4a4:	ldr	r3, [fp, #-8]
   1f4a8:	movw	r1, #32
   1f4ac:	movw	r2, #41509	; 0xa225
   1f4b0:	movt	r2, #7
   1f4b4:	bl	128e8 <snprintf@plt>
   1f4b8:	str	r0, [fp, #-52]	; 0xffffffcc
   1f4bc:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1f4c0:	cmp	r0, #32
   1f4c4:	bge	1f4cc <__assert_fail@plt+0xc914>
   1f4c8:	b	1f4ec <__assert_fail@plt+0xc934>
   1f4cc:	movw	r0, #41517	; 0xa22d
   1f4d0:	movt	r0, #7
   1f4d4:	movw	r1, #40886	; 0x9fb6
   1f4d8:	movt	r1, #7
   1f4dc:	movw	r2, #665	; 0x299
   1f4e0:	movw	r3, #41543	; 0xa247
   1f4e4:	movt	r3, #7
   1f4e8:	bl	12bb8 <__assert_fail@plt>
   1f4ec:	b	1f500 <__assert_fail@plt+0xc948>
   1f4f0:	movw	r0, #0
   1f4f4:	str	r0, [fp, #-52]	; 0xffffffcc
   1f4f8:	movw	r0, #0
   1f4fc:	strb	r0, [fp, #-48]	; 0xffffffd0
   1f500:	ldr	r0, [fp, #-16]
   1f504:	cmp	r0, #64	; 0x40
   1f508:	beq	1f564 <__assert_fail@plt+0xc9ac>
   1f50c:	sub	r0, fp, #12
   1f510:	bl	12810 <localtime@plt>
   1f514:	str	r0, [fp, #-60]	; 0xffffffc4
   1f518:	ldr	r0, [fp, #-60]	; 0xffffffc4
   1f51c:	movw	lr, #0
   1f520:	cmp	r0, lr
   1f524:	beq	1f560 <__assert_fail@plt+0xc9a8>
   1f528:	sub	r2, fp, #48	; 0x30
   1f52c:	sub	r0, fp, #72	; 0x48
   1f530:	ldr	r1, [fp, #-60]	; 0xffffffc4
   1f534:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1f538:	bl	2083c <__assert_fail@plt+0xdc84>
   1f53c:	str	r0, [sp, #76]	; 0x4c
   1f540:	ldr	r0, [sp, #76]	; 0x4c
   1f544:	movw	r1, #0
   1f548:	cmp	r0, r1
   1f54c:	beq	1f55c <__assert_fail@plt+0xc9a4>
   1f550:	ldr	r0, [sp, #76]	; 0x4c
   1f554:	str	r0, [fp, #-4]
   1f558:	b	1f7b0 <__assert_fail@plt+0xcbf8>
   1f55c:	b	1f560 <__assert_fail@plt+0xc9a8>
   1f560:	b	1f564 <__assert_fail@plt+0xc9ac>
   1f564:	ldr	r0, [fp, #-12]
   1f568:	asr	r1, r0, #31
   1f56c:	str	r0, [sp, #64]	; 0x40
   1f570:	str	r1, [sp, #68]	; 0x44
   1f574:	ldr	r0, [fp, #-12]
   1f578:	cmp	r0, #0
   1f57c:	bge	1f59c <__assert_fail@plt+0xc9e4>
   1f580:	ldr	r0, [sp, #64]	; 0x40
   1f584:	ldr	r1, [sp, #68]	; 0x44
   1f588:	rsbs	r0, r0, #0
   1f58c:	rsc	r1, r1, #0
   1f590:	str	r0, [sp, #36]	; 0x24
   1f594:	str	r1, [sp, #32]
   1f598:	b	1f5b0 <__assert_fail@plt+0xc9f8>
   1f59c:	ldr	r0, [sp, #64]	; 0x40
   1f5a0:	ldr	r1, [sp, #68]	; 0x44
   1f5a4:	str	r0, [sp, #36]	; 0x24
   1f5a8:	str	r1, [sp, #32]
   1f5ac:	b	1f5b0 <__assert_fail@plt+0xc9f8>
   1f5b0:	ldr	r0, [sp, #32]
   1f5b4:	ldr	r1, [sp, #36]	; 0x24
   1f5b8:	mov	r2, sp
   1f5bc:	mov	r3, #0
   1f5c0:	str	r3, [r2, #12]
   1f5c4:	mov	ip, #1
   1f5c8:	str	ip, [r2, #8]
   1f5cc:	str	r3, [r2, #4]
   1f5d0:	str	ip, [r2]
   1f5d4:	movw	r2, #63352	; 0xf778
   1f5d8:	movt	r2, #8
   1f5dc:	add	r2, r2, #1
   1f5e0:	str	r0, [sp, #28]
   1f5e4:	mov	r0, r1
   1f5e8:	ldr	r1, [sp, #28]
   1f5ec:	bl	2e990 <__assert_fail@plt+0x1bdd8>
   1f5f0:	str	r0, [sp, #48]	; 0x30
   1f5f4:	ldr	r0, [sp, #48]	; 0x30
   1f5f8:	movw	r1, #63352	; 0xf778
   1f5fc:	movt	r1, #8
   1f600:	cmp	r0, r1
   1f604:	bls	1f60c <__assert_fail@plt+0xca54>
   1f608:	b	1f62c <__assert_fail@plt+0xca74>
   1f60c:	movw	r0, #41583	; 0xa26f
   1f610:	movt	r0, #7
   1f614:	movw	r1, #40886	; 0x9fb6
   1f618:	movt	r1, #7
   1f61c:	movw	r2, #697	; 0x2b9
   1f620:	movw	r3, #41543	; 0xa247
   1f624:	movt	r3, #7
   1f628:	bl	12bb8 <__assert_fail@plt>
   1f62c:	movw	r0, #791	; 0x317
   1f630:	movw	r1, #63352	; 0xf778
   1f634:	movt	r1, #8
   1f638:	add	r0, r1, r0
   1f63c:	ldr	r1, [sp, #48]	; 0x30
   1f640:	cmp	r1, r0
   1f644:	bcs	1f64c <__assert_fail@plt+0xca94>
   1f648:	b	1f66c <__assert_fail@plt+0xcab4>
   1f64c:	movw	r0, #41591	; 0xa277
   1f650:	movt	r0, #7
   1f654:	movw	r1, #40886	; 0x9fb6
   1f658:	movt	r1, #7
   1f65c:	movw	r2, #698	; 0x2ba
   1f660:	movw	r3, #41543	; 0xa247
   1f664:	movt	r3, #7
   1f668:	bl	12bb8 <__assert_fail@plt>
   1f66c:	ldr	r0, [fp, #-12]
   1f670:	cmp	r0, #0
   1f674:	bge	1f694 <__assert_fail@plt+0xcadc>
   1f678:	ldr	r0, [sp, #48]	; 0x30
   1f67c:	mvn	r1, #0
   1f680:	add	r2, r0, r1
   1f684:	str	r2, [sp, #48]	; 0x30
   1f688:	add	r0, r0, r1
   1f68c:	movw	r1, #45	; 0x2d
   1f690:	strb	r1, [r0]
   1f694:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1f698:	cmp	r0, #0
   1f69c:	beq	1f7a8 <__assert_fail@plt+0xcbf0>
   1f6a0:	ldr	r0, [sp, #48]	; 0x30
   1f6a4:	bl	12888 <strlen@plt>
   1f6a8:	str	r0, [sp, #56]	; 0x38
   1f6ac:	ldr	r0, [sp, #48]	; 0x30
   1f6b0:	movw	lr, #63352	; 0xf778
   1f6b4:	movt	lr, #8
   1f6b8:	sub	r0, r0, lr
   1f6bc:	ldr	lr, [sp, #56]	; 0x38
   1f6c0:	add	r0, r0, lr
   1f6c4:	str	r0, [sp, #60]	; 0x3c
   1f6c8:	ldr	r0, [sp, #60]	; 0x3c
   1f6cc:	movw	lr, #791	; 0x317
   1f6d0:	cmp	lr, r0
   1f6d4:	bls	1f6dc <__assert_fail@plt+0xcb24>
   1f6d8:	b	1f6fc <__assert_fail@plt+0xcb44>
   1f6dc:	movw	r0, #41616	; 0xa290
   1f6e0:	movt	r0, #7
   1f6e4:	movw	r1, #40886	; 0x9fb6
   1f6e8:	movt	r1, #7
   1f6ec:	movw	r2, #711	; 0x2c7
   1f6f0:	movw	r3, #41543	; 0xa247
   1f6f4:	movt	r3, #7
   1f6f8:	bl	12bb8 <__assert_fail@plt>
   1f6fc:	sub	r0, fp, #48	; 0x30
   1f700:	ldr	r1, [sp, #60]	; 0x3c
   1f704:	movw	r2, #791	; 0x317
   1f708:	sub	r1, r2, r1
   1f70c:	sub	r1, r1, #1
   1f710:	str	r1, [sp, #52]	; 0x34
   1f714:	bl	12888 <strlen@plt>
   1f718:	ldr	r1, [sp, #52]	; 0x34
   1f71c:	cmp	r0, r1
   1f720:	bcc	1f760 <__assert_fail@plt+0xcba8>
   1f724:	sub	r0, fp, #48	; 0x30
   1f728:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1f72c:	ldr	r1, [sp, #52]	; 0x34
   1f730:	movw	r2, #0
   1f734:	str	r0, [sp, #24]
   1f738:	mov	r0, r2
   1f73c:	str	r1, [sp, #20]
   1f740:	mov	r1, r2
   1f744:	movw	r2, #41634	; 0xa2a2
   1f748:	movt	r2, #7
   1f74c:	ldr	ip, [sp, #20]
   1f750:	str	ip, [sp]
   1f754:	ldr	lr, [sp, #24]
   1f758:	str	lr, [sp, #4]
   1f75c:	bl	12780 <error@plt>
   1f760:	sub	r0, fp, #48	; 0x30
   1f764:	bl	12888 <strlen@plt>
   1f768:	ldr	lr, [sp, #52]	; 0x34
   1f76c:	cmp	r0, lr
   1f770:	bcs	1f778 <__assert_fail@plt+0xcbc0>
   1f774:	b	1f798 <__assert_fail@plt+0xcbe0>
   1f778:	movw	r0, #41680	; 0xa2d0
   1f77c:	movt	r0, #7
   1f780:	movw	r1, #40886	; 0x9fb6
   1f784:	movt	r1, #7
   1f788:	movw	r2, #720	; 0x2d0
   1f78c:	movw	r3, #41543	; 0xa247
   1f790:	movt	r3, #7
   1f794:	bl	12bb8 <__assert_fail@plt>
   1f798:	sub	r1, fp, #48	; 0x30
   1f79c:	ldr	r0, [sp, #48]	; 0x30
   1f7a0:	bl	126fc <strcat@plt>
   1f7a4:	str	r0, [sp, #16]
   1f7a8:	ldr	r0, [sp, #48]	; 0x30
   1f7ac:	str	r0, [fp, #-4]
   1f7b0:	ldr	r0, [fp, #-4]
   1f7b4:	mov	sp, fp
   1f7b8:	pop	{fp, pc}
   1f7bc:	push	{r4, r5, r6, r7, fp, lr}
   1f7c0:	add	fp, sp, #16
   1f7c4:	sub	sp, sp, #120	; 0x78
   1f7c8:	sub	sp, sp, #1024	; 0x400
   1f7cc:	str	r0, [fp, #-20]	; 0xffffffec
   1f7d0:	str	r1, [fp, #-24]	; 0xffffffe8
   1f7d4:	str	r2, [fp, #-28]	; 0xffffffe4
   1f7d8:	str	r3, [fp, #-32]	; 0xffffffe0
   1f7dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f7e0:	ldr	r0, [r0]
   1f7e4:	cmp	r0, #0
   1f7e8:	str	r0, [sp, #276]	; 0x114
   1f7ec:	beq	1f814 <__assert_fail@plt+0xcc5c>
   1f7f0:	b	1f7f4 <__assert_fail@plt+0xcc3c>
   1f7f4:	ldr	r0, [sp, #276]	; 0x114
   1f7f8:	cmp	r0, #1
   1f7fc:	beq	1f834 <__assert_fail@plt+0xcc7c>
   1f800:	b	1f804 <__assert_fail@plt+0xcc4c>
   1f804:	ldr	r0, [sp, #276]	; 0x114
   1f808:	cmp	r0, #2
   1f80c:	beq	1f85c <__assert_fail@plt+0xcca4>
   1f810:	b	20834 <__assert_fail@plt+0xdc7c>
   1f814:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f818:	ldr	r0, [r0, #8]
   1f81c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1f820:	ldr	r2, [r1, #12]
   1f824:	ldr	r3, [fp, #-20]	; 0xffffffec
   1f828:	movw	r1, #1
   1f82c:	bl	20d9c <__assert_fail@plt+0xe1e4>
   1f830:	b	20834 <__assert_fail@plt+0xdc7c>
   1f834:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f838:	ldr	r0, [r0, #8]
   1f83c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1f840:	ldr	r2, [r1, #12]
   1f844:	ldr	r3, [fp, #-20]	; 0xffffffec
   1f848:	movw	r1, #1
   1f84c:	bl	20d9c <__assert_fail@plt+0xe1e4>
   1f850:	ldr	r0, [fp, #-20]	; 0xffffffec
   1f854:	bl	20e00 <__assert_fail@plt+0xe248>
   1f858:	b	20834 <__assert_fail@plt+0xdc7c>
   1f85c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f860:	ldrb	r0, [r0, #4]
   1f864:	mov	r1, r0
   1f868:	cmp	r0, #121	; 0x79
   1f86c:	str	r1, [sp, #272]	; 0x110
   1f870:	bhi	20830 <__assert_fail@plt+0xdc78>
   1f874:	add	r0, pc, #8
   1f878:	ldr	r1, [sp, #272]	; 0x110
   1f87c:	ldr	r0, [r0, r1, lsl #2]
   1f880:	mov	pc, r0
   1f884:	andeq	r0, r2, r4, lsl #16
   1f888:	andeq	r0, r2, r0, lsr r8
   1f88c:	andeq	r0, r2, r0, lsr r8
   1f890:	andeq	r0, r2, r0, lsr r8
   1f894:	andeq	r0, r2, r0, lsr r8
   1f898:	andeq	r0, r2, r0, lsr r8
   1f89c:	andeq	r0, r2, r0, lsr r8
   1f8a0:	andeq	r0, r2, r0, lsr r8
   1f8a4:	andeq	r0, r2, r0, lsr r8
   1f8a8:	andeq	r0, r2, r0, lsr r8
   1f8ac:	andeq	r0, r2, r0, lsr r8
   1f8b0:	andeq	r0, r2, r0, lsr r8
   1f8b4:	andeq	r0, r2, r0, lsr r8
   1f8b8:	andeq	r0, r2, r0, lsr r8
   1f8bc:	andeq	r0, r2, r0, lsr r8
   1f8c0:	andeq	r0, r2, r0, lsr r8
   1f8c4:	andeq	r0, r2, r0, lsr r8
   1f8c8:	andeq	r0, r2, r0, lsr r8
   1f8cc:	andeq	r0, r2, r0, lsr r8
   1f8d0:	andeq	r0, r2, r0, lsr r8
   1f8d4:	andeq	r0, r2, r0, lsr r8
   1f8d8:	andeq	r0, r2, r0, lsr r8
   1f8dc:	andeq	r0, r2, r0, lsr r8
   1f8e0:	andeq	r0, r2, r0, lsr r8
   1f8e4:	andeq	r0, r2, r0, lsr r8
   1f8e8:	andeq	r0, r2, r0, lsr r8
   1f8ec:	andeq	r0, r2, r0, lsr r8
   1f8f0:	andeq	r0, r2, r0, lsr r8
   1f8f4:	andeq	r0, r2, r0, lsr r8
   1f8f8:	andeq	r0, r2, r0, lsr r8
   1f8fc:	andeq	r0, r2, r0, lsr r8
   1f900:	andeq	r0, r2, r0, lsr r8
   1f904:	andeq	r0, r2, r0, lsr r8
   1f908:	andeq	r0, r2, r0, lsr r8
   1f90c:	andeq	r0, r2, r0, lsr r8
   1f910:	andeq	r0, r2, r0, lsr r8
   1f914:	andeq	r0, r2, r0, lsr r8
   1f918:	andeq	r0, r2, r4, ror #15
   1f91c:	andeq	r0, r2, r0, lsr r8
   1f920:	andeq	r0, r2, r0, lsr r8
   1f924:	andeq	r0, r2, r0, lsr r8
   1f928:	andeq	r0, r2, r0, lsr r8
   1f92c:	andeq	r0, r2, r0, lsr r8
   1f930:	andeq	r0, r2, r0, lsr r8
   1f934:	andeq	r0, r2, r0, lsr r8
   1f938:	andeq	r0, r2, r0, lsr r8
   1f93c:	andeq	r0, r2, r0, lsr r8
   1f940:	andeq	r0, r2, r0, lsr r8
   1f944:	andeq	r0, r2, r0, lsr r8
   1f948:	andeq	r0, r2, r0, lsr r8
   1f94c:	andeq	r0, r2, r0, lsr r8
   1f950:	andeq	r0, r2, r0, lsr r8
   1f954:	andeq	r0, r2, r0, lsr r8
   1f958:	andeq	r0, r2, r0, lsr r8
   1f95c:	andeq	r0, r2, r0, lsr r8
   1f960:	andeq	r0, r2, r0, lsr r8
   1f964:	andeq	r0, r2, r0, lsr r8
   1f968:	andeq	r0, r2, r0, lsr r8
   1f96c:	andeq	r0, r2, r0, lsr r8
   1f970:	andeq	r0, r2, r0, lsr r8
   1f974:	andeq	r0, r2, r0, lsr r8
   1f978:	andeq	r0, r2, r0, lsr r8
   1f97c:	andeq	r0, r2, r0, lsr r8
   1f980:	andeq	r0, r2, r0, lsr r8
   1f984:	andeq	r0, r2, r0, lsr r8
   1f988:	andeq	r0, r2, r0, lsr r8
   1f98c:	andeq	r0, r2, r0, lsr r8
   1f990:	andeq	r0, r2, r0, lsr r8
   1f994:	muleq	r1, r8, fp
   1f998:	andeq	r0, r2, r0, lsr r8
   1f99c:	andeq	pc, r1, r0, lsr ip	; <UNPREDICTABLE>
   1f9a0:	ldrdeq	pc, [r1], -r0
   1f9a4:	andeq	pc, r1, r0, asr #28
   1f9a8:	andeq	r0, r2, r0, lsr r8
   1f9ac:	andeq	r0, r2, r0, lsr r8
   1f9b0:	andeq	r0, r2, r0, lsr r8
   1f9b4:	andeq	r0, r2, r0, lsr r8
   1f9b8:	andeq	r0, r2, r8, asr #32
   1f9bc:	andeq	r0, r2, r0, lsr r8
   1f9c0:	andeq	r0, r2, r0, lsr r8
   1f9c4:	andeq	r0, r2, r0, lsl r3
   1f9c8:	andeq	r0, r2, r0, lsr r8
   1f9cc:	andeq	r0, r2, r0, lsr r8
   1f9d0:	andeq	r0, r2, ip, ror #7
   1f9d4:	andeq	r0, r2, r0, lsr r8
   1f9d8:	andeq	r0, r2, ip, asr #9
   1f9dc:	andeq	r0, r2, r0, lsr r8
   1f9e0:	andeq	r0, r2, r0, lsr r8
   1f9e4:	andeq	r0, r2, r0, lsr r8
   1f9e8:	andeq	r0, r2, r8, lsr r5
   1f9ec:	andeq	r0, r2, r0, lsl r7
   1f9f0:	andeq	r0, r2, r0, lsr r8
   1f9f4:	andeq	r0, r2, r0, lsr r8
   1f9f8:	andeq	r0, r2, r0, lsr r8
   1f9fc:	andeq	r0, r2, r0, lsr r8
   1fa00:	andeq	r0, r2, r0, lsr r8
   1fa04:	andeq	r0, r2, r0, lsr r8
   1fa08:	andeq	pc, r1, ip, ror #20
   1fa0c:			; <UNDEFINED> instruction: 0x0001fabc
   1fa10:	andeq	pc, r1, r8, lsr #22
   1fa14:	andeq	pc, r1, r8, ror fp	; <UNPREDICTABLE>
   1fa18:	andeq	r0, r2, r0, lsr r8
   1fa1c:	andeq	pc, r1, r4, lsl #24
   1fa20:	andeq	pc, r1, r4, ror ip	; <UNPREDICTABLE>
   1fa24:	andeq	pc, r1, ip, lsr sp	; <UNPREDICTABLE>
   1fa28:	andeq	pc, r1, ip, lsr #29
   1fa2c:	andeq	r0, r2, r0, lsr r8
   1fa30:	andeq	pc, r1, r8, lsl pc	; <UNPREDICTABLE>
   1fa34:	andeq	pc, r1, r8, lsl #31
   1fa38:	andeq	r0, r2, r4, ror r0
   1fa3c:	andeq	r0, r2, ip, lsl #5
   1fa40:	andeq	r0, r2, r0, lsr r8
   1fa44:	strdeq	r0, [r2], -r8
   1fa48:	andeq	r0, r2, r0, lsr r8
   1fa4c:	andeq	r0, r2, r0, lsr r8
   1fa50:	andeq	r0, r2, r0, lsl #7
   1fa54:	andeq	r0, r2, r0, lsr #8
   1fa58:	andeq	r0, r2, r0, ror r4
   1fa5c:	andeq	r0, r2, r0, lsr r8
   1fa60:	andeq	r0, r2, r0, lsr r8
   1fa64:	andeq	r0, r2, r0, lsr r8
   1fa68:	andeq	r0, r2, ip, asr #13
   1fa6c:	ldr	r0, [fp, #-20]	; 0xffffffec
   1fa70:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1fa74:	ldr	r1, [r1, #8]
   1fa78:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1fa7c:	add	r3, sp, #464	; 0x1d0
   1fa80:	str	r0, [sp, #268]	; 0x10c
   1fa84:	mov	r0, r3
   1fa88:	str	r1, [sp, #264]	; 0x108
   1fa8c:	mov	r1, r2
   1fa90:	bl	4b8dc <__assert_fail@plt+0x38d24>
   1fa94:	ldr	r0, [sp, #464]	; 0x1d0
   1fa98:	ldr	r1, [sp, #468]	; 0x1d4
   1fa9c:	bl	20e44 <__assert_fail@plt+0xe28c>
   1faa0:	ldr	r1, [sp, #268]	; 0x10c
   1faa4:	str	r0, [sp, #260]	; 0x104
   1faa8:	mov	r0, r1
   1faac:	ldr	r1, [sp, #264]	; 0x108
   1fab0:	ldr	r2, [sp, #260]	; 0x104
   1fab4:	bl	1f364 <__assert_fail@plt+0xc7ac>
   1fab8:	b	20830 <__assert_fail@plt+0xdc78>
   1fabc:	add	r2, sp, #476	; 0x1dc
   1fac0:	ldr	r0, [fp, #-20]	; 0xffffffec
   1fac4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1fac8:	ldr	r1, [r1, #8]
   1facc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1fad0:	ldr	ip, [r3, #64]	; 0x40
   1fad4:	ldr	r3, [r3, #68]	; 0x44
   1fad8:	mov	lr, sp
   1fadc:	mov	r4, #0
   1fae0:	str	r4, [lr, #12]
   1fae4:	mov	r5, #512	; 0x200
   1fae8:	str	r5, [lr, #8]
   1faec:	str	r4, [lr, #4]
   1faf0:	str	r5, [lr]
   1faf4:	str	r0, [sp, #256]	; 0x100
   1faf8:	mov	r0, ip
   1fafc:	str	r1, [sp, #252]	; 0xfc
   1fb00:	mov	r1, r3
   1fb04:	mov	r3, r4
   1fb08:	bl	2e990 <__assert_fail@plt+0x1bdd8>
   1fb0c:	ldr	r1, [sp, #256]	; 0x100
   1fb10:	str	r0, [sp, #248]	; 0xf8
   1fb14:	mov	r0, r1
   1fb18:	ldr	r1, [sp, #252]	; 0xfc
   1fb1c:	ldr	r2, [sp, #248]	; 0xf8
   1fb20:	bl	1f364 <__assert_fail@plt+0xc7ac>
   1fb24:	b	20830 <__assert_fail@plt+0xdc78>
   1fb28:	ldr	r0, [fp, #-20]	; 0xffffffec
   1fb2c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1fb30:	ldr	r1, [r1, #8]
   1fb34:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1fb38:	add	r3, sp, #456	; 0x1c8
   1fb3c:	str	r0, [sp, #244]	; 0xf4
   1fb40:	mov	r0, r3
   1fb44:	str	r1, [sp, #240]	; 0xf0
   1fb48:	mov	r1, r2
   1fb4c:	bl	4b900 <__assert_fail@plt+0x38d48>
   1fb50:	ldr	r0, [sp, #456]	; 0x1c8
   1fb54:	ldr	r1, [sp, #460]	; 0x1cc
   1fb58:	bl	20e44 <__assert_fail@plt+0xe28c>
   1fb5c:	ldr	r1, [sp, #244]	; 0xf4
   1fb60:	str	r0, [sp, #236]	; 0xec
   1fb64:	mov	r0, r1
   1fb68:	ldr	r1, [sp, #240]	; 0xf0
   1fb6c:	ldr	r2, [sp, #236]	; 0xec
   1fb70:	bl	1f364 <__assert_fail@plt+0xc7ac>
   1fb74:	b	20830 <__assert_fail@plt+0xdc78>
   1fb78:	ldr	r0, [fp, #-20]	; 0xffffffec
   1fb7c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1fb80:	ldr	r1, [r1, #8]
   1fb84:	movw	r2, #92	; 0x5c
   1fb88:	movt	r2, #9
   1fb8c:	ldr	r2, [r2]
   1fb90:	bl	1f364 <__assert_fail@plt+0xc7ac>
   1fb94:	b	20830 <__assert_fail@plt+0xdc78>
   1fb98:	add	r2, sp, #476	; 0x1dc
   1fb9c:	ldr	r0, [fp, #-20]	; 0xffffffec
   1fba0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1fba4:	ldr	r1, [r1, #8]
   1fba8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1fbac:	ldr	ip, [r3]
   1fbb0:	ldr	r3, [r3, #4]
   1fbb4:	mov	lr, sp
   1fbb8:	mov	r4, #0
   1fbbc:	str	r4, [lr, #12]
   1fbc0:	mov	r5, #1
   1fbc4:	str	r5, [lr, #8]
   1fbc8:	str	r4, [lr, #4]
   1fbcc:	str	r5, [lr]
   1fbd0:	str	r0, [sp, #232]	; 0xe8
   1fbd4:	mov	r0, ip
   1fbd8:	str	r1, [sp, #228]	; 0xe4
   1fbdc:	mov	r1, r3
   1fbe0:	mov	r3, r4
   1fbe4:	bl	2e990 <__assert_fail@plt+0x1bdd8>
   1fbe8:	ldr	r1, [sp, #232]	; 0xe8
   1fbec:	str	r0, [sp, #224]	; 0xe0
   1fbf0:	mov	r0, r1
   1fbf4:	ldr	r1, [sp, #228]	; 0xe4
   1fbf8:	ldr	r2, [sp, #224]	; 0xe0
   1fbfc:	bl	1f364 <__assert_fail@plt+0xc7ac>
   1fc00:	b	20830 <__assert_fail@plt+0xdc78>
   1fc04:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1fc08:	bl	2c428 <__assert_fail@plt+0x19870>
   1fc0c:	str	r0, [sp, #452]	; 0x1c4
   1fc10:	ldr	r0, [fp, #-20]	; 0xffffffec
   1fc14:	ldr	lr, [fp, #-24]	; 0xffffffe8
   1fc18:	ldr	r1, [lr, #8]
   1fc1c:	ldr	r2, [sp, #452]	; 0x1c4
   1fc20:	bl	21130 <__assert_fail@plt+0xe578>
   1fc24:	ldr	r0, [sp, #452]	; 0x1c4
   1fc28:	bl	50c68 <__assert_fail@plt+0x3e0b0>
   1fc2c:	b	20830 <__assert_fail@plt+0xdc78>
   1fc30:	ldr	r0, [fp, #-20]	; 0xffffffec
   1fc34:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1fc38:	ldr	r1, [r1, #8]
   1fc3c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1fc40:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1fc44:	str	r0, [sp, #220]	; 0xdc
   1fc48:	mov	r0, r2
   1fc4c:	str	r1, [sp, #216]	; 0xd8
   1fc50:	mov	r1, r3
   1fc54:	bl	21384 <__assert_fail@plt+0xe7cc>
   1fc58:	ldr	r1, [sp, #220]	; 0xdc
   1fc5c:	str	r0, [sp, #212]	; 0xd4
   1fc60:	mov	r0, r1
   1fc64:	ldr	r1, [sp, #216]	; 0xd8
   1fc68:	ldr	r2, [sp, #212]	; 0xd4
   1fc6c:	bl	21130 <__assert_fail@plt+0xe578>
   1fc70:	b	20830 <__assert_fail@plt+0xdc78>
   1fc74:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1fc78:	ldr	r0, [r0, #28]
   1fc7c:	bl	12b94 <getgrgid@plt>
   1fc80:	str	r0, [sp, #448]	; 0x1c0
   1fc84:	ldr	r0, [sp, #448]	; 0x1c0
   1fc88:	movw	lr, #0
   1fc8c:	cmp	r0, lr
   1fc90:	beq	1fccc <__assert_fail@plt+0xd114>
   1fc94:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1fc98:	ldr	r0, [r0, #8]
   1fc9c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1fca0:	ldr	r1, [r1, #12]
   1fca4:	add	r0, r0, r1
   1fca8:	movw	r1, #115	; 0x73
   1fcac:	strb	r1, [r0]
   1fcb0:	ldr	r0, [fp, #-20]	; 0xffffffec
   1fcb4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1fcb8:	ldr	r1, [r1, #8]
   1fcbc:	ldr	r2, [sp, #448]	; 0x1c0
   1fcc0:	ldr	r2, [r2]
   1fcc4:	bl	1f364 <__assert_fail@plt+0xc7ac>
   1fcc8:	b	20830 <__assert_fail@plt+0xdc78>
   1fccc:	b	1fcd0 <__assert_fail@plt+0xd118>
   1fcd0:	add	r2, sp, #476	; 0x1dc
   1fcd4:	ldr	r0, [fp, #-20]	; 0xffffffec
   1fcd8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1fcdc:	ldr	r1, [r1, #8]
   1fce0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1fce4:	ldr	r3, [r3, #28]
   1fce8:	mov	ip, #0
   1fcec:	mov	lr, sp
   1fcf0:	mov	r4, #0
   1fcf4:	str	r4, [lr, #12]
   1fcf8:	mov	r5, #1
   1fcfc:	str	r5, [lr, #8]
   1fd00:	str	r4, [lr, #4]
   1fd04:	str	r5, [lr]
   1fd08:	str	r0, [sp, #208]	; 0xd0
   1fd0c:	mov	r0, r3
   1fd10:	str	r1, [sp, #204]	; 0xcc
   1fd14:	mov	r1, ip
   1fd18:	mov	r3, r4
   1fd1c:	bl	2e990 <__assert_fail@plt+0x1bdd8>
   1fd20:	ldr	r1, [sp, #208]	; 0xd0
   1fd24:	str	r0, [sp, #200]	; 0xc8
   1fd28:	mov	r0, r1
   1fd2c:	ldr	r1, [sp, #204]	; 0xcc
   1fd30:	ldr	r2, [sp, #200]	; 0xc8
   1fd34:	bl	1f364 <__assert_fail@plt+0xc7ac>
   1fd38:	b	20830 <__assert_fail@plt+0xdc78>
   1fd3c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1fd40:	bl	4f138 <__assert_fail@plt+0x3c580>
   1fd44:	str	r0, [sp, #444]	; 0x1bc
   1fd48:	ldr	r0, [sp, #444]	; 0x1bc
   1fd4c:	ldr	lr, [sp, #444]	; 0x1bc
   1fd50:	str	r0, [sp, #196]	; 0xc4
   1fd54:	mov	r0, lr
   1fd58:	bl	12888 <strlen@plt>
   1fd5c:	ldr	lr, [sp, #196]	; 0xc4
   1fd60:	add	r0, lr, r0
   1fd64:	mvn	lr, #0
   1fd68:	add	r0, r0, lr
   1fd6c:	str	r0, [sp, #440]	; 0x1b8
   1fd70:	ldr	r0, [sp, #444]	; 0x1bc
   1fd74:	ldr	r1, [sp, #440]	; 0x1b8
   1fd78:	cmp	r0, r1
   1fd7c:	bhi	1fdac <__assert_fail@plt+0xd1f4>
   1fd80:	ldr	r0, [sp, #440]	; 0x1b8
   1fd84:	ldrb	r0, [r0]
   1fd88:	cmp	r0, #47	; 0x2f
   1fd8c:	beq	1fd94 <__assert_fail@plt+0xd1dc>
   1fd90:	b	1fdac <__assert_fail@plt+0xd1f4>
   1fd94:	b	1fd98 <__assert_fail@plt+0xd1e0>
   1fd98:	ldr	r0, [sp, #440]	; 0x1b8
   1fd9c:	mvn	r1, #0
   1fda0:	add	r0, r0, r1
   1fda4:	str	r0, [sp, #440]	; 0x1b8
   1fda8:	b	1fd70 <__assert_fail@plt+0xd1b8>
   1fdac:	ldr	r0, [sp, #444]	; 0x1bc
   1fdb0:	ldr	r1, [sp, #440]	; 0x1b8
   1fdb4:	cmp	r0, r1
   1fdb8:	bcs	1fdd8 <__assert_fail@plt+0xd220>
   1fdbc:	ldr	r0, [sp, #440]	; 0x1b8
   1fdc0:	ldrb	r0, [r0, #1]
   1fdc4:	cmp	r0, #47	; 0x2f
   1fdc8:	bne	1fdd8 <__assert_fail@plt+0xd220>
   1fdcc:	ldr	r0, [sp, #440]	; 0x1b8
   1fdd0:	movw	r1, #0
   1fdd4:	strb	r1, [r0, #1]
   1fdd8:	ldr	r0, [sp, #444]	; 0x1bc
   1fddc:	movw	r1, #47	; 0x2f
   1fde0:	bl	12a14 <strrchr@plt>
   1fde4:	str	r0, [sp, #440]	; 0x1b8
   1fde8:	ldr	r0, [sp, #440]	; 0x1b8
   1fdec:	movw	r1, #0
   1fdf0:	cmp	r0, r1
   1fdf4:	bne	1fe14 <__assert_fail@plt+0xd25c>
   1fdf8:	ldr	r0, [fp, #-20]	; 0xffffffec
   1fdfc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1fe00:	ldr	r1, [r1, #8]
   1fe04:	movw	r2, #35940	; 0x8c64
   1fe08:	movt	r2, #7
   1fe0c:	bl	21130 <__assert_fail@plt+0xe578>
   1fe10:	b	1fe34 <__assert_fail@plt+0xd27c>
   1fe14:	ldr	r0, [sp, #440]	; 0x1b8
   1fe18:	movw	r1, #0
   1fe1c:	strb	r1, [r0]
   1fe20:	ldr	r0, [fp, #-20]	; 0xffffffec
   1fe24:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1fe28:	ldr	r1, [r1, #8]
   1fe2c:	ldr	r2, [sp, #444]	; 0x1bc
   1fe30:	bl	21130 <__assert_fail@plt+0xe578>
   1fe34:	ldr	r0, [sp, #444]	; 0x1bc
   1fe38:	bl	50c68 <__assert_fail@plt+0x3e0b0>
   1fe3c:	b	20830 <__assert_fail@plt+0xdc78>
   1fe40:	movw	r0, #92	; 0x5c
   1fe44:	movt	r0, #9
   1fe48:	ldr	r0, [r0, #20]
   1fe4c:	add	r0, r0, #1
   1fe50:	bl	4c394 <__assert_fail@plt+0x397dc>
   1fe54:	str	r0, [sp, #436]	; 0x1b4
   1fe58:	ldr	r0, [sp, #436]	; 0x1b4
   1fe5c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1fe60:	movw	lr, #92	; 0x5c
   1fe64:	movt	lr, #9
   1fe68:	ldr	r2, [lr, #20]
   1fe6c:	str	lr, [sp, #192]	; 0xc0
   1fe70:	bl	125c4 <memcpy@plt>
   1fe74:	ldr	r0, [sp, #436]	; 0x1b4
   1fe78:	ldr	r1, [sp, #192]	; 0xc0
   1fe7c:	ldr	r2, [r1, #20]
   1fe80:	add	r0, r0, r2
   1fe84:	movw	r2, #0
   1fe88:	strb	r2, [r0]
   1fe8c:	ldr	r0, [fp, #-20]	; 0xffffffec
   1fe90:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1fe94:	ldr	r1, [r2, #8]
   1fe98:	ldr	r2, [sp, #436]	; 0x1b4
   1fe9c:	bl	1f364 <__assert_fail@plt+0xc7ac>
   1fea0:	ldr	r0, [sp, #436]	; 0x1b4
   1fea4:	bl	50c68 <__assert_fail@plt+0x3e0b0>
   1fea8:	b	20830 <__assert_fail@plt+0xdc78>
   1feac:	add	r2, sp, #476	; 0x1dc
   1feb0:	ldr	r0, [fp, #-20]	; 0xffffffec
   1feb4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1feb8:	ldr	r1, [r1, #8]
   1febc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1fec0:	ldr	ip, [r3, #96]	; 0x60
   1fec4:	ldr	r3, [r3, #100]	; 0x64
   1fec8:	mov	lr, sp
   1fecc:	mov	r4, #0
   1fed0:	str	r4, [lr, #12]
   1fed4:	mov	r5, #1
   1fed8:	str	r5, [lr, #8]
   1fedc:	str	r4, [lr, #4]
   1fee0:	str	r5, [lr]
   1fee4:	str	r0, [sp, #188]	; 0xbc
   1fee8:	mov	r0, ip
   1feec:	str	r1, [sp, #184]	; 0xb8
   1fef0:	mov	r1, r3
   1fef4:	mov	r3, r4
   1fef8:	bl	2e990 <__assert_fail@plt+0x1bdd8>
   1fefc:	ldr	r1, [sp, #188]	; 0xbc
   1ff00:	str	r0, [sp, #180]	; 0xb4
   1ff04:	mov	r0, r1
   1ff08:	ldr	r1, [sp, #184]	; 0xb8
   1ff0c:	ldr	r2, [sp, #180]	; 0xb4
   1ff10:	bl	1f364 <__assert_fail@plt+0xc7ac>
   1ff14:	b	20830 <__assert_fail@plt+0xdc78>
   1ff18:	add	r2, sp, #476	; 0x1dc
   1ff1c:	ldr	r0, [fp, #-20]	; 0xffffffec
   1ff20:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1ff24:	ldr	r1, [r1, #8]
   1ff28:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1ff2c:	ldr	ip, [r3, #64]	; 0x40
   1ff30:	ldr	r3, [r3, #68]	; 0x44
   1ff34:	mov	lr, sp
   1ff38:	mov	r4, #0
   1ff3c:	str	r4, [lr, #12]
   1ff40:	mov	r5, #1024	; 0x400
   1ff44:	str	r5, [lr, #8]
   1ff48:	str	r4, [lr, #4]
   1ff4c:	mov	r5, #512	; 0x200
   1ff50:	str	r5, [lr]
   1ff54:	str	r0, [sp, #176]	; 0xb0
   1ff58:	mov	r0, ip
   1ff5c:	str	r1, [sp, #172]	; 0xac
   1ff60:	mov	r1, r3
   1ff64:	mov	r3, r4
   1ff68:	bl	2e990 <__assert_fail@plt+0x1bdd8>
   1ff6c:	ldr	r1, [sp, #176]	; 0xb0
   1ff70:	str	r0, [sp, #168]	; 0xa8
   1ff74:	mov	r0, r1
   1ff78:	ldr	r1, [sp, #172]	; 0xac
   1ff7c:	ldr	r2, [sp, #168]	; 0xa8
   1ff80:	bl	1f364 <__assert_fail@plt+0xc7ac>
   1ff84:	b	20830 <__assert_fail@plt+0xdc78>
   1ff88:	movw	r0, #0
   1ff8c:	str	r0, [sp, #432]	; 0x1b0
   1ff90:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1ff94:	ldr	r0, [r0, #16]
   1ff98:	and	r0, r0, #61440	; 0xf000
   1ff9c:	cmp	r0, #40960	; 0xa000
   1ffa0:	bne	1fffc <__assert_fail@plt+0xd444>
   1ffa4:	movw	r0, #92	; 0x5c
   1ffa8:	movt	r0, #9
   1ffac:	ldr	r1, [r0, #16]
   1ffb0:	ldr	r0, [r0, #12]
   1ffb4:	str	r0, [sp, #164]	; 0xa4
   1ffb8:	mov	r0, r1
   1ffbc:	ldr	r1, [sp, #164]	; 0xa4
   1ffc0:	bl	2ba3c <__assert_fail@plt+0x18e84>
   1ffc4:	str	r0, [sp, #432]	; 0x1b0
   1ffc8:	ldr	r0, [sp, #432]	; 0x1b0
   1ffcc:	movw	r1, #0
   1ffd0:	cmp	r0, r1
   1ffd4:	bne	1fff8 <__assert_fail@plt+0xd440>
   1ffd8:	bl	128d0 <__errno_location@plt>
   1ffdc:	ldr	r0, [r0]
   1ffe0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1ffe4:	bl	1c000 <__assert_fail@plt+0x9448>
   1ffe8:	movw	r0, #92	; 0x5c
   1ffec:	movt	r0, #9
   1fff0:	movw	r1, #1
   1fff4:	str	r1, [r0, #28]
   1fff8:	b	1fffc <__assert_fail@plt+0xd444>
   1fffc:	ldr	r0, [sp, #432]	; 0x1b0
   20000:	movw	r1, #0
   20004:	cmp	r0, r1
   20008:	beq	20024 <__assert_fail@plt+0xd46c>
   2000c:	ldr	r0, [fp, #-20]	; 0xffffffec
   20010:	ldr	r1, [fp, #-24]	; 0xffffffe8
   20014:	ldr	r1, [r1, #8]
   20018:	ldr	r2, [sp, #432]	; 0x1b0
   2001c:	bl	21130 <__assert_fail@plt+0xe578>
   20020:	b	2003c <__assert_fail@plt+0xd484>
   20024:	ldr	r0, [fp, #-20]	; 0xffffffec
   20028:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2002c:	ldr	r1, [r1, #8]
   20030:	movw	r2, #39197	; 0x991d
   20034:	movt	r2, #7
   20038:	bl	21130 <__assert_fail@plt+0xe578>
   2003c:	ldr	r0, [sp, #432]	; 0x1b0
   20040:	bl	50c68 <__assert_fail@plt+0x3e0b0>
   20044:	b	20830 <__assert_fail@plt+0xdc78>
   20048:	add	r1, sp, #416	; 0x1a0
   2004c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   20050:	bl	2cb38 <__assert_fail@plt+0x19f80>
   20054:	add	r2, sp, #416	; 0x1a0
   20058:	movw	r0, #0
   2005c:	strb	r0, [sp, #426]	; 0x1aa
   20060:	ldr	r0, [fp, #-20]	; 0xffffffec
   20064:	ldr	r1, [fp, #-24]	; 0xffffffe8
   20068:	ldr	r1, [r1, #8]
   2006c:	bl	1f364 <__assert_fail@plt+0xc7ac>
   20070:	b	20830 <__assert_fail@plt+0xdc78>
   20074:	ldr	r0, [fp, #-32]	; 0xffffffe0
   20078:	ldr	r0, [r0, #16]
   2007c:	str	r0, [sp, #412]	; 0x19c
   20080:	movw	r0, #1
   20084:	strb	r0, [sp, #411]	; 0x19b
   20088:	ldr	r0, [fp, #-20]	; 0xffffffec
   2008c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   20090:	ldr	r1, [r1, #8]
   20094:	ldrb	r2, [sp, #411]	; 0x19b
   20098:	tst	r2, #1
   2009c:	str	r0, [sp, #160]	; 0xa0
   200a0:	str	r1, [sp, #156]	; 0x9c
   200a4:	beq	200bc <__assert_fail@plt+0xd504>
   200a8:	ldr	r0, [sp, #412]	; 0x19c
   200ac:	movw	r1, #4095	; 0xfff
   200b0:	and	r0, r0, r1
   200b4:	str	r0, [sp, #152]	; 0x98
   200b8:	b	2026c <__assert_fail@plt+0xd6b4>
   200bc:	ldr	r0, [sp, #412]	; 0x19c
   200c0:	and	r0, r0, #2048	; 0x800
   200c4:	cmp	r0, #0
   200c8:	movw	r0, #0
   200cc:	movne	r0, #1
   200d0:	tst	r0, #1
   200d4:	movw	r0, #2048	; 0x800
   200d8:	moveq	r0, #0
   200dc:	ldr	r1, [sp, #412]	; 0x19c
   200e0:	and	r1, r1, #1024	; 0x400
   200e4:	cmp	r1, #0
   200e8:	movw	r1, #0
   200ec:	movne	r1, #1
   200f0:	tst	r1, #1
   200f4:	movw	r1, #1024	; 0x400
   200f8:	moveq	r1, #0
   200fc:	orr	r0, r0, r1
   20100:	ldr	r1, [sp, #412]	; 0x19c
   20104:	and	r1, r1, #512	; 0x200
   20108:	cmp	r1, #0
   2010c:	movw	r1, #0
   20110:	movne	r1, #1
   20114:	tst	r1, #1
   20118:	movw	r1, #512	; 0x200
   2011c:	moveq	r1, #0
   20120:	orr	r0, r0, r1
   20124:	ldr	r1, [sp, #412]	; 0x19c
   20128:	and	r1, r1, #256	; 0x100
   2012c:	cmp	r1, #0
   20130:	movw	r1, #0
   20134:	movne	r1, #1
   20138:	tst	r1, #1
   2013c:	movw	r1, #256	; 0x100
   20140:	moveq	r1, #0
   20144:	orr	r0, r0, r1
   20148:	ldr	r1, [sp, #412]	; 0x19c
   2014c:	and	r1, r1, #128	; 0x80
   20150:	cmp	r1, #0
   20154:	movw	r1, #0
   20158:	movne	r1, #1
   2015c:	tst	r1, #1
   20160:	movw	r1, #128	; 0x80
   20164:	moveq	r1, #0
   20168:	orr	r0, r0, r1
   2016c:	ldr	r1, [sp, #412]	; 0x19c
   20170:	and	r1, r1, #64	; 0x40
   20174:	cmp	r1, #0
   20178:	movw	r1, #0
   2017c:	movne	r1, #1
   20180:	tst	r1, #1
   20184:	movw	r1, #64	; 0x40
   20188:	moveq	r1, #0
   2018c:	orr	r0, r0, r1
   20190:	ldr	r1, [sp, #412]	; 0x19c
   20194:	and	r1, r1, #32
   20198:	cmp	r1, #0
   2019c:	movw	r1, #0
   201a0:	movne	r1, #1
   201a4:	tst	r1, #1
   201a8:	movw	r1, #32
   201ac:	moveq	r1, #0
   201b0:	orr	r0, r0, r1
   201b4:	ldr	r1, [sp, #412]	; 0x19c
   201b8:	and	r1, r1, #16
   201bc:	cmp	r1, #0
   201c0:	movw	r1, #0
   201c4:	movne	r1, #1
   201c8:	tst	r1, #1
   201cc:	movw	r1, #16
   201d0:	moveq	r1, #0
   201d4:	orr	r0, r0, r1
   201d8:	ldr	r1, [sp, #412]	; 0x19c
   201dc:	and	r1, r1, #8
   201e0:	cmp	r1, #0
   201e4:	movw	r1, #0
   201e8:	movne	r1, #1
   201ec:	tst	r1, #1
   201f0:	movw	r1, #8
   201f4:	moveq	r1, #0
   201f8:	orr	r0, r0, r1
   201fc:	ldr	r1, [sp, #412]	; 0x19c
   20200:	and	r1, r1, #4
   20204:	cmp	r1, #0
   20208:	movw	r1, #0
   2020c:	movne	r1, #1
   20210:	tst	r1, #1
   20214:	movw	r1, #4
   20218:	moveq	r1, #0
   2021c:	orr	r0, r0, r1
   20220:	ldr	r1, [sp, #412]	; 0x19c
   20224:	and	r1, r1, #2
   20228:	cmp	r1, #0
   2022c:	movw	r1, #0
   20230:	movne	r1, #1
   20234:	tst	r1, #1
   20238:	movw	r1, #2
   2023c:	moveq	r1, #0
   20240:	orr	r0, r0, r1
   20244:	ldr	r1, [sp, #412]	; 0x19c
   20248:	and	r1, r1, #1
   2024c:	cmp	r1, #0
   20250:	movw	r1, #0
   20254:	movne	r1, #1
   20258:	tst	r1, #1
   2025c:	movw	r1, #1
   20260:	moveq	r1, #0
   20264:	orr	r0, r0, r1
   20268:	str	r0, [sp, #152]	; 0x98
   2026c:	ldr	r0, [sp, #152]	; 0x98
   20270:	ldr	r1, [sp, #160]	; 0xa0
   20274:	str	r0, [sp, #148]	; 0x94
   20278:	mov	r0, r1
   2027c:	ldr	r1, [sp, #156]	; 0x9c
   20280:	ldr	r2, [sp, #148]	; 0x94
   20284:	bl	1f364 <__assert_fail@plt+0xc7ac>
   20288:	b	20830 <__assert_fail@plt+0xdc78>
   2028c:	add	r2, sp, #476	; 0x1dc
   20290:	ldr	r0, [fp, #-20]	; 0xffffffec
   20294:	ldr	r1, [fp, #-24]	; 0xffffffe8
   20298:	ldr	r1, [r1, #8]
   2029c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   202a0:	ldr	r3, [r3, #20]
   202a4:	mov	ip, #0
   202a8:	mov	lr, sp
   202ac:	mov	r4, #0
   202b0:	str	r4, [lr, #12]
   202b4:	mov	r5, #1
   202b8:	str	r5, [lr, #8]
   202bc:	str	r4, [lr, #4]
   202c0:	str	r5, [lr]
   202c4:	str	r0, [sp, #144]	; 0x90
   202c8:	mov	r0, r3
   202cc:	str	r1, [sp, #140]	; 0x8c
   202d0:	mov	r1, ip
   202d4:	mov	r3, r4
   202d8:	bl	2e990 <__assert_fail@plt+0x1bdd8>
   202dc:	ldr	r1, [sp, #144]	; 0x90
   202e0:	str	r0, [sp, #136]	; 0x88
   202e4:	mov	r0, r1
   202e8:	ldr	r1, [sp, #140]	; 0x8c
   202ec:	ldr	r2, [sp, #136]	; 0x88
   202f0:	bl	1f364 <__assert_fail@plt+0xc7ac>
   202f4:	b	20830 <__assert_fail@plt+0xdc78>
   202f8:	ldr	r0, [fp, #-20]	; 0xffffffec
   202fc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   20300:	ldr	r1, [r1, #8]
   20304:	ldr	r2, [fp, #-28]	; 0xffffffe4
   20308:	bl	21130 <__assert_fail@plt+0xe578>
   2030c:	b	20830 <__assert_fail@plt+0xdc78>
   20310:	movw	r0, #92	; 0x5c
   20314:	movt	r0, #9
   20318:	ldr	r0, [r0]
   2031c:	cmp	r0, #0
   20320:	ble	2035c <__assert_fail@plt+0xd7a4>
   20324:	ldr	r0, [fp, #-28]	; 0xffffffe4
   20328:	movw	r1, #92	; 0x5c
   2032c:	movt	r1, #9
   20330:	ldr	r1, [r1, #20]
   20334:	add	r0, r0, r1
   20338:	str	r0, [sp, #472]	; 0x1d8
   2033c:	ldr	r0, [sp, #472]	; 0x1d8
   20340:	ldrb	r0, [r0]
   20344:	cmp	r0, #47	; 0x2f
   20348:	bne	20358 <__assert_fail@plt+0xd7a0>
   2034c:	ldr	r0, [sp, #472]	; 0x1d8
   20350:	add	r0, r0, #1
   20354:	str	r0, [sp, #472]	; 0x1d8
   20358:	b	20368 <__assert_fail@plt+0xd7b0>
   2035c:	movw	r0, #39197	; 0x991d
   20360:	movt	r0, #7
   20364:	str	r0, [sp, #472]	; 0x1d8
   20368:	ldr	r0, [fp, #-20]	; 0xffffffec
   2036c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   20370:	ldr	r1, [r1, #8]
   20374:	ldr	r2, [sp, #472]	; 0x1d8
   20378:	bl	21130 <__assert_fail@plt+0xe578>
   2037c:	b	20830 <__assert_fail@plt+0xdc78>
   20380:	add	r2, sp, #476	; 0x1dc
   20384:	ldr	r0, [fp, #-20]	; 0xffffffec
   20388:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2038c:	ldr	r1, [r1, #8]
   20390:	ldr	r3, [fp, #-32]	; 0xffffffe0
   20394:	ldr	ip, [r3, #48]	; 0x30
   20398:	ldr	r3, [r3, #52]	; 0x34
   2039c:	mov	lr, sp
   203a0:	mov	r4, #0
   203a4:	str	r4, [lr, #12]
   203a8:	mov	r5, #1
   203ac:	str	r5, [lr, #8]
   203b0:	str	r4, [lr, #4]
   203b4:	str	r5, [lr]
   203b8:	str	r0, [sp, #132]	; 0x84
   203bc:	mov	r0, ip
   203c0:	str	r1, [sp, #128]	; 0x80
   203c4:	mov	r1, r3
   203c8:	mov	r3, r4
   203cc:	bl	2e990 <__assert_fail@plt+0x1bdd8>
   203d0:	ldr	r1, [sp, #132]	; 0x84
   203d4:	str	r0, [sp, #124]	; 0x7c
   203d8:	mov	r0, r1
   203dc:	ldr	r1, [sp, #128]	; 0x80
   203e0:	ldr	r2, [sp, #124]	; 0x7c
   203e4:	bl	1f364 <__assert_fail@plt+0xc7ac>
   203e8:	b	20830 <__assert_fail@plt+0xdc78>
   203ec:	ldr	r0, [fp, #-20]	; 0xffffffec
   203f0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   203f4:	ldr	r1, [r1, #8]
   203f8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   203fc:	str	r0, [sp, #120]	; 0x78
   20400:	mov	r0, r2
   20404:	str	r1, [sp, #116]	; 0x74
   20408:	bl	211a0 <__assert_fail@plt+0xe5e8>
   2040c:	ldr	r0, [sp, #120]	; 0x78
   20410:	ldr	r1, [sp, #116]	; 0x74
   20414:	vmov	r2, r3, d0
   20418:	bl	1f364 <__assert_fail@plt+0xc7ac>
   2041c:	b	20830 <__assert_fail@plt+0xdc78>
   20420:	ldr	r0, [fp, #-20]	; 0xffffffec
   20424:	ldr	r1, [fp, #-24]	; 0xffffffe8
   20428:	ldr	r1, [r1, #8]
   2042c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   20430:	add	r3, sp, #400	; 0x190
   20434:	str	r0, [sp, #112]	; 0x70
   20438:	mov	r0, r3
   2043c:	str	r1, [sp, #108]	; 0x6c
   20440:	mov	r1, r2
   20444:	bl	4b924 <__assert_fail@plt+0x38d6c>
   20448:	ldr	r0, [sp, #400]	; 0x190
   2044c:	ldr	r1, [sp, #404]	; 0x194
   20450:	bl	20e44 <__assert_fail@plt+0xe28c>
   20454:	ldr	r1, [sp, #112]	; 0x70
   20458:	str	r0, [sp, #104]	; 0x68
   2045c:	mov	r0, r1
   20460:	ldr	r1, [sp, #108]	; 0x6c
   20464:	ldr	r2, [sp, #104]	; 0x68
   20468:	bl	1f364 <__assert_fail@plt+0xc7ac>
   2046c:	b	20830 <__assert_fail@plt+0xdc78>
   20470:	ldr	r0, [fp, #-32]	; 0xffffffe0
   20474:	ldr	r0, [r0, #24]
   20478:	bl	124e0 <getpwuid@plt>
   2047c:	str	r0, [sp, #396]	; 0x18c
   20480:	ldr	r0, [sp, #396]	; 0x18c
   20484:	movw	lr, #0
   20488:	cmp	r0, lr
   2048c:	beq	204c8 <__assert_fail@plt+0xd910>
   20490:	ldr	r0, [fp, #-24]	; 0xffffffe8
   20494:	ldr	r0, [r0, #8]
   20498:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2049c:	ldr	r1, [r1, #12]
   204a0:	add	r0, r0, r1
   204a4:	movw	r1, #115	; 0x73
   204a8:	strb	r1, [r0]
   204ac:	ldr	r0, [fp, #-20]	; 0xffffffec
   204b0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   204b4:	ldr	r1, [r1, #8]
   204b8:	ldr	r2, [sp, #396]	; 0x18c
   204bc:	ldr	r2, [r2]
   204c0:	bl	1f364 <__assert_fail@plt+0xc7ac>
   204c4:	b	20830 <__assert_fail@plt+0xdc78>
   204c8:	b	204cc <__assert_fail@plt+0xd914>
   204cc:	add	r2, sp, #476	; 0x1dc
   204d0:	ldr	r0, [fp, #-20]	; 0xffffffec
   204d4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   204d8:	ldr	r1, [r1, #8]
   204dc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   204e0:	ldr	r3, [r3, #24]
   204e4:	mov	ip, #0
   204e8:	mov	lr, sp
   204ec:	mov	r4, #0
   204f0:	str	r4, [lr, #12]
   204f4:	mov	r5, #1
   204f8:	str	r5, [lr, #8]
   204fc:	str	r4, [lr, #4]
   20500:	str	r5, [lr]
   20504:	str	r0, [sp, #100]	; 0x64
   20508:	mov	r0, r3
   2050c:	str	r1, [sp, #96]	; 0x60
   20510:	mov	r1, ip
   20514:	mov	r3, r4
   20518:	bl	2e990 <__assert_fail@plt+0x1bdd8>
   2051c:	ldr	r1, [sp, #100]	; 0x64
   20520:	str	r0, [sp, #92]	; 0x5c
   20524:	mov	r0, r1
   20528:	ldr	r1, [sp, #96]	; 0x60
   2052c:	ldr	r2, [sp, #92]	; 0x5c
   20530:	bl	1f364 <__assert_fail@plt+0xc7ac>
   20534:	b	20830 <__assert_fail@plt+0xdc78>
   20538:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2053c:	ldr	r0, [r0, #16]
   20540:	and	r0, r0, #61440	; 0xf000
   20544:	cmp	r0, #40960	; 0xa000
   20548:	bne	20688 <__assert_fail@plt+0xdad0>
   2054c:	movw	r0, #92	; 0x5c
   20550:	movt	r0, #9
   20554:	ldr	r1, [r0, #16]
   20558:	ldr	r0, [r0, #12]
   2055c:	str	r0, [sp, #88]	; 0x58
   20560:	mov	r0, r1
   20564:	ldr	r1, [sp, #88]	; 0x58
   20568:	add	r2, sp, #288	; 0x120
   2056c:	movw	r3, #0
   20570:	bl	77ab4 <__assert_fail@plt+0x64efc>
   20574:	cmp	r0, #0
   20578:	beq	20648 <__assert_fail@plt+0xda90>
   2057c:	bl	128d0 <__errno_location@plt>
   20580:	ldr	r0, [r0]
   20584:	cmp	r0, #2
   20588:	beq	2059c <__assert_fail@plt+0xd9e4>
   2058c:	bl	128d0 <__errno_location@plt>
   20590:	ldr	r0, [r0]
   20594:	cmp	r0, #20
   20598:	bne	205b8 <__assert_fail@plt+0xda00>
   2059c:	ldr	r0, [fp, #-20]	; 0xffffffec
   205a0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   205a4:	ldr	r1, [r1, #8]
   205a8:	movw	r2, #42068	; 0xa454
   205ac:	movt	r2, #7
   205b0:	bl	1f364 <__assert_fail@plt+0xc7ac>
   205b4:	b	20830 <__assert_fail@plt+0xdc78>
   205b8:	bl	128d0 <__errno_location@plt>
   205bc:	ldr	r0, [r0]
   205c0:	cmp	r0, #40	; 0x28
   205c4:	bne	205e4 <__assert_fail@plt+0xda2c>
   205c8:	ldr	r0, [fp, #-20]	; 0xffffffec
   205cc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   205d0:	ldr	r1, [r1, #8]
   205d4:	movw	r2, #39554	; 0x9a82
   205d8:	movt	r2, #7
   205dc:	bl	1f364 <__assert_fail@plt+0xc7ac>
   205e0:	b	20830 <__assert_fail@plt+0xdc78>
   205e4:	ldr	r0, [fp, #-20]	; 0xffffffec
   205e8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   205ec:	ldr	r1, [r1, #8]
   205f0:	movw	r2, #43888	; 0xab70
   205f4:	movt	r2, #7
   205f8:	bl	1f364 <__assert_fail@plt+0xc7ac>
   205fc:	bl	128d0 <__errno_location@plt>
   20600:	ldr	r1, [r0]
   20604:	ldr	r0, [fp, #-28]	; 0xffffffe4
   20608:	movw	r2, #0
   2060c:	str	r0, [sp, #84]	; 0x54
   20610:	mov	r0, r2
   20614:	ldr	r2, [sp, #84]	; 0x54
   20618:	str	r1, [sp, #80]	; 0x50
   2061c:	mov	r1, r2
   20620:	bl	1da90 <__assert_fail@plt+0xaed8>
   20624:	movw	r1, #0
   20628:	str	r0, [sp, #76]	; 0x4c
   2062c:	mov	r0, r1
   20630:	ldr	r1, [sp, #80]	; 0x50
   20634:	movw	r2, #59431	; 0xe827
   20638:	movt	r2, #7
   2063c:	ldr	r3, [sp, #76]	; 0x4c
   20640:	bl	12780 <error@plt>
   20644:	b	20830 <__assert_fail@plt+0xdc78>
   20648:	ldr	r0, [fp, #-20]	; 0xffffffec
   2064c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   20650:	ldr	r1, [r1, #8]
   20654:	ldr	r2, [sp, #304]	; 0x130
   20658:	and	r2, r2, #61440	; 0xf000
   2065c:	str	r0, [sp, #72]	; 0x48
   20660:	mov	r0, r2
   20664:	str	r1, [sp, #68]	; 0x44
   20668:	bl	212a0 <__assert_fail@plt+0xe6e8>
   2066c:	ldr	r1, [sp, #72]	; 0x48
   20670:	str	r0, [sp, #64]	; 0x40
   20674:	mov	r0, r1
   20678:	ldr	r1, [sp, #68]	; 0x44
   2067c:	ldr	r2, [sp, #64]	; 0x40
   20680:	bl	1f364 <__assert_fail@plt+0xc7ac>
   20684:	b	206c8 <__assert_fail@plt+0xdb10>
   20688:	ldr	r0, [fp, #-20]	; 0xffffffec
   2068c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   20690:	ldr	r1, [r1, #8]
   20694:	ldr	r2, [fp, #-32]	; 0xffffffe0
   20698:	ldr	r2, [r2, #16]
   2069c:	and	r2, r2, #61440	; 0xf000
   206a0:	str	r0, [sp, #60]	; 0x3c
   206a4:	mov	r0, r2
   206a8:	str	r1, [sp, #56]	; 0x38
   206ac:	bl	212a0 <__assert_fail@plt+0xe6e8>
   206b0:	ldr	r1, [sp, #60]	; 0x3c
   206b4:	str	r0, [sp, #52]	; 0x34
   206b8:	mov	r0, r1
   206bc:	ldr	r1, [sp, #56]	; 0x38
   206c0:	ldr	r2, [sp, #52]	; 0x34
   206c4:	bl	1f364 <__assert_fail@plt+0xc7ac>
   206c8:	b	20830 <__assert_fail@plt+0xdc78>
   206cc:	ldr	r0, [fp, #-20]	; 0xffffffec
   206d0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   206d4:	ldr	r1, [r1, #8]
   206d8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   206dc:	ldr	r2, [r2, #16]
   206e0:	and	r2, r2, #61440	; 0xf000
   206e4:	str	r0, [sp, #48]	; 0x30
   206e8:	mov	r0, r2
   206ec:	str	r1, [sp, #44]	; 0x2c
   206f0:	bl	212a0 <__assert_fail@plt+0xe6e8>
   206f4:	ldr	r1, [sp, #48]	; 0x30
   206f8:	str	r0, [sp, #40]	; 0x28
   206fc:	mov	r0, r1
   20700:	ldr	r1, [sp, #44]	; 0x2c
   20704:	ldr	r2, [sp, #40]	; 0x28
   20708:	bl	1f364 <__assert_fail@plt+0xc7ac>
   2070c:	b	20830 <__assert_fail@plt+0xdc78>
   20710:	movw	r0, #136	; 0x88
   20714:	movt	r0, #9
   20718:	ldr	r0, [r0, #64]	; 0x40
   2071c:	movw	r1, #92	; 0x5c
   20720:	movt	r1, #9
   20724:	ldr	r2, [r1, #16]
   20728:	ldr	r1, [r1, #12]
   2072c:	str	r0, [sp, #36]	; 0x24
   20730:	mov	r0, r2
   20734:	add	r2, sp, #284	; 0x11c
   20738:	ldr	r3, [sp, #36]	; 0x24
   2073c:	blx	r3
   20740:	str	r0, [sp, #280]	; 0x118
   20744:	ldr	r0, [sp, #280]	; 0x118
   20748:	cmp	r0, #0
   2074c:	bge	207c4 <__assert_fail@plt+0xdc0c>
   20750:	ldr	r0, [fp, #-20]	; 0xffffffec
   20754:	ldr	r1, [fp, #-24]	; 0xffffffe8
   20758:	ldr	r1, [r1, #8]
   2075c:	movw	r2, #39197	; 0x991d
   20760:	movt	r2, #7
   20764:	bl	1f364 <__assert_fail@plt+0xc7ac>
   20768:	bl	128d0 <__errno_location@plt>
   2076c:	ldr	r1, [r0]
   20770:	movw	r0, #33503	; 0x82df
   20774:	movt	r0, #7
   20778:	str	r1, [sp, #32]
   2077c:	bl	12864 <gettext@plt>
   20780:	ldr	r1, [fp, #-28]	; 0xffffffe4
   20784:	movw	r2, #0
   20788:	str	r0, [sp, #28]
   2078c:	mov	r0, r2
   20790:	bl	1da90 <__assert_fail@plt+0xaed8>
   20794:	movw	r1, #0
   20798:	str	r0, [sp, #24]
   2079c:	mov	r0, r1
   207a0:	ldr	r1, [sp, #32]
   207a4:	ldr	r2, [sp, #28]
   207a8:	ldr	r3, [sp, #24]
   207ac:	bl	12780 <error@plt>
   207b0:	movw	r0, #92	; 0x5c
   207b4:	movt	r0, #9
   207b8:	movw	r1, #1
   207bc:	str	r1, [r0, #28]
   207c0:	b	207e0 <__assert_fail@plt+0xdc28>
   207c4:	ldr	r0, [fp, #-20]	; 0xffffffec
   207c8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   207cc:	ldr	r1, [r1, #8]
   207d0:	ldr	r2, [sp, #284]	; 0x11c
   207d4:	bl	1f364 <__assert_fail@plt+0xc7ac>
   207d8:	ldr	r0, [sp, #284]	; 0x11c
   207dc:	bl	12ac8 <freecon@plt>
   207e0:	b	20830 <__assert_fail@plt+0xdc78>
   207e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   207e8:	ldr	r0, [r0, #8]
   207ec:	ldr	r1, [fp, #-24]	; 0xffffffe8
   207f0:	ldr	r2, [r1, #12]
   207f4:	ldr	r3, [fp, #-20]	; 0xffffffec
   207f8:	movw	r1, #1
   207fc:	bl	20d9c <__assert_fail@plt+0xe1e4>
   20800:	b	20830 <__assert_fail@plt+0xdc78>
   20804:	movw	r0, #41171	; 0xa0d3
   20808:	movt	r0, #7
   2080c:	bl	12864 <gettext@plt>
   20810:	movw	lr, #1
   20814:	str	r0, [sp, #20]
   20818:	mov	r0, lr
   2081c:	movw	r1, #0
   20820:	ldr	r2, [sp, #20]
   20824:	movw	r3, #41490	; 0xa212
   20828:	movt	r3, #7
   2082c:	bl	12780 <error@plt>
   20830:	b	20834 <__assert_fail@plt+0xdc7c>
   20834:	sub	sp, fp, #16
   20838:	pop	{r4, r5, r6, r7, fp, pc}
   2083c:	push	{fp, lr}
   20840:	mov	fp, sp
   20844:	sub	sp, sp, #120	; 0x78
   20848:	str	r0, [fp, #-4]
   2084c:	str	r1, [fp, #-8]
   20850:	str	r2, [fp, #-12]
   20854:	str	r3, [fp, #-16]
   20858:	movw	r0, #0
   2085c:	str	r0, [fp, #-20]	; 0xffffffec
   20860:	ldr	r0, [fp, #-4]
   20864:	bl	12888 <strlen@plt>
   20868:	add	r0, r0, #2
   2086c:	bl	4c394 <__assert_fail@plt+0x397dc>
   20870:	str	r0, [fp, #-20]	; 0xffffffec
   20874:	ldr	r0, [fp, #-20]	; 0xffffffec
   20878:	movw	r1, #95	; 0x5f
   2087c:	strb	r1, [r0]
   20880:	ldr	r0, [fp, #-20]	; 0xffffffec
   20884:	add	r0, r0, #1
   20888:	ldr	r1, [fp, #-4]
   2088c:	ldr	r2, [fp, #-4]
   20890:	str	r0, [sp, #24]
   20894:	mov	r0, r2
   20898:	str	r1, [sp, #20]
   2089c:	bl	12888 <strlen@plt>
   208a0:	add	r2, r0, #1
   208a4:	ldr	r0, [sp, #24]
   208a8:	ldr	r1, [sp, #20]
   208ac:	bl	125c4 <memcpy@plt>
   208b0:	ldr	r0, [fp, #-8]
   208b4:	add	r1, sp, #56	; 0x38
   208b8:	str	r0, [sp, #16]
   208bc:	mov	r0, r1
   208c0:	ldr	r1, [sp, #16]
   208c4:	movw	r2, #44	; 0x2c
   208c8:	bl	125c4 <memcpy@plt>
   208cc:	ldr	r0, [sp, #56]	; 0x38
   208d0:	cmp	r0, #11
   208d4:	blt	208e8 <__assert_fail@plt+0xdd30>
   208d8:	ldr	r0, [sp, #56]	; 0x38
   208dc:	sub	r0, r0, #11
   208e0:	str	r0, [sp, #56]	; 0x38
   208e4:	b	208f4 <__assert_fail@plt+0xdd3c>
   208e8:	ldr	r0, [sp, #56]	; 0x38
   208ec:	add	r0, r0, #11
   208f0:	str	r0, [sp, #56]	; 0x38
   208f4:	movw	r0, #64144	; 0xfa90
   208f8:	movt	r0, #8
   208fc:	ldr	r0, [r0]
   20900:	movw	r1, #0
   20904:	cmp	r0, r1
   20908:	bne	20930 <__assert_fail@plt+0xdd78>
   2090c:	movw	r0, #1
   20910:	movw	r1, #64148	; 0xfa94
   20914:	movt	r1, #8
   20918:	str	r0, [r1]
   2091c:	ldr	r0, [r1]
   20920:	bl	4c394 <__assert_fail@plt+0x397dc>
   20924:	movw	r1, #64144	; 0xfa90
   20928:	movt	r1, #8
   2092c:	str	r0, [r1]
   20930:	b	20934 <__assert_fail@plt+0xdd7c>
   20934:	movw	r0, #64144	; 0xfa90
   20938:	movt	r0, #8
   2093c:	ldr	r0, [r0]
   20940:	movw	r1, #64148	; 0xfa94
   20944:	movt	r1, #8
   20948:	ldr	r1, [r1]
   2094c:	ldr	r2, [fp, #-20]	; 0xffffffec
   20950:	ldr	r3, [fp, #-8]
   20954:	bl	127f8 <strftime@plt>
   20958:	str	r0, [sp, #52]	; 0x34
   2095c:	ldr	r0, [sp, #52]	; 0x34
   20960:	cmp	r0, #0
   20964:	beq	20b74 <__assert_fail@plt+0xdfbc>
   20968:	ldr	r0, [sp, #52]	; 0x34
   2096c:	movw	r1, #64148	; 0xfa94
   20970:	movt	r1, #8
   20974:	ldr	r1, [r1]
   20978:	cmp	r0, r1
   2097c:	bcs	20b74 <__assert_fail@plt+0xdfbc>
   20980:	movw	r0, #0
   20984:	str	r0, [sp, #44]	; 0x2c
   20988:	str	r0, [sp, #40]	; 0x28
   2098c:	ldr	r0, [sp, #52]	; 0x34
   20990:	add	r0, r0, #1
   20994:	ldr	r1, [fp, #-16]
   20998:	add	r0, r0, r1
   2099c:	str	r0, [sp, #36]	; 0x24
   209a0:	movw	r0, #64144	; 0xfa90
   209a4:	movt	r0, #8
   209a8:	ldr	r0, [r0]
   209ac:	ldr	r1, [sp, #36]	; 0x24
   209b0:	bl	4c42c <__assert_fail@plt+0x39874>
   209b4:	movw	r1, #64144	; 0xfa90
   209b8:	movt	r1, #8
   209bc:	str	r0, [r1]
   209c0:	ldr	r0, [sp, #36]	; 0x24
   209c4:	movw	r1, #64148	; 0xfa94
   209c8:	movt	r1, #8
   209cc:	str	r0, [r1]
   209d0:	ldr	r0, [sp, #36]	; 0x24
   209d4:	bl	4c394 <__assert_fail@plt+0x397dc>
   209d8:	str	r0, [sp, #48]	; 0x30
   209dc:	ldr	r0, [sp, #48]	; 0x30
   209e0:	movw	r1, #64148	; 0xfa94
   209e4:	movt	r1, #8
   209e8:	ldr	r1, [r1]
   209ec:	ldr	r2, [fp, #-20]	; 0xffffffec
   209f0:	add	r3, sp, #56	; 0x38
   209f4:	bl	127f8 <strftime@plt>
   209f8:	movw	r1, #64144	; 0xfa90
   209fc:	movt	r1, #8
   20a00:	ldr	r1, [r1]
   20a04:	ldr	r2, [sp, #48]	; 0x30
   20a08:	str	r0, [sp, #12]
   20a0c:	mov	r0, r1
   20a10:	mov	r1, r2
   20a14:	add	r2, sp, #44	; 0x2c
   20a18:	add	r3, sp, #40	; 0x28
   20a1c:	bl	20ba0 <__assert_fail@plt+0xdfe8>
   20a20:	tst	r0, #1
   20a24:	beq	20b48 <__assert_fail@plt+0xdf90>
   20a28:	ldr	r0, [sp, #40]	; 0x28
   20a2c:	movw	r1, #2
   20a30:	cmp	r1, r0
   20a34:	bne	20b48 <__assert_fail@plt+0xdf90>
   20a38:	bl	12834 <__ctype_b_loc@plt>
   20a3c:	ldr	r0, [r0]
   20a40:	movw	lr, #64144	; 0xfa90
   20a44:	movt	lr, #8
   20a48:	ldr	lr, [lr]
   20a4c:	ldr	r1, [sp, #44]	; 0x2c
   20a50:	ldr	r2, [sp, #40]	; 0x28
   20a54:	add	r1, r1, r2
   20a58:	ldrb	r1, [lr, r1]
   20a5c:	mov	r2, r1
   20a60:	add	r0, r0, r1, lsl #1
   20a64:	ldrh	r0, [r0]
   20a68:	and	r0, r0, #2048	; 0x800
   20a6c:	cmp	r0, #0
   20a70:	str	r2, [sp, #8]
   20a74:	bne	20b48 <__assert_fail@plt+0xdf90>
   20a78:	ldr	r0, [sp, #44]	; 0x2c
   20a7c:	ldr	r1, [sp, #40]	; 0x28
   20a80:	add	r0, r0, r1
   20a84:	str	r0, [sp, #32]
   20a88:	ldr	r0, [sp, #52]	; 0x34
   20a8c:	ldr	r1, [sp, #32]
   20a90:	sub	r0, r0, r1
   20a94:	add	r0, r0, #1
   20a98:	str	r0, [sp, #28]
   20a9c:	ldr	r0, [sp, #32]
   20aa0:	ldr	r1, [fp, #-16]
   20aa4:	add	r0, r0, r1
   20aa8:	ldr	r1, [sp, #28]
   20aac:	add	r0, r0, r1
   20ab0:	ldr	r1, [sp, #36]	; 0x24
   20ab4:	cmp	r0, r1
   20ab8:	bne	20ac0 <__assert_fail@plt+0xdf08>
   20abc:	b	20ae0 <__assert_fail@plt+0xdf28>
   20ac0:	movw	r0, #41708	; 0xa2ec
   20ac4:	movt	r0, #7
   20ac8:	movw	r1, #40886	; 0x9fb6
   20acc:	movt	r1, #7
   20ad0:	movw	r2, #549	; 0x225
   20ad4:	movw	r3, #41759	; 0xa31f
   20ad8:	movt	r3, #7
   20adc:	bl	12bb8 <__assert_fail@plt>
   20ae0:	movw	r0, #64144	; 0xfa90
   20ae4:	movt	r0, #8
   20ae8:	ldr	r1, [r0]
   20aec:	ldr	r2, [sp, #32]
   20af0:	add	r1, r1, r2
   20af4:	ldr	r2, [fp, #-16]
   20af8:	add	r1, r1, r2
   20afc:	ldr	r2, [r0]
   20b00:	ldr	r3, [sp, #32]
   20b04:	add	r2, r2, r3
   20b08:	ldr	r3, [sp, #28]
   20b0c:	str	r0, [sp, #4]
   20b10:	mov	r0, r1
   20b14:	mov	r1, r2
   20b18:	mov	r2, r3
   20b1c:	bl	12558 <memmove@plt>
   20b20:	ldr	r0, [sp, #4]
   20b24:	ldr	r1, [r0]
   20b28:	ldr	r2, [sp, #44]	; 0x2c
   20b2c:	add	r1, r1, r2
   20b30:	ldr	r2, [sp, #40]	; 0x28
   20b34:	add	r0, r1, r2
   20b38:	ldr	r1, [fp, #-12]
   20b3c:	ldr	r2, [fp, #-16]
   20b40:	bl	125c4 <memcpy@plt>
   20b44:	b	20b4c <__assert_fail@plt+0xdf94>
   20b48:	b	20b4c <__assert_fail@plt+0xdf94>
   20b4c:	ldr	r0, [fp, #-20]	; 0xffffffec
   20b50:	bl	50c68 <__assert_fail@plt+0x3e0b0>
   20b54:	ldr	r0, [sp, #48]	; 0x30
   20b58:	bl	50c68 <__assert_fail@plt+0x3e0b0>
   20b5c:	movw	r0, #64144	; 0xfa90
   20b60:	movt	r0, #8
   20b64:	ldr	r0, [r0]
   20b68:	add	r0, r0, #1
   20b6c:	mov	sp, fp
   20b70:	pop	{fp, pc}
   20b74:	movw	r0, #64144	; 0xfa90
   20b78:	movt	r0, #8
   20b7c:	ldr	r0, [r0]
   20b80:	movw	r1, #64148	; 0xfa94
   20b84:	movt	r1, #8
   20b88:	movw	r2, #1
   20b8c:	bl	4c570 <__assert_fail@plt+0x399b8>
   20b90:	movw	r1, #64144	; 0xfa90
   20b94:	movt	r1, #8
   20b98:	str	r0, [r1]
   20b9c:	b	20934 <__assert_fail@plt+0xdd7c>
   20ba0:	push	{fp, lr}
   20ba4:	mov	fp, sp
   20ba8:	sub	sp, sp, #40	; 0x28
   20bac:	str	r0, [fp, #-8]
   20bb0:	str	r1, [fp, #-12]
   20bb4:	str	r2, [fp, #-16]
   20bb8:	str	r3, [sp, #20]
   20bbc:	movw	r0, #0
   20bc0:	strb	r0, [sp, #19]
   20bc4:	movw	r0, #0
   20bc8:	str	r0, [sp, #12]
   20bcc:	ldr	r0, [fp, #-8]
   20bd0:	ldr	r1, [sp, #12]
   20bd4:	add	r0, r0, r1
   20bd8:	ldrb	r0, [r0]
   20bdc:	cmp	r0, #0
   20be0:	movw	r0, #0
   20be4:	str	r0, [sp, #8]
   20be8:	beq	20c0c <__assert_fail@plt+0xe054>
   20bec:	ldr	r0, [fp, #-12]
   20bf0:	ldr	r1, [sp, #12]
   20bf4:	add	r0, r0, r1
   20bf8:	ldrb	r0, [r0]
   20bfc:	cmp	r0, #0
   20c00:	movw	r0, #0
   20c04:	movne	r0, #1
   20c08:	str	r0, [sp, #8]
   20c0c:	ldr	r0, [sp, #8]
   20c10:	tst	r0, #1
   20c14:	beq	20d40 <__assert_fail@plt+0xe188>
   20c18:	ldr	r0, [fp, #-8]
   20c1c:	ldr	r1, [sp, #12]
   20c20:	add	r0, r0, r1
   20c24:	ldrb	r0, [r0]
   20c28:	ldr	r1, [fp, #-12]
   20c2c:	ldr	r2, [sp, #12]
   20c30:	add	r1, r1, r2
   20c34:	ldrb	r1, [r1]
   20c38:	cmp	r0, r1
   20c3c:	beq	20d2c <__assert_fail@plt+0xe174>
   20c40:	bl	12834 <__ctype_b_loc@plt>
   20c44:	ldr	r0, [r0]
   20c48:	ldr	lr, [fp, #-8]
   20c4c:	ldr	r1, [sp, #12]
   20c50:	ldrb	r1, [lr, r1]
   20c54:	mov	lr, r1
   20c58:	add	r0, r0, r1, lsl #1
   20c5c:	ldrh	r0, [r0]
   20c60:	and	r0, r0, #2048	; 0x800
   20c64:	cmp	r0, #0
   20c68:	str	lr, [sp, #4]
   20c6c:	beq	20ca0 <__assert_fail@plt+0xe0e8>
   20c70:	bl	12834 <__ctype_b_loc@plt>
   20c74:	ldr	r0, [r0]
   20c78:	ldr	lr, [fp, #-12]
   20c7c:	ldr	r1, [sp, #12]
   20c80:	ldrb	r1, [lr, r1]
   20c84:	mov	lr, r1
   20c88:	add	r0, r0, r1, lsl #1
   20c8c:	ldrh	r0, [r0]
   20c90:	and	r0, r0, #2048	; 0x800
   20c94:	cmp	r0, #0
   20c98:	str	lr, [sp]
   20c9c:	bne	20cb0 <__assert_fail@plt+0xe0f8>
   20ca0:	movw	r0, #0
   20ca4:	and	r0, r0, #1
   20ca8:	strb	r0, [fp, #-1]
   20cac:	b	20d8c <__assert_fail@plt+0xe1d4>
   20cb0:	ldrb	r0, [sp, #19]
   20cb4:	tst	r0, #1
   20cb8:	bne	20ce0 <__assert_fail@plt+0xe128>
   20cbc:	ldr	r0, [sp, #12]
   20cc0:	ldr	r1, [fp, #-16]
   20cc4:	str	r0, [r1]
   20cc8:	ldr	r0, [sp, #20]
   20ccc:	movw	r1, #1
   20cd0:	str	r1, [r0]
   20cd4:	movw	r0, #1
   20cd8:	strb	r0, [sp, #19]
   20cdc:	b	20d28 <__assert_fail@plt+0xe170>
   20ce0:	ldr	r0, [sp, #12]
   20ce4:	ldr	r1, [fp, #-16]
   20ce8:	ldr	r1, [r1]
   20cec:	sub	r0, r0, r1
   20cf0:	ldr	r1, [sp, #20]
   20cf4:	ldr	r1, [r1]
   20cf8:	cmp	r0, r1
   20cfc:	bne	20d14 <__assert_fail@plt+0xe15c>
   20d00:	ldr	r0, [sp, #20]
   20d04:	ldr	r1, [r0]
   20d08:	add	r1, r1, #1
   20d0c:	str	r1, [r0]
   20d10:	b	20d24 <__assert_fail@plt+0xe16c>
   20d14:	movw	r0, #0
   20d18:	and	r0, r0, #1
   20d1c:	strb	r0, [fp, #-1]
   20d20:	b	20d8c <__assert_fail@plt+0xe1d4>
   20d24:	b	20d28 <__assert_fail@plt+0xe170>
   20d28:	b	20d2c <__assert_fail@plt+0xe174>
   20d2c:	b	20d30 <__assert_fail@plt+0xe178>
   20d30:	ldr	r0, [sp, #12]
   20d34:	add	r0, r0, #1
   20d38:	str	r0, [sp, #12]
   20d3c:	b	20bcc <__assert_fail@plt+0xe014>
   20d40:	ldr	r0, [fp, #-8]
   20d44:	ldr	r1, [sp, #12]
   20d48:	add	r0, r0, r1
   20d4c:	ldrb	r0, [r0]
   20d50:	cmp	r0, #0
   20d54:	bne	20d70 <__assert_fail@plt+0xe1b8>
   20d58:	ldr	r0, [fp, #-12]
   20d5c:	ldr	r1, [sp, #12]
   20d60:	add	r0, r0, r1
   20d64:	ldrb	r0, [r0]
   20d68:	cmp	r0, #0
   20d6c:	beq	20d80 <__assert_fail@plt+0xe1c8>
   20d70:	movw	r0, #0
   20d74:	and	r0, r0, #1
   20d78:	strb	r0, [fp, #-1]
   20d7c:	b	20d8c <__assert_fail@plt+0xe1d4>
   20d80:	movw	r0, #1
   20d84:	and	r0, r0, #1
   20d88:	strb	r0, [fp, #-1]
   20d8c:	ldrb	r0, [fp, #-1]
   20d90:	and	r0, r0, #1
   20d94:	mov	sp, fp
   20d98:	pop	{fp, pc}
   20d9c:	push	{fp, lr}
   20da0:	mov	fp, sp
   20da4:	sub	sp, sp, #24
   20da8:	str	r0, [fp, #-4]
   20dac:	str	r1, [fp, #-8]
   20db0:	str	r2, [sp, #12]
   20db4:	str	r3, [sp, #8]
   20db8:	ldr	r0, [fp, #-4]
   20dbc:	ldr	r1, [fp, #-8]
   20dc0:	ldr	r2, [sp, #12]
   20dc4:	ldr	r3, [sp, #8]
   20dc8:	ldr	r3, [r3, #4]
   20dcc:	bl	126f0 <fwrite@plt>
   20dd0:	str	r0, [sp, #4]
   20dd4:	ldr	r0, [sp, #4]
   20dd8:	ldr	r1, [sp, #12]
   20ddc:	cmp	r0, r1
   20de0:	bcs	20df8 <__assert_fail@plt+0xe240>
   20de4:	bl	128d0 <__errno_location@plt>
   20de8:	ldr	r0, [r0]
   20dec:	ldr	lr, [sp, #8]
   20df0:	ldr	r1, [lr, #8]
   20df4:	bl	1c74c <__assert_fail@plt+0x9b94>
   20df8:	mov	sp, fp
   20dfc:	pop	{fp, pc}
   20e00:	push	{fp, lr}
   20e04:	mov	fp, sp
   20e08:	sub	sp, sp, #8
   20e0c:	str	r0, [sp, #4]
   20e10:	ldr	r0, [sp, #4]
   20e14:	ldr	r0, [r0, #4]
   20e18:	bl	50bb8 <__assert_fail@plt+0x3e000>
   20e1c:	movw	lr, #0
   20e20:	cmp	lr, r0
   20e24:	beq	20e3c <__assert_fail@plt+0xe284>
   20e28:	bl	128d0 <__errno_location@plt>
   20e2c:	ldr	r0, [r0]
   20e30:	ldr	lr, [sp, #4]
   20e34:	ldr	r1, [lr, #8]
   20e38:	bl	1c74c <__assert_fail@plt+0x9b94>
   20e3c:	mov	sp, fp
   20e40:	pop	{fp, pc}
   20e44:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   20e48:	add	fp, sp, #24
   20e4c:	sub	sp, sp, #64	; 0x40
   20e50:	sub	r2, fp, #36	; 0x24
   20e54:	str	r0, [fp, #-36]	; 0xffffffdc
   20e58:	str	r1, [fp, #-32]	; 0xffffffe0
   20e5c:	mov	r0, r2
   20e60:	bl	12810 <localtime@plt>
   20e64:	str	r0, [fp, #-40]	; 0xffffffd8
   20e68:	ldr	r0, [fp, #-40]	; 0xffffffd8
   20e6c:	movw	r1, #0
   20e70:	cmp	r0, r1
   20e74:	beq	21110 <__assert_fail@plt+0xe558>
   20e78:	ldr	r0, [fp, #-40]	; 0xffffffd8
   20e7c:	ldr	r0, [r0, #24]
   20e80:	cmp	r0, #0
   20e84:	blt	20e8c <__assert_fail@plt+0xe2d4>
   20e88:	b	20eac <__assert_fail@plt+0xe2f4>
   20e8c:	movw	r0, #41835	; 0xa36b
   20e90:	movt	r0, #7
   20e94:	movw	r1, #40886	; 0x9fb6
   20e98:	movt	r1, #7
   20e9c:	movw	r2, #749	; 0x2ed
   20ea0:	movw	r3, #41853	; 0xa37d
   20ea4:	movt	r3, #7
   20ea8:	bl	12bb8 <__assert_fail@plt>
   20eac:	ldr	r0, [fp, #-40]	; 0xffffffd8
   20eb0:	ldr	r0, [r0, #24]
   20eb4:	cmp	r0, #7
   20eb8:	bge	20ec0 <__assert_fail@plt+0xe308>
   20ebc:	b	20ee0 <__assert_fail@plt+0xe328>
   20ec0:	movw	r0, #41889	; 0xa3a1
   20ec4:	movt	r0, #7
   20ec8:	movw	r1, #40886	; 0x9fb6
   20ecc:	movt	r1, #7
   20ed0:	movw	r2, #750	; 0x2ee
   20ed4:	movw	r3, #41853	; 0xa37d
   20ed8:	movt	r3, #7
   20edc:	bl	12bb8 <__assert_fail@plt>
   20ee0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   20ee4:	ldr	r0, [r0, #16]
   20ee8:	cmp	r0, #0
   20eec:	blt	20ef4 <__assert_fail@plt+0xe33c>
   20ef0:	b	20f14 <__assert_fail@plt+0xe35c>
   20ef4:	movw	r0, #41906	; 0xa3b2
   20ef8:	movt	r0, #7
   20efc:	movw	r1, #40886	; 0x9fb6
   20f00:	movt	r1, #7
   20f04:	movw	r2, #751	; 0x2ef
   20f08:	movw	r3, #41853	; 0xa37d
   20f0c:	movt	r3, #7
   20f10:	bl	12bb8 <__assert_fail@plt>
   20f14:	ldr	r0, [fp, #-40]	; 0xffffffd8
   20f18:	ldr	r0, [r0, #16]
   20f1c:	cmp	r0, #12
   20f20:	bge	20f28 <__assert_fail@plt+0xe370>
   20f24:	b	20f48 <__assert_fail@plt+0xe390>
   20f28:	movw	r0, #41923	; 0xa3c3
   20f2c:	movt	r0, #7
   20f30:	movw	r1, #40886	; 0x9fb6
   20f34:	movt	r1, #7
   20f38:	movw	r2, #752	; 0x2f0
   20f3c:	movw	r3, #41853	; 0xa37d
   20f40:	movt	r3, #7
   20f44:	bl	12bb8 <__assert_fail@plt>
   20f48:	ldr	r0, [fp, #-40]	; 0xffffffd8
   20f4c:	ldr	r0, [r0, #8]
   20f50:	cmp	r0, #0
   20f54:	blt	20f5c <__assert_fail@plt+0xe3a4>
   20f58:	b	20f7c <__assert_fail@plt+0xe3c4>
   20f5c:	movw	r0, #41940	; 0xa3d4
   20f60:	movt	r0, #7
   20f64:	movw	r1, #40886	; 0x9fb6
   20f68:	movt	r1, #7
   20f6c:	movw	r2, #753	; 0x2f1
   20f70:	movw	r3, #41853	; 0xa37d
   20f74:	movt	r3, #7
   20f78:	bl	12bb8 <__assert_fail@plt>
   20f7c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   20f80:	ldr	r0, [r0, #8]
   20f84:	cmp	r0, #24
   20f88:	bge	20f90 <__assert_fail@plt+0xe3d8>
   20f8c:	b	20fb0 <__assert_fail@plt+0xe3f8>
   20f90:	movw	r0, #41958	; 0xa3e6
   20f94:	movt	r0, #7
   20f98:	movw	r1, #40886	; 0x9fb6
   20f9c:	movt	r1, #7
   20fa0:	movw	r2, #754	; 0x2f2
   20fa4:	movw	r3, #41853	; 0xa37d
   20fa8:	movt	r3, #7
   20fac:	bl	12bb8 <__assert_fail@plt>
   20fb0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   20fb4:	ldr	r0, [r0, #4]
   20fb8:	cmp	r0, #60	; 0x3c
   20fbc:	bge	20fc4 <__assert_fail@plt+0xe40c>
   20fc0:	b	20fe4 <__assert_fail@plt+0xe42c>
   20fc4:	movw	r0, #41976	; 0xa3f8
   20fc8:	movt	r0, #7
   20fcc:	movw	r1, #40886	; 0x9fb6
   20fd0:	movt	r1, #7
   20fd4:	movw	r2, #755	; 0x2f3
   20fd8:	movw	r3, #41853	; 0xa37d
   20fdc:	movt	r3, #7
   20fe0:	bl	12bb8 <__assert_fail@plt>
   20fe4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   20fe8:	ldr	r0, [r0]
   20fec:	cmp	r0, #61	; 0x3d
   20ff0:	bgt	20ff8 <__assert_fail@plt+0xe440>
   20ff4:	b	21018 <__assert_fail@plt+0xe460>
   20ff8:	movw	r0, #41993	; 0xa409
   20ffc:	movt	r0, #7
   21000:	movw	r1, #40886	; 0x9fb6
   21004:	movt	r1, #7
   21008:	movw	r2, #756	; 0x2f4
   2100c:	movw	r3, #41853	; 0xa37d
   21010:	movt	r3, #7
   21014:	bl	12bb8 <__assert_fail@plt>
   21018:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2101c:	ldr	r1, [r0, #16]
   21020:	ldr	r0, [r0, #24]
   21024:	movw	r2, #62908	; 0xf5bc
   21028:	movt	r2, #8
   2102c:	ldr	r3, [r2, r0, lsl #2]
   21030:	movw	r0, #62936	; 0xf5d8
   21034:	movt	r0, #8
   21038:	add	r0, r0, r1, lsl #2
   2103c:	ldr	r0, [r0]
   21040:	ldr	r1, [fp, #-40]	; 0xffffffd8
   21044:	ldr	r1, [r1, #12]
   21048:	ldr	r2, [fp, #-40]	; 0xffffffd8
   2104c:	ldr	r2, [r2, #8]
   21050:	ldr	ip, [fp, #-40]	; 0xffffffd8
   21054:	ldr	ip, [ip, #4]
   21058:	ldr	lr, [fp, #-40]	; 0xffffffd8
   2105c:	ldr	lr, [lr]
   21060:	ldr	r4, [fp, #-32]	; 0xffffffe0
   21064:	ldr	r5, [fp, #-40]	; 0xffffffd8
   21068:	ldr	r5, [r5, #20]
   2106c:	movw	r6, #1900	; 0x76c
   21070:	add	r5, r5, r6
   21074:	movw	r6, #64152	; 0xfa98
   21078:	movt	r6, #8
   2107c:	str	r0, [sp, #40]	; 0x28
   21080:	mov	r0, r6
   21084:	movw	r6, #1024	; 0x400
   21088:	str	r1, [sp, #36]	; 0x24
   2108c:	mov	r1, r6
   21090:	movw	r6, #42011	; 0xa41b
   21094:	movt	r6, #7
   21098:	str	r2, [sp, #32]
   2109c:	mov	r2, r6
   210a0:	ldr	r6, [sp, #40]	; 0x28
   210a4:	str	r6, [sp]
   210a8:	ldr	r7, [sp, #36]	; 0x24
   210ac:	str	r7, [sp, #4]
   210b0:	ldr	r8, [sp, #32]
   210b4:	str	r8, [sp, #8]
   210b8:	str	ip, [sp, #12]
   210bc:	str	lr, [sp, #16]
   210c0:	str	r4, [sp, #20]
   210c4:	str	r5, [sp, #24]
   210c8:	bl	128e8 <snprintf@plt>
   210cc:	str	r0, [sp, #44]	; 0x2c
   210d0:	ldr	r0, [sp, #44]	; 0x2c
   210d4:	cmp	r0, #1024	; 0x400
   210d8:	bge	210e0 <__assert_fail@plt+0xe528>
   210dc:	b	21100 <__assert_fail@plt+0xe548>
   210e0:	movw	r0, #42050	; 0xa442
   210e4:	movt	r0, #7
   210e8:	movw	r1, #40886	; 0x9fb6
   210ec:	movt	r1, #7
   210f0:	movw	r2, #770	; 0x302
   210f4:	movw	r3, #41853	; 0xa37d
   210f8:	movt	r3, #7
   210fc:	bl	12bb8 <__assert_fail@plt>
   21100:	movw	r0, #64152	; 0xfa98
   21104:	movt	r0, #8
   21108:	str	r0, [fp, #-28]	; 0xffffffe4
   2110c:	b	21124 <__assert_fail@plt+0xe56c>
   21110:	ldr	r0, [fp, #-36]	; 0xffffffdc
   21114:	ldr	r1, [fp, #-32]	; 0xffffffe0
   21118:	mov	r2, #64	; 0x40
   2111c:	bl	1f3dc <__assert_fail@plt+0xc824>
   21120:	str	r0, [fp, #-28]	; 0xffffffe4
   21124:	ldr	r0, [fp, #-28]	; 0xffffffe4
   21128:	sub	sp, fp, #24
   2112c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   21130:	push	{fp, lr}
   21134:	mov	fp, sp
   21138:	sub	sp, sp, #24
   2113c:	str	r0, [fp, #-4]
   21140:	str	r1, [fp, #-8]
   21144:	str	r2, [sp, #12]
   21148:	ldr	r0, [fp, #-4]
   2114c:	ldr	r0, [r0, #4]
   21150:	ldr	r1, [fp, #-4]
   21154:	ldr	r1, [r1, #16]
   21158:	ldr	r2, [fp, #-4]
   2115c:	ldrb	r2, [r2, #12]
   21160:	ldr	r3, [fp, #-8]
   21164:	ldr	ip, [sp, #12]
   21168:	and	r2, r2, #1
   2116c:	str	ip, [sp]
   21170:	bl	2ad84 <__assert_fail@plt+0x181cc>
   21174:	str	r0, [sp, #8]
   21178:	ldr	r0, [sp, #8]
   2117c:	cmp	r0, #0
   21180:	bge	21198 <__assert_fail@plt+0xe5e0>
   21184:	bl	128d0 <__errno_location@plt>
   21188:	ldr	r0, [r0]
   2118c:	ldr	lr, [fp, #-4]
   21190:	ldr	r1, [lr, #8]
   21194:	bl	1c74c <__assert_fail@plt+0x9b94>
   21198:	mov	sp, fp
   2119c:	pop	{fp, pc}
   211a0:	push	{fp, lr}
   211a4:	mov	fp, sp
   211a8:	sub	sp, sp, #40	; 0x28
   211ac:	str	r0, [fp, #-12]
   211b0:	ldr	r0, [fp, #-12]
   211b4:	ldr	r1, [r0, #48]	; 0x30
   211b8:	ldr	r0, [r0, #52]	; 0x34
   211bc:	orr	r0, r1, r0
   211c0:	cmp	r0, #0
   211c4:	bne	21218 <__assert_fail@plt+0xe660>
   211c8:	b	211cc <__assert_fail@plt+0xe614>
   211cc:	ldr	r0, [fp, #-12]
   211d0:	ldr	r1, [r0, #64]	; 0x40
   211d4:	ldr	r0, [r0, #68]	; 0x44
   211d8:	orr	r0, r1, r0
   211dc:	cmp	r0, #0
   211e0:	bne	211f4 <__assert_fail@plt+0xe63c>
   211e4:	b	211e8 <__assert_fail@plt+0xe630>
   211e8:	vmov.f64	d16, #112	; 0x3f800000  1.0
   211ec:	vstr	d16, [fp, #-8]
   211f0:	b	21278 <__assert_fail@plt+0xe6c0>
   211f4:	ldr	r0, [fp, #-12]
   211f8:	ldr	r0, [r0, #68]	; 0x44
   211fc:	add	r1, pc, #140	; 0x8c
   21200:	add	r2, r1, #8
   21204:	cmp	r0, #0
   21208:	movlt	r1, r2
   2120c:	vldr	d16, [r1]
   21210:	vstr	d16, [fp, #-8]
   21214:	b	21278 <__assert_fail@plt+0xe6c0>
   21218:	ldr	r0, [fp, #-12]
   2121c:	ldr	r1, [r0, #64]	; 0x40
   21220:	ldr	r0, [r0, #68]	; 0x44
   21224:	str	r0, [sp, #12]
   21228:	mov	r0, r1
   2122c:	ldr	r1, [sp, #12]
   21230:	bl	77720 <__assert_fail@plt+0x64b68>
   21234:	vmov	d16, r0, r1
   21238:	vldr	d17, [pc, #72]	; 21288 <__assert_fail@plt+0xe6d0>
   2123c:	vmul.f64	d16, d16, d17
   21240:	vstr	d16, [sp, #16]
   21244:	vldr	d16, [sp, #16]
   21248:	ldr	r0, [fp, #-12]
   2124c:	ldr	r1, [r0, #48]	; 0x30
   21250:	ldr	r0, [r0, #52]	; 0x34
   21254:	str	r0, [sp, #8]
   21258:	mov	r0, r1
   2125c:	ldr	r1, [sp, #8]
   21260:	vstr	d16, [sp]
   21264:	bl	77720 <__assert_fail@plt+0x64b68>
   21268:	vmov	d16, r0, r1
   2126c:	vldr	d17, [sp]
   21270:	vdiv.f64	d16, d17, d16
   21274:	vstr	d16, [fp, #-8]
   21278:	vldr	d0, [fp, #-8]
   2127c:	mov	sp, fp
   21280:	pop	{fp, pc}
   21284:	nop	{0}
   21288:	andeq	r0, r0, r0
   2128c:	addmi	r0, r0, r0
   21290:	andeq	r0, r0, r0
   21294:	svcvc	0x00f00000	; IMB
   21298:	andeq	r0, r0, r0
   2129c:			; <UNDEFINED> instruction: 0xfff00000	; IMB
   212a0:	sub	sp, sp, #8
   212a4:	str	r0, [sp]
   212a8:	ldr	r0, [sp]
   212ac:	cmp	r0, #32768	; 0x8000
   212b0:	bne	212c4 <__assert_fail@plt+0xe70c>
   212b4:	movw	r0, #50272	; 0xc460
   212b8:	movt	r0, #7
   212bc:	str	r0, [sp, #4]
   212c0:	b	21378 <__assert_fail@plt+0xe7c0>
   212c4:	ldr	r0, [sp]
   212c8:	cmp	r0, #16384	; 0x4000
   212cc:	bne	212e0 <__assert_fail@plt+0xe728>
   212d0:	movw	r0, #34441	; 0x8689
   212d4:	movt	r0, #7
   212d8:	str	r0, [sp, #4]
   212dc:	b	21378 <__assert_fail@plt+0xe7c0>
   212e0:	ldr	r0, [sp]
   212e4:	cmp	r0, #40960	; 0xa000
   212e8:	bne	212fc <__assert_fail@plt+0xe744>
   212ec:	movw	r0, #34252	; 0x85cc
   212f0:	movt	r0, #7
   212f4:	str	r0, [sp, #4]
   212f8:	b	21378 <__assert_fail@plt+0xe7c0>
   212fc:	ldr	r0, [sp]
   21300:	cmp	r0, #49152	; 0xc000
   21304:	bne	21318 <__assert_fail@plt+0xe760>
   21308:	movw	r0, #59432	; 0xe828
   2130c:	movt	r0, #7
   21310:	str	r0, [sp, #4]
   21314:	b	21378 <__assert_fail@plt+0xe7c0>
   21318:	ldr	r0, [sp]
   2131c:	cmp	r0, #24576	; 0x6000
   21320:	bne	21334 <__assert_fail@plt+0xe77c>
   21324:	movw	r0, #49577	; 0xc1a9
   21328:	movt	r0, #7
   2132c:	str	r0, [sp, #4]
   21330:	b	21378 <__assert_fail@plt+0xe7c0>
   21334:	ldr	r0, [sp]
   21338:	cmp	r0, #8192	; 0x2000
   2133c:	bne	21350 <__assert_fail@plt+0xe798>
   21340:	movw	r0, #46327	; 0xb4f7
   21344:	movt	r0, #7
   21348:	str	r0, [sp, #4]
   2134c:	b	21378 <__assert_fail@plt+0xe7c0>
   21350:	ldr	r0, [sp]
   21354:	cmp	r0, #4096	; 0x1000
   21358:	bne	2136c <__assert_fail@plt+0xe7b4>
   2135c:	movw	r0, #34648	; 0x8758
   21360:	movt	r0, #7
   21364:	str	r0, [sp, #4]
   21368:	b	21378 <__assert_fail@plt+0xe7c0>
   2136c:	movw	r0, #42146	; 0xa4a2
   21370:	movt	r0, #7
   21374:	str	r0, [sp, #4]
   21378:	ldr	r0, [sp, #4]
   2137c:	add	sp, sp, #8
   21380:	bx	lr
   21384:	push	{fp, lr}
   21388:	mov	fp, sp
   2138c:	sub	sp, sp, #16
   21390:	str	r0, [sp, #8]
   21394:	str	r1, [sp, #4]
   21398:	movw	r0, #65180	; 0xfe9c
   2139c:	movt	r0, #8
   213a0:	ldr	r0, [r0]
   213a4:	movw	r1, #0
   213a8:	cmp	r0, r1
   213ac:	beq	2141c <__assert_fail@plt+0xe864>
   213b0:	movw	r0, #65176	; 0xfe98
   213b4:	movt	r0, #8
   213b8:	ldrb	r0, [r0]
   213bc:	tst	r0, #1
   213c0:	beq	2140c <__assert_fail@plt+0xe854>
   213c4:	ldr	r0, [sp, #8]
   213c8:	ldr	r1, [r0]
   213cc:	ldr	r0, [r0, #4]
   213d0:	movw	r2, #65184	; 0xfea0
   213d4:	movt	r2, #8
   213d8:	ldr	r3, [r2]
   213dc:	ldr	r2, [r2, #4]
   213e0:	eor	r0, r0, r2
   213e4:	eor	r1, r1, r3
   213e8:	orr	r0, r1, r0
   213ec:	cmp	r0, #0
   213f0:	bne	2140c <__assert_fail@plt+0xe854>
   213f4:	b	213f8 <__assert_fail@plt+0xe840>
   213f8:	movw	r0, #65180	; 0xfe9c
   213fc:	movt	r0, #8
   21400:	ldr	r0, [r0]
   21404:	str	r0, [fp, #-4]
   21408:	b	21460 <__assert_fail@plt+0xe8a8>
   2140c:	movw	r0, #65180	; 0xfe9c
   21410:	movt	r0, #8
   21414:	ldr	r0, [r0]
   21418:	bl	50c68 <__assert_fail@plt+0x3e0b0>
   2141c:	ldr	r0, [sp, #8]
   21420:	ldr	r1, [r0]
   21424:	ldr	r0, [r0, #4]
   21428:	movw	r2, #65184	; 0xfea0
   2142c:	movt	r2, #8
   21430:	str	r0, [r2, #4]
   21434:	str	r1, [r2]
   21438:	ldr	r0, [sp, #8]
   2143c:	ldr	r1, [sp, #4]
   21440:	movw	r2, #65176	; 0xfe98
   21444:	movt	r2, #8
   21448:	bl	2146c <__assert_fail@plt+0xe8b4>
   2144c:	movw	r1, #65180	; 0xfe9c
   21450:	movt	r1, #8
   21454:	str	r0, [r1]
   21458:	ldr	r0, [r1]
   2145c:	str	r0, [fp, #-4]
   21460:	ldr	r0, [fp, #-4]
   21464:	mov	sp, fp
   21468:	pop	{fp, pc}
   2146c:	push	{fp, lr}
   21470:	mov	fp, sp
   21474:	sub	sp, sp, #40	; 0x28
   21478:	str	r0, [fp, #-4]
   2147c:	str	r1, [fp, #-8]
   21480:	str	r2, [fp, #-12]
   21484:	movw	r0, #0
   21488:	str	r0, [sp, #16]
   2148c:	movw	r0, #1
   21490:	and	r0, r0, #1
   21494:	bl	216d4 <__assert_fail@plt+0xeb1c>
   21498:	str	r0, [fp, #-16]
   2149c:	ldr	r0, [fp, #-16]
   214a0:	movw	r1, #0
   214a4:	cmp	r1, r0
   214a8:	bne	214d0 <__assert_fail@plt+0xe918>
   214ac:	movw	r0, #42152	; 0xa4a8
   214b0:	movt	r0, #7
   214b4:	bl	12864 <gettext@plt>
   214b8:	movw	lr, #1
   214bc:	str	r0, [sp, #8]
   214c0:	mov	r0, lr
   214c4:	movw	r1, #0
   214c8:	ldr	r2, [sp, #8]
   214cc:	bl	12780 <error@plt>
   214d0:	movw	r0, #0
   214d4:	str	r0, [sp, #12]
   214d8:	ldr	r0, [fp, #-16]
   214dc:	str	r0, [sp, #20]
   214e0:	ldr	r0, [sp, #20]
   214e4:	movw	r1, #0
   214e8:	cmp	r0, r1
   214ec:	beq	21574 <__assert_fail@plt+0xe9bc>
   214f0:	ldr	r0, [sp, #20]
   214f4:	ldr	r0, [r0, #12]
   214f8:	movw	r1, #42189	; 0xa4cd
   214fc:	movt	r1, #7
   21500:	bl	124c8 <strcmp@plt>
   21504:	cmp	r0, #0
   21508:	bne	21510 <__assert_fail@plt+0xe958>
   2150c:	b	21564 <__assert_fail@plt+0xe9ac>
   21510:	ldr	r0, [sp, #20]
   21514:	bl	218a4 <__assert_fail@plt+0xecec>
   21518:	movw	lr, #0
   2151c:	cmp	lr, r0
   21520:	bne	21560 <__assert_fail@plt+0xe9a8>
   21524:	ldr	r0, [sp, #20]
   21528:	ldr	r1, [r0, #16]
   2152c:	ldr	r0, [r0, #20]
   21530:	ldr	r2, [fp, #-4]
   21534:	ldr	r3, [r2]
   21538:	ldr	r2, [r2, #4]
   2153c:	eor	r0, r0, r2
   21540:	eor	r1, r1, r3
   21544:	orr	r0, r1, r0
   21548:	cmp	r0, #0
   2154c:	bne	2155c <__assert_fail@plt+0xe9a4>
   21550:	b	21554 <__assert_fail@plt+0xe99c>
   21554:	ldr	r0, [sp, #20]
   21558:	str	r0, [sp, #16]
   2155c:	b	21560 <__assert_fail@plt+0xe9a8>
   21560:	b	21564 <__assert_fail@plt+0xe9ac>
   21564:	ldr	r0, [sp, #20]
   21568:	ldr	r0, [r0, #28]
   2156c:	str	r0, [sp, #20]
   21570:	b	214e0 <__assert_fail@plt+0xe928>
   21574:	ldr	r0, [sp, #16]
   21578:	movw	r1, #0
   2157c:	cmp	r0, r1
   21580:	beq	21594 <__assert_fail@plt+0xe9dc>
   21584:	ldr	r0, [sp, #16]
   21588:	ldr	r0, [r0, #12]
   2158c:	bl	4f138 <__assert_fail@plt+0x3c580>
   21590:	str	r0, [sp, #12]
   21594:	ldr	r0, [sp, #12]
   21598:	movw	r1, #0
   2159c:	cmp	r0, r1
   215a0:	movw	r0, #0
   215a4:	movne	r0, #1
   215a8:	ldr	r2, [fp, #-12]
   215ac:	and	r0, r0, #1
   215b0:	strb	r0, [r2]
   215b4:	ldr	r0, [sp, #12]
   215b8:	cmp	r0, r1
   215bc:	beq	215cc <__assert_fail@plt+0xea14>
   215c0:	ldr	r0, [sp, #12]
   215c4:	str	r0, [sp, #4]
   215c8:	b	215e0 <__assert_fail@plt+0xea28>
   215cc:	movw	r0, #37292	; 0x91ac
   215d0:	movt	r0, #7
   215d4:	bl	12864 <gettext@plt>
   215d8:	bl	4f138 <__assert_fail@plt+0x3c580>
   215dc:	str	r0, [sp, #4]
   215e0:	ldr	r0, [sp, #4]
   215e4:	mov	sp, fp
   215e8:	pop	{fp, pc}
   215ec:	push	{fp, lr}
   215f0:	mov	fp, sp
   215f4:	sub	sp, sp, #16
   215f8:	str	r0, [sp, #8]
   215fc:	ldr	r1, [sp, #8]
   21600:	movw	r0, #42148	; 0xa4a4
   21604:	movt	r0, #7
   21608:	bl	124c8 <strcmp@plt>
   2160c:	movw	r1, #0
   21610:	cmp	r1, r0
   21614:	bne	21628 <__assert_fail@plt+0xea70>
   21618:	movw	r0, #1
   2161c:	and	r0, r0, #1
   21620:	strb	r0, [fp, #-1]
   21624:	b	216c4 <__assert_fail@plt+0xeb0c>
   21628:	movw	r0, #0
   2162c:	and	r0, r0, #1
   21630:	bl	216d4 <__assert_fail@plt+0xeb1c>
   21634:	str	r0, [sp, #4]
   21638:	ldr	r0, [sp, #4]
   2163c:	movw	lr, #0
   21640:	cmp	r0, lr
   21644:	beq	216a4 <__assert_fail@plt+0xeaec>
   21648:	ldr	r0, [sp, #4]
   2164c:	str	r0, [sp]
   21650:	ldr	r0, [sp]
   21654:	movw	r1, #0
   21658:	cmp	r0, r1
   2165c:	beq	216a0 <__assert_fail@plt+0xeae8>
   21660:	ldr	r0, [sp, #8]
   21664:	ldr	r1, [sp]
   21668:	ldr	r1, [r1, #12]
   2166c:	bl	124c8 <strcmp@plt>
   21670:	movw	r1, #0
   21674:	cmp	r1, r0
   21678:	bne	2168c <__assert_fail@plt+0xead4>
   2167c:	movw	r0, #1
   21680:	and	r0, r0, #1
   21684:	strb	r0, [fp, #-1]
   21688:	b	216c4 <__assert_fail@plt+0xeb0c>
   2168c:	b	21690 <__assert_fail@plt+0xead8>
   21690:	ldr	r0, [sp]
   21694:	ldr	r0, [r0, #28]
   21698:	str	r0, [sp]
   2169c:	b	21650 <__assert_fail@plt+0xea98>
   216a0:	b	216b4 <__assert_fail@plt+0xeafc>
   216a4:	movw	r0, #1
   216a8:	and	r0, r0, #1
   216ac:	strb	r0, [fp, #-1]
   216b0:	b	216c4 <__assert_fail@plt+0xeb0c>
   216b4:	b	216b8 <__assert_fail@plt+0xeb00>
   216b8:	movw	r0, #0
   216bc:	and	r0, r0, #1
   216c0:	strb	r0, [fp, #-1]
   216c4:	ldrb	r0, [fp, #-1]
   216c8:	and	r0, r0, #1
   216cc:	mov	sp, fp
   216d0:	pop	{fp, pc}
   216d4:	push	{fp, lr}
   216d8:	mov	fp, sp
   216dc:	sub	sp, sp, #8
   216e0:	and	r0, r0, #1
   216e4:	strb	r0, [fp, #-1]
   216e8:	movw	r0, #65192	; 0xfea8
   216ec:	movt	r0, #8
   216f0:	ldr	r0, [r0]
   216f4:	movw	r1, #0
   216f8:	cmp	r0, r1
   216fc:	beq	21740 <__assert_fail@plt+0xeb88>
   21700:	movw	r0, #65196	; 0xfeac
   21704:	movt	r0, #8
   21708:	ldrb	r0, [r0]
   2170c:	tst	r0, #1
   21710:	bne	21740 <__assert_fail@plt+0xeb88>
   21714:	ldrb	r0, [fp, #-1]
   21718:	tst	r0, #1
   2171c:	beq	21740 <__assert_fail@plt+0xeb88>
   21720:	movw	r0, #65192	; 0xfea8
   21724:	movt	r0, #8
   21728:	ldr	r0, [r0]
   2172c:	bl	2194c <__assert_fail@plt+0xed94>
   21730:	movw	r0, #65192	; 0xfea8
   21734:	movt	r0, #8
   21738:	movw	lr, #0
   2173c:	str	lr, [r0]
   21740:	movw	r0, #65192	; 0xfea8
   21744:	movt	r0, #8
   21748:	ldr	r0, [r0]
   2174c:	movw	r1, #0
   21750:	cmp	r0, r1
   21754:	bne	21784 <__assert_fail@plt+0xebcc>
   21758:	ldrb	r0, [fp, #-1]
   2175c:	and	r0, r0, #1
   21760:	bl	54acc <__assert_fail@plt+0x41f14>
   21764:	movw	lr, #65192	; 0xfea8
   21768:	movt	lr, #8
   2176c:	str	r0, [lr]
   21770:	ldrb	r0, [fp, #-1]
   21774:	and	r0, r0, #1
   21778:	movw	lr, #65196	; 0xfeac
   2177c:	movt	lr, #8
   21780:	strb	r0, [lr]
   21784:	movw	r0, #65192	; 0xfea8
   21788:	movt	r0, #8
   2178c:	ldr	r0, [r0]
   21790:	mov	sp, fp
   21794:	pop	{fp, pc}
   21798:	push	{fp, lr}
   2179c:	mov	fp, sp
   217a0:	sub	sp, sp, #32
   217a4:	str	r0, [fp, #-4]
   217a8:	movw	r0, #0
   217ac:	str	r0, [fp, #-8]
   217b0:	str	r0, [fp, #-12]
   217b4:	str	r0, [sp, #8]
   217b8:	movw	r0, #0
   217bc:	and	r0, r0, #1
   217c0:	bl	54acc <__assert_fail@plt+0x41f14>
   217c4:	str	r0, [sp, #16]
   217c8:	str	r0, [sp, #12]
   217cc:	ldr	r0, [sp, #12]
   217d0:	movw	r1, #0
   217d4:	cmp	r0, r1
   217d8:	beq	21874 <__assert_fail@plt+0xecbc>
   217dc:	ldr	r0, [sp, #8]
   217e0:	ldr	r1, [fp, #-12]
   217e4:	add	r1, r1, #1
   217e8:	lsl	r1, r1, #3
   217ec:	sub	r2, fp, #8
   217f0:	bl	29114 <__assert_fail@plt+0x1655c>
   217f4:	str	r0, [sp, #4]
   217f8:	ldr	r0, [sp, #4]
   217fc:	movw	r1, #0
   21800:	cmp	r0, r1
   21804:	beq	21850 <__assert_fail@plt+0xec98>
   21808:	ldr	r0, [sp, #4]
   2180c:	str	r0, [sp, #8]
   21810:	ldr	r0, [sp, #12]
   21814:	bl	218a4 <__assert_fail@plt+0xecec>
   21818:	movw	lr, #0
   2181c:	cmp	lr, r0
   21820:	bne	2184c <__assert_fail@plt+0xec94>
   21824:	ldr	r0, [sp, #12]
   21828:	ldr	r1, [r0, #16]
   2182c:	ldr	r0, [r0, #20]
   21830:	ldr	r2, [sp, #8]
   21834:	ldr	r3, [fp, #-12]
   21838:	str	r1, [r2, r3, lsl #3]!
   2183c:	str	r0, [r2, #4]
   21840:	ldr	r0, [fp, #-12]
   21844:	add	r0, r0, #1
   21848:	str	r0, [fp, #-12]
   2184c:	b	21860 <__assert_fail@plt+0xeca8>
   21850:	ldr	r0, [sp, #8]
   21854:	bl	50c68 <__assert_fail@plt+0x3e0b0>
   21858:	movw	r0, #0
   2185c:	str	r0, [sp, #8]
   21860:	b	21864 <__assert_fail@plt+0xecac>
   21864:	ldr	r0, [sp, #12]
   21868:	ldr	r0, [r0, #28]
   2186c:	str	r0, [sp, #12]
   21870:	b	217cc <__assert_fail@plt+0xec14>
   21874:	ldr	r0, [sp, #16]
   21878:	bl	2194c <__assert_fail@plt+0xed94>
   2187c:	ldr	r0, [sp, #8]
   21880:	movw	lr, #0
   21884:	cmp	r0, lr
   21888:	beq	21898 <__assert_fail@plt+0xece0>
   2188c:	ldr	r0, [fp, #-12]
   21890:	ldr	r1, [fp, #-4]
   21894:	str	r0, [r1]
   21898:	ldr	r0, [sp, #8]
   2189c:	mov	sp, fp
   218a0:	pop	{fp, pc}
   218a4:	push	{fp, lr}
   218a8:	mov	fp, sp
   218ac:	sub	sp, sp, #120	; 0x78
   218b0:	str	r0, [fp, #-8]
   218b4:	ldr	r0, [fp, #-8]
   218b8:	ldr	r1, [r0, #16]
   218bc:	ldr	r0, [r0, #20]
   218c0:	and	r0, r1, r0
   218c4:	cmn	r0, #1
   218c8:	bne	21938 <__assert_fail@plt+0xed80>
   218cc:	b	218d0 <__assert_fail@plt+0xed18>
   218d0:	add	r0, sp, #8
   218d4:	bl	1bea8 <__assert_fail@plt+0x92f0>
   218d8:	movw	r0, #136	; 0x88
   218dc:	movt	r0, #9
   218e0:	ldr	r0, [r0, #52]	; 0x34
   218e4:	ldr	lr, [fp, #-8]
   218e8:	ldr	lr, [lr, #4]
   218ec:	str	r0, [sp, #4]
   218f0:	mov	r0, lr
   218f4:	add	r1, sp, #8
   218f8:	ldr	lr, [sp, #4]
   218fc:	blx	lr
   21900:	movw	r1, #0
   21904:	cmp	r1, r0
   21908:	bne	2192c <__assert_fail@plt+0xed74>
   2190c:	ldr	r0, [sp, #8]
   21910:	ldr	r1, [sp, #12]
   21914:	ldr	r2, [fp, #-8]
   21918:	str	r1, [r2, #20]
   2191c:	str	r0, [r2, #16]
   21920:	movw	r0, #0
   21924:	str	r0, [fp, #-4]
   21928:	b	21940 <__assert_fail@plt+0xed88>
   2192c:	mvn	r0, #0
   21930:	str	r0, [fp, #-4]
   21934:	b	21940 <__assert_fail@plt+0xed88>
   21938:	movw	r0, #0
   2193c:	str	r0, [fp, #-4]
   21940:	ldr	r0, [fp, #-4]
   21944:	mov	sp, fp
   21948:	pop	{fp, pc}
   2194c:	push	{fp, lr}
   21950:	mov	fp, sp
   21954:	sub	sp, sp, #8
   21958:	str	r0, [sp, #4]
   2195c:	ldr	r0, [sp, #4]
   21960:	movw	r1, #0
   21964:	cmp	r0, r1
   21968:	beq	2198c <__assert_fail@plt+0xedd4>
   2196c:	ldr	r0, [sp, #4]
   21970:	ldr	r0, [r0, #28]
   21974:	str	r0, [sp]
   21978:	ldr	r0, [sp, #4]
   2197c:	bl	55a1c <__assert_fail@plt+0x42e64>
   21980:	ldr	r0, [sp]
   21984:	str	r0, [sp, #4]
   21988:	b	2195c <__assert_fail@plt+0xeda4>
   2198c:	mov	sp, fp
   21990:	pop	{fp, pc}
   21994:	andeq	r0, r0, r0
   21998:	push	{fp, lr}
   2199c:	mov	fp, sp
   219a0:	sub	sp, sp, #16
   219a4:	str	r0, [fp, #-4]
   219a8:	movw	r0, #0
   219ac:	str	r0, [sp, #8]
   219b0:	ldr	r0, [fp, #-4]
   219b4:	movw	r1, #0
   219b8:	cmp	r0, r1
   219bc:	beq	21a20 <__assert_fail@plt+0xee68>
   219c0:	ldr	r0, [fp, #-4]
   219c4:	ldr	r0, [r0]
   219c8:	movw	r1, #19344	; 0x4b90
   219cc:	movt	r1, #1
   219d0:	cmp	r0, r1
   219d4:	bne	219e8 <__assert_fail@plt+0xee30>
   219d8:	ldr	r0, [sp, #8]
   219dc:	orr	r0, r0, #1
   219e0:	str	r0, [sp, #8]
   219e4:	b	21a10 <__assert_fail@plt+0xee58>
   219e8:	ldr	r0, [fp, #-4]
   219ec:	ldr	r0, [r0]
   219f0:	movw	r1, #25444	; 0x6364
   219f4:	movt	r1, #1
   219f8:	cmp	r0, r1
   219fc:	bne	21a0c <__assert_fail@plt+0xee54>
   21a00:	ldr	r0, [sp, #8]
   21a04:	orr	r0, r0, #2
   21a08:	str	r0, [sp, #8]
   21a0c:	b	21a10 <__assert_fail@plt+0xee58>
   21a10:	ldr	r0, [fp, #-4]
   21a14:	ldr	r0, [r0, #152]	; 0x98
   21a18:	str	r0, [fp, #-4]
   21a1c:	b	219b0 <__assert_fail@plt+0xedf8>
   21a20:	ldr	r0, [sp, #8]
   21a24:	and	r0, r0, #2
   21a28:	cmp	r0, #0
   21a2c:	beq	21a7c <__assert_fail@plt+0xeec4>
   21a30:	ldr	r0, [sp, #8]
   21a34:	and	r0, r0, #1
   21a38:	cmp	r0, #0
   21a3c:	beq	21a7c <__assert_fail@plt+0xeec4>
   21a40:	movw	r0, #136	; 0x88
   21a44:	movt	r0, #9
   21a48:	ldrb	r0, [r0, #1]
   21a4c:	tst	r0, #1
   21a50:	bne	21a78 <__assert_fail@plt+0xeec0>
   21a54:	movw	r0, #42196	; 0xa4d4
   21a58:	movt	r0, #7
   21a5c:	bl	12864 <gettext@plt>
   21a60:	movw	lr, #1
   21a64:	str	r0, [sp, #4]
   21a68:	mov	r0, lr
   21a6c:	movw	r1, #0
   21a70:	ldr	r2, [sp, #4]
   21a74:	bl	12780 <error@plt>
   21a78:	b	21a7c <__assert_fail@plt+0xeec4>
   21a7c:	mov	sp, fp
   21a80:	pop	{fp, pc}
   21a84:	sub	sp, sp, #8
   21a88:	str	r0, [sp, #4]
   21a8c:	ldr	r0, [sp, #4]
   21a90:	cmp	r0, #0
   21a94:	str	r0, [sp]
   21a98:	beq	21aec <__assert_fail@plt+0xef34>
   21a9c:	b	21aa0 <__assert_fail@plt+0xeee8>
   21aa0:	ldr	r0, [sp]
   21aa4:	cmp	r0, #1
   21aa8:	beq	21ac0 <__assert_fail@plt+0xef08>
   21aac:	b	21ab0 <__assert_fail@plt+0xeef8>
   21ab0:	ldr	r0, [sp]
   21ab4:	cmp	r0, #2
   21ab8:	beq	21b10 <__assert_fail@plt+0xef58>
   21abc:	b	21b38 <__assert_fail@plt+0xef80>
   21ac0:	movw	r0, #51596	; 0xc98c
   21ac4:	movt	r0, #1
   21ac8:	movw	r1, #136	; 0x88
   21acc:	movt	r1, #9
   21ad0:	str	r0, [r1, #52]	; 0x34
   21ad4:	movw	r0, #7028	; 0x1b74
   21ad8:	movt	r0, #2
   21adc:	str	r0, [r1, #64]	; 0x40
   21ae0:	movw	r0, #1
   21ae4:	strb	r0, [r1, #12]
   21ae8:	b	21b38 <__assert_fail@plt+0xef80>
   21aec:	movw	r0, #51800	; 0xca58
   21af0:	movt	r0, #1
   21af4:	movw	r1, #136	; 0x88
   21af8:	movt	r1, #9
   21afc:	str	r0, [r1, #52]	; 0x34
   21b00:	movw	r0, #7136	; 0x1be0
   21b04:	movt	r0, #2
   21b08:	str	r0, [r1, #64]	; 0x40
   21b0c:	b	21b38 <__assert_fail@plt+0xef80>
   21b10:	movw	r0, #51072	; 0xc780
   21b14:	movt	r0, #1
   21b18:	movw	r1, #136	; 0x88
   21b1c:	movt	r1, #9
   21b20:	str	r0, [r1, #52]	; 0x34
   21b24:	movw	r0, #7184	; 0x1c10
   21b28:	movt	r0, #2
   21b2c:	str	r0, [r1, #64]	; 0x40
   21b30:	movw	r0, #1
   21b34:	strb	r0, [r1, #12]
   21b38:	ldr	r0, [sp, #4]
   21b3c:	movw	r1, #136	; 0x88
   21b40:	movt	r1, #9
   21b44:	str	r0, [r1, #48]	; 0x30
   21b48:	ldr	r0, [r1, #44]	; 0x2c
   21b4c:	and	r0, r0, #2
   21b50:	cmp	r0, #0
   21b54:	beq	21b6c <__assert_fail@plt+0xefb4>
   21b58:	movw	r0, #136	; 0x88
   21b5c:	movt	r0, #9
   21b60:	movw	r1, #51940	; 0xcae4
   21b64:	movt	r1, #1
   21b68:	str	r1, [r0, #52]	; 0x34
   21b6c:	add	sp, sp, #8
   21b70:	bx	lr
   21b74:	push	{fp, lr}
   21b78:	mov	fp, sp
   21b7c:	sub	sp, sp, #24
   21b80:	str	r0, [fp, #-8]
   21b84:	str	r1, [sp, #12]
   21b88:	str	r2, [sp, #8]
   21b8c:	ldr	r0, [fp, #-8]
   21b90:	ldr	r1, [sp, #12]
   21b94:	ldr	r2, [sp, #8]
   21b98:	bl	4af00 <__assert_fail@plt+0x38348>
   21b9c:	str	r0, [sp, #4]
   21ba0:	ldr	r0, [sp, #4]
   21ba4:	movw	r1, #0
   21ba8:	cmp	r1, r0
   21bac:	bne	21bbc <__assert_fail@plt+0xf004>
   21bb0:	movw	r0, #0
   21bb4:	str	r0, [fp, #-4]
   21bb8:	b	21bd4 <__assert_fail@plt+0xf01c>
   21bbc:	ldr	r0, [fp, #-8]
   21bc0:	ldr	r1, [sp, #12]
   21bc4:	ldr	r2, [sp, #8]
   21bc8:	ldr	r3, [sp, #4]
   21bcc:	bl	22080 <__assert_fail@plt+0xf4c8>
   21bd0:	str	r0, [fp, #-4]
   21bd4:	ldr	r0, [fp, #-4]
   21bd8:	mov	sp, fp
   21bdc:	pop	{fp, pc}
   21be0:	push	{fp, lr}
   21be4:	mov	fp, sp
   21be8:	sub	sp, sp, #16
   21bec:	str	r0, [fp, #-4]
   21bf0:	str	r1, [sp, #8]
   21bf4:	str	r2, [sp, #4]
   21bf8:	ldr	r0, [fp, #-4]
   21bfc:	ldr	r1, [sp, #8]
   21c00:	ldr	r2, [sp, #4]
   21c04:	bl	4b160 <__assert_fail@plt+0x385a8>
   21c08:	mov	sp, fp
   21c0c:	pop	{fp, pc}
   21c10:	push	{fp, lr}
   21c14:	mov	fp, sp
   21c18:	sub	sp, sp, #24
   21c1c:	str	r0, [fp, #-8]
   21c20:	str	r1, [sp, #12]
   21c24:	str	r2, [sp, #8]
   21c28:	movw	r0, #92	; 0x5c
   21c2c:	movt	r0, #9
   21c30:	ldr	r0, [r0]
   21c34:	movw	r1, #0
   21c38:	cmp	r1, r0
   21c3c:	bne	21c8c <__assert_fail@plt+0xf0d4>
   21c40:	ldr	r0, [fp, #-8]
   21c44:	ldr	r1, [sp, #12]
   21c48:	ldr	r2, [sp, #8]
   21c4c:	bl	4af00 <__assert_fail@plt+0x38348>
   21c50:	str	r0, [sp, #4]
   21c54:	ldr	r0, [sp, #4]
   21c58:	movw	r1, #0
   21c5c:	cmp	r1, r0
   21c60:	bne	21c70 <__assert_fail@plt+0xf0b8>
   21c64:	movw	r0, #0
   21c68:	str	r0, [fp, #-4]
   21c6c:	b	21ca0 <__assert_fail@plt+0xf0e8>
   21c70:	ldr	r0, [fp, #-8]
   21c74:	ldr	r1, [sp, #12]
   21c78:	ldr	r2, [sp, #8]
   21c7c:	ldr	r3, [sp, #4]
   21c80:	bl	22080 <__assert_fail@plt+0xf4c8>
   21c84:	str	r0, [fp, #-4]
   21c88:	b	21ca0 <__assert_fail@plt+0xf0e8>
   21c8c:	ldr	r0, [fp, #-8]
   21c90:	ldr	r1, [sp, #12]
   21c94:	ldr	r2, [sp, #8]
   21c98:	bl	4b160 <__assert_fail@plt+0x385a8>
   21c9c:	str	r0, [fp, #-4]
   21ca0:	ldr	r0, [fp, #-4]
   21ca4:	mov	sp, fp
   21ca8:	pop	{fp, pc}
   21cac:	sub	sp, sp, #16
   21cb0:	str	r0, [sp, #12]
   21cb4:	str	r1, [sp, #8]
   21cb8:	str	r2, [sp, #4]
   21cbc:	str	r3, [sp]
   21cc0:	movw	r0, #65200	; 0xfeb0
   21cc4:	movt	r0, #8
   21cc8:	movw	r1, #0
   21ccc:	str	r1, [r0]
   21cd0:	add	sp, sp, #16
   21cd4:	bx	lr
   21cd8:	sub	sp, sp, #16
   21cdc:	str	r0, [sp, #12]
   21ce0:	str	r1, [sp, #8]
   21ce4:	str	r2, [sp, #4]
   21ce8:	str	r3, [sp]
   21cec:	add	sp, sp, #16
   21cf0:	bx	lr
   21cf4:	push	{fp, lr}
   21cf8:	mov	fp, sp
   21cfc:	sub	sp, sp, #16
   21d00:	str	r0, [sp, #8]
   21d04:	ldr	r0, [sp, #8]
   21d08:	str	r0, [sp]
   21d0c:	ldr	r1, [sp, #8]
   21d10:	movw	r0, #42368	; 0xa580
   21d14:	movt	r0, #7
   21d18:	movw	r2, #6
   21d1c:	bl	12b58 <strncmp@plt>
   21d20:	movw	r1, #0
   21d24:	cmp	r1, r0
   21d28:	bne	21d58 <__assert_fail@plt+0xf1a0>
   21d2c:	ldr	r0, [sp, #8]
   21d30:	bl	12888 <strlen@plt>
   21d34:	movw	lr, #8
   21d38:	cmp	lr, r0
   21d3c:	bne	21d58 <__assert_fail@plt+0xf1a0>
   21d40:	ldr	r0, [sp]
   21d44:	movw	r1, #46740	; 0xb694
   21d48:	movt	r1, #7
   21d4c:	bl	21e08 <__assert_fail@plt+0xf250>
   21d50:	str	r0, [fp, #-4]
   21d54:	b	21dfc <__assert_fail@plt+0xf244>
   21d58:	ldr	r0, [sp, #8]
   21d5c:	ldrb	r0, [r0]
   21d60:	cmp	r0, #45	; 0x2d
   21d64:	bne	21d74 <__assert_fail@plt+0xf1bc>
   21d68:	ldr	r0, [sp, #8]
   21d6c:	add	r0, r0, #1
   21d70:	str	r0, [sp, #8]
   21d74:	movw	r0, #0
   21d78:	str	r0, [sp, #4]
   21d7c:	ldr	r0, [sp, #4]
   21d80:	movw	r1, #46756	; 0xb6a4
   21d84:	movt	r1, #7
   21d88:	add	r0, r1, r0, lsl #4
   21d8c:	ldr	r0, [r0, #4]
   21d90:	movw	r1, #0
   21d94:	cmp	r0, r1
   21d98:	beq	21df4 <__assert_fail@plt+0xf23c>
   21d9c:	ldr	r0, [sp, #4]
   21da0:	movw	r1, #46756	; 0xb6a4
   21da4:	movt	r1, #7
   21da8:	add	r0, r1, r0, lsl #4
   21dac:	ldr	r0, [r0, #4]
   21db0:	ldr	r1, [sp, #8]
   21db4:	bl	124c8 <strcmp@plt>
   21db8:	cmp	r0, #0
   21dbc:	bne	21de0 <__assert_fail@plt+0xf228>
   21dc0:	ldr	r0, [sp]
   21dc4:	ldr	r1, [sp, #4]
   21dc8:	movw	r2, #46756	; 0xb6a4
   21dcc:	movt	r2, #7
   21dd0:	add	r1, r2, r1, lsl #4
   21dd4:	bl	21e08 <__assert_fail@plt+0xf250>
   21dd8:	str	r0, [fp, #-4]
   21ddc:	b	21dfc <__assert_fail@plt+0xf244>
   21de0:	b	21de4 <__assert_fail@plt+0xf22c>
   21de4:	ldr	r0, [sp, #4]
   21de8:	add	r0, r0, #1
   21dec:	str	r0, [sp, #4]
   21df0:	b	21d7c <__assert_fail@plt+0xf1c4>
   21df4:	movw	r0, #0
   21df8:	str	r0, [fp, #-4]
   21dfc:	ldr	r0, [fp, #-4]
   21e00:	mov	sp, fp
   21e04:	pop	{fp, pc}
   21e08:	push	{fp, lr}
   21e0c:	mov	fp, sp
   21e10:	sub	sp, sp, #32
   21e14:	str	r0, [fp, #-8]
   21e18:	str	r1, [fp, #-12]
   21e1c:	ldr	r0, [fp, #-12]
   21e20:	ldr	r0, [r0]
   21e24:	cmp	r0, #2
   21e28:	beq	21ef8 <__assert_fail@plt+0xf340>
   21e2c:	ldr	r0, [fp, #-12]
   21e30:	ldr	r0, [r0]
   21e34:	cmp	r0, #1
   21e38:	bne	21e48 <__assert_fail@plt+0xf290>
   21e3c:	movw	r0, #0
   21e40:	str	r0, [fp, #-4]
   21e44:	b	21f00 <__assert_fail@plt+0xf348>
   21e48:	ldr	r0, [fp, #-12]
   21e4c:	ldr	r0, [r0]
   21e50:	cmp	r0, #0
   21e54:	bne	21ec8 <__assert_fail@plt+0xf310>
   21e58:	movw	r0, #65200	; 0xfeb0
   21e5c:	movt	r0, #8
   21e60:	ldr	r0, [r0]
   21e64:	movw	r1, #0
   21e68:	cmp	r0, r1
   21e6c:	beq	21ec4 <__assert_fail@plt+0xf30c>
   21e70:	bl	2217c <__assert_fail@plt+0xf5c4>
   21e74:	tst	r0, #1
   21e78:	beq	21ec4 <__assert_fail@plt+0xf30c>
   21e7c:	movw	r0, #42452	; 0xa5d4
   21e80:	movt	r0, #7
   21e84:	bl	12864 <gettext@plt>
   21e88:	ldr	r3, [fp, #-8]
   21e8c:	movw	lr, #65200	; 0xfeb0
   21e90:	movt	lr, #8
   21e94:	ldr	lr, [lr]
   21e98:	ldr	r1, [fp, #-8]
   21e9c:	movw	r2, #0
   21ea0:	str	r0, [sp, #16]
   21ea4:	mov	r0, r2
   21ea8:	str	r1, [sp, #12]
   21eac:	mov	r1, r2
   21eb0:	ldr	r2, [sp, #16]
   21eb4:	str	lr, [sp]
   21eb8:	ldr	lr, [sp, #12]
   21ebc:	str	lr, [sp, #4]
   21ec0:	bl	12780 <error@plt>
   21ec4:	b	21ef4 <__assert_fail@plt+0xf33c>
   21ec8:	movw	r0, #65200	; 0xfeb0
   21ecc:	movt	r0, #8
   21ed0:	ldr	r0, [r0]
   21ed4:	movw	r1, #0
   21ed8:	cmp	r0, r1
   21edc:	bne	21ef0 <__assert_fail@plt+0xf338>
   21ee0:	ldr	r0, [fp, #-8]
   21ee4:	movw	r1, #65200	; 0xfeb0
   21ee8:	movt	r1, #8
   21eec:	str	r0, [r1]
   21ef0:	b	21ef4 <__assert_fail@plt+0xf33c>
   21ef4:	b	21ef8 <__assert_fail@plt+0xf340>
   21ef8:	ldr	r0, [fp, #-12]
   21efc:	str	r0, [fp, #-4]
   21f00:	ldr	r0, [fp, #-4]
   21f04:	mov	sp, fp
   21f08:	pop	{fp, pc}
   21f0c:	push	{fp, lr}
   21f10:	mov	fp, sp
   21f14:	sub	sp, sp, #16
   21f18:	str	r0, [fp, #-4]
   21f1c:	str	r1, [sp, #8]
   21f20:	str	r2, [sp, #4]
   21f24:	ldr	r0, [fp, #-4]
   21f28:	bl	1a260 <__assert_fail@plt+0x76a8>
   21f2c:	str	r0, [sp]
   21f30:	ldr	r0, [sp]
   21f34:	movw	r1, #18924	; 0x49ec
   21f38:	movt	r1, #1
   21f3c:	str	r1, [r0]
   21f40:	ldr	r0, [sp]
   21f44:	movw	r1, #5
   21f48:	str	r1, [r0, #8]
   21f4c:	ldr	r0, [sp]
   21f50:	movw	r1, #0
   21f54:	str	r1, [r0, #12]
   21f58:	ldr	r0, [sp]
   21f5c:	movw	r1, #0
   21f60:	strb	r1, [r0, #19]
   21f64:	ldr	r0, [sp]
   21f68:	strb	r1, [r0, #18]
   21f6c:	movw	r0, #1
   21f70:	and	r0, r0, #1
   21f74:	mov	sp, fp
   21f78:	pop	{fp, pc}
   21f7c:	push	{fp, lr}
   21f80:	mov	fp, sp
   21f84:	sub	sp, sp, #16
   21f88:	str	r0, [fp, #-4]
   21f8c:	str	r1, [sp, #8]
   21f90:	str	r2, [sp, #4]
   21f94:	ldr	r0, [fp, #-4]
   21f98:	movw	r1, #0
   21f9c:	bl	1a444 <__assert_fail@plt+0x788c>
   21fa0:	str	r0, [sp]
   21fa4:	ldr	r0, [sp]
   21fa8:	movw	r1, #24452	; 0x5f84
   21fac:	movt	r1, #1
   21fb0:	str	r1, [r0]
   21fb4:	ldr	r0, [sp]
   21fb8:	movw	r1, #4
   21fbc:	str	r1, [r0, #8]
   21fc0:	ldr	r0, [sp]
   21fc4:	movw	r1, #0
   21fc8:	str	r1, [r0, #12]
   21fcc:	ldr	r0, [sp]
   21fd0:	movw	r1, #0
   21fd4:	strb	r1, [r0, #19]
   21fd8:	ldr	r0, [sp]
   21fdc:	strb	r1, [r0, #18]
   21fe0:	movw	r0, #1
   21fe4:	and	r0, r0, #1
   21fe8:	mov	sp, fp
   21fec:	pop	{fp, pc}
   21ff0:	push	{fp, lr}
   21ff4:	mov	fp, sp
   21ff8:	sub	sp, sp, #16
   21ffc:	str	r0, [fp, #-4]
   22000:	str	r1, [sp, #8]
   22004:	str	r2, [sp, #4]
   22008:	ldr	r0, [fp, #-4]
   2200c:	bl	1badc <__assert_fail@plt+0x8f24>
   22010:	str	r0, [sp]
   22014:	ldr	r0, [sp]
   22018:	movw	r1, #1
   2201c:	strb	r1, [r0, #17]
   22020:	ldr	r0, [sp]
   22024:	strb	r1, [r0, #16]
   22028:	ldr	r0, [sp]
   2202c:	movw	r1, #0
   22030:	strb	r1, [r0, #19]
   22034:	ldr	r0, [sp]
   22038:	strb	r1, [r0, #18]
   2203c:	ldr	r0, [sp]
   22040:	add	r0, r0, #40	; 0x28
   22044:	bl	22058 <__assert_fail@plt+0xf4a0>
   22048:	movw	r0, #1
   2204c:	and	r0, r0, #1
   22050:	mov	sp, fp
   22054:	pop	{fp, pc}
   22058:	push	{fp, lr}
   2205c:	mov	fp, sp
   22060:	sub	sp, sp, #8
   22064:	str	r0, [sp, #4]
   22068:	ldr	r1, [sp, #4]
   2206c:	movw	r0, #44974	; 0xafae
   22070:	movt	r0, #7
   22074:	bl	26c18 <__assert_fail@plt+0x14060>
   22078:	mov	sp, fp
   2207c:	pop	{fp, pc}
   22080:	push	{fp, lr}
   22084:	mov	fp, sp
   22088:	sub	sp, sp, #32
   2208c:	str	r0, [fp, #-8]
   22090:	str	r1, [fp, #-12]
   22094:	str	r2, [sp, #16]
   22098:	str	r3, [sp, #12]
   2209c:	bl	128d0 <__errno_location@plt>
   220a0:	ldr	r0, [r0]
   220a4:	cmp	r0, #2
   220a8:	str	r0, [sp, #8]
   220ac:	beq	22114 <__assert_fail@plt+0xf55c>
   220b0:	b	220b4 <__assert_fail@plt+0xf4fc>
   220b4:	ldr	r0, [sp, #8]
   220b8:	cmp	r0, #5
   220bc:	beq	22164 <__assert_fail@plt+0xf5ac>
   220c0:	b	220c4 <__assert_fail@plt+0xf50c>
   220c4:	ldr	r0, [sp, #8]
   220c8:	cmp	r0, #13
   220cc:	beq	22164 <__assert_fail@plt+0xf5ac>
   220d0:	b	220d4 <__assert_fail@plt+0xf51c>
   220d4:	ldr	r0, [sp, #8]
   220d8:	cmp	r0, #20
   220dc:	beq	22114 <__assert_fail@plt+0xf55c>
   220e0:	b	220e4 <__assert_fail@plt+0xf52c>
   220e4:	ldr	r0, [sp, #8]
   220e8:	cmp	r0, #36	; 0x24
   220ec:	beq	22164 <__assert_fail@plt+0xf5ac>
   220f0:	b	220f4 <__assert_fail@plt+0xf53c>
   220f4:	ldr	r0, [sp, #8]
   220f8:	cmp	r0, #40	; 0x28
   220fc:	beq	22164 <__assert_fail@plt+0xf5ac>
   22100:	b	22104 <__assert_fail@plt+0xf54c>
   22104:	ldr	r0, [sp, #8]
   22108:	cmp	r0, #75	; 0x4b
   2210c:	beq	22164 <__assert_fail@plt+0xf5ac>
   22110:	b	22168 <__assert_fail@plt+0xf5b0>
   22114:	movw	r0, #136	; 0x88
   22118:	movt	r0, #9
   2211c:	ldr	r0, [r0, #44]	; 0x2c
   22120:	and	r0, r0, #2
   22124:	cmp	r0, #0
   22128:	beq	2214c <__assert_fail@plt+0xf594>
   2212c:	movw	r0, #63272	; 0xf728
   22130:	movt	r0, #8
   22134:	ldr	r0, [r0]
   22138:	ldr	r2, [fp, #-12]
   2213c:	movw	r1, #42375	; 0xa587
   22140:	movt	r1, #7
   22144:	bl	128c4 <fprintf@plt>
   22148:	str	r0, [sp, #4]
   2214c:	ldr	r0, [fp, #-8]
   22150:	ldr	r1, [fp, #-12]
   22154:	ldr	r2, [sp, #16]
   22158:	bl	4b160 <__assert_fail@plt+0x385a8>
   2215c:	str	r0, [fp, #-4]
   22160:	b	22170 <__assert_fail@plt+0xf5b8>
   22164:	b	22168 <__assert_fail@plt+0xf5b0>
   22168:	ldr	r0, [sp, #12]
   2216c:	str	r0, [fp, #-4]
   22170:	ldr	r0, [fp, #-4]
   22174:	mov	sp, fp
   22178:	pop	{fp, pc}
   2217c:	sub	sp, sp, #4
   22180:	movw	r0, #136	; 0x88
   22184:	movt	r0, #9
   22188:	ldrb	r0, [r0, #17]
   2218c:	tst	r0, #1
   22190:	beq	221a4 <__assert_fail@plt+0xf5ec>
   22194:	movw	r0, #0
   22198:	and	r0, r0, #1
   2219c:	strb	r0, [sp, #3]
   221a0:	b	221b8 <__assert_fail@plt+0xf600>
   221a4:	movw	r0, #136	; 0x88
   221a8:	movt	r0, #9
   221ac:	ldrb	r0, [r0, #16]
   221b0:	and	r0, r0, #1
   221b4:	strb	r0, [sp, #3]
   221b8:	ldrb	r0, [sp, #3]
   221bc:	and	r0, r0, #1
   221c0:	add	sp, sp, #4
   221c4:	bx	lr
   221c8:	push	{fp, lr}
   221cc:	mov	fp, sp
   221d0:	sub	sp, sp, #176	; 0xb0
   221d4:	str	r0, [fp, #-8]
   221d8:	str	r1, [fp, #-12]
   221dc:	str	r2, [fp, #-16]
   221e0:	ldr	r0, [fp, #-12]
   221e4:	movw	r1, #0
   221e8:	cmp	r0, r1
   221ec:	beq	22210 <__assert_fail@plt+0xf658>
   221f0:	ldr	r0, [fp, #-12]
   221f4:	ldr	r1, [fp, #-16]
   221f8:	ldr	r1, [r1]
   221fc:	add	r0, r0, r1, lsl #2
   22200:	ldr	r0, [r0]
   22204:	movw	r1, #0
   22208:	cmp	r0, r1
   2220c:	bne	22220 <__assert_fail@plt+0xf668>
   22210:	movw	r0, #0
   22214:	and	r0, r0, #1
   22218:	strb	r0, [fp, #-1]
   2221c:	b	22784 <__assert_fail@plt+0xfbcc>
   22220:	ldr	r0, [fp, #-12]
   22224:	ldr	r1, [fp, #-16]
   22228:	ldr	r1, [r1]
   2222c:	add	r0, r0, r1, lsl #2
   22230:	ldr	r0, [r0]
   22234:	bl	12888 <strlen@plt>
   22238:	movw	r1, #8
   2223c:	cmp	r1, r0
   22240:	beq	22254 <__assert_fail@plt+0xf69c>
   22244:	movw	r0, #0
   22248:	and	r0, r0, #1
   2224c:	strb	r0, [fp, #-1]
   22250:	b	22784 <__assert_fail@plt+0xfbcc>
   22254:	mov	r0, #116	; 0x74
   22258:	strh	r0, [fp, #-20]	; 0xffffffec
   2225c:	movw	r0, #16993	; 0x4261
   22260:	movt	r0, #28003	; 0x6d63
   22264:	str	r0, [fp, #-24]	; 0xffffffe8
   22268:	ldr	r0, [fp, #-12]
   2226c:	ldr	r1, [fp, #-16]
   22270:	ldr	r1, [r1]
   22274:	add	r0, r0, r1, lsl #2
   22278:	ldr	r1, [r0]
   2227c:	movw	r0, #42368	; 0xa580
   22280:	movt	r0, #7
   22284:	movw	r2, #6
   22288:	bl	12b58 <strncmp@plt>
   2228c:	movw	r1, #0
   22290:	cmp	r1, r0
   22294:	bne	2229c <__assert_fail@plt+0xf6e4>
   22298:	b	222bc <__assert_fail@plt+0xf704>
   2229c:	movw	r0, #42704	; 0xa6d0
   222a0:	movt	r0, #7
   222a4:	movw	r1, #42747	; 0xa6fb
   222a8:	movt	r1, #7
   222ac:	movw	r2, #1555	; 0x613
   222b0:	movw	r3, #42756	; 0xa704
   222b4:	movt	r3, #7
   222b8:	bl	12bb8 <__assert_fail@plt>
   222bc:	ldr	r0, [fp, #-12]
   222c0:	ldr	r1, [fp, #-16]
   222c4:	ldr	r1, [r1]
   222c8:	ldr	r0, [r0, r1, lsl #2]
   222cc:	ldrb	r0, [r0, #6]
   222d0:	strb	r0, [fp, #-17]	; 0xffffffef
   222d4:	ldr	r0, [fp, #-12]
   222d8:	ldr	r1, [fp, #-16]
   222dc:	ldr	r1, [r1]
   222e0:	add	r0, r0, r1, lsl #2
   222e4:	ldr	r0, [r0]
   222e8:	ldrb	r0, [r0, #7]
   222ec:	strb	r0, [fp, #-18]	; 0xffffffee
   222f0:	ldrb	r0, [fp, #-17]	; 0xffffffef
   222f4:	movw	r1, #66	; 0x42
   222f8:	cmp	r1, r0
   222fc:	beq	22310 <__assert_fail@plt+0xf758>
   22300:	ldrb	r0, [fp, #-18]	; 0xffffffee
   22304:	movw	r1, #66	; 0x42
   22308:	cmp	r1, r0
   2230c:	bne	22344 <__assert_fail@plt+0xf78c>
   22310:	movw	r0, #42821	; 0xa745
   22314:	movt	r0, #7
   22318:	bl	12864 <gettext@plt>
   2231c:	movw	lr, #0
   22320:	str	r0, [sp, #36]	; 0x24
   22324:	mov	r0, lr
   22328:	mov	r1, lr
   2232c:	ldr	r2, [sp, #36]	; 0x24
   22330:	bl	12780 <error@plt>
   22334:	movw	r0, #0
   22338:	and	r0, r0, #1
   2233c:	strb	r0, [fp, #-1]
   22340:	b	22784 <__assert_fail@plt+0xfbcc>
   22344:	ldrb	r0, [fp, #-17]	; 0xffffffef
   22348:	cmp	r0, #116	; 0x74
   2234c:	beq	22380 <__assert_fail@plt+0xf7c8>
   22350:	sub	r0, fp, #24
   22354:	ldrb	r1, [fp, #-17]	; 0xffffffef
   22358:	bl	12894 <strchr@plt>
   2235c:	movw	r1, #0
   22360:	cmp	r1, r0
   22364:	beq	22380 <__assert_fail@plt+0xf7c8>
   22368:	sub	r0, fp, #24
   2236c:	ldrb	r1, [fp, #-18]	; 0xffffffee
   22370:	bl	12894 <strchr@plt>
   22374:	movw	r1, #0
   22378:	cmp	r1, r0
   2237c:	bne	22390 <__assert_fail@plt+0xf7d8>
   22380:	movw	r0, #0
   22384:	and	r0, r0, #1
   22388:	strb	r0, [fp, #-1]
   2238c:	b	22784 <__assert_fail@plt+0xfbcc>
   22390:	ldr	r0, [fp, #-12]
   22394:	ldr	r1, [fp, #-16]
   22398:	ldr	r1, [r1]
   2239c:	add	r1, r1, #1
   223a0:	add	r0, r0, r1, lsl #2
   223a4:	ldr	r0, [r0]
   223a8:	movw	r1, #0
   223ac:	cmp	r0, r1
   223b0:	bne	2240c <__assert_fail@plt+0xf854>
   223b4:	movw	r0, #42890	; 0xa78a
   223b8:	movt	r0, #7
   223bc:	bl	12864 <gettext@plt>
   223c0:	movw	lr, #136	; 0x88
   223c4:	movt	lr, #9
   223c8:	ldr	r1, [lr, #72]	; 0x48
   223cc:	ldr	lr, [fp, #-12]
   223d0:	ldr	r2, [fp, #-16]
   223d4:	ldr	r2, [r2]
   223d8:	add	r2, lr, r2, lsl #2
   223dc:	ldr	r2, [r2]
   223e0:	movw	lr, #0
   223e4:	str	r0, [sp, #32]
   223e8:	mov	r0, lr
   223ec:	bl	4a828 <__assert_fail@plt+0x37c70>
   223f0:	movw	r1, #1
   223f4:	str	r0, [sp, #28]
   223f8:	mov	r0, r1
   223fc:	movw	r1, #0
   22400:	ldr	r2, [sp, #32]
   22404:	ldr	r3, [sp, #28]
   22408:	bl	12780 <error@plt>
   2240c:	ldr	r0, [fp, #-16]
   22410:	ldr	r1, [r0]
   22414:	add	r1, r1, #1
   22418:	str	r1, [r0]
   2241c:	ldr	r0, [fp, #-8]
   22420:	ldr	r1, [fp, #-12]
   22424:	ldr	r2, [fp, #-16]
   22428:	ldr	r2, [r2]
   2242c:	ldr	r1, [r1, r2, lsl #2]
   22430:	bl	1ba74 <__assert_fail@plt+0x8ebc>
   22434:	str	r0, [fp, #-28]	; 0xffffffe4
   22438:	ldrb	r0, [fp, #-17]	; 0xffffffef
   2243c:	mov	r1, r0
   22440:	cmp	r0, #66	; 0x42
   22444:	str	r1, [sp, #24]
   22448:	beq	22490 <__assert_fail@plt+0xf8d8>
   2244c:	b	22450 <__assert_fail@plt+0xf898>
   22450:	ldr	r0, [sp, #24]
   22454:	cmp	r0, #97	; 0x61
   22458:	beq	22480 <__assert_fail@plt+0xf8c8>
   2245c:	b	22460 <__assert_fail@plt+0xf8a8>
   22460:	ldr	r0, [sp, #24]
   22464:	cmp	r0, #99	; 0x63
   22468:	beq	224a0 <__assert_fail@plt+0xf8e8>
   2246c:	b	22470 <__assert_fail@plt+0xf8b8>
   22470:	ldr	r0, [sp, #24]
   22474:	cmp	r0, #109	; 0x6d
   22478:	beq	224b0 <__assert_fail@plt+0xf8f8>
   2247c:	b	224c0 <__assert_fail@plt+0xf908>
   22480:	ldr	r0, [fp, #-28]	; 0xffffffe4
   22484:	movw	r1, #0
   22488:	str	r1, [r0, #40]	; 0x28
   2248c:	b	2251c <__assert_fail@plt+0xf964>
   22490:	ldr	r0, [fp, #-28]	; 0xffffffe4
   22494:	movw	r1, #1
   22498:	str	r1, [r0, #40]	; 0x28
   2249c:	b	2251c <__assert_fail@plt+0xf964>
   224a0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   224a4:	movw	r1, #2
   224a8:	str	r1, [r0, #40]	; 0x28
   224ac:	b	2251c <__assert_fail@plt+0xf964>
   224b0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   224b4:	movw	r1, #3
   224b8:	str	r1, [r0, #40]	; 0x28
   224bc:	b	2251c <__assert_fail@plt+0xf964>
   224c0:	sub	r0, fp, #24
   224c4:	ldrb	r1, [fp, #-17]	; 0xffffffef
   224c8:	bl	12894 <strchr@plt>
   224cc:	movw	r1, #0
   224d0:	cmp	r0, r1
   224d4:	beq	224dc <__assert_fail@plt+0xf924>
   224d8:	b	224fc <__assert_fail@plt+0xf944>
   224dc:	movw	r0, #42920	; 0xa7a8
   224e0:	movt	r0, #7
   224e4:	movw	r1, #42747	; 0xa6fb
   224e8:	movt	r1, #7
   224ec:	movw	r2, #1611	; 0x64b
   224f0:	movw	r3, #42756	; 0xa704
   224f4:	movt	r3, #7
   224f8:	bl	12bb8 <__assert_fail@plt>
   224fc:	movw	r0, #36537	; 0x8eb9
   22500:	movt	r0, #7
   22504:	movw	r1, #42747	; 0xa6fb
   22508:	movt	r1, #7
   2250c:	movw	r2, #1612	; 0x64c
   22510:	movw	r3, #42756	; 0xa704
   22514:	movt	r3, #7
   22518:	bl	12bb8 <__assert_fail@plt>
   2251c:	ldrb	r0, [fp, #-18]	; 0xffffffee
   22520:	movw	r1, #116	; 0x74
   22524:	cmp	r1, r0
   22528:	bne	225bc <__assert_fail@plt+0xfa04>
   2252c:	movw	r0, #136	; 0x88
   22530:	movt	r0, #9
   22534:	add	r2, r0, #20
   22538:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2253c:	add	r0, r0, #48	; 0x30
   22540:	ldr	r1, [fp, #-12]
   22544:	ldr	r3, [fp, #-16]
   22548:	ldr	r3, [r3]
   2254c:	add	r1, r1, r3, lsl #2
   22550:	ldr	r1, [r1]
   22554:	bl	3ed60 <__assert_fail@plt+0x2c1a8>
   22558:	tst	r0, #1
   2255c:	bne	225b8 <__assert_fail@plt+0xfa00>
   22560:	movw	r0, #42943	; 0xa7bf
   22564:	movt	r0, #7
   22568:	bl	12864 <gettext@plt>
   2256c:	movw	lr, #136	; 0x88
   22570:	movt	lr, #9
   22574:	ldr	r1, [lr, #72]	; 0x48
   22578:	ldr	lr, [fp, #-12]
   2257c:	ldr	r2, [fp, #-16]
   22580:	ldr	r2, [r2]
   22584:	add	r2, lr, r2, lsl #2
   22588:	ldr	r2, [r2]
   2258c:	movw	lr, #0
   22590:	str	r0, [sp, #20]
   22594:	mov	r0, lr
   22598:	bl	4a828 <__assert_fail@plt+0x37c70>
   2259c:	movw	r1, #1
   225a0:	str	r0, [sp, #16]
   225a4:	mov	r0, r1
   225a8:	movw	r1, #0
   225ac:	ldr	r2, [sp, #20]
   225b0:	ldr	r3, [sp, #16]
   225b4:	bl	12780 <error@plt>
   225b8:	b	226a0 <__assert_fail@plt+0xfae8>
   225bc:	add	r0, sp, #40	; 0x28
   225c0:	bl	1bea8 <__assert_fail@plt+0x92f0>
   225c4:	movw	r0, #136	; 0x88
   225c8:	movt	r0, #9
   225cc:	ldr	r0, [r0, #52]	; 0x34
   225d0:	ldr	lr, [fp, #-12]
   225d4:	ldr	r1, [fp, #-16]
   225d8:	ldr	r1, [r1]
   225dc:	add	r1, lr, r1, lsl #2
   225e0:	ldr	r1, [r1]
   225e4:	str	r0, [sp, #12]
   225e8:	mov	r0, r1
   225ec:	add	r1, sp, #40	; 0x28
   225f0:	ldr	lr, [sp, #12]
   225f4:	blx	lr
   225f8:	cmp	r0, #0
   225fc:	beq	22620 <__assert_fail@plt+0xfa68>
   22600:	bl	128d0 <__errno_location@plt>
   22604:	ldr	r0, [r0]
   22608:	ldr	lr, [fp, #-12]
   2260c:	ldr	r1, [fp, #-16]
   22610:	ldr	r1, [r1]
   22614:	add	r1, lr, r1, lsl #2
   22618:	ldr	r1, [r1]
   2261c:	bl	1db7c <__assert_fail@plt+0xafc4>
   22620:	ldrb	r0, [fp, #-18]	; 0xffffffee
   22624:	ldr	r1, [fp, #-28]	; 0xffffffe4
   22628:	add	r1, r1, #40	; 0x28
   2262c:	add	r2, r1, #8
   22630:	add	r1, sp, #40	; 0x28
   22634:	str	r0, [sp, #8]
   22638:	mov	r0, r1
   2263c:	ldr	r1, [sp, #8]
   22640:	and	r1, r1, #255	; 0xff
   22644:	bl	22794 <__assert_fail@plt+0xfbdc>
   22648:	cmp	r0, #0
   2264c:	bne	2269c <__assert_fail@plt+0xfae4>
   22650:	movw	r0, #43001	; 0xa7f9
   22654:	movt	r0, #7
   22658:	bl	12864 <gettext@plt>
   2265c:	ldr	lr, [fp, #-12]
   22660:	ldr	r1, [fp, #-16]
   22664:	ldr	r1, [r1]
   22668:	add	r1, lr, r1, lsl #2
   2266c:	ldr	r1, [r1]
   22670:	movw	lr, #0
   22674:	str	r0, [sp, #4]
   22678:	mov	r0, lr
   2267c:	bl	1da90 <__assert_fail@plt+0xaed8>
   22680:	movw	r1, #1
   22684:	str	r0, [sp]
   22688:	mov	r0, r1
   2268c:	movw	r1, #0
   22690:	ldr	r2, [sp, #4]
   22694:	ldr	r3, [sp]
   22698:	bl	12780 <error@plt>
   2269c:	b	226a0 <__assert_fail@plt+0xfae8>
   226a0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   226a4:	movw	r1, #0
   226a8:	str	r1, [r0, #44]	; 0x2c
   226ac:	ldr	r0, [fp, #-28]	; 0xffffffe4
   226b0:	ldr	r0, [r0, #48]	; 0x30
   226b4:	bl	22914 <__assert_fail@plt+0xfd5c>
   226b8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   226bc:	vstr	s0, [r0, #28]
   226c0:	ldr	r0, [fp, #-16]
   226c4:	ldr	r1, [r0]
   226c8:	add	r1, r1, #1
   226cc:	str	r1, [r0]
   226d0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   226d4:	ldr	r0, [r0]
   226d8:	movw	r1, #0
   226dc:	cmp	r0, r1
   226e0:	beq	226e8 <__assert_fail@plt+0xfb30>
   226e4:	b	22708 <__assert_fail@plt+0xfb50>
   226e8:	movw	r0, #43037	; 0xa81d
   226ec:	movt	r0, #7
   226f0:	movw	r1, #42747	; 0xa6fb
   226f4:	movt	r1, #7
   226f8:	movw	r2, #1647	; 0x66f
   226fc:	movw	r3, #42756	; 0xa704
   22700:	movt	r3, #7
   22704:	bl	12bb8 <__assert_fail@plt>
   22708:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2270c:	ldr	r0, [r0]
   22710:	movw	r1, #23328	; 0x5b20
   22714:	movt	r1, #1
   22718:	cmp	r0, r1
   2271c:	bne	22724 <__assert_fail@plt+0xfb6c>
   22720:	b	22744 <__assert_fail@plt+0xfb8c>
   22724:	movw	r0, #43065	; 0xa839
   22728:	movt	r0, #7
   2272c:	movw	r1, #42747	; 0xa6fb
   22730:	movt	r1, #7
   22734:	movw	r2, #1648	; 0x670
   22738:	movw	r3, #42756	; 0xa704
   2273c:	movt	r3, #7
   22740:	bl	12bb8 <__assert_fail@plt>
   22744:	ldr	r0, [fp, #-28]	; 0xffffffe4
   22748:	ldrb	r0, [r0, #18]
   2274c:	tst	r0, #1
   22750:	beq	22758 <__assert_fail@plt+0xfba0>
   22754:	b	22778 <__assert_fail@plt+0xfbc0>
   22758:	movw	r0, #43101	; 0xa85d
   2275c:	movt	r0, #7
   22760:	movw	r1, #42747	; 0xa6fb
   22764:	movt	r1, #7
   22768:	movw	r2, #1649	; 0x671
   2276c:	movw	r3, #42756	; 0xa704
   22770:	movt	r3, #7
   22774:	bl	12bb8 <__assert_fail@plt>
   22778:	movw	r0, #1
   2277c:	and	r0, r0, #1
   22780:	strb	r0, [fp, #-1]
   22784:	ldrb	r0, [fp, #-1]
   22788:	and	r0, r0, #1
   2278c:	mov	sp, fp
   22790:	pop	{fp, pc}
   22794:	push	{fp, lr}
   22798:	mov	fp, sp
   2279c:	sub	sp, sp, #72	; 0x48
   227a0:	str	r0, [fp, #-8]
   227a4:	strb	r1, [fp, #-9]
   227a8:	str	r2, [fp, #-16]
   227ac:	ldrb	r0, [fp, #-9]
   227b0:	mov	r1, r0
   227b4:	cmp	r0, #66	; 0x42
   227b8:	str	r1, [sp, #20]
   227bc:	beq	2282c <__assert_fail@plt+0xfc74>
   227c0:	b	227c4 <__assert_fail@plt+0xfc0c>
   227c4:	ldr	r0, [sp, #20]
   227c8:	cmp	r0, #97	; 0x61
   227cc:	beq	227f4 <__assert_fail@plt+0xfc3c>
   227d0:	b	227d4 <__assert_fail@plt+0xfc1c>
   227d4:	ldr	r0, [sp, #20]
   227d8:	cmp	r0, #99	; 0x63
   227dc:	beq	22878 <__assert_fail@plt+0xfcc0>
   227e0:	b	227e4 <__assert_fail@plt+0xfc2c>
   227e4:	ldr	r0, [sp, #20]
   227e8:	cmp	r0, #109	; 0x6d
   227ec:	beq	228b0 <__assert_fail@plt+0xfcf8>
   227f0:	b	228e8 <__assert_fail@plt+0xfd30>
   227f4:	ldr	r0, [fp, #-16]
   227f8:	ldr	r1, [fp, #-8]
   227fc:	sub	r2, fp, #24
   22800:	str	r0, [sp, #16]
   22804:	mov	r0, r2
   22808:	bl	4b8dc <__assert_fail@plt+0x38d24>
   2280c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   22810:	ldr	r1, [sp, #16]
   22814:	str	r0, [r1]
   22818:	ldr	r0, [fp, #-20]	; 0xffffffec
   2281c:	str	r0, [r1, #4]
   22820:	movw	r0, #1
   22824:	str	r0, [fp, #-4]
   22828:	b	22908 <__assert_fail@plt+0xfd50>
   2282c:	ldr	r0, [fp, #-16]
   22830:	ldr	r1, [fp, #-8]
   22834:	sub	r2, fp, #32
   22838:	str	r0, [sp, #12]
   2283c:	mov	r0, r2
   22840:	bl	4b948 <__assert_fail@plt+0x38d90>
   22844:	ldr	r0, [fp, #-32]	; 0xffffffe0
   22848:	ldr	r1, [sp, #12]
   2284c:	str	r0, [r1]
   22850:	ldr	r0, [fp, #-28]	; 0xffffffe4
   22854:	str	r0, [r1, #4]
   22858:	ldr	r0, [fp, #-16]
   2285c:	ldr	r0, [r0, #4]
   22860:	cmp	r0, #0
   22864:	movw	r0, #0
   22868:	movge	r0, #1
   2286c:	and	r0, r0, #1
   22870:	str	r0, [fp, #-4]
   22874:	b	22908 <__assert_fail@plt+0xfd50>
   22878:	ldr	r0, [fp, #-16]
   2287c:	ldr	r1, [fp, #-8]
   22880:	add	r2, sp, #32
   22884:	str	r0, [sp, #8]
   22888:	mov	r0, r2
   2288c:	bl	4b900 <__assert_fail@plt+0x38d48>
   22890:	ldr	r0, [sp, #32]
   22894:	ldr	r1, [sp, #8]
   22898:	str	r0, [r1]
   2289c:	ldr	r0, [sp, #36]	; 0x24
   228a0:	str	r0, [r1, #4]
   228a4:	movw	r0, #1
   228a8:	str	r0, [fp, #-4]
   228ac:	b	22908 <__assert_fail@plt+0xfd50>
   228b0:	ldr	r0, [fp, #-16]
   228b4:	ldr	r1, [fp, #-8]
   228b8:	add	r2, sp, #24
   228bc:	str	r0, [sp, #4]
   228c0:	mov	r0, r2
   228c4:	bl	4b924 <__assert_fail@plt+0x38d6c>
   228c8:	ldr	r0, [sp, #24]
   228cc:	ldr	r1, [sp, #4]
   228d0:	str	r0, [r1]
   228d4:	ldr	r0, [sp, #28]
   228d8:	str	r0, [r1, #4]
   228dc:	movw	r0, #1
   228e0:	str	r0, [fp, #-4]
   228e4:	b	22908 <__assert_fail@plt+0xfd50>
   228e8:	movw	r0, #36537	; 0x8eb9
   228ec:	movt	r0, #7
   228f0:	movw	r1, #42747	; 0xa6fb
   228f4:	movt	r1, #7
   228f8:	movw	r2, #498	; 0x1f2
   228fc:	movw	r3, #43121	; 0xa871
   22900:	movt	r3, #7
   22904:	bl	12bb8 <__assert_fail@plt>
   22908:	ldr	r0, [fp, #-4]
   2290c:	mov	sp, fp
   22910:	pop	{fp, pc}
   22914:	push	{fp, lr}
   22918:	mov	fp, sp
   2291c:	sub	sp, sp, #8
   22920:	ldr	r1, [pc, #52]	; 2295c <__assert_fail@plt+0xfda4>
   22924:	str	r0, [sp, #4]
   22928:	movw	r0, #136	; 0x88
   2292c:	movt	r0, #9
   22930:	ldr	r0, [r0, #28]
   22934:	ldr	r2, [sp, #4]
   22938:	sub	r0, r0, r2
   2293c:	sdiv	r0, r0, r1
   22940:	str	r0, [sp]
   22944:	ldr	r0, [sp]
   22948:	vmov	s0, r0
   2294c:	vcvt.f32.s32	s0, s0
   22950:	bl	22960 <__assert_fail@plt+0xfda8>
   22954:	mov	sp, fp
   22958:	pop	{fp, pc}
   2295c:	andeq	r5, r1, r0, lsl #3
   22960:	sub	sp, sp, #8
   22964:	vldr	s2, [pc, #112]	; 229dc <__assert_fail@plt+0xfe24>
   22968:	vstr	s0, [sp]
   2296c:	vldr	s0, [sp]
   22970:	vcmpe.f32	s0, s2
   22974:	vmrs	APSR_nzcv, fpscr
   22978:	bpl	22988 <__assert_fail@plt+0xfdd0>
   2297c:	vldr	s0, [pc, #104]	; 229ec <__assert_fail@plt+0xfe34>
   22980:	vstr	s0, [sp, #4]
   22984:	b	229d0 <__assert_fail@plt+0xfe18>
   22988:	vldr	s0, [sp]
   2298c:	vmov.f32	s2, #112	; 0x3f800000  1.0
   22990:	vcmpe.f32	s0, s2
   22994:	vmrs	APSR_nzcv, fpscr
   22998:	bpl	229a8 <__assert_fail@plt+0xfdf0>
   2299c:	vldr	s0, [pc, #68]	; 229e8 <__assert_fail@plt+0xfe30>
   229a0:	vstr	s0, [sp, #4]
   229a4:	b	229d0 <__assert_fail@plt+0xfe18>
   229a8:	vldr	s0, [pc, #48]	; 229e0 <__assert_fail@plt+0xfe28>
   229ac:	vldr	s2, [sp]
   229b0:	vcmpe.f32	s2, s0
   229b4:	vmrs	APSR_nzcv, fpscr
   229b8:	ble	229c8 <__assert_fail@plt+0xfe10>
   229bc:	vldr	s0, [pc, #36]	; 229e8 <__assert_fail@plt+0xfe30>
   229c0:	vstr	s0, [sp, #4]
   229c4:	b	229d0 <__assert_fail@plt+0xfe18>
   229c8:	vldr	s0, [pc, #20]	; 229e4 <__assert_fail@plt+0xfe2c>
   229cc:	vstr	s0, [sp, #4]
   229d0:	vldr	s0, [sp, #4]
   229d4:	add	sp, sp, #8
   229d8:	bx	lr
   229dc:	stclcc	12, cr12, [ip, #820]	; 0x334
   229e0:	sbcmi	r0, r8, #0
   229e4:	mcrcc	14, 6, sl, cr7, cr4, {0}
   229e8:			; <UNDEFINED> instruction: 0x3e99999a
   229ec:	stccc	7, cr13, [r3], #-40	; 0xffffffd8
   229f0:	push	{fp, lr}
   229f4:	mov	fp, sp
   229f8:	sub	sp, sp, #16
   229fc:	str	r0, [fp, #-4]
   22a00:	str	r1, [sp, #8]
   22a04:	str	r2, [sp, #4]
   22a08:	ldr	r0, [fp, #-4]
   22a0c:	movw	r1, #0
   22a10:	bl	1a444 <__assert_fail@plt+0x788c>
   22a14:	str	r0, [sp]
   22a18:	ldr	r0, [sp]
   22a1c:	movw	r1, #23116	; 0x5a4c
   22a20:	movt	r1, #1
   22a24:	str	r1, [r0]
   22a28:	ldr	r0, [sp]
   22a2c:	movw	r1, #2
   22a30:	str	r1, [r0, #8]
   22a34:	ldr	r0, [sp]
   22a38:	movw	r1, #4
   22a3c:	str	r1, [r0, #12]
   22a40:	ldr	r0, [sp]
   22a44:	movw	r1, #0
   22a48:	strb	r1, [r0, #19]
   22a4c:	ldr	r0, [sp]
   22a50:	strb	r1, [r0, #18]
   22a54:	movw	r0, #1
   22a58:	and	r0, r0, #1
   22a5c:	mov	sp, fp
   22a60:	pop	{fp, pc}
   22a64:	push	{fp, lr}
   22a68:	mov	fp, sp
   22a6c:	sub	sp, sp, #16
   22a70:	str	r0, [fp, #-4]
   22a74:	str	r1, [sp, #8]
   22a78:	str	r2, [sp, #4]
   22a7c:	ldr	r0, [fp, #-4]
   22a80:	bl	1a260 <__assert_fail@plt+0x76a8>
   22a84:	str	r0, [sp]
   22a88:	ldr	r0, [sp]
   22a8c:	movw	r1, #19172	; 0x4ae4
   22a90:	movt	r1, #1
   22a94:	str	r1, [r0]
   22a98:	ldr	r0, [sp]
   22a9c:	movw	r1, #3
   22aa0:	str	r1, [r0, #8]
   22aa4:	ldr	r0, [sp]
   22aa8:	movw	r1, #1
   22aac:	str	r1, [r0, #12]
   22ab0:	ldr	r0, [sp]
   22ab4:	movw	r1, #0
   22ab8:	strb	r1, [r0, #19]
   22abc:	ldr	r0, [sp]
   22ac0:	strb	r1, [r0, #18]
   22ac4:	ldr	r0, [sp]
   22ac8:	vmov.f32	s0, #112	; 0x3f800000  1.0
   22acc:	vstr	s0, [r0, #28]
   22ad0:	movw	r0, #1
   22ad4:	and	r0, r0, #1
   22ad8:	mov	sp, fp
   22adc:	pop	{fp, pc}
   22ae0:	push	{fp, lr}
   22ae4:	mov	fp, sp
   22ae8:	sub	sp, sp, #16
   22aec:	str	r0, [fp, #-4]
   22af0:	str	r1, [sp, #8]
   22af4:	str	r2, [sp, #4]
   22af8:	ldr	r0, [fp, #-4]
   22afc:	bl	1a260 <__assert_fail@plt+0x76a8>
   22b00:	str	r0, [sp]
   22b04:	ldr	r0, [sp]
   22b08:	movw	r1, #18428	; 0x47fc
   22b0c:	movt	r1, #1
   22b10:	str	r1, [r0]
   22b14:	ldr	r0, [sp]
   22b18:	movw	r1, #3
   22b1c:	str	r1, [r0, #8]
   22b20:	ldr	r0, [sp]
   22b24:	str	r1, [r0, #12]
   22b28:	ldr	r0, [sp]
   22b2c:	movw	r1, #0
   22b30:	strb	r1, [r0, #19]
   22b34:	ldr	r0, [sp]
   22b38:	strb	r1, [r0, #18]
   22b3c:	movw	r0, #1
   22b40:	and	r0, r0, #1
   22b44:	mov	sp, fp
   22b48:	pop	{fp, pc}
   22b4c:	push	{fp, lr}
   22b50:	mov	fp, sp
   22b54:	sub	sp, sp, #16
   22b58:	str	r0, [fp, #-4]
   22b5c:	str	r1, [sp, #8]
   22b60:	str	r2, [sp, #4]
   22b64:	ldr	r0, [fp, #-4]
   22b68:	ldr	r1, [sp, #8]
   22b6c:	ldr	r2, [sp, #4]
   22b70:	movw	r3, #0
   22b74:	bl	25b58 <__assert_fail@plt+0x12fa0>
   22b78:	and	r0, r0, #1
   22b7c:	mov	sp, fp
   22b80:	pop	{fp, pc}
   22b84:	push	{fp, lr}
   22b88:	mov	fp, sp
   22b8c:	sub	sp, sp, #144	; 0x90
   22b90:	str	r0, [fp, #-8]
   22b94:	str	r1, [fp, #-12]
   22b98:	str	r2, [fp, #-16]
   22b9c:	add	r0, sp, #24
   22ba0:	bl	1bea8 <__assert_fail@plt+0x92f0>
   22ba4:	ldr	r0, [fp, #-12]
   22ba8:	ldr	r1, [fp, #-16]
   22bac:	add	r2, sp, #24
   22bb0:	add	r3, sp, #20
   22bb4:	bl	26048 <__assert_fail@plt+0x13490>
   22bb8:	tst	r0, #1
   22bbc:	beq	22c38 <__assert_fail@plt+0x10080>
   22bc0:	ldr	r0, [fp, #-8]
   22bc4:	ldr	r1, [sp, #20]
   22bc8:	bl	1ba74 <__assert_fail@plt+0x8ebc>
   22bcc:	str	r0, [sp, #16]
   22bd0:	ldr	r0, [sp, #16]
   22bd4:	movw	r1, #0
   22bd8:	str	r1, [r0, #40]	; 0x28
   22bdc:	ldr	r0, [sp, #16]
   22be0:	add	r1, sp, #8
   22be4:	add	lr, sp, #24
   22be8:	str	r0, [sp, #4]
   22bec:	mov	r0, r1
   22bf0:	mov	r1, lr
   22bf4:	bl	4b924 <__assert_fail@plt+0x38d6c>
   22bf8:	ldr	r0, [sp, #8]
   22bfc:	ldr	r1, [sp, #4]
   22c00:	str	r0, [r1, #48]	; 0x30
   22c04:	ldr	r0, [sp, #12]
   22c08:	str	r0, [r1, #52]	; 0x34
   22c0c:	ldr	r0, [sp, #16]
   22c10:	movw	lr, #0
   22c14:	str	lr, [r0, #44]	; 0x2c
   22c18:	ldr	r0, [sp, #104]	; 0x68
   22c1c:	bl	22914 <__assert_fail@plt+0xfd5c>
   22c20:	ldr	r0, [sp, #16]
   22c24:	vstr	s0, [r0, #28]
   22c28:	movw	r0, #1
   22c2c:	and	r0, r0, #1
   22c30:	strb	r0, [fp, #-1]
   22c34:	b	22c44 <__assert_fail@plt+0x1008c>
   22c38:	movw	r0, #0
   22c3c:	and	r0, r0, #1
   22c40:	strb	r0, [fp, #-1]
   22c44:	ldrb	r0, [fp, #-1]
   22c48:	and	r0, r0, #1
   22c4c:	mov	sp, fp
   22c50:	pop	{fp, pc}
   22c54:	nop	{0}
   22c58:	push	{fp, lr}
   22c5c:	mov	fp, sp
   22c60:	sub	sp, sp, #152	; 0x98
   22c64:	str	r0, [fp, #-8]
   22c68:	str	r1, [fp, #-12]
   22c6c:	str	r2, [fp, #-16]
   22c70:	movw	r0, #43707	; 0xaabb
   22c74:	movt	r0, #7
   22c78:	bl	12864 <gettext@plt>
   22c7c:	str	r0, [fp, #-52]	; 0xffffffcc
   22c80:	ldr	r0, [fp, #-16]
   22c84:	ldr	r0, [r0]
   22c88:	str	r0, [fp, #-64]	; 0xffffffc0
   22c8c:	ldr	r0, [fp, #-12]
   22c90:	ldr	r1, [fp, #-16]
   22c94:	sub	r2, fp, #44	; 0x2c
   22c98:	bl	25c80 <__assert_fail@plt+0x130c8>
   22c9c:	tst	r0, #1
   22ca0:	bne	22cb4 <__assert_fail@plt+0x100fc>
   22ca4:	movw	r0, #0
   22ca8:	and	r0, r0, #1
   22cac:	strb	r0, [fp, #-1]
   22cb0:	b	2303c <__assert_fail@plt+0x10484>
   22cb4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   22cb8:	str	r0, [fp, #-48]	; 0xffffffd0
   22cbc:	movw	r0, #136	; 0x88
   22cc0:	movt	r0, #9
   22cc4:	ldr	r1, [r0, #28]
   22cc8:	str	r1, [fp, #-60]	; 0xffffffc4
   22ccc:	ldr	r0, [r0, #32]
   22cd0:	str	r0, [fp, #-56]	; 0xffffffc8
   22cd4:	sub	r0, fp, #44	; 0x2c
   22cd8:	sub	r1, fp, #40	; 0x28
   22cdc:	bl	25fb0 <__assert_fail@plt+0x133f8>
   22ce0:	tst	r0, #1
   22ce4:	beq	22d70 <__assert_fail@plt+0x101b8>
   22ce8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   22cec:	movw	r1, #1
   22cf0:	cmp	r1, r0
   22cf4:	bne	22d6c <__assert_fail@plt+0x101b4>
   22cf8:	ldr	r0, [fp, #-60]	; 0xffffffc4
   22cfc:	movw	r1, #20863	; 0x517f
   22d00:	movt	r1, #1
   22d04:	add	r0, r0, r1
   22d08:	asr	r2, r0, #31
   22d0c:	str	r0, [fp, #-72]	; 0xffffffb8
   22d10:	str	r2, [fp, #-68]	; 0xffffffbc
   22d14:	ldr	r0, [fp, #-60]	; 0xffffffc4
   22d18:	add	r0, r0, r1
   22d1c:	str	r0, [fp, #-60]	; 0xffffffc4
   22d20:	ldr	r0, [fp, #-72]	; 0xffffffb8
   22d24:	ldr	r1, [fp, #-68]	; 0xffffffbc
   22d28:	ldr	r2, [fp, #-60]	; 0xffffffc4
   22d2c:	eor	r1, r1, r2, asr #31
   22d30:	eor	r0, r0, r2
   22d34:	orr	r0, r0, r1
   22d38:	cmp	r0, #0
   22d3c:	beq	22d68 <__assert_fail@plt+0x101b0>
   22d40:	b	22d44 <__assert_fail@plt+0x1018c>
   22d44:	movw	r0, #43775	; 0xaaff
   22d48:	movt	r0, #7
   22d4c:	bl	12864 <gettext@plt>
   22d50:	movw	lr, #1
   22d54:	str	r0, [sp, #72]	; 0x48
   22d58:	mov	r0, lr
   22d5c:	movw	r1, #0
   22d60:	ldr	r2, [sp, #72]	; 0x48
   22d64:	bl	12780 <error@plt>
   22d68:	b	22d6c <__assert_fail@plt+0x101b4>
   22d6c:	b	22d70 <__assert_fail@plt+0x101b8>
   22d70:	ldr	r0, [fp, #-48]	; 0xffffffd0
   22d74:	str	r0, [fp, #-44]	; 0xffffffd4
   22d78:	ldr	r0, [fp, #-44]	; 0xffffffd4
   22d7c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   22d80:	ldr	r2, [fp, #-60]	; 0xffffffc4
   22d84:	ldr	r3, [fp, #-56]	; 0xffffffc8
   22d88:	mov	ip, sp
   22d8c:	str	r1, [ip]
   22d90:	sub	r1, fp, #36	; 0x24
   22d94:	vldr	d0, [pc, #692]	; 23050 <__assert_fail@plt+0x10498>
   22d98:	bl	25cd0 <__assert_fail@plt+0x13118>
   22d9c:	tst	r0, #1
   22da0:	bne	22dc0 <__assert_fail@plt+0x10208>
   22da4:	ldr	r0, [fp, #-64]	; 0xffffffc0
   22da8:	ldr	r1, [fp, #-16]
   22dac:	str	r0, [r1]
   22db0:	movw	r0, #0
   22db4:	and	r0, r0, #1
   22db8:	strb	r0, [fp, #-1]
   22dbc:	b	2303c <__assert_fail@plt+0x10484>
   22dc0:	ldr	r0, [fp, #-8]
   22dc4:	ldr	r1, [fp, #-48]	; 0xffffffd0
   22dc8:	bl	1ba74 <__assert_fail@plt+0x8ebc>
   22dcc:	str	r0, [fp, #-20]	; 0xffffffec
   22dd0:	ldr	r0, [fp, #-20]	; 0xffffffec
   22dd4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   22dd8:	str	r1, [r0, #40]	; 0x28
   22ddc:	ldr	r1, [fp, #-32]	; 0xffffffe0
   22de0:	str	r1, [r0, #44]	; 0x2c
   22de4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   22de8:	str	r1, [r0, #48]	; 0x30
   22dec:	ldr	r1, [fp, #-24]	; 0xffffffe8
   22df0:	str	r1, [r0, #52]	; 0x34
   22df4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   22df8:	bl	22914 <__assert_fail@plt+0xfd5c>
   22dfc:	ldr	r0, [fp, #-20]	; 0xffffffec
   22e00:	vstr	s0, [r0, #28]
   22e04:	movw	r0, #136	; 0x88
   22e08:	movt	r0, #9
   22e0c:	ldr	r0, [r0, #44]	; 0x2c
   22e10:	and	r0, r0, #1
   22e14:	cmp	r0, #0
   22e18:	beq	23030 <__assert_fail@plt+0x10478>
   22e1c:	movw	r0, #63272	; 0xf728
   22e20:	movt	r0, #8
   22e24:	ldr	r0, [r0]
   22e28:	ldr	r1, [fp, #-20]	; 0xffffffec
   22e2c:	ldr	r2, [r1, #4]
   22e30:	movw	r1, #43837	; 0xab3d
   22e34:	movt	r1, #7
   22e38:	bl	128c4 <fprintf@plt>
   22e3c:	movw	r1, #63272	; 0xf728
   22e40:	movt	r1, #8
   22e44:	ldr	r1, [r1]
   22e48:	ldr	r2, [fp, #-32]	; 0xffffffe0
   22e4c:	cmp	r2, #0
   22e50:	str	r0, [sp, #68]	; 0x44
   22e54:	str	r1, [sp, #64]	; 0x40
   22e58:	bne	22e6c <__assert_fail@plt+0x102b4>
   22e5c:	movw	r0, #43872	; 0xab60
   22e60:	movt	r0, #7
   22e64:	str	r0, [sp, #60]	; 0x3c
   22e68:	b	22ebc <__assert_fail@plt+0x10304>
   22e6c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   22e70:	cmp	r0, #1
   22e74:	bne	22e88 <__assert_fail@plt+0x102d0>
   22e78:	movw	r0, #54948	; 0xd6a4
   22e7c:	movt	r0, #7
   22e80:	str	r0, [sp, #56]	; 0x38
   22e84:	b	22eb4 <__assert_fail@plt+0x102fc>
   22e88:	ldr	r0, [fp, #-32]	; 0xffffffe0
   22e8c:	cmp	r0, #2
   22e90:	movw	r0, #0
   22e94:	moveq	r0, #1
   22e98:	tst	r0, #1
   22e9c:	movw	r0, #43888	; 0xab70
   22ea0:	movt	r0, #7
   22ea4:	movw	r1, #43875	; 0xab63
   22ea8:	movt	r1, #7
   22eac:	movne	r0, r1
   22eb0:	str	r0, [sp, #56]	; 0x38
   22eb4:	ldr	r0, [sp, #56]	; 0x38
   22eb8:	str	r0, [sp, #60]	; 0x3c
   22ebc:	ldr	r0, [sp, #60]	; 0x3c
   22ec0:	ldr	r1, [fp, #-32]	; 0xffffffe0
   22ec4:	cmp	r1, #0
   22ec8:	str	r0, [sp, #52]	; 0x34
   22ecc:	bne	22ee0 <__assert_fail@plt+0x10328>
   22ed0:	movw	r0, #43878	; 0xab66
   22ed4:	movt	r0, #7
   22ed8:	str	r0, [sp, #48]	; 0x30
   22edc:	b	22f30 <__assert_fail@plt+0x10378>
   22ee0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   22ee4:	cmp	r0, #1
   22ee8:	bne	22efc <__assert_fail@plt+0x10344>
   22eec:	movw	r0, #43881	; 0xab69
   22ef0:	movt	r0, #7
   22ef4:	str	r0, [sp, #44]	; 0x2c
   22ef8:	b	22f28 <__assert_fail@plt+0x10370>
   22efc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   22f00:	cmp	r0, #2
   22f04:	movw	r0, #0
   22f08:	moveq	r0, #1
   22f0c:	tst	r0, #1
   22f10:	movw	r0, #43887	; 0xab6f
   22f14:	movt	r0, #7
   22f18:	movw	r1, #43884	; 0xab6c
   22f1c:	movt	r1, #7
   22f20:	movne	r0, r1
   22f24:	str	r0, [sp, #44]	; 0x2c
   22f28:	ldr	r0, [sp, #44]	; 0x2c
   22f2c:	str	r0, [sp, #48]	; 0x30
   22f30:	ldr	r0, [sp, #48]	; 0x30
   22f34:	movw	r1, #43851	; 0xab4b
   22f38:	movt	r1, #7
   22f3c:	ldr	r2, [sp, #64]	; 0x40
   22f40:	str	r0, [sp, #40]	; 0x28
   22f44:	mov	r0, r2
   22f48:	ldr	r2, [sp, #52]	; 0x34
   22f4c:	ldr	r3, [sp, #40]	; 0x28
   22f50:	bl	128c4 <fprintf@plt>
   22f54:	ldr	r1, [fp, #-20]	; 0xffffffec
   22f58:	ldr	r1, [r1, #48]	; 0x30
   22f5c:	str	r1, [sp, #76]	; 0x4c
   22f60:	movw	r1, #63272	; 0xf728
   22f64:	movt	r1, #8
   22f68:	ldr	r1, [r1]
   22f6c:	ldr	r2, [fp, #-20]	; 0xffffffec
   22f70:	ldr	r2, [r2, #48]	; 0x30
   22f74:	asr	r3, r2, #31
   22f78:	add	lr, sp, #76	; 0x4c
   22f7c:	str	r0, [sp, #36]	; 0x24
   22f80:	mov	r0, lr
   22f84:	str	r2, [sp, #32]
   22f88:	str	r1, [sp, #28]
   22f8c:	str	r3, [sp, #24]
   22f90:	bl	1263c <ctime@plt>
   22f94:	mov	r1, sp
   22f98:	str	r0, [r1]
   22f9c:	movw	r1, #43910	; 0xab86
   22fa0:	movt	r1, #7
   22fa4:	ldr	r0, [sp, #28]
   22fa8:	ldr	r2, [sp, #32]
   22fac:	ldr	r3, [sp, #24]
   22fb0:	bl	128c4 <fprintf@plt>
   22fb4:	ldr	r1, [fp, #-32]	; 0xffffffe0
   22fb8:	cmp	r1, #2
   22fbc:	str	r0, [sp, #20]
   22fc0:	bne	2302c <__assert_fail@plt+0x10474>
   22fc4:	ldr	r0, [fp, #-20]	; 0xffffffec
   22fc8:	ldr	r0, [r0, #48]	; 0x30
   22fcc:	movw	r1, #20864	; 0x5180
   22fd0:	movt	r1, #1
   22fd4:	add	r0, r0, r1
   22fd8:	str	r0, [sp, #76]	; 0x4c
   22fdc:	movw	r0, #63272	; 0xf728
   22fe0:	movt	r0, #8
   22fe4:	ldr	r0, [r0]
   22fe8:	ldr	r1, [sp, #76]	; 0x4c
   22fec:	asr	r3, r1, #31
   22ff0:	add	r2, sp, #76	; 0x4c
   22ff4:	str	r0, [sp, #16]
   22ff8:	mov	r0, r2
   22ffc:	str	r1, [sp, #12]
   23000:	str	r3, [sp, #8]
   23004:	bl	1263c <ctime@plt>
   23008:	mov	r1, sp
   2300c:	str	r0, [r1]
   23010:	movw	r1, #43890	; 0xab72
   23014:	movt	r1, #7
   23018:	ldr	r0, [sp, #16]
   2301c:	ldr	r2, [sp, #12]
   23020:	ldr	r3, [sp, #8]
   23024:	bl	128c4 <fprintf@plt>
   23028:	str	r0, [sp, #4]
   2302c:	b	23030 <__assert_fail@plt+0x10478>
   23030:	movw	r0, #1
   23034:	and	r0, r0, #1
   23038:	strb	r0, [fp, #-1]
   2303c:	ldrb	r0, [fp, #-1]
   23040:	and	r0, r0, #1
   23044:	mov	sp, fp
   23048:	pop	{fp, pc}
   2304c:	nop	{0}
   23050:	andeq	r0, r0, r0
   23054:	rscsmi	r1, r5, r0, lsl #16
   23058:	push	{fp, lr}
   2305c:	mov	fp, sp
   23060:	sub	sp, sp, #16
   23064:	str	r0, [fp, #-4]
   23068:	str	r1, [sp, #8]
   2306c:	str	r2, [sp, #4]
   23070:	ldr	r0, [fp, #-4]
   23074:	ldr	r1, [sp, #8]
   23078:	ldr	r2, [sp, #4]
   2307c:	movw	r3, #2
   23080:	bl	25b58 <__assert_fail@plt+0x12fa0>
   23084:	and	r0, r0, #1
   23088:	mov	sp, fp
   2308c:	pop	{fp, pc}
   23090:	push	{fp, lr}
   23094:	mov	fp, sp
   23098:	sub	sp, sp, #144	; 0x90
   2309c:	str	r0, [fp, #-8]
   230a0:	str	r1, [fp, #-12]
   230a4:	str	r2, [fp, #-16]
   230a8:	add	r0, sp, #24
   230ac:	bl	1bea8 <__assert_fail@plt+0x92f0>
   230b0:	ldr	r0, [fp, #-12]
   230b4:	ldr	r1, [fp, #-16]
   230b8:	add	r2, sp, #24
   230bc:	add	r3, sp, #20
   230c0:	bl	26048 <__assert_fail@plt+0x13490>
   230c4:	tst	r0, #1
   230c8:	beq	23144 <__assert_fail@plt+0x1058c>
   230cc:	ldr	r0, [fp, #-8]
   230d0:	ldr	r1, [sp, #20]
   230d4:	bl	1ba74 <__assert_fail@plt+0x8ebc>
   230d8:	str	r0, [sp, #16]
   230dc:	ldr	r0, [sp, #16]
   230e0:	movw	r1, #2
   230e4:	str	r1, [r0, #40]	; 0x28
   230e8:	ldr	r0, [sp, #16]
   230ec:	add	r1, sp, #8
   230f0:	add	lr, sp, #24
   230f4:	str	r0, [sp, #4]
   230f8:	mov	r0, r1
   230fc:	mov	r1, lr
   23100:	bl	4b924 <__assert_fail@plt+0x38d6c>
   23104:	ldr	r0, [sp, #8]
   23108:	ldr	r1, [sp, #4]
   2310c:	str	r0, [r1, #48]	; 0x30
   23110:	ldr	r0, [sp, #12]
   23114:	str	r0, [r1, #52]	; 0x34
   23118:	ldr	r0, [sp, #16]
   2311c:	movw	lr, #0
   23120:	str	lr, [r0, #44]	; 0x2c
   23124:	ldr	r0, [sp, #104]	; 0x68
   23128:	bl	22914 <__assert_fail@plt+0xfd5c>
   2312c:	ldr	r0, [sp, #16]
   23130:	vstr	s0, [r0, #28]
   23134:	movw	r0, #1
   23138:	and	r0, r0, #1
   2313c:	strb	r0, [fp, #-1]
   23140:	b	23150 <__assert_fail@plt+0x10598>
   23144:	movw	r0, #0
   23148:	and	r0, r0, #1
   2314c:	strb	r0, [fp, #-1]
   23150:	ldrb	r0, [fp, #-1]
   23154:	and	r0, r0, #1
   23158:	mov	sp, fp
   2315c:	pop	{fp, pc}
   23160:	push	{fp, lr}
   23164:	mov	fp, sp
   23168:	sub	sp, sp, #32
   2316c:	str	r0, [fp, #-8]
   23170:	str	r1, [fp, #-12]
   23174:	str	r2, [sp, #16]
   23178:	ldr	r0, [fp, #-12]
   2317c:	movw	r1, #0
   23180:	cmp	r0, r1
   23184:	beq	231a8 <__assert_fail@plt+0x105f0>
   23188:	ldr	r0, [fp, #-12]
   2318c:	ldr	r1, [sp, #16]
   23190:	ldr	r1, [r1]
   23194:	add	r0, r0, r1, lsl #2
   23198:	ldr	r0, [r0]
   2319c:	movw	r1, #0
   231a0:	cmp	r0, r1
   231a4:	bne	231b8 <__assert_fail@plt+0x10600>
   231a8:	movw	r0, #0
   231ac:	and	r0, r0, #1
   231b0:	strb	r0, [fp, #-1]
   231b4:	b	23250 <__assert_fail@plt+0x10698>
   231b8:	bl	124b0 <is_selinux_enabled@plt>
   231bc:	cmp	r0, #0
   231c0:	bgt	231e8 <__assert_fail@plt+0x10630>
   231c4:	movw	r0, #43918	; 0xab8e
   231c8:	movt	r0, #7
   231cc:	bl	12864 <gettext@plt>
   231d0:	movw	lr, #1
   231d4:	str	r0, [sp, #8]
   231d8:	mov	r0, lr
   231dc:	movw	r1, #0
   231e0:	ldr	r2, [sp, #8]
   231e4:	bl	12780 <error@plt>
   231e8:	ldr	r0, [fp, #-8]
   231ec:	mov	r1, #0
   231f0:	str	r1, [sp, #4]
   231f4:	bl	1ba74 <__assert_fail@plt+0x8ebc>
   231f8:	str	r0, [sp, #12]
   231fc:	ldr	r0, [sp, #12]
   23200:	movw	r1, #55050	; 0xd70a
   23204:	movt	r1, #15395	; 0x3c23
   23208:	str	r1, [r0, #28]
   2320c:	ldr	r0, [sp, #12]
   23210:	ldr	r1, [sp, #4]
   23214:	strb	r1, [r0, #18]
   23218:	ldr	r0, [fp, #-12]
   2321c:	ldr	lr, [sp, #16]
   23220:	ldr	lr, [lr]
   23224:	add	r0, r0, lr, lsl #2
   23228:	ldr	r0, [r0]
   2322c:	ldr	lr, [sp, #12]
   23230:	str	r0, [lr, #40]	; 0x28
   23234:	ldr	r0, [sp, #16]
   23238:	ldr	lr, [r0]
   2323c:	add	lr, lr, #1
   23240:	str	lr, [r0]
   23244:	movw	r0, #1
   23248:	and	r0, r0, #1
   2324c:	strb	r0, [fp, #-1]
   23250:	ldrb	r0, [fp, #-1]
   23254:	and	r0, r0, #1
   23258:	mov	sp, fp
   2325c:	pop	{fp, pc}
   23260:	push	{fp, lr}
   23264:	mov	fp, sp
   23268:	sub	sp, sp, #24
   2326c:	str	r0, [fp, #-4]
   23270:	str	r1, [fp, #-8]
   23274:	str	r2, [sp, #12]
   23278:	movw	r0, #136	; 0x88
   2327c:	movt	r0, #9
   23280:	ldrb	r0, [r0, #36]	; 0x24
   23284:	and	r0, r0, #1
   23288:	cmp	r0, #0
   2328c:	bne	23360 <__assert_fail@plt+0x107a8>
   23290:	movw	r0, #136	; 0x88
   23294:	movt	r0, #9
   23298:	add	r1, r0, #28
   2329c:	ldr	r2, [pc, #204]	; 23370 <__assert_fail@plt+0x107b8>
   232a0:	ldr	r3, [r0, #28]
   232a4:	add	r2, r3, r2
   232a8:	str	r2, [r0, #28]
   232ac:	movw	r2, #0
   232b0:	str	r2, [r0, #32]
   232b4:	mov	r0, r1
   232b8:	bl	12810 <localtime@plt>
   232bc:	str	r0, [sp, #8]
   232c0:	ldr	r0, [sp, #8]
   232c4:	movw	r1, #0
   232c8:	cmp	r0, r1
   232cc:	beq	23308 <__assert_fail@plt+0x10750>
   232d0:	ldr	r0, [sp, #8]
   232d4:	ldr	r0, [r0]
   232d8:	ldr	r1, [sp, #8]
   232dc:	ldr	r1, [r1, #4]
   232e0:	movw	r2, #60	; 0x3c
   232e4:	mul	r1, r1, r2
   232e8:	add	r0, r0, r1
   232ec:	ldr	r1, [sp, #8]
   232f0:	ldr	r1, [r1, #8]
   232f4:	movw	r2, #3600	; 0xe10
   232f8:	mul	r1, r1, r2
   232fc:	add	r0, r0, r1
   23300:	str	r0, [sp, #4]
   23304:	b	23340 <__assert_fail@plt+0x10788>
   23308:	ldr	r0, [pc, #96]	; 23370 <__assert_fail@plt+0x107b8>
   2330c:	movw	r1, #136	; 0x88
   23310:	movt	r1, #9
   23314:	ldr	r1, [r1, #28]
   23318:	movw	r2, #17671	; 0x4507
   2331c:	movt	r2, #49710	; 0xc22e
   23320:	smmla	r2, r1, r2, r1
   23324:	asr	r3, r2, #16
   23328:	add	r2, r3, r2, lsr #31
   2332c:	movw	r3, #675	; 0x2a3
   23330:	mul	r2, r2, r3
   23334:	sub	r1, r1, r2, lsl #7
   23338:	str	r0, [sp]
   2333c:	str	r1, [sp, #4]
   23340:	ldr	r0, [sp, #4]
   23344:	movw	r1, #136	; 0x88
   23348:	movt	r1, #9
   2334c:	ldr	r2, [r1, #28]
   23350:	sub	r0, r2, r0
   23354:	str	r0, [r1, #28]
   23358:	movw	r0, #1
   2335c:	strb	r0, [r1, #36]	; 0x24
   23360:	movw	r0, #1
   23364:	and	r0, r0, #1
   23368:	mov	sp, fp
   2336c:	pop	{fp, pc}
   23370:	andeq	r5, r1, r0, lsl #3
   23374:	push	{fp, lr}
   23378:	mov	fp, sp
   2337c:	sub	sp, sp, #16
   23380:	str	r0, [fp, #-4]
   23384:	str	r1, [sp, #8]
   23388:	str	r2, [sp, #4]
   2338c:	ldr	r0, [fp, #-4]
   23390:	bl	1badc <__assert_fail@plt+0x8f24>
   23394:	str	r0, [sp]
   23398:	ldr	r0, [sp]
   2339c:	movw	r1, #1
   233a0:	strb	r1, [r0, #17]
   233a4:	ldr	r0, [sp]
   233a8:	strb	r1, [r0, #16]
   233ac:	movw	r0, #136	; 0x88
   233b0:	movt	r0, #9
   233b4:	movw	r1, #0
   233b8:	strb	r1, [r0]
   233bc:	ldr	r0, [sp]
   233c0:	strb	r1, [r0, #19]
   233c4:	ldr	r0, [sp]
   233c8:	strb	r1, [r0, #18]
   233cc:	ldr	r0, [sp]
   233d0:	vmov.f32	s0, #112	; 0x3f800000  1.0
   233d4:	vstr	s0, [r0, #28]
   233d8:	movw	r0, #1
   233dc:	and	r0, r0, #1
   233e0:	mov	sp, fp
   233e4:	pop	{fp, pc}
   233e8:	push	{fp, lr}
   233ec:	mov	fp, sp
   233f0:	sub	sp, sp, #16
   233f4:	str	r0, [fp, #-4]
   233f8:	str	r1, [sp, #8]
   233fc:	str	r2, [sp, #4]
   23400:	bl	2217c <__assert_fail@plt+0xf5c4>
   23404:	tst	r0, #1
   23408:	beq	23430 <__assert_fail@plt+0x10878>
   2340c:	movw	r0, #43970	; 0xabc2
   23410:	movt	r0, #7
   23414:	bl	12864 <gettext@plt>
   23418:	movw	lr, #0
   2341c:	str	r0, [sp]
   23420:	mov	r0, lr
   23424:	mov	r1, lr
   23428:	ldr	r2, [sp]
   2342c:	bl	12780 <error@plt>
   23430:	ldr	r0, [fp, #-4]
   23434:	ldr	r1, [sp, #8]
   23438:	ldr	r2, [sp, #4]
   2343c:	bl	2344c <__assert_fail@plt+0x10894>
   23440:	and	r0, r0, #1
   23444:	mov	sp, fp
   23448:	pop	{fp, pc}
   2344c:	push	{fp, lr}
   23450:	mov	fp, sp
   23454:	sub	sp, sp, #16
   23458:	str	r0, [fp, #-4]
   2345c:	str	r1, [sp, #8]
   23460:	str	r2, [sp, #4]
   23464:	movw	r0, #0
   23468:	movw	r1, #136	; 0x88
   2346c:	movt	r1, #9
   23470:	strb	r0, [r1]
   23474:	movw	r0, #1
   23478:	strb	r0, [r1, #1]
   2347c:	ldr	r0, [fp, #-4]
   23480:	ldr	r1, [sp, #8]
   23484:	ldr	r2, [sp, #4]
   23488:	bl	26104 <__assert_fail@plt+0x1354c>
   2348c:	and	r0, r0, #1
   23490:	mov	sp, fp
   23494:	pop	{fp, pc}
   23498:	push	{fp, lr}
   2349c:	mov	fp, sp
   234a0:	sub	sp, sp, #16
   234a4:	str	r0, [fp, #-4]
   234a8:	str	r1, [sp, #8]
   234ac:	str	r2, [sp, #4]
   234b0:	ldr	r0, [fp, #-4]
   234b4:	bl	1badc <__assert_fail@plt+0x8f24>
   234b8:	vldr	s0, [pc, #24]	; 234d8 <__assert_fail@plt+0x10920>
   234bc:	str	r0, [sp]
   234c0:	ldr	r0, [sp]
   234c4:	vstr	s0, [r0, #28]
   234c8:	movw	r0, #1
   234cc:	and	r0, r0, #1
   234d0:	mov	sp, fp
   234d4:	pop	{fp, pc}
   234d8:	stccc	7, cr13, [r3], #-40	; 0xffffffd8
   234dc:	push	{fp, lr}
   234e0:	mov	fp, sp
   234e4:	sub	sp, sp, #16
   234e8:	str	r0, [fp, #-4]
   234ec:	str	r1, [sp, #8]
   234f0:	str	r2, [sp, #4]
   234f4:	ldr	r1, [fp, #-4]
   234f8:	ldr	r2, [sp, #8]
   234fc:	ldr	r3, [sp, #4]
   23500:	movw	r0, #44084	; 0xac34
   23504:	movt	r0, #7
   23508:	bl	261e8 <__assert_fail@plt+0x13630>
   2350c:	and	r0, r0, #1
   23510:	mov	sp, fp
   23514:	pop	{fp, pc}
   23518:	push	{fp, lr}
   2351c:	mov	fp, sp
   23520:	sub	sp, sp, #16
   23524:	str	r0, [fp, #-4]
   23528:	str	r1, [sp, #8]
   2352c:	str	r2, [sp, #4]
   23530:	ldr	r0, [fp, #-4]
   23534:	bl	1badc <__assert_fail@plt+0x8f24>
   23538:	str	r0, [sp]
   2353c:	ldr	r0, [sp]
   23540:	movw	r1, #0
   23544:	strb	r1, [r0, #19]
   23548:	ldr	r0, [sp]
   2354c:	strb	r1, [r0, #18]
   23550:	ldr	r0, [sp]
   23554:	strb	r1, [r0, #17]
   23558:	ldr	r0, [sp]
   2355c:	strb	r1, [r0, #16]
   23560:	ldr	r0, [sp]
   23564:	ldr	r0, [r0]
   23568:	movw	r1, #25008	; 0x61b0
   2356c:	movt	r1, #1
   23570:	cmp	r0, r1
   23574:	bne	23588 <__assert_fail@plt+0x109d0>
   23578:	vldr	s0, [pc, #40]	; 235a8 <__assert_fail@plt+0x109f0>
   2357c:	ldr	r0, [sp]
   23580:	vstr	s0, [r0, #28]
   23584:	b	23594 <__assert_fail@plt+0x109dc>
   23588:	vldr	s0, [pc, #20]	; 235a4 <__assert_fail@plt+0x109ec>
   2358c:	ldr	r0, [sp]
   23590:	vstr	s0, [r0, #28]
   23594:	movw	r0, #1
   23598:	and	r0, r0, #1
   2359c:	mov	sp, fp
   235a0:	pop	{fp, pc}
   235a4:	svccc	0x00666666
   235a8:	cdpcc	12, 4, cr12, cr12, cr13, {6}
   235ac:	push	{fp, lr}
   235b0:	mov	fp, sp
   235b4:	sub	sp, sp, #16
   235b8:	str	r0, [fp, #-4]
   235bc:	str	r1, [sp, #8]
   235c0:	str	r2, [sp, #4]
   235c4:	ldr	r1, [fp, #-4]
   235c8:	ldr	r2, [sp, #8]
   235cc:	ldr	r3, [sp, #4]
   235d0:	movw	r0, #44938	; 0xaf8a
   235d4:	movt	r0, #7
   235d8:	bl	261e8 <__assert_fail@plt+0x13630>
   235dc:	and	r0, r0, #1
   235e0:	mov	sp, fp
   235e4:	pop	{fp, pc}
   235e8:	push	{fp, lr}
   235ec:	mov	fp, sp
   235f0:	sub	sp, sp, #24
   235f4:	str	r0, [fp, #-8]
   235f8:	str	r1, [sp, #12]
   235fc:	str	r2, [sp, #8]
   23600:	ldr	r0, [sp, #12]
   23604:	ldr	r1, [sp, #8]
   23608:	add	r2, sp, #4
   2360c:	bl	25c80 <__assert_fail@plt+0x130c8>
   23610:	tst	r0, #1
   23614:	beq	23638 <__assert_fail@plt+0x10a80>
   23618:	ldr	r0, [sp, #4]
   2361c:	movw	r1, #136	; 0x88
   23620:	movt	r1, #9
   23624:	str	r0, [r1, #76]	; 0x4c
   23628:	movw	r0, #1
   2362c:	and	r0, r0, #1
   23630:	strb	r0, [fp, #-1]
   23634:	b	23644 <__assert_fail@plt+0x10a8c>
   23638:	movw	r0, #0
   2363c:	and	r0, r0, #1
   23640:	strb	r0, [fp, #-1]
   23644:	ldrb	r0, [fp, #-1]
   23648:	and	r0, r0, #1
   2364c:	mov	sp, fp
   23650:	pop	{fp, pc}
   23654:	push	{fp, lr}
   23658:	mov	fp, sp
   2365c:	sub	sp, sp, #24
   23660:	str	r0, [fp, #-8]
   23664:	str	r1, [sp, #12]
   23668:	str	r2, [sp, #8]
   2366c:	ldr	r0, [sp, #12]
   23670:	ldr	r1, [sp, #8]
   23674:	add	r2, sp, #4
   23678:	bl	25c80 <__assert_fail@plt+0x130c8>
   2367c:	tst	r0, #1
   23680:	beq	236c0 <__assert_fail@plt+0x10b08>
   23684:	ldr	r0, [fp, #-8]
   23688:	ldr	r1, [sp, #4]
   2368c:	bl	26b98 <__assert_fail@plt+0x13fe0>
   23690:	tst	r0, #1
   23694:	beq	236a8 <__assert_fail@plt+0x10af0>
   23698:	movw	r0, #1
   2369c:	and	r0, r0, #1
   236a0:	strb	r0, [fp, #-1]
   236a4:	b	236cc <__assert_fail@plt+0x10b14>
   236a8:	ldr	r0, [sp, #8]
   236ac:	ldr	r1, [r0]
   236b0:	mvn	r2, #0
   236b4:	add	r1, r1, r2
   236b8:	str	r1, [r0]
   236bc:	b	236c0 <__assert_fail@plt+0x10b08>
   236c0:	movw	r0, #0
   236c4:	and	r0, r0, #1
   236c8:	strb	r0, [fp, #-1]
   236cc:	ldrb	r0, [fp, #-1]
   236d0:	and	r0, r0, #1
   236d4:	mov	sp, fp
   236d8:	pop	{fp, pc}
   236dc:	push	{fp, lr}
   236e0:	mov	fp, sp
   236e4:	sub	sp, sp, #16
   236e8:	str	r0, [fp, #-4]
   236ec:	str	r1, [sp, #8]
   236f0:	str	r2, [sp, #4]
   236f4:	movw	r0, #1
   236f8:	bl	21a84 <__assert_fail@plt+0xeecc>
   236fc:	ldr	r0, [fp, #-4]
   23700:	ldr	r1, [sp, #8]
   23704:	ldr	r2, [sp, #4]
   23708:	bl	26104 <__assert_fail@plt+0x1354c>
   2370c:	and	r0, r0, #1
   23710:	mov	sp, fp
   23714:	pop	{fp, pc}
   23718:	push	{fp, lr}
   2371c:	mov	fp, sp
   23720:	sub	sp, sp, #24
   23724:	str	r0, [fp, #-8]
   23728:	str	r1, [sp, #12]
   2372c:	str	r2, [sp, #8]
   23730:	ldr	r0, [sp, #12]
   23734:	ldr	r1, [sp, #8]
   23738:	mov	r2, sp
   2373c:	bl	25c80 <__assert_fail@plt+0x130c8>
   23740:	tst	r0, #1
   23744:	beq	237ac <__assert_fail@plt+0x10bf4>
   23748:	ldr	r0, [fp, #-8]
   2374c:	ldr	r1, [sp]
   23750:	bl	1ba74 <__assert_fail@plt+0x8ebc>
   23754:	str	r0, [sp, #4]
   23758:	ldr	r0, [sp]
   2375c:	ldr	r1, [sp, #4]
   23760:	add	r1, r1, #40	; 0x28
   23764:	bl	26c18 <__assert_fail@plt+0x14060>
   23768:	ldr	r0, [sp, #4]
   2376c:	movw	r1, #1
   23770:	strb	r1, [r0, #17]
   23774:	ldr	r0, [sp, #4]
   23778:	strb	r1, [r0, #16]
   2377c:	ldr	r0, [sp, #4]
   23780:	movw	r1, #0
   23784:	strb	r1, [r0, #19]
   23788:	ldr	r0, [sp, #4]
   2378c:	strb	r1, [r0, #18]
   23790:	ldr	r0, [sp, #4]
   23794:	vmov.f32	s0, #112	; 0x3f800000  1.0
   23798:	vstr	s0, [r0, #28]
   2379c:	movw	r0, #1
   237a0:	and	r0, r0, #1
   237a4:	strb	r0, [fp, #-1]
   237a8:	b	237b8 <__assert_fail@plt+0x10c00>
   237ac:	movw	r0, #0
   237b0:	and	r0, r0, #1
   237b4:	strb	r0, [fp, #-1]
   237b8:	ldrb	r0, [fp, #-1]
   237bc:	and	r0, r0, #1
   237c0:	mov	sp, fp
   237c4:	pop	{fp, pc}
   237c8:	push	{fp, lr}
   237cc:	mov	fp, sp
   237d0:	sub	sp, sp, #24
   237d4:	str	r0, [fp, #-8]
   237d8:	str	r1, [sp, #12]
   237dc:	str	r2, [sp, #8]
   237e0:	ldr	r0, [sp, #12]
   237e4:	ldr	r1, [sp, #8]
   237e8:	add	r2, sp, #4
   237ec:	bl	25c80 <__assert_fail@plt+0x130c8>
   237f0:	tst	r0, #1
   237f4:	beq	23834 <__assert_fail@plt+0x10c7c>
   237f8:	ldr	r0, [fp, #-8]
   237fc:	ldr	r1, [sp, #4]
   23800:	bl	26dc4 <__assert_fail@plt+0x1420c>
   23804:	tst	r0, #1
   23808:	beq	2381c <__assert_fail@plt+0x10c64>
   2380c:	movw	r0, #1
   23810:	and	r0, r0, #1
   23814:	strb	r0, [fp, #-1]
   23818:	b	23840 <__assert_fail@plt+0x10c88>
   2381c:	ldr	r0, [sp, #8]
   23820:	ldr	r1, [r0]
   23824:	mvn	r2, #0
   23828:	add	r1, r1, r2
   2382c:	str	r1, [r0]
   23830:	b	23834 <__assert_fail@plt+0x10c7c>
   23834:	movw	r0, #0
   23838:	and	r0, r0, #1
   2383c:	strb	r0, [fp, #-1]
   23840:	ldrb	r0, [fp, #-1]
   23844:	and	r0, r0, #1
   23848:	mov	sp, fp
   2384c:	pop	{fp, pc}
   23850:	push	{fp, lr}
   23854:	mov	fp, sp
   23858:	sub	sp, sp, #48	; 0x30
   2385c:	str	r0, [fp, #-8]
   23860:	str	r1, [fp, #-12]
   23864:	str	r2, [fp, #-16]
   23868:	ldr	r0, [fp, #-16]
   2386c:	ldr	r0, [r0]
   23870:	str	r0, [sp, #20]
   23874:	ldr	r0, [fp, #-12]
   23878:	ldr	r1, [fp, #-16]
   2387c:	sub	r2, fp, #20
   23880:	bl	25c80 <__assert_fail@plt+0x130c8>
   23884:	tst	r0, #1
   23888:	beq	238ec <__assert_fail@plt+0x10d34>
   2388c:	ldr	r0, [fp, #-12]
   23890:	ldr	r1, [fp, #-16]
   23894:	add	r2, sp, #24
   23898:	bl	25f0c <__assert_fail@plt+0x13354>
   2389c:	tst	r0, #1
   238a0:	beq	238e8 <__assert_fail@plt+0x10d30>
   238a4:	ldr	r0, [fp, #-20]	; 0xffffffec
   238a8:	mov	r1, sp
   238ac:	bl	26c18 <__assert_fail@plt+0x14060>
   238b0:	ldr	r0, [fp, #-16]
   238b4:	ldr	r0, [r0]
   238b8:	str	r0, [sp, #20]
   238bc:	ldr	r1, [fp, #-8]
   238c0:	ldr	r2, [sp, #24]
   238c4:	mov	r0, sp
   238c8:	bl	1e720 <__assert_fail@plt+0xbb68>
   238cc:	tst	r0, #1
   238d0:	beq	238e4 <__assert_fail@plt+0x10d2c>
   238d4:	movw	r0, #1
   238d8:	and	r0, r0, #1
   238dc:	strb	r0, [fp, #-1]
   238e0:	b	23904 <__assert_fail@plt+0x10d4c>
   238e4:	b	238e8 <__assert_fail@plt+0x10d30>
   238e8:	b	238ec <__assert_fail@plt+0x10d34>
   238ec:	ldr	r0, [sp, #20]
   238f0:	ldr	r1, [fp, #-16]
   238f4:	str	r0, [r1]
   238f8:	movw	r0, #0
   238fc:	and	r0, r0, #1
   23900:	strb	r0, [fp, #-1]
   23904:	ldrb	r0, [fp, #-1]
   23908:	and	r0, r0, #1
   2390c:	mov	sp, fp
   23910:	pop	{fp, pc}
   23914:	push	{fp, lr}
   23918:	mov	fp, sp
   2391c:	sub	sp, sp, #32
   23920:	str	r0, [fp, #-8]
   23924:	str	r1, [fp, #-12]
   23928:	str	r2, [sp, #16]
   2392c:	ldr	r0, [fp, #-12]
   23930:	ldr	r1, [sp, #16]
   23934:	add	r2, sp, #12
   23938:	bl	25c80 <__assert_fail@plt+0x130c8>
   2393c:	tst	r0, #1
   23940:	beq	239ec <__assert_fail@plt+0x10e34>
   23944:	movw	r0, #136	; 0x88
   23948:	movt	r0, #9
   2394c:	ldrh	r0, [r0, #68]	; 0x44
   23950:	cmp	r0, #2
   23954:	blt	23968 <__assert_fail@plt+0x10db0>
   23958:	ldr	r0, [sp, #12]
   2395c:	bl	215ec <__assert_fail@plt+0xea34>
   23960:	tst	r0, #1
   23964:	beq	239a4 <__assert_fail@plt+0x10dec>
   23968:	ldr	r0, [fp, #-8]
   2396c:	ldr	r1, [sp, #12]
   23970:	bl	1ba74 <__assert_fail@plt+0x8ebc>
   23974:	str	r0, [sp, #8]
   23978:	ldr	r0, [sp, #12]
   2397c:	ldr	r1, [sp, #8]
   23980:	str	r0, [r1, #40]	; 0x28
   23984:	ldr	r0, [sp, #12]
   23988:	bl	26e5c <__assert_fail@plt+0x142a4>
   2398c:	ldr	r0, [sp, #8]
   23990:	vstr	s0, [r0, #28]
   23994:	movw	r0, #1
   23998:	and	r0, r0, #1
   2399c:	strb	r0, [fp, #-1]
   239a0:	b	239f8 <__assert_fail@plt+0x10e40>
   239a4:	movw	r0, #136	; 0x88
   239a8:	movt	r0, #9
   239ac:	ldr	r0, [r0, #44]	; 0x2c
   239b0:	and	r0, r0, #8
   239b4:	cmp	r0, #0
   239b8:	beq	239dc <__assert_fail@plt+0x10e24>
   239bc:	movw	r0, #63272	; 0xf728
   239c0:	movt	r0, #8
   239c4:	ldr	r0, [r0]
   239c8:	ldr	r2, [sp, #12]
   239cc:	movw	r1, #44986	; 0xafba
   239d0:	movt	r1, #7
   239d4:	bl	128c4 <fprintf@plt>
   239d8:	str	r0, [sp, #4]
   239dc:	bl	26eec <__assert_fail@plt+0x14334>
   239e0:	and	r0, r0, #1
   239e4:	strb	r0, [fp, #-1]
   239e8:	b	239f8 <__assert_fail@plt+0x10e40>
   239ec:	movw	r0, #0
   239f0:	and	r0, r0, #1
   239f4:	strb	r0, [fp, #-1]
   239f8:	ldrb	r0, [fp, #-1]
   239fc:	and	r0, r0, #1
   23a00:	mov	sp, fp
   23a04:	pop	{fp, pc}
   23a08:	push	{fp, lr}
   23a0c:	mov	fp, sp
   23a10:	sub	sp, sp, #32
   23a14:	str	r0, [fp, #-8]
   23a18:	str	r1, [fp, #-12]
   23a1c:	str	r2, [sp, #16]
   23a20:	ldr	r0, [fp, #-12]
   23a24:	ldr	r1, [sp, #16]
   23a28:	ldr	r2, [fp, #-8]
   23a2c:	bl	26f58 <__assert_fail@plt+0x143a0>
   23a30:	str	r0, [sp, #12]
   23a34:	ldr	r0, [sp, #12]
   23a38:	movw	r1, #0
   23a3c:	cmp	r0, r1
   23a40:	beq	23a8c <__assert_fail@plt+0x10ed4>
   23a44:	ldr	r0, [sp, #12]
   23a48:	ldr	r1, [r0, #48]	; 0x30
   23a4c:	ldr	r0, [r0, #52]	; 0x34
   23a50:	add	r2, pc, #104	; 0x68
   23a54:	add	r3, r2, #8
   23a58:	subs	r1, r1, #100	; 0x64
   23a5c:	sbcs	r0, r0, #0
   23a60:	movcc	r2, r3
   23a64:	vldr	d16, [r2]
   23a68:	vcvt.f32.f64	s0, d16
   23a6c:	ldr	r2, [sp, #12]
   23a70:	vstr	s0, [r2, #28]
   23a74:	movw	r2, #1
   23a78:	and	r2, r2, #1
   23a7c:	strb	r2, [fp, #-1]
   23a80:	str	r0, [sp, #8]
   23a84:	str	r1, [sp, #4]
   23a88:	b	23aac <__assert_fail@plt+0x10ef4>
   23a8c:	ldr	r0, [sp, #16]
   23a90:	ldr	r1, [r0]
   23a94:	mvn	r2, #0
   23a98:	add	r1, r1, r2
   23a9c:	str	r1, [r0]
   23aa0:	movw	r0, #0
   23aa4:	and	r0, r0, #1
   23aa8:	strb	r0, [fp, #-1]
   23aac:	ldrb	r0, [fp, #-1]
   23ab0:	and	r0, r0, #1
   23ab4:	mov	sp, fp
   23ab8:	pop	{fp, pc}
   23abc:	nop	{0}
   23ac0:	ldmibls	r9, {r1, r3, r4, r7, r8, fp, ip, pc}
   23ac4:	svccc	0x00c99999
   23ac8:	bvc	ff875988 <stdout@@GLIBC_2.4+0xff7e6254>
   23acc:	svccc	0x00efae14
   23ad0:	push	{fp, lr}
   23ad4:	mov	fp, sp
   23ad8:	sub	sp, sp, #80	; 0x50
   23adc:	str	r0, [fp, #-8]
   23ae0:	str	r1, [fp, #-12]
   23ae4:	str	r2, [fp, #-16]
   23ae8:	ldr	r0, [fp, #-16]
   23aec:	ldr	r0, [r0]
   23af0:	str	r0, [fp, #-24]	; 0xffffffe8
   23af4:	ldr	r0, [fp, #-12]
   23af8:	ldr	r1, [fp, #-16]
   23afc:	sub	r2, fp, #20
   23b00:	bl	25c80 <__assert_fail@plt+0x130c8>
   23b04:	tst	r0, #1
   23b08:	beq	23cf0 <__assert_fail@plt+0x11138>
   23b0c:	ldr	r0, [fp, #-20]	; 0xffffffec
   23b10:	bl	12ba0 <getgrnam@plt>
   23b14:	str	r0, [fp, #-36]	; 0xffffffdc
   23b18:	bl	1245c <endgrent@plt>
   23b1c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   23b20:	movw	lr, #0
   23b24:	cmp	r0, lr
   23b28:	beq	23b3c <__assert_fail@plt+0x10f84>
   23b2c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   23b30:	ldr	r0, [r0, #8]
   23b34:	str	r0, [fp, #-28]	; 0xffffffe4
   23b38:	b	23c8c <__assert_fail@plt+0x110d4>
   23b3c:	ldr	r0, [fp, #-20]	; 0xffffffec
   23b40:	movw	r1, #45046	; 0xaff6
   23b44:	movt	r1, #7
   23b48:	bl	12bac <strspn@plt>
   23b4c:	str	r0, [sp, #40]	; 0x28
   23b50:	ldr	r0, [sp, #40]	; 0x28
   23b54:	cmp	r0, #0
   23b58:	beq	23c0c <__assert_fail@plt+0x11054>
   23b5c:	ldr	r0, [fp, #-20]	; 0xffffffec
   23b60:	ldr	r1, [sp, #40]	; 0x28
   23b64:	add	r0, r0, r1
   23b68:	ldrb	r0, [r0]
   23b6c:	cmp	r0, #0
   23b70:	bne	23b90 <__assert_fail@plt+0x10fd8>
   23b74:	ldr	r0, [fp, #-20]	; 0xffffffec
   23b78:	movw	r1, #136	; 0x88
   23b7c:	movt	r1, #9
   23b80:	ldr	r1, [r1, #72]	; 0x48
   23b84:	bl	2b698 <__assert_fail@plt+0x18ae0>
   23b88:	str	r0, [fp, #-28]	; 0xffffffe4
   23b8c:	b	23c08 <__assert_fail@plt+0x11050>
   23b90:	movw	r0, #45057	; 0xb001
   23b94:	movt	r0, #7
   23b98:	bl	12864 <gettext@plt>
   23b9c:	movw	lr, #136	; 0x88
   23ba0:	movt	lr, #9
   23ba4:	ldr	r1, [lr, #72]	; 0x48
   23ba8:	ldr	r2, [fp, #-20]	; 0xffffffec
   23bac:	movw	lr, #0
   23bb0:	str	r0, [sp, #36]	; 0x24
   23bb4:	mov	r0, lr
   23bb8:	bl	4a828 <__assert_fail@plt+0x37c70>
   23bbc:	movw	r1, #136	; 0x88
   23bc0:	movt	r1, #9
   23bc4:	ldr	r1, [r1, #72]	; 0x48
   23bc8:	ldr	r2, [fp, #-20]	; 0xffffffec
   23bcc:	ldr	lr, [sp, #40]	; 0x28
   23bd0:	add	r2, r2, lr
   23bd4:	movw	lr, #1
   23bd8:	str	r0, [sp, #32]
   23bdc:	mov	r0, lr
   23be0:	bl	4a828 <__assert_fail@plt+0x37c70>
   23be4:	movw	r1, #1
   23be8:	str	r0, [sp, #28]
   23bec:	mov	r0, r1
   23bf0:	movw	r1, #0
   23bf4:	ldr	r2, [sp, #36]	; 0x24
   23bf8:	ldr	r3, [sp, #32]
   23bfc:	ldr	lr, [sp, #28]
   23c00:	str	lr, [sp]
   23c04:	bl	12780 <error@plt>
   23c08:	b	23c88 <__assert_fail@plt+0x110d0>
   23c0c:	ldr	r0, [fp, #-20]	; 0xffffffec
   23c10:	ldrsb	r0, [r0]
   23c14:	cmp	r0, #0
   23c18:	beq	23c64 <__assert_fail@plt+0x110ac>
   23c1c:	movw	r0, #45182	; 0xb07e
   23c20:	movt	r0, #7
   23c24:	bl	12864 <gettext@plt>
   23c28:	movw	lr, #136	; 0x88
   23c2c:	movt	lr, #9
   23c30:	ldr	r1, [lr, #72]	; 0x48
   23c34:	ldr	r2, [fp, #-20]	; 0xffffffec
   23c38:	movw	lr, #0
   23c3c:	str	r0, [sp, #24]
   23c40:	mov	r0, lr
   23c44:	bl	4a828 <__assert_fail@plt+0x37c70>
   23c48:	movw	r1, #1
   23c4c:	str	r0, [sp, #20]
   23c50:	mov	r0, r1
   23c54:	movw	r1, #0
   23c58:	ldr	r2, [sp, #24]
   23c5c:	ldr	r3, [sp, #20]
   23c60:	bl	12780 <error@plt>
   23c64:	movw	r0, #45222	; 0xb0a6
   23c68:	movt	r0, #7
   23c6c:	bl	12864 <gettext@plt>
   23c70:	movw	lr, #1
   23c74:	str	r0, [sp, #16]
   23c78:	mov	r0, lr
   23c7c:	movw	r1, #0
   23c80:	ldr	r2, [sp, #16]
   23c84:	bl	12780 <error@plt>
   23c88:	b	23c8c <__assert_fail@plt+0x110d4>
   23c8c:	ldr	r0, [fp, #-8]
   23c90:	ldr	r1, [fp, #-20]	; 0xffffffec
   23c94:	bl	1ba74 <__assert_fail@plt+0x8ebc>
   23c98:	str	r0, [fp, #-32]	; 0xffffffe0
   23c9c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   23ca0:	ldr	r1, [fp, #-32]	; 0xffffffe0
   23ca4:	str	r0, [r1, #40]	; 0x28
   23ca8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   23cac:	ldr	r1, [r0, #48]	; 0x30
   23cb0:	ldr	r0, [r0, #52]	; 0x34
   23cb4:	add	lr, pc, #84	; 0x54
   23cb8:	add	r2, lr, #8
   23cbc:	subs	r1, r1, #100	; 0x64
   23cc0:	sbcs	r0, r0, #0
   23cc4:	movcc	lr, r2
   23cc8:	vldr	d16, [lr]
   23ccc:	vcvt.f32.f64	s0, d16
   23cd0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   23cd4:	vstr	s0, [r2, #28]
   23cd8:	movw	r2, #1
   23cdc:	and	r2, r2, #1
   23ce0:	strb	r2, [fp, #-1]
   23ce4:	str	r0, [sp, #12]
   23ce8:	str	r1, [sp, #8]
   23cec:	b	23cfc <__assert_fail@plt+0x11144>
   23cf0:	movw	r0, #0
   23cf4:	and	r0, r0, #1
   23cf8:	strb	r0, [fp, #-1]
   23cfc:	ldrb	r0, [fp, #-1]
   23d00:	and	r0, r0, #1
   23d04:	mov	sp, fp
   23d08:	pop	{fp, pc}
   23d0c:	nop	{0}
   23d10:	ldmibls	r9, {r1, r3, r4, r7, r8, fp, ip, pc}
   23d14:	svccc	0x00c99999
   23d18:	bvc	ff875bd8 <stdout@@GLIBC_2.4+0xff7e64a4>
   23d1c:	svccc	0x00efae14
   23d20:	push	{fp, lr}
   23d24:	mov	fp, sp
   23d28:	sub	sp, sp, #16
   23d2c:	str	r0, [fp, #-4]
   23d30:	str	r1, [sp, #8]
   23d34:	str	r2, [sp, #4]
   23d38:	movw	r0, #136	; 0x88
   23d3c:	movt	r0, #9
   23d40:	movw	r1, #1
   23d44:	strb	r1, [r0, #14]
   23d48:	ldr	r0, [fp, #-4]
   23d4c:	ldr	r1, [sp, #8]
   23d50:	ldr	r2, [sp, #4]
   23d54:	bl	26104 <__assert_fail@plt+0x1354c>
   23d58:	and	r0, r0, #1
   23d5c:	mov	sp, fp
   23d60:	pop	{fp, pc}
   23d64:	push	{fp, lr}
   23d68:	mov	fp, sp
   23d6c:	sub	sp, sp, #24
   23d70:	str	r0, [fp, #-8]
   23d74:	str	r1, [sp, #12]
   23d78:	str	r2, [sp, #8]
   23d7c:	ldr	r0, [sp, #12]
   23d80:	ldr	r1, [sp, #8]
   23d84:	add	r2, sp, #4
   23d88:	bl	25c80 <__assert_fail@plt+0x130c8>
   23d8c:	tst	r0, #1
   23d90:	beq	23ddc <__assert_fail@plt+0x11224>
   23d94:	ldr	r0, [fp, #-8]
   23d98:	ldr	r1, [sp, #4]
   23d9c:	bl	1ba74 <__assert_fail@plt+0x8ebc>
   23da0:	str	r0, [sp]
   23da4:	ldr	r0, [sp, #4]
   23da8:	ldr	r1, [sp]
   23dac:	str	r0, [r1, #40]	; 0x28
   23db0:	ldr	r0, [sp, #4]
   23db4:	movw	r1, #0
   23db8:	bl	27238 <__assert_fail@plt+0x14680>
   23dbc:	vldr	s2, [pc, #52]	; 23df8 <__assert_fail@plt+0x11240>
   23dc0:	vmul.f32	s0, s2, s0
   23dc4:	ldr	r0, [sp]
   23dc8:	vstr	s0, [r0, #28]
   23dcc:	movw	r0, #1
   23dd0:	and	r0, r0, #1
   23dd4:	strb	r0, [fp, #-1]
   23dd8:	b	23de8 <__assert_fail@plt+0x11230>
   23ddc:	movw	r0, #0
   23de0:	and	r0, r0, #1
   23de4:	strb	r0, [fp, #-1]
   23de8:	ldrb	r0, [fp, #-1]
   23dec:	and	r0, r0, #1
   23df0:	mov	sp, fp
   23df4:	pop	{fp, pc}
   23df8:	stclcc	12, cr12, [ip, #820]	; 0x334
   23dfc:	push	{fp, lr}
   23e00:	mov	fp, sp
   23e04:	sub	sp, sp, #32
   23e08:	str	r0, [fp, #-8]
   23e0c:	str	r1, [fp, #-12]
   23e10:	str	r2, [sp, #16]
   23e14:	bl	272b8 <__assert_fail@plt+0x14700>
   23e18:	ldr	r1, [fp, #-12]
   23e1c:	ldr	r2, [sp, #16]
   23e20:	str	r0, [sp, #4]
   23e24:	mov	r0, r1
   23e28:	mov	r1, r2
   23e2c:	add	r2, sp, #12
   23e30:	bl	25c80 <__assert_fail@plt+0x130c8>
   23e34:	tst	r0, #1
   23e38:	beq	23eb4 <__assert_fail@plt+0x112fc>
   23e3c:	ldr	r2, [sp, #12]
   23e40:	movw	r0, #45282	; 0xb0e2
   23e44:	movt	r0, #7
   23e48:	movw	r1, #45289	; 0xb0e9
   23e4c:	movt	r1, #7
   23e50:	bl	27390 <__assert_fail@plt+0x147d8>
   23e54:	tst	r0, #1
   23e58:	beq	23eb0 <__assert_fail@plt+0x112f8>
   23e5c:	ldr	r0, [fp, #-8]
   23e60:	ldr	r1, [sp, #12]
   23e64:	bl	1ba74 <__assert_fail@plt+0x8ebc>
   23e68:	str	r0, [sp, #8]
   23e6c:	ldr	r0, [sp, #8]
   23e70:	movw	r1, #0
   23e74:	strb	r1, [r0, #19]
   23e78:	ldr	r0, [sp, #8]
   23e7c:	strb	r1, [r0, #18]
   23e80:	ldr	r0, [sp, #12]
   23e84:	ldr	r1, [sp, #8]
   23e88:	str	r0, [r1, #40]	; 0x28
   23e8c:	ldr	r0, [sp, #12]
   23e90:	movw	r1, #0
   23e94:	bl	27238 <__assert_fail@plt+0x14680>
   23e98:	ldr	r0, [sp, #8]
   23e9c:	vstr	s0, [r0, #28]
   23ea0:	movw	r0, #1
   23ea4:	and	r0, r0, #1
   23ea8:	strb	r0, [fp, #-1]
   23eac:	b	23ec0 <__assert_fail@plt+0x11308>
   23eb0:	b	23eb4 <__assert_fail@plt+0x112fc>
   23eb4:	movw	r0, #0
   23eb8:	and	r0, r0, #1
   23ebc:	strb	r0, [fp, #-1]
   23ec0:	ldrb	r0, [fp, #-1]
   23ec4:	and	r0, r0, #1
   23ec8:	mov	sp, fp
   23ecc:	pop	{fp, pc}
   23ed0:	push	{fp, lr}
   23ed4:	mov	fp, sp
   23ed8:	sub	sp, sp, #24
   23edc:	str	r0, [fp, #-8]
   23ee0:	str	r1, [sp, #12]
   23ee4:	str	r2, [sp, #8]
   23ee8:	ldr	r0, [sp, #12]
   23eec:	ldr	r1, [sp, #8]
   23ef0:	ldr	r2, [fp, #-8]
   23ef4:	bl	26f58 <__assert_fail@plt+0x143a0>
   23ef8:	str	r0, [sp, #4]
   23efc:	ldr	r0, [sp, #4]
   23f00:	movw	r1, #0
   23f04:	cmp	r0, r1
   23f08:	beq	23f48 <__assert_fail@plt+0x11390>
   23f0c:	vldr	s0, [pc, #100]	; 23f78 <__assert_fail@plt+0x113c0>
   23f10:	ldr	r0, [sp, #4]
   23f14:	vstr	s0, [r0, #28]
   23f18:	ldr	r0, [sp, #4]
   23f1c:	movw	r1, #1
   23f20:	strb	r1, [r0, #20]
   23f24:	ldr	r0, [sp, #4]
   23f28:	movw	r1, #0
   23f2c:	strb	r1, [r0, #18]
   23f30:	ldr	r0, [sp, #4]
   23f34:	strb	r1, [r0, #19]
   23f38:	movw	r0, #1
   23f3c:	and	r0, r0, #1
   23f40:	strb	r0, [fp, #-1]
   23f44:	b	23f68 <__assert_fail@plt+0x113b0>
   23f48:	ldr	r0, [sp, #8]
   23f4c:	ldr	r1, [r0]
   23f50:	mvn	r2, #0
   23f54:	add	r1, r1, r2
   23f58:	str	r1, [r0]
   23f5c:	movw	r0, #0
   23f60:	and	r0, r0, #1
   23f64:	strb	r0, [fp, #-1]
   23f68:	ldrb	r0, [fp, #-1]
   23f6c:	and	r0, r0, #1
   23f70:	mov	sp, fp
   23f74:	pop	{fp, pc}
   23f78:	strcc	r3, [r6, #1981]	; 0x7bd
   23f7c:	push	{fp, lr}
   23f80:	mov	fp, sp
   23f84:	sub	sp, sp, #16
   23f88:	str	r0, [fp, #-4]
   23f8c:	str	r1, [sp, #8]
   23f90:	str	r2, [sp, #4]
   23f94:	ldr	r0, [fp, #-4]
   23f98:	ldr	r1, [sp, #8]
   23f9c:	ldr	r2, [sp, #4]
   23fa0:	movw	r3, #43318	; 0xa936
   23fa4:	movt	r3, #7
   23fa8:	movw	ip, #22424	; 0x5798
   23fac:	movt	ip, #1
   23fb0:	str	ip, [sp]
   23fb4:	bl	27450 <__assert_fail@plt+0x14898>
   23fb8:	and	r0, r0, #1
   23fbc:	mov	sp, fp
   23fc0:	pop	{fp, pc}
   23fc4:	push	{fp, lr}
   23fc8:	mov	fp, sp
   23fcc:	sub	sp, sp, #16
   23fd0:	str	r0, [fp, #-4]
   23fd4:	str	r1, [sp, #8]
   23fd8:	str	r2, [sp, #4]
   23fdc:	ldr	r0, [sp, #8]
   23fe0:	ldr	r1, [sp, #4]
   23fe4:	ldr	r2, [fp, #-4]
   23fe8:	movw	r3, #136	; 0x88
   23fec:	movt	r3, #9
   23ff0:	ldr	r3, [r3, #60]	; 0x3c
   23ff4:	orr	r3, r3, #4194304	; 0x400000
   23ff8:	bl	27634 <__assert_fail@plt+0x14a7c>
   23ffc:	and	r0, r0, #1
   24000:	mov	sp, fp
   24004:	pop	{fp, pc}
   24008:	push	{fp, lr}
   2400c:	mov	fp, sp
   24010:	sub	sp, sp, #16
   24014:	str	r0, [fp, #-4]
   24018:	str	r1, [sp, #8]
   2401c:	str	r2, [sp, #4]
   24020:	ldr	r0, [fp, #-4]
   24024:	ldr	r1, [sp, #8]
   24028:	ldr	r2, [sp, #4]
   2402c:	movw	r3, #45290	; 0xb0ea
   24030:	movt	r3, #7
   24034:	movw	ip, #22424	; 0x5798
   24038:	movt	ip, #1
   2403c:	str	ip, [sp]
   24040:	bl	27450 <__assert_fail@plt+0x14898>
   24044:	and	r0, r0, #1
   24048:	mov	sp, fp
   2404c:	pop	{fp, pc}
   24050:	push	{fp, lr}
   24054:	mov	fp, sp
   24058:	sub	sp, sp, #24
   2405c:	str	r0, [fp, #-8]
   24060:	str	r1, [sp, #12]
   24064:	str	r2, [sp, #8]
   24068:	ldr	r0, [sp, #12]
   2406c:	ldr	r1, [sp, #8]
   24070:	ldr	r2, [fp, #-8]
   24074:	bl	26f58 <__assert_fail@plt+0x143a0>
   24078:	str	r0, [sp, #4]
   2407c:	ldr	r0, [sp, #4]
   24080:	movw	r1, #0
   24084:	cmp	r0, r1
   24088:	beq	2410c <__assert_fail@plt+0x11554>
   2408c:	ldr	r0, [sp, #4]
   24090:	ldr	r1, [r0, #48]	; 0x30
   24094:	ldr	r0, [r0, #52]	; 0x34
   24098:	eor	r1, r1, #1
   2409c:	orr	r0, r1, r0
   240a0:	cmp	r0, #0
   240a4:	bne	240bc <__assert_fail@plt+0x11504>
   240a8:	b	240ac <__assert_fail@plt+0x114f4>
   240ac:	vldr	s0, [pc, #144]	; 24144 <__assert_fail@plt+0x1158c>
   240b0:	ldr	r0, [sp, #4]
   240b4:	vstr	s0, [r0, #28]
   240b8:	b	240fc <__assert_fail@plt+0x11544>
   240bc:	ldr	r0, [sp, #4]
   240c0:	ldr	r1, [r0, #48]	; 0x30
   240c4:	ldr	r0, [r0, #52]	; 0x34
   240c8:	eor	r1, r1, #2
   240cc:	orr	r0, r1, r0
   240d0:	cmp	r0, #0
   240d4:	bne	240ec <__assert_fail@plt+0x11534>
   240d8:	b	240dc <__assert_fail@plt+0x11524>
   240dc:	vldr	s0, [pc, #92]	; 24140 <__assert_fail@plt+0x11588>
   240e0:	ldr	r0, [sp, #4]
   240e4:	vstr	s0, [r0, #28]
   240e8:	b	240f8 <__assert_fail@plt+0x11540>
   240ec:	vldr	s0, [pc, #72]	; 2413c <__assert_fail@plt+0x11584>
   240f0:	ldr	r0, [sp, #4]
   240f4:	vstr	s0, [r0, #28]
   240f8:	b	240fc <__assert_fail@plt+0x11544>
   240fc:	movw	r0, #1
   24100:	and	r0, r0, #1
   24104:	strb	r0, [fp, #-1]
   24108:	b	2412c <__assert_fail@plt+0x11574>
   2410c:	ldr	r0, [sp, #8]
   24110:	ldr	r1, [r0]
   24114:	mvn	r2, #0
   24118:	add	r1, r1, r2
   2411c:	str	r1, [r0]
   24120:	movw	r0, #0
   24124:	and	r0, r0, #1
   24128:	strb	r0, [fp, #-1]
   2412c:	ldrb	r0, [fp, #-1]
   24130:	and	r0, r0, #1
   24134:	mov	sp, fp
   24138:	pop	{fp, pc}
   2413c:	bcc	fe0e8b00 <stdout@@GLIBC_2.4+0xfe0593cc>
   24140:	stccc	7, cr13, [r3], #-40	; 0xffffffd8
   24144:	svccc	0x007d70a4
   24148:	push	{fp, lr}
   2414c:	mov	fp, sp
   24150:	sub	sp, sp, #32
   24154:	str	r0, [fp, #-8]
   24158:	str	r1, [fp, #-12]
   2415c:	str	r2, [sp, #16]
   24160:	bl	272b8 <__assert_fail@plt+0x14700>
   24164:	ldr	r1, [fp, #-12]
   24168:	ldr	r2, [sp, #16]
   2416c:	str	r0, [sp, #4]
   24170:	mov	r0, r1
   24174:	mov	r1, r2
   24178:	add	r2, sp, #12
   2417c:	bl	25c80 <__assert_fail@plt+0x130c8>
   24180:	tst	r0, #1
   24184:	beq	241d0 <__assert_fail@plt+0x11618>
   24188:	ldr	r0, [fp, #-8]
   2418c:	ldr	r1, [sp, #12]
   24190:	bl	1ba74 <__assert_fail@plt+0x8ebc>
   24194:	str	r0, [sp, #8]
   24198:	ldr	r0, [sp, #12]
   2419c:	ldr	r1, [sp, #8]
   241a0:	str	r0, [r1, #40]	; 0x28
   241a4:	ldr	r0, [sp, #12]
   241a8:	movw	r1, #0
   241ac:	bl	27238 <__assert_fail@plt+0x14680>
   241b0:	vldr	s2, [pc, #52]	; 241ec <__assert_fail@plt+0x11634>
   241b4:	vmul.f32	s0, s2, s0
   241b8:	ldr	r0, [sp, #8]
   241bc:	vstr	s0, [r0, #28]
   241c0:	movw	r0, #1
   241c4:	and	r0, r0, #1
   241c8:	strb	r0, [fp, #-1]
   241cc:	b	241dc <__assert_fail@plt+0x11624>
   241d0:	movw	r0, #0
   241d4:	and	r0, r0, #1
   241d8:	strb	r0, [fp, #-1]
   241dc:	ldrb	r0, [fp, #-1]
   241e0:	and	r0, r0, #1
   241e4:	mov	sp, fp
   241e8:	pop	{fp, pc}
   241ec:	stclcc	12, cr12, [ip, #820]	; 0x334
   241f0:	push	{fp, lr}
   241f4:	mov	fp, sp
   241f8:	sub	sp, sp, #16
   241fc:	str	r0, [fp, #-4]
   24200:	str	r1, [sp, #8]
   24204:	str	r2, [sp, #4]
   24208:	ldr	r0, [fp, #-4]
   2420c:	movw	r1, #0
   24210:	bl	26b98 <__assert_fail@plt+0x13fe0>
   24214:	and	r0, r0, #1
   24218:	mov	sp, fp
   2421c:	pop	{fp, pc}
   24220:	push	{fp, lr}
   24224:	mov	fp, sp
   24228:	sub	sp, sp, #16
   2422c:	movw	r3, #136	; 0x88
   24230:	movt	r3, #9
   24234:	add	r3, r3, #4
   24238:	str	r0, [fp, #-4]
   2423c:	str	r1, [sp, #8]
   24240:	str	r2, [sp, #4]
   24244:	ldr	r0, [fp, #-4]
   24248:	ldr	r1, [sp, #8]
   2424c:	ldr	r2, [sp, #4]
   24250:	bl	277ac <__assert_fail@plt+0x14bf4>
   24254:	and	r0, r0, #1
   24258:	mov	sp, fp
   2425c:	pop	{fp, pc}
   24260:	push	{fp, lr}
   24264:	mov	fp, sp
   24268:	sub	sp, sp, #16
   2426c:	movw	r3, #136	; 0x88
   24270:	movt	r3, #9
   24274:	add	r3, r3, #8
   24278:	str	r0, [fp, #-4]
   2427c:	str	r1, [sp, #8]
   24280:	str	r2, [sp, #4]
   24284:	ldr	r0, [fp, #-4]
   24288:	ldr	r1, [sp, #8]
   2428c:	ldr	r2, [sp, #4]
   24290:	bl	277ac <__assert_fail@plt+0x14bf4>
   24294:	and	r0, r0, #1
   24298:	mov	sp, fp
   2429c:	pop	{fp, pc}
   242a0:	push	{fp, lr}
   242a4:	mov	fp, sp
   242a8:	sub	sp, sp, #16
   242ac:	str	r0, [fp, #-4]
   242b0:	str	r1, [sp, #8]
   242b4:	str	r2, [sp, #4]
   242b8:	ldr	r0, [fp, #-4]
   242bc:	ldr	r1, [sp, #8]
   242c0:	ldr	r2, [sp, #4]
   242c4:	movw	r3, #3
   242c8:	bl	25b58 <__assert_fail@plt+0x12fa0>
   242cc:	and	r0, r0, #1
   242d0:	mov	sp, fp
   242d4:	pop	{fp, pc}
   242d8:	push	{fp, lr}
   242dc:	mov	fp, sp
   242e0:	sub	sp, sp, #16
   242e4:	str	r0, [fp, #-4]
   242e8:	str	r1, [sp, #8]
   242ec:	str	r2, [sp, #4]
   242f0:	movw	r0, #136	; 0x88
   242f4:	movt	r0, #9
   242f8:	movw	r1, #1
   242fc:	strb	r1, [r0, #13]
   24300:	ldr	r0, [fp, #-4]
   24304:	ldr	r1, [sp, #8]
   24308:	ldr	r2, [sp, #4]
   2430c:	bl	26104 <__assert_fail@plt+0x1354c>
   24310:	and	r0, r0, #1
   24314:	mov	sp, fp
   24318:	pop	{fp, pc}
   2431c:	push	{fp, lr}
   24320:	mov	fp, sp
   24324:	sub	sp, sp, #32
   24328:	str	r0, [fp, #-8]
   2432c:	str	r1, [fp, #-12]
   24330:	str	r2, [sp, #16]
   24334:	ldr	r0, [sp, #16]
   24338:	ldr	r0, [r0]
   2433c:	str	r0, [sp, #8]
   24340:	ldr	r0, [fp, #-12]
   24344:	ldr	r1, [sp, #16]
   24348:	add	r2, sp, #12
   2434c:	bl	25c80 <__assert_fail@plt+0x130c8>
   24350:	tst	r0, #1
   24354:	beq	243e8 <__assert_fail@plt+0x11830>
   24358:	bl	272b8 <__assert_fail@plt+0x14700>
   2435c:	ldr	r2, [sp, #12]
   24360:	movw	lr, #45715	; 0xb293
   24364:	movt	lr, #7
   24368:	str	r0, [sp]
   2436c:	mov	r0, lr
   24370:	movw	r1, #45721	; 0xb299
   24374:	movt	r1, #7
   24378:	bl	27390 <__assert_fail@plt+0x147d8>
   2437c:	tst	r0, #1
   24380:	beq	243d8 <__assert_fail@plt+0x11820>
   24384:	ldr	r0, [fp, #-8]
   24388:	ldr	r1, [sp, #12]
   2438c:	bl	1ba74 <__assert_fail@plt+0x8ebc>
   24390:	str	r0, [sp, #4]
   24394:	ldr	r0, [sp, #4]
   24398:	movw	r1, #0
   2439c:	strb	r1, [r0, #19]
   243a0:	ldr	r0, [sp, #4]
   243a4:	strb	r1, [r0, #18]
   243a8:	ldr	r0, [sp, #12]
   243ac:	ldr	r1, [sp, #4]
   243b0:	str	r0, [r1, #40]	; 0x28
   243b4:	ldr	r0, [sp, #12]
   243b8:	movw	r1, #0
   243bc:	bl	27238 <__assert_fail@plt+0x14680>
   243c0:	ldr	r0, [sp, #4]
   243c4:	vstr	s0, [r0, #28]
   243c8:	movw	r0, #1
   243cc:	and	r0, r0, #1
   243d0:	strb	r0, [fp, #-1]
   243d4:	b	243f4 <__assert_fail@plt+0x1183c>
   243d8:	ldr	r0, [sp, #8]
   243dc:	ldr	r1, [sp, #16]
   243e0:	str	r0, [r1]
   243e4:	b	243e8 <__assert_fail@plt+0x11830>
   243e8:	movw	r0, #0
   243ec:	and	r0, r0, #1
   243f0:	strb	r0, [fp, #-1]
   243f4:	ldrb	r0, [fp, #-1]
   243f8:	and	r0, r0, #1
   243fc:	mov	sp, fp
   24400:	pop	{fp, pc}
   24404:	push	{fp, lr}
   24408:	mov	fp, sp
   2440c:	sub	sp, sp, #144	; 0x90
   24410:	str	r0, [fp, #-8]
   24414:	str	r1, [fp, #-12]
   24418:	str	r2, [fp, #-16]
   2441c:	add	r0, sp, #16
   24420:	bl	1bea8 <__assert_fail@plt+0x92f0>
   24424:	ldr	r0, [fp, #-12]
   24428:	ldr	r1, [fp, #-16]
   2442c:	add	r2, sp, #16
   24430:	add	r3, sp, #12
   24434:	bl	26048 <__assert_fail@plt+0x13490>
   24438:	tst	r0, #1
   2443c:	beq	244b8 <__assert_fail@plt+0x11900>
   24440:	ldr	r0, [fp, #-8]
   24444:	ldr	r1, [sp, #12]
   24448:	bl	1ba74 <__assert_fail@plt+0x8ebc>
   2444c:	str	r0, [fp, #-20]	; 0xffffffec
   24450:	ldr	r0, [fp, #-20]	; 0xffffffec
   24454:	add	r1, sp, #4
   24458:	add	lr, sp, #16
   2445c:	str	r0, [sp]
   24460:	mov	r0, r1
   24464:	mov	r1, lr
   24468:	bl	4b924 <__assert_fail@plt+0x38d6c>
   2446c:	ldr	r0, [sp, #4]
   24470:	ldr	r1, [sp]
   24474:	str	r0, [r1, #48]	; 0x30
   24478:	ldr	r0, [sp, #8]
   2447c:	str	r0, [r1, #52]	; 0x34
   24480:	ldr	r0, [fp, #-20]	; 0xffffffec
   24484:	movw	lr, #3
   24488:	str	lr, [r0, #40]	; 0x28
   2448c:	ldr	r0, [fp, #-20]	; 0xffffffec
   24490:	movw	lr, #0
   24494:	str	lr, [r0, #44]	; 0x2c
   24498:	ldr	r0, [sp, #96]	; 0x60
   2449c:	bl	22914 <__assert_fail@plt+0xfd5c>
   244a0:	ldr	r0, [fp, #-20]	; 0xffffffec
   244a4:	vstr	s0, [r0, #28]
   244a8:	movw	r0, #1
   244ac:	and	r0, r0, #1
   244b0:	strb	r0, [fp, #-1]
   244b4:	b	244c4 <__assert_fail@plt+0x1190c>
   244b8:	movw	r0, #0
   244bc:	and	r0, r0, #1
   244c0:	strb	r0, [fp, #-1]
   244c4:	ldrb	r0, [fp, #-1]
   244c8:	and	r0, r0, #1
   244cc:	mov	sp, fp
   244d0:	pop	{fp, pc}
   244d4:	push	{fp, lr}
   244d8:	mov	fp, sp
   244dc:	sub	sp, sp, #16
   244e0:	str	r0, [fp, #-4]
   244e4:	str	r1, [sp, #8]
   244e8:	str	r2, [sp, #4]
   244ec:	movw	r0, #136	; 0x88
   244f0:	movt	r0, #9
   244f4:	movw	r1, #1
   244f8:	strb	r1, [r0, #12]
   244fc:	ldr	r0, [fp, #-4]
   24500:	ldr	r1, [sp, #8]
   24504:	ldr	r2, [sp, #4]
   24508:	bl	26104 <__assert_fail@plt+0x1354c>
   2450c:	and	r0, r0, #1
   24510:	mov	sp, fp
   24514:	pop	{fp, pc}
   24518:	push	{fp, lr}
   2451c:	mov	fp, sp
   24520:	sub	sp, sp, #16
   24524:	str	r0, [fp, #-4]
   24528:	str	r1, [sp, #8]
   2452c:	str	r2, [sp, #4]
   24530:	ldr	r0, [fp, #-4]
   24534:	movw	r1, #0
   24538:	bl	1ba74 <__assert_fail@plt+0x8ebc>
   2453c:	vldr	s0, [pc, #24]	; 2455c <__assert_fail@plt+0x119a4>
   24540:	str	r0, [sp]
   24544:	ldr	r0, [sp]
   24548:	vstr	s0, [r0, #28]
   2454c:	movw	r0, #1
   24550:	and	r0, r0, #1
   24554:	mov	sp, fp
   24558:	pop	{fp, pc}
   2455c:	ldmcc	r1, {r0, r1, r2, r4, r8, r9, sl, ip, sp, pc}^
   24560:	push	{fp, lr}
   24564:	mov	fp, sp
   24568:	sub	sp, sp, #16
   2456c:	str	r0, [fp, #-4]
   24570:	str	r1, [sp, #8]
   24574:	str	r2, [sp, #4]
   24578:	ldr	r0, [fp, #-4]
   2457c:	bl	1badc <__assert_fail@plt+0x8f24>
   24580:	vldr	s0, [pc, #24]	; 245a0 <__assert_fail@plt+0x119e8>
   24584:	str	r0, [sp]
   24588:	ldr	r0, [sp]
   2458c:	vstr	s0, [r0, #28]
   24590:	movw	r0, #1
   24594:	and	r0, r0, #1
   24598:	mov	sp, fp
   2459c:	pop	{fp, pc}
   245a0:	bcc	fe0e8f64 <stdout@@GLIBC_2.4+0xfe059830>
   245a4:	push	{fp, lr}
   245a8:	mov	fp, sp
   245ac:	sub	sp, sp, #16
   245b0:	str	r0, [fp, #-4]
   245b4:	str	r1, [sp, #8]
   245b8:	str	r2, [sp, #4]
   245bc:	movw	r0, #136	; 0x88
   245c0:	movt	r0, #9
   245c4:	movw	r1, #0
   245c8:	strb	r1, [r0, #14]
   245cc:	ldr	r0, [fp, #-4]
   245d0:	ldr	r1, [sp, #8]
   245d4:	ldr	r2, [sp, #4]
   245d8:	bl	26104 <__assert_fail@plt+0x1354c>
   245dc:	and	r0, r0, #1
   245e0:	mov	sp, fp
   245e4:	pop	{fp, pc}
   245e8:	push	{fp, lr}
   245ec:	mov	fp, sp
   245f0:	sub	sp, sp, #16
   245f4:	str	r0, [fp, #-4]
   245f8:	str	r1, [sp, #8]
   245fc:	str	r2, [sp, #4]
   24600:	movw	r0, #136	; 0x88
   24604:	movt	r0, #9
   24608:	movw	r1, #0
   2460c:	strb	r1, [r0, #16]
   24610:	ldr	r0, [fp, #-4]
   24614:	ldr	r1, [sp, #8]
   24618:	ldr	r2, [sp, #4]
   2461c:	bl	26104 <__assert_fail@plt+0x1354c>
   24620:	and	r0, r0, #1
   24624:	mov	sp, fp
   24628:	pop	{fp, pc}
   2462c:	push	{fp, lr}
   24630:	mov	fp, sp
   24634:	sub	sp, sp, #16
   24638:	str	r0, [fp, #-4]
   2463c:	str	r1, [sp, #8]
   24640:	str	r2, [sp, #4]
   24644:	movw	r0, #136	; 0x88
   24648:	movt	r0, #9
   2464c:	movw	r1, #1
   24650:	strb	r1, [r0, #16]
   24654:	ldr	r0, [fp, #-4]
   24658:	ldr	r1, [sp, #8]
   2465c:	ldr	r2, [sp, #4]
   24660:	bl	26104 <__assert_fail@plt+0x1354c>
   24664:	and	r0, r0, #1
   24668:	mov	sp, fp
   2466c:	pop	{fp, pc}
   24670:	push	{fp, lr}
   24674:	mov	fp, sp
   24678:	sub	sp, sp, #16
   2467c:	str	r0, [fp, #-4]
   24680:	str	r1, [sp, #8]
   24684:	str	r2, [sp, #4]
   24688:	ldr	r0, [fp, #-4]
   2468c:	bl	1a260 <__assert_fail@plt+0x76a8>
   24690:	str	r0, [sp]
   24694:	ldr	r0, [sp]
   24698:	movw	r1, #24484	; 0x5fa4
   2469c:	movt	r1, #1
   246a0:	str	r1, [r0]
   246a4:	ldr	r0, [sp]
   246a8:	movw	r1, #3
   246ac:	str	r1, [r0, #8]
   246b0:	ldr	r0, [sp]
   246b4:	movw	r1, #2
   246b8:	str	r1, [r0, #12]
   246bc:	ldr	r0, [sp]
   246c0:	movw	r1, #0
   246c4:	strb	r1, [r0, #19]
   246c8:	ldr	r0, [sp]
   246cc:	strb	r1, [r0, #18]
   246d0:	movw	r0, #1
   246d4:	and	r0, r0, #1
   246d8:	mov	sp, fp
   246dc:	pop	{fp, pc}
   246e0:	push	{fp, lr}
   246e4:	mov	fp, sp
   246e8:	sub	sp, sp, #16
   246ec:	str	r0, [fp, #-4]
   246f0:	str	r1, [sp, #8]
   246f4:	str	r2, [sp, #4]
   246f8:	ldr	r1, [fp, #-4]
   246fc:	ldr	r2, [sp, #8]
   24700:	ldr	r3, [sp, #4]
   24704:	movw	r0, #34058	; 0x850a
   24708:	movt	r0, #7
   2470c:	bl	261e8 <__assert_fail@plt+0x13630>
   24710:	and	r0, r0, #1
   24714:	mov	sp, fp
   24718:	pop	{fp, pc}
   2471c:	push	{fp, lr}
   24720:	mov	fp, sp
   24724:	sub	sp, sp, #16
   24728:	str	r0, [fp, #-4]
   2472c:	str	r1, [sp, #8]
   24730:	str	r2, [sp, #4]
   24734:	ldr	r1, [fp, #-4]
   24738:	ldr	r2, [sp, #8]
   2473c:	ldr	r3, [sp, #4]
   24740:	movw	r0, #31736	; 0x7bf8
   24744:	movt	r0, #7
   24748:	bl	261e8 <__assert_fail@plt+0x13630>
   2474c:	and	r0, r0, #1
   24750:	mov	sp, fp
   24754:	pop	{fp, pc}
   24758:	push	{fp, lr}
   2475c:	mov	fp, sp
   24760:	sub	sp, sp, #16
   24764:	str	r0, [fp, #-4]
   24768:	str	r1, [sp, #8]
   2476c:	str	r2, [sp, #4]
   24770:	ldr	r0, [fp, #-4]
   24774:	ldr	r1, [sp, #8]
   24778:	ldr	r2, [sp, #4]
   2477c:	movw	r3, #43319	; 0xa937
   24780:	movt	r3, #7
   24784:	movw	ip, #24616	; 0x6028
   24788:	movt	ip, #1
   2478c:	str	ip, [sp]
   24790:	bl	27450 <__assert_fail@plt+0x14898>
   24794:	and	r0, r0, #1
   24798:	mov	sp, fp
   2479c:	pop	{fp, pc}
   247a0:	push	{fp, lr}
   247a4:	mov	fp, sp
   247a8:	sub	sp, sp, #80	; 0x50
   247ac:	str	r0, [fp, #-8]
   247b0:	str	r1, [fp, #-12]
   247b4:	str	r2, [fp, #-16]
   247b8:	movw	r0, #0
   247bc:	str	r0, [fp, #-32]	; 0xffffffe0
   247c0:	movw	r0, #2
   247c4:	str	r0, [fp, #-36]	; 0xffffffdc
   247c8:	ldr	r0, [fp, #-12]
   247cc:	ldr	r1, [fp, #-16]
   247d0:	add	r2, sp, #32
   247d4:	bl	25c80 <__assert_fail@plt+0x130c8>
   247d8:	tst	r0, #1
   247dc:	bne	247f0 <__assert_fail@plt+0x11c38>
   247e0:	movw	r0, #0
   247e4:	and	r0, r0, #1
   247e8:	strb	r0, [fp, #-1]
   247ec:	b	24a14 <__assert_fail@plt+0x11e5c>
   247f0:	ldr	r0, [sp, #32]
   247f4:	ldrb	r0, [r0]
   247f8:	mov	r1, r0
   247fc:	cmp	r0, #45	; 0x2d
   24800:	str	r1, [sp, #28]
   24804:	beq	2481c <__assert_fail@plt+0x11c64>
   24808:	b	2480c <__assert_fail@plt+0x11c54>
   2480c:	ldr	r0, [sp, #28]
   24810:	cmp	r0, #47	; 0x2f
   24814:	beq	24838 <__assert_fail@plt+0x11c80>
   24818:	b	24850 <__assert_fail@plt+0x11c98>
   2481c:	vldr	s0, [pc, #516]	; 24a28 <__assert_fail@plt+0x11e70>
   24820:	movw	r0, #1
   24824:	str	r0, [fp, #-32]	; 0xffffffe0
   24828:	movw	r0, #0
   2482c:	str	r0, [fp, #-36]	; 0xffffffdc
   24830:	vstr	s0, [fp, #-28]	; 0xffffffe4
   24834:	b	24868 <__assert_fail@plt+0x11cb0>
   24838:	vldr	s0, [pc, #484]	; 24a24 <__assert_fail@plt+0x11e6c>
   2483c:	movw	r0, #1
   24840:	str	r0, [fp, #-32]	; 0xffffffe0
   24844:	str	r0, [fp, #-36]	; 0xffffffdc
   24848:	vstr	s0, [fp, #-28]	; 0xffffffe4
   2484c:	b	24868 <__assert_fail@plt+0x11cb0>
   24850:	vldr	s0, [pc, #468]	; 24a2c <__assert_fail@plt+0x11e74>
   24854:	movw	r0, #0
   24858:	str	r0, [fp, #-32]	; 0xffffffe0
   2485c:	movw	r0, #2
   24860:	str	r0, [fp, #-36]	; 0xffffffdc
   24864:	vstr	s0, [fp, #-28]	; 0xffffffe4
   24868:	ldr	r0, [sp, #32]
   2486c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   24870:	add	r0, r0, r1
   24874:	bl	31a4c <__assert_fail@plt+0x1ee94>
   24878:	str	r0, [sp, #40]	; 0x28
   2487c:	ldr	r0, [sp, #40]	; 0x28
   24880:	movw	r1, #0
   24884:	cmp	r1, r0
   24888:	beq	248c0 <__assert_fail@plt+0x11d08>
   2488c:	ldr	r0, [sp, #32]
   24890:	ldrb	r0, [r0]
   24894:	cmp	r0, #43	; 0x2b
   24898:	bne	24908 <__assert_fail@plt+0x11d50>
   2489c:	ldr	r0, [sp, #32]
   248a0:	ldrb	r0, [r0, #1]
   248a4:	movw	r1, #48	; 0x30
   248a8:	cmp	r1, r0
   248ac:	bgt	24908 <__assert_fail@plt+0x11d50>
   248b0:	ldr	r0, [sp, #32]
   248b4:	ldrb	r0, [r0, #1]
   248b8:	cmp	r0, #56	; 0x38
   248bc:	bge	24908 <__assert_fail@plt+0x11d50>
   248c0:	movw	r0, #45732	; 0xb2a4
   248c4:	movt	r0, #7
   248c8:	bl	12864 <gettext@plt>
   248cc:	movw	lr, #136	; 0x88
   248d0:	movt	lr, #9
   248d4:	ldr	r1, [lr, #72]	; 0x48
   248d8:	ldr	r2, [sp, #32]
   248dc:	movw	lr, #0
   248e0:	str	r0, [sp, #24]
   248e4:	mov	r0, lr
   248e8:	bl	4a828 <__assert_fail@plt+0x37c70>
   248ec:	movw	r1, #1
   248f0:	str	r0, [sp, #20]
   248f4:	mov	r0, r1
   248f8:	movw	r1, #0
   248fc:	ldr	r2, [sp, #24]
   24900:	ldr	r3, [sp, #20]
   24904:	bl	12780 <error@plt>
   24908:	ldr	r3, [sp, #40]	; 0x28
   2490c:	movw	r0, #0
   24910:	str	r0, [sp, #16]
   24914:	movw	r1, #0
   24918:	and	r1, r1, #1
   2491c:	ldr	r2, [sp, #16]
   24920:	ldr	ip, [sp, #16]
   24924:	str	ip, [sp]
   24928:	bl	32324 <__assert_fail@plt+0x1f76c>
   2492c:	str	r0, [fp, #-24]	; 0xffffffe8
   24930:	ldr	r3, [sp, #40]	; 0x28
   24934:	movw	r0, #0
   24938:	str	r0, [sp, #12]
   2493c:	movw	r1, #1
   24940:	and	r1, r1, #1
   24944:	ldr	r2, [sp, #12]
   24948:	ldr	ip, [sp, #12]
   2494c:	str	ip, [sp]
   24950:	bl	32324 <__assert_fail@plt+0x1f76c>
   24954:	str	r0, [fp, #-20]	; 0xffffffec
   24958:	ldr	r0, [sp, #40]	; 0x28
   2495c:	bl	50c68 <__assert_fail@plt+0x3e0b0>
   24960:	ldr	r0, [sp, #32]
   24964:	ldrb	r0, [r0]
   24968:	movw	r1, #47	; 0x2f
   2496c:	cmp	r1, r0
   24970:	bne	249cc <__assert_fail@plt+0x11e14>
   24974:	ldr	r0, [fp, #-24]	; 0xffffffe8
   24978:	movw	r1, #0
   2497c:	cmp	r1, r0
   24980:	bne	249cc <__assert_fail@plt+0x11e14>
   24984:	ldr	r0, [fp, #-20]	; 0xffffffec
   24988:	movw	r1, #0
   2498c:	cmp	r1, r0
   24990:	bne	249cc <__assert_fail@plt+0x11e14>
   24994:	movw	r0, #45748	; 0xb2b4
   24998:	movt	r0, #7
   2499c:	bl	12864 <gettext@plt>
   249a0:	ldr	r3, [sp, #32]
   249a4:	movw	lr, #0
   249a8:	str	r0, [sp, #8]
   249ac:	mov	r0, lr
   249b0:	mov	r1, lr
   249b4:	ldr	r2, [sp, #8]
   249b8:	bl	12780 <error@plt>
   249bc:	vldr	s0, [pc, #108]	; 24a30 <__assert_fail@plt+0x11e78>
   249c0:	movw	r0, #0
   249c4:	str	r0, [fp, #-36]	; 0xffffffdc
   249c8:	vstr	s0, [fp, #-28]	; 0xffffffe4
   249cc:	ldr	r0, [fp, #-8]
   249d0:	ldr	r1, [sp, #32]
   249d4:	bl	1ba74 <__assert_fail@plt+0x8ebc>
   249d8:	str	r0, [sp, #36]	; 0x24
   249dc:	vldr	s0, [fp, #-28]	; 0xffffffe4
   249e0:	ldr	r0, [sp, #36]	; 0x24
   249e4:	vstr	s0, [r0, #28]
   249e8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   249ec:	ldr	r1, [sp, #36]	; 0x24
   249f0:	str	r0, [r1, #40]	; 0x28
   249f4:	ldr	r0, [sp, #36]	; 0x24
   249f8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   249fc:	str	r1, [r0, #44]	; 0x2c
   24a00:	ldr	r1, [fp, #-20]	; 0xffffffec
   24a04:	str	r1, [r0, #48]	; 0x30
   24a08:	movw	r0, #1
   24a0c:	and	r0, r0, #1
   24a10:	strb	r0, [fp, #-1]
   24a14:	ldrb	r0, [fp, #-1]
   24a18:	and	r0, r0, #1
   24a1c:	mov	sp, fp
   24a20:	pop	{fp, pc}
   24a24:			; <UNDEFINED> instruction: 0x3e99999a
   24a28:	cdpcc	12, 4, cr12, cr12, cr13, {6}
   24a2c:	stccc	7, cr13, [r3], #-40	; 0xffffffd8
   24a30:	svccc	0x007fa440
   24a34:	push	{fp, lr}
   24a38:	mov	fp, sp
   24a3c:	sub	sp, sp, #16
   24a40:	str	r0, [fp, #-4]
   24a44:	str	r1, [sp, #8]
   24a48:	str	r2, [sp, #4]
   24a4c:	ldr	r0, [fp, #-4]
   24a50:	movw	r1, #0
   24a54:	bl	26dc4 <__assert_fail@plt+0x1420c>
   24a58:	and	r0, r0, #1
   24a5c:	mov	sp, fp
   24a60:	pop	{fp, pc}
   24a64:	push	{fp, lr}
   24a68:	mov	fp, sp
   24a6c:	sub	sp, sp, #48	; 0x30
   24a70:	str	r0, [fp, #-8]
   24a74:	str	r1, [fp, #-12]
   24a78:	str	r2, [fp, #-16]
   24a7c:	ldr	r0, [fp, #-16]
   24a80:	ldr	r0, [r0]
   24a84:	str	r0, [sp, #24]
   24a88:	ldr	r0, [fp, #-12]
   24a8c:	ldr	r1, [fp, #-16]
   24a90:	sub	r2, fp, #20
   24a94:	bl	25f0c <__assert_fail@plt+0x13354>
   24a98:	tst	r0, #1
   24a9c:	beq	24aec <__assert_fail@plt+0x11f34>
   24aa0:	add	r0, sp, #4
   24aa4:	bl	22058 <__assert_fail@plt+0xf4a0>
   24aa8:	ldr	r1, [fp, #-8]
   24aac:	ldr	r2, [fp, #-20]	; 0xffffffec
   24ab0:	add	r0, sp, #4
   24ab4:	bl	1e720 <__assert_fail@plt+0xbb68>
   24ab8:	tst	r0, #1
   24abc:	beq	24ad0 <__assert_fail@plt+0x11f18>
   24ac0:	movw	r0, #1
   24ac4:	and	r0, r0, #1
   24ac8:	strb	r0, [fp, #-1]
   24acc:	b	24af8 <__assert_fail@plt+0x11f40>
   24ad0:	ldr	r0, [sp, #24]
   24ad4:	ldr	r1, [fp, #-16]
   24ad8:	str	r0, [r1]
   24adc:	movw	r0, #0
   24ae0:	and	r0, r0, #1
   24ae4:	strb	r0, [fp, #-1]
   24ae8:	b	24af8 <__assert_fail@plt+0x11f40>
   24aec:	movw	r0, #0
   24af0:	and	r0, r0, #1
   24af4:	strb	r0, [fp, #-1]
   24af8:	ldrb	r0, [fp, #-1]
   24afc:	and	r0, r0, #1
   24b00:	mov	sp, fp
   24b04:	pop	{fp, pc}
   24b08:	push	{fp, lr}
   24b0c:	mov	fp, sp
   24b10:	sub	sp, sp, #16
   24b14:	str	r0, [fp, #-4]
   24b18:	str	r1, [sp, #8]
   24b1c:	str	r2, [sp, #4]
   24b20:	ldr	r0, [fp, #-4]
   24b24:	bl	1badc <__assert_fail@plt+0x8f24>
   24b28:	str	r0, [sp]
   24b2c:	movw	r0, #136	; 0x88
   24b30:	movt	r0, #9
   24b34:	ldrb	r0, [r0]
   24b38:	and	r0, r0, #1
   24b3c:	cmp	r0, #0
   24b40:	bne	24b58 <__assert_fail@plt+0x11fa0>
   24b44:	ldr	r0, [sp]
   24b48:	movw	r1, #0
   24b4c:	strb	r1, [r0, #19]
   24b50:	ldr	r0, [sp]
   24b54:	strb	r1, [r0, #18]
   24b58:	ldr	r0, [sp]
   24b5c:	movw	r1, #1
   24b60:	strb	r1, [r0, #16]
   24b64:	ldr	r0, [sp]
   24b68:	movw	r1, #0
   24b6c:	strb	r1, [r0, #17]
   24b70:	movw	r0, #1
   24b74:	and	r0, r0, #1
   24b78:	mov	sp, fp
   24b7c:	pop	{fp, pc}
   24b80:	push	{fp, lr}
   24b84:	mov	fp, sp
   24b88:	sub	sp, sp, #16
   24b8c:	str	r0, [fp, #-4]
   24b90:	str	r1, [sp, #8]
   24b94:	str	r2, [sp, #4]
   24b98:	ldr	r0, [fp, #-4]
   24b9c:	bl	1badc <__assert_fail@plt+0x8f24>
   24ba0:	str	r0, [sp]
   24ba4:	ldr	r0, [sp]
   24ba8:	movw	r1, #0
   24bac:	strb	r1, [r0, #19]
   24bb0:	ldr	r0, [sp]
   24bb4:	strb	r1, [r0, #18]
   24bb8:	ldr	r0, [sp]
   24bbc:	movw	r2, #1
   24bc0:	strb	r2, [r0, #16]
   24bc4:	ldr	r0, [sp]
   24bc8:	strb	r1, [r0, #17]
   24bcc:	ldr	r0, [sp]
   24bd0:	vmov.f32	s0, #112	; 0x3f800000  1.0
   24bd4:	vstr	s0, [r0, #28]
   24bd8:	movw	r0, #1
   24bdc:	and	r0, r0, #1
   24be0:	mov	sp, fp
   24be4:	pop	{fp, pc}
   24be8:	push	{fp, lr}
   24bec:	mov	fp, sp
   24bf0:	sub	sp, sp, #16
   24bf4:	str	r0, [fp, #-4]
   24bf8:	str	r1, [sp, #8]
   24bfc:	str	r2, [sp, #4]
   24c00:	ldr	r0, [sp, #8]
   24c04:	ldr	r1, [sp, #4]
   24c08:	ldr	r2, [fp, #-4]
   24c0c:	movw	r3, #136	; 0x88
   24c10:	movt	r3, #9
   24c14:	ldr	r3, [r3, #60]	; 0x3c
   24c18:	bl	27634 <__assert_fail@plt+0x14a7c>
   24c1c:	and	r0, r0, #1
   24c20:	mov	sp, fp
   24c24:	pop	{fp, pc}
   24c28:	push	{fp, lr}
   24c2c:	mov	fp, sp
   24c30:	sub	sp, sp, #24
   24c34:	str	r0, [fp, #-8]
   24c38:	str	r1, [sp, #12]
   24c3c:	str	r2, [sp, #8]
   24c40:	ldr	r0, [sp, #12]
   24c44:	ldr	r1, [sp, #8]
   24c48:	add	r2, sp, #4
   24c4c:	bl	25c80 <__assert_fail@plt+0x130c8>
   24c50:	tst	r0, #1
   24c54:	beq	24c88 <__assert_fail@plt+0x120d0>
   24c58:	ldr	r0, [sp, #4]
   24c5c:	bl	2b30c <__assert_fail@plt+0x18754>
   24c60:	movw	lr, #136	; 0x88
   24c64:	movt	lr, #9
   24c68:	str	r0, [lr, #60]	; 0x3c
   24c6c:	ldr	r0, [fp, #-8]
   24c70:	ldr	r1, [sp, #12]
   24c74:	ldr	r2, [sp, #8]
   24c78:	bl	26104 <__assert_fail@plt+0x1354c>
   24c7c:	and	r0, r0, #1
   24c80:	strb	r0, [fp, #-1]
   24c84:	b	24c94 <__assert_fail@plt+0x120dc>
   24c88:	movw	r0, #0
   24c8c:	and	r0, r0, #1
   24c90:	strb	r0, [fp, #-1]
   24c94:	ldrb	r0, [fp, #-1]
   24c98:	and	r0, r0, #1
   24c9c:	mov	sp, fp
   24ca0:	pop	{fp, pc}
   24ca4:	push	{r4, r5, fp, lr}
   24ca8:	add	fp, sp, #8
   24cac:	sub	sp, sp, #264	; 0x108
   24cb0:	str	r0, [fp, #-16]
   24cb4:	str	r1, [fp, #-20]	; 0xffffffec
   24cb8:	str	r2, [fp, #-24]	; 0xffffffe8
   24cbc:	add	r0, sp, #136	; 0x88
   24cc0:	bl	1bea8 <__assert_fail@plt+0x92f0>
   24cc4:	ldr	r0, [fp, #-20]	; 0xffffffec
   24cc8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   24ccc:	add	r2, sp, #136	; 0x88
   24cd0:	add	r3, sp, #20
   24cd4:	bl	26048 <__assert_fail@plt+0x13490>
   24cd8:	tst	r0, #1
   24cdc:	bne	24cf0 <__assert_fail@plt+0x12138>
   24ce0:	movw	r0, #0
   24ce4:	and	r0, r0, #1
   24ce8:	strb	r0, [fp, #-9]
   24cec:	b	24f90 <__assert_fail@plt+0x123d8>
   24cf0:	add	r0, sp, #32
   24cf4:	bl	1bea8 <__assert_fail@plt+0x92f0>
   24cf8:	mvn	r0, #2
   24cfc:	str	r0, [sp, #28]
   24d00:	movw	r0, #0
   24d04:	str	r0, [sp, #24]
   24d08:	movw	r0, #136	; 0x88
   24d0c:	movt	r0, #9
   24d10:	ldr	r0, [r0, #48]	; 0x30
   24d14:	cmp	r0, #0
   24d18:	bne	24d74 <__assert_fail@plt+0x121bc>
   24d1c:	movw	r0, #136	; 0x88
   24d20:	movt	r0, #9
   24d24:	ldrb	r0, [r0, #56]	; 0x38
   24d28:	tst	r0, #1
   24d2c:	beq	24d48 <__assert_fail@plt+0x12190>
   24d30:	ldr	r0, [sp, #24]
   24d34:	orr	r0, r0, #32768	; 0x8000
   24d38:	str	r0, [sp, #24]
   24d3c:	mvn	r0, #0
   24d40:	str	r0, [sp, #28]
   24d44:	b	24d70 <__assert_fail@plt+0x121b8>
   24d48:	ldr	r0, [sp, #152]	; 0x98
   24d4c:	and	r0, r0, #61440	; 0xf000
   24d50:	cmp	r0, #40960	; 0xa000
   24d54:	bne	24d64 <__assert_fail@plt+0x121ac>
   24d58:	mvn	r0, #1
   24d5c:	str	r0, [sp, #28]
   24d60:	b	24d6c <__assert_fail@plt+0x121b4>
   24d64:	mvn	r0, #0
   24d68:	str	r0, [sp, #28]
   24d6c:	b	24d70 <__assert_fail@plt+0x121b8>
   24d70:	b	24d7c <__assert_fail@plt+0x121c4>
   24d74:	mvn	r0, #0
   24d78:	str	r0, [sp, #28]
   24d7c:	ldr	r0, [sp, #28]
   24d80:	cmn	r0, #3
   24d84:	beq	24d8c <__assert_fail@plt+0x121d4>
   24d88:	b	24dac <__assert_fail@plt+0x121f4>
   24d8c:	movw	r0, #45974	; 0xb396
   24d90:	movt	r0, #7
   24d94:	movw	r1, #42747	; 0xa6fb
   24d98:	movt	r1, #7
   24d9c:	movw	r2, #2239	; 0x8bf
   24da0:	movw	r3, #45983	; 0xb39f
   24da4:	movt	r3, #7
   24da8:	bl	12bb8 <__assert_fail@plt>
   24dac:	ldr	r0, [sp, #28]
   24db0:	cmn	r0, #1
   24db4:	bne	24f14 <__assert_fail@plt+0x1235c>
   24db8:	ldr	r0, [sp, #20]
   24dbc:	ldr	r1, [sp, #24]
   24dc0:	bl	296f0 <__assert_fail@plt+0x16b38>
   24dc4:	str	r0, [sp, #28]
   24dc8:	ldr	r0, [sp, #28]
   24dcc:	cmp	r0, #0
   24dd0:	blt	24f10 <__assert_fail@plt+0x12358>
   24dd4:	ldr	r0, [sp, #28]
   24dd8:	add	r1, sp, #32
   24ddc:	bl	77a94 <__assert_fail@plt+0x64edc>
   24de0:	movw	r1, #0
   24de4:	cmp	r1, r0
   24de8:	beq	24dfc <__assert_fail@plt+0x12244>
   24dec:	bl	128d0 <__errno_location@plt>
   24df0:	ldr	r0, [r0]
   24df4:	ldr	r1, [sp, #20]
   24df8:	bl	1db7c <__assert_fail@plt+0xafc4>
   24dfc:	movw	r0, #136	; 0x88
   24e00:	movt	r0, #9
   24e04:	ldr	r0, [r0, #52]	; 0x34
   24e08:	ldr	r1, [sp, #20]
   24e0c:	str	r0, [sp, #16]
   24e10:	mov	r0, r1
   24e14:	add	r1, sp, #136	; 0x88
   24e18:	ldr	r2, [sp, #16]
   24e1c:	blx	r2
   24e20:	cmp	r0, #0
   24e24:	beq	24e38 <__assert_fail@plt+0x12280>
   24e28:	bl	128d0 <__errno_location@plt>
   24e2c:	ldr	r0, [r0]
   24e30:	ldr	r1, [sp, #20]
   24e34:	bl	1db7c <__assert_fail@plt+0xafc4>
   24e38:	movw	r0, #136	; 0x88
   24e3c:	movt	r0, #9
   24e40:	ldr	r0, [r0, #48]	; 0x30
   24e44:	cmp	r0, #0
   24e48:	bne	24ef8 <__assert_fail@plt+0x12340>
   24e4c:	movw	r0, #136	; 0x88
   24e50:	movt	r0, #9
   24e54:	ldrb	r0, [r0, #56]	; 0x38
   24e58:	tst	r0, #1
   24e5c:	bne	24ef8 <__assert_fail@plt+0x12340>
   24e60:	ldr	r0, [sp, #152]	; 0x98
   24e64:	and	r0, r0, #61440	; 0xf000
   24e68:	cmp	r0, #40960	; 0xa000
   24e6c:	bne	24e88 <__assert_fail@plt+0x122d0>
   24e70:	ldr	r0, [sp, #28]
   24e74:	bl	12b70 <close@plt>
   24e78:	mvn	lr, #0
   24e7c:	str	lr, [sp, #28]
   24e80:	str	r0, [sp, #12]
   24e84:	b	24ef4 <__assert_fail@plt+0x1233c>
   24e88:	ldr	r0, [sp, #136]	; 0x88
   24e8c:	ldr	r1, [sp, #140]	; 0x8c
   24e90:	ldr	r2, [sp, #32]
   24e94:	ldr	r3, [sp, #36]	; 0x24
   24e98:	eor	r1, r1, r3
   24e9c:	eor	r0, r0, r2
   24ea0:	orr	r0, r0, r1
   24ea4:	cmp	r0, #0
   24ea8:	bne	24edc <__assert_fail@plt+0x12324>
   24eac:	b	24eb0 <__assert_fail@plt+0x122f8>
   24eb0:	ldr	r0, [sp, #232]	; 0xe8
   24eb4:	ldr	r1, [sp, #236]	; 0xec
   24eb8:	ldr	r2, [sp, #128]	; 0x80
   24ebc:	ldr	r3, [sp, #132]	; 0x84
   24ec0:	eor	r1, r1, r3
   24ec4:	eor	r0, r0, r2
   24ec8:	orr	r0, r0, r1
   24ecc:	cmp	r0, #0
   24ed0:	bne	24edc <__assert_fail@plt+0x12324>
   24ed4:	b	24ed8 <__assert_fail@plt+0x12320>
   24ed8:	b	24ef0 <__assert_fail@plt+0x12338>
   24edc:	ldr	r0, [sp, #28]
   24ee0:	bl	12b70 <close@plt>
   24ee4:	mvn	lr, #0
   24ee8:	str	lr, [sp, #28]
   24eec:	str	r0, [sp, #8]
   24ef0:	b	24ef4 <__assert_fail@plt+0x1233c>
   24ef4:	b	24f08 <__assert_fail@plt+0x12350>
   24ef8:	add	r0, sp, #136	; 0x88
   24efc:	add	r1, sp, #32
   24f00:	movw	r2, #104	; 0x68
   24f04:	bl	125c4 <memcpy@plt>
   24f08:	b	24f0c <__assert_fail@plt+0x12354>
   24f0c:	b	24f10 <__assert_fail@plt+0x12358>
   24f10:	b	24f14 <__assert_fail@plt+0x1235c>
   24f14:	vldr	s0, [pc, #132]	; 24fa0 <__assert_fail@plt+0x123e8>
   24f18:	ldr	r0, [fp, #-16]
   24f1c:	ldr	r1, [sp, #20]
   24f20:	vstr	s0, [sp, #4]
   24f24:	bl	1ba74 <__assert_fail@plt+0x8ebc>
   24f28:	str	r0, [fp, #-28]	; 0xffffffe4
   24f2c:	ldr	r0, [sp, #232]	; 0xe8
   24f30:	ldr	r1, [sp, #236]	; 0xec
   24f34:	ldr	lr, [fp, #-28]	; 0xffffffe4
   24f38:	str	r1, [lr, #44]	; 0x2c
   24f3c:	str	r0, [lr, #40]	; 0x28
   24f40:	ldr	r0, [sp, #136]	; 0x88
   24f44:	ldr	r1, [sp, #140]	; 0x8c
   24f48:	ldr	lr, [fp, #-28]	; 0xffffffe4
   24f4c:	str	r1, [lr, #52]	; 0x34
   24f50:	str	r0, [lr, #48]	; 0x30
   24f54:	ldr	r0, [sp, #28]
   24f58:	ldr	r1, [fp, #-28]	; 0xffffffe4
   24f5c:	str	r0, [r1, #56]	; 0x38
   24f60:	ldr	r0, [fp, #-28]	; 0xffffffe4
   24f64:	movw	r1, #0
   24f68:	strb	r1, [r0, #19]
   24f6c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   24f70:	movw	r1, #1
   24f74:	strb	r1, [r0, #18]
   24f78:	ldr	r0, [fp, #-28]	; 0xffffffe4
   24f7c:	vldr	s0, [sp, #4]
   24f80:	vstr	s0, [r0, #28]
   24f84:	movw	r0, #1
   24f88:	and	r0, r0, #1
   24f8c:	strb	r0, [fp, #-9]
   24f90:	ldrb	r0, [fp, #-9]
   24f94:	and	r0, r0, #1
   24f98:	sub	sp, fp, #8
   24f9c:	pop	{r4, r5, fp, pc}
   24fa0:	stccc	7, cr13, [r3], #-40	; 0xffffffd8
   24fa4:	nop	{0}
   24fa8:	push	{fp, lr}
   24fac:	mov	fp, sp
   24fb0:	sub	sp, sp, #88	; 0x58
   24fb4:	str	r0, [fp, #-8]
   24fb8:	str	r1, [fp, #-12]
   24fbc:	str	r2, [fp, #-16]
   24fc0:	movw	r0, #512	; 0x200
   24fc4:	str	r0, [sp, #44]	; 0x2c
   24fc8:	ldr	r0, [fp, #-12]
   24fcc:	movw	r1, #0
   24fd0:	cmp	r0, r1
   24fd4:	beq	24ff8 <__assert_fail@plt+0x12440>
   24fd8:	ldr	r0, [fp, #-12]
   24fdc:	ldr	r1, [fp, #-16]
   24fe0:	ldr	r1, [r1]
   24fe4:	add	r0, r0, r1, lsl #2
   24fe8:	ldr	r0, [r0]
   24fec:	movw	r1, #0
   24ff0:	cmp	r0, r1
   24ff4:	bne	25008 <__assert_fail@plt+0x12450>
   24ff8:	movw	r0, #0
   24ffc:	and	r0, r0, #1
   25000:	strb	r0, [fp, #-1]
   25004:	b	25470 <__assert_fail@plt+0x128b8>
   25008:	ldr	r0, [fp, #-12]
   2500c:	ldr	r1, [fp, #-16]
   25010:	ldr	r1, [r1]
   25014:	add	r0, r0, r1, lsl #2
   25018:	ldr	r0, [r0]
   2501c:	str	r0, [fp, #-24]	; 0xffffffe8
   25020:	ldr	r0, [fp, #-24]	; 0xffffffe8
   25024:	bl	12888 <strlen@plt>
   25028:	str	r0, [sp, #40]	; 0x28
   2502c:	ldr	r0, [sp, #40]	; 0x28
   25030:	cmp	r0, #0
   25034:	bne	2505c <__assert_fail@plt+0x124a4>
   25038:	movw	r0, #46049	; 0xb3e1
   2503c:	movt	r0, #7
   25040:	bl	12864 <gettext@plt>
   25044:	movw	lr, #1
   25048:	str	r0, [sp, #32]
   2504c:	mov	r0, lr
   25050:	movw	r1, #0
   25054:	ldr	r2, [sp, #32]
   25058:	bl	12780 <error@plt>
   2505c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   25060:	ldr	r1, [sp, #40]	; 0x28
   25064:	add	r0, r0, r1
   25068:	ldrb	r0, [r0, #-1]
   2506c:	strb	r0, [fp, #-33]	; 0xffffffdf
   25070:	ldrb	r0, [fp, #-33]	; 0xffffffdf
   25074:	sub	r0, r0, #48	; 0x30
   25078:	cmp	r0, #71	; 0x47
   2507c:	str	r0, [sp, #28]
   25080:	bhi	25298 <__assert_fail@plt+0x126e0>
   25084:	add	r0, pc, #8
   25088:	ldr	r1, [sp, #28]
   2508c:	ldr	r0, [r0, r1, lsl #2]
   25090:	mov	pc, r0
   25094:	andeq	r5, r2, ip, lsl #5
   25098:	andeq	r5, r2, ip, lsl #5
   2509c:	andeq	r5, r2, ip, lsl #5
   250a0:	andeq	r5, r2, ip, lsl #5
   250a4:	andeq	r5, r2, ip, lsl #5
   250a8:	andeq	r5, r2, ip, lsl #5
   250ac:	andeq	r5, r2, ip, lsl #5
   250b0:	andeq	r5, r2, ip, lsl #5
   250b4:	andeq	r5, r2, ip, lsl #5
   250b8:	andeq	r5, r2, ip, lsl #5
   250bc:	muleq	r2, r8, r2
   250c0:	muleq	r2, r8, r2
   250c4:	muleq	r2, r8, r2
   250c8:	muleq	r2, r8, r2
   250cc:	muleq	r2, r8, r2
   250d0:	muleq	r2, r8, r2
   250d4:	muleq	r2, r8, r2
   250d8:	muleq	r2, r8, r2
   250dc:	muleq	r2, r8, r2
   250e0:	muleq	r2, r8, r2
   250e4:	muleq	r2, r8, r2
   250e8:	muleq	r2, r8, r2
   250ec:	muleq	r2, r8, r2
   250f0:	andeq	r5, r2, r4, asr #4
   250f4:	muleq	r2, r8, r2
   250f8:	muleq	r2, r8, r2
   250fc:	muleq	r2, r8, r2
   25100:	muleq	r2, r8, r2
   25104:	muleq	r2, r8, r2
   25108:	andeq	r5, r2, r0, lsr #4
   2510c:	muleq	r2, r8, r2
   25110:	muleq	r2, r8, r2
   25114:	muleq	r2, r8, r2
   25118:	muleq	r2, r8, r2
   2511c:	muleq	r2, r8, r2
   25120:	muleq	r2, r8, r2
   25124:	muleq	r2, r8, r2
   25128:	muleq	r2, r8, r2
   2512c:	muleq	r2, r8, r2
   25130:	muleq	r2, r8, r2
   25134:	muleq	r2, r8, r2
   25138:	muleq	r2, r8, r2
   2513c:	muleq	r2, r8, r2
   25140:	muleq	r2, r8, r2
   25144:	muleq	r2, r8, r2
   25148:	muleq	r2, r8, r2
   2514c:	muleq	r2, r8, r2
   25150:	muleq	r2, r8, r2
   25154:	muleq	r2, r8, r2
   25158:	muleq	r2, r8, r2
   2515c:			; <UNDEFINED> instruction: 0x000251b4
   25160:	ldrdeq	r5, [r2], -r8
   25164:	muleq	r2, r8, r2
   25168:	muleq	r2, r8, r2
   2516c:	muleq	r2, r8, r2
   25170:	muleq	r2, r8, r2
   25174:	muleq	r2, r8, r2
   25178:	muleq	r2, r8, r2
   2517c:	muleq	r2, r8, r2
   25180:	strdeq	r5, [r2], -ip
   25184:	muleq	r2, r8, r2
   25188:	muleq	r2, r8, r2
   2518c:	muleq	r2, r8, r2
   25190:	muleq	r2, r8, r2
   25194:	muleq	r2, r8, r2
   25198:	muleq	r2, r8, r2
   2519c:	muleq	r2, r8, r2
   251a0:	muleq	r2, r8, r2
   251a4:	muleq	r2, r8, r2
   251a8:	muleq	r2, r8, r2
   251ac:	muleq	r2, r8, r2
   251b0:	andeq	r5, r2, r8, ror #4
   251b4:	movw	r0, #512	; 0x200
   251b8:	str	r0, [sp, #44]	; 0x2c
   251bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   251c0:	ldr	r1, [sp, #40]	; 0x28
   251c4:	sub	r1, r1, #1
   251c8:	add	r0, r0, r1
   251cc:	movw	r1, #0
   251d0:	strb	r1, [r0]
   251d4:	b	252e0 <__assert_fail@plt+0x12728>
   251d8:	movw	r0, #1
   251dc:	str	r0, [sp, #44]	; 0x2c
   251e0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   251e4:	ldr	r1, [sp, #40]	; 0x28
   251e8:	sub	r1, r1, #1
   251ec:	add	r0, r0, r1
   251f0:	movw	r1, #0
   251f4:	strb	r1, [r0]
   251f8:	b	252e0 <__assert_fail@plt+0x12728>
   251fc:	movw	r0, #1024	; 0x400
   25200:	str	r0, [sp, #44]	; 0x2c
   25204:	ldr	r0, [fp, #-24]	; 0xffffffe8
   25208:	ldr	r1, [sp, #40]	; 0x28
   2520c:	sub	r1, r1, #1
   25210:	add	r0, r0, r1
   25214:	movw	r1, #0
   25218:	strb	r1, [r0]
   2521c:	b	252e0 <__assert_fail@plt+0x12728>
   25220:	ldr	r0, [pc, #636]	; 254a4 <__assert_fail@plt+0x128ec>
   25224:	str	r0, [sp, #44]	; 0x2c
   25228:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2522c:	ldr	r1, [sp, #40]	; 0x28
   25230:	sub	r1, r1, #1
   25234:	add	r0, r0, r1
   25238:	movw	r1, #0
   2523c:	strb	r1, [r0]
   25240:	b	252e0 <__assert_fail@plt+0x12728>
   25244:	ldr	r0, [pc, #596]	; 254a0 <__assert_fail@plt+0x128e8>
   25248:	str	r0, [sp, #44]	; 0x2c
   2524c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   25250:	ldr	r1, [sp, #40]	; 0x28
   25254:	sub	r1, r1, #1
   25258:	add	r0, r0, r1
   2525c:	movw	r1, #0
   25260:	strb	r1, [r0]
   25264:	b	252e0 <__assert_fail@plt+0x12728>
   25268:	movw	r0, #2
   2526c:	str	r0, [sp, #44]	; 0x2c
   25270:	ldr	r0, [fp, #-24]	; 0xffffffe8
   25274:	ldr	r1, [sp, #40]	; 0x28
   25278:	sub	r1, r1, #1
   2527c:	add	r0, r0, r1
   25280:	movw	r1, #0
   25284:	strb	r1, [r0]
   25288:	b	252e0 <__assert_fail@plt+0x12728>
   2528c:	movw	r0, #0
   25290:	strb	r0, [fp, #-33]	; 0xffffffdf
   25294:	b	252e0 <__assert_fail@plt+0x12728>
   25298:	movw	r0, #46080	; 0xb400
   2529c:	movt	r0, #7
   252a0:	bl	12864 <gettext@plt>
   252a4:	ldr	lr, [fp, #-12]
   252a8:	ldr	r1, [fp, #-16]
   252ac:	ldr	r1, [r1]
   252b0:	add	r1, lr, r1, lsl #2
   252b4:	ldr	r1, [r1]
   252b8:	ldr	lr, [sp, #40]	; 0x28
   252bc:	sub	lr, lr, #1
   252c0:	add	r1, r1, lr
   252c4:	ldrb	r3, [r1]
   252c8:	movw	r1, #1
   252cc:	str	r0, [sp, #24]
   252d0:	mov	r0, r1
   252d4:	movw	r1, #0
   252d8:	ldr	r2, [sp, #24]
   252dc:	bl	12780 <error@plt>
   252e0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   252e4:	sub	r1, fp, #32
   252e8:	sub	r2, fp, #40	; 0x28
   252ec:	bl	27184 <__assert_fail@plt+0x145cc>
   252f0:	tst	r0, #1
   252f4:	bne	25338 <__assert_fail@plt+0x12780>
   252f8:	ldrb	r0, [fp, #-33]	; 0xffffffdf
   252fc:	strb	r0, [sp, #38]	; 0x26
   25300:	movw	r0, #0
   25304:	strb	r0, [sp, #39]	; 0x27
   25308:	movw	r0, #46104	; 0xb418
   2530c:	movt	r0, #7
   25310:	bl	12864 <gettext@plt>
   25314:	add	lr, sp, #38	; 0x26
   25318:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2531c:	movw	r1, #1
   25320:	str	r0, [sp, #20]
   25324:	mov	r0, r1
   25328:	movw	r1, #0
   2532c:	ldr	r2, [sp, #20]
   25330:	str	lr, [sp]
   25334:	bl	12780 <error@plt>
   25338:	ldr	r0, [fp, #-8]
   2533c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   25340:	bl	1ba74 <__assert_fail@plt+0x8ebc>
   25344:	str	r0, [fp, #-20]	; 0xffffffec
   25348:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2534c:	ldr	r1, [fp, #-20]	; 0xffffffec
   25350:	str	r0, [r1, #40]	; 0x28
   25354:	ldr	r0, [sp, #44]	; 0x2c
   25358:	ldr	r1, [fp, #-20]	; 0xffffffec
   2535c:	str	r0, [r1, #44]	; 0x2c
   25360:	ldr	r0, [fp, #-32]	; 0xffffffe0
   25364:	ldr	r1, [fp, #-28]	; 0xffffffe4
   25368:	ldr	lr, [fp, #-20]	; 0xffffffec
   2536c:	str	r1, [lr, #52]	; 0x34
   25370:	str	r0, [lr, #48]	; 0x30
   25374:	ldr	r0, [fp, #-20]	; 0xffffffec
   25378:	movw	r1, #1
   2537c:	strb	r1, [r0, #18]
   25380:	ldr	r0, [fp, #-20]	; 0xffffffec
   25384:	movw	r1, #0
   25388:	strb	r1, [r0, #19]
   2538c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   25390:	movw	r1, #0
   25394:	cmp	r1, r0
   25398:	bne	253e8 <__assert_fail@plt+0x12830>
   2539c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   253a0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   253a4:	ldr	r2, [sp, #44]	; 0x2c
   253a8:	asr	r3, r2, #31
   253ac:	umull	ip, lr, r0, r2
   253b0:	mla	r0, r0, r3, lr
   253b4:	mla	r0, r1, r2, r0
   253b8:	add	r1, pc, #208	; 0xd0
   253bc:	add	r2, r1, #8
   253c0:	rsbs	r3, ip, #20480	; 0x5000
   253c4:	rscs	r0, r0, #0
   253c8:	movcc	r1, r2
   253cc:	vldr	d16, [r1]
   253d0:	vcvt.f32.f64	s0, d16
   253d4:	ldr	r1, [fp, #-20]	; 0xffffffec
   253d8:	vstr	s0, [r1, #28]
   253dc:	str	r0, [sp, #16]
   253e0:	str	r3, [sp, #12]
   253e4:	b	25454 <__assert_fail@plt+0x1289c>
   253e8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   253ec:	movw	r1, #1
   253f0:	cmp	r1, r0
   253f4:	bne	25444 <__assert_fail@plt+0x1288c>
   253f8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   253fc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   25400:	ldr	r2, [sp, #44]	; 0x2c
   25404:	asr	r3, r2, #31
   25408:	umull	ip, lr, r0, r2
   2540c:	mla	r0, r0, r3, lr
   25410:	mla	r0, r1, r2, r0
   25414:	add	r1, pc, #100	; 0x64
   25418:	add	r2, r1, #8
   2541c:	rsbs	r3, ip, #20480	; 0x5000
   25420:	rscs	r0, r0, #0
   25424:	movcc	r1, r2
   25428:	vldr	d16, [r1]
   2542c:	vcvt.f32.f64	s0, d16
   25430:	ldr	r1, [fp, #-20]	; 0xffffffec
   25434:	vstr	s0, [r1, #28]
   25438:	str	r0, [sp, #8]
   2543c:	str	r3, [sp, #4]
   25440:	b	25450 <__assert_fail@plt+0x12898>
   25444:	vldr	s0, [pc, #92]	; 254a8 <__assert_fail@plt+0x128f0>
   25448:	ldr	r0, [fp, #-20]	; 0xffffffec
   2544c:	vstr	s0, [r0, #28]
   25450:	b	25454 <__assert_fail@plt+0x1289c>
   25454:	ldr	r0, [fp, #-16]
   25458:	ldr	r1, [r0]
   2545c:	add	r1, r1, #1
   25460:	str	r1, [r0]
   25464:	movw	r0, #1
   25468:	and	r0, r0, #1
   2546c:	strb	r0, [fp, #-1]
   25470:	ldrb	r0, [fp, #-1]
   25474:	and	r0, r0, #1
   25478:	mov	sp, fp
   2547c:	pop	{fp, pc}
   25480:	ldmibls	r9, {r1, r3, r4, r7, r8, fp, ip, pc}
   25484:	svccc	0x00b99999
   25488:	stclgt	12, cr12, [ip], {205}	; 0xcd
   2548c:	svccc	0x00eccccc
   25490:	stclgt	12, cr12, [ip], {205}	; 0xcd
   25494:	svccc	0x00eccccc
   25498:	ldmibls	r9, {r1, r3, r4, r7, r8, fp, ip, pc}
   2549c:	svccc	0x00b99999
   254a0:	andmi	r0, r0, r0
   254a4:	andseq	r0, r0, r0
   254a8:	stccc	7, cr13, [r3], #-40	; 0xffffffd8
   254ac:	push	{fp, lr}
   254b0:	mov	fp, sp
   254b4:	sub	sp, sp, #16
   254b8:	str	r0, [fp, #-4]
   254bc:	str	r1, [sp, #8]
   254c0:	str	r2, [sp, #4]
   254c4:	ldr	r0, [sp, #8]
   254c8:	ldr	r1, [sp, #4]
   254cc:	ldr	r2, [fp, #-4]
   254d0:	movw	r3, #26500	; 0x6784
   254d4:	movt	r3, #1
   254d8:	bl	278f4 <__assert_fail@plt+0x14d3c>
   254dc:	and	r0, r0, #1
   254e0:	mov	sp, fp
   254e4:	pop	{fp, pc}
   254e8:	push	{fp, lr}
   254ec:	mov	fp, sp
   254f0:	sub	sp, sp, #32
   254f4:	str	r0, [fp, #-8]
   254f8:	str	r1, [fp, #-12]
   254fc:	str	r2, [sp, #16]
   25500:	ldr	r0, [fp, #-12]
   25504:	ldr	r1, [sp, #16]
   25508:	ldr	r2, [fp, #-8]
   2550c:	bl	26f58 <__assert_fail@plt+0x143a0>
   25510:	str	r0, [sp, #12]
   25514:	ldr	r0, [sp, #12]
   25518:	movw	r1, #0
   2551c:	cmp	r0, r1
   25520:	beq	2556c <__assert_fail@plt+0x129b4>
   25524:	ldr	r0, [sp, #12]
   25528:	ldr	r1, [r0, #48]	; 0x30
   2552c:	ldr	r0, [r0, #52]	; 0x34
   25530:	add	r2, pc, #104	; 0x68
   25534:	add	r3, r2, #8
   25538:	subs	r1, r1, #100	; 0x64
   2553c:	sbcs	r0, r0, #0
   25540:	movcc	r2, r3
   25544:	vldr	d16, [r2]
   25548:	vcvt.f32.f64	s0, d16
   2554c:	ldr	r2, [sp, #12]
   25550:	vstr	s0, [r2, #28]
   25554:	movw	r2, #1
   25558:	and	r2, r2, #1
   2555c:	strb	r2, [fp, #-1]
   25560:	str	r0, [sp, #8]
   25564:	str	r1, [sp, #4]
   25568:	b	2558c <__assert_fail@plt+0x129d4>
   2556c:	ldr	r0, [sp, #16]
   25570:	ldr	r1, [r0]
   25574:	mvn	r2, #0
   25578:	add	r1, r1, r2
   2557c:	str	r1, [r0]
   25580:	movw	r0, #0
   25584:	and	r0, r0, #1
   25588:	strb	r0, [fp, #-1]
   2558c:	ldrb	r0, [fp, #-1]
   25590:	and	r0, r0, #1
   25594:	mov	sp, fp
   25598:	pop	{fp, pc}
   2559c:	nop	{0}
   255a0:	ldmibls	r9, {r1, r3, r4, r7, r8, fp, ip, pc}
   255a4:	svccc	0x00c99999
   255a8:	bvc	ff877468 <stdout@@GLIBC_2.4+0xff7e7d34>
   255ac:	svccc	0x00efae14
   255b0:	push	{fp, lr}
   255b4:	mov	fp, sp
   255b8:	sub	sp, sp, #64	; 0x40
   255bc:	str	r0, [fp, #-8]
   255c0:	str	r1, [fp, #-12]
   255c4:	str	r2, [fp, #-16]
   255c8:	movw	r0, #43707	; 0xaabb
   255cc:	movt	r0, #7
   255d0:	str	r0, [sp, #20]
   255d4:	ldr	r0, [fp, #-12]
   255d8:	ldr	r1, [fp, #-16]
   255dc:	add	r2, sp, #24
   255e0:	bl	25c80 <__assert_fail@plt+0x130c8>
   255e4:	tst	r0, #1
   255e8:	beq	256b0 <__assert_fail@plt+0x12af8>
   255ec:	mov	r0, #0
   255f0:	str	r0, [sp, #12]
   255f4:	str	r0, [sp, #8]
   255f8:	ldr	r0, [sp, #24]
   255fc:	ldr	r1, [sp, #20]
   25600:	ldr	r2, [sp, #8]
   25604:	ldr	r3, [sp, #12]
   25608:	mov	ip, sp
   2560c:	str	r1, [ip]
   25610:	add	r1, sp, #28
   25614:	vldr	d0, [pc, #180]	; 256d0 <__assert_fail@plt+0x12b18>
   25618:	bl	25cd0 <__assert_fail@plt+0x13118>
   2561c:	tst	r0, #1
   25620:	beq	25688 <__assert_fail@plt+0x12ad0>
   25624:	ldr	r0, [fp, #-8]
   25628:	ldr	r1, [sp, #24]
   2562c:	bl	1ba74 <__assert_fail@plt+0x8ebc>
   25630:	ldr	r1, [pc, #160]	; 256d8 <__assert_fail@plt+0x12b20>
   25634:	str	r0, [fp, #-20]	; 0xffffffec
   25638:	ldr	r0, [fp, #-20]	; 0xffffffec
   2563c:	ldr	lr, [sp, #28]
   25640:	str	lr, [r0, #40]	; 0x28
   25644:	ldr	lr, [sp, #32]
   25648:	str	lr, [r0, #44]	; 0x2c
   2564c:	ldr	lr, [sp, #36]	; 0x24
   25650:	str	lr, [r0, #48]	; 0x30
   25654:	ldr	lr, [sp, #40]	; 0x28
   25658:	str	lr, [r0, #52]	; 0x34
   2565c:	ldr	r0, [sp, #36]	; 0x24
   25660:	sdiv	r0, r0, r1
   25664:	vmov	s0, r0
   25668:	vcvt.f32.s32	s0, s0
   2566c:	bl	22960 <__assert_fail@plt+0xfda8>
   25670:	ldr	r0, [fp, #-20]	; 0xffffffec
   25674:	vstr	s0, [r0, #28]
   25678:	movw	r0, #1
   2567c:	and	r0, r0, #1
   25680:	strb	r0, [fp, #-1]
   25684:	b	256bc <__assert_fail@plt+0x12b04>
   25688:	movw	r0, #46511	; 0xb5af
   2568c:	movt	r0, #7
   25690:	bl	12864 <gettext@plt>
   25694:	ldr	r3, [sp, #24]
   25698:	movw	lr, #1
   2569c:	str	r0, [sp, #4]
   256a0:	mov	r0, lr
   256a4:	movw	r1, #0
   256a8:	ldr	r2, [sp, #4]
   256ac:	bl	12780 <error@plt>
   256b0:	movw	r0, #0
   256b4:	and	r0, r0, #1
   256b8:	strb	r0, [fp, #-1]
   256bc:	ldrb	r0, [fp, #-1]
   256c0:	and	r0, r0, #1
   256c4:	mov	sp, fp
   256c8:	pop	{fp, pc}
   256cc:	nop	{0}
   256d0:	andeq	r0, r0, r0
   256d4:	rscsmi	r1, r5, r0, lsl #16
   256d8:	andeq	r5, r1, r0, lsl #3
   256dc:	nop	{0}
   256e0:	push	{fp, lr}
   256e4:	mov	fp, sp
   256e8:	sub	sp, sp, #48	; 0x30
   256ec:	str	r0, [fp, #-8]
   256f0:	str	r1, [fp, #-12]
   256f4:	str	r2, [fp, #-16]
   256f8:	ldr	r0, [fp, #-12]
   256fc:	ldr	r1, [fp, #-16]
   25700:	sub	r2, fp, #20
   25704:	bl	25c80 <__assert_fail@plt+0x130c8>
   25708:	tst	r0, #1
   2570c:	beq	25868 <__assert_fail@plt+0x12cb0>
   25710:	ldr	r0, [fp, #-20]	; 0xffffffec
   25714:	bl	124a4 <getpwnam@plt>
   25718:	str	r0, [sp, #16]
   2571c:	bl	129fc <endpwent@plt>
   25720:	ldr	r0, [sp, #16]
   25724:	movw	lr, #0
   25728:	cmp	r0, lr
   2572c:	beq	25740 <__assert_fail@plt+0x12b88>
   25730:	ldr	r0, [sp, #16]
   25734:	ldr	r0, [r0, #8]
   25738:	str	r0, [sp, #20]
   2573c:	b	25814 <__assert_fail@plt+0x12c5c>
   25740:	ldr	r0, [fp, #-20]	; 0xffffffec
   25744:	movw	r1, #45046	; 0xaff6
   25748:	movt	r1, #7
   2574c:	bl	12bac <strspn@plt>
   25750:	str	r0, [sp, #12]
   25754:	ldr	r0, [sp, #12]
   25758:	cmp	r0, #0
   2575c:	beq	25794 <__assert_fail@plt+0x12bdc>
   25760:	ldr	r0, [fp, #-20]	; 0xffffffec
   25764:	ldr	r1, [sp, #12]
   25768:	add	r0, r0, r1
   2576c:	ldrb	r0, [r0]
   25770:	cmp	r0, #0
   25774:	bne	25794 <__assert_fail@plt+0x12bdc>
   25778:	ldr	r0, [fp, #-20]	; 0xffffffec
   2577c:	movw	r1, #136	; 0x88
   25780:	movt	r1, #9
   25784:	ldr	r1, [r1, #72]	; 0x48
   25788:	bl	2b698 <__assert_fail@plt+0x18ae0>
   2578c:	str	r0, [sp, #20]
   25790:	b	25810 <__assert_fail@plt+0x12c58>
   25794:	ldr	r0, [fp, #-20]	; 0xffffffec
   25798:	ldrsb	r0, [r0]
   2579c:	cmp	r0, #0
   257a0:	beq	257ec <__assert_fail@plt+0x12c34>
   257a4:	movw	r0, #46540	; 0xb5cc
   257a8:	movt	r0, #7
   257ac:	bl	12864 <gettext@plt>
   257b0:	movw	lr, #136	; 0x88
   257b4:	movt	lr, #9
   257b8:	ldr	r1, [lr, #72]	; 0x48
   257bc:	ldr	r2, [fp, #-20]	; 0xffffffec
   257c0:	movw	lr, #0
   257c4:	str	r0, [sp, #8]
   257c8:	mov	r0, lr
   257cc:	bl	4a828 <__assert_fail@plt+0x37c70>
   257d0:	movw	r1, #1
   257d4:	str	r0, [sp, #4]
   257d8:	mov	r0, r1
   257dc:	movw	r1, #0
   257e0:	ldr	r2, [sp, #8]
   257e4:	ldr	r3, [sp, #4]
   257e8:	bl	12780 <error@plt>
   257ec:	movw	r0, #46575	; 0xb5ef
   257f0:	movt	r0, #7
   257f4:	bl	12864 <gettext@plt>
   257f8:	movw	lr, #1
   257fc:	str	r0, [sp]
   25800:	mov	r0, lr
   25804:	movw	r1, #0
   25808:	ldr	r2, [sp]
   2580c:	bl	12780 <error@plt>
   25810:	b	25814 <__assert_fail@plt+0x12c5c>
   25814:	ldr	r0, [fp, #-8]
   25818:	ldr	r1, [fp, #-20]	; 0xffffffec
   2581c:	bl	1ba74 <__assert_fail@plt+0x8ebc>
   25820:	str	r0, [sp, #24]
   25824:	ldr	r0, [sp, #20]
   25828:	ldr	r1, [sp, #24]
   2582c:	str	r0, [r1, #40]	; 0x28
   25830:	ldr	r0, [sp, #24]
   25834:	ldr	r0, [r0, #40]	; 0x28
   25838:	add	r1, pc, #72	; 0x48
   2583c:	add	lr, r1, #8
   25840:	cmp	r0, #100	; 0x64
   25844:	movcc	r1, lr
   25848:	vldr	d16, [r1]
   2584c:	vcvt.f32.f64	s0, d16
   25850:	ldr	r0, [sp, #24]
   25854:	vstr	s0, [r0, #28]
   25858:	movw	r0, #1
   2585c:	and	r0, r0, #1
   25860:	strb	r0, [fp, #-1]
   25864:	b	25874 <__assert_fail@plt+0x12cbc>
   25868:	movw	r0, #0
   2586c:	and	r0, r0, #1
   25870:	strb	r0, [fp, #-1]
   25874:	ldrb	r0, [fp, #-1]
   25878:	and	r0, r0, #1
   2587c:	mov	sp, fp
   25880:	pop	{fp, pc}
   25884:	nop	{0}
   25888:	ldmibls	r9, {r1, r3, r4, r7, r8, fp, ip, pc}
   2588c:	svccc	0x00c99999
   25890:	bvc	ff877750 <stdout@@GLIBC_2.4+0xff7e801c>
   25894:	svccc	0x00efae14
   25898:	push	{fp, lr}
   2589c:	mov	fp, sp
   258a0:	sub	sp, sp, #16
   258a4:	str	r0, [fp, #-4]
   258a8:	str	r1, [sp, #8]
   258ac:	str	r2, [sp, #4]
   258b0:	ldr	r0, [fp, #-4]
   258b4:	ldr	r1, [sp, #8]
   258b8:	ldr	r2, [sp, #4]
   258bc:	movw	r3, #45722	; 0xb29a
   258c0:	movt	r3, #7
   258c4:	movw	ip, #24616	; 0x6028
   258c8:	movt	ip, #1
   258cc:	str	ip, [sp]
   258d0:	bl	27450 <__assert_fail@plt+0x14898>
   258d4:	and	r0, r0, #1
   258d8:	mov	sp, fp
   258dc:	pop	{fp, pc}
   258e0:	push	{fp, lr}
   258e4:	mov	fp, sp
   258e8:	sub	sp, sp, #16
   258ec:	str	r0, [fp, #-4]
   258f0:	str	r1, [sp, #8]
   258f4:	str	r2, [sp, #4]
   258f8:	ldr	r0, [sp, #8]
   258fc:	ldr	r1, [sp, #4]
   25900:	ldr	r2, [fp, #-4]
   25904:	movw	r3, #27568	; 0x6bb0
   25908:	movt	r3, #1
   2590c:	bl	278f4 <__assert_fail@plt+0x14d3c>
   25910:	and	r0, r0, #1
   25914:	mov	sp, fp
   25918:	pop	{fp, pc}
   2591c:	push	{fp, lr}
   25920:	mov	fp, sp
   25924:	sub	sp, sp, #16
   25928:	str	r0, [fp, #-4]
   2592c:	str	r1, [sp, #8]
   25930:	str	r2, [sp, #4]
   25934:	bl	26eec <__assert_fail@plt+0x14334>
   25938:	and	r0, r0, #1
   2593c:	mov	sp, fp
   25940:	pop	{fp, pc}
   25944:	push	{fp, lr}
   25948:	mov	fp, sp
   2594c:	sub	sp, sp, #16
   25950:	str	r0, [fp, #-4]
   25954:	str	r1, [sp, #8]
   25958:	str	r2, [sp, #4]
   2595c:	ldr	r0, [fp, #-4]
   25960:	bl	1badc <__assert_fail@plt+0x8f24>
   25964:	str	r0, [sp]
   25968:	ldr	r0, [sp]
   2596c:	movw	r1, #0
   25970:	strb	r1, [r0, #19]
   25974:	ldr	r0, [sp]
   25978:	strb	r1, [r0, #18]
   2597c:	ldr	r0, [sp]
   25980:	vmov.f32	s0, #112	; 0x3f800000  1.0
   25984:	vstr	s0, [r0, #28]
   25988:	movw	r0, #1
   2598c:	and	r0, r0, #1
   25990:	mov	sp, fp
   25994:	pop	{fp, pc}
   25998:	push	{fp, lr}
   2599c:	mov	fp, sp
   259a0:	sub	sp, sp, #16
   259a4:	str	r0, [sp, #8]
   259a8:	str	r1, [sp, #4]
   259ac:	str	r2, [sp]
   259b0:	movw	r0, #0
   259b4:	bl	1bb00 <__assert_fail@plt+0x8f48>
   259b8:	push	{fp, lr}
   259bc:	mov	fp, sp
   259c0:	sub	sp, sp, #72	; 0x48
   259c4:	str	r0, [fp, #-8]
   259c8:	str	r1, [fp, #-12]
   259cc:	str	r2, [fp, #-16]
   259d0:	movw	r0, #0
   259d4:	strb	r0, [fp, #-17]	; 0xffffffef
   259d8:	movw	r0, #31464	; 0x7ae8
   259dc:	movt	r0, #7
   259e0:	bl	29c9c <__assert_fail@plt+0x170e4>
   259e4:	movw	r0, #46617	; 0xb619
   259e8:	movt	r0, #7
   259ec:	bl	12864 <gettext@plt>
   259f0:	bl	124f8 <printf@plt>
   259f4:	movw	r1, #46636	; 0xb62c
   259f8:	movt	r1, #7
   259fc:	str	r0, [fp, #-28]	; 0xffffffe4
   25a00:	mov	r0, r1
   25a04:	bl	124f8 <printf@plt>
   25a08:	movw	r1, #1
   25a0c:	strb	r1, [fp, #-17]	; 0xffffffef
   25a10:	movw	r1, #136	; 0x88
   25a14:	movt	r1, #9
   25a18:	ldrb	r1, [r1, #56]	; 0x38
   25a1c:	tst	r1, #1
   25a20:	movw	r1, #46668	; 0xb64c
   25a24:	movt	r1, #7
   25a28:	movw	r2, #46660	; 0xb644
   25a2c:	movt	r2, #7
   25a30:	movne	r1, r2
   25a34:	movw	r2, #46644	; 0xb634
   25a38:	movt	r2, #7
   25a3c:	str	r0, [fp, #-32]	; 0xffffffe0
   25a40:	mov	r0, r2
   25a44:	bl	124f8 <printf@plt>
   25a48:	movw	r1, #1
   25a4c:	strb	r1, [fp, #-17]	; 0xffffffef
   25a50:	movw	r1, #46677	; 0xb655
   25a54:	movt	r1, #7
   25a58:	str	r0, [sp, #36]	; 0x24
   25a5c:	mov	r0, r1
   25a60:	bl	124f8 <printf@plt>
   25a64:	movw	r1, #1
   25a68:	strb	r1, [fp, #-17]	; 0xffffffef
   25a6c:	str	r0, [sp, #32]
   25a70:	bl	124b0 <is_selinux_enabled@plt>
   25a74:	movw	r1, #0
   25a78:	cmp	r1, r0
   25a7c:	bge	25a98 <__assert_fail@plt+0x12ee0>
   25a80:	movw	r0, #46696	; 0xb668
   25a84:	movt	r0, #7
   25a88:	bl	124f8 <printf@plt>
   25a8c:	movw	lr, #1
   25a90:	strb	lr, [fp, #-17]	; 0xffffffef
   25a94:	str	r0, [sp, #28]
   25a98:	movw	r0, #0
   25a9c:	str	r0, [fp, #-24]	; 0xffffffe8
   25aa0:	sub	r0, fp, #24
   25aa4:	bl	13548 <__assert_fail@plt+0x990>
   25aa8:	tst	r0, #1
   25aac:	beq	25af8 <__assert_fail@plt+0x12f40>
   25ab0:	movw	r0, #46705	; 0xb671
   25ab4:	movt	r0, #7
   25ab8:	bl	124f8 <printf@plt>
   25abc:	movw	lr, #1
   25ac0:	strb	lr, [fp, #-17]	; 0xffffffef
   25ac4:	ldr	lr, [fp, #-24]	; 0xffffffe8
   25ac8:	and	lr, lr, #512	; 0x200
   25acc:	cmp	lr, #0
   25ad0:	str	r0, [sp, #24]
   25ad4:	beq	25ae8 <__assert_fail@plt+0x12f30>
   25ad8:	movw	r0, #46710	; 0xb676
   25adc:	movt	r0, #7
   25ae0:	bl	124f8 <printf@plt>
   25ae4:	str	r0, [sp, #20]
   25ae8:	movw	r0, #34067	; 0x8513
   25aec:	movt	r0, #7
   25af0:	bl	124f8 <printf@plt>
   25af4:	str	r0, [sp, #16]
   25af8:	movw	r0, #136	; 0x88
   25afc:	movt	r0, #9
   25b00:	ldrh	r1, [r0, #68]	; 0x44
   25b04:	movw	r0, #46720	; 0xb680
   25b08:	movt	r0, #7
   25b0c:	bl	124f8 <printf@plt>
   25b10:	movw	r1, #1
   25b14:	strb	r1, [fp, #-17]	; 0xffffffef
   25b18:	ldrb	r1, [fp, #-17]	; 0xffffffef
   25b1c:	tst	r1, #1
   25b20:	str	r0, [sp, #12]
   25b24:	bne	25b38 <__assert_fail@plt+0x12f80>
   25b28:	movw	r0, #46735	; 0xb68f
   25b2c:	movt	r0, #7
   25b30:	bl	124f8 <printf@plt>
   25b34:	str	r0, [sp, #8]
   25b38:	movw	r0, #39196	; 0x991c
   25b3c:	movt	r0, #7
   25b40:	bl	124f8 <printf@plt>
   25b44:	movw	lr, #0
   25b48:	str	r0, [sp, #4]
   25b4c:	mov	r0, lr
   25b50:	bl	1284c <exit@plt>
   25b54:	nop	{0}
   25b58:	push	{fp, lr}
   25b5c:	mov	fp, sp
   25b60:	sub	sp, sp, #64	; 0x40
   25b64:	str	r0, [fp, #-8]
   25b68:	str	r1, [fp, #-12]
   25b6c:	str	r2, [fp, #-16]
   25b70:	str	r3, [fp, #-20]	; 0xffffffec
   25b74:	ldr	r0, [fp, #-16]
   25b78:	ldr	r0, [r0]
   25b7c:	str	r0, [fp, #-28]	; 0xffffffe4
   25b80:	ldr	r0, [fp, #-12]
   25b84:	ldr	r1, [fp, #-16]
   25b88:	sub	r2, fp, #24
   25b8c:	bl	25c80 <__assert_fail@plt+0x130c8>
   25b90:	tst	r0, #1
   25b94:	beq	25c58 <__assert_fail@plt+0x130a0>
   25b98:	movw	r0, #136	; 0x88
   25b9c:	movt	r0, #9
   25ba0:	vldr	d16, [r0, #28]
   25ba4:	vstr	d16, [sp, #8]
   25ba8:	ldr	r0, [fp, #-20]	; 0xffffffec
   25bac:	str	r0, [sp, #20]
   25bb0:	ldr	r0, [sp, #8]
   25bb4:	movw	r1, #20864	; 0x5180
   25bb8:	movt	r1, #1
   25bbc:	add	r0, r0, r1
   25bc0:	str	r0, [sp, #8]
   25bc4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   25bc8:	ldr	r2, [sp, #8]
   25bcc:	ldr	r3, [sp, #12]
   25bd0:	movw	r1, #43509	; 0xa9f5
   25bd4:	movt	r1, #7
   25bd8:	mov	ip, sp
   25bdc:	str	r1, [ip]
   25be0:	add	r1, sp, #20
   25be4:	vldr	d0, [pc, #140]	; 25c78 <__assert_fail@plt+0x130c0>
   25be8:	bl	25cd0 <__assert_fail@plt+0x13118>
   25bec:	tst	r0, #1
   25bf0:	beq	25c48 <__assert_fail@plt+0x13090>
   25bf4:	ldr	r0, [fp, #-8]
   25bf8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   25bfc:	bl	1ba74 <__assert_fail@plt+0x8ebc>
   25c00:	str	r0, [sp, #4]
   25c04:	ldr	r0, [sp, #4]
   25c08:	ldr	r1, [sp, #20]
   25c0c:	str	r1, [r0, #40]	; 0x28
   25c10:	ldr	r1, [sp, #24]
   25c14:	str	r1, [r0, #44]	; 0x2c
   25c18:	ldr	r1, [sp, #28]
   25c1c:	str	r1, [r0, #48]	; 0x30
   25c20:	ldr	r1, [sp, #32]
   25c24:	str	r1, [r0, #52]	; 0x34
   25c28:	ldr	r0, [sp, #28]
   25c2c:	bl	22914 <__assert_fail@plt+0xfd5c>
   25c30:	ldr	r0, [sp, #4]
   25c34:	vstr	s0, [r0, #28]
   25c38:	movw	r0, #1
   25c3c:	and	r0, r0, #1
   25c40:	strb	r0, [fp, #-1]
   25c44:	b	25c64 <__assert_fail@plt+0x130ac>
   25c48:	ldr	r0, [fp, #-28]	; 0xffffffe4
   25c4c:	ldr	r1, [fp, #-16]
   25c50:	str	r0, [r1]
   25c54:	b	25c58 <__assert_fail@plt+0x130a0>
   25c58:	movw	r0, #0
   25c5c:	and	r0, r0, #1
   25c60:	strb	r0, [fp, #-1]
   25c64:	ldrb	r0, [fp, #-1]
   25c68:	and	r0, r0, #1
   25c6c:	mov	sp, fp
   25c70:	pop	{fp, pc}
   25c74:	nop	{0}
   25c78:	andeq	r0, r0, r0
   25c7c:	submi	r0, lr, r0
   25c80:	push	{fp, lr}
   25c84:	mov	fp, sp
   25c88:	sub	sp, sp, #24
   25c8c:	str	r0, [fp, #-4]
   25c90:	str	r1, [fp, #-8]
   25c94:	str	r2, [sp, #12]
   25c98:	ldr	r0, [fp, #-4]
   25c9c:	ldr	r1, [fp, #-8]
   25ca0:	add	r2, sp, #8
   25ca4:	bl	25f0c <__assert_fail@plt+0x13354>
   25ca8:	and	r0, r0, #1
   25cac:	strb	r0, [sp, #7]
   25cb0:	ldr	r0, [sp, #8]
   25cb4:	ldr	r1, [sp, #12]
   25cb8:	str	r0, [r1]
   25cbc:	ldrb	r0, [sp, #7]
   25cc0:	and	r0, r0, #1
   25cc4:	mov	sp, fp
   25cc8:	pop	{fp, pc}
   25ccc:	nop	{0}
   25cd0:	push	{fp, lr}
   25cd4:	mov	fp, sp
   25cd8:	sub	sp, sp, #64	; 0x40
   25cdc:	ldr	ip, [fp, #8]
   25ce0:	str	r2, [fp, #-12]
   25ce4:	str	r3, [fp, #-8]
   25ce8:	str	r0, [fp, #-16]
   25cec:	str	r1, [fp, #-20]	; 0xffffffec
   25cf0:	vstr	d0, [sp, #32]
   25cf4:	ldr	r0, [fp, #-20]	; 0xffffffec
   25cf8:	add	r1, r0, #4
   25cfc:	sub	r0, fp, #16
   25d00:	str	ip, [sp, #4]
   25d04:	bl	25fb0 <__assert_fail@plt+0x133f8>
   25d08:	tst	r0, #1
   25d0c:	beq	25ee0 <__assert_fail@plt+0x13328>
   25d10:	ldr	r0, [fp, #-20]	; 0xffffffec
   25d14:	ldr	r0, [r0, #4]
   25d18:	cmp	r0, #0
   25d1c:	str	r0, [sp]
   25d20:	beq	25d58 <__assert_fail@plt+0x131a0>
   25d24:	b	25d28 <__assert_fail@plt+0x13170>
   25d28:	ldr	r0, [sp]
   25d2c:	cmp	r0, #1
   25d30:	beq	25d48 <__assert_fail@plt+0x13190>
   25d34:	b	25d38 <__assert_fail@plt+0x13180>
   25d38:	ldr	r0, [sp]
   25d3c:	cmp	r0, #2
   25d40:	beq	25d68 <__assert_fail@plt+0x131b0>
   25d44:	b	25d6c <__assert_fail@plt+0x131b4>
   25d48:	ldr	r0, [fp, #-20]	; 0xffffffec
   25d4c:	movw	r1, #0
   25d50:	str	r1, [r0, #4]
   25d54:	b	25d6c <__assert_fail@plt+0x131b4>
   25d58:	ldr	r0, [fp, #-20]	; 0xffffffec
   25d5c:	movw	r1, #1
   25d60:	str	r1, [r0, #4]
   25d64:	b	25d6c <__assert_fail@plt+0x131b4>
   25d68:	b	25d6c <__assert_fail@plt+0x131b4>
   25d6c:	ldr	r0, [fp, #-16]
   25d70:	movw	r1, #0
   25d74:	add	r2, sp, #24
   25d78:	movw	r3, #10556	; 0x293c
   25d7c:	movt	r3, #1
   25d80:	bl	4f1c0 <__assert_fail@plt+0x3c608>
   25d84:	tst	r0, #1
   25d88:	beq	25ed0 <__assert_fail@plt+0x13318>
   25d8c:	vldr	d16, [sp, #24]
   25d90:	vldr	d17, [sp, #32]
   25d94:	vmul.f64	d0, d16, d17
   25d98:	add	r0, sp, #16
   25d9c:	bl	1281c <modf@plt>
   25da0:	vldr	d16, [pc, #344]	; 25f00 <__assert_fail@plt+0x13348>
   25da4:	vstr	d0, [sp, #8]
   25da8:	vldr	d17, [sp, #8]
   25dac:	vmul.f64	d17, d17, d16
   25db0:	vstr	d17, [sp, #8]
   25db4:	vldr	d17, [sp, #8]
   25db8:	vcmpe.f64	d17, d16
   25dbc:	vmrs	APSR_nzcv, fpscr
   25dc0:	bpl	25dc8 <__assert_fail@plt+0x13210>
   25dc4:	b	25de8 <__assert_fail@plt+0x13230>
   25dc8:	movw	r0, #43580	; 0xaa3c
   25dcc:	movt	r0, #7
   25dd0:	movw	r1, #42747	; 0xa6fb
   25dd4:	movt	r1, #7
   25dd8:	movw	r2, #3149	; 0xc4d
   25ddc:	movw	r3, #43606	; 0xaa56
   25de0:	movt	r3, #7
   25de4:	bl	12bb8 <__assert_fail@plt>
   25de8:	ldr	r0, [fp, #-12]
   25dec:	vmov	s0, r0
   25df0:	vcvt.f64.s32	d16, s0
   25df4:	vldr	d17, [sp, #16]
   25df8:	vsub.f64	d16, d16, d17
   25dfc:	vcvt.s32.f64	s0, d16
   25e00:	vmov	r0, s0
   25e04:	ldr	r1, [fp, #-20]	; 0xffffffec
   25e08:	str	r0, [r1, #8]
   25e0c:	ldr	r0, [fp, #-12]
   25e10:	ldr	r1, [fp, #-20]	; 0xffffffec
   25e14:	ldr	r1, [r1, #8]
   25e18:	cmp	r0, r1
   25e1c:	movw	r0, #0
   25e20:	movlt	r0, #1
   25e24:	and	r0, r0, #1
   25e28:	vldr	d16, [sp, #16]
   25e2c:	vcmpe.f64	d16, #0.0
   25e30:	vmrs	APSR_nzcv, fpscr
   25e34:	movw	r1, #0
   25e38:	movmi	r1, #1
   25e3c:	and	r1, r1, #1
   25e40:	cmp	r0, r1
   25e44:	beq	25e5c <__assert_fail@plt+0x132a4>
   25e48:	ldr	r2, [fp, #8]
   25e4c:	ldr	r3, [fp, #-16]
   25e50:	movw	r0, #1
   25e54:	movw	r1, #0
   25e58:	bl	12780 <error@plt>
   25e5c:	ldr	r0, [fp, #-8]
   25e60:	vmov	s0, r0
   25e64:	vcvt.f64.s32	d16, s0
   25e68:	vldr	d17, [sp, #8]
   25e6c:	vsub.f64	d16, d16, d17
   25e70:	vcvt.s32.f64	s0, d16
   25e74:	vmov	r0, s0
   25e78:	ldr	r1, [fp, #-20]	; 0xffffffec
   25e7c:	str	r0, [r1, #12]
   25e80:	ldr	r0, [fp, #-8]
   25e84:	vmov	s0, r0
   25e88:	vcvt.f64.s32	d16, s0
   25e8c:	vldr	d17, [sp, #8]
   25e90:	vcmpe.f64	d16, d17
   25e94:	vmrs	APSR_nzcv, fpscr
   25e98:	bpl	25ec0 <__assert_fail@plt+0x13308>
   25e9c:	ldr	r0, [pc, #100]	; 25f08 <__assert_fail@plt+0x13350>
   25ea0:	ldr	r1, [fp, #-20]	; 0xffffffec
   25ea4:	ldr	r2, [r1, #12]
   25ea8:	add	r0, r2, r0
   25eac:	str	r0, [r1, #12]
   25eb0:	ldr	r0, [fp, #-20]	; 0xffffffec
   25eb4:	ldr	r1, [r0, #8]
   25eb8:	sub	r1, r1, #1
   25ebc:	str	r1, [r0, #8]
   25ec0:	movw	r0, #1
   25ec4:	and	r0, r0, #1
   25ec8:	strb	r0, [fp, #-1]
   25ecc:	b	25eec <__assert_fail@plt+0x13334>
   25ed0:	movw	r0, #0
   25ed4:	and	r0, r0, #1
   25ed8:	strb	r0, [fp, #-1]
   25edc:	b	25eec <__assert_fail@plt+0x13334>
   25ee0:	movw	r0, #0
   25ee4:	and	r0, r0, #1
   25ee8:	strb	r0, [fp, #-1]
   25eec:	ldrb	r0, [fp, #-1]
   25ef0:	and	r0, r0, #1
   25ef4:	mov	sp, fp
   25ef8:	pop	{fp, pc}
   25efc:	nop	{0}
   25f00:	andeq	r0, r0, r0
   25f04:	bicmi	ip, sp, r5, ror #26
   25f08:	blcc	fe6d8710 <stdout@@GLIBC_2.4+0xfe648fdc>
   25f0c:	sub	sp, sp, #16
   25f10:	str	r0, [sp, #8]
   25f14:	str	r1, [sp, #4]
   25f18:	str	r2, [sp]
   25f1c:	ldr	r0, [sp, #8]
   25f20:	movw	r1, #0
   25f24:	cmp	r0, r1
   25f28:	beq	25f4c <__assert_fail@plt+0x13394>
   25f2c:	ldr	r0, [sp, #8]
   25f30:	ldr	r1, [sp, #4]
   25f34:	ldr	r1, [r1]
   25f38:	add	r0, r0, r1, lsl #2
   25f3c:	ldr	r0, [r0]
   25f40:	movw	r1, #0
   25f44:	cmp	r0, r1
   25f48:	bne	25f68 <__assert_fail@plt+0x133b0>
   25f4c:	ldr	r0, [sp]
   25f50:	movw	r1, #0
   25f54:	str	r1, [r0]
   25f58:	movw	r0, #0
   25f5c:	and	r0, r0, #1
   25f60:	strb	r0, [sp, #15]
   25f64:	b	25fa0 <__assert_fail@plt+0x133e8>
   25f68:	ldr	r0, [sp, #8]
   25f6c:	ldr	r1, [sp, #4]
   25f70:	ldr	r1, [r1]
   25f74:	add	r0, r0, r1, lsl #2
   25f78:	ldr	r0, [r0]
   25f7c:	ldr	r1, [sp]
   25f80:	str	r0, [r1]
   25f84:	ldr	r0, [sp, #4]
   25f88:	ldr	r1, [r0]
   25f8c:	add	r1, r1, #1
   25f90:	str	r1, [r0]
   25f94:	movw	r0, #1
   25f98:	and	r0, r0, #1
   25f9c:	strb	r0, [sp, #15]
   25fa0:	ldrb	r0, [sp, #15]
   25fa4:	and	r0, r0, #1
   25fa8:	add	sp, sp, #16
   25fac:	bx	lr
   25fb0:	sub	sp, sp, #12
   25fb4:	str	r0, [sp, #8]
   25fb8:	str	r1, [sp, #4]
   25fbc:	ldr	r0, [sp, #8]
   25fc0:	ldr	r0, [r0]
   25fc4:	ldrb	r0, [r0]
   25fc8:	mov	r1, r0
   25fcc:	cmp	r0, #43	; 0x2b
   25fd0:	str	r1, [sp]
   25fd4:	beq	25fec <__assert_fail@plt+0x13434>
   25fd8:	b	25fdc <__assert_fail@plt+0x13424>
   25fdc:	ldr	r0, [sp]
   25fe0:	cmp	r0, #45	; 0x2d
   25fe4:	beq	2600c <__assert_fail@plt+0x13454>
   25fe8:	b	2602c <__assert_fail@plt+0x13474>
   25fec:	ldr	r0, [sp, #4]
   25ff0:	movw	r1, #0
   25ff4:	str	r1, [r0]
   25ff8:	ldr	r0, [sp, #8]
   25ffc:	ldr	r1, [r0]
   26000:	add	r1, r1, #1
   26004:	str	r1, [r0]
   26008:	b	26038 <__assert_fail@plt+0x13480>
   2600c:	ldr	r0, [sp, #4]
   26010:	movw	r1, #1
   26014:	str	r1, [r0]
   26018:	ldr	r0, [sp, #8]
   2601c:	ldr	r1, [r0]
   26020:	add	r1, r1, #1
   26024:	str	r1, [r0]
   26028:	b	26038 <__assert_fail@plt+0x13480>
   2602c:	ldr	r0, [sp, #4]
   26030:	movw	r1, #2
   26034:	str	r1, [r0]
   26038:	movw	r0, #1
   2603c:	and	r0, r0, #1
   26040:	add	sp, sp, #12
   26044:	bx	lr
   26048:	push	{fp, lr}
   2604c:	mov	fp, sp
   26050:	sub	sp, sp, #32
   26054:	str	r0, [fp, #-8]
   26058:	str	r1, [fp, #-12]
   2605c:	str	r2, [sp, #16]
   26060:	str	r3, [sp, #12]
   26064:	ldr	r0, [fp, #-8]
   26068:	ldr	r1, [fp, #-12]
   2606c:	add	r2, sp, #8
   26070:	bl	25c80 <__assert_fail@plt+0x130c8>
   26074:	tst	r0, #1
   26078:	beq	260dc <__assert_fail@plt+0x13524>
   2607c:	ldr	r0, [sp, #8]
   26080:	ldr	r1, [sp, #12]
   26084:	str	r0, [r1]
   26088:	movw	r0, #136	; 0x88
   2608c:	movt	r0, #9
   26090:	ldr	r0, [r0, #52]	; 0x34
   26094:	ldr	r1, [sp, #8]
   26098:	ldr	r2, [sp, #16]
   2609c:	str	r0, [sp, #4]
   260a0:	mov	r0, r1
   260a4:	mov	r1, r2
   260a8:	ldr	r2, [sp, #4]
   260ac:	blx	r2
   260b0:	movw	r1, #0
   260b4:	cmp	r1, r0
   260b8:	beq	260cc <__assert_fail@plt+0x13514>
   260bc:	bl	128d0 <__errno_location@plt>
   260c0:	ldr	r0, [r0]
   260c4:	ldr	r1, [sp, #8]
   260c8:	bl	1db7c <__assert_fail@plt+0xafc4>
   260cc:	movw	r0, #1
   260d0:	and	r0, r0, #1
   260d4:	strb	r0, [fp, #-1]
   260d8:	b	260f4 <__assert_fail@plt+0x1353c>
   260dc:	ldr	r0, [sp, #12]
   260e0:	movw	r1, #0
   260e4:	str	r1, [r0]
   260e8:	movw	r0, #0
   260ec:	and	r0, r0, #1
   260f0:	strb	r0, [fp, #-1]
   260f4:	ldrb	r0, [fp, #-1]
   260f8:	and	r0, r0, #1
   260fc:	mov	sp, fp
   26100:	pop	{fp, pc}
   26104:	push	{fp, lr}
   26108:	mov	fp, sp
   2610c:	sub	sp, sp, #16
   26110:	str	r0, [fp, #-4]
   26114:	str	r1, [sp, #8]
   26118:	str	r2, [sp, #4]
   2611c:	bl	26138 <__assert_fail@plt+0x13580>
   26120:	ldr	r1, [sp, #8]
   26124:	ldr	r2, [sp, #4]
   26128:	bl	25944 <__assert_fail@plt+0x12d8c>
   2612c:	and	r0, r0, #1
   26130:	mov	sp, fp
   26134:	pop	{fp, pc}
   26138:	sub	sp, sp, #4
   2613c:	movw	r0, #65204	; 0xfeb4
   26140:	movt	r0, #8
   26144:	ldr	r0, [r0]
   26148:	movw	r1, #0
   2614c:	cmp	r1, r0
   26150:	bne	261d4 <__assert_fail@plt+0x1361c>
   26154:	movw	r0, #0
   26158:	str	r0, [sp]
   2615c:	ldr	r0, [sp]
   26160:	movw	r1, #46756	; 0xb6a4
   26164:	movt	r1, #7
   26168:	add	r0, r1, r0, lsl #4
   2616c:	ldr	r0, [r0, #4]
   26170:	movw	r1, #0
   26174:	cmp	r0, r1
   26178:	beq	261d0 <__assert_fail@plt+0x13618>
   2617c:	ldr	r0, [sp]
   26180:	movw	r1, #46756	; 0xb6a4
   26184:	movt	r1, #7
   26188:	add	r0, r1, r0, lsl #4
   2618c:	ldr	r0, [r0]
   26190:	movw	r1, #1
   26194:	cmp	r1, r0
   26198:	bne	261bc <__assert_fail@plt+0x13604>
   2619c:	ldr	r0, [sp]
   261a0:	movw	r1, #46756	; 0xb6a4
   261a4:	movt	r1, #7
   261a8:	add	r0, r1, r0, lsl #4
   261ac:	movw	r1, #65204	; 0xfeb4
   261b0:	movt	r1, #8
   261b4:	str	r0, [r1]
   261b8:	b	261d0 <__assert_fail@plt+0x13618>
   261bc:	b	261c0 <__assert_fail@plt+0x13608>
   261c0:	ldr	r0, [sp]
   261c4:	add	r0, r0, #1
   261c8:	str	r0, [sp]
   261cc:	b	2615c <__assert_fail@plt+0x135a4>
   261d0:	b	261d4 <__assert_fail@plt+0x1361c>
   261d4:	movw	r0, #65204	; 0xfeb4
   261d8:	movt	r0, #8
   261dc:	ldr	r0, [r0]
   261e0:	add	sp, sp, #4
   261e4:	bx	lr
   261e8:	push	{fp, lr}
   261ec:	mov	fp, sp
   261f0:	sub	sp, sp, #160	; 0xa0
   261f4:	str	r0, [fp, #-8]
   261f8:	str	r1, [fp, #-12]
   261fc:	str	r2, [fp, #-16]
   26200:	str	r3, [fp, #-20]	; 0xffffffec
   26204:	ldr	r0, [fp, #-12]
   26208:	ldr	r0, [r0, #12]
   2620c:	str	r0, [fp, #-52]	; 0xffffffcc
   26210:	ldr	r0, [fp, #-16]
   26214:	movw	r1, #0
   26218:	cmp	r0, r1
   2621c:	beq	26240 <__assert_fail@plt+0x13688>
   26220:	ldr	r0, [fp, #-16]
   26224:	ldr	r1, [fp, #-20]	; 0xffffffec
   26228:	ldr	r1, [r1]
   2622c:	add	r0, r0, r1, lsl #2
   26230:	ldr	r0, [r0]
   26234:	movw	r1, #0
   26238:	cmp	r0, r1
   2623c:	bne	26250 <__assert_fail@plt+0x13698>
   26240:	movw	r0, #0
   26244:	and	r0, r0, #1
   26248:	strb	r0, [fp, #-1]
   2624c:	b	269d8 <__assert_fail@plt+0x13e20>
   26250:	ldr	r0, [fp, #-12]
   26254:	ldr	r1, [fp, #-52]	; 0xffffffcc
   26258:	movw	r2, #44090	; 0xac3a
   2625c:	movt	r2, #7
   26260:	bl	1ba04 <__assert_fail@plt+0x8e4c>
   26264:	str	r0, [fp, #-60]	; 0xffffffc4
   26268:	ldr	r0, [fp, #-60]	; 0xffffffc4
   2626c:	movw	r1, #1
   26270:	strb	r1, [r0, #17]
   26274:	ldr	r0, [fp, #-60]	; 0xffffffc4
   26278:	strb	r1, [r0, #16]
   2627c:	ldr	r0, [fp, #-60]	; 0xffffffc4
   26280:	movw	r1, #0
   26284:	strb	r1, [r0, #18]
   26288:	ldr	r0, [fp, #-60]	; 0xffffffc4
   2628c:	strb	r1, [r0, #19]
   26290:	ldr	r0, [fp, #-60]	; 0xffffffc4
   26294:	add	r0, r0, #40	; 0x28
   26298:	str	r0, [fp, #-64]	; 0xffffffc0
   2629c:	ldr	r0, [fp, #-64]	; 0xffffffc0
   262a0:	movw	r1, #0
   262a4:	str	r1, [r0, #104]	; 0x68
   262a8:	ldr	r0, [fp, #-52]	; 0xffffffcc
   262ac:	movw	r1, #24336	; 0x5f10
   262b0:	movt	r1, #1
   262b4:	cmp	r0, r1
   262b8:	beq	262e8 <__assert_fail@plt+0x13730>
   262bc:	ldr	r0, [fp, #-52]	; 0xffffffcc
   262c0:	movw	r1, #24036	; 0x5de4
   262c4:	movt	r1, #1
   262c8:	cmp	r0, r1
   262cc:	beq	262e8 <__assert_fail@plt+0x13730>
   262d0:	movw	r0, #1
   262d4:	strb	r0, [fp, #-37]	; 0xffffffdb
   262d8:	ldr	r0, [fp, #-64]	; 0xffffffc0
   262dc:	movw	r1, #0
   262e0:	strb	r1, [r0, #100]	; 0x64
   262e4:	b	26308 <__assert_fail@plt+0x13750>
   262e8:	movw	r0, #0
   262ec:	strb	r0, [fp, #-37]	; 0xffffffdb
   262f0:	movw	r0, #136	; 0x88
   262f4:	movt	r0, #9
   262f8:	movw	r1, #1
   262fc:	strb	r1, [r0, #80]	; 0x50
   26300:	ldr	r0, [fp, #-64]	; 0xffffffc0
   26304:	strb	r1, [r0, #100]	; 0x64
   26308:	ldr	r0, [fp, #-52]	; 0xffffffcc
   2630c:	movw	r1, #20760	; 0x5118
   26310:	movt	r1, #1
   26314:	cmp	r0, r1
   26318:	beq	26330 <__assert_fail@plt+0x13778>
   2631c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   26320:	movw	r1, #24336	; 0x5f10
   26324:	movt	r1, #1
   26328:	cmp	r0, r1
   2632c:	bne	26358 <__assert_fail@plt+0x137a0>
   26330:	ldr	r0, [fp, #-64]	; 0xffffffc0
   26334:	movw	r1, #0
   26338:	str	r1, [r0, #104]	; 0x68
   2633c:	movw	r0, #136	; 0x88
   26340:	movt	r0, #9
   26344:	movw	r1, #0
   26348:	strb	r1, [r0, #14]
   2634c:	ldr	r0, [fp, #-8]
   26350:	bl	269e8 <__assert_fail@plt+0x13e30>
   26354:	b	263a8 <__assert_fail@plt+0x137f0>
   26358:	movw	r0, #63304	; 0xf748
   2635c:	movt	r0, #8
   26360:	ldr	r0, [r0]
   26364:	movw	r1, #0
   26368:	cmp	r1, r0
   2636c:	beq	26374 <__assert_fail@plt+0x137bc>
   26370:	b	26394 <__assert_fail@plt+0x137dc>
   26374:	movw	r0, #44114	; 0xac52
   26378:	movt	r0, #7
   2637c:	movw	r1, #42747	; 0xa6fb
   26380:	movt	r1, #7
   26384:	movw	r2, #2937	; 0xb79
   26388:	movw	r3, #44133	; 0xac65
   2638c:	movt	r3, #7
   26390:	bl	12bb8 <__assert_fail@plt>
   26394:	movw	r0, #63304	; 0xf748
   26398:	movt	r0, #8
   2639c:	ldr	r0, [r0]
   263a0:	ldr	r1, [fp, #-64]	; 0xffffffc0
   263a4:	str	r0, [r1, #104]	; 0x68
   263a8:	ldr	r0, [fp, #-60]	; 0xffffffc4
   263ac:	movw	r1, #0
   263b0:	strb	r1, [r0, #40]	; 0x28
   263b4:	ldr	r0, [fp, #-20]	; 0xffffffec
   263b8:	ldr	r0, [r0]
   263bc:	str	r0, [fp, #-24]	; 0xffffffe8
   263c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   263c4:	str	r0, [fp, #-28]	; 0xffffffe4
   263c8:	movw	r0, #0
   263cc:	str	r0, [fp, #-36]	; 0xffffffdc
   263d0:	str	r0, [fp, #-44]	; 0xffffffd4
   263d4:	str	r0, [fp, #-48]	; 0xffffffd0
   263d8:	ldr	r0, [fp, #-16]
   263dc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   263e0:	add	r0, r0, r1, lsl #2
   263e4:	ldr	r0, [r0]
   263e8:	movw	r1, #0
   263ec:	cmp	r0, r1
   263f0:	movw	r0, #0
   263f4:	str	r0, [sp, #64]	; 0x40
   263f8:	beq	2644c <__assert_fail@plt+0x13894>
   263fc:	ldr	r0, [fp, #-16]
   26400:	ldr	r1, [fp, #-28]	; 0xffffffe4
   26404:	add	r0, r0, r1, lsl #2
   26408:	ldr	r0, [r0]
   2640c:	ldrb	r0, [r0]
   26410:	cmp	r0, #59	; 0x3b
   26414:	movw	r0, #1
   26418:	str	r0, [sp, #60]	; 0x3c
   2641c:	bne	26444 <__assert_fail@plt+0x1388c>
   26420:	ldr	r0, [fp, #-16]
   26424:	ldr	r1, [fp, #-28]	; 0xffffffe4
   26428:	add	r0, r0, r1, lsl #2
   2642c:	ldr	r0, [r0]
   26430:	ldrb	r0, [r0, #1]
   26434:	cmp	r0, #0
   26438:	movw	r0, #0
   2643c:	movne	r0, #1
   26440:	str	r0, [sp, #60]	; 0x3c
   26444:	ldr	r0, [sp, #60]	; 0x3c
   26448:	str	r0, [sp, #64]	; 0x40
   2644c:	ldr	r0, [sp, #64]	; 0x40
   26450:	tst	r0, #1
   26454:	beq	26584 <__assert_fail@plt+0x139cc>
   26458:	ldrb	r0, [fp, #-37]	; 0xffffffdb
   2645c:	tst	r0, #1
   26460:	beq	264b8 <__assert_fail@plt+0x13900>
   26464:	ldr	r0, [fp, #-16]
   26468:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2646c:	add	r0, r0, r1, lsl #2
   26470:	ldr	r0, [r0]
   26474:	ldrb	r0, [r0]
   26478:	cmp	r0, #43	; 0x2b
   2647c:	bne	264b8 <__assert_fail@plt+0x13900>
   26480:	ldr	r0, [fp, #-16]
   26484:	ldr	r1, [fp, #-28]	; 0xffffffe4
   26488:	add	r0, r0, r1, lsl #2
   2648c:	ldr	r0, [r0]
   26490:	ldrb	r0, [r0, #1]
   26494:	cmp	r0, #0
   26498:	bne	264b8 <__assert_fail@plt+0x13900>
   2649c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   264a0:	cmp	r0, #0
   264a4:	beq	264b8 <__assert_fail@plt+0x13900>
   264a8:	ldr	r0, [fp, #-60]	; 0xffffffc4
   264ac:	movw	r1, #1
   264b0:	strb	r1, [r0, #40]	; 0x28
   264b4:	b	26584 <__assert_fail@plt+0x139cc>
   264b8:	mov	r0, #0
   264bc:	str	r0, [fp, #-36]	; 0xffffffdc
   264c0:	ldr	r0, [fp, #-16]
   264c4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   264c8:	add	r0, r0, r1, lsl #2
   264cc:	ldr	r0, [r0]
   264d0:	movw	r1, #44213	; 0xacb5
   264d4:	movt	r1, #7
   264d8:	bl	30150 <__assert_fail@plt+0x1d598>
   264dc:	movw	r1, #0
   264e0:	cmp	r0, r1
   264e4:	beq	26570 <__assert_fail@plt+0x139b8>
   264e8:	mov	r0, #1
   264ec:	str	r0, [fp, #-36]	; 0xffffffdc
   264f0:	ldr	r0, [fp, #-16]
   264f4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   264f8:	add	r0, r0, r1, lsl #2
   264fc:	ldr	r0, [r0]
   26500:	str	r0, [fp, #-48]	; 0xffffffd0
   26504:	ldr	r0, [fp, #-44]	; 0xffffffd4
   26508:	add	r0, r0, #1
   2650c:	str	r0, [fp, #-44]	; 0xffffffd4
   26510:	ldr	r0, [fp, #-28]	; 0xffffffe4
   26514:	movw	r1, #0
   26518:	cmp	r1, r0
   2651c:	bne	2656c <__assert_fail@plt+0x139b4>
   26520:	ldr	r0, [fp, #-52]	; 0xffffffcc
   26524:	movw	r1, #20760	; 0x5118
   26528:	movt	r1, #1
   2652c:	cmp	r0, r1
   26530:	beq	26548 <__assert_fail@plt+0x13990>
   26534:	ldr	r0, [fp, #-52]	; 0xffffffcc
   26538:	movw	r1, #24336	; 0x5f10
   2653c:	movt	r1, #1
   26540:	cmp	r0, r1
   26544:	bne	2656c <__assert_fail@plt+0x139b4>
   26548:	movw	r0, #44216	; 0xacb8
   2654c:	movt	r0, #7
   26550:	bl	12864 <gettext@plt>
   26554:	movw	lr, #1
   26558:	str	r0, [sp, #56]	; 0x38
   2655c:	mov	r0, lr
   26560:	movw	r1, #0
   26564:	ldr	r2, [sp, #56]	; 0x38
   26568:	bl	12780 <error@plt>
   2656c:	b	26570 <__assert_fail@plt+0x139b8>
   26570:	b	26574 <__assert_fail@plt+0x139bc>
   26574:	ldr	r0, [fp, #-28]	; 0xffffffe4
   26578:	add	r0, r0, #1
   2657c:	str	r0, [fp, #-28]	; 0xffffffe4
   26580:	b	263d8 <__assert_fail@plt+0x13820>
   26584:	ldr	r0, [fp, #-28]	; 0xffffffe4
   26588:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2658c:	cmp	r0, r1
   26590:	beq	265b0 <__assert_fail@plt+0x139f8>
   26594:	ldr	r0, [fp, #-16]
   26598:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2659c:	add	r0, r0, r1, lsl #2
   265a0:	ldr	r0, [r0]
   265a4:	movw	r1, #0
   265a8:	cmp	r0, r1
   265ac:	bne	265d4 <__assert_fail@plt+0x13a1c>
   265b0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   265b4:	ldr	r1, [fp, #-20]	; 0xffffffec
   265b8:	str	r0, [r1]
   265bc:	ldr	r0, [fp, #-60]	; 0xffffffc4
   265c0:	bl	50c68 <__assert_fail@plt+0x3e0b0>
   265c4:	movw	r0, #0
   265c8:	and	r0, r0, #1
   265cc:	strb	r0, [fp, #-1]
   265d0:	b	269d8 <__assert_fail@plt+0x13e20>
   265d4:	ldr	r0, [fp, #-60]	; 0xffffffc4
   265d8:	ldrb	r0, [r0, #40]	; 0x28
   265dc:	tst	r0, #1
   265e0:	beq	26748 <__assert_fail@plt+0x13b90>
   265e4:	ldr	r0, [fp, #-52]	; 0xffffffcc
   265e8:	movw	r1, #20760	; 0x5118
   265ec:	movt	r1, #1
   265f0:	cmp	r0, r1
   265f4:	bne	26608 <__assert_fail@plt+0x13a50>
   265f8:	movw	r0, #44943	; 0xaf8f
   265fc:	movt	r0, #7
   26600:	str	r0, [fp, #-68]	; 0xffffffbc
   26604:	b	26614 <__assert_fail@plt+0x13a5c>
   26608:	movw	r0, #39197	; 0x991d
   2660c:	movt	r0, #7
   26610:	str	r0, [fp, #-68]	; 0xffffffbc
   26614:	ldr	r0, [fp, #-44]	; 0xffffffd4
   26618:	cmp	r0, #1
   2661c:	ble	26648 <__assert_fail@plt+0x13a90>
   26620:	movw	r0, #44330	; 0xad2a
   26624:	movt	r0, #7
   26628:	bl	12864 <gettext@plt>
   2662c:	ldr	r3, [fp, #-68]	; 0xffffffbc
   26630:	movw	lr, #1
   26634:	str	r0, [sp, #52]	; 0x34
   26638:	mov	r0, lr
   2663c:	movw	r1, #0
   26640:	ldr	r2, [sp, #52]	; 0x34
   26644:	bl	12780 <error@plt>
   26648:	ldr	r0, [fp, #-48]	; 0xffffffd0
   2664c:	bl	12888 <strlen@plt>
   26650:	cmp	r0, #2
   26654:	beq	26740 <__assert_fail@plt+0x13b88>
   26658:	add	r0, sp, #73	; 0x49
   2665c:	ldr	r3, [fp, #-68]	; 0xffffffbc
   26660:	movw	r1, #19
   26664:	movw	r2, #44386	; 0xad62
   26668:	movt	r2, #7
   2666c:	bl	128e8 <snprintf@plt>
   26670:	str	r0, [sp, #68]	; 0x44
   26674:	ldr	r0, [sp, #68]	; 0x44
   26678:	cmp	r0, #19
   2667c:	bhi	26684 <__assert_fail@plt+0x13acc>
   26680:	b	266a4 <__assert_fail@plt+0x13aec>
   26684:	movw	r0, #44403	; 0xad73
   26688:	movt	r0, #7
   2668c:	movw	r1, #42747	; 0xa6fb
   26690:	movt	r1, #7
   26694:	movw	r2, #3014	; 0xbc6
   26698:	movw	r3, #44133	; 0xac65
   2669c:	movt	r3, #7
   266a0:	bl	12bb8 <__assert_fail@plt>
   266a4:	movw	r0, #44424	; 0xad88
   266a8:	movt	r0, #7
   266ac:	bl	12864 <gettext@plt>
   266b0:	add	r2, sp, #73	; 0x49
   266b4:	movw	lr, #136	; 0x88
   266b8:	movt	lr, #9
   266bc:	ldr	r1, [lr, #72]	; 0x48
   266c0:	movw	lr, #0
   266c4:	str	r0, [sp, #48]	; 0x30
   266c8:	mov	r0, lr
   266cc:	bl	4a828 <__assert_fail@plt+0x37c70>
   266d0:	movw	r1, #136	; 0x88
   266d4:	movt	r1, #9
   266d8:	ldr	r1, [r1, #72]	; 0x48
   266dc:	movw	r2, #1
   266e0:	str	r0, [sp, #44]	; 0x2c
   266e4:	mov	r0, r2
   266e8:	movw	r2, #44213	; 0xacb5
   266ec:	movt	r2, #7
   266f0:	bl	4a828 <__assert_fail@plt+0x37c70>
   266f4:	movw	r1, #136	; 0x88
   266f8:	movt	r1, #9
   266fc:	ldr	r1, [r1, #72]	; 0x48
   26700:	ldr	r2, [fp, #-48]	; 0xffffffd0
   26704:	movw	lr, #2
   26708:	str	r0, [sp, #40]	; 0x28
   2670c:	mov	r0, lr
   26710:	bl	4a828 <__assert_fail@plt+0x37c70>
   26714:	movw	r1, #1
   26718:	str	r0, [sp, #36]	; 0x24
   2671c:	mov	r0, r1
   26720:	movw	r1, #0
   26724:	ldr	r2, [sp, #48]	; 0x30
   26728:	ldr	r3, [sp, #44]	; 0x2c
   2672c:	ldr	lr, [sp, #40]	; 0x28
   26730:	str	lr, [sp]
   26734:	ldr	ip, [sp, #36]	; 0x24
   26738:	str	ip, [sp, #4]
   2673c:	bl	12780 <error@plt>
   26740:	b	26744 <__assert_fail@plt+0x13b8c>
   26744:	b	26748 <__assert_fail@plt+0x13b90>
   26748:	ldr	r0, [fp, #-64]	; 0xffffffc0
   2674c:	add	r0, r0, #4
   26750:	mov	r1, #2048	; 0x800
   26754:	bl	28a80 <__assert_fail@plt+0x15ec8>
   26758:	str	r0, [fp, #-56]	; 0xffffffc8
   2675c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   26760:	cmp	r0, #0
   26764:	str	r0, [sp, #32]
   26768:	beq	267a8 <__assert_fail@plt+0x13bf0>
   2676c:	b	26770 <__assert_fail@plt+0x13bb8>
   26770:	ldr	r0, [sp, #32]
   26774:	sub	r1, r0, #1
   26778:	cmp	r1, #1
   2677c:	bhi	267ac <__assert_fail@plt+0x13bf4>
   26780:	b	26784 <__assert_fail@plt+0x13bcc>
   26784:	movw	r0, #44481	; 0xadc1
   26788:	movt	r0, #7
   2678c:	bl	12864 <gettext@plt>
   26790:	movw	lr, #1
   26794:	str	r0, [sp, #28]
   26798:	mov	r0, lr
   2679c:	movw	r1, #0
   267a0:	ldr	r2, [sp, #28]
   267a4:	bl	12780 <error@plt>
   267a8:	b	267ac <__assert_fail@plt+0x13bf4>
   267ac:	ldr	r0, [fp, #-64]	; 0xffffffc0
   267b0:	add	r0, r0, #4
   267b4:	bl	28bfc <__assert_fail@plt+0x16044>
   267b8:	ldr	r0, [fp, #-64]	; 0xffffffc0
   267bc:	movw	lr, #31408	; 0x7ab0
   267c0:	movt	lr, #1
   267c4:	str	lr, [r0, #36]	; 0x24
   267c8:	ldr	r0, [fp, #-60]	; 0xffffffc4
   267cc:	ldrb	r0, [r0, #40]	; 0x28
   267d0:	tst	r0, #1
   267d4:	beq	268bc <__assert_fail@plt+0x13d04>
   267d8:	ldr	r0, [fp, #-64]	; 0xffffffc0
   267dc:	movw	r1, #0
   267e0:	str	r1, [r0, #92]	; 0x5c
   267e4:	ldr	r0, [fp, #-64]	; 0xffffffc0
   267e8:	str	r1, [r0, #28]
   267ec:	ldr	r0, [fp, #-64]	; 0xffffffc0
   267f0:	str	r1, [r0, #24]
   267f4:	ldr	r0, [fp, #-64]	; 0xffffffc0
   267f8:	str	r1, [r0, #40]	; 0x28
   267fc:	ldr	r0, [fp, #-64]	; 0xffffffc0
   26800:	str	r1, [r0, #44]	; 0x2c
   26804:	ldr	r0, [fp, #-28]	; 0xffffffe4
   26808:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2680c:	sub	r0, r0, r1
   26810:	sub	r0, r0, #1
   26814:	ldr	r1, [fp, #-64]	; 0xffffffc0
   26818:	str	r0, [r1, #32]
   2681c:	ldr	r0, [fp, #-64]	; 0xffffffc0
   26820:	add	r0, r0, #4
   26824:	ldr	r1, [fp, #-64]	; 0xffffffc0
   26828:	add	r1, r1, #48	; 0x30
   2682c:	ldr	r2, [fp, #-64]	; 0xffffffc0
   26830:	bl	28c70 <__assert_fail@plt+0x160b8>
   26834:	ldr	r0, [fp, #-24]	; 0xffffffe8
   26838:	str	r0, [fp, #-32]	; 0xffffffe0
   2683c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   26840:	ldr	r1, [fp, #-28]	; 0xffffffe4
   26844:	sub	r1, r1, #1
   26848:	cmp	r0, r1
   2684c:	bge	268b8 <__assert_fail@plt+0x13d00>
   26850:	ldr	r0, [fp, #-64]	; 0xffffffc0
   26854:	add	r1, r0, #4
   26858:	add	r0, r0, #48	; 0x30
   2685c:	ldr	r2, [fp, #-16]
   26860:	ldr	r3, [fp, #-32]	; 0xffffffe0
   26864:	ldr	r3, [r2, r3, lsl #2]!
   26868:	ldr	r2, [r2]
   2686c:	str	r0, [sp, #24]
   26870:	mov	r0, r2
   26874:	str	r1, [sp, #20]
   26878:	str	r3, [sp, #16]
   2687c:	bl	12888 <strlen@plt>
   26880:	add	r3, r0, #1
   26884:	ldr	r0, [sp, #20]
   26888:	ldr	r1, [sp, #24]
   2688c:	ldr	r2, [sp, #16]
   26890:	movw	lr, #0
   26894:	str	lr, [sp]
   26898:	str	lr, [sp, #4]
   2689c:	movw	lr, #1
   268a0:	str	lr, [sp, #8]
   268a4:	bl	28010 <__assert_fail@plt+0x15458>
   268a8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   268ac:	add	r0, r0, #1
   268b0:	str	r0, [fp, #-32]	; 0xffffffe0
   268b4:	b	2683c <__assert_fail@plt+0x13c84>
   268b8:	b	26990 <__assert_fail@plt+0x13dd8>
   268bc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   268c0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   268c4:	sub	r0, r0, r1
   268c8:	ldr	r1, [fp, #-64]	; 0xffffffc0
   268cc:	str	r0, [r1, #96]	; 0x60
   268d0:	ldr	r0, [fp, #-64]	; 0xffffffc0
   268d4:	movw	r1, #44213	; 0xacb5
   268d8:	movt	r1, #7
   268dc:	str	r1, [r0, #28]
   268e0:	ldr	r0, [fp, #-64]	; 0xffffffc0
   268e4:	ldr	r0, [r0, #28]
   268e8:	bl	12888 <strlen@plt>
   268ec:	ldr	r1, [fp, #-64]	; 0xffffffc0
   268f0:	str	r0, [r1, #24]
   268f4:	ldr	r0, [fp, #-64]	; 0xffffffc0
   268f8:	mov	r1, #0
   268fc:	str	r1, [r0, #40]	; 0x28
   26900:	ldr	r0, [fp, #-64]	; 0xffffffc0
   26904:	str	r1, [r0, #44]	; 0x2c
   26908:	ldr	r0, [fp, #-64]	; 0xffffffc0
   2690c:	ldr	r0, [r0, #96]	; 0x60
   26910:	lsl	r0, r0, #2
   26914:	bl	4c394 <__assert_fail@plt+0x397dc>
   26918:	ldr	r1, [fp, #-64]	; 0xffffffc0
   2691c:	str	r0, [r1, #92]	; 0x5c
   26920:	ldr	r0, [fp, #-64]	; 0xffffffc0
   26924:	add	r0, r0, #4
   26928:	ldr	r1, [fp, #-64]	; 0xffffffc0
   2692c:	add	r1, r1, #48	; 0x30
   26930:	ldr	lr, [fp, #-64]	; 0xffffffc0
   26934:	mov	r2, lr
   26938:	bl	28c70 <__assert_fail@plt+0x160b8>
   2693c:	movw	r0, #0
   26940:	str	r0, [fp, #-32]	; 0xffffffe0
   26944:	ldr	r0, [fp, #-32]	; 0xffffffe0
   26948:	ldr	r1, [fp, #-64]	; 0xffffffc0
   2694c:	ldr	r1, [r1, #96]	; 0x60
   26950:	cmp	r0, r1
   26954:	bge	2698c <__assert_fail@plt+0x13dd4>
   26958:	ldr	r0, [fp, #-16]
   2695c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   26960:	ldr	r2, [fp, #-24]	; 0xffffffe8
   26964:	add	r2, r1, r2
   26968:	ldr	r0, [r0, r2, lsl #2]
   2696c:	ldr	r2, [fp, #-64]	; 0xffffffc0
   26970:	ldr	r2, [r2, #92]	; 0x5c
   26974:	add	r1, r2, r1, lsl #2
   26978:	str	r0, [r1]
   2697c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   26980:	add	r0, r0, #1
   26984:	str	r0, [fp, #-32]	; 0xffffffe0
   26988:	b	26944 <__assert_fail@plt+0x13d8c>
   2698c:	b	26990 <__assert_fail@plt+0x13dd8>
   26990:	ldr	r0, [fp, #-16]
   26994:	ldr	r1, [fp, #-28]	; 0xffffffe4
   26998:	add	r0, r0, r1, lsl #2
   2699c:	ldr	r0, [r0]
   269a0:	movw	r1, #0
   269a4:	cmp	r0, r1
   269a8:	bne	269bc <__assert_fail@plt+0x13e04>
   269ac:	ldr	r0, [fp, #-28]	; 0xffffffe4
   269b0:	ldr	r1, [fp, #-20]	; 0xffffffec
   269b4:	str	r0, [r1]
   269b8:	b	269cc <__assert_fail@plt+0x13e14>
   269bc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   269c0:	add	r0, r0, #1
   269c4:	ldr	r1, [fp, #-20]	; 0xffffffec
   269c8:	str	r0, [r1]
   269cc:	movw	r0, #1
   269d0:	and	r0, r0, #1
   269d4:	strb	r0, [fp, #-1]
   269d8:	ldrb	r0, [fp, #-1]
   269dc:	and	r0, r0, #1
   269e0:	mov	sp, fp
   269e4:	pop	{fp, pc}
   269e8:	push	{fp, lr}
   269ec:	mov	fp, sp
   269f0:	sub	sp, sp, #56	; 0x38
   269f4:	str	r0, [fp, #-4]
   269f8:	movw	r0, #44933	; 0xaf85
   269fc:	movt	r0, #7
   26a00:	bl	127bc <getenv@plt>
   26a04:	str	r0, [fp, #-8]
   26a08:	movw	r0, #34294	; 0x85f6
   26a0c:	movt	r0, #7
   26a10:	str	r0, [fp, #-12]
   26a14:	ldr	r0, [fp, #-8]
   26a18:	movw	lr, #0
   26a1c:	cmp	lr, r0
   26a20:	bne	26a28 <__assert_fail@plt+0x13e70>
   26a24:	b	26b90 <__assert_fail@plt+0x13fd8>
   26a28:	ldr	r0, [fp, #-8]
   26a2c:	ldr	r1, [fp, #-12]
   26a30:	movw	r2, #1
   26a34:	and	r2, r2, #1
   26a38:	sub	r3, fp, #16
   26a3c:	sub	ip, fp, #20
   26a40:	str	ip, [sp]
   26a44:	bl	2b86c <__assert_fail@plt+0x18cb4>
   26a48:	str	r0, [sp, #28]
   26a4c:	ldr	r0, [fp, #-20]	; 0xffffffec
   26a50:	movw	r1, #0
   26a54:	cmp	r1, r0
   26a58:	beq	26a84 <__assert_fail@plt+0x13ecc>
   26a5c:	ldr	r0, [fp, #-20]	; 0xffffffec
   26a60:	movw	r1, #1
   26a64:	cmp	r1, r0
   26a68:	bne	26aac <__assert_fail@plt+0x13ef4>
   26a6c:	ldr	r0, [fp, #-8]
   26a70:	ldr	r1, [fp, #-16]
   26a74:	add	r0, r0, r1
   26a78:	ldrb	r0, [r0]
   26a7c:	cmp	r0, #46	; 0x2e
   26a80:	bne	26aac <__assert_fail@plt+0x13ef4>
   26a84:	movw	r0, #44522	; 0xadea
   26a88:	movt	r0, #7
   26a8c:	bl	12864 <gettext@plt>
   26a90:	ldr	r3, [fp, #-4]
   26a94:	movw	lr, #1
   26a98:	str	r0, [sp, #24]
   26a9c:	mov	r0, lr
   26aa0:	movw	r1, #0
   26aa4:	ldr	r2, [sp, #24]
   26aa8:	bl	12780 <error@plt>
   26aac:	ldr	r0, [fp, #-8]
   26ab0:	ldr	r1, [fp, #-16]
   26ab4:	add	r0, r0, r1
   26ab8:	ldrb	r0, [r0]
   26abc:	cmp	r0, #47	; 0x2f
   26ac0:	beq	26b60 <__assert_fail@plt+0x13fa8>
   26ac4:	ldr	r0, [fp, #-8]
   26ac8:	ldr	r1, [fp, #-16]
   26acc:	add	r0, r0, r1
   26ad0:	ldr	r1, [fp, #-20]	; 0xffffffec
   26ad4:	bl	125a0 <strndup@plt>
   26ad8:	str	r0, [fp, #-24]	; 0xffffffe8
   26adc:	movw	r0, #44773	; 0xaee5
   26ae0:	movt	r0, #7
   26ae4:	bl	12864 <gettext@plt>
   26ae8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   26aec:	movw	lr, #0
   26af0:	cmp	r1, lr
   26af4:	str	r0, [sp, #20]
   26af8:	beq	26b08 <__assert_fail@plt+0x13f50>
   26afc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   26b00:	str	r0, [sp, #16]
   26b04:	b	26b18 <__assert_fail@plt+0x13f60>
   26b08:	ldr	r0, [fp, #-8]
   26b0c:	ldr	r1, [fp, #-16]
   26b10:	add	r0, r0, r1
   26b14:	str	r0, [sp, #16]
   26b18:	ldr	r0, [sp, #16]
   26b1c:	movw	r1, #0
   26b20:	str	r0, [sp, #12]
   26b24:	mov	r0, r1
   26b28:	ldr	r1, [sp, #12]
   26b2c:	bl	1da90 <__assert_fail@plt+0xaed8>
   26b30:	ldr	r1, [fp, #-4]
   26b34:	movw	lr, #1
   26b38:	str	r0, [sp, #8]
   26b3c:	mov	r0, lr
   26b40:	movw	lr, #0
   26b44:	str	r1, [sp, #4]
   26b48:	mov	r1, lr
   26b4c:	ldr	r2, [sp, #20]
   26b50:	ldr	r3, [sp, #8]
   26b54:	ldr	lr, [sp, #4]
   26b58:	str	lr, [sp]
   26b5c:	bl	12780 <error@plt>
   26b60:	b	26b64 <__assert_fail@plt+0x13fac>
   26b64:	b	26b68 <__assert_fail@plt+0x13fb0>
   26b68:	ldr	r0, [fp, #-8]
   26b6c:	ldr	r1, [fp, #-12]
   26b70:	movw	r2, #0
   26b74:	and	r2, r2, #1
   26b78:	sub	r3, fp, #16
   26b7c:	sub	ip, fp, #20
   26b80:	str	ip, [sp]
   26b84:	bl	2b86c <__assert_fail@plt+0x18cb4>
   26b88:	tst	r0, #1
   26b8c:	bne	26a4c <__assert_fail@plt+0x13e94>
   26b90:	mov	sp, fp
   26b94:	pop	{fp, pc}
   26b98:	push	{fp, lr}
   26b9c:	mov	fp, sp
   26ba0:	sub	sp, sp, #16
   26ba4:	str	r0, [fp, #-4]
   26ba8:	str	r1, [sp, #8]
   26bac:	ldr	r0, [fp, #-4]
   26bb0:	bl	1badc <__assert_fail@plt+0x8f24>
   26bb4:	str	r0, [sp, #4]
   26bb8:	ldr	r0, [sp, #8]
   26bbc:	movw	r1, #0
   26bc0:	cmp	r0, r1
   26bc4:	beq	26bdc <__assert_fail@plt+0x14024>
   26bc8:	ldr	r0, [sp, #8]
   26bcc:	ldr	r1, [sp, #4]
   26bd0:	add	r1, r1, #40	; 0x28
   26bd4:	bl	26c18 <__assert_fail@plt+0x14060>
   26bd8:	b	26be8 <__assert_fail@plt+0x14030>
   26bdc:	ldr	r0, [sp, #4]
   26be0:	add	r0, r0, #40	; 0x28
   26be4:	bl	22058 <__assert_fail@plt+0xf4a0>
   26be8:	ldr	r0, [sp, #4]
   26bec:	movw	r1, #1
   26bf0:	strb	r1, [r0, #17]
   26bf4:	ldr	r0, [sp, #4]
   26bf8:	strb	r1, [r0, #16]
   26bfc:	ldr	r0, [sp, #4]
   26c00:	vmov.f32	s0, #112	; 0x3f800000  1.0
   26c04:	vstr	s0, [r0, #28]
   26c08:	movw	r0, #1
   26c0c:	and	r0, r0, #1
   26c10:	mov	sp, fp
   26c14:	pop	{fp, pc}
   26c18:	push	{fp, lr}
   26c1c:	mov	fp, sp
   26c20:	sub	sp, sp, #8
   26c24:	str	r0, [sp, #4]
   26c28:	str	r1, [sp]
   26c2c:	ldr	r0, [sp]
   26c30:	movw	r1, #0
   26c34:	str	r1, [r0]
   26c38:	mov	r0, r1
   26c3c:	bl	4875c <__assert_fail@plt+0x35ba4>
   26c40:	ldr	r1, [sp]
   26c44:	str	r0, [r1, #16]
   26c48:	ldr	r0, [sp, #4]
   26c4c:	movw	r1, #44947	; 0xaf93
   26c50:	movt	r1, #7
   26c54:	bl	124c8 <strcmp@plt>
   26c58:	cmp	r0, #0
   26c5c:	bne	26c8c <__assert_fail@plt+0x140d4>
   26c60:	movw	r0, #63272	; 0xf728
   26c64:	movt	r0, #8
   26c68:	ldr	r0, [r0]
   26c6c:	ldr	r1, [sp]
   26c70:	str	r0, [r1, #4]
   26c74:	movw	r0, #44959	; 0xaf9f
   26c78:	movt	r0, #7
   26c7c:	bl	12864 <gettext@plt>
   26c80:	ldr	r1, [sp]
   26c84:	str	r0, [r1, #8]
   26c88:	b	26d24 <__assert_fail@plt+0x1416c>
   26c8c:	ldr	r0, [sp, #4]
   26c90:	movw	r1, #44974	; 0xafae
   26c94:	movt	r1, #7
   26c98:	bl	124c8 <strcmp@plt>
   26c9c:	cmp	r0, #0
   26ca0:	bne	26cd0 <__assert_fail@plt+0x14118>
   26ca4:	movw	r0, #63284	; 0xf734
   26ca8:	movt	r0, #8
   26cac:	ldr	r0, [r0]
   26cb0:	ldr	r1, [sp]
   26cb4:	str	r0, [r1, #4]
   26cb8:	movw	r0, #39257	; 0x9959
   26cbc:	movt	r0, #7
   26cc0:	bl	12864 <gettext@plt>
   26cc4:	ldr	r1, [sp]
   26cc8:	str	r0, [r1, #8]
   26ccc:	b	26d20 <__assert_fail@plt+0x14168>
   26cd0:	movw	r0, #92	; 0x5c
   26cd4:	movt	r0, #9
   26cd8:	ldr	r0, [r0, #36]	; 0x24
   26cdc:	ldr	r1, [sp, #4]
   26ce0:	bl	1df24 <__assert_fail@plt+0xb36c>
   26ce4:	ldr	r1, [sp]
   26ce8:	str	r0, [r1, #4]
   26cec:	ldr	r0, [sp, #4]
   26cf0:	ldr	r1, [sp]
   26cf4:	str	r0, [r1, #8]
   26cf8:	ldr	r0, [sp]
   26cfc:	ldr	r0, [r0, #4]
   26d00:	movw	r1, #0
   26d04:	cmp	r0, r1
   26d08:	bne	26d1c <__assert_fail@plt+0x14164>
   26d0c:	bl	128d0 <__errno_location@plt>
   26d10:	ldr	r0, [r0]
   26d14:	ldr	r1, [sp, #4]
   26d18:	bl	1dbac <__assert_fail@plt+0xaff4>
   26d1c:	b	26d20 <__assert_fail@plt+0x14168>
   26d20:	b	26d24 <__assert_fail@plt+0x1416c>
   26d24:	ldr	r0, [sp]
   26d28:	ldr	r0, [r0, #4]
   26d2c:	bl	26d44 <__assert_fail@plt+0x1418c>
   26d30:	ldr	lr, [sp]
   26d34:	and	r0, r0, #1
   26d38:	strb	r0, [lr, #12]
   26d3c:	mov	sp, fp
   26d40:	pop	{fp, pc}
   26d44:	push	{fp, lr}
   26d48:	mov	fp, sp
   26d4c:	sub	sp, sp, #16
   26d50:	str	r0, [sp, #8]
   26d54:	ldr	r0, [sp, #8]
   26d58:	bl	12948 <fileno@plt>
   26d5c:	str	r0, [sp, #4]
   26d60:	ldr	r0, [sp, #4]
   26d64:	mvn	lr, #0
   26d68:	cmp	lr, r0
   26d6c:	bne	26d80 <__assert_fail@plt+0x141c8>
   26d70:	movw	r0, #0
   26d74:	and	r0, r0, #1
   26d78:	strb	r0, [fp, #-1]
   26d7c:	b	26db4 <__assert_fail@plt+0x141fc>
   26d80:	ldr	r0, [sp, #4]
   26d84:	bl	12b28 <isatty@plt>
   26d88:	cmp	r0, #0
   26d8c:	movw	r0, #0
   26d90:	movne	r0, #1
   26d94:	tst	r0, #1
   26d98:	movw	r0, #1
   26d9c:	moveq	r0, #0
   26da0:	cmp	r0, #0
   26da4:	movw	r0, #0
   26da8:	movne	r0, #1
   26dac:	and	r0, r0, #1
   26db0:	strb	r0, [fp, #-1]
   26db4:	ldrb	r0, [fp, #-1]
   26db8:	and	r0, r0, #1
   26dbc:	mov	sp, fp
   26dc0:	pop	{fp, pc}
   26dc4:	push	{fp, lr}
   26dc8:	mov	fp, sp
   26dcc:	sub	sp, sp, #16
   26dd0:	str	r0, [fp, #-4]
   26dd4:	str	r1, [sp, #8]
   26dd8:	ldr	r0, [fp, #-4]
   26ddc:	ldr	r1, [sp, #8]
   26de0:	bl	1ba74 <__assert_fail@plt+0x8ebc>
   26de4:	str	r0, [sp, #4]
   26de8:	ldr	r0, [sp, #8]
   26dec:	movw	r1, #0
   26df0:	cmp	r0, r1
   26df4:	beq	26e0c <__assert_fail@plt+0x14254>
   26df8:	ldr	r0, [sp, #8]
   26dfc:	ldr	r1, [sp, #4]
   26e00:	add	r1, r1, #40	; 0x28
   26e04:	bl	26c18 <__assert_fail@plt+0x14060>
   26e08:	b	26e18 <__assert_fail@plt+0x14260>
   26e0c:	ldr	r0, [sp, #4]
   26e10:	add	r0, r0, #40	; 0x28
   26e14:	bl	22058 <__assert_fail@plt+0xf4a0>
   26e18:	ldr	r0, [sp, #4]
   26e1c:	movw	r1, #1
   26e20:	strb	r1, [r0, #17]
   26e24:	ldr	r0, [sp, #4]
   26e28:	strb	r1, [r0, #16]
   26e2c:	ldr	r0, [sp, #4]
   26e30:	movw	r1, #0
   26e34:	strb	r1, [r0, #19]
   26e38:	ldr	r0, [sp, #4]
   26e3c:	strb	r1, [r0, #18]
   26e40:	ldr	r0, [sp, #4]
   26e44:	vmov.f32	s0, #112	; 0x3f800000  1.0
   26e48:	vstr	s0, [r0, #28]
   26e4c:	movw	r0, #1
   26e50:	and	r0, r0, #1
   26e54:	mov	sp, fp
   26e58:	pop	{fp, pc}
   26e5c:	push	{fp, lr}
   26e60:	mov	fp, sp
   26e64:	sub	sp, sp, #120	; 0x78
   26e68:	str	r0, [fp, #-8]
   26e6c:	movw	r0, #34136	; 0x8558
   26e70:	movt	r0, #7
   26e74:	str	r0, [sp, #4]
   26e78:	ldr	r0, [sp, #4]
   26e7c:	add	r1, sp, #8
   26e80:	bl	77a84 <__assert_fail@plt+0x64ecc>
   26e84:	movw	r1, #0
   26e88:	cmp	r1, r0
   26e8c:	bne	26ed0 <__assert_fail@plt+0x14318>
   26e90:	ldr	r1, [sp, #4]
   26e94:	add	r0, sp, #8
   26e98:	bl	21384 <__assert_fail@plt+0xe7cc>
   26e9c:	str	r0, [sp]
   26ea0:	ldr	r0, [fp, #-8]
   26ea4:	ldr	r1, [sp]
   26ea8:	bl	124c8 <strcmp@plt>
   26eac:	movw	r1, #0
   26eb0:	cmp	r1, r0
   26eb4:	bne	26ec4 <__assert_fail@plt+0x1430c>
   26eb8:	vldr	s0, [pc, #40]	; 26ee8 <__assert_fail@plt+0x14330>
   26ebc:	vstr	s0, [fp, #-4]
   26ec0:	b	26ed8 <__assert_fail@plt+0x14320>
   26ec4:	vldr	s0, [pc, #24]	; 26ee4 <__assert_fail@plt+0x1432c>
   26ec8:	vstr	s0, [fp, #-4]
   26ecc:	b	26ed8 <__assert_fail@plt+0x14320>
   26ed0:	vmov.f32	s0, #112	; 0x3f800000  1.0
   26ed4:	vstr	s0, [fp, #-4]
   26ed8:	vldr	s0, [fp, #-4]
   26edc:	mov	sp, fp
   26ee0:	pop	{fp, pc}
   26ee4:			; <UNDEFINED> instruction: 0x3e99999a
   26ee8:	svccc	0x00333333
   26eec:	push	{fp, lr}
   26ef0:	mov	fp, sp
   26ef4:	sub	sp, sp, #8
   26ef8:	movw	r0, #43476	; 0xa9d4
   26efc:	movt	r0, #7
   26f00:	bl	21cf4 <__assert_fail@plt+0xf13c>
   26f04:	str	r0, [sp]
   26f08:	ldr	r0, [sp]
   26f0c:	bl	1badc <__assert_fail@plt+0x8f24>
   26f10:	vldr	s0, [pc, #60]	; 26f54 <__assert_fail@plt+0x1439c>
   26f14:	str	r0, [sp, #4]
   26f18:	ldr	r0, [sp, #4]
   26f1c:	movw	lr, #0
   26f20:	strb	lr, [r0, #19]
   26f24:	ldr	r0, [sp, #4]
   26f28:	strb	lr, [r0, #18]
   26f2c:	ldr	r0, [sp, #4]
   26f30:	strb	lr, [r0, #17]
   26f34:	ldr	r0, [sp, #4]
   26f38:	strb	lr, [r0, #16]
   26f3c:	ldr	r0, [sp, #4]
   26f40:	vstr	s0, [r0, #28]
   26f44:	movw	r0, #1
   26f48:	and	r0, r0, #1
   26f4c:	mov	sp, fp
   26f50:	pop	{fp, pc}
   26f54:	andeq	r0, r0, r0
   26f58:	push	{fp, lr}
   26f5c:	mov	fp, sp
   26f60:	sub	sp, sp, #88	; 0x58
   26f64:	str	r0, [fp, #-8]
   26f68:	str	r1, [fp, #-12]
   26f6c:	str	r2, [fp, #-16]
   26f70:	ldr	r0, [fp, #-8]
   26f74:	ldr	r1, [fp, #-12]
   26f78:	sub	r2, fp, #20
   26f7c:	bl	25c80 <__assert_fail@plt+0x130c8>
   26f80:	tst	r0, #1
   26f84:	beq	27170 <__assert_fail@plt+0x145b8>
   26f88:	ldr	r0, [fp, #-20]	; 0xffffffec
   26f8c:	sub	r1, fp, #32
   26f90:	sub	r2, fp, #36	; 0x24
   26f94:	bl	27184 <__assert_fail@plt+0x145cc>
   26f98:	tst	r0, #1
   26f9c:	beq	2716c <__assert_fail@plt+0x145b4>
   26fa0:	ldr	r0, [fp, #-16]
   26fa4:	ldr	r1, [fp, #-20]	; 0xffffffec
   26fa8:	bl	1ba74 <__assert_fail@plt+0x8ebc>
   26fac:	str	r0, [fp, #-40]	; 0xffffffd8
   26fb0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   26fb4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   26fb8:	str	r0, [r1, #40]	; 0x28
   26fbc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   26fc0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   26fc4:	ldr	lr, [fp, #-40]	; 0xffffffd8
   26fc8:	str	r1, [lr, #52]	; 0x34
   26fcc:	str	r0, [lr, #48]	; 0x30
   26fd0:	movw	r0, #136	; 0x88
   26fd4:	movt	r0, #9
   26fd8:	ldr	r0, [r0, #44]	; 0x2c
   26fdc:	and	r0, r0, #1
   26fe0:	cmp	r0, #0
   26fe4:	beq	27160 <__assert_fail@plt+0x145a8>
   26fe8:	movw	r0, #63272	; 0xf728
   26fec:	movt	r0, #8
   26ff0:	ldr	r0, [r0]
   26ff4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   26ff8:	ldr	r2, [r1, #4]
   26ffc:	movw	r1, #43837	; 0xab3d
   27000:	movt	r1, #7
   27004:	bl	128c4 <fprintf@plt>
   27008:	movw	r1, #63272	; 0xf728
   2700c:	movt	r1, #8
   27010:	ldr	r1, [r1]
   27014:	ldr	r2, [fp, #-36]	; 0xffffffdc
   27018:	cmp	r2, #0
   2701c:	str	r0, [sp, #44]	; 0x2c
   27020:	str	r1, [sp, #40]	; 0x28
   27024:	bne	27038 <__assert_fail@plt+0x14480>
   27028:	movw	r0, #43872	; 0xab60
   2702c:	movt	r0, #7
   27030:	str	r0, [sp, #36]	; 0x24
   27034:	b	27088 <__assert_fail@plt+0x144d0>
   27038:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2703c:	cmp	r0, #1
   27040:	bne	27054 <__assert_fail@plt+0x1449c>
   27044:	movw	r0, #54948	; 0xd6a4
   27048:	movt	r0, #7
   2704c:	str	r0, [sp, #32]
   27050:	b	27080 <__assert_fail@plt+0x144c8>
   27054:	ldr	r0, [fp, #-36]	; 0xffffffdc
   27058:	cmp	r0, #2
   2705c:	movw	r0, #0
   27060:	moveq	r0, #1
   27064:	tst	r0, #1
   27068:	movw	r0, #43888	; 0xab70
   2706c:	movt	r0, #7
   27070:	movw	r1, #43875	; 0xab63
   27074:	movt	r1, #7
   27078:	movne	r0, r1
   2707c:	str	r0, [sp, #32]
   27080:	ldr	r0, [sp, #32]
   27084:	str	r0, [sp, #36]	; 0x24
   27088:	ldr	r0, [sp, #36]	; 0x24
   2708c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   27090:	cmp	r1, #0
   27094:	str	r0, [sp, #28]
   27098:	bne	270ac <__assert_fail@plt+0x144f4>
   2709c:	movw	r0, #43878	; 0xab66
   270a0:	movt	r0, #7
   270a4:	str	r0, [sp, #24]
   270a8:	b	270fc <__assert_fail@plt+0x14544>
   270ac:	ldr	r0, [fp, #-36]	; 0xffffffdc
   270b0:	cmp	r0, #1
   270b4:	bne	270c8 <__assert_fail@plt+0x14510>
   270b8:	movw	r0, #43881	; 0xab69
   270bc:	movt	r0, #7
   270c0:	str	r0, [sp, #20]
   270c4:	b	270f4 <__assert_fail@plt+0x1453c>
   270c8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   270cc:	cmp	r0, #2
   270d0:	movw	r0, #0
   270d4:	moveq	r0, #1
   270d8:	tst	r0, #1
   270dc:	movw	r0, #43887	; 0xab6f
   270e0:	movt	r0, #7
   270e4:	movw	r1, #45037	; 0xafed
   270e8:	movt	r1, #7
   270ec:	movne	r0, r1
   270f0:	str	r0, [sp, #20]
   270f4:	ldr	r0, [sp, #20]
   270f8:	str	r0, [sp, #24]
   270fc:	ldr	r0, [sp, #24]
   27100:	movw	r1, #43851	; 0xab4b
   27104:	movt	r1, #7
   27108:	ldr	r2, [sp, #40]	; 0x28
   2710c:	str	r0, [sp, #16]
   27110:	mov	r0, r2
   27114:	ldr	r2, [sp, #28]
   27118:	ldr	r3, [sp, #16]
   2711c:	bl	128c4 <fprintf@plt>
   27120:	movw	r1, #63272	; 0xf728
   27124:	movt	r1, #8
   27128:	ldr	r1, [r1]
   2712c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   27130:	ldr	r3, [r2, #48]	; 0x30
   27134:	ldr	r2, [r2, #52]	; 0x34
   27138:	movw	lr, #45040	; 0xaff0
   2713c:	movt	lr, #7
   27140:	str	r0, [sp, #12]
   27144:	mov	r0, r1
   27148:	mov	r1, lr
   2714c:	str	r2, [sp, #8]
   27150:	mov	r2, r3
   27154:	ldr	r3, [sp, #8]
   27158:	bl	128c4 <fprintf@plt>
   2715c:	str	r0, [sp, #4]
   27160:	ldr	r0, [fp, #-40]	; 0xffffffd8
   27164:	str	r0, [fp, #-4]
   27168:	b	27178 <__assert_fail@plt+0x145c0>
   2716c:	b	27170 <__assert_fail@plt+0x145b8>
   27170:	movw	r0, #0
   27174:	str	r0, [fp, #-4]
   27178:	ldr	r0, [fp, #-4]
   2717c:	mov	sp, fp
   27180:	pop	{fp, pc}
   27184:	push	{fp, lr}
   27188:	mov	fp, sp
   2718c:	sub	sp, sp, #24
   27190:	str	r0, [fp, #-8]
   27194:	str	r1, [sp, #12]
   27198:	str	r2, [sp, #8]
   2719c:	ldr	r0, [fp, #-8]
   271a0:	movw	r1, #0
   271a4:	cmp	r0, r1
   271a8:	bne	271bc <__assert_fail@plt+0x14604>
   271ac:	movw	r0, #0
   271b0:	and	r0, r0, #1
   271b4:	strb	r0, [fp, #-1]
   271b8:	b	27228 <__assert_fail@plt+0x14670>
   271bc:	ldr	r0, [sp, #8]
   271c0:	movw	r1, #0
   271c4:	cmp	r0, r1
   271c8:	beq	271f4 <__assert_fail@plt+0x1463c>
   271cc:	ldr	r1, [sp, #8]
   271d0:	sub	r0, fp, #8
   271d4:	bl	25fb0 <__assert_fail@plt+0x133f8>
   271d8:	tst	r0, #1
   271dc:	bne	271f0 <__assert_fail@plt+0x14638>
   271e0:	movw	r0, #0
   271e4:	and	r0, r0, #1
   271e8:	strb	r0, [fp, #-1]
   271ec:	b	27228 <__assert_fail@plt+0x14670>
   271f0:	b	271f4 <__assert_fail@plt+0x1463c>
   271f4:	ldr	r0, [fp, #-8]
   271f8:	ldr	r3, [sp, #12]
   271fc:	add	r1, sp, #4
   27200:	movw	r2, #10
   27204:	movw	ip, #39197	; 0x991d
   27208:	movt	ip, #7
   2720c:	str	ip, [sp]
   27210:	bl	4f9e4 <__assert_fail@plt+0x3ce2c>
   27214:	cmp	r0, #0
   27218:	movw	r0, #0
   2721c:	moveq	r0, #1
   27220:	and	r0, r0, #1
   27224:	strb	r0, [fp, #-1]
   27228:	ldrb	r0, [fp, #-1]
   2722c:	and	r0, r0, #1
   27230:	mov	sp, fp
   27234:	pop	{fp, pc}
   27238:	push	{fp, lr}
   2723c:	mov	fp, sp
   27240:	sub	sp, sp, #16
   27244:	str	r0, [sp, #8]
   27248:	str	r1, [sp, #4]
   2724c:	ldr	r0, [sp, #8]
   27250:	movw	r1, #45278	; 0xb0de
   27254:	movt	r1, #7
   27258:	bl	12ad4 <strpbrk@plt>
   2725c:	movw	r1, #0
   27260:	cmp	r0, r1
   27264:	bne	27290 <__assert_fail@plt+0x146d8>
   27268:	ldr	r0, [sp, #4]
   2726c:	cmp	r0, #0
   27270:	beq	2729c <__assert_fail@plt+0x146e4>
   27274:	ldr	r0, [sp, #8]
   27278:	movw	r1, #35940	; 0x8c64
   2727c:	movt	r1, #7
   27280:	bl	12ad4 <strpbrk@plt>
   27284:	movw	r1, #0
   27288:	cmp	r0, r1
   2728c:	beq	2729c <__assert_fail@plt+0x146e4>
   27290:	vldr	s0, [pc, #28]	; 272b4 <__assert_fail@plt+0x146fc>
   27294:	vstr	s0, [fp, #-4]
   27298:	b	272a4 <__assert_fail@plt+0x146ec>
   2729c:	vldr	s0, [pc, #12]	; 272b0 <__assert_fail@plt+0x146f8>
   272a0:	vstr	s0, [fp, #-4]
   272a4:	vldr	s0, [fp, #-4]
   272a8:	mov	sp, fp
   272ac:	pop	{fp, pc}
   272b0:	stclcc	12, cr12, [ip, #820]	; 0x334
   272b4:	svccc	0x004ccccd
   272b8:	push	{fp, lr}
   272bc:	mov	fp, sp
   272c0:	sub	sp, sp, #8
   272c4:	movw	r0, #65208	; 0xfeb8
   272c8:	movt	r0, #8
   272cc:	ldrb	r0, [r0]
   272d0:	tst	r0, #1
   272d4:	bne	27378 <__assert_fail@plt+0x147c0>
   272d8:	movw	r0, #45301	; 0xb0f5
   272dc:	movt	r0, #7
   272e0:	str	r0, [sp, #4]
   272e4:	ldr	r1, [sp, #4]
   272e8:	movw	r2, #0
   272ec:	bl	127a4 <fnmatch@plt>
   272f0:	movw	r1, #0
   272f4:	cmp	r1, r0
   272f8:	bne	27344 <__assert_fail@plt+0x1478c>
   272fc:	movw	r0, #45305	; 0xb0f9
   27300:	movt	r0, #7
   27304:	movw	r1, #45301	; 0xb0f5
   27308:	movt	r1, #7
   2730c:	movw	r2, #0
   27310:	bl	127a4 <fnmatch@plt>
   27314:	movw	r1, #0
   27318:	cmp	r1, r0
   2731c:	beq	27344 <__assert_fail@plt+0x1478c>
   27320:	movw	r0, #45305	; 0xb0f9
   27324:	movt	r0, #7
   27328:	movw	r1, #45301	; 0xb0f5
   2732c:	movt	r1, #7
   27330:	movw	r2, #16
   27334:	bl	127a4 <fnmatch@plt>
   27338:	movw	r1, #0
   2733c:	cmp	r1, r0
   27340:	beq	27368 <__assert_fail@plt+0x147b0>
   27344:	movw	r0, #45309	; 0xb0fd
   27348:	movt	r0, #7
   2734c:	bl	12864 <gettext@plt>
   27350:	movw	lr, #1
   27354:	str	r0, [sp]
   27358:	mov	r0, lr
   2735c:	movw	r1, #0
   27360:	ldr	r2, [sp]
   27364:	bl	12780 <error@plt>
   27368:	movw	r0, #65208	; 0xfeb8
   2736c:	movt	r0, #8
   27370:	movw	r1, #1
   27374:	strb	r1, [r0]
   27378:	movw	r0, #65208	; 0xfeb8
   2737c:	movt	r0, #8
   27380:	ldrb	r0, [r0]
   27384:	and	r0, r0, #1
   27388:	mov	sp, fp
   2738c:	pop	{fp, pc}
   27390:	push	{fp, lr}
   27394:	mov	fp, sp
   27398:	sub	sp, sp, #40	; 0x28
   2739c:	str	r0, [fp, #-4]
   273a0:	str	r1, [fp, #-8]
   273a4:	str	r2, [fp, #-12]
   273a8:	bl	2217c <__assert_fail@plt+0xf5c4>
   273ac:	tst	r0, #1
   273b0:	beq	27440 <__assert_fail@plt+0x14888>
   273b4:	ldr	r0, [fp, #-12]
   273b8:	movw	r1, #47	; 0x2f
   273bc:	bl	12894 <strchr@plt>
   273c0:	movw	r1, #0
   273c4:	cmp	r0, r1
   273c8:	beq	27440 <__assert_fail@plt+0x14888>
   273cc:	movw	r0, #45364	; 0xb134
   273d0:	movt	r0, #7
   273d4:	bl	12864 <gettext@plt>
   273d8:	ldr	r1, [fp, #-4]
   273dc:	movw	lr, #0
   273e0:	str	r0, [fp, #-16]
   273e4:	mov	r0, lr
   273e8:	bl	1da90 <__assert_fail@plt+0xaed8>
   273ec:	movw	r1, #1
   273f0:	str	r0, [sp, #20]
   273f4:	mov	r0, r1
   273f8:	movw	r1, #34136	; 0x8558
   273fc:	movt	r1, #7
   27400:	bl	1da90 <__assert_fail@plt+0xaed8>
   27404:	ldr	r1, [fp, #-8]
   27408:	movw	lr, #2
   2740c:	str	r0, [sp, #16]
   27410:	mov	r0, lr
   27414:	bl	1da90 <__assert_fail@plt+0xaed8>
   27418:	movw	r1, #0
   2741c:	str	r0, [sp, #12]
   27420:	mov	r0, r1
   27424:	ldr	r2, [fp, #-16]
   27428:	ldr	r3, [sp, #20]
   2742c:	ldr	lr, [sp, #16]
   27430:	str	lr, [sp]
   27434:	ldr	ip, [sp, #12]
   27438:	str	ip, [sp, #4]
   2743c:	bl	12780 <error@plt>
   27440:	movw	r0, #1
   27444:	and	r0, r0, #1
   27448:	mov	sp, fp
   2744c:	pop	{fp, pc}
   27450:	push	{fp, lr}
   27454:	mov	fp, sp
   27458:	sub	sp, sp, #48	; 0x30
   2745c:	ldr	ip, [fp, #8]
   27460:	str	r0, [fp, #-8]
   27464:	str	r1, [fp, #-12]
   27468:	str	r2, [fp, #-16]
   2746c:	str	r3, [fp, #-20]	; 0xffffffec
   27470:	movw	r0, #0
   27474:	strb	r0, [sp, #23]
   27478:	ldr	r0, [fp, #8]
   2747c:	movw	r1, #22424	; 0x5798
   27480:	movt	r1, #1
   27484:	cmp	r0, r1
   27488:	str	ip, [sp, #12]
   2748c:	bne	27498 <__assert_fail@plt+0x148e0>
   27490:	movw	r0, #1
   27494:	strb	r0, [sp, #23]
   27498:	bl	272b8 <__assert_fail@plt+0x14700>
   2749c:	ldr	lr, [fp, #-12]
   274a0:	ldr	r1, [fp, #-16]
   274a4:	str	r0, [sp, #8]
   274a8:	mov	r0, lr
   274ac:	add	r2, sp, #24
   274b0:	bl	25c80 <__assert_fail@plt+0x130c8>
   274b4:	tst	r0, #1
   274b8:	beq	27578 <__assert_fail@plt+0x149c0>
   274bc:	ldr	r0, [fp, #-8]
   274c0:	ldr	r1, [fp, #8]
   274c4:	ldr	r2, [sp, #24]
   274c8:	bl	1ba04 <__assert_fail@plt+0x8e4c>
   274cc:	str	r0, [sp, #16]
   274d0:	ldr	r0, [sp, #16]
   274d4:	movw	r1, #0
   274d8:	strb	r1, [r0, #19]
   274dc:	ldr	r0, [sp, #16]
   274e0:	strb	r1, [r0, #18]
   274e4:	ldr	r0, [sp, #24]
   274e8:	ldr	r1, [sp, #16]
   274ec:	str	r0, [r1, #40]	; 0x28
   274f0:	ldr	r0, [sp, #24]
   274f4:	movw	r1, #0
   274f8:	bl	27238 <__assert_fail@plt+0x14680>
   274fc:	ldr	r0, [sp, #16]
   27500:	vstr	s0, [r0, #28]
   27504:	movw	r0, #136	; 0x88
   27508:	movt	r0, #9
   2750c:	ldrb	r0, [r0, #17]
   27510:	tst	r0, #1
   27514:	bne	27568 <__assert_fail@plt+0x149b0>
   27518:	ldr	r0, [sp, #24]
   2751c:	ldrb	r1, [sp, #23]
   27520:	and	r1, r1, #1
   27524:	bl	27598 <__assert_fail@plt+0x149e0>
   27528:	tst	r0, #1
   2752c:	bne	27568 <__assert_fail@plt+0x149b0>
   27530:	movw	r0, #45542	; 0xb1e6
   27534:	movt	r0, #7
   27538:	bl	12864 <gettext@plt>
   2753c:	ldr	r3, [fp, #-20]	; 0xffffffec
   27540:	ldr	lr, [sp, #24]
   27544:	movw	r1, #0
   27548:	str	r0, [sp, #4]
   2754c:	mov	r0, r1
   27550:	ldr	r2, [sp, #4]
   27554:	str	lr, [sp]
   27558:	bl	12780 <error@plt>
   2755c:	vldr	s0, [pc, #48]	; 27594 <__assert_fail@plt+0x149dc>
   27560:	ldr	r0, [sp, #16]
   27564:	vstr	s0, [r0, #28]
   27568:	movw	r0, #1
   2756c:	and	r0, r0, #1
   27570:	strb	r0, [fp, #-1]
   27574:	b	27584 <__assert_fail@plt+0x149cc>
   27578:	movw	r0, #0
   2757c:	and	r0, r0, #1
   27580:	strb	r0, [fp, #-1]
   27584:	ldrb	r0, [fp, #-1]
   27588:	and	r0, r0, #1
   2758c:	mov	sp, fp
   27590:	pop	{fp, pc}
   27594:	eorcc	ip, fp, #30464	; 0x7700
   27598:	push	{fp, lr}
   2759c:	mov	fp, sp
   275a0:	sub	sp, sp, #16
   275a4:	str	r0, [sp, #8]
   275a8:	and	r0, r1, #1
   275ac:	strb	r0, [sp, #7]
   275b0:	ldr	r0, [sp, #8]
   275b4:	movw	r1, #47	; 0x2f
   275b8:	bl	12a14 <strrchr@plt>
   275bc:	str	r0, [sp]
   275c0:	ldr	r0, [sp]
   275c4:	movw	r1, #0
   275c8:	cmp	r0, r1
   275cc:	beq	27618 <__assert_fail@plt+0x14a60>
   275d0:	ldr	r0, [sp]
   275d4:	ldrsb	r0, [r0, #1]
   275d8:	cmp	r0, #0
   275dc:	bne	27618 <__assert_fail@plt+0x14a60>
   275e0:	ldr	r0, [sp, #8]
   275e4:	ldrb	r1, [sp, #7]
   275e8:	and	r1, r1, #1
   275ec:	bl	18238 <__assert_fail@plt+0x5680>
   275f0:	tst	r0, #1
   275f4:	beq	27608 <__assert_fail@plt+0x14a50>
   275f8:	movw	r0, #1
   275fc:	and	r0, r0, #1
   27600:	strb	r0, [fp, #-1]
   27604:	b	27624 <__assert_fail@plt+0x14a6c>
   27608:	movw	r0, #0
   2760c:	and	r0, r0, #1
   27610:	strb	r0, [fp, #-1]
   27614:	b	27624 <__assert_fail@plt+0x14a6c>
   27618:	movw	r0, #1
   2761c:	and	r0, r0, #1
   27620:	strb	r0, [fp, #-1]
   27624:	ldrb	r0, [fp, #-1]
   27628:	and	r0, r0, #1
   2762c:	mov	sp, fp
   27630:	pop	{fp, pc}
   27634:	push	{fp, lr}
   27638:	mov	fp, sp
   2763c:	sub	sp, sp, #56	; 0x38
   27640:	str	r0, [fp, #-8]
   27644:	str	r1, [fp, #-12]
   27648:	str	r2, [fp, #-16]
   2764c:	str	r3, [fp, #-20]	; 0xffffffec
   27650:	ldr	r0, [fp, #-8]
   27654:	ldr	r1, [fp, #-12]
   27658:	sub	r2, fp, #24
   2765c:	bl	25c80 <__assert_fail@plt+0x130c8>
   27660:	tst	r0, #1
   27664:	beq	27790 <__assert_fail@plt+0x14bd8>
   27668:	ldr	r0, [fp, #-16]
   2766c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   27670:	movw	r1, #25664	; 0x6440
   27674:	movt	r1, #1
   27678:	bl	1ba04 <__assert_fail@plt+0x8e4c>
   2767c:	str	r0, [sp, #20]
   27680:	ldr	r0, [sp, #20]
   27684:	movw	r1, #0
   27688:	strb	r1, [r0, #19]
   2768c:	ldr	r0, [sp, #20]
   27690:	strb	r1, [r0, #18]
   27694:	movw	r0, #32
   27698:	bl	4c394 <__assert_fail@plt+0x397dc>
   2769c:	str	r0, [sp, #28]
   276a0:	ldr	r0, [sp, #28]
   276a4:	ldr	r1, [sp, #20]
   276a8:	str	r0, [r1, #40]	; 0x28
   276ac:	ldr	r0, [sp, #28]
   276b0:	movw	r1, #100	; 0x64
   276b4:	str	r1, [r0, #4]
   276b8:	ldr	r0, [sp, #28]
   276bc:	ldr	r0, [r0, #4]
   276c0:	bl	4c394 <__assert_fail@plt+0x397dc>
   276c4:	ldr	r1, [sp, #28]
   276c8:	str	r0, [r1]
   276cc:	ldr	r0, [sp, #28]
   276d0:	movw	r1, #0
   276d4:	str	r1, [r0, #16]
   276d8:	ldr	r0, [fp, #-20]	; 0xffffffec
   276dc:	bl	57350 <__assert_fail@plt+0x44798>
   276e0:	ldr	r1, [fp, #-20]	; 0xffffffec
   276e4:	ldr	r2, [sp, #28]
   276e8:	str	r1, [r2, #12]
   276ec:	ldr	r1, [sp, #28]
   276f0:	movw	r2, #0
   276f4:	str	r2, [r1, #20]
   276f8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   276fc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   27700:	str	r0, [sp, #16]
   27704:	mov	r0, r2
   27708:	str	r1, [sp, #12]
   2770c:	bl	12888 <strlen@plt>
   27710:	ldr	r2, [sp, #28]
   27714:	ldr	r1, [sp, #12]
   27718:	str	r0, [sp, #8]
   2771c:	mov	r0, r1
   27720:	ldr	r1, [sp, #8]
   27724:	bl	56eb8 <__assert_fail@plt+0x44300>
   27728:	str	r0, [sp, #24]
   2772c:	ldr	r0, [sp, #24]
   27730:	movw	r1, #0
   27734:	cmp	r0, r1
   27738:	beq	2776c <__assert_fail@plt+0x14bb4>
   2773c:	movw	r0, #45606	; 0xb226
   27740:	movt	r0, #7
   27744:	bl	12864 <gettext@plt>
   27748:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2774c:	ldr	lr, [sp, #24]
   27750:	movw	r1, #1
   27754:	str	r0, [sp, #4]
   27758:	mov	r0, r1
   2775c:	movw	r1, #0
   27760:	ldr	r2, [sp, #4]
   27764:	str	lr, [sp]
   27768:	bl	12780 <error@plt>
   2776c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   27770:	movw	r1, #1
   27774:	bl	27238 <__assert_fail@plt+0x14680>
   27778:	ldr	r0, [sp, #20]
   2777c:	vstr	s0, [r0, #28]
   27780:	movw	r0, #1
   27784:	and	r0, r0, #1
   27788:	strb	r0, [fp, #-1]
   2778c:	b	2779c <__assert_fail@plt+0x14be4>
   27790:	movw	r0, #0
   27794:	and	r0, r0, #1
   27798:	strb	r0, [fp, #-1]
   2779c:	ldrb	r0, [fp, #-1]
   277a0:	and	r0, r0, #1
   277a4:	mov	sp, fp
   277a8:	pop	{fp, pc}
   277ac:	push	{fp, lr}
   277b0:	mov	fp, sp
   277b4:	sub	sp, sp, #48	; 0x30
   277b8:	str	r0, [fp, #-8]
   277bc:	str	r1, [fp, #-12]
   277c0:	str	r2, [fp, #-16]
   277c4:	str	r3, [fp, #-20]	; 0xffffffec
   277c8:	ldr	r0, [fp, #-12]
   277cc:	ldr	r1, [fp, #-16]
   277d0:	ldr	r1, [r1]
   277d4:	sub	r1, r1, #1
   277d8:	add	r0, r0, r1, lsl #2
   277dc:	ldr	r0, [r0]
   277e0:	str	r0, [sp, #16]
   277e4:	ldr	r0, [fp, #-12]
   277e8:	ldr	r1, [fp, #-16]
   277ec:	add	r2, sp, #24
   277f0:	bl	25c80 <__assert_fail@plt+0x130c8>
   277f4:	tst	r0, #1
   277f8:	beq	278d8 <__assert_fail@plt+0x14d20>
   277fc:	ldr	r0, [sp, #24]
   27800:	movw	r1, #45046	; 0xaff6
   27804:	movt	r1, #7
   27808:	bl	12bac <strspn@plt>
   2780c:	str	r0, [sp, #20]
   27810:	ldr	r0, [sp, #20]
   27814:	cmp	r0, #0
   27818:	ble	27880 <__assert_fail@plt+0x14cc8>
   2781c:	ldr	r0, [sp, #24]
   27820:	ldr	r1, [sp, #20]
   27824:	add	r0, r0, r1
   27828:	ldrb	r0, [r0]
   2782c:	cmp	r0, #0
   27830:	bne	27880 <__assert_fail@plt+0x14cc8>
   27834:	ldr	r0, [sp, #24]
   27838:	movw	r1, #136	; 0x88
   2783c:	movt	r1, #9
   27840:	ldr	r1, [r1, #72]	; 0x48
   27844:	bl	2b698 <__assert_fail@plt+0x18ae0>
   27848:	ldr	r1, [fp, #-20]	; 0xffffffec
   2784c:	str	r0, [r1]
   27850:	ldr	r0, [fp, #-20]	; 0xffffffec
   27854:	ldr	r0, [r0]
   27858:	cmp	r0, #0
   2785c:	blt	2787c <__assert_fail@plt+0x14cc4>
   27860:	ldr	r0, [fp, #-8]
   27864:	ldr	r1, [fp, #-12]
   27868:	ldr	r2, [fp, #-16]
   2786c:	bl	26104 <__assert_fail@plt+0x1354c>
   27870:	and	r0, r0, #1
   27874:	strb	r0, [fp, #-1]
   27878:	b	278e4 <__assert_fail@plt+0x14d2c>
   2787c:	b	27880 <__assert_fail@plt+0x14cc8>
   27880:	movw	r0, #45652	; 0xb254
   27884:	movt	r0, #7
   27888:	bl	12864 <gettext@plt>
   2788c:	ldr	r3, [sp, #16]
   27890:	movw	lr, #136	; 0x88
   27894:	movt	lr, #9
   27898:	ldr	r1, [lr, #72]	; 0x48
   2789c:	ldr	r2, [sp, #24]
   278a0:	movw	lr, #0
   278a4:	str	r0, [sp, #12]
   278a8:	mov	r0, lr
   278ac:	str	r3, [sp, #8]
   278b0:	bl	4a828 <__assert_fail@plt+0x37c70>
   278b4:	movw	r1, #1
   278b8:	str	r0, [sp, #4]
   278bc:	mov	r0, r1
   278c0:	movw	r1, #0
   278c4:	ldr	r2, [sp, #12]
   278c8:	ldr	r3, [sp, #8]
   278cc:	ldr	lr, [sp, #4]
   278d0:	str	lr, [sp]
   278d4:	bl	12780 <error@plt>
   278d8:	movw	r0, #0
   278dc:	and	r0, r0, #1
   278e0:	strb	r0, [fp, #-1]
   278e4:	ldrb	r0, [fp, #-1]
   278e8:	and	r0, r0, #1
   278ec:	mov	sp, fp
   278f0:	pop	{fp, pc}
   278f4:	push	{fp, lr}
   278f8:	mov	fp, sp
   278fc:	sub	sp, sp, #72	; 0x48
   27900:	str	r0, [fp, #-8]
   27904:	str	r1, [fp, #-12]
   27908:	str	r2, [fp, #-16]
   2790c:	str	r3, [fp, #-20]	; 0xffffffec
   27910:	ldr	r0, [fp, #-20]	; 0xffffffec
   27914:	movw	r1, #27568	; 0x6bb0
   27918:	movt	r1, #1
   2791c:	cmp	r0, r1
   27920:	movw	r0, #0
   27924:	moveq	r0, #1
   27928:	tst	r0, #1
   2792c:	movw	r0, #46144	; 0xb440
   27930:	movt	r0, #7
   27934:	movw	r1, #46137	; 0xb439
   27938:	movt	r1, #7
   2793c:	movne	r0, r1
   27940:	str	r0, [fp, #-32]	; 0xffffffe0
   27944:	ldr	r0, [fp, #-8]
   27948:	ldr	r1, [fp, #-12]
   2794c:	sub	r2, fp, #28
   27950:	bl	25c80 <__assert_fail@plt+0x130c8>
   27954:	tst	r0, #1
   27958:	bne	2796c <__assert_fail@plt+0x14db4>
   2795c:	movw	r0, #0
   27960:	and	r0, r0, #1
   27964:	strb	r0, [fp, #-1]
   27968:	b	27d40 <__assert_fail@plt+0x15188>
   2796c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   27970:	ldrsb	r0, [r0]
   27974:	cmp	r0, #0
   27978:	bne	279a4 <__assert_fail@plt+0x14dec>
   2797c:	movw	r0, #46150	; 0xb446
   27980:	movt	r0, #7
   27984:	bl	12864 <gettext@plt>
   27988:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2798c:	movw	lr, #1
   27990:	str	r0, [sp, #28]
   27994:	mov	r0, lr
   27998:	movw	r1, #0
   2799c:	ldr	r2, [sp, #28]
   279a0:	bl	12780 <error@plt>
   279a4:	ldr	r0, [fp, #-16]
   279a8:	ldr	r1, [fp, #-20]	; 0xffffffec
   279ac:	ldr	r2, [fp, #-28]	; 0xffffffe4
   279b0:	bl	1ba04 <__assert_fail@plt+0x8e4c>
   279b4:	vldr	s0, [pc, #916]	; 27d50 <__assert_fail@plt+0x15198>
   279b8:	str	r0, [fp, #-24]	; 0xffffffe8
   279bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   279c0:	vstr	s0, [r0, #28]
   279c4:	ldr	r0, [fp, #-20]	; 0xffffffec
   279c8:	movw	r1, #27568	; 0x6bb0
   279cc:	movt	r1, #1
   279d0:	cmp	r0, r1
   279d4:	bne	279f4 <__assert_fail@plt+0x14e3c>
   279d8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   279dc:	movw	r1, #1
   279e0:	strb	r1, [r0, #18]
   279e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   279e8:	movw	r1, #0
   279ec:	strb	r1, [r0, #19]
   279f0:	b	27a0c <__assert_fail@plt+0x14e54>
   279f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   279f8:	movw	r1, #0
   279fc:	strb	r1, [r0, #18]
   27a00:	ldr	r0, [fp, #-24]	; 0xffffffe8
   27a04:	movw	r1, #1
   27a08:	strb	r1, [r0, #19]
   27a0c:	b	27a10 <__assert_fail@plt+0x14e58>
   27a10:	ldr	r0, [fp, #-28]	; 0xffffffe4
   27a14:	ldrsb	r0, [r0]
   27a18:	cmp	r0, #0
   27a1c:	beq	27d34 <__assert_fail@plt+0x1517c>
   27a20:	movw	r0, #55050	; 0xd70a
   27a24:	movt	r0, #15395	; 0x3c23
   27a28:	str	r0, [sp, #32]
   27a2c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   27a30:	ldrb	r0, [r0]
   27a34:	sub	r0, r0, #68	; 0x44
   27a38:	cmp	r0, #47	; 0x2f
   27a3c:	str	r0, [sp, #24]
   27a40:	bhi	27bdc <__assert_fail@plt+0x15024>
   27a44:	add	r0, pc, #8
   27a48:	ldr	r1, [sp, #24]
   27a4c:	ldr	r0, [r0, r1, lsl #2]
   27a50:	mov	pc, r0
   27a54:	andeq	r7, r2, r0, lsr #23
   27a58:	ldrdeq	r7, [r2], -ip
   27a5c:	ldrdeq	r7, [r2], -ip
   27a60:	ldrdeq	r7, [r2], -ip
   27a64:	ldrdeq	r7, [r2], -ip
   27a68:	ldrdeq	r7, [r2], -ip
   27a6c:	ldrdeq	r7, [r2], -ip
   27a70:	ldrdeq	r7, [r2], -ip
   27a74:	ldrdeq	r7, [r2], -ip
   27a78:	ldrdeq	r7, [r2], -ip
   27a7c:	ldrdeq	r7, [r2], -ip
   27a80:	ldrdeq	r7, [r2], -ip
   27a84:	ldrdeq	r7, [r2], -ip
   27a88:	ldrdeq	r7, [r2], -ip
   27a8c:	ldrdeq	r7, [r2], -ip
   27a90:	ldrdeq	r7, [r2], -ip
   27a94:	ldrdeq	r7, [r2], -ip
   27a98:	ldrdeq	r7, [r2], -ip
   27a9c:	ldrdeq	r7, [r2], -ip
   27aa0:	ldrdeq	r7, [r2], -ip
   27aa4:	ldrdeq	r7, [r2], -ip
   27aa8:	ldrdeq	r7, [r2], -ip
   27aac:	ldrdeq	r7, [r2], -ip
   27ab0:	ldrdeq	r7, [r2], -ip
   27ab4:	ldrdeq	r7, [r2], -ip
   27ab8:	ldrdeq	r7, [r2], -ip
   27abc:	ldrdeq	r7, [r2], -ip
   27ac0:	ldrdeq	r7, [r2], -ip
   27ac4:	ldrdeq	r7, [r2], -ip
   27ac8:	ldrdeq	r7, [r2], -ip
   27acc:	andeq	r7, r2, r4, lsl fp
   27ad0:	andeq	r7, r2, r8, lsr #22
   27ad4:	andeq	r7, r2, ip, lsr fp
   27ad8:	ldrdeq	r7, [r2], -ip
   27adc:	andeq	r7, r2, r0, asr fp
   27ae0:	ldrdeq	r7, [r2], -ip
   27ae4:	ldrdeq	r7, [r2], -ip
   27ae8:	ldrdeq	r7, [r2], -ip
   27aec:	ldrdeq	r7, [r2], -ip
   27af0:	ldrdeq	r7, [r2], -ip
   27af4:	andeq	r7, r2, r4, ror #22
   27af8:	ldrdeq	r7, [r2], -ip
   27afc:	ldrdeq	r7, [r2], -ip
   27b00:	ldrdeq	r7, [r2], -ip
   27b04:	andeq	r7, r2, r8, ror fp
   27b08:	ldrdeq	r7, [r2], -ip
   27b0c:	ldrdeq	r7, [r2], -ip
   27b10:	andeq	r7, r2, ip, lsl #23
   27b14:	vldr	s0, [pc, #588]	; 27d68 <__assert_fail@plt+0x151b0>
   27b18:	movw	r0, #0
   27b1c:	str	r0, [sp, #36]	; 0x24
   27b20:	vstr	s0, [sp, #32]
   27b24:	b	27c18 <__assert_fail@plt+0x15060>
   27b28:	vldr	s0, [pc, #564]	; 27d64 <__assert_fail@plt+0x151ac>
   27b2c:	movw	r0, #1
   27b30:	str	r0, [sp, #36]	; 0x24
   27b34:	vstr	s0, [sp, #32]
   27b38:	b	27c18 <__assert_fail@plt+0x15060>
   27b3c:	vldr	s0, [pc, #540]	; 27d60 <__assert_fail@plt+0x151a8>
   27b40:	movw	r0, #2
   27b44:	str	r0, [sp, #36]	; 0x24
   27b48:	vstr	s0, [sp, #32]
   27b4c:	b	27c18 <__assert_fail@plt+0x15060>
   27b50:	movw	r0, #3
   27b54:	str	r0, [sp, #36]	; 0x24
   27b58:	vmov.f32	s0, #108	; 0x3f600000  0.875
   27b5c:	vstr	s0, [sp, #32]
   27b60:	b	27c18 <__assert_fail@plt+0x15060>
   27b64:	vldr	s0, [pc, #496]	; 27d5c <__assert_fail@plt+0x151a4>
   27b68:	movw	r0, #4
   27b6c:	str	r0, [sp, #36]	; 0x24
   27b70:	vstr	s0, [sp, #32]
   27b74:	b	27c18 <__assert_fail@plt+0x15060>
   27b78:	vldr	s0, [pc, #472]	; 27d58 <__assert_fail@plt+0x151a0>
   27b7c:	movw	r0, #5
   27b80:	str	r0, [sp, #36]	; 0x24
   27b84:	vstr	s0, [sp, #32]
   27b88:	b	27c18 <__assert_fail@plt+0x15060>
   27b8c:	vldr	s0, [pc, #448]	; 27d54 <__assert_fail@plt+0x1519c>
   27b90:	movw	r0, #6
   27b94:	str	r0, [sp, #36]	; 0x24
   27b98:	vstr	s0, [sp, #32]
   27b9c:	b	27c18 <__assert_fail@plt+0x15060>
   27ba0:	movw	r0, #0
   27ba4:	str	r0, [sp, #36]	; 0x24
   27ba8:	movw	r0, #46201	; 0xb479
   27bac:	movt	r0, #7
   27bb0:	bl	12864 <gettext@plt>
   27bb4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   27bb8:	ldr	lr, [fp, #-28]	; 0xffffffe4
   27bbc:	ldrb	lr, [lr]
   27bc0:	movw	r1, #1
   27bc4:	str	r0, [sp, #20]
   27bc8:	mov	r0, r1
   27bcc:	movw	r1, #0
   27bd0:	ldr	r2, [sp, #20]
   27bd4:	str	lr, [sp]
   27bd8:	bl	12780 <error@plt>
   27bdc:	movw	r0, #0
   27be0:	str	r0, [sp, #36]	; 0x24
   27be4:	movw	r0, #46302	; 0xb4de
   27be8:	movt	r0, #7
   27bec:	bl	12864 <gettext@plt>
   27bf0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   27bf4:	ldr	lr, [fp, #-28]	; 0xffffffe4
   27bf8:	ldrb	lr, [lr]
   27bfc:	movw	r1, #1
   27c00:	str	r0, [sp, #16]
   27c04:	mov	r0, r1
   27c08:	movw	r1, #0
   27c0c:	ldr	r2, [sp, #16]
   27c10:	str	lr, [sp]
   27c14:	bl	12780 <error@plt>
   27c18:	ldr	r0, [fp, #-24]	; 0xffffffe8
   27c1c:	add	r0, r0, #40	; 0x28
   27c20:	ldr	r1, [sp, #36]	; 0x24
   27c24:	add	r0, r0, r1
   27c28:	ldrb	r0, [r0]
   27c2c:	tst	r0, #1
   27c30:	beq	27c68 <__assert_fail@plt+0x150b0>
   27c34:	movw	r0, #46329	; 0xb4f9
   27c38:	movt	r0, #7
   27c3c:	bl	12864 <gettext@plt>
   27c40:	ldr	lr, [fp, #-28]	; 0xffffffe4
   27c44:	ldrb	r3, [lr]
   27c48:	ldr	lr, [fp, #-32]	; 0xffffffe0
   27c4c:	movw	r1, #1
   27c50:	str	r0, [sp, #12]
   27c54:	mov	r0, r1
   27c58:	movw	r1, #0
   27c5c:	ldr	r2, [sp, #12]
   27c60:	str	lr, [sp]
   27c64:	bl	12780 <error@plt>
   27c68:	vldr	s0, [sp, #32]
   27c6c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   27c70:	vldr	s2, [r0, #28]
   27c74:	vadd.f32	s0, s2, s0
   27c78:	vstr	s0, [r0, #28]
   27c7c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   27c80:	add	r0, r0, #40	; 0x28
   27c84:	ldr	r1, [sp, #36]	; 0x24
   27c88:	add	r0, r0, r1
   27c8c:	movw	r1, #1
   27c90:	strb	r1, [r0]
   27c94:	ldr	r0, [fp, #-28]	; 0xffffffe4
   27c98:	add	r0, r0, #1
   27c9c:	str	r0, [fp, #-28]	; 0xffffffe4
   27ca0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   27ca4:	ldrsb	r0, [r0]
   27ca8:	cmp	r0, #0
   27cac:	beq	27d30 <__assert_fail@plt+0x15178>
   27cb0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   27cb4:	ldrb	r0, [r0]
   27cb8:	cmp	r0, #44	; 0x2c
   27cbc:	beq	27ce8 <__assert_fail@plt+0x15130>
   27cc0:	movw	r0, #46382	; 0xb52e
   27cc4:	movt	r0, #7
   27cc8:	bl	12864 <gettext@plt>
   27ccc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   27cd0:	movw	lr, #1
   27cd4:	str	r0, [sp, #8]
   27cd8:	mov	r0, lr
   27cdc:	movw	r1, #0
   27ce0:	ldr	r2, [sp, #8]
   27ce4:	bl	12780 <error@plt>
   27ce8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   27cec:	add	r0, r0, #1
   27cf0:	str	r0, [fp, #-28]	; 0xffffffe4
   27cf4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   27cf8:	ldrsb	r0, [r0]
   27cfc:	cmp	r0, #0
   27d00:	bne	27d2c <__assert_fail@plt+0x15174>
   27d04:	movw	r0, #46432	; 0xb560
   27d08:	movt	r0, #7
   27d0c:	bl	12864 <gettext@plt>
   27d10:	ldr	r3, [fp, #-32]	; 0xffffffe0
   27d14:	movw	lr, #1
   27d18:	str	r0, [sp, #4]
   27d1c:	mov	r0, lr
   27d20:	movw	r1, #0
   27d24:	ldr	r2, [sp, #4]
   27d28:	bl	12780 <error@plt>
   27d2c:	b	27d30 <__assert_fail@plt+0x15178>
   27d30:	b	27a10 <__assert_fail@plt+0x14e58>
   27d34:	movw	r0, #1
   27d38:	and	r0, r0, #1
   27d3c:	strb	r0, [fp, #-1]
   27d40:	ldrb	r0, [fp, #-1]
   27d44:	and	r0, r0, #1
   27d48:	mov	sp, fp
   27d4c:	pop	{fp, pc}
   27d50:	andeq	r0, r0, r0
   27d54:			; <UNDEFINED> instruction: 0x378560fd
   27d58:	usatcc	r7, #29, lr, asr #16
   27d5c:	cfldr64cc	mvdx12, [lr], #436	; 0x1b4
   27d60:	ldccc	3, cr13, [ip, #364]!	; 0x16c
   27d64:	stmibcc	r8!, {r2, r4, r5, r6, r9, lr}^
   27d68:	bcc	1a5a020 <stdout@@GLIBC_2.4+0x19ca8ec>
   27d6c:	push	{r4, r5, r6, sl, fp, lr}
   27d70:	add	fp, sp, #16
   27d74:	sub	sp, sp, #88	; 0x58
   27d78:	ldr	ip, [fp, #24]
   27d7c:	ldr	lr, [fp, #20]
   27d80:	ldr	r4, [fp, #16]
   27d84:	ldr	r5, [fp, #12]
   27d88:	ldr	r6, [fp, #8]
   27d8c:	str	r0, [fp, #-20]	; 0xffffffec
   27d90:	str	r1, [fp, #-24]	; 0xffffffe8
   27d94:	str	r2, [fp, #-28]	; 0xffffffe4
   27d98:	str	r3, [fp, #-32]	; 0xffffffe0
   27d9c:	ldr	r0, [fp, #-20]	; 0xffffffec
   27da0:	ldr	r0, [r0, #12]
   27da4:	sub	r0, r0, #1
   27da8:	str	r0, [fp, #-40]	; 0xffffffd8
   27dac:	movw	r0, #65212	; 0xfebc
   27db0:	movt	r0, #8
   27db4:	ldr	r0, [r0]
   27db8:	movw	r1, #0
   27dbc:	cmp	r0, r1
   27dc0:	str	r6, [sp, #52]	; 0x34
   27dc4:	str	lr, [sp, #48]	; 0x30
   27dc8:	str	r4, [sp, #44]	; 0x2c
   27dcc:	str	r5, [sp, #40]	; 0x28
   27dd0:	str	ip, [sp, #36]	; 0x24
   27dd4:	bne	27df4 <__assert_fail@plt+0x1523c>
   27dd8:	ldr	r0, [fp, #-20]	; 0xffffffec
   27ddc:	ldr	r0, [r0, #12]
   27de0:	add	r0, r0, #1
   27de4:	bl	4c394 <__assert_fail@plt+0x397dc>
   27de8:	movw	lr, #65212	; 0xfebc
   27dec:	movt	lr, #8
   27df0:	str	r0, [lr]
   27df4:	movw	r0, #65212	; 0xfebc
   27df8:	movt	r0, #8
   27dfc:	ldr	r0, [r0]
   27e00:	str	r0, [fp, #-36]	; 0xffffffdc
   27e04:	ldr	r0, [fp, #-28]	; 0xffffffe4
   27e08:	ldr	r1, [fp, #-20]	; 0xffffffec
   27e0c:	ldr	r1, [r1, #24]
   27e10:	bl	30150 <__assert_fail@plt+0x1d598>
   27e14:	str	r0, [fp, #-48]	; 0xffffffd0
   27e18:	ldr	r0, [fp, #-48]	; 0xffffffd0
   27e1c:	movw	r1, #0
   27e20:	cmp	r0, r1
   27e24:	beq	27e3c <__assert_fail@plt+0x15284>
   27e28:	ldr	r0, [fp, #-48]	; 0xffffffd0
   27e2c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   27e30:	sub	r0, r0, r1
   27e34:	str	r0, [fp, #-44]	; 0xffffffd4
   27e38:	b	27e44 <__assert_fail@plt+0x1528c>
   27e3c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   27e40:	str	r0, [fp, #-44]	; 0xffffffd4
   27e44:	ldr	r0, [fp, #-40]	; 0xffffffd8
   27e48:	ldr	r1, [fp, #-44]	; 0xffffffd4
   27e4c:	cmp	r0, r1
   27e50:	bhi	27e58 <__assert_fail@plt+0x152a0>
   27e54:	b	27f7c <__assert_fail@plt+0x153c4>
   27e58:	ldr	r0, [fp, #-44]	; 0xffffffd4
   27e5c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   27e60:	sub	r0, r1, r0
   27e64:	str	r0, [fp, #-40]	; 0xffffffd8
   27e68:	ldr	r0, [fp, #-36]	; 0xffffffdc
   27e6c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   27e70:	ldr	r2, [fp, #-44]	; 0xffffffd4
   27e74:	bl	12918 <strncpy@plt>
   27e78:	ldr	r1, [fp, #-44]	; 0xffffffd4
   27e7c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   27e80:	add	r1, r2, r1
   27e84:	str	r1, [fp, #-36]	; 0xffffffdc
   27e88:	ldr	r1, [fp, #-44]	; 0xffffffd4
   27e8c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   27e90:	add	r1, r2, r1
   27e94:	str	r1, [fp, #-28]	; 0xffffffe4
   27e98:	ldr	r1, [fp, #-44]	; 0xffffffd4
   27e9c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   27ea0:	sub	r1, r2, r1
   27ea4:	str	r1, [fp, #-32]	; 0xffffffe0
   27ea8:	ldr	r1, [fp, #-48]	; 0xffffffd0
   27eac:	movw	r2, #0
   27eb0:	cmp	r1, r2
   27eb4:	str	r0, [sp, #32]
   27eb8:	beq	27f68 <__assert_fail@plt+0x153b0>
   27ebc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   27ec0:	ldr	r1, [fp, #20]
   27ec4:	ldr	r2, [fp, #12]
   27ec8:	add	r1, r1, r2
   27ecc:	cmp	r0, r1
   27ed0:	bhi	27ed8 <__assert_fail@plt+0x15320>
   27ed4:	b	27f7c <__assert_fail@plt+0x153c4>
   27ed8:	ldr	r0, [fp, #20]
   27edc:	ldr	r1, [fp, #12]
   27ee0:	add	r0, r0, r1
   27ee4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   27ee8:	sub	r0, r1, r0
   27eec:	str	r0, [fp, #-40]	; 0xffffffd8
   27ef0:	ldr	r0, [fp, #8]
   27ef4:	movw	r1, #0
   27ef8:	cmp	r0, r1
   27efc:	beq	27f20 <__assert_fail@plt+0x15368>
   27f00:	ldr	r0, [fp, #-36]	; 0xffffffdc
   27f04:	ldr	r1, [fp, #8]
   27f08:	bl	12738 <strcpy@plt>
   27f0c:	ldr	r1, [fp, #12]
   27f10:	ldr	lr, [fp, #-36]	; 0xffffffdc
   27f14:	add	r1, lr, r1
   27f18:	str	r1, [fp, #-36]	; 0xffffffdc
   27f1c:	str	r0, [sp, #28]
   27f20:	ldr	r0, [fp, #-36]	; 0xffffffdc
   27f24:	ldr	r1, [fp, #16]
   27f28:	bl	12738 <strcpy@plt>
   27f2c:	ldr	r1, [fp, #20]
   27f30:	ldr	lr, [fp, #-36]	; 0xffffffdc
   27f34:	add	r1, lr, r1
   27f38:	str	r1, [fp, #-36]	; 0xffffffdc
   27f3c:	ldr	r1, [fp, #-20]	; 0xffffffec
   27f40:	ldr	r1, [r1, #20]
   27f44:	ldr	lr, [fp, #-28]	; 0xffffffe4
   27f48:	add	r1, lr, r1
   27f4c:	str	r1, [fp, #-28]	; 0xffffffe4
   27f50:	ldr	r1, [fp, #-20]	; 0xffffffec
   27f54:	ldr	r1, [r1, #20]
   27f58:	ldr	lr, [fp, #-32]	; 0xffffffe0
   27f5c:	sub	r1, lr, r1
   27f60:	str	r1, [fp, #-32]	; 0xffffffe0
   27f64:	str	r0, [sp, #24]
   27f68:	b	27f6c <__assert_fail@plt+0x153b4>
   27f6c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   27f70:	ldrsb	r0, [r0]
   27f74:	cmp	r0, #0
   27f78:	bne	27e04 <__assert_fail@plt+0x1524c>
   27f7c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   27f80:	ldrsb	r0, [r0]
   27f84:	cmp	r0, #0
   27f88:	beq	27fb0 <__assert_fail@plt+0x153f8>
   27f8c:	movw	r0, #48152	; 0xbc18
   27f90:	movt	r0, #7
   27f94:	bl	12864 <gettext@plt>
   27f98:	movw	lr, #1
   27f9c:	str	r0, [sp, #20]
   27fa0:	mov	r0, lr
   27fa4:	movw	r1, #0
   27fa8:	ldr	r2, [sp, #20]
   27fac:	bl	12780 <error@plt>
   27fb0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   27fb4:	add	r1, r0, #1
   27fb8:	str	r1, [fp, #-36]	; 0xffffffdc
   27fbc:	movw	r1, #0
   27fc0:	strb	r1, [r0]
   27fc4:	ldr	r0, [fp, #-20]	; 0xffffffec
   27fc8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   27fcc:	movw	r2, #65212	; 0xfebc
   27fd0:	movt	r2, #8
   27fd4:	ldr	r3, [r2]
   27fd8:	ldr	ip, [fp, #-36]	; 0xffffffdc
   27fdc:	ldr	r2, [r2]
   27fe0:	sub	r2, ip, r2
   27fe4:	ldr	ip, [fp, #24]
   27fe8:	str	r2, [sp, #16]
   27fec:	mov	r2, r3
   27ff0:	ldr	r3, [sp, #16]
   27ff4:	movw	lr, #0
   27ff8:	str	lr, [sp]
   27ffc:	str	lr, [sp, #4]
   28000:	str	ip, [sp, #8]
   28004:	bl	28010 <__assert_fail@plt+0x15458>
   28008:	sub	sp, fp, #16
   2800c:	pop	{r4, r5, r6, sl, fp, pc}
   28010:	push	{r4, sl, fp, lr}
   28014:	add	fp, sp, #8
   28018:	sub	sp, sp, #56	; 0x38
   2801c:	ldr	ip, [fp, #16]
   28020:	ldr	lr, [fp, #12]
   28024:	ldr	r4, [fp, #8]
   28028:	str	r0, [fp, #-12]
   2802c:	str	r1, [fp, #-16]
   28030:	str	r2, [fp, #-20]	; 0xffffffec
   28034:	str	r3, [fp, #-24]	; 0xffffffe8
   28038:	ldr	r0, [fp, #-20]	; 0xffffffec
   2803c:	movw	r1, #62984	; 0xf608
   28040:	movt	r1, #8
   28044:	ldr	r1, [r1]
   28048:	cmp	r0, r1
   2804c:	movw	r0, #0
   28050:	moveq	r0, #1
   28054:	and	r0, r0, #1
   28058:	str	r0, [fp, #-28]	; 0xffffffe4
   2805c:	ldr	r0, [fp, #-20]	; 0xffffffec
   28060:	movw	r1, #0
   28064:	cmp	r0, r1
   28068:	str	r4, [sp, #32]
   2806c:	str	lr, [sp, #28]
   28070:	str	ip, [sp, #24]
   28074:	beq	2807c <__assert_fail@plt+0x154c4>
   28078:	b	2809c <__assert_fail@plt+0x154e4>
   2807c:	movw	r0, #48363	; 0xbceb
   28080:	movt	r0, #7
   28084:	movw	r1, #48189	; 0xbc3d
   28088:	movt	r1, #7
   2808c:	movw	r2, #341	; 0x155
   28090:	movw	r3, #48375	; 0xbcf7
   28094:	movt	r3, #7
   28098:	bl	12bb8 <__assert_fail@plt>
   2809c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   280a0:	cmp	r0, #0
   280a4:	bne	281b4 <__assert_fail@plt+0x155fc>
   280a8:	ldr	r0, [fp, #-16]
   280ac:	ldr	r0, [r0, #16]
   280b0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   280b4:	add	r0, r0, r1
   280b8:	ldr	r1, [fp, #12]
   280bc:	add	r0, r0, r1
   280c0:	ldr	r1, [fp, #-12]
   280c4:	ldr	r1, [r1, #12]
   280c8:	cmp	r0, r1
   280cc:	bls	2818c <__assert_fail@plt+0x155d4>
   280d0:	ldr	r0, [fp, #16]
   280d4:	cmp	r0, #0
   280d8:	bne	280f4 <__assert_fail@plt+0x1553c>
   280dc:	ldr	r0, [fp, #-16]
   280e0:	ldr	r0, [r0]
   280e4:	ldr	r1, [fp, #-12]
   280e8:	ldr	r1, [r1, #28]
   280ec:	cmp	r0, r1
   280f0:	bne	28118 <__assert_fail@plt+0x15560>
   280f4:	movw	r0, #48493	; 0xbd6d
   280f8:	movt	r0, #7
   280fc:	bl	12864 <gettext@plt>
   28100:	movw	lr, #1
   28104:	str	r0, [sp, #20]
   28108:	mov	r0, lr
   2810c:	movw	r1, #0
   28110:	ldr	r2, [sp, #20]
   28114:	bl	12780 <error@plt>
   28118:	ldr	r0, [fp, #-12]
   2811c:	ldr	r0, [r0, #24]
   28120:	movw	r1, #0
   28124:	cmp	r0, r1
   28128:	bne	2815c <__assert_fail@plt+0x155a4>
   2812c:	ldr	r0, [fp, #-12]
   28130:	ldr	r0, [r0]
   28134:	cmp	r0, #0
   28138:	beq	28180 <__assert_fail@plt+0x155c8>
   2813c:	ldr	r0, [fp, #-12]
   28140:	ldr	r0, [r0, #36]	; 0x24
   28144:	cmp	r0, #0
   28148:	bne	2815c <__assert_fail@plt+0x155a4>
   2814c:	ldr	r0, [fp, #-12]
   28150:	ldr	r0, [r0, #40]	; 0x28
   28154:	cmp	r0, #0
   28158:	beq	28180 <__assert_fail@plt+0x155c8>
   2815c:	movw	r0, #48552	; 0xbda8
   28160:	movt	r0, #7
   28164:	bl	12864 <gettext@plt>
   28168:	movw	lr, #1
   2816c:	str	r0, [sp, #16]
   28170:	mov	r0, lr
   28174:	movw	r1, #0
   28178:	ldr	r2, [sp, #16]
   2817c:	bl	12780 <error@plt>
   28180:	ldr	r0, [fp, #-12]
   28184:	ldr	r1, [fp, #-16]
   28188:	bl	28384 <__assert_fail@plt+0x157cc>
   2818c:	ldr	r0, [fp, #16]
   28190:	ldr	r1, [fp, #-12]
   28194:	ldr	r2, [fp, #-16]
   28198:	bl	28940 <__assert_fail@plt+0x15d88>
   2819c:	cmp	r0, #0
   281a0:	beq	281b0 <__assert_fail@plt+0x155f8>
   281a4:	ldr	r0, [fp, #-12]
   281a8:	ldr	r1, [fp, #-16]
   281ac:	bl	28384 <__assert_fail@plt+0x157cc>
   281b0:	b	281b4 <__assert_fail@plt+0x155fc>
   281b4:	ldr	r0, [fp, #16]
   281b8:	cmp	r0, #0
   281bc:	bne	281cc <__assert_fail@plt+0x15614>
   281c0:	ldr	r0, [fp, #-16]
   281c4:	movw	r1, #1
   281c8:	str	r1, [r0, #28]
   281cc:	ldr	r0, [fp, #-16]
   281d0:	ldr	r0, [r0]
   281d4:	ldr	r1, [fp, #-16]
   281d8:	ldr	r1, [r1, #8]
   281dc:	cmp	r0, r1
   281e0:	bcc	2825c <__assert_fail@plt+0x156a4>
   281e4:	ldr	r0, [fp, #-16]
   281e8:	ldr	r0, [r0, #4]
   281ec:	movw	r1, #0
   281f0:	cmp	r0, r1
   281f4:	bne	28220 <__assert_fail@plt+0x15668>
   281f8:	ldr	r0, [fp, #-16]
   281fc:	mov	r1, #64	; 0x40
   28200:	str	r1, [r0, #8]
   28204:	ldr	r0, [fp, #-16]
   28208:	ldr	r0, [r0, #8]
   2820c:	lsl	r0, r0, #2
   28210:	bl	4c394 <__assert_fail@plt+0x397dc>
   28214:	ldr	r1, [fp, #-16]
   28218:	str	r0, [r1, #4]
   2821c:	b	28258 <__assert_fail@plt+0x156a0>
   28220:	ldr	r0, [fp, #-16]
   28224:	ldr	r1, [r0, #8]
   28228:	lsl	r1, r1, #1
   2822c:	str	r1, [r0, #8]
   28230:	ldr	r0, [fp, #-16]
   28234:	ldr	r1, [r0, #4]
   28238:	ldr	r0, [r0, #8]
   2823c:	lsl	r0, r0, #2
   28240:	str	r0, [sp, #12]
   28244:	mov	r0, r1
   28248:	ldr	r1, [sp, #12]
   2824c:	bl	4c42c <__assert_fail@plt+0x39874>
   28250:	ldr	r1, [fp, #-16]
   28254:	str	r0, [r1, #4]
   28258:	b	2825c <__assert_fail@plt+0x156a4>
   2825c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   28260:	cmp	r0, #0
   28264:	beq	2828c <__assert_fail@plt+0x156d4>
   28268:	ldr	r0, [fp, #-16]
   2826c:	ldr	r1, [r0]
   28270:	ldr	r2, [r0, #4]
   28274:	add	r3, r1, #1
   28278:	str	r3, [r0]
   2827c:	add	r0, r2, r1, lsl #2
   28280:	movw	r1, #0
   28284:	str	r1, [r0]
   28288:	b	28360 <__assert_fail@plt+0x157a8>
   2828c:	ldr	r0, [fp, #-16]
   28290:	ldr	r1, [r0]
   28294:	ldr	r2, [r0, #4]
   28298:	ldr	r3, [r0, #12]
   2829c:	ldr	ip, [r0, #16]
   282a0:	add	r3, r3, ip
   282a4:	add	ip, r1, #1
   282a8:	str	ip, [r0]
   282ac:	add	r0, r2, r1, lsl #2
   282b0:	str	r3, [r0]
   282b4:	ldr	r0, [fp, #8]
   282b8:	movw	r1, #0
   282bc:	cmp	r0, r1
   282c0:	beq	282f8 <__assert_fail@plt+0x15740>
   282c4:	ldr	r0, [fp, #-16]
   282c8:	ldr	r0, [r0, #12]
   282cc:	ldr	r1, [fp, #-16]
   282d0:	ldr	r1, [r1, #16]
   282d4:	add	r0, r0, r1
   282d8:	ldr	r1, [fp, #8]
   282dc:	bl	12738 <strcpy@plt>
   282e0:	ldr	r1, [fp, #12]
   282e4:	ldr	lr, [fp, #-16]
   282e8:	ldr	r2, [lr, #16]
   282ec:	add	r1, r2, r1
   282f0:	str	r1, [lr, #16]
   282f4:	str	r0, [sp, #8]
   282f8:	ldr	r0, [fp, #-16]
   282fc:	ldr	r0, [r0, #12]
   28300:	ldr	r1, [fp, #-16]
   28304:	ldr	r1, [r1, #16]
   28308:	add	r0, r0, r1
   2830c:	ldr	r1, [fp, #-20]	; 0xffffffec
   28310:	bl	12738 <strcpy@plt>
   28314:	ldr	r1, [fp, #-24]	; 0xffffffe8
   28318:	ldr	lr, [fp, #-16]
   2831c:	ldr	r2, [lr, #16]
   28320:	add	r1, r2, r1
   28324:	str	r1, [lr, #16]
   28328:	ldr	r1, [fp, #16]
   2832c:	ldr	r2, [fp, #-12]
   28330:	ldr	lr, [fp, #-16]
   28334:	str	r0, [sp, #4]
   28338:	mov	r0, r1
   2833c:	mov	r1, r2
   28340:	mov	r2, lr
   28344:	bl	28940 <__assert_fail@plt+0x15d88>
   28348:	cmp	r0, #0
   2834c:	beq	2835c <__assert_fail@plt+0x157a4>
   28350:	ldr	r0, [fp, #-12]
   28354:	ldr	r1, [fp, #-16]
   28358:	bl	28384 <__assert_fail@plt+0x157cc>
   2835c:	b	28360 <__assert_fail@plt+0x157a8>
   28360:	ldr	r0, [fp, #16]
   28364:	cmp	r0, #0
   28368:	beq	2837c <__assert_fail@plt+0x157c4>
   2836c:	ldr	r0, [fp, #-16]
   28370:	ldr	r0, [r0, #16]
   28374:	ldr	r1, [fp, #-16]
   28378:	str	r0, [r1, #20]
   2837c:	sub	sp, fp, #8
   28380:	pop	{r4, sl, fp, pc}
   28384:	push	{fp, lr}
   28388:	mov	fp, sp
   2838c:	sub	sp, sp, #40	; 0x28
   28390:	str	r0, [fp, #-4]
   28394:	str	r1, [fp, #-8]
   28398:	ldr	r0, [fp, #-4]
   2839c:	ldr	r1, [fp, #-8]
   283a0:	bl	28588 <__assert_fail@plt+0x159d0>
   283a4:	ldr	r0, [fp, #-8]
   283a8:	ldr	r0, [r0]
   283ac:	cmp	r0, #0
   283b0:	bls	283b8 <__assert_fail@plt+0x15800>
   283b4:	b	283d8 <__assert_fail@plt+0x15820>
   283b8:	movw	r0, #48169	; 0xbc29
   283bc:	movt	r0, #7
   283c0:	movw	r1, #48189	; 0xbc3d
   283c4:	movt	r1, #7
   283c8:	movw	r2, #261	; 0x105
   283cc:	movw	r3, #48200	; 0xbc48
   283d0:	movt	r3, #7
   283d4:	bl	12bb8 <__assert_fail@plt>
   283d8:	ldr	r0, [fp, #-8]
   283dc:	ldr	r1, [r0]
   283e0:	ldr	r0, [r0, #4]
   283e4:	sub	r1, r1, #1
   283e8:	add	r0, r0, r1, lsl #2
   283ec:	ldr	r0, [r0]
   283f0:	movw	r1, #0
   283f4:	cmp	r0, r1
   283f8:	bne	28400 <__assert_fail@plt+0x15848>
   283fc:	b	28420 <__assert_fail@plt+0x15868>
   28400:	movw	r0, #48268	; 0xbc8c
   28404:	movt	r0, #7
   28408:	movw	r1, #48189	; 0xbc3d
   2840c:	movt	r1, #7
   28410:	movw	r2, #262	; 0x106
   28414:	movw	r3, #48200	; 0xbc48
   28418:	movt	r3, #7
   2841c:	bl	12bb8 <__assert_fail@plt>
   28420:	ldr	r0, [fp, #-8]
   28424:	ldr	r0, [r0]
   28428:	add	r0, r0, #1
   2842c:	lsl	r0, r0, #2
   28430:	bl	4c394 <__assert_fail@plt+0x397dc>
   28434:	str	r0, [fp, #-12]
   28438:	movw	r0, #0
   2843c:	str	r0, [sp, #20]
   28440:	ldr	r0, [fp, #-8]
   28444:	ldr	r0, [r0]
   28448:	str	r0, [fp, #-16]
   2844c:	ldr	r0, [fp, #-4]
   28450:	ldr	r1, [fp, #-8]
   28454:	ldr	r2, [fp, #-12]
   28458:	ldr	r3, [fp, #-16]
   2845c:	ldr	ip, [sp, #20]
   28460:	str	ip, [sp]
   28464:	bl	285d4 <__assert_fail@plt+0x15a1c>
   28468:	str	r0, [sp, #16]
   2846c:	ldr	r0, [fp, #-4]
   28470:	ldr	r0, [r0, #32]
   28474:	ldr	r1, [fp, #-4]
   28478:	ldr	r2, [fp, #-8]
   2847c:	ldr	r2, [r2, #24]
   28480:	ldr	r3, [sp, #16]
   28484:	ldr	ip, [fp, #-12]
   28488:	str	r0, [sp, #12]
   2848c:	mov	r0, r1
   28490:	mov	r1, r2
   28494:	mov	r2, r3
   28498:	mov	r3, ip
   2849c:	ldr	ip, [sp, #12]
   284a0:	blx	ip
   284a4:	cmp	r0, #0
   284a8:	beq	284e8 <__assert_fail@plt+0x15930>
   284ac:	ldr	r0, [fp, #-4]
   284b0:	ldr	r1, [fp, #-8]
   284b4:	ldr	r3, [fp, #-16]
   284b8:	movw	r2, #1
   284bc:	and	r2, r2, #1
   284c0:	bl	28728 <__assert_fail@plt+0x15b70>
   284c4:	str	r0, [fp, #-16]
   284c8:	ldr	r0, [sp, #16]
   284cc:	ldr	r1, [fp, #-4]
   284d0:	ldr	r1, [r1, #28]
   284d4:	sub	r0, r0, r1
   284d8:	ldr	r1, [sp, #20]
   284dc:	add	r0, r1, r0
   284e0:	str	r0, [sp, #20]
   284e4:	b	28544 <__assert_fail@plt+0x1598c>
   284e8:	ldr	r0, [fp, #-16]
   284ec:	ldr	r1, [fp, #-4]
   284f0:	ldr	r1, [r1, #28]
   284f4:	add	r1, r1, #1
   284f8:	cmp	r0, r1
   284fc:	bhi	28524 <__assert_fail@plt+0x1596c>
   28500:	movw	r0, #48311	; 0xbcb7
   28504:	movt	r0, #7
   28508:	bl	12864 <gettext@plt>
   2850c:	movw	lr, #1
   28510:	str	r0, [sp, #8]
   28514:	mov	r0, lr
   28518:	movw	r1, #0
   2851c:	ldr	r2, [sp, #8]
   28520:	bl	12780 <error@plt>
   28524:	ldr	r0, [fp, #-4]
   28528:	ldr	r1, [fp, #-8]
   2852c:	ldr	r3, [fp, #-16]
   28530:	movw	r2, #0
   28534:	and	r2, r2, #1
   28538:	bl	28728 <__assert_fail@plt+0x15b70>
   2853c:	str	r0, [fp, #-16]
   28540:	b	28544 <__assert_fail@plt+0x1598c>
   28544:	b	28548 <__assert_fail@plt+0x15990>
   28548:	ldr	r0, [sp, #20]
   2854c:	add	r0, r0, #1
   28550:	ldr	r1, [fp, #-8]
   28554:	ldr	r1, [r1]
   28558:	ldr	r2, [fp, #-4]
   2855c:	ldr	r2, [r2, #28]
   28560:	sub	r1, r1, r2
   28564:	cmp	r0, r1
   28568:	bcc	2844c <__assert_fail@plt+0x15894>
   2856c:	ldr	r0, [fp, #-12]
   28570:	bl	50c68 <__assert_fail@plt+0x3e0b0>
   28574:	ldr	r0, [fp, #-4]
   28578:	ldr	r1, [fp, #-8]
   2857c:	bl	288f4 <__assert_fail@plt+0x15d3c>
   28580:	mov	sp, fp
   28584:	pop	{fp, pc}
   28588:	push	{fp, lr}
   2858c:	mov	fp, sp
   28590:	sub	sp, sp, #24
   28594:	str	r0, [fp, #-4]
   28598:	str	r1, [fp, #-8]
   2859c:	ldr	r0, [fp, #-4]
   285a0:	ldr	r1, [fp, #-8]
   285a4:	movw	r2, #62984	; 0xf608
   285a8:	movt	r2, #8
   285ac:	ldr	r2, [r2]
   285b0:	movw	r3, #0
   285b4:	str	r3, [sp, #12]
   285b8:	ldr	ip, [sp, #12]
   285bc:	str	ip, [sp]
   285c0:	str	ip, [sp, #4]
   285c4:	str	ip, [sp, #8]
   285c8:	bl	28010 <__assert_fail@plt+0x15458>
   285cc:	mov	sp, fp
   285d0:	pop	{fp, pc}
   285d4:	push	{fp, lr}
   285d8:	mov	fp, sp
   285dc:	sub	sp, sp, #32
   285e0:	ldr	ip, [fp, #8]
   285e4:	str	r0, [fp, #-4]
   285e8:	str	r1, [fp, #-8]
   285ec:	str	r2, [fp, #-12]
   285f0:	str	r3, [sp, #16]
   285f4:	movw	r0, #0
   285f8:	str	r0, [sp, #12]
   285fc:	str	r0, [sp, #8]
   28600:	str	ip, [sp, #4]
   28604:	ldr	r0, [sp, #8]
   28608:	ldr	r1, [fp, #-4]
   2860c:	ldr	r1, [r1, #28]
   28610:	cmp	r0, r1
   28614:	bcs	2864c <__assert_fail@plt+0x15a94>
   28618:	ldr	r0, [fp, #-8]
   2861c:	ldr	r0, [r0, #4]
   28620:	ldr	r1, [sp, #8]
   28624:	add	r2, r1, #1
   28628:	str	r2, [sp, #8]
   2862c:	ldr	r0, [r0, r1, lsl #2]
   28630:	ldr	r1, [fp, #-12]
   28634:	ldr	r2, [sp, #12]
   28638:	add	r3, r2, #1
   2863c:	str	r3, [sp, #12]
   28640:	add	r1, r1, r2, lsl #2
   28644:	str	r0, [r1]
   28648:	b	28604 <__assert_fail@plt+0x15a4c>
   2864c:	ldr	r0, [fp, #8]
   28650:	ldr	r1, [sp, #8]
   28654:	add	r0, r1, r0
   28658:	str	r0, [sp, #8]
   2865c:	ldr	r0, [sp, #8]
   28660:	ldr	r1, [fp, #-8]
   28664:	ldr	r1, [r1]
   28668:	cmp	r0, r1
   2866c:	movw	r0, #0
   28670:	str	r0, [sp]
   28674:	bcs	28690 <__assert_fail@plt+0x15ad8>
   28678:	ldr	r0, [sp, #12]
   2867c:	ldr	r1, [sp, #16]
   28680:	cmp	r0, r1
   28684:	movw	r0, #0
   28688:	movcc	r0, #1
   2868c:	str	r0, [sp]
   28690:	ldr	r0, [sp]
   28694:	tst	r0, #1
   28698:	beq	286d0 <__assert_fail@plt+0x15b18>
   2869c:	ldr	r0, [fp, #-8]
   286a0:	ldr	r0, [r0, #4]
   286a4:	ldr	r1, [sp, #8]
   286a8:	add	r2, r1, #1
   286ac:	str	r2, [sp, #8]
   286b0:	ldr	r0, [r0, r1, lsl #2]
   286b4:	ldr	r1, [fp, #-12]
   286b8:	ldr	r2, [sp, #12]
   286bc:	add	r3, r2, #1
   286c0:	str	r3, [sp, #12]
   286c4:	add	r1, r1, r2, lsl #2
   286c8:	str	r0, [r1]
   286cc:	b	2865c <__assert_fail@plt+0x15aa4>
   286d0:	ldr	r0, [sp, #12]
   286d4:	ldr	r1, [fp, #-4]
   286d8:	ldr	r1, [r1, #28]
   286dc:	cmp	r0, r1
   286e0:	bcc	286e8 <__assert_fail@plt+0x15b30>
   286e4:	b	28708 <__assert_fail@plt+0x15b50>
   286e8:	movw	r0, #48868	; 0xbee4
   286ec:	movt	r0, #7
   286f0:	movw	r1, #48189	; 0xbc3d
   286f4:	movt	r1, #7
   286f8:	movw	r2, #242	; 0xf2
   286fc:	movw	r3, #48897	; 0xbf01
   28700:	movt	r3, #7
   28704:	bl	12bb8 <__assert_fail@plt>
   28708:	ldr	r0, [fp, #-12]
   2870c:	ldr	r1, [sp, #12]
   28710:	add	r0, r0, r1, lsl #2
   28714:	movw	r1, #0
   28718:	str	r1, [r0]
   2871c:	ldr	r0, [sp, #12]
   28720:	mov	sp, fp
   28724:	pop	{fp, pc}
   28728:	sub	sp, sp, #20
   2872c:	str	r0, [sp, #16]
   28730:	str	r1, [sp, #12]
   28734:	and	r0, r2, #1
   28738:	strb	r0, [sp, #11]
   2873c:	str	r3, [sp, #4]
   28740:	ldrb	r0, [sp, #11]
   28744:	tst	r0, #1
   28748:	beq	28770 <__assert_fail@plt+0x15bb8>
   2874c:	ldr	r0, [sp, #4]
   28750:	ldr	r1, [sp, #12]
   28754:	ldr	r1, [r1, #36]	; 0x24
   28758:	cmp	r0, r1
   2875c:	bls	2876c <__assert_fail@plt+0x15bb4>
   28760:	ldr	r0, [sp, #4]
   28764:	ldr	r1, [sp, #12]
   28768:	str	r0, [r1, #36]	; 0x24
   2876c:	b	287a8 <__assert_fail@plt+0x15bf0>
   28770:	ldr	r0, [sp, #4]
   28774:	ldr	r1, [sp, #12]
   28778:	ldr	r1, [r1, #40]	; 0x28
   2877c:	cmp	r0, r1
   28780:	bcc	28798 <__assert_fail@plt+0x15be0>
   28784:	ldr	r0, [sp, #12]
   28788:	ldr	r0, [r0, #40]	; 0x28
   2878c:	movw	r1, #0
   28790:	cmp	r1, r0
   28794:	bne	287a4 <__assert_fail@plt+0x15bec>
   28798:	ldr	r0, [sp, #4]
   2879c:	ldr	r1, [sp, #12]
   287a0:	str	r0, [r1, #40]	; 0x28
   287a4:	b	287a8 <__assert_fail@plt+0x15bf0>
   287a8:	ldr	r0, [sp, #12]
   287ac:	ldr	r0, [r0, #36]	; 0x24
   287b0:	movw	r1, #0
   287b4:	cmp	r1, r0
   287b8:	beq	287d4 <__assert_fail@plt+0x15c1c>
   287bc:	ldr	r0, [sp, #12]
   287c0:	ldr	r0, [r0, #40]	; 0x28
   287c4:	ldr	r1, [sp, #12]
   287c8:	ldr	r1, [r1, #36]	; 0x24
   287cc:	cmp	r0, r1
   287d0:	bhi	2880c <__assert_fail@plt+0x15c54>
   287d4:	ldrb	r0, [sp, #11]
   287d8:	tst	r0, #1
   287dc:	beq	287fc <__assert_fail@plt+0x15c44>
   287e0:	ldr	r0, [sp, #4]
   287e4:	cmn	r0, #1
   287e8:	bcs	287f8 <__assert_fail@plt+0x15c40>
   287ec:	ldr	r0, [sp, #4]
   287f0:	add	r0, r0, #1
   287f4:	str	r0, [sp, #4]
   287f8:	b	28808 <__assert_fail@plt+0x15c50>
   287fc:	ldr	r0, [sp, #4]
   28800:	lsr	r0, r0, #1
   28804:	str	r0, [sp, #4]
   28808:	b	28898 <__assert_fail@plt+0x15ce0>
   2880c:	ldr	r0, [sp, #12]
   28810:	ldr	r1, [r0, #36]	; 0x24
   28814:	ldr	r0, [r0, #40]	; 0x28
   28818:	sub	r0, r0, r1
   2881c:	lsr	r0, r0, #1
   28820:	str	r0, [sp]
   28824:	ldrb	r0, [sp, #11]
   28828:	tst	r0, #1
   2882c:	beq	28860 <__assert_fail@plt+0x15ca8>
   28830:	ldr	r0, [sp]
   28834:	cmp	r0, #0
   28838:	beq	28850 <__assert_fail@plt+0x15c98>
   2883c:	ldr	r0, [sp]
   28840:	ldr	r1, [sp, #4]
   28844:	add	r0, r1, r0
   28848:	str	r0, [sp, #4]
   2884c:	b	2885c <__assert_fail@plt+0x15ca4>
   28850:	ldr	r0, [sp, #4]
   28854:	add	r0, r0, #1
   28858:	str	r0, [sp, #4]
   2885c:	b	28894 <__assert_fail@plt+0x15cdc>
   28860:	ldr	r0, [sp]
   28864:	cmp	r0, #0
   28868:	beq	28880 <__assert_fail@plt+0x15cc8>
   2886c:	ldr	r0, [sp]
   28870:	ldr	r1, [sp, #4]
   28874:	sub	r0, r1, r0
   28878:	str	r0, [sp, #4]
   2887c:	b	28890 <__assert_fail@plt+0x15cd8>
   28880:	ldr	r0, [sp, #4]
   28884:	mvn	r1, #0
   28888:	add	r0, r0, r1
   2888c:	str	r0, [sp, #4]
   28890:	b	28894 <__assert_fail@plt+0x15cdc>
   28894:	b	28898 <__assert_fail@plt+0x15ce0>
   28898:	ldr	r0, [sp, #16]
   2889c:	ldr	r0, [r0, #28]
   288a0:	cmp	r0, #0
   288a4:	beq	288d0 <__assert_fail@plt+0x15d18>
   288a8:	ldr	r0, [sp, #4]
   288ac:	ldr	r1, [sp, #16]
   288b0:	ldr	r1, [r1, #28]
   288b4:	add	r1, r1, #1
   288b8:	cmp	r0, r1
   288bc:	bhi	288d0 <__assert_fail@plt+0x15d18>
   288c0:	ldr	r0, [sp, #16]
   288c4:	ldr	r0, [r0, #28]
   288c8:	add	r0, r0, #1
   288cc:	str	r0, [sp, #4]
   288d0:	ldr	r0, [sp, #4]
   288d4:	movw	r1, #0
   288d8:	cmp	r1, r0
   288dc:	bne	288e8 <__assert_fail@plt+0x15d30>
   288e0:	movw	r0, #1
   288e4:	str	r0, [sp, #4]
   288e8:	ldr	r0, [sp, #4]
   288ec:	add	sp, sp, #20
   288f0:	bx	lr
   288f4:	sub	sp, sp, #8
   288f8:	str	r0, [sp, #4]
   288fc:	str	r1, [sp]
   28900:	ldr	r0, [sp, #4]
   28904:	ldr	r0, [r0, #28]
   28908:	ldr	r1, [sp]
   2890c:	str	r0, [r1]
   28910:	ldr	r0, [sp]
   28914:	ldr	r0, [r0, #20]
   28918:	ldr	r1, [sp]
   2891c:	str	r0, [r1, #16]
   28920:	ldr	r0, [sp]
   28924:	movw	r1, #0
   28928:	str	r1, [r0, #28]
   2892c:	ldr	r0, [sp]
   28930:	mvn	r1, #0
   28934:	str	r1, [r0, #32]
   28938:	add	sp, sp, #8
   2893c:	bx	lr
   28940:	sub	sp, sp, #16
   28944:	str	r0, [sp, #8]
   28948:	str	r1, [sp, #4]
   2894c:	str	r2, [sp]
   28950:	ldr	r0, [sp, #8]
   28954:	cmp	r0, #0
   28958:	bne	2899c <__assert_fail@plt+0x15de4>
   2895c:	ldr	r0, [sp, #4]
   28960:	ldr	r0, [r0, #40]	; 0x28
   28964:	cmp	r0, #0
   28968:	beq	2899c <__assert_fail@plt+0x15de4>
   2896c:	ldr	r0, [sp]
   28970:	ldr	r0, [r0]
   28974:	ldr	r1, [sp, #4]
   28978:	ldr	r1, [r1, #28]
   2897c:	sub	r0, r0, r1
   28980:	ldr	r1, [sp, #4]
   28984:	ldr	r1, [r1, #40]	; 0x28
   28988:	cmp	r0, r1
   2898c:	bne	2899c <__assert_fail@plt+0x15de4>
   28990:	movw	r0, #1
   28994:	str	r0, [sp, #12]
   28998:	b	289c0 <__assert_fail@plt+0x15e08>
   2899c:	ldr	r0, [sp]
   289a0:	ldr	r0, [r0]
   289a4:	ldr	r1, [sp, #4]
   289a8:	ldr	r1, [r1, #16]
   289ac:	cmp	r0, r1
   289b0:	movw	r0, #0
   289b4:	moveq	r0, #1
   289b8:	and	r0, r0, #1
   289bc:	str	r0, [sp, #12]
   289c0:	ldr	r0, [sp, #12]
   289c4:	add	sp, sp, #16
   289c8:	bx	lr
   289cc:	push	{fp, lr}
   289d0:	mov	fp, sp
   289d4:	sub	sp, sp, #8
   289d8:	movw	r0, #0
   289dc:	bl	12654 <sysconf@plt>
   289e0:	str	r0, [sp]
   289e4:	ldr	r0, [sp]
   289e8:	cmp	r0, #0
   289ec:	ble	289fc <__assert_fail@plt+0x15e44>
   289f0:	ldr	r0, [sp]
   289f4:	str	r0, [sp, #4]
   289f8:	b	28a04 <__assert_fail@plt+0x15e4c>
   289fc:	ldr	r0, [pc, #12]	; 28a10 <__assert_fail@plt+0x15e58>
   28a00:	str	r0, [sp, #4]
   28a04:	ldr	r0, [sp, #4]
   28a08:	mov	sp, fp
   28a0c:	pop	{fp, pc}
   28a10:	svcvc	0x00ffffff
   28a14:	push	{fp, lr}
   28a18:	mov	fp, sp
   28a1c:	sub	sp, sp, #8
   28a20:	movw	r0, #0
   28a24:	str	r0, [sp, #4]
   28a28:	movw	r0, #63260	; 0xf71c
   28a2c:	movt	r0, #8
   28a30:	ldr	r0, [r0]
   28a34:	str	r0, [sp]
   28a38:	ldr	r0, [sp]
   28a3c:	ldr	r0, [r0]
   28a40:	movw	r1, #0
   28a44:	cmp	r0, r1
   28a48:	beq	28a74 <__assert_fail@plt+0x15ebc>
   28a4c:	ldr	r0, [sp]
   28a50:	add	r1, r0, #4
   28a54:	str	r1, [sp]
   28a58:	ldr	r0, [r0]
   28a5c:	bl	12888 <strlen@plt>
   28a60:	add	r0, r0, #1
   28a64:	ldr	r1, [sp, #4]
   28a68:	add	r0, r1, r0
   28a6c:	str	r0, [sp, #4]
   28a70:	b	28a38 <__assert_fail@plt+0x15e80>
   28a74:	ldr	r0, [sp, #4]
   28a78:	mov	sp, fp
   28a7c:	pop	{fp, pc}
   28a80:	push	{fp, lr}
   28a84:	mov	fp, sp
   28a88:	sub	sp, sp, #16
   28a8c:	str	r0, [sp, #8]
   28a90:	str	r1, [sp, #4]
   28a94:	bl	28a14 <__assert_fail@plt+0x15e5c>
   28a98:	str	r0, [sp]
   28a9c:	ldr	r0, [sp, #8]
   28aa0:	movw	r1, #4096	; 0x1000
   28aa4:	str	r1, [r0, #8]
   28aa8:	bl	289cc <__assert_fail@plt+0x15e14>
   28aac:	ldr	r1, [sp, #8]
   28ab0:	str	r0, [r1, #4]
   28ab4:	ldr	r0, [sp, #8]
   28ab8:	movw	r1, #0
   28abc:	str	r1, [r0]
   28ac0:	ldr	r0, [sp]
   28ac4:	ldr	r1, [sp, #8]
   28ac8:	ldr	r1, [r1, #4]
   28acc:	cmp	r0, r1
   28ad0:	bls	28ae0 <__assert_fail@plt+0x15f28>
   28ad4:	movw	r0, #1
   28ad8:	str	r0, [fp, #-4]
   28adc:	b	28bd0 <__assert_fail@plt+0x16018>
   28ae0:	ldr	r0, [sp, #4]
   28ae4:	ldr	r1, [sp]
   28ae8:	add	r0, r0, r1
   28aec:	ldr	r1, [sp, #8]
   28af0:	ldr	r1, [r1, #4]
   28af4:	cmp	r0, r1
   28af8:	bcc	28b08 <__assert_fail@plt+0x15f50>
   28afc:	movw	r0, #2
   28b00:	str	r0, [fp, #-4]
   28b04:	b	28bd0 <__assert_fail@plt+0x16018>
   28b08:	ldr	r0, [sp]
   28b0c:	ldr	r1, [sp, #8]
   28b10:	ldr	r2, [r1, #4]
   28b14:	sub	r0, r2, r0
   28b18:	str	r0, [r1, #4]
   28b1c:	ldr	r0, [sp, #4]
   28b20:	ldr	r1, [sp, #8]
   28b24:	ldr	r2, [r1, #4]
   28b28:	sub	r0, r2, r0
   28b2c:	str	r0, [r1, #4]
   28b30:	b	28b34 <__assert_fail@plt+0x15f7c>
   28b34:	ldr	r0, [sp, #8]
   28b38:	ldr	r0, [r0, #4]
   28b3c:	lsr	r0, r0, #2
   28b40:	sub	r0, r0, #2
   28b44:	ldr	r1, [sp, #8]
   28b48:	str	r0, [r1, #16]
   28b4c:	ldr	r0, [sp, #8]
   28b50:	ldr	r0, [r0, #16]
   28b54:	cmp	r0, #0
   28b58:	bls	28b60 <__assert_fail@plt+0x15fa8>
   28b5c:	b	28b80 <__assert_fail@plt+0x15fc8>
   28b60:	movw	r0, #48575	; 0xbdbf
   28b64:	movt	r0, #7
   28b68:	movw	r1, #48189	; 0xbc3d
   28b6c:	movt	r1, #7
   28b70:	movw	r2, #518	; 0x206
   28b74:	movw	r3, #48598	; 0xbdd6
   28b78:	movt	r3, #7
   28b7c:	bl	12bb8 <__assert_fail@plt>
   28b80:	ldr	r0, [sp, #8]
   28b84:	movw	r1, #0
   28b88:	str	r1, [r0, #20]
   28b8c:	ldr	r0, [sp, #8]
   28b90:	str	r1, [r0, #24]
   28b94:	ldr	r0, [sp, #8]
   28b98:	str	r1, [r0, #28]
   28b9c:	ldr	r0, [sp, #8]
   28ba0:	movw	r2, #35804	; 0x8bdc
   28ba4:	movt	r2, #2
   28ba8:	str	r2, [r0, #32]
   28bac:	ldr	r0, [sp, #8]
   28bb0:	str	r1, [r0, #36]	; 0x24
   28bb4:	ldr	r0, [sp, #8]
   28bb8:	str	r1, [r0, #40]	; 0x28
   28bbc:	ldr	r0, [sp, #8]
   28bc0:	ldr	r0, [r0, #4]
   28bc4:	ldr	r2, [sp, #8]
   28bc8:	str	r0, [r2, #12]
   28bcc:	str	r1, [fp, #-4]
   28bd0:	ldr	r0, [fp, #-4]
   28bd4:	mov	sp, fp
   28bd8:	pop	{fp, pc}
   28bdc:	sub	sp, sp, #16
   28be0:	str	r0, [sp, #12]
   28be4:	str	r1, [sp, #8]
   28be8:	str	r2, [sp, #4]
   28bec:	str	r3, [sp]
   28bf0:	movw	r0, #0
   28bf4:	add	sp, sp, #16
   28bf8:	bx	lr
   28bfc:	sub	sp, sp, #4
   28c00:	ldr	r1, [pc, #100]	; 28c6c <__assert_fail@plt+0x160b4>
   28c04:	str	r0, [sp]
   28c08:	ldr	r0, [sp]
   28c0c:	ldr	r0, [r0, #4]
   28c10:	cmp	r1, r0
   28c14:	bls	28c2c <__assert_fail@plt+0x16074>
   28c18:	ldr	r0, [sp]
   28c1c:	ldr	r0, [r0, #4]
   28c20:	ldr	r1, [sp]
   28c24:	str	r0, [r1, #12]
   28c28:	b	28c64 <__assert_fail@plt+0x160ac>
   28c2c:	ldr	r0, [pc, #56]	; 28c6c <__assert_fail@plt+0x160b4>
   28c30:	ldr	r1, [sp]
   28c34:	ldr	r1, [r1, #8]
   28c38:	cmp	r0, r1
   28c3c:	bcs	28c54 <__assert_fail@plt+0x1609c>
   28c40:	ldr	r0, [sp]
   28c44:	ldr	r0, [r0, #8]
   28c48:	ldr	r1, [sp]
   28c4c:	str	r0, [r1, #12]
   28c50:	b	28c60 <__assert_fail@plt+0x160a8>
   28c54:	ldr	r0, [pc, #16]	; 28c6c <__assert_fail@plt+0x160b4>
   28c58:	ldr	r1, [sp]
   28c5c:	str	r0, [r1, #12]
   28c60:	b	28c64 <__assert_fail@plt+0x160ac>
   28c64:	add	sp, sp, #4
   28c68:	bx	lr
   28c6c:	andeq	r0, r2, r0
   28c70:	push	{fp, lr}
   28c74:	mov	fp, sp
   28c78:	sub	sp, sp, #16
   28c7c:	ldr	r3, [pc, #196]	; 28d48 <__assert_fail@plt+0x16190>
   28c80:	str	r0, [fp, #-4]
   28c84:	str	r1, [sp, #8]
   28c88:	str	r2, [sp, #4]
   28c8c:	ldr	r0, [sp, #8]
   28c90:	movw	r1, #0
   28c94:	str	r1, [r0]
   28c98:	ldr	r0, [sp, #8]
   28c9c:	str	r1, [r0, #16]
   28ca0:	ldr	r0, [sp, #8]
   28ca4:	str	r1, [r0, #4]
   28ca8:	ldr	r0, [sp, #8]
   28cac:	str	r1, [r0, #8]
   28cb0:	ldr	r0, [sp, #8]
   28cb4:	str	r1, [r0, #36]	; 0x24
   28cb8:	ldr	r0, [sp, #8]
   28cbc:	str	r1, [r0, #40]	; 0x28
   28cc0:	ldr	r0, [fp, #-4]
   28cc4:	ldr	r0, [r0, #12]
   28cc8:	cmp	r0, r3
   28ccc:	bhi	28cd4 <__assert_fail@plt+0x1611c>
   28cd0:	b	28cf4 <__assert_fail@plt+0x1613c>
   28cd4:	movw	r0, #48673	; 0xbe21
   28cd8:	movt	r0, #7
   28cdc:	movw	r1, #48189	; 0xbc3d
   28ce0:	movt	r1, #7
   28ce4:	movw	r2, #572	; 0x23c
   28ce8:	movw	r3, #48708	; 0xbe44
   28cec:	movt	r3, #7
   28cf0:	bl	12bb8 <__assert_fail@plt>
   28cf4:	ldr	r0, [fp, #-4]
   28cf8:	ldr	r0, [r0, #12]
   28cfc:	add	r0, r0, #1
   28d00:	bl	4c394 <__assert_fail@plt+0x397dc>
   28d04:	ldr	lr, [sp, #8]
   28d08:	str	r0, [lr, #12]
   28d0c:	ldr	r0, [sp, #8]
   28d10:	movw	lr, #0
   28d14:	str	lr, [r0, #20]
   28d18:	ldr	r0, [sp, #8]
   28d1c:	str	lr, [r0, #16]
   28d20:	ldr	r0, [sp, #8]
   28d24:	str	lr, [r0, #28]
   28d28:	ldr	r0, [sp, #8]
   28d2c:	mvn	lr, #0
   28d30:	str	lr, [r0, #32]
   28d34:	ldr	r0, [sp, #4]
   28d38:	ldr	lr, [sp, #8]
   28d3c:	str	r0, [lr, #24]
   28d40:	mov	sp, fp
   28d44:	pop	{fp, pc}
   28d48:	svcvc	0x00fff7ff
   28d4c:	push	{fp, lr}
   28d50:	mov	fp, sp
   28d54:	sub	sp, sp, #16
   28d58:	str	r0, [fp, #-4]
   28d5c:	movw	r0, #0
   28d60:	str	r0, [sp, #4]
   28d64:	str	r0, [sp, #8]
   28d68:	ldr	r0, [fp, #-4]
   28d6c:	ldr	r0, [r0]
   28d70:	movw	r1, #0
   28d74:	cmp	r0, r1
   28d78:	beq	28db0 <__assert_fail@plt+0x161f8>
   28d7c:	ldr	r0, [sp, #4]
   28d80:	add	r0, r0, #1
   28d84:	str	r0, [sp, #4]
   28d88:	ldr	r0, [fp, #-4]
   28d8c:	ldr	r0, [r0]
   28d90:	bl	12888 <strlen@plt>
   28d94:	ldr	lr, [sp, #8]
   28d98:	add	r0, lr, r0
   28d9c:	str	r0, [sp, #8]
   28da0:	ldr	r0, [fp, #-4]
   28da4:	add	r0, r0, #4
   28da8:	str	r0, [fp, #-4]
   28dac:	b	28d68 <__assert_fail@plt+0x161b0>
   28db0:	ldr	r1, [sp, #4]
   28db4:	movw	r0, #48793	; 0xbe99
   28db8:	movt	r0, #7
   28dbc:	bl	28e00 <__assert_fail@plt+0x16248>
   28dc0:	cmp	r0, #0
   28dc4:	movw	r0, #1
   28dc8:	str	r0, [sp]
   28dcc:	bne	28df0 <__assert_fail@plt+0x16238>
   28dd0:	ldr	r1, [sp, #8]
   28dd4:	movw	r0, #48830	; 0xbebe
   28dd8:	movt	r0, #7
   28ddc:	bl	28e00 <__assert_fail@plt+0x16248>
   28de0:	cmp	r0, #0
   28de4:	movw	r0, #0
   28de8:	movne	r0, #1
   28dec:	str	r0, [sp]
   28df0:	ldr	r0, [sp]
   28df4:	and	r0, r0, #1
   28df8:	mov	sp, fp
   28dfc:	pop	{fp, pc}
   28e00:	push	{fp, lr}
   28e04:	mov	fp, sp
   28e08:	sub	sp, sp, #40	; 0x28
   28e0c:	str	r0, [fp, #-8]
   28e10:	str	r1, [fp, #-12]
   28e14:	ldr	r0, [fp, #-8]
   28e18:	bl	127bc <getenv@plt>
   28e1c:	str	r0, [fp, #-16]
   28e20:	ldr	r0, [fp, #-16]
   28e24:	movw	r1, #0
   28e28:	cmp	r0, r1
   28e2c:	beq	28eac <__assert_fail@plt+0x162f4>
   28e30:	ldr	r0, [fp, #-16]
   28e34:	add	r1, sp, #20
   28e38:	movw	r2, #10
   28e3c:	add	r3, sp, #16
   28e40:	movw	ip, #0
   28e44:	str	ip, [sp]
   28e48:	bl	4f2b0 <__assert_fail@plt+0x3c6f8>
   28e4c:	cmp	r0, #0
   28e50:	bne	28e74 <__assert_fail@plt+0x162bc>
   28e54:	ldr	r0, [fp, #-12]
   28e58:	ldr	r1, [sp, #16]
   28e5c:	cmp	r0, r1
   28e60:	bls	28e70 <__assert_fail@plt+0x162b8>
   28e64:	movw	r0, #1
   28e68:	str	r0, [fp, #-4]
   28e6c:	b	28eb4 <__assert_fail@plt+0x162fc>
   28e70:	b	28ea8 <__assert_fail@plt+0x162f0>
   28e74:	bl	128d0 <__errno_location@plt>
   28e78:	ldr	r1, [r0]
   28e7c:	movw	r0, #49003	; 0xbf6b
   28e80:	movt	r0, #7
   28e84:	str	r1, [sp, #12]
   28e88:	bl	12864 <gettext@plt>
   28e8c:	ldr	r3, [fp, #-8]
   28e90:	movw	r1, #1
   28e94:	str	r0, [sp, #8]
   28e98:	mov	r0, r1
   28e9c:	ldr	r1, [sp, #12]
   28ea0:	ldr	r2, [sp, #8]
   28ea4:	bl	12780 <error@plt>
   28ea8:	b	28eac <__assert_fail@plt+0x162f4>
   28eac:	movw	r0, #0
   28eb0:	str	r0, [fp, #-4]
   28eb4:	ldr	r0, [fp, #-4]
   28eb8:	mov	sp, fp
   28ebc:	pop	{fp, pc}
   28ec0:	push	{fp, lr}
   28ec4:	mov	fp, sp
   28ec8:	sub	sp, sp, #40	; 0x28
   28ecc:	str	r0, [fp, #-4]
   28ed0:	str	r1, [fp, #-8]
   28ed4:	str	r2, [fp, #-12]
   28ed8:	mvn	r0, #0
   28edc:	str	r0, [fp, #-16]
   28ee0:	movw	r0, #0
   28ee4:	str	r0, [sp, #20]
   28ee8:	add	r0, sp, #12
   28eec:	bl	4adcc <__assert_fail@plt+0x38214>
   28ef0:	movw	r1, #0
   28ef4:	cmp	r1, r0
   28ef8:	bne	28f94 <__assert_fail@plt+0x163dc>
   28efc:	ldr	r0, [fp, #-4]
   28f00:	bl	4ae68 <__assert_fail@plt+0x382b0>
   28f04:	movw	lr, #0
   28f08:	cmp	lr, r0
   28f0c:	bne	28f60 <__assert_fail@plt+0x163a8>
   28f10:	ldr	r0, [fp, #-8]
   28f14:	ldr	r1, [fp, #-12]
   28f18:	str	r0, [sp, #8]
   28f1c:	mov	r0, r1
   28f20:	ldr	r1, [sp, #8]
   28f24:	blx	r1
   28f28:	str	r0, [fp, #-16]
   28f2c:	ldr	r0, [fp, #-16]
   28f30:	cmp	r0, #0
   28f34:	bge	28f48 <__assert_fail@plt+0x16390>
   28f38:	bl	128d0 <__errno_location@plt>
   28f3c:	ldr	r0, [r0]
   28f40:	str	r0, [sp, #4]
   28f44:	b	28f54 <__assert_fail@plt+0x1639c>
   28f48:	movw	r0, #0
   28f4c:	str	r0, [sp, #4]
   28f50:	b	28f54 <__assert_fail@plt+0x1639c>
   28f54:	ldr	r0, [sp, #4]
   28f58:	str	r0, [sp, #20]
   28f5c:	b	28f6c <__assert_fail@plt+0x163b4>
   28f60:	bl	128d0 <__errno_location@plt>
   28f64:	ldr	r0, [r0]
   28f68:	bl	32668 <__assert_fail@plt+0x1fab0>
   28f6c:	add	r0, sp, #12
   28f70:	bl	4ae68 <__assert_fail@plt+0x382b0>
   28f74:	cmp	r0, #0
   28f78:	beq	28f88 <__assert_fail@plt+0x163d0>
   28f7c:	bl	128d0 <__errno_location@plt>
   28f80:	ldr	r0, [r0]
   28f84:	bl	32668 <__assert_fail@plt+0x1fab0>
   28f88:	add	r0, sp, #12
   28f8c:	bl	4aebc <__assert_fail@plt+0x38304>
   28f90:	b	28fa0 <__assert_fail@plt+0x163e8>
   28f94:	bl	128d0 <__errno_location@plt>
   28f98:	ldr	r0, [r0]
   28f9c:	bl	32614 <__assert_fail@plt+0x1fa5c>
   28fa0:	ldr	r0, [sp, #20]
   28fa4:	cmp	r0, #0
   28fa8:	beq	28fc0 <__assert_fail@plt+0x16408>
   28fac:	ldr	r0, [sp, #20]
   28fb0:	str	r0, [sp]
   28fb4:	bl	128d0 <__errno_location@plt>
   28fb8:	ldr	lr, [sp]
   28fbc:	str	lr, [r0]
   28fc0:	ldr	r0, [fp, #-16]
   28fc4:	mov	sp, fp
   28fc8:	pop	{fp, pc}
   28fcc:	push	{fp, lr}
   28fd0:	mov	fp, sp
   28fd4:	sub	sp, sp, #56	; 0x38
   28fd8:	str	r0, [fp, #-8]
   28fdc:	str	r1, [fp, #-12]
   28fe0:	str	r2, [fp, #-16]
   28fe4:	ldr	r0, [fp, #-8]
   28fe8:	cmn	r0, #100	; 0x64
   28fec:	bne	29010 <__assert_fail@plt+0x16458>
   28ff0:	ldr	r0, [fp, #-12]
   28ff4:	ldr	r1, [fp, #-16]
   28ff8:	str	r0, [sp, #20]
   28ffc:	mov	r0, r1
   29000:	ldr	r1, [sp, #20]
   29004:	blx	r1
   29008:	str	r0, [fp, #-4]
   2900c:	b	29108 <__assert_fail@plt+0x16550>
   29010:	sub	r0, fp, #24
   29014:	bl	4adcc <__assert_fail@plt+0x38214>
   29018:	cmp	r0, #0
   2901c:	beq	2902c <__assert_fail@plt+0x16474>
   29020:	bl	128d0 <__errno_location@plt>
   29024:	ldr	r0, [r0]
   29028:	bl	32614 <__assert_fail@plt+0x1fa5c>
   2902c:	ldr	r0, [fp, #-8]
   29030:	bl	12aa4 <fchdir@plt>
   29034:	cmp	r0, #0
   29038:	beq	29070 <__assert_fail@plt+0x164b8>
   2903c:	bl	128d0 <__errno_location@plt>
   29040:	ldr	r0, [r0]
   29044:	str	r0, [sp, #28]
   29048:	sub	r0, fp, #24
   2904c:	bl	4aebc <__assert_fail@plt+0x38304>
   29050:	ldr	r0, [sp, #28]
   29054:	str	r0, [sp, #16]
   29058:	bl	128d0 <__errno_location@plt>
   2905c:	ldr	lr, [sp, #16]
   29060:	str	lr, [r0]
   29064:	mvn	r0, #0
   29068:	str	r0, [fp, #-4]
   2906c:	b	29108 <__assert_fail@plt+0x16550>
   29070:	ldr	r0, [fp, #-12]
   29074:	ldr	r1, [fp, #-16]
   29078:	str	r0, [sp, #12]
   2907c:	mov	r0, r1
   29080:	ldr	r1, [sp, #12]
   29084:	blx	r1
   29088:	str	r0, [sp, #24]
   2908c:	ldr	r0, [sp, #24]
   29090:	cmp	r0, #0
   29094:	bge	290a8 <__assert_fail@plt+0x164f0>
   29098:	bl	128d0 <__errno_location@plt>
   2909c:	ldr	r0, [r0]
   290a0:	str	r0, [sp, #8]
   290a4:	b	290b4 <__assert_fail@plt+0x164fc>
   290a8:	movw	r0, #0
   290ac:	str	r0, [sp, #8]
   290b0:	b	290b4 <__assert_fail@plt+0x164fc>
   290b4:	ldr	r0, [sp, #8]
   290b8:	str	r0, [sp, #28]
   290bc:	sub	r0, fp, #24
   290c0:	bl	4ae68 <__assert_fail@plt+0x382b0>
   290c4:	cmp	r0, #0
   290c8:	beq	290d8 <__assert_fail@plt+0x16520>
   290cc:	bl	128d0 <__errno_location@plt>
   290d0:	ldr	r0, [r0]
   290d4:	bl	32668 <__assert_fail@plt+0x1fab0>
   290d8:	sub	r0, fp, #24
   290dc:	bl	4aebc <__assert_fail@plt+0x38304>
   290e0:	ldr	r0, [sp, #28]
   290e4:	cmp	r0, #0
   290e8:	beq	29100 <__assert_fail@plt+0x16548>
   290ec:	ldr	r0, [sp, #28]
   290f0:	str	r0, [sp, #4]
   290f4:	bl	128d0 <__errno_location@plt>
   290f8:	ldr	lr, [sp, #4]
   290fc:	str	lr, [r0]
   29100:	ldr	r0, [sp, #24]
   29104:	str	r0, [fp, #-4]
   29108:	ldr	r0, [fp, #-4]
   2910c:	mov	sp, fp
   29110:	pop	{fp, pc}
   29114:	push	{fp, lr}
   29118:	mov	fp, sp
   2911c:	sub	sp, sp, #32
   29120:	str	r0, [fp, #-4]
   29124:	str	r1, [fp, #-8]
   29128:	str	r2, [fp, #-12]
   2912c:	bl	128d0 <__errno_location@plt>
   29130:	ldr	r0, [r0]
   29134:	str	r0, [sp, #16]
   29138:	ldr	r0, [fp, #-8]
   2913c:	cmp	r0, #0
   29140:	bls	29148 <__assert_fail@plt+0x16590>
   29144:	b	29168 <__assert_fail@plt+0x165b0>
   29148:	movw	r0, #49064	; 0xbfa8
   2914c:	movt	r0, #7
   29150:	movw	r1, #49076	; 0xbfb4
   29154:	movt	r1, #7
   29158:	movw	r2, #71	; 0x47
   2915c:	movw	r3, #49088	; 0xbfc0
   29160:	movt	r3, #7
   29164:	bl	12bb8 <__assert_fail@plt>
   29168:	ldr	r0, [fp, #-12]
   2916c:	ldr	r0, [r0]
   29170:	ldr	r1, [fp, #-8]
   29174:	bl	29268 <__assert_fail@plt+0x166b0>
   29178:	str	r0, [sp, #12]
   2917c:	ldr	r0, [fp, #-12]
   29180:	ldr	r0, [r0]
   29184:	cmp	r0, #0
   29188:	bne	291dc <__assert_fail@plt+0x16624>
   2918c:	ldr	r0, [fp, #-4]
   29190:	movw	r1, #0
   29194:	cmp	r1, r0
   29198:	bne	291a0 <__assert_fail@plt+0x165e8>
   2919c:	b	291c0 <__assert_fail@plt+0x16608>
   291a0:	movw	r0, #49130	; 0xbfea
   291a4:	movt	r0, #7
   291a8:	movw	r1, #49076	; 0xbfb4
   291ac:	movt	r1, #7
   291b0:	movw	r2, #79	; 0x4f
   291b4:	movw	r3, #49088	; 0xbfc0
   291b8:	movt	r3, #7
   291bc:	bl	12bb8 <__assert_fail@plt>
   291c0:	ldr	r0, [sp, #12]
   291c4:	ldr	r1, [fp, #-12]
   291c8:	str	r0, [r1]
   291cc:	ldr	r0, [sp, #12]
   291d0:	bl	549ac <__assert_fail@plt+0x41df4>
   291d4:	str	r0, [sp, #8]
   291d8:	b	29238 <__assert_fail@plt+0x16680>
   291dc:	ldr	r0, [sp, #12]
   291e0:	ldr	r1, [fp, #-12]
   291e4:	ldr	r1, [r1]
   291e8:	cmp	r0, r1
   291ec:	beq	2922c <__assert_fail@plt+0x16674>
   291f0:	ldr	r0, [sp, #12]
   291f4:	ldr	r1, [fp, #-12]
   291f8:	str	r0, [r1]
   291fc:	ldr	r0, [fp, #-4]
   29200:	ldr	r1, [sp, #12]
   29204:	bl	55a84 <__assert_fail@plt+0x42ecc>
   29208:	str	r0, [sp, #8]
   2920c:	ldr	r0, [sp, #8]
   29210:	movw	r1, #0
   29214:	cmp	r1, r0
   29218:	bne	29228 <__assert_fail@plt+0x16670>
   2921c:	bl	128d0 <__errno_location@plt>
   29220:	ldr	r0, [r0]
   29224:	str	r0, [sp, #16]
   29228:	b	29234 <__assert_fail@plt+0x1667c>
   2922c:	ldr	r0, [fp, #-4]
   29230:	str	r0, [sp, #8]
   29234:	b	29238 <__assert_fail@plt+0x16680>
   29238:	ldr	r0, [sp, #8]
   2923c:	movw	r1, #0
   29240:	cmp	r0, r1
   29244:	beq	2925c <__assert_fail@plt+0x166a4>
   29248:	ldr	r0, [sp, #16]
   2924c:	str	r0, [sp, #4]
   29250:	bl	128d0 <__errno_location@plt>
   29254:	ldr	lr, [sp, #4]
   29258:	str	lr, [r0]
   2925c:	ldr	r0, [sp, #8]
   29260:	mov	sp, fp
   29264:	pop	{fp, pc}
   29268:	sub	sp, sp, #16
   2926c:	str	r0, [sp, #8]
   29270:	str	r1, [sp, #4]
   29274:	ldr	r0, [sp, #8]
   29278:	movw	r1, #0
   2927c:	cmp	r1, r0
   29280:	bne	29290 <__assert_fail@plt+0x166d8>
   29284:	movw	r0, #16
   29288:	str	r0, [sp]
   2928c:	b	29298 <__assert_fail@plt+0x166e0>
   29290:	ldr	r0, [sp, #8]
   29294:	str	r0, [sp]
   29298:	b	2929c <__assert_fail@plt+0x166e4>
   2929c:	ldr	r0, [sp]
   292a0:	ldr	r1, [sp, #4]
   292a4:	cmp	r0, r1
   292a8:	bcs	292dc <__assert_fail@plt+0x16724>
   292ac:	ldr	r0, [sp]
   292b0:	lsl	r0, r0, #1
   292b4:	ldr	r1, [sp]
   292b8:	cmp	r0, r1
   292bc:	bcs	292cc <__assert_fail@plt+0x16714>
   292c0:	ldr	r0, [sp, #4]
   292c4:	str	r0, [sp, #12]
   292c8:	b	292e4 <__assert_fail@plt+0x1672c>
   292cc:	ldr	r0, [sp]
   292d0:	lsl	r0, r0, #1
   292d4:	str	r0, [sp]
   292d8:	b	2929c <__assert_fail@plt+0x166e4>
   292dc:	ldr	r0, [sp]
   292e0:	str	r0, [sp, #12]
   292e4:	ldr	r0, [sp, #12]
   292e8:	add	sp, sp, #16
   292ec:	bx	lr
   292f0:	push	{fp, lr}
   292f4:	mov	fp, sp
   292f8:	sub	sp, sp, #16
   292fc:	str	r0, [fp, #-4]
   29300:	str	r1, [sp, #8]
   29304:	str	r2, [sp, #4]
   29308:	ldr	r0, [fp, #-4]
   2930c:	ldr	r1, [sp, #8]
   29310:	ldr	r2, [sp, #4]
   29314:	bl	29114 <__assert_fail@plt+0x1655c>
   29318:	str	r0, [sp]
   2931c:	ldr	r0, [sp]
   29320:	movw	r1, #0
   29324:	cmp	r1, r0
   29328:	bne	29338 <__assert_fail@plt+0x16780>
   2932c:	ldr	r0, [fp, #-4]
   29330:	bl	50c68 <__assert_fail@plt+0x3e0b0>
   29334:	bl	4f170 <__assert_fail@plt+0x3c5b8>
   29338:	ldr	r0, [sp]
   2933c:	mov	sp, fp
   29340:	pop	{fp, pc}
   29344:	push	{fp, lr}
   29348:	mov	fp, sp
   2934c:	sub	sp, sp, #24
   29350:	bl	293d8 <__assert_fail@plt+0x16820>
   29354:	ldr	lr, [pc, #120]	; 293d4 <__assert_fail@plt+0x1681c>
   29358:	str	r0, [fp, #-4]
   2935c:	movw	r0, #0
   29360:	str	r0, [sp, #8]
   29364:	str	r0, [sp, #16]
   29368:	str	r0, [sp, #12]
   2936c:	ldr	r0, [fp, #-4]
   29370:	cmp	r0, lr
   29374:	bge	29384 <__assert_fail@plt+0x167cc>
   29378:	ldr	r0, [fp, #-4]
   2937c:	add	r0, r0, #1
   29380:	str	r0, [fp, #-4]
   29384:	ldr	r1, [fp, #-4]
   29388:	add	r0, sp, #8
   2938c:	movw	r2, #0
   29390:	str	r0, [sp, #4]
   29394:	mov	r0, r2
   29398:	movw	r2, #38436	; 0x9624
   2939c:	movt	r2, #2
   293a0:	ldr	r3, [sp, #4]
   293a4:	bl	29480 <__assert_fail@plt+0x168c8>
   293a8:	ldr	r1, [sp, #8]
   293ac:	movw	r2, #65216	; 0xfec0
   293b0:	movt	r2, #8
   293b4:	str	r1, [r2]
   293b8:	ldr	r1, [sp, #12]
   293bc:	movw	r2, #65220	; 0xfec4
   293c0:	movt	r2, #8
   293c4:	str	r1, [r2]
   293c8:	str	r0, [sp]
   293cc:	mov	sp, fp
   293d0:	pop	{fp, pc}
   293d4:	svcvc	0x00ffffff
   293d8:	push	{fp, lr}
   293dc:	mov	fp, sp
   293e0:	sub	sp, sp, #24
   293e4:	bl	29a18 <__assert_fail@plt+0x16e60>
   293e8:	str	r0, [fp, #-8]
   293ec:	ldr	r0, [fp, #-8]
   293f0:	cmp	r0, #0
   293f4:	blt	29404 <__assert_fail@plt+0x1684c>
   293f8:	ldr	r0, [fp, #-8]
   293fc:	str	r0, [fp, #-4]
   29400:	b	29474 <__assert_fail@plt+0x168bc>
   29404:	movw	r0, #4
   29408:	bl	12654 <sysconf@plt>
   2940c:	str	r0, [fp, #-8]
   29410:	ldr	r0, [fp, #-8]
   29414:	cmn	r0, #1
   29418:	bne	29424 <__assert_fail@plt+0x1686c>
   2941c:	movw	r0, #20
   29420:	str	r0, [fp, #-8]
   29424:	movw	r0, #7
   29428:	mov	r1, sp
   2942c:	bl	12660 <getrlimit64@plt>
   29430:	movw	r1, #0
   29434:	cmp	r1, r0
   29438:	bne	2946c <__assert_fail@plt+0x168b4>
   2943c:	ldr	r0, [sp]
   29440:	ldr	r1, [sp, #4]
   29444:	and	r0, r0, r1
   29448:	cmn	r0, #1
   2944c:	bne	29460 <__assert_fail@plt+0x168a8>
   29450:	b	29454 <__assert_fail@plt+0x1689c>
   29454:	ldr	r0, [fp, #-8]
   29458:	str	r0, [fp, #-4]
   2945c:	b	29474 <__assert_fail@plt+0x168bc>
   29460:	ldr	r0, [sp]
   29464:	str	r0, [fp, #-4]
   29468:	b	29474 <__assert_fail@plt+0x168bc>
   2946c:	ldr	r0, [fp, #-8]
   29470:	str	r0, [fp, #-4]
   29474:	ldr	r0, [fp, #-4]
   29478:	mov	sp, fp
   2947c:	pop	{fp, pc}
   29480:	push	{r4, r5, fp, lr}
   29484:	add	fp, sp, #8
   29488:	sub	sp, sp, #552	; 0x228
   2948c:	str	r0, [fp, #-16]
   29490:	str	r1, [fp, #-20]	; 0xffffffec
   29494:	str	r2, [fp, #-24]	; 0xffffffe8
   29498:	str	r3, [fp, #-28]	; 0xffffffe4
   2949c:	movw	r0, #0
   294a0:	str	r0, [sp, #16]
   294a4:	ldr	r0, [fp, #-16]
   294a8:	ldr	r1, [fp, #-20]	; 0xffffffec
   294ac:	cmp	r0, r1
   294b0:	bge	29610 <__assert_fail@plt+0x16a58>
   294b4:	ldr	r0, [fp, #-20]	; 0xffffffec
   294b8:	ldr	r1, [fp, #-16]
   294bc:	sub	r0, r0, r1
   294c0:	str	r0, [sp, #8]
   294c4:	ldr	r0, [sp, #8]
   294c8:	cmp	r0, #64	; 0x40
   294cc:	ble	294d8 <__assert_fail@plt+0x16920>
   294d0:	movw	r0, #64	; 0x40
   294d4:	str	r0, [sp, #8]
   294d8:	movw	r0, #0
   294dc:	str	r0, [sp, #12]
   294e0:	ldr	r0, [sp, #12]
   294e4:	ldr	r1, [sp, #8]
   294e8:	cmp	r0, r1
   294ec:	bge	29538 <__assert_fail@plt+0x16980>
   294f0:	ldr	r0, [sp, #12]
   294f4:	add	r1, sp, #20
   294f8:	add	r0, r1, r0, lsl #3
   294fc:	mov	r2, #5
   29500:	strh	r2, [r0, #4]
   29504:	ldr	r0, [sp, #12]
   29508:	add	r0, r1, r0, lsl #3
   2950c:	mov	r2, #0
   29510:	strh	r2, [r0, #6]
   29514:	ldr	r0, [fp, #-16]
   29518:	ldr	r2, [sp, #12]
   2951c:	add	r0, r0, r2
   29520:	add	r1, r1, r2, lsl #3
   29524:	str	r0, [r1]
   29528:	ldr	r0, [sp, #12]
   2952c:	add	r0, r0, #1
   29530:	str	r0, [sp, #12]
   29534:	b	294e0 <__assert_fail@plt+0x16928>
   29538:	add	r0, sp, #20
   2953c:	ldr	r1, [sp, #8]
   29540:	movw	r2, #0
   29544:	bl	126d8 <poll@plt>
   29548:	str	r0, [sp, #16]
   2954c:	ldr	r0, [sp, #16]
   29550:	mvn	r1, #0
   29554:	cmp	r1, r0
   29558:	bne	29568 <__assert_fail@plt+0x169b0>
   2955c:	mvn	r0, #0
   29560:	str	r0, [fp, #-12]
   29564:	b	29618 <__assert_fail@plt+0x16a60>
   29568:	movw	r0, #0
   2956c:	str	r0, [sp, #4]
   29570:	ldr	r0, [sp, #4]
   29574:	ldr	r1, [sp, #8]
   29578:	cmp	r0, r1
   2957c:	bge	295f8 <__assert_fail@plt+0x16a40>
   29580:	ldr	r0, [sp, #4]
   29584:	add	r1, sp, #20
   29588:	add	r0, r1, r0, lsl #3
   2958c:	ldrsh	r0, [r0, #6]
   29590:	cmp	r0, #32
   29594:	beq	295e4 <__assert_fail@plt+0x16a2c>
   29598:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2959c:	ldr	r1, [sp, #4]
   295a0:	add	r2, sp, #20
   295a4:	add	r1, r2, r1, lsl #3
   295a8:	ldr	r1, [r1]
   295ac:	ldr	r2, [fp, #-28]	; 0xffffffe4
   295b0:	str	r0, [sp]
   295b4:	mov	r0, r1
   295b8:	mov	r1, r2
   295bc:	ldr	r2, [sp]
   295c0:	blx	r2
   295c4:	str	r0, [sp, #16]
   295c8:	movw	r1, #0
   295cc:	cmp	r1, r0
   295d0:	beq	295e0 <__assert_fail@plt+0x16a28>
   295d4:	ldr	r0, [sp, #16]
   295d8:	str	r0, [fp, #-12]
   295dc:	b	29618 <__assert_fail@plt+0x16a60>
   295e0:	b	295e4 <__assert_fail@plt+0x16a2c>
   295e4:	b	295e8 <__assert_fail@plt+0x16a30>
   295e8:	ldr	r0, [sp, #4]
   295ec:	add	r0, r0, #1
   295f0:	str	r0, [sp, #4]
   295f4:	b	29570 <__assert_fail@plt+0x169b8>
   295f8:	b	295fc <__assert_fail@plt+0x16a44>
   295fc:	ldr	r0, [sp, #8]
   29600:	ldr	r1, [fp, #-16]
   29604:	add	r0, r1, r0
   29608:	str	r0, [fp, #-16]
   2960c:	b	294a4 <__assert_fail@plt+0x168ec>
   29610:	movw	r0, #0
   29614:	str	r0, [fp, #-12]
   29618:	ldr	r0, [fp, #-12]
   2961c:	sub	sp, fp, #8
   29620:	pop	{r4, r5, fp, pc}
   29624:	push	{fp, lr}
   29628:	mov	fp, sp
   2962c:	sub	sp, sp, #24
   29630:	str	r0, [fp, #-8]
   29634:	str	r1, [sp, #12]
   29638:	ldr	r0, [fp, #-8]
   2963c:	bl	29b94 <__assert_fail@plt+0x16fdc>
   29640:	cmp	r0, #0
   29644:	beq	29654 <__assert_fail@plt+0x16a9c>
   29648:	movw	r0, #0
   2964c:	str	r0, [fp, #-4]
   29650:	b	296e4 <__assert_fail@plt+0x16b2c>
   29654:	ldr	r0, [sp, #12]
   29658:	str	r0, [sp, #8]
   2965c:	ldr	r0, [sp, #8]
   29660:	ldr	r1, [r0]
   29664:	ldr	r0, [r0, #4]
   29668:	add	r0, r0, #1
   2966c:	lsl	r0, r0, #2
   29670:	ldr	r2, [sp, #8]
   29674:	add	r2, r2, #8
   29678:	str	r0, [sp]
   2967c:	mov	r0, r1
   29680:	ldr	r1, [sp]
   29684:	bl	29114 <__assert_fail@plt+0x1655c>
   29688:	str	r0, [sp, #4]
   2968c:	ldr	r0, [sp, #4]
   29690:	movw	r1, #0
   29694:	cmp	r0, r1
   29698:	beq	296dc <__assert_fail@plt+0x16b24>
   2969c:	ldr	r0, [sp, #4]
   296a0:	ldr	r1, [sp, #8]
   296a4:	str	r0, [r1]
   296a8:	ldr	r0, [fp, #-8]
   296ac:	ldr	r1, [sp, #8]
   296b0:	ldr	r2, [r1]
   296b4:	ldr	r1, [r1, #4]
   296b8:	add	r1, r2, r1, lsl #2
   296bc:	str	r0, [r1]
   296c0:	ldr	r0, [sp, #8]
   296c4:	ldr	r1, [r0, #4]
   296c8:	add	r1, r1, #1
   296cc:	str	r1, [r0, #4]
   296d0:	movw	r0, #0
   296d4:	str	r0, [fp, #-4]
   296d8:	b	296e4 <__assert_fail@plt+0x16b2c>
   296dc:	mvn	r0, #0
   296e0:	str	r0, [fp, #-4]
   296e4:	ldr	r0, [fp, #-4]
   296e8:	mov	sp, fp
   296ec:	pop	{fp, pc}
   296f0:	sub	sp, sp, #8
   296f4:	push	{fp, lr}
   296f8:	mov	fp, sp
   296fc:	sub	sp, sp, #32
   29700:	str	r3, [fp, #12]
   29704:	str	r2, [fp, #8]
   29708:	str	r0, [fp, #-4]
   2970c:	str	r1, [fp, #-8]
   29710:	movw	r0, #0
   29714:	str	r0, [sp, #16]
   29718:	ldr	r0, [fp, #-8]
   2971c:	and	r0, r0, #64	; 0x40
   29720:	cmp	r0, #0
   29724:	beq	29750 <__assert_fail@plt+0x16b98>
   29728:	add	r0, sp, #12
   2972c:	mov	r1, r0
   29730:	add	r2, fp, #8
   29734:	str	r2, [r1]
   29738:	ldr	r1, [sp, #12]
   2973c:	add	r2, r1, #4
   29740:	str	r2, [sp, #12]
   29744:	ldr	r1, [r1]
   29748:	str	r1, [sp, #16]
   2974c:	str	r0, [sp, #8]
   29750:	movw	r0, #65225	; 0xfec9
   29754:	movt	r0, #8
   29758:	ldrb	r0, [r0]
   2975c:	tst	r0, #1
   29760:	bne	29788 <__assert_fail@plt+0x16bd0>
   29764:	bl	297e8 <__assert_fail@plt+0x16c30>
   29768:	and	r0, r0, #1
   2976c:	movw	lr, #65224	; 0xfec8
   29770:	movt	lr, #8
   29774:	strb	r0, [lr]
   29778:	movw	r0, #65225	; 0xfec9
   2977c:	movt	r0, #8
   29780:	movw	lr, #1
   29784:	strb	lr, [r0]
   29788:	ldr	r0, [fp, #-4]
   2978c:	ldr	r1, [fp, #-8]
   29790:	orr	r1, r1, #524288	; 0x80000
   29794:	ldr	r2, [sp, #16]
   29798:	bl	2c768 <__assert_fail@plt+0x19bb0>
   2979c:	str	r0, [fp, #-12]
   297a0:	ldr	r0, [fp, #-12]
   297a4:	cmp	r0, #0
   297a8:	blt	297d4 <__assert_fail@plt+0x16c1c>
   297ac:	movw	r0, #65224	; 0xfec8
   297b0:	movt	r0, #8
   297b4:	ldrb	r0, [r0]
   297b8:	tst	r0, #1
   297bc:	bne	297d4 <__assert_fail@plt+0x16c1c>
   297c0:	ldr	r0, [fp, #-12]
   297c4:	movw	r1, #1
   297c8:	and	r1, r1, #1
   297cc:	bl	2c0e0 <__assert_fail@plt+0x19528>
   297d0:	str	r0, [sp, #4]
   297d4:	ldr	r0, [fp, #-12]
   297d8:	mov	sp, fp
   297dc:	pop	{fp, lr}
   297e0:	add	sp, sp, #8
   297e4:	bx	lr
   297e8:	push	{fp, lr}
   297ec:	mov	fp, sp
   297f0:	sub	sp, sp, #16
   297f4:	ldr	r1, [pc, #88]	; 29854 <__assert_fail@plt+0x16c9c>
   297f8:	movw	r0, #0
   297fc:	strb	r0, [fp, #-1]
   29800:	movw	r0, #34136	; 0x8558
   29804:	movt	r0, #7
   29808:	bl	2c768 <__assert_fail@plt+0x19bb0>
   2980c:	str	r0, [sp, #8]
   29810:	ldr	r0, [sp, #8]
   29814:	cmp	r0, #0
   29818:	blt	29844 <__assert_fail@plt+0x16c8c>
   2981c:	ldr	r0, [sp, #8]
   29820:	bl	29b94 <__assert_fail@plt+0x16fdc>
   29824:	cmp	r0, #0
   29828:	movw	r0, #0
   2982c:	movne	r0, #1
   29830:	and	r0, r0, #1
   29834:	strb	r0, [fp, #-1]
   29838:	ldr	r0, [sp, #8]
   2983c:	bl	12b70 <close@plt>
   29840:	str	r0, [sp, #4]
   29844:	ldrb	r0, [fp, #-1]
   29848:	and	r0, r0, #1
   2984c:	mov	sp, fp
   29850:	pop	{fp, pc}
   29854:	andeq	r0, r8, r0
   29858:	push	{fp, lr}
   2985c:	mov	fp, sp
   29860:	movw	r0, #65216	; 0xfec0
   29864:	movt	r0, #8
   29868:	ldr	r0, [r0]
   2986c:	bl	50c68 <__assert_fail@plt+0x3e0b0>
   29870:	movw	r0, #65216	; 0xfec0
   29874:	movt	r0, #8
   29878:	movw	lr, #0
   2987c:	str	lr, [r0]
   29880:	movw	r0, #65220	; 0xfec4
   29884:	movt	r0, #8
   29888:	str	lr, [r0]
   2988c:	pop	{fp, pc}
   29890:	push	{fp, lr}
   29894:	mov	fp, sp
   29898:	sub	sp, sp, #8
   2989c:	movw	r0, #49147	; 0xbffb
   298a0:	movt	r0, #7
   298a4:	bl	127bc <getenv@plt>
   298a8:	movw	lr, #0
   298ac:	cmp	r0, lr
   298b0:	beq	298c4 <__assert_fail@plt+0x16d0c>
   298b4:	movw	r0, #1
   298b8:	and	r0, r0, #1
   298bc:	strb	r0, [fp, #-1]
   298c0:	b	298d0 <__assert_fail@plt+0x16d18>
   298c4:	movw	r0, #0
   298c8:	and	r0, r0, #1
   298cc:	strb	r0, [fp, #-1]
   298d0:	ldrb	r0, [fp, #-1]
   298d4:	and	r0, r0, #1
   298d8:	mov	sp, fp
   298dc:	pop	{fp, pc}
   298e0:	push	{fp, lr}
   298e4:	mov	fp, sp
   298e8:	sub	sp, sp, #16
   298ec:	movw	r0, #1
   298f0:	str	r0, [fp, #-4]
   298f4:	movw	r0, #65216	; 0xfec0
   298f8:	movt	r0, #8
   298fc:	ldr	r0, [r0]
   29900:	movw	r1, #65220	; 0xfec4
   29904:	movt	r1, #8
   29908:	ldr	r1, [r1]
   2990c:	bl	29988 <__assert_fail@plt+0x16dd0>
   29910:	str	r0, [sp, #8]
   29914:	ldr	r0, [sp, #8]
   29918:	cmp	r0, #0
   2991c:	blt	29950 <__assert_fail@plt+0x16d98>
   29920:	movw	r0, #0
   29924:	str	r0, [fp, #-4]
   29928:	movw	r0, #49175	; 0xc017
   2992c:	movt	r0, #7
   29930:	bl	12864 <gettext@plt>
   29934:	ldr	r3, [sp, #8]
   29938:	movw	lr, #0
   2993c:	str	r0, [sp, #4]
   29940:	mov	r0, lr
   29944:	mov	r1, lr
   29948:	ldr	r2, [sp, #4]
   2994c:	bl	12780 <error@plt>
   29950:	ldr	r0, [fp, #-4]
   29954:	cmp	r0, #0
   29958:	beq	29960 <__assert_fail@plt+0x16da8>
   2995c:	b	29980 <__assert_fail@plt+0x16dc8>
   29960:	movw	r0, #49327	; 0xc0af
   29964:	movt	r0, #7
   29968:	movw	r1, #49336	; 0xc0b8
   2996c:	movt	r1, #7
   29970:	movw	r2, #396	; 0x18c
   29974:	movw	r3, #49345	; 0xc0c1
   29978:	movt	r3, #7
   2997c:	bl	12bb8 <__assert_fail@plt>
   29980:	mov	sp, fp
   29984:	pop	{fp, pc}
   29988:	push	{fp, lr}
   2998c:	mov	fp, sp
   29990:	sub	sp, sp, #40	; 0x28
   29994:	str	r0, [fp, #-4]
   29998:	str	r1, [fp, #-8]
   2999c:	bl	293d8 <__assert_fail@plt+0x16820>
   299a0:	ldr	r1, [pc, #108]	; 29a14 <__assert_fail@plt+0x16e5c>
   299a4:	str	r0, [sp, #12]
   299a8:	ldr	r0, [sp, #12]
   299ac:	cmp	r0, r1
   299b0:	bge	299c0 <__assert_fail@plt+0x16e08>
   299b4:	ldr	r0, [sp, #12]
   299b8:	add	r0, r0, #1
   299bc:	str	r0, [sp, #12]
   299c0:	ldr	r0, [fp, #-4]
   299c4:	str	r0, [sp, #16]
   299c8:	ldr	r0, [fp, #-8]
   299cc:	str	r0, [sp, #20]
   299d0:	movw	r0, #0
   299d4:	str	r0, [sp, #24]
   299d8:	mvn	r1, #0
   299dc:	str	r1, [sp, #28]
   299e0:	ldr	r1, [sp, #12]
   299e4:	add	r2, sp, #16
   299e8:	movw	r3, #39876	; 0x9bc4
   299ec:	movt	r3, #2
   299f0:	str	r2, [sp, #8]
   299f4:	mov	r2, r3
   299f8:	ldr	r3, [sp, #8]
   299fc:	bl	29480 <__assert_fail@plt+0x168c8>
   29a00:	ldr	r1, [sp, #28]
   29a04:	str	r0, [sp, #4]
   29a08:	mov	r0, r1
   29a0c:	mov	sp, fp
   29a10:	pop	{fp, pc}
   29a14:	svcvc	0x00ffffff
   29a18:	push	{fp, lr}
   29a1c:	mov	fp, sp
   29a20:	sub	sp, sp, #40	; 0x28
   29a24:	movw	r0, #49381	; 0xc0e5
   29a28:	movt	r0, #7
   29a2c:	str	r0, [fp, #-8]
   29a30:	mvn	r0, #0
   29a34:	str	r0, [fp, #-12]
   29a38:	ldr	r0, [fp, #-8]
   29a3c:	bl	2c32c <__assert_fail@plt+0x19774>
   29a40:	str	r0, [fp, #-16]
   29a44:	ldr	r0, [fp, #-16]
   29a48:	movw	lr, #0
   29a4c:	cmp	r0, lr
   29a50:	beq	29b80 <__assert_fail@plt+0x16fc8>
   29a54:	movw	r0, #0
   29a58:	str	r0, [sp, #20]
   29a5c:	bl	128d0 <__errno_location@plt>
   29a60:	movw	lr, #0
   29a64:	str	lr, [r0]
   29a68:	ldr	r0, [fp, #-16]
   29a6c:	bl	12a68 <readdir64@plt>
   29a70:	str	r0, [sp, #16]
   29a74:	ldr	r0, [sp, #16]
   29a78:	movw	lr, #0
   29a7c:	cmp	lr, r0
   29a80:	bne	29ae0 <__assert_fail@plt+0x16f28>
   29a84:	bl	128d0 <__errno_location@plt>
   29a88:	ldr	r0, [r0]
   29a8c:	cmp	r0, #0
   29a90:	beq	29adc <__assert_fail@plt+0x16f24>
   29a94:	bl	128d0 <__errno_location@plt>
   29a98:	ldr	r1, [r0]
   29a9c:	ldr	r2, [fp, #-8]
   29aa0:	movw	r0, #0
   29aa4:	movw	lr, #8
   29aa8:	str	r1, [sp, #8]
   29aac:	mov	r1, lr
   29ab0:	bl	4a828 <__assert_fail@plt+0x37c70>
   29ab4:	movw	r1, #0
   29ab8:	str	r0, [sp, #4]
   29abc:	mov	r0, r1
   29ac0:	ldr	r1, [sp, #8]
   29ac4:	movw	r2, #59431	; 0xe827
   29ac8:	movt	r2, #7
   29acc:	ldr	r3, [sp, #4]
   29ad0:	bl	12780 <error@plt>
   29ad4:	movw	r0, #0
   29ad8:	str	r0, [sp, #20]
   29adc:	b	29b58 <__assert_fail@plt+0x16fa0>
   29ae0:	ldr	r0, [sp, #16]
   29ae4:	ldrb	r0, [r0, #19]
   29ae8:	cmp	r0, #46	; 0x2e
   29aec:	bne	29b20 <__assert_fail@plt+0x16f68>
   29af0:	ldr	r0, [sp, #16]
   29af4:	ldrb	r0, [r0, #20]
   29af8:	cmp	r0, #0
   29afc:	beq	29b54 <__assert_fail@plt+0x16f9c>
   29b00:	ldr	r0, [sp, #16]
   29b04:	ldrb	r0, [r0, #20]
   29b08:	cmp	r0, #46	; 0x2e
   29b0c:	bne	29b20 <__assert_fail@plt+0x16f68>
   29b10:	ldr	r0, [sp, #16]
   29b14:	ldrb	r0, [r0, #21]
   29b18:	cmp	r0, #0
   29b1c:	beq	29b54 <__assert_fail@plt+0x16f9c>
   29b20:	ldr	r0, [sp, #16]
   29b24:	add	r0, r0, #19
   29b28:	movw	r1, #0
   29b2c:	bl	2b698 <__assert_fail@plt+0x18ae0>
   29b30:	str	r0, [sp, #12]
   29b34:	ldr	r0, [sp, #12]
   29b38:	ldr	r1, [fp, #-12]
   29b3c:	cmp	r0, r1
   29b40:	ble	29b4c <__assert_fail@plt+0x16f94>
   29b44:	ldr	r0, [sp, #12]
   29b48:	str	r0, [fp, #-12]
   29b4c:	movw	r0, #1
   29b50:	str	r0, [sp, #20]
   29b54:	b	29a5c <__assert_fail@plt+0x16ea4>
   29b58:	ldr	r0, [fp, #-16]
   29b5c:	bl	12b88 <closedir@plt>
   29b60:	ldr	lr, [sp, #20]
   29b64:	cmp	lr, #0
   29b68:	str	r0, [sp]
   29b6c:	beq	29b7c <__assert_fail@plt+0x16fc4>
   29b70:	ldr	r0, [fp, #-12]
   29b74:	str	r0, [fp, #-4]
   29b78:	b	29b88 <__assert_fail@plt+0x16fd0>
   29b7c:	b	29b80 <__assert_fail@plt+0x16fc8>
   29b80:	mvn	r0, #0
   29b84:	str	r0, [fp, #-4]
   29b88:	ldr	r0, [fp, #-4]
   29b8c:	mov	sp, fp
   29b90:	pop	{fp, pc}
   29b94:	push	{fp, lr}
   29b98:	mov	fp, sp
   29b9c:	sub	sp, sp, #8
   29ba0:	str	r0, [sp, #4]
   29ba4:	ldr	r0, [sp, #4]
   29ba8:	movw	r1, #1
   29bac:	bl	507d8 <__assert_fail@plt+0x3dc20>
   29bb0:	str	r0, [sp]
   29bb4:	ldr	r0, [sp]
   29bb8:	and	r0, r0, #1
   29bbc:	mov	sp, fp
   29bc0:	pop	{fp, pc}
   29bc4:	push	{fp, lr}
   29bc8:	mov	fp, sp
   29bcc:	sub	sp, sp, #16
   29bd0:	str	r0, [sp, #8]
   29bd4:	str	r1, [sp, #4]
   29bd8:	ldr	r0, [sp, #8]
   29bdc:	bl	29b94 <__assert_fail@plt+0x16fdc>
   29be0:	cmp	r0, #0
   29be4:	bne	29c88 <__assert_fail@plt+0x170d0>
   29be8:	ldr	r0, [sp, #4]
   29bec:	str	r0, [sp]
   29bf0:	ldr	r0, [sp]
   29bf4:	ldr	r0, [r0, #8]
   29bf8:	ldr	r1, [sp]
   29bfc:	ldr	r1, [r1, #4]
   29c00:	cmp	r0, r1
   29c04:	bcs	29c70 <__assert_fail@plt+0x170b8>
   29c08:	ldr	r0, [sp]
   29c0c:	ldr	r1, [r0]
   29c10:	ldr	r0, [r0, #8]
   29c14:	add	r0, r1, r0, lsl #2
   29c18:	ldr	r0, [r0]
   29c1c:	ldr	r1, [sp, #8]
   29c20:	cmp	r0, r1
   29c24:	bge	29c3c <__assert_fail@plt+0x17084>
   29c28:	ldr	r0, [sp]
   29c2c:	ldr	r1, [r0, #8]
   29c30:	add	r1, r1, #1
   29c34:	str	r1, [r0, #8]
   29c38:	b	29c6c <__assert_fail@plt+0x170b4>
   29c3c:	ldr	r0, [sp]
   29c40:	ldr	r1, [r0]
   29c44:	ldr	r0, [r0, #8]
   29c48:	add	r0, r1, r0, lsl #2
   29c4c:	ldr	r0, [r0]
   29c50:	ldr	r1, [sp, #8]
   29c54:	cmp	r0, r1
   29c58:	bne	29c68 <__assert_fail@plt+0x170b0>
   29c5c:	movw	r0, #0
   29c60:	str	r0, [fp, #-4]
   29c64:	b	29c90 <__assert_fail@plt+0x170d8>
   29c68:	b	29c70 <__assert_fail@plt+0x170b8>
   29c6c:	b	29bf0 <__assert_fail@plt+0x17038>
   29c70:	ldr	r0, [sp, #8]
   29c74:	ldr	r1, [sp]
   29c78:	str	r0, [r1, #12]
   29c7c:	mvn	r0, #0
   29c80:	str	r0, [fp, #-4]
   29c84:	b	29c90 <__assert_fail@plt+0x170d8>
   29c88:	movw	r0, #0
   29c8c:	str	r0, [fp, #-4]
   29c90:	ldr	r0, [fp, #-4]
   29c94:	mov	sp, fp
   29c98:	pop	{fp, pc}
   29c9c:	push	{r4, r5, fp, lr}
   29ca0:	add	fp, sp, #8
   29ca4:	sub	sp, sp, #48	; 0x30
   29ca8:	str	r0, [fp, #-12]
   29cac:	movw	r0, #63272	; 0xf728
   29cb0:	movt	r0, #8
   29cb4:	ldr	r0, [r0]
   29cb8:	bl	50bb8 <__assert_fail@plt+0x3e000>
   29cbc:	movw	lr, #63284	; 0xf734
   29cc0:	movt	lr, #8
   29cc4:	ldr	lr, [lr]
   29cc8:	ldr	r1, [fp, #-12]
   29ccc:	movw	r2, #62988	; 0xf60c
   29cd0:	movt	r2, #8
   29cd4:	ldr	r3, [r2]
   29cd8:	movw	r2, #49423	; 0xc10f
   29cdc:	movt	r2, #7
   29ce0:	str	r0, [fp, #-16]
   29ce4:	mov	r0, r2
   29ce8:	str	r3, [fp, #-20]	; 0xffffffec
   29cec:	str	lr, [fp, #-24]	; 0xffffffe8
   29cf0:	str	r1, [sp, #28]
   29cf4:	bl	12864 <gettext@plt>
   29cf8:	movw	r1, #49438	; 0xc11e
   29cfc:	movt	r1, #7
   29d00:	str	r0, [sp, #24]
   29d04:	mov	r0, r1
   29d08:	bl	12864 <gettext@plt>
   29d0c:	movw	r1, #49453	; 0xc12d
   29d10:	movt	r1, #7
   29d14:	str	r0, [sp, #20]
   29d18:	mov	r0, r1
   29d1c:	bl	12864 <gettext@plt>
   29d20:	ldr	r1, [fp, #-24]	; 0xffffffe8
   29d24:	str	r0, [sp, #16]
   29d28:	mov	r0, r1
   29d2c:	ldr	r1, [sp, #28]
   29d30:	movw	r2, #49409	; 0xc101
   29d34:	movt	r2, #7
   29d38:	ldr	r3, [fp, #-20]	; 0xffffffec
   29d3c:	ldr	lr, [sp, #24]
   29d40:	str	lr, [sp]
   29d44:	ldr	ip, [sp, #20]
   29d48:	str	ip, [sp, #4]
   29d4c:	ldr	r4, [sp, #16]
   29d50:	str	r4, [sp, #8]
   29d54:	movw	r5, #0
   29d58:	str	r5, [sp, #12]
   29d5c:	bl	4c204 <__assert_fail@plt+0x3964c>
   29d60:	sub	sp, fp, #8
   29d64:	pop	{r4, r5, fp, pc}
   29d68:	push	{r4, r5, r6, sl, fp, lr}
   29d6c:	add	fp, sp, #16
   29d70:	sub	sp, sp, #104	; 0x68
   29d74:	sub	sp, sp, #1024	; 0x400
   29d78:	ldr	ip, [fp, #20]
   29d7c:	ldr	lr, [fp, #16]
   29d80:	ldr	r4, [fp, #12]
   29d84:	ldr	r5, [fp, #8]
   29d88:	sub	r6, fp, #708	; 0x2c4
   29d8c:	str	r0, [fp, #-20]	; 0xffffffec
   29d90:	str	r1, [fp, #-24]	; 0xffffffe8
   29d94:	str	r2, [fp, #-28]	; 0xffffffe4
   29d98:	str	r3, [fp, #-32]	; 0xffffffe0
   29d9c:	mov	r0, #1
   29da0:	strb	r0, [fp, #-709]	; 0xfffffd3b
   29da4:	mov	r0, #0
   29da8:	str	r0, [fp, #-720]	; 0xfffffd30
   29dac:	ldr	r0, [fp, #-32]	; 0xffffffe0
   29db0:	ldr	r0, [r0, #16]
   29db4:	sub	r1, fp, #44	; 0x2c
   29db8:	str	r5, [fp, #-1020]	; 0xfffffc04
   29dbc:	str	lr, [fp, #-1024]	; 0xfffffc00
   29dc0:	str	r4, [fp, #-1028]	; 0xfffffbfc
   29dc4:	str	r6, [fp, #-1032]	; 0xfffffbf8
   29dc8:	str	ip, [fp, #-1036]	; 0xfffffbf4
   29dcc:	bl	2c7ec <__assert_fail@plt+0x19c34>
   29dd0:	ldr	r0, [fp, #20]
   29dd4:	movw	r1, #62992	; 0xf610
   29dd8:	movt	r1, #8
   29ddc:	ldr	r2, [r1]
   29de0:	ldr	r1, [fp, #-32]	; 0xffffffe0
   29de4:	ldr	r3, [r1, #96]	; 0x60
   29de8:	ldr	r1, [r1, #100]	; 0x64
   29dec:	sub	sp, sp, #16
   29df0:	mov	ip, sp
   29df4:	mov	lr, #0
   29df8:	str	lr, [ip, #12]
   29dfc:	mov	r4, #1
   29e00:	str	r4, [ip, #8]
   29e04:	str	lr, [ip, #4]
   29e08:	str	r4, [ip]
   29e0c:	str	r0, [fp, #-1040]	; 0xfffffbf0
   29e10:	mov	r0, r3
   29e14:	ldr	r3, [fp, #-1032]	; 0xfffffbf8
   29e18:	str	r2, [fp, #-1044]	; 0xfffffbec
   29e1c:	mov	r2, r3
   29e20:	mov	r3, lr
   29e24:	bl	2e990 <__assert_fail@plt+0x1bdd8>
   29e28:	add	sp, sp, #16
   29e2c:	ldr	r1, [fp, #-1040]	; 0xfffffbf0
   29e30:	str	r0, [fp, #-1048]	; 0xfffffbe8
   29e34:	mov	r0, r1
   29e38:	movw	r1, #49466	; 0xc13a
   29e3c:	movt	r1, #7
   29e40:	ldr	r2, [fp, #-1044]	; 0xfffffbec
   29e44:	ldr	r3, [fp, #-1048]	; 0xfffffbe8
   29e48:	bl	128c4 <fprintf@plt>
   29e4c:	str	r0, [fp, #-716]	; 0xfffffd34
   29e50:	ldr	r0, [fp, #-716]	; 0xfffffd34
   29e54:	cmp	r0, #0
   29e58:	bge	29e70 <__assert_fail@plt+0x172b8>
   29e5c:	movw	r0, #0
   29e60:	strb	r0, [fp, #-709]	; 0xfffffd3b
   29e64:	movw	r0, #100	; 0x64
   29e68:	str	r0, [fp, #-720]	; 0xfffffd30
   29e6c:	b	29e9c <__assert_fail@plt+0x172e4>
   29e70:	ldr	r0, [fp, #-716]	; 0xfffffd34
   29e74:	movw	r1, #62992	; 0xf610
   29e78:	movt	r1, #8
   29e7c:	ldr	r1, [r1]
   29e80:	cmp	r0, r1
   29e84:	ble	29e98 <__assert_fail@plt+0x172e0>
   29e88:	ldr	r0, [fp, #-716]	; 0xfffffd34
   29e8c:	movw	r1, #62992	; 0xf610
   29e90:	movt	r1, #8
   29e94:	str	r0, [r1]
   29e98:	b	29e9c <__assert_fail@plt+0x172e4>
   29e9c:	ldrb	r0, [fp, #-709]	; 0xfffffd3b
   29ea0:	tst	r0, #1
   29ea4:	beq	29fa8 <__assert_fail@plt+0x173f0>
   29ea8:	ldr	r1, [fp, #20]
   29eac:	movw	r0, #32
   29eb0:	bl	12a8c <putc@plt>
   29eb4:	mvn	r1, #0
   29eb8:	cmp	r1, r0
   29ebc:	bne	29ed0 <__assert_fail@plt+0x17318>
   29ec0:	movw	r0, #0
   29ec4:	strb	r0, [fp, #-709]	; 0xfffffd3b
   29ec8:	movw	r0, #150	; 0x96
   29ecc:	str	r0, [fp, #-720]	; 0xfffffd30
   29ed0:	ldr	r0, [fp, #20]
   29ed4:	movw	r1, #62996	; 0xf614
   29ed8:	movt	r1, #8
   29edc:	ldr	r2, [r1]
   29ee0:	ldr	r1, [fp, #-32]	; 0xffffffe0
   29ee4:	ldr	r3, [r1, #64]	; 0x40
   29ee8:	ldr	r1, [r1, #68]	; 0x44
   29eec:	sub	ip, fp, #708	; 0x2c4
   29ef0:	ldr	lr, [fp, #12]
   29ef4:	asr	r4, lr, #31
   29ef8:	sub	sp, sp, #16
   29efc:	mov	r5, sp
   29f00:	str	r4, [r5, #12]
   29f04:	str	lr, [r5, #8]
   29f08:	mov	lr, #0
   29f0c:	str	lr, [r5, #4]
   29f10:	mov	r4, #512	; 0x200
   29f14:	str	r4, [r5]
   29f18:	str	r0, [fp, #-1052]	; 0xfffffbe4
   29f1c:	mov	r0, r3
   29f20:	str	r2, [fp, #-1056]	; 0xfffffbe0
   29f24:	mov	r2, ip
   29f28:	mov	r3, lr
   29f2c:	bl	2e990 <__assert_fail@plt+0x1bdd8>
   29f30:	add	sp, sp, #16
   29f34:	ldr	r1, [fp, #-1052]	; 0xfffffbe4
   29f38:	str	r0, [fp, #-1060]	; 0xfffffbdc
   29f3c:	mov	r0, r1
   29f40:	movw	r1, #49466	; 0xc13a
   29f44:	movt	r1, #7
   29f48:	ldr	r2, [fp, #-1056]	; 0xfffffbe0
   29f4c:	ldr	r3, [fp, #-1060]	; 0xfffffbdc
   29f50:	bl	128c4 <fprintf@plt>
   29f54:	str	r0, [fp, #-716]	; 0xfffffd34
   29f58:	ldr	r0, [fp, #-716]	; 0xfffffd34
   29f5c:	cmp	r0, #0
   29f60:	bge	29f78 <__assert_fail@plt+0x173c0>
   29f64:	movw	r0, #0
   29f68:	strb	r0, [fp, #-709]	; 0xfffffd3b
   29f6c:	movw	r0, #200	; 0xc8
   29f70:	str	r0, [fp, #-720]	; 0xfffffd30
   29f74:	b	29fa4 <__assert_fail@plt+0x173ec>
   29f78:	ldr	r0, [fp, #-716]	; 0xfffffd34
   29f7c:	movw	r1, #62996	; 0xf614
   29f80:	movt	r1, #8
   29f84:	ldr	r1, [r1]
   29f88:	cmp	r0, r1
   29f8c:	ble	29fa0 <__assert_fail@plt+0x173e8>
   29f90:	ldr	r0, [fp, #-716]	; 0xfffffd34
   29f94:	movw	r1, #62996	; 0xf614
   29f98:	movt	r1, #8
   29f9c:	str	r0, [r1]
   29fa0:	b	29fa4 <__assert_fail@plt+0x173ec>
   29fa4:	b	29fa8 <__assert_fail@plt+0x173f0>
   29fa8:	ldrb	r0, [fp, #-709]	; 0xfffffd3b
   29fac:	tst	r0, #1
   29fb0:	beq	29fe0 <__assert_fail@plt+0x17428>
   29fb4:	ldr	r1, [fp, #20]
   29fb8:	movw	r0, #32
   29fbc:	bl	12a8c <putc@plt>
   29fc0:	mvn	r1, #0
   29fc4:	cmp	r1, r0
   29fc8:	bne	29fdc <__assert_fail@plt+0x17424>
   29fcc:	movw	r0, #0
   29fd0:	strb	r0, [fp, #-709]	; 0xfffffd3b
   29fd4:	movw	r0, #250	; 0xfa
   29fd8:	str	r0, [fp, #-720]	; 0xfffffd30
   29fdc:	b	29fe0 <__assert_fail@plt+0x17428>
   29fe0:	ldrb	r0, [fp, #-709]	; 0xfffffd3b
   29fe4:	tst	r0, #1
   29fe8:	beq	2a014 <__assert_fail@plt+0x1745c>
   29fec:	sub	r0, fp, #44	; 0x2c
   29ff0:	ldr	r1, [fp, #20]
   29ff4:	bl	12b4c <fputs@plt>
   29ff8:	cmp	r0, #0
   29ffc:	bge	2a010 <__assert_fail@plt+0x17458>
   2a000:	movw	r0, #0
   2a004:	strb	r0, [fp, #-709]	; 0xfffffd3b
   2a008:	movw	r0, #275	; 0x113
   2a00c:	str	r0, [fp, #-720]	; 0xfffffd30
   2a010:	b	2a014 <__assert_fail@plt+0x1745c>
   2a014:	ldrb	r0, [fp, #-709]	; 0xfffffd3b
   2a018:	tst	r0, #1
   2a01c:	beq	2a098 <__assert_fail@plt+0x174e0>
   2a020:	ldr	r0, [fp, #20]
   2a024:	movw	r1, #63000	; 0xf618
   2a028:	movt	r1, #8
   2a02c:	ldr	r2, [r1]
   2a030:	ldr	r1, [fp, #-32]	; 0xffffffe0
   2a034:	ldr	r3, [r1, #20]
   2a038:	movw	r1, #49470	; 0xc13e
   2a03c:	movt	r1, #7
   2a040:	bl	128c4 <fprintf@plt>
   2a044:	str	r0, [fp, #-716]	; 0xfffffd34
   2a048:	ldr	r0, [fp, #-716]	; 0xfffffd34
   2a04c:	cmp	r0, #0
   2a050:	bge	2a068 <__assert_fail@plt+0x174b0>
   2a054:	movw	r0, #0
   2a058:	strb	r0, [fp, #-709]	; 0xfffffd3b
   2a05c:	movw	r0, #300	; 0x12c
   2a060:	str	r0, [fp, #-720]	; 0xfffffd30
   2a064:	b	2a094 <__assert_fail@plt+0x174dc>
   2a068:	ldr	r0, [fp, #-716]	; 0xfffffd34
   2a06c:	movw	r1, #63000	; 0xf618
   2a070:	movt	r1, #8
   2a074:	ldr	r1, [r1]
   2a078:	cmp	r0, r1
   2a07c:	ble	2a090 <__assert_fail@plt+0x174d8>
   2a080:	ldr	r0, [fp, #-716]	; 0xfffffd34
   2a084:	movw	r1, #63000	; 0xf618
   2a088:	movt	r1, #8
   2a08c:	str	r0, [r1]
   2a090:	b	2a094 <__assert_fail@plt+0x174dc>
   2a094:	b	2a098 <__assert_fail@plt+0x174e0>
   2a098:	ldrb	r0, [fp, #-709]	; 0xfffffd3b
   2a09c:	tst	r0, #1
   2a0a0:	beq	2a1e8 <__assert_fail@plt+0x17630>
   2a0a4:	ldr	r1, [fp, #20]
   2a0a8:	movw	r0, #32
   2a0ac:	bl	12a8c <putc@plt>
   2a0b0:	mvn	r1, #0
   2a0b4:	cmp	r1, r0
   2a0b8:	bne	2a0cc <__assert_fail@plt+0x17514>
   2a0bc:	movw	r0, #0
   2a0c0:	strb	r0, [fp, #-709]	; 0xfffffd3b
   2a0c4:	movw	r0, #250	; 0xfa
   2a0c8:	str	r0, [fp, #-720]	; 0xfffffd30
   2a0cc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2a0d0:	ldr	r0, [r0, #24]
   2a0d4:	bl	2fb58 <__assert_fail@plt+0x1cfa0>
   2a0d8:	str	r0, [fp, #-52]	; 0xffffffcc
   2a0dc:	ldr	r0, [fp, #-52]	; 0xffffffcc
   2a0e0:	movw	lr, #0
   2a0e4:	cmp	r0, lr
   2a0e8:	beq	2a170 <__assert_fail@plt+0x175b8>
   2a0ec:	ldr	r0, [fp, #-52]	; 0xffffffcc
   2a0f0:	movw	r1, #0
   2a0f4:	bl	31214 <__assert_fail@plt+0x1e65c>
   2a0f8:	str	r0, [fp, #-724]	; 0xfffffd2c
   2a0fc:	ldr	r0, [fp, #-724]	; 0xfffffd2c
   2a100:	movw	r1, #63004	; 0xf61c
   2a104:	movt	r1, #8
   2a108:	ldr	r1, [r1]
   2a10c:	cmp	r0, r1
   2a110:	ble	2a124 <__assert_fail@plt+0x1756c>
   2a114:	ldr	r0, [fp, #-724]	; 0xfffffd2c
   2a118:	movw	r1, #63004	; 0xf61c
   2a11c:	movt	r1, #8
   2a120:	str	r0, [r1]
   2a124:	ldr	r0, [fp, #20]
   2a128:	movw	r1, #63004	; 0xf61c
   2a12c:	movt	r1, #8
   2a130:	ldr	r2, [r1]
   2a134:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2a138:	movw	r1, #49475	; 0xc143
   2a13c:	movt	r1, #7
   2a140:	bl	128c4 <fprintf@plt>
   2a144:	cmp	r0, #0
   2a148:	movw	r0, #0
   2a14c:	movge	r0, #1
   2a150:	and	r0, r0, #1
   2a154:	strb	r0, [fp, #-709]	; 0xfffffd3b
   2a158:	ldrb	r0, [fp, #-709]	; 0xfffffd3b
   2a15c:	tst	r0, #1
   2a160:	bne	2a16c <__assert_fail@plt+0x175b4>
   2a164:	movw	r0, #400	; 0x190
   2a168:	str	r0, [fp, #-720]	; 0xfffffd30
   2a16c:	b	2a1e4 <__assert_fail@plt+0x1762c>
   2a170:	ldr	r0, [fp, #20]
   2a174:	ldr	r1, [fp, #-32]	; 0xffffffe0
   2a178:	ldr	r2, [r1, #24]
   2a17c:	movw	r1, #49481	; 0xc149
   2a180:	movt	r1, #7
   2a184:	bl	128c4 <fprintf@plt>
   2a188:	str	r0, [fp, #-716]	; 0xfffffd34
   2a18c:	ldr	r0, [fp, #-716]	; 0xfffffd34
   2a190:	movw	r1, #63004	; 0xf61c
   2a194:	movt	r1, #8
   2a198:	ldr	r1, [r1]
   2a19c:	cmp	r0, r1
   2a1a0:	ble	2a1b4 <__assert_fail@plt+0x175fc>
   2a1a4:	ldr	r0, [fp, #-716]	; 0xfffffd34
   2a1a8:	movw	r1, #63004	; 0xf61c
   2a1ac:	movt	r1, #8
   2a1b0:	str	r0, [r1]
   2a1b4:	ldr	r0, [fp, #-716]	; 0xfffffd34
   2a1b8:	cmp	r0, #0
   2a1bc:	movw	r0, #0
   2a1c0:	movgt	r0, #1
   2a1c4:	and	r0, r0, #1
   2a1c8:	strb	r0, [fp, #-709]	; 0xfffffd3b
   2a1cc:	ldrb	r0, [fp, #-709]	; 0xfffffd3b
   2a1d0:	tst	r0, #1
   2a1d4:	bne	2a1e0 <__assert_fail@plt+0x17628>
   2a1d8:	movw	r0, #450	; 0x1c2
   2a1dc:	str	r0, [fp, #-720]	; 0xfffffd30
   2a1e0:	b	2a1e4 <__assert_fail@plt+0x1762c>
   2a1e4:	b	2a1e8 <__assert_fail@plt+0x17630>
   2a1e8:	ldrb	r0, [fp, #-709]	; 0xfffffd3b
   2a1ec:	tst	r0, #1
   2a1f0:	beq	2a358 <__assert_fail@plt+0x177a0>
   2a1f4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2a1f8:	ldr	r0, [r0, #28]
   2a1fc:	bl	2fe54 <__assert_fail@plt+0x1d29c>
   2a200:	str	r0, [fp, #-56]	; 0xffffffc8
   2a204:	ldr	r0, [fp, #-56]	; 0xffffffc8
   2a208:	movw	lr, #0
   2a20c:	cmp	r0, lr
   2a210:	beq	2a298 <__assert_fail@plt+0x176e0>
   2a214:	ldr	r0, [fp, #-56]	; 0xffffffc8
   2a218:	movw	r1, #0
   2a21c:	bl	31214 <__assert_fail@plt+0x1e65c>
   2a220:	str	r0, [fp, #-728]	; 0xfffffd28
   2a224:	ldr	r0, [fp, #-728]	; 0xfffffd28
   2a228:	movw	r1, #63008	; 0xf620
   2a22c:	movt	r1, #8
   2a230:	ldr	r1, [r1]
   2a234:	cmp	r0, r1
   2a238:	ble	2a24c <__assert_fail@plt+0x17694>
   2a23c:	ldr	r0, [fp, #-728]	; 0xfffffd28
   2a240:	movw	r1, #63008	; 0xf620
   2a244:	movt	r1, #8
   2a248:	str	r0, [r1]
   2a24c:	ldr	r0, [fp, #20]
   2a250:	movw	r1, #63008	; 0xf620
   2a254:	movt	r1, #8
   2a258:	ldr	r2, [r1]
   2a25c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2a260:	movw	r1, #49475	; 0xc143
   2a264:	movt	r1, #7
   2a268:	bl	128c4 <fprintf@plt>
   2a26c:	cmp	r0, #0
   2a270:	movw	r0, #0
   2a274:	movge	r0, #1
   2a278:	and	r0, r0, #1
   2a27c:	strb	r0, [fp, #-709]	; 0xfffffd3b
   2a280:	ldrb	r0, [fp, #-709]	; 0xfffffd3b
   2a284:	tst	r0, #1
   2a288:	bne	2a294 <__assert_fail@plt+0x176dc>
   2a28c:	movw	r0, #500	; 0x1f4
   2a290:	str	r0, [fp, #-720]	; 0xfffffd30
   2a294:	b	2a354 <__assert_fail@plt+0x1779c>
   2a298:	ldr	r0, [fp, #20]
   2a29c:	movw	r1, #63008	; 0xf620
   2a2a0:	movt	r1, #8
   2a2a4:	ldr	r2, [r1]
   2a2a8:	ldr	r1, [fp, #-32]	; 0xffffffe0
   2a2ac:	ldr	r3, [r1, #28]
   2a2b0:	movw	r1, #49488	; 0xc150
   2a2b4:	movt	r1, #7
   2a2b8:	bl	128c4 <fprintf@plt>
   2a2bc:	str	r0, [fp, #-716]	; 0xfffffd34
   2a2c0:	ldr	r0, [fp, #-716]	; 0xfffffd34
   2a2c4:	movw	r1, #63008	; 0xf620
   2a2c8:	movt	r1, #8
   2a2cc:	ldr	r1, [r1]
   2a2d0:	cmp	r0, r1
   2a2d4:	ble	2a2e8 <__assert_fail@plt+0x17730>
   2a2d8:	ldr	r0, [fp, #-716]	; 0xfffffd34
   2a2dc:	movw	r1, #63008	; 0xf620
   2a2e0:	movt	r1, #8
   2a2e4:	str	r0, [r1]
   2a2e8:	ldr	r0, [fp, #-716]	; 0xfffffd34
   2a2ec:	cmp	r0, #0
   2a2f0:	movw	r0, #0
   2a2f4:	movge	r0, #1
   2a2f8:	and	r0, r0, #1
   2a2fc:	strb	r0, [fp, #-709]	; 0xfffffd3b
   2a300:	ldrb	r0, [fp, #-709]	; 0xfffffd3b
   2a304:	tst	r0, #1
   2a308:	beq	2a338 <__assert_fail@plt+0x17780>
   2a30c:	ldr	r1, [fp, #20]
   2a310:	movw	r0, #32
   2a314:	bl	12a8c <putc@plt>
   2a318:	mvn	r1, #0
   2a31c:	cmp	r1, r0
   2a320:	bne	2a334 <__assert_fail@plt+0x1777c>
   2a324:	movw	r0, #0
   2a328:	strb	r0, [fp, #-709]	; 0xfffffd3b
   2a32c:	movw	r0, #525	; 0x20d
   2a330:	str	r0, [fp, #-720]	; 0xfffffd30
   2a334:	b	2a350 <__assert_fail@plt+0x17798>
   2a338:	ldrb	r0, [fp, #-709]	; 0xfffffd3b
   2a33c:	tst	r0, #1
   2a340:	bne	2a34c <__assert_fail@plt+0x17794>
   2a344:	movw	r0, #550	; 0x226
   2a348:	str	r0, [fp, #-720]	; 0xfffffd30
   2a34c:	b	2a350 <__assert_fail@plt+0x17798>
   2a350:	b	2a354 <__assert_fail@plt+0x1779c>
   2a354:	b	2a358 <__assert_fail@plt+0x177a0>
   2a358:	ldrb	r0, [fp, #-709]	; 0xfffffd3b
   2a35c:	tst	r0, #1
   2a360:	beq	2a580 <__assert_fail@plt+0x179c8>
   2a364:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2a368:	ldr	r0, [r0, #16]
   2a36c:	and	r0, r0, #61440	; 0xf000
   2a370:	cmp	r0, #8192	; 0x2000
   2a374:	beq	2a38c <__assert_fail@plt+0x177d4>
   2a378:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2a37c:	ldr	r0, [r0, #16]
   2a380:	and	r0, r0, #61440	; 0xf000
   2a384:	cmp	r0, #24576	; 0x6000
   2a388:	bne	2a478 <__assert_fail@plt+0x178c0>
   2a38c:	ldr	r0, [fp, #20]
   2a390:	ldr	r1, [fp, #-32]	; 0xffffffe0
   2a394:	ldr	r2, [r1, #32]
   2a398:	ldr	r1, [r1, #36]	; 0x24
   2a39c:	str	r0, [fp, #-1064]	; 0xfffffbd8
   2a3a0:	mov	r0, r2
   2a3a4:	bl	12474 <gnu_dev_major@plt>
   2a3a8:	ldr	r1, [fp, #-1064]	; 0xfffffbd8
   2a3ac:	str	r0, [fp, #-1068]	; 0xfffffbd4
   2a3b0:	mov	r0, r1
   2a3b4:	ldr	r1, [fp, #-1068]	; 0xfffffbd4
   2a3b8:	movw	r2, #63012	; 0xf624
   2a3bc:	movt	r2, #8
   2a3c0:	bl	2aa2c <__assert_fail@plt+0x17e74>
   2a3c4:	tst	r0, #1
   2a3c8:	bne	2a3dc <__assert_fail@plt+0x17824>
   2a3cc:	movw	r0, #0
   2a3d0:	strb	r0, [fp, #-709]	; 0xfffffd3b
   2a3d4:	movw	r0, #600	; 0x258
   2a3d8:	str	r0, [fp, #-720]	; 0xfffffd30
   2a3dc:	ldrb	r0, [fp, #-709]	; 0xfffffd3b
   2a3e0:	tst	r0, #1
   2a3e4:	beq	2a414 <__assert_fail@plt+0x1785c>
   2a3e8:	ldr	r0, [fp, #20]
   2a3ec:	movw	r1, #39813	; 0x9b85
   2a3f0:	movt	r1, #7
   2a3f4:	bl	128c4 <fprintf@plt>
   2a3f8:	cmp	r0, #0
   2a3fc:	bge	2a410 <__assert_fail@plt+0x17858>
   2a400:	movw	r0, #0
   2a404:	strb	r0, [fp, #-709]	; 0xfffffd3b
   2a408:	movw	r0, #625	; 0x271
   2a40c:	str	r0, [fp, #-720]	; 0xfffffd30
   2a410:	b	2a414 <__assert_fail@plt+0x1785c>
   2a414:	ldrb	r0, [fp, #-709]	; 0xfffffd3b
   2a418:	tst	r0, #1
   2a41c:	beq	2a474 <__assert_fail@plt+0x178bc>
   2a420:	ldr	r0, [fp, #20]
   2a424:	ldr	r1, [fp, #-32]	; 0xffffffe0
   2a428:	ldr	r2, [r1, #32]
   2a42c:	ldr	r1, [r1, #36]	; 0x24
   2a430:	str	r0, [fp, #-1072]	; 0xfffffbd0
   2a434:	mov	r0, r2
   2a438:	bl	12504 <gnu_dev_minor@plt>
   2a43c:	ldr	r1, [fp, #-1072]	; 0xfffffbd0
   2a440:	str	r0, [fp, #-1076]	; 0xfffffbcc
   2a444:	mov	r0, r1
   2a448:	ldr	r1, [fp, #-1076]	; 0xfffffbcc
   2a44c:	movw	r2, #63016	; 0xf628
   2a450:	movt	r2, #8
   2a454:	bl	2aa2c <__assert_fail@plt+0x17e74>
   2a458:	tst	r0, #1
   2a45c:	bne	2a470 <__assert_fail@plt+0x178b8>
   2a460:	movw	r0, #0
   2a464:	strb	r0, [fp, #-709]	; 0xfffffd3b
   2a468:	movw	r0, #650	; 0x28a
   2a46c:	str	r0, [fp, #-720]	; 0xfffffd30
   2a470:	b	2a474 <__assert_fail@plt+0x178bc>
   2a474:	b	2a57c <__assert_fail@plt+0x179c4>
   2a478:	ldr	r0, [fp, #12]
   2a47c:	cmp	r0, #0
   2a480:	bge	2a490 <__assert_fail@plt+0x178d8>
   2a484:	ldr	r0, [fp, #12]
   2a488:	str	r0, [fp, #-1080]	; 0xfffffbc8
   2a48c:	b	2a49c <__assert_fail@plt+0x178e4>
   2a490:	movw	r0, #1
   2a494:	str	r0, [fp, #-1080]	; 0xfffffbc8
   2a498:	b	2a49c <__assert_fail@plt+0x178e4>
   2a49c:	ldr	r0, [fp, #-1080]	; 0xfffffbc8
   2a4a0:	str	r0, [fp, #-732]	; 0xfffffd24
   2a4a4:	ldr	r0, [fp, #20]
   2a4a8:	movw	r1, #63020	; 0xf62c
   2a4ac:	movt	r1, #8
   2a4b0:	ldr	r2, [r1]
   2a4b4:	ldr	r1, [fp, #-32]	; 0xffffffe0
   2a4b8:	ldr	r3, [r1, #48]	; 0x30
   2a4bc:	ldr	r1, [r1, #52]	; 0x34
   2a4c0:	sub	ip, fp, #708	; 0x2c4
   2a4c4:	ldr	lr, [fp, #-732]	; 0xfffffd24
   2a4c8:	asr	r4, lr, #31
   2a4cc:	sub	sp, sp, #16
   2a4d0:	mov	r5, sp
   2a4d4:	str	r4, [r5, #12]
   2a4d8:	str	lr, [r5, #8]
   2a4dc:	mov	lr, #0
   2a4e0:	str	lr, [r5, #4]
   2a4e4:	mov	r4, #1
   2a4e8:	str	r4, [r5]
   2a4ec:	str	r0, [fp, #-1084]	; 0xfffffbc4
   2a4f0:	mov	r0, r3
   2a4f4:	str	r2, [fp, #-1088]	; 0xfffffbc0
   2a4f8:	mov	r2, ip
   2a4fc:	mov	r3, lr
   2a500:	bl	2e990 <__assert_fail@plt+0x1bdd8>
   2a504:	add	sp, sp, #16
   2a508:	ldr	r1, [fp, #-1084]	; 0xfffffbc4
   2a50c:	str	r0, [fp, #-1092]	; 0xfffffbbc
   2a510:	mov	r0, r1
   2a514:	movw	r1, #49466	; 0xc13a
   2a518:	movt	r1, #7
   2a51c:	ldr	r2, [fp, #-1088]	; 0xfffffbc0
   2a520:	ldr	r3, [fp, #-1092]	; 0xfffffbbc
   2a524:	bl	128c4 <fprintf@plt>
   2a528:	str	r0, [fp, #-716]	; 0xfffffd34
   2a52c:	ldr	r0, [fp, #-716]	; 0xfffffd34
   2a530:	cmp	r0, #0
   2a534:	bge	2a54c <__assert_fail@plt+0x17994>
   2a538:	movw	r0, #0
   2a53c:	strb	r0, [fp, #-709]	; 0xfffffd3b
   2a540:	movw	r0, #800	; 0x320
   2a544:	str	r0, [fp, #-720]	; 0xfffffd30
   2a548:	b	2a578 <__assert_fail@plt+0x179c0>
   2a54c:	ldr	r0, [fp, #-716]	; 0xfffffd34
   2a550:	movw	r1, #63020	; 0xf62c
   2a554:	movt	r1, #8
   2a558:	ldr	r1, [r1]
   2a55c:	cmp	r0, r1
   2a560:	ble	2a574 <__assert_fail@plt+0x179bc>
   2a564:	ldr	r0, [fp, #-716]	; 0xfffffd34
   2a568:	movw	r1, #63020	; 0xf62c
   2a56c:	movt	r1, #8
   2a570:	str	r0, [r1]
   2a574:	b	2a578 <__assert_fail@plt+0x179c0>
   2a578:	b	2a57c <__assert_fail@plt+0x179c4>
   2a57c:	b	2a580 <__assert_fail@plt+0x179c8>
   2a580:	ldrb	r0, [fp, #-709]	; 0xfffffd3b
   2a584:	tst	r0, #1
   2a588:	beq	2a5b8 <__assert_fail@plt+0x17a00>
   2a58c:	ldr	r1, [fp, #20]
   2a590:	movw	r0, #32
   2a594:	bl	12a8c <putc@plt>
   2a598:	mvn	r1, #0
   2a59c:	cmp	r1, r0
   2a5a0:	bne	2a5b4 <__assert_fail@plt+0x179fc>
   2a5a4:	movw	r0, #0
   2a5a8:	strb	r0, [fp, #-709]	; 0xfffffd3b
   2a5ac:	movw	r0, #850	; 0x352
   2a5b0:	str	r0, [fp, #-720]	; 0xfffffd30
   2a5b4:	b	2a5b8 <__assert_fail@plt+0x17a00>
   2a5b8:	ldrb	r0, [fp, #-709]	; 0xfffffd3b
   2a5bc:	tst	r0, #1
   2a5c0:	beq	2a88c <__assert_fail@plt+0x17cd4>
   2a5c4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2a5c8:	add	r0, r0, #80	; 0x50
   2a5cc:	bl	12810 <localtime@plt>
   2a5d0:	str	r0, [fp, #-48]	; 0xffffffd0
   2a5d4:	movw	lr, #0
   2a5d8:	cmp	r0, lr
   2a5dc:	beq	2a6e0 <__assert_fail@plt+0x17b28>
   2a5e0:	ldr	r0, [pc, #1088]	; 2aa28 <__assert_fail@plt+0x17e70>
   2a5e4:	sub	r1, fp, #988	; 0x3dc
   2a5e8:	str	r1, [fp, #-992]	; 0xfffffc20
   2a5ec:	movw	r1, #256	; 0x100
   2a5f0:	str	r1, [fp, #-996]	; 0xfffffc1c
   2a5f4:	ldr	r1, [fp, #8]
   2a5f8:	sub	r0, r1, r0
   2a5fc:	ldr	r1, [fp, #-32]	; 0xffffffe0
   2a600:	ldr	r1, [r1, #80]	; 0x50
   2a604:	cmp	r0, r1
   2a608:	movw	r0, #0
   2a60c:	str	r0, [fp, #-1096]	; 0xfffffbb8
   2a610:	bgt	2a634 <__assert_fail@plt+0x17a7c>
   2a614:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2a618:	ldr	r0, [r0, #80]	; 0x50
   2a61c:	ldr	r1, [fp, #8]
   2a620:	add	r1, r1, #3600	; 0xe10
   2a624:	cmp	r0, r1
   2a628:	movw	r0, #0
   2a62c:	movle	r0, #1
   2a630:	str	r0, [fp, #-1096]	; 0xfffffbb8
   2a634:	ldr	r0, [fp, #-1096]	; 0xfffffbb8
   2a638:	tst	r0, #1
   2a63c:	movw	r0, #49506	; 0xc162
   2a640:	movt	r0, #7
   2a644:	movw	r1, #49494	; 0xc156
   2a648:	movt	r1, #7
   2a64c:	movne	r0, r1
   2a650:	str	r0, [fp, #-1000]	; 0xfffffc18
   2a654:	ldr	r0, [fp, #-992]	; 0xfffffc20
   2a658:	ldr	r1, [fp, #-996]	; 0xfffffc1c
   2a65c:	ldr	r2, [fp, #-1000]	; 0xfffffc18
   2a660:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2a664:	bl	127f8 <strftime@plt>
   2a668:	cmp	r0, #0
   2a66c:	movw	r0, #0
   2a670:	movne	r0, #1
   2a674:	mvn	r1, #0
   2a678:	eor	r0, r0, r1
   2a67c:	tst	r0, #1
   2a680:	beq	2a6b0 <__assert_fail@plt+0x17af8>
   2a684:	ldr	r0, [fp, #-996]	; 0xfffffc1c
   2a688:	lsl	r1, r0, #1
   2a68c:	str	r1, [fp, #-996]	; 0xfffffc1c
   2a690:	mov	r1, #7
   2a694:	add	r0, r1, r0, lsl #1
   2a698:	bic	r0, r0, #7
   2a69c:	mov	r1, sp
   2a6a0:	sub	r0, r1, r0
   2a6a4:	mov	sp, r0
   2a6a8:	str	r0, [fp, #-992]	; 0xfffffc20
   2a6ac:	b	2a654 <__assert_fail@plt+0x17a9c>
   2a6b0:	ldr	r0, [fp, #20]
   2a6b4:	ldr	r2, [fp, #-992]	; 0xfffffc20
   2a6b8:	movw	r1, #49519	; 0xc16f
   2a6bc:	movt	r1, #7
   2a6c0:	bl	128c4 <fprintf@plt>
   2a6c4:	cmp	r0, #0
   2a6c8:	bge	2a6dc <__assert_fail@plt+0x17b24>
   2a6cc:	movw	r0, #0
   2a6d0:	strb	r0, [fp, #-709]	; 0xfffffd3b
   2a6d4:	movw	r0, #900	; 0x384
   2a6d8:	str	r0, [fp, #-720]	; 0xfffffd30
   2a6dc:	b	2a888 <__assert_fail@plt+0x17cd0>
   2a6e0:	movw	r0, #12
   2a6e4:	str	r0, [fp, #-1004]	; 0xfffffc14
   2a6e8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2a6ec:	ldr	r0, [r0, #80]	; 0x50
   2a6f0:	cmp	r0, #0
   2a6f4:	bge	2a7f4 <__assert_fail@plt+0x17c3c>
   2a6f8:	sub	r2, fp, #708	; 0x2c4
   2a6fc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2a700:	ldr	r0, [r0, #80]	; 0x50
   2a704:	rsbs	r1, r0, #0
   2a708:	mov	r3, #0
   2a70c:	sbc	r0, r3, r0, asr #31
   2a710:	sub	sp, sp, #16
   2a714:	mov	r3, sp
   2a718:	mov	ip, #0
   2a71c:	str	ip, [r3, #12]
   2a720:	mov	lr, #1
   2a724:	str	lr, [r3, #8]
   2a728:	str	ip, [r3, #4]
   2a72c:	str	lr, [r3]
   2a730:	str	r0, [fp, #-1100]	; 0xfffffbb4
   2a734:	mov	r0, r1
   2a738:	ldr	r1, [fp, #-1100]	; 0xfffffbb4
   2a73c:	mov	r3, ip
   2a740:	bl	2e990 <__assert_fail@plt+0x1bdd8>
   2a744:	add	sp, sp, #16
   2a748:	str	r0, [fp, #-1008]	; 0xfffffc10
   2a74c:	ldr	r0, [fp, #-1004]	; 0xfffffc14
   2a750:	ldr	r1, [fp, #-1008]	; 0xfffffc10
   2a754:	str	r0, [fp, #-1104]	; 0xfffffbb0
   2a758:	mov	r0, r1
   2a75c:	bl	12888 <strlen@plt>
   2a760:	ldr	r1, [fp, #-1104]	; 0xfffffbb0
   2a764:	sub	r0, r1, r0
   2a768:	str	r0, [fp, #-1012]	; 0xfffffc0c
   2a76c:	ldr	r0, [fp, #20]
   2a770:	ldr	r1, [fp, #-1012]	; 0xfffffc0c
   2a774:	cmp	r1, #0
   2a778:	str	r0, [fp, #-1108]	; 0xfffffbac
   2a77c:	bge	2a78c <__assert_fail@plt+0x17bd4>
   2a780:	movw	r0, #0
   2a784:	str	r0, [fp, #-1112]	; 0xfffffba8
   2a788:	b	2a794 <__assert_fail@plt+0x17bdc>
   2a78c:	ldr	r0, [fp, #-1012]	; 0xfffffc0c
   2a790:	str	r0, [fp, #-1112]	; 0xfffffba8
   2a794:	ldr	r0, [fp, #-1112]	; 0xfffffba8
   2a798:	ldr	r1, [fp, #-1008]	; 0xfffffc10
   2a79c:	sub	sp, sp, #8
   2a7a0:	ldr	r2, [fp, #-1108]	; 0xfffffbac
   2a7a4:	str	r0, [fp, #-1116]	; 0xfffffba4
   2a7a8:	mov	r0, r2
   2a7ac:	movw	r3, #49516	; 0xc16c
   2a7b0:	movt	r3, #7
   2a7b4:	str	r1, [fp, #-1120]	; 0xfffffba0
   2a7b8:	mov	r1, r3
   2a7bc:	ldr	r2, [fp, #-1116]	; 0xfffffba4
   2a7c0:	movw	r3, #56893	; 0xde3d
   2a7c4:	movt	r3, #7
   2a7c8:	ldr	ip, [fp, #-1120]	; 0xfffffba0
   2a7cc:	str	ip, [sp]
   2a7d0:	bl	128c4 <fprintf@plt>
   2a7d4:	add	sp, sp, #8
   2a7d8:	cmp	r0, #0
   2a7dc:	bge	2a7f0 <__assert_fail@plt+0x17c38>
   2a7e0:	movw	r0, #0
   2a7e4:	strb	r0, [fp, #-709]	; 0xfffffd3b
   2a7e8:	movw	r0, #1000	; 0x3e8
   2a7ec:	str	r0, [fp, #-720]	; 0xfffffd30
   2a7f0:	b	2a884 <__assert_fail@plt+0x17ccc>
   2a7f4:	sub	r2, fp, #708	; 0x2c4
   2a7f8:	ldr	r0, [fp, #20]
   2a7fc:	ldr	r1, [fp, #-1004]	; 0xfffffc14
   2a800:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2a804:	ldr	r3, [r3, #80]	; 0x50
   2a808:	asr	ip, r3, #31
   2a80c:	sub	sp, sp, #16
   2a810:	mov	lr, sp
   2a814:	mov	r4, #0
   2a818:	str	r4, [lr, #12]
   2a81c:	mov	r5, #1
   2a820:	str	r5, [lr, #8]
   2a824:	str	r4, [lr, #4]
   2a828:	str	r5, [lr]
   2a82c:	str	r0, [fp, #-1124]	; 0xfffffb9c
   2a830:	mov	r0, r3
   2a834:	str	r1, [fp, #-1128]	; 0xfffffb98
   2a838:	mov	r1, ip
   2a83c:	mov	r3, r4
   2a840:	bl	2e990 <__assert_fail@plt+0x1bdd8>
   2a844:	add	sp, sp, #16
   2a848:	ldr	r1, [fp, #-1124]	; 0xfffffb9c
   2a84c:	str	r0, [fp, #-1132]	; 0xfffffb94
   2a850:	mov	r0, r1
   2a854:	movw	r1, #49523	; 0xc173
   2a858:	movt	r1, #7
   2a85c:	ldr	r2, [fp, #-1128]	; 0xfffffb98
   2a860:	ldr	r3, [fp, #-1132]	; 0xfffffb94
   2a864:	bl	128c4 <fprintf@plt>
   2a868:	cmp	r0, #0
   2a86c:	bge	2a880 <__assert_fail@plt+0x17cc8>
   2a870:	movw	r0, #0
   2a874:	strb	r0, [fp, #-709]	; 0xfffffd3b
   2a878:	movw	r0, #1100	; 0x44c
   2a87c:	str	r0, [fp, #-720]	; 0xfffffd30
   2a880:	b	2a884 <__assert_fail@plt+0x17ccc>
   2a884:	b	2a888 <__assert_fail@plt+0x17cd0>
   2a888:	b	2a88c <__assert_fail@plt+0x17cd4>
   2a88c:	ldrb	r0, [fp, #-709]	; 0xfffffd3b
   2a890:	tst	r0, #1
   2a894:	beq	2a8c8 <__assert_fail@plt+0x17d10>
   2a898:	ldr	r0, [fp, #-20]	; 0xffffffec
   2a89c:	ldr	r1, [fp, #20]
   2a8a0:	ldr	r2, [fp, #16]
   2a8a4:	bl	2aabc <__assert_fail@plt+0x17f04>
   2a8a8:	and	r0, r0, #1
   2a8ac:	strb	r0, [fp, #-709]	; 0xfffffd3b
   2a8b0:	ldrb	r0, [fp, #-709]	; 0xfffffd3b
   2a8b4:	tst	r0, #1
   2a8b8:	bne	2a8c4 <__assert_fail@plt+0x17d0c>
   2a8bc:	movw	r0, #1200	; 0x4b0
   2a8c0:	str	r0, [fp, #-720]	; 0xfffffd30
   2a8c4:	b	2a8c8 <__assert_fail@plt+0x17d10>
   2a8c8:	ldrb	r0, [fp, #-709]	; 0xfffffd3b
   2a8cc:	tst	r0, #1
   2a8d0:	beq	2a9e0 <__assert_fail@plt+0x17e28>
   2a8d4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2a8d8:	ldr	r0, [r0, #16]
   2a8dc:	and	r0, r0, #61440	; 0xf000
   2a8e0:	cmp	r0, #40960	; 0xa000
   2a8e4:	bne	2a994 <__assert_fail@plt+0x17ddc>
   2a8e8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2a8ec:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2a8f0:	bl	2ba3c <__assert_fail@plt+0x18e84>
   2a8f4:	str	r0, [fp, #-1016]	; 0xfffffc08
   2a8f8:	ldr	r0, [fp, #-1016]	; 0xfffffc08
   2a8fc:	movw	r1, #0
   2a900:	cmp	r0, r1
   2a904:	beq	2a970 <__assert_fail@plt+0x17db8>
   2a908:	ldr	r1, [fp, #20]
   2a90c:	movw	r0, #49528	; 0xc178
   2a910:	movt	r0, #7
   2a914:	bl	12b4c <fputs@plt>
   2a918:	cmp	r0, #0
   2a91c:	bge	2a930 <__assert_fail@plt+0x17d78>
   2a920:	movw	r0, #0
   2a924:	strb	r0, [fp, #-709]	; 0xfffffd3b
   2a928:	movw	r0, #1300	; 0x514
   2a92c:	str	r0, [fp, #-720]	; 0xfffffd30
   2a930:	ldrb	r0, [fp, #-709]	; 0xfffffd3b
   2a934:	tst	r0, #1
   2a938:	beq	2a96c <__assert_fail@plt+0x17db4>
   2a93c:	ldr	r0, [fp, #-1016]	; 0xfffffc08
   2a940:	ldr	r1, [fp, #20]
   2a944:	ldr	r2, [fp, #16]
   2a948:	bl	2aabc <__assert_fail@plt+0x17f04>
   2a94c:	and	r0, r0, #1
   2a950:	strb	r0, [fp, #-709]	; 0xfffffd3b
   2a954:	ldrb	r0, [fp, #-709]	; 0xfffffd3b
   2a958:	tst	r0, #1
   2a95c:	bne	2a968 <__assert_fail@plt+0x17db0>
   2a960:	movw	r0, #1350	; 0x546
   2a964:	str	r0, [fp, #-720]	; 0xfffffd30
   2a968:	b	2a96c <__assert_fail@plt+0x17db4>
   2a96c:	b	2a98c <__assert_fail@plt+0x17dd4>
   2a970:	bl	128d0 <__errno_location@plt>
   2a974:	ldr	r1, [r0]
   2a978:	ldr	r3, [fp, #-20]	; 0xffffffec
   2a97c:	movw	r0, #0
   2a980:	movw	r2, #59431	; 0xe827
   2a984:	movt	r2, #7
   2a988:	bl	12780 <error@plt>
   2a98c:	ldr	r0, [fp, #-1016]	; 0xfffffc08
   2a990:	bl	50c68 <__assert_fail@plt+0x3e0b0>
   2a994:	ldrb	r0, [fp, #-709]	; 0xfffffd3b
   2a998:	tst	r0, #1
   2a99c:	beq	2a9dc <__assert_fail@plt+0x17e24>
   2a9a0:	ldr	r1, [fp, #20]
   2a9a4:	movw	r0, #10
   2a9a8:	bl	12a8c <putc@plt>
   2a9ac:	mvn	r1, #0
   2a9b0:	cmp	r1, r0
   2a9b4:	bne	2a9d8 <__assert_fail@plt+0x17e20>
   2a9b8:	movw	r0, #0
   2a9bc:	strb	r0, [fp, #-709]	; 0xfffffd3b
   2a9c0:	ldrb	r0, [fp, #-709]	; 0xfffffd3b
   2a9c4:	tst	r0, #1
   2a9c8:	bne	2a9d4 <__assert_fail@plt+0x17e1c>
   2a9cc:	movw	r0, #1400	; 0x578
   2a9d0:	str	r0, [fp, #-720]	; 0xfffffd30
   2a9d4:	b	2a9d8 <__assert_fail@plt+0x17e20>
   2a9d8:	b	2a9dc <__assert_fail@plt+0x17e24>
   2a9dc:	b	2a9e0 <__assert_fail@plt+0x17e28>
   2a9e0:	ldrb	r0, [fp, #-709]	; 0xfffffd3b
   2a9e4:	tst	r0, #1
   2a9e8:	bne	2aa20 <__assert_fail@plt+0x17e68>
   2a9ec:	bl	128d0 <__errno_location@plt>
   2a9f0:	ldr	r1, [r0]
   2a9f4:	movw	r0, #49533	; 0xc17d
   2a9f8:	movt	r0, #7
   2a9fc:	str	r1, [fp, #-1136]	; 0xfffffb90
   2aa00:	bl	12864 <gettext@plt>
   2aa04:	ldr	r3, [fp, #-720]	; 0xfffffd30
   2aa08:	movw	r1, #1
   2aa0c:	str	r0, [fp, #-1140]	; 0xfffffb8c
   2aa10:	mov	r0, r1
   2aa14:	ldr	r1, [fp, #-1136]	; 0xfffffb90
   2aa18:	ldr	r2, [fp, #-1140]	; 0xfffffb8c
   2aa1c:	bl	12780 <error@plt>
   2aa20:	sub	sp, fp, #16
   2aa24:	pop	{r4, r5, r6, sl, fp, pc}
   2aa28:	rsceq	r4, sp, r0, lsl #28
   2aa2c:	push	{fp, lr}
   2aa30:	mov	fp, sp
   2aa34:	sub	sp, sp, #24
   2aa38:	str	r0, [fp, #-8]
   2aa3c:	str	r1, [sp, #12]
   2aa40:	str	r2, [sp, #8]
   2aa44:	ldr	r0, [fp, #-8]
   2aa48:	ldr	r1, [sp, #8]
   2aa4c:	ldr	r2, [r1]
   2aa50:	ldr	r3, [sp, #12]
   2aa54:	movw	r1, #49470	; 0xc13e
   2aa58:	movt	r1, #7
   2aa5c:	bl	128c4 <fprintf@plt>
   2aa60:	str	r0, [sp, #4]
   2aa64:	ldr	r0, [sp, #4]
   2aa68:	cmp	r0, #0
   2aa6c:	blt	2aaa0 <__assert_fail@plt+0x17ee8>
   2aa70:	ldr	r0, [sp, #8]
   2aa74:	ldr	r0, [r0]
   2aa78:	ldr	r1, [sp, #4]
   2aa7c:	cmp	r0, r1
   2aa80:	bge	2aa90 <__assert_fail@plt+0x17ed8>
   2aa84:	ldr	r0, [sp, #4]
   2aa88:	ldr	r1, [sp, #8]
   2aa8c:	str	r0, [r1]
   2aa90:	movw	r0, #1
   2aa94:	and	r0, r0, #1
   2aa98:	strb	r0, [fp, #-1]
   2aa9c:	b	2aaac <__assert_fail@plt+0x17ef4>
   2aaa0:	movw	r0, #0
   2aaa4:	and	r0, r0, #1
   2aaa8:	strb	r0, [fp, #-1]
   2aaac:	ldrb	r0, [fp, #-1]
   2aab0:	and	r0, r0, #1
   2aab4:	mov	sp, fp
   2aab8:	pop	{fp, pc}
   2aabc:	push	{fp, lr}
   2aac0:	mov	fp, sp
   2aac4:	sub	sp, sp, #16
   2aac8:	str	r0, [sp, #8]
   2aacc:	str	r1, [sp, #4]
   2aad0:	str	r2, [sp]
   2aad4:	ldr	r0, [sp]
   2aad8:	cmp	r0, #0
   2aadc:	beq	2aaf8 <__assert_fail@plt+0x17f40>
   2aae0:	ldr	r0, [sp, #8]
   2aae4:	ldr	r1, [sp, #4]
   2aae8:	bl	2ab1c <__assert_fail@plt+0x17f64>
   2aaec:	and	r0, r0, #1
   2aaf0:	strb	r0, [fp, #-1]
   2aaf4:	b	2ab0c <__assert_fail@plt+0x17f54>
   2aaf8:	ldr	r0, [sp, #8]
   2aafc:	ldr	r1, [sp, #4]
   2ab00:	bl	2ab5c <__assert_fail@plt+0x17fa4>
   2ab04:	and	r0, r0, #1
   2ab08:	strb	r0, [fp, #-1]
   2ab0c:	ldrb	r0, [fp, #-1]
   2ab10:	and	r0, r0, #1
   2ab14:	mov	sp, fp
   2ab18:	pop	{fp, pc}
   2ab1c:	push	{fp, lr}
   2ab20:	mov	fp, sp
   2ab24:	sub	sp, sp, #8
   2ab28:	str	r0, [sp, #4]
   2ab2c:	str	r1, [sp]
   2ab30:	ldr	r0, [sp]
   2ab34:	ldr	r2, [sp, #4]
   2ab38:	movw	r1, #59431	; 0xe827
   2ab3c:	movt	r1, #7
   2ab40:	bl	128c4 <fprintf@plt>
   2ab44:	cmp	r0, #0
   2ab48:	movw	r0, #0
   2ab4c:	movge	r0, #1
   2ab50:	and	r0, r0, #1
   2ab54:	mov	sp, fp
   2ab58:	pop	{fp, pc}
   2ab5c:	push	{fp, lr}
   2ab60:	mov	fp, sp
   2ab64:	sub	sp, sp, #24
   2ab68:	str	r0, [fp, #-8]
   2ab6c:	str	r1, [sp, #12]
   2ab70:	ldr	r0, [fp, #-8]
   2ab74:	add	r1, r0, #1
   2ab78:	str	r1, [fp, #-8]
   2ab7c:	ldrb	r0, [r0]
   2ab80:	strb	r0, [sp, #11]
   2ab84:	and	r0, r0, #255	; 0xff
   2ab88:	cmp	r0, #0
   2ab8c:	beq	2ad68 <__assert_fail@plt+0x181b0>
   2ab90:	mvn	r0, #0
   2ab94:	str	r0, [sp, #4]
   2ab98:	ldrb	r0, [sp, #11]
   2ab9c:	mov	r1, r0
   2aba0:	cmp	r0, #8
   2aba4:	str	r1, [sp]
   2aba8:	beq	2ac50 <__assert_fail@plt+0x18098>
   2abac:	b	2abb0 <__assert_fail@plt+0x17ff8>
   2abb0:	ldr	r0, [sp]
   2abb4:	cmp	r0, #9
   2abb8:	beq	2ac80 <__assert_fail@plt+0x180c8>
   2abbc:	b	2abc0 <__assert_fail@plt+0x18008>
   2abc0:	ldr	r0, [sp]
   2abc4:	cmp	r0, #10
   2abc8:	beq	2ac38 <__assert_fail@plt+0x18080>
   2abcc:	b	2abd0 <__assert_fail@plt+0x18018>
   2abd0:	ldr	r0, [sp]
   2abd4:	cmp	r0, #12
   2abd8:	beq	2ac98 <__assert_fail@plt+0x180e0>
   2abdc:	b	2abe0 <__assert_fail@plt+0x18028>
   2abe0:	ldr	r0, [sp]
   2abe4:	cmp	r0, #13
   2abe8:	beq	2ac68 <__assert_fail@plt+0x180b0>
   2abec:	b	2abf0 <__assert_fail@plt+0x18038>
   2abf0:	ldr	r0, [sp]
   2abf4:	cmp	r0, #32
   2abf8:	beq	2acb0 <__assert_fail@plt+0x180f8>
   2abfc:	b	2ac00 <__assert_fail@plt+0x18048>
   2ac00:	ldr	r0, [sp]
   2ac04:	cmp	r0, #34	; 0x22
   2ac08:	beq	2acc8 <__assert_fail@plt+0x18110>
   2ac0c:	b	2ac10 <__assert_fail@plt+0x18058>
   2ac10:	ldr	r0, [sp]
   2ac14:	cmp	r0, #92	; 0x5c
   2ac18:	bne	2ace0 <__assert_fail@plt+0x18128>
   2ac1c:	b	2ac20 <__assert_fail@plt+0x18068>
   2ac20:	ldr	r0, [sp, #12]
   2ac24:	movw	r1, #49570	; 0xc1a2
   2ac28:	movt	r1, #7
   2ac2c:	bl	128c4 <fprintf@plt>
   2ac30:	str	r0, [sp, #4]
   2ac34:	b	2ad48 <__assert_fail@plt+0x18190>
   2ac38:	ldr	r0, [sp, #12]
   2ac3c:	movw	r1, #49573	; 0xc1a5
   2ac40:	movt	r1, #7
   2ac44:	bl	128c4 <fprintf@plt>
   2ac48:	str	r0, [sp, #4]
   2ac4c:	b	2ad48 <__assert_fail@plt+0x18190>
   2ac50:	ldr	r0, [sp, #12]
   2ac54:	movw	r1, #49576	; 0xc1a8
   2ac58:	movt	r1, #7
   2ac5c:	bl	128c4 <fprintf@plt>
   2ac60:	str	r0, [sp, #4]
   2ac64:	b	2ad48 <__assert_fail@plt+0x18190>
   2ac68:	ldr	r0, [sp, #12]
   2ac6c:	movw	r1, #49579	; 0xc1ab
   2ac70:	movt	r1, #7
   2ac74:	bl	128c4 <fprintf@plt>
   2ac78:	str	r0, [sp, #4]
   2ac7c:	b	2ad48 <__assert_fail@plt+0x18190>
   2ac80:	ldr	r0, [sp, #12]
   2ac84:	movw	r1, #49582	; 0xc1ae
   2ac88:	movt	r1, #7
   2ac8c:	bl	128c4 <fprintf@plt>
   2ac90:	str	r0, [sp, #4]
   2ac94:	b	2ad48 <__assert_fail@plt+0x18190>
   2ac98:	ldr	r0, [sp, #12]
   2ac9c:	movw	r1, #49585	; 0xc1b1
   2aca0:	movt	r1, #7
   2aca4:	bl	128c4 <fprintf@plt>
   2aca8:	str	r0, [sp, #4]
   2acac:	b	2ad48 <__assert_fail@plt+0x18190>
   2acb0:	ldr	r0, [sp, #12]
   2acb4:	movw	r1, #49588	; 0xc1b4
   2acb8:	movt	r1, #7
   2acbc:	bl	128c4 <fprintf@plt>
   2acc0:	str	r0, [sp, #4]
   2acc4:	b	2ad48 <__assert_fail@plt+0x18190>
   2acc8:	ldr	r0, [sp, #12]
   2accc:	movw	r1, #49591	; 0xc1b7
   2acd0:	movt	r1, #7
   2acd4:	bl	128c4 <fprintf@plt>
   2acd8:	str	r0, [sp, #4]
   2acdc:	b	2ad48 <__assert_fail@plt+0x18190>
   2ace0:	ldrb	r0, [sp, #11]
   2ace4:	cmp	r0, #32
   2ace8:	ble	2ad2c <__assert_fail@plt+0x18174>
   2acec:	ldrb	r0, [sp, #11]
   2acf0:	cmp	r0, #127	; 0x7f
   2acf4:	bge	2ad2c <__assert_fail@plt+0x18174>
   2acf8:	ldrb	r0, [sp, #11]
   2acfc:	ldr	r1, [sp, #12]
   2ad00:	bl	12a8c <putc@plt>
   2ad04:	mvn	r1, #0
   2ad08:	cmp	r1, r0
   2ad0c:	bne	2ad20 <__assert_fail@plt+0x18168>
   2ad10:	movw	r0, #0
   2ad14:	and	r0, r0, #1
   2ad18:	strb	r0, [fp, #-1]
   2ad1c:	b	2ad74 <__assert_fail@plt+0x181bc>
   2ad20:	movw	r0, #1
   2ad24:	str	r0, [sp, #4]
   2ad28:	b	2ad44 <__assert_fail@plt+0x1818c>
   2ad2c:	ldr	r0, [sp, #12]
   2ad30:	ldrb	r2, [sp, #11]
   2ad34:	movw	r1, #49594	; 0xc1ba
   2ad38:	movt	r1, #7
   2ad3c:	bl	128c4 <fprintf@plt>
   2ad40:	str	r0, [sp, #4]
   2ad44:	b	2ad48 <__assert_fail@plt+0x18190>
   2ad48:	ldr	r0, [sp, #4]
   2ad4c:	cmp	r0, #0
   2ad50:	bge	2ad64 <__assert_fail@plt+0x181ac>
   2ad54:	movw	r0, #0
   2ad58:	and	r0, r0, #1
   2ad5c:	strb	r0, [fp, #-1]
   2ad60:	b	2ad74 <__assert_fail@plt+0x181bc>
   2ad64:	b	2ab70 <__assert_fail@plt+0x17fb8>
   2ad68:	movw	r0, #1
   2ad6c:	and	r0, r0, #1
   2ad70:	strb	r0, [fp, #-1]
   2ad74:	ldrb	r0, [fp, #-1]
   2ad78:	and	r0, r0, #1
   2ad7c:	mov	sp, fp
   2ad80:	pop	{fp, pc}
   2ad84:	push	{r4, r5, fp, lr}
   2ad88:	add	fp, sp, #8
   2ad8c:	sub	sp, sp, #48	; 0x30
   2ad90:	sub	sp, sp, #8192	; 0x2000
   2ad94:	ldr	ip, [fp, #8]
   2ad98:	str	r0, [fp, #-12]
   2ad9c:	str	r1, [fp, #-16]
   2ada0:	and	r0, r2, #1
   2ada4:	strb	r0, [fp, #-17]	; 0xffffffef
   2ada8:	str	r3, [fp, #-24]	; 0xffffffe8
   2adac:	ldrb	r0, [fp, #-17]	; 0xffffffef
   2adb0:	tst	r0, #1
   2adb4:	str	ip, [sp, #16]
   2adb8:	beq	2ae90 <__assert_fail@plt+0x182d8>
   2adbc:	add	r0, sp, #28
   2adc0:	ldr	r2, [fp, #8]
   2adc4:	ldr	r1, [fp, #-16]
   2adc8:	movw	r3, #8192	; 0x2000
   2adcc:	str	r1, [sp, #12]
   2add0:	mov	r1, r3
   2add4:	mvn	r3, #0
   2add8:	ldr	ip, [sp, #12]
   2addc:	str	ip, [sp]
   2ade0:	bl	489f0 <__assert_fail@plt+0x35e38>
   2ade4:	str	r0, [sp, #24]
   2ade8:	ldr	r0, [sp, #24]
   2adec:	cmp	r0, #8192	; 0x2000
   2adf0:	bcs	2ae00 <__assert_fail@plt+0x18248>
   2adf4:	add	r0, sp, #28
   2adf8:	str	r0, [sp, #20]
   2adfc:	b	2ae34 <__assert_fail@plt+0x1827c>
   2ae00:	ldr	r0, [sp, #24]
   2ae04:	add	r0, r0, #1
   2ae08:	bl	4c394 <__assert_fail@plt+0x397dc>
   2ae0c:	str	r0, [sp, #20]
   2ae10:	ldr	r0, [sp, #20]
   2ae14:	ldr	lr, [sp, #24]
   2ae18:	add	r1, lr, #1
   2ae1c:	ldr	r2, [fp, #8]
   2ae20:	ldr	lr, [fp, #-16]
   2ae24:	mvn	r3, #0
   2ae28:	str	lr, [sp]
   2ae2c:	bl	489f0 <__assert_fail@plt+0x35e38>
   2ae30:	str	r0, [sp, #8]
   2ae34:	ldr	r0, [sp, #20]
   2ae38:	ldr	r1, [sp, #24]
   2ae3c:	bl	2aeb0 <__assert_fail@plt+0x182f8>
   2ae40:	str	r0, [sp, #24]
   2ae44:	ldr	r0, [sp, #20]
   2ae48:	ldr	r1, [sp, #24]
   2ae4c:	add	r0, r0, r1
   2ae50:	movw	r1, #0
   2ae54:	strb	r1, [r0]
   2ae58:	ldr	r0, [fp, #-12]
   2ae5c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2ae60:	ldr	r2, [sp, #20]
   2ae64:	bl	128c4 <fprintf@plt>
   2ae68:	add	r1, sp, #28
   2ae6c:	str	r0, [fp, #-28]	; 0xffffffe4
   2ae70:	ldr	r0, [sp, #20]
   2ae74:	cmp	r0, r1
   2ae78:	beq	2ae8c <__assert_fail@plt+0x182d4>
   2ae7c:	ldr	r0, [sp, #20]
   2ae80:	bl	50c68 <__assert_fail@plt+0x3e0b0>
   2ae84:	movw	r0, #0
   2ae88:	str	r0, [sp, #20]
   2ae8c:	b	2aea4 <__assert_fail@plt+0x182ec>
   2ae90:	ldr	r0, [fp, #-12]
   2ae94:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2ae98:	ldr	r2, [fp, #8]
   2ae9c:	bl	128c4 <fprintf@plt>
   2aea0:	str	r0, [fp, #-28]	; 0xffffffe4
   2aea4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2aea8:	sub	sp, fp, #8
   2aeac:	pop	{r4, r5, fp, pc}
   2aeb0:	push	{fp, lr}
   2aeb4:	mov	fp, sp
   2aeb8:	sub	sp, sp, #48	; 0x30
   2aebc:	str	r0, [fp, #-8]
   2aec0:	str	r1, [fp, #-12]
   2aec4:	bl	12720 <__ctype_get_mb_cur_max@plt>
   2aec8:	cmp	r0, #1
   2aecc:	bhi	2aee4 <__assert_fail@plt+0x1832c>
   2aed0:	ldr	r0, [fp, #-8]
   2aed4:	ldr	r1, [fp, #-12]
   2aed8:	bl	2b258 <__assert_fail@plt+0x186a0>
   2aedc:	str	r0, [fp, #-4]
   2aee0:	b	2b24c <__assert_fail@plt+0x18694>
   2aee4:	ldr	r0, [fp, #-8]
   2aee8:	str	r0, [fp, #-16]
   2aeec:	ldr	r0, [fp, #-8]
   2aef0:	ldr	r1, [fp, #-12]
   2aef4:	add	r0, r0, r1
   2aef8:	str	r0, [fp, #-20]	; 0xffffffec
   2aefc:	ldr	r0, [fp, #-8]
   2af00:	str	r0, [sp, #24]
   2af04:	ldr	r0, [fp, #-16]
   2af08:	ldr	r1, [fp, #-20]	; 0xffffffec
   2af0c:	cmp	r0, r1
   2af10:	bcs	2b234 <__assert_fail@plt+0x1867c>
   2af14:	ldr	r0, [fp, #-16]
   2af18:	ldrb	r0, [r0]
   2af1c:	sub	r0, r0, #32
   2af20:	cmp	r0, #94	; 0x5e
   2af24:	str	r0, [sp]
   2af28:	bhi	2b0dc <__assert_fail@plt+0x18524>
   2af2c:	add	r0, pc, #8
   2af30:	ldr	r1, [sp]
   2af34:	ldr	r0, [r0, r1, lsl #2]
   2af38:	mov	pc, r0
   2af3c:	strheq	fp, [r2], -r8
   2af40:	strheq	fp, [r2], -r8
   2af44:	strheq	fp, [r2], -r8
   2af48:	strheq	fp, [r2], -r8
   2af4c:	ldrdeq	fp, [r2], -ip
   2af50:	strheq	fp, [r2], -r8
   2af54:	strheq	fp, [r2], -r8
   2af58:	strheq	fp, [r2], -r8
   2af5c:	strheq	fp, [r2], -r8
   2af60:	strheq	fp, [r2], -r8
   2af64:	strheq	fp, [r2], -r8
   2af68:	strheq	fp, [r2], -r8
   2af6c:	strheq	fp, [r2], -r8
   2af70:	strheq	fp, [r2], -r8
   2af74:	strheq	fp, [r2], -r8
   2af78:	strheq	fp, [r2], -r8
   2af7c:	strheq	fp, [r2], -r8
   2af80:	strheq	fp, [r2], -r8
   2af84:	strheq	fp, [r2], -r8
   2af88:	strheq	fp, [r2], -r8
   2af8c:	strheq	fp, [r2], -r8
   2af90:	strheq	fp, [r2], -r8
   2af94:	strheq	fp, [r2], -r8
   2af98:	strheq	fp, [r2], -r8
   2af9c:	strheq	fp, [r2], -r8
   2afa0:	strheq	fp, [r2], -r8
   2afa4:	strheq	fp, [r2], -r8
   2afa8:	strheq	fp, [r2], -r8
   2afac:	strheq	fp, [r2], -r8
   2afb0:	strheq	fp, [r2], -r8
   2afb4:	strheq	fp, [r2], -r8
   2afb8:	strheq	fp, [r2], -r8
   2afbc:	ldrdeq	fp, [r2], -ip
   2afc0:	strheq	fp, [r2], -r8
   2afc4:	strheq	fp, [r2], -r8
   2afc8:	strheq	fp, [r2], -r8
   2afcc:	strheq	fp, [r2], -r8
   2afd0:	strheq	fp, [r2], -r8
   2afd4:	strheq	fp, [r2], -r8
   2afd8:	strheq	fp, [r2], -r8
   2afdc:	strheq	fp, [r2], -r8
   2afe0:	strheq	fp, [r2], -r8
   2afe4:	strheq	fp, [r2], -r8
   2afe8:	strheq	fp, [r2], -r8
   2afec:	strheq	fp, [r2], -r8
   2aff0:	strheq	fp, [r2], -r8
   2aff4:	strheq	fp, [r2], -r8
   2aff8:	strheq	fp, [r2], -r8
   2affc:	strheq	fp, [r2], -r8
   2b000:	strheq	fp, [r2], -r8
   2b004:	strheq	fp, [r2], -r8
   2b008:	strheq	fp, [r2], -r8
   2b00c:	strheq	fp, [r2], -r8
   2b010:	strheq	fp, [r2], -r8
   2b014:	strheq	fp, [r2], -r8
   2b018:	strheq	fp, [r2], -r8
   2b01c:	strheq	fp, [r2], -r8
   2b020:	strheq	fp, [r2], -r8
   2b024:	strheq	fp, [r2], -r8
   2b028:	strheq	fp, [r2], -r8
   2b02c:	strheq	fp, [r2], -r8
   2b030:	strheq	fp, [r2], -r8
   2b034:	strheq	fp, [r2], -r8
   2b038:	strheq	fp, [r2], -r8
   2b03c:	ldrdeq	fp, [r2], -ip
   2b040:	strheq	fp, [r2], -r8
   2b044:	strheq	fp, [r2], -r8
   2b048:	strheq	fp, [r2], -r8
   2b04c:	strheq	fp, [r2], -r8
   2b050:	strheq	fp, [r2], -r8
   2b054:	strheq	fp, [r2], -r8
   2b058:	strheq	fp, [r2], -r8
   2b05c:	strheq	fp, [r2], -r8
   2b060:	strheq	fp, [r2], -r8
   2b064:	strheq	fp, [r2], -r8
   2b068:	strheq	fp, [r2], -r8
   2b06c:	strheq	fp, [r2], -r8
   2b070:	strheq	fp, [r2], -r8
   2b074:	strheq	fp, [r2], -r8
   2b078:	strheq	fp, [r2], -r8
   2b07c:	strheq	fp, [r2], -r8
   2b080:	strheq	fp, [r2], -r8
   2b084:	strheq	fp, [r2], -r8
   2b088:	strheq	fp, [r2], -r8
   2b08c:	strheq	fp, [r2], -r8
   2b090:	strheq	fp, [r2], -r8
   2b094:	strheq	fp, [r2], -r8
   2b098:	strheq	fp, [r2], -r8
   2b09c:	strheq	fp, [r2], -r8
   2b0a0:	strheq	fp, [r2], -r8
   2b0a4:	strheq	fp, [r2], -r8
   2b0a8:	strheq	fp, [r2], -r8
   2b0ac:	strheq	fp, [r2], -r8
   2b0b0:	strheq	fp, [r2], -r8
   2b0b4:	strheq	fp, [r2], -r8
   2b0b8:	ldr	r0, [fp, #-16]
   2b0bc:	add	r1, r0, #1
   2b0c0:	str	r1, [fp, #-16]
   2b0c4:	ldrb	r0, [r0]
   2b0c8:	ldr	r1, [sp, #24]
   2b0cc:	add	r2, r1, #1
   2b0d0:	str	r2, [sp, #24]
   2b0d4:	strb	r0, [r1]
   2b0d8:	b	2b230 <__assert_fail@plt+0x18678>
   2b0dc:	add	r0, sp, #16
   2b0e0:	movw	r1, #0
   2b0e4:	and	r1, r1, #255	; 0xff
   2b0e8:	movw	r2, #8
   2b0ec:	bl	12900 <memset@plt>
   2b0f0:	ldr	r1, [fp, #-16]
   2b0f4:	ldr	r0, [fp, #-20]	; 0xffffffec
   2b0f8:	ldr	r2, [fp, #-16]
   2b0fc:	sub	r2, r0, r2
   2b100:	add	r0, sp, #12
   2b104:	add	r3, sp, #16
   2b108:	bl	54a1c <__assert_fail@plt+0x41e64>
   2b10c:	str	r0, [sp, #8]
   2b110:	ldr	r0, [sp, #8]
   2b114:	cmn	r0, #1
   2b118:	bne	2b140 <__assert_fail@plt+0x18588>
   2b11c:	ldr	r0, [fp, #-16]
   2b120:	add	r0, r0, #1
   2b124:	str	r0, [fp, #-16]
   2b128:	ldr	r0, [sp, #24]
   2b12c:	add	r1, r0, #1
   2b130:	str	r1, [sp, #24]
   2b134:	movw	r1, #63	; 0x3f
   2b138:	strb	r1, [r0]
   2b13c:	b	2b22c <__assert_fail@plt+0x18674>
   2b140:	ldr	r0, [sp, #8]
   2b144:	cmn	r0, #2
   2b148:	bne	2b16c <__assert_fail@plt+0x185b4>
   2b14c:	ldr	r0, [fp, #-20]	; 0xffffffec
   2b150:	str	r0, [fp, #-16]
   2b154:	ldr	r0, [sp, #24]
   2b158:	add	r1, r0, #1
   2b15c:	str	r1, [sp, #24]
   2b160:	movw	r1, #63	; 0x3f
   2b164:	strb	r1, [r0]
   2b168:	b	2b22c <__assert_fail@plt+0x18674>
   2b16c:	ldr	r0, [sp, #8]
   2b170:	cmp	r0, #0
   2b174:	bne	2b180 <__assert_fail@plt+0x185c8>
   2b178:	movw	r0, #1
   2b17c:	str	r0, [sp, #8]
   2b180:	ldr	r0, [sp, #12]
   2b184:	bl	12540 <wcwidth@plt>
   2b188:	str	r0, [sp, #4]
   2b18c:	ldr	r0, [sp, #4]
   2b190:	cmp	r0, #0
   2b194:	blt	2b1e0 <__assert_fail@plt+0x18628>
   2b198:	b	2b19c <__assert_fail@plt+0x185e4>
   2b19c:	ldr	r0, [sp, #8]
   2b1a0:	cmp	r0, #0
   2b1a4:	bls	2b1dc <__assert_fail@plt+0x18624>
   2b1a8:	ldr	r0, [fp, #-16]
   2b1ac:	add	r1, r0, #1
   2b1b0:	str	r1, [fp, #-16]
   2b1b4:	ldrb	r0, [r0]
   2b1b8:	ldr	r1, [sp, #24]
   2b1bc:	add	r2, r1, #1
   2b1c0:	str	r2, [sp, #24]
   2b1c4:	strb	r0, [r1]
   2b1c8:	ldr	r0, [sp, #8]
   2b1cc:	mvn	r1, #0
   2b1d0:	add	r0, r0, r1
   2b1d4:	str	r0, [sp, #8]
   2b1d8:	b	2b19c <__assert_fail@plt+0x185e4>
   2b1dc:	b	2b204 <__assert_fail@plt+0x1864c>
   2b1e0:	ldr	r0, [sp, #8]
   2b1e4:	ldr	r1, [fp, #-16]
   2b1e8:	add	r0, r1, r0
   2b1ec:	str	r0, [fp, #-16]
   2b1f0:	ldr	r0, [sp, #24]
   2b1f4:	add	r1, r0, #1
   2b1f8:	str	r1, [sp, #24]
   2b1fc:	movw	r1, #63	; 0x3f
   2b200:	strb	r1, [r0]
   2b204:	b	2b208 <__assert_fail@plt+0x18650>
   2b208:	add	r0, sp, #16
   2b20c:	bl	12600 <mbsinit@plt>
   2b210:	cmp	r0, #0
   2b214:	movw	r0, #0
   2b218:	movne	r0, #1
   2b21c:	mvn	lr, #0
   2b220:	eor	r0, r0, lr
   2b224:	tst	r0, #1
   2b228:	bne	2b0f0 <__assert_fail@plt+0x18538>
   2b22c:	b	2b230 <__assert_fail@plt+0x18678>
   2b230:	b	2af04 <__assert_fail@plt+0x1834c>
   2b234:	ldr	r0, [sp, #24]
   2b238:	ldr	r1, [fp, #-8]
   2b23c:	sub	r0, r0, r1
   2b240:	str	r0, [fp, #-12]
   2b244:	ldr	r0, [fp, #-12]
   2b248:	str	r0, [fp, #-4]
   2b24c:	ldr	r0, [fp, #-4]
   2b250:	mov	sp, fp
   2b254:	pop	{fp, pc}
   2b258:	push	{fp, lr}
   2b25c:	mov	fp, sp
   2b260:	sub	sp, sp, #24
   2b264:	str	r0, [fp, #-4]
   2b268:	str	r1, [fp, #-8]
   2b26c:	ldr	r0, [fp, #-4]
   2b270:	str	r0, [sp, #12]
   2b274:	ldr	r0, [fp, #-4]
   2b278:	ldr	r1, [fp, #-8]
   2b27c:	add	r0, r0, r1
   2b280:	str	r0, [sp, #8]
   2b284:	ldr	r0, [sp, #12]
   2b288:	ldr	r1, [sp, #8]
   2b28c:	cmp	r0, r1
   2b290:	bcs	2b2ec <__assert_fail@plt+0x18734>
   2b294:	bl	12834 <__ctype_b_loc@plt>
   2b298:	ldr	r0, [r0]
   2b29c:	ldr	lr, [sp, #12]
   2b2a0:	ldrb	lr, [lr]
   2b2a4:	str	r0, [sp, #4]
   2b2a8:	mov	r0, lr
   2b2ac:	bl	2b2f8 <__assert_fail@plt+0x18740>
   2b2b0:	mov	lr, r0
   2b2b4:	ldr	r1, [sp, #4]
   2b2b8:	add	r0, r1, r0, lsl #1
   2b2bc:	ldrh	r0, [r0]
   2b2c0:	and	r0, r0, #16384	; 0x4000
   2b2c4:	cmp	r0, #0
   2b2c8:	str	lr, [sp]
   2b2cc:	bne	2b2dc <__assert_fail@plt+0x18724>
   2b2d0:	ldr	r0, [sp, #12]
   2b2d4:	movw	r1, #63	; 0x3f
   2b2d8:	strb	r1, [r0]
   2b2dc:	ldr	r0, [sp, #12]
   2b2e0:	add	r0, r0, #1
   2b2e4:	str	r0, [sp, #12]
   2b2e8:	b	2b284 <__assert_fail@plt+0x186cc>
   2b2ec:	ldr	r0, [fp, #-8]
   2b2f0:	mov	sp, fp
   2b2f4:	pop	{fp, pc}
   2b2f8:	sub	sp, sp, #4
   2b2fc:	strb	r0, [sp, #3]
   2b300:	ldrb	r0, [sp, #3]
   2b304:	add	sp, sp, #4
   2b308:	bx	lr
   2b30c:	push	{fp, lr}
   2b310:	mov	fp, sp
   2b314:	sub	sp, sp, #48	; 0x30
   2b318:	str	r0, [fp, #-4]
   2b31c:	movw	r0, #0
   2b320:	str	r0, [fp, #-12]
   2b324:	str	r0, [fp, #-8]
   2b328:	ldr	r0, [fp, #-8]
   2b32c:	cmp	r0, #13
   2b330:	bcs	2b3d0 <__assert_fail@plt+0x18818>
   2b334:	ldr	r0, [fp, #-8]
   2b338:	movw	r1, #12
   2b33c:	mul	r0, r0, r1
   2b340:	movw	r1, #63024	; 0xf630
   2b344:	movt	r1, #8
   2b348:	add	r0, r1, r0
   2b34c:	ldr	r0, [r0]
   2b350:	ldr	r1, [fp, #-4]
   2b354:	bl	124c8 <strcmp@plt>
   2b358:	movw	r1, #0
   2b35c:	cmp	r1, r0
   2b360:	bne	2b388 <__assert_fail@plt+0x187d0>
   2b364:	ldr	r0, [fp, #-8]
   2b368:	movw	r1, #12
   2b36c:	mul	r0, r0, r1
   2b370:	movw	r1, #63024	; 0xf630
   2b374:	movt	r1, #8
   2b378:	add	r0, r1, r0
   2b37c:	ldr	r0, [r0, #8]
   2b380:	mov	sp, fp
   2b384:	pop	{fp, pc}
   2b388:	ldr	r0, [fp, #-8]
   2b38c:	movw	r1, #12
   2b390:	mul	r0, r0, r1
   2b394:	movw	r1, #63024	; 0xf630
   2b398:	movt	r1, #8
   2b39c:	add	r0, r1, r0
   2b3a0:	ldr	r0, [r0]
   2b3a4:	bl	4ac94 <__assert_fail@plt+0x380dc>
   2b3a8:	bl	12888 <strlen@plt>
   2b3ac:	add	r0, r0, #2
   2b3b0:	ldr	r1, [fp, #-12]
   2b3b4:	add	r0, r1, r0
   2b3b8:	str	r0, [fp, #-12]
   2b3bc:	b	2b3c0 <__assert_fail@plt+0x18808>
   2b3c0:	ldr	r0, [fp, #-8]
   2b3c4:	add	r0, r0, #1
   2b3c8:	str	r0, [fp, #-8]
   2b3cc:	b	2b328 <__assert_fail@plt+0x18770>
   2b3d0:	ldr	r0, [fp, #-12]
   2b3d4:	add	r0, r0, #1
   2b3d8:	bl	4c394 <__assert_fail@plt+0x397dc>
   2b3dc:	str	r0, [fp, #-16]
   2b3e0:	str	r0, [fp, #-20]	; 0xffffffec
   2b3e4:	movw	r0, #0
   2b3e8:	str	r0, [fp, #-8]
   2b3ec:	ldr	r0, [fp, #-8]
   2b3f0:	cmp	r0, #13
   2b3f4:	bcs	2b488 <__assert_fail@plt+0x188d0>
   2b3f8:	ldr	r0, [fp, #-8]
   2b3fc:	cmp	r0, #0
   2b400:	bls	2b424 <__assert_fail@plt+0x1886c>
   2b404:	ldr	r0, [fp, #-20]	; 0xffffffec
   2b408:	movw	r1, #39813	; 0x9b85
   2b40c:	movt	r1, #7
   2b410:	bl	12738 <strcpy@plt>
   2b414:	ldr	r1, [fp, #-20]	; 0xffffffec
   2b418:	add	r1, r1, #2
   2b41c:	str	r1, [fp, #-20]	; 0xffffffec
   2b420:	str	r0, [sp, #24]
   2b424:	ldr	r0, [fp, #-20]	; 0xffffffec
   2b428:	ldr	r1, [fp, #-8]
   2b42c:	movw	r2, #12
   2b430:	mul	r1, r1, r2
   2b434:	movw	r2, #63024	; 0xf630
   2b438:	movt	r2, #8
   2b43c:	add	r1, r2, r1
   2b440:	ldr	r1, [r1]
   2b444:	str	r0, [sp, #20]
   2b448:	mov	r0, r1
   2b44c:	bl	4ac94 <__assert_fail@plt+0x380dc>
   2b450:	ldr	r1, [sp, #20]
   2b454:	str	r0, [sp, #16]
   2b458:	mov	r0, r1
   2b45c:	movw	r1, #59431	; 0xe827
   2b460:	movt	r1, #7
   2b464:	ldr	r2, [sp, #16]
   2b468:	bl	12a5c <sprintf@plt>
   2b46c:	ldr	r1, [fp, #-20]	; 0xffffffec
   2b470:	add	r0, r1, r0
   2b474:	str	r0, [fp, #-20]	; 0xffffffec
   2b478:	ldr	r0, [fp, #-8]
   2b47c:	add	r0, r0, #1
   2b480:	str	r0, [fp, #-8]
   2b484:	b	2b3ec <__assert_fail@plt+0x18834>
   2b488:	movw	r0, #49600	; 0xc1c0
   2b48c:	movt	r0, #7
   2b490:	bl	12864 <gettext@plt>
   2b494:	ldr	lr, [fp, #-4]
   2b498:	str	r0, [sp, #12]
   2b49c:	mov	r0, lr
   2b4a0:	bl	4ac94 <__assert_fail@plt+0x380dc>
   2b4a4:	ldr	lr, [fp, #-16]
   2b4a8:	movw	r1, #1
   2b4ac:	str	r0, [sp, #8]
   2b4b0:	mov	r0, r1
   2b4b4:	movw	r1, #0
   2b4b8:	ldr	r2, [sp, #12]
   2b4bc:	ldr	r3, [sp, #8]
   2b4c0:	str	lr, [sp]
   2b4c4:	bl	12780 <error@plt>
   2b4c8:	sub	sp, sp, #8
   2b4cc:	str	r0, [sp]
   2b4d0:	ldr	r0, [sp]
   2b4d4:	cmp	r0, #13
   2b4d8:	bcs	2b500 <__assert_fail@plt+0x18948>
   2b4dc:	ldr	r0, [sp]
   2b4e0:	movw	r1, #12
   2b4e4:	mul	r0, r0, r1
   2b4e8:	movw	r1, #63024	; 0xf630
   2b4ec:	movt	r1, #8
   2b4f0:	add	r0, r1, r0
   2b4f4:	ldr	r0, [r0]
   2b4f8:	str	r0, [sp, #4]
   2b4fc:	b	2b508 <__assert_fail@plt+0x18950>
   2b500:	movw	r0, #0
   2b504:	str	r0, [sp, #4]
   2b508:	ldr	r0, [sp, #4]
   2b50c:	add	sp, sp, #8
   2b510:	bx	lr
   2b514:	sub	sp, sp, #8
   2b518:	str	r0, [sp]
   2b51c:	ldr	r0, [sp]
   2b520:	cmp	r0, #13
   2b524:	bcs	2b54c <__assert_fail@plt+0x18994>
   2b528:	ldr	r0, [sp]
   2b52c:	movw	r1, #12
   2b530:	mul	r0, r0, r1
   2b534:	movw	r1, #63024	; 0xf630
   2b538:	movt	r1, #8
   2b53c:	add	r0, r1, r0
   2b540:	ldr	r0, [r0, #8]
   2b544:	str	r0, [sp, #4]
   2b548:	b	2b554 <__assert_fail@plt+0x1899c>
   2b54c:	mvn	r0, #0
   2b550:	str	r0, [sp, #4]
   2b554:	ldr	r0, [sp, #4]
   2b558:	add	sp, sp, #8
   2b55c:	bx	lr
   2b560:	sub	sp, sp, #8
   2b564:	str	r0, [sp]
   2b568:	ldr	r0, [sp]
   2b56c:	cmp	r0, #13
   2b570:	bcs	2b598 <__assert_fail@plt+0x189e0>
   2b574:	ldr	r0, [sp]
   2b578:	movw	r1, #12
   2b57c:	mul	r0, r0, r1
   2b580:	movw	r1, #63024	; 0xf630
   2b584:	movt	r1, #8
   2b588:	add	r0, r1, r0
   2b58c:	ldr	r0, [r0, #4]
   2b590:	str	r0, [sp, #4]
   2b594:	b	2b5a0 <__assert_fail@plt+0x189e8>
   2b598:	movw	r0, #0
   2b59c:	str	r0, [sp, #4]
   2b5a0:	ldr	r0, [sp, #4]
   2b5a4:	add	sp, sp, #8
   2b5a8:	bx	lr
   2b5ac:	sub	sp, sp, #20
   2b5b0:	str	r0, [sp, #12]
   2b5b4:	str	r1, [sp, #8]
   2b5b8:	ldr	r0, [sp, #12]
   2b5bc:	cmp	r0, #13
   2b5c0:	bcc	2b5d0 <__assert_fail@plt+0x18a18>
   2b5c4:	mvn	r0, #0
   2b5c8:	str	r0, [sp, #16]
   2b5cc:	b	2b68c <__assert_fail@plt+0x18ad4>
   2b5d0:	ldr	r0, [sp, #12]
   2b5d4:	movw	r1, #12
   2b5d8:	mul	r0, r0, r1
   2b5dc:	movw	r1, #63024	; 0xf630
   2b5e0:	movt	r1, #8
   2b5e4:	add	r0, r1, r0
   2b5e8:	ldr	r0, [r0, #8]
   2b5ec:	str	r0, [sp]
   2b5f0:	movw	r0, #0
   2b5f4:	str	r0, [sp, #4]
   2b5f8:	ldr	r0, [sp, #4]
   2b5fc:	ldr	r1, [sp, #12]
   2b600:	cmp	r0, r1
   2b604:	bcs	2b684 <__assert_fail@plt+0x18acc>
   2b608:	ldr	r0, [sp, #4]
   2b60c:	movw	r1, #12
   2b610:	mul	r0, r0, r1
   2b614:	movw	r1, #63024	; 0xf630
   2b618:	movt	r1, #8
   2b61c:	add	r0, r1, r0
   2b620:	ldr	r0, [r0, #4]
   2b624:	ldr	r1, [sp, #8]
   2b628:	and	r0, r0, r1
   2b62c:	cmp	r0, #0
   2b630:	bne	2b638 <__assert_fail@plt+0x18a80>
   2b634:	b	2b674 <__assert_fail@plt+0x18abc>
   2b638:	ldr	r0, [sp]
   2b63c:	ldr	r1, [sp, #4]
   2b640:	movw	r2, #12
   2b644:	mul	r1, r1, r2
   2b648:	movw	r2, #63024	; 0xf630
   2b64c:	movt	r2, #8
   2b650:	add	r1, r2, r1
   2b654:	ldr	r1, [r1, #8]
   2b658:	cmp	r0, r1
   2b65c:	bne	2b66c <__assert_fail@plt+0x18ab4>
   2b660:	ldr	r0, [sp, #4]
   2b664:	str	r0, [sp, #16]
   2b668:	b	2b68c <__assert_fail@plt+0x18ad4>
   2b66c:	b	2b670 <__assert_fail@plt+0x18ab8>
   2b670:	b	2b674 <__assert_fail@plt+0x18abc>
   2b674:	ldr	r0, [sp, #4]
   2b678:	add	r0, r0, #1
   2b67c:	str	r0, [sp, #4]
   2b680:	b	2b5f8 <__assert_fail@plt+0x18a40>
   2b684:	mvn	r0, #0
   2b688:	str	r0, [sp, #16]
   2b68c:	ldr	r0, [sp, #16]
   2b690:	add	sp, sp, #20
   2b694:	bx	lr
   2b698:	push	{fp, lr}
   2b69c:	mov	fp, sp
   2b6a0:	sub	sp, sp, #48	; 0x30
   2b6a4:	str	r0, [fp, #-4]
   2b6a8:	str	r1, [fp, #-8]
   2b6ac:	bl	128d0 <__errno_location@plt>
   2b6b0:	movw	r1, #0
   2b6b4:	str	r1, [r0]
   2b6b8:	ldr	r0, [fp, #-4]
   2b6bc:	sub	r1, fp, #16
   2b6c0:	movw	r2, #10
   2b6c4:	bl	124d4 <strtol@plt>
   2b6c8:	ldr	r1, [pc, #404]	; 2b864 <__assert_fail@plt+0x18cac>
   2b6cc:	str	r0, [fp, #-12]
   2b6d0:	ldr	r0, [fp, #-12]
   2b6d4:	cmp	r1, r0
   2b6d8:	beq	2b6ec <__assert_fail@plt+0x18b34>
   2b6dc:	ldr	r0, [pc, #388]	; 2b868 <__assert_fail@plt+0x18cb0>
   2b6e0:	ldr	r1, [fp, #-12]
   2b6e4:	cmp	r0, r1
   2b6e8:	bne	2b734 <__assert_fail@plt+0x18b7c>
   2b6ec:	bl	128d0 <__errno_location@plt>
   2b6f0:	ldr	r0, [r0]
   2b6f4:	cmp	r0, #34	; 0x22
   2b6f8:	bne	2b718 <__assert_fail@plt+0x18b60>
   2b6fc:	bl	128d0 <__errno_location@plt>
   2b700:	ldr	r1, [r0]
   2b704:	ldr	r3, [fp, #-4]
   2b708:	movw	r0, #1
   2b70c:	movw	r2, #59431	; 0xe827
   2b710:	movt	r2, #7
   2b714:	bl	12780 <error@plt>
   2b718:	bl	128d0 <__errno_location@plt>
   2b71c:	ldr	r1, [r0]
   2b720:	ldr	r3, [fp, #-4]
   2b724:	movw	r0, #1
   2b728:	movw	r2, #59431	; 0xe827
   2b72c:	movt	r2, #7
   2b730:	bl	12780 <error@plt>
   2b734:	ldr	r0, [pc, #296]	; 2b864 <__assert_fail@plt+0x18cac>
   2b738:	ldr	r1, [fp, #-12]
   2b73c:	cmp	r1, r0
   2b740:	bgt	2b750 <__assert_fail@plt+0x18b98>
   2b744:	ldr	r0, [fp, #-12]
   2b748:	cmp	r0, #-2147483648	; 0x80000000
   2b74c:	bge	2b778 <__assert_fail@plt+0x18bc0>
   2b750:	bl	128d0 <__errno_location@plt>
   2b754:	movw	lr, #34	; 0x22
   2b758:	str	lr, [r0]
   2b75c:	bl	128d0 <__errno_location@plt>
   2b760:	ldr	r1, [r0]
   2b764:	ldr	r3, [fp, #-4]
   2b768:	movw	r0, #1
   2b76c:	movw	r2, #59431	; 0xe827
   2b770:	movt	r2, #7
   2b774:	bl	12780 <error@plt>
   2b778:	ldr	r0, [fp, #-16]
   2b77c:	ldrsb	r0, [r0]
   2b780:	cmp	r0, #0
   2b784:	beq	2b7f4 <__assert_fail@plt+0x18c3c>
   2b788:	bl	128d0 <__errno_location@plt>
   2b78c:	ldr	r1, [r0]
   2b790:	movw	r0, #49757	; 0xc25d
   2b794:	movt	r0, #7
   2b798:	str	r1, [fp, #-20]	; 0xffffffec
   2b79c:	bl	12864 <gettext@plt>
   2b7a0:	ldr	r1, [fp, #-8]
   2b7a4:	ldr	r2, [fp, #-16]
   2b7a8:	movw	lr, #0
   2b7ac:	str	r0, [sp, #24]
   2b7b0:	mov	r0, lr
   2b7b4:	bl	4a828 <__assert_fail@plt+0x37c70>
   2b7b8:	ldr	r1, [fp, #-8]
   2b7bc:	ldr	r2, [fp, #-4]
   2b7c0:	movw	lr, #1
   2b7c4:	str	r0, [sp, #20]
   2b7c8:	mov	r0, lr
   2b7cc:	bl	4a828 <__assert_fail@plt+0x37c70>
   2b7d0:	movw	r1, #1
   2b7d4:	str	r0, [sp, #16]
   2b7d8:	mov	r0, r1
   2b7dc:	ldr	r1, [fp, #-20]	; 0xffffffec
   2b7e0:	ldr	r2, [sp, #24]
   2b7e4:	ldr	r3, [sp, #20]
   2b7e8:	ldr	lr, [sp, #16]
   2b7ec:	str	lr, [sp]
   2b7f0:	bl	12780 <error@plt>
   2b7f4:	ldr	r0, [fp, #-16]
   2b7f8:	ldr	r1, [fp, #-4]
   2b7fc:	cmp	r0, r1
   2b800:	bne	2b850 <__assert_fail@plt+0x18c98>
   2b804:	bl	128d0 <__errno_location@plt>
   2b808:	ldr	r1, [r0]
   2b80c:	movw	r0, #49784	; 0xc278
   2b810:	movt	r0, #7
   2b814:	str	r1, [sp, #12]
   2b818:	bl	12864 <gettext@plt>
   2b81c:	ldr	r1, [fp, #-8]
   2b820:	ldr	r2, [fp, #-4]
   2b824:	movw	lr, #0
   2b828:	str	r0, [sp, #8]
   2b82c:	mov	r0, lr
   2b830:	bl	4a828 <__assert_fail@plt+0x37c70>
   2b834:	movw	r1, #1
   2b838:	str	r0, [sp, #4]
   2b83c:	mov	r0, r1
   2b840:	ldr	r1, [sp, #12]
   2b844:	ldr	r2, [sp, #8]
   2b848:	ldr	r3, [sp, #4]
   2b84c:	bl	12780 <error@plt>
   2b850:	b	2b854 <__assert_fail@plt+0x18c9c>
   2b854:	b	2b858 <__assert_fail@plt+0x18ca0>
   2b858:	ldr	r0, [fp, #-12]
   2b85c:	mov	sp, fp
   2b860:	pop	{fp, pc}
   2b864:	svcvc	0x00ffffff
   2b868:	andhi	r0, r0, r0
   2b86c:	push	{fp, lr}
   2b870:	mov	fp, sp
   2b874:	sub	sp, sp, #24
   2b878:	ldr	ip, [fp, #8]
   2b87c:	str	r0, [fp, #-8]
   2b880:	str	r1, [sp, #12]
   2b884:	and	r0, r2, #1
   2b888:	strb	r0, [sp, #11]
   2b88c:	str	r3, [sp, #4]
   2b890:	ldrb	r0, [sp, #11]
   2b894:	tst	r0, #1
   2b898:	str	ip, [sp]
   2b89c:	beq	2b8b8 <__assert_fail@plt+0x18d00>
   2b8a0:	ldr	r0, [sp, #4]
   2b8a4:	movw	r1, #0
   2b8a8:	str	r1, [r0]
   2b8ac:	ldr	r0, [fp, #8]
   2b8b0:	str	r1, [r0]
   2b8b4:	b	2b914 <__assert_fail@plt+0x18d5c>
   2b8b8:	ldr	r0, [fp, #8]
   2b8bc:	ldr	r0, [r0]
   2b8c0:	ldr	r1, [sp, #4]
   2b8c4:	ldr	r2, [r1]
   2b8c8:	add	r0, r2, r0
   2b8cc:	str	r0, [r1]
   2b8d0:	ldr	r0, [fp, #-8]
   2b8d4:	ldr	r1, [sp, #4]
   2b8d8:	ldr	r1, [r1]
   2b8dc:	add	r0, r0, r1
   2b8e0:	ldrsb	r0, [r0]
   2b8e4:	cmp	r0, #0
   2b8e8:	beq	2b900 <__assert_fail@plt+0x18d48>
   2b8ec:	ldr	r0, [sp, #4]
   2b8f0:	ldr	r1, [r0]
   2b8f4:	add	r1, r1, #1
   2b8f8:	str	r1, [r0]
   2b8fc:	b	2b910 <__assert_fail@plt+0x18d58>
   2b900:	movw	r0, #0
   2b904:	and	r0, r0, #1
   2b908:	strb	r0, [fp, #-1]
   2b90c:	b	2b940 <__assert_fail@plt+0x18d88>
   2b910:	b	2b914 <__assert_fail@plt+0x18d5c>
   2b914:	ldr	r0, [fp, #-8]
   2b918:	ldr	r1, [sp, #4]
   2b91c:	ldr	r1, [r1]
   2b920:	add	r0, r0, r1
   2b924:	ldr	r1, [sp, #12]
   2b928:	bl	2b950 <__assert_fail@plt+0x18d98>
   2b92c:	ldr	r1, [fp, #8]
   2b930:	str	r0, [r1]
   2b934:	movw	r0, #1
   2b938:	and	r0, r0, #1
   2b93c:	strb	r0, [fp, #-1]
   2b940:	ldrb	r0, [fp, #-1]
   2b944:	and	r0, r0, #1
   2b948:	mov	sp, fp
   2b94c:	pop	{fp, pc}
   2b950:	push	{fp, lr}
   2b954:	mov	fp, sp
   2b958:	sub	sp, sp, #16
   2b95c:	str	r0, [sp, #8]
   2b960:	str	r1, [sp, #4]
   2b964:	ldr	r0, [sp, #4]
   2b968:	ldrsb	r0, [r0]
   2b96c:	cmp	r0, #0
   2b970:	beq	2b9ac <__assert_fail@plt+0x18df4>
   2b974:	ldr	r0, [sp, #8]
   2b978:	ldr	r1, [sp, #4]
   2b97c:	bl	12ad4 <strpbrk@plt>
   2b980:	str	r0, [sp]
   2b984:	ldr	r0, [sp]
   2b988:	movw	r1, #0
   2b98c:	cmp	r0, r1
   2b990:	beq	2b9a8 <__assert_fail@plt+0x18df0>
   2b994:	ldr	r0, [sp]
   2b998:	ldr	r1, [sp, #8]
   2b99c:	sub	r0, r0, r1
   2b9a0:	str	r0, [fp, #-4]
   2b9a4:	b	2b9b8 <__assert_fail@plt+0x18e00>
   2b9a8:	b	2b9ac <__assert_fail@plt+0x18df4>
   2b9ac:	ldr	r0, [sp, #8]
   2b9b0:	bl	12888 <strlen@plt>
   2b9b4:	str	r0, [fp, #-4]
   2b9b8:	ldr	r0, [fp, #-4]
   2b9bc:	mov	sp, fp
   2b9c0:	pop	{fp, pc}
   2b9c4:	push	{fp, lr}
   2b9c8:	mov	fp, sp
   2b9cc:	sub	sp, sp, #32
   2b9d0:	str	r0, [fp, #-4]
   2b9d4:	str	r1, [fp, #-8]
   2b9d8:	ldr	r0, [fp, #-4]
   2b9dc:	movw	r1, #49808	; 0xc290
   2b9e0:	movt	r1, #7
   2b9e4:	str	r0, [fp, #-12]
   2b9e8:	mov	r0, r1
   2b9ec:	bl	12864 <gettext@plt>
   2b9f0:	ldr	r3, [fp, #-8]
   2b9f4:	ldr	r1, [fp, #-12]
   2b9f8:	str	r0, [sp, #16]
   2b9fc:	mov	r0, r1
   2ba00:	ldr	r1, [sp, #16]
   2ba04:	movw	r2, #50014	; 0xc35e
   2ba08:	movt	r2, #7
   2ba0c:	movw	lr, #49409	; 0xc101
   2ba10:	movt	lr, #7
   2ba14:	str	lr, [sp]
   2ba18:	movw	lr, #50053	; 0xc385
   2ba1c:	movt	lr, #7
   2ba20:	str	lr, [sp, #4]
   2ba24:	movw	lr, #50100	; 0xc3b4
   2ba28:	movt	lr, #7
   2ba2c:	str	lr, [sp, #8]
   2ba30:	bl	128c4 <fprintf@plt>
   2ba34:	mov	sp, fp
   2ba38:	pop	{fp, pc}
   2ba3c:	push	{fp, lr}
   2ba40:	mov	fp, sp
   2ba44:	sub	sp, sp, #24
   2ba48:	str	r0, [fp, #-4]
   2ba4c:	str	r1, [fp, #-8]
   2ba50:	ldr	r0, [fp, #-4]
   2ba54:	ldr	r1, [fp, #-8]
   2ba58:	movw	r2, #0
   2ba5c:	str	r2, [sp, #12]
   2ba60:	ldr	r3, [sp, #12]
   2ba64:	ldr	ip, [sp, #12]
   2ba68:	str	ip, [sp]
   2ba6c:	movw	lr, #10220	; 0x27ec
   2ba70:	movt	lr, #1
   2ba74:	str	lr, [sp, #4]
   2ba78:	bl	2bd1c <__assert_fail@plt+0x19164>
   2ba7c:	mov	sp, fp
   2ba80:	pop	{fp, pc}
   2ba84:	push	{fp, lr}
   2ba88:	mov	fp, sp
   2ba8c:	sub	sp, sp, #16
   2ba90:	str	r0, [sp, #8]
   2ba94:	movw	r0, #24
   2ba98:	bl	549ac <__assert_fail@plt+0x41df4>
   2ba9c:	str	r0, [sp, #4]
   2baa0:	ldr	r0, [sp, #4]
   2baa4:	movw	lr, #0
   2baa8:	cmp	r0, lr
   2baac:	bne	2babc <__assert_fail@plt+0x18f04>
   2bab0:	movw	r0, #0
   2bab4:	str	r0, [fp, #-4]
   2bab8:	b	2bae8 <__assert_fail@plt+0x18f30>
   2babc:	ldr	r0, [sp, #4]
   2bac0:	movw	r1, #0
   2bac4:	str	r1, [r0]
   2bac8:	ldr	r0, [sp, #8]
   2bacc:	ldr	r1, [sp, #4]
   2bad0:	str	r0, [r1, #16]
   2bad4:	ldr	r0, [sp, #8]
   2bad8:	ldr	r1, [sp, #4]
   2badc:	str	r0, [r1, #20]
   2bae0:	ldr	r0, [sp, #4]
   2bae4:	str	r0, [fp, #-4]
   2bae8:	ldr	r0, [fp, #-4]
   2baec:	mov	sp, fp
   2baf0:	pop	{fp, pc}
   2baf4:	push	{fp, lr}
   2baf8:	mov	fp, sp
   2bafc:	sub	sp, sp, #16
   2bb00:	str	r0, [sp, #8]
   2bb04:	movw	r0, #24
   2bb08:	bl	549ac <__assert_fail@plt+0x41df4>
   2bb0c:	str	r0, [sp, #4]
   2bb10:	ldr	r0, [sp, #4]
   2bb14:	movw	lr, #0
   2bb18:	cmp	r0, lr
   2bb1c:	bne	2bb2c <__assert_fail@plt+0x18f74>
   2bb20:	movw	r0, #0
   2bb24:	str	r0, [fp, #-4]
   2bb28:	b	2bb64 <__assert_fail@plt+0x18fac>
   2bb2c:	ldr	r0, [sp, #8]
   2bb30:	ldr	r1, [sp, #4]
   2bb34:	str	r0, [r1]
   2bb38:	ldr	r0, [sp, #4]
   2bb3c:	movw	r1, #0
   2bb40:	str	r1, [r0, #8]
   2bb44:	ldr	r0, [sp, #4]
   2bb48:	str	r1, [r0, #12]
   2bb4c:	ldr	r0, [sp, #4]
   2bb50:	str	r1, [r0, #4]
   2bb54:	ldr	r0, [sp, #4]
   2bb58:	str	r1, [r0, #16]
   2bb5c:	ldr	r0, [sp, #4]
   2bb60:	str	r0, [fp, #-4]
   2bb64:	ldr	r0, [fp, #-4]
   2bb68:	mov	sp, fp
   2bb6c:	pop	{fp, pc}
   2bb70:	push	{fp, lr}
   2bb74:	mov	fp, sp
   2bb78:	sub	sp, sp, #16
   2bb7c:	str	r0, [sp, #8]
   2bb80:	str	r1, [sp, #4]
   2bb84:	ldr	r0, [sp, #8]
   2bb88:	ldr	r0, [r0]
   2bb8c:	movw	r1, #0
   2bb90:	cmp	r0, r1
   2bb94:	beq	2bc2c <__assert_fail@plt+0x19074>
   2bb98:	ldr	r0, [sp, #8]
   2bb9c:	add	r0, r0, #8
   2bba0:	ldr	r1, [sp, #8]
   2bba4:	add	r1, r1, #12
   2bba8:	ldr	r2, [sp, #8]
   2bbac:	ldr	r3, [r2]
   2bbb0:	movw	r2, #0
   2bbb4:	bl	12b10 <getdelim@plt>
   2bbb8:	str	r0, [sp]
   2bbbc:	ldr	r0, [sp]
   2bbc0:	cmp	r0, #0
   2bbc4:	bge	2bc00 <__assert_fail@plt+0x19048>
   2bbc8:	ldr	r0, [sp, #8]
   2bbcc:	ldr	r0, [r0]
   2bbd0:	bl	12858 <feof@plt>
   2bbd4:	cmp	r0, #0
   2bbd8:	movw	r0, #0
   2bbdc:	movne	r0, #1
   2bbe0:	tst	r0, #1
   2bbe4:	movw	r0, #2
   2bbe8:	moveq	r0, #4
   2bbec:	ldr	lr, [sp, #4]
   2bbf0:	str	r0, [lr]
   2bbf4:	movw	r0, #0
   2bbf8:	str	r0, [fp, #-4]
   2bbfc:	b	2bc80 <__assert_fail@plt+0x190c8>
   2bc00:	ldr	r0, [sp, #4]
   2bc04:	movw	r1, #1
   2bc08:	str	r1, [r0]
   2bc0c:	ldr	r0, [sp, #8]
   2bc10:	ldr	r1, [r0, #4]
   2bc14:	add	r1, r1, #1
   2bc18:	str	r1, [r0, #4]
   2bc1c:	ldr	r0, [sp, #8]
   2bc20:	ldr	r0, [r0, #8]
   2bc24:	str	r0, [fp, #-4]
   2bc28:	b	2bc80 <__assert_fail@plt+0x190c8>
   2bc2c:	ldr	r0, [sp, #8]
   2bc30:	ldr	r0, [r0, #20]
   2bc34:	ldr	r0, [r0]
   2bc38:	movw	r1, #0
   2bc3c:	cmp	r0, r1
   2bc40:	bne	2bc5c <__assert_fail@plt+0x190a4>
   2bc44:	ldr	r0, [sp, #4]
   2bc48:	movw	r1, #2
   2bc4c:	str	r1, [r0]
   2bc50:	movw	r0, #0
   2bc54:	str	r0, [fp, #-4]
   2bc58:	b	2bc80 <__assert_fail@plt+0x190c8>
   2bc5c:	ldr	r0, [sp, #4]
   2bc60:	movw	r1, #1
   2bc64:	str	r1, [r0]
   2bc68:	ldr	r0, [sp, #8]
   2bc6c:	ldr	r1, [r0, #20]
   2bc70:	add	r2, r1, #4
   2bc74:	str	r2, [r0, #20]
   2bc78:	ldr	r0, [r1]
   2bc7c:	str	r0, [fp, #-4]
   2bc80:	ldr	r0, [fp, #-4]
   2bc84:	mov	sp, fp
   2bc88:	pop	{fp, pc}
   2bc8c:	sub	sp, sp, #8
   2bc90:	str	r0, [sp, #4]
   2bc94:	ldr	r0, [sp, #4]
   2bc98:	ldr	r0, [r0]
   2bc9c:	movw	r1, #0
   2bca0:	cmp	r0, r1
   2bca4:	beq	2bcb8 <__assert_fail@plt+0x19100>
   2bca8:	ldr	r0, [sp, #4]
   2bcac:	ldr	r0, [r0, #4]
   2bcb0:	str	r0, [sp]
   2bcb4:	b	2bcd0 <__assert_fail@plt+0x19118>
   2bcb8:	ldr	r0, [sp, #4]
   2bcbc:	ldr	r1, [r0, #16]
   2bcc0:	ldr	r0, [r0, #20]
   2bcc4:	sub	r0, r0, r1
   2bcc8:	asr	r0, r0, #2
   2bccc:	str	r0, [sp]
   2bcd0:	ldr	r0, [sp]
   2bcd4:	add	sp, sp, #8
   2bcd8:	bx	lr
   2bcdc:	push	{fp, lr}
   2bce0:	mov	fp, sp
   2bce4:	sub	sp, sp, #8
   2bce8:	str	r0, [sp, #4]
   2bcec:	ldr	r0, [sp, #4]
   2bcf0:	ldr	r0, [r0]
   2bcf4:	movw	r1, #0
   2bcf8:	cmp	r0, r1
   2bcfc:	beq	2bd0c <__assert_fail@plt+0x19154>
   2bd00:	ldr	r0, [sp, #4]
   2bd04:	ldr	r0, [r0, #8]
   2bd08:	bl	50c68 <__assert_fail@plt+0x3e0b0>
   2bd0c:	ldr	r0, [sp, #4]
   2bd10:	bl	50c68 <__assert_fail@plt+0x3e0b0>
   2bd14:	mov	sp, fp
   2bd18:	pop	{fp, pc}
   2bd1c:	push	{r4, r5, r6, sl, fp, lr}
   2bd20:	add	fp, sp, #16
   2bd24:	sub	sp, sp, #40	; 0x28
   2bd28:	sub	sp, sp, #1024	; 0x400
   2bd2c:	ldr	ip, [fp, #12]
   2bd30:	ldr	lr, [fp, #8]
   2bd34:	add	r4, sp, #24
   2bd38:	str	r0, [fp, #-20]	; 0xffffffec
   2bd3c:	str	r1, [fp, #-24]	; 0xffffffe8
   2bd40:	str	r2, [fp, #-28]	; 0xffffffe4
   2bd44:	str	r3, [fp, #-32]	; 0xffffffe0
   2bd48:	ldr	r0, [fp, #-20]	; 0xffffffec
   2bd4c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2bd50:	ldr	r2, [fp, #-28]	; 0xffffffe4
   2bd54:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2bd58:	ldr	r5, [fp, #8]
   2bd5c:	ldr	r6, [fp, #12]
   2bd60:	str	r5, [sp]
   2bd64:	str	r6, [sp, #4]
   2bd68:	str	r4, [sp, #8]
   2bd6c:	str	lr, [sp, #20]
   2bd70:	str	ip, [sp, #16]
   2bd74:	bl	2bd80 <__assert_fail@plt+0x191c8>
   2bd78:	sub	sp, fp, #16
   2bd7c:	pop	{r4, r5, r6, sl, fp, pc}
   2bd80:	push	{r4, sl, fp, lr}
   2bd84:	add	fp, sp, #8
   2bd88:	sub	sp, sp, #104	; 0x68
   2bd8c:	ldr	ip, [fp, #16]
   2bd90:	ldr	lr, [fp, #12]
   2bd94:	ldr	r4, [fp, #8]
   2bd98:	str	r0, [fp, #-16]
   2bd9c:	str	r1, [fp, #-20]	; 0xffffffec
   2bda0:	str	r2, [fp, #-24]	; 0xffffffe8
   2bda4:	str	r3, [fp, #-28]	; 0xffffffe4
   2bda8:	ldr	r0, [fp, #8]
   2bdac:	movw	r1, #0
   2bdb0:	cmp	r0, r1
   2bdb4:	str	r4, [sp, #48]	; 0x30
   2bdb8:	str	lr, [sp, #44]	; 0x2c
   2bdbc:	str	ip, [sp, #40]	; 0x28
   2bdc0:	bne	2bdd0 <__assert_fail@plt+0x19218>
   2bdc4:	movw	r0, #59328	; 0xe7c0
   2bdc8:	movt	r0, #7
   2bdcc:	str	r0, [fp, #8]
   2bdd0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2bdd4:	movw	r1, #0
   2bdd8:	cmp	r0, r1
   2bddc:	bne	2bdf0 <__assert_fail@plt+0x19238>
   2bde0:	ldr	r0, [fp, #16]
   2bde4:	str	r0, [fp, #-24]	; 0xffffffe8
   2bde8:	movw	r0, #1024	; 0x400
   2bdec:	str	r0, [fp, #-28]	; 0xffffffe4
   2bdf0:	ldr	r0, [pc, #740]	; 2c0dc <__assert_fail@plt+0x19524>
   2bdf4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2bdf8:	str	r1, [fp, #-32]	; 0xffffffe0
   2bdfc:	str	r0, [fp, #-36]	; 0xffffffdc
   2be00:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2be04:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2be08:	cmp	r0, r1
   2be0c:	bcs	2be1c <__assert_fail@plt+0x19264>
   2be10:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2be14:	str	r0, [sp, #36]	; 0x24
   2be18:	b	2be24 <__assert_fail@plt+0x1926c>
   2be1c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2be20:	str	r0, [sp, #36]	; 0x24
   2be24:	ldr	r0, [sp, #36]	; 0x24
   2be28:	str	r0, [fp, #-40]	; 0xffffffd8
   2be2c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2be30:	movw	r1, #0
   2be34:	cmp	r0, r1
   2be38:	beq	2c08c <__assert_fail@plt+0x194d4>
   2be3c:	ldr	r0, [fp, #12]
   2be40:	ldr	r1, [fp, #-16]
   2be44:	ldr	r2, [fp, #-20]	; 0xffffffec
   2be48:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2be4c:	ldr	ip, [fp, #-40]	; 0xffffffd8
   2be50:	str	r0, [sp, #32]
   2be54:	mov	r0, r1
   2be58:	mov	r1, r2
   2be5c:	mov	r2, r3
   2be60:	mov	r3, ip
   2be64:	ldr	ip, [sp, #32]
   2be68:	blx	ip
   2be6c:	str	r0, [fp, #-44]	; 0xffffffd4
   2be70:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2be74:	cmp	r0, #0
   2be78:	bge	2bed4 <__assert_fail@plt+0x1931c>
   2be7c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2be80:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2be84:	cmp	r0, r1
   2be88:	beq	2bec8 <__assert_fail@plt+0x19310>
   2be8c:	bl	128d0 <__errno_location@plt>
   2be90:	ldr	r0, [r0]
   2be94:	str	r0, [fp, #-48]	; 0xffffffd0
   2be98:	ldr	r0, [fp, #8]
   2be9c:	ldr	r0, [r0, #8]
   2bea0:	ldr	lr, [fp, #-32]	; 0xffffffe0
   2bea4:	str	r0, [sp, #28]
   2bea8:	mov	r0, lr
   2beac:	ldr	lr, [sp, #28]
   2beb0:	blx	lr
   2beb4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   2beb8:	str	r0, [sp, #24]
   2bebc:	bl	128d0 <__errno_location@plt>
   2bec0:	ldr	lr, [sp, #24]
   2bec4:	str	lr, [r0]
   2bec8:	movw	r0, #0
   2becc:	str	r0, [fp, #-12]
   2bed0:	b	2c0d0 <__assert_fail@plt+0x19518>
   2bed4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2bed8:	str	r0, [fp, #-52]	; 0xffffffcc
   2bedc:	ldr	r0, [fp, #-52]	; 0xffffffcc
   2bee0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   2bee4:	cmp	r0, r1
   2bee8:	bge	2bffc <__assert_fail@plt+0x19444>
   2beec:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2bef0:	ldr	r1, [fp, #-52]	; 0xffffffcc
   2bef4:	add	r2, r1, #1
   2bef8:	str	r2, [fp, #-52]	; 0xffffffcc
   2befc:	add	r0, r0, r1
   2bf00:	movw	r1, #0
   2bf04:	strb	r1, [r0]
   2bf08:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2bf0c:	ldr	r1, [fp, #16]
   2bf10:	cmp	r0, r1
   2bf14:	bne	2bf74 <__assert_fail@plt+0x193bc>
   2bf18:	ldr	r0, [fp, #8]
   2bf1c:	ldr	r0, [r0]
   2bf20:	ldr	r1, [fp, #-52]	; 0xffffffcc
   2bf24:	str	r0, [sp, #20]
   2bf28:	mov	r0, r1
   2bf2c:	ldr	r1, [sp, #20]
   2bf30:	blx	r1
   2bf34:	str	r0, [sp, #56]	; 0x38
   2bf38:	ldr	r0, [fp, #-52]	; 0xffffffcc
   2bf3c:	str	r0, [fp, #-40]	; 0xffffffd8
   2bf40:	ldr	r0, [sp, #56]	; 0x38
   2bf44:	movw	r1, #0
   2bf48:	cmp	r0, r1
   2bf4c:	bne	2bf54 <__assert_fail@plt+0x1939c>
   2bf50:	b	2c08c <__assert_fail@plt+0x194d4>
   2bf54:	ldr	r0, [sp, #56]	; 0x38
   2bf58:	ldr	r1, [fp, #-32]	; 0xffffffe0
   2bf5c:	ldr	r2, [fp, #-52]	; 0xffffffcc
   2bf60:	str	r0, [sp, #16]
   2bf64:	bl	125c4 <memcpy@plt>
   2bf68:	ldr	r0, [sp, #16]
   2bf6c:	str	r0, [fp, #-12]
   2bf70:	b	2c0d0 <__assert_fail@plt+0x19518>
   2bf74:	ldr	r0, [fp, #-52]	; 0xffffffcc
   2bf78:	ldr	r1, [fp, #-40]	; 0xffffffd8
   2bf7c:	cmp	r0, r1
   2bf80:	bge	2bff0 <__assert_fail@plt+0x19438>
   2bf84:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2bf88:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2bf8c:	cmp	r0, r1
   2bf90:	beq	2bff0 <__assert_fail@plt+0x19438>
   2bf94:	ldr	r0, [fp, #8]
   2bf98:	ldr	r0, [r0, #4]
   2bf9c:	movw	r1, #0
   2bfa0:	cmp	r0, r1
   2bfa4:	beq	2bff0 <__assert_fail@plt+0x19438>
   2bfa8:	ldr	r0, [fp, #8]
   2bfac:	ldr	r0, [r0, #4]
   2bfb0:	ldr	r1, [fp, #-32]	; 0xffffffe0
   2bfb4:	ldr	r2, [fp, #-52]	; 0xffffffcc
   2bfb8:	str	r0, [sp, #12]
   2bfbc:	mov	r0, r1
   2bfc0:	mov	r1, r2
   2bfc4:	ldr	r2, [sp, #12]
   2bfc8:	blx	r2
   2bfcc:	str	r0, [sp, #52]	; 0x34
   2bfd0:	ldr	r0, [sp, #52]	; 0x34
   2bfd4:	movw	r1, #0
   2bfd8:	cmp	r0, r1
   2bfdc:	beq	2bfec <__assert_fail@plt+0x19434>
   2bfe0:	ldr	r0, [sp, #52]	; 0x34
   2bfe4:	str	r0, [fp, #-12]
   2bfe8:	b	2c0d0 <__assert_fail@plt+0x19518>
   2bfec:	b	2bff0 <__assert_fail@plt+0x19438>
   2bff0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2bff4:	str	r0, [fp, #-12]
   2bff8:	b	2c0d0 <__assert_fail@plt+0x19518>
   2bffc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2c000:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2c004:	cmp	r0, r1
   2c008:	beq	2c028 <__assert_fail@plt+0x19470>
   2c00c:	ldr	r0, [fp, #8]
   2c010:	ldr	r0, [r0, #8]
   2c014:	ldr	r1, [fp, #-32]	; 0xffffffe0
   2c018:	str	r0, [sp, #8]
   2c01c:	mov	r0, r1
   2c020:	ldr	r1, [sp, #8]
   2c024:	blx	r1
   2c028:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2c02c:	movw	r1, #2
   2c030:	sdiv	r0, r0, r1
   2c034:	ldr	r1, [fp, #-40]	; 0xffffffd8
   2c038:	cmp	r0, r1
   2c03c:	bgt	2c058 <__assert_fail@plt+0x194a0>
   2c040:	bl	128d0 <__errno_location@plt>
   2c044:	movw	lr, #36	; 0x24
   2c048:	str	lr, [r0]
   2c04c:	movw	r0, #0
   2c050:	str	r0, [fp, #-12]
   2c054:	b	2c0d0 <__assert_fail@plt+0x19518>
   2c058:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2c05c:	lsl	r0, r0, #1
   2c060:	add	r0, r0, #1
   2c064:	str	r0, [fp, #-40]	; 0xffffffd8
   2c068:	ldr	r0, [fp, #8]
   2c06c:	ldr	r0, [r0]
   2c070:	ldr	r1, [fp, #-40]	; 0xffffffd8
   2c074:	str	r0, [sp, #4]
   2c078:	mov	r0, r1
   2c07c:	ldr	r1, [sp, #4]
   2c080:	blx	r1
   2c084:	str	r0, [fp, #-32]	; 0xffffffe0
   2c088:	b	2be2c <__assert_fail@plt+0x19274>
   2c08c:	ldr	r0, [fp, #8]
   2c090:	ldr	r0, [r0, #12]
   2c094:	movw	r1, #0
   2c098:	cmp	r0, r1
   2c09c:	beq	2c0bc <__assert_fail@plt+0x19504>
   2c0a0:	ldr	r0, [fp, #8]
   2c0a4:	ldr	r0, [r0, #12]
   2c0a8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   2c0ac:	str	r0, [sp]
   2c0b0:	mov	r0, r1
   2c0b4:	ldr	r1, [sp]
   2c0b8:	blx	r1
   2c0bc:	bl	128d0 <__errno_location@plt>
   2c0c0:	movw	lr, #12
   2c0c4:	str	lr, [r0]
   2c0c8:	movw	r0, #0
   2c0cc:	str	r0, [fp, #-12]
   2c0d0:	ldr	r0, [fp, #-12]
   2c0d4:	sub	sp, fp, #8
   2c0d8:	pop	{r4, sl, fp, pc}
   2c0dc:	svcvc	0x00ffffff
   2c0e0:	push	{fp, lr}
   2c0e4:	mov	fp, sp
   2c0e8:	sub	sp, sp, #24
   2c0ec:	str	r0, [fp, #-8]
   2c0f0:	and	r0, r1, #1
   2c0f4:	strb	r0, [fp, #-9]
   2c0f8:	ldr	r0, [fp, #-8]
   2c0fc:	movw	r1, #1
   2c100:	movw	r2, #0
   2c104:	bl	507d8 <__assert_fail@plt+0x3dc20>
   2c108:	str	r0, [sp, #8]
   2c10c:	ldr	r0, [sp, #8]
   2c110:	movw	r1, #0
   2c114:	cmp	r1, r0
   2c118:	bgt	2c188 <__assert_fail@plt+0x195d0>
   2c11c:	ldrb	r0, [fp, #-9]
   2c120:	tst	r0, #1
   2c124:	beq	2c138 <__assert_fail@plt+0x19580>
   2c128:	ldr	r0, [sp, #8]
   2c12c:	orr	r0, r0, #1
   2c130:	str	r0, [sp]
   2c134:	b	2c148 <__assert_fail@plt+0x19590>
   2c138:	ldr	r0, [sp, #8]
   2c13c:	mvn	r1, #1
   2c140:	and	r0, r0, r1
   2c144:	str	r0, [sp]
   2c148:	ldr	r0, [sp]
   2c14c:	str	r0, [sp, #4]
   2c150:	ldr	r0, [sp, #8]
   2c154:	ldr	r1, [sp, #4]
   2c158:	cmp	r0, r1
   2c15c:	beq	2c178 <__assert_fail@plt+0x195c0>
   2c160:	ldr	r0, [fp, #-8]
   2c164:	ldr	r2, [sp, #4]
   2c168:	movw	r1, #2
   2c16c:	bl	507d8 <__assert_fail@plt+0x3dc20>
   2c170:	cmn	r0, #1
   2c174:	beq	2c184 <__assert_fail@plt+0x195cc>
   2c178:	movw	r0, #0
   2c17c:	str	r0, [fp, #-4]
   2c180:	b	2c190 <__assert_fail@plt+0x195d8>
   2c184:	b	2c188 <__assert_fail@plt+0x195d0>
   2c188:	mvn	r0, #0
   2c18c:	str	r0, [fp, #-4]
   2c190:	ldr	r0, [fp, #-4]
   2c194:	mov	sp, fp
   2c198:	pop	{fp, pc}
   2c19c:	push	{fp, lr}
   2c1a0:	mov	fp, sp
   2c1a4:	sub	sp, sp, #8
   2c1a8:	str	r0, [sp, #4]
   2c1ac:	ldr	r0, [sp, #4]
   2c1b0:	movw	r1, #1030	; 0x406
   2c1b4:	movw	r2, #0
   2c1b8:	bl	507d8 <__assert_fail@plt+0x3dc20>
   2c1bc:	mov	sp, fp
   2c1c0:	pop	{fp, pc}
   2c1c4:	sub	sp, sp, #4
   2c1c8:	str	r0, [sp]
   2c1cc:	ldr	r0, [sp]
   2c1d0:	movw	r1, #65228	; 0xfecc
   2c1d4:	movt	r1, #8
   2c1d8:	str	r0, [r1]
   2c1dc:	add	sp, sp, #4
   2c1e0:	bx	lr
   2c1e4:	sub	sp, sp, #4
   2c1e8:	and	r0, r0, #1
   2c1ec:	strb	r0, [sp, #3]
   2c1f0:	ldrb	r0, [sp, #3]
   2c1f4:	and	r0, r0, #1
   2c1f8:	movw	r1, #65232	; 0xfed0
   2c1fc:	movt	r1, #8
   2c200:	strb	r0, [r1]
   2c204:	add	sp, sp, #4
   2c208:	bx	lr
   2c20c:	push	{fp, lr}
   2c210:	mov	fp, sp
   2c214:	sub	sp, sp, #24
   2c218:	movw	r0, #63284	; 0xf734
   2c21c:	movt	r0, #8
   2c220:	ldr	r0, [r0]
   2c224:	bl	7175c <__assert_fail@plt+0x5eba4>
   2c228:	cmp	r0, #0
   2c22c:	beq	2c2fc <__assert_fail@plt+0x19744>
   2c230:	movw	r0, #65232	; 0xfed0
   2c234:	movt	r0, #8
   2c238:	ldrb	r0, [r0]
   2c23c:	tst	r0, #1
   2c240:	beq	2c254 <__assert_fail@plt+0x1969c>
   2c244:	bl	128d0 <__errno_location@plt>
   2c248:	ldr	r0, [r0]
   2c24c:	cmp	r0, #32
   2c250:	beq	2c2fc <__assert_fail@plt+0x19744>
   2c254:	movw	r0, #50122	; 0xc3ca
   2c258:	movt	r0, #7
   2c25c:	bl	12864 <gettext@plt>
   2c260:	str	r0, [fp, #-4]
   2c264:	movw	r0, #65228	; 0xfecc
   2c268:	movt	r0, #8
   2c26c:	ldr	r0, [r0]
   2c270:	movw	lr, #0
   2c274:	cmp	r0, lr
   2c278:	beq	2c2d0 <__assert_fail@plt+0x19718>
   2c27c:	bl	128d0 <__errno_location@plt>
   2c280:	ldr	r1, [r0]
   2c284:	movw	r0, #65228	; 0xfecc
   2c288:	movt	r0, #8
   2c28c:	ldr	r0, [r0]
   2c290:	str	r1, [fp, #-8]
   2c294:	bl	4a9f8 <__assert_fail@plt+0x37e40>
   2c298:	ldr	r1, [fp, #-4]
   2c29c:	movw	lr, #0
   2c2a0:	str	r0, [sp, #12]
   2c2a4:	mov	r0, lr
   2c2a8:	ldr	lr, [fp, #-8]
   2c2ac:	str	r1, [sp, #8]
   2c2b0:	mov	r1, lr
   2c2b4:	movw	r2, #50134	; 0xc3d6
   2c2b8:	movt	r2, #7
   2c2bc:	ldr	r3, [sp, #12]
   2c2c0:	ldr	ip, [sp, #8]
   2c2c4:	str	ip, [sp]
   2c2c8:	bl	12780 <error@plt>
   2c2cc:	b	2c2ec <__assert_fail@plt+0x19734>
   2c2d0:	bl	128d0 <__errno_location@plt>
   2c2d4:	ldr	r1, [r0]
   2c2d8:	ldr	r3, [fp, #-4]
   2c2dc:	movw	r0, #0
   2c2e0:	movw	r2, #59431	; 0xe827
   2c2e4:	movt	r2, #7
   2c2e8:	bl	12780 <error@plt>
   2c2ec:	movw	r0, #63180	; 0xf6cc
   2c2f0:	movt	r0, #8
   2c2f4:	ldr	r0, [r0]
   2c2f8:	bl	125b8 <_exit@plt>
   2c2fc:	movw	r0, #63272	; 0xf728
   2c300:	movt	r0, #8
   2c304:	ldr	r0, [r0]
   2c308:	bl	7175c <__assert_fail@plt+0x5eba4>
   2c30c:	cmp	r0, #0
   2c310:	beq	2c324 <__assert_fail@plt+0x1976c>
   2c314:	movw	r0, #63180	; 0xf6cc
   2c318:	movt	r0, #8
   2c31c:	ldr	r0, [r0]
   2c320:	bl	125b8 <_exit@plt>
   2c324:	mov	sp, fp
   2c328:	pop	{fp, pc}
   2c32c:	push	{fp, lr}
   2c330:	mov	fp, sp
   2c334:	sub	sp, sp, #40	; 0x28
   2c338:	str	r0, [fp, #-4]
   2c33c:	ldr	r0, [fp, #-4]
   2c340:	bl	12798 <opendir@plt>
   2c344:	str	r0, [fp, #-8]
   2c348:	ldr	r0, [fp, #-8]
   2c34c:	movw	lr, #0
   2c350:	cmp	r0, lr
   2c354:	beq	2c41c <__assert_fail@plt+0x19864>
   2c358:	ldr	r0, [fp, #-8]
   2c35c:	bl	12a98 <dirfd@plt>
   2c360:	str	r0, [fp, #-12]
   2c364:	ldr	r0, [fp, #-12]
   2c368:	movw	lr, #0
   2c36c:	cmp	lr, r0
   2c370:	bgt	2c418 <__assert_fail@plt+0x19860>
   2c374:	ldr	r0, [fp, #-12]
   2c378:	cmp	r0, #2
   2c37c:	bgt	2c418 <__assert_fail@plt+0x19860>
   2c380:	ldr	r0, [fp, #-12]
   2c384:	movw	r1, #1030	; 0x406
   2c388:	movw	r2, #3
   2c38c:	bl	507d8 <__assert_fail@plt+0x3dc20>
   2c390:	str	r0, [sp, #16]
   2c394:	ldr	r0, [sp, #16]
   2c398:	cmp	r0, #0
   2c39c:	bge	2c3b8 <__assert_fail@plt+0x19800>
   2c3a0:	bl	128d0 <__errno_location@plt>
   2c3a4:	ldr	r0, [r0]
   2c3a8:	str	r0, [sp, #20]
   2c3ac:	movw	r0, #0
   2c3b0:	str	r0, [fp, #-16]
   2c3b4:	b	2c3f0 <__assert_fail@plt+0x19838>
   2c3b8:	ldr	r0, [sp, #16]
   2c3bc:	bl	12a74 <fdopendir@plt>
   2c3c0:	str	r0, [fp, #-16]
   2c3c4:	bl	128d0 <__errno_location@plt>
   2c3c8:	ldr	r0, [r0]
   2c3cc:	str	r0, [sp, #20]
   2c3d0:	ldr	r0, [fp, #-16]
   2c3d4:	movw	lr, #0
   2c3d8:	cmp	r0, lr
   2c3dc:	bne	2c3ec <__assert_fail@plt+0x19834>
   2c3e0:	ldr	r0, [sp, #16]
   2c3e4:	bl	12b70 <close@plt>
   2c3e8:	str	r0, [sp, #12]
   2c3ec:	b	2c3f0 <__assert_fail@plt+0x19838>
   2c3f0:	ldr	r0, [fp, #-8]
   2c3f4:	bl	12b88 <closedir@plt>
   2c3f8:	ldr	lr, [sp, #20]
   2c3fc:	str	r0, [sp, #8]
   2c400:	str	lr, [sp, #4]
   2c404:	bl	128d0 <__errno_location@plt>
   2c408:	ldr	lr, [sp, #4]
   2c40c:	str	lr, [r0]
   2c410:	ldr	r0, [fp, #-16]
   2c414:	str	r0, [fp, #-8]
   2c418:	b	2c41c <__assert_fail@plt+0x19864>
   2c41c:	ldr	r0, [fp, #-8]
   2c420:	mov	sp, fp
   2c424:	pop	{fp, pc}
   2c428:	push	{fp, lr}
   2c42c:	mov	fp, sp
   2c430:	sub	sp, sp, #24
   2c434:	str	r0, [fp, #-4]
   2c438:	ldr	r0, [fp, #-4]
   2c43c:	bl	70c48 <__assert_fail@plt+0x5e090>
   2c440:	str	r0, [fp, #-8]
   2c444:	ldr	r0, [fp, #-8]
   2c448:	ldrsb	r0, [r0]
   2c44c:	cmp	r0, #0
   2c450:	beq	2c498 <__assert_fail@plt+0x198e0>
   2c454:	ldr	r0, [fp, #-8]
   2c458:	bl	70cf4 <__assert_fail@plt+0x5e13c>
   2c45c:	str	r0, [sp, #12]
   2c460:	ldr	r0, [fp, #-8]
   2c464:	ldr	lr, [sp, #12]
   2c468:	add	r0, r0, lr
   2c46c:	ldrb	r0, [r0]
   2c470:	cmp	r0, #47	; 0x2f
   2c474:	movw	r0, #0
   2c478:	moveq	r0, #1
   2c47c:	and	r0, r0, #1
   2c480:	ldr	lr, [sp, #12]
   2c484:	add	r0, lr, r0
   2c488:	str	r0, [sp, #12]
   2c48c:	movw	r0, #0
   2c490:	str	r0, [sp, #8]
   2c494:	b	2c4b4 <__assert_fail@plt+0x198fc>
   2c498:	ldr	r0, [fp, #-4]
   2c49c:	str	r0, [fp, #-8]
   2c4a0:	ldr	r0, [fp, #-8]
   2c4a4:	bl	70cf4 <__assert_fail@plt+0x5e13c>
   2c4a8:	str	r0, [sp, #12]
   2c4ac:	movw	r0, #0
   2c4b0:	str	r0, [sp, #8]
   2c4b4:	ldr	r0, [sp, #8]
   2c4b8:	ldr	r1, [sp, #12]
   2c4bc:	add	r0, r0, r1
   2c4c0:	add	r0, r0, #1
   2c4c4:	bl	4c3e8 <__assert_fail@plt+0x39830>
   2c4c8:	str	r0, [sp, #4]
   2c4cc:	ldr	r0, [sp, #8]
   2c4d0:	cmp	r0, #0
   2c4d4:	beq	2c4f0 <__assert_fail@plt+0x19938>
   2c4d8:	ldr	r0, [sp, #4]
   2c4dc:	movw	r1, #46	; 0x2e
   2c4e0:	strb	r1, [r0]
   2c4e4:	ldr	r0, [sp, #4]
   2c4e8:	movw	r1, #47	; 0x2f
   2c4ec:	strb	r1, [r0, #1]
   2c4f0:	ldr	r0, [sp, #4]
   2c4f4:	ldr	r1, [sp, #8]
   2c4f8:	add	r0, r0, r1
   2c4fc:	ldr	r1, [fp, #-8]
   2c500:	ldr	r2, [sp, #12]
   2c504:	bl	125c4 <memcpy@plt>
   2c508:	ldr	r0, [sp, #4]
   2c50c:	ldr	r1, [sp, #8]
   2c510:	ldr	r2, [sp, #12]
   2c514:	add	r1, r1, r2
   2c518:	add	r0, r0, r1
   2c51c:	movw	r1, #0
   2c520:	strb	r1, [r0]
   2c524:	ldr	r0, [sp, #4]
   2c528:	mov	sp, fp
   2c52c:	pop	{fp, pc}
   2c530:	push	{fp, lr}
   2c534:	mov	fp, sp
   2c538:	sub	sp, sp, #16
   2c53c:	str	r0, [fp, #-4]
   2c540:	movw	r0, #0
   2c544:	str	r0, [sp, #8]
   2c548:	ldr	r0, [sp, #8]
   2c54c:	cmp	r0, #0
   2c550:	beq	2c560 <__assert_fail@plt+0x199a8>
   2c554:	movw	r0, #0
   2c558:	str	r0, [sp]
   2c55c:	b	2c584 <__assert_fail@plt+0x199cc>
   2c560:	ldr	r0, [fp, #-4]
   2c564:	ldrb	r0, [r0]
   2c568:	cmp	r0, #47	; 0x2f
   2c56c:	movw	r0, #0
   2c570:	moveq	r0, #1
   2c574:	tst	r0, #1
   2c578:	movw	r0, #1
   2c57c:	moveq	r0, #0
   2c580:	str	r0, [sp]
   2c584:	ldr	r0, [sp]
   2c588:	ldr	r1, [sp, #8]
   2c58c:	add	r0, r1, r0
   2c590:	str	r0, [sp, #8]
   2c594:	ldr	r0, [fp, #-4]
   2c598:	bl	70c48 <__assert_fail@plt+0x5e090>
   2c59c:	ldr	r1, [fp, #-4]
   2c5a0:	sub	r0, r0, r1
   2c5a4:	str	r0, [sp, #4]
   2c5a8:	ldr	r0, [sp, #8]
   2c5ac:	ldr	r1, [sp, #4]
   2c5b0:	cmp	r0, r1
   2c5b4:	bcs	2c5f0 <__assert_fail@plt+0x19a38>
   2c5b8:	ldr	r0, [fp, #-4]
   2c5bc:	ldr	r1, [sp, #4]
   2c5c0:	sub	r1, r1, #1
   2c5c4:	add	r0, r0, r1
   2c5c8:	ldrb	r0, [r0]
   2c5cc:	cmp	r0, #47	; 0x2f
   2c5d0:	beq	2c5d8 <__assert_fail@plt+0x19a20>
   2c5d4:	b	2c5f0 <__assert_fail@plt+0x19a38>
   2c5d8:	b	2c5dc <__assert_fail@plt+0x19a24>
   2c5dc:	ldr	r0, [sp, #4]
   2c5e0:	mvn	r1, #0
   2c5e4:	add	r0, r0, r1
   2c5e8:	str	r0, [sp, #4]
   2c5ec:	b	2c5a8 <__assert_fail@plt+0x199f0>
   2c5f0:	ldr	r0, [sp, #4]
   2c5f4:	mov	sp, fp
   2c5f8:	pop	{fp, pc}
   2c5fc:	push	{fp, lr}
   2c600:	mov	fp, sp
   2c604:	sub	sp, sp, #24
   2c608:	str	r0, [fp, #-8]
   2c60c:	ldr	r0, [fp, #-8]
   2c610:	bl	2c530 <__assert_fail@plt+0x19978>
   2c614:	str	r0, [sp, #12]
   2c618:	ldr	r0, [sp, #12]
   2c61c:	cmp	r0, #0
   2c620:	movw	r0, #1
   2c624:	str	r0, [sp]
   2c628:	beq	2c638 <__assert_fail@plt+0x19a80>
   2c62c:	movw	r0, #0
   2c630:	str	r0, [sp]
   2c634:	b	2c638 <__assert_fail@plt+0x19a80>
   2c638:	ldr	r0, [sp]
   2c63c:	and	r0, r0, #1
   2c640:	strb	r0, [sp, #11]
   2c644:	ldr	r0, [sp, #12]
   2c648:	ldrb	r1, [sp, #11]
   2c64c:	and	r1, r1, #1
   2c650:	add	r0, r0, r1
   2c654:	add	r0, r0, #1
   2c658:	bl	549ac <__assert_fail@plt+0x41df4>
   2c65c:	str	r0, [sp, #4]
   2c660:	ldr	r0, [sp, #4]
   2c664:	movw	r1, #0
   2c668:	cmp	r0, r1
   2c66c:	bne	2c67c <__assert_fail@plt+0x19ac4>
   2c670:	movw	r0, #0
   2c674:	str	r0, [fp, #-4]
   2c678:	b	2c6d0 <__assert_fail@plt+0x19b18>
   2c67c:	ldr	r0, [sp, #4]
   2c680:	ldr	r1, [fp, #-8]
   2c684:	ldr	r2, [sp, #12]
   2c688:	bl	125c4 <memcpy@plt>
   2c68c:	ldrb	r0, [sp, #11]
   2c690:	tst	r0, #1
   2c694:	beq	2c6b4 <__assert_fail@plt+0x19afc>
   2c698:	ldr	r0, [sp, #4]
   2c69c:	ldr	r1, [sp, #12]
   2c6a0:	add	r2, r1, #1
   2c6a4:	str	r2, [sp, #12]
   2c6a8:	add	r0, r0, r1
   2c6ac:	movw	r1, #46	; 0x2e
   2c6b0:	strb	r1, [r0]
   2c6b4:	ldr	r0, [sp, #4]
   2c6b8:	ldr	r1, [sp, #12]
   2c6bc:	add	r0, r0, r1
   2c6c0:	movw	r1, #0
   2c6c4:	strb	r1, [r0]
   2c6c8:	ldr	r0, [sp, #4]
   2c6cc:	str	r0, [fp, #-4]
   2c6d0:	ldr	r0, [fp, #-4]
   2c6d4:	mov	sp, fp
   2c6d8:	pop	{fp, pc}
   2c6dc:	push	{fp, lr}
   2c6e0:	mov	fp, sp
   2c6e4:	sub	sp, sp, #24
   2c6e8:	str	r0, [fp, #-4]
   2c6ec:	ldr	r0, [fp, #-4]
   2c6f0:	bl	70c48 <__assert_fail@plt+0x5e090>
   2c6f4:	str	r0, [fp, #-8]
   2c6f8:	ldr	r0, [fp, #-8]
   2c6fc:	ldrsb	r0, [r0]
   2c700:	cmp	r0, #0
   2c704:	bne	2c710 <__assert_fail@plt+0x19b58>
   2c708:	ldr	r0, [fp, #-4]
   2c70c:	str	r0, [fp, #-8]
   2c710:	ldr	r0, [fp, #-8]
   2c714:	ldr	r1, [fp, #-8]
   2c718:	str	r0, [sp, #4]
   2c71c:	mov	r0, r1
   2c720:	bl	70cf4 <__assert_fail@plt+0x5e13c>
   2c724:	ldr	r1, [sp, #4]
   2c728:	add	r0, r1, r0
   2c72c:	str	r0, [sp, #12]
   2c730:	ldr	r0, [sp, #12]
   2c734:	ldrb	r0, [r0]
   2c738:	cmp	r0, #0
   2c73c:	movw	r0, #0
   2c740:	movne	r0, #1
   2c744:	and	r0, r0, #1
   2c748:	strb	r0, [sp, #11]
   2c74c:	ldr	r0, [sp, #12]
   2c750:	movw	r1, #0
   2c754:	strb	r1, [r0]
   2c758:	ldrb	r0, [sp, #11]
   2c75c:	and	r0, r0, #1
   2c760:	mov	sp, fp
   2c764:	pop	{fp, pc}
   2c768:	sub	sp, sp, #8
   2c76c:	push	{fp, lr}
   2c770:	mov	fp, sp
   2c774:	sub	sp, sp, #24
   2c778:	str	r3, [fp, #12]
   2c77c:	str	r2, [fp, #8]
   2c780:	str	r0, [fp, #-4]
   2c784:	str	r1, [fp, #-8]
   2c788:	movw	r0, #0
   2c78c:	str	r0, [sp, #12]
   2c790:	ldr	r0, [fp, #-8]
   2c794:	and	r0, r0, #64	; 0x40
   2c798:	cmp	r0, #0
   2c79c:	beq	2c7c8 <__assert_fail@plt+0x19c10>
   2c7a0:	add	r0, sp, #8
   2c7a4:	mov	r1, r0
   2c7a8:	add	r2, fp, #8
   2c7ac:	str	r2, [r1]
   2c7b0:	ldr	r1, [sp, #8]
   2c7b4:	add	r2, r1, #4
   2c7b8:	str	r2, [sp, #8]
   2c7bc:	ldr	r1, [r1]
   2c7c0:	str	r1, [sp, #12]
   2c7c4:	str	r0, [sp, #4]
   2c7c8:	ldr	r0, [fp, #-4]
   2c7cc:	ldr	r1, [fp, #-8]
   2c7d0:	ldr	r2, [sp, #12]
   2c7d4:	bl	127b0 <open64@plt>
   2c7d8:	bl	4ba08 <__assert_fail@plt+0x38e50>
   2c7dc:	mov	sp, fp
   2c7e0:	pop	{fp, lr}
   2c7e4:	add	sp, sp, #8
   2c7e8:	bx	lr
   2c7ec:	push	{fp, lr}
   2c7f0:	mov	fp, sp
   2c7f4:	sub	sp, sp, #24
   2c7f8:	str	r0, [fp, #-4]
   2c7fc:	str	r1, [fp, #-8]
   2c800:	ldr	r0, [fp, #-4]
   2c804:	bl	2ca58 <__assert_fail@plt+0x19ea0>
   2c808:	ldr	r1, [fp, #-8]
   2c80c:	strb	r0, [r1]
   2c810:	ldr	r0, [fp, #-4]
   2c814:	and	r0, r0, #256	; 0x100
   2c818:	cmp	r0, #0
   2c81c:	movw	r0, #0
   2c820:	movne	r0, #1
   2c824:	tst	r0, #1
   2c828:	movw	r0, #114	; 0x72
   2c82c:	moveq	r0, #45	; 0x2d
   2c830:	ldr	r1, [fp, #-8]
   2c834:	strb	r0, [r1, #1]
   2c838:	ldr	r0, [fp, #-4]
   2c83c:	and	r0, r0, #128	; 0x80
   2c840:	cmp	r0, #0
   2c844:	movw	r0, #0
   2c848:	movne	r0, #1
   2c84c:	tst	r0, #1
   2c850:	movw	r0, #119	; 0x77
   2c854:	moveq	r0, #45	; 0x2d
   2c858:	ldr	r1, [fp, #-8]
   2c85c:	strb	r0, [r1, #2]
   2c860:	ldr	r0, [fp, #-4]
   2c864:	and	r0, r0, #2048	; 0x800
   2c868:	cmp	r0, #0
   2c86c:	beq	2c898 <__assert_fail@plt+0x19ce0>
   2c870:	ldr	r0, [fp, #-4]
   2c874:	and	r0, r0, #64	; 0x40
   2c878:	cmp	r0, #0
   2c87c:	movw	r0, #0
   2c880:	movne	r0, #1
   2c884:	tst	r0, #1
   2c888:	movw	r0, #115	; 0x73
   2c88c:	moveq	r0, #83	; 0x53
   2c890:	str	r0, [sp, #12]
   2c894:	b	2c8bc <__assert_fail@plt+0x19d04>
   2c898:	ldr	r0, [fp, #-4]
   2c89c:	and	r0, r0, #64	; 0x40
   2c8a0:	cmp	r0, #0
   2c8a4:	movw	r0, #0
   2c8a8:	movne	r0, #1
   2c8ac:	tst	r0, #1
   2c8b0:	movw	r0, #120	; 0x78
   2c8b4:	moveq	r0, #45	; 0x2d
   2c8b8:	str	r0, [sp, #12]
   2c8bc:	ldr	r0, [sp, #12]
   2c8c0:	ldr	r1, [fp, #-8]
   2c8c4:	strb	r0, [r1, #3]
   2c8c8:	ldr	r0, [fp, #-4]
   2c8cc:	and	r0, r0, #32
   2c8d0:	cmp	r0, #0
   2c8d4:	movw	r0, #0
   2c8d8:	movne	r0, #1
   2c8dc:	tst	r0, #1
   2c8e0:	movw	r0, #114	; 0x72
   2c8e4:	moveq	r0, #45	; 0x2d
   2c8e8:	ldr	r1, [fp, #-8]
   2c8ec:	strb	r0, [r1, #4]
   2c8f0:	ldr	r0, [fp, #-4]
   2c8f4:	and	r0, r0, #16
   2c8f8:	cmp	r0, #0
   2c8fc:	movw	r0, #0
   2c900:	movne	r0, #1
   2c904:	tst	r0, #1
   2c908:	movw	r0, #119	; 0x77
   2c90c:	moveq	r0, #45	; 0x2d
   2c910:	ldr	r1, [fp, #-8]
   2c914:	strb	r0, [r1, #5]
   2c918:	ldr	r0, [fp, #-4]
   2c91c:	and	r0, r0, #1024	; 0x400
   2c920:	cmp	r0, #0
   2c924:	beq	2c950 <__assert_fail@plt+0x19d98>
   2c928:	ldr	r0, [fp, #-4]
   2c92c:	and	r0, r0, #8
   2c930:	cmp	r0, #0
   2c934:	movw	r0, #0
   2c938:	movne	r0, #1
   2c93c:	tst	r0, #1
   2c940:	movw	r0, #115	; 0x73
   2c944:	moveq	r0, #83	; 0x53
   2c948:	str	r0, [sp, #8]
   2c94c:	b	2c974 <__assert_fail@plt+0x19dbc>
   2c950:	ldr	r0, [fp, #-4]
   2c954:	and	r0, r0, #8
   2c958:	cmp	r0, #0
   2c95c:	movw	r0, #0
   2c960:	movne	r0, #1
   2c964:	tst	r0, #1
   2c968:	movw	r0, #120	; 0x78
   2c96c:	moveq	r0, #45	; 0x2d
   2c970:	str	r0, [sp, #8]
   2c974:	ldr	r0, [sp, #8]
   2c978:	ldr	r1, [fp, #-8]
   2c97c:	strb	r0, [r1, #6]
   2c980:	ldr	r0, [fp, #-4]
   2c984:	and	r0, r0, #4
   2c988:	cmp	r0, #0
   2c98c:	movw	r0, #0
   2c990:	movne	r0, #1
   2c994:	tst	r0, #1
   2c998:	movw	r0, #114	; 0x72
   2c99c:	moveq	r0, #45	; 0x2d
   2c9a0:	ldr	r1, [fp, #-8]
   2c9a4:	strb	r0, [r1, #7]
   2c9a8:	ldr	r0, [fp, #-4]
   2c9ac:	and	r0, r0, #2
   2c9b0:	cmp	r0, #0
   2c9b4:	movw	r0, #0
   2c9b8:	movne	r0, #1
   2c9bc:	tst	r0, #1
   2c9c0:	movw	r0, #119	; 0x77
   2c9c4:	moveq	r0, #45	; 0x2d
   2c9c8:	ldr	r1, [fp, #-8]
   2c9cc:	strb	r0, [r1, #8]
   2c9d0:	ldr	r0, [fp, #-4]
   2c9d4:	and	r0, r0, #512	; 0x200
   2c9d8:	cmp	r0, #0
   2c9dc:	beq	2ca08 <__assert_fail@plt+0x19e50>
   2c9e0:	ldr	r0, [fp, #-4]
   2c9e4:	and	r0, r0, #1
   2c9e8:	cmp	r0, #0
   2c9ec:	movw	r0, #0
   2c9f0:	movne	r0, #1
   2c9f4:	tst	r0, #1
   2c9f8:	movw	r0, #116	; 0x74
   2c9fc:	moveq	r0, #84	; 0x54
   2ca00:	str	r0, [sp, #4]
   2ca04:	b	2ca2c <__assert_fail@plt+0x19e74>
   2ca08:	ldr	r0, [fp, #-4]
   2ca0c:	and	r0, r0, #1
   2ca10:	cmp	r0, #0
   2ca14:	movw	r0, #0
   2ca18:	movne	r0, #1
   2ca1c:	tst	r0, #1
   2ca20:	movw	r0, #120	; 0x78
   2ca24:	moveq	r0, #45	; 0x2d
   2ca28:	str	r0, [sp, #4]
   2ca2c:	ldr	r0, [sp, #4]
   2ca30:	ldr	r1, [fp, #-8]
   2ca34:	strb	r0, [r1, #9]
   2ca38:	ldr	r0, [fp, #-8]
   2ca3c:	movw	r1, #32
   2ca40:	strb	r1, [r0, #10]
   2ca44:	ldr	r0, [fp, #-8]
   2ca48:	movw	r1, #0
   2ca4c:	strb	r1, [r0, #11]
   2ca50:	mov	sp, fp
   2ca54:	pop	{fp, pc}
   2ca58:	sub	sp, sp, #8
   2ca5c:	str	r0, [sp]
   2ca60:	ldr	r0, [sp]
   2ca64:	and	r0, r0, #61440	; 0xf000
   2ca68:	cmp	r0, #32768	; 0x8000
   2ca6c:	bne	2ca7c <__assert_fail@plt+0x19ec4>
   2ca70:	movw	r0, #45	; 0x2d
   2ca74:	strb	r0, [sp, #7]
   2ca78:	b	2cb2c <__assert_fail@plt+0x19f74>
   2ca7c:	ldr	r0, [sp]
   2ca80:	and	r0, r0, #61440	; 0xf000
   2ca84:	cmp	r0, #16384	; 0x4000
   2ca88:	bne	2ca98 <__assert_fail@plt+0x19ee0>
   2ca8c:	movw	r0, #100	; 0x64
   2ca90:	strb	r0, [sp, #7]
   2ca94:	b	2cb2c <__assert_fail@plt+0x19f74>
   2ca98:	ldr	r0, [sp]
   2ca9c:	and	r0, r0, #61440	; 0xf000
   2caa0:	cmp	r0, #24576	; 0x6000
   2caa4:	bne	2cab4 <__assert_fail@plt+0x19efc>
   2caa8:	movw	r0, #98	; 0x62
   2caac:	strb	r0, [sp, #7]
   2cab0:	b	2cb2c <__assert_fail@plt+0x19f74>
   2cab4:	ldr	r0, [sp]
   2cab8:	and	r0, r0, #61440	; 0xf000
   2cabc:	cmp	r0, #8192	; 0x2000
   2cac0:	bne	2cad0 <__assert_fail@plt+0x19f18>
   2cac4:	movw	r0, #99	; 0x63
   2cac8:	strb	r0, [sp, #7]
   2cacc:	b	2cb2c <__assert_fail@plt+0x19f74>
   2cad0:	ldr	r0, [sp]
   2cad4:	and	r0, r0, #61440	; 0xf000
   2cad8:	cmp	r0, #40960	; 0xa000
   2cadc:	bne	2caec <__assert_fail@plt+0x19f34>
   2cae0:	movw	r0, #108	; 0x6c
   2cae4:	strb	r0, [sp, #7]
   2cae8:	b	2cb2c <__assert_fail@plt+0x19f74>
   2caec:	ldr	r0, [sp]
   2caf0:	and	r0, r0, #61440	; 0xf000
   2caf4:	cmp	r0, #4096	; 0x1000
   2caf8:	bne	2cb08 <__assert_fail@plt+0x19f50>
   2cafc:	movw	r0, #112	; 0x70
   2cb00:	strb	r0, [sp, #7]
   2cb04:	b	2cb2c <__assert_fail@plt+0x19f74>
   2cb08:	ldr	r0, [sp]
   2cb0c:	and	r0, r0, #61440	; 0xf000
   2cb10:	cmp	r0, #49152	; 0xc000
   2cb14:	bne	2cb24 <__assert_fail@plt+0x19f6c>
   2cb18:	movw	r0, #115	; 0x73
   2cb1c:	strb	r0, [sp, #7]
   2cb20:	b	2cb2c <__assert_fail@plt+0x19f74>
   2cb24:	movw	r0, #63	; 0x3f
   2cb28:	strb	r0, [sp, #7]
   2cb2c:	ldrb	r0, [sp, #7]
   2cb30:	add	sp, sp, #8
   2cb34:	bx	lr
   2cb38:	push	{fp, lr}
   2cb3c:	mov	fp, sp
   2cb40:	sub	sp, sp, #8
   2cb44:	str	r0, [sp, #4]
   2cb48:	str	r1, [sp]
   2cb4c:	ldr	r0, [sp, #4]
   2cb50:	ldr	r0, [r0, #16]
   2cb54:	ldr	r1, [sp]
   2cb58:	bl	2c7ec <__assert_fail@plt+0x19c34>
   2cb5c:	ldr	r0, [sp, #4]
   2cb60:	ldr	r0, [r0, #16]
   2cb64:	ldr	r1, [sp, #4]
   2cb68:	ldr	r1, [r1, #16]
   2cb6c:	sub	r0, r0, r1
   2cb70:	cmp	r0, #0
   2cb74:	beq	2cb88 <__assert_fail@plt+0x19fd0>
   2cb78:	ldr	r0, [sp]
   2cb7c:	movw	r1, #70	; 0x46
   2cb80:	strb	r1, [r0]
   2cb84:	b	2cbec <__assert_fail@plt+0x1a034>
   2cb88:	ldr	r0, [sp, #4]
   2cb8c:	ldr	r0, [r0, #16]
   2cb90:	ldr	r1, [sp, #4]
   2cb94:	ldr	r1, [r1, #16]
   2cb98:	sub	r0, r0, r1
   2cb9c:	cmp	r0, #0
   2cba0:	beq	2cbb4 <__assert_fail@plt+0x19ffc>
   2cba4:	ldr	r0, [sp]
   2cba8:	movw	r1, #81	; 0x51
   2cbac:	strb	r1, [r0]
   2cbb0:	b	2cbe8 <__assert_fail@plt+0x1a030>
   2cbb4:	ldr	r0, [sp, #4]
   2cbb8:	ldr	r0, [r0, #16]
   2cbbc:	ldr	r1, [sp, #4]
   2cbc0:	ldr	r1, [r1, #16]
   2cbc4:	sub	r0, r0, r1
   2cbc8:	cmp	r0, #0
   2cbcc:	beq	2cbe0 <__assert_fail@plt+0x1a028>
   2cbd0:	ldr	r0, [sp]
   2cbd4:	movw	r1, #83	; 0x53
   2cbd8:	strb	r1, [r0]
   2cbdc:	b	2cbe4 <__assert_fail@plt+0x1a02c>
   2cbe0:	b	2cbe4 <__assert_fail@plt+0x1a02c>
   2cbe4:	b	2cbe8 <__assert_fail@plt+0x1a030>
   2cbe8:	b	2cbec <__assert_fail@plt+0x1a034>
   2cbec:	mov	sp, fp
   2cbf0:	pop	{fp, pc}
   2cbf4:	push	{fp, lr}
   2cbf8:	mov	fp, sp
   2cbfc:	sub	sp, sp, #48	; 0x30
   2cc00:	str	r0, [fp, #-8]
   2cc04:	str	r1, [fp, #-12]
   2cc08:	ldr	r0, [fp, #-8]
   2cc0c:	ldr	r1, [fp, #-12]
   2cc10:	bl	12ab0 <fopen64@plt>
   2cc14:	str	r0, [fp, #-16]
   2cc18:	ldr	r0, [fp, #-16]
   2cc1c:	movw	r1, #0
   2cc20:	cmp	r0, r1
   2cc24:	beq	2cd0c <__assert_fail@plt+0x1a154>
   2cc28:	ldr	r0, [fp, #-16]
   2cc2c:	bl	12948 <fileno@plt>
   2cc30:	str	r0, [fp, #-20]	; 0xffffffec
   2cc34:	ldr	r0, [fp, #-20]	; 0xffffffec
   2cc38:	movw	lr, #0
   2cc3c:	cmp	lr, r0
   2cc40:	bgt	2cd08 <__assert_fail@plt+0x1a150>
   2cc44:	ldr	r0, [fp, #-20]	; 0xffffffec
   2cc48:	cmp	r0, #2
   2cc4c:	bgt	2cd08 <__assert_fail@plt+0x1a150>
   2cc50:	ldr	r0, [fp, #-20]	; 0xffffffec
   2cc54:	bl	4b9e0 <__assert_fail@plt+0x38e28>
   2cc58:	str	r0, [sp, #24]
   2cc5c:	ldr	r0, [sp, #24]
   2cc60:	cmp	r0, #0
   2cc64:	bge	2cca0 <__assert_fail@plt+0x1a0e8>
   2cc68:	bl	128d0 <__errno_location@plt>
   2cc6c:	ldr	r0, [r0]
   2cc70:	str	r0, [sp, #20]
   2cc74:	ldr	r0, [fp, #-16]
   2cc78:	bl	12990 <fclose@plt>
   2cc7c:	ldr	lr, [sp, #20]
   2cc80:	str	r0, [sp, #12]
   2cc84:	str	lr, [sp, #8]
   2cc88:	bl	128d0 <__errno_location@plt>
   2cc8c:	ldr	lr, [sp, #8]
   2cc90:	str	lr, [r0]
   2cc94:	movw	r0, #0
   2cc98:	str	r0, [fp, #-4]
   2cc9c:	b	2cd14 <__assert_fail@plt+0x1a15c>
   2cca0:	ldr	r0, [fp, #-16]
   2cca4:	bl	12990 <fclose@plt>
   2cca8:	cmp	r0, #0
   2ccac:	bne	2cccc <__assert_fail@plt+0x1a114>
   2ccb0:	ldr	r0, [sp, #24]
   2ccb4:	ldr	r1, [fp, #-12]
   2ccb8:	bl	12438 <fdopen@plt>
   2ccbc:	str	r0, [fp, #-16]
   2ccc0:	movw	r1, #0
   2ccc4:	cmp	r0, r1
   2ccc8:	bne	2cd04 <__assert_fail@plt+0x1a14c>
   2cccc:	bl	128d0 <__errno_location@plt>
   2ccd0:	ldr	r0, [r0]
   2ccd4:	str	r0, [sp, #16]
   2ccd8:	ldr	r0, [sp, #24]
   2ccdc:	bl	12b70 <close@plt>
   2cce0:	ldr	lr, [sp, #16]
   2cce4:	str	r0, [sp, #4]
   2cce8:	str	lr, [sp]
   2ccec:	bl	128d0 <__errno_location@plt>
   2ccf0:	ldr	lr, [sp]
   2ccf4:	str	lr, [r0]
   2ccf8:	movw	r0, #0
   2ccfc:	str	r0, [fp, #-4]
   2cd00:	b	2cd14 <__assert_fail@plt+0x1a15c>
   2cd04:	b	2cd08 <__assert_fail@plt+0x1a150>
   2cd08:	b	2cd0c <__assert_fail@plt+0x1a154>
   2cd0c:	ldr	r0, [fp, #-16]
   2cd10:	str	r0, [fp, #-4]
   2cd14:	ldr	r0, [fp, #-4]
   2cd18:	mov	sp, fp
   2cd1c:	pop	{fp, pc}
   2cd20:	sub	sp, sp, #4
   2cd24:	str	r0, [sp]
   2cd28:	ldr	r0, [sp]
   2cd2c:	ldr	r0, [r0, #8]
   2cd30:	add	sp, sp, #4
   2cd34:	bx	lr
   2cd38:	sub	sp, sp, #4
   2cd3c:	str	r0, [sp]
   2cd40:	ldr	r0, [sp]
   2cd44:	ldr	r0, [r0, #12]
   2cd48:	add	sp, sp, #4
   2cd4c:	bx	lr
   2cd50:	sub	sp, sp, #4
   2cd54:	str	r0, [sp]
   2cd58:	ldr	r0, [sp]
   2cd5c:	ldr	r0, [r0, #16]
   2cd60:	add	sp, sp, #4
   2cd64:	bx	lr
   2cd68:	sub	sp, sp, #20
   2cd6c:	str	r0, [sp, #16]
   2cd70:	movw	r0, #0
   2cd74:	str	r0, [sp, #8]
   2cd78:	ldr	r0, [sp, #16]
   2cd7c:	ldr	r0, [r0]
   2cd80:	str	r0, [sp, #12]
   2cd84:	ldr	r0, [sp, #12]
   2cd88:	ldr	r1, [sp, #16]
   2cd8c:	ldr	r1, [r1, #4]
   2cd90:	cmp	r0, r1
   2cd94:	bcs	2ce18 <__assert_fail@plt+0x1a260>
   2cd98:	ldr	r0, [sp, #12]
   2cd9c:	ldr	r0, [r0]
   2cda0:	movw	r1, #0
   2cda4:	cmp	r0, r1
   2cda8:	beq	2ce04 <__assert_fail@plt+0x1a24c>
   2cdac:	ldr	r0, [sp, #12]
   2cdb0:	str	r0, [sp, #4]
   2cdb4:	movw	r0, #1
   2cdb8:	str	r0, [sp]
   2cdbc:	ldr	r0, [sp, #4]
   2cdc0:	ldr	r0, [r0, #4]
   2cdc4:	str	r0, [sp, #4]
   2cdc8:	ldr	r0, [sp, #4]
   2cdcc:	movw	r1, #0
   2cdd0:	cmp	r0, r1
   2cdd4:	beq	2cde8 <__assert_fail@plt+0x1a230>
   2cdd8:	ldr	r0, [sp]
   2cddc:	add	r0, r0, #1
   2cde0:	str	r0, [sp]
   2cde4:	b	2cdbc <__assert_fail@plt+0x1a204>
   2cde8:	ldr	r0, [sp]
   2cdec:	ldr	r1, [sp, #8]
   2cdf0:	cmp	r0, r1
   2cdf4:	bls	2ce00 <__assert_fail@plt+0x1a248>
   2cdf8:	ldr	r0, [sp]
   2cdfc:	str	r0, [sp, #8]
   2ce00:	b	2ce04 <__assert_fail@plt+0x1a24c>
   2ce04:	b	2ce08 <__assert_fail@plt+0x1a250>
   2ce08:	ldr	r0, [sp, #12]
   2ce0c:	add	r0, r0, #8
   2ce10:	str	r0, [sp, #12]
   2ce14:	b	2cd84 <__assert_fail@plt+0x1a1cc>
   2ce18:	ldr	r0, [sp, #8]
   2ce1c:	add	sp, sp, #20
   2ce20:	bx	lr
   2ce24:	sub	sp, sp, #24
   2ce28:	str	r0, [sp, #16]
   2ce2c:	movw	r0, #0
   2ce30:	str	r0, [sp, #8]
   2ce34:	str	r0, [sp, #4]
   2ce38:	ldr	r0, [sp, #16]
   2ce3c:	ldr	r0, [r0]
   2ce40:	str	r0, [sp, #12]
   2ce44:	ldr	r0, [sp, #12]
   2ce48:	ldr	r1, [sp, #16]
   2ce4c:	ldr	r1, [r1, #4]
   2ce50:	cmp	r0, r1
   2ce54:	bcs	2ced0 <__assert_fail@plt+0x1a318>
   2ce58:	ldr	r0, [sp, #12]
   2ce5c:	ldr	r0, [r0]
   2ce60:	movw	r1, #0
   2ce64:	cmp	r0, r1
   2ce68:	beq	2cebc <__assert_fail@plt+0x1a304>
   2ce6c:	ldr	r0, [sp, #12]
   2ce70:	str	r0, [sp]
   2ce74:	ldr	r0, [sp, #8]
   2ce78:	add	r0, r0, #1
   2ce7c:	str	r0, [sp, #8]
   2ce80:	ldr	r0, [sp, #4]
   2ce84:	add	r0, r0, #1
   2ce88:	str	r0, [sp, #4]
   2ce8c:	ldr	r0, [sp]
   2ce90:	ldr	r0, [r0, #4]
   2ce94:	str	r0, [sp]
   2ce98:	ldr	r0, [sp]
   2ce9c:	movw	r1, #0
   2cea0:	cmp	r0, r1
   2cea4:	beq	2ceb8 <__assert_fail@plt+0x1a300>
   2cea8:	ldr	r0, [sp, #4]
   2ceac:	add	r0, r0, #1
   2ceb0:	str	r0, [sp, #4]
   2ceb4:	b	2ce8c <__assert_fail@plt+0x1a2d4>
   2ceb8:	b	2cebc <__assert_fail@plt+0x1a304>
   2cebc:	b	2cec0 <__assert_fail@plt+0x1a308>
   2cec0:	ldr	r0, [sp, #12]
   2cec4:	add	r0, r0, #8
   2cec8:	str	r0, [sp, #12]
   2cecc:	b	2ce44 <__assert_fail@plt+0x1a28c>
   2ced0:	ldr	r0, [sp, #8]
   2ced4:	ldr	r1, [sp, #16]
   2ced8:	ldr	r1, [r1, #12]
   2cedc:	cmp	r0, r1
   2cee0:	bne	2cf08 <__assert_fail@plt+0x1a350>
   2cee4:	ldr	r0, [sp, #4]
   2cee8:	ldr	r1, [sp, #16]
   2ceec:	ldr	r1, [r1, #16]
   2cef0:	cmp	r0, r1
   2cef4:	bne	2cf08 <__assert_fail@plt+0x1a350>
   2cef8:	movw	r0, #1
   2cefc:	and	r0, r0, #1
   2cf00:	strb	r0, [sp, #23]
   2cf04:	b	2cf14 <__assert_fail@plt+0x1a35c>
   2cf08:	movw	r0, #0
   2cf0c:	and	r0, r0, #1
   2cf10:	strb	r0, [sp, #23]
   2cf14:	ldrb	r0, [sp, #23]
   2cf18:	and	r0, r0, #1
   2cf1c:	add	sp, sp, #24
   2cf20:	bx	lr
   2cf24:	nop	{0}
   2cf28:	push	{fp, lr}
   2cf2c:	mov	fp, sp
   2cf30:	sub	sp, sp, #48	; 0x30
   2cf34:	str	r0, [fp, #-4]
   2cf38:	str	r1, [fp, #-8]
   2cf3c:	ldr	r0, [fp, #-4]
   2cf40:	bl	2cd50 <__assert_fail@plt+0x1a198>
   2cf44:	str	r0, [fp, #-12]
   2cf48:	ldr	r0, [fp, #-4]
   2cf4c:	bl	2cd20 <__assert_fail@plt+0x1a168>
   2cf50:	str	r0, [fp, #-16]
   2cf54:	ldr	r0, [fp, #-4]
   2cf58:	bl	2cd38 <__assert_fail@plt+0x1a180>
   2cf5c:	str	r0, [fp, #-20]	; 0xffffffec
   2cf60:	ldr	r0, [fp, #-4]
   2cf64:	bl	2cd68 <__assert_fail@plt+0x1a1b0>
   2cf68:	str	r0, [sp, #24]
   2cf6c:	ldr	r0, [fp, #-8]
   2cf70:	ldr	r2, [fp, #-12]
   2cf74:	movw	r1, #50141	; 0xc3dd
   2cf78:	movt	r1, #7
   2cf7c:	bl	128c4 <fprintf@plt>
   2cf80:	ldr	r1, [fp, #-8]
   2cf84:	ldr	r2, [fp, #-16]
   2cf88:	str	r0, [sp, #20]
   2cf8c:	mov	r0, r1
   2cf90:	movw	r1, #50165	; 0xc3f5
   2cf94:	movt	r1, #7
   2cf98:	bl	128c4 <fprintf@plt>
   2cf9c:	vldr	d16, [pc, #100]	; 2d008 <__assert_fail@plt+0x1a450>
   2cfa0:	ldr	r1, [fp, #-8]
   2cfa4:	ldr	r2, [fp, #-20]	; 0xffffffec
   2cfa8:	ldr	lr, [fp, #-20]	; 0xffffffec
   2cfac:	vmov	s0, lr
   2cfb0:	vcvt.f64.u32	d17, s0
   2cfb4:	vmul.f64	d16, d16, d17
   2cfb8:	ldr	lr, [fp, #-16]
   2cfbc:	vmov	s0, lr
   2cfc0:	vcvt.f64.u32	d17, s0
   2cfc4:	vdiv.f64	d16, d16, d17
   2cfc8:	str	r0, [sp, #16]
   2cfcc:	mov	r0, r1
   2cfd0:	movw	r1, #50189	; 0xc40d
   2cfd4:	movt	r1, #7
   2cfd8:	vstr	d16, [sp]
   2cfdc:	bl	128c4 <fprintf@plt>
   2cfe0:	ldr	r1, [fp, #-8]
   2cfe4:	ldr	r2, [sp, #24]
   2cfe8:	str	r0, [sp, #12]
   2cfec:	mov	r0, r1
   2cff0:	movw	r1, #50222	; 0xc42e
   2cff4:	movt	r1, #7
   2cff8:	bl	128c4 <fprintf@plt>
   2cffc:	str	r0, [sp, #8]
   2d000:	mov	sp, fp
   2d004:	pop	{fp, pc}
   2d008:	andeq	r0, r0, r0
   2d00c:	subsmi	r0, r9, r0
   2d010:	push	{fp, lr}
   2d014:	mov	fp, sp
   2d018:	sub	sp, sp, #24
   2d01c:	str	r0, [fp, #-8]
   2d020:	str	r1, [sp, #12]
   2d024:	ldr	r0, [fp, #-8]
   2d028:	ldr	r1, [sp, #12]
   2d02c:	bl	2d0e8 <__assert_fail@plt+0x1a530>
   2d030:	str	r0, [sp, #8]
   2d034:	ldr	r0, [sp, #8]
   2d038:	ldr	r0, [r0]
   2d03c:	movw	r1, #0
   2d040:	cmp	r0, r1
   2d044:	bne	2d054 <__assert_fail@plt+0x1a49c>
   2d048:	movw	r0, #0
   2d04c:	str	r0, [fp, #-4]
   2d050:	b	2d0dc <__assert_fail@plt+0x1a524>
   2d054:	ldr	r0, [sp, #8]
   2d058:	str	r0, [sp, #4]
   2d05c:	ldr	r0, [sp, #4]
   2d060:	movw	r1, #0
   2d064:	cmp	r0, r1
   2d068:	beq	2d0d4 <__assert_fail@plt+0x1a51c>
   2d06c:	ldr	r0, [sp, #12]
   2d070:	ldr	r1, [sp, #4]
   2d074:	ldr	r1, [r1]
   2d078:	cmp	r0, r1
   2d07c:	beq	2d0b0 <__assert_fail@plt+0x1a4f8>
   2d080:	ldr	r0, [fp, #-8]
   2d084:	ldr	r0, [r0, #28]
   2d088:	ldr	r1, [sp, #12]
   2d08c:	ldr	r2, [sp, #4]
   2d090:	ldr	r2, [r2]
   2d094:	str	r0, [sp]
   2d098:	mov	r0, r1
   2d09c:	mov	r1, r2
   2d0a0:	ldr	r2, [sp]
   2d0a4:	blx	r2
   2d0a8:	tst	r0, #1
   2d0ac:	beq	2d0c0 <__assert_fail@plt+0x1a508>
   2d0b0:	ldr	r0, [sp, #4]
   2d0b4:	ldr	r0, [r0]
   2d0b8:	str	r0, [fp, #-4]
   2d0bc:	b	2d0dc <__assert_fail@plt+0x1a524>
   2d0c0:	b	2d0c4 <__assert_fail@plt+0x1a50c>
   2d0c4:	ldr	r0, [sp, #4]
   2d0c8:	ldr	r0, [r0, #4]
   2d0cc:	str	r0, [sp, #4]
   2d0d0:	b	2d05c <__assert_fail@plt+0x1a4a4>
   2d0d4:	movw	r0, #0
   2d0d8:	str	r0, [fp, #-4]
   2d0dc:	ldr	r0, [fp, #-4]
   2d0e0:	mov	sp, fp
   2d0e4:	pop	{fp, pc}
   2d0e8:	push	{fp, lr}
   2d0ec:	mov	fp, sp
   2d0f0:	sub	sp, sp, #16
   2d0f4:	str	r0, [fp, #-4]
   2d0f8:	str	r1, [sp, #8]
   2d0fc:	ldr	r0, [fp, #-4]
   2d100:	ldr	r0, [r0, #24]
   2d104:	ldr	r1, [sp, #8]
   2d108:	ldr	r2, [fp, #-4]
   2d10c:	ldr	r2, [r2, #8]
   2d110:	str	r0, [sp]
   2d114:	mov	r0, r1
   2d118:	mov	r1, r2
   2d11c:	ldr	r2, [sp]
   2d120:	blx	r2
   2d124:	str	r0, [sp, #4]
   2d128:	ldr	r0, [sp, #4]
   2d12c:	ldr	r1, [fp, #-4]
   2d130:	ldr	r1, [r1, #8]
   2d134:	cmp	r0, r1
   2d138:	bcc	2d140 <__assert_fail@plt+0x1a588>
   2d13c:	bl	12b64 <abort@plt>
   2d140:	ldr	r0, [fp, #-4]
   2d144:	ldr	r0, [r0]
   2d148:	ldr	r1, [sp, #4]
   2d14c:	add	r0, r0, r1, lsl #3
   2d150:	mov	sp, fp
   2d154:	pop	{fp, pc}
   2d158:	push	{fp, lr}
   2d15c:	mov	fp, sp
   2d160:	sub	sp, sp, #16
   2d164:	str	r0, [sp, #8]
   2d168:	ldr	r0, [sp, #8]
   2d16c:	ldr	r0, [r0, #16]
   2d170:	cmp	r0, #0
   2d174:	bne	2d184 <__assert_fail@plt+0x1a5cc>
   2d178:	movw	r0, #0
   2d17c:	str	r0, [fp, #-4]
   2d180:	b	2d1e4 <__assert_fail@plt+0x1a62c>
   2d184:	ldr	r0, [sp, #8]
   2d188:	ldr	r0, [r0]
   2d18c:	str	r0, [sp, #4]
   2d190:	ldr	r0, [sp, #4]
   2d194:	ldr	r1, [sp, #8]
   2d198:	ldr	r1, [r1, #4]
   2d19c:	cmp	r0, r1
   2d1a0:	bcc	2d1a8 <__assert_fail@plt+0x1a5f0>
   2d1a4:	bl	12b64 <abort@plt>
   2d1a8:	ldr	r0, [sp, #4]
   2d1ac:	ldr	r0, [r0]
   2d1b0:	movw	r1, #0
   2d1b4:	cmp	r0, r1
   2d1b8:	beq	2d1cc <__assert_fail@plt+0x1a614>
   2d1bc:	ldr	r0, [sp, #4]
   2d1c0:	ldr	r0, [r0]
   2d1c4:	str	r0, [fp, #-4]
   2d1c8:	b	2d1e4 <__assert_fail@plt+0x1a62c>
   2d1cc:	b	2d1d0 <__assert_fail@plt+0x1a618>
   2d1d0:	b	2d1d4 <__assert_fail@plt+0x1a61c>
   2d1d4:	ldr	r0, [sp, #4]
   2d1d8:	add	r0, r0, #8
   2d1dc:	str	r0, [sp, #4]
   2d1e0:	b	2d190 <__assert_fail@plt+0x1a5d8>
   2d1e4:	ldr	r0, [fp, #-4]
   2d1e8:	mov	sp, fp
   2d1ec:	pop	{fp, pc}
   2d1f0:	push	{fp, lr}
   2d1f4:	mov	fp, sp
   2d1f8:	sub	sp, sp, #24
   2d1fc:	str	r0, [fp, #-8]
   2d200:	str	r1, [sp, #12]
   2d204:	ldr	r0, [fp, #-8]
   2d208:	ldr	r1, [sp, #12]
   2d20c:	bl	2d0e8 <__assert_fail@plt+0x1a530>
   2d210:	str	r0, [sp, #8]
   2d214:	ldr	r0, [sp, #8]
   2d218:	str	r0, [sp, #4]
   2d21c:	ldr	r0, [sp, #4]
   2d220:	ldr	r0, [r0]
   2d224:	ldr	r1, [sp, #12]
   2d228:	cmp	r0, r1
   2d22c:	bne	2d258 <__assert_fail@plt+0x1a6a0>
   2d230:	ldr	r0, [sp, #4]
   2d234:	ldr	r0, [r0, #4]
   2d238:	movw	r1, #0
   2d23c:	cmp	r0, r1
   2d240:	beq	2d258 <__assert_fail@plt+0x1a6a0>
   2d244:	ldr	r0, [sp, #4]
   2d248:	ldr	r0, [r0, #4]
   2d24c:	ldr	r0, [r0]
   2d250:	str	r0, [fp, #-4]
   2d254:	b	2d2c4 <__assert_fail@plt+0x1a70c>
   2d258:	ldr	r0, [sp, #4]
   2d25c:	ldr	r0, [r0, #4]
   2d260:	str	r0, [sp, #4]
   2d264:	ldr	r0, [sp, #4]
   2d268:	movw	r1, #0
   2d26c:	cmp	r0, r1
   2d270:	bne	2d21c <__assert_fail@plt+0x1a664>
   2d274:	b	2d278 <__assert_fail@plt+0x1a6c0>
   2d278:	ldr	r0, [sp, #8]
   2d27c:	add	r0, r0, #8
   2d280:	str	r0, [sp, #8]
   2d284:	ldr	r1, [fp, #-8]
   2d288:	ldr	r1, [r1, #4]
   2d28c:	cmp	r0, r1
   2d290:	bcs	2d2bc <__assert_fail@plt+0x1a704>
   2d294:	ldr	r0, [sp, #8]
   2d298:	ldr	r0, [r0]
   2d29c:	movw	r1, #0
   2d2a0:	cmp	r0, r1
   2d2a4:	beq	2d2b8 <__assert_fail@plt+0x1a700>
   2d2a8:	ldr	r0, [sp, #8]
   2d2ac:	ldr	r0, [r0]
   2d2b0:	str	r0, [fp, #-4]
   2d2b4:	b	2d2c4 <__assert_fail@plt+0x1a70c>
   2d2b8:	b	2d278 <__assert_fail@plt+0x1a6c0>
   2d2bc:	movw	r0, #0
   2d2c0:	str	r0, [fp, #-4]
   2d2c4:	ldr	r0, [fp, #-4]
   2d2c8:	mov	sp, fp
   2d2cc:	pop	{fp, pc}
   2d2d0:	sub	sp, sp, #28
   2d2d4:	str	r0, [sp, #20]
   2d2d8:	str	r1, [sp, #16]
   2d2dc:	str	r2, [sp, #12]
   2d2e0:	movw	r0, #0
   2d2e4:	str	r0, [sp, #8]
   2d2e8:	ldr	r0, [sp, #20]
   2d2ec:	ldr	r0, [r0]
   2d2f0:	str	r0, [sp, #4]
   2d2f4:	ldr	r0, [sp, #4]
   2d2f8:	ldr	r1, [sp, #20]
   2d2fc:	ldr	r1, [r1, #4]
   2d300:	cmp	r0, r1
   2d304:	bcs	2d398 <__assert_fail@plt+0x1a7e0>
   2d308:	ldr	r0, [sp, #4]
   2d30c:	ldr	r0, [r0]
   2d310:	movw	r1, #0
   2d314:	cmp	r0, r1
   2d318:	beq	2d384 <__assert_fail@plt+0x1a7cc>
   2d31c:	ldr	r0, [sp, #4]
   2d320:	str	r0, [sp]
   2d324:	ldr	r0, [sp]
   2d328:	movw	r1, #0
   2d32c:	cmp	r0, r1
   2d330:	beq	2d380 <__assert_fail@plt+0x1a7c8>
   2d334:	ldr	r0, [sp, #8]
   2d338:	ldr	r1, [sp, #12]
   2d33c:	cmp	r0, r1
   2d340:	bcc	2d350 <__assert_fail@plt+0x1a798>
   2d344:	ldr	r0, [sp, #8]
   2d348:	str	r0, [sp, #24]
   2d34c:	b	2d3a0 <__assert_fail@plt+0x1a7e8>
   2d350:	ldr	r0, [sp]
   2d354:	ldr	r0, [r0]
   2d358:	ldr	r1, [sp, #16]
   2d35c:	ldr	r2, [sp, #8]
   2d360:	add	r3, r2, #1
   2d364:	str	r3, [sp, #8]
   2d368:	add	r1, r1, r2, lsl #2
   2d36c:	str	r0, [r1]
   2d370:	ldr	r0, [sp]
   2d374:	ldr	r0, [r0, #4]
   2d378:	str	r0, [sp]
   2d37c:	b	2d324 <__assert_fail@plt+0x1a76c>
   2d380:	b	2d384 <__assert_fail@plt+0x1a7cc>
   2d384:	b	2d388 <__assert_fail@plt+0x1a7d0>
   2d388:	ldr	r0, [sp, #4]
   2d38c:	add	r0, r0, #8
   2d390:	str	r0, [sp, #4]
   2d394:	b	2d2f4 <__assert_fail@plt+0x1a73c>
   2d398:	ldr	r0, [sp, #8]
   2d39c:	str	r0, [sp, #24]
   2d3a0:	ldr	r0, [sp, #24]
   2d3a4:	add	sp, sp, #28
   2d3a8:	bx	lr
   2d3ac:	push	{fp, lr}
   2d3b0:	mov	fp, sp
   2d3b4:	sub	sp, sp, #32
   2d3b8:	str	r0, [fp, #-8]
   2d3bc:	str	r1, [fp, #-12]
   2d3c0:	str	r2, [sp, #16]
   2d3c4:	movw	r0, #0
   2d3c8:	str	r0, [sp, #12]
   2d3cc:	ldr	r0, [fp, #-8]
   2d3d0:	ldr	r0, [r0]
   2d3d4:	str	r0, [sp, #8]
   2d3d8:	ldr	r0, [sp, #8]
   2d3dc:	ldr	r1, [fp, #-8]
   2d3e0:	ldr	r1, [r1, #4]
   2d3e4:	cmp	r0, r1
   2d3e8:	bcs	2d484 <__assert_fail@plt+0x1a8cc>
   2d3ec:	ldr	r0, [sp, #8]
   2d3f0:	ldr	r0, [r0]
   2d3f4:	movw	r1, #0
   2d3f8:	cmp	r0, r1
   2d3fc:	beq	2d470 <__assert_fail@plt+0x1a8b8>
   2d400:	ldr	r0, [sp, #8]
   2d404:	str	r0, [sp, #4]
   2d408:	ldr	r0, [sp, #4]
   2d40c:	movw	r1, #0
   2d410:	cmp	r0, r1
   2d414:	beq	2d46c <__assert_fail@plt+0x1a8b4>
   2d418:	ldr	r0, [fp, #-12]
   2d41c:	ldr	r1, [sp, #4]
   2d420:	ldr	r1, [r1]
   2d424:	ldr	r2, [sp, #16]
   2d428:	str	r0, [sp]
   2d42c:	mov	r0, r1
   2d430:	mov	r1, r2
   2d434:	ldr	r2, [sp]
   2d438:	blx	r2
   2d43c:	tst	r0, #1
   2d440:	bne	2d450 <__assert_fail@plt+0x1a898>
   2d444:	ldr	r0, [sp, #12]
   2d448:	str	r0, [fp, #-4]
   2d44c:	b	2d48c <__assert_fail@plt+0x1a8d4>
   2d450:	ldr	r0, [sp, #12]
   2d454:	add	r0, r0, #1
   2d458:	str	r0, [sp, #12]
   2d45c:	ldr	r0, [sp, #4]
   2d460:	ldr	r0, [r0, #4]
   2d464:	str	r0, [sp, #4]
   2d468:	b	2d408 <__assert_fail@plt+0x1a850>
   2d46c:	b	2d470 <__assert_fail@plt+0x1a8b8>
   2d470:	b	2d474 <__assert_fail@plt+0x1a8bc>
   2d474:	ldr	r0, [sp, #8]
   2d478:	add	r0, r0, #8
   2d47c:	str	r0, [sp, #8]
   2d480:	b	2d3d8 <__assert_fail@plt+0x1a820>
   2d484:	ldr	r0, [sp, #12]
   2d488:	str	r0, [fp, #-4]
   2d48c:	ldr	r0, [fp, #-4]
   2d490:	mov	sp, fp
   2d494:	pop	{fp, pc}
   2d498:	sub	sp, sp, #16
   2d49c:	str	r0, [sp, #12]
   2d4a0:	str	r1, [sp, #8]
   2d4a4:	movw	r0, #0
   2d4a8:	str	r0, [sp, #4]
   2d4ac:	ldr	r0, [sp, #12]
   2d4b0:	ldrb	r0, [r0]
   2d4b4:	strb	r0, [sp, #3]
   2d4b8:	sxtb	r0, r0
   2d4bc:	cmp	r0, #0
   2d4c0:	beq	2d4f4 <__assert_fail@plt+0x1a93c>
   2d4c4:	ldr	r0, [sp, #4]
   2d4c8:	rsb	r0, r0, r0, lsl #5
   2d4cc:	ldrb	r1, [sp, #3]
   2d4d0:	add	r0, r0, r1
   2d4d4:	ldr	r1, [sp, #8]
   2d4d8:	udiv	r2, r0, r1
   2d4dc:	mls	r0, r2, r1, r0
   2d4e0:	str	r0, [sp, #4]
   2d4e4:	ldr	r0, [sp, #12]
   2d4e8:	add	r0, r0, #1
   2d4ec:	str	r0, [sp, #12]
   2d4f0:	b	2d4ac <__assert_fail@plt+0x1a8f4>
   2d4f4:	ldr	r0, [sp, #4]
   2d4f8:	add	sp, sp, #16
   2d4fc:	bx	lr
   2d500:	push	{fp, lr}
   2d504:	mov	fp, sp
   2d508:	sub	sp, sp, #8
   2d50c:	movw	r1, #50248	; 0xc448
   2d510:	movt	r1, #7
   2d514:	str	r0, [sp, #4]
   2d518:	ldr	r0, [sp, #4]
   2d51c:	movw	r2, #20
   2d520:	bl	125c4 <memcpy@plt>
   2d524:	mov	sp, fp
   2d528:	pop	{fp, pc}
   2d52c:	push	{fp, lr}
   2d530:	mov	fp, sp
   2d534:	sub	sp, sp, #32
   2d538:	ldr	ip, [fp, #8]
   2d53c:	str	r0, [fp, #-8]
   2d540:	str	r1, [fp, #-12]
   2d544:	str	r2, [sp, #16]
   2d548:	str	r3, [sp, #12]
   2d54c:	ldr	r0, [sp, #16]
   2d550:	movw	r1, #0
   2d554:	cmp	r0, r1
   2d558:	str	ip, [sp, #4]
   2d55c:	bne	2d56c <__assert_fail@plt+0x1a9b4>
   2d560:	movw	r0, #54980	; 0xd6c4
   2d564:	movt	r0, #2
   2d568:	str	r0, [sp, #16]
   2d56c:	ldr	r0, [sp, #12]
   2d570:	movw	r1, #0
   2d574:	cmp	r0, r1
   2d578:	bne	2d588 <__assert_fail@plt+0x1a9d0>
   2d57c:	movw	r0, #55040	; 0xd700
   2d580:	movt	r0, #2
   2d584:	str	r0, [sp, #12]
   2d588:	movw	r0, #40	; 0x28
   2d58c:	bl	549ac <__assert_fail@plt+0x41df4>
   2d590:	str	r0, [sp, #8]
   2d594:	ldr	r0, [sp, #8]
   2d598:	movw	lr, #0
   2d59c:	cmp	r0, lr
   2d5a0:	bne	2d5b0 <__assert_fail@plt+0x1a9f8>
   2d5a4:	movw	r0, #0
   2d5a8:	str	r0, [fp, #-4]
   2d5ac:	b	2d6b8 <__assert_fail@plt+0x1ab00>
   2d5b0:	ldr	r0, [fp, #-12]
   2d5b4:	movw	r1, #0
   2d5b8:	cmp	r0, r1
   2d5bc:	bne	2d5cc <__assert_fail@plt+0x1aa14>
   2d5c0:	movw	r0, #50248	; 0xc448
   2d5c4:	movt	r0, #7
   2d5c8:	str	r0, [fp, #-12]
   2d5cc:	ldr	r0, [fp, #-12]
   2d5d0:	ldr	r1, [sp, #8]
   2d5d4:	str	r0, [r1, #20]
   2d5d8:	ldr	r0, [sp, #8]
   2d5dc:	bl	2d72c <__assert_fail@plt+0x1ab74>
   2d5e0:	tst	r0, #1
   2d5e4:	bne	2d5ec <__assert_fail@plt+0x1aa34>
   2d5e8:	b	2d6a8 <__assert_fail@plt+0x1aaf0>
   2d5ec:	ldr	r0, [fp, #-8]
   2d5f0:	ldr	r1, [fp, #-12]
   2d5f4:	bl	2d880 <__assert_fail@plt+0x1acc8>
   2d5f8:	ldr	r1, [sp, #8]
   2d5fc:	str	r0, [r1, #8]
   2d600:	ldr	r0, [sp, #8]
   2d604:	ldr	r0, [r0, #8]
   2d608:	cmp	r0, #0
   2d60c:	bne	2d614 <__assert_fail@plt+0x1aa5c>
   2d610:	b	2d6a8 <__assert_fail@plt+0x1aaf0>
   2d614:	ldr	r0, [sp, #8]
   2d618:	ldr	r0, [r0, #8]
   2d61c:	movw	r1, #8
   2d620:	bl	50240 <__assert_fail@plt+0x3d688>
   2d624:	ldr	r1, [sp, #8]
   2d628:	str	r0, [r1]
   2d62c:	ldr	r0, [sp, #8]
   2d630:	ldr	r0, [r0]
   2d634:	movw	r1, #0
   2d638:	cmp	r0, r1
   2d63c:	bne	2d644 <__assert_fail@plt+0x1aa8c>
   2d640:	b	2d6a8 <__assert_fail@plt+0x1aaf0>
   2d644:	ldr	r0, [sp, #8]
   2d648:	ldr	r1, [r0]
   2d64c:	ldr	r0, [r0, #8]
   2d650:	add	r0, r1, r0, lsl #3
   2d654:	ldr	r1, [sp, #8]
   2d658:	str	r0, [r1, #4]
   2d65c:	ldr	r0, [sp, #8]
   2d660:	movw	r1, #0
   2d664:	str	r1, [r0, #12]
   2d668:	ldr	r0, [sp, #8]
   2d66c:	str	r1, [r0, #16]
   2d670:	ldr	r0, [sp, #16]
   2d674:	ldr	r2, [sp, #8]
   2d678:	str	r0, [r2, #24]
   2d67c:	ldr	r0, [sp, #12]
   2d680:	ldr	r2, [sp, #8]
   2d684:	str	r0, [r2, #28]
   2d688:	ldr	r0, [fp, #8]
   2d68c:	ldr	r2, [sp, #8]
   2d690:	str	r0, [r2, #32]
   2d694:	ldr	r0, [sp, #8]
   2d698:	str	r1, [r0, #36]	; 0x24
   2d69c:	ldr	r0, [sp, #8]
   2d6a0:	str	r0, [fp, #-4]
   2d6a4:	b	2d6b8 <__assert_fail@plt+0x1ab00>
   2d6a8:	ldr	r0, [sp, #8]
   2d6ac:	bl	50c68 <__assert_fail@plt+0x3e0b0>
   2d6b0:	movw	r0, #0
   2d6b4:	str	r0, [fp, #-4]
   2d6b8:	ldr	r0, [fp, #-4]
   2d6bc:	mov	sp, fp
   2d6c0:	pop	{fp, pc}
   2d6c4:	push	{fp, lr}
   2d6c8:	mov	fp, sp
   2d6cc:	sub	sp, sp, #16
   2d6d0:	str	r0, [fp, #-4]
   2d6d4:	str	r1, [sp, #8]
   2d6d8:	ldr	r0, [fp, #-4]
   2d6dc:	mov	r1, #3
   2d6e0:	bl	70f24 <__assert_fail@plt+0x5e36c>
   2d6e4:	str	r0, [sp, #4]
   2d6e8:	ldr	r0, [sp, #4]
   2d6ec:	ldr	r1, [sp, #8]
   2d6f0:	udiv	lr, r0, r1
   2d6f4:	mls	r0, lr, r1, r0
   2d6f8:	mov	sp, fp
   2d6fc:	pop	{fp, pc}
   2d700:	sub	sp, sp, #8
   2d704:	str	r0, [sp, #4]
   2d708:	str	r1, [sp]
   2d70c:	ldr	r0, [sp, #4]
   2d710:	ldr	r1, [sp]
   2d714:	cmp	r0, r1
   2d718:	movw	r0, #0
   2d71c:	moveq	r0, #1
   2d720:	and	r0, r0, #1
   2d724:	add	sp, sp, #8
   2d728:	bx	lr
   2d72c:	sub	sp, sp, #16
   2d730:	str	r0, [sp, #8]
   2d734:	ldr	r0, [sp, #8]
   2d738:	ldr	r0, [r0, #20]
   2d73c:	str	r0, [sp, #4]
   2d740:	ldr	r0, [sp, #4]
   2d744:	movw	r1, #50248	; 0xc448
   2d748:	movt	r1, #7
   2d74c:	cmp	r0, r1
   2d750:	bne	2d764 <__assert_fail@plt+0x1abac>
   2d754:	movw	r0, #1
   2d758:	and	r0, r0, #1
   2d75c:	strb	r0, [sp, #15]
   2d760:	b	2d868 <__assert_fail@plt+0x1acb0>
   2d764:	vldr	s0, [pc, #268]	; 2d878 <__assert_fail@plt+0x1acc0>
   2d768:	vstr	s0, [sp]
   2d76c:	vldr	s0, [sp]
   2d770:	ldr	r0, [sp, #4]
   2d774:	vldr	s2, [r0, #8]
   2d778:	vcmpe.f32	s0, s2
   2d77c:	vmrs	APSR_nzcv, fpscr
   2d780:	bpl	2d84c <__assert_fail@plt+0x1ac94>
   2d784:	ldr	r0, [sp, #4]
   2d788:	vldr	s0, [r0, #8]
   2d78c:	vldr	s2, [sp]
   2d790:	vmov.f32	s4, #112	; 0x3f800000  1.0
   2d794:	vsub.f32	s2, s4, s2
   2d798:	vcmpe.f32	s0, s2
   2d79c:	vmrs	APSR_nzcv, fpscr
   2d7a0:	bpl	2d84c <__assert_fail@plt+0x1ac94>
   2d7a4:	vldr	s0, [sp]
   2d7a8:	vmov.f32	s2, #112	; 0x3f800000  1.0
   2d7ac:	vadd.f32	s0, s2, s0
   2d7b0:	ldr	r0, [sp, #4]
   2d7b4:	vldr	s2, [r0, #12]
   2d7b8:	vcmpe.f32	s0, s2
   2d7bc:	vmrs	APSR_nzcv, fpscr
   2d7c0:	bpl	2d84c <__assert_fail@plt+0x1ac94>
   2d7c4:	vldr	s0, [pc, #176]	; 2d87c <__assert_fail@plt+0x1acc4>
   2d7c8:	ldr	r0, [sp, #4]
   2d7cc:	vldr	s2, [r0]
   2d7d0:	vcmpe.f32	s0, s2
   2d7d4:	vmrs	APSR_nzcv, fpscr
   2d7d8:	bhi	2d84c <__assert_fail@plt+0x1ac94>
   2d7dc:	ldr	r0, [sp, #4]
   2d7e0:	vldr	s0, [r0]
   2d7e4:	vldr	s2, [sp]
   2d7e8:	vadd.f32	s0, s0, s2
   2d7ec:	ldr	r0, [sp, #4]
   2d7f0:	vldr	s2, [r0, #4]
   2d7f4:	vcmpe.f32	s0, s2
   2d7f8:	vmrs	APSR_nzcv, fpscr
   2d7fc:	bpl	2d84c <__assert_fail@plt+0x1ac94>
   2d800:	ldr	r0, [sp, #4]
   2d804:	vldr	s0, [r0, #4]
   2d808:	vmov.f32	s2, #112	; 0x3f800000  1.0
   2d80c:	vcmpe.f32	s0, s2
   2d810:	vmrs	APSR_nzcv, fpscr
   2d814:	bhi	2d84c <__assert_fail@plt+0x1ac94>
   2d818:	ldr	r0, [sp, #4]
   2d81c:	vldr	s0, [r0]
   2d820:	vldr	s2, [sp]
   2d824:	vadd.f32	s0, s0, s2
   2d828:	ldr	r0, [sp, #4]
   2d82c:	vldr	s2, [r0, #8]
   2d830:	vcmpe.f32	s0, s2
   2d834:	vmrs	APSR_nzcv, fpscr
   2d838:	bpl	2d84c <__assert_fail@plt+0x1ac94>
   2d83c:	movw	r0, #1
   2d840:	and	r0, r0, #1
   2d844:	strb	r0, [sp, #15]
   2d848:	b	2d868 <__assert_fail@plt+0x1acb0>
   2d84c:	ldr	r0, [sp, #8]
   2d850:	movw	r1, #50248	; 0xc448
   2d854:	movt	r1, #7
   2d858:	str	r1, [r0, #20]
   2d85c:	movw	r0, #0
   2d860:	and	r0, r0, #1
   2d864:	strb	r0, [sp, #15]
   2d868:	ldrb	r0, [sp, #15]
   2d86c:	and	r0, r0, #1
   2d870:	add	sp, sp, #16
   2d874:	bx	lr
   2d878:	stclcc	12, cr12, [ip, #820]	; 0x334
   2d87c:	andeq	r0, r0, r0
   2d880:	push	{fp, lr}
   2d884:	mov	fp, sp
   2d888:	sub	sp, sp, #16
   2d88c:	str	r0, [sp, #8]
   2d890:	str	r1, [sp, #4]
   2d894:	ldr	r0, [sp, #4]
   2d898:	ldrb	r0, [r0, #16]
   2d89c:	tst	r0, #1
   2d8a0:	bne	2d8f0 <__assert_fail@plt+0x1ad38>
   2d8a4:	vldr	s0, [pc, #128]	; 2d92c <__assert_fail@plt+0x1ad74>
   2d8a8:	ldr	r0, [sp, #8]
   2d8ac:	vmov	s2, r0
   2d8b0:	vcvt.f32.u32	s2, s2
   2d8b4:	ldr	r0, [sp, #4]
   2d8b8:	vldr	s4, [r0, #8]
   2d8bc:	vdiv.f32	s2, s2, s4
   2d8c0:	vstr	s2, [sp]
   2d8c4:	vldr	s2, [sp]
   2d8c8:	vcmpe.f32	s0, s2
   2d8cc:	vmrs	APSR_nzcv, fpscr
   2d8d0:	bhi	2d8e0 <__assert_fail@plt+0x1ad28>
   2d8d4:	movw	r0, #0
   2d8d8:	str	r0, [fp, #-4]
   2d8dc:	b	2d920 <__assert_fail@plt+0x1ad68>
   2d8e0:	vldr	s0, [sp]
   2d8e4:	vcvt.u32.f32	s0, s0
   2d8e8:	vmov	r0, s0
   2d8ec:	str	r0, [sp, #8]
   2d8f0:	ldr	r0, [sp, #8]
   2d8f4:	bl	2e7f8 <__assert_fail@plt+0x1bc40>
   2d8f8:	ldr	lr, [pc, #48]	; 2d930 <__assert_fail@plt+0x1ad78>
   2d8fc:	str	r0, [sp, #8]
   2d900:	ldr	r0, [sp, #8]
   2d904:	cmp	lr, r0
   2d908:	bcs	2d918 <__assert_fail@plt+0x1ad60>
   2d90c:	movw	r0, #0
   2d910:	str	r0, [fp, #-4]
   2d914:	b	2d920 <__assert_fail@plt+0x1ad68>
   2d918:	ldr	r0, [sp, #8]
   2d91c:	str	r0, [fp, #-4]
   2d920:	ldr	r0, [fp, #-4]
   2d924:	mov	sp, fp
   2d928:	pop	{fp, pc}
   2d92c:	svcmi	0x00800000
   2d930:	svcne	0x00ffffff
   2d934:	push	{fp, lr}
   2d938:	mov	fp, sp
   2d93c:	sub	sp, sp, #24
   2d940:	str	r0, [fp, #-4]
   2d944:	ldr	r0, [fp, #-4]
   2d948:	ldr	r0, [r0]
   2d94c:	str	r0, [fp, #-8]
   2d950:	ldr	r0, [fp, #-8]
   2d954:	ldr	r1, [fp, #-4]
   2d958:	ldr	r1, [r1, #4]
   2d95c:	cmp	r0, r1
   2d960:	bcs	2da64 <__assert_fail@plt+0x1aeac>
   2d964:	ldr	r0, [fp, #-8]
   2d968:	ldr	r0, [r0]
   2d96c:	movw	r1, #0
   2d970:	cmp	r0, r1
   2d974:	beq	2da50 <__assert_fail@plt+0x1ae98>
   2d978:	ldr	r0, [fp, #-8]
   2d97c:	ldr	r0, [r0, #4]
   2d980:	str	r0, [sp, #12]
   2d984:	ldr	r0, [sp, #12]
   2d988:	movw	r1, #0
   2d98c:	cmp	r0, r1
   2d990:	beq	2da08 <__assert_fail@plt+0x1ae50>
   2d994:	ldr	r0, [fp, #-4]
   2d998:	ldr	r0, [r0, #32]
   2d99c:	movw	r1, #0
   2d9a0:	cmp	r0, r1
   2d9a4:	beq	2d9c8 <__assert_fail@plt+0x1ae10>
   2d9a8:	ldr	r0, [fp, #-4]
   2d9ac:	ldr	r0, [r0, #32]
   2d9b0:	ldr	r1, [sp, #12]
   2d9b4:	ldr	r1, [r1]
   2d9b8:	str	r0, [sp, #4]
   2d9bc:	mov	r0, r1
   2d9c0:	ldr	r1, [sp, #4]
   2d9c4:	blx	r1
   2d9c8:	ldr	r0, [sp, #12]
   2d9cc:	movw	r1, #0
   2d9d0:	str	r1, [r0]
   2d9d4:	ldr	r0, [sp, #12]
   2d9d8:	ldr	r0, [r0, #4]
   2d9dc:	str	r0, [sp, #8]
   2d9e0:	ldr	r0, [fp, #-4]
   2d9e4:	ldr	r0, [r0, #36]	; 0x24
   2d9e8:	ldr	r1, [sp, #12]
   2d9ec:	str	r0, [r1, #4]
   2d9f0:	ldr	r0, [sp, #12]
   2d9f4:	ldr	r1, [fp, #-4]
   2d9f8:	str	r0, [r1, #36]	; 0x24
   2d9fc:	ldr	r0, [sp, #8]
   2da00:	str	r0, [sp, #12]
   2da04:	b	2d984 <__assert_fail@plt+0x1adcc>
   2da08:	ldr	r0, [fp, #-4]
   2da0c:	ldr	r0, [r0, #32]
   2da10:	movw	r1, #0
   2da14:	cmp	r0, r1
   2da18:	beq	2da3c <__assert_fail@plt+0x1ae84>
   2da1c:	ldr	r0, [fp, #-4]
   2da20:	ldr	r0, [r0, #32]
   2da24:	ldr	r1, [fp, #-8]
   2da28:	ldr	r1, [r1]
   2da2c:	str	r0, [sp]
   2da30:	mov	r0, r1
   2da34:	ldr	r1, [sp]
   2da38:	blx	r1
   2da3c:	ldr	r0, [fp, #-8]
   2da40:	movw	r1, #0
   2da44:	str	r1, [r0]
   2da48:	ldr	r0, [fp, #-8]
   2da4c:	str	r1, [r0, #4]
   2da50:	b	2da54 <__assert_fail@plt+0x1ae9c>
   2da54:	ldr	r0, [fp, #-8]
   2da58:	add	r0, r0, #8
   2da5c:	str	r0, [fp, #-8]
   2da60:	b	2d950 <__assert_fail@plt+0x1ad98>
   2da64:	ldr	r0, [fp, #-4]
   2da68:	movw	r1, #0
   2da6c:	str	r1, [r0, #12]
   2da70:	ldr	r0, [fp, #-4]
   2da74:	str	r1, [r0, #16]
   2da78:	mov	sp, fp
   2da7c:	pop	{fp, pc}
   2da80:	push	{fp, lr}
   2da84:	mov	fp, sp
   2da88:	sub	sp, sp, #24
   2da8c:	str	r0, [fp, #-4]
   2da90:	ldr	r0, [fp, #-4]
   2da94:	ldr	r0, [r0, #32]
   2da98:	movw	r1, #0
   2da9c:	cmp	r0, r1
   2daa0:	beq	2db4c <__assert_fail@plt+0x1af94>
   2daa4:	ldr	r0, [fp, #-4]
   2daa8:	ldr	r0, [r0, #16]
   2daac:	cmp	r0, #0
   2dab0:	beq	2db4c <__assert_fail@plt+0x1af94>
   2dab4:	ldr	r0, [fp, #-4]
   2dab8:	ldr	r0, [r0]
   2dabc:	str	r0, [fp, #-8]
   2dac0:	ldr	r0, [fp, #-8]
   2dac4:	ldr	r1, [fp, #-4]
   2dac8:	ldr	r1, [r1, #4]
   2dacc:	cmp	r0, r1
   2dad0:	bcs	2db48 <__assert_fail@plt+0x1af90>
   2dad4:	ldr	r0, [fp, #-8]
   2dad8:	ldr	r0, [r0]
   2dadc:	movw	r1, #0
   2dae0:	cmp	r0, r1
   2dae4:	beq	2db34 <__assert_fail@plt+0x1af7c>
   2dae8:	ldr	r0, [fp, #-8]
   2daec:	str	r0, [sp, #12]
   2daf0:	ldr	r0, [sp, #12]
   2daf4:	movw	r1, #0
   2daf8:	cmp	r0, r1
   2dafc:	beq	2db30 <__assert_fail@plt+0x1af78>
   2db00:	ldr	r0, [fp, #-4]
   2db04:	ldr	r0, [r0, #32]
   2db08:	ldr	r1, [sp, #12]
   2db0c:	ldr	r1, [r1]
   2db10:	str	r0, [sp, #4]
   2db14:	mov	r0, r1
   2db18:	ldr	r1, [sp, #4]
   2db1c:	blx	r1
   2db20:	ldr	r0, [sp, #12]
   2db24:	ldr	r0, [r0, #4]
   2db28:	str	r0, [sp, #12]
   2db2c:	b	2daf0 <__assert_fail@plt+0x1af38>
   2db30:	b	2db34 <__assert_fail@plt+0x1af7c>
   2db34:	b	2db38 <__assert_fail@plt+0x1af80>
   2db38:	ldr	r0, [fp, #-8]
   2db3c:	add	r0, r0, #8
   2db40:	str	r0, [fp, #-8]
   2db44:	b	2dac0 <__assert_fail@plt+0x1af08>
   2db48:	b	2db4c <__assert_fail@plt+0x1af94>
   2db4c:	ldr	r0, [fp, #-4]
   2db50:	ldr	r0, [r0]
   2db54:	str	r0, [fp, #-8]
   2db58:	ldr	r0, [fp, #-8]
   2db5c:	ldr	r1, [fp, #-4]
   2db60:	ldr	r1, [r1, #4]
   2db64:	cmp	r0, r1
   2db68:	bcs	2dbbc <__assert_fail@plt+0x1b004>
   2db6c:	ldr	r0, [fp, #-8]
   2db70:	ldr	r0, [r0, #4]
   2db74:	str	r0, [sp, #12]
   2db78:	ldr	r0, [sp, #12]
   2db7c:	movw	r1, #0
   2db80:	cmp	r0, r1
   2db84:	beq	2dba8 <__assert_fail@plt+0x1aff0>
   2db88:	ldr	r0, [sp, #12]
   2db8c:	ldr	r0, [r0, #4]
   2db90:	str	r0, [sp, #8]
   2db94:	ldr	r0, [sp, #12]
   2db98:	bl	50c68 <__assert_fail@plt+0x3e0b0>
   2db9c:	ldr	r0, [sp, #8]
   2dba0:	str	r0, [sp, #12]
   2dba4:	b	2db78 <__assert_fail@plt+0x1afc0>
   2dba8:	b	2dbac <__assert_fail@plt+0x1aff4>
   2dbac:	ldr	r0, [fp, #-8]
   2dbb0:	add	r0, r0, #8
   2dbb4:	str	r0, [fp, #-8]
   2dbb8:	b	2db58 <__assert_fail@plt+0x1afa0>
   2dbbc:	ldr	r0, [fp, #-4]
   2dbc0:	ldr	r0, [r0, #36]	; 0x24
   2dbc4:	str	r0, [sp, #12]
   2dbc8:	ldr	r0, [sp, #12]
   2dbcc:	movw	r1, #0
   2dbd0:	cmp	r0, r1
   2dbd4:	beq	2dbf8 <__assert_fail@plt+0x1b040>
   2dbd8:	ldr	r0, [sp, #12]
   2dbdc:	ldr	r0, [r0, #4]
   2dbe0:	str	r0, [sp, #8]
   2dbe4:	ldr	r0, [sp, #12]
   2dbe8:	bl	50c68 <__assert_fail@plt+0x3e0b0>
   2dbec:	ldr	r0, [sp, #8]
   2dbf0:	str	r0, [sp, #12]
   2dbf4:	b	2dbc8 <__assert_fail@plt+0x1b010>
   2dbf8:	ldr	r0, [fp, #-4]
   2dbfc:	ldr	r0, [r0]
   2dc00:	bl	50c68 <__assert_fail@plt+0x3e0b0>
   2dc04:	ldr	r0, [fp, #-4]
   2dc08:	bl	50c68 <__assert_fail@plt+0x3e0b0>
   2dc0c:	mov	sp, fp
   2dc10:	pop	{fp, pc}
   2dc14:	push	{fp, lr}
   2dc18:	mov	fp, sp
   2dc1c:	sub	sp, sp, #64	; 0x40
   2dc20:	str	r0, [fp, #-8]
   2dc24:	str	r1, [fp, #-12]
   2dc28:	ldr	r0, [fp, #-12]
   2dc2c:	ldr	r1, [fp, #-8]
   2dc30:	ldr	r1, [r1, #20]
   2dc34:	bl	2d880 <__assert_fail@plt+0x1acc8>
   2dc38:	str	r0, [sp, #4]
   2dc3c:	ldr	r0, [sp, #4]
   2dc40:	cmp	r0, #0
   2dc44:	bne	2dc58 <__assert_fail@plt+0x1b0a0>
   2dc48:	movw	r0, #0
   2dc4c:	and	r0, r0, #1
   2dc50:	strb	r0, [fp, #-1]
   2dc54:	b	2de30 <__assert_fail@plt+0x1b278>
   2dc58:	ldr	r0, [sp, #4]
   2dc5c:	ldr	r1, [fp, #-8]
   2dc60:	ldr	r1, [r1, #8]
   2dc64:	cmp	r0, r1
   2dc68:	bne	2dc7c <__assert_fail@plt+0x1b0c4>
   2dc6c:	movw	r0, #1
   2dc70:	and	r0, r0, #1
   2dc74:	strb	r0, [fp, #-1]
   2dc78:	b	2de30 <__assert_fail@plt+0x1b278>
   2dc7c:	add	r0, sp, #12
   2dc80:	str	r0, [sp, #8]
   2dc84:	ldr	r0, [sp, #4]
   2dc88:	movw	r1, #8
   2dc8c:	bl	50240 <__assert_fail@plt+0x3d688>
   2dc90:	ldr	r1, [sp, #8]
   2dc94:	str	r0, [r1]
   2dc98:	ldr	r0, [sp, #8]
   2dc9c:	ldr	r0, [r0]
   2dca0:	movw	r1, #0
   2dca4:	cmp	r0, r1
   2dca8:	bne	2dcbc <__assert_fail@plt+0x1b104>
   2dcac:	movw	r0, #0
   2dcb0:	and	r0, r0, #1
   2dcb4:	strb	r0, [fp, #-1]
   2dcb8:	b	2de30 <__assert_fail@plt+0x1b278>
   2dcbc:	ldr	r0, [sp, #4]
   2dcc0:	ldr	r1, [sp, #8]
   2dcc4:	str	r0, [r1, #8]
   2dcc8:	ldr	r0, [sp, #8]
   2dccc:	ldr	r0, [r0]
   2dcd0:	ldr	r1, [sp, #4]
   2dcd4:	add	r0, r0, r1, lsl #3
   2dcd8:	ldr	r1, [sp, #8]
   2dcdc:	str	r0, [r1, #4]
   2dce0:	ldr	r0, [sp, #8]
   2dce4:	movw	r1, #0
   2dce8:	str	r1, [r0, #12]
   2dcec:	ldr	r0, [sp, #8]
   2dcf0:	str	r1, [r0, #16]
   2dcf4:	ldr	r0, [fp, #-8]
   2dcf8:	ldr	r0, [r0, #20]
   2dcfc:	ldr	r1, [sp, #8]
   2dd00:	str	r0, [r1, #20]
   2dd04:	ldr	r0, [fp, #-8]
   2dd08:	ldr	r0, [r0, #24]
   2dd0c:	ldr	r1, [sp, #8]
   2dd10:	str	r0, [r1, #24]
   2dd14:	ldr	r0, [fp, #-8]
   2dd18:	ldr	r0, [r0, #28]
   2dd1c:	ldr	r1, [sp, #8]
   2dd20:	str	r0, [r1, #28]
   2dd24:	ldr	r0, [fp, #-8]
   2dd28:	ldr	r0, [r0, #32]
   2dd2c:	ldr	r1, [sp, #8]
   2dd30:	str	r0, [r1, #32]
   2dd34:	ldr	r0, [fp, #-8]
   2dd38:	ldr	r0, [r0, #36]	; 0x24
   2dd3c:	ldr	r1, [sp, #8]
   2dd40:	str	r0, [r1, #36]	; 0x24
   2dd44:	ldr	r0, [sp, #8]
   2dd48:	ldr	r1, [fp, #-8]
   2dd4c:	movw	r2, #0
   2dd50:	and	r2, r2, #1
   2dd54:	bl	2de40 <__assert_fail@plt+0x1b288>
   2dd58:	tst	r0, #1
   2dd5c:	beq	2ddcc <__assert_fail@plt+0x1b214>
   2dd60:	ldr	r0, [fp, #-8]
   2dd64:	ldr	r0, [r0]
   2dd68:	bl	50c68 <__assert_fail@plt+0x3e0b0>
   2dd6c:	ldr	r0, [sp, #8]
   2dd70:	ldr	r0, [r0]
   2dd74:	ldr	lr, [fp, #-8]
   2dd78:	str	r0, [lr]
   2dd7c:	ldr	r0, [sp, #8]
   2dd80:	ldr	r0, [r0, #4]
   2dd84:	ldr	lr, [fp, #-8]
   2dd88:	str	r0, [lr, #4]
   2dd8c:	ldr	r0, [sp, #8]
   2dd90:	ldr	r0, [r0, #8]
   2dd94:	ldr	lr, [fp, #-8]
   2dd98:	str	r0, [lr, #8]
   2dd9c:	ldr	r0, [sp, #8]
   2dda0:	ldr	r0, [r0, #12]
   2dda4:	ldr	lr, [fp, #-8]
   2dda8:	str	r0, [lr, #12]
   2ddac:	ldr	r0, [sp, #8]
   2ddb0:	ldr	r0, [r0, #36]	; 0x24
   2ddb4:	ldr	lr, [fp, #-8]
   2ddb8:	str	r0, [lr, #36]	; 0x24
   2ddbc:	movw	r0, #1
   2ddc0:	and	r0, r0, #1
   2ddc4:	strb	r0, [fp, #-1]
   2ddc8:	b	2de30 <__assert_fail@plt+0x1b278>
   2ddcc:	ldr	r0, [sp, #8]
   2ddd0:	ldr	r0, [r0, #36]	; 0x24
   2ddd4:	ldr	r1, [fp, #-8]
   2ddd8:	str	r0, [r1, #36]	; 0x24
   2dddc:	ldr	r0, [fp, #-8]
   2dde0:	ldr	r1, [sp, #8]
   2dde4:	movw	r2, #1
   2dde8:	and	r2, r2, #1
   2ddec:	bl	2de40 <__assert_fail@plt+0x1b288>
   2ddf0:	tst	r0, #1
   2ddf4:	beq	2de14 <__assert_fail@plt+0x1b25c>
   2ddf8:	ldr	r0, [fp, #-8]
   2ddfc:	ldr	r1, [sp, #8]
   2de00:	movw	r2, #0
   2de04:	and	r2, r2, #1
   2de08:	bl	2de40 <__assert_fail@plt+0x1b288>
   2de0c:	tst	r0, #1
   2de10:	bne	2de18 <__assert_fail@plt+0x1b260>
   2de14:	bl	12b64 <abort@plt>
   2de18:	ldr	r0, [sp, #8]
   2de1c:	ldr	r0, [r0]
   2de20:	bl	50c68 <__assert_fail@plt+0x3e0b0>
   2de24:	movw	r0, #0
   2de28:	and	r0, r0, #1
   2de2c:	strb	r0, [fp, #-1]
   2de30:	ldrb	r0, [fp, #-1]
   2de34:	and	r0, r0, #1
   2de38:	mov	sp, fp
   2de3c:	pop	{fp, pc}
   2de40:	push	{fp, lr}
   2de44:	mov	fp, sp
   2de48:	sub	sp, sp, #40	; 0x28
   2de4c:	str	r0, [fp, #-8]
   2de50:	str	r1, [fp, #-12]
   2de54:	and	r0, r2, #1
   2de58:	strb	r0, [fp, #-13]
   2de5c:	ldr	r0, [fp, #-12]
   2de60:	ldr	r0, [r0]
   2de64:	str	r0, [sp, #20]
   2de68:	ldr	r0, [sp, #20]
   2de6c:	ldr	r1, [fp, #-12]
   2de70:	ldr	r1, [r1, #4]
   2de74:	cmp	r0, r1
   2de78:	bcs	2e034 <__assert_fail@plt+0x1b47c>
   2de7c:	ldr	r0, [sp, #20]
   2de80:	ldr	r0, [r0]
   2de84:	movw	r1, #0
   2de88:	cmp	r0, r1
   2de8c:	beq	2e020 <__assert_fail@plt+0x1b468>
   2de90:	ldr	r0, [sp, #20]
   2de94:	ldr	r0, [r0, #4]
   2de98:	str	r0, [sp, #16]
   2de9c:	ldr	r0, [sp, #16]
   2dea0:	movw	r1, #0
   2dea4:	cmp	r0, r1
   2dea8:	beq	2df40 <__assert_fail@plt+0x1b388>
   2deac:	ldr	r0, [sp, #16]
   2deb0:	ldr	r0, [r0]
   2deb4:	str	r0, [sp, #8]
   2deb8:	ldr	r0, [fp, #-8]
   2debc:	ldr	r1, [sp, #8]
   2dec0:	bl	2d0e8 <__assert_fail@plt+0x1a530>
   2dec4:	str	r0, [sp, #4]
   2dec8:	ldr	r0, [sp, #16]
   2decc:	ldr	r0, [r0, #4]
   2ded0:	str	r0, [sp, #12]
   2ded4:	ldr	r0, [sp, #4]
   2ded8:	ldr	r0, [r0]
   2dedc:	movw	r1, #0
   2dee0:	cmp	r0, r1
   2dee4:	beq	2df08 <__assert_fail@plt+0x1b350>
   2dee8:	ldr	r0, [sp, #4]
   2deec:	ldr	r0, [r0, #4]
   2def0:	ldr	r1, [sp, #16]
   2def4:	str	r0, [r1, #4]
   2def8:	ldr	r0, [sp, #16]
   2defc:	ldr	r1, [sp, #4]
   2df00:	str	r0, [r1, #4]
   2df04:	b	2df30 <__assert_fail@plt+0x1b378>
   2df08:	ldr	r0, [sp, #8]
   2df0c:	ldr	r1, [sp, #4]
   2df10:	str	r0, [r1]
   2df14:	ldr	r0, [fp, #-8]
   2df18:	ldr	r1, [r0, #12]
   2df1c:	add	r1, r1, #1
   2df20:	str	r1, [r0, #12]
   2df24:	ldr	r0, [fp, #-8]
   2df28:	ldr	r1, [sp, #16]
   2df2c:	bl	2e950 <__assert_fail@plt+0x1bd98>
   2df30:	b	2df34 <__assert_fail@plt+0x1b37c>
   2df34:	ldr	r0, [sp, #12]
   2df38:	str	r0, [sp, #16]
   2df3c:	b	2de9c <__assert_fail@plt+0x1b2e4>
   2df40:	ldr	r0, [sp, #20]
   2df44:	ldr	r0, [r0]
   2df48:	str	r0, [sp, #8]
   2df4c:	ldr	r0, [sp, #20]
   2df50:	movw	r1, #0
   2df54:	str	r1, [r0, #4]
   2df58:	ldrb	r0, [fp, #-13]
   2df5c:	tst	r0, #1
   2df60:	beq	2df68 <__assert_fail@plt+0x1b3b0>
   2df64:	b	2e024 <__assert_fail@plt+0x1b46c>
   2df68:	ldr	r0, [fp, #-8]
   2df6c:	ldr	r1, [sp, #8]
   2df70:	bl	2d0e8 <__assert_fail@plt+0x1a530>
   2df74:	str	r0, [sp, #4]
   2df78:	ldr	r0, [sp, #4]
   2df7c:	ldr	r0, [r0]
   2df80:	movw	r1, #0
   2df84:	cmp	r0, r1
   2df88:	beq	2dfe4 <__assert_fail@plt+0x1b42c>
   2df8c:	ldr	r0, [fp, #-8]
   2df90:	bl	2e4fc <__assert_fail@plt+0x1b944>
   2df94:	str	r0, [sp]
   2df98:	ldr	r0, [sp]
   2df9c:	movw	lr, #0
   2dfa0:	cmp	r0, lr
   2dfa4:	bne	2dfb8 <__assert_fail@plt+0x1b400>
   2dfa8:	movw	r0, #0
   2dfac:	and	r0, r0, #1
   2dfb0:	strb	r0, [fp, #-1]
   2dfb4:	b	2e040 <__assert_fail@plt+0x1b488>
   2dfb8:	ldr	r0, [sp, #8]
   2dfbc:	ldr	r1, [sp]
   2dfc0:	str	r0, [r1]
   2dfc4:	ldr	r0, [sp, #4]
   2dfc8:	ldr	r0, [r0, #4]
   2dfcc:	ldr	r1, [sp]
   2dfd0:	str	r0, [r1, #4]
   2dfd4:	ldr	r0, [sp]
   2dfd8:	ldr	r1, [sp, #4]
   2dfdc:	str	r0, [r1, #4]
   2dfe0:	b	2e000 <__assert_fail@plt+0x1b448>
   2dfe4:	ldr	r0, [sp, #8]
   2dfe8:	ldr	r1, [sp, #4]
   2dfec:	str	r0, [r1]
   2dff0:	ldr	r0, [fp, #-8]
   2dff4:	ldr	r1, [r0, #12]
   2dff8:	add	r1, r1, #1
   2dffc:	str	r1, [r0, #12]
   2e000:	ldr	r0, [sp, #20]
   2e004:	movw	r1, #0
   2e008:	str	r1, [r0]
   2e00c:	ldr	r0, [fp, #-12]
   2e010:	ldr	r1, [r0, #12]
   2e014:	mvn	r2, #0
   2e018:	add	r1, r1, r2
   2e01c:	str	r1, [r0, #12]
   2e020:	b	2e024 <__assert_fail@plt+0x1b46c>
   2e024:	ldr	r0, [sp, #20]
   2e028:	add	r0, r0, #8
   2e02c:	str	r0, [sp, #20]
   2e030:	b	2de68 <__assert_fail@plt+0x1b2b0>
   2e034:	movw	r0, #1
   2e038:	and	r0, r0, #1
   2e03c:	strb	r0, [fp, #-1]
   2e040:	ldrb	r0, [fp, #-1]
   2e044:	and	r0, r0, #1
   2e048:	mov	sp, fp
   2e04c:	pop	{fp, pc}
   2e050:	push	{fp, lr}
   2e054:	mov	fp, sp
   2e058:	sub	sp, sp, #48	; 0x30
   2e05c:	str	r0, [fp, #-8]
   2e060:	str	r1, [fp, #-12]
   2e064:	str	r2, [fp, #-16]
   2e068:	ldr	r0, [fp, #-12]
   2e06c:	movw	r1, #0
   2e070:	cmp	r0, r1
   2e074:	bne	2e07c <__assert_fail@plt+0x1b4c4>
   2e078:	bl	12b64 <abort@plt>
   2e07c:	ldr	r0, [fp, #-8]
   2e080:	ldr	r1, [fp, #-12]
   2e084:	add	r2, sp, #24
   2e088:	movw	r3, #0
   2e08c:	and	r3, r3, #1
   2e090:	bl	2e300 <__assert_fail@plt+0x1b748>
   2e094:	str	r0, [fp, #-20]	; 0xffffffec
   2e098:	movw	r1, #0
   2e09c:	cmp	r0, r1
   2e0a0:	beq	2e0cc <__assert_fail@plt+0x1b514>
   2e0a4:	ldr	r0, [fp, #-16]
   2e0a8:	movw	r1, #0
   2e0ac:	cmp	r0, r1
   2e0b0:	beq	2e0c0 <__assert_fail@plt+0x1b508>
   2e0b4:	ldr	r0, [fp, #-20]	; 0xffffffec
   2e0b8:	ldr	r1, [fp, #-16]
   2e0bc:	str	r0, [r1]
   2e0c0:	movw	r0, #0
   2e0c4:	str	r0, [fp, #-4]
   2e0c8:	b	2e2f0 <__assert_fail@plt+0x1b738>
   2e0cc:	ldr	r0, [fp, #-8]
   2e0d0:	ldr	r0, [r0, #12]
   2e0d4:	vmov	s0, r0
   2e0d8:	vcvt.f32.u32	s0, s0
   2e0dc:	ldr	r0, [fp, #-8]
   2e0e0:	ldr	r0, [r0, #20]
   2e0e4:	vldr	s2, [r0, #8]
   2e0e8:	ldr	r0, [fp, #-8]
   2e0ec:	ldr	r0, [r0, #8]
   2e0f0:	vmov	s4, r0
   2e0f4:	vcvt.f32.u32	s4, s4
   2e0f8:	vmul.f32	s2, s2, s4
   2e0fc:	vcmpe.f32	s0, s2
   2e100:	vmrs	APSR_nzcv, fpscr
   2e104:	ble	2e23c <__assert_fail@plt+0x1b684>
   2e108:	ldr	r0, [fp, #-8]
   2e10c:	bl	2d72c <__assert_fail@plt+0x1ab74>
   2e110:	ldr	lr, [fp, #-8]
   2e114:	ldr	lr, [lr, #12]
   2e118:	vmov	s0, lr
   2e11c:	vcvt.f32.u32	s0, s0
   2e120:	ldr	lr, [fp, #-8]
   2e124:	ldr	lr, [lr, #20]
   2e128:	vldr	s2, [lr, #8]
   2e12c:	ldr	lr, [fp, #-8]
   2e130:	ldr	lr, [lr, #8]
   2e134:	vmov	s4, lr
   2e138:	vcvt.f32.u32	s4, s4
   2e13c:	vmul.f32	s2, s2, s4
   2e140:	vcmpe.f32	s0, s2
   2e144:	vmrs	APSR_nzcv, fpscr
   2e148:	str	r0, [sp, #8]
   2e14c:	ble	2e238 <__assert_fail@plt+0x1b680>
   2e150:	ldr	r0, [fp, #-8]
   2e154:	ldr	r0, [r0, #20]
   2e158:	str	r0, [sp, #20]
   2e15c:	ldr	r0, [sp, #20]
   2e160:	ldrb	r0, [r0, #16]
   2e164:	tst	r0, #1
   2e168:	beq	2e190 <__assert_fail@plt+0x1b5d8>
   2e16c:	ldr	r0, [fp, #-8]
   2e170:	ldr	r0, [r0, #8]
   2e174:	vmov	s0, r0
   2e178:	vcvt.f32.u32	s0, s0
   2e17c:	ldr	r0, [sp, #20]
   2e180:	vldr	s2, [r0, #12]
   2e184:	vmul.f32	s0, s0, s2
   2e188:	vstr	s0, [sp, #4]
   2e18c:	b	2e1bc <__assert_fail@plt+0x1b604>
   2e190:	ldr	r0, [fp, #-8]
   2e194:	ldr	r0, [r0, #8]
   2e198:	vmov	s0, r0
   2e19c:	vcvt.f32.u32	s0, s0
   2e1a0:	ldr	r0, [sp, #20]
   2e1a4:	vldr	s2, [r0, #12]
   2e1a8:	vmul.f32	s0, s0, s2
   2e1ac:	ldr	r0, [sp, #20]
   2e1b0:	vldr	s2, [r0, #8]
   2e1b4:	vmul.f32	s0, s0, s2
   2e1b8:	vstr	s0, [sp, #4]
   2e1bc:	vldr	s0, [sp, #4]
   2e1c0:	vldr	s2, [pc, #308]	; 2e2fc <__assert_fail@plt+0x1b744>
   2e1c4:	vstr	s0, [sp, #16]
   2e1c8:	vldr	s0, [sp, #16]
   2e1cc:	vcmpe.f32	s2, s0
   2e1d0:	vmrs	APSR_nzcv, fpscr
   2e1d4:	bhi	2e1e4 <__assert_fail@plt+0x1b62c>
   2e1d8:	mvn	r0, #0
   2e1dc:	str	r0, [fp, #-4]
   2e1e0:	b	2e2f0 <__assert_fail@plt+0x1b738>
   2e1e4:	ldr	r0, [fp, #-8]
   2e1e8:	vldr	s0, [sp, #16]
   2e1ec:	vcvt.u32.f32	s0, s0
   2e1f0:	vmov	r1, s0
   2e1f4:	bl	2dc14 <__assert_fail@plt+0x1b05c>
   2e1f8:	tst	r0, #1
   2e1fc:	bne	2e20c <__assert_fail@plt+0x1b654>
   2e200:	mvn	r0, #0
   2e204:	str	r0, [fp, #-4]
   2e208:	b	2e2f0 <__assert_fail@plt+0x1b738>
   2e20c:	ldr	r0, [fp, #-8]
   2e210:	ldr	r1, [fp, #-12]
   2e214:	add	r2, sp, #24
   2e218:	movw	r3, #0
   2e21c:	and	r3, r3, #1
   2e220:	bl	2e300 <__assert_fail@plt+0x1b748>
   2e224:	movw	r1, #0
   2e228:	cmp	r0, r1
   2e22c:	beq	2e234 <__assert_fail@plt+0x1b67c>
   2e230:	bl	12b64 <abort@plt>
   2e234:	b	2e238 <__assert_fail@plt+0x1b680>
   2e238:	b	2e23c <__assert_fail@plt+0x1b684>
   2e23c:	ldr	r0, [sp, #24]
   2e240:	ldr	r0, [r0]
   2e244:	movw	r1, #0
   2e248:	cmp	r0, r1
   2e24c:	beq	2e2bc <__assert_fail@plt+0x1b704>
   2e250:	ldr	r0, [fp, #-8]
   2e254:	bl	2e4fc <__assert_fail@plt+0x1b944>
   2e258:	str	r0, [sp, #12]
   2e25c:	ldr	r0, [sp, #12]
   2e260:	movw	lr, #0
   2e264:	cmp	r0, lr
   2e268:	bne	2e278 <__assert_fail@plt+0x1b6c0>
   2e26c:	mvn	r0, #0
   2e270:	str	r0, [fp, #-4]
   2e274:	b	2e2f0 <__assert_fail@plt+0x1b738>
   2e278:	ldr	r0, [fp, #-12]
   2e27c:	ldr	r1, [sp, #12]
   2e280:	str	r0, [r1]
   2e284:	ldr	r0, [sp, #24]
   2e288:	ldr	r0, [r0, #4]
   2e28c:	ldr	r1, [sp, #12]
   2e290:	str	r0, [r1, #4]
   2e294:	ldr	r0, [sp, #12]
   2e298:	ldr	r1, [sp, #24]
   2e29c:	str	r0, [r1, #4]
   2e2a0:	ldr	r0, [fp, #-8]
   2e2a4:	ldr	r1, [r0, #16]
   2e2a8:	add	r1, r1, #1
   2e2ac:	str	r1, [r0, #16]
   2e2b0:	movw	r0, #1
   2e2b4:	str	r0, [fp, #-4]
   2e2b8:	b	2e2f0 <__assert_fail@plt+0x1b738>
   2e2bc:	ldr	r0, [fp, #-12]
   2e2c0:	ldr	r1, [sp, #24]
   2e2c4:	str	r0, [r1]
   2e2c8:	ldr	r0, [fp, #-8]
   2e2cc:	ldr	r1, [r0, #16]
   2e2d0:	add	r1, r1, #1
   2e2d4:	str	r1, [r0, #16]
   2e2d8:	ldr	r0, [fp, #-8]
   2e2dc:	ldr	r1, [r0, #12]
   2e2e0:	add	r1, r1, #1
   2e2e4:	str	r1, [r0, #12]
   2e2e8:	movw	r0, #1
   2e2ec:	str	r0, [fp, #-4]
   2e2f0:	ldr	r0, [fp, #-4]
   2e2f4:	mov	sp, fp
   2e2f8:	pop	{fp, pc}
   2e2fc:	svcmi	0x00800000
   2e300:	push	{fp, lr}
   2e304:	mov	fp, sp
   2e308:	sub	sp, sp, #56	; 0x38
   2e30c:	str	r0, [fp, #-8]
   2e310:	str	r1, [fp, #-12]
   2e314:	str	r2, [fp, #-16]
   2e318:	and	r0, r3, #1
   2e31c:	strb	r0, [fp, #-17]	; 0xffffffef
   2e320:	ldr	r0, [fp, #-8]
   2e324:	ldr	r1, [fp, #-12]
   2e328:	bl	2d0e8 <__assert_fail@plt+0x1a530>
   2e32c:	str	r0, [fp, #-24]	; 0xffffffe8
   2e330:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2e334:	ldr	r1, [fp, #-16]
   2e338:	str	r0, [r1]
   2e33c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2e340:	ldr	r0, [r0]
   2e344:	movw	r1, #0
   2e348:	cmp	r0, r1
   2e34c:	bne	2e35c <__assert_fail@plt+0x1b7a4>
   2e350:	movw	r0, #0
   2e354:	str	r0, [fp, #-4]
   2e358:	b	2e4f0 <__assert_fail@plt+0x1b938>
   2e35c:	ldr	r0, [fp, #-12]
   2e360:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2e364:	ldr	r1, [r1]
   2e368:	cmp	r0, r1
   2e36c:	beq	2e3a0 <__assert_fail@plt+0x1b7e8>
   2e370:	ldr	r0, [fp, #-8]
   2e374:	ldr	r0, [r0, #28]
   2e378:	ldr	r1, [fp, #-12]
   2e37c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2e380:	ldr	r2, [r2]
   2e384:	str	r0, [sp, #8]
   2e388:	mov	r0, r1
   2e38c:	mov	r1, r2
   2e390:	ldr	r2, [sp, #8]
   2e394:	blx	r2
   2e398:	tst	r0, #1
   2e39c:	beq	2e41c <__assert_fail@plt+0x1b864>
   2e3a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2e3a4:	ldr	r0, [r0]
   2e3a8:	str	r0, [sp, #24]
   2e3ac:	ldrb	r0, [fp, #-17]	; 0xffffffef
   2e3b0:	tst	r0, #1
   2e3b4:	beq	2e410 <__assert_fail@plt+0x1b858>
   2e3b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2e3bc:	ldr	r0, [r0, #4]
   2e3c0:	movw	r1, #0
   2e3c4:	cmp	r0, r1
   2e3c8:	beq	2e400 <__assert_fail@plt+0x1b848>
   2e3cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2e3d0:	ldr	r0, [r0, #4]
   2e3d4:	str	r0, [sp, #20]
   2e3d8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2e3dc:	ldr	r1, [sp, #20]
   2e3e0:	ldr	r2, [r1]
   2e3e4:	str	r2, [r0]
   2e3e8:	ldr	r1, [r1, #4]
   2e3ec:	str	r1, [r0, #4]
   2e3f0:	ldr	r0, [fp, #-8]
   2e3f4:	ldr	r1, [sp, #20]
   2e3f8:	bl	2e950 <__assert_fail@plt+0x1bd98>
   2e3fc:	b	2e40c <__assert_fail@plt+0x1b854>
   2e400:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2e404:	movw	r1, #0
   2e408:	str	r1, [r0]
   2e40c:	b	2e410 <__assert_fail@plt+0x1b858>
   2e410:	ldr	r0, [sp, #24]
   2e414:	str	r0, [fp, #-4]
   2e418:	b	2e4f0 <__assert_fail@plt+0x1b938>
   2e41c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2e420:	str	r0, [sp, #28]
   2e424:	ldr	r0, [sp, #28]
   2e428:	ldr	r0, [r0, #4]
   2e42c:	movw	r1, #0
   2e430:	cmp	r0, r1
   2e434:	beq	2e4e8 <__assert_fail@plt+0x1b930>
   2e438:	ldr	r0, [fp, #-12]
   2e43c:	ldr	r1, [sp, #28]
   2e440:	ldr	r1, [r1, #4]
   2e444:	ldr	r1, [r1]
   2e448:	cmp	r0, r1
   2e44c:	beq	2e484 <__assert_fail@plt+0x1b8cc>
   2e450:	ldr	r0, [fp, #-8]
   2e454:	ldr	r0, [r0, #28]
   2e458:	ldr	r1, [fp, #-12]
   2e45c:	ldr	r2, [sp, #28]
   2e460:	ldr	r2, [r2, #4]
   2e464:	ldr	r2, [r2]
   2e468:	str	r0, [sp, #4]
   2e46c:	mov	r0, r1
   2e470:	mov	r1, r2
   2e474:	ldr	r2, [sp, #4]
   2e478:	blx	r2
   2e47c:	tst	r0, #1
   2e480:	beq	2e4d4 <__assert_fail@plt+0x1b91c>
   2e484:	ldr	r0, [sp, #28]
   2e488:	ldr	r0, [r0, #4]
   2e48c:	ldr	r0, [r0]
   2e490:	str	r0, [sp, #16]
   2e494:	ldrb	r0, [fp, #-17]	; 0xffffffef
   2e498:	tst	r0, #1
   2e49c:	beq	2e4c8 <__assert_fail@plt+0x1b910>
   2e4a0:	ldr	r0, [sp, #28]
   2e4a4:	ldr	r0, [r0, #4]
   2e4a8:	str	r0, [sp, #12]
   2e4ac:	ldr	r0, [sp, #12]
   2e4b0:	ldr	r0, [r0, #4]
   2e4b4:	ldr	r1, [sp, #28]
   2e4b8:	str	r0, [r1, #4]
   2e4bc:	ldr	r0, [fp, #-8]
   2e4c0:	ldr	r1, [sp, #12]
   2e4c4:	bl	2e950 <__assert_fail@plt+0x1bd98>
   2e4c8:	ldr	r0, [sp, #16]
   2e4cc:	str	r0, [fp, #-4]
   2e4d0:	b	2e4f0 <__assert_fail@plt+0x1b938>
   2e4d4:	b	2e4d8 <__assert_fail@plt+0x1b920>
   2e4d8:	ldr	r0, [sp, #28]
   2e4dc:	ldr	r0, [r0, #4]
   2e4e0:	str	r0, [sp, #28]
   2e4e4:	b	2e424 <__assert_fail@plt+0x1b86c>
   2e4e8:	movw	r0, #0
   2e4ec:	str	r0, [fp, #-4]
   2e4f0:	ldr	r0, [fp, #-4]
   2e4f4:	mov	sp, fp
   2e4f8:	pop	{fp, pc}
   2e4fc:	push	{fp, lr}
   2e500:	mov	fp, sp
   2e504:	sub	sp, sp, #8
   2e508:	str	r0, [sp, #4]
   2e50c:	ldr	r0, [sp, #4]
   2e510:	ldr	r0, [r0, #36]	; 0x24
   2e514:	movw	r1, #0
   2e518:	cmp	r0, r1
   2e51c:	beq	2e540 <__assert_fail@plt+0x1b988>
   2e520:	ldr	r0, [sp, #4]
   2e524:	ldr	r0, [r0, #36]	; 0x24
   2e528:	str	r0, [sp]
   2e52c:	ldr	r0, [sp]
   2e530:	ldr	r0, [r0, #4]
   2e534:	ldr	r1, [sp, #4]
   2e538:	str	r0, [r1, #36]	; 0x24
   2e53c:	b	2e54c <__assert_fail@plt+0x1b994>
   2e540:	movw	r0, #8
   2e544:	bl	549ac <__assert_fail@plt+0x41df4>
   2e548:	str	r0, [sp]
   2e54c:	ldr	r0, [sp]
   2e550:	mov	sp, fp
   2e554:	pop	{fp, pc}
   2e558:	push	{fp, lr}
   2e55c:	mov	fp, sp
   2e560:	sub	sp, sp, #24
   2e564:	str	r0, [fp, #-4]
   2e568:	str	r1, [fp, #-8]
   2e56c:	ldr	r0, [fp, #-4]
   2e570:	ldr	r1, [fp, #-8]
   2e574:	add	r2, sp, #12
   2e578:	bl	2e050 <__assert_fail@plt+0x1b498>
   2e57c:	str	r0, [sp, #8]
   2e580:	ldr	r0, [sp, #8]
   2e584:	cmn	r0, #1
   2e588:	bne	2e598 <__assert_fail@plt+0x1b9e0>
   2e58c:	movw	r0, #0
   2e590:	str	r0, [sp, #4]
   2e594:	b	2e5c0 <__assert_fail@plt+0x1ba08>
   2e598:	ldr	r0, [sp, #8]
   2e59c:	cmp	r0, #0
   2e5a0:	bne	2e5b0 <__assert_fail@plt+0x1b9f8>
   2e5a4:	ldr	r0, [sp, #12]
   2e5a8:	str	r0, [sp]
   2e5ac:	b	2e5b8 <__assert_fail@plt+0x1ba00>
   2e5b0:	ldr	r0, [fp, #-8]
   2e5b4:	str	r0, [sp]
   2e5b8:	ldr	r0, [sp]
   2e5bc:	str	r0, [sp, #4]
   2e5c0:	ldr	r0, [sp, #4]
   2e5c4:	mov	sp, fp
   2e5c8:	pop	{fp, pc}
   2e5cc:	push	{fp, lr}
   2e5d0:	mov	fp, sp
   2e5d4:	sub	sp, sp, #48	; 0x30
   2e5d8:	str	r0, [fp, #-8]
   2e5dc:	str	r1, [fp, #-12]
   2e5e0:	ldr	r0, [fp, #-8]
   2e5e4:	ldr	r1, [fp, #-12]
   2e5e8:	sub	r2, fp, #20
   2e5ec:	movw	r3, #1
   2e5f0:	and	r3, r3, #1
   2e5f4:	bl	2e300 <__assert_fail@plt+0x1b748>
   2e5f8:	str	r0, [fp, #-16]
   2e5fc:	ldr	r0, [fp, #-16]
   2e600:	movw	r1, #0
   2e604:	cmp	r0, r1
   2e608:	bne	2e618 <__assert_fail@plt+0x1ba60>
   2e60c:	movw	r0, #0
   2e610:	str	r0, [fp, #-4]
   2e614:	b	2e7c4 <__assert_fail@plt+0x1bc0c>
   2e618:	ldr	r0, [fp, #-8]
   2e61c:	ldr	r1, [r0, #16]
   2e620:	mvn	r2, #0
   2e624:	add	r1, r1, r2
   2e628:	str	r1, [r0, #16]
   2e62c:	ldr	r0, [fp, #-20]	; 0xffffffec
   2e630:	ldr	r0, [r0]
   2e634:	movw	r1, #0
   2e638:	cmp	r0, r1
   2e63c:	bne	2e7bc <__assert_fail@plt+0x1bc04>
   2e640:	ldr	r0, [fp, #-8]
   2e644:	ldr	r1, [r0, #12]
   2e648:	mvn	r2, #0
   2e64c:	add	r1, r1, r2
   2e650:	str	r1, [r0, #12]
   2e654:	ldr	r0, [fp, #-8]
   2e658:	ldr	r0, [r0, #12]
   2e65c:	vmov	s0, r0
   2e660:	vcvt.f32.u32	s0, s0
   2e664:	ldr	r0, [fp, #-8]
   2e668:	ldr	r0, [r0, #20]
   2e66c:	vldr	s2, [r0]
   2e670:	ldr	r0, [fp, #-8]
   2e674:	ldr	r0, [r0, #8]
   2e678:	vmov	s4, r0
   2e67c:	vcvt.f32.u32	s4, s4
   2e680:	vmul.f32	s2, s2, s4
   2e684:	vcmpe.f32	s0, s2
   2e688:	vmrs	APSR_nzcv, fpscr
   2e68c:	bpl	2e7b8 <__assert_fail@plt+0x1bc00>
   2e690:	ldr	r0, [fp, #-8]
   2e694:	bl	2d72c <__assert_fail@plt+0x1ab74>
   2e698:	ldr	lr, [fp, #-8]
   2e69c:	ldr	lr, [lr, #12]
   2e6a0:	vmov	s0, lr
   2e6a4:	vcvt.f32.u32	s0, s0
   2e6a8:	ldr	lr, [fp, #-8]
   2e6ac:	ldr	lr, [lr, #20]
   2e6b0:	vldr	s2, [lr]
   2e6b4:	ldr	lr, [fp, #-8]
   2e6b8:	ldr	lr, [lr, #8]
   2e6bc:	vmov	s4, lr
   2e6c0:	vcvt.f32.u32	s4, s4
   2e6c4:	vmul.f32	s2, s2, s4
   2e6c8:	vcmpe.f32	s0, s2
   2e6cc:	vmrs	APSR_nzcv, fpscr
   2e6d0:	str	r0, [sp, #8]
   2e6d4:	bpl	2e7b4 <__assert_fail@plt+0x1bbfc>
   2e6d8:	ldr	r0, [fp, #-8]
   2e6dc:	ldr	r0, [r0, #20]
   2e6e0:	str	r0, [sp, #24]
   2e6e4:	ldr	r0, [sp, #24]
   2e6e8:	ldrb	r0, [r0, #16]
   2e6ec:	tst	r0, #1
   2e6f0:	beq	2e718 <__assert_fail@plt+0x1bb60>
   2e6f4:	ldr	r0, [fp, #-8]
   2e6f8:	ldr	r0, [r0, #8]
   2e6fc:	vmov	s0, r0
   2e700:	vcvt.f32.u32	s0, s0
   2e704:	ldr	r0, [sp, #24]
   2e708:	vldr	s2, [r0, #4]
   2e70c:	vmul.f32	s0, s0, s2
   2e710:	vstr	s0, [sp, #4]
   2e714:	b	2e744 <__assert_fail@plt+0x1bb8c>
   2e718:	ldr	r0, [fp, #-8]
   2e71c:	ldr	r0, [r0, #8]
   2e720:	vmov	s0, r0
   2e724:	vcvt.f32.u32	s0, s0
   2e728:	ldr	r0, [sp, #24]
   2e72c:	vldr	s2, [r0, #4]
   2e730:	vmul.f32	s0, s0, s2
   2e734:	ldr	r0, [sp, #24]
   2e738:	vldr	s2, [r0, #8]
   2e73c:	vmul.f32	s0, s0, s2
   2e740:	vstr	s0, [sp, #4]
   2e744:	vldr	s0, [sp, #4]
   2e748:	vcvt.u32.f32	s0, s0
   2e74c:	vmov	r0, s0
   2e750:	str	r0, [sp, #20]
   2e754:	ldr	r0, [fp, #-8]
   2e758:	ldr	r1, [sp, #20]
   2e75c:	bl	2dc14 <__assert_fail@plt+0x1b05c>
   2e760:	tst	r0, #1
   2e764:	bne	2e7b0 <__assert_fail@plt+0x1bbf8>
   2e768:	ldr	r0, [fp, #-8]
   2e76c:	ldr	r0, [r0, #36]	; 0x24
   2e770:	str	r0, [sp, #16]
   2e774:	ldr	r0, [sp, #16]
   2e778:	movw	r1, #0
   2e77c:	cmp	r0, r1
   2e780:	beq	2e7a4 <__assert_fail@plt+0x1bbec>
   2e784:	ldr	r0, [sp, #16]
   2e788:	ldr	r0, [r0, #4]
   2e78c:	str	r0, [sp, #12]
   2e790:	ldr	r0, [sp, #16]
   2e794:	bl	50c68 <__assert_fail@plt+0x3e0b0>
   2e798:	ldr	r0, [sp, #12]
   2e79c:	str	r0, [sp, #16]
   2e7a0:	b	2e774 <__assert_fail@plt+0x1bbbc>
   2e7a4:	ldr	r0, [fp, #-8]
   2e7a8:	movw	r1, #0
   2e7ac:	str	r1, [r0, #36]	; 0x24
   2e7b0:	b	2e7b4 <__assert_fail@plt+0x1bbfc>
   2e7b4:	b	2e7b8 <__assert_fail@plt+0x1bc00>
   2e7b8:	b	2e7bc <__assert_fail@plt+0x1bc04>
   2e7bc:	ldr	r0, [fp, #-16]
   2e7c0:	str	r0, [fp, #-4]
   2e7c4:	ldr	r0, [fp, #-4]
   2e7c8:	mov	sp, fp
   2e7cc:	pop	{fp, pc}
   2e7d0:	push	{fp, lr}
   2e7d4:	mov	fp, sp
   2e7d8:	sub	sp, sp, #8
   2e7dc:	str	r0, [sp, #4]
   2e7e0:	str	r1, [sp]
   2e7e4:	ldr	r0, [sp, #4]
   2e7e8:	ldr	r1, [sp]
   2e7ec:	bl	2e5cc <__assert_fail@plt+0x1ba14>
   2e7f0:	mov	sp, fp
   2e7f4:	pop	{fp, pc}
   2e7f8:	push	{fp, lr}
   2e7fc:	mov	fp, sp
   2e800:	sub	sp, sp, #8
   2e804:	str	r0, [sp, #4]
   2e808:	ldr	r0, [sp, #4]
   2e80c:	cmp	r0, #10
   2e810:	bcs	2e81c <__assert_fail@plt+0x1bc64>
   2e814:	movw	r0, #10
   2e818:	str	r0, [sp, #4]
   2e81c:	ldr	r0, [sp, #4]
   2e820:	orr	r0, r0, #1
   2e824:	str	r0, [sp, #4]
   2e828:	ldr	r0, [sp, #4]
   2e82c:	mvn	r1, #0
   2e830:	cmp	r1, r0
   2e834:	movw	r0, #0
   2e838:	str	r0, [sp]
   2e83c:	beq	2e854 <__assert_fail@plt+0x1bc9c>
   2e840:	ldr	r0, [sp, #4]
   2e844:	bl	2e87c <__assert_fail@plt+0x1bcc4>
   2e848:	mvn	lr, #0
   2e84c:	eor	r0, r0, lr
   2e850:	str	r0, [sp]
   2e854:	ldr	r0, [sp]
   2e858:	tst	r0, #1
   2e85c:	beq	2e870 <__assert_fail@plt+0x1bcb8>
   2e860:	ldr	r0, [sp, #4]
   2e864:	add	r0, r0, #2
   2e868:	str	r0, [sp, #4]
   2e86c:	b	2e828 <__assert_fail@plt+0x1bc70>
   2e870:	ldr	r0, [sp, #4]
   2e874:	mov	sp, fp
   2e878:	pop	{fp, pc}
   2e87c:	sub	sp, sp, #16
   2e880:	str	r0, [sp, #12]
   2e884:	movw	r0, #3
   2e888:	str	r0, [sp, #8]
   2e88c:	ldr	r0, [sp, #8]
   2e890:	ldr	r1, [sp, #8]
   2e894:	mul	r0, r0, r1
   2e898:	str	r0, [sp, #4]
   2e89c:	ldr	r0, [sp, #4]
   2e8a0:	ldr	r1, [sp, #12]
   2e8a4:	cmp	r0, r1
   2e8a8:	movw	r0, #0
   2e8ac:	str	r0, [sp]
   2e8b0:	bcs	2e8d4 <__assert_fail@plt+0x1bd1c>
   2e8b4:	ldr	r0, [sp, #12]
   2e8b8:	ldr	r1, [sp, #8]
   2e8bc:	udiv	r2, r0, r1
   2e8c0:	mls	r0, r2, r1, r0
   2e8c4:	cmp	r0, #0
   2e8c8:	movw	r0, #0
   2e8cc:	movne	r0, #1
   2e8d0:	str	r0, [sp]
   2e8d4:	ldr	r0, [sp]
   2e8d8:	tst	r0, #1
   2e8dc:	beq	2e910 <__assert_fail@plt+0x1bd58>
   2e8e0:	ldr	r0, [sp, #8]
   2e8e4:	add	r0, r0, #1
   2e8e8:	str	r0, [sp, #8]
   2e8ec:	ldr	r0, [sp, #8]
   2e8f0:	lsl	r0, r0, #2
   2e8f4:	ldr	r1, [sp, #4]
   2e8f8:	add	r0, r1, r0
   2e8fc:	str	r0, [sp, #4]
   2e900:	ldr	r0, [sp, #8]
   2e904:	add	r0, r0, #1
   2e908:	str	r0, [sp, #8]
   2e90c:	b	2e89c <__assert_fail@plt+0x1bce4>
   2e910:	ldr	r0, [sp, #12]
   2e914:	ldr	r1, [sp, #8]
   2e918:	udiv	r2, r0, r1
   2e91c:	mls	r0, r2, r1, r0
   2e920:	cmp	r0, #0
   2e924:	movw	r0, #0
   2e928:	movne	r0, #1
   2e92c:	tst	r0, #1
   2e930:	movw	r0, #1
   2e934:	moveq	r0, #0
   2e938:	cmp	r0, #0
   2e93c:	movw	r0, #0
   2e940:	movne	r0, #1
   2e944:	and	r0, r0, #1
   2e948:	add	sp, sp, #16
   2e94c:	bx	lr
   2e950:	sub	sp, sp, #8
   2e954:	str	r0, [sp, #4]
   2e958:	str	r1, [sp]
   2e95c:	ldr	r0, [sp]
   2e960:	movw	r1, #0
   2e964:	str	r1, [r0]
   2e968:	ldr	r0, [sp, #4]
   2e96c:	ldr	r0, [r0, #36]	; 0x24
   2e970:	ldr	r1, [sp]
   2e974:	str	r0, [r1, #4]
   2e978:	ldr	r0, [sp]
   2e97c:	ldr	r1, [sp, #4]
   2e980:	str	r0, [r1, #36]	; 0x24
   2e984:	add	sp, sp, #8
   2e988:	bx	lr
   2e98c:	andeq	r0, r0, r0
   2e990:	push	{r4, r5, fp, lr}
   2e994:	add	fp, sp, #8
   2e998:	sub	sp, sp, #376	; 0x178
   2e99c:	ldr	ip, [fp, #20]
   2e9a0:	ldr	lr, [fp, #16]
   2e9a4:	ldr	r4, [fp, #12]
   2e9a8:	ldr	r5, [fp, #8]
   2e9ac:	str	r0, [fp, #-16]
   2e9b0:	str	r1, [fp, #-12]
   2e9b4:	str	r2, [fp, #-20]	; 0xffffffec
   2e9b8:	str	r3, [fp, #-24]	; 0xffffffe8
   2e9bc:	str	r4, [fp, #-28]	; 0xffffffe4
   2e9c0:	str	r5, [fp, #-32]	; 0xffffffe0
   2e9c4:	str	ip, [fp, #-36]	; 0xffffffdc
   2e9c8:	str	lr, [fp, #-40]	; 0xffffffd8
   2e9cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2e9d0:	and	r0, r0, #3
   2e9d4:	str	r0, [fp, #-44]	; 0xffffffd4
   2e9d8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2e9dc:	and	r0, r0, #32
   2e9e0:	cmp	r0, #0
   2e9e4:	movw	r0, #0
   2e9e8:	movne	r0, #1
   2e9ec:	tst	r0, #1
   2e9f0:	movw	r0, #1024	; 0x400
   2e9f4:	moveq	r0, #1000	; 0x3e8
   2e9f8:	str	r0, [fp, #-48]	; 0xffffffd0
   2e9fc:	mvn	r0, #0
   2ea00:	str	r0, [fp, #-64]	; 0xffffffc0
   2ea04:	movw	r0, #8
   2ea08:	str	r0, [fp, #-68]	; 0xffffffbc
   2ea0c:	movw	r0, #35940	; 0x8c64
   2ea10:	movt	r0, #7
   2ea14:	str	r0, [fp, #-88]	; 0xffffffa8
   2ea18:	movw	r0, #1
   2ea1c:	str	r0, [fp, #-92]	; 0xffffffa4
   2ea20:	movw	r0, #39197	; 0x991d
   2ea24:	movt	r0, #7
   2ea28:	str	r0, [fp, #-96]	; 0xffffffa0
   2ea2c:	str	r0, [fp, #-100]	; 0xffffff9c
   2ea30:	bl	12a50 <localeconv@plt>
   2ea34:	str	r0, [fp, #-104]	; 0xffffff98
   2ea38:	ldr	r0, [fp, #-104]	; 0xffffff98
   2ea3c:	ldr	r0, [r0]
   2ea40:	bl	12888 <strlen@plt>
   2ea44:	str	r0, [fp, #-108]	; 0xffffff94
   2ea48:	ldr	r0, [fp, #-108]	; 0xffffff94
   2ea4c:	movw	r1, #0
   2ea50:	cmp	r1, r0
   2ea54:	bcs	2ea78 <__assert_fail@plt+0x1bec0>
   2ea58:	ldr	r0, [fp, #-108]	; 0xffffff94
   2ea5c:	cmp	r0, #16
   2ea60:	bhi	2ea78 <__assert_fail@plt+0x1bec0>
   2ea64:	ldr	r0, [fp, #-104]	; 0xffffff98
   2ea68:	ldr	r0, [r0]
   2ea6c:	str	r0, [fp, #-88]	; 0xffffffa8
   2ea70:	ldr	r0, [fp, #-108]	; 0xffffff94
   2ea74:	str	r0, [fp, #-92]	; 0xffffffa4
   2ea78:	ldr	r0, [fp, #-104]	; 0xffffff98
   2ea7c:	ldr	r0, [r0, #8]
   2ea80:	str	r0, [fp, #-96]	; 0xffffffa0
   2ea84:	ldr	r0, [fp, #-104]	; 0xffffff98
   2ea88:	ldr	r0, [r0, #4]
   2ea8c:	bl	12888 <strlen@plt>
   2ea90:	cmp	r0, #16
   2ea94:	bhi	2eaa4 <__assert_fail@plt+0x1beec>
   2ea98:	ldr	r0, [fp, #-104]	; 0xffffff98
   2ea9c:	ldr	r0, [r0, #4]
   2eaa0:	str	r0, [fp, #-100]	; 0xffffff9c
   2eaa4:	ldr	r0, [fp, #-20]	; 0xffffffec
   2eaa8:	movw	r1, #647	; 0x287
   2eaac:	add	r0, r0, r1
   2eab0:	str	r0, [fp, #-76]	; 0xffffffb4
   2eab4:	ldr	r0, [fp, #-76]	; 0xffffffb4
   2eab8:	str	r0, [fp, #-72]	; 0xffffffb8
   2eabc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2eac0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2eac4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   2eac8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2eacc:	subs	r0, r2, r0
   2ead0:	sbcs	r1, r3, r1
   2ead4:	str	r0, [sp, #180]	; 0xb4
   2ead8:	str	r1, [sp, #176]	; 0xb0
   2eadc:	bcc	2eb9c <__assert_fail@plt+0x1bfe4>
   2eae0:	b	2eae4 <__assert_fail@plt+0x1bf2c>
   2eae4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2eae8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2eaec:	ldr	r2, [fp, #-40]	; 0xffffffd8
   2eaf0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2eaf4:	bl	77854 <__assert_fail@plt+0x64c9c>
   2eaf8:	orr	r2, r2, r3
   2eafc:	cmp	r2, #0
   2eb00:	str	r0, [sp, #172]	; 0xac
   2eb04:	str	r1, [sp, #168]	; 0xa8
   2eb08:	bne	2eb98 <__assert_fail@plt+0x1bfe0>
   2eb0c:	b	2eb10 <__assert_fail@plt+0x1bf58>
   2eb10:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2eb14:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2eb18:	ldr	r2, [fp, #-40]	; 0xffffffd8
   2eb1c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2eb20:	bl	77854 <__assert_fail@plt+0x64c9c>
   2eb24:	str	r1, [fp, #-116]	; 0xffffff8c
   2eb28:	str	r0, [fp, #-120]	; 0xffffff88
   2eb2c:	ldr	r0, [fp, #-16]
   2eb30:	ldr	r1, [fp, #-12]
   2eb34:	ldr	r2, [fp, #-120]	; 0xffffff88
   2eb38:	ldr	r3, [fp, #-116]	; 0xffffff8c
   2eb3c:	umull	lr, ip, r0, r2
   2eb40:	mla	r0, r0, r3, ip
   2eb44:	mla	r0, r1, r2, r0
   2eb48:	str	lr, [fp, #-56]	; 0xffffffc8
   2eb4c:	str	r0, [fp, #-52]	; 0xffffffcc
   2eb50:	ldr	r0, [fp, #-56]	; 0xffffffc8
   2eb54:	ldr	r1, [fp, #-52]	; 0xffffffcc
   2eb58:	ldr	r2, [fp, #-120]	; 0xffffff88
   2eb5c:	ldr	r3, [fp, #-116]	; 0xffffff8c
   2eb60:	bl	77854 <__assert_fail@plt+0x64c9c>
   2eb64:	ldr	r2, [fp, #-16]
   2eb68:	ldr	r3, [fp, #-12]
   2eb6c:	eor	r1, r1, r3
   2eb70:	eor	r0, r0, r2
   2eb74:	orr	r0, r0, r1
   2eb78:	cmp	r0, #0
   2eb7c:	bne	2eb94 <__assert_fail@plt+0x1bfdc>
   2eb80:	b	2eb84 <__assert_fail@plt+0x1bfcc>
   2eb84:	movw	r0, #0
   2eb88:	str	r0, [fp, #-60]	; 0xffffffc4
   2eb8c:	str	r0, [fp, #-84]	; 0xffffffac
   2eb90:	b	2efdc <__assert_fail@plt+0x1c424>
   2eb94:	b	2eb98 <__assert_fail@plt+0x1bfe0>
   2eb98:	b	2ed40 <__assert_fail@plt+0x1c188>
   2eb9c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2eba0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2eba4:	orr	r0, r0, r1
   2eba8:	cmp	r0, #0
   2ebac:	beq	2ed3c <__assert_fail@plt+0x1c184>
   2ebb0:	b	2ebb4 <__assert_fail@plt+0x1bffc>
   2ebb4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2ebb8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2ebbc:	ldr	r2, [fp, #-32]	; 0xffffffe0
   2ebc0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2ebc4:	bl	77854 <__assert_fail@plt+0x64c9c>
   2ebc8:	orr	r2, r2, r3
   2ebcc:	cmp	r2, #0
   2ebd0:	str	r0, [sp, #164]	; 0xa4
   2ebd4:	str	r1, [sp, #160]	; 0xa0
   2ebd8:	bne	2ed3c <__assert_fail@plt+0x1c184>
   2ebdc:	b	2ebe0 <__assert_fail@plt+0x1c028>
   2ebe0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2ebe4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2ebe8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   2ebec:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2ebf0:	bl	77854 <__assert_fail@plt+0x64c9c>
   2ebf4:	str	r1, [fp, #-124]	; 0xffffff84
   2ebf8:	str	r0, [fp, #-128]	; 0xffffff80
   2ebfc:	ldr	r0, [fp, #-16]
   2ec00:	ldr	r1, [fp, #-12]
   2ec04:	ldr	r2, [fp, #-128]	; 0xffffff80
   2ec08:	ldr	r3, [fp, #-124]	; 0xffffff84
   2ec0c:	bl	77854 <__assert_fail@plt+0x64c9c>
   2ec10:	mov	lr, #10
   2ec14:	umull	r2, lr, r2, lr
   2ec18:	add	r3, r3, r3, lsl #2
   2ec1c:	add	r3, lr, r3, lsl #1
   2ec20:	str	r2, [fp, #-136]	; 0xffffff78
   2ec24:	str	r3, [fp, #-132]	; 0xffffff7c
   2ec28:	ldr	r2, [fp, #-136]	; 0xffffff78
   2ec2c:	ldr	r3, [fp, #-132]	; 0xffffff7c
   2ec30:	ldr	lr, [fp, #-128]	; 0xffffff80
   2ec34:	ldr	ip, [fp, #-124]	; 0xffffff84
   2ec38:	str	r0, [sp, #156]	; 0x9c
   2ec3c:	mov	r0, r2
   2ec40:	str	r1, [sp, #152]	; 0x98
   2ec44:	mov	r1, r3
   2ec48:	mov	r2, lr
   2ec4c:	mov	r3, ip
   2ec50:	bl	77854 <__assert_fail@plt+0x64c9c>
   2ec54:	lsl	r3, r3, #1
   2ec58:	orr	r3, r3, r2, lsr #31
   2ec5c:	lsl	r2, r2, #1
   2ec60:	str	r2, [fp, #-144]	; 0xffffff70
   2ec64:	str	r3, [fp, #-140]	; 0xffffff74
   2ec68:	ldr	r2, [fp, #-16]
   2ec6c:	ldr	r3, [fp, #-12]
   2ec70:	ldr	ip, [fp, #-128]	; 0xffffff80
   2ec74:	ldr	lr, [fp, #-124]	; 0xffffff84
   2ec78:	str	r0, [sp, #148]	; 0x94
   2ec7c:	mov	r0, r2
   2ec80:	str	r1, [sp, #144]	; 0x90
   2ec84:	mov	r1, r3
   2ec88:	mov	r2, ip
   2ec8c:	mov	r3, lr
   2ec90:	bl	77854 <__assert_fail@plt+0x64c9c>
   2ec94:	str	r1, [fp, #-52]	; 0xffffffcc
   2ec98:	str	r0, [fp, #-56]	; 0xffffffc8
   2ec9c:	ldr	r0, [fp, #-136]	; 0xffffff78
   2eca0:	ldr	r1, [fp, #-132]	; 0xffffff7c
   2eca4:	ldr	r2, [fp, #-128]	; 0xffffff80
   2eca8:	ldr	r3, [fp, #-124]	; 0xffffff84
   2ecac:	bl	77854 <__assert_fail@plt+0x64c9c>
   2ecb0:	str	r0, [fp, #-60]	; 0xffffffc4
   2ecb4:	ldr	r0, [fp, #-144]	; 0xffffff70
   2ecb8:	ldr	r1, [fp, #-140]	; 0xffffff74
   2ecbc:	ldr	r2, [fp, #-128]	; 0xffffff80
   2ecc0:	ldr	r3, [fp, #-124]	; 0xffffff84
   2ecc4:	subs	r0, r0, r2
   2ecc8:	sbcs	r1, r1, r3
   2eccc:	str	r0, [sp, #140]	; 0x8c
   2ecd0:	str	r1, [sp, #136]	; 0x88
   2ecd4:	bcs	2ecfc <__assert_fail@plt+0x1c144>
   2ecd8:	b	2ecdc <__assert_fail@plt+0x1c124>
   2ecdc:	ldr	r0, [fp, #-144]	; 0xffffff70
   2ece0:	ldr	r1, [fp, #-140]	; 0xffffff74
   2ece4:	orr	r0, r0, r1
   2ece8:	cmp	r0, #0
   2ecec:	movwne	r0, #1
   2ecf0:	and	r0, r0, #1
   2ecf4:	str	r0, [sp, #132]	; 0x84
   2ecf8:	b	2ed30 <__assert_fail@plt+0x1c178>
   2ecfc:	ldr	r0, [fp, #-128]	; 0xffffff80
   2ed00:	ldr	r1, [fp, #-124]	; 0xffffff84
   2ed04:	ldr	r2, [fp, #-144]	; 0xffffff70
   2ed08:	ldr	r3, [fp, #-140]	; 0xffffff74
   2ed0c:	subs	r0, r0, r2
   2ed10:	sbcs	r1, r1, r3
   2ed14:	mov	r2, #0
   2ed18:	movwcc	r2, #1
   2ed1c:	and	r2, r2, #1
   2ed20:	add	r2, r2, #2
   2ed24:	str	r0, [sp, #128]	; 0x80
   2ed28:	str	r1, [sp, #124]	; 0x7c
   2ed2c:	str	r2, [sp, #132]	; 0x84
   2ed30:	ldr	r0, [sp, #132]	; 0x84
   2ed34:	str	r0, [fp, #-84]	; 0xffffffac
   2ed38:	b	2efdc <__assert_fail@plt+0x1c424>
   2ed3c:	b	2ed40 <__assert_fail@plt+0x1c188>
   2ed40:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2ed44:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2ed48:	bl	7770c <__assert_fail@plt+0x64b54>
   2ed4c:	str	r0, [fp, #-152]	; 0xffffff68
   2ed50:	str	r1, [fp, #-148]	; 0xffffff6c
   2ed54:	ldr	r0, [fp, #-16]
   2ed58:	ldr	r1, [fp, #-12]
   2ed5c:	bl	7770c <__assert_fail@plt+0x64b54>
   2ed60:	vmov	d16, r0, r1
   2ed64:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2ed68:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2ed6c:	vstr	d16, [sp, #112]	; 0x70
   2ed70:	bl	7770c <__assert_fail@plt+0x64b54>
   2ed74:	vmov	d16, r0, r1
   2ed78:	vldr	d17, [fp, #-152]	; 0xffffff68
   2ed7c:	vdiv.f64	d16, d16, d17
   2ed80:	vldr	d17, [sp, #112]	; 0x70
   2ed84:	vmul.f64	d16, d17, d16
   2ed88:	vstr	d16, [fp, #-160]	; 0xffffff60
   2ed8c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2ed90:	and	r0, r0, #16
   2ed94:	cmp	r0, #0
   2ed98:	bne	2ede8 <__assert_fail@plt+0x1c230>
   2ed9c:	ldr	r0, [fp, #-20]	; 0xffffffec
   2eda0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   2eda4:	vldr	d0, [fp, #-160]	; 0xffffff60
   2eda8:	str	r0, [sp, #108]	; 0x6c
   2edac:	mov	r0, r1
   2edb0:	bl	2f640 <__assert_fail@plt+0x1ca88>
   2edb4:	ldr	r0, [sp, #108]	; 0x6c
   2edb8:	movw	r1, #50268	; 0xc45c
   2edbc:	movt	r1, #7
   2edc0:	vmov	r2, r3, d0
   2edc4:	bl	12a5c <sprintf@plt>
   2edc8:	ldr	r1, [fp, #-20]	; 0xffffffec
   2edcc:	str	r0, [sp, #104]	; 0x68
   2edd0:	mov	r0, r1
   2edd4:	bl	12888 <strlen@plt>
   2edd8:	str	r0, [fp, #-164]	; 0xffffff5c
   2eddc:	movw	r0, #0
   2ede0:	str	r0, [fp, #-168]	; 0xffffff58
   2ede4:	b	2ef88 <__assert_fail@plt+0x1c3d0>
   2ede8:	vmov.f64	d16, #112	; 0x3f800000  1.0
   2edec:	vstr	d16, [fp, #-176]	; 0xffffff50
   2edf0:	movw	r0, #0
   2edf4:	str	r0, [fp, #-64]	; 0xffffffc0
   2edf8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   2edfc:	vmov	s0, r0
   2ee00:	vcvt.f64.u32	d16, s0
   2ee04:	vldr	d17, [fp, #-176]	; 0xffffff50
   2ee08:	vmul.f64	d16, d17, d16
   2ee0c:	vstr	d16, [fp, #-176]	; 0xffffff50
   2ee10:	ldr	r0, [fp, #-64]	; 0xffffffc0
   2ee14:	add	r0, r0, #1
   2ee18:	str	r0, [fp, #-64]	; 0xffffffc0
   2ee1c:	vldr	d16, [fp, #-176]	; 0xffffff50
   2ee20:	ldr	r0, [fp, #-48]	; 0xffffffd0
   2ee24:	vmov	s0, r0
   2ee28:	vcvt.f64.u32	d17, s0
   2ee2c:	vmul.f64	d16, d16, d17
   2ee30:	vldr	d17, [fp, #-160]	; 0xffffff60
   2ee34:	vcmpe.f64	d16, d17
   2ee38:	vmrs	APSR_nzcv, fpscr
   2ee3c:	movw	r0, #0
   2ee40:	str	r0, [sp, #100]	; 0x64
   2ee44:	bhi	2ee60 <__assert_fail@plt+0x1c2a8>
   2ee48:	ldr	r0, [fp, #-64]	; 0xffffffc0
   2ee4c:	ldr	r1, [fp, #-68]	; 0xffffffbc
   2ee50:	cmp	r0, r1
   2ee54:	movw	r0, #0
   2ee58:	movlt	r0, #1
   2ee5c:	str	r0, [sp, #100]	; 0x64
   2ee60:	ldr	r0, [sp, #100]	; 0x64
   2ee64:	tst	r0, #1
   2ee68:	bne	2edf8 <__assert_fail@plt+0x1c240>
   2ee6c:	vldr	d16, [fp, #-176]	; 0xffffff50
   2ee70:	vldr	d17, [fp, #-160]	; 0xffffff60
   2ee74:	vdiv.f64	d16, d17, d16
   2ee78:	vstr	d16, [fp, #-160]	; 0xffffff60
   2ee7c:	ldr	r0, [fp, #-20]	; 0xffffffec
   2ee80:	ldr	r1, [fp, #-44]	; 0xffffffd4
   2ee84:	vldr	d0, [fp, #-160]	; 0xffffff60
   2ee88:	str	r0, [sp, #96]	; 0x60
   2ee8c:	mov	r0, r1
   2ee90:	bl	2f640 <__assert_fail@plt+0x1ca88>
   2ee94:	ldr	r0, [sp, #96]	; 0x60
   2ee98:	movw	r1, #50274	; 0xc462
   2ee9c:	movt	r1, #7
   2eea0:	vmov	r2, r3, d0
   2eea4:	bl	12a5c <sprintf@plt>
   2eea8:	ldr	r1, [fp, #-20]	; 0xffffffec
   2eeac:	str	r0, [sp, #92]	; 0x5c
   2eeb0:	mov	r0, r1
   2eeb4:	bl	12888 <strlen@plt>
   2eeb8:	str	r0, [fp, #-164]	; 0xffffff5c
   2eebc:	ldr	r0, [fp, #-92]	; 0xffffffa4
   2eec0:	add	r0, r0, #1
   2eec4:	str	r0, [fp, #-168]	; 0xffffff58
   2eec8:	ldr	r0, [fp, #-168]	; 0xffffff58
   2eecc:	add	r0, r0, #1
   2eed0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2eed4:	and	r1, r1, #32
   2eed8:	cmp	r1, #0
   2eedc:	movw	r1, #0
   2eee0:	movne	r1, #1
   2eee4:	mvn	r2, #0
   2eee8:	eor	r1, r1, r2
   2eeec:	and	r1, r1, #1
   2eef0:	add	r0, r0, r1
   2eef4:	ldr	r1, [fp, #-164]	; 0xffffff5c
   2eef8:	cmp	r0, r1
   2eefc:	bcc	2ef2c <__assert_fail@plt+0x1c374>
   2ef00:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2ef04:	and	r0, r0, #8
   2ef08:	cmp	r0, #0
   2ef0c:	beq	2ef84 <__assert_fail@plt+0x1c3cc>
   2ef10:	ldr	r0, [fp, #-20]	; 0xffffffec
   2ef14:	ldr	r1, [fp, #-164]	; 0xffffff5c
   2ef18:	sub	r1, r1, #1
   2ef1c:	add	r0, r0, r1
   2ef20:	ldrb	r0, [r0]
   2ef24:	cmp	r0, #48	; 0x30
   2ef28:	bne	2ef84 <__assert_fail@plt+0x1c3cc>
   2ef2c:	ldr	r0, [fp, #-20]	; 0xffffffec
   2ef30:	ldr	r1, [fp, #-44]	; 0xffffffd4
   2ef34:	vldr	d16, [fp, #-160]	; 0xffffff60
   2ef38:	vmov.f64	d17, #36	; 0x41200000  10.0
   2ef3c:	vmul.f64	d0, d16, d17
   2ef40:	str	r0, [sp, #88]	; 0x58
   2ef44:	mov	r0, r1
   2ef48:	bl	2f640 <__assert_fail@plt+0x1ca88>
   2ef4c:	vmov.f64	d16, #36	; 0x41200000  10.0
   2ef50:	vdiv.f64	d16, d0, d16
   2ef54:	ldr	r0, [sp, #88]	; 0x58
   2ef58:	movw	r1, #50268	; 0xc45c
   2ef5c:	movt	r1, #7
   2ef60:	vmov	r2, r3, d16
   2ef64:	bl	12a5c <sprintf@plt>
   2ef68:	ldr	r1, [fp, #-20]	; 0xffffffec
   2ef6c:	str	r0, [sp, #84]	; 0x54
   2ef70:	mov	r0, r1
   2ef74:	bl	12888 <strlen@plt>
   2ef78:	str	r0, [fp, #-164]	; 0xffffff5c
   2ef7c:	movw	r0, #0
   2ef80:	str	r0, [fp, #-168]	; 0xffffff58
   2ef84:	b	2ef88 <__assert_fail@plt+0x1c3d0>
   2ef88:	ldr	r0, [fp, #-76]	; 0xffffffb4
   2ef8c:	ldr	r1, [fp, #-164]	; 0xffffff5c
   2ef90:	movw	r2, #0
   2ef94:	sub	r1, r2, r1
   2ef98:	add	r0, r0, r1
   2ef9c:	str	r0, [fp, #-72]	; 0xffffffb8
   2efa0:	ldr	r0, [fp, #-72]	; 0xffffffb8
   2efa4:	ldr	r1, [fp, #-20]	; 0xffffffec
   2efa8:	ldr	r3, [fp, #-164]	; 0xffffff5c
   2efac:	str	r2, [sp, #80]	; 0x50
   2efb0:	mov	r2, r3
   2efb4:	bl	12558 <memmove@plt>
   2efb8:	ldr	r0, [fp, #-72]	; 0xffffffb8
   2efbc:	ldr	r1, [fp, #-164]	; 0xffffff5c
   2efc0:	add	r0, r0, r1
   2efc4:	ldr	r1, [fp, #-168]	; 0xffffff58
   2efc8:	ldr	r2, [sp, #80]	; 0x50
   2efcc:	sub	r1, r2, r1
   2efd0:	add	r0, r0, r1
   2efd4:	str	r0, [fp, #-80]	; 0xffffffb0
   2efd8:	b	2f464 <__assert_fail@plt+0x1c8ac>
   2efdc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2efe0:	and	r0, r0, #16
   2efe4:	cmp	r0, #0
   2efe8:	beq	2f2b0 <__assert_fail@plt+0x1c6f8>
   2efec:	mov	r0, #0
   2eff0:	str	r0, [fp, #-64]	; 0xffffffc0
   2eff4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   2eff8:	ldr	r1, [fp, #-56]	; 0xffffffc8
   2effc:	ldr	r2, [fp, #-52]	; 0xffffffcc
   2f000:	subs	r0, r1, r0
   2f004:	sbcs	r1, r2, #0
   2f008:	str	r0, [sp, #76]	; 0x4c
   2f00c:	str	r1, [sp, #72]	; 0x48
   2f010:	bcc	2f2ac <__assert_fail@plt+0x1c6f4>
   2f014:	b	2f018 <__assert_fail@plt+0x1c460>
   2f018:	b	2f01c <__assert_fail@plt+0x1c464>
   2f01c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   2f020:	ldr	r1, [fp, #-52]	; 0xffffffcc
   2f024:	ldr	r2, [fp, #-48]	; 0xffffffd0
   2f028:	mov	r3, #0
   2f02c:	str	r3, [sp, #68]	; 0x44
   2f030:	bl	77854 <__assert_fail@plt+0x64c9c>
   2f034:	add	r2, r2, r2, lsl #2
   2f038:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2f03c:	add	r2, r3, r2, lsl #1
   2f040:	str	r2, [fp, #-180]	; 0xffffff4c
   2f044:	ldr	r2, [fp, #-180]	; 0xffffff4c
   2f048:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2f04c:	udiv	lr, r2, r3
   2f050:	mls	r2, lr, r3, r2
   2f054:	lsl	r2, r2, #1
   2f058:	ldr	r3, [fp, #-84]	; 0xffffffac
   2f05c:	add	r2, r2, r3, asr #1
   2f060:	str	r2, [fp, #-184]	; 0xffffff48
   2f064:	ldr	r2, [fp, #-48]	; 0xffffffd0
   2f068:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2f06c:	ldr	lr, [fp, #-52]	; 0xffffffcc
   2f070:	str	r0, [sp, #64]	; 0x40
   2f074:	mov	r0, r3
   2f078:	str	r1, [sp, #60]	; 0x3c
   2f07c:	mov	r1, lr
   2f080:	ldr	r3, [sp, #68]	; 0x44
   2f084:	bl	77854 <__assert_fail@plt+0x64c9c>
   2f088:	str	r1, [fp, #-52]	; 0xffffffcc
   2f08c:	str	r0, [fp, #-56]	; 0xffffffc8
   2f090:	ldr	r0, [fp, #-180]	; 0xffffff4c
   2f094:	ldr	r1, [fp, #-48]	; 0xffffffd0
   2f098:	udiv	r0, r0, r1
   2f09c:	str	r0, [fp, #-60]	; 0xffffffc4
   2f0a0:	ldr	r0, [fp, #-184]	; 0xffffff48
   2f0a4:	ldr	r1, [fp, #-48]	; 0xffffffd0
   2f0a8:	cmp	r0, r1
   2f0ac:	bcs	2f0d4 <__assert_fail@plt+0x1c51c>
   2f0b0:	ldr	r0, [fp, #-184]	; 0xffffff48
   2f0b4:	ldr	r1, [fp, #-84]	; 0xffffffac
   2f0b8:	add	r0, r0, r1
   2f0bc:	cmp	r0, #0
   2f0c0:	movw	r0, #0
   2f0c4:	movne	r0, #1
   2f0c8:	and	r0, r0, #1
   2f0cc:	str	r0, [sp, #56]	; 0x38
   2f0d0:	b	2f0fc <__assert_fail@plt+0x1c544>
   2f0d4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   2f0d8:	ldr	r1, [fp, #-184]	; 0xffffff48
   2f0dc:	ldr	r2, [fp, #-84]	; 0xffffffac
   2f0e0:	add	r1, r1, r2
   2f0e4:	cmp	r0, r1
   2f0e8:	movw	r0, #0
   2f0ec:	movcc	r0, #1
   2f0f0:	and	r0, r0, #1
   2f0f4:	add	r0, r0, #2
   2f0f8:	str	r0, [sp, #56]	; 0x38
   2f0fc:	ldr	r0, [sp, #56]	; 0x38
   2f100:	str	r0, [fp, #-84]	; 0xffffffac
   2f104:	ldr	r0, [fp, #-64]	; 0xffffffc0
   2f108:	add	r0, r0, #1
   2f10c:	str	r0, [fp, #-64]	; 0xffffffc0
   2f110:	ldr	r0, [fp, #-48]	; 0xffffffd0
   2f114:	ldr	r1, [fp, #-56]	; 0xffffffc8
   2f118:	ldr	r2, [fp, #-52]	; 0xffffffcc
   2f11c:	mov	r3, #0
   2f120:	subs	r0, r1, r0
   2f124:	sbcs	r1, r2, #0
   2f128:	str	r0, [sp, #52]	; 0x34
   2f12c:	str	r1, [sp, #48]	; 0x30
   2f130:	str	r3, [sp, #44]	; 0x2c
   2f134:	bcc	2f154 <__assert_fail@plt+0x1c59c>
   2f138:	b	2f13c <__assert_fail@plt+0x1c584>
   2f13c:	ldr	r0, [fp, #-64]	; 0xffffffc0
   2f140:	ldr	r1, [fp, #-68]	; 0xffffffbc
   2f144:	cmp	r0, r1
   2f148:	movw	r0, #0
   2f14c:	movlt	r0, #1
   2f150:	str	r0, [sp, #44]	; 0x2c
   2f154:	ldr	r0, [sp, #44]	; 0x2c
   2f158:	tst	r0, #1
   2f15c:	bne	2f01c <__assert_fail@plt+0x1c464>
   2f160:	ldr	r0, [fp, #-56]	; 0xffffffc8
   2f164:	ldr	r1, [fp, #-52]	; 0xffffffcc
   2f168:	rsbs	r0, r0, #9
   2f16c:	rscs	r1, r1, #0
   2f170:	str	r0, [sp, #40]	; 0x28
   2f174:	str	r1, [sp, #36]	; 0x24
   2f178:	bcc	2f2a8 <__assert_fail@plt+0x1c6f0>
   2f17c:	b	2f180 <__assert_fail@plt+0x1c5c8>
   2f180:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2f184:	cmp	r0, #1
   2f188:	bne	2f1ac <__assert_fail@plt+0x1c5f4>
   2f18c:	ldr	r0, [fp, #-84]	; 0xffffffac
   2f190:	ldr	r1, [fp, #-60]	; 0xffffffc4
   2f194:	and	r1, r1, #1
   2f198:	add	r0, r0, r1
   2f19c:	movw	r1, #2
   2f1a0:	cmp	r1, r0
   2f1a4:	blt	2f1c8 <__assert_fail@plt+0x1c610>
   2f1a8:	b	2f20c <__assert_fail@plt+0x1c654>
   2f1ac:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2f1b0:	cmp	r0, #0
   2f1b4:	bne	2f20c <__assert_fail@plt+0x1c654>
   2f1b8:	ldr	r0, [fp, #-84]	; 0xffffffac
   2f1bc:	movw	r1, #0
   2f1c0:	cmp	r1, r0
   2f1c4:	bge	2f20c <__assert_fail@plt+0x1c654>
   2f1c8:	ldr	r0, [fp, #-60]	; 0xffffffc4
   2f1cc:	add	r0, r0, #1
   2f1d0:	str	r0, [fp, #-60]	; 0xffffffc4
   2f1d4:	movw	r0, #0
   2f1d8:	str	r0, [fp, #-84]	; 0xffffffac
   2f1dc:	ldr	r0, [fp, #-60]	; 0xffffffc4
   2f1e0:	cmp	r0, #10
   2f1e4:	bne	2f208 <__assert_fail@plt+0x1c650>
   2f1e8:	ldr	r0, [fp, #-56]	; 0xffffffc8
   2f1ec:	ldr	r1, [fp, #-52]	; 0xffffffcc
   2f1f0:	adds	r0, r0, #1
   2f1f4:	adc	r1, r1, #0
   2f1f8:	str	r0, [fp, #-56]	; 0xffffffc8
   2f1fc:	str	r1, [fp, #-52]	; 0xffffffcc
   2f200:	movw	r0, #0
   2f204:	str	r0, [fp, #-60]	; 0xffffffc4
   2f208:	b	2f20c <__assert_fail@plt+0x1c654>
   2f20c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   2f210:	ldr	r1, [fp, #-52]	; 0xffffffcc
   2f214:	rsbs	r0, r0, #9
   2f218:	rscs	r1, r1, #0
   2f21c:	str	r0, [sp, #32]
   2f220:	str	r1, [sp, #28]
   2f224:	bcc	2f2a4 <__assert_fail@plt+0x1c6ec>
   2f228:	b	2f22c <__assert_fail@plt+0x1c674>
   2f22c:	ldr	r0, [fp, #-60]	; 0xffffffc4
   2f230:	cmp	r0, #0
   2f234:	bne	2f248 <__assert_fail@plt+0x1c690>
   2f238:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f23c:	and	r0, r0, #8
   2f240:	cmp	r0, #0
   2f244:	bne	2f2a4 <__assert_fail@plt+0x1c6ec>
   2f248:	ldr	r0, [fp, #-60]	; 0xffffffc4
   2f24c:	add	r0, r0, #48	; 0x30
   2f250:	ldr	r1, [fp, #-72]	; 0xffffffb8
   2f254:	mvn	r2, #0
   2f258:	add	r3, r1, r2
   2f25c:	str	r3, [fp, #-72]	; 0xffffffb8
   2f260:	add	r1, r1, r2
   2f264:	strb	r0, [r1]
   2f268:	ldr	r0, [fp, #-92]	; 0xffffffa4
   2f26c:	ldr	r1, [fp, #-72]	; 0xffffffb8
   2f270:	movw	r2, #0
   2f274:	sub	r0, r2, r0
   2f278:	add	r0, r1, r0
   2f27c:	str	r0, [fp, #-72]	; 0xffffffb8
   2f280:	ldr	r0, [fp, #-72]	; 0xffffffb8
   2f284:	ldr	r1, [fp, #-88]	; 0xffffffa8
   2f288:	ldr	r3, [fp, #-92]	; 0xffffffa4
   2f28c:	str	r2, [sp, #24]
   2f290:	mov	r2, r3
   2f294:	bl	125c4 <memcpy@plt>
   2f298:	ldr	r0, [sp, #24]
   2f29c:	str	r0, [fp, #-84]	; 0xffffffac
   2f2a0:	str	r0, [fp, #-60]	; 0xffffffc4
   2f2a4:	b	2f2a8 <__assert_fail@plt+0x1c6f0>
   2f2a8:	b	2f2ac <__assert_fail@plt+0x1c6f4>
   2f2ac:	b	2f2b0 <__assert_fail@plt+0x1c6f8>
   2f2b0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2f2b4:	cmp	r0, #1
   2f2b8:	bne	2f2fc <__assert_fail@plt+0x1c744>
   2f2bc:	ldr	r0, [fp, #-60]	; 0xffffffc4
   2f2c0:	ldr	r1, [fp, #-84]	; 0xffffffac
   2f2c4:	asr	r2, r1, #31
   2f2c8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2f2cc:	and	r3, r3, #1
   2f2d0:	adds	r1, r1, r3
   2f2d4:	adc	r2, r2, #0
   2f2d8:	orr	r1, r1, r2
   2f2dc:	cmp	r1, #0
   2f2e0:	movwne	r1, #1
   2f2e4:	and	r1, r1, #1
   2f2e8:	add	r0, r0, r1
   2f2ec:	movw	r1, #5
   2f2f0:	cmp	r1, r0
   2f2f4:	blt	2f320 <__assert_fail@plt+0x1c768>
   2f2f8:	b	2f3ec <__assert_fail@plt+0x1c834>
   2f2fc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2f300:	cmp	r0, #0
   2f304:	bne	2f3ec <__assert_fail@plt+0x1c834>
   2f308:	ldr	r0, [fp, #-60]	; 0xffffffc4
   2f30c:	ldr	r1, [fp, #-84]	; 0xffffffac
   2f310:	add	r0, r0, r1
   2f314:	movw	r1, #0
   2f318:	cmp	r1, r0
   2f31c:	bge	2f3ec <__assert_fail@plt+0x1c834>
   2f320:	ldr	r0, [fp, #-56]	; 0xffffffc8
   2f324:	ldr	r1, [fp, #-52]	; 0xffffffcc
   2f328:	adds	r0, r0, #1
   2f32c:	adc	r1, r1, #0
   2f330:	str	r0, [fp, #-56]	; 0xffffffc8
   2f334:	str	r1, [fp, #-52]	; 0xffffffcc
   2f338:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f33c:	and	r0, r0, #16
   2f340:	cmp	r0, #0
   2f344:	beq	2f3e8 <__assert_fail@plt+0x1c830>
   2f348:	ldr	r0, [fp, #-56]	; 0xffffffc8
   2f34c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   2f350:	ldr	r2, [fp, #-48]	; 0xffffffd0
   2f354:	eor	r0, r0, r2
   2f358:	orr	r0, r0, r1
   2f35c:	cmp	r0, #0
   2f360:	bne	2f3e8 <__assert_fail@plt+0x1c830>
   2f364:	b	2f368 <__assert_fail@plt+0x1c7b0>
   2f368:	ldr	r0, [fp, #-64]	; 0xffffffc0
   2f36c:	ldr	r1, [fp, #-68]	; 0xffffffbc
   2f370:	cmp	r0, r1
   2f374:	bge	2f3e8 <__assert_fail@plt+0x1c830>
   2f378:	ldr	r0, [fp, #-64]	; 0xffffffc0
   2f37c:	add	r0, r0, #1
   2f380:	str	r0, [fp, #-64]	; 0xffffffc0
   2f384:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f388:	and	r0, r0, #8
   2f38c:	cmp	r0, #0
   2f390:	bne	2f3d8 <__assert_fail@plt+0x1c820>
   2f394:	ldr	r0, [fp, #-72]	; 0xffffffb8
   2f398:	mvn	r1, #0
   2f39c:	add	r2, r0, r1
   2f3a0:	str	r2, [fp, #-72]	; 0xffffffb8
   2f3a4:	add	r0, r0, r1
   2f3a8:	movw	r1, #48	; 0x30
   2f3ac:	strb	r1, [r0]
   2f3b0:	ldr	r0, [fp, #-92]	; 0xffffffa4
   2f3b4:	ldr	r1, [fp, #-72]	; 0xffffffb8
   2f3b8:	movw	r2, #0
   2f3bc:	sub	r0, r2, r0
   2f3c0:	add	r0, r1, r0
   2f3c4:	str	r0, [fp, #-72]	; 0xffffffb8
   2f3c8:	ldr	r0, [fp, #-72]	; 0xffffffb8
   2f3cc:	ldr	r1, [fp, #-88]	; 0xffffffa8
   2f3d0:	ldr	r2, [fp, #-92]	; 0xffffffa4
   2f3d4:	bl	125c4 <memcpy@plt>
   2f3d8:	mov	r0, #0
   2f3dc:	str	r0, [fp, #-52]	; 0xffffffcc
   2f3e0:	mov	r0, #1
   2f3e4:	str	r0, [fp, #-56]	; 0xffffffc8
   2f3e8:	b	2f3ec <__assert_fail@plt+0x1c834>
   2f3ec:	ldr	r0, [fp, #-72]	; 0xffffffb8
   2f3f0:	str	r0, [fp, #-80]	; 0xffffffb0
   2f3f4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   2f3f8:	ldr	r1, [fp, #-52]	; 0xffffffcc
   2f3fc:	mov	r2, #10
   2f400:	mov	r3, #0
   2f404:	bl	77854 <__assert_fail@plt+0x64c9c>
   2f408:	str	r2, [fp, #-188]	; 0xffffff44
   2f40c:	ldr	r2, [fp, #-188]	; 0xffffff44
   2f410:	add	r2, r2, #48	; 0x30
   2f414:	ldr	r3, [fp, #-72]	; 0xffffffb8
   2f418:	mvn	lr, #0
   2f41c:	add	ip, r3, lr
   2f420:	str	ip, [fp, #-72]	; 0xffffffb8
   2f424:	add	r3, r3, lr
   2f428:	strb	r2, [r3]
   2f42c:	str	r0, [sp, #20]
   2f430:	str	r1, [sp, #16]
   2f434:	ldr	r0, [fp, #-56]	; 0xffffffc8
   2f438:	ldr	r1, [fp, #-52]	; 0xffffffcc
   2f43c:	mov	r2, #10
   2f440:	mov	r3, #0
   2f444:	bl	77854 <__assert_fail@plt+0x64c9c>
   2f448:	str	r1, [fp, #-52]	; 0xffffffcc
   2f44c:	str	r0, [fp, #-56]	; 0xffffffc8
   2f450:	orr	r0, r0, r1
   2f454:	cmp	r0, #0
   2f458:	bne	2f3f4 <__assert_fail@plt+0x1c83c>
   2f45c:	b	2f460 <__assert_fail@plt+0x1c8a8>
   2f460:	b	2f464 <__assert_fail@plt+0x1c8ac>
   2f464:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f468:	and	r0, r0, #4
   2f46c:	cmp	r0, #0
   2f470:	beq	2f494 <__assert_fail@plt+0x1c8dc>
   2f474:	ldr	r0, [fp, #-72]	; 0xffffffb8
   2f478:	ldr	r1, [fp, #-80]	; 0xffffffb0
   2f47c:	ldr	r2, [fp, #-72]	; 0xffffffb8
   2f480:	sub	r1, r1, r2
   2f484:	ldr	r2, [fp, #-96]	; 0xffffffa0
   2f488:	ldr	r3, [fp, #-100]	; 0xffffff9c
   2f48c:	bl	2f710 <__assert_fail@plt+0x1cb58>
   2f490:	str	r0, [fp, #-72]	; 0xffffffb8
   2f494:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f498:	and	r0, r0, #128	; 0x80
   2f49c:	cmp	r0, #0
   2f4a0:	beq	2f624 <__assert_fail@plt+0x1ca6c>
   2f4a4:	ldr	r0, [fp, #-64]	; 0xffffffc0
   2f4a8:	cmp	r0, #0
   2f4ac:	bge	2f530 <__assert_fail@plt+0x1c978>
   2f4b0:	mov	r0, #0
   2f4b4:	str	r0, [fp, #-64]	; 0xffffffc0
   2f4b8:	str	r0, [sp, #188]	; 0xbc
   2f4bc:	mov	r0, #1
   2f4c0:	str	r0, [sp, #184]	; 0xb8
   2f4c4:	ldr	r0, [sp, #184]	; 0xb8
   2f4c8:	ldr	r1, [sp, #188]	; 0xbc
   2f4cc:	ldr	r2, [fp, #-40]	; 0xffffffd8
   2f4d0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2f4d4:	subs	r0, r0, r2
   2f4d8:	sbcs	r1, r1, r3
   2f4dc:	str	r0, [sp, #12]
   2f4e0:	str	r1, [sp, #8]
   2f4e4:	bcs	2f52c <__assert_fail@plt+0x1c974>
   2f4e8:	b	2f4ec <__assert_fail@plt+0x1c934>
   2f4ec:	ldr	r0, [fp, #-64]	; 0xffffffc0
   2f4f0:	add	r0, r0, #1
   2f4f4:	str	r0, [fp, #-64]	; 0xffffffc0
   2f4f8:	ldr	r1, [fp, #-68]	; 0xffffffbc
   2f4fc:	cmp	r0, r1
   2f500:	bne	2f508 <__assert_fail@plt+0x1c950>
   2f504:	b	2f52c <__assert_fail@plt+0x1c974>
   2f508:	b	2f50c <__assert_fail@plt+0x1c954>
   2f50c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   2f510:	ldr	r1, [sp, #184]	; 0xb8
   2f514:	ldr	r2, [sp, #188]	; 0xbc
   2f518:	umull	r1, r3, r1, r0
   2f51c:	mla	r0, r2, r0, r3
   2f520:	str	r1, [sp, #184]	; 0xb8
   2f524:	str	r0, [sp, #188]	; 0xbc
   2f528:	b	2f4c4 <__assert_fail@plt+0x1c90c>
   2f52c:	b	2f530 <__assert_fail@plt+0x1c978>
   2f530:	ldr	r0, [fp, #-64]	; 0xffffffc0
   2f534:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2f538:	and	r1, r1, #256	; 0x100
   2f53c:	orr	r0, r0, r1
   2f540:	cmp	r0, #0
   2f544:	beq	2f56c <__assert_fail@plt+0x1c9b4>
   2f548:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f54c:	and	r0, r0, #64	; 0x40
   2f550:	cmp	r0, #0
   2f554:	beq	2f56c <__assert_fail@plt+0x1c9b4>
   2f558:	ldr	r0, [fp, #-76]	; 0xffffffb4
   2f55c:	add	r1, r0, #1
   2f560:	str	r1, [fp, #-76]	; 0xffffffb4
   2f564:	movw	r1, #32
   2f568:	strb	r1, [r0]
   2f56c:	ldr	r0, [fp, #-64]	; 0xffffffc0
   2f570:	cmp	r0, #0
   2f574:	beq	2f5cc <__assert_fail@plt+0x1ca14>
   2f578:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f57c:	and	r0, r0, #32
   2f580:	cmp	r0, #0
   2f584:	bne	2f5a0 <__assert_fail@plt+0x1c9e8>
   2f588:	ldr	r0, [fp, #-64]	; 0xffffffc0
   2f58c:	cmp	r0, #1
   2f590:	bne	2f5a0 <__assert_fail@plt+0x1c9e8>
   2f594:	movw	r0, #107	; 0x6b
   2f598:	str	r0, [sp, #4]
   2f59c:	b	2f5b8 <__assert_fail@plt+0x1ca00>
   2f5a0:	ldr	r0, [fp, #-64]	; 0xffffffc0
   2f5a4:	movw	r1, #50328	; 0xc498
   2f5a8:	movt	r1, #7
   2f5ac:	add	r0, r1, r0
   2f5b0:	ldrb	r0, [r0]
   2f5b4:	str	r0, [sp, #4]
   2f5b8:	ldr	r0, [sp, #4]
   2f5bc:	ldr	r1, [fp, #-76]	; 0xffffffb4
   2f5c0:	add	r2, r1, #1
   2f5c4:	str	r2, [fp, #-76]	; 0xffffffb4
   2f5c8:	strb	r0, [r1]
   2f5cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f5d0:	and	r0, r0, #256	; 0x100
   2f5d4:	cmp	r0, #0
   2f5d8:	beq	2f620 <__assert_fail@plt+0x1ca68>
   2f5dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f5e0:	and	r0, r0, #32
   2f5e4:	cmp	r0, #0
   2f5e8:	beq	2f60c <__assert_fail@plt+0x1ca54>
   2f5ec:	ldr	r0, [fp, #-64]	; 0xffffffc0
   2f5f0:	cmp	r0, #0
   2f5f4:	beq	2f60c <__assert_fail@plt+0x1ca54>
   2f5f8:	ldr	r0, [fp, #-76]	; 0xffffffb4
   2f5fc:	add	r1, r0, #1
   2f600:	str	r1, [fp, #-76]	; 0xffffffb4
   2f604:	movw	r1, #105	; 0x69
   2f608:	strb	r1, [r0]
   2f60c:	ldr	r0, [fp, #-76]	; 0xffffffb4
   2f610:	add	r1, r0, #1
   2f614:	str	r1, [fp, #-76]	; 0xffffffb4
   2f618:	movw	r1, #66	; 0x42
   2f61c:	strb	r1, [r0]
   2f620:	b	2f624 <__assert_fail@plt+0x1ca6c>
   2f624:	ldr	r0, [fp, #-76]	; 0xffffffb4
   2f628:	movw	r1, #0
   2f62c:	strb	r1, [r0]
   2f630:	ldr	r0, [fp, #-72]	; 0xffffffb8
   2f634:	sub	sp, fp, #8
   2f638:	pop	{r4, r5, fp, pc}
   2f63c:	nop	{0}
   2f640:	push	{fp, lr}
   2f644:	mov	fp, sp
   2f648:	sub	sp, sp, #40	; 0x28
   2f64c:	str	r0, [fp, #-4]
   2f650:	vstr	d0, [fp, #-16]
   2f654:	ldr	r0, [fp, #-4]
   2f658:	cmp	r0, #1
   2f65c:	beq	2f6f8 <__assert_fail@plt+0x1cb40>
   2f660:	vldr	d16, [pc, #160]	; 2f708 <__assert_fail@plt+0x1cb50>
   2f664:	vldr	d17, [fp, #-16]
   2f668:	vcmpe.f64	d17, d16
   2f66c:	vmrs	APSR_nzcv, fpscr
   2f670:	bpl	2f6f8 <__assert_fail@plt+0x1cb40>
   2f674:	vldr	d16, [fp, #-16]
   2f678:	vmov	r0, r1, d16
   2f67c:	bl	778a0 <__assert_fail@plt+0x64ce8>
   2f680:	str	r1, [sp, #20]
   2f684:	str	r0, [sp, #16]
   2f688:	ldr	r0, [sp, #16]
   2f68c:	ldr	r1, [sp, #20]
   2f690:	ldr	lr, [fp, #-4]
   2f694:	cmp	lr, #0
   2f698:	movw	lr, #0
   2f69c:	str	r0, [sp, #12]
   2f6a0:	str	r1, [sp, #8]
   2f6a4:	str	lr, [sp, #4]
   2f6a8:	bne	2f6d4 <__assert_fail@plt+0x1cb1c>
   2f6ac:	ldr	r0, [sp, #16]
   2f6b0:	ldr	r1, [sp, #20]
   2f6b4:	bl	7770c <__assert_fail@plt+0x64b54>
   2f6b8:	vmov	d16, r0, r1
   2f6bc:	vldr	d17, [fp, #-16]
   2f6c0:	vcmp.f64	d16, d17
   2f6c4:	vmrs	APSR_nzcv, fpscr
   2f6c8:	movw	r0, #0
   2f6cc:	movne	r0, #1
   2f6d0:	str	r0, [sp, #4]
   2f6d4:	ldr	r0, [sp, #4]
   2f6d8:	and	r0, r0, #1
   2f6dc:	ldr	r1, [sp, #12]
   2f6e0:	adds	r0, r1, r0
   2f6e4:	ldr	r2, [sp, #8]
   2f6e8:	adc	r1, r2, #0
   2f6ec:	bl	7770c <__assert_fail@plt+0x64b54>
   2f6f0:	vmov	d16, r0, r1
   2f6f4:	vstr	d16, [fp, #-16]
   2f6f8:	vldr	d0, [fp, #-16]
   2f6fc:	mov	sp, fp
   2f700:	pop	{fp, pc}
   2f704:	nop	{0}
   2f708:	andeq	r0, r0, r0
   2f70c:	mvnsmi	r0, #0
   2f710:	push	{fp, lr}
   2f714:	mov	fp, sp
   2f718:	sub	sp, sp, #88	; 0x58
   2f71c:	add	ip, sp, #15
   2f720:	str	r0, [fp, #-4]
   2f724:	str	r1, [fp, #-8]
   2f728:	str	r2, [fp, #-12]
   2f72c:	str	r3, [fp, #-16]
   2f730:	mvn	r0, #0
   2f734:	str	r0, [fp, #-24]	; 0xffffffe8
   2f738:	ldr	r0, [fp, #-16]
   2f73c:	str	ip, [sp, #8]
   2f740:	bl	12888 <strlen@plt>
   2f744:	str	r0, [fp, #-28]	; 0xffffffe4
   2f748:	ldr	r0, [fp, #-8]
   2f74c:	str	r0, [fp, #-32]	; 0xffffffe0
   2f750:	ldr	r1, [fp, #-4]
   2f754:	ldr	r2, [fp, #-8]
   2f758:	ldr	r0, [sp, #8]
   2f75c:	bl	125c4 <memcpy@plt>
   2f760:	ldr	r0, [fp, #-4]
   2f764:	ldr	r1, [fp, #-8]
   2f768:	add	r0, r0, r1
   2f76c:	str	r0, [fp, #-20]	; 0xffffffec
   2f770:	ldr	r0, [fp, #-12]
   2f774:	ldrb	r0, [r0]
   2f778:	strb	r0, [sp, #14]
   2f77c:	ldrsb	r0, [sp, #14]
   2f780:	cmp	r0, #0
   2f784:	beq	2f7bc <__assert_fail@plt+0x1cc04>
   2f788:	ldrb	r0, [sp, #14]
   2f78c:	cmp	r0, #255	; 0xff
   2f790:	bge	2f7a0 <__assert_fail@plt+0x1cbe8>
   2f794:	ldrb	r0, [sp, #14]
   2f798:	str	r0, [sp, #4]
   2f79c:	b	2f7a8 <__assert_fail@plt+0x1cbf0>
   2f7a0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2f7a4:	str	r0, [sp, #4]
   2f7a8:	ldr	r0, [sp, #4]
   2f7ac:	str	r0, [fp, #-24]	; 0xffffffe8
   2f7b0:	ldr	r0, [fp, #-12]
   2f7b4:	add	r0, r0, #1
   2f7b8:	str	r0, [fp, #-12]
   2f7bc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2f7c0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2f7c4:	cmp	r0, r1
   2f7c8:	bcs	2f7d4 <__assert_fail@plt+0x1cc1c>
   2f7cc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2f7d0:	str	r0, [fp, #-24]	; 0xffffffe8
   2f7d4:	add	r0, sp, #15
   2f7d8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2f7dc:	ldr	r2, [fp, #-20]	; 0xffffffec
   2f7e0:	movw	r3, #0
   2f7e4:	sub	r1, r3, r1
   2f7e8:	add	r1, r2, r1
   2f7ec:	str	r1, [fp, #-20]	; 0xffffffec
   2f7f0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2f7f4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   2f7f8:	sub	r1, r2, r1
   2f7fc:	str	r1, [fp, #-32]	; 0xffffffe0
   2f800:	ldr	r1, [fp, #-20]	; 0xffffffec
   2f804:	ldr	r2, [fp, #-32]	; 0xffffffe0
   2f808:	add	r0, r0, r2
   2f80c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2f810:	str	r0, [sp]
   2f814:	mov	r0, r1
   2f818:	ldr	r1, [sp]
   2f81c:	bl	125c4 <memcpy@plt>
   2f820:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2f824:	cmp	r0, #0
   2f828:	bne	2f838 <__assert_fail@plt+0x1cc80>
   2f82c:	ldr	r0, [fp, #-20]	; 0xffffffec
   2f830:	mov	sp, fp
   2f834:	pop	{fp, pc}
   2f838:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2f83c:	ldr	r1, [fp, #-20]	; 0xffffffec
   2f840:	movw	r2, #0
   2f844:	sub	r0, r2, r0
   2f848:	add	r0, r1, r0
   2f84c:	str	r0, [fp, #-20]	; 0xffffffec
   2f850:	ldr	r0, [fp, #-20]	; 0xffffffec
   2f854:	ldr	r1, [fp, #-16]
   2f858:	ldr	r2, [fp, #-28]	; 0xffffffe4
   2f85c:	bl	125c4 <memcpy@plt>
   2f860:	b	2f770 <__assert_fail@plt+0x1cbb8>
   2f864:	push	{fp, lr}
   2f868:	mov	fp, sp
   2f86c:	sub	sp, sp, #16
   2f870:	str	r0, [fp, #-4]
   2f874:	str	r1, [sp, #8]
   2f878:	str	r2, [sp, #4]
   2f87c:	ldr	r0, [fp, #-4]
   2f880:	ldr	r1, [sp, #4]
   2f884:	ldr	r2, [sp, #8]
   2f888:	bl	2f8d0 <__assert_fail@plt+0x1cd18>
   2f88c:	str	r0, [sp]
   2f890:	ldr	r0, [sp, #4]
   2f894:	ldr	r1, [r0]
   2f898:	ldr	r0, [r0, #4]
   2f89c:	orr	r0, r1, r0
   2f8a0:	cmp	r0, #0
   2f8a4:	bne	2f8c4 <__assert_fail@plt+0x1cd0c>
   2f8a8:	b	2f8ac <__assert_fail@plt+0x1ccf4>
   2f8ac:	bl	2fb2c <__assert_fail@plt+0x1cf74>
   2f8b0:	ldr	lr, [sp, #4]
   2f8b4:	str	r1, [lr, #4]
   2f8b8:	str	r0, [lr]
   2f8bc:	movw	r0, #4
   2f8c0:	str	r0, [sp]
   2f8c4:	ldr	r0, [sp]
   2f8c8:	mov	sp, fp
   2f8cc:	pop	{fp, pc}
   2f8d0:	push	{fp, lr}
   2f8d4:	mov	fp, sp
   2f8d8:	sub	sp, sp, #48	; 0x30
   2f8dc:	str	r0, [fp, #-8]
   2f8e0:	str	r1, [fp, #-12]
   2f8e4:	str	r2, [fp, #-16]
   2f8e8:	movw	r0, #0
   2f8ec:	str	r0, [sp, #24]
   2f8f0:	ldr	r1, [fp, #-8]
   2f8f4:	cmp	r1, r0
   2f8f8:	bne	2f948 <__assert_fail@plt+0x1cd90>
   2f8fc:	movw	r0, #39621	; 0x9ac5
   2f900:	movt	r0, #7
   2f904:	bl	127bc <getenv@plt>
   2f908:	str	r0, [fp, #-8]
   2f90c:	movw	lr, #0
   2f910:	cmp	r0, lr
   2f914:	bne	2f948 <__assert_fail@plt+0x1cd90>
   2f918:	movw	r0, #50280	; 0xc468
   2f91c:	movt	r0, #7
   2f920:	bl	127bc <getenv@plt>
   2f924:	str	r0, [fp, #-8]
   2f928:	movw	lr, #0
   2f92c:	cmp	r0, lr
   2f930:	bne	2f948 <__assert_fail@plt+0x1cd90>
   2f934:	bl	2fb2c <__assert_fail@plt+0x1cf74>
   2f938:	ldr	lr, [fp, #-12]
   2f93c:	str	r1, [lr, #4]
   2f940:	str	r0, [lr]
   2f944:	b	2fb0c <__assert_fail@plt+0x1cf54>
   2f948:	ldr	r0, [fp, #-8]
   2f94c:	ldrb	r0, [r0]
   2f950:	cmp	r0, #39	; 0x27
   2f954:	bne	2f970 <__assert_fail@plt+0x1cdb8>
   2f958:	ldr	r0, [sp, #24]
   2f95c:	orr	r0, r0, #4
   2f960:	str	r0, [sp, #24]
   2f964:	ldr	r0, [fp, #-8]
   2f968:	add	r0, r0, #1
   2f96c:	str	r0, [fp, #-8]
   2f970:	movw	r0, #50352	; 0xc4b0
   2f974:	movt	r0, #7
   2f978:	ldr	r1, [fp, #-8]
   2f97c:	str	r0, [sp, #12]
   2f980:	mov	r0, r1
   2f984:	movw	r1, #50340	; 0xc4a4
   2f988:	movt	r1, #7
   2f98c:	ldr	r2, [sp, #12]
   2f990:	movw	r3, #4
   2f994:	bl	705dc <__assert_fail@plt+0x5da24>
   2f998:	str	r0, [fp, #-20]	; 0xffffffec
   2f99c:	movw	r1, #0
   2f9a0:	cmp	r1, r0
   2f9a4:	bgt	2f9dc <__assert_fail@plt+0x1ce24>
   2f9a8:	ldr	r0, [fp, #-20]	; 0xffffffec
   2f9ac:	movw	r1, #50352	; 0xc4b0
   2f9b0:	movt	r1, #7
   2f9b4:	ldr	r0, [r1, r0, lsl #2]
   2f9b8:	ldr	r1, [sp, #24]
   2f9bc:	orr	r0, r1, r0
   2f9c0:	str	r0, [sp, #24]
   2f9c4:	ldr	r0, [fp, #-12]
   2f9c8:	mov	r1, #0
   2f9cc:	str	r1, [r0, #4]
   2f9d0:	mov	r1, #1
   2f9d4:	str	r1, [r0]
   2f9d8:	b	2fb08 <__assert_fail@plt+0x1cf50>
   2f9dc:	ldr	r0, [fp, #-8]
   2f9e0:	ldr	r3, [fp, #-12]
   2f9e4:	add	r1, sp, #20
   2f9e8:	movw	r2, #0
   2f9ec:	movw	ip, #50290	; 0xc472
   2f9f0:	movt	ip, #7
   2f9f4:	str	ip, [sp]
   2f9f8:	bl	4f9e4 <__assert_fail@plt+0x3ce2c>
   2f9fc:	str	r0, [sp, #16]
   2fa00:	ldr	r0, [sp, #16]
   2fa04:	cmp	r0, #0
   2fa08:	beq	2fa24 <__assert_fail@plt+0x1ce6c>
   2fa0c:	ldr	r0, [fp, #-16]
   2fa10:	movw	r1, #0
   2fa14:	str	r1, [r0]
   2fa18:	ldr	r0, [sp, #16]
   2fa1c:	str	r0, [fp, #-4]
   2fa20:	b	2fb20 <__assert_fail@plt+0x1cf68>
   2fa24:	b	2fa28 <__assert_fail@plt+0x1ce70>
   2fa28:	ldr	r0, [fp, #-8]
   2fa2c:	ldrb	r0, [r0]
   2fa30:	movw	r1, #48	; 0x30
   2fa34:	cmp	r1, r0
   2fa38:	movw	r0, #0
   2fa3c:	str	r0, [sp, #8]
   2fa40:	bgt	2fa5c <__assert_fail@plt+0x1cea4>
   2fa44:	ldr	r0, [fp, #-8]
   2fa48:	ldrb	r0, [r0]
   2fa4c:	cmp	r0, #57	; 0x39
   2fa50:	movw	r0, #0
   2fa54:	movle	r0, #1
   2fa58:	str	r0, [sp, #8]
   2fa5c:	ldr	r0, [sp, #8]
   2fa60:	mvn	r1, #0
   2fa64:	eor	r0, r0, r1
   2fa68:	tst	r0, #1
   2fa6c:	beq	2fb04 <__assert_fail@plt+0x1cf4c>
   2fa70:	ldr	r0, [fp, #-8]
   2fa74:	ldr	r1, [sp, #20]
   2fa78:	cmp	r0, r1
   2fa7c:	bne	2faf0 <__assert_fail@plt+0x1cf38>
   2fa80:	ldr	r0, [sp, #24]
   2fa84:	orr	r0, r0, #128	; 0x80
   2fa88:	str	r0, [sp, #24]
   2fa8c:	ldr	r0, [sp, #20]
   2fa90:	mvn	r1, #0
   2fa94:	add	r0, r0, r1
   2fa98:	ldrb	r0, [r0]
   2fa9c:	cmp	r0, #66	; 0x42
   2faa0:	bne	2fab0 <__assert_fail@plt+0x1cef8>
   2faa4:	ldr	r0, [sp, #24]
   2faa8:	orr	r0, r0, #256	; 0x100
   2faac:	str	r0, [sp, #24]
   2fab0:	ldr	r0, [sp, #20]
   2fab4:	mvn	r1, #0
   2fab8:	add	r0, r0, r1
   2fabc:	ldrb	r0, [r0]
   2fac0:	cmp	r0, #66	; 0x42
   2fac4:	bne	2fae0 <__assert_fail@plt+0x1cf28>
   2fac8:	ldr	r0, [sp, #20]
   2facc:	mvn	r1, #1
   2fad0:	add	r0, r0, r1
   2fad4:	ldrb	r0, [r0]
   2fad8:	cmp	r0, #105	; 0x69
   2fadc:	bne	2faec <__assert_fail@plt+0x1cf34>
   2fae0:	ldr	r0, [sp, #24]
   2fae4:	orr	r0, r0, #32
   2fae8:	str	r0, [sp, #24]
   2faec:	b	2fb04 <__assert_fail@plt+0x1cf4c>
   2faf0:	b	2faf4 <__assert_fail@plt+0x1cf3c>
   2faf4:	ldr	r0, [fp, #-8]
   2faf8:	add	r0, r0, #1
   2fafc:	str	r0, [fp, #-8]
   2fb00:	b	2fa28 <__assert_fail@plt+0x1ce70>
   2fb04:	b	2fb08 <__assert_fail@plt+0x1cf50>
   2fb08:	b	2fb0c <__assert_fail@plt+0x1cf54>
   2fb0c:	ldr	r0, [sp, #24]
   2fb10:	ldr	r1, [fp, #-16]
   2fb14:	str	r0, [r1]
   2fb18:	movw	r0, #0
   2fb1c:	str	r0, [fp, #-4]
   2fb20:	ldr	r0, [fp, #-4]
   2fb24:	mov	sp, fp
   2fb28:	pop	{fp, pc}
   2fb2c:	push	{fp, lr}
   2fb30:	mov	fp, sp
   2fb34:	movw	r0, #39600	; 0x9ab0
   2fb38:	movt	r0, #7
   2fb3c:	bl	127bc <getenv@plt>
   2fb40:	mov	lr, #1024	; 0x400
   2fb44:	cmp	r0, #0
   2fb48:	movwne	lr, #512	; 0x200
   2fb4c:	mov	r1, #0
   2fb50:	mov	r0, lr
   2fb54:	pop	{fp, pc}
   2fb58:	push	{fp, lr}
   2fb5c:	mov	fp, sp
   2fb60:	sub	sp, sp, #32
   2fb64:	str	r0, [fp, #-4]
   2fb68:	movw	r0, #0
   2fb6c:	str	r0, [fp, #-12]
   2fb70:	movw	r0, #65236	; 0xfed4
   2fb74:	movt	r0, #8
   2fb78:	ldr	r0, [r0]
   2fb7c:	str	r0, [fp, #-8]
   2fb80:	ldr	r0, [fp, #-8]
   2fb84:	movw	r1, #0
   2fb88:	cmp	r0, r1
   2fb8c:	beq	2fbc4 <__assert_fail@plt+0x1d00c>
   2fb90:	ldr	r0, [fp, #-8]
   2fb94:	ldr	r0, [r0]
   2fb98:	ldr	r1, [fp, #-4]
   2fb9c:	cmp	r0, r1
   2fba0:	bne	2fbb0 <__assert_fail@plt+0x1cff8>
   2fba4:	ldr	r0, [fp, #-8]
   2fba8:	str	r0, [fp, #-12]
   2fbac:	b	2fbc4 <__assert_fail@plt+0x1d00c>
   2fbb0:	b	2fbb4 <__assert_fail@plt+0x1cffc>
   2fbb4:	ldr	r0, [fp, #-8]
   2fbb8:	ldr	r0, [r0, #4]
   2fbbc:	str	r0, [fp, #-8]
   2fbc0:	b	2fb80 <__assert_fail@plt+0x1cfc8>
   2fbc4:	ldr	r0, [fp, #-12]
   2fbc8:	movw	r1, #0
   2fbcc:	cmp	r0, r1
   2fbd0:	bne	2fc74 <__assert_fail@plt+0x1d0bc>
   2fbd4:	ldr	r0, [fp, #-4]
   2fbd8:	bl	124e0 <getpwuid@plt>
   2fbdc:	str	r0, [sp, #16]
   2fbe0:	ldr	r0, [sp, #16]
   2fbe4:	movw	lr, #0
   2fbe8:	cmp	r0, lr
   2fbec:	beq	2fc00 <__assert_fail@plt+0x1d048>
   2fbf0:	ldr	r0, [sp, #16]
   2fbf4:	ldr	r0, [r0]
   2fbf8:	str	r0, [sp, #8]
   2fbfc:	b	2fc10 <__assert_fail@plt+0x1d058>
   2fc00:	movw	r0, #39197	; 0x991d
   2fc04:	movt	r0, #7
   2fc08:	str	r0, [sp, #8]
   2fc0c:	b	2fc10 <__assert_fail@plt+0x1d058>
   2fc10:	ldr	r0, [sp, #8]
   2fc14:	str	r0, [sp, #12]
   2fc18:	ldr	r0, [sp, #12]
   2fc1c:	bl	12888 <strlen@plt>
   2fc20:	add	r0, r0, #1
   2fc24:	add	r0, r0, #11
   2fc28:	mvn	lr, #3
   2fc2c:	and	r0, r0, lr
   2fc30:	bl	4c394 <__assert_fail@plt+0x397dc>
   2fc34:	str	r0, [fp, #-12]
   2fc38:	ldr	r0, [fp, #-4]
   2fc3c:	ldr	lr, [fp, #-12]
   2fc40:	str	r0, [lr]
   2fc44:	ldr	r0, [fp, #-12]
   2fc48:	add	r0, r0, #8
   2fc4c:	ldr	r1, [sp, #12]
   2fc50:	bl	12738 <strcpy@plt>
   2fc54:	movw	r1, #65236	; 0xfed4
   2fc58:	movt	r1, #8
   2fc5c:	ldr	lr, [r1]
   2fc60:	ldr	r2, [fp, #-12]
   2fc64:	str	lr, [r2, #4]
   2fc68:	ldr	r2, [fp, #-12]
   2fc6c:	str	r2, [r1]
   2fc70:	str	r0, [sp, #4]
   2fc74:	ldr	r0, [fp, #-12]
   2fc78:	ldrb	r0, [r0, #8]
   2fc7c:	cmp	r0, #0
   2fc80:	beq	2fc94 <__assert_fail@plt+0x1d0dc>
   2fc84:	ldr	r0, [fp, #-12]
   2fc88:	add	r0, r0, #8
   2fc8c:	str	r0, [sp]
   2fc90:	b	2fca0 <__assert_fail@plt+0x1d0e8>
   2fc94:	movw	r0, #0
   2fc98:	str	r0, [sp]
   2fc9c:	b	2fca0 <__assert_fail@plt+0x1d0e8>
   2fca0:	ldr	r0, [sp]
   2fca4:	mov	sp, fp
   2fca8:	pop	{fp, pc}
   2fcac:	push	{fp, lr}
   2fcb0:	mov	fp, sp
   2fcb4:	sub	sp, sp, #24
   2fcb8:	str	r0, [fp, #-8]
   2fcbc:	movw	r0, #65236	; 0xfed4
   2fcc0:	movt	r0, #8
   2fcc4:	ldr	r0, [r0]
   2fcc8:	str	r0, [sp, #12]
   2fccc:	ldr	r0, [sp, #12]
   2fcd0:	movw	r1, #0
   2fcd4:	cmp	r0, r1
   2fcd8:	beq	2fd2c <__assert_fail@plt+0x1d174>
   2fcdc:	ldr	r0, [sp, #12]
   2fce0:	ldrb	r0, [r0, #8]
   2fce4:	ldr	r1, [fp, #-8]
   2fce8:	ldrb	r1, [r1]
   2fcec:	cmp	r0, r1
   2fcf0:	bne	2fd18 <__assert_fail@plt+0x1d160>
   2fcf4:	ldr	r0, [sp, #12]
   2fcf8:	add	r0, r0, #8
   2fcfc:	ldr	r1, [fp, #-8]
   2fd00:	bl	124c8 <strcmp@plt>
   2fd04:	cmp	r0, #0
   2fd08:	bne	2fd18 <__assert_fail@plt+0x1d160>
   2fd0c:	ldr	r0, [sp, #12]
   2fd10:	str	r0, [fp, #-4]
   2fd14:	b	2fe48 <__assert_fail@plt+0x1d290>
   2fd18:	b	2fd1c <__assert_fail@plt+0x1d164>
   2fd1c:	ldr	r0, [sp, #12]
   2fd20:	ldr	r0, [r0, #4]
   2fd24:	str	r0, [sp, #12]
   2fd28:	b	2fccc <__assert_fail@plt+0x1d114>
   2fd2c:	movw	r0, #65240	; 0xfed8
   2fd30:	movt	r0, #8
   2fd34:	ldr	r0, [r0]
   2fd38:	str	r0, [sp, #12]
   2fd3c:	ldr	r0, [sp, #12]
   2fd40:	movw	r1, #0
   2fd44:	cmp	r0, r1
   2fd48:	beq	2fd9c <__assert_fail@plt+0x1d1e4>
   2fd4c:	ldr	r0, [sp, #12]
   2fd50:	ldrb	r0, [r0, #8]
   2fd54:	ldr	r1, [fp, #-8]
   2fd58:	ldrb	r1, [r1]
   2fd5c:	cmp	r0, r1
   2fd60:	bne	2fd88 <__assert_fail@plt+0x1d1d0>
   2fd64:	ldr	r0, [sp, #12]
   2fd68:	add	r0, r0, #8
   2fd6c:	ldr	r1, [fp, #-8]
   2fd70:	bl	124c8 <strcmp@plt>
   2fd74:	cmp	r0, #0
   2fd78:	bne	2fd88 <__assert_fail@plt+0x1d1d0>
   2fd7c:	movw	r0, #0
   2fd80:	str	r0, [fp, #-4]
   2fd84:	b	2fe48 <__assert_fail@plt+0x1d290>
   2fd88:	b	2fd8c <__assert_fail@plt+0x1d1d4>
   2fd8c:	ldr	r0, [sp, #12]
   2fd90:	ldr	r0, [r0, #4]
   2fd94:	str	r0, [sp, #12]
   2fd98:	b	2fd3c <__assert_fail@plt+0x1d184>
   2fd9c:	ldr	r0, [fp, #-8]
   2fda0:	bl	124a4 <getpwnam@plt>
   2fda4:	str	r0, [sp, #8]
   2fda8:	ldr	r0, [fp, #-8]
   2fdac:	bl	12888 <strlen@plt>
   2fdb0:	add	r0, r0, #1
   2fdb4:	add	r0, r0, #11
   2fdb8:	mvn	lr, #3
   2fdbc:	and	r0, r0, lr
   2fdc0:	bl	4c394 <__assert_fail@plt+0x397dc>
   2fdc4:	str	r0, [sp, #12]
   2fdc8:	ldr	r0, [sp, #12]
   2fdcc:	add	r0, r0, #8
   2fdd0:	ldr	r1, [fp, #-8]
   2fdd4:	bl	12738 <strcpy@plt>
   2fdd8:	ldr	r1, [sp, #8]
   2fddc:	movw	lr, #0
   2fde0:	cmp	r1, lr
   2fde4:	str	r0, [sp, #4]
   2fde8:	beq	2fe24 <__assert_fail@plt+0x1d26c>
   2fdec:	ldr	r0, [sp, #8]
   2fdf0:	ldr	r0, [r0, #8]
   2fdf4:	ldr	r1, [sp, #12]
   2fdf8:	str	r0, [r1]
   2fdfc:	movw	r0, #65236	; 0xfed4
   2fe00:	movt	r0, #8
   2fe04:	ldr	r1, [r0]
   2fe08:	ldr	r2, [sp, #12]
   2fe0c:	str	r1, [r2, #4]
   2fe10:	ldr	r1, [sp, #12]
   2fe14:	str	r1, [r0]
   2fe18:	ldr	r0, [sp, #12]
   2fe1c:	str	r0, [fp, #-4]
   2fe20:	b	2fe48 <__assert_fail@plt+0x1d290>
   2fe24:	movw	r0, #65240	; 0xfed8
   2fe28:	movt	r0, #8
   2fe2c:	ldr	r1, [r0]
   2fe30:	ldr	r2, [sp, #12]
   2fe34:	str	r1, [r2, #4]
   2fe38:	ldr	r1, [sp, #12]
   2fe3c:	str	r1, [r0]
   2fe40:	movw	r0, #0
   2fe44:	str	r0, [fp, #-4]
   2fe48:	ldr	r0, [fp, #-4]
   2fe4c:	mov	sp, fp
   2fe50:	pop	{fp, pc}
   2fe54:	push	{fp, lr}
   2fe58:	mov	fp, sp
   2fe5c:	sub	sp, sp, #32
   2fe60:	str	r0, [fp, #-4]
   2fe64:	movw	r0, #0
   2fe68:	str	r0, [fp, #-12]
   2fe6c:	movw	r0, #65244	; 0xfedc
   2fe70:	movt	r0, #8
   2fe74:	ldr	r0, [r0]
   2fe78:	str	r0, [fp, #-8]
   2fe7c:	ldr	r0, [fp, #-8]
   2fe80:	movw	r1, #0
   2fe84:	cmp	r0, r1
   2fe88:	beq	2fec0 <__assert_fail@plt+0x1d308>
   2fe8c:	ldr	r0, [fp, #-8]
   2fe90:	ldr	r0, [r0]
   2fe94:	ldr	r1, [fp, #-4]
   2fe98:	cmp	r0, r1
   2fe9c:	bne	2feac <__assert_fail@plt+0x1d2f4>
   2fea0:	ldr	r0, [fp, #-8]
   2fea4:	str	r0, [fp, #-12]
   2fea8:	b	2fec0 <__assert_fail@plt+0x1d308>
   2feac:	b	2feb0 <__assert_fail@plt+0x1d2f8>
   2feb0:	ldr	r0, [fp, #-8]
   2feb4:	ldr	r0, [r0, #4]
   2feb8:	str	r0, [fp, #-8]
   2febc:	b	2fe7c <__assert_fail@plt+0x1d2c4>
   2fec0:	ldr	r0, [fp, #-12]
   2fec4:	movw	r1, #0
   2fec8:	cmp	r0, r1
   2fecc:	bne	2ff70 <__assert_fail@plt+0x1d3b8>
   2fed0:	ldr	r0, [fp, #-4]
   2fed4:	bl	12b94 <getgrgid@plt>
   2fed8:	str	r0, [sp, #16]
   2fedc:	ldr	r0, [sp, #16]
   2fee0:	movw	lr, #0
   2fee4:	cmp	r0, lr
   2fee8:	beq	2fefc <__assert_fail@plt+0x1d344>
   2feec:	ldr	r0, [sp, #16]
   2fef0:	ldr	r0, [r0]
   2fef4:	str	r0, [sp, #8]
   2fef8:	b	2ff0c <__assert_fail@plt+0x1d354>
   2fefc:	movw	r0, #39197	; 0x991d
   2ff00:	movt	r0, #7
   2ff04:	str	r0, [sp, #8]
   2ff08:	b	2ff0c <__assert_fail@plt+0x1d354>
   2ff0c:	ldr	r0, [sp, #8]
   2ff10:	str	r0, [sp, #12]
   2ff14:	ldr	r0, [sp, #12]
   2ff18:	bl	12888 <strlen@plt>
   2ff1c:	add	r0, r0, #1
   2ff20:	add	r0, r0, #11
   2ff24:	mvn	lr, #3
   2ff28:	and	r0, r0, lr
   2ff2c:	bl	4c394 <__assert_fail@plt+0x397dc>
   2ff30:	str	r0, [fp, #-12]
   2ff34:	ldr	r0, [fp, #-4]
   2ff38:	ldr	lr, [fp, #-12]
   2ff3c:	str	r0, [lr]
   2ff40:	ldr	r0, [fp, #-12]
   2ff44:	add	r0, r0, #8
   2ff48:	ldr	r1, [sp, #12]
   2ff4c:	bl	12738 <strcpy@plt>
   2ff50:	movw	r1, #65244	; 0xfedc
   2ff54:	movt	r1, #8
   2ff58:	ldr	lr, [r1]
   2ff5c:	ldr	r2, [fp, #-12]
   2ff60:	str	lr, [r2, #4]
   2ff64:	ldr	r2, [fp, #-12]
   2ff68:	str	r2, [r1]
   2ff6c:	str	r0, [sp, #4]
   2ff70:	ldr	r0, [fp, #-12]
   2ff74:	ldrb	r0, [r0, #8]
   2ff78:	cmp	r0, #0
   2ff7c:	beq	2ff90 <__assert_fail@plt+0x1d3d8>
   2ff80:	ldr	r0, [fp, #-12]
   2ff84:	add	r0, r0, #8
   2ff88:	str	r0, [sp]
   2ff8c:	b	2ff9c <__assert_fail@plt+0x1d3e4>
   2ff90:	movw	r0, #0
   2ff94:	str	r0, [sp]
   2ff98:	b	2ff9c <__assert_fail@plt+0x1d3e4>
   2ff9c:	ldr	r0, [sp]
   2ffa0:	mov	sp, fp
   2ffa4:	pop	{fp, pc}
   2ffa8:	push	{fp, lr}
   2ffac:	mov	fp, sp
   2ffb0:	sub	sp, sp, #24
   2ffb4:	str	r0, [fp, #-8]
   2ffb8:	movw	r0, #65244	; 0xfedc
   2ffbc:	movt	r0, #8
   2ffc0:	ldr	r0, [r0]
   2ffc4:	str	r0, [sp, #12]
   2ffc8:	ldr	r0, [sp, #12]
   2ffcc:	movw	r1, #0
   2ffd0:	cmp	r0, r1
   2ffd4:	beq	30028 <__assert_fail@plt+0x1d470>
   2ffd8:	ldr	r0, [sp, #12]
   2ffdc:	ldrb	r0, [r0, #8]
   2ffe0:	ldr	r1, [fp, #-8]
   2ffe4:	ldrb	r1, [r1]
   2ffe8:	cmp	r0, r1
   2ffec:	bne	30014 <__assert_fail@plt+0x1d45c>
   2fff0:	ldr	r0, [sp, #12]
   2fff4:	add	r0, r0, #8
   2fff8:	ldr	r1, [fp, #-8]
   2fffc:	bl	124c8 <strcmp@plt>
   30000:	cmp	r0, #0
   30004:	bne	30014 <__assert_fail@plt+0x1d45c>
   30008:	ldr	r0, [sp, #12]
   3000c:	str	r0, [fp, #-4]
   30010:	b	30144 <__assert_fail@plt+0x1d58c>
   30014:	b	30018 <__assert_fail@plt+0x1d460>
   30018:	ldr	r0, [sp, #12]
   3001c:	ldr	r0, [r0, #4]
   30020:	str	r0, [sp, #12]
   30024:	b	2ffc8 <__assert_fail@plt+0x1d410>
   30028:	movw	r0, #65248	; 0xfee0
   3002c:	movt	r0, #8
   30030:	ldr	r0, [r0]
   30034:	str	r0, [sp, #12]
   30038:	ldr	r0, [sp, #12]
   3003c:	movw	r1, #0
   30040:	cmp	r0, r1
   30044:	beq	30098 <__assert_fail@plt+0x1d4e0>
   30048:	ldr	r0, [sp, #12]
   3004c:	ldrb	r0, [r0, #8]
   30050:	ldr	r1, [fp, #-8]
   30054:	ldrb	r1, [r1]
   30058:	cmp	r0, r1
   3005c:	bne	30084 <__assert_fail@plt+0x1d4cc>
   30060:	ldr	r0, [sp, #12]
   30064:	add	r0, r0, #8
   30068:	ldr	r1, [fp, #-8]
   3006c:	bl	124c8 <strcmp@plt>
   30070:	cmp	r0, #0
   30074:	bne	30084 <__assert_fail@plt+0x1d4cc>
   30078:	movw	r0, #0
   3007c:	str	r0, [fp, #-4]
   30080:	b	30144 <__assert_fail@plt+0x1d58c>
   30084:	b	30088 <__assert_fail@plt+0x1d4d0>
   30088:	ldr	r0, [sp, #12]
   3008c:	ldr	r0, [r0, #4]
   30090:	str	r0, [sp, #12]
   30094:	b	30038 <__assert_fail@plt+0x1d480>
   30098:	ldr	r0, [fp, #-8]
   3009c:	bl	12ba0 <getgrnam@plt>
   300a0:	str	r0, [sp, #8]
   300a4:	ldr	r0, [fp, #-8]
   300a8:	bl	12888 <strlen@plt>
   300ac:	add	r0, r0, #1
   300b0:	add	r0, r0, #11
   300b4:	mvn	lr, #3
   300b8:	and	r0, r0, lr
   300bc:	bl	4c394 <__assert_fail@plt+0x397dc>
   300c0:	str	r0, [sp, #12]
   300c4:	ldr	r0, [sp, #12]
   300c8:	add	r0, r0, #8
   300cc:	ldr	r1, [fp, #-8]
   300d0:	bl	12738 <strcpy@plt>
   300d4:	ldr	r1, [sp, #8]
   300d8:	movw	lr, #0
   300dc:	cmp	r1, lr
   300e0:	str	r0, [sp, #4]
   300e4:	beq	30120 <__assert_fail@plt+0x1d568>
   300e8:	ldr	r0, [sp, #8]
   300ec:	ldr	r0, [r0, #8]
   300f0:	ldr	r1, [sp, #12]
   300f4:	str	r0, [r1]
   300f8:	movw	r0, #65244	; 0xfedc
   300fc:	movt	r0, #8
   30100:	ldr	r1, [r0]
   30104:	ldr	r2, [sp, #12]
   30108:	str	r1, [r2, #4]
   3010c:	ldr	r1, [sp, #12]
   30110:	str	r1, [r0]
   30114:	ldr	r0, [sp, #12]
   30118:	str	r0, [fp, #-4]
   3011c:	b	30144 <__assert_fail@plt+0x1d58c>
   30120:	movw	r0, #65248	; 0xfee0
   30124:	movt	r0, #8
   30128:	ldr	r1, [r0]
   3012c:	ldr	r2, [sp, #12]
   30130:	str	r1, [r2, #4]
   30134:	ldr	r1, [sp, #12]
   30138:	str	r1, [r0]
   3013c:	movw	r0, #0
   30140:	str	r0, [fp, #-4]
   30144:	ldr	r0, [fp, #-4]
   30148:	mov	sp, fp
   3014c:	pop	{fp, pc}
   30150:	push	{r4, r5, fp, lr}
   30154:	add	fp, sp, #8
   30158:	sub	sp, sp, #432	; 0x1b0
   3015c:	str	r0, [fp, #-16]
   30160:	str	r1, [fp, #-20]	; 0xffffffec
   30164:	bl	12720 <__ctype_get_mb_cur_max@plt>
   30168:	cmp	r0, #1
   3016c:	bls	306b4 <__assert_fail@plt+0x1dafc>
   30170:	ldr	r0, [fp, #-20]	; 0xffffffec
   30174:	str	r0, [fp, #-60]	; 0xffffffc4
   30178:	movw	r0, #0
   3017c:	strb	r0, [fp, #-76]	; 0xffffffb4
   30180:	sub	r1, fp, #76	; 0x4c
   30184:	add	r2, r1, #4
   30188:	str	r0, [sp, #68]	; 0x44
   3018c:	mov	r0, r2
   30190:	ldr	r2, [sp, #68]	; 0x44
   30194:	and	r3, r2, #255	; 0xff
   30198:	str	r1, [sp, #64]	; 0x40
   3019c:	mov	r1, r3
   301a0:	movw	r2, #8
   301a4:	bl	12900 <memset@plt>
   301a8:	ldr	r0, [sp, #68]	; 0x44
   301ac:	strb	r0, [fp, #-64]	; 0xffffffc0
   301b0:	ldr	r0, [sp, #64]	; 0x40
   301b4:	bl	3172c <__assert_fail@plt+0x1eb74>
   301b8:	ldrb	r0, [fp, #-52]	; 0xffffffcc
   301bc:	tst	r0, #1
   301c0:	movw	r0, #0
   301c4:	str	r0, [sp, #60]	; 0x3c
   301c8:	beq	301e0 <__assert_fail@plt+0x1d628>
   301cc:	ldr	r0, [fp, #-48]	; 0xffffffd0
   301d0:	cmp	r0, #0
   301d4:	movw	r0, #0
   301d8:	moveq	r0, #1
   301dc:	str	r0, [sp, #60]	; 0x3c
   301e0:	ldr	r0, [sp, #60]	; 0x3c
   301e4:	mvn	r1, #0
   301e8:	eor	r0, r0, r1
   301ec:	tst	r0, #1
   301f0:	beq	306a8 <__assert_fail@plt+0x1daf0>
   301f4:	movw	r0, #1
   301f8:	strb	r0, [fp, #-77]	; 0xffffffb3
   301fc:	movw	r0, #0
   30200:	str	r0, [fp, #-84]	; 0xffffffac
   30204:	str	r0, [fp, #-88]	; 0xffffffa8
   30208:	str	r0, [fp, #-92]	; 0xffffffa4
   3020c:	ldr	r0, [fp, #-20]	; 0xffffffec
   30210:	str	r0, [fp, #-132]	; 0xffffff7c
   30214:	movw	r0, #0
   30218:	strb	r0, [fp, #-148]	; 0xffffff6c
   3021c:	sub	r1, fp, #148	; 0x94
   30220:	add	r1, r1, #4
   30224:	str	r0, [sp, #56]	; 0x38
   30228:	mov	r0, r1
   3022c:	ldr	r1, [sp, #56]	; 0x38
   30230:	and	r1, r1, #255	; 0xff
   30234:	movw	r2, #8
   30238:	str	r2, [sp, #52]	; 0x34
   3023c:	bl	12900 <memset@plt>
   30240:	ldr	r0, [sp, #56]	; 0x38
   30244:	strb	r0, [fp, #-136]	; 0xffffff78
   30248:	ldr	r1, [fp, #-16]
   3024c:	str	r1, [fp, #-188]	; 0xffffff44
   30250:	strb	r0, [fp, #-204]	; 0xffffff34
   30254:	sub	r1, fp, #204	; 0xcc
   30258:	add	r1, r1, #4
   3025c:	mov	r0, r1
   30260:	ldr	r1, [sp, #56]	; 0x38
   30264:	and	r1, r1, #255	; 0xff
   30268:	ldr	r2, [sp, #52]	; 0x34
   3026c:	bl	12900 <memset@plt>
   30270:	ldr	r0, [sp, #56]	; 0x38
   30274:	strb	r0, [fp, #-192]	; 0xffffff40
   30278:	sub	r0, fp, #204	; 0xcc
   3027c:	bl	3172c <__assert_fail@plt+0x1eb74>
   30280:	ldrb	r0, [fp, #-180]	; 0xffffff4c
   30284:	tst	r0, #1
   30288:	movw	r0, #0
   3028c:	str	r0, [sp, #48]	; 0x30
   30290:	beq	302a8 <__assert_fail@plt+0x1d6f0>
   30294:	ldr	r0, [fp, #-176]	; 0xffffff50
   30298:	cmp	r0, #0
   3029c:	movw	r0, #0
   302a0:	moveq	r0, #1
   302a4:	str	r0, [sp, #48]	; 0x30
   302a8:	ldr	r0, [sp, #48]	; 0x30
   302ac:	mvn	r1, #0
   302b0:	eor	r0, r0, r1
   302b4:	tst	r0, #1
   302b8:	bne	302c8 <__assert_fail@plt+0x1d710>
   302bc:	movw	r0, #0
   302c0:	str	r0, [fp, #-12]
   302c4:	b	308f4 <__assert_fail@plt+0x1dd3c>
   302c8:	ldrb	r0, [fp, #-77]	; 0xffffffb3
   302cc:	tst	r0, #1
   302d0:	beq	3041c <__assert_fail@plt+0x1d864>
   302d4:	ldr	r0, [fp, #-84]	; 0xffffffac
   302d8:	cmp	r0, #10
   302dc:	bcc	3041c <__assert_fail@plt+0x1d864>
   302e0:	ldr	r0, [fp, #-88]	; 0xffffffa8
   302e4:	ldr	r1, [fp, #-84]	; 0xffffffac
   302e8:	movw	r2, #5
   302ec:	mul	r1, r1, r2
   302f0:	cmp	r0, r1
   302f4:	bcc	3041c <__assert_fail@plt+0x1d864>
   302f8:	ldr	r0, [fp, #-88]	; 0xffffffa8
   302fc:	ldr	r1, [fp, #-92]	; 0xffffffa4
   30300:	sub	r0, r0, r1
   30304:	str	r0, [fp, #-208]	; 0xffffff30
   30308:	ldr	r0, [fp, #-208]	; 0xffffff30
   3030c:	cmp	r0, #0
   30310:	movw	r0, #0
   30314:	str	r0, [sp, #44]	; 0x2c
   30318:	bls	3035c <__assert_fail@plt+0x1d7a4>
   3031c:	sub	r0, fp, #148	; 0x94
   30320:	bl	3172c <__assert_fail@plt+0x1eb74>
   30324:	ldrb	r0, [fp, #-124]	; 0xffffff84
   30328:	tst	r0, #1
   3032c:	movw	r0, #0
   30330:	str	r0, [sp, #40]	; 0x28
   30334:	beq	3034c <__assert_fail@plt+0x1d794>
   30338:	ldr	r0, [fp, #-120]	; 0xffffff88
   3033c:	cmp	r0, #0
   30340:	movw	r0, #0
   30344:	moveq	r0, #1
   30348:	str	r0, [sp, #40]	; 0x28
   3034c:	ldr	r0, [sp, #40]	; 0x28
   30350:	mvn	r1, #0
   30354:	eor	r0, r0, r1
   30358:	str	r0, [sp, #44]	; 0x2c
   3035c:	ldr	r0, [sp, #44]	; 0x2c
   30360:	tst	r0, #1
   30364:	beq	30394 <__assert_fail@plt+0x1d7dc>
   30368:	ldr	r0, [fp, #-128]	; 0xffffff80
   3036c:	ldr	r1, [fp, #-132]	; 0xffffff7c
   30370:	add	r0, r1, r0
   30374:	str	r0, [fp, #-132]	; 0xffffff7c
   30378:	movw	r0, #0
   3037c:	strb	r0, [fp, #-136]	; 0xffffff78
   30380:	ldr	r0, [fp, #-208]	; 0xffffff30
   30384:	mvn	r1, #0
   30388:	add	r0, r0, r1
   3038c:	str	r0, [fp, #-208]	; 0xffffff30
   30390:	b	30308 <__assert_fail@plt+0x1d750>
   30394:	ldr	r0, [fp, #-88]	; 0xffffffa8
   30398:	str	r0, [fp, #-92]	; 0xffffffa4
   3039c:	sub	r0, fp, #148	; 0x94
   303a0:	bl	3172c <__assert_fail@plt+0x1eb74>
   303a4:	ldrb	r0, [fp, #-124]	; 0xffffff84
   303a8:	tst	r0, #1
   303ac:	movw	r0, #0
   303b0:	str	r0, [sp, #36]	; 0x24
   303b4:	beq	303cc <__assert_fail@plt+0x1d814>
   303b8:	ldr	r0, [fp, #-120]	; 0xffffff88
   303bc:	cmp	r0, #0
   303c0:	movw	r0, #0
   303c4:	moveq	r0, #1
   303c8:	str	r0, [sp, #36]	; 0x24
   303cc:	ldr	r0, [sp, #36]	; 0x24
   303d0:	mvn	r1, #0
   303d4:	eor	r0, r0, r1
   303d8:	tst	r0, #1
   303dc:	bne	30418 <__assert_fail@plt+0x1d860>
   303e0:	ldr	r0, [fp, #-16]
   303e4:	ldr	r1, [fp, #-20]	; 0xffffffec
   303e8:	sub	r2, fp, #212	; 0xd4
   303ec:	bl	30900 <__assert_fail@plt+0x1dd48>
   303f0:	and	r0, r0, #1
   303f4:	strb	r0, [fp, #-213]	; 0xffffff2b
   303f8:	ldrb	r0, [fp, #-213]	; 0xffffff2b
   303fc:	tst	r0, #1
   30400:	beq	30410 <__assert_fail@plt+0x1d858>
   30404:	ldr	r0, [fp, #-212]	; 0xffffff2c
   30408:	str	r0, [fp, #-12]
   3040c:	b	308f4 <__assert_fail@plt+0x1dd3c>
   30410:	movw	r0, #0
   30414:	strb	r0, [fp, #-77]	; 0xffffffb3
   30418:	b	3041c <__assert_fail@plt+0x1d864>
   3041c:	ldr	r0, [fp, #-84]	; 0xffffffac
   30420:	add	r0, r0, #1
   30424:	str	r0, [fp, #-84]	; 0xffffffac
   30428:	ldr	r0, [fp, #-88]	; 0xffffffa8
   3042c:	add	r0, r0, #1
   30430:	str	r0, [fp, #-88]	; 0xffffffa8
   30434:	ldrb	r0, [fp, #-180]	; 0xffffff4c
   30438:	tst	r0, #1
   3043c:	beq	30460 <__assert_fail@plt+0x1d8a8>
   30440:	ldrb	r0, [fp, #-52]	; 0xffffffcc
   30444:	tst	r0, #1
   30448:	beq	30460 <__assert_fail@plt+0x1d8a8>
   3044c:	ldr	r0, [fp, #-176]	; 0xffffff50
   30450:	ldr	r1, [fp, #-48]	; 0xffffffd0
   30454:	cmp	r0, r1
   30458:	beq	30488 <__assert_fail@plt+0x1d8d0>
   3045c:	b	30688 <__assert_fail@plt+0x1dad0>
   30460:	ldr	r0, [fp, #-184]	; 0xffffff48
   30464:	ldr	r1, [fp, #-56]	; 0xffffffc8
   30468:	cmp	r0, r1
   3046c:	bne	30688 <__assert_fail@plt+0x1dad0>
   30470:	ldr	r0, [fp, #-188]	; 0xffffff44
   30474:	ldr	r1, [fp, #-60]	; 0xffffffc4
   30478:	ldr	r2, [fp, #-184]	; 0xffffff48
   3047c:	bl	12624 <memcmp@plt>
   30480:	cmp	r0, #0
   30484:	bne	30688 <__assert_fail@plt+0x1dad0>
   30488:	add	r0, sp, #168	; 0xa8
   3048c:	sub	r1, fp, #204	; 0xcc
   30490:	movw	r2, #56	; 0x38
   30494:	bl	125c4 <memcpy@plt>
   30498:	ldr	r0, [sp, #188]	; 0xbc
   3049c:	ldr	r1, [sp, #184]	; 0xb8
   304a0:	add	r0, r1, r0
   304a4:	str	r0, [sp, #184]	; 0xb8
   304a8:	movw	r0, #0
   304ac:	strb	r0, [sp, #180]	; 0xb4
   304b0:	ldr	r1, [fp, #-20]	; 0xffffffec
   304b4:	str	r1, [sp, #128]	; 0x80
   304b8:	strb	r0, [sp, #112]	; 0x70
   304bc:	add	r1, sp, #112	; 0x70
   304c0:	add	r2, r1, #4
   304c4:	str	r0, [sp, #32]
   304c8:	mov	r0, r2
   304cc:	ldr	r2, [sp, #32]
   304d0:	and	lr, r2, #255	; 0xff
   304d4:	str	r1, [sp, #28]
   304d8:	mov	r1, lr
   304dc:	movw	r2, #8
   304e0:	bl	12900 <memset@plt>
   304e4:	ldr	r0, [sp, #32]
   304e8:	strb	r0, [sp, #124]	; 0x7c
   304ec:	ldr	r0, [sp, #28]
   304f0:	bl	3172c <__assert_fail@plt+0x1eb74>
   304f4:	ldrb	r0, [sp, #136]	; 0x88
   304f8:	tst	r0, #1
   304fc:	movw	r0, #0
   30500:	str	r0, [sp, #24]
   30504:	beq	3051c <__assert_fail@plt+0x1d964>
   30508:	ldr	r0, [sp, #140]	; 0x8c
   3050c:	cmp	r0, #0
   30510:	movw	r0, #0
   30514:	moveq	r0, #1
   30518:	str	r0, [sp, #24]
   3051c:	ldr	r0, [sp, #24]
   30520:	mvn	r1, #0
   30524:	eor	r0, r0, r1
   30528:	tst	r0, #1
   3052c:	bne	30534 <__assert_fail@plt+0x1d97c>
   30530:	bl	12b64 <abort@plt>
   30534:	ldr	r0, [sp, #132]	; 0x84
   30538:	ldr	r1, [sp, #128]	; 0x80
   3053c:	add	r0, r1, r0
   30540:	str	r0, [sp, #128]	; 0x80
   30544:	movw	r0, #0
   30548:	strb	r0, [sp, #124]	; 0x7c
   3054c:	add	r0, sp, #112	; 0x70
   30550:	bl	3172c <__assert_fail@plt+0x1eb74>
   30554:	ldrb	r0, [sp, #136]	; 0x88
   30558:	tst	r0, #1
   3055c:	movw	r0, #0
   30560:	str	r0, [sp, #20]
   30564:	beq	3057c <__assert_fail@plt+0x1d9c4>
   30568:	ldr	r0, [sp, #140]	; 0x8c
   3056c:	cmp	r0, #0
   30570:	movw	r0, #0
   30574:	moveq	r0, #1
   30578:	str	r0, [sp, #20]
   3057c:	ldr	r0, [sp, #20]
   30580:	mvn	r1, #0
   30584:	eor	r0, r0, r1
   30588:	tst	r0, #1
   3058c:	bne	3059c <__assert_fail@plt+0x1d9e4>
   30590:	ldr	r0, [fp, #-188]	; 0xffffff44
   30594:	str	r0, [fp, #-12]
   30598:	b	308f4 <__assert_fail@plt+0x1dd3c>
   3059c:	add	r0, sp, #168	; 0xa8
   305a0:	bl	3172c <__assert_fail@plt+0x1eb74>
   305a4:	ldrb	r0, [sp, #192]	; 0xc0
   305a8:	tst	r0, #1
   305ac:	movw	r0, #0
   305b0:	str	r0, [sp, #16]
   305b4:	beq	305cc <__assert_fail@plt+0x1da14>
   305b8:	ldr	r0, [sp, #196]	; 0xc4
   305bc:	cmp	r0, #0
   305c0:	movw	r0, #0
   305c4:	moveq	r0, #1
   305c8:	str	r0, [sp, #16]
   305cc:	ldr	r0, [sp, #16]
   305d0:	mvn	r1, #0
   305d4:	eor	r0, r0, r1
   305d8:	tst	r0, #1
   305dc:	bne	305ec <__assert_fail@plt+0x1da34>
   305e0:	movw	r0, #0
   305e4:	str	r0, [fp, #-12]
   305e8:	b	308f4 <__assert_fail@plt+0x1dd3c>
   305ec:	ldr	r0, [fp, #-88]	; 0xffffffa8
   305f0:	add	r0, r0, #1
   305f4:	str	r0, [fp, #-88]	; 0xffffffa8
   305f8:	ldrb	r0, [sp, #192]	; 0xc0
   305fc:	tst	r0, #1
   30600:	beq	30624 <__assert_fail@plt+0x1da6c>
   30604:	ldrb	r0, [sp, #136]	; 0x88
   30608:	tst	r0, #1
   3060c:	beq	30624 <__assert_fail@plt+0x1da6c>
   30610:	ldr	r0, [sp, #196]	; 0xc4
   30614:	ldr	r1, [sp, #140]	; 0x8c
   30618:	cmp	r0, r1
   3061c:	beq	30650 <__assert_fail@plt+0x1da98>
   30620:	b	3064c <__assert_fail@plt+0x1da94>
   30624:	ldr	r0, [sp, #188]	; 0xbc
   30628:	ldr	r1, [sp, #132]	; 0x84
   3062c:	cmp	r0, r1
   30630:	bne	3064c <__assert_fail@plt+0x1da94>
   30634:	ldr	r0, [sp, #184]	; 0xb8
   30638:	ldr	r1, [sp, #128]	; 0x80
   3063c:	ldr	r2, [sp, #188]	; 0xbc
   30640:	bl	12624 <memcmp@plt>
   30644:	cmp	r0, #0
   30648:	beq	30650 <__assert_fail@plt+0x1da98>
   3064c:	b	30684 <__assert_fail@plt+0x1dacc>
   30650:	b	30654 <__assert_fail@plt+0x1da9c>
   30654:	ldr	r0, [sp, #188]	; 0xbc
   30658:	ldr	r1, [sp, #184]	; 0xb8
   3065c:	add	r0, r1, r0
   30660:	str	r0, [sp, #184]	; 0xb8
   30664:	movw	r0, #0
   30668:	strb	r0, [sp, #180]	; 0xb4
   3066c:	ldr	r1, [sp, #132]	; 0x84
   30670:	ldr	r2, [sp, #128]	; 0x80
   30674:	add	r1, r2, r1
   30678:	str	r1, [sp, #128]	; 0x80
   3067c:	strb	r0, [sp, #124]	; 0x7c
   30680:	b	3054c <__assert_fail@plt+0x1d994>
   30684:	b	30688 <__assert_fail@plt+0x1dad0>
   30688:	b	3068c <__assert_fail@plt+0x1dad4>
   3068c:	ldr	r0, [fp, #-184]	; 0xffffff48
   30690:	ldr	r1, [fp, #-188]	; 0xffffff44
   30694:	add	r0, r1, r0
   30698:	str	r0, [fp, #-188]	; 0xffffff44
   3069c:	movw	r0, #0
   306a0:	strb	r0, [fp, #-192]	; 0xffffff40
   306a4:	b	30278 <__assert_fail@plt+0x1d6c0>
   306a8:	ldr	r0, [fp, #-16]
   306ac:	str	r0, [fp, #-12]
   306b0:	b	308f4 <__assert_fail@plt+0x1dd3c>
   306b4:	ldr	r0, [fp, #-20]	; 0xffffffec
   306b8:	ldrb	r0, [r0]
   306bc:	cmp	r0, #0
   306c0:	beq	308ec <__assert_fail@plt+0x1dd34>
   306c4:	movw	r0, #1
   306c8:	strb	r0, [sp, #111]	; 0x6f
   306cc:	movw	r0, #0
   306d0:	str	r0, [sp, #104]	; 0x68
   306d4:	str	r0, [sp, #100]	; 0x64
   306d8:	str	r0, [sp, #96]	; 0x60
   306dc:	ldr	r0, [fp, #-20]	; 0xffffffec
   306e0:	str	r0, [sp, #92]	; 0x5c
   306e4:	ldr	r0, [fp, #-20]	; 0xffffffec
   306e8:	add	r1, r0, #1
   306ec:	str	r1, [fp, #-20]	; 0xffffffec
   306f0:	ldrb	r0, [r0]
   306f4:	strb	r0, [sp, #91]	; 0x5b
   306f8:	ldr	r0, [fp, #-16]
   306fc:	ldrb	r0, [r0]
   30700:	cmp	r0, #0
   30704:	bne	30714 <__assert_fail@plt+0x1db5c>
   30708:	movw	r0, #0
   3070c:	str	r0, [fp, #-12]
   30710:	b	308f4 <__assert_fail@plt+0x1dd3c>
   30714:	ldrb	r0, [sp, #111]	; 0x6f
   30718:	tst	r0, #1
   3071c:	beq	30814 <__assert_fail@plt+0x1dc5c>
   30720:	ldr	r0, [sp, #104]	; 0x68
   30724:	cmp	r0, #10
   30728:	bcc	30814 <__assert_fail@plt+0x1dc5c>
   3072c:	ldr	r0, [sp, #100]	; 0x64
   30730:	ldr	r1, [sp, #104]	; 0x68
   30734:	movw	r2, #5
   30738:	mul	r1, r1, r2
   3073c:	cmp	r0, r1
   30740:	bcc	30814 <__assert_fail@plt+0x1dc5c>
   30744:	ldr	r0, [sp, #92]	; 0x5c
   30748:	movw	r1, #0
   3074c:	cmp	r0, r1
   30750:	beq	30794 <__assert_fail@plt+0x1dbdc>
   30754:	ldr	r0, [sp, #92]	; 0x5c
   30758:	ldr	r1, [sp, #100]	; 0x64
   3075c:	ldr	r2, [sp, #96]	; 0x60
   30760:	sub	r1, r1, r2
   30764:	bl	1299c <strnlen@plt>
   30768:	ldr	r1, [sp, #92]	; 0x5c
   3076c:	add	r0, r1, r0
   30770:	str	r0, [sp, #92]	; 0x5c
   30774:	ldr	r0, [sp, #92]	; 0x5c
   30778:	ldrb	r0, [r0]
   3077c:	cmp	r0, #0
   30780:	bne	3078c <__assert_fail@plt+0x1dbd4>
   30784:	movw	r0, #0
   30788:	str	r0, [sp, #92]	; 0x5c
   3078c:	ldr	r0, [sp, #100]	; 0x64
   30790:	str	r0, [sp, #96]	; 0x60
   30794:	ldr	r0, [sp, #92]	; 0x5c
   30798:	movw	r1, #0
   3079c:	cmp	r0, r1
   307a0:	bne	30810 <__assert_fail@plt+0x1dc58>
   307a4:	ldr	r0, [fp, #-16]
   307a8:	ldr	r1, [fp, #-20]	; 0xffffffec
   307ac:	mvn	r2, #0
   307b0:	add	r1, r1, r2
   307b4:	ldr	r3, [fp, #-20]	; 0xffffffec
   307b8:	add	r2, r3, r2
   307bc:	str	r0, [sp, #12]
   307c0:	mov	r0, r2
   307c4:	str	r1, [sp, #8]
   307c8:	bl	12888 <strlen@plt>
   307cc:	ldr	r1, [sp, #12]
   307d0:	str	r0, [sp, #4]
   307d4:	mov	r0, r1
   307d8:	ldr	r1, [sp, #8]
   307dc:	ldr	r2, [sp, #4]
   307e0:	add	r3, sp, #84	; 0x54
   307e4:	bl	30f58 <__assert_fail@plt+0x1e3a0>
   307e8:	and	r0, r0, #1
   307ec:	strb	r0, [sp, #83]	; 0x53
   307f0:	ldrb	r0, [sp, #83]	; 0x53
   307f4:	tst	r0, #1
   307f8:	beq	30808 <__assert_fail@plt+0x1dc50>
   307fc:	ldr	r0, [sp, #84]	; 0x54
   30800:	str	r0, [fp, #-12]
   30804:	b	308f4 <__assert_fail@plt+0x1dd3c>
   30808:	movw	r0, #0
   3080c:	strb	r0, [sp, #111]	; 0x6f
   30810:	b	30814 <__assert_fail@plt+0x1dc5c>
   30814:	ldr	r0, [sp, #104]	; 0x68
   30818:	add	r0, r0, #1
   3081c:	str	r0, [sp, #104]	; 0x68
   30820:	ldr	r0, [sp, #100]	; 0x64
   30824:	add	r0, r0, #1
   30828:	str	r0, [sp, #100]	; 0x64
   3082c:	ldr	r0, [fp, #-16]
   30830:	ldrb	r0, [r0]
   30834:	ldrb	r1, [sp, #91]	; 0x5b
   30838:	cmp	r0, r1
   3083c:	bne	308d8 <__assert_fail@plt+0x1dd20>
   30840:	ldr	r0, [fp, #-16]
   30844:	add	r0, r0, #1
   30848:	str	r0, [sp, #76]	; 0x4c
   3084c:	ldr	r0, [fp, #-20]	; 0xffffffec
   30850:	str	r0, [sp, #72]	; 0x48
   30854:	ldr	r0, [sp, #72]	; 0x48
   30858:	ldrb	r0, [r0]
   3085c:	cmp	r0, #0
   30860:	bne	30870 <__assert_fail@plt+0x1dcb8>
   30864:	ldr	r0, [fp, #-16]
   30868:	str	r0, [fp, #-12]
   3086c:	b	308f4 <__assert_fail@plt+0x1dd3c>
   30870:	ldr	r0, [sp, #76]	; 0x4c
   30874:	ldrb	r0, [r0]
   30878:	cmp	r0, #0
   3087c:	bne	3088c <__assert_fail@plt+0x1dcd4>
   30880:	movw	r0, #0
   30884:	str	r0, [fp, #-12]
   30888:	b	308f4 <__assert_fail@plt+0x1dd3c>
   3088c:	ldr	r0, [sp, #100]	; 0x64
   30890:	add	r0, r0, #1
   30894:	str	r0, [sp, #100]	; 0x64
   30898:	ldr	r0, [sp, #76]	; 0x4c
   3089c:	ldrb	r0, [r0]
   308a0:	ldr	r1, [sp, #72]	; 0x48
   308a4:	ldrb	r1, [r1]
   308a8:	cmp	r0, r1
   308ac:	beq	308b4 <__assert_fail@plt+0x1dcfc>
   308b0:	b	308d4 <__assert_fail@plt+0x1dd1c>
   308b4:	b	308b8 <__assert_fail@plt+0x1dd00>
   308b8:	ldr	r0, [sp, #76]	; 0x4c
   308bc:	add	r0, r0, #1
   308c0:	str	r0, [sp, #76]	; 0x4c
   308c4:	ldr	r0, [sp, #72]	; 0x48
   308c8:	add	r0, r0, #1
   308cc:	str	r0, [sp, #72]	; 0x48
   308d0:	b	30854 <__assert_fail@plt+0x1dc9c>
   308d4:	b	308d8 <__assert_fail@plt+0x1dd20>
   308d8:	b	308dc <__assert_fail@plt+0x1dd24>
   308dc:	ldr	r0, [fp, #-16]
   308e0:	add	r0, r0, #1
   308e4:	str	r0, [fp, #-16]
   308e8:	b	306f8 <__assert_fail@plt+0x1db40>
   308ec:	ldr	r0, [fp, #-16]
   308f0:	str	r0, [fp, #-12]
   308f4:	ldr	r0, [fp, #-12]
   308f8:	sub	sp, fp, #8
   308fc:	pop	{r4, r5, fp, pc}
   30900:	push	{r4, r5, fp, lr}
   30904:	add	fp, sp, #8
   30908:	sub	sp, sp, #264	; 0x108
   3090c:	str	r0, [fp, #-16]
   30910:	str	r1, [fp, #-20]	; 0xffffffec
   30914:	str	r2, [fp, #-24]	; 0xffffffe8
   30918:	ldr	r0, [fp, #-20]	; 0xffffffec
   3091c:	bl	7367c <__assert_fail@plt+0x60ac4>
   30920:	ldr	r1, [pc, #1580]	; 30f54 <__assert_fail@plt+0x1e39c>
   30924:	str	r0, [fp, #-28]	; 0xffffffe4
   30928:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3092c:	cmp	r1, r0
   30930:	bcs	30940 <__assert_fail@plt+0x1dd88>
   30934:	movw	r0, #0
   30938:	str	r0, [fp, #-240]	; 0xffffff10
   3093c:	b	309a8 <__assert_fail@plt+0x1ddf0>
   30940:	ldr	r0, [fp, #-28]	; 0xffffffe4
   30944:	movw	r1, #44	; 0x2c
   30948:	mul	r0, r0, r1
   3094c:	movw	r1, #4017	; 0xfb1
   30950:	cmp	r0, r1
   30954:	bcs	3098c <__assert_fail@plt+0x1ddd4>
   30958:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3095c:	mov	r1, #44	; 0x2c
   30960:	mul	r0, r0, r1
   30964:	add	r0, r0, #22
   30968:	bic	r0, r0, #7
   3096c:	mov	r1, sp
   30970:	sub	r0, r1, r0
   30974:	mov	sp, r0
   30978:	add	r0, r0, #15
   3097c:	mvn	r1, #15
   30980:	and	r0, r0, r1
   30984:	str	r0, [fp, #-244]	; 0xffffff0c
   30988:	b	309a0 <__assert_fail@plt+0x1dde8>
   3098c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   30990:	movw	r1, #44	; 0x2c
   30994:	mul	r0, r0, r1
   30998:	bl	73384 <__assert_fail@plt+0x607cc>
   3099c:	str	r0, [fp, #-244]	; 0xffffff0c
   309a0:	ldr	r0, [fp, #-244]	; 0xffffff0c
   309a4:	str	r0, [fp, #-240]	; 0xffffff10
   309a8:	ldr	r0, [fp, #-240]	; 0xffffff10
   309ac:	str	r0, [fp, #-40]	; 0xffffffd8
   309b0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   309b4:	movw	r1, #0
   309b8:	cmp	r0, r1
   309bc:	bne	309d0 <__assert_fail@plt+0x1de18>
   309c0:	movw	r0, #0
   309c4:	and	r0, r0, #1
   309c8:	strb	r0, [fp, #-9]
   309cc:	b	30f44 <__assert_fail@plt+0x1e38c>
   309d0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   309d4:	str	r0, [fp, #-32]	; 0xffffffe0
   309d8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   309dc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   309e0:	movw	r2, #40	; 0x28
   309e4:	mul	r1, r1, r2
   309e8:	add	r0, r0, r1
   309ec:	str	r0, [fp, #-44]	; 0xffffffd4
   309f0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   309f4:	str	r0, [fp, #-36]	; 0xffffffdc
   309f8:	movw	r0, #0
   309fc:	str	r0, [fp, #-104]	; 0xffffff98
   30a00:	ldr	r0, [fp, #-20]	; 0xffffffec
   30a04:	str	r0, [fp, #-84]	; 0xffffffac
   30a08:	movw	r0, #0
   30a0c:	strb	r0, [fp, #-100]	; 0xffffff9c
   30a10:	sub	r1, fp, #100	; 0x64
   30a14:	add	r1, r1, #4
   30a18:	str	r0, [fp, #-248]	; 0xffffff08
   30a1c:	mov	r0, r1
   30a20:	ldr	r1, [fp, #-248]	; 0xffffff08
   30a24:	and	r1, r1, #255	; 0xff
   30a28:	movw	r2, #8
   30a2c:	bl	12900 <memset@plt>
   30a30:	ldr	r0, [fp, #-248]	; 0xffffff08
   30a34:	strb	r0, [fp, #-88]	; 0xffffffa8
   30a38:	sub	r0, fp, #100	; 0x64
   30a3c:	bl	3172c <__assert_fail@plt+0x1eb74>
   30a40:	ldrb	r0, [fp, #-76]	; 0xffffffb4
   30a44:	tst	r0, #1
   30a48:	movw	r0, #0
   30a4c:	str	r0, [fp, #-252]	; 0xffffff04
   30a50:	beq	30a68 <__assert_fail@plt+0x1deb0>
   30a54:	ldr	r0, [fp, #-72]	; 0xffffffb8
   30a58:	cmp	r0, #0
   30a5c:	movw	r0, #0
   30a60:	moveq	r0, #1
   30a64:	str	r0, [fp, #-252]	; 0xffffff04
   30a68:	ldr	r0, [fp, #-252]	; 0xffffff04
   30a6c:	mvn	r1, #0
   30a70:	eor	r0, r0, r1
   30a74:	tst	r0, #1
   30a78:	beq	30ac4 <__assert_fail@plt+0x1df0c>
   30a7c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   30a80:	ldr	r1, [fp, #-104]	; 0xffffff98
   30a84:	movw	r2, #40	; 0x28
   30a88:	mul	r1, r1, r2
   30a8c:	add	r0, r0, r1
   30a90:	sub	r1, fp, #100	; 0x64
   30a94:	add	r1, r1, #16
   30a98:	bl	73578 <__assert_fail@plt+0x609c0>
   30a9c:	ldr	r0, [fp, #-80]	; 0xffffffb0
   30aa0:	ldr	r1, [fp, #-84]	; 0xffffffac
   30aa4:	add	r0, r1, r0
   30aa8:	str	r0, [fp, #-84]	; 0xffffffac
   30aac:	movw	r0, #0
   30ab0:	strb	r0, [fp, #-88]	; 0xffffffa8
   30ab4:	ldr	r0, [fp, #-104]	; 0xffffff98
   30ab8:	add	r0, r0, #1
   30abc:	str	r0, [fp, #-104]	; 0xffffff98
   30ac0:	b	30a38 <__assert_fail@plt+0x1de80>
   30ac4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   30ac8:	movw	r1, #1
   30acc:	str	r1, [r0, #4]
   30ad0:	movw	r0, #0
   30ad4:	str	r0, [fp, #-112]	; 0xffffff90
   30ad8:	movw	r0, #2
   30adc:	str	r0, [fp, #-108]	; 0xffffff94
   30ae0:	ldr	r0, [fp, #-108]	; 0xffffff94
   30ae4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   30ae8:	cmp	r0, r1
   30aec:	bcs	30c44 <__assert_fail@plt+0x1e08c>
   30af0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   30af4:	ldr	r1, [fp, #-108]	; 0xffffff94
   30af8:	sub	r1, r1, #1
   30afc:	movw	r2, #40	; 0x28
   30b00:	mul	r1, r1, r2
   30b04:	add	r0, r0, r1
   30b08:	str	r0, [fp, #-116]	; 0xffffff8c
   30b0c:	ldr	r0, [fp, #-116]	; 0xffffff8c
   30b10:	ldrb	r0, [r0, #8]
   30b14:	tst	r0, #1
   30b18:	beq	30b68 <__assert_fail@plt+0x1dfb0>
   30b1c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   30b20:	ldr	r1, [fp, #-112]	; 0xffffff90
   30b24:	movw	r2, #40	; 0x28
   30b28:	mul	r1, r1, r2
   30b2c:	add	r0, r0, r1
   30b30:	ldrb	r0, [r0, #8]
   30b34:	tst	r0, #1
   30b38:	beq	30b68 <__assert_fail@plt+0x1dfb0>
   30b3c:	ldr	r0, [fp, #-116]	; 0xffffff8c
   30b40:	ldr	r0, [r0, #12]
   30b44:	ldr	r1, [fp, #-32]	; 0xffffffe0
   30b48:	ldr	r2, [fp, #-112]	; 0xffffff90
   30b4c:	movw	r3, #40	; 0x28
   30b50:	mul	r2, r2, r3
   30b54:	add	r1, r1, r2
   30b58:	ldr	r1, [r1, #12]
   30b5c:	cmp	r0, r1
   30b60:	beq	30bc4 <__assert_fail@plt+0x1e00c>
   30b64:	b	30bec <__assert_fail@plt+0x1e034>
   30b68:	ldr	r0, [fp, #-116]	; 0xffffff8c
   30b6c:	ldr	r0, [r0, #4]
   30b70:	ldr	r1, [fp, #-32]	; 0xffffffe0
   30b74:	ldr	r2, [fp, #-112]	; 0xffffff90
   30b78:	movw	r3, #40	; 0x28
   30b7c:	mul	r2, r2, r3
   30b80:	add	r1, r1, r2
   30b84:	ldr	r1, [r1, #4]
   30b88:	cmp	r0, r1
   30b8c:	bne	30bec <__assert_fail@plt+0x1e034>
   30b90:	ldr	r0, [fp, #-116]	; 0xffffff8c
   30b94:	ldr	r0, [r0]
   30b98:	ldr	r1, [fp, #-32]	; 0xffffffe0
   30b9c:	ldr	r2, [fp, #-112]	; 0xffffff90
   30ba0:	movw	r3, #40	; 0x28
   30ba4:	mul	r2, r2, r3
   30ba8:	add	r1, r1, r2
   30bac:	ldr	r1, [r1]
   30bb0:	ldr	r2, [fp, #-116]	; 0xffffff8c
   30bb4:	ldr	r2, [r2, #4]
   30bb8:	bl	12624 <memcmp@plt>
   30bbc:	cmp	r0, #0
   30bc0:	bne	30bec <__assert_fail@plt+0x1e034>
   30bc4:	ldr	r0, [fp, #-108]	; 0xffffff94
   30bc8:	ldr	r1, [fp, #-112]	; 0xffffff90
   30bcc:	add	r1, r1, #1
   30bd0:	str	r1, [fp, #-112]	; 0xffffff90
   30bd4:	sub	r0, r0, r1
   30bd8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   30bdc:	ldr	r2, [fp, #-108]	; 0xffffff94
   30be0:	add	r1, r1, r2, lsl #2
   30be4:	str	r0, [r1]
   30be8:	b	30c30 <__assert_fail@plt+0x1e078>
   30bec:	ldr	r0, [fp, #-112]	; 0xffffff90
   30bf0:	cmp	r0, #0
   30bf4:	bne	30c10 <__assert_fail@plt+0x1e058>
   30bf8:	ldr	r0, [fp, #-108]	; 0xffffff94
   30bfc:	mov	r1, r0
   30c00:	ldr	r2, [fp, #-36]	; 0xffffffdc
   30c04:	add	r0, r2, r0, lsl #2
   30c08:	str	r1, [r0]
   30c0c:	b	30c30 <__assert_fail@plt+0x1e078>
   30c10:	ldr	r0, [fp, #-112]	; 0xffffff90
   30c14:	mov	r1, r0
   30c18:	ldr	r2, [fp, #-36]	; 0xffffffdc
   30c1c:	add	r0, r2, r0, lsl #2
   30c20:	ldr	r0, [r0]
   30c24:	sub	r0, r1, r0
   30c28:	str	r0, [fp, #-112]	; 0xffffff90
   30c2c:	b	30b0c <__assert_fail@plt+0x1df54>
   30c30:	b	30c34 <__assert_fail@plt+0x1e07c>
   30c34:	ldr	r0, [fp, #-108]	; 0xffffff94
   30c38:	add	r0, r0, #1
   30c3c:	str	r0, [fp, #-108]	; 0xffffff94
   30c40:	b	30ae0 <__assert_fail@plt+0x1df28>
   30c44:	ldr	r0, [fp, #-24]	; 0xffffffe8
   30c48:	movw	r1, #0
   30c4c:	str	r1, [r0]
   30c50:	str	r1, [fp, #-120]	; 0xffffff88
   30c54:	ldr	r0, [fp, #-16]
   30c58:	str	r0, [fp, #-160]	; 0xffffff60
   30c5c:	movw	r0, #0
   30c60:	strb	r0, [fp, #-176]	; 0xffffff50
   30c64:	sub	r1, fp, #176	; 0xb0
   30c68:	add	r1, r1, #4
   30c6c:	str	r0, [fp, #-256]	; 0xffffff00
   30c70:	mov	r0, r1
   30c74:	ldr	r1, [fp, #-256]	; 0xffffff00
   30c78:	and	r1, r1, #255	; 0xff
   30c7c:	movw	r2, #8
   30c80:	str	r2, [fp, #-260]	; 0xfffffefc
   30c84:	bl	12900 <memset@plt>
   30c88:	ldr	r0, [fp, #-256]	; 0xffffff00
   30c8c:	strb	r0, [fp, #-164]	; 0xffffff5c
   30c90:	ldr	r1, [fp, #-16]
   30c94:	str	r1, [fp, #-216]	; 0xffffff28
   30c98:	strb	r0, [fp, #-232]	; 0xffffff18
   30c9c:	sub	r1, fp, #232	; 0xe8
   30ca0:	add	r1, r1, #4
   30ca4:	mov	r0, r1
   30ca8:	ldr	r1, [fp, #-256]	; 0xffffff00
   30cac:	and	r1, r1, #255	; 0xff
   30cb0:	ldr	r2, [fp, #-260]	; 0xfffffefc
   30cb4:	bl	12900 <memset@plt>
   30cb8:	ldr	r0, [fp, #-256]	; 0xffffff00
   30cbc:	strb	r0, [fp, #-220]	; 0xffffff24
   30cc0:	sub	r0, fp, #232	; 0xe8
   30cc4:	bl	3172c <__assert_fail@plt+0x1eb74>
   30cc8:	ldrb	r0, [fp, #-208]	; 0xffffff30
   30ccc:	tst	r0, #1
   30cd0:	movw	r0, #0
   30cd4:	str	r0, [fp, #-264]	; 0xfffffef8
   30cd8:	beq	30cf0 <__assert_fail@plt+0x1e138>
   30cdc:	ldr	r0, [fp, #-204]	; 0xffffff34
   30ce0:	cmp	r0, #0
   30ce4:	movw	r0, #0
   30ce8:	moveq	r0, #1
   30cec:	str	r0, [fp, #-264]	; 0xfffffef8
   30cf0:	ldr	r0, [fp, #-264]	; 0xfffffef8
   30cf4:	mvn	r1, #0
   30cf8:	eor	r0, r0, r1
   30cfc:	tst	r0, #1
   30d00:	beq	30f30 <__assert_fail@plt+0x1e378>
   30d04:	ldr	r0, [fp, #-32]	; 0xffffffe0
   30d08:	ldr	r1, [fp, #-120]	; 0xffffff88
   30d0c:	movw	r2, #40	; 0x28
   30d10:	mul	r1, r1, r2
   30d14:	add	r0, r0, r1
   30d18:	ldrb	r0, [r0, #8]
   30d1c:	tst	r0, #1
   30d20:	beq	30d58 <__assert_fail@plt+0x1e1a0>
   30d24:	ldrb	r0, [fp, #-208]	; 0xffffff30
   30d28:	tst	r0, #1
   30d2c:	beq	30d58 <__assert_fail@plt+0x1e1a0>
   30d30:	ldr	r0, [fp, #-32]	; 0xffffffe0
   30d34:	ldr	r1, [fp, #-120]	; 0xffffff88
   30d38:	movw	r2, #40	; 0x28
   30d3c:	mul	r1, r1, r2
   30d40:	add	r0, r0, r1
   30d44:	ldr	r0, [r0, #12]
   30d48:	ldr	r1, [fp, #-204]	; 0xffffff34
   30d4c:	cmp	r0, r1
   30d50:	beq	30db8 <__assert_fail@plt+0x1e200>
   30d54:	b	30e00 <__assert_fail@plt+0x1e248>
   30d58:	ldr	r0, [fp, #-32]	; 0xffffffe0
   30d5c:	ldr	r1, [fp, #-120]	; 0xffffff88
   30d60:	movw	r2, #40	; 0x28
   30d64:	mul	r1, r1, r2
   30d68:	add	r0, r0, r1
   30d6c:	ldr	r0, [r0, #4]
   30d70:	ldr	r1, [fp, #-212]	; 0xffffff2c
   30d74:	cmp	r0, r1
   30d78:	bne	30e00 <__assert_fail@plt+0x1e248>
   30d7c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   30d80:	ldr	r1, [fp, #-120]	; 0xffffff88
   30d84:	movw	r2, #40	; 0x28
   30d88:	mul	r1, r1, r2
   30d8c:	add	r0, r0, r1
   30d90:	ldr	r0, [r0]
   30d94:	ldr	r1, [fp, #-216]	; 0xffffff28
   30d98:	ldr	r3, [fp, #-32]	; 0xffffffe0
   30d9c:	ldr	ip, [fp, #-120]	; 0xffffff88
   30da0:	mul	r2, ip, r2
   30da4:	add	r2, r3, r2
   30da8:	ldr	r2, [r2, #4]
   30dac:	bl	12624 <memcmp@plt>
   30db0:	cmp	r0, #0
   30db4:	bne	30e00 <__assert_fail@plt+0x1e248>
   30db8:	ldr	r0, [fp, #-120]	; 0xffffff88
   30dbc:	add	r0, r0, #1
   30dc0:	str	r0, [fp, #-120]	; 0xffffff88
   30dc4:	ldr	r0, [fp, #-212]	; 0xffffff2c
   30dc8:	ldr	r1, [fp, #-216]	; 0xffffff28
   30dcc:	add	r0, r1, r0
   30dd0:	str	r0, [fp, #-216]	; 0xffffff28
   30dd4:	movw	r0, #0
   30dd8:	strb	r0, [fp, #-220]	; 0xffffff24
   30ddc:	ldr	r0, [fp, #-120]	; 0xffffff88
   30de0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   30de4:	cmp	r0, r1
   30de8:	bne	30dfc <__assert_fail@plt+0x1e244>
   30dec:	ldr	r0, [fp, #-160]	; 0xffffff60
   30df0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   30df4:	str	r0, [r1]
   30df8:	b	30f30 <__assert_fail@plt+0x1e378>
   30dfc:	b	30f2c <__assert_fail@plt+0x1e374>
   30e00:	ldr	r0, [fp, #-120]	; 0xffffff88
   30e04:	cmp	r0, #0
   30e08:	bls	30eb4 <__assert_fail@plt+0x1e2fc>
   30e0c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   30e10:	ldr	r1, [fp, #-120]	; 0xffffff88
   30e14:	add	r0, r0, r1, lsl #2
   30e18:	ldr	r0, [r0]
   30e1c:	str	r0, [fp, #-236]	; 0xffffff14
   30e20:	ldr	r0, [fp, #-236]	; 0xffffff14
   30e24:	ldr	r1, [fp, #-120]	; 0xffffff88
   30e28:	sub	r0, r1, r0
   30e2c:	str	r0, [fp, #-120]	; 0xffffff88
   30e30:	ldr	r0, [fp, #-236]	; 0xffffff14
   30e34:	cmp	r0, #0
   30e38:	bls	30eb0 <__assert_fail@plt+0x1e2f8>
   30e3c:	sub	r0, fp, #176	; 0xb0
   30e40:	bl	3172c <__assert_fail@plt+0x1eb74>
   30e44:	ldrb	r0, [fp, #-152]	; 0xffffff68
   30e48:	tst	r0, #1
   30e4c:	movw	r0, #0
   30e50:	str	r0, [fp, #-268]	; 0xfffffef4
   30e54:	beq	30e6c <__assert_fail@plt+0x1e2b4>
   30e58:	ldr	r0, [fp, #-148]	; 0xffffff6c
   30e5c:	cmp	r0, #0
   30e60:	movw	r0, #0
   30e64:	moveq	r0, #1
   30e68:	str	r0, [fp, #-268]	; 0xfffffef4
   30e6c:	ldr	r0, [fp, #-268]	; 0xfffffef4
   30e70:	mvn	r1, #0
   30e74:	eor	r0, r0, r1
   30e78:	tst	r0, #1
   30e7c:	bne	30e84 <__assert_fail@plt+0x1e2cc>
   30e80:	bl	12b64 <abort@plt>
   30e84:	ldr	r0, [fp, #-156]	; 0xffffff64
   30e88:	ldr	r1, [fp, #-160]	; 0xffffff60
   30e8c:	add	r0, r1, r0
   30e90:	str	r0, [fp, #-160]	; 0xffffff60
   30e94:	movw	r0, #0
   30e98:	strb	r0, [fp, #-164]	; 0xffffff5c
   30e9c:	ldr	r0, [fp, #-236]	; 0xffffff14
   30ea0:	mvn	r1, #0
   30ea4:	add	r0, r0, r1
   30ea8:	str	r0, [fp, #-236]	; 0xffffff14
   30eac:	b	30e30 <__assert_fail@plt+0x1e278>
   30eb0:	b	30f28 <__assert_fail@plt+0x1e370>
   30eb4:	sub	r0, fp, #176	; 0xb0
   30eb8:	bl	3172c <__assert_fail@plt+0x1eb74>
   30ebc:	ldrb	r0, [fp, #-152]	; 0xffffff68
   30ec0:	tst	r0, #1
   30ec4:	movw	r0, #0
   30ec8:	str	r0, [fp, #-272]	; 0xfffffef0
   30ecc:	beq	30ee4 <__assert_fail@plt+0x1e32c>
   30ed0:	ldr	r0, [fp, #-148]	; 0xffffff6c
   30ed4:	cmp	r0, #0
   30ed8:	movw	r0, #0
   30edc:	moveq	r0, #1
   30ee0:	str	r0, [fp, #-272]	; 0xfffffef0
   30ee4:	ldr	r0, [fp, #-272]	; 0xfffffef0
   30ee8:	mvn	r1, #0
   30eec:	eor	r0, r0, r1
   30ef0:	tst	r0, #1
   30ef4:	bne	30efc <__assert_fail@plt+0x1e344>
   30ef8:	bl	12b64 <abort@plt>
   30efc:	ldr	r0, [fp, #-156]	; 0xffffff64
   30f00:	ldr	r1, [fp, #-160]	; 0xffffff60
   30f04:	add	r0, r1, r0
   30f08:	str	r0, [fp, #-160]	; 0xffffff60
   30f0c:	movw	r0, #0
   30f10:	strb	r0, [fp, #-164]	; 0xffffff5c
   30f14:	ldr	r1, [fp, #-212]	; 0xffffff2c
   30f18:	ldr	r2, [fp, #-216]	; 0xffffff28
   30f1c:	add	r1, r2, r1
   30f20:	str	r1, [fp, #-216]	; 0xffffff28
   30f24:	strb	r0, [fp, #-220]	; 0xffffff24
   30f28:	b	30f2c <__assert_fail@plt+0x1e374>
   30f2c:	b	30cc0 <__assert_fail@plt+0x1e108>
   30f30:	ldr	r0, [fp, #-40]	; 0xffffffd8
   30f34:	bl	734ac <__assert_fail@plt+0x608f4>
   30f38:	movw	r0, #1
   30f3c:	and	r0, r0, #1
   30f40:	strb	r0, [fp, #-9]
   30f44:	ldrb	r0, [fp, #-9]
   30f48:	and	r0, r0, #1
   30f4c:	sub	sp, fp, #8
   30f50:	pop	{r4, r5, fp, pc}
   30f54:	rsceq	fp, r8, #188416	; 0x2e000
   30f58:	push	{r4, r5, fp, lr}
   30f5c:	add	fp, sp, #8
   30f60:	sub	sp, sp, #64	; 0x40
   30f64:	ldr	ip, [pc, #676]	; 31210 <__assert_fail@plt+0x1e658>
   30f68:	str	r0, [fp, #-16]
   30f6c:	str	r1, [fp, #-20]	; 0xffffffec
   30f70:	str	r2, [fp, #-24]	; 0xffffffe8
   30f74:	str	r3, [fp, #-28]	; 0xffffffe4
   30f78:	ldr	r0, [fp, #-24]	; 0xffffffe8
   30f7c:	str	r0, [fp, #-32]	; 0xffffffe0
   30f80:	ldr	r0, [fp, #-32]	; 0xffffffe0
   30f84:	cmp	ip, r0
   30f88:	bcs	30f98 <__assert_fail@plt+0x1e3e0>
   30f8c:	movw	r0, #0
   30f90:	str	r0, [fp, #-64]	; 0xffffffc0
   30f94:	b	30ff4 <__assert_fail@plt+0x1e43c>
   30f98:	ldr	r0, [fp, #-32]	; 0xffffffe0
   30f9c:	lsl	r0, r0, #2
   30fa0:	movw	r1, #4017	; 0xfb1
   30fa4:	cmp	r0, r1
   30fa8:	bcs	30fdc <__assert_fail@plt+0x1e424>
   30fac:	ldr	r0, [fp, #-32]	; 0xffffffe0
   30fb0:	mov	r1, #22
   30fb4:	add	r0, r1, r0, lsl #2
   30fb8:	bic	r0, r0, #7
   30fbc:	mov	r1, sp
   30fc0:	sub	r0, r1, r0
   30fc4:	mov	sp, r0
   30fc8:	add	r0, r0, #15
   30fcc:	mvn	r1, #15
   30fd0:	and	r0, r0, r1
   30fd4:	str	r0, [fp, #-68]	; 0xffffffbc
   30fd8:	b	30fec <__assert_fail@plt+0x1e434>
   30fdc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   30fe0:	lsl	r0, r0, #2
   30fe4:	bl	73384 <__assert_fail@plt+0x607cc>
   30fe8:	str	r0, [fp, #-68]	; 0xffffffbc
   30fec:	ldr	r0, [fp, #-68]	; 0xffffffbc
   30ff0:	str	r0, [fp, #-64]	; 0xffffffc0
   30ff4:	ldr	r0, [fp, #-64]	; 0xffffffc0
   30ff8:	str	r0, [fp, #-36]	; 0xffffffdc
   30ffc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   31000:	movw	r1, #0
   31004:	cmp	r0, r1
   31008:	bne	3101c <__assert_fail@plt+0x1e464>
   3100c:	movw	r0, #0
   31010:	and	r0, r0, #1
   31014:	strb	r0, [fp, #-9]
   31018:	b	31200 <__assert_fail@plt+0x1e648>
   3101c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   31020:	movw	r1, #1
   31024:	str	r1, [r0, #4]
   31028:	movw	r0, #0
   3102c:	str	r0, [fp, #-44]	; 0xffffffd4
   31030:	movw	r0, #2
   31034:	str	r0, [fp, #-40]	; 0xffffffd8
   31038:	ldr	r0, [fp, #-40]	; 0xffffffd8
   3103c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   31040:	cmp	r0, r1
   31044:	bcs	310fc <__assert_fail@plt+0x1e544>
   31048:	ldr	r0, [fp, #-20]	; 0xffffffec
   3104c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   31050:	sub	r1, r1, #1
   31054:	add	r0, r0, r1
   31058:	ldrb	r0, [r0]
   3105c:	strb	r0, [fp, #-45]	; 0xffffffd3
   31060:	ldrb	r0, [fp, #-45]	; 0xffffffd3
   31064:	ldr	r1, [fp, #-20]	; 0xffffffec
   31068:	ldr	r2, [fp, #-44]	; 0xffffffd4
   3106c:	add	r1, r1, r2
   31070:	ldrb	r1, [r1]
   31074:	cmp	r0, r1
   31078:	bne	310a4 <__assert_fail@plt+0x1e4ec>
   3107c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   31080:	ldr	r1, [fp, #-44]	; 0xffffffd4
   31084:	add	r1, r1, #1
   31088:	str	r1, [fp, #-44]	; 0xffffffd4
   3108c:	sub	r0, r0, r1
   31090:	ldr	r1, [fp, #-36]	; 0xffffffdc
   31094:	ldr	r2, [fp, #-40]	; 0xffffffd8
   31098:	add	r1, r1, r2, lsl #2
   3109c:	str	r0, [r1]
   310a0:	b	310e8 <__assert_fail@plt+0x1e530>
   310a4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   310a8:	cmp	r0, #0
   310ac:	bne	310c8 <__assert_fail@plt+0x1e510>
   310b0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   310b4:	mov	r1, r0
   310b8:	ldr	r2, [fp, #-36]	; 0xffffffdc
   310bc:	add	r0, r2, r0, lsl #2
   310c0:	str	r1, [r0]
   310c4:	b	310e8 <__assert_fail@plt+0x1e530>
   310c8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   310cc:	mov	r1, r0
   310d0:	ldr	r2, [fp, #-36]	; 0xffffffdc
   310d4:	add	r0, r2, r0, lsl #2
   310d8:	ldr	r0, [r0]
   310dc:	sub	r0, r1, r0
   310e0:	str	r0, [fp, #-44]	; 0xffffffd4
   310e4:	b	31060 <__assert_fail@plt+0x1e4a8>
   310e8:	b	310ec <__assert_fail@plt+0x1e534>
   310ec:	ldr	r0, [fp, #-40]	; 0xffffffd8
   310f0:	add	r0, r0, #1
   310f4:	str	r0, [fp, #-40]	; 0xffffffd8
   310f8:	b	31038 <__assert_fail@plt+0x1e480>
   310fc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   31100:	movw	r1, #0
   31104:	str	r1, [r0]
   31108:	str	r1, [fp, #-52]	; 0xffffffcc
   3110c:	ldr	r0, [fp, #-16]
   31110:	str	r0, [fp, #-56]	; 0xffffffc8
   31114:	ldr	r0, [fp, #-16]
   31118:	str	r0, [fp, #-60]	; 0xffffffc4
   3111c:	ldr	r0, [fp, #-60]	; 0xffffffc4
   31120:	ldrb	r0, [r0]
   31124:	cmp	r0, #0
   31128:	beq	311ec <__assert_fail@plt+0x1e634>
   3112c:	ldr	r0, [fp, #-20]	; 0xffffffec
   31130:	ldr	r1, [fp, #-52]	; 0xffffffcc
   31134:	add	r0, r0, r1
   31138:	ldrb	r0, [r0]
   3113c:	ldr	r1, [fp, #-60]	; 0xffffffc4
   31140:	ldrb	r1, [r1]
   31144:	cmp	r0, r1
   31148:	bne	31188 <__assert_fail@plt+0x1e5d0>
   3114c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   31150:	add	r0, r0, #1
   31154:	str	r0, [fp, #-52]	; 0xffffffcc
   31158:	ldr	r0, [fp, #-60]	; 0xffffffc4
   3115c:	add	r0, r0, #1
   31160:	str	r0, [fp, #-60]	; 0xffffffc4
   31164:	ldr	r0, [fp, #-52]	; 0xffffffcc
   31168:	ldr	r1, [fp, #-32]	; 0xffffffe0
   3116c:	cmp	r0, r1
   31170:	bne	31184 <__assert_fail@plt+0x1e5cc>
   31174:	ldr	r0, [fp, #-56]	; 0xffffffc8
   31178:	ldr	r1, [fp, #-28]	; 0xffffffe4
   3117c:	str	r0, [r1]
   31180:	b	311ec <__assert_fail@plt+0x1e634>
   31184:	b	311e8 <__assert_fail@plt+0x1e630>
   31188:	ldr	r0, [fp, #-52]	; 0xffffffcc
   3118c:	cmp	r0, #0
   31190:	bls	311cc <__assert_fail@plt+0x1e614>
   31194:	ldr	r0, [fp, #-36]	; 0xffffffdc
   31198:	ldr	r1, [fp, #-52]	; 0xffffffcc
   3119c:	ldr	r0, [r0, r1, lsl #2]
   311a0:	ldr	r1, [fp, #-56]	; 0xffffffc8
   311a4:	add	r0, r1, r0
   311a8:	str	r0, [fp, #-56]	; 0xffffffc8
   311ac:	ldr	r0, [fp, #-36]	; 0xffffffdc
   311b0:	ldr	r1, [fp, #-52]	; 0xffffffcc
   311b4:	add	r0, r0, r1, lsl #2
   311b8:	ldr	r0, [r0]
   311bc:	ldr	r1, [fp, #-52]	; 0xffffffcc
   311c0:	sub	r0, r1, r0
   311c4:	str	r0, [fp, #-52]	; 0xffffffcc
   311c8:	b	311e4 <__assert_fail@plt+0x1e62c>
   311cc:	ldr	r0, [fp, #-56]	; 0xffffffc8
   311d0:	add	r0, r0, #1
   311d4:	str	r0, [fp, #-56]	; 0xffffffc8
   311d8:	ldr	r0, [fp, #-60]	; 0xffffffc4
   311dc:	add	r0, r0, #1
   311e0:	str	r0, [fp, #-60]	; 0xffffffc4
   311e4:	b	311e8 <__assert_fail@plt+0x1e630>
   311e8:	b	3111c <__assert_fail@plt+0x1e564>
   311ec:	ldr	r0, [fp, #-36]	; 0xffffffdc
   311f0:	bl	734ac <__assert_fail@plt+0x608f4>
   311f4:	movw	r0, #1
   311f8:	and	r0, r0, #1
   311fc:	strb	r0, [fp, #-9]
   31200:	ldrb	r0, [fp, #-9]
   31204:	and	r0, r0, #1
   31208:	sub	sp, fp, #8
   3120c:	pop	{r4, r5, fp, pc}
   31210:	svcne	0x00ffffff
   31214:	push	{fp, lr}
   31218:	mov	fp, sp
   3121c:	sub	sp, sp, #16
   31220:	str	r0, [fp, #-4]
   31224:	str	r1, [sp, #8]
   31228:	ldr	r0, [fp, #-4]
   3122c:	ldr	r1, [fp, #-4]
   31230:	str	r0, [sp, #4]
   31234:	mov	r0, r1
   31238:	bl	12888 <strlen@plt>
   3123c:	ldr	r2, [sp, #8]
   31240:	ldr	r1, [sp, #4]
   31244:	str	r0, [sp]
   31248:	mov	r0, r1
   3124c:	ldr	r1, [sp]
   31250:	bl	3125c <__assert_fail@plt+0x1e6a4>
   31254:	mov	sp, fp
   31258:	pop	{fp, pc}
   3125c:	push	{fp, lr}
   31260:	mov	fp, sp
   31264:	sub	sp, sp, #64	; 0x40
   31268:	str	r0, [fp, #-8]
   3126c:	str	r1, [fp, #-12]
   31270:	str	r2, [fp, #-16]
   31274:	ldr	r0, [fp, #-8]
   31278:	str	r0, [fp, #-20]	; 0xffffffec
   3127c:	ldr	r0, [fp, #-20]	; 0xffffffec
   31280:	ldr	r1, [fp, #-12]
   31284:	add	r0, r0, r1
   31288:	str	r0, [fp, #-24]	; 0xffffffe8
   3128c:	movw	r0, #0
   31290:	str	r0, [fp, #-28]	; 0xffffffe4
   31294:	bl	12720 <__ctype_get_mb_cur_max@plt>
   31298:	cmp	r0, #1
   3129c:	bls	31624 <__assert_fail@plt+0x1ea6c>
   312a0:	b	312a4 <__assert_fail@plt+0x1e6ec>
   312a4:	ldr	r0, [fp, #-20]	; 0xffffffec
   312a8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   312ac:	cmp	r0, r1
   312b0:	bcs	31618 <__assert_fail@plt+0x1ea60>
   312b4:	ldr	r0, [fp, #-20]	; 0xffffffec
   312b8:	ldrb	r0, [r0]
   312bc:	sub	r0, r0, #32
   312c0:	cmp	r0, #94	; 0x5e
   312c4:	str	r0, [sp, #8]
   312c8:	bhi	31474 <__assert_fail@plt+0x1e8bc>
   312cc:	add	r0, pc, #8
   312d0:	ldr	r1, [sp, #8]
   312d4:	ldr	r0, [r0, r1, lsl #2]
   312d8:	mov	pc, r0
   312dc:	andeq	r1, r3, r8, asr r4
   312e0:	andeq	r1, r3, r8, asr r4
   312e4:	andeq	r1, r3, r8, asr r4
   312e8:	andeq	r1, r3, r8, asr r4
   312ec:	andeq	r1, r3, r4, ror r4
   312f0:	andeq	r1, r3, r8, asr r4
   312f4:	andeq	r1, r3, r8, asr r4
   312f8:	andeq	r1, r3, r8, asr r4
   312fc:	andeq	r1, r3, r8, asr r4
   31300:	andeq	r1, r3, r8, asr r4
   31304:	andeq	r1, r3, r8, asr r4
   31308:	andeq	r1, r3, r8, asr r4
   3130c:	andeq	r1, r3, r8, asr r4
   31310:	andeq	r1, r3, r8, asr r4
   31314:	andeq	r1, r3, r8, asr r4
   31318:	andeq	r1, r3, r8, asr r4
   3131c:	andeq	r1, r3, r8, asr r4
   31320:	andeq	r1, r3, r8, asr r4
   31324:	andeq	r1, r3, r8, asr r4
   31328:	andeq	r1, r3, r8, asr r4
   3132c:	andeq	r1, r3, r8, asr r4
   31330:	andeq	r1, r3, r8, asr r4
   31334:	andeq	r1, r3, r8, asr r4
   31338:	andeq	r1, r3, r8, asr r4
   3133c:	andeq	r1, r3, r8, asr r4
   31340:	andeq	r1, r3, r8, asr r4
   31344:	andeq	r1, r3, r8, asr r4
   31348:	andeq	r1, r3, r8, asr r4
   3134c:	andeq	r1, r3, r8, asr r4
   31350:	andeq	r1, r3, r8, asr r4
   31354:	andeq	r1, r3, r8, asr r4
   31358:	andeq	r1, r3, r8, asr r4
   3135c:	andeq	r1, r3, r4, ror r4
   31360:	andeq	r1, r3, r8, asr r4
   31364:	andeq	r1, r3, r8, asr r4
   31368:	andeq	r1, r3, r8, asr r4
   3136c:	andeq	r1, r3, r8, asr r4
   31370:	andeq	r1, r3, r8, asr r4
   31374:	andeq	r1, r3, r8, asr r4
   31378:	andeq	r1, r3, r8, asr r4
   3137c:	andeq	r1, r3, r8, asr r4
   31380:	andeq	r1, r3, r8, asr r4
   31384:	andeq	r1, r3, r8, asr r4
   31388:	andeq	r1, r3, r8, asr r4
   3138c:	andeq	r1, r3, r8, asr r4
   31390:	andeq	r1, r3, r8, asr r4
   31394:	andeq	r1, r3, r8, asr r4
   31398:	andeq	r1, r3, r8, asr r4
   3139c:	andeq	r1, r3, r8, asr r4
   313a0:	andeq	r1, r3, r8, asr r4
   313a4:	andeq	r1, r3, r8, asr r4
   313a8:	andeq	r1, r3, r8, asr r4
   313ac:	andeq	r1, r3, r8, asr r4
   313b0:	andeq	r1, r3, r8, asr r4
   313b4:	andeq	r1, r3, r8, asr r4
   313b8:	andeq	r1, r3, r8, asr r4
   313bc:	andeq	r1, r3, r8, asr r4
   313c0:	andeq	r1, r3, r8, asr r4
   313c4:	andeq	r1, r3, r8, asr r4
   313c8:	andeq	r1, r3, r8, asr r4
   313cc:	andeq	r1, r3, r8, asr r4
   313d0:	andeq	r1, r3, r8, asr r4
   313d4:	andeq	r1, r3, r8, asr r4
   313d8:	andeq	r1, r3, r8, asr r4
   313dc:	andeq	r1, r3, r4, ror r4
   313e0:	andeq	r1, r3, r8, asr r4
   313e4:	andeq	r1, r3, r8, asr r4
   313e8:	andeq	r1, r3, r8, asr r4
   313ec:	andeq	r1, r3, r8, asr r4
   313f0:	andeq	r1, r3, r8, asr r4
   313f4:	andeq	r1, r3, r8, asr r4
   313f8:	andeq	r1, r3, r8, asr r4
   313fc:	andeq	r1, r3, r8, asr r4
   31400:	andeq	r1, r3, r8, asr r4
   31404:	andeq	r1, r3, r8, asr r4
   31408:	andeq	r1, r3, r8, asr r4
   3140c:	andeq	r1, r3, r8, asr r4
   31410:	andeq	r1, r3, r8, asr r4
   31414:	andeq	r1, r3, r8, asr r4
   31418:	andeq	r1, r3, r8, asr r4
   3141c:	andeq	r1, r3, r8, asr r4
   31420:	andeq	r1, r3, r8, asr r4
   31424:	andeq	r1, r3, r8, asr r4
   31428:	andeq	r1, r3, r8, asr r4
   3142c:	andeq	r1, r3, r8, asr r4
   31430:	andeq	r1, r3, r8, asr r4
   31434:	andeq	r1, r3, r8, asr r4
   31438:	andeq	r1, r3, r8, asr r4
   3143c:	andeq	r1, r3, r8, asr r4
   31440:	andeq	r1, r3, r8, asr r4
   31444:	andeq	r1, r3, r8, asr r4
   31448:	andeq	r1, r3, r8, asr r4
   3144c:	andeq	r1, r3, r8, asr r4
   31450:	andeq	r1, r3, r8, asr r4
   31454:	andeq	r1, r3, r8, asr r4
   31458:	ldr	r0, [fp, #-20]	; 0xffffffec
   3145c:	add	r0, r0, #1
   31460:	str	r0, [fp, #-20]	; 0xffffffec
   31464:	ldr	r0, [fp, #-28]	; 0xffffffe4
   31468:	add	r0, r0, #1
   3146c:	str	r0, [fp, #-28]	; 0xffffffe4
   31470:	b	31614 <__assert_fail@plt+0x1ea5c>
   31474:	add	r0, sp, #28
   31478:	movw	r1, #0
   3147c:	and	r1, r1, #255	; 0xff
   31480:	movw	r2, #8
   31484:	bl	12900 <memset@plt>
   31488:	ldr	r1, [fp, #-20]	; 0xffffffec
   3148c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   31490:	ldr	r2, [fp, #-20]	; 0xffffffec
   31494:	sub	r2, r0, r2
   31498:	add	r0, sp, #24
   3149c:	add	r3, sp, #28
   314a0:	bl	54a1c <__assert_fail@plt+0x41e64>
   314a4:	str	r0, [sp, #20]
   314a8:	ldr	r0, [sp, #20]
   314ac:	cmn	r0, #1
   314b0:	bne	314ec <__assert_fail@plt+0x1e934>
   314b4:	ldr	r0, [fp, #-16]
   314b8:	and	r0, r0, #1
   314bc:	cmp	r0, #0
   314c0:	bne	314e0 <__assert_fail@plt+0x1e928>
   314c4:	ldr	r0, [fp, #-20]	; 0xffffffec
   314c8:	add	r0, r0, #1
   314cc:	str	r0, [fp, #-20]	; 0xffffffec
   314d0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   314d4:	add	r0, r0, #1
   314d8:	str	r0, [fp, #-28]	; 0xffffffe4
   314dc:	b	31610 <__assert_fail@plt+0x1ea58>
   314e0:	mvn	r0, #0
   314e4:	str	r0, [fp, #-4]
   314e8:	b	3171c <__assert_fail@plt+0x1eb64>
   314ec:	ldr	r0, [sp, #20]
   314f0:	cmn	r0, #2
   314f4:	bne	3152c <__assert_fail@plt+0x1e974>
   314f8:	ldr	r0, [fp, #-16]
   314fc:	and	r0, r0, #1
   31500:	cmp	r0, #0
   31504:	bne	31520 <__assert_fail@plt+0x1e968>
   31508:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3150c:	str	r0, [fp, #-20]	; 0xffffffec
   31510:	ldr	r0, [fp, #-28]	; 0xffffffe4
   31514:	add	r0, r0, #1
   31518:	str	r0, [fp, #-28]	; 0xffffffe4
   3151c:	b	31610 <__assert_fail@plt+0x1ea58>
   31520:	mvn	r0, #0
   31524:	str	r0, [fp, #-4]
   31528:	b	3171c <__assert_fail@plt+0x1eb64>
   3152c:	ldr	r0, [sp, #20]
   31530:	cmp	r0, #0
   31534:	bne	31540 <__assert_fail@plt+0x1e988>
   31538:	movw	r0, #1
   3153c:	str	r0, [sp, #20]
   31540:	ldr	r0, [sp, #24]
   31544:	bl	12540 <wcwidth@plt>
   31548:	str	r0, [sp, #16]
   3154c:	ldr	r0, [sp, #16]
   31550:	cmp	r0, #0
   31554:	blt	31588 <__assert_fail@plt+0x1e9d0>
   31558:	ldr	r0, [pc, #456]	; 31728 <__assert_fail@plt+0x1eb70>
   3155c:	ldr	r1, [sp, #16]
   31560:	ldr	r2, [fp, #-28]	; 0xffffffe4
   31564:	sub	r0, r0, r2
   31568:	cmp	r1, r0
   3156c:	ble	31574 <__assert_fail@plt+0x1e9bc>
   31570:	b	31714 <__assert_fail@plt+0x1eb5c>
   31574:	ldr	r0, [sp, #16]
   31578:	ldr	r1, [fp, #-28]	; 0xffffffe4
   3157c:	add	r0, r1, r0
   31580:	str	r0, [fp, #-28]	; 0xffffffe4
   31584:	b	315dc <__assert_fail@plt+0x1ea24>
   31588:	ldr	r0, [fp, #-16]
   3158c:	and	r0, r0, #2
   31590:	cmp	r0, #0
   31594:	bne	315cc <__assert_fail@plt+0x1ea14>
   31598:	ldr	r0, [sp, #24]
   3159c:	bl	1269c <iswcntrl@plt>
   315a0:	cmp	r0, #0
   315a4:	bne	315c8 <__assert_fail@plt+0x1ea10>
   315a8:	ldr	r0, [pc, #376]	; 31728 <__assert_fail@plt+0x1eb70>
   315ac:	ldr	r1, [fp, #-28]	; 0xffffffe4
   315b0:	cmp	r1, r0
   315b4:	bne	315bc <__assert_fail@plt+0x1ea04>
   315b8:	b	31714 <__assert_fail@plt+0x1eb5c>
   315bc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   315c0:	add	r0, r0, #1
   315c4:	str	r0, [fp, #-28]	; 0xffffffe4
   315c8:	b	315d8 <__assert_fail@plt+0x1ea20>
   315cc:	mvn	r0, #0
   315d0:	str	r0, [fp, #-4]
   315d4:	b	3171c <__assert_fail@plt+0x1eb64>
   315d8:	b	315dc <__assert_fail@plt+0x1ea24>
   315dc:	ldr	r0, [sp, #20]
   315e0:	ldr	r1, [fp, #-20]	; 0xffffffec
   315e4:	add	r0, r1, r0
   315e8:	str	r0, [fp, #-20]	; 0xffffffec
   315ec:	add	r0, sp, #28
   315f0:	bl	12600 <mbsinit@plt>
   315f4:	cmp	r0, #0
   315f8:	movw	r0, #0
   315fc:	movne	r0, #1
   31600:	mvn	lr, #0
   31604:	eor	r0, r0, lr
   31608:	tst	r0, #1
   3160c:	bne	31488 <__assert_fail@plt+0x1e8d0>
   31610:	b	31614 <__assert_fail@plt+0x1ea5c>
   31614:	b	312a4 <__assert_fail@plt+0x1e6ec>
   31618:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3161c:	str	r0, [fp, #-4]
   31620:	b	3171c <__assert_fail@plt+0x1eb64>
   31624:	b	31628 <__assert_fail@plt+0x1ea70>
   31628:	ldr	r0, [fp, #-20]	; 0xffffffec
   3162c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   31630:	cmp	r0, r1
   31634:	bcs	31708 <__assert_fail@plt+0x1eb50>
   31638:	ldr	r0, [fp, #-20]	; 0xffffffec
   3163c:	add	r1, r0, #1
   31640:	str	r1, [fp, #-20]	; 0xffffffec
   31644:	ldrb	r0, [r0]
   31648:	strb	r0, [sp, #15]
   3164c:	bl	12834 <__ctype_b_loc@plt>
   31650:	ldr	r0, [r0]
   31654:	ldrb	r1, [sp, #15]
   31658:	mov	lr, r1
   3165c:	add	r0, r0, r1, lsl #1
   31660:	ldrh	r0, [r0]
   31664:	and	r0, r0, #16384	; 0x4000
   31668:	cmp	r0, #0
   3166c:	str	lr, [sp, #4]
   31670:	beq	31698 <__assert_fail@plt+0x1eae0>
   31674:	ldr	r0, [pc, #172]	; 31728 <__assert_fail@plt+0x1eb70>
   31678:	ldr	r1, [fp, #-28]	; 0xffffffe4
   3167c:	cmp	r1, r0
   31680:	bne	31688 <__assert_fail@plt+0x1ead0>
   31684:	b	31714 <__assert_fail@plt+0x1eb5c>
   31688:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3168c:	add	r0, r0, #1
   31690:	str	r0, [fp, #-28]	; 0xffffffe4
   31694:	b	31704 <__assert_fail@plt+0x1eb4c>
   31698:	ldr	r0, [fp, #-16]
   3169c:	and	r0, r0, #2
   316a0:	cmp	r0, #0
   316a4:	bne	316f4 <__assert_fail@plt+0x1eb3c>
   316a8:	bl	12834 <__ctype_b_loc@plt>
   316ac:	ldr	r0, [r0]
   316b0:	ldrb	lr, [sp, #15]
   316b4:	mov	r1, lr
   316b8:	add	r0, r0, lr, lsl #1
   316bc:	ldrh	r0, [r0]
   316c0:	and	r0, r0, #2
   316c4:	cmp	r0, #0
   316c8:	str	r1, [sp]
   316cc:	bne	316f0 <__assert_fail@plt+0x1eb38>
   316d0:	ldr	r0, [pc, #80]	; 31728 <__assert_fail@plt+0x1eb70>
   316d4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   316d8:	cmp	r1, r0
   316dc:	bne	316e4 <__assert_fail@plt+0x1eb2c>
   316e0:	b	31714 <__assert_fail@plt+0x1eb5c>
   316e4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   316e8:	add	r0, r0, #1
   316ec:	str	r0, [fp, #-28]	; 0xffffffe4
   316f0:	b	31700 <__assert_fail@plt+0x1eb48>
   316f4:	mvn	r0, #0
   316f8:	str	r0, [fp, #-4]
   316fc:	b	3171c <__assert_fail@plt+0x1eb64>
   31700:	b	31704 <__assert_fail@plt+0x1eb4c>
   31704:	b	31628 <__assert_fail@plt+0x1ea70>
   31708:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3170c:	str	r0, [fp, #-4]
   31710:	b	3171c <__assert_fail@plt+0x1eb64>
   31714:	ldr	r0, [pc, #12]	; 31728 <__assert_fail@plt+0x1eb70>
   31718:	str	r0, [fp, #-4]
   3171c:	ldr	r0, [fp, #-4]
   31720:	mov	sp, fp
   31724:	pop	{fp, pc}
   31728:	svcvc	0x00ffffff
   3172c:	push	{fp, lr}
   31730:	mov	fp, sp
   31734:	sub	sp, sp, #24
   31738:	str	r0, [fp, #-4]
   3173c:	ldr	r0, [fp, #-4]
   31740:	ldrb	r0, [r0, #12]
   31744:	tst	r0, #1
   31748:	beq	31750 <__assert_fail@plt+0x1eb98>
   3174c:	b	31988 <__assert_fail@plt+0x1edd0>
   31750:	ldr	r0, [fp, #-4]
   31754:	ldrb	r0, [r0]
   31758:	tst	r0, #1
   3175c:	beq	31764 <__assert_fail@plt+0x1ebac>
   31760:	b	317f0 <__assert_fail@plt+0x1ec38>
   31764:	ldr	r0, [fp, #-4]
   31768:	ldr	r0, [r0, #16]
   3176c:	ldrb	r0, [r0]
   31770:	bl	73628 <__assert_fail@plt+0x60a70>
   31774:	tst	r0, #1
   31778:	beq	317ac <__assert_fail@plt+0x1ebf4>
   3177c:	ldr	r0, [fp, #-4]
   31780:	movw	r1, #1
   31784:	str	r1, [r0, #20]
   31788:	ldr	r0, [fp, #-4]
   3178c:	ldr	r0, [r0, #16]
   31790:	ldrb	r0, [r0]
   31794:	ldr	r1, [fp, #-4]
   31798:	str	r0, [r1, #28]
   3179c:	ldr	r0, [fp, #-4]
   317a0:	movw	r1, #1
   317a4:	strb	r1, [r0, #24]
   317a8:	b	3197c <__assert_fail@plt+0x1edc4>
   317ac:	ldr	r0, [fp, #-4]
   317b0:	add	r0, r0, #4
   317b4:	bl	12600 <mbsinit@plt>
   317b8:	cmp	r0, #0
   317bc:	beq	317c4 <__assert_fail@plt+0x1ec0c>
   317c0:	b	317e4 <__assert_fail@plt+0x1ec2c>
   317c4:	movw	r0, #50360	; 0xc4b8
   317c8:	movt	r0, #7
   317cc:	movw	r1, #50383	; 0xc4cf
   317d0:	movt	r1, #7
   317d4:	movw	r2, #143	; 0x8f
   317d8:	movw	r3, #50395	; 0xc4db
   317dc:	movt	r3, #7
   317e0:	bl	12bb8 <__assert_fail@plt>
   317e4:	ldr	r0, [fp, #-4]
   317e8:	movw	r1, #1
   317ec:	strb	r1, [r0]
   317f0:	ldr	r0, [fp, #-4]
   317f4:	add	r0, r0, #16
   317f8:	add	r0, r0, #12
   317fc:	ldr	r1, [fp, #-4]
   31800:	ldr	r1, [r1, #16]
   31804:	ldr	r2, [fp, #-4]
   31808:	ldr	r2, [r2, #16]
   3180c:	str	r0, [fp, #-8]
   31810:	str	r1, [sp, #12]
   31814:	str	r2, [sp, #8]
   31818:	bl	12720 <__ctype_get_mb_cur_max@plt>
   3181c:	ldr	r1, [sp, #8]
   31820:	str	r0, [sp, #4]
   31824:	mov	r0, r1
   31828:	ldr	r1, [sp, #4]
   3182c:	bl	4b97c <__assert_fail@plt+0x38dc4>
   31830:	ldr	r1, [fp, #-4]
   31834:	add	r3, r1, #4
   31838:	ldr	r1, [fp, #-8]
   3183c:	str	r0, [sp]
   31840:	mov	r0, r1
   31844:	ldr	r1, [sp, #12]
   31848:	ldr	r2, [sp]
   3184c:	bl	54a1c <__assert_fail@plt+0x41e64>
   31850:	ldr	r1, [fp, #-4]
   31854:	str	r0, [r1, #20]
   31858:	ldr	r0, [fp, #-4]
   3185c:	ldr	r0, [r0, #20]
   31860:	cmn	r0, #1
   31864:	bne	31884 <__assert_fail@plt+0x1eccc>
   31868:	ldr	r0, [fp, #-4]
   3186c:	movw	r1, #1
   31870:	str	r1, [r0, #20]
   31874:	ldr	r0, [fp, #-4]
   31878:	movw	r1, #0
   3187c:	strb	r1, [r0, #24]
   31880:	b	31978 <__assert_fail@plt+0x1edc0>
   31884:	ldr	r0, [fp, #-4]
   31888:	ldr	r0, [r0, #20]
   3188c:	cmn	r0, #2
   31890:	bne	318b8 <__assert_fail@plt+0x1ed00>
   31894:	ldr	r0, [fp, #-4]
   31898:	ldr	r0, [r0, #16]
   3189c:	bl	12888 <strlen@plt>
   318a0:	ldr	lr, [fp, #-4]
   318a4:	str	r0, [lr, #20]
   318a8:	ldr	r0, [fp, #-4]
   318ac:	movw	lr, #0
   318b0:	strb	lr, [r0, #24]
   318b4:	b	31974 <__assert_fail@plt+0x1edbc>
   318b8:	ldr	r0, [fp, #-4]
   318bc:	ldr	r0, [r0, #20]
   318c0:	cmp	r0, #0
   318c4:	bne	31944 <__assert_fail@plt+0x1ed8c>
   318c8:	ldr	r0, [fp, #-4]
   318cc:	movw	r1, #1
   318d0:	str	r1, [r0, #20]
   318d4:	ldr	r0, [fp, #-4]
   318d8:	ldr	r0, [r0, #16]
   318dc:	ldrb	r0, [r0]
   318e0:	cmp	r0, #0
   318e4:	bne	318ec <__assert_fail@plt+0x1ed34>
   318e8:	b	3190c <__assert_fail@plt+0x1ed54>
   318ec:	movw	r0, #50443	; 0xc50b
   318f0:	movt	r0, #7
   318f4:	movw	r1, #50383	; 0xc4cf
   318f8:	movt	r1, #7
   318fc:	movw	r2, #171	; 0xab
   31900:	movw	r3, #50395	; 0xc4db
   31904:	movt	r3, #7
   31908:	bl	12bb8 <__assert_fail@plt>
   3190c:	ldr	r0, [fp, #-4]
   31910:	ldr	r0, [r0, #28]
   31914:	cmp	r0, #0
   31918:	bne	31920 <__assert_fail@plt+0x1ed68>
   3191c:	b	31940 <__assert_fail@plt+0x1ed88>
   31920:	movw	r0, #50466	; 0xc522
   31924:	movt	r0, #7
   31928:	movw	r1, #50383	; 0xc4cf
   3192c:	movt	r1, #7
   31930:	movw	r2, #172	; 0xac
   31934:	movw	r3, #50395	; 0xc4db
   31938:	movt	r3, #7
   3193c:	bl	12bb8 <__assert_fail@plt>
   31940:	b	31944 <__assert_fail@plt+0x1ed8c>
   31944:	ldr	r0, [fp, #-4]
   31948:	movw	r1, #1
   3194c:	strb	r1, [r0, #24]
   31950:	ldr	r0, [fp, #-4]
   31954:	add	r0, r0, #4
   31958:	bl	12600 <mbsinit@plt>
   3195c:	cmp	r0, #0
   31960:	beq	31970 <__assert_fail@plt+0x1edb8>
   31964:	ldr	r0, [fp, #-4]
   31968:	movw	r1, #0
   3196c:	strb	r1, [r0]
   31970:	b	31974 <__assert_fail@plt+0x1edbc>
   31974:	b	31978 <__assert_fail@plt+0x1edc0>
   31978:	b	3197c <__assert_fail@plt+0x1edc4>
   3197c:	ldr	r0, [fp, #-4]
   31980:	movw	r1, #1
   31984:	strb	r1, [r0, #12]
   31988:	mov	sp, fp
   3198c:	pop	{fp, pc}
   31990:	sub	sp, sp, #8
   31994:	str	r0, [sp, #4]
   31998:	str	r1, [sp]
   3199c:	ldr	r0, [sp]
   319a0:	ldr	r1, [sp, #4]
   319a4:	ldr	r2, [r1, #16]
   319a8:	add	r0, r2, r0
   319ac:	str	r0, [r1, #16]
   319b0:	add	sp, sp, #8
   319b4:	bx	lr
   319b8:	push	{fp, lr}
   319bc:	mov	fp, sp
   319c0:	sub	sp, sp, #8
   319c4:	str	r0, [sp, #4]
   319c8:	str	r1, [sp]
   319cc:	ldr	r0, [sp]
   319d0:	ldrb	r0, [r0]
   319d4:	ldr	r1, [sp, #4]
   319d8:	and	r2, r0, #1
   319dc:	strb	r2, [r1]
   319e0:	tst	r0, #1
   319e4:	beq	31a04 <__assert_fail@plt+0x1ee4c>
   319e8:	ldr	r0, [sp, #4]
   319ec:	ldr	r1, [sp]
   319f0:	ldr	r2, [r1, #4]
   319f4:	str	r2, [r0, #4]
   319f8:	ldr	r1, [r1, #8]
   319fc:	str	r1, [r0, #8]
   31a00:	b	31a1c <__assert_fail@plt+0x1ee64>
   31a04:	ldr	r0, [sp, #4]
   31a08:	add	r0, r0, #4
   31a0c:	movw	r1, #0
   31a10:	and	r1, r1, #255	; 0xff
   31a14:	movw	r2, #8
   31a18:	bl	12900 <memset@plt>
   31a1c:	ldr	r0, [sp]
   31a20:	ldrb	r0, [r0, #12]
   31a24:	ldr	r1, [sp, #4]
   31a28:	and	r0, r0, #1
   31a2c:	strb	r0, [r1, #12]
   31a30:	ldr	r0, [sp, #4]
   31a34:	add	r0, r0, #16
   31a38:	ldr	r1, [sp]
   31a3c:	add	r1, r1, #16
   31a40:	bl	73578 <__assert_fail@plt+0x609c0>
   31a44:	mov	sp, fp
   31a48:	pop	{fp, pc}
   31a4c:	push	{fp, lr}
   31a50:	mov	fp, sp
   31a54:	sub	sp, sp, #104	; 0x68
   31a58:	str	r0, [fp, #-8]
   31a5c:	movw	r0, #0
   31a60:	str	r0, [fp, #-16]
   31a64:	ldr	r0, [fp, #-8]
   31a68:	ldrb	r0, [r0]
   31a6c:	movw	r1, #48	; 0x30
   31a70:	cmp	r1, r0
   31a74:	bgt	31b9c <__assert_fail@plt+0x1efe4>
   31a78:	ldr	r0, [fp, #-8]
   31a7c:	ldrb	r0, [r0]
   31a80:	cmp	r0, #56	; 0x38
   31a84:	bge	31b9c <__assert_fail@plt+0x1efe4>
   31a88:	movw	r0, #0
   31a8c:	str	r0, [fp, #-24]	; 0xffffffe8
   31a90:	ldr	r0, [fp, #-8]
   31a94:	str	r0, [fp, #-20]	; 0xffffffec
   31a98:	ldr	r0, [fp, #-24]	; 0xffffffe8
   31a9c:	lsl	r0, r0, #3
   31aa0:	ldr	r1, [fp, #-20]	; 0xffffffec
   31aa4:	add	r2, r1, #1
   31aa8:	str	r2, [fp, #-20]	; 0xffffffec
   31aac:	ldrb	r1, [r1]
   31ab0:	add	r0, r0, r1
   31ab4:	sub	r0, r0, #48	; 0x30
   31ab8:	str	r0, [fp, #-24]	; 0xffffffe8
   31abc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   31ac0:	movw	r1, #4095	; 0xfff
   31ac4:	cmp	r1, r0
   31ac8:	bcs	31ad8 <__assert_fail@plt+0x1ef20>
   31acc:	movw	r0, #0
   31ad0:	str	r0, [fp, #-4]
   31ad4:	b	32244 <__assert_fail@plt+0x1f68c>
   31ad8:	b	31adc <__assert_fail@plt+0x1ef24>
   31adc:	ldr	r0, [fp, #-20]	; 0xffffffec
   31ae0:	ldrb	r0, [r0]
   31ae4:	movw	r1, #48	; 0x30
   31ae8:	cmp	r1, r0
   31aec:	movw	r0, #0
   31af0:	str	r0, [sp, #36]	; 0x24
   31af4:	bgt	31b10 <__assert_fail@plt+0x1ef58>
   31af8:	ldr	r0, [fp, #-20]	; 0xffffffec
   31afc:	ldrb	r0, [r0]
   31b00:	cmp	r0, #56	; 0x38
   31b04:	movw	r0, #0
   31b08:	movlt	r0, #1
   31b0c:	str	r0, [sp, #36]	; 0x24
   31b10:	ldr	r0, [sp, #36]	; 0x24
   31b14:	tst	r0, #1
   31b18:	bne	31a98 <__assert_fail@plt+0x1eee0>
   31b1c:	ldr	r0, [fp, #-20]	; 0xffffffec
   31b20:	ldrsb	r0, [r0]
   31b24:	cmp	r0, #0
   31b28:	beq	31b38 <__assert_fail@plt+0x1ef80>
   31b2c:	movw	r0, #0
   31b30:	str	r0, [fp, #-4]
   31b34:	b	32244 <__assert_fail@plt+0x1f68c>
   31b38:	ldr	r0, [fp, #-24]	; 0xffffffe8
   31b3c:	bl	32250 <__assert_fail@plt+0x1f698>
   31b40:	str	r0, [fp, #-28]	; 0xffffffe4
   31b44:	ldr	r0, [fp, #-20]	; 0xffffffec
   31b48:	ldr	lr, [fp, #-8]
   31b4c:	sub	r0, r0, lr
   31b50:	cmp	r0, #5
   31b54:	bge	31b74 <__assert_fail@plt+0x1efbc>
   31b58:	ldr	r0, [fp, #-28]	; 0xffffffe4
   31b5c:	and	r0, r0, #3072	; 0xc00
   31b60:	orr	r0, r0, #512	; 0x200
   31b64:	movw	r1, #511	; 0x1ff
   31b68:	orr	r0, r0, r1
   31b6c:	str	r0, [sp, #32]
   31b70:	b	31b80 <__assert_fail@plt+0x1efc8>
   31b74:	movw	r0, #4095	; 0xfff
   31b78:	str	r0, [sp, #32]
   31b7c:	b	31b80 <__assert_fail@plt+0x1efc8>
   31b80:	ldr	r0, [sp, #32]
   31b84:	str	r0, [fp, #-32]	; 0xffffffe0
   31b88:	ldr	r0, [fp, #-28]	; 0xffffffe4
   31b8c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   31b90:	bl	32264 <__assert_fail@plt+0x1f6ac>
   31b94:	str	r0, [fp, #-4]
   31b98:	b	32244 <__assert_fail@plt+0x1f68c>
   31b9c:	movw	r0, #1
   31ba0:	str	r0, [fp, #-36]	; 0xffffffdc
   31ba4:	ldr	r0, [fp, #-8]
   31ba8:	str	r0, [fp, #-20]	; 0xffffffec
   31bac:	ldr	r0, [fp, #-20]	; 0xffffffec
   31bb0:	ldrsb	r0, [r0]
   31bb4:	cmp	r0, #0
   31bb8:	beq	31c28 <__assert_fail@plt+0x1f070>
   31bbc:	ldr	r0, [fp, #-20]	; 0xffffffec
   31bc0:	ldrb	r0, [r0]
   31bc4:	cmp	r0, #61	; 0x3d
   31bc8:	movw	r0, #1
   31bcc:	str	r0, [sp, #28]
   31bd0:	beq	31c04 <__assert_fail@plt+0x1f04c>
   31bd4:	ldr	r0, [fp, #-20]	; 0xffffffec
   31bd8:	ldrb	r0, [r0]
   31bdc:	cmp	r0, #43	; 0x2b
   31be0:	movw	r0, #1
   31be4:	str	r0, [sp, #28]
   31be8:	beq	31c04 <__assert_fail@plt+0x1f04c>
   31bec:	ldr	r0, [fp, #-20]	; 0xffffffec
   31bf0:	ldrb	r0, [r0]
   31bf4:	cmp	r0, #45	; 0x2d
   31bf8:	movw	r0, #0
   31bfc:	moveq	r0, #1
   31c00:	str	r0, [sp, #28]
   31c04:	ldr	r0, [sp, #28]
   31c08:	and	r0, r0, #1
   31c0c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   31c10:	add	r0, r1, r0
   31c14:	str	r0, [fp, #-36]	; 0xffffffdc
   31c18:	ldr	r0, [fp, #-20]	; 0xffffffec
   31c1c:	add	r0, r0, #1
   31c20:	str	r0, [fp, #-20]	; 0xffffffec
   31c24:	b	31bac <__assert_fail@plt+0x1eff4>
   31c28:	ldr	r0, [fp, #-36]	; 0xffffffdc
   31c2c:	movw	r1, #16
   31c30:	bl	4c4ec <__assert_fail@plt+0x39934>
   31c34:	str	r0, [fp, #-12]
   31c38:	ldr	r0, [fp, #-8]
   31c3c:	str	r0, [fp, #-20]	; 0xffffffec
   31c40:	movw	r0, #0
   31c44:	str	r0, [fp, #-40]	; 0xffffffd8
   31c48:	ldr	r0, [fp, #-20]	; 0xffffffec
   31c4c:	ldrb	r0, [r0]
   31c50:	mov	r1, r0
   31c54:	cmp	r0, #43	; 0x2b
   31c58:	str	r1, [sp, #24]
   31c5c:	beq	31d14 <__assert_fail@plt+0x1f15c>
   31c60:	b	31c64 <__assert_fail@plt+0x1f0ac>
   31c64:	ldr	r0, [sp, #24]
   31c68:	cmp	r0, #45	; 0x2d
   31c6c:	beq	31d14 <__assert_fail@plt+0x1f15c>
   31c70:	b	31c74 <__assert_fail@plt+0x1f0bc>
   31c74:	ldr	r0, [sp, #24]
   31c78:	cmp	r0, #61	; 0x3d
   31c7c:	beq	31d14 <__assert_fail@plt+0x1f15c>
   31c80:	b	31c84 <__assert_fail@plt+0x1f0cc>
   31c84:	ldr	r0, [sp, #24]
   31c88:	cmp	r0, #97	; 0x61
   31c8c:	beq	31d00 <__assert_fail@plt+0x1f148>
   31c90:	b	31c94 <__assert_fail@plt+0x1f0dc>
   31c94:	ldr	r0, [sp, #24]
   31c98:	cmp	r0, #103	; 0x67
   31c9c:	beq	31cd8 <__assert_fail@plt+0x1f120>
   31ca0:	b	31ca4 <__assert_fail@plt+0x1f0ec>
   31ca4:	ldr	r0, [sp, #24]
   31ca8:	cmp	r0, #111	; 0x6f
   31cac:	beq	31cec <__assert_fail@plt+0x1f134>
   31cb0:	b	31cb4 <__assert_fail@plt+0x1f0fc>
   31cb4:	ldr	r0, [sp, #24]
   31cb8:	cmp	r0, #117	; 0x75
   31cbc:	beq	31cc8 <__assert_fail@plt+0x1f110>
   31cc0:	b	31cc4 <__assert_fail@plt+0x1f10c>
   31cc4:	b	32234 <__assert_fail@plt+0x1f67c>
   31cc8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   31ccc:	orr	r0, r0, #2496	; 0x9c0
   31cd0:	str	r0, [fp, #-40]	; 0xffffffd8
   31cd4:	b	31d18 <__assert_fail@plt+0x1f160>
   31cd8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   31cdc:	movw	r1, #1080	; 0x438
   31ce0:	orr	r0, r0, r1
   31ce4:	str	r0, [fp, #-40]	; 0xffffffd8
   31ce8:	b	31d18 <__assert_fail@plt+0x1f160>
   31cec:	ldr	r0, [fp, #-40]	; 0xffffffd8
   31cf0:	movw	r1, #519	; 0x207
   31cf4:	orr	r0, r0, r1
   31cf8:	str	r0, [fp, #-40]	; 0xffffffd8
   31cfc:	b	31d18 <__assert_fail@plt+0x1f160>
   31d00:	ldr	r0, [fp, #-40]	; 0xffffffd8
   31d04:	movw	r1, #4095	; 0xfff
   31d08:	orr	r0, r0, r1
   31d0c:	str	r0, [fp, #-40]	; 0xffffffd8
   31d10:	b	31d18 <__assert_fail@plt+0x1f160>
   31d14:	b	31d2c <__assert_fail@plt+0x1f174>
   31d18:	b	31d1c <__assert_fail@plt+0x1f164>
   31d1c:	ldr	r0, [fp, #-20]	; 0xffffffec
   31d20:	add	r0, r0, #1
   31d24:	str	r0, [fp, #-20]	; 0xffffffec
   31d28:	b	31c48 <__assert_fail@plt+0x1f090>
   31d2c:	b	31d30 <__assert_fail@plt+0x1f178>
   31d30:	ldr	r0, [fp, #-20]	; 0xffffffec
   31d34:	add	r1, r0, #1
   31d38:	str	r1, [fp, #-20]	; 0xffffffec
   31d3c:	ldrb	r0, [r0]
   31d40:	strb	r0, [fp, #-41]	; 0xffffffd7
   31d44:	mov	r0, #0
   31d48:	str	r0, [sp, #52]	; 0x34
   31d4c:	mov	r0, #3
   31d50:	strb	r0, [sp, #51]	; 0x33
   31d54:	ldr	r0, [fp, #-20]	; 0xffffffec
   31d58:	ldrb	r0, [r0]
   31d5c:	sub	r0, r0, #48	; 0x30
   31d60:	cmp	r0, #69	; 0x45
   31d64:	str	r0, [sp, #20]
   31d68:	bhi	31fb4 <__assert_fail@plt+0x1f3fc>
   31d6c:	add	r0, pc, #8
   31d70:	ldr	r1, [sp, #20]
   31d74:	ldr	r0, [r0, r1, lsl #2]
   31d78:	mov	pc, r0
   31d7c:	muleq	r3, r4, lr
   31d80:	muleq	r3, r4, lr
   31d84:	muleq	r3, r4, lr
   31d88:	muleq	r3, r4, lr
   31d8c:	muleq	r3, r4, lr
   31d90:	muleq	r3, r4, lr
   31d94:	muleq	r3, r4, lr
   31d98:	muleq	r3, r4, lr
   31d9c:			; <UNDEFINED> instruction: 0x00031fb4
   31da0:			; <UNDEFINED> instruction: 0x00031fb4
   31da4:			; <UNDEFINED> instruction: 0x00031fb4
   31da8:			; <UNDEFINED> instruction: 0x00031fb4
   31dac:			; <UNDEFINED> instruction: 0x00031fb4
   31db0:			; <UNDEFINED> instruction: 0x00031fb4
   31db4:			; <UNDEFINED> instruction: 0x00031fb4
   31db8:			; <UNDEFINED> instruction: 0x00031fb4
   31dbc:			; <UNDEFINED> instruction: 0x00031fb4
   31dc0:			; <UNDEFINED> instruction: 0x00031fb4
   31dc4:			; <UNDEFINED> instruction: 0x00031fb4
   31dc8:			; <UNDEFINED> instruction: 0x00031fb4
   31dcc:			; <UNDEFINED> instruction: 0x00031fb4
   31dd0:			; <UNDEFINED> instruction: 0x00031fb4
   31dd4:			; <UNDEFINED> instruction: 0x00031fb4
   31dd8:			; <UNDEFINED> instruction: 0x00031fb4
   31ddc:			; <UNDEFINED> instruction: 0x00031fb4
   31de0:			; <UNDEFINED> instruction: 0x00031fb4
   31de4:			; <UNDEFINED> instruction: 0x00031fb4
   31de8:			; <UNDEFINED> instruction: 0x00031fb4
   31dec:			; <UNDEFINED> instruction: 0x00031fb4
   31df0:			; <UNDEFINED> instruction: 0x00031fb4
   31df4:			; <UNDEFINED> instruction: 0x00031fb4
   31df8:			; <UNDEFINED> instruction: 0x00031fb4
   31dfc:			; <UNDEFINED> instruction: 0x00031fb4
   31e00:			; <UNDEFINED> instruction: 0x00031fb4
   31e04:			; <UNDEFINED> instruction: 0x00031fb4
   31e08:			; <UNDEFINED> instruction: 0x00031fb4
   31e0c:			; <UNDEFINED> instruction: 0x00031fb4
   31e10:			; <UNDEFINED> instruction: 0x00031fb4
   31e14:			; <UNDEFINED> instruction: 0x00031fb4
   31e18:			; <UNDEFINED> instruction: 0x00031fb4
   31e1c:			; <UNDEFINED> instruction: 0x00031fb4
   31e20:			; <UNDEFINED> instruction: 0x00031fb4
   31e24:			; <UNDEFINED> instruction: 0x00031fb4
   31e28:			; <UNDEFINED> instruction: 0x00031fb4
   31e2c:			; <UNDEFINED> instruction: 0x00031fb4
   31e30:			; <UNDEFINED> instruction: 0x00031fb4
   31e34:			; <UNDEFINED> instruction: 0x00031fb4
   31e38:			; <UNDEFINED> instruction: 0x00031fb4
   31e3c:			; <UNDEFINED> instruction: 0x00031fb4
   31e40:			; <UNDEFINED> instruction: 0x00031fb4
   31e44:			; <UNDEFINED> instruction: 0x00031fb4
   31e48:			; <UNDEFINED> instruction: 0x00031fb4
   31e4c:			; <UNDEFINED> instruction: 0x00031fb4
   31e50:			; <UNDEFINED> instruction: 0x00031fb4
   31e54:			; <UNDEFINED> instruction: 0x00031fb4
   31e58:	andeq	r1, r3, r4, lsl #31
   31e5c:			; <UNDEFINED> instruction: 0x00031fb4
   31e60:			; <UNDEFINED> instruction: 0x00031fb4
   31e64:			; <UNDEFINED> instruction: 0x00031fb4
   31e68:			; <UNDEFINED> instruction: 0x00031fb4
   31e6c:			; <UNDEFINED> instruction: 0x00031fb4
   31e70:			; <UNDEFINED> instruction: 0x00031fb4
   31e74:			; <UNDEFINED> instruction: 0x00031fb4
   31e78:	muleq	r3, ip, pc	; <UNPREDICTABLE>
   31e7c:			; <UNDEFINED> instruction: 0x00031fb4
   31e80:			; <UNDEFINED> instruction: 0x00031fb4
   31e84:			; <UNDEFINED> instruction: 0x00031fb4
   31e88:			; <UNDEFINED> instruction: 0x00031fb4
   31e8c:			; <UNDEFINED> instruction: 0x00031fb4
   31e90:	andeq	r1, r3, ip, ror #30
   31e94:	movw	r0, #0
   31e98:	str	r0, [sp, #40]	; 0x28
   31e9c:	ldr	r0, [sp, #40]	; 0x28
   31ea0:	lsl	r0, r0, #3
   31ea4:	ldr	r1, [fp, #-20]	; 0xffffffec
   31ea8:	add	r2, r1, #1
   31eac:	str	r2, [fp, #-20]	; 0xffffffec
   31eb0:	ldrb	r1, [r1]
   31eb4:	add	r0, r0, r1
   31eb8:	sub	r0, r0, #48	; 0x30
   31ebc:	str	r0, [sp, #40]	; 0x28
   31ec0:	ldr	r0, [sp, #40]	; 0x28
   31ec4:	movw	r1, #4095	; 0xfff
   31ec8:	cmp	r1, r0
   31ecc:	bcs	31ed4 <__assert_fail@plt+0x1f31c>
   31ed0:	b	32234 <__assert_fail@plt+0x1f67c>
   31ed4:	b	31ed8 <__assert_fail@plt+0x1f320>
   31ed8:	ldr	r0, [fp, #-20]	; 0xffffffec
   31edc:	ldrb	r0, [r0]
   31ee0:	movw	r1, #48	; 0x30
   31ee4:	cmp	r1, r0
   31ee8:	movw	r0, #0
   31eec:	str	r0, [sp, #16]
   31ef0:	bgt	31f0c <__assert_fail@plt+0x1f354>
   31ef4:	ldr	r0, [fp, #-20]	; 0xffffffec
   31ef8:	ldrb	r0, [r0]
   31efc:	cmp	r0, #56	; 0x38
   31f00:	movw	r0, #0
   31f04:	movlt	r0, #1
   31f08:	str	r0, [sp, #16]
   31f0c:	ldr	r0, [sp, #16]
   31f10:	tst	r0, #1
   31f14:	bne	31e9c <__assert_fail@plt+0x1f2e4>
   31f18:	ldr	r0, [fp, #-40]	; 0xffffffd8
   31f1c:	cmp	r0, #0
   31f20:	bne	31f44 <__assert_fail@plt+0x1f38c>
   31f24:	ldr	r0, [fp, #-20]	; 0xffffffec
   31f28:	ldrb	r0, [r0]
   31f2c:	cmp	r0, #0
   31f30:	beq	31f48 <__assert_fail@plt+0x1f390>
   31f34:	ldr	r0, [fp, #-20]	; 0xffffffec
   31f38:	ldrb	r0, [r0]
   31f3c:	cmp	r0, #44	; 0x2c
   31f40:	beq	31f48 <__assert_fail@plt+0x1f390>
   31f44:	b	32234 <__assert_fail@plt+0x1f67c>
   31f48:	movw	r0, #4095	; 0xfff
   31f4c:	str	r0, [sp, #52]	; 0x34
   31f50:	str	r0, [fp, #-40]	; 0xffffffd8
   31f54:	ldr	r0, [sp, #40]	; 0x28
   31f58:	bl	32250 <__assert_fail@plt+0x1f698>
   31f5c:	str	r0, [fp, #-48]	; 0xffffffd0
   31f60:	movw	r0, #1
   31f64:	strb	r0, [sp, #51]	; 0x33
   31f68:	b	320e8 <__assert_fail@plt+0x1f530>
   31f6c:	movw	r0, #448	; 0x1c0
   31f70:	str	r0, [fp, #-48]	; 0xffffffd0
   31f74:	ldr	r0, [fp, #-20]	; 0xffffffec
   31f78:	add	r0, r0, #1
   31f7c:	str	r0, [fp, #-20]	; 0xffffffec
   31f80:	b	320e8 <__assert_fail@plt+0x1f530>
   31f84:	movw	r0, #56	; 0x38
   31f88:	str	r0, [fp, #-48]	; 0xffffffd0
   31f8c:	ldr	r0, [fp, #-20]	; 0xffffffec
   31f90:	add	r0, r0, #1
   31f94:	str	r0, [fp, #-20]	; 0xffffffec
   31f98:	b	320e8 <__assert_fail@plt+0x1f530>
   31f9c:	movw	r0, #7
   31fa0:	str	r0, [fp, #-48]	; 0xffffffd0
   31fa4:	ldr	r0, [fp, #-20]	; 0xffffffec
   31fa8:	add	r0, r0, #1
   31fac:	str	r0, [fp, #-20]	; 0xffffffec
   31fb0:	b	320e8 <__assert_fail@plt+0x1f530>
   31fb4:	movw	r0, #0
   31fb8:	str	r0, [fp, #-48]	; 0xffffffd0
   31fbc:	movw	r0, #1
   31fc0:	strb	r0, [sp, #51]	; 0x33
   31fc4:	ldr	r0, [fp, #-20]	; 0xffffffec
   31fc8:	ldrb	r0, [r0]
   31fcc:	sub	r0, r0, #88	; 0x58
   31fd0:	cmp	r0, #32
   31fd4:	str	r0, [sp, #12]
   31fd8:	bhi	320cc <__assert_fail@plt+0x1f514>
   31fdc:	add	r0, pc, #8
   31fe0:	ldr	r1, [sp, #12]
   31fe4:	ldr	r0, [r0, r1, lsl #2]
   31fe8:	mov	pc, r0
   31fec:	andeq	r2, r3, r0, lsr #1
   31ff0:	andeq	r2, r3, ip, asr #1
   31ff4:	andeq	r2, r3, ip, asr #1
   31ff8:	andeq	r2, r3, ip, asr #1
   31ffc:	andeq	r2, r3, ip, asr #1
   32000:	andeq	r2, r3, ip, asr #1
   32004:	andeq	r2, r3, ip, asr #1
   32008:	andeq	r2, r3, ip, asr #1
   3200c:	andeq	r2, r3, ip, asr #1
   32010:	andeq	r2, r3, ip, asr #1
   32014:	andeq	r2, r3, ip, asr #1
   32018:	andeq	r2, r3, ip, asr #1
   3201c:	andeq	r2, r3, ip, asr #1
   32020:	andeq	r2, r3, ip, asr #1
   32024:	andeq	r2, r3, ip, asr #1
   32028:	andeq	r2, r3, ip, asr #1
   3202c:	andeq	r2, r3, ip, asr #1
   32030:	andeq	r2, r3, ip, asr #1
   32034:	andeq	r2, r3, ip, asr #1
   32038:	andeq	r2, r3, ip, asr #1
   3203c:	andeq	r2, r3, ip, asr #1
   32040:	andeq	r2, r3, ip, asr #1
   32044:	andeq	r2, r3, ip, asr #1
   32048:	andeq	r2, r3, ip, asr #1
   3204c:	andeq	r2, r3, ip, asr #1
   32050:	andeq	r2, r3, ip, asr #1
   32054:	andeq	r2, r3, r0, ror r0
   32058:	andeq	r2, r3, ip, lsr #1
   3205c:	strheq	r2, [r3], -ip
   32060:	andeq	r2, r3, ip, asr #1
   32064:	andeq	r2, r3, ip, asr #1
   32068:	andeq	r2, r3, r0, lsl #1
   3206c:	muleq	r3, r0, r0
   32070:	ldr	r0, [fp, #-48]	; 0xffffffd0
   32074:	orr	r0, r0, #292	; 0x124
   32078:	str	r0, [fp, #-48]	; 0xffffffd0
   3207c:	b	320d0 <__assert_fail@plt+0x1f518>
   32080:	ldr	r0, [fp, #-48]	; 0xffffffd0
   32084:	orr	r0, r0, #146	; 0x92
   32088:	str	r0, [fp, #-48]	; 0xffffffd0
   3208c:	b	320d0 <__assert_fail@plt+0x1f518>
   32090:	ldr	r0, [fp, #-48]	; 0xffffffd0
   32094:	orr	r0, r0, #73	; 0x49
   32098:	str	r0, [fp, #-48]	; 0xffffffd0
   3209c:	b	320d0 <__assert_fail@plt+0x1f518>
   320a0:	movw	r0, #2
   320a4:	strb	r0, [sp, #51]	; 0x33
   320a8:	b	320d0 <__assert_fail@plt+0x1f518>
   320ac:	ldr	r0, [fp, #-48]	; 0xffffffd0
   320b0:	orr	r0, r0, #3072	; 0xc00
   320b4:	str	r0, [fp, #-48]	; 0xffffffd0
   320b8:	b	320d0 <__assert_fail@plt+0x1f518>
   320bc:	ldr	r0, [fp, #-48]	; 0xffffffd0
   320c0:	orr	r0, r0, #512	; 0x200
   320c4:	str	r0, [fp, #-48]	; 0xffffffd0
   320c8:	b	320d0 <__assert_fail@plt+0x1f518>
   320cc:	b	320e4 <__assert_fail@plt+0x1f52c>
   320d0:	b	320d4 <__assert_fail@plt+0x1f51c>
   320d4:	ldr	r0, [fp, #-20]	; 0xffffffec
   320d8:	add	r0, r0, #1
   320dc:	str	r0, [fp, #-20]	; 0xffffffec
   320e0:	b	31fc4 <__assert_fail@plt+0x1f40c>
   320e4:	b	320e8 <__assert_fail@plt+0x1f530>
   320e8:	ldr	r0, [fp, #-12]
   320ec:	ldr	r1, [fp, #-16]
   320f0:	add	r2, r1, #1
   320f4:	str	r2, [fp, #-16]
   320f8:	add	r0, r0, r1, lsl #4
   320fc:	str	r0, [sp, #44]	; 0x2c
   32100:	ldrb	r0, [fp, #-41]	; 0xffffffd7
   32104:	ldr	r1, [sp, #44]	; 0x2c
   32108:	strb	r0, [r1]
   3210c:	ldrb	r0, [sp, #51]	; 0x33
   32110:	ldr	r1, [sp, #44]	; 0x2c
   32114:	strb	r0, [r1, #1]
   32118:	ldr	r0, [fp, #-40]	; 0xffffffd8
   3211c:	ldr	r1, [sp, #44]	; 0x2c
   32120:	str	r0, [r1, #4]
   32124:	ldr	r0, [fp, #-48]	; 0xffffffd0
   32128:	ldr	r1, [sp, #44]	; 0x2c
   3212c:	str	r0, [r1, #8]
   32130:	ldr	r0, [sp, #52]	; 0x34
   32134:	cmp	r0, #0
   32138:	beq	32148 <__assert_fail@plt+0x1f590>
   3213c:	ldr	r0, [sp, #52]	; 0x34
   32140:	str	r0, [sp, #8]
   32144:	b	32178 <__assert_fail@plt+0x1f5c0>
   32148:	ldr	r0, [fp, #-40]	; 0xffffffd8
   3214c:	cmp	r0, #0
   32150:	beq	32168 <__assert_fail@plt+0x1f5b0>
   32154:	ldr	r0, [fp, #-40]	; 0xffffffd8
   32158:	ldr	r1, [fp, #-48]	; 0xffffffd0
   3215c:	and	r0, r0, r1
   32160:	str	r0, [sp, #4]
   32164:	b	32170 <__assert_fail@plt+0x1f5b8>
   32168:	ldr	r0, [fp, #-48]	; 0xffffffd0
   3216c:	str	r0, [sp, #4]
   32170:	ldr	r0, [sp, #4]
   32174:	str	r0, [sp, #8]
   32178:	ldr	r0, [sp, #8]
   3217c:	ldr	r1, [sp, #44]	; 0x2c
   32180:	str	r0, [r1, #12]
   32184:	ldr	r0, [fp, #-20]	; 0xffffffec
   32188:	ldrb	r0, [r0]
   3218c:	cmp	r0, #61	; 0x3d
   32190:	movw	r0, #1
   32194:	str	r0, [sp]
   32198:	beq	321cc <__assert_fail@plt+0x1f614>
   3219c:	ldr	r0, [fp, #-20]	; 0xffffffec
   321a0:	ldrb	r0, [r0]
   321a4:	cmp	r0, #43	; 0x2b
   321a8:	movw	r0, #1
   321ac:	str	r0, [sp]
   321b0:	beq	321cc <__assert_fail@plt+0x1f614>
   321b4:	ldr	r0, [fp, #-20]	; 0xffffffec
   321b8:	ldrb	r0, [r0]
   321bc:	cmp	r0, #45	; 0x2d
   321c0:	movw	r0, #0
   321c4:	moveq	r0, #1
   321c8:	str	r0, [sp]
   321cc:	ldr	r0, [sp]
   321d0:	tst	r0, #1
   321d4:	bne	31d30 <__assert_fail@plt+0x1f178>
   321d8:	ldr	r0, [fp, #-20]	; 0xffffffec
   321dc:	ldrb	r0, [r0]
   321e0:	cmp	r0, #44	; 0x2c
   321e4:	beq	321ec <__assert_fail@plt+0x1f634>
   321e8:	b	32200 <__assert_fail@plt+0x1f648>
   321ec:	b	321f0 <__assert_fail@plt+0x1f638>
   321f0:	ldr	r0, [fp, #-20]	; 0xffffffec
   321f4:	add	r0, r0, #1
   321f8:	str	r0, [fp, #-20]	; 0xffffffec
   321fc:	b	31c40 <__assert_fail@plt+0x1f088>
   32200:	ldr	r0, [fp, #-20]	; 0xffffffec
   32204:	ldrb	r0, [r0]
   32208:	cmp	r0, #0
   3220c:	bne	32230 <__assert_fail@plt+0x1f678>
   32210:	ldr	r0, [fp, #-12]
   32214:	ldr	r1, [fp, #-16]
   32218:	add	r0, r0, r1, lsl #4
   3221c:	movw	r1, #0
   32220:	strb	r1, [r0, #1]
   32224:	ldr	r0, [fp, #-12]
   32228:	str	r0, [fp, #-4]
   3222c:	b	32244 <__assert_fail@plt+0x1f68c>
   32230:	b	32234 <__assert_fail@plt+0x1f67c>
   32234:	ldr	r0, [fp, #-12]
   32238:	bl	50c68 <__assert_fail@plt+0x3e0b0>
   3223c:	movw	r0, #0
   32240:	str	r0, [fp, #-4]
   32244:	ldr	r0, [fp, #-4]
   32248:	mov	sp, fp
   3224c:	pop	{fp, pc}
   32250:	sub	sp, sp, #4
   32254:	str	r0, [sp]
   32258:	ldr	r0, [sp]
   3225c:	add	sp, sp, #4
   32260:	bx	lr
   32264:	push	{fp, lr}
   32268:	mov	fp, sp
   3226c:	sub	sp, sp, #16
   32270:	str	r0, [fp, #-4]
   32274:	str	r1, [sp, #8]
   32278:	movw	r0, #32
   3227c:	bl	4c394 <__assert_fail@plt+0x397dc>
   32280:	str	r0, [sp, #4]
   32284:	ldr	r0, [sp, #4]
   32288:	movw	r1, #61	; 0x3d
   3228c:	strb	r1, [r0]
   32290:	ldr	r0, [sp, #4]
   32294:	movw	r1, #1
   32298:	strb	r1, [r0, #1]
   3229c:	ldr	r0, [sp, #4]
   322a0:	movw	r1, #4095	; 0xfff
   322a4:	str	r1, [r0, #4]
   322a8:	ldr	r0, [fp, #-4]
   322ac:	ldr	r1, [sp, #4]
   322b0:	str	r0, [r1, #8]
   322b4:	ldr	r0, [sp, #8]
   322b8:	ldr	r1, [sp, #4]
   322bc:	str	r0, [r1, #12]
   322c0:	ldr	r0, [sp, #4]
   322c4:	movw	r1, #0
   322c8:	strb	r1, [r0, #17]
   322cc:	ldr	r0, [sp, #4]
   322d0:	mov	sp, fp
   322d4:	pop	{fp, pc}
   322d8:	push	{fp, lr}
   322dc:	mov	fp, sp
   322e0:	sub	sp, sp, #112	; 0x70
   322e4:	str	r0, [fp, #-8]
   322e8:	ldr	r0, [fp, #-8]
   322ec:	mov	r1, sp
   322f0:	bl	77a84 <__assert_fail@plt+0x64ecc>
   322f4:	cmp	r0, #0
   322f8:	beq	32308 <__assert_fail@plt+0x1f750>
   322fc:	movw	r0, #0
   32300:	str	r0, [fp, #-4]
   32304:	b	32318 <__assert_fail@plt+0x1f760>
   32308:	ldr	r0, [sp, #16]
   3230c:	movw	r1, #4095	; 0xfff
   32310:	bl	32264 <__assert_fail@plt+0x1f6ac>
   32314:	str	r0, [fp, #-4]
   32318:	ldr	r0, [fp, #-4]
   3231c:	mov	sp, fp
   32320:	pop	{fp, pc}
   32324:	sub	sp, sp, #60	; 0x3c
   32328:	ldr	ip, [sp, #60]	; 0x3c
   3232c:	str	r0, [sp, #56]	; 0x38
   32330:	and	r0, r1, #1
   32334:	strb	r0, [sp, #55]	; 0x37
   32338:	str	r2, [sp, #48]	; 0x30
   3233c:	str	r3, [sp, #44]	; 0x2c
   32340:	ldr	r0, [sp, #56]	; 0x38
   32344:	movw	r1, #4095	; 0xfff
   32348:	and	r0, r0, r1
   3234c:	str	r0, [sp, #40]	; 0x28
   32350:	movw	r0, #0
   32354:	str	r0, [sp, #36]	; 0x24
   32358:	str	ip, [sp, #16]
   3235c:	ldr	r0, [sp, #44]	; 0x2c
   32360:	ldrb	r0, [r0, #1]
   32364:	cmp	r0, #0
   32368:	beq	325ec <__assert_fail@plt+0x1fa34>
   3236c:	ldr	r0, [sp, #44]	; 0x2c
   32370:	ldr	r0, [r0, #4]
   32374:	str	r0, [sp, #32]
   32378:	ldrb	r0, [sp, #55]	; 0x37
   3237c:	and	r0, r0, #1
   32380:	cmp	r0, #0
   32384:	movwne	r0, #3072	; 0xc00
   32388:	ldr	r1, [sp, #44]	; 0x2c
   3238c:	ldr	r1, [r1, #12]
   32390:	bic	r0, r0, r1
   32394:	str	r0, [sp, #28]
   32398:	ldr	r0, [sp, #44]	; 0x2c
   3239c:	ldr	r0, [r0, #8]
   323a0:	str	r0, [sp, #24]
   323a4:	ldr	r0, [sp, #44]	; 0x2c
   323a8:	ldrb	r0, [r0, #1]
   323ac:	mov	r1, r0
   323b0:	cmp	r0, #1
   323b4:	str	r1, [sp, #12]
   323b8:	beq	323e0 <__assert_fail@plt+0x1f828>
   323bc:	b	323c0 <__assert_fail@plt+0x1f808>
   323c0:	ldr	r0, [sp, #12]
   323c4:	cmp	r0, #2
   323c8:	beq	3246c <__assert_fail@plt+0x1f8b4>
   323cc:	b	323d0 <__assert_fail@plt+0x1f818>
   323d0:	ldr	r0, [sp, #12]
   323d4:	cmp	r0, #3
   323d8:	beq	323e4 <__assert_fail@plt+0x1f82c>
   323dc:	b	32498 <__assert_fail@plt+0x1f8e0>
   323e0:	b	32498 <__assert_fail@plt+0x1f8e0>
   323e4:	ldr	r0, [sp, #40]	; 0x28
   323e8:	ldr	r1, [sp, #24]
   323ec:	and	r0, r1, r0
   323f0:	str	r0, [sp, #24]
   323f4:	ldr	r0, [sp, #24]
   323f8:	and	r0, r0, #292	; 0x124
   323fc:	cmp	r0, #0
   32400:	movw	r0, #0
   32404:	movne	r0, #1
   32408:	tst	r0, #1
   3240c:	movw	r0, #292	; 0x124
   32410:	moveq	r0, #0
   32414:	ldr	r1, [sp, #24]
   32418:	and	r1, r1, #146	; 0x92
   3241c:	cmp	r1, #0
   32420:	movw	r1, #0
   32424:	movne	r1, #1
   32428:	tst	r1, #1
   3242c:	movw	r1, #146	; 0x92
   32430:	moveq	r1, #0
   32434:	orr	r0, r0, r1
   32438:	ldr	r1, [sp, #24]
   3243c:	and	r1, r1, #73	; 0x49
   32440:	cmp	r1, #0
   32444:	movw	r1, #0
   32448:	movne	r1, #1
   3244c:	tst	r1, #1
   32450:	movw	r1, #73	; 0x49
   32454:	moveq	r1, #0
   32458:	orr	r0, r0, r1
   3245c:	ldr	r1, [sp, #24]
   32460:	orr	r0, r1, r0
   32464:	str	r0, [sp, #24]
   32468:	b	32498 <__assert_fail@plt+0x1f8e0>
   3246c:	ldr	r0, [sp, #40]	; 0x28
   32470:	and	r0, r0, #73	; 0x49
   32474:	ldrb	r1, [sp, #55]	; 0x37
   32478:	and	r1, r1, #1
   3247c:	orr	r0, r0, r1
   32480:	cmp	r0, #0
   32484:	beq	32494 <__assert_fail@plt+0x1f8dc>
   32488:	ldr	r0, [sp, #24]
   3248c:	orr	r0, r0, #73	; 0x49
   32490:	str	r0, [sp, #24]
   32494:	b	32498 <__assert_fail@plt+0x1f8e0>
   32498:	ldr	r0, [sp, #32]
   3249c:	cmp	r0, #0
   324a0:	beq	324b0 <__assert_fail@plt+0x1f8f8>
   324a4:	ldr	r0, [sp, #32]
   324a8:	str	r0, [sp, #8]
   324ac:	b	324c0 <__assert_fail@plt+0x1f908>
   324b0:	ldr	r0, [sp, #48]	; 0x30
   324b4:	mvn	r1, #0
   324b8:	eor	r0, r0, r1
   324bc:	str	r0, [sp, #8]
   324c0:	ldr	r0, [sp, #8]
   324c4:	ldr	r1, [sp, #28]
   324c8:	bic	r0, r0, r1
   324cc:	ldr	r1, [sp, #24]
   324d0:	and	r0, r1, r0
   324d4:	str	r0, [sp, #24]
   324d8:	ldr	r0, [sp, #44]	; 0x2c
   324dc:	ldrb	r0, [r0]
   324e0:	mov	r1, r0
   324e4:	cmp	r0, #43	; 0x2b
   324e8:	str	r1, [sp, #4]
   324ec:	beq	3258c <__assert_fail@plt+0x1f9d4>
   324f0:	b	324f4 <__assert_fail@plt+0x1f93c>
   324f4:	ldr	r0, [sp, #4]
   324f8:	cmp	r0, #45	; 0x2d
   324fc:	beq	325b0 <__assert_fail@plt+0x1f9f8>
   32500:	b	32504 <__assert_fail@plt+0x1f94c>
   32504:	ldr	r0, [sp, #4]
   32508:	cmp	r0, #61	; 0x3d
   3250c:	bne	325d8 <__assert_fail@plt+0x1fa20>
   32510:	b	32514 <__assert_fail@plt+0x1f95c>
   32514:	ldr	r0, [sp, #32]
   32518:	cmp	r0, #0
   3251c:	beq	32534 <__assert_fail@plt+0x1f97c>
   32520:	ldr	r0, [sp, #32]
   32524:	mvn	r1, #0
   32528:	eor	r0, r0, r1
   3252c:	str	r0, [sp]
   32530:	b	32540 <__assert_fail@plt+0x1f988>
   32534:	movw	r0, #0
   32538:	str	r0, [sp]
   3253c:	b	32540 <__assert_fail@plt+0x1f988>
   32540:	ldr	r0, [sp]
   32544:	ldr	r1, [sp, #28]
   32548:	orr	r0, r0, r1
   3254c:	str	r0, [sp, #20]
   32550:	ldr	r0, [sp, #20]
   32554:	mvn	r1, #0
   32558:	eor	r0, r0, r1
   3255c:	movw	r1, #4095	; 0xfff
   32560:	and	r0, r0, r1
   32564:	ldr	r1, [sp, #36]	; 0x24
   32568:	orr	r0, r1, r0
   3256c:	str	r0, [sp, #36]	; 0x24
   32570:	ldr	r0, [sp, #40]	; 0x28
   32574:	ldr	r1, [sp, #20]
   32578:	and	r0, r0, r1
   3257c:	ldr	r1, [sp, #24]
   32580:	orr	r0, r0, r1
   32584:	str	r0, [sp, #40]	; 0x28
   32588:	b	325d8 <__assert_fail@plt+0x1fa20>
   3258c:	ldr	r0, [sp, #24]
   32590:	ldr	r1, [sp, #36]	; 0x24
   32594:	orr	r0, r1, r0
   32598:	str	r0, [sp, #36]	; 0x24
   3259c:	ldr	r0, [sp, #24]
   325a0:	ldr	r1, [sp, #40]	; 0x28
   325a4:	orr	r0, r1, r0
   325a8:	str	r0, [sp, #40]	; 0x28
   325ac:	b	325d8 <__assert_fail@plt+0x1fa20>
   325b0:	ldr	r0, [sp, #24]
   325b4:	ldr	r1, [sp, #36]	; 0x24
   325b8:	orr	r0, r1, r0
   325bc:	str	r0, [sp, #36]	; 0x24
   325c0:	ldr	r0, [sp, #24]
   325c4:	mvn	r1, #0
   325c8:	eor	r0, r0, r1
   325cc:	ldr	r1, [sp, #40]	; 0x28
   325d0:	and	r0, r1, r0
   325d4:	str	r0, [sp, #40]	; 0x28
   325d8:	b	325dc <__assert_fail@plt+0x1fa24>
   325dc:	ldr	r0, [sp, #44]	; 0x2c
   325e0:	add	r0, r0, #16
   325e4:	str	r0, [sp, #44]	; 0x2c
   325e8:	b	3235c <__assert_fail@plt+0x1f7a4>
   325ec:	ldr	r0, [sp, #60]	; 0x3c
   325f0:	movw	r1, #0
   325f4:	cmp	r0, r1
   325f8:	beq	32608 <__assert_fail@plt+0x1fa50>
   325fc:	ldr	r0, [sp, #36]	; 0x24
   32600:	ldr	r1, [sp, #60]	; 0x3c
   32604:	str	r0, [r1]
   32608:	ldr	r0, [sp, #40]	; 0x28
   3260c:	add	sp, sp, #60	; 0x3c
   32610:	bx	lr
   32614:	push	{fp, lr}
   32618:	mov	fp, sp
   3261c:	sub	sp, sp, #16
   32620:	str	r0, [fp, #-4]
   32624:	movw	r0, #63180	; 0xf6cc
   32628:	movt	r0, #8
   3262c:	ldr	r0, [r0]
   32630:	ldr	r1, [fp, #-4]
   32634:	movw	r2, #50484	; 0xc534
   32638:	movt	r2, #7
   3263c:	str	r0, [sp, #8]
   32640:	mov	r0, r2
   32644:	str	r1, [sp, #4]
   32648:	bl	12864 <gettext@plt>
   3264c:	ldr	r1, [sp, #8]
   32650:	str	r0, [sp]
   32654:	mov	r0, r1
   32658:	ldr	r1, [sp, #4]
   3265c:	ldr	r2, [sp]
   32660:	bl	12780 <error@plt>
   32664:	bl	12b64 <abort@plt>
   32668:	push	{fp, lr}
   3266c:	mov	fp, sp
   32670:	sub	sp, sp, #16
   32674:	str	r0, [fp, #-4]
   32678:	movw	r0, #63180	; 0xf6cc
   3267c:	movt	r0, #8
   32680:	ldr	r0, [r0]
   32684:	ldr	r1, [fp, #-4]
   32688:	movw	r2, #50527	; 0xc55f
   3268c:	movt	r2, #7
   32690:	str	r0, [sp, #8]
   32694:	mov	r0, r2
   32698:	str	r1, [sp, #4]
   3269c:	bl	12864 <gettext@plt>
   326a0:	ldr	r1, [sp, #8]
   326a4:	str	r0, [sp]
   326a8:	mov	r0, r1
   326ac:	ldr	r1, [sp, #4]
   326b0:	ldr	r2, [sp]
   326b4:	bl	12780 <error@plt>
   326b8:	bl	12b64 <abort@plt>
   326bc:	sub	sp, sp, #4
   326c0:	push	{fp, lr}
   326c4:	mov	fp, sp
   326c8:	sub	sp, sp, #28
   326cc:	str	r3, [fp, #8]
   326d0:	str	r0, [fp, #-4]
   326d4:	str	r1, [fp, #-8]
   326d8:	str	r2, [fp, #-12]
   326dc:	movw	r0, #0
   326e0:	str	r0, [sp, #12]
   326e4:	ldr	r0, [fp, #-12]
   326e8:	and	r0, r0, #64	; 0x40
   326ec:	cmp	r0, #0
   326f0:	beq	3271c <__assert_fail@plt+0x1fb64>
   326f4:	add	r0, sp, #8
   326f8:	mov	r1, r0
   326fc:	add	r2, fp, #8
   32700:	str	r2, [r1]
   32704:	ldr	r1, [sp, #8]
   32708:	add	r2, r1, #4
   3270c:	str	r2, [sp, #8]
   32710:	ldr	r1, [r1]
   32714:	str	r1, [sp, #12]
   32718:	str	r0, [sp, #4]
   3271c:	ldr	r0, [fp, #-4]
   32720:	ldr	r1, [fp, #-8]
   32724:	ldr	r2, [fp, #-12]
   32728:	ldr	r3, [sp, #12]
   3272c:	bl	128ac <openat64@plt>
   32730:	bl	4ba08 <__assert_fail@plt+0x38e50>
   32734:	mov	sp, fp
   32738:	pop	{fp, lr}
   3273c:	add	sp, sp, #4
   32740:	bx	lr
   32744:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   32748:	add	fp, sp, #28
   3274c:	sub	sp, sp, #4
   32750:	sub	sp, sp, #7168	; 0x1c00
   32754:	sub	r1, fp, #2016	; 0x7e0
   32758:	sub	r2, fp, #1280	; 0x500
   3275c:	sub	r3, fp, #148	; 0x94
   32760:	movw	ip, #65256	; 0xfee8
   32764:	movt	ip, #8
   32768:	str	r0, [fp, #-36]	; 0xffffffdc
   3276c:	sub	r0, fp, #96	; 0x60
   32770:	str	r1, [fp, #-2916]	; 0xfffff49c
   32774:	mov	r1, ip
   32778:	movw	ip, #56	; 0x38
   3277c:	str	r2, [fp, #-2920]	; 0xfffff498
   32780:	mov	r2, ip
   32784:	str	r3, [fp, #-2924]	; 0xfffff494
   32788:	bl	125c4 <memcpy@plt>
   3278c:	movw	r0, #0
   32790:	str	r0, [fp, #-1304]	; 0xfffffae8
   32794:	str	r0, [fp, #-1364]	; 0xfffffaac
   32798:	ldr	r1, [fp, #-2924]	; 0xfffff494
   3279c:	str	r1, [fp, #-152]	; 0xffffff68
   327a0:	str	r1, [fp, #-156]	; 0xffffff64
   327a4:	ldr	r2, [fp, #-2920]	; 0xfffff498
   327a8:	str	r2, [fp, #-1284]	; 0xfffffafc
   327ac:	str	r2, [fp, #-1288]	; 0xfffffaf8
   327b0:	movw	r3, #20
   327b4:	str	r3, [fp, #-1292]	; 0xfffffaf4
   327b8:	str	r0, [fp, #-104]	; 0xffffff98
   327bc:	str	r0, [fp, #-108]	; 0xffffff94
   327c0:	str	r0, [fp, #-100]	; 0xffffff9c
   327c4:	mvn	r0, #1
   327c8:	str	r0, [fp, #-40]	; 0xffffffd8
   327cc:	b	327dc <__assert_fail@plt+0x1fc24>
   327d0:	ldr	r0, [fp, #-156]	; 0xffffff64
   327d4:	add	r0, r0, #2
   327d8:	str	r0, [fp, #-156]	; 0xffffff64
   327dc:	ldr	r0, [fp, #-104]	; 0xffffff98
   327e0:	ldr	r1, [fp, #-156]	; 0xffffff64
   327e4:	strh	r0, [r1]
   327e8:	ldr	r0, [fp, #-152]	; 0xffffff68
   327ec:	ldr	r1, [fp, #-1292]	; 0xfffffaf4
   327f0:	add	r0, r0, r1, lsl #1
   327f4:	mvn	r1, #1
   327f8:	add	r0, r0, r1
   327fc:	ldr	r1, [fp, #-156]	; 0xffffff64
   32800:	cmp	r0, r1
   32804:	bhi	3299c <__assert_fail@plt+0x1fde4>
   32808:	ldr	r0, [fp, #-156]	; 0xffffff64
   3280c:	ldr	r1, [fp, #-152]	; 0xffffff68
   32810:	sub	r0, r0, r1
   32814:	asr	r0, r0, #1
   32818:	add	r0, r0, #1
   3281c:	str	r0, [fp, #-1368]	; 0xfffffaa8
   32820:	ldr	r0, [fp, #-1292]	; 0xfffffaf4
   32824:	movw	r1, #20
   32828:	cmp	r1, r0
   3282c:	bhi	32834 <__assert_fail@plt+0x1fc7c>
   32830:	b	3c30c <__assert_fail@plt+0x29754>
   32834:	ldr	r0, [fp, #-1292]	; 0xfffffaf4
   32838:	lsl	r0, r0, #1
   3283c:	str	r0, [fp, #-1292]	; 0xfffffaf4
   32840:	ldr	r0, [fp, #-1292]	; 0xfffffaf4
   32844:	movw	r1, #20
   32848:	cmp	r1, r0
   3284c:	bcs	32858 <__assert_fail@plt+0x1fca0>
   32850:	movw	r0, #20
   32854:	str	r0, [fp, #-1292]	; 0xfffffaf4
   32858:	ldr	r0, [fp, #-152]	; 0xffffff68
   3285c:	str	r0, [fp, #-1372]	; 0xfffffaa4
   32860:	ldr	r0, [fp, #-1292]	; 0xfffffaf4
   32864:	movw	r1, #58	; 0x3a
   32868:	mul	r0, r0, r1
   3286c:	add	r0, r0, #55	; 0x37
   32870:	bl	549ac <__assert_fail@plt+0x41df4>
   32874:	str	r0, [fp, #-1376]	; 0xfffffaa0
   32878:	ldr	r0, [fp, #-1376]	; 0xfffffaa0
   3287c:	movw	r1, #0
   32880:	cmp	r0, r1
   32884:	bne	3288c <__assert_fail@plt+0x1fcd4>
   32888:	b	3c30c <__assert_fail@plt+0x29754>
   3288c:	b	32890 <__assert_fail@plt+0x1fcd8>
   32890:	ldr	r0, [fp, #-1376]	; 0xfffffaa0
   32894:	ldr	r1, [fp, #-152]	; 0xffffff68
   32898:	ldr	r2, [fp, #-1368]	; 0xfffffaa8
   3289c:	lsl	r2, r2, #1
   328a0:	bl	125c4 <memcpy@plt>
   328a4:	ldr	r1, [fp, #-1376]	; 0xfffffaa0
   328a8:	str	r1, [fp, #-152]	; 0xffffff68
   328ac:	ldr	r1, [fp, #-1292]	; 0xfffffaf4
   328b0:	lsl	r1, r1, #1
   328b4:	add	r1, r1, #55	; 0x37
   328b8:	str	r1, [fp, #-1380]	; 0xfffffa9c
   328bc:	ldr	r1, [fp, #-1380]	; 0xfffffa9c
   328c0:	movw	r2, #56	; 0x38
   328c4:	udiv	r1, r1, r2
   328c8:	ldr	lr, [fp, #-1376]	; 0xfffffaa0
   328cc:	mul	r1, r1, r2
   328d0:	add	r1, lr, r1
   328d4:	str	r1, [fp, #-1376]	; 0xfffffaa0
   328d8:	str	r0, [fp, #-2928]	; 0xfffff490
   328dc:	b	328e0 <__assert_fail@plt+0x1fd28>
   328e0:	ldr	r0, [fp, #-1376]	; 0xfffffaa0
   328e4:	ldr	r1, [fp, #-1284]	; 0xfffffafc
   328e8:	ldr	r2, [fp, #-1368]	; 0xfffffaa8
   328ec:	movw	r3, #56	; 0x38
   328f0:	mul	r2, r2, r3
   328f4:	str	r3, [fp, #-2932]	; 0xfffff48c
   328f8:	bl	125c4 <memcpy@plt>
   328fc:	ldr	r0, [fp, #-1376]	; 0xfffffaa0
   32900:	str	r0, [fp, #-1284]	; 0xfffffafc
   32904:	ldr	r0, [fp, #-1292]	; 0xfffffaf4
   32908:	ldr	r1, [fp, #-2932]	; 0xfffff48c
   3290c:	mul	r0, r0, r1
   32910:	add	r0, r0, #55	; 0x37
   32914:	str	r0, [fp, #-1384]	; 0xfffffa98
   32918:	ldr	r0, [fp, #-1384]	; 0xfffffa98
   3291c:	udiv	r0, r0, r1
   32920:	ldr	r2, [fp, #-1376]	; 0xfffffaa0
   32924:	mul	r0, r0, r1
   32928:	add	r0, r2, r0
   3292c:	str	r0, [fp, #-1376]	; 0xfffffaa0
   32930:	sub	r0, fp, #148	; 0x94
   32934:	ldr	r1, [fp, #-1372]	; 0xfffffaa4
   32938:	cmp	r1, r0
   3293c:	beq	32948 <__assert_fail@plt+0x1fd90>
   32940:	ldr	r0, [fp, #-1372]	; 0xfffffaa4
   32944:	bl	50c68 <__assert_fail@plt+0x3e0b0>
   32948:	ldr	r0, [fp, #-152]	; 0xffffff68
   3294c:	ldr	r1, [fp, #-1368]	; 0xfffffaa8
   32950:	add	r0, r0, r1, lsl #1
   32954:	sub	r0, r0, #2
   32958:	str	r0, [fp, #-156]	; 0xffffff64
   3295c:	ldr	r0, [fp, #-1284]	; 0xfffffafc
   32960:	ldr	r1, [fp, #-1368]	; 0xfffffaa8
   32964:	rsb	r1, r1, r1, lsl #3
   32968:	add	r0, r0, r1, lsl #3
   3296c:	sub	r0, r0, #56	; 0x38
   32970:	str	r0, [fp, #-1288]	; 0xfffffaf8
   32974:	ldr	r0, [fp, #-152]	; 0xffffff68
   32978:	ldr	r1, [fp, #-1292]	; 0xfffffaf4
   3297c:	add	r0, r0, r1, lsl #1
   32980:	mvn	r1, #1
   32984:	add	r0, r0, r1
   32988:	ldr	r1, [fp, #-156]	; 0xffffff64
   3298c:	cmp	r0, r1
   32990:	bhi	32998 <__assert_fail@plt+0x1fde0>
   32994:	b	3c300 <__assert_fail@plt+0x29748>
   32998:	b	3299c <__assert_fail@plt+0x1fde4>
   3299c:	ldr	r0, [fp, #-104]	; 0xffffff98
   329a0:	cmp	r0, #12
   329a4:	bne	329ac <__assert_fail@plt+0x1fdf4>
   329a8:	b	3c2f4 <__assert_fail@plt+0x2973c>
   329ac:	b	329b0 <__assert_fail@plt+0x1fdf8>
   329b0:	ldr	r0, [fp, #-104]	; 0xffffff98
   329b4:	movw	r1, #50576	; 0xc590
   329b8:	movt	r1, #7
   329bc:	add	r0, r1, r0
   329c0:	ldrsb	r0, [r0]
   329c4:	str	r0, [fp, #-1296]	; 0xfffffaf0
   329c8:	ldr	r0, [fp, #-1296]	; 0xfffffaf0
   329cc:	cmn	r0, #93	; 0x5d
   329d0:	bne	329d8 <__assert_fail@plt+0x1fe20>
   329d4:	b	32b20 <__assert_fail@plt+0x1ff68>
   329d8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   329dc:	cmn	r0, #2
   329e0:	bne	329f4 <__assert_fail@plt+0x1fe3c>
   329e4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   329e8:	sub	r0, fp, #96	; 0x60
   329ec:	bl	3c440 <__assert_fail@plt+0x29888>
   329f0:	str	r0, [fp, #-40]	; 0xffffffd8
   329f4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   329f8:	cmp	r0, #0
   329fc:	bgt	32a10 <__assert_fail@plt+0x1fe58>
   32a00:	movw	r0, #0
   32a04:	str	r0, [fp, #-1304]	; 0xfffffae8
   32a08:	str	r0, [fp, #-40]	; 0xffffffd8
   32a0c:	b	32a50 <__assert_fail@plt+0x1fe98>
   32a10:	ldr	r0, [fp, #-40]	; 0xffffffd8
   32a14:	movw	r1, #277	; 0x115
   32a18:	cmp	r0, r1
   32a1c:	bhi	32a3c <__assert_fail@plt+0x1fe84>
   32a20:	ldr	r0, [fp, #-40]	; 0xffffffd8
   32a24:	movw	r1, #50690	; 0xc602
   32a28:	movt	r1, #7
   32a2c:	add	r0, r1, r0
   32a30:	ldrb	r0, [r0]
   32a34:	str	r0, [fp, #-2936]	; 0xfffff488
   32a38:	b	32a48 <__assert_fail@plt+0x1fe90>
   32a3c:	movw	r0, #2
   32a40:	str	r0, [fp, #-2936]	; 0xfffff488
   32a44:	b	32a48 <__assert_fail@plt+0x1fe90>
   32a48:	ldr	r0, [fp, #-2936]	; 0xfffff488
   32a4c:	str	r0, [fp, #-1304]	; 0xfffffae8
   32a50:	ldr	r0, [fp, #-1304]	; 0xfffffae8
   32a54:	ldr	r1, [fp, #-1296]	; 0xfffffaf0
   32a58:	add	r0, r1, r0
   32a5c:	str	r0, [fp, #-1296]	; 0xfffffaf0
   32a60:	ldr	r0, [fp, #-1296]	; 0xfffffaf0
   32a64:	cmp	r0, #0
   32a68:	blt	32a9c <__assert_fail@plt+0x1fee4>
   32a6c:	ldr	r0, [fp, #-1296]	; 0xfffffaf0
   32a70:	movw	r1, #112	; 0x70
   32a74:	cmp	r1, r0
   32a78:	blt	32a9c <__assert_fail@plt+0x1fee4>
   32a7c:	ldr	r0, [fp, #-1296]	; 0xfffffaf0
   32a80:	movw	r1, #50968	; 0xc718
   32a84:	movt	r1, #7
   32a88:	add	r0, r1, r0
   32a8c:	ldrsb	r0, [r0]
   32a90:	ldr	r1, [fp, #-1304]	; 0xfffffae8
   32a94:	cmp	r0, r1
   32a98:	beq	32aa0 <__assert_fail@plt+0x1fee8>
   32a9c:	b	32b20 <__assert_fail@plt+0x1ff68>
   32aa0:	ldr	r0, [fp, #-1296]	; 0xfffffaf0
   32aa4:	movw	r1, #51081	; 0xc789
   32aa8:	movt	r1, #7
   32aac:	add	r0, r1, r0
   32ab0:	ldrb	r0, [r0]
   32ab4:	str	r0, [fp, #-1296]	; 0xfffffaf0
   32ab8:	ldr	r0, [fp, #-1296]	; 0xfffffaf0
   32abc:	cmp	r0, #0
   32ac0:	bgt	32ad8 <__assert_fail@plt+0x1ff20>
   32ac4:	ldr	r0, [fp, #-1296]	; 0xfffffaf0
   32ac8:	movw	r1, #0
   32acc:	sub	r0, r1, r0
   32ad0:	str	r0, [fp, #-1296]	; 0xfffffaf0
   32ad4:	b	32b4c <__assert_fail@plt+0x1ff94>
   32ad8:	ldr	r0, [fp, #-108]	; 0xffffff94
   32adc:	cmp	r0, #0
   32ae0:	beq	32af4 <__assert_fail@plt+0x1ff3c>
   32ae4:	ldr	r0, [fp, #-108]	; 0xffffff94
   32ae8:	mvn	r1, #0
   32aec:	add	r0, r0, r1
   32af0:	str	r0, [fp, #-108]	; 0xffffff94
   32af4:	mvn	r0, #1
   32af8:	str	r0, [fp, #-40]	; 0xffffffd8
   32afc:	ldr	r0, [fp, #-1296]	; 0xfffffaf0
   32b00:	str	r0, [fp, #-104]	; 0xffffff98
   32b04:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   32b08:	add	r0, r0, #56	; 0x38
   32b0c:	str	r0, [fp, #-1288]	; 0xfffffaf8
   32b10:	sub	r1, fp, #96	; 0x60
   32b14:	movw	r2, #56	; 0x38
   32b18:	bl	125c4 <memcpy@plt>
   32b1c:	b	327d0 <__assert_fail@plt+0x1fc18>
   32b20:	ldr	r0, [fp, #-104]	; 0xffffff98
   32b24:	movw	r1, #51194	; 0xc7fa
   32b28:	movt	r1, #7
   32b2c:	add	r0, r1, r0
   32b30:	ldrb	r0, [r0]
   32b34:	str	r0, [fp, #-1296]	; 0xfffffaf0
   32b38:	ldr	r0, [fp, #-1296]	; 0xfffffaf0
   32b3c:	cmp	r0, #0
   32b40:	bne	32b48 <__assert_fail@plt+0x1ff90>
   32b44:	b	3c0e0 <__assert_fail@plt+0x29528>
   32b48:	b	32b4c <__assert_fail@plt+0x1ff94>
   32b4c:	ldr	r0, [fp, #-1296]	; 0xfffffaf0
   32b50:	movw	r1, #51308	; 0xc86c
   32b54:	movt	r1, #7
   32b58:	ldrb	r0, [r1, r0]
   32b5c:	str	r0, [fp, #-1364]	; 0xfffffaac
   32b60:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   32b64:	ldr	r1, [fp, #-1364]	; 0xfffffaac
   32b68:	rsb	r1, r1, #1
   32b6c:	rsb	r1, r1, r1, lsl #3
   32b70:	add	r0, r0, r1, lsl #3
   32b74:	mov	r1, #48	; 0x30
   32b78:	mov	r2, r0
   32b7c:	vld1.64	{d16-d17}, [r2], r1
   32b80:	sub	r3, fp, #1360	; 0x550
   32b84:	mov	ip, r3
   32b88:	vst1.64	{d16-d17}, [ip], r1
   32b8c:	vldr	d18, [r2]
   32b90:	vstr	d18, [ip]
   32b94:	add	r1, r0, #32
   32b98:	vld1.64	{d16-d17}, [r1]
   32b9c:	add	r1, r3, #32
   32ba0:	vst1.64	{d16-d17}, [r1]
   32ba4:	add	r0, r0, #16
   32ba8:	vld1.64	{d16-d17}, [r0]
   32bac:	add	r0, r3, #16
   32bb0:	vst1.64	{d16-d17}, [r0]
   32bb4:	ldr	r0, [fp, #-1296]	; 0xfffffaf0
   32bb8:	sub	r0, r0, #4
   32bbc:	cmp	r0, #87	; 0x57
   32bc0:	str	r0, [fp, #-2940]	; 0xfffff484
   32bc4:	bhi	3bfbc <__assert_fail@plt+0x29404>
   32bc8:	add	r0, pc, #8
   32bcc:	ldr	r1, [fp, #-2940]	; 0xfffff484
   32bd0:	ldr	r0, [r0, r1, lsl #2]
   32bd4:	mov	pc, r0
   32bd8:	andeq	r2, r3, r8, lsr sp
   32bdc:			; <UNDEFINED> instruction: 0x0003bfbc
   32be0:			; <UNDEFINED> instruction: 0x0003bfbc
   32be4:	andeq	r2, r3, r4, ror sp
   32be8:	andeq	r2, r3, ip, lsr #27
   32bec:	ldrdeq	r2, [r3], -r4
   32bf0:	strdeq	r2, [r3], -ip
   32bf4:	andeq	r2, r3, r4, lsr #28
   32bf8:	andeq	r2, r3, ip, asr #28
   32bfc:	andeq	r2, r3, r4, ror lr
   32c00:	andeq	r2, r3, ip, lsl #29
   32c04:	andeq	r2, r3, r4, lsr #29
   32c08:			; <UNDEFINED> instruction: 0x0003bfbc
   32c0c:			; <UNDEFINED> instruction: 0x0003bfbc
   32c10:			; <UNDEFINED> instruction: 0x00032ebc
   32c14:	strdeq	r2, [r3], -ip
   32c18:	andeq	r2, r3, r4, asr #30
   32c1c:			; <UNDEFINED> instruction: 0x0003bfbc
   32c20:	muleq	r3, r0, pc	; <UNPREDICTABLE>
   32c24:	andeq	r2, r3, ip, asr #31
   32c28:	andeq	r3, r3, r0, lsl r0
   32c2c:			; <UNDEFINED> instruction: 0x0003bfbc
   32c30:			; <UNDEFINED> instruction: 0x0003bfbc
   32c34:	andeq	r3, r3, r0, ror r0
   32c38:	andeq	r3, r3, r0, ror #1
   32c3c:	strdeq	r3, [r3], -r4
   32c40:	andeq	r3, r3, r4, lsl r1
   32c44:	andeq	r3, r3, r8, lsr #2
   32c48:	andeq	r3, r3, r8, lsr r1
   32c4c:	andeq	r3, r3, r8, lsl r2
   32c50:	strdeq	r3, [r3], -r8
   32c54:	ldrdeq	r3, [r3], -r8
   32c58:	strdeq	r3, [r3], -r0
   32c5c:	andeq	r3, r3, r8, lsl #8
   32c60:	andeq	r3, r3, ip, lsr #8
   32c64:	andeq	r3, r3, r0, asr r4
   32c68:	andeq	r3, r3, r8, lsl #9
   32c6c:	andeq	r3, r3, r0, asr #9
   32c70:	strdeq	r3, [r3], -r4
   32c74:	andeq	r3, r3, ip, lsr #12
   32c78:	andeq	r3, r3, ip, lsr #13
   32c7c:	andeq	r3, r3, r0, asr r7
   32c80:	andeq	r3, r3, r4, lsl #15
   32c84:	andeq	r3, r3, ip, asr #15
   32c88:	andeq	r3, r3, r0, lsl #16
   32c8c:			; <UNDEFINED> instruction: 0x0003bfbc
   32c90:	andeq	r3, r3, r8, asr #16
   32c94:	andeq	r3, r3, r4, ror #17
   32c98:	muleq	r3, r4, r9
   32c9c:	andeq	r3, r3, r0, asr sl
   32ca0:	andeq	r3, r3, ip, lsl #22
   32ca4:	andeq	r3, r3, r0, lsr #23
   32ca8:	andeq	r3, r3, r0, lsr ip
   32cac:			; <UNDEFINED> instruction: 0x00033cbc
   32cb0:	andeq	r3, r3, ip, asr #26
   32cb4:	andeq	r3, r3, r0, ror #27
   32cb8:	andeq	r3, r3, r8, ror #28
   32cbc:	andeq	r6, r3, ip, ror #10
   32cc0:	andeq	r8, r3, r8, ror #24
   32cc4:	strdeq	r8, [r3], -ip
   32cc8:	andeq	r8, r3, ip, lsl #27
   32ccc:	andeq	r8, r3, r0, lsr #28
   32cd0:	andeq	r8, r3, r8, lsr #29
   32cd4:	andeq	r8, r3, ip, lsr pc
   32cd8:	andeq	r8, r3, ip, asr #31
   32cdc:	andeq	r9, r3, r8, asr r0
   32ce0:	andeq	r9, r3, ip, ror #1
   32ce4:	andeq	r9, r3, r4, lsl #3
   32ce8:	andeq	r9, r3, ip, lsr #4
   32cec:	ldrdeq	r9, [r3], -r8
   32cf0:			; <UNDEFINED> instruction: 0x0003bfbc
   32cf4:	andeq	r9, r3, r4, ror #6
   32cf8:	strdeq	r9, [r3], -r8
   32cfc:	andeq	r9, r3, ip, lsl #9
   32d00:	andeq	fp, r3, ip, lsl #23
   32d04:	andeq	fp, r3, r0, lsr #24
   32d08:			; <UNDEFINED> instruction: 0x0003bcb4
   32d0c:	andeq	fp, r3, r8, asr #26
   32d10:			; <UNDEFINED> instruction: 0x0003bfbc
   32d14:			; <UNDEFINED> instruction: 0x0003bfbc
   32d18:			; <UNDEFINED> instruction: 0x0003bfbc
   32d1c:	ldrdeq	fp, [r3], -ip
   32d20:			; <UNDEFINED> instruction: 0x0003bfbc
   32d24:	andeq	fp, r3, ip, lsl lr
   32d28:	andeq	fp, r3, ip, asr lr
   32d2c:	andeq	fp, r3, r0, lsr #29
   32d30:	muleq	r3, r4, pc	; <UNPREDICTABLE>
   32d34:	andeq	fp, r3, r4, lsr #31
   32d38:	ldr	r0, [fp, #-36]	; 0xffffffdc
   32d3c:	ldr	r1, [fp, #-1288]	; 0xfffffaf8
   32d40:	ldr	r2, [r1]
   32d44:	str	r2, [r0, #88]	; 0x58
   32d48:	ldr	r1, [r1, #4]
   32d4c:	str	r1, [r0, #92]	; 0x5c
   32d50:	ldr	r0, [fp, #-36]	; 0xffffffdc
   32d54:	movw	r1, #1
   32d58:	strb	r1, [r0, #152]	; 0x98
   32d5c:	movw	r0, #43562	; 0xaa2a
   32d60:	movt	r0, #7
   32d64:	bl	12864 <gettext@plt>
   32d68:	ldr	r1, [fp, #-36]	; 0xffffffdc
   32d6c:	bl	3d6f4 <__assert_fail@plt+0x2ab3c>
   32d70:	b	3bfc0 <__assert_fail@plt+0x29408>
   32d74:	ldr	r0, [fp, #-36]	; 0xffffffdc
   32d78:	ldr	r1, [r0, #172]	; 0xac
   32d7c:	add	r1, r1, #1
   32d80:	str	r1, [r0, #172]	; 0xac
   32d84:	ldr	r0, [fp, #-36]	; 0xffffffdc
   32d88:	ldr	r1, [r0, #156]	; 0x9c
   32d8c:	add	r1, r1, #1
   32d90:	str	r1, [r0, #156]	; 0x9c
   32d94:	movw	r0, #53532	; 0xd11c
   32d98:	movt	r0, #7
   32d9c:	bl	12864 <gettext@plt>
   32da0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   32da4:	bl	3d6f4 <__assert_fail@plt+0x2ab3c>
   32da8:	b	3bfc0 <__assert_fail@plt+0x29408>
   32dac:	ldr	r0, [fp, #-36]	; 0xffffffdc
   32db0:	ldr	r1, [r0, #172]	; 0xac
   32db4:	add	r1, r1, #1
   32db8:	str	r1, [r0, #172]	; 0xac
   32dbc:	movw	r0, #42996	; 0xa7f4
   32dc0:	movt	r0, #7
   32dc4:	bl	12864 <gettext@plt>
   32dc8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   32dcc:	bl	3d6f4 <__assert_fail@plt+0x2ab3c>
   32dd0:	b	3bfc0 <__assert_fail@plt+0x29408>
   32dd4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   32dd8:	ldr	r1, [r0, #164]	; 0xa4
   32ddc:	add	r1, r1, #1
   32de0:	str	r1, [r0, #164]	; 0xa4
   32de4:	movw	r0, #53541	; 0xd125
   32de8:	movt	r0, #7
   32dec:	bl	12864 <gettext@plt>
   32df0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   32df4:	bl	3d6f4 <__assert_fail@plt+0x2ab3c>
   32df8:	b	3bfc0 <__assert_fail@plt+0x29408>
   32dfc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   32e00:	ldr	r1, [r0, #176]	; 0xb0
   32e04:	add	r1, r1, #1
   32e08:	str	r1, [r0, #176]	; 0xb0
   32e0c:	movw	r0, #53547	; 0xd12b
   32e10:	movt	r0, #7
   32e14:	bl	12864 <gettext@plt>
   32e18:	ldr	r1, [fp, #-36]	; 0xffffffdc
   32e1c:	bl	3d6f4 <__assert_fail@plt+0x2ab3c>
   32e20:	b	3bfc0 <__assert_fail@plt+0x29408>
   32e24:	ldr	r0, [fp, #-36]	; 0xffffffdc
   32e28:	ldr	r1, [r0, #156]	; 0x9c
   32e2c:	add	r1, r1, #1
   32e30:	str	r1, [r0, #156]	; 0x9c
   32e34:	movw	r0, #53552	; 0xd130
   32e38:	movt	r0, #7
   32e3c:	bl	12864 <gettext@plt>
   32e40:	ldr	r1, [fp, #-36]	; 0xffffffdc
   32e44:	bl	3d6f4 <__assert_fail@plt+0x2ab3c>
   32e48:	b	3bfc0 <__assert_fail@plt+0x29408>
   32e4c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   32e50:	ldr	r1, [r0, #160]	; 0xa0
   32e54:	add	r1, r1, #1
   32e58:	str	r1, [r0, #160]	; 0xa0
   32e5c:	movw	r0, #43833	; 0xab39
   32e60:	movt	r0, #7
   32e64:	bl	12864 <gettext@plt>
   32e68:	ldr	r1, [fp, #-36]	; 0xffffffdc
   32e6c:	bl	3d6f4 <__assert_fail@plt+0x2ab3c>
   32e70:	b	3bfc0 <__assert_fail@plt+0x29408>
   32e74:	movw	r0, #53557	; 0xd135
   32e78:	movt	r0, #7
   32e7c:	bl	12864 <gettext@plt>
   32e80:	ldr	r1, [fp, #-36]	; 0xffffffdc
   32e84:	bl	3dc04 <__assert_fail@plt+0x2b04c>
   32e88:	b	3bfc0 <__assert_fail@plt+0x29408>
   32e8c:	movw	r0, #49057	; 0xbfa1
   32e90:	movt	r0, #7
   32e94:	bl	12864 <gettext@plt>
   32e98:	ldr	r1, [fp, #-36]	; 0xffffffdc
   32e9c:	bl	3d6f4 <__assert_fail@plt+0x2ab3c>
   32ea0:	b	3bfc0 <__assert_fail@plt+0x29408>
   32ea4:	movw	r0, #53566	; 0xd13e
   32ea8:	movt	r0, #7
   32eac:	bl	12864 <gettext@plt>
   32eb0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   32eb4:	bl	3dc04 <__assert_fail@plt+0x2b04c>
   32eb8:	b	3bfc0 <__assert_fail@plt+0x29408>
   32ebc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   32ec0:	ldr	r1, [fp, #-1288]	; 0xfffffaf8
   32ec4:	ldr	r2, [r1, #-48]	; 0xffffffd0
   32ec8:	ldr	r3, [r1, #-44]	; 0xffffffd4
   32ecc:	mov	r1, sp
   32ed0:	mov	ip, #0
   32ed4:	str	ip, [r1, #12]
   32ed8:	str	ip, [r1, #8]
   32edc:	str	ip, [r1, #4]
   32ee0:	str	ip, [r1]
   32ee4:	bl	3de80 <__assert_fail@plt+0x2b2c8>
   32ee8:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   32eec:	ldr	r0, [r0]
   32ef0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   32ef4:	str	r0, [r1, #28]
   32ef8:	b	3bfc0 <__assert_fail@plt+0x29408>
   32efc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   32f00:	ldr	r1, [fp, #-1288]	; 0xfffffaf8
   32f04:	ldr	r2, [r1, #-160]	; 0xffffff60
   32f08:	ldr	r3, [r1, #-156]	; 0xffffff64
   32f0c:	ldr	ip, [r1, #-48]	; 0xffffffd0
   32f10:	ldr	r1, [r1, #-44]	; 0xffffffd4
   32f14:	mov	lr, sp
   32f18:	mov	r4, #0
   32f1c:	str	r4, [lr, #12]
   32f20:	str	r4, [lr, #8]
   32f24:	str	r1, [lr, #4]
   32f28:	str	ip, [lr]
   32f2c:	bl	3de80 <__assert_fail@plt+0x2b2c8>
   32f30:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   32f34:	ldr	r0, [r0]
   32f38:	ldr	r1, [fp, #-36]	; 0xffffffdc
   32f3c:	str	r0, [r1, #28]
   32f40:	b	3bfc0 <__assert_fail@plt+0x29408>
   32f44:	ldr	r0, [fp, #-36]	; 0xffffffdc
   32f48:	ldr	r1, [fp, #-1288]	; 0xfffffaf8
   32f4c:	ldr	r2, [r1, #-272]	; 0xfffffef0
   32f50:	ldr	r3, [r1, #-268]	; 0xfffffef4
   32f54:	ldr	ip, [r1, #-160]	; 0xffffff60
   32f58:	ldr	lr, [r1, #-156]	; 0xffffff64
   32f5c:	ldr	r4, [r1, #-56]	; 0xffffffc8
   32f60:	ldr	r1, [r1, #-52]	; 0xffffffcc
   32f64:	mov	r5, sp
   32f68:	str	r1, [r5, #12]
   32f6c:	str	r4, [r5, #8]
   32f70:	str	lr, [r5, #4]
   32f74:	str	ip, [r5]
   32f78:	bl	3de80 <__assert_fail@plt+0x2b2c8>
   32f7c:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   32f80:	ldr	r0, [r0]
   32f84:	ldr	r1, [fp, #-36]	; 0xffffffdc
   32f88:	str	r0, [r1, #28]
   32f8c:	b	3bfc0 <__assert_fail@plt+0x29408>
   32f90:	ldr	r0, [fp, #-36]	; 0xffffffdc
   32f94:	ldr	r1, [fp, #-1288]	; 0xfffffaf8
   32f98:	ldr	r2, [r1, #-48]	; 0xffffffd0
   32f9c:	ldr	r3, [r1, #-44]	; 0xffffffd4
   32fa0:	mov	r1, sp
   32fa4:	mov	ip, #0
   32fa8:	str	ip, [r1, #12]
   32fac:	str	ip, [r1, #8]
   32fb0:	str	ip, [r1, #4]
   32fb4:	str	ip, [r1]
   32fb8:	bl	3de80 <__assert_fail@plt+0x2b2c8>
   32fbc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   32fc0:	movw	r1, #2
   32fc4:	str	r1, [r0, #28]
   32fc8:	b	3bfc0 <__assert_fail@plt+0x29408>
   32fcc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   32fd0:	ldr	r1, [fp, #-1288]	; 0xfffffaf8
   32fd4:	ldr	r2, [r1, #-160]	; 0xffffff60
   32fd8:	ldr	r3, [r1, #-156]	; 0xffffff64
   32fdc:	ldr	ip, [r1, #-48]	; 0xffffffd0
   32fe0:	ldr	r1, [r1, #-44]	; 0xffffffd4
   32fe4:	mov	lr, sp
   32fe8:	mov	r4, #0
   32fec:	str	r4, [lr, #12]
   32ff0:	str	r4, [lr, #8]
   32ff4:	str	r1, [lr, #4]
   32ff8:	str	ip, [lr]
   32ffc:	bl	3de80 <__assert_fail@plt+0x2b2c8>
   33000:	ldr	r0, [fp, #-36]	; 0xffffffdc
   33004:	movw	r1, #2
   33008:	str	r1, [r0, #28]
   3300c:	b	3bfc0 <__assert_fail@plt+0x29408>
   33010:	ldr	r0, [fp, #-36]	; 0xffffffdc
   33014:	ldr	r1, [fp, #-1288]	; 0xfffffaf8
   33018:	ldr	r2, [r1, #-272]	; 0xfffffef0
   3301c:	ldr	r3, [r1, #-268]	; 0xfffffef4
   33020:	ldr	ip, [r1, #-160]	; 0xffffff60
   33024:	ldr	r1, [r1, #-156]	; 0xffffff64
   33028:	ldr	lr, [fp, #-1288]	; 0xfffffaf8
   3302c:	mvn	r4, #55	; 0x37
   33030:	add	lr, lr, r4
   33034:	ldr	lr, [lr]
   33038:	ldr	r4, [fp, #-1288]	; 0xfffffaf8
   3303c:	mvn	r5, #51	; 0x33
   33040:	add	r4, r4, r5
   33044:	ldr	r4, [r4]
   33048:	mov	r5, sp
   3304c:	str	r4, [r5, #12]
   33050:	str	lr, [r5, #8]
   33054:	str	r1, [r5, #4]
   33058:	str	ip, [r5]
   3305c:	bl	3de80 <__assert_fail@plt+0x2b2c8>
   33060:	ldr	r0, [fp, #-36]	; 0xffffffdc
   33064:	movw	r1, #2
   33068:	str	r1, [r0, #28]
   3306c:	b	3bfc0 <__assert_fail@plt+0x29408>
   33070:	ldr	r0, [fp, #-36]	; 0xffffffdc
   33074:	ldr	r1, [r0, #176]	; 0xb0
   33078:	add	r1, r1, #1
   3307c:	str	r1, [r0, #176]	; 0xb0
   33080:	ldr	r0, [fp, #-36]	; 0xffffffdc
   33084:	ldr	r1, [fp, #-1288]	; 0xfffffaf8
   33088:	ldr	r2, [r1, #4]
   3308c:	ldr	r3, [r1]
   33090:	ldr	ip, [r1, #-36]	; 0xffffffdc
   33094:	ldr	lr, [r1, #-40]	; 0xffffffd8
   33098:	ldr	r4, [r1, #-56]	; 0xffffffc8
   3309c:	ldr	r5, [r1, #-52]	; 0xffffffcc
   330a0:	ldr	r6, [r1, #-48]	; 0xffffffd0
   330a4:	ldr	r1, [r1, #-44]	; 0xffffffd4
   330a8:	mov	r7, sp
   330ac:	str	r2, [r7, #20]
   330b0:	str	r3, [r7, #16]
   330b4:	str	r6, [r7]
   330b8:	str	r1, [r7, #4]
   330bc:	str	lr, [r7, #8]
   330c0:	str	ip, [r7, #12]
   330c4:	mov	r2, r4
   330c8:	mov	r3, r5
   330cc:	bl	3df00 <__assert_fail@plt+0x2b348>
   330d0:	tst	r0, #1
   330d4:	bne	330dc <__assert_fail@plt+0x20524>
   330d8:	b	3c300 <__assert_fail@plt+0x29748>
   330dc:	b	3bfc0 <__assert_fail@plt+0x29408>
   330e0:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   330e4:	ldr	r0, [r0]
   330e8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   330ec:	str	r0, [r1, #20]
   330f0:	b	3bfc0 <__assert_fail@plt+0x29408>
   330f4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   330f8:	movw	r1, #1
   330fc:	str	r1, [r0, #20]
   33100:	ldr	r0, [fp, #-36]	; 0xffffffdc
   33104:	ldr	r1, [r0, #168]	; 0xa8
   33108:	add	r1, r1, #1
   3310c:	str	r1, [r0, #168]	; 0xa8
   33110:	b	3bfc0 <__assert_fail@plt+0x29408>
   33114:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   33118:	ldr	r0, [r0]
   3311c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   33120:	str	r0, [r1, #24]
   33124:	b	3bfc0 <__assert_fail@plt+0x29408>
   33128:	ldr	r0, [pc, #4088]	; 34128 <__assert_fail@plt+0x21570>
   3312c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   33130:	str	r0, [r1, #24]
   33134:	b	3bfc0 <__assert_fail@plt+0x29408>
   33138:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3313c:	ldr	r0, [r0, #-56]	; 0xffffffc8
   33140:	ldr	r1, [fp, #-36]	; 0xffffffdc
   33144:	str	r0, [r1, #24]
   33148:	ldr	r0, [fp, #-36]	; 0xffffffdc
   3314c:	ldr	r1, [fp, #-1288]	; 0xfffffaf8
   33150:	ldr	r2, [r1, #52]	; 0x34
   33154:	ldr	r3, [r1, #48]	; 0x30
   33158:	ldr	ip, [r1, #44]	; 0x2c
   3315c:	ldr	lr, [r1, #40]	; 0x28
   33160:	ldr	r4, [r1, #36]	; 0x24
   33164:	ldr	r5, [r1, #32]
   33168:	ldr	r6, [r1, #28]
   3316c:	ldr	r7, [r1, #24]
   33170:	ldr	r8, [r1, #20]
   33174:	ldr	r9, [r1, #16]
   33178:	ldr	sl, [r1]
   3317c:	str	r0, [fp, #-2944]	; 0xfffff480
   33180:	ldr	r0, [r1, #4]
   33184:	str	r0, [fp, #-2948]	; 0xfffff47c
   33188:	ldr	r0, [r1, #8]
   3318c:	ldr	r1, [r1, #12]
   33190:	str	r0, [fp, #-2952]	; 0xfffff478
   33194:	mov	r0, sp
   33198:	str	r0, [fp, #-2956]	; 0xfffff474
   3319c:	mov	r0, #1
   331a0:	str	r1, [fp, #-2960]	; 0xfffff470
   331a4:	ldr	r1, [fp, #-2956]	; 0xfffff474
   331a8:	str	r0, [r1, #48]	; 0x30
   331ac:	ldr	r0, [fp, #-2952]	; 0xfffff478
   331b0:	str	r0, [r1]
   331b4:	ldr	r0, [fp, #-2960]	; 0xfffff470
   331b8:	str	r0, [r1, #4]
   331bc:	str	r9, [r1, #8]
   331c0:	str	r8, [r1, #12]
   331c4:	str	r7, [r1, #16]
   331c8:	str	r6, [r1, #20]
   331cc:	str	r5, [r1, #24]
   331d0:	str	r4, [r1, #28]
   331d4:	str	lr, [r1, #32]
   331d8:	str	ip, [r1, #36]	; 0x24
   331dc:	str	r3, [r1, #40]	; 0x28
   331e0:	str	r2, [r1, #44]	; 0x2c
   331e4:	ldr	r0, [fp, #-2944]	; 0xfffff480
   331e8:	mov	r2, sl
   331ec:	ldr	r3, [fp, #-2948]	; 0xfffff47c
   331f0:	bl	3e38c <__assert_fail@plt+0x2b7d4>
   331f4:	tst	r0, #1
   331f8:	bne	33200 <__assert_fail@plt+0x20648>
   331fc:	b	3c300 <__assert_fail@plt+0x29748>
   33200:	movw	r0, #53557	; 0xd135
   33204:	movt	r0, #7
   33208:	bl	12864 <gettext@plt>
   3320c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   33210:	bl	3dc04 <__assert_fail@plt+0x2b04c>
   33214:	b	3bfc0 <__assert_fail@plt+0x29408>
   33218:	ldr	r0, [fp, #-36]	; 0xffffffdc
   3321c:	movw	r1, #40336	; 0x9d90
   33220:	movt	r1, #65535	; 0xffff
   33224:	str	r1, [r0, #24]
   33228:	ldr	r0, [fp, #-36]	; 0xffffffdc
   3322c:	ldr	r1, [fp, #-1288]	; 0xfffffaf8
   33230:	ldr	r2, [r1, #52]	; 0x34
   33234:	ldr	r3, [r1, #48]	; 0x30
   33238:	ldr	ip, [r1, #44]	; 0x2c
   3323c:	ldr	lr, [r1, #40]	; 0x28
   33240:	ldr	r4, [r1, #36]	; 0x24
   33244:	ldr	r5, [r1, #32]
   33248:	ldr	r6, [r1, #28]
   3324c:	ldr	r7, [r1, #24]
   33250:	ldr	r8, [r1, #20]
   33254:	ldr	r9, [r1, #16]
   33258:	ldr	sl, [r1]
   3325c:	str	r0, [fp, #-2964]	; 0xfffff46c
   33260:	ldr	r0, [r1, #4]
   33264:	str	r0, [fp, #-2968]	; 0xfffff468
   33268:	ldr	r0, [r1, #8]
   3326c:	ldr	r1, [r1, #12]
   33270:	str	r0, [fp, #-2972]	; 0xfffff464
   33274:	mov	r0, sp
   33278:	str	r0, [fp, #-2976]	; 0xfffff460
   3327c:	mov	r0, #1
   33280:	str	r1, [fp, #-2980]	; 0xfffff45c
   33284:	ldr	r1, [fp, #-2976]	; 0xfffff460
   33288:	str	r0, [r1, #48]	; 0x30
   3328c:	ldr	r0, [fp, #-2972]	; 0xfffff464
   33290:	str	r0, [r1]
   33294:	ldr	r0, [fp, #-2980]	; 0xfffff45c
   33298:	str	r0, [r1, #4]
   3329c:	str	r9, [r1, #8]
   332a0:	str	r8, [r1, #12]
   332a4:	str	r7, [r1, #16]
   332a8:	str	r6, [r1, #20]
   332ac:	str	r5, [r1, #24]
   332b0:	str	r4, [r1, #28]
   332b4:	str	lr, [r1, #32]
   332b8:	str	ip, [r1, #36]	; 0x24
   332bc:	str	r3, [r1, #40]	; 0x28
   332c0:	str	r2, [r1, #44]	; 0x2c
   332c4:	ldr	r0, [fp, #-2964]	; 0xfffff46c
   332c8:	mov	r2, sl
   332cc:	ldr	r3, [fp, #-2968]	; 0xfffff468
   332d0:	bl	3e38c <__assert_fail@plt+0x2b7d4>
   332d4:	tst	r0, #1
   332d8:	bne	332e0 <__assert_fail@plt+0x20728>
   332dc:	b	3c300 <__assert_fail@plt+0x29748>
   332e0:	movw	r0, #53557	; 0xd135
   332e4:	movt	r0, #7
   332e8:	bl	12864 <gettext@plt>
   332ec:	ldr	r1, [fp, #-36]	; 0xffffffdc
   332f0:	bl	3dc04 <__assert_fail@plt+0x2b04c>
   332f4:	b	3bfc0 <__assert_fail@plt+0x29408>
   332f8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   332fc:	ldr	r1, [fp, #-1288]	; 0xfffffaf8
   33300:	ldr	r2, [r1, #4]
   33304:	ldr	r3, [r1]
   33308:	ldr	ip, [r1, #-36]	; 0xffffffdc
   3330c:	ldr	lr, [r1, #-40]	; 0xffffffd8
   33310:	ldr	r4, [r1, #-56]	; 0xffffffc8
   33314:	ldr	r5, [r1, #-52]	; 0xffffffcc
   33318:	ldr	r6, [r1, #-48]	; 0xffffffd0
   3331c:	ldr	r1, [r1, #-44]	; 0xffffffd4
   33320:	mov	r7, sp
   33324:	str	r2, [r7, #20]
   33328:	str	r3, [r7, #16]
   3332c:	str	r6, [r7]
   33330:	str	r1, [r7, #4]
   33334:	str	lr, [r7, #8]
   33338:	str	ip, [r7, #12]
   3333c:	mov	r2, r4
   33340:	mov	r3, r5
   33344:	bl	3df00 <__assert_fail@plt+0x2b348>
   33348:	tst	r0, #1
   3334c:	bne	33354 <__assert_fail@plt+0x2079c>
   33350:	b	3c300 <__assert_fail@plt+0x29748>
   33354:	ldr	r0, [fp, #-36]	; 0xffffffdc
   33358:	ldr	r1, [r0, #24]
   3335c:	asr	r2, r1, #31
   33360:	ldr	r3, [fp, #-1288]	; 0xfffffaf8
   33364:	ldr	ip, [r3, #-112]	; 0xffffff90
   33368:	ldr	r3, [r3, #-108]	; 0xffffff94
   3336c:	mov	lr, #0
   33370:	cmn	r2, #1
   33374:	mov	r4, lr
   33378:	movwgt	r4, #1
   3337c:	adds	r1, r1, ip
   33380:	adc	r2, r2, r3
   33384:	cmn	r2, #1
   33388:	mov	ip, lr
   3338c:	movwgt	ip, #1
   33390:	sub	r5, r4, ip
   33394:	cmp	r4, ip
   33398:	movwne	r5, #1
   3339c:	cmn	r3, #1
   333a0:	movwgt	lr, #1
   333a4:	sub	r3, r4, lr
   333a8:	clz	r3, r3
   333ac:	lsr	r3, r3, #5
   333b0:	and	r3, r3, r5
   333b4:	eor	r2, r2, r1, asr #31
   333b8:	cmp	r2, #0
   333bc:	movwne	r2, #1
   333c0:	orr	r2, r3, r2
   333c4:	str	r1, [r0, #24]
   333c8:	tst	r2, #1
   333cc:	beq	333d4 <__assert_fail@plt+0x2081c>
   333d0:	b	3c300 <__assert_fail@plt+0x29748>
   333d4:	b	3bfc0 <__assert_fail@plt+0x29408>
   333d8:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   333dc:	ldr	r0, [r0]
   333e0:	add	r0, r0, #3600	; 0xe10
   333e4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   333e8:	str	r0, [r1, #24]
   333ec:	b	3bfc0 <__assert_fail@plt+0x29408>
   333f0:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   333f4:	ldr	r0, [r0, #-56]	; 0xffffffc8
   333f8:	add	r0, r0, #3600	; 0xe10
   333fc:	ldr	r1, [fp, #-36]	; 0xffffffdc
   33400:	str	r0, [r1, #24]
   33404:	b	3bfc0 <__assert_fail@plt+0x29408>
   33408:	ldr	r0, [fp, #-36]	; 0xffffffdc
   3340c:	mov	r1, #0
   33410:	str	r1, [r0, #12]
   33414:	str	r1, [r0, #8]
   33418:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3341c:	ldr	r0, [r0]
   33420:	ldr	r1, [fp, #-36]	; 0xffffffdc
   33424:	str	r0, [r1, #16]
   33428:	b	3bfc0 <__assert_fail@plt+0x29408>
   3342c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   33430:	mov	r1, #0
   33434:	str	r1, [r0, #12]
   33438:	str	r1, [r0, #8]
   3343c:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   33440:	ldr	r0, [r0, #-56]	; 0xffffffc8
   33444:	ldr	r1, [fp, #-36]	; 0xffffffdc
   33448:	str	r0, [r1, #16]
   3344c:	b	3bfc0 <__assert_fail@plt+0x29408>
   33450:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   33454:	ldr	r1, [r0, #-56]	; 0xffffffc8
   33458:	ldr	r0, [r0, #-52]	; 0xffffffcc
   3345c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   33460:	str	r0, [r2, #12]
   33464:	str	r1, [r2, #8]
   33468:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3346c:	ldr	r0, [r0]
   33470:	ldr	r1, [fp, #-36]	; 0xffffffdc
   33474:	str	r0, [r1, #16]
   33478:	ldr	r0, [fp, #-36]	; 0xffffffdc
   3347c:	movw	r1, #1
   33480:	strb	r1, [r0, #187]	; 0xbb
   33484:	b	3bfc0 <__assert_fail@plt+0x29408>
   33488:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3348c:	ldr	r1, [r0, #-48]	; 0xffffffd0
   33490:	ldr	r0, [r0, #-44]	; 0xffffffd4
   33494:	ldr	r2, [fp, #-36]	; 0xffffffdc
   33498:	str	r0, [r2, #12]
   3349c:	str	r1, [r2, #8]
   334a0:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   334a4:	ldr	r0, [r0]
   334a8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   334ac:	str	r0, [r1, #16]
   334b0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   334b4:	movw	r1, #1
   334b8:	strb	r1, [r0, #187]	; 0xbb
   334bc:	b	3bfc0 <__assert_fail@plt+0x29408>
   334c0:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   334c4:	ldr	r1, [r0, #-104]	; 0xffffff98
   334c8:	ldr	r0, [r0, #-100]	; 0xffffff9c
   334cc:	ldr	r2, [fp, #-36]	; 0xffffffdc
   334d0:	str	r0, [r2, #60]	; 0x3c
   334d4:	str	r1, [r2, #56]	; 0x38
   334d8:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   334dc:	ldr	r1, [r0, #8]
   334e0:	ldr	r0, [r0, #12]
   334e4:	ldr	r2, [fp, #-36]	; 0xffffffdc
   334e8:	str	r0, [r2, #68]	; 0x44
   334ec:	str	r1, [r2, #64]	; 0x40
   334f0:	b	3bfc0 <__assert_fail@plt+0x29408>
   334f4:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   334f8:	mvn	r1, #207	; 0xcf
   334fc:	add	r0, r0, r1
   33500:	ldr	r0, [r0]
   33504:	movw	r1, #4
   33508:	cmp	r1, r0
   3350c:	bgt	335b8 <__assert_fail@plt+0x20a00>
   33510:	ldr	r0, [fp, #-36]	; 0xffffffdc
   33514:	bl	3e9ac <__assert_fail@plt+0x2bdf4>
   33518:	tst	r0, #1
   3351c:	beq	33564 <__assert_fail@plt+0x209ac>
   33520:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   33524:	ldr	r0, [r0, #-208]	; 0xffffff30
   33528:	asr	r1, r0, #31
   3352c:	str	r0, [fp, #-1392]	; 0xfffffa90
   33530:	str	r1, [fp, #-1388]	; 0xfffffa94
   33534:	movw	r0, #53573	; 0xd145
   33538:	movt	r0, #7
   3353c:	bl	12864 <gettext@plt>
   33540:	ldr	r1, [fp, #-1288]	; 0xfffffaf8
   33544:	ldr	r2, [r1, #-216]	; 0xffffff28
   33548:	ldr	r3, [r1, #-212]	; 0xffffff2c
   3354c:	ldr	r1, [fp, #-1392]	; 0xfffffa90
   33550:	ldr	lr, [fp, #-1388]	; 0xfffffa94
   33554:	mov	ip, sp
   33558:	str	lr, [ip, #4]
   3355c:	str	r1, [ip]
   33560:	bl	3e9c4 <__assert_fail@plt+0x2be0c>
   33564:	ldr	r0, [fp, #-36]	; 0xffffffdc
   33568:	add	r1, r0, #32
   3356c:	ldr	r2, [fp, #-1288]	; 0xfffffaf8
   33570:	sub	r3, r2, #224	; 0xe0
   33574:	vldr	d16, [r2, #-208]	; 0xffffff30
   33578:	vstr	d16, [r0, #48]	; 0x30
   3357c:	vld1.64	{d18-d19}, [r3]
   33580:	vst1.64	{d18-d19}, [r1]
   33584:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   33588:	ldr	r1, [r0, #-104]	; 0xffffff98
   3358c:	ldr	r0, [r0, #-100]	; 0xffffff9c
   33590:	ldr	r2, [fp, #-36]	; 0xffffffdc
   33594:	str	r0, [r2, #60]	; 0x3c
   33598:	str	r1, [r2, #56]	; 0x38
   3359c:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   335a0:	ldr	r1, [r0, #8]
   335a4:	ldr	r0, [r0, #12]
   335a8:	ldr	r2, [fp, #-36]	; 0xffffffdc
   335ac:	str	r0, [r2, #68]	; 0x44
   335b0:	str	r1, [r2, #64]	; 0x40
   335b4:	b	33628 <__assert_fail@plt+0x20a70>
   335b8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   335bc:	bl	3e9ac <__assert_fail@plt+0x2bdf4>
   335c0:	tst	r0, #1
   335c4:	beq	335e4 <__assert_fail@plt+0x20a2c>
   335c8:	movw	r0, #53631	; 0xd17f
   335cc:	movt	r0, #7
   335d0:	bl	12864 <gettext@plt>
   335d4:	ldr	lr, [fp, #-1288]	; 0xfffffaf8
   335d8:	ldr	r2, [lr, #-216]	; 0xffffff28
   335dc:	ldr	r3, [lr, #-212]	; 0xffffff2c
   335e0:	bl	3e9c4 <__assert_fail@plt+0x2be0c>
   335e4:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   335e8:	ldr	r1, [r0, #-216]	; 0xffffff28
   335ec:	ldr	r0, [r0, #-212]	; 0xffffff2c
   335f0:	ldr	r2, [fp, #-36]	; 0xffffffdc
   335f4:	str	r0, [r2, #60]	; 0x3c
   335f8:	str	r1, [r2, #56]	; 0x38
   335fc:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   33600:	ldr	r1, [r0, #-104]	; 0xffffff98
   33604:	ldr	r0, [r0, #-100]	; 0xffffff9c
   33608:	ldr	r2, [fp, #-36]	; 0xffffffdc
   3360c:	str	r0, [r2, #68]	; 0x44
   33610:	str	r1, [r2, #64]	; 0x40
   33614:	ldr	r0, [fp, #-36]	; 0xffffffdc
   33618:	add	r0, r0, #32
   3361c:	ldr	r1, [fp, #-1288]	; 0xfffffaf8
   33620:	movw	r2, #24
   33624:	bl	125c4 <memcpy@plt>
   33628:	b	3bfc0 <__assert_fail@plt+0x29408>
   3362c:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   33630:	ldr	r1, [r0, #-104]	; 0xffffff98
   33634:	ldr	r0, [r0, #-100]	; 0xffffff9c
   33638:	ldr	r2, [fp, #-36]	; 0xffffffdc
   3363c:	str	r0, [r2, #68]	; 0x44
   33640:	str	r1, [r2, #64]	; 0x40
   33644:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   33648:	ldr	r1, [r0, #-56]	; 0xffffffc8
   3364c:	ldr	r0, [r0, #-52]	; 0xffffffcc
   33650:	ldr	r2, [fp, #-36]	; 0xffffffdc
   33654:	str	r0, [r2, #60]	; 0x3c
   33658:	str	r1, [r2, #56]	; 0x38
   3365c:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   33660:	ldr	r1, [r0, #8]
   33664:	ldr	r0, [r0, #12]
   33668:	ldr	r2, [fp, #-36]	; 0xffffffdc
   3366c:	rsbs	r1, r1, #0
   33670:	rsc	r3, r0, #0
   33674:	and	r0, r0, r3
   33678:	mov	ip, #0
   3367c:	cmp	r0, #0
   33680:	movwlt	ip, #1
   33684:	str	r1, [r2, #40]	; 0x28
   33688:	str	r3, [r2, #44]	; 0x2c
   3368c:	tst	ip, #1
   33690:	beq	33698 <__assert_fail@plt+0x20ae0>
   33694:	b	3c300 <__assert_fail@plt+0x29748>
   33698:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3369c:	ldr	r0, [r0, #16]
   336a0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   336a4:	str	r0, [r1, #48]	; 0x30
   336a8:	b	3bfc0 <__assert_fail@plt+0x29408>
   336ac:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   336b0:	ldr	r1, [r0, #-112]	; 0xffffff90
   336b4:	ldr	r0, [r0, #-108]	; 0xffffff94
   336b8:	ldr	r2, [fp, #-36]	; 0xffffffdc
   336bc:	str	r0, [r2, #60]	; 0x3c
   336c0:	str	r1, [r2, #56]	; 0x38
   336c4:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   336c8:	ldr	r1, [r0, #-48]	; 0xffffffd0
   336cc:	ldr	r0, [r0, #-44]	; 0xffffffd4
   336d0:	ldr	r2, [fp, #-36]	; 0xffffffdc
   336d4:	rsbs	r1, r1, #0
   336d8:	rsc	r3, r0, #0
   336dc:	and	r0, r0, r3
   336e0:	mov	ip, #0
   336e4:	cmp	r0, #0
   336e8:	movwlt	ip, #1
   336ec:	str	r1, [r2, #64]	; 0x40
   336f0:	str	r3, [r2, #68]	; 0x44
   336f4:	tst	ip, #1
   336f8:	beq	33700 <__assert_fail@plt+0x20b48>
   336fc:	b	3c300 <__assert_fail@plt+0x29748>
   33700:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   33704:	ldr	r1, [r0, #8]
   33708:	ldr	r0, [r0, #12]
   3370c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   33710:	rsbs	r1, r1, #0
   33714:	rsc	r3, r0, #0
   33718:	and	r0, r0, r3
   3371c:	mov	ip, #0
   33720:	cmp	r0, #0
   33724:	movwlt	ip, #1
   33728:	str	r1, [r2, #40]	; 0x28
   3372c:	str	r3, [r2, #44]	; 0x2c
   33730:	tst	ip, #1
   33734:	beq	3373c <__assert_fail@plt+0x20b84>
   33738:	b	3c300 <__assert_fail@plt+0x29748>
   3373c:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   33740:	ldr	r0, [r0, #16]
   33744:	ldr	r1, [fp, #-36]	; 0xffffffdc
   33748:	str	r0, [r1, #48]	; 0x30
   3374c:	b	3bfc0 <__assert_fail@plt+0x29408>
   33750:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   33754:	ldr	r1, [r0, #-56]	; 0xffffffc8
   33758:	ldr	r0, [r0, #-52]	; 0xffffffcc
   3375c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   33760:	str	r0, [r2, #60]	; 0x3c
   33764:	str	r1, [r2, #56]	; 0x38
   33768:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3376c:	ldr	r1, [r0, #8]
   33770:	ldr	r0, [r0, #12]
   33774:	ldr	r2, [fp, #-36]	; 0xffffffdc
   33778:	str	r0, [r2, #68]	; 0x44
   3377c:	str	r1, [r2, #64]	; 0x40
   33780:	b	3bfc0 <__assert_fail@plt+0x29408>
   33784:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   33788:	ldr	r1, [r0, #-168]	; 0xffffff58
   3378c:	ldr	r0, [r0, #-164]	; 0xffffff5c
   33790:	ldr	r2, [fp, #-36]	; 0xffffffdc
   33794:	str	r0, [r2, #60]	; 0x3c
   33798:	str	r1, [r2, #56]	; 0x38
   3379c:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   337a0:	ldr	r1, [r0, #-104]	; 0xffffff98
   337a4:	ldr	r0, [r0, #-100]	; 0xffffff9c
   337a8:	ldr	r2, [fp, #-36]	; 0xffffffdc
   337ac:	str	r0, [r2, #68]	; 0x44
   337b0:	str	r1, [r2, #64]	; 0x40
   337b4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   337b8:	add	r0, r0, #32
   337bc:	ldr	r1, [fp, #-1288]	; 0xfffffaf8
   337c0:	movw	r2, #24
   337c4:	bl	125c4 <memcpy@plt>
   337c8:	b	3bfc0 <__assert_fail@plt+0x29408>
   337cc:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   337d0:	ldr	r1, [r0, #-48]	; 0xffffffd0
   337d4:	ldr	r0, [r0, #-44]	; 0xffffffd4
   337d8:	ldr	r2, [fp, #-36]	; 0xffffffdc
   337dc:	str	r0, [r2, #68]	; 0x44
   337e0:	str	r1, [r2, #64]	; 0x40
   337e4:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   337e8:	ldr	r1, [r0]
   337ec:	ldr	r0, [r0, #4]
   337f0:	ldr	r2, [fp, #-36]	; 0xffffffdc
   337f4:	str	r0, [r2, #60]	; 0x3c
   337f8:	str	r1, [r2, #56]	; 0x38
   337fc:	b	3bfc0 <__assert_fail@plt+0x29408>
   33800:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   33804:	ldr	r1, [r0, #-104]	; 0xffffff98
   33808:	ldr	r0, [r0, #-100]	; 0xffffff9c
   3380c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   33810:	str	r0, [r2, #68]	; 0x44
   33814:	str	r1, [r2, #64]	; 0x40
   33818:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3381c:	ldr	r1, [r0, #-56]	; 0xffffffc8
   33820:	ldr	r0, [r0, #-52]	; 0xffffffcc
   33824:	ldr	r2, [fp, #-36]	; 0xffffffdc
   33828:	str	r0, [r2, #60]	; 0x3c
   3382c:	str	r1, [r2, #56]	; 0x38
   33830:	ldr	r0, [fp, #-36]	; 0xffffffdc
   33834:	add	r0, r0, #32
   33838:	ldr	r1, [fp, #-1288]	; 0xfffffaf8
   3383c:	movw	r2, #24
   33840:	bl	125c4 <memcpy@plt>
   33844:	b	3bfc0 <__assert_fail@plt+0x29408>
   33848:	ldr	r0, [fp, #-36]	; 0xffffffdc
   3384c:	add	r1, r0, #32
   33850:	ldr	r2, [fp, #-1288]	; 0xfffffaf8
   33854:	sub	r3, r2, #112	; 0x70
   33858:	vldr	d16, [r2, #-96]	; 0xffffffa0
   3385c:	vstr	d16, [r0, #48]	; 0x30
   33860:	vld1.64	{d18-d19}, [r3]
   33864:	vst1.64	{d18-d19}, [r1]
   33868:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3386c:	ldr	r1, [r0, #-48]	; 0xffffffd0
   33870:	ldr	r0, [r0, #-44]	; 0xffffffd4
   33874:	ldr	r2, [fp, #-36]	; 0xffffffdc
   33878:	rsbs	r1, r1, #0
   3387c:	rsc	r3, r0, #0
   33880:	and	r0, r0, r3
   33884:	mov	ip, #0
   33888:	cmp	r0, #0
   3388c:	movwlt	ip, #1
   33890:	str	r1, [r2, #56]	; 0x38
   33894:	str	r3, [r2, #60]	; 0x3c
   33898:	tst	ip, #1
   3389c:	beq	338a4 <__assert_fail@plt+0x20cec>
   338a0:	b	3c300 <__assert_fail@plt+0x29748>
   338a4:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   338a8:	ldr	r1, [r0, #8]
   338ac:	ldr	r0, [r0, #12]
   338b0:	ldr	r2, [fp, #-36]	; 0xffffffdc
   338b4:	rsbs	r1, r1, #0
   338b8:	rsc	r3, r0, #0
   338bc:	and	r0, r0, r3
   338c0:	mov	ip, #0
   338c4:	cmp	r0, #0
   338c8:	movwlt	ip, #1
   338cc:	str	r1, [r2, #64]	; 0x40
   338d0:	str	r3, [r2, #68]	; 0x44
   338d4:	tst	ip, #1
   338d8:	beq	338e0 <__assert_fail@plt+0x20d28>
   338dc:	b	3c300 <__assert_fail@plt+0x29748>
   338e0:	b	3bfc0 <__assert_fail@plt+0x29408>
   338e4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   338e8:	ldr	r1, [fp, #-1288]	; 0xfffffaf8
   338ec:	ldr	r2, [r1]
   338f0:	ldr	r3, [r1, #-4]
   338f4:	ldr	ip, [r1, #-8]
   338f8:	ldr	lr, [r1, #-12]
   338fc:	ldr	r4, [r1, #-16]
   33900:	ldr	r5, [r1, #-20]	; 0xffffffec
   33904:	ldr	r6, [r1, #-24]	; 0xffffffe8
   33908:	ldr	r7, [r1, #-28]	; 0xffffffe4
   3390c:	ldr	r8, [r1, #-32]	; 0xffffffe0
   33910:	ldr	r9, [r1, #-36]	; 0xffffffdc
   33914:	ldr	sl, [r1, #-40]	; 0xffffffd8
   33918:	str	r0, [fp, #-2984]	; 0xfffff458
   3391c:	ldr	r0, [r1, #-56]	; 0xffffffc8
   33920:	str	r0, [fp, #-2988]	; 0xfffff454
   33924:	ldr	r0, [r1, #-52]	; 0xffffffcc
   33928:	str	r0, [fp, #-2992]	; 0xfffff450
   3392c:	ldr	r0, [r1, #-48]	; 0xffffffd0
   33930:	ldr	r1, [r1, #-44]	; 0xffffffd4
   33934:	str	r0, [fp, #-2996]	; 0xfffff44c
   33938:	mov	r0, sp
   3393c:	str	r2, [r0, #48]	; 0x30
   33940:	ldr	r2, [fp, #-2996]	; 0xfffff44c
   33944:	str	r2, [r0]
   33948:	str	r1, [r0, #4]
   3394c:	str	sl, [r0, #8]
   33950:	str	r9, [r0, #12]
   33954:	str	r8, [r0, #16]
   33958:	str	r7, [r0, #20]
   3395c:	str	r6, [r0, #24]
   33960:	str	r5, [r0, #28]
   33964:	str	r4, [r0, #32]
   33968:	str	lr, [r0, #36]	; 0x24
   3396c:	str	ip, [r0, #40]	; 0x28
   33970:	str	r3, [r0, #44]	; 0x2c
   33974:	ldr	r0, [fp, #-2984]	; 0xfffff458
   33978:	ldr	r2, [fp, #-2988]	; 0xfffff454
   3397c:	ldr	r3, [fp, #-2992]	; 0xfffff450
   33980:	bl	3e38c <__assert_fail@plt+0x2b7d4>
   33984:	tst	r0, #1
   33988:	bne	33990 <__assert_fail@plt+0x20dd8>
   3398c:	b	3c300 <__assert_fail@plt+0x29748>
   33990:	b	3bfc0 <__assert_fail@plt+0x29408>
   33994:	ldr	r0, [fp, #-36]	; 0xffffffdc
   33998:	ldr	r1, [fp, #-1288]	; 0xfffffaf8
   3399c:	ldr	r2, [r1, #52]	; 0x34
   339a0:	ldr	r3, [r1, #48]	; 0x30
   339a4:	ldr	ip, [r1, #44]	; 0x2c
   339a8:	ldr	lr, [r1, #40]	; 0x28
   339ac:	ldr	r4, [r1, #36]	; 0x24
   339b0:	ldr	r5, [r1, #32]
   339b4:	ldr	r6, [r1, #28]
   339b8:	ldr	r7, [r1, #24]
   339bc:	ldr	r8, [r1, #20]
   339c0:	ldr	r9, [r1, #16]
   339c4:	ldr	sl, [r1]
   339c8:	str	r0, [fp, #-3000]	; 0xfffff448
   339cc:	ldr	r0, [r1, #4]
   339d0:	str	r0, [fp, #-3004]	; 0xfffff444
   339d4:	ldr	r0, [r1, #8]
   339d8:	ldr	r1, [r1, #12]
   339dc:	str	r0, [fp, #-3008]	; 0xfffff440
   339e0:	mov	r0, sp
   339e4:	str	r0, [fp, #-3012]	; 0xfffff43c
   339e8:	mov	r0, #1
   339ec:	str	r1, [fp, #-3016]	; 0xfffff438
   339f0:	ldr	r1, [fp, #-3012]	; 0xfffff43c
   339f4:	str	r0, [r1, #48]	; 0x30
   339f8:	ldr	r0, [fp, #-3008]	; 0xfffff440
   339fc:	str	r0, [r1]
   33a00:	ldr	r0, [fp, #-3016]	; 0xfffff438
   33a04:	str	r0, [r1, #4]
   33a08:	str	r9, [r1, #8]
   33a0c:	str	r8, [r1, #12]
   33a10:	str	r7, [r1, #16]
   33a14:	str	r6, [r1, #20]
   33a18:	str	r5, [r1, #24]
   33a1c:	str	r4, [r1, #28]
   33a20:	str	lr, [r1, #32]
   33a24:	str	ip, [r1, #36]	; 0x24
   33a28:	str	r3, [r1, #40]	; 0x28
   33a2c:	str	r2, [r1, #44]	; 0x2c
   33a30:	ldr	r0, [fp, #-3000]	; 0xfffff448
   33a34:	mov	r2, sl
   33a38:	ldr	r3, [fp, #-3004]	; 0xfffff444
   33a3c:	bl	3e38c <__assert_fail@plt+0x2b7d4>
   33a40:	tst	r0, #1
   33a44:	bne	33a4c <__assert_fail@plt+0x20e94>
   33a48:	b	3c300 <__assert_fail@plt+0x29748>
   33a4c:	b	3bfc0 <__assert_fail@plt+0x29408>
   33a50:	ldr	r0, [fp, #-36]	; 0xffffffdc
   33a54:	ldr	r1, [fp, #-1288]	; 0xfffffaf8
   33a58:	ldr	r2, [r1, #52]	; 0x34
   33a5c:	ldr	r3, [r1, #48]	; 0x30
   33a60:	ldr	ip, [r1, #44]	; 0x2c
   33a64:	ldr	lr, [r1, #40]	; 0x28
   33a68:	ldr	r4, [r1, #36]	; 0x24
   33a6c:	ldr	r5, [r1, #32]
   33a70:	ldr	r6, [r1, #28]
   33a74:	ldr	r7, [r1, #24]
   33a78:	ldr	r8, [r1, #20]
   33a7c:	ldr	r9, [r1, #16]
   33a80:	ldr	sl, [r1]
   33a84:	str	r0, [fp, #-3020]	; 0xfffff434
   33a88:	ldr	r0, [r1, #4]
   33a8c:	str	r0, [fp, #-3024]	; 0xfffff430
   33a90:	ldr	r0, [r1, #8]
   33a94:	ldr	r1, [r1, #12]
   33a98:	str	r0, [fp, #-3028]	; 0xfffff42c
   33a9c:	mov	r0, sp
   33aa0:	str	r0, [fp, #-3032]	; 0xfffff428
   33aa4:	mov	r0, #1
   33aa8:	str	r1, [fp, #-3036]	; 0xfffff424
   33aac:	ldr	r1, [fp, #-3032]	; 0xfffff428
   33ab0:	str	r0, [r1, #48]	; 0x30
   33ab4:	ldr	r0, [fp, #-3028]	; 0xfffff42c
   33ab8:	str	r0, [r1]
   33abc:	ldr	r0, [fp, #-3036]	; 0xfffff424
   33ac0:	str	r0, [r1, #4]
   33ac4:	str	r9, [r1, #8]
   33ac8:	str	r8, [r1, #12]
   33acc:	str	r7, [r1, #16]
   33ad0:	str	r6, [r1, #20]
   33ad4:	str	r5, [r1, #24]
   33ad8:	str	r4, [r1, #28]
   33adc:	str	lr, [r1, #32]
   33ae0:	str	ip, [r1, #36]	; 0x24
   33ae4:	str	r3, [r1, #40]	; 0x28
   33ae8:	str	r2, [r1, #44]	; 0x2c
   33aec:	ldr	r0, [fp, #-3020]	; 0xfffff434
   33af0:	mov	r2, sl
   33af4:	ldr	r3, [fp, #-3024]	; 0xfffff430
   33af8:	bl	3e38c <__assert_fail@plt+0x2b7d4>
   33afc:	tst	r0, #1
   33b00:	bne	33b08 <__assert_fail@plt+0x20f50>
   33b04:	b	3c300 <__assert_fail@plt+0x29748>
   33b08:	b	3bfc0 <__assert_fail@plt+0x29408>
   33b0c:	mov	r0, #0
   33b10:	str	r0, [fp, #-1444]	; 0xfffffa5c
   33b14:	str	r0, [fp, #-1448]	; 0xfffffa58
   33b18:	str	r0, [fp, #-1436]	; 0xfffffa64
   33b1c:	str	r0, [fp, #-1440]	; 0xfffffa60
   33b20:	sub	lr, fp, #1024	; 0x400
   33b24:	sub	r1, lr, #424	; 0x1a8
   33b28:	add	r2, r1, #16
   33b2c:	str	r0, [fp, #-1428]	; 0xfffffa6c
   33b30:	str	r0, [fp, #-1432]	; 0xfffffa68
   33b34:	str	r0, [fp, #-1420]	; 0xfffffa74
   33b38:	str	r0, [fp, #-1424]	; 0xfffffa70
   33b3c:	add	r3, r1, #32
   33b40:	str	r0, [fp, #-1412]	; 0xfffffa7c
   33b44:	str	r0, [fp, #-1416]	; 0xfffffa78
   33b48:	str	r0, [fp, #-1404]	; 0xfffffa84
   33b4c:	str	r0, [fp, #-1408]	; 0xfffffa80
   33b50:	str	r0, [fp, #-1400]	; 0xfffffa88
   33b54:	sub	r0, fp, #1360	; 0x550
   33b58:	add	ip, r0, #32
   33b5c:	vld1.64	{d16-d17}, [r3]
   33b60:	vst1.64	{d16-d17}, [ip]
   33b64:	add	r3, r0, #16
   33b68:	vld1.64	{d16-d17}, [r2]
   33b6c:	vst1.64	{d16-d17}, [r3]
   33b70:	vld1.64	{d16-d17}, [r1]
   33b74:	mov	r1, #48	; 0x30
   33b78:	vst1.64	{d16-d17}, [r0], r1
   33b7c:	ldr	r1, [fp, #-2916]	; 0xfffff49c
   33b80:	vldr	d18, [r1, #616]	; 0x268
   33b84:	vstr	d18, [r0]
   33b88:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   33b8c:	ldr	r2, [r0, #-56]	; 0xffffffc8
   33b90:	ldr	r0, [r0, #-52]	; 0xffffffcc
   33b94:	str	r0, [fp, #-1356]	; 0xfffffab4
   33b98:	str	r2, [fp, #-1360]	; 0xfffffab0
   33b9c:	b	3bfc0 <__assert_fail@plt+0x29408>
   33ba0:	mov	r0, #0
   33ba4:	str	r0, [fp, #-1500]	; 0xfffffa24
   33ba8:	str	r0, [fp, #-1504]	; 0xfffffa20
   33bac:	str	r0, [fp, #-1492]	; 0xfffffa2c
   33bb0:	str	r0, [fp, #-1496]	; 0xfffffa28
   33bb4:	sub	r1, fp, #1504	; 0x5e0
   33bb8:	add	r2, r1, #16
   33bbc:	str	r0, [fp, #-1484]	; 0xfffffa34
   33bc0:	str	r0, [fp, #-1488]	; 0xfffffa30
   33bc4:	str	r0, [fp, #-1476]	; 0xfffffa3c
   33bc8:	str	r0, [fp, #-1480]	; 0xfffffa38
   33bcc:	add	r3, r1, #32
   33bd0:	str	r0, [fp, #-1468]	; 0xfffffa44
   33bd4:	str	r0, [fp, #-1472]	; 0xfffffa40
   33bd8:	str	r0, [fp, #-1460]	; 0xfffffa4c
   33bdc:	str	r0, [fp, #-1464]	; 0xfffffa48
   33be0:	str	r0, [fp, #-1456]	; 0xfffffa50
   33be4:	sub	r0, fp, #1360	; 0x550
   33be8:	add	ip, r0, #32
   33bec:	vld1.64	{d16-d17}, [r3]
   33bf0:	vst1.64	{d16-d17}, [ip]
   33bf4:	add	r3, r0, #16
   33bf8:	vld1.64	{d16-d17}, [r2]
   33bfc:	vst1.64	{d16-d17}, [r3]
   33c00:	vld1.64	{d16-d17}, [r1]
   33c04:	mov	r1, #48	; 0x30
   33c08:	vst1.64	{d16-d17}, [r0], r1
   33c0c:	ldr	r1, [fp, #-2916]	; 0xfffff49c
   33c10:	vldr	d18, [r1, #560]	; 0x230
   33c14:	vstr	d18, [r0]
   33c18:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   33c1c:	ldr	r2, [r0, #-48]	; 0xffffffd0
   33c20:	ldr	r0, [r0, #-44]	; 0xffffffd4
   33c24:	str	r0, [fp, #-1356]	; 0xfffffab4
   33c28:	str	r2, [fp, #-1360]	; 0xfffffab0
   33c2c:	b	3bfc0 <__assert_fail@plt+0x29408>
   33c30:	mov	r0, #0
   33c34:	str	r0, [fp, #-1556]	; 0xfffff9ec
   33c38:	str	r0, [fp, #-1560]	; 0xfffff9e8
   33c3c:	str	r0, [fp, #-1548]	; 0xfffff9f4
   33c40:	str	r0, [fp, #-1552]	; 0xfffff9f0
   33c44:	sub	lr, fp, #1024	; 0x400
   33c48:	sub	r1, lr, #536	; 0x218
   33c4c:	add	r2, r1, #16
   33c50:	str	r0, [fp, #-1540]	; 0xfffff9fc
   33c54:	str	r0, [fp, #-1544]	; 0xfffff9f8
   33c58:	str	r0, [fp, #-1532]	; 0xfffffa04
   33c5c:	str	r0, [fp, #-1536]	; 0xfffffa00
   33c60:	add	r3, r1, #32
   33c64:	str	r0, [fp, #-1524]	; 0xfffffa0c
   33c68:	str	r0, [fp, #-1528]	; 0xfffffa08
   33c6c:	str	r0, [fp, #-1516]	; 0xfffffa14
   33c70:	str	r0, [fp, #-1520]	; 0xfffffa10
   33c74:	str	r0, [fp, #-1512]	; 0xfffffa18
   33c78:	sub	ip, fp, #1360	; 0x550
   33c7c:	add	lr, ip, #32
   33c80:	vld1.64	{d16-d17}, [r3]
   33c84:	vst1.64	{d16-d17}, [lr]
   33c88:	add	r3, ip, #16
   33c8c:	vld1.64	{d16-d17}, [r2]
   33c90:	vst1.64	{d16-d17}, [r3]
   33c94:	vld1.64	{d16-d17}, [r1]
   33c98:	mov	r1, #48	; 0x30
   33c9c:	vst1.64	{d16-d17}, [ip], r1
   33ca0:	ldr	r1, [fp, #-2916]	; 0xfffff49c
   33ca4:	vldr	d18, [r1, #504]	; 0x1f8
   33ca8:	vstr	d18, [ip]
   33cac:	str	r0, [fp, #-1356]	; 0xfffffab4
   33cb0:	mov	r0, #1
   33cb4:	str	r0, [fp, #-1360]	; 0xfffffab0
   33cb8:	b	3bfc0 <__assert_fail@plt+0x29408>
   33cbc:	mov	r0, #0
   33cc0:	str	r0, [fp, #-1612]	; 0xfffff9b4
   33cc4:	str	r0, [fp, #-1616]	; 0xfffff9b0
   33cc8:	str	r0, [fp, #-1604]	; 0xfffff9bc
   33ccc:	str	r0, [fp, #-1608]	; 0xfffff9b8
   33cd0:	sub	r1, fp, #1616	; 0x650
   33cd4:	add	r2, r1, #16
   33cd8:	str	r0, [fp, #-1596]	; 0xfffff9c4
   33cdc:	str	r0, [fp, #-1600]	; 0xfffff9c0
   33ce0:	str	r0, [fp, #-1588]	; 0xfffff9cc
   33ce4:	str	r0, [fp, #-1592]	; 0xfffff9c8
   33ce8:	add	r3, r1, #32
   33cec:	str	r0, [fp, #-1580]	; 0xfffff9d4
   33cf0:	str	r0, [fp, #-1584]	; 0xfffff9d0
   33cf4:	str	r0, [fp, #-1572]	; 0xfffff9dc
   33cf8:	str	r0, [fp, #-1576]	; 0xfffff9d8
   33cfc:	str	r0, [fp, #-1568]	; 0xfffff9e0
   33d00:	sub	r0, fp, #1360	; 0x550
   33d04:	add	ip, r0, #32
   33d08:	vld1.64	{d16-d17}, [r3]
   33d0c:	vst1.64	{d16-d17}, [ip]
   33d10:	add	r3, r0, #16
   33d14:	vld1.64	{d16-d17}, [r2]
   33d18:	vst1.64	{d16-d17}, [r3]
   33d1c:	ldr	r2, [fp, #-2916]	; 0xfffff49c
   33d20:	vldr	d18, [r2, #448]	; 0x1c0
   33d24:	vstr	d18, [r2, #704]	; 0x2c0
   33d28:	vld1.64	{d16-d17}, [r1]
   33d2c:	mov	r1, #8
   33d30:	vst1.64	{d16-d17}, [r0], r1
   33d34:	ldr	r1, [fp, #-1288]	; 0xfffffaf8
   33d38:	ldr	r3, [r1, #-56]	; 0xffffffc8
   33d3c:	ldr	r1, [r1, #-52]	; 0xffffffcc
   33d40:	str	r1, [r0, #4]
   33d44:	str	r3, [r0]
   33d48:	b	3bfc0 <__assert_fail@plt+0x29408>
   33d4c:	mov	r0, #0
   33d50:	str	r0, [fp, #-1668]	; 0xfffff97c
   33d54:	str	r0, [fp, #-1672]	; 0xfffff978
   33d58:	str	r0, [fp, #-1660]	; 0xfffff984
   33d5c:	str	r0, [fp, #-1664]	; 0xfffff980
   33d60:	sub	lr, fp, #1024	; 0x400
   33d64:	sub	r1, lr, #648	; 0x288
   33d68:	add	r2, r1, #16
   33d6c:	str	r0, [fp, #-1652]	; 0xfffff98c
   33d70:	str	r0, [fp, #-1656]	; 0xfffff988
   33d74:	str	r0, [fp, #-1644]	; 0xfffff994
   33d78:	str	r0, [fp, #-1648]	; 0xfffff990
   33d7c:	add	r3, r1, #32
   33d80:	str	r0, [fp, #-1636]	; 0xfffff99c
   33d84:	str	r0, [fp, #-1640]	; 0xfffff998
   33d88:	str	r0, [fp, #-1628]	; 0xfffff9a4
   33d8c:	str	r0, [fp, #-1632]	; 0xfffff9a0
   33d90:	str	r0, [fp, #-1624]	; 0xfffff9a8
   33d94:	sub	r0, fp, #1360	; 0x550
   33d98:	add	ip, r0, #32
   33d9c:	vld1.64	{d16-d17}, [r3]
   33da0:	vst1.64	{d16-d17}, [ip]
   33da4:	add	r3, r0, #16
   33da8:	vld1.64	{d16-d17}, [r2]
   33dac:	vst1.64	{d16-d17}, [r3]
   33db0:	ldr	r2, [fp, #-2916]	; 0xfffff49c
   33db4:	vldr	d18, [r2, #392]	; 0x188
   33db8:	vstr	d18, [r2, #704]	; 0x2c0
   33dbc:	vld1.64	{d16-d17}, [r1]
   33dc0:	mov	r1, #8
   33dc4:	vst1.64	{d16-d17}, [r0], r1
   33dc8:	ldr	r1, [fp, #-1288]	; 0xfffffaf8
   33dcc:	ldr	r3, [r1, #-48]	; 0xffffffd0
   33dd0:	ldr	r1, [r1, #-44]	; 0xffffffd4
   33dd4:	str	r1, [r0, #4]
   33dd8:	str	r3, [r0]
   33ddc:	b	3bfc0 <__assert_fail@plt+0x29408>
   33de0:	mov	r0, #0
   33de4:	str	r0, [fp, #-1724]	; 0xfffff944
   33de8:	str	r0, [fp, #-1728]	; 0xfffff940
   33dec:	str	r0, [fp, #-1716]	; 0xfffff94c
   33df0:	str	r0, [fp, #-1720]	; 0xfffff948
   33df4:	sub	r1, fp, #1728	; 0x6c0
   33df8:	add	r2, r1, #16
   33dfc:	str	r0, [fp, #-1708]	; 0xfffff954
   33e00:	str	r0, [fp, #-1712]	; 0xfffff950
   33e04:	str	r0, [fp, #-1700]	; 0xfffff95c
   33e08:	str	r0, [fp, #-1704]	; 0xfffff958
   33e0c:	add	r3, r1, #32
   33e10:	str	r0, [fp, #-1692]	; 0xfffff964
   33e14:	str	r0, [fp, #-1696]	; 0xfffff960
   33e18:	str	r0, [fp, #-1684]	; 0xfffff96c
   33e1c:	str	r0, [fp, #-1688]	; 0xfffff968
   33e20:	str	r0, [fp, #-1680]	; 0xfffff970
   33e24:	sub	ip, fp, #1360	; 0x550
   33e28:	add	lr, ip, #32
   33e2c:	vld1.64	{d16-d17}, [r3]
   33e30:	vst1.64	{d16-d17}, [lr]
   33e34:	add	r3, ip, #16
   33e38:	vld1.64	{d16-d17}, [r2]
   33e3c:	vst1.64	{d16-d17}, [r3]
   33e40:	ldr	r2, [fp, #-2916]	; 0xfffff49c
   33e44:	vldr	d18, [r2, #336]	; 0x150
   33e48:	vstr	d18, [r2, #704]	; 0x2c0
   33e4c:	vld1.64	{d16-d17}, [r1]
   33e50:	mov	r1, #8
   33e54:	vst1.64	{d16-d17}, [ip], r1
   33e58:	str	r0, [ip, #4]
   33e5c:	mov	r0, #1
   33e60:	str	r0, [ip]
   33e64:	b	3bfc0 <__assert_fail@plt+0x29408>
   33e68:	sub	r0, fp, #1360	; 0x550
   33e6c:	mov	r1, #0
   33e70:	str	r1, [fp, #-1780]	; 0xfffff90c
   33e74:	str	r1, [fp, #-1784]	; 0xfffff908
   33e78:	str	r1, [fp, #-1772]	; 0xfffff914
   33e7c:	str	r1, [fp, #-1776]	; 0xfffff910
   33e80:	str	r1, [fp, #-1764]	; 0xfffff91c
   33e84:	str	r1, [fp, #-1768]	; 0xfffff918
   33e88:	str	r1, [fp, #-1756]	; 0xfffff924
   33e8c:	str	r1, [fp, #-1760]	; 0xfffff920
   33e90:	str	r1, [fp, #-1748]	; 0xfffff92c
   33e94:	str	r1, [fp, #-1752]	; 0xfffff928
   33e98:	str	r1, [fp, #-1740]	; 0xfffff934
   33e9c:	str	r1, [fp, #-1744]	; 0xfffff930
   33ea0:	movw	r1, #0
   33ea4:	str	r1, [fp, #-1736]	; 0xfffff938
   33ea8:	sub	lr, fp, #1024	; 0x400
   33eac:	sub	r1, lr, #760	; 0x2f8
   33eb0:	movw	r2, #56	; 0x38
   33eb4:	bl	125c4 <memcpy@plt>
   33eb8:	b	34684 <__assert_fail@plt+0x21acc>
   33ebc:	b	33ec0 <__assert_fail@plt+0x21308>
   33ec0:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   33ec4:	ldr	r0, [r0, #4]
   33ec8:	cmn	r0, #1
   33ecc:	bgt	34108 <__assert_fail@plt+0x21550>
   33ed0:	b	33ed4 <__assert_fail@plt+0x2131c>
   33ed4:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   33ed8:	ldr	r0, [r0, #-52]	; 0xffffffcc
   33edc:	cmn	r0, #1
   33ee0:	bgt	34004 <__assert_fail@plt+0x2144c>
   33ee4:	b	33ee8 <__assert_fail@plt+0x21330>
   33ee8:	b	33eec <__assert_fail@plt+0x21334>
   33eec:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   33ef0:	ldr	r1, [r0, #-56]	; 0xffffffc8
   33ef4:	ldr	r2, [r0, #-52]	; 0xffffffcc
   33ef8:	ldr	r3, [r0]
   33efc:	ldr	r0, [r0, #4]
   33f00:	mov	ip, #127	; 0x7f
   33f04:	mov	lr, #0
   33f08:	str	r0, [fp, #-3040]	; 0xfffff420
   33f0c:	mov	r0, ip
   33f10:	str	r1, [fp, #-3044]	; 0xfffff41c
   33f14:	mov	r1, lr
   33f18:	str	r2, [fp, #-3048]	; 0xfffff418
   33f1c:	mov	r2, r3
   33f20:	ldr	r3, [fp, #-3040]	; 0xfffff420
   33f24:	bl	77780 <__assert_fail@plt+0x64bc8>
   33f28:	ldr	r2, [fp, #-3044]	; 0xfffff41c
   33f2c:	subs	r0, r2, r0
   33f30:	ldr	r2, [fp, #-3048]	; 0xfffff418
   33f34:	sbcs	r1, r2, r1
   33f38:	str	r0, [fp, #-3052]	; 0xfffff414
   33f3c:	str	r1, [fp, #-3056]	; 0xfffff410
   33f40:	blt	34270 <__assert_fail@plt+0x216b8>
   33f44:	b	34294 <__assert_fail@plt+0x216dc>
   33f48:	b	33f4c <__assert_fail@plt+0x21394>
   33f4c:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   33f50:	ldr	r1, [r0]
   33f54:	ldr	r0, [r0, #4]
   33f58:	eor	r0, r0, #-2147483648	; 0x80000000
   33f5c:	orr	r0, r1, r0
   33f60:	cmp	r0, #0
   33f64:	beq	33f90 <__assert_fail@plt+0x213d8>
   33f68:	b	33fa4 <__assert_fail@plt+0x213ec>
   33f6c:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   33f70:	ldr	r1, [r0]
   33f74:	ldr	r0, [r0, #4]
   33f78:	subs	r1, r1, #1
   33f7c:	sbcs	r0, r0, #0
   33f80:	str	r1, [fp, #-3060]	; 0xfffff40c
   33f84:	str	r0, [fp, #-3064]	; 0xfffff408
   33f88:	blt	33fa4 <__assert_fail@plt+0x213ec>
   33f8c:	b	33f90 <__assert_fail@plt+0x213d8>
   33f90:	mov	r0, #0
   33f94:	mov	r1, r0
   33f98:	str	r1, [fp, #-3068]	; 0xfffff404
   33f9c:	str	r0, [fp, #-3072]	; 0xfffff400
   33fa0:	b	33fd0 <__assert_fail@plt+0x21418>
   33fa4:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   33fa8:	ldr	r1, [r0]
   33fac:	ldr	r0, [r0, #4]
   33fb0:	rsbs	r2, r1, #0
   33fb4:	rsc	r3, r0, #0
   33fb8:	mov	r0, #127	; 0x7f
   33fbc:	mov	r1, #0
   33fc0:	bl	77780 <__assert_fail@plt+0x64bc8>
   33fc4:	str	r0, [fp, #-3068]	; 0xfffff404
   33fc8:	str	r1, [fp, #-3072]	; 0xfffff400
   33fcc:	b	33fd0 <__assert_fail@plt+0x21418>
   33fd0:	ldr	r0, [fp, #-3072]	; 0xfffff400
   33fd4:	ldr	r1, [fp, #-3068]	; 0xfffff404
   33fd8:	ldr	r2, [fp, #-1288]	; 0xfffffaf8
   33fdc:	ldr	r3, [r2, #-56]	; 0xffffffc8
   33fe0:	ldr	r2, [r2, #-52]	; 0xffffffcc
   33fe4:	mvn	r2, r2
   33fe8:	mvn	r3, r3
   33fec:	subs	r1, r3, r1
   33ff0:	sbcs	r0, r2, r0
   33ff4:	str	r1, [fp, #-3076]	; 0xfffff3fc
   33ff8:	str	r0, [fp, #-3080]	; 0xfffff3f8
   33ffc:	bge	34270 <__assert_fail@plt+0x216b8>
   34000:	b	34294 <__assert_fail@plt+0x216dc>
   34004:	b	34008 <__assert_fail@plt+0x21450>
   34008:	b	340ac <__assert_fail@plt+0x214f4>
   3400c:	b	340ac <__assert_fail@plt+0x214f4>
   34010:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   34014:	ldr	r1, [r0]
   34018:	ldr	r0, [r0, #4]
   3401c:	and	r0, r1, r0
   34020:	cmn	r0, #1
   34024:	bne	340ac <__assert_fail@plt+0x214f4>
   34028:	b	3402c <__assert_fail@plt+0x21474>
   3402c:	b	34030 <__assert_fail@plt+0x21478>
   34030:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   34034:	ldr	r1, [r0, #-56]	; 0xffffffc8
   34038:	ldr	r0, [r0, #-52]	; 0xffffffcc
   3403c:	subs	r1, r1, #128	; 0x80
   34040:	sbc	r0, r0, #0
   34044:	rsbs	r1, r1, #0
   34048:	rscs	r0, r0, #0
   3404c:	str	r1, [fp, #-3084]	; 0xfffff3f4
   34050:	str	r0, [fp, #-3088]	; 0xfffff3f0
   34054:	blt	34270 <__assert_fail@plt+0x216b8>
   34058:	b	34294 <__assert_fail@plt+0x216dc>
   3405c:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   34060:	ldr	r1, [r0, #-56]	; 0xffffffc8
   34064:	ldr	r0, [r0, #-52]	; 0xffffffcc
   34068:	subs	r1, r1, #1
   3406c:	sbcs	r0, r0, #0
   34070:	str	r1, [fp, #-3092]	; 0xfffff3ec
   34074:	str	r0, [fp, #-3096]	; 0xfffff3e8
   34078:	blt	34294 <__assert_fail@plt+0x216dc>
   3407c:	b	34080 <__assert_fail@plt+0x214c8>
   34080:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   34084:	ldr	r1, [r0, #-56]	; 0xffffffc8
   34088:	ldr	r0, [r0, #-52]	; 0xffffffcc
   3408c:	subs	r1, r1, #1
   34090:	sbc	r0, r0, #0
   34094:	rsbs	r1, r1, #127	; 0x7f
   34098:	rscs	r0, r0, #0
   3409c:	str	r1, [fp, #-3100]	; 0xfffff3e4
   340a0:	str	r0, [fp, #-3104]	; 0xfffff3e0
   340a4:	blt	34270 <__assert_fail@plt+0x216b8>
   340a8:	b	34294 <__assert_fail@plt+0x216dc>
   340ac:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   340b0:	ldr	r1, [r0, #-56]	; 0xffffffc8
   340b4:	ldr	r2, [r0, #-52]	; 0xffffffcc
   340b8:	ldr	r3, [r0]
   340bc:	ldr	r0, [r0, #4]
   340c0:	mvn	ip, #127	; 0x7f
   340c4:	mvn	lr, #0
   340c8:	str	r0, [fp, #-3108]	; 0xfffff3dc
   340cc:	mov	r0, ip
   340d0:	str	r1, [fp, #-3112]	; 0xfffff3d8
   340d4:	mov	r1, lr
   340d8:	str	r2, [fp, #-3116]	; 0xfffff3d4
   340dc:	mov	r2, r3
   340e0:	ldr	r3, [fp, #-3108]	; 0xfffff3dc
   340e4:	bl	77780 <__assert_fail@plt+0x64bc8>
   340e8:	ldr	r2, [fp, #-3112]	; 0xfffff3d8
   340ec:	subs	r0, r0, r2
   340f0:	ldr	r2, [fp, #-3116]	; 0xfffff3d4
   340f4:	sbcs	r1, r1, r2
   340f8:	str	r0, [fp, #-3120]	; 0xfffff3d0
   340fc:	str	r1, [fp, #-3124]	; 0xfffff3cc
   34100:	blt	34270 <__assert_fail@plt+0x216b8>
   34104:	b	34294 <__assert_fail@plt+0x216dc>
   34108:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3410c:	ldr	r1, [r0]
   34110:	ldr	r0, [r0, #4]
   34114:	orr	r0, r1, r0
   34118:	cmp	r0, #0
   3411c:	bne	3412c <__assert_fail@plt+0x21574>
   34120:	b	34124 <__assert_fail@plt+0x2156c>
   34124:	b	34294 <__assert_fail@plt+0x216dc>
   34128:			; <UNDEFINED> instruction: 0xffff9d90
   3412c:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   34130:	ldr	r0, [r0, #-52]	; 0xffffffcc
   34134:	cmn	r0, #1
   34138:	bgt	34214 <__assert_fail@plt+0x2165c>
   3413c:	b	34140 <__assert_fail@plt+0x21588>
   34140:	b	34144 <__assert_fail@plt+0x2158c>
   34144:	b	341c4 <__assert_fail@plt+0x2160c>
   34148:	b	341c4 <__assert_fail@plt+0x2160c>
   3414c:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   34150:	ldr	r1, [r0, #-56]	; 0xffffffc8
   34154:	ldr	r0, [r0, #-52]	; 0xffffffcc
   34158:	and	r0, r1, r0
   3415c:	cmn	r0, #1
   34160:	bne	341c4 <__assert_fail@plt+0x2160c>
   34164:	b	34168 <__assert_fail@plt+0x215b0>
   34168:	b	3416c <__assert_fail@plt+0x215b4>
   3416c:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   34170:	ldr	r1, [r0]
   34174:	ldr	r0, [r0, #4]
   34178:	subs	r1, r1, #128	; 0x80
   3417c:	sbc	r0, r0, #0
   34180:	rsbs	r1, r1, #0
   34184:	rscs	r0, r0, #0
   34188:	str	r1, [fp, #-3128]	; 0xfffff3c8
   3418c:	str	r0, [fp, #-3132]	; 0xfffff3c4
   34190:	blt	34270 <__assert_fail@plt+0x216b8>
   34194:	b	34294 <__assert_fail@plt+0x216dc>
   34198:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3419c:	ldr	r1, [r0]
   341a0:	ldr	r0, [r0, #4]
   341a4:	subs	r1, r1, #1
   341a8:	sbc	r0, r0, #0
   341ac:	rsbs	r1, r1, #127	; 0x7f
   341b0:	rscs	r0, r0, #0
   341b4:	str	r1, [fp, #-3136]	; 0xfffff3c0
   341b8:	str	r0, [fp, #-3140]	; 0xfffff3bc
   341bc:	blt	34270 <__assert_fail@plt+0x216b8>
   341c0:	b	34294 <__assert_fail@plt+0x216dc>
   341c4:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   341c8:	ldr	r2, [r0, #-56]	; 0xffffffc8
   341cc:	ldr	r3, [r0, #-52]	; 0xffffffcc
   341d0:	ldr	r1, [r0]
   341d4:	ldr	r0, [r0, #4]
   341d8:	mvn	ip, #127	; 0x7f
   341dc:	mvn	lr, #0
   341e0:	str	r0, [fp, #-3144]	; 0xfffff3b8
   341e4:	mov	r0, ip
   341e8:	str	r1, [fp, #-3148]	; 0xfffff3b4
   341ec:	mov	r1, lr
   341f0:	bl	77780 <__assert_fail@plt+0x64bc8>
   341f4:	ldr	r2, [fp, #-3148]	; 0xfffff3b4
   341f8:	subs	r0, r0, r2
   341fc:	ldr	r2, [fp, #-3144]	; 0xfffff3b8
   34200:	sbcs	r1, r1, r2
   34204:	str	r0, [fp, #-3152]	; 0xfffff3b0
   34208:	str	r1, [fp, #-3156]	; 0xfffff3ac
   3420c:	blt	34270 <__assert_fail@plt+0x216b8>
   34210:	b	34294 <__assert_fail@plt+0x216dc>
   34214:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   34218:	ldr	r1, [r0, #-56]	; 0xffffffc8
   3421c:	ldr	r2, [r0, #-52]	; 0xffffffcc
   34220:	ldr	r3, [r0]
   34224:	ldr	r0, [r0, #4]
   34228:	mov	ip, #127	; 0x7f
   3422c:	mov	lr, #0
   34230:	str	r0, [fp, #-3160]	; 0xfffff3a8
   34234:	mov	r0, ip
   34238:	str	r1, [fp, #-3164]	; 0xfffff3a4
   3423c:	mov	r1, lr
   34240:	str	r2, [fp, #-3168]	; 0xfffff3a0
   34244:	mov	r2, r3
   34248:	ldr	r3, [fp, #-3160]	; 0xfffff3a8
   3424c:	bl	77780 <__assert_fail@plt+0x64bc8>
   34250:	ldr	r2, [fp, #-3164]	; 0xfffff3a4
   34254:	subs	r0, r0, r2
   34258:	ldr	r2, [fp, #-3168]	; 0xfffff3a0
   3425c:	sbcs	r1, r1, r2
   34260:	str	r0, [fp, #-3172]	; 0xfffff39c
   34264:	str	r1, [fp, #-3176]	; 0xfffff398
   34268:	bge	34294 <__assert_fail@plt+0x216dc>
   3426c:	b	34270 <__assert_fail@plt+0x216b8>
   34270:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   34274:	ldr	r1, [r0, #-56]	; 0xffffffc8
   34278:	ldr	r0, [r0]
   3427c:	mul	r0, r1, r0
   34280:	sxtb	r0, r0
   34284:	asr	r1, r0, #31
   34288:	str	r0, [fp, #-1344]	; 0xfffffac0
   3428c:	str	r1, [fp, #-1340]	; 0xfffffac4
   34290:	b	36564 <__assert_fail@plt+0x239ac>
   34294:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   34298:	ldr	r1, [r0, #-56]	; 0xffffffc8
   3429c:	ldr	r0, [r0]
   342a0:	mul	r0, r1, r0
   342a4:	sxtb	r0, r0
   342a8:	asr	r1, r0, #31
   342ac:	str	r0, [fp, #-1344]	; 0xfffffac0
   342b0:	str	r1, [fp, #-1340]	; 0xfffffac4
   342b4:	b	36568 <__assert_fail@plt+0x239b0>
   342b8:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   342bc:	ldr	r0, [r0, #4]
   342c0:	cmn	r0, #1
   342c4:	bgt	344ec <__assert_fail@plt+0x21934>
   342c8:	b	342cc <__assert_fail@plt+0x21714>
   342cc:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   342d0:	ldr	r0, [r0, #-52]	; 0xffffffcc
   342d4:	cmn	r0, #1
   342d8:	bgt	343fc <__assert_fail@plt+0x21844>
   342dc:	b	342e0 <__assert_fail@plt+0x21728>
   342e0:	b	342e4 <__assert_fail@plt+0x2172c>
   342e4:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   342e8:	ldr	r1, [r0, #-56]	; 0xffffffc8
   342ec:	ldr	r2, [r0, #-52]	; 0xffffffcc
   342f0:	ldr	r3, [r0]
   342f4:	ldr	r0, [r0, #4]
   342f8:	mov	ip, #255	; 0xff
   342fc:	mov	lr, #0
   34300:	str	r0, [fp, #-3180]	; 0xfffff394
   34304:	mov	r0, ip
   34308:	str	r1, [fp, #-3184]	; 0xfffff390
   3430c:	mov	r1, lr
   34310:	str	r2, [fp, #-3188]	; 0xfffff38c
   34314:	mov	r2, r3
   34318:	ldr	r3, [fp, #-3180]	; 0xfffff394
   3431c:	bl	77780 <__assert_fail@plt+0x64bc8>
   34320:	ldr	r2, [fp, #-3184]	; 0xfffff390
   34324:	subs	r0, r2, r0
   34328:	ldr	r2, [fp, #-3188]	; 0xfffff38c
   3432c:	sbcs	r1, r2, r1
   34330:	str	r0, [fp, #-3192]	; 0xfffff388
   34334:	str	r1, [fp, #-3196]	; 0xfffff384
   34338:	blt	3463c <__assert_fail@plt+0x21a84>
   3433c:	b	34660 <__assert_fail@plt+0x21aa8>
   34340:	b	34344 <__assert_fail@plt+0x2178c>
   34344:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   34348:	ldr	r1, [r0]
   3434c:	ldr	r0, [r0, #4]
   34350:	eor	r0, r0, #-2147483648	; 0x80000000
   34354:	orr	r0, r1, r0
   34358:	cmp	r0, #0
   3435c:	beq	34388 <__assert_fail@plt+0x217d0>
   34360:	b	3439c <__assert_fail@plt+0x217e4>
   34364:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   34368:	ldr	r1, [r0]
   3436c:	ldr	r0, [r0, #4]
   34370:	subs	r1, r1, #1
   34374:	sbcs	r0, r0, #0
   34378:	str	r1, [fp, #-3200]	; 0xfffff380
   3437c:	str	r0, [fp, #-3204]	; 0xfffff37c
   34380:	blt	3439c <__assert_fail@plt+0x217e4>
   34384:	b	34388 <__assert_fail@plt+0x217d0>
   34388:	mov	r0, #0
   3438c:	mov	r1, r0
   34390:	str	r1, [fp, #-3208]	; 0xfffff378
   34394:	str	r0, [fp, #-3212]	; 0xfffff374
   34398:	b	343c8 <__assert_fail@plt+0x21810>
   3439c:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   343a0:	ldr	r1, [r0]
   343a4:	ldr	r0, [r0, #4]
   343a8:	rsbs	r2, r1, #0
   343ac:	rsc	r3, r0, #0
   343b0:	mov	r0, #255	; 0xff
   343b4:	mov	r1, #0
   343b8:	bl	77780 <__assert_fail@plt+0x64bc8>
   343bc:	str	r0, [fp, #-3208]	; 0xfffff378
   343c0:	str	r1, [fp, #-3212]	; 0xfffff374
   343c4:	b	343c8 <__assert_fail@plt+0x21810>
   343c8:	ldr	r0, [fp, #-3212]	; 0xfffff374
   343cc:	ldr	r1, [fp, #-3208]	; 0xfffff378
   343d0:	ldr	r2, [fp, #-1288]	; 0xfffffaf8
   343d4:	ldr	r3, [r2, #-56]	; 0xffffffc8
   343d8:	ldr	r2, [r2, #-52]	; 0xffffffcc
   343dc:	mvn	r2, r2
   343e0:	mvn	r3, r3
   343e4:	subs	r1, r3, r1
   343e8:	sbcs	r0, r2, r0
   343ec:	str	r1, [fp, #-3216]	; 0xfffff370
   343f0:	str	r0, [fp, #-3220]	; 0xfffff36c
   343f4:	bge	3463c <__assert_fail@plt+0x21a84>
   343f8:	b	34660 <__assert_fail@plt+0x21aa8>
   343fc:	b	34400 <__assert_fail@plt+0x21848>
   34400:	b	34494 <__assert_fail@plt+0x218dc>
   34404:	b	34494 <__assert_fail@plt+0x218dc>
   34408:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3440c:	ldr	r1, [r0]
   34410:	ldr	r0, [r0, #4]
   34414:	and	r0, r1, r0
   34418:	cmn	r0, #1
   3441c:	bne	34494 <__assert_fail@plt+0x218dc>
   34420:	b	34424 <__assert_fail@plt+0x2186c>
   34424:	b	34428 <__assert_fail@plt+0x21870>
   34428:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3442c:	ldr	r1, [r0, #-56]	; 0xffffffc8
   34430:	ldr	r0, [r0, #-52]	; 0xffffffcc
   34434:	rsbs	r1, r1, #0
   34438:	rscs	r0, r0, #0
   3443c:	str	r1, [fp, #-3224]	; 0xfffff368
   34440:	str	r0, [fp, #-3228]	; 0xfffff364
   34444:	blt	3463c <__assert_fail@plt+0x21a84>
   34448:	b	34660 <__assert_fail@plt+0x21aa8>
   3444c:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   34450:	ldr	r1, [r0, #-56]	; 0xffffffc8
   34454:	ldr	r0, [r0, #-52]	; 0xffffffcc
   34458:	subs	r1, r1, #1
   3445c:	sbcs	r0, r0, #0
   34460:	str	r1, [fp, #-3232]	; 0xfffff360
   34464:	str	r0, [fp, #-3236]	; 0xfffff35c
   34468:	blt	34660 <__assert_fail@plt+0x21aa8>
   3446c:	b	34470 <__assert_fail@plt+0x218b8>
   34470:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   34474:	ldr	r1, [r0, #-56]	; 0xffffffc8
   34478:	ldr	r0, [r0, #-52]	; 0xffffffcc
   3447c:	subs	r1, r1, #1
   34480:	sbc	r0, r0, #0
   34484:	cmn	r0, #1
   34488:	str	r1, [fp, #-3240]	; 0xfffff358
   3448c:	bgt	3463c <__assert_fail@plt+0x21a84>
   34490:	b	34660 <__assert_fail@plt+0x21aa8>
   34494:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   34498:	ldr	r1, [r0, #-56]	; 0xffffffc8
   3449c:	ldr	r2, [r0, #-52]	; 0xffffffcc
   344a0:	ldr	r3, [r0]
   344a4:	ldr	r0, [r0, #4]
   344a8:	mov	ip, #0
   344ac:	str	r0, [fp, #-3244]	; 0xfffff354
   344b0:	mov	r0, ip
   344b4:	str	r1, [fp, #-3248]	; 0xfffff350
   344b8:	mov	r1, ip
   344bc:	str	r2, [fp, #-3252]	; 0xfffff34c
   344c0:	mov	r2, r3
   344c4:	ldr	r3, [fp, #-3244]	; 0xfffff354
   344c8:	bl	77780 <__assert_fail@plt+0x64bc8>
   344cc:	ldr	r2, [fp, #-3248]	; 0xfffff350
   344d0:	subs	r0, r0, r2
   344d4:	ldr	r2, [fp, #-3252]	; 0xfffff34c
   344d8:	sbcs	r1, r1, r2
   344dc:	str	r0, [fp, #-3256]	; 0xfffff348
   344e0:	str	r1, [fp, #-3260]	; 0xfffff344
   344e4:	blt	3463c <__assert_fail@plt+0x21a84>
   344e8:	b	34660 <__assert_fail@plt+0x21aa8>
   344ec:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   344f0:	ldr	r1, [r0]
   344f4:	ldr	r0, [r0, #4]
   344f8:	orr	r0, r1, r0
   344fc:	cmp	r0, #0
   34500:	bne	3450c <__assert_fail@plt+0x21954>
   34504:	b	34508 <__assert_fail@plt+0x21950>
   34508:	b	34660 <__assert_fail@plt+0x21aa8>
   3450c:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   34510:	ldr	r0, [r0, #-52]	; 0xffffffcc
   34514:	cmn	r0, #1
   34518:	bgt	345e0 <__assert_fail@plt+0x21a28>
   3451c:	b	34520 <__assert_fail@plt+0x21968>
   34520:	b	34524 <__assert_fail@plt+0x2196c>
   34524:	b	34594 <__assert_fail@plt+0x219dc>
   34528:	b	34594 <__assert_fail@plt+0x219dc>
   3452c:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   34530:	ldr	r1, [r0, #-56]	; 0xffffffc8
   34534:	ldr	r0, [r0, #-52]	; 0xffffffcc
   34538:	and	r0, r1, r0
   3453c:	cmn	r0, #1
   34540:	bne	34594 <__assert_fail@plt+0x219dc>
   34544:	b	34548 <__assert_fail@plt+0x21990>
   34548:	b	3454c <__assert_fail@plt+0x21994>
   3454c:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   34550:	ldr	r1, [r0]
   34554:	ldr	r0, [r0, #4]
   34558:	rsbs	r1, r1, #0
   3455c:	rscs	r0, r0, #0
   34560:	str	r1, [fp, #-3264]	; 0xfffff340
   34564:	str	r0, [fp, #-3268]	; 0xfffff33c
   34568:	blt	3463c <__assert_fail@plt+0x21a84>
   3456c:	b	34660 <__assert_fail@plt+0x21aa8>
   34570:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   34574:	ldr	r1, [r0]
   34578:	ldr	r0, [r0, #4]
   3457c:	subs	r1, r1, #1
   34580:	sbc	r0, r0, #0
   34584:	cmn	r0, #1
   34588:	str	r1, [fp, #-3272]	; 0xfffff338
   3458c:	bgt	3463c <__assert_fail@plt+0x21a84>
   34590:	b	34660 <__assert_fail@plt+0x21aa8>
   34594:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   34598:	ldr	r2, [r0, #-56]	; 0xffffffc8
   3459c:	ldr	r3, [r0, #-52]	; 0xffffffcc
   345a0:	ldr	r1, [r0]
   345a4:	ldr	r0, [r0, #4]
   345a8:	mov	ip, #0
   345ac:	str	r0, [fp, #-3276]	; 0xfffff334
   345b0:	mov	r0, ip
   345b4:	str	r1, [fp, #-3280]	; 0xfffff330
   345b8:	mov	r1, ip
   345bc:	bl	77780 <__assert_fail@plt+0x64bc8>
   345c0:	ldr	r2, [fp, #-3280]	; 0xfffff330
   345c4:	subs	r0, r0, r2
   345c8:	ldr	r2, [fp, #-3276]	; 0xfffff334
   345cc:	sbcs	r1, r1, r2
   345d0:	str	r0, [fp, #-3284]	; 0xfffff32c
   345d4:	str	r1, [fp, #-3288]	; 0xfffff328
   345d8:	blt	3463c <__assert_fail@plt+0x21a84>
   345dc:	b	34660 <__assert_fail@plt+0x21aa8>
   345e0:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   345e4:	ldr	r1, [r0, #-56]	; 0xffffffc8
   345e8:	ldr	r2, [r0, #-52]	; 0xffffffcc
   345ec:	ldr	r3, [r0]
   345f0:	ldr	r0, [r0, #4]
   345f4:	mov	ip, #255	; 0xff
   345f8:	mov	lr, #0
   345fc:	str	r0, [fp, #-3292]	; 0xfffff324
   34600:	mov	r0, ip
   34604:	str	r1, [fp, #-3296]	; 0xfffff320
   34608:	mov	r1, lr
   3460c:	str	r2, [fp, #-3300]	; 0xfffff31c
   34610:	mov	r2, r3
   34614:	ldr	r3, [fp, #-3292]	; 0xfffff324
   34618:	bl	77780 <__assert_fail@plt+0x64bc8>
   3461c:	ldr	r2, [fp, #-3296]	; 0xfffff320
   34620:	subs	r0, r0, r2
   34624:	ldr	r2, [fp, #-3300]	; 0xfffff31c
   34628:	sbcs	r1, r1, r2
   3462c:	str	r0, [fp, #-3304]	; 0xfffff318
   34630:	str	r1, [fp, #-3308]	; 0xfffff314
   34634:	bge	34660 <__assert_fail@plt+0x21aa8>
   34638:	b	3463c <__assert_fail@plt+0x21a84>
   3463c:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   34640:	ldr	r1, [r0, #-56]	; 0xffffffc8
   34644:	ldr	r0, [r0]
   34648:	mul	r0, r1, r0
   3464c:	uxtb	r0, r0
   34650:	mov	r1, #0
   34654:	str	r1, [fp, #-1340]	; 0xfffffac4
   34658:	str	r0, [fp, #-1344]	; 0xfffffac0
   3465c:	b	36564 <__assert_fail@plt+0x239ac>
   34660:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   34664:	ldr	r1, [r0, #-56]	; 0xffffffc8
   34668:	ldr	r0, [r0]
   3466c:	mul	r0, r1, r0
   34670:	uxtb	r0, r0
   34674:	mov	r1, #0
   34678:	str	r1, [fp, #-1340]	; 0xfffffac4
   3467c:	str	r0, [fp, #-1344]	; 0xfffffac0
   34680:	b	36568 <__assert_fail@plt+0x239b0>
   34684:	b	34e5c <__assert_fail@plt+0x222a4>
   34688:	b	3468c <__assert_fail@plt+0x21ad4>
   3468c:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   34690:	ldr	r0, [r0, #4]
   34694:	cmn	r0, #1
   34698:	bgt	348dc <__assert_fail@plt+0x21d24>
   3469c:	b	346a0 <__assert_fail@plt+0x21ae8>
   346a0:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   346a4:	ldr	r0, [r0, #-52]	; 0xffffffcc
   346a8:	cmn	r0, #1
   346ac:	bgt	347d0 <__assert_fail@plt+0x21c18>
   346b0:	b	346b4 <__assert_fail@plt+0x21afc>
   346b4:	b	346b8 <__assert_fail@plt+0x21b00>
   346b8:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   346bc:	ldr	r1, [r0, #-56]	; 0xffffffc8
   346c0:	ldr	r2, [r0, #-52]	; 0xffffffcc
   346c4:	ldr	r3, [r0]
   346c8:	ldr	r0, [r0, #4]
   346cc:	movw	ip, #32767	; 0x7fff
   346d0:	mov	lr, #0
   346d4:	str	r0, [fp, #-3312]	; 0xfffff310
   346d8:	mov	r0, ip
   346dc:	str	r1, [fp, #-3316]	; 0xfffff30c
   346e0:	mov	r1, lr
   346e4:	str	r2, [fp, #-3320]	; 0xfffff308
   346e8:	mov	r2, r3
   346ec:	ldr	r3, [fp, #-3312]	; 0xfffff310
   346f0:	bl	77780 <__assert_fail@plt+0x64bc8>
   346f4:	ldr	r2, [fp, #-3316]	; 0xfffff30c
   346f8:	subs	r0, r2, r0
   346fc:	ldr	r2, [fp, #-3320]	; 0xfffff308
   34700:	sbcs	r1, r2, r1
   34704:	str	r0, [fp, #-3324]	; 0xfffff304
   34708:	str	r1, [fp, #-3328]	; 0xfffff300
   3470c:	blt	34a48 <__assert_fail@plt+0x21e90>
   34710:	b	34a6c <__assert_fail@plt+0x21eb4>
   34714:	b	34718 <__assert_fail@plt+0x21b60>
   34718:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3471c:	ldr	r1, [r0]
   34720:	ldr	r0, [r0, #4]
   34724:	eor	r0, r0, #-2147483648	; 0x80000000
   34728:	orr	r0, r1, r0
   3472c:	cmp	r0, #0
   34730:	beq	3475c <__assert_fail@plt+0x21ba4>
   34734:	b	34770 <__assert_fail@plt+0x21bb8>
   34738:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3473c:	ldr	r1, [r0]
   34740:	ldr	r0, [r0, #4]
   34744:	subs	r1, r1, #1
   34748:	sbcs	r0, r0, #0
   3474c:	str	r1, [fp, #-3332]	; 0xfffff2fc
   34750:	str	r0, [fp, #-3336]	; 0xfffff2f8
   34754:	blt	34770 <__assert_fail@plt+0x21bb8>
   34758:	b	3475c <__assert_fail@plt+0x21ba4>
   3475c:	mov	r0, #0
   34760:	mov	r1, r0
   34764:	str	r1, [fp, #-3340]	; 0xfffff2f4
   34768:	str	r0, [fp, #-3344]	; 0xfffff2f0
   3476c:	b	3479c <__assert_fail@plt+0x21be4>
   34770:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   34774:	ldr	r1, [r0]
   34778:	ldr	r0, [r0, #4]
   3477c:	rsbs	r2, r1, #0
   34780:	rsc	r3, r0, #0
   34784:	movw	r0, #32767	; 0x7fff
   34788:	mov	r1, #0
   3478c:	bl	77780 <__assert_fail@plt+0x64bc8>
   34790:	str	r0, [fp, #-3340]	; 0xfffff2f4
   34794:	str	r1, [fp, #-3344]	; 0xfffff2f0
   34798:	b	3479c <__assert_fail@plt+0x21be4>
   3479c:	ldr	r0, [fp, #-3344]	; 0xfffff2f0
   347a0:	ldr	r1, [fp, #-3340]	; 0xfffff2f4
   347a4:	ldr	r2, [fp, #-1288]	; 0xfffffaf8
   347a8:	ldr	r3, [r2, #-56]	; 0xffffffc8
   347ac:	ldr	r2, [r2, #-52]	; 0xffffffcc
   347b0:	mvn	r2, r2
   347b4:	mvn	r3, r3
   347b8:	subs	r1, r3, r1
   347bc:	sbcs	r0, r2, r0
   347c0:	str	r1, [fp, #-3348]	; 0xfffff2ec
   347c4:	str	r0, [fp, #-3352]	; 0xfffff2e8
   347c8:	bge	34a48 <__assert_fail@plt+0x21e90>
   347cc:	b	34a6c <__assert_fail@plt+0x21eb4>
   347d0:	b	347d4 <__assert_fail@plt+0x21c1c>
   347d4:	b	3487c <__assert_fail@plt+0x21cc4>
   347d8:	b	3487c <__assert_fail@plt+0x21cc4>
   347dc:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   347e0:	ldr	r1, [r0]
   347e4:	ldr	r0, [r0, #4]
   347e8:	and	r0, r1, r0
   347ec:	cmn	r0, #1
   347f0:	bne	3487c <__assert_fail@plt+0x21cc4>
   347f4:	b	347f8 <__assert_fail@plt+0x21c40>
   347f8:	b	347fc <__assert_fail@plt+0x21c44>
   347fc:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   34800:	ldr	r1, [r0, #-56]	; 0xffffffc8
   34804:	ldr	r0, [r0, #-52]	; 0xffffffcc
   34808:	subs	r1, r1, #32768	; 0x8000
   3480c:	sbc	r0, r0, #0
   34810:	rsbs	r1, r1, #0
   34814:	rscs	r0, r0, #0
   34818:	str	r1, [fp, #-3356]	; 0xfffff2e4
   3481c:	str	r0, [fp, #-3360]	; 0xfffff2e0
   34820:	blt	34a48 <__assert_fail@plt+0x21e90>
   34824:	b	34a6c <__assert_fail@plt+0x21eb4>
   34828:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3482c:	ldr	r1, [r0, #-56]	; 0xffffffc8
   34830:	ldr	r0, [r0, #-52]	; 0xffffffcc
   34834:	subs	r1, r1, #1
   34838:	sbcs	r0, r0, #0
   3483c:	str	r1, [fp, #-3364]	; 0xfffff2dc
   34840:	str	r0, [fp, #-3368]	; 0xfffff2d8
   34844:	blt	34a6c <__assert_fail@plt+0x21eb4>
   34848:	b	3484c <__assert_fail@plt+0x21c94>
   3484c:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   34850:	ldr	r1, [r0, #-56]	; 0xffffffc8
   34854:	ldr	r0, [r0, #-52]	; 0xffffffcc
   34858:	subs	r1, r1, #1
   3485c:	sbc	r0, r0, #0
   34860:	movw	r2, #32767	; 0x7fff
   34864:	subs	r1, r2, r1
   34868:	rscs	r0, r0, #0
   3486c:	str	r1, [fp, #-3372]	; 0xfffff2d4
   34870:	str	r0, [fp, #-3376]	; 0xfffff2d0
   34874:	blt	34a48 <__assert_fail@plt+0x21e90>
   34878:	b	34a6c <__assert_fail@plt+0x21eb4>
   3487c:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   34880:	ldr	r1, [r0, #-56]	; 0xffffffc8
   34884:	ldr	r2, [r0, #-52]	; 0xffffffcc
   34888:	ldr	r3, [r0]
   3488c:	ldr	r0, [r0, #4]
   34890:	movw	ip, #32768	; 0x8000
   34894:	movt	ip, #65535	; 0xffff
   34898:	mvn	lr, #0
   3489c:	str	r0, [fp, #-3380]	; 0xfffff2cc
   348a0:	mov	r0, ip
   348a4:	str	r1, [fp, #-3384]	; 0xfffff2c8
   348a8:	mov	r1, lr
   348ac:	str	r2, [fp, #-3388]	; 0xfffff2c4
   348b0:	mov	r2, r3
   348b4:	ldr	r3, [fp, #-3380]	; 0xfffff2cc
   348b8:	bl	77780 <__assert_fail@plt+0x64bc8>
   348bc:	ldr	r2, [fp, #-3384]	; 0xfffff2c8
   348c0:	subs	r0, r0, r2
   348c4:	ldr	r2, [fp, #-3388]	; 0xfffff2c4
   348c8:	sbcs	r1, r1, r2
   348cc:	str	r0, [fp, #-3392]	; 0xfffff2c0
   348d0:	str	r1, [fp, #-3396]	; 0xfffff2bc
   348d4:	blt	34a48 <__assert_fail@plt+0x21e90>
   348d8:	b	34a6c <__assert_fail@plt+0x21eb4>
   348dc:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   348e0:	ldr	r1, [r0]
   348e4:	ldr	r0, [r0, #4]
   348e8:	orr	r0, r1, r0
   348ec:	cmp	r0, #0
   348f0:	bne	348fc <__assert_fail@plt+0x21d44>
   348f4:	b	348f8 <__assert_fail@plt+0x21d40>
   348f8:	b	34a6c <__assert_fail@plt+0x21eb4>
   348fc:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   34900:	ldr	r0, [r0, #-52]	; 0xffffffcc
   34904:	cmn	r0, #1
   34908:	bgt	349ec <__assert_fail@plt+0x21e34>
   3490c:	b	34910 <__assert_fail@plt+0x21d58>
   34910:	b	34914 <__assert_fail@plt+0x21d5c>
   34914:	b	34998 <__assert_fail@plt+0x21de0>
   34918:	b	34998 <__assert_fail@plt+0x21de0>
   3491c:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   34920:	ldr	r1, [r0, #-56]	; 0xffffffc8
   34924:	ldr	r0, [r0, #-52]	; 0xffffffcc
   34928:	and	r0, r1, r0
   3492c:	cmn	r0, #1
   34930:	bne	34998 <__assert_fail@plt+0x21de0>
   34934:	b	34938 <__assert_fail@plt+0x21d80>
   34938:	b	3493c <__assert_fail@plt+0x21d84>
   3493c:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   34940:	ldr	r1, [r0]
   34944:	ldr	r0, [r0, #4]
   34948:	subs	r1, r1, #32768	; 0x8000
   3494c:	sbc	r0, r0, #0
   34950:	rsbs	r1, r1, #0
   34954:	rscs	r0, r0, #0
   34958:	str	r1, [fp, #-3400]	; 0xfffff2b8
   3495c:	str	r0, [fp, #-3404]	; 0xfffff2b4
   34960:	blt	34a48 <__assert_fail@plt+0x21e90>
   34964:	b	34a6c <__assert_fail@plt+0x21eb4>
   34968:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3496c:	ldr	r1, [r0]
   34970:	ldr	r0, [r0, #4]
   34974:	subs	r1, r1, #1
   34978:	sbc	r0, r0, #0
   3497c:	movw	r2, #32767	; 0x7fff
   34980:	subs	r1, r2, r1
   34984:	rscs	r0, r0, #0
   34988:	str	r1, [fp, #-3408]	; 0xfffff2b0
   3498c:	str	r0, [fp, #-3412]	; 0xfffff2ac
   34990:	blt	34a48 <__assert_fail@plt+0x21e90>
   34994:	b	34a6c <__assert_fail@plt+0x21eb4>
   34998:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3499c:	ldr	r2, [r0, #-56]	; 0xffffffc8
   349a0:	ldr	r3, [r0, #-52]	; 0xffffffcc
   349a4:	ldr	r1, [r0]
   349a8:	ldr	r0, [r0, #4]
   349ac:	movw	ip, #32768	; 0x8000
   349b0:	movt	ip, #65535	; 0xffff
   349b4:	mvn	lr, #0
   349b8:	str	r0, [fp, #-3416]	; 0xfffff2a8
   349bc:	mov	r0, ip
   349c0:	str	r1, [fp, #-3420]	; 0xfffff2a4
   349c4:	mov	r1, lr
   349c8:	bl	77780 <__assert_fail@plt+0x64bc8>
   349cc:	ldr	r2, [fp, #-3420]	; 0xfffff2a4
   349d0:	subs	r0, r0, r2
   349d4:	ldr	r2, [fp, #-3416]	; 0xfffff2a8
   349d8:	sbcs	r1, r1, r2
   349dc:	str	r0, [fp, #-3424]	; 0xfffff2a0
   349e0:	str	r1, [fp, #-3428]	; 0xfffff29c
   349e4:	blt	34a48 <__assert_fail@plt+0x21e90>
   349e8:	b	34a6c <__assert_fail@plt+0x21eb4>
   349ec:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   349f0:	ldr	r1, [r0, #-56]	; 0xffffffc8
   349f4:	ldr	r2, [r0, #-52]	; 0xffffffcc
   349f8:	ldr	r3, [r0]
   349fc:	ldr	r0, [r0, #4]
   34a00:	movw	ip, #32767	; 0x7fff
   34a04:	mov	lr, #0
   34a08:	str	r0, [fp, #-3432]	; 0xfffff298
   34a0c:	mov	r0, ip
   34a10:	str	r1, [fp, #-3436]	; 0xfffff294
   34a14:	mov	r1, lr
   34a18:	str	r2, [fp, #-3440]	; 0xfffff290
   34a1c:	mov	r2, r3
   34a20:	ldr	r3, [fp, #-3432]	; 0xfffff298
   34a24:	bl	77780 <__assert_fail@plt+0x64bc8>
   34a28:	ldr	r2, [fp, #-3436]	; 0xfffff294
   34a2c:	subs	r0, r0, r2
   34a30:	ldr	r2, [fp, #-3440]	; 0xfffff290
   34a34:	sbcs	r1, r1, r2
   34a38:	str	r0, [fp, #-3444]	; 0xfffff28c
   34a3c:	str	r1, [fp, #-3448]	; 0xfffff288
   34a40:	bge	34a6c <__assert_fail@plt+0x21eb4>
   34a44:	b	34a48 <__assert_fail@plt+0x21e90>
   34a48:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   34a4c:	ldr	r1, [r0, #-56]	; 0xffffffc8
   34a50:	ldr	r0, [r0]
   34a54:	mul	r0, r1, r0
   34a58:	sxth	r0, r0
   34a5c:	asr	r1, r0, #31
   34a60:	str	r0, [fp, #-1344]	; 0xfffffac0
   34a64:	str	r1, [fp, #-1340]	; 0xfffffac4
   34a68:	b	36564 <__assert_fail@plt+0x239ac>
   34a6c:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   34a70:	ldr	r1, [r0, #-56]	; 0xffffffc8
   34a74:	ldr	r0, [r0]
   34a78:	mul	r0, r1, r0
   34a7c:	sxth	r0, r0
   34a80:	asr	r1, r0, #31
   34a84:	str	r0, [fp, #-1344]	; 0xfffffac0
   34a88:	str	r1, [fp, #-1340]	; 0xfffffac4
   34a8c:	b	36568 <__assert_fail@plt+0x239b0>
   34a90:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   34a94:	ldr	r0, [r0, #4]
   34a98:	cmn	r0, #1
   34a9c:	bgt	34cc4 <__assert_fail@plt+0x2210c>
   34aa0:	b	34aa4 <__assert_fail@plt+0x21eec>
   34aa4:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   34aa8:	ldr	r0, [r0, #-52]	; 0xffffffcc
   34aac:	cmn	r0, #1
   34ab0:	bgt	34bd4 <__assert_fail@plt+0x2201c>
   34ab4:	b	34ab8 <__assert_fail@plt+0x21f00>
   34ab8:	b	34abc <__assert_fail@plt+0x21f04>
   34abc:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   34ac0:	ldr	r1, [r0, #-56]	; 0xffffffc8
   34ac4:	ldr	r2, [r0, #-52]	; 0xffffffcc
   34ac8:	ldr	r3, [r0]
   34acc:	ldr	r0, [r0, #4]
   34ad0:	movw	ip, #65535	; 0xffff
   34ad4:	mov	lr, #0
   34ad8:	str	r0, [fp, #-3452]	; 0xfffff284
   34adc:	mov	r0, ip
   34ae0:	str	r1, [fp, #-3456]	; 0xfffff280
   34ae4:	mov	r1, lr
   34ae8:	str	r2, [fp, #-3460]	; 0xfffff27c
   34aec:	mov	r2, r3
   34af0:	ldr	r3, [fp, #-3452]	; 0xfffff284
   34af4:	bl	77780 <__assert_fail@plt+0x64bc8>
   34af8:	ldr	r2, [fp, #-3456]	; 0xfffff280
   34afc:	subs	r0, r2, r0
   34b00:	ldr	r2, [fp, #-3460]	; 0xfffff27c
   34b04:	sbcs	r1, r2, r1
   34b08:	str	r0, [fp, #-3464]	; 0xfffff278
   34b0c:	str	r1, [fp, #-3468]	; 0xfffff274
   34b10:	blt	34e14 <__assert_fail@plt+0x2225c>
   34b14:	b	34e38 <__assert_fail@plt+0x22280>
   34b18:	b	34b1c <__assert_fail@plt+0x21f64>
   34b1c:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   34b20:	ldr	r1, [r0]
   34b24:	ldr	r0, [r0, #4]
   34b28:	eor	r0, r0, #-2147483648	; 0x80000000
   34b2c:	orr	r0, r1, r0
   34b30:	cmp	r0, #0
   34b34:	beq	34b60 <__assert_fail@plt+0x21fa8>
   34b38:	b	34b74 <__assert_fail@plt+0x21fbc>
   34b3c:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   34b40:	ldr	r1, [r0]
   34b44:	ldr	r0, [r0, #4]
   34b48:	subs	r1, r1, #1
   34b4c:	sbcs	r0, r0, #0
   34b50:	str	r1, [fp, #-3472]	; 0xfffff270
   34b54:	str	r0, [fp, #-3476]	; 0xfffff26c
   34b58:	blt	34b74 <__assert_fail@plt+0x21fbc>
   34b5c:	b	34b60 <__assert_fail@plt+0x21fa8>
   34b60:	mov	r0, #0
   34b64:	mov	r1, r0
   34b68:	str	r1, [fp, #-3480]	; 0xfffff268
   34b6c:	str	r0, [fp, #-3484]	; 0xfffff264
   34b70:	b	34ba0 <__assert_fail@plt+0x21fe8>
   34b74:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   34b78:	ldr	r1, [r0]
   34b7c:	ldr	r0, [r0, #4]
   34b80:	rsbs	r2, r1, #0
   34b84:	rsc	r3, r0, #0
   34b88:	movw	r0, #65535	; 0xffff
   34b8c:	mov	r1, #0
   34b90:	bl	77780 <__assert_fail@plt+0x64bc8>
   34b94:	str	r0, [fp, #-3480]	; 0xfffff268
   34b98:	str	r1, [fp, #-3484]	; 0xfffff264
   34b9c:	b	34ba0 <__assert_fail@plt+0x21fe8>
   34ba0:	ldr	r0, [fp, #-3484]	; 0xfffff264
   34ba4:	ldr	r1, [fp, #-3480]	; 0xfffff268
   34ba8:	ldr	r2, [fp, #-1288]	; 0xfffffaf8
   34bac:	ldr	r3, [r2, #-56]	; 0xffffffc8
   34bb0:	ldr	r2, [r2, #-52]	; 0xffffffcc
   34bb4:	mvn	r2, r2
   34bb8:	mvn	r3, r3
   34bbc:	subs	r1, r3, r1
   34bc0:	sbcs	r0, r2, r0
   34bc4:	str	r1, [fp, #-3488]	; 0xfffff260
   34bc8:	str	r0, [fp, #-3492]	; 0xfffff25c
   34bcc:	bge	34e14 <__assert_fail@plt+0x2225c>
   34bd0:	b	34e38 <__assert_fail@plt+0x22280>
   34bd4:	b	34bd8 <__assert_fail@plt+0x22020>
   34bd8:	b	34c6c <__assert_fail@plt+0x220b4>
   34bdc:	b	34c6c <__assert_fail@plt+0x220b4>
   34be0:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   34be4:	ldr	r1, [r0]
   34be8:	ldr	r0, [r0, #4]
   34bec:	and	r0, r1, r0
   34bf0:	cmn	r0, #1
   34bf4:	bne	34c6c <__assert_fail@plt+0x220b4>
   34bf8:	b	34bfc <__assert_fail@plt+0x22044>
   34bfc:	b	34c00 <__assert_fail@plt+0x22048>
   34c00:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   34c04:	ldr	r1, [r0, #-56]	; 0xffffffc8
   34c08:	ldr	r0, [r0, #-52]	; 0xffffffcc
   34c0c:	rsbs	r1, r1, #0
   34c10:	rscs	r0, r0, #0
   34c14:	str	r1, [fp, #-3496]	; 0xfffff258
   34c18:	str	r0, [fp, #-3500]	; 0xfffff254
   34c1c:	blt	34e14 <__assert_fail@plt+0x2225c>
   34c20:	b	34e38 <__assert_fail@plt+0x22280>
   34c24:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   34c28:	ldr	r1, [r0, #-56]	; 0xffffffc8
   34c2c:	ldr	r0, [r0, #-52]	; 0xffffffcc
   34c30:	subs	r1, r1, #1
   34c34:	sbcs	r0, r0, #0
   34c38:	str	r1, [fp, #-3504]	; 0xfffff250
   34c3c:	str	r0, [fp, #-3508]	; 0xfffff24c
   34c40:	blt	34e38 <__assert_fail@plt+0x22280>
   34c44:	b	34c48 <__assert_fail@plt+0x22090>
   34c48:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   34c4c:	ldr	r1, [r0, #-56]	; 0xffffffc8
   34c50:	ldr	r0, [r0, #-52]	; 0xffffffcc
   34c54:	subs	r1, r1, #1
   34c58:	sbc	r0, r0, #0
   34c5c:	cmn	r0, #1
   34c60:	str	r1, [fp, #-3512]	; 0xfffff248
   34c64:	bgt	34e14 <__assert_fail@plt+0x2225c>
   34c68:	b	34e38 <__assert_fail@plt+0x22280>
   34c6c:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   34c70:	ldr	r1, [r0, #-56]	; 0xffffffc8
   34c74:	ldr	r2, [r0, #-52]	; 0xffffffcc
   34c78:	ldr	r3, [r0]
   34c7c:	ldr	r0, [r0, #4]
   34c80:	mov	ip, #0
   34c84:	str	r0, [fp, #-3516]	; 0xfffff244
   34c88:	mov	r0, ip
   34c8c:	str	r1, [fp, #-3520]	; 0xfffff240
   34c90:	mov	r1, ip
   34c94:	str	r2, [fp, #-3524]	; 0xfffff23c
   34c98:	mov	r2, r3
   34c9c:	ldr	r3, [fp, #-3516]	; 0xfffff244
   34ca0:	bl	77780 <__assert_fail@plt+0x64bc8>
   34ca4:	ldr	r2, [fp, #-3520]	; 0xfffff240
   34ca8:	subs	r0, r0, r2
   34cac:	ldr	r2, [fp, #-3524]	; 0xfffff23c
   34cb0:	sbcs	r1, r1, r2
   34cb4:	str	r0, [fp, #-3528]	; 0xfffff238
   34cb8:	str	r1, [fp, #-3532]	; 0xfffff234
   34cbc:	blt	34e14 <__assert_fail@plt+0x2225c>
   34cc0:	b	34e38 <__assert_fail@plt+0x22280>
   34cc4:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   34cc8:	ldr	r1, [r0]
   34ccc:	ldr	r0, [r0, #4]
   34cd0:	orr	r0, r1, r0
   34cd4:	cmp	r0, #0
   34cd8:	bne	34ce4 <__assert_fail@plt+0x2212c>
   34cdc:	b	34ce0 <__assert_fail@plt+0x22128>
   34ce0:	b	34e38 <__assert_fail@plt+0x22280>
   34ce4:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   34ce8:	ldr	r0, [r0, #-52]	; 0xffffffcc
   34cec:	cmn	r0, #1
   34cf0:	bgt	34db8 <__assert_fail@plt+0x22200>
   34cf4:	b	34cf8 <__assert_fail@plt+0x22140>
   34cf8:	b	34cfc <__assert_fail@plt+0x22144>
   34cfc:	b	34d6c <__assert_fail@plt+0x221b4>
   34d00:	b	34d6c <__assert_fail@plt+0x221b4>
   34d04:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   34d08:	ldr	r1, [r0, #-56]	; 0xffffffc8
   34d0c:	ldr	r0, [r0, #-52]	; 0xffffffcc
   34d10:	and	r0, r1, r0
   34d14:	cmn	r0, #1
   34d18:	bne	34d6c <__assert_fail@plt+0x221b4>
   34d1c:	b	34d20 <__assert_fail@plt+0x22168>
   34d20:	b	34d24 <__assert_fail@plt+0x2216c>
   34d24:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   34d28:	ldr	r1, [r0]
   34d2c:	ldr	r0, [r0, #4]
   34d30:	rsbs	r1, r1, #0
   34d34:	rscs	r0, r0, #0
   34d38:	str	r1, [fp, #-3536]	; 0xfffff230
   34d3c:	str	r0, [fp, #-3540]	; 0xfffff22c
   34d40:	blt	34e14 <__assert_fail@plt+0x2225c>
   34d44:	b	34e38 <__assert_fail@plt+0x22280>
   34d48:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   34d4c:	ldr	r1, [r0]
   34d50:	ldr	r0, [r0, #4]
   34d54:	subs	r1, r1, #1
   34d58:	sbc	r0, r0, #0
   34d5c:	cmn	r0, #1
   34d60:	str	r1, [fp, #-3544]	; 0xfffff228
   34d64:	bgt	34e14 <__assert_fail@plt+0x2225c>
   34d68:	b	34e38 <__assert_fail@plt+0x22280>
   34d6c:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   34d70:	ldr	r2, [r0, #-56]	; 0xffffffc8
   34d74:	ldr	r3, [r0, #-52]	; 0xffffffcc
   34d78:	ldr	r1, [r0]
   34d7c:	ldr	r0, [r0, #4]
   34d80:	mov	ip, #0
   34d84:	str	r0, [fp, #-3548]	; 0xfffff224
   34d88:	mov	r0, ip
   34d8c:	str	r1, [fp, #-3552]	; 0xfffff220
   34d90:	mov	r1, ip
   34d94:	bl	77780 <__assert_fail@plt+0x64bc8>
   34d98:	ldr	r2, [fp, #-3552]	; 0xfffff220
   34d9c:	subs	r0, r0, r2
   34da0:	ldr	r2, [fp, #-3548]	; 0xfffff224
   34da4:	sbcs	r1, r1, r2
   34da8:	str	r0, [fp, #-3556]	; 0xfffff21c
   34dac:	str	r1, [fp, #-3560]	; 0xfffff218
   34db0:	blt	34e14 <__assert_fail@plt+0x2225c>
   34db4:	b	34e38 <__assert_fail@plt+0x22280>
   34db8:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   34dbc:	ldr	r1, [r0, #-56]	; 0xffffffc8
   34dc0:	ldr	r2, [r0, #-52]	; 0xffffffcc
   34dc4:	ldr	r3, [r0]
   34dc8:	ldr	r0, [r0, #4]
   34dcc:	movw	ip, #65535	; 0xffff
   34dd0:	mov	lr, #0
   34dd4:	str	r0, [fp, #-3564]	; 0xfffff214
   34dd8:	mov	r0, ip
   34ddc:	str	r1, [fp, #-3568]	; 0xfffff210
   34de0:	mov	r1, lr
   34de4:	str	r2, [fp, #-3572]	; 0xfffff20c
   34de8:	mov	r2, r3
   34dec:	ldr	r3, [fp, #-3564]	; 0xfffff214
   34df0:	bl	77780 <__assert_fail@plt+0x64bc8>
   34df4:	ldr	r2, [fp, #-3568]	; 0xfffff210
   34df8:	subs	r0, r0, r2
   34dfc:	ldr	r2, [fp, #-3572]	; 0xfffff20c
   34e00:	sbcs	r1, r1, r2
   34e04:	str	r0, [fp, #-3576]	; 0xfffff208
   34e08:	str	r1, [fp, #-3580]	; 0xfffff204
   34e0c:	bge	34e38 <__assert_fail@plt+0x22280>
   34e10:	b	34e14 <__assert_fail@plt+0x2225c>
   34e14:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   34e18:	ldr	r1, [r0, #-56]	; 0xffffffc8
   34e1c:	ldr	r0, [r0]
   34e20:	mul	r0, r1, r0
   34e24:	uxth	r0, r0
   34e28:	mov	r1, #0
   34e2c:	str	r1, [fp, #-1340]	; 0xfffffac4
   34e30:	str	r0, [fp, #-1344]	; 0xfffffac0
   34e34:	b	36564 <__assert_fail@plt+0x239ac>
   34e38:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   34e3c:	ldr	r1, [r0, #-56]	; 0xffffffc8
   34e40:	ldr	r0, [r0]
   34e44:	mul	r0, r1, r0
   34e48:	uxth	r0, r0
   34e4c:	mov	r1, #0
   34e50:	str	r1, [fp, #-1340]	; 0xfffffac4
   34e54:	str	r0, [fp, #-1344]	; 0xfffffac0
   34e58:	b	36568 <__assert_fail@plt+0x239b0>
   34e5c:	b	3561c <__assert_fail@plt+0x22a64>
   34e60:	b	34e64 <__assert_fail@plt+0x222ac>
   34e64:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   34e68:	ldr	r0, [r0, #4]
   34e6c:	cmn	r0, #1
   34e70:	bgt	350b0 <__assert_fail@plt+0x224f8>
   34e74:	b	34e78 <__assert_fail@plt+0x222c0>
   34e78:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   34e7c:	ldr	r0, [r0, #-52]	; 0xffffffcc
   34e80:	cmn	r0, #1
   34e84:	bgt	34fa8 <__assert_fail@plt+0x223f0>
   34e88:	b	34e8c <__assert_fail@plt+0x222d4>
   34e8c:	b	34e90 <__assert_fail@plt+0x222d8>
   34e90:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   34e94:	ldr	r1, [r0, #-56]	; 0xffffffc8
   34e98:	ldr	r2, [r0, #-52]	; 0xffffffcc
   34e9c:	ldr	r3, [r0]
   34ea0:	ldr	r0, [r0, #4]
   34ea4:	mvn	ip, #-2147483648	; 0x80000000
   34ea8:	mov	lr, #0
   34eac:	str	r0, [fp, #-3584]	; 0xfffff200
   34eb0:	mov	r0, ip
   34eb4:	str	r1, [fp, #-3588]	; 0xfffff1fc
   34eb8:	mov	r1, lr
   34ebc:	str	r2, [fp, #-3592]	; 0xfffff1f8
   34ec0:	mov	r2, r3
   34ec4:	ldr	r3, [fp, #-3584]	; 0xfffff200
   34ec8:	bl	77780 <__assert_fail@plt+0x64bc8>
   34ecc:	ldr	r2, [fp, #-3588]	; 0xfffff1fc
   34ed0:	subs	r0, r2, r0
   34ed4:	ldr	r2, [fp, #-3592]	; 0xfffff1f8
   34ed8:	sbcs	r1, r2, r1
   34edc:	str	r0, [fp, #-3596]	; 0xfffff1f4
   34ee0:	str	r1, [sp, #3600]	; 0xe10
   34ee4:	blt	35218 <__assert_fail@plt+0x22660>
   34ee8:	b	35238 <__assert_fail@plt+0x22680>
   34eec:	b	34ef0 <__assert_fail@plt+0x22338>
   34ef0:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   34ef4:	ldr	r1, [r0]
   34ef8:	ldr	r0, [r0, #4]
   34efc:	eor	r0, r0, #-2147483648	; 0x80000000
   34f00:	orr	r0, r1, r0
   34f04:	cmp	r0, #0
   34f08:	beq	34f34 <__assert_fail@plt+0x2237c>
   34f0c:	b	34f48 <__assert_fail@plt+0x22390>
   34f10:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   34f14:	ldr	r1, [r0]
   34f18:	ldr	r0, [r0, #4]
   34f1c:	subs	r1, r1, #1
   34f20:	sbcs	r0, r0, #0
   34f24:	str	r1, [sp, #3596]	; 0xe0c
   34f28:	str	r0, [sp, #3592]	; 0xe08
   34f2c:	blt	34f48 <__assert_fail@plt+0x22390>
   34f30:	b	34f34 <__assert_fail@plt+0x2237c>
   34f34:	mov	r0, #0
   34f38:	mov	r1, r0
   34f3c:	str	r1, [sp, #3588]	; 0xe04
   34f40:	str	r0, [sp, #3584]	; 0xe00
   34f44:	b	34f74 <__assert_fail@plt+0x223bc>
   34f48:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   34f4c:	ldr	r1, [r0]
   34f50:	ldr	r0, [r0, #4]
   34f54:	rsbs	r2, r1, #0
   34f58:	rsc	r3, r0, #0
   34f5c:	mvn	r0, #-2147483648	; 0x80000000
   34f60:	mov	r1, #0
   34f64:	bl	77780 <__assert_fail@plt+0x64bc8>
   34f68:	str	r0, [sp, #3588]	; 0xe04
   34f6c:	str	r1, [sp, #3584]	; 0xe00
   34f70:	b	34f74 <__assert_fail@plt+0x223bc>
   34f74:	ldr	r0, [sp, #3584]	; 0xe00
   34f78:	ldr	r1, [sp, #3588]	; 0xe04
   34f7c:	ldr	r2, [fp, #-1288]	; 0xfffffaf8
   34f80:	ldr	r3, [r2, #-56]	; 0xffffffc8
   34f84:	ldr	r2, [r2, #-52]	; 0xffffffcc
   34f88:	mvn	r2, r2
   34f8c:	mvn	r3, r3
   34f90:	subs	r1, r3, r1
   34f94:	sbcs	r0, r2, r0
   34f98:	str	r1, [sp, #3580]	; 0xdfc
   34f9c:	str	r0, [sp, #3576]	; 0xdf8
   34fa0:	bge	35218 <__assert_fail@plt+0x22660>
   34fa4:	b	35238 <__assert_fail@plt+0x22680>
   34fa8:	b	34fac <__assert_fail@plt+0x223f4>
   34fac:	b	35054 <__assert_fail@plt+0x2249c>
   34fb0:	b	35054 <__assert_fail@plt+0x2249c>
   34fb4:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   34fb8:	ldr	r1, [r0]
   34fbc:	ldr	r0, [r0, #4]
   34fc0:	and	r0, r1, r0
   34fc4:	cmn	r0, #1
   34fc8:	bne	35054 <__assert_fail@plt+0x2249c>
   34fcc:	b	34fd0 <__assert_fail@plt+0x22418>
   34fd0:	b	34fd4 <__assert_fail@plt+0x2241c>
   34fd4:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   34fd8:	ldr	r1, [r0, #-56]	; 0xffffffc8
   34fdc:	ldr	r0, [r0, #-52]	; 0xffffffcc
   34fe0:	adds	r1, r1, #-2147483648	; 0x80000000
   34fe4:	sbc	r0, r0, #0
   34fe8:	rsbs	r1, r1, #0
   34fec:	rscs	r0, r0, #0
   34ff0:	str	r1, [sp, #3572]	; 0xdf4
   34ff4:	str	r0, [sp, #3568]	; 0xdf0
   34ff8:	blt	35218 <__assert_fail@plt+0x22660>
   34ffc:	b	35238 <__assert_fail@plt+0x22680>
   35000:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   35004:	ldr	r1, [r0, #-56]	; 0xffffffc8
   35008:	ldr	r0, [r0, #-52]	; 0xffffffcc
   3500c:	subs	r1, r1, #1
   35010:	sbcs	r0, r0, #0
   35014:	str	r1, [sp, #3564]	; 0xdec
   35018:	str	r0, [sp, #3560]	; 0xde8
   3501c:	blt	35238 <__assert_fail@plt+0x22680>
   35020:	b	35024 <__assert_fail@plt+0x2246c>
   35024:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   35028:	ldr	r1, [r0, #-56]	; 0xffffffc8
   3502c:	ldr	r0, [r0, #-52]	; 0xffffffcc
   35030:	subs	r1, r1, #1
   35034:	sbc	r0, r0, #0
   35038:	mvn	r2, #-2147483648	; 0x80000000
   3503c:	subs	r1, r2, r1
   35040:	rscs	r0, r0, #0
   35044:	str	r1, [sp, #3556]	; 0xde4
   35048:	str	r0, [sp, #3552]	; 0xde0
   3504c:	blt	35218 <__assert_fail@plt+0x22660>
   35050:	b	35238 <__assert_fail@plt+0x22680>
   35054:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   35058:	ldr	r1, [r0, #-56]	; 0xffffffc8
   3505c:	ldr	r2, [r0, #-52]	; 0xffffffcc
   35060:	ldr	r3, [r0]
   35064:	ldr	r0, [r0, #4]
   35068:	mov	ip, #-2147483648	; 0x80000000
   3506c:	mvn	lr, #0
   35070:	str	r0, [sp, #3548]	; 0xddc
   35074:	mov	r0, ip
   35078:	str	r1, [sp, #3544]	; 0xdd8
   3507c:	mov	r1, lr
   35080:	str	r2, [sp, #3540]	; 0xdd4
   35084:	mov	r2, r3
   35088:	ldr	r3, [sp, #3548]	; 0xddc
   3508c:	bl	77780 <__assert_fail@plt+0x64bc8>
   35090:	ldr	r2, [sp, #3544]	; 0xdd8
   35094:	subs	r0, r0, r2
   35098:	ldr	r2, [sp, #3540]	; 0xdd4
   3509c:	sbcs	r1, r1, r2
   350a0:	str	r0, [sp, #3536]	; 0xdd0
   350a4:	str	r1, [sp, #3532]	; 0xdcc
   350a8:	blt	35218 <__assert_fail@plt+0x22660>
   350ac:	b	35238 <__assert_fail@plt+0x22680>
   350b0:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   350b4:	ldr	r1, [r0]
   350b8:	ldr	r0, [r0, #4]
   350bc:	orr	r0, r1, r0
   350c0:	cmp	r0, #0
   350c4:	bne	350d0 <__assert_fail@plt+0x22518>
   350c8:	b	350cc <__assert_fail@plt+0x22514>
   350cc:	b	35238 <__assert_fail@plt+0x22680>
   350d0:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   350d4:	ldr	r0, [r0, #-52]	; 0xffffffcc
   350d8:	cmn	r0, #1
   350dc:	bgt	351bc <__assert_fail@plt+0x22604>
   350e0:	b	350e4 <__assert_fail@plt+0x2252c>
   350e4:	b	350e8 <__assert_fail@plt+0x22530>
   350e8:	b	3516c <__assert_fail@plt+0x225b4>
   350ec:	b	3516c <__assert_fail@plt+0x225b4>
   350f0:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   350f4:	ldr	r1, [r0, #-56]	; 0xffffffc8
   350f8:	ldr	r0, [r0, #-52]	; 0xffffffcc
   350fc:	and	r0, r1, r0
   35100:	cmn	r0, #1
   35104:	bne	3516c <__assert_fail@plt+0x225b4>
   35108:	b	3510c <__assert_fail@plt+0x22554>
   3510c:	b	35110 <__assert_fail@plt+0x22558>
   35110:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   35114:	ldr	r1, [r0]
   35118:	ldr	r0, [r0, #4]
   3511c:	adds	r1, r1, #-2147483648	; 0x80000000
   35120:	sbc	r0, r0, #0
   35124:	rsbs	r1, r1, #0
   35128:	rscs	r0, r0, #0
   3512c:	str	r1, [sp, #3528]	; 0xdc8
   35130:	str	r0, [sp, #3524]	; 0xdc4
   35134:	blt	35218 <__assert_fail@plt+0x22660>
   35138:	b	35238 <__assert_fail@plt+0x22680>
   3513c:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   35140:	ldr	r1, [r0]
   35144:	ldr	r0, [r0, #4]
   35148:	subs	r1, r1, #1
   3514c:	sbc	r0, r0, #0
   35150:	mvn	r2, #-2147483648	; 0x80000000
   35154:	subs	r1, r2, r1
   35158:	rscs	r0, r0, #0
   3515c:	str	r1, [sp, #3520]	; 0xdc0
   35160:	str	r0, [sp, #3516]	; 0xdbc
   35164:	blt	35218 <__assert_fail@plt+0x22660>
   35168:	b	35238 <__assert_fail@plt+0x22680>
   3516c:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   35170:	ldr	r2, [r0, #-56]	; 0xffffffc8
   35174:	ldr	r3, [r0, #-52]	; 0xffffffcc
   35178:	ldr	r1, [r0]
   3517c:	ldr	r0, [r0, #4]
   35180:	mov	ip, #-2147483648	; 0x80000000
   35184:	mvn	lr, #0
   35188:	str	r0, [sp, #3512]	; 0xdb8
   3518c:	mov	r0, ip
   35190:	str	r1, [sp, #3508]	; 0xdb4
   35194:	mov	r1, lr
   35198:	bl	77780 <__assert_fail@plt+0x64bc8>
   3519c:	ldr	r2, [sp, #3508]	; 0xdb4
   351a0:	subs	r0, r0, r2
   351a4:	ldr	r2, [sp, #3512]	; 0xdb8
   351a8:	sbcs	r1, r1, r2
   351ac:	str	r0, [sp, #3504]	; 0xdb0
   351b0:	str	r1, [sp, #3500]	; 0xdac
   351b4:	blt	35218 <__assert_fail@plt+0x22660>
   351b8:	b	35238 <__assert_fail@plt+0x22680>
   351bc:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   351c0:	ldr	r1, [r0, #-56]	; 0xffffffc8
   351c4:	ldr	r2, [r0, #-52]	; 0xffffffcc
   351c8:	ldr	r3, [r0]
   351cc:	ldr	r0, [r0, #4]
   351d0:	mvn	ip, #-2147483648	; 0x80000000
   351d4:	mov	lr, #0
   351d8:	str	r0, [sp, #3496]	; 0xda8
   351dc:	mov	r0, ip
   351e0:	str	r1, [sp, #3492]	; 0xda4
   351e4:	mov	r1, lr
   351e8:	str	r2, [sp, #3488]	; 0xda0
   351ec:	mov	r2, r3
   351f0:	ldr	r3, [sp, #3496]	; 0xda8
   351f4:	bl	77780 <__assert_fail@plt+0x64bc8>
   351f8:	ldr	r2, [sp, #3492]	; 0xda4
   351fc:	subs	r0, r0, r2
   35200:	ldr	r2, [sp, #3488]	; 0xda0
   35204:	sbcs	r1, r1, r2
   35208:	str	r0, [sp, #3484]	; 0xd9c
   3520c:	str	r1, [sp, #3480]	; 0xd98
   35210:	bge	35238 <__assert_fail@plt+0x22680>
   35214:	b	35218 <__assert_fail@plt+0x22660>
   35218:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3521c:	ldr	r1, [r0, #-56]	; 0xffffffc8
   35220:	ldr	r0, [r0]
   35224:	mul	r0, r1, r0
   35228:	asr	r1, r0, #31
   3522c:	str	r0, [fp, #-1344]	; 0xfffffac0
   35230:	str	r1, [fp, #-1340]	; 0xfffffac4
   35234:	b	36564 <__assert_fail@plt+0x239ac>
   35238:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3523c:	ldr	r1, [r0, #-56]	; 0xffffffc8
   35240:	ldr	r0, [r0]
   35244:	mul	r0, r1, r0
   35248:	asr	r1, r0, #31
   3524c:	str	r0, [fp, #-1344]	; 0xfffffac0
   35250:	str	r1, [fp, #-1340]	; 0xfffffac4
   35254:	b	36568 <__assert_fail@plt+0x239b0>
   35258:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3525c:	ldr	r0, [r0, #4]
   35260:	cmn	r0, #1
   35264:	bgt	3548c <__assert_fail@plt+0x228d4>
   35268:	b	3526c <__assert_fail@plt+0x226b4>
   3526c:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   35270:	ldr	r0, [r0, #-52]	; 0xffffffcc
   35274:	cmn	r0, #1
   35278:	bgt	3539c <__assert_fail@plt+0x227e4>
   3527c:	b	35280 <__assert_fail@plt+0x226c8>
   35280:	b	35284 <__assert_fail@plt+0x226cc>
   35284:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   35288:	ldr	r1, [r0, #-56]	; 0xffffffc8
   3528c:	ldr	r2, [r0, #-52]	; 0xffffffcc
   35290:	ldr	r3, [r0]
   35294:	ldr	r0, [r0, #4]
   35298:	mvn	ip, #0
   3529c:	mov	lr, #0
   352a0:	str	r0, [sp, #3476]	; 0xd94
   352a4:	mov	r0, ip
   352a8:	str	r1, [sp, #3472]	; 0xd90
   352ac:	mov	r1, lr
   352b0:	str	r2, [sp, #3468]	; 0xd8c
   352b4:	mov	r2, r3
   352b8:	ldr	r3, [sp, #3476]	; 0xd94
   352bc:	bl	77780 <__assert_fail@plt+0x64bc8>
   352c0:	ldr	r2, [sp, #3472]	; 0xd90
   352c4:	subs	r0, r2, r0
   352c8:	ldr	r2, [sp, #3468]	; 0xd8c
   352cc:	sbcs	r1, r2, r1
   352d0:	str	r0, [sp, #3464]	; 0xd88
   352d4:	str	r1, [sp, #3460]	; 0xd84
   352d8:	blt	355dc <__assert_fail@plt+0x22a24>
   352dc:	b	355fc <__assert_fail@plt+0x22a44>
   352e0:	b	352e4 <__assert_fail@plt+0x2272c>
   352e4:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   352e8:	ldr	r1, [r0]
   352ec:	ldr	r0, [r0, #4]
   352f0:	eor	r0, r0, #-2147483648	; 0x80000000
   352f4:	orr	r0, r1, r0
   352f8:	cmp	r0, #0
   352fc:	beq	35328 <__assert_fail@plt+0x22770>
   35300:	b	3533c <__assert_fail@plt+0x22784>
   35304:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   35308:	ldr	r1, [r0]
   3530c:	ldr	r0, [r0, #4]
   35310:	subs	r1, r1, #1
   35314:	sbcs	r0, r0, #0
   35318:	str	r1, [sp, #3456]	; 0xd80
   3531c:	str	r0, [sp, #3452]	; 0xd7c
   35320:	blt	3533c <__assert_fail@plt+0x22784>
   35324:	b	35328 <__assert_fail@plt+0x22770>
   35328:	mov	r0, #0
   3532c:	mov	r1, r0
   35330:	str	r1, [sp, #3448]	; 0xd78
   35334:	str	r0, [sp, #3444]	; 0xd74
   35338:	b	35368 <__assert_fail@plt+0x227b0>
   3533c:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   35340:	ldr	r1, [r0]
   35344:	ldr	r0, [r0, #4]
   35348:	rsbs	r2, r1, #0
   3534c:	rsc	r3, r0, #0
   35350:	mvn	r0, #0
   35354:	mov	r1, #0
   35358:	bl	77780 <__assert_fail@plt+0x64bc8>
   3535c:	str	r0, [sp, #3448]	; 0xd78
   35360:	str	r1, [sp, #3444]	; 0xd74
   35364:	b	35368 <__assert_fail@plt+0x227b0>
   35368:	ldr	r0, [sp, #3444]	; 0xd74
   3536c:	ldr	r1, [sp, #3448]	; 0xd78
   35370:	ldr	r2, [fp, #-1288]	; 0xfffffaf8
   35374:	ldr	r3, [r2, #-56]	; 0xffffffc8
   35378:	ldr	r2, [r2, #-52]	; 0xffffffcc
   3537c:	mvn	r2, r2
   35380:	mvn	r3, r3
   35384:	subs	r1, r3, r1
   35388:	sbcs	r0, r2, r0
   3538c:	str	r1, [sp, #3440]	; 0xd70
   35390:	str	r0, [sp, #3436]	; 0xd6c
   35394:	bge	355dc <__assert_fail@plt+0x22a24>
   35398:	b	355fc <__assert_fail@plt+0x22a44>
   3539c:	b	353a0 <__assert_fail@plt+0x227e8>
   353a0:	b	35434 <__assert_fail@plt+0x2287c>
   353a4:	b	35434 <__assert_fail@plt+0x2287c>
   353a8:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   353ac:	ldr	r1, [r0]
   353b0:	ldr	r0, [r0, #4]
   353b4:	and	r0, r1, r0
   353b8:	cmn	r0, #1
   353bc:	bne	35434 <__assert_fail@plt+0x2287c>
   353c0:	b	353c4 <__assert_fail@plt+0x2280c>
   353c4:	b	353c8 <__assert_fail@plt+0x22810>
   353c8:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   353cc:	ldr	r1, [r0, #-56]	; 0xffffffc8
   353d0:	ldr	r0, [r0, #-52]	; 0xffffffcc
   353d4:	rsbs	r1, r1, #0
   353d8:	rscs	r0, r0, #0
   353dc:	str	r1, [sp, #3432]	; 0xd68
   353e0:	str	r0, [sp, #3428]	; 0xd64
   353e4:	blt	355dc <__assert_fail@plt+0x22a24>
   353e8:	b	355fc <__assert_fail@plt+0x22a44>
   353ec:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   353f0:	ldr	r1, [r0, #-56]	; 0xffffffc8
   353f4:	ldr	r0, [r0, #-52]	; 0xffffffcc
   353f8:	subs	r1, r1, #1
   353fc:	sbcs	r0, r0, #0
   35400:	str	r1, [sp, #3424]	; 0xd60
   35404:	str	r0, [sp, #3420]	; 0xd5c
   35408:	blt	355fc <__assert_fail@plt+0x22a44>
   3540c:	b	35410 <__assert_fail@plt+0x22858>
   35410:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   35414:	ldr	r1, [r0, #-56]	; 0xffffffc8
   35418:	ldr	r0, [r0, #-52]	; 0xffffffcc
   3541c:	subs	r1, r1, #1
   35420:	sbc	r0, r0, #0
   35424:	cmn	r0, #1
   35428:	str	r1, [sp, #3416]	; 0xd58
   3542c:	bgt	355dc <__assert_fail@plt+0x22a24>
   35430:	b	355fc <__assert_fail@plt+0x22a44>
   35434:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   35438:	ldr	r1, [r0, #-56]	; 0xffffffc8
   3543c:	ldr	r2, [r0, #-52]	; 0xffffffcc
   35440:	ldr	r3, [r0]
   35444:	ldr	r0, [r0, #4]
   35448:	mov	ip, #0
   3544c:	str	r0, [sp, #3412]	; 0xd54
   35450:	mov	r0, ip
   35454:	str	r1, [sp, #3408]	; 0xd50
   35458:	mov	r1, ip
   3545c:	str	r2, [sp, #3404]	; 0xd4c
   35460:	mov	r2, r3
   35464:	ldr	r3, [sp, #3412]	; 0xd54
   35468:	bl	77780 <__assert_fail@plt+0x64bc8>
   3546c:	ldr	r2, [sp, #3408]	; 0xd50
   35470:	subs	r0, r0, r2
   35474:	ldr	r2, [sp, #3404]	; 0xd4c
   35478:	sbcs	r1, r1, r2
   3547c:	str	r0, [sp, #3400]	; 0xd48
   35480:	str	r1, [sp, #3396]	; 0xd44
   35484:	blt	355dc <__assert_fail@plt+0x22a24>
   35488:	b	355fc <__assert_fail@plt+0x22a44>
   3548c:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   35490:	ldr	r1, [r0]
   35494:	ldr	r0, [r0, #4]
   35498:	orr	r0, r1, r0
   3549c:	cmp	r0, #0
   354a0:	bne	354ac <__assert_fail@plt+0x228f4>
   354a4:	b	354a8 <__assert_fail@plt+0x228f0>
   354a8:	b	355fc <__assert_fail@plt+0x22a44>
   354ac:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   354b0:	ldr	r0, [r0, #-52]	; 0xffffffcc
   354b4:	cmn	r0, #1
   354b8:	bgt	35580 <__assert_fail@plt+0x229c8>
   354bc:	b	354c0 <__assert_fail@plt+0x22908>
   354c0:	b	354c4 <__assert_fail@plt+0x2290c>
   354c4:	b	35534 <__assert_fail@plt+0x2297c>
   354c8:	b	35534 <__assert_fail@plt+0x2297c>
   354cc:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   354d0:	ldr	r1, [r0, #-56]	; 0xffffffc8
   354d4:	ldr	r0, [r0, #-52]	; 0xffffffcc
   354d8:	and	r0, r1, r0
   354dc:	cmn	r0, #1
   354e0:	bne	35534 <__assert_fail@plt+0x2297c>
   354e4:	b	354e8 <__assert_fail@plt+0x22930>
   354e8:	b	354ec <__assert_fail@plt+0x22934>
   354ec:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   354f0:	ldr	r1, [r0]
   354f4:	ldr	r0, [r0, #4]
   354f8:	rsbs	r1, r1, #0
   354fc:	rscs	r0, r0, #0
   35500:	str	r1, [sp, #3392]	; 0xd40
   35504:	str	r0, [sp, #3388]	; 0xd3c
   35508:	blt	355dc <__assert_fail@plt+0x22a24>
   3550c:	b	355fc <__assert_fail@plt+0x22a44>
   35510:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   35514:	ldr	r1, [r0]
   35518:	ldr	r0, [r0, #4]
   3551c:	subs	r1, r1, #1
   35520:	sbc	r0, r0, #0
   35524:	cmn	r0, #1
   35528:	str	r1, [sp, #3384]	; 0xd38
   3552c:	bgt	355dc <__assert_fail@plt+0x22a24>
   35530:	b	355fc <__assert_fail@plt+0x22a44>
   35534:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   35538:	ldr	r2, [r0, #-56]	; 0xffffffc8
   3553c:	ldr	r3, [r0, #-52]	; 0xffffffcc
   35540:	ldr	r1, [r0]
   35544:	ldr	r0, [r0, #4]
   35548:	mov	ip, #0
   3554c:	str	r0, [sp, #3380]	; 0xd34
   35550:	mov	r0, ip
   35554:	str	r1, [sp, #3376]	; 0xd30
   35558:	mov	r1, ip
   3555c:	bl	77780 <__assert_fail@plt+0x64bc8>
   35560:	ldr	r2, [sp, #3376]	; 0xd30
   35564:	subs	r0, r0, r2
   35568:	ldr	r2, [sp, #3380]	; 0xd34
   3556c:	sbcs	r1, r1, r2
   35570:	str	r0, [sp, #3372]	; 0xd2c
   35574:	str	r1, [sp, #3368]	; 0xd28
   35578:	blt	355dc <__assert_fail@plt+0x22a24>
   3557c:	b	355fc <__assert_fail@plt+0x22a44>
   35580:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   35584:	ldr	r1, [r0, #-56]	; 0xffffffc8
   35588:	ldr	r2, [r0, #-52]	; 0xffffffcc
   3558c:	ldr	r3, [r0]
   35590:	ldr	r0, [r0, #4]
   35594:	mvn	ip, #0
   35598:	mov	lr, #0
   3559c:	str	r0, [sp, #3364]	; 0xd24
   355a0:	mov	r0, ip
   355a4:	str	r1, [sp, #3360]	; 0xd20
   355a8:	mov	r1, lr
   355ac:	str	r2, [sp, #3356]	; 0xd1c
   355b0:	mov	r2, r3
   355b4:	ldr	r3, [sp, #3364]	; 0xd24
   355b8:	bl	77780 <__assert_fail@plt+0x64bc8>
   355bc:	ldr	r2, [sp, #3360]	; 0xd20
   355c0:	subs	r0, r0, r2
   355c4:	ldr	r2, [sp, #3356]	; 0xd1c
   355c8:	sbcs	r1, r1, r2
   355cc:	str	r0, [sp, #3352]	; 0xd18
   355d0:	str	r1, [sp, #3348]	; 0xd14
   355d4:	bge	355fc <__assert_fail@plt+0x22a44>
   355d8:	b	355dc <__assert_fail@plt+0x22a24>
   355dc:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   355e0:	ldr	r1, [r0, #-56]	; 0xffffffc8
   355e4:	ldr	r0, [r0]
   355e8:	mul	r0, r1, r0
   355ec:	mov	r1, #0
   355f0:	str	r1, [fp, #-1340]	; 0xfffffac4
   355f4:	str	r0, [fp, #-1344]	; 0xfffffac0
   355f8:	b	36564 <__assert_fail@plt+0x239ac>
   355fc:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   35600:	ldr	r1, [r0, #-56]	; 0xffffffc8
   35604:	ldr	r0, [r0]
   35608:	mul	r0, r1, r0
   3560c:	mov	r1, #0
   35610:	str	r1, [fp, #-1340]	; 0xfffffac4
   35614:	str	r0, [fp, #-1344]	; 0xfffffac0
   35618:	b	36568 <__assert_fail@plt+0x239b0>
   3561c:	b	35ddc <__assert_fail@plt+0x23224>
   35620:	b	35624 <__assert_fail@plt+0x22a6c>
   35624:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   35628:	ldr	r0, [r0, #4]
   3562c:	cmn	r0, #1
   35630:	bgt	35870 <__assert_fail@plt+0x22cb8>
   35634:	b	35638 <__assert_fail@plt+0x22a80>
   35638:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3563c:	ldr	r0, [r0, #-52]	; 0xffffffcc
   35640:	cmn	r0, #1
   35644:	bgt	35768 <__assert_fail@plt+0x22bb0>
   35648:	b	3564c <__assert_fail@plt+0x22a94>
   3564c:	b	35650 <__assert_fail@plt+0x22a98>
   35650:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   35654:	ldr	r1, [r0, #-56]	; 0xffffffc8
   35658:	ldr	r2, [r0, #-52]	; 0xffffffcc
   3565c:	ldr	r3, [r0]
   35660:	ldr	r0, [r0, #4]
   35664:	mvn	ip, #-2147483648	; 0x80000000
   35668:	mov	lr, #0
   3566c:	str	r0, [sp, #3344]	; 0xd10
   35670:	mov	r0, ip
   35674:	str	r1, [sp, #3340]	; 0xd0c
   35678:	mov	r1, lr
   3567c:	str	r2, [sp, #3336]	; 0xd08
   35680:	mov	r2, r3
   35684:	ldr	r3, [sp, #3344]	; 0xd10
   35688:	bl	77780 <__assert_fail@plt+0x64bc8>
   3568c:	ldr	r2, [sp, #3340]	; 0xd0c
   35690:	subs	r0, r2, r0
   35694:	ldr	r2, [sp, #3336]	; 0xd08
   35698:	sbcs	r1, r2, r1
   3569c:	str	r0, [sp, #3332]	; 0xd04
   356a0:	str	r1, [sp, #3328]	; 0xd00
   356a4:	blt	359d8 <__assert_fail@plt+0x22e20>
   356a8:	b	359f8 <__assert_fail@plt+0x22e40>
   356ac:	b	356b0 <__assert_fail@plt+0x22af8>
   356b0:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   356b4:	ldr	r1, [r0]
   356b8:	ldr	r0, [r0, #4]
   356bc:	eor	r0, r0, #-2147483648	; 0x80000000
   356c0:	orr	r0, r1, r0
   356c4:	cmp	r0, #0
   356c8:	beq	356f4 <__assert_fail@plt+0x22b3c>
   356cc:	b	35708 <__assert_fail@plt+0x22b50>
   356d0:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   356d4:	ldr	r1, [r0]
   356d8:	ldr	r0, [r0, #4]
   356dc:	subs	r1, r1, #1
   356e0:	sbcs	r0, r0, #0
   356e4:	str	r1, [sp, #3324]	; 0xcfc
   356e8:	str	r0, [sp, #3320]	; 0xcf8
   356ec:	blt	35708 <__assert_fail@plt+0x22b50>
   356f0:	b	356f4 <__assert_fail@plt+0x22b3c>
   356f4:	mov	r0, #0
   356f8:	mov	r1, r0
   356fc:	str	r1, [sp, #3316]	; 0xcf4
   35700:	str	r0, [sp, #3312]	; 0xcf0
   35704:	b	35734 <__assert_fail@plt+0x22b7c>
   35708:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3570c:	ldr	r1, [r0]
   35710:	ldr	r0, [r0, #4]
   35714:	rsbs	r2, r1, #0
   35718:	rsc	r3, r0, #0
   3571c:	mvn	r0, #-2147483648	; 0x80000000
   35720:	mov	r1, #0
   35724:	bl	77780 <__assert_fail@plt+0x64bc8>
   35728:	str	r0, [sp, #3316]	; 0xcf4
   3572c:	str	r1, [sp, #3312]	; 0xcf0
   35730:	b	35734 <__assert_fail@plt+0x22b7c>
   35734:	ldr	r0, [sp, #3312]	; 0xcf0
   35738:	ldr	r1, [sp, #3316]	; 0xcf4
   3573c:	ldr	r2, [fp, #-1288]	; 0xfffffaf8
   35740:	ldr	r3, [r2, #-56]	; 0xffffffc8
   35744:	ldr	r2, [r2, #-52]	; 0xffffffcc
   35748:	mvn	r2, r2
   3574c:	mvn	r3, r3
   35750:	subs	r1, r3, r1
   35754:	sbcs	r0, r2, r0
   35758:	str	r1, [sp, #3308]	; 0xcec
   3575c:	str	r0, [sp, #3304]	; 0xce8
   35760:	bge	359d8 <__assert_fail@plt+0x22e20>
   35764:	b	359f8 <__assert_fail@plt+0x22e40>
   35768:	b	3576c <__assert_fail@plt+0x22bb4>
   3576c:	b	35814 <__assert_fail@plt+0x22c5c>
   35770:	b	35814 <__assert_fail@plt+0x22c5c>
   35774:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   35778:	ldr	r1, [r0]
   3577c:	ldr	r0, [r0, #4]
   35780:	and	r0, r1, r0
   35784:	cmn	r0, #1
   35788:	bne	35814 <__assert_fail@plt+0x22c5c>
   3578c:	b	35790 <__assert_fail@plt+0x22bd8>
   35790:	b	35794 <__assert_fail@plt+0x22bdc>
   35794:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   35798:	ldr	r1, [r0, #-56]	; 0xffffffc8
   3579c:	ldr	r0, [r0, #-52]	; 0xffffffcc
   357a0:	adds	r1, r1, #-2147483648	; 0x80000000
   357a4:	sbc	r0, r0, #0
   357a8:	rsbs	r1, r1, #0
   357ac:	rscs	r0, r0, #0
   357b0:	str	r1, [sp, #3300]	; 0xce4
   357b4:	str	r0, [sp, #3296]	; 0xce0
   357b8:	blt	359d8 <__assert_fail@plt+0x22e20>
   357bc:	b	359f8 <__assert_fail@plt+0x22e40>
   357c0:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   357c4:	ldr	r1, [r0, #-56]	; 0xffffffc8
   357c8:	ldr	r0, [r0, #-52]	; 0xffffffcc
   357cc:	subs	r1, r1, #1
   357d0:	sbcs	r0, r0, #0
   357d4:	str	r1, [sp, #3292]	; 0xcdc
   357d8:	str	r0, [sp, #3288]	; 0xcd8
   357dc:	blt	359f8 <__assert_fail@plt+0x22e40>
   357e0:	b	357e4 <__assert_fail@plt+0x22c2c>
   357e4:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   357e8:	ldr	r1, [r0, #-56]	; 0xffffffc8
   357ec:	ldr	r0, [r0, #-52]	; 0xffffffcc
   357f0:	subs	r1, r1, #1
   357f4:	sbc	r0, r0, #0
   357f8:	mvn	r2, #-2147483648	; 0x80000000
   357fc:	subs	r1, r2, r1
   35800:	rscs	r0, r0, #0
   35804:	str	r1, [sp, #3284]	; 0xcd4
   35808:	str	r0, [sp, #3280]	; 0xcd0
   3580c:	blt	359d8 <__assert_fail@plt+0x22e20>
   35810:	b	359f8 <__assert_fail@plt+0x22e40>
   35814:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   35818:	ldr	r1, [r0, #-56]	; 0xffffffc8
   3581c:	ldr	r2, [r0, #-52]	; 0xffffffcc
   35820:	ldr	r3, [r0]
   35824:	ldr	r0, [r0, #4]
   35828:	mov	ip, #-2147483648	; 0x80000000
   3582c:	mvn	lr, #0
   35830:	str	r0, [sp, #3276]	; 0xccc
   35834:	mov	r0, ip
   35838:	str	r1, [sp, #3272]	; 0xcc8
   3583c:	mov	r1, lr
   35840:	str	r2, [sp, #3268]	; 0xcc4
   35844:	mov	r2, r3
   35848:	ldr	r3, [sp, #3276]	; 0xccc
   3584c:	bl	77780 <__assert_fail@plt+0x64bc8>
   35850:	ldr	r2, [sp, #3272]	; 0xcc8
   35854:	subs	r0, r0, r2
   35858:	ldr	r2, [sp, #3268]	; 0xcc4
   3585c:	sbcs	r1, r1, r2
   35860:	str	r0, [sp, #3264]	; 0xcc0
   35864:	str	r1, [sp, #3260]	; 0xcbc
   35868:	blt	359d8 <__assert_fail@plt+0x22e20>
   3586c:	b	359f8 <__assert_fail@plt+0x22e40>
   35870:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   35874:	ldr	r1, [r0]
   35878:	ldr	r0, [r0, #4]
   3587c:	orr	r0, r1, r0
   35880:	cmp	r0, #0
   35884:	bne	35890 <__assert_fail@plt+0x22cd8>
   35888:	b	3588c <__assert_fail@plt+0x22cd4>
   3588c:	b	359f8 <__assert_fail@plt+0x22e40>
   35890:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   35894:	ldr	r0, [r0, #-52]	; 0xffffffcc
   35898:	cmn	r0, #1
   3589c:	bgt	3597c <__assert_fail@plt+0x22dc4>
   358a0:	b	358a4 <__assert_fail@plt+0x22cec>
   358a4:	b	358a8 <__assert_fail@plt+0x22cf0>
   358a8:	b	3592c <__assert_fail@plt+0x22d74>
   358ac:	b	3592c <__assert_fail@plt+0x22d74>
   358b0:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   358b4:	ldr	r1, [r0, #-56]	; 0xffffffc8
   358b8:	ldr	r0, [r0, #-52]	; 0xffffffcc
   358bc:	and	r0, r1, r0
   358c0:	cmn	r0, #1
   358c4:	bne	3592c <__assert_fail@plt+0x22d74>
   358c8:	b	358cc <__assert_fail@plt+0x22d14>
   358cc:	b	358d0 <__assert_fail@plt+0x22d18>
   358d0:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   358d4:	ldr	r1, [r0]
   358d8:	ldr	r0, [r0, #4]
   358dc:	adds	r1, r1, #-2147483648	; 0x80000000
   358e0:	sbc	r0, r0, #0
   358e4:	rsbs	r1, r1, #0
   358e8:	rscs	r0, r0, #0
   358ec:	str	r1, [sp, #3256]	; 0xcb8
   358f0:	str	r0, [sp, #3252]	; 0xcb4
   358f4:	blt	359d8 <__assert_fail@plt+0x22e20>
   358f8:	b	359f8 <__assert_fail@plt+0x22e40>
   358fc:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   35900:	ldr	r1, [r0]
   35904:	ldr	r0, [r0, #4]
   35908:	subs	r1, r1, #1
   3590c:	sbc	r0, r0, #0
   35910:	mvn	r2, #-2147483648	; 0x80000000
   35914:	subs	r1, r2, r1
   35918:	rscs	r0, r0, #0
   3591c:	str	r1, [sp, #3248]	; 0xcb0
   35920:	str	r0, [sp, #3244]	; 0xcac
   35924:	blt	359d8 <__assert_fail@plt+0x22e20>
   35928:	b	359f8 <__assert_fail@plt+0x22e40>
   3592c:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   35930:	ldr	r2, [r0, #-56]	; 0xffffffc8
   35934:	ldr	r3, [r0, #-52]	; 0xffffffcc
   35938:	ldr	r1, [r0]
   3593c:	ldr	r0, [r0, #4]
   35940:	mov	ip, #-2147483648	; 0x80000000
   35944:	mvn	lr, #0
   35948:	str	r0, [sp, #3240]	; 0xca8
   3594c:	mov	r0, ip
   35950:	str	r1, [sp, #3236]	; 0xca4
   35954:	mov	r1, lr
   35958:	bl	77780 <__assert_fail@plt+0x64bc8>
   3595c:	ldr	r2, [sp, #3236]	; 0xca4
   35960:	subs	r0, r0, r2
   35964:	ldr	r2, [sp, #3240]	; 0xca8
   35968:	sbcs	r1, r1, r2
   3596c:	str	r0, [sp, #3232]	; 0xca0
   35970:	str	r1, [sp, #3228]	; 0xc9c
   35974:	blt	359d8 <__assert_fail@plt+0x22e20>
   35978:	b	359f8 <__assert_fail@plt+0x22e40>
   3597c:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   35980:	ldr	r1, [r0, #-56]	; 0xffffffc8
   35984:	ldr	r2, [r0, #-52]	; 0xffffffcc
   35988:	ldr	r3, [r0]
   3598c:	ldr	r0, [r0, #4]
   35990:	mvn	ip, #-2147483648	; 0x80000000
   35994:	mov	lr, #0
   35998:	str	r0, [sp, #3224]	; 0xc98
   3599c:	mov	r0, ip
   359a0:	str	r1, [sp, #3220]	; 0xc94
   359a4:	mov	r1, lr
   359a8:	str	r2, [sp, #3216]	; 0xc90
   359ac:	mov	r2, r3
   359b0:	ldr	r3, [sp, #3224]	; 0xc98
   359b4:	bl	77780 <__assert_fail@plt+0x64bc8>
   359b8:	ldr	r2, [sp, #3220]	; 0xc94
   359bc:	subs	r0, r0, r2
   359c0:	ldr	r2, [sp, #3216]	; 0xc90
   359c4:	sbcs	r1, r1, r2
   359c8:	str	r0, [sp, #3212]	; 0xc8c
   359cc:	str	r1, [sp, #3208]	; 0xc88
   359d0:	bge	359f8 <__assert_fail@plt+0x22e40>
   359d4:	b	359d8 <__assert_fail@plt+0x22e20>
   359d8:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   359dc:	ldr	r1, [r0, #-56]	; 0xffffffc8
   359e0:	ldr	r0, [r0]
   359e4:	mul	r0, r1, r0
   359e8:	asr	r1, r0, #31
   359ec:	str	r0, [fp, #-1344]	; 0xfffffac0
   359f0:	str	r1, [fp, #-1340]	; 0xfffffac4
   359f4:	b	36564 <__assert_fail@plt+0x239ac>
   359f8:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   359fc:	ldr	r1, [r0, #-56]	; 0xffffffc8
   35a00:	ldr	r0, [r0]
   35a04:	mul	r0, r1, r0
   35a08:	asr	r1, r0, #31
   35a0c:	str	r0, [fp, #-1344]	; 0xfffffac0
   35a10:	str	r1, [fp, #-1340]	; 0xfffffac4
   35a14:	b	36568 <__assert_fail@plt+0x239b0>
   35a18:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   35a1c:	ldr	r0, [r0, #4]
   35a20:	cmn	r0, #1
   35a24:	bgt	35c4c <__assert_fail@plt+0x23094>
   35a28:	b	35a2c <__assert_fail@plt+0x22e74>
   35a2c:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   35a30:	ldr	r0, [r0, #-52]	; 0xffffffcc
   35a34:	cmn	r0, #1
   35a38:	bgt	35b5c <__assert_fail@plt+0x22fa4>
   35a3c:	b	35a40 <__assert_fail@plt+0x22e88>
   35a40:	b	35a44 <__assert_fail@plt+0x22e8c>
   35a44:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   35a48:	ldr	r1, [r0, #-56]	; 0xffffffc8
   35a4c:	ldr	r2, [r0, #-52]	; 0xffffffcc
   35a50:	ldr	r3, [r0]
   35a54:	ldr	r0, [r0, #4]
   35a58:	mvn	ip, #0
   35a5c:	mov	lr, #0
   35a60:	str	r0, [sp, #3204]	; 0xc84
   35a64:	mov	r0, ip
   35a68:	str	r1, [sp, #3200]	; 0xc80
   35a6c:	mov	r1, lr
   35a70:	str	r2, [sp, #3196]	; 0xc7c
   35a74:	mov	r2, r3
   35a78:	ldr	r3, [sp, #3204]	; 0xc84
   35a7c:	bl	77780 <__assert_fail@plt+0x64bc8>
   35a80:	ldr	r2, [sp, #3200]	; 0xc80
   35a84:	subs	r0, r2, r0
   35a88:	ldr	r2, [sp, #3196]	; 0xc7c
   35a8c:	sbcs	r1, r2, r1
   35a90:	str	r0, [sp, #3192]	; 0xc78
   35a94:	str	r1, [sp, #3188]	; 0xc74
   35a98:	blt	35d9c <__assert_fail@plt+0x231e4>
   35a9c:	b	35dbc <__assert_fail@plt+0x23204>
   35aa0:	b	35aa4 <__assert_fail@plt+0x22eec>
   35aa4:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   35aa8:	ldr	r1, [r0]
   35aac:	ldr	r0, [r0, #4]
   35ab0:	eor	r0, r0, #-2147483648	; 0x80000000
   35ab4:	orr	r0, r1, r0
   35ab8:	cmp	r0, #0
   35abc:	beq	35ae8 <__assert_fail@plt+0x22f30>
   35ac0:	b	35afc <__assert_fail@plt+0x22f44>
   35ac4:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   35ac8:	ldr	r1, [r0]
   35acc:	ldr	r0, [r0, #4]
   35ad0:	subs	r1, r1, #1
   35ad4:	sbcs	r0, r0, #0
   35ad8:	str	r1, [sp, #3184]	; 0xc70
   35adc:	str	r0, [sp, #3180]	; 0xc6c
   35ae0:	blt	35afc <__assert_fail@plt+0x22f44>
   35ae4:	b	35ae8 <__assert_fail@plt+0x22f30>
   35ae8:	mov	r0, #0
   35aec:	mov	r1, r0
   35af0:	str	r1, [sp, #3176]	; 0xc68
   35af4:	str	r0, [sp, #3172]	; 0xc64
   35af8:	b	35b28 <__assert_fail@plt+0x22f70>
   35afc:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   35b00:	ldr	r1, [r0]
   35b04:	ldr	r0, [r0, #4]
   35b08:	rsbs	r2, r1, #0
   35b0c:	rsc	r3, r0, #0
   35b10:	mvn	r0, #0
   35b14:	mov	r1, #0
   35b18:	bl	77780 <__assert_fail@plt+0x64bc8>
   35b1c:	str	r0, [sp, #3176]	; 0xc68
   35b20:	str	r1, [sp, #3172]	; 0xc64
   35b24:	b	35b28 <__assert_fail@plt+0x22f70>
   35b28:	ldr	r0, [sp, #3172]	; 0xc64
   35b2c:	ldr	r1, [sp, #3176]	; 0xc68
   35b30:	ldr	r2, [fp, #-1288]	; 0xfffffaf8
   35b34:	ldr	r3, [r2, #-56]	; 0xffffffc8
   35b38:	ldr	r2, [r2, #-52]	; 0xffffffcc
   35b3c:	mvn	r2, r2
   35b40:	mvn	r3, r3
   35b44:	subs	r1, r3, r1
   35b48:	sbcs	r0, r2, r0
   35b4c:	str	r1, [sp, #3168]	; 0xc60
   35b50:	str	r0, [sp, #3164]	; 0xc5c
   35b54:	bge	35d9c <__assert_fail@plt+0x231e4>
   35b58:	b	35dbc <__assert_fail@plt+0x23204>
   35b5c:	b	35b60 <__assert_fail@plt+0x22fa8>
   35b60:	b	35bf4 <__assert_fail@plt+0x2303c>
   35b64:	b	35bf4 <__assert_fail@plt+0x2303c>
   35b68:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   35b6c:	ldr	r1, [r0]
   35b70:	ldr	r0, [r0, #4]
   35b74:	and	r0, r1, r0
   35b78:	cmn	r0, #1
   35b7c:	bne	35bf4 <__assert_fail@plt+0x2303c>
   35b80:	b	35b84 <__assert_fail@plt+0x22fcc>
   35b84:	b	35b88 <__assert_fail@plt+0x22fd0>
   35b88:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   35b8c:	ldr	r1, [r0, #-56]	; 0xffffffc8
   35b90:	ldr	r0, [r0, #-52]	; 0xffffffcc
   35b94:	rsbs	r1, r1, #0
   35b98:	rscs	r0, r0, #0
   35b9c:	str	r1, [sp, #3160]	; 0xc58
   35ba0:	str	r0, [sp, #3156]	; 0xc54
   35ba4:	blt	35d9c <__assert_fail@plt+0x231e4>
   35ba8:	b	35dbc <__assert_fail@plt+0x23204>
   35bac:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   35bb0:	ldr	r1, [r0, #-56]	; 0xffffffc8
   35bb4:	ldr	r0, [r0, #-52]	; 0xffffffcc
   35bb8:	subs	r1, r1, #1
   35bbc:	sbcs	r0, r0, #0
   35bc0:	str	r1, [sp, #3152]	; 0xc50
   35bc4:	str	r0, [sp, #3148]	; 0xc4c
   35bc8:	blt	35dbc <__assert_fail@plt+0x23204>
   35bcc:	b	35bd0 <__assert_fail@plt+0x23018>
   35bd0:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   35bd4:	ldr	r1, [r0, #-56]	; 0xffffffc8
   35bd8:	ldr	r0, [r0, #-52]	; 0xffffffcc
   35bdc:	subs	r1, r1, #1
   35be0:	sbc	r0, r0, #0
   35be4:	cmn	r0, #1
   35be8:	str	r1, [sp, #3144]	; 0xc48
   35bec:	bgt	35d9c <__assert_fail@plt+0x231e4>
   35bf0:	b	35dbc <__assert_fail@plt+0x23204>
   35bf4:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   35bf8:	ldr	r1, [r0, #-56]	; 0xffffffc8
   35bfc:	ldr	r2, [r0, #-52]	; 0xffffffcc
   35c00:	ldr	r3, [r0]
   35c04:	ldr	r0, [r0, #4]
   35c08:	mov	ip, #0
   35c0c:	str	r0, [sp, #3140]	; 0xc44
   35c10:	mov	r0, ip
   35c14:	str	r1, [sp, #3136]	; 0xc40
   35c18:	mov	r1, ip
   35c1c:	str	r2, [sp, #3132]	; 0xc3c
   35c20:	mov	r2, r3
   35c24:	ldr	r3, [sp, #3140]	; 0xc44
   35c28:	bl	77780 <__assert_fail@plt+0x64bc8>
   35c2c:	ldr	r2, [sp, #3136]	; 0xc40
   35c30:	subs	r0, r0, r2
   35c34:	ldr	r2, [sp, #3132]	; 0xc3c
   35c38:	sbcs	r1, r1, r2
   35c3c:	str	r0, [sp, #3128]	; 0xc38
   35c40:	str	r1, [sp, #3124]	; 0xc34
   35c44:	blt	35d9c <__assert_fail@plt+0x231e4>
   35c48:	b	35dbc <__assert_fail@plt+0x23204>
   35c4c:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   35c50:	ldr	r1, [r0]
   35c54:	ldr	r0, [r0, #4]
   35c58:	orr	r0, r1, r0
   35c5c:	cmp	r0, #0
   35c60:	bne	35c6c <__assert_fail@plt+0x230b4>
   35c64:	b	35c68 <__assert_fail@plt+0x230b0>
   35c68:	b	35dbc <__assert_fail@plt+0x23204>
   35c6c:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   35c70:	ldr	r0, [r0, #-52]	; 0xffffffcc
   35c74:	cmn	r0, #1
   35c78:	bgt	35d40 <__assert_fail@plt+0x23188>
   35c7c:	b	35c80 <__assert_fail@plt+0x230c8>
   35c80:	b	35c84 <__assert_fail@plt+0x230cc>
   35c84:	b	35cf4 <__assert_fail@plt+0x2313c>
   35c88:	b	35cf4 <__assert_fail@plt+0x2313c>
   35c8c:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   35c90:	ldr	r1, [r0, #-56]	; 0xffffffc8
   35c94:	ldr	r0, [r0, #-52]	; 0xffffffcc
   35c98:	and	r0, r1, r0
   35c9c:	cmn	r0, #1
   35ca0:	bne	35cf4 <__assert_fail@plt+0x2313c>
   35ca4:	b	35ca8 <__assert_fail@plt+0x230f0>
   35ca8:	b	35cac <__assert_fail@plt+0x230f4>
   35cac:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   35cb0:	ldr	r1, [r0]
   35cb4:	ldr	r0, [r0, #4]
   35cb8:	rsbs	r1, r1, #0
   35cbc:	rscs	r0, r0, #0
   35cc0:	str	r1, [sp, #3120]	; 0xc30
   35cc4:	str	r0, [sp, #3116]	; 0xc2c
   35cc8:	blt	35d9c <__assert_fail@plt+0x231e4>
   35ccc:	b	35dbc <__assert_fail@plt+0x23204>
   35cd0:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   35cd4:	ldr	r1, [r0]
   35cd8:	ldr	r0, [r0, #4]
   35cdc:	subs	r1, r1, #1
   35ce0:	sbc	r0, r0, #0
   35ce4:	cmn	r0, #1
   35ce8:	str	r1, [sp, #3112]	; 0xc28
   35cec:	bgt	35d9c <__assert_fail@plt+0x231e4>
   35cf0:	b	35dbc <__assert_fail@plt+0x23204>
   35cf4:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   35cf8:	ldr	r2, [r0, #-56]	; 0xffffffc8
   35cfc:	ldr	r3, [r0, #-52]	; 0xffffffcc
   35d00:	ldr	r1, [r0]
   35d04:	ldr	r0, [r0, #4]
   35d08:	mov	ip, #0
   35d0c:	str	r0, [sp, #3108]	; 0xc24
   35d10:	mov	r0, ip
   35d14:	str	r1, [sp, #3104]	; 0xc20
   35d18:	mov	r1, ip
   35d1c:	bl	77780 <__assert_fail@plt+0x64bc8>
   35d20:	ldr	r2, [sp, #3104]	; 0xc20
   35d24:	subs	r0, r0, r2
   35d28:	ldr	r2, [sp, #3108]	; 0xc24
   35d2c:	sbcs	r1, r1, r2
   35d30:	str	r0, [sp, #3100]	; 0xc1c
   35d34:	str	r1, [sp, #3096]	; 0xc18
   35d38:	blt	35d9c <__assert_fail@plt+0x231e4>
   35d3c:	b	35dbc <__assert_fail@plt+0x23204>
   35d40:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   35d44:	ldr	r1, [r0, #-56]	; 0xffffffc8
   35d48:	ldr	r2, [r0, #-52]	; 0xffffffcc
   35d4c:	ldr	r3, [r0]
   35d50:	ldr	r0, [r0, #4]
   35d54:	mvn	ip, #0
   35d58:	mov	lr, #0
   35d5c:	str	r0, [sp, #3092]	; 0xc14
   35d60:	mov	r0, ip
   35d64:	str	r1, [sp, #3088]	; 0xc10
   35d68:	mov	r1, lr
   35d6c:	str	r2, [sp, #3084]	; 0xc0c
   35d70:	mov	r2, r3
   35d74:	ldr	r3, [sp, #3092]	; 0xc14
   35d78:	bl	77780 <__assert_fail@plt+0x64bc8>
   35d7c:	ldr	r2, [sp, #3088]	; 0xc10
   35d80:	subs	r0, r0, r2
   35d84:	ldr	r2, [sp, #3084]	; 0xc0c
   35d88:	sbcs	r1, r1, r2
   35d8c:	str	r0, [sp, #3080]	; 0xc08
   35d90:	str	r1, [sp, #3076]	; 0xc04
   35d94:	bge	35dbc <__assert_fail@plt+0x23204>
   35d98:	b	35d9c <__assert_fail@plt+0x231e4>
   35d9c:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   35da0:	ldr	r1, [r0, #-56]	; 0xffffffc8
   35da4:	ldr	r0, [r0]
   35da8:	mul	r0, r1, r0
   35dac:	mov	r1, #0
   35db0:	str	r1, [fp, #-1340]	; 0xfffffac4
   35db4:	str	r0, [fp, #-1344]	; 0xfffffac0
   35db8:	b	36564 <__assert_fail@plt+0x239ac>
   35dbc:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   35dc0:	ldr	r1, [r0, #-56]	; 0xffffffc8
   35dc4:	ldr	r0, [r0]
   35dc8:	mul	r0, r1, r0
   35dcc:	mov	r1, #0
   35dd0:	str	r1, [fp, #-1340]	; 0xfffffac4
   35dd4:	str	r0, [fp, #-1344]	; 0xfffffac0
   35dd8:	b	36568 <__assert_fail@plt+0x239b0>
   35ddc:	b	35de0 <__assert_fail@plt+0x23228>
   35de0:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   35de4:	ldr	r0, [r0, #4]
   35de8:	cmn	r0, #1
   35dec:	bgt	35ffc <__assert_fail@plt+0x23444>
   35df0:	b	35df4 <__assert_fail@plt+0x2323c>
   35df4:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   35df8:	ldr	r0, [r0, #-52]	; 0xffffffcc
   35dfc:	cmn	r0, #1
   35e00:	bgt	35f24 <__assert_fail@plt+0x2336c>
   35e04:	b	35e08 <__assert_fail@plt+0x23250>
   35e08:	b	35e0c <__assert_fail@plt+0x23254>
   35e0c:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   35e10:	ldr	r1, [r0, #-56]	; 0xffffffc8
   35e14:	ldr	r2, [r0, #-52]	; 0xffffffcc
   35e18:	ldr	r3, [r0]
   35e1c:	ldr	r0, [r0, #4]
   35e20:	mvn	ip, #0
   35e24:	mvn	lr, #-2147483648	; 0x80000000
   35e28:	str	r0, [sp, #3072]	; 0xc00
   35e2c:	mov	r0, ip
   35e30:	str	r1, [sp, #3068]	; 0xbfc
   35e34:	mov	r1, lr
   35e38:	str	r2, [sp, #3064]	; 0xbf8
   35e3c:	mov	r2, r3
   35e40:	ldr	r3, [sp, #3072]	; 0xc00
   35e44:	bl	77780 <__assert_fail@plt+0x64bc8>
   35e48:	ldr	r2, [sp, #3068]	; 0xbfc
   35e4c:	subs	r0, r2, r0
   35e50:	ldr	r2, [sp, #3064]	; 0xbf8
   35e54:	sbcs	r1, r2, r1
   35e58:	str	r0, [sp, #3060]	; 0xbf4
   35e5c:	str	r1, [sp, #3056]	; 0xbf0
   35e60:	blt	36134 <__assert_fail@plt+0x2357c>
   35e64:	b	36160 <__assert_fail@plt+0x235a8>
   35e68:	b	35e6c <__assert_fail@plt+0x232b4>
   35e6c:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   35e70:	ldr	r1, [r0]
   35e74:	ldr	r0, [r0, #4]
   35e78:	eor	r0, r0, #-2147483648	; 0x80000000
   35e7c:	orr	r0, r1, r0
   35e80:	cmp	r0, #0
   35e84:	beq	35eb0 <__assert_fail@plt+0x232f8>
   35e88:	b	35ec4 <__assert_fail@plt+0x2330c>
   35e8c:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   35e90:	ldr	r1, [r0]
   35e94:	ldr	r0, [r0, #4]
   35e98:	subs	r1, r1, #1
   35e9c:	sbcs	r0, r0, #0
   35ea0:	str	r1, [sp, #3052]	; 0xbec
   35ea4:	str	r0, [sp, #3048]	; 0xbe8
   35ea8:	blt	35ec4 <__assert_fail@plt+0x2330c>
   35eac:	b	35eb0 <__assert_fail@plt+0x232f8>
   35eb0:	mov	r0, #0
   35eb4:	mov	r1, r0
   35eb8:	str	r1, [sp, #3044]	; 0xbe4
   35ebc:	str	r0, [sp, #3040]	; 0xbe0
   35ec0:	b	35ef0 <__assert_fail@plt+0x23338>
   35ec4:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   35ec8:	ldr	r1, [r0]
   35ecc:	ldr	r0, [r0, #4]
   35ed0:	rsbs	r2, r1, #0
   35ed4:	rsc	r3, r0, #0
   35ed8:	mvn	r0, #0
   35edc:	mvn	r1, #-2147483648	; 0x80000000
   35ee0:	bl	77780 <__assert_fail@plt+0x64bc8>
   35ee4:	str	r0, [sp, #3044]	; 0xbe4
   35ee8:	str	r1, [sp, #3040]	; 0xbe0
   35eec:	b	35ef0 <__assert_fail@plt+0x23338>
   35ef0:	ldr	r0, [sp, #3040]	; 0xbe0
   35ef4:	ldr	r1, [sp, #3044]	; 0xbe4
   35ef8:	ldr	r2, [fp, #-1288]	; 0xfffffaf8
   35efc:	ldr	r3, [r2, #-56]	; 0xffffffc8
   35f00:	ldr	r2, [r2, #-52]	; 0xffffffcc
   35f04:	mvn	r2, r2
   35f08:	mvn	r3, r3
   35f0c:	subs	r1, r3, r1
   35f10:	sbcs	r0, r2, r0
   35f14:	str	r1, [sp, #3036]	; 0xbdc
   35f18:	str	r0, [sp, #3032]	; 0xbd8
   35f1c:	bge	36134 <__assert_fail@plt+0x2357c>
   35f20:	b	36160 <__assert_fail@plt+0x235a8>
   35f24:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   35f28:	ldr	r1, [r0]
   35f2c:	ldr	r0, [r0, #4]
   35f30:	and	r0, r1, r0
   35f34:	cmn	r0, #1
   35f38:	bne	35fa0 <__assert_fail@plt+0x233e8>
   35f3c:	b	35f40 <__assert_fail@plt+0x23388>
   35f40:	b	35f44 <__assert_fail@plt+0x2338c>
   35f44:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   35f48:	ldr	r1, [r0, #-56]	; 0xffffffc8
   35f4c:	ldr	r0, [r0, #-52]	; 0xffffffcc
   35f50:	add	r0, r0, #-2147483648	; 0x80000000
   35f54:	rsbs	r1, r1, #0
   35f58:	rscs	r0, r0, #0
   35f5c:	str	r1, [sp, #3028]	; 0xbd4
   35f60:	str	r0, [sp, #3024]	; 0xbd0
   35f64:	blt	36134 <__assert_fail@plt+0x2357c>
   35f68:	b	36160 <__assert_fail@plt+0x235a8>
   35f6c:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   35f70:	ldr	r1, [r0, #-56]	; 0xffffffc8
   35f74:	ldr	r0, [r0, #-52]	; 0xffffffcc
   35f78:	subs	r1, r1, #1
   35f7c:	sbcs	r0, r0, #0
   35f80:	str	r1, [sp, #3020]	; 0xbcc
   35f84:	str	r0, [sp, #3016]	; 0xbc8
   35f88:	blt	36160 <__assert_fail@plt+0x235a8>
   35f8c:	b	35f90 <__assert_fail@plt+0x233d8>
   35f90:	mov	r0, #0
   35f94:	cmp	r0, #0
   35f98:	bne	36134 <__assert_fail@plt+0x2357c>
   35f9c:	b	36160 <__assert_fail@plt+0x235a8>
   35fa0:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   35fa4:	ldr	r1, [r0, #-56]	; 0xffffffc8
   35fa8:	ldr	r2, [r0, #-52]	; 0xffffffcc
   35fac:	ldr	r3, [r0]
   35fb0:	ldr	r0, [r0, #4]
   35fb4:	mov	ip, #0
   35fb8:	mov	lr, #-2147483648	; 0x80000000
   35fbc:	str	r0, [sp, #3012]	; 0xbc4
   35fc0:	mov	r0, ip
   35fc4:	str	r1, [sp, #3008]	; 0xbc0
   35fc8:	mov	r1, lr
   35fcc:	str	r2, [sp, #3004]	; 0xbbc
   35fd0:	mov	r2, r3
   35fd4:	ldr	r3, [sp, #3012]	; 0xbc4
   35fd8:	bl	77780 <__assert_fail@plt+0x64bc8>
   35fdc:	ldr	r2, [sp, #3008]	; 0xbc0
   35fe0:	subs	r0, r0, r2
   35fe4:	ldr	r2, [sp, #3004]	; 0xbbc
   35fe8:	sbcs	r1, r1, r2
   35fec:	str	r0, [sp, #3000]	; 0xbb8
   35ff0:	str	r1, [sp, #2996]	; 0xbb4
   35ff4:	blt	36134 <__assert_fail@plt+0x2357c>
   35ff8:	b	36160 <__assert_fail@plt+0x235a8>
   35ffc:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   36000:	ldr	r1, [r0]
   36004:	ldr	r0, [r0, #4]
   36008:	orr	r0, r1, r0
   3600c:	cmp	r0, #0
   36010:	bne	3601c <__assert_fail@plt+0x23464>
   36014:	b	36018 <__assert_fail@plt+0x23460>
   36018:	b	36160 <__assert_fail@plt+0x235a8>
   3601c:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   36020:	ldr	r0, [r0, #-52]	; 0xffffffcc
   36024:	cmn	r0, #1
   36028:	bgt	360d8 <__assert_fail@plt+0x23520>
   3602c:	b	36030 <__assert_fail@plt+0x23478>
   36030:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   36034:	ldr	r1, [r0, #-56]	; 0xffffffc8
   36038:	ldr	r0, [r0, #-52]	; 0xffffffcc
   3603c:	and	r0, r1, r0
   36040:	cmn	r0, #1
   36044:	bne	36088 <__assert_fail@plt+0x234d0>
   36048:	b	3604c <__assert_fail@plt+0x23494>
   3604c:	b	36050 <__assert_fail@plt+0x23498>
   36050:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   36054:	ldr	r1, [r0]
   36058:	ldr	r0, [r0, #4]
   3605c:	add	r0, r0, #-2147483648	; 0x80000000
   36060:	rsbs	r1, r1, #0
   36064:	rscs	r0, r0, #0
   36068:	str	r1, [sp, #2992]	; 0xbb0
   3606c:	str	r0, [sp, #2988]	; 0xbac
   36070:	blt	36134 <__assert_fail@plt+0x2357c>
   36074:	b	36160 <__assert_fail@plt+0x235a8>
   36078:	mov	r0, #0
   3607c:	cmp	r0, #0
   36080:	bne	36134 <__assert_fail@plt+0x2357c>
   36084:	b	36160 <__assert_fail@plt+0x235a8>
   36088:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3608c:	ldr	r2, [r0, #-56]	; 0xffffffc8
   36090:	ldr	r3, [r0, #-52]	; 0xffffffcc
   36094:	ldr	r1, [r0]
   36098:	ldr	r0, [r0, #4]
   3609c:	mov	ip, #0
   360a0:	mov	lr, #-2147483648	; 0x80000000
   360a4:	str	r0, [sp, #2984]	; 0xba8
   360a8:	mov	r0, ip
   360ac:	str	r1, [sp, #2980]	; 0xba4
   360b0:	mov	r1, lr
   360b4:	bl	77780 <__assert_fail@plt+0x64bc8>
   360b8:	ldr	r2, [sp, #2980]	; 0xba4
   360bc:	subs	r0, r0, r2
   360c0:	ldr	r2, [sp, #2984]	; 0xba8
   360c4:	sbcs	r1, r1, r2
   360c8:	str	r0, [sp, #2976]	; 0xba0
   360cc:	str	r1, [sp, #2972]	; 0xb9c
   360d0:	blt	36134 <__assert_fail@plt+0x2357c>
   360d4:	b	36160 <__assert_fail@plt+0x235a8>
   360d8:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   360dc:	ldr	r1, [r0, #-56]	; 0xffffffc8
   360e0:	ldr	r2, [r0, #-52]	; 0xffffffcc
   360e4:	ldr	r3, [r0]
   360e8:	ldr	r0, [r0, #4]
   360ec:	mvn	ip, #0
   360f0:	mvn	lr, #-2147483648	; 0x80000000
   360f4:	str	r0, [sp, #2968]	; 0xb98
   360f8:	mov	r0, ip
   360fc:	str	r1, [sp, #2964]	; 0xb94
   36100:	mov	r1, lr
   36104:	str	r2, [sp, #2960]	; 0xb90
   36108:	mov	r2, r3
   3610c:	ldr	r3, [sp, #2968]	; 0xb98
   36110:	bl	77780 <__assert_fail@plt+0x64bc8>
   36114:	ldr	r2, [sp, #2964]	; 0xb94
   36118:	subs	r0, r0, r2
   3611c:	ldr	r2, [sp, #2960]	; 0xb90
   36120:	sbcs	r1, r1, r2
   36124:	str	r0, [sp, #2956]	; 0xb8c
   36128:	str	r1, [sp, #2952]	; 0xb88
   3612c:	bge	36160 <__assert_fail@plt+0x235a8>
   36130:	b	36134 <__assert_fail@plt+0x2357c>
   36134:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   36138:	ldr	r1, [r0, #-56]	; 0xffffffc8
   3613c:	ldr	r2, [r0, #-52]	; 0xffffffcc
   36140:	ldr	r3, [r0]
   36144:	ldr	r0, [r0, #4]
   36148:	umull	ip, lr, r1, r3
   3614c:	mla	r0, r1, r0, lr
   36150:	mla	r0, r2, r3, r0
   36154:	str	ip, [fp, #-1344]	; 0xfffffac0
   36158:	str	r0, [fp, #-1340]	; 0xfffffac4
   3615c:	b	36564 <__assert_fail@plt+0x239ac>
   36160:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   36164:	ldr	r1, [r0, #-56]	; 0xffffffc8
   36168:	ldr	r2, [r0, #-52]	; 0xffffffcc
   3616c:	ldr	r3, [r0]
   36170:	ldr	r0, [r0, #4]
   36174:	umull	ip, lr, r1, r3
   36178:	mla	r0, r1, r0, lr
   3617c:	mla	r0, r2, r3, r0
   36180:	str	ip, [fp, #-1344]	; 0xfffffac0
   36184:	str	r0, [fp, #-1340]	; 0xfffffac4
   36188:	b	36568 <__assert_fail@plt+0x239b0>
   3618c:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   36190:	ldr	r0, [r0, #4]
   36194:	cmn	r0, #1
   36198:	bgt	363c0 <__assert_fail@plt+0x23808>
   3619c:	b	361a0 <__assert_fail@plt+0x235e8>
   361a0:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   361a4:	ldr	r0, [r0, #-52]	; 0xffffffcc
   361a8:	cmn	r0, #1
   361ac:	bgt	362d0 <__assert_fail@plt+0x23718>
   361b0:	b	361b4 <__assert_fail@plt+0x235fc>
   361b4:	b	36210 <__assert_fail@plt+0x23658>
   361b8:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   361bc:	ldr	r1, [r0, #-56]	; 0xffffffc8
   361c0:	ldr	r2, [r0, #-52]	; 0xffffffcc
   361c4:	ldr	r3, [r0]
   361c8:	ldr	r0, [r0, #4]
   361cc:	mvn	ip, #0
   361d0:	str	r0, [sp, #2948]	; 0xb84
   361d4:	mov	r0, ip
   361d8:	str	r1, [sp, #2944]	; 0xb80
   361dc:	mov	r1, ip
   361e0:	str	r2, [sp, #2940]	; 0xb7c
   361e4:	mov	r2, r3
   361e8:	ldr	r3, [sp, #2948]	; 0xb84
   361ec:	bl	77854 <__assert_fail@plt+0x64c9c>
   361f0:	ldr	r2, [sp, #2944]	; 0xb80
   361f4:	subs	r0, r2, r0
   361f8:	ldr	r2, [sp, #2940]	; 0xb7c
   361fc:	sbcs	r1, r2, r1
   36200:	str	r0, [sp, #2936]	; 0xb78
   36204:	str	r1, [sp, #2932]	; 0xb74
   36208:	bcc	3650c <__assert_fail@plt+0x23954>
   3620c:	b	36538 <__assert_fail@plt+0x23980>
   36210:	b	36214 <__assert_fail@plt+0x2365c>
   36214:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   36218:	ldr	r1, [r0]
   3621c:	ldr	r0, [r0, #4]
   36220:	eor	r0, r0, #-2147483648	; 0x80000000
   36224:	orr	r0, r1, r0
   36228:	cmp	r0, #0
   3622c:	beq	36258 <__assert_fail@plt+0x236a0>
   36230:	b	3626c <__assert_fail@plt+0x236b4>
   36234:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   36238:	ldr	r1, [r0]
   3623c:	ldr	r0, [r0, #4]
   36240:	subs	r1, r1, #1
   36244:	sbcs	r0, r0, #0
   36248:	str	r1, [sp, #2928]	; 0xb70
   3624c:	str	r0, [sp, #2924]	; 0xb6c
   36250:	blt	3626c <__assert_fail@plt+0x236b4>
   36254:	b	36258 <__assert_fail@plt+0x236a0>
   36258:	mov	r0, #0
   3625c:	mov	r1, #1
   36260:	str	r1, [sp, #2920]	; 0xb68
   36264:	str	r0, [sp, #2916]	; 0xb64
   36268:	b	3629c <__assert_fail@plt+0x236e4>
   3626c:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   36270:	ldr	r1, [r0]
   36274:	ldr	r0, [r0, #4]
   36278:	rsbs	r2, r1, #0
   3627c:	rsc	r3, r0, #0
   36280:	mvn	r0, #0
   36284:	str	r0, [sp, #2912]	; 0xb60
   36288:	ldr	r1, [sp, #2912]	; 0xb60
   3628c:	bl	77854 <__assert_fail@plt+0x64c9c>
   36290:	str	r0, [sp, #2920]	; 0xb68
   36294:	str	r1, [sp, #2916]	; 0xb64
   36298:	b	3629c <__assert_fail@plt+0x236e4>
   3629c:	ldr	r0, [sp, #2916]	; 0xb64
   362a0:	ldr	r1, [sp, #2920]	; 0xb68
   362a4:	ldr	r2, [fp, #-1288]	; 0xfffffaf8
   362a8:	ldr	r3, [r2, #-56]	; 0xffffffc8
   362ac:	ldr	r2, [r2, #-52]	; 0xffffffcc
   362b0:	mvn	r2, r2
   362b4:	mvn	r3, r3
   362b8:	subs	r1, r3, r1
   362bc:	sbcs	r0, r2, r0
   362c0:	str	r1, [sp, #2908]	; 0xb5c
   362c4:	str	r0, [sp, #2904]	; 0xb58
   362c8:	bcs	3650c <__assert_fail@plt+0x23954>
   362cc:	b	36538 <__assert_fail@plt+0x23980>
   362d0:	b	362d4 <__assert_fail@plt+0x2371c>
   362d4:	b	36368 <__assert_fail@plt+0x237b0>
   362d8:	b	36368 <__assert_fail@plt+0x237b0>
   362dc:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   362e0:	ldr	r1, [r0]
   362e4:	ldr	r0, [r0, #4]
   362e8:	and	r0, r1, r0
   362ec:	cmn	r0, #1
   362f0:	bne	36368 <__assert_fail@plt+0x237b0>
   362f4:	b	362f8 <__assert_fail@plt+0x23740>
   362f8:	b	362fc <__assert_fail@plt+0x23744>
   362fc:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   36300:	ldr	r1, [r0, #-56]	; 0xffffffc8
   36304:	ldr	r0, [r0, #-52]	; 0xffffffcc
   36308:	rsbs	r1, r1, #0
   3630c:	rscs	r0, r0, #0
   36310:	str	r1, [sp, #2900]	; 0xb54
   36314:	str	r0, [sp, #2896]	; 0xb50
   36318:	blt	3650c <__assert_fail@plt+0x23954>
   3631c:	b	36538 <__assert_fail@plt+0x23980>
   36320:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   36324:	ldr	r1, [r0, #-56]	; 0xffffffc8
   36328:	ldr	r0, [r0, #-52]	; 0xffffffcc
   3632c:	subs	r1, r1, #1
   36330:	sbcs	r0, r0, #0
   36334:	str	r1, [sp, #2892]	; 0xb4c
   36338:	str	r0, [sp, #2888]	; 0xb48
   3633c:	blt	36538 <__assert_fail@plt+0x23980>
   36340:	b	36344 <__assert_fail@plt+0x2378c>
   36344:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   36348:	ldr	r1, [r0, #-56]	; 0xffffffc8
   3634c:	ldr	r0, [r0, #-52]	; 0xffffffcc
   36350:	subs	r1, r1, #1
   36354:	sbc	r0, r0, #0
   36358:	cmn	r0, #1
   3635c:	str	r1, [sp, #2884]	; 0xb44
   36360:	bgt	3650c <__assert_fail@plt+0x23954>
   36364:	b	36538 <__assert_fail@plt+0x23980>
   36368:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3636c:	ldr	r1, [r0, #-56]	; 0xffffffc8
   36370:	ldr	r2, [r0, #-52]	; 0xffffffcc
   36374:	ldr	r3, [r0]
   36378:	ldr	r0, [r0, #4]
   3637c:	mov	ip, #0
   36380:	str	r0, [sp, #2880]	; 0xb40
   36384:	mov	r0, ip
   36388:	str	r1, [sp, #2876]	; 0xb3c
   3638c:	mov	r1, ip
   36390:	str	r2, [sp, #2872]	; 0xb38
   36394:	mov	r2, r3
   36398:	ldr	r3, [sp, #2880]	; 0xb40
   3639c:	bl	77780 <__assert_fail@plt+0x64bc8>
   363a0:	ldr	r2, [sp, #2876]	; 0xb3c
   363a4:	subs	r0, r0, r2
   363a8:	ldr	r2, [sp, #2872]	; 0xb38
   363ac:	sbcs	r1, r1, r2
   363b0:	str	r0, [sp, #2868]	; 0xb34
   363b4:	str	r1, [sp, #2864]	; 0xb30
   363b8:	blt	3650c <__assert_fail@plt+0x23954>
   363bc:	b	36538 <__assert_fail@plt+0x23980>
   363c0:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   363c4:	ldr	r1, [r0]
   363c8:	ldr	r0, [r0, #4]
   363cc:	orr	r0, r1, r0
   363d0:	cmp	r0, #0
   363d4:	bne	363e0 <__assert_fail@plt+0x23828>
   363d8:	b	363dc <__assert_fail@plt+0x23824>
   363dc:	b	36538 <__assert_fail@plt+0x23980>
   363e0:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   363e4:	ldr	r0, [r0, #-52]	; 0xffffffcc
   363e8:	cmn	r0, #1
   363ec:	bgt	364b4 <__assert_fail@plt+0x238fc>
   363f0:	b	363f4 <__assert_fail@plt+0x2383c>
   363f4:	b	363f8 <__assert_fail@plt+0x23840>
   363f8:	b	36468 <__assert_fail@plt+0x238b0>
   363fc:	b	36468 <__assert_fail@plt+0x238b0>
   36400:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   36404:	ldr	r1, [r0, #-56]	; 0xffffffc8
   36408:	ldr	r0, [r0, #-52]	; 0xffffffcc
   3640c:	and	r0, r1, r0
   36410:	cmn	r0, #1
   36414:	bne	36468 <__assert_fail@plt+0x238b0>
   36418:	b	3641c <__assert_fail@plt+0x23864>
   3641c:	b	36420 <__assert_fail@plt+0x23868>
   36420:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   36424:	ldr	r1, [r0]
   36428:	ldr	r0, [r0, #4]
   3642c:	rsbs	r1, r1, #0
   36430:	rscs	r0, r0, #0
   36434:	str	r1, [sp, #2860]	; 0xb2c
   36438:	str	r0, [sp, #2856]	; 0xb28
   3643c:	blt	3650c <__assert_fail@plt+0x23954>
   36440:	b	36538 <__assert_fail@plt+0x23980>
   36444:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   36448:	ldr	r1, [r0]
   3644c:	ldr	r0, [r0, #4]
   36450:	subs	r1, r1, #1
   36454:	sbc	r0, r0, #0
   36458:	cmn	r0, #1
   3645c:	str	r1, [sp, #2852]	; 0xb24
   36460:	bgt	3650c <__assert_fail@plt+0x23954>
   36464:	b	36538 <__assert_fail@plt+0x23980>
   36468:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3646c:	ldr	r2, [r0, #-56]	; 0xffffffc8
   36470:	ldr	r3, [r0, #-52]	; 0xffffffcc
   36474:	ldr	r1, [r0]
   36478:	ldr	r0, [r0, #4]
   3647c:	mov	ip, #0
   36480:	str	r0, [sp, #2848]	; 0xb20
   36484:	mov	r0, ip
   36488:	str	r1, [sp, #2844]	; 0xb1c
   3648c:	mov	r1, ip
   36490:	bl	77780 <__assert_fail@plt+0x64bc8>
   36494:	ldr	r2, [sp, #2844]	; 0xb1c
   36498:	subs	r0, r0, r2
   3649c:	ldr	r2, [sp, #2848]	; 0xb20
   364a0:	sbcs	r1, r1, r2
   364a4:	str	r0, [sp, #2840]	; 0xb18
   364a8:	str	r1, [sp, #2836]	; 0xb14
   364ac:	blt	3650c <__assert_fail@plt+0x23954>
   364b0:	b	36538 <__assert_fail@plt+0x23980>
   364b4:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   364b8:	ldr	r1, [r0, #-56]	; 0xffffffc8
   364bc:	ldr	r2, [r0, #-52]	; 0xffffffcc
   364c0:	ldr	r3, [r0]
   364c4:	ldr	r0, [r0, #4]
   364c8:	mvn	ip, #0
   364cc:	str	r0, [sp, #2832]	; 0xb10
   364d0:	mov	r0, ip
   364d4:	str	r1, [sp, #2828]	; 0xb0c
   364d8:	mov	r1, ip
   364dc:	str	r2, [sp, #2824]	; 0xb08
   364e0:	mov	r2, r3
   364e4:	ldr	r3, [sp, #2832]	; 0xb10
   364e8:	bl	77854 <__assert_fail@plt+0x64c9c>
   364ec:	ldr	r2, [sp, #2828]	; 0xb0c
   364f0:	subs	r0, r0, r2
   364f4:	ldr	r2, [sp, #2824]	; 0xb08
   364f8:	sbcs	r1, r1, r2
   364fc:	str	r0, [sp, #2820]	; 0xb04
   36500:	str	r1, [sp, #2816]	; 0xb00
   36504:	bcs	36538 <__assert_fail@plt+0x23980>
   36508:	b	3650c <__assert_fail@plt+0x23954>
   3650c:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   36510:	ldr	r1, [r0, #-56]	; 0xffffffc8
   36514:	ldr	r2, [r0, #-52]	; 0xffffffcc
   36518:	ldr	r3, [r0]
   3651c:	ldr	r0, [r0, #4]
   36520:	umull	ip, lr, r1, r3
   36524:	mla	r0, r1, r0, lr
   36528:	mla	r0, r2, r3, r0
   3652c:	str	ip, [fp, #-1344]	; 0xfffffac0
   36530:	str	r0, [fp, #-1340]	; 0xfffffac4
   36534:	b	36564 <__assert_fail@plt+0x239ac>
   36538:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3653c:	ldr	r1, [r0, #-56]	; 0xffffffc8
   36540:	ldr	r2, [r0, #-52]	; 0xffffffcc
   36544:	ldr	r3, [r0]
   36548:	ldr	r0, [r0, #4]
   3654c:	umull	ip, lr, r1, r3
   36550:	mla	r0, r1, r0, lr
   36554:	mla	r0, r2, r3, r0
   36558:	str	ip, [fp, #-1344]	; 0xfffffac0
   3655c:	str	r0, [fp, #-1340]	; 0xfffffac4
   36560:	b	36568 <__assert_fail@plt+0x239b0>
   36564:	b	3c300 <__assert_fail@plt+0x29748>
   36568:	b	3bfc0 <__assert_fail@plt+0x29408>
   3656c:	sub	r0, fp, #1360	; 0x550
   36570:	mov	r1, #0
   36574:	str	r1, [fp, #-1836]	; 0xfffff8d4
   36578:	str	r1, [fp, #-1840]	; 0xfffff8d0
   3657c:	str	r1, [fp, #-1828]	; 0xfffff8dc
   36580:	str	r1, [fp, #-1832]	; 0xfffff8d8
   36584:	str	r1, [fp, #-1820]	; 0xfffff8e4
   36588:	str	r1, [fp, #-1824]	; 0xfffff8e0
   3658c:	str	r1, [fp, #-1812]	; 0xfffff8ec
   36590:	str	r1, [fp, #-1816]	; 0xfffff8e8
   36594:	str	r1, [fp, #-1804]	; 0xfffff8f4
   36598:	str	r1, [fp, #-1808]	; 0xfffff8f0
   3659c:	str	r1, [fp, #-1796]	; 0xfffff8fc
   365a0:	str	r1, [fp, #-1800]	; 0xfffff8f8
   365a4:	movw	r1, #0
   365a8:	str	r1, [fp, #-1792]	; 0xfffff900
   365ac:	sub	r1, fp, #1840	; 0x730
   365b0:	movw	r2, #56	; 0x38
   365b4:	bl	125c4 <memcpy@plt>
   365b8:	b	36d80 <__assert_fail@plt+0x241c8>
   365bc:	b	365c0 <__assert_fail@plt+0x23a08>
   365c0:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   365c4:	ldr	r0, [r0, #4]
   365c8:	cmn	r0, #1
   365cc:	bgt	36808 <__assert_fail@plt+0x23c50>
   365d0:	b	365d4 <__assert_fail@plt+0x23a1c>
   365d4:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   365d8:	ldr	r0, [r0, #-44]	; 0xffffffd4
   365dc:	cmn	r0, #1
   365e0:	bgt	36704 <__assert_fail@plt+0x23b4c>
   365e4:	b	365e8 <__assert_fail@plt+0x23a30>
   365e8:	b	365ec <__assert_fail@plt+0x23a34>
   365ec:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   365f0:	ldr	r1, [r0, #-48]	; 0xffffffd0
   365f4:	ldr	r2, [r0, #-44]	; 0xffffffd4
   365f8:	ldr	r3, [r0]
   365fc:	ldr	r0, [r0, #4]
   36600:	mov	ip, #127	; 0x7f
   36604:	mov	lr, #0
   36608:	str	r0, [sp, #2812]	; 0xafc
   3660c:	mov	r0, ip
   36610:	str	r1, [sp, #2808]	; 0xaf8
   36614:	mov	r1, lr
   36618:	str	r2, [sp, #2804]	; 0xaf4
   3661c:	mov	r2, r3
   36620:	ldr	r3, [sp, #2812]	; 0xafc
   36624:	bl	77780 <__assert_fail@plt+0x64bc8>
   36628:	ldr	r2, [sp, #2808]	; 0xaf8
   3662c:	subs	r0, r2, r0
   36630:	ldr	r2, [sp, #2804]	; 0xaf4
   36634:	sbcs	r1, r2, r1
   36638:	str	r0, [sp, #2800]	; 0xaf0
   3663c:	str	r1, [sp, #2796]	; 0xaec
   36640:	blt	3696c <__assert_fail@plt+0x23db4>
   36644:	b	36990 <__assert_fail@plt+0x23dd8>
   36648:	b	3664c <__assert_fail@plt+0x23a94>
   3664c:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   36650:	ldr	r1, [r0]
   36654:	ldr	r0, [r0, #4]
   36658:	eor	r0, r0, #-2147483648	; 0x80000000
   3665c:	orr	r0, r1, r0
   36660:	cmp	r0, #0
   36664:	beq	36690 <__assert_fail@plt+0x23ad8>
   36668:	b	366a4 <__assert_fail@plt+0x23aec>
   3666c:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   36670:	ldr	r1, [r0]
   36674:	ldr	r0, [r0, #4]
   36678:	subs	r1, r1, #1
   3667c:	sbcs	r0, r0, #0
   36680:	str	r1, [sp, #2792]	; 0xae8
   36684:	str	r0, [sp, #2788]	; 0xae4
   36688:	blt	366a4 <__assert_fail@plt+0x23aec>
   3668c:	b	36690 <__assert_fail@plt+0x23ad8>
   36690:	mov	r0, #0
   36694:	mov	r1, r0
   36698:	str	r1, [sp, #2784]	; 0xae0
   3669c:	str	r0, [sp, #2780]	; 0xadc
   366a0:	b	366d0 <__assert_fail@plt+0x23b18>
   366a4:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   366a8:	ldr	r1, [r0]
   366ac:	ldr	r0, [r0, #4]
   366b0:	rsbs	r2, r1, #0
   366b4:	rsc	r3, r0, #0
   366b8:	mov	r0, #127	; 0x7f
   366bc:	mov	r1, #0
   366c0:	bl	77780 <__assert_fail@plt+0x64bc8>
   366c4:	str	r0, [sp, #2784]	; 0xae0
   366c8:	str	r1, [sp, #2780]	; 0xadc
   366cc:	b	366d0 <__assert_fail@plt+0x23b18>
   366d0:	ldr	r0, [sp, #2780]	; 0xadc
   366d4:	ldr	r1, [sp, #2784]	; 0xae0
   366d8:	ldr	r2, [fp, #-1288]	; 0xfffffaf8
   366dc:	ldr	r3, [r2, #-48]	; 0xffffffd0
   366e0:	ldr	r2, [r2, #-44]	; 0xffffffd4
   366e4:	mvn	r2, r2
   366e8:	mvn	r3, r3
   366ec:	subs	r1, r3, r1
   366f0:	sbcs	r0, r2, r0
   366f4:	str	r1, [sp, #2776]	; 0xad8
   366f8:	str	r0, [sp, #2772]	; 0xad4
   366fc:	bge	3696c <__assert_fail@plt+0x23db4>
   36700:	b	36990 <__assert_fail@plt+0x23dd8>
   36704:	b	36708 <__assert_fail@plt+0x23b50>
   36708:	b	367ac <__assert_fail@plt+0x23bf4>
   3670c:	b	367ac <__assert_fail@plt+0x23bf4>
   36710:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   36714:	ldr	r1, [r0]
   36718:	ldr	r0, [r0, #4]
   3671c:	and	r0, r1, r0
   36720:	cmn	r0, #1
   36724:	bne	367ac <__assert_fail@plt+0x23bf4>
   36728:	b	3672c <__assert_fail@plt+0x23b74>
   3672c:	b	36730 <__assert_fail@plt+0x23b78>
   36730:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   36734:	ldr	r1, [r0, #-48]	; 0xffffffd0
   36738:	ldr	r0, [r0, #-44]	; 0xffffffd4
   3673c:	subs	r1, r1, #128	; 0x80
   36740:	sbc	r0, r0, #0
   36744:	rsbs	r1, r1, #0
   36748:	rscs	r0, r0, #0
   3674c:	str	r1, [sp, #2768]	; 0xad0
   36750:	str	r0, [sp, #2764]	; 0xacc
   36754:	blt	3696c <__assert_fail@plt+0x23db4>
   36758:	b	36990 <__assert_fail@plt+0x23dd8>
   3675c:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   36760:	ldr	r1, [r0, #-48]	; 0xffffffd0
   36764:	ldr	r0, [r0, #-44]	; 0xffffffd4
   36768:	subs	r1, r1, #1
   3676c:	sbcs	r0, r0, #0
   36770:	str	r1, [sp, #2760]	; 0xac8
   36774:	str	r0, [sp, #2756]	; 0xac4
   36778:	blt	36990 <__assert_fail@plt+0x23dd8>
   3677c:	b	36780 <__assert_fail@plt+0x23bc8>
   36780:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   36784:	ldr	r1, [r0, #-48]	; 0xffffffd0
   36788:	ldr	r0, [r0, #-44]	; 0xffffffd4
   3678c:	subs	r1, r1, #1
   36790:	sbc	r0, r0, #0
   36794:	rsbs	r1, r1, #127	; 0x7f
   36798:	rscs	r0, r0, #0
   3679c:	str	r1, [sp, #2752]	; 0xac0
   367a0:	str	r0, [sp, #2748]	; 0xabc
   367a4:	blt	3696c <__assert_fail@plt+0x23db4>
   367a8:	b	36990 <__assert_fail@plt+0x23dd8>
   367ac:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   367b0:	ldr	r1, [r0, #-48]	; 0xffffffd0
   367b4:	ldr	r2, [r0, #-44]	; 0xffffffd4
   367b8:	ldr	r3, [r0]
   367bc:	ldr	r0, [r0, #4]
   367c0:	mvn	ip, #127	; 0x7f
   367c4:	mvn	lr, #0
   367c8:	str	r0, [sp, #2744]	; 0xab8
   367cc:	mov	r0, ip
   367d0:	str	r1, [sp, #2740]	; 0xab4
   367d4:	mov	r1, lr
   367d8:	str	r2, [sp, #2736]	; 0xab0
   367dc:	mov	r2, r3
   367e0:	ldr	r3, [sp, #2744]	; 0xab8
   367e4:	bl	77780 <__assert_fail@plt+0x64bc8>
   367e8:	ldr	r2, [sp, #2740]	; 0xab4
   367ec:	subs	r0, r0, r2
   367f0:	ldr	r2, [sp, #2736]	; 0xab0
   367f4:	sbcs	r1, r1, r2
   367f8:	str	r0, [sp, #2732]	; 0xaac
   367fc:	str	r1, [sp, #2728]	; 0xaa8
   36800:	blt	3696c <__assert_fail@plt+0x23db4>
   36804:	b	36990 <__assert_fail@plt+0x23dd8>
   36808:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3680c:	ldr	r1, [r0]
   36810:	ldr	r0, [r0, #4]
   36814:	orr	r0, r1, r0
   36818:	cmp	r0, #0
   3681c:	bne	36828 <__assert_fail@plt+0x23c70>
   36820:	b	36824 <__assert_fail@plt+0x23c6c>
   36824:	b	36990 <__assert_fail@plt+0x23dd8>
   36828:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3682c:	ldr	r0, [r0, #-44]	; 0xffffffd4
   36830:	cmn	r0, #1
   36834:	bgt	36910 <__assert_fail@plt+0x23d58>
   36838:	b	3683c <__assert_fail@plt+0x23c84>
   3683c:	b	36840 <__assert_fail@plt+0x23c88>
   36840:	b	368c0 <__assert_fail@plt+0x23d08>
   36844:	b	368c0 <__assert_fail@plt+0x23d08>
   36848:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3684c:	ldr	r1, [r0, #-48]	; 0xffffffd0
   36850:	ldr	r0, [r0, #-44]	; 0xffffffd4
   36854:	and	r0, r1, r0
   36858:	cmn	r0, #1
   3685c:	bne	368c0 <__assert_fail@plt+0x23d08>
   36860:	b	36864 <__assert_fail@plt+0x23cac>
   36864:	b	36868 <__assert_fail@plt+0x23cb0>
   36868:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3686c:	ldr	r1, [r0]
   36870:	ldr	r0, [r0, #4]
   36874:	subs	r1, r1, #128	; 0x80
   36878:	sbc	r0, r0, #0
   3687c:	rsbs	r1, r1, #0
   36880:	rscs	r0, r0, #0
   36884:	str	r1, [sp, #2724]	; 0xaa4
   36888:	str	r0, [sp, #2720]	; 0xaa0
   3688c:	blt	3696c <__assert_fail@plt+0x23db4>
   36890:	b	36990 <__assert_fail@plt+0x23dd8>
   36894:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   36898:	ldr	r1, [r0]
   3689c:	ldr	r0, [r0, #4]
   368a0:	subs	r1, r1, #1
   368a4:	sbc	r0, r0, #0
   368a8:	rsbs	r1, r1, #127	; 0x7f
   368ac:	rscs	r0, r0, #0
   368b0:	str	r1, [sp, #2716]	; 0xa9c
   368b4:	str	r0, [sp, #2712]	; 0xa98
   368b8:	blt	3696c <__assert_fail@plt+0x23db4>
   368bc:	b	36990 <__assert_fail@plt+0x23dd8>
   368c0:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   368c4:	ldr	r2, [r0, #-48]	; 0xffffffd0
   368c8:	ldr	r3, [r0, #-44]	; 0xffffffd4
   368cc:	ldr	r1, [r0]
   368d0:	ldr	r0, [r0, #4]
   368d4:	mvn	ip, #127	; 0x7f
   368d8:	mvn	lr, #0
   368dc:	str	r0, [sp, #2708]	; 0xa94
   368e0:	mov	r0, ip
   368e4:	str	r1, [sp, #2704]	; 0xa90
   368e8:	mov	r1, lr
   368ec:	bl	77780 <__assert_fail@plt+0x64bc8>
   368f0:	ldr	r2, [sp, #2704]	; 0xa90
   368f4:	subs	r0, r0, r2
   368f8:	ldr	r2, [sp, #2708]	; 0xa94
   368fc:	sbcs	r1, r1, r2
   36900:	str	r0, [sp, #2700]	; 0xa8c
   36904:	str	r1, [sp, #2696]	; 0xa88
   36908:	blt	3696c <__assert_fail@plt+0x23db4>
   3690c:	b	36990 <__assert_fail@plt+0x23dd8>
   36910:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   36914:	ldr	r1, [r0, #-48]	; 0xffffffd0
   36918:	ldr	r2, [r0, #-44]	; 0xffffffd4
   3691c:	ldr	r3, [r0]
   36920:	ldr	r0, [r0, #4]
   36924:	mov	ip, #127	; 0x7f
   36928:	mov	lr, #0
   3692c:	str	r0, [sp, #2692]	; 0xa84
   36930:	mov	r0, ip
   36934:	str	r1, [sp, #2688]	; 0xa80
   36938:	mov	r1, lr
   3693c:	str	r2, [sp, #2684]	; 0xa7c
   36940:	mov	r2, r3
   36944:	ldr	r3, [sp, #2692]	; 0xa84
   36948:	bl	77780 <__assert_fail@plt+0x64bc8>
   3694c:	ldr	r2, [sp, #2688]	; 0xa80
   36950:	subs	r0, r0, r2
   36954:	ldr	r2, [sp, #2684]	; 0xa7c
   36958:	sbcs	r1, r1, r2
   3695c:	str	r0, [sp, #2680]	; 0xa78
   36960:	str	r1, [sp, #2676]	; 0xa74
   36964:	bge	36990 <__assert_fail@plt+0x23dd8>
   36968:	b	3696c <__assert_fail@plt+0x23db4>
   3696c:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   36970:	ldr	r1, [r0, #-48]	; 0xffffffd0
   36974:	ldr	r0, [r0]
   36978:	mul	r0, r1, r0
   3697c:	sxtb	r0, r0
   36980:	asr	r1, r0, #31
   36984:	str	r0, [fp, #-1344]	; 0xfffffac0
   36988:	str	r1, [fp, #-1340]	; 0xfffffac4
   3698c:	b	38c60 <__assert_fail@plt+0x260a8>
   36990:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   36994:	ldr	r1, [r0, #-48]	; 0xffffffd0
   36998:	ldr	r0, [r0]
   3699c:	mul	r0, r1, r0
   369a0:	sxtb	r0, r0
   369a4:	asr	r1, r0, #31
   369a8:	str	r0, [fp, #-1344]	; 0xfffffac0
   369ac:	str	r1, [fp, #-1340]	; 0xfffffac4
   369b0:	b	38c64 <__assert_fail@plt+0x260ac>
   369b4:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   369b8:	ldr	r0, [r0, #4]
   369bc:	cmn	r0, #1
   369c0:	bgt	36be8 <__assert_fail@plt+0x24030>
   369c4:	b	369c8 <__assert_fail@plt+0x23e10>
   369c8:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   369cc:	ldr	r0, [r0, #-44]	; 0xffffffd4
   369d0:	cmn	r0, #1
   369d4:	bgt	36af8 <__assert_fail@plt+0x23f40>
   369d8:	b	369dc <__assert_fail@plt+0x23e24>
   369dc:	b	369e0 <__assert_fail@plt+0x23e28>
   369e0:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   369e4:	ldr	r1, [r0, #-48]	; 0xffffffd0
   369e8:	ldr	r2, [r0, #-44]	; 0xffffffd4
   369ec:	ldr	r3, [r0]
   369f0:	ldr	r0, [r0, #4]
   369f4:	mov	ip, #255	; 0xff
   369f8:	mov	lr, #0
   369fc:	str	r0, [sp, #2672]	; 0xa70
   36a00:	mov	r0, ip
   36a04:	str	r1, [sp, #2668]	; 0xa6c
   36a08:	mov	r1, lr
   36a0c:	str	r2, [sp, #2664]	; 0xa68
   36a10:	mov	r2, r3
   36a14:	ldr	r3, [sp, #2672]	; 0xa70
   36a18:	bl	77780 <__assert_fail@plt+0x64bc8>
   36a1c:	ldr	r2, [sp, #2668]	; 0xa6c
   36a20:	subs	r0, r2, r0
   36a24:	ldr	r2, [sp, #2664]	; 0xa68
   36a28:	sbcs	r1, r2, r1
   36a2c:	str	r0, [sp, #2660]	; 0xa64
   36a30:	str	r1, [sp, #2656]	; 0xa60
   36a34:	blt	36d38 <__assert_fail@plt+0x24180>
   36a38:	b	36d5c <__assert_fail@plt+0x241a4>
   36a3c:	b	36a40 <__assert_fail@plt+0x23e88>
   36a40:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   36a44:	ldr	r1, [r0]
   36a48:	ldr	r0, [r0, #4]
   36a4c:	eor	r0, r0, #-2147483648	; 0x80000000
   36a50:	orr	r0, r1, r0
   36a54:	cmp	r0, #0
   36a58:	beq	36a84 <__assert_fail@plt+0x23ecc>
   36a5c:	b	36a98 <__assert_fail@plt+0x23ee0>
   36a60:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   36a64:	ldr	r1, [r0]
   36a68:	ldr	r0, [r0, #4]
   36a6c:	subs	r1, r1, #1
   36a70:	sbcs	r0, r0, #0
   36a74:	str	r1, [sp, #2652]	; 0xa5c
   36a78:	str	r0, [sp, #2648]	; 0xa58
   36a7c:	blt	36a98 <__assert_fail@plt+0x23ee0>
   36a80:	b	36a84 <__assert_fail@plt+0x23ecc>
   36a84:	mov	r0, #0
   36a88:	mov	r1, r0
   36a8c:	str	r1, [sp, #2644]	; 0xa54
   36a90:	str	r0, [sp, #2640]	; 0xa50
   36a94:	b	36ac4 <__assert_fail@plt+0x23f0c>
   36a98:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   36a9c:	ldr	r1, [r0]
   36aa0:	ldr	r0, [r0, #4]
   36aa4:	rsbs	r2, r1, #0
   36aa8:	rsc	r3, r0, #0
   36aac:	mov	r0, #255	; 0xff
   36ab0:	mov	r1, #0
   36ab4:	bl	77780 <__assert_fail@plt+0x64bc8>
   36ab8:	str	r0, [sp, #2644]	; 0xa54
   36abc:	str	r1, [sp, #2640]	; 0xa50
   36ac0:	b	36ac4 <__assert_fail@plt+0x23f0c>
   36ac4:	ldr	r0, [sp, #2640]	; 0xa50
   36ac8:	ldr	r1, [sp, #2644]	; 0xa54
   36acc:	ldr	r2, [fp, #-1288]	; 0xfffffaf8
   36ad0:	ldr	r3, [r2, #-48]	; 0xffffffd0
   36ad4:	ldr	r2, [r2, #-44]	; 0xffffffd4
   36ad8:	mvn	r2, r2
   36adc:	mvn	r3, r3
   36ae0:	subs	r1, r3, r1
   36ae4:	sbcs	r0, r2, r0
   36ae8:	str	r1, [sp, #2636]	; 0xa4c
   36aec:	str	r0, [sp, #2632]	; 0xa48
   36af0:	bge	36d38 <__assert_fail@plt+0x24180>
   36af4:	b	36d5c <__assert_fail@plt+0x241a4>
   36af8:	b	36afc <__assert_fail@plt+0x23f44>
   36afc:	b	36b90 <__assert_fail@plt+0x23fd8>
   36b00:	b	36b90 <__assert_fail@plt+0x23fd8>
   36b04:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   36b08:	ldr	r1, [r0]
   36b0c:	ldr	r0, [r0, #4]
   36b10:	and	r0, r1, r0
   36b14:	cmn	r0, #1
   36b18:	bne	36b90 <__assert_fail@plt+0x23fd8>
   36b1c:	b	36b20 <__assert_fail@plt+0x23f68>
   36b20:	b	36b24 <__assert_fail@plt+0x23f6c>
   36b24:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   36b28:	ldr	r1, [r0, #-48]	; 0xffffffd0
   36b2c:	ldr	r0, [r0, #-44]	; 0xffffffd4
   36b30:	rsbs	r1, r1, #0
   36b34:	rscs	r0, r0, #0
   36b38:	str	r1, [sp, #2628]	; 0xa44
   36b3c:	str	r0, [sp, #2624]	; 0xa40
   36b40:	blt	36d38 <__assert_fail@plt+0x24180>
   36b44:	b	36d5c <__assert_fail@plt+0x241a4>
   36b48:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   36b4c:	ldr	r1, [r0, #-48]	; 0xffffffd0
   36b50:	ldr	r0, [r0, #-44]	; 0xffffffd4
   36b54:	subs	r1, r1, #1
   36b58:	sbcs	r0, r0, #0
   36b5c:	str	r1, [sp, #2620]	; 0xa3c
   36b60:	str	r0, [sp, #2616]	; 0xa38
   36b64:	blt	36d5c <__assert_fail@plt+0x241a4>
   36b68:	b	36b6c <__assert_fail@plt+0x23fb4>
   36b6c:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   36b70:	ldr	r1, [r0, #-48]	; 0xffffffd0
   36b74:	ldr	r0, [r0, #-44]	; 0xffffffd4
   36b78:	subs	r1, r1, #1
   36b7c:	sbc	r0, r0, #0
   36b80:	cmn	r0, #1
   36b84:	str	r1, [sp, #2612]	; 0xa34
   36b88:	bgt	36d38 <__assert_fail@plt+0x24180>
   36b8c:	b	36d5c <__assert_fail@plt+0x241a4>
   36b90:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   36b94:	ldr	r1, [r0, #-48]	; 0xffffffd0
   36b98:	ldr	r2, [r0, #-44]	; 0xffffffd4
   36b9c:	ldr	r3, [r0]
   36ba0:	ldr	r0, [r0, #4]
   36ba4:	mov	ip, #0
   36ba8:	str	r0, [sp, #2608]	; 0xa30
   36bac:	mov	r0, ip
   36bb0:	str	r1, [sp, #2604]	; 0xa2c
   36bb4:	mov	r1, ip
   36bb8:	str	r2, [sp, #2600]	; 0xa28
   36bbc:	mov	r2, r3
   36bc0:	ldr	r3, [sp, #2608]	; 0xa30
   36bc4:	bl	77780 <__assert_fail@plt+0x64bc8>
   36bc8:	ldr	r2, [sp, #2604]	; 0xa2c
   36bcc:	subs	r0, r0, r2
   36bd0:	ldr	r2, [sp, #2600]	; 0xa28
   36bd4:	sbcs	r1, r1, r2
   36bd8:	str	r0, [sp, #2596]	; 0xa24
   36bdc:	str	r1, [sp, #2592]	; 0xa20
   36be0:	blt	36d38 <__assert_fail@plt+0x24180>
   36be4:	b	36d5c <__assert_fail@plt+0x241a4>
   36be8:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   36bec:	ldr	r1, [r0]
   36bf0:	ldr	r0, [r0, #4]
   36bf4:	orr	r0, r1, r0
   36bf8:	cmp	r0, #0
   36bfc:	bne	36c08 <__assert_fail@plt+0x24050>
   36c00:	b	36c04 <__assert_fail@plt+0x2404c>
   36c04:	b	36d5c <__assert_fail@plt+0x241a4>
   36c08:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   36c0c:	ldr	r0, [r0, #-44]	; 0xffffffd4
   36c10:	cmn	r0, #1
   36c14:	bgt	36cdc <__assert_fail@plt+0x24124>
   36c18:	b	36c1c <__assert_fail@plt+0x24064>
   36c1c:	b	36c20 <__assert_fail@plt+0x24068>
   36c20:	b	36c90 <__assert_fail@plt+0x240d8>
   36c24:	b	36c90 <__assert_fail@plt+0x240d8>
   36c28:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   36c2c:	ldr	r1, [r0, #-48]	; 0xffffffd0
   36c30:	ldr	r0, [r0, #-44]	; 0xffffffd4
   36c34:	and	r0, r1, r0
   36c38:	cmn	r0, #1
   36c3c:	bne	36c90 <__assert_fail@plt+0x240d8>
   36c40:	b	36c44 <__assert_fail@plt+0x2408c>
   36c44:	b	36c48 <__assert_fail@plt+0x24090>
   36c48:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   36c4c:	ldr	r1, [r0]
   36c50:	ldr	r0, [r0, #4]
   36c54:	rsbs	r1, r1, #0
   36c58:	rscs	r0, r0, #0
   36c5c:	str	r1, [sp, #2588]	; 0xa1c
   36c60:	str	r0, [sp, #2584]	; 0xa18
   36c64:	blt	36d38 <__assert_fail@plt+0x24180>
   36c68:	b	36d5c <__assert_fail@plt+0x241a4>
   36c6c:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   36c70:	ldr	r1, [r0]
   36c74:	ldr	r0, [r0, #4]
   36c78:	subs	r1, r1, #1
   36c7c:	sbc	r0, r0, #0
   36c80:	cmn	r0, #1
   36c84:	str	r1, [sp, #2580]	; 0xa14
   36c88:	bgt	36d38 <__assert_fail@plt+0x24180>
   36c8c:	b	36d5c <__assert_fail@plt+0x241a4>
   36c90:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   36c94:	ldr	r2, [r0, #-48]	; 0xffffffd0
   36c98:	ldr	r3, [r0, #-44]	; 0xffffffd4
   36c9c:	ldr	r1, [r0]
   36ca0:	ldr	r0, [r0, #4]
   36ca4:	mov	ip, #0
   36ca8:	str	r0, [sp, #2576]	; 0xa10
   36cac:	mov	r0, ip
   36cb0:	str	r1, [sp, #2572]	; 0xa0c
   36cb4:	mov	r1, ip
   36cb8:	bl	77780 <__assert_fail@plt+0x64bc8>
   36cbc:	ldr	r2, [sp, #2572]	; 0xa0c
   36cc0:	subs	r0, r0, r2
   36cc4:	ldr	r2, [sp, #2576]	; 0xa10
   36cc8:	sbcs	r1, r1, r2
   36ccc:	str	r0, [sp, #2568]	; 0xa08
   36cd0:	str	r1, [sp, #2564]	; 0xa04
   36cd4:	blt	36d38 <__assert_fail@plt+0x24180>
   36cd8:	b	36d5c <__assert_fail@plt+0x241a4>
   36cdc:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   36ce0:	ldr	r1, [r0, #-48]	; 0xffffffd0
   36ce4:	ldr	r2, [r0, #-44]	; 0xffffffd4
   36ce8:	ldr	r3, [r0]
   36cec:	ldr	r0, [r0, #4]
   36cf0:	mov	ip, #255	; 0xff
   36cf4:	mov	lr, #0
   36cf8:	str	r0, [sp, #2560]	; 0xa00
   36cfc:	mov	r0, ip
   36d00:	str	r1, [sp, #2556]	; 0x9fc
   36d04:	mov	r1, lr
   36d08:	str	r2, [sp, #2552]	; 0x9f8
   36d0c:	mov	r2, r3
   36d10:	ldr	r3, [sp, #2560]	; 0xa00
   36d14:	bl	77780 <__assert_fail@plt+0x64bc8>
   36d18:	ldr	r2, [sp, #2556]	; 0x9fc
   36d1c:	subs	r0, r0, r2
   36d20:	ldr	r2, [sp, #2552]	; 0x9f8
   36d24:	sbcs	r1, r1, r2
   36d28:	str	r0, [sp, #2548]	; 0x9f4
   36d2c:	str	r1, [sp, #2544]	; 0x9f0
   36d30:	bge	36d5c <__assert_fail@plt+0x241a4>
   36d34:	b	36d38 <__assert_fail@plt+0x24180>
   36d38:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   36d3c:	ldr	r1, [r0, #-48]	; 0xffffffd0
   36d40:	ldr	r0, [r0]
   36d44:	mul	r0, r1, r0
   36d48:	uxtb	r0, r0
   36d4c:	mov	r1, #0
   36d50:	str	r1, [fp, #-1340]	; 0xfffffac4
   36d54:	str	r0, [fp, #-1344]	; 0xfffffac0
   36d58:	b	38c60 <__assert_fail@plt+0x260a8>
   36d5c:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   36d60:	ldr	r1, [r0, #-48]	; 0xffffffd0
   36d64:	ldr	r0, [r0]
   36d68:	mul	r0, r1, r0
   36d6c:	uxtb	r0, r0
   36d70:	mov	r1, #0
   36d74:	str	r1, [fp, #-1340]	; 0xfffffac4
   36d78:	str	r0, [fp, #-1344]	; 0xfffffac0
   36d7c:	b	38c64 <__assert_fail@plt+0x260ac>
   36d80:	b	37558 <__assert_fail@plt+0x249a0>
   36d84:	b	36d88 <__assert_fail@plt+0x241d0>
   36d88:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   36d8c:	ldr	r0, [r0, #4]
   36d90:	cmn	r0, #1
   36d94:	bgt	36fd8 <__assert_fail@plt+0x24420>
   36d98:	b	36d9c <__assert_fail@plt+0x241e4>
   36d9c:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   36da0:	ldr	r0, [r0, #-44]	; 0xffffffd4
   36da4:	cmn	r0, #1
   36da8:	bgt	36ecc <__assert_fail@plt+0x24314>
   36dac:	b	36db0 <__assert_fail@plt+0x241f8>
   36db0:	b	36db4 <__assert_fail@plt+0x241fc>
   36db4:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   36db8:	ldr	r1, [r0, #-48]	; 0xffffffd0
   36dbc:	ldr	r2, [r0, #-44]	; 0xffffffd4
   36dc0:	ldr	r3, [r0]
   36dc4:	ldr	r0, [r0, #4]
   36dc8:	movw	ip, #32767	; 0x7fff
   36dcc:	mov	lr, #0
   36dd0:	str	r0, [sp, #2540]	; 0x9ec
   36dd4:	mov	r0, ip
   36dd8:	str	r1, [sp, #2536]	; 0x9e8
   36ddc:	mov	r1, lr
   36de0:	str	r2, [sp, #2532]	; 0x9e4
   36de4:	mov	r2, r3
   36de8:	ldr	r3, [sp, #2540]	; 0x9ec
   36dec:	bl	77780 <__assert_fail@plt+0x64bc8>
   36df0:	ldr	r2, [sp, #2536]	; 0x9e8
   36df4:	subs	r0, r2, r0
   36df8:	ldr	r2, [sp, #2532]	; 0x9e4
   36dfc:	sbcs	r1, r2, r1
   36e00:	str	r0, [sp, #2528]	; 0x9e0
   36e04:	str	r1, [sp, #2524]	; 0x9dc
   36e08:	blt	37144 <__assert_fail@plt+0x2458c>
   36e0c:	b	37168 <__assert_fail@plt+0x245b0>
   36e10:	b	36e14 <__assert_fail@plt+0x2425c>
   36e14:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   36e18:	ldr	r1, [r0]
   36e1c:	ldr	r0, [r0, #4]
   36e20:	eor	r0, r0, #-2147483648	; 0x80000000
   36e24:	orr	r0, r1, r0
   36e28:	cmp	r0, #0
   36e2c:	beq	36e58 <__assert_fail@plt+0x242a0>
   36e30:	b	36e6c <__assert_fail@plt+0x242b4>
   36e34:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   36e38:	ldr	r1, [r0]
   36e3c:	ldr	r0, [r0, #4]
   36e40:	subs	r1, r1, #1
   36e44:	sbcs	r0, r0, #0
   36e48:	str	r1, [sp, #2520]	; 0x9d8
   36e4c:	str	r0, [sp, #2516]	; 0x9d4
   36e50:	blt	36e6c <__assert_fail@plt+0x242b4>
   36e54:	b	36e58 <__assert_fail@plt+0x242a0>
   36e58:	mov	r0, #0
   36e5c:	mov	r1, r0
   36e60:	str	r1, [sp, #2512]	; 0x9d0
   36e64:	str	r0, [sp, #2508]	; 0x9cc
   36e68:	b	36e98 <__assert_fail@plt+0x242e0>
   36e6c:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   36e70:	ldr	r1, [r0]
   36e74:	ldr	r0, [r0, #4]
   36e78:	rsbs	r2, r1, #0
   36e7c:	rsc	r3, r0, #0
   36e80:	movw	r0, #32767	; 0x7fff
   36e84:	mov	r1, #0
   36e88:	bl	77780 <__assert_fail@plt+0x64bc8>
   36e8c:	str	r0, [sp, #2512]	; 0x9d0
   36e90:	str	r1, [sp, #2508]	; 0x9cc
   36e94:	b	36e98 <__assert_fail@plt+0x242e0>
   36e98:	ldr	r0, [sp, #2508]	; 0x9cc
   36e9c:	ldr	r1, [sp, #2512]	; 0x9d0
   36ea0:	ldr	r2, [fp, #-1288]	; 0xfffffaf8
   36ea4:	ldr	r3, [r2, #-48]	; 0xffffffd0
   36ea8:	ldr	r2, [r2, #-44]	; 0xffffffd4
   36eac:	mvn	r2, r2
   36eb0:	mvn	r3, r3
   36eb4:	subs	r1, r3, r1
   36eb8:	sbcs	r0, r2, r0
   36ebc:	str	r1, [sp, #2504]	; 0x9c8
   36ec0:	str	r0, [sp, #2500]	; 0x9c4
   36ec4:	bge	37144 <__assert_fail@plt+0x2458c>
   36ec8:	b	37168 <__assert_fail@plt+0x245b0>
   36ecc:	b	36ed0 <__assert_fail@plt+0x24318>
   36ed0:	b	36f78 <__assert_fail@plt+0x243c0>
   36ed4:	b	36f78 <__assert_fail@plt+0x243c0>
   36ed8:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   36edc:	ldr	r1, [r0]
   36ee0:	ldr	r0, [r0, #4]
   36ee4:	and	r0, r1, r0
   36ee8:	cmn	r0, #1
   36eec:	bne	36f78 <__assert_fail@plt+0x243c0>
   36ef0:	b	36ef4 <__assert_fail@plt+0x2433c>
   36ef4:	b	36ef8 <__assert_fail@plt+0x24340>
   36ef8:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   36efc:	ldr	r1, [r0, #-48]	; 0xffffffd0
   36f00:	ldr	r0, [r0, #-44]	; 0xffffffd4
   36f04:	subs	r1, r1, #32768	; 0x8000
   36f08:	sbc	r0, r0, #0
   36f0c:	rsbs	r1, r1, #0
   36f10:	rscs	r0, r0, #0
   36f14:	str	r1, [sp, #2496]	; 0x9c0
   36f18:	str	r0, [sp, #2492]	; 0x9bc
   36f1c:	blt	37144 <__assert_fail@plt+0x2458c>
   36f20:	b	37168 <__assert_fail@plt+0x245b0>
   36f24:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   36f28:	ldr	r1, [r0, #-48]	; 0xffffffd0
   36f2c:	ldr	r0, [r0, #-44]	; 0xffffffd4
   36f30:	subs	r1, r1, #1
   36f34:	sbcs	r0, r0, #0
   36f38:	str	r1, [sp, #2488]	; 0x9b8
   36f3c:	str	r0, [sp, #2484]	; 0x9b4
   36f40:	blt	37168 <__assert_fail@plt+0x245b0>
   36f44:	b	36f48 <__assert_fail@plt+0x24390>
   36f48:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   36f4c:	ldr	r1, [r0, #-48]	; 0xffffffd0
   36f50:	ldr	r0, [r0, #-44]	; 0xffffffd4
   36f54:	subs	r1, r1, #1
   36f58:	sbc	r0, r0, #0
   36f5c:	movw	r2, #32767	; 0x7fff
   36f60:	subs	r1, r2, r1
   36f64:	rscs	r0, r0, #0
   36f68:	str	r1, [sp, #2480]	; 0x9b0
   36f6c:	str	r0, [sp, #2476]	; 0x9ac
   36f70:	blt	37144 <__assert_fail@plt+0x2458c>
   36f74:	b	37168 <__assert_fail@plt+0x245b0>
   36f78:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   36f7c:	ldr	r1, [r0, #-48]	; 0xffffffd0
   36f80:	ldr	r2, [r0, #-44]	; 0xffffffd4
   36f84:	ldr	r3, [r0]
   36f88:	ldr	r0, [r0, #4]
   36f8c:	movw	ip, #32768	; 0x8000
   36f90:	movt	ip, #65535	; 0xffff
   36f94:	mvn	lr, #0
   36f98:	str	r0, [sp, #2472]	; 0x9a8
   36f9c:	mov	r0, ip
   36fa0:	str	r1, [sp, #2468]	; 0x9a4
   36fa4:	mov	r1, lr
   36fa8:	str	r2, [sp, #2464]	; 0x9a0
   36fac:	mov	r2, r3
   36fb0:	ldr	r3, [sp, #2472]	; 0x9a8
   36fb4:	bl	77780 <__assert_fail@plt+0x64bc8>
   36fb8:	ldr	r2, [sp, #2468]	; 0x9a4
   36fbc:	subs	r0, r0, r2
   36fc0:	ldr	r2, [sp, #2464]	; 0x9a0
   36fc4:	sbcs	r1, r1, r2
   36fc8:	str	r0, [sp, #2460]	; 0x99c
   36fcc:	str	r1, [sp, #2456]	; 0x998
   36fd0:	blt	37144 <__assert_fail@plt+0x2458c>
   36fd4:	b	37168 <__assert_fail@plt+0x245b0>
   36fd8:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   36fdc:	ldr	r1, [r0]
   36fe0:	ldr	r0, [r0, #4]
   36fe4:	orr	r0, r1, r0
   36fe8:	cmp	r0, #0
   36fec:	bne	36ff8 <__assert_fail@plt+0x24440>
   36ff0:	b	36ff4 <__assert_fail@plt+0x2443c>
   36ff4:	b	37168 <__assert_fail@plt+0x245b0>
   36ff8:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   36ffc:	ldr	r0, [r0, #-44]	; 0xffffffd4
   37000:	cmn	r0, #1
   37004:	bgt	370e8 <__assert_fail@plt+0x24530>
   37008:	b	3700c <__assert_fail@plt+0x24454>
   3700c:	b	37010 <__assert_fail@plt+0x24458>
   37010:	b	37094 <__assert_fail@plt+0x244dc>
   37014:	b	37094 <__assert_fail@plt+0x244dc>
   37018:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3701c:	ldr	r1, [r0, #-48]	; 0xffffffd0
   37020:	ldr	r0, [r0, #-44]	; 0xffffffd4
   37024:	and	r0, r1, r0
   37028:	cmn	r0, #1
   3702c:	bne	37094 <__assert_fail@plt+0x244dc>
   37030:	b	37034 <__assert_fail@plt+0x2447c>
   37034:	b	37038 <__assert_fail@plt+0x24480>
   37038:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3703c:	ldr	r1, [r0]
   37040:	ldr	r0, [r0, #4]
   37044:	subs	r1, r1, #32768	; 0x8000
   37048:	sbc	r0, r0, #0
   3704c:	rsbs	r1, r1, #0
   37050:	rscs	r0, r0, #0
   37054:	str	r1, [sp, #2452]	; 0x994
   37058:	str	r0, [sp, #2448]	; 0x990
   3705c:	blt	37144 <__assert_fail@plt+0x2458c>
   37060:	b	37168 <__assert_fail@plt+0x245b0>
   37064:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   37068:	ldr	r1, [r0]
   3706c:	ldr	r0, [r0, #4]
   37070:	subs	r1, r1, #1
   37074:	sbc	r0, r0, #0
   37078:	movw	r2, #32767	; 0x7fff
   3707c:	subs	r1, r2, r1
   37080:	rscs	r0, r0, #0
   37084:	str	r1, [sp, #2444]	; 0x98c
   37088:	str	r0, [sp, #2440]	; 0x988
   3708c:	blt	37144 <__assert_fail@plt+0x2458c>
   37090:	b	37168 <__assert_fail@plt+0x245b0>
   37094:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   37098:	ldr	r2, [r0, #-48]	; 0xffffffd0
   3709c:	ldr	r3, [r0, #-44]	; 0xffffffd4
   370a0:	ldr	r1, [r0]
   370a4:	ldr	r0, [r0, #4]
   370a8:	movw	ip, #32768	; 0x8000
   370ac:	movt	ip, #65535	; 0xffff
   370b0:	mvn	lr, #0
   370b4:	str	r0, [sp, #2436]	; 0x984
   370b8:	mov	r0, ip
   370bc:	str	r1, [sp, #2432]	; 0x980
   370c0:	mov	r1, lr
   370c4:	bl	77780 <__assert_fail@plt+0x64bc8>
   370c8:	ldr	r2, [sp, #2432]	; 0x980
   370cc:	subs	r0, r0, r2
   370d0:	ldr	r2, [sp, #2436]	; 0x984
   370d4:	sbcs	r1, r1, r2
   370d8:	str	r0, [sp, #2428]	; 0x97c
   370dc:	str	r1, [sp, #2424]	; 0x978
   370e0:	blt	37144 <__assert_fail@plt+0x2458c>
   370e4:	b	37168 <__assert_fail@plt+0x245b0>
   370e8:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   370ec:	ldr	r1, [r0, #-48]	; 0xffffffd0
   370f0:	ldr	r2, [r0, #-44]	; 0xffffffd4
   370f4:	ldr	r3, [r0]
   370f8:	ldr	r0, [r0, #4]
   370fc:	movw	ip, #32767	; 0x7fff
   37100:	mov	lr, #0
   37104:	str	r0, [sp, #2420]	; 0x974
   37108:	mov	r0, ip
   3710c:	str	r1, [sp, #2416]	; 0x970
   37110:	mov	r1, lr
   37114:	str	r2, [sp, #2412]	; 0x96c
   37118:	mov	r2, r3
   3711c:	ldr	r3, [sp, #2420]	; 0x974
   37120:	bl	77780 <__assert_fail@plt+0x64bc8>
   37124:	ldr	r2, [sp, #2416]	; 0x970
   37128:	subs	r0, r0, r2
   3712c:	ldr	r2, [sp, #2412]	; 0x96c
   37130:	sbcs	r1, r1, r2
   37134:	str	r0, [sp, #2408]	; 0x968
   37138:	str	r1, [sp, #2404]	; 0x964
   3713c:	bge	37168 <__assert_fail@plt+0x245b0>
   37140:	b	37144 <__assert_fail@plt+0x2458c>
   37144:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   37148:	ldr	r1, [r0, #-48]	; 0xffffffd0
   3714c:	ldr	r0, [r0]
   37150:	mul	r0, r1, r0
   37154:	sxth	r0, r0
   37158:	asr	r1, r0, #31
   3715c:	str	r0, [fp, #-1344]	; 0xfffffac0
   37160:	str	r1, [fp, #-1340]	; 0xfffffac4
   37164:	b	38c60 <__assert_fail@plt+0x260a8>
   37168:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3716c:	ldr	r1, [r0, #-48]	; 0xffffffd0
   37170:	ldr	r0, [r0]
   37174:	mul	r0, r1, r0
   37178:	sxth	r0, r0
   3717c:	asr	r1, r0, #31
   37180:	str	r0, [fp, #-1344]	; 0xfffffac0
   37184:	str	r1, [fp, #-1340]	; 0xfffffac4
   37188:	b	38c64 <__assert_fail@plt+0x260ac>
   3718c:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   37190:	ldr	r0, [r0, #4]
   37194:	cmn	r0, #1
   37198:	bgt	373c0 <__assert_fail@plt+0x24808>
   3719c:	b	371a0 <__assert_fail@plt+0x245e8>
   371a0:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   371a4:	ldr	r0, [r0, #-44]	; 0xffffffd4
   371a8:	cmn	r0, #1
   371ac:	bgt	372d0 <__assert_fail@plt+0x24718>
   371b0:	b	371b4 <__assert_fail@plt+0x245fc>
   371b4:	b	371b8 <__assert_fail@plt+0x24600>
   371b8:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   371bc:	ldr	r1, [r0, #-48]	; 0xffffffd0
   371c0:	ldr	r2, [r0, #-44]	; 0xffffffd4
   371c4:	ldr	r3, [r0]
   371c8:	ldr	r0, [r0, #4]
   371cc:	movw	ip, #65535	; 0xffff
   371d0:	mov	lr, #0
   371d4:	str	r0, [sp, #2400]	; 0x960
   371d8:	mov	r0, ip
   371dc:	str	r1, [sp, #2396]	; 0x95c
   371e0:	mov	r1, lr
   371e4:	str	r2, [sp, #2392]	; 0x958
   371e8:	mov	r2, r3
   371ec:	ldr	r3, [sp, #2400]	; 0x960
   371f0:	bl	77780 <__assert_fail@plt+0x64bc8>
   371f4:	ldr	r2, [sp, #2396]	; 0x95c
   371f8:	subs	r0, r2, r0
   371fc:	ldr	r2, [sp, #2392]	; 0x958
   37200:	sbcs	r1, r2, r1
   37204:	str	r0, [sp, #2388]	; 0x954
   37208:	str	r1, [sp, #2384]	; 0x950
   3720c:	blt	37510 <__assert_fail@plt+0x24958>
   37210:	b	37534 <__assert_fail@plt+0x2497c>
   37214:	b	37218 <__assert_fail@plt+0x24660>
   37218:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3721c:	ldr	r1, [r0]
   37220:	ldr	r0, [r0, #4]
   37224:	eor	r0, r0, #-2147483648	; 0x80000000
   37228:	orr	r0, r1, r0
   3722c:	cmp	r0, #0
   37230:	beq	3725c <__assert_fail@plt+0x246a4>
   37234:	b	37270 <__assert_fail@plt+0x246b8>
   37238:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3723c:	ldr	r1, [r0]
   37240:	ldr	r0, [r0, #4]
   37244:	subs	r1, r1, #1
   37248:	sbcs	r0, r0, #0
   3724c:	str	r1, [sp, #2380]	; 0x94c
   37250:	str	r0, [sp, #2376]	; 0x948
   37254:	blt	37270 <__assert_fail@plt+0x246b8>
   37258:	b	3725c <__assert_fail@plt+0x246a4>
   3725c:	mov	r0, #0
   37260:	mov	r1, r0
   37264:	str	r1, [sp, #2372]	; 0x944
   37268:	str	r0, [sp, #2368]	; 0x940
   3726c:	b	3729c <__assert_fail@plt+0x246e4>
   37270:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   37274:	ldr	r1, [r0]
   37278:	ldr	r0, [r0, #4]
   3727c:	rsbs	r2, r1, #0
   37280:	rsc	r3, r0, #0
   37284:	movw	r0, #65535	; 0xffff
   37288:	mov	r1, #0
   3728c:	bl	77780 <__assert_fail@plt+0x64bc8>
   37290:	str	r0, [sp, #2372]	; 0x944
   37294:	str	r1, [sp, #2368]	; 0x940
   37298:	b	3729c <__assert_fail@plt+0x246e4>
   3729c:	ldr	r0, [sp, #2368]	; 0x940
   372a0:	ldr	r1, [sp, #2372]	; 0x944
   372a4:	ldr	r2, [fp, #-1288]	; 0xfffffaf8
   372a8:	ldr	r3, [r2, #-48]	; 0xffffffd0
   372ac:	ldr	r2, [r2, #-44]	; 0xffffffd4
   372b0:	mvn	r2, r2
   372b4:	mvn	r3, r3
   372b8:	subs	r1, r3, r1
   372bc:	sbcs	r0, r2, r0
   372c0:	str	r1, [sp, #2364]	; 0x93c
   372c4:	str	r0, [sp, #2360]	; 0x938
   372c8:	bge	37510 <__assert_fail@plt+0x24958>
   372cc:	b	37534 <__assert_fail@plt+0x2497c>
   372d0:	b	372d4 <__assert_fail@plt+0x2471c>
   372d4:	b	37368 <__assert_fail@plt+0x247b0>
   372d8:	b	37368 <__assert_fail@plt+0x247b0>
   372dc:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   372e0:	ldr	r1, [r0]
   372e4:	ldr	r0, [r0, #4]
   372e8:	and	r0, r1, r0
   372ec:	cmn	r0, #1
   372f0:	bne	37368 <__assert_fail@plt+0x247b0>
   372f4:	b	372f8 <__assert_fail@plt+0x24740>
   372f8:	b	372fc <__assert_fail@plt+0x24744>
   372fc:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   37300:	ldr	r1, [r0, #-48]	; 0xffffffd0
   37304:	ldr	r0, [r0, #-44]	; 0xffffffd4
   37308:	rsbs	r1, r1, #0
   3730c:	rscs	r0, r0, #0
   37310:	str	r1, [sp, #2356]	; 0x934
   37314:	str	r0, [sp, #2352]	; 0x930
   37318:	blt	37510 <__assert_fail@plt+0x24958>
   3731c:	b	37534 <__assert_fail@plt+0x2497c>
   37320:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   37324:	ldr	r1, [r0, #-48]	; 0xffffffd0
   37328:	ldr	r0, [r0, #-44]	; 0xffffffd4
   3732c:	subs	r1, r1, #1
   37330:	sbcs	r0, r0, #0
   37334:	str	r1, [sp, #2348]	; 0x92c
   37338:	str	r0, [sp, #2344]	; 0x928
   3733c:	blt	37534 <__assert_fail@plt+0x2497c>
   37340:	b	37344 <__assert_fail@plt+0x2478c>
   37344:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   37348:	ldr	r1, [r0, #-48]	; 0xffffffd0
   3734c:	ldr	r0, [r0, #-44]	; 0xffffffd4
   37350:	subs	r1, r1, #1
   37354:	sbc	r0, r0, #0
   37358:	cmn	r0, #1
   3735c:	str	r1, [sp, #2340]	; 0x924
   37360:	bgt	37510 <__assert_fail@plt+0x24958>
   37364:	b	37534 <__assert_fail@plt+0x2497c>
   37368:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3736c:	ldr	r1, [r0, #-48]	; 0xffffffd0
   37370:	ldr	r2, [r0, #-44]	; 0xffffffd4
   37374:	ldr	r3, [r0]
   37378:	ldr	r0, [r0, #4]
   3737c:	mov	ip, #0
   37380:	str	r0, [sp, #2336]	; 0x920
   37384:	mov	r0, ip
   37388:	str	r1, [sp, #2332]	; 0x91c
   3738c:	mov	r1, ip
   37390:	str	r2, [sp, #2328]	; 0x918
   37394:	mov	r2, r3
   37398:	ldr	r3, [sp, #2336]	; 0x920
   3739c:	bl	77780 <__assert_fail@plt+0x64bc8>
   373a0:	ldr	r2, [sp, #2332]	; 0x91c
   373a4:	subs	r0, r0, r2
   373a8:	ldr	r2, [sp, #2328]	; 0x918
   373ac:	sbcs	r1, r1, r2
   373b0:	str	r0, [sp, #2324]	; 0x914
   373b4:	str	r1, [sp, #2320]	; 0x910
   373b8:	blt	37510 <__assert_fail@plt+0x24958>
   373bc:	b	37534 <__assert_fail@plt+0x2497c>
   373c0:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   373c4:	ldr	r1, [r0]
   373c8:	ldr	r0, [r0, #4]
   373cc:	orr	r0, r1, r0
   373d0:	cmp	r0, #0
   373d4:	bne	373e0 <__assert_fail@plt+0x24828>
   373d8:	b	373dc <__assert_fail@plt+0x24824>
   373dc:	b	37534 <__assert_fail@plt+0x2497c>
   373e0:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   373e4:	ldr	r0, [r0, #-44]	; 0xffffffd4
   373e8:	cmn	r0, #1
   373ec:	bgt	374b4 <__assert_fail@plt+0x248fc>
   373f0:	b	373f4 <__assert_fail@plt+0x2483c>
   373f4:	b	373f8 <__assert_fail@plt+0x24840>
   373f8:	b	37468 <__assert_fail@plt+0x248b0>
   373fc:	b	37468 <__assert_fail@plt+0x248b0>
   37400:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   37404:	ldr	r1, [r0, #-48]	; 0xffffffd0
   37408:	ldr	r0, [r0, #-44]	; 0xffffffd4
   3740c:	and	r0, r1, r0
   37410:	cmn	r0, #1
   37414:	bne	37468 <__assert_fail@plt+0x248b0>
   37418:	b	3741c <__assert_fail@plt+0x24864>
   3741c:	b	37420 <__assert_fail@plt+0x24868>
   37420:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   37424:	ldr	r1, [r0]
   37428:	ldr	r0, [r0, #4]
   3742c:	rsbs	r1, r1, #0
   37430:	rscs	r0, r0, #0
   37434:	str	r1, [sp, #2316]	; 0x90c
   37438:	str	r0, [sp, #2312]	; 0x908
   3743c:	blt	37510 <__assert_fail@plt+0x24958>
   37440:	b	37534 <__assert_fail@plt+0x2497c>
   37444:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   37448:	ldr	r1, [r0]
   3744c:	ldr	r0, [r0, #4]
   37450:	subs	r1, r1, #1
   37454:	sbc	r0, r0, #0
   37458:	cmn	r0, #1
   3745c:	str	r1, [sp, #2308]	; 0x904
   37460:	bgt	37510 <__assert_fail@plt+0x24958>
   37464:	b	37534 <__assert_fail@plt+0x2497c>
   37468:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3746c:	ldr	r2, [r0, #-48]	; 0xffffffd0
   37470:	ldr	r3, [r0, #-44]	; 0xffffffd4
   37474:	ldr	r1, [r0]
   37478:	ldr	r0, [r0, #4]
   3747c:	mov	ip, #0
   37480:	str	r0, [sp, #2304]	; 0x900
   37484:	mov	r0, ip
   37488:	str	r1, [sp, #2300]	; 0x8fc
   3748c:	mov	r1, ip
   37490:	bl	77780 <__assert_fail@plt+0x64bc8>
   37494:	ldr	r2, [sp, #2300]	; 0x8fc
   37498:	subs	r0, r0, r2
   3749c:	ldr	r2, [sp, #2304]	; 0x900
   374a0:	sbcs	r1, r1, r2
   374a4:	str	r0, [sp, #2296]	; 0x8f8
   374a8:	str	r1, [sp, #2292]	; 0x8f4
   374ac:	blt	37510 <__assert_fail@plt+0x24958>
   374b0:	b	37534 <__assert_fail@plt+0x2497c>
   374b4:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   374b8:	ldr	r1, [r0, #-48]	; 0xffffffd0
   374bc:	ldr	r2, [r0, #-44]	; 0xffffffd4
   374c0:	ldr	r3, [r0]
   374c4:	ldr	r0, [r0, #4]
   374c8:	movw	ip, #65535	; 0xffff
   374cc:	mov	lr, #0
   374d0:	str	r0, [sp, #2288]	; 0x8f0
   374d4:	mov	r0, ip
   374d8:	str	r1, [sp, #2284]	; 0x8ec
   374dc:	mov	r1, lr
   374e0:	str	r2, [sp, #2280]	; 0x8e8
   374e4:	mov	r2, r3
   374e8:	ldr	r3, [sp, #2288]	; 0x8f0
   374ec:	bl	77780 <__assert_fail@plt+0x64bc8>
   374f0:	ldr	r2, [sp, #2284]	; 0x8ec
   374f4:	subs	r0, r0, r2
   374f8:	ldr	r2, [sp, #2280]	; 0x8e8
   374fc:	sbcs	r1, r1, r2
   37500:	str	r0, [sp, #2276]	; 0x8e4
   37504:	str	r1, [sp, #2272]	; 0x8e0
   37508:	bge	37534 <__assert_fail@plt+0x2497c>
   3750c:	b	37510 <__assert_fail@plt+0x24958>
   37510:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   37514:	ldr	r1, [r0, #-48]	; 0xffffffd0
   37518:	ldr	r0, [r0]
   3751c:	mul	r0, r1, r0
   37520:	uxth	r0, r0
   37524:	mov	r1, #0
   37528:	str	r1, [fp, #-1340]	; 0xfffffac4
   3752c:	str	r0, [fp, #-1344]	; 0xfffffac0
   37530:	b	38c60 <__assert_fail@plt+0x260a8>
   37534:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   37538:	ldr	r1, [r0, #-48]	; 0xffffffd0
   3753c:	ldr	r0, [r0]
   37540:	mul	r0, r1, r0
   37544:	uxth	r0, r0
   37548:	mov	r1, #0
   3754c:	str	r1, [fp, #-1340]	; 0xfffffac4
   37550:	str	r0, [fp, #-1344]	; 0xfffffac0
   37554:	b	38c64 <__assert_fail@plt+0x260ac>
   37558:	b	37d18 <__assert_fail@plt+0x25160>
   3755c:	b	37560 <__assert_fail@plt+0x249a8>
   37560:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   37564:	ldr	r0, [r0, #4]
   37568:	cmn	r0, #1
   3756c:	bgt	377ac <__assert_fail@plt+0x24bf4>
   37570:	b	37574 <__assert_fail@plt+0x249bc>
   37574:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   37578:	ldr	r0, [r0, #-44]	; 0xffffffd4
   3757c:	cmn	r0, #1
   37580:	bgt	376a4 <__assert_fail@plt+0x24aec>
   37584:	b	37588 <__assert_fail@plt+0x249d0>
   37588:	b	3758c <__assert_fail@plt+0x249d4>
   3758c:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   37590:	ldr	r1, [r0, #-48]	; 0xffffffd0
   37594:	ldr	r2, [r0, #-44]	; 0xffffffd4
   37598:	ldr	r3, [r0]
   3759c:	ldr	r0, [r0, #4]
   375a0:	mvn	ip, #-2147483648	; 0x80000000
   375a4:	mov	lr, #0
   375a8:	str	r0, [sp, #2268]	; 0x8dc
   375ac:	mov	r0, ip
   375b0:	str	r1, [sp, #2264]	; 0x8d8
   375b4:	mov	r1, lr
   375b8:	str	r2, [sp, #2260]	; 0x8d4
   375bc:	mov	r2, r3
   375c0:	ldr	r3, [sp, #2268]	; 0x8dc
   375c4:	bl	77780 <__assert_fail@plt+0x64bc8>
   375c8:	ldr	r2, [sp, #2264]	; 0x8d8
   375cc:	subs	r0, r2, r0
   375d0:	ldr	r2, [sp, #2260]	; 0x8d4
   375d4:	sbcs	r1, r2, r1
   375d8:	str	r0, [sp, #2256]	; 0x8d0
   375dc:	str	r1, [sp, #2252]	; 0x8cc
   375e0:	blt	37914 <__assert_fail@plt+0x24d5c>
   375e4:	b	37934 <__assert_fail@plt+0x24d7c>
   375e8:	b	375ec <__assert_fail@plt+0x24a34>
   375ec:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   375f0:	ldr	r1, [r0]
   375f4:	ldr	r0, [r0, #4]
   375f8:	eor	r0, r0, #-2147483648	; 0x80000000
   375fc:	orr	r0, r1, r0
   37600:	cmp	r0, #0
   37604:	beq	37630 <__assert_fail@plt+0x24a78>
   37608:	b	37644 <__assert_fail@plt+0x24a8c>
   3760c:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   37610:	ldr	r1, [r0]
   37614:	ldr	r0, [r0, #4]
   37618:	subs	r1, r1, #1
   3761c:	sbcs	r0, r0, #0
   37620:	str	r1, [sp, #2248]	; 0x8c8
   37624:	str	r0, [sp, #2244]	; 0x8c4
   37628:	blt	37644 <__assert_fail@plt+0x24a8c>
   3762c:	b	37630 <__assert_fail@plt+0x24a78>
   37630:	mov	r0, #0
   37634:	mov	r1, r0
   37638:	str	r1, [sp, #2240]	; 0x8c0
   3763c:	str	r0, [sp, #2236]	; 0x8bc
   37640:	b	37670 <__assert_fail@plt+0x24ab8>
   37644:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   37648:	ldr	r1, [r0]
   3764c:	ldr	r0, [r0, #4]
   37650:	rsbs	r2, r1, #0
   37654:	rsc	r3, r0, #0
   37658:	mvn	r0, #-2147483648	; 0x80000000
   3765c:	mov	r1, #0
   37660:	bl	77780 <__assert_fail@plt+0x64bc8>
   37664:	str	r0, [sp, #2240]	; 0x8c0
   37668:	str	r1, [sp, #2236]	; 0x8bc
   3766c:	b	37670 <__assert_fail@plt+0x24ab8>
   37670:	ldr	r0, [sp, #2236]	; 0x8bc
   37674:	ldr	r1, [sp, #2240]	; 0x8c0
   37678:	ldr	r2, [fp, #-1288]	; 0xfffffaf8
   3767c:	ldr	r3, [r2, #-48]	; 0xffffffd0
   37680:	ldr	r2, [r2, #-44]	; 0xffffffd4
   37684:	mvn	r2, r2
   37688:	mvn	r3, r3
   3768c:	subs	r1, r3, r1
   37690:	sbcs	r0, r2, r0
   37694:	str	r1, [sp, #2232]	; 0x8b8
   37698:	str	r0, [sp, #2228]	; 0x8b4
   3769c:	bge	37914 <__assert_fail@plt+0x24d5c>
   376a0:	b	37934 <__assert_fail@plt+0x24d7c>
   376a4:	b	376a8 <__assert_fail@plt+0x24af0>
   376a8:	b	37750 <__assert_fail@plt+0x24b98>
   376ac:	b	37750 <__assert_fail@plt+0x24b98>
   376b0:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   376b4:	ldr	r1, [r0]
   376b8:	ldr	r0, [r0, #4]
   376bc:	and	r0, r1, r0
   376c0:	cmn	r0, #1
   376c4:	bne	37750 <__assert_fail@plt+0x24b98>
   376c8:	b	376cc <__assert_fail@plt+0x24b14>
   376cc:	b	376d0 <__assert_fail@plt+0x24b18>
   376d0:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   376d4:	ldr	r1, [r0, #-48]	; 0xffffffd0
   376d8:	ldr	r0, [r0, #-44]	; 0xffffffd4
   376dc:	adds	r1, r1, #-2147483648	; 0x80000000
   376e0:	sbc	r0, r0, #0
   376e4:	rsbs	r1, r1, #0
   376e8:	rscs	r0, r0, #0
   376ec:	str	r1, [sp, #2224]	; 0x8b0
   376f0:	str	r0, [sp, #2220]	; 0x8ac
   376f4:	blt	37914 <__assert_fail@plt+0x24d5c>
   376f8:	b	37934 <__assert_fail@plt+0x24d7c>
   376fc:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   37700:	ldr	r1, [r0, #-48]	; 0xffffffd0
   37704:	ldr	r0, [r0, #-44]	; 0xffffffd4
   37708:	subs	r1, r1, #1
   3770c:	sbcs	r0, r0, #0
   37710:	str	r1, [sp, #2216]	; 0x8a8
   37714:	str	r0, [sp, #2212]	; 0x8a4
   37718:	blt	37934 <__assert_fail@plt+0x24d7c>
   3771c:	b	37720 <__assert_fail@plt+0x24b68>
   37720:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   37724:	ldr	r1, [r0, #-48]	; 0xffffffd0
   37728:	ldr	r0, [r0, #-44]	; 0xffffffd4
   3772c:	subs	r1, r1, #1
   37730:	sbc	r0, r0, #0
   37734:	mvn	r2, #-2147483648	; 0x80000000
   37738:	subs	r1, r2, r1
   3773c:	rscs	r0, r0, #0
   37740:	str	r1, [sp, #2208]	; 0x8a0
   37744:	str	r0, [sp, #2204]	; 0x89c
   37748:	blt	37914 <__assert_fail@plt+0x24d5c>
   3774c:	b	37934 <__assert_fail@plt+0x24d7c>
   37750:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   37754:	ldr	r1, [r0, #-48]	; 0xffffffd0
   37758:	ldr	r2, [r0, #-44]	; 0xffffffd4
   3775c:	ldr	r3, [r0]
   37760:	ldr	r0, [r0, #4]
   37764:	mov	ip, #-2147483648	; 0x80000000
   37768:	mvn	lr, #0
   3776c:	str	r0, [sp, #2200]	; 0x898
   37770:	mov	r0, ip
   37774:	str	r1, [sp, #2196]	; 0x894
   37778:	mov	r1, lr
   3777c:	str	r2, [sp, #2192]	; 0x890
   37780:	mov	r2, r3
   37784:	ldr	r3, [sp, #2200]	; 0x898
   37788:	bl	77780 <__assert_fail@plt+0x64bc8>
   3778c:	ldr	r2, [sp, #2196]	; 0x894
   37790:	subs	r0, r0, r2
   37794:	ldr	r2, [sp, #2192]	; 0x890
   37798:	sbcs	r1, r1, r2
   3779c:	str	r0, [sp, #2188]	; 0x88c
   377a0:	str	r1, [sp, #2184]	; 0x888
   377a4:	blt	37914 <__assert_fail@plt+0x24d5c>
   377a8:	b	37934 <__assert_fail@plt+0x24d7c>
   377ac:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   377b0:	ldr	r1, [r0]
   377b4:	ldr	r0, [r0, #4]
   377b8:	orr	r0, r1, r0
   377bc:	cmp	r0, #0
   377c0:	bne	377cc <__assert_fail@plt+0x24c14>
   377c4:	b	377c8 <__assert_fail@plt+0x24c10>
   377c8:	b	37934 <__assert_fail@plt+0x24d7c>
   377cc:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   377d0:	ldr	r0, [r0, #-44]	; 0xffffffd4
   377d4:	cmn	r0, #1
   377d8:	bgt	378b8 <__assert_fail@plt+0x24d00>
   377dc:	b	377e0 <__assert_fail@plt+0x24c28>
   377e0:	b	377e4 <__assert_fail@plt+0x24c2c>
   377e4:	b	37868 <__assert_fail@plt+0x24cb0>
   377e8:	b	37868 <__assert_fail@plt+0x24cb0>
   377ec:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   377f0:	ldr	r1, [r0, #-48]	; 0xffffffd0
   377f4:	ldr	r0, [r0, #-44]	; 0xffffffd4
   377f8:	and	r0, r1, r0
   377fc:	cmn	r0, #1
   37800:	bne	37868 <__assert_fail@plt+0x24cb0>
   37804:	b	37808 <__assert_fail@plt+0x24c50>
   37808:	b	3780c <__assert_fail@plt+0x24c54>
   3780c:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   37810:	ldr	r1, [r0]
   37814:	ldr	r0, [r0, #4]
   37818:	adds	r1, r1, #-2147483648	; 0x80000000
   3781c:	sbc	r0, r0, #0
   37820:	rsbs	r1, r1, #0
   37824:	rscs	r0, r0, #0
   37828:	str	r1, [sp, #2180]	; 0x884
   3782c:	str	r0, [sp, #2176]	; 0x880
   37830:	blt	37914 <__assert_fail@plt+0x24d5c>
   37834:	b	37934 <__assert_fail@plt+0x24d7c>
   37838:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3783c:	ldr	r1, [r0]
   37840:	ldr	r0, [r0, #4]
   37844:	subs	r1, r1, #1
   37848:	sbc	r0, r0, #0
   3784c:	mvn	r2, #-2147483648	; 0x80000000
   37850:	subs	r1, r2, r1
   37854:	rscs	r0, r0, #0
   37858:	str	r1, [sp, #2172]	; 0x87c
   3785c:	str	r0, [sp, #2168]	; 0x878
   37860:	blt	37914 <__assert_fail@plt+0x24d5c>
   37864:	b	37934 <__assert_fail@plt+0x24d7c>
   37868:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3786c:	ldr	r2, [r0, #-48]	; 0xffffffd0
   37870:	ldr	r3, [r0, #-44]	; 0xffffffd4
   37874:	ldr	r1, [r0]
   37878:	ldr	r0, [r0, #4]
   3787c:	mov	ip, #-2147483648	; 0x80000000
   37880:	mvn	lr, #0
   37884:	str	r0, [sp, #2164]	; 0x874
   37888:	mov	r0, ip
   3788c:	str	r1, [sp, #2160]	; 0x870
   37890:	mov	r1, lr
   37894:	bl	77780 <__assert_fail@plt+0x64bc8>
   37898:	ldr	r2, [sp, #2160]	; 0x870
   3789c:	subs	r0, r0, r2
   378a0:	ldr	r2, [sp, #2164]	; 0x874
   378a4:	sbcs	r1, r1, r2
   378a8:	str	r0, [sp, #2156]	; 0x86c
   378ac:	str	r1, [sp, #2152]	; 0x868
   378b0:	blt	37914 <__assert_fail@plt+0x24d5c>
   378b4:	b	37934 <__assert_fail@plt+0x24d7c>
   378b8:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   378bc:	ldr	r1, [r0, #-48]	; 0xffffffd0
   378c0:	ldr	r2, [r0, #-44]	; 0xffffffd4
   378c4:	ldr	r3, [r0]
   378c8:	ldr	r0, [r0, #4]
   378cc:	mvn	ip, #-2147483648	; 0x80000000
   378d0:	mov	lr, #0
   378d4:	str	r0, [sp, #2148]	; 0x864
   378d8:	mov	r0, ip
   378dc:	str	r1, [sp, #2144]	; 0x860
   378e0:	mov	r1, lr
   378e4:	str	r2, [sp, #2140]	; 0x85c
   378e8:	mov	r2, r3
   378ec:	ldr	r3, [sp, #2148]	; 0x864
   378f0:	bl	77780 <__assert_fail@plt+0x64bc8>
   378f4:	ldr	r2, [sp, #2144]	; 0x860
   378f8:	subs	r0, r0, r2
   378fc:	ldr	r2, [sp, #2140]	; 0x85c
   37900:	sbcs	r1, r1, r2
   37904:	str	r0, [sp, #2136]	; 0x858
   37908:	str	r1, [sp, #2132]	; 0x854
   3790c:	bge	37934 <__assert_fail@plt+0x24d7c>
   37910:	b	37914 <__assert_fail@plt+0x24d5c>
   37914:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   37918:	ldr	r1, [r0, #-48]	; 0xffffffd0
   3791c:	ldr	r0, [r0]
   37920:	mul	r0, r1, r0
   37924:	asr	r1, r0, #31
   37928:	str	r0, [fp, #-1344]	; 0xfffffac0
   3792c:	str	r1, [fp, #-1340]	; 0xfffffac4
   37930:	b	38c60 <__assert_fail@plt+0x260a8>
   37934:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   37938:	ldr	r1, [r0, #-48]	; 0xffffffd0
   3793c:	ldr	r0, [r0]
   37940:	mul	r0, r1, r0
   37944:	asr	r1, r0, #31
   37948:	str	r0, [fp, #-1344]	; 0xfffffac0
   3794c:	str	r1, [fp, #-1340]	; 0xfffffac4
   37950:	b	38c64 <__assert_fail@plt+0x260ac>
   37954:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   37958:	ldr	r0, [r0, #4]
   3795c:	cmn	r0, #1
   37960:	bgt	37b88 <__assert_fail@plt+0x24fd0>
   37964:	b	37968 <__assert_fail@plt+0x24db0>
   37968:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3796c:	ldr	r0, [r0, #-44]	; 0xffffffd4
   37970:	cmn	r0, #1
   37974:	bgt	37a98 <__assert_fail@plt+0x24ee0>
   37978:	b	3797c <__assert_fail@plt+0x24dc4>
   3797c:	b	37980 <__assert_fail@plt+0x24dc8>
   37980:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   37984:	ldr	r1, [r0, #-48]	; 0xffffffd0
   37988:	ldr	r2, [r0, #-44]	; 0xffffffd4
   3798c:	ldr	r3, [r0]
   37990:	ldr	r0, [r0, #4]
   37994:	mvn	ip, #0
   37998:	mov	lr, #0
   3799c:	str	r0, [sp, #2128]	; 0x850
   379a0:	mov	r0, ip
   379a4:	str	r1, [sp, #2124]	; 0x84c
   379a8:	mov	r1, lr
   379ac:	str	r2, [sp, #2120]	; 0x848
   379b0:	mov	r2, r3
   379b4:	ldr	r3, [sp, #2128]	; 0x850
   379b8:	bl	77780 <__assert_fail@plt+0x64bc8>
   379bc:	ldr	r2, [sp, #2124]	; 0x84c
   379c0:	subs	r0, r2, r0
   379c4:	ldr	r2, [sp, #2120]	; 0x848
   379c8:	sbcs	r1, r2, r1
   379cc:	str	r0, [sp, #2116]	; 0x844
   379d0:	str	r1, [sp, #2112]	; 0x840
   379d4:	blt	37cd8 <__assert_fail@plt+0x25120>
   379d8:	b	37cf8 <__assert_fail@plt+0x25140>
   379dc:	b	379e0 <__assert_fail@plt+0x24e28>
   379e0:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   379e4:	ldr	r1, [r0]
   379e8:	ldr	r0, [r0, #4]
   379ec:	eor	r0, r0, #-2147483648	; 0x80000000
   379f0:	orr	r0, r1, r0
   379f4:	cmp	r0, #0
   379f8:	beq	37a24 <__assert_fail@plt+0x24e6c>
   379fc:	b	37a38 <__assert_fail@plt+0x24e80>
   37a00:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   37a04:	ldr	r1, [r0]
   37a08:	ldr	r0, [r0, #4]
   37a0c:	subs	r1, r1, #1
   37a10:	sbcs	r0, r0, #0
   37a14:	str	r1, [sp, #2108]	; 0x83c
   37a18:	str	r0, [sp, #2104]	; 0x838
   37a1c:	blt	37a38 <__assert_fail@plt+0x24e80>
   37a20:	b	37a24 <__assert_fail@plt+0x24e6c>
   37a24:	mov	r0, #0
   37a28:	mov	r1, r0
   37a2c:	str	r1, [sp, #2100]	; 0x834
   37a30:	str	r0, [sp, #2096]	; 0x830
   37a34:	b	37a64 <__assert_fail@plt+0x24eac>
   37a38:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   37a3c:	ldr	r1, [r0]
   37a40:	ldr	r0, [r0, #4]
   37a44:	rsbs	r2, r1, #0
   37a48:	rsc	r3, r0, #0
   37a4c:	mvn	r0, #0
   37a50:	mov	r1, #0
   37a54:	bl	77780 <__assert_fail@plt+0x64bc8>
   37a58:	str	r0, [sp, #2100]	; 0x834
   37a5c:	str	r1, [sp, #2096]	; 0x830
   37a60:	b	37a64 <__assert_fail@plt+0x24eac>
   37a64:	ldr	r0, [sp, #2096]	; 0x830
   37a68:	ldr	r1, [sp, #2100]	; 0x834
   37a6c:	ldr	r2, [fp, #-1288]	; 0xfffffaf8
   37a70:	ldr	r3, [r2, #-48]	; 0xffffffd0
   37a74:	ldr	r2, [r2, #-44]	; 0xffffffd4
   37a78:	mvn	r2, r2
   37a7c:	mvn	r3, r3
   37a80:	subs	r1, r3, r1
   37a84:	sbcs	r0, r2, r0
   37a88:	str	r1, [sp, #2092]	; 0x82c
   37a8c:	str	r0, [sp, #2088]	; 0x828
   37a90:	bge	37cd8 <__assert_fail@plt+0x25120>
   37a94:	b	37cf8 <__assert_fail@plt+0x25140>
   37a98:	b	37a9c <__assert_fail@plt+0x24ee4>
   37a9c:	b	37b30 <__assert_fail@plt+0x24f78>
   37aa0:	b	37b30 <__assert_fail@plt+0x24f78>
   37aa4:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   37aa8:	ldr	r1, [r0]
   37aac:	ldr	r0, [r0, #4]
   37ab0:	and	r0, r1, r0
   37ab4:	cmn	r0, #1
   37ab8:	bne	37b30 <__assert_fail@plt+0x24f78>
   37abc:	b	37ac0 <__assert_fail@plt+0x24f08>
   37ac0:	b	37ac4 <__assert_fail@plt+0x24f0c>
   37ac4:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   37ac8:	ldr	r1, [r0, #-48]	; 0xffffffd0
   37acc:	ldr	r0, [r0, #-44]	; 0xffffffd4
   37ad0:	rsbs	r1, r1, #0
   37ad4:	rscs	r0, r0, #0
   37ad8:	str	r1, [sp, #2084]	; 0x824
   37adc:	str	r0, [sp, #2080]	; 0x820
   37ae0:	blt	37cd8 <__assert_fail@plt+0x25120>
   37ae4:	b	37cf8 <__assert_fail@plt+0x25140>
   37ae8:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   37aec:	ldr	r1, [r0, #-48]	; 0xffffffd0
   37af0:	ldr	r0, [r0, #-44]	; 0xffffffd4
   37af4:	subs	r1, r1, #1
   37af8:	sbcs	r0, r0, #0
   37afc:	str	r1, [sp, #2076]	; 0x81c
   37b00:	str	r0, [sp, #2072]	; 0x818
   37b04:	blt	37cf8 <__assert_fail@plt+0x25140>
   37b08:	b	37b0c <__assert_fail@plt+0x24f54>
   37b0c:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   37b10:	ldr	r1, [r0, #-48]	; 0xffffffd0
   37b14:	ldr	r0, [r0, #-44]	; 0xffffffd4
   37b18:	subs	r1, r1, #1
   37b1c:	sbc	r0, r0, #0
   37b20:	cmn	r0, #1
   37b24:	str	r1, [sp, #2068]	; 0x814
   37b28:	bgt	37cd8 <__assert_fail@plt+0x25120>
   37b2c:	b	37cf8 <__assert_fail@plt+0x25140>
   37b30:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   37b34:	ldr	r1, [r0, #-48]	; 0xffffffd0
   37b38:	ldr	r2, [r0, #-44]	; 0xffffffd4
   37b3c:	ldr	r3, [r0]
   37b40:	ldr	r0, [r0, #4]
   37b44:	mov	ip, #0
   37b48:	str	r0, [sp, #2064]	; 0x810
   37b4c:	mov	r0, ip
   37b50:	str	r1, [sp, #2060]	; 0x80c
   37b54:	mov	r1, ip
   37b58:	str	r2, [sp, #2056]	; 0x808
   37b5c:	mov	r2, r3
   37b60:	ldr	r3, [sp, #2064]	; 0x810
   37b64:	bl	77780 <__assert_fail@plt+0x64bc8>
   37b68:	ldr	r2, [sp, #2060]	; 0x80c
   37b6c:	subs	r0, r0, r2
   37b70:	ldr	r2, [sp, #2056]	; 0x808
   37b74:	sbcs	r1, r1, r2
   37b78:	str	r0, [sp, #2052]	; 0x804
   37b7c:	str	r1, [sp, #2048]	; 0x800
   37b80:	blt	37cd8 <__assert_fail@plt+0x25120>
   37b84:	b	37cf8 <__assert_fail@plt+0x25140>
   37b88:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   37b8c:	ldr	r1, [r0]
   37b90:	ldr	r0, [r0, #4]
   37b94:	orr	r0, r1, r0
   37b98:	cmp	r0, #0
   37b9c:	bne	37ba8 <__assert_fail@plt+0x24ff0>
   37ba0:	b	37ba4 <__assert_fail@plt+0x24fec>
   37ba4:	b	37cf8 <__assert_fail@plt+0x25140>
   37ba8:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   37bac:	ldr	r0, [r0, #-44]	; 0xffffffd4
   37bb0:	cmn	r0, #1
   37bb4:	bgt	37c7c <__assert_fail@plt+0x250c4>
   37bb8:	b	37bbc <__assert_fail@plt+0x25004>
   37bbc:	b	37bc0 <__assert_fail@plt+0x25008>
   37bc0:	b	37c30 <__assert_fail@plt+0x25078>
   37bc4:	b	37c30 <__assert_fail@plt+0x25078>
   37bc8:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   37bcc:	ldr	r1, [r0, #-48]	; 0xffffffd0
   37bd0:	ldr	r0, [r0, #-44]	; 0xffffffd4
   37bd4:	and	r0, r1, r0
   37bd8:	cmn	r0, #1
   37bdc:	bne	37c30 <__assert_fail@plt+0x25078>
   37be0:	b	37be4 <__assert_fail@plt+0x2502c>
   37be4:	b	37be8 <__assert_fail@plt+0x25030>
   37be8:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   37bec:	ldr	r1, [r0]
   37bf0:	ldr	r0, [r0, #4]
   37bf4:	rsbs	r1, r1, #0
   37bf8:	rscs	r0, r0, #0
   37bfc:	str	r1, [sp, #2044]	; 0x7fc
   37c00:	str	r0, [sp, #2040]	; 0x7f8
   37c04:	blt	37cd8 <__assert_fail@plt+0x25120>
   37c08:	b	37cf8 <__assert_fail@plt+0x25140>
   37c0c:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   37c10:	ldr	r1, [r0]
   37c14:	ldr	r0, [r0, #4]
   37c18:	subs	r1, r1, #1
   37c1c:	sbc	r0, r0, #0
   37c20:	cmn	r0, #1
   37c24:	str	r1, [sp, #2036]	; 0x7f4
   37c28:	bgt	37cd8 <__assert_fail@plt+0x25120>
   37c2c:	b	37cf8 <__assert_fail@plt+0x25140>
   37c30:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   37c34:	ldr	r2, [r0, #-48]	; 0xffffffd0
   37c38:	ldr	r3, [r0, #-44]	; 0xffffffd4
   37c3c:	ldr	r1, [r0]
   37c40:	ldr	r0, [r0, #4]
   37c44:	mov	ip, #0
   37c48:	str	r0, [sp, #2032]	; 0x7f0
   37c4c:	mov	r0, ip
   37c50:	str	r1, [sp, #2028]	; 0x7ec
   37c54:	mov	r1, ip
   37c58:	bl	77780 <__assert_fail@plt+0x64bc8>
   37c5c:	ldr	r2, [sp, #2028]	; 0x7ec
   37c60:	subs	r0, r0, r2
   37c64:	ldr	r2, [sp, #2032]	; 0x7f0
   37c68:	sbcs	r1, r1, r2
   37c6c:	str	r0, [sp, #2024]	; 0x7e8
   37c70:	str	r1, [sp, #2020]	; 0x7e4
   37c74:	blt	37cd8 <__assert_fail@plt+0x25120>
   37c78:	b	37cf8 <__assert_fail@plt+0x25140>
   37c7c:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   37c80:	ldr	r1, [r0, #-48]	; 0xffffffd0
   37c84:	ldr	r2, [r0, #-44]	; 0xffffffd4
   37c88:	ldr	r3, [r0]
   37c8c:	ldr	r0, [r0, #4]
   37c90:	mvn	ip, #0
   37c94:	mov	lr, #0
   37c98:	str	r0, [sp, #2016]	; 0x7e0
   37c9c:	mov	r0, ip
   37ca0:	str	r1, [sp, #2012]	; 0x7dc
   37ca4:	mov	r1, lr
   37ca8:	str	r2, [sp, #2008]	; 0x7d8
   37cac:	mov	r2, r3
   37cb0:	ldr	r3, [sp, #2016]	; 0x7e0
   37cb4:	bl	77780 <__assert_fail@plt+0x64bc8>
   37cb8:	ldr	r2, [sp, #2012]	; 0x7dc
   37cbc:	subs	r0, r0, r2
   37cc0:	ldr	r2, [sp, #2008]	; 0x7d8
   37cc4:	sbcs	r1, r1, r2
   37cc8:	str	r0, [sp, #2004]	; 0x7d4
   37ccc:	str	r1, [sp, #2000]	; 0x7d0
   37cd0:	bge	37cf8 <__assert_fail@plt+0x25140>
   37cd4:	b	37cd8 <__assert_fail@plt+0x25120>
   37cd8:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   37cdc:	ldr	r1, [r0, #-48]	; 0xffffffd0
   37ce0:	ldr	r0, [r0]
   37ce4:	mul	r0, r1, r0
   37ce8:	mov	r1, #0
   37cec:	str	r1, [fp, #-1340]	; 0xfffffac4
   37cf0:	str	r0, [fp, #-1344]	; 0xfffffac0
   37cf4:	b	38c60 <__assert_fail@plt+0x260a8>
   37cf8:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   37cfc:	ldr	r1, [r0, #-48]	; 0xffffffd0
   37d00:	ldr	r0, [r0]
   37d04:	mul	r0, r1, r0
   37d08:	mov	r1, #0
   37d0c:	str	r1, [fp, #-1340]	; 0xfffffac4
   37d10:	str	r0, [fp, #-1344]	; 0xfffffac0
   37d14:	b	38c64 <__assert_fail@plt+0x260ac>
   37d18:	b	384d8 <__assert_fail@plt+0x25920>
   37d1c:	b	37d20 <__assert_fail@plt+0x25168>
   37d20:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   37d24:	ldr	r0, [r0, #4]
   37d28:	cmn	r0, #1
   37d2c:	bgt	37f6c <__assert_fail@plt+0x253b4>
   37d30:	b	37d34 <__assert_fail@plt+0x2517c>
   37d34:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   37d38:	ldr	r0, [r0, #-44]	; 0xffffffd4
   37d3c:	cmn	r0, #1
   37d40:	bgt	37e64 <__assert_fail@plt+0x252ac>
   37d44:	b	37d48 <__assert_fail@plt+0x25190>
   37d48:	b	37d4c <__assert_fail@plt+0x25194>
   37d4c:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   37d50:	ldr	r1, [r0, #-48]	; 0xffffffd0
   37d54:	ldr	r2, [r0, #-44]	; 0xffffffd4
   37d58:	ldr	r3, [r0]
   37d5c:	ldr	r0, [r0, #4]
   37d60:	mvn	ip, #-2147483648	; 0x80000000
   37d64:	mov	lr, #0
   37d68:	str	r0, [sp, #1996]	; 0x7cc
   37d6c:	mov	r0, ip
   37d70:	str	r1, [sp, #1992]	; 0x7c8
   37d74:	mov	r1, lr
   37d78:	str	r2, [sp, #1988]	; 0x7c4
   37d7c:	mov	r2, r3
   37d80:	ldr	r3, [sp, #1996]	; 0x7cc
   37d84:	bl	77780 <__assert_fail@plt+0x64bc8>
   37d88:	ldr	r2, [sp, #1992]	; 0x7c8
   37d8c:	subs	r0, r2, r0
   37d90:	ldr	r2, [sp, #1988]	; 0x7c4
   37d94:	sbcs	r1, r2, r1
   37d98:	str	r0, [sp, #1984]	; 0x7c0
   37d9c:	str	r1, [sp, #1980]	; 0x7bc
   37da0:	blt	380d4 <__assert_fail@plt+0x2551c>
   37da4:	b	380f4 <__assert_fail@plt+0x2553c>
   37da8:	b	37dac <__assert_fail@plt+0x251f4>
   37dac:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   37db0:	ldr	r1, [r0]
   37db4:	ldr	r0, [r0, #4]
   37db8:	eor	r0, r0, #-2147483648	; 0x80000000
   37dbc:	orr	r0, r1, r0
   37dc0:	cmp	r0, #0
   37dc4:	beq	37df0 <__assert_fail@plt+0x25238>
   37dc8:	b	37e04 <__assert_fail@plt+0x2524c>
   37dcc:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   37dd0:	ldr	r1, [r0]
   37dd4:	ldr	r0, [r0, #4]
   37dd8:	subs	r1, r1, #1
   37ddc:	sbcs	r0, r0, #0
   37de0:	str	r1, [sp, #1976]	; 0x7b8
   37de4:	str	r0, [sp, #1972]	; 0x7b4
   37de8:	blt	37e04 <__assert_fail@plt+0x2524c>
   37dec:	b	37df0 <__assert_fail@plt+0x25238>
   37df0:	mov	r0, #0
   37df4:	mov	r1, r0
   37df8:	str	r1, [sp, #1968]	; 0x7b0
   37dfc:	str	r0, [sp, #1964]	; 0x7ac
   37e00:	b	37e30 <__assert_fail@plt+0x25278>
   37e04:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   37e08:	ldr	r1, [r0]
   37e0c:	ldr	r0, [r0, #4]
   37e10:	rsbs	r2, r1, #0
   37e14:	rsc	r3, r0, #0
   37e18:	mvn	r0, #-2147483648	; 0x80000000
   37e1c:	mov	r1, #0
   37e20:	bl	77780 <__assert_fail@plt+0x64bc8>
   37e24:	str	r0, [sp, #1968]	; 0x7b0
   37e28:	str	r1, [sp, #1964]	; 0x7ac
   37e2c:	b	37e30 <__assert_fail@plt+0x25278>
   37e30:	ldr	r0, [sp, #1964]	; 0x7ac
   37e34:	ldr	r1, [sp, #1968]	; 0x7b0
   37e38:	ldr	r2, [fp, #-1288]	; 0xfffffaf8
   37e3c:	ldr	r3, [r2, #-48]	; 0xffffffd0
   37e40:	ldr	r2, [r2, #-44]	; 0xffffffd4
   37e44:	mvn	r2, r2
   37e48:	mvn	r3, r3
   37e4c:	subs	r1, r3, r1
   37e50:	sbcs	r0, r2, r0
   37e54:	str	r1, [sp, #1960]	; 0x7a8
   37e58:	str	r0, [sp, #1956]	; 0x7a4
   37e5c:	bge	380d4 <__assert_fail@plt+0x2551c>
   37e60:	b	380f4 <__assert_fail@plt+0x2553c>
   37e64:	b	37e68 <__assert_fail@plt+0x252b0>
   37e68:	b	37f10 <__assert_fail@plt+0x25358>
   37e6c:	b	37f10 <__assert_fail@plt+0x25358>
   37e70:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   37e74:	ldr	r1, [r0]
   37e78:	ldr	r0, [r0, #4]
   37e7c:	and	r0, r1, r0
   37e80:	cmn	r0, #1
   37e84:	bne	37f10 <__assert_fail@plt+0x25358>
   37e88:	b	37e8c <__assert_fail@plt+0x252d4>
   37e8c:	b	37e90 <__assert_fail@plt+0x252d8>
   37e90:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   37e94:	ldr	r1, [r0, #-48]	; 0xffffffd0
   37e98:	ldr	r0, [r0, #-44]	; 0xffffffd4
   37e9c:	adds	r1, r1, #-2147483648	; 0x80000000
   37ea0:	sbc	r0, r0, #0
   37ea4:	rsbs	r1, r1, #0
   37ea8:	rscs	r0, r0, #0
   37eac:	str	r1, [sp, #1952]	; 0x7a0
   37eb0:	str	r0, [sp, #1948]	; 0x79c
   37eb4:	blt	380d4 <__assert_fail@plt+0x2551c>
   37eb8:	b	380f4 <__assert_fail@plt+0x2553c>
   37ebc:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   37ec0:	ldr	r1, [r0, #-48]	; 0xffffffd0
   37ec4:	ldr	r0, [r0, #-44]	; 0xffffffd4
   37ec8:	subs	r1, r1, #1
   37ecc:	sbcs	r0, r0, #0
   37ed0:	str	r1, [sp, #1944]	; 0x798
   37ed4:	str	r0, [sp, #1940]	; 0x794
   37ed8:	blt	380f4 <__assert_fail@plt+0x2553c>
   37edc:	b	37ee0 <__assert_fail@plt+0x25328>
   37ee0:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   37ee4:	ldr	r1, [r0, #-48]	; 0xffffffd0
   37ee8:	ldr	r0, [r0, #-44]	; 0xffffffd4
   37eec:	subs	r1, r1, #1
   37ef0:	sbc	r0, r0, #0
   37ef4:	mvn	r2, #-2147483648	; 0x80000000
   37ef8:	subs	r1, r2, r1
   37efc:	rscs	r0, r0, #0
   37f00:	str	r1, [sp, #1936]	; 0x790
   37f04:	str	r0, [sp, #1932]	; 0x78c
   37f08:	blt	380d4 <__assert_fail@plt+0x2551c>
   37f0c:	b	380f4 <__assert_fail@plt+0x2553c>
   37f10:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   37f14:	ldr	r1, [r0, #-48]	; 0xffffffd0
   37f18:	ldr	r2, [r0, #-44]	; 0xffffffd4
   37f1c:	ldr	r3, [r0]
   37f20:	ldr	r0, [r0, #4]
   37f24:	mov	ip, #-2147483648	; 0x80000000
   37f28:	mvn	lr, #0
   37f2c:	str	r0, [sp, #1928]	; 0x788
   37f30:	mov	r0, ip
   37f34:	str	r1, [sp, #1924]	; 0x784
   37f38:	mov	r1, lr
   37f3c:	str	r2, [sp, #1920]	; 0x780
   37f40:	mov	r2, r3
   37f44:	ldr	r3, [sp, #1928]	; 0x788
   37f48:	bl	77780 <__assert_fail@plt+0x64bc8>
   37f4c:	ldr	r2, [sp, #1924]	; 0x784
   37f50:	subs	r0, r0, r2
   37f54:	ldr	r2, [sp, #1920]	; 0x780
   37f58:	sbcs	r1, r1, r2
   37f5c:	str	r0, [sp, #1916]	; 0x77c
   37f60:	str	r1, [sp, #1912]	; 0x778
   37f64:	blt	380d4 <__assert_fail@plt+0x2551c>
   37f68:	b	380f4 <__assert_fail@plt+0x2553c>
   37f6c:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   37f70:	ldr	r1, [r0]
   37f74:	ldr	r0, [r0, #4]
   37f78:	orr	r0, r1, r0
   37f7c:	cmp	r0, #0
   37f80:	bne	37f8c <__assert_fail@plt+0x253d4>
   37f84:	b	37f88 <__assert_fail@plt+0x253d0>
   37f88:	b	380f4 <__assert_fail@plt+0x2553c>
   37f8c:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   37f90:	ldr	r0, [r0, #-44]	; 0xffffffd4
   37f94:	cmn	r0, #1
   37f98:	bgt	38078 <__assert_fail@plt+0x254c0>
   37f9c:	b	37fa0 <__assert_fail@plt+0x253e8>
   37fa0:	b	37fa4 <__assert_fail@plt+0x253ec>
   37fa4:	b	38028 <__assert_fail@plt+0x25470>
   37fa8:	b	38028 <__assert_fail@plt+0x25470>
   37fac:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   37fb0:	ldr	r1, [r0, #-48]	; 0xffffffd0
   37fb4:	ldr	r0, [r0, #-44]	; 0xffffffd4
   37fb8:	and	r0, r1, r0
   37fbc:	cmn	r0, #1
   37fc0:	bne	38028 <__assert_fail@plt+0x25470>
   37fc4:	b	37fc8 <__assert_fail@plt+0x25410>
   37fc8:	b	37fcc <__assert_fail@plt+0x25414>
   37fcc:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   37fd0:	ldr	r1, [r0]
   37fd4:	ldr	r0, [r0, #4]
   37fd8:	adds	r1, r1, #-2147483648	; 0x80000000
   37fdc:	sbc	r0, r0, #0
   37fe0:	rsbs	r1, r1, #0
   37fe4:	rscs	r0, r0, #0
   37fe8:	str	r1, [sp, #1908]	; 0x774
   37fec:	str	r0, [sp, #1904]	; 0x770
   37ff0:	blt	380d4 <__assert_fail@plt+0x2551c>
   37ff4:	b	380f4 <__assert_fail@plt+0x2553c>
   37ff8:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   37ffc:	ldr	r1, [r0]
   38000:	ldr	r0, [r0, #4]
   38004:	subs	r1, r1, #1
   38008:	sbc	r0, r0, #0
   3800c:	mvn	r2, #-2147483648	; 0x80000000
   38010:	subs	r1, r2, r1
   38014:	rscs	r0, r0, #0
   38018:	str	r1, [sp, #1900]	; 0x76c
   3801c:	str	r0, [sp, #1896]	; 0x768
   38020:	blt	380d4 <__assert_fail@plt+0x2551c>
   38024:	b	380f4 <__assert_fail@plt+0x2553c>
   38028:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3802c:	ldr	r2, [r0, #-48]	; 0xffffffd0
   38030:	ldr	r3, [r0, #-44]	; 0xffffffd4
   38034:	ldr	r1, [r0]
   38038:	ldr	r0, [r0, #4]
   3803c:	mov	ip, #-2147483648	; 0x80000000
   38040:	mvn	lr, #0
   38044:	str	r0, [sp, #1892]	; 0x764
   38048:	mov	r0, ip
   3804c:	str	r1, [sp, #1888]	; 0x760
   38050:	mov	r1, lr
   38054:	bl	77780 <__assert_fail@plt+0x64bc8>
   38058:	ldr	r2, [sp, #1888]	; 0x760
   3805c:	subs	r0, r0, r2
   38060:	ldr	r2, [sp, #1892]	; 0x764
   38064:	sbcs	r1, r1, r2
   38068:	str	r0, [sp, #1884]	; 0x75c
   3806c:	str	r1, [sp, #1880]	; 0x758
   38070:	blt	380d4 <__assert_fail@plt+0x2551c>
   38074:	b	380f4 <__assert_fail@plt+0x2553c>
   38078:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3807c:	ldr	r1, [r0, #-48]	; 0xffffffd0
   38080:	ldr	r2, [r0, #-44]	; 0xffffffd4
   38084:	ldr	r3, [r0]
   38088:	ldr	r0, [r0, #4]
   3808c:	mvn	ip, #-2147483648	; 0x80000000
   38090:	mov	lr, #0
   38094:	str	r0, [sp, #1876]	; 0x754
   38098:	mov	r0, ip
   3809c:	str	r1, [sp, #1872]	; 0x750
   380a0:	mov	r1, lr
   380a4:	str	r2, [sp, #1868]	; 0x74c
   380a8:	mov	r2, r3
   380ac:	ldr	r3, [sp, #1876]	; 0x754
   380b0:	bl	77780 <__assert_fail@plt+0x64bc8>
   380b4:	ldr	r2, [sp, #1872]	; 0x750
   380b8:	subs	r0, r0, r2
   380bc:	ldr	r2, [sp, #1868]	; 0x74c
   380c0:	sbcs	r1, r1, r2
   380c4:	str	r0, [sp, #1864]	; 0x748
   380c8:	str	r1, [sp, #1860]	; 0x744
   380cc:	bge	380f4 <__assert_fail@plt+0x2553c>
   380d0:	b	380d4 <__assert_fail@plt+0x2551c>
   380d4:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   380d8:	ldr	r1, [r0, #-48]	; 0xffffffd0
   380dc:	ldr	r0, [r0]
   380e0:	mul	r0, r1, r0
   380e4:	asr	r1, r0, #31
   380e8:	str	r0, [fp, #-1344]	; 0xfffffac0
   380ec:	str	r1, [fp, #-1340]	; 0xfffffac4
   380f0:	b	38c60 <__assert_fail@plt+0x260a8>
   380f4:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   380f8:	ldr	r1, [r0, #-48]	; 0xffffffd0
   380fc:	ldr	r0, [r0]
   38100:	mul	r0, r1, r0
   38104:	asr	r1, r0, #31
   38108:	str	r0, [fp, #-1344]	; 0xfffffac0
   3810c:	str	r1, [fp, #-1340]	; 0xfffffac4
   38110:	b	38c64 <__assert_fail@plt+0x260ac>
   38114:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   38118:	ldr	r0, [r0, #4]
   3811c:	cmn	r0, #1
   38120:	bgt	38348 <__assert_fail@plt+0x25790>
   38124:	b	38128 <__assert_fail@plt+0x25570>
   38128:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3812c:	ldr	r0, [r0, #-44]	; 0xffffffd4
   38130:	cmn	r0, #1
   38134:	bgt	38258 <__assert_fail@plt+0x256a0>
   38138:	b	3813c <__assert_fail@plt+0x25584>
   3813c:	b	38140 <__assert_fail@plt+0x25588>
   38140:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   38144:	ldr	r1, [r0, #-48]	; 0xffffffd0
   38148:	ldr	r2, [r0, #-44]	; 0xffffffd4
   3814c:	ldr	r3, [r0]
   38150:	ldr	r0, [r0, #4]
   38154:	mvn	ip, #0
   38158:	mov	lr, #0
   3815c:	str	r0, [sp, #1856]	; 0x740
   38160:	mov	r0, ip
   38164:	str	r1, [sp, #1852]	; 0x73c
   38168:	mov	r1, lr
   3816c:	str	r2, [sp, #1848]	; 0x738
   38170:	mov	r2, r3
   38174:	ldr	r3, [sp, #1856]	; 0x740
   38178:	bl	77780 <__assert_fail@plt+0x64bc8>
   3817c:	ldr	r2, [sp, #1852]	; 0x73c
   38180:	subs	r0, r2, r0
   38184:	ldr	r2, [sp, #1848]	; 0x738
   38188:	sbcs	r1, r2, r1
   3818c:	str	r0, [sp, #1844]	; 0x734
   38190:	str	r1, [sp, #1840]	; 0x730
   38194:	blt	38498 <__assert_fail@plt+0x258e0>
   38198:	b	384b8 <__assert_fail@plt+0x25900>
   3819c:	b	381a0 <__assert_fail@plt+0x255e8>
   381a0:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   381a4:	ldr	r1, [r0]
   381a8:	ldr	r0, [r0, #4]
   381ac:	eor	r0, r0, #-2147483648	; 0x80000000
   381b0:	orr	r0, r1, r0
   381b4:	cmp	r0, #0
   381b8:	beq	381e4 <__assert_fail@plt+0x2562c>
   381bc:	b	381f8 <__assert_fail@plt+0x25640>
   381c0:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   381c4:	ldr	r1, [r0]
   381c8:	ldr	r0, [r0, #4]
   381cc:	subs	r1, r1, #1
   381d0:	sbcs	r0, r0, #0
   381d4:	str	r1, [sp, #1836]	; 0x72c
   381d8:	str	r0, [sp, #1832]	; 0x728
   381dc:	blt	381f8 <__assert_fail@plt+0x25640>
   381e0:	b	381e4 <__assert_fail@plt+0x2562c>
   381e4:	mov	r0, #0
   381e8:	mov	r1, r0
   381ec:	str	r1, [sp, #1828]	; 0x724
   381f0:	str	r0, [sp, #1824]	; 0x720
   381f4:	b	38224 <__assert_fail@plt+0x2566c>
   381f8:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   381fc:	ldr	r1, [r0]
   38200:	ldr	r0, [r0, #4]
   38204:	rsbs	r2, r1, #0
   38208:	rsc	r3, r0, #0
   3820c:	mvn	r0, #0
   38210:	mov	r1, #0
   38214:	bl	77780 <__assert_fail@plt+0x64bc8>
   38218:	str	r0, [sp, #1828]	; 0x724
   3821c:	str	r1, [sp, #1824]	; 0x720
   38220:	b	38224 <__assert_fail@plt+0x2566c>
   38224:	ldr	r0, [sp, #1824]	; 0x720
   38228:	ldr	r1, [sp, #1828]	; 0x724
   3822c:	ldr	r2, [fp, #-1288]	; 0xfffffaf8
   38230:	ldr	r3, [r2, #-48]	; 0xffffffd0
   38234:	ldr	r2, [r2, #-44]	; 0xffffffd4
   38238:	mvn	r2, r2
   3823c:	mvn	r3, r3
   38240:	subs	r1, r3, r1
   38244:	sbcs	r0, r2, r0
   38248:	str	r1, [sp, #1820]	; 0x71c
   3824c:	str	r0, [sp, #1816]	; 0x718
   38250:	bge	38498 <__assert_fail@plt+0x258e0>
   38254:	b	384b8 <__assert_fail@plt+0x25900>
   38258:	b	3825c <__assert_fail@plt+0x256a4>
   3825c:	b	382f0 <__assert_fail@plt+0x25738>
   38260:	b	382f0 <__assert_fail@plt+0x25738>
   38264:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   38268:	ldr	r1, [r0]
   3826c:	ldr	r0, [r0, #4]
   38270:	and	r0, r1, r0
   38274:	cmn	r0, #1
   38278:	bne	382f0 <__assert_fail@plt+0x25738>
   3827c:	b	38280 <__assert_fail@plt+0x256c8>
   38280:	b	38284 <__assert_fail@plt+0x256cc>
   38284:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   38288:	ldr	r1, [r0, #-48]	; 0xffffffd0
   3828c:	ldr	r0, [r0, #-44]	; 0xffffffd4
   38290:	rsbs	r1, r1, #0
   38294:	rscs	r0, r0, #0
   38298:	str	r1, [sp, #1812]	; 0x714
   3829c:	str	r0, [sp, #1808]	; 0x710
   382a0:	blt	38498 <__assert_fail@plt+0x258e0>
   382a4:	b	384b8 <__assert_fail@plt+0x25900>
   382a8:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   382ac:	ldr	r1, [r0, #-48]	; 0xffffffd0
   382b0:	ldr	r0, [r0, #-44]	; 0xffffffd4
   382b4:	subs	r1, r1, #1
   382b8:	sbcs	r0, r0, #0
   382bc:	str	r1, [sp, #1804]	; 0x70c
   382c0:	str	r0, [sp, #1800]	; 0x708
   382c4:	blt	384b8 <__assert_fail@plt+0x25900>
   382c8:	b	382cc <__assert_fail@plt+0x25714>
   382cc:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   382d0:	ldr	r1, [r0, #-48]	; 0xffffffd0
   382d4:	ldr	r0, [r0, #-44]	; 0xffffffd4
   382d8:	subs	r1, r1, #1
   382dc:	sbc	r0, r0, #0
   382e0:	cmn	r0, #1
   382e4:	str	r1, [sp, #1796]	; 0x704
   382e8:	bgt	38498 <__assert_fail@plt+0x258e0>
   382ec:	b	384b8 <__assert_fail@plt+0x25900>
   382f0:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   382f4:	ldr	r1, [r0, #-48]	; 0xffffffd0
   382f8:	ldr	r2, [r0, #-44]	; 0xffffffd4
   382fc:	ldr	r3, [r0]
   38300:	ldr	r0, [r0, #4]
   38304:	mov	ip, #0
   38308:	str	r0, [sp, #1792]	; 0x700
   3830c:	mov	r0, ip
   38310:	str	r1, [sp, #1788]	; 0x6fc
   38314:	mov	r1, ip
   38318:	str	r2, [sp, #1784]	; 0x6f8
   3831c:	mov	r2, r3
   38320:	ldr	r3, [sp, #1792]	; 0x700
   38324:	bl	77780 <__assert_fail@plt+0x64bc8>
   38328:	ldr	r2, [sp, #1788]	; 0x6fc
   3832c:	subs	r0, r0, r2
   38330:	ldr	r2, [sp, #1784]	; 0x6f8
   38334:	sbcs	r1, r1, r2
   38338:	str	r0, [sp, #1780]	; 0x6f4
   3833c:	str	r1, [sp, #1776]	; 0x6f0
   38340:	blt	38498 <__assert_fail@plt+0x258e0>
   38344:	b	384b8 <__assert_fail@plt+0x25900>
   38348:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3834c:	ldr	r1, [r0]
   38350:	ldr	r0, [r0, #4]
   38354:	orr	r0, r1, r0
   38358:	cmp	r0, #0
   3835c:	bne	38368 <__assert_fail@plt+0x257b0>
   38360:	b	38364 <__assert_fail@plt+0x257ac>
   38364:	b	384b8 <__assert_fail@plt+0x25900>
   38368:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3836c:	ldr	r0, [r0, #-44]	; 0xffffffd4
   38370:	cmn	r0, #1
   38374:	bgt	3843c <__assert_fail@plt+0x25884>
   38378:	b	3837c <__assert_fail@plt+0x257c4>
   3837c:	b	38380 <__assert_fail@plt+0x257c8>
   38380:	b	383f0 <__assert_fail@plt+0x25838>
   38384:	b	383f0 <__assert_fail@plt+0x25838>
   38388:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3838c:	ldr	r1, [r0, #-48]	; 0xffffffd0
   38390:	ldr	r0, [r0, #-44]	; 0xffffffd4
   38394:	and	r0, r1, r0
   38398:	cmn	r0, #1
   3839c:	bne	383f0 <__assert_fail@plt+0x25838>
   383a0:	b	383a4 <__assert_fail@plt+0x257ec>
   383a4:	b	383a8 <__assert_fail@plt+0x257f0>
   383a8:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   383ac:	ldr	r1, [r0]
   383b0:	ldr	r0, [r0, #4]
   383b4:	rsbs	r1, r1, #0
   383b8:	rscs	r0, r0, #0
   383bc:	str	r1, [sp, #1772]	; 0x6ec
   383c0:	str	r0, [sp, #1768]	; 0x6e8
   383c4:	blt	38498 <__assert_fail@plt+0x258e0>
   383c8:	b	384b8 <__assert_fail@plt+0x25900>
   383cc:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   383d0:	ldr	r1, [r0]
   383d4:	ldr	r0, [r0, #4]
   383d8:	subs	r1, r1, #1
   383dc:	sbc	r0, r0, #0
   383e0:	cmn	r0, #1
   383e4:	str	r1, [sp, #1764]	; 0x6e4
   383e8:	bgt	38498 <__assert_fail@plt+0x258e0>
   383ec:	b	384b8 <__assert_fail@plt+0x25900>
   383f0:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   383f4:	ldr	r2, [r0, #-48]	; 0xffffffd0
   383f8:	ldr	r3, [r0, #-44]	; 0xffffffd4
   383fc:	ldr	r1, [r0]
   38400:	ldr	r0, [r0, #4]
   38404:	mov	ip, #0
   38408:	str	r0, [sp, #1760]	; 0x6e0
   3840c:	mov	r0, ip
   38410:	str	r1, [sp, #1756]	; 0x6dc
   38414:	mov	r1, ip
   38418:	bl	77780 <__assert_fail@plt+0x64bc8>
   3841c:	ldr	r2, [sp, #1756]	; 0x6dc
   38420:	subs	r0, r0, r2
   38424:	ldr	r2, [sp, #1760]	; 0x6e0
   38428:	sbcs	r1, r1, r2
   3842c:	str	r0, [sp, #1752]	; 0x6d8
   38430:	str	r1, [sp, #1748]	; 0x6d4
   38434:	blt	38498 <__assert_fail@plt+0x258e0>
   38438:	b	384b8 <__assert_fail@plt+0x25900>
   3843c:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   38440:	ldr	r1, [r0, #-48]	; 0xffffffd0
   38444:	ldr	r2, [r0, #-44]	; 0xffffffd4
   38448:	ldr	r3, [r0]
   3844c:	ldr	r0, [r0, #4]
   38450:	mvn	ip, #0
   38454:	mov	lr, #0
   38458:	str	r0, [sp, #1744]	; 0x6d0
   3845c:	mov	r0, ip
   38460:	str	r1, [sp, #1740]	; 0x6cc
   38464:	mov	r1, lr
   38468:	str	r2, [sp, #1736]	; 0x6c8
   3846c:	mov	r2, r3
   38470:	ldr	r3, [sp, #1744]	; 0x6d0
   38474:	bl	77780 <__assert_fail@plt+0x64bc8>
   38478:	ldr	r2, [sp, #1740]	; 0x6cc
   3847c:	subs	r0, r0, r2
   38480:	ldr	r2, [sp, #1736]	; 0x6c8
   38484:	sbcs	r1, r1, r2
   38488:	str	r0, [sp, #1732]	; 0x6c4
   3848c:	str	r1, [sp, #1728]	; 0x6c0
   38490:	bge	384b8 <__assert_fail@plt+0x25900>
   38494:	b	38498 <__assert_fail@plt+0x258e0>
   38498:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3849c:	ldr	r1, [r0, #-48]	; 0xffffffd0
   384a0:	ldr	r0, [r0]
   384a4:	mul	r0, r1, r0
   384a8:	mov	r1, #0
   384ac:	str	r1, [fp, #-1340]	; 0xfffffac4
   384b0:	str	r0, [fp, #-1344]	; 0xfffffac0
   384b4:	b	38c60 <__assert_fail@plt+0x260a8>
   384b8:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   384bc:	ldr	r1, [r0, #-48]	; 0xffffffd0
   384c0:	ldr	r0, [r0]
   384c4:	mul	r0, r1, r0
   384c8:	mov	r1, #0
   384cc:	str	r1, [fp, #-1340]	; 0xfffffac4
   384d0:	str	r0, [fp, #-1344]	; 0xfffffac0
   384d4:	b	38c64 <__assert_fail@plt+0x260ac>
   384d8:	b	384dc <__assert_fail@plt+0x25924>
   384dc:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   384e0:	ldr	r0, [r0, #4]
   384e4:	cmn	r0, #1
   384e8:	bgt	386f8 <__assert_fail@plt+0x25b40>
   384ec:	b	384f0 <__assert_fail@plt+0x25938>
   384f0:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   384f4:	ldr	r0, [r0, #-44]	; 0xffffffd4
   384f8:	cmn	r0, #1
   384fc:	bgt	38620 <__assert_fail@plt+0x25a68>
   38500:	b	38504 <__assert_fail@plt+0x2594c>
   38504:	b	38508 <__assert_fail@plt+0x25950>
   38508:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3850c:	ldr	r1, [r0, #-48]	; 0xffffffd0
   38510:	ldr	r2, [r0, #-44]	; 0xffffffd4
   38514:	ldr	r3, [r0]
   38518:	ldr	r0, [r0, #4]
   3851c:	mvn	ip, #0
   38520:	mvn	lr, #-2147483648	; 0x80000000
   38524:	str	r0, [sp, #1724]	; 0x6bc
   38528:	mov	r0, ip
   3852c:	str	r1, [sp, #1720]	; 0x6b8
   38530:	mov	r1, lr
   38534:	str	r2, [sp, #1716]	; 0x6b4
   38538:	mov	r2, r3
   3853c:	ldr	r3, [sp, #1724]	; 0x6bc
   38540:	bl	77780 <__assert_fail@plt+0x64bc8>
   38544:	ldr	r2, [sp, #1720]	; 0x6b8
   38548:	subs	r0, r2, r0
   3854c:	ldr	r2, [sp, #1716]	; 0x6b4
   38550:	sbcs	r1, r2, r1
   38554:	str	r0, [sp, #1712]	; 0x6b0
   38558:	str	r1, [sp, #1708]	; 0x6ac
   3855c:	blt	38830 <__assert_fail@plt+0x25c78>
   38560:	b	3885c <__assert_fail@plt+0x25ca4>
   38564:	b	38568 <__assert_fail@plt+0x259b0>
   38568:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3856c:	ldr	r1, [r0]
   38570:	ldr	r0, [r0, #4]
   38574:	eor	r0, r0, #-2147483648	; 0x80000000
   38578:	orr	r0, r1, r0
   3857c:	cmp	r0, #0
   38580:	beq	385ac <__assert_fail@plt+0x259f4>
   38584:	b	385c0 <__assert_fail@plt+0x25a08>
   38588:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3858c:	ldr	r1, [r0]
   38590:	ldr	r0, [r0, #4]
   38594:	subs	r1, r1, #1
   38598:	sbcs	r0, r0, #0
   3859c:	str	r1, [sp, #1704]	; 0x6a8
   385a0:	str	r0, [sp, #1700]	; 0x6a4
   385a4:	blt	385c0 <__assert_fail@plt+0x25a08>
   385a8:	b	385ac <__assert_fail@plt+0x259f4>
   385ac:	mov	r0, #0
   385b0:	mov	r1, r0
   385b4:	str	r1, [sp, #1696]	; 0x6a0
   385b8:	str	r0, [sp, #1692]	; 0x69c
   385bc:	b	385ec <__assert_fail@plt+0x25a34>
   385c0:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   385c4:	ldr	r1, [r0]
   385c8:	ldr	r0, [r0, #4]
   385cc:	rsbs	r2, r1, #0
   385d0:	rsc	r3, r0, #0
   385d4:	mvn	r0, #0
   385d8:	mvn	r1, #-2147483648	; 0x80000000
   385dc:	bl	77780 <__assert_fail@plt+0x64bc8>
   385e0:	str	r0, [sp, #1696]	; 0x6a0
   385e4:	str	r1, [sp, #1692]	; 0x69c
   385e8:	b	385ec <__assert_fail@plt+0x25a34>
   385ec:	ldr	r0, [sp, #1692]	; 0x69c
   385f0:	ldr	r1, [sp, #1696]	; 0x6a0
   385f4:	ldr	r2, [fp, #-1288]	; 0xfffffaf8
   385f8:	ldr	r3, [r2, #-48]	; 0xffffffd0
   385fc:	ldr	r2, [r2, #-44]	; 0xffffffd4
   38600:	mvn	r2, r2
   38604:	mvn	r3, r3
   38608:	subs	r1, r3, r1
   3860c:	sbcs	r0, r2, r0
   38610:	str	r1, [sp, #1688]	; 0x698
   38614:	str	r0, [sp, #1684]	; 0x694
   38618:	bge	38830 <__assert_fail@plt+0x25c78>
   3861c:	b	3885c <__assert_fail@plt+0x25ca4>
   38620:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   38624:	ldr	r1, [r0]
   38628:	ldr	r0, [r0, #4]
   3862c:	and	r0, r1, r0
   38630:	cmn	r0, #1
   38634:	bne	3869c <__assert_fail@plt+0x25ae4>
   38638:	b	3863c <__assert_fail@plt+0x25a84>
   3863c:	b	38640 <__assert_fail@plt+0x25a88>
   38640:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   38644:	ldr	r1, [r0, #-48]	; 0xffffffd0
   38648:	ldr	r0, [r0, #-44]	; 0xffffffd4
   3864c:	add	r0, r0, #-2147483648	; 0x80000000
   38650:	rsbs	r1, r1, #0
   38654:	rscs	r0, r0, #0
   38658:	str	r1, [sp, #1680]	; 0x690
   3865c:	str	r0, [sp, #1676]	; 0x68c
   38660:	blt	38830 <__assert_fail@plt+0x25c78>
   38664:	b	3885c <__assert_fail@plt+0x25ca4>
   38668:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3866c:	ldr	r1, [r0, #-48]	; 0xffffffd0
   38670:	ldr	r0, [r0, #-44]	; 0xffffffd4
   38674:	subs	r1, r1, #1
   38678:	sbcs	r0, r0, #0
   3867c:	str	r1, [sp, #1672]	; 0x688
   38680:	str	r0, [sp, #1668]	; 0x684
   38684:	blt	3885c <__assert_fail@plt+0x25ca4>
   38688:	b	3868c <__assert_fail@plt+0x25ad4>
   3868c:	mov	r0, #0
   38690:	cmp	r0, #0
   38694:	bne	38830 <__assert_fail@plt+0x25c78>
   38698:	b	3885c <__assert_fail@plt+0x25ca4>
   3869c:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   386a0:	ldr	r1, [r0, #-48]	; 0xffffffd0
   386a4:	ldr	r2, [r0, #-44]	; 0xffffffd4
   386a8:	ldr	r3, [r0]
   386ac:	ldr	r0, [r0, #4]
   386b0:	mov	ip, #0
   386b4:	mov	lr, #-2147483648	; 0x80000000
   386b8:	str	r0, [sp, #1664]	; 0x680
   386bc:	mov	r0, ip
   386c0:	str	r1, [sp, #1660]	; 0x67c
   386c4:	mov	r1, lr
   386c8:	str	r2, [sp, #1656]	; 0x678
   386cc:	mov	r2, r3
   386d0:	ldr	r3, [sp, #1664]	; 0x680
   386d4:	bl	77780 <__assert_fail@plt+0x64bc8>
   386d8:	ldr	r2, [sp, #1660]	; 0x67c
   386dc:	subs	r0, r0, r2
   386e0:	ldr	r2, [sp, #1656]	; 0x678
   386e4:	sbcs	r1, r1, r2
   386e8:	str	r0, [sp, #1652]	; 0x674
   386ec:	str	r1, [sp, #1648]	; 0x670
   386f0:	blt	38830 <__assert_fail@plt+0x25c78>
   386f4:	b	3885c <__assert_fail@plt+0x25ca4>
   386f8:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   386fc:	ldr	r1, [r0]
   38700:	ldr	r0, [r0, #4]
   38704:	orr	r0, r1, r0
   38708:	cmp	r0, #0
   3870c:	bne	38718 <__assert_fail@plt+0x25b60>
   38710:	b	38714 <__assert_fail@plt+0x25b5c>
   38714:	b	3885c <__assert_fail@plt+0x25ca4>
   38718:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3871c:	ldr	r0, [r0, #-44]	; 0xffffffd4
   38720:	cmn	r0, #1
   38724:	bgt	387d4 <__assert_fail@plt+0x25c1c>
   38728:	b	3872c <__assert_fail@plt+0x25b74>
   3872c:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   38730:	ldr	r1, [r0, #-48]	; 0xffffffd0
   38734:	ldr	r0, [r0, #-44]	; 0xffffffd4
   38738:	and	r0, r1, r0
   3873c:	cmn	r0, #1
   38740:	bne	38784 <__assert_fail@plt+0x25bcc>
   38744:	b	38748 <__assert_fail@plt+0x25b90>
   38748:	b	3874c <__assert_fail@plt+0x25b94>
   3874c:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   38750:	ldr	r1, [r0]
   38754:	ldr	r0, [r0, #4]
   38758:	add	r0, r0, #-2147483648	; 0x80000000
   3875c:	rsbs	r1, r1, #0
   38760:	rscs	r0, r0, #0
   38764:	str	r1, [sp, #1644]	; 0x66c
   38768:	str	r0, [sp, #1640]	; 0x668
   3876c:	blt	38830 <__assert_fail@plt+0x25c78>
   38770:	b	3885c <__assert_fail@plt+0x25ca4>
   38774:	mov	r0, #0
   38778:	cmp	r0, #0
   3877c:	bne	38830 <__assert_fail@plt+0x25c78>
   38780:	b	3885c <__assert_fail@plt+0x25ca4>
   38784:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   38788:	ldr	r2, [r0, #-48]	; 0xffffffd0
   3878c:	ldr	r3, [r0, #-44]	; 0xffffffd4
   38790:	ldr	r1, [r0]
   38794:	ldr	r0, [r0, #4]
   38798:	mov	ip, #0
   3879c:	mov	lr, #-2147483648	; 0x80000000
   387a0:	str	r0, [sp, #1636]	; 0x664
   387a4:	mov	r0, ip
   387a8:	str	r1, [sp, #1632]	; 0x660
   387ac:	mov	r1, lr
   387b0:	bl	77780 <__assert_fail@plt+0x64bc8>
   387b4:	ldr	r2, [sp, #1632]	; 0x660
   387b8:	subs	r0, r0, r2
   387bc:	ldr	r2, [sp, #1636]	; 0x664
   387c0:	sbcs	r1, r1, r2
   387c4:	str	r0, [sp, #1628]	; 0x65c
   387c8:	str	r1, [sp, #1624]	; 0x658
   387cc:	blt	38830 <__assert_fail@plt+0x25c78>
   387d0:	b	3885c <__assert_fail@plt+0x25ca4>
   387d4:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   387d8:	ldr	r1, [r0, #-48]	; 0xffffffd0
   387dc:	ldr	r2, [r0, #-44]	; 0xffffffd4
   387e0:	ldr	r3, [r0]
   387e4:	ldr	r0, [r0, #4]
   387e8:	mvn	ip, #0
   387ec:	mvn	lr, #-2147483648	; 0x80000000
   387f0:	str	r0, [sp, #1620]	; 0x654
   387f4:	mov	r0, ip
   387f8:	str	r1, [sp, #1616]	; 0x650
   387fc:	mov	r1, lr
   38800:	str	r2, [sp, #1612]	; 0x64c
   38804:	mov	r2, r3
   38808:	ldr	r3, [sp, #1620]	; 0x654
   3880c:	bl	77780 <__assert_fail@plt+0x64bc8>
   38810:	ldr	r2, [sp, #1616]	; 0x650
   38814:	subs	r0, r0, r2
   38818:	ldr	r2, [sp, #1612]	; 0x64c
   3881c:	sbcs	r1, r1, r2
   38820:	str	r0, [sp, #1608]	; 0x648
   38824:	str	r1, [sp, #1604]	; 0x644
   38828:	bge	3885c <__assert_fail@plt+0x25ca4>
   3882c:	b	38830 <__assert_fail@plt+0x25c78>
   38830:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   38834:	ldr	r1, [r0, #-48]	; 0xffffffd0
   38838:	ldr	r2, [r0, #-44]	; 0xffffffd4
   3883c:	ldr	r3, [r0]
   38840:	ldr	r0, [r0, #4]
   38844:	umull	ip, lr, r1, r3
   38848:	mla	r0, r1, r0, lr
   3884c:	mla	r0, r2, r3, r0
   38850:	str	ip, [fp, #-1344]	; 0xfffffac0
   38854:	str	r0, [fp, #-1340]	; 0xfffffac4
   38858:	b	38c60 <__assert_fail@plt+0x260a8>
   3885c:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   38860:	ldr	r1, [r0, #-48]	; 0xffffffd0
   38864:	ldr	r2, [r0, #-44]	; 0xffffffd4
   38868:	ldr	r3, [r0]
   3886c:	ldr	r0, [r0, #4]
   38870:	umull	ip, lr, r1, r3
   38874:	mla	r0, r1, r0, lr
   38878:	mla	r0, r2, r3, r0
   3887c:	str	ip, [fp, #-1344]	; 0xfffffac0
   38880:	str	r0, [fp, #-1340]	; 0xfffffac4
   38884:	b	38c64 <__assert_fail@plt+0x260ac>
   38888:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3888c:	ldr	r0, [r0, #4]
   38890:	cmn	r0, #1
   38894:	bgt	38abc <__assert_fail@plt+0x25f04>
   38898:	b	3889c <__assert_fail@plt+0x25ce4>
   3889c:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   388a0:	ldr	r0, [r0, #-44]	; 0xffffffd4
   388a4:	cmn	r0, #1
   388a8:	bgt	389cc <__assert_fail@plt+0x25e14>
   388ac:	b	388b0 <__assert_fail@plt+0x25cf8>
   388b0:	b	3890c <__assert_fail@plt+0x25d54>
   388b4:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   388b8:	ldr	r1, [r0, #-48]	; 0xffffffd0
   388bc:	ldr	r2, [r0, #-44]	; 0xffffffd4
   388c0:	ldr	r3, [r0]
   388c4:	ldr	r0, [r0, #4]
   388c8:	mvn	ip, #0
   388cc:	str	r0, [sp, #1600]	; 0x640
   388d0:	mov	r0, ip
   388d4:	str	r1, [sp, #1596]	; 0x63c
   388d8:	mov	r1, ip
   388dc:	str	r2, [sp, #1592]	; 0x638
   388e0:	mov	r2, r3
   388e4:	ldr	r3, [sp, #1600]	; 0x640
   388e8:	bl	77854 <__assert_fail@plt+0x64c9c>
   388ec:	ldr	r2, [sp, #1596]	; 0x63c
   388f0:	subs	r0, r2, r0
   388f4:	ldr	r2, [sp, #1592]	; 0x638
   388f8:	sbcs	r1, r2, r1
   388fc:	str	r0, [sp, #1588]	; 0x634
   38900:	str	r1, [sp, #1584]	; 0x630
   38904:	bcc	38c08 <__assert_fail@plt+0x26050>
   38908:	b	38c34 <__assert_fail@plt+0x2607c>
   3890c:	b	38910 <__assert_fail@plt+0x25d58>
   38910:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   38914:	ldr	r1, [r0]
   38918:	ldr	r0, [r0, #4]
   3891c:	eor	r0, r0, #-2147483648	; 0x80000000
   38920:	orr	r0, r1, r0
   38924:	cmp	r0, #0
   38928:	beq	38954 <__assert_fail@plt+0x25d9c>
   3892c:	b	38968 <__assert_fail@plt+0x25db0>
   38930:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   38934:	ldr	r1, [r0]
   38938:	ldr	r0, [r0, #4]
   3893c:	subs	r1, r1, #1
   38940:	sbcs	r0, r0, #0
   38944:	str	r1, [sp, #1580]	; 0x62c
   38948:	str	r0, [sp, #1576]	; 0x628
   3894c:	blt	38968 <__assert_fail@plt+0x25db0>
   38950:	b	38954 <__assert_fail@plt+0x25d9c>
   38954:	mov	r0, #0
   38958:	mov	r1, #1
   3895c:	str	r1, [sp, #1572]	; 0x624
   38960:	str	r0, [sp, #1568]	; 0x620
   38964:	b	38998 <__assert_fail@plt+0x25de0>
   38968:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3896c:	ldr	r1, [r0]
   38970:	ldr	r0, [r0, #4]
   38974:	rsbs	r2, r1, #0
   38978:	rsc	r3, r0, #0
   3897c:	mvn	r0, #0
   38980:	str	r0, [sp, #1564]	; 0x61c
   38984:	ldr	r1, [sp, #1564]	; 0x61c
   38988:	bl	77854 <__assert_fail@plt+0x64c9c>
   3898c:	str	r0, [sp, #1572]	; 0x624
   38990:	str	r1, [sp, #1568]	; 0x620
   38994:	b	38998 <__assert_fail@plt+0x25de0>
   38998:	ldr	r0, [sp, #1568]	; 0x620
   3899c:	ldr	r1, [sp, #1572]	; 0x624
   389a0:	ldr	r2, [fp, #-1288]	; 0xfffffaf8
   389a4:	ldr	r3, [r2, #-48]	; 0xffffffd0
   389a8:	ldr	r2, [r2, #-44]	; 0xffffffd4
   389ac:	mvn	r2, r2
   389b0:	mvn	r3, r3
   389b4:	subs	r1, r3, r1
   389b8:	sbcs	r0, r2, r0
   389bc:	str	r1, [sp, #1560]	; 0x618
   389c0:	str	r0, [sp, #1556]	; 0x614
   389c4:	bcs	38c08 <__assert_fail@plt+0x26050>
   389c8:	b	38c34 <__assert_fail@plt+0x2607c>
   389cc:	b	389d0 <__assert_fail@plt+0x25e18>
   389d0:	b	38a64 <__assert_fail@plt+0x25eac>
   389d4:	b	38a64 <__assert_fail@plt+0x25eac>
   389d8:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   389dc:	ldr	r1, [r0]
   389e0:	ldr	r0, [r0, #4]
   389e4:	and	r0, r1, r0
   389e8:	cmn	r0, #1
   389ec:	bne	38a64 <__assert_fail@plt+0x25eac>
   389f0:	b	389f4 <__assert_fail@plt+0x25e3c>
   389f4:	b	389f8 <__assert_fail@plt+0x25e40>
   389f8:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   389fc:	ldr	r1, [r0, #-48]	; 0xffffffd0
   38a00:	ldr	r0, [r0, #-44]	; 0xffffffd4
   38a04:	rsbs	r1, r1, #0
   38a08:	rscs	r0, r0, #0
   38a0c:	str	r1, [sp, #1552]	; 0x610
   38a10:	str	r0, [sp, #1548]	; 0x60c
   38a14:	blt	38c08 <__assert_fail@plt+0x26050>
   38a18:	b	38c34 <__assert_fail@plt+0x2607c>
   38a1c:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   38a20:	ldr	r1, [r0, #-48]	; 0xffffffd0
   38a24:	ldr	r0, [r0, #-44]	; 0xffffffd4
   38a28:	subs	r1, r1, #1
   38a2c:	sbcs	r0, r0, #0
   38a30:	str	r1, [sp, #1544]	; 0x608
   38a34:	str	r0, [sp, #1540]	; 0x604
   38a38:	blt	38c34 <__assert_fail@plt+0x2607c>
   38a3c:	b	38a40 <__assert_fail@plt+0x25e88>
   38a40:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   38a44:	ldr	r1, [r0, #-48]	; 0xffffffd0
   38a48:	ldr	r0, [r0, #-44]	; 0xffffffd4
   38a4c:	subs	r1, r1, #1
   38a50:	sbc	r0, r0, #0
   38a54:	cmn	r0, #1
   38a58:	str	r1, [sp, #1536]	; 0x600
   38a5c:	bgt	38c08 <__assert_fail@plt+0x26050>
   38a60:	b	38c34 <__assert_fail@plt+0x2607c>
   38a64:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   38a68:	ldr	r1, [r0, #-48]	; 0xffffffd0
   38a6c:	ldr	r2, [r0, #-44]	; 0xffffffd4
   38a70:	ldr	r3, [r0]
   38a74:	ldr	r0, [r0, #4]
   38a78:	mov	ip, #0
   38a7c:	str	r0, [sp, #1532]	; 0x5fc
   38a80:	mov	r0, ip
   38a84:	str	r1, [sp, #1528]	; 0x5f8
   38a88:	mov	r1, ip
   38a8c:	str	r2, [sp, #1524]	; 0x5f4
   38a90:	mov	r2, r3
   38a94:	ldr	r3, [sp, #1532]	; 0x5fc
   38a98:	bl	77780 <__assert_fail@plt+0x64bc8>
   38a9c:	ldr	r2, [sp, #1528]	; 0x5f8
   38aa0:	subs	r0, r0, r2
   38aa4:	ldr	r2, [sp, #1524]	; 0x5f4
   38aa8:	sbcs	r1, r1, r2
   38aac:	str	r0, [sp, #1520]	; 0x5f0
   38ab0:	str	r1, [sp, #1516]	; 0x5ec
   38ab4:	blt	38c08 <__assert_fail@plt+0x26050>
   38ab8:	b	38c34 <__assert_fail@plt+0x2607c>
   38abc:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   38ac0:	ldr	r1, [r0]
   38ac4:	ldr	r0, [r0, #4]
   38ac8:	orr	r0, r1, r0
   38acc:	cmp	r0, #0
   38ad0:	bne	38adc <__assert_fail@plt+0x25f24>
   38ad4:	b	38ad8 <__assert_fail@plt+0x25f20>
   38ad8:	b	38c34 <__assert_fail@plt+0x2607c>
   38adc:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   38ae0:	ldr	r0, [r0, #-44]	; 0xffffffd4
   38ae4:	cmn	r0, #1
   38ae8:	bgt	38bb0 <__assert_fail@plt+0x25ff8>
   38aec:	b	38af0 <__assert_fail@plt+0x25f38>
   38af0:	b	38af4 <__assert_fail@plt+0x25f3c>
   38af4:	b	38b64 <__assert_fail@plt+0x25fac>
   38af8:	b	38b64 <__assert_fail@plt+0x25fac>
   38afc:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   38b00:	ldr	r1, [r0, #-48]	; 0xffffffd0
   38b04:	ldr	r0, [r0, #-44]	; 0xffffffd4
   38b08:	and	r0, r1, r0
   38b0c:	cmn	r0, #1
   38b10:	bne	38b64 <__assert_fail@plt+0x25fac>
   38b14:	b	38b18 <__assert_fail@plt+0x25f60>
   38b18:	b	38b1c <__assert_fail@plt+0x25f64>
   38b1c:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   38b20:	ldr	r1, [r0]
   38b24:	ldr	r0, [r0, #4]
   38b28:	rsbs	r1, r1, #0
   38b2c:	rscs	r0, r0, #0
   38b30:	str	r1, [sp, #1512]	; 0x5e8
   38b34:	str	r0, [sp, #1508]	; 0x5e4
   38b38:	blt	38c08 <__assert_fail@plt+0x26050>
   38b3c:	b	38c34 <__assert_fail@plt+0x2607c>
   38b40:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   38b44:	ldr	r1, [r0]
   38b48:	ldr	r0, [r0, #4]
   38b4c:	subs	r1, r1, #1
   38b50:	sbc	r0, r0, #0
   38b54:	cmn	r0, #1
   38b58:	str	r1, [sp, #1504]	; 0x5e0
   38b5c:	bgt	38c08 <__assert_fail@plt+0x26050>
   38b60:	b	38c34 <__assert_fail@plt+0x2607c>
   38b64:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   38b68:	ldr	r2, [r0, #-48]	; 0xffffffd0
   38b6c:	ldr	r3, [r0, #-44]	; 0xffffffd4
   38b70:	ldr	r1, [r0]
   38b74:	ldr	r0, [r0, #4]
   38b78:	mov	ip, #0
   38b7c:	str	r0, [sp, #1500]	; 0x5dc
   38b80:	mov	r0, ip
   38b84:	str	r1, [sp, #1496]	; 0x5d8
   38b88:	mov	r1, ip
   38b8c:	bl	77780 <__assert_fail@plt+0x64bc8>
   38b90:	ldr	r2, [sp, #1496]	; 0x5d8
   38b94:	subs	r0, r0, r2
   38b98:	ldr	r2, [sp, #1500]	; 0x5dc
   38b9c:	sbcs	r1, r1, r2
   38ba0:	str	r0, [sp, #1492]	; 0x5d4
   38ba4:	str	r1, [sp, #1488]	; 0x5d0
   38ba8:	blt	38c08 <__assert_fail@plt+0x26050>
   38bac:	b	38c34 <__assert_fail@plt+0x2607c>
   38bb0:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   38bb4:	ldr	r1, [r0, #-48]	; 0xffffffd0
   38bb8:	ldr	r2, [r0, #-44]	; 0xffffffd4
   38bbc:	ldr	r3, [r0]
   38bc0:	ldr	r0, [r0, #4]
   38bc4:	mvn	ip, #0
   38bc8:	str	r0, [sp, #1484]	; 0x5cc
   38bcc:	mov	r0, ip
   38bd0:	str	r1, [sp, #1480]	; 0x5c8
   38bd4:	mov	r1, ip
   38bd8:	str	r2, [sp, #1476]	; 0x5c4
   38bdc:	mov	r2, r3
   38be0:	ldr	r3, [sp, #1484]	; 0x5cc
   38be4:	bl	77854 <__assert_fail@plt+0x64c9c>
   38be8:	ldr	r2, [sp, #1480]	; 0x5c8
   38bec:	subs	r0, r0, r2
   38bf0:	ldr	r2, [sp, #1476]	; 0x5c4
   38bf4:	sbcs	r1, r1, r2
   38bf8:	str	r0, [sp, #1472]	; 0x5c0
   38bfc:	str	r1, [sp, #1468]	; 0x5bc
   38c00:	bcs	38c34 <__assert_fail@plt+0x2607c>
   38c04:	b	38c08 <__assert_fail@plt+0x26050>
   38c08:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   38c0c:	ldr	r1, [r0, #-48]	; 0xffffffd0
   38c10:	ldr	r2, [r0, #-44]	; 0xffffffd4
   38c14:	ldr	r3, [r0]
   38c18:	ldr	r0, [r0, #4]
   38c1c:	umull	ip, lr, r1, r3
   38c20:	mla	r0, r1, r0, lr
   38c24:	mla	r0, r2, r3, r0
   38c28:	str	ip, [fp, #-1344]	; 0xfffffac0
   38c2c:	str	r0, [fp, #-1340]	; 0xfffffac4
   38c30:	b	38c60 <__assert_fail@plt+0x260a8>
   38c34:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   38c38:	ldr	r1, [r0, #-48]	; 0xffffffd0
   38c3c:	ldr	r2, [r0, #-44]	; 0xffffffd4
   38c40:	ldr	r3, [r0]
   38c44:	ldr	r0, [r0, #4]
   38c48:	umull	ip, lr, r1, r3
   38c4c:	mla	r0, r1, r0, lr
   38c50:	mla	r0, r2, r3, r0
   38c54:	str	ip, [fp, #-1344]	; 0xfffffac0
   38c58:	str	r0, [fp, #-1340]	; 0xfffffac4
   38c5c:	b	38c64 <__assert_fail@plt+0x260ac>
   38c60:	b	3c300 <__assert_fail@plt+0x29748>
   38c64:	b	3bfc0 <__assert_fail@plt+0x29408>
   38c68:	mov	r0, #0
   38c6c:	str	r0, [fp, #-1892]	; 0xfffff89c
   38c70:	str	r0, [fp, #-1896]	; 0xfffff898
   38c74:	str	r0, [fp, #-1884]	; 0xfffff8a4
   38c78:	str	r0, [fp, #-1888]	; 0xfffff8a0
   38c7c:	sub	lr, fp, #1024	; 0x400
   38c80:	sub	r1, lr, #872	; 0x368
   38c84:	add	r2, r1, #16
   38c88:	str	r0, [fp, #-1876]	; 0xfffff8ac
   38c8c:	str	r0, [fp, #-1880]	; 0xfffff8a8
   38c90:	str	r0, [fp, #-1868]	; 0xfffff8b4
   38c94:	str	r0, [fp, #-1872]	; 0xfffff8b0
   38c98:	add	r3, r1, #32
   38c9c:	str	r0, [fp, #-1860]	; 0xfffff8bc
   38ca0:	str	r0, [fp, #-1864]	; 0xfffff8b8
   38ca4:	str	r0, [fp, #-1852]	; 0xfffff8c4
   38ca8:	str	r0, [fp, #-1856]	; 0xfffff8c0
   38cac:	str	r0, [fp, #-1848]	; 0xfffff8c8
   38cb0:	sub	r0, fp, #1360	; 0x550
   38cb4:	add	ip, r0, #32
   38cb8:	vld1.64	{d16-d17}, [r3]
   38cbc:	vst1.64	{d16-d17}, [ip]
   38cc0:	add	r3, r0, #16
   38cc4:	vld1.64	{d16-d17}, [r2]
   38cc8:	vst1.64	{d16-d17}, [r3]
   38ccc:	vld1.64	{d16-d17}, [r1]
   38cd0:	mov	r1, #48	; 0x30
   38cd4:	vst1.64	{d16-d17}, [r0], r1
   38cd8:	ldr	r1, [fp, #-2916]	; 0xfffff49c
   38cdc:	vldr	d18, [r1, #168]	; 0xa8
   38ce0:	vstr	d18, [r0]
   38ce4:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   38ce8:	ldr	r2, [r0]
   38cec:	ldr	r0, [r0, #4]
   38cf0:	str	r0, [fp, #-1340]	; 0xfffffac4
   38cf4:	str	r2, [fp, #-1344]	; 0xfffffac0
   38cf8:	b	3bfc0 <__assert_fail@plt+0x29408>
   38cfc:	mov	r0, #0
   38d00:	str	r0, [fp, #-1948]	; 0xfffff864
   38d04:	str	r0, [fp, #-1952]	; 0xfffff860
   38d08:	str	r0, [fp, #-1940]	; 0xfffff86c
   38d0c:	str	r0, [fp, #-1944]	; 0xfffff868
   38d10:	sub	r1, fp, #1952	; 0x7a0
   38d14:	add	r2, r1, #16
   38d18:	str	r0, [fp, #-1932]	; 0xfffff874
   38d1c:	str	r0, [fp, #-1936]	; 0xfffff870
   38d20:	str	r0, [fp, #-1924]	; 0xfffff87c
   38d24:	str	r0, [fp, #-1928]	; 0xfffff878
   38d28:	add	r3, r1, #32
   38d2c:	str	r0, [fp, #-1916]	; 0xfffff884
   38d30:	str	r0, [fp, #-1920]	; 0xfffff880
   38d34:	str	r0, [fp, #-1908]	; 0xfffff88c
   38d38:	str	r0, [fp, #-1912]	; 0xfffff888
   38d3c:	str	r0, [fp, #-1904]	; 0xfffff890
   38d40:	sub	r0, fp, #1360	; 0x550
   38d44:	add	ip, r0, #32
   38d48:	vld1.64	{d16-d17}, [r3]
   38d4c:	vst1.64	{d16-d17}, [ip]
   38d50:	add	r3, r0, #16
   38d54:	vld1.64	{d16-d17}, [r2]
   38d58:	vst1.64	{d16-d17}, [r3]
   38d5c:	ldr	r2, [fp, #-2916]	; 0xfffff49c
   38d60:	vldr	d18, [r2, #112]	; 0x70
   38d64:	vstr	d18, [r2, #704]	; 0x2c0
   38d68:	vld1.64	{d16-d17}, [r1]
   38d6c:	mov	r1, #24
   38d70:	vst1.64	{d16-d17}, [r0], r1
   38d74:	ldr	r1, [fp, #-1288]	; 0xfffffaf8
   38d78:	ldr	r3, [r1, #-56]	; 0xffffffc8
   38d7c:	ldr	r1, [r1, #-52]	; 0xffffffcc
   38d80:	str	r1, [r0, #4]
   38d84:	str	r3, [r0]
   38d88:	b	3bfc0 <__assert_fail@plt+0x29408>
   38d8c:	mov	r0, #0
   38d90:	str	r0, [fp, #-2004]	; 0xfffff82c
   38d94:	str	r0, [fp, #-2008]	; 0xfffff828
   38d98:	str	r0, [fp, #-1996]	; 0xfffff834
   38d9c:	str	r0, [fp, #-2000]	; 0xfffff830
   38da0:	sub	lr, fp, #1024	; 0x400
   38da4:	sub	r1, lr, #984	; 0x3d8
   38da8:	add	r2, r1, #16
   38dac:	str	r0, [fp, #-1988]	; 0xfffff83c
   38db0:	str	r0, [fp, #-1992]	; 0xfffff838
   38db4:	str	r0, [fp, #-1980]	; 0xfffff844
   38db8:	str	r0, [fp, #-1984]	; 0xfffff840
   38dbc:	add	r3, r1, #32
   38dc0:	str	r0, [fp, #-1972]	; 0xfffff84c
   38dc4:	str	r0, [fp, #-1976]	; 0xfffff848
   38dc8:	str	r0, [fp, #-1964]	; 0xfffff854
   38dcc:	str	r0, [fp, #-1968]	; 0xfffff850
   38dd0:	str	r0, [fp, #-1960]	; 0xfffff858
   38dd4:	sub	r0, fp, #1360	; 0x550
   38dd8:	add	ip, r0, #32
   38ddc:	vld1.64	{d16-d17}, [r3]
   38de0:	vst1.64	{d16-d17}, [ip]
   38de4:	add	r3, r0, #16
   38de8:	vld1.64	{d16-d17}, [r2]
   38dec:	vst1.64	{d16-d17}, [r3]
   38df0:	ldr	r2, [fp, #-2916]	; 0xfffff49c
   38df4:	vldr	d18, [r2, #56]	; 0x38
   38df8:	vstr	d18, [r2, #704]	; 0x2c0
   38dfc:	vld1.64	{d16-d17}, [r1]
   38e00:	mov	r1, #24
   38e04:	vst1.64	{d16-d17}, [r0], r1
   38e08:	ldr	r1, [fp, #-1288]	; 0xfffffaf8
   38e0c:	ldr	r3, [r1, #-48]	; 0xffffffd0
   38e10:	ldr	r1, [r1, #-44]	; 0xffffffd4
   38e14:	str	r1, [r0, #4]
   38e18:	str	r3, [r0]
   38e1c:	b	3bfc0 <__assert_fail@plt+0x29408>
   38e20:	mov	r0, #0
   38e24:	str	r0, [fp, #-2060]	; 0xfffff7f4
   38e28:	str	r0, [fp, #-2064]	; 0xfffff7f0
   38e2c:	str	r0, [fp, #-2052]	; 0xfffff7fc
   38e30:	str	r0, [fp, #-2056]	; 0xfffff7f8
   38e34:	sub	r1, fp, #2064	; 0x810
   38e38:	add	r2, r1, #16
   38e3c:	str	r0, [fp, #-2044]	; 0xfffff804
   38e40:	str	r0, [fp, #-2048]	; 0xfffff800
   38e44:	str	r0, [fp, #-2036]	; 0xfffff80c
   38e48:	str	r0, [fp, #-2040]	; 0xfffff808
   38e4c:	add	r3, r1, #32
   38e50:	str	r0, [fp, #-2028]	; 0xfffff814
   38e54:	str	r0, [fp, #-2032]	; 0xfffff810
   38e58:	str	r0, [fp, #-2020]	; 0xfffff81c
   38e5c:	str	r0, [fp, #-2024]	; 0xfffff818
   38e60:	str	r0, [fp, #-2016]	; 0xfffff820
   38e64:	sub	ip, fp, #1360	; 0x550
   38e68:	add	lr, ip, #32
   38e6c:	vld1.64	{d16-d17}, [r3]
   38e70:	vst1.64	{d16-d17}, [lr]
   38e74:	add	r3, ip, #16
   38e78:	vld1.64	{d16-d17}, [r2]
   38e7c:	vst1.64	{d16-d17}, [r3]
   38e80:	ldr	r2, [fp, #-2916]	; 0xfffff49c
   38e84:	vldr	d18, [r2]
   38e88:	vstr	d18, [r2, #704]	; 0x2c0
   38e8c:	vld1.64	{d16-d17}, [r1]
   38e90:	mov	r1, #24
   38e94:	vst1.64	{d16-d17}, [ip], r1
   38e98:	str	r0, [ip, #4]
   38e9c:	mov	r0, #1
   38ea0:	str	r0, [ip]
   38ea4:	b	3bfc0 <__assert_fail@plt+0x29408>
   38ea8:	mov	r0, #0
   38eac:	str	r0, [fp, #-2116]	; 0xfffff7bc
   38eb0:	str	r0, [fp, #-2120]	; 0xfffff7b8
   38eb4:	str	r0, [fp, #-2108]	; 0xfffff7c4
   38eb8:	str	r0, [fp, #-2112]	; 0xfffff7c0
   38ebc:	sub	lr, fp, #2048	; 0x800
   38ec0:	sub	r1, lr, #72	; 0x48
   38ec4:	add	r2, r1, #16
   38ec8:	str	r0, [fp, #-2100]	; 0xfffff7cc
   38ecc:	str	r0, [fp, #-2104]	; 0xfffff7c8
   38ed0:	str	r0, [fp, #-2092]	; 0xfffff7d4
   38ed4:	str	r0, [fp, #-2096]	; 0xfffff7d0
   38ed8:	add	r3, r1, #32
   38edc:	str	r0, [fp, #-2084]	; 0xfffff7dc
   38ee0:	str	r0, [fp, #-2088]	; 0xfffff7d8
   38ee4:	str	r0, [fp, #-2076]	; 0xfffff7e4
   38ee8:	str	r0, [fp, #-2080]	; 0xfffff7e0
   38eec:	str	r0, [fp, #-2072]	; 0xfffff7e8
   38ef0:	sub	r0, fp, #1360	; 0x550
   38ef4:	add	ip, r0, #32
   38ef8:	vld1.64	{d16-d17}, [r3]
   38efc:	vst1.64	{d16-d17}, [ip]
   38f00:	add	r3, r0, #16
   38f04:	vld1.64	{d16-d17}, [r2]
   38f08:	vst1.64	{d16-d17}, [r3]
   38f0c:	vld1.64	{d16-d17}, [r1]
   38f10:	mov	r1, #48	; 0x30
   38f14:	vst1.64	{d16-d17}, [r0], r1
   38f18:	sub	lr, fp, #2048	; 0x800
   38f1c:	vldr	d18, [lr, #-24]	; 0xffffffe8
   38f20:	vstr	d18, [r0]
   38f24:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   38f28:	ldr	r1, [r0, #-56]	; 0xffffffc8
   38f2c:	ldr	r0, [r0, #-52]	; 0xffffffcc
   38f30:	str	r0, [fp, #-1324]	; 0xfffffad4
   38f34:	str	r1, [fp, #-1328]	; 0xfffffad0
   38f38:	b	3bfc0 <__assert_fail@plt+0x29408>
   38f3c:	mov	r0, #0
   38f40:	str	r0, [fp, #-2172]	; 0xfffff784
   38f44:	str	r0, [fp, #-2176]	; 0xfffff780
   38f48:	str	r0, [fp, #-2164]	; 0xfffff78c
   38f4c:	str	r0, [fp, #-2168]	; 0xfffff788
   38f50:	sub	r1, fp, #2176	; 0x880
   38f54:	add	r2, r1, #16
   38f58:	str	r0, [fp, #-2156]	; 0xfffff794
   38f5c:	str	r0, [fp, #-2160]	; 0xfffff790
   38f60:	str	r0, [fp, #-2148]	; 0xfffff79c
   38f64:	str	r0, [fp, #-2152]	; 0xfffff798
   38f68:	add	r3, r1, #32
   38f6c:	str	r0, [fp, #-2140]	; 0xfffff7a4
   38f70:	str	r0, [fp, #-2144]	; 0xfffff7a0
   38f74:	str	r0, [fp, #-2132]	; 0xfffff7ac
   38f78:	str	r0, [fp, #-2136]	; 0xfffff7a8
   38f7c:	str	r0, [fp, #-2128]	; 0xfffff7b0
   38f80:	sub	r0, fp, #1360	; 0x550
   38f84:	add	ip, r0, #32
   38f88:	vld1.64	{d16-d17}, [r3]
   38f8c:	vst1.64	{d16-d17}, [ip]
   38f90:	add	r3, r0, #16
   38f94:	vld1.64	{d16-d17}, [r2]
   38f98:	vst1.64	{d16-d17}, [r3]
   38f9c:	vld1.64	{d16-d17}, [r1]
   38fa0:	mov	r1, #48	; 0x30
   38fa4:	vst1.64	{d16-d17}, [r0], r1
   38fa8:	sub	lr, fp, #2048	; 0x800
   38fac:	vldr	d18, [lr, #-80]	; 0xffffffb0
   38fb0:	vstr	d18, [r0]
   38fb4:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   38fb8:	ldr	r1, [r0, #-48]	; 0xffffffd0
   38fbc:	ldr	r0, [r0, #-44]	; 0xffffffd4
   38fc0:	str	r0, [fp, #-1324]	; 0xfffffad4
   38fc4:	str	r1, [fp, #-1328]	; 0xfffffad0
   38fc8:	b	3bfc0 <__assert_fail@plt+0x29408>
   38fcc:	mov	r0, #0
   38fd0:	str	r0, [fp, #-2228]	; 0xfffff74c
   38fd4:	str	r0, [fp, #-2232]	; 0xfffff748
   38fd8:	str	r0, [fp, #-2220]	; 0xfffff754
   38fdc:	str	r0, [fp, #-2224]	; 0xfffff750
   38fe0:	sub	lr, fp, #2048	; 0x800
   38fe4:	sub	r1, lr, #184	; 0xb8
   38fe8:	add	r2, r1, #16
   38fec:	str	r0, [fp, #-2212]	; 0xfffff75c
   38ff0:	str	r0, [fp, #-2216]	; 0xfffff758
   38ff4:	str	r0, [fp, #-2204]	; 0xfffff764
   38ff8:	str	r0, [fp, #-2208]	; 0xfffff760
   38ffc:	add	r3, r1, #32
   39000:	str	r0, [fp, #-2196]	; 0xfffff76c
   39004:	str	r0, [fp, #-2200]	; 0xfffff768
   39008:	str	r0, [fp, #-2188]	; 0xfffff774
   3900c:	str	r0, [fp, #-2192]	; 0xfffff770
   39010:	str	r0, [fp, #-2184]	; 0xfffff778
   39014:	sub	ip, fp, #1360	; 0x550
   39018:	add	lr, ip, #32
   3901c:	vld1.64	{d16-d17}, [r3]
   39020:	vst1.64	{d16-d17}, [lr]
   39024:	add	r3, ip, #16
   39028:	vld1.64	{d16-d17}, [r2]
   3902c:	vst1.64	{d16-d17}, [r3]
   39030:	vld1.64	{d16-d17}, [r1]
   39034:	mov	r1, #48	; 0x30
   39038:	vst1.64	{d16-d17}, [ip], r1
   3903c:	sub	lr, fp, #2048	; 0x800
   39040:	vldr	d18, [lr, #-136]	; 0xffffff78
   39044:	vstr	d18, [ip]
   39048:	str	r0, [fp, #-1324]	; 0xfffffad4
   3904c:	mov	r0, #1
   39050:	str	r0, [fp, #-1328]	; 0xfffffad0
   39054:	b	3bfc0 <__assert_fail@plt+0x29408>
   39058:	mov	r0, #0
   3905c:	str	r0, [fp, #-2284]	; 0xfffff714
   39060:	str	r0, [fp, #-2288]	; 0xfffff710
   39064:	str	r0, [fp, #-2276]	; 0xfffff71c
   39068:	str	r0, [fp, #-2280]	; 0xfffff718
   3906c:	sub	r1, fp, #2288	; 0x8f0
   39070:	add	r2, r1, #16
   39074:	str	r0, [fp, #-2268]	; 0xfffff724
   39078:	str	r0, [fp, #-2272]	; 0xfffff720
   3907c:	str	r0, [fp, #-2260]	; 0xfffff72c
   39080:	str	r0, [fp, #-2264]	; 0xfffff728
   39084:	add	r3, r1, #32
   39088:	str	r0, [fp, #-2252]	; 0xfffff734
   3908c:	str	r0, [fp, #-2256]	; 0xfffff730
   39090:	str	r0, [fp, #-2244]	; 0xfffff73c
   39094:	str	r0, [fp, #-2248]	; 0xfffff738
   39098:	str	r0, [fp, #-2240]	; 0xfffff740
   3909c:	sub	r0, fp, #1360	; 0x550
   390a0:	add	ip, r0, #32
   390a4:	vld1.64	{d16-d17}, [r3]
   390a8:	vst1.64	{d16-d17}, [ip]
   390ac:	add	r3, r0, #16
   390b0:	vld1.64	{d16-d17}, [r2]
   390b4:	vst1.64	{d16-d17}, [r3]
   390b8:	sub	lr, fp, #2048	; 0x800
   390bc:	vldr	d18, [lr, #-192]	; 0xffffff40
   390c0:	ldr	r2, [fp, #-2916]	; 0xfffff49c
   390c4:	vstr	d18, [r2, #704]	; 0x2c0
   390c8:	vld1.64	{d16-d17}, [r1]
   390cc:	mov	r1, #40	; 0x28
   390d0:	vst1.64	{d16-d17}, [r0], r1
   390d4:	ldr	r1, [fp, #-1288]	; 0xfffffaf8
   390d8:	ldr	r3, [r1, #-56]	; 0xffffffc8
   390dc:	ldr	r1, [r1, #-52]	; 0xffffffcc
   390e0:	str	r1, [r0, #4]
   390e4:	str	r3, [r0]
   390e8:	b	3bfc0 <__assert_fail@plt+0x29408>
   390ec:	mov	r0, #0
   390f0:	str	r0, [fp, #-2340]	; 0xfffff6dc
   390f4:	str	r0, [fp, #-2344]	; 0xfffff6d8
   390f8:	str	r0, [fp, #-2332]	; 0xfffff6e4
   390fc:	str	r0, [fp, #-2336]	; 0xfffff6e0
   39100:	sub	lr, fp, #2048	; 0x800
   39104:	sub	r1, lr, #296	; 0x128
   39108:	add	r2, r1, #16
   3910c:	str	r0, [fp, #-2324]	; 0xfffff6ec
   39110:	str	r0, [fp, #-2328]	; 0xfffff6e8
   39114:	str	r0, [fp, #-2316]	; 0xfffff6f4
   39118:	str	r0, [fp, #-2320]	; 0xfffff6f0
   3911c:	add	r3, r1, #32
   39120:	str	r0, [fp, #-2308]	; 0xfffff6fc
   39124:	str	r0, [fp, #-2312]	; 0xfffff6f8
   39128:	str	r0, [fp, #-2300]	; 0xfffff704
   3912c:	str	r0, [fp, #-2304]	; 0xfffff700
   39130:	str	r0, [fp, #-2296]	; 0xfffff708
   39134:	sub	r0, fp, #1360	; 0x550
   39138:	add	ip, r0, #32
   3913c:	vld1.64	{d16-d17}, [r3]
   39140:	vst1.64	{d16-d17}, [ip]
   39144:	add	r3, r0, #16
   39148:	vld1.64	{d16-d17}, [r2]
   3914c:	vst1.64	{d16-d17}, [r3]
   39150:	sub	lr, fp, #2048	; 0x800
   39154:	vldr	d18, [lr, #-248]	; 0xffffff08
   39158:	ldr	r2, [fp, #-2916]	; 0xfffff49c
   3915c:	vstr	d18, [r2, #704]	; 0x2c0
   39160:	vld1.64	{d16-d17}, [r1]
   39164:	mov	r1, #40	; 0x28
   39168:	vst1.64	{d16-d17}, [r0], r1
   3916c:	ldr	r1, [fp, #-1288]	; 0xfffffaf8
   39170:	ldr	r3, [r1, #-48]	; 0xffffffd0
   39174:	ldr	r1, [r1, #-44]	; 0xffffffd4
   39178:	str	r1, [r0, #4]
   3917c:	str	r3, [r0]
   39180:	b	3bfc0 <__assert_fail@plt+0x29408>
   39184:	mov	r0, #0
   39188:	str	r0, [fp, #-2396]	; 0xfffff6a4
   3918c:	str	r0, [fp, #-2400]	; 0xfffff6a0
   39190:	str	r0, [fp, #-2388]	; 0xfffff6ac
   39194:	str	r0, [fp, #-2392]	; 0xfffff6a8
   39198:	sub	r1, fp, #2400	; 0x960
   3919c:	add	r2, r1, #16
   391a0:	str	r0, [fp, #-2380]	; 0xfffff6b4
   391a4:	str	r0, [fp, #-2384]	; 0xfffff6b0
   391a8:	str	r0, [fp, #-2372]	; 0xfffff6bc
   391ac:	str	r0, [fp, #-2376]	; 0xfffff6b8
   391b0:	add	r3, r1, #32
   391b4:	str	r0, [fp, #-2364]	; 0xfffff6c4
   391b8:	str	r0, [fp, #-2368]	; 0xfffff6c0
   391bc:	str	r0, [fp, #-2356]	; 0xfffff6cc
   391c0:	str	r0, [fp, #-2360]	; 0xfffff6c8
   391c4:	str	r0, [fp, #-2352]	; 0xfffff6d0
   391c8:	sub	r0, fp, #1360	; 0x550
   391cc:	add	ip, r0, #32
   391d0:	vld1.64	{d16-d17}, [r3]
   391d4:	vst1.64	{d16-d17}, [ip]
   391d8:	add	r3, r0, #16
   391dc:	vld1.64	{d16-d17}, [r2]
   391e0:	vst1.64	{d16-d17}, [r3]
   391e4:	sub	lr, fp, #2048	; 0x800
   391e8:	vldr	d18, [lr, #-304]	; 0xfffffed0
   391ec:	ldr	r2, [fp, #-2916]	; 0xfffff49c
   391f0:	vstr	d18, [r2, #704]	; 0x2c0
   391f4:	vld1.64	{d16-d17}, [r1]
   391f8:	mov	r1, #40	; 0x28
   391fc:	vst1.64	{d16-d17}, [r0], r1
   39200:	ldr	r1, [fp, #-1288]	; 0xfffffaf8
   39204:	ldr	r1, [r1, #-56]	; 0xffffffc8
   39208:	asr	r3, r1, #31
   3920c:	str	r1, [r0]
   39210:	str	r3, [r0, #4]
   39214:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   39218:	mvn	r1, #51	; 0x33
   3921c:	add	r0, r0, r1
   39220:	ldr	r0, [r0]
   39224:	str	r0, [fp, #-1312]	; 0xfffffae0
   39228:	b	3bfc0 <__assert_fail@plt+0x29408>
   3922c:	mov	r0, #0
   39230:	str	r0, [fp, #-2452]	; 0xfffff66c
   39234:	str	r0, [fp, #-2456]	; 0xfffff668
   39238:	str	r0, [fp, #-2444]	; 0xfffff674
   3923c:	str	r0, [fp, #-2448]	; 0xfffff670
   39240:	sub	lr, fp, #2048	; 0x800
   39244:	sub	r1, lr, #408	; 0x198
   39248:	add	r2, r1, #16
   3924c:	str	r0, [fp, #-2436]	; 0xfffff67c
   39250:	str	r0, [fp, #-2440]	; 0xfffff678
   39254:	str	r0, [fp, #-2428]	; 0xfffff684
   39258:	str	r0, [fp, #-2432]	; 0xfffff680
   3925c:	add	r3, r1, #32
   39260:	str	r0, [fp, #-2420]	; 0xfffff68c
   39264:	str	r0, [fp, #-2424]	; 0xfffff688
   39268:	str	r0, [fp, #-2412]	; 0xfffff694
   3926c:	str	r0, [fp, #-2416]	; 0xfffff690
   39270:	str	r0, [fp, #-2408]	; 0xfffff698
   39274:	sub	r0, fp, #1360	; 0x550
   39278:	add	ip, r0, #32
   3927c:	vld1.64	{d16-d17}, [r3]
   39280:	vst1.64	{d16-d17}, [ip]
   39284:	add	r3, r0, #16
   39288:	vld1.64	{d16-d17}, [r2]
   3928c:	vst1.64	{d16-d17}, [r3]
   39290:	sub	lr, fp, #2048	; 0x800
   39294:	vldr	d18, [lr, #-360]	; 0xfffffe98
   39298:	ldr	r2, [fp, #-2916]	; 0xfffff49c
   3929c:	vstr	d18, [r2, #704]	; 0x2c0
   392a0:	vld1.64	{d16-d17}, [r1]
   392a4:	mov	r1, #40	; 0x28
   392a8:	vst1.64	{d16-d17}, [r0], r1
   392ac:	ldr	r1, [fp, #-1288]	; 0xfffffaf8
   392b0:	ldr	r1, [r1, #-56]	; 0xffffffc8
   392b4:	asr	r3, r1, #31
   392b8:	str	r1, [r0]
   392bc:	str	r3, [r0, #4]
   392c0:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   392c4:	mvn	r1, #51	; 0x33
   392c8:	add	r0, r0, r1
   392cc:	ldr	r0, [r0]
   392d0:	str	r0, [fp, #-1312]	; 0xfffffae0
   392d4:	b	3bfc0 <__assert_fail@plt+0x29408>
   392d8:	mov	r0, #0
   392dc:	str	r0, [fp, #-2508]	; 0xfffff634
   392e0:	str	r0, [fp, #-2512]	; 0xfffff630
   392e4:	str	r0, [fp, #-2500]	; 0xfffff63c
   392e8:	str	r0, [fp, #-2504]	; 0xfffff638
   392ec:	sub	r1, fp, #2512	; 0x9d0
   392f0:	add	r2, r1, #16
   392f4:	str	r0, [fp, #-2492]	; 0xfffff644
   392f8:	str	r0, [fp, #-2496]	; 0xfffff640
   392fc:	str	r0, [fp, #-2484]	; 0xfffff64c
   39300:	str	r0, [fp, #-2488]	; 0xfffff648
   39304:	add	r3, r1, #32
   39308:	str	r0, [fp, #-2476]	; 0xfffff654
   3930c:	str	r0, [fp, #-2480]	; 0xfffff650
   39310:	str	r0, [fp, #-2468]	; 0xfffff65c
   39314:	str	r0, [fp, #-2472]	; 0xfffff658
   39318:	str	r0, [fp, #-2464]	; 0xfffff660
   3931c:	sub	ip, fp, #1360	; 0x550
   39320:	add	lr, ip, #32
   39324:	vld1.64	{d16-d17}, [r3]
   39328:	vst1.64	{d16-d17}, [lr]
   3932c:	add	r3, ip, #16
   39330:	vld1.64	{d16-d17}, [r2]
   39334:	vst1.64	{d16-d17}, [r3]
   39338:	sub	lr, fp, #2048	; 0x800
   3933c:	vldr	d18, [lr, #-416]	; 0xfffffe60
   39340:	ldr	r2, [fp, #-2916]	; 0xfffff49c
   39344:	vstr	d18, [r2, #704]	; 0x2c0
   39348:	vld1.64	{d16-d17}, [r1]
   3934c:	mov	r1, #40	; 0x28
   39350:	vst1.64	{d16-d17}, [ip], r1
   39354:	str	r0, [ip, #4]
   39358:	mov	r0, #1
   3935c:	str	r0, [ip]
   39360:	b	3bfc0 <__assert_fail@plt+0x29408>
   39364:	mov	r0, #0
   39368:	str	r0, [fp, #-2564]	; 0xfffff5fc
   3936c:	str	r0, [fp, #-2568]	; 0xfffff5f8
   39370:	str	r0, [fp, #-2556]	; 0xfffff604
   39374:	str	r0, [fp, #-2560]	; 0xfffff600
   39378:	sub	lr, fp, #2048	; 0x800
   3937c:	sub	r1, lr, #520	; 0x208
   39380:	add	r2, r1, #16
   39384:	str	r0, [fp, #-2548]	; 0xfffff60c
   39388:	str	r0, [fp, #-2552]	; 0xfffff608
   3938c:	str	r0, [fp, #-2540]	; 0xfffff614
   39390:	str	r0, [fp, #-2544]	; 0xfffff610
   39394:	add	r3, r1, #32
   39398:	str	r0, [fp, #-2532]	; 0xfffff61c
   3939c:	str	r0, [fp, #-2536]	; 0xfffff618
   393a0:	str	r0, [fp, #-2524]	; 0xfffff624
   393a4:	str	r0, [fp, #-2528]	; 0xfffff620
   393a8:	str	r0, [fp, #-2520]	; 0xfffff628
   393ac:	sub	r0, fp, #1360	; 0x550
   393b0:	add	ip, r0, #32
   393b4:	vld1.64	{d16-d17}, [r3]
   393b8:	vst1.64	{d16-d17}, [ip]
   393bc:	add	r3, r0, #16
   393c0:	vld1.64	{d16-d17}, [r2]
   393c4:	vst1.64	{d16-d17}, [r3]
   393c8:	vld1.64	{d16-d17}, [r1]
   393cc:	mov	r1, #48	; 0x30
   393d0:	vst1.64	{d16-d17}, [r0], r1
   393d4:	sub	lr, fp, #2048	; 0x800
   393d8:	vldr	d18, [lr, #-472]	; 0xfffffe28
   393dc:	vstr	d18, [r0]
   393e0:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   393e4:	ldr	r1, [r0, #-48]	; 0xffffffd0
   393e8:	ldr	r0, [r0, #-44]	; 0xffffffd4
   393ec:	str	r0, [fp, #-1356]	; 0xfffffab4
   393f0:	str	r1, [fp, #-1360]	; 0xfffffab0
   393f4:	b	3bfc0 <__assert_fail@plt+0x29408>
   393f8:	mov	r0, #0
   393fc:	str	r0, [fp, #-2620]	; 0xfffff5c4
   39400:	str	r0, [fp, #-2624]	; 0xfffff5c0
   39404:	str	r0, [fp, #-2612]	; 0xfffff5cc
   39408:	str	r0, [fp, #-2616]	; 0xfffff5c8
   3940c:	sub	r1, fp, #2624	; 0xa40
   39410:	add	r2, r1, #16
   39414:	str	r0, [fp, #-2604]	; 0xfffff5d4
   39418:	str	r0, [fp, #-2608]	; 0xfffff5d0
   3941c:	str	r0, [fp, #-2596]	; 0xfffff5dc
   39420:	str	r0, [fp, #-2600]	; 0xfffff5d8
   39424:	add	r3, r1, #32
   39428:	str	r0, [fp, #-2588]	; 0xfffff5e4
   3942c:	str	r0, [fp, #-2592]	; 0xfffff5e0
   39430:	str	r0, [fp, #-2580]	; 0xfffff5ec
   39434:	str	r0, [fp, #-2584]	; 0xfffff5e8
   39438:	str	r0, [fp, #-2576]	; 0xfffff5f0
   3943c:	sub	r0, fp, #1360	; 0x550
   39440:	add	ip, r0, #32
   39444:	vld1.64	{d16-d17}, [r3]
   39448:	vst1.64	{d16-d17}, [ip]
   3944c:	add	r3, r0, #16
   39450:	vld1.64	{d16-d17}, [r2]
   39454:	vst1.64	{d16-d17}, [r3]
   39458:	sub	lr, fp, #2048	; 0x800
   3945c:	vldr	d18, [lr, #-528]	; 0xfffffdf0
   39460:	ldr	r2, [fp, #-2916]	; 0xfffff49c
   39464:	vstr	d18, [r2, #704]	; 0x2c0
   39468:	vld1.64	{d16-d17}, [r1]
   3946c:	mov	r1, #8
   39470:	vst1.64	{d16-d17}, [r0], r1
   39474:	ldr	r1, [fp, #-1288]	; 0xfffffaf8
   39478:	ldr	r3, [r1, #-48]	; 0xffffffd0
   3947c:	ldr	r1, [r1, #-44]	; 0xffffffd4
   39480:	str	r1, [r0, #4]
   39484:	str	r3, [r0]
   39488:	b	3bfc0 <__assert_fail@plt+0x29408>
   3948c:	sub	r0, fp, #1360	; 0x550
   39490:	mov	r1, #0
   39494:	str	r1, [fp, #-2676]	; 0xfffff58c
   39498:	str	r1, [fp, #-2680]	; 0xfffff588
   3949c:	str	r1, [fp, #-2668]	; 0xfffff594
   394a0:	str	r1, [fp, #-2672]	; 0xfffff590
   394a4:	str	r1, [fp, #-2660]	; 0xfffff59c
   394a8:	str	r1, [fp, #-2664]	; 0xfffff598
   394ac:	str	r1, [fp, #-2652]	; 0xfffff5a4
   394b0:	str	r1, [fp, #-2656]	; 0xfffff5a0
   394b4:	str	r1, [fp, #-2644]	; 0xfffff5ac
   394b8:	str	r1, [fp, #-2648]	; 0xfffff5a8
   394bc:	str	r1, [fp, #-2636]	; 0xfffff5b4
   394c0:	str	r1, [fp, #-2640]	; 0xfffff5b0
   394c4:	movw	r1, #0
   394c8:	str	r1, [fp, #-2632]	; 0xfffff5b8
   394cc:	sub	lr, fp, #2048	; 0x800
   394d0:	sub	r1, lr, #632	; 0x278
   394d4:	movw	r2, #56	; 0x38
   394d8:	bl	125c4 <memcpy@plt>
   394dc:	b	39ca4 <__assert_fail@plt+0x270ec>
   394e0:	b	394e4 <__assert_fail@plt+0x2692c>
   394e4:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   394e8:	ldr	r0, [r0, #4]
   394ec:	cmn	r0, #1
   394f0:	bgt	3972c <__assert_fail@plt+0x26b74>
   394f4:	b	394f8 <__assert_fail@plt+0x26940>
   394f8:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   394fc:	ldr	r0, [r0, #-44]	; 0xffffffd4
   39500:	cmn	r0, #1
   39504:	bgt	39628 <__assert_fail@plt+0x26a70>
   39508:	b	3950c <__assert_fail@plt+0x26954>
   3950c:	b	39510 <__assert_fail@plt+0x26958>
   39510:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   39514:	ldr	r1, [r0, #-48]	; 0xffffffd0
   39518:	ldr	r2, [r0, #-44]	; 0xffffffd4
   3951c:	ldr	r3, [r0]
   39520:	ldr	r0, [r0, #4]
   39524:	mov	ip, #127	; 0x7f
   39528:	mov	lr, #0
   3952c:	str	r0, [sp, #1464]	; 0x5b8
   39530:	mov	r0, ip
   39534:	str	r1, [sp, #1460]	; 0x5b4
   39538:	mov	r1, lr
   3953c:	str	r2, [sp, #1456]	; 0x5b0
   39540:	mov	r2, r3
   39544:	ldr	r3, [sp, #1464]	; 0x5b8
   39548:	bl	77780 <__assert_fail@plt+0x64bc8>
   3954c:	ldr	r2, [sp, #1460]	; 0x5b4
   39550:	subs	r0, r2, r0
   39554:	ldr	r2, [sp, #1456]	; 0x5b0
   39558:	sbcs	r1, r2, r1
   3955c:	str	r0, [sp, #1452]	; 0x5ac
   39560:	str	r1, [sp, #1448]	; 0x5a8
   39564:	blt	39890 <__assert_fail@plt+0x26cd8>
   39568:	b	398b4 <__assert_fail@plt+0x26cfc>
   3956c:	b	39570 <__assert_fail@plt+0x269b8>
   39570:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   39574:	ldr	r1, [r0]
   39578:	ldr	r0, [r0, #4]
   3957c:	eor	r0, r0, #-2147483648	; 0x80000000
   39580:	orr	r0, r1, r0
   39584:	cmp	r0, #0
   39588:	beq	395b4 <__assert_fail@plt+0x269fc>
   3958c:	b	395c8 <__assert_fail@plt+0x26a10>
   39590:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   39594:	ldr	r1, [r0]
   39598:	ldr	r0, [r0, #4]
   3959c:	subs	r1, r1, #1
   395a0:	sbcs	r0, r0, #0
   395a4:	str	r1, [sp, #1444]	; 0x5a4
   395a8:	str	r0, [sp, #1440]	; 0x5a0
   395ac:	blt	395c8 <__assert_fail@plt+0x26a10>
   395b0:	b	395b4 <__assert_fail@plt+0x269fc>
   395b4:	mov	r0, #0
   395b8:	mov	r1, r0
   395bc:	str	r1, [sp, #1436]	; 0x59c
   395c0:	str	r0, [sp, #1432]	; 0x598
   395c4:	b	395f4 <__assert_fail@plt+0x26a3c>
   395c8:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   395cc:	ldr	r1, [r0]
   395d0:	ldr	r0, [r0, #4]
   395d4:	rsbs	r2, r1, #0
   395d8:	rsc	r3, r0, #0
   395dc:	mov	r0, #127	; 0x7f
   395e0:	mov	r1, #0
   395e4:	bl	77780 <__assert_fail@plt+0x64bc8>
   395e8:	str	r0, [sp, #1436]	; 0x59c
   395ec:	str	r1, [sp, #1432]	; 0x598
   395f0:	b	395f4 <__assert_fail@plt+0x26a3c>
   395f4:	ldr	r0, [sp, #1432]	; 0x598
   395f8:	ldr	r1, [sp, #1436]	; 0x59c
   395fc:	ldr	r2, [fp, #-1288]	; 0xfffffaf8
   39600:	ldr	r3, [r2, #-48]	; 0xffffffd0
   39604:	ldr	r2, [r2, #-44]	; 0xffffffd4
   39608:	mvn	r2, r2
   3960c:	mvn	r3, r3
   39610:	subs	r1, r3, r1
   39614:	sbcs	r0, r2, r0
   39618:	str	r1, [sp, #1428]	; 0x594
   3961c:	str	r0, [sp, #1424]	; 0x590
   39620:	bge	39890 <__assert_fail@plt+0x26cd8>
   39624:	b	398b4 <__assert_fail@plt+0x26cfc>
   39628:	b	3962c <__assert_fail@plt+0x26a74>
   3962c:	b	396d0 <__assert_fail@plt+0x26b18>
   39630:	b	396d0 <__assert_fail@plt+0x26b18>
   39634:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   39638:	ldr	r1, [r0]
   3963c:	ldr	r0, [r0, #4]
   39640:	and	r0, r1, r0
   39644:	cmn	r0, #1
   39648:	bne	396d0 <__assert_fail@plt+0x26b18>
   3964c:	b	39650 <__assert_fail@plt+0x26a98>
   39650:	b	39654 <__assert_fail@plt+0x26a9c>
   39654:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   39658:	ldr	r1, [r0, #-48]	; 0xffffffd0
   3965c:	ldr	r0, [r0, #-44]	; 0xffffffd4
   39660:	subs	r1, r1, #128	; 0x80
   39664:	sbc	r0, r0, #0
   39668:	rsbs	r1, r1, #0
   3966c:	rscs	r0, r0, #0
   39670:	str	r1, [sp, #1420]	; 0x58c
   39674:	str	r0, [sp, #1416]	; 0x588
   39678:	blt	39890 <__assert_fail@plt+0x26cd8>
   3967c:	b	398b4 <__assert_fail@plt+0x26cfc>
   39680:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   39684:	ldr	r1, [r0, #-48]	; 0xffffffd0
   39688:	ldr	r0, [r0, #-44]	; 0xffffffd4
   3968c:	subs	r1, r1, #1
   39690:	sbcs	r0, r0, #0
   39694:	str	r1, [sp, #1412]	; 0x584
   39698:	str	r0, [sp, #1408]	; 0x580
   3969c:	blt	398b4 <__assert_fail@plt+0x26cfc>
   396a0:	b	396a4 <__assert_fail@plt+0x26aec>
   396a4:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   396a8:	ldr	r1, [r0, #-48]	; 0xffffffd0
   396ac:	ldr	r0, [r0, #-44]	; 0xffffffd4
   396b0:	subs	r1, r1, #1
   396b4:	sbc	r0, r0, #0
   396b8:	rsbs	r1, r1, #127	; 0x7f
   396bc:	rscs	r0, r0, #0
   396c0:	str	r1, [sp, #1404]	; 0x57c
   396c4:	str	r0, [sp, #1400]	; 0x578
   396c8:	blt	39890 <__assert_fail@plt+0x26cd8>
   396cc:	b	398b4 <__assert_fail@plt+0x26cfc>
   396d0:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   396d4:	ldr	r1, [r0, #-48]	; 0xffffffd0
   396d8:	ldr	r2, [r0, #-44]	; 0xffffffd4
   396dc:	ldr	r3, [r0]
   396e0:	ldr	r0, [r0, #4]
   396e4:	mvn	ip, #127	; 0x7f
   396e8:	mvn	lr, #0
   396ec:	str	r0, [sp, #1396]	; 0x574
   396f0:	mov	r0, ip
   396f4:	str	r1, [sp, #1392]	; 0x570
   396f8:	mov	r1, lr
   396fc:	str	r2, [sp, #1388]	; 0x56c
   39700:	mov	r2, r3
   39704:	ldr	r3, [sp, #1396]	; 0x574
   39708:	bl	77780 <__assert_fail@plt+0x64bc8>
   3970c:	ldr	r2, [sp, #1392]	; 0x570
   39710:	subs	r0, r0, r2
   39714:	ldr	r2, [sp, #1388]	; 0x56c
   39718:	sbcs	r1, r1, r2
   3971c:	str	r0, [sp, #1384]	; 0x568
   39720:	str	r1, [sp, #1380]	; 0x564
   39724:	blt	39890 <__assert_fail@plt+0x26cd8>
   39728:	b	398b4 <__assert_fail@plt+0x26cfc>
   3972c:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   39730:	ldr	r1, [r0]
   39734:	ldr	r0, [r0, #4]
   39738:	orr	r0, r1, r0
   3973c:	cmp	r0, #0
   39740:	bne	3974c <__assert_fail@plt+0x26b94>
   39744:	b	39748 <__assert_fail@plt+0x26b90>
   39748:	b	398b4 <__assert_fail@plt+0x26cfc>
   3974c:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   39750:	ldr	r0, [r0, #-44]	; 0xffffffd4
   39754:	cmn	r0, #1
   39758:	bgt	39834 <__assert_fail@plt+0x26c7c>
   3975c:	b	39760 <__assert_fail@plt+0x26ba8>
   39760:	b	39764 <__assert_fail@plt+0x26bac>
   39764:	b	397e4 <__assert_fail@plt+0x26c2c>
   39768:	b	397e4 <__assert_fail@plt+0x26c2c>
   3976c:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   39770:	ldr	r1, [r0, #-48]	; 0xffffffd0
   39774:	ldr	r0, [r0, #-44]	; 0xffffffd4
   39778:	and	r0, r1, r0
   3977c:	cmn	r0, #1
   39780:	bne	397e4 <__assert_fail@plt+0x26c2c>
   39784:	b	39788 <__assert_fail@plt+0x26bd0>
   39788:	b	3978c <__assert_fail@plt+0x26bd4>
   3978c:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   39790:	ldr	r1, [r0]
   39794:	ldr	r0, [r0, #4]
   39798:	subs	r1, r1, #128	; 0x80
   3979c:	sbc	r0, r0, #0
   397a0:	rsbs	r1, r1, #0
   397a4:	rscs	r0, r0, #0
   397a8:	str	r1, [sp, #1376]	; 0x560
   397ac:	str	r0, [sp, #1372]	; 0x55c
   397b0:	blt	39890 <__assert_fail@plt+0x26cd8>
   397b4:	b	398b4 <__assert_fail@plt+0x26cfc>
   397b8:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   397bc:	ldr	r1, [r0]
   397c0:	ldr	r0, [r0, #4]
   397c4:	subs	r1, r1, #1
   397c8:	sbc	r0, r0, #0
   397cc:	rsbs	r1, r1, #127	; 0x7f
   397d0:	rscs	r0, r0, #0
   397d4:	str	r1, [sp, #1368]	; 0x558
   397d8:	str	r0, [sp, #1364]	; 0x554
   397dc:	blt	39890 <__assert_fail@plt+0x26cd8>
   397e0:	b	398b4 <__assert_fail@plt+0x26cfc>
   397e4:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   397e8:	ldr	r2, [r0, #-48]	; 0xffffffd0
   397ec:	ldr	r3, [r0, #-44]	; 0xffffffd4
   397f0:	ldr	r1, [r0]
   397f4:	ldr	r0, [r0, #4]
   397f8:	mvn	ip, #127	; 0x7f
   397fc:	mvn	lr, #0
   39800:	str	r0, [sp, #1360]	; 0x550
   39804:	mov	r0, ip
   39808:	str	r1, [sp, #1356]	; 0x54c
   3980c:	mov	r1, lr
   39810:	bl	77780 <__assert_fail@plt+0x64bc8>
   39814:	ldr	r2, [sp, #1356]	; 0x54c
   39818:	subs	r0, r0, r2
   3981c:	ldr	r2, [sp, #1360]	; 0x550
   39820:	sbcs	r1, r1, r2
   39824:	str	r0, [sp, #1352]	; 0x548
   39828:	str	r1, [sp, #1348]	; 0x544
   3982c:	blt	39890 <__assert_fail@plt+0x26cd8>
   39830:	b	398b4 <__assert_fail@plt+0x26cfc>
   39834:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   39838:	ldr	r1, [r0, #-48]	; 0xffffffd0
   3983c:	ldr	r2, [r0, #-44]	; 0xffffffd4
   39840:	ldr	r3, [r0]
   39844:	ldr	r0, [r0, #4]
   39848:	mov	ip, #127	; 0x7f
   3984c:	mov	lr, #0
   39850:	str	r0, [sp, #1344]	; 0x540
   39854:	mov	r0, ip
   39858:	str	r1, [sp, #1340]	; 0x53c
   3985c:	mov	r1, lr
   39860:	str	r2, [sp, #1336]	; 0x538
   39864:	mov	r2, r3
   39868:	ldr	r3, [sp, #1344]	; 0x540
   3986c:	bl	77780 <__assert_fail@plt+0x64bc8>
   39870:	ldr	r2, [sp, #1340]	; 0x53c
   39874:	subs	r0, r0, r2
   39878:	ldr	r2, [sp, #1336]	; 0x538
   3987c:	sbcs	r1, r1, r2
   39880:	str	r0, [sp, #1332]	; 0x534
   39884:	str	r1, [sp, #1328]	; 0x530
   39888:	bge	398b4 <__assert_fail@plt+0x26cfc>
   3988c:	b	39890 <__assert_fail@plt+0x26cd8>
   39890:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   39894:	ldr	r1, [r0, #-48]	; 0xffffffd0
   39898:	ldr	r0, [r0]
   3989c:	mul	r0, r1, r0
   398a0:	sxtb	r0, r0
   398a4:	asr	r1, r0, #31
   398a8:	str	r0, [fp, #-1344]	; 0xfffffac0
   398ac:	str	r1, [fp, #-1340]	; 0xfffffac4
   398b0:	b	3bb84 <__assert_fail@plt+0x28fcc>
   398b4:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   398b8:	ldr	r1, [r0, #-48]	; 0xffffffd0
   398bc:	ldr	r0, [r0]
   398c0:	mul	r0, r1, r0
   398c4:	sxtb	r0, r0
   398c8:	asr	r1, r0, #31
   398cc:	str	r0, [fp, #-1344]	; 0xfffffac0
   398d0:	str	r1, [fp, #-1340]	; 0xfffffac4
   398d4:	b	3bb88 <__assert_fail@plt+0x28fd0>
   398d8:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   398dc:	ldr	r0, [r0, #4]
   398e0:	cmn	r0, #1
   398e4:	bgt	39b0c <__assert_fail@plt+0x26f54>
   398e8:	b	398ec <__assert_fail@plt+0x26d34>
   398ec:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   398f0:	ldr	r0, [r0, #-44]	; 0xffffffd4
   398f4:	cmn	r0, #1
   398f8:	bgt	39a1c <__assert_fail@plt+0x26e64>
   398fc:	b	39900 <__assert_fail@plt+0x26d48>
   39900:	b	39904 <__assert_fail@plt+0x26d4c>
   39904:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   39908:	ldr	r1, [r0, #-48]	; 0xffffffd0
   3990c:	ldr	r2, [r0, #-44]	; 0xffffffd4
   39910:	ldr	r3, [r0]
   39914:	ldr	r0, [r0, #4]
   39918:	mov	ip, #255	; 0xff
   3991c:	mov	lr, #0
   39920:	str	r0, [sp, #1324]	; 0x52c
   39924:	mov	r0, ip
   39928:	str	r1, [sp, #1320]	; 0x528
   3992c:	mov	r1, lr
   39930:	str	r2, [sp, #1316]	; 0x524
   39934:	mov	r2, r3
   39938:	ldr	r3, [sp, #1324]	; 0x52c
   3993c:	bl	77780 <__assert_fail@plt+0x64bc8>
   39940:	ldr	r2, [sp, #1320]	; 0x528
   39944:	subs	r0, r2, r0
   39948:	ldr	r2, [sp, #1316]	; 0x524
   3994c:	sbcs	r1, r2, r1
   39950:	str	r0, [sp, #1312]	; 0x520
   39954:	str	r1, [sp, #1308]	; 0x51c
   39958:	blt	39c5c <__assert_fail@plt+0x270a4>
   3995c:	b	39c80 <__assert_fail@plt+0x270c8>
   39960:	b	39964 <__assert_fail@plt+0x26dac>
   39964:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   39968:	ldr	r1, [r0]
   3996c:	ldr	r0, [r0, #4]
   39970:	eor	r0, r0, #-2147483648	; 0x80000000
   39974:	orr	r0, r1, r0
   39978:	cmp	r0, #0
   3997c:	beq	399a8 <__assert_fail@plt+0x26df0>
   39980:	b	399bc <__assert_fail@plt+0x26e04>
   39984:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   39988:	ldr	r1, [r0]
   3998c:	ldr	r0, [r0, #4]
   39990:	subs	r1, r1, #1
   39994:	sbcs	r0, r0, #0
   39998:	str	r1, [sp, #1304]	; 0x518
   3999c:	str	r0, [sp, #1300]	; 0x514
   399a0:	blt	399bc <__assert_fail@plt+0x26e04>
   399a4:	b	399a8 <__assert_fail@plt+0x26df0>
   399a8:	mov	r0, #0
   399ac:	mov	r1, r0
   399b0:	str	r1, [sp, #1296]	; 0x510
   399b4:	str	r0, [sp, #1292]	; 0x50c
   399b8:	b	399e8 <__assert_fail@plt+0x26e30>
   399bc:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   399c0:	ldr	r1, [r0]
   399c4:	ldr	r0, [r0, #4]
   399c8:	rsbs	r2, r1, #0
   399cc:	rsc	r3, r0, #0
   399d0:	mov	r0, #255	; 0xff
   399d4:	mov	r1, #0
   399d8:	bl	77780 <__assert_fail@plt+0x64bc8>
   399dc:	str	r0, [sp, #1296]	; 0x510
   399e0:	str	r1, [sp, #1292]	; 0x50c
   399e4:	b	399e8 <__assert_fail@plt+0x26e30>
   399e8:	ldr	r0, [sp, #1292]	; 0x50c
   399ec:	ldr	r1, [sp, #1296]	; 0x510
   399f0:	ldr	r2, [fp, #-1288]	; 0xfffffaf8
   399f4:	ldr	r3, [r2, #-48]	; 0xffffffd0
   399f8:	ldr	r2, [r2, #-44]	; 0xffffffd4
   399fc:	mvn	r2, r2
   39a00:	mvn	r3, r3
   39a04:	subs	r1, r3, r1
   39a08:	sbcs	r0, r2, r0
   39a0c:	str	r1, [sp, #1288]	; 0x508
   39a10:	str	r0, [sp, #1284]	; 0x504
   39a14:	bge	39c5c <__assert_fail@plt+0x270a4>
   39a18:	b	39c80 <__assert_fail@plt+0x270c8>
   39a1c:	b	39a20 <__assert_fail@plt+0x26e68>
   39a20:	b	39ab4 <__assert_fail@plt+0x26efc>
   39a24:	b	39ab4 <__assert_fail@plt+0x26efc>
   39a28:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   39a2c:	ldr	r1, [r0]
   39a30:	ldr	r0, [r0, #4]
   39a34:	and	r0, r1, r0
   39a38:	cmn	r0, #1
   39a3c:	bne	39ab4 <__assert_fail@plt+0x26efc>
   39a40:	b	39a44 <__assert_fail@plt+0x26e8c>
   39a44:	b	39a48 <__assert_fail@plt+0x26e90>
   39a48:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   39a4c:	ldr	r1, [r0, #-48]	; 0xffffffd0
   39a50:	ldr	r0, [r0, #-44]	; 0xffffffd4
   39a54:	rsbs	r1, r1, #0
   39a58:	rscs	r0, r0, #0
   39a5c:	str	r1, [sp, #1280]	; 0x500
   39a60:	str	r0, [sp, #1276]	; 0x4fc
   39a64:	blt	39c5c <__assert_fail@plt+0x270a4>
   39a68:	b	39c80 <__assert_fail@plt+0x270c8>
   39a6c:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   39a70:	ldr	r1, [r0, #-48]	; 0xffffffd0
   39a74:	ldr	r0, [r0, #-44]	; 0xffffffd4
   39a78:	subs	r1, r1, #1
   39a7c:	sbcs	r0, r0, #0
   39a80:	str	r1, [sp, #1272]	; 0x4f8
   39a84:	str	r0, [sp, #1268]	; 0x4f4
   39a88:	blt	39c80 <__assert_fail@plt+0x270c8>
   39a8c:	b	39a90 <__assert_fail@plt+0x26ed8>
   39a90:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   39a94:	ldr	r1, [r0, #-48]	; 0xffffffd0
   39a98:	ldr	r0, [r0, #-44]	; 0xffffffd4
   39a9c:	subs	r1, r1, #1
   39aa0:	sbc	r0, r0, #0
   39aa4:	cmn	r0, #1
   39aa8:	str	r1, [sp, #1264]	; 0x4f0
   39aac:	bgt	39c5c <__assert_fail@plt+0x270a4>
   39ab0:	b	39c80 <__assert_fail@plt+0x270c8>
   39ab4:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   39ab8:	ldr	r1, [r0, #-48]	; 0xffffffd0
   39abc:	ldr	r2, [r0, #-44]	; 0xffffffd4
   39ac0:	ldr	r3, [r0]
   39ac4:	ldr	r0, [r0, #4]
   39ac8:	mov	ip, #0
   39acc:	str	r0, [sp, #1260]	; 0x4ec
   39ad0:	mov	r0, ip
   39ad4:	str	r1, [sp, #1256]	; 0x4e8
   39ad8:	mov	r1, ip
   39adc:	str	r2, [sp, #1252]	; 0x4e4
   39ae0:	mov	r2, r3
   39ae4:	ldr	r3, [sp, #1260]	; 0x4ec
   39ae8:	bl	77780 <__assert_fail@plt+0x64bc8>
   39aec:	ldr	r2, [sp, #1256]	; 0x4e8
   39af0:	subs	r0, r0, r2
   39af4:	ldr	r2, [sp, #1252]	; 0x4e4
   39af8:	sbcs	r1, r1, r2
   39afc:	str	r0, [sp, #1248]	; 0x4e0
   39b00:	str	r1, [sp, #1244]	; 0x4dc
   39b04:	blt	39c5c <__assert_fail@plt+0x270a4>
   39b08:	b	39c80 <__assert_fail@plt+0x270c8>
   39b0c:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   39b10:	ldr	r1, [r0]
   39b14:	ldr	r0, [r0, #4]
   39b18:	orr	r0, r1, r0
   39b1c:	cmp	r0, #0
   39b20:	bne	39b2c <__assert_fail@plt+0x26f74>
   39b24:	b	39b28 <__assert_fail@plt+0x26f70>
   39b28:	b	39c80 <__assert_fail@plt+0x270c8>
   39b2c:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   39b30:	ldr	r0, [r0, #-44]	; 0xffffffd4
   39b34:	cmn	r0, #1
   39b38:	bgt	39c00 <__assert_fail@plt+0x27048>
   39b3c:	b	39b40 <__assert_fail@plt+0x26f88>
   39b40:	b	39b44 <__assert_fail@plt+0x26f8c>
   39b44:	b	39bb4 <__assert_fail@plt+0x26ffc>
   39b48:	b	39bb4 <__assert_fail@plt+0x26ffc>
   39b4c:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   39b50:	ldr	r1, [r0, #-48]	; 0xffffffd0
   39b54:	ldr	r0, [r0, #-44]	; 0xffffffd4
   39b58:	and	r0, r1, r0
   39b5c:	cmn	r0, #1
   39b60:	bne	39bb4 <__assert_fail@plt+0x26ffc>
   39b64:	b	39b68 <__assert_fail@plt+0x26fb0>
   39b68:	b	39b6c <__assert_fail@plt+0x26fb4>
   39b6c:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   39b70:	ldr	r1, [r0]
   39b74:	ldr	r0, [r0, #4]
   39b78:	rsbs	r1, r1, #0
   39b7c:	rscs	r0, r0, #0
   39b80:	str	r1, [sp, #1240]	; 0x4d8
   39b84:	str	r0, [sp, #1236]	; 0x4d4
   39b88:	blt	39c5c <__assert_fail@plt+0x270a4>
   39b8c:	b	39c80 <__assert_fail@plt+0x270c8>
   39b90:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   39b94:	ldr	r1, [r0]
   39b98:	ldr	r0, [r0, #4]
   39b9c:	subs	r1, r1, #1
   39ba0:	sbc	r0, r0, #0
   39ba4:	cmn	r0, #1
   39ba8:	str	r1, [sp, #1232]	; 0x4d0
   39bac:	bgt	39c5c <__assert_fail@plt+0x270a4>
   39bb0:	b	39c80 <__assert_fail@plt+0x270c8>
   39bb4:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   39bb8:	ldr	r2, [r0, #-48]	; 0xffffffd0
   39bbc:	ldr	r3, [r0, #-44]	; 0xffffffd4
   39bc0:	ldr	r1, [r0]
   39bc4:	ldr	r0, [r0, #4]
   39bc8:	mov	ip, #0
   39bcc:	str	r0, [sp, #1228]	; 0x4cc
   39bd0:	mov	r0, ip
   39bd4:	str	r1, [sp, #1224]	; 0x4c8
   39bd8:	mov	r1, ip
   39bdc:	bl	77780 <__assert_fail@plt+0x64bc8>
   39be0:	ldr	r2, [sp, #1224]	; 0x4c8
   39be4:	subs	r0, r0, r2
   39be8:	ldr	r2, [sp, #1228]	; 0x4cc
   39bec:	sbcs	r1, r1, r2
   39bf0:	str	r0, [sp, #1220]	; 0x4c4
   39bf4:	str	r1, [sp, #1216]	; 0x4c0
   39bf8:	blt	39c5c <__assert_fail@plt+0x270a4>
   39bfc:	b	39c80 <__assert_fail@plt+0x270c8>
   39c00:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   39c04:	ldr	r1, [r0, #-48]	; 0xffffffd0
   39c08:	ldr	r2, [r0, #-44]	; 0xffffffd4
   39c0c:	ldr	r3, [r0]
   39c10:	ldr	r0, [r0, #4]
   39c14:	mov	ip, #255	; 0xff
   39c18:	mov	lr, #0
   39c1c:	str	r0, [sp, #1212]	; 0x4bc
   39c20:	mov	r0, ip
   39c24:	str	r1, [sp, #1208]	; 0x4b8
   39c28:	mov	r1, lr
   39c2c:	str	r2, [sp, #1204]	; 0x4b4
   39c30:	mov	r2, r3
   39c34:	ldr	r3, [sp, #1212]	; 0x4bc
   39c38:	bl	77780 <__assert_fail@plt+0x64bc8>
   39c3c:	ldr	r2, [sp, #1208]	; 0x4b8
   39c40:	subs	r0, r0, r2
   39c44:	ldr	r2, [sp, #1204]	; 0x4b4
   39c48:	sbcs	r1, r1, r2
   39c4c:	str	r0, [sp, #1200]	; 0x4b0
   39c50:	str	r1, [sp, #1196]	; 0x4ac
   39c54:	bge	39c80 <__assert_fail@plt+0x270c8>
   39c58:	b	39c5c <__assert_fail@plt+0x270a4>
   39c5c:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   39c60:	ldr	r1, [r0, #-48]	; 0xffffffd0
   39c64:	ldr	r0, [r0]
   39c68:	mul	r0, r1, r0
   39c6c:	uxtb	r0, r0
   39c70:	mov	r1, #0
   39c74:	str	r1, [fp, #-1340]	; 0xfffffac4
   39c78:	str	r0, [fp, #-1344]	; 0xfffffac0
   39c7c:	b	3bb84 <__assert_fail@plt+0x28fcc>
   39c80:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   39c84:	ldr	r1, [r0, #-48]	; 0xffffffd0
   39c88:	ldr	r0, [r0]
   39c8c:	mul	r0, r1, r0
   39c90:	uxtb	r0, r0
   39c94:	mov	r1, #0
   39c98:	str	r1, [fp, #-1340]	; 0xfffffac4
   39c9c:	str	r0, [fp, #-1344]	; 0xfffffac0
   39ca0:	b	3bb88 <__assert_fail@plt+0x28fd0>
   39ca4:	b	3a47c <__assert_fail@plt+0x278c4>
   39ca8:	b	39cac <__assert_fail@plt+0x270f4>
   39cac:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   39cb0:	ldr	r0, [r0, #4]
   39cb4:	cmn	r0, #1
   39cb8:	bgt	39efc <__assert_fail@plt+0x27344>
   39cbc:	b	39cc0 <__assert_fail@plt+0x27108>
   39cc0:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   39cc4:	ldr	r0, [r0, #-44]	; 0xffffffd4
   39cc8:	cmn	r0, #1
   39ccc:	bgt	39df0 <__assert_fail@plt+0x27238>
   39cd0:	b	39cd4 <__assert_fail@plt+0x2711c>
   39cd4:	b	39cd8 <__assert_fail@plt+0x27120>
   39cd8:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   39cdc:	ldr	r1, [r0, #-48]	; 0xffffffd0
   39ce0:	ldr	r2, [r0, #-44]	; 0xffffffd4
   39ce4:	ldr	r3, [r0]
   39ce8:	ldr	r0, [r0, #4]
   39cec:	movw	ip, #32767	; 0x7fff
   39cf0:	mov	lr, #0
   39cf4:	str	r0, [sp, #1192]	; 0x4a8
   39cf8:	mov	r0, ip
   39cfc:	str	r1, [sp, #1188]	; 0x4a4
   39d00:	mov	r1, lr
   39d04:	str	r2, [sp, #1184]	; 0x4a0
   39d08:	mov	r2, r3
   39d0c:	ldr	r3, [sp, #1192]	; 0x4a8
   39d10:	bl	77780 <__assert_fail@plt+0x64bc8>
   39d14:	ldr	r2, [sp, #1188]	; 0x4a4
   39d18:	subs	r0, r2, r0
   39d1c:	ldr	r2, [sp, #1184]	; 0x4a0
   39d20:	sbcs	r1, r2, r1
   39d24:	str	r0, [sp, #1180]	; 0x49c
   39d28:	str	r1, [sp, #1176]	; 0x498
   39d2c:	blt	3a068 <__assert_fail@plt+0x274b0>
   39d30:	b	3a08c <__assert_fail@plt+0x274d4>
   39d34:	b	39d38 <__assert_fail@plt+0x27180>
   39d38:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   39d3c:	ldr	r1, [r0]
   39d40:	ldr	r0, [r0, #4]
   39d44:	eor	r0, r0, #-2147483648	; 0x80000000
   39d48:	orr	r0, r1, r0
   39d4c:	cmp	r0, #0
   39d50:	beq	39d7c <__assert_fail@plt+0x271c4>
   39d54:	b	39d90 <__assert_fail@plt+0x271d8>
   39d58:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   39d5c:	ldr	r1, [r0]
   39d60:	ldr	r0, [r0, #4]
   39d64:	subs	r1, r1, #1
   39d68:	sbcs	r0, r0, #0
   39d6c:	str	r1, [sp, #1172]	; 0x494
   39d70:	str	r0, [sp, #1168]	; 0x490
   39d74:	blt	39d90 <__assert_fail@plt+0x271d8>
   39d78:	b	39d7c <__assert_fail@plt+0x271c4>
   39d7c:	mov	r0, #0
   39d80:	mov	r1, r0
   39d84:	str	r1, [sp, #1164]	; 0x48c
   39d88:	str	r0, [sp, #1160]	; 0x488
   39d8c:	b	39dbc <__assert_fail@plt+0x27204>
   39d90:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   39d94:	ldr	r1, [r0]
   39d98:	ldr	r0, [r0, #4]
   39d9c:	rsbs	r2, r1, #0
   39da0:	rsc	r3, r0, #0
   39da4:	movw	r0, #32767	; 0x7fff
   39da8:	mov	r1, #0
   39dac:	bl	77780 <__assert_fail@plt+0x64bc8>
   39db0:	str	r0, [sp, #1164]	; 0x48c
   39db4:	str	r1, [sp, #1160]	; 0x488
   39db8:	b	39dbc <__assert_fail@plt+0x27204>
   39dbc:	ldr	r0, [sp, #1160]	; 0x488
   39dc0:	ldr	r1, [sp, #1164]	; 0x48c
   39dc4:	ldr	r2, [fp, #-1288]	; 0xfffffaf8
   39dc8:	ldr	r3, [r2, #-48]	; 0xffffffd0
   39dcc:	ldr	r2, [r2, #-44]	; 0xffffffd4
   39dd0:	mvn	r2, r2
   39dd4:	mvn	r3, r3
   39dd8:	subs	r1, r3, r1
   39ddc:	sbcs	r0, r2, r0
   39de0:	str	r1, [sp, #1156]	; 0x484
   39de4:	str	r0, [sp, #1152]	; 0x480
   39de8:	bge	3a068 <__assert_fail@plt+0x274b0>
   39dec:	b	3a08c <__assert_fail@plt+0x274d4>
   39df0:	b	39df4 <__assert_fail@plt+0x2723c>
   39df4:	b	39e9c <__assert_fail@plt+0x272e4>
   39df8:	b	39e9c <__assert_fail@plt+0x272e4>
   39dfc:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   39e00:	ldr	r1, [r0]
   39e04:	ldr	r0, [r0, #4]
   39e08:	and	r0, r1, r0
   39e0c:	cmn	r0, #1
   39e10:	bne	39e9c <__assert_fail@plt+0x272e4>
   39e14:	b	39e18 <__assert_fail@plt+0x27260>
   39e18:	b	39e1c <__assert_fail@plt+0x27264>
   39e1c:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   39e20:	ldr	r1, [r0, #-48]	; 0xffffffd0
   39e24:	ldr	r0, [r0, #-44]	; 0xffffffd4
   39e28:	subs	r1, r1, #32768	; 0x8000
   39e2c:	sbc	r0, r0, #0
   39e30:	rsbs	r1, r1, #0
   39e34:	rscs	r0, r0, #0
   39e38:	str	r1, [sp, #1148]	; 0x47c
   39e3c:	str	r0, [sp, #1144]	; 0x478
   39e40:	blt	3a068 <__assert_fail@plt+0x274b0>
   39e44:	b	3a08c <__assert_fail@plt+0x274d4>
   39e48:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   39e4c:	ldr	r1, [r0, #-48]	; 0xffffffd0
   39e50:	ldr	r0, [r0, #-44]	; 0xffffffd4
   39e54:	subs	r1, r1, #1
   39e58:	sbcs	r0, r0, #0
   39e5c:	str	r1, [sp, #1140]	; 0x474
   39e60:	str	r0, [sp, #1136]	; 0x470
   39e64:	blt	3a08c <__assert_fail@plt+0x274d4>
   39e68:	b	39e6c <__assert_fail@plt+0x272b4>
   39e6c:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   39e70:	ldr	r1, [r0, #-48]	; 0xffffffd0
   39e74:	ldr	r0, [r0, #-44]	; 0xffffffd4
   39e78:	subs	r1, r1, #1
   39e7c:	sbc	r0, r0, #0
   39e80:	movw	r2, #32767	; 0x7fff
   39e84:	subs	r1, r2, r1
   39e88:	rscs	r0, r0, #0
   39e8c:	str	r1, [sp, #1132]	; 0x46c
   39e90:	str	r0, [sp, #1128]	; 0x468
   39e94:	blt	3a068 <__assert_fail@plt+0x274b0>
   39e98:	b	3a08c <__assert_fail@plt+0x274d4>
   39e9c:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   39ea0:	ldr	r1, [r0, #-48]	; 0xffffffd0
   39ea4:	ldr	r2, [r0, #-44]	; 0xffffffd4
   39ea8:	ldr	r3, [r0]
   39eac:	ldr	r0, [r0, #4]
   39eb0:	movw	ip, #32768	; 0x8000
   39eb4:	movt	ip, #65535	; 0xffff
   39eb8:	mvn	lr, #0
   39ebc:	str	r0, [sp, #1124]	; 0x464
   39ec0:	mov	r0, ip
   39ec4:	str	r1, [sp, #1120]	; 0x460
   39ec8:	mov	r1, lr
   39ecc:	str	r2, [sp, #1116]	; 0x45c
   39ed0:	mov	r2, r3
   39ed4:	ldr	r3, [sp, #1124]	; 0x464
   39ed8:	bl	77780 <__assert_fail@plt+0x64bc8>
   39edc:	ldr	r2, [sp, #1120]	; 0x460
   39ee0:	subs	r0, r0, r2
   39ee4:	ldr	r2, [sp, #1116]	; 0x45c
   39ee8:	sbcs	r1, r1, r2
   39eec:	str	r0, [sp, #1112]	; 0x458
   39ef0:	str	r1, [sp, #1108]	; 0x454
   39ef4:	blt	3a068 <__assert_fail@plt+0x274b0>
   39ef8:	b	3a08c <__assert_fail@plt+0x274d4>
   39efc:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   39f00:	ldr	r1, [r0]
   39f04:	ldr	r0, [r0, #4]
   39f08:	orr	r0, r1, r0
   39f0c:	cmp	r0, #0
   39f10:	bne	39f1c <__assert_fail@plt+0x27364>
   39f14:	b	39f18 <__assert_fail@plt+0x27360>
   39f18:	b	3a08c <__assert_fail@plt+0x274d4>
   39f1c:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   39f20:	ldr	r0, [r0, #-44]	; 0xffffffd4
   39f24:	cmn	r0, #1
   39f28:	bgt	3a00c <__assert_fail@plt+0x27454>
   39f2c:	b	39f30 <__assert_fail@plt+0x27378>
   39f30:	b	39f34 <__assert_fail@plt+0x2737c>
   39f34:	b	39fb8 <__assert_fail@plt+0x27400>
   39f38:	b	39fb8 <__assert_fail@plt+0x27400>
   39f3c:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   39f40:	ldr	r1, [r0, #-48]	; 0xffffffd0
   39f44:	ldr	r0, [r0, #-44]	; 0xffffffd4
   39f48:	and	r0, r1, r0
   39f4c:	cmn	r0, #1
   39f50:	bne	39fb8 <__assert_fail@plt+0x27400>
   39f54:	b	39f58 <__assert_fail@plt+0x273a0>
   39f58:	b	39f5c <__assert_fail@plt+0x273a4>
   39f5c:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   39f60:	ldr	r1, [r0]
   39f64:	ldr	r0, [r0, #4]
   39f68:	subs	r1, r1, #32768	; 0x8000
   39f6c:	sbc	r0, r0, #0
   39f70:	rsbs	r1, r1, #0
   39f74:	rscs	r0, r0, #0
   39f78:	str	r1, [sp, #1104]	; 0x450
   39f7c:	str	r0, [sp, #1100]	; 0x44c
   39f80:	blt	3a068 <__assert_fail@plt+0x274b0>
   39f84:	b	3a08c <__assert_fail@plt+0x274d4>
   39f88:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   39f8c:	ldr	r1, [r0]
   39f90:	ldr	r0, [r0, #4]
   39f94:	subs	r1, r1, #1
   39f98:	sbc	r0, r0, #0
   39f9c:	movw	r2, #32767	; 0x7fff
   39fa0:	subs	r1, r2, r1
   39fa4:	rscs	r0, r0, #0
   39fa8:	str	r1, [sp, #1096]	; 0x448
   39fac:	str	r0, [sp, #1092]	; 0x444
   39fb0:	blt	3a068 <__assert_fail@plt+0x274b0>
   39fb4:	b	3a08c <__assert_fail@plt+0x274d4>
   39fb8:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   39fbc:	ldr	r2, [r0, #-48]	; 0xffffffd0
   39fc0:	ldr	r3, [r0, #-44]	; 0xffffffd4
   39fc4:	ldr	r1, [r0]
   39fc8:	ldr	r0, [r0, #4]
   39fcc:	movw	ip, #32768	; 0x8000
   39fd0:	movt	ip, #65535	; 0xffff
   39fd4:	mvn	lr, #0
   39fd8:	str	r0, [sp, #1088]	; 0x440
   39fdc:	mov	r0, ip
   39fe0:	str	r1, [sp, #1084]	; 0x43c
   39fe4:	mov	r1, lr
   39fe8:	bl	77780 <__assert_fail@plt+0x64bc8>
   39fec:	ldr	r2, [sp, #1084]	; 0x43c
   39ff0:	subs	r0, r0, r2
   39ff4:	ldr	r2, [sp, #1088]	; 0x440
   39ff8:	sbcs	r1, r1, r2
   39ffc:	str	r0, [sp, #1080]	; 0x438
   3a000:	str	r1, [sp, #1076]	; 0x434
   3a004:	blt	3a068 <__assert_fail@plt+0x274b0>
   3a008:	b	3a08c <__assert_fail@plt+0x274d4>
   3a00c:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3a010:	ldr	r1, [r0, #-48]	; 0xffffffd0
   3a014:	ldr	r2, [r0, #-44]	; 0xffffffd4
   3a018:	ldr	r3, [r0]
   3a01c:	ldr	r0, [r0, #4]
   3a020:	movw	ip, #32767	; 0x7fff
   3a024:	mov	lr, #0
   3a028:	str	r0, [sp, #1072]	; 0x430
   3a02c:	mov	r0, ip
   3a030:	str	r1, [sp, #1068]	; 0x42c
   3a034:	mov	r1, lr
   3a038:	str	r2, [sp, #1064]	; 0x428
   3a03c:	mov	r2, r3
   3a040:	ldr	r3, [sp, #1072]	; 0x430
   3a044:	bl	77780 <__assert_fail@plt+0x64bc8>
   3a048:	ldr	r2, [sp, #1068]	; 0x42c
   3a04c:	subs	r0, r0, r2
   3a050:	ldr	r2, [sp, #1064]	; 0x428
   3a054:	sbcs	r1, r1, r2
   3a058:	str	r0, [sp, #1060]	; 0x424
   3a05c:	str	r1, [sp, #1056]	; 0x420
   3a060:	bge	3a08c <__assert_fail@plt+0x274d4>
   3a064:	b	3a068 <__assert_fail@plt+0x274b0>
   3a068:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3a06c:	ldr	r1, [r0, #-48]	; 0xffffffd0
   3a070:	ldr	r0, [r0]
   3a074:	mul	r0, r1, r0
   3a078:	sxth	r0, r0
   3a07c:	asr	r1, r0, #31
   3a080:	str	r0, [fp, #-1344]	; 0xfffffac0
   3a084:	str	r1, [fp, #-1340]	; 0xfffffac4
   3a088:	b	3bb84 <__assert_fail@plt+0x28fcc>
   3a08c:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3a090:	ldr	r1, [r0, #-48]	; 0xffffffd0
   3a094:	ldr	r0, [r0]
   3a098:	mul	r0, r1, r0
   3a09c:	sxth	r0, r0
   3a0a0:	asr	r1, r0, #31
   3a0a4:	str	r0, [fp, #-1344]	; 0xfffffac0
   3a0a8:	str	r1, [fp, #-1340]	; 0xfffffac4
   3a0ac:	b	3bb88 <__assert_fail@plt+0x28fd0>
   3a0b0:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3a0b4:	ldr	r0, [r0, #4]
   3a0b8:	cmn	r0, #1
   3a0bc:	bgt	3a2e4 <__assert_fail@plt+0x2772c>
   3a0c0:	b	3a0c4 <__assert_fail@plt+0x2750c>
   3a0c4:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3a0c8:	ldr	r0, [r0, #-44]	; 0xffffffd4
   3a0cc:	cmn	r0, #1
   3a0d0:	bgt	3a1f4 <__assert_fail@plt+0x2763c>
   3a0d4:	b	3a0d8 <__assert_fail@plt+0x27520>
   3a0d8:	b	3a0dc <__assert_fail@plt+0x27524>
   3a0dc:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3a0e0:	ldr	r1, [r0, #-48]	; 0xffffffd0
   3a0e4:	ldr	r2, [r0, #-44]	; 0xffffffd4
   3a0e8:	ldr	r3, [r0]
   3a0ec:	ldr	r0, [r0, #4]
   3a0f0:	movw	ip, #65535	; 0xffff
   3a0f4:	mov	lr, #0
   3a0f8:	str	r0, [sp, #1052]	; 0x41c
   3a0fc:	mov	r0, ip
   3a100:	str	r1, [sp, #1048]	; 0x418
   3a104:	mov	r1, lr
   3a108:	str	r2, [sp, #1044]	; 0x414
   3a10c:	mov	r2, r3
   3a110:	ldr	r3, [sp, #1052]	; 0x41c
   3a114:	bl	77780 <__assert_fail@plt+0x64bc8>
   3a118:	ldr	r2, [sp, #1048]	; 0x418
   3a11c:	subs	r0, r2, r0
   3a120:	ldr	r2, [sp, #1044]	; 0x414
   3a124:	sbcs	r1, r2, r1
   3a128:	str	r0, [sp, #1040]	; 0x410
   3a12c:	str	r1, [sp, #1036]	; 0x40c
   3a130:	blt	3a434 <__assert_fail@plt+0x2787c>
   3a134:	b	3a458 <__assert_fail@plt+0x278a0>
   3a138:	b	3a13c <__assert_fail@plt+0x27584>
   3a13c:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3a140:	ldr	r1, [r0]
   3a144:	ldr	r0, [r0, #4]
   3a148:	eor	r0, r0, #-2147483648	; 0x80000000
   3a14c:	orr	r0, r1, r0
   3a150:	cmp	r0, #0
   3a154:	beq	3a180 <__assert_fail@plt+0x275c8>
   3a158:	b	3a194 <__assert_fail@plt+0x275dc>
   3a15c:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3a160:	ldr	r1, [r0]
   3a164:	ldr	r0, [r0, #4]
   3a168:	subs	r1, r1, #1
   3a16c:	sbcs	r0, r0, #0
   3a170:	str	r1, [sp, #1032]	; 0x408
   3a174:	str	r0, [sp, #1028]	; 0x404
   3a178:	blt	3a194 <__assert_fail@plt+0x275dc>
   3a17c:	b	3a180 <__assert_fail@plt+0x275c8>
   3a180:	mov	r0, #0
   3a184:	mov	r1, r0
   3a188:	str	r1, [sp, #1024]	; 0x400
   3a18c:	str	r0, [sp, #1020]	; 0x3fc
   3a190:	b	3a1c0 <__assert_fail@plt+0x27608>
   3a194:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3a198:	ldr	r1, [r0]
   3a19c:	ldr	r0, [r0, #4]
   3a1a0:	rsbs	r2, r1, #0
   3a1a4:	rsc	r3, r0, #0
   3a1a8:	movw	r0, #65535	; 0xffff
   3a1ac:	mov	r1, #0
   3a1b0:	bl	77780 <__assert_fail@plt+0x64bc8>
   3a1b4:	str	r0, [sp, #1024]	; 0x400
   3a1b8:	str	r1, [sp, #1020]	; 0x3fc
   3a1bc:	b	3a1c0 <__assert_fail@plt+0x27608>
   3a1c0:	ldr	r0, [sp, #1020]	; 0x3fc
   3a1c4:	ldr	r1, [sp, #1024]	; 0x400
   3a1c8:	ldr	r2, [fp, #-1288]	; 0xfffffaf8
   3a1cc:	ldr	r3, [r2, #-48]	; 0xffffffd0
   3a1d0:	ldr	r2, [r2, #-44]	; 0xffffffd4
   3a1d4:	mvn	r2, r2
   3a1d8:	mvn	r3, r3
   3a1dc:	subs	r1, r3, r1
   3a1e0:	sbcs	r0, r2, r0
   3a1e4:	str	r1, [sp, #1016]	; 0x3f8
   3a1e8:	str	r0, [sp, #1012]	; 0x3f4
   3a1ec:	bge	3a434 <__assert_fail@plt+0x2787c>
   3a1f0:	b	3a458 <__assert_fail@plt+0x278a0>
   3a1f4:	b	3a1f8 <__assert_fail@plt+0x27640>
   3a1f8:	b	3a28c <__assert_fail@plt+0x276d4>
   3a1fc:	b	3a28c <__assert_fail@plt+0x276d4>
   3a200:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3a204:	ldr	r1, [r0]
   3a208:	ldr	r0, [r0, #4]
   3a20c:	and	r0, r1, r0
   3a210:	cmn	r0, #1
   3a214:	bne	3a28c <__assert_fail@plt+0x276d4>
   3a218:	b	3a21c <__assert_fail@plt+0x27664>
   3a21c:	b	3a220 <__assert_fail@plt+0x27668>
   3a220:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3a224:	ldr	r1, [r0, #-48]	; 0xffffffd0
   3a228:	ldr	r0, [r0, #-44]	; 0xffffffd4
   3a22c:	rsbs	r1, r1, #0
   3a230:	rscs	r0, r0, #0
   3a234:	str	r1, [sp, #1008]	; 0x3f0
   3a238:	str	r0, [sp, #1004]	; 0x3ec
   3a23c:	blt	3a434 <__assert_fail@plt+0x2787c>
   3a240:	b	3a458 <__assert_fail@plt+0x278a0>
   3a244:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3a248:	ldr	r1, [r0, #-48]	; 0xffffffd0
   3a24c:	ldr	r0, [r0, #-44]	; 0xffffffd4
   3a250:	subs	r1, r1, #1
   3a254:	sbcs	r0, r0, #0
   3a258:	str	r1, [sp, #1000]	; 0x3e8
   3a25c:	str	r0, [sp, #996]	; 0x3e4
   3a260:	blt	3a458 <__assert_fail@plt+0x278a0>
   3a264:	b	3a268 <__assert_fail@plt+0x276b0>
   3a268:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3a26c:	ldr	r1, [r0, #-48]	; 0xffffffd0
   3a270:	ldr	r0, [r0, #-44]	; 0xffffffd4
   3a274:	subs	r1, r1, #1
   3a278:	sbc	r0, r0, #0
   3a27c:	cmn	r0, #1
   3a280:	str	r1, [sp, #992]	; 0x3e0
   3a284:	bgt	3a434 <__assert_fail@plt+0x2787c>
   3a288:	b	3a458 <__assert_fail@plt+0x278a0>
   3a28c:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3a290:	ldr	r1, [r0, #-48]	; 0xffffffd0
   3a294:	ldr	r2, [r0, #-44]	; 0xffffffd4
   3a298:	ldr	r3, [r0]
   3a29c:	ldr	r0, [r0, #4]
   3a2a0:	mov	ip, #0
   3a2a4:	str	r0, [sp, #988]	; 0x3dc
   3a2a8:	mov	r0, ip
   3a2ac:	str	r1, [sp, #984]	; 0x3d8
   3a2b0:	mov	r1, ip
   3a2b4:	str	r2, [sp, #980]	; 0x3d4
   3a2b8:	mov	r2, r3
   3a2bc:	ldr	r3, [sp, #988]	; 0x3dc
   3a2c0:	bl	77780 <__assert_fail@plt+0x64bc8>
   3a2c4:	ldr	r2, [sp, #984]	; 0x3d8
   3a2c8:	subs	r0, r0, r2
   3a2cc:	ldr	r2, [sp, #980]	; 0x3d4
   3a2d0:	sbcs	r1, r1, r2
   3a2d4:	str	r0, [sp, #976]	; 0x3d0
   3a2d8:	str	r1, [sp, #972]	; 0x3cc
   3a2dc:	blt	3a434 <__assert_fail@plt+0x2787c>
   3a2e0:	b	3a458 <__assert_fail@plt+0x278a0>
   3a2e4:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3a2e8:	ldr	r1, [r0]
   3a2ec:	ldr	r0, [r0, #4]
   3a2f0:	orr	r0, r1, r0
   3a2f4:	cmp	r0, #0
   3a2f8:	bne	3a304 <__assert_fail@plt+0x2774c>
   3a2fc:	b	3a300 <__assert_fail@plt+0x27748>
   3a300:	b	3a458 <__assert_fail@plt+0x278a0>
   3a304:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3a308:	ldr	r0, [r0, #-44]	; 0xffffffd4
   3a30c:	cmn	r0, #1
   3a310:	bgt	3a3d8 <__assert_fail@plt+0x27820>
   3a314:	b	3a318 <__assert_fail@plt+0x27760>
   3a318:	b	3a31c <__assert_fail@plt+0x27764>
   3a31c:	b	3a38c <__assert_fail@plt+0x277d4>
   3a320:	b	3a38c <__assert_fail@plt+0x277d4>
   3a324:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3a328:	ldr	r1, [r0, #-48]	; 0xffffffd0
   3a32c:	ldr	r0, [r0, #-44]	; 0xffffffd4
   3a330:	and	r0, r1, r0
   3a334:	cmn	r0, #1
   3a338:	bne	3a38c <__assert_fail@plt+0x277d4>
   3a33c:	b	3a340 <__assert_fail@plt+0x27788>
   3a340:	b	3a344 <__assert_fail@plt+0x2778c>
   3a344:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3a348:	ldr	r1, [r0]
   3a34c:	ldr	r0, [r0, #4]
   3a350:	rsbs	r1, r1, #0
   3a354:	rscs	r0, r0, #0
   3a358:	str	r1, [sp, #968]	; 0x3c8
   3a35c:	str	r0, [sp, #964]	; 0x3c4
   3a360:	blt	3a434 <__assert_fail@plt+0x2787c>
   3a364:	b	3a458 <__assert_fail@plt+0x278a0>
   3a368:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3a36c:	ldr	r1, [r0]
   3a370:	ldr	r0, [r0, #4]
   3a374:	subs	r1, r1, #1
   3a378:	sbc	r0, r0, #0
   3a37c:	cmn	r0, #1
   3a380:	str	r1, [sp, #960]	; 0x3c0
   3a384:	bgt	3a434 <__assert_fail@plt+0x2787c>
   3a388:	b	3a458 <__assert_fail@plt+0x278a0>
   3a38c:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3a390:	ldr	r2, [r0, #-48]	; 0xffffffd0
   3a394:	ldr	r3, [r0, #-44]	; 0xffffffd4
   3a398:	ldr	r1, [r0]
   3a39c:	ldr	r0, [r0, #4]
   3a3a0:	mov	ip, #0
   3a3a4:	str	r0, [sp, #956]	; 0x3bc
   3a3a8:	mov	r0, ip
   3a3ac:	str	r1, [sp, #952]	; 0x3b8
   3a3b0:	mov	r1, ip
   3a3b4:	bl	77780 <__assert_fail@plt+0x64bc8>
   3a3b8:	ldr	r2, [sp, #952]	; 0x3b8
   3a3bc:	subs	r0, r0, r2
   3a3c0:	ldr	r2, [sp, #956]	; 0x3bc
   3a3c4:	sbcs	r1, r1, r2
   3a3c8:	str	r0, [sp, #948]	; 0x3b4
   3a3cc:	str	r1, [sp, #944]	; 0x3b0
   3a3d0:	blt	3a434 <__assert_fail@plt+0x2787c>
   3a3d4:	b	3a458 <__assert_fail@plt+0x278a0>
   3a3d8:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3a3dc:	ldr	r1, [r0, #-48]	; 0xffffffd0
   3a3e0:	ldr	r2, [r0, #-44]	; 0xffffffd4
   3a3e4:	ldr	r3, [r0]
   3a3e8:	ldr	r0, [r0, #4]
   3a3ec:	movw	ip, #65535	; 0xffff
   3a3f0:	mov	lr, #0
   3a3f4:	str	r0, [sp, #940]	; 0x3ac
   3a3f8:	mov	r0, ip
   3a3fc:	str	r1, [sp, #936]	; 0x3a8
   3a400:	mov	r1, lr
   3a404:	str	r2, [sp, #932]	; 0x3a4
   3a408:	mov	r2, r3
   3a40c:	ldr	r3, [sp, #940]	; 0x3ac
   3a410:	bl	77780 <__assert_fail@plt+0x64bc8>
   3a414:	ldr	r2, [sp, #936]	; 0x3a8
   3a418:	subs	r0, r0, r2
   3a41c:	ldr	r2, [sp, #932]	; 0x3a4
   3a420:	sbcs	r1, r1, r2
   3a424:	str	r0, [sp, #928]	; 0x3a0
   3a428:	str	r1, [sp, #924]	; 0x39c
   3a42c:	bge	3a458 <__assert_fail@plt+0x278a0>
   3a430:	b	3a434 <__assert_fail@plt+0x2787c>
   3a434:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3a438:	ldr	r1, [r0, #-48]	; 0xffffffd0
   3a43c:	ldr	r0, [r0]
   3a440:	mul	r0, r1, r0
   3a444:	uxth	r0, r0
   3a448:	mov	r1, #0
   3a44c:	str	r1, [fp, #-1340]	; 0xfffffac4
   3a450:	str	r0, [fp, #-1344]	; 0xfffffac0
   3a454:	b	3bb84 <__assert_fail@plt+0x28fcc>
   3a458:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3a45c:	ldr	r1, [r0, #-48]	; 0xffffffd0
   3a460:	ldr	r0, [r0]
   3a464:	mul	r0, r1, r0
   3a468:	uxth	r0, r0
   3a46c:	mov	r1, #0
   3a470:	str	r1, [fp, #-1340]	; 0xfffffac4
   3a474:	str	r0, [fp, #-1344]	; 0xfffffac0
   3a478:	b	3bb88 <__assert_fail@plt+0x28fd0>
   3a47c:	b	3ac3c <__assert_fail@plt+0x28084>
   3a480:	b	3a484 <__assert_fail@plt+0x278cc>
   3a484:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3a488:	ldr	r0, [r0, #4]
   3a48c:	cmn	r0, #1
   3a490:	bgt	3a6d0 <__assert_fail@plt+0x27b18>
   3a494:	b	3a498 <__assert_fail@plt+0x278e0>
   3a498:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3a49c:	ldr	r0, [r0, #-44]	; 0xffffffd4
   3a4a0:	cmn	r0, #1
   3a4a4:	bgt	3a5c8 <__assert_fail@plt+0x27a10>
   3a4a8:	b	3a4ac <__assert_fail@plt+0x278f4>
   3a4ac:	b	3a4b0 <__assert_fail@plt+0x278f8>
   3a4b0:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3a4b4:	ldr	r1, [r0, #-48]	; 0xffffffd0
   3a4b8:	ldr	r2, [r0, #-44]	; 0xffffffd4
   3a4bc:	ldr	r3, [r0]
   3a4c0:	ldr	r0, [r0, #4]
   3a4c4:	mvn	ip, #-2147483648	; 0x80000000
   3a4c8:	mov	lr, #0
   3a4cc:	str	r0, [sp, #920]	; 0x398
   3a4d0:	mov	r0, ip
   3a4d4:	str	r1, [sp, #916]	; 0x394
   3a4d8:	mov	r1, lr
   3a4dc:	str	r2, [sp, #912]	; 0x390
   3a4e0:	mov	r2, r3
   3a4e4:	ldr	r3, [sp, #920]	; 0x398
   3a4e8:	bl	77780 <__assert_fail@plt+0x64bc8>
   3a4ec:	ldr	r2, [sp, #916]	; 0x394
   3a4f0:	subs	r0, r2, r0
   3a4f4:	ldr	r2, [sp, #912]	; 0x390
   3a4f8:	sbcs	r1, r2, r1
   3a4fc:	str	r0, [sp, #908]	; 0x38c
   3a500:	str	r1, [sp, #904]	; 0x388
   3a504:	blt	3a838 <__assert_fail@plt+0x27c80>
   3a508:	b	3a858 <__assert_fail@plt+0x27ca0>
   3a50c:	b	3a510 <__assert_fail@plt+0x27958>
   3a510:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3a514:	ldr	r1, [r0]
   3a518:	ldr	r0, [r0, #4]
   3a51c:	eor	r0, r0, #-2147483648	; 0x80000000
   3a520:	orr	r0, r1, r0
   3a524:	cmp	r0, #0
   3a528:	beq	3a554 <__assert_fail@plt+0x2799c>
   3a52c:	b	3a568 <__assert_fail@plt+0x279b0>
   3a530:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3a534:	ldr	r1, [r0]
   3a538:	ldr	r0, [r0, #4]
   3a53c:	subs	r1, r1, #1
   3a540:	sbcs	r0, r0, #0
   3a544:	str	r1, [sp, #900]	; 0x384
   3a548:	str	r0, [sp, #896]	; 0x380
   3a54c:	blt	3a568 <__assert_fail@plt+0x279b0>
   3a550:	b	3a554 <__assert_fail@plt+0x2799c>
   3a554:	mov	r0, #0
   3a558:	mov	r1, r0
   3a55c:	str	r1, [sp, #892]	; 0x37c
   3a560:	str	r0, [sp, #888]	; 0x378
   3a564:	b	3a594 <__assert_fail@plt+0x279dc>
   3a568:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3a56c:	ldr	r1, [r0]
   3a570:	ldr	r0, [r0, #4]
   3a574:	rsbs	r2, r1, #0
   3a578:	rsc	r3, r0, #0
   3a57c:	mvn	r0, #-2147483648	; 0x80000000
   3a580:	mov	r1, #0
   3a584:	bl	77780 <__assert_fail@plt+0x64bc8>
   3a588:	str	r0, [sp, #892]	; 0x37c
   3a58c:	str	r1, [sp, #888]	; 0x378
   3a590:	b	3a594 <__assert_fail@plt+0x279dc>
   3a594:	ldr	r0, [sp, #888]	; 0x378
   3a598:	ldr	r1, [sp, #892]	; 0x37c
   3a59c:	ldr	r2, [fp, #-1288]	; 0xfffffaf8
   3a5a0:	ldr	r3, [r2, #-48]	; 0xffffffd0
   3a5a4:	ldr	r2, [r2, #-44]	; 0xffffffd4
   3a5a8:	mvn	r2, r2
   3a5ac:	mvn	r3, r3
   3a5b0:	subs	r1, r3, r1
   3a5b4:	sbcs	r0, r2, r0
   3a5b8:	str	r1, [sp, #884]	; 0x374
   3a5bc:	str	r0, [sp, #880]	; 0x370
   3a5c0:	bge	3a838 <__assert_fail@plt+0x27c80>
   3a5c4:	b	3a858 <__assert_fail@plt+0x27ca0>
   3a5c8:	b	3a5cc <__assert_fail@plt+0x27a14>
   3a5cc:	b	3a674 <__assert_fail@plt+0x27abc>
   3a5d0:	b	3a674 <__assert_fail@plt+0x27abc>
   3a5d4:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3a5d8:	ldr	r1, [r0]
   3a5dc:	ldr	r0, [r0, #4]
   3a5e0:	and	r0, r1, r0
   3a5e4:	cmn	r0, #1
   3a5e8:	bne	3a674 <__assert_fail@plt+0x27abc>
   3a5ec:	b	3a5f0 <__assert_fail@plt+0x27a38>
   3a5f0:	b	3a5f4 <__assert_fail@plt+0x27a3c>
   3a5f4:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3a5f8:	ldr	r1, [r0, #-48]	; 0xffffffd0
   3a5fc:	ldr	r0, [r0, #-44]	; 0xffffffd4
   3a600:	adds	r1, r1, #-2147483648	; 0x80000000
   3a604:	sbc	r0, r0, #0
   3a608:	rsbs	r1, r1, #0
   3a60c:	rscs	r0, r0, #0
   3a610:	str	r1, [sp, #876]	; 0x36c
   3a614:	str	r0, [sp, #872]	; 0x368
   3a618:	blt	3a838 <__assert_fail@plt+0x27c80>
   3a61c:	b	3a858 <__assert_fail@plt+0x27ca0>
   3a620:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3a624:	ldr	r1, [r0, #-48]	; 0xffffffd0
   3a628:	ldr	r0, [r0, #-44]	; 0xffffffd4
   3a62c:	subs	r1, r1, #1
   3a630:	sbcs	r0, r0, #0
   3a634:	str	r1, [sp, #868]	; 0x364
   3a638:	str	r0, [sp, #864]	; 0x360
   3a63c:	blt	3a858 <__assert_fail@plt+0x27ca0>
   3a640:	b	3a644 <__assert_fail@plt+0x27a8c>
   3a644:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3a648:	ldr	r1, [r0, #-48]	; 0xffffffd0
   3a64c:	ldr	r0, [r0, #-44]	; 0xffffffd4
   3a650:	subs	r1, r1, #1
   3a654:	sbc	r0, r0, #0
   3a658:	mvn	r2, #-2147483648	; 0x80000000
   3a65c:	subs	r1, r2, r1
   3a660:	rscs	r0, r0, #0
   3a664:	str	r1, [sp, #860]	; 0x35c
   3a668:	str	r0, [sp, #856]	; 0x358
   3a66c:	blt	3a838 <__assert_fail@plt+0x27c80>
   3a670:	b	3a858 <__assert_fail@plt+0x27ca0>
   3a674:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3a678:	ldr	r1, [r0, #-48]	; 0xffffffd0
   3a67c:	ldr	r2, [r0, #-44]	; 0xffffffd4
   3a680:	ldr	r3, [r0]
   3a684:	ldr	r0, [r0, #4]
   3a688:	mov	ip, #-2147483648	; 0x80000000
   3a68c:	mvn	lr, #0
   3a690:	str	r0, [sp, #852]	; 0x354
   3a694:	mov	r0, ip
   3a698:	str	r1, [sp, #848]	; 0x350
   3a69c:	mov	r1, lr
   3a6a0:	str	r2, [sp, #844]	; 0x34c
   3a6a4:	mov	r2, r3
   3a6a8:	ldr	r3, [sp, #852]	; 0x354
   3a6ac:	bl	77780 <__assert_fail@plt+0x64bc8>
   3a6b0:	ldr	r2, [sp, #848]	; 0x350
   3a6b4:	subs	r0, r0, r2
   3a6b8:	ldr	r2, [sp, #844]	; 0x34c
   3a6bc:	sbcs	r1, r1, r2
   3a6c0:	str	r0, [sp, #840]	; 0x348
   3a6c4:	str	r1, [sp, #836]	; 0x344
   3a6c8:	blt	3a838 <__assert_fail@plt+0x27c80>
   3a6cc:	b	3a858 <__assert_fail@plt+0x27ca0>
   3a6d0:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3a6d4:	ldr	r1, [r0]
   3a6d8:	ldr	r0, [r0, #4]
   3a6dc:	orr	r0, r1, r0
   3a6e0:	cmp	r0, #0
   3a6e4:	bne	3a6f0 <__assert_fail@plt+0x27b38>
   3a6e8:	b	3a6ec <__assert_fail@plt+0x27b34>
   3a6ec:	b	3a858 <__assert_fail@plt+0x27ca0>
   3a6f0:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3a6f4:	ldr	r0, [r0, #-44]	; 0xffffffd4
   3a6f8:	cmn	r0, #1
   3a6fc:	bgt	3a7dc <__assert_fail@plt+0x27c24>
   3a700:	b	3a704 <__assert_fail@plt+0x27b4c>
   3a704:	b	3a708 <__assert_fail@plt+0x27b50>
   3a708:	b	3a78c <__assert_fail@plt+0x27bd4>
   3a70c:	b	3a78c <__assert_fail@plt+0x27bd4>
   3a710:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3a714:	ldr	r1, [r0, #-48]	; 0xffffffd0
   3a718:	ldr	r0, [r0, #-44]	; 0xffffffd4
   3a71c:	and	r0, r1, r0
   3a720:	cmn	r0, #1
   3a724:	bne	3a78c <__assert_fail@plt+0x27bd4>
   3a728:	b	3a72c <__assert_fail@plt+0x27b74>
   3a72c:	b	3a730 <__assert_fail@plt+0x27b78>
   3a730:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3a734:	ldr	r1, [r0]
   3a738:	ldr	r0, [r0, #4]
   3a73c:	adds	r1, r1, #-2147483648	; 0x80000000
   3a740:	sbc	r0, r0, #0
   3a744:	rsbs	r1, r1, #0
   3a748:	rscs	r0, r0, #0
   3a74c:	str	r1, [sp, #832]	; 0x340
   3a750:	str	r0, [sp, #828]	; 0x33c
   3a754:	blt	3a838 <__assert_fail@plt+0x27c80>
   3a758:	b	3a858 <__assert_fail@plt+0x27ca0>
   3a75c:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3a760:	ldr	r1, [r0]
   3a764:	ldr	r0, [r0, #4]
   3a768:	subs	r1, r1, #1
   3a76c:	sbc	r0, r0, #0
   3a770:	mvn	r2, #-2147483648	; 0x80000000
   3a774:	subs	r1, r2, r1
   3a778:	rscs	r0, r0, #0
   3a77c:	str	r1, [sp, #824]	; 0x338
   3a780:	str	r0, [sp, #820]	; 0x334
   3a784:	blt	3a838 <__assert_fail@plt+0x27c80>
   3a788:	b	3a858 <__assert_fail@plt+0x27ca0>
   3a78c:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3a790:	ldr	r2, [r0, #-48]	; 0xffffffd0
   3a794:	ldr	r3, [r0, #-44]	; 0xffffffd4
   3a798:	ldr	r1, [r0]
   3a79c:	ldr	r0, [r0, #4]
   3a7a0:	mov	ip, #-2147483648	; 0x80000000
   3a7a4:	mvn	lr, #0
   3a7a8:	str	r0, [sp, #816]	; 0x330
   3a7ac:	mov	r0, ip
   3a7b0:	str	r1, [sp, #812]	; 0x32c
   3a7b4:	mov	r1, lr
   3a7b8:	bl	77780 <__assert_fail@plt+0x64bc8>
   3a7bc:	ldr	r2, [sp, #812]	; 0x32c
   3a7c0:	subs	r0, r0, r2
   3a7c4:	ldr	r2, [sp, #816]	; 0x330
   3a7c8:	sbcs	r1, r1, r2
   3a7cc:	str	r0, [sp, #808]	; 0x328
   3a7d0:	str	r1, [sp, #804]	; 0x324
   3a7d4:	blt	3a838 <__assert_fail@plt+0x27c80>
   3a7d8:	b	3a858 <__assert_fail@plt+0x27ca0>
   3a7dc:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3a7e0:	ldr	r1, [r0, #-48]	; 0xffffffd0
   3a7e4:	ldr	r2, [r0, #-44]	; 0xffffffd4
   3a7e8:	ldr	r3, [r0]
   3a7ec:	ldr	r0, [r0, #4]
   3a7f0:	mvn	ip, #-2147483648	; 0x80000000
   3a7f4:	mov	lr, #0
   3a7f8:	str	r0, [sp, #800]	; 0x320
   3a7fc:	mov	r0, ip
   3a800:	str	r1, [sp, #796]	; 0x31c
   3a804:	mov	r1, lr
   3a808:	str	r2, [sp, #792]	; 0x318
   3a80c:	mov	r2, r3
   3a810:	ldr	r3, [sp, #800]	; 0x320
   3a814:	bl	77780 <__assert_fail@plt+0x64bc8>
   3a818:	ldr	r2, [sp, #796]	; 0x31c
   3a81c:	subs	r0, r0, r2
   3a820:	ldr	r2, [sp, #792]	; 0x318
   3a824:	sbcs	r1, r1, r2
   3a828:	str	r0, [sp, #788]	; 0x314
   3a82c:	str	r1, [sp, #784]	; 0x310
   3a830:	bge	3a858 <__assert_fail@plt+0x27ca0>
   3a834:	b	3a838 <__assert_fail@plt+0x27c80>
   3a838:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3a83c:	ldr	r1, [r0, #-48]	; 0xffffffd0
   3a840:	ldr	r0, [r0]
   3a844:	mul	r0, r1, r0
   3a848:	asr	r1, r0, #31
   3a84c:	str	r0, [fp, #-1344]	; 0xfffffac0
   3a850:	str	r1, [fp, #-1340]	; 0xfffffac4
   3a854:	b	3bb84 <__assert_fail@plt+0x28fcc>
   3a858:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3a85c:	ldr	r1, [r0, #-48]	; 0xffffffd0
   3a860:	ldr	r0, [r0]
   3a864:	mul	r0, r1, r0
   3a868:	asr	r1, r0, #31
   3a86c:	str	r0, [fp, #-1344]	; 0xfffffac0
   3a870:	str	r1, [fp, #-1340]	; 0xfffffac4
   3a874:	b	3bb88 <__assert_fail@plt+0x28fd0>
   3a878:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3a87c:	ldr	r0, [r0, #4]
   3a880:	cmn	r0, #1
   3a884:	bgt	3aaac <__assert_fail@plt+0x27ef4>
   3a888:	b	3a88c <__assert_fail@plt+0x27cd4>
   3a88c:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3a890:	ldr	r0, [r0, #-44]	; 0xffffffd4
   3a894:	cmn	r0, #1
   3a898:	bgt	3a9bc <__assert_fail@plt+0x27e04>
   3a89c:	b	3a8a0 <__assert_fail@plt+0x27ce8>
   3a8a0:	b	3a8a4 <__assert_fail@plt+0x27cec>
   3a8a4:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3a8a8:	ldr	r1, [r0, #-48]	; 0xffffffd0
   3a8ac:	ldr	r2, [r0, #-44]	; 0xffffffd4
   3a8b0:	ldr	r3, [r0]
   3a8b4:	ldr	r0, [r0, #4]
   3a8b8:	mvn	ip, #0
   3a8bc:	mov	lr, #0
   3a8c0:	str	r0, [sp, #780]	; 0x30c
   3a8c4:	mov	r0, ip
   3a8c8:	str	r1, [sp, #776]	; 0x308
   3a8cc:	mov	r1, lr
   3a8d0:	str	r2, [sp, #772]	; 0x304
   3a8d4:	mov	r2, r3
   3a8d8:	ldr	r3, [sp, #780]	; 0x30c
   3a8dc:	bl	77780 <__assert_fail@plt+0x64bc8>
   3a8e0:	ldr	r2, [sp, #776]	; 0x308
   3a8e4:	subs	r0, r2, r0
   3a8e8:	ldr	r2, [sp, #772]	; 0x304
   3a8ec:	sbcs	r1, r2, r1
   3a8f0:	str	r0, [sp, #768]	; 0x300
   3a8f4:	str	r1, [sp, #764]	; 0x2fc
   3a8f8:	blt	3abfc <__assert_fail@plt+0x28044>
   3a8fc:	b	3ac1c <__assert_fail@plt+0x28064>
   3a900:	b	3a904 <__assert_fail@plt+0x27d4c>
   3a904:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3a908:	ldr	r1, [r0]
   3a90c:	ldr	r0, [r0, #4]
   3a910:	eor	r0, r0, #-2147483648	; 0x80000000
   3a914:	orr	r0, r1, r0
   3a918:	cmp	r0, #0
   3a91c:	beq	3a948 <__assert_fail@plt+0x27d90>
   3a920:	b	3a95c <__assert_fail@plt+0x27da4>
   3a924:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3a928:	ldr	r1, [r0]
   3a92c:	ldr	r0, [r0, #4]
   3a930:	subs	r1, r1, #1
   3a934:	sbcs	r0, r0, #0
   3a938:	str	r1, [sp, #760]	; 0x2f8
   3a93c:	str	r0, [sp, #756]	; 0x2f4
   3a940:	blt	3a95c <__assert_fail@plt+0x27da4>
   3a944:	b	3a948 <__assert_fail@plt+0x27d90>
   3a948:	mov	r0, #0
   3a94c:	mov	r1, r0
   3a950:	str	r1, [sp, #752]	; 0x2f0
   3a954:	str	r0, [sp, #748]	; 0x2ec
   3a958:	b	3a988 <__assert_fail@plt+0x27dd0>
   3a95c:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3a960:	ldr	r1, [r0]
   3a964:	ldr	r0, [r0, #4]
   3a968:	rsbs	r2, r1, #0
   3a96c:	rsc	r3, r0, #0
   3a970:	mvn	r0, #0
   3a974:	mov	r1, #0
   3a978:	bl	77780 <__assert_fail@plt+0x64bc8>
   3a97c:	str	r0, [sp, #752]	; 0x2f0
   3a980:	str	r1, [sp, #748]	; 0x2ec
   3a984:	b	3a988 <__assert_fail@plt+0x27dd0>
   3a988:	ldr	r0, [sp, #748]	; 0x2ec
   3a98c:	ldr	r1, [sp, #752]	; 0x2f0
   3a990:	ldr	r2, [fp, #-1288]	; 0xfffffaf8
   3a994:	ldr	r3, [r2, #-48]	; 0xffffffd0
   3a998:	ldr	r2, [r2, #-44]	; 0xffffffd4
   3a99c:	mvn	r2, r2
   3a9a0:	mvn	r3, r3
   3a9a4:	subs	r1, r3, r1
   3a9a8:	sbcs	r0, r2, r0
   3a9ac:	str	r1, [sp, #744]	; 0x2e8
   3a9b0:	str	r0, [sp, #740]	; 0x2e4
   3a9b4:	bge	3abfc <__assert_fail@plt+0x28044>
   3a9b8:	b	3ac1c <__assert_fail@plt+0x28064>
   3a9bc:	b	3a9c0 <__assert_fail@plt+0x27e08>
   3a9c0:	b	3aa54 <__assert_fail@plt+0x27e9c>
   3a9c4:	b	3aa54 <__assert_fail@plt+0x27e9c>
   3a9c8:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3a9cc:	ldr	r1, [r0]
   3a9d0:	ldr	r0, [r0, #4]
   3a9d4:	and	r0, r1, r0
   3a9d8:	cmn	r0, #1
   3a9dc:	bne	3aa54 <__assert_fail@plt+0x27e9c>
   3a9e0:	b	3a9e4 <__assert_fail@plt+0x27e2c>
   3a9e4:	b	3a9e8 <__assert_fail@plt+0x27e30>
   3a9e8:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3a9ec:	ldr	r1, [r0, #-48]	; 0xffffffd0
   3a9f0:	ldr	r0, [r0, #-44]	; 0xffffffd4
   3a9f4:	rsbs	r1, r1, #0
   3a9f8:	rscs	r0, r0, #0
   3a9fc:	str	r1, [sp, #736]	; 0x2e0
   3aa00:	str	r0, [sp, #732]	; 0x2dc
   3aa04:	blt	3abfc <__assert_fail@plt+0x28044>
   3aa08:	b	3ac1c <__assert_fail@plt+0x28064>
   3aa0c:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3aa10:	ldr	r1, [r0, #-48]	; 0xffffffd0
   3aa14:	ldr	r0, [r0, #-44]	; 0xffffffd4
   3aa18:	subs	r1, r1, #1
   3aa1c:	sbcs	r0, r0, #0
   3aa20:	str	r1, [sp, #728]	; 0x2d8
   3aa24:	str	r0, [sp, #724]	; 0x2d4
   3aa28:	blt	3ac1c <__assert_fail@plt+0x28064>
   3aa2c:	b	3aa30 <__assert_fail@plt+0x27e78>
   3aa30:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3aa34:	ldr	r1, [r0, #-48]	; 0xffffffd0
   3aa38:	ldr	r0, [r0, #-44]	; 0xffffffd4
   3aa3c:	subs	r1, r1, #1
   3aa40:	sbc	r0, r0, #0
   3aa44:	cmn	r0, #1
   3aa48:	str	r1, [sp, #720]	; 0x2d0
   3aa4c:	bgt	3abfc <__assert_fail@plt+0x28044>
   3aa50:	b	3ac1c <__assert_fail@plt+0x28064>
   3aa54:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3aa58:	ldr	r1, [r0, #-48]	; 0xffffffd0
   3aa5c:	ldr	r2, [r0, #-44]	; 0xffffffd4
   3aa60:	ldr	r3, [r0]
   3aa64:	ldr	r0, [r0, #4]
   3aa68:	mov	ip, #0
   3aa6c:	str	r0, [sp, #716]	; 0x2cc
   3aa70:	mov	r0, ip
   3aa74:	str	r1, [sp, #712]	; 0x2c8
   3aa78:	mov	r1, ip
   3aa7c:	str	r2, [sp, #708]	; 0x2c4
   3aa80:	mov	r2, r3
   3aa84:	ldr	r3, [sp, #716]	; 0x2cc
   3aa88:	bl	77780 <__assert_fail@plt+0x64bc8>
   3aa8c:	ldr	r2, [sp, #712]	; 0x2c8
   3aa90:	subs	r0, r0, r2
   3aa94:	ldr	r2, [sp, #708]	; 0x2c4
   3aa98:	sbcs	r1, r1, r2
   3aa9c:	str	r0, [sp, #704]	; 0x2c0
   3aaa0:	str	r1, [sp, #700]	; 0x2bc
   3aaa4:	blt	3abfc <__assert_fail@plt+0x28044>
   3aaa8:	b	3ac1c <__assert_fail@plt+0x28064>
   3aaac:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3aab0:	ldr	r1, [r0]
   3aab4:	ldr	r0, [r0, #4]
   3aab8:	orr	r0, r1, r0
   3aabc:	cmp	r0, #0
   3aac0:	bne	3aacc <__assert_fail@plt+0x27f14>
   3aac4:	b	3aac8 <__assert_fail@plt+0x27f10>
   3aac8:	b	3ac1c <__assert_fail@plt+0x28064>
   3aacc:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3aad0:	ldr	r0, [r0, #-44]	; 0xffffffd4
   3aad4:	cmn	r0, #1
   3aad8:	bgt	3aba0 <__assert_fail@plt+0x27fe8>
   3aadc:	b	3aae0 <__assert_fail@plt+0x27f28>
   3aae0:	b	3aae4 <__assert_fail@plt+0x27f2c>
   3aae4:	b	3ab54 <__assert_fail@plt+0x27f9c>
   3aae8:	b	3ab54 <__assert_fail@plt+0x27f9c>
   3aaec:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3aaf0:	ldr	r1, [r0, #-48]	; 0xffffffd0
   3aaf4:	ldr	r0, [r0, #-44]	; 0xffffffd4
   3aaf8:	and	r0, r1, r0
   3aafc:	cmn	r0, #1
   3ab00:	bne	3ab54 <__assert_fail@plt+0x27f9c>
   3ab04:	b	3ab08 <__assert_fail@plt+0x27f50>
   3ab08:	b	3ab0c <__assert_fail@plt+0x27f54>
   3ab0c:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3ab10:	ldr	r1, [r0]
   3ab14:	ldr	r0, [r0, #4]
   3ab18:	rsbs	r1, r1, #0
   3ab1c:	rscs	r0, r0, #0
   3ab20:	str	r1, [sp, #696]	; 0x2b8
   3ab24:	str	r0, [sp, #692]	; 0x2b4
   3ab28:	blt	3abfc <__assert_fail@plt+0x28044>
   3ab2c:	b	3ac1c <__assert_fail@plt+0x28064>
   3ab30:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3ab34:	ldr	r1, [r0]
   3ab38:	ldr	r0, [r0, #4]
   3ab3c:	subs	r1, r1, #1
   3ab40:	sbc	r0, r0, #0
   3ab44:	cmn	r0, #1
   3ab48:	str	r1, [sp, #688]	; 0x2b0
   3ab4c:	bgt	3abfc <__assert_fail@plt+0x28044>
   3ab50:	b	3ac1c <__assert_fail@plt+0x28064>
   3ab54:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3ab58:	ldr	r2, [r0, #-48]	; 0xffffffd0
   3ab5c:	ldr	r3, [r0, #-44]	; 0xffffffd4
   3ab60:	ldr	r1, [r0]
   3ab64:	ldr	r0, [r0, #4]
   3ab68:	mov	ip, #0
   3ab6c:	str	r0, [sp, #684]	; 0x2ac
   3ab70:	mov	r0, ip
   3ab74:	str	r1, [sp, #680]	; 0x2a8
   3ab78:	mov	r1, ip
   3ab7c:	bl	77780 <__assert_fail@plt+0x64bc8>
   3ab80:	ldr	r2, [sp, #680]	; 0x2a8
   3ab84:	subs	r0, r0, r2
   3ab88:	ldr	r2, [sp, #684]	; 0x2ac
   3ab8c:	sbcs	r1, r1, r2
   3ab90:	str	r0, [sp, #676]	; 0x2a4
   3ab94:	str	r1, [sp, #672]	; 0x2a0
   3ab98:	blt	3abfc <__assert_fail@plt+0x28044>
   3ab9c:	b	3ac1c <__assert_fail@plt+0x28064>
   3aba0:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3aba4:	ldr	r1, [r0, #-48]	; 0xffffffd0
   3aba8:	ldr	r2, [r0, #-44]	; 0xffffffd4
   3abac:	ldr	r3, [r0]
   3abb0:	ldr	r0, [r0, #4]
   3abb4:	mvn	ip, #0
   3abb8:	mov	lr, #0
   3abbc:	str	r0, [sp, #668]	; 0x29c
   3abc0:	mov	r0, ip
   3abc4:	str	r1, [sp, #664]	; 0x298
   3abc8:	mov	r1, lr
   3abcc:	str	r2, [sp, #660]	; 0x294
   3abd0:	mov	r2, r3
   3abd4:	ldr	r3, [sp, #668]	; 0x29c
   3abd8:	bl	77780 <__assert_fail@plt+0x64bc8>
   3abdc:	ldr	r2, [sp, #664]	; 0x298
   3abe0:	subs	r0, r0, r2
   3abe4:	ldr	r2, [sp, #660]	; 0x294
   3abe8:	sbcs	r1, r1, r2
   3abec:	str	r0, [sp, #656]	; 0x290
   3abf0:	str	r1, [sp, #652]	; 0x28c
   3abf4:	bge	3ac1c <__assert_fail@plt+0x28064>
   3abf8:	b	3abfc <__assert_fail@plt+0x28044>
   3abfc:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3ac00:	ldr	r1, [r0, #-48]	; 0xffffffd0
   3ac04:	ldr	r0, [r0]
   3ac08:	mul	r0, r1, r0
   3ac0c:	mov	r1, #0
   3ac10:	str	r1, [fp, #-1340]	; 0xfffffac4
   3ac14:	str	r0, [fp, #-1344]	; 0xfffffac0
   3ac18:	b	3bb84 <__assert_fail@plt+0x28fcc>
   3ac1c:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3ac20:	ldr	r1, [r0, #-48]	; 0xffffffd0
   3ac24:	ldr	r0, [r0]
   3ac28:	mul	r0, r1, r0
   3ac2c:	mov	r1, #0
   3ac30:	str	r1, [fp, #-1340]	; 0xfffffac4
   3ac34:	str	r0, [fp, #-1344]	; 0xfffffac0
   3ac38:	b	3bb88 <__assert_fail@plt+0x28fd0>
   3ac3c:	b	3b3fc <__assert_fail@plt+0x28844>
   3ac40:	b	3ac44 <__assert_fail@plt+0x2808c>
   3ac44:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3ac48:	ldr	r0, [r0, #4]
   3ac4c:	cmn	r0, #1
   3ac50:	bgt	3ae90 <__assert_fail@plt+0x282d8>
   3ac54:	b	3ac58 <__assert_fail@plt+0x280a0>
   3ac58:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3ac5c:	ldr	r0, [r0, #-44]	; 0xffffffd4
   3ac60:	cmn	r0, #1
   3ac64:	bgt	3ad88 <__assert_fail@plt+0x281d0>
   3ac68:	b	3ac6c <__assert_fail@plt+0x280b4>
   3ac6c:	b	3ac70 <__assert_fail@plt+0x280b8>
   3ac70:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3ac74:	ldr	r1, [r0, #-48]	; 0xffffffd0
   3ac78:	ldr	r2, [r0, #-44]	; 0xffffffd4
   3ac7c:	ldr	r3, [r0]
   3ac80:	ldr	r0, [r0, #4]
   3ac84:	mvn	ip, #-2147483648	; 0x80000000
   3ac88:	mov	lr, #0
   3ac8c:	str	r0, [sp, #648]	; 0x288
   3ac90:	mov	r0, ip
   3ac94:	str	r1, [sp, #644]	; 0x284
   3ac98:	mov	r1, lr
   3ac9c:	str	r2, [sp, #640]	; 0x280
   3aca0:	mov	r2, r3
   3aca4:	ldr	r3, [sp, #648]	; 0x288
   3aca8:	bl	77780 <__assert_fail@plt+0x64bc8>
   3acac:	ldr	r2, [sp, #644]	; 0x284
   3acb0:	subs	r0, r2, r0
   3acb4:	ldr	r2, [sp, #640]	; 0x280
   3acb8:	sbcs	r1, r2, r1
   3acbc:	str	r0, [sp, #636]	; 0x27c
   3acc0:	str	r1, [sp, #632]	; 0x278
   3acc4:	blt	3aff8 <__assert_fail@plt+0x28440>
   3acc8:	b	3b018 <__assert_fail@plt+0x28460>
   3accc:	b	3acd0 <__assert_fail@plt+0x28118>
   3acd0:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3acd4:	ldr	r1, [r0]
   3acd8:	ldr	r0, [r0, #4]
   3acdc:	eor	r0, r0, #-2147483648	; 0x80000000
   3ace0:	orr	r0, r1, r0
   3ace4:	cmp	r0, #0
   3ace8:	beq	3ad14 <__assert_fail@plt+0x2815c>
   3acec:	b	3ad28 <__assert_fail@plt+0x28170>
   3acf0:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3acf4:	ldr	r1, [r0]
   3acf8:	ldr	r0, [r0, #4]
   3acfc:	subs	r1, r1, #1
   3ad00:	sbcs	r0, r0, #0
   3ad04:	str	r1, [sp, #628]	; 0x274
   3ad08:	str	r0, [sp, #624]	; 0x270
   3ad0c:	blt	3ad28 <__assert_fail@plt+0x28170>
   3ad10:	b	3ad14 <__assert_fail@plt+0x2815c>
   3ad14:	mov	r0, #0
   3ad18:	mov	r1, r0
   3ad1c:	str	r1, [sp, #620]	; 0x26c
   3ad20:	str	r0, [sp, #616]	; 0x268
   3ad24:	b	3ad54 <__assert_fail@plt+0x2819c>
   3ad28:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3ad2c:	ldr	r1, [r0]
   3ad30:	ldr	r0, [r0, #4]
   3ad34:	rsbs	r2, r1, #0
   3ad38:	rsc	r3, r0, #0
   3ad3c:	mvn	r0, #-2147483648	; 0x80000000
   3ad40:	mov	r1, #0
   3ad44:	bl	77780 <__assert_fail@plt+0x64bc8>
   3ad48:	str	r0, [sp, #620]	; 0x26c
   3ad4c:	str	r1, [sp, #616]	; 0x268
   3ad50:	b	3ad54 <__assert_fail@plt+0x2819c>
   3ad54:	ldr	r0, [sp, #616]	; 0x268
   3ad58:	ldr	r1, [sp, #620]	; 0x26c
   3ad5c:	ldr	r2, [fp, #-1288]	; 0xfffffaf8
   3ad60:	ldr	r3, [r2, #-48]	; 0xffffffd0
   3ad64:	ldr	r2, [r2, #-44]	; 0xffffffd4
   3ad68:	mvn	r2, r2
   3ad6c:	mvn	r3, r3
   3ad70:	subs	r1, r3, r1
   3ad74:	sbcs	r0, r2, r0
   3ad78:	str	r1, [sp, #612]	; 0x264
   3ad7c:	str	r0, [sp, #608]	; 0x260
   3ad80:	bge	3aff8 <__assert_fail@plt+0x28440>
   3ad84:	b	3b018 <__assert_fail@plt+0x28460>
   3ad88:	b	3ad8c <__assert_fail@plt+0x281d4>
   3ad8c:	b	3ae34 <__assert_fail@plt+0x2827c>
   3ad90:	b	3ae34 <__assert_fail@plt+0x2827c>
   3ad94:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3ad98:	ldr	r1, [r0]
   3ad9c:	ldr	r0, [r0, #4]
   3ada0:	and	r0, r1, r0
   3ada4:	cmn	r0, #1
   3ada8:	bne	3ae34 <__assert_fail@plt+0x2827c>
   3adac:	b	3adb0 <__assert_fail@plt+0x281f8>
   3adb0:	b	3adb4 <__assert_fail@plt+0x281fc>
   3adb4:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3adb8:	ldr	r1, [r0, #-48]	; 0xffffffd0
   3adbc:	ldr	r0, [r0, #-44]	; 0xffffffd4
   3adc0:	adds	r1, r1, #-2147483648	; 0x80000000
   3adc4:	sbc	r0, r0, #0
   3adc8:	rsbs	r1, r1, #0
   3adcc:	rscs	r0, r0, #0
   3add0:	str	r1, [sp, #604]	; 0x25c
   3add4:	str	r0, [sp, #600]	; 0x258
   3add8:	blt	3aff8 <__assert_fail@plt+0x28440>
   3addc:	b	3b018 <__assert_fail@plt+0x28460>
   3ade0:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3ade4:	ldr	r1, [r0, #-48]	; 0xffffffd0
   3ade8:	ldr	r0, [r0, #-44]	; 0xffffffd4
   3adec:	subs	r1, r1, #1
   3adf0:	sbcs	r0, r0, #0
   3adf4:	str	r1, [sp, #596]	; 0x254
   3adf8:	str	r0, [sp, #592]	; 0x250
   3adfc:	blt	3b018 <__assert_fail@plt+0x28460>
   3ae00:	b	3ae04 <__assert_fail@plt+0x2824c>
   3ae04:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3ae08:	ldr	r1, [r0, #-48]	; 0xffffffd0
   3ae0c:	ldr	r0, [r0, #-44]	; 0xffffffd4
   3ae10:	subs	r1, r1, #1
   3ae14:	sbc	r0, r0, #0
   3ae18:	mvn	r2, #-2147483648	; 0x80000000
   3ae1c:	subs	r1, r2, r1
   3ae20:	rscs	r0, r0, #0
   3ae24:	str	r1, [sp, #588]	; 0x24c
   3ae28:	str	r0, [sp, #584]	; 0x248
   3ae2c:	blt	3aff8 <__assert_fail@plt+0x28440>
   3ae30:	b	3b018 <__assert_fail@plt+0x28460>
   3ae34:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3ae38:	ldr	r1, [r0, #-48]	; 0xffffffd0
   3ae3c:	ldr	r2, [r0, #-44]	; 0xffffffd4
   3ae40:	ldr	r3, [r0]
   3ae44:	ldr	r0, [r0, #4]
   3ae48:	mov	ip, #-2147483648	; 0x80000000
   3ae4c:	mvn	lr, #0
   3ae50:	str	r0, [sp, #580]	; 0x244
   3ae54:	mov	r0, ip
   3ae58:	str	r1, [sp, #576]	; 0x240
   3ae5c:	mov	r1, lr
   3ae60:	str	r2, [sp, #572]	; 0x23c
   3ae64:	mov	r2, r3
   3ae68:	ldr	r3, [sp, #580]	; 0x244
   3ae6c:	bl	77780 <__assert_fail@plt+0x64bc8>
   3ae70:	ldr	r2, [sp, #576]	; 0x240
   3ae74:	subs	r0, r0, r2
   3ae78:	ldr	r2, [sp, #572]	; 0x23c
   3ae7c:	sbcs	r1, r1, r2
   3ae80:	str	r0, [sp, #568]	; 0x238
   3ae84:	str	r1, [sp, #564]	; 0x234
   3ae88:	blt	3aff8 <__assert_fail@plt+0x28440>
   3ae8c:	b	3b018 <__assert_fail@plt+0x28460>
   3ae90:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3ae94:	ldr	r1, [r0]
   3ae98:	ldr	r0, [r0, #4]
   3ae9c:	orr	r0, r1, r0
   3aea0:	cmp	r0, #0
   3aea4:	bne	3aeb0 <__assert_fail@plt+0x282f8>
   3aea8:	b	3aeac <__assert_fail@plt+0x282f4>
   3aeac:	b	3b018 <__assert_fail@plt+0x28460>
   3aeb0:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3aeb4:	ldr	r0, [r0, #-44]	; 0xffffffd4
   3aeb8:	cmn	r0, #1
   3aebc:	bgt	3af9c <__assert_fail@plt+0x283e4>
   3aec0:	b	3aec4 <__assert_fail@plt+0x2830c>
   3aec4:	b	3aec8 <__assert_fail@plt+0x28310>
   3aec8:	b	3af4c <__assert_fail@plt+0x28394>
   3aecc:	b	3af4c <__assert_fail@plt+0x28394>
   3aed0:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3aed4:	ldr	r1, [r0, #-48]	; 0xffffffd0
   3aed8:	ldr	r0, [r0, #-44]	; 0xffffffd4
   3aedc:	and	r0, r1, r0
   3aee0:	cmn	r0, #1
   3aee4:	bne	3af4c <__assert_fail@plt+0x28394>
   3aee8:	b	3aeec <__assert_fail@plt+0x28334>
   3aeec:	b	3aef0 <__assert_fail@plt+0x28338>
   3aef0:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3aef4:	ldr	r1, [r0]
   3aef8:	ldr	r0, [r0, #4]
   3aefc:	adds	r1, r1, #-2147483648	; 0x80000000
   3af00:	sbc	r0, r0, #0
   3af04:	rsbs	r1, r1, #0
   3af08:	rscs	r0, r0, #0
   3af0c:	str	r1, [sp, #560]	; 0x230
   3af10:	str	r0, [sp, #556]	; 0x22c
   3af14:	blt	3aff8 <__assert_fail@plt+0x28440>
   3af18:	b	3b018 <__assert_fail@plt+0x28460>
   3af1c:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3af20:	ldr	r1, [r0]
   3af24:	ldr	r0, [r0, #4]
   3af28:	subs	r1, r1, #1
   3af2c:	sbc	r0, r0, #0
   3af30:	mvn	r2, #-2147483648	; 0x80000000
   3af34:	subs	r1, r2, r1
   3af38:	rscs	r0, r0, #0
   3af3c:	str	r1, [sp, #552]	; 0x228
   3af40:	str	r0, [sp, #548]	; 0x224
   3af44:	blt	3aff8 <__assert_fail@plt+0x28440>
   3af48:	b	3b018 <__assert_fail@plt+0x28460>
   3af4c:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3af50:	ldr	r2, [r0, #-48]	; 0xffffffd0
   3af54:	ldr	r3, [r0, #-44]	; 0xffffffd4
   3af58:	ldr	r1, [r0]
   3af5c:	ldr	r0, [r0, #4]
   3af60:	mov	ip, #-2147483648	; 0x80000000
   3af64:	mvn	lr, #0
   3af68:	str	r0, [sp, #544]	; 0x220
   3af6c:	mov	r0, ip
   3af70:	str	r1, [sp, #540]	; 0x21c
   3af74:	mov	r1, lr
   3af78:	bl	77780 <__assert_fail@plt+0x64bc8>
   3af7c:	ldr	r2, [sp, #540]	; 0x21c
   3af80:	subs	r0, r0, r2
   3af84:	ldr	r2, [sp, #544]	; 0x220
   3af88:	sbcs	r1, r1, r2
   3af8c:	str	r0, [sp, #536]	; 0x218
   3af90:	str	r1, [sp, #532]	; 0x214
   3af94:	blt	3aff8 <__assert_fail@plt+0x28440>
   3af98:	b	3b018 <__assert_fail@plt+0x28460>
   3af9c:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3afa0:	ldr	r1, [r0, #-48]	; 0xffffffd0
   3afa4:	ldr	r2, [r0, #-44]	; 0xffffffd4
   3afa8:	ldr	r3, [r0]
   3afac:	ldr	r0, [r0, #4]
   3afb0:	mvn	ip, #-2147483648	; 0x80000000
   3afb4:	mov	lr, #0
   3afb8:	str	r0, [sp, #528]	; 0x210
   3afbc:	mov	r0, ip
   3afc0:	str	r1, [sp, #524]	; 0x20c
   3afc4:	mov	r1, lr
   3afc8:	str	r2, [sp, #520]	; 0x208
   3afcc:	mov	r2, r3
   3afd0:	ldr	r3, [sp, #528]	; 0x210
   3afd4:	bl	77780 <__assert_fail@plt+0x64bc8>
   3afd8:	ldr	r2, [sp, #524]	; 0x20c
   3afdc:	subs	r0, r0, r2
   3afe0:	ldr	r2, [sp, #520]	; 0x208
   3afe4:	sbcs	r1, r1, r2
   3afe8:	str	r0, [sp, #516]	; 0x204
   3afec:	str	r1, [sp, #512]	; 0x200
   3aff0:	bge	3b018 <__assert_fail@plt+0x28460>
   3aff4:	b	3aff8 <__assert_fail@plt+0x28440>
   3aff8:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3affc:	ldr	r1, [r0, #-48]	; 0xffffffd0
   3b000:	ldr	r0, [r0]
   3b004:	mul	r0, r1, r0
   3b008:	asr	r1, r0, #31
   3b00c:	str	r0, [fp, #-1344]	; 0xfffffac0
   3b010:	str	r1, [fp, #-1340]	; 0xfffffac4
   3b014:	b	3bb84 <__assert_fail@plt+0x28fcc>
   3b018:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3b01c:	ldr	r1, [r0, #-48]	; 0xffffffd0
   3b020:	ldr	r0, [r0]
   3b024:	mul	r0, r1, r0
   3b028:	asr	r1, r0, #31
   3b02c:	str	r0, [fp, #-1344]	; 0xfffffac0
   3b030:	str	r1, [fp, #-1340]	; 0xfffffac4
   3b034:	b	3bb88 <__assert_fail@plt+0x28fd0>
   3b038:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3b03c:	ldr	r0, [r0, #4]
   3b040:	cmn	r0, #1
   3b044:	bgt	3b26c <__assert_fail@plt+0x286b4>
   3b048:	b	3b04c <__assert_fail@plt+0x28494>
   3b04c:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3b050:	ldr	r0, [r0, #-44]	; 0xffffffd4
   3b054:	cmn	r0, #1
   3b058:	bgt	3b17c <__assert_fail@plt+0x285c4>
   3b05c:	b	3b060 <__assert_fail@plt+0x284a8>
   3b060:	b	3b064 <__assert_fail@plt+0x284ac>
   3b064:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3b068:	ldr	r1, [r0, #-48]	; 0xffffffd0
   3b06c:	ldr	r2, [r0, #-44]	; 0xffffffd4
   3b070:	ldr	r3, [r0]
   3b074:	ldr	r0, [r0, #4]
   3b078:	mvn	ip, #0
   3b07c:	mov	lr, #0
   3b080:	str	r0, [sp, #508]	; 0x1fc
   3b084:	mov	r0, ip
   3b088:	str	r1, [sp, #504]	; 0x1f8
   3b08c:	mov	r1, lr
   3b090:	str	r2, [sp, #500]	; 0x1f4
   3b094:	mov	r2, r3
   3b098:	ldr	r3, [sp, #508]	; 0x1fc
   3b09c:	bl	77780 <__assert_fail@plt+0x64bc8>
   3b0a0:	ldr	r2, [sp, #504]	; 0x1f8
   3b0a4:	subs	r0, r2, r0
   3b0a8:	ldr	r2, [sp, #500]	; 0x1f4
   3b0ac:	sbcs	r1, r2, r1
   3b0b0:	str	r0, [sp, #496]	; 0x1f0
   3b0b4:	str	r1, [sp, #492]	; 0x1ec
   3b0b8:	blt	3b3bc <__assert_fail@plt+0x28804>
   3b0bc:	b	3b3dc <__assert_fail@plt+0x28824>
   3b0c0:	b	3b0c4 <__assert_fail@plt+0x2850c>
   3b0c4:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3b0c8:	ldr	r1, [r0]
   3b0cc:	ldr	r0, [r0, #4]
   3b0d0:	eor	r0, r0, #-2147483648	; 0x80000000
   3b0d4:	orr	r0, r1, r0
   3b0d8:	cmp	r0, #0
   3b0dc:	beq	3b108 <__assert_fail@plt+0x28550>
   3b0e0:	b	3b11c <__assert_fail@plt+0x28564>
   3b0e4:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3b0e8:	ldr	r1, [r0]
   3b0ec:	ldr	r0, [r0, #4]
   3b0f0:	subs	r1, r1, #1
   3b0f4:	sbcs	r0, r0, #0
   3b0f8:	str	r1, [sp, #488]	; 0x1e8
   3b0fc:	str	r0, [sp, #484]	; 0x1e4
   3b100:	blt	3b11c <__assert_fail@plt+0x28564>
   3b104:	b	3b108 <__assert_fail@plt+0x28550>
   3b108:	mov	r0, #0
   3b10c:	mov	r1, r0
   3b110:	str	r1, [sp, #480]	; 0x1e0
   3b114:	str	r0, [sp, #476]	; 0x1dc
   3b118:	b	3b148 <__assert_fail@plt+0x28590>
   3b11c:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3b120:	ldr	r1, [r0]
   3b124:	ldr	r0, [r0, #4]
   3b128:	rsbs	r2, r1, #0
   3b12c:	rsc	r3, r0, #0
   3b130:	mvn	r0, #0
   3b134:	mov	r1, #0
   3b138:	bl	77780 <__assert_fail@plt+0x64bc8>
   3b13c:	str	r0, [sp, #480]	; 0x1e0
   3b140:	str	r1, [sp, #476]	; 0x1dc
   3b144:	b	3b148 <__assert_fail@plt+0x28590>
   3b148:	ldr	r0, [sp, #476]	; 0x1dc
   3b14c:	ldr	r1, [sp, #480]	; 0x1e0
   3b150:	ldr	r2, [fp, #-1288]	; 0xfffffaf8
   3b154:	ldr	r3, [r2, #-48]	; 0xffffffd0
   3b158:	ldr	r2, [r2, #-44]	; 0xffffffd4
   3b15c:	mvn	r2, r2
   3b160:	mvn	r3, r3
   3b164:	subs	r1, r3, r1
   3b168:	sbcs	r0, r2, r0
   3b16c:	str	r1, [sp, #472]	; 0x1d8
   3b170:	str	r0, [sp, #468]	; 0x1d4
   3b174:	bge	3b3bc <__assert_fail@plt+0x28804>
   3b178:	b	3b3dc <__assert_fail@plt+0x28824>
   3b17c:	b	3b180 <__assert_fail@plt+0x285c8>
   3b180:	b	3b214 <__assert_fail@plt+0x2865c>
   3b184:	b	3b214 <__assert_fail@plt+0x2865c>
   3b188:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3b18c:	ldr	r1, [r0]
   3b190:	ldr	r0, [r0, #4]
   3b194:	and	r0, r1, r0
   3b198:	cmn	r0, #1
   3b19c:	bne	3b214 <__assert_fail@plt+0x2865c>
   3b1a0:	b	3b1a4 <__assert_fail@plt+0x285ec>
   3b1a4:	b	3b1a8 <__assert_fail@plt+0x285f0>
   3b1a8:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3b1ac:	ldr	r1, [r0, #-48]	; 0xffffffd0
   3b1b0:	ldr	r0, [r0, #-44]	; 0xffffffd4
   3b1b4:	rsbs	r1, r1, #0
   3b1b8:	rscs	r0, r0, #0
   3b1bc:	str	r1, [sp, #464]	; 0x1d0
   3b1c0:	str	r0, [sp, #460]	; 0x1cc
   3b1c4:	blt	3b3bc <__assert_fail@plt+0x28804>
   3b1c8:	b	3b3dc <__assert_fail@plt+0x28824>
   3b1cc:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3b1d0:	ldr	r1, [r0, #-48]	; 0xffffffd0
   3b1d4:	ldr	r0, [r0, #-44]	; 0xffffffd4
   3b1d8:	subs	r1, r1, #1
   3b1dc:	sbcs	r0, r0, #0
   3b1e0:	str	r1, [sp, #456]	; 0x1c8
   3b1e4:	str	r0, [sp, #452]	; 0x1c4
   3b1e8:	blt	3b3dc <__assert_fail@plt+0x28824>
   3b1ec:	b	3b1f0 <__assert_fail@plt+0x28638>
   3b1f0:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3b1f4:	ldr	r1, [r0, #-48]	; 0xffffffd0
   3b1f8:	ldr	r0, [r0, #-44]	; 0xffffffd4
   3b1fc:	subs	r1, r1, #1
   3b200:	sbc	r0, r0, #0
   3b204:	cmn	r0, #1
   3b208:	str	r1, [sp, #448]	; 0x1c0
   3b20c:	bgt	3b3bc <__assert_fail@plt+0x28804>
   3b210:	b	3b3dc <__assert_fail@plt+0x28824>
   3b214:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3b218:	ldr	r1, [r0, #-48]	; 0xffffffd0
   3b21c:	ldr	r2, [r0, #-44]	; 0xffffffd4
   3b220:	ldr	r3, [r0]
   3b224:	ldr	r0, [r0, #4]
   3b228:	mov	ip, #0
   3b22c:	str	r0, [sp, #444]	; 0x1bc
   3b230:	mov	r0, ip
   3b234:	str	r1, [sp, #440]	; 0x1b8
   3b238:	mov	r1, ip
   3b23c:	str	r2, [sp, #436]	; 0x1b4
   3b240:	mov	r2, r3
   3b244:	ldr	r3, [sp, #444]	; 0x1bc
   3b248:	bl	77780 <__assert_fail@plt+0x64bc8>
   3b24c:	ldr	r2, [sp, #440]	; 0x1b8
   3b250:	subs	r0, r0, r2
   3b254:	ldr	r2, [sp, #436]	; 0x1b4
   3b258:	sbcs	r1, r1, r2
   3b25c:	str	r0, [sp, #432]	; 0x1b0
   3b260:	str	r1, [sp, #428]	; 0x1ac
   3b264:	blt	3b3bc <__assert_fail@plt+0x28804>
   3b268:	b	3b3dc <__assert_fail@plt+0x28824>
   3b26c:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3b270:	ldr	r1, [r0]
   3b274:	ldr	r0, [r0, #4]
   3b278:	orr	r0, r1, r0
   3b27c:	cmp	r0, #0
   3b280:	bne	3b28c <__assert_fail@plt+0x286d4>
   3b284:	b	3b288 <__assert_fail@plt+0x286d0>
   3b288:	b	3b3dc <__assert_fail@plt+0x28824>
   3b28c:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3b290:	ldr	r0, [r0, #-44]	; 0xffffffd4
   3b294:	cmn	r0, #1
   3b298:	bgt	3b360 <__assert_fail@plt+0x287a8>
   3b29c:	b	3b2a0 <__assert_fail@plt+0x286e8>
   3b2a0:	b	3b2a4 <__assert_fail@plt+0x286ec>
   3b2a4:	b	3b314 <__assert_fail@plt+0x2875c>
   3b2a8:	b	3b314 <__assert_fail@plt+0x2875c>
   3b2ac:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3b2b0:	ldr	r1, [r0, #-48]	; 0xffffffd0
   3b2b4:	ldr	r0, [r0, #-44]	; 0xffffffd4
   3b2b8:	and	r0, r1, r0
   3b2bc:	cmn	r0, #1
   3b2c0:	bne	3b314 <__assert_fail@plt+0x2875c>
   3b2c4:	b	3b2c8 <__assert_fail@plt+0x28710>
   3b2c8:	b	3b2cc <__assert_fail@plt+0x28714>
   3b2cc:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3b2d0:	ldr	r1, [r0]
   3b2d4:	ldr	r0, [r0, #4]
   3b2d8:	rsbs	r1, r1, #0
   3b2dc:	rscs	r0, r0, #0
   3b2e0:	str	r1, [sp, #424]	; 0x1a8
   3b2e4:	str	r0, [sp, #420]	; 0x1a4
   3b2e8:	blt	3b3bc <__assert_fail@plt+0x28804>
   3b2ec:	b	3b3dc <__assert_fail@plt+0x28824>
   3b2f0:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3b2f4:	ldr	r1, [r0]
   3b2f8:	ldr	r0, [r0, #4]
   3b2fc:	subs	r1, r1, #1
   3b300:	sbc	r0, r0, #0
   3b304:	cmn	r0, #1
   3b308:	str	r1, [sp, #416]	; 0x1a0
   3b30c:	bgt	3b3bc <__assert_fail@plt+0x28804>
   3b310:	b	3b3dc <__assert_fail@plt+0x28824>
   3b314:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3b318:	ldr	r2, [r0, #-48]	; 0xffffffd0
   3b31c:	ldr	r3, [r0, #-44]	; 0xffffffd4
   3b320:	ldr	r1, [r0]
   3b324:	ldr	r0, [r0, #4]
   3b328:	mov	ip, #0
   3b32c:	str	r0, [sp, #412]	; 0x19c
   3b330:	mov	r0, ip
   3b334:	str	r1, [sp, #408]	; 0x198
   3b338:	mov	r1, ip
   3b33c:	bl	77780 <__assert_fail@plt+0x64bc8>
   3b340:	ldr	r2, [sp, #408]	; 0x198
   3b344:	subs	r0, r0, r2
   3b348:	ldr	r2, [sp, #412]	; 0x19c
   3b34c:	sbcs	r1, r1, r2
   3b350:	str	r0, [sp, #404]	; 0x194
   3b354:	str	r1, [sp, #400]	; 0x190
   3b358:	blt	3b3bc <__assert_fail@plt+0x28804>
   3b35c:	b	3b3dc <__assert_fail@plt+0x28824>
   3b360:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3b364:	ldr	r1, [r0, #-48]	; 0xffffffd0
   3b368:	ldr	r2, [r0, #-44]	; 0xffffffd4
   3b36c:	ldr	r3, [r0]
   3b370:	ldr	r0, [r0, #4]
   3b374:	mvn	ip, #0
   3b378:	mov	lr, #0
   3b37c:	str	r0, [sp, #396]	; 0x18c
   3b380:	mov	r0, ip
   3b384:	str	r1, [sp, #392]	; 0x188
   3b388:	mov	r1, lr
   3b38c:	str	r2, [sp, #388]	; 0x184
   3b390:	mov	r2, r3
   3b394:	ldr	r3, [sp, #396]	; 0x18c
   3b398:	bl	77780 <__assert_fail@plt+0x64bc8>
   3b39c:	ldr	r2, [sp, #392]	; 0x188
   3b3a0:	subs	r0, r0, r2
   3b3a4:	ldr	r2, [sp, #388]	; 0x184
   3b3a8:	sbcs	r1, r1, r2
   3b3ac:	str	r0, [sp, #384]	; 0x180
   3b3b0:	str	r1, [sp, #380]	; 0x17c
   3b3b4:	bge	3b3dc <__assert_fail@plt+0x28824>
   3b3b8:	b	3b3bc <__assert_fail@plt+0x28804>
   3b3bc:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3b3c0:	ldr	r1, [r0, #-48]	; 0xffffffd0
   3b3c4:	ldr	r0, [r0]
   3b3c8:	mul	r0, r1, r0
   3b3cc:	mov	r1, #0
   3b3d0:	str	r1, [fp, #-1340]	; 0xfffffac4
   3b3d4:	str	r0, [fp, #-1344]	; 0xfffffac0
   3b3d8:	b	3bb84 <__assert_fail@plt+0x28fcc>
   3b3dc:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3b3e0:	ldr	r1, [r0, #-48]	; 0xffffffd0
   3b3e4:	ldr	r0, [r0]
   3b3e8:	mul	r0, r1, r0
   3b3ec:	mov	r1, #0
   3b3f0:	str	r1, [fp, #-1340]	; 0xfffffac4
   3b3f4:	str	r0, [fp, #-1344]	; 0xfffffac0
   3b3f8:	b	3bb88 <__assert_fail@plt+0x28fd0>
   3b3fc:	b	3b400 <__assert_fail@plt+0x28848>
   3b400:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3b404:	ldr	r0, [r0, #4]
   3b408:	cmn	r0, #1
   3b40c:	bgt	3b61c <__assert_fail@plt+0x28a64>
   3b410:	b	3b414 <__assert_fail@plt+0x2885c>
   3b414:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3b418:	ldr	r0, [r0, #-44]	; 0xffffffd4
   3b41c:	cmn	r0, #1
   3b420:	bgt	3b544 <__assert_fail@plt+0x2898c>
   3b424:	b	3b428 <__assert_fail@plt+0x28870>
   3b428:	b	3b42c <__assert_fail@plt+0x28874>
   3b42c:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3b430:	ldr	r1, [r0, #-48]	; 0xffffffd0
   3b434:	ldr	r2, [r0, #-44]	; 0xffffffd4
   3b438:	ldr	r3, [r0]
   3b43c:	ldr	r0, [r0, #4]
   3b440:	mvn	ip, #0
   3b444:	mvn	lr, #-2147483648	; 0x80000000
   3b448:	str	r0, [sp, #376]	; 0x178
   3b44c:	mov	r0, ip
   3b450:	str	r1, [sp, #372]	; 0x174
   3b454:	mov	r1, lr
   3b458:	str	r2, [sp, #368]	; 0x170
   3b45c:	mov	r2, r3
   3b460:	ldr	r3, [sp, #376]	; 0x178
   3b464:	bl	77780 <__assert_fail@plt+0x64bc8>
   3b468:	ldr	r2, [sp, #372]	; 0x174
   3b46c:	subs	r0, r2, r0
   3b470:	ldr	r2, [sp, #368]	; 0x170
   3b474:	sbcs	r1, r2, r1
   3b478:	str	r0, [sp, #364]	; 0x16c
   3b47c:	str	r1, [sp, #360]	; 0x168
   3b480:	blt	3b754 <__assert_fail@plt+0x28b9c>
   3b484:	b	3b780 <__assert_fail@plt+0x28bc8>
   3b488:	b	3b48c <__assert_fail@plt+0x288d4>
   3b48c:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3b490:	ldr	r1, [r0]
   3b494:	ldr	r0, [r0, #4]
   3b498:	eor	r0, r0, #-2147483648	; 0x80000000
   3b49c:	orr	r0, r1, r0
   3b4a0:	cmp	r0, #0
   3b4a4:	beq	3b4d0 <__assert_fail@plt+0x28918>
   3b4a8:	b	3b4e4 <__assert_fail@plt+0x2892c>
   3b4ac:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3b4b0:	ldr	r1, [r0]
   3b4b4:	ldr	r0, [r0, #4]
   3b4b8:	subs	r1, r1, #1
   3b4bc:	sbcs	r0, r0, #0
   3b4c0:	str	r1, [sp, #356]	; 0x164
   3b4c4:	str	r0, [sp, #352]	; 0x160
   3b4c8:	blt	3b4e4 <__assert_fail@plt+0x2892c>
   3b4cc:	b	3b4d0 <__assert_fail@plt+0x28918>
   3b4d0:	mov	r0, #0
   3b4d4:	mov	r1, r0
   3b4d8:	str	r1, [sp, #348]	; 0x15c
   3b4dc:	str	r0, [sp, #344]	; 0x158
   3b4e0:	b	3b510 <__assert_fail@plt+0x28958>
   3b4e4:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3b4e8:	ldr	r1, [r0]
   3b4ec:	ldr	r0, [r0, #4]
   3b4f0:	rsbs	r2, r1, #0
   3b4f4:	rsc	r3, r0, #0
   3b4f8:	mvn	r0, #0
   3b4fc:	mvn	r1, #-2147483648	; 0x80000000
   3b500:	bl	77780 <__assert_fail@plt+0x64bc8>
   3b504:	str	r0, [sp, #348]	; 0x15c
   3b508:	str	r1, [sp, #344]	; 0x158
   3b50c:	b	3b510 <__assert_fail@plt+0x28958>
   3b510:	ldr	r0, [sp, #344]	; 0x158
   3b514:	ldr	r1, [sp, #348]	; 0x15c
   3b518:	ldr	r2, [fp, #-1288]	; 0xfffffaf8
   3b51c:	ldr	r3, [r2, #-48]	; 0xffffffd0
   3b520:	ldr	r2, [r2, #-44]	; 0xffffffd4
   3b524:	mvn	r2, r2
   3b528:	mvn	r3, r3
   3b52c:	subs	r1, r3, r1
   3b530:	sbcs	r0, r2, r0
   3b534:	str	r1, [sp, #340]	; 0x154
   3b538:	str	r0, [sp, #336]	; 0x150
   3b53c:	bge	3b754 <__assert_fail@plt+0x28b9c>
   3b540:	b	3b780 <__assert_fail@plt+0x28bc8>
   3b544:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3b548:	ldr	r1, [r0]
   3b54c:	ldr	r0, [r0, #4]
   3b550:	and	r0, r1, r0
   3b554:	cmn	r0, #1
   3b558:	bne	3b5c0 <__assert_fail@plt+0x28a08>
   3b55c:	b	3b560 <__assert_fail@plt+0x289a8>
   3b560:	b	3b564 <__assert_fail@plt+0x289ac>
   3b564:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3b568:	ldr	r1, [r0, #-48]	; 0xffffffd0
   3b56c:	ldr	r0, [r0, #-44]	; 0xffffffd4
   3b570:	add	r0, r0, #-2147483648	; 0x80000000
   3b574:	rsbs	r1, r1, #0
   3b578:	rscs	r0, r0, #0
   3b57c:	str	r1, [sp, #332]	; 0x14c
   3b580:	str	r0, [sp, #328]	; 0x148
   3b584:	blt	3b754 <__assert_fail@plt+0x28b9c>
   3b588:	b	3b780 <__assert_fail@plt+0x28bc8>
   3b58c:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3b590:	ldr	r1, [r0, #-48]	; 0xffffffd0
   3b594:	ldr	r0, [r0, #-44]	; 0xffffffd4
   3b598:	subs	r1, r1, #1
   3b59c:	sbcs	r0, r0, #0
   3b5a0:	str	r1, [sp, #324]	; 0x144
   3b5a4:	str	r0, [sp, #320]	; 0x140
   3b5a8:	blt	3b780 <__assert_fail@plt+0x28bc8>
   3b5ac:	b	3b5b0 <__assert_fail@plt+0x289f8>
   3b5b0:	mov	r0, #0
   3b5b4:	cmp	r0, #0
   3b5b8:	bne	3b754 <__assert_fail@plt+0x28b9c>
   3b5bc:	b	3b780 <__assert_fail@plt+0x28bc8>
   3b5c0:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3b5c4:	ldr	r1, [r0, #-48]	; 0xffffffd0
   3b5c8:	ldr	r2, [r0, #-44]	; 0xffffffd4
   3b5cc:	ldr	r3, [r0]
   3b5d0:	ldr	r0, [r0, #4]
   3b5d4:	mov	ip, #0
   3b5d8:	mov	lr, #-2147483648	; 0x80000000
   3b5dc:	str	r0, [sp, #316]	; 0x13c
   3b5e0:	mov	r0, ip
   3b5e4:	str	r1, [sp, #312]	; 0x138
   3b5e8:	mov	r1, lr
   3b5ec:	str	r2, [sp, #308]	; 0x134
   3b5f0:	mov	r2, r3
   3b5f4:	ldr	r3, [sp, #316]	; 0x13c
   3b5f8:	bl	77780 <__assert_fail@plt+0x64bc8>
   3b5fc:	ldr	r2, [sp, #312]	; 0x138
   3b600:	subs	r0, r0, r2
   3b604:	ldr	r2, [sp, #308]	; 0x134
   3b608:	sbcs	r1, r1, r2
   3b60c:	str	r0, [sp, #304]	; 0x130
   3b610:	str	r1, [sp, #300]	; 0x12c
   3b614:	blt	3b754 <__assert_fail@plt+0x28b9c>
   3b618:	b	3b780 <__assert_fail@plt+0x28bc8>
   3b61c:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3b620:	ldr	r1, [r0]
   3b624:	ldr	r0, [r0, #4]
   3b628:	orr	r0, r1, r0
   3b62c:	cmp	r0, #0
   3b630:	bne	3b63c <__assert_fail@plt+0x28a84>
   3b634:	b	3b638 <__assert_fail@plt+0x28a80>
   3b638:	b	3b780 <__assert_fail@plt+0x28bc8>
   3b63c:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3b640:	ldr	r0, [r0, #-44]	; 0xffffffd4
   3b644:	cmn	r0, #1
   3b648:	bgt	3b6f8 <__assert_fail@plt+0x28b40>
   3b64c:	b	3b650 <__assert_fail@plt+0x28a98>
   3b650:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3b654:	ldr	r1, [r0, #-48]	; 0xffffffd0
   3b658:	ldr	r0, [r0, #-44]	; 0xffffffd4
   3b65c:	and	r0, r1, r0
   3b660:	cmn	r0, #1
   3b664:	bne	3b6a8 <__assert_fail@plt+0x28af0>
   3b668:	b	3b66c <__assert_fail@plt+0x28ab4>
   3b66c:	b	3b670 <__assert_fail@plt+0x28ab8>
   3b670:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3b674:	ldr	r1, [r0]
   3b678:	ldr	r0, [r0, #4]
   3b67c:	add	r0, r0, #-2147483648	; 0x80000000
   3b680:	rsbs	r1, r1, #0
   3b684:	rscs	r0, r0, #0
   3b688:	str	r1, [sp, #296]	; 0x128
   3b68c:	str	r0, [sp, #292]	; 0x124
   3b690:	blt	3b754 <__assert_fail@plt+0x28b9c>
   3b694:	b	3b780 <__assert_fail@plt+0x28bc8>
   3b698:	mov	r0, #0
   3b69c:	cmp	r0, #0
   3b6a0:	bne	3b754 <__assert_fail@plt+0x28b9c>
   3b6a4:	b	3b780 <__assert_fail@plt+0x28bc8>
   3b6a8:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3b6ac:	ldr	r2, [r0, #-48]	; 0xffffffd0
   3b6b0:	ldr	r3, [r0, #-44]	; 0xffffffd4
   3b6b4:	ldr	r1, [r0]
   3b6b8:	ldr	r0, [r0, #4]
   3b6bc:	mov	ip, #0
   3b6c0:	mov	lr, #-2147483648	; 0x80000000
   3b6c4:	str	r0, [sp, #288]	; 0x120
   3b6c8:	mov	r0, ip
   3b6cc:	str	r1, [sp, #284]	; 0x11c
   3b6d0:	mov	r1, lr
   3b6d4:	bl	77780 <__assert_fail@plt+0x64bc8>
   3b6d8:	ldr	r2, [sp, #284]	; 0x11c
   3b6dc:	subs	r0, r0, r2
   3b6e0:	ldr	r2, [sp, #288]	; 0x120
   3b6e4:	sbcs	r1, r1, r2
   3b6e8:	str	r0, [sp, #280]	; 0x118
   3b6ec:	str	r1, [sp, #276]	; 0x114
   3b6f0:	blt	3b754 <__assert_fail@plt+0x28b9c>
   3b6f4:	b	3b780 <__assert_fail@plt+0x28bc8>
   3b6f8:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3b6fc:	ldr	r1, [r0, #-48]	; 0xffffffd0
   3b700:	ldr	r2, [r0, #-44]	; 0xffffffd4
   3b704:	ldr	r3, [r0]
   3b708:	ldr	r0, [r0, #4]
   3b70c:	mvn	ip, #0
   3b710:	mvn	lr, #-2147483648	; 0x80000000
   3b714:	str	r0, [sp, #272]	; 0x110
   3b718:	mov	r0, ip
   3b71c:	str	r1, [sp, #268]	; 0x10c
   3b720:	mov	r1, lr
   3b724:	str	r2, [sp, #264]	; 0x108
   3b728:	mov	r2, r3
   3b72c:	ldr	r3, [sp, #272]	; 0x110
   3b730:	bl	77780 <__assert_fail@plt+0x64bc8>
   3b734:	ldr	r2, [sp, #268]	; 0x10c
   3b738:	subs	r0, r0, r2
   3b73c:	ldr	r2, [sp, #264]	; 0x108
   3b740:	sbcs	r1, r1, r2
   3b744:	str	r0, [sp, #260]	; 0x104
   3b748:	str	r1, [sp, #256]	; 0x100
   3b74c:	bge	3b780 <__assert_fail@plt+0x28bc8>
   3b750:	b	3b754 <__assert_fail@plt+0x28b9c>
   3b754:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3b758:	ldr	r1, [r0, #-48]	; 0xffffffd0
   3b75c:	ldr	r2, [r0, #-44]	; 0xffffffd4
   3b760:	ldr	r3, [r0]
   3b764:	ldr	r0, [r0, #4]
   3b768:	umull	ip, lr, r1, r3
   3b76c:	mla	r0, r1, r0, lr
   3b770:	mla	r0, r2, r3, r0
   3b774:	str	ip, [fp, #-1344]	; 0xfffffac0
   3b778:	str	r0, [fp, #-1340]	; 0xfffffac4
   3b77c:	b	3bb84 <__assert_fail@plt+0x28fcc>
   3b780:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3b784:	ldr	r1, [r0, #-48]	; 0xffffffd0
   3b788:	ldr	r2, [r0, #-44]	; 0xffffffd4
   3b78c:	ldr	r3, [r0]
   3b790:	ldr	r0, [r0, #4]
   3b794:	umull	ip, lr, r1, r3
   3b798:	mla	r0, r1, r0, lr
   3b79c:	mla	r0, r2, r3, r0
   3b7a0:	str	ip, [fp, #-1344]	; 0xfffffac0
   3b7a4:	str	r0, [fp, #-1340]	; 0xfffffac4
   3b7a8:	b	3bb88 <__assert_fail@plt+0x28fd0>
   3b7ac:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3b7b0:	ldr	r0, [r0, #4]
   3b7b4:	cmn	r0, #1
   3b7b8:	bgt	3b9e0 <__assert_fail@plt+0x28e28>
   3b7bc:	b	3b7c0 <__assert_fail@plt+0x28c08>
   3b7c0:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3b7c4:	ldr	r0, [r0, #-44]	; 0xffffffd4
   3b7c8:	cmn	r0, #1
   3b7cc:	bgt	3b8f0 <__assert_fail@plt+0x28d38>
   3b7d0:	b	3b7d4 <__assert_fail@plt+0x28c1c>
   3b7d4:	b	3b830 <__assert_fail@plt+0x28c78>
   3b7d8:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3b7dc:	ldr	r1, [r0, #-48]	; 0xffffffd0
   3b7e0:	ldr	r2, [r0, #-44]	; 0xffffffd4
   3b7e4:	ldr	r3, [r0]
   3b7e8:	ldr	r0, [r0, #4]
   3b7ec:	mvn	ip, #0
   3b7f0:	str	r0, [sp, #252]	; 0xfc
   3b7f4:	mov	r0, ip
   3b7f8:	str	r1, [sp, #248]	; 0xf8
   3b7fc:	mov	r1, ip
   3b800:	str	r2, [sp, #244]	; 0xf4
   3b804:	mov	r2, r3
   3b808:	ldr	r3, [sp, #252]	; 0xfc
   3b80c:	bl	77854 <__assert_fail@plt+0x64c9c>
   3b810:	ldr	r2, [sp, #248]	; 0xf8
   3b814:	subs	r0, r2, r0
   3b818:	ldr	r2, [sp, #244]	; 0xf4
   3b81c:	sbcs	r1, r2, r1
   3b820:	str	r0, [sp, #240]	; 0xf0
   3b824:	str	r1, [sp, #236]	; 0xec
   3b828:	bcc	3bb2c <__assert_fail@plt+0x28f74>
   3b82c:	b	3bb58 <__assert_fail@plt+0x28fa0>
   3b830:	b	3b834 <__assert_fail@plt+0x28c7c>
   3b834:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3b838:	ldr	r1, [r0]
   3b83c:	ldr	r0, [r0, #4]
   3b840:	eor	r0, r0, #-2147483648	; 0x80000000
   3b844:	orr	r0, r1, r0
   3b848:	cmp	r0, #0
   3b84c:	beq	3b878 <__assert_fail@plt+0x28cc0>
   3b850:	b	3b88c <__assert_fail@plt+0x28cd4>
   3b854:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3b858:	ldr	r1, [r0]
   3b85c:	ldr	r0, [r0, #4]
   3b860:	subs	r1, r1, #1
   3b864:	sbcs	r0, r0, #0
   3b868:	str	r1, [sp, #232]	; 0xe8
   3b86c:	str	r0, [sp, #228]	; 0xe4
   3b870:	blt	3b88c <__assert_fail@plt+0x28cd4>
   3b874:	b	3b878 <__assert_fail@plt+0x28cc0>
   3b878:	mov	r0, #0
   3b87c:	mov	r1, #1
   3b880:	str	r1, [sp, #224]	; 0xe0
   3b884:	str	r0, [sp, #220]	; 0xdc
   3b888:	b	3b8bc <__assert_fail@plt+0x28d04>
   3b88c:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3b890:	ldr	r1, [r0]
   3b894:	ldr	r0, [r0, #4]
   3b898:	rsbs	r2, r1, #0
   3b89c:	rsc	r3, r0, #0
   3b8a0:	mvn	r0, #0
   3b8a4:	str	r0, [sp, #216]	; 0xd8
   3b8a8:	ldr	r1, [sp, #216]	; 0xd8
   3b8ac:	bl	77854 <__assert_fail@plt+0x64c9c>
   3b8b0:	str	r0, [sp, #224]	; 0xe0
   3b8b4:	str	r1, [sp, #220]	; 0xdc
   3b8b8:	b	3b8bc <__assert_fail@plt+0x28d04>
   3b8bc:	ldr	r0, [sp, #220]	; 0xdc
   3b8c0:	ldr	r1, [sp, #224]	; 0xe0
   3b8c4:	ldr	r2, [fp, #-1288]	; 0xfffffaf8
   3b8c8:	ldr	r3, [r2, #-48]	; 0xffffffd0
   3b8cc:	ldr	r2, [r2, #-44]	; 0xffffffd4
   3b8d0:	mvn	r2, r2
   3b8d4:	mvn	r3, r3
   3b8d8:	subs	r1, r3, r1
   3b8dc:	sbcs	r0, r2, r0
   3b8e0:	str	r1, [sp, #212]	; 0xd4
   3b8e4:	str	r0, [sp, #208]	; 0xd0
   3b8e8:	bcs	3bb2c <__assert_fail@plt+0x28f74>
   3b8ec:	b	3bb58 <__assert_fail@plt+0x28fa0>
   3b8f0:	b	3b8f4 <__assert_fail@plt+0x28d3c>
   3b8f4:	b	3b988 <__assert_fail@plt+0x28dd0>
   3b8f8:	b	3b988 <__assert_fail@plt+0x28dd0>
   3b8fc:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3b900:	ldr	r1, [r0]
   3b904:	ldr	r0, [r0, #4]
   3b908:	and	r0, r1, r0
   3b90c:	cmn	r0, #1
   3b910:	bne	3b988 <__assert_fail@plt+0x28dd0>
   3b914:	b	3b918 <__assert_fail@plt+0x28d60>
   3b918:	b	3b91c <__assert_fail@plt+0x28d64>
   3b91c:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3b920:	ldr	r1, [r0, #-48]	; 0xffffffd0
   3b924:	ldr	r0, [r0, #-44]	; 0xffffffd4
   3b928:	rsbs	r1, r1, #0
   3b92c:	rscs	r0, r0, #0
   3b930:	str	r1, [sp, #204]	; 0xcc
   3b934:	str	r0, [sp, #200]	; 0xc8
   3b938:	blt	3bb2c <__assert_fail@plt+0x28f74>
   3b93c:	b	3bb58 <__assert_fail@plt+0x28fa0>
   3b940:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3b944:	ldr	r1, [r0, #-48]	; 0xffffffd0
   3b948:	ldr	r0, [r0, #-44]	; 0xffffffd4
   3b94c:	subs	r1, r1, #1
   3b950:	sbcs	r0, r0, #0
   3b954:	str	r1, [sp, #196]	; 0xc4
   3b958:	str	r0, [sp, #192]	; 0xc0
   3b95c:	blt	3bb58 <__assert_fail@plt+0x28fa0>
   3b960:	b	3b964 <__assert_fail@plt+0x28dac>
   3b964:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3b968:	ldr	r1, [r0, #-48]	; 0xffffffd0
   3b96c:	ldr	r0, [r0, #-44]	; 0xffffffd4
   3b970:	subs	r1, r1, #1
   3b974:	sbc	r0, r0, #0
   3b978:	cmn	r0, #1
   3b97c:	str	r1, [sp, #188]	; 0xbc
   3b980:	bgt	3bb2c <__assert_fail@plt+0x28f74>
   3b984:	b	3bb58 <__assert_fail@plt+0x28fa0>
   3b988:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3b98c:	ldr	r1, [r0, #-48]	; 0xffffffd0
   3b990:	ldr	r2, [r0, #-44]	; 0xffffffd4
   3b994:	ldr	r3, [r0]
   3b998:	ldr	r0, [r0, #4]
   3b99c:	mov	ip, #0
   3b9a0:	str	r0, [sp, #184]	; 0xb8
   3b9a4:	mov	r0, ip
   3b9a8:	str	r1, [sp, #180]	; 0xb4
   3b9ac:	mov	r1, ip
   3b9b0:	str	r2, [sp, #176]	; 0xb0
   3b9b4:	mov	r2, r3
   3b9b8:	ldr	r3, [sp, #184]	; 0xb8
   3b9bc:	bl	77780 <__assert_fail@plt+0x64bc8>
   3b9c0:	ldr	r2, [sp, #180]	; 0xb4
   3b9c4:	subs	r0, r0, r2
   3b9c8:	ldr	r2, [sp, #176]	; 0xb0
   3b9cc:	sbcs	r1, r1, r2
   3b9d0:	str	r0, [sp, #172]	; 0xac
   3b9d4:	str	r1, [sp, #168]	; 0xa8
   3b9d8:	blt	3bb2c <__assert_fail@plt+0x28f74>
   3b9dc:	b	3bb58 <__assert_fail@plt+0x28fa0>
   3b9e0:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3b9e4:	ldr	r1, [r0]
   3b9e8:	ldr	r0, [r0, #4]
   3b9ec:	orr	r0, r1, r0
   3b9f0:	cmp	r0, #0
   3b9f4:	bne	3ba00 <__assert_fail@plt+0x28e48>
   3b9f8:	b	3b9fc <__assert_fail@plt+0x28e44>
   3b9fc:	b	3bb58 <__assert_fail@plt+0x28fa0>
   3ba00:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3ba04:	ldr	r0, [r0, #-44]	; 0xffffffd4
   3ba08:	cmn	r0, #1
   3ba0c:	bgt	3bad4 <__assert_fail@plt+0x28f1c>
   3ba10:	b	3ba14 <__assert_fail@plt+0x28e5c>
   3ba14:	b	3ba18 <__assert_fail@plt+0x28e60>
   3ba18:	b	3ba88 <__assert_fail@plt+0x28ed0>
   3ba1c:	b	3ba88 <__assert_fail@plt+0x28ed0>
   3ba20:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3ba24:	ldr	r1, [r0, #-48]	; 0xffffffd0
   3ba28:	ldr	r0, [r0, #-44]	; 0xffffffd4
   3ba2c:	and	r0, r1, r0
   3ba30:	cmn	r0, #1
   3ba34:	bne	3ba88 <__assert_fail@plt+0x28ed0>
   3ba38:	b	3ba3c <__assert_fail@plt+0x28e84>
   3ba3c:	b	3ba40 <__assert_fail@plt+0x28e88>
   3ba40:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3ba44:	ldr	r1, [r0]
   3ba48:	ldr	r0, [r0, #4]
   3ba4c:	rsbs	r1, r1, #0
   3ba50:	rscs	r0, r0, #0
   3ba54:	str	r1, [sp, #164]	; 0xa4
   3ba58:	str	r0, [sp, #160]	; 0xa0
   3ba5c:	blt	3bb2c <__assert_fail@plt+0x28f74>
   3ba60:	b	3bb58 <__assert_fail@plt+0x28fa0>
   3ba64:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3ba68:	ldr	r1, [r0]
   3ba6c:	ldr	r0, [r0, #4]
   3ba70:	subs	r1, r1, #1
   3ba74:	sbc	r0, r0, #0
   3ba78:	cmn	r0, #1
   3ba7c:	str	r1, [sp, #156]	; 0x9c
   3ba80:	bgt	3bb2c <__assert_fail@plt+0x28f74>
   3ba84:	b	3bb58 <__assert_fail@plt+0x28fa0>
   3ba88:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3ba8c:	ldr	r2, [r0, #-48]	; 0xffffffd0
   3ba90:	ldr	r3, [r0, #-44]	; 0xffffffd4
   3ba94:	ldr	r1, [r0]
   3ba98:	ldr	r0, [r0, #4]
   3ba9c:	mov	ip, #0
   3baa0:	str	r0, [sp, #152]	; 0x98
   3baa4:	mov	r0, ip
   3baa8:	str	r1, [sp, #148]	; 0x94
   3baac:	mov	r1, ip
   3bab0:	bl	77780 <__assert_fail@plt+0x64bc8>
   3bab4:	ldr	r2, [sp, #148]	; 0x94
   3bab8:	subs	r0, r0, r2
   3babc:	ldr	r2, [sp, #152]	; 0x98
   3bac0:	sbcs	r1, r1, r2
   3bac4:	str	r0, [sp, #144]	; 0x90
   3bac8:	str	r1, [sp, #140]	; 0x8c
   3bacc:	blt	3bb2c <__assert_fail@plt+0x28f74>
   3bad0:	b	3bb58 <__assert_fail@plt+0x28fa0>
   3bad4:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3bad8:	ldr	r1, [r0, #-48]	; 0xffffffd0
   3badc:	ldr	r2, [r0, #-44]	; 0xffffffd4
   3bae0:	ldr	r3, [r0]
   3bae4:	ldr	r0, [r0, #4]
   3bae8:	mvn	ip, #0
   3baec:	str	r0, [sp, #136]	; 0x88
   3baf0:	mov	r0, ip
   3baf4:	str	r1, [sp, #132]	; 0x84
   3baf8:	mov	r1, ip
   3bafc:	str	r2, [sp, #128]	; 0x80
   3bb00:	mov	r2, r3
   3bb04:	ldr	r3, [sp, #136]	; 0x88
   3bb08:	bl	77854 <__assert_fail@plt+0x64c9c>
   3bb0c:	ldr	r2, [sp, #132]	; 0x84
   3bb10:	subs	r0, r0, r2
   3bb14:	ldr	r2, [sp, #128]	; 0x80
   3bb18:	sbcs	r1, r1, r2
   3bb1c:	str	r0, [sp, #124]	; 0x7c
   3bb20:	str	r1, [sp, #120]	; 0x78
   3bb24:	bcs	3bb58 <__assert_fail@plt+0x28fa0>
   3bb28:	b	3bb2c <__assert_fail@plt+0x28f74>
   3bb2c:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3bb30:	ldr	r1, [r0, #-48]	; 0xffffffd0
   3bb34:	ldr	r2, [r0, #-44]	; 0xffffffd4
   3bb38:	ldr	r3, [r0]
   3bb3c:	ldr	r0, [r0, #4]
   3bb40:	umull	ip, lr, r1, r3
   3bb44:	mla	r0, r1, r0, lr
   3bb48:	mla	r0, r2, r3, r0
   3bb4c:	str	ip, [fp, #-1344]	; 0xfffffac0
   3bb50:	str	r0, [fp, #-1340]	; 0xfffffac4
   3bb54:	b	3bb84 <__assert_fail@plt+0x28fcc>
   3bb58:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3bb5c:	ldr	r1, [r0, #-48]	; 0xffffffd0
   3bb60:	ldr	r2, [r0, #-44]	; 0xffffffd4
   3bb64:	ldr	r3, [r0]
   3bb68:	ldr	r0, [r0, #4]
   3bb6c:	umull	ip, lr, r1, r3
   3bb70:	mla	r0, r1, r0, lr
   3bb74:	mla	r0, r2, r3, r0
   3bb78:	str	ip, [fp, #-1344]	; 0xfffffac0
   3bb7c:	str	r0, [fp, #-1340]	; 0xfffffac4
   3bb80:	b	3bb88 <__assert_fail@plt+0x28fd0>
   3bb84:	b	3c300 <__assert_fail@plt+0x29748>
   3bb88:	b	3bfc0 <__assert_fail@plt+0x29408>
   3bb8c:	mov	r0, #0
   3bb90:	str	r0, [fp, #-2732]	; 0xfffff554
   3bb94:	str	r0, [fp, #-2736]	; 0xfffff550
   3bb98:	str	r0, [fp, #-2724]	; 0xfffff55c
   3bb9c:	str	r0, [fp, #-2728]	; 0xfffff558
   3bba0:	sub	r1, fp, #2736	; 0xab0
   3bba4:	add	r2, r1, #16
   3bba8:	str	r0, [fp, #-2716]	; 0xfffff564
   3bbac:	str	r0, [fp, #-2720]	; 0xfffff560
   3bbb0:	str	r0, [fp, #-2708]	; 0xfffff56c
   3bbb4:	str	r0, [fp, #-2712]	; 0xfffff568
   3bbb8:	add	r3, r1, #32
   3bbbc:	str	r0, [fp, #-2700]	; 0xfffff574
   3bbc0:	str	r0, [fp, #-2704]	; 0xfffff570
   3bbc4:	str	r0, [fp, #-2692]	; 0xfffff57c
   3bbc8:	str	r0, [fp, #-2696]	; 0xfffff578
   3bbcc:	str	r0, [fp, #-2688]	; 0xfffff580
   3bbd0:	sub	r0, fp, #1360	; 0x550
   3bbd4:	add	ip, r0, #32
   3bbd8:	vld1.64	{d16-d17}, [r3]
   3bbdc:	vst1.64	{d16-d17}, [ip]
   3bbe0:	add	r3, r0, #16
   3bbe4:	vld1.64	{d16-d17}, [r2]
   3bbe8:	vst1.64	{d16-d17}, [r3]
   3bbec:	sub	lr, fp, #2048	; 0x800
   3bbf0:	vldr	d18, [lr, #-640]	; 0xfffffd80
   3bbf4:	ldr	r2, [fp, #-2916]	; 0xfffff49c
   3bbf8:	vstr	d18, [r2, #704]	; 0x2c0
   3bbfc:	vld1.64	{d16-d17}, [r1]
   3bc00:	mov	r1, #24
   3bc04:	vst1.64	{d16-d17}, [r0], r1
   3bc08:	ldr	r1, [fp, #-1288]	; 0xfffffaf8
   3bc0c:	ldr	r3, [r1, #-48]	; 0xffffffd0
   3bc10:	ldr	r1, [r1, #-44]	; 0xffffffd4
   3bc14:	str	r1, [r0, #4]
   3bc18:	str	r3, [r0]
   3bc1c:	b	3bfc0 <__assert_fail@plt+0x29408>
   3bc20:	mov	r0, #0
   3bc24:	str	r0, [fp, #-2788]	; 0xfffff51c
   3bc28:	str	r0, [fp, #-2792]	; 0xfffff518
   3bc2c:	str	r0, [fp, #-2780]	; 0xfffff524
   3bc30:	str	r0, [fp, #-2784]	; 0xfffff520
   3bc34:	sub	lr, fp, #2048	; 0x800
   3bc38:	sub	r1, lr, #744	; 0x2e8
   3bc3c:	add	r2, r1, #16
   3bc40:	str	r0, [fp, #-2772]	; 0xfffff52c
   3bc44:	str	r0, [fp, #-2776]	; 0xfffff528
   3bc48:	str	r0, [fp, #-2764]	; 0xfffff534
   3bc4c:	str	r0, [fp, #-2768]	; 0xfffff530
   3bc50:	add	r3, r1, #32
   3bc54:	str	r0, [fp, #-2756]	; 0xfffff53c
   3bc58:	str	r0, [fp, #-2760]	; 0xfffff538
   3bc5c:	str	r0, [fp, #-2748]	; 0xfffff544
   3bc60:	str	r0, [fp, #-2752]	; 0xfffff540
   3bc64:	str	r0, [fp, #-2744]	; 0xfffff548
   3bc68:	sub	r0, fp, #1360	; 0x550
   3bc6c:	add	ip, r0, #32
   3bc70:	vld1.64	{d16-d17}, [r3]
   3bc74:	vst1.64	{d16-d17}, [ip]
   3bc78:	add	r3, r0, #16
   3bc7c:	vld1.64	{d16-d17}, [r2]
   3bc80:	vst1.64	{d16-d17}, [r3]
   3bc84:	vld1.64	{d16-d17}, [r1]
   3bc88:	mov	r1, #48	; 0x30
   3bc8c:	vst1.64	{d16-d17}, [r0], r1
   3bc90:	sub	lr, fp, #2048	; 0x800
   3bc94:	vldr	d18, [lr, #-696]	; 0xfffffd48
   3bc98:	vstr	d18, [r0]
   3bc9c:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3bca0:	ldr	r1, [r0, #-48]	; 0xffffffd0
   3bca4:	ldr	r0, [r0, #-44]	; 0xffffffd4
   3bca8:	str	r0, [fp, #-1324]	; 0xfffffad4
   3bcac:	str	r1, [fp, #-1328]	; 0xfffffad0
   3bcb0:	b	3bfc0 <__assert_fail@plt+0x29408>
   3bcb4:	mov	r0, #0
   3bcb8:	str	r0, [fp, #-2844]	; 0xfffff4e4
   3bcbc:	str	r0, [fp, #-2848]	; 0xfffff4e0
   3bcc0:	str	r0, [fp, #-2836]	; 0xfffff4ec
   3bcc4:	str	r0, [fp, #-2840]	; 0xfffff4e8
   3bcc8:	sub	r1, fp, #2848	; 0xb20
   3bccc:	add	r2, r1, #16
   3bcd0:	str	r0, [fp, #-2828]	; 0xfffff4f4
   3bcd4:	str	r0, [fp, #-2832]	; 0xfffff4f0
   3bcd8:	str	r0, [fp, #-2820]	; 0xfffff4fc
   3bcdc:	str	r0, [fp, #-2824]	; 0xfffff4f8
   3bce0:	add	r3, r1, #32
   3bce4:	str	r0, [fp, #-2812]	; 0xfffff504
   3bce8:	str	r0, [fp, #-2816]	; 0xfffff500
   3bcec:	str	r0, [fp, #-2804]	; 0xfffff50c
   3bcf0:	str	r0, [fp, #-2808]	; 0xfffff508
   3bcf4:	str	r0, [fp, #-2800]	; 0xfffff510
   3bcf8:	sub	r0, fp, #1360	; 0x550
   3bcfc:	add	ip, r0, #32
   3bd00:	vld1.64	{d16-d17}, [r3]
   3bd04:	vst1.64	{d16-d17}, [ip]
   3bd08:	add	r3, r0, #16
   3bd0c:	vld1.64	{d16-d17}, [r2]
   3bd10:	vst1.64	{d16-d17}, [r3]
   3bd14:	sub	lr, fp, #2048	; 0x800
   3bd18:	vldr	d18, [lr, #-752]	; 0xfffffd10
   3bd1c:	ldr	r2, [fp, #-2916]	; 0xfffff49c
   3bd20:	vstr	d18, [r2, #704]	; 0x2c0
   3bd24:	vld1.64	{d16-d17}, [r1]
   3bd28:	mov	r1, #40	; 0x28
   3bd2c:	vst1.64	{d16-d17}, [r0], r1
   3bd30:	ldr	r1, [fp, #-1288]	; 0xfffffaf8
   3bd34:	ldr	r3, [r1, #-48]	; 0xffffffd0
   3bd38:	ldr	r1, [r1, #-44]	; 0xffffffd4
   3bd3c:	str	r1, [r0, #4]
   3bd40:	str	r3, [r0]
   3bd44:	b	3bfc0 <__assert_fail@plt+0x29408>
   3bd48:	mov	r0, #0
   3bd4c:	str	r0, [fp, #-2900]	; 0xfffff4ac
   3bd50:	str	r0, [fp, #-2904]	; 0xfffff4a8
   3bd54:	str	r0, [fp, #-2892]	; 0xfffff4b4
   3bd58:	str	r0, [fp, #-2896]	; 0xfffff4b0
   3bd5c:	sub	lr, fp, #2048	; 0x800
   3bd60:	sub	r1, lr, #856	; 0x358
   3bd64:	add	r2, r1, #16
   3bd68:	str	r0, [fp, #-2884]	; 0xfffff4bc
   3bd6c:	str	r0, [fp, #-2888]	; 0xfffff4b8
   3bd70:	str	r0, [fp, #-2876]	; 0xfffff4c4
   3bd74:	str	r0, [fp, #-2880]	; 0xfffff4c0
   3bd78:	add	r3, r1, #32
   3bd7c:	str	r0, [fp, #-2868]	; 0xfffff4cc
   3bd80:	str	r0, [fp, #-2872]	; 0xfffff4c8
   3bd84:	str	r0, [fp, #-2860]	; 0xfffff4d4
   3bd88:	str	r0, [fp, #-2864]	; 0xfffff4d0
   3bd8c:	str	r0, [fp, #-2856]	; 0xfffff4d8
   3bd90:	sub	r0, fp, #1360	; 0x550
   3bd94:	add	ip, r0, #32
   3bd98:	vld1.64	{d16-d17}, [r3]
   3bd9c:	vst1.64	{d16-d17}, [ip]
   3bda0:	add	r3, r0, #16
   3bda4:	vld1.64	{d16-d17}, [r2]
   3bda8:	vst1.64	{d16-d17}, [r3]
   3bdac:	vld1.64	{d16-d17}, [r1]
   3bdb0:	mov	r1, #48	; 0x30
   3bdb4:	vst1.64	{d16-d17}, [r0], r1
   3bdb8:	sub	lr, fp, #2048	; 0x800
   3bdbc:	vldr	d18, [lr, #-808]	; 0xfffffcd8
   3bdc0:	vstr	d18, [r0]
   3bdc4:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3bdc8:	ldr	r1, [r0]
   3bdcc:	ldr	r0, [r0, #4]
   3bdd0:	str	r0, [fp, #-1340]	; 0xfffffac4
   3bdd4:	str	r1, [fp, #-1344]	; 0xfffffac0
   3bdd8:	b	3bfc0 <__assert_fail@plt+0x29408>
   3bddc:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3bde0:	ldr	r1, [r0, #8]
   3bde4:	ldr	r0, [r0, #12]
   3bde8:	str	r0, [sp, #116]	; 0x74
   3bdec:	mov	r0, r1
   3bdf0:	ldr	r1, [sp, #116]	; 0x74
   3bdf4:	bl	3ea48 <__assert_fail@plt+0x2be90>
   3bdf8:	tst	r0, #1
   3bdfc:	beq	3be04 <__assert_fail@plt+0x2924c>
   3be00:	b	3c300 <__assert_fail@plt+0x29748>
   3be04:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3be08:	ldr	r0, [r0, #8]
   3be0c:	str	r0, [fp, #-1360]	; 0xfffffab0
   3be10:	movw	r0, #0
   3be14:	str	r0, [fp, #-1356]	; 0xfffffab4
   3be18:	b	3bfc0 <__assert_fail@plt+0x29408>
   3be1c:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3be20:	ldr	r1, [r0, #8]
   3be24:	ldr	r0, [r0, #12]
   3be28:	str	r0, [sp, #112]	; 0x70
   3be2c:	mov	r0, r1
   3be30:	ldr	r1, [sp, #112]	; 0x70
   3be34:	bl	3ea48 <__assert_fail@plt+0x2be90>
   3be38:	tst	r0, #1
   3be3c:	beq	3be44 <__assert_fail@plt+0x2928c>
   3be40:	b	3c300 <__assert_fail@plt+0x29748>
   3be44:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3be48:	ldr	r0, [r0, #8]
   3be4c:	str	r0, [fp, #-1360]	; 0xfffffab0
   3be50:	movw	r0, #0
   3be54:	str	r0, [fp, #-1356]	; 0xfffffab4
   3be58:	b	3bfc0 <__assert_fail@plt+0x29408>
   3be5c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   3be60:	ldr	r1, [fp, #-1288]	; 0xfffffaf8
   3be64:	ldr	r2, [r1, #20]
   3be68:	ldr	r3, [r1, #16]
   3be6c:	ldr	ip, [r1]
   3be70:	ldr	lr, [r1, #4]
   3be74:	ldr	r4, [r1, #8]
   3be78:	ldr	r1, [r1, #12]
   3be7c:	mov	r5, sp
   3be80:	str	r4, [r5]
   3be84:	str	r1, [r5, #4]
   3be88:	str	r3, [r5, #8]
   3be8c:	str	r2, [r5, #12]
   3be90:	mov	r2, ip
   3be94:	mov	r3, lr
   3be98:	bl	3ead8 <__assert_fail@plt+0x2bf20>
   3be9c:	b	3bfc0 <__assert_fail@plt+0x29408>
   3bea0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   3bea4:	ldr	r1, [fp, #-1288]	; 0xfffffaf8
   3bea8:	ldr	r2, [r1, #-56]	; 0xffffffc8
   3beac:	ldr	r3, [r1, #-52]	; 0xffffffcc
   3beb0:	ldr	ip, [r1, #-48]	; 0xffffffd0
   3beb4:	ldr	lr, [r1, #-44]	; 0xffffffd4
   3beb8:	ldr	r4, [r1, #-40]	; 0xffffffd8
   3bebc:	ldr	r1, [r1, #-36]	; 0xffffffdc
   3bec0:	mov	r5, sp
   3bec4:	str	r1, [r5, #12]
   3bec8:	str	r4, [r5, #8]
   3becc:	str	lr, [r5, #4]
   3bed0:	str	ip, [r5]
   3bed4:	bl	3ead8 <__assert_fail@plt+0x2bf20>
   3bed8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   3bedc:	ldr	r1, [fp, #-1288]	; 0xfffffaf8
   3bee0:	ldr	r2, [r1, #52]	; 0x34
   3bee4:	ldr	r3, [r1, #48]	; 0x30
   3bee8:	ldr	ip, [r1, #44]	; 0x2c
   3beec:	ldr	lr, [r1, #40]	; 0x28
   3bef0:	ldr	r4, [r1, #36]	; 0x24
   3bef4:	ldr	r5, [r1, #32]
   3bef8:	ldr	r6, [r1, #28]
   3befc:	ldr	r7, [r1, #24]
   3bf00:	ldr	r8, [r1, #20]
   3bf04:	ldr	r9, [r1, #16]
   3bf08:	ldr	sl, [r1]
   3bf0c:	str	r0, [sp, #108]	; 0x6c
   3bf10:	ldr	r0, [r1, #4]
   3bf14:	str	r0, [sp, #104]	; 0x68
   3bf18:	ldr	r0, [r1, #8]
   3bf1c:	ldr	r1, [r1, #12]
   3bf20:	str	r0, [sp, #100]	; 0x64
   3bf24:	mov	r0, sp
   3bf28:	str	r0, [sp, #96]	; 0x60
   3bf2c:	mov	r0, #1
   3bf30:	str	r1, [sp, #92]	; 0x5c
   3bf34:	ldr	r1, [sp, #96]	; 0x60
   3bf38:	str	r0, [r1, #48]	; 0x30
   3bf3c:	ldr	r0, [sp, #100]	; 0x64
   3bf40:	str	r0, [r1]
   3bf44:	ldr	r0, [sp, #92]	; 0x5c
   3bf48:	str	r0, [r1, #4]
   3bf4c:	str	r9, [r1, #8]
   3bf50:	str	r8, [r1, #12]
   3bf54:	str	r7, [r1, #16]
   3bf58:	str	r6, [r1, #20]
   3bf5c:	str	r5, [r1, #24]
   3bf60:	str	r4, [r1, #28]
   3bf64:	str	lr, [r1, #32]
   3bf68:	str	ip, [r1, #36]	; 0x24
   3bf6c:	str	r3, [r1, #40]	; 0x28
   3bf70:	str	r2, [r1, #44]	; 0x2c
   3bf74:	ldr	r0, [sp, #108]	; 0x6c
   3bf78:	mov	r2, sl
   3bf7c:	ldr	r3, [sp, #104]	; 0x68
   3bf80:	bl	3e38c <__assert_fail@plt+0x2b7d4>
   3bf84:	tst	r0, #1
   3bf88:	bne	3bf90 <__assert_fail@plt+0x293d8>
   3bf8c:	b	3c300 <__assert_fail@plt+0x29748>
   3bf90:	b	3bfc0 <__assert_fail@plt+0x29408>
   3bf94:	mvn	r0, #0
   3bf98:	str	r0, [fp, #-1356]	; 0xfffffab4
   3bf9c:	str	r0, [fp, #-1360]	; 0xfffffab0
   3bfa0:	b	3bfc0 <__assert_fail@plt+0x29408>
   3bfa4:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3bfa8:	ldr	r1, [r0, #8]
   3bfac:	ldr	r0, [r0, #12]
   3bfb0:	str	r0, [fp, #-1356]	; 0xfffffab4
   3bfb4:	str	r1, [fp, #-1360]	; 0xfffffab0
   3bfb8:	b	3bfc0 <__assert_fail@plt+0x29408>
   3bfbc:	b	3bfc0 <__assert_fail@plt+0x29408>
   3bfc0:	ldr	r0, [fp, #-1364]	; 0xfffffaac
   3bfc4:	ldr	r1, [fp, #-1288]	; 0xfffffaf8
   3bfc8:	rsb	r0, r0, #0
   3bfcc:	rsb	r0, r0, r0, lsl #3
   3bfd0:	add	r0, r1, r0, lsl #3
   3bfd4:	str	r0, [fp, #-1288]	; 0xfffffaf8
   3bfd8:	ldr	r0, [fp, #-1364]	; 0xfffffaac
   3bfdc:	ldr	r1, [fp, #-156]	; 0xffffff64
   3bfe0:	rsb	r2, r0, #0
   3bfe4:	sub	r0, r1, r0, lsl #1
   3bfe8:	str	r0, [fp, #-156]	; 0xffffff64
   3bfec:	movw	r0, #0
   3bff0:	str	r0, [fp, #-1364]	; 0xfffffaac
   3bff4:	ldr	r1, [fp, #-1288]	; 0xfffffaf8
   3bff8:	add	r1, r1, #56	; 0x38
   3bffc:	str	r1, [fp, #-1288]	; 0xfffffaf8
   3c000:	sub	r3, fp, #1360	; 0x550
   3c004:	str	r0, [sp, #88]	; 0x58
   3c008:	mov	r0, r1
   3c00c:	mov	r1, r3
   3c010:	movw	r3, #56	; 0x38
   3c014:	str	r2, [sp, #84]	; 0x54
   3c018:	mov	r2, r3
   3c01c:	bl	125c4 <memcpy@plt>
   3c020:	ldr	r0, [fp, #-1296]	; 0xfffffaf0
   3c024:	movw	r1, #51400	; 0xc8c8
   3c028:	movt	r1, #7
   3c02c:	add	r0, r1, r0
   3c030:	ldrb	r0, [r0]
   3c034:	sub	r0, r0, #28
   3c038:	str	r0, [fp, #-2908]	; 0xfffff4a4
   3c03c:	ldr	r0, [fp, #-2908]	; 0xfffff4a4
   3c040:	movw	r1, #51492	; 0xc924
   3c044:	movt	r1, #7
   3c048:	add	r0, r1, r0
   3c04c:	ldrsb	r0, [r0]
   3c050:	ldr	r1, [fp, #-156]	; 0xffffff64
   3c054:	ldrsh	r1, [r1]
   3c058:	add	r0, r0, r1
   3c05c:	str	r0, [fp, #-2912]	; 0xfffff4a0
   3c060:	ldr	r0, [fp, #-2912]	; 0xfffff4a0
   3c064:	ldr	r1, [sp, #88]	; 0x58
   3c068:	cmp	r1, r0
   3c06c:	bgt	3c0bc <__assert_fail@plt+0x29504>
   3c070:	ldr	r0, [fp, #-2912]	; 0xfffff4a0
   3c074:	cmp	r0, #112	; 0x70
   3c078:	bgt	3c0bc <__assert_fail@plt+0x29504>
   3c07c:	ldr	r0, [fp, #-2912]	; 0xfffff4a0
   3c080:	movw	r1, #50968	; 0xc718
   3c084:	movt	r1, #7
   3c088:	add	r0, r1, r0
   3c08c:	ldrsb	r0, [r0]
   3c090:	ldr	r1, [fp, #-156]	; 0xffffff64
   3c094:	ldrsh	r1, [r1]
   3c098:	cmp	r0, r1
   3c09c:	bne	3c0bc <__assert_fail@plt+0x29504>
   3c0a0:	ldr	r0, [fp, #-2912]	; 0xfffff4a0
   3c0a4:	movw	r1, #51081	; 0xc789
   3c0a8:	movt	r1, #7
   3c0ac:	add	r0, r1, r0
   3c0b0:	ldrb	r0, [r0]
   3c0b4:	str	r0, [sp, #80]	; 0x50
   3c0b8:	b	3c0d4 <__assert_fail@plt+0x2951c>
   3c0bc:	ldr	r0, [fp, #-2908]	; 0xfffff4a4
   3c0c0:	movw	r1, #51518	; 0xc93e
   3c0c4:	movt	r1, #7
   3c0c8:	add	r0, r1, r0
   3c0cc:	ldrsb	r0, [r0]
   3c0d0:	str	r0, [sp, #80]	; 0x50
   3c0d4:	ldr	r0, [sp, #80]	; 0x50
   3c0d8:	str	r0, [fp, #-104]	; 0xffffff98
   3c0dc:	b	327d0 <__assert_fail@plt+0x1fc18>
   3c0e0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   3c0e4:	cmn	r0, #2
   3c0e8:	bne	3c0f8 <__assert_fail@plt+0x29540>
   3c0ec:	mvn	r0, #1
   3c0f0:	str	r0, [sp, #76]	; 0x4c
   3c0f4:	b	3c138 <__assert_fail@plt+0x29580>
   3c0f8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   3c0fc:	movw	r1, #277	; 0x115
   3c100:	cmp	r0, r1
   3c104:	bhi	3c124 <__assert_fail@plt+0x2956c>
   3c108:	ldr	r0, [fp, #-40]	; 0xffffffd8
   3c10c:	movw	r1, #50690	; 0xc602
   3c110:	movt	r1, #7
   3c114:	add	r0, r1, r0
   3c118:	ldrb	r0, [r0]
   3c11c:	str	r0, [sp, #72]	; 0x48
   3c120:	b	3c130 <__assert_fail@plt+0x29578>
   3c124:	movw	r0, #2
   3c128:	str	r0, [sp, #72]	; 0x48
   3c12c:	b	3c130 <__assert_fail@plt+0x29578>
   3c130:	ldr	r0, [sp, #72]	; 0x48
   3c134:	str	r0, [sp, #76]	; 0x4c
   3c138:	ldr	r0, [sp, #76]	; 0x4c
   3c13c:	str	r0, [fp, #-1304]	; 0xfffffae8
   3c140:	ldr	r0, [fp, #-108]	; 0xffffff94
   3c144:	cmp	r0, #0
   3c148:	bne	3c16c <__assert_fail@plt+0x295b4>
   3c14c:	ldr	r0, [fp, #-100]	; 0xffffff9c
   3c150:	add	r0, r0, #1
   3c154:	str	r0, [fp, #-100]	; 0xffffff9c
   3c158:	ldr	r0, [fp, #-36]	; 0xffffffdc
   3c15c:	movw	r1, #53698	; 0xd1c2
   3c160:	movt	r1, #7
   3c164:	bl	3ed10 <__assert_fail@plt+0x2c158>
   3c168:	str	r0, [sp, #68]	; 0x44
   3c16c:	ldr	r0, [fp, #-108]	; 0xffffff94
   3c170:	cmp	r0, #3
   3c174:	bne	3c1bc <__assert_fail@plt+0x29604>
   3c178:	ldr	r0, [fp, #-40]	; 0xffffffd8
   3c17c:	cmp	r0, #0
   3c180:	bgt	3c198 <__assert_fail@plt+0x295e0>
   3c184:	ldr	r0, [fp, #-40]	; 0xffffffd8
   3c188:	cmp	r0, #0
   3c18c:	bne	3c194 <__assert_fail@plt+0x295dc>
   3c190:	b	3c300 <__assert_fail@plt+0x29748>
   3c194:	b	3c1b8 <__assert_fail@plt+0x29600>
   3c198:	ldr	r1, [fp, #-1304]	; 0xfffffae8
   3c19c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   3c1a0:	movw	r0, #53711	; 0xd1cf
   3c1a4:	movt	r0, #7
   3c1a8:	sub	r2, fp, #96	; 0x60
   3c1ac:	bl	3ed28 <__assert_fail@plt+0x2c170>
   3c1b0:	mvn	r0, #1
   3c1b4:	str	r0, [fp, #-40]	; 0xffffffd8
   3c1b8:	b	3c1bc <__assert_fail@plt+0x29604>
   3c1bc:	b	3c1c0 <__assert_fail@plt+0x29608>
   3c1c0:	movw	r0, #3
   3c1c4:	str	r0, [fp, #-108]	; 0xffffff94
   3c1c8:	ldr	r0, [fp, #-104]	; 0xffffff98
   3c1cc:	movw	r1, #50576	; 0xc590
   3c1d0:	movt	r1, #7
   3c1d4:	add	r0, r1, r0
   3c1d8:	ldrsb	r0, [r0]
   3c1dc:	str	r0, [fp, #-1296]	; 0xfffffaf0
   3c1e0:	ldr	r0, [fp, #-1296]	; 0xfffffaf0
   3c1e4:	cmn	r0, #93	; 0x5d
   3c1e8:	beq	3c264 <__assert_fail@plt+0x296ac>
   3c1ec:	ldr	r0, [fp, #-1296]	; 0xfffffaf0
   3c1f0:	add	r0, r0, #1
   3c1f4:	str	r0, [fp, #-1296]	; 0xfffffaf0
   3c1f8:	ldr	r0, [fp, #-1296]	; 0xfffffaf0
   3c1fc:	movw	r1, #0
   3c200:	cmp	r1, r0
   3c204:	bgt	3c260 <__assert_fail@plt+0x296a8>
   3c208:	ldr	r0, [fp, #-1296]	; 0xfffffaf0
   3c20c:	cmp	r0, #112	; 0x70
   3c210:	bgt	3c260 <__assert_fail@plt+0x296a8>
   3c214:	ldr	r0, [fp, #-1296]	; 0xfffffaf0
   3c218:	movw	r1, #50968	; 0xc718
   3c21c:	movt	r1, #7
   3c220:	add	r0, r1, r0
   3c224:	ldrsb	r0, [r0]
   3c228:	cmp	r0, #1
   3c22c:	bne	3c260 <__assert_fail@plt+0x296a8>
   3c230:	ldr	r0, [fp, #-1296]	; 0xfffffaf0
   3c234:	movw	r1, #51081	; 0xc789
   3c238:	movt	r1, #7
   3c23c:	add	r0, r1, r0
   3c240:	ldrb	r0, [r0]
   3c244:	str	r0, [fp, #-1296]	; 0xfffffaf0
   3c248:	ldr	r0, [fp, #-1296]	; 0xfffffaf0
   3c24c:	movw	r1, #0
   3c250:	cmp	r1, r0
   3c254:	bge	3c25c <__assert_fail@plt+0x296a4>
   3c258:	b	3c2d0 <__assert_fail@plt+0x29718>
   3c25c:	b	3c260 <__assert_fail@plt+0x296a8>
   3c260:	b	3c264 <__assert_fail@plt+0x296ac>
   3c264:	ldr	r0, [fp, #-156]	; 0xffffff64
   3c268:	ldr	r1, [fp, #-152]	; 0xffffff68
   3c26c:	cmp	r0, r1
   3c270:	bne	3c278 <__assert_fail@plt+0x296c0>
   3c274:	b	3c300 <__assert_fail@plt+0x29748>
   3c278:	ldr	r0, [fp, #-104]	; 0xffffff98
   3c27c:	movw	r1, #51544	; 0xc958
   3c280:	movt	r1, #7
   3c284:	add	r0, r1, r0
   3c288:	ldrb	r1, [r0]
   3c28c:	ldr	r2, [fp, #-1288]	; 0xfffffaf8
   3c290:	ldr	r3, [fp, #-36]	; 0xffffffdc
   3c294:	movw	r0, #53729	; 0xd1e1
   3c298:	movt	r0, #7
   3c29c:	bl	3ed28 <__assert_fail@plt+0x2c170>
   3c2a0:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3c2a4:	mvn	r1, #55	; 0x37
   3c2a8:	add	r0, r0, r1
   3c2ac:	str	r0, [fp, #-1288]	; 0xfffffaf8
   3c2b0:	ldr	r0, [fp, #-156]	; 0xffffff64
   3c2b4:	mvn	r1, #1
   3c2b8:	add	r0, r0, r1
   3c2bc:	str	r0, [fp, #-156]	; 0xffffff64
   3c2c0:	ldr	r0, [fp, #-156]	; 0xffffff64
   3c2c4:	ldrsh	r0, [r0]
   3c2c8:	str	r0, [fp, #-104]	; 0xffffff98
   3c2cc:	b	3c1c8 <__assert_fail@plt+0x29610>
   3c2d0:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3c2d4:	add	r0, r0, #56	; 0x38
   3c2d8:	str	r0, [fp, #-1288]	; 0xfffffaf8
   3c2dc:	sub	r1, fp, #96	; 0x60
   3c2e0:	movw	r2, #56	; 0x38
   3c2e4:	bl	125c4 <memcpy@plt>
   3c2e8:	ldr	r0, [fp, #-1296]	; 0xfffffaf0
   3c2ec:	str	r0, [fp, #-104]	; 0xffffff98
   3c2f0:	b	327d0 <__assert_fail@plt+0x1fc18>
   3c2f4:	movw	r0, #0
   3c2f8:	str	r0, [fp, #-1300]	; 0xfffffaec
   3c2fc:	b	3c328 <__assert_fail@plt+0x29770>
   3c300:	movw	r0, #1
   3c304:	str	r0, [fp, #-1300]	; 0xfffffaec
   3c308:	b	3c328 <__assert_fail@plt+0x29770>
   3c30c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   3c310:	movw	r1, #53744	; 0xd1f0
   3c314:	movt	r1, #7
   3c318:	bl	3ed10 <__assert_fail@plt+0x2c158>
   3c31c:	movw	r1, #2
   3c320:	str	r1, [fp, #-1300]	; 0xfffffaec
   3c324:	str	r0, [sp, #64]	; 0x40
   3c328:	ldr	r0, [fp, #-40]	; 0xffffffd8
   3c32c:	cmn	r0, #2
   3c330:	beq	3c38c <__assert_fail@plt+0x297d4>
   3c334:	ldr	r0, [fp, #-40]	; 0xffffffd8
   3c338:	movw	r1, #277	; 0x115
   3c33c:	cmp	r0, r1
   3c340:	bhi	3c360 <__assert_fail@plt+0x297a8>
   3c344:	ldr	r0, [fp, #-40]	; 0xffffffd8
   3c348:	movw	r1, #50690	; 0xc602
   3c34c:	movt	r1, #7
   3c350:	add	r0, r1, r0
   3c354:	ldrb	r0, [r0]
   3c358:	str	r0, [sp, #60]	; 0x3c
   3c35c:	b	3c36c <__assert_fail@plt+0x297b4>
   3c360:	movw	r0, #2
   3c364:	str	r0, [sp, #60]	; 0x3c
   3c368:	b	3c36c <__assert_fail@plt+0x297b4>
   3c36c:	ldr	r0, [sp, #60]	; 0x3c
   3c370:	str	r0, [fp, #-1304]	; 0xfffffae8
   3c374:	ldr	r1, [fp, #-1304]	; 0xfffffae8
   3c378:	ldr	r3, [fp, #-36]	; 0xffffffdc
   3c37c:	movw	r0, #53761	; 0xd201
   3c380:	movt	r0, #7
   3c384:	sub	r2, fp, #96	; 0x60
   3c388:	bl	3ed28 <__assert_fail@plt+0x2c170>
   3c38c:	ldr	r0, [fp, #-1364]	; 0xfffffaac
   3c390:	ldr	r1, [fp, #-1288]	; 0xfffffaf8
   3c394:	rsb	r0, r0, #0
   3c398:	rsb	r0, r0, r0, lsl #3
   3c39c:	add	r0, r1, r0, lsl #3
   3c3a0:	str	r0, [fp, #-1288]	; 0xfffffaf8
   3c3a4:	ldr	r0, [fp, #-1364]	; 0xfffffaac
   3c3a8:	ldr	r1, [fp, #-156]	; 0xffffff64
   3c3ac:	rsb	r2, r0, #0
   3c3b0:	sub	r0, r1, r0, lsl #1
   3c3b4:	str	r0, [fp, #-156]	; 0xffffff64
   3c3b8:	str	r2, [sp, #56]	; 0x38
   3c3bc:	ldr	r0, [fp, #-156]	; 0xffffff64
   3c3c0:	ldr	r1, [fp, #-152]	; 0xffffff68
   3c3c4:	cmp	r0, r1
   3c3c8:	beq	3c41c <__assert_fail@plt+0x29864>
   3c3cc:	ldr	r0, [fp, #-156]	; 0xffffff64
   3c3d0:	ldrsh	r0, [r0]
   3c3d4:	movw	r1, #51544	; 0xc958
   3c3d8:	movt	r1, #7
   3c3dc:	add	r0, r1, r0
   3c3e0:	ldrb	r1, [r0]
   3c3e4:	ldr	r2, [fp, #-1288]	; 0xfffffaf8
   3c3e8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   3c3ec:	movw	r0, #53791	; 0xd21f
   3c3f0:	movt	r0, #7
   3c3f4:	bl	3ed28 <__assert_fail@plt+0x2c170>
   3c3f8:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
   3c3fc:	mvn	r1, #55	; 0x37
   3c400:	add	r0, r0, r1
   3c404:	str	r0, [fp, #-1288]	; 0xfffffaf8
   3c408:	ldr	r0, [fp, #-156]	; 0xffffff64
   3c40c:	mvn	r1, #1
   3c410:	add	r0, r0, r1
   3c414:	str	r0, [fp, #-156]	; 0xffffff64
   3c418:	b	3c3bc <__assert_fail@plt+0x29804>
   3c41c:	sub	r0, fp, #148	; 0x94
   3c420:	ldr	r1, [fp, #-152]	; 0xffffff68
   3c424:	cmp	r1, r0
   3c428:	beq	3c434 <__assert_fail@plt+0x2987c>
   3c42c:	ldr	r0, [fp, #-152]	; 0xffffff68
   3c430:	bl	50c68 <__assert_fail@plt+0x3e0b0>
   3c434:	ldr	r0, [fp, #-1300]	; 0xfffffaec
   3c438:	sub	sp, fp, #28
   3c43c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3c440:	push	{fp, lr}
   3c444:	mov	fp, sp
   3c448:	sub	sp, sp, #152	; 0x98
   3c44c:	str	r0, [fp, #-8]
   3c450:	str	r1, [fp, #-12]
   3c454:	b	3c458 <__assert_fail@plt+0x298a0>
   3c458:	ldr	r0, [fp, #-12]
   3c45c:	ldr	r0, [r0]
   3c460:	ldrb	r0, [r0]
   3c464:	strb	r0, [fp, #-13]
   3c468:	ldrb	r0, [fp, #-13]
   3c46c:	bl	71504 <__assert_fail@plt+0x5e94c>
   3c470:	tst	r0, #1
   3c474:	beq	3c48c <__assert_fail@plt+0x298d4>
   3c478:	ldr	r0, [fp, #-12]
   3c47c:	ldr	r1, [r0]
   3c480:	add	r1, r1, #1
   3c484:	str	r1, [r0]
   3c488:	b	3c458 <__assert_fail@plt+0x298a0>
   3c48c:	ldrb	r0, [fp, #-13]
   3c490:	bl	71214 <__assert_fail@plt+0x5e65c>
   3c494:	tst	r0, #1
   3c498:	bne	3c4b4 <__assert_fail@plt+0x298fc>
   3c49c:	ldrb	r0, [fp, #-13]
   3c4a0:	cmp	r0, #45	; 0x2d
   3c4a4:	beq	3c4b4 <__assert_fail@plt+0x298fc>
   3c4a8:	ldrb	r0, [fp, #-13]
   3c4ac:	cmp	r0, #43	; 0x2b
   3c4b0:	bne	3d4f0 <__assert_fail@plt+0x2a938>
   3c4b4:	ldr	r0, [fp, #-12]
   3c4b8:	ldr	r0, [r0]
   3c4bc:	str	r0, [fp, #-20]	; 0xffffffec
   3c4c0:	ldrb	r0, [fp, #-13]
   3c4c4:	cmp	r0, #45	; 0x2d
   3c4c8:	beq	3c4d8 <__assert_fail@plt+0x29920>
   3c4cc:	ldrb	r0, [fp, #-13]
   3c4d0:	cmp	r0, #43	; 0x2b
   3c4d4:	bne	3c540 <__assert_fail@plt+0x29988>
   3c4d8:	ldrb	r0, [fp, #-13]
   3c4dc:	cmp	r0, #45	; 0x2d
   3c4e0:	movw	r0, #0
   3c4e4:	moveq	r0, #1
   3c4e8:	tst	r0, #1
   3c4ec:	mvn	r0, #0
   3c4f0:	moveq	r0, #1
   3c4f4:	str	r0, [fp, #-24]	; 0xffffffe8
   3c4f8:	ldr	r0, [fp, #-20]	; 0xffffffec
   3c4fc:	add	r1, r0, #1
   3c500:	str	r1, [fp, #-20]	; 0xffffffec
   3c504:	ldr	r2, [fp, #-12]
   3c508:	str	r1, [r2]
   3c50c:	ldrb	r0, [r0, #1]
   3c510:	strb	r0, [fp, #-13]
   3c514:	ldrb	r0, [fp, #-13]
   3c518:	bl	71504 <__assert_fail@plt+0x5e94c>
   3c51c:	tst	r0, #1
   3c520:	beq	3c528 <__assert_fail@plt+0x29970>
   3c524:	b	3c4f8 <__assert_fail@plt+0x29940>
   3c528:	ldrb	r0, [fp, #-13]
   3c52c:	bl	71214 <__assert_fail@plt+0x5e65c>
   3c530:	tst	r0, #1
   3c534:	bne	3c53c <__assert_fail@plt+0x29984>
   3c538:	b	3c454 <__assert_fail@plt+0x2989c>
   3c53c:	b	3c548 <__assert_fail@plt+0x29990>
   3c540:	movw	r0, #0
   3c544:	str	r0, [fp, #-24]	; 0xffffffe8
   3c548:	movw	r0, #0
   3c54c:	str	r0, [fp, #-28]	; 0xffffffe4
   3c550:	b	3c7cc <__assert_fail@plt+0x29c14>
   3c554:	b	3c558 <__assert_fail@plt+0x299a0>
   3c558:	b	3c604 <__assert_fail@plt+0x29a4c>
   3c55c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3c560:	cmp	r0, #0
   3c564:	bge	3c598 <__assert_fail@plt+0x299e0>
   3c568:	b	3c56c <__assert_fail@plt+0x299b4>
   3c56c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3c570:	cmp	r0, #12
   3c574:	blt	3c664 <__assert_fail@plt+0x29aac>
   3c578:	b	3c67c <__assert_fail@plt+0x29ac4>
   3c57c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3c580:	mvn	r1, #0
   3c584:	sub	r0, r1, r0
   3c588:	mvn	r1, #11
   3c58c:	cmp	r1, r0
   3c590:	ble	3c664 <__assert_fail@plt+0x29aac>
   3c594:	b	3c67c <__assert_fail@plt+0x29ac4>
   3c598:	b	3c59c <__assert_fail@plt+0x299e4>
   3c59c:	b	3c5f0 <__assert_fail@plt+0x29a38>
   3c5a0:	b	3c5f0 <__assert_fail@plt+0x29a38>
   3c5a4:	b	3c5f0 <__assert_fail@plt+0x29a38>
   3c5a8:	b	3c5ac <__assert_fail@plt+0x299f4>
   3c5ac:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3c5b0:	mvn	r1, #127	; 0x7f
   3c5b4:	add	r0, r0, r1
   3c5b8:	movw	r1, #0
   3c5bc:	cmp	r1, r0
   3c5c0:	blt	3c664 <__assert_fail@plt+0x29aac>
   3c5c4:	b	3c67c <__assert_fail@plt+0x29ac4>
   3c5c8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3c5cc:	movw	r1, #0
   3c5d0:	cmp	r1, r0
   3c5d4:	bge	3c67c <__assert_fail@plt+0x29ac4>
   3c5d8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3c5dc:	sub	r0, r0, #1
   3c5e0:	movw	r1, #127	; 0x7f
   3c5e4:	cmp	r1, r0
   3c5e8:	blt	3c664 <__assert_fail@plt+0x29aac>
   3c5ec:	b	3c67c <__assert_fail@plt+0x29ac4>
   3c5f0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3c5f4:	mvn	r1, #11
   3c5f8:	cmp	r1, r0
   3c5fc:	blt	3c664 <__assert_fail@plt+0x29aac>
   3c600:	b	3c67c <__assert_fail@plt+0x29ac4>
   3c604:	b	3c60c <__assert_fail@plt+0x29a54>
   3c608:	b	3c67c <__assert_fail@plt+0x29ac4>
   3c60c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3c610:	cmp	r0, #0
   3c614:	bge	3c654 <__assert_fail@plt+0x29a9c>
   3c618:	b	3c61c <__assert_fail@plt+0x29a64>
   3c61c:	b	3c63c <__assert_fail@plt+0x29a84>
   3c620:	b	3c63c <__assert_fail@plt+0x29a84>
   3c624:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3c628:	cmn	r0, #1
   3c62c:	bne	3c63c <__assert_fail@plt+0x29a84>
   3c630:	b	3c634 <__assert_fail@plt+0x29a7c>
   3c634:	b	3c67c <__assert_fail@plt+0x29ac4>
   3c638:	b	3c67c <__assert_fail@plt+0x29ac4>
   3c63c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3c640:	mvn	r1, #127	; 0x7f
   3c644:	sdiv	r0, r1, r0
   3c648:	cmp	r0, #10
   3c64c:	blt	3c664 <__assert_fail@plt+0x29aac>
   3c650:	b	3c67c <__assert_fail@plt+0x29ac4>
   3c654:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3c658:	movw	r1, #12
   3c65c:	cmp	r1, r0
   3c660:	bge	3c67c <__assert_fail@plt+0x29ac4>
   3c664:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3c668:	movw	r1, #10
   3c66c:	mul	r0, r0, r1
   3c670:	sxtb	r0, r0
   3c674:	str	r0, [fp, #-28]	; 0xffffffe4
   3c678:	b	3d204 <__assert_fail@plt+0x2a64c>
   3c67c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3c680:	movw	r1, #10
   3c684:	mul	r0, r0, r1
   3c688:	sxtb	r0, r0
   3c68c:	str	r0, [fp, #-28]	; 0xffffffe4
   3c690:	b	3d210 <__assert_fail@plt+0x2a658>
   3c694:	b	3c73c <__assert_fail@plt+0x29b84>
   3c698:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3c69c:	cmp	r0, #0
   3c6a0:	bge	3c6d4 <__assert_fail@plt+0x29b1c>
   3c6a4:	b	3c6a8 <__assert_fail@plt+0x29af0>
   3c6a8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3c6ac:	cmp	r0, #25
   3c6b0:	blt	3c79c <__assert_fail@plt+0x29be4>
   3c6b4:	b	3c7b4 <__assert_fail@plt+0x29bfc>
   3c6b8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3c6bc:	mvn	r1, #0
   3c6c0:	sub	r0, r1, r0
   3c6c4:	mvn	r1, #24
   3c6c8:	cmp	r1, r0
   3c6cc:	ble	3c79c <__assert_fail@plt+0x29be4>
   3c6d0:	b	3c7b4 <__assert_fail@plt+0x29bfc>
   3c6d4:	b	3c6d8 <__assert_fail@plt+0x29b20>
   3c6d8:	b	3c728 <__assert_fail@plt+0x29b70>
   3c6dc:	b	3c728 <__assert_fail@plt+0x29b70>
   3c6e0:	b	3c728 <__assert_fail@plt+0x29b70>
   3c6e4:	b	3c6e8 <__assert_fail@plt+0x29b30>
   3c6e8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3c6ec:	add	r0, r0, #0
   3c6f0:	movw	r1, #0
   3c6f4:	cmp	r1, r0
   3c6f8:	blt	3c79c <__assert_fail@plt+0x29be4>
   3c6fc:	b	3c7b4 <__assert_fail@plt+0x29bfc>
   3c700:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3c704:	movw	r1, #0
   3c708:	cmp	r1, r0
   3c70c:	bge	3c7b4 <__assert_fail@plt+0x29bfc>
   3c710:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3c714:	sub	r0, r0, #1
   3c718:	mvn	r1, #0
   3c71c:	cmp	r1, r0
   3c720:	blt	3c79c <__assert_fail@plt+0x29be4>
   3c724:	b	3c7b4 <__assert_fail@plt+0x29bfc>
   3c728:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3c72c:	movw	r1, #0
   3c730:	cmp	r1, r0
   3c734:	blt	3c79c <__assert_fail@plt+0x29be4>
   3c738:	b	3c7b4 <__assert_fail@plt+0x29bfc>
   3c73c:	b	3c744 <__assert_fail@plt+0x29b8c>
   3c740:	b	3c7b4 <__assert_fail@plt+0x29bfc>
   3c744:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3c748:	cmp	r0, #0
   3c74c:	bge	3c78c <__assert_fail@plt+0x29bd4>
   3c750:	b	3c754 <__assert_fail@plt+0x29b9c>
   3c754:	b	3c774 <__assert_fail@plt+0x29bbc>
   3c758:	b	3c774 <__assert_fail@plt+0x29bbc>
   3c75c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3c760:	cmn	r0, #1
   3c764:	bne	3c774 <__assert_fail@plt+0x29bbc>
   3c768:	b	3c76c <__assert_fail@plt+0x29bb4>
   3c76c:	b	3c79c <__assert_fail@plt+0x29be4>
   3c770:	b	3c79c <__assert_fail@plt+0x29be4>
   3c774:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3c778:	movw	r1, #0
   3c77c:	sdiv	r0, r1, r0
   3c780:	cmp	r0, #10
   3c784:	blt	3c79c <__assert_fail@plt+0x29be4>
   3c788:	b	3c7b4 <__assert_fail@plt+0x29bfc>
   3c78c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3c790:	movw	r1, #25
   3c794:	cmp	r1, r0
   3c798:	bge	3c7b4 <__assert_fail@plt+0x29bfc>
   3c79c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3c7a0:	movw	r1, #10
   3c7a4:	mul	r0, r0, r1
   3c7a8:	and	r0, r0, #255	; 0xff
   3c7ac:	str	r0, [fp, #-28]	; 0xffffffe4
   3c7b0:	b	3d204 <__assert_fail@plt+0x2a64c>
   3c7b4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3c7b8:	movw	r1, #10
   3c7bc:	mul	r0, r0, r1
   3c7c0:	and	r0, r0, #255	; 0xff
   3c7c4:	str	r0, [fp, #-28]	; 0xffffffe4
   3c7c8:	b	3d210 <__assert_fail@plt+0x2a658>
   3c7cc:	b	3ca50 <__assert_fail@plt+0x29e98>
   3c7d0:	b	3c7d4 <__assert_fail@plt+0x29c1c>
   3c7d4:	b	3c884 <__assert_fail@plt+0x29ccc>
   3c7d8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3c7dc:	cmp	r0, #0
   3c7e0:	bge	3c818 <__assert_fail@plt+0x29c60>
   3c7e4:	b	3c7e8 <__assert_fail@plt+0x29c30>
   3c7e8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3c7ec:	movw	r1, #3276	; 0xccc
   3c7f0:	cmp	r0, r1
   3c7f4:	blt	3c8e4 <__assert_fail@plt+0x29d2c>
   3c7f8:	b	3c8fc <__assert_fail@plt+0x29d44>
   3c7fc:	ldr	r0, [pc, #3812]	; 3d6e8 <__assert_fail@plt+0x2ab30>
   3c800:	ldr	r1, [fp, #-28]	; 0xffffffe4
   3c804:	mvn	r2, #0
   3c808:	sub	r1, r2, r1
   3c80c:	cmp	r0, r1
   3c810:	ble	3c8e4 <__assert_fail@plt+0x29d2c>
   3c814:	b	3c8fc <__assert_fail@plt+0x29d44>
   3c818:	b	3c81c <__assert_fail@plt+0x29c64>
   3c81c:	b	3c870 <__assert_fail@plt+0x29cb8>
   3c820:	b	3c870 <__assert_fail@plt+0x29cb8>
   3c824:	b	3c870 <__assert_fail@plt+0x29cb8>
   3c828:	b	3c82c <__assert_fail@plt+0x29c74>
   3c82c:	ldr	r0, [pc, #3760]	; 3d6e4 <__assert_fail@plt+0x2ab2c>
   3c830:	ldr	r1, [fp, #-28]	; 0xffffffe4
   3c834:	add	r0, r1, r0
   3c838:	movw	r1, #0
   3c83c:	cmp	r1, r0
   3c840:	blt	3c8e4 <__assert_fail@plt+0x29d2c>
   3c844:	b	3c8fc <__assert_fail@plt+0x29d44>
   3c848:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3c84c:	movw	r1, #0
   3c850:	cmp	r1, r0
   3c854:	bge	3c8fc <__assert_fail@plt+0x29d44>
   3c858:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3c85c:	sub	r0, r0, #1
   3c860:	movw	r1, #32767	; 0x7fff
   3c864:	cmp	r1, r0
   3c868:	blt	3c8e4 <__assert_fail@plt+0x29d2c>
   3c86c:	b	3c8fc <__assert_fail@plt+0x29d44>
   3c870:	ldr	r0, [pc, #3696]	; 3d6e8 <__assert_fail@plt+0x2ab30>
   3c874:	ldr	r1, [fp, #-28]	; 0xffffffe4
   3c878:	cmp	r0, r1
   3c87c:	blt	3c8e4 <__assert_fail@plt+0x29d2c>
   3c880:	b	3c8fc <__assert_fail@plt+0x29d44>
   3c884:	b	3c88c <__assert_fail@plt+0x29cd4>
   3c888:	b	3c8fc <__assert_fail@plt+0x29d44>
   3c88c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3c890:	cmp	r0, #0
   3c894:	bge	3c8d4 <__assert_fail@plt+0x29d1c>
   3c898:	b	3c89c <__assert_fail@plt+0x29ce4>
   3c89c:	b	3c8bc <__assert_fail@plt+0x29d04>
   3c8a0:	b	3c8bc <__assert_fail@plt+0x29d04>
   3c8a4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3c8a8:	cmn	r0, #1
   3c8ac:	bne	3c8bc <__assert_fail@plt+0x29d04>
   3c8b0:	b	3c8b4 <__assert_fail@plt+0x29cfc>
   3c8b4:	b	3c8fc <__assert_fail@plt+0x29d44>
   3c8b8:	b	3c8fc <__assert_fail@plt+0x29d44>
   3c8bc:	ldr	r0, [pc, #3616]	; 3d6e4 <__assert_fail@plt+0x2ab2c>
   3c8c0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   3c8c4:	sdiv	r0, r0, r1
   3c8c8:	cmp	r0, #10
   3c8cc:	blt	3c8e4 <__assert_fail@plt+0x29d2c>
   3c8d0:	b	3c8fc <__assert_fail@plt+0x29d44>
   3c8d4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3c8d8:	movw	r1, #3276	; 0xccc
   3c8dc:	cmp	r1, r0
   3c8e0:	bge	3c8fc <__assert_fail@plt+0x29d44>
   3c8e4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3c8e8:	movw	r1, #10
   3c8ec:	mul	r0, r0, r1
   3c8f0:	sxth	r0, r0
   3c8f4:	str	r0, [fp, #-28]	; 0xffffffe4
   3c8f8:	b	3d204 <__assert_fail@plt+0x2a64c>
   3c8fc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3c900:	movw	r1, #10
   3c904:	mul	r0, r0, r1
   3c908:	sxth	r0, r0
   3c90c:	str	r0, [fp, #-28]	; 0xffffffe4
   3c910:	b	3d210 <__assert_fail@plt+0x2a658>
   3c914:	b	3c9c0 <__assert_fail@plt+0x29e08>
   3c918:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3c91c:	cmp	r0, #0
   3c920:	bge	3c958 <__assert_fail@plt+0x29da0>
   3c924:	b	3c928 <__assert_fail@plt+0x29d70>
   3c928:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3c92c:	movw	r1, #6553	; 0x1999
   3c930:	cmp	r0, r1
   3c934:	blt	3ca20 <__assert_fail@plt+0x29e68>
   3c938:	b	3ca38 <__assert_fail@plt+0x29e80>
   3c93c:	ldr	r0, [pc, #3496]	; 3d6ec <__assert_fail@plt+0x2ab34>
   3c940:	ldr	r1, [fp, #-28]	; 0xffffffe4
   3c944:	mvn	r2, #0
   3c948:	sub	r1, r2, r1
   3c94c:	cmp	r0, r1
   3c950:	ble	3ca20 <__assert_fail@plt+0x29e68>
   3c954:	b	3ca38 <__assert_fail@plt+0x29e80>
   3c958:	b	3c95c <__assert_fail@plt+0x29da4>
   3c95c:	b	3c9ac <__assert_fail@plt+0x29df4>
   3c960:	b	3c9ac <__assert_fail@plt+0x29df4>
   3c964:	b	3c9ac <__assert_fail@plt+0x29df4>
   3c968:	b	3c96c <__assert_fail@plt+0x29db4>
   3c96c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3c970:	add	r0, r0, #0
   3c974:	movw	r1, #0
   3c978:	cmp	r1, r0
   3c97c:	blt	3ca20 <__assert_fail@plt+0x29e68>
   3c980:	b	3ca38 <__assert_fail@plt+0x29e80>
   3c984:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3c988:	movw	r1, #0
   3c98c:	cmp	r1, r0
   3c990:	bge	3ca38 <__assert_fail@plt+0x29e80>
   3c994:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3c998:	sub	r0, r0, #1
   3c99c:	mvn	r1, #0
   3c9a0:	cmp	r1, r0
   3c9a4:	blt	3ca20 <__assert_fail@plt+0x29e68>
   3c9a8:	b	3ca38 <__assert_fail@plt+0x29e80>
   3c9ac:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3c9b0:	movw	r1, #0
   3c9b4:	cmp	r1, r0
   3c9b8:	blt	3ca20 <__assert_fail@plt+0x29e68>
   3c9bc:	b	3ca38 <__assert_fail@plt+0x29e80>
   3c9c0:	b	3c9c8 <__assert_fail@plt+0x29e10>
   3c9c4:	b	3ca38 <__assert_fail@plt+0x29e80>
   3c9c8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3c9cc:	cmp	r0, #0
   3c9d0:	bge	3ca10 <__assert_fail@plt+0x29e58>
   3c9d4:	b	3c9d8 <__assert_fail@plt+0x29e20>
   3c9d8:	b	3c9f8 <__assert_fail@plt+0x29e40>
   3c9dc:	b	3c9f8 <__assert_fail@plt+0x29e40>
   3c9e0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3c9e4:	cmn	r0, #1
   3c9e8:	bne	3c9f8 <__assert_fail@plt+0x29e40>
   3c9ec:	b	3c9f0 <__assert_fail@plt+0x29e38>
   3c9f0:	b	3ca20 <__assert_fail@plt+0x29e68>
   3c9f4:	b	3ca20 <__assert_fail@plt+0x29e68>
   3c9f8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3c9fc:	movw	r1, #0
   3ca00:	sdiv	r0, r1, r0
   3ca04:	cmp	r0, #10
   3ca08:	blt	3ca20 <__assert_fail@plt+0x29e68>
   3ca0c:	b	3ca38 <__assert_fail@plt+0x29e80>
   3ca10:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3ca14:	movw	r1, #6553	; 0x1999
   3ca18:	cmp	r1, r0
   3ca1c:	bge	3ca38 <__assert_fail@plt+0x29e80>
   3ca20:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3ca24:	movw	r1, #10
   3ca28:	mul	r0, r0, r1
   3ca2c:	uxth	r0, r0
   3ca30:	str	r0, [fp, #-28]	; 0xffffffe4
   3ca34:	b	3d204 <__assert_fail@plt+0x2a64c>
   3ca38:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3ca3c:	movw	r1, #10
   3ca40:	mul	r0, r0, r1
   3ca44:	uxth	r0, r0
   3ca48:	str	r0, [fp, #-28]	; 0xffffffe4
   3ca4c:	b	3d210 <__assert_fail@plt+0x2a658>
   3ca50:	b	3ca54 <__assert_fail@plt+0x29e9c>
   3ca54:	b	3ca58 <__assert_fail@plt+0x29ea0>
   3ca58:	b	3caf8 <__assert_fail@plt+0x29f40>
   3ca5c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3ca60:	cmp	r0, #0
   3ca64:	bge	3ca9c <__assert_fail@plt+0x29ee4>
   3ca68:	b	3ca6c <__assert_fail@plt+0x29eb4>
   3ca6c:	ldr	r0, [pc, #3168]	; 3d6d4 <__assert_fail@plt+0x2ab1c>
   3ca70:	ldr	r1, [fp, #-28]	; 0xffffffe4
   3ca74:	cmp	r1, r0
   3ca78:	blt	3cb4c <__assert_fail@plt+0x29f94>
   3ca7c:	b	3cb60 <__assert_fail@plt+0x29fa8>
   3ca80:	ldr	r0, [pc, #3156]	; 3d6dc <__assert_fail@plt+0x2ab24>
   3ca84:	ldr	r1, [fp, #-28]	; 0xffffffe4
   3ca88:	mvn	r2, #0
   3ca8c:	sub	r1, r2, r1
   3ca90:	cmp	r0, r1
   3ca94:	ble	3cb4c <__assert_fail@plt+0x29f94>
   3ca98:	b	3cb60 <__assert_fail@plt+0x29fa8>
   3ca9c:	b	3cae4 <__assert_fail@plt+0x29f2c>
   3caa0:	b	3caa4 <__assert_fail@plt+0x29eec>
   3caa4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3caa8:	add	r0, r0, #-2147483648	; 0x80000000
   3caac:	movw	r1, #0
   3cab0:	cmp	r1, r0
   3cab4:	blt	3cb4c <__assert_fail@plt+0x29f94>
   3cab8:	b	3cb60 <__assert_fail@plt+0x29fa8>
   3cabc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3cac0:	movw	r1, #0
   3cac4:	cmp	r1, r0
   3cac8:	bge	3cb60 <__assert_fail@plt+0x29fa8>
   3cacc:	ldr	r0, [pc, #3084]	; 3d6e0 <__assert_fail@plt+0x2ab28>
   3cad0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   3cad4:	sub	r1, r1, #1
   3cad8:	cmp	r0, r1
   3cadc:	blt	3cb4c <__assert_fail@plt+0x29f94>
   3cae0:	b	3cb60 <__assert_fail@plt+0x29fa8>
   3cae4:	ldr	r0, [pc, #3056]	; 3d6dc <__assert_fail@plt+0x2ab24>
   3cae8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   3caec:	cmp	r0, r1
   3caf0:	blt	3cb4c <__assert_fail@plt+0x29f94>
   3caf4:	b	3cb60 <__assert_fail@plt+0x29fa8>
   3caf8:	b	3cb00 <__assert_fail@plt+0x29f48>
   3cafc:	b	3cb60 <__assert_fail@plt+0x29fa8>
   3cb00:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3cb04:	cmp	r0, #0
   3cb08:	bge	3cb3c <__assert_fail@plt+0x29f84>
   3cb0c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3cb10:	cmn	r0, #1
   3cb14:	bne	3cb24 <__assert_fail@plt+0x29f6c>
   3cb18:	b	3cb1c <__assert_fail@plt+0x29f64>
   3cb1c:	b	3cb60 <__assert_fail@plt+0x29fa8>
   3cb20:	b	3cb60 <__assert_fail@plt+0x29fa8>
   3cb24:	ldr	r0, [pc, #2988]	; 3d6d8 <__assert_fail@plt+0x2ab20>
   3cb28:	ldr	r1, [fp, #-28]	; 0xffffffe4
   3cb2c:	sdiv	r0, r0, r1
   3cb30:	cmp	r0, #10
   3cb34:	blt	3cb4c <__assert_fail@plt+0x29f94>
   3cb38:	b	3cb60 <__assert_fail@plt+0x29fa8>
   3cb3c:	ldr	r0, [pc, #2960]	; 3d6d4 <__assert_fail@plt+0x2ab1c>
   3cb40:	ldr	r1, [fp, #-28]	; 0xffffffe4
   3cb44:	cmp	r0, r1
   3cb48:	bge	3cb60 <__assert_fail@plt+0x29fa8>
   3cb4c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3cb50:	movw	r1, #10
   3cb54:	mul	r0, r0, r1
   3cb58:	str	r0, [fp, #-28]	; 0xffffffe4
   3cb5c:	b	3d204 <__assert_fail@plt+0x2a64c>
   3cb60:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3cb64:	movw	r1, #10
   3cb68:	mul	r0, r0, r1
   3cb6c:	str	r0, [fp, #-28]	; 0xffffffe4
   3cb70:	b	3d210 <__assert_fail@plt+0x2a658>
   3cb74:	b	3cc20 <__assert_fail@plt+0x2a068>
   3cb78:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3cb7c:	cmp	r0, #0
   3cb80:	bge	3cbb8 <__assert_fail@plt+0x2a000>
   3cb84:	b	3cb9c <__assert_fail@plt+0x29fe4>
   3cb88:	ldr	r0, [pc, #2880]	; 3d6d0 <__assert_fail@plt+0x2ab18>
   3cb8c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   3cb90:	cmp	r1, r0
   3cb94:	bcc	3cc80 <__assert_fail@plt+0x2a0c8>
   3cb98:	b	3cc94 <__assert_fail@plt+0x2a0dc>
   3cb9c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3cba0:	mvn	r1, #0
   3cba4:	sub	r0, r1, r0
   3cba8:	movw	r1, #1
   3cbac:	cmp	r1, r0
   3cbb0:	bls	3cc80 <__assert_fail@plt+0x2a0c8>
   3cbb4:	b	3cc94 <__assert_fail@plt+0x2a0dc>
   3cbb8:	b	3cbbc <__assert_fail@plt+0x2a004>
   3cbbc:	b	3cc0c <__assert_fail@plt+0x2a054>
   3cbc0:	b	3cc0c <__assert_fail@plt+0x2a054>
   3cbc4:	b	3cc0c <__assert_fail@plt+0x2a054>
   3cbc8:	b	3cbcc <__assert_fail@plt+0x2a014>
   3cbcc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3cbd0:	add	r0, r0, #0
   3cbd4:	movw	r1, #0
   3cbd8:	cmp	r1, r0
   3cbdc:	blt	3cc80 <__assert_fail@plt+0x2a0c8>
   3cbe0:	b	3cc94 <__assert_fail@plt+0x2a0dc>
   3cbe4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3cbe8:	movw	r1, #0
   3cbec:	cmp	r1, r0
   3cbf0:	bge	3cc94 <__assert_fail@plt+0x2a0dc>
   3cbf4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3cbf8:	sub	r0, r0, #1
   3cbfc:	mvn	r1, #0
   3cc00:	cmp	r1, r0
   3cc04:	blt	3cc80 <__assert_fail@plt+0x2a0c8>
   3cc08:	b	3cc94 <__assert_fail@plt+0x2a0dc>
   3cc0c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3cc10:	movw	r1, #0
   3cc14:	cmp	r1, r0
   3cc18:	blt	3cc80 <__assert_fail@plt+0x2a0c8>
   3cc1c:	b	3cc94 <__assert_fail@plt+0x2a0dc>
   3cc20:	b	3cc28 <__assert_fail@plt+0x2a070>
   3cc24:	b	3cc94 <__assert_fail@plt+0x2a0dc>
   3cc28:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3cc2c:	cmp	r0, #0
   3cc30:	bge	3cc70 <__assert_fail@plt+0x2a0b8>
   3cc34:	b	3cc38 <__assert_fail@plt+0x2a080>
   3cc38:	b	3cc58 <__assert_fail@plt+0x2a0a0>
   3cc3c:	b	3cc58 <__assert_fail@plt+0x2a0a0>
   3cc40:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3cc44:	cmn	r0, #1
   3cc48:	bne	3cc58 <__assert_fail@plt+0x2a0a0>
   3cc4c:	b	3cc50 <__assert_fail@plt+0x2a098>
   3cc50:	b	3cc80 <__assert_fail@plt+0x2a0c8>
   3cc54:	b	3cc80 <__assert_fail@plt+0x2a0c8>
   3cc58:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3cc5c:	movw	r1, #0
   3cc60:	sdiv	r0, r1, r0
   3cc64:	cmp	r0, #10
   3cc68:	blt	3cc80 <__assert_fail@plt+0x2a0c8>
   3cc6c:	b	3cc94 <__assert_fail@plt+0x2a0dc>
   3cc70:	ldr	r0, [pc, #2648]	; 3d6d0 <__assert_fail@plt+0x2ab18>
   3cc74:	ldr	r1, [fp, #-28]	; 0xffffffe4
   3cc78:	cmp	r0, r1
   3cc7c:	bcs	3cc94 <__assert_fail@plt+0x2a0dc>
   3cc80:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3cc84:	movw	r1, #10
   3cc88:	mul	r0, r0, r1
   3cc8c:	str	r0, [fp, #-28]	; 0xffffffe4
   3cc90:	b	3d204 <__assert_fail@plt+0x2a64c>
   3cc94:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3cc98:	movw	r1, #10
   3cc9c:	mul	r0, r0, r1
   3cca0:	str	r0, [fp, #-28]	; 0xffffffe4
   3cca4:	b	3d210 <__assert_fail@plt+0x2a658>
   3cca8:	b	3ccac <__assert_fail@plt+0x2a0f4>
   3ccac:	b	3ccb0 <__assert_fail@plt+0x2a0f8>
   3ccb0:	b	3cd50 <__assert_fail@plt+0x2a198>
   3ccb4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3ccb8:	cmp	r0, #0
   3ccbc:	bge	3ccf4 <__assert_fail@plt+0x2a13c>
   3ccc0:	b	3ccc4 <__assert_fail@plt+0x2a10c>
   3ccc4:	ldr	r0, [pc, #2568]	; 3d6d4 <__assert_fail@plt+0x2ab1c>
   3ccc8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   3cccc:	cmp	r1, r0
   3ccd0:	blt	3cda4 <__assert_fail@plt+0x2a1ec>
   3ccd4:	b	3cdb8 <__assert_fail@plt+0x2a200>
   3ccd8:	ldr	r0, [pc, #2556]	; 3d6dc <__assert_fail@plt+0x2ab24>
   3ccdc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   3cce0:	mvn	r2, #0
   3cce4:	sub	r1, r2, r1
   3cce8:	cmp	r0, r1
   3ccec:	ble	3cda4 <__assert_fail@plt+0x2a1ec>
   3ccf0:	b	3cdb8 <__assert_fail@plt+0x2a200>
   3ccf4:	b	3cd3c <__assert_fail@plt+0x2a184>
   3ccf8:	b	3ccfc <__assert_fail@plt+0x2a144>
   3ccfc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3cd00:	add	r0, r0, #-2147483648	; 0x80000000
   3cd04:	movw	r1, #0
   3cd08:	cmp	r1, r0
   3cd0c:	blt	3cda4 <__assert_fail@plt+0x2a1ec>
   3cd10:	b	3cdb8 <__assert_fail@plt+0x2a200>
   3cd14:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3cd18:	movw	r1, #0
   3cd1c:	cmp	r1, r0
   3cd20:	bge	3cdb8 <__assert_fail@plt+0x2a200>
   3cd24:	ldr	r0, [pc, #2484]	; 3d6e0 <__assert_fail@plt+0x2ab28>
   3cd28:	ldr	r1, [fp, #-28]	; 0xffffffe4
   3cd2c:	sub	r1, r1, #1
   3cd30:	cmp	r0, r1
   3cd34:	blt	3cda4 <__assert_fail@plt+0x2a1ec>
   3cd38:	b	3cdb8 <__assert_fail@plt+0x2a200>
   3cd3c:	ldr	r0, [pc, #2456]	; 3d6dc <__assert_fail@plt+0x2ab24>
   3cd40:	ldr	r1, [fp, #-28]	; 0xffffffe4
   3cd44:	cmp	r0, r1
   3cd48:	blt	3cda4 <__assert_fail@plt+0x2a1ec>
   3cd4c:	b	3cdb8 <__assert_fail@plt+0x2a200>
   3cd50:	b	3cd58 <__assert_fail@plt+0x2a1a0>
   3cd54:	b	3cdb8 <__assert_fail@plt+0x2a200>
   3cd58:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3cd5c:	cmp	r0, #0
   3cd60:	bge	3cd94 <__assert_fail@plt+0x2a1dc>
   3cd64:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3cd68:	cmn	r0, #1
   3cd6c:	bne	3cd7c <__assert_fail@plt+0x2a1c4>
   3cd70:	b	3cd74 <__assert_fail@plt+0x2a1bc>
   3cd74:	b	3cdb8 <__assert_fail@plt+0x2a200>
   3cd78:	b	3cdb8 <__assert_fail@plt+0x2a200>
   3cd7c:	ldr	r0, [pc, #2388]	; 3d6d8 <__assert_fail@plt+0x2ab20>
   3cd80:	ldr	r1, [fp, #-28]	; 0xffffffe4
   3cd84:	sdiv	r0, r0, r1
   3cd88:	cmp	r0, #10
   3cd8c:	blt	3cda4 <__assert_fail@plt+0x2a1ec>
   3cd90:	b	3cdb8 <__assert_fail@plt+0x2a200>
   3cd94:	ldr	r0, [pc, #2360]	; 3d6d4 <__assert_fail@plt+0x2ab1c>
   3cd98:	ldr	r1, [fp, #-28]	; 0xffffffe4
   3cd9c:	cmp	r0, r1
   3cda0:	bge	3cdb8 <__assert_fail@plt+0x2a200>
   3cda4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3cda8:	movw	r1, #10
   3cdac:	mul	r0, r0, r1
   3cdb0:	str	r0, [fp, #-28]	; 0xffffffe4
   3cdb4:	b	3d204 <__assert_fail@plt+0x2a64c>
   3cdb8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3cdbc:	movw	r1, #10
   3cdc0:	mul	r0, r0, r1
   3cdc4:	str	r0, [fp, #-28]	; 0xffffffe4
   3cdc8:	b	3d210 <__assert_fail@plt+0x2a658>
   3cdcc:	b	3ce78 <__assert_fail@plt+0x2a2c0>
   3cdd0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3cdd4:	cmp	r0, #0
   3cdd8:	bge	3ce10 <__assert_fail@plt+0x2a258>
   3cddc:	b	3cdf4 <__assert_fail@plt+0x2a23c>
   3cde0:	ldr	r0, [pc, #2280]	; 3d6d0 <__assert_fail@plt+0x2ab18>
   3cde4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   3cde8:	cmp	r1, r0
   3cdec:	bcc	3ced8 <__assert_fail@plt+0x2a320>
   3cdf0:	b	3ceec <__assert_fail@plt+0x2a334>
   3cdf4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3cdf8:	mvn	r1, #0
   3cdfc:	sub	r0, r1, r0
   3ce00:	movw	r1, #1
   3ce04:	cmp	r1, r0
   3ce08:	bls	3ced8 <__assert_fail@plt+0x2a320>
   3ce0c:	b	3ceec <__assert_fail@plt+0x2a334>
   3ce10:	b	3ce14 <__assert_fail@plt+0x2a25c>
   3ce14:	b	3ce64 <__assert_fail@plt+0x2a2ac>
   3ce18:	b	3ce64 <__assert_fail@plt+0x2a2ac>
   3ce1c:	b	3ce64 <__assert_fail@plt+0x2a2ac>
   3ce20:	b	3ce24 <__assert_fail@plt+0x2a26c>
   3ce24:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3ce28:	add	r0, r0, #0
   3ce2c:	movw	r1, #0
   3ce30:	cmp	r1, r0
   3ce34:	blt	3ced8 <__assert_fail@plt+0x2a320>
   3ce38:	b	3ceec <__assert_fail@plt+0x2a334>
   3ce3c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3ce40:	movw	r1, #0
   3ce44:	cmp	r1, r0
   3ce48:	bge	3ceec <__assert_fail@plt+0x2a334>
   3ce4c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3ce50:	sub	r0, r0, #1
   3ce54:	mvn	r1, #0
   3ce58:	cmp	r1, r0
   3ce5c:	blt	3ced8 <__assert_fail@plt+0x2a320>
   3ce60:	b	3ceec <__assert_fail@plt+0x2a334>
   3ce64:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3ce68:	movw	r1, #0
   3ce6c:	cmp	r1, r0
   3ce70:	blt	3ced8 <__assert_fail@plt+0x2a320>
   3ce74:	b	3ceec <__assert_fail@plt+0x2a334>
   3ce78:	b	3ce80 <__assert_fail@plt+0x2a2c8>
   3ce7c:	b	3ceec <__assert_fail@plt+0x2a334>
   3ce80:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3ce84:	cmp	r0, #0
   3ce88:	bge	3cec8 <__assert_fail@plt+0x2a310>
   3ce8c:	b	3ce90 <__assert_fail@plt+0x2a2d8>
   3ce90:	b	3ceb0 <__assert_fail@plt+0x2a2f8>
   3ce94:	b	3ceb0 <__assert_fail@plt+0x2a2f8>
   3ce98:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3ce9c:	cmn	r0, #1
   3cea0:	bne	3ceb0 <__assert_fail@plt+0x2a2f8>
   3cea4:	b	3cea8 <__assert_fail@plt+0x2a2f0>
   3cea8:	b	3ced8 <__assert_fail@plt+0x2a320>
   3ceac:	b	3ced8 <__assert_fail@plt+0x2a320>
   3ceb0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3ceb4:	movw	r1, #0
   3ceb8:	sdiv	r0, r1, r0
   3cebc:	cmp	r0, #10
   3cec0:	blt	3ced8 <__assert_fail@plt+0x2a320>
   3cec4:	b	3ceec <__assert_fail@plt+0x2a334>
   3cec8:	ldr	r0, [pc, #2048]	; 3d6d0 <__assert_fail@plt+0x2ab18>
   3cecc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   3ced0:	cmp	r0, r1
   3ced4:	bcs	3ceec <__assert_fail@plt+0x2a334>
   3ced8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3cedc:	movw	r1, #10
   3cee0:	mul	r0, r0, r1
   3cee4:	str	r0, [fp, #-28]	; 0xffffffe4
   3cee8:	b	3d204 <__assert_fail@plt+0x2a64c>
   3ceec:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3cef0:	movw	r1, #10
   3cef4:	mul	r0, r0, r1
   3cef8:	str	r0, [fp, #-28]	; 0xffffffe4
   3cefc:	b	3d210 <__assert_fail@plt+0x2a658>
   3cf00:	b	3cf04 <__assert_fail@plt+0x2a34c>
   3cf04:	b	3cfec <__assert_fail@plt+0x2a434>
   3cf08:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3cf0c:	cmp	r0, #0
   3cf10:	bge	3cf74 <__assert_fail@plt+0x2a3bc>
   3cf14:	b	3cf18 <__assert_fail@plt+0x2a360>
   3cf18:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3cf1c:	movw	r1, #52428	; 0xcccc
   3cf20:	movt	r1, #52428	; 0xcccc
   3cf24:	subs	r1, r0, r1
   3cf28:	movw	r2, #52428	; 0xcccc
   3cf2c:	movt	r2, #3276	; 0xccc
   3cf30:	rscs	r0, r2, r0, asr #31
   3cf34:	str	r1, [sp, #76]	; 0x4c
   3cf38:	str	r0, [sp, #72]	; 0x48
   3cf3c:	blt	3d080 <__assert_fail@plt+0x2a4c8>
   3cf40:	b	3d094 <__assert_fail@plt+0x2a4dc>
   3cf44:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3cf48:	mvn	r0, r0
   3cf4c:	movw	r1, #13107	; 0x3333
   3cf50:	movt	r1, #13107	; 0x3333
   3cf54:	subs	r1, r1, r0
   3cf58:	movw	r2, #13107	; 0x3333
   3cf5c:	movt	r2, #62259	; 0xf333
   3cf60:	sbcs	r0, r2, r0, asr #31
   3cf64:	str	r1, [sp, #68]	; 0x44
   3cf68:	str	r0, [sp, #64]	; 0x40
   3cf6c:	blt	3d080 <__assert_fail@plt+0x2a4c8>
   3cf70:	b	3d094 <__assert_fail@plt+0x2a4dc>
   3cf74:	b	3cfc0 <__assert_fail@plt+0x2a408>
   3cf78:	b	3cf7c <__assert_fail@plt+0x2a3c4>
   3cf7c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3cf80:	mov	r1, #-2147483648	; 0x80000000
   3cf84:	add	r1, r1, r0, asr #31
   3cf88:	rsbs	r0, r0, #0
   3cf8c:	rscs	r1, r1, #0
   3cf90:	str	r0, [sp, #60]	; 0x3c
   3cf94:	str	r1, [sp, #56]	; 0x38
   3cf98:	blt	3d080 <__assert_fail@plt+0x2a4c8>
   3cf9c:	b	3d094 <__assert_fail@plt+0x2a4dc>
   3cfa0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3cfa4:	movw	r1, #0
   3cfa8:	cmp	r1, r0
   3cfac:	bge	3d094 <__assert_fail@plt+0x2a4dc>
   3cfb0:	mov	r0, #0
   3cfb4:	cmp	r0, #0
   3cfb8:	bne	3d080 <__assert_fail@plt+0x2a4c8>
   3cfbc:	b	3d094 <__assert_fail@plt+0x2a4dc>
   3cfc0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3cfc4:	movw	r1, #13108	; 0x3334
   3cfc8:	movt	r1, #13107	; 0x3333
   3cfcc:	subs	r1, r1, r0
   3cfd0:	movw	r2, #13107	; 0x3333
   3cfd4:	movt	r2, #62259	; 0xf333
   3cfd8:	sbcs	r0, r2, r0, asr #31
   3cfdc:	str	r1, [sp, #52]	; 0x34
   3cfe0:	str	r0, [sp, #48]	; 0x30
   3cfe4:	blt	3d080 <__assert_fail@plt+0x2a4c8>
   3cfe8:	b	3d094 <__assert_fail@plt+0x2a4dc>
   3cfec:	b	3cff4 <__assert_fail@plt+0x2a43c>
   3cff0:	b	3d094 <__assert_fail@plt+0x2a4dc>
   3cff4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3cff8:	cmp	r0, #0
   3cffc:	bge	3d054 <__assert_fail@plt+0x2a49c>
   3d000:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3d004:	cmn	r0, #1
   3d008:	bne	3d018 <__assert_fail@plt+0x2a460>
   3d00c:	b	3d010 <__assert_fail@plt+0x2a458>
   3d010:	b	3d094 <__assert_fail@plt+0x2a4dc>
   3d014:	b	3d094 <__assert_fail@plt+0x2a4dc>
   3d018:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3d01c:	asr	r3, r0, #31
   3d020:	mov	r1, #0
   3d024:	mov	r2, #-2147483648	; 0x80000000
   3d028:	str	r0, [sp, #44]	; 0x2c
   3d02c:	mov	r0, r1
   3d030:	mov	r1, r2
   3d034:	ldr	r2, [sp, #44]	; 0x2c
   3d038:	bl	77780 <__assert_fail@plt+0x64bc8>
   3d03c:	subs	r0, r0, #10
   3d040:	sbcs	r1, r1, #0
   3d044:	str	r0, [sp, #40]	; 0x28
   3d048:	str	r1, [sp, #36]	; 0x24
   3d04c:	blt	3d080 <__assert_fail@plt+0x2a4c8>
   3d050:	b	3d094 <__assert_fail@plt+0x2a4dc>
   3d054:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3d058:	movw	r1, #52429	; 0xcccd
   3d05c:	movt	r1, #52428	; 0xcccc
   3d060:	subs	r1, r0, r1
   3d064:	movw	r2, #52428	; 0xcccc
   3d068:	movt	r2, #3276	; 0xccc
   3d06c:	rscs	r0, r2, r0, asr #31
   3d070:	str	r1, [sp, #32]
   3d074:	str	r0, [sp, #28]
   3d078:	blt	3d094 <__assert_fail@plt+0x2a4dc>
   3d07c:	b	3d080 <__assert_fail@plt+0x2a4c8>
   3d080:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3d084:	add	r0, r0, r0, lsl #2
   3d088:	lsl	r0, r0, #1
   3d08c:	str	r0, [fp, #-28]	; 0xffffffe4
   3d090:	b	3d204 <__assert_fail@plt+0x2a64c>
   3d094:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3d098:	add	r0, r0, r0, lsl #2
   3d09c:	lsl	r0, r0, #1
   3d0a0:	str	r0, [fp, #-28]	; 0xffffffe4
   3d0a4:	b	3d210 <__assert_fail@plt+0x2a658>
   3d0a8:	b	3d160 <__assert_fail@plt+0x2a5a8>
   3d0ac:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3d0b0:	cmp	r0, #0
   3d0b4:	bge	3d0f8 <__assert_fail@plt+0x2a540>
   3d0b8:	b	3d0e8 <__assert_fail@plt+0x2a530>
   3d0bc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3d0c0:	movw	r1, #39321	; 0x9999
   3d0c4:	movt	r1, #39321	; 0x9999
   3d0c8:	subs	r1, r0, r1
   3d0cc:	movw	r2, #39321	; 0x9999
   3d0d0:	movt	r2, #6553	; 0x1999
   3d0d4:	rscs	r0, r2, r0, asr #31
   3d0d8:	str	r1, [sp, #24]
   3d0dc:	str	r0, [sp, #20]
   3d0e0:	bcc	3d1dc <__assert_fail@plt+0x2a624>
   3d0e4:	b	3d1f0 <__assert_fail@plt+0x2a638>
   3d0e8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3d0ec:	cmn	r0, #1
   3d0f0:	bne	3d1dc <__assert_fail@plt+0x2a624>
   3d0f4:	b	3d1f0 <__assert_fail@plt+0x2a638>
   3d0f8:	b	3d0fc <__assert_fail@plt+0x2a544>
   3d0fc:	b	3d14c <__assert_fail@plt+0x2a594>
   3d100:	b	3d14c <__assert_fail@plt+0x2a594>
   3d104:	b	3d14c <__assert_fail@plt+0x2a594>
   3d108:	b	3d10c <__assert_fail@plt+0x2a554>
   3d10c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3d110:	add	r0, r0, #0
   3d114:	movw	r1, #0
   3d118:	cmp	r1, r0
   3d11c:	blt	3d1dc <__assert_fail@plt+0x2a624>
   3d120:	b	3d1f0 <__assert_fail@plt+0x2a638>
   3d124:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3d128:	movw	r1, #0
   3d12c:	cmp	r1, r0
   3d130:	bge	3d1f0 <__assert_fail@plt+0x2a638>
   3d134:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3d138:	sub	r0, r0, #1
   3d13c:	mvn	r1, #0
   3d140:	cmp	r1, r0
   3d144:	blt	3d1dc <__assert_fail@plt+0x2a624>
   3d148:	b	3d1f0 <__assert_fail@plt+0x2a638>
   3d14c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3d150:	movw	r1, #0
   3d154:	cmp	r1, r0
   3d158:	blt	3d1dc <__assert_fail@plt+0x2a624>
   3d15c:	b	3d1f0 <__assert_fail@plt+0x2a638>
   3d160:	b	3d168 <__assert_fail@plt+0x2a5b0>
   3d164:	b	3d1f0 <__assert_fail@plt+0x2a638>
   3d168:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3d16c:	cmp	r0, #0
   3d170:	bge	3d1b0 <__assert_fail@plt+0x2a5f8>
   3d174:	b	3d178 <__assert_fail@plt+0x2a5c0>
   3d178:	b	3d198 <__assert_fail@plt+0x2a5e0>
   3d17c:	b	3d198 <__assert_fail@plt+0x2a5e0>
   3d180:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3d184:	cmn	r0, #1
   3d188:	bne	3d198 <__assert_fail@plt+0x2a5e0>
   3d18c:	b	3d190 <__assert_fail@plt+0x2a5d8>
   3d190:	b	3d1dc <__assert_fail@plt+0x2a624>
   3d194:	b	3d1dc <__assert_fail@plt+0x2a624>
   3d198:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3d19c:	movw	r1, #0
   3d1a0:	sdiv	r0, r1, r0
   3d1a4:	cmp	r0, #10
   3d1a8:	blt	3d1dc <__assert_fail@plt+0x2a624>
   3d1ac:	b	3d1f0 <__assert_fail@plt+0x2a638>
   3d1b0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3d1b4:	movw	r1, #39322	; 0x999a
   3d1b8:	movt	r1, #39321	; 0x9999
   3d1bc:	subs	r1, r0, r1
   3d1c0:	movw	r2, #39321	; 0x9999
   3d1c4:	movt	r2, #6553	; 0x1999
   3d1c8:	rscs	r0, r2, r0, asr #31
   3d1cc:	str	r1, [sp, #16]
   3d1d0:	str	r0, [sp, #12]
   3d1d4:	bcc	3d1f0 <__assert_fail@plt+0x2a638>
   3d1d8:	b	3d1dc <__assert_fail@plt+0x2a624>
   3d1dc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3d1e0:	add	r0, r0, r0, lsl #2
   3d1e4:	lsl	r0, r0, #1
   3d1e8:	str	r0, [fp, #-28]	; 0xffffffe4
   3d1ec:	b	3d204 <__assert_fail@plt+0x2a64c>
   3d1f0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3d1f4:	add	r0, r0, r0, lsl #2
   3d1f8:	lsl	r0, r0, #1
   3d1fc:	str	r0, [fp, #-28]	; 0xffffffe4
   3d200:	b	3d210 <__assert_fail@plt+0x2a658>
   3d204:	movw	r0, #63	; 0x3f
   3d208:	str	r0, [fp, #-4]
   3d20c:	b	3d6c4 <__assert_fail@plt+0x2ab0c>
   3d210:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3d214:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3d218:	cmp	r1, #0
   3d21c:	str	r0, [sp, #8]
   3d220:	bge	3d238 <__assert_fail@plt+0x2a680>
   3d224:	ldrb	r0, [fp, #-13]
   3d228:	movw	r1, #48	; 0x30
   3d22c:	sub	r0, r1, r0
   3d230:	str	r0, [sp, #4]
   3d234:	b	3d244 <__assert_fail@plt+0x2a68c>
   3d238:	ldrb	r0, [fp, #-13]
   3d23c:	sub	r0, r0, #48	; 0x30
   3d240:	str	r0, [sp, #4]
   3d244:	ldr	r0, [sp, #4]
   3d248:	ldr	r1, [sp, #8]
   3d24c:	add	r0, r1, r0
   3d250:	mov	r2, #1
   3d254:	cmp	r0, r1
   3d258:	movwvc	r2, #0
   3d25c:	str	r0, [fp, #-28]	; 0xffffffe4
   3d260:	tst	r2, #1
   3d264:	beq	3d274 <__assert_fail@plt+0x2a6bc>
   3d268:	movw	r0, #63	; 0x3f
   3d26c:	str	r0, [fp, #-4]
   3d270:	b	3d6c4 <__assert_fail@plt+0x2ab0c>
   3d274:	ldr	r0, [fp, #-20]	; 0xffffffec
   3d278:	add	r1, r0, #1
   3d27c:	str	r1, [fp, #-20]	; 0xffffffec
   3d280:	ldrb	r0, [r0, #1]
   3d284:	strb	r0, [fp, #-13]
   3d288:	ldrb	r0, [fp, #-13]
   3d28c:	bl	71214 <__assert_fail@plt+0x5e65c>
   3d290:	tst	r0, #1
   3d294:	bne	3c550 <__assert_fail@plt+0x29998>
   3d298:	ldrb	r0, [fp, #-13]
   3d29c:	cmp	r0, #46	; 0x2e
   3d2a0:	beq	3d2b0 <__assert_fail@plt+0x2a6f8>
   3d2a4:	ldrb	r0, [fp, #-13]
   3d2a8:	cmp	r0, #44	; 0x2c
   3d2ac:	bne	3d480 <__assert_fail@plt+0x2a8c8>
   3d2b0:	ldr	r0, [fp, #-20]	; 0xffffffec
   3d2b4:	ldrb	r0, [r0, #1]
   3d2b8:	bl	71214 <__assert_fail@plt+0x5e65c>
   3d2bc:	tst	r0, #1
   3d2c0:	beq	3d480 <__assert_fail@plt+0x2a8c8>
   3d2c4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3d2c8:	str	r0, [fp, #-32]	; 0xffffffe0
   3d2cc:	ldr	r0, [fp, #-20]	; 0xffffffec
   3d2d0:	add	r0, r0, #1
   3d2d4:	str	r0, [fp, #-20]	; 0xffffffec
   3d2d8:	ldr	r0, [fp, #-20]	; 0xffffffec
   3d2dc:	add	r1, r0, #1
   3d2e0:	str	r1, [fp, #-20]	; 0xffffffec
   3d2e4:	ldrb	r0, [r0]
   3d2e8:	sub	r0, r0, #48	; 0x30
   3d2ec:	str	r0, [fp, #-40]	; 0xffffffd8
   3d2f0:	movw	r0, #2
   3d2f4:	str	r0, [fp, #-36]	; 0xffffffdc
   3d2f8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   3d2fc:	cmp	r0, #9
   3d300:	bgt	3d35c <__assert_fail@plt+0x2a7a4>
   3d304:	ldr	r0, [fp, #-40]	; 0xffffffd8
   3d308:	movw	r1, #10
   3d30c:	mul	r0, r0, r1
   3d310:	str	r0, [fp, #-40]	; 0xffffffd8
   3d314:	ldr	r0, [fp, #-20]	; 0xffffffec
   3d318:	ldrb	r0, [r0]
   3d31c:	bl	71214 <__assert_fail@plt+0x5e65c>
   3d320:	tst	r0, #1
   3d324:	beq	3d348 <__assert_fail@plt+0x2a790>
   3d328:	ldr	r0, [fp, #-20]	; 0xffffffec
   3d32c:	add	r1, r0, #1
   3d330:	str	r1, [fp, #-20]	; 0xffffffec
   3d334:	ldrb	r0, [r0]
   3d338:	sub	r0, r0, #48	; 0x30
   3d33c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   3d340:	add	r0, r1, r0
   3d344:	str	r0, [fp, #-40]	; 0xffffffd8
   3d348:	b	3d34c <__assert_fail@plt+0x2a794>
   3d34c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   3d350:	add	r0, r0, #1
   3d354:	str	r0, [fp, #-36]	; 0xffffffdc
   3d358:	b	3d2f8 <__assert_fail@plt+0x2a740>
   3d35c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3d360:	cmp	r0, #0
   3d364:	bge	3d3b8 <__assert_fail@plt+0x2a800>
   3d368:	b	3d36c <__assert_fail@plt+0x2a7b4>
   3d36c:	ldr	r0, [fp, #-20]	; 0xffffffec
   3d370:	ldrb	r0, [r0]
   3d374:	bl	71214 <__assert_fail@plt+0x5e65c>
   3d378:	tst	r0, #1
   3d37c:	beq	3d3b4 <__assert_fail@plt+0x2a7fc>
   3d380:	ldr	r0, [fp, #-20]	; 0xffffffec
   3d384:	ldrb	r0, [r0]
   3d388:	cmp	r0, #48	; 0x30
   3d38c:	beq	3d3a0 <__assert_fail@plt+0x2a7e8>
   3d390:	ldr	r0, [fp, #-40]	; 0xffffffd8
   3d394:	add	r0, r0, #1
   3d398:	str	r0, [fp, #-40]	; 0xffffffd8
   3d39c:	b	3d3b4 <__assert_fail@plt+0x2a7fc>
   3d3a0:	b	3d3a4 <__assert_fail@plt+0x2a7ec>
   3d3a4:	ldr	r0, [fp, #-20]	; 0xffffffec
   3d3a8:	add	r0, r0, #1
   3d3ac:	str	r0, [fp, #-20]	; 0xffffffec
   3d3b0:	b	3d36c <__assert_fail@plt+0x2a7b4>
   3d3b4:	b	3d3b8 <__assert_fail@plt+0x2a800>
   3d3b8:	b	3d3bc <__assert_fail@plt+0x2a804>
   3d3bc:	ldr	r0, [fp, #-20]	; 0xffffffec
   3d3c0:	ldrb	r0, [r0]
   3d3c4:	bl	71214 <__assert_fail@plt+0x5e65c>
   3d3c8:	tst	r0, #1
   3d3cc:	beq	3d3e0 <__assert_fail@plt+0x2a828>
   3d3d0:	ldr	r0, [fp, #-20]	; 0xffffffec
   3d3d4:	add	r0, r0, #1
   3d3d8:	str	r0, [fp, #-20]	; 0xffffffec
   3d3dc:	b	3d3bc <__assert_fail@plt+0x2a804>
   3d3e0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3d3e4:	cmp	r0, #0
   3d3e8:	bge	3d434 <__assert_fail@plt+0x2a87c>
   3d3ec:	ldr	r0, [fp, #-40]	; 0xffffffd8
   3d3f0:	cmp	r0, #0
   3d3f4:	beq	3d434 <__assert_fail@plt+0x2a87c>
   3d3f8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   3d3fc:	mov	r1, #1
   3d400:	cmp	r0, #1
   3d404:	movwvc	r1, #0
   3d408:	sub	r0, r0, #1
   3d40c:	str	r0, [fp, #-32]	; 0xffffffe0
   3d410:	tst	r1, #1
   3d414:	beq	3d424 <__assert_fail@plt+0x2a86c>
   3d418:	movw	r0, #63	; 0x3f
   3d41c:	str	r0, [fp, #-4]
   3d420:	b	3d6c4 <__assert_fail@plt+0x2ab0c>
   3d424:	ldr	r0, [pc, #708]	; 3d6f0 <__assert_fail@plt+0x2ab38>
   3d428:	ldr	r1, [fp, #-40]	; 0xffffffd8
   3d42c:	sub	r0, r0, r1
   3d430:	str	r0, [fp, #-40]	; 0xffffffd8
   3d434:	ldr	r0, [fp, #-32]	; 0xffffffe0
   3d438:	ldr	r1, [fp, #-8]
   3d43c:	str	r0, [r1]
   3d440:	ldr	r0, [fp, #-40]	; 0xffffffd8
   3d444:	ldr	r1, [fp, #-8]
   3d448:	str	r0, [r1, #4]
   3d44c:	ldr	r0, [fp, #-20]	; 0xffffffec
   3d450:	ldr	r1, [fp, #-12]
   3d454:	str	r0, [r1]
   3d458:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3d45c:	cmp	r0, #0
   3d460:	movw	r0, #0
   3d464:	movne	r0, #1
   3d468:	tst	r0, #1
   3d46c:	movw	r0, #277	; 0x115
   3d470:	movw	r1, #276	; 0x114
   3d474:	movne	r0, r1
   3d478:	str	r0, [fp, #-4]
   3d47c:	b	3d6c4 <__assert_fail@plt+0x2ab0c>
   3d480:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3d484:	ldr	r1, [fp, #-8]
   3d488:	lsr	r0, r0, #31
   3d48c:	strb	r0, [r1]
   3d490:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3d494:	asr	r1, r0, #31
   3d498:	ldr	r2, [fp, #-8]
   3d49c:	str	r0, [r2, #8]
   3d4a0:	str	r1, [r2, #12]
   3d4a4:	ldr	r0, [fp, #-20]	; 0xffffffec
   3d4a8:	ldr	r1, [fp, #-12]
   3d4ac:	ldr	r1, [r1]
   3d4b0:	sub	r0, r0, r1
   3d4b4:	ldr	r1, [fp, #-8]
   3d4b8:	str	r0, [r1, #16]
   3d4bc:	ldr	r0, [fp, #-20]	; 0xffffffec
   3d4c0:	ldr	r1, [fp, #-12]
   3d4c4:	str	r0, [r1]
   3d4c8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3d4cc:	cmp	r0, #0
   3d4d0:	movw	r0, #0
   3d4d4:	movne	r0, #1
   3d4d8:	tst	r0, #1
   3d4dc:	movw	r0, #275	; 0x113
   3d4e0:	movw	r1, #274	; 0x112
   3d4e4:	movne	r0, r1
   3d4e8:	str	r0, [fp, #-4]
   3d4ec:	b	3d6c4 <__assert_fail@plt+0x2ab0c>
   3d4f0:	ldrb	r0, [fp, #-13]
   3d4f4:	bl	710d8 <__assert_fail@plt+0x5e520>
   3d4f8:	tst	r0, #1
   3d4fc:	beq	3d60c <__assert_fail@plt+0x2aa54>
   3d500:	sub	r0, fp, #60	; 0x3c
   3d504:	str	r0, [fp, #-64]	; 0xffffffc0
   3d508:	sub	r0, fp, #60	; 0x3c
   3d50c:	ldr	r1, [fp, #-64]	; 0xffffffc0
   3d510:	add	r0, r0, #20
   3d514:	mvn	r2, #0
   3d518:	add	r0, r0, r2
   3d51c:	cmp	r1, r0
   3d520:	bcs	3d538 <__assert_fail@plt+0x2a980>
   3d524:	ldrb	r0, [fp, #-13]
   3d528:	ldr	r1, [fp, #-64]	; 0xffffffc0
   3d52c:	add	r2, r1, #1
   3d530:	str	r2, [fp, #-64]	; 0xffffffc0
   3d534:	strb	r0, [r1]
   3d538:	ldr	r0, [fp, #-12]
   3d53c:	ldr	r1, [r0]
   3d540:	add	r2, r1, #1
   3d544:	str	r2, [r0]
   3d548:	ldrb	r0, [r1, #1]
   3d54c:	strb	r0, [fp, #-13]
   3d550:	ldrb	r0, [fp, #-13]
   3d554:	bl	710d8 <__assert_fail@plt+0x5e520>
   3d558:	tst	r0, #1
   3d55c:	movw	r0, #1
   3d560:	str	r0, [sp]
   3d564:	bne	3d57c <__assert_fail@plt+0x2a9c4>
   3d568:	ldrb	r0, [fp, #-13]
   3d56c:	cmp	r0, #46	; 0x2e
   3d570:	movw	r0, #0
   3d574:	moveq	r0, #1
   3d578:	str	r0, [sp]
   3d57c:	ldr	r0, [sp]
   3d580:	tst	r0, #1
   3d584:	bne	3d508 <__assert_fail@plt+0x2a950>
   3d588:	sub	r1, fp, #60	; 0x3c
   3d58c:	ldr	r0, [fp, #-64]	; 0xffffffc0
   3d590:	movw	r2, #0
   3d594:	strb	r2, [r0]
   3d598:	ldr	r0, [fp, #-12]
   3d59c:	bl	474c0 <__assert_fail@plt+0x34908>
   3d5a0:	str	r0, [fp, #-68]	; 0xffffffbc
   3d5a4:	ldr	r0, [fp, #-68]	; 0xffffffbc
   3d5a8:	movw	r1, #0
   3d5ac:	cmp	r0, r1
   3d5b0:	bne	3d5e4 <__assert_fail@plt+0x2aa2c>
   3d5b4:	ldr	r0, [fp, #-12]
   3d5b8:	bl	3e9ac <__assert_fail@plt+0x2bdf4>
   3d5bc:	tst	r0, #1
   3d5c0:	beq	3d5d8 <__assert_fail@plt+0x2aa20>
   3d5c4:	movw	r0, #54082	; 0xd342
   3d5c8:	movt	r0, #7
   3d5cc:	bl	12864 <gettext@plt>
   3d5d0:	sub	r1, fp, #60	; 0x3c
   3d5d4:	bl	3e9c4 <__assert_fail@plt+0x2be0c>
   3d5d8:	movw	r0, #63	; 0x3f
   3d5dc:	str	r0, [fp, #-4]
   3d5e0:	b	3d6c4 <__assert_fail@plt+0x2ab0c>
   3d5e4:	ldr	r0, [fp, #-68]	; 0xffffffbc
   3d5e8:	ldr	r0, [r0, #8]
   3d5ec:	asr	r1, r0, #31
   3d5f0:	ldr	r2, [fp, #-8]
   3d5f4:	str	r0, [r2]
   3d5f8:	str	r1, [r2, #4]
   3d5fc:	ldr	r0, [fp, #-68]	; 0xffffffbc
   3d600:	ldr	r0, [r0, #4]
   3d604:	str	r0, [fp, #-4]
   3d608:	b	3d6c4 <__assert_fail@plt+0x2ab0c>
   3d60c:	ldrb	r0, [fp, #-13]
   3d610:	cmp	r0, #40	; 0x28
   3d614:	beq	3d63c <__assert_fail@plt+0x2aa84>
   3d618:	ldr	r0, [fp, #-12]
   3d61c:	ldr	r1, [r0]
   3d620:	add	r2, r1, #1
   3d624:	str	r2, [r0]
   3d628:	ldrb	r0, [r1]
   3d62c:	bl	47920 <__assert_fail@plt+0x34d68>
   3d630:	and	r0, r0, #255	; 0xff
   3d634:	str	r0, [fp, #-4]
   3d638:	b	3d6c4 <__assert_fail@plt+0x2ab0c>
   3d63c:	movw	r0, #0
   3d640:	str	r0, [fp, #-72]	; 0xffffffb8
   3d644:	ldr	r0, [fp, #-12]
   3d648:	ldr	r1, [r0]
   3d64c:	add	r2, r1, #1
   3d650:	str	r2, [r0]
   3d654:	ldrb	r0, [r1]
   3d658:	strb	r0, [fp, #-13]
   3d65c:	ldrb	r0, [fp, #-13]
   3d660:	cmp	r0, #0
   3d664:	bne	3d674 <__assert_fail@plt+0x2aabc>
   3d668:	ldrb	r0, [fp, #-13]
   3d66c:	str	r0, [fp, #-4]
   3d670:	b	3d6c4 <__assert_fail@plt+0x2ab0c>
   3d674:	ldrb	r0, [fp, #-13]
   3d678:	cmp	r0, #40	; 0x28
   3d67c:	bne	3d690 <__assert_fail@plt+0x2aad8>
   3d680:	ldr	r0, [fp, #-72]	; 0xffffffb8
   3d684:	add	r0, r0, #1
   3d688:	str	r0, [fp, #-72]	; 0xffffffb8
   3d68c:	b	3d6b0 <__assert_fail@plt+0x2aaf8>
   3d690:	ldrb	r0, [fp, #-13]
   3d694:	cmp	r0, #41	; 0x29
   3d698:	bne	3d6ac <__assert_fail@plt+0x2aaf4>
   3d69c:	ldr	r0, [fp, #-72]	; 0xffffffb8
   3d6a0:	mvn	r1, #0
   3d6a4:	add	r0, r0, r1
   3d6a8:	str	r0, [fp, #-72]	; 0xffffffb8
   3d6ac:	b	3d6b0 <__assert_fail@plt+0x2aaf8>
   3d6b0:	b	3d6b4 <__assert_fail@plt+0x2aafc>
   3d6b4:	ldr	r0, [fp, #-72]	; 0xffffffb8
   3d6b8:	cmp	r0, #0
   3d6bc:	bne	3d644 <__assert_fail@plt+0x2aa8c>
   3d6c0:	b	3c454 <__assert_fail@plt+0x2989c>
   3d6c4:	ldr	r0, [fp, #-4]
   3d6c8:	mov	sp, fp
   3d6cc:	pop	{fp, pc}
   3d6d0:	ldmibne	r9, {r0, r3, r4, r7, r8, fp, ip, pc}
   3d6d4:	stcleq	12, cr12, [ip], {204}	; 0xcc
   3d6d8:	andhi	r0, r0, r0
   3d6dc:	vcge.u<illegal width 64>	d3, d3, d20
   3d6e0:	svcvc	0x00ffffff
   3d6e4:			; <UNDEFINED> instruction: 0xffff8000
   3d6e8:			; <UNDEFINED> instruction: 0xfffff334
   3d6ec:			; <UNDEFINED> instruction: 0xffffe667
   3d6f0:	blcc	fe6efef8 <stdout@@GLIBC_2.4+0xfe6607c4>
   3d6f4:	push	{r4, r5, r6, sl, fp, lr}
   3d6f8:	add	fp, sp, #16
   3d6fc:	sub	sp, sp, #280	; 0x118
   3d700:	str	r0, [fp, #-20]	; 0xffffffec
   3d704:	str	r1, [fp, #-24]	; 0xffffffe8
   3d708:	movw	r0, #0
   3d70c:	strb	r0, [fp, #-25]	; 0xffffffe7
   3d710:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3d714:	bl	3e9ac <__assert_fail@plt+0x2bdf4>
   3d718:	tst	r0, #1
   3d71c:	bne	3d724 <__assert_fail@plt+0x2ab6c>
   3d720:	b	3dbfc <__assert_fail@plt+0x2b044>
   3d724:	movw	r0, #53811	; 0xd233
   3d728:	movt	r0, #7
   3d72c:	bl	12864 <gettext@plt>
   3d730:	ldr	r1, [fp, #-20]	; 0xffffffec
   3d734:	bl	3e9c4 <__assert_fail@plt+0x2be0c>
   3d738:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3d73c:	ldr	r0, [r0, #156]	; 0x9c
   3d740:	cmp	r0, #0
   3d744:	beq	3d7b4 <__assert_fail@plt+0x2abfc>
   3d748:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3d74c:	ldrb	r0, [r0, #181]	; 0xb5
   3d750:	tst	r0, #1
   3d754:	bne	3d7b4 <__assert_fail@plt+0x2abfc>
   3d758:	movw	r0, #63272	; 0xf728
   3d75c:	movt	r0, #8
   3d760:	ldr	r0, [r0]
   3d764:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3d768:	ldr	r2, [r1, #40]	; 0x28
   3d76c:	ldr	r3, [r1, #44]	; 0x2c
   3d770:	ldr	ip, [r1, #56]	; 0x38
   3d774:	ldr	lr, [r1, #60]	; 0x3c
   3d778:	ldr	r4, [r1, #68]	; 0x44
   3d77c:	ldr	r1, [r1, #64]	; 0x40
   3d780:	mov	r5, sp
   3d784:	str	r4, [r5, #12]
   3d788:	str	r1, [r5, #8]
   3d78c:	str	lr, [r5, #4]
   3d790:	str	ip, [r5]
   3d794:	movw	r1, #53828	; 0xd244
   3d798:	movt	r1, #7
   3d79c:	bl	128c4 <fprintf@plt>
   3d7a0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3d7a4:	movw	r2, #1
   3d7a8:	strb	r2, [r1, #181]	; 0xb5
   3d7ac:	strb	r2, [fp, #-25]	; 0xffffffe7
   3d7b0:	str	r0, [sp, #108]	; 0x6c
   3d7b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3d7b8:	ldrb	r0, [r0, #180]	; 0xb4
   3d7bc:	and	r0, r0, #1
   3d7c0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3d7c4:	ldrb	r1, [r1, #186]	; 0xba
   3d7c8:	and	r1, r1, #1
   3d7cc:	cmp	r0, r1
   3d7d0:	beq	3d858 <__assert_fail@plt+0x2aca0>
   3d7d4:	ldrb	r0, [fp, #-25]	; 0xffffffe7
   3d7d8:	tst	r0, #1
   3d7dc:	beq	3d7f8 <__assert_fail@plt+0x2ac40>
   3d7e0:	movw	r0, #63272	; 0xf728
   3d7e4:	movt	r0, #8
   3d7e8:	ldr	r1, [r0]
   3d7ec:	movw	r0, #32
   3d7f0:	bl	12a38 <fputc@plt>
   3d7f4:	str	r0, [sp, #104]	; 0x68
   3d7f8:	movw	r0, #63272	; 0xf728
   3d7fc:	movt	r0, #8
   3d800:	ldr	r0, [r0]
   3d804:	movw	r1, #53857	; 0xd261
   3d808:	movt	r1, #7
   3d80c:	str	r0, [sp, #100]	; 0x64
   3d810:	mov	r0, r1
   3d814:	bl	12864 <gettext@plt>
   3d818:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3d81c:	ldr	r2, [r1, #40]	; 0x28
   3d820:	ldr	r3, [r1, #44]	; 0x2c
   3d824:	ldr	r1, [sp, #100]	; 0x64
   3d828:	str	r0, [sp, #96]	; 0x60
   3d82c:	mov	r0, r1
   3d830:	ldr	r1, [sp, #96]	; 0x60
   3d834:	bl	128c4 <fprintf@plt>
   3d838:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3d83c:	ldrb	r1, [r1, #180]	; 0xb4
   3d840:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3d844:	and	r1, r1, #1
   3d848:	strb	r1, [r2, #186]	; 0xba
   3d84c:	movw	r1, #1
   3d850:	strb	r1, [fp, #-25]	; 0xffffffe7
   3d854:	str	r0, [sp, #92]	; 0x5c
   3d858:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3d85c:	ldr	r0, [r0, #172]	; 0xac
   3d860:	cmp	r0, #0
   3d864:	beq	3d968 <__assert_fail@plt+0x2adb0>
   3d868:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3d86c:	ldrb	r0, [r0, #184]	; 0xb8
   3d870:	tst	r0, #1
   3d874:	bne	3d968 <__assert_fail@plt+0x2adb0>
   3d878:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3d87c:	ldr	r0, [r0, #88]	; 0x58
   3d880:	asr	r1, r0, #31
   3d884:	str	r0, [fp, #-40]	; 0xffffffd8
   3d888:	str	r1, [fp, #-36]	; 0xffffffdc
   3d88c:	movw	r0, #63272	; 0xf728
   3d890:	movt	r0, #8
   3d894:	ldr	r0, [r0]
   3d898:	ldrb	r1, [fp, #-25]	; 0xffffffe7
   3d89c:	mov	r2, #1
   3d8a0:	bic	r1, r2, r1
   3d8a4:	movw	r2, #53870	; 0xd26e
   3d8a8:	movt	r2, #7
   3d8ac:	add	r1, r2, r1
   3d8b0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3d8b4:	ldr	r3, [r2, #72]	; 0x48
   3d8b8:	ldr	ip, [r2, #76]	; 0x4c
   3d8bc:	ldr	lr, [r2, #80]	; 0x50
   3d8c0:	ldr	r2, [r2, #84]	; 0x54
   3d8c4:	ldr	r4, [fp, #-40]	; 0xffffffd8
   3d8c8:	ldr	r5, [fp, #-36]	; 0xffffffdc
   3d8cc:	mov	r6, sp
   3d8d0:	str	r5, [r6, #12]
   3d8d4:	str	r4, [r6, #8]
   3d8d8:	str	r2, [r6, #4]
   3d8dc:	str	lr, [r6]
   3d8e0:	mov	r2, r3
   3d8e4:	mov	r3, ip
   3d8e8:	bl	128c4 <fprintf@plt>
   3d8ec:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3d8f0:	ldr	r1, [r1, #92]	; 0x5c
   3d8f4:	cmp	r1, #0
   3d8f8:	str	r0, [sp, #88]	; 0x58
   3d8fc:	beq	3d92c <__assert_fail@plt+0x2ad74>
   3d900:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3d904:	ldr	r0, [r0, #92]	; 0x5c
   3d908:	str	r0, [fp, #-44]	; 0xffffffd4
   3d90c:	movw	r0, #63272	; 0xf728
   3d910:	movt	r0, #8
   3d914:	ldr	r0, [r0]
   3d918:	ldr	r2, [fp, #-44]	; 0xffffffd4
   3d91c:	movw	r1, #53892	; 0xd284
   3d920:	movt	r1, #7
   3d924:	bl	128c4 <fprintf@plt>
   3d928:	str	r0, [sp, #84]	; 0x54
   3d92c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3d930:	ldr	r0, [r0, #28]
   3d934:	cmp	r0, #1
   3d938:	bne	3d958 <__assert_fail@plt+0x2ada0>
   3d93c:	movw	r0, #63272	; 0xf728
   3d940:	movt	r0, #8
   3d944:	ldr	r1, [r0]
   3d948:	movw	r0, #53898	; 0xd28a
   3d94c:	movt	r0, #7
   3d950:	bl	12b4c <fputs@plt>
   3d954:	str	r0, [sp, #80]	; 0x50
   3d958:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3d95c:	movw	r1, #1
   3d960:	strb	r1, [r0, #184]	; 0xb8
   3d964:	strb	r1, [fp, #-25]	; 0xffffffe7
   3d968:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3d96c:	ldr	r0, [r0, #160]	; 0xa0
   3d970:	cmp	r0, #0
   3d974:	beq	3da38 <__assert_fail@plt+0x2ae80>
   3d978:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3d97c:	ldrb	r0, [r0, #182]	; 0xb6
   3d980:	tst	r0, #1
   3d984:	bne	3da38 <__assert_fail@plt+0x2ae80>
   3d988:	ldrb	r0, [fp, #-25]	; 0xffffffe7
   3d98c:	tst	r0, #1
   3d990:	beq	3d9ac <__assert_fail@plt+0x2adf4>
   3d994:	movw	r0, #63272	; 0xf728
   3d998:	movt	r0, #8
   3d99c:	ldr	r1, [r0]
   3d9a0:	movw	r0, #32
   3d9a4:	bl	12a38 <fputc@plt>
   3d9a8:	str	r0, [sp, #76]	; 0x4c
   3d9ac:	movw	r0, #63272	; 0xf728
   3d9b0:	movt	r0, #8
   3d9b4:	ldr	r0, [r0]
   3d9b8:	movw	r1, #53901	; 0xd28d
   3d9bc:	movt	r1, #7
   3d9c0:	str	r0, [sp, #72]	; 0x48
   3d9c4:	mov	r0, r1
   3d9c8:	bl	12864 <gettext@plt>
   3d9cc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3d9d0:	sub	lr, fp, #144	; 0x90
   3d9d4:	mov	r2, #100	; 0x64
   3d9d8:	str	r0, [sp, #68]	; 0x44
   3d9dc:	mov	r0, r1
   3d9e0:	mov	r1, lr
   3d9e4:	bl	47090 <__assert_fail@plt+0x344d8>
   3d9e8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3d9ec:	ldr	r2, [r1, #8]
   3d9f0:	ldr	r1, [r1, #12]
   3d9f4:	ldr	lr, [fp, #-24]	; 0xffffffe8
   3d9f8:	ldr	lr, [lr, #16]
   3d9fc:	mov	r3, sp
   3da00:	str	lr, [r3, #8]
   3da04:	str	r1, [r3, #4]
   3da08:	str	r2, [r3]
   3da0c:	ldr	r1, [sp, #72]	; 0x48
   3da10:	str	r0, [sp, #64]	; 0x40
   3da14:	mov	r0, r1
   3da18:	ldr	r1, [sp, #68]	; 0x44
   3da1c:	ldr	r2, [sp, #64]	; 0x40
   3da20:	bl	128c4 <fprintf@plt>
   3da24:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3da28:	movw	r2, #1
   3da2c:	strb	r2, [r1, #182]	; 0xb6
   3da30:	strb	r2, [fp, #-25]	; 0xffffffe7
   3da34:	str	r0, [sp, #60]	; 0x3c
   3da38:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3da3c:	ldr	r0, [r0, #164]	; 0xa4
   3da40:	cmp	r0, #0
   3da44:	beq	3dacc <__assert_fail@plt+0x2af14>
   3da48:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3da4c:	ldrb	r0, [r0, #183]	; 0xb7
   3da50:	tst	r0, #1
   3da54:	bne	3dacc <__assert_fail@plt+0x2af14>
   3da58:	movw	r0, #63272	; 0xf728
   3da5c:	movt	r0, #8
   3da60:	ldr	r0, [r0]
   3da64:	ldrb	r1, [fp, #-25]	; 0xffffffe7
   3da68:	mvn	r2, #0
   3da6c:	eor	r1, r1, r2
   3da70:	and	r1, r1, #1
   3da74:	movw	r2, #53933	; 0xd2ad
   3da78:	movt	r2, #7
   3da7c:	add	r1, r2, r1
   3da80:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3da84:	ldr	r2, [r2, #20]
   3da88:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3da8c:	ldr	r3, [r3, #168]	; 0xa8
   3da90:	cmp	r3, #0
   3da94:	movw	r3, #0
   3da98:	movne	r3, #1
   3da9c:	tst	r3, #1
   3daa0:	movw	r3, #39197	; 0x991d
   3daa4:	movt	r3, #7
   3daa8:	movw	ip, #53945	; 0xd2b9
   3daac:	movt	ip, #7
   3dab0:	movne	r3, ip
   3dab4:	bl	128c4 <fprintf@plt>
   3dab8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3dabc:	movw	r2, #1
   3dac0:	strb	r2, [r1, #183]	; 0xb7
   3dac4:	strb	r2, [fp, #-25]	; 0xffffffe7
   3dac8:	str	r0, [sp, #56]	; 0x38
   3dacc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3dad0:	ldr	r0, [r0, #176]	; 0xb0
   3dad4:	cmp	r0, #0
   3dad8:	beq	3db5c <__assert_fail@plt+0x2afa4>
   3dadc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3dae0:	ldrb	r0, [r0, #185]	; 0xb9
   3dae4:	tst	r0, #1
   3dae8:	bne	3db5c <__assert_fail@plt+0x2afa4>
   3daec:	add	r1, sp, #125	; 0x7d
   3daf0:	movw	r0, #63272	; 0xf728
   3daf4:	movt	r0, #8
   3daf8:	ldr	r0, [r0]
   3dafc:	ldrb	r2, [fp, #-25]	; 0xffffffe7
   3db00:	mvn	r3, #0
   3db04:	eor	r2, r2, r3
   3db08:	and	r2, r2, #1
   3db0c:	movw	r3, #53950	; 0xd2be
   3db10:	movt	r3, #7
   3db14:	add	r2, r3, r2
   3db18:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3db1c:	ldr	r3, [r3, #24]
   3db20:	str	r0, [sp, #52]	; 0x34
   3db24:	mov	r0, r3
   3db28:	str	r2, [sp, #48]	; 0x30
   3db2c:	bl	4723c <__assert_fail@plt+0x34684>
   3db30:	ldr	r1, [sp, #52]	; 0x34
   3db34:	str	r0, [sp, #44]	; 0x2c
   3db38:	mov	r0, r1
   3db3c:	ldr	r1, [sp, #48]	; 0x30
   3db40:	ldr	r2, [sp, #44]	; 0x2c
   3db44:	bl	128c4 <fprintf@plt>
   3db48:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3db4c:	movw	r2, #1
   3db50:	strb	r2, [r1, #185]	; 0xb9
   3db54:	strb	r2, [fp, #-25]	; 0xffffffe7
   3db58:	str	r0, [sp, #40]	; 0x28
   3db5c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3db60:	ldrb	r0, [r0, #152]	; 0x98
   3db64:	tst	r0, #1
   3db68:	beq	3dbe4 <__assert_fail@plt+0x2b02c>
   3db6c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3db70:	ldr	r0, [r0, #88]	; 0x58
   3db74:	asr	r1, r0, #31
   3db78:	str	r0, [sp, #112]	; 0x70
   3db7c:	str	r1, [sp, #116]	; 0x74
   3db80:	ldrb	r0, [fp, #-25]	; 0xffffffe7
   3db84:	tst	r0, #1
   3db88:	beq	3dba4 <__assert_fail@plt+0x2afec>
   3db8c:	movw	r0, #63272	; 0xf728
   3db90:	movt	r0, #8
   3db94:	ldr	r1, [r0]
   3db98:	movw	r0, #32
   3db9c:	bl	12a38 <fputc@plt>
   3dba0:	str	r0, [sp, #36]	; 0x24
   3dba4:	movw	r0, #63272	; 0xf728
   3dba8:	movt	r0, #8
   3dbac:	ldr	r0, [r0]
   3dbb0:	movw	r1, #53957	; 0xd2c5
   3dbb4:	movt	r1, #7
   3dbb8:	str	r0, [sp, #32]
   3dbbc:	mov	r0, r1
   3dbc0:	bl	12864 <gettext@plt>
   3dbc4:	ldr	r2, [sp, #112]	; 0x70
   3dbc8:	ldr	r3, [sp, #116]	; 0x74
   3dbcc:	ldr	r1, [sp, #32]
   3dbd0:	str	r0, [sp, #28]
   3dbd4:	mov	r0, r1
   3dbd8:	ldr	r1, [sp, #28]
   3dbdc:	bl	128c4 <fprintf@plt>
   3dbe0:	str	r0, [sp, #24]
   3dbe4:	movw	r0, #63272	; 0xf728
   3dbe8:	movt	r0, #8
   3dbec:	ldr	r1, [r0]
   3dbf0:	movw	r0, #10
   3dbf4:	bl	12a38 <fputc@plt>
   3dbf8:	str	r0, [sp, #20]
   3dbfc:	sub	sp, fp, #16
   3dc00:	pop	{r4, r5, r6, sl, fp, pc}
   3dc04:	push	{fp, lr}
   3dc08:	mov	fp, sp
   3dc0c:	sub	sp, sp, #32
   3dc10:	str	r0, [fp, #-4]
   3dc14:	str	r1, [fp, #-8]
   3dc18:	movw	r0, #0
   3dc1c:	strb	r0, [fp, #-9]
   3dc20:	ldr	r0, [fp, #-8]
   3dc24:	bl	3e9ac <__assert_fail@plt+0x2bdf4>
   3dc28:	tst	r0, #1
   3dc2c:	bne	3dc34 <__assert_fail@plt+0x2b07c>
   3dc30:	b	3de78 <__assert_fail@plt+0x2b2c0>
   3dc34:	movw	r0, #53811	; 0xd233
   3dc38:	movt	r0, #7
   3dc3c:	bl	12864 <gettext@plt>
   3dc40:	ldr	r1, [fp, #-4]
   3dc44:	bl	3e9c4 <__assert_fail@plt+0x2be0c>
   3dc48:	ldr	r0, [fp, #-8]
   3dc4c:	ldr	r1, [r0, #96]	; 0x60
   3dc50:	ldr	r0, [r0, #100]	; 0x64
   3dc54:	orr	r0, r1, r0
   3dc58:	cmp	r0, #0
   3dc5c:	bne	3dd24 <__assert_fail@plt+0x2b16c>
   3dc60:	b	3dc64 <__assert_fail@plt+0x2b0ac>
   3dc64:	ldr	r0, [fp, #-8]
   3dc68:	ldr	r1, [r0, #104]	; 0x68
   3dc6c:	ldr	r0, [r0, #108]	; 0x6c
   3dc70:	orr	r0, r1, r0
   3dc74:	cmp	r0, #0
   3dc78:	bne	3dd24 <__assert_fail@plt+0x2b16c>
   3dc7c:	b	3dc80 <__assert_fail@plt+0x2b0c8>
   3dc80:	ldr	r0, [fp, #-8]
   3dc84:	ldr	r1, [r0, #112]	; 0x70
   3dc88:	ldr	r0, [r0, #116]	; 0x74
   3dc8c:	orr	r0, r1, r0
   3dc90:	cmp	r0, #0
   3dc94:	bne	3dd24 <__assert_fail@plt+0x2b16c>
   3dc98:	b	3dc9c <__assert_fail@plt+0x2b0e4>
   3dc9c:	ldr	r0, [fp, #-8]
   3dca0:	ldr	r1, [r0, #120]	; 0x78
   3dca4:	ldr	r0, [r0, #124]	; 0x7c
   3dca8:	orr	r0, r1, r0
   3dcac:	cmp	r0, #0
   3dcb0:	bne	3dd24 <__assert_fail@plt+0x2b16c>
   3dcb4:	b	3dcb8 <__assert_fail@plt+0x2b100>
   3dcb8:	ldr	r0, [fp, #-8]
   3dcbc:	ldr	r1, [r0, #128]	; 0x80
   3dcc0:	ldr	r0, [r0, #132]	; 0x84
   3dcc4:	orr	r0, r1, r0
   3dcc8:	cmp	r0, #0
   3dccc:	bne	3dd24 <__assert_fail@plt+0x2b16c>
   3dcd0:	b	3dcd4 <__assert_fail@plt+0x2b11c>
   3dcd4:	ldr	r0, [fp, #-8]
   3dcd8:	ldr	r1, [r0, #136]	; 0x88
   3dcdc:	ldr	r0, [r0, #140]	; 0x8c
   3dce0:	orr	r0, r1, r0
   3dce4:	cmp	r0, #0
   3dce8:	bne	3dd24 <__assert_fail@plt+0x2b16c>
   3dcec:	b	3dcf0 <__assert_fail@plt+0x2b138>
   3dcf0:	ldr	r0, [fp, #-8]
   3dcf4:	ldr	r0, [r0, #144]	; 0x90
   3dcf8:	cmp	r0, #0
   3dcfc:	bne	3dd24 <__assert_fail@plt+0x2b16c>
   3dd00:	movw	r0, #53988	; 0xd2e4
   3dd04:	movt	r0, #7
   3dd08:	bl	12864 <gettext@plt>
   3dd0c:	movw	lr, #63272	; 0xf728
   3dd10:	movt	lr, #8
   3dd14:	ldr	r1, [lr]
   3dd18:	bl	12b4c <fputs@plt>
   3dd1c:	str	r0, [sp, #16]
   3dd20:	b	3de78 <__assert_fail@plt+0x2b2c0>
   3dd24:	ldr	r0, [fp, #-8]
   3dd28:	ldr	r2, [r0, #96]	; 0x60
   3dd2c:	ldr	r3, [r0, #100]	; 0x64
   3dd30:	ldrb	r0, [fp, #-9]
   3dd34:	movw	r1, #54004	; 0xd2f4
   3dd38:	movt	r1, #7
   3dd3c:	mov	ip, sp
   3dd40:	str	r1, [ip]
   3dd44:	and	r0, r0, #1
   3dd48:	bl	47418 <__assert_fail@plt+0x34860>
   3dd4c:	strb	r0, [fp, #-9]
   3dd50:	ldr	r0, [fp, #-8]
   3dd54:	ldr	r2, [r0, #104]	; 0x68
   3dd58:	ldr	r3, [r0, #108]	; 0x6c
   3dd5c:	ldrb	r0, [fp, #-9]
   3dd60:	movw	r1, #54012	; 0xd2fc
   3dd64:	movt	r1, #7
   3dd68:	mov	ip, sp
   3dd6c:	str	r1, [ip]
   3dd70:	and	r0, r0, #1
   3dd74:	bl	47418 <__assert_fail@plt+0x34860>
   3dd78:	strb	r0, [fp, #-9]
   3dd7c:	ldr	r0, [fp, #-8]
   3dd80:	ldr	r2, [r0, #112]	; 0x70
   3dd84:	ldr	r3, [r0, #116]	; 0x74
   3dd88:	ldrb	r0, [fp, #-9]
   3dd8c:	movw	r1, #54021	; 0xd305
   3dd90:	movt	r1, #7
   3dd94:	mov	ip, sp
   3dd98:	str	r1, [ip]
   3dd9c:	and	r0, r0, #1
   3dda0:	bl	47418 <__assert_fail@plt+0x34860>
   3dda4:	strb	r0, [fp, #-9]
   3dda8:	ldr	r0, [fp, #-8]
   3ddac:	ldr	r2, [r0, #120]	; 0x78
   3ddb0:	ldr	r3, [r0, #124]	; 0x7c
   3ddb4:	ldrb	r0, [fp, #-9]
   3ddb8:	movw	r1, #54028	; 0xd30c
   3ddbc:	movt	r1, #7
   3ddc0:	mov	ip, sp
   3ddc4:	str	r1, [ip]
   3ddc8:	and	r0, r0, #1
   3ddcc:	bl	47418 <__assert_fail@plt+0x34860>
   3ddd0:	strb	r0, [fp, #-9]
   3ddd4:	ldr	r0, [fp, #-8]
   3ddd8:	ldr	r2, [r0, #128]	; 0x80
   3dddc:	ldr	r3, [r0, #132]	; 0x84
   3dde0:	ldrb	r0, [fp, #-9]
   3dde4:	movw	r1, #54036	; 0xd314
   3dde8:	movt	r1, #7
   3ddec:	mov	ip, sp
   3ddf0:	str	r1, [ip]
   3ddf4:	and	r0, r0, #1
   3ddf8:	bl	47418 <__assert_fail@plt+0x34860>
   3ddfc:	strb	r0, [fp, #-9]
   3de00:	ldr	r0, [fp, #-8]
   3de04:	ldr	r2, [r0, #136]	; 0x88
   3de08:	ldr	r3, [r0, #140]	; 0x8c
   3de0c:	ldrb	r0, [fp, #-9]
   3de10:	movw	r1, #43572	; 0xaa34
   3de14:	movt	r1, #7
   3de18:	mov	ip, sp
   3de1c:	str	r1, [ip]
   3de20:	and	r0, r0, #1
   3de24:	bl	47418 <__assert_fail@plt+0x34860>
   3de28:	strb	r0, [fp, #-9]
   3de2c:	ldrb	r0, [fp, #-9]
   3de30:	ldr	r1, [fp, #-8]
   3de34:	ldr	r1, [r1, #144]	; 0x90
   3de38:	asr	r3, r1, #31
   3de3c:	movw	r2, #54044	; 0xd31c
   3de40:	movt	r2, #7
   3de44:	mov	ip, sp
   3de48:	str	r2, [ip]
   3de4c:	and	r0, r0, #1
   3de50:	mov	r2, r1
   3de54:	bl	47418 <__assert_fail@plt+0x34860>
   3de58:	movw	r1, #63272	; 0xf728
   3de5c:	movt	r1, #8
   3de60:	ldr	r1, [r1]
   3de64:	movw	r2, #10
   3de68:	str	r0, [sp, #12]
   3de6c:	mov	r0, r2
   3de70:	bl	12a38 <fputc@plt>
   3de74:	str	r0, [sp, #8]
   3de78:	mov	sp, fp
   3de7c:	pop	{fp, pc}
   3de80:	push	{r4, sl, fp, lr}
   3de84:	add	fp, sp, #8
   3de88:	sub	sp, sp, #32
   3de8c:	ldr	r1, [fp, #12]
   3de90:	ldr	ip, [fp, #8]
   3de94:	ldr	lr, [fp, #20]
   3de98:	ldr	r4, [fp, #16]
   3de9c:	str	r0, [fp, #-12]
   3dea0:	str	r3, [sp, #20]
   3dea4:	str	r2, [sp, #16]
   3dea8:	str	r1, [sp, #12]
   3deac:	str	ip, [sp, #8]
   3deb0:	ldr	r0, [sp, #16]
   3deb4:	ldr	r1, [sp, #20]
   3deb8:	ldr	r2, [fp, #-12]
   3debc:	str	r1, [r2, #76]	; 0x4c
   3dec0:	str	r0, [r2, #72]	; 0x48
   3dec4:	ldr	r0, [sp, #8]
   3dec8:	ldr	r1, [sp, #12]
   3decc:	ldr	r2, [fp, #-12]
   3ded0:	str	r1, [r2, #84]	; 0x54
   3ded4:	str	r0, [r2, #80]	; 0x50
   3ded8:	ldr	r0, [fp, #16]
   3dedc:	ldr	r1, [fp, #-12]
   3dee0:	str	r0, [r1, #88]	; 0x58
   3dee4:	ldr	r0, [fp, #20]
   3dee8:	ldr	r1, [fp, #-12]
   3deec:	str	r0, [r1, #92]	; 0x5c
   3def0:	str	r4, [sp, #4]
   3def4:	str	lr, [sp]
   3def8:	sub	sp, fp, #8
   3defc:	pop	{r4, sl, fp, pc}
   3df00:	push	{r4, r5, r6, sl, fp, lr}
   3df04:	add	fp, sp, #16
   3df08:	sub	sp, sp, #144	; 0x90
   3df0c:	ldr	r1, [fp, #28]
   3df10:	ldr	ip, [fp, #24]
   3df14:	ldr	lr, [fp, #20]
   3df18:	ldr	r4, [fp, #16]
   3df1c:	ldr	r5, [fp, #12]
   3df20:	ldr	r6, [fp, #8]
   3df24:	str	r2, [fp, #-48]	; 0xffffffd0
   3df28:	str	r3, [fp, #-44]	; 0xffffffd4
   3df2c:	str	r6, [fp, #-40]	; 0xffffffd8
   3df30:	str	r5, [fp, #-36]	; 0xffffffdc
   3df34:	str	r4, [fp, #-32]	; 0xffffffe0
   3df38:	str	lr, [fp, #-28]	; 0xffffffe4
   3df3c:	str	r0, [fp, #-52]	; 0xffffffcc
   3df40:	str	r1, [fp, #-60]	; 0xffffffc4
   3df44:	str	ip, [fp, #-64]	; 0xffffffc0
   3df48:	movw	r0, #0
   3df4c:	strb	r0, [fp, #-73]	; 0xffffffb7
   3df50:	ldr	r0, [fp, #-32]	; 0xffffffe0
   3df54:	cmp	r0, #2
   3df58:	bgt	3df88 <__assert_fail@plt+0x2b3d0>
   3df5c:	ldr	r0, [fp, #-60]	; 0xffffffc4
   3df60:	cmn	r0, #1
   3df64:	bgt	3df88 <__assert_fail@plt+0x2b3d0>
   3df68:	b	3df6c <__assert_fail@plt+0x2b3b4>
   3df6c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   3df70:	ldr	r1, [fp, #-36]	; 0xffffffdc
   3df74:	mov	r2, #100	; 0x64
   3df78:	umull	r0, r3, r0, r2
   3df7c:	mla	r1, r1, r2, r3
   3df80:	str	r0, [fp, #-40]	; 0xffffffd8
   3df84:	str	r1, [fp, #-36]	; 0xffffffdc
   3df88:	ldr	r0, [fp, #-60]	; 0xffffffc4
   3df8c:	cmn	r0, #1
   3df90:	bgt	3dfd0 <__assert_fail@plt+0x2b418>
   3df94:	b	3df98 <__assert_fail@plt+0x2b3e0>
   3df98:	ldr	r0, [fp, #-40]	; 0xffffffd8
   3df9c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   3dfa0:	mov	r2, #100	; 0x64
   3dfa4:	mov	r3, #0
   3dfa8:	bl	77780 <__assert_fail@plt+0x64bc8>
   3dfac:	mov	lr, #60	; 0x3c
   3dfb0:	umull	r0, lr, r0, lr
   3dfb4:	rsb	r1, r1, r1, lsl #4
   3dfb8:	add	r1, lr, r1, lsl #2
   3dfbc:	adds	r0, r0, r2
   3dfc0:	adc	r1, r1, r3
   3dfc4:	str	r0, [fp, #-72]	; 0xffffffb8
   3dfc8:	str	r1, [fp, #-68]	; 0xffffffbc
   3dfcc:	b	3e2f0 <__assert_fail@plt+0x2b738>
   3dfd0:	b	3e0dc <__assert_fail@plt+0x2b524>
   3dfd4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   3dfd8:	cmn	r0, #1
   3dfdc:	bgt	3e050 <__assert_fail@plt+0x2b498>
   3dfe0:	b	3dfe4 <__assert_fail@plt+0x2b42c>
   3dfe4:	b	3dfe8 <__assert_fail@plt+0x2b430>
   3dfe8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   3dfec:	ldr	r1, [fp, #-36]	; 0xffffffdc
   3dff0:	movw	r2, #8738	; 0x2222
   3dff4:	movt	r2, #8738	; 0x2222
   3dff8:	subs	r0, r0, r2
   3dffc:	movw	r2, #8738	; 0x2222
   3e000:	movt	r2, #546	; 0x222
   3e004:	sbcs	r1, r1, r2
   3e008:	str	r0, [sp, #80]	; 0x50
   3e00c:	str	r1, [sp, #76]	; 0x4c
   3e010:	blt	3e174 <__assert_fail@plt+0x2b5bc>
   3e014:	b	3e1a0 <__assert_fail@plt+0x2b5e8>
   3e018:	ldr	r0, [fp, #-40]	; 0xffffffd8
   3e01c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   3e020:	mvn	r1, r1
   3e024:	mvn	r0, r0
   3e028:	movw	r2, #56797	; 0xdddd
   3e02c:	movt	r2, #56797	; 0xdddd
   3e030:	subs	r0, r2, r0
   3e034:	movw	r2, #56797	; 0xdddd
   3e038:	movt	r2, #64989	; 0xfddd
   3e03c:	sbcs	r1, r2, r1
   3e040:	str	r0, [sp, #72]	; 0x48
   3e044:	str	r1, [sp, #68]	; 0x44
   3e048:	blt	3e174 <__assert_fail@plt+0x2b5bc>
   3e04c:	b	3e1a0 <__assert_fail@plt+0x2b5e8>
   3e050:	b	3e0ac <__assert_fail@plt+0x2b4f4>
   3e054:	b	3e058 <__assert_fail@plt+0x2b4a0>
   3e058:	ldr	r0, [fp, #-40]	; 0xffffffd8
   3e05c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   3e060:	add	r1, r1, #-2147483648	; 0x80000000
   3e064:	rsbs	r0, r0, #0
   3e068:	rscs	r1, r1, #0
   3e06c:	str	r0, [sp, #64]	; 0x40
   3e070:	str	r1, [sp, #60]	; 0x3c
   3e074:	blt	3e174 <__assert_fail@plt+0x2b5bc>
   3e078:	b	3e1a0 <__assert_fail@plt+0x2b5e8>
   3e07c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   3e080:	ldr	r1, [fp, #-36]	; 0xffffffdc
   3e084:	subs	r0, r0, #1
   3e088:	sbcs	r1, r1, #0
   3e08c:	str	r0, [sp, #56]	; 0x38
   3e090:	str	r1, [sp, #52]	; 0x34
   3e094:	blt	3e1a0 <__assert_fail@plt+0x2b5e8>
   3e098:	b	3e09c <__assert_fail@plt+0x2b4e4>
   3e09c:	mov	r0, #0
   3e0a0:	cmp	r0, #0
   3e0a4:	bne	3e174 <__assert_fail@plt+0x2b5bc>
   3e0a8:	b	3e1a0 <__assert_fail@plt+0x2b5e8>
   3e0ac:	ldr	r0, [fp, #-40]	; 0xffffffd8
   3e0b0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   3e0b4:	movw	r2, #56798	; 0xddde
   3e0b8:	movt	r2, #56797	; 0xdddd
   3e0bc:	subs	r0, r2, r0
   3e0c0:	movw	r2, #56797	; 0xdddd
   3e0c4:	movt	r2, #64989	; 0xfddd
   3e0c8:	sbcs	r1, r2, r1
   3e0cc:	str	r0, [sp, #48]	; 0x30
   3e0d0:	str	r1, [sp, #44]	; 0x2c
   3e0d4:	blt	3e174 <__assert_fail@plt+0x2b5bc>
   3e0d8:	b	3e1a0 <__assert_fail@plt+0x2b5e8>
   3e0dc:	b	3e0e4 <__assert_fail@plt+0x2b52c>
   3e0e0:	b	3e1a0 <__assert_fail@plt+0x2b5e8>
   3e0e4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   3e0e8:	cmn	r0, #1
   3e0ec:	bgt	3e144 <__assert_fail@plt+0x2b58c>
   3e0f0:	b	3e0f4 <__assert_fail@plt+0x2b53c>
   3e0f4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   3e0f8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   3e0fc:	and	r0, r0, r1
   3e100:	cmn	r0, #1
   3e104:	bne	3e118 <__assert_fail@plt+0x2b560>
   3e108:	b	3e10c <__assert_fail@plt+0x2b554>
   3e10c:	b	3e110 <__assert_fail@plt+0x2b558>
   3e110:	b	3e1a0 <__assert_fail@plt+0x2b5e8>
   3e114:	b	3e1a0 <__assert_fail@plt+0x2b5e8>
   3e118:	ldr	r2, [fp, #-40]	; 0xffffffd8
   3e11c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   3e120:	mov	r0, #0
   3e124:	mov	r1, #-2147483648	; 0x80000000
   3e128:	bl	77780 <__assert_fail@plt+0x64bc8>
   3e12c:	subs	r0, r0, #60	; 0x3c
   3e130:	sbcs	r1, r1, #0
   3e134:	str	r0, [sp, #40]	; 0x28
   3e138:	str	r1, [sp, #36]	; 0x24
   3e13c:	blt	3e174 <__assert_fail@plt+0x2b5bc>
   3e140:	b	3e1a0 <__assert_fail@plt+0x2b5e8>
   3e144:	ldr	r0, [fp, #-40]	; 0xffffffd8
   3e148:	ldr	r1, [fp, #-36]	; 0xffffffdc
   3e14c:	movw	r2, #8739	; 0x2223
   3e150:	movt	r2, #8738	; 0x2222
   3e154:	subs	r0, r0, r2
   3e158:	movw	r2, #8738	; 0x2222
   3e15c:	movt	r2, #546	; 0x222
   3e160:	sbcs	r1, r1, r2
   3e164:	str	r0, [sp, #32]
   3e168:	str	r1, [sp, #28]
   3e16c:	blt	3e1a0 <__assert_fail@plt+0x2b5e8>
   3e170:	b	3e174 <__assert_fail@plt+0x2b5bc>
   3e174:	ldr	r0, [fp, #-40]	; 0xffffffd8
   3e178:	ldr	r1, [fp, #-36]	; 0xffffffdc
   3e17c:	mov	r2, #60	; 0x3c
   3e180:	umull	r0, r2, r0, r2
   3e184:	rsb	r1, r1, r1, lsl #4
   3e188:	add	r1, r2, r1, lsl #2
   3e18c:	str	r0, [fp, #-72]	; 0xffffffb8
   3e190:	str	r1, [fp, #-68]	; 0xffffffbc
   3e194:	movw	r0, #1
   3e198:	str	r0, [sp, #24]
   3e19c:	b	3e1c8 <__assert_fail@plt+0x2b610>
   3e1a0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   3e1a4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   3e1a8:	mov	r2, #60	; 0x3c
   3e1ac:	umull	r0, r2, r0, r2
   3e1b0:	rsb	r1, r1, r1, lsl #4
   3e1b4:	add	r1, r2, r1, lsl #2
   3e1b8:	str	r0, [fp, #-72]	; 0xffffffb8
   3e1bc:	str	r1, [fp, #-68]	; 0xffffffbc
   3e1c0:	movw	r0, #0
   3e1c4:	str	r0, [sp, #24]
   3e1c8:	ldr	r0, [sp, #24]
   3e1cc:	ldrb	r1, [fp, #-73]	; 0xffffffb7
   3e1d0:	and	r1, r1, #1
   3e1d4:	orr	r0, r1, r0
   3e1d8:	cmp	r0, #0
   3e1dc:	movw	r0, #0
   3e1e0:	movne	r0, #1
   3e1e4:	and	r0, r0, #1
   3e1e8:	strb	r0, [fp, #-73]	; 0xffffffb7
   3e1ec:	ldrb	r0, [fp, #-48]	; 0xffffffd0
   3e1f0:	tst	r0, #1
   3e1f4:	beq	3e264 <__assert_fail@plt+0x2b6ac>
   3e1f8:	ldr	r0, [fp, #-72]	; 0xffffffb8
   3e1fc:	ldr	r1, [fp, #-68]	; 0xffffffbc
   3e200:	ldr	r2, [fp, #-64]	; 0xffffffc0
   3e204:	ldr	r3, [fp, #-60]	; 0xffffffc4
   3e208:	mov	ip, #0
   3e20c:	cmn	r3, #1
   3e210:	mov	lr, ip
   3e214:	movwgt	lr, #1
   3e218:	cmn	r1, #1
   3e21c:	mov	r4, ip
   3e220:	movwgt	r4, #1
   3e224:	sub	r5, r4, lr
   3e228:	cmp	r4, lr
   3e22c:	movwne	r5, #1
   3e230:	subs	r0, r0, r2
   3e234:	sbc	r1, r1, r3
   3e238:	cmn	r1, #1
   3e23c:	movwgt	ip, #1
   3e240:	sub	r2, r4, ip
   3e244:	cmp	r4, ip
   3e248:	movwne	r2, #1
   3e24c:	and	r2, r5, r2
   3e250:	str	r0, [fp, #-72]	; 0xffffffb8
   3e254:	str	r1, [fp, #-68]	; 0xffffffbc
   3e258:	and	r0, r2, #1
   3e25c:	str	r0, [sp, #20]
   3e260:	b	3e2cc <__assert_fail@plt+0x2b714>
   3e264:	ldr	r0, [fp, #-72]	; 0xffffffb8
   3e268:	ldr	r1, [fp, #-68]	; 0xffffffbc
   3e26c:	ldr	r2, [fp, #-64]	; 0xffffffc0
   3e270:	ldr	r3, [fp, #-60]	; 0xffffffc4
   3e274:	mov	ip, #0
   3e278:	cmn	r1, #1
   3e27c:	mov	lr, ip
   3e280:	movwgt	lr, #1
   3e284:	adds	r0, r0, r2
   3e288:	adc	r1, r1, r3
   3e28c:	cmn	r1, #1
   3e290:	mov	r2, ip
   3e294:	movwgt	r2, #1
   3e298:	sub	r4, lr, r2
   3e29c:	cmp	lr, r2
   3e2a0:	movwne	r4, #1
   3e2a4:	cmn	r3, #1
   3e2a8:	movwgt	ip, #1
   3e2ac:	sub	r2, lr, ip
   3e2b0:	clz	r2, r2
   3e2b4:	lsr	r2, r2, #5
   3e2b8:	and	r2, r2, r4
   3e2bc:	str	r0, [fp, #-72]	; 0xffffffb8
   3e2c0:	str	r1, [fp, #-68]	; 0xffffffbc
   3e2c4:	and	r0, r2, #1
   3e2c8:	str	r0, [sp, #20]
   3e2cc:	ldr	r0, [sp, #20]
   3e2d0:	ldrb	r1, [fp, #-73]	; 0xffffffb7
   3e2d4:	and	r1, r1, #1
   3e2d8:	orr	r0, r1, r0
   3e2dc:	cmp	r0, #0
   3e2e0:	movw	r0, #0
   3e2e4:	movne	r0, #1
   3e2e8:	and	r0, r0, #1
   3e2ec:	strb	r0, [fp, #-73]	; 0xffffffb7
   3e2f0:	ldrb	r0, [fp, #-73]	; 0xffffffb7
   3e2f4:	tst	r0, #1
   3e2f8:	bne	3e34c <__assert_fail@plt+0x2b794>
   3e2fc:	ldr	r0, [fp, #-72]	; 0xffffffb8
   3e300:	ldr	r1, [fp, #-68]	; 0xffffffbc
   3e304:	movw	r2, #64096	; 0xfa60
   3e308:	movt	r2, #65535	; 0xffff
   3e30c:	subs	r0, r0, r2
   3e310:	mvn	r2, #0
   3e314:	sbcs	r1, r1, r2
   3e318:	str	r0, [sp, #16]
   3e31c:	str	r1, [sp, #12]
   3e320:	blt	3e34c <__assert_fail@plt+0x2b794>
   3e324:	b	3e328 <__assert_fail@plt+0x2b770>
   3e328:	ldr	r0, [fp, #-72]	; 0xffffffb8
   3e32c:	ldr	r1, [fp, #-68]	; 0xffffffbc
   3e330:	movw	r2, #1441	; 0x5a1
   3e334:	subs	r0, r0, r2
   3e338:	sbcs	r1, r1, #0
   3e33c:	str	r0, [sp, #8]
   3e340:	str	r1, [sp, #4]
   3e344:	blt	3e35c <__assert_fail@plt+0x2b7a4>
   3e348:	b	3e34c <__assert_fail@plt+0x2b794>
   3e34c:	movw	r0, #0
   3e350:	and	r0, r0, #1
   3e354:	strb	r0, [fp, #-17]	; 0xffffffef
   3e358:	b	3e37c <__assert_fail@plt+0x2b7c4>
   3e35c:	ldr	r0, [fp, #-72]	; 0xffffffb8
   3e360:	rsb	r0, r0, r0, lsl #4
   3e364:	lsl	r0, r0, #2
   3e368:	ldr	r1, [fp, #-52]	; 0xffffffcc
   3e36c:	str	r0, [r1, #24]
   3e370:	movw	r0, #1
   3e374:	and	r0, r0, #1
   3e378:	strb	r0, [fp, #-17]	; 0xffffffef
   3e37c:	ldrb	r0, [fp, #-17]	; 0xffffffef
   3e380:	and	r0, r0, #1
   3e384:	sub	sp, fp, #16
   3e388:	pop	{r4, r5, r6, sl, fp, pc}
   3e38c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3e390:	add	fp, sp, #28
   3e394:	sub	sp, sp, #84	; 0x54
   3e398:	ldr	r1, [fp, #52]	; 0x34
   3e39c:	ldr	ip, [fp, #48]	; 0x30
   3e3a0:	ldr	lr, [fp, #44]	; 0x2c
   3e3a4:	ldr	r4, [fp, #40]	; 0x28
   3e3a8:	ldr	r5, [fp, #36]	; 0x24
   3e3ac:	ldr	r6, [fp, #32]
   3e3b0:	ldr	r7, [fp, #28]
   3e3b4:	ldr	r8, [fp, #24]
   3e3b8:	ldr	r9, [fp, #20]
   3e3bc:	ldr	sl, [fp, #16]
   3e3c0:	str	r0, [sp, #16]
   3e3c4:	ldr	r0, [fp, #12]
   3e3c8:	str	r0, [sp, #12]
   3e3cc:	ldr	r0, [fp, #8]
   3e3d0:	str	r0, [sp, #8]
   3e3d4:	ldr	r0, [fp, #56]	; 0x38
   3e3d8:	str	r0, [sp, #4]
   3e3dc:	ldr	r0, [sp, #16]
   3e3e0:	str	r2, [sp, #24]
   3e3e4:	str	r3, [sp, #28]
   3e3e8:	ldr	r2, [sp, #8]
   3e3ec:	str	r2, [sp, #32]
   3e3f0:	ldr	r3, [sp, #12]
   3e3f4:	str	r3, [sp, #36]	; 0x24
   3e3f8:	str	sl, [sp, #40]	; 0x28
   3e3fc:	str	r9, [sp, #44]	; 0x2c
   3e400:	str	r8, [sp, #48]	; 0x30
   3e404:	str	r7, [sp, #52]	; 0x34
   3e408:	str	r6, [sp, #56]	; 0x38
   3e40c:	str	r5, [sp, #60]	; 0x3c
   3e410:	str	r4, [sp, #64]	; 0x40
   3e414:	str	lr, [sp, #68]	; 0x44
   3e418:	str	ip, [sp, #72]	; 0x48
   3e41c:	str	r1, [sp, #76]	; 0x4c
   3e420:	str	r0, [sp, #20]
   3e424:	ldr	r0, [fp, #56]	; 0x38
   3e428:	cmp	r0, #0
   3e42c:	bge	3e6d4 <__assert_fail@plt+0x2bb1c>
   3e430:	ldr	r0, [sp, #20]
   3e434:	ldr	r1, [r0, #144]	; 0x90
   3e438:	ldr	r2, [sp, #72]	; 0x48
   3e43c:	mov	r3, #1
   3e440:	cmp	r1, r2
   3e444:	movwvc	r3, #0
   3e448:	sub	r1, r1, r2
   3e44c:	str	r1, [r0, #144]	; 0x90
   3e450:	ldr	r0, [sp, #20]
   3e454:	ldr	r1, [r0, #136]	; 0x88
   3e458:	ldr	r2, [r0, #140]	; 0x8c
   3e45c:	ldr	ip, [sp, #64]	; 0x40
   3e460:	ldr	lr, [sp, #68]	; 0x44
   3e464:	mov	r4, #0
   3e468:	cmn	lr, #1
   3e46c:	mov	r5, r4
   3e470:	movwgt	r5, #1
   3e474:	cmn	r2, #1
   3e478:	mov	r6, r4
   3e47c:	movwgt	r6, #1
   3e480:	sub	r7, r6, r5
   3e484:	cmp	r6, r5
   3e488:	movwne	r7, #1
   3e48c:	subs	r1, r1, ip
   3e490:	sbc	r2, r2, lr
   3e494:	cmn	r2, #1
   3e498:	mov	ip, r4
   3e49c:	movwgt	ip, #1
   3e4a0:	sub	lr, r6, ip
   3e4a4:	cmp	r6, ip
   3e4a8:	movwne	lr, #1
   3e4ac:	and	ip, r7, lr
   3e4b0:	orr	r3, r3, ip
   3e4b4:	str	r1, [r0, #136]	; 0x88
   3e4b8:	str	r2, [r0, #140]	; 0x8c
   3e4bc:	ldr	r0, [sp, #20]
   3e4c0:	ldr	r1, [r0, #128]	; 0x80
   3e4c4:	ldr	r2, [r0, #132]	; 0x84
   3e4c8:	ldr	ip, [sp, #56]	; 0x38
   3e4cc:	ldr	lr, [sp, #60]	; 0x3c
   3e4d0:	cmn	lr, #1
   3e4d4:	mov	r5, r4
   3e4d8:	movwgt	r5, #1
   3e4dc:	cmn	r2, #1
   3e4e0:	mov	r6, r4
   3e4e4:	movwgt	r6, #1
   3e4e8:	sub	r7, r6, r5
   3e4ec:	cmp	r6, r5
   3e4f0:	movwne	r7, #1
   3e4f4:	subs	r1, r1, ip
   3e4f8:	sbc	r2, r2, lr
   3e4fc:	cmn	r2, #1
   3e500:	mov	ip, r4
   3e504:	movwgt	ip, #1
   3e508:	sub	lr, r6, ip
   3e50c:	cmp	r6, ip
   3e510:	movwne	lr, #1
   3e514:	and	ip, r7, lr
   3e518:	orr	r3, r3, ip
   3e51c:	str	r1, [r0, #128]	; 0x80
   3e520:	str	r2, [r0, #132]	; 0x84
   3e524:	ldr	r0, [sp, #20]
   3e528:	ldr	r1, [r0, #120]	; 0x78
   3e52c:	ldr	r2, [r0, #124]	; 0x7c
   3e530:	ldr	ip, [sp, #48]	; 0x30
   3e534:	ldr	lr, [sp, #52]	; 0x34
   3e538:	cmn	lr, #1
   3e53c:	mov	r5, r4
   3e540:	movwgt	r5, #1
   3e544:	cmn	r2, #1
   3e548:	mov	r6, r4
   3e54c:	movwgt	r6, #1
   3e550:	sub	r7, r6, r5
   3e554:	cmp	r6, r5
   3e558:	movwne	r7, #1
   3e55c:	subs	r1, r1, ip
   3e560:	sbc	r2, r2, lr
   3e564:	cmn	r2, #1
   3e568:	mov	ip, r4
   3e56c:	movwgt	ip, #1
   3e570:	sub	lr, r6, ip
   3e574:	cmp	r6, ip
   3e578:	movwne	lr, #1
   3e57c:	and	ip, r7, lr
   3e580:	orr	r3, r3, ip
   3e584:	str	r1, [r0, #120]	; 0x78
   3e588:	str	r2, [r0, #124]	; 0x7c
   3e58c:	ldr	r0, [sp, #20]
   3e590:	ldr	r1, [r0, #112]	; 0x70
   3e594:	ldr	r2, [r0, #116]	; 0x74
   3e598:	ldr	ip, [sp, #40]	; 0x28
   3e59c:	ldr	lr, [sp, #44]	; 0x2c
   3e5a0:	cmn	lr, #1
   3e5a4:	mov	r5, r4
   3e5a8:	movwgt	r5, #1
   3e5ac:	cmn	r2, #1
   3e5b0:	mov	r6, r4
   3e5b4:	movwgt	r6, #1
   3e5b8:	sub	r7, r6, r5
   3e5bc:	cmp	r6, r5
   3e5c0:	movwne	r7, #1
   3e5c4:	subs	r1, r1, ip
   3e5c8:	sbc	r2, r2, lr
   3e5cc:	cmn	r2, #1
   3e5d0:	mov	ip, r4
   3e5d4:	movwgt	ip, #1
   3e5d8:	sub	lr, r6, ip
   3e5dc:	cmp	r6, ip
   3e5e0:	movwne	lr, #1
   3e5e4:	and	ip, r7, lr
   3e5e8:	orr	r3, r3, ip
   3e5ec:	str	r1, [r0, #112]	; 0x70
   3e5f0:	str	r2, [r0, #116]	; 0x74
   3e5f4:	ldr	r0, [sp, #20]
   3e5f8:	ldr	r1, [r0, #104]	; 0x68
   3e5fc:	ldr	r2, [r0, #108]	; 0x6c
   3e600:	ldr	ip, [sp, #32]
   3e604:	ldr	lr, [sp, #36]	; 0x24
   3e608:	cmn	lr, #1
   3e60c:	mov	r5, r4
   3e610:	movwgt	r5, #1
   3e614:	cmn	r2, #1
   3e618:	mov	r6, r4
   3e61c:	movwgt	r6, #1
   3e620:	sub	r7, r6, r5
   3e624:	cmp	r6, r5
   3e628:	movwne	r7, #1
   3e62c:	subs	r1, r1, ip
   3e630:	sbc	r2, r2, lr
   3e634:	cmn	r2, #1
   3e638:	mov	ip, r4
   3e63c:	movwgt	ip, #1
   3e640:	sub	lr, r6, ip
   3e644:	cmp	r6, ip
   3e648:	movwne	lr, #1
   3e64c:	and	ip, r7, lr
   3e650:	orr	r3, r3, ip
   3e654:	str	r1, [r0, #104]	; 0x68
   3e658:	str	r2, [r0, #108]	; 0x6c
   3e65c:	and	r0, r3, #1
   3e660:	ldr	r1, [sp, #20]
   3e664:	ldr	r2, [r1, #96]	; 0x60
   3e668:	ldr	r3, [r1, #100]	; 0x64
   3e66c:	ldr	ip, [sp, #24]
   3e670:	ldr	lr, [sp, #28]
   3e674:	cmn	lr, #1
   3e678:	mov	r5, r4
   3e67c:	movwgt	r5, #1
   3e680:	cmn	r3, #1
   3e684:	mov	r6, r4
   3e688:	movwgt	r6, #1
   3e68c:	sub	r7, r6, r5
   3e690:	cmp	r6, r5
   3e694:	movwne	r7, #1
   3e698:	subs	r2, r2, ip
   3e69c:	sbc	r3, r3, lr
   3e6a0:	cmn	r3, #1
   3e6a4:	movwgt	r4, #1
   3e6a8:	sub	ip, r6, r4
   3e6ac:	cmp	r6, r4
   3e6b0:	movwne	ip, #1
   3e6b4:	and	ip, r7, ip
   3e6b8:	str	r2, [r1, #96]	; 0x60
   3e6bc:	str	r3, [r1, #100]	; 0x64
   3e6c0:	and	r1, ip, #1
   3e6c4:	orr	r0, r0, r1
   3e6c8:	cmp	r0, #0
   3e6cc:	bne	3e974 <__assert_fail@plt+0x2bdbc>
   3e6d0:	b	3e984 <__assert_fail@plt+0x2bdcc>
   3e6d4:	ldr	r0, [sp, #20]
   3e6d8:	ldr	r1, [r0, #144]	; 0x90
   3e6dc:	ldr	r2, [sp, #72]	; 0x48
   3e6e0:	add	r2, r1, r2
   3e6e4:	mov	r3, #1
   3e6e8:	cmp	r2, r1
   3e6ec:	movwvc	r3, #0
   3e6f0:	str	r2, [r0, #144]	; 0x90
   3e6f4:	ldr	r0, [sp, #20]
   3e6f8:	ldr	r1, [r0, #136]	; 0x88
   3e6fc:	ldr	r2, [r0, #140]	; 0x8c
   3e700:	ldr	ip, [sp, #64]	; 0x40
   3e704:	ldr	lr, [sp, #68]	; 0x44
   3e708:	mov	r4, #0
   3e70c:	cmn	r2, #1
   3e710:	mov	r5, r4
   3e714:	movwgt	r5, #1
   3e718:	adds	r1, r1, ip
   3e71c:	adc	r2, r2, lr
   3e720:	cmn	r2, #1
   3e724:	mov	ip, r4
   3e728:	movwgt	ip, #1
   3e72c:	sub	r6, r5, ip
   3e730:	cmp	r5, ip
   3e734:	movwne	r6, #1
   3e738:	cmn	lr, #1
   3e73c:	mov	ip, r4
   3e740:	movwgt	ip, #1
   3e744:	sub	ip, r5, ip
   3e748:	clz	ip, ip
   3e74c:	lsr	ip, ip, #5
   3e750:	and	ip, ip, r6
   3e754:	orr	r3, r3, ip
   3e758:	str	r1, [r0, #136]	; 0x88
   3e75c:	str	r2, [r0, #140]	; 0x8c
   3e760:	ldr	r0, [sp, #20]
   3e764:	ldr	r1, [r0, #128]	; 0x80
   3e768:	ldr	r2, [r0, #132]	; 0x84
   3e76c:	ldr	ip, [sp, #56]	; 0x38
   3e770:	ldr	lr, [sp, #60]	; 0x3c
   3e774:	cmn	r2, #1
   3e778:	mov	r5, r4
   3e77c:	movwgt	r5, #1
   3e780:	adds	r1, r1, ip
   3e784:	adc	r2, r2, lr
   3e788:	cmn	r2, #1
   3e78c:	mov	ip, r4
   3e790:	movwgt	ip, #1
   3e794:	sub	r6, r5, ip
   3e798:	cmp	r5, ip
   3e79c:	movwne	r6, #1
   3e7a0:	cmn	lr, #1
   3e7a4:	mov	ip, r4
   3e7a8:	movwgt	ip, #1
   3e7ac:	sub	ip, r5, ip
   3e7b0:	clz	ip, ip
   3e7b4:	lsr	ip, ip, #5
   3e7b8:	and	ip, ip, r6
   3e7bc:	orr	r3, r3, ip
   3e7c0:	str	r1, [r0, #128]	; 0x80
   3e7c4:	str	r2, [r0, #132]	; 0x84
   3e7c8:	ldr	r0, [sp, #20]
   3e7cc:	ldr	r1, [r0, #120]	; 0x78
   3e7d0:	ldr	r2, [r0, #124]	; 0x7c
   3e7d4:	ldr	ip, [sp, #48]	; 0x30
   3e7d8:	ldr	lr, [sp, #52]	; 0x34
   3e7dc:	cmn	r2, #1
   3e7e0:	mov	r5, r4
   3e7e4:	movwgt	r5, #1
   3e7e8:	adds	r1, r1, ip
   3e7ec:	adc	r2, r2, lr
   3e7f0:	cmn	r2, #1
   3e7f4:	mov	ip, r4
   3e7f8:	movwgt	ip, #1
   3e7fc:	sub	r6, r5, ip
   3e800:	cmp	r5, ip
   3e804:	movwne	r6, #1
   3e808:	cmn	lr, #1
   3e80c:	mov	ip, r4
   3e810:	movwgt	ip, #1
   3e814:	sub	ip, r5, ip
   3e818:	clz	ip, ip
   3e81c:	lsr	ip, ip, #5
   3e820:	and	ip, ip, r6
   3e824:	orr	r3, r3, ip
   3e828:	str	r1, [r0, #120]	; 0x78
   3e82c:	str	r2, [r0, #124]	; 0x7c
   3e830:	ldr	r0, [sp, #20]
   3e834:	ldr	r1, [r0, #112]	; 0x70
   3e838:	ldr	r2, [r0, #116]	; 0x74
   3e83c:	ldr	ip, [sp, #40]	; 0x28
   3e840:	ldr	lr, [sp, #44]	; 0x2c
   3e844:	cmn	r2, #1
   3e848:	mov	r5, r4
   3e84c:	movwgt	r5, #1
   3e850:	adds	r1, r1, ip
   3e854:	adc	r2, r2, lr
   3e858:	cmn	r2, #1
   3e85c:	mov	ip, r4
   3e860:	movwgt	ip, #1
   3e864:	sub	r6, r5, ip
   3e868:	cmp	r5, ip
   3e86c:	movwne	r6, #1
   3e870:	cmn	lr, #1
   3e874:	mov	ip, r4
   3e878:	movwgt	ip, #1
   3e87c:	sub	ip, r5, ip
   3e880:	clz	ip, ip
   3e884:	lsr	ip, ip, #5
   3e888:	and	ip, ip, r6
   3e88c:	orr	r3, r3, ip
   3e890:	str	r1, [r0, #112]	; 0x70
   3e894:	str	r2, [r0, #116]	; 0x74
   3e898:	ldr	r0, [sp, #20]
   3e89c:	ldr	r1, [r0, #104]	; 0x68
   3e8a0:	ldr	r2, [r0, #108]	; 0x6c
   3e8a4:	ldr	ip, [sp, #32]
   3e8a8:	ldr	lr, [sp, #36]	; 0x24
   3e8ac:	cmn	r2, #1
   3e8b0:	mov	r5, r4
   3e8b4:	movwgt	r5, #1
   3e8b8:	adds	r1, r1, ip
   3e8bc:	adc	r2, r2, lr
   3e8c0:	cmn	r2, #1
   3e8c4:	mov	ip, r4
   3e8c8:	movwgt	ip, #1
   3e8cc:	sub	r6, r5, ip
   3e8d0:	cmp	r5, ip
   3e8d4:	movwne	r6, #1
   3e8d8:	cmn	lr, #1
   3e8dc:	mov	ip, r4
   3e8e0:	movwgt	ip, #1
   3e8e4:	sub	ip, r5, ip
   3e8e8:	clz	ip, ip
   3e8ec:	lsr	ip, ip, #5
   3e8f0:	and	ip, ip, r6
   3e8f4:	orr	r3, r3, ip
   3e8f8:	str	r1, [r0, #104]	; 0x68
   3e8fc:	str	r2, [r0, #108]	; 0x6c
   3e900:	and	r0, r3, #1
   3e904:	ldr	r1, [sp, #20]
   3e908:	ldr	r2, [r1, #96]	; 0x60
   3e90c:	ldr	r3, [r1, #100]	; 0x64
   3e910:	ldr	ip, [sp, #24]
   3e914:	ldr	lr, [sp, #28]
   3e918:	cmn	r3, #1
   3e91c:	mov	r5, r4
   3e920:	movwgt	r5, #1
   3e924:	adds	r2, r2, ip
   3e928:	adc	r3, r3, lr
   3e92c:	cmn	r3, #1
   3e930:	mov	ip, r4
   3e934:	movwgt	ip, #1
   3e938:	sub	r6, r5, ip
   3e93c:	cmp	r5, ip
   3e940:	movwne	r6, #1
   3e944:	cmn	lr, #1
   3e948:	movwgt	r4, #1
   3e94c:	sub	ip, r5, r4
   3e950:	clz	ip, ip
   3e954:	lsr	ip, ip, #5
   3e958:	and	ip, ip, r6
   3e95c:	str	r2, [r1, #96]	; 0x60
   3e960:	str	r3, [r1, #100]	; 0x64
   3e964:	and	r1, ip, #1
   3e968:	orr	r0, r0, r1
   3e96c:	cmp	r0, #0
   3e970:	beq	3e984 <__assert_fail@plt+0x2bdcc>
   3e974:	movw	r0, #0
   3e978:	and	r0, r0, #1
   3e97c:	strb	r0, [fp, #-29]	; 0xffffffe3
   3e980:	b	3e99c <__assert_fail@plt+0x2bde4>
   3e984:	ldr	r0, [sp, #20]
   3e988:	movw	r1, #1
   3e98c:	strb	r1, [r0, #153]	; 0x99
   3e990:	movw	r0, #1
   3e994:	and	r0, r0, #1
   3e998:	strb	r0, [fp, #-29]	; 0xffffffe3
   3e99c:	ldrb	r0, [fp, #-29]	; 0xffffffe3
   3e9a0:	and	r0, r0, #1
   3e9a4:	sub	sp, fp, #28
   3e9a8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3e9ac:	sub	sp, sp, #4
   3e9b0:	str	r0, [sp]
   3e9b4:	movw	r0, #0
   3e9b8:	and	r0, r0, #1
   3e9bc:	add	sp, sp, #4
   3e9c0:	bx	lr
   3e9c4:	sub	sp, sp, #12
   3e9c8:	push	{fp, lr}
   3e9cc:	mov	fp, sp
   3e9d0:	sub	sp, sp, #28
   3e9d4:	str	r3, [fp, #16]
   3e9d8:	str	r2, [fp, #12]
   3e9dc:	str	r1, [fp, #8]
   3e9e0:	str	r0, [fp, #-4]
   3e9e4:	movw	r0, #63272	; 0xf728
   3e9e8:	movt	r0, #8
   3e9ec:	ldr	r1, [r0]
   3e9f0:	movw	r2, #54066	; 0xd332
   3e9f4:	movt	r2, #7
   3e9f8:	str	r0, [fp, #-12]
   3e9fc:	mov	r0, r2
   3ea00:	bl	12b4c <fputs@plt>
   3ea04:	add	r1, fp, #8
   3ea08:	str	r1, [fp, #-8]
   3ea0c:	ldr	r1, [fp, #-12]
   3ea10:	ldr	r2, [r1]
   3ea14:	ldr	r1, [fp, #-4]
   3ea18:	ldr	r3, [fp, #-8]
   3ea1c:	str	r0, [sp, #12]
   3ea20:	mov	r0, r2
   3ea24:	mov	r2, r3
   3ea28:	bl	12a20 <vfprintf@plt>
   3ea2c:	sub	r1, fp, #8
   3ea30:	str	r0, [sp, #8]
   3ea34:	str	r1, [sp, #4]
   3ea38:	mov	sp, fp
   3ea3c:	pop	{fp, lr}
   3ea40:	add	sp, sp, #12
   3ea44:	bx	lr
   3ea48:	sub	sp, sp, #32
   3ea4c:	str	r0, [sp, #24]
   3ea50:	str	r1, [sp, #28]
   3ea54:	ldr	r0, [sp, #24]
   3ea58:	ldr	r1, [sp, #28]
   3ea5c:	mov	r2, #0
   3ea60:	mvn	r3, #-2147483648	; 0x80000000
   3ea64:	subs	r0, r3, r0
   3ea68:	mvn	r3, #0
   3ea6c:	sbcs	r1, r3, r1
   3ea70:	str	r1, [sp, #20]
   3ea74:	str	r0, [sp, #16]
   3ea78:	str	r2, [sp, #12]
   3ea7c:	blt	3ea9c <__assert_fail@plt+0x2bee4>
   3ea80:	b	3eac0 <__assert_fail@plt+0x2bf08>
   3ea84:	ldr	r0, [sp, #28]
   3ea88:	mov	r1, #0
   3ea8c:	cmp	r0, #0
   3ea90:	str	r1, [sp, #12]
   3ea94:	blt	3eac0 <__assert_fail@plt+0x2bf08>
   3ea98:	b	3ea9c <__assert_fail@plt+0x2bee4>
   3ea9c:	ldr	r0, [sp, #24]
   3eaa0:	ldr	r1, [sp, #28]
   3eaa4:	subs	r0, r0, #-2147483648	; 0x80000000
   3eaa8:	sbcs	r1, r1, #0
   3eaac:	mov	r2, #0
   3eab0:	movwlt	r2, #1
   3eab4:	str	r0, [sp, #8]
   3eab8:	str	r1, [sp, #4]
   3eabc:	str	r2, [sp, #12]
   3eac0:	ldr	r0, [sp, #12]
   3eac4:	mvn	r1, #0
   3eac8:	eor	r0, r0, r1
   3eacc:	and	r0, r0, #1
   3ead0:	add	sp, sp, #32
   3ead4:	bx	lr
   3ead8:	push	{r4, sl, fp, lr}
   3eadc:	add	fp, sp, #8
   3eae0:	sub	sp, sp, #72	; 0x48
   3eae4:	ldr	r1, [fp, #20]
   3eae8:	ldr	ip, [fp, #16]
   3eaec:	ldr	lr, [fp, #12]
   3eaf0:	ldr	r4, [fp, #8]
   3eaf4:	str	r2, [fp, #-32]	; 0xffffffe0
   3eaf8:	str	r3, [fp, #-28]	; 0xffffffe4
   3eafc:	str	r4, [fp, #-24]	; 0xffffffe8
   3eb00:	str	lr, [fp, #-20]	; 0xffffffec
   3eb04:	str	ip, [fp, #-16]
   3eb08:	str	r1, [fp, #-12]
   3eb0c:	str	r0, [fp, #-36]	; 0xffffffdc
   3eb10:	ldr	r0, [fp, #-36]	; 0xffffffdc
   3eb14:	ldr	r0, [r0, #156]	; 0x9c
   3eb18:	cmp	r0, #0
   3eb1c:	beq	3eb84 <__assert_fail@plt+0x2bfcc>
   3eb20:	ldr	r0, [fp, #-36]	; 0xffffffdc
   3eb24:	ldr	r0, [r0, #48]	; 0x30
   3eb28:	cmp	r0, #0
   3eb2c:	bne	3eb84 <__assert_fail@plt+0x2bfcc>
   3eb30:	ldr	r0, [fp, #-36]	; 0xffffffdc
   3eb34:	ldrb	r0, [r0, #153]	; 0x99
   3eb38:	tst	r0, #1
   3eb3c:	bne	3eb84 <__assert_fail@plt+0x2bfcc>
   3eb40:	ldr	r0, [fp, #-36]	; 0xffffffdc
   3eb44:	ldr	r0, [r0, #172]	; 0xac
   3eb48:	cmp	r0, #0
   3eb4c:	bne	3eb60 <__assert_fail@plt+0x2bfa8>
   3eb50:	ldr	r0, [fp, #-16]
   3eb54:	movw	r1, #2
   3eb58:	cmp	r1, r0
   3eb5c:	bge	3eb84 <__assert_fail@plt+0x2bfcc>
   3eb60:	ldr	r0, [fp, #-36]	; 0xffffffdc
   3eb64:	movw	r1, #1
   3eb68:	strb	r1, [r0, #180]	; 0xb4
   3eb6c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   3eb70:	add	r0, r0, #32
   3eb74:	sub	r1, fp, #32
   3eb78:	movw	r2, #24
   3eb7c:	bl	125c4 <memcpy@plt>
   3eb80:	b	3ed08 <__assert_fail@plt+0x2c150>
   3eb84:	ldr	r0, [fp, #-16]
   3eb88:	movw	r1, #4
   3eb8c:	cmp	r1, r0
   3eb90:	bge	3ec50 <__assert_fail@plt+0x2c098>
   3eb94:	ldr	r0, [fp, #-36]	; 0xffffffdc
   3eb98:	ldr	r1, [r0, #156]	; 0x9c
   3eb9c:	add	r1, r1, #1
   3eba0:	str	r1, [r0, #156]	; 0x9c
   3eba4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3eba8:	ldr	r1, [fp, #-20]	; 0xffffffec
   3ebac:	mov	r2, #100	; 0x64
   3ebb0:	mov	r3, #0
   3ebb4:	str	r2, [sp, #40]	; 0x28
   3ebb8:	str	r3, [sp, #36]	; 0x24
   3ebbc:	bl	77780 <__assert_fail@plt+0x64bc8>
   3ebc0:	ldr	lr, [fp, #-36]	; 0xffffffdc
   3ebc4:	str	r3, [lr, #68]	; 0x44
   3ebc8:	str	r2, [lr, #64]	; 0x40
   3ebcc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3ebd0:	ldr	r3, [fp, #-20]	; 0xffffffec
   3ebd4:	str	r0, [sp, #32]
   3ebd8:	mov	r0, r2
   3ebdc:	str	r1, [sp, #28]
   3ebe0:	mov	r1, r3
   3ebe4:	ldr	r2, [sp, #40]	; 0x28
   3ebe8:	ldr	r3, [sp, #36]	; 0x24
   3ebec:	bl	77780 <__assert_fail@plt+0x64bc8>
   3ebf0:	ldr	r2, [sp, #40]	; 0x28
   3ebf4:	ldr	r3, [sp, #36]	; 0x24
   3ebf8:	bl	77780 <__assert_fail@plt+0x64bc8>
   3ebfc:	ldr	lr, [fp, #-36]	; 0xffffffdc
   3ec00:	str	r3, [lr, #60]	; 0x3c
   3ec04:	str	r2, [lr, #56]	; 0x38
   3ec08:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3ec0c:	ldr	r3, [fp, #-20]	; 0xffffffec
   3ec10:	movw	lr, #10000	; 0x2710
   3ec14:	str	r0, [sp, #24]
   3ec18:	mov	r0, r2
   3ec1c:	str	r1, [sp, #20]
   3ec20:	mov	r1, r3
   3ec24:	mov	r2, lr
   3ec28:	ldr	r3, [sp, #36]	; 0x24
   3ec2c:	bl	77780 <__assert_fail@plt+0x64bc8>
   3ec30:	ldr	r2, [fp, #-36]	; 0xffffffdc
   3ec34:	str	r1, [r2, #44]	; 0x2c
   3ec38:	str	r0, [r2, #40]	; 0x28
   3ec3c:	ldr	r0, [fp, #-16]
   3ec40:	sub	r0, r0, #4
   3ec44:	ldr	r1, [fp, #-36]	; 0xffffffdc
   3ec48:	str	r0, [r1, #48]	; 0x30
   3ec4c:	b	3ed04 <__assert_fail@plt+0x2c14c>
   3ec50:	ldr	r0, [fp, #-36]	; 0xffffffdc
   3ec54:	ldr	r1, [r0, #172]	; 0xac
   3ec58:	add	r1, r1, #1
   3ec5c:	str	r1, [r0, #172]	; 0xac
   3ec60:	ldr	r0, [fp, #-16]
   3ec64:	cmp	r0, #2
   3ec68:	bgt	3ec94 <__assert_fail@plt+0x2c0dc>
   3ec6c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3ec70:	ldr	r1, [fp, #-20]	; 0xffffffec
   3ec74:	ldr	r2, [fp, #-36]	; 0xffffffdc
   3ec78:	str	r1, [r2, #76]	; 0x4c
   3ec7c:	str	r0, [r2, #72]	; 0x48
   3ec80:	ldr	r0, [fp, #-36]	; 0xffffffdc
   3ec84:	mov	r1, #0
   3ec88:	str	r1, [r0, #84]	; 0x54
   3ec8c:	str	r1, [r0, #80]	; 0x50
   3ec90:	b	3ece4 <__assert_fail@plt+0x2c12c>
   3ec94:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3ec98:	ldr	r1, [fp, #-20]	; 0xffffffec
   3ec9c:	mov	r2, #100	; 0x64
   3eca0:	mov	r3, #0
   3eca4:	str	r2, [sp, #16]
   3eca8:	str	r3, [sp, #12]
   3ecac:	bl	77780 <__assert_fail@plt+0x64bc8>
   3ecb0:	ldr	r2, [fp, #-36]	; 0xffffffdc
   3ecb4:	str	r1, [r2, #76]	; 0x4c
   3ecb8:	str	r0, [r2, #72]	; 0x48
   3ecbc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3ecc0:	ldr	r1, [fp, #-20]	; 0xffffffec
   3ecc4:	ldr	r2, [sp, #16]
   3ecc8:	ldr	r3, [sp, #12]
   3eccc:	bl	77780 <__assert_fail@plt+0x64bc8>
   3ecd0:	ldr	lr, [fp, #-36]	; 0xffffffdc
   3ecd4:	str	r3, [lr, #84]	; 0x54
   3ecd8:	str	r2, [lr, #80]	; 0x50
   3ecdc:	str	r0, [sp, #8]
   3ece0:	str	r1, [sp, #4]
   3ece4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   3ece8:	movw	r1, #0
   3ecec:	str	r1, [r0, #88]	; 0x58
   3ecf0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   3ecf4:	str	r1, [r0, #92]	; 0x5c
   3ecf8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   3ecfc:	movw	r1, #2
   3ed00:	str	r1, [r0, #28]
   3ed04:	b	3ed08 <__assert_fail@plt+0x2c150>
   3ed08:	sub	sp, fp, #8
   3ed0c:	pop	{r4, sl, fp, pc}
   3ed10:	sub	sp, sp, #8
   3ed14:	str	r0, [sp, #4]
   3ed18:	str	r1, [sp]
   3ed1c:	movw	r0, #0
   3ed20:	add	sp, sp, #8
   3ed24:	bx	lr
   3ed28:	sub	sp, sp, #16
   3ed2c:	str	r0, [sp, #12]
   3ed30:	str	r1, [sp, #8]
   3ed34:	str	r2, [sp, #4]
   3ed38:	str	r3, [sp]
   3ed3c:	ldr	r0, [sp, #12]
   3ed40:	movw	r1, #0
   3ed44:	cmp	r0, r1
   3ed48:	bne	3ed58 <__assert_fail@plt+0x2c1a0>
   3ed4c:	movw	r0, #54073	; 0xd339
   3ed50:	movt	r0, #7
   3ed54:	str	r0, [sp, #12]
   3ed58:	add	sp, sp, #16
   3ed5c:	bx	lr
   3ed60:	push	{fp, lr}
   3ed64:	mov	fp, sp
   3ed68:	sub	sp, sp, #40	; 0x28
   3ed6c:	str	r0, [fp, #-8]
   3ed70:	str	r1, [fp, #-12]
   3ed74:	str	r2, [fp, #-16]
   3ed78:	movw	r0, #53808	; 0xd230
   3ed7c:	movt	r0, #7
   3ed80:	bl	127bc <getenv@plt>
   3ed84:	str	r0, [sp, #20]
   3ed88:	ldr	r0, [sp, #20]
   3ed8c:	bl	6fd84 <__assert_fail@plt+0x5d1cc>
   3ed90:	str	r0, [sp, #16]
   3ed94:	ldr	r0, [sp, #16]
   3ed98:	movw	r1, #0
   3ed9c:	cmp	r0, r1
   3eda0:	bne	3edb4 <__assert_fail@plt+0x2c1fc>
   3eda4:	movw	r0, #0
   3eda8:	and	r0, r0, #1
   3edac:	strb	r0, [fp, #-1]
   3edb0:	b	3ee00 <__assert_fail@plt+0x2c248>
   3edb4:	ldr	r0, [fp, #-8]
   3edb8:	ldr	r1, [fp, #-12]
   3edbc:	ldr	r2, [fp, #-16]
   3edc0:	ldr	r3, [sp, #16]
   3edc4:	ldr	ip, [sp, #20]
   3edc8:	movw	lr, #0
   3edcc:	str	r3, [sp, #8]
   3edd0:	mov	r3, lr
   3edd4:	ldr	lr, [sp, #8]
   3edd8:	str	lr, [sp]
   3eddc:	str	ip, [sp, #4]
   3ede0:	bl	3ee10 <__assert_fail@plt+0x2c258>
   3ede4:	and	r0, r0, #1
   3ede8:	strb	r0, [sp, #15]
   3edec:	ldr	r0, [sp, #16]
   3edf0:	bl	6fed4 <__assert_fail@plt+0x5d31c>
   3edf4:	ldrb	r0, [sp, #15]
   3edf8:	and	r0, r0, #1
   3edfc:	strb	r0, [fp, #-1]
   3ee00:	ldrb	r0, [fp, #-1]
   3ee04:	and	r0, r0, #1
   3ee08:	mov	sp, fp
   3ee0c:	pop	{fp, pc}
   3ee10:	push	{r4, r5, r6, sl, fp, lr}
   3ee14:	add	fp, sp, #16
   3ee18:	sub	sp, sp, #5952	; 0x1740
   3ee1c:	ldr	ip, [fp, #12]
   3ee20:	ldr	lr, [fp, #8]
   3ee24:	str	r0, [fp, #-20]	; 0xffffffec
   3ee28:	str	r1, [fp, #-24]	; 0xffffffe8
   3ee2c:	str	r2, [fp, #-28]	; 0xffffffe4
   3ee30:	str	r3, [fp, #-32]	; 0xffffffe0
   3ee34:	movw	r0, #0
   3ee38:	strb	r0, [fp, #-248]	; 0xffffff08
   3ee3c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3ee40:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3ee44:	str	r0, [fp, #-1232]	; 0xfffffb30
   3ee48:	mov	r0, r1
   3ee4c:	str	lr, [fp, #-1236]	; 0xfffffb2c
   3ee50:	str	ip, [fp, #-1240]	; 0xfffffb28
   3ee54:	bl	12888 <strlen@plt>
   3ee58:	ldr	r1, [fp, #-1232]	; 0xfffffb30
   3ee5c:	add	r0, r1, r0
   3ee60:	str	r0, [fp, #-252]	; 0xffffff04
   3ee64:	movw	r0, #0
   3ee68:	str	r0, [fp, #-256]	; 0xffffff00
   3ee6c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   3ee70:	cmp	r1, r0
   3ee74:	bne	3ee88 <__assert_fail@plt+0x2c2d0>
   3ee78:	sub	r0, fp, #364	; 0x16c
   3ee7c:	bl	72ea4 <__assert_fail@plt+0x602ec>
   3ee80:	sub	r0, fp, #364	; 0x16c
   3ee84:	str	r0, [fp, #-28]	; 0xffffffe4
   3ee88:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3ee8c:	ldr	r0, [r0]
   3ee90:	str	r0, [fp, #-368]	; 0xfffffe90
   3ee94:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3ee98:	ldr	r0, [r0, #4]
   3ee9c:	str	r0, [fp, #-372]	; 0xfffffe8c
   3eea0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3eea4:	ldrb	r0, [r0]
   3eea8:	strb	r0, [fp, #-373]	; 0xfffffe8b
   3eeac:	ldrb	r0, [fp, #-373]	; 0xfffffe8b
   3eeb0:	bl	71504 <__assert_fail@plt+0x5e94c>
   3eeb4:	tst	r0, #1
   3eeb8:	beq	3eecc <__assert_fail@plt+0x2c314>
   3eebc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3eec0:	add	r0, r0, #1
   3eec4:	str	r0, [fp, #-24]	; 0xffffffe8
   3eec8:	b	3eea0 <__assert_fail@plt+0x2c2e8>
   3eecc:	ldr	r0, [fp, #8]
   3eed0:	str	r0, [fp, #-380]	; 0xfffffe84
   3eed4:	sub	r0, fp, #440	; 0x1b8
   3eed8:	movw	r1, #0
   3eedc:	and	r1, r1, #255	; 0xff
   3eee0:	movw	r2, #56	; 0x38
   3eee4:	bl	12900 <memset@plt>
   3eee8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3eeec:	movw	r1, #54680	; 0xd598
   3eef0:	movt	r1, #7
   3eef4:	movw	r2, #4
   3eef8:	bl	12b58 <strncmp@plt>
   3eefc:	cmp	r0, #0
   3ef00:	bne	3f0cc <__assert_fail@plt+0x2c514>
   3ef04:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3ef08:	add	r0, r0, #4
   3ef0c:	str	r0, [fp, #-444]	; 0xfffffe44
   3ef10:	movw	r0, #1
   3ef14:	str	r0, [fp, #-448]	; 0xfffffe40
   3ef18:	ldr	r0, [fp, #-444]	; 0xfffffe44
   3ef1c:	str	r0, [fp, #-452]	; 0xfffffe3c
   3ef20:	ldr	r0, [fp, #-452]	; 0xfffffe3c
   3ef24:	ldrsb	r0, [r0]
   3ef28:	cmp	r0, #0
   3ef2c:	beq	3f0c8 <__assert_fail@plt+0x2c510>
   3ef30:	ldr	r0, [fp, #-452]	; 0xfffffe3c
   3ef34:	ldrb	r0, [r0]
   3ef38:	cmp	r0, #92	; 0x5c
   3ef3c:	bne	3ef74 <__assert_fail@plt+0x2c3bc>
   3ef40:	ldr	r0, [fp, #-452]	; 0xfffffe3c
   3ef44:	add	r0, r0, #1
   3ef48:	str	r0, [fp, #-452]	; 0xfffffe3c
   3ef4c:	ldr	r0, [fp, #-452]	; 0xfffffe3c
   3ef50:	ldrb	r0, [r0]
   3ef54:	cmp	r0, #92	; 0x5c
   3ef58:	beq	3ef70 <__assert_fail@plt+0x2c3b8>
   3ef5c:	ldr	r0, [fp, #-452]	; 0xfffffe3c
   3ef60:	ldrb	r0, [r0]
   3ef64:	cmp	r0, #34	; 0x22
   3ef68:	beq	3ef70 <__assert_fail@plt+0x2c3b8>
   3ef6c:	b	3f0c8 <__assert_fail@plt+0x2c510>
   3ef70:	b	3f0a8 <__assert_fail@plt+0x2c4f0>
   3ef74:	ldr	r0, [fp, #-452]	; 0xfffffe3c
   3ef78:	ldrb	r0, [r0]
   3ef7c:	cmp	r0, #34	; 0x22
   3ef80:	bne	3f0a4 <__assert_fail@plt+0x2c4ec>
   3ef84:	sub	r0, fp, #356	; 0x164
   3ef88:	str	r0, [fp, #-460]	; 0xfffffe34
   3ef8c:	ldr	r0, [fp, #-448]	; 0xfffffe40
   3ef90:	movw	r1, #100	; 0x64
   3ef94:	cmp	r1, r0
   3ef98:	bge	3efc4 <__assert_fail@plt+0x2c40c>
   3ef9c:	ldr	r0, [fp, #-448]	; 0xfffffe40
   3efa0:	bl	549ac <__assert_fail@plt+0x41df4>
   3efa4:	str	r0, [fp, #-256]	; 0xffffff00
   3efa8:	ldr	r0, [fp, #-256]	; 0xffffff00
   3efac:	movw	lr, #0
   3efb0:	cmp	r0, lr
   3efb4:	bne	3efbc <__assert_fail@plt+0x2c404>
   3efb8:	b	47060 <__assert_fail@plt+0x344a8>
   3efbc:	ldr	r0, [fp, #-256]	; 0xffffff00
   3efc0:	str	r0, [fp, #-460]	; 0xfffffe34
   3efc4:	ldr	r0, [fp, #-460]	; 0xfffffe34
   3efc8:	str	r0, [fp, #-464]	; 0xfffffe30
   3efcc:	ldr	r0, [fp, #-444]	; 0xfffffe44
   3efd0:	str	r0, [fp, #-452]	; 0xfffffe3c
   3efd4:	ldr	r0, [fp, #-452]	; 0xfffffe3c
   3efd8:	ldrb	r0, [r0]
   3efdc:	cmp	r0, #34	; 0x22
   3efe0:	beq	3f02c <__assert_fail@plt+0x2c474>
   3efe4:	ldr	r0, [fp, #-452]	; 0xfffffe3c
   3efe8:	ldrb	r0, [r0]
   3efec:	cmp	r0, #92	; 0x5c
   3eff0:	movw	r0, #0
   3eff4:	moveq	r0, #1
   3eff8:	and	r0, r0, #1
   3effc:	ldr	r1, [fp, #-452]	; 0xfffffe3c
   3f000:	add	r0, r1, r0
   3f004:	str	r0, [fp, #-452]	; 0xfffffe3c
   3f008:	ldrb	r0, [r0]
   3f00c:	ldr	r1, [fp, #-464]	; 0xfffffe30
   3f010:	add	r2, r1, #1
   3f014:	str	r2, [fp, #-464]	; 0xfffffe30
   3f018:	strb	r0, [r1]
   3f01c:	ldr	r0, [fp, #-452]	; 0xfffffe3c
   3f020:	add	r0, r0, #1
   3f024:	str	r0, [fp, #-452]	; 0xfffffe3c
   3f028:	b	3efd4 <__assert_fail@plt+0x2c41c>
   3f02c:	ldr	r0, [fp, #-464]	; 0xfffffe30
   3f030:	movw	r1, #0
   3f034:	strb	r1, [r0]
   3f038:	ldr	r0, [fp, #-460]	; 0xfffffe34
   3f03c:	bl	6fd84 <__assert_fail@plt+0x5d1cc>
   3f040:	str	r0, [fp, #-456]	; 0xfffffe38
   3f044:	ldr	r0, [fp, #-456]	; 0xfffffe38
   3f048:	movw	r1, #0
   3f04c:	cmp	r0, r1
   3f050:	bne	3f058 <__assert_fail@plt+0x2c4a0>
   3f054:	b	47060 <__assert_fail@plt+0x344a8>
   3f058:	ldr	r0, [fp, #-456]	; 0xfffffe38
   3f05c:	str	r0, [fp, #-380]	; 0xfffffe84
   3f060:	ldr	r0, [fp, #-460]	; 0xfffffe34
   3f064:	str	r0, [fp, #12]
   3f068:	ldr	r0, [fp, #-452]	; 0xfffffe3c
   3f06c:	add	r0, r0, #1
   3f070:	str	r0, [fp, #-24]	; 0xffffffe8
   3f074:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3f078:	ldrb	r0, [r0]
   3f07c:	strb	r0, [fp, #-373]	; 0xfffffe8b
   3f080:	ldrb	r0, [fp, #-373]	; 0xfffffe8b
   3f084:	bl	71504 <__assert_fail@plt+0x5e94c>
   3f088:	tst	r0, #1
   3f08c:	beq	3f0a0 <__assert_fail@plt+0x2c4e8>
   3f090:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3f094:	add	r0, r0, #1
   3f098:	str	r0, [fp, #-24]	; 0xffffffe8
   3f09c:	b	3f074 <__assert_fail@plt+0x2c4bc>
   3f0a0:	b	3f0c8 <__assert_fail@plt+0x2c510>
   3f0a4:	b	3f0a8 <__assert_fail@plt+0x2c4f0>
   3f0a8:	b	3f0ac <__assert_fail@plt+0x2c4f4>
   3f0ac:	ldr	r0, [fp, #-452]	; 0xfffffe3c
   3f0b0:	add	r0, r0, #1
   3f0b4:	str	r0, [fp, #-452]	; 0xfffffe3c
   3f0b8:	ldr	r0, [fp, #-448]	; 0xfffffe40
   3f0bc:	add	r0, r0, #1
   3f0c0:	str	r0, [fp, #-448]	; 0xfffffe40
   3f0c4:	b	3ef20 <__assert_fail@plt+0x2c368>
   3f0c8:	b	3f0cc <__assert_fail@plt+0x2c514>
   3f0cc:	ldr	r0, [fp, #-380]	; 0xfffffe84
   3f0d0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   3f0d4:	sub	r2, fp, #508	; 0x1fc
   3f0d8:	bl	6ff34 <__assert_fail@plt+0x5d37c>
   3f0dc:	movw	r1, #0
   3f0e0:	cmp	r0, r1
   3f0e4:	bne	3f0ec <__assert_fail@plt+0x2c534>
   3f0e8:	b	47060 <__assert_fail@plt+0x344a8>
   3f0ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3f0f0:	ldrb	r0, [r0]
   3f0f4:	cmp	r0, #0
   3f0f8:	bne	3f108 <__assert_fail@plt+0x2c550>
   3f0fc:	movw	r0, #36537	; 0x8eb9
   3f100:	movt	r0, #7
   3f104:	str	r0, [fp, #-24]	; 0xffffffe8
   3f108:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3f10c:	str	r0, [fp, #-736]	; 0xfffffd20
   3f110:	ldr	r0, [fp, #-488]	; 0xfffffe18
   3f114:	asr	r1, r0, #31
   3f118:	mov	r2, #0
   3f11c:	cmn	r1, #1
   3f120:	mov	r3, r2
   3f124:	movwgt	r3, #1
   3f128:	movw	ip, #1900	; 0x76c
   3f12c:	adds	r0, r0, ip
   3f130:	adc	r1, r1, #0
   3f134:	cmn	r1, #1
   3f138:	movwgt	r2, #1
   3f13c:	sub	ip, r3, r2
   3f140:	cmp	r3, r2
   3f144:	movwne	ip, #1
   3f148:	and	r2, r3, ip
   3f14c:	str	r0, [fp, #-696]	; 0xfffffd48
   3f150:	str	r1, [fp, #-692]	; 0xfffffd4c
   3f154:	tst	r2, #1
   3f158:	beq	3f180 <__assert_fail@plt+0x2c5c8>
   3f15c:	sub	r0, fp, #736	; 0x2e0
   3f160:	bl	3e9ac <__assert_fail@plt+0x2bdf4>
   3f164:	tst	r0, #1
   3f168:	beq	3f17c <__assert_fail@plt+0x2c5c4>
   3f16c:	movw	r0, #54685	; 0xd59d
   3f170:	movt	r0, #7
   3f174:	bl	12864 <gettext@plt>
   3f178:	bl	3e9c4 <__assert_fail@plt+0x2be0c>
   3f17c:	b	47060 <__assert_fail@plt+0x344a8>
   3f180:	mov	r0, #0
   3f184:	str	r0, [fp, #-688]	; 0xfffffd50
   3f188:	ldr	r0, [fp, #-492]	; 0xfffffe14
   3f18c:	add	r0, r0, #1
   3f190:	asr	r1, r0, #31
   3f194:	str	r0, [fp, #-680]	; 0xfffffd58
   3f198:	str	r1, [fp, #-676]	; 0xfffffd5c
   3f19c:	ldr	r0, [fp, #-496]	; 0xfffffe10
   3f1a0:	asr	r1, r0, #31
   3f1a4:	str	r0, [fp, #-672]	; 0xfffffd60
   3f1a8:	str	r1, [fp, #-668]	; 0xfffffd64
   3f1ac:	ldr	r0, [fp, #-500]	; 0xfffffe0c
   3f1b0:	asr	r1, r0, #31
   3f1b4:	str	r0, [fp, #-664]	; 0xfffffd68
   3f1b8:	str	r1, [fp, #-660]	; 0xfffffd6c
   3f1bc:	ldr	r0, [fp, #-504]	; 0xfffffe08
   3f1c0:	asr	r1, r0, #31
   3f1c4:	str	r0, [fp, #-656]	; 0xfffffd70
   3f1c8:	str	r1, [fp, #-652]	; 0xfffffd74
   3f1cc:	ldr	r0, [fp, #-508]	; 0xfffffe04
   3f1d0:	str	r0, [fp, #-648]	; 0xfffffd78
   3f1d4:	ldr	r0, [fp, #-372]	; 0xfffffe8c
   3f1d8:	str	r0, [fp, #-644]	; 0xfffffd7c
   3f1dc:	ldr	r0, [fp, #-476]	; 0xfffffe24
   3f1e0:	str	r0, [fp, #-44]	; 0xffffffd4
   3f1e4:	movw	r0, #2
   3f1e8:	str	r0, [fp, #-708]	; 0xfffffd3c
   3f1ec:	sub	r0, fp, #736	; 0x2e0
   3f1f0:	add	r0, r0, #96	; 0x60
   3f1f4:	sub	r1, fp, #440	; 0x1b8
   3f1f8:	movw	r2, #56	; 0x38
   3f1fc:	bl	125c4 <memcpy@plt>
   3f200:	movw	r0, #0
   3f204:	strb	r0, [fp, #-584]	; 0xfffffdb8
   3f208:	strb	r0, [fp, #-583]	; 0xfffffdb9
   3f20c:	movw	r1, #0
   3f210:	str	r1, [fp, #-580]	; 0xfffffdbc
   3f214:	str	r1, [fp, #-576]	; 0xfffffdc0
   3f218:	str	r1, [fp, #-564]	; 0xfffffdcc
   3f21c:	str	r1, [fp, #-572]	; 0xfffffdc4
   3f220:	str	r1, [fp, #-568]	; 0xfffffdc8
   3f224:	str	r1, [fp, #-560]	; 0xfffffdd0
   3f228:	strb	r0, [fp, #-556]	; 0xfffffdd4
   3f22c:	strb	r0, [fp, #-555]	; 0xfffffdd5
   3f230:	strb	r0, [fp, #-554]	; 0xfffffdd6
   3f234:	strb	r0, [fp, #-552]	; 0xfffffdd8
   3f238:	strb	r0, [fp, #-553]	; 0xfffffdd7
   3f23c:	strb	r0, [fp, #-551]	; 0xfffffdd9
   3f240:	strb	r0, [fp, #-550]	; 0xfffffdda
   3f244:	strb	r0, [fp, #-549]	; 0xfffffddb
   3f248:	ldr	r0, [fp, #-468]	; 0xfffffe2c
   3f24c:	str	r0, [fp, #-548]	; 0xfffffddc
   3f250:	movw	r0, #269	; 0x10d
   3f254:	str	r0, [fp, #-544]	; 0xfffffde0
   3f258:	ldr	r0, [fp, #-476]	; 0xfffffe24
   3f25c:	str	r0, [fp, #-540]	; 0xfffffde4
   3f260:	str	r1, [fp, #-536]	; 0xfffffde8
   3f264:	movw	r0, #1
   3f268:	str	r0, [fp, #-740]	; 0xfffffd1c
   3f26c:	ldr	r0, [fp, #-740]	; 0xfffffd1c
   3f270:	cmp	r0, #3
   3f274:	bgt	3f31c <__assert_fail@plt+0x2c764>
   3f278:	ldr	r0, [pc, #4068]	; 40264 <__assert_fail@plt+0x2d6ac>
   3f27c:	ldr	r1, [fp, #-368]	; 0xfffffe90
   3f280:	ldr	r2, [fp, #-740]	; 0xfffffd1c
   3f284:	mul	r0, r2, r0
   3f288:	add	r0, r1, r0
   3f28c:	mov	r2, #1
   3f290:	cmp	r0, r1
   3f294:	movwvc	r2, #0
   3f298:	str	r0, [fp, #-744]	; 0xfffffd18
   3f29c:	tst	r2, #1
   3f2a0:	beq	3f2a8 <__assert_fail@plt+0x2c6f0>
   3f2a4:	b	3f31c <__assert_fail@plt+0x2c764>
   3f2a8:	ldr	r0, [fp, #-380]	; 0xfffffe84
   3f2ac:	sub	r1, fp, #744	; 0x2e8
   3f2b0:	sub	r2, fp, #788	; 0x314
   3f2b4:	bl	6ff34 <__assert_fail@plt+0x5d37c>
   3f2b8:	movw	r1, #0
   3f2bc:	cmp	r0, r1
   3f2c0:	beq	3f308 <__assert_fail@plt+0x2c750>
   3f2c4:	ldr	r0, [fp, #-748]	; 0xfffffd14
   3f2c8:	movw	r1, #0
   3f2cc:	cmp	r0, r1
   3f2d0:	beq	3f308 <__assert_fail@plt+0x2c750>
   3f2d4:	ldr	r0, [fp, #-756]	; 0xfffffd0c
   3f2d8:	ldr	r1, [fp, #-540]	; 0xfffffde4
   3f2dc:	cmp	r0, r1
   3f2e0:	beq	3f308 <__assert_fail@plt+0x2c750>
   3f2e4:	ldr	r0, [fp, #-748]	; 0xfffffd14
   3f2e8:	str	r0, [fp, #-536]	; 0xfffffde8
   3f2ec:	movw	r0, #269	; 0x10d
   3f2f0:	str	r0, [fp, #-532]	; 0xfffffdec
   3f2f4:	ldr	r0, [fp, #-756]	; 0xfffffd0c
   3f2f8:	str	r0, [fp, #-528]	; 0xfffffdf0
   3f2fc:	movw	r0, #0
   3f300:	str	r0, [fp, #-524]	; 0xfffffdf4
   3f304:	b	3f31c <__assert_fail@plt+0x2c764>
   3f308:	b	3f30c <__assert_fail@plt+0x2c754>
   3f30c:	ldr	r0, [fp, #-740]	; 0xfffffd1c
   3f310:	add	r0, r0, #1
   3f314:	str	r0, [fp, #-740]	; 0xfffffd1c
   3f318:	b	3f26c <__assert_fail@plt+0x2c6b4>
   3f31c:	ldr	r0, [fp, #-548]	; 0xfffffddc
   3f320:	movw	r1, #0
   3f324:	cmp	r0, r1
   3f328:	beq	3f360 <__assert_fail@plt+0x2c7a8>
   3f32c:	ldr	r0, [fp, #-536]	; 0xfffffde8
   3f330:	movw	r1, #0
   3f334:	cmp	r0, r1
   3f338:	beq	3f360 <__assert_fail@plt+0x2c7a8>
   3f33c:	ldr	r0, [fp, #-548]	; 0xfffffddc
   3f340:	ldr	r1, [fp, #-536]	; 0xfffffde8
   3f344:	bl	124c8 <strcmp@plt>
   3f348:	cmp	r0, #0
   3f34c:	bne	3f360 <__assert_fail@plt+0x2c7a8>
   3f350:	mvn	r0, #0
   3f354:	str	r0, [fp, #-540]	; 0xfffffde4
   3f358:	movw	r0, #0
   3f35c:	str	r0, [fp, #-536]	; 0xfffffde8
   3f360:	sub	r0, fp, #736	; 0x2e0
   3f364:	bl	32744 <__assert_fail@plt+0x1fb8c>
   3f368:	cmp	r0, #0
   3f36c:	beq	3f3c4 <__assert_fail@plt+0x2c80c>
   3f370:	sub	r0, fp, #736	; 0x2e0
   3f374:	bl	3e9ac <__assert_fail@plt+0x2bdf4>
   3f378:	tst	r0, #1
   3f37c:	beq	3f3c0 <__assert_fail@plt+0x2c808>
   3f380:	ldr	r0, [fp, #-252]	; 0xffffff04
   3f384:	ldr	r1, [fp, #-736]	; 0xfffffd20
   3f388:	cmp	r0, r1
   3f38c:	bhi	3f3a4 <__assert_fail@plt+0x2c7ec>
   3f390:	movw	r0, #54719	; 0xd5bf
   3f394:	movt	r0, #7
   3f398:	bl	12864 <gettext@plt>
   3f39c:	str	r0, [fp, #-1244]	; 0xfffffb24
   3f3a0:	b	3f3b4 <__assert_fail@plt+0x2c7fc>
   3f3a4:	movw	r0, #54742	; 0xd5d6
   3f3a8:	movt	r0, #7
   3f3ac:	bl	12864 <gettext@plt>
   3f3b0:	str	r0, [fp, #-1244]	; 0xfffffb24
   3f3b4:	ldr	r0, [fp, #-1244]	; 0xfffffb24
   3f3b8:	ldr	r1, [fp, #-736]	; 0xfffffd20
   3f3bc:	bl	3e9c4 <__assert_fail@plt+0x2be0c>
   3f3c0:	b	47060 <__assert_fail@plt+0x344a8>
   3f3c4:	sub	r0, fp, #736	; 0x2e0
   3f3c8:	bl	3e9ac <__assert_fail@plt+0x2bdf4>
   3f3cc:	tst	r0, #1
   3f3d0:	beq	3f654 <__assert_fail@plt+0x2ca9c>
   3f3d4:	movw	r0, #54782	; 0xd5fe
   3f3d8:	movt	r0, #7
   3f3dc:	bl	12864 <gettext@plt>
   3f3e0:	bl	3e9c4 <__assert_fail@plt+0x2be0c>
   3f3e4:	ldrb	r0, [fp, #-584]	; 0xfffffdb8
   3f3e8:	tst	r0, #1
   3f3ec:	beq	3f42c <__assert_fail@plt+0x2c874>
   3f3f0:	movw	r0, #63272	; 0xf728
   3f3f4:	movt	r0, #8
   3f3f8:	ldr	r0, [r0]
   3f3fc:	movw	r1, #54799	; 0xd60f
   3f400:	movt	r1, #7
   3f404:	str	r0, [fp, #-1248]	; 0xfffffb20
   3f408:	mov	r0, r1
   3f40c:	bl	12864 <gettext@plt>
   3f410:	ldr	r1, [fp, #-1248]	; 0xfffffb20
   3f414:	str	r0, [fp, #-1252]	; 0xfffffb1c
   3f418:	mov	r0, r1
   3f41c:	ldr	r1, [fp, #-1252]	; 0xfffffb1c
   3f420:	bl	128c4 <fprintf@plt>
   3f424:	str	r0, [fp, #-1256]	; 0xfffffb18
   3f428:	b	3f5ac <__assert_fail@plt+0x2c9f4>
   3f42c:	ldr	r0, [fp, #-560]	; 0xfffffdd0
   3f430:	cmp	r0, #0
   3f434:	beq	3f474 <__assert_fail@plt+0x2c8bc>
   3f438:	movw	r0, #63272	; 0xf728
   3f43c:	movt	r0, #8
   3f440:	ldr	r0, [r0]
   3f444:	movw	r1, #54824	; 0xd628
   3f448:	movt	r1, #7
   3f44c:	str	r0, [fp, #-1260]	; 0xfffffb14
   3f450:	mov	r0, r1
   3f454:	bl	12864 <gettext@plt>
   3f458:	ldr	r1, [fp, #-1260]	; 0xfffffb14
   3f45c:	str	r0, [fp, #-1264]	; 0xfffffb10
   3f460:	mov	r0, r1
   3f464:	ldr	r1, [fp, #-1264]	; 0xfffffb10
   3f468:	bl	128c4 <fprintf@plt>
   3f46c:	str	r0, [fp, #-1268]	; 0xfffffb0c
   3f470:	b	3f5a8 <__assert_fail@plt+0x2c9f0>
   3f474:	ldr	r0, [fp, #12]
   3f478:	movw	r1, #0
   3f47c:	cmp	r0, r1
   3f480:	beq	3f56c <__assert_fail@plt+0x2c9b4>
   3f484:	ldr	r0, [fp, #-380]	; 0xfffffe84
   3f488:	ldr	r1, [fp, #8]
   3f48c:	cmp	r0, r1
   3f490:	beq	3f4d4 <__assert_fail@plt+0x2c91c>
   3f494:	movw	r0, #63272	; 0xf728
   3f498:	movt	r0, #8
   3f49c:	ldr	r0, [r0]
   3f4a0:	movw	r1, #54848	; 0xd640
   3f4a4:	movt	r1, #7
   3f4a8:	str	r0, [fp, #-1272]	; 0xfffffb08
   3f4ac:	mov	r0, r1
   3f4b0:	bl	12864 <gettext@plt>
   3f4b4:	ldr	r2, [fp, #12]
   3f4b8:	ldr	r1, [fp, #-1272]	; 0xfffffb08
   3f4bc:	str	r0, [fp, #-1276]	; 0xfffffb04
   3f4c0:	mov	r0, r1
   3f4c4:	ldr	r1, [fp, #-1276]	; 0xfffffb04
   3f4c8:	bl	128c4 <fprintf@plt>
   3f4cc:	str	r0, [fp, #-1280]	; 0xfffffb00
   3f4d0:	b	3f568 <__assert_fail@plt+0x2c9b0>
   3f4d4:	ldr	r0, [fp, #12]
   3f4d8:	movw	r1, #54871	; 0xd657
   3f4dc:	movt	r1, #7
   3f4e0:	bl	124c8 <strcmp@plt>
   3f4e4:	cmp	r0, #0
   3f4e8:	bne	3f528 <__assert_fail@plt+0x2c970>
   3f4ec:	movw	r0, #63272	; 0xf728
   3f4f0:	movt	r0, #8
   3f4f4:	ldr	r0, [r0]
   3f4f8:	movw	r1, #54876	; 0xd65c
   3f4fc:	movt	r1, #7
   3f500:	str	r0, [fp, #-1284]	; 0xfffffafc
   3f504:	mov	r0, r1
   3f508:	bl	12864 <gettext@plt>
   3f50c:	ldr	r1, [fp, #-1284]	; 0xfffffafc
   3f510:	str	r0, [fp, #-1288]	; 0xfffffaf8
   3f514:	mov	r0, r1
   3f518:	ldr	r1, [fp, #-1288]	; 0xfffffaf8
   3f51c:	bl	128c4 <fprintf@plt>
   3f520:	str	r0, [fp, #-1292]	; 0xfffffaf4
   3f524:	b	3f564 <__assert_fail@plt+0x2c9ac>
   3f528:	movw	r0, #63272	; 0xf728
   3f52c:	movt	r0, #8
   3f530:	ldr	r0, [r0]
   3f534:	movw	r1, #54910	; 0xd67e
   3f538:	movt	r1, #7
   3f53c:	str	r0, [fp, #-1296]	; 0xfffffaf0
   3f540:	mov	r0, r1
   3f544:	bl	12864 <gettext@plt>
   3f548:	ldr	r2, [fp, #12]
   3f54c:	ldr	r1, [fp, #-1296]	; 0xfffffaf0
   3f550:	str	r0, [fp, #-1300]	; 0xfffffaec
   3f554:	mov	r0, r1
   3f558:	ldr	r1, [fp, #-1300]	; 0xfffffaec
   3f55c:	bl	128c4 <fprintf@plt>
   3f560:	str	r0, [fp, #-1304]	; 0xfffffae8
   3f564:	b	3f568 <__assert_fail@plt+0x2c9b0>
   3f568:	b	3f5a4 <__assert_fail@plt+0x2c9ec>
   3f56c:	movw	r0, #63272	; 0xf728
   3f570:	movt	r0, #8
   3f574:	ldr	r0, [r0]
   3f578:	movw	r1, #54936	; 0xd698
   3f57c:	movt	r1, #7
   3f580:	str	r0, [fp, #-1308]	; 0xfffffae4
   3f584:	mov	r0, r1
   3f588:	bl	12864 <gettext@plt>
   3f58c:	ldr	r1, [fp, #-1308]	; 0xfffffae4
   3f590:	str	r0, [fp, #-1312]	; 0xfffffae0
   3f594:	mov	r0, r1
   3f598:	ldr	r1, [fp, #-1312]	; 0xfffffae0
   3f59c:	bl	128c4 <fprintf@plt>
   3f5a0:	str	r0, [fp, #-1316]	; 0xfffffadc
   3f5a4:	b	3f5a8 <__assert_fail@plt+0x2c9f0>
   3f5a8:	b	3f5ac <__assert_fail@plt+0x2c9f4>
   3f5ac:	ldr	r0, [fp, #-572]	; 0xfffffdc4
   3f5b0:	cmp	r0, #0
   3f5b4:	beq	3f5f0 <__assert_fail@plt+0x2ca38>
   3f5b8:	ldr	r0, [fp, #-560]	; 0xfffffdd0
   3f5bc:	cmp	r0, #0
   3f5c0:	bne	3f5f0 <__assert_fail@plt+0x2ca38>
   3f5c4:	ldr	r0, [fp, #-716]	; 0xfffffd34
   3f5c8:	movw	r1, #0
   3f5cc:	cmp	r1, r0
   3f5d0:	bge	3f5f0 <__assert_fail@plt+0x2ca38>
   3f5d4:	movw	r0, #63272	; 0xf728
   3f5d8:	movt	r0, #8
   3f5dc:	ldr	r0, [r0]
   3f5e0:	movw	r1, #54951	; 0xd6a7
   3f5e4:	movt	r1, #7
   3f5e8:	bl	128c4 <fprintf@plt>
   3f5ec:	str	r0, [fp, #-1320]	; 0xfffffad8
   3f5f0:	ldr	r0, [fp, #-560]	; 0xfffffdd0
   3f5f4:	cmp	r0, #0
   3f5f8:	beq	3f63c <__assert_fail@plt+0x2ca84>
   3f5fc:	sub	r1, fp, #147	; 0x93
   3f600:	movw	r0, #63272	; 0xf728
   3f604:	movt	r0, #8
   3f608:	ldr	r0, [r0]
   3f60c:	ldr	r2, [fp, #-712]	; 0xfffffd38
   3f610:	str	r0, [fp, #-1324]	; 0xfffffad4
   3f614:	mov	r0, r2
   3f618:	bl	4723c <__assert_fail@plt+0x34684>
   3f61c:	ldr	r1, [fp, #-1324]	; 0xfffffad4
   3f620:	str	r0, [fp, #-1328]	; 0xfffffad0
   3f624:	mov	r0, r1
   3f628:	movw	r1, #54957	; 0xd6ad
   3f62c:	movt	r1, #7
   3f630:	ldr	r2, [fp, #-1328]	; 0xfffffad0
   3f634:	bl	128c4 <fprintf@plt>
   3f638:	str	r0, [fp, #-1332]	; 0xfffffacc
   3f63c:	movw	r0, #63272	; 0xf728
   3f640:	movt	r0, #8
   3f644:	ldr	r1, [r0]
   3f648:	movw	r0, #10
   3f64c:	bl	12a38 <fputc@plt>
   3f650:	str	r0, [fp, #-1336]	; 0xfffffac8
   3f654:	ldrb	r0, [fp, #-584]	; 0xfffffdb8
   3f658:	tst	r0, #1
   3f65c:	beq	3f678 <__assert_fail@plt+0x2cac0>
   3f660:	ldr	r0, [fp, #-20]	; 0xffffffec
   3f664:	ldr	r1, [fp, #-648]	; 0xfffffd78
   3f668:	str	r1, [r0]
   3f66c:	ldr	r1, [fp, #-644]	; 0xfffffd7c
   3f670:	str	r1, [r0, #4]
   3f674:	b	46e3c <__assert_fail@plt+0x34284>
   3f678:	ldr	r0, [fp, #-564]	; 0xfffffdcc
   3f67c:	ldr	r1, [fp, #-580]	; 0xfffffdbc
   3f680:	orr	r0, r0, r1
   3f684:	ldr	r1, [fp, #-576]	; 0xfffffdc0
   3f688:	orr	r0, r0, r1
   3f68c:	ldr	r1, [fp, #-568]	; 0xfffffdc8
   3f690:	orr	r0, r0, r1
   3f694:	ldr	r1, [fp, #-572]	; 0xfffffdc4
   3f698:	ldr	r2, [fp, #-560]	; 0xfffffdd0
   3f69c:	add	r1, r1, r2
   3f6a0:	orr	r0, r0, r1
   3f6a4:	movw	r1, #1
   3f6a8:	cmp	r1, r0
   3f6ac:	bge	3f748 <__assert_fail@plt+0x2cb90>
   3f6b0:	sub	r0, fp, #736	; 0x2e0
   3f6b4:	bl	3e9ac <__assert_fail@plt+0x2bdf4>
   3f6b8:	tst	r0, #1
   3f6bc:	beq	3f744 <__assert_fail@plt+0x2cb8c>
   3f6c0:	ldr	r0, [fp, #-564]	; 0xfffffdcc
   3f6c4:	cmp	r0, #1
   3f6c8:	ble	3f6d8 <__assert_fail@plt+0x2cb20>
   3f6cc:	movw	r0, #54963	; 0xd6b3
   3f6d0:	movt	r0, #7
   3f6d4:	bl	3e9c4 <__assert_fail@plt+0x2be0c>
   3f6d8:	ldr	r0, [fp, #-580]	; 0xfffffdbc
   3f6dc:	cmp	r0, #1
   3f6e0:	ble	3f6f0 <__assert_fail@plt+0x2cb38>
   3f6e4:	movw	r0, #54996	; 0xd6d4
   3f6e8:	movt	r0, #7
   3f6ec:	bl	3e9c4 <__assert_fail@plt+0x2be0c>
   3f6f0:	ldr	r0, [fp, #-576]	; 0xfffffdc0
   3f6f4:	cmp	r0, #1
   3f6f8:	ble	3f708 <__assert_fail@plt+0x2cb50>
   3f6fc:	movw	r0, #55029	; 0xd6f5
   3f700:	movt	r0, #7
   3f704:	bl	3e9c4 <__assert_fail@plt+0x2be0c>
   3f708:	ldr	r0, [fp, #-568]	; 0xfffffdc8
   3f70c:	cmp	r0, #1
   3f710:	ble	3f720 <__assert_fail@plt+0x2cb68>
   3f714:	movw	r0, #55062	; 0xd716
   3f718:	movt	r0, #7
   3f71c:	bl	3e9c4 <__assert_fail@plt+0x2be0c>
   3f720:	ldr	r0, [fp, #-572]	; 0xfffffdc4
   3f724:	ldr	r1, [fp, #-560]	; 0xfffffdd0
   3f728:	add	r0, r0, r1
   3f72c:	cmp	r0, #1
   3f730:	ble	3f740 <__assert_fail@plt+0x2cb88>
   3f734:	movw	r0, #55106	; 0xd742
   3f738:	movt	r0, #7
   3f73c:	bl	3e9c4 <__assert_fail@plt+0x2be0c>
   3f740:	b	3f744 <__assert_fail@plt+0x2cb8c>
   3f744:	b	47060 <__assert_fail@plt+0x344a8>
   3f748:	sub	r0, fp, #736	; 0x2e0
   3f74c:	bl	3e9ac <__assert_fail@plt+0x2bdf4>
   3f750:	sub	lr, fp, #76	; 0x4c
   3f754:	add	lr, lr, #20
   3f758:	ldr	r1, [fp, #-684]	; 0xfffffd54
   3f75c:	ldr	r2, [fp, #-688]	; 0xfffffd50
   3f760:	ldr	r3, [fp, #-704]	; 0xfffffd40
   3f764:	ldr	ip, [fp, #-700]	; 0xfffffd44
   3f768:	ldr	r4, [fp, #-696]	; 0xfffffd48
   3f76c:	ldr	r5, [fp, #-692]	; 0xfffffd4c
   3f770:	mov	r6, sp
   3f774:	str	lr, [r6, #12]
   3f778:	and	r0, r0, #1
   3f77c:	str	r0, [r6, #8]
   3f780:	str	r2, [r6]
   3f784:	str	r1, [r6, #4]
   3f788:	mov	r0, r3
   3f78c:	mov	r1, ip
   3f790:	mov	r2, r4
   3f794:	mov	r3, r5
   3f798:	bl	47a64 <__assert_fail@plt+0x34eac>
   3f79c:	tst	r0, #1
   3f7a0:	beq	3f82c <__assert_fail@plt+0x2cc74>
   3f7a4:	ldr	r0, [fp, #-680]	; 0xfffffd58
   3f7a8:	ldr	r1, [fp, #-676]	; 0xfffffd5c
   3f7ac:	mov	r2, #0
   3f7b0:	cmn	r1, #1
   3f7b4:	mov	r3, r2
   3f7b8:	movwgt	r3, #1
   3f7bc:	subs	r0, r0, #1
   3f7c0:	sbc	ip, r1, #0
   3f7c4:	cmn	ip, #1
   3f7c8:	mov	lr, r2
   3f7cc:	movwgt	lr, #1
   3f7d0:	sub	r4, r3, lr
   3f7d4:	cmp	r3, lr
   3f7d8:	movwne	r4, #1
   3f7dc:	cmp	r1, #0
   3f7e0:	movwlt	r2, #1
   3f7e4:	and	r1, r2, r4
   3f7e8:	eor	r2, ip, r0, asr #31
   3f7ec:	cmp	r2, #0
   3f7f0:	movwne	r2, #1
   3f7f4:	orr	r1, r1, r2
   3f7f8:	str	r0, [fp, #-60]	; 0xffffffc4
   3f7fc:	tst	r1, #1
   3f800:	bne	3f82c <__assert_fail@plt+0x2cc74>
   3f804:	ldr	r0, [fp, #-672]	; 0xfffffd60
   3f808:	ldr	r1, [fp, #-668]	; 0xfffffd64
   3f80c:	mov	r2, #0
   3f810:	eor	r1, r1, r0, asr #31
   3f814:	cmp	r1, #0
   3f818:	movwne	r1, #1
   3f81c:	orr	r1, r2, r1
   3f820:	str	r0, [fp, #-64]	; 0xffffffc0
   3f824:	tst	r1, #1
   3f828:	beq	3f850 <__assert_fail@plt+0x2cc98>
   3f82c:	sub	r0, fp, #736	; 0x2e0
   3f830:	bl	3e9ac <__assert_fail@plt+0x2bdf4>
   3f834:	tst	r0, #1
   3f838:	beq	3f84c <__assert_fail@plt+0x2cc94>
   3f83c:	movw	r0, #55144	; 0xd768
   3f840:	movt	r0, #7
   3f844:	bl	12864 <gettext@plt>
   3f848:	bl	3e9c4 <__assert_fail@plt+0x2be0c>
   3f84c:	b	47060 <__assert_fail@plt+0x344a8>
   3f850:	ldr	r0, [fp, #-564]	; 0xfffffdcc
   3f854:	cmp	r0, #0
   3f858:	bne	3f880 <__assert_fail@plt+0x2ccc8>
   3f85c:	ldrb	r0, [fp, #-583]	; 0xfffffdb9
   3f860:	tst	r0, #1
   3f864:	beq	3f9ac <__assert_fail@plt+0x2cdf4>
   3f868:	ldr	r0, [fp, #-580]	; 0xfffffdbc
   3f86c:	cmp	r0, #0
   3f870:	bne	3f9ac <__assert_fail@plt+0x2cdf4>
   3f874:	ldr	r0, [fp, #-576]	; 0xfffffdc0
   3f878:	cmp	r0, #0
   3f87c:	bne	3f9ac <__assert_fail@plt+0x2cdf4>
   3f880:	ldr	r0, [fp, #-664]	; 0xfffffd68
   3f884:	ldr	r1, [fp, #-660]	; 0xfffffd6c
   3f888:	ldr	r2, [fp, #-708]	; 0xfffffd3c
   3f88c:	bl	47c54 <__assert_fail@plt+0x3509c>
   3f890:	str	r0, [fp, #-68]	; 0xffffffbc
   3f894:	ldr	r0, [fp, #-68]	; 0xffffffbc
   3f898:	cmp	r0, #0
   3f89c:	bge	3f928 <__assert_fail@plt+0x2cd70>
   3f8a0:	ldr	r0, [fp, #-708]	; 0xfffffd3c
   3f8a4:	cmp	r0, #0
   3f8a8:	bne	3f8bc <__assert_fail@plt+0x2cd04>
   3f8ac:	movw	r0, #55181	; 0xd78d
   3f8b0:	movt	r0, #7
   3f8b4:	str	r0, [fp, #-1340]	; 0xfffffac4
   3f8b8:	b	3f8e8 <__assert_fail@plt+0x2cd30>
   3f8bc:	ldr	r0, [fp, #-708]	; 0xfffffd3c
   3f8c0:	cmp	r0, #1
   3f8c4:	movw	r0, #0
   3f8c8:	moveq	r0, #1
   3f8cc:	tst	r0, #1
   3f8d0:	movw	r0, #39197	; 0x991d
   3f8d4:	movt	r0, #7
   3f8d8:	movw	r1, #53898	; 0xd28a
   3f8dc:	movt	r1, #7
   3f8e0:	movne	r0, r1
   3f8e4:	str	r0, [fp, #-1340]	; 0xfffffac4
   3f8e8:	ldr	r0, [fp, #-1340]	; 0xfffffac4
   3f8ec:	str	r0, [fp, #-792]	; 0xfffffce8
   3f8f0:	sub	r0, fp, #736	; 0x2e0
   3f8f4:	bl	3e9ac <__assert_fail@plt+0x2bdf4>
   3f8f8:	tst	r0, #1
   3f8fc:	beq	3f924 <__assert_fail@plt+0x2cd6c>
   3f900:	movw	r0, #55184	; 0xd790
   3f904:	movt	r0, #7
   3f908:	bl	12864 <gettext@plt>
   3f90c:	ldr	r2, [fp, #-664]	; 0xfffffd68
   3f910:	ldr	r3, [fp, #-660]	; 0xfffffd6c
   3f914:	ldr	lr, [fp, #-792]	; 0xfffffce8
   3f918:	mov	r1, sp
   3f91c:	str	lr, [r1]
   3f920:	bl	3e9c4 <__assert_fail@plt+0x2be0c>
   3f924:	b	47060 <__assert_fail@plt+0x344a8>
   3f928:	ldr	r0, [fp, #-656]	; 0xfffffd70
   3f92c:	str	r0, [fp, #-72]	; 0xffffffb8
   3f930:	ldr	r0, [fp, #-648]	; 0xfffffd78
   3f934:	str	r0, [fp, #-76]	; 0xffffffb4
   3f938:	sub	r0, fp, #736	; 0x2e0
   3f93c:	bl	3e9ac <__assert_fail@plt+0x2bdf4>
   3f940:	tst	r0, #1
   3f944:	beq	3f9a8 <__assert_fail@plt+0x2cdf0>
   3f948:	ldr	r0, [fp, #-564]	; 0xfffffdcc
   3f94c:	cmp	r0, #0
   3f950:	beq	3f968 <__assert_fail@plt+0x2cdb0>
   3f954:	movw	r0, #55212	; 0xd7ac
   3f958:	movt	r0, #7
   3f95c:	bl	12864 <gettext@plt>
   3f960:	str	r0, [fp, #-1344]	; 0xfffffac0
   3f964:	b	3f978 <__assert_fail@plt+0x2cdc0>
   3f968:	movw	r0, #55258	; 0xd7da
   3f96c:	movt	r0, #7
   3f970:	bl	12864 <gettext@plt>
   3f974:	str	r0, [fp, #-1344]	; 0xfffffac0
   3f978:	ldr	r0, [fp, #-1344]	; 0xfffffac0
   3f97c:	sub	r1, fp, #247	; 0xf7
   3f980:	sub	r2, fp, #76	; 0x4c
   3f984:	str	r0, [fp, #-1348]	; 0xfffffabc
   3f988:	mov	r0, r2
   3f98c:	movw	r2, #100	; 0x64
   3f990:	bl	47e3c <__assert_fail@plt+0x35284>
   3f994:	ldr	r1, [fp, #-1348]	; 0xfffffabc
   3f998:	str	r0, [fp, #-1352]	; 0xfffffab8
   3f99c:	mov	r0, r1
   3f9a0:	ldr	r1, [fp, #-1352]	; 0xfffffab8
   3f9a4:	bl	3e9c4 <__assert_fail@plt+0x2be0c>
   3f9a8:	b	3f9e0 <__assert_fail@plt+0x2ce28>
   3f9ac:	movw	r0, #0
   3f9b0:	str	r0, [fp, #-76]	; 0xffffffb4
   3f9b4:	str	r0, [fp, #-72]	; 0xffffffb8
   3f9b8:	str	r0, [fp, #-68]	; 0xffffffbc
   3f9bc:	str	r0, [fp, #-644]	; 0xfffffd7c
   3f9c0:	sub	r0, fp, #736	; 0x2e0
   3f9c4:	bl	3e9ac <__assert_fail@plt+0x2bdf4>
   3f9c8:	tst	r0, #1
   3f9cc:	beq	3f9dc <__assert_fail@plt+0x2ce24>
   3f9d0:	movw	r0, #55302	; 0xd806
   3f9d4:	movt	r0, #7
   3f9d8:	bl	3e9c4 <__assert_fail@plt+0x2be0c>
   3f9dc:	b	3f9e0 <__assert_fail@plt+0x2ce28>
   3f9e0:	ldr	r0, [fp, #-580]	; 0xfffffdbc
   3f9e4:	ldr	r1, [fp, #-576]	; 0xfffffdc0
   3f9e8:	orr	r0, r0, r1
   3f9ec:	ldr	r1, [fp, #-564]	; 0xfffffdcc
   3f9f0:	orr	r0, r0, r1
   3f9f4:	cmp	r0, #0
   3f9f8:	beq	3fa04 <__assert_fail@plt+0x2ce4c>
   3f9fc:	mvn	r0, #0
   3fa00:	str	r0, [fp, #-44]	; 0xffffffd4
   3fa04:	ldr	r0, [fp, #-572]	; 0xfffffdc4
   3fa08:	cmp	r0, #0
   3fa0c:	beq	3fa18 <__assert_fail@plt+0x2ce60>
   3fa10:	ldr	r0, [fp, #-716]	; 0xfffffd34
   3fa14:	str	r0, [fp, #-44]	; 0xffffffd4
   3fa18:	ldr	r0, [fp, #-76]	; 0xffffffb4
   3fa1c:	str	r0, [fp, #-120]	; 0xffffff88
   3fa20:	ldr	r0, [fp, #-72]	; 0xffffffb8
   3fa24:	str	r0, [fp, #-116]	; 0xffffff8c
   3fa28:	ldr	r0, [fp, #-68]	; 0xffffffbc
   3fa2c:	str	r0, [fp, #-112]	; 0xffffff90
   3fa30:	ldr	r0, [fp, #-64]	; 0xffffffc0
   3fa34:	str	r0, [fp, #-108]	; 0xffffff94
   3fa38:	ldr	r0, [fp, #-60]	; 0xffffffc4
   3fa3c:	str	r0, [fp, #-104]	; 0xffffff98
   3fa40:	ldr	r0, [fp, #-56]	; 0xffffffc8
   3fa44:	str	r0, [fp, #-100]	; 0xffffff9c
   3fa48:	ldr	r0, [fp, #-44]	; 0xffffffd4
   3fa4c:	str	r0, [fp, #-88]	; 0xffffffa8
   3fa50:	mvn	r0, #0
   3fa54:	str	r0, [fp, #-52]	; 0xffffffcc
   3fa58:	ldr	r0, [fp, #-380]	; 0xfffffe84
   3fa5c:	sub	r1, fp, #76	; 0x4c
   3fa60:	bl	70384 <__assert_fail@plt+0x5d7cc>
   3fa64:	str	r0, [fp, #-368]	; 0xfffffe90
   3fa68:	sub	r0, fp, #120	; 0x78
   3fa6c:	sub	r1, fp, #76	; 0x4c
   3fa70:	bl	47ea8 <__assert_fail@plt+0x352f0>
   3fa74:	tst	r0, #1
   3fa78:	bne	3fbb8 <__assert_fail@plt+0x2d000>
   3fa7c:	movw	r0, #0
   3fa80:	strb	r0, [fp, #-793]	; 0xfffffce7
   3fa84:	ldr	r0, [fp, #-560]	; 0xfffffdd0
   3fa88:	cmp	r0, #0
   3fa8c:	movw	r0, #0
   3fa90:	movne	r0, #1
   3fa94:	and	r0, r0, #1
   3fa98:	strb	r0, [fp, #-794]	; 0xfffffce6
   3fa9c:	ldrb	r0, [fp, #-794]	; 0xfffffce6
   3faa0:	tst	r0, #1
   3faa4:	beq	3fb80 <__assert_fail@plt+0x2cfc8>
   3faa8:	movw	r0, #88	; 0x58
   3faac:	strb	r0, [fp, #-822]	; 0xfffffcca
   3fab0:	strb	r0, [fp, #-823]	; 0xfffffcc9
   3fab4:	strb	r0, [fp, #-824]	; 0xfffffcc8
   3fab8:	ldr	r0, [fp, #-712]	; 0xfffffd38
   3fabc:	sub	r1, fp, #824	; 0x338
   3fac0:	add	r1, r1, #3
   3fac4:	bl	4723c <__assert_fail@plt+0x34684>
   3fac8:	sub	r1, fp, #824	; 0x338
   3facc:	str	r0, [fp, #-1356]	; 0xfffffab4
   3fad0:	mov	r0, r1
   3fad4:	bl	6fd84 <__assert_fail@plt+0x5d1cc>
   3fad8:	str	r0, [fp, #-828]	; 0xfffffcc4
   3fadc:	ldr	r0, [fp, #-828]	; 0xfffffcc4
   3fae0:	movw	r1, #0
   3fae4:	cmp	r0, r1
   3fae8:	bne	3fb14 <__assert_fail@plt+0x2cf5c>
   3faec:	sub	r0, fp, #736	; 0x2e0
   3faf0:	bl	3e9ac <__assert_fail@plt+0x2bdf4>
   3faf4:	tst	r0, #1
   3faf8:	beq	3fb10 <__assert_fail@plt+0x2cf58>
   3fafc:	movw	r0, #55354	; 0xd83a
   3fb00:	movt	r0, #7
   3fb04:	bl	12864 <gettext@plt>
   3fb08:	sub	r1, fp, #824	; 0x338
   3fb0c:	bl	3e9c4 <__assert_fail@plt+0x2be0c>
   3fb10:	b	47060 <__assert_fail@plt+0x344a8>
   3fb14:	ldr	r0, [fp, #-120]	; 0xffffff88
   3fb18:	str	r0, [fp, #-76]	; 0xffffffb4
   3fb1c:	ldr	r0, [fp, #-116]	; 0xffffff8c
   3fb20:	str	r0, [fp, #-72]	; 0xffffffb8
   3fb24:	ldr	r0, [fp, #-112]	; 0xffffff90
   3fb28:	str	r0, [fp, #-68]	; 0xffffffbc
   3fb2c:	ldr	r0, [fp, #-108]	; 0xffffff94
   3fb30:	str	r0, [fp, #-64]	; 0xffffffc0
   3fb34:	ldr	r0, [fp, #-104]	; 0xffffff98
   3fb38:	str	r0, [fp, #-60]	; 0xffffffc4
   3fb3c:	ldr	r0, [fp, #-100]	; 0xffffff9c
   3fb40:	str	r0, [fp, #-56]	; 0xffffffc8
   3fb44:	ldr	r0, [fp, #-88]	; 0xffffffa8
   3fb48:	str	r0, [fp, #-44]	; 0xffffffd4
   3fb4c:	mvn	r0, #0
   3fb50:	str	r0, [fp, #-52]	; 0xffffffcc
   3fb54:	ldr	r0, [fp, #-828]	; 0xfffffcc4
   3fb58:	sub	r1, fp, #76	; 0x4c
   3fb5c:	bl	70384 <__assert_fail@plt+0x5d7cc>
   3fb60:	str	r0, [fp, #-368]	; 0xfffffe90
   3fb64:	sub	r0, fp, #120	; 0x78
   3fb68:	sub	r1, fp, #76	; 0x4c
   3fb6c:	bl	47ea8 <__assert_fail@plt+0x352f0>
   3fb70:	and	r0, r0, #1
   3fb74:	strb	r0, [fp, #-793]	; 0xfffffce7
   3fb78:	ldr	r0, [fp, #-828]	; 0xfffffcc4
   3fb7c:	bl	6fed4 <__assert_fail@plt+0x5d31c>
   3fb80:	ldrb	r0, [fp, #-793]	; 0xfffffce7
   3fb84:	tst	r0, #1
   3fb88:	bne	3fbb4 <__assert_fail@plt+0x2cffc>
   3fb8c:	ldrb	r0, [fp, #-794]	; 0xfffffce6
   3fb90:	sub	r1, fp, #120	; 0x78
   3fb94:	str	r0, [fp, #-1360]	; 0xfffffab0
   3fb98:	mov	r0, r1
   3fb9c:	sub	r1, fp, #76	; 0x4c
   3fba0:	sub	r2, fp, #736	; 0x2e0
   3fba4:	ldr	r3, [fp, #-1360]	; 0xfffffab0
   3fba8:	and	r3, r3, #1
   3fbac:	bl	47f8c <__assert_fail@plt+0x353d4>
   3fbb0:	b	47060 <__assert_fail@plt+0x344a8>
   3fbb4:	b	3fbb8 <__assert_fail@plt+0x2d000>
   3fbb8:	ldr	r0, [fp, #-576]	; 0xfffffdc0
   3fbbc:	cmp	r0, #0
   3fbc0:	beq	43db0 <__assert_fail@plt+0x311f8>
   3fbc4:	ldr	r0, [fp, #-580]	; 0xfffffdbc
   3fbc8:	cmp	r0, #0
   3fbcc:	bne	43db0 <__assert_fail@plt+0x311f8>
   3fbd0:	b	40878 <__assert_fail@plt+0x2dcc0>
   3fbd4:	b	3fbd8 <__assert_fail@plt+0x2d020>
   3fbd8:	b	3ff5c <__assert_fail@plt+0x2d3a4>
   3fbdc:	ldr	r0, [fp, #-728]	; 0xfffffd28
   3fbe0:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   3fbe4:	mov	r2, #0
   3fbe8:	subs	r3, r0, #1
   3fbec:	sbcs	ip, r1, #0
   3fbf0:	str	r0, [fp, #-1364]	; 0xfffffaac
   3fbf4:	str	r1, [fp, #-1368]	; 0xfffffaa8
   3fbf8:	str	ip, [fp, #-1372]	; 0xfffffaa4
   3fbfc:	str	r3, [fp, #-1376]	; 0xfffffaa0
   3fc00:	str	r2, [fp, #-1380]	; 0xfffffa9c
   3fc04:	blt	3fc24 <__assert_fail@plt+0x2d06c>
   3fc08:	b	3fc0c <__assert_fail@plt+0x2d054>
   3fc0c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   3fc10:	ldr	r1, [fp, #-720]	; 0xfffffd30
   3fc14:	cmp	r0, r1
   3fc18:	movw	r0, #0
   3fc1c:	movne	r0, #1
   3fc20:	str	r0, [fp, #-1380]	; 0xfffffa9c
   3fc24:	ldr	r0, [fp, #-1380]	; 0xfffffa9c
   3fc28:	and	r0, r0, #1
   3fc2c:	ldr	r1, [fp, #-1364]	; 0xfffffaac
   3fc30:	subs	r0, r1, r0
   3fc34:	ldr	r2, [fp, #-1368]	; 0xfffffaa8
   3fc38:	sbc	r3, r2, #0
   3fc3c:	cmn	r3, #1
   3fc40:	str	r0, [fp, #-1384]	; 0xfffffa98
   3fc44:	bgt	3fd50 <__assert_fail@plt+0x2d198>
   3fc48:	b	3fc4c <__assert_fail@plt+0x2d094>
   3fc4c:	b	3fc50 <__assert_fail@plt+0x2d098>
   3fc50:	ldr	r0, [fp, #-728]	; 0xfffffd28
   3fc54:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   3fc58:	mov	r2, #0
   3fc5c:	subs	r3, r0, #1
   3fc60:	sbcs	ip, r1, #0
   3fc64:	str	r0, [fp, #-1388]	; 0xfffffa94
   3fc68:	str	r1, [fp, #-1392]	; 0xfffffa90
   3fc6c:	str	ip, [fp, #-1396]	; 0xfffffa8c
   3fc70:	str	r3, [fp, #-1400]	; 0xfffffa88
   3fc74:	str	r2, [fp, #-1404]	; 0xfffffa84
   3fc78:	blt	3fc98 <__assert_fail@plt+0x2d0e0>
   3fc7c:	b	3fc80 <__assert_fail@plt+0x2d0c8>
   3fc80:	ldr	r0, [fp, #-52]	; 0xffffffcc
   3fc84:	ldr	r1, [fp, #-720]	; 0xfffffd30
   3fc88:	cmp	r0, r1
   3fc8c:	movw	r0, #0
   3fc90:	movne	r0, #1
   3fc94:	str	r0, [fp, #-1404]	; 0xfffffa84
   3fc98:	ldr	r0, [fp, #-1404]	; 0xfffffa84
   3fc9c:	and	r0, r0, #1
   3fca0:	ldr	r1, [fp, #-1388]	; 0xfffffa94
   3fca4:	subs	r0, r1, r0
   3fca8:	ldr	r2, [fp, #-1392]	; 0xfffffa90
   3fcac:	sbc	r3, r2, #0
   3fcb0:	subs	r0, r0, #18
   3fcb4:	sbcs	r3, r3, #0
   3fcb8:	str	r0, [fp, #-1408]	; 0xfffffa80
   3fcbc:	str	r3, [fp, #-1412]	; 0xfffffa7c
   3fcc0:	blt	40158 <__assert_fail@plt+0x2d5a0>
   3fcc4:	b	401c4 <__assert_fail@plt+0x2d60c>
   3fcc8:	ldr	r0, [fp, #-728]	; 0xfffffd28
   3fccc:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   3fcd0:	mov	r2, #0
   3fcd4:	subs	r3, r0, #1
   3fcd8:	sbcs	ip, r1, #0
   3fcdc:	str	r0, [fp, #-1416]	; 0xfffffa78
   3fce0:	str	r1, [fp, #-1420]	; 0xfffffa74
   3fce4:	str	ip, [fp, #-1424]	; 0xfffffa70
   3fce8:	str	r3, [fp, #-1428]	; 0xfffffa6c
   3fcec:	str	r2, [fp, #-1432]	; 0xfffffa68
   3fcf0:	blt	3fd10 <__assert_fail@plt+0x2d158>
   3fcf4:	b	3fcf8 <__assert_fail@plt+0x2d140>
   3fcf8:	ldr	r0, [fp, #-52]	; 0xffffffcc
   3fcfc:	ldr	r1, [fp, #-720]	; 0xfffffd30
   3fd00:	cmp	r0, r1
   3fd04:	movw	r0, #0
   3fd08:	movne	r0, #1
   3fd0c:	str	r0, [fp, #-1432]	; 0xfffffa68
   3fd10:	ldr	r0, [fp, #-1432]	; 0xfffffa68
   3fd14:	and	r0, r0, #1
   3fd18:	ldr	r1, [fp, #-1416]	; 0xfffffa78
   3fd1c:	subs	r0, r1, r0
   3fd20:	ldr	r2, [fp, #-1420]	; 0xfffffa74
   3fd24:	sbc	r3, r2, #0
   3fd28:	mvn	r3, r3
   3fd2c:	mvn	r0, r0
   3fd30:	mvn	ip, #18
   3fd34:	subs	r0, ip, r0
   3fd38:	mvn	ip, #0
   3fd3c:	sbcs	r3, ip, r3
   3fd40:	str	r0, [fp, #-1436]	; 0xfffffa64
   3fd44:	str	r3, [fp, #-1440]	; 0xfffffa60
   3fd48:	blt	40158 <__assert_fail@plt+0x2d5a0>
   3fd4c:	b	401c4 <__assert_fail@plt+0x2d60c>
   3fd50:	b	3fd54 <__assert_fail@plt+0x2d19c>
   3fd54:	b	3fedc <__assert_fail@plt+0x2d324>
   3fd58:	b	3fedc <__assert_fail@plt+0x2d324>
   3fd5c:	b	3fedc <__assert_fail@plt+0x2d324>
   3fd60:	b	3fd64 <__assert_fail@plt+0x2d1ac>
   3fd64:	ldr	r0, [fp, #-728]	; 0xfffffd28
   3fd68:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   3fd6c:	mov	r2, #0
   3fd70:	subs	r3, r0, #1
   3fd74:	sbcs	ip, r1, #0
   3fd78:	str	r0, [fp, #-1444]	; 0xfffffa5c
   3fd7c:	str	r1, [fp, #-1448]	; 0xfffffa58
   3fd80:	str	ip, [fp, #-1452]	; 0xfffffa54
   3fd84:	str	r3, [fp, #-1456]	; 0xfffffa50
   3fd88:	str	r2, [fp, #-1460]	; 0xfffffa4c
   3fd8c:	blt	3fdac <__assert_fail@plt+0x2d1f4>
   3fd90:	b	3fd94 <__assert_fail@plt+0x2d1dc>
   3fd94:	ldr	r0, [fp, #-52]	; 0xffffffcc
   3fd98:	ldr	r1, [fp, #-720]	; 0xfffffd30
   3fd9c:	cmp	r0, r1
   3fda0:	movw	r0, #0
   3fda4:	movne	r0, #1
   3fda8:	str	r0, [fp, #-1460]	; 0xfffffa4c
   3fdac:	ldr	r0, [fp, #-1460]	; 0xfffffa4c
   3fdb0:	and	r0, r0, #1
   3fdb4:	ldr	r1, [fp, #-1444]	; 0xfffffa5c
   3fdb8:	subs	r0, r1, r0
   3fdbc:	ldr	r2, [fp, #-1448]	; 0xfffffa58
   3fdc0:	sbc	r3, r2, #0
   3fdc4:	subs	r0, r0, #128	; 0x80
   3fdc8:	sbc	r3, r3, #0
   3fdcc:	rsbs	r0, r0, #0
   3fdd0:	rscs	r3, r3, #0
   3fdd4:	str	r0, [fp, #-1464]	; 0xfffffa48
   3fdd8:	str	r3, [fp, #-1468]	; 0xfffffa44
   3fddc:	blt	40158 <__assert_fail@plt+0x2d5a0>
   3fde0:	b	401c4 <__assert_fail@plt+0x2d60c>
   3fde4:	ldr	r0, [fp, #-728]	; 0xfffffd28
   3fde8:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   3fdec:	mov	r2, #0
   3fdf0:	subs	r3, r0, #1
   3fdf4:	sbcs	ip, r1, #0
   3fdf8:	str	r0, [fp, #-1472]	; 0xfffffa40
   3fdfc:	str	r1, [fp, #-1476]	; 0xfffffa3c
   3fe00:	str	ip, [fp, #-1480]	; 0xfffffa38
   3fe04:	str	r3, [fp, #-1484]	; 0xfffffa34
   3fe08:	str	r2, [fp, #-1488]	; 0xfffffa30
   3fe0c:	blt	3fe2c <__assert_fail@plt+0x2d274>
   3fe10:	b	3fe14 <__assert_fail@plt+0x2d25c>
   3fe14:	ldr	r0, [fp, #-52]	; 0xffffffcc
   3fe18:	ldr	r1, [fp, #-720]	; 0xfffffd30
   3fe1c:	cmp	r0, r1
   3fe20:	movw	r0, #0
   3fe24:	movne	r0, #1
   3fe28:	str	r0, [fp, #-1488]	; 0xfffffa30
   3fe2c:	ldr	r0, [fp, #-1488]	; 0xfffffa30
   3fe30:	and	r0, r0, #1
   3fe34:	ldr	r1, [fp, #-1472]	; 0xfffffa40
   3fe38:	subs	r0, r1, r0
   3fe3c:	ldr	r2, [fp, #-1476]	; 0xfffffa3c
   3fe40:	sbc	r3, r2, #0
   3fe44:	subs	r0, r0, #1
   3fe48:	sbcs	r3, r3, #0
   3fe4c:	str	r0, [fp, #-1492]	; 0xfffffa2c
   3fe50:	str	r3, [fp, #-1496]	; 0xfffffa28
   3fe54:	blt	401c4 <__assert_fail@plt+0x2d60c>
   3fe58:	b	3fe5c <__assert_fail@plt+0x2d2a4>
   3fe5c:	ldr	r0, [fp, #-728]	; 0xfffffd28
   3fe60:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   3fe64:	mov	r2, #0
   3fe68:	subs	r3, r0, #1
   3fe6c:	sbcs	ip, r1, #0
   3fe70:	str	r0, [fp, #-1500]	; 0xfffffa24
   3fe74:	str	r1, [fp, #-1504]	; 0xfffffa20
   3fe78:	str	ip, [fp, #-1508]	; 0xfffffa1c
   3fe7c:	str	r3, [fp, #-1512]	; 0xfffffa18
   3fe80:	str	r2, [fp, #-1516]	; 0xfffffa14
   3fe84:	blt	3fea4 <__assert_fail@plt+0x2d2ec>
   3fe88:	b	3fe8c <__assert_fail@plt+0x2d2d4>
   3fe8c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   3fe90:	ldr	r1, [fp, #-720]	; 0xfffffd30
   3fe94:	cmp	r0, r1
   3fe98:	movw	r0, #0
   3fe9c:	movne	r0, #1
   3fea0:	str	r0, [fp, #-1516]	; 0xfffffa14
   3fea4:	ldr	r0, [fp, #-1516]	; 0xfffffa14
   3fea8:	and	r0, r0, #1
   3feac:	ldr	r1, [fp, #-1500]	; 0xfffffa24
   3feb0:	subs	r0, r1, r0
   3feb4:	ldr	r2, [fp, #-1504]	; 0xfffffa20
   3feb8:	sbc	r3, r2, #0
   3febc:	subs	r0, r0, #1
   3fec0:	sbc	r3, r3, #0
   3fec4:	rsbs	r0, r0, #127	; 0x7f
   3fec8:	rscs	r3, r3, #0
   3fecc:	str	r0, [fp, #-1520]	; 0xfffffa10
   3fed0:	str	r3, [fp, #-1524]	; 0xfffffa0c
   3fed4:	blt	40158 <__assert_fail@plt+0x2d5a0>
   3fed8:	b	401c4 <__assert_fail@plt+0x2d60c>
   3fedc:	ldr	r0, [fp, #-728]	; 0xfffffd28
   3fee0:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   3fee4:	mov	r2, #0
   3fee8:	subs	r3, r0, #1
   3feec:	sbcs	ip, r1, #0
   3fef0:	str	r0, [fp, #-1528]	; 0xfffffa08
   3fef4:	str	r1, [fp, #-1532]	; 0xfffffa04
   3fef8:	str	ip, [fp, #-1536]	; 0xfffffa00
   3fefc:	str	r3, [fp, #-1540]	; 0xfffff9fc
   3ff00:	str	r2, [fp, #-1544]	; 0xfffff9f8
   3ff04:	blt	3ff24 <__assert_fail@plt+0x2d36c>
   3ff08:	b	3ff0c <__assert_fail@plt+0x2d354>
   3ff0c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   3ff10:	ldr	r1, [fp, #-720]	; 0xfffffd30
   3ff14:	cmp	r0, r1
   3ff18:	movw	r0, #0
   3ff1c:	movne	r0, #1
   3ff20:	str	r0, [fp, #-1544]	; 0xfffff9f8
   3ff24:	ldr	r0, [fp, #-1544]	; 0xfffff9f8
   3ff28:	and	r0, r0, #1
   3ff2c:	ldr	r1, [fp, #-1528]	; 0xfffffa08
   3ff30:	subs	r0, r1, r0
   3ff34:	ldr	r2, [fp, #-1532]	; 0xfffffa04
   3ff38:	sbc	r3, r2, #0
   3ff3c:	mvn	ip, #17
   3ff40:	subs	r0, ip, r0
   3ff44:	mvn	ip, #0
   3ff48:	sbcs	r3, ip, r3
   3ff4c:	str	r0, [fp, #-1548]	; 0xfffff9f4
   3ff50:	str	r3, [fp, #-1552]	; 0xfffff9f0
   3ff54:	blt	40158 <__assert_fail@plt+0x2d5a0>
   3ff58:	b	401c4 <__assert_fail@plt+0x2d60c>
   3ff5c:	b	3ff64 <__assert_fail@plt+0x2d3ac>
   3ff60:	b	401c4 <__assert_fail@plt+0x2d60c>
   3ff64:	ldr	r0, [fp, #-728]	; 0xfffffd28
   3ff68:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   3ff6c:	mov	r2, #0
   3ff70:	subs	r3, r0, #1
   3ff74:	sbcs	ip, r1, #0
   3ff78:	str	r0, [fp, #-1556]	; 0xfffff9ec
   3ff7c:	str	r1, [fp, #-1560]	; 0xfffff9e8
   3ff80:	str	ip, [fp, #-1564]	; 0xfffff9e4
   3ff84:	str	r3, [fp, #-1568]	; 0xfffff9e0
   3ff88:	str	r2, [fp, #-1572]	; 0xfffff9dc
   3ff8c:	blt	3ffac <__assert_fail@plt+0x2d3f4>
   3ff90:	b	3ff94 <__assert_fail@plt+0x2d3dc>
   3ff94:	ldr	r0, [fp, #-52]	; 0xffffffcc
   3ff98:	ldr	r1, [fp, #-720]	; 0xfffffd30
   3ff9c:	cmp	r0, r1
   3ffa0:	movw	r0, #0
   3ffa4:	movne	r0, #1
   3ffa8:	str	r0, [fp, #-1572]	; 0xfffff9dc
   3ffac:	ldr	r0, [fp, #-1572]	; 0xfffff9dc
   3ffb0:	and	r0, r0, #1
   3ffb4:	ldr	r1, [fp, #-1556]	; 0xfffff9ec
   3ffb8:	subs	r0, r1, r0
   3ffbc:	ldr	r2, [fp, #-1560]	; 0xfffff9e8
   3ffc0:	sbc	r3, r2, #0
   3ffc4:	cmn	r3, #1
   3ffc8:	str	r0, [fp, #-1576]	; 0xfffff9d8
   3ffcc:	bgt	400e0 <__assert_fail@plt+0x2d528>
   3ffd0:	b	3ffd4 <__assert_fail@plt+0x2d41c>
   3ffd4:	b	3ffd8 <__assert_fail@plt+0x2d420>
   3ffd8:	b	4005c <__assert_fail@plt+0x2d4a4>
   3ffdc:	b	4005c <__assert_fail@plt+0x2d4a4>
   3ffe0:	ldr	r0, [fp, #-728]	; 0xfffffd28
   3ffe4:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   3ffe8:	mov	r2, #0
   3ffec:	subs	r3, r0, #1
   3fff0:	sbcs	ip, r1, #0
   3fff4:	str	r0, [fp, #-1580]	; 0xfffff9d4
   3fff8:	str	r1, [fp, #-1584]	; 0xfffff9d0
   3fffc:	str	ip, [fp, #-1588]	; 0xfffff9cc
   40000:	str	r3, [fp, #-1592]	; 0xfffff9c8
   40004:	str	r2, [fp, #-1596]	; 0xfffff9c4
   40008:	blt	40028 <__assert_fail@plt+0x2d470>
   4000c:	b	40010 <__assert_fail@plt+0x2d458>
   40010:	ldr	r0, [fp, #-52]	; 0xffffffcc
   40014:	ldr	r1, [fp, #-720]	; 0xfffffd30
   40018:	cmp	r0, r1
   4001c:	movw	r0, #0
   40020:	movne	r0, #1
   40024:	str	r0, [fp, #-1596]	; 0xfffff9c4
   40028:	ldr	r0, [fp, #-1596]	; 0xfffff9c4
   4002c:	and	r0, r0, #1
   40030:	ldr	r1, [fp, #-1580]	; 0xfffff9d4
   40034:	subs	r0, r1, r0
   40038:	ldr	r2, [fp, #-1584]	; 0xfffff9d0
   4003c:	sbc	r3, r2, #0
   40040:	and	r0, r0, r3
   40044:	cmn	r0, #1
   40048:	bne	4005c <__assert_fail@plt+0x2d4a4>
   4004c:	b	40050 <__assert_fail@plt+0x2d498>
   40050:	b	40054 <__assert_fail@plt+0x2d49c>
   40054:	b	401c4 <__assert_fail@plt+0x2d60c>
   40058:	b	401c4 <__assert_fail@plt+0x2d60c>
   4005c:	ldr	r0, [fp, #-728]	; 0xfffffd28
   40060:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   40064:	mov	r2, #0
   40068:	subs	r3, r0, #1
   4006c:	sbcs	ip, r1, #0
   40070:	str	r0, [fp, #-1600]	; 0xfffff9c0
   40074:	str	r1, [fp, #-1604]	; 0xfffff9bc
   40078:	str	ip, [fp, #-1608]	; 0xfffff9b8
   4007c:	str	r3, [fp, #-1612]	; 0xfffff9b4
   40080:	str	r2, [fp, #-1616]	; 0xfffff9b0
   40084:	blt	400a4 <__assert_fail@plt+0x2d4ec>
   40088:	b	4008c <__assert_fail@plt+0x2d4d4>
   4008c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   40090:	ldr	r1, [fp, #-720]	; 0xfffffd30
   40094:	cmp	r0, r1
   40098:	movw	r0, #0
   4009c:	movne	r0, #1
   400a0:	str	r0, [fp, #-1616]	; 0xfffff9b0
   400a4:	ldr	r0, [fp, #-1616]	; 0xfffff9b0
   400a8:	and	r0, r0, #1
   400ac:	ldr	r1, [fp, #-1600]	; 0xfffff9c0
   400b0:	subs	r2, r1, r0
   400b4:	ldr	r0, [fp, #-1604]	; 0xfffff9bc
   400b8:	sbc	r3, r0, #0
   400bc:	mvn	r0, #127	; 0x7f
   400c0:	mvn	r1, #0
   400c4:	bl	77780 <__assert_fail@plt+0x64bc8>
   400c8:	subs	r0, r0, #7
   400cc:	sbcs	r1, r1, #0
   400d0:	str	r0, [fp, #-1620]	; 0xfffff9ac
   400d4:	str	r1, [fp, #-1624]	; 0xfffff9a8
   400d8:	blt	40158 <__assert_fail@plt+0x2d5a0>
   400dc:	b	401c4 <__assert_fail@plt+0x2d60c>
   400e0:	ldr	r0, [fp, #-728]	; 0xfffffd28
   400e4:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   400e8:	mov	r2, #0
   400ec:	subs	r3, r0, #1
   400f0:	sbcs	ip, r1, #0
   400f4:	str	r0, [fp, #-1628]	; 0xfffff9a4
   400f8:	str	r1, [fp, #-1632]	; 0xfffff9a0
   400fc:	str	ip, [fp, #-1636]	; 0xfffff99c
   40100:	str	r3, [fp, #-1640]	; 0xfffff998
   40104:	str	r2, [fp, #-1644]	; 0xfffff994
   40108:	blt	40128 <__assert_fail@plt+0x2d570>
   4010c:	b	40110 <__assert_fail@plt+0x2d558>
   40110:	ldr	r0, [fp, #-52]	; 0xffffffcc
   40114:	ldr	r1, [fp, #-720]	; 0xfffffd30
   40118:	cmp	r0, r1
   4011c:	movw	r0, #0
   40120:	movne	r0, #1
   40124:	str	r0, [fp, #-1644]	; 0xfffff994
   40128:	ldr	r0, [fp, #-1644]	; 0xfffff994
   4012c:	and	r0, r0, #1
   40130:	ldr	r1, [fp, #-1628]	; 0xfffff9a4
   40134:	subs	r0, r1, r0
   40138:	ldr	r2, [fp, #-1632]	; 0xfffff9a0
   4013c:	sbc	r3, r2, #0
   40140:	subs	r0, r0, #19
   40144:	sbcs	r3, r3, #0
   40148:	str	r0, [fp, #-1648]	; 0xfffff990
   4014c:	str	r3, [fp, #-1652]	; 0xfffff98c
   40150:	blt	401c4 <__assert_fail@plt+0x2d60c>
   40154:	b	40158 <__assert_fail@plt+0x2d5a0>
   40158:	ldr	r0, [fp, #-728]	; 0xfffffd28
   4015c:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   40160:	mov	r2, #0
   40164:	subs	r3, r0, #1
   40168:	sbcs	r1, r1, #0
   4016c:	str	r0, [fp, #-1656]	; 0xfffff988
   40170:	str	r3, [fp, #-1660]	; 0xfffff984
   40174:	str	r1, [fp, #-1664]	; 0xfffff980
   40178:	str	r2, [fp, #-1668]	; 0xfffff97c
   4017c:	blt	4019c <__assert_fail@plt+0x2d5e4>
   40180:	b	40184 <__assert_fail@plt+0x2d5cc>
   40184:	ldr	r0, [fp, #-52]	; 0xffffffcc
   40188:	ldr	r1, [fp, #-720]	; 0xfffffd30
   4018c:	cmp	r0, r1
   40190:	movw	r0, #0
   40194:	movne	r0, #1
   40198:	str	r0, [fp, #-1668]	; 0xfffff97c
   4019c:	ldr	r0, [fp, #-1668]	; 0xfffff97c
   401a0:	and	r0, r0, #1
   401a4:	ldr	r1, [fp, #-1656]	; 0xfffff988
   401a8:	sub	r0, r1, r0
   401ac:	rsb	r0, r0, r0, lsl #3
   401b0:	sxtb	r0, r0
   401b4:	asr	r2, r0, #31
   401b8:	str	r0, [fp, #-936]	; 0xfffffc58
   401bc:	str	r2, [fp, #-932]	; 0xfffffc5c
   401c0:	b	43c6c <__assert_fail@plt+0x310b4>
   401c4:	ldr	r0, [fp, #-728]	; 0xfffffd28
   401c8:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   401cc:	mov	r2, #0
   401d0:	subs	r3, r0, #1
   401d4:	sbcs	r1, r1, #0
   401d8:	str	r0, [fp, #-1672]	; 0xfffff978
   401dc:	str	r3, [fp, #-1676]	; 0xfffff974
   401e0:	str	r1, [fp, #-1680]	; 0xfffff970
   401e4:	str	r2, [fp, #-1684]	; 0xfffff96c
   401e8:	blt	40208 <__assert_fail@plt+0x2d650>
   401ec:	b	401f0 <__assert_fail@plt+0x2d638>
   401f0:	ldr	r0, [fp, #-52]	; 0xffffffcc
   401f4:	ldr	r1, [fp, #-720]	; 0xfffffd30
   401f8:	cmp	r0, r1
   401fc:	movw	r0, #0
   40200:	movne	r0, #1
   40204:	str	r0, [fp, #-1684]	; 0xfffff96c
   40208:	ldr	r0, [fp, #-1684]	; 0xfffff96c
   4020c:	and	r0, r0, #1
   40210:	ldr	r1, [fp, #-1672]	; 0xfffff978
   40214:	sub	r0, r1, r0
   40218:	rsb	r0, r0, r0, lsl #3
   4021c:	sxtb	r0, r0
   40220:	asr	r2, r0, #31
   40224:	str	r0, [fp, #-936]	; 0xfffffc58
   40228:	str	r2, [fp, #-932]	; 0xfffffc5c
   4022c:	b	43b68 <__assert_fail@plt+0x30fb0>
   40230:	b	405a0 <__assert_fail@plt+0x2d9e8>
   40234:	ldr	r0, [fp, #-728]	; 0xfffffd28
   40238:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   4023c:	mov	r2, #0
   40240:	subs	r3, r0, #1
   40244:	sbcs	ip, r1, #0
   40248:	str	r0, [fp, #-1688]	; 0xfffff968
   4024c:	str	r1, [fp, #-1692]	; 0xfffff964
   40250:	str	ip, [fp, #-1696]	; 0xfffff960
   40254:	str	r3, [fp, #-1700]	; 0xfffff95c
   40258:	str	r2, [fp, #-1704]	; 0xfffff958
   4025c:	blt	40280 <__assert_fail@plt+0x2d6c8>
   40260:	b	40268 <__assert_fail@plt+0x2d6b0>
   40264:	rsbseq	sl, r6, r0, lsl #14
   40268:	ldr	r0, [fp, #-52]	; 0xffffffcc
   4026c:	ldr	r1, [fp, #-720]	; 0xfffffd30
   40270:	cmp	r0, r1
   40274:	movw	r0, #0
   40278:	movne	r0, #1
   4027c:	str	r0, [fp, #-1704]	; 0xfffff958
   40280:	ldr	r0, [fp, #-1704]	; 0xfffff958
   40284:	and	r0, r0, #1
   40288:	ldr	r1, [fp, #-1688]	; 0xfffff968
   4028c:	subs	r0, r1, r0
   40290:	ldr	r2, [fp, #-1692]	; 0xfffff964
   40294:	sbc	r3, r2, #0
   40298:	cmn	r3, #1
   4029c:	str	r0, [fp, #-1708]	; 0xfffff954
   402a0:	bgt	403ac <__assert_fail@plt+0x2d7f4>
   402a4:	b	402a8 <__assert_fail@plt+0x2d6f0>
   402a8:	b	402ac <__assert_fail@plt+0x2d6f4>
   402ac:	ldr	r0, [fp, #-728]	; 0xfffffd28
   402b0:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   402b4:	mov	r2, #0
   402b8:	subs	r3, r0, #1
   402bc:	sbcs	ip, r1, #0
   402c0:	str	r0, [fp, #-1712]	; 0xfffff950
   402c4:	str	r1, [fp, #-1716]	; 0xfffff94c
   402c8:	str	ip, [fp, #-1720]	; 0xfffff948
   402cc:	str	r3, [fp, #-1724]	; 0xfffff944
   402d0:	str	r2, [fp, #-1728]	; 0xfffff940
   402d4:	blt	402f4 <__assert_fail@plt+0x2d73c>
   402d8:	b	402dc <__assert_fail@plt+0x2d724>
   402dc:	ldr	r0, [fp, #-52]	; 0xffffffcc
   402e0:	ldr	r1, [fp, #-720]	; 0xfffffd30
   402e4:	cmp	r0, r1
   402e8:	movw	r0, #0
   402ec:	movne	r0, #1
   402f0:	str	r0, [fp, #-1728]	; 0xfffff940
   402f4:	ldr	r0, [fp, #-1728]	; 0xfffff940
   402f8:	and	r0, r0, #1
   402fc:	ldr	r1, [fp, #-1712]	; 0xfffff950
   40300:	subs	r0, r1, r0
   40304:	ldr	r2, [fp, #-1716]	; 0xfffff94c
   40308:	sbc	r3, r2, #0
   4030c:	subs	r0, r0, #36	; 0x24
   40310:	sbcs	r3, r3, #0
   40314:	str	r0, [fp, #-1732]	; 0xfffff93c
   40318:	str	r3, [fp, #-1736]	; 0xfffff938
   4031c:	blt	407a0 <__assert_fail@plt+0x2dbe8>
   40320:	b	4080c <__assert_fail@plt+0x2dc54>
   40324:	ldr	r0, [fp, #-728]	; 0xfffffd28
   40328:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   4032c:	mov	r2, #0
   40330:	subs	r3, r0, #1
   40334:	sbcs	ip, r1, #0
   40338:	str	r0, [fp, #-1740]	; 0xfffff934
   4033c:	str	r1, [fp, #-1744]	; 0xfffff930
   40340:	str	ip, [fp, #-1748]	; 0xfffff92c
   40344:	str	r3, [fp, #-1752]	; 0xfffff928
   40348:	str	r2, [fp, #-1756]	; 0xfffff924
   4034c:	blt	4036c <__assert_fail@plt+0x2d7b4>
   40350:	b	40354 <__assert_fail@plt+0x2d79c>
   40354:	ldr	r0, [fp, #-52]	; 0xffffffcc
   40358:	ldr	r1, [fp, #-720]	; 0xfffffd30
   4035c:	cmp	r0, r1
   40360:	movw	r0, #0
   40364:	movne	r0, #1
   40368:	str	r0, [fp, #-1756]	; 0xfffff924
   4036c:	ldr	r0, [fp, #-1756]	; 0xfffff924
   40370:	and	r0, r0, #1
   40374:	ldr	r1, [fp, #-1740]	; 0xfffff934
   40378:	subs	r0, r1, r0
   4037c:	ldr	r2, [fp, #-1744]	; 0xfffff930
   40380:	sbc	r3, r2, #0
   40384:	mvn	r3, r3
   40388:	mvn	r0, r0
   4038c:	mvn	ip, #36	; 0x24
   40390:	subs	r0, ip, r0
   40394:	mvn	ip, #0
   40398:	sbcs	r3, ip, r3
   4039c:	str	r0, [fp, #-1760]	; 0xfffff920
   403a0:	str	r3, [fp, #-1764]	; 0xfffff91c
   403a4:	blt	407a0 <__assert_fail@plt+0x2dbe8>
   403a8:	b	4080c <__assert_fail@plt+0x2dc54>
   403ac:	b	403b0 <__assert_fail@plt+0x2d7f8>
   403b0:	b	40528 <__assert_fail@plt+0x2d970>
   403b4:	b	40528 <__assert_fail@plt+0x2d970>
   403b8:	b	40528 <__assert_fail@plt+0x2d970>
   403bc:	b	403c0 <__assert_fail@plt+0x2d808>
   403c0:	ldr	r0, [fp, #-728]	; 0xfffffd28
   403c4:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   403c8:	mov	r2, #0
   403cc:	subs	r3, r0, #1
   403d0:	sbcs	ip, r1, #0
   403d4:	str	r0, [fp, #-1768]	; 0xfffff918
   403d8:	str	r1, [fp, #-1772]	; 0xfffff914
   403dc:	str	ip, [fp, #-1776]	; 0xfffff910
   403e0:	str	r3, [fp, #-1780]	; 0xfffff90c
   403e4:	str	r2, [fp, #-1784]	; 0xfffff908
   403e8:	blt	40408 <__assert_fail@plt+0x2d850>
   403ec:	b	403f0 <__assert_fail@plt+0x2d838>
   403f0:	ldr	r0, [fp, #-52]	; 0xffffffcc
   403f4:	ldr	r1, [fp, #-720]	; 0xfffffd30
   403f8:	cmp	r0, r1
   403fc:	movw	r0, #0
   40400:	movne	r0, #1
   40404:	str	r0, [fp, #-1784]	; 0xfffff908
   40408:	ldr	r0, [fp, #-1784]	; 0xfffff908
   4040c:	and	r0, r0, #1
   40410:	ldr	r1, [fp, #-1768]	; 0xfffff918
   40414:	subs	r0, r1, r0
   40418:	ldr	r2, [fp, #-1772]	; 0xfffff914
   4041c:	sbc	r3, r2, #0
   40420:	rsbs	r0, r0, #0
   40424:	rscs	r3, r3, #0
   40428:	str	r0, [fp, #-1788]	; 0xfffff904
   4042c:	str	r3, [fp, #-1792]	; 0xfffff900
   40430:	blt	407a0 <__assert_fail@plt+0x2dbe8>
   40434:	b	4080c <__assert_fail@plt+0x2dc54>
   40438:	ldr	r0, [fp, #-728]	; 0xfffffd28
   4043c:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   40440:	mov	r2, #0
   40444:	subs	r3, r0, #1
   40448:	sbcs	ip, r1, #0
   4044c:	str	r0, [fp, #-1796]	; 0xfffff8fc
   40450:	str	r1, [fp, #-1800]	; 0xfffff8f8
   40454:	str	ip, [fp, #-1804]	; 0xfffff8f4
   40458:	str	r3, [fp, #-1808]	; 0xfffff8f0
   4045c:	str	r2, [fp, #-1812]	; 0xfffff8ec
   40460:	blt	40480 <__assert_fail@plt+0x2d8c8>
   40464:	b	40468 <__assert_fail@plt+0x2d8b0>
   40468:	ldr	r0, [fp, #-52]	; 0xffffffcc
   4046c:	ldr	r1, [fp, #-720]	; 0xfffffd30
   40470:	cmp	r0, r1
   40474:	movw	r0, #0
   40478:	movne	r0, #1
   4047c:	str	r0, [fp, #-1812]	; 0xfffff8ec
   40480:	ldr	r0, [fp, #-1812]	; 0xfffff8ec
   40484:	and	r0, r0, #1
   40488:	ldr	r1, [fp, #-1796]	; 0xfffff8fc
   4048c:	subs	r0, r1, r0
   40490:	ldr	r2, [fp, #-1800]	; 0xfffff8f8
   40494:	sbc	r3, r2, #0
   40498:	subs	r0, r0, #1
   4049c:	sbcs	r3, r3, #0
   404a0:	str	r0, [fp, #-1816]	; 0xfffff8e8
   404a4:	str	r3, [fp, #-1820]	; 0xfffff8e4
   404a8:	blt	4080c <__assert_fail@plt+0x2dc54>
   404ac:	b	404b0 <__assert_fail@plt+0x2d8f8>
   404b0:	ldr	r0, [fp, #-728]	; 0xfffffd28
   404b4:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   404b8:	mov	r2, #0
   404bc:	subs	r3, r0, #1
   404c0:	sbcs	ip, r1, #0
   404c4:	str	r0, [fp, #-1824]	; 0xfffff8e0
   404c8:	str	r1, [fp, #-1828]	; 0xfffff8dc
   404cc:	str	ip, [fp, #-1832]	; 0xfffff8d8
   404d0:	str	r3, [fp, #-1836]	; 0xfffff8d4
   404d4:	str	r2, [fp, #-1840]	; 0xfffff8d0
   404d8:	blt	404f8 <__assert_fail@plt+0x2d940>
   404dc:	b	404e0 <__assert_fail@plt+0x2d928>
   404e0:	ldr	r0, [fp, #-52]	; 0xffffffcc
   404e4:	ldr	r1, [fp, #-720]	; 0xfffffd30
   404e8:	cmp	r0, r1
   404ec:	movw	r0, #0
   404f0:	movne	r0, #1
   404f4:	str	r0, [fp, #-1840]	; 0xfffff8d0
   404f8:	ldr	r0, [fp, #-1840]	; 0xfffff8d0
   404fc:	and	r0, r0, #1
   40500:	ldr	r1, [fp, #-1824]	; 0xfffff8e0
   40504:	subs	r0, r1, r0
   40508:	ldr	r2, [fp, #-1828]	; 0xfffff8dc
   4050c:	sbc	r3, r2, #0
   40510:	subs	r0, r0, #1
   40514:	sbc	r3, r3, #0
   40518:	cmn	r3, #1
   4051c:	str	r0, [fp, #-1844]	; 0xfffff8cc
   40520:	bgt	407a0 <__assert_fail@plt+0x2dbe8>
   40524:	b	4080c <__assert_fail@plt+0x2dc54>
   40528:	ldr	r0, [fp, #-728]	; 0xfffffd28
   4052c:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   40530:	mov	r2, #0
   40534:	subs	r3, r0, #1
   40538:	sbcs	ip, r1, #0
   4053c:	str	r0, [fp, #-1848]	; 0xfffff8c8
   40540:	str	r1, [fp, #-1852]	; 0xfffff8c4
   40544:	str	ip, [fp, #-1856]	; 0xfffff8c0
   40548:	str	r3, [fp, #-1860]	; 0xfffff8bc
   4054c:	str	r2, [fp, #-1864]	; 0xfffff8b8
   40550:	blt	40570 <__assert_fail@plt+0x2d9b8>
   40554:	b	40558 <__assert_fail@plt+0x2d9a0>
   40558:	ldr	r0, [fp, #-52]	; 0xffffffcc
   4055c:	ldr	r1, [fp, #-720]	; 0xfffffd30
   40560:	cmp	r0, r1
   40564:	movw	r0, #0
   40568:	movne	r0, #1
   4056c:	str	r0, [fp, #-1864]	; 0xfffff8b8
   40570:	ldr	r0, [fp, #-1864]	; 0xfffff8b8
   40574:	and	r0, r0, #1
   40578:	ldr	r1, [fp, #-1848]	; 0xfffff8c8
   4057c:	subs	r0, r1, r0
   40580:	ldr	r2, [fp, #-1852]	; 0xfffff8c4
   40584:	sbc	r3, r2, #0
   40588:	rsbs	r0, r0, #0
   4058c:	rscs	r3, r3, #0
   40590:	str	r0, [fp, #-1868]	; 0xfffff8b4
   40594:	str	r3, [fp, #-1872]	; 0xfffff8b0
   40598:	blt	407a0 <__assert_fail@plt+0x2dbe8>
   4059c:	b	4080c <__assert_fail@plt+0x2dc54>
   405a0:	b	405a8 <__assert_fail@plt+0x2d9f0>
   405a4:	b	4080c <__assert_fail@plt+0x2dc54>
   405a8:	ldr	r0, [fp, #-728]	; 0xfffffd28
   405ac:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   405b0:	mov	r2, #0
   405b4:	subs	r3, r0, #1
   405b8:	sbcs	ip, r1, #0
   405bc:	str	r0, [fp, #-1876]	; 0xfffff8ac
   405c0:	str	r1, [fp, #-1880]	; 0xfffff8a8
   405c4:	str	ip, [fp, #-1884]	; 0xfffff8a4
   405c8:	str	r3, [fp, #-1888]	; 0xfffff8a0
   405cc:	str	r2, [fp, #-1892]	; 0xfffff89c
   405d0:	blt	405f0 <__assert_fail@plt+0x2da38>
   405d4:	b	405d8 <__assert_fail@plt+0x2da20>
   405d8:	ldr	r0, [fp, #-52]	; 0xffffffcc
   405dc:	ldr	r1, [fp, #-720]	; 0xfffffd30
   405e0:	cmp	r0, r1
   405e4:	movw	r0, #0
   405e8:	movne	r0, #1
   405ec:	str	r0, [fp, #-1892]	; 0xfffff89c
   405f0:	ldr	r0, [fp, #-1892]	; 0xfffff89c
   405f4:	and	r0, r0, #1
   405f8:	ldr	r1, [fp, #-1876]	; 0xfffff8ac
   405fc:	subs	r0, r1, r0
   40600:	ldr	r2, [fp, #-1880]	; 0xfffff8a8
   40604:	sbc	r3, r2, #0
   40608:	cmn	r3, #1
   4060c:	str	r0, [fp, #-1896]	; 0xfffff898
   40610:	bgt	40728 <__assert_fail@plt+0x2db70>
   40614:	b	40618 <__assert_fail@plt+0x2da60>
   40618:	b	4061c <__assert_fail@plt+0x2da64>
   4061c:	b	406a0 <__assert_fail@plt+0x2dae8>
   40620:	b	406a0 <__assert_fail@plt+0x2dae8>
   40624:	ldr	r0, [fp, #-728]	; 0xfffffd28
   40628:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   4062c:	mov	r2, #0
   40630:	subs	r3, r0, #1
   40634:	sbcs	ip, r1, #0
   40638:	str	r0, [fp, #-1900]	; 0xfffff894
   4063c:	str	r1, [fp, #-1904]	; 0xfffff890
   40640:	str	ip, [fp, #-1908]	; 0xfffff88c
   40644:	str	r3, [fp, #-1912]	; 0xfffff888
   40648:	str	r2, [fp, #-1916]	; 0xfffff884
   4064c:	blt	4066c <__assert_fail@plt+0x2dab4>
   40650:	b	40654 <__assert_fail@plt+0x2da9c>
   40654:	ldr	r0, [fp, #-52]	; 0xffffffcc
   40658:	ldr	r1, [fp, #-720]	; 0xfffffd30
   4065c:	cmp	r0, r1
   40660:	movw	r0, #0
   40664:	movne	r0, #1
   40668:	str	r0, [fp, #-1916]	; 0xfffff884
   4066c:	ldr	r0, [fp, #-1916]	; 0xfffff884
   40670:	and	r0, r0, #1
   40674:	ldr	r1, [fp, #-1900]	; 0xfffff894
   40678:	subs	r0, r1, r0
   4067c:	ldr	r2, [fp, #-1904]	; 0xfffff890
   40680:	sbc	r3, r2, #0
   40684:	and	r0, r0, r3
   40688:	cmn	r0, #1
   4068c:	bne	406a0 <__assert_fail@plt+0x2dae8>
   40690:	b	40694 <__assert_fail@plt+0x2dadc>
   40694:	b	40698 <__assert_fail@plt+0x2dae0>
   40698:	b	407a0 <__assert_fail@plt+0x2dbe8>
   4069c:	b	407a0 <__assert_fail@plt+0x2dbe8>
   406a0:	ldr	r0, [fp, #-728]	; 0xfffffd28
   406a4:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   406a8:	mov	r2, #0
   406ac:	subs	r3, r0, #1
   406b0:	sbcs	ip, r1, #0
   406b4:	str	r0, [fp, #-1920]	; 0xfffff880
   406b8:	str	r1, [fp, #-1924]	; 0xfffff87c
   406bc:	str	ip, [fp, #-1928]	; 0xfffff878
   406c0:	str	r3, [fp, #-1932]	; 0xfffff874
   406c4:	str	r2, [fp, #-1936]	; 0xfffff870
   406c8:	blt	406e8 <__assert_fail@plt+0x2db30>
   406cc:	b	406d0 <__assert_fail@plt+0x2db18>
   406d0:	ldr	r0, [fp, #-52]	; 0xffffffcc
   406d4:	ldr	r1, [fp, #-720]	; 0xfffffd30
   406d8:	cmp	r0, r1
   406dc:	movw	r0, #0
   406e0:	movne	r0, #1
   406e4:	str	r0, [fp, #-1936]	; 0xfffff870
   406e8:	ldr	r0, [fp, #-1936]	; 0xfffff870
   406ec:	and	r0, r0, #1
   406f0:	ldr	r1, [fp, #-1920]	; 0xfffff880
   406f4:	subs	r2, r1, r0
   406f8:	ldr	r0, [fp, #-1924]	; 0xfffff87c
   406fc:	sbc	r3, r0, #0
   40700:	mov	ip, #0
   40704:	mov	r0, ip
   40708:	mov	r1, ip
   4070c:	bl	77780 <__assert_fail@plt+0x64bc8>
   40710:	subs	r0, r0, #7
   40714:	sbcs	r1, r1, #0
   40718:	str	r0, [fp, #-1940]	; 0xfffff86c
   4071c:	str	r1, [fp, #-1944]	; 0xfffff868
   40720:	blt	407a0 <__assert_fail@plt+0x2dbe8>
   40724:	b	4080c <__assert_fail@plt+0x2dc54>
   40728:	ldr	r0, [fp, #-728]	; 0xfffffd28
   4072c:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   40730:	mov	r2, #0
   40734:	subs	r3, r0, #1
   40738:	sbcs	ip, r1, #0
   4073c:	str	r0, [fp, #-1948]	; 0xfffff864
   40740:	str	r1, [fp, #-1952]	; 0xfffff860
   40744:	str	ip, [fp, #-1956]	; 0xfffff85c
   40748:	str	r3, [fp, #-1960]	; 0xfffff858
   4074c:	str	r2, [fp, #-1964]	; 0xfffff854
   40750:	blt	40770 <__assert_fail@plt+0x2dbb8>
   40754:	b	40758 <__assert_fail@plt+0x2dba0>
   40758:	ldr	r0, [fp, #-52]	; 0xffffffcc
   4075c:	ldr	r1, [fp, #-720]	; 0xfffffd30
   40760:	cmp	r0, r1
   40764:	movw	r0, #0
   40768:	movne	r0, #1
   4076c:	str	r0, [fp, #-1964]	; 0xfffff854
   40770:	ldr	r0, [fp, #-1964]	; 0xfffff854
   40774:	and	r0, r0, #1
   40778:	ldr	r1, [fp, #-1948]	; 0xfffff864
   4077c:	subs	r0, r1, r0
   40780:	ldr	r2, [fp, #-1952]	; 0xfffff860
   40784:	sbc	r3, r2, #0
   40788:	subs	r0, r0, #37	; 0x25
   4078c:	sbcs	r3, r3, #0
   40790:	str	r0, [fp, #-1968]	; 0xfffff850
   40794:	str	r3, [fp, #-1972]	; 0xfffff84c
   40798:	blt	4080c <__assert_fail@plt+0x2dc54>
   4079c:	b	407a0 <__assert_fail@plt+0x2dbe8>
   407a0:	ldr	r0, [fp, #-728]	; 0xfffffd28
   407a4:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   407a8:	mov	r2, #0
   407ac:	subs	r3, r0, #1
   407b0:	sbcs	r1, r1, #0
   407b4:	str	r0, [fp, #-1976]	; 0xfffff848
   407b8:	str	r3, [fp, #-1980]	; 0xfffff844
   407bc:	str	r1, [fp, #-1984]	; 0xfffff840
   407c0:	str	r2, [fp, #-1988]	; 0xfffff83c
   407c4:	blt	407e4 <__assert_fail@plt+0x2dc2c>
   407c8:	b	407cc <__assert_fail@plt+0x2dc14>
   407cc:	ldr	r0, [fp, #-52]	; 0xffffffcc
   407d0:	ldr	r1, [fp, #-720]	; 0xfffffd30
   407d4:	cmp	r0, r1
   407d8:	movw	r0, #0
   407dc:	movne	r0, #1
   407e0:	str	r0, [fp, #-1988]	; 0xfffff83c
   407e4:	ldr	r0, [fp, #-1988]	; 0xfffff83c
   407e8:	and	r0, r0, #1
   407ec:	ldr	r1, [fp, #-1976]	; 0xfffff848
   407f0:	sub	r0, r1, r0
   407f4:	rsb	r0, r0, r0, lsl #3
   407f8:	uxtb	r0, r0
   407fc:	mov	r2, #0
   40800:	str	r2, [fp, #-932]	; 0xfffffc5c
   40804:	str	r0, [fp, #-936]	; 0xfffffc58
   40808:	b	43c6c <__assert_fail@plt+0x310b4>
   4080c:	ldr	r0, [fp, #-728]	; 0xfffffd28
   40810:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   40814:	mov	r2, #0
   40818:	subs	r3, r0, #1
   4081c:	sbcs	r1, r1, #0
   40820:	str	r0, [fp, #-1992]	; 0xfffff838
   40824:	str	r3, [fp, #-1996]	; 0xfffff834
   40828:	str	r1, [fp, #-2000]	; 0xfffff830
   4082c:	str	r2, [fp, #-2004]	; 0xfffff82c
   40830:	blt	40850 <__assert_fail@plt+0x2dc98>
   40834:	b	40838 <__assert_fail@plt+0x2dc80>
   40838:	ldr	r0, [fp, #-52]	; 0xffffffcc
   4083c:	ldr	r1, [fp, #-720]	; 0xfffffd30
   40840:	cmp	r0, r1
   40844:	movw	r0, #0
   40848:	movne	r0, #1
   4084c:	str	r0, [fp, #-2004]	; 0xfffff82c
   40850:	ldr	r0, [fp, #-2004]	; 0xfffff82c
   40854:	and	r0, r0, #1
   40858:	ldr	r1, [fp, #-1992]	; 0xfffff838
   4085c:	sub	r0, r1, r0
   40860:	rsb	r0, r0, r0, lsl #3
   40864:	uxtb	r0, r0
   40868:	mov	r2, #0
   4086c:	str	r2, [fp, #-932]	; 0xfffffc5c
   40870:	str	r0, [fp, #-936]	; 0xfffffc58
   40874:	b	43b68 <__assert_fail@plt+0x30fb0>
   40878:	b	41540 <__assert_fail@plt+0x2e988>
   4087c:	b	40880 <__assert_fail@plt+0x2dcc8>
   40880:	b	40c14 <__assert_fail@plt+0x2e05c>
   40884:	ldr	r0, [fp, #-728]	; 0xfffffd28
   40888:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   4088c:	mov	r2, #0
   40890:	subs	r3, r0, #1
   40894:	sbcs	ip, r1, #0
   40898:	str	r0, [fp, #-2008]	; 0xfffff828
   4089c:	str	r1, [fp, #-2012]	; 0xfffff824
   408a0:	str	ip, [fp, #-2016]	; 0xfffff820
   408a4:	str	r3, [fp, #-2020]	; 0xfffff81c
   408a8:	str	r2, [fp, #-2024]	; 0xfffff818
   408ac:	blt	408cc <__assert_fail@plt+0x2dd14>
   408b0:	b	408b4 <__assert_fail@plt+0x2dcfc>
   408b4:	ldr	r0, [fp, #-52]	; 0xffffffcc
   408b8:	ldr	r1, [fp, #-720]	; 0xfffffd30
   408bc:	cmp	r0, r1
   408c0:	movw	r0, #0
   408c4:	movne	r0, #1
   408c8:	str	r0, [fp, #-2024]	; 0xfffff818
   408cc:	ldr	r0, [fp, #-2024]	; 0xfffff818
   408d0:	and	r0, r0, #1
   408d4:	ldr	r1, [fp, #-2008]	; 0xfffff828
   408d8:	subs	r0, r1, r0
   408dc:	ldr	r2, [fp, #-2012]	; 0xfffff824
   408e0:	sbc	r3, r2, #0
   408e4:	cmn	r3, #1
   408e8:	str	r0, [fp, #-2028]	; 0xfffff814
   408ec:	bgt	40a00 <__assert_fail@plt+0x2de48>
   408f0:	b	408f4 <__assert_fail@plt+0x2dd3c>
   408f4:	b	408f8 <__assert_fail@plt+0x2dd40>
   408f8:	ldr	r0, [fp, #-728]	; 0xfffffd28
   408fc:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   40900:	mov	r2, #0
   40904:	subs	r3, r0, #1
   40908:	sbcs	ip, r1, #0
   4090c:	str	r0, [fp, #-2032]	; 0xfffff810
   40910:	str	r1, [fp, #-2036]	; 0xfffff80c
   40914:	str	ip, [fp, #-2040]	; 0xfffff808
   40918:	str	r3, [fp, #-2044]	; 0xfffff804
   4091c:	str	r2, [fp, #-2048]	; 0xfffff800
   40920:	blt	40940 <__assert_fail@plt+0x2dd88>
   40924:	b	40928 <__assert_fail@plt+0x2dd70>
   40928:	ldr	r0, [fp, #-52]	; 0xffffffcc
   4092c:	ldr	r1, [fp, #-720]	; 0xfffffd30
   40930:	cmp	r0, r1
   40934:	movw	r0, #0
   40938:	movne	r0, #1
   4093c:	str	r0, [fp, #-2048]	; 0xfffff800
   40940:	ldr	r0, [fp, #-2048]	; 0xfffff800
   40944:	and	r0, r0, #1
   40948:	ldr	r1, [fp, #-2032]	; 0xfffff810
   4094c:	subs	r0, r1, r0
   40950:	ldr	r2, [fp, #-2036]	; 0xfffff80c
   40954:	sbc	r3, r2, #0
   40958:	movw	ip, #4681	; 0x1249
   4095c:	subs	r0, r0, ip
   40960:	sbcs	r3, r3, #0
   40964:	str	r0, [fp, #-2052]	; 0xfffff7fc
   40968:	str	r3, [fp, #-2056]	; 0xfffff7f8
   4096c:	blt	40e18 <__assert_fail@plt+0x2e260>
   40970:	b	40e84 <__assert_fail@plt+0x2e2cc>
   40974:	ldr	r0, [fp, #-728]	; 0xfffffd28
   40978:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   4097c:	mov	r2, #0
   40980:	subs	r3, r0, #1
   40984:	sbcs	ip, r1, #0
   40988:	str	r0, [fp, #-2060]	; 0xfffff7f4
   4098c:	str	r1, [fp, #-2064]	; 0xfffff7f0
   40990:	str	ip, [fp, #-2068]	; 0xfffff7ec
   40994:	str	r3, [fp, #-2072]	; 0xfffff7e8
   40998:	str	r2, [fp, #-2076]	; 0xfffff7e4
   4099c:	blt	409bc <__assert_fail@plt+0x2de04>
   409a0:	b	409a4 <__assert_fail@plt+0x2ddec>
   409a4:	ldr	r0, [fp, #-52]	; 0xffffffcc
   409a8:	ldr	r1, [fp, #-720]	; 0xfffffd30
   409ac:	cmp	r0, r1
   409b0:	movw	r0, #0
   409b4:	movne	r0, #1
   409b8:	str	r0, [fp, #-2076]	; 0xfffff7e4
   409bc:	ldr	r0, [fp, #-2076]	; 0xfffff7e4
   409c0:	and	r0, r0, #1
   409c4:	ldr	r1, [fp, #-2060]	; 0xfffff7f4
   409c8:	subs	r0, r1, r0
   409cc:	ldr	r2, [fp, #-2064]	; 0xfffff7f0
   409d0:	sbc	r3, r2, #0
   409d4:	mvn	r3, r3
   409d8:	mvn	r0, r0
   409dc:	movw	ip, #60854	; 0xedb6
   409e0:	movt	ip, #65535	; 0xffff
   409e4:	subs	r0, ip, r0
   409e8:	mvn	ip, #0
   409ec:	sbcs	r3, ip, r3
   409f0:	str	r0, [fp, #-2080]	; 0xfffff7e0
   409f4:	str	r3, [fp, #-2084]	; 0xfffff7dc
   409f8:	blt	40e18 <__assert_fail@plt+0x2e260>
   409fc:	b	40e84 <__assert_fail@plt+0x2e2cc>
   40a00:	b	40a04 <__assert_fail@plt+0x2de4c>
   40a04:	b	40b90 <__assert_fail@plt+0x2dfd8>
   40a08:	b	40b90 <__assert_fail@plt+0x2dfd8>
   40a0c:	b	40b90 <__assert_fail@plt+0x2dfd8>
   40a10:	b	40a14 <__assert_fail@plt+0x2de5c>
   40a14:	ldr	r0, [fp, #-728]	; 0xfffffd28
   40a18:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   40a1c:	mov	r2, #0
   40a20:	subs	r3, r0, #1
   40a24:	sbcs	ip, r1, #0
   40a28:	str	r0, [fp, #-2088]	; 0xfffff7d8
   40a2c:	str	r1, [fp, #-2092]	; 0xfffff7d4
   40a30:	str	ip, [fp, #-2096]	; 0xfffff7d0
   40a34:	str	r3, [fp, #-2100]	; 0xfffff7cc
   40a38:	str	r2, [fp, #-2104]	; 0xfffff7c8
   40a3c:	blt	40a5c <__assert_fail@plt+0x2dea4>
   40a40:	b	40a44 <__assert_fail@plt+0x2de8c>
   40a44:	ldr	r0, [fp, #-52]	; 0xffffffcc
   40a48:	ldr	r1, [fp, #-720]	; 0xfffffd30
   40a4c:	cmp	r0, r1
   40a50:	movw	r0, #0
   40a54:	movne	r0, #1
   40a58:	str	r0, [fp, #-2104]	; 0xfffff7c8
   40a5c:	ldr	r0, [fp, #-2104]	; 0xfffff7c8
   40a60:	and	r0, r0, #1
   40a64:	ldr	r1, [fp, #-2088]	; 0xfffff7d8
   40a68:	subs	r0, r1, r0
   40a6c:	ldr	r2, [fp, #-2092]	; 0xfffff7d4
   40a70:	sbc	r3, r2, #0
   40a74:	subs	r0, r0, #32768	; 0x8000
   40a78:	sbc	r3, r3, #0
   40a7c:	rsbs	r0, r0, #0
   40a80:	rscs	r3, r3, #0
   40a84:	str	r0, [fp, #-2108]	; 0xfffff7c4
   40a88:	str	r3, [fp, #-2112]	; 0xfffff7c0
   40a8c:	blt	40e18 <__assert_fail@plt+0x2e260>
   40a90:	b	40e84 <__assert_fail@plt+0x2e2cc>
   40a94:	ldr	r0, [fp, #-728]	; 0xfffffd28
   40a98:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   40a9c:	mov	r2, #0
   40aa0:	subs	r3, r0, #1
   40aa4:	sbcs	ip, r1, #0
   40aa8:	str	r0, [fp, #-2116]	; 0xfffff7bc
   40aac:	str	r1, [fp, #-2120]	; 0xfffff7b8
   40ab0:	str	ip, [fp, #-2124]	; 0xfffff7b4
   40ab4:	str	r3, [fp, #-2128]	; 0xfffff7b0
   40ab8:	str	r2, [fp, #-2132]	; 0xfffff7ac
   40abc:	blt	40adc <__assert_fail@plt+0x2df24>
   40ac0:	b	40ac4 <__assert_fail@plt+0x2df0c>
   40ac4:	ldr	r0, [fp, #-52]	; 0xffffffcc
   40ac8:	ldr	r1, [fp, #-720]	; 0xfffffd30
   40acc:	cmp	r0, r1
   40ad0:	movw	r0, #0
   40ad4:	movne	r0, #1
   40ad8:	str	r0, [fp, #-2132]	; 0xfffff7ac
   40adc:	ldr	r0, [fp, #-2132]	; 0xfffff7ac
   40ae0:	and	r0, r0, #1
   40ae4:	ldr	r1, [fp, #-2116]	; 0xfffff7bc
   40ae8:	subs	r0, r1, r0
   40aec:	ldr	r2, [fp, #-2120]	; 0xfffff7b8
   40af0:	sbc	r3, r2, #0
   40af4:	subs	r0, r0, #1
   40af8:	sbcs	r3, r3, #0
   40afc:	str	r0, [fp, #-2136]	; 0xfffff7a8
   40b00:	str	r3, [fp, #-2140]	; 0xfffff7a4
   40b04:	blt	40e84 <__assert_fail@plt+0x2e2cc>
   40b08:	b	40b0c <__assert_fail@plt+0x2df54>
   40b0c:	ldr	r0, [fp, #-728]	; 0xfffffd28
   40b10:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   40b14:	mov	r2, #0
   40b18:	subs	r3, r0, #1
   40b1c:	sbcs	ip, r1, #0
   40b20:	str	r0, [fp, #-2144]	; 0xfffff7a0
   40b24:	str	r1, [fp, #-2148]	; 0xfffff79c
   40b28:	str	ip, [fp, #-2152]	; 0xfffff798
   40b2c:	str	r3, [fp, #-2156]	; 0xfffff794
   40b30:	str	r2, [fp, #-2160]	; 0xfffff790
   40b34:	blt	40b54 <__assert_fail@plt+0x2df9c>
   40b38:	b	40b3c <__assert_fail@plt+0x2df84>
   40b3c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   40b40:	ldr	r1, [fp, #-720]	; 0xfffffd30
   40b44:	cmp	r0, r1
   40b48:	movw	r0, #0
   40b4c:	movne	r0, #1
   40b50:	str	r0, [fp, #-2160]	; 0xfffff790
   40b54:	ldr	r0, [fp, #-2160]	; 0xfffff790
   40b58:	and	r0, r0, #1
   40b5c:	ldr	r1, [fp, #-2144]	; 0xfffff7a0
   40b60:	subs	r0, r1, r0
   40b64:	ldr	r2, [fp, #-2148]	; 0xfffff79c
   40b68:	sbc	r3, r2, #0
   40b6c:	subs	r0, r0, #1
   40b70:	sbc	r3, r3, #0
   40b74:	movw	ip, #32767	; 0x7fff
   40b78:	subs	r0, ip, r0
   40b7c:	rscs	r3, r3, #0
   40b80:	str	r0, [fp, #-2164]	; 0xfffff78c
   40b84:	str	r3, [fp, #-2168]	; 0xfffff788
   40b88:	blt	40e18 <__assert_fail@plt+0x2e260>
   40b8c:	b	40e84 <__assert_fail@plt+0x2e2cc>
   40b90:	ldr	r0, [fp, #-728]	; 0xfffffd28
   40b94:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   40b98:	mov	r2, #0
   40b9c:	subs	r3, r0, #1
   40ba0:	sbcs	ip, r1, #0
   40ba4:	str	r0, [fp, #-2172]	; 0xfffff784
   40ba8:	str	r1, [fp, #-2176]	; 0xfffff780
   40bac:	str	ip, [fp, #-2180]	; 0xfffff77c
   40bb0:	str	r3, [fp, #-2184]	; 0xfffff778
   40bb4:	str	r2, [fp, #-2188]	; 0xfffff774
   40bb8:	blt	40bd8 <__assert_fail@plt+0x2e020>
   40bbc:	b	40bc0 <__assert_fail@plt+0x2e008>
   40bc0:	ldr	r0, [fp, #-52]	; 0xffffffcc
   40bc4:	ldr	r1, [fp, #-720]	; 0xfffffd30
   40bc8:	cmp	r0, r1
   40bcc:	movw	r0, #0
   40bd0:	movne	r0, #1
   40bd4:	str	r0, [fp, #-2188]	; 0xfffff774
   40bd8:	ldr	r0, [fp, #-2188]	; 0xfffff774
   40bdc:	and	r0, r0, #1
   40be0:	ldr	r1, [fp, #-2172]	; 0xfffff784
   40be4:	subs	r0, r1, r0
   40be8:	ldr	r2, [fp, #-2176]	; 0xfffff780
   40bec:	sbc	r3, r2, #0
   40bf0:	movw	ip, #60855	; 0xedb7
   40bf4:	movt	ip, #65535	; 0xffff
   40bf8:	subs	r0, ip, r0
   40bfc:	mvn	ip, #0
   40c00:	sbcs	r3, ip, r3
   40c04:	str	r0, [fp, #-2192]	; 0xfffff770
   40c08:	str	r3, [fp, #-2196]	; 0xfffff76c
   40c0c:	blt	40e18 <__assert_fail@plt+0x2e260>
   40c10:	b	40e84 <__assert_fail@plt+0x2e2cc>
   40c14:	b	40c1c <__assert_fail@plt+0x2e064>
   40c18:	b	40e84 <__assert_fail@plt+0x2e2cc>
   40c1c:	ldr	r0, [fp, #-728]	; 0xfffffd28
   40c20:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   40c24:	mov	r2, #0
   40c28:	subs	r3, r0, #1
   40c2c:	sbcs	ip, r1, #0
   40c30:	str	r0, [fp, #-2200]	; 0xfffff768
   40c34:	str	r1, [fp, #-2204]	; 0xfffff764
   40c38:	str	ip, [fp, #-2208]	; 0xfffff760
   40c3c:	str	r3, [fp, #-2212]	; 0xfffff75c
   40c40:	str	r2, [fp, #-2216]	; 0xfffff758
   40c44:	blt	40c64 <__assert_fail@plt+0x2e0ac>
   40c48:	b	40c4c <__assert_fail@plt+0x2e094>
   40c4c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   40c50:	ldr	r1, [fp, #-720]	; 0xfffffd30
   40c54:	cmp	r0, r1
   40c58:	movw	r0, #0
   40c5c:	movne	r0, #1
   40c60:	str	r0, [fp, #-2216]	; 0xfffff758
   40c64:	ldr	r0, [fp, #-2216]	; 0xfffff758
   40c68:	and	r0, r0, #1
   40c6c:	ldr	r1, [fp, #-2200]	; 0xfffff768
   40c70:	subs	r0, r1, r0
   40c74:	ldr	r2, [fp, #-2204]	; 0xfffff764
   40c78:	sbc	r3, r2, #0
   40c7c:	cmn	r3, #1
   40c80:	str	r0, [fp, #-2220]	; 0xfffff754
   40c84:	bgt	40d9c <__assert_fail@plt+0x2e1e4>
   40c88:	b	40c8c <__assert_fail@plt+0x2e0d4>
   40c8c:	b	40c90 <__assert_fail@plt+0x2e0d8>
   40c90:	b	40d14 <__assert_fail@plt+0x2e15c>
   40c94:	b	40d14 <__assert_fail@plt+0x2e15c>
   40c98:	ldr	r0, [fp, #-728]	; 0xfffffd28
   40c9c:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   40ca0:	mov	r2, #0
   40ca4:	subs	r3, r0, #1
   40ca8:	sbcs	ip, r1, #0
   40cac:	str	r0, [fp, #-2224]	; 0xfffff750
   40cb0:	str	r1, [fp, #-2228]	; 0xfffff74c
   40cb4:	str	ip, [fp, #-2232]	; 0xfffff748
   40cb8:	str	r3, [fp, #-2236]	; 0xfffff744
   40cbc:	str	r2, [fp, #-2240]	; 0xfffff740
   40cc0:	blt	40ce0 <__assert_fail@plt+0x2e128>
   40cc4:	b	40cc8 <__assert_fail@plt+0x2e110>
   40cc8:	ldr	r0, [fp, #-52]	; 0xffffffcc
   40ccc:	ldr	r1, [fp, #-720]	; 0xfffffd30
   40cd0:	cmp	r0, r1
   40cd4:	movw	r0, #0
   40cd8:	movne	r0, #1
   40cdc:	str	r0, [fp, #-2240]	; 0xfffff740
   40ce0:	ldr	r0, [fp, #-2240]	; 0xfffff740
   40ce4:	and	r0, r0, #1
   40ce8:	ldr	r1, [fp, #-2224]	; 0xfffff750
   40cec:	subs	r0, r1, r0
   40cf0:	ldr	r2, [fp, #-2228]	; 0xfffff74c
   40cf4:	sbc	r3, r2, #0
   40cf8:	and	r0, r0, r3
   40cfc:	cmn	r0, #1
   40d00:	bne	40d14 <__assert_fail@plt+0x2e15c>
   40d04:	b	40d08 <__assert_fail@plt+0x2e150>
   40d08:	b	40d0c <__assert_fail@plt+0x2e154>
   40d0c:	b	40e84 <__assert_fail@plt+0x2e2cc>
   40d10:	b	40e84 <__assert_fail@plt+0x2e2cc>
   40d14:	ldr	r0, [fp, #-728]	; 0xfffffd28
   40d18:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   40d1c:	mov	r2, #0
   40d20:	subs	r3, r0, #1
   40d24:	sbcs	ip, r1, #0
   40d28:	str	r0, [fp, #-2244]	; 0xfffff73c
   40d2c:	str	r1, [fp, #-2248]	; 0xfffff738
   40d30:	str	ip, [fp, #-2252]	; 0xfffff734
   40d34:	str	r3, [fp, #-2256]	; 0xfffff730
   40d38:	str	r2, [fp, #-2260]	; 0xfffff72c
   40d3c:	blt	40d5c <__assert_fail@plt+0x2e1a4>
   40d40:	b	40d44 <__assert_fail@plt+0x2e18c>
   40d44:	ldr	r0, [fp, #-52]	; 0xffffffcc
   40d48:	ldr	r1, [fp, #-720]	; 0xfffffd30
   40d4c:	cmp	r0, r1
   40d50:	movw	r0, #0
   40d54:	movne	r0, #1
   40d58:	str	r0, [fp, #-2260]	; 0xfffff72c
   40d5c:	ldr	r0, [fp, #-2260]	; 0xfffff72c
   40d60:	and	r0, r0, #1
   40d64:	ldr	r1, [fp, #-2244]	; 0xfffff73c
   40d68:	subs	r2, r1, r0
   40d6c:	ldr	r0, [fp, #-2248]	; 0xfffff738
   40d70:	sbc	r3, r0, #0
   40d74:	movw	r0, #32768	; 0x8000
   40d78:	movt	r0, #65535	; 0xffff
   40d7c:	mvn	r1, #0
   40d80:	bl	77780 <__assert_fail@plt+0x64bc8>
   40d84:	subs	r0, r0, #7
   40d88:	sbcs	r1, r1, #0
   40d8c:	str	r0, [fp, #-2264]	; 0xfffff728
   40d90:	str	r1, [fp, #-2268]	; 0xfffff724
   40d94:	blt	40e18 <__assert_fail@plt+0x2e260>
   40d98:	b	40e84 <__assert_fail@plt+0x2e2cc>
   40d9c:	ldr	r0, [fp, #-728]	; 0xfffffd28
   40da0:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   40da4:	mov	r2, #0
   40da8:	subs	r3, r0, #1
   40dac:	sbcs	ip, r1, #0
   40db0:	str	r0, [fp, #-2272]	; 0xfffff720
   40db4:	str	r1, [fp, #-2276]	; 0xfffff71c
   40db8:	str	ip, [fp, #-2280]	; 0xfffff718
   40dbc:	str	r3, [fp, #-2284]	; 0xfffff714
   40dc0:	str	r2, [fp, #-2288]	; 0xfffff710
   40dc4:	blt	40de4 <__assert_fail@plt+0x2e22c>
   40dc8:	b	40dcc <__assert_fail@plt+0x2e214>
   40dcc:	ldr	r0, [fp, #-52]	; 0xffffffcc
   40dd0:	ldr	r1, [fp, #-720]	; 0xfffffd30
   40dd4:	cmp	r0, r1
   40dd8:	movw	r0, #0
   40ddc:	movne	r0, #1
   40de0:	str	r0, [fp, #-2288]	; 0xfffff710
   40de4:	ldr	r0, [fp, #-2288]	; 0xfffff710
   40de8:	and	r0, r0, #1
   40dec:	ldr	r1, [fp, #-2272]	; 0xfffff720
   40df0:	subs	r0, r1, r0
   40df4:	ldr	r2, [fp, #-2276]	; 0xfffff71c
   40df8:	sbc	r3, r2, #0
   40dfc:	movw	ip, #4682	; 0x124a
   40e00:	subs	r0, r0, ip
   40e04:	sbcs	r3, r3, #0
   40e08:	str	r0, [fp, #-2292]	; 0xfffff70c
   40e0c:	str	r3, [fp, #-2296]	; 0xfffff708
   40e10:	blt	40e84 <__assert_fail@plt+0x2e2cc>
   40e14:	b	40e18 <__assert_fail@plt+0x2e260>
   40e18:	ldr	r0, [fp, #-728]	; 0xfffffd28
   40e1c:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   40e20:	mov	r2, #0
   40e24:	subs	r3, r0, #1
   40e28:	sbcs	r1, r1, #0
   40e2c:	str	r0, [fp, #-2300]	; 0xfffff704
   40e30:	str	r3, [fp, #-2304]	; 0xfffff700
   40e34:	str	r1, [fp, #-2308]	; 0xfffff6fc
   40e38:	str	r2, [fp, #-2312]	; 0xfffff6f8
   40e3c:	blt	40e5c <__assert_fail@plt+0x2e2a4>
   40e40:	b	40e44 <__assert_fail@plt+0x2e28c>
   40e44:	ldr	r0, [fp, #-52]	; 0xffffffcc
   40e48:	ldr	r1, [fp, #-720]	; 0xfffffd30
   40e4c:	cmp	r0, r1
   40e50:	movw	r0, #0
   40e54:	movne	r0, #1
   40e58:	str	r0, [fp, #-2312]	; 0xfffff6f8
   40e5c:	ldr	r0, [fp, #-2312]	; 0xfffff6f8
   40e60:	and	r0, r0, #1
   40e64:	ldr	r1, [fp, #-2300]	; 0xfffff704
   40e68:	sub	r0, r1, r0
   40e6c:	rsb	r0, r0, r0, lsl #3
   40e70:	sxth	r0, r0
   40e74:	asr	r2, r0, #31
   40e78:	str	r0, [fp, #-936]	; 0xfffffc58
   40e7c:	str	r2, [fp, #-932]	; 0xfffffc5c
   40e80:	b	43c6c <__assert_fail@plt+0x310b4>
   40e84:	ldr	r0, [fp, #-728]	; 0xfffffd28
   40e88:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   40e8c:	mov	r2, #0
   40e90:	subs	r3, r0, #1
   40e94:	sbcs	r1, r1, #0
   40e98:	str	r0, [fp, #-2316]	; 0xfffff6f4
   40e9c:	str	r3, [fp, #-2320]	; 0xfffff6f0
   40ea0:	str	r1, [fp, #-2324]	; 0xfffff6ec
   40ea4:	str	r2, [fp, #-2328]	; 0xfffff6e8
   40ea8:	blt	40ec8 <__assert_fail@plt+0x2e310>
   40eac:	b	40eb0 <__assert_fail@plt+0x2e2f8>
   40eb0:	ldr	r0, [fp, #-52]	; 0xffffffcc
   40eb4:	ldr	r1, [fp, #-720]	; 0xfffffd30
   40eb8:	cmp	r0, r1
   40ebc:	movw	r0, #0
   40ec0:	movne	r0, #1
   40ec4:	str	r0, [fp, #-2328]	; 0xfffff6e8
   40ec8:	ldr	r0, [fp, #-2328]	; 0xfffff6e8
   40ecc:	and	r0, r0, #1
   40ed0:	ldr	r1, [fp, #-2316]	; 0xfffff6f4
   40ed4:	sub	r0, r1, r0
   40ed8:	rsb	r0, r0, r0, lsl #3
   40edc:	sxth	r0, r0
   40ee0:	asr	r2, r0, #31
   40ee4:	str	r0, [fp, #-936]	; 0xfffffc58
   40ee8:	str	r2, [fp, #-932]	; 0xfffffc5c
   40eec:	b	43b68 <__assert_fail@plt+0x30fb0>
   40ef0:	b	41264 <__assert_fail@plt+0x2e6ac>
   40ef4:	ldr	r0, [fp, #-728]	; 0xfffffd28
   40ef8:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   40efc:	mov	r2, #0
   40f00:	subs	r3, r0, #1
   40f04:	sbcs	ip, r1, #0
   40f08:	str	r0, [fp, #-2332]	; 0xfffff6e4
   40f0c:	str	r1, [fp, #-2336]	; 0xfffff6e0
   40f10:	str	ip, [fp, #-2340]	; 0xfffff6dc
   40f14:	str	r3, [fp, #-2344]	; 0xfffff6d8
   40f18:	str	r2, [fp, #-2348]	; 0xfffff6d4
   40f1c:	blt	40f3c <__assert_fail@plt+0x2e384>
   40f20:	b	40f24 <__assert_fail@plt+0x2e36c>
   40f24:	ldr	r0, [fp, #-52]	; 0xffffffcc
   40f28:	ldr	r1, [fp, #-720]	; 0xfffffd30
   40f2c:	cmp	r0, r1
   40f30:	movw	r0, #0
   40f34:	movne	r0, #1
   40f38:	str	r0, [fp, #-2348]	; 0xfffff6d4
   40f3c:	ldr	r0, [fp, #-2348]	; 0xfffff6d4
   40f40:	and	r0, r0, #1
   40f44:	ldr	r1, [fp, #-2332]	; 0xfffff6e4
   40f48:	subs	r0, r1, r0
   40f4c:	ldr	r2, [fp, #-2336]	; 0xfffff6e0
   40f50:	sbc	r3, r2, #0
   40f54:	cmn	r3, #1
   40f58:	str	r0, [fp, #-2352]	; 0xfffff6d0
   40f5c:	bgt	41070 <__assert_fail@plt+0x2e4b8>
   40f60:	b	40f64 <__assert_fail@plt+0x2e3ac>
   40f64:	b	40f68 <__assert_fail@plt+0x2e3b0>
   40f68:	ldr	r0, [fp, #-728]	; 0xfffffd28
   40f6c:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   40f70:	mov	r2, #0
   40f74:	subs	r3, r0, #1
   40f78:	sbcs	ip, r1, #0
   40f7c:	str	r0, [fp, #-2356]	; 0xfffff6cc
   40f80:	str	r1, [fp, #-2360]	; 0xfffff6c8
   40f84:	str	ip, [fp, #-2364]	; 0xfffff6c4
   40f88:	str	r3, [fp, #-2368]	; 0xfffff6c0
   40f8c:	str	r2, [fp, #-2372]	; 0xfffff6bc
   40f90:	blt	40fb0 <__assert_fail@plt+0x2e3f8>
   40f94:	b	40f98 <__assert_fail@plt+0x2e3e0>
   40f98:	ldr	r0, [fp, #-52]	; 0xffffffcc
   40f9c:	ldr	r1, [fp, #-720]	; 0xfffffd30
   40fa0:	cmp	r0, r1
   40fa4:	movw	r0, #0
   40fa8:	movne	r0, #1
   40fac:	str	r0, [fp, #-2372]	; 0xfffff6bc
   40fb0:	ldr	r0, [fp, #-2372]	; 0xfffff6bc
   40fb4:	and	r0, r0, #1
   40fb8:	ldr	r1, [fp, #-2356]	; 0xfffff6cc
   40fbc:	subs	r0, r1, r0
   40fc0:	ldr	r2, [fp, #-2360]	; 0xfffff6c8
   40fc4:	sbc	r3, r2, #0
   40fc8:	movw	ip, #9362	; 0x2492
   40fcc:	subs	r0, r0, ip
   40fd0:	sbcs	r3, r3, #0
   40fd4:	str	r0, [fp, #-2376]	; 0xfffff6b8
   40fd8:	str	r3, [fp, #-2380]	; 0xfffff6b4
   40fdc:	blt	41468 <__assert_fail@plt+0x2e8b0>
   40fe0:	b	414d4 <__assert_fail@plt+0x2e91c>
   40fe4:	ldr	r0, [fp, #-728]	; 0xfffffd28
   40fe8:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   40fec:	mov	r2, #0
   40ff0:	subs	r3, r0, #1
   40ff4:	sbcs	ip, r1, #0
   40ff8:	str	r0, [fp, #-2384]	; 0xfffff6b0
   40ffc:	str	r1, [fp, #-2388]	; 0xfffff6ac
   41000:	str	ip, [fp, #-2392]	; 0xfffff6a8
   41004:	str	r3, [fp, #-2396]	; 0xfffff6a4
   41008:	str	r2, [fp, #-2400]	; 0xfffff6a0
   4100c:	blt	4102c <__assert_fail@plt+0x2e474>
   41010:	b	41014 <__assert_fail@plt+0x2e45c>
   41014:	ldr	r0, [fp, #-52]	; 0xffffffcc
   41018:	ldr	r1, [fp, #-720]	; 0xfffffd30
   4101c:	cmp	r0, r1
   41020:	movw	r0, #0
   41024:	movne	r0, #1
   41028:	str	r0, [fp, #-2400]	; 0xfffff6a0
   4102c:	ldr	r0, [fp, #-2400]	; 0xfffff6a0
   41030:	and	r0, r0, #1
   41034:	ldr	r1, [fp, #-2384]	; 0xfffff6b0
   41038:	subs	r0, r1, r0
   4103c:	ldr	r2, [fp, #-2388]	; 0xfffff6ac
   41040:	sbc	r3, r2, #0
   41044:	mvn	r3, r3
   41048:	mvn	r0, r0
   4104c:	movw	ip, #56173	; 0xdb6d
   41050:	movt	ip, #65535	; 0xffff
   41054:	subs	r0, ip, r0
   41058:	mvn	ip, #0
   4105c:	sbcs	r3, ip, r3
   41060:	str	r0, [fp, #-2404]	; 0xfffff69c
   41064:	str	r3, [fp, #-2408]	; 0xfffff698
   41068:	blt	41468 <__assert_fail@plt+0x2e8b0>
   4106c:	b	414d4 <__assert_fail@plt+0x2e91c>
   41070:	b	41074 <__assert_fail@plt+0x2e4bc>
   41074:	b	411ec <__assert_fail@plt+0x2e634>
   41078:	b	411ec <__assert_fail@plt+0x2e634>
   4107c:	b	411ec <__assert_fail@plt+0x2e634>
   41080:	b	41084 <__assert_fail@plt+0x2e4cc>
   41084:	ldr	r0, [fp, #-728]	; 0xfffffd28
   41088:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   4108c:	mov	r2, #0
   41090:	subs	r3, r0, #1
   41094:	sbcs	ip, r1, #0
   41098:	str	r0, [fp, #-2412]	; 0xfffff694
   4109c:	str	r1, [fp, #-2416]	; 0xfffff690
   410a0:	str	ip, [fp, #-2420]	; 0xfffff68c
   410a4:	str	r3, [fp, #-2424]	; 0xfffff688
   410a8:	str	r2, [fp, #-2428]	; 0xfffff684
   410ac:	blt	410cc <__assert_fail@plt+0x2e514>
   410b0:	b	410b4 <__assert_fail@plt+0x2e4fc>
   410b4:	ldr	r0, [fp, #-52]	; 0xffffffcc
   410b8:	ldr	r1, [fp, #-720]	; 0xfffffd30
   410bc:	cmp	r0, r1
   410c0:	movw	r0, #0
   410c4:	movne	r0, #1
   410c8:	str	r0, [fp, #-2428]	; 0xfffff684
   410cc:	ldr	r0, [fp, #-2428]	; 0xfffff684
   410d0:	and	r0, r0, #1
   410d4:	ldr	r1, [fp, #-2412]	; 0xfffff694
   410d8:	subs	r0, r1, r0
   410dc:	ldr	r2, [fp, #-2416]	; 0xfffff690
   410e0:	sbc	r3, r2, #0
   410e4:	rsbs	r0, r0, #0
   410e8:	rscs	r3, r3, #0
   410ec:	str	r0, [fp, #-2432]	; 0xfffff680
   410f0:	str	r3, [fp, #-2436]	; 0xfffff67c
   410f4:	blt	41468 <__assert_fail@plt+0x2e8b0>
   410f8:	b	414d4 <__assert_fail@plt+0x2e91c>
   410fc:	ldr	r0, [fp, #-728]	; 0xfffffd28
   41100:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   41104:	mov	r2, #0
   41108:	subs	r3, r0, #1
   4110c:	sbcs	ip, r1, #0
   41110:	str	r0, [fp, #-2440]	; 0xfffff678
   41114:	str	r1, [fp, #-2444]	; 0xfffff674
   41118:	str	ip, [fp, #-2448]	; 0xfffff670
   4111c:	str	r3, [fp, #-2452]	; 0xfffff66c
   41120:	str	r2, [fp, #-2456]	; 0xfffff668
   41124:	blt	41144 <__assert_fail@plt+0x2e58c>
   41128:	b	4112c <__assert_fail@plt+0x2e574>
   4112c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   41130:	ldr	r1, [fp, #-720]	; 0xfffffd30
   41134:	cmp	r0, r1
   41138:	movw	r0, #0
   4113c:	movne	r0, #1
   41140:	str	r0, [fp, #-2456]	; 0xfffff668
   41144:	ldr	r0, [fp, #-2456]	; 0xfffff668
   41148:	and	r0, r0, #1
   4114c:	ldr	r1, [fp, #-2440]	; 0xfffff678
   41150:	subs	r0, r1, r0
   41154:	ldr	r2, [fp, #-2444]	; 0xfffff674
   41158:	sbc	r3, r2, #0
   4115c:	subs	r0, r0, #1
   41160:	sbcs	r3, r3, #0
   41164:	str	r0, [fp, #-2460]	; 0xfffff664
   41168:	str	r3, [fp, #-2464]	; 0xfffff660
   4116c:	blt	414d4 <__assert_fail@plt+0x2e91c>
   41170:	b	41174 <__assert_fail@plt+0x2e5bc>
   41174:	ldr	r0, [fp, #-728]	; 0xfffffd28
   41178:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   4117c:	mov	r2, #0
   41180:	subs	r3, r0, #1
   41184:	sbcs	ip, r1, #0
   41188:	str	r0, [fp, #-2468]	; 0xfffff65c
   4118c:	str	r1, [fp, #-2472]	; 0xfffff658
   41190:	str	ip, [fp, #-2476]	; 0xfffff654
   41194:	str	r3, [fp, #-2480]	; 0xfffff650
   41198:	str	r2, [fp, #-2484]	; 0xfffff64c
   4119c:	blt	411bc <__assert_fail@plt+0x2e604>
   411a0:	b	411a4 <__assert_fail@plt+0x2e5ec>
   411a4:	ldr	r0, [fp, #-52]	; 0xffffffcc
   411a8:	ldr	r1, [fp, #-720]	; 0xfffffd30
   411ac:	cmp	r0, r1
   411b0:	movw	r0, #0
   411b4:	movne	r0, #1
   411b8:	str	r0, [fp, #-2484]	; 0xfffff64c
   411bc:	ldr	r0, [fp, #-2484]	; 0xfffff64c
   411c0:	and	r0, r0, #1
   411c4:	ldr	r1, [fp, #-2468]	; 0xfffff65c
   411c8:	subs	r0, r1, r0
   411cc:	ldr	r2, [fp, #-2472]	; 0xfffff658
   411d0:	sbc	r3, r2, #0
   411d4:	subs	r0, r0, #1
   411d8:	sbc	r3, r3, #0
   411dc:	cmn	r3, #1
   411e0:	str	r0, [fp, #-2488]	; 0xfffff648
   411e4:	bgt	41468 <__assert_fail@plt+0x2e8b0>
   411e8:	b	414d4 <__assert_fail@plt+0x2e91c>
   411ec:	ldr	r0, [fp, #-728]	; 0xfffffd28
   411f0:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   411f4:	mov	r2, #0
   411f8:	subs	r3, r0, #1
   411fc:	sbcs	ip, r1, #0
   41200:	str	r0, [fp, #-2492]	; 0xfffff644
   41204:	str	r1, [fp, #-2496]	; 0xfffff640
   41208:	str	ip, [fp, #-2500]	; 0xfffff63c
   4120c:	str	r3, [fp, #-2504]	; 0xfffff638
   41210:	str	r2, [fp, #-2508]	; 0xfffff634
   41214:	blt	41234 <__assert_fail@plt+0x2e67c>
   41218:	b	4121c <__assert_fail@plt+0x2e664>
   4121c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   41220:	ldr	r1, [fp, #-720]	; 0xfffffd30
   41224:	cmp	r0, r1
   41228:	movw	r0, #0
   4122c:	movne	r0, #1
   41230:	str	r0, [fp, #-2508]	; 0xfffff634
   41234:	ldr	r0, [fp, #-2508]	; 0xfffff634
   41238:	and	r0, r0, #1
   4123c:	ldr	r1, [fp, #-2492]	; 0xfffff644
   41240:	subs	r0, r1, r0
   41244:	ldr	r2, [fp, #-2496]	; 0xfffff640
   41248:	sbc	r3, r2, #0
   4124c:	rsbs	r0, r0, #0
   41250:	rscs	r3, r3, #0
   41254:	str	r0, [fp, #-2512]	; 0xfffff630
   41258:	str	r3, [fp, #-2516]	; 0xfffff62c
   4125c:	blt	41468 <__assert_fail@plt+0x2e8b0>
   41260:	b	414d4 <__assert_fail@plt+0x2e91c>
   41264:	b	4126c <__assert_fail@plt+0x2e6b4>
   41268:	b	414d4 <__assert_fail@plt+0x2e91c>
   4126c:	ldr	r0, [fp, #-728]	; 0xfffffd28
   41270:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   41274:	mov	r2, #0
   41278:	subs	r3, r0, #1
   4127c:	sbcs	ip, r1, #0
   41280:	str	r0, [fp, #-2520]	; 0xfffff628
   41284:	str	r1, [fp, #-2524]	; 0xfffff624
   41288:	str	ip, [fp, #-2528]	; 0xfffff620
   4128c:	str	r3, [fp, #-2532]	; 0xfffff61c
   41290:	str	r2, [fp, #-2536]	; 0xfffff618
   41294:	blt	412b4 <__assert_fail@plt+0x2e6fc>
   41298:	b	4129c <__assert_fail@plt+0x2e6e4>
   4129c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   412a0:	ldr	r1, [fp, #-720]	; 0xfffffd30
   412a4:	cmp	r0, r1
   412a8:	movw	r0, #0
   412ac:	movne	r0, #1
   412b0:	str	r0, [fp, #-2536]	; 0xfffff618
   412b4:	ldr	r0, [fp, #-2536]	; 0xfffff618
   412b8:	and	r0, r0, #1
   412bc:	ldr	r1, [fp, #-2520]	; 0xfffff628
   412c0:	subs	r0, r1, r0
   412c4:	ldr	r2, [fp, #-2524]	; 0xfffff624
   412c8:	sbc	r3, r2, #0
   412cc:	cmn	r3, #1
   412d0:	str	r0, [fp, #-2540]	; 0xfffff614
   412d4:	bgt	413ec <__assert_fail@plt+0x2e834>
   412d8:	b	412dc <__assert_fail@plt+0x2e724>
   412dc:	b	412e0 <__assert_fail@plt+0x2e728>
   412e0:	b	41364 <__assert_fail@plt+0x2e7ac>
   412e4:	b	41364 <__assert_fail@plt+0x2e7ac>
   412e8:	ldr	r0, [fp, #-728]	; 0xfffffd28
   412ec:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   412f0:	mov	r2, #0
   412f4:	subs	r3, r0, #1
   412f8:	sbcs	ip, r1, #0
   412fc:	str	r0, [fp, #-2544]	; 0xfffff610
   41300:	str	r1, [fp, #-2548]	; 0xfffff60c
   41304:	str	ip, [fp, #-2552]	; 0xfffff608
   41308:	str	r3, [fp, #-2556]	; 0xfffff604
   4130c:	str	r2, [fp, #-2560]	; 0xfffff600
   41310:	blt	41330 <__assert_fail@plt+0x2e778>
   41314:	b	41318 <__assert_fail@plt+0x2e760>
   41318:	ldr	r0, [fp, #-52]	; 0xffffffcc
   4131c:	ldr	r1, [fp, #-720]	; 0xfffffd30
   41320:	cmp	r0, r1
   41324:	movw	r0, #0
   41328:	movne	r0, #1
   4132c:	str	r0, [fp, #-2560]	; 0xfffff600
   41330:	ldr	r0, [fp, #-2560]	; 0xfffff600
   41334:	and	r0, r0, #1
   41338:	ldr	r1, [fp, #-2544]	; 0xfffff610
   4133c:	subs	r0, r1, r0
   41340:	ldr	r2, [fp, #-2548]	; 0xfffff60c
   41344:	sbc	r3, r2, #0
   41348:	and	r0, r0, r3
   4134c:	cmn	r0, #1
   41350:	bne	41364 <__assert_fail@plt+0x2e7ac>
   41354:	b	41358 <__assert_fail@plt+0x2e7a0>
   41358:	b	4135c <__assert_fail@plt+0x2e7a4>
   4135c:	b	41468 <__assert_fail@plt+0x2e8b0>
   41360:	b	41468 <__assert_fail@plt+0x2e8b0>
   41364:	ldr	r0, [fp, #-728]	; 0xfffffd28
   41368:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   4136c:	mov	r2, #0
   41370:	subs	r3, r0, #1
   41374:	sbcs	ip, r1, #0
   41378:	str	r0, [fp, #-2564]	; 0xfffff5fc
   4137c:	str	r1, [fp, #-2568]	; 0xfffff5f8
   41380:	str	ip, [fp, #-2572]	; 0xfffff5f4
   41384:	str	r3, [fp, #-2576]	; 0xfffff5f0
   41388:	str	r2, [fp, #-2580]	; 0xfffff5ec
   4138c:	blt	413ac <__assert_fail@plt+0x2e7f4>
   41390:	b	41394 <__assert_fail@plt+0x2e7dc>
   41394:	ldr	r0, [fp, #-52]	; 0xffffffcc
   41398:	ldr	r1, [fp, #-720]	; 0xfffffd30
   4139c:	cmp	r0, r1
   413a0:	movw	r0, #0
   413a4:	movne	r0, #1
   413a8:	str	r0, [fp, #-2580]	; 0xfffff5ec
   413ac:	ldr	r0, [fp, #-2580]	; 0xfffff5ec
   413b0:	and	r0, r0, #1
   413b4:	ldr	r1, [fp, #-2564]	; 0xfffff5fc
   413b8:	subs	r2, r1, r0
   413bc:	ldr	r0, [fp, #-2568]	; 0xfffff5f8
   413c0:	sbc	r3, r0, #0
   413c4:	mov	ip, #0
   413c8:	mov	r0, ip
   413cc:	mov	r1, ip
   413d0:	bl	77780 <__assert_fail@plt+0x64bc8>
   413d4:	subs	r0, r0, #7
   413d8:	sbcs	r1, r1, #0
   413dc:	str	r0, [fp, #-2584]	; 0xfffff5e8
   413e0:	str	r1, [fp, #-2588]	; 0xfffff5e4
   413e4:	blt	41468 <__assert_fail@plt+0x2e8b0>
   413e8:	b	414d4 <__assert_fail@plt+0x2e91c>
   413ec:	ldr	r0, [fp, #-728]	; 0xfffffd28
   413f0:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   413f4:	mov	r2, #0
   413f8:	subs	r3, r0, #1
   413fc:	sbcs	ip, r1, #0
   41400:	str	r0, [fp, #-2592]	; 0xfffff5e0
   41404:	str	r1, [fp, #-2596]	; 0xfffff5dc
   41408:	str	ip, [fp, #-2600]	; 0xfffff5d8
   4140c:	str	r3, [fp, #-2604]	; 0xfffff5d4
   41410:	str	r2, [fp, #-2608]	; 0xfffff5d0
   41414:	blt	41434 <__assert_fail@plt+0x2e87c>
   41418:	b	4141c <__assert_fail@plt+0x2e864>
   4141c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   41420:	ldr	r1, [fp, #-720]	; 0xfffffd30
   41424:	cmp	r0, r1
   41428:	movw	r0, #0
   4142c:	movne	r0, #1
   41430:	str	r0, [fp, #-2608]	; 0xfffff5d0
   41434:	ldr	r0, [fp, #-2608]	; 0xfffff5d0
   41438:	and	r0, r0, #1
   4143c:	ldr	r1, [fp, #-2592]	; 0xfffff5e0
   41440:	subs	r0, r1, r0
   41444:	ldr	r2, [fp, #-2596]	; 0xfffff5dc
   41448:	sbc	r3, r2, #0
   4144c:	movw	ip, #9363	; 0x2493
   41450:	subs	r0, r0, ip
   41454:	sbcs	r3, r3, #0
   41458:	str	r0, [fp, #-2612]	; 0xfffff5cc
   4145c:	str	r3, [fp, #-2616]	; 0xfffff5c8
   41460:	blt	414d4 <__assert_fail@plt+0x2e91c>
   41464:	b	41468 <__assert_fail@plt+0x2e8b0>
   41468:	ldr	r0, [fp, #-728]	; 0xfffffd28
   4146c:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   41470:	mov	r2, #0
   41474:	subs	r3, r0, #1
   41478:	sbcs	r1, r1, #0
   4147c:	str	r0, [fp, #-2620]	; 0xfffff5c4
   41480:	str	r3, [fp, #-2624]	; 0xfffff5c0
   41484:	str	r1, [fp, #-2628]	; 0xfffff5bc
   41488:	str	r2, [fp, #-2632]	; 0xfffff5b8
   4148c:	blt	414ac <__assert_fail@plt+0x2e8f4>
   41490:	b	41494 <__assert_fail@plt+0x2e8dc>
   41494:	ldr	r0, [fp, #-52]	; 0xffffffcc
   41498:	ldr	r1, [fp, #-720]	; 0xfffffd30
   4149c:	cmp	r0, r1
   414a0:	movw	r0, #0
   414a4:	movne	r0, #1
   414a8:	str	r0, [fp, #-2632]	; 0xfffff5b8
   414ac:	ldr	r0, [fp, #-2632]	; 0xfffff5b8
   414b0:	and	r0, r0, #1
   414b4:	ldr	r1, [fp, #-2620]	; 0xfffff5c4
   414b8:	sub	r0, r1, r0
   414bc:	rsb	r0, r0, r0, lsl #3
   414c0:	uxth	r0, r0
   414c4:	mov	r2, #0
   414c8:	str	r2, [fp, #-932]	; 0xfffffc5c
   414cc:	str	r0, [fp, #-936]	; 0xfffffc58
   414d0:	b	43c6c <__assert_fail@plt+0x310b4>
   414d4:	ldr	r0, [fp, #-728]	; 0xfffffd28
   414d8:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   414dc:	mov	r2, #0
   414e0:	subs	r3, r0, #1
   414e4:	sbcs	r1, r1, #0
   414e8:	str	r0, [fp, #-2636]	; 0xfffff5b4
   414ec:	str	r3, [fp, #-2640]	; 0xfffff5b0
   414f0:	str	r1, [fp, #-2644]	; 0xfffff5ac
   414f4:	str	r2, [fp, #-2648]	; 0xfffff5a8
   414f8:	blt	41518 <__assert_fail@plt+0x2e960>
   414fc:	b	41500 <__assert_fail@plt+0x2e948>
   41500:	ldr	r0, [fp, #-52]	; 0xffffffcc
   41504:	ldr	r1, [fp, #-720]	; 0xfffffd30
   41508:	cmp	r0, r1
   4150c:	movw	r0, #0
   41510:	movne	r0, #1
   41514:	str	r0, [fp, #-2648]	; 0xfffff5a8
   41518:	ldr	r0, [fp, #-2648]	; 0xfffff5a8
   4151c:	and	r0, r0, #1
   41520:	ldr	r1, [fp, #-2636]	; 0xfffff5b4
   41524:	sub	r0, r1, r0
   41528:	rsb	r0, r0, r0, lsl #3
   4152c:	uxth	r0, r0
   41530:	mov	r2, #0
   41534:	str	r2, [fp, #-932]	; 0xfffffc5c
   41538:	str	r0, [fp, #-936]	; 0xfffffc58
   4153c:	b	43b68 <__assert_fail@plt+0x30fb0>
   41540:	b	421ec <__assert_fail@plt+0x2f634>
   41544:	b	41548 <__assert_fail@plt+0x2e990>
   41548:	b	418d4 <__assert_fail@plt+0x2ed1c>
   4154c:	ldr	r0, [fp, #-728]	; 0xfffffd28
   41550:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   41554:	mov	r2, #0
   41558:	subs	r3, r0, #1
   4155c:	sbcs	ip, r1, #0
   41560:	str	r0, [fp, #-2652]	; 0xfffff5a4
   41564:	str	r1, [fp, #-2656]	; 0xfffff5a0
   41568:	str	ip, [fp, #-2660]	; 0xfffff59c
   4156c:	str	r3, [fp, #-2664]	; 0xfffff598
   41570:	str	r2, [fp, #-2668]	; 0xfffff594
   41574:	blt	41594 <__assert_fail@plt+0x2e9dc>
   41578:	b	4157c <__assert_fail@plt+0x2e9c4>
   4157c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   41580:	ldr	r1, [fp, #-720]	; 0xfffffd30
   41584:	cmp	r0, r1
   41588:	movw	r0, #0
   4158c:	movne	r0, #1
   41590:	str	r0, [fp, #-2668]	; 0xfffff594
   41594:	ldr	r0, [fp, #-2668]	; 0xfffff594
   41598:	and	r0, r0, #1
   4159c:	ldr	r1, [fp, #-2652]	; 0xfffff5a4
   415a0:	subs	r0, r1, r0
   415a4:	ldr	r2, [fp, #-2656]	; 0xfffff5a0
   415a8:	sbc	r3, r2, #0
   415ac:	cmn	r3, #1
   415b0:	str	r0, [fp, #-2672]	; 0xfffff590
   415b4:	bgt	416cc <__assert_fail@plt+0x2eb14>
   415b8:	b	415bc <__assert_fail@plt+0x2ea04>
   415bc:	b	415c0 <__assert_fail@plt+0x2ea08>
   415c0:	ldr	r0, [fp, #-728]	; 0xfffffd28
   415c4:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   415c8:	mov	r2, #0
   415cc:	subs	r3, r0, #1
   415d0:	sbcs	ip, r1, #0
   415d4:	str	r0, [fp, #-2676]	; 0xfffff58c
   415d8:	str	r1, [fp, #-2680]	; 0xfffff588
   415dc:	str	ip, [fp, #-2684]	; 0xfffff584
   415e0:	str	r3, [fp, #-2688]	; 0xfffff580
   415e4:	str	r2, [fp, #-2692]	; 0xfffff57c
   415e8:	blt	41608 <__assert_fail@plt+0x2ea50>
   415ec:	b	415f0 <__assert_fail@plt+0x2ea38>
   415f0:	ldr	r0, [fp, #-52]	; 0xffffffcc
   415f4:	ldr	r1, [fp, #-720]	; 0xfffffd30
   415f8:	cmp	r0, r1
   415fc:	movw	r0, #0
   41600:	movne	r0, #1
   41604:	str	r0, [fp, #-2692]	; 0xfffff57c
   41608:	ldr	r0, [fp, #-2692]	; 0xfffff57c
   4160c:	and	r0, r0, #1
   41610:	ldr	r1, [fp, #-2676]	; 0xfffff58c
   41614:	subs	r0, r1, r0
   41618:	ldr	r2, [fp, #-2680]	; 0xfffff588
   4161c:	sbc	r3, r2, #0
   41620:	movw	ip, #9362	; 0x2492
   41624:	movt	ip, #4681	; 0x1249
   41628:	subs	r0, r0, ip
   4162c:	sbcs	r3, r3, #0
   41630:	str	r0, [fp, #-2696]	; 0xfffff578
   41634:	str	r3, [fp, #-2700]	; 0xfffff574
   41638:	blt	41ad8 <__assert_fail@plt+0x2ef20>
   4163c:	b	41b40 <__assert_fail@plt+0x2ef88>
   41640:	ldr	r0, [fp, #-728]	; 0xfffffd28
   41644:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   41648:	mov	r2, #0
   4164c:	subs	r3, r0, #1
   41650:	sbcs	ip, r1, #0
   41654:	str	r0, [fp, #-2704]	; 0xfffff570
   41658:	str	r1, [fp, #-2708]	; 0xfffff56c
   4165c:	str	ip, [fp, #-2712]	; 0xfffff568
   41660:	str	r3, [fp, #-2716]	; 0xfffff564
   41664:	str	r2, [fp, #-2720]	; 0xfffff560
   41668:	blt	41688 <__assert_fail@plt+0x2ead0>
   4166c:	b	41670 <__assert_fail@plt+0x2eab8>
   41670:	ldr	r0, [fp, #-52]	; 0xffffffcc
   41674:	ldr	r1, [fp, #-720]	; 0xfffffd30
   41678:	cmp	r0, r1
   4167c:	movw	r0, #0
   41680:	movne	r0, #1
   41684:	str	r0, [fp, #-2720]	; 0xfffff560
   41688:	ldr	r0, [fp, #-2720]	; 0xfffff560
   4168c:	and	r0, r0, #1
   41690:	ldr	r1, [fp, #-2704]	; 0xfffff570
   41694:	subs	r0, r1, r0
   41698:	ldr	r2, [fp, #-2708]	; 0xfffff56c
   4169c:	sbc	r3, r2, #0
   416a0:	mvn	r3, r3
   416a4:	mvn	r0, r0
   416a8:	movw	ip, #56173	; 0xdb6d
   416ac:	movt	ip, #60854	; 0xedb6
   416b0:	subs	r0, ip, r0
   416b4:	mvn	ip, #0
   416b8:	sbcs	r3, ip, r3
   416bc:	str	r0, [fp, #-2724]	; 0xfffff55c
   416c0:	str	r3, [fp, #-2728]	; 0xfffff558
   416c4:	blt	41ad8 <__assert_fail@plt+0x2ef20>
   416c8:	b	41b40 <__assert_fail@plt+0x2ef88>
   416cc:	b	41850 <__assert_fail@plt+0x2ec98>
   416d0:	b	416d4 <__assert_fail@plt+0x2eb1c>
   416d4:	ldr	r0, [fp, #-728]	; 0xfffffd28
   416d8:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   416dc:	mov	r2, #0
   416e0:	subs	r3, r0, #1
   416e4:	sbcs	ip, r1, #0
   416e8:	str	r0, [fp, #-2732]	; 0xfffff554
   416ec:	str	r1, [fp, #-2736]	; 0xfffff550
   416f0:	str	ip, [fp, #-2740]	; 0xfffff54c
   416f4:	str	r3, [fp, #-2744]	; 0xfffff548
   416f8:	str	r2, [fp, #-2748]	; 0xfffff544
   416fc:	blt	4171c <__assert_fail@plt+0x2eb64>
   41700:	b	41704 <__assert_fail@plt+0x2eb4c>
   41704:	ldr	r0, [fp, #-52]	; 0xffffffcc
   41708:	ldr	r1, [fp, #-720]	; 0xfffffd30
   4170c:	cmp	r0, r1
   41710:	movw	r0, #0
   41714:	movne	r0, #1
   41718:	str	r0, [fp, #-2748]	; 0xfffff544
   4171c:	ldr	r0, [fp, #-2748]	; 0xfffff544
   41720:	and	r0, r0, #1
   41724:	ldr	r1, [fp, #-2732]	; 0xfffff554
   41728:	subs	r0, r1, r0
   4172c:	ldr	r2, [fp, #-2736]	; 0xfffff550
   41730:	sbc	r3, r2, #0
   41734:	adds	r0, r0, #-2147483648	; 0x80000000
   41738:	sbc	r3, r3, #0
   4173c:	rsbs	r0, r0, #0
   41740:	rscs	r3, r3, #0
   41744:	str	r0, [fp, #-2752]	; 0xfffff540
   41748:	str	r3, [fp, #-2756]	; 0xfffff53c
   4174c:	blt	41ad8 <__assert_fail@plt+0x2ef20>
   41750:	b	41b40 <__assert_fail@plt+0x2ef88>
   41754:	ldr	r0, [fp, #-728]	; 0xfffffd28
   41758:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   4175c:	mov	r2, #0
   41760:	subs	r3, r0, #1
   41764:	sbcs	ip, r1, #0
   41768:	str	r0, [fp, #-2760]	; 0xfffff538
   4176c:	str	r1, [fp, #-2764]	; 0xfffff534
   41770:	str	ip, [fp, #-2768]	; 0xfffff530
   41774:	str	r3, [fp, #-2772]	; 0xfffff52c
   41778:	str	r2, [fp, #-2776]	; 0xfffff528
   4177c:	blt	4179c <__assert_fail@plt+0x2ebe4>
   41780:	b	41784 <__assert_fail@plt+0x2ebcc>
   41784:	ldr	r0, [fp, #-52]	; 0xffffffcc
   41788:	ldr	r1, [fp, #-720]	; 0xfffffd30
   4178c:	cmp	r0, r1
   41790:	movw	r0, #0
   41794:	movne	r0, #1
   41798:	str	r0, [fp, #-2776]	; 0xfffff528
   4179c:	ldr	r0, [fp, #-2776]	; 0xfffff528
   417a0:	and	r0, r0, #1
   417a4:	ldr	r1, [fp, #-2760]	; 0xfffff538
   417a8:	subs	r0, r1, r0
   417ac:	ldr	r2, [fp, #-2764]	; 0xfffff534
   417b0:	sbc	r3, r2, #0
   417b4:	subs	r0, r0, #1
   417b8:	sbcs	r3, r3, #0
   417bc:	str	r0, [fp, #-2780]	; 0xfffff524
   417c0:	str	r3, [fp, #-2784]	; 0xfffff520
   417c4:	blt	41b40 <__assert_fail@plt+0x2ef88>
   417c8:	b	417cc <__assert_fail@plt+0x2ec14>
   417cc:	ldr	r0, [fp, #-728]	; 0xfffffd28
   417d0:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   417d4:	mov	r2, #0
   417d8:	subs	r3, r0, #1
   417dc:	sbcs	ip, r1, #0
   417e0:	str	r0, [fp, #-2788]	; 0xfffff51c
   417e4:	str	r1, [fp, #-2792]	; 0xfffff518
   417e8:	str	ip, [fp, #-2796]	; 0xfffff514
   417ec:	str	r3, [fp, #-2800]	; 0xfffff510
   417f0:	str	r2, [fp, #-2804]	; 0xfffff50c
   417f4:	blt	41814 <__assert_fail@plt+0x2ec5c>
   417f8:	b	417fc <__assert_fail@plt+0x2ec44>
   417fc:	ldr	r0, [fp, #-52]	; 0xffffffcc
   41800:	ldr	r1, [fp, #-720]	; 0xfffffd30
   41804:	cmp	r0, r1
   41808:	movw	r0, #0
   4180c:	movne	r0, #1
   41810:	str	r0, [fp, #-2804]	; 0xfffff50c
   41814:	ldr	r0, [fp, #-2804]	; 0xfffff50c
   41818:	and	r0, r0, #1
   4181c:	ldr	r1, [fp, #-2788]	; 0xfffff51c
   41820:	subs	r0, r1, r0
   41824:	ldr	r2, [fp, #-2792]	; 0xfffff518
   41828:	sbc	r3, r2, #0
   4182c:	subs	r0, r0, #1
   41830:	sbc	r3, r3, #0
   41834:	mvn	ip, #-2147483648	; 0x80000000
   41838:	subs	r0, ip, r0
   4183c:	rscs	r3, r3, #0
   41840:	str	r0, [fp, #-2808]	; 0xfffff508
   41844:	str	r3, [fp, #-2812]	; 0xfffff504
   41848:	blt	41ad8 <__assert_fail@plt+0x2ef20>
   4184c:	b	41b40 <__assert_fail@plt+0x2ef88>
   41850:	ldr	r0, [fp, #-728]	; 0xfffffd28
   41854:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   41858:	mov	r2, #0
   4185c:	subs	r3, r0, #1
   41860:	sbcs	ip, r1, #0
   41864:	str	r0, [fp, #-2816]	; 0xfffff500
   41868:	str	r1, [fp, #-2820]	; 0xfffff4fc
   4186c:	str	ip, [fp, #-2824]	; 0xfffff4f8
   41870:	str	r3, [fp, #-2828]	; 0xfffff4f4
   41874:	str	r2, [fp, #-2832]	; 0xfffff4f0
   41878:	blt	41898 <__assert_fail@plt+0x2ece0>
   4187c:	b	41880 <__assert_fail@plt+0x2ecc8>
   41880:	ldr	r0, [fp, #-52]	; 0xffffffcc
   41884:	ldr	r1, [fp, #-720]	; 0xfffffd30
   41888:	cmp	r0, r1
   4188c:	movw	r0, #0
   41890:	movne	r0, #1
   41894:	str	r0, [fp, #-2832]	; 0xfffff4f0
   41898:	ldr	r0, [fp, #-2832]	; 0xfffff4f0
   4189c:	and	r0, r0, #1
   418a0:	ldr	r1, [fp, #-2816]	; 0xfffff500
   418a4:	subs	r0, r1, r0
   418a8:	ldr	r2, [fp, #-2820]	; 0xfffff4fc
   418ac:	sbc	r3, r2, #0
   418b0:	movw	ip, #56174	; 0xdb6e
   418b4:	movt	ip, #60854	; 0xedb6
   418b8:	subs	r0, ip, r0
   418bc:	mvn	ip, #0
   418c0:	sbcs	r3, ip, r3
   418c4:	str	r0, [fp, #-2836]	; 0xfffff4ec
   418c8:	str	r3, [fp, #-2840]	; 0xfffff4e8
   418cc:	blt	41ad8 <__assert_fail@plt+0x2ef20>
   418d0:	b	41b40 <__assert_fail@plt+0x2ef88>
   418d4:	b	418dc <__assert_fail@plt+0x2ed24>
   418d8:	b	41b40 <__assert_fail@plt+0x2ef88>
   418dc:	ldr	r0, [fp, #-728]	; 0xfffffd28
   418e0:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   418e4:	mov	r2, #0
   418e8:	subs	r3, r0, #1
   418ec:	sbcs	ip, r1, #0
   418f0:	str	r0, [fp, #-2844]	; 0xfffff4e4
   418f4:	str	r1, [fp, #-2848]	; 0xfffff4e0
   418f8:	str	ip, [fp, #-2852]	; 0xfffff4dc
   418fc:	str	r3, [fp, #-2856]	; 0xfffff4d8
   41900:	str	r2, [fp, #-2860]	; 0xfffff4d4
   41904:	blt	41924 <__assert_fail@plt+0x2ed6c>
   41908:	b	4190c <__assert_fail@plt+0x2ed54>
   4190c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   41910:	ldr	r1, [fp, #-720]	; 0xfffffd30
   41914:	cmp	r0, r1
   41918:	movw	r0, #0
   4191c:	movne	r0, #1
   41920:	str	r0, [fp, #-2860]	; 0xfffff4d4
   41924:	ldr	r0, [fp, #-2860]	; 0xfffff4d4
   41928:	and	r0, r0, #1
   4192c:	ldr	r1, [fp, #-2844]	; 0xfffff4e4
   41930:	subs	r0, r1, r0
   41934:	ldr	r2, [fp, #-2848]	; 0xfffff4e0
   41938:	sbc	r3, r2, #0
   4193c:	cmn	r3, #1
   41940:	str	r0, [fp, #-2864]	; 0xfffff4d0
   41944:	bgt	41a58 <__assert_fail@plt+0x2eea0>
   41948:	b	4194c <__assert_fail@plt+0x2ed94>
   4194c:	b	41950 <__assert_fail@plt+0x2ed98>
   41950:	b	419d4 <__assert_fail@plt+0x2ee1c>
   41954:	b	419d4 <__assert_fail@plt+0x2ee1c>
   41958:	ldr	r0, [fp, #-728]	; 0xfffffd28
   4195c:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   41960:	mov	r2, #0
   41964:	subs	r3, r0, #1
   41968:	sbcs	ip, r1, #0
   4196c:	str	r0, [fp, #-2868]	; 0xfffff4cc
   41970:	str	r1, [fp, #-2872]	; 0xfffff4c8
   41974:	str	ip, [fp, #-2876]	; 0xfffff4c4
   41978:	str	r3, [fp, #-2880]	; 0xfffff4c0
   4197c:	str	r2, [fp, #-2884]	; 0xfffff4bc
   41980:	blt	419a0 <__assert_fail@plt+0x2ede8>
   41984:	b	41988 <__assert_fail@plt+0x2edd0>
   41988:	ldr	r0, [fp, #-52]	; 0xffffffcc
   4198c:	ldr	r1, [fp, #-720]	; 0xfffffd30
   41990:	cmp	r0, r1
   41994:	movw	r0, #0
   41998:	movne	r0, #1
   4199c:	str	r0, [fp, #-2884]	; 0xfffff4bc
   419a0:	ldr	r0, [fp, #-2884]	; 0xfffff4bc
   419a4:	and	r0, r0, #1
   419a8:	ldr	r1, [fp, #-2868]	; 0xfffff4cc
   419ac:	subs	r0, r1, r0
   419b0:	ldr	r2, [fp, #-2872]	; 0xfffff4c8
   419b4:	sbc	r3, r2, #0
   419b8:	and	r0, r0, r3
   419bc:	cmn	r0, #1
   419c0:	bne	419d4 <__assert_fail@plt+0x2ee1c>
   419c4:	b	419c8 <__assert_fail@plt+0x2ee10>
   419c8:	b	419cc <__assert_fail@plt+0x2ee14>
   419cc:	b	41b40 <__assert_fail@plt+0x2ef88>
   419d0:	b	41b40 <__assert_fail@plt+0x2ef88>
   419d4:	ldr	r0, [fp, #-728]	; 0xfffffd28
   419d8:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   419dc:	mov	r2, #0
   419e0:	subs	r3, r0, #1
   419e4:	sbcs	ip, r1, #0
   419e8:	str	r0, [fp, #-2888]	; 0xfffff4b8
   419ec:	str	r1, [fp, #-2892]	; 0xfffff4b4
   419f0:	str	ip, [fp, #-2896]	; 0xfffff4b0
   419f4:	str	r3, [fp, #-2900]	; 0xfffff4ac
   419f8:	str	r2, [fp, #-2904]	; 0xfffff4a8
   419fc:	blt	41a1c <__assert_fail@plt+0x2ee64>
   41a00:	b	41a04 <__assert_fail@plt+0x2ee4c>
   41a04:	ldr	r0, [fp, #-52]	; 0xffffffcc
   41a08:	ldr	r1, [fp, #-720]	; 0xfffffd30
   41a0c:	cmp	r0, r1
   41a10:	movw	r0, #0
   41a14:	movne	r0, #1
   41a18:	str	r0, [fp, #-2904]	; 0xfffff4a8
   41a1c:	ldr	r0, [fp, #-2904]	; 0xfffff4a8
   41a20:	and	r0, r0, #1
   41a24:	ldr	r1, [fp, #-2888]	; 0xfffff4b8
   41a28:	subs	r2, r1, r0
   41a2c:	ldr	r0, [fp, #-2892]	; 0xfffff4b4
   41a30:	sbc	r3, r0, #0
   41a34:	mov	r0, #-2147483648	; 0x80000000
   41a38:	mvn	r1, #0
   41a3c:	bl	77780 <__assert_fail@plt+0x64bc8>
   41a40:	subs	r0, r0, #7
   41a44:	sbcs	r1, r1, #0
   41a48:	str	r0, [fp, #-2908]	; 0xfffff4a4
   41a4c:	str	r1, [fp, #-2912]	; 0xfffff4a0
   41a50:	blt	41ad8 <__assert_fail@plt+0x2ef20>
   41a54:	b	41b40 <__assert_fail@plt+0x2ef88>
   41a58:	ldr	r0, [fp, #-728]	; 0xfffffd28
   41a5c:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   41a60:	mov	r2, #0
   41a64:	subs	r3, r0, #1
   41a68:	sbcs	ip, r1, #0
   41a6c:	str	r0, [fp, #-2916]	; 0xfffff49c
   41a70:	str	r1, [fp, #-2920]	; 0xfffff498
   41a74:	str	ip, [fp, #-2924]	; 0xfffff494
   41a78:	str	r3, [fp, #-2928]	; 0xfffff490
   41a7c:	str	r2, [fp, #-2932]	; 0xfffff48c
   41a80:	blt	41aa0 <__assert_fail@plt+0x2eee8>
   41a84:	b	41a88 <__assert_fail@plt+0x2eed0>
   41a88:	ldr	r0, [fp, #-52]	; 0xffffffcc
   41a8c:	ldr	r1, [fp, #-720]	; 0xfffffd30
   41a90:	cmp	r0, r1
   41a94:	movw	r0, #0
   41a98:	movne	r0, #1
   41a9c:	str	r0, [fp, #-2932]	; 0xfffff48c
   41aa0:	ldr	r0, [fp, #-2932]	; 0xfffff48c
   41aa4:	and	r0, r0, #1
   41aa8:	ldr	r1, [fp, #-2916]	; 0xfffff49c
   41aac:	subs	r0, r1, r0
   41ab0:	ldr	r2, [fp, #-2920]	; 0xfffff498
   41ab4:	sbc	r3, r2, #0
   41ab8:	movw	ip, #9363	; 0x2493
   41abc:	movt	ip, #4681	; 0x1249
   41ac0:	subs	r0, r0, ip
   41ac4:	sbcs	r3, r3, #0
   41ac8:	str	r0, [fp, #-2936]	; 0xfffff488
   41acc:	str	r3, [fp, #-2940]	; 0xfffff484
   41ad0:	blt	41b40 <__assert_fail@plt+0x2ef88>
   41ad4:	b	41ad8 <__assert_fail@plt+0x2ef20>
   41ad8:	ldr	r0, [fp, #-728]	; 0xfffffd28
   41adc:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   41ae0:	mov	r2, #0
   41ae4:	subs	r3, r0, #1
   41ae8:	sbcs	r1, r1, #0
   41aec:	str	r0, [fp, #-2944]	; 0xfffff480
   41af0:	str	r3, [fp, #-2948]	; 0xfffff47c
   41af4:	str	r1, [fp, #-2952]	; 0xfffff478
   41af8:	str	r2, [fp, #-2956]	; 0xfffff474
   41afc:	blt	41b1c <__assert_fail@plt+0x2ef64>
   41b00:	b	41b04 <__assert_fail@plt+0x2ef4c>
   41b04:	ldr	r0, [fp, #-52]	; 0xffffffcc
   41b08:	ldr	r1, [fp, #-720]	; 0xfffffd30
   41b0c:	cmp	r0, r1
   41b10:	movw	r0, #0
   41b14:	movne	r0, #1
   41b18:	str	r0, [fp, #-2956]	; 0xfffff474
   41b1c:	ldr	r0, [fp, #-2956]	; 0xfffff474
   41b20:	and	r0, r0, #1
   41b24:	ldr	r1, [fp, #-2944]	; 0xfffff480
   41b28:	sub	r0, r1, r0
   41b2c:	rsb	r0, r0, r0, lsl #3
   41b30:	asr	r2, r0, #31
   41b34:	str	r0, [fp, #-936]	; 0xfffffc58
   41b38:	str	r2, [fp, #-932]	; 0xfffffc5c
   41b3c:	b	43c6c <__assert_fail@plt+0x310b4>
   41b40:	ldr	r0, [fp, #-728]	; 0xfffffd28
   41b44:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   41b48:	mov	r2, #0
   41b4c:	subs	r3, r0, #1
   41b50:	sbcs	r1, r1, #0
   41b54:	str	r0, [fp, #-2960]	; 0xfffff470
   41b58:	str	r3, [fp, #-2964]	; 0xfffff46c
   41b5c:	str	r1, [fp, #-2968]	; 0xfffff468
   41b60:	str	r2, [fp, #-2972]	; 0xfffff464
   41b64:	blt	41b84 <__assert_fail@plt+0x2efcc>
   41b68:	b	41b6c <__assert_fail@plt+0x2efb4>
   41b6c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   41b70:	ldr	r1, [fp, #-720]	; 0xfffffd30
   41b74:	cmp	r0, r1
   41b78:	movw	r0, #0
   41b7c:	movne	r0, #1
   41b80:	str	r0, [fp, #-2972]	; 0xfffff464
   41b84:	ldr	r0, [fp, #-2972]	; 0xfffff464
   41b88:	and	r0, r0, #1
   41b8c:	ldr	r1, [fp, #-2960]	; 0xfffff470
   41b90:	sub	r0, r1, r0
   41b94:	rsb	r0, r0, r0, lsl #3
   41b98:	asr	r2, r0, #31
   41b9c:	str	r0, [fp, #-936]	; 0xfffffc58
   41ba0:	str	r2, [fp, #-932]	; 0xfffffc5c
   41ba4:	b	43b68 <__assert_fail@plt+0x30fb0>
   41ba8:	b	41f14 <__assert_fail@plt+0x2f35c>
   41bac:	ldr	r0, [fp, #-728]	; 0xfffffd28
   41bb0:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   41bb4:	mov	r2, #0
   41bb8:	subs	r3, r0, #1
   41bbc:	sbcs	ip, r1, #0
   41bc0:	str	r0, [fp, #-2976]	; 0xfffff460
   41bc4:	str	r1, [fp, #-2980]	; 0xfffff45c
   41bc8:	str	ip, [sp, #2984]	; 0xba8
   41bcc:	str	r3, [sp, #2980]	; 0xba4
   41bd0:	str	r2, [sp, #2976]	; 0xba0
   41bd4:	blt	41bf4 <__assert_fail@plt+0x2f03c>
   41bd8:	b	41bdc <__assert_fail@plt+0x2f024>
   41bdc:	ldr	r0, [fp, #-52]	; 0xffffffcc
   41be0:	ldr	r1, [fp, #-720]	; 0xfffffd30
   41be4:	cmp	r0, r1
   41be8:	movw	r0, #0
   41bec:	movne	r0, #1
   41bf0:	str	r0, [sp, #2976]	; 0xba0
   41bf4:	ldr	r0, [sp, #2976]	; 0xba0
   41bf8:	and	r0, r0, #1
   41bfc:	ldr	r1, [fp, #-2976]	; 0xfffff460
   41c00:	subs	r0, r1, r0
   41c04:	ldr	r2, [fp, #-2980]	; 0xfffff45c
   41c08:	sbc	r3, r2, #0
   41c0c:	cmn	r3, #1
   41c10:	str	r0, [sp, #2972]	; 0xb9c
   41c14:	bgt	41d20 <__assert_fail@plt+0x2f168>
   41c18:	b	41c1c <__assert_fail@plt+0x2f064>
   41c1c:	b	41ca0 <__assert_fail@plt+0x2f0e8>
   41c20:	ldr	r0, [fp, #-728]	; 0xfffffd28
   41c24:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   41c28:	mov	r2, #0
   41c2c:	subs	r3, r0, #1
   41c30:	sbcs	ip, r1, #0
   41c34:	str	r0, [sp, #2968]	; 0xb98
   41c38:	str	r1, [sp, #2964]	; 0xb94
   41c3c:	str	ip, [sp, #2960]	; 0xb90
   41c40:	str	r3, [sp, #2956]	; 0xb8c
   41c44:	str	r2, [sp, #2952]	; 0xb88
   41c48:	blt	41c68 <__assert_fail@plt+0x2f0b0>
   41c4c:	b	41c50 <__assert_fail@plt+0x2f098>
   41c50:	ldr	r0, [fp, #-52]	; 0xffffffcc
   41c54:	ldr	r1, [fp, #-720]	; 0xfffffd30
   41c58:	cmp	r0, r1
   41c5c:	movw	r0, #0
   41c60:	movne	r0, #1
   41c64:	str	r0, [sp, #2952]	; 0xb88
   41c68:	ldr	r0, [sp, #2952]	; 0xb88
   41c6c:	and	r0, r0, #1
   41c70:	ldr	r1, [sp, #2968]	; 0xb98
   41c74:	subs	r0, r1, r0
   41c78:	ldr	r2, [sp, #2964]	; 0xb94
   41c7c:	sbc	r3, r2, #0
   41c80:	movw	ip, #18724	; 0x4924
   41c84:	movt	ip, #9362	; 0x2492
   41c88:	subs	r0, r0, ip
   41c8c:	sbcs	r3, r3, #0
   41c90:	str	r0, [sp, #2948]	; 0xb84
   41c94:	str	r3, [sp, #2944]	; 0xb80
   41c98:	blt	4211c <__assert_fail@plt+0x2f564>
   41c9c:	b	42184 <__assert_fail@plt+0x2f5cc>
   41ca0:	ldr	r0, [fp, #-728]	; 0xfffffd28
   41ca4:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   41ca8:	mov	r2, #0
   41cac:	subs	r3, r0, #1
   41cb0:	sbcs	ip, r1, #0
   41cb4:	str	r0, [sp, #2940]	; 0xb7c
   41cb8:	str	r1, [sp, #2936]	; 0xb78
   41cbc:	str	ip, [sp, #2932]	; 0xb74
   41cc0:	str	r3, [sp, #2928]	; 0xb70
   41cc4:	str	r2, [sp, #2924]	; 0xb6c
   41cc8:	blt	41ce8 <__assert_fail@plt+0x2f130>
   41ccc:	b	41cd0 <__assert_fail@plt+0x2f118>
   41cd0:	ldr	r0, [fp, #-52]	; 0xffffffcc
   41cd4:	ldr	r1, [fp, #-720]	; 0xfffffd30
   41cd8:	cmp	r0, r1
   41cdc:	movw	r0, #0
   41ce0:	movne	r0, #1
   41ce4:	str	r0, [sp, #2924]	; 0xb6c
   41ce8:	ldr	r0, [sp, #2924]	; 0xb6c
   41cec:	and	r0, r0, #1
   41cf0:	ldr	r1, [sp, #2940]	; 0xb7c
   41cf4:	subs	r0, r1, r0
   41cf8:	ldr	r2, [sp, #2936]	; 0xb78
   41cfc:	sbc	r3, r2, #0
   41d00:	mvn	r3, r3
   41d04:	mvn	r0, r0
   41d08:	rsbs	r0, r0, #0
   41d0c:	rscs	r3, r3, #0
   41d10:	str	r0, [sp, #2920]	; 0xb68
   41d14:	str	r3, [sp, #2916]	; 0xb64
   41d18:	blt	4211c <__assert_fail@plt+0x2f564>
   41d1c:	b	42184 <__assert_fail@plt+0x2f5cc>
   41d20:	b	41d24 <__assert_fail@plt+0x2f16c>
   41d24:	b	41e9c <__assert_fail@plt+0x2f2e4>
   41d28:	b	41e9c <__assert_fail@plt+0x2f2e4>
   41d2c:	b	41e9c <__assert_fail@plt+0x2f2e4>
   41d30:	b	41d34 <__assert_fail@plt+0x2f17c>
   41d34:	ldr	r0, [fp, #-728]	; 0xfffffd28
   41d38:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   41d3c:	mov	r2, #0
   41d40:	subs	r3, r0, #1
   41d44:	sbcs	ip, r1, #0
   41d48:	str	r0, [sp, #2912]	; 0xb60
   41d4c:	str	r1, [sp, #2908]	; 0xb5c
   41d50:	str	ip, [sp, #2904]	; 0xb58
   41d54:	str	r3, [sp, #2900]	; 0xb54
   41d58:	str	r2, [sp, #2896]	; 0xb50
   41d5c:	blt	41d7c <__assert_fail@plt+0x2f1c4>
   41d60:	b	41d64 <__assert_fail@plt+0x2f1ac>
   41d64:	ldr	r0, [fp, #-52]	; 0xffffffcc
   41d68:	ldr	r1, [fp, #-720]	; 0xfffffd30
   41d6c:	cmp	r0, r1
   41d70:	movw	r0, #0
   41d74:	movne	r0, #1
   41d78:	str	r0, [sp, #2896]	; 0xb50
   41d7c:	ldr	r0, [sp, #2896]	; 0xb50
   41d80:	and	r0, r0, #1
   41d84:	ldr	r1, [sp, #2912]	; 0xb60
   41d88:	subs	r0, r1, r0
   41d8c:	ldr	r2, [sp, #2908]	; 0xb5c
   41d90:	sbc	r3, r2, #0
   41d94:	rsbs	r0, r0, #0
   41d98:	rscs	r3, r3, #0
   41d9c:	str	r0, [sp, #2892]	; 0xb4c
   41da0:	str	r3, [sp, #2888]	; 0xb48
   41da4:	blt	4211c <__assert_fail@plt+0x2f564>
   41da8:	b	42184 <__assert_fail@plt+0x2f5cc>
   41dac:	ldr	r0, [fp, #-728]	; 0xfffffd28
   41db0:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   41db4:	mov	r2, #0
   41db8:	subs	r3, r0, #1
   41dbc:	sbcs	ip, r1, #0
   41dc0:	str	r0, [sp, #2884]	; 0xb44
   41dc4:	str	r1, [sp, #2880]	; 0xb40
   41dc8:	str	ip, [sp, #2876]	; 0xb3c
   41dcc:	str	r3, [sp, #2872]	; 0xb38
   41dd0:	str	r2, [sp, #2868]	; 0xb34
   41dd4:	blt	41df4 <__assert_fail@plt+0x2f23c>
   41dd8:	b	41ddc <__assert_fail@plt+0x2f224>
   41ddc:	ldr	r0, [fp, #-52]	; 0xffffffcc
   41de0:	ldr	r1, [fp, #-720]	; 0xfffffd30
   41de4:	cmp	r0, r1
   41de8:	movw	r0, #0
   41dec:	movne	r0, #1
   41df0:	str	r0, [sp, #2868]	; 0xb34
   41df4:	ldr	r0, [sp, #2868]	; 0xb34
   41df8:	and	r0, r0, #1
   41dfc:	ldr	r1, [sp, #2884]	; 0xb44
   41e00:	subs	r0, r1, r0
   41e04:	ldr	r2, [sp, #2880]	; 0xb40
   41e08:	sbc	r3, r2, #0
   41e0c:	subs	r0, r0, #1
   41e10:	sbcs	r3, r3, #0
   41e14:	str	r0, [sp, #2864]	; 0xb30
   41e18:	str	r3, [sp, #2860]	; 0xb2c
   41e1c:	blt	42184 <__assert_fail@plt+0x2f5cc>
   41e20:	b	41e24 <__assert_fail@plt+0x2f26c>
   41e24:	ldr	r0, [fp, #-728]	; 0xfffffd28
   41e28:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   41e2c:	mov	r2, #0
   41e30:	subs	r3, r0, #1
   41e34:	sbcs	ip, r1, #0
   41e38:	str	r0, [sp, #2856]	; 0xb28
   41e3c:	str	r1, [sp, #2852]	; 0xb24
   41e40:	str	ip, [sp, #2848]	; 0xb20
   41e44:	str	r3, [sp, #2844]	; 0xb1c
   41e48:	str	r2, [sp, #2840]	; 0xb18
   41e4c:	blt	41e6c <__assert_fail@plt+0x2f2b4>
   41e50:	b	41e54 <__assert_fail@plt+0x2f29c>
   41e54:	ldr	r0, [fp, #-52]	; 0xffffffcc
   41e58:	ldr	r1, [fp, #-720]	; 0xfffffd30
   41e5c:	cmp	r0, r1
   41e60:	movw	r0, #0
   41e64:	movne	r0, #1
   41e68:	str	r0, [sp, #2840]	; 0xb18
   41e6c:	ldr	r0, [sp, #2840]	; 0xb18
   41e70:	and	r0, r0, #1
   41e74:	ldr	r1, [sp, #2856]	; 0xb28
   41e78:	subs	r0, r1, r0
   41e7c:	ldr	r2, [sp, #2852]	; 0xb24
   41e80:	sbc	r3, r2, #0
   41e84:	subs	r0, r0, #1
   41e88:	sbc	r3, r3, #0
   41e8c:	cmn	r3, #1
   41e90:	str	r0, [sp, #2836]	; 0xb14
   41e94:	bgt	4211c <__assert_fail@plt+0x2f564>
   41e98:	b	42184 <__assert_fail@plt+0x2f5cc>
   41e9c:	ldr	r0, [fp, #-728]	; 0xfffffd28
   41ea0:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   41ea4:	mov	r2, #0
   41ea8:	subs	r3, r0, #1
   41eac:	sbcs	ip, r1, #0
   41eb0:	str	r0, [sp, #2832]	; 0xb10
   41eb4:	str	r1, [sp, #2828]	; 0xb0c
   41eb8:	str	ip, [sp, #2824]	; 0xb08
   41ebc:	str	r3, [sp, #2820]	; 0xb04
   41ec0:	str	r2, [sp, #2816]	; 0xb00
   41ec4:	blt	41ee4 <__assert_fail@plt+0x2f32c>
   41ec8:	b	41ecc <__assert_fail@plt+0x2f314>
   41ecc:	ldr	r0, [fp, #-52]	; 0xffffffcc
   41ed0:	ldr	r1, [fp, #-720]	; 0xfffffd30
   41ed4:	cmp	r0, r1
   41ed8:	movw	r0, #0
   41edc:	movne	r0, #1
   41ee0:	str	r0, [sp, #2816]	; 0xb00
   41ee4:	ldr	r0, [sp, #2816]	; 0xb00
   41ee8:	and	r0, r0, #1
   41eec:	ldr	r1, [sp, #2832]	; 0xb10
   41ef0:	subs	r0, r1, r0
   41ef4:	ldr	r2, [sp, #2828]	; 0xb0c
   41ef8:	sbc	r3, r2, #0
   41efc:	rsbs	r0, r0, #0
   41f00:	rscs	r3, r3, #0
   41f04:	str	r0, [sp, #2812]	; 0xafc
   41f08:	str	r3, [sp, #2808]	; 0xaf8
   41f0c:	blt	4211c <__assert_fail@plt+0x2f564>
   41f10:	b	42184 <__assert_fail@plt+0x2f5cc>
   41f14:	b	41f1c <__assert_fail@plt+0x2f364>
   41f18:	b	42184 <__assert_fail@plt+0x2f5cc>
   41f1c:	ldr	r0, [fp, #-728]	; 0xfffffd28
   41f20:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   41f24:	mov	r2, #0
   41f28:	subs	r3, r0, #1
   41f2c:	sbcs	ip, r1, #0
   41f30:	str	r0, [sp, #2804]	; 0xaf4
   41f34:	str	r1, [sp, #2800]	; 0xaf0
   41f38:	str	ip, [sp, #2796]	; 0xaec
   41f3c:	str	r3, [sp, #2792]	; 0xae8
   41f40:	str	r2, [sp, #2788]	; 0xae4
   41f44:	blt	41f64 <__assert_fail@plt+0x2f3ac>
   41f48:	b	41f4c <__assert_fail@plt+0x2f394>
   41f4c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   41f50:	ldr	r1, [fp, #-720]	; 0xfffffd30
   41f54:	cmp	r0, r1
   41f58:	movw	r0, #0
   41f5c:	movne	r0, #1
   41f60:	str	r0, [sp, #2788]	; 0xae4
   41f64:	ldr	r0, [sp, #2788]	; 0xae4
   41f68:	and	r0, r0, #1
   41f6c:	ldr	r1, [sp, #2804]	; 0xaf4
   41f70:	subs	r0, r1, r0
   41f74:	ldr	r2, [sp, #2800]	; 0xaf0
   41f78:	sbc	r3, r2, #0
   41f7c:	cmn	r3, #1
   41f80:	str	r0, [sp, #2784]	; 0xae0
   41f84:	bgt	4209c <__assert_fail@plt+0x2f4e4>
   41f88:	b	41f8c <__assert_fail@plt+0x2f3d4>
   41f8c:	b	41f90 <__assert_fail@plt+0x2f3d8>
   41f90:	b	42014 <__assert_fail@plt+0x2f45c>
   41f94:	b	42014 <__assert_fail@plt+0x2f45c>
   41f98:	ldr	r0, [fp, #-728]	; 0xfffffd28
   41f9c:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   41fa0:	mov	r2, #0
   41fa4:	subs	r3, r0, #1
   41fa8:	sbcs	ip, r1, #0
   41fac:	str	r0, [sp, #2780]	; 0xadc
   41fb0:	str	r1, [sp, #2776]	; 0xad8
   41fb4:	str	ip, [sp, #2772]	; 0xad4
   41fb8:	str	r3, [sp, #2768]	; 0xad0
   41fbc:	str	r2, [sp, #2764]	; 0xacc
   41fc0:	blt	41fe0 <__assert_fail@plt+0x2f428>
   41fc4:	b	41fc8 <__assert_fail@plt+0x2f410>
   41fc8:	ldr	r0, [fp, #-52]	; 0xffffffcc
   41fcc:	ldr	r1, [fp, #-720]	; 0xfffffd30
   41fd0:	cmp	r0, r1
   41fd4:	movw	r0, #0
   41fd8:	movne	r0, #1
   41fdc:	str	r0, [sp, #2764]	; 0xacc
   41fe0:	ldr	r0, [sp, #2764]	; 0xacc
   41fe4:	and	r0, r0, #1
   41fe8:	ldr	r1, [sp, #2780]	; 0xadc
   41fec:	subs	r0, r1, r0
   41ff0:	ldr	r2, [sp, #2776]	; 0xad8
   41ff4:	sbc	r3, r2, #0
   41ff8:	and	r0, r0, r3
   41ffc:	cmn	r0, #1
   42000:	bne	42014 <__assert_fail@plt+0x2f45c>
   42004:	b	42008 <__assert_fail@plt+0x2f450>
   42008:	b	4200c <__assert_fail@plt+0x2f454>
   4200c:	b	4211c <__assert_fail@plt+0x2f564>
   42010:	b	4211c <__assert_fail@plt+0x2f564>
   42014:	ldr	r0, [fp, #-728]	; 0xfffffd28
   42018:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   4201c:	mov	r2, #0
   42020:	subs	r3, r0, #1
   42024:	sbcs	ip, r1, #0
   42028:	str	r0, [sp, #2760]	; 0xac8
   4202c:	str	r1, [sp, #2756]	; 0xac4
   42030:	str	ip, [sp, #2752]	; 0xac0
   42034:	str	r3, [sp, #2748]	; 0xabc
   42038:	str	r2, [sp, #2744]	; 0xab8
   4203c:	blt	4205c <__assert_fail@plt+0x2f4a4>
   42040:	b	42044 <__assert_fail@plt+0x2f48c>
   42044:	ldr	r0, [fp, #-52]	; 0xffffffcc
   42048:	ldr	r1, [fp, #-720]	; 0xfffffd30
   4204c:	cmp	r0, r1
   42050:	movw	r0, #0
   42054:	movne	r0, #1
   42058:	str	r0, [sp, #2744]	; 0xab8
   4205c:	ldr	r0, [sp, #2744]	; 0xab8
   42060:	and	r0, r0, #1
   42064:	ldr	r1, [sp, #2760]	; 0xac8
   42068:	subs	r2, r1, r0
   4206c:	ldr	r0, [sp, #2756]	; 0xac4
   42070:	sbc	r3, r0, #0
   42074:	mov	ip, #0
   42078:	mov	r0, ip
   4207c:	mov	r1, ip
   42080:	bl	77780 <__assert_fail@plt+0x64bc8>
   42084:	subs	r0, r0, #7
   42088:	sbcs	r1, r1, #0
   4208c:	str	r0, [sp, #2740]	; 0xab4
   42090:	str	r1, [sp, #2736]	; 0xab0
   42094:	blt	4211c <__assert_fail@plt+0x2f564>
   42098:	b	42184 <__assert_fail@plt+0x2f5cc>
   4209c:	ldr	r0, [fp, #-728]	; 0xfffffd28
   420a0:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   420a4:	mov	r2, #0
   420a8:	subs	r3, r0, #1
   420ac:	sbcs	ip, r1, #0
   420b0:	str	r0, [sp, #2732]	; 0xaac
   420b4:	str	r1, [sp, #2728]	; 0xaa8
   420b8:	str	ip, [sp, #2724]	; 0xaa4
   420bc:	str	r3, [sp, #2720]	; 0xaa0
   420c0:	str	r2, [sp, #2716]	; 0xa9c
   420c4:	blt	420e4 <__assert_fail@plt+0x2f52c>
   420c8:	b	420cc <__assert_fail@plt+0x2f514>
   420cc:	ldr	r0, [fp, #-52]	; 0xffffffcc
   420d0:	ldr	r1, [fp, #-720]	; 0xfffffd30
   420d4:	cmp	r0, r1
   420d8:	movw	r0, #0
   420dc:	movne	r0, #1
   420e0:	str	r0, [sp, #2716]	; 0xa9c
   420e4:	ldr	r0, [sp, #2716]	; 0xa9c
   420e8:	and	r0, r0, #1
   420ec:	ldr	r1, [sp, #2732]	; 0xaac
   420f0:	subs	r0, r1, r0
   420f4:	ldr	r2, [sp, #2728]	; 0xaa8
   420f8:	sbc	r3, r2, #0
   420fc:	movw	ip, #18725	; 0x4925
   42100:	movt	ip, #9362	; 0x2492
   42104:	subs	r0, r0, ip
   42108:	sbcs	r3, r3, #0
   4210c:	str	r0, [sp, #2712]	; 0xa98
   42110:	str	r3, [sp, #2708]	; 0xa94
   42114:	blt	42184 <__assert_fail@plt+0x2f5cc>
   42118:	b	4211c <__assert_fail@plt+0x2f564>
   4211c:	ldr	r0, [fp, #-728]	; 0xfffffd28
   42120:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   42124:	mov	r2, #0
   42128:	subs	r3, r0, #1
   4212c:	sbcs	r1, r1, #0
   42130:	str	r0, [sp, #2704]	; 0xa90
   42134:	str	r3, [sp, #2700]	; 0xa8c
   42138:	str	r1, [sp, #2696]	; 0xa88
   4213c:	str	r2, [sp, #2692]	; 0xa84
   42140:	blt	42160 <__assert_fail@plt+0x2f5a8>
   42144:	b	42148 <__assert_fail@plt+0x2f590>
   42148:	ldr	r0, [fp, #-52]	; 0xffffffcc
   4214c:	ldr	r1, [fp, #-720]	; 0xfffffd30
   42150:	cmp	r0, r1
   42154:	movw	r0, #0
   42158:	movne	r0, #1
   4215c:	str	r0, [sp, #2692]	; 0xa84
   42160:	ldr	r0, [sp, #2692]	; 0xa84
   42164:	and	r0, r0, #1
   42168:	ldr	r1, [sp, #2704]	; 0xa90
   4216c:	sub	r0, r1, r0
   42170:	rsb	r0, r0, r0, lsl #3
   42174:	mov	r2, #0
   42178:	str	r2, [fp, #-932]	; 0xfffffc5c
   4217c:	str	r0, [fp, #-936]	; 0xfffffc58
   42180:	b	43c6c <__assert_fail@plt+0x310b4>
   42184:	ldr	r0, [fp, #-728]	; 0xfffffd28
   42188:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   4218c:	mov	r2, #0
   42190:	subs	r3, r0, #1
   42194:	sbcs	r1, r1, #0
   42198:	str	r0, [sp, #2688]	; 0xa80
   4219c:	str	r3, [sp, #2684]	; 0xa7c
   421a0:	str	r1, [sp, #2680]	; 0xa78
   421a4:	str	r2, [sp, #2676]	; 0xa74
   421a8:	blt	421c8 <__assert_fail@plt+0x2f610>
   421ac:	b	421b0 <__assert_fail@plt+0x2f5f8>
   421b0:	ldr	r0, [fp, #-52]	; 0xffffffcc
   421b4:	ldr	r1, [fp, #-720]	; 0xfffffd30
   421b8:	cmp	r0, r1
   421bc:	movw	r0, #0
   421c0:	movne	r0, #1
   421c4:	str	r0, [sp, #2676]	; 0xa74
   421c8:	ldr	r0, [sp, #2676]	; 0xa74
   421cc:	and	r0, r0, #1
   421d0:	ldr	r1, [sp, #2688]	; 0xa80
   421d4:	sub	r0, r1, r0
   421d8:	rsb	r0, r0, r0, lsl #3
   421dc:	mov	r2, #0
   421e0:	str	r2, [fp, #-932]	; 0xfffffc5c
   421e4:	str	r0, [fp, #-936]	; 0xfffffc58
   421e8:	b	43b68 <__assert_fail@plt+0x30fb0>
   421ec:	b	42e98 <__assert_fail@plt+0x302e0>
   421f0:	b	421f4 <__assert_fail@plt+0x2f63c>
   421f4:	b	42580 <__assert_fail@plt+0x2f9c8>
   421f8:	ldr	r0, [fp, #-728]	; 0xfffffd28
   421fc:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   42200:	mov	r2, #0
   42204:	subs	r3, r0, #1
   42208:	sbcs	ip, r1, #0
   4220c:	str	r0, [sp, #2672]	; 0xa70
   42210:	str	r1, [sp, #2668]	; 0xa6c
   42214:	str	ip, [sp, #2664]	; 0xa68
   42218:	str	r3, [sp, #2660]	; 0xa64
   4221c:	str	r2, [sp, #2656]	; 0xa60
   42220:	blt	42240 <__assert_fail@plt+0x2f688>
   42224:	b	42228 <__assert_fail@plt+0x2f670>
   42228:	ldr	r0, [fp, #-52]	; 0xffffffcc
   4222c:	ldr	r1, [fp, #-720]	; 0xfffffd30
   42230:	cmp	r0, r1
   42234:	movw	r0, #0
   42238:	movne	r0, #1
   4223c:	str	r0, [sp, #2656]	; 0xa60
   42240:	ldr	r0, [sp, #2656]	; 0xa60
   42244:	and	r0, r0, #1
   42248:	ldr	r1, [sp, #2672]	; 0xa70
   4224c:	subs	r0, r1, r0
   42250:	ldr	r2, [sp, #2668]	; 0xa6c
   42254:	sbc	r3, r2, #0
   42258:	cmn	r3, #1
   4225c:	str	r0, [sp, #2652]	; 0xa5c
   42260:	bgt	42378 <__assert_fail@plt+0x2f7c0>
   42264:	b	42268 <__assert_fail@plt+0x2f6b0>
   42268:	b	4226c <__assert_fail@plt+0x2f6b4>
   4226c:	ldr	r0, [fp, #-728]	; 0xfffffd28
   42270:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   42274:	mov	r2, #0
   42278:	subs	r3, r0, #1
   4227c:	sbcs	ip, r1, #0
   42280:	str	r0, [sp, #2648]	; 0xa58
   42284:	str	r1, [sp, #2644]	; 0xa54
   42288:	str	ip, [sp, #2640]	; 0xa50
   4228c:	str	r3, [sp, #2636]	; 0xa4c
   42290:	str	r2, [sp, #2632]	; 0xa48
   42294:	blt	422b4 <__assert_fail@plt+0x2f6fc>
   42298:	b	4229c <__assert_fail@plt+0x2f6e4>
   4229c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   422a0:	ldr	r1, [fp, #-720]	; 0xfffffd30
   422a4:	cmp	r0, r1
   422a8:	movw	r0, #0
   422ac:	movne	r0, #1
   422b0:	str	r0, [sp, #2632]	; 0xa48
   422b4:	ldr	r0, [sp, #2632]	; 0xa48
   422b8:	and	r0, r0, #1
   422bc:	ldr	r1, [sp, #2648]	; 0xa58
   422c0:	subs	r0, r1, r0
   422c4:	ldr	r2, [sp, #2644]	; 0xa54
   422c8:	sbc	r3, r2, #0
   422cc:	movw	ip, #9362	; 0x2492
   422d0:	movt	ip, #4681	; 0x1249
   422d4:	subs	r0, r0, ip
   422d8:	sbcs	r3, r3, #0
   422dc:	str	r0, [sp, #2628]	; 0xa44
   422e0:	str	r3, [sp, #2624]	; 0xa40
   422e4:	blt	42784 <__assert_fail@plt+0x2fbcc>
   422e8:	b	427ec <__assert_fail@plt+0x2fc34>
   422ec:	ldr	r0, [fp, #-728]	; 0xfffffd28
   422f0:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   422f4:	mov	r2, #0
   422f8:	subs	r3, r0, #1
   422fc:	sbcs	ip, r1, #0
   42300:	str	r0, [sp, #2620]	; 0xa3c
   42304:	str	r1, [sp, #2616]	; 0xa38
   42308:	str	ip, [sp, #2612]	; 0xa34
   4230c:	str	r3, [sp, #2608]	; 0xa30
   42310:	str	r2, [sp, #2604]	; 0xa2c
   42314:	blt	42334 <__assert_fail@plt+0x2f77c>
   42318:	b	4231c <__assert_fail@plt+0x2f764>
   4231c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   42320:	ldr	r1, [fp, #-720]	; 0xfffffd30
   42324:	cmp	r0, r1
   42328:	movw	r0, #0
   4232c:	movne	r0, #1
   42330:	str	r0, [sp, #2604]	; 0xa2c
   42334:	ldr	r0, [sp, #2604]	; 0xa2c
   42338:	and	r0, r0, #1
   4233c:	ldr	r1, [sp, #2620]	; 0xa3c
   42340:	subs	r0, r1, r0
   42344:	ldr	r2, [sp, #2616]	; 0xa38
   42348:	sbc	r3, r2, #0
   4234c:	mvn	r3, r3
   42350:	mvn	r0, r0
   42354:	movw	ip, #56173	; 0xdb6d
   42358:	movt	ip, #60854	; 0xedb6
   4235c:	subs	r0, ip, r0
   42360:	mvn	ip, #0
   42364:	sbcs	r3, ip, r3
   42368:	str	r0, [sp, #2600]	; 0xa28
   4236c:	str	r3, [sp, #2596]	; 0xa24
   42370:	blt	42784 <__assert_fail@plt+0x2fbcc>
   42374:	b	427ec <__assert_fail@plt+0x2fc34>
   42378:	b	424fc <__assert_fail@plt+0x2f944>
   4237c:	b	42380 <__assert_fail@plt+0x2f7c8>
   42380:	ldr	r0, [fp, #-728]	; 0xfffffd28
   42384:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   42388:	mov	r2, #0
   4238c:	subs	r3, r0, #1
   42390:	sbcs	ip, r1, #0
   42394:	str	r0, [sp, #2592]	; 0xa20
   42398:	str	r1, [sp, #2588]	; 0xa1c
   4239c:	str	ip, [sp, #2584]	; 0xa18
   423a0:	str	r3, [sp, #2580]	; 0xa14
   423a4:	str	r2, [sp, #2576]	; 0xa10
   423a8:	blt	423c8 <__assert_fail@plt+0x2f810>
   423ac:	b	423b0 <__assert_fail@plt+0x2f7f8>
   423b0:	ldr	r0, [fp, #-52]	; 0xffffffcc
   423b4:	ldr	r1, [fp, #-720]	; 0xfffffd30
   423b8:	cmp	r0, r1
   423bc:	movw	r0, #0
   423c0:	movne	r0, #1
   423c4:	str	r0, [sp, #2576]	; 0xa10
   423c8:	ldr	r0, [sp, #2576]	; 0xa10
   423cc:	and	r0, r0, #1
   423d0:	ldr	r1, [sp, #2592]	; 0xa20
   423d4:	subs	r0, r1, r0
   423d8:	ldr	r2, [sp, #2588]	; 0xa1c
   423dc:	sbc	r3, r2, #0
   423e0:	adds	r0, r0, #-2147483648	; 0x80000000
   423e4:	sbc	r3, r3, #0
   423e8:	rsbs	r0, r0, #0
   423ec:	rscs	r3, r3, #0
   423f0:	str	r0, [sp, #2572]	; 0xa0c
   423f4:	str	r3, [sp, #2568]	; 0xa08
   423f8:	blt	42784 <__assert_fail@plt+0x2fbcc>
   423fc:	b	427ec <__assert_fail@plt+0x2fc34>
   42400:	ldr	r0, [fp, #-728]	; 0xfffffd28
   42404:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   42408:	mov	r2, #0
   4240c:	subs	r3, r0, #1
   42410:	sbcs	ip, r1, #0
   42414:	str	r0, [sp, #2564]	; 0xa04
   42418:	str	r1, [sp, #2560]	; 0xa00
   4241c:	str	ip, [sp, #2556]	; 0x9fc
   42420:	str	r3, [sp, #2552]	; 0x9f8
   42424:	str	r2, [sp, #2548]	; 0x9f4
   42428:	blt	42448 <__assert_fail@plt+0x2f890>
   4242c:	b	42430 <__assert_fail@plt+0x2f878>
   42430:	ldr	r0, [fp, #-52]	; 0xffffffcc
   42434:	ldr	r1, [fp, #-720]	; 0xfffffd30
   42438:	cmp	r0, r1
   4243c:	movw	r0, #0
   42440:	movne	r0, #1
   42444:	str	r0, [sp, #2548]	; 0x9f4
   42448:	ldr	r0, [sp, #2548]	; 0x9f4
   4244c:	and	r0, r0, #1
   42450:	ldr	r1, [sp, #2564]	; 0xa04
   42454:	subs	r0, r1, r0
   42458:	ldr	r2, [sp, #2560]	; 0xa00
   4245c:	sbc	r3, r2, #0
   42460:	subs	r0, r0, #1
   42464:	sbcs	r3, r3, #0
   42468:	str	r0, [sp, #2544]	; 0x9f0
   4246c:	str	r3, [sp, #2540]	; 0x9ec
   42470:	blt	427ec <__assert_fail@plt+0x2fc34>
   42474:	b	42478 <__assert_fail@plt+0x2f8c0>
   42478:	ldr	r0, [fp, #-728]	; 0xfffffd28
   4247c:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   42480:	mov	r2, #0
   42484:	subs	r3, r0, #1
   42488:	sbcs	ip, r1, #0
   4248c:	str	r0, [sp, #2536]	; 0x9e8
   42490:	str	r1, [sp, #2532]	; 0x9e4
   42494:	str	ip, [sp, #2528]	; 0x9e0
   42498:	str	r3, [sp, #2524]	; 0x9dc
   4249c:	str	r2, [sp, #2520]	; 0x9d8
   424a0:	blt	424c0 <__assert_fail@plt+0x2f908>
   424a4:	b	424a8 <__assert_fail@plt+0x2f8f0>
   424a8:	ldr	r0, [fp, #-52]	; 0xffffffcc
   424ac:	ldr	r1, [fp, #-720]	; 0xfffffd30
   424b0:	cmp	r0, r1
   424b4:	movw	r0, #0
   424b8:	movne	r0, #1
   424bc:	str	r0, [sp, #2520]	; 0x9d8
   424c0:	ldr	r0, [sp, #2520]	; 0x9d8
   424c4:	and	r0, r0, #1
   424c8:	ldr	r1, [sp, #2536]	; 0x9e8
   424cc:	subs	r0, r1, r0
   424d0:	ldr	r2, [sp, #2532]	; 0x9e4
   424d4:	sbc	r3, r2, #0
   424d8:	subs	r0, r0, #1
   424dc:	sbc	r3, r3, #0
   424e0:	mvn	ip, #-2147483648	; 0x80000000
   424e4:	subs	r0, ip, r0
   424e8:	rscs	r3, r3, #0
   424ec:	str	r0, [sp, #2516]	; 0x9d4
   424f0:	str	r3, [sp, #2512]	; 0x9d0
   424f4:	blt	42784 <__assert_fail@plt+0x2fbcc>
   424f8:	b	427ec <__assert_fail@plt+0x2fc34>
   424fc:	ldr	r0, [fp, #-728]	; 0xfffffd28
   42500:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   42504:	mov	r2, #0
   42508:	subs	r3, r0, #1
   4250c:	sbcs	ip, r1, #0
   42510:	str	r0, [sp, #2508]	; 0x9cc
   42514:	str	r1, [sp, #2504]	; 0x9c8
   42518:	str	ip, [sp, #2500]	; 0x9c4
   4251c:	str	r3, [sp, #2496]	; 0x9c0
   42520:	str	r2, [sp, #2492]	; 0x9bc
   42524:	blt	42544 <__assert_fail@plt+0x2f98c>
   42528:	b	4252c <__assert_fail@plt+0x2f974>
   4252c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   42530:	ldr	r1, [fp, #-720]	; 0xfffffd30
   42534:	cmp	r0, r1
   42538:	movw	r0, #0
   4253c:	movne	r0, #1
   42540:	str	r0, [sp, #2492]	; 0x9bc
   42544:	ldr	r0, [sp, #2492]	; 0x9bc
   42548:	and	r0, r0, #1
   4254c:	ldr	r1, [sp, #2508]	; 0x9cc
   42550:	subs	r0, r1, r0
   42554:	ldr	r2, [sp, #2504]	; 0x9c8
   42558:	sbc	r3, r2, #0
   4255c:	movw	ip, #56174	; 0xdb6e
   42560:	movt	ip, #60854	; 0xedb6
   42564:	subs	r0, ip, r0
   42568:	mvn	ip, #0
   4256c:	sbcs	r3, ip, r3
   42570:	str	r0, [sp, #2488]	; 0x9b8
   42574:	str	r3, [sp, #2484]	; 0x9b4
   42578:	blt	42784 <__assert_fail@plt+0x2fbcc>
   4257c:	b	427ec <__assert_fail@plt+0x2fc34>
   42580:	b	42588 <__assert_fail@plt+0x2f9d0>
   42584:	b	427ec <__assert_fail@plt+0x2fc34>
   42588:	ldr	r0, [fp, #-728]	; 0xfffffd28
   4258c:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   42590:	mov	r2, #0
   42594:	subs	r3, r0, #1
   42598:	sbcs	ip, r1, #0
   4259c:	str	r0, [sp, #2480]	; 0x9b0
   425a0:	str	r1, [sp, #2476]	; 0x9ac
   425a4:	str	ip, [sp, #2472]	; 0x9a8
   425a8:	str	r3, [sp, #2468]	; 0x9a4
   425ac:	str	r2, [sp, #2464]	; 0x9a0
   425b0:	blt	425d0 <__assert_fail@plt+0x2fa18>
   425b4:	b	425b8 <__assert_fail@plt+0x2fa00>
   425b8:	ldr	r0, [fp, #-52]	; 0xffffffcc
   425bc:	ldr	r1, [fp, #-720]	; 0xfffffd30
   425c0:	cmp	r0, r1
   425c4:	movw	r0, #0
   425c8:	movne	r0, #1
   425cc:	str	r0, [sp, #2464]	; 0x9a0
   425d0:	ldr	r0, [sp, #2464]	; 0x9a0
   425d4:	and	r0, r0, #1
   425d8:	ldr	r1, [sp, #2480]	; 0x9b0
   425dc:	subs	r0, r1, r0
   425e0:	ldr	r2, [sp, #2476]	; 0x9ac
   425e4:	sbc	r3, r2, #0
   425e8:	cmn	r3, #1
   425ec:	str	r0, [sp, #2460]	; 0x99c
   425f0:	bgt	42704 <__assert_fail@plt+0x2fb4c>
   425f4:	b	425f8 <__assert_fail@plt+0x2fa40>
   425f8:	b	425fc <__assert_fail@plt+0x2fa44>
   425fc:	b	42680 <__assert_fail@plt+0x2fac8>
   42600:	b	42680 <__assert_fail@plt+0x2fac8>
   42604:	ldr	r0, [fp, #-728]	; 0xfffffd28
   42608:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   4260c:	mov	r2, #0
   42610:	subs	r3, r0, #1
   42614:	sbcs	ip, r1, #0
   42618:	str	r0, [sp, #2456]	; 0x998
   4261c:	str	r1, [sp, #2452]	; 0x994
   42620:	str	ip, [sp, #2448]	; 0x990
   42624:	str	r3, [sp, #2444]	; 0x98c
   42628:	str	r2, [sp, #2440]	; 0x988
   4262c:	blt	4264c <__assert_fail@plt+0x2fa94>
   42630:	b	42634 <__assert_fail@plt+0x2fa7c>
   42634:	ldr	r0, [fp, #-52]	; 0xffffffcc
   42638:	ldr	r1, [fp, #-720]	; 0xfffffd30
   4263c:	cmp	r0, r1
   42640:	movw	r0, #0
   42644:	movne	r0, #1
   42648:	str	r0, [sp, #2440]	; 0x988
   4264c:	ldr	r0, [sp, #2440]	; 0x988
   42650:	and	r0, r0, #1
   42654:	ldr	r1, [sp, #2456]	; 0x998
   42658:	subs	r0, r1, r0
   4265c:	ldr	r2, [sp, #2452]	; 0x994
   42660:	sbc	r3, r2, #0
   42664:	and	r0, r0, r3
   42668:	cmn	r0, #1
   4266c:	bne	42680 <__assert_fail@plt+0x2fac8>
   42670:	b	42674 <__assert_fail@plt+0x2fabc>
   42674:	b	42678 <__assert_fail@plt+0x2fac0>
   42678:	b	427ec <__assert_fail@plt+0x2fc34>
   4267c:	b	427ec <__assert_fail@plt+0x2fc34>
   42680:	ldr	r0, [fp, #-728]	; 0xfffffd28
   42684:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   42688:	mov	r2, #0
   4268c:	subs	r3, r0, #1
   42690:	sbcs	ip, r1, #0
   42694:	str	r0, [sp, #2436]	; 0x984
   42698:	str	r1, [sp, #2432]	; 0x980
   4269c:	str	ip, [sp, #2428]	; 0x97c
   426a0:	str	r3, [sp, #2424]	; 0x978
   426a4:	str	r2, [sp, #2420]	; 0x974
   426a8:	blt	426c8 <__assert_fail@plt+0x2fb10>
   426ac:	b	426b0 <__assert_fail@plt+0x2faf8>
   426b0:	ldr	r0, [fp, #-52]	; 0xffffffcc
   426b4:	ldr	r1, [fp, #-720]	; 0xfffffd30
   426b8:	cmp	r0, r1
   426bc:	movw	r0, #0
   426c0:	movne	r0, #1
   426c4:	str	r0, [sp, #2420]	; 0x974
   426c8:	ldr	r0, [sp, #2420]	; 0x974
   426cc:	and	r0, r0, #1
   426d0:	ldr	r1, [sp, #2436]	; 0x984
   426d4:	subs	r2, r1, r0
   426d8:	ldr	r0, [sp, #2432]	; 0x980
   426dc:	sbc	r3, r0, #0
   426e0:	mov	r0, #-2147483648	; 0x80000000
   426e4:	mvn	r1, #0
   426e8:	bl	77780 <__assert_fail@plt+0x64bc8>
   426ec:	subs	r0, r0, #7
   426f0:	sbcs	r1, r1, #0
   426f4:	str	r0, [sp, #2416]	; 0x970
   426f8:	str	r1, [sp, #2412]	; 0x96c
   426fc:	blt	42784 <__assert_fail@plt+0x2fbcc>
   42700:	b	427ec <__assert_fail@plt+0x2fc34>
   42704:	ldr	r0, [fp, #-728]	; 0xfffffd28
   42708:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   4270c:	mov	r2, #0
   42710:	subs	r3, r0, #1
   42714:	sbcs	ip, r1, #0
   42718:	str	r0, [sp, #2408]	; 0x968
   4271c:	str	r1, [sp, #2404]	; 0x964
   42720:	str	ip, [sp, #2400]	; 0x960
   42724:	str	r3, [sp, #2396]	; 0x95c
   42728:	str	r2, [sp, #2392]	; 0x958
   4272c:	blt	4274c <__assert_fail@plt+0x2fb94>
   42730:	b	42734 <__assert_fail@plt+0x2fb7c>
   42734:	ldr	r0, [fp, #-52]	; 0xffffffcc
   42738:	ldr	r1, [fp, #-720]	; 0xfffffd30
   4273c:	cmp	r0, r1
   42740:	movw	r0, #0
   42744:	movne	r0, #1
   42748:	str	r0, [sp, #2392]	; 0x958
   4274c:	ldr	r0, [sp, #2392]	; 0x958
   42750:	and	r0, r0, #1
   42754:	ldr	r1, [sp, #2408]	; 0x968
   42758:	subs	r0, r1, r0
   4275c:	ldr	r2, [sp, #2404]	; 0x964
   42760:	sbc	r3, r2, #0
   42764:	movw	ip, #9363	; 0x2493
   42768:	movt	ip, #4681	; 0x1249
   4276c:	subs	r0, r0, ip
   42770:	sbcs	r3, r3, #0
   42774:	str	r0, [sp, #2388]	; 0x954
   42778:	str	r3, [sp, #2384]	; 0x950
   4277c:	blt	427ec <__assert_fail@plt+0x2fc34>
   42780:	b	42784 <__assert_fail@plt+0x2fbcc>
   42784:	ldr	r0, [fp, #-728]	; 0xfffffd28
   42788:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   4278c:	mov	r2, #0
   42790:	subs	r3, r0, #1
   42794:	sbcs	r1, r1, #0
   42798:	str	r0, [sp, #2380]	; 0x94c
   4279c:	str	r3, [sp, #2376]	; 0x948
   427a0:	str	r1, [sp, #2372]	; 0x944
   427a4:	str	r2, [sp, #2368]	; 0x940
   427a8:	blt	427c8 <__assert_fail@plt+0x2fc10>
   427ac:	b	427b0 <__assert_fail@plt+0x2fbf8>
   427b0:	ldr	r0, [fp, #-52]	; 0xffffffcc
   427b4:	ldr	r1, [fp, #-720]	; 0xfffffd30
   427b8:	cmp	r0, r1
   427bc:	movw	r0, #0
   427c0:	movne	r0, #1
   427c4:	str	r0, [sp, #2368]	; 0x940
   427c8:	ldr	r0, [sp, #2368]	; 0x940
   427cc:	and	r0, r0, #1
   427d0:	ldr	r1, [sp, #2380]	; 0x94c
   427d4:	sub	r0, r1, r0
   427d8:	rsb	r0, r0, r0, lsl #3
   427dc:	asr	r2, r0, #31
   427e0:	str	r0, [fp, #-936]	; 0xfffffc58
   427e4:	str	r2, [fp, #-932]	; 0xfffffc5c
   427e8:	b	43c6c <__assert_fail@plt+0x310b4>
   427ec:	ldr	r0, [fp, #-728]	; 0xfffffd28
   427f0:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   427f4:	mov	r2, #0
   427f8:	subs	r3, r0, #1
   427fc:	sbcs	r1, r1, #0
   42800:	str	r0, [sp, #2364]	; 0x93c
   42804:	str	r3, [sp, #2360]	; 0x938
   42808:	str	r1, [sp, #2356]	; 0x934
   4280c:	str	r2, [sp, #2352]	; 0x930
   42810:	blt	42830 <__assert_fail@plt+0x2fc78>
   42814:	b	42818 <__assert_fail@plt+0x2fc60>
   42818:	ldr	r0, [fp, #-52]	; 0xffffffcc
   4281c:	ldr	r1, [fp, #-720]	; 0xfffffd30
   42820:	cmp	r0, r1
   42824:	movw	r0, #0
   42828:	movne	r0, #1
   4282c:	str	r0, [sp, #2352]	; 0x930
   42830:	ldr	r0, [sp, #2352]	; 0x930
   42834:	and	r0, r0, #1
   42838:	ldr	r1, [sp, #2364]	; 0x93c
   4283c:	sub	r0, r1, r0
   42840:	rsb	r0, r0, r0, lsl #3
   42844:	asr	r2, r0, #31
   42848:	str	r0, [fp, #-936]	; 0xfffffc58
   4284c:	str	r2, [fp, #-932]	; 0xfffffc5c
   42850:	b	43b68 <__assert_fail@plt+0x30fb0>
   42854:	b	42bc0 <__assert_fail@plt+0x30008>
   42858:	ldr	r0, [fp, #-728]	; 0xfffffd28
   4285c:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   42860:	mov	r2, #0
   42864:	subs	r3, r0, #1
   42868:	sbcs	ip, r1, #0
   4286c:	str	r0, [sp, #2348]	; 0x92c
   42870:	str	r1, [sp, #2344]	; 0x928
   42874:	str	ip, [sp, #2340]	; 0x924
   42878:	str	r3, [sp, #2336]	; 0x920
   4287c:	str	r2, [sp, #2332]	; 0x91c
   42880:	blt	428a0 <__assert_fail@plt+0x2fce8>
   42884:	b	42888 <__assert_fail@plt+0x2fcd0>
   42888:	ldr	r0, [fp, #-52]	; 0xffffffcc
   4288c:	ldr	r1, [fp, #-720]	; 0xfffffd30
   42890:	cmp	r0, r1
   42894:	movw	r0, #0
   42898:	movne	r0, #1
   4289c:	str	r0, [sp, #2332]	; 0x91c
   428a0:	ldr	r0, [sp, #2332]	; 0x91c
   428a4:	and	r0, r0, #1
   428a8:	ldr	r1, [sp, #2348]	; 0x92c
   428ac:	subs	r0, r1, r0
   428b0:	ldr	r2, [sp, #2344]	; 0x928
   428b4:	sbc	r3, r2, #0
   428b8:	cmn	r3, #1
   428bc:	str	r0, [sp, #2328]	; 0x918
   428c0:	bgt	429cc <__assert_fail@plt+0x2fe14>
   428c4:	b	428c8 <__assert_fail@plt+0x2fd10>
   428c8:	b	4294c <__assert_fail@plt+0x2fd94>
   428cc:	ldr	r0, [fp, #-728]	; 0xfffffd28
   428d0:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   428d4:	mov	r2, #0
   428d8:	subs	r3, r0, #1
   428dc:	sbcs	ip, r1, #0
   428e0:	str	r0, [sp, #2324]	; 0x914
   428e4:	str	r1, [sp, #2320]	; 0x910
   428e8:	str	ip, [sp, #2316]	; 0x90c
   428ec:	str	r3, [sp, #2312]	; 0x908
   428f0:	str	r2, [sp, #2308]	; 0x904
   428f4:	blt	42914 <__assert_fail@plt+0x2fd5c>
   428f8:	b	428fc <__assert_fail@plt+0x2fd44>
   428fc:	ldr	r0, [fp, #-52]	; 0xffffffcc
   42900:	ldr	r1, [fp, #-720]	; 0xfffffd30
   42904:	cmp	r0, r1
   42908:	movw	r0, #0
   4290c:	movne	r0, #1
   42910:	str	r0, [sp, #2308]	; 0x904
   42914:	ldr	r0, [sp, #2308]	; 0x904
   42918:	and	r0, r0, #1
   4291c:	ldr	r1, [sp, #2324]	; 0x914
   42920:	subs	r0, r1, r0
   42924:	ldr	r2, [sp, #2320]	; 0x910
   42928:	sbc	r3, r2, #0
   4292c:	movw	ip, #18724	; 0x4924
   42930:	movt	ip, #9362	; 0x2492
   42934:	subs	r0, r0, ip
   42938:	sbcs	r3, r3, #0
   4293c:	str	r0, [sp, #2304]	; 0x900
   42940:	str	r3, [sp, #2300]	; 0x8fc
   42944:	blt	42dc8 <__assert_fail@plt+0x30210>
   42948:	b	42e30 <__assert_fail@plt+0x30278>
   4294c:	ldr	r0, [fp, #-728]	; 0xfffffd28
   42950:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   42954:	mov	r2, #0
   42958:	subs	r3, r0, #1
   4295c:	sbcs	ip, r1, #0
   42960:	str	r0, [sp, #2296]	; 0x8f8
   42964:	str	r1, [sp, #2292]	; 0x8f4
   42968:	str	ip, [sp, #2288]	; 0x8f0
   4296c:	str	r3, [sp, #2284]	; 0x8ec
   42970:	str	r2, [sp, #2280]	; 0x8e8
   42974:	blt	42994 <__assert_fail@plt+0x2fddc>
   42978:	b	4297c <__assert_fail@plt+0x2fdc4>
   4297c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   42980:	ldr	r1, [fp, #-720]	; 0xfffffd30
   42984:	cmp	r0, r1
   42988:	movw	r0, #0
   4298c:	movne	r0, #1
   42990:	str	r0, [sp, #2280]	; 0x8e8
   42994:	ldr	r0, [sp, #2280]	; 0x8e8
   42998:	and	r0, r0, #1
   4299c:	ldr	r1, [sp, #2296]	; 0x8f8
   429a0:	subs	r0, r1, r0
   429a4:	ldr	r2, [sp, #2292]	; 0x8f4
   429a8:	sbc	r3, r2, #0
   429ac:	mvn	r3, r3
   429b0:	mvn	r0, r0
   429b4:	rsbs	r0, r0, #0
   429b8:	rscs	r3, r3, #0
   429bc:	str	r0, [sp, #2276]	; 0x8e4
   429c0:	str	r3, [sp, #2272]	; 0x8e0
   429c4:	blt	42dc8 <__assert_fail@plt+0x30210>
   429c8:	b	42e30 <__assert_fail@plt+0x30278>
   429cc:	b	429d0 <__assert_fail@plt+0x2fe18>
   429d0:	b	42b48 <__assert_fail@plt+0x2ff90>
   429d4:	b	42b48 <__assert_fail@plt+0x2ff90>
   429d8:	b	42b48 <__assert_fail@plt+0x2ff90>
   429dc:	b	429e0 <__assert_fail@plt+0x2fe28>
   429e0:	ldr	r0, [fp, #-728]	; 0xfffffd28
   429e4:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   429e8:	mov	r2, #0
   429ec:	subs	r3, r0, #1
   429f0:	sbcs	ip, r1, #0
   429f4:	str	r0, [sp, #2268]	; 0x8dc
   429f8:	str	r1, [sp, #2264]	; 0x8d8
   429fc:	str	ip, [sp, #2260]	; 0x8d4
   42a00:	str	r3, [sp, #2256]	; 0x8d0
   42a04:	str	r2, [sp, #2252]	; 0x8cc
   42a08:	blt	42a28 <__assert_fail@plt+0x2fe70>
   42a0c:	b	42a10 <__assert_fail@plt+0x2fe58>
   42a10:	ldr	r0, [fp, #-52]	; 0xffffffcc
   42a14:	ldr	r1, [fp, #-720]	; 0xfffffd30
   42a18:	cmp	r0, r1
   42a1c:	movw	r0, #0
   42a20:	movne	r0, #1
   42a24:	str	r0, [sp, #2252]	; 0x8cc
   42a28:	ldr	r0, [sp, #2252]	; 0x8cc
   42a2c:	and	r0, r0, #1
   42a30:	ldr	r1, [sp, #2268]	; 0x8dc
   42a34:	subs	r0, r1, r0
   42a38:	ldr	r2, [sp, #2264]	; 0x8d8
   42a3c:	sbc	r3, r2, #0
   42a40:	rsbs	r0, r0, #0
   42a44:	rscs	r3, r3, #0
   42a48:	str	r0, [sp, #2248]	; 0x8c8
   42a4c:	str	r3, [sp, #2244]	; 0x8c4
   42a50:	blt	42dc8 <__assert_fail@plt+0x30210>
   42a54:	b	42e30 <__assert_fail@plt+0x30278>
   42a58:	ldr	r0, [fp, #-728]	; 0xfffffd28
   42a5c:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   42a60:	mov	r2, #0
   42a64:	subs	r3, r0, #1
   42a68:	sbcs	ip, r1, #0
   42a6c:	str	r0, [sp, #2240]	; 0x8c0
   42a70:	str	r1, [sp, #2236]	; 0x8bc
   42a74:	str	ip, [sp, #2232]	; 0x8b8
   42a78:	str	r3, [sp, #2228]	; 0x8b4
   42a7c:	str	r2, [sp, #2224]	; 0x8b0
   42a80:	blt	42aa0 <__assert_fail@plt+0x2fee8>
   42a84:	b	42a88 <__assert_fail@plt+0x2fed0>
   42a88:	ldr	r0, [fp, #-52]	; 0xffffffcc
   42a8c:	ldr	r1, [fp, #-720]	; 0xfffffd30
   42a90:	cmp	r0, r1
   42a94:	movw	r0, #0
   42a98:	movne	r0, #1
   42a9c:	str	r0, [sp, #2224]	; 0x8b0
   42aa0:	ldr	r0, [sp, #2224]	; 0x8b0
   42aa4:	and	r0, r0, #1
   42aa8:	ldr	r1, [sp, #2240]	; 0x8c0
   42aac:	subs	r0, r1, r0
   42ab0:	ldr	r2, [sp, #2236]	; 0x8bc
   42ab4:	sbc	r3, r2, #0
   42ab8:	subs	r0, r0, #1
   42abc:	sbcs	r3, r3, #0
   42ac0:	str	r0, [sp, #2220]	; 0x8ac
   42ac4:	str	r3, [sp, #2216]	; 0x8a8
   42ac8:	blt	42e30 <__assert_fail@plt+0x30278>
   42acc:	b	42ad0 <__assert_fail@plt+0x2ff18>
   42ad0:	ldr	r0, [fp, #-728]	; 0xfffffd28
   42ad4:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   42ad8:	mov	r2, #0
   42adc:	subs	r3, r0, #1
   42ae0:	sbcs	ip, r1, #0
   42ae4:	str	r0, [sp, #2212]	; 0x8a4
   42ae8:	str	r1, [sp, #2208]	; 0x8a0
   42aec:	str	ip, [sp, #2204]	; 0x89c
   42af0:	str	r3, [sp, #2200]	; 0x898
   42af4:	str	r2, [sp, #2196]	; 0x894
   42af8:	blt	42b18 <__assert_fail@plt+0x2ff60>
   42afc:	b	42b00 <__assert_fail@plt+0x2ff48>
   42b00:	ldr	r0, [fp, #-52]	; 0xffffffcc
   42b04:	ldr	r1, [fp, #-720]	; 0xfffffd30
   42b08:	cmp	r0, r1
   42b0c:	movw	r0, #0
   42b10:	movne	r0, #1
   42b14:	str	r0, [sp, #2196]	; 0x894
   42b18:	ldr	r0, [sp, #2196]	; 0x894
   42b1c:	and	r0, r0, #1
   42b20:	ldr	r1, [sp, #2212]	; 0x8a4
   42b24:	subs	r0, r1, r0
   42b28:	ldr	r2, [sp, #2208]	; 0x8a0
   42b2c:	sbc	r3, r2, #0
   42b30:	subs	r0, r0, #1
   42b34:	sbc	r3, r3, #0
   42b38:	cmn	r3, #1
   42b3c:	str	r0, [sp, #2192]	; 0x890
   42b40:	bgt	42dc8 <__assert_fail@plt+0x30210>
   42b44:	b	42e30 <__assert_fail@plt+0x30278>
   42b48:	ldr	r0, [fp, #-728]	; 0xfffffd28
   42b4c:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   42b50:	mov	r2, #0
   42b54:	subs	r3, r0, #1
   42b58:	sbcs	ip, r1, #0
   42b5c:	str	r0, [sp, #2188]	; 0x88c
   42b60:	str	r1, [sp, #2184]	; 0x888
   42b64:	str	ip, [sp, #2180]	; 0x884
   42b68:	str	r3, [sp, #2176]	; 0x880
   42b6c:	str	r2, [sp, #2172]	; 0x87c
   42b70:	blt	42b90 <__assert_fail@plt+0x2ffd8>
   42b74:	b	42b78 <__assert_fail@plt+0x2ffc0>
   42b78:	ldr	r0, [fp, #-52]	; 0xffffffcc
   42b7c:	ldr	r1, [fp, #-720]	; 0xfffffd30
   42b80:	cmp	r0, r1
   42b84:	movw	r0, #0
   42b88:	movne	r0, #1
   42b8c:	str	r0, [sp, #2172]	; 0x87c
   42b90:	ldr	r0, [sp, #2172]	; 0x87c
   42b94:	and	r0, r0, #1
   42b98:	ldr	r1, [sp, #2188]	; 0x88c
   42b9c:	subs	r0, r1, r0
   42ba0:	ldr	r2, [sp, #2184]	; 0x888
   42ba4:	sbc	r3, r2, #0
   42ba8:	rsbs	r0, r0, #0
   42bac:	rscs	r3, r3, #0
   42bb0:	str	r0, [sp, #2168]	; 0x878
   42bb4:	str	r3, [sp, #2164]	; 0x874
   42bb8:	blt	42dc8 <__assert_fail@plt+0x30210>
   42bbc:	b	42e30 <__assert_fail@plt+0x30278>
   42bc0:	b	42bc8 <__assert_fail@plt+0x30010>
   42bc4:	b	42e30 <__assert_fail@plt+0x30278>
   42bc8:	ldr	r0, [fp, #-728]	; 0xfffffd28
   42bcc:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   42bd0:	mov	r2, #0
   42bd4:	subs	r3, r0, #1
   42bd8:	sbcs	ip, r1, #0
   42bdc:	str	r0, [sp, #2160]	; 0x870
   42be0:	str	r1, [sp, #2156]	; 0x86c
   42be4:	str	ip, [sp, #2152]	; 0x868
   42be8:	str	r3, [sp, #2148]	; 0x864
   42bec:	str	r2, [sp, #2144]	; 0x860
   42bf0:	blt	42c10 <__assert_fail@plt+0x30058>
   42bf4:	b	42bf8 <__assert_fail@plt+0x30040>
   42bf8:	ldr	r0, [fp, #-52]	; 0xffffffcc
   42bfc:	ldr	r1, [fp, #-720]	; 0xfffffd30
   42c00:	cmp	r0, r1
   42c04:	movw	r0, #0
   42c08:	movne	r0, #1
   42c0c:	str	r0, [sp, #2144]	; 0x860
   42c10:	ldr	r0, [sp, #2144]	; 0x860
   42c14:	and	r0, r0, #1
   42c18:	ldr	r1, [sp, #2160]	; 0x870
   42c1c:	subs	r0, r1, r0
   42c20:	ldr	r2, [sp, #2156]	; 0x86c
   42c24:	sbc	r3, r2, #0
   42c28:	cmn	r3, #1
   42c2c:	str	r0, [sp, #2140]	; 0x85c
   42c30:	bgt	42d48 <__assert_fail@plt+0x30190>
   42c34:	b	42c38 <__assert_fail@plt+0x30080>
   42c38:	b	42c3c <__assert_fail@plt+0x30084>
   42c3c:	b	42cc0 <__assert_fail@plt+0x30108>
   42c40:	b	42cc0 <__assert_fail@plt+0x30108>
   42c44:	ldr	r0, [fp, #-728]	; 0xfffffd28
   42c48:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   42c4c:	mov	r2, #0
   42c50:	subs	r3, r0, #1
   42c54:	sbcs	ip, r1, #0
   42c58:	str	r0, [sp, #2136]	; 0x858
   42c5c:	str	r1, [sp, #2132]	; 0x854
   42c60:	str	ip, [sp, #2128]	; 0x850
   42c64:	str	r3, [sp, #2124]	; 0x84c
   42c68:	str	r2, [sp, #2120]	; 0x848
   42c6c:	blt	42c8c <__assert_fail@plt+0x300d4>
   42c70:	b	42c74 <__assert_fail@plt+0x300bc>
   42c74:	ldr	r0, [fp, #-52]	; 0xffffffcc
   42c78:	ldr	r1, [fp, #-720]	; 0xfffffd30
   42c7c:	cmp	r0, r1
   42c80:	movw	r0, #0
   42c84:	movne	r0, #1
   42c88:	str	r0, [sp, #2120]	; 0x848
   42c8c:	ldr	r0, [sp, #2120]	; 0x848
   42c90:	and	r0, r0, #1
   42c94:	ldr	r1, [sp, #2136]	; 0x858
   42c98:	subs	r0, r1, r0
   42c9c:	ldr	r2, [sp, #2132]	; 0x854
   42ca0:	sbc	r3, r2, #0
   42ca4:	and	r0, r0, r3
   42ca8:	cmn	r0, #1
   42cac:	bne	42cc0 <__assert_fail@plt+0x30108>
   42cb0:	b	42cb4 <__assert_fail@plt+0x300fc>
   42cb4:	b	42cb8 <__assert_fail@plt+0x30100>
   42cb8:	b	42dc8 <__assert_fail@plt+0x30210>
   42cbc:	b	42dc8 <__assert_fail@plt+0x30210>
   42cc0:	ldr	r0, [fp, #-728]	; 0xfffffd28
   42cc4:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   42cc8:	mov	r2, #0
   42ccc:	subs	r3, r0, #1
   42cd0:	sbcs	ip, r1, #0
   42cd4:	str	r0, [sp, #2116]	; 0x844
   42cd8:	str	r1, [sp, #2112]	; 0x840
   42cdc:	str	ip, [sp, #2108]	; 0x83c
   42ce0:	str	r3, [sp, #2104]	; 0x838
   42ce4:	str	r2, [sp, #2100]	; 0x834
   42ce8:	blt	42d08 <__assert_fail@plt+0x30150>
   42cec:	b	42cf0 <__assert_fail@plt+0x30138>
   42cf0:	ldr	r0, [fp, #-52]	; 0xffffffcc
   42cf4:	ldr	r1, [fp, #-720]	; 0xfffffd30
   42cf8:	cmp	r0, r1
   42cfc:	movw	r0, #0
   42d00:	movne	r0, #1
   42d04:	str	r0, [sp, #2100]	; 0x834
   42d08:	ldr	r0, [sp, #2100]	; 0x834
   42d0c:	and	r0, r0, #1
   42d10:	ldr	r1, [sp, #2116]	; 0x844
   42d14:	subs	r2, r1, r0
   42d18:	ldr	r0, [sp, #2112]	; 0x840
   42d1c:	sbc	r3, r0, #0
   42d20:	mov	ip, #0
   42d24:	mov	r0, ip
   42d28:	mov	r1, ip
   42d2c:	bl	77780 <__assert_fail@plt+0x64bc8>
   42d30:	subs	r0, r0, #7
   42d34:	sbcs	r1, r1, #0
   42d38:	str	r0, [sp, #2096]	; 0x830
   42d3c:	str	r1, [sp, #2092]	; 0x82c
   42d40:	blt	42dc8 <__assert_fail@plt+0x30210>
   42d44:	b	42e30 <__assert_fail@plt+0x30278>
   42d48:	ldr	r0, [fp, #-728]	; 0xfffffd28
   42d4c:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   42d50:	mov	r2, #0
   42d54:	subs	r3, r0, #1
   42d58:	sbcs	ip, r1, #0
   42d5c:	str	r0, [sp, #2088]	; 0x828
   42d60:	str	r1, [sp, #2084]	; 0x824
   42d64:	str	ip, [sp, #2080]	; 0x820
   42d68:	str	r3, [sp, #2076]	; 0x81c
   42d6c:	str	r2, [sp, #2072]	; 0x818
   42d70:	blt	42d90 <__assert_fail@plt+0x301d8>
   42d74:	b	42d78 <__assert_fail@plt+0x301c0>
   42d78:	ldr	r0, [fp, #-52]	; 0xffffffcc
   42d7c:	ldr	r1, [fp, #-720]	; 0xfffffd30
   42d80:	cmp	r0, r1
   42d84:	movw	r0, #0
   42d88:	movne	r0, #1
   42d8c:	str	r0, [sp, #2072]	; 0x818
   42d90:	ldr	r0, [sp, #2072]	; 0x818
   42d94:	and	r0, r0, #1
   42d98:	ldr	r1, [sp, #2088]	; 0x828
   42d9c:	subs	r0, r1, r0
   42da0:	ldr	r2, [sp, #2084]	; 0x824
   42da4:	sbc	r3, r2, #0
   42da8:	movw	ip, #18725	; 0x4925
   42dac:	movt	ip, #9362	; 0x2492
   42db0:	subs	r0, r0, ip
   42db4:	sbcs	r3, r3, #0
   42db8:	str	r0, [sp, #2068]	; 0x814
   42dbc:	str	r3, [sp, #2064]	; 0x810
   42dc0:	blt	42e30 <__assert_fail@plt+0x30278>
   42dc4:	b	42dc8 <__assert_fail@plt+0x30210>
   42dc8:	ldr	r0, [fp, #-728]	; 0xfffffd28
   42dcc:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   42dd0:	mov	r2, #0
   42dd4:	subs	r3, r0, #1
   42dd8:	sbcs	r1, r1, #0
   42ddc:	str	r0, [sp, #2060]	; 0x80c
   42de0:	str	r3, [sp, #2056]	; 0x808
   42de4:	str	r1, [sp, #2052]	; 0x804
   42de8:	str	r2, [sp, #2048]	; 0x800
   42dec:	blt	42e0c <__assert_fail@plt+0x30254>
   42df0:	b	42df4 <__assert_fail@plt+0x3023c>
   42df4:	ldr	r0, [fp, #-52]	; 0xffffffcc
   42df8:	ldr	r1, [fp, #-720]	; 0xfffffd30
   42dfc:	cmp	r0, r1
   42e00:	movw	r0, #0
   42e04:	movne	r0, #1
   42e08:	str	r0, [sp, #2048]	; 0x800
   42e0c:	ldr	r0, [sp, #2048]	; 0x800
   42e10:	and	r0, r0, #1
   42e14:	ldr	r1, [sp, #2060]	; 0x80c
   42e18:	sub	r0, r1, r0
   42e1c:	rsb	r0, r0, r0, lsl #3
   42e20:	mov	r2, #0
   42e24:	str	r2, [fp, #-932]	; 0xfffffc5c
   42e28:	str	r0, [fp, #-936]	; 0xfffffc58
   42e2c:	b	43c6c <__assert_fail@plt+0x310b4>
   42e30:	ldr	r0, [fp, #-728]	; 0xfffffd28
   42e34:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   42e38:	mov	r2, #0
   42e3c:	subs	r3, r0, #1
   42e40:	sbcs	r1, r1, #0
   42e44:	str	r0, [sp, #2044]	; 0x7fc
   42e48:	str	r3, [sp, #2040]	; 0x7f8
   42e4c:	str	r1, [sp, #2036]	; 0x7f4
   42e50:	str	r2, [sp, #2032]	; 0x7f0
   42e54:	blt	42e74 <__assert_fail@plt+0x302bc>
   42e58:	b	42e5c <__assert_fail@plt+0x302a4>
   42e5c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   42e60:	ldr	r1, [fp, #-720]	; 0xfffffd30
   42e64:	cmp	r0, r1
   42e68:	movw	r0, #0
   42e6c:	movne	r0, #1
   42e70:	str	r0, [sp, #2032]	; 0x7f0
   42e74:	ldr	r0, [sp, #2032]	; 0x7f0
   42e78:	and	r0, r0, #1
   42e7c:	ldr	r1, [sp, #2044]	; 0x7fc
   42e80:	sub	r0, r1, r0
   42e84:	rsb	r0, r0, r0, lsl #3
   42e88:	mov	r2, #0
   42e8c:	str	r2, [fp, #-932]	; 0xfffffc5c
   42e90:	str	r0, [fp, #-936]	; 0xfffffc58
   42e94:	b	43b68 <__assert_fail@plt+0x30fb0>
   42e98:	b	42e9c <__assert_fail@plt+0x302e4>
   42e9c:	b	43208 <__assert_fail@plt+0x30650>
   42ea0:	ldr	r0, [fp, #-728]	; 0xfffffd28
   42ea4:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   42ea8:	mov	r2, #0
   42eac:	subs	r3, r0, #1
   42eb0:	sbcs	ip, r1, #0
   42eb4:	str	r0, [sp, #2028]	; 0x7ec
   42eb8:	str	r1, [sp, #2024]	; 0x7e8
   42ebc:	str	ip, [sp, #2020]	; 0x7e4
   42ec0:	str	r3, [sp, #2016]	; 0x7e0
   42ec4:	str	r2, [sp, #2012]	; 0x7dc
   42ec8:	blt	42ee8 <__assert_fail@plt+0x30330>
   42ecc:	b	42ed0 <__assert_fail@plt+0x30318>
   42ed0:	ldr	r0, [fp, #-52]	; 0xffffffcc
   42ed4:	ldr	r1, [fp, #-720]	; 0xfffffd30
   42ed8:	cmp	r0, r1
   42edc:	movw	r0, #0
   42ee0:	movne	r0, #1
   42ee4:	str	r0, [sp, #2012]	; 0x7dc
   42ee8:	ldr	r0, [sp, #2012]	; 0x7dc
   42eec:	and	r0, r0, #1
   42ef0:	ldr	r1, [sp, #2028]	; 0x7ec
   42ef4:	subs	r0, r1, r0
   42ef8:	ldr	r2, [sp, #2024]	; 0x7e8
   42efc:	sbc	r3, r2, #0
   42f00:	cmn	r3, #1
   42f04:	str	r0, [sp, #2008]	; 0x7d8
   42f08:	bgt	4302c <__assert_fail@plt+0x30474>
   42f0c:	b	42f10 <__assert_fail@plt+0x30358>
   42f10:	b	42f14 <__assert_fail@plt+0x3035c>
   42f14:	ldr	r0, [fp, #-728]	; 0xfffffd28
   42f18:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   42f1c:	mov	r2, #0
   42f20:	subs	r3, r0, #1
   42f24:	sbcs	ip, r1, #0
   42f28:	str	r0, [sp, #2004]	; 0x7d4
   42f2c:	str	r1, [sp, #2000]	; 0x7d0
   42f30:	str	ip, [sp, #1996]	; 0x7cc
   42f34:	str	r3, [sp, #1992]	; 0x7c8
   42f38:	str	r2, [sp, #1988]	; 0x7c4
   42f3c:	blt	42f5c <__assert_fail@plt+0x303a4>
   42f40:	b	42f44 <__assert_fail@plt+0x3038c>
   42f44:	ldr	r0, [fp, #-52]	; 0xffffffcc
   42f48:	ldr	r1, [fp, #-720]	; 0xfffffd30
   42f4c:	cmp	r0, r1
   42f50:	movw	r0, #0
   42f54:	movne	r0, #1
   42f58:	str	r0, [sp, #1988]	; 0x7c4
   42f5c:	ldr	r0, [sp, #1988]	; 0x7c4
   42f60:	and	r0, r0, #1
   42f64:	ldr	r1, [sp, #2004]	; 0x7d4
   42f68:	subs	r0, r1, r0
   42f6c:	ldr	r2, [sp, #2000]	; 0x7d0
   42f70:	sbc	r3, r2, #0
   42f74:	movw	ip, #37449	; 0x9249
   42f78:	movt	ip, #18724	; 0x4924
   42f7c:	subs	r0, r0, ip
   42f80:	movw	ip, #9362	; 0x2492
   42f84:	movt	ip, #4681	; 0x1249
   42f88:	sbcs	r3, r3, ip
   42f8c:	str	r0, [sp, #1984]	; 0x7c0
   42f90:	str	r3, [sp, #1980]	; 0x7bc
   42f94:	blt	43408 <__assert_fail@plt+0x30850>
   42f98:	b	43484 <__assert_fail@plt+0x308cc>
   42f9c:	ldr	r0, [fp, #-728]	; 0xfffffd28
   42fa0:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   42fa4:	mov	r2, #0
   42fa8:	subs	r3, r0, #1
   42fac:	sbcs	ip, r1, #0
   42fb0:	str	r0, [sp, #1976]	; 0x7b8
   42fb4:	str	r1, [sp, #1972]	; 0x7b4
   42fb8:	str	ip, [sp, #1968]	; 0x7b0
   42fbc:	str	r3, [sp, #1964]	; 0x7ac
   42fc0:	str	r2, [sp, #1960]	; 0x7a8
   42fc4:	blt	42fe4 <__assert_fail@plt+0x3042c>
   42fc8:	b	42fcc <__assert_fail@plt+0x30414>
   42fcc:	ldr	r0, [fp, #-52]	; 0xffffffcc
   42fd0:	ldr	r1, [fp, #-720]	; 0xfffffd30
   42fd4:	cmp	r0, r1
   42fd8:	movw	r0, #0
   42fdc:	movne	r0, #1
   42fe0:	str	r0, [sp, #1960]	; 0x7a8
   42fe4:	ldr	r0, [sp, #1960]	; 0x7a8
   42fe8:	and	r0, r0, #1
   42fec:	ldr	r1, [sp, #1976]	; 0x7b8
   42ff0:	subs	r0, r1, r0
   42ff4:	ldr	r2, [sp, #1972]	; 0x7b4
   42ff8:	sbc	r3, r2, #0
   42ffc:	mvn	r3, r3
   43000:	mvn	r0, r0
   43004:	movw	ip, #28086	; 0x6db6
   43008:	movt	ip, #46811	; 0xb6db
   4300c:	subs	r0, ip, r0
   43010:	movw	ip, #56173	; 0xdb6d
   43014:	movt	ip, #60854	; 0xedb6
   43018:	sbcs	r3, ip, r3
   4301c:	str	r0, [sp, #1956]	; 0x7a4
   43020:	str	r3, [sp, #1952]	; 0x7a0
   43024:	blt	43408 <__assert_fail@plt+0x30850>
   43028:	b	43484 <__assert_fail@plt+0x308cc>
   4302c:	b	43180 <__assert_fail@plt+0x305c8>
   43030:	b	43034 <__assert_fail@plt+0x3047c>
   43034:	ldr	r0, [fp, #-728]	; 0xfffffd28
   43038:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   4303c:	mov	r2, #0
   43040:	subs	r3, r0, #1
   43044:	sbcs	ip, r1, #0
   43048:	str	r0, [sp, #1948]	; 0x79c
   4304c:	str	r1, [sp, #1944]	; 0x798
   43050:	str	ip, [sp, #1940]	; 0x794
   43054:	str	r3, [sp, #1936]	; 0x790
   43058:	str	r2, [sp, #1932]	; 0x78c
   4305c:	blt	4307c <__assert_fail@plt+0x304c4>
   43060:	b	43064 <__assert_fail@plt+0x304ac>
   43064:	ldr	r0, [fp, #-52]	; 0xffffffcc
   43068:	ldr	r1, [fp, #-720]	; 0xfffffd30
   4306c:	cmp	r0, r1
   43070:	movw	r0, #0
   43074:	movne	r0, #1
   43078:	str	r0, [sp, #1932]	; 0x78c
   4307c:	ldr	r0, [sp, #1932]	; 0x78c
   43080:	and	r0, r0, #1
   43084:	ldr	r1, [sp, #1948]	; 0x79c
   43088:	subs	r0, r1, r0
   4308c:	ldr	r2, [sp, #1944]	; 0x798
   43090:	sbc	r3, r2, #0
   43094:	add	r3, r3, #-2147483648	; 0x80000000
   43098:	rsbs	r0, r0, #0
   4309c:	rscs	r3, r3, #0
   430a0:	str	r0, [sp, #1928]	; 0x788
   430a4:	str	r3, [sp, #1924]	; 0x784
   430a8:	blt	43408 <__assert_fail@plt+0x30850>
   430ac:	b	43484 <__assert_fail@plt+0x308cc>
   430b0:	ldr	r0, [fp, #-728]	; 0xfffffd28
   430b4:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   430b8:	mov	r2, #0
   430bc:	subs	r3, r0, #1
   430c0:	sbcs	ip, r1, #0
   430c4:	str	r0, [sp, #1920]	; 0x780
   430c8:	str	r1, [sp, #1916]	; 0x77c
   430cc:	str	ip, [sp, #1912]	; 0x778
   430d0:	str	r3, [sp, #1908]	; 0x774
   430d4:	str	r2, [sp, #1904]	; 0x770
   430d8:	blt	430f8 <__assert_fail@plt+0x30540>
   430dc:	b	430e0 <__assert_fail@plt+0x30528>
   430e0:	ldr	r0, [fp, #-52]	; 0xffffffcc
   430e4:	ldr	r1, [fp, #-720]	; 0xfffffd30
   430e8:	cmp	r0, r1
   430ec:	movw	r0, #0
   430f0:	movne	r0, #1
   430f4:	str	r0, [sp, #1904]	; 0x770
   430f8:	ldr	r0, [sp, #1904]	; 0x770
   430fc:	and	r0, r0, #1
   43100:	ldr	r1, [sp, #1920]	; 0x780
   43104:	subs	r0, r1, r0
   43108:	ldr	r2, [sp, #1916]	; 0x77c
   4310c:	sbc	r3, r2, #0
   43110:	subs	r0, r0, #1
   43114:	sbcs	r3, r3, #0
   43118:	str	r0, [sp, #1900]	; 0x76c
   4311c:	str	r3, [sp, #1896]	; 0x768
   43120:	blt	43484 <__assert_fail@plt+0x308cc>
   43124:	b	43128 <__assert_fail@plt+0x30570>
   43128:	ldr	r0, [fp, #-728]	; 0xfffffd28
   4312c:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   43130:	mov	r2, #0
   43134:	subs	r0, r0, #1
   43138:	sbcs	r1, r1, #0
   4313c:	str	r1, [sp, #1892]	; 0x764
   43140:	str	r0, [sp, #1888]	; 0x760
   43144:	str	r2, [sp, #1884]	; 0x75c
   43148:	blt	43168 <__assert_fail@plt+0x305b0>
   4314c:	b	43150 <__assert_fail@plt+0x30598>
   43150:	ldr	r0, [fp, #-52]	; 0xffffffcc
   43154:	ldr	r1, [fp, #-720]	; 0xfffffd30
   43158:	cmp	r0, r1
   4315c:	movw	r0, #0
   43160:	movne	r0, #1
   43164:	str	r0, [sp, #1884]	; 0x75c
   43168:	ldr	r0, [sp, #1884]	; 0x75c
   4316c:	mov	r1, #0
   43170:	cmp	r1, #0
   43174:	str	r0, [sp, #1880]	; 0x758
   43178:	bne	43408 <__assert_fail@plt+0x30850>
   4317c:	b	43484 <__assert_fail@plt+0x308cc>
   43180:	ldr	r0, [fp, #-728]	; 0xfffffd28
   43184:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   43188:	mov	r2, #0
   4318c:	subs	r3, r0, #1
   43190:	sbcs	ip, r1, #0
   43194:	str	r0, [sp, #1876]	; 0x754
   43198:	str	r1, [sp, #1872]	; 0x750
   4319c:	str	ip, [sp, #1868]	; 0x74c
   431a0:	str	r3, [sp, #1864]	; 0x748
   431a4:	str	r2, [sp, #1860]	; 0x744
   431a8:	blt	431c8 <__assert_fail@plt+0x30610>
   431ac:	b	431b0 <__assert_fail@plt+0x305f8>
   431b0:	ldr	r0, [fp, #-52]	; 0xffffffcc
   431b4:	ldr	r1, [fp, #-720]	; 0xfffffd30
   431b8:	cmp	r0, r1
   431bc:	movw	r0, #0
   431c0:	movne	r0, #1
   431c4:	str	r0, [sp, #1860]	; 0x744
   431c8:	ldr	r0, [sp, #1860]	; 0x744
   431cc:	and	r0, r0, #1
   431d0:	ldr	r1, [sp, #1876]	; 0x754
   431d4:	subs	r0, r1, r0
   431d8:	ldr	r2, [sp, #1872]	; 0x750
   431dc:	sbc	r3, r2, #0
   431e0:	movw	ip, #28087	; 0x6db7
   431e4:	movt	ip, #46811	; 0xb6db
   431e8:	subs	r0, ip, r0
   431ec:	movw	ip, #56173	; 0xdb6d
   431f0:	movt	ip, #60854	; 0xedb6
   431f4:	sbcs	r3, ip, r3
   431f8:	str	r0, [sp, #1856]	; 0x740
   431fc:	str	r3, [sp, #1852]	; 0x73c
   43200:	blt	43408 <__assert_fail@plt+0x30850>
   43204:	b	43484 <__assert_fail@plt+0x308cc>
   43208:	b	43210 <__assert_fail@plt+0x30658>
   4320c:	b	43484 <__assert_fail@plt+0x308cc>
   43210:	ldr	r0, [fp, #-728]	; 0xfffffd28
   43214:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   43218:	mov	r2, #0
   4321c:	subs	r3, r0, #1
   43220:	sbcs	ip, r1, #0
   43224:	str	r0, [sp, #1848]	; 0x738
   43228:	str	r1, [sp, #1844]	; 0x734
   4322c:	str	ip, [sp, #1840]	; 0x730
   43230:	str	r3, [sp, #1836]	; 0x72c
   43234:	str	r2, [sp, #1832]	; 0x728
   43238:	blt	43258 <__assert_fail@plt+0x306a0>
   4323c:	b	43240 <__assert_fail@plt+0x30688>
   43240:	ldr	r0, [fp, #-52]	; 0xffffffcc
   43244:	ldr	r1, [fp, #-720]	; 0xfffffd30
   43248:	cmp	r0, r1
   4324c:	movw	r0, #0
   43250:	movne	r0, #1
   43254:	str	r0, [sp, #1832]	; 0x728
   43258:	ldr	r0, [sp, #1832]	; 0x728
   4325c:	and	r0, r0, #1
   43260:	ldr	r1, [sp, #1848]	; 0x738
   43264:	subs	r0, r1, r0
   43268:	ldr	r2, [sp, #1844]	; 0x734
   4326c:	sbc	r3, r2, #0
   43270:	cmn	r3, #1
   43274:	str	r0, [sp, #1828]	; 0x724
   43278:	bgt	43380 <__assert_fail@plt+0x307c8>
   4327c:	b	43280 <__assert_fail@plt+0x306c8>
   43280:	ldr	r0, [fp, #-728]	; 0xfffffd28
   43284:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   43288:	mov	r2, #0
   4328c:	subs	r3, r0, #1
   43290:	sbcs	ip, r1, #0
   43294:	str	r0, [sp, #1824]	; 0x720
   43298:	str	r1, [sp, #1820]	; 0x71c
   4329c:	str	ip, [sp, #1816]	; 0x718
   432a0:	str	r3, [sp, #1812]	; 0x714
   432a4:	str	r2, [sp, #1808]	; 0x710
   432a8:	blt	432c8 <__assert_fail@plt+0x30710>
   432ac:	b	432b0 <__assert_fail@plt+0x306f8>
   432b0:	ldr	r0, [fp, #-52]	; 0xffffffcc
   432b4:	ldr	r1, [fp, #-720]	; 0xfffffd30
   432b8:	cmp	r0, r1
   432bc:	movw	r0, #0
   432c0:	movne	r0, #1
   432c4:	str	r0, [sp, #1808]	; 0x710
   432c8:	ldr	r0, [sp, #1808]	; 0x710
   432cc:	and	r0, r0, #1
   432d0:	ldr	r1, [sp, #1824]	; 0x720
   432d4:	subs	r0, r1, r0
   432d8:	ldr	r2, [sp, #1820]	; 0x71c
   432dc:	sbc	r3, r2, #0
   432e0:	and	r0, r0, r3
   432e4:	cmn	r0, #1
   432e8:	bne	432fc <__assert_fail@plt+0x30744>
   432ec:	b	432f0 <__assert_fail@plt+0x30738>
   432f0:	b	432f4 <__assert_fail@plt+0x3073c>
   432f4:	b	43484 <__assert_fail@plt+0x308cc>
   432f8:	b	43484 <__assert_fail@plt+0x308cc>
   432fc:	ldr	r0, [fp, #-728]	; 0xfffffd28
   43300:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   43304:	mov	r2, #0
   43308:	subs	r3, r0, #1
   4330c:	sbcs	ip, r1, #0
   43310:	str	r0, [sp, #1804]	; 0x70c
   43314:	str	r1, [sp, #1800]	; 0x708
   43318:	str	ip, [sp, #1796]	; 0x704
   4331c:	str	r3, [sp, #1792]	; 0x700
   43320:	str	r2, [sp, #1788]	; 0x6fc
   43324:	blt	43344 <__assert_fail@plt+0x3078c>
   43328:	b	4332c <__assert_fail@plt+0x30774>
   4332c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   43330:	ldr	r1, [fp, #-720]	; 0xfffffd30
   43334:	cmp	r0, r1
   43338:	movw	r0, #0
   4333c:	movne	r0, #1
   43340:	str	r0, [sp, #1788]	; 0x6fc
   43344:	ldr	r0, [sp, #1788]	; 0x6fc
   43348:	and	r0, r0, #1
   4334c:	ldr	r1, [sp, #1804]	; 0x70c
   43350:	subs	r2, r1, r0
   43354:	ldr	r0, [sp, #1800]	; 0x708
   43358:	sbc	r3, r0, #0
   4335c:	mov	r0, #0
   43360:	mov	r1, #-2147483648	; 0x80000000
   43364:	bl	77780 <__assert_fail@plt+0x64bc8>
   43368:	subs	r0, r0, #7
   4336c:	sbcs	r1, r1, #0
   43370:	str	r0, [sp, #1784]	; 0x6f8
   43374:	str	r1, [sp, #1780]	; 0x6f4
   43378:	blt	43408 <__assert_fail@plt+0x30850>
   4337c:	b	43484 <__assert_fail@plt+0x308cc>
   43380:	ldr	r0, [fp, #-728]	; 0xfffffd28
   43384:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   43388:	mov	r2, #0
   4338c:	subs	r3, r0, #1
   43390:	sbcs	ip, r1, #0
   43394:	str	r0, [sp, #1776]	; 0x6f0
   43398:	str	r1, [sp, #1772]	; 0x6ec
   4339c:	str	ip, [sp, #1768]	; 0x6e8
   433a0:	str	r3, [sp, #1764]	; 0x6e4
   433a4:	str	r2, [sp, #1760]	; 0x6e0
   433a8:	blt	433c8 <__assert_fail@plt+0x30810>
   433ac:	b	433b0 <__assert_fail@plt+0x307f8>
   433b0:	ldr	r0, [fp, #-52]	; 0xffffffcc
   433b4:	ldr	r1, [fp, #-720]	; 0xfffffd30
   433b8:	cmp	r0, r1
   433bc:	movw	r0, #0
   433c0:	movne	r0, #1
   433c4:	str	r0, [sp, #1760]	; 0x6e0
   433c8:	ldr	r0, [sp, #1760]	; 0x6e0
   433cc:	and	r0, r0, #1
   433d0:	ldr	r1, [sp, #1776]	; 0x6f0
   433d4:	subs	r0, r1, r0
   433d8:	ldr	r2, [sp, #1772]	; 0x6ec
   433dc:	sbc	r3, r2, #0
   433e0:	movw	ip, #37450	; 0x924a
   433e4:	movt	ip, #18724	; 0x4924
   433e8:	subs	r0, r0, ip
   433ec:	movw	ip, #9362	; 0x2492
   433f0:	movt	ip, #4681	; 0x1249
   433f4:	sbcs	r3, r3, ip
   433f8:	str	r0, [sp, #1756]	; 0x6dc
   433fc:	str	r3, [sp, #1752]	; 0x6d8
   43400:	blt	43484 <__assert_fail@plt+0x308cc>
   43404:	b	43408 <__assert_fail@plt+0x30850>
   43408:	ldr	r0, [fp, #-728]	; 0xfffffd28
   4340c:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   43410:	mov	r2, #0
   43414:	subs	r3, r0, #1
   43418:	sbcs	ip, r1, #0
   4341c:	str	r0, [sp, #1748]	; 0x6d4
   43420:	str	r1, [sp, #1744]	; 0x6d0
   43424:	str	ip, [sp, #1740]	; 0x6cc
   43428:	str	r3, [sp, #1736]	; 0x6c8
   4342c:	str	r2, [sp, #1732]	; 0x6c4
   43430:	blt	43450 <__assert_fail@plt+0x30898>
   43434:	b	43438 <__assert_fail@plt+0x30880>
   43438:	ldr	r0, [fp, #-52]	; 0xffffffcc
   4343c:	ldr	r1, [fp, #-720]	; 0xfffffd30
   43440:	cmp	r0, r1
   43444:	movw	r0, #0
   43448:	movne	r0, #1
   4344c:	str	r0, [sp, #1732]	; 0x6c4
   43450:	ldr	r0, [sp, #1732]	; 0x6c4
   43454:	and	r0, r0, #1
   43458:	ldr	r1, [sp, #1748]	; 0x6d4
   4345c:	subs	r0, r1, r0
   43460:	ldr	r2, [sp, #1744]	; 0x6d0
   43464:	sbc	r3, r2, #0
   43468:	mov	ip, #7
   4346c:	umull	r0, ip, r0, ip
   43470:	rsb	r3, r3, r3, lsl #3
   43474:	add	r3, ip, r3
   43478:	str	r0, [fp, #-936]	; 0xfffffc58
   4347c:	str	r3, [fp, #-932]	; 0xfffffc5c
   43480:	b	43c6c <__assert_fail@plt+0x310b4>
   43484:	ldr	r0, [fp, #-728]	; 0xfffffd28
   43488:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   4348c:	mov	r2, #0
   43490:	subs	r3, r0, #1
   43494:	sbcs	ip, r1, #0
   43498:	str	r0, [sp, #1728]	; 0x6c0
   4349c:	str	r1, [sp, #1724]	; 0x6bc
   434a0:	str	ip, [sp, #1720]	; 0x6b8
   434a4:	str	r3, [sp, #1716]	; 0x6b4
   434a8:	str	r2, [sp, #1712]	; 0x6b0
   434ac:	blt	434cc <__assert_fail@plt+0x30914>
   434b0:	b	434b4 <__assert_fail@plt+0x308fc>
   434b4:	ldr	r0, [fp, #-52]	; 0xffffffcc
   434b8:	ldr	r1, [fp, #-720]	; 0xfffffd30
   434bc:	cmp	r0, r1
   434c0:	movw	r0, #0
   434c4:	movne	r0, #1
   434c8:	str	r0, [sp, #1712]	; 0x6b0
   434cc:	ldr	r0, [sp, #1712]	; 0x6b0
   434d0:	and	r0, r0, #1
   434d4:	ldr	r1, [sp, #1728]	; 0x6c0
   434d8:	subs	r0, r1, r0
   434dc:	ldr	r2, [sp, #1724]	; 0x6bc
   434e0:	sbc	r3, r2, #0
   434e4:	mov	ip, #7
   434e8:	umull	r0, ip, r0, ip
   434ec:	rsb	r3, r3, r3, lsl #3
   434f0:	add	r3, ip, r3
   434f4:	str	r0, [fp, #-936]	; 0xfffffc58
   434f8:	str	r3, [fp, #-932]	; 0xfffffc5c
   434fc:	b	43b68 <__assert_fail@plt+0x30fb0>
   43500:	b	43864 <__assert_fail@plt+0x30cac>
   43504:	ldr	r0, [fp, #-728]	; 0xfffffd28
   43508:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   4350c:	mov	r2, #0
   43510:	subs	r3, r0, #1
   43514:	sbcs	ip, r1, #0
   43518:	str	r0, [sp, #1708]	; 0x6ac
   4351c:	str	r1, [sp, #1704]	; 0x6a8
   43520:	str	ip, [sp, #1700]	; 0x6a4
   43524:	str	r3, [sp, #1696]	; 0x6a0
   43528:	str	r2, [sp, #1692]	; 0x69c
   4352c:	blt	4354c <__assert_fail@plt+0x30994>
   43530:	b	43534 <__assert_fail@plt+0x3097c>
   43534:	ldr	r0, [fp, #-52]	; 0xffffffcc
   43538:	ldr	r1, [fp, #-720]	; 0xfffffd30
   4353c:	cmp	r0, r1
   43540:	movw	r0, #0
   43544:	movne	r0, #1
   43548:	str	r0, [sp, #1692]	; 0x69c
   4354c:	ldr	r0, [sp, #1692]	; 0x69c
   43550:	and	r0, r0, #1
   43554:	ldr	r1, [sp, #1708]	; 0x6ac
   43558:	subs	r0, r1, r0
   4355c:	ldr	r2, [sp, #1704]	; 0x6a8
   43560:	sbc	r3, r2, #0
   43564:	cmn	r3, #1
   43568:	str	r0, [sp, #1688]	; 0x698
   4356c:	bgt	43670 <__assert_fail@plt+0x30ab8>
   43570:	b	43574 <__assert_fail@plt+0x309bc>
   43574:	b	43600 <__assert_fail@plt+0x30a48>
   43578:	ldr	r0, [fp, #-728]	; 0xfffffd28
   4357c:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   43580:	mov	r2, #0
   43584:	subs	r3, r0, #1
   43588:	sbcs	ip, r1, #0
   4358c:	str	r0, [sp, #1684]	; 0x694
   43590:	str	r1, [sp, #1680]	; 0x690
   43594:	str	ip, [sp, #1676]	; 0x68c
   43598:	str	r3, [sp, #1672]	; 0x688
   4359c:	str	r2, [sp, #1668]	; 0x684
   435a0:	blt	435c0 <__assert_fail@plt+0x30a08>
   435a4:	b	435a8 <__assert_fail@plt+0x309f0>
   435a8:	ldr	r0, [fp, #-52]	; 0xffffffcc
   435ac:	ldr	r1, [fp, #-720]	; 0xfffffd30
   435b0:	cmp	r0, r1
   435b4:	movw	r0, #0
   435b8:	movne	r0, #1
   435bc:	str	r0, [sp, #1668]	; 0x684
   435c0:	ldr	r0, [sp, #1668]	; 0x684
   435c4:	and	r0, r0, #1
   435c8:	ldr	r1, [sp, #1684]	; 0x694
   435cc:	subs	r0, r1, r0
   435d0:	ldr	r2, [sp, #1680]	; 0x690
   435d4:	sbc	r3, r2, #0
   435d8:	movw	ip, #9362	; 0x2492
   435dc:	movt	ip, #37449	; 0x9249
   435e0:	subs	r0, r0, ip
   435e4:	movw	ip, #18724	; 0x4924
   435e8:	movt	ip, #9362	; 0x2492
   435ec:	sbcs	r3, r3, ip
   435f0:	str	r0, [sp, #1664]	; 0x680
   435f4:	str	r3, [sp, #1660]	; 0x67c
   435f8:	bcc	43a74 <__assert_fail@plt+0x30ebc>
   435fc:	b	43af0 <__assert_fail@plt+0x30f38>
   43600:	ldr	r0, [fp, #-728]	; 0xfffffd28
   43604:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   43608:	mov	r2, #0
   4360c:	subs	r3, r0, #1
   43610:	sbcs	ip, r1, #0
   43614:	str	r0, [sp, #1656]	; 0x678
   43618:	str	r1, [sp, #1652]	; 0x674
   4361c:	str	ip, [sp, #1648]	; 0x670
   43620:	str	r3, [sp, #1644]	; 0x66c
   43624:	str	r2, [sp, #1640]	; 0x668
   43628:	blt	43648 <__assert_fail@plt+0x30a90>
   4362c:	b	43630 <__assert_fail@plt+0x30a78>
   43630:	ldr	r0, [fp, #-52]	; 0xffffffcc
   43634:	ldr	r1, [fp, #-720]	; 0xfffffd30
   43638:	cmp	r0, r1
   4363c:	movw	r0, #0
   43640:	movne	r0, #1
   43644:	str	r0, [sp, #1640]	; 0x668
   43648:	ldr	r0, [sp, #1640]	; 0x668
   4364c:	and	r0, r0, #1
   43650:	ldr	r1, [sp, #1656]	; 0x678
   43654:	subs	r0, r1, r0
   43658:	ldr	r2, [sp, #1652]	; 0x674
   4365c:	sbc	r3, r2, #0
   43660:	and	r0, r0, r3
   43664:	cmn	r0, #1
   43668:	bne	43a74 <__assert_fail@plt+0x30ebc>
   4366c:	b	43af0 <__assert_fail@plt+0x30f38>
   43670:	b	43674 <__assert_fail@plt+0x30abc>
   43674:	b	437ec <__assert_fail@plt+0x30c34>
   43678:	b	437ec <__assert_fail@plt+0x30c34>
   4367c:	b	437ec <__assert_fail@plt+0x30c34>
   43680:	b	43684 <__assert_fail@plt+0x30acc>
   43684:	ldr	r0, [fp, #-728]	; 0xfffffd28
   43688:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   4368c:	mov	r2, #0
   43690:	subs	r3, r0, #1
   43694:	sbcs	ip, r1, #0
   43698:	str	r0, [sp, #1636]	; 0x664
   4369c:	str	r1, [sp, #1632]	; 0x660
   436a0:	str	ip, [sp, #1628]	; 0x65c
   436a4:	str	r3, [sp, #1624]	; 0x658
   436a8:	str	r2, [sp, #1620]	; 0x654
   436ac:	blt	436cc <__assert_fail@plt+0x30b14>
   436b0:	b	436b4 <__assert_fail@plt+0x30afc>
   436b4:	ldr	r0, [fp, #-52]	; 0xffffffcc
   436b8:	ldr	r1, [fp, #-720]	; 0xfffffd30
   436bc:	cmp	r0, r1
   436c0:	movw	r0, #0
   436c4:	movne	r0, #1
   436c8:	str	r0, [sp, #1620]	; 0x654
   436cc:	ldr	r0, [sp, #1620]	; 0x654
   436d0:	and	r0, r0, #1
   436d4:	ldr	r1, [sp, #1636]	; 0x664
   436d8:	subs	r0, r1, r0
   436dc:	ldr	r2, [sp, #1632]	; 0x660
   436e0:	sbc	r3, r2, #0
   436e4:	rsbs	r0, r0, #0
   436e8:	rscs	r3, r3, #0
   436ec:	str	r0, [sp, #1616]	; 0x650
   436f0:	str	r3, [sp, #1612]	; 0x64c
   436f4:	blt	43a74 <__assert_fail@plt+0x30ebc>
   436f8:	b	43af0 <__assert_fail@plt+0x30f38>
   436fc:	ldr	r0, [fp, #-728]	; 0xfffffd28
   43700:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   43704:	mov	r2, #0
   43708:	subs	r3, r0, #1
   4370c:	sbcs	ip, r1, #0
   43710:	str	r0, [sp, #1608]	; 0x648
   43714:	str	r1, [sp, #1604]	; 0x644
   43718:	str	ip, [sp, #1600]	; 0x640
   4371c:	str	r3, [sp, #1596]	; 0x63c
   43720:	str	r2, [sp, #1592]	; 0x638
   43724:	blt	43744 <__assert_fail@plt+0x30b8c>
   43728:	b	4372c <__assert_fail@plt+0x30b74>
   4372c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   43730:	ldr	r1, [fp, #-720]	; 0xfffffd30
   43734:	cmp	r0, r1
   43738:	movw	r0, #0
   4373c:	movne	r0, #1
   43740:	str	r0, [sp, #1592]	; 0x638
   43744:	ldr	r0, [sp, #1592]	; 0x638
   43748:	and	r0, r0, #1
   4374c:	ldr	r1, [sp, #1608]	; 0x648
   43750:	subs	r0, r1, r0
   43754:	ldr	r2, [sp, #1604]	; 0x644
   43758:	sbc	r3, r2, #0
   4375c:	subs	r0, r0, #1
   43760:	sbcs	r3, r3, #0
   43764:	str	r0, [sp, #1588]	; 0x634
   43768:	str	r3, [sp, #1584]	; 0x630
   4376c:	blt	43af0 <__assert_fail@plt+0x30f38>
   43770:	b	43774 <__assert_fail@plt+0x30bbc>
   43774:	ldr	r0, [fp, #-728]	; 0xfffffd28
   43778:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   4377c:	mov	r2, #0
   43780:	subs	r3, r0, #1
   43784:	sbcs	ip, r1, #0
   43788:	str	r0, [sp, #1580]	; 0x62c
   4378c:	str	r1, [sp, #1576]	; 0x628
   43790:	str	ip, [sp, #1572]	; 0x624
   43794:	str	r3, [sp, #1568]	; 0x620
   43798:	str	r2, [sp, #1564]	; 0x61c
   4379c:	blt	437bc <__assert_fail@plt+0x30c04>
   437a0:	b	437a4 <__assert_fail@plt+0x30bec>
   437a4:	ldr	r0, [fp, #-52]	; 0xffffffcc
   437a8:	ldr	r1, [fp, #-720]	; 0xfffffd30
   437ac:	cmp	r0, r1
   437b0:	movw	r0, #0
   437b4:	movne	r0, #1
   437b8:	str	r0, [sp, #1564]	; 0x61c
   437bc:	ldr	r0, [sp, #1564]	; 0x61c
   437c0:	and	r0, r0, #1
   437c4:	ldr	r1, [sp, #1580]	; 0x62c
   437c8:	subs	r0, r1, r0
   437cc:	ldr	r2, [sp, #1576]	; 0x628
   437d0:	sbc	r3, r2, #0
   437d4:	subs	r0, r0, #1
   437d8:	sbc	r3, r3, #0
   437dc:	cmn	r3, #1
   437e0:	str	r0, [sp, #1560]	; 0x618
   437e4:	bgt	43a74 <__assert_fail@plt+0x30ebc>
   437e8:	b	43af0 <__assert_fail@plt+0x30f38>
   437ec:	ldr	r0, [fp, #-728]	; 0xfffffd28
   437f0:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   437f4:	mov	r2, #0
   437f8:	subs	r3, r0, #1
   437fc:	sbcs	ip, r1, #0
   43800:	str	r0, [sp, #1556]	; 0x614
   43804:	str	r1, [sp, #1552]	; 0x610
   43808:	str	ip, [sp, #1548]	; 0x60c
   4380c:	str	r3, [sp, #1544]	; 0x608
   43810:	str	r2, [sp, #1540]	; 0x604
   43814:	blt	43834 <__assert_fail@plt+0x30c7c>
   43818:	b	4381c <__assert_fail@plt+0x30c64>
   4381c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   43820:	ldr	r1, [fp, #-720]	; 0xfffffd30
   43824:	cmp	r0, r1
   43828:	movw	r0, #0
   4382c:	movne	r0, #1
   43830:	str	r0, [sp, #1540]	; 0x604
   43834:	ldr	r0, [sp, #1540]	; 0x604
   43838:	and	r0, r0, #1
   4383c:	ldr	r1, [sp, #1556]	; 0x614
   43840:	subs	r0, r1, r0
   43844:	ldr	r2, [sp, #1552]	; 0x610
   43848:	sbc	r3, r2, #0
   4384c:	rsbs	r0, r0, #0
   43850:	rscs	r3, r3, #0
   43854:	str	r0, [sp, #1536]	; 0x600
   43858:	str	r3, [sp, #1532]	; 0x5fc
   4385c:	blt	43a74 <__assert_fail@plt+0x30ebc>
   43860:	b	43af0 <__assert_fail@plt+0x30f38>
   43864:	b	4386c <__assert_fail@plt+0x30cb4>
   43868:	b	43af0 <__assert_fail@plt+0x30f38>
   4386c:	ldr	r0, [fp, #-728]	; 0xfffffd28
   43870:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   43874:	mov	r2, #0
   43878:	subs	r3, r0, #1
   4387c:	sbcs	ip, r1, #0
   43880:	str	r0, [sp, #1528]	; 0x5f8
   43884:	str	r1, [sp, #1524]	; 0x5f4
   43888:	str	ip, [sp, #1520]	; 0x5f0
   4388c:	str	r3, [sp, #1516]	; 0x5ec
   43890:	str	r2, [sp, #1512]	; 0x5e8
   43894:	blt	438b4 <__assert_fail@plt+0x30cfc>
   43898:	b	4389c <__assert_fail@plt+0x30ce4>
   4389c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   438a0:	ldr	r1, [fp, #-720]	; 0xfffffd30
   438a4:	cmp	r0, r1
   438a8:	movw	r0, #0
   438ac:	movne	r0, #1
   438b0:	str	r0, [sp, #1512]	; 0x5e8
   438b4:	ldr	r0, [sp, #1512]	; 0x5e8
   438b8:	and	r0, r0, #1
   438bc:	ldr	r1, [sp, #1528]	; 0x5f8
   438c0:	subs	r0, r1, r0
   438c4:	ldr	r2, [sp, #1524]	; 0x5f4
   438c8:	sbc	r3, r2, #0
   438cc:	cmn	r3, #1
   438d0:	str	r0, [sp, #1508]	; 0x5e4
   438d4:	bgt	439ec <__assert_fail@plt+0x30e34>
   438d8:	b	438dc <__assert_fail@plt+0x30d24>
   438dc:	b	438e0 <__assert_fail@plt+0x30d28>
   438e0:	b	43964 <__assert_fail@plt+0x30dac>
   438e4:	b	43964 <__assert_fail@plt+0x30dac>
   438e8:	ldr	r0, [fp, #-728]	; 0xfffffd28
   438ec:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   438f0:	mov	r2, #0
   438f4:	subs	r3, r0, #1
   438f8:	sbcs	ip, r1, #0
   438fc:	str	r0, [sp, #1504]	; 0x5e0
   43900:	str	r1, [sp, #1500]	; 0x5dc
   43904:	str	ip, [sp, #1496]	; 0x5d8
   43908:	str	r3, [sp, #1492]	; 0x5d4
   4390c:	str	r2, [sp, #1488]	; 0x5d0
   43910:	blt	43930 <__assert_fail@plt+0x30d78>
   43914:	b	43918 <__assert_fail@plt+0x30d60>
   43918:	ldr	r0, [fp, #-52]	; 0xffffffcc
   4391c:	ldr	r1, [fp, #-720]	; 0xfffffd30
   43920:	cmp	r0, r1
   43924:	movw	r0, #0
   43928:	movne	r0, #1
   4392c:	str	r0, [sp, #1488]	; 0x5d0
   43930:	ldr	r0, [sp, #1488]	; 0x5d0
   43934:	and	r0, r0, #1
   43938:	ldr	r1, [sp, #1504]	; 0x5e0
   4393c:	subs	r0, r1, r0
   43940:	ldr	r2, [sp, #1500]	; 0x5dc
   43944:	sbc	r3, r2, #0
   43948:	and	r0, r0, r3
   4394c:	cmn	r0, #1
   43950:	bne	43964 <__assert_fail@plt+0x30dac>
   43954:	b	43958 <__assert_fail@plt+0x30da0>
   43958:	b	4395c <__assert_fail@plt+0x30da4>
   4395c:	b	43a74 <__assert_fail@plt+0x30ebc>
   43960:	b	43a74 <__assert_fail@plt+0x30ebc>
   43964:	ldr	r0, [fp, #-728]	; 0xfffffd28
   43968:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   4396c:	mov	r2, #0
   43970:	subs	r3, r0, #1
   43974:	sbcs	ip, r1, #0
   43978:	str	r0, [sp, #1484]	; 0x5cc
   4397c:	str	r1, [sp, #1480]	; 0x5c8
   43980:	str	ip, [sp, #1476]	; 0x5c4
   43984:	str	r3, [sp, #1472]	; 0x5c0
   43988:	str	r2, [sp, #1468]	; 0x5bc
   4398c:	blt	439ac <__assert_fail@plt+0x30df4>
   43990:	b	43994 <__assert_fail@plt+0x30ddc>
   43994:	ldr	r0, [fp, #-52]	; 0xffffffcc
   43998:	ldr	r1, [fp, #-720]	; 0xfffffd30
   4399c:	cmp	r0, r1
   439a0:	movw	r0, #0
   439a4:	movne	r0, #1
   439a8:	str	r0, [sp, #1468]	; 0x5bc
   439ac:	ldr	r0, [sp, #1468]	; 0x5bc
   439b0:	and	r0, r0, #1
   439b4:	ldr	r1, [sp, #1484]	; 0x5cc
   439b8:	subs	r2, r1, r0
   439bc:	ldr	r0, [sp, #1480]	; 0x5c8
   439c0:	sbc	r3, r0, #0
   439c4:	mov	ip, #0
   439c8:	mov	r0, ip
   439cc:	mov	r1, ip
   439d0:	bl	77780 <__assert_fail@plt+0x64bc8>
   439d4:	subs	r0, r0, #7
   439d8:	sbcs	r1, r1, #0
   439dc:	str	r0, [sp, #1464]	; 0x5b8
   439e0:	str	r1, [sp, #1460]	; 0x5b4
   439e4:	blt	43a74 <__assert_fail@plt+0x30ebc>
   439e8:	b	43af0 <__assert_fail@plt+0x30f38>
   439ec:	ldr	r0, [fp, #-728]	; 0xfffffd28
   439f0:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   439f4:	mov	r2, #0
   439f8:	subs	r3, r0, #1
   439fc:	sbcs	ip, r1, #0
   43a00:	str	r0, [sp, #1456]	; 0x5b0
   43a04:	str	r1, [sp, #1452]	; 0x5ac
   43a08:	str	ip, [sp, #1448]	; 0x5a8
   43a0c:	str	r3, [sp, #1444]	; 0x5a4
   43a10:	str	r2, [sp, #1440]	; 0x5a0
   43a14:	blt	43a34 <__assert_fail@plt+0x30e7c>
   43a18:	b	43a1c <__assert_fail@plt+0x30e64>
   43a1c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   43a20:	ldr	r1, [fp, #-720]	; 0xfffffd30
   43a24:	cmp	r0, r1
   43a28:	movw	r0, #0
   43a2c:	movne	r0, #1
   43a30:	str	r0, [sp, #1440]	; 0x5a0
   43a34:	ldr	r0, [sp, #1440]	; 0x5a0
   43a38:	and	r0, r0, #1
   43a3c:	ldr	r1, [sp, #1456]	; 0x5b0
   43a40:	subs	r0, r1, r0
   43a44:	ldr	r2, [sp, #1452]	; 0x5ac
   43a48:	sbc	r3, r2, #0
   43a4c:	movw	ip, #9363	; 0x2493
   43a50:	movt	ip, #37449	; 0x9249
   43a54:	subs	r0, r0, ip
   43a58:	movw	ip, #18724	; 0x4924
   43a5c:	movt	ip, #9362	; 0x2492
   43a60:	sbcs	r3, r3, ip
   43a64:	str	r0, [sp, #1436]	; 0x59c
   43a68:	str	r3, [sp, #1432]	; 0x598
   43a6c:	bcc	43af0 <__assert_fail@plt+0x30f38>
   43a70:	b	43a74 <__assert_fail@plt+0x30ebc>
   43a74:	ldr	r0, [fp, #-728]	; 0xfffffd28
   43a78:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   43a7c:	mov	r2, #0
   43a80:	subs	r3, r0, #1
   43a84:	sbcs	ip, r1, #0
   43a88:	str	r0, [sp, #1428]	; 0x594
   43a8c:	str	r1, [sp, #1424]	; 0x590
   43a90:	str	ip, [sp, #1420]	; 0x58c
   43a94:	str	r3, [sp, #1416]	; 0x588
   43a98:	str	r2, [sp, #1412]	; 0x584
   43a9c:	blt	43abc <__assert_fail@plt+0x30f04>
   43aa0:	b	43aa4 <__assert_fail@plt+0x30eec>
   43aa4:	ldr	r0, [fp, #-52]	; 0xffffffcc
   43aa8:	ldr	r1, [fp, #-720]	; 0xfffffd30
   43aac:	cmp	r0, r1
   43ab0:	movw	r0, #0
   43ab4:	movne	r0, #1
   43ab8:	str	r0, [sp, #1412]	; 0x584
   43abc:	ldr	r0, [sp, #1412]	; 0x584
   43ac0:	and	r0, r0, #1
   43ac4:	ldr	r1, [sp, #1428]	; 0x594
   43ac8:	subs	r0, r1, r0
   43acc:	ldr	r2, [sp, #1424]	; 0x590
   43ad0:	sbc	r3, r2, #0
   43ad4:	mov	ip, #7
   43ad8:	umull	r0, ip, r0, ip
   43adc:	rsb	r3, r3, r3, lsl #3
   43ae0:	add	r3, ip, r3
   43ae4:	str	r0, [fp, #-936]	; 0xfffffc58
   43ae8:	str	r3, [fp, #-932]	; 0xfffffc5c
   43aec:	b	43c6c <__assert_fail@plt+0x310b4>
   43af0:	ldr	r0, [fp, #-728]	; 0xfffffd28
   43af4:	ldr	r1, [fp, #-724]	; 0xfffffd2c
   43af8:	mov	r2, #0
   43afc:	subs	r3, r0, #1
   43b00:	sbcs	ip, r1, #0
   43b04:	str	r0, [sp, #1408]	; 0x580
   43b08:	str	r1, [sp, #1404]	; 0x57c
   43b0c:	str	ip, [sp, #1400]	; 0x578
   43b10:	str	r3, [sp, #1396]	; 0x574
   43b14:	str	r2, [sp, #1392]	; 0x570
   43b18:	blt	43b38 <__assert_fail@plt+0x30f80>
   43b1c:	b	43b20 <__assert_fail@plt+0x30f68>
   43b20:	ldr	r0, [fp, #-52]	; 0xffffffcc
   43b24:	ldr	r1, [fp, #-720]	; 0xfffffd30
   43b28:	cmp	r0, r1
   43b2c:	movw	r0, #0
   43b30:	movne	r0, #1
   43b34:	str	r0, [sp, #1392]	; 0x570
   43b38:	ldr	r0, [sp, #1392]	; 0x570
   43b3c:	and	r0, r0, #1
   43b40:	ldr	r1, [sp, #1408]	; 0x580
   43b44:	subs	r0, r1, r0
   43b48:	ldr	r2, [sp, #1404]	; 0x57c
   43b4c:	sbc	r3, r2, #0
   43b50:	mov	ip, #7
   43b54:	umull	r0, ip, r0, ip
   43b58:	rsb	r3, r3, r3, lsl #3
   43b5c:	add	r3, ip, r3
   43b60:	str	r0, [fp, #-936]	; 0xfffffc58
   43b64:	str	r3, [fp, #-932]	; 0xfffffc5c
   43b68:	ldr	r0, [fp, #-720]	; 0xfffffd30
   43b6c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   43b70:	sub	r0, r0, r1
   43b74:	add	r0, r0, #7
   43b78:	movw	r1, #9363	; 0x2493
   43b7c:	movt	r1, #37449	; 0x9249
   43b80:	smmla	r1, r0, r1, r0
   43b84:	asr	r2, r1, #2
   43b88:	add	r1, r2, r1, lsr #31
   43b8c:	sub	r1, r1, r1, lsl #3
   43b90:	add	r0, r0, r1
   43b94:	ldr	r1, [fp, #-936]	; 0xfffffc58
   43b98:	ldr	r2, [fp, #-932]	; 0xfffffc5c
   43b9c:	asr	r3, r0, #31
   43ba0:	adds	r0, r0, r1
   43ba4:	adc	r1, r3, r2
   43ba8:	mov	ip, #0
   43bac:	cmn	r1, #1
   43bb0:	mov	lr, ip
   43bb4:	movwgt	lr, #1
   43bb8:	cmn	r3, #1
   43bbc:	mov	r3, ip
   43bc0:	movwgt	r3, #1
   43bc4:	sub	r4, r3, lr
   43bc8:	cmp	r3, lr
   43bcc:	movwne	r4, #1
   43bd0:	cmn	r2, #1
   43bd4:	movwgt	ip, #1
   43bd8:	sub	r2, r3, ip
   43bdc:	clz	r2, r2
   43be0:	lsr	r2, r2, #5
   43be4:	and	r2, r2, r4
   43be8:	str	r0, [fp, #-936]	; 0xfffffc58
   43bec:	str	r1, [fp, #-932]	; 0xfffffc5c
   43bf0:	tst	r2, #1
   43bf4:	bne	43c6c <__assert_fail@plt+0x310b4>
   43bf8:	ldr	r0, [fp, #-936]	; 0xfffffc58
   43bfc:	ldr	r1, [fp, #-932]	; 0xfffffc5c
   43c00:	ldr	r2, [fp, #-64]	; 0xffffffc0
   43c04:	asr	r3, r2, #31
   43c08:	mov	ip, #0
   43c0c:	cmn	r1, #1
   43c10:	mov	lr, ip
   43c14:	movwgt	lr, #1
   43c18:	adds	r0, r0, r2
   43c1c:	adc	r1, r1, r2, asr #31
   43c20:	cmn	r1, #1
   43c24:	mov	r2, ip
   43c28:	movwgt	r2, #1
   43c2c:	sub	r4, lr, r2
   43c30:	cmp	lr, r2
   43c34:	movwne	r4, #1
   43c38:	cmn	r3, #1
   43c3c:	movwgt	ip, #1
   43c40:	sub	r2, lr, ip
   43c44:	clz	r2, r2
   43c48:	lsr	r2, r2, #5
   43c4c:	and	r2, r2, r4
   43c50:	eor	r1, r1, r0, asr #31
   43c54:	cmp	r1, #0
   43c58:	movwne	r1, #1
   43c5c:	orr	r1, r2, r1
   43c60:	str	r0, [fp, #-64]	; 0xffffffc0
   43c64:	tst	r1, #1
   43c68:	beq	43c78 <__assert_fail@plt+0x310c0>
   43c6c:	mvn	r0, #0
   43c70:	str	r0, [fp, #-368]	; 0xfffffe90
   43c74:	b	43c90 <__assert_fail@plt+0x310d8>
   43c78:	mvn	r0, #0
   43c7c:	str	r0, [fp, #-44]	; 0xffffffd4
   43c80:	ldr	r0, [fp, #-380]	; 0xfffffe84
   43c84:	sub	r1, fp, #76	; 0x4c
   43c88:	bl	70384 <__assert_fail@plt+0x5d7cc>
   43c8c:	str	r0, [fp, #-368]	; 0xfffffe90
   43c90:	ldr	r0, [fp, #-368]	; 0xfffffe90
   43c94:	cmn	r0, #1
   43c98:	bne	43d44 <__assert_fail@plt+0x3118c>
   43c9c:	sub	r0, fp, #736	; 0x2e0
   43ca0:	bl	3e9ac <__assert_fail@plt+0x2bdf4>
   43ca4:	tst	r0, #1
   43ca8:	beq	43d40 <__assert_fail@plt+0x31188>
   43cac:	sub	r2, fp, #247	; 0xf7
   43cb0:	movw	r0, #55384	; 0xd858
   43cb4:	movt	r0, #7
   43cb8:	str	r2, [sp, #1388]	; 0x56c
   43cbc:	bl	12864 <gettext@plt>
   43cc0:	sub	r2, fp, #736	; 0x2e0
   43cc4:	sub	r1, fp, #928	; 0x3a0
   43cc8:	mov	lr, #100	; 0x64
   43ccc:	str	r0, [sp, #1384]	; 0x568
   43cd0:	mov	r0, r2
   43cd4:	mov	r2, lr
   43cd8:	bl	47090 <__assert_fail@plt+0x344d8>
   43cdc:	ldr	r2, [fp, #-728]	; 0xfffffd28
   43ce0:	ldr	r3, [fp, #-724]	; 0xfffffd2c
   43ce4:	ldr	r1, [fp, #-720]	; 0xfffffd30
   43ce8:	sub	lr, fp, #76	; 0x4c
   43cec:	str	r0, [sp, #1380]	; 0x564
   43cf0:	mov	r0, lr
   43cf4:	sub	lr, fp, #736	; 0x2e0
   43cf8:	str	r1, [sp, #1376]	; 0x560
   43cfc:	mov	r1, lr
   43d00:	ldr	lr, [sp, #1388]	; 0x56c
   43d04:	str	r2, [sp, #1372]	; 0x55c
   43d08:	mov	r2, lr
   43d0c:	movw	ip, #100	; 0x64
   43d10:	str	r3, [sp, #1368]	; 0x558
   43d14:	mov	r3, ip
   43d18:	bl	483b4 <__assert_fail@plt+0x357fc>
   43d1c:	mov	r1, sp
   43d20:	str	r0, [r1, #4]
   43d24:	ldr	r0, [sp, #1376]	; 0x560
   43d28:	str	r0, [r1]
   43d2c:	ldr	r0, [sp, #1384]	; 0x568
   43d30:	ldr	r1, [sp, #1380]	; 0x564
   43d34:	ldr	r2, [sp, #1372]	; 0x55c
   43d38:	ldr	r3, [sp, #1368]	; 0x558
   43d3c:	bl	3e9c4 <__assert_fail@plt+0x2be0c>
   43d40:	b	47060 <__assert_fail@plt+0x344a8>
   43d44:	sub	r0, fp, #736	; 0x2e0
   43d48:	bl	3e9ac <__assert_fail@plt+0x2bdf4>
   43d4c:	tst	r0, #1
   43d50:	beq	43dac <__assert_fail@plt+0x311f4>
   43d54:	movw	r0, #55464	; 0xd8a8
   43d58:	movt	r0, #7
   43d5c:	bl	12864 <gettext@plt>
   43d60:	sub	r1, fp, #928	; 0x3a0
   43d64:	sub	lr, fp, #736	; 0x2e0
   43d68:	str	r0, [sp, #1364]	; 0x554
   43d6c:	mov	r0, lr
   43d70:	movw	r2, #100	; 0x64
   43d74:	bl	47090 <__assert_fail@plt+0x344d8>
   43d78:	sub	r2, fp, #247	; 0xf7
   43d7c:	sub	r1, fp, #76	; 0x4c
   43d80:	str	r0, [sp, #1360]	; 0x550
   43d84:	mov	r0, r1
   43d88:	sub	r1, fp, #736	; 0x2e0
   43d8c:	movw	r3, #100	; 0x64
   43d90:	bl	483b4 <__assert_fail@plt+0x357fc>
   43d94:	ldr	r1, [sp, #1364]	; 0x554
   43d98:	str	r0, [sp, #1356]	; 0x54c
   43d9c:	mov	r0, r1
   43da0:	ldr	r1, [sp, #1360]	; 0x550
   43da4:	ldr	r2, [sp, #1356]	; 0x54c
   43da8:	bl	3e9c4 <__assert_fail@plt+0x2be0c>
   43dac:	b	43db0 <__assert_fail@plt+0x311f8>
   43db0:	sub	r0, fp, #736	; 0x2e0
   43db4:	bl	3e9ac <__assert_fail@plt+0x2bdf4>
   43db8:	tst	r0, #1
   43dbc:	beq	43e9c <__assert_fail@plt+0x312e4>
   43dc0:	ldr	r0, [fp, #-580]	; 0xfffffdbc
   43dc4:	cmp	r0, #0
   43dc8:	bne	43e10 <__assert_fail@plt+0x31258>
   43dcc:	ldr	r0, [fp, #-576]	; 0xfffffdc0
   43dd0:	cmp	r0, #0
   43dd4:	bne	43e10 <__assert_fail@plt+0x31258>
   43dd8:	movw	r0, #55494	; 0xd8c6
   43ddc:	movt	r0, #7
   43de0:	bl	12864 <gettext@plt>
   43de4:	sub	r1, fp, #247	; 0xf7
   43de8:	sub	lr, fp, #76	; 0x4c
   43dec:	str	r0, [sp, #1352]	; 0x548
   43df0:	mov	r0, lr
   43df4:	movw	r2, #100	; 0x64
   43df8:	bl	484d4 <__assert_fail@plt+0x3591c>
   43dfc:	ldr	r1, [sp, #1352]	; 0x548
   43e00:	str	r0, [sp, #1348]	; 0x544
   43e04:	mov	r0, r1
   43e08:	ldr	r1, [sp, #1348]	; 0x544
   43e0c:	bl	3e9c4 <__assert_fail@plt+0x2be0c>
   43e10:	ldr	r0, [fp, #-576]	; 0xfffffdc0
   43e14:	cmp	r0, #0
   43e18:	beq	43e60 <__assert_fail@plt+0x312a8>
   43e1c:	ldr	r0, [fp, #-580]	; 0xfffffdbc
   43e20:	cmp	r0, #0
   43e24:	beq	43e60 <__assert_fail@plt+0x312a8>
   43e28:	movw	r0, #55538	; 0xd8f2
   43e2c:	movt	r0, #7
   43e30:	bl	12864 <gettext@plt>
   43e34:	sub	r1, fp, #928	; 0x3a0
   43e38:	sub	lr, fp, #736	; 0x2e0
   43e3c:	str	r0, [sp, #1344]	; 0x540
   43e40:	mov	r0, lr
   43e44:	movw	r2, #100	; 0x64
   43e48:	bl	47090 <__assert_fail@plt+0x344d8>
   43e4c:	ldr	r1, [sp, #1344]	; 0x540
   43e50:	str	r0, [sp, #1340]	; 0x53c
   43e54:	mov	r0, r1
   43e58:	ldr	r1, [sp, #1340]	; 0x53c
   43e5c:	bl	3e9c4 <__assert_fail@plt+0x2be0c>
   43e60:	movw	r0, #55595	; 0xd92b
   43e64:	movt	r0, #7
   43e68:	bl	12864 <gettext@plt>
   43e6c:	sub	r2, fp, #247	; 0xf7
   43e70:	sub	lr, fp, #76	; 0x4c
   43e74:	str	r0, [sp, #1336]	; 0x538
   43e78:	mov	r0, lr
   43e7c:	sub	r1, fp, #736	; 0x2e0
   43e80:	movw	r3, #100	; 0x64
   43e84:	bl	483b4 <__assert_fail@plt+0x357fc>
   43e88:	ldr	r1, [sp, #1336]	; 0x538
   43e8c:	str	r0, [sp, #1332]	; 0x534
   43e90:	mov	r0, r1
   43e94:	ldr	r1, [sp, #1332]	; 0x534
   43e98:	bl	3e9c4 <__assert_fail@plt+0x2be0c>
   43e9c:	ldr	r0, [fp, #-640]	; 0xfffffd80
   43ea0:	ldr	r1, [fp, #-636]	; 0xfffffd84
   43ea4:	ldr	r2, [fp, #-632]	; 0xfffffd88
   43ea8:	ldr	r3, [fp, #-628]	; 0xfffffd8c
   43eac:	orr	r0, r0, r2
   43eb0:	orr	r1, r1, r3
   43eb4:	ldr	r2, [fp, #-624]	; 0xfffffd90
   43eb8:	ldr	r3, [fp, #-620]	; 0xfffffd94
   43ebc:	orr	r1, r1, r3
   43ec0:	orr	r0, r0, r2
   43ec4:	orr	r0, r0, r1
   43ec8:	cmp	r0, #0
   43ecc:	beq	4433c <__assert_fail@plt+0x31784>
   43ed0:	b	43ed4 <__assert_fail@plt+0x3131c>
   43ed4:	sub	r0, fp, #736	; 0x2e0
   43ed8:	bl	3e9ac <__assert_fail@plt+0x2bdf4>
   43edc:	tst	r0, #1
   43ee0:	beq	43f68 <__assert_fail@plt+0x313b0>
   43ee4:	ldr	r0, [fp, #-640]	; 0xfffffd80
   43ee8:	ldr	r1, [fp, #-636]	; 0xfffffd84
   43eec:	orr	r0, r0, r1
   43ef0:	cmp	r0, #0
   43ef4:	bne	43f14 <__assert_fail@plt+0x3135c>
   43ef8:	b	43efc <__assert_fail@plt+0x31344>
   43efc:	ldr	r0, [fp, #-632]	; 0xfffffd88
   43f00:	ldr	r1, [fp, #-628]	; 0xfffffd8c
   43f04:	orr	r0, r0, r1
   43f08:	cmp	r0, #0
   43f0c:	beq	43f30 <__assert_fail@plt+0x31378>
   43f10:	b	43f14 <__assert_fail@plt+0x3135c>
   43f14:	ldr	r0, [fp, #-64]	; 0xffffffc0
   43f18:	cmp	r0, #15
   43f1c:	beq	43f30 <__assert_fail@plt+0x31378>
   43f20:	movw	r0, #55621	; 0xd945
   43f24:	movt	r0, #7
   43f28:	bl	12864 <gettext@plt>
   43f2c:	bl	3e9c4 <__assert_fail@plt+0x2be0c>
   43f30:	ldr	r0, [fp, #-624]	; 0xfffffd90
   43f34:	ldr	r1, [fp, #-620]	; 0xfffffd94
   43f38:	orr	r0, r0, r1
   43f3c:	cmp	r0, #0
   43f40:	beq	43f64 <__assert_fail@plt+0x313ac>
   43f44:	b	43f48 <__assert_fail@plt+0x31390>
   43f48:	ldr	r0, [fp, #-68]	; 0xffffffbc
   43f4c:	cmp	r0, #12
   43f50:	beq	43f64 <__assert_fail@plt+0x313ac>
   43f54:	movw	r0, #55718	; 0xd9a6
   43f58:	movt	r0, #7
   43f5c:	bl	12864 <gettext@plt>
   43f60:	bl	3e9c4 <__assert_fail@plt+0x2be0c>
   43f64:	b	43f68 <__assert_fail@plt+0x313b0>
   43f68:	ldr	r0, [fp, #-56]	; 0xffffffc8
   43f6c:	asr	r1, r0, #31
   43f70:	ldr	r2, [fp, #-640]	; 0xfffffd80
   43f74:	ldr	r3, [fp, #-636]	; 0xfffffd84
   43f78:	mov	ip, #0
   43f7c:	cmn	r1, #1
   43f80:	mov	lr, ip
   43f84:	movwgt	lr, #1
   43f88:	adds	r0, r0, r2
   43f8c:	adc	r1, r1, r3
   43f90:	cmn	r1, #1
   43f94:	mov	r2, ip
   43f98:	movwgt	r2, #1
   43f9c:	sub	r4, lr, r2
   43fa0:	cmp	lr, r2
   43fa4:	movwne	r4, #1
   43fa8:	cmn	r3, #1
   43fac:	movwgt	ip, #1
   43fb0:	sub	r2, lr, ip
   43fb4:	clz	r2, r2
   43fb8:	lsr	r2, r2, #5
   43fbc:	and	r2, r2, r4
   43fc0:	eor	r1, r1, r0, asr #31
   43fc4:	cmp	r1, #0
   43fc8:	movwne	r1, #1
   43fcc:	orr	r1, r2, r1
   43fd0:	str	r0, [fp, #-940]	; 0xfffffc54
   43fd4:	tst	r1, #1
   43fd8:	bne	440c4 <__assert_fail@plt+0x3150c>
   43fdc:	ldr	r0, [fp, #-60]	; 0xffffffc4
   43fe0:	asr	r1, r0, #31
   43fe4:	ldr	r2, [fp, #-632]	; 0xfffffd88
   43fe8:	ldr	r3, [fp, #-628]	; 0xfffffd8c
   43fec:	mov	ip, #0
   43ff0:	cmn	r1, #1
   43ff4:	mov	lr, ip
   43ff8:	movwgt	lr, #1
   43ffc:	adds	r0, r0, r2
   44000:	adc	r1, r1, r3
   44004:	cmn	r1, #1
   44008:	mov	r2, ip
   4400c:	movwgt	r2, #1
   44010:	sub	r4, lr, r2
   44014:	cmp	lr, r2
   44018:	movwne	r4, #1
   4401c:	cmn	r3, #1
   44020:	movwgt	ip, #1
   44024:	sub	r2, lr, ip
   44028:	clz	r2, r2
   4402c:	lsr	r2, r2, #5
   44030:	and	r2, r2, r4
   44034:	eor	r1, r1, r0, asr #31
   44038:	cmp	r1, #0
   4403c:	movwne	r1, #1
   44040:	orr	r1, r2, r1
   44044:	str	r0, [fp, #-944]	; 0xfffffc50
   44048:	tst	r1, #1
   4404c:	bne	440c4 <__assert_fail@plt+0x3150c>
   44050:	ldr	r0, [fp, #-64]	; 0xffffffc0
   44054:	asr	r1, r0, #31
   44058:	ldr	r2, [fp, #-624]	; 0xfffffd90
   4405c:	ldr	r3, [fp, #-620]	; 0xfffffd94
   44060:	mov	ip, #0
   44064:	cmn	r1, #1
   44068:	mov	lr, ip
   4406c:	movwgt	lr, #1
   44070:	adds	r0, r0, r2
   44074:	adc	r1, r1, r3
   44078:	cmn	r1, #1
   4407c:	mov	r2, ip
   44080:	movwgt	r2, #1
   44084:	sub	r4, lr, r2
   44088:	cmp	lr, r2
   4408c:	movwne	r4, #1
   44090:	cmn	r3, #1
   44094:	movwgt	ip, #1
   44098:	sub	r2, lr, ip
   4409c:	clz	r2, r2
   440a0:	lsr	r2, r2, #5
   440a4:	and	r2, r2, r4
   440a8:	eor	r1, r1, r0, asr #31
   440ac:	cmp	r1, #0
   440b0:	movwne	r1, #1
   440b4:	orr	r1, r2, r1
   440b8:	str	r0, [fp, #-948]	; 0xfffffc4c
   440bc:	tst	r1, #1
   440c0:	beq	440f4 <__assert_fail@plt+0x3153c>
   440c4:	sub	r0, fp, #736	; 0x2e0
   440c8:	bl	3e9ac <__assert_fail@plt+0x2bdf4>
   440cc:	tst	r0, #1
   440d0:	beq	440f0 <__assert_fail@plt+0x31538>
   440d4:	movw	r0, #55789	; 0xd9ed
   440d8:	movt	r0, #7
   440dc:	bl	12864 <gettext@plt>
   440e0:	movw	r1, #55803	; 0xd9fb
   440e4:	movt	r1, #7
   440e8:	movw	r2, #2149	; 0x865
   440ec:	bl	3e9c4 <__assert_fail@plt+0x2be0c>
   440f0:	b	47060 <__assert_fail@plt+0x344a8>
   440f4:	ldr	r0, [fp, #-940]	; 0xfffffc54
   440f8:	str	r0, [fp, #-56]	; 0xffffffc8
   440fc:	ldr	r0, [fp, #-944]	; 0xfffffc50
   44100:	str	r0, [fp, #-60]	; 0xffffffc4
   44104:	ldr	r0, [fp, #-948]	; 0xfffffc4c
   44108:	str	r0, [fp, #-64]	; 0xffffffc0
   4410c:	ldr	r0, [fp, #-112]	; 0xffffff90
   44110:	str	r0, [fp, #-68]	; 0xffffffbc
   44114:	ldr	r0, [fp, #-116]	; 0xffffff8c
   44118:	str	r0, [fp, #-72]	; 0xffffffb8
   4411c:	ldr	r0, [fp, #-120]	; 0xffffff88
   44120:	str	r0, [fp, #-76]	; 0xffffffb4
   44124:	ldr	r0, [fp, #-88]	; 0xffffffa8
   44128:	str	r0, [fp, #-44]	; 0xffffffd4
   4412c:	ldr	r0, [fp, #-380]	; 0xfffffe84
   44130:	sub	r1, fp, #76	; 0x4c
   44134:	bl	70384 <__assert_fail@plt+0x5d7cc>
   44138:	str	r0, [fp, #-368]	; 0xfffffe90
   4413c:	ldr	r0, [fp, #-368]	; 0xfffffe90
   44140:	cmn	r0, #1
   44144:	bne	44198 <__assert_fail@plt+0x315e0>
   44148:	sub	r0, fp, #736	; 0x2e0
   4414c:	bl	3e9ac <__assert_fail@plt+0x2bdf4>
   44150:	tst	r0, #1
   44154:	beq	44194 <__assert_fail@plt+0x315dc>
   44158:	movw	r0, #55820	; 0xda0c
   4415c:	movt	r0, #7
   44160:	bl	12864 <gettext@plt>
   44164:	sub	r2, fp, #247	; 0xf7
   44168:	sub	lr, fp, #76	; 0x4c
   4416c:	str	r0, [sp, #1328]	; 0x530
   44170:	mov	r0, lr
   44174:	sub	r1, fp, #736	; 0x2e0
   44178:	movw	r3, #100	; 0x64
   4417c:	bl	483b4 <__assert_fail@plt+0x357fc>
   44180:	ldr	r1, [sp, #1328]	; 0x530
   44184:	str	r0, [sp, #1324]	; 0x52c
   44188:	mov	r0, r1
   4418c:	ldr	r1, [sp, #1324]	; 0x52c
   44190:	bl	3e9c4 <__assert_fail@plt+0x2be0c>
   44194:	b	47060 <__assert_fail@plt+0x344a8>
   44198:	sub	r0, fp, #736	; 0x2e0
   4419c:	bl	3e9ac <__assert_fail@plt+0x2bdf4>
   441a0:	tst	r0, #1
   441a4:	beq	44338 <__assert_fail@plt+0x31780>
   441a8:	movw	r0, #55883	; 0xda4b
   441ac:	movt	r0, #7
   441b0:	bl	12864 <gettext@plt>
   441b4:	ldr	r2, [fp, #-640]	; 0xfffffd80
   441b8:	ldr	r3, [fp, #-636]	; 0xfffffd84
   441bc:	ldr	lr, [fp, #-632]	; 0xfffffd88
   441c0:	ldr	r1, [fp, #-628]	; 0xfffffd8c
   441c4:	ldr	ip, [fp, #-620]	; 0xfffffd94
   441c8:	ldr	r4, [fp, #-624]	; 0xfffffd90
   441cc:	mov	r5, sp
   441d0:	str	ip, [r5, #12]
   441d4:	str	r4, [r5, #8]
   441d8:	str	r1, [r5, #4]
   441dc:	str	lr, [r5]
   441e0:	bl	3e9c4 <__assert_fail@plt+0x2be0c>
   441e4:	movw	r0, #55947	; 0xda8b
   441e8:	movt	r0, #7
   441ec:	bl	12864 <gettext@plt>
   441f0:	sub	r2, fp, #247	; 0xf7
   441f4:	sub	r1, fp, #76	; 0x4c
   441f8:	str	r0, [sp, #1320]	; 0x528
   441fc:	mov	r0, r1
   44200:	sub	r1, fp, #736	; 0x2e0
   44204:	movw	r3, #100	; 0x64
   44208:	bl	483b4 <__assert_fail@plt+0x357fc>
   4420c:	ldr	r1, [sp, #1320]	; 0x528
   44210:	str	r0, [sp, #1316]	; 0x524
   44214:	mov	r0, r1
   44218:	ldr	r1, [sp, #1316]	; 0x524
   4421c:	bl	3e9c4 <__assert_fail@plt+0x2be0c>
   44220:	ldr	r0, [fp, #-88]	; 0xffffffa8
   44224:	cmn	r0, #1
   44228:	beq	4424c <__assert_fail@plt+0x31694>
   4422c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   44230:	ldr	r1, [fp, #-88]	; 0xffffffa8
   44234:	cmp	r0, r1
   44238:	beq	4424c <__assert_fail@plt+0x31694>
   4423c:	movw	r0, #55973	; 0xdaa5
   44240:	movt	r0, #7
   44244:	bl	12864 <gettext@plt>
   44248:	bl	3e9c4 <__assert_fail@plt+0x2be0c>
   4424c:	ldr	r0, [fp, #-624]	; 0xfffffd90
   44250:	ldr	r1, [fp, #-620]	; 0xfffffd94
   44254:	orr	r0, r0, r1
   44258:	cmp	r0, #0
   4425c:	bne	44334 <__assert_fail@plt+0x3177c>
   44260:	b	44264 <__assert_fail@plt+0x316ac>
   44264:	ldr	r0, [fp, #-64]	; 0xffffffc0
   44268:	ldr	r1, [fp, #-948]	; 0xfffffc4c
   4426c:	cmp	r0, r1
   44270:	bne	4429c <__assert_fail@plt+0x316e4>
   44274:	ldr	r0, [fp, #-632]	; 0xfffffd88
   44278:	ldr	r1, [fp, #-628]	; 0xfffffd8c
   4427c:	orr	r0, r0, r1
   44280:	cmp	r0, #0
   44284:	bne	44334 <__assert_fail@plt+0x3177c>
   44288:	b	4428c <__assert_fail@plt+0x316d4>
   4428c:	ldr	r0, [fp, #-60]	; 0xffffffc4
   44290:	ldr	r1, [fp, #-944]	; 0xfffffc50
   44294:	cmp	r0, r1
   44298:	beq	44334 <__assert_fail@plt+0x3177c>
   4429c:	movw	r0, #56034	; 0xdae2
   442a0:	movt	r0, #7
   442a4:	bl	12864 <gettext@plt>
   442a8:	bl	3e9c4 <__assert_fail@plt+0x2be0c>
   442ac:	movw	r0, #56093	; 0xdb1d
   442b0:	movt	r0, #7
   442b4:	bl	12864 <gettext@plt>
   442b8:	sub	lr, fp, #768	; 0x300
   442bc:	sub	r1, lr, #193	; 0xc1
   442c0:	ldr	lr, [fp, #-940]	; 0xfffffc54
   442c4:	str	r0, [sp, #1312]	; 0x520
   442c8:	mov	r0, lr
   442cc:	bl	4857c <__assert_fail@plt+0x359c4>
   442d0:	ldr	r1, [fp, #-944]	; 0xfffffc50
   442d4:	add	r2, r1, #1
   442d8:	ldr	r3, [fp, #-948]	; 0xfffffc4c
   442dc:	ldr	r1, [sp, #1312]	; 0x520
   442e0:	str	r0, [sp, #1308]	; 0x51c
   442e4:	mov	r0, r1
   442e8:	ldr	r1, [sp, #1308]	; 0x51c
   442ec:	bl	3e9c4 <__assert_fail@plt+0x2be0c>
   442f0:	movw	r0, #56128	; 0xdb40
   442f4:	movt	r0, #7
   442f8:	bl	12864 <gettext@plt>
   442fc:	sub	lr, fp, #768	; 0x300
   44300:	sub	r1, lr, #193	; 0xc1
   44304:	ldr	r2, [fp, #-56]	; 0xffffffc8
   44308:	str	r0, [sp, #1304]	; 0x518
   4430c:	mov	r0, r2
   44310:	bl	4857c <__assert_fail@plt+0x359c4>
   44314:	ldr	r1, [fp, #-60]	; 0xffffffc4
   44318:	add	r2, r1, #1
   4431c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   44320:	ldr	r1, [sp, #1304]	; 0x518
   44324:	str	r0, [sp, #1300]	; 0x514
   44328:	mov	r0, r1
   4432c:	ldr	r1, [sp, #1300]	; 0x514
   44330:	bl	3e9c4 <__assert_fail@plt+0x2be0c>
   44334:	b	44338 <__assert_fail@plt+0x31780>
   44338:	b	4433c <__assert_fail@plt+0x31784>
   4433c:	ldr	r0, [fp, #-560]	; 0xfffffdd0
   44340:	cmp	r0, #0
   44344:	beq	44490 <__assert_fail@plt+0x318d8>
   44348:	mov	r0, #0
   4434c:	strb	r0, [fp, #-962]	; 0xfffffc3e
   44350:	ldr	r1, [fp, #-40]	; 0xffffffd8
   44354:	str	r1, [fp, #-968]	; 0xfffffc38
   44358:	ldr	r1, [fp, #-712]	; 0xfffffd38
   4435c:	asr	r2, r1, #31
   44360:	ldr	r3, [fp, #-968]	; 0xfffffc38
   44364:	asr	ip, r3, #31
   44368:	cmn	ip, #1
   4436c:	mov	ip, r0
   44370:	movwgt	ip, #1
   44374:	cmn	r2, #1
   44378:	mov	lr, r0
   4437c:	movwgt	lr, #1
   44380:	sub	r4, lr, ip
   44384:	cmp	lr, ip
   44388:	movwne	r4, #1
   4438c:	subs	r1, r1, r3
   44390:	sbc	r2, r2, r3, asr #31
   44394:	cmn	r2, #1
   44398:	mov	r3, r0
   4439c:	movwgt	r3, #1
   443a0:	sub	ip, lr, r3
   443a4:	cmp	lr, r3
   443a8:	movwne	ip, #1
   443ac:	and	r3, r4, ip
   443b0:	str	r1, [fp, #-976]	; 0xfffffc30
   443b4:	str	r2, [fp, #-972]	; 0xfffffc34
   443b8:	ldrb	r1, [fp, #-962]	; 0xfffffc3e
   443bc:	orr	r1, r1, r3
   443c0:	and	r1, r1, #1
   443c4:	strb	r1, [fp, #-962]	; 0xfffffc3e
   443c8:	ldr	r1, [fp, #-368]	; 0xfffffe90
   443cc:	asr	r2, r1, #31
   443d0:	ldr	r3, [fp, #-976]	; 0xfffffc30
   443d4:	ldr	ip, [fp, #-972]	; 0xfffffc34
   443d8:	cmn	ip, #1
   443dc:	mov	lr, r0
   443e0:	movwgt	lr, #1
   443e4:	cmn	r2, #1
   443e8:	mov	r2, r0
   443ec:	movwgt	r2, #1
   443f0:	sub	r4, r2, lr
   443f4:	cmp	r2, lr
   443f8:	movwne	r4, #1
   443fc:	subs	r3, r1, r3
   44400:	rsc	r1, ip, r1, asr #31
   44404:	cmn	r1, #1
   44408:	movwgt	r0, #1
   4440c:	sub	ip, r2, r0
   44410:	cmp	r2, r0
   44414:	movwne	ip, #1
   44418:	and	r0, r4, ip
   4441c:	eor	r1, r1, r3, asr #31
   44420:	cmp	r1, #0
   44424:	movwne	r1, #1
   44428:	orr	r0, r0, r1
   4442c:	str	r3, [fp, #-980]	; 0xfffffc2c
   44430:	and	r0, r0, #1
   44434:	ldrb	r1, [fp, #-962]	; 0xfffffc3e
   44438:	and	r1, r1, #1
   4443c:	orr	r0, r1, r0
   44440:	cmp	r0, #0
   44444:	movw	r0, #0
   44448:	movne	r0, #1
   4444c:	and	r0, r0, #1
   44450:	strb	r0, [fp, #-962]	; 0xfffffc3e
   44454:	ldrb	r0, [fp, #-962]	; 0xfffffc3e
   44458:	tst	r0, #1
   4445c:	beq	44488 <__assert_fail@plt+0x318d0>
   44460:	sub	r0, fp, #736	; 0x2e0
   44464:	bl	3e9ac <__assert_fail@plt+0x2bdf4>
   44468:	tst	r0, #1
   4446c:	beq	44484 <__assert_fail@plt+0x318cc>
   44470:	movw	r0, #56163	; 0xdb63
   44474:	movt	r0, #7
   44478:	bl	12864 <gettext@plt>
   4447c:	ldr	r1, [fp, #-712]	; 0xfffffd38
   44480:	bl	3e9c4 <__assert_fail@plt+0x2be0c>
   44484:	b	47060 <__assert_fail@plt+0x344a8>
   44488:	ldr	r0, [fp, #-980]	; 0xfffffc2c
   4448c:	str	r0, [fp, #-368]	; 0xfffffe90
   44490:	sub	r0, fp, #736	; 0x2e0
   44494:	bl	3e9ac <__assert_fail@plt+0x2bdf4>
   44498:	tst	r0, #1
   4449c:	beq	444f8 <__assert_fail@plt+0x31940>
   444a0:	ldr	r0, [fp, #-368]	; 0xfffffe90
   444a4:	asr	r1, r0, #31
   444a8:	str	r0, [fp, #-992]	; 0xfffffc20
   444ac:	str	r1, [fp, #-988]	; 0xfffffc24
   444b0:	movw	r0, #56206	; 0xdb8e
   444b4:	movt	r0, #7
   444b8:	bl	12864 <gettext@plt>
   444bc:	sub	r1, fp, #76	; 0x4c
   444c0:	sub	lr, fp, #736	; 0x2e0
   444c4:	sub	r2, fp, #247	; 0xf7
   444c8:	mov	r3, #100	; 0x64
   444cc:	str	r0, [sp, #1296]	; 0x510
   444d0:	mov	r0, r1
   444d4:	mov	r1, lr
   444d8:	bl	483b4 <__assert_fail@plt+0x357fc>
   444dc:	ldr	r2, [fp, #-992]	; 0xfffffc20
   444e0:	ldr	r3, [fp, #-988]	; 0xfffffc24
   444e4:	ldr	r1, [sp, #1296]	; 0x510
   444e8:	str	r0, [sp, #1292]	; 0x50c
   444ec:	mov	r0, r1
   444f0:	ldr	r1, [sp, #1292]	; 0x50c
   444f4:	bl	3e9c4 <__assert_fail@plt+0x2be0c>
   444f8:	ldr	r0, [fp, #-644]	; 0xfffffd7c
   444fc:	asr	r1, r0, #31
   44500:	str	r0, [fp, #-1000]	; 0xfffffc18
   44504:	str	r1, [fp, #-996]	; 0xfffffc1c
   44508:	ldr	r0, [fp, #-1000]	; 0xfffffc18
   4450c:	ldr	r1, [fp, #-996]	; 0xfffffc1c
   44510:	ldr	r2, [fp, #-592]	; 0xfffffdb0
   44514:	adds	r0, r0, r2
   44518:	adc	r1, r1, r2, asr #31
   4451c:	str	r0, [fp, #-1008]	; 0xfffffc10
   44520:	str	r1, [fp, #-1004]	; 0xfffffc14
   44524:	ldr	r0, [fp, #-1008]	; 0xfffffc10
   44528:	ldr	r1, [fp, #-1004]	; 0xfffffc14
   4452c:	movw	r2, #51712	; 0xca00
   44530:	movt	r2, #15258	; 0x3b9a
   44534:	mov	r3, #0
   44538:	str	r2, [sp, #1288]	; 0x508
   4453c:	str	r3, [sp, #1284]	; 0x504
   44540:	bl	77780 <__assert_fail@plt+0x64bc8>
   44544:	ldr	lr, [sp, #1288]	; 0x508
   44548:	adds	r2, r2, lr
   4454c:	adc	r3, r3, #0
   44550:	str	r0, [sp, #1280]	; 0x500
   44554:	mov	r0, r2
   44558:	str	r1, [sp, #1276]	; 0x4fc
   4455c:	mov	r1, r3
   44560:	mov	r2, lr
   44564:	ldr	r3, [sp, #1284]	; 0x504
   44568:	bl	77780 <__assert_fail@plt+0x64bc8>
   4456c:	str	r2, [fp, #-1012]	; 0xfffffc0c
   44570:	ldr	r2, [fp, #-1008]	; 0xfffffc10
   44574:	ldr	r3, [fp, #-1004]	; 0xfffffc14
   44578:	ldr	lr, [fp, #-1012]	; 0xfffffc0c
   4457c:	subs	r2, r2, lr
   44580:	sbc	r3, r3, lr, asr #31
   44584:	str	r0, [sp, #1272]	; 0x4f8
   44588:	mov	r0, r2
   4458c:	str	r1, [sp, #1268]	; 0x4f4
   44590:	mov	r1, r3
   44594:	ldr	r2, [sp, #1288]	; 0x508
   44598:	ldr	r3, [sp, #1284]	; 0x504
   4459c:	bl	77780 <__assert_fail@plt+0x64bc8>
   445a0:	str	r0, [fp, #-1016]	; 0xfffffc08
   445a4:	b	44908 <__assert_fail@plt+0x31d50>
   445a8:	b	445ac <__assert_fail@plt+0x319f4>
   445ac:	b	4468c <__assert_fail@plt+0x31ad4>
   445b0:	ldr	r0, [fp, #-612]	; 0xfffffd9c
   445b4:	cmn	r0, #1
   445b8:	bgt	445e8 <__assert_fail@plt+0x31a30>
   445bc:	b	445c0 <__assert_fail@plt+0x31a08>
   445c0:	b	445c4 <__assert_fail@plt+0x31a0c>
   445c4:	ldr	r0, [fp, #-612]	; 0xfffffd9c
   445c8:	cmp	r0, #0
   445cc:	blt	44720 <__assert_fail@plt+0x31b68>
   445d0:	b	44740 <__assert_fail@plt+0x31b88>
   445d4:	ldr	r0, [fp, #-612]	; 0xfffffd9c
   445d8:	mvn	r0, r0
   445dc:	cmn	r0, #1
   445e0:	bgt	44720 <__assert_fail@plt+0x31b68>
   445e4:	b	44740 <__assert_fail@plt+0x31b88>
   445e8:	b	445ec <__assert_fail@plt+0x31a34>
   445ec:	b	4466c <__assert_fail@plt+0x31ab4>
   445f0:	b	4466c <__assert_fail@plt+0x31ab4>
   445f4:	b	4466c <__assert_fail@plt+0x31ab4>
   445f8:	b	445fc <__assert_fail@plt+0x31a44>
   445fc:	ldr	r0, [fp, #-616]	; 0xfffffd98
   44600:	ldr	r1, [fp, #-612]	; 0xfffffd9c
   44604:	subs	r0, r0, #128	; 0x80
   44608:	sbc	r1, r1, #0
   4460c:	rsbs	r0, r0, #0
   44610:	rscs	r1, r1, #0
   44614:	str	r0, [sp, #1264]	; 0x4f0
   44618:	str	r1, [sp, #1260]	; 0x4ec
   4461c:	blt	44720 <__assert_fail@plt+0x31b68>
   44620:	b	44740 <__assert_fail@plt+0x31b88>
   44624:	ldr	r0, [fp, #-616]	; 0xfffffd98
   44628:	ldr	r1, [fp, #-612]	; 0xfffffd9c
   4462c:	subs	r0, r0, #1
   44630:	sbcs	r1, r1, #0
   44634:	str	r0, [sp, #1256]	; 0x4e8
   44638:	str	r1, [sp, #1252]	; 0x4e4
   4463c:	blt	44740 <__assert_fail@plt+0x31b88>
   44640:	b	44644 <__assert_fail@plt+0x31a8c>
   44644:	ldr	r0, [fp, #-616]	; 0xfffffd98
   44648:	ldr	r1, [fp, #-612]	; 0xfffffd9c
   4464c:	subs	r0, r0, #1
   44650:	sbc	r1, r1, #0
   44654:	rsbs	r0, r0, #127	; 0x7f
   44658:	rscs	r1, r1, #0
   4465c:	str	r0, [sp, #1248]	; 0x4e0
   44660:	str	r1, [sp, #1244]	; 0x4dc
   44664:	blt	44720 <__assert_fail@plt+0x31b68>
   44668:	b	44740 <__assert_fail@plt+0x31b88>
   4466c:	ldr	r0, [fp, #-616]	; 0xfffffd98
   44670:	ldr	r1, [fp, #-612]	; 0xfffffd9c
   44674:	rsbs	r0, r0, #0
   44678:	rscs	r1, r1, #0
   4467c:	str	r0, [sp, #1240]	; 0x4d8
   44680:	str	r1, [sp, #1236]	; 0x4d4
   44684:	blt	44720 <__assert_fail@plt+0x31b68>
   44688:	b	44740 <__assert_fail@plt+0x31b88>
   4468c:	b	44694 <__assert_fail@plt+0x31adc>
   44690:	b	44740 <__assert_fail@plt+0x31b88>
   44694:	ldr	r0, [fp, #-612]	; 0xfffffd9c
   44698:	cmn	r0, #1
   4469c:	bgt	44700 <__assert_fail@plt+0x31b48>
   446a0:	b	446a4 <__assert_fail@plt+0x31aec>
   446a4:	b	446a8 <__assert_fail@plt+0x31af0>
   446a8:	b	446d4 <__assert_fail@plt+0x31b1c>
   446ac:	b	446d4 <__assert_fail@plt+0x31b1c>
   446b0:	ldr	r0, [fp, #-616]	; 0xfffffd98
   446b4:	ldr	r1, [fp, #-612]	; 0xfffffd9c
   446b8:	and	r0, r0, r1
   446bc:	cmn	r0, #1
   446c0:	bne	446d4 <__assert_fail@plt+0x31b1c>
   446c4:	b	446c8 <__assert_fail@plt+0x31b10>
   446c8:	b	446cc <__assert_fail@plt+0x31b14>
   446cc:	b	44720 <__assert_fail@plt+0x31b68>
   446d0:	b	44720 <__assert_fail@plt+0x31b68>
   446d4:	ldr	r2, [fp, #-616]	; 0xfffffd98
   446d8:	ldr	r3, [fp, #-612]	; 0xfffffd9c
   446dc:	mvn	r0, #127	; 0x7f
   446e0:	mvn	r1, #0
   446e4:	bl	77780 <__assert_fail@plt+0x64bc8>
   446e8:	subs	r0, r0, #3600	; 0xe10
   446ec:	sbcs	r1, r1, #0
   446f0:	str	r0, [sp, #1232]	; 0x4d0
   446f4:	str	r1, [sp, #1228]	; 0x4cc
   446f8:	blt	44720 <__assert_fail@plt+0x31b68>
   446fc:	b	44740 <__assert_fail@plt+0x31b88>
   44700:	ldr	r0, [fp, #-616]	; 0xfffffd98
   44704:	ldr	r1, [fp, #-612]	; 0xfffffd9c
   44708:	subs	r0, r0, #1
   4470c:	sbcs	r1, r1, #0
   44710:	str	r0, [sp, #1224]	; 0x4c8
   44714:	str	r1, [sp, #1220]	; 0x4c4
   44718:	blt	44740 <__assert_fail@plt+0x31b88>
   4471c:	b	44720 <__assert_fail@plt+0x31b68>
   44720:	ldr	r0, [fp, #-616]	; 0xfffffd98
   44724:	mov	r1, #3600	; 0xe10
   44728:	mul	r0, r0, r1
   4472c:	sxtb	r0, r0
   44730:	asr	r1, r0, #31
   44734:	str	r0, [fp, #-1024]	; 0xfffffc00
   44738:	str	r1, [fp, #-1020]	; 0xfffffc04
   4473c:	b	46cec <__assert_fail@plt+0x34134>
   44740:	ldr	r0, [fp, #-616]	; 0xfffffd98
   44744:	mov	r1, #3600	; 0xe10
   44748:	mul	r0, r0, r1
   4474c:	sxtb	r0, r0
   44750:	asr	r1, r0, #31
   44754:	str	r0, [fp, #-1024]	; 0xfffffc00
   44758:	str	r1, [fp, #-1020]	; 0xfffffc04
   4475c:	b	4582c <__assert_fail@plt+0x32c74>
   44760:	b	44830 <__assert_fail@plt+0x31c78>
   44764:	ldr	r0, [fp, #-612]	; 0xfffffd9c
   44768:	cmn	r0, #1
   4476c:	bgt	4479c <__assert_fail@plt+0x31be4>
   44770:	b	44774 <__assert_fail@plt+0x31bbc>
   44774:	b	44778 <__assert_fail@plt+0x31bc0>
   44778:	ldr	r0, [fp, #-612]	; 0xfffffd9c
   4477c:	cmp	r0, #0
   44780:	blt	448c8 <__assert_fail@plt+0x31d10>
   44784:	b	448e8 <__assert_fail@plt+0x31d30>
   44788:	ldr	r0, [fp, #-612]	; 0xfffffd9c
   4478c:	mvn	r0, r0
   44790:	cmn	r0, #1
   44794:	bgt	448c8 <__assert_fail@plt+0x31d10>
   44798:	b	448e8 <__assert_fail@plt+0x31d30>
   4479c:	b	447a0 <__assert_fail@plt+0x31be8>
   447a0:	b	44810 <__assert_fail@plt+0x31c58>
   447a4:	b	44810 <__assert_fail@plt+0x31c58>
   447a8:	b	44810 <__assert_fail@plt+0x31c58>
   447ac:	b	447b0 <__assert_fail@plt+0x31bf8>
   447b0:	ldr	r0, [fp, #-616]	; 0xfffffd98
   447b4:	ldr	r1, [fp, #-612]	; 0xfffffd9c
   447b8:	rsbs	r0, r0, #0
   447bc:	rscs	r1, r1, #0
   447c0:	str	r0, [sp, #1216]	; 0x4c0
   447c4:	str	r1, [sp, #1212]	; 0x4bc
   447c8:	blt	448c8 <__assert_fail@plt+0x31d10>
   447cc:	b	448e8 <__assert_fail@plt+0x31d30>
   447d0:	ldr	r0, [fp, #-616]	; 0xfffffd98
   447d4:	ldr	r1, [fp, #-612]	; 0xfffffd9c
   447d8:	subs	r0, r0, #1
   447dc:	sbcs	r1, r1, #0
   447e0:	str	r0, [sp, #1208]	; 0x4b8
   447e4:	str	r1, [sp, #1204]	; 0x4b4
   447e8:	blt	448e8 <__assert_fail@plt+0x31d30>
   447ec:	b	447f0 <__assert_fail@plt+0x31c38>
   447f0:	ldr	r0, [fp, #-616]	; 0xfffffd98
   447f4:	ldr	r1, [fp, #-612]	; 0xfffffd9c
   447f8:	subs	r0, r0, #1
   447fc:	sbc	r1, r1, #0
   44800:	cmn	r1, #1
   44804:	str	r0, [sp, #1200]	; 0x4b0
   44808:	bgt	448c8 <__assert_fail@plt+0x31d10>
   4480c:	b	448e8 <__assert_fail@plt+0x31d30>
   44810:	ldr	r0, [fp, #-616]	; 0xfffffd98
   44814:	ldr	r1, [fp, #-612]	; 0xfffffd9c
   44818:	rsbs	r0, r0, #0
   4481c:	rscs	r1, r1, #0
   44820:	str	r0, [sp, #1196]	; 0x4ac
   44824:	str	r1, [sp, #1192]	; 0x4a8
   44828:	blt	448c8 <__assert_fail@plt+0x31d10>
   4482c:	b	448e8 <__assert_fail@plt+0x31d30>
   44830:	b	44838 <__assert_fail@plt+0x31c80>
   44834:	b	448e8 <__assert_fail@plt+0x31d30>
   44838:	ldr	r0, [fp, #-612]	; 0xfffffd9c
   4483c:	cmn	r0, #1
   44840:	bgt	448a8 <__assert_fail@plt+0x31cf0>
   44844:	b	44848 <__assert_fail@plt+0x31c90>
   44848:	b	4484c <__assert_fail@plt+0x31c94>
   4484c:	b	44878 <__assert_fail@plt+0x31cc0>
   44850:	b	44878 <__assert_fail@plt+0x31cc0>
   44854:	ldr	r0, [fp, #-616]	; 0xfffffd98
   44858:	ldr	r1, [fp, #-612]	; 0xfffffd9c
   4485c:	and	r0, r0, r1
   44860:	cmn	r0, #1
   44864:	bne	44878 <__assert_fail@plt+0x31cc0>
   44868:	b	4486c <__assert_fail@plt+0x31cb4>
   4486c:	b	44870 <__assert_fail@plt+0x31cb8>
   44870:	b	448c8 <__assert_fail@plt+0x31d10>
   44874:	b	448c8 <__assert_fail@plt+0x31d10>
   44878:	ldr	r2, [fp, #-616]	; 0xfffffd98
   4487c:	ldr	r3, [fp, #-612]	; 0xfffffd9c
   44880:	mov	r0, #0
   44884:	str	r0, [sp, #1188]	; 0x4a4
   44888:	ldr	r1, [sp, #1188]	; 0x4a4
   4488c:	bl	77780 <__assert_fail@plt+0x64bc8>
   44890:	subs	r0, r0, #3600	; 0xe10
   44894:	sbcs	r1, r1, #0
   44898:	str	r0, [sp, #1184]	; 0x4a0
   4489c:	str	r1, [sp, #1180]	; 0x49c
   448a0:	blt	448c8 <__assert_fail@plt+0x31d10>
   448a4:	b	448e8 <__assert_fail@plt+0x31d30>
   448a8:	ldr	r0, [fp, #-616]	; 0xfffffd98
   448ac:	ldr	r1, [fp, #-612]	; 0xfffffd9c
   448b0:	subs	r0, r0, #1
   448b4:	sbcs	r1, r1, #0
   448b8:	str	r0, [sp, #1176]	; 0x498
   448bc:	str	r1, [sp, #1172]	; 0x494
   448c0:	blt	448e8 <__assert_fail@plt+0x31d30>
   448c4:	b	448c8 <__assert_fail@plt+0x31d10>
   448c8:	ldr	r0, [fp, #-616]	; 0xfffffd98
   448cc:	mov	r1, #3600	; 0xe10
   448d0:	mul	r0, r0, r1
   448d4:	uxtb	r0, r0
   448d8:	mov	r1, #0
   448dc:	str	r1, [fp, #-1020]	; 0xfffffc04
   448e0:	str	r0, [fp, #-1024]	; 0xfffffc00
   448e4:	b	46cec <__assert_fail@plt+0x34134>
   448e8:	ldr	r0, [fp, #-616]	; 0xfffffd98
   448ec:	mov	r1, #3600	; 0xe10
   448f0:	mul	r0, r0, r1
   448f4:	uxtb	r0, r0
   448f8:	mov	r1, #0
   448fc:	str	r1, [fp, #-1020]	; 0xfffffc04
   44900:	str	r0, [fp, #-1024]	; 0xfffffc00
   44904:	b	4582c <__assert_fail@plt+0x32c74>
   44908:	b	44cd4 <__assert_fail@plt+0x3211c>
   4490c:	b	44910 <__assert_fail@plt+0x31d58>
   44910:	b	44a28 <__assert_fail@plt+0x31e70>
   44914:	ldr	r0, [fp, #-612]	; 0xfffffd9c
   44918:	cmn	r0, #1
   4491c:	bgt	44978 <__assert_fail@plt+0x31dc0>
   44920:	b	44924 <__assert_fail@plt+0x31d6c>
   44924:	b	44928 <__assert_fail@plt+0x31d70>
   44928:	ldr	r0, [fp, #-616]	; 0xfffffd98
   4492c:	ldr	r1, [fp, #-612]	; 0xfffffd9c
   44930:	subs	r0, r0, #9
   44934:	sbcs	r1, r1, #0
   44938:	str	r0, [sp, #1168]	; 0x490
   4493c:	str	r1, [sp, #1164]	; 0x48c
   44940:	blt	44ac0 <__assert_fail@plt+0x31f08>
   44944:	b	44ae0 <__assert_fail@plt+0x31f28>
   44948:	ldr	r0, [fp, #-616]	; 0xfffffd98
   4494c:	ldr	r1, [fp, #-612]	; 0xfffffd9c
   44950:	mvn	r1, r1
   44954:	mvn	r0, r0
   44958:	mvn	r2, #9
   4495c:	subs	r0, r2, r0
   44960:	mvn	r2, #0
   44964:	sbcs	r1, r2, r1
   44968:	str	r0, [sp, #1160]	; 0x488
   4496c:	str	r1, [sp, #1156]	; 0x484
   44970:	blt	44ac0 <__assert_fail@plt+0x31f08>
   44974:	b	44ae0 <__assert_fail@plt+0x31f28>
   44978:	b	4497c <__assert_fail@plt+0x31dc4>
   4497c:	b	44a00 <__assert_fail@plt+0x31e48>
   44980:	b	44a00 <__assert_fail@plt+0x31e48>
   44984:	b	44a00 <__assert_fail@plt+0x31e48>
   44988:	b	4498c <__assert_fail@plt+0x31dd4>
   4498c:	ldr	r0, [fp, #-616]	; 0xfffffd98
   44990:	ldr	r1, [fp, #-612]	; 0xfffffd9c
   44994:	subs	r0, r0, #32768	; 0x8000
   44998:	sbc	r1, r1, #0
   4499c:	rsbs	r0, r0, #0
   449a0:	rscs	r1, r1, #0
   449a4:	str	r0, [sp, #1152]	; 0x480
   449a8:	str	r1, [sp, #1148]	; 0x47c
   449ac:	blt	44ac0 <__assert_fail@plt+0x31f08>
   449b0:	b	44ae0 <__assert_fail@plt+0x31f28>
   449b4:	ldr	r0, [fp, #-616]	; 0xfffffd98
   449b8:	ldr	r1, [fp, #-612]	; 0xfffffd9c
   449bc:	subs	r0, r0, #1
   449c0:	sbcs	r1, r1, #0
   449c4:	str	r0, [sp, #1144]	; 0x478
   449c8:	str	r1, [sp, #1140]	; 0x474
   449cc:	blt	44ae0 <__assert_fail@plt+0x31f28>
   449d0:	b	449d4 <__assert_fail@plt+0x31e1c>
   449d4:	ldr	r0, [fp, #-616]	; 0xfffffd98
   449d8:	ldr	r1, [fp, #-612]	; 0xfffffd9c
   449dc:	subs	r0, r0, #1
   449e0:	sbc	r1, r1, #0
   449e4:	movw	r2, #32767	; 0x7fff
   449e8:	subs	r0, r2, r0
   449ec:	rscs	r1, r1, #0
   449f0:	str	r0, [sp, #1136]	; 0x470
   449f4:	str	r1, [sp, #1132]	; 0x46c
   449f8:	blt	44ac0 <__assert_fail@plt+0x31f08>
   449fc:	b	44ae0 <__assert_fail@plt+0x31f28>
   44a00:	ldr	r0, [fp, #-616]	; 0xfffffd98
   44a04:	ldr	r1, [fp, #-612]	; 0xfffffd9c
   44a08:	mvn	r2, #8
   44a0c:	subs	r0, r2, r0
   44a10:	mvn	r2, #0
   44a14:	sbcs	r1, r2, r1
   44a18:	str	r0, [sp, #1128]	; 0x468
   44a1c:	str	r1, [sp, #1124]	; 0x464
   44a20:	blt	44ac0 <__assert_fail@plt+0x31f08>
   44a24:	b	44ae0 <__assert_fail@plt+0x31f28>
   44a28:	b	44a30 <__assert_fail@plt+0x31e78>
   44a2c:	b	44ae0 <__assert_fail@plt+0x31f28>
   44a30:	ldr	r0, [fp, #-612]	; 0xfffffd9c
   44a34:	cmn	r0, #1
   44a38:	bgt	44aa0 <__assert_fail@plt+0x31ee8>
   44a3c:	b	44a40 <__assert_fail@plt+0x31e88>
   44a40:	b	44a44 <__assert_fail@plt+0x31e8c>
   44a44:	b	44a70 <__assert_fail@plt+0x31eb8>
   44a48:	b	44a70 <__assert_fail@plt+0x31eb8>
   44a4c:	ldr	r0, [fp, #-616]	; 0xfffffd98
   44a50:	ldr	r1, [fp, #-612]	; 0xfffffd9c
   44a54:	and	r0, r0, r1
   44a58:	cmn	r0, #1
   44a5c:	bne	44a70 <__assert_fail@plt+0x31eb8>
   44a60:	b	44a64 <__assert_fail@plt+0x31eac>
   44a64:	b	44a68 <__assert_fail@plt+0x31eb0>
   44a68:	b	44ae0 <__assert_fail@plt+0x31f28>
   44a6c:	b	44ae0 <__assert_fail@plt+0x31f28>
   44a70:	ldr	r2, [fp, #-616]	; 0xfffffd98
   44a74:	ldr	r3, [fp, #-612]	; 0xfffffd9c
   44a78:	movw	r0, #32768	; 0x8000
   44a7c:	movt	r0, #65535	; 0xffff
   44a80:	mvn	r1, #0
   44a84:	bl	77780 <__assert_fail@plt+0x64bc8>
   44a88:	subs	r0, r0, #3600	; 0xe10
   44a8c:	sbcs	r1, r1, #0
   44a90:	str	r0, [sp, #1120]	; 0x460
   44a94:	str	r1, [sp, #1116]	; 0x45c
   44a98:	blt	44ac0 <__assert_fail@plt+0x31f08>
   44a9c:	b	44ae0 <__assert_fail@plt+0x31f28>
   44aa0:	ldr	r0, [fp, #-616]	; 0xfffffd98
   44aa4:	ldr	r1, [fp, #-612]	; 0xfffffd9c
   44aa8:	subs	r0, r0, #10
   44aac:	sbcs	r1, r1, #0
   44ab0:	str	r0, [sp, #1112]	; 0x458
   44ab4:	str	r1, [sp, #1108]	; 0x454
   44ab8:	blt	44ae0 <__assert_fail@plt+0x31f28>
   44abc:	b	44ac0 <__assert_fail@plt+0x31f08>
   44ac0:	ldr	r0, [fp, #-616]	; 0xfffffd98
   44ac4:	mov	r1, #3600	; 0xe10
   44ac8:	mul	r0, r0, r1
   44acc:	sxth	r0, r0
   44ad0:	asr	r1, r0, #31
   44ad4:	str	r0, [fp, #-1024]	; 0xfffffc00
   44ad8:	str	r1, [fp, #-1020]	; 0xfffffc04
   44adc:	b	46cec <__assert_fail@plt+0x34134>
   44ae0:	ldr	r0, [fp, #-616]	; 0xfffffd98
   44ae4:	mov	r1, #3600	; 0xe10
   44ae8:	mul	r0, r0, r1
   44aec:	sxth	r0, r0
   44af0:	asr	r1, r0, #31
   44af4:	str	r0, [fp, #-1024]	; 0xfffffc00
   44af8:	str	r1, [fp, #-1020]	; 0xfffffc04
   44afc:	b	4582c <__assert_fail@plt+0x32c74>
   44b00:	b	44bfc <__assert_fail@plt+0x32044>
   44b04:	ldr	r0, [fp, #-612]	; 0xfffffd9c
   44b08:	cmn	r0, #1
   44b0c:	bgt	44b68 <__assert_fail@plt+0x31fb0>
   44b10:	b	44b14 <__assert_fail@plt+0x31f5c>
   44b14:	b	44b18 <__assert_fail@plt+0x31f60>
   44b18:	ldr	r0, [fp, #-616]	; 0xfffffd98
   44b1c:	ldr	r1, [fp, #-612]	; 0xfffffd9c
   44b20:	subs	r0, r0, #18
   44b24:	sbcs	r1, r1, #0
   44b28:	str	r0, [sp, #1104]	; 0x450
   44b2c:	str	r1, [sp, #1100]	; 0x44c
   44b30:	blt	44c94 <__assert_fail@plt+0x320dc>
   44b34:	b	44cb4 <__assert_fail@plt+0x320fc>
   44b38:	ldr	r0, [fp, #-616]	; 0xfffffd98
   44b3c:	ldr	r1, [fp, #-612]	; 0xfffffd9c
   44b40:	mvn	r1, r1
   44b44:	mvn	r0, r0
   44b48:	mvn	r2, #18
   44b4c:	subs	r0, r2, r0
   44b50:	mvn	r2, #0
   44b54:	sbcs	r1, r2, r1
   44b58:	str	r0, [sp, #1096]	; 0x448
   44b5c:	str	r1, [sp, #1092]	; 0x444
   44b60:	blt	44c94 <__assert_fail@plt+0x320dc>
   44b64:	b	44cb4 <__assert_fail@plt+0x320fc>
   44b68:	b	44b6c <__assert_fail@plt+0x31fb4>
   44b6c:	b	44bdc <__assert_fail@plt+0x32024>
   44b70:	b	44bdc <__assert_fail@plt+0x32024>
   44b74:	b	44bdc <__assert_fail@plt+0x32024>
   44b78:	b	44b7c <__assert_fail@plt+0x31fc4>
   44b7c:	ldr	r0, [fp, #-616]	; 0xfffffd98
   44b80:	ldr	r1, [fp, #-612]	; 0xfffffd9c
   44b84:	rsbs	r0, r0, #0
   44b88:	rscs	r1, r1, #0
   44b8c:	str	r0, [sp, #1088]	; 0x440
   44b90:	str	r1, [sp, #1084]	; 0x43c
   44b94:	blt	44c94 <__assert_fail@plt+0x320dc>
   44b98:	b	44cb4 <__assert_fail@plt+0x320fc>
   44b9c:	ldr	r0, [fp, #-616]	; 0xfffffd98
   44ba0:	ldr	r1, [fp, #-612]	; 0xfffffd9c
   44ba4:	subs	r0, r0, #1
   44ba8:	sbcs	r1, r1, #0
   44bac:	str	r0, [sp, #1080]	; 0x438
   44bb0:	str	r1, [sp, #1076]	; 0x434
   44bb4:	blt	44cb4 <__assert_fail@plt+0x320fc>
   44bb8:	b	44bbc <__assert_fail@plt+0x32004>
   44bbc:	ldr	r0, [fp, #-616]	; 0xfffffd98
   44bc0:	ldr	r1, [fp, #-612]	; 0xfffffd9c
   44bc4:	subs	r0, r0, #1
   44bc8:	sbc	r1, r1, #0
   44bcc:	cmn	r1, #1
   44bd0:	str	r0, [sp, #1072]	; 0x430
   44bd4:	bgt	44c94 <__assert_fail@plt+0x320dc>
   44bd8:	b	44cb4 <__assert_fail@plt+0x320fc>
   44bdc:	ldr	r0, [fp, #-616]	; 0xfffffd98
   44be0:	ldr	r1, [fp, #-612]	; 0xfffffd9c
   44be4:	rsbs	r0, r0, #0
   44be8:	rscs	r1, r1, #0
   44bec:	str	r0, [sp, #1068]	; 0x42c
   44bf0:	str	r1, [sp, #1064]	; 0x428
   44bf4:	blt	44c94 <__assert_fail@plt+0x320dc>
   44bf8:	b	44cb4 <__assert_fail@plt+0x320fc>
   44bfc:	b	44c04 <__assert_fail@plt+0x3204c>
   44c00:	b	44cb4 <__assert_fail@plt+0x320fc>
   44c04:	ldr	r0, [fp, #-612]	; 0xfffffd9c
   44c08:	cmn	r0, #1
   44c0c:	bgt	44c74 <__assert_fail@plt+0x320bc>
   44c10:	b	44c14 <__assert_fail@plt+0x3205c>
   44c14:	b	44c18 <__assert_fail@plt+0x32060>
   44c18:	b	44c44 <__assert_fail@plt+0x3208c>
   44c1c:	b	44c44 <__assert_fail@plt+0x3208c>
   44c20:	ldr	r0, [fp, #-616]	; 0xfffffd98
   44c24:	ldr	r1, [fp, #-612]	; 0xfffffd9c
   44c28:	and	r0, r0, r1
   44c2c:	cmn	r0, #1
   44c30:	bne	44c44 <__assert_fail@plt+0x3208c>
   44c34:	b	44c38 <__assert_fail@plt+0x32080>
   44c38:	b	44c3c <__assert_fail@plt+0x32084>
   44c3c:	b	44c94 <__assert_fail@plt+0x320dc>
   44c40:	b	44c94 <__assert_fail@plt+0x320dc>
   44c44:	ldr	r2, [fp, #-616]	; 0xfffffd98
   44c48:	ldr	r3, [fp, #-612]	; 0xfffffd9c
   44c4c:	mov	r0, #0
   44c50:	str	r0, [sp, #1060]	; 0x424
   44c54:	ldr	r1, [sp, #1060]	; 0x424
   44c58:	bl	77780 <__assert_fail@plt+0x64bc8>
   44c5c:	subs	r0, r0, #3600	; 0xe10
   44c60:	sbcs	r1, r1, #0
   44c64:	str	r0, [sp, #1056]	; 0x420
   44c68:	str	r1, [sp, #1052]	; 0x41c
   44c6c:	blt	44c94 <__assert_fail@plt+0x320dc>
   44c70:	b	44cb4 <__assert_fail@plt+0x320fc>
   44c74:	ldr	r0, [fp, #-616]	; 0xfffffd98
   44c78:	ldr	r1, [fp, #-612]	; 0xfffffd9c
   44c7c:	subs	r0, r0, #19
   44c80:	sbcs	r1, r1, #0
   44c84:	str	r0, [sp, #1048]	; 0x418
   44c88:	str	r1, [sp, #1044]	; 0x414
   44c8c:	blt	44cb4 <__assert_fail@plt+0x320fc>
   44c90:	b	44c94 <__assert_fail@plt+0x320dc>
   44c94:	ldr	r0, [fp, #-616]	; 0xfffffd98
   44c98:	mov	r1, #3600	; 0xe10
   44c9c:	mul	r0, r0, r1
   44ca0:	uxth	r0, r0
   44ca4:	mov	r1, #0
   44ca8:	str	r1, [fp, #-1020]	; 0xfffffc04
   44cac:	str	r0, [fp, #-1024]	; 0xfffffc00
   44cb0:	b	46cec <__assert_fail@plt+0x34134>
   44cb4:	ldr	r0, [fp, #-616]	; 0xfffffd98
   44cb8:	mov	r1, #3600	; 0xe10
   44cbc:	mul	r0, r0, r1
   44cc0:	uxth	r0, r0
   44cc4:	mov	r1, #0
   44cc8:	str	r1, [fp, #-1020]	; 0xfffffc04
   44ccc:	str	r0, [fp, #-1024]	; 0xfffffc00
   44cd0:	b	4582c <__assert_fail@plt+0x32c74>
   44cd4:	b	450a0 <__assert_fail@plt+0x324e8>
   44cd8:	b	44cdc <__assert_fail@plt+0x32124>
   44cdc:	b	44df8 <__assert_fail@plt+0x32240>
   44ce0:	ldr	r0, [fp, #-612]	; 0xfffffd9c
   44ce4:	cmn	r0, #1
   44ce8:	bgt	44d50 <__assert_fail@plt+0x32198>
   44cec:	b	44cf0 <__assert_fail@plt+0x32138>
   44cf0:	b	44cf4 <__assert_fail@plt+0x3213c>
   44cf4:	ldr	r0, [fp, #-616]	; 0xfffffd98
   44cf8:	ldr	r1, [fp, #-612]	; 0xfffffd9c
   44cfc:	movw	r2, #6699	; 0x1a2b
   44d00:	movt	r2, #9
   44d04:	subs	r0, r0, r2
   44d08:	sbcs	r1, r1, #0
   44d0c:	str	r0, [sp, #1040]	; 0x410
   44d10:	str	r1, [sp, #1036]	; 0x40c
   44d14:	blt	44e94 <__assert_fail@plt+0x322dc>
   44d18:	b	44eb0 <__assert_fail@plt+0x322f8>
   44d1c:	ldr	r0, [fp, #-616]	; 0xfffffd98
   44d20:	ldr	r1, [fp, #-612]	; 0xfffffd9c
   44d24:	mvn	r1, r1
   44d28:	mvn	r0, r0
   44d2c:	movw	r2, #58836	; 0xe5d4
   44d30:	movt	r2, #65526	; 0xfff6
   44d34:	subs	r0, r2, r0
   44d38:	mvn	r2, #0
   44d3c:	sbcs	r1, r2, r1
   44d40:	str	r0, [sp, #1032]	; 0x408
   44d44:	str	r1, [sp, #1028]	; 0x404
   44d48:	blt	44e94 <__assert_fail@plt+0x322dc>
   44d4c:	b	44eb0 <__assert_fail@plt+0x322f8>
   44d50:	b	44dcc <__assert_fail@plt+0x32214>
   44d54:	b	44d58 <__assert_fail@plt+0x321a0>
   44d58:	ldr	r0, [fp, #-616]	; 0xfffffd98
   44d5c:	ldr	r1, [fp, #-612]	; 0xfffffd9c
   44d60:	adds	r0, r0, #-2147483648	; 0x80000000
   44d64:	sbc	r1, r1, #0
   44d68:	rsbs	r0, r0, #0
   44d6c:	rscs	r1, r1, #0
   44d70:	str	r0, [sp, #1024]	; 0x400
   44d74:	str	r1, [sp, #1020]	; 0x3fc
   44d78:	blt	44e94 <__assert_fail@plt+0x322dc>
   44d7c:	b	44eb0 <__assert_fail@plt+0x322f8>
   44d80:	ldr	r0, [fp, #-616]	; 0xfffffd98
   44d84:	ldr	r1, [fp, #-612]	; 0xfffffd9c
   44d88:	subs	r0, r0, #1
   44d8c:	sbcs	r1, r1, #0
   44d90:	str	r0, [sp, #1016]	; 0x3f8
   44d94:	str	r1, [sp, #1012]	; 0x3f4
   44d98:	blt	44eb0 <__assert_fail@plt+0x322f8>
   44d9c:	b	44da0 <__assert_fail@plt+0x321e8>
   44da0:	ldr	r0, [fp, #-616]	; 0xfffffd98
   44da4:	ldr	r1, [fp, #-612]	; 0xfffffd9c
   44da8:	subs	r0, r0, #1
   44dac:	sbc	r1, r1, #0
   44db0:	mvn	r2, #-2147483648	; 0x80000000
   44db4:	subs	r0, r2, r0
   44db8:	rscs	r1, r1, #0
   44dbc:	str	r0, [sp, #1008]	; 0x3f0
   44dc0:	str	r1, [sp, #1004]	; 0x3ec
   44dc4:	blt	44e94 <__assert_fail@plt+0x322dc>
   44dc8:	b	44eb0 <__assert_fail@plt+0x322f8>
   44dcc:	ldr	r0, [fp, #-616]	; 0xfffffd98
   44dd0:	ldr	r1, [fp, #-612]	; 0xfffffd9c
   44dd4:	movw	r2, #58837	; 0xe5d5
   44dd8:	movt	r2, #65526	; 0xfff6
   44ddc:	subs	r0, r2, r0
   44de0:	mvn	r2, #0
   44de4:	sbcs	r1, r2, r1
   44de8:	str	r0, [sp, #1000]	; 0x3e8
   44dec:	str	r1, [sp, #996]	; 0x3e4
   44df0:	blt	44e94 <__assert_fail@plt+0x322dc>
   44df4:	b	44eb0 <__assert_fail@plt+0x322f8>
   44df8:	b	44e00 <__assert_fail@plt+0x32248>
   44dfc:	b	44eb0 <__assert_fail@plt+0x322f8>
   44e00:	ldr	r0, [fp, #-612]	; 0xfffffd9c
   44e04:	cmn	r0, #1
   44e08:	bgt	44e6c <__assert_fail@plt+0x322b4>
   44e0c:	b	44e10 <__assert_fail@plt+0x32258>
   44e10:	b	44e14 <__assert_fail@plt+0x3225c>
   44e14:	b	44e40 <__assert_fail@plt+0x32288>
   44e18:	b	44e40 <__assert_fail@plt+0x32288>
   44e1c:	ldr	r0, [fp, #-616]	; 0xfffffd98
   44e20:	ldr	r1, [fp, #-612]	; 0xfffffd9c
   44e24:	and	r0, r0, r1
   44e28:	cmn	r0, #1
   44e2c:	bne	44e40 <__assert_fail@plt+0x32288>
   44e30:	b	44e34 <__assert_fail@plt+0x3227c>
   44e34:	b	44e38 <__assert_fail@plt+0x32280>
   44e38:	b	44eb0 <__assert_fail@plt+0x322f8>
   44e3c:	b	44eb0 <__assert_fail@plt+0x322f8>
   44e40:	ldr	r2, [fp, #-616]	; 0xfffffd98
   44e44:	ldr	r3, [fp, #-612]	; 0xfffffd9c
   44e48:	mov	r0, #-2147483648	; 0x80000000
   44e4c:	mvn	r1, #0
   44e50:	bl	77780 <__assert_fail@plt+0x64bc8>
   44e54:	subs	r0, r0, #3600	; 0xe10
   44e58:	sbcs	r1, r1, #0
   44e5c:	str	r0, [sp, #992]	; 0x3e0
   44e60:	str	r1, [sp, #988]	; 0x3dc
   44e64:	blt	44e94 <__assert_fail@plt+0x322dc>
   44e68:	b	44eb0 <__assert_fail@plt+0x322f8>
   44e6c:	ldr	r0, [fp, #-616]	; 0xfffffd98
   44e70:	ldr	r1, [fp, #-612]	; 0xfffffd9c
   44e74:	movw	r2, #6700	; 0x1a2c
   44e78:	movt	r2, #9
   44e7c:	subs	r0, r0, r2
   44e80:	sbcs	r1, r1, #0
   44e84:	str	r0, [sp, #984]	; 0x3d8
   44e88:	str	r1, [sp, #980]	; 0x3d4
   44e8c:	blt	44eb0 <__assert_fail@plt+0x322f8>
   44e90:	b	44e94 <__assert_fail@plt+0x322dc>
   44e94:	ldr	r0, [fp, #-616]	; 0xfffffd98
   44e98:	mov	r1, #3600	; 0xe10
   44e9c:	mul	r0, r0, r1
   44ea0:	asr	r1, r0, #31
   44ea4:	str	r0, [fp, #-1024]	; 0xfffffc00
   44ea8:	str	r1, [fp, #-1020]	; 0xfffffc04
   44eac:	b	46cec <__assert_fail@plt+0x34134>
   44eb0:	ldr	r0, [fp, #-616]	; 0xfffffd98
   44eb4:	mov	r1, #3600	; 0xe10
   44eb8:	mul	r0, r0, r1
   44ebc:	asr	r1, r0, #31
   44ec0:	str	r0, [fp, #-1024]	; 0xfffffc00
   44ec4:	str	r1, [fp, #-1020]	; 0xfffffc04
   44ec8:	b	4582c <__assert_fail@plt+0x32c74>
   44ecc:	b	44fc8 <__assert_fail@plt+0x32410>
   44ed0:	ldr	r0, [fp, #-612]	; 0xfffffd9c
   44ed4:	cmn	r0, #1
   44ed8:	bgt	44f34 <__assert_fail@plt+0x3237c>
   44edc:	b	44ee0 <__assert_fail@plt+0x32328>
   44ee0:	b	44f0c <__assert_fail@plt+0x32354>
   44ee4:	ldr	r0, [fp, #-616]	; 0xfffffd98
   44ee8:	ldr	r1, [fp, #-612]	; 0xfffffd9c
   44eec:	movw	r2, #13398	; 0x3456
   44ef0:	movt	r2, #18
   44ef4:	subs	r0, r0, r2
   44ef8:	sbcs	r1, r1, #0
   44efc:	str	r0, [sp, #976]	; 0x3d0
   44f00:	str	r1, [sp, #972]	; 0x3cc
   44f04:	blt	45068 <__assert_fail@plt+0x324b0>
   44f08:	b	45084 <__assert_fail@plt+0x324cc>
   44f0c:	ldr	r0, [fp, #-616]	; 0xfffffd98
   44f10:	ldr	r1, [fp, #-612]	; 0xfffffd9c
   44f14:	mvn	r1, r1
   44f18:	mvn	r0, r0
   44f1c:	rsbs	r0, r0, #0
   44f20:	rscs	r1, r1, #0
   44f24:	str	r0, [sp, #968]	; 0x3c8
   44f28:	str	r1, [sp, #964]	; 0x3c4
   44f2c:	blt	45068 <__assert_fail@plt+0x324b0>
   44f30:	b	45084 <__assert_fail@plt+0x324cc>
   44f34:	b	44f38 <__assert_fail@plt+0x32380>
   44f38:	b	44fa8 <__assert_fail@plt+0x323f0>
   44f3c:	b	44fa8 <__assert_fail@plt+0x323f0>
   44f40:	b	44fa8 <__assert_fail@plt+0x323f0>
   44f44:	b	44f48 <__assert_fail@plt+0x32390>
   44f48:	ldr	r0, [fp, #-616]	; 0xfffffd98
   44f4c:	ldr	r1, [fp, #-612]	; 0xfffffd9c
   44f50:	rsbs	r0, r0, #0
   44f54:	rscs	r1, r1, #0
   44f58:	str	r0, [sp, #960]	; 0x3c0
   44f5c:	str	r1, [sp, #956]	; 0x3bc
   44f60:	blt	45068 <__assert_fail@plt+0x324b0>
   44f64:	b	45084 <__assert_fail@plt+0x324cc>
   44f68:	ldr	r0, [fp, #-616]	; 0xfffffd98
   44f6c:	ldr	r1, [fp, #-612]	; 0xfffffd9c
   44f70:	subs	r0, r0, #1
   44f74:	sbcs	r1, r1, #0
   44f78:	str	r0, [sp, #952]	; 0x3b8
   44f7c:	str	r1, [sp, #948]	; 0x3b4
   44f80:	blt	45084 <__assert_fail@plt+0x324cc>
   44f84:	b	44f88 <__assert_fail@plt+0x323d0>
   44f88:	ldr	r0, [fp, #-616]	; 0xfffffd98
   44f8c:	ldr	r1, [fp, #-612]	; 0xfffffd9c
   44f90:	subs	r0, r0, #1
   44f94:	sbc	r1, r1, #0
   44f98:	cmn	r1, #1
   44f9c:	str	r0, [sp, #944]	; 0x3b0
   44fa0:	bgt	45068 <__assert_fail@plt+0x324b0>
   44fa4:	b	45084 <__assert_fail@plt+0x324cc>
   44fa8:	ldr	r0, [fp, #-616]	; 0xfffffd98
   44fac:	ldr	r1, [fp, #-612]	; 0xfffffd9c
   44fb0:	rsbs	r0, r0, #0
   44fb4:	rscs	r1, r1, #0
   44fb8:	str	r0, [sp, #940]	; 0x3ac
   44fbc:	str	r1, [sp, #936]	; 0x3a8
   44fc0:	blt	45068 <__assert_fail@plt+0x324b0>
   44fc4:	b	45084 <__assert_fail@plt+0x324cc>
   44fc8:	b	44fd0 <__assert_fail@plt+0x32418>
   44fcc:	b	45084 <__assert_fail@plt+0x324cc>
   44fd0:	ldr	r0, [fp, #-612]	; 0xfffffd9c
   44fd4:	cmn	r0, #1
   44fd8:	bgt	45040 <__assert_fail@plt+0x32488>
   44fdc:	b	44fe0 <__assert_fail@plt+0x32428>
   44fe0:	b	44fe4 <__assert_fail@plt+0x3242c>
   44fe4:	b	45010 <__assert_fail@plt+0x32458>
   44fe8:	b	45010 <__assert_fail@plt+0x32458>
   44fec:	ldr	r0, [fp, #-616]	; 0xfffffd98
   44ff0:	ldr	r1, [fp, #-612]	; 0xfffffd9c
   44ff4:	and	r0, r0, r1
   44ff8:	cmn	r0, #1
   44ffc:	bne	45010 <__assert_fail@plt+0x32458>
   45000:	b	45004 <__assert_fail@plt+0x3244c>
   45004:	b	45008 <__assert_fail@plt+0x32450>
   45008:	b	45068 <__assert_fail@plt+0x324b0>
   4500c:	b	45068 <__assert_fail@plt+0x324b0>
   45010:	ldr	r2, [fp, #-616]	; 0xfffffd98
   45014:	ldr	r3, [fp, #-612]	; 0xfffffd9c
   45018:	mov	r0, #0
   4501c:	str	r0, [sp, #932]	; 0x3a4
   45020:	ldr	r1, [sp, #932]	; 0x3a4
   45024:	bl	77780 <__assert_fail@plt+0x64bc8>
   45028:	subs	r0, r0, #3600	; 0xe10
   4502c:	sbcs	r1, r1, #0
   45030:	str	r0, [sp, #928]	; 0x3a0
   45034:	str	r1, [sp, #924]	; 0x39c
   45038:	blt	45068 <__assert_fail@plt+0x324b0>
   4503c:	b	45084 <__assert_fail@plt+0x324cc>
   45040:	ldr	r0, [fp, #-616]	; 0xfffffd98
   45044:	ldr	r1, [fp, #-612]	; 0xfffffd9c
   45048:	movw	r2, #13399	; 0x3457
   4504c:	movt	r2, #18
   45050:	subs	r0, r0, r2
   45054:	sbcs	r1, r1, #0
   45058:	str	r0, [sp, #920]	; 0x398
   4505c:	str	r1, [sp, #916]	; 0x394
   45060:	blt	45084 <__assert_fail@plt+0x324cc>
   45064:	b	45068 <__assert_fail@plt+0x324b0>
   45068:	ldr	r0, [fp, #-616]	; 0xfffffd98
   4506c:	mov	r1, #3600	; 0xe10
   45070:	mul	r0, r0, r1
   45074:	mov	r1, #0
   45078:	str	r1, [fp, #-1020]	; 0xfffffc04
   4507c:	str	r0, [fp, #-1024]	; 0xfffffc00
   45080:	b	46cec <__assert_fail@plt+0x34134>
   45084:	ldr	r0, [fp, #-616]	; 0xfffffd98
   45088:	mov	r1, #3600	; 0xe10
   4508c:	mul	r0, r0, r1
   45090:	mov	r1, #0
   45094:	str	r1, [fp, #-1020]	; 0xfffffc04
   45098:	str	r0, [fp, #-1024]	; 0xfffffc00
   4509c:	b	4582c <__assert_fail@plt+0x32c74>
   450a0:	b	4546c <__assert_fail@plt+0x328b4>
   450a4:	b	450a8 <__assert_fail@plt+0x324f0>
   450a8:	b	451c4 <__assert_fail@plt+0x3260c>
   450ac:	ldr	r0, [fp, #-612]	; 0xfffffd9c
   450b0:	cmn	r0, #1
   450b4:	bgt	4511c <__assert_fail@plt+0x32564>
   450b8:	b	450bc <__assert_fail@plt+0x32504>
   450bc:	b	450c0 <__assert_fail@plt+0x32508>
   450c0:	ldr	r0, [fp, #-616]	; 0xfffffd98
   450c4:	ldr	r1, [fp, #-612]	; 0xfffffd9c
   450c8:	movw	r2, #6699	; 0x1a2b
   450cc:	movt	r2, #9
   450d0:	subs	r0, r0, r2
   450d4:	sbcs	r1, r1, #0
   450d8:	str	r0, [sp, #912]	; 0x390
   450dc:	str	r1, [sp, #908]	; 0x38c
   450e0:	blt	45260 <__assert_fail@plt+0x326a8>
   450e4:	b	4527c <__assert_fail@plt+0x326c4>
   450e8:	ldr	r0, [fp, #-616]	; 0xfffffd98
   450ec:	ldr	r1, [fp, #-612]	; 0xfffffd9c
   450f0:	mvn	r1, r1
   450f4:	mvn	r0, r0
   450f8:	movw	r2, #58836	; 0xe5d4
   450fc:	movt	r2, #65526	; 0xfff6
   45100:	subs	r0, r2, r0
   45104:	mvn	r2, #0
   45108:	sbcs	r1, r2, r1
   4510c:	str	r0, [sp, #904]	; 0x388
   45110:	str	r1, [sp, #900]	; 0x384
   45114:	blt	45260 <__assert_fail@plt+0x326a8>
   45118:	b	4527c <__assert_fail@plt+0x326c4>
   4511c:	b	45198 <__assert_fail@plt+0x325e0>
   45120:	b	45124 <__assert_fail@plt+0x3256c>
   45124:	ldr	r0, [fp, #-616]	; 0xfffffd98
   45128:	ldr	r1, [fp, #-612]	; 0xfffffd9c
   4512c:	adds	r0, r0, #-2147483648	; 0x80000000
   45130:	sbc	r1, r1, #0
   45134:	rsbs	r0, r0, #0
   45138:	rscs	r1, r1, #0
   4513c:	str	r0, [sp, #896]	; 0x380
   45140:	str	r1, [sp, #892]	; 0x37c
   45144:	blt	45260 <__assert_fail@plt+0x326a8>
   45148:	b	4527c <__assert_fail@plt+0x326c4>
   4514c:	ldr	r0, [fp, #-616]	; 0xfffffd98
   45150:	ldr	r1, [fp, #-612]	; 0xfffffd9c
   45154:	subs	r0, r0, #1
   45158:	sbcs	r1, r1, #0
   4515c:	str	r0, [sp, #888]	; 0x378
   45160:	str	r1, [sp, #884]	; 0x374
   45164:	blt	4527c <__assert_fail@plt+0x326c4>
   45168:	b	4516c <__assert_fail@plt+0x325b4>
   4516c:	ldr	r0, [fp, #-616]	; 0xfffffd98
   45170:	ldr	r1, [fp, #-612]	; 0xfffffd9c
   45174:	subs	r0, r0, #1
   45178:	sbc	r1, r1, #0
   4517c:	mvn	r2, #-2147483648	; 0x80000000
   45180:	subs	r0, r2, r0
   45184:	rscs	r1, r1, #0
   45188:	str	r0, [sp, #880]	; 0x370
   4518c:	str	r1, [sp, #876]	; 0x36c
   45190:	blt	45260 <__assert_fail@plt+0x326a8>
   45194:	b	4527c <__assert_fail@plt+0x326c4>
   45198:	ldr	r0, [fp, #-616]	; 0xfffffd98
   4519c:	ldr	r1, [fp, #-612]	; 0xfffffd9c
   451a0:	movw	r2, #58837	; 0xe5d5
   451a4:	movt	r2, #65526	; 0xfff6
   451a8:	subs	r0, r2, r0
   451ac:	mvn	r2, #0
   451b0:	sbcs	r1, r2, r1
   451b4:	str	r0, [sp, #872]	; 0x368
   451b8:	str	r1, [sp, #868]	; 0x364
   451bc:	blt	45260 <__assert_fail@plt+0x326a8>
   451c0:	b	4527c <__assert_fail@plt+0x326c4>
   451c4:	b	451cc <__assert_fail@plt+0x32614>
   451c8:	b	4527c <__assert_fail@plt+0x326c4>
   451cc:	ldr	r0, [fp, #-612]	; 0xfffffd9c
   451d0:	cmn	r0, #1
   451d4:	bgt	45238 <__assert_fail@plt+0x32680>
   451d8:	b	451dc <__assert_fail@plt+0x32624>
   451dc:	b	451e0 <__assert_fail@plt+0x32628>
   451e0:	b	4520c <__assert_fail@plt+0x32654>
   451e4:	b	4520c <__assert_fail@plt+0x32654>
   451e8:	ldr	r0, [fp, #-616]	; 0xfffffd98
   451ec:	ldr	r1, [fp, #-612]	; 0xfffffd9c
   451f0:	and	r0, r0, r1
   451f4:	cmn	r0, #1
   451f8:	bne	4520c <__assert_fail@plt+0x32654>
   451fc:	b	45200 <__assert_fail@plt+0x32648>
   45200:	b	45204 <__assert_fail@plt+0x3264c>
   45204:	b	4527c <__assert_fail@plt+0x326c4>
   45208:	b	4527c <__assert_fail@plt+0x326c4>
   4520c:	ldr	r2, [fp, #-616]	; 0xfffffd98
   45210:	ldr	r3, [fp, #-612]	; 0xfffffd9c
   45214:	mov	r0, #-2147483648	; 0x80000000
   45218:	mvn	r1, #0
   4521c:	bl	77780 <__assert_fail@plt+0x64bc8>
   45220:	subs	r0, r0, #3600	; 0xe10
   45224:	sbcs	r1, r1, #0
   45228:	str	r0, [sp, #864]	; 0x360
   4522c:	str	r1, [sp, #860]	; 0x35c
   45230:	blt	45260 <__assert_fail@plt+0x326a8>
   45234:	b	4527c <__assert_fail@plt+0x326c4>
   45238:	ldr	r0, [fp, #-616]	; 0xfffffd98
   4523c:	ldr	r1, [fp, #-612]	; 0xfffffd9c
   45240:	movw	r2, #6700	; 0x1a2c
   45244:	movt	r2, #9
   45248:	subs	r0, r0, r2
   4524c:	sbcs	r1, r1, #0
   45250:	str	r0, [sp, #856]	; 0x358
   45254:	str	r1, [sp, #852]	; 0x354
   45258:	blt	4527c <__assert_fail@plt+0x326c4>
   4525c:	b	45260 <__assert_fail@plt+0x326a8>
   45260:	ldr	r0, [fp, #-616]	; 0xfffffd98
   45264:	mov	r1, #3600	; 0xe10
   45268:	mul	r0, r0, r1
   4526c:	asr	r1, r0, #31
   45270:	str	r0, [fp, #-1024]	; 0xfffffc00
   45274:	str	r1, [fp, #-1020]	; 0xfffffc04
   45278:	b	46cec <__assert_fail@plt+0x34134>
   4527c:	ldr	r0, [fp, #-616]	; 0xfffffd98
   45280:	mov	r1, #3600	; 0xe10
   45284:	mul	r0, r0, r1
   45288:	asr	r1, r0, #31
   4528c:	str	r0, [fp, #-1024]	; 0xfffffc00
   45290:	str	r1, [fp, #-1020]	; 0xfffffc04
   45294:	b	4582c <__assert_fail@plt+0x32c74>
   45298:	b	45394 <__assert_fail@plt+0x327dc>
   4529c:	ldr	r0, [fp, #-612]	; 0xfffffd9c
   452a0:	cmn	r0, #1
   452a4:	bgt	45300 <__assert_fail@plt+0x32748>
   452a8:	b	452ac <__assert_fail@plt+0x326f4>
   452ac:	b	452d8 <__assert_fail@plt+0x32720>
   452b0:	ldr	r0, [fp, #-616]	; 0xfffffd98
   452b4:	ldr	r1, [fp, #-612]	; 0xfffffd9c
   452b8:	movw	r2, #13398	; 0x3456
   452bc:	movt	r2, #18
   452c0:	subs	r0, r0, r2
   452c4:	sbcs	r1, r1, #0
   452c8:	str	r0, [sp, #848]	; 0x350
   452cc:	str	r1, [sp, #844]	; 0x34c
   452d0:	blt	45434 <__assert_fail@plt+0x3287c>
   452d4:	b	45450 <__assert_fail@plt+0x32898>
   452d8:	ldr	r0, [fp, #-616]	; 0xfffffd98
   452dc:	ldr	r1, [fp, #-612]	; 0xfffffd9c
   452e0:	mvn	r1, r1
   452e4:	mvn	r0, r0
   452e8:	rsbs	r0, r0, #0
   452ec:	rscs	r1, r1, #0
   452f0:	str	r0, [sp, #840]	; 0x348
   452f4:	str	r1, [sp, #836]	; 0x344
   452f8:	blt	45434 <__assert_fail@plt+0x3287c>
   452fc:	b	45450 <__assert_fail@plt+0x32898>
   45300:	b	45304 <__assert_fail@plt+0x3274c>
   45304:	b	45374 <__assert_fail@plt+0x327bc>
   45308:	b	45374 <__assert_fail@plt+0x327bc>
   4530c:	b	45374 <__assert_fail@plt+0x327bc>
   45310:	b	45314 <__assert_fail@plt+0x3275c>
   45314:	ldr	r0, [fp, #-616]	; 0xfffffd98
   45318:	ldr	r1, [fp, #-612]	; 0xfffffd9c
   4531c:	rsbs	r0, r0, #0
   45320:	rscs	r1, r1, #0
   45324:	str	r0, [sp, #832]	; 0x340
   45328:	str	r1, [sp, #828]	; 0x33c
   4532c:	blt	45434 <__assert_fail@plt+0x3287c>
   45330:	b	45450 <__assert_fail@plt+0x32898>
   45334:	ldr	r0, [fp, #-616]	; 0xfffffd98
   45338:	ldr	r1, [fp, #-612]	; 0xfffffd9c
   4533c:	subs	r0, r0, #1
   45340:	sbcs	r1, r1, #0
   45344:	str	r0, [sp, #824]	; 0x338
   45348:	str	r1, [sp, #820]	; 0x334
   4534c:	blt	45450 <__assert_fail@plt+0x32898>
   45350:	b	45354 <__assert_fail@plt+0x3279c>
   45354:	ldr	r0, [fp, #-616]	; 0xfffffd98
   45358:	ldr	r1, [fp, #-612]	; 0xfffffd9c
   4535c:	subs	r0, r0, #1
   45360:	sbc	r1, r1, #0
   45364:	cmn	r1, #1
   45368:	str	r0, [sp, #816]	; 0x330
   4536c:	bgt	45434 <__assert_fail@plt+0x3287c>
   45370:	b	45450 <__assert_fail@plt+0x32898>
   45374:	ldr	r0, [fp, #-616]	; 0xfffffd98
   45378:	ldr	r1, [fp, #-612]	; 0xfffffd9c
   4537c:	rsbs	r0, r0, #0
   45380:	rscs	r1, r1, #0
   45384:	str	r0, [sp, #812]	; 0x32c
   45388:	str	r1, [sp, #808]	; 0x328
   4538c:	blt	45434 <__assert_fail@plt+0x3287c>
   45390:	b	45450 <__assert_fail@plt+0x32898>
   45394:	b	4539c <__assert_fail@plt+0x327e4>
   45398:	b	45450 <__assert_fail@plt+0x32898>
   4539c:	ldr	r0, [fp, #-612]	; 0xfffffd9c
   453a0:	cmn	r0, #1
   453a4:	bgt	4540c <__assert_fail@plt+0x32854>
   453a8:	b	453ac <__assert_fail@plt+0x327f4>
   453ac:	b	453b0 <__assert_fail@plt+0x327f8>
   453b0:	b	453dc <__assert_fail@plt+0x32824>
   453b4:	b	453dc <__assert_fail@plt+0x32824>
   453b8:	ldr	r0, [fp, #-616]	; 0xfffffd98
   453bc:	ldr	r1, [fp, #-612]	; 0xfffffd9c
   453c0:	and	r0, r0, r1
   453c4:	cmn	r0, #1
   453c8:	bne	453dc <__assert_fail@plt+0x32824>
   453cc:	b	453d0 <__assert_fail@plt+0x32818>
   453d0:	b	453d4 <__assert_fail@plt+0x3281c>
   453d4:	b	45434 <__assert_fail@plt+0x3287c>
   453d8:	b	45434 <__assert_fail@plt+0x3287c>
   453dc:	ldr	r2, [fp, #-616]	; 0xfffffd98
   453e0:	ldr	r3, [fp, #-612]	; 0xfffffd9c
   453e4:	mov	r0, #0
   453e8:	str	r0, [sp, #804]	; 0x324
   453ec:	ldr	r1, [sp, #804]	; 0x324
   453f0:	bl	77780 <__assert_fail@plt+0x64bc8>
   453f4:	subs	r0, r0, #3600	; 0xe10
   453f8:	sbcs	r1, r1, #0
   453fc:	str	r0, [sp, #800]	; 0x320
   45400:	str	r1, [sp, #796]	; 0x31c
   45404:	blt	45434 <__assert_fail@plt+0x3287c>
   45408:	b	45450 <__assert_fail@plt+0x32898>
   4540c:	ldr	r0, [fp, #-616]	; 0xfffffd98
   45410:	ldr	r1, [fp, #-612]	; 0xfffffd9c
   45414:	movw	r2, #13399	; 0x3457
   45418:	movt	r2, #18
   4541c:	subs	r0, r0, r2
   45420:	sbcs	r1, r1, #0
   45424:	str	r0, [sp, #792]	; 0x318
   45428:	str	r1, [sp, #788]	; 0x314
   4542c:	blt	45450 <__assert_fail@plt+0x32898>
   45430:	b	45434 <__assert_fail@plt+0x3287c>
   45434:	ldr	r0, [fp, #-616]	; 0xfffffd98
   45438:	mov	r1, #3600	; 0xe10
   4543c:	mul	r0, r0, r1
   45440:	mov	r1, #0
   45444:	str	r1, [fp, #-1020]	; 0xfffffc04
   45448:	str	r0, [fp, #-1024]	; 0xfffffc00
   4544c:	b	46cec <__assert_fail@plt+0x34134>
   45450:	ldr	r0, [fp, #-616]	; 0xfffffd98
   45454:	mov	r1, #3600	; 0xe10
   45458:	mul	r0, r0, r1
   4545c:	mov	r1, #0
   45460:	str	r1, [fp, #-1020]	; 0xfffffc04
   45464:	str	r0, [fp, #-1024]	; 0xfffffc00
   45468:	b	4582c <__assert_fail@plt+0x32c74>
   4546c:	b	45470 <__assert_fail@plt+0x328b8>
   45470:	b	4557c <__assert_fail@plt+0x329c4>
   45474:	ldr	r0, [fp, #-612]	; 0xfffffd9c
   45478:	cmn	r0, #1
   4547c:	bgt	454f0 <__assert_fail@plt+0x32938>
   45480:	b	45484 <__assert_fail@plt+0x328cc>
   45484:	b	45488 <__assert_fail@plt+0x328d0>
   45488:	ldr	r0, [fp, #-616]	; 0xfffffd98
   4548c:	ldr	r1, [fp, #-612]	; 0xfffffd9c
   45490:	movw	r2, #24175	; 0x5e6f
   45494:	movt	r2, #15437	; 0x3c4d
   45498:	subs	r0, r0, r2
   4549c:	movw	r2, #6699	; 0x1a2b
   454a0:	movt	r2, #9
   454a4:	sbcs	r1, r1, r2
   454a8:	str	r0, [sp, #784]	; 0x310
   454ac:	str	r1, [sp, #780]	; 0x30c
   454b0:	blt	45614 <__assert_fail@plt+0x32a5c>
   454b4:	b	45634 <__assert_fail@plt+0x32a7c>
   454b8:	ldr	r0, [fp, #-616]	; 0xfffffd98
   454bc:	ldr	r1, [fp, #-612]	; 0xfffffd9c
   454c0:	mvn	r1, r1
   454c4:	mvn	r0, r0
   454c8:	movw	r2, #41360	; 0xa190
   454cc:	movt	r2, #50098	; 0xc3b2
   454d0:	subs	r0, r2, r0
   454d4:	movw	r2, #58836	; 0xe5d4
   454d8:	movt	r2, #65526	; 0xfff6
   454dc:	sbcs	r1, r2, r1
   454e0:	str	r0, [sp, #776]	; 0x308
   454e4:	str	r1, [sp, #772]	; 0x304
   454e8:	blt	45614 <__assert_fail@plt+0x32a5c>
   454ec:	b	45634 <__assert_fail@plt+0x32a7c>
   454f0:	b	4554c <__assert_fail@plt+0x32994>
   454f4:	b	454f8 <__assert_fail@plt+0x32940>
   454f8:	ldr	r0, [fp, #-616]	; 0xfffffd98
   454fc:	ldr	r1, [fp, #-612]	; 0xfffffd9c
   45500:	add	r1, r1, #-2147483648	; 0x80000000
   45504:	rsbs	r0, r0, #0
   45508:	rscs	r1, r1, #0
   4550c:	str	r0, [sp, #768]	; 0x300
   45510:	str	r1, [sp, #764]	; 0x2fc
   45514:	blt	45614 <__assert_fail@plt+0x32a5c>
   45518:	b	45634 <__assert_fail@plt+0x32a7c>
   4551c:	ldr	r0, [fp, #-616]	; 0xfffffd98
   45520:	ldr	r1, [fp, #-612]	; 0xfffffd9c
   45524:	subs	r0, r0, #1
   45528:	sbcs	r1, r1, #0
   4552c:	str	r0, [sp, #760]	; 0x2f8
   45530:	str	r1, [sp, #756]	; 0x2f4
   45534:	blt	45634 <__assert_fail@plt+0x32a7c>
   45538:	b	4553c <__assert_fail@plt+0x32984>
   4553c:	mov	r0, #0
   45540:	cmp	r0, #0
   45544:	bne	45614 <__assert_fail@plt+0x32a5c>
   45548:	b	45634 <__assert_fail@plt+0x32a7c>
   4554c:	ldr	r0, [fp, #-616]	; 0xfffffd98
   45550:	ldr	r1, [fp, #-612]	; 0xfffffd9c
   45554:	movw	r2, #41361	; 0xa191
   45558:	movt	r2, #50098	; 0xc3b2
   4555c:	subs	r0, r2, r0
   45560:	movw	r2, #58836	; 0xe5d4
   45564:	movt	r2, #65526	; 0xfff6
   45568:	sbcs	r1, r2, r1
   4556c:	str	r0, [sp, #752]	; 0x2f0
   45570:	str	r1, [sp, #748]	; 0x2ec
   45574:	blt	45614 <__assert_fail@plt+0x32a5c>
   45578:	b	45634 <__assert_fail@plt+0x32a7c>
   4557c:	b	45584 <__assert_fail@plt+0x329cc>
   45580:	b	45634 <__assert_fail@plt+0x32a7c>
   45584:	ldr	r0, [fp, #-612]	; 0xfffffd9c
   45588:	cmn	r0, #1
   4558c:	bgt	455e4 <__assert_fail@plt+0x32a2c>
   45590:	b	45594 <__assert_fail@plt+0x329dc>
   45594:	ldr	r0, [fp, #-616]	; 0xfffffd98
   45598:	ldr	r1, [fp, #-612]	; 0xfffffd9c
   4559c:	and	r0, r0, r1
   455a0:	cmn	r0, #1
   455a4:	bne	455b8 <__assert_fail@plt+0x32a00>
   455a8:	b	455ac <__assert_fail@plt+0x329f4>
   455ac:	b	455b0 <__assert_fail@plt+0x329f8>
   455b0:	b	45634 <__assert_fail@plt+0x32a7c>
   455b4:	b	45634 <__assert_fail@plt+0x32a7c>
   455b8:	ldr	r2, [fp, #-616]	; 0xfffffd98
   455bc:	ldr	r3, [fp, #-612]	; 0xfffffd9c
   455c0:	mov	r0, #0
   455c4:	mov	r1, #-2147483648	; 0x80000000
   455c8:	bl	77780 <__assert_fail@plt+0x64bc8>
   455cc:	subs	r0, r0, #3600	; 0xe10
   455d0:	sbcs	r1, r1, #0
   455d4:	str	r0, [sp, #744]	; 0x2e8
   455d8:	str	r1, [sp, #740]	; 0x2e4
   455dc:	blt	45614 <__assert_fail@plt+0x32a5c>
   455e0:	b	45634 <__assert_fail@plt+0x32a7c>
   455e4:	ldr	r0, [fp, #-616]	; 0xfffffd98
   455e8:	ldr	r1, [fp, #-612]	; 0xfffffd9c
   455ec:	movw	r2, #24176	; 0x5e70
   455f0:	movt	r2, #15437	; 0x3c4d
   455f4:	subs	r0, r0, r2
   455f8:	movw	r2, #6699	; 0x1a2b
   455fc:	movt	r2, #9
   45600:	sbcs	r1, r1, r2
   45604:	str	r0, [sp, #736]	; 0x2e0
   45608:	str	r1, [sp, #732]	; 0x2dc
   4560c:	blt	45634 <__assert_fail@plt+0x32a7c>
   45610:	b	45614 <__assert_fail@plt+0x32a5c>
   45614:	ldr	r0, [fp, #-616]	; 0xfffffd98
   45618:	ldr	r1, [fp, #-612]	; 0xfffffd9c
   4561c:	mov	r2, #3600	; 0xe10
   45620:	umull	r0, r3, r0, r2
   45624:	mla	r1, r1, r2, r3
   45628:	str	r0, [fp, #-1024]	; 0xfffffc00
   4562c:	str	r1, [fp, #-1020]	; 0xfffffc04
   45630:	b	46cec <__assert_fail@plt+0x34134>
   45634:	ldr	r0, [fp, #-616]	; 0xfffffd98
   45638:	ldr	r1, [fp, #-612]	; 0xfffffd9c
   4563c:	mov	r2, #3600	; 0xe10
   45640:	umull	r0, r3, r0, r2
   45644:	mla	r1, r1, r2, r3
   45648:	str	r0, [fp, #-1024]	; 0xfffffc00
   4564c:	str	r1, [fp, #-1020]	; 0xfffffc04
   45650:	b	4582c <__assert_fail@plt+0x32c74>
   45654:	b	45748 <__assert_fail@plt+0x32b90>
   45658:	ldr	r0, [fp, #-612]	; 0xfffffd9c
   4565c:	cmn	r0, #1
   45660:	bgt	456b4 <__assert_fail@plt+0x32afc>
   45664:	b	45668 <__assert_fail@plt+0x32ab0>
   45668:	b	4569c <__assert_fail@plt+0x32ae4>
   4566c:	ldr	r0, [fp, #-616]	; 0xfffffd98
   45670:	ldr	r1, [fp, #-612]	; 0xfffffd9c
   45674:	movw	r2, #48351	; 0xbcdf
   45678:	movt	r2, #30874	; 0x789a
   4567c:	subs	r0, r0, r2
   45680:	movw	r2, #13398	; 0x3456
   45684:	movt	r2, #18
   45688:	sbcs	r1, r1, r2
   4568c:	str	r0, [sp, #728]	; 0x2d8
   45690:	str	r1, [sp, #724]	; 0x2d4
   45694:	bcc	457f0 <__assert_fail@plt+0x32c38>
   45698:	b	45810 <__assert_fail@plt+0x32c58>
   4569c:	ldr	r0, [fp, #-616]	; 0xfffffd98
   456a0:	ldr	r1, [fp, #-612]	; 0xfffffd9c
   456a4:	and	r0, r0, r1
   456a8:	cmn	r0, #1
   456ac:	bne	457f0 <__assert_fail@plt+0x32c38>
   456b0:	b	45810 <__assert_fail@plt+0x32c58>
   456b4:	b	456b8 <__assert_fail@plt+0x32b00>
   456b8:	b	45728 <__assert_fail@plt+0x32b70>
   456bc:	b	45728 <__assert_fail@plt+0x32b70>
   456c0:	b	45728 <__assert_fail@plt+0x32b70>
   456c4:	b	456c8 <__assert_fail@plt+0x32b10>
   456c8:	ldr	r0, [fp, #-616]	; 0xfffffd98
   456cc:	ldr	r1, [fp, #-612]	; 0xfffffd9c
   456d0:	rsbs	r0, r0, #0
   456d4:	rscs	r1, r1, #0
   456d8:	str	r0, [sp, #720]	; 0x2d0
   456dc:	str	r1, [sp, #716]	; 0x2cc
   456e0:	blt	457f0 <__assert_fail@plt+0x32c38>
   456e4:	b	45810 <__assert_fail@plt+0x32c58>
   456e8:	ldr	r0, [fp, #-616]	; 0xfffffd98
   456ec:	ldr	r1, [fp, #-612]	; 0xfffffd9c
   456f0:	subs	r0, r0, #1
   456f4:	sbcs	r1, r1, #0
   456f8:	str	r0, [sp, #712]	; 0x2c8
   456fc:	str	r1, [sp, #708]	; 0x2c4
   45700:	blt	45810 <__assert_fail@plt+0x32c58>
   45704:	b	45708 <__assert_fail@plt+0x32b50>
   45708:	ldr	r0, [fp, #-616]	; 0xfffffd98
   4570c:	ldr	r1, [fp, #-612]	; 0xfffffd9c
   45710:	subs	r0, r0, #1
   45714:	sbc	r1, r1, #0
   45718:	cmn	r1, #1
   4571c:	str	r0, [sp, #704]	; 0x2c0
   45720:	bgt	457f0 <__assert_fail@plt+0x32c38>
   45724:	b	45810 <__assert_fail@plt+0x32c58>
   45728:	ldr	r0, [fp, #-616]	; 0xfffffd98
   4572c:	ldr	r1, [fp, #-612]	; 0xfffffd9c
   45730:	rsbs	r0, r0, #0
   45734:	rscs	r1, r1, #0
   45738:	str	r0, [sp, #700]	; 0x2bc
   4573c:	str	r1, [sp, #696]	; 0x2b8
   45740:	blt	457f0 <__assert_fail@plt+0x32c38>
   45744:	b	45810 <__assert_fail@plt+0x32c58>
   45748:	b	45750 <__assert_fail@plt+0x32b98>
   4574c:	b	45810 <__assert_fail@plt+0x32c58>
   45750:	ldr	r0, [fp, #-612]	; 0xfffffd9c
   45754:	cmn	r0, #1
   45758:	bgt	457c0 <__assert_fail@plt+0x32c08>
   4575c:	b	45760 <__assert_fail@plt+0x32ba8>
   45760:	b	45764 <__assert_fail@plt+0x32bac>
   45764:	b	45790 <__assert_fail@plt+0x32bd8>
   45768:	b	45790 <__assert_fail@plt+0x32bd8>
   4576c:	ldr	r0, [fp, #-616]	; 0xfffffd98
   45770:	ldr	r1, [fp, #-612]	; 0xfffffd9c
   45774:	and	r0, r0, r1
   45778:	cmn	r0, #1
   4577c:	bne	45790 <__assert_fail@plt+0x32bd8>
   45780:	b	45784 <__assert_fail@plt+0x32bcc>
   45784:	b	45788 <__assert_fail@plt+0x32bd0>
   45788:	b	457f0 <__assert_fail@plt+0x32c38>
   4578c:	b	457f0 <__assert_fail@plt+0x32c38>
   45790:	ldr	r2, [fp, #-616]	; 0xfffffd98
   45794:	ldr	r3, [fp, #-612]	; 0xfffffd9c
   45798:	mov	r0, #0
   4579c:	str	r0, [sp, #692]	; 0x2b4
   457a0:	ldr	r1, [sp, #692]	; 0x2b4
   457a4:	bl	77780 <__assert_fail@plt+0x64bc8>
   457a8:	subs	r0, r0, #3600	; 0xe10
   457ac:	sbcs	r1, r1, #0
   457b0:	str	r0, [sp, #688]	; 0x2b0
   457b4:	str	r1, [sp, #684]	; 0x2ac
   457b8:	blt	457f0 <__assert_fail@plt+0x32c38>
   457bc:	b	45810 <__assert_fail@plt+0x32c58>
   457c0:	ldr	r0, [fp, #-616]	; 0xfffffd98
   457c4:	ldr	r1, [fp, #-612]	; 0xfffffd9c
   457c8:	movw	r2, #48352	; 0xbce0
   457cc:	movt	r2, #30874	; 0x789a
   457d0:	subs	r0, r0, r2
   457d4:	movw	r2, #13398	; 0x3456
   457d8:	movt	r2, #18
   457dc:	sbcs	r1, r1, r2
   457e0:	str	r0, [sp, #680]	; 0x2a8
   457e4:	str	r1, [sp, #676]	; 0x2a4
   457e8:	bcc	45810 <__assert_fail@plt+0x32c58>
   457ec:	b	457f0 <__assert_fail@plt+0x32c38>
   457f0:	ldr	r0, [fp, #-616]	; 0xfffffd98
   457f4:	ldr	r1, [fp, #-612]	; 0xfffffd9c
   457f8:	mov	r2, #3600	; 0xe10
   457fc:	umull	r0, r3, r0, r2
   45800:	mla	r1, r1, r2, r3
   45804:	str	r0, [fp, #-1024]	; 0xfffffc00
   45808:	str	r1, [fp, #-1020]	; 0xfffffc04
   4580c:	b	46cec <__assert_fail@plt+0x34134>
   45810:	ldr	r0, [fp, #-616]	; 0xfffffd98
   45814:	ldr	r1, [fp, #-612]	; 0xfffffd9c
   45818:	mov	r2, #3600	; 0xe10
   4581c:	umull	r0, r3, r0, r2
   45820:	mla	r1, r1, r2, r3
   45824:	str	r0, [fp, #-1024]	; 0xfffffc00
   45828:	str	r1, [fp, #-1020]	; 0xfffffc04
   4582c:	ldr	r0, [fp, #-368]	; 0xfffffe90
   45830:	asr	r1, r0, #31
   45834:	ldr	r2, [fp, #-1024]	; 0xfffffc00
   45838:	ldr	r3, [fp, #-1020]	; 0xfffffc04
   4583c:	mov	ip, #0
   45840:	cmn	r1, #1
   45844:	mov	lr, ip
   45848:	movwgt	lr, #1
   4584c:	adds	r0, r0, r2
   45850:	adc	r1, r1, r3
   45854:	cmn	r1, #1
   45858:	mov	r2, ip
   4585c:	movwgt	r2, #1
   45860:	sub	r4, lr, r2
   45864:	cmp	lr, r2
   45868:	movwne	r4, #1
   4586c:	cmn	r3, #1
   45870:	movwgt	ip, #1
   45874:	sub	r2, lr, ip
   45878:	clz	r2, r2
   4587c:	lsr	r2, r2, #5
   45880:	and	r2, r2, r4
   45884:	str	r0, [fp, #-1032]	; 0xfffffbf8
   45888:	str	r1, [fp, #-1028]	; 0xfffffbfc
   4588c:	tst	r2, #1
   45890:	bne	46cec <__assert_fail@plt+0x34134>
   45894:	b	45c58 <__assert_fail@plt+0x330a0>
   45898:	b	4589c <__assert_fail@plt+0x32ce4>
   4589c:	b	459b0 <__assert_fail@plt+0x32df8>
   458a0:	ldr	r0, [fp, #-604]	; 0xfffffda4
   458a4:	cmn	r0, #1
   458a8:	bgt	45904 <__assert_fail@plt+0x32d4c>
   458ac:	b	458b0 <__assert_fail@plt+0x32cf8>
   458b0:	b	458b4 <__assert_fail@plt+0x32cfc>
   458b4:	ldr	r0, [fp, #-608]	; 0xfffffda0
   458b8:	ldr	r1, [fp, #-604]	; 0xfffffda4
   458bc:	subs	r0, r0, #2
   458c0:	sbcs	r1, r1, #0
   458c4:	str	r0, [sp, #672]	; 0x2a0
   458c8:	str	r1, [sp, #668]	; 0x29c
   458cc:	blt	45a44 <__assert_fail@plt+0x32e8c>
   458d0:	b	45a64 <__assert_fail@plt+0x32eac>
   458d4:	ldr	r0, [fp, #-608]	; 0xfffffda0
   458d8:	ldr	r1, [fp, #-604]	; 0xfffffda4
   458dc:	mvn	r1, r1
   458e0:	mvn	r0, r0
   458e4:	mvn	r2, #2
   458e8:	subs	r0, r2, r0
   458ec:	mvn	r2, #0
   458f0:	sbcs	r1, r2, r1
   458f4:	str	r0, [sp, #664]	; 0x298
   458f8:	str	r1, [sp, #660]	; 0x294
   458fc:	blt	45a44 <__assert_fail@plt+0x32e8c>
   45900:	b	45a64 <__assert_fail@plt+0x32eac>
   45904:	b	45908 <__assert_fail@plt+0x32d50>
   45908:	b	45988 <__assert_fail@plt+0x32dd0>
   4590c:	b	45988 <__assert_fail@plt+0x32dd0>
   45910:	b	45988 <__assert_fail@plt+0x32dd0>
   45914:	b	45918 <__assert_fail@plt+0x32d60>
   45918:	ldr	r0, [fp, #-608]	; 0xfffffda0
   4591c:	ldr	r1, [fp, #-604]	; 0xfffffda4
   45920:	subs	r0, r0, #128	; 0x80
   45924:	sbc	r1, r1, #0
   45928:	rsbs	r0, r0, #0
   4592c:	rscs	r1, r1, #0
   45930:	str	r0, [sp, #656]	; 0x290
   45934:	str	r1, [sp, #652]	; 0x28c
   45938:	blt	45a44 <__assert_fail@plt+0x32e8c>
   4593c:	b	45a64 <__assert_fail@plt+0x32eac>
   45940:	ldr	r0, [fp, #-608]	; 0xfffffda0
   45944:	ldr	r1, [fp, #-604]	; 0xfffffda4
   45948:	subs	r0, r0, #1
   4594c:	sbcs	r1, r1, #0
   45950:	str	r0, [sp, #648]	; 0x288
   45954:	str	r1, [sp, #644]	; 0x284
   45958:	blt	45a64 <__assert_fail@plt+0x32eac>
   4595c:	b	45960 <__assert_fail@plt+0x32da8>
   45960:	ldr	r0, [fp, #-608]	; 0xfffffda0
   45964:	ldr	r1, [fp, #-604]	; 0xfffffda4
   45968:	subs	r0, r0, #1
   4596c:	sbc	r1, r1, #0
   45970:	rsbs	r0, r0, #127	; 0x7f
   45974:	rscs	r1, r1, #0
   45978:	str	r0, [sp, #640]	; 0x280
   4597c:	str	r1, [sp, #636]	; 0x27c
   45980:	blt	45a44 <__assert_fail@plt+0x32e8c>
   45984:	b	45a64 <__assert_fail@plt+0x32eac>
   45988:	ldr	r0, [fp, #-608]	; 0xfffffda0
   4598c:	ldr	r1, [fp, #-604]	; 0xfffffda4
   45990:	mvn	r2, #1
   45994:	subs	r0, r2, r0
   45998:	mvn	r2, #0
   4599c:	sbcs	r1, r2, r1
   459a0:	str	r0, [sp, #632]	; 0x278
   459a4:	str	r1, [sp, #628]	; 0x274
   459a8:	blt	45a44 <__assert_fail@plt+0x32e8c>
   459ac:	b	45a64 <__assert_fail@plt+0x32eac>
   459b0:	b	459b8 <__assert_fail@plt+0x32e00>
   459b4:	b	45a64 <__assert_fail@plt+0x32eac>
   459b8:	ldr	r0, [fp, #-604]	; 0xfffffda4
   459bc:	cmn	r0, #1
   459c0:	bgt	45a24 <__assert_fail@plt+0x32e6c>
   459c4:	b	459c8 <__assert_fail@plt+0x32e10>
   459c8:	b	459cc <__assert_fail@plt+0x32e14>
   459cc:	b	459f8 <__assert_fail@plt+0x32e40>
   459d0:	b	459f8 <__assert_fail@plt+0x32e40>
   459d4:	ldr	r0, [fp, #-608]	; 0xfffffda0
   459d8:	ldr	r1, [fp, #-604]	; 0xfffffda4
   459dc:	and	r0, r0, r1
   459e0:	cmn	r0, #1
   459e4:	bne	459f8 <__assert_fail@plt+0x32e40>
   459e8:	b	459ec <__assert_fail@plt+0x32e34>
   459ec:	b	459f0 <__assert_fail@plt+0x32e38>
   459f0:	b	45a64 <__assert_fail@plt+0x32eac>
   459f4:	b	45a64 <__assert_fail@plt+0x32eac>
   459f8:	ldr	r2, [fp, #-608]	; 0xfffffda0
   459fc:	ldr	r3, [fp, #-604]	; 0xfffffda4
   45a00:	mvn	r0, #127	; 0x7f
   45a04:	mvn	r1, #0
   45a08:	bl	77780 <__assert_fail@plt+0x64bc8>
   45a0c:	subs	r0, r0, #60	; 0x3c
   45a10:	sbcs	r1, r1, #0
   45a14:	str	r0, [sp, #624]	; 0x270
   45a18:	str	r1, [sp, #620]	; 0x26c
   45a1c:	blt	45a44 <__assert_fail@plt+0x32e8c>
   45a20:	b	45a64 <__assert_fail@plt+0x32eac>
   45a24:	ldr	r0, [fp, #-608]	; 0xfffffda0
   45a28:	ldr	r1, [fp, #-604]	; 0xfffffda4
   45a2c:	subs	r0, r0, #3
   45a30:	sbcs	r1, r1, #0
   45a34:	str	r0, [sp, #616]	; 0x268
   45a38:	str	r1, [sp, #612]	; 0x264
   45a3c:	blt	45a64 <__assert_fail@plt+0x32eac>
   45a40:	b	45a44 <__assert_fail@plt+0x32e8c>
   45a44:	ldr	r0, [fp, #-608]	; 0xfffffda0
   45a48:	rsb	r0, r0, r0, lsl #4
   45a4c:	lsl	r0, r0, #2
   45a50:	sxtb	r0, r0
   45a54:	asr	r1, r0, #31
   45a58:	str	r0, [fp, #-1040]	; 0xfffffbf0
   45a5c:	str	r1, [fp, #-1036]	; 0xfffffbf4
   45a60:	b	46cec <__assert_fail@plt+0x34134>
   45a64:	ldr	r0, [fp, #-608]	; 0xfffffda0
   45a68:	rsb	r0, r0, r0, lsl #4
   45a6c:	lsl	r0, r0, #2
   45a70:	sxtb	r0, r0
   45a74:	asr	r1, r0, #31
   45a78:	str	r0, [fp, #-1040]	; 0xfffffbf0
   45a7c:	str	r1, [fp, #-1036]	; 0xfffffbf4
   45a80:	b	46ba8 <__assert_fail@plt+0x33ff0>
   45a84:	b	45b80 <__assert_fail@plt+0x32fc8>
   45a88:	ldr	r0, [fp, #-604]	; 0xfffffda4
   45a8c:	cmn	r0, #1
   45a90:	bgt	45aec <__assert_fail@plt+0x32f34>
   45a94:	b	45a98 <__assert_fail@plt+0x32ee0>
   45a98:	b	45a9c <__assert_fail@plt+0x32ee4>
   45a9c:	ldr	r0, [fp, #-608]	; 0xfffffda0
   45aa0:	ldr	r1, [fp, #-604]	; 0xfffffda4
   45aa4:	subs	r0, r0, #4
   45aa8:	sbcs	r1, r1, #0
   45aac:	str	r0, [sp, #608]	; 0x260
   45ab0:	str	r1, [sp, #604]	; 0x25c
   45ab4:	blt	45c18 <__assert_fail@plt+0x33060>
   45ab8:	b	45c38 <__assert_fail@plt+0x33080>
   45abc:	ldr	r0, [fp, #-608]	; 0xfffffda0
   45ac0:	ldr	r1, [fp, #-604]	; 0xfffffda4
   45ac4:	mvn	r1, r1
   45ac8:	mvn	r0, r0
   45acc:	mvn	r2, #4
   45ad0:	subs	r0, r2, r0
   45ad4:	mvn	r2, #0
   45ad8:	sbcs	r1, r2, r1
   45adc:	str	r0, [sp, #600]	; 0x258
   45ae0:	str	r1, [sp, #596]	; 0x254
   45ae4:	blt	45c18 <__assert_fail@plt+0x33060>
   45ae8:	b	45c38 <__assert_fail@plt+0x33080>
   45aec:	b	45af0 <__assert_fail@plt+0x32f38>
   45af0:	b	45b60 <__assert_fail@plt+0x32fa8>
   45af4:	b	45b60 <__assert_fail@plt+0x32fa8>
   45af8:	b	45b60 <__assert_fail@plt+0x32fa8>
   45afc:	b	45b00 <__assert_fail@plt+0x32f48>
   45b00:	ldr	r0, [fp, #-608]	; 0xfffffda0
   45b04:	ldr	r1, [fp, #-604]	; 0xfffffda4
   45b08:	rsbs	r0, r0, #0
   45b0c:	rscs	r1, r1, #0
   45b10:	str	r0, [sp, #592]	; 0x250
   45b14:	str	r1, [sp, #588]	; 0x24c
   45b18:	blt	45c18 <__assert_fail@plt+0x33060>
   45b1c:	b	45c38 <__assert_fail@plt+0x33080>
   45b20:	ldr	r0, [fp, #-608]	; 0xfffffda0
   45b24:	ldr	r1, [fp, #-604]	; 0xfffffda4
   45b28:	subs	r0, r0, #1
   45b2c:	sbcs	r1, r1, #0
   45b30:	str	r0, [sp, #584]	; 0x248
   45b34:	str	r1, [sp, #580]	; 0x244
   45b38:	blt	45c38 <__assert_fail@plt+0x33080>
   45b3c:	b	45b40 <__assert_fail@plt+0x32f88>
   45b40:	ldr	r0, [fp, #-608]	; 0xfffffda0
   45b44:	ldr	r1, [fp, #-604]	; 0xfffffda4
   45b48:	subs	r0, r0, #1
   45b4c:	sbc	r1, r1, #0
   45b50:	cmn	r1, #1
   45b54:	str	r0, [sp, #576]	; 0x240
   45b58:	bgt	45c18 <__assert_fail@plt+0x33060>
   45b5c:	b	45c38 <__assert_fail@plt+0x33080>
   45b60:	ldr	r0, [fp, #-608]	; 0xfffffda0
   45b64:	ldr	r1, [fp, #-604]	; 0xfffffda4
   45b68:	rsbs	r0, r0, #0
   45b6c:	rscs	r1, r1, #0
   45b70:	str	r0, [sp, #572]	; 0x23c
   45b74:	str	r1, [sp, #568]	; 0x238
   45b78:	blt	45c18 <__assert_fail@plt+0x33060>
   45b7c:	b	45c38 <__assert_fail@plt+0x33080>
   45b80:	b	45b88 <__assert_fail@plt+0x32fd0>
   45b84:	b	45c38 <__assert_fail@plt+0x33080>
   45b88:	ldr	r0, [fp, #-604]	; 0xfffffda4
   45b8c:	cmn	r0, #1
   45b90:	bgt	45bf8 <__assert_fail@plt+0x33040>
   45b94:	b	45b98 <__assert_fail@plt+0x32fe0>
   45b98:	b	45b9c <__assert_fail@plt+0x32fe4>
   45b9c:	b	45bc8 <__assert_fail@plt+0x33010>
   45ba0:	b	45bc8 <__assert_fail@plt+0x33010>
   45ba4:	ldr	r0, [fp, #-608]	; 0xfffffda0
   45ba8:	ldr	r1, [fp, #-604]	; 0xfffffda4
   45bac:	and	r0, r0, r1
   45bb0:	cmn	r0, #1
   45bb4:	bne	45bc8 <__assert_fail@plt+0x33010>
   45bb8:	b	45bbc <__assert_fail@plt+0x33004>
   45bbc:	b	45bc0 <__assert_fail@plt+0x33008>
   45bc0:	b	45c18 <__assert_fail@plt+0x33060>
   45bc4:	b	45c18 <__assert_fail@plt+0x33060>
   45bc8:	ldr	r2, [fp, #-608]	; 0xfffffda0
   45bcc:	ldr	r3, [fp, #-604]	; 0xfffffda4
   45bd0:	mov	r0, #0
   45bd4:	str	r0, [sp, #564]	; 0x234
   45bd8:	ldr	r1, [sp, #564]	; 0x234
   45bdc:	bl	77780 <__assert_fail@plt+0x64bc8>
   45be0:	subs	r0, r0, #60	; 0x3c
   45be4:	sbcs	r1, r1, #0
   45be8:	str	r0, [sp, #560]	; 0x230
   45bec:	str	r1, [sp, #556]	; 0x22c
   45bf0:	blt	45c18 <__assert_fail@plt+0x33060>
   45bf4:	b	45c38 <__assert_fail@plt+0x33080>
   45bf8:	ldr	r0, [fp, #-608]	; 0xfffffda0
   45bfc:	ldr	r1, [fp, #-604]	; 0xfffffda4
   45c00:	subs	r0, r0, #5
   45c04:	sbcs	r1, r1, #0
   45c08:	str	r0, [sp, #552]	; 0x228
   45c0c:	str	r1, [sp, #548]	; 0x224
   45c10:	blt	45c38 <__assert_fail@plt+0x33080>
   45c14:	b	45c18 <__assert_fail@plt+0x33060>
   45c18:	ldr	r0, [fp, #-608]	; 0xfffffda0
   45c1c:	rsb	r0, r0, r0, lsl #4
   45c20:	lsl	r0, r0, #2
   45c24:	uxtb	r0, r0
   45c28:	mov	r1, #0
   45c2c:	str	r1, [fp, #-1036]	; 0xfffffbf4
   45c30:	str	r0, [fp, #-1040]	; 0xfffffbf0
   45c34:	b	46cec <__assert_fail@plt+0x34134>
   45c38:	ldr	r0, [fp, #-608]	; 0xfffffda0
   45c3c:	rsb	r0, r0, r0, lsl #4
   45c40:	lsl	r0, r0, #2
   45c44:	uxtb	r0, r0
   45c48:	mov	r1, #0
   45c4c:	str	r1, [fp, #-1036]	; 0xfffffbf4
   45c50:	str	r0, [fp, #-1040]	; 0xfffffbf0
   45c54:	b	46ba8 <__assert_fail@plt+0x33ff0>
   45c58:	b	46040 <__assert_fail@plt+0x33488>
   45c5c:	b	45c60 <__assert_fail@plt+0x330a8>
   45c60:	b	45d84 <__assert_fail@plt+0x331cc>
   45c64:	ldr	r0, [fp, #-604]	; 0xfffffda4
   45c68:	cmn	r0, #1
   45c6c:	bgt	45cd0 <__assert_fail@plt+0x33118>
   45c70:	b	45c74 <__assert_fail@plt+0x330bc>
   45c74:	b	45c78 <__assert_fail@plt+0x330c0>
   45c78:	ldr	r0, [fp, #-608]	; 0xfffffda0
   45c7c:	ldr	r1, [fp, #-604]	; 0xfffffda4
   45c80:	movw	r2, #546	; 0x222
   45c84:	subs	r0, r0, r2
   45c88:	sbcs	r1, r1, #0
   45c8c:	str	r0, [sp, #544]	; 0x220
   45c90:	str	r1, [sp, #540]	; 0x21c
   45c94:	blt	45e20 <__assert_fail@plt+0x33268>
   45c98:	b	45e40 <__assert_fail@plt+0x33288>
   45c9c:	ldr	r0, [fp, #-608]	; 0xfffffda0
   45ca0:	ldr	r1, [fp, #-604]	; 0xfffffda4
   45ca4:	mvn	r1, r1
   45ca8:	mvn	r0, r0
   45cac:	movw	r2, #64989	; 0xfddd
   45cb0:	movt	r2, #65535	; 0xffff
   45cb4:	subs	r0, r2, r0
   45cb8:	mvn	r2, #0
   45cbc:	sbcs	r1, r2, r1
   45cc0:	str	r0, [sp, #536]	; 0x218
   45cc4:	str	r1, [sp, #532]	; 0x214
   45cc8:	blt	45e20 <__assert_fail@plt+0x33268>
   45ccc:	b	45e40 <__assert_fail@plt+0x33288>
   45cd0:	b	45cd4 <__assert_fail@plt+0x3311c>
   45cd4:	b	45d58 <__assert_fail@plt+0x331a0>
   45cd8:	b	45d58 <__assert_fail@plt+0x331a0>
   45cdc:	b	45d58 <__assert_fail@plt+0x331a0>
   45ce0:	b	45ce4 <__assert_fail@plt+0x3312c>
   45ce4:	ldr	r0, [fp, #-608]	; 0xfffffda0
   45ce8:	ldr	r1, [fp, #-604]	; 0xfffffda4
   45cec:	subs	r0, r0, #32768	; 0x8000
   45cf0:	sbc	r1, r1, #0
   45cf4:	rsbs	r0, r0, #0
   45cf8:	rscs	r1, r1, #0
   45cfc:	str	r0, [sp, #528]	; 0x210
   45d00:	str	r1, [sp, #524]	; 0x20c
   45d04:	blt	45e20 <__assert_fail@plt+0x33268>
   45d08:	b	45e40 <__assert_fail@plt+0x33288>
   45d0c:	ldr	r0, [fp, #-608]	; 0xfffffda0
   45d10:	ldr	r1, [fp, #-604]	; 0xfffffda4
   45d14:	subs	r0, r0, #1
   45d18:	sbcs	r1, r1, #0
   45d1c:	str	r0, [sp, #520]	; 0x208
   45d20:	str	r1, [sp, #516]	; 0x204
   45d24:	blt	45e40 <__assert_fail@plt+0x33288>
   45d28:	b	45d2c <__assert_fail@plt+0x33174>
   45d2c:	ldr	r0, [fp, #-608]	; 0xfffffda0
   45d30:	ldr	r1, [fp, #-604]	; 0xfffffda4
   45d34:	subs	r0, r0, #1
   45d38:	sbc	r1, r1, #0
   45d3c:	movw	r2, #32767	; 0x7fff
   45d40:	subs	r0, r2, r0
   45d44:	rscs	r1, r1, #0
   45d48:	str	r0, [sp, #512]	; 0x200
   45d4c:	str	r1, [sp, #508]	; 0x1fc
   45d50:	blt	45e20 <__assert_fail@plt+0x33268>
   45d54:	b	45e40 <__assert_fail@plt+0x33288>
   45d58:	ldr	r0, [fp, #-608]	; 0xfffffda0
   45d5c:	ldr	r1, [fp, #-604]	; 0xfffffda4
   45d60:	movw	r2, #64990	; 0xfdde
   45d64:	movt	r2, #65535	; 0xffff
   45d68:	subs	r0, r2, r0
   45d6c:	mvn	r2, #0
   45d70:	sbcs	r1, r2, r1
   45d74:	str	r0, [sp, #504]	; 0x1f8
   45d78:	str	r1, [sp, #500]	; 0x1f4
   45d7c:	blt	45e20 <__assert_fail@plt+0x33268>
   45d80:	b	45e40 <__assert_fail@plt+0x33288>
   45d84:	b	45d8c <__assert_fail@plt+0x331d4>
   45d88:	b	45e40 <__assert_fail@plt+0x33288>
   45d8c:	ldr	r0, [fp, #-604]	; 0xfffffda4
   45d90:	cmn	r0, #1
   45d94:	bgt	45dfc <__assert_fail@plt+0x33244>
   45d98:	b	45d9c <__assert_fail@plt+0x331e4>
   45d9c:	b	45da0 <__assert_fail@plt+0x331e8>
   45da0:	b	45dcc <__assert_fail@plt+0x33214>
   45da4:	b	45dcc <__assert_fail@plt+0x33214>
   45da8:	ldr	r0, [fp, #-608]	; 0xfffffda0
   45dac:	ldr	r1, [fp, #-604]	; 0xfffffda4
   45db0:	and	r0, r0, r1
   45db4:	cmn	r0, #1
   45db8:	bne	45dcc <__assert_fail@plt+0x33214>
   45dbc:	b	45dc0 <__assert_fail@plt+0x33208>
   45dc0:	b	45dc4 <__assert_fail@plt+0x3320c>
   45dc4:	b	45e40 <__assert_fail@plt+0x33288>
   45dc8:	b	45e40 <__assert_fail@plt+0x33288>
   45dcc:	ldr	r2, [fp, #-608]	; 0xfffffda0
   45dd0:	ldr	r3, [fp, #-604]	; 0xfffffda4
   45dd4:	movw	r0, #32768	; 0x8000
   45dd8:	movt	r0, #65535	; 0xffff
   45ddc:	mvn	r1, #0
   45de0:	bl	77780 <__assert_fail@plt+0x64bc8>
   45de4:	subs	r0, r0, #60	; 0x3c
   45de8:	sbcs	r1, r1, #0
   45dec:	str	r0, [sp, #496]	; 0x1f0
   45df0:	str	r1, [sp, #492]	; 0x1ec
   45df4:	blt	45e20 <__assert_fail@plt+0x33268>
   45df8:	b	45e40 <__assert_fail@plt+0x33288>
   45dfc:	ldr	r0, [fp, #-608]	; 0xfffffda0
   45e00:	ldr	r1, [fp, #-604]	; 0xfffffda4
   45e04:	movw	r2, #547	; 0x223
   45e08:	subs	r0, r0, r2
   45e0c:	sbcs	r1, r1, #0
   45e10:	str	r0, [sp, #488]	; 0x1e8
   45e14:	str	r1, [sp, #484]	; 0x1e4
   45e18:	blt	45e40 <__assert_fail@plt+0x33288>
   45e1c:	b	45e20 <__assert_fail@plt+0x33268>
   45e20:	ldr	r0, [fp, #-608]	; 0xfffffda0
   45e24:	rsb	r0, r0, r0, lsl #4
   45e28:	lsl	r0, r0, #2
   45e2c:	sxth	r0, r0
   45e30:	asr	r1, r0, #31
   45e34:	str	r0, [fp, #-1040]	; 0xfffffbf0
   45e38:	str	r1, [fp, #-1036]	; 0xfffffbf4
   45e3c:	b	46cec <__assert_fail@plt+0x34134>
   45e40:	ldr	r0, [fp, #-608]	; 0xfffffda0
   45e44:	rsb	r0, r0, r0, lsl #4
   45e48:	lsl	r0, r0, #2
   45e4c:	sxth	r0, r0
   45e50:	asr	r1, r0, #31
   45e54:	str	r0, [fp, #-1040]	; 0xfffffbf0
   45e58:	str	r1, [fp, #-1036]	; 0xfffffbf4
   45e5c:	b	46ba8 <__assert_fail@plt+0x33ff0>
   45e60:	b	45f64 <__assert_fail@plt+0x333ac>
   45e64:	ldr	r0, [fp, #-604]	; 0xfffffda4
   45e68:	cmn	r0, #1
   45e6c:	bgt	45ed0 <__assert_fail@plt+0x33318>
   45e70:	b	45e74 <__assert_fail@plt+0x332bc>
   45e74:	b	45e78 <__assert_fail@plt+0x332c0>
   45e78:	ldr	r0, [fp, #-608]	; 0xfffffda0
   45e7c:	ldr	r1, [fp, #-604]	; 0xfffffda4
   45e80:	movw	r2, #1092	; 0x444
   45e84:	subs	r0, r0, r2
   45e88:	sbcs	r1, r1, #0
   45e8c:	str	r0, [sp, #480]	; 0x1e0
   45e90:	str	r1, [sp, #476]	; 0x1dc
   45e94:	blt	46000 <__assert_fail@plt+0x33448>
   45e98:	b	46020 <__assert_fail@plt+0x33468>
   45e9c:	ldr	r0, [fp, #-608]	; 0xfffffda0
   45ea0:	ldr	r1, [fp, #-604]	; 0xfffffda4
   45ea4:	mvn	r1, r1
   45ea8:	mvn	r0, r0
   45eac:	movw	r2, #64443	; 0xfbbb
   45eb0:	movt	r2, #65535	; 0xffff
   45eb4:	subs	r0, r2, r0
   45eb8:	mvn	r2, #0
   45ebc:	sbcs	r1, r2, r1
   45ec0:	str	r0, [sp, #472]	; 0x1d8
   45ec4:	str	r1, [sp, #468]	; 0x1d4
   45ec8:	blt	46000 <__assert_fail@plt+0x33448>
   45ecc:	b	46020 <__assert_fail@plt+0x33468>
   45ed0:	b	45ed4 <__assert_fail@plt+0x3331c>
   45ed4:	b	45f44 <__assert_fail@plt+0x3338c>
   45ed8:	b	45f44 <__assert_fail@plt+0x3338c>
   45edc:	b	45f44 <__assert_fail@plt+0x3338c>
   45ee0:	b	45ee4 <__assert_fail@plt+0x3332c>
   45ee4:	ldr	r0, [fp, #-608]	; 0xfffffda0
   45ee8:	ldr	r1, [fp, #-604]	; 0xfffffda4
   45eec:	rsbs	r0, r0, #0
   45ef0:	rscs	r1, r1, #0
   45ef4:	str	r0, [sp, #464]	; 0x1d0
   45ef8:	str	r1, [sp, #460]	; 0x1cc
   45efc:	blt	46000 <__assert_fail@plt+0x33448>
   45f00:	b	46020 <__assert_fail@plt+0x33468>
   45f04:	ldr	r0, [fp, #-608]	; 0xfffffda0
   45f08:	ldr	r1, [fp, #-604]	; 0xfffffda4
   45f0c:	subs	r0, r0, #1
   45f10:	sbcs	r1, r1, #0
   45f14:	str	r0, [sp, #456]	; 0x1c8
   45f18:	str	r1, [sp, #452]	; 0x1c4
   45f1c:	blt	46020 <__assert_fail@plt+0x33468>
   45f20:	b	45f24 <__assert_fail@plt+0x3336c>
   45f24:	ldr	r0, [fp, #-608]	; 0xfffffda0
   45f28:	ldr	r1, [fp, #-604]	; 0xfffffda4
   45f2c:	subs	r0, r0, #1
   45f30:	sbc	r1, r1, #0
   45f34:	cmn	r1, #1
   45f38:	str	r0, [sp, #448]	; 0x1c0
   45f3c:	bgt	46000 <__assert_fail@plt+0x33448>
   45f40:	b	46020 <__assert_fail@plt+0x33468>
   45f44:	ldr	r0, [fp, #-608]	; 0xfffffda0
   45f48:	ldr	r1, [fp, #-604]	; 0xfffffda4
   45f4c:	rsbs	r0, r0, #0
   45f50:	rscs	r1, r1, #0
   45f54:	str	r0, [sp, #444]	; 0x1bc
   45f58:	str	r1, [sp, #440]	; 0x1b8
   45f5c:	blt	46000 <__assert_fail@plt+0x33448>
   45f60:	b	46020 <__assert_fail@plt+0x33468>
   45f64:	b	45f6c <__assert_fail@plt+0x333b4>
   45f68:	b	46020 <__assert_fail@plt+0x33468>
   45f6c:	ldr	r0, [fp, #-604]	; 0xfffffda4
   45f70:	cmn	r0, #1
   45f74:	bgt	45fdc <__assert_fail@plt+0x33424>
   45f78:	b	45f7c <__assert_fail@plt+0x333c4>
   45f7c:	b	45f80 <__assert_fail@plt+0x333c8>
   45f80:	b	45fac <__assert_fail@plt+0x333f4>
   45f84:	b	45fac <__assert_fail@plt+0x333f4>
   45f88:	ldr	r0, [fp, #-608]	; 0xfffffda0
   45f8c:	ldr	r1, [fp, #-604]	; 0xfffffda4
   45f90:	and	r0, r0, r1
   45f94:	cmn	r0, #1
   45f98:	bne	45fac <__assert_fail@plt+0x333f4>
   45f9c:	b	45fa0 <__assert_fail@plt+0x333e8>
   45fa0:	b	45fa4 <__assert_fail@plt+0x333ec>
   45fa4:	b	46000 <__assert_fail@plt+0x33448>
   45fa8:	b	46000 <__assert_fail@plt+0x33448>
   45fac:	ldr	r2, [fp, #-608]	; 0xfffffda0
   45fb0:	ldr	r3, [fp, #-604]	; 0xfffffda4
   45fb4:	mov	r0, #0
   45fb8:	str	r0, [sp, #436]	; 0x1b4
   45fbc:	ldr	r1, [sp, #436]	; 0x1b4
   45fc0:	bl	77780 <__assert_fail@plt+0x64bc8>
   45fc4:	subs	r0, r0, #60	; 0x3c
   45fc8:	sbcs	r1, r1, #0
   45fcc:	str	r0, [sp, #432]	; 0x1b0
   45fd0:	str	r1, [sp, #428]	; 0x1ac
   45fd4:	blt	46000 <__assert_fail@plt+0x33448>
   45fd8:	b	46020 <__assert_fail@plt+0x33468>
   45fdc:	ldr	r0, [fp, #-608]	; 0xfffffda0
   45fe0:	ldr	r1, [fp, #-604]	; 0xfffffda4
   45fe4:	movw	r2, #1093	; 0x445
   45fe8:	subs	r0, r0, r2
   45fec:	sbcs	r1, r1, #0
   45ff0:	str	r0, [sp, #424]	; 0x1a8
   45ff4:	str	r1, [sp, #420]	; 0x1a4
   45ff8:	blt	46020 <__assert_fail@plt+0x33468>
   45ffc:	b	46000 <__assert_fail@plt+0x33448>
   46000:	ldr	r0, [fp, #-608]	; 0xfffffda0
   46004:	rsb	r0, r0, r0, lsl #4
   46008:	lsl	r0, r0, #2
   4600c:	uxth	r0, r0
   46010:	mov	r1, #0
   46014:	str	r1, [fp, #-1036]	; 0xfffffbf4
   46018:	str	r0, [fp, #-1040]	; 0xfffffbf0
   4601c:	b	46cec <__assert_fail@plt+0x34134>
   46020:	ldr	r0, [fp, #-608]	; 0xfffffda0
   46024:	rsb	r0, r0, r0, lsl #4
   46028:	lsl	r0, r0, #2
   4602c:	uxth	r0, r0
   46030:	mov	r1, #0
   46034:	str	r1, [fp, #-1036]	; 0xfffffbf4
   46038:	str	r0, [fp, #-1040]	; 0xfffffbf0
   4603c:	b	46ba8 <__assert_fail@plt+0x33ff0>
   46040:	b	4640c <__assert_fail@plt+0x33854>
   46044:	b	46048 <__assert_fail@plt+0x33490>
   46048:	b	46164 <__assert_fail@plt+0x335ac>
   4604c:	ldr	r0, [fp, #-604]	; 0xfffffda4
   46050:	cmn	r0, #1
   46054:	bgt	460bc <__assert_fail@plt+0x33504>
   46058:	b	4605c <__assert_fail@plt+0x334a4>
   4605c:	b	46060 <__assert_fail@plt+0x334a8>
   46060:	ldr	r0, [fp, #-608]	; 0xfffffda0
   46064:	ldr	r1, [fp, #-604]	; 0xfffffda4
   46068:	movw	r2, #8738	; 0x2222
   4606c:	movt	r2, #546	; 0x222
   46070:	subs	r0, r0, r2
   46074:	sbcs	r1, r1, #0
   46078:	str	r0, [sp, #416]	; 0x1a0
   4607c:	str	r1, [sp, #412]	; 0x19c
   46080:	blt	46200 <__assert_fail@plt+0x33648>
   46084:	b	4621c <__assert_fail@plt+0x33664>
   46088:	ldr	r0, [fp, #-608]	; 0xfffffda0
   4608c:	ldr	r1, [fp, #-604]	; 0xfffffda4
   46090:	mvn	r1, r1
   46094:	mvn	r0, r0
   46098:	movw	r2, #56797	; 0xdddd
   4609c:	movt	r2, #64989	; 0xfddd
   460a0:	subs	r0, r2, r0
   460a4:	mvn	r2, #0
   460a8:	sbcs	r1, r2, r1
   460ac:	str	r0, [sp, #408]	; 0x198
   460b0:	str	r1, [sp, #404]	; 0x194
   460b4:	blt	46200 <__assert_fail@plt+0x33648>
   460b8:	b	4621c <__assert_fail@plt+0x33664>
   460bc:	b	46138 <__assert_fail@plt+0x33580>
   460c0:	b	460c4 <__assert_fail@plt+0x3350c>
   460c4:	ldr	r0, [fp, #-608]	; 0xfffffda0
   460c8:	ldr	r1, [fp, #-604]	; 0xfffffda4
   460cc:	adds	r0, r0, #-2147483648	; 0x80000000
   460d0:	sbc	r1, r1, #0
   460d4:	rsbs	r0, r0, #0
   460d8:	rscs	r1, r1, #0
   460dc:	str	r0, [sp, #400]	; 0x190
   460e0:	str	r1, [sp, #396]	; 0x18c
   460e4:	blt	46200 <__assert_fail@plt+0x33648>
   460e8:	b	4621c <__assert_fail@plt+0x33664>
   460ec:	ldr	r0, [fp, #-608]	; 0xfffffda0
   460f0:	ldr	r1, [fp, #-604]	; 0xfffffda4
   460f4:	subs	r0, r0, #1
   460f8:	sbcs	r1, r1, #0
   460fc:	str	r0, [sp, #392]	; 0x188
   46100:	str	r1, [sp, #388]	; 0x184
   46104:	blt	4621c <__assert_fail@plt+0x33664>
   46108:	b	4610c <__assert_fail@plt+0x33554>
   4610c:	ldr	r0, [fp, #-608]	; 0xfffffda0
   46110:	ldr	r1, [fp, #-604]	; 0xfffffda4
   46114:	subs	r0, r0, #1
   46118:	sbc	r1, r1, #0
   4611c:	mvn	r2, #-2147483648	; 0x80000000
   46120:	subs	r0, r2, r0
   46124:	rscs	r1, r1, #0
   46128:	str	r0, [sp, #384]	; 0x180
   4612c:	str	r1, [sp, #380]	; 0x17c
   46130:	blt	46200 <__assert_fail@plt+0x33648>
   46134:	b	4621c <__assert_fail@plt+0x33664>
   46138:	ldr	r0, [fp, #-608]	; 0xfffffda0
   4613c:	ldr	r1, [fp, #-604]	; 0xfffffda4
   46140:	movw	r2, #56798	; 0xddde
   46144:	movt	r2, #64989	; 0xfddd
   46148:	subs	r0, r2, r0
   4614c:	mvn	r2, #0
   46150:	sbcs	r1, r2, r1
   46154:	str	r0, [sp, #376]	; 0x178
   46158:	str	r1, [sp, #372]	; 0x174
   4615c:	blt	46200 <__assert_fail@plt+0x33648>
   46160:	b	4621c <__assert_fail@plt+0x33664>
   46164:	b	4616c <__assert_fail@plt+0x335b4>
   46168:	b	4621c <__assert_fail@plt+0x33664>
   4616c:	ldr	r0, [fp, #-604]	; 0xfffffda4
   46170:	cmn	r0, #1
   46174:	bgt	461d8 <__assert_fail@plt+0x33620>
   46178:	b	4617c <__assert_fail@plt+0x335c4>
   4617c:	b	46180 <__assert_fail@plt+0x335c8>
   46180:	b	461ac <__assert_fail@plt+0x335f4>
   46184:	b	461ac <__assert_fail@plt+0x335f4>
   46188:	ldr	r0, [fp, #-608]	; 0xfffffda0
   4618c:	ldr	r1, [fp, #-604]	; 0xfffffda4
   46190:	and	r0, r0, r1
   46194:	cmn	r0, #1
   46198:	bne	461ac <__assert_fail@plt+0x335f4>
   4619c:	b	461a0 <__assert_fail@plt+0x335e8>
   461a0:	b	461a4 <__assert_fail@plt+0x335ec>
   461a4:	b	4621c <__assert_fail@plt+0x33664>
   461a8:	b	4621c <__assert_fail@plt+0x33664>
   461ac:	ldr	r2, [fp, #-608]	; 0xfffffda0
   461b0:	ldr	r3, [fp, #-604]	; 0xfffffda4
   461b4:	mov	r0, #-2147483648	; 0x80000000
   461b8:	mvn	r1, #0
   461bc:	bl	77780 <__assert_fail@plt+0x64bc8>
   461c0:	subs	r0, r0, #60	; 0x3c
   461c4:	sbcs	r1, r1, #0
   461c8:	str	r0, [sp, #368]	; 0x170
   461cc:	str	r1, [sp, #364]	; 0x16c
   461d0:	blt	46200 <__assert_fail@plt+0x33648>
   461d4:	b	4621c <__assert_fail@plt+0x33664>
   461d8:	ldr	r0, [fp, #-608]	; 0xfffffda0
   461dc:	ldr	r1, [fp, #-604]	; 0xfffffda4
   461e0:	movw	r2, #8739	; 0x2223
   461e4:	movt	r2, #546	; 0x222
   461e8:	subs	r0, r0, r2
   461ec:	sbcs	r1, r1, #0
   461f0:	str	r0, [sp, #360]	; 0x168
   461f4:	str	r1, [sp, #356]	; 0x164
   461f8:	blt	4621c <__assert_fail@plt+0x33664>
   461fc:	b	46200 <__assert_fail@plt+0x33648>
   46200:	ldr	r0, [fp, #-608]	; 0xfffffda0
   46204:	rsb	r0, r0, r0, lsl #4
   46208:	lsl	r1, r0, #2
   4620c:	sbfx	r0, r0, #29, #1
   46210:	str	r0, [fp, #-1036]	; 0xfffffbf4
   46214:	str	r1, [fp, #-1040]	; 0xfffffbf0
   46218:	b	46cec <__assert_fail@plt+0x34134>
   4621c:	ldr	r0, [fp, #-608]	; 0xfffffda0
   46220:	rsb	r0, r0, r0, lsl #4
   46224:	lsl	r1, r0, #2
   46228:	sbfx	r0, r0, #29, #1
   4622c:	str	r0, [fp, #-1036]	; 0xfffffbf4
   46230:	str	r1, [fp, #-1040]	; 0xfffffbf0
   46234:	b	46ba8 <__assert_fail@plt+0x33ff0>
   46238:	b	46334 <__assert_fail@plt+0x3377c>
   4623c:	ldr	r0, [fp, #-604]	; 0xfffffda4
   46240:	cmn	r0, #1
   46244:	bgt	462a0 <__assert_fail@plt+0x336e8>
   46248:	b	4624c <__assert_fail@plt+0x33694>
   4624c:	b	46278 <__assert_fail@plt+0x336c0>
   46250:	ldr	r0, [fp, #-608]	; 0xfffffda0
   46254:	ldr	r1, [fp, #-604]	; 0xfffffda4
   46258:	movw	r2, #17476	; 0x4444
   4625c:	movt	r2, #1092	; 0x444
   46260:	subs	r0, r0, r2
   46264:	sbcs	r1, r1, #0
   46268:	str	r0, [sp, #352]	; 0x160
   4626c:	str	r1, [sp, #348]	; 0x15c
   46270:	blt	463d4 <__assert_fail@plt+0x3381c>
   46274:	b	463f0 <__assert_fail@plt+0x33838>
   46278:	ldr	r0, [fp, #-608]	; 0xfffffda0
   4627c:	ldr	r1, [fp, #-604]	; 0xfffffda4
   46280:	mvn	r1, r1
   46284:	mvn	r0, r0
   46288:	rsbs	r0, r0, #0
   4628c:	rscs	r1, r1, #0
   46290:	str	r0, [sp, #344]	; 0x158
   46294:	str	r1, [sp, #340]	; 0x154
   46298:	blt	463d4 <__assert_fail@plt+0x3381c>
   4629c:	b	463f0 <__assert_fail@plt+0x33838>
   462a0:	b	462a4 <__assert_fail@plt+0x336ec>
   462a4:	b	46314 <__assert_fail@plt+0x3375c>
   462a8:	b	46314 <__assert_fail@plt+0x3375c>
   462ac:	b	46314 <__assert_fail@plt+0x3375c>
   462b0:	b	462b4 <__assert_fail@plt+0x336fc>
   462b4:	ldr	r0, [fp, #-608]	; 0xfffffda0
   462b8:	ldr	r1, [fp, #-604]	; 0xfffffda4
   462bc:	rsbs	r0, r0, #0
   462c0:	rscs	r1, r1, #0
   462c4:	str	r0, [sp, #336]	; 0x150
   462c8:	str	r1, [sp, #332]	; 0x14c
   462cc:	blt	463d4 <__assert_fail@plt+0x3381c>
   462d0:	b	463f0 <__assert_fail@plt+0x33838>
   462d4:	ldr	r0, [fp, #-608]	; 0xfffffda0
   462d8:	ldr	r1, [fp, #-604]	; 0xfffffda4
   462dc:	subs	r0, r0, #1
   462e0:	sbcs	r1, r1, #0
   462e4:	str	r0, [sp, #328]	; 0x148
   462e8:	str	r1, [sp, #324]	; 0x144
   462ec:	blt	463f0 <__assert_fail@plt+0x33838>
   462f0:	b	462f4 <__assert_fail@plt+0x3373c>
   462f4:	ldr	r0, [fp, #-608]	; 0xfffffda0
   462f8:	ldr	r1, [fp, #-604]	; 0xfffffda4
   462fc:	subs	r0, r0, #1
   46300:	sbc	r1, r1, #0
   46304:	cmn	r1, #1
   46308:	str	r0, [sp, #320]	; 0x140
   4630c:	bgt	463d4 <__assert_fail@plt+0x3381c>
   46310:	b	463f0 <__assert_fail@plt+0x33838>
   46314:	ldr	r0, [fp, #-608]	; 0xfffffda0
   46318:	ldr	r1, [fp, #-604]	; 0xfffffda4
   4631c:	rsbs	r0, r0, #0
   46320:	rscs	r1, r1, #0
   46324:	str	r0, [sp, #316]	; 0x13c
   46328:	str	r1, [sp, #312]	; 0x138
   4632c:	blt	463d4 <__assert_fail@plt+0x3381c>
   46330:	b	463f0 <__assert_fail@plt+0x33838>
   46334:	b	4633c <__assert_fail@plt+0x33784>
   46338:	b	463f0 <__assert_fail@plt+0x33838>
   4633c:	ldr	r0, [fp, #-604]	; 0xfffffda4
   46340:	cmn	r0, #1
   46344:	bgt	463ac <__assert_fail@plt+0x337f4>
   46348:	b	4634c <__assert_fail@plt+0x33794>
   4634c:	b	46350 <__assert_fail@plt+0x33798>
   46350:	b	4637c <__assert_fail@plt+0x337c4>
   46354:	b	4637c <__assert_fail@plt+0x337c4>
   46358:	ldr	r0, [fp, #-608]	; 0xfffffda0
   4635c:	ldr	r1, [fp, #-604]	; 0xfffffda4
   46360:	and	r0, r0, r1
   46364:	cmn	r0, #1
   46368:	bne	4637c <__assert_fail@plt+0x337c4>
   4636c:	b	46370 <__assert_fail@plt+0x337b8>
   46370:	b	46374 <__assert_fail@plt+0x337bc>
   46374:	b	463d4 <__assert_fail@plt+0x3381c>
   46378:	b	463d4 <__assert_fail@plt+0x3381c>
   4637c:	ldr	r2, [fp, #-608]	; 0xfffffda0
   46380:	ldr	r3, [fp, #-604]	; 0xfffffda4
   46384:	mov	r0, #0
   46388:	str	r0, [sp, #308]	; 0x134
   4638c:	ldr	r1, [sp, #308]	; 0x134
   46390:	bl	77780 <__assert_fail@plt+0x64bc8>
   46394:	subs	r0, r0, #60	; 0x3c
   46398:	sbcs	r1, r1, #0
   4639c:	str	r0, [sp, #304]	; 0x130
   463a0:	str	r1, [sp, #300]	; 0x12c
   463a4:	blt	463d4 <__assert_fail@plt+0x3381c>
   463a8:	b	463f0 <__assert_fail@plt+0x33838>
   463ac:	ldr	r0, [fp, #-608]	; 0xfffffda0
   463b0:	ldr	r1, [fp, #-604]	; 0xfffffda4
   463b4:	movw	r2, #17477	; 0x4445
   463b8:	movt	r2, #1092	; 0x444
   463bc:	subs	r0, r0, r2
   463c0:	sbcs	r1, r1, #0
   463c4:	str	r0, [sp, #296]	; 0x128
   463c8:	str	r1, [sp, #292]	; 0x124
   463cc:	blt	463f0 <__assert_fail@plt+0x33838>
   463d0:	b	463d4 <__assert_fail@plt+0x3381c>
   463d4:	ldr	r0, [fp, #-608]	; 0xfffffda0
   463d8:	rsb	r0, r0, r0, lsl #4
   463dc:	lsl	r0, r0, #2
   463e0:	mov	r1, #0
   463e4:	str	r1, [fp, #-1036]	; 0xfffffbf4
   463e8:	str	r0, [fp, #-1040]	; 0xfffffbf0
   463ec:	b	46cec <__assert_fail@plt+0x34134>
   463f0:	ldr	r0, [fp, #-608]	; 0xfffffda0
   463f4:	rsb	r0, r0, r0, lsl #4
   463f8:	lsl	r0, r0, #2
   463fc:	mov	r1, #0
   46400:	str	r1, [fp, #-1036]	; 0xfffffbf4
   46404:	str	r0, [fp, #-1040]	; 0xfffffbf0
   46408:	b	46ba8 <__assert_fail@plt+0x33ff0>
   4640c:	b	467d8 <__assert_fail@plt+0x33c20>
   46410:	b	46414 <__assert_fail@plt+0x3385c>
   46414:	b	46530 <__assert_fail@plt+0x33978>
   46418:	ldr	r0, [fp, #-604]	; 0xfffffda4
   4641c:	cmn	r0, #1
   46420:	bgt	46488 <__assert_fail@plt+0x338d0>
   46424:	b	46428 <__assert_fail@plt+0x33870>
   46428:	b	4642c <__assert_fail@plt+0x33874>
   4642c:	ldr	r0, [fp, #-608]	; 0xfffffda0
   46430:	ldr	r1, [fp, #-604]	; 0xfffffda4
   46434:	movw	r2, #8738	; 0x2222
   46438:	movt	r2, #546	; 0x222
   4643c:	subs	r0, r0, r2
   46440:	sbcs	r1, r1, #0
   46444:	str	r0, [sp, #288]	; 0x120
   46448:	str	r1, [sp, #284]	; 0x11c
   4644c:	blt	465cc <__assert_fail@plt+0x33a14>
   46450:	b	465e8 <__assert_fail@plt+0x33a30>
   46454:	ldr	r0, [fp, #-608]	; 0xfffffda0
   46458:	ldr	r1, [fp, #-604]	; 0xfffffda4
   4645c:	mvn	r1, r1
   46460:	mvn	r0, r0
   46464:	movw	r2, #56797	; 0xdddd
   46468:	movt	r2, #64989	; 0xfddd
   4646c:	subs	r0, r2, r0
   46470:	mvn	r2, #0
   46474:	sbcs	r1, r2, r1
   46478:	str	r0, [sp, #280]	; 0x118
   4647c:	str	r1, [sp, #276]	; 0x114
   46480:	blt	465cc <__assert_fail@plt+0x33a14>
   46484:	b	465e8 <__assert_fail@plt+0x33a30>
   46488:	b	46504 <__assert_fail@plt+0x3394c>
   4648c:	b	46490 <__assert_fail@plt+0x338d8>
   46490:	ldr	r0, [fp, #-608]	; 0xfffffda0
   46494:	ldr	r1, [fp, #-604]	; 0xfffffda4
   46498:	adds	r0, r0, #-2147483648	; 0x80000000
   4649c:	sbc	r1, r1, #0
   464a0:	rsbs	r0, r0, #0
   464a4:	rscs	r1, r1, #0
   464a8:	str	r0, [sp, #272]	; 0x110
   464ac:	str	r1, [sp, #268]	; 0x10c
   464b0:	blt	465cc <__assert_fail@plt+0x33a14>
   464b4:	b	465e8 <__assert_fail@plt+0x33a30>
   464b8:	ldr	r0, [fp, #-608]	; 0xfffffda0
   464bc:	ldr	r1, [fp, #-604]	; 0xfffffda4
   464c0:	subs	r0, r0, #1
   464c4:	sbcs	r1, r1, #0
   464c8:	str	r0, [sp, #264]	; 0x108
   464cc:	str	r1, [sp, #260]	; 0x104
   464d0:	blt	465e8 <__assert_fail@plt+0x33a30>
   464d4:	b	464d8 <__assert_fail@plt+0x33920>
   464d8:	ldr	r0, [fp, #-608]	; 0xfffffda0
   464dc:	ldr	r1, [fp, #-604]	; 0xfffffda4
   464e0:	subs	r0, r0, #1
   464e4:	sbc	r1, r1, #0
   464e8:	mvn	r2, #-2147483648	; 0x80000000
   464ec:	subs	r0, r2, r0
   464f0:	rscs	r1, r1, #0
   464f4:	str	r0, [sp, #256]	; 0x100
   464f8:	str	r1, [sp, #252]	; 0xfc
   464fc:	blt	465cc <__assert_fail@plt+0x33a14>
   46500:	b	465e8 <__assert_fail@plt+0x33a30>
   46504:	ldr	r0, [fp, #-608]	; 0xfffffda0
   46508:	ldr	r1, [fp, #-604]	; 0xfffffda4
   4650c:	movw	r2, #56798	; 0xddde
   46510:	movt	r2, #64989	; 0xfddd
   46514:	subs	r0, r2, r0
   46518:	mvn	r2, #0
   4651c:	sbcs	r1, r2, r1
   46520:	str	r0, [sp, #248]	; 0xf8
   46524:	str	r1, [sp, #244]	; 0xf4
   46528:	blt	465cc <__assert_fail@plt+0x33a14>
   4652c:	b	465e8 <__assert_fail@plt+0x33a30>
   46530:	b	46538 <__assert_fail@plt+0x33980>
   46534:	b	465e8 <__assert_fail@plt+0x33a30>
   46538:	ldr	r0, [fp, #-604]	; 0xfffffda4
   4653c:	cmn	r0, #1
   46540:	bgt	465a4 <__assert_fail@plt+0x339ec>
   46544:	b	46548 <__assert_fail@plt+0x33990>
   46548:	b	4654c <__assert_fail@plt+0x33994>
   4654c:	b	46578 <__assert_fail@plt+0x339c0>
   46550:	b	46578 <__assert_fail@plt+0x339c0>
   46554:	ldr	r0, [fp, #-608]	; 0xfffffda0
   46558:	ldr	r1, [fp, #-604]	; 0xfffffda4
   4655c:	and	r0, r0, r1
   46560:	cmn	r0, #1
   46564:	bne	46578 <__assert_fail@plt+0x339c0>
   46568:	b	4656c <__assert_fail@plt+0x339b4>
   4656c:	b	46570 <__assert_fail@plt+0x339b8>
   46570:	b	465e8 <__assert_fail@plt+0x33a30>
   46574:	b	465e8 <__assert_fail@plt+0x33a30>
   46578:	ldr	r2, [fp, #-608]	; 0xfffffda0
   4657c:	ldr	r3, [fp, #-604]	; 0xfffffda4
   46580:	mov	r0, #-2147483648	; 0x80000000
   46584:	mvn	r1, #0
   46588:	bl	77780 <__assert_fail@plt+0x64bc8>
   4658c:	subs	r0, r0, #60	; 0x3c
   46590:	sbcs	r1, r1, #0
   46594:	str	r0, [sp, #240]	; 0xf0
   46598:	str	r1, [sp, #236]	; 0xec
   4659c:	blt	465cc <__assert_fail@plt+0x33a14>
   465a0:	b	465e8 <__assert_fail@plt+0x33a30>
   465a4:	ldr	r0, [fp, #-608]	; 0xfffffda0
   465a8:	ldr	r1, [fp, #-604]	; 0xfffffda4
   465ac:	movw	r2, #8739	; 0x2223
   465b0:	movt	r2, #546	; 0x222
   465b4:	subs	r0, r0, r2
   465b8:	sbcs	r1, r1, #0
   465bc:	str	r0, [sp, #232]	; 0xe8
   465c0:	str	r1, [sp, #228]	; 0xe4
   465c4:	blt	465e8 <__assert_fail@plt+0x33a30>
   465c8:	b	465cc <__assert_fail@plt+0x33a14>
   465cc:	ldr	r0, [fp, #-608]	; 0xfffffda0
   465d0:	rsb	r0, r0, r0, lsl #4
   465d4:	lsl	r1, r0, #2
   465d8:	sbfx	r0, r0, #29, #1
   465dc:	str	r0, [fp, #-1036]	; 0xfffffbf4
   465e0:	str	r1, [fp, #-1040]	; 0xfffffbf0
   465e4:	b	46cec <__assert_fail@plt+0x34134>
   465e8:	ldr	r0, [fp, #-608]	; 0xfffffda0
   465ec:	rsb	r0, r0, r0, lsl #4
   465f0:	lsl	r1, r0, #2
   465f4:	sbfx	r0, r0, #29, #1
   465f8:	str	r0, [fp, #-1036]	; 0xfffffbf4
   465fc:	str	r1, [fp, #-1040]	; 0xfffffbf0
   46600:	b	46ba8 <__assert_fail@plt+0x33ff0>
   46604:	b	46700 <__assert_fail@plt+0x33b48>
   46608:	ldr	r0, [fp, #-604]	; 0xfffffda4
   4660c:	cmn	r0, #1
   46610:	bgt	4666c <__assert_fail@plt+0x33ab4>
   46614:	b	46618 <__assert_fail@plt+0x33a60>
   46618:	b	46644 <__assert_fail@plt+0x33a8c>
   4661c:	ldr	r0, [fp, #-608]	; 0xfffffda0
   46620:	ldr	r1, [fp, #-604]	; 0xfffffda4
   46624:	movw	r2, #17476	; 0x4444
   46628:	movt	r2, #1092	; 0x444
   4662c:	subs	r0, r0, r2
   46630:	sbcs	r1, r1, #0
   46634:	str	r0, [sp, #224]	; 0xe0
   46638:	str	r1, [sp, #220]	; 0xdc
   4663c:	blt	467a0 <__assert_fail@plt+0x33be8>
   46640:	b	467bc <__assert_fail@plt+0x33c04>
   46644:	ldr	r0, [fp, #-608]	; 0xfffffda0
   46648:	ldr	r1, [fp, #-604]	; 0xfffffda4
   4664c:	mvn	r1, r1
   46650:	mvn	r0, r0
   46654:	rsbs	r0, r0, #0
   46658:	rscs	r1, r1, #0
   4665c:	str	r0, [sp, #216]	; 0xd8
   46660:	str	r1, [sp, #212]	; 0xd4
   46664:	blt	467a0 <__assert_fail@plt+0x33be8>
   46668:	b	467bc <__assert_fail@plt+0x33c04>
   4666c:	b	46670 <__assert_fail@plt+0x33ab8>
   46670:	b	466e0 <__assert_fail@plt+0x33b28>
   46674:	b	466e0 <__assert_fail@plt+0x33b28>
   46678:	b	466e0 <__assert_fail@plt+0x33b28>
   4667c:	b	46680 <__assert_fail@plt+0x33ac8>
   46680:	ldr	r0, [fp, #-608]	; 0xfffffda0
   46684:	ldr	r1, [fp, #-604]	; 0xfffffda4
   46688:	rsbs	r0, r0, #0
   4668c:	rscs	r1, r1, #0
   46690:	str	r0, [sp, #208]	; 0xd0
   46694:	str	r1, [sp, #204]	; 0xcc
   46698:	blt	467a0 <__assert_fail@plt+0x33be8>
   4669c:	b	467bc <__assert_fail@plt+0x33c04>
   466a0:	ldr	r0, [fp, #-608]	; 0xfffffda0
   466a4:	ldr	r1, [fp, #-604]	; 0xfffffda4
   466a8:	subs	r0, r0, #1
   466ac:	sbcs	r1, r1, #0
   466b0:	str	r0, [sp, #200]	; 0xc8
   466b4:	str	r1, [sp, #196]	; 0xc4
   466b8:	blt	467bc <__assert_fail@plt+0x33c04>
   466bc:	b	466c0 <__assert_fail@plt+0x33b08>
   466c0:	ldr	r0, [fp, #-608]	; 0xfffffda0
   466c4:	ldr	r1, [fp, #-604]	; 0xfffffda4
   466c8:	subs	r0, r0, #1
   466cc:	sbc	r1, r1, #0
   466d0:	cmn	r1, #1
   466d4:	str	r0, [sp, #192]	; 0xc0
   466d8:	bgt	467a0 <__assert_fail@plt+0x33be8>
   466dc:	b	467bc <__assert_fail@plt+0x33c04>
   466e0:	ldr	r0, [fp, #-608]	; 0xfffffda0
   466e4:	ldr	r1, [fp, #-604]	; 0xfffffda4
   466e8:	rsbs	r0, r0, #0
   466ec:	rscs	r1, r1, #0
   466f0:	str	r0, [sp, #188]	; 0xbc
   466f4:	str	r1, [sp, #184]	; 0xb8
   466f8:	blt	467a0 <__assert_fail@plt+0x33be8>
   466fc:	b	467bc <__assert_fail@plt+0x33c04>
   46700:	b	46708 <__assert_fail@plt+0x33b50>
   46704:	b	467bc <__assert_fail@plt+0x33c04>
   46708:	ldr	r0, [fp, #-604]	; 0xfffffda4
   4670c:	cmn	r0, #1
   46710:	bgt	46778 <__assert_fail@plt+0x33bc0>
   46714:	b	46718 <__assert_fail@plt+0x33b60>
   46718:	b	4671c <__assert_fail@plt+0x33b64>
   4671c:	b	46748 <__assert_fail@plt+0x33b90>
   46720:	b	46748 <__assert_fail@plt+0x33b90>
   46724:	ldr	r0, [fp, #-608]	; 0xfffffda0
   46728:	ldr	r1, [fp, #-604]	; 0xfffffda4
   4672c:	and	r0, r0, r1
   46730:	cmn	r0, #1
   46734:	bne	46748 <__assert_fail@plt+0x33b90>
   46738:	b	4673c <__assert_fail@plt+0x33b84>
   4673c:	b	46740 <__assert_fail@plt+0x33b88>
   46740:	b	467a0 <__assert_fail@plt+0x33be8>
   46744:	b	467a0 <__assert_fail@plt+0x33be8>
   46748:	ldr	r2, [fp, #-608]	; 0xfffffda0
   4674c:	ldr	r3, [fp, #-604]	; 0xfffffda4
   46750:	mov	r0, #0
   46754:	str	r0, [sp, #180]	; 0xb4
   46758:	ldr	r1, [sp, #180]	; 0xb4
   4675c:	bl	77780 <__assert_fail@plt+0x64bc8>
   46760:	subs	r0, r0, #60	; 0x3c
   46764:	sbcs	r1, r1, #0
   46768:	str	r0, [sp, #176]	; 0xb0
   4676c:	str	r1, [sp, #172]	; 0xac
   46770:	blt	467a0 <__assert_fail@plt+0x33be8>
   46774:	b	467bc <__assert_fail@plt+0x33c04>
   46778:	ldr	r0, [fp, #-608]	; 0xfffffda0
   4677c:	ldr	r1, [fp, #-604]	; 0xfffffda4
   46780:	movw	r2, #17477	; 0x4445
   46784:	movt	r2, #1092	; 0x444
   46788:	subs	r0, r0, r2
   4678c:	sbcs	r1, r1, #0
   46790:	str	r0, [sp, #168]	; 0xa8
   46794:	str	r1, [sp, #164]	; 0xa4
   46798:	blt	467bc <__assert_fail@plt+0x33c04>
   4679c:	b	467a0 <__assert_fail@plt+0x33be8>
   467a0:	ldr	r0, [fp, #-608]	; 0xfffffda0
   467a4:	rsb	r0, r0, r0, lsl #4
   467a8:	lsl	r0, r0, #2
   467ac:	mov	r1, #0
   467b0:	str	r1, [fp, #-1036]	; 0xfffffbf4
   467b4:	str	r0, [fp, #-1040]	; 0xfffffbf0
   467b8:	b	46cec <__assert_fail@plt+0x34134>
   467bc:	ldr	r0, [fp, #-608]	; 0xfffffda0
   467c0:	rsb	r0, r0, r0, lsl #4
   467c4:	lsl	r0, r0, #2
   467c8:	mov	r1, #0
   467cc:	str	r1, [fp, #-1036]	; 0xfffffbf4
   467d0:	str	r0, [fp, #-1040]	; 0xfffffbf0
   467d4:	b	46ba8 <__assert_fail@plt+0x33ff0>
   467d8:	b	467dc <__assert_fail@plt+0x33c24>
   467dc:	b	468e8 <__assert_fail@plt+0x33d30>
   467e0:	ldr	r0, [fp, #-604]	; 0xfffffda4
   467e4:	cmn	r0, #1
   467e8:	bgt	4685c <__assert_fail@plt+0x33ca4>
   467ec:	b	467f0 <__assert_fail@plt+0x33c38>
   467f0:	b	467f4 <__assert_fail@plt+0x33c3c>
   467f4:	ldr	r0, [fp, #-608]	; 0xfffffda0
   467f8:	ldr	r1, [fp, #-604]	; 0xfffffda4
   467fc:	movw	r2, #8738	; 0x2222
   46800:	movt	r2, #8738	; 0x2222
   46804:	subs	r0, r0, r2
   46808:	movw	r2, #8738	; 0x2222
   4680c:	movt	r2, #546	; 0x222
   46810:	sbcs	r1, r1, r2
   46814:	str	r0, [sp, #160]	; 0xa0
   46818:	str	r1, [sp, #156]	; 0x9c
   4681c:	blt	46980 <__assert_fail@plt+0x33dc8>
   46820:	b	469a4 <__assert_fail@plt+0x33dec>
   46824:	ldr	r0, [fp, #-608]	; 0xfffffda0
   46828:	ldr	r1, [fp, #-604]	; 0xfffffda4
   4682c:	mvn	r1, r1
   46830:	mvn	r0, r0
   46834:	movw	r2, #56797	; 0xdddd
   46838:	movt	r2, #56797	; 0xdddd
   4683c:	subs	r0, r2, r0
   46840:	movw	r2, #56797	; 0xdddd
   46844:	movt	r2, #64989	; 0xfddd
   46848:	sbcs	r1, r2, r1
   4684c:	str	r0, [sp, #152]	; 0x98
   46850:	str	r1, [sp, #148]	; 0x94
   46854:	blt	46980 <__assert_fail@plt+0x33dc8>
   46858:	b	469a4 <__assert_fail@plt+0x33dec>
   4685c:	b	468b8 <__assert_fail@plt+0x33d00>
   46860:	b	46864 <__assert_fail@plt+0x33cac>
   46864:	ldr	r0, [fp, #-608]	; 0xfffffda0
   46868:	ldr	r1, [fp, #-604]	; 0xfffffda4
   4686c:	add	r1, r1, #-2147483648	; 0x80000000
   46870:	rsbs	r0, r0, #0
   46874:	rscs	r1, r1, #0
   46878:	str	r0, [sp, #144]	; 0x90
   4687c:	str	r1, [sp, #140]	; 0x8c
   46880:	blt	46980 <__assert_fail@plt+0x33dc8>
   46884:	b	469a4 <__assert_fail@plt+0x33dec>
   46888:	ldr	r0, [fp, #-608]	; 0xfffffda0
   4688c:	ldr	r1, [fp, #-604]	; 0xfffffda4
   46890:	subs	r0, r0, #1
   46894:	sbcs	r1, r1, #0
   46898:	str	r0, [sp, #136]	; 0x88
   4689c:	str	r1, [sp, #132]	; 0x84
   468a0:	blt	469a4 <__assert_fail@plt+0x33dec>
   468a4:	b	468a8 <__assert_fail@plt+0x33cf0>
   468a8:	mov	r0, #0
   468ac:	cmp	r0, #0
   468b0:	bne	46980 <__assert_fail@plt+0x33dc8>
   468b4:	b	469a4 <__assert_fail@plt+0x33dec>
   468b8:	ldr	r0, [fp, #-608]	; 0xfffffda0
   468bc:	ldr	r1, [fp, #-604]	; 0xfffffda4
   468c0:	movw	r2, #56798	; 0xddde
   468c4:	movt	r2, #56797	; 0xdddd
   468c8:	subs	r0, r2, r0
   468cc:	movw	r2, #56797	; 0xdddd
   468d0:	movt	r2, #64989	; 0xfddd
   468d4:	sbcs	r1, r2, r1
   468d8:	str	r0, [sp, #128]	; 0x80
   468dc:	str	r1, [sp, #124]	; 0x7c
   468e0:	blt	46980 <__assert_fail@plt+0x33dc8>
   468e4:	b	469a4 <__assert_fail@plt+0x33dec>
   468e8:	b	468f0 <__assert_fail@plt+0x33d38>
   468ec:	b	469a4 <__assert_fail@plt+0x33dec>
   468f0:	ldr	r0, [fp, #-604]	; 0xfffffda4
   468f4:	cmn	r0, #1
   468f8:	bgt	46950 <__assert_fail@plt+0x33d98>
   468fc:	b	46900 <__assert_fail@plt+0x33d48>
   46900:	ldr	r0, [fp, #-608]	; 0xfffffda0
   46904:	ldr	r1, [fp, #-604]	; 0xfffffda4
   46908:	and	r0, r0, r1
   4690c:	cmn	r0, #1
   46910:	bne	46924 <__assert_fail@plt+0x33d6c>
   46914:	b	46918 <__assert_fail@plt+0x33d60>
   46918:	b	4691c <__assert_fail@plt+0x33d64>
   4691c:	b	469a4 <__assert_fail@plt+0x33dec>
   46920:	b	469a4 <__assert_fail@plt+0x33dec>
   46924:	ldr	r2, [fp, #-608]	; 0xfffffda0
   46928:	ldr	r3, [fp, #-604]	; 0xfffffda4
   4692c:	mov	r0, #0
   46930:	mov	r1, #-2147483648	; 0x80000000
   46934:	bl	77780 <__assert_fail@plt+0x64bc8>
   46938:	subs	r0, r0, #60	; 0x3c
   4693c:	sbcs	r1, r1, #0
   46940:	str	r0, [sp, #120]	; 0x78
   46944:	str	r1, [sp, #116]	; 0x74
   46948:	blt	46980 <__assert_fail@plt+0x33dc8>
   4694c:	b	469a4 <__assert_fail@plt+0x33dec>
   46950:	ldr	r0, [fp, #-608]	; 0xfffffda0
   46954:	ldr	r1, [fp, #-604]	; 0xfffffda4
   46958:	movw	r2, #8739	; 0x2223
   4695c:	movt	r2, #8738	; 0x2222
   46960:	subs	r0, r0, r2
   46964:	movw	r2, #8738	; 0x2222
   46968:	movt	r2, #546	; 0x222
   4696c:	sbcs	r1, r1, r2
   46970:	str	r0, [sp, #112]	; 0x70
   46974:	str	r1, [sp, #108]	; 0x6c
   46978:	blt	469a4 <__assert_fail@plt+0x33dec>
   4697c:	b	46980 <__assert_fail@plt+0x33dc8>
   46980:	ldr	r0, [fp, #-608]	; 0xfffffda0
   46984:	ldr	r1, [fp, #-604]	; 0xfffffda4
   46988:	mov	r2, #60	; 0x3c
   4698c:	umull	r0, r2, r0, r2
   46990:	rsb	r1, r1, r1, lsl #4
   46994:	add	r1, r2, r1, lsl #2
   46998:	str	r0, [fp, #-1040]	; 0xfffffbf0
   4699c:	str	r1, [fp, #-1036]	; 0xfffffbf4
   469a0:	b	46cec <__assert_fail@plt+0x34134>
   469a4:	ldr	r0, [fp, #-608]	; 0xfffffda0
   469a8:	ldr	r1, [fp, #-604]	; 0xfffffda4
   469ac:	mov	r2, #60	; 0x3c
   469b0:	umull	r0, r2, r0, r2
   469b4:	rsb	r1, r1, r1, lsl #4
   469b8:	add	r1, r2, r1, lsl #2
   469bc:	str	r0, [fp, #-1040]	; 0xfffffbf0
   469c0:	str	r1, [fp, #-1036]	; 0xfffffbf4
   469c4:	b	46ba8 <__assert_fail@plt+0x33ff0>
   469c8:	b	46abc <__assert_fail@plt+0x33f04>
   469cc:	ldr	r0, [fp, #-604]	; 0xfffffda4
   469d0:	cmn	r0, #1
   469d4:	bgt	46a28 <__assert_fail@plt+0x33e70>
   469d8:	b	469dc <__assert_fail@plt+0x33e24>
   469dc:	b	46a10 <__assert_fail@plt+0x33e58>
   469e0:	ldr	r0, [fp, #-608]	; 0xfffffda0
   469e4:	ldr	r1, [fp, #-604]	; 0xfffffda4
   469e8:	movw	r2, #17476	; 0x4444
   469ec:	movt	r2, #17476	; 0x4444
   469f0:	subs	r0, r0, r2
   469f4:	movw	r2, #17476	; 0x4444
   469f8:	movt	r2, #1092	; 0x444
   469fc:	sbcs	r1, r1, r2
   46a00:	str	r0, [sp, #104]	; 0x68
   46a04:	str	r1, [sp, #100]	; 0x64
   46a08:	bcc	46b64 <__assert_fail@plt+0x33fac>
   46a0c:	b	46b88 <__assert_fail@plt+0x33fd0>
   46a10:	ldr	r0, [fp, #-608]	; 0xfffffda0
   46a14:	ldr	r1, [fp, #-604]	; 0xfffffda4
   46a18:	and	r0, r0, r1
   46a1c:	cmn	r0, #1
   46a20:	bne	46b64 <__assert_fail@plt+0x33fac>
   46a24:	b	46b88 <__assert_fail@plt+0x33fd0>
   46a28:	b	46a2c <__assert_fail@plt+0x33e74>
   46a2c:	b	46a9c <__assert_fail@plt+0x33ee4>
   46a30:	b	46a9c <__assert_fail@plt+0x33ee4>
   46a34:	b	46a9c <__assert_fail@plt+0x33ee4>
   46a38:	b	46a3c <__assert_fail@plt+0x33e84>
   46a3c:	ldr	r0, [fp, #-608]	; 0xfffffda0
   46a40:	ldr	r1, [fp, #-604]	; 0xfffffda4
   46a44:	rsbs	r0, r0, #0
   46a48:	rscs	r1, r1, #0
   46a4c:	str	r0, [sp, #96]	; 0x60
   46a50:	str	r1, [sp, #92]	; 0x5c
   46a54:	blt	46b64 <__assert_fail@plt+0x33fac>
   46a58:	b	46b88 <__assert_fail@plt+0x33fd0>
   46a5c:	ldr	r0, [fp, #-608]	; 0xfffffda0
   46a60:	ldr	r1, [fp, #-604]	; 0xfffffda4
   46a64:	subs	r0, r0, #1
   46a68:	sbcs	r1, r1, #0
   46a6c:	str	r0, [sp, #88]	; 0x58
   46a70:	str	r1, [sp, #84]	; 0x54
   46a74:	blt	46b88 <__assert_fail@plt+0x33fd0>
   46a78:	b	46a7c <__assert_fail@plt+0x33ec4>
   46a7c:	ldr	r0, [fp, #-608]	; 0xfffffda0
   46a80:	ldr	r1, [fp, #-604]	; 0xfffffda4
   46a84:	subs	r0, r0, #1
   46a88:	sbc	r1, r1, #0
   46a8c:	cmn	r1, #1
   46a90:	str	r0, [sp, #80]	; 0x50
   46a94:	bgt	46b64 <__assert_fail@plt+0x33fac>
   46a98:	b	46b88 <__assert_fail@plt+0x33fd0>
   46a9c:	ldr	r0, [fp, #-608]	; 0xfffffda0
   46aa0:	ldr	r1, [fp, #-604]	; 0xfffffda4
   46aa4:	rsbs	r0, r0, #0
   46aa8:	rscs	r1, r1, #0
   46aac:	str	r0, [sp, #76]	; 0x4c
   46ab0:	str	r1, [sp, #72]	; 0x48
   46ab4:	blt	46b64 <__assert_fail@plt+0x33fac>
   46ab8:	b	46b88 <__assert_fail@plt+0x33fd0>
   46abc:	b	46ac4 <__assert_fail@plt+0x33f0c>
   46ac0:	b	46b88 <__assert_fail@plt+0x33fd0>
   46ac4:	ldr	r0, [fp, #-604]	; 0xfffffda4
   46ac8:	cmn	r0, #1
   46acc:	bgt	46b34 <__assert_fail@plt+0x33f7c>
   46ad0:	b	46ad4 <__assert_fail@plt+0x33f1c>
   46ad4:	b	46ad8 <__assert_fail@plt+0x33f20>
   46ad8:	b	46b04 <__assert_fail@plt+0x33f4c>
   46adc:	b	46b04 <__assert_fail@plt+0x33f4c>
   46ae0:	ldr	r0, [fp, #-608]	; 0xfffffda0
   46ae4:	ldr	r1, [fp, #-604]	; 0xfffffda4
   46ae8:	and	r0, r0, r1
   46aec:	cmn	r0, #1
   46af0:	bne	46b04 <__assert_fail@plt+0x33f4c>
   46af4:	b	46af8 <__assert_fail@plt+0x33f40>
   46af8:	b	46afc <__assert_fail@plt+0x33f44>
   46afc:	b	46b64 <__assert_fail@plt+0x33fac>
   46b00:	b	46b64 <__assert_fail@plt+0x33fac>
   46b04:	ldr	r2, [fp, #-608]	; 0xfffffda0
   46b08:	ldr	r3, [fp, #-604]	; 0xfffffda4
   46b0c:	mov	r0, #0
   46b10:	str	r0, [sp, #68]	; 0x44
   46b14:	ldr	r1, [sp, #68]	; 0x44
   46b18:	bl	77780 <__assert_fail@plt+0x64bc8>
   46b1c:	subs	r0, r0, #60	; 0x3c
   46b20:	sbcs	r1, r1, #0
   46b24:	str	r0, [sp, #64]	; 0x40
   46b28:	str	r1, [sp, #60]	; 0x3c
   46b2c:	blt	46b64 <__assert_fail@plt+0x33fac>
   46b30:	b	46b88 <__assert_fail@plt+0x33fd0>
   46b34:	ldr	r0, [fp, #-608]	; 0xfffffda0
   46b38:	ldr	r1, [fp, #-604]	; 0xfffffda4
   46b3c:	movw	r2, #17477	; 0x4445
   46b40:	movt	r2, #17476	; 0x4444
   46b44:	subs	r0, r0, r2
   46b48:	movw	r2, #17476	; 0x4444
   46b4c:	movt	r2, #1092	; 0x444
   46b50:	sbcs	r1, r1, r2
   46b54:	str	r0, [sp, #56]	; 0x38
   46b58:	str	r1, [sp, #52]	; 0x34
   46b5c:	bcc	46b88 <__assert_fail@plt+0x33fd0>
   46b60:	b	46b64 <__assert_fail@plt+0x33fac>
   46b64:	ldr	r0, [fp, #-608]	; 0xfffffda0
   46b68:	ldr	r1, [fp, #-604]	; 0xfffffda4
   46b6c:	mov	r2, #60	; 0x3c
   46b70:	umull	r0, r2, r0, r2
   46b74:	rsb	r1, r1, r1, lsl #4
   46b78:	add	r1, r2, r1, lsl #2
   46b7c:	str	r0, [fp, #-1040]	; 0xfffffbf0
   46b80:	str	r1, [fp, #-1036]	; 0xfffffbf4
   46b84:	b	46cec <__assert_fail@plt+0x34134>
   46b88:	ldr	r0, [fp, #-608]	; 0xfffffda0
   46b8c:	ldr	r1, [fp, #-604]	; 0xfffffda4
   46b90:	mov	r2, #60	; 0x3c
   46b94:	umull	r0, r2, r0, r2
   46b98:	rsb	r1, r1, r1, lsl #4
   46b9c:	add	r1, r2, r1, lsl #2
   46ba0:	str	r0, [fp, #-1040]	; 0xfffffbf0
   46ba4:	str	r1, [fp, #-1036]	; 0xfffffbf4
   46ba8:	ldr	r0, [fp, #-1032]	; 0xfffffbf8
   46bac:	ldr	r1, [fp, #-1028]	; 0xfffffbfc
   46bb0:	ldr	r2, [fp, #-1040]	; 0xfffffbf0
   46bb4:	ldr	r3, [fp, #-1036]	; 0xfffffbf4
   46bb8:	mov	ip, #0
   46bbc:	cmn	r1, #1
   46bc0:	mov	lr, ip
   46bc4:	movwgt	lr, #1
   46bc8:	adds	r0, r0, r2
   46bcc:	adc	r1, r1, r3
   46bd0:	cmn	r1, #1
   46bd4:	mov	r2, ip
   46bd8:	movwgt	r2, #1
   46bdc:	sub	r4, lr, r2
   46be0:	cmp	lr, r2
   46be4:	movwne	r4, #1
   46be8:	cmn	r3, #1
   46bec:	movwgt	ip, #1
   46bf0:	sub	r2, lr, ip
   46bf4:	clz	r2, r2
   46bf8:	lsr	r2, r2, #5
   46bfc:	and	r2, r2, r4
   46c00:	str	r0, [fp, #-1048]	; 0xfffffbe8
   46c04:	str	r1, [fp, #-1044]	; 0xfffffbec
   46c08:	tst	r2, #1
   46c0c:	bne	46cec <__assert_fail@plt+0x34134>
   46c10:	ldr	r0, [fp, #-1048]	; 0xfffffbe8
   46c14:	ldr	r1, [fp, #-1044]	; 0xfffffbec
   46c18:	ldr	r2, [fp, #-600]	; 0xfffffda8
   46c1c:	ldr	r3, [fp, #-596]	; 0xfffffdac
   46c20:	mov	ip, #0
   46c24:	cmn	r1, #1
   46c28:	mov	lr, ip
   46c2c:	movwgt	lr, #1
   46c30:	adds	r0, r0, r2
   46c34:	adc	r1, r1, r3
   46c38:	cmn	r1, #1
   46c3c:	mov	r2, ip
   46c40:	movwgt	r2, #1
   46c44:	sub	r4, lr, r2
   46c48:	cmp	lr, r2
   46c4c:	movwne	r4, #1
   46c50:	cmn	r3, #1
   46c54:	movwgt	ip, #1
   46c58:	sub	r2, lr, ip
   46c5c:	clz	r2, r2
   46c60:	lsr	r2, r2, #5
   46c64:	and	r2, r2, r4
   46c68:	str	r0, [fp, #-1056]	; 0xfffffbe0
   46c6c:	str	r1, [fp, #-1052]	; 0xfffffbe4
   46c70:	tst	r2, #1
   46c74:	bne	46cec <__assert_fail@plt+0x34134>
   46c78:	ldr	r0, [fp, #-1056]	; 0xfffffbe0
   46c7c:	ldr	r1, [fp, #-1052]	; 0xfffffbe4
   46c80:	ldr	r2, [fp, #-1016]	; 0xfffffc08
   46c84:	asr	r3, r2, #31
   46c88:	mov	ip, #0
   46c8c:	cmn	r1, #1
   46c90:	mov	lr, ip
   46c94:	movwgt	lr, #1
   46c98:	adds	r0, r0, r2
   46c9c:	adc	r1, r1, r2, asr #31
   46ca0:	cmn	r1, #1
   46ca4:	mov	r2, ip
   46ca8:	movwgt	r2, #1
   46cac:	sub	r4, lr, r2
   46cb0:	cmp	lr, r2
   46cb4:	movwne	r4, #1
   46cb8:	cmn	r3, #1
   46cbc:	movwgt	ip, #1
   46cc0:	sub	r2, lr, ip
   46cc4:	clz	r2, r2
   46cc8:	lsr	r2, r2, #5
   46ccc:	and	r2, r2, r4
   46cd0:	eor	r1, r1, r0, asr #31
   46cd4:	cmp	r1, #0
   46cd8:	movwne	r1, #1
   46cdc:	orr	r1, r2, r1
   46ce0:	str	r0, [fp, #-1060]	; 0xfffffbdc
   46ce4:	tst	r1, #1
   46ce8:	beq	46d10 <__assert_fail@plt+0x34158>
   46cec:	sub	r0, fp, #736	; 0x2e0
   46cf0:	bl	3e9ac <__assert_fail@plt+0x2bdf4>
   46cf4:	tst	r0, #1
   46cf8:	beq	46d0c <__assert_fail@plt+0x34154>
   46cfc:	movw	r0, #56233	; 0xdba9
   46d00:	movt	r0, #7
   46d04:	bl	12864 <gettext@plt>
   46d08:	bl	3e9c4 <__assert_fail@plt+0x2be0c>
   46d0c:	b	47060 <__assert_fail@plt+0x344a8>
   46d10:	ldr	r0, [fp, #-1060]	; 0xfffffbdc
   46d14:	ldr	r1, [fp, #-20]	; 0xffffffec
   46d18:	str	r0, [r1]
   46d1c:	ldr	r0, [fp, #-1012]	; 0xfffffc0c
   46d20:	ldr	r1, [fp, #-20]	; 0xffffffec
   46d24:	str	r0, [r1, #4]
   46d28:	sub	r0, fp, #736	; 0x2e0
   46d2c:	bl	3e9ac <__assert_fail@plt+0x2bdf4>
   46d30:	tst	r0, #1
   46d34:	beq	46e38 <__assert_fail@plt+0x34280>
   46d38:	ldr	r0, [fp, #-616]	; 0xfffffd98
   46d3c:	ldr	r1, [fp, #-612]	; 0xfffffd9c
   46d40:	ldr	r2, [fp, #-608]	; 0xfffffda0
   46d44:	ldr	r3, [fp, #-604]	; 0xfffffda4
   46d48:	orr	r1, r1, r3
   46d4c:	orr	r0, r0, r2
   46d50:	ldr	r2, [fp, #-596]	; 0xfffffdac
   46d54:	ldr	r3, [fp, #-600]	; 0xfffffda8
   46d58:	orr	r0, r0, r3
   46d5c:	orr	r1, r1, r2
   46d60:	ldr	r2, [fp, #-592]	; 0xfffffdb0
   46d64:	orr	r1, r1, r2, asr #31
   46d68:	orr	r0, r0, r2
   46d6c:	orr	r0, r0, r1
   46d70:	cmp	r0, #0
   46d74:	beq	46e38 <__assert_fail@plt+0x34280>
   46d78:	b	46d7c <__assert_fail@plt+0x341c4>
   46d7c:	movw	r0, #56281	; 0xdbd9
   46d80:	movt	r0, #7
   46d84:	bl	12864 <gettext@plt>
   46d88:	ldr	r2, [fp, #-616]	; 0xfffffd98
   46d8c:	ldr	r3, [fp, #-612]	; 0xfffffd9c
   46d90:	ldr	lr, [fp, #-608]	; 0xfffffda0
   46d94:	ldr	r1, [fp, #-604]	; 0xfffffda4
   46d98:	ldr	ip, [fp, #-600]	; 0xfffffda8
   46d9c:	ldr	r4, [fp, #-596]	; 0xfffffdac
   46da0:	ldr	r5, [fp, #-592]	; 0xfffffdb0
   46da4:	mov	r6, sp
   46da8:	str	r5, [r6, #16]
   46dac:	str	r4, [r6, #12]
   46db0:	str	ip, [r6, #8]
   46db4:	str	r1, [r6, #4]
   46db8:	str	lr, [r6]
   46dbc:	bl	3e9c4 <__assert_fail@plt+0x2be0c>
   46dc0:	ldr	r0, [fp, #-1060]	; 0xfffffbdc
   46dc4:	asr	r1, r0, #31
   46dc8:	str	r0, [fp, #-1072]	; 0xfffffbd0
   46dcc:	str	r1, [fp, #-1068]	; 0xfffffbd4
   46dd0:	movw	r0, #56357	; 0xdc25
   46dd4:	movt	r0, #7
   46dd8:	bl	12864 <gettext@plt>
   46ddc:	ldr	r2, [fp, #-1072]	; 0xfffffbd0
   46de0:	ldr	r3, [fp, #-1068]	; 0xfffffbd4
   46de4:	bl	3e9c4 <__assert_fail@plt+0x2be0c>
   46de8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   46dec:	cmn	r0, #1
   46df0:	beq	46e34 <__assert_fail@plt+0x3427c>
   46df4:	ldr	r0, [fp, #-380]	; 0xfffffe84
   46df8:	ldr	r1, [fp, #-20]	; 0xffffffec
   46dfc:	sub	lr, fp, #1024	; 0x400
   46e00:	sub	r2, lr, #92	; 0x5c
   46e04:	bl	6ff34 <__assert_fail@plt+0x5d37c>
   46e08:	movw	r1, #0
   46e0c:	cmp	r0, r1
   46e10:	beq	46e34 <__assert_fail@plt+0x3427c>
   46e14:	ldr	r0, [fp, #-44]	; 0xffffffd4
   46e18:	ldr	r1, [fp, #-1084]	; 0xfffffbc4
   46e1c:	cmp	r0, r1
   46e20:	beq	46e34 <__assert_fail@plt+0x3427c>
   46e24:	movw	r0, #56392	; 0xdc48
   46e28:	movt	r0, #7
   46e2c:	bl	12864 <gettext@plt>
   46e30:	bl	3e9c4 <__assert_fail@plt+0x2be0c>
   46e34:	b	46e38 <__assert_fail@plt+0x34280>
   46e38:	b	46e3c <__assert_fail@plt+0x34284>
   46e3c:	sub	r0, fp, #736	; 0x2e0
   46e40:	bl	3e9ac <__assert_fail@plt+0x2bdf4>
   46e44:	tst	r0, #1
   46e48:	beq	47058 <__assert_fail@plt+0x344a0>
   46e4c:	ldr	r0, [fp, #12]
   46e50:	movw	r1, #0
   46e54:	cmp	r0, r1
   46e58:	bne	46e70 <__assert_fail@plt+0x342b8>
   46e5c:	movw	r0, #56453	; 0xdc85
   46e60:	movt	r0, #7
   46e64:	bl	12864 <gettext@plt>
   46e68:	bl	3e9c4 <__assert_fail@plt+0x2be0c>
   46e6c:	b	46eb4 <__assert_fail@plt+0x342fc>
   46e70:	ldr	r0, [fp, #12]
   46e74:	movw	r1, #54871	; 0xd657
   46e78:	movt	r1, #7
   46e7c:	bl	124c8 <strcmp@plt>
   46e80:	cmp	r0, #0
   46e84:	bne	46e9c <__assert_fail@plt+0x342e4>
   46e88:	movw	r0, #56479	; 0xdc9f
   46e8c:	movt	r0, #7
   46e90:	bl	12864 <gettext@plt>
   46e94:	bl	3e9c4 <__assert_fail@plt+0x2be0c>
   46e98:	b	46eb0 <__assert_fail@plt+0x342f8>
   46e9c:	movw	r0, #56505	; 0xdcb9
   46ea0:	movt	r0, #7
   46ea4:	bl	12864 <gettext@plt>
   46ea8:	ldr	r1, [fp, #12]
   46eac:	bl	3e9c4 <__assert_fail@plt+0x2be0c>
   46eb0:	b	46eb4 <__assert_fail@plt+0x342fc>
   46eb4:	ldr	r0, [fp, #-20]	; 0xffffffec
   46eb8:	ldr	r0, [r0]
   46ebc:	asr	r1, r0, #31
   46ec0:	str	r0, [fp, #-1128]	; 0xfffffb98
   46ec4:	str	r1, [fp, #-1124]	; 0xfffffb9c
   46ec8:	ldr	r0, [fp, #-20]	; 0xffffffec
   46ecc:	ldr	r0, [r0, #4]
   46ed0:	str	r0, [fp, #-1132]	; 0xfffffb94
   46ed4:	movw	r0, #56542	; 0xdcde
   46ed8:	movt	r0, #7
   46edc:	bl	12864 <gettext@plt>
   46ee0:	ldr	r2, [fp, #-1128]	; 0xfffffb98
   46ee4:	ldr	r3, [fp, #-1124]	; 0xfffffb9c
   46ee8:	ldr	r1, [fp, #-1132]	; 0xfffffb94
   46eec:	mov	lr, sp
   46ef0:	str	r1, [lr]
   46ef4:	bl	3e9c4 <__assert_fail@plt+0x2be0c>
   46ef8:	ldr	r0, [fp, #-20]	; 0xffffffec
   46efc:	sub	lr, fp, #1024	; 0x400
   46f00:	sub	r1, lr, #152	; 0x98
   46f04:	bl	12498 <gmtime_r@plt>
   46f08:	movw	r1, #0
   46f0c:	cmp	r0, r1
   46f10:	movw	r0, #0
   46f14:	movne	r0, #1
   46f18:	mvn	r1, #0
   46f1c:	eor	r0, r0, r1
   46f20:	eor	r0, r0, r1
   46f24:	and	r0, r0, #1
   46f28:	strb	r0, [fp, #-1221]	; 0xfffffb3b
   46f2c:	ldrb	r0, [fp, #-1221]	; 0xfffffb3b
   46f30:	tst	r0, #1
   46f34:	beq	46f78 <__assert_fail@plt+0x343c0>
   46f38:	movw	r0, #56576	; 0xdd00
   46f3c:	movt	r0, #7
   46f40:	bl	12864 <gettext@plt>
   46f44:	sub	r2, fp, #247	; 0xf7
   46f48:	sub	lr, fp, #1024	; 0x400
   46f4c:	sub	lr, lr, #152	; 0x98
   46f50:	str	r0, [sp, #48]	; 0x30
   46f54:	mov	r0, lr
   46f58:	movw	r1, #0
   46f5c:	movw	r3, #100	; 0x64
   46f60:	bl	483b4 <__assert_fail@plt+0x357fc>
   46f64:	ldr	r1, [sp, #48]	; 0x30
   46f68:	str	r0, [sp, #44]	; 0x2c
   46f6c:	mov	r0, r1
   46f70:	ldr	r1, [sp, #44]	; 0x2c
   46f74:	bl	3e9c4 <__assert_fail@plt+0x2be0c>
   46f78:	ldr	r0, [fp, #-380]	; 0xfffffe84
   46f7c:	ldr	r1, [fp, #-20]	; 0xffffffec
   46f80:	sub	lr, fp, #1024	; 0x400
   46f84:	sub	r2, lr, #196	; 0xc4
   46f88:	bl	6ff34 <__assert_fail@plt+0x5d37c>
   46f8c:	movw	r1, #0
   46f90:	cmp	r0, r1
   46f94:	beq	47054 <__assert_fail@plt+0x3449c>
   46f98:	movw	r0, #1
   46f9c:	strb	r0, [fp, #-1222]	; 0xfffffb3a
   46fa0:	ldr	r0, [fp, #-1184]	; 0xfffffb60
   46fa4:	str	r0, [fp, #-1228]	; 0xfffffb34
   46fa8:	ldrb	r0, [fp, #-1222]	; 0xfffffb3a
   46fac:	tst	r0, #1
   46fb0:	beq	47010 <__assert_fail@plt+0x34458>
   46fb4:	movw	r0, #56593	; 0xdd11
   46fb8:	movt	r0, #7
   46fbc:	bl	12864 <gettext@plt>
   46fc0:	sub	r2, fp, #247	; 0xf7
   46fc4:	sub	lr, fp, #1024	; 0x400
   46fc8:	sub	lr, lr, #196	; 0xc4
   46fcc:	str	r0, [sp, #40]	; 0x28
   46fd0:	mov	r0, lr
   46fd4:	movw	r1, #0
   46fd8:	movw	r3, #100	; 0x64
   46fdc:	bl	483b4 <__assert_fail@plt+0x357fc>
   46fe0:	sub	r1, fp, #147	; 0x93
   46fe4:	ldr	r2, [fp, #-1228]	; 0xfffffb34
   46fe8:	str	r0, [sp, #36]	; 0x24
   46fec:	mov	r0, r2
   46ff0:	bl	4723c <__assert_fail@plt+0x34684>
   46ff4:	ldr	r1, [sp, #40]	; 0x28
   46ff8:	str	r0, [sp, #32]
   46ffc:	mov	r0, r1
   47000:	ldr	r1, [sp, #36]	; 0x24
   47004:	ldr	r2, [sp, #32]
   47008:	bl	3e9c4 <__assert_fail@plt+0x2be0c>
   4700c:	b	47050 <__assert_fail@plt+0x34498>
   47010:	movw	r0, #56612	; 0xdd24
   47014:	movt	r0, #7
   47018:	bl	12864 <gettext@plt>
   4701c:	sub	r2, fp, #247	; 0xf7
   47020:	sub	lr, fp, #1024	; 0x400
   47024:	sub	lr, lr, #196	; 0xc4
   47028:	str	r0, [sp, #28]
   4702c:	mov	r0, lr
   47030:	movw	r1, #0
   47034:	movw	r3, #100	; 0x64
   47038:	bl	483b4 <__assert_fail@plt+0x357fc>
   4703c:	ldr	r1, [sp, #28]
   47040:	str	r0, [sp, #24]
   47044:	mov	r0, r1
   47048:	ldr	r1, [sp, #24]
   4704c:	bl	3e9c4 <__assert_fail@plt+0x2be0c>
   47050:	b	47054 <__assert_fail@plt+0x3449c>
   47054:	b	47058 <__assert_fail@plt+0x344a0>
   47058:	movw	r0, #1
   4705c:	strb	r0, [fp, #-248]	; 0xffffff08
   47060:	ldr	r0, [fp, #-380]	; 0xfffffe84
   47064:	ldr	r1, [fp, #8]
   47068:	cmp	r0, r1
   4706c:	beq	47078 <__assert_fail@plt+0x344c0>
   47070:	ldr	r0, [fp, #-380]	; 0xfffffe84
   47074:	bl	6fed4 <__assert_fail@plt+0x5d31c>
   47078:	ldr	r0, [fp, #-256]	; 0xffffff00
   4707c:	bl	50c68 <__assert_fail@plt+0x3e0b0>
   47080:	ldrb	r0, [fp, #-248]	; 0xffffff08
   47084:	and	r0, r0, #1
   47088:	sub	sp, fp, #16
   4708c:	pop	{r4, r5, r6, sl, fp, pc}
   47090:	push	{fp, lr}
   47094:	mov	fp, sp
   47098:	sub	sp, sp, #56	; 0x38
   4709c:	str	r0, [fp, #-4]
   470a0:	str	r1, [fp, #-8]
   470a4:	str	r2, [fp, #-12]
   470a8:	ldr	r0, [fp, #-4]
   470ac:	ldrb	r0, [r0, #187]	; 0xbb
   470b0:	tst	r0, #1
   470b4:	beq	4717c <__assert_fail@plt+0x345c4>
   470b8:	ldr	r0, [fp, #-4]
   470bc:	ldr	r1, [r0, #8]
   470c0:	ldr	r0, [r0, #12]
   470c4:	mvn	r2, #0
   470c8:	subs	r1, r1, r2
   470cc:	sbcs	r0, r0, r2
   470d0:	str	r1, [fp, #-20]	; 0xffffffec
   470d4:	str	r0, [fp, #-24]	; 0xffffffe8
   470d8:	blt	47140 <__assert_fail@plt+0x34588>
   470dc:	b	470e0 <__assert_fail@plt+0x34528>
   470e0:	ldr	r0, [fp, #-4]
   470e4:	ldr	r1, [r0, #8]
   470e8:	ldr	r0, [r0, #12]
   470ec:	rsbs	r1, r1, #12
   470f0:	rscs	r0, r0, #0
   470f4:	str	r1, [sp, #28]
   470f8:	str	r0, [sp, #24]
   470fc:	blt	47140 <__assert_fail@plt+0x34588>
   47100:	b	47104 <__assert_fail@plt+0x3454c>
   47104:	ldr	r0, [fp, #-8]
   47108:	ldr	r1, [fp, #-12]
   4710c:	ldr	r2, [fp, #-4]
   47110:	ldr	r2, [r2, #8]
   47114:	add	r2, r2, #1
   47118:	movw	r3, #11
   4711c:	mul	r2, r2, r3
   47120:	movw	r3, #51658	; 0xc9ca
   47124:	movt	r3, #7
   47128:	add	r3, r3, r2
   4712c:	movw	r2, #59431	; 0xe827
   47130:	movt	r2, #7
   47134:	bl	128e8 <snprintf@plt>
   47138:	str	r0, [sp, #20]
   4713c:	b	47170 <__assert_fail@plt+0x345b8>
   47140:	ldr	r0, [fp, #-8]
   47144:	ldr	r1, [fp, #-12]
   47148:	ldr	r2, [fp, #-4]
   4714c:	ldr	r3, [r2, #8]
   47150:	ldr	r2, [r2, #12]
   47154:	mov	ip, sp
   47158:	str	r2, [ip, #4]
   4715c:	str	r3, [ip]
   47160:	movw	r2, #53976	; 0xd2d8
   47164:	movt	r2, #7
   47168:	bl	128e8 <snprintf@plt>
   4716c:	str	r0, [sp, #20]
   47170:	ldr	r0, [sp, #20]
   47174:	str	r0, [fp, #-16]
   47178:	b	47190 <__assert_fail@plt+0x345d8>
   4717c:	ldr	r0, [fp, #-8]
   47180:	movw	r1, #0
   47184:	strb	r1, [r0]
   47188:	movw	r0, #0
   4718c:	str	r0, [fp, #-16]
   47190:	ldr	r0, [fp, #-4]
   47194:	ldr	r0, [r0, #16]
   47198:	movw	r1, #0
   4719c:	cmp	r1, r0
   471a0:	bgt	4722c <__assert_fail@plt+0x34674>
   471a4:	ldr	r0, [fp, #-4]
   471a8:	ldr	r0, [r0, #16]
   471ac:	cmp	r0, #6
   471b0:	bgt	4722c <__assert_fail@plt+0x34674>
   471b4:	ldr	r0, [fp, #-16]
   471b8:	movw	r1, #0
   471bc:	cmp	r1, r0
   471c0:	bgt	4722c <__assert_fail@plt+0x34674>
   471c4:	ldr	r0, [fp, #-16]
   471c8:	ldr	r1, [fp, #-12]
   471cc:	cmp	r0, r1
   471d0:	bge	4722c <__assert_fail@plt+0x34674>
   471d4:	ldr	r0, [fp, #-8]
   471d8:	ldr	r1, [fp, #-16]
   471dc:	add	r0, r0, r1
   471e0:	ldr	r2, [fp, #-12]
   471e4:	sub	r2, r2, r1
   471e8:	movw	r3, #59430	; 0xe826
   471ec:	movt	r3, #7
   471f0:	add	ip, r3, #1
   471f4:	cmp	r1, #0
   471f8:	moveq	r3, ip
   471fc:	ldr	r1, [fp, #-4]
   47200:	ldr	r1, [r1, #16]
   47204:	movw	ip, #51812	; 0xca64
   47208:	movt	ip, #7
   4720c:	add	r1, ip, r1, lsl #2
   47210:	str	r1, [sp, #16]
   47214:	mov	r1, r2
   47218:	mov	r2, r3
   4721c:	ldr	r3, [sp, #16]
   47220:	bl	128e8 <snprintf@plt>
   47224:	str	r0, [sp, #12]
   47228:	b	47230 <__assert_fail@plt+0x34678>
   4722c:	b	47230 <__assert_fail@plt+0x34678>
   47230:	ldr	r0, [fp, #-8]
   47234:	mov	sp, fp
   47238:	pop	{fp, pc}
   4723c:	push	{fp, lr}
   47240:	mov	fp, sp
   47244:	sub	sp, sp, #40	; 0x28
   47248:	str	r0, [fp, #-4]
   4724c:	str	r1, [fp, #-8]
   47250:	ldr	r0, [fp, #-8]
   47254:	str	r0, [fp, #-12]
   47258:	ldr	r0, [fp, #-4]
   4725c:	mov	r1, #43	; 0x2b
   47260:	cmp	r0, #0
   47264:	movwlt	r1, #45	; 0x2d
   47268:	strb	r1, [fp, #-13]
   4726c:	ldr	r0, [fp, #-4]
   47270:	movw	r1, #46021	; 0xb3c5
   47274:	movt	r1, #37282	; 0x91a2
   47278:	smmla	r0, r0, r1, r0
   4727c:	asr	r2, r0, #11
   47280:	add	r0, r2, r0, lsr #31
   47284:	str	r1, [sp, #4]
   47288:	bl	129b4 <abs@plt>
   4728c:	str	r0, [sp, #20]
   47290:	ldr	r0, [fp, #-8]
   47294:	ldrb	r2, [fp, #-13]
   47298:	ldr	r3, [sp, #20]
   4729c:	movw	r1, #53981	; 0xd2dd
   472a0:	movt	r1, #7
   472a4:	bl	12a5c <sprintf@plt>
   472a8:	ldr	r1, [fp, #-12]
   472ac:	add	r0, r1, r0
   472b0:	str	r0, [fp, #-12]
   472b4:	ldr	r0, [fp, #-4]
   472b8:	ldr	r1, [sp, #4]
   472bc:	smmla	r2, r0, r1, r0
   472c0:	asr	r3, r2, #11
   472c4:	add	r2, r3, r2, lsr #31
   472c8:	mov	r3, #3600	; 0xe10
   472cc:	mls	r0, r2, r3, r0
   472d0:	bl	129b4 <abs@plt>
   472d4:	str	r0, [sp, #16]
   472d8:	ldr	r0, [sp, #16]
   472dc:	cmp	r0, #0
   472e0:	beq	4740c <__assert_fail@plt+0x34854>
   472e4:	ldr	r0, [sp, #16]
   472e8:	movw	r1, #34953	; 0x8889
   472ec:	movt	r1, #34952	; 0x8888
   472f0:	smmla	r0, r0, r1, r0
   472f4:	asr	r2, r0, #5
   472f8:	add	r0, r2, r0, lsr #31
   472fc:	str	r0, [sp, #12]
   47300:	ldr	r0, [sp, #16]
   47304:	smmla	r1, r0, r1, r0
   47308:	asr	r2, r1, #5
   4730c:	add	r1, r2, r1, lsr #31
   47310:	rsb	r1, r1, r1, lsl #4
   47314:	sub	r0, r0, r1, lsl #2
   47318:	str	r0, [sp, #8]
   4731c:	ldr	r0, [fp, #-12]
   47320:	add	r1, r0, #1
   47324:	str	r1, [fp, #-12]
   47328:	mov	r1, #58	; 0x3a
   4732c:	strb	r1, [r0]
   47330:	ldr	r0, [sp, #12]
   47334:	movw	r1, #26215	; 0x6667
   47338:	movt	r1, #26214	; 0x6666
   4733c:	smmul	r0, r0, r1
   47340:	lsr	r2, r0, #2
   47344:	add	r0, r2, r0, lsr #31
   47348:	add	r0, r0, #48	; 0x30
   4734c:	ldr	r2, [fp, #-12]
   47350:	add	r3, r2, #1
   47354:	str	r3, [fp, #-12]
   47358:	strb	r0, [r2]
   4735c:	ldr	r0, [sp, #12]
   47360:	smmul	r1, r0, r1
   47364:	asr	r2, r1, #2
   47368:	add	r1, r2, r1, lsr #31
   4736c:	add	r1, r1, r1, lsl #2
   47370:	sub	r0, r0, r1, lsl #1
   47374:	add	r0, r0, #48	; 0x30
   47378:	ldr	r1, [fp, #-12]
   4737c:	add	r2, r1, #1
   47380:	str	r2, [fp, #-12]
   47384:	strb	r0, [r1]
   47388:	ldr	r0, [sp, #8]
   4738c:	cmp	r0, #0
   47390:	beq	47400 <__assert_fail@plt+0x34848>
   47394:	ldr	r0, [fp, #-12]
   47398:	add	r1, r0, #1
   4739c:	str	r1, [fp, #-12]
   473a0:	mov	r1, #58	; 0x3a
   473a4:	strb	r1, [r0]
   473a8:	ldr	r0, [sp, #8]
   473ac:	movw	r1, #26215	; 0x6667
   473b0:	movt	r1, #26214	; 0x6666
   473b4:	smmul	r0, r0, r1
   473b8:	lsr	r2, r0, #2
   473bc:	add	r0, r2, r0, lsr #31
   473c0:	add	r0, r0, #48	; 0x30
   473c4:	ldr	r2, [fp, #-12]
   473c8:	add	r3, r2, #1
   473cc:	str	r3, [fp, #-12]
   473d0:	strb	r0, [r2]
   473d4:	ldr	r0, [sp, #8]
   473d8:	smmul	r1, r0, r1
   473dc:	asr	r2, r1, #2
   473e0:	add	r1, r2, r1, lsr #31
   473e4:	add	r1, r1, r1, lsl #2
   473e8:	sub	r0, r0, r1, lsl #1
   473ec:	add	r0, r0, #48	; 0x30
   473f0:	ldr	r1, [fp, #-12]
   473f4:	add	r2, r1, #1
   473f8:	str	r2, [fp, #-12]
   473fc:	strb	r0, [r1]
   47400:	ldr	r0, [fp, #-12]
   47404:	movw	r1, #0
   47408:	strb	r1, [r0]
   4740c:	ldr	r0, [fp, #-8]
   47410:	mov	sp, fp
   47414:	pop	{fp, pc}
   47418:	push	{fp, lr}
   4741c:	mov	fp, sp
   47420:	sub	sp, sp, #32
   47424:	ldr	r1, [fp, #8]
   47428:	and	r0, r0, #1
   4742c:	strb	r0, [fp, #-2]
   47430:	str	r3, [sp, #20]
   47434:	str	r2, [sp, #16]
   47438:	ldr	r0, [sp, #16]
   4743c:	ldr	r2, [sp, #20]
   47440:	orr	r0, r0, r2
   47444:	cmp	r0, #0
   47448:	str	r1, [sp, #12]
   4744c:	bne	47464 <__assert_fail@plt+0x348ac>
   47450:	b	47454 <__assert_fail@plt+0x3489c>
   47454:	ldrb	r0, [fp, #-2]
   47458:	and	r0, r0, #1
   4745c:	strb	r0, [fp, #-1]
   47460:	b	474b0 <__assert_fail@plt+0x348f8>
   47464:	movw	r0, #63272	; 0xf728
   47468:	movt	r0, #8
   4746c:	ldr	r0, [r0]
   47470:	ldrb	r1, [fp, #-2]
   47474:	mov	r2, #1
   47478:	bic	r1, r2, r1
   4747c:	movw	r2, #54056	; 0xd328
   47480:	movt	r2, #7
   47484:	add	r1, r2, r1
   47488:	ldr	r2, [sp, #16]
   4748c:	ldr	r3, [sp, #20]
   47490:	ldr	ip, [fp, #8]
   47494:	mov	lr, sp
   47498:	str	ip, [lr]
   4749c:	bl	128c4 <fprintf@plt>
   474a0:	movw	r1, #1
   474a4:	and	r1, r1, #1
   474a8:	strb	r1, [fp, #-1]
   474ac:	str	r0, [sp, #8]
   474b0:	ldrb	r0, [fp, #-1]
   474b4:	and	r0, r0, #1
   474b8:	mov	sp, fp
   474bc:	pop	{fp, pc}
   474c0:	push	{fp, lr}
   474c4:	mov	fp, sp
   474c8:	sub	sp, sp, #48	; 0x30
   474cc:	str	r0, [fp, #-8]
   474d0:	str	r1, [fp, #-12]
   474d4:	ldr	r0, [fp, #-12]
   474d8:	str	r0, [fp, #-16]
   474dc:	ldr	r0, [fp, #-16]
   474e0:	ldrsb	r0, [r0]
   474e4:	cmp	r0, #0
   474e8:	beq	47518 <__assert_fail@plt+0x34960>
   474ec:	ldr	r0, [fp, #-16]
   474f0:	ldrb	r0, [r0]
   474f4:	bl	47920 <__assert_fail@plt+0x34d68>
   474f8:	and	r0, r0, #255	; 0xff
   474fc:	bl	71660 <__assert_fail@plt+0x5eaa8>
   47500:	ldr	lr, [fp, #-16]
   47504:	strb	r0, [lr]
   47508:	ldr	r0, [fp, #-16]
   4750c:	add	r0, r0, #1
   47510:	str	r0, [fp, #-16]
   47514:	b	474dc <__assert_fail@plt+0x34924>
   47518:	movw	r0, #51840	; 0xca80
   4751c:	movt	r0, #7
   47520:	str	r0, [sp, #20]
   47524:	ldr	r0, [sp, #20]
   47528:	ldr	r0, [r0]
   4752c:	movw	r1, #0
   47530:	cmp	r0, r1
   47534:	beq	47570 <__assert_fail@plt+0x349b8>
   47538:	ldr	r0, [fp, #-12]
   4753c:	ldr	r1, [sp, #20]
   47540:	ldr	r1, [r1]
   47544:	bl	124c8 <strcmp@plt>
   47548:	cmp	r0, #0
   4754c:	bne	4755c <__assert_fail@plt+0x349a4>
   47550:	ldr	r0, [sp, #20]
   47554:	str	r0, [fp, #-4]
   47558:	b	47914 <__assert_fail@plt+0x34d5c>
   4755c:	b	47560 <__assert_fail@plt+0x349a8>
   47560:	ldr	r0, [sp, #20]
   47564:	add	r0, r0, #12
   47568:	str	r0, [sp, #20]
   4756c:	b	47524 <__assert_fail@plt+0x3496c>
   47570:	ldr	r0, [fp, #-12]
   47574:	bl	12888 <strlen@plt>
   47578:	str	r0, [sp, #24]
   4757c:	ldr	r0, [sp, #24]
   47580:	cmp	r0, #3
   47584:	movw	r0, #1
   47588:	str	r0, [sp, #12]
   4758c:	beq	475c4 <__assert_fail@plt+0x34a0c>
   47590:	ldr	r0, [sp, #24]
   47594:	cmp	r0, #4
   47598:	movw	r0, #0
   4759c:	str	r0, [sp, #8]
   475a0:	bne	475bc <__assert_fail@plt+0x34a04>
   475a4:	ldr	r0, [fp, #-12]
   475a8:	ldrb	r0, [r0, #3]
   475ac:	cmp	r0, #46	; 0x2e
   475b0:	movw	r0, #0
   475b4:	moveq	r0, #1
   475b8:	str	r0, [sp, #8]
   475bc:	ldr	r0, [sp, #8]
   475c0:	str	r0, [sp, #12]
   475c4:	ldr	r0, [sp, #12]
   475c8:	and	r0, r0, #1
   475cc:	strb	r0, [sp, #18]
   475d0:	movw	r0, #51900	; 0xcabc
   475d4:	movt	r0, #7
   475d8:	str	r0, [sp, #20]
   475dc:	ldr	r0, [sp, #20]
   475e0:	ldr	r0, [r0]
   475e4:	movw	r1, #0
   475e8:	cmp	r0, r1
   475ec:	beq	47658 <__assert_fail@plt+0x34aa0>
   475f0:	ldrb	r0, [sp, #18]
   475f4:	tst	r0, #1
   475f8:	beq	47618 <__assert_fail@plt+0x34a60>
   475fc:	ldr	r0, [fp, #-12]
   47600:	ldr	r1, [sp, #20]
   47604:	ldr	r1, [r1]
   47608:	movw	r2, #3
   4760c:	bl	12b58 <strncmp@plt>
   47610:	str	r0, [sp, #4]
   47614:	b	4762c <__assert_fail@plt+0x34a74>
   47618:	ldr	r0, [fp, #-12]
   4761c:	ldr	r1, [sp, #20]
   47620:	ldr	r1, [r1]
   47624:	bl	124c8 <strcmp@plt>
   47628:	str	r0, [sp, #4]
   4762c:	ldr	r0, [sp, #4]
   47630:	cmp	r0, #0
   47634:	bne	47644 <__assert_fail@plt+0x34a8c>
   47638:	ldr	r0, [sp, #20]
   4763c:	str	r0, [fp, #-4]
   47640:	b	47914 <__assert_fail@plt+0x34d5c>
   47644:	b	47648 <__assert_fail@plt+0x34a90>
   47648:	ldr	r0, [sp, #20]
   4764c:	add	r0, r0, #12
   47650:	str	r0, [sp, #20]
   47654:	b	475dc <__assert_fail@plt+0x34a24>
   47658:	ldr	r0, [fp, #-8]
   4765c:	ldr	r1, [fp, #-12]
   47660:	bl	47934 <__assert_fail@plt+0x34d7c>
   47664:	str	r0, [sp, #20]
   47668:	movw	r1, #0
   4766c:	cmp	r0, r1
   47670:	beq	47680 <__assert_fail@plt+0x34ac8>
   47674:	ldr	r0, [sp, #20]
   47678:	str	r0, [fp, #-4]
   4767c:	b	47914 <__assert_fail@plt+0x34d5c>
   47680:	ldr	r0, [fp, #-12]
   47684:	movw	r1, #52200	; 0xcbe8
   47688:	movt	r1, #7
   4768c:	ldr	r1, [r1]
   47690:	bl	124c8 <strcmp@plt>
   47694:	cmp	r0, #0
   47698:	bne	476ac <__assert_fail@plt+0x34af4>
   4769c:	movw	r0, #52200	; 0xcbe8
   476a0:	movt	r0, #7
   476a4:	str	r0, [fp, #-4]
   476a8:	b	47914 <__assert_fail@plt+0x34d5c>
   476ac:	movw	r0, #52212	; 0xcbf4
   476b0:	movt	r0, #7
   476b4:	str	r0, [sp, #20]
   476b8:	ldr	r0, [sp, #20]
   476bc:	ldr	r0, [r0]
   476c0:	movw	r1, #0
   476c4:	cmp	r0, r1
   476c8:	beq	47704 <__assert_fail@plt+0x34b4c>
   476cc:	ldr	r0, [fp, #-12]
   476d0:	ldr	r1, [sp, #20]
   476d4:	ldr	r1, [r1]
   476d8:	bl	124c8 <strcmp@plt>
   476dc:	cmp	r0, #0
   476e0:	bne	476f0 <__assert_fail@plt+0x34b38>
   476e4:	ldr	r0, [sp, #20]
   476e8:	str	r0, [fp, #-4]
   476ec:	b	47914 <__assert_fail@plt+0x34d5c>
   476f0:	b	476f4 <__assert_fail@plt+0x34b3c>
   476f4:	ldr	r0, [sp, #20]
   476f8:	add	r0, r0, #12
   476fc:	str	r0, [sp, #20]
   47700:	b	476b8 <__assert_fail@plt+0x34b00>
   47704:	ldr	r0, [fp, #-12]
   47708:	ldr	r1, [sp, #24]
   4770c:	sub	r1, r1, #1
   47710:	add	r0, r0, r1
   47714:	ldrb	r0, [r0]
   47718:	cmp	r0, #83	; 0x53
   4771c:	bne	477a8 <__assert_fail@plt+0x34bf0>
   47720:	ldr	r0, [fp, #-12]
   47724:	ldr	r1, [sp, #24]
   47728:	sub	r1, r1, #1
   4772c:	add	r0, r0, r1
   47730:	movw	r1, #0
   47734:	strb	r1, [r0]
   47738:	movw	r0, #52212	; 0xcbf4
   4773c:	movt	r0, #7
   47740:	str	r0, [sp, #20]
   47744:	ldr	r0, [sp, #20]
   47748:	ldr	r0, [r0]
   4774c:	movw	r1, #0
   47750:	cmp	r0, r1
   47754:	beq	47790 <__assert_fail@plt+0x34bd8>
   47758:	ldr	r0, [fp, #-12]
   4775c:	ldr	r1, [sp, #20]
   47760:	ldr	r1, [r1]
   47764:	bl	124c8 <strcmp@plt>
   47768:	cmp	r0, #0
   4776c:	bne	4777c <__assert_fail@plt+0x34bc4>
   47770:	ldr	r0, [sp, #20]
   47774:	str	r0, [fp, #-4]
   47778:	b	47914 <__assert_fail@plt+0x34d5c>
   4777c:	b	47780 <__assert_fail@plt+0x34bc8>
   47780:	ldr	r0, [sp, #20]
   47784:	add	r0, r0, #12
   47788:	str	r0, [sp, #20]
   4778c:	b	47744 <__assert_fail@plt+0x34b8c>
   47790:	ldr	r0, [fp, #-12]
   47794:	ldr	r1, [sp, #24]
   47798:	sub	r1, r1, #1
   4779c:	add	r0, r0, r1
   477a0:	movw	r1, #83	; 0x53
   477a4:	strb	r1, [r0]
   477a8:	movw	r0, #52344	; 0xcc78
   477ac:	movt	r0, #7
   477b0:	str	r0, [sp, #20]
   477b4:	ldr	r0, [sp, #20]
   477b8:	ldr	r0, [r0]
   477bc:	movw	r1, #0
   477c0:	cmp	r0, r1
   477c4:	beq	47800 <__assert_fail@plt+0x34c48>
   477c8:	ldr	r0, [fp, #-12]
   477cc:	ldr	r1, [sp, #20]
   477d0:	ldr	r1, [r1]
   477d4:	bl	124c8 <strcmp@plt>
   477d8:	cmp	r0, #0
   477dc:	bne	477ec <__assert_fail@plt+0x34c34>
   477e0:	ldr	r0, [sp, #20]
   477e4:	str	r0, [fp, #-4]
   477e8:	b	47914 <__assert_fail@plt+0x34d5c>
   477ec:	b	477f0 <__assert_fail@plt+0x34c38>
   477f0:	ldr	r0, [sp, #20]
   477f4:	add	r0, r0, #12
   477f8:	str	r0, [sp, #20]
   477fc:	b	477b4 <__assert_fail@plt+0x34bfc>
   47800:	ldr	r0, [sp, #24]
   47804:	cmp	r0, #1
   47808:	bne	4786c <__assert_fail@plt+0x34cb4>
   4780c:	movw	r0, #52596	; 0xcd74
   47810:	movt	r0, #7
   47814:	str	r0, [sp, #20]
   47818:	ldr	r0, [sp, #20]
   4781c:	ldr	r0, [r0]
   47820:	movw	r1, #0
   47824:	cmp	r0, r1
   47828:	beq	47868 <__assert_fail@plt+0x34cb0>
   4782c:	ldr	r0, [fp, #-12]
   47830:	ldrb	r0, [r0]
   47834:	ldr	r1, [sp, #20]
   47838:	ldr	r1, [r1]
   4783c:	ldrb	r1, [r1]
   47840:	cmp	r0, r1
   47844:	bne	47854 <__assert_fail@plt+0x34c9c>
   47848:	ldr	r0, [sp, #20]
   4784c:	str	r0, [fp, #-4]
   47850:	b	47914 <__assert_fail@plt+0x34d5c>
   47854:	b	47858 <__assert_fail@plt+0x34ca0>
   47858:	ldr	r0, [sp, #20]
   4785c:	add	r0, r0, #12
   47860:	str	r0, [sp, #20]
   47864:	b	47818 <__assert_fail@plt+0x34c60>
   47868:	b	4786c <__assert_fail@plt+0x34cb4>
   4786c:	movw	r0, #0
   47870:	strb	r0, [sp, #19]
   47874:	ldr	r0, [fp, #-12]
   47878:	str	r0, [fp, #-20]	; 0xffffffec
   4787c:	str	r0, [fp, #-16]
   47880:	ldr	r0, [fp, #-20]	; 0xffffffec
   47884:	ldrb	r0, [r0]
   47888:	ldr	r1, [fp, #-16]
   4788c:	strb	r0, [r1]
   47890:	sxtb	r0, r0
   47894:	cmp	r0, #0
   47898:	beq	478d8 <__assert_fail@plt+0x34d20>
   4789c:	ldr	r0, [fp, #-20]	; 0xffffffec
   478a0:	ldrb	r0, [r0]
   478a4:	cmp	r0, #46	; 0x2e
   478a8:	bne	478b8 <__assert_fail@plt+0x34d00>
   478ac:	movw	r0, #1
   478b0:	strb	r0, [sp, #19]
   478b4:	b	478c4 <__assert_fail@plt+0x34d0c>
   478b8:	ldr	r0, [fp, #-16]
   478bc:	add	r0, r0, #1
   478c0:	str	r0, [fp, #-16]
   478c4:	b	478c8 <__assert_fail@plt+0x34d10>
   478c8:	ldr	r0, [fp, #-20]	; 0xffffffec
   478cc:	add	r0, r0, #1
   478d0:	str	r0, [fp, #-20]	; 0xffffffec
   478d4:	b	47880 <__assert_fail@plt+0x34cc8>
   478d8:	ldrb	r0, [sp, #19]
   478dc:	tst	r0, #1
   478e0:	beq	4790c <__assert_fail@plt+0x34d54>
   478e4:	ldr	r0, [fp, #-8]
   478e8:	ldr	r1, [fp, #-12]
   478ec:	bl	47934 <__assert_fail@plt+0x34d7c>
   478f0:	str	r0, [sp, #20]
   478f4:	movw	r1, #0
   478f8:	cmp	r0, r1
   478fc:	beq	4790c <__assert_fail@plt+0x34d54>
   47900:	ldr	r0, [sp, #20]
   47904:	str	r0, [fp, #-4]
   47908:	b	47914 <__assert_fail@plt+0x34d5c>
   4790c:	movw	r0, #0
   47910:	str	r0, [fp, #-4]
   47914:	ldr	r0, [fp, #-4]
   47918:	mov	sp, fp
   4791c:	pop	{fp, pc}
   47920:	sub	sp, sp, #4
   47924:	strb	r0, [sp, #3]
   47928:	ldrb	r0, [sp, #3]
   4792c:	add	sp, sp, #4
   47930:	bx	lr
   47934:	push	{fp, lr}
   47938:	mov	fp, sp
   4793c:	sub	sp, sp, #16
   47940:	str	r0, [sp, #8]
   47944:	str	r1, [sp, #4]
   47948:	movw	r0, #52908	; 0xceac
   4794c:	movt	r0, #7
   47950:	str	r0, [sp]
   47954:	ldr	r0, [sp]
   47958:	ldr	r0, [r0]
   4795c:	movw	r1, #0
   47960:	cmp	r0, r1
   47964:	beq	479a0 <__assert_fail@plt+0x34de8>
   47968:	ldr	r0, [sp, #4]
   4796c:	ldr	r1, [sp]
   47970:	ldr	r1, [r1]
   47974:	bl	124c8 <strcmp@plt>
   47978:	cmp	r0, #0
   4797c:	bne	4798c <__assert_fail@plt+0x34dd4>
   47980:	ldr	r0, [sp]
   47984:	str	r0, [fp, #-4]
   47988:	b	47a58 <__assert_fail@plt+0x34ea0>
   4798c:	b	47990 <__assert_fail@plt+0x34dd8>
   47990:	ldr	r0, [sp]
   47994:	add	r0, r0, #12
   47998:	str	r0, [sp]
   4799c:	b	47954 <__assert_fail@plt+0x34d9c>
   479a0:	ldr	r0, [sp, #8]
   479a4:	add	r0, r0, #188	; 0xbc
   479a8:	str	r0, [sp]
   479ac:	ldr	r0, [sp]
   479b0:	ldr	r0, [r0]
   479b4:	movw	r1, #0
   479b8:	cmp	r0, r1
   479bc:	beq	479f8 <__assert_fail@plt+0x34e40>
   479c0:	ldr	r0, [sp, #4]
   479c4:	ldr	r1, [sp]
   479c8:	ldr	r1, [r1]
   479cc:	bl	124c8 <strcmp@plt>
   479d0:	cmp	r0, #0
   479d4:	bne	479e4 <__assert_fail@plt+0x34e2c>
   479d8:	ldr	r0, [sp]
   479dc:	str	r0, [fp, #-4]
   479e0:	b	47a58 <__assert_fail@plt+0x34ea0>
   479e4:	b	479e8 <__assert_fail@plt+0x34e30>
   479e8:	ldr	r0, [sp]
   479ec:	add	r0, r0, #12
   479f0:	str	r0, [sp]
   479f4:	b	479ac <__assert_fail@plt+0x34df4>
   479f8:	movw	r0, #52956	; 0xcedc
   479fc:	movt	r0, #7
   47a00:	str	r0, [sp]
   47a04:	ldr	r0, [sp]
   47a08:	ldr	r0, [r0]
   47a0c:	movw	r1, #0
   47a10:	cmp	r0, r1
   47a14:	beq	47a50 <__assert_fail@plt+0x34e98>
   47a18:	ldr	r0, [sp, #4]
   47a1c:	ldr	r1, [sp]
   47a20:	ldr	r1, [r1]
   47a24:	bl	124c8 <strcmp@plt>
   47a28:	cmp	r0, #0
   47a2c:	bne	47a3c <__assert_fail@plt+0x34e84>
   47a30:	ldr	r0, [sp]
   47a34:	str	r0, [fp, #-4]
   47a38:	b	47a58 <__assert_fail@plt+0x34ea0>
   47a3c:	b	47a40 <__assert_fail@plt+0x34e88>
   47a40:	ldr	r0, [sp]
   47a44:	add	r0, r0, #12
   47a48:	str	r0, [sp]
   47a4c:	b	47a04 <__assert_fail@plt+0x34e4c>
   47a50:	movw	r0, #0
   47a54:	str	r0, [fp, #-4]
   47a58:	ldr	r0, [fp, #-4]
   47a5c:	mov	sp, fp
   47a60:	pop	{fp, pc}
   47a64:	push	{r4, r5, fp, lr}
   47a68:	add	fp, sp, #8
   47a6c:	sub	sp, sp, #72	; 0x48
   47a70:	ldr	ip, [fp, #12]
   47a74:	ldr	lr, [fp, #8]
   47a78:	ldr	r4, [fp, #20]
   47a7c:	ldr	r5, [fp, #16]
   47a80:	str	r0, [sp, #40]	; 0x28
   47a84:	str	r1, [sp, #44]	; 0x2c
   47a88:	str	r2, [sp, #48]	; 0x30
   47a8c:	str	r3, [sp, #52]	; 0x34
   47a90:	str	lr, [sp, #56]	; 0x38
   47a94:	str	ip, [sp, #60]	; 0x3c
   47a98:	and	r0, r5, #1
   47a9c:	strb	r0, [sp, #39]	; 0x27
   47aa0:	ldr	r0, [sp, #48]	; 0x30
   47aa4:	ldr	r1, [sp, #52]	; 0x34
   47aa8:	str	r1, [sp, #28]
   47aac:	str	r0, [sp, #24]
   47ab0:	ldr	r0, [sp, #28]
   47ab4:	cmp	r0, #0
   47ab8:	str	r4, [sp, #20]
   47abc:	blt	47b3c <__assert_fail@plt+0x34f84>
   47ac0:	b	47ac4 <__assert_fail@plt+0x34f0c>
   47ac4:	ldr	r0, [sp, #56]	; 0x38
   47ac8:	cmp	r0, #2
   47acc:	bne	47b3c <__assert_fail@plt+0x34f84>
   47ad0:	ldr	r0, [sp, #24]
   47ad4:	ldr	r1, [sp, #28]
   47ad8:	subs	r2, r0, #69	; 0x45
   47adc:	sbcs	r3, r1, #0
   47ae0:	movw	ip, #1900	; 0x76c
   47ae4:	movwlt	ip, #2000	; 0x7d0
   47ae8:	adds	r0, r0, ip
   47aec:	adc	r1, r1, #0
   47af0:	str	r0, [sp, #24]
   47af4:	str	r1, [sp, #28]
   47af8:	ldrb	r0, [sp, #39]	; 0x27
   47afc:	tst	r0, #1
   47b00:	str	r3, [sp, #16]
   47b04:	str	r2, [sp, #12]
   47b08:	beq	47b38 <__assert_fail@plt+0x34f80>
   47b0c:	movw	r0, #56650	; 0xdd4a
   47b10:	movt	r0, #7
   47b14:	bl	12864 <gettext@plt>
   47b18:	ldr	r2, [sp, #48]	; 0x30
   47b1c:	ldr	r3, [sp, #52]	; 0x34
   47b20:	ldr	lr, [sp, #24]
   47b24:	ldr	r1, [sp, #28]
   47b28:	mov	ip, sp
   47b2c:	str	r1, [ip, #4]
   47b30:	str	lr, [ip]
   47b34:	bl	3e9c4 <__assert_fail@plt+0x2be0c>
   47b38:	b	47b3c <__assert_fail@plt+0x34f84>
   47b3c:	ldr	r0, [sp, #28]
   47b40:	cmn	r0, #1
   47b44:	bgt	47b9c <__assert_fail@plt+0x34fe4>
   47b48:	b	47b4c <__assert_fail@plt+0x34f94>
   47b4c:	ldr	r0, [sp, #24]
   47b50:	ldr	r1, [sp, #28]
   47b54:	ldr	r2, [fp, #20]
   47b58:	movw	r3, #63636	; 0xf894
   47b5c:	movt	r3, #65535	; 0xffff
   47b60:	subs	r0, r3, r0
   47b64:	mvn	r3, #0
   47b68:	sbc	r3, r3, r1
   47b6c:	orr	r1, r1, r3
   47b70:	mov	ip, #0
   47b74:	cmn	r1, #1
   47b78:	movwgt	ip, #1
   47b7c:	eor	r1, r3, r0, asr #31
   47b80:	cmp	r1, #0
   47b84:	movwne	r1, #1
   47b88:	orr	r1, ip, r1
   47b8c:	str	r0, [r2]
   47b90:	tst	r1, #1
   47b94:	bne	47c04 <__assert_fail@plt+0x3504c>
   47b98:	b	47c38 <__assert_fail@plt+0x35080>
   47b9c:	ldr	r0, [sp, #24]
   47ba0:	ldr	r1, [sp, #28]
   47ba4:	ldr	r2, [fp, #20]
   47ba8:	mov	r3, #0
   47bac:	cmn	r1, #1
   47bb0:	mov	ip, r3
   47bb4:	movwgt	ip, #1
   47bb8:	movw	lr, #1900	; 0x76c
   47bbc:	subs	r0, r0, lr
   47bc0:	sbc	lr, r1, #0
   47bc4:	cmn	lr, #1
   47bc8:	mov	r4, r3
   47bcc:	movwgt	r4, #1
   47bd0:	sub	r5, ip, r4
   47bd4:	cmp	ip, r4
   47bd8:	movwne	r5, #1
   47bdc:	cmp	r1, #0
   47be0:	movwlt	r3, #1
   47be4:	and	r1, r3, r5
   47be8:	eor	r3, lr, r0, asr #31
   47bec:	cmp	r3, #0
   47bf0:	movwne	r3, #1
   47bf4:	orr	r1, r1, r3
   47bf8:	str	r0, [r2]
   47bfc:	tst	r1, #1
   47c00:	beq	47c38 <__assert_fail@plt+0x35080>
   47c04:	ldrb	r0, [sp, #39]	; 0x27
   47c08:	tst	r0, #1
   47c0c:	beq	47c28 <__assert_fail@plt+0x35070>
   47c10:	movw	r0, #56694	; 0xdd76
   47c14:	movt	r0, #7
   47c18:	bl	12864 <gettext@plt>
   47c1c:	ldr	r2, [sp, #24]
   47c20:	ldr	r3, [sp, #28]
   47c24:	bl	3e9c4 <__assert_fail@plt+0x2be0c>
   47c28:	movw	r0, #0
   47c2c:	and	r0, r0, #1
   47c30:	strb	r0, [fp, #-9]
   47c34:	b	47c44 <__assert_fail@plt+0x3508c>
   47c38:	movw	r0, #1
   47c3c:	and	r0, r0, #1
   47c40:	strb	r0, [fp, #-9]
   47c44:	ldrb	r0, [fp, #-9]
   47c48:	and	r0, r0, #1
   47c4c:	sub	sp, fp, #8
   47c50:	pop	{r4, r5, fp, pc}
   47c54:	sub	sp, sp, #104	; 0x68
   47c58:	str	r0, [sp, #88]	; 0x58
   47c5c:	str	r1, [sp, #92]	; 0x5c
   47c60:	str	r2, [sp, #84]	; 0x54
   47c64:	ldr	r0, [sp, #84]	; 0x54
   47c68:	cmp	r0, #0
   47c6c:	str	r0, [sp, #80]	; 0x50
   47c70:	beq	47d08 <__assert_fail@plt+0x35150>
   47c74:	b	47c78 <__assert_fail@plt+0x350c0>
   47c78:	ldr	r0, [sp, #80]	; 0x50
   47c7c:	cmp	r0, #1
   47c80:	beq	47d98 <__assert_fail@plt+0x351e0>
   47c84:	b	47c88 <__assert_fail@plt+0x350d0>
   47c88:	ldr	r0, [sp, #80]	; 0x50
   47c8c:	cmp	r0, #2
   47c90:	beq	47c9c <__assert_fail@plt+0x350e4>
   47c94:	b	47c98 <__assert_fail@plt+0x350e0>
   47c98:	b	47c9c <__assert_fail@plt+0x350e4>
   47c9c:	ldr	r0, [sp, #92]	; 0x5c
   47ca0:	cmp	r0, #0
   47ca4:	blt	47ce0 <__assert_fail@plt+0x35128>
   47ca8:	b	47cac <__assert_fail@plt+0x350f4>
   47cac:	ldr	r0, [sp, #88]	; 0x58
   47cb0:	ldr	r1, [sp, #92]	; 0x5c
   47cb4:	rsbs	r0, r0, #23
   47cb8:	rscs	r1, r1, #0
   47cbc:	str	r0, [sp, #76]	; 0x4c
   47cc0:	str	r1, [sp, #72]	; 0x48
   47cc4:	blt	47ce0 <__assert_fail@plt+0x35128>
   47cc8:	b	47ccc <__assert_fail@plt+0x35114>
   47ccc:	ldr	r0, [sp, #88]	; 0x58
   47cd0:	ldr	r1, [sp, #92]	; 0x5c
   47cd4:	str	r0, [sp, #68]	; 0x44
   47cd8:	str	r1, [sp, #64]	; 0x40
   47cdc:	b	47cf4 <__assert_fail@plt+0x3513c>
   47ce0:	mvn	r0, #0
   47ce4:	mov	r1, r0
   47ce8:	str	r1, [sp, #68]	; 0x44
   47cec:	str	r0, [sp, #64]	; 0x40
   47cf0:	b	47cf4 <__assert_fail@plt+0x3513c>
   47cf4:	ldr	r0, [sp, #64]	; 0x40
   47cf8:	ldr	r1, [sp, #68]	; 0x44
   47cfc:	str	r1, [sp, #100]	; 0x64
   47d00:	str	r0, [sp, #60]	; 0x3c
   47d04:	b	47e30 <__assert_fail@plt+0x35278>
   47d08:	ldr	r0, [sp, #88]	; 0x58
   47d0c:	ldr	r1, [sp, #92]	; 0x5c
   47d10:	subs	r0, r0, #1
   47d14:	sbcs	r1, r1, #0
   47d18:	str	r0, [sp, #56]	; 0x38
   47d1c:	str	r1, [sp, #52]	; 0x34
   47d20:	blt	47d5c <__assert_fail@plt+0x351a4>
   47d24:	b	47d28 <__assert_fail@plt+0x35170>
   47d28:	ldr	r0, [sp, #88]	; 0x58
   47d2c:	ldr	r1, [sp, #92]	; 0x5c
   47d30:	rsbs	r0, r0, #11
   47d34:	rscs	r1, r1, #0
   47d38:	str	r0, [sp, #48]	; 0x30
   47d3c:	str	r1, [sp, #44]	; 0x2c
   47d40:	blt	47d5c <__assert_fail@plt+0x351a4>
   47d44:	b	47d48 <__assert_fail@plt+0x35190>
   47d48:	ldr	r0, [sp, #88]	; 0x58
   47d4c:	ldr	r1, [sp, #92]	; 0x5c
   47d50:	str	r0, [sp, #40]	; 0x28
   47d54:	str	r1, [sp, #36]	; 0x24
   47d58:	b	47d84 <__assert_fail@plt+0x351cc>
   47d5c:	ldr	r0, [sp, #88]	; 0x58
   47d60:	ldr	r1, [sp, #92]	; 0x5c
   47d64:	eor	r0, r0, #12
   47d68:	orr	r0, r0, r1
   47d6c:	cmp	r0, #0
   47d70:	mvnne	r0, #0
   47d74:	mov	r1, r0
   47d78:	str	r1, [sp, #40]	; 0x28
   47d7c:	str	r0, [sp, #36]	; 0x24
   47d80:	b	47d84 <__assert_fail@plt+0x351cc>
   47d84:	ldr	r0, [sp, #36]	; 0x24
   47d88:	ldr	r1, [sp, #40]	; 0x28
   47d8c:	str	r1, [sp, #100]	; 0x64
   47d90:	str	r0, [sp, #32]
   47d94:	b	47e30 <__assert_fail@plt+0x35278>
   47d98:	ldr	r0, [sp, #88]	; 0x58
   47d9c:	ldr	r1, [sp, #92]	; 0x5c
   47da0:	subs	r0, r0, #1
   47da4:	sbcs	r1, r1, #0
   47da8:	str	r0, [sp, #28]
   47dac:	str	r1, [sp, #24]
   47db0:	blt	47df4 <__assert_fail@plt+0x3523c>
   47db4:	b	47db8 <__assert_fail@plt+0x35200>
   47db8:	ldr	r0, [sp, #88]	; 0x58
   47dbc:	ldr	r1, [sp, #92]	; 0x5c
   47dc0:	rsbs	r0, r0, #11
   47dc4:	rscs	r1, r1, #0
   47dc8:	str	r0, [sp, #20]
   47dcc:	str	r1, [sp, #16]
   47dd0:	blt	47df4 <__assert_fail@plt+0x3523c>
   47dd4:	b	47dd8 <__assert_fail@plt+0x35220>
   47dd8:	ldr	r0, [sp, #88]	; 0x58
   47ddc:	ldr	r1, [sp, #92]	; 0x5c
   47de0:	adds	r0, r0, #12
   47de4:	adc	r1, r1, #0
   47de8:	str	r0, [sp, #12]
   47dec:	str	r1, [sp, #8]
   47df0:	b	47e20 <__assert_fail@plt+0x35268>
   47df4:	ldr	r0, [sp, #88]	; 0x58
   47df8:	ldr	r1, [sp, #92]	; 0x5c
   47dfc:	eor	r0, r0, #12
   47e00:	orr	r0, r0, r1
   47e04:	mvn	r1, #0
   47e08:	cmp	r0, #0
   47e0c:	movweq	r1, #12
   47e10:	asr	r0, r1, #31
   47e14:	str	r1, [sp, #12]
   47e18:	str	r0, [sp, #8]
   47e1c:	b	47e20 <__assert_fail@plt+0x35268>
   47e20:	ldr	r0, [sp, #8]
   47e24:	ldr	r1, [sp, #12]
   47e28:	str	r1, [sp, #100]	; 0x64
   47e2c:	str	r0, [sp, #4]
   47e30:	ldr	r0, [sp, #100]	; 0x64
   47e34:	add	sp, sp, #104	; 0x68
   47e38:	bx	lr
   47e3c:	push	{fp, lr}
   47e40:	mov	fp, sp
   47e44:	sub	sp, sp, #32
   47e48:	str	r0, [fp, #-4]
   47e4c:	str	r1, [fp, #-8]
   47e50:	str	r2, [fp, #-12]
   47e54:	ldr	r0, [fp, #-8]
   47e58:	ldr	r1, [fp, #-12]
   47e5c:	ldr	r2, [fp, #-4]
   47e60:	ldr	r3, [r2, #8]
   47e64:	ldr	r2, [fp, #-4]
   47e68:	ldr	r2, [r2, #4]
   47e6c:	ldr	ip, [fp, #-4]
   47e70:	ldr	ip, [ip]
   47e74:	movw	lr, #56725	; 0xdd95
   47e78:	movt	lr, #7
   47e7c:	str	r2, [sp, #16]
   47e80:	mov	r2, lr
   47e84:	ldr	lr, [sp, #16]
   47e88:	str	lr, [sp]
   47e8c:	str	ip, [sp, #4]
   47e90:	bl	128e8 <snprintf@plt>
   47e94:	ldr	r1, [fp, #-8]
   47e98:	str	r0, [sp, #12]
   47e9c:	mov	r0, r1
   47ea0:	mov	sp, fp
   47ea4:	pop	{fp, pc}
   47ea8:	sub	sp, sp, #12
   47eac:	str	r0, [sp, #4]
   47eb0:	str	r1, [sp]
   47eb4:	ldr	r0, [sp]
   47eb8:	ldr	r0, [r0, #24]
   47ebc:	cmp	r0, #0
   47ec0:	bge	47ed4 <__assert_fail@plt+0x3531c>
   47ec4:	movw	r0, #0
   47ec8:	and	r0, r0, #1
   47ecc:	strb	r0, [sp, #11]
   47ed0:	b	47f7c <__assert_fail@plt+0x353c4>
   47ed4:	ldr	r0, [sp, #4]
   47ed8:	ldr	r0, [r0]
   47edc:	ldr	r1, [sp]
   47ee0:	ldr	r1, [r1]
   47ee4:	eor	r0, r0, r1
   47ee8:	ldr	r1, [sp, #4]
   47eec:	ldr	r1, [r1, #4]
   47ef0:	ldr	r2, [sp]
   47ef4:	ldr	r2, [r2, #4]
   47ef8:	eor	r1, r1, r2
   47efc:	orr	r0, r0, r1
   47f00:	ldr	r1, [sp, #4]
   47f04:	ldr	r1, [r1, #8]
   47f08:	ldr	r2, [sp]
   47f0c:	ldr	r2, [r2, #8]
   47f10:	eor	r1, r1, r2
   47f14:	orr	r0, r0, r1
   47f18:	ldr	r1, [sp, #4]
   47f1c:	ldr	r1, [r1, #12]
   47f20:	ldr	r2, [sp]
   47f24:	ldr	r2, [r2, #12]
   47f28:	eor	r1, r1, r2
   47f2c:	orr	r0, r0, r1
   47f30:	ldr	r1, [sp, #4]
   47f34:	ldr	r1, [r1, #16]
   47f38:	ldr	r2, [sp]
   47f3c:	ldr	r2, [r2, #16]
   47f40:	eor	r1, r1, r2
   47f44:	orr	r0, r0, r1
   47f48:	ldr	r1, [sp, #4]
   47f4c:	ldr	r1, [r1, #20]
   47f50:	ldr	r2, [sp]
   47f54:	ldr	r2, [r2, #20]
   47f58:	eor	r1, r1, r2
   47f5c:	orr	r0, r0, r1
   47f60:	cmp	r0, #0
   47f64:	movw	r0, #0
   47f68:	movne	r0, #1
   47f6c:	mvn	r1, #0
   47f70:	eor	r0, r0, r1
   47f74:	and	r0, r0, #1
   47f78:	strb	r0, [sp, #11]
   47f7c:	ldrb	r0, [sp, #11]
   47f80:	and	r0, r0, #1
   47f84:	add	sp, sp, #12
   47f88:	bx	lr
   47f8c:	push	{r4, r5, r6, sl, fp, lr}
   47f90:	add	fp, sp, #16
   47f94:	sub	sp, sp, #192	; 0xc0
   47f98:	str	r0, [fp, #-20]	; 0xffffffec
   47f9c:	str	r1, [fp, #-24]	; 0xffffffe8
   47fa0:	str	r2, [fp, #-28]	; 0xffffffe4
   47fa4:	and	r0, r3, #1
   47fa8:	strb	r0, [fp, #-29]	; 0xffffffe3
   47fac:	ldr	r0, [fp, #-20]	; 0xffffffec
   47fb0:	ldr	r0, [r0]
   47fb4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   47fb8:	ldr	r1, [r1]
   47fbc:	cmp	r0, r1
   47fc0:	movw	r0, #0
   47fc4:	moveq	r0, #1
   47fc8:	and	r0, r0, #1
   47fcc:	strb	r0, [sp, #71]	; 0x47
   47fd0:	ldr	r0, [fp, #-20]	; 0xffffffec
   47fd4:	ldr	r0, [r0, #4]
   47fd8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   47fdc:	ldr	r1, [r1, #4]
   47fe0:	cmp	r0, r1
   47fe4:	movw	r0, #0
   47fe8:	moveq	r0, #1
   47fec:	and	r0, r0, #1
   47ff0:	strb	r0, [sp, #70]	; 0x46
   47ff4:	ldr	r0, [fp, #-20]	; 0xffffffec
   47ff8:	ldr	r0, [r0, #8]
   47ffc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   48000:	ldr	r1, [r1, #8]
   48004:	cmp	r0, r1
   48008:	movw	r0, #0
   4800c:	moveq	r0, #1
   48010:	and	r0, r0, #1
   48014:	strb	r0, [sp, #69]	; 0x45
   48018:	ldr	r0, [fp, #-20]	; 0xffffffec
   4801c:	ldr	r0, [r0, #12]
   48020:	ldr	r1, [fp, #-24]	; 0xffffffe8
   48024:	ldr	r1, [r1, #12]
   48028:	cmp	r0, r1
   4802c:	movw	r0, #0
   48030:	moveq	r0, #1
   48034:	and	r0, r0, #1
   48038:	strb	r0, [sp, #68]	; 0x44
   4803c:	ldr	r0, [fp, #-20]	; 0xffffffec
   48040:	ldr	r0, [r0, #16]
   48044:	ldr	r1, [fp, #-24]	; 0xffffffe8
   48048:	ldr	r1, [r1, #16]
   4804c:	cmp	r0, r1
   48050:	movw	r0, #0
   48054:	moveq	r0, #1
   48058:	and	r0, r0, #1
   4805c:	strb	r0, [sp, #67]	; 0x43
   48060:	ldr	r0, [fp, #-20]	; 0xffffffec
   48064:	ldr	r0, [r0, #20]
   48068:	ldr	r1, [fp, #-24]	; 0xffffffe8
   4806c:	ldr	r1, [r1, #20]
   48070:	cmp	r0, r1
   48074:	movw	r0, #0
   48078:	moveq	r0, #1
   4807c:	and	r0, r0, #1
   48080:	strb	r0, [sp, #66]	; 0x42
   48084:	ldrb	r0, [sp, #71]	; 0x47
   48088:	tst	r0, #1
   4808c:	movw	r0, #0
   48090:	str	r0, [sp, #60]	; 0x3c
   48094:	beq	480f0 <__assert_fail@plt+0x35538>
   48098:	ldrb	r0, [sp, #70]	; 0x46
   4809c:	tst	r0, #1
   480a0:	movw	r0, #0
   480a4:	str	r0, [sp, #60]	; 0x3c
   480a8:	beq	480f0 <__assert_fail@plt+0x35538>
   480ac:	ldrb	r0, [sp, #69]	; 0x45
   480b0:	tst	r0, #1
   480b4:	movw	r0, #0
   480b8:	str	r0, [sp, #60]	; 0x3c
   480bc:	bne	480f0 <__assert_fail@plt+0x35538>
   480c0:	ldrb	r0, [sp, #68]	; 0x44
   480c4:	tst	r0, #1
   480c8:	movw	r0, #0
   480cc:	str	r0, [sp, #60]	; 0x3c
   480d0:	beq	480f0 <__assert_fail@plt+0x35538>
   480d4:	ldrb	r0, [sp, #67]	; 0x43
   480d8:	tst	r0, #1
   480dc:	movw	r0, #0
   480e0:	str	r0, [sp, #60]	; 0x3c
   480e4:	beq	480f0 <__assert_fail@plt+0x35538>
   480e8:	ldrb	r0, [sp, #66]	; 0x42
   480ec:	str	r0, [sp, #60]	; 0x3c
   480f0:	ldr	r0, [sp, #60]	; 0x3c
   480f4:	and	r0, r0, #1
   480f8:	strb	r0, [sp, #65]	; 0x41
   480fc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   48100:	bl	3e9ac <__assert_fail@plt+0x2bdf4>
   48104:	tst	r0, #1
   48108:	bne	48110 <__assert_fail@plt+0x35558>
   4810c:	b	483ac <__assert_fail@plt+0x357f4>
   48110:	movw	r0, #56740	; 0xdda4
   48114:	movt	r0, #7
   48118:	bl	12864 <gettext@plt>
   4811c:	bl	3e9c4 <__assert_fail@plt+0x2be0c>
   48120:	movw	r0, #56773	; 0xddc5
   48124:	movt	r0, #7
   48128:	bl	12864 <gettext@plt>
   4812c:	add	r2, sp, #79	; 0x4f
   48130:	ldr	lr, [fp, #-20]	; 0xffffffec
   48134:	ldr	r1, [fp, #-28]	; 0xffffffe4
   48138:	str	r0, [sp, #56]	; 0x38
   4813c:	mov	r0, lr
   48140:	movw	r3, #100	; 0x64
   48144:	bl	483b4 <__assert_fail@plt+0x357fc>
   48148:	ldr	r1, [sp, #56]	; 0x38
   4814c:	str	r0, [sp, #52]	; 0x34
   48150:	mov	r0, r1
   48154:	ldr	r1, [sp, #52]	; 0x34
   48158:	bl	3e9c4 <__assert_fail@plt+0x2be0c>
   4815c:	movw	r0, #56803	; 0xdde3
   48160:	movt	r0, #7
   48164:	bl	12864 <gettext@plt>
   48168:	add	r2, sp, #79	; 0x4f
   4816c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   48170:	ldr	r3, [fp, #-28]	; 0xffffffe4
   48174:	str	r0, [sp, #48]	; 0x30
   48178:	mov	r0, r1
   4817c:	mov	r1, r3
   48180:	movw	r3, #100	; 0x64
   48184:	bl	483b4 <__assert_fail@plt+0x357fc>
   48188:	ldr	r1, [sp, #48]	; 0x30
   4818c:	str	r0, [sp, #44]	; 0x2c
   48190:	mov	r0, r1
   48194:	ldr	r1, [sp, #44]	; 0x2c
   48198:	bl	3e9c4 <__assert_fail@plt+0x2be0c>
   4819c:	add	r0, sp, #79	; 0x4f
   481a0:	ldrb	r1, [sp, #66]	; 0x42
   481a4:	tst	r1, #1
   481a8:	movw	r1, #56890	; 0xde3a
   481ac:	movt	r1, #7
   481b0:	movw	r2, #39197	; 0x991d
   481b4:	movt	r2, #7
   481b8:	movne	r1, r2
   481bc:	ldrb	r3, [sp, #67]	; 0x43
   481c0:	tst	r3, #1
   481c4:	movw	r3, #56892	; 0xde3c
   481c8:	movt	r3, #7
   481cc:	mov	lr, r3
   481d0:	movne	lr, r2
   481d4:	ldrb	ip, [sp, #68]	; 0x44
   481d8:	tst	ip, #1
   481dc:	mov	ip, r3
   481e0:	movne	ip, r2
   481e4:	ldrb	r4, [sp, #69]	; 0x45
   481e8:	tst	r4, #1
   481ec:	mov	r4, r3
   481f0:	movne	r4, r2
   481f4:	ldrb	r5, [sp, #70]	; 0x46
   481f8:	tst	r5, #1
   481fc:	mov	r5, r3
   48200:	movne	r5, r2
   48204:	ldrb	r6, [sp, #71]	; 0x47
   48208:	tst	r6, #1
   4820c:	movne	r3, r2
   48210:	movw	r2, #100	; 0x64
   48214:	str	r1, [sp, #40]	; 0x28
   48218:	mov	r1, r2
   4821c:	movw	r2, #56833	; 0xde01
   48220:	movt	r2, #7
   48224:	ldr	r6, [sp, #40]	; 0x28
   48228:	str	r3, [sp, #36]	; 0x24
   4822c:	mov	r3, r6
   48230:	str	lr, [sp]
   48234:	str	ip, [sp, #4]
   48238:	str	r4, [sp, #8]
   4823c:	str	r5, [sp, #12]
   48240:	ldr	ip, [sp, #36]	; 0x24
   48244:	str	ip, [sp, #16]
   48248:	bl	128e8 <snprintf@plt>
   4824c:	str	r0, [sp, #72]	; 0x48
   48250:	ldr	r0, [sp, #72]	; 0x48
   48254:	movw	r1, #0
   48258:	cmp	r1, r0
   4825c:	bgt	482ec <__assert_fail@plt+0x35734>
   48260:	ldr	r0, [sp, #72]	; 0x48
   48264:	movw	r1, #99	; 0x63
   48268:	cmp	r1, r0
   4826c:	bcs	48278 <__assert_fail@plt+0x356c0>
   48270:	movw	r0, #99	; 0x63
   48274:	str	r0, [sp, #72]	; 0x48
   48278:	b	4827c <__assert_fail@plt+0x356c4>
   4827c:	ldr	r0, [sp, #72]	; 0x48
   48280:	movw	r1, #0
   48284:	cmp	r1, r0
   48288:	movw	r0, #0
   4828c:	str	r0, [sp, #32]
   48290:	bge	482b8 <__assert_fail@plt+0x35700>
   48294:	ldr	r0, [sp, #72]	; 0x48
   48298:	sub	r0, r0, #1
   4829c:	add	r1, sp, #79	; 0x4f
   482a0:	add	r0, r1, r0
   482a4:	ldrb	r0, [r0]
   482a8:	cmp	r0, #32
   482ac:	movw	r0, #0
   482b0:	moveq	r0, #1
   482b4:	str	r0, [sp, #32]
   482b8:	ldr	r0, [sp, #32]
   482bc:	tst	r0, #1
   482c0:	beq	482d8 <__assert_fail@plt+0x35720>
   482c4:	ldr	r0, [sp, #72]	; 0x48
   482c8:	mvn	r1, #0
   482cc:	add	r0, r0, r1
   482d0:	str	r0, [sp, #72]	; 0x48
   482d4:	b	4827c <__assert_fail@plt+0x356c4>
   482d8:	ldr	r0, [sp, #72]	; 0x48
   482dc:	add	r1, sp, #79	; 0x4f
   482e0:	add	r0, r1, r0
   482e4:	movw	r1, #0
   482e8:	strb	r1, [r0]
   482ec:	add	r1, sp, #79	; 0x4f
   482f0:	movw	r0, #57048	; 0xded8
   482f4:	movt	r0, #7
   482f8:	bl	3e9c4 <__assert_fail@plt+0x2be0c>
   482fc:	movw	r0, #56895	; 0xde3f
   48300:	movt	r0, #7
   48304:	bl	12864 <gettext@plt>
   48308:	bl	3e9c4 <__assert_fail@plt+0x2be0c>
   4830c:	ldrb	r0, [sp, #65]	; 0x41
   48310:	tst	r0, #1
   48314:	beq	48328 <__assert_fail@plt+0x35770>
   48318:	movw	r0, #56919	; 0xde57
   4831c:	movt	r0, #7
   48320:	bl	12864 <gettext@plt>
   48324:	bl	3e9c4 <__assert_fail@plt+0x2be0c>
   48328:	ldrb	r0, [sp, #68]	; 0x44
   4832c:	tst	r0, #1
   48330:	bne	48350 <__assert_fail@plt+0x35798>
   48334:	ldrb	r0, [sp, #67]	; 0x43
   48338:	tst	r0, #1
   4833c:	bne	48350 <__assert_fail@plt+0x35798>
   48340:	movw	r0, #56969	; 0xde89
   48344:	movt	r0, #7
   48348:	bl	12864 <gettext@plt>
   4834c:	bl	3e9c4 <__assert_fail@plt+0x2be0c>
   48350:	movw	r0, #57008	; 0xdeb0
   48354:	movt	r0, #7
   48358:	bl	12864 <gettext@plt>
   4835c:	bl	3e9c4 <__assert_fail@plt+0x2be0c>
   48360:	ldrb	r0, [fp, #-29]	; 0xffffffe3
   48364:	tst	r0, #1
   48368:	beq	48380 <__assert_fail@plt+0x357c8>
   4836c:	movw	r0, #57052	; 0xdedc
   48370:	movt	r0, #7
   48374:	bl	12864 <gettext@plt>
   48378:	str	r0, [sp, #28]
   4837c:	b	48390 <__assert_fail@plt+0x357d8>
   48380:	movw	r0, #57071	; 0xdeef
   48384:	movt	r0, #7
   48388:	bl	12864 <gettext@plt>
   4838c:	str	r0, [sp, #28]
   48390:	ldr	r0, [sp, #28]
   48394:	movw	r1, #57041	; 0xded1
   48398:	movt	r1, #7
   4839c:	str	r0, [sp, #24]
   483a0:	mov	r0, r1
   483a4:	ldr	r1, [sp, #24]
   483a8:	bl	3e9c4 <__assert_fail@plt+0x2be0c>
   483ac:	sub	sp, fp, #16
   483b0:	pop	{r4, r5, r6, sl, fp, pc}
   483b4:	push	{fp, lr}
   483b8:	mov	fp, sp
   483bc:	sub	sp, sp, #80	; 0x50
   483c0:	str	r0, [fp, #-4]
   483c4:	str	r1, [fp, #-8]
   483c8:	str	r2, [fp, #-12]
   483cc:	str	r3, [fp, #-16]
   483d0:	ldr	r0, [fp, #-12]
   483d4:	ldr	r1, [fp, #-16]
   483d8:	ldr	r3, [fp, #-4]
   483dc:	movw	r2, #57088	; 0xdf00
   483e0:	movt	r2, #7
   483e4:	movw	ip, #0
   483e8:	str	ip, [sp]
   483ec:	str	ip, [sp, #4]
   483f0:	bl	73768 <__assert_fail@plt+0x60bb0>
   483f4:	str	r0, [fp, #-20]	; 0xffffffec
   483f8:	ldr	r0, [fp, #-8]
   483fc:	movw	r1, #0
   48400:	cmp	r0, r1
   48404:	beq	484c8 <__assert_fail@plt+0x35910>
   48408:	ldr	r0, [fp, #-20]	; 0xffffffec
   4840c:	ldr	r1, [fp, #-16]
   48410:	cmp	r0, r1
   48414:	bge	484c8 <__assert_fail@plt+0x35910>
   48418:	ldr	r0, [fp, #-8]
   4841c:	ldr	r0, [r0, #176]	; 0xb0
   48420:	cmp	r0, #0
   48424:	beq	484c8 <__assert_fail@plt+0x35910>
   48428:	ldr	r0, [fp, #-8]
   4842c:	ldr	r0, [r0, #24]
   48430:	str	r0, [fp, #-24]	; 0xffffffe8
   48434:	ldr	r0, [fp, #-8]
   48438:	ldr	r0, [r0, #164]	; 0xa4
   4843c:	cmp	r0, #0
   48440:	beq	48474 <__assert_fail@plt+0x358bc>
   48444:	ldr	r0, [fp, #-8]
   48448:	ldr	r0, [r0, #176]	; 0xb0
   4844c:	cmp	r0, #0
   48450:	bne	48474 <__assert_fail@plt+0x358bc>
   48454:	ldr	r0, [fp, #-8]
   48458:	ldr	r0, [r0, #20]
   4845c:	movw	r1, #0
   48460:	cmp	r1, r0
   48464:	bge	48474 <__assert_fail@plt+0x358bc>
   48468:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4846c:	add	r0, r0, #3600	; 0xe10
   48470:	str	r0, [fp, #-24]	; 0xffffffe8
   48474:	add	r1, sp, #29
   48478:	ldr	r0, [fp, #-12]
   4847c:	ldr	r2, [fp, #-20]	; 0xffffffec
   48480:	add	r0, r0, r2
   48484:	ldr	r2, [fp, #-16]
   48488:	ldr	r3, [fp, #-20]	; 0xffffffec
   4848c:	sub	r2, r2, r3
   48490:	ldr	r3, [fp, #-24]	; 0xffffffe8
   48494:	str	r0, [sp, #24]
   48498:	mov	r0, r3
   4849c:	str	r2, [sp, #20]
   484a0:	bl	4723c <__assert_fail@plt+0x34684>
   484a4:	ldr	r1, [sp, #24]
   484a8:	str	r0, [sp, #16]
   484ac:	mov	r0, r1
   484b0:	ldr	r1, [sp, #20]
   484b4:	movw	r2, #57114	; 0xdf1a
   484b8:	movt	r2, #7
   484bc:	ldr	r3, [sp, #16]
   484c0:	bl	128e8 <snprintf@plt>
   484c4:	str	r0, [sp, #12]
   484c8:	ldr	r0, [fp, #-12]
   484cc:	mov	sp, fp
   484d0:	pop	{fp, pc}
   484d4:	push	{r4, sl, fp, lr}
   484d8:	add	fp, sp, #8
   484dc:	sub	sp, sp, #64	; 0x40
   484e0:	sub	r3, fp, #33	; 0x21
   484e4:	str	r0, [fp, #-12]
   484e8:	str	r1, [fp, #-16]
   484ec:	str	r2, [fp, #-20]	; 0xffffffec
   484f0:	ldr	r0, [fp, #-16]
   484f4:	ldr	r1, [fp, #-20]	; 0xffffffec
   484f8:	ldr	r2, [fp, #-12]
   484fc:	ldr	r2, [r2, #20]
   48500:	str	r0, [sp, #32]
   48504:	mov	r0, r2
   48508:	str	r1, [sp, #28]
   4850c:	mov	r1, r3
   48510:	bl	4857c <__assert_fail@plt+0x359c4>
   48514:	ldr	r1, [fp, #-12]
   48518:	ldr	r1, [r1, #16]
   4851c:	add	r1, r1, #1
   48520:	ldr	r2, [fp, #-12]
   48524:	ldr	r2, [r2, #12]
   48528:	ldr	r3, [sp, #32]
   4852c:	str	r0, [sp, #24]
   48530:	mov	r0, r3
   48534:	ldr	lr, [sp, #28]
   48538:	str	r1, [sp, #20]
   4853c:	mov	r1, lr
   48540:	movw	ip, #57121	; 0xdf21
   48544:	movt	ip, #7
   48548:	str	r2, [sp, #16]
   4854c:	mov	r2, ip
   48550:	ldr	r3, [sp, #24]
   48554:	ldr	ip, [sp, #20]
   48558:	str	ip, [sp]
   4855c:	ldr	r4, [sp, #16]
   48560:	str	r4, [sp, #4]
   48564:	bl	128e8 <snprintf@plt>
   48568:	ldr	r1, [fp, #-16]
   4856c:	str	r0, [sp, #12]
   48570:	mov	r0, r1
   48574:	sub	sp, fp, #8
   48578:	pop	{r4, sl, fp, pc}
   4857c:	push	{fp, lr}
   48580:	mov	fp, sp
   48584:	sub	sp, sp, #32
   48588:	str	r0, [fp, #-4]
   4858c:	str	r1, [fp, #-8]
   48590:	ldr	r0, [fp, #-8]
   48594:	ldr	r1, [fp, #-4]
   48598:	movw	r2, #57142	; 0xdf36
   4859c:	movt	r2, #7
   485a0:	add	r3, r2, #1
   485a4:	movw	ip, #63635	; 0xf893
   485a8:	movt	ip, #65535	; 0xffff
   485ac:	cmp	r1, ip
   485b0:	movgt	r2, r3
   485b4:	movw	r3, #34079	; 0x851f
   485b8:	movt	r3, #20971	; 0x51eb
   485bc:	smmul	r1, r1, r3
   485c0:	asr	ip, r1, #5
   485c4:	add	r1, ip, r1, lsr #31
   485c8:	add	r1, r1, #19
   485cc:	str	r0, [fp, #-12]
   485d0:	mov	r0, r1
   485d4:	str	r2, [sp, #16]
   485d8:	str	r3, [sp, #12]
   485dc:	bl	129b4 <abs@plt>
   485e0:	ldr	r1, [fp, #-4]
   485e4:	ldr	r2, [sp, #12]
   485e8:	smmul	r3, r1, r2
   485ec:	asr	ip, r3, #5
   485f0:	add	r3, ip, r3, lsr #31
   485f4:	mov	ip, #100	; 0x64
   485f8:	mls	r1, r3, ip, r1
   485fc:	str	r0, [sp, #8]
   48600:	mov	r0, r1
   48604:	bl	129b4 <abs@plt>
   48608:	ldr	r1, [fp, #-12]
   4860c:	str	r0, [sp, #4]
   48610:	mov	r0, r1
   48614:	ldr	r1, [sp, #16]
   48618:	ldr	r2, [sp, #8]
   4861c:	ldr	r3, [sp, #4]
   48620:	bl	12a5c <sprintf@plt>
   48624:	ldr	r1, [fp, #-8]
   48628:	str	r0, [sp]
   4862c:	mov	r0, r1
   48630:	mov	sp, fp
   48634:	pop	{fp, pc}
   48638:	push	{fp, lr}
   4863c:	mov	fp, sp
   48640:	sub	sp, sp, #24
   48644:	str	r0, [fp, #-4]
   48648:	ldr	r0, [fp, #-4]
   4864c:	movw	r1, #0
   48650:	cmp	r0, r1
   48654:	bne	48678 <__assert_fail@plt+0x35ac0>
   48658:	movw	r0, #63272	; 0xf728
   4865c:	movt	r0, #8
   48660:	ldr	r1, [r0]
   48664:	movw	r0, #57152	; 0xdf40
   48668:	movt	r0, #7
   4866c:	bl	12b4c <fputs@plt>
   48670:	str	r0, [sp, #8]
   48674:	bl	12b64 <abort@plt>
   48678:	ldr	r0, [fp, #-4]
   4867c:	movw	r1, #47	; 0x2f
   48680:	bl	12a14 <strrchr@plt>
   48684:	str	r0, [fp, #-8]
   48688:	ldr	r0, [fp, #-8]
   4868c:	movw	r1, #0
   48690:	cmp	r0, r1
   48694:	beq	486a8 <__assert_fail@plt+0x35af0>
   48698:	ldr	r0, [fp, #-8]
   4869c:	add	r0, r0, #1
   486a0:	str	r0, [sp, #4]
   486a4:	b	486b0 <__assert_fail@plt+0x35af8>
   486a8:	ldr	r0, [fp, #-4]
   486ac:	str	r0, [sp, #4]
   486b0:	ldr	r0, [sp, #4]
   486b4:	str	r0, [sp, #12]
   486b8:	ldr	r0, [sp, #12]
   486bc:	ldr	r1, [fp, #-4]
   486c0:	sub	r0, r0, r1
   486c4:	cmp	r0, #7
   486c8:	blt	48734 <__assert_fail@plt+0x35b7c>
   486cc:	ldr	r0, [sp, #12]
   486d0:	mvn	r1, #6
   486d4:	add	r0, r0, r1
   486d8:	movw	r1, #57208	; 0xdf78
   486dc:	movt	r1, #7
   486e0:	movw	r2, #7
   486e4:	bl	12b58 <strncmp@plt>
   486e8:	cmp	r0, #0
   486ec:	bne	48734 <__assert_fail@plt+0x35b7c>
   486f0:	ldr	r0, [sp, #12]
   486f4:	str	r0, [fp, #-4]
   486f8:	ldr	r0, [sp, #12]
   486fc:	movw	r1, #57216	; 0xdf80
   48700:	movt	r1, #7
   48704:	movw	r2, #3
   48708:	bl	12b58 <strncmp@plt>
   4870c:	cmp	r0, #0
   48710:	bne	48730 <__assert_fail@plt+0x35b78>
   48714:	ldr	r0, [sp, #12]
   48718:	add	r0, r0, #3
   4871c:	str	r0, [fp, #-4]
   48720:	ldr	r0, [fp, #-4]
   48724:	movw	r1, #63256	; 0xf718
   48728:	movt	r1, #8
   4872c:	str	r0, [r1]
   48730:	b	48734 <__assert_fail@plt+0x35b7c>
   48734:	ldr	r0, [fp, #-4]
   48738:	movw	r1, #65312	; 0xff20
   4873c:	movt	r1, #8
   48740:	str	r0, [r1]
   48744:	ldr	r0, [fp, #-4]
   48748:	movw	r1, #63264	; 0xf720
   4874c:	movt	r1, #8
   48750:	str	r0, [r1]
   48754:	mov	sp, fp
   48758:	pop	{fp, pc}
   4875c:	push	{fp, lr}
   48760:	mov	fp, sp
   48764:	sub	sp, sp, #24
   48768:	str	r0, [fp, #-4]
   4876c:	bl	128d0 <__errno_location@plt>
   48770:	ldr	r0, [r0]
   48774:	str	r0, [fp, #-8]
   48778:	ldr	r0, [fp, #-4]
   4877c:	movw	lr, #0
   48780:	cmp	r0, lr
   48784:	beq	48794 <__assert_fail@plt+0x35bdc>
   48788:	ldr	r0, [fp, #-4]
   4878c:	str	r0, [sp, #8]
   48790:	b	487a4 <__assert_fail@plt+0x35bec>
   48794:	movw	r0, #65316	; 0xff24
   48798:	movt	r0, #8
   4879c:	str	r0, [sp, #8]
   487a0:	b	487a4 <__assert_fail@plt+0x35bec>
   487a4:	ldr	r0, [sp, #8]
   487a8:	movw	r1, #48	; 0x30
   487ac:	bl	4f070 <__assert_fail@plt+0x3c4b8>
   487b0:	str	r0, [sp, #12]
   487b4:	ldr	r0, [fp, #-8]
   487b8:	str	r0, [sp, #4]
   487bc:	bl	128d0 <__errno_location@plt>
   487c0:	ldr	r1, [sp, #4]
   487c4:	str	r1, [r0]
   487c8:	ldr	r0, [sp, #12]
   487cc:	mov	sp, fp
   487d0:	pop	{fp, pc}
   487d4:	sub	sp, sp, #8
   487d8:	str	r0, [sp, #4]
   487dc:	ldr	r0, [sp, #4]
   487e0:	movw	r1, #0
   487e4:	cmp	r0, r1
   487e8:	beq	487f8 <__assert_fail@plt+0x35c40>
   487ec:	ldr	r0, [sp, #4]
   487f0:	str	r0, [sp]
   487f4:	b	48808 <__assert_fail@plt+0x35c50>
   487f8:	movw	r0, #65316	; 0xff24
   487fc:	movt	r0, #8
   48800:	str	r0, [sp]
   48804:	b	48808 <__assert_fail@plt+0x35c50>
   48808:	ldr	r0, [sp]
   4880c:	ldr	r0, [r0]
   48810:	add	sp, sp, #8
   48814:	bx	lr
   48818:	sub	sp, sp, #16
   4881c:	str	r0, [sp, #12]
   48820:	str	r1, [sp, #8]
   48824:	ldr	r0, [sp, #8]
   48828:	ldr	r1, [sp, #12]
   4882c:	movw	r2, #0
   48830:	cmp	r1, r2
   48834:	str	r0, [sp, #4]
   48838:	beq	48848 <__assert_fail@plt+0x35c90>
   4883c:	ldr	r0, [sp, #12]
   48840:	str	r0, [sp]
   48844:	b	48858 <__assert_fail@plt+0x35ca0>
   48848:	movw	r0, #65316	; 0xff24
   4884c:	movt	r0, #8
   48850:	str	r0, [sp]
   48854:	b	48858 <__assert_fail@plt+0x35ca0>
   48858:	ldr	r0, [sp]
   4885c:	ldr	r1, [sp, #4]
   48860:	str	r1, [r0]
   48864:	add	sp, sp, #16
   48868:	bx	lr
   4886c:	sub	sp, sp, #32
   48870:	str	r0, [sp, #28]
   48874:	strb	r1, [sp, #27]
   48878:	str	r2, [sp, #20]
   4887c:	ldrb	r0, [sp, #27]
   48880:	strb	r0, [sp, #19]
   48884:	ldr	r0, [sp, #28]
   48888:	movw	r1, #0
   4888c:	cmp	r0, r1
   48890:	beq	488a0 <__assert_fail@plt+0x35ce8>
   48894:	ldr	r0, [sp, #28]
   48898:	str	r0, [sp]
   4889c:	b	488b0 <__assert_fail@plt+0x35cf8>
   488a0:	movw	r0, #65316	; 0xff24
   488a4:	movt	r0, #8
   488a8:	str	r0, [sp]
   488ac:	b	488b0 <__assert_fail@plt+0x35cf8>
   488b0:	ldr	r0, [sp]
   488b4:	add	r0, r0, #8
   488b8:	ldrb	r1, [sp, #19]
   488bc:	lsr	r1, r1, #5
   488c0:	add	r0, r0, r1, lsl #2
   488c4:	str	r0, [sp, #12]
   488c8:	ldrb	r0, [sp, #19]
   488cc:	and	r0, r0, #31
   488d0:	str	r0, [sp, #8]
   488d4:	ldr	r0, [sp, #12]
   488d8:	ldr	r0, [r0]
   488dc:	ldr	r1, [sp, #8]
   488e0:	lsr	r0, r0, r1
   488e4:	and	r0, r0, #1
   488e8:	str	r0, [sp, #4]
   488ec:	ldr	r0, [sp, #20]
   488f0:	and	r0, r0, #1
   488f4:	ldr	r1, [sp, #4]
   488f8:	eor	r0, r0, r1
   488fc:	ldr	r1, [sp, #8]
   48900:	lsl	r0, r0, r1
   48904:	ldr	r1, [sp, #12]
   48908:	ldr	r2, [r1]
   4890c:	eor	r0, r2, r0
   48910:	str	r0, [r1]
   48914:	ldr	r0, [sp, #4]
   48918:	add	sp, sp, #32
   4891c:	bx	lr
   48920:	sub	sp, sp, #12
   48924:	str	r0, [sp, #8]
   48928:	str	r1, [sp, #4]
   4892c:	ldr	r0, [sp, #8]
   48930:	movw	r1, #0
   48934:	cmp	r0, r1
   48938:	bne	48948 <__assert_fail@plt+0x35d90>
   4893c:	movw	r0, #65316	; 0xff24
   48940:	movt	r0, #8
   48944:	str	r0, [sp, #8]
   48948:	ldr	r0, [sp, #8]
   4894c:	ldr	r0, [r0, #4]
   48950:	str	r0, [sp]
   48954:	ldr	r0, [sp, #4]
   48958:	ldr	r1, [sp, #8]
   4895c:	str	r0, [r1, #4]
   48960:	ldr	r0, [sp]
   48964:	add	sp, sp, #12
   48968:	bx	lr
   4896c:	push	{fp, lr}
   48970:	mov	fp, sp
   48974:	sub	sp, sp, #16
   48978:	str	r0, [fp, #-4]
   4897c:	str	r1, [sp, #8]
   48980:	str	r2, [sp, #4]
   48984:	ldr	r0, [fp, #-4]
   48988:	movw	r1, #0
   4898c:	cmp	r0, r1
   48990:	bne	489a0 <__assert_fail@plt+0x35de8>
   48994:	movw	r0, #65316	; 0xff24
   48998:	movt	r0, #8
   4899c:	str	r0, [fp, #-4]
   489a0:	ldr	r0, [fp, #-4]
   489a4:	movw	r1, #10
   489a8:	str	r1, [r0]
   489ac:	ldr	r0, [sp, #8]
   489b0:	movw	r1, #0
   489b4:	cmp	r0, r1
   489b8:	beq	489cc <__assert_fail@plt+0x35e14>
   489bc:	ldr	r0, [sp, #4]
   489c0:	movw	r1, #0
   489c4:	cmp	r0, r1
   489c8:	bne	489d0 <__assert_fail@plt+0x35e18>
   489cc:	bl	12b64 <abort@plt>
   489d0:	ldr	r0, [sp, #8]
   489d4:	ldr	r1, [fp, #-4]
   489d8:	str	r0, [r1, #40]	; 0x28
   489dc:	ldr	r0, [sp, #4]
   489e0:	ldr	r1, [fp, #-4]
   489e4:	str	r0, [r1, #44]	; 0x2c
   489e8:	mov	sp, fp
   489ec:	pop	{fp, pc}
   489f0:	push	{r4, r5, r6, sl, fp, lr}
   489f4:	add	fp, sp, #16
   489f8:	sub	sp, sp, #64	; 0x40
   489fc:	ldr	ip, [fp, #8]
   48a00:	str	r0, [fp, #-20]	; 0xffffffec
   48a04:	str	r1, [fp, #-24]	; 0xffffffe8
   48a08:	str	r2, [fp, #-28]	; 0xffffffe4
   48a0c:	str	r3, [fp, #-32]	; 0xffffffe0
   48a10:	ldr	r0, [fp, #8]
   48a14:	movw	r1, #0
   48a18:	cmp	r0, r1
   48a1c:	str	ip, [sp, #32]
   48a20:	beq	48a30 <__assert_fail@plt+0x35e78>
   48a24:	ldr	r0, [fp, #8]
   48a28:	str	r0, [sp, #28]
   48a2c:	b	48a40 <__assert_fail@plt+0x35e88>
   48a30:	movw	r0, #65316	; 0xff24
   48a34:	movt	r0, #8
   48a38:	str	r0, [sp, #28]
   48a3c:	b	48a40 <__assert_fail@plt+0x35e88>
   48a40:	ldr	r0, [sp, #28]
   48a44:	str	r0, [fp, #-36]	; 0xffffffdc
   48a48:	bl	128d0 <__errno_location@plt>
   48a4c:	ldr	r0, [r0]
   48a50:	str	r0, [sp, #40]	; 0x28
   48a54:	ldr	r0, [fp, #-20]	; 0xffffffec
   48a58:	ldr	r1, [fp, #-24]	; 0xffffffe8
   48a5c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   48a60:	ldr	r3, [fp, #-32]	; 0xffffffe0
   48a64:	ldr	lr, [fp, #-36]	; 0xffffffdc
   48a68:	ldr	lr, [lr]
   48a6c:	ldr	ip, [fp, #-36]	; 0xffffffdc
   48a70:	ldr	ip, [ip, #4]
   48a74:	ldr	r4, [fp, #-36]	; 0xffffffdc
   48a78:	add	r4, r4, #8
   48a7c:	ldr	r5, [fp, #-36]	; 0xffffffdc
   48a80:	ldr	r5, [r5, #40]	; 0x28
   48a84:	ldr	r6, [fp, #-36]	; 0xffffffdc
   48a88:	ldr	r6, [r6, #44]	; 0x2c
   48a8c:	str	lr, [sp]
   48a90:	str	ip, [sp, #4]
   48a94:	str	r4, [sp, #8]
   48a98:	str	r5, [sp, #12]
   48a9c:	str	r6, [sp, #16]
   48aa0:	bl	48ac8 <__assert_fail@plt+0x35f10>
   48aa4:	str	r0, [sp, #36]	; 0x24
   48aa8:	ldr	r0, [sp, #40]	; 0x28
   48aac:	str	r0, [sp, #24]
   48ab0:	bl	128d0 <__errno_location@plt>
   48ab4:	ldr	r1, [sp, #24]
   48ab8:	str	r1, [r0]
   48abc:	ldr	r0, [sp, #36]	; 0x24
   48ac0:	sub	sp, fp, #16
   48ac4:	pop	{r4, r5, r6, sl, fp, pc}
   48ac8:	push	{r4, r5, r6, sl, fp, lr}
   48acc:	add	fp, sp, #16
   48ad0:	sub	sp, sp, #168	; 0xa8
   48ad4:	ldr	ip, [fp, #24]
   48ad8:	ldr	lr, [fp, #20]
   48adc:	ldr	r4, [fp, #16]
   48ae0:	ldr	r5, [fp, #12]
   48ae4:	ldr	r6, [fp, #8]
   48ae8:	str	r0, [fp, #-24]	; 0xffffffe8
   48aec:	str	r1, [fp, #-28]	; 0xffffffe4
   48af0:	str	r2, [fp, #-32]	; 0xffffffe0
   48af4:	str	r3, [fp, #-36]	; 0xffffffdc
   48af8:	movw	r0, #0
   48afc:	str	r0, [fp, #-44]	; 0xffffffd4
   48b00:	str	r0, [fp, #-48]	; 0xffffffd0
   48b04:	str	r0, [fp, #-52]	; 0xffffffcc
   48b08:	str	r0, [fp, #-56]	; 0xffffffc8
   48b0c:	movw	r0, #0
   48b10:	strb	r0, [fp, #-57]	; 0xffffffc7
   48b14:	str	r6, [sp, #80]	; 0x50
   48b18:	str	lr, [sp, #76]	; 0x4c
   48b1c:	str	r4, [sp, #72]	; 0x48
   48b20:	str	r5, [sp, #68]	; 0x44
   48b24:	str	ip, [sp, #64]	; 0x40
   48b28:	bl	12720 <__ctype_get_mb_cur_max@plt>
   48b2c:	cmp	r0, #1
   48b30:	movw	r0, #0
   48b34:	moveq	r0, #1
   48b38:	and	r0, r0, #1
   48b3c:	strb	r0, [fp, #-58]	; 0xffffffc6
   48b40:	ldr	r0, [fp, #12]
   48b44:	and	r0, r0, #2
   48b48:	cmp	r0, #0
   48b4c:	movw	r0, #0
   48b50:	movne	r0, #1
   48b54:	and	r0, r0, #1
   48b58:	strb	r0, [fp, #-59]	; 0xffffffc5
   48b5c:	movw	r0, #0
   48b60:	strb	r0, [fp, #-60]	; 0xffffffc4
   48b64:	strb	r0, [fp, #-61]	; 0xffffffc3
   48b68:	movw	r0, #1
   48b6c:	strb	r0, [fp, #-62]	; 0xffffffc2
   48b70:	ldr	r0, [fp, #8]
   48b74:	cmp	r0, #10
   48b78:	str	r0, [sp, #60]	; 0x3c
   48b7c:	bhi	48da4 <__assert_fail@plt+0x361ec>
   48b80:	add	r0, pc, #8
   48b84:	ldr	r1, [sp, #60]	; 0x3c
   48b88:	ldr	r0, [r0, r1, lsl #2]
   48b8c:	mov	pc, r0
   48b90:	muleq	r4, r8, sp
   48b94:	andeq	r8, r4, r4, lsl sp
   48b98:	andeq	r8, r4, r4, lsr sp
   48b9c:	andeq	r8, r4, ip, lsl #26
   48ba0:	andeq	r8, r4, ip, lsl sp
   48ba4:	andeq	r8, r4, ip, asr #23
   48ba8:			; <UNDEFINED> instruction: 0x00048bbc
   48bac:	andeq	r8, r4, r0, lsr ip
   48bb0:	andeq	r8, r4, r4, asr #24
   48bb4:	andeq	r8, r4, r4, asr #24
   48bb8:	andeq	r8, r4, r4, asr #24
   48bbc:	movw	r0, #5
   48bc0:	str	r0, [fp, #8]
   48bc4:	movw	r0, #1
   48bc8:	strb	r0, [fp, #-59]	; 0xffffffc5
   48bcc:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   48bd0:	tst	r0, #1
   48bd4:	bne	48c10 <__assert_fail@plt+0x36058>
   48bd8:	b	48bdc <__assert_fail@plt+0x36024>
   48bdc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   48be0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   48be4:	cmp	r0, r1
   48be8:	bcs	48c00 <__assert_fail@plt+0x36048>
   48bec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   48bf0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   48bf4:	add	r0, r0, r1
   48bf8:	movw	r1, #34	; 0x22
   48bfc:	strb	r1, [r0]
   48c00:	ldr	r0, [fp, #-44]	; 0xffffffd4
   48c04:	add	r0, r0, #1
   48c08:	str	r0, [fp, #-44]	; 0xffffffd4
   48c0c:	b	48c10 <__assert_fail@plt+0x36058>
   48c10:	movw	r0, #1
   48c14:	strb	r0, [fp, #-57]	; 0xffffffc7
   48c18:	movw	r0, #54683	; 0xd59b
   48c1c:	movt	r0, #7
   48c20:	str	r0, [fp, #-52]	; 0xffffffcc
   48c24:	movw	r0, #1
   48c28:	str	r0, [fp, #-56]	; 0xffffffc8
   48c2c:	b	48da8 <__assert_fail@plt+0x361f0>
   48c30:	movw	r0, #1
   48c34:	strb	r0, [fp, #-57]	; 0xffffffc7
   48c38:	movw	r0, #0
   48c3c:	strb	r0, [fp, #-59]	; 0xffffffc5
   48c40:	b	48da8 <__assert_fail@plt+0x361f0>
   48c44:	ldr	r0, [fp, #8]
   48c48:	cmp	r0, #10
   48c4c:	beq	48c78 <__assert_fail@plt+0x360c0>
   48c50:	ldr	r1, [fp, #8]
   48c54:	movw	r0, #57296	; 0xdfd0
   48c58:	movt	r0, #7
   48c5c:	bl	4acb8 <__assert_fail@plt+0x38100>
   48c60:	str	r0, [fp, #20]
   48c64:	ldr	r1, [fp, #8]
   48c68:	movw	r0, #41029	; 0xa045
   48c6c:	movt	r0, #7
   48c70:	bl	4acb8 <__assert_fail@plt+0x38100>
   48c74:	str	r0, [fp, #24]
   48c78:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   48c7c:	tst	r0, #1
   48c80:	bne	48cec <__assert_fail@plt+0x36134>
   48c84:	ldr	r0, [fp, #20]
   48c88:	str	r0, [fp, #-52]	; 0xffffffcc
   48c8c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   48c90:	ldrsb	r0, [r0]
   48c94:	cmp	r0, #0
   48c98:	beq	48ce8 <__assert_fail@plt+0x36130>
   48c9c:	b	48ca0 <__assert_fail@plt+0x360e8>
   48ca0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   48ca4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   48ca8:	cmp	r0, r1
   48cac:	bcs	48cc8 <__assert_fail@plt+0x36110>
   48cb0:	ldr	r0, [fp, #-52]	; 0xffffffcc
   48cb4:	ldrb	r0, [r0]
   48cb8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   48cbc:	ldr	r2, [fp, #-44]	; 0xffffffd4
   48cc0:	add	r1, r1, r2
   48cc4:	strb	r0, [r1]
   48cc8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   48ccc:	add	r0, r0, #1
   48cd0:	str	r0, [fp, #-44]	; 0xffffffd4
   48cd4:	b	48cd8 <__assert_fail@plt+0x36120>
   48cd8:	ldr	r0, [fp, #-52]	; 0xffffffcc
   48cdc:	add	r0, r0, #1
   48ce0:	str	r0, [fp, #-52]	; 0xffffffcc
   48ce4:	b	48c8c <__assert_fail@plt+0x360d4>
   48ce8:	b	48cec <__assert_fail@plt+0x36134>
   48cec:	movw	r0, #1
   48cf0:	strb	r0, [fp, #-57]	; 0xffffffc7
   48cf4:	ldr	r0, [fp, #24]
   48cf8:	str	r0, [fp, #-52]	; 0xffffffcc
   48cfc:	ldr	r0, [fp, #-52]	; 0xffffffcc
   48d00:	bl	12888 <strlen@plt>
   48d04:	str	r0, [fp, #-56]	; 0xffffffc8
   48d08:	b	48da8 <__assert_fail@plt+0x361f0>
   48d0c:	movw	r0, #1
   48d10:	strb	r0, [fp, #-57]	; 0xffffffc7
   48d14:	movw	r0, #1
   48d18:	strb	r0, [fp, #-59]	; 0xffffffc5
   48d1c:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   48d20:	tst	r0, #1
   48d24:	bne	48d30 <__assert_fail@plt+0x36178>
   48d28:	movw	r0, #1
   48d2c:	strb	r0, [fp, #-57]	; 0xffffffc7
   48d30:	b	48d34 <__assert_fail@plt+0x3617c>
   48d34:	movw	r0, #2
   48d38:	str	r0, [fp, #8]
   48d3c:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   48d40:	tst	r0, #1
   48d44:	bne	48d80 <__assert_fail@plt+0x361c8>
   48d48:	b	48d4c <__assert_fail@plt+0x36194>
   48d4c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   48d50:	ldr	r1, [fp, #-28]	; 0xffffffe4
   48d54:	cmp	r0, r1
   48d58:	bcs	48d70 <__assert_fail@plt+0x361b8>
   48d5c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   48d60:	ldr	r1, [fp, #-44]	; 0xffffffd4
   48d64:	add	r0, r0, r1
   48d68:	movw	r1, #39	; 0x27
   48d6c:	strb	r1, [r0]
   48d70:	ldr	r0, [fp, #-44]	; 0xffffffd4
   48d74:	add	r0, r0, #1
   48d78:	str	r0, [fp, #-44]	; 0xffffffd4
   48d7c:	b	48d80 <__assert_fail@plt+0x361c8>
   48d80:	movw	r0, #41029	; 0xa045
   48d84:	movt	r0, #7
   48d88:	str	r0, [fp, #-52]	; 0xffffffcc
   48d8c:	movw	r0, #1
   48d90:	str	r0, [fp, #-56]	; 0xffffffc8
   48d94:	b	48da8 <__assert_fail@plt+0x361f0>
   48d98:	movw	r0, #0
   48d9c:	strb	r0, [fp, #-59]	; 0xffffffc5
   48da0:	b	48da8 <__assert_fail@plt+0x361f0>
   48da4:	bl	12b64 <abort@plt>
   48da8:	movw	r0, #0
   48dac:	str	r0, [fp, #-40]	; 0xffffffd8
   48db0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   48db4:	cmn	r0, #1
   48db8:	bne	48de4 <__assert_fail@plt+0x3622c>
   48dbc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   48dc0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   48dc4:	add	r0, r0, r1
   48dc8:	ldrb	r0, [r0]
   48dcc:	cmp	r0, #0
   48dd0:	movw	r0, #0
   48dd4:	moveq	r0, #1
   48dd8:	and	r0, r0, #1
   48ddc:	str	r0, [sp, #56]	; 0x38
   48de0:	b	48e00 <__assert_fail@plt+0x36248>
   48de4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   48de8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   48dec:	cmp	r0, r1
   48df0:	movw	r0, #0
   48df4:	moveq	r0, #1
   48df8:	and	r0, r0, #1
   48dfc:	str	r0, [sp, #56]	; 0x38
   48e00:	ldr	r0, [sp, #56]	; 0x38
   48e04:	cmp	r0, #0
   48e08:	movw	r0, #0
   48e0c:	movne	r0, #1
   48e10:	mvn	r1, #0
   48e14:	eor	r0, r0, r1
   48e18:	tst	r0, #1
   48e1c:	beq	4a00c <__assert_fail@plt+0x37454>
   48e20:	movw	r0, #0
   48e24:	strb	r0, [fp, #-65]	; 0xffffffbf
   48e28:	strb	r0, [fp, #-66]	; 0xffffffbe
   48e2c:	strb	r0, [fp, #-67]	; 0xffffffbd
   48e30:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   48e34:	tst	r0, #1
   48e38:	beq	48ee4 <__assert_fail@plt+0x3632c>
   48e3c:	ldr	r0, [fp, #8]
   48e40:	cmp	r0, #2
   48e44:	beq	48ee4 <__assert_fail@plt+0x3632c>
   48e48:	ldr	r0, [fp, #-56]	; 0xffffffc8
   48e4c:	cmp	r0, #0
   48e50:	beq	48ee4 <__assert_fail@plt+0x3632c>
   48e54:	ldr	r0, [fp, #-40]	; 0xffffffd8
   48e58:	ldr	r1, [fp, #-56]	; 0xffffffc8
   48e5c:	add	r0, r0, r1
   48e60:	ldr	r1, [fp, #-36]	; 0xffffffdc
   48e64:	cmn	r1, #1
   48e68:	str	r0, [sp, #52]	; 0x34
   48e6c:	bne	48e94 <__assert_fail@plt+0x362dc>
   48e70:	ldr	r0, [fp, #-56]	; 0xffffffc8
   48e74:	movw	r1, #1
   48e78:	cmp	r1, r0
   48e7c:	bcs	48e94 <__assert_fail@plt+0x362dc>
   48e80:	ldr	r0, [fp, #-32]	; 0xffffffe0
   48e84:	bl	12888 <strlen@plt>
   48e88:	str	r0, [fp, #-36]	; 0xffffffdc
   48e8c:	str	r0, [sp, #48]	; 0x30
   48e90:	b	48e9c <__assert_fail@plt+0x362e4>
   48e94:	ldr	r0, [fp, #-36]	; 0xffffffdc
   48e98:	str	r0, [sp, #48]	; 0x30
   48e9c:	ldr	r0, [sp, #48]	; 0x30
   48ea0:	ldr	r1, [sp, #52]	; 0x34
   48ea4:	cmp	r1, r0
   48ea8:	bhi	48ee4 <__assert_fail@plt+0x3632c>
   48eac:	ldr	r0, [fp, #-32]	; 0xffffffe0
   48eb0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   48eb4:	add	r0, r0, r1
   48eb8:	ldr	r1, [fp, #-52]	; 0xffffffcc
   48ebc:	ldr	r2, [fp, #-56]	; 0xffffffc8
   48ec0:	bl	12624 <memcmp@plt>
   48ec4:	cmp	r0, #0
   48ec8:	bne	48ee4 <__assert_fail@plt+0x3632c>
   48ecc:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   48ed0:	tst	r0, #1
   48ed4:	beq	48edc <__assert_fail@plt+0x36324>
   48ed8:	b	4a18c <__assert_fail@plt+0x375d4>
   48edc:	movw	r0, #1
   48ee0:	strb	r0, [fp, #-65]	; 0xffffffbf
   48ee4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   48ee8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   48eec:	ldrb	r0, [r0, r1]
   48ef0:	strb	r0, [fp, #-63]	; 0xffffffc1
   48ef4:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   48ef8:	mov	r1, r0
   48efc:	cmp	r0, #126	; 0x7e
   48f00:	str	r1, [sp, #44]	; 0x2c
   48f04:	bhi	49774 <__assert_fail@plt+0x36bbc>
   48f08:	add	r0, pc, #8
   48f0c:	ldr	r1, [sp, #44]	; 0x2c
   48f10:	ldr	r0, [r0, r1, lsl #2]
   48f14:	mov	pc, r0
   48f18:	andeq	r9, r4, r4, lsl r1
   48f1c:	andeq	r9, r4, r4, ror r7
   48f20:	andeq	r9, r4, r4, ror r7
   48f24:	andeq	r9, r4, r4, ror r7
   48f28:	andeq	r9, r4, r4, ror r7
   48f2c:	andeq	r9, r4, r4, ror r7
   48f30:	andeq	r9, r4, r4, ror r7
   48f34:	andeq	r9, r4, ip, lsl r5
   48f38:	andeq	r9, r4, r8, lsr #10
   48f3c:	andeq	r9, r4, r8, asr r5
   48f40:	andeq	r9, r4, r0, asr #10
   48f44:	andeq	r9, r4, r4, ror #10
   48f48:	andeq	r9, r4, r4, lsr r5
   48f4c:	andeq	r9, r4, ip, asr #10
   48f50:	andeq	r9, r4, r4, ror r7
   48f54:	andeq	r9, r4, r4, ror r7
   48f58:	andeq	r9, r4, r4, ror r7
   48f5c:	andeq	r9, r4, r4, ror r7
   48f60:	andeq	r9, r4, r4, ror r7
   48f64:	andeq	r9, r4, r4, ror r7
   48f68:	andeq	r9, r4, r4, ror r7
   48f6c:	andeq	r9, r4, r4, ror r7
   48f70:	andeq	r9, r4, r4, ror r7
   48f74:	andeq	r9, r4, r4, ror r7
   48f78:	andeq	r9, r4, r4, ror r7
   48f7c:	andeq	r9, r4, r4, ror r7
   48f80:	andeq	r9, r4, r4, ror r7
   48f84:	andeq	r9, r4, r4, ror r7
   48f88:	andeq	r9, r4, r4, ror r7
   48f8c:	andeq	r9, r4, r4, ror r7
   48f90:	andeq	r9, r4, r4, ror r7
   48f94:	andeq	r9, r4, r4, ror r7
   48f98:	andeq	r9, r4, r8, asr #12
   48f9c:	andeq	r9, r4, r0, asr r6
   48fa0:	andeq	r9, r4, r0, asr r6
   48fa4:	andeq	r9, r4, r4, lsr r6
   48fa8:	andeq	r9, r4, r0, asr r6
   48fac:	andeq	r9, r4, r8, ror #14
   48fb0:	andeq	r9, r4, r0, asr r6
   48fb4:	andeq	r9, r4, r0, ror r6
   48fb8:	andeq	r9, r4, r0, asr r6
   48fbc:	andeq	r9, r4, r0, asr r6
   48fc0:	andeq	r9, r4, r0, asr r6
   48fc4:	andeq	r9, r4, r8, ror #14
   48fc8:	andeq	r9, r4, r8, ror #14
   48fcc:	andeq	r9, r4, r8, ror #14
   48fd0:	andeq	r9, r4, r8, ror #14
   48fd4:	andeq	r9, r4, r8, ror #14
   48fd8:	andeq	r9, r4, r8, ror #14
   48fdc:	andeq	r9, r4, r8, ror #14
   48fe0:	andeq	r9, r4, r8, ror #14
   48fe4:	andeq	r9, r4, r8, ror #14
   48fe8:	andeq	r9, r4, r8, ror #14
   48fec:	andeq	r9, r4, r8, ror #14
   48ff0:	andeq	r9, r4, r8, ror #14
   48ff4:	andeq	r9, r4, r8, ror #14
   48ff8:	andeq	r9, r4, r8, ror #14
   48ffc:	andeq	r9, r4, r8, ror #14
   49000:	andeq	r9, r4, r8, ror #14
   49004:	andeq	r9, r4, r0, asr r6
   49008:	andeq	r9, r4, r0, asr r6
   4900c:	andeq	r9, r4, r0, asr r6
   49010:	andeq	r9, r4, r0, asr r6
   49014:	andeq	r9, r4, r0, lsr #6
   49018:	andeq	r9, r4, r4, ror r7
   4901c:	andeq	r9, r4, r8, ror #14
   49020:	andeq	r9, r4, r8, ror #14
   49024:	andeq	r9, r4, r8, ror #14
   49028:	andeq	r9, r4, r8, ror #14
   4902c:	andeq	r9, r4, r8, ror #14
   49030:	andeq	r9, r4, r8, ror #14
   49034:	andeq	r9, r4, r8, ror #14
   49038:	andeq	r9, r4, r8, ror #14
   4903c:	andeq	r9, r4, r8, ror #14
   49040:	andeq	r9, r4, r8, ror #14
   49044:	andeq	r9, r4, r8, ror #14
   49048:	andeq	r9, r4, r8, ror #14
   4904c:	andeq	r9, r4, r8, ror #14
   49050:	andeq	r9, r4, r8, ror #14
   49054:	andeq	r9, r4, r8, ror #14
   49058:	andeq	r9, r4, r8, ror #14
   4905c:	andeq	r9, r4, r8, ror #14
   49060:	andeq	r9, r4, r8, ror #14
   49064:	andeq	r9, r4, r8, ror #14
   49068:	andeq	r9, r4, r8, ror #14
   4906c:	andeq	r9, r4, r8, ror #14
   49070:	andeq	r9, r4, r8, ror #14
   49074:	andeq	r9, r4, r8, ror #14
   49078:	andeq	r9, r4, r8, ror #14
   4907c:	andeq	r9, r4, r8, ror #14
   49080:	andeq	r9, r4, r8, ror #14
   49084:	andeq	r9, r4, r0, asr r6
   49088:	andeq	r9, r4, r0, ror r5
   4908c:	andeq	r9, r4, r8, ror #14
   49090:	andeq	r9, r4, r0, asr r6
   49094:	andeq	r9, r4, r8, ror #14
   49098:	andeq	r9, r4, r0, asr r6
   4909c:	andeq	r9, r4, r8, ror #14
   490a0:	andeq	r9, r4, r8, ror #14
   490a4:	andeq	r9, r4, r8, ror #14
   490a8:	andeq	r9, r4, r8, ror #14
   490ac:	andeq	r9, r4, r8, ror #14
   490b0:	andeq	r9, r4, r8, ror #14
   490b4:	andeq	r9, r4, r8, ror #14
   490b8:	andeq	r9, r4, r8, ror #14
   490bc:	andeq	r9, r4, r8, ror #14
   490c0:	andeq	r9, r4, r8, ror #14
   490c4:	andeq	r9, r4, r8, ror #14
   490c8:	andeq	r9, r4, r8, ror #14
   490cc:	andeq	r9, r4, r8, ror #14
   490d0:	andeq	r9, r4, r8, ror #14
   490d4:	andeq	r9, r4, r8, ror #14
   490d8:	andeq	r9, r4, r8, ror #14
   490dc:	andeq	r9, r4, r8, ror #14
   490e0:	andeq	r9, r4, r8, ror #14
   490e4:	andeq	r9, r4, r8, ror #14
   490e8:	andeq	r9, r4, r8, ror #14
   490ec:	andeq	r9, r4, r8, ror #14
   490f0:	andeq	r9, r4, r8, ror #14
   490f4:	andeq	r9, r4, r8, ror #14
   490f8:	andeq	r9, r4, r8, ror #14
   490fc:	andeq	r9, r4, r8, ror #14
   49100:	andeq	r9, r4, r8, ror #14
   49104:	andeq	r9, r4, r0, lsl #12
   49108:	andeq	r9, r4, r0, asr r6
   4910c:	andeq	r9, r4, r0, lsl #12
   49110:	andeq	r9, r4, r4, lsr r6
   49114:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   49118:	tst	r0, #1
   4911c:	beq	49304 <__assert_fail@plt+0x3674c>
   49120:	b	49124 <__assert_fail@plt+0x3656c>
   49124:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   49128:	tst	r0, #1
   4912c:	beq	49134 <__assert_fail@plt+0x3657c>
   49130:	b	4a18c <__assert_fail@plt+0x375d4>
   49134:	movw	r0, #1
   49138:	strb	r0, [fp, #-66]	; 0xffffffbe
   4913c:	ldr	r0, [fp, #8]
   49140:	cmp	r0, #2
   49144:	bne	491f8 <__assert_fail@plt+0x36640>
   49148:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   4914c:	tst	r0, #1
   49150:	bne	491f8 <__assert_fail@plt+0x36640>
   49154:	b	49158 <__assert_fail@plt+0x365a0>
   49158:	ldr	r0, [fp, #-44]	; 0xffffffd4
   4915c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   49160:	cmp	r0, r1
   49164:	bcs	4917c <__assert_fail@plt+0x365c4>
   49168:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4916c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   49170:	add	r0, r0, r1
   49174:	movw	r1, #39	; 0x27
   49178:	strb	r1, [r0]
   4917c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   49180:	add	r0, r0, #1
   49184:	str	r0, [fp, #-44]	; 0xffffffd4
   49188:	b	4918c <__assert_fail@plt+0x365d4>
   4918c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   49190:	ldr	r1, [fp, #-28]	; 0xffffffe4
   49194:	cmp	r0, r1
   49198:	bcs	491b0 <__assert_fail@plt+0x365f8>
   4919c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   491a0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   491a4:	add	r0, r0, r1
   491a8:	movw	r1, #36	; 0x24
   491ac:	strb	r1, [r0]
   491b0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   491b4:	add	r0, r0, #1
   491b8:	str	r0, [fp, #-44]	; 0xffffffd4
   491bc:	b	491c0 <__assert_fail@plt+0x36608>
   491c0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   491c4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   491c8:	cmp	r0, r1
   491cc:	bcs	491e4 <__assert_fail@plt+0x3662c>
   491d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   491d4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   491d8:	add	r0, r0, r1
   491dc:	movw	r1, #39	; 0x27
   491e0:	strb	r1, [r0]
   491e4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   491e8:	add	r0, r0, #1
   491ec:	str	r0, [fp, #-44]	; 0xffffffd4
   491f0:	movw	r0, #1
   491f4:	strb	r0, [fp, #-60]	; 0xffffffc4
   491f8:	b	491fc <__assert_fail@plt+0x36644>
   491fc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   49200:	ldr	r1, [fp, #-28]	; 0xffffffe4
   49204:	cmp	r0, r1
   49208:	bcs	49220 <__assert_fail@plt+0x36668>
   4920c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   49210:	ldr	r1, [fp, #-44]	; 0xffffffd4
   49214:	add	r0, r0, r1
   49218:	movw	r1, #92	; 0x5c
   4921c:	strb	r1, [r0]
   49220:	ldr	r0, [fp, #-44]	; 0xffffffd4
   49224:	add	r0, r0, #1
   49228:	str	r0, [fp, #-44]	; 0xffffffd4
   4922c:	b	49230 <__assert_fail@plt+0x36678>
   49230:	ldr	r0, [fp, #8]
   49234:	cmp	r0, #2
   49238:	beq	492f8 <__assert_fail@plt+0x36740>
   4923c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   49240:	add	r0, r0, #1
   49244:	ldr	r1, [fp, #-36]	; 0xffffffdc
   49248:	cmp	r0, r1
   4924c:	bcs	492f8 <__assert_fail@plt+0x36740>
   49250:	ldr	r0, [fp, #-32]	; 0xffffffe0
   49254:	ldr	r1, [fp, #-40]	; 0xffffffd8
   49258:	add	r1, r1, #1
   4925c:	add	r0, r0, r1
   49260:	ldrb	r0, [r0]
   49264:	movw	r1, #48	; 0x30
   49268:	cmp	r1, r0
   4926c:	bgt	492f8 <__assert_fail@plt+0x36740>
   49270:	ldr	r0, [fp, #-32]	; 0xffffffe0
   49274:	ldr	r1, [fp, #-40]	; 0xffffffd8
   49278:	add	r1, r1, #1
   4927c:	add	r0, r0, r1
   49280:	ldrb	r0, [r0]
   49284:	cmp	r0, #57	; 0x39
   49288:	bgt	492f8 <__assert_fail@plt+0x36740>
   4928c:	b	49290 <__assert_fail@plt+0x366d8>
   49290:	ldr	r0, [fp, #-44]	; 0xffffffd4
   49294:	ldr	r1, [fp, #-28]	; 0xffffffe4
   49298:	cmp	r0, r1
   4929c:	bcs	492b4 <__assert_fail@plt+0x366fc>
   492a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   492a4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   492a8:	add	r0, r0, r1
   492ac:	movw	r1, #48	; 0x30
   492b0:	strb	r1, [r0]
   492b4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   492b8:	add	r0, r0, #1
   492bc:	str	r0, [fp, #-44]	; 0xffffffd4
   492c0:	b	492c4 <__assert_fail@plt+0x3670c>
   492c4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   492c8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   492cc:	cmp	r0, r1
   492d0:	bcs	492e8 <__assert_fail@plt+0x36730>
   492d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   492d8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   492dc:	add	r0, r0, r1
   492e0:	movw	r1, #48	; 0x30
   492e4:	strb	r1, [r0]
   492e8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   492ec:	add	r0, r0, #1
   492f0:	str	r0, [fp, #-44]	; 0xffffffd4
   492f4:	b	492f8 <__assert_fail@plt+0x36740>
   492f8:	movw	r0, #48	; 0x30
   492fc:	strb	r0, [fp, #-63]	; 0xffffffc1
   49300:	b	4931c <__assert_fail@plt+0x36764>
   49304:	ldr	r0, [fp, #12]
   49308:	and	r0, r0, #1
   4930c:	cmp	r0, #0
   49310:	beq	49318 <__assert_fail@plt+0x36760>
   49314:	b	49ffc <__assert_fail@plt+0x37444>
   49318:	b	4931c <__assert_fail@plt+0x36764>
   4931c:	b	49d98 <__assert_fail@plt+0x371e0>
   49320:	ldr	r0, [fp, #8]
   49324:	cmp	r0, #2
   49328:	str	r0, [sp, #40]	; 0x28
   4932c:	beq	49344 <__assert_fail@plt+0x3678c>
   49330:	b	49334 <__assert_fail@plt+0x3677c>
   49334:	ldr	r0, [sp, #40]	; 0x28
   49338:	cmp	r0, #5
   4933c:	beq	49358 <__assert_fail@plt+0x367a0>
   49340:	b	49514 <__assert_fail@plt+0x3695c>
   49344:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   49348:	tst	r0, #1
   4934c:	beq	49354 <__assert_fail@plt+0x3679c>
   49350:	b	4a18c <__assert_fail@plt+0x375d4>
   49354:	b	49518 <__assert_fail@plt+0x36960>
   49358:	ldr	r0, [fp, #12]
   4935c:	and	r0, r0, #4
   49360:	cmp	r0, #0
   49364:	beq	49510 <__assert_fail@plt+0x36958>
   49368:	ldr	r0, [fp, #-40]	; 0xffffffd8
   4936c:	add	r0, r0, #2
   49370:	ldr	r1, [fp, #-36]	; 0xffffffdc
   49374:	cmp	r0, r1
   49378:	bcs	49510 <__assert_fail@plt+0x36958>
   4937c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   49380:	ldr	r1, [fp, #-40]	; 0xffffffd8
   49384:	add	r1, r1, #1
   49388:	add	r0, r0, r1
   4938c:	ldrb	r0, [r0]
   49390:	cmp	r0, #63	; 0x3f
   49394:	bne	49510 <__assert_fail@plt+0x36958>
   49398:	ldr	r0, [fp, #-32]	; 0xffffffe0
   4939c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   493a0:	add	r0, r0, r1
   493a4:	ldrb	r0, [r0, #2]
   493a8:	mov	r1, r0
   493ac:	cmp	r0, #33	; 0x21
   493b0:	str	r1, [sp, #36]	; 0x24
   493b4:	beq	49404 <__assert_fail@plt+0x3684c>
   493b8:	b	493bc <__assert_fail@plt+0x36804>
   493bc:	ldr	r0, [sp, #36]	; 0x24
   493c0:	sub	r1, r0, #39	; 0x27
   493c4:	cmp	r1, #3
   493c8:	bcc	49404 <__assert_fail@plt+0x3684c>
   493cc:	b	493d0 <__assert_fail@plt+0x36818>
   493d0:	ldr	r0, [sp, #36]	; 0x24
   493d4:	cmp	r0, #45	; 0x2d
   493d8:	beq	49404 <__assert_fail@plt+0x3684c>
   493dc:	b	493e0 <__assert_fail@plt+0x36828>
   493e0:	ldr	r0, [sp, #36]	; 0x24
   493e4:	cmp	r0, #47	; 0x2f
   493e8:	beq	49404 <__assert_fail@plt+0x3684c>
   493ec:	b	493f0 <__assert_fail@plt+0x36838>
   493f0:	ldr	r0, [sp, #36]	; 0x24
   493f4:	sub	r1, r0, #60	; 0x3c
   493f8:	cmp	r1, #2
   493fc:	bhi	49508 <__assert_fail@plt+0x36950>
   49400:	b	49404 <__assert_fail@plt+0x3684c>
   49404:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   49408:	tst	r0, #1
   4940c:	beq	49414 <__assert_fail@plt+0x3685c>
   49410:	b	4a18c <__assert_fail@plt+0x375d4>
   49414:	ldr	r0, [fp, #-32]	; 0xffffffe0
   49418:	ldr	r1, [fp, #-40]	; 0xffffffd8
   4941c:	add	r1, r1, #2
   49420:	add	r0, r0, r1
   49424:	ldrb	r0, [r0]
   49428:	strb	r0, [fp, #-63]	; 0xffffffc1
   4942c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   49430:	add	r0, r0, #2
   49434:	str	r0, [fp, #-40]	; 0xffffffd8
   49438:	ldr	r0, [fp, #-44]	; 0xffffffd4
   4943c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   49440:	cmp	r0, r1
   49444:	bcs	4945c <__assert_fail@plt+0x368a4>
   49448:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4944c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   49450:	add	r0, r0, r1
   49454:	movw	r1, #63	; 0x3f
   49458:	strb	r1, [r0]
   4945c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   49460:	add	r0, r0, #1
   49464:	str	r0, [fp, #-44]	; 0xffffffd4
   49468:	b	4946c <__assert_fail@plt+0x368b4>
   4946c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   49470:	ldr	r1, [fp, #-28]	; 0xffffffe4
   49474:	cmp	r0, r1
   49478:	bcs	49490 <__assert_fail@plt+0x368d8>
   4947c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   49480:	ldr	r1, [fp, #-44]	; 0xffffffd4
   49484:	add	r0, r0, r1
   49488:	movw	r1, #34	; 0x22
   4948c:	strb	r1, [r0]
   49490:	ldr	r0, [fp, #-44]	; 0xffffffd4
   49494:	add	r0, r0, #1
   49498:	str	r0, [fp, #-44]	; 0xffffffd4
   4949c:	b	494a0 <__assert_fail@plt+0x368e8>
   494a0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   494a4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   494a8:	cmp	r0, r1
   494ac:	bcs	494c4 <__assert_fail@plt+0x3690c>
   494b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   494b4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   494b8:	add	r0, r0, r1
   494bc:	movw	r1, #34	; 0x22
   494c0:	strb	r1, [r0]
   494c4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   494c8:	add	r0, r0, #1
   494cc:	str	r0, [fp, #-44]	; 0xffffffd4
   494d0:	b	494d4 <__assert_fail@plt+0x3691c>
   494d4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   494d8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   494dc:	cmp	r0, r1
   494e0:	bcs	494f8 <__assert_fail@plt+0x36940>
   494e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   494e8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   494ec:	add	r0, r0, r1
   494f0:	movw	r1, #63	; 0x3f
   494f4:	strb	r1, [r0]
   494f8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   494fc:	add	r0, r0, #1
   49500:	str	r0, [fp, #-44]	; 0xffffffd4
   49504:	b	4950c <__assert_fail@plt+0x36954>
   49508:	b	4950c <__assert_fail@plt+0x36954>
   4950c:	b	49510 <__assert_fail@plt+0x36958>
   49510:	b	49518 <__assert_fail@plt+0x36960>
   49514:	b	49518 <__assert_fail@plt+0x36960>
   49518:	b	49d98 <__assert_fail@plt+0x371e0>
   4951c:	movw	r0, #97	; 0x61
   49520:	strb	r0, [fp, #-64]	; 0xffffffc0
   49524:	b	495e4 <__assert_fail@plt+0x36a2c>
   49528:	movw	r0, #98	; 0x62
   4952c:	strb	r0, [fp, #-64]	; 0xffffffc0
   49530:	b	495e4 <__assert_fail@plt+0x36a2c>
   49534:	movw	r0, #102	; 0x66
   49538:	strb	r0, [fp, #-64]	; 0xffffffc0
   4953c:	b	495e4 <__assert_fail@plt+0x36a2c>
   49540:	movw	r0, #110	; 0x6e
   49544:	strb	r0, [fp, #-64]	; 0xffffffc0
   49548:	b	495c4 <__assert_fail@plt+0x36a0c>
   4954c:	movw	r0, #114	; 0x72
   49550:	strb	r0, [fp, #-64]	; 0xffffffc0
   49554:	b	495c4 <__assert_fail@plt+0x36a0c>
   49558:	movw	r0, #116	; 0x74
   4955c:	strb	r0, [fp, #-64]	; 0xffffffc0
   49560:	b	495c4 <__assert_fail@plt+0x36a0c>
   49564:	movw	r0, #118	; 0x76
   49568:	strb	r0, [fp, #-64]	; 0xffffffc0
   4956c:	b	495e4 <__assert_fail@plt+0x36a2c>
   49570:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   49574:	strb	r0, [fp, #-64]	; 0xffffffc0
   49578:	ldr	r0, [fp, #8]
   4957c:	cmp	r0, #2
   49580:	bne	49598 <__assert_fail@plt+0x369e0>
   49584:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   49588:	tst	r0, #1
   4958c:	beq	49594 <__assert_fail@plt+0x369dc>
   49590:	b	4a18c <__assert_fail@plt+0x375d4>
   49594:	b	49f20 <__assert_fail@plt+0x37368>
   49598:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   4959c:	tst	r0, #1
   495a0:	beq	495c0 <__assert_fail@plt+0x36a08>
   495a4:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   495a8:	tst	r0, #1
   495ac:	beq	495c0 <__assert_fail@plt+0x36a08>
   495b0:	ldr	r0, [fp, #-56]	; 0xffffffc8
   495b4:	cmp	r0, #0
   495b8:	beq	495c0 <__assert_fail@plt+0x36a08>
   495bc:	b	49f20 <__assert_fail@plt+0x37368>
   495c0:	b	495c4 <__assert_fail@plt+0x36a0c>
   495c4:	ldr	r0, [fp, #8]
   495c8:	cmp	r0, #2
   495cc:	bne	495e0 <__assert_fail@plt+0x36a28>
   495d0:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   495d4:	tst	r0, #1
   495d8:	beq	495e0 <__assert_fail@plt+0x36a28>
   495dc:	b	4a18c <__assert_fail@plt+0x375d4>
   495e0:	b	495e4 <__assert_fail@plt+0x36a2c>
   495e4:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   495e8:	tst	r0, #1
   495ec:	beq	495fc <__assert_fail@plt+0x36a44>
   495f0:	ldrb	r0, [fp, #-64]	; 0xffffffc0
   495f4:	strb	r0, [fp, #-63]	; 0xffffffc1
   495f8:	b	49e0c <__assert_fail@plt+0x37254>
   495fc:	b	49d98 <__assert_fail@plt+0x371e0>
   49600:	ldr	r0, [fp, #-36]	; 0xffffffdc
   49604:	cmn	r0, #1
   49608:	bne	49620 <__assert_fail@plt+0x36a68>
   4960c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   49610:	ldrb	r0, [r0, #1]
   49614:	cmp	r0, #0
   49618:	beq	49630 <__assert_fail@plt+0x36a78>
   4961c:	b	4962c <__assert_fail@plt+0x36a74>
   49620:	ldr	r0, [fp, #-36]	; 0xffffffdc
   49624:	cmp	r0, #1
   49628:	beq	49630 <__assert_fail@plt+0x36a78>
   4962c:	b	49d98 <__assert_fail@plt+0x371e0>
   49630:	b	49634 <__assert_fail@plt+0x36a7c>
   49634:	ldr	r0, [fp, #-40]	; 0xffffffd8
   49638:	cmp	r0, #0
   4963c:	beq	49644 <__assert_fail@plt+0x36a8c>
   49640:	b	49d98 <__assert_fail@plt+0x371e0>
   49644:	b	49648 <__assert_fail@plt+0x36a90>
   49648:	movw	r0, #1
   4964c:	strb	r0, [fp, #-67]	; 0xffffffbd
   49650:	ldr	r0, [fp, #8]
   49654:	cmp	r0, #2
   49658:	bne	4966c <__assert_fail@plt+0x36ab4>
   4965c:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   49660:	tst	r0, #1
   49664:	beq	4966c <__assert_fail@plt+0x36ab4>
   49668:	b	4a18c <__assert_fail@plt+0x375d4>
   4966c:	b	49d98 <__assert_fail@plt+0x371e0>
   49670:	movw	r0, #1
   49674:	strb	r0, [fp, #-61]	; 0xffffffc3
   49678:	strb	r0, [fp, #-67]	; 0xffffffbd
   4967c:	ldr	r0, [fp, #8]
   49680:	cmp	r0, #2
   49684:	bne	49764 <__assert_fail@plt+0x36bac>
   49688:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   4968c:	tst	r0, #1
   49690:	beq	49698 <__assert_fail@plt+0x36ae0>
   49694:	b	4a18c <__assert_fail@plt+0x375d4>
   49698:	ldr	r0, [fp, #-28]	; 0xffffffe4
   4969c:	cmp	r0, #0
   496a0:	beq	496c0 <__assert_fail@plt+0x36b08>
   496a4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   496a8:	cmp	r0, #0
   496ac:	bne	496c0 <__assert_fail@plt+0x36b08>
   496b0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   496b4:	str	r0, [fp, #-48]	; 0xffffffd0
   496b8:	movw	r0, #0
   496bc:	str	r0, [fp, #-28]	; 0xffffffe4
   496c0:	b	496c4 <__assert_fail@plt+0x36b0c>
   496c4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   496c8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   496cc:	cmp	r0, r1
   496d0:	bcs	496e8 <__assert_fail@plt+0x36b30>
   496d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   496d8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   496dc:	add	r0, r0, r1
   496e0:	movw	r1, #39	; 0x27
   496e4:	strb	r1, [r0]
   496e8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   496ec:	add	r0, r0, #1
   496f0:	str	r0, [fp, #-44]	; 0xffffffd4
   496f4:	b	496f8 <__assert_fail@plt+0x36b40>
   496f8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   496fc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   49700:	cmp	r0, r1
   49704:	bcs	4971c <__assert_fail@plt+0x36b64>
   49708:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4970c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   49710:	add	r0, r0, r1
   49714:	movw	r1, #92	; 0x5c
   49718:	strb	r1, [r0]
   4971c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   49720:	add	r0, r0, #1
   49724:	str	r0, [fp, #-44]	; 0xffffffd4
   49728:	b	4972c <__assert_fail@plt+0x36b74>
   4972c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   49730:	ldr	r1, [fp, #-28]	; 0xffffffe4
   49734:	cmp	r0, r1
   49738:	bcs	49750 <__assert_fail@plt+0x36b98>
   4973c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   49740:	ldr	r1, [fp, #-44]	; 0xffffffd4
   49744:	add	r0, r0, r1
   49748:	movw	r1, #39	; 0x27
   4974c:	strb	r1, [r0]
   49750:	ldr	r0, [fp, #-44]	; 0xffffffd4
   49754:	add	r0, r0, #1
   49758:	str	r0, [fp, #-44]	; 0xffffffd4
   4975c:	movw	r0, #0
   49760:	strb	r0, [fp, #-60]	; 0xffffffc4
   49764:	b	49d98 <__assert_fail@plt+0x371e0>
   49768:	movw	r0, #1
   4976c:	strb	r0, [fp, #-67]	; 0xffffffbd
   49770:	b	49d98 <__assert_fail@plt+0x371e0>
   49774:	ldrb	r0, [fp, #-58]	; 0xffffffc6
   49778:	tst	r0, #1
   4977c:	beq	497c0 <__assert_fail@plt+0x36c08>
   49780:	mov	r0, #1
   49784:	str	r0, [fp, #-72]	; 0xffffffb8
   49788:	bl	12834 <__ctype_b_loc@plt>
   4978c:	ldr	r0, [r0]
   49790:	ldrb	lr, [fp, #-63]	; 0xffffffc1
   49794:	mov	r1, lr
   49798:	add	r0, r0, lr, lsl #1
   4979c:	ldrh	r0, [r0]
   497a0:	and	r0, r0, #16384	; 0x4000
   497a4:	cmp	r0, #0
   497a8:	movw	r0, #0
   497ac:	movne	r0, #1
   497b0:	and	r0, r0, #1
   497b4:	strb	r0, [fp, #-73]	; 0xffffffb7
   497b8:	str	r1, [sp, #32]
   497bc:	b	49a4c <__assert_fail@plt+0x36e94>
   497c0:	sub	r0, fp, #84	; 0x54
   497c4:	movw	r1, #0
   497c8:	and	r1, r1, #255	; 0xff
   497cc:	movw	r2, #8
   497d0:	bl	12900 <memset@plt>
   497d4:	movw	r0, #0
   497d8:	str	r0, [fp, #-72]	; 0xffffffb8
   497dc:	movw	r0, #1
   497e0:	strb	r0, [fp, #-73]	; 0xffffffb7
   497e4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   497e8:	cmn	r0, #1
   497ec:	bne	497fc <__assert_fail@plt+0x36c44>
   497f0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   497f4:	bl	12888 <strlen@plt>
   497f8:	str	r0, [fp, #-36]	; 0xffffffdc
   497fc:	b	49800 <__assert_fail@plt+0x36c48>
   49800:	ldr	r0, [fp, #-32]	; 0xffffffe0
   49804:	ldr	r1, [fp, #-40]	; 0xffffffd8
   49808:	ldr	r2, [fp, #-72]	; 0xffffffb8
   4980c:	add	r1, r1, r2
   49810:	add	r1, r0, r1
   49814:	ldr	r0, [fp, #-36]	; 0xffffffdc
   49818:	ldr	r2, [fp, #-40]	; 0xffffffd8
   4981c:	ldr	r3, [fp, #-72]	; 0xffffffb8
   49820:	add	r2, r2, r3
   49824:	sub	r2, r0, r2
   49828:	sub	r0, fp, #88	; 0x58
   4982c:	sub	r3, fp, #84	; 0x54
   49830:	bl	54a1c <__assert_fail@plt+0x41e64>
   49834:	str	r0, [sp, #92]	; 0x5c
   49838:	ldr	r0, [sp, #92]	; 0x5c
   4983c:	cmp	r0, #0
   49840:	bne	49848 <__assert_fail@plt+0x36c90>
   49844:	b	49a48 <__assert_fail@plt+0x36e90>
   49848:	ldr	r0, [sp, #92]	; 0x5c
   4984c:	cmn	r0, #1
   49850:	bne	49860 <__assert_fail@plt+0x36ca8>
   49854:	movw	r0, #0
   49858:	strb	r0, [fp, #-73]	; 0xffffffb7
   4985c:	b	49a48 <__assert_fail@plt+0x36e90>
   49860:	ldr	r0, [sp, #92]	; 0x5c
   49864:	cmn	r0, #2
   49868:	bne	498dc <__assert_fail@plt+0x36d24>
   4986c:	movw	r0, #0
   49870:	strb	r0, [fp, #-73]	; 0xffffffb7
   49874:	ldr	r0, [fp, #-40]	; 0xffffffd8
   49878:	ldr	r1, [fp, #-72]	; 0xffffffb8
   4987c:	add	r0, r0, r1
   49880:	ldr	r1, [fp, #-36]	; 0xffffffdc
   49884:	cmp	r0, r1
   49888:	movw	r0, #0
   4988c:	str	r0, [sp, #28]
   49890:	bcs	498bc <__assert_fail@plt+0x36d04>
   49894:	ldr	r0, [fp, #-32]	; 0xffffffe0
   49898:	ldr	r1, [fp, #-40]	; 0xffffffd8
   4989c:	ldr	r2, [fp, #-72]	; 0xffffffb8
   498a0:	add	r1, r1, r2
   498a4:	add	r0, r0, r1
   498a8:	ldrb	r0, [r0]
   498ac:	cmp	r0, #0
   498b0:	movw	r0, #0
   498b4:	movne	r0, #1
   498b8:	str	r0, [sp, #28]
   498bc:	ldr	r0, [sp, #28]
   498c0:	tst	r0, #1
   498c4:	beq	498d8 <__assert_fail@plt+0x36d20>
   498c8:	ldr	r0, [fp, #-72]	; 0xffffffb8
   498cc:	add	r0, r0, #1
   498d0:	str	r0, [fp, #-72]	; 0xffffffb8
   498d4:	b	49874 <__assert_fail@plt+0x36cbc>
   498d8:	b	49a48 <__assert_fail@plt+0x36e90>
   498dc:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   498e0:	tst	r0, #1
   498e4:	beq	499f0 <__assert_fail@plt+0x36e38>
   498e8:	ldr	r0, [fp, #8]
   498ec:	cmp	r0, #2
   498f0:	bne	499f0 <__assert_fail@plt+0x36e38>
   498f4:	movw	r0, #1
   498f8:	str	r0, [sp, #88]	; 0x58
   498fc:	ldr	r0, [sp, #88]	; 0x58
   49900:	ldr	r1, [sp, #92]	; 0x5c
   49904:	cmp	r0, r1
   49908:	bcs	499ec <__assert_fail@plt+0x36e34>
   4990c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   49910:	ldr	r1, [fp, #-40]	; 0xffffffd8
   49914:	ldr	r2, [fp, #-72]	; 0xffffffb8
   49918:	add	r1, r1, r2
   4991c:	ldr	r2, [sp, #88]	; 0x58
   49920:	add	r1, r1, r2
   49924:	ldrb	r0, [r0, r1]
   49928:	sub	r0, r0, #91	; 0x5b
   4992c:	cmp	r0, #33	; 0x21
   49930:	str	r0, [sp, #24]
   49934:	bhi	499d4 <__assert_fail@plt+0x36e1c>
   49938:	add	r0, pc, #8
   4993c:	ldr	r1, [sp, #24]
   49940:	ldr	r0, [r0, r1, lsl #2]
   49944:	mov	pc, r0
   49948:	ldrdeq	r9, [r4], -r0
   4994c:	ldrdeq	r9, [r4], -r0
   49950:	ldrdeq	r9, [r4], -r4
   49954:	ldrdeq	r9, [r4], -r0
   49958:	ldrdeq	r9, [r4], -r4
   4995c:	ldrdeq	r9, [r4], -r0
   49960:	ldrdeq	r9, [r4], -r4
   49964:	ldrdeq	r9, [r4], -r4
   49968:	ldrdeq	r9, [r4], -r4
   4996c:	ldrdeq	r9, [r4], -r4
   49970:	ldrdeq	r9, [r4], -r4
   49974:	ldrdeq	r9, [r4], -r4
   49978:	ldrdeq	r9, [r4], -r4
   4997c:	ldrdeq	r9, [r4], -r4
   49980:	ldrdeq	r9, [r4], -r4
   49984:	ldrdeq	r9, [r4], -r4
   49988:	ldrdeq	r9, [r4], -r4
   4998c:	ldrdeq	r9, [r4], -r4
   49990:	ldrdeq	r9, [r4], -r4
   49994:	ldrdeq	r9, [r4], -r4
   49998:	ldrdeq	r9, [r4], -r4
   4999c:	ldrdeq	r9, [r4], -r4
   499a0:	ldrdeq	r9, [r4], -r4
   499a4:	ldrdeq	r9, [r4], -r4
   499a8:	ldrdeq	r9, [r4], -r4
   499ac:	ldrdeq	r9, [r4], -r4
   499b0:	ldrdeq	r9, [r4], -r4
   499b4:	ldrdeq	r9, [r4], -r4
   499b8:	ldrdeq	r9, [r4], -r4
   499bc:	ldrdeq	r9, [r4], -r4
   499c0:	ldrdeq	r9, [r4], -r4
   499c4:	ldrdeq	r9, [r4], -r4
   499c8:	ldrdeq	r9, [r4], -r4
   499cc:	ldrdeq	r9, [r4], -r0
   499d0:	b	4a18c <__assert_fail@plt+0x375d4>
   499d4:	b	499d8 <__assert_fail@plt+0x36e20>
   499d8:	b	499dc <__assert_fail@plt+0x36e24>
   499dc:	ldr	r0, [sp, #88]	; 0x58
   499e0:	add	r0, r0, #1
   499e4:	str	r0, [sp, #88]	; 0x58
   499e8:	b	498fc <__assert_fail@plt+0x36d44>
   499ec:	b	499f0 <__assert_fail@plt+0x36e38>
   499f0:	ldr	r0, [fp, #-88]	; 0xffffffa8
   499f4:	bl	126c0 <iswprint@plt>
   499f8:	cmp	r0, #0
   499fc:	bne	49a08 <__assert_fail@plt+0x36e50>
   49a00:	movw	r0, #0
   49a04:	strb	r0, [fp, #-73]	; 0xffffffb7
   49a08:	ldr	r0, [sp, #92]	; 0x5c
   49a0c:	ldr	r1, [fp, #-72]	; 0xffffffb8
   49a10:	add	r0, r1, r0
   49a14:	str	r0, [fp, #-72]	; 0xffffffb8
   49a18:	b	49a1c <__assert_fail@plt+0x36e64>
   49a1c:	b	49a20 <__assert_fail@plt+0x36e68>
   49a20:	b	49a24 <__assert_fail@plt+0x36e6c>
   49a24:	sub	r0, fp, #84	; 0x54
   49a28:	bl	12600 <mbsinit@plt>
   49a2c:	cmp	r0, #0
   49a30:	movw	r0, #0
   49a34:	movne	r0, #1
   49a38:	mvn	lr, #0
   49a3c:	eor	r0, r0, lr
   49a40:	tst	r0, #1
   49a44:	bne	49800 <__assert_fail@plt+0x36c48>
   49a48:	b	49a4c <__assert_fail@plt+0x36e94>
   49a4c:	ldrb	r0, [fp, #-73]	; 0xffffffb7
   49a50:	and	r0, r0, #1
   49a54:	strb	r0, [fp, #-67]	; 0xffffffbd
   49a58:	ldr	r0, [fp, #-72]	; 0xffffffb8
   49a5c:	movw	r1, #1
   49a60:	cmp	r1, r0
   49a64:	bcc	49a80 <__assert_fail@plt+0x36ec8>
   49a68:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   49a6c:	tst	r0, #1
   49a70:	beq	49d94 <__assert_fail@plt+0x371dc>
   49a74:	ldrb	r0, [fp, #-73]	; 0xffffffb7
   49a78:	tst	r0, #1
   49a7c:	bne	49d94 <__assert_fail@plt+0x371dc>
   49a80:	ldr	r0, [fp, #-40]	; 0xffffffd8
   49a84:	ldr	r1, [fp, #-72]	; 0xffffffb8
   49a88:	add	r0, r0, r1
   49a8c:	str	r0, [sp, #84]	; 0x54
   49a90:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   49a94:	tst	r0, #1
   49a98:	beq	49c48 <__assert_fail@plt+0x37090>
   49a9c:	ldrb	r0, [fp, #-73]	; 0xffffffb7
   49aa0:	tst	r0, #1
   49aa4:	bne	49c48 <__assert_fail@plt+0x37090>
   49aa8:	b	49aac <__assert_fail@plt+0x36ef4>
   49aac:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   49ab0:	tst	r0, #1
   49ab4:	beq	49abc <__assert_fail@plt+0x36f04>
   49ab8:	b	4a18c <__assert_fail@plt+0x375d4>
   49abc:	movw	r0, #1
   49ac0:	strb	r0, [fp, #-66]	; 0xffffffbe
   49ac4:	ldr	r0, [fp, #8]
   49ac8:	cmp	r0, #2
   49acc:	bne	49b80 <__assert_fail@plt+0x36fc8>
   49ad0:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   49ad4:	tst	r0, #1
   49ad8:	bne	49b80 <__assert_fail@plt+0x36fc8>
   49adc:	b	49ae0 <__assert_fail@plt+0x36f28>
   49ae0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   49ae4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   49ae8:	cmp	r0, r1
   49aec:	bcs	49b04 <__assert_fail@plt+0x36f4c>
   49af0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   49af4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   49af8:	add	r0, r0, r1
   49afc:	movw	r1, #39	; 0x27
   49b00:	strb	r1, [r0]
   49b04:	ldr	r0, [fp, #-44]	; 0xffffffd4
   49b08:	add	r0, r0, #1
   49b0c:	str	r0, [fp, #-44]	; 0xffffffd4
   49b10:	b	49b14 <__assert_fail@plt+0x36f5c>
   49b14:	ldr	r0, [fp, #-44]	; 0xffffffd4
   49b18:	ldr	r1, [fp, #-28]	; 0xffffffe4
   49b1c:	cmp	r0, r1
   49b20:	bcs	49b38 <__assert_fail@plt+0x36f80>
   49b24:	ldr	r0, [fp, #-24]	; 0xffffffe8
   49b28:	ldr	r1, [fp, #-44]	; 0xffffffd4
   49b2c:	add	r0, r0, r1
   49b30:	movw	r1, #36	; 0x24
   49b34:	strb	r1, [r0]
   49b38:	ldr	r0, [fp, #-44]	; 0xffffffd4
   49b3c:	add	r0, r0, #1
   49b40:	str	r0, [fp, #-44]	; 0xffffffd4
   49b44:	b	49b48 <__assert_fail@plt+0x36f90>
   49b48:	ldr	r0, [fp, #-44]	; 0xffffffd4
   49b4c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   49b50:	cmp	r0, r1
   49b54:	bcs	49b6c <__assert_fail@plt+0x36fb4>
   49b58:	ldr	r0, [fp, #-24]	; 0xffffffe8
   49b5c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   49b60:	add	r0, r0, r1
   49b64:	movw	r1, #39	; 0x27
   49b68:	strb	r1, [r0]
   49b6c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   49b70:	add	r0, r0, #1
   49b74:	str	r0, [fp, #-44]	; 0xffffffd4
   49b78:	movw	r0, #1
   49b7c:	strb	r0, [fp, #-60]	; 0xffffffc4
   49b80:	b	49b84 <__assert_fail@plt+0x36fcc>
   49b84:	ldr	r0, [fp, #-44]	; 0xffffffd4
   49b88:	ldr	r1, [fp, #-28]	; 0xffffffe4
   49b8c:	cmp	r0, r1
   49b90:	bcs	49ba8 <__assert_fail@plt+0x36ff0>
   49b94:	ldr	r0, [fp, #-24]	; 0xffffffe8
   49b98:	ldr	r1, [fp, #-44]	; 0xffffffd4
   49b9c:	add	r0, r0, r1
   49ba0:	movw	r1, #92	; 0x5c
   49ba4:	strb	r1, [r0]
   49ba8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   49bac:	add	r0, r0, #1
   49bb0:	str	r0, [fp, #-44]	; 0xffffffd4
   49bb4:	b	49bb8 <__assert_fail@plt+0x37000>
   49bb8:	b	49bbc <__assert_fail@plt+0x37004>
   49bbc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   49bc0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   49bc4:	cmp	r0, r1
   49bc8:	bcs	49be8 <__assert_fail@plt+0x37030>
   49bcc:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   49bd0:	asr	r0, r0, #6
   49bd4:	add	r0, r0, #48	; 0x30
   49bd8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   49bdc:	ldr	r2, [fp, #-44]	; 0xffffffd4
   49be0:	add	r1, r1, r2
   49be4:	strb	r0, [r1]
   49be8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   49bec:	add	r0, r0, #1
   49bf0:	str	r0, [fp, #-44]	; 0xffffffd4
   49bf4:	b	49bf8 <__assert_fail@plt+0x37040>
   49bf8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   49bfc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   49c00:	cmp	r0, r1
   49c04:	bcs	49c28 <__assert_fail@plt+0x37070>
   49c08:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   49c0c:	asr	r0, r0, #3
   49c10:	and	r0, r0, #7
   49c14:	add	r0, r0, #48	; 0x30
   49c18:	ldr	r1, [fp, #-24]	; 0xffffffe8
   49c1c:	ldr	r2, [fp, #-44]	; 0xffffffd4
   49c20:	add	r1, r1, r2
   49c24:	strb	r0, [r1]
   49c28:	ldr	r0, [fp, #-44]	; 0xffffffd4
   49c2c:	add	r0, r0, #1
   49c30:	str	r0, [fp, #-44]	; 0xffffffd4
   49c34:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   49c38:	and	r0, r0, #7
   49c3c:	add	r0, r0, #48	; 0x30
   49c40:	strb	r0, [fp, #-63]	; 0xffffffc1
   49c44:	b	49c94 <__assert_fail@plt+0x370dc>
   49c48:	ldrb	r0, [fp, #-65]	; 0xffffffbf
   49c4c:	tst	r0, #1
   49c50:	beq	49c90 <__assert_fail@plt+0x370d8>
   49c54:	b	49c58 <__assert_fail@plt+0x370a0>
   49c58:	ldr	r0, [fp, #-44]	; 0xffffffd4
   49c5c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   49c60:	cmp	r0, r1
   49c64:	bcs	49c7c <__assert_fail@plt+0x370c4>
   49c68:	ldr	r0, [fp, #-24]	; 0xffffffe8
   49c6c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   49c70:	add	r0, r0, r1
   49c74:	movw	r1, #92	; 0x5c
   49c78:	strb	r1, [r0]
   49c7c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   49c80:	add	r0, r0, #1
   49c84:	str	r0, [fp, #-44]	; 0xffffffd4
   49c88:	movw	r0, #0
   49c8c:	strb	r0, [fp, #-65]	; 0xffffffbf
   49c90:	b	49c94 <__assert_fail@plt+0x370dc>
   49c94:	ldr	r0, [sp, #84]	; 0x54
   49c98:	ldr	r1, [fp, #-40]	; 0xffffffd8
   49c9c:	add	r1, r1, #1
   49ca0:	cmp	r0, r1
   49ca4:	bhi	49cac <__assert_fail@plt+0x370f4>
   49ca8:	b	49d90 <__assert_fail@plt+0x371d8>
   49cac:	b	49cb0 <__assert_fail@plt+0x370f8>
   49cb0:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   49cb4:	tst	r0, #1
   49cb8:	beq	49d38 <__assert_fail@plt+0x37180>
   49cbc:	ldrb	r0, [fp, #-66]	; 0xffffffbe
   49cc0:	tst	r0, #1
   49cc4:	bne	49d38 <__assert_fail@plt+0x37180>
   49cc8:	b	49ccc <__assert_fail@plt+0x37114>
   49ccc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   49cd0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   49cd4:	cmp	r0, r1
   49cd8:	bcs	49cf0 <__assert_fail@plt+0x37138>
   49cdc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   49ce0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   49ce4:	add	r0, r0, r1
   49ce8:	movw	r1, #39	; 0x27
   49cec:	strb	r1, [r0]
   49cf0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   49cf4:	add	r0, r0, #1
   49cf8:	str	r0, [fp, #-44]	; 0xffffffd4
   49cfc:	b	49d00 <__assert_fail@plt+0x37148>
   49d00:	ldr	r0, [fp, #-44]	; 0xffffffd4
   49d04:	ldr	r1, [fp, #-28]	; 0xffffffe4
   49d08:	cmp	r0, r1
   49d0c:	bcs	49d24 <__assert_fail@plt+0x3716c>
   49d10:	ldr	r0, [fp, #-24]	; 0xffffffe8
   49d14:	ldr	r1, [fp, #-44]	; 0xffffffd4
   49d18:	add	r0, r0, r1
   49d1c:	movw	r1, #39	; 0x27
   49d20:	strb	r1, [r0]
   49d24:	ldr	r0, [fp, #-44]	; 0xffffffd4
   49d28:	add	r0, r0, #1
   49d2c:	str	r0, [fp, #-44]	; 0xffffffd4
   49d30:	movw	r0, #0
   49d34:	strb	r0, [fp, #-60]	; 0xffffffc4
   49d38:	b	49d3c <__assert_fail@plt+0x37184>
   49d3c:	b	49d40 <__assert_fail@plt+0x37188>
   49d40:	ldr	r0, [fp, #-44]	; 0xffffffd4
   49d44:	ldr	r1, [fp, #-28]	; 0xffffffe4
   49d48:	cmp	r0, r1
   49d4c:	bcs	49d64 <__assert_fail@plt+0x371ac>
   49d50:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   49d54:	ldr	r1, [fp, #-24]	; 0xffffffe8
   49d58:	ldr	r2, [fp, #-44]	; 0xffffffd4
   49d5c:	add	r1, r1, r2
   49d60:	strb	r0, [r1]
   49d64:	ldr	r0, [fp, #-44]	; 0xffffffd4
   49d68:	add	r0, r0, #1
   49d6c:	str	r0, [fp, #-44]	; 0xffffffd4
   49d70:	ldr	r0, [fp, #-32]	; 0xffffffe0
   49d74:	ldr	r1, [fp, #-40]	; 0xffffffd8
   49d78:	add	r1, r1, #1
   49d7c:	str	r1, [fp, #-40]	; 0xffffffd8
   49d80:	add	r0, r0, r1
   49d84:	ldrb	r0, [r0]
   49d88:	strb	r0, [fp, #-63]	; 0xffffffc1
   49d8c:	b	49a90 <__assert_fail@plt+0x36ed8>
   49d90:	b	49f20 <__assert_fail@plt+0x37368>
   49d94:	b	49d98 <__assert_fail@plt+0x371e0>
   49d98:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   49d9c:	tst	r0, #1
   49da0:	beq	49db0 <__assert_fail@plt+0x371f8>
   49da4:	ldr	r0, [fp, #8]
   49da8:	cmp	r0, #2
   49dac:	bne	49dbc <__assert_fail@plt+0x37204>
   49db0:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   49db4:	tst	r0, #1
   49db8:	beq	49df8 <__assert_fail@plt+0x37240>
   49dbc:	ldr	r0, [fp, #16]
   49dc0:	movw	r1, #0
   49dc4:	cmp	r0, r1
   49dc8:	beq	49df8 <__assert_fail@plt+0x37240>
   49dcc:	ldr	r0, [fp, #16]
   49dd0:	ldrb	r1, [fp, #-63]	; 0xffffffc1
   49dd4:	lsr	r1, r1, #5
   49dd8:	add	r0, r0, r1, lsl #2
   49ddc:	ldr	r0, [r0]
   49de0:	ldrb	r1, [fp, #-63]	; 0xffffffc1
   49de4:	and	r1, r1, #31
   49de8:	lsr	r0, r0, r1
   49dec:	and	r0, r0, #1
   49df0:	cmp	r0, #0
   49df4:	bne	49e08 <__assert_fail@plt+0x37250>
   49df8:	ldrb	r0, [fp, #-65]	; 0xffffffbf
   49dfc:	tst	r0, #1
   49e00:	bne	49e08 <__assert_fail@plt+0x37250>
   49e04:	b	49f20 <__assert_fail@plt+0x37368>
   49e08:	b	49e0c <__assert_fail@plt+0x37254>
   49e0c:	b	49e10 <__assert_fail@plt+0x37258>
   49e10:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   49e14:	tst	r0, #1
   49e18:	beq	49e20 <__assert_fail@plt+0x37268>
   49e1c:	b	4a18c <__assert_fail@plt+0x375d4>
   49e20:	movw	r0, #1
   49e24:	strb	r0, [fp, #-66]	; 0xffffffbe
   49e28:	ldr	r0, [fp, #8]
   49e2c:	cmp	r0, #2
   49e30:	bne	49ee4 <__assert_fail@plt+0x3732c>
   49e34:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   49e38:	tst	r0, #1
   49e3c:	bne	49ee4 <__assert_fail@plt+0x3732c>
   49e40:	b	49e44 <__assert_fail@plt+0x3728c>
   49e44:	ldr	r0, [fp, #-44]	; 0xffffffd4
   49e48:	ldr	r1, [fp, #-28]	; 0xffffffe4
   49e4c:	cmp	r0, r1
   49e50:	bcs	49e68 <__assert_fail@plt+0x372b0>
   49e54:	ldr	r0, [fp, #-24]	; 0xffffffe8
   49e58:	ldr	r1, [fp, #-44]	; 0xffffffd4
   49e5c:	add	r0, r0, r1
   49e60:	movw	r1, #39	; 0x27
   49e64:	strb	r1, [r0]
   49e68:	ldr	r0, [fp, #-44]	; 0xffffffd4
   49e6c:	add	r0, r0, #1
   49e70:	str	r0, [fp, #-44]	; 0xffffffd4
   49e74:	b	49e78 <__assert_fail@plt+0x372c0>
   49e78:	ldr	r0, [fp, #-44]	; 0xffffffd4
   49e7c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   49e80:	cmp	r0, r1
   49e84:	bcs	49e9c <__assert_fail@plt+0x372e4>
   49e88:	ldr	r0, [fp, #-24]	; 0xffffffe8
   49e8c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   49e90:	add	r0, r0, r1
   49e94:	movw	r1, #36	; 0x24
   49e98:	strb	r1, [r0]
   49e9c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   49ea0:	add	r0, r0, #1
   49ea4:	str	r0, [fp, #-44]	; 0xffffffd4
   49ea8:	b	49eac <__assert_fail@plt+0x372f4>
   49eac:	ldr	r0, [fp, #-44]	; 0xffffffd4
   49eb0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   49eb4:	cmp	r0, r1
   49eb8:	bcs	49ed0 <__assert_fail@plt+0x37318>
   49ebc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   49ec0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   49ec4:	add	r0, r0, r1
   49ec8:	movw	r1, #39	; 0x27
   49ecc:	strb	r1, [r0]
   49ed0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   49ed4:	add	r0, r0, #1
   49ed8:	str	r0, [fp, #-44]	; 0xffffffd4
   49edc:	movw	r0, #1
   49ee0:	strb	r0, [fp, #-60]	; 0xffffffc4
   49ee4:	b	49ee8 <__assert_fail@plt+0x37330>
   49ee8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   49eec:	ldr	r1, [fp, #-28]	; 0xffffffe4
   49ef0:	cmp	r0, r1
   49ef4:	bcs	49f0c <__assert_fail@plt+0x37354>
   49ef8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   49efc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   49f00:	add	r0, r0, r1
   49f04:	movw	r1, #92	; 0x5c
   49f08:	strb	r1, [r0]
   49f0c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   49f10:	add	r0, r0, #1
   49f14:	str	r0, [fp, #-44]	; 0xffffffd4
   49f18:	b	49f1c <__assert_fail@plt+0x37364>
   49f1c:	b	49f20 <__assert_fail@plt+0x37368>
   49f20:	b	49f24 <__assert_fail@plt+0x3736c>
   49f24:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   49f28:	tst	r0, #1
   49f2c:	beq	49fac <__assert_fail@plt+0x373f4>
   49f30:	ldrb	r0, [fp, #-66]	; 0xffffffbe
   49f34:	tst	r0, #1
   49f38:	bne	49fac <__assert_fail@plt+0x373f4>
   49f3c:	b	49f40 <__assert_fail@plt+0x37388>
   49f40:	ldr	r0, [fp, #-44]	; 0xffffffd4
   49f44:	ldr	r1, [fp, #-28]	; 0xffffffe4
   49f48:	cmp	r0, r1
   49f4c:	bcs	49f64 <__assert_fail@plt+0x373ac>
   49f50:	ldr	r0, [fp, #-24]	; 0xffffffe8
   49f54:	ldr	r1, [fp, #-44]	; 0xffffffd4
   49f58:	add	r0, r0, r1
   49f5c:	movw	r1, #39	; 0x27
   49f60:	strb	r1, [r0]
   49f64:	ldr	r0, [fp, #-44]	; 0xffffffd4
   49f68:	add	r0, r0, #1
   49f6c:	str	r0, [fp, #-44]	; 0xffffffd4
   49f70:	b	49f74 <__assert_fail@plt+0x373bc>
   49f74:	ldr	r0, [fp, #-44]	; 0xffffffd4
   49f78:	ldr	r1, [fp, #-28]	; 0xffffffe4
   49f7c:	cmp	r0, r1
   49f80:	bcs	49f98 <__assert_fail@plt+0x373e0>
   49f84:	ldr	r0, [fp, #-24]	; 0xffffffe8
   49f88:	ldr	r1, [fp, #-44]	; 0xffffffd4
   49f8c:	add	r0, r0, r1
   49f90:	movw	r1, #39	; 0x27
   49f94:	strb	r1, [r0]
   49f98:	ldr	r0, [fp, #-44]	; 0xffffffd4
   49f9c:	add	r0, r0, #1
   49fa0:	str	r0, [fp, #-44]	; 0xffffffd4
   49fa4:	movw	r0, #0
   49fa8:	strb	r0, [fp, #-60]	; 0xffffffc4
   49fac:	b	49fb0 <__assert_fail@plt+0x373f8>
   49fb0:	b	49fb4 <__assert_fail@plt+0x373fc>
   49fb4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   49fb8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   49fbc:	cmp	r0, r1
   49fc0:	bcs	49fd8 <__assert_fail@plt+0x37420>
   49fc4:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   49fc8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   49fcc:	ldr	r2, [fp, #-44]	; 0xffffffd4
   49fd0:	add	r1, r1, r2
   49fd4:	strb	r0, [r1]
   49fd8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   49fdc:	add	r0, r0, #1
   49fe0:	str	r0, [fp, #-44]	; 0xffffffd4
   49fe4:	ldrb	r0, [fp, #-67]	; 0xffffffbd
   49fe8:	tst	r0, #1
   49fec:	bne	49ff8 <__assert_fail@plt+0x37440>
   49ff0:	movw	r0, #0
   49ff4:	strb	r0, [fp, #-62]	; 0xffffffc2
   49ff8:	b	49ffc <__assert_fail@plt+0x37444>
   49ffc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   4a000:	add	r0, r0, #1
   4a004:	str	r0, [fp, #-40]	; 0xffffffd8
   4a008:	b	48db0 <__assert_fail@plt+0x361f8>
   4a00c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   4a010:	cmp	r0, #0
   4a014:	bne	4a034 <__assert_fail@plt+0x3747c>
   4a018:	ldr	r0, [fp, #8]
   4a01c:	cmp	r0, #2
   4a020:	bne	4a034 <__assert_fail@plt+0x3747c>
   4a024:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   4a028:	tst	r0, #1
   4a02c:	beq	4a034 <__assert_fail@plt+0x3747c>
   4a030:	b	4a18c <__assert_fail@plt+0x375d4>
   4a034:	ldr	r0, [fp, #8]
   4a038:	cmp	r0, #2
   4a03c:	bne	4a0dc <__assert_fail@plt+0x37524>
   4a040:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   4a044:	tst	r0, #1
   4a048:	bne	4a0dc <__assert_fail@plt+0x37524>
   4a04c:	ldrb	r0, [fp, #-61]	; 0xffffffc3
   4a050:	tst	r0, #1
   4a054:	beq	4a0dc <__assert_fail@plt+0x37524>
   4a058:	ldrb	r0, [fp, #-62]	; 0xffffffc2
   4a05c:	tst	r0, #1
   4a060:	beq	4a0a8 <__assert_fail@plt+0x374f0>
   4a064:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4a068:	ldr	r1, [fp, #-48]	; 0xffffffd0
   4a06c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   4a070:	ldr	r3, [fp, #-36]	; 0xffffffdc
   4a074:	ldr	ip, [fp, #12]
   4a078:	ldr	lr, [fp, #16]
   4a07c:	ldr	r4, [fp, #20]
   4a080:	ldr	r5, [fp, #24]
   4a084:	movw	r6, #5
   4a088:	str	r6, [sp]
   4a08c:	str	ip, [sp, #4]
   4a090:	str	lr, [sp, #8]
   4a094:	str	r4, [sp, #12]
   4a098:	str	r5, [sp, #16]
   4a09c:	bl	48ac8 <__assert_fail@plt+0x35f10>
   4a0a0:	str	r0, [fp, #-20]	; 0xffffffec
   4a0a4:	b	4a1f4 <__assert_fail@plt+0x3763c>
   4a0a8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   4a0ac:	cmp	r0, #0
   4a0b0:	bne	4a0d4 <__assert_fail@plt+0x3751c>
   4a0b4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   4a0b8:	cmp	r0, #0
   4a0bc:	beq	4a0d4 <__assert_fail@plt+0x3751c>
   4a0c0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   4a0c4:	str	r0, [fp, #-28]	; 0xffffffe4
   4a0c8:	movw	r0, #0
   4a0cc:	str	r0, [fp, #-44]	; 0xffffffd4
   4a0d0:	b	48b70 <__assert_fail@plt+0x35fb8>
   4a0d4:	b	4a0d8 <__assert_fail@plt+0x37520>
   4a0d8:	b	4a0dc <__assert_fail@plt+0x37524>
   4a0dc:	ldr	r0, [fp, #-52]	; 0xffffffcc
   4a0e0:	movw	r1, #0
   4a0e4:	cmp	r0, r1
   4a0e8:	beq	4a15c <__assert_fail@plt+0x375a4>
   4a0ec:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   4a0f0:	tst	r0, #1
   4a0f4:	bne	4a15c <__assert_fail@plt+0x375a4>
   4a0f8:	b	4a0fc <__assert_fail@plt+0x37544>
   4a0fc:	ldr	r0, [fp, #-52]	; 0xffffffcc
   4a100:	ldrsb	r0, [r0]
   4a104:	cmp	r0, #0
   4a108:	beq	4a158 <__assert_fail@plt+0x375a0>
   4a10c:	b	4a110 <__assert_fail@plt+0x37558>
   4a110:	ldr	r0, [fp, #-44]	; 0xffffffd4
   4a114:	ldr	r1, [fp, #-28]	; 0xffffffe4
   4a118:	cmp	r0, r1
   4a11c:	bcs	4a138 <__assert_fail@plt+0x37580>
   4a120:	ldr	r0, [fp, #-52]	; 0xffffffcc
   4a124:	ldrb	r0, [r0]
   4a128:	ldr	r1, [fp, #-24]	; 0xffffffe8
   4a12c:	ldr	r2, [fp, #-44]	; 0xffffffd4
   4a130:	add	r1, r1, r2
   4a134:	strb	r0, [r1]
   4a138:	ldr	r0, [fp, #-44]	; 0xffffffd4
   4a13c:	add	r0, r0, #1
   4a140:	str	r0, [fp, #-44]	; 0xffffffd4
   4a144:	b	4a148 <__assert_fail@plt+0x37590>
   4a148:	ldr	r0, [fp, #-52]	; 0xffffffcc
   4a14c:	add	r0, r0, #1
   4a150:	str	r0, [fp, #-52]	; 0xffffffcc
   4a154:	b	4a0fc <__assert_fail@plt+0x37544>
   4a158:	b	4a15c <__assert_fail@plt+0x375a4>
   4a15c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   4a160:	ldr	r1, [fp, #-28]	; 0xffffffe4
   4a164:	cmp	r0, r1
   4a168:	bcs	4a180 <__assert_fail@plt+0x375c8>
   4a16c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4a170:	ldr	r1, [fp, #-44]	; 0xffffffd4
   4a174:	add	r0, r0, r1
   4a178:	movw	r1, #0
   4a17c:	strb	r1, [r0]
   4a180:	ldr	r0, [fp, #-44]	; 0xffffffd4
   4a184:	str	r0, [fp, #-20]	; 0xffffffec
   4a188:	b	4a1f4 <__assert_fail@plt+0x3763c>
   4a18c:	ldr	r0, [fp, #8]
   4a190:	cmp	r0, #2
   4a194:	bne	4a1ac <__assert_fail@plt+0x375f4>
   4a198:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   4a19c:	tst	r0, #1
   4a1a0:	beq	4a1ac <__assert_fail@plt+0x375f4>
   4a1a4:	movw	r0, #4
   4a1a8:	str	r0, [fp, #8]
   4a1ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4a1b0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   4a1b4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   4a1b8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   4a1bc:	ldr	ip, [fp, #8]
   4a1c0:	ldr	lr, [fp, #12]
   4a1c4:	mvn	r4, #2
   4a1c8:	and	lr, lr, r4
   4a1cc:	ldr	r4, [fp, #20]
   4a1d0:	ldr	r5, [fp, #24]
   4a1d4:	str	ip, [sp]
   4a1d8:	str	lr, [sp, #4]
   4a1dc:	movw	ip, #0
   4a1e0:	str	ip, [sp, #8]
   4a1e4:	str	r4, [sp, #12]
   4a1e8:	str	r5, [sp, #16]
   4a1ec:	bl	48ac8 <__assert_fail@plt+0x35f10>
   4a1f0:	str	r0, [fp, #-20]	; 0xffffffec
   4a1f4:	ldr	r0, [fp, #-20]	; 0xffffffec
   4a1f8:	sub	sp, fp, #16
   4a1fc:	pop	{r4, r5, r6, sl, fp, pc}
   4a200:	push	{fp, lr}
   4a204:	mov	fp, sp
   4a208:	sub	sp, sp, #16
   4a20c:	str	r0, [fp, #-4]
   4a210:	str	r1, [sp, #8]
   4a214:	str	r2, [sp, #4]
   4a218:	ldr	r0, [fp, #-4]
   4a21c:	ldr	r1, [sp, #8]
   4a220:	ldr	r3, [sp, #4]
   4a224:	movw	r2, #0
   4a228:	bl	4a234 <__assert_fail@plt+0x3767c>
   4a22c:	mov	sp, fp
   4a230:	pop	{fp, pc}
   4a234:	push	{r4, r5, r6, sl, fp, lr}
   4a238:	add	fp, sp, #16
   4a23c:	sub	sp, sp, #72	; 0x48
   4a240:	str	r0, [fp, #-20]	; 0xffffffec
   4a244:	str	r1, [fp, #-24]	; 0xffffffe8
   4a248:	str	r2, [fp, #-28]	; 0xffffffe4
   4a24c:	str	r3, [fp, #-32]	; 0xffffffe0
   4a250:	ldr	r0, [fp, #-32]	; 0xffffffe0
   4a254:	movw	r1, #0
   4a258:	cmp	r0, r1
   4a25c:	beq	4a26c <__assert_fail@plt+0x376b4>
   4a260:	ldr	r0, [fp, #-32]	; 0xffffffe0
   4a264:	str	r0, [sp, #32]
   4a268:	b	4a27c <__assert_fail@plt+0x376c4>
   4a26c:	movw	r0, #65316	; 0xff24
   4a270:	movt	r0, #8
   4a274:	str	r0, [sp, #32]
   4a278:	b	4a27c <__assert_fail@plt+0x376c4>
   4a27c:	ldr	r0, [sp, #32]
   4a280:	str	r0, [fp, #-36]	; 0xffffffdc
   4a284:	bl	128d0 <__errno_location@plt>
   4a288:	ldr	r0, [r0]
   4a28c:	str	r0, [fp, #-40]	; 0xffffffd8
   4a290:	ldr	r0, [fp, #-36]	; 0xffffffdc
   4a294:	ldr	r0, [r0, #4]
   4a298:	ldr	lr, [fp, #-28]	; 0xffffffe4
   4a29c:	movw	r1, #0
   4a2a0:	cmp	lr, r1
   4a2a4:	movw	lr, #0
   4a2a8:	movne	lr, #1
   4a2ac:	tst	lr, #1
   4a2b0:	mov	lr, r1
   4a2b4:	moveq	lr, #1
   4a2b8:	orr	r0, r0, lr
   4a2bc:	str	r0, [sp, #44]	; 0x2c
   4a2c0:	ldr	r2, [fp, #-20]	; 0xffffffec
   4a2c4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4a2c8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   4a2cc:	ldr	r0, [r0]
   4a2d0:	ldr	lr, [sp, #44]	; 0x2c
   4a2d4:	ldr	ip, [fp, #-36]	; 0xffffffdc
   4a2d8:	add	ip, ip, #8
   4a2dc:	ldr	r4, [fp, #-36]	; 0xffffffdc
   4a2e0:	ldr	r4, [r4, #40]	; 0x28
   4a2e4:	ldr	r5, [fp, #-36]	; 0xffffffdc
   4a2e8:	ldr	r5, [r5, #44]	; 0x2c
   4a2ec:	str	r0, [sp, #28]
   4a2f0:	mov	r0, r1
   4a2f4:	ldr	r6, [sp, #28]
   4a2f8:	str	r6, [sp]
   4a2fc:	str	lr, [sp, #4]
   4a300:	str	ip, [sp, #8]
   4a304:	str	r4, [sp, #12]
   4a308:	str	r5, [sp, #16]
   4a30c:	bl	48ac8 <__assert_fail@plt+0x35f10>
   4a310:	add	r0, r0, #1
   4a314:	str	r0, [sp, #40]	; 0x28
   4a318:	ldr	r0, [sp, #40]	; 0x28
   4a31c:	bl	4c40c <__assert_fail@plt+0x39854>
   4a320:	str	r0, [sp, #36]	; 0x24
   4a324:	ldr	r0, [sp, #36]	; 0x24
   4a328:	ldr	r1, [sp, #40]	; 0x28
   4a32c:	ldr	r2, [fp, #-20]	; 0xffffffec
   4a330:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4a334:	ldr	ip, [fp, #-36]	; 0xffffffdc
   4a338:	ldr	ip, [ip]
   4a33c:	ldr	lr, [sp, #44]	; 0x2c
   4a340:	ldr	r4, [fp, #-36]	; 0xffffffdc
   4a344:	add	r4, r4, #8
   4a348:	ldr	r5, [fp, #-36]	; 0xffffffdc
   4a34c:	ldr	r5, [r5, #40]	; 0x28
   4a350:	ldr	r6, [fp, #-36]	; 0xffffffdc
   4a354:	ldr	r6, [r6, #44]	; 0x2c
   4a358:	str	ip, [sp]
   4a35c:	str	lr, [sp, #4]
   4a360:	str	r4, [sp, #8]
   4a364:	str	r5, [sp, #12]
   4a368:	str	r6, [sp, #16]
   4a36c:	bl	48ac8 <__assert_fail@plt+0x35f10>
   4a370:	ldr	r1, [fp, #-40]	; 0xffffffd8
   4a374:	str	r0, [sp, #24]
   4a378:	str	r1, [sp, #20]
   4a37c:	bl	128d0 <__errno_location@plt>
   4a380:	ldr	r1, [sp, #20]
   4a384:	str	r1, [r0]
   4a388:	ldr	r0, [fp, #-28]	; 0xffffffe4
   4a38c:	movw	r2, #0
   4a390:	cmp	r0, r2
   4a394:	beq	4a3a8 <__assert_fail@plt+0x377f0>
   4a398:	ldr	r0, [sp, #40]	; 0x28
   4a39c:	sub	r0, r0, #1
   4a3a0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   4a3a4:	str	r0, [r1]
   4a3a8:	ldr	r0, [sp, #36]	; 0x24
   4a3ac:	sub	sp, fp, #16
   4a3b0:	pop	{r4, r5, r6, sl, fp, pc}
   4a3b4:	push	{fp, lr}
   4a3b8:	mov	fp, sp
   4a3bc:	sub	sp, sp, #8
   4a3c0:	movw	r0, #63184	; 0xf6d0
   4a3c4:	movt	r0, #8
   4a3c8:	ldr	r0, [r0]
   4a3cc:	str	r0, [sp, #4]
   4a3d0:	movw	r0, #1
   4a3d4:	str	r0, [sp]
   4a3d8:	ldr	r0, [sp]
   4a3dc:	movw	r1, #63188	; 0xf6d4
   4a3e0:	movt	r1, #8
   4a3e4:	ldr	r1, [r1]
   4a3e8:	cmp	r0, r1
   4a3ec:	bge	4a414 <__assert_fail@plt+0x3785c>
   4a3f0:	ldr	r0, [sp, #4]
   4a3f4:	ldr	r1, [sp]
   4a3f8:	add	r0, r0, r1, lsl #3
   4a3fc:	ldr	r0, [r0, #4]
   4a400:	bl	50c68 <__assert_fail@plt+0x3e0b0>
   4a404:	ldr	r0, [sp]
   4a408:	add	r0, r0, #1
   4a40c:	str	r0, [sp]
   4a410:	b	4a3d8 <__assert_fail@plt+0x37820>
   4a414:	ldr	r0, [sp, #4]
   4a418:	ldr	r0, [r0, #4]
   4a41c:	movw	r1, #65364	; 0xff54
   4a420:	movt	r1, #8
   4a424:	cmp	r0, r1
   4a428:	beq	4a454 <__assert_fail@plt+0x3789c>
   4a42c:	ldr	r0, [sp, #4]
   4a430:	ldr	r0, [r0, #4]
   4a434:	bl	50c68 <__assert_fail@plt+0x3e0b0>
   4a438:	movw	r0, #256	; 0x100
   4a43c:	movw	lr, #63192	; 0xf6d8
   4a440:	movt	lr, #8
   4a444:	str	r0, [lr]
   4a448:	movw	r0, #65364	; 0xff54
   4a44c:	movt	r0, #8
   4a450:	str	r0, [lr, #4]
   4a454:	ldr	r0, [sp, #4]
   4a458:	movw	r1, #63192	; 0xf6d8
   4a45c:	movt	r1, #8
   4a460:	cmp	r0, r1
   4a464:	beq	4a484 <__assert_fail@plt+0x378cc>
   4a468:	ldr	r0, [sp, #4]
   4a46c:	bl	50c68 <__assert_fail@plt+0x3e0b0>
   4a470:	movw	r0, #63184	; 0xf6d0
   4a474:	movt	r0, #8
   4a478:	movw	lr, #63192	; 0xf6d8
   4a47c:	movt	lr, #8
   4a480:	str	lr, [r0]
   4a484:	movw	r0, #63188	; 0xf6d4
   4a488:	movt	r0, #8
   4a48c:	movw	r1, #1
   4a490:	str	r1, [r0]
   4a494:	mov	sp, fp
   4a498:	pop	{fp, pc}
   4a49c:	push	{fp, lr}
   4a4a0:	mov	fp, sp
   4a4a4:	sub	sp, sp, #8
   4a4a8:	str	r0, [sp, #4]
   4a4ac:	str	r1, [sp]
   4a4b0:	ldr	r0, [sp, #4]
   4a4b4:	ldr	r1, [sp]
   4a4b8:	mvn	r2, #0
   4a4bc:	movw	r3, #65316	; 0xff24
   4a4c0:	movt	r3, #8
   4a4c4:	bl	4a4d0 <__assert_fail@plt+0x37918>
   4a4c8:	mov	sp, fp
   4a4cc:	pop	{fp, pc}
   4a4d0:	push	{r4, r5, r6, sl, fp, lr}
   4a4d4:	add	fp, sp, #16
   4a4d8:	sub	sp, sp, #88	; 0x58
   4a4dc:	str	r0, [fp, #-20]	; 0xffffffec
   4a4e0:	str	r1, [fp, #-24]	; 0xffffffe8
   4a4e4:	str	r2, [fp, #-28]	; 0xffffffe4
   4a4e8:	str	r3, [fp, #-32]	; 0xffffffe0
   4a4ec:	bl	128d0 <__errno_location@plt>
   4a4f0:	ldr	r1, [pc, #676]	; 4a79c <__assert_fail@plt+0x37be4>
   4a4f4:	ldr	r0, [r0]
   4a4f8:	str	r0, [fp, #-36]	; 0xffffffdc
   4a4fc:	movw	r0, #63184	; 0xf6d0
   4a500:	movt	r0, #8
   4a504:	ldr	r0, [r0]
   4a508:	str	r0, [fp, #-40]	; 0xffffffd8
   4a50c:	str	r1, [fp, #-44]	; 0xffffffd4
   4a510:	ldr	r0, [fp, #-20]	; 0xffffffec
   4a514:	movw	r1, #0
   4a518:	cmp	r1, r0
   4a51c:	bgt	4a530 <__assert_fail@plt+0x37978>
   4a520:	ldr	r0, [fp, #-20]	; 0xffffffec
   4a524:	ldr	r1, [fp, #-44]	; 0xffffffd4
   4a528:	cmp	r0, r1
   4a52c:	blt	4a534 <__assert_fail@plt+0x3797c>
   4a530:	bl	12b64 <abort@plt>
   4a534:	movw	r0, #63188	; 0xf6d4
   4a538:	movt	r0, #8
   4a53c:	ldr	r0, [r0]
   4a540:	ldr	r1, [fp, #-20]	; 0xffffffec
   4a544:	cmp	r0, r1
   4a548:	bgt	4a640 <__assert_fail@plt+0x37a88>
   4a54c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   4a550:	movw	r1, #63192	; 0xf6d8
   4a554:	movt	r1, #8
   4a558:	cmp	r0, r1
   4a55c:	movw	r0, #0
   4a560:	moveq	r0, #1
   4a564:	and	r0, r0, #1
   4a568:	strb	r0, [fp, #-45]	; 0xffffffd3
   4a56c:	movw	r0, #63188	; 0xf6d4
   4a570:	movt	r0, #8
   4a574:	ldr	r0, [r0]
   4a578:	str	r0, [sp, #52]	; 0x34
   4a57c:	ldrb	r0, [fp, #-45]	; 0xffffffd3
   4a580:	tst	r0, #1
   4a584:	beq	4a594 <__assert_fail@plt+0x379dc>
   4a588:	movw	r0, #0
   4a58c:	str	r0, [sp, #32]
   4a590:	b	4a59c <__assert_fail@plt+0x379e4>
   4a594:	ldr	r0, [fp, #-40]	; 0xffffffd8
   4a598:	str	r0, [sp, #32]
   4a59c:	ldr	r0, [sp, #32]
   4a5a0:	ldr	r1, [fp, #-20]	; 0xffffffec
   4a5a4:	movw	r2, #63188	; 0xf6d4
   4a5a8:	movt	r2, #8
   4a5ac:	ldr	r2, [r2]
   4a5b0:	sub	r1, r1, r2
   4a5b4:	add	r2, r1, #1
   4a5b8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   4a5bc:	add	r1, sp, #52	; 0x34
   4a5c0:	movw	ip, #8
   4a5c4:	str	ip, [sp]
   4a5c8:	bl	4c648 <__assert_fail@plt+0x39a90>
   4a5cc:	str	r0, [fp, #-40]	; 0xffffffd8
   4a5d0:	movw	r1, #63184	; 0xf6d0
   4a5d4:	movt	r1, #8
   4a5d8:	str	r0, [r1]
   4a5dc:	ldrb	r0, [fp, #-45]	; 0xffffffd3
   4a5e0:	tst	r0, #1
   4a5e4:	beq	4a604 <__assert_fail@plt+0x37a4c>
   4a5e8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   4a5ec:	movw	r1, #63192	; 0xf6d8
   4a5f0:	movt	r1, #8
   4a5f4:	ldr	r2, [r1]
   4a5f8:	str	r2, [r0]
   4a5fc:	ldr	r1, [r1, #4]
   4a600:	str	r1, [r0, #4]
   4a604:	ldr	r0, [fp, #-40]	; 0xffffffd8
   4a608:	movw	r1, #63188	; 0xf6d4
   4a60c:	movt	r1, #8
   4a610:	ldr	r1, [r1]
   4a614:	add	r0, r0, r1, lsl #3
   4a618:	ldr	r2, [sp, #52]	; 0x34
   4a61c:	sub	r1, r2, r1
   4a620:	lsl	r2, r1, #3
   4a624:	movw	r1, #0
   4a628:	and	r1, r1, #255	; 0xff
   4a62c:	bl	12900 <memset@plt>
   4a630:	ldr	r0, [sp, #52]	; 0x34
   4a634:	movw	r1, #63188	; 0xf6d4
   4a638:	movt	r1, #8
   4a63c:	str	r0, [r1]
   4a640:	ldr	r0, [fp, #-40]	; 0xffffffd8
   4a644:	ldr	r1, [fp, #-20]	; 0xffffffec
   4a648:	ldr	r0, [r0, r1, lsl #3]
   4a64c:	str	r0, [sp, #48]	; 0x30
   4a650:	ldr	r0, [fp, #-40]	; 0xffffffd8
   4a654:	ldr	r1, [fp, #-20]	; 0xffffffec
   4a658:	add	r0, r0, r1, lsl #3
   4a65c:	ldr	r0, [r0, #4]
   4a660:	str	r0, [sp, #44]	; 0x2c
   4a664:	ldr	r0, [fp, #-32]	; 0xffffffe0
   4a668:	ldr	r0, [r0, #4]
   4a66c:	orr	r0, r0, #1
   4a670:	str	r0, [sp, #40]	; 0x28
   4a674:	ldr	r0, [sp, #44]	; 0x2c
   4a678:	ldr	r1, [sp, #48]	; 0x30
   4a67c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   4a680:	ldr	r3, [fp, #-28]	; 0xffffffe4
   4a684:	ldr	ip, [fp, #-32]	; 0xffffffe0
   4a688:	ldr	ip, [ip]
   4a68c:	ldr	lr, [sp, #40]	; 0x28
   4a690:	ldr	r4, [fp, #-32]	; 0xffffffe0
   4a694:	add	r4, r4, #8
   4a698:	ldr	r5, [fp, #-32]	; 0xffffffe0
   4a69c:	ldr	r5, [r5, #40]	; 0x28
   4a6a0:	ldr	r6, [fp, #-32]	; 0xffffffe0
   4a6a4:	ldr	r6, [r6, #44]	; 0x2c
   4a6a8:	str	ip, [sp]
   4a6ac:	str	lr, [sp, #4]
   4a6b0:	str	r4, [sp, #8]
   4a6b4:	str	r5, [sp, #12]
   4a6b8:	str	r6, [sp, #16]
   4a6bc:	bl	48ac8 <__assert_fail@plt+0x35f10>
   4a6c0:	str	r0, [sp, #36]	; 0x24
   4a6c4:	ldr	r0, [sp, #48]	; 0x30
   4a6c8:	ldr	r1, [sp, #36]	; 0x24
   4a6cc:	cmp	r0, r1
   4a6d0:	bhi	4a77c <__assert_fail@plt+0x37bc4>
   4a6d4:	ldr	r0, [sp, #36]	; 0x24
   4a6d8:	add	r0, r0, #1
   4a6dc:	str	r0, [sp, #48]	; 0x30
   4a6e0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   4a6e4:	ldr	r2, [fp, #-20]	; 0xffffffec
   4a6e8:	add	r1, r1, r2, lsl #3
   4a6ec:	str	r0, [r1]
   4a6f0:	ldr	r0, [sp, #44]	; 0x2c
   4a6f4:	movw	r1, #65364	; 0xff54
   4a6f8:	movt	r1, #8
   4a6fc:	cmp	r0, r1
   4a700:	beq	4a70c <__assert_fail@plt+0x37b54>
   4a704:	ldr	r0, [sp, #44]	; 0x2c
   4a708:	bl	50c68 <__assert_fail@plt+0x3e0b0>
   4a70c:	ldr	r0, [sp, #48]	; 0x30
   4a710:	bl	4c40c <__assert_fail@plt+0x39854>
   4a714:	mov	lr, r0
   4a718:	str	r0, [sp, #44]	; 0x2c
   4a71c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   4a720:	ldr	r1, [fp, #-20]	; 0xffffffec
   4a724:	add	r0, r0, r1, lsl #3
   4a728:	str	lr, [r0, #4]
   4a72c:	ldr	r0, [sp, #44]	; 0x2c
   4a730:	ldr	r1, [sp, #48]	; 0x30
   4a734:	ldr	r2, [fp, #-24]	; 0xffffffe8
   4a738:	ldr	r3, [fp, #-28]	; 0xffffffe4
   4a73c:	ldr	lr, [fp, #-32]	; 0xffffffe0
   4a740:	ldr	lr, [lr]
   4a744:	ldr	ip, [sp, #40]	; 0x28
   4a748:	ldr	r4, [fp, #-32]	; 0xffffffe0
   4a74c:	add	r4, r4, #8
   4a750:	ldr	r5, [fp, #-32]	; 0xffffffe0
   4a754:	ldr	r5, [r5, #40]	; 0x28
   4a758:	ldr	r6, [fp, #-32]	; 0xffffffe0
   4a75c:	ldr	r6, [r6, #44]	; 0x2c
   4a760:	str	lr, [sp]
   4a764:	str	ip, [sp, #4]
   4a768:	str	r4, [sp, #8]
   4a76c:	str	r5, [sp, #12]
   4a770:	str	r6, [sp, #16]
   4a774:	bl	48ac8 <__assert_fail@plt+0x35f10>
   4a778:	str	r0, [sp, #28]
   4a77c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   4a780:	str	r0, [sp, #24]
   4a784:	bl	128d0 <__errno_location@plt>
   4a788:	ldr	lr, [sp, #24]
   4a78c:	str	lr, [r0]
   4a790:	ldr	r0, [sp, #44]	; 0x2c
   4a794:	sub	sp, fp, #16
   4a798:	pop	{r4, r5, r6, sl, fp, pc}
   4a79c:	svcvc	0x00ffffff
   4a7a0:	push	{fp, lr}
   4a7a4:	mov	fp, sp
   4a7a8:	sub	sp, sp, #16
   4a7ac:	str	r0, [fp, #-4]
   4a7b0:	str	r1, [sp, #8]
   4a7b4:	str	r2, [sp, #4]
   4a7b8:	ldr	r0, [fp, #-4]
   4a7bc:	ldr	r1, [sp, #8]
   4a7c0:	ldr	r2, [sp, #4]
   4a7c4:	movw	r3, #65316	; 0xff24
   4a7c8:	movt	r3, #8
   4a7cc:	bl	4a4d0 <__assert_fail@plt+0x37918>
   4a7d0:	mov	sp, fp
   4a7d4:	pop	{fp, pc}
   4a7d8:	push	{fp, lr}
   4a7dc:	mov	fp, sp
   4a7e0:	sub	sp, sp, #8
   4a7e4:	str	r0, [sp, #4]
   4a7e8:	ldr	r1, [sp, #4]
   4a7ec:	movw	r0, #0
   4a7f0:	bl	4a49c <__assert_fail@plt+0x378e4>
   4a7f4:	mov	sp, fp
   4a7f8:	pop	{fp, pc}
   4a7fc:	push	{fp, lr}
   4a800:	mov	fp, sp
   4a804:	sub	sp, sp, #8
   4a808:	str	r0, [sp, #4]
   4a80c:	str	r1, [sp]
   4a810:	ldr	r1, [sp, #4]
   4a814:	ldr	r2, [sp]
   4a818:	movw	r0, #0
   4a81c:	bl	4a7a0 <__assert_fail@plt+0x37be8>
   4a820:	mov	sp, fp
   4a824:	pop	{fp, pc}
   4a828:	push	{fp, lr}
   4a82c:	mov	fp, sp
   4a830:	sub	sp, sp, #64	; 0x40
   4a834:	str	r0, [fp, #-4]
   4a838:	str	r1, [fp, #-8]
   4a83c:	str	r2, [fp, #-12]
   4a840:	ldr	r1, [fp, #-8]
   4a844:	add	r0, sp, #4
   4a848:	bl	4a868 <__assert_fail@plt+0x37cb0>
   4a84c:	ldr	r0, [fp, #-4]
   4a850:	ldr	r1, [fp, #-12]
   4a854:	mvn	r2, #0
   4a858:	add	r3, sp, #4
   4a85c:	bl	4a4d0 <__assert_fail@plt+0x37918>
   4a860:	mov	sp, fp
   4a864:	pop	{fp, pc}
   4a868:	push	{fp, lr}
   4a86c:	mov	fp, sp
   4a870:	sub	sp, sp, #8
   4a874:	str	r1, [sp, #4]
   4a878:	mov	r1, r0
   4a87c:	str	r0, [sp]
   4a880:	mov	r0, r1
   4a884:	movw	r1, #0
   4a888:	and	r1, r1, #255	; 0xff
   4a88c:	movw	r2, #48	; 0x30
   4a890:	bl	12900 <memset@plt>
   4a894:	ldr	r0, [sp, #4]
   4a898:	cmp	r0, #10
   4a89c:	bne	4a8a4 <__assert_fail@plt+0x37cec>
   4a8a0:	bl	12b64 <abort@plt>
   4a8a4:	ldr	r0, [sp, #4]
   4a8a8:	ldr	r1, [sp]
   4a8ac:	str	r0, [r1]
   4a8b0:	mov	sp, fp
   4a8b4:	pop	{fp, pc}
   4a8b8:	push	{fp, lr}
   4a8bc:	mov	fp, sp
   4a8c0:	sub	sp, sp, #64	; 0x40
   4a8c4:	str	r0, [fp, #-4]
   4a8c8:	str	r1, [fp, #-8]
   4a8cc:	str	r2, [fp, #-12]
   4a8d0:	str	r3, [fp, #-16]
   4a8d4:	ldr	r1, [fp, #-8]
   4a8d8:	mov	r0, sp
   4a8dc:	bl	4a868 <__assert_fail@plt+0x37cb0>
   4a8e0:	ldr	r0, [fp, #-4]
   4a8e4:	ldr	r1, [fp, #-12]
   4a8e8:	ldr	r2, [fp, #-16]
   4a8ec:	mov	r3, sp
   4a8f0:	bl	4a4d0 <__assert_fail@plt+0x37918>
   4a8f4:	mov	sp, fp
   4a8f8:	pop	{fp, pc}
   4a8fc:	push	{fp, lr}
   4a900:	mov	fp, sp
   4a904:	sub	sp, sp, #8
   4a908:	str	r0, [sp, #4]
   4a90c:	str	r1, [sp]
   4a910:	ldr	r1, [sp, #4]
   4a914:	ldr	r2, [sp]
   4a918:	movw	r0, #0
   4a91c:	bl	4a828 <__assert_fail@plt+0x37c70>
   4a920:	mov	sp, fp
   4a924:	pop	{fp, pc}
   4a928:	push	{fp, lr}
   4a92c:	mov	fp, sp
   4a930:	sub	sp, sp, #16
   4a934:	str	r0, [fp, #-4]
   4a938:	str	r1, [sp, #8]
   4a93c:	str	r2, [sp, #4]
   4a940:	ldr	r1, [fp, #-4]
   4a944:	ldr	r2, [sp, #8]
   4a948:	ldr	r3, [sp, #4]
   4a94c:	movw	r0, #0
   4a950:	bl	4a8b8 <__assert_fail@plt+0x37d00>
   4a954:	mov	sp, fp
   4a958:	pop	{fp, pc}
   4a95c:	push	{fp, lr}
   4a960:	mov	fp, sp
   4a964:	sub	sp, sp, #72	; 0x48
   4a968:	movw	r3, #65316	; 0xff24
   4a96c:	movt	r3, #8
   4a970:	str	r0, [fp, #-4]
   4a974:	str	r1, [fp, #-8]
   4a978:	strb	r2, [fp, #-9]
   4a97c:	add	r0, sp, #12
   4a980:	mov	r1, r0
   4a984:	str	r0, [sp, #8]
   4a988:	mov	r0, r1
   4a98c:	mov	r1, r3
   4a990:	movw	r2, #48	; 0x30
   4a994:	bl	125c4 <memcpy@plt>
   4a998:	ldr	r0, [sp, #8]
   4a99c:	ldrb	r1, [fp, #-9]
   4a9a0:	movw	r2, #1
   4a9a4:	bl	4886c <__assert_fail@plt+0x35cb4>
   4a9a8:	ldr	r1, [fp, #-4]
   4a9ac:	ldr	r2, [fp, #-8]
   4a9b0:	movw	r3, #0
   4a9b4:	str	r0, [sp, #4]
   4a9b8:	mov	r0, r3
   4a9bc:	add	r3, sp, #12
   4a9c0:	bl	4a4d0 <__assert_fail@plt+0x37918>
   4a9c4:	mov	sp, fp
   4a9c8:	pop	{fp, pc}
   4a9cc:	push	{fp, lr}
   4a9d0:	mov	fp, sp
   4a9d4:	sub	sp, sp, #8
   4a9d8:	str	r0, [sp, #4]
   4a9dc:	strb	r1, [sp, #3]
   4a9e0:	ldr	r0, [sp, #4]
   4a9e4:	mvn	r1, #0
   4a9e8:	ldrb	r2, [sp, #3]
   4a9ec:	bl	4a95c <__assert_fail@plt+0x37da4>
   4a9f0:	mov	sp, fp
   4a9f4:	pop	{fp, pc}
   4a9f8:	push	{fp, lr}
   4a9fc:	mov	fp, sp
   4aa00:	sub	sp, sp, #8
   4aa04:	str	r0, [sp, #4]
   4aa08:	ldr	r0, [sp, #4]
   4aa0c:	movw	r1, #58	; 0x3a
   4aa10:	and	r1, r1, #255	; 0xff
   4aa14:	bl	4a9cc <__assert_fail@plt+0x37e14>
   4aa18:	mov	sp, fp
   4aa1c:	pop	{fp, pc}
   4aa20:	push	{fp, lr}
   4aa24:	mov	fp, sp
   4aa28:	sub	sp, sp, #8
   4aa2c:	str	r0, [sp, #4]
   4aa30:	str	r1, [sp]
   4aa34:	ldr	r0, [sp, #4]
   4aa38:	ldr	r1, [sp]
   4aa3c:	movw	r2, #58	; 0x3a
   4aa40:	and	r2, r2, #255	; 0xff
   4aa44:	bl	4a95c <__assert_fail@plt+0x37da4>
   4aa48:	mov	sp, fp
   4aa4c:	pop	{fp, pc}
   4aa50:	push	{fp, lr}
   4aa54:	mov	fp, sp
   4aa58:	sub	sp, sp, #120	; 0x78
   4aa5c:	str	r0, [fp, #-4]
   4aa60:	str	r1, [fp, #-8]
   4aa64:	str	r2, [fp, #-12]
   4aa68:	ldr	r1, [fp, #-8]
   4aa6c:	add	r0, sp, #12
   4aa70:	bl	4a868 <__assert_fail@plt+0x37cb0>
   4aa74:	add	r0, sp, #60	; 0x3c
   4aa78:	mov	r1, r0
   4aa7c:	add	r2, sp, #12
   4aa80:	str	r0, [sp, #8]
   4aa84:	mov	r0, r1
   4aa88:	mov	r1, r2
   4aa8c:	movw	r2, #48	; 0x30
   4aa90:	bl	125c4 <memcpy@plt>
   4aa94:	ldr	r0, [sp, #8]
   4aa98:	movw	r1, #58	; 0x3a
   4aa9c:	and	r1, r1, #255	; 0xff
   4aaa0:	movw	r2, #1
   4aaa4:	bl	4886c <__assert_fail@plt+0x35cb4>
   4aaa8:	ldr	r1, [fp, #-4]
   4aaac:	ldr	r2, [fp, #-12]
   4aab0:	str	r0, [sp, #4]
   4aab4:	mov	r0, r1
   4aab8:	mov	r1, r2
   4aabc:	mvn	r2, #0
   4aac0:	add	r3, sp, #60	; 0x3c
   4aac4:	bl	4a4d0 <__assert_fail@plt+0x37918>
   4aac8:	mov	sp, fp
   4aacc:	pop	{fp, pc}
   4aad0:	push	{fp, lr}
   4aad4:	mov	fp, sp
   4aad8:	sub	sp, sp, #24
   4aadc:	str	r0, [fp, #-4]
   4aae0:	str	r1, [fp, #-8]
   4aae4:	str	r2, [sp, #12]
   4aae8:	str	r3, [sp, #8]
   4aaec:	ldr	r0, [fp, #-4]
   4aaf0:	ldr	r1, [fp, #-8]
   4aaf4:	ldr	r2, [sp, #12]
   4aaf8:	ldr	r3, [sp, #8]
   4aafc:	mvn	ip, #0
   4ab00:	str	ip, [sp]
   4ab04:	bl	4ab10 <__assert_fail@plt+0x37f58>
   4ab08:	mov	sp, fp
   4ab0c:	pop	{fp, pc}
   4ab10:	push	{fp, lr}
   4ab14:	mov	fp, sp
   4ab18:	sub	sp, sp, #72	; 0x48
   4ab1c:	ldr	ip, [fp, #8]
   4ab20:	movw	lr, #65316	; 0xff24
   4ab24:	movt	lr, #8
   4ab28:	str	r0, [fp, #-4]
   4ab2c:	str	r1, [fp, #-8]
   4ab30:	str	r2, [fp, #-12]
   4ab34:	str	r3, [fp, #-16]
   4ab38:	add	r0, sp, #8
   4ab3c:	mov	r1, r0
   4ab40:	str	r0, [sp, #4]
   4ab44:	mov	r0, r1
   4ab48:	mov	r1, lr
   4ab4c:	movw	r2, #48	; 0x30
   4ab50:	str	ip, [sp]
   4ab54:	bl	125c4 <memcpy@plt>
   4ab58:	ldr	r1, [fp, #-8]
   4ab5c:	ldr	r2, [fp, #-12]
   4ab60:	ldr	r0, [sp, #4]
   4ab64:	bl	4896c <__assert_fail@plt+0x35db4>
   4ab68:	ldr	r0, [fp, #-4]
   4ab6c:	ldr	r1, [fp, #-16]
   4ab70:	ldr	r2, [fp, #8]
   4ab74:	add	r3, sp, #8
   4ab78:	bl	4a4d0 <__assert_fail@plt+0x37918>
   4ab7c:	mov	sp, fp
   4ab80:	pop	{fp, pc}
   4ab84:	push	{fp, lr}
   4ab88:	mov	fp, sp
   4ab8c:	sub	sp, sp, #16
   4ab90:	str	r0, [fp, #-4]
   4ab94:	str	r1, [sp, #8]
   4ab98:	str	r2, [sp, #4]
   4ab9c:	ldr	r1, [fp, #-4]
   4aba0:	ldr	r2, [sp, #8]
   4aba4:	ldr	r3, [sp, #4]
   4aba8:	movw	r0, #0
   4abac:	bl	4aad0 <__assert_fail@plt+0x37f18>
   4abb0:	mov	sp, fp
   4abb4:	pop	{fp, pc}
   4abb8:	push	{fp, lr}
   4abbc:	mov	fp, sp
   4abc0:	sub	sp, sp, #24
   4abc4:	str	r0, [fp, #-4]
   4abc8:	str	r1, [fp, #-8]
   4abcc:	str	r2, [sp, #12]
   4abd0:	str	r3, [sp, #8]
   4abd4:	ldr	r1, [fp, #-4]
   4abd8:	ldr	r2, [fp, #-8]
   4abdc:	ldr	r3, [sp, #12]
   4abe0:	ldr	r0, [sp, #8]
   4abe4:	movw	ip, #0
   4abe8:	str	r0, [sp, #4]
   4abec:	mov	r0, ip
   4abf0:	ldr	ip, [sp, #4]
   4abf4:	str	ip, [sp]
   4abf8:	bl	4ab10 <__assert_fail@plt+0x37f58>
   4abfc:	mov	sp, fp
   4ac00:	pop	{fp, pc}
   4ac04:	push	{fp, lr}
   4ac08:	mov	fp, sp
   4ac0c:	sub	sp, sp, #16
   4ac10:	str	r0, [fp, #-4]
   4ac14:	str	r1, [sp, #8]
   4ac18:	str	r2, [sp, #4]
   4ac1c:	ldr	r0, [fp, #-4]
   4ac20:	ldr	r1, [sp, #8]
   4ac24:	ldr	r2, [sp, #4]
   4ac28:	movw	r3, #63200	; 0xf6e0
   4ac2c:	movt	r3, #8
   4ac30:	bl	4a4d0 <__assert_fail@plt+0x37918>
   4ac34:	mov	sp, fp
   4ac38:	pop	{fp, pc}
   4ac3c:	push	{fp, lr}
   4ac40:	mov	fp, sp
   4ac44:	sub	sp, sp, #8
   4ac48:	str	r0, [sp, #4]
   4ac4c:	str	r1, [sp]
   4ac50:	ldr	r1, [sp, #4]
   4ac54:	ldr	r2, [sp]
   4ac58:	movw	r0, #0
   4ac5c:	bl	4ac04 <__assert_fail@plt+0x3804c>
   4ac60:	mov	sp, fp
   4ac64:	pop	{fp, pc}
   4ac68:	push	{fp, lr}
   4ac6c:	mov	fp, sp
   4ac70:	sub	sp, sp, #8
   4ac74:	str	r0, [sp, #4]
   4ac78:	str	r1, [sp]
   4ac7c:	ldr	r0, [sp, #4]
   4ac80:	ldr	r1, [sp]
   4ac84:	mvn	r2, #0
   4ac88:	bl	4ac04 <__assert_fail@plt+0x3804c>
   4ac8c:	mov	sp, fp
   4ac90:	pop	{fp, pc}
   4ac94:	push	{fp, lr}
   4ac98:	mov	fp, sp
   4ac9c:	sub	sp, sp, #8
   4aca0:	str	r0, [sp, #4]
   4aca4:	ldr	r1, [sp, #4]
   4aca8:	movw	r0, #0
   4acac:	bl	4ac68 <__assert_fail@plt+0x380b0>
   4acb0:	mov	sp, fp
   4acb4:	pop	{fp, pc}
   4acb8:	push	{fp, lr}
   4acbc:	mov	fp, sp
   4acc0:	sub	sp, sp, #24
   4acc4:	str	r0, [fp, #-8]
   4acc8:	str	r1, [sp, #12]
   4accc:	ldr	r0, [fp, #-8]
   4acd0:	bl	12864 <gettext@plt>
   4acd4:	str	r0, [sp, #8]
   4acd8:	ldr	r0, [sp, #8]
   4acdc:	ldr	r1, [fp, #-8]
   4ace0:	cmp	r0, r1
   4ace4:	beq	4acf4 <__assert_fail@plt+0x3813c>
   4ace8:	ldr	r0, [sp, #8]
   4acec:	str	r0, [fp, #-4]
   4acf0:	b	4adc0 <__assert_fail@plt+0x38208>
   4acf4:	bl	73328 <__assert_fail@plt+0x60770>
   4acf8:	str	r0, [sp, #4]
   4acfc:	ldr	r0, [sp, #4]
   4ad00:	movw	r1, #57298	; 0xdfd2
   4ad04:	movt	r1, #7
   4ad08:	bl	716a4 <__assert_fail@plt+0x5eaec>
   4ad0c:	cmp	r0, #0
   4ad10:	bne	4ad48 <__assert_fail@plt+0x38190>
   4ad14:	ldr	r0, [fp, #-8]
   4ad18:	ldrb	r0, [r0]
   4ad1c:	cmp	r0, #96	; 0x60
   4ad20:	movw	r0, #0
   4ad24:	moveq	r0, #1
   4ad28:	tst	r0, #1
   4ad2c:	movw	r0, #57308	; 0xdfdc
   4ad30:	movt	r0, #7
   4ad34:	movw	r1, #57304	; 0xdfd8
   4ad38:	movt	r1, #7
   4ad3c:	movne	r0, r1
   4ad40:	str	r0, [fp, #-4]
   4ad44:	b	4adc0 <__assert_fail@plt+0x38208>
   4ad48:	ldr	r0, [sp, #4]
   4ad4c:	movw	r1, #57312	; 0xdfe0
   4ad50:	movt	r1, #7
   4ad54:	bl	716a4 <__assert_fail@plt+0x5eaec>
   4ad58:	cmp	r0, #0
   4ad5c:	bne	4ad94 <__assert_fail@plt+0x381dc>
   4ad60:	ldr	r0, [fp, #-8]
   4ad64:	ldrb	r0, [r0]
   4ad68:	cmp	r0, #96	; 0x60
   4ad6c:	movw	r0, #0
   4ad70:	moveq	r0, #1
   4ad74:	tst	r0, #1
   4ad78:	movw	r0, #57324	; 0xdfec
   4ad7c:	movt	r0, #7
   4ad80:	movw	r1, #57320	; 0xdfe8
   4ad84:	movt	r1, #7
   4ad88:	movne	r0, r1
   4ad8c:	str	r0, [fp, #-4]
   4ad90:	b	4adc0 <__assert_fail@plt+0x38208>
   4ad94:	ldr	r0, [sp, #12]
   4ad98:	cmp	r0, #9
   4ad9c:	movw	r0, #0
   4ada0:	moveq	r0, #1
   4ada4:	tst	r0, #1
   4ada8:	movw	r0, #41029	; 0xa045
   4adac:	movt	r0, #7
   4adb0:	movw	r1, #54683	; 0xd59b
   4adb4:	movt	r1, #7
   4adb8:	movne	r0, r1
   4adbc:	str	r0, [fp, #-4]
   4adc0:	ldr	r0, [fp, #-4]
   4adc4:	mov	sp, fp
   4adc8:	pop	{fp, pc}
   4adcc:	push	{fp, lr}
   4add0:	mov	fp, sp
   4add4:	sub	sp, sp, #16
   4add8:	ldr	r1, [pc, #132]	; 4ae64 <__assert_fail@plt+0x382ac>
   4addc:	str	r0, [sp, #8]
   4ade0:	ldr	r0, [sp, #8]
   4ade4:	movw	r2, #0
   4ade8:	str	r2, [r0, #4]
   4adec:	movw	r0, #35940	; 0x8c64
   4adf0:	movt	r0, #7
   4adf4:	bl	2c768 <__assert_fail@plt+0x19bb0>
   4adf8:	ldr	r1, [sp, #8]
   4adfc:	str	r0, [r1]
   4ae00:	ldr	r0, [sp, #8]
   4ae04:	ldr	r0, [r0]
   4ae08:	cmp	r0, #0
   4ae0c:	bge	4ae50 <__assert_fail@plt+0x38298>
   4ae10:	movw	r0, #0
   4ae14:	str	r0, [sp, #4]
   4ae18:	ldr	r1, [sp, #4]
   4ae1c:	bl	12840 <getcwd@plt>
   4ae20:	ldr	r1, [sp, #8]
   4ae24:	str	r0, [r1, #4]
   4ae28:	ldr	r0, [sp, #8]
   4ae2c:	ldr	r0, [r0, #4]
   4ae30:	movw	r1, #0
   4ae34:	cmp	r0, r1
   4ae38:	movw	r0, #0
   4ae3c:	movne	r0, #1
   4ae40:	tst	r0, #1
   4ae44:	mvneq	r1, #0
   4ae48:	str	r1, [fp, #-4]
   4ae4c:	b	4ae58 <__assert_fail@plt+0x382a0>
   4ae50:	movw	r0, #0
   4ae54:	str	r0, [fp, #-4]
   4ae58:	ldr	r0, [fp, #-4]
   4ae5c:	mov	sp, fp
   4ae60:	pop	{fp, pc}
   4ae64:	andeq	r0, r8, r0
   4ae68:	push	{fp, lr}
   4ae6c:	mov	fp, sp
   4ae70:	sub	sp, sp, #8
   4ae74:	str	r0, [sp]
   4ae78:	ldr	r0, [sp]
   4ae7c:	ldr	r0, [r0]
   4ae80:	movw	r1, #0
   4ae84:	cmp	r1, r0
   4ae88:	bgt	4aea0 <__assert_fail@plt+0x382e8>
   4ae8c:	ldr	r0, [sp]
   4ae90:	ldr	r0, [r0]
   4ae94:	bl	12aa4 <fchdir@plt>
   4ae98:	str	r0, [sp, #4]
   4ae9c:	b	4aeb0 <__assert_fail@plt+0x382f8>
   4aea0:	ldr	r0, [sp]
   4aea4:	ldr	r0, [r0, #4]
   4aea8:	bl	502dc <__assert_fail@plt+0x3d724>
   4aeac:	str	r0, [sp, #4]
   4aeb0:	ldr	r0, [sp, #4]
   4aeb4:	mov	sp, fp
   4aeb8:	pop	{fp, pc}
   4aebc:	push	{fp, lr}
   4aec0:	mov	fp, sp
   4aec4:	sub	sp, sp, #8
   4aec8:	str	r0, [sp, #4]
   4aecc:	ldr	r0, [sp, #4]
   4aed0:	ldr	r0, [r0]
   4aed4:	cmp	r0, #0
   4aed8:	blt	4aeec <__assert_fail@plt+0x38334>
   4aedc:	ldr	r0, [sp, #4]
   4aee0:	ldr	r0, [r0]
   4aee4:	bl	12b70 <close@plt>
   4aee8:	str	r0, [sp]
   4aeec:	ldr	r0, [sp, #4]
   4aef0:	ldr	r0, [r0, #4]
   4aef4:	bl	50c68 <__assert_fail@plt+0x3e0b0>
   4aef8:	mov	sp, fp
   4aefc:	pop	{fp, pc}
   4af00:	push	{r4, r5, fp, lr}
   4af04:	add	fp, sp, #8
   4af08:	sub	sp, sp, #4096	; 0x1000
   4af0c:	str	r0, [fp, #-16]
   4af10:	str	r1, [fp, #-20]	; 0xffffffec
   4af14:	str	r2, [fp, #-24]	; 0xffffffe8
   4af18:	ldr	r0, [fp, #-16]
   4af1c:	cmn	r0, #100	; 0x64
   4af20:	beq	4af34 <__assert_fail@plt+0x3837c>
   4af24:	ldr	r0, [fp, #-20]	; 0xffffffec
   4af28:	ldrb	r0, [r0]
   4af2c:	cmp	r0, #47	; 0x2f
   4af30:	bne	4af48 <__assert_fail@plt+0x38390>
   4af34:	ldr	r0, [fp, #-20]	; 0xffffffec
   4af38:	ldr	r1, [fp, #-24]	; 0xffffffe8
   4af3c:	bl	54860 <__assert_fail@plt+0x41ca8>
   4af40:	str	r0, [fp, #-12]
   4af44:	b	4b154 <__assert_fail@plt+0x3859c>
   4af48:	add	r0, sp, #32
   4af4c:	ldr	r1, [fp, #-16]
   4af50:	ldr	r2, [fp, #-20]	; 0xffffffec
   4af54:	bl	70aa8 <__assert_fail@plt+0x5def0>
   4af58:	str	r0, [sp, #28]
   4af5c:	ldr	r0, [sp, #28]
   4af60:	movw	r1, #0
   4af64:	cmp	r0, r1
   4af68:	beq	4b028 <__assert_fail@plt+0x38470>
   4af6c:	ldr	r0, [sp, #28]
   4af70:	ldr	r1, [fp, #-24]	; 0xffffffe8
   4af74:	bl	54860 <__assert_fail@plt+0x41ca8>
   4af78:	str	r0, [sp, #24]
   4af7c:	bl	128d0 <__errno_location@plt>
   4af80:	add	r1, sp, #32
   4af84:	ldr	r0, [r0]
   4af88:	str	r0, [sp, #20]
   4af8c:	ldr	r0, [sp, #28]
   4af90:	cmp	r0, r1
   4af94:	beq	4afa0 <__assert_fail@plt+0x383e8>
   4af98:	ldr	r0, [sp, #28]
   4af9c:	bl	50c68 <__assert_fail@plt+0x3e0b0>
   4afa0:	ldr	r0, [sp, #24]
   4afa4:	mvn	r1, #0
   4afa8:	cmp	r1, r0
   4afac:	beq	4afbc <__assert_fail@plt+0x38404>
   4afb0:	ldr	r0, [sp, #24]
   4afb4:	str	r0, [fp, #-12]
   4afb8:	b	4b154 <__assert_fail@plt+0x3859c>
   4afbc:	ldr	r0, [sp, #20]
   4afc0:	cmp	r0, #20
   4afc4:	beq	4b024 <__assert_fail@plt+0x3846c>
   4afc8:	ldr	r0, [sp, #20]
   4afcc:	cmp	r0, #2
   4afd0:	beq	4b024 <__assert_fail@plt+0x3846c>
   4afd4:	ldr	r0, [sp, #20]
   4afd8:	cmp	r0, #1
   4afdc:	beq	4b024 <__assert_fail@plt+0x3846c>
   4afe0:	ldr	r0, [sp, #20]
   4afe4:	cmp	r0, #13
   4afe8:	beq	4b024 <__assert_fail@plt+0x3846c>
   4afec:	ldr	r0, [sp, #20]
   4aff0:	cmp	r0, #38	; 0x26
   4aff4:	beq	4b024 <__assert_fail@plt+0x3846c>
   4aff8:	ldr	r0, [sp, #20]
   4affc:	cmp	r0, #95	; 0x5f
   4b000:	beq	4b024 <__assert_fail@plt+0x3846c>
   4b004:	ldr	r0, [sp, #20]
   4b008:	str	r0, [sp, #16]
   4b00c:	bl	128d0 <__errno_location@plt>
   4b010:	ldr	lr, [sp, #16]
   4b014:	str	lr, [r0]
   4b018:	ldr	r0, [sp, #24]
   4b01c:	str	r0, [fp, #-12]
   4b020:	b	4b154 <__assert_fail@plt+0x3859c>
   4b024:	b	4b028 <__assert_fail@plt+0x38470>
   4b028:	sub	r0, fp, #32
   4b02c:	bl	4adcc <__assert_fail@plt+0x38214>
   4b030:	cmp	r0, #0
   4b034:	beq	4b044 <__assert_fail@plt+0x3848c>
   4b038:	bl	128d0 <__errno_location@plt>
   4b03c:	ldr	r0, [r0]
   4b040:	bl	32614 <__assert_fail@plt+0x1fa5c>
   4b044:	ldr	r0, [fp, #-16]
   4b048:	movw	r1, #0
   4b04c:	cmp	r1, r0
   4b050:	bgt	4b084 <__assert_fail@plt+0x384cc>
   4b054:	ldr	r0, [fp, #-16]
   4b058:	ldr	r1, [fp, #-32]	; 0xffffffe0
   4b05c:	cmp	r0, r1
   4b060:	bne	4b084 <__assert_fail@plt+0x384cc>
   4b064:	sub	r0, fp, #32
   4b068:	bl	4aebc <__assert_fail@plt+0x38304>
   4b06c:	bl	128d0 <__errno_location@plt>
   4b070:	movw	lr, #9
   4b074:	str	lr, [r0]
   4b078:	mvn	r0, #0
   4b07c:	str	r0, [fp, #-12]
   4b080:	b	4b154 <__assert_fail@plt+0x3859c>
   4b084:	ldr	r0, [fp, #-16]
   4b088:	bl	12aa4 <fchdir@plt>
   4b08c:	cmp	r0, #0
   4b090:	beq	4b0c8 <__assert_fail@plt+0x38510>
   4b094:	bl	128d0 <__errno_location@plt>
   4b098:	ldr	r0, [r0]
   4b09c:	str	r0, [fp, #-36]	; 0xffffffdc
   4b0a0:	sub	r0, fp, #32
   4b0a4:	bl	4aebc <__assert_fail@plt+0x38304>
   4b0a8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   4b0ac:	str	r0, [sp, #12]
   4b0b0:	bl	128d0 <__errno_location@plt>
   4b0b4:	ldr	lr, [sp, #12]
   4b0b8:	str	lr, [r0]
   4b0bc:	mvn	r0, #0
   4b0c0:	str	r0, [fp, #-12]
   4b0c4:	b	4b154 <__assert_fail@plt+0x3859c>
   4b0c8:	ldr	r0, [fp, #-20]	; 0xffffffec
   4b0cc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   4b0d0:	bl	54860 <__assert_fail@plt+0x41ca8>
   4b0d4:	str	r0, [fp, #-40]	; 0xffffffd8
   4b0d8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   4b0dc:	cmn	r0, #1
   4b0e0:	bne	4b0f4 <__assert_fail@plt+0x3853c>
   4b0e4:	bl	128d0 <__errno_location@plt>
   4b0e8:	ldr	r0, [r0]
   4b0ec:	str	r0, [sp, #8]
   4b0f0:	b	4b100 <__assert_fail@plt+0x38548>
   4b0f4:	movw	r0, #0
   4b0f8:	str	r0, [sp, #8]
   4b0fc:	b	4b100 <__assert_fail@plt+0x38548>
   4b100:	ldr	r0, [sp, #8]
   4b104:	str	r0, [fp, #-36]	; 0xffffffdc
   4b108:	sub	r0, fp, #32
   4b10c:	bl	4ae68 <__assert_fail@plt+0x382b0>
   4b110:	cmp	r0, #0
   4b114:	beq	4b124 <__assert_fail@plt+0x3856c>
   4b118:	bl	128d0 <__errno_location@plt>
   4b11c:	ldr	r0, [r0]
   4b120:	bl	32668 <__assert_fail@plt+0x1fab0>
   4b124:	sub	r0, fp, #32
   4b128:	bl	4aebc <__assert_fail@plt+0x38304>
   4b12c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   4b130:	cmp	r0, #0
   4b134:	beq	4b14c <__assert_fail@plt+0x38594>
   4b138:	ldr	r0, [fp, #-36]	; 0xffffffdc
   4b13c:	str	r0, [sp, #4]
   4b140:	bl	128d0 <__errno_location@plt>
   4b144:	ldr	lr, [sp, #4]
   4b148:	str	lr, [r0]
   4b14c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   4b150:	str	r0, [fp, #-12]
   4b154:	ldr	r0, [fp, #-12]
   4b158:	sub	sp, fp, #8
   4b15c:	pop	{r4, r5, fp, pc}
   4b160:	push	{r4, r5, fp, lr}
   4b164:	add	fp, sp, #8
   4b168:	sub	sp, sp, #4096	; 0x1000
   4b16c:	str	r0, [fp, #-16]
   4b170:	str	r1, [fp, #-20]	; 0xffffffec
   4b174:	str	r2, [fp, #-24]	; 0xffffffe8
   4b178:	ldr	r0, [fp, #-16]
   4b17c:	cmn	r0, #100	; 0x64
   4b180:	beq	4b194 <__assert_fail@plt+0x385dc>
   4b184:	ldr	r0, [fp, #-20]	; 0xffffffec
   4b188:	ldrb	r0, [r0]
   4b18c:	cmp	r0, #47	; 0x2f
   4b190:	bne	4b1a8 <__assert_fail@plt+0x385f0>
   4b194:	ldr	r0, [fp, #-20]	; 0xffffffec
   4b198:	ldr	r1, [fp, #-24]	; 0xffffffe8
   4b19c:	bl	5493c <__assert_fail@plt+0x41d84>
   4b1a0:	str	r0, [fp, #-12]
   4b1a4:	b	4b3b4 <__assert_fail@plt+0x387fc>
   4b1a8:	add	r0, sp, #32
   4b1ac:	ldr	r1, [fp, #-16]
   4b1b0:	ldr	r2, [fp, #-20]	; 0xffffffec
   4b1b4:	bl	70aa8 <__assert_fail@plt+0x5def0>
   4b1b8:	str	r0, [sp, #28]
   4b1bc:	ldr	r0, [sp, #28]
   4b1c0:	movw	r1, #0
   4b1c4:	cmp	r0, r1
   4b1c8:	beq	4b288 <__assert_fail@plt+0x386d0>
   4b1cc:	ldr	r0, [sp, #28]
   4b1d0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   4b1d4:	bl	5493c <__assert_fail@plt+0x41d84>
   4b1d8:	str	r0, [sp, #24]
   4b1dc:	bl	128d0 <__errno_location@plt>
   4b1e0:	add	r1, sp, #32
   4b1e4:	ldr	r0, [r0]
   4b1e8:	str	r0, [sp, #20]
   4b1ec:	ldr	r0, [sp, #28]
   4b1f0:	cmp	r0, r1
   4b1f4:	beq	4b200 <__assert_fail@plt+0x38648>
   4b1f8:	ldr	r0, [sp, #28]
   4b1fc:	bl	50c68 <__assert_fail@plt+0x3e0b0>
   4b200:	ldr	r0, [sp, #24]
   4b204:	mvn	r1, #0
   4b208:	cmp	r1, r0
   4b20c:	beq	4b21c <__assert_fail@plt+0x38664>
   4b210:	ldr	r0, [sp, #24]
   4b214:	str	r0, [fp, #-12]
   4b218:	b	4b3b4 <__assert_fail@plt+0x387fc>
   4b21c:	ldr	r0, [sp, #20]
   4b220:	cmp	r0, #20
   4b224:	beq	4b284 <__assert_fail@plt+0x386cc>
   4b228:	ldr	r0, [sp, #20]
   4b22c:	cmp	r0, #2
   4b230:	beq	4b284 <__assert_fail@plt+0x386cc>
   4b234:	ldr	r0, [sp, #20]
   4b238:	cmp	r0, #1
   4b23c:	beq	4b284 <__assert_fail@plt+0x386cc>
   4b240:	ldr	r0, [sp, #20]
   4b244:	cmp	r0, #13
   4b248:	beq	4b284 <__assert_fail@plt+0x386cc>
   4b24c:	ldr	r0, [sp, #20]
   4b250:	cmp	r0, #38	; 0x26
   4b254:	beq	4b284 <__assert_fail@plt+0x386cc>
   4b258:	ldr	r0, [sp, #20]
   4b25c:	cmp	r0, #95	; 0x5f
   4b260:	beq	4b284 <__assert_fail@plt+0x386cc>
   4b264:	ldr	r0, [sp, #20]
   4b268:	str	r0, [sp, #16]
   4b26c:	bl	128d0 <__errno_location@plt>
   4b270:	ldr	lr, [sp, #16]
   4b274:	str	lr, [r0]
   4b278:	ldr	r0, [sp, #24]
   4b27c:	str	r0, [fp, #-12]
   4b280:	b	4b3b4 <__assert_fail@plt+0x387fc>
   4b284:	b	4b288 <__assert_fail@plt+0x386d0>
   4b288:	sub	r0, fp, #32
   4b28c:	bl	4adcc <__assert_fail@plt+0x38214>
   4b290:	cmp	r0, #0
   4b294:	beq	4b2a4 <__assert_fail@plt+0x386ec>
   4b298:	bl	128d0 <__errno_location@plt>
   4b29c:	ldr	r0, [r0]
   4b2a0:	bl	32614 <__assert_fail@plt+0x1fa5c>
   4b2a4:	ldr	r0, [fp, #-16]
   4b2a8:	movw	r1, #0
   4b2ac:	cmp	r1, r0
   4b2b0:	bgt	4b2e4 <__assert_fail@plt+0x3872c>
   4b2b4:	ldr	r0, [fp, #-16]
   4b2b8:	ldr	r1, [fp, #-32]	; 0xffffffe0
   4b2bc:	cmp	r0, r1
   4b2c0:	bne	4b2e4 <__assert_fail@plt+0x3872c>
   4b2c4:	sub	r0, fp, #32
   4b2c8:	bl	4aebc <__assert_fail@plt+0x38304>
   4b2cc:	bl	128d0 <__errno_location@plt>
   4b2d0:	movw	lr, #9
   4b2d4:	str	lr, [r0]
   4b2d8:	mvn	r0, #0
   4b2dc:	str	r0, [fp, #-12]
   4b2e0:	b	4b3b4 <__assert_fail@plt+0x387fc>
   4b2e4:	ldr	r0, [fp, #-16]
   4b2e8:	bl	12aa4 <fchdir@plt>
   4b2ec:	cmp	r0, #0
   4b2f0:	beq	4b328 <__assert_fail@plt+0x38770>
   4b2f4:	bl	128d0 <__errno_location@plt>
   4b2f8:	ldr	r0, [r0]
   4b2fc:	str	r0, [fp, #-36]	; 0xffffffdc
   4b300:	sub	r0, fp, #32
   4b304:	bl	4aebc <__assert_fail@plt+0x38304>
   4b308:	ldr	r0, [fp, #-36]	; 0xffffffdc
   4b30c:	str	r0, [sp, #12]
   4b310:	bl	128d0 <__errno_location@plt>
   4b314:	ldr	lr, [sp, #12]
   4b318:	str	lr, [r0]
   4b31c:	mvn	r0, #0
   4b320:	str	r0, [fp, #-12]
   4b324:	b	4b3b4 <__assert_fail@plt+0x387fc>
   4b328:	ldr	r0, [fp, #-20]	; 0xffffffec
   4b32c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   4b330:	bl	5493c <__assert_fail@plt+0x41d84>
   4b334:	str	r0, [fp, #-40]	; 0xffffffd8
   4b338:	ldr	r0, [fp, #-40]	; 0xffffffd8
   4b33c:	cmn	r0, #1
   4b340:	bne	4b354 <__assert_fail@plt+0x3879c>
   4b344:	bl	128d0 <__errno_location@plt>
   4b348:	ldr	r0, [r0]
   4b34c:	str	r0, [sp, #8]
   4b350:	b	4b360 <__assert_fail@plt+0x387a8>
   4b354:	movw	r0, #0
   4b358:	str	r0, [sp, #8]
   4b35c:	b	4b360 <__assert_fail@plt+0x387a8>
   4b360:	ldr	r0, [sp, #8]
   4b364:	str	r0, [fp, #-36]	; 0xffffffdc
   4b368:	sub	r0, fp, #32
   4b36c:	bl	4ae68 <__assert_fail@plt+0x382b0>
   4b370:	cmp	r0, #0
   4b374:	beq	4b384 <__assert_fail@plt+0x387cc>
   4b378:	bl	128d0 <__errno_location@plt>
   4b37c:	ldr	r0, [r0]
   4b380:	bl	32668 <__assert_fail@plt+0x1fab0>
   4b384:	sub	r0, fp, #32
   4b388:	bl	4aebc <__assert_fail@plt+0x38304>
   4b38c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   4b390:	cmp	r0, #0
   4b394:	beq	4b3ac <__assert_fail@plt+0x387f4>
   4b398:	ldr	r0, [fp, #-36]	; 0xffffffdc
   4b39c:	str	r0, [sp, #4]
   4b3a0:	bl	128d0 <__errno_location@plt>
   4b3a4:	ldr	lr, [sp, #4]
   4b3a8:	str	lr, [r0]
   4b3ac:	ldr	r0, [fp, #-40]	; 0xffffffd8
   4b3b0:	str	r0, [fp, #-12]
   4b3b4:	ldr	r0, [fp, #-12]
   4b3b8:	sub	sp, fp, #8
   4b3bc:	pop	{r4, r5, fp, pc}
   4b3c0:	push	{r4, r5, fp, lr}
   4b3c4:	add	fp, sp, #8
   4b3c8:	sub	sp, sp, #4096	; 0x1000
   4b3cc:	str	r0, [fp, #-16]
   4b3d0:	str	r1, [fp, #-20]	; 0xffffffec
   4b3d4:	str	r2, [fp, #-24]	; 0xffffffe8
   4b3d8:	ldr	r0, [fp, #-16]
   4b3dc:	cmn	r0, #100	; 0x64
   4b3e0:	beq	4b3f4 <__assert_fail@plt+0x3883c>
   4b3e4:	ldr	r0, [fp, #-20]	; 0xffffffec
   4b3e8:	ldrb	r0, [r0]
   4b3ec:	cmp	r0, #47	; 0x2f
   4b3f0:	bne	4b408 <__assert_fail@plt+0x38850>
   4b3f4:	ldr	r0, [fp, #-20]	; 0xffffffec
   4b3f8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   4b3fc:	bl	12978 <setfilecon@plt>
   4b400:	str	r0, [fp, #-12]
   4b404:	b	4b614 <__assert_fail@plt+0x38a5c>
   4b408:	add	r0, sp, #32
   4b40c:	ldr	r1, [fp, #-16]
   4b410:	ldr	r2, [fp, #-20]	; 0xffffffec
   4b414:	bl	70aa8 <__assert_fail@plt+0x5def0>
   4b418:	str	r0, [sp, #28]
   4b41c:	ldr	r0, [sp, #28]
   4b420:	movw	r1, #0
   4b424:	cmp	r0, r1
   4b428:	beq	4b4e8 <__assert_fail@plt+0x38930>
   4b42c:	ldr	r0, [sp, #28]
   4b430:	ldr	r1, [fp, #-24]	; 0xffffffe8
   4b434:	bl	12978 <setfilecon@plt>
   4b438:	str	r0, [sp, #24]
   4b43c:	bl	128d0 <__errno_location@plt>
   4b440:	add	r1, sp, #32
   4b444:	ldr	r0, [r0]
   4b448:	str	r0, [sp, #20]
   4b44c:	ldr	r0, [sp, #28]
   4b450:	cmp	r0, r1
   4b454:	beq	4b460 <__assert_fail@plt+0x388a8>
   4b458:	ldr	r0, [sp, #28]
   4b45c:	bl	50c68 <__assert_fail@plt+0x3e0b0>
   4b460:	ldr	r0, [sp, #24]
   4b464:	mvn	r1, #0
   4b468:	cmp	r1, r0
   4b46c:	beq	4b47c <__assert_fail@plt+0x388c4>
   4b470:	ldr	r0, [sp, #24]
   4b474:	str	r0, [fp, #-12]
   4b478:	b	4b614 <__assert_fail@plt+0x38a5c>
   4b47c:	ldr	r0, [sp, #20]
   4b480:	cmp	r0, #20
   4b484:	beq	4b4e4 <__assert_fail@plt+0x3892c>
   4b488:	ldr	r0, [sp, #20]
   4b48c:	cmp	r0, #2
   4b490:	beq	4b4e4 <__assert_fail@plt+0x3892c>
   4b494:	ldr	r0, [sp, #20]
   4b498:	cmp	r0, #1
   4b49c:	beq	4b4e4 <__assert_fail@plt+0x3892c>
   4b4a0:	ldr	r0, [sp, #20]
   4b4a4:	cmp	r0, #13
   4b4a8:	beq	4b4e4 <__assert_fail@plt+0x3892c>
   4b4ac:	ldr	r0, [sp, #20]
   4b4b0:	cmp	r0, #38	; 0x26
   4b4b4:	beq	4b4e4 <__assert_fail@plt+0x3892c>
   4b4b8:	ldr	r0, [sp, #20]
   4b4bc:	cmp	r0, #95	; 0x5f
   4b4c0:	beq	4b4e4 <__assert_fail@plt+0x3892c>
   4b4c4:	ldr	r0, [sp, #20]
   4b4c8:	str	r0, [sp, #16]
   4b4cc:	bl	128d0 <__errno_location@plt>
   4b4d0:	ldr	lr, [sp, #16]
   4b4d4:	str	lr, [r0]
   4b4d8:	ldr	r0, [sp, #24]
   4b4dc:	str	r0, [fp, #-12]
   4b4e0:	b	4b614 <__assert_fail@plt+0x38a5c>
   4b4e4:	b	4b4e8 <__assert_fail@plt+0x38930>
   4b4e8:	sub	r0, fp, #32
   4b4ec:	bl	4adcc <__assert_fail@plt+0x38214>
   4b4f0:	cmp	r0, #0
   4b4f4:	beq	4b504 <__assert_fail@plt+0x3894c>
   4b4f8:	bl	128d0 <__errno_location@plt>
   4b4fc:	ldr	r0, [r0]
   4b500:	bl	32614 <__assert_fail@plt+0x1fa5c>
   4b504:	ldr	r0, [fp, #-16]
   4b508:	movw	r1, #0
   4b50c:	cmp	r1, r0
   4b510:	bgt	4b544 <__assert_fail@plt+0x3898c>
   4b514:	ldr	r0, [fp, #-16]
   4b518:	ldr	r1, [fp, #-32]	; 0xffffffe0
   4b51c:	cmp	r0, r1
   4b520:	bne	4b544 <__assert_fail@plt+0x3898c>
   4b524:	sub	r0, fp, #32
   4b528:	bl	4aebc <__assert_fail@plt+0x38304>
   4b52c:	bl	128d0 <__errno_location@plt>
   4b530:	movw	lr, #9
   4b534:	str	lr, [r0]
   4b538:	mvn	r0, #0
   4b53c:	str	r0, [fp, #-12]
   4b540:	b	4b614 <__assert_fail@plt+0x38a5c>
   4b544:	ldr	r0, [fp, #-16]
   4b548:	bl	12aa4 <fchdir@plt>
   4b54c:	cmp	r0, #0
   4b550:	beq	4b588 <__assert_fail@plt+0x389d0>
   4b554:	bl	128d0 <__errno_location@plt>
   4b558:	ldr	r0, [r0]
   4b55c:	str	r0, [fp, #-36]	; 0xffffffdc
   4b560:	sub	r0, fp, #32
   4b564:	bl	4aebc <__assert_fail@plt+0x38304>
   4b568:	ldr	r0, [fp, #-36]	; 0xffffffdc
   4b56c:	str	r0, [sp, #12]
   4b570:	bl	128d0 <__errno_location@plt>
   4b574:	ldr	lr, [sp, #12]
   4b578:	str	lr, [r0]
   4b57c:	mvn	r0, #0
   4b580:	str	r0, [fp, #-12]
   4b584:	b	4b614 <__assert_fail@plt+0x38a5c>
   4b588:	ldr	r0, [fp, #-20]	; 0xffffffec
   4b58c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   4b590:	bl	12978 <setfilecon@plt>
   4b594:	str	r0, [fp, #-40]	; 0xffffffd8
   4b598:	ldr	r0, [fp, #-40]	; 0xffffffd8
   4b59c:	cmn	r0, #1
   4b5a0:	bne	4b5b4 <__assert_fail@plt+0x389fc>
   4b5a4:	bl	128d0 <__errno_location@plt>
   4b5a8:	ldr	r0, [r0]
   4b5ac:	str	r0, [sp, #8]
   4b5b0:	b	4b5c0 <__assert_fail@plt+0x38a08>
   4b5b4:	movw	r0, #0
   4b5b8:	str	r0, [sp, #8]
   4b5bc:	b	4b5c0 <__assert_fail@plt+0x38a08>
   4b5c0:	ldr	r0, [sp, #8]
   4b5c4:	str	r0, [fp, #-36]	; 0xffffffdc
   4b5c8:	sub	r0, fp, #32
   4b5cc:	bl	4ae68 <__assert_fail@plt+0x382b0>
   4b5d0:	cmp	r0, #0
   4b5d4:	beq	4b5e4 <__assert_fail@plt+0x38a2c>
   4b5d8:	bl	128d0 <__errno_location@plt>
   4b5dc:	ldr	r0, [r0]
   4b5e0:	bl	32668 <__assert_fail@plt+0x1fab0>
   4b5e4:	sub	r0, fp, #32
   4b5e8:	bl	4aebc <__assert_fail@plt+0x38304>
   4b5ec:	ldr	r0, [fp, #-36]	; 0xffffffdc
   4b5f0:	cmp	r0, #0
   4b5f4:	beq	4b60c <__assert_fail@plt+0x38a54>
   4b5f8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   4b5fc:	str	r0, [sp, #4]
   4b600:	bl	128d0 <__errno_location@plt>
   4b604:	ldr	lr, [sp, #4]
   4b608:	str	lr, [r0]
   4b60c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   4b610:	str	r0, [fp, #-12]
   4b614:	ldr	r0, [fp, #-12]
   4b618:	sub	sp, fp, #8
   4b61c:	pop	{r4, r5, fp, pc}
   4b620:	push	{r4, r5, fp, lr}
   4b624:	add	fp, sp, #8
   4b628:	sub	sp, sp, #4096	; 0x1000
   4b62c:	str	r0, [fp, #-16]
   4b630:	str	r1, [fp, #-20]	; 0xffffffec
   4b634:	str	r2, [fp, #-24]	; 0xffffffe8
   4b638:	ldr	r0, [fp, #-16]
   4b63c:	cmn	r0, #100	; 0x64
   4b640:	beq	4b654 <__assert_fail@plt+0x38a9c>
   4b644:	ldr	r0, [fp, #-20]	; 0xffffffec
   4b648:	ldrb	r0, [r0]
   4b64c:	cmp	r0, #47	; 0x2f
   4b650:	bne	4b668 <__assert_fail@plt+0x38ab0>
   4b654:	ldr	r0, [fp, #-20]	; 0xffffffec
   4b658:	ldr	r1, [fp, #-24]	; 0xffffffe8
   4b65c:	bl	1254c <lsetfilecon@plt>
   4b660:	str	r0, [fp, #-12]
   4b664:	b	4b874 <__assert_fail@plt+0x38cbc>
   4b668:	add	r0, sp, #32
   4b66c:	ldr	r1, [fp, #-16]
   4b670:	ldr	r2, [fp, #-20]	; 0xffffffec
   4b674:	bl	70aa8 <__assert_fail@plt+0x5def0>
   4b678:	str	r0, [sp, #28]
   4b67c:	ldr	r0, [sp, #28]
   4b680:	movw	r1, #0
   4b684:	cmp	r0, r1
   4b688:	beq	4b748 <__assert_fail@plt+0x38b90>
   4b68c:	ldr	r0, [sp, #28]
   4b690:	ldr	r1, [fp, #-24]	; 0xffffffe8
   4b694:	bl	1254c <lsetfilecon@plt>
   4b698:	str	r0, [sp, #24]
   4b69c:	bl	128d0 <__errno_location@plt>
   4b6a0:	add	r1, sp, #32
   4b6a4:	ldr	r0, [r0]
   4b6a8:	str	r0, [sp, #20]
   4b6ac:	ldr	r0, [sp, #28]
   4b6b0:	cmp	r0, r1
   4b6b4:	beq	4b6c0 <__assert_fail@plt+0x38b08>
   4b6b8:	ldr	r0, [sp, #28]
   4b6bc:	bl	50c68 <__assert_fail@plt+0x3e0b0>
   4b6c0:	ldr	r0, [sp, #24]
   4b6c4:	mvn	r1, #0
   4b6c8:	cmp	r1, r0
   4b6cc:	beq	4b6dc <__assert_fail@plt+0x38b24>
   4b6d0:	ldr	r0, [sp, #24]
   4b6d4:	str	r0, [fp, #-12]
   4b6d8:	b	4b874 <__assert_fail@plt+0x38cbc>
   4b6dc:	ldr	r0, [sp, #20]
   4b6e0:	cmp	r0, #20
   4b6e4:	beq	4b744 <__assert_fail@plt+0x38b8c>
   4b6e8:	ldr	r0, [sp, #20]
   4b6ec:	cmp	r0, #2
   4b6f0:	beq	4b744 <__assert_fail@plt+0x38b8c>
   4b6f4:	ldr	r0, [sp, #20]
   4b6f8:	cmp	r0, #1
   4b6fc:	beq	4b744 <__assert_fail@plt+0x38b8c>
   4b700:	ldr	r0, [sp, #20]
   4b704:	cmp	r0, #13
   4b708:	beq	4b744 <__assert_fail@plt+0x38b8c>
   4b70c:	ldr	r0, [sp, #20]
   4b710:	cmp	r0, #38	; 0x26
   4b714:	beq	4b744 <__assert_fail@plt+0x38b8c>
   4b718:	ldr	r0, [sp, #20]
   4b71c:	cmp	r0, #95	; 0x5f
   4b720:	beq	4b744 <__assert_fail@plt+0x38b8c>
   4b724:	ldr	r0, [sp, #20]
   4b728:	str	r0, [sp, #16]
   4b72c:	bl	128d0 <__errno_location@plt>
   4b730:	ldr	lr, [sp, #16]
   4b734:	str	lr, [r0]
   4b738:	ldr	r0, [sp, #24]
   4b73c:	str	r0, [fp, #-12]
   4b740:	b	4b874 <__assert_fail@plt+0x38cbc>
   4b744:	b	4b748 <__assert_fail@plt+0x38b90>
   4b748:	sub	r0, fp, #32
   4b74c:	bl	4adcc <__assert_fail@plt+0x38214>
   4b750:	cmp	r0, #0
   4b754:	beq	4b764 <__assert_fail@plt+0x38bac>
   4b758:	bl	128d0 <__errno_location@plt>
   4b75c:	ldr	r0, [r0]
   4b760:	bl	32614 <__assert_fail@plt+0x1fa5c>
   4b764:	ldr	r0, [fp, #-16]
   4b768:	movw	r1, #0
   4b76c:	cmp	r1, r0
   4b770:	bgt	4b7a4 <__assert_fail@plt+0x38bec>
   4b774:	ldr	r0, [fp, #-16]
   4b778:	ldr	r1, [fp, #-32]	; 0xffffffe0
   4b77c:	cmp	r0, r1
   4b780:	bne	4b7a4 <__assert_fail@plt+0x38bec>
   4b784:	sub	r0, fp, #32
   4b788:	bl	4aebc <__assert_fail@plt+0x38304>
   4b78c:	bl	128d0 <__errno_location@plt>
   4b790:	movw	lr, #9
   4b794:	str	lr, [r0]
   4b798:	mvn	r0, #0
   4b79c:	str	r0, [fp, #-12]
   4b7a0:	b	4b874 <__assert_fail@plt+0x38cbc>
   4b7a4:	ldr	r0, [fp, #-16]
   4b7a8:	bl	12aa4 <fchdir@plt>
   4b7ac:	cmp	r0, #0
   4b7b0:	beq	4b7e8 <__assert_fail@plt+0x38c30>
   4b7b4:	bl	128d0 <__errno_location@plt>
   4b7b8:	ldr	r0, [r0]
   4b7bc:	str	r0, [fp, #-36]	; 0xffffffdc
   4b7c0:	sub	r0, fp, #32
   4b7c4:	bl	4aebc <__assert_fail@plt+0x38304>
   4b7c8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   4b7cc:	str	r0, [sp, #12]
   4b7d0:	bl	128d0 <__errno_location@plt>
   4b7d4:	ldr	lr, [sp, #12]
   4b7d8:	str	lr, [r0]
   4b7dc:	mvn	r0, #0
   4b7e0:	str	r0, [fp, #-12]
   4b7e4:	b	4b874 <__assert_fail@plt+0x38cbc>
   4b7e8:	ldr	r0, [fp, #-20]	; 0xffffffec
   4b7ec:	ldr	r1, [fp, #-24]	; 0xffffffe8
   4b7f0:	bl	1254c <lsetfilecon@plt>
   4b7f4:	str	r0, [fp, #-40]	; 0xffffffd8
   4b7f8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   4b7fc:	cmn	r0, #1
   4b800:	bne	4b814 <__assert_fail@plt+0x38c5c>
   4b804:	bl	128d0 <__errno_location@plt>
   4b808:	ldr	r0, [r0]
   4b80c:	str	r0, [sp, #8]
   4b810:	b	4b820 <__assert_fail@plt+0x38c68>
   4b814:	movw	r0, #0
   4b818:	str	r0, [sp, #8]
   4b81c:	b	4b820 <__assert_fail@plt+0x38c68>
   4b820:	ldr	r0, [sp, #8]
   4b824:	str	r0, [fp, #-36]	; 0xffffffdc
   4b828:	sub	r0, fp, #32
   4b82c:	bl	4ae68 <__assert_fail@plt+0x382b0>
   4b830:	cmp	r0, #0
   4b834:	beq	4b844 <__assert_fail@plt+0x38c8c>
   4b838:	bl	128d0 <__errno_location@plt>
   4b83c:	ldr	r0, [r0]
   4b840:	bl	32668 <__assert_fail@plt+0x1fab0>
   4b844:	sub	r0, fp, #32
   4b848:	bl	4aebc <__assert_fail@plt+0x38304>
   4b84c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   4b850:	cmp	r0, #0
   4b854:	beq	4b86c <__assert_fail@plt+0x38cb4>
   4b858:	ldr	r0, [fp, #-36]	; 0xffffffdc
   4b85c:	str	r0, [sp, #4]
   4b860:	bl	128d0 <__errno_location@plt>
   4b864:	ldr	lr, [sp, #4]
   4b868:	str	lr, [r0]
   4b86c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   4b870:	str	r0, [fp, #-12]
   4b874:	ldr	r0, [fp, #-12]
   4b878:	sub	sp, fp, #8
   4b87c:	pop	{r4, r5, fp, pc}
   4b880:	sub	sp, sp, #4
   4b884:	str	r0, [sp]
   4b888:	ldr	r0, [sp]
   4b88c:	ldr	r0, [r0, #76]	; 0x4c
   4b890:	add	sp, sp, #4
   4b894:	bx	lr
   4b898:	sub	sp, sp, #4
   4b89c:	str	r0, [sp]
   4b8a0:	ldr	r0, [sp]
   4b8a4:	ldr	r0, [r0, #92]	; 0x5c
   4b8a8:	add	sp, sp, #4
   4b8ac:	bx	lr
   4b8b0:	sub	sp, sp, #4
   4b8b4:	str	r0, [sp]
   4b8b8:	ldr	r0, [sp]
   4b8bc:	ldr	r0, [r0, #84]	; 0x54
   4b8c0:	add	sp, sp, #4
   4b8c4:	bx	lr
   4b8c8:	sub	sp, sp, #4
   4b8cc:	str	r0, [sp]
   4b8d0:	movw	r0, #0
   4b8d4:	add	sp, sp, #4
   4b8d8:	bx	lr
   4b8dc:	sub	sp, sp, #4
   4b8e0:	str	r1, [sp]
   4b8e4:	ldr	r1, [sp]
   4b8e8:	ldr	r2, [r1, #72]	; 0x48
   4b8ec:	str	r2, [r0]
   4b8f0:	ldr	r1, [r1, #76]	; 0x4c
   4b8f4:	str	r1, [r0, #4]
   4b8f8:	add	sp, sp, #4
   4b8fc:	bx	lr
   4b900:	sub	sp, sp, #4
   4b904:	str	r1, [sp]
   4b908:	ldr	r1, [sp]
   4b90c:	ldr	r2, [r1, #88]	; 0x58
   4b910:	str	r2, [r0]
   4b914:	ldr	r1, [r1, #92]	; 0x5c
   4b918:	str	r1, [r0, #4]
   4b91c:	add	sp, sp, #4
   4b920:	bx	lr
   4b924:	sub	sp, sp, #4
   4b928:	str	r1, [sp]
   4b92c:	ldr	r1, [sp]
   4b930:	ldr	r2, [r1, #80]	; 0x50
   4b934:	str	r2, [r0]
   4b938:	ldr	r1, [r1, #84]	; 0x54
   4b93c:	str	r1, [r0, #4]
   4b940:	add	sp, sp, #4
   4b944:	bx	lr
   4b948:	sub	sp, sp, #4
   4b94c:	str	r1, [sp]
   4b950:	mvn	r1, #0
   4b954:	str	r1, [r0]
   4b958:	str	r1, [r0, #4]
   4b95c:	add	sp, sp, #4
   4b960:	bx	lr
   4b964:	sub	sp, sp, #8
   4b968:	str	r0, [sp, #4]
   4b96c:	str	r1, [sp]
   4b970:	ldr	r0, [sp, #4]
   4b974:	add	sp, sp, #8
   4b978:	bx	lr
   4b97c:	push	{fp, lr}
   4b980:	mov	fp, sp
   4b984:	sub	sp, sp, #16
   4b988:	str	r0, [sp, #8]
   4b98c:	str	r1, [sp, #4]
   4b990:	ldr	r0, [sp, #8]
   4b994:	ldr	r2, [sp, #4]
   4b998:	mov	r1, #0
   4b99c:	bl	1296c <memchr@plt>
   4b9a0:	str	r0, [sp]
   4b9a4:	ldr	r0, [sp]
   4b9a8:	movw	r1, #0
   4b9ac:	cmp	r0, r1
   4b9b0:	beq	4b9cc <__assert_fail@plt+0x38e14>
   4b9b4:	ldr	r0, [sp]
   4b9b8:	ldr	r1, [sp, #8]
   4b9bc:	sub	r0, r0, r1
   4b9c0:	add	r0, r0, #1
   4b9c4:	str	r0, [fp, #-4]
   4b9c8:	b	4b9d4 <__assert_fail@plt+0x38e1c>
   4b9cc:	ldr	r0, [sp, #4]
   4b9d0:	str	r0, [fp, #-4]
   4b9d4:	ldr	r0, [fp, #-4]
   4b9d8:	mov	sp, fp
   4b9dc:	pop	{fp, pc}
   4b9e0:	push	{fp, lr}
   4b9e4:	mov	fp, sp
   4b9e8:	sub	sp, sp, #8
   4b9ec:	str	r0, [sp, #4]
   4b9f0:	ldr	r0, [sp, #4]
   4b9f4:	movw	r1, #0
   4b9f8:	movw	r2, #3
   4b9fc:	bl	507d8 <__assert_fail@plt+0x3dc20>
   4ba00:	mov	sp, fp
   4ba04:	pop	{fp, pc}
   4ba08:	push	{fp, lr}
   4ba0c:	mov	fp, sp
   4ba10:	sub	sp, sp, #24
   4ba14:	str	r0, [fp, #-4]
   4ba18:	ldr	r0, [fp, #-4]
   4ba1c:	movw	r1, #0
   4ba20:	cmp	r1, r0
   4ba24:	bgt	4ba74 <__assert_fail@plt+0x38ebc>
   4ba28:	ldr	r0, [fp, #-4]
   4ba2c:	cmp	r0, #2
   4ba30:	bgt	4ba74 <__assert_fail@plt+0x38ebc>
   4ba34:	ldr	r0, [fp, #-4]
   4ba38:	bl	4b9e0 <__assert_fail@plt+0x38e28>
   4ba3c:	str	r0, [fp, #-8]
   4ba40:	bl	128d0 <__errno_location@plt>
   4ba44:	ldr	r0, [r0]
   4ba48:	str	r0, [sp, #12]
   4ba4c:	ldr	r0, [fp, #-4]
   4ba50:	bl	12b70 <close@plt>
   4ba54:	ldr	lr, [sp, #12]
   4ba58:	str	r0, [sp, #8]
   4ba5c:	str	lr, [sp, #4]
   4ba60:	bl	128d0 <__errno_location@plt>
   4ba64:	ldr	lr, [sp, #4]
   4ba68:	str	lr, [r0]
   4ba6c:	ldr	r0, [fp, #-8]
   4ba70:	str	r0, [fp, #-4]
   4ba74:	ldr	r0, [fp, #-4]
   4ba78:	mov	sp, fp
   4ba7c:	pop	{fp, pc}
   4ba80:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   4ba84:	add	fp, sp, #28
   4ba88:	sub	sp, sp, #260	; 0x104
   4ba8c:	ldr	ip, [fp, #12]
   4ba90:	ldr	lr, [fp, #8]
   4ba94:	str	r0, [fp, #-32]	; 0xffffffe0
   4ba98:	str	r1, [fp, #-36]	; 0xffffffdc
   4ba9c:	str	r2, [fp, #-40]	; 0xffffffd8
   4baa0:	str	r3, [fp, #-44]	; 0xffffffd4
   4baa4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   4baa8:	movw	r1, #0
   4baac:	cmp	r0, r1
   4bab0:	str	lr, [fp, #-48]	; 0xffffffd0
   4bab4:	str	ip, [fp, #-52]	; 0xffffffcc
   4bab8:	beq	4baf0 <__assert_fail@plt+0x38f38>
   4babc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   4bac0:	ldr	r2, [fp, #-36]	; 0xffffffdc
   4bac4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4bac8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   4bacc:	movw	ip, #57412	; 0xe044
   4bad0:	movt	ip, #7
   4bad4:	str	r1, [fp, #-56]	; 0xffffffc8
   4bad8:	mov	r1, ip
   4badc:	ldr	ip, [fp, #-56]	; 0xffffffc8
   4bae0:	str	ip, [sp]
   4bae4:	bl	128c4 <fprintf@plt>
   4bae8:	str	r0, [fp, #-60]	; 0xffffffc4
   4baec:	b	4bb0c <__assert_fail@plt+0x38f54>
   4baf0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   4baf4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   4baf8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   4bafc:	movw	r1, #57424	; 0xe050
   4bb00:	movt	r1, #7
   4bb04:	bl	128c4 <fprintf@plt>
   4bb08:	str	r0, [fp, #-64]	; 0xffffffc0
   4bb0c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   4bb10:	movw	r1, #57431	; 0xe057
   4bb14:	movt	r1, #7
   4bb18:	str	r0, [fp, #-68]	; 0xffffffbc
   4bb1c:	mov	r0, r1
   4bb20:	bl	12864 <gettext@plt>
   4bb24:	movw	r1, #58127	; 0xe30f
   4bb28:	movt	r1, #7
   4bb2c:	movw	r3, #2022	; 0x7e6
   4bb30:	ldr	lr, [fp, #-68]	; 0xffffffbc
   4bb34:	str	r0, [fp, #-72]	; 0xffffffb8
   4bb38:	mov	r0, lr
   4bb3c:	ldr	r2, [fp, #-72]	; 0xffffffb8
   4bb40:	bl	128c4 <fprintf@plt>
   4bb44:	ldr	r1, [fp, #-32]	; 0xffffffe0
   4bb48:	movw	r2, #39196	; 0x991c
   4bb4c:	movt	r2, #7
   4bb50:	str	r0, [fp, #-76]	; 0xffffffb4
   4bb54:	mov	r0, r2
   4bb58:	str	r2, [fp, #-80]	; 0xffffffb0
   4bb5c:	bl	12b4c <fputs@plt>
   4bb60:	ldr	r1, [fp, #-32]	; 0xffffffe0
   4bb64:	movw	r2, #57435	; 0xe05b
   4bb68:	movt	r2, #7
   4bb6c:	str	r0, [fp, #-84]	; 0xffffffac
   4bb70:	mov	r0, r2
   4bb74:	str	r1, [fp, #-88]	; 0xffffffa8
   4bb78:	bl	12864 <gettext@plt>
   4bb7c:	movw	r2, #57606	; 0xe106
   4bb80:	movt	r2, #7
   4bb84:	ldr	r1, [fp, #-88]	; 0xffffffa8
   4bb88:	str	r0, [fp, #-92]	; 0xffffffa4
   4bb8c:	mov	r0, r1
   4bb90:	ldr	r1, [fp, #-92]	; 0xffffffa4
   4bb94:	bl	128c4 <fprintf@plt>
   4bb98:	ldr	r1, [fp, #-32]	; 0xffffffe0
   4bb9c:	ldr	r2, [fp, #-80]	; 0xffffffb0
   4bba0:	str	r0, [fp, #-96]	; 0xffffffa0
   4bba4:	mov	r0, r2
   4bba8:	bl	12b4c <fputs@plt>
   4bbac:	ldr	r1, [fp, #12]
   4bbb0:	cmp	r1, #9
   4bbb4:	str	r0, [fp, #-100]	; 0xffffff9c
   4bbb8:	str	r1, [fp, #-104]	; 0xffffff98
   4bbbc:	bhi	4bffc <__assert_fail@plt+0x39444>
   4bbc0:	add	r0, pc, #8
   4bbc4:	ldr	r1, [fp, #-104]	; 0xffffff98
   4bbc8:	ldr	r0, [r0, r1, lsl #2]
   4bbcc:	mov	pc, r0
   4bbd0:	strdeq	fp, [r4], -r8
   4bbd4:	strdeq	fp, [r4], -ip
   4bbd8:	andeq	fp, r4, r8, lsr ip
   4bbdc:	andeq	fp, r4, ip, ror ip
   4bbe0:	ldrdeq	fp, [r4], -r8
   4bbe4:	andeq	fp, r4, r0, asr #26
   4bbe8:			; <UNDEFINED> instruction: 0x0004bdb4
   4bbec:	andeq	fp, r4, r4, lsr lr
   4bbf0:	andeq	fp, r4, r0, asr #29
   4bbf4:	andeq	fp, r4, r8, asr pc
   4bbf8:	b	4c09c <__assert_fail@plt+0x394e4>
   4bbfc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   4bc00:	movw	r1, #57640	; 0xe128
   4bc04:	movt	r1, #7
   4bc08:	str	r0, [fp, #-108]	; 0xffffff94
   4bc0c:	mov	r0, r1
   4bc10:	bl	12864 <gettext@plt>
   4bc14:	ldr	r1, [fp, #8]
   4bc18:	ldr	r2, [r1]
   4bc1c:	ldr	r1, [fp, #-108]	; 0xffffff94
   4bc20:	str	r0, [fp, #-112]	; 0xffffff90
   4bc24:	mov	r0, r1
   4bc28:	ldr	r1, [fp, #-112]	; 0xffffff90
   4bc2c:	bl	128c4 <fprintf@plt>
   4bc30:	str	r0, [fp, #-116]	; 0xffffff8c
   4bc34:	b	4c09c <__assert_fail@plt+0x394e4>
   4bc38:	ldr	r0, [fp, #-32]	; 0xffffffe0
   4bc3c:	movw	r1, #57656	; 0xe138
   4bc40:	movt	r1, #7
   4bc44:	str	r0, [fp, #-120]	; 0xffffff88
   4bc48:	mov	r0, r1
   4bc4c:	bl	12864 <gettext@plt>
   4bc50:	ldr	r1, [fp, #8]
   4bc54:	ldr	r2, [r1]
   4bc58:	ldr	r1, [fp, #8]
   4bc5c:	ldr	r3, [r1, #4]
   4bc60:	ldr	r1, [fp, #-120]	; 0xffffff88
   4bc64:	str	r0, [fp, #-124]	; 0xffffff84
   4bc68:	mov	r0, r1
   4bc6c:	ldr	r1, [fp, #-124]	; 0xffffff84
   4bc70:	bl	128c4 <fprintf@plt>
   4bc74:	str	r0, [fp, #-128]	; 0xffffff80
   4bc78:	b	4c09c <__assert_fail@plt+0x394e4>
   4bc7c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   4bc80:	movw	r1, #57679	; 0xe14f
   4bc84:	movt	r1, #7
   4bc88:	str	r0, [fp, #-132]	; 0xffffff7c
   4bc8c:	mov	r0, r1
   4bc90:	bl	12864 <gettext@plt>
   4bc94:	ldr	r1, [fp, #8]
   4bc98:	ldr	r2, [r1]
   4bc9c:	ldr	r1, [fp, #8]
   4bca0:	ldr	r3, [r1, #4]
   4bca4:	ldr	r1, [fp, #8]
   4bca8:	ldr	r1, [r1, #8]
   4bcac:	ldr	lr, [fp, #-132]	; 0xffffff7c
   4bcb0:	str	r0, [fp, #-136]	; 0xffffff78
   4bcb4:	mov	r0, lr
   4bcb8:	ldr	ip, [fp, #-136]	; 0xffffff78
   4bcbc:	str	r1, [fp, #-140]	; 0xffffff74
   4bcc0:	mov	r1, ip
   4bcc4:	ldr	r4, [fp, #-140]	; 0xffffff74
   4bcc8:	str	r4, [sp]
   4bccc:	bl	128c4 <fprintf@plt>
   4bcd0:	str	r0, [sp, #144]	; 0x90
   4bcd4:	b	4c09c <__assert_fail@plt+0x394e4>
   4bcd8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   4bcdc:	movw	r1, #57707	; 0xe16b
   4bce0:	movt	r1, #7
   4bce4:	str	r0, [sp, #140]	; 0x8c
   4bce8:	mov	r0, r1
   4bcec:	bl	12864 <gettext@plt>
   4bcf0:	ldr	r1, [fp, #8]
   4bcf4:	ldr	r2, [r1]
   4bcf8:	ldr	r1, [fp, #8]
   4bcfc:	ldr	r3, [r1, #4]
   4bd00:	ldr	r1, [fp, #8]
   4bd04:	ldr	r1, [r1, #8]
   4bd08:	ldr	lr, [fp, #8]
   4bd0c:	ldr	lr, [lr, #12]
   4bd10:	ldr	ip, [sp, #140]	; 0x8c
   4bd14:	str	r0, [sp, #136]	; 0x88
   4bd18:	mov	r0, ip
   4bd1c:	ldr	r4, [sp, #136]	; 0x88
   4bd20:	str	r1, [sp, #132]	; 0x84
   4bd24:	mov	r1, r4
   4bd28:	ldr	r5, [sp, #132]	; 0x84
   4bd2c:	str	r5, [sp]
   4bd30:	str	lr, [sp, #4]
   4bd34:	bl	128c4 <fprintf@plt>
   4bd38:	str	r0, [sp, #128]	; 0x80
   4bd3c:	b	4c09c <__assert_fail@plt+0x394e4>
   4bd40:	ldr	r0, [fp, #-32]	; 0xffffffe0
   4bd44:	movw	r1, #57739	; 0xe18b
   4bd48:	movt	r1, #7
   4bd4c:	str	r0, [sp, #124]	; 0x7c
   4bd50:	mov	r0, r1
   4bd54:	bl	12864 <gettext@plt>
   4bd58:	ldr	r1, [fp, #8]
   4bd5c:	ldr	r2, [r1]
   4bd60:	ldr	r1, [fp, #8]
   4bd64:	ldr	r3, [r1, #4]
   4bd68:	ldr	r1, [fp, #8]
   4bd6c:	ldr	r1, [r1, #8]
   4bd70:	ldr	lr, [fp, #8]
   4bd74:	ldr	lr, [lr, #12]
   4bd78:	ldr	ip, [fp, #8]
   4bd7c:	ldr	ip, [ip, #16]
   4bd80:	ldr	r4, [sp, #124]	; 0x7c
   4bd84:	str	r0, [sp, #120]	; 0x78
   4bd88:	mov	r0, r4
   4bd8c:	ldr	r5, [sp, #120]	; 0x78
   4bd90:	str	r1, [sp, #116]	; 0x74
   4bd94:	mov	r1, r5
   4bd98:	ldr	r6, [sp, #116]	; 0x74
   4bd9c:	str	r6, [sp]
   4bda0:	str	lr, [sp, #4]
   4bda4:	str	ip, [sp, #8]
   4bda8:	bl	128c4 <fprintf@plt>
   4bdac:	str	r0, [sp, #112]	; 0x70
   4bdb0:	b	4c09c <__assert_fail@plt+0x394e4>
   4bdb4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   4bdb8:	movw	r1, #57775	; 0xe1af
   4bdbc:	movt	r1, #7
   4bdc0:	str	r0, [sp, #108]	; 0x6c
   4bdc4:	mov	r0, r1
   4bdc8:	bl	12864 <gettext@plt>
   4bdcc:	ldr	r1, [fp, #8]
   4bdd0:	ldr	r2, [r1]
   4bdd4:	ldr	r1, [fp, #8]
   4bdd8:	ldr	r3, [r1, #4]
   4bddc:	ldr	r1, [fp, #8]
   4bde0:	ldr	r1, [r1, #8]
   4bde4:	ldr	lr, [fp, #8]
   4bde8:	ldr	lr, [lr, #12]
   4bdec:	ldr	ip, [fp, #8]
   4bdf0:	ldr	ip, [ip, #16]
   4bdf4:	ldr	r4, [fp, #8]
   4bdf8:	ldr	r4, [r4, #20]
   4bdfc:	ldr	r5, [sp, #108]	; 0x6c
   4be00:	str	r0, [sp, #104]	; 0x68
   4be04:	mov	r0, r5
   4be08:	ldr	r6, [sp, #104]	; 0x68
   4be0c:	str	r1, [sp, #100]	; 0x64
   4be10:	mov	r1, r6
   4be14:	ldr	r7, [sp, #100]	; 0x64
   4be18:	str	r7, [sp]
   4be1c:	str	lr, [sp, #4]
   4be20:	str	ip, [sp, #8]
   4be24:	str	r4, [sp, #12]
   4be28:	bl	128c4 <fprintf@plt>
   4be2c:	str	r0, [sp, #96]	; 0x60
   4be30:	b	4c09c <__assert_fail@plt+0x394e4>
   4be34:	ldr	r0, [fp, #-32]	; 0xffffffe0
   4be38:	movw	r1, #57815	; 0xe1d7
   4be3c:	movt	r1, #7
   4be40:	str	r0, [sp, #92]	; 0x5c
   4be44:	mov	r0, r1
   4be48:	bl	12864 <gettext@plt>
   4be4c:	ldr	r1, [fp, #8]
   4be50:	ldr	r2, [r1]
   4be54:	ldr	r1, [fp, #8]
   4be58:	ldr	r3, [r1, #4]
   4be5c:	ldr	r1, [fp, #8]
   4be60:	ldr	r1, [r1, #8]
   4be64:	ldr	lr, [fp, #8]
   4be68:	ldr	lr, [lr, #12]
   4be6c:	ldr	ip, [fp, #8]
   4be70:	ldr	ip, [ip, #16]
   4be74:	ldr	r4, [fp, #8]
   4be78:	ldr	r4, [r4, #20]
   4be7c:	ldr	r5, [fp, #8]
   4be80:	ldr	r5, [r5, #24]
   4be84:	ldr	r6, [sp, #92]	; 0x5c
   4be88:	str	r0, [sp, #88]	; 0x58
   4be8c:	mov	r0, r6
   4be90:	ldr	r7, [sp, #88]	; 0x58
   4be94:	str	r1, [sp, #84]	; 0x54
   4be98:	mov	r1, r7
   4be9c:	ldr	r8, [sp, #84]	; 0x54
   4bea0:	str	r8, [sp]
   4bea4:	str	lr, [sp, #4]
   4bea8:	str	ip, [sp, #8]
   4beac:	str	r4, [sp, #12]
   4beb0:	str	r5, [sp, #16]
   4beb4:	bl	128c4 <fprintf@plt>
   4beb8:	str	r0, [sp, #80]	; 0x50
   4bebc:	b	4c09c <__assert_fail@plt+0x394e4>
   4bec0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   4bec4:	movw	r1, #57859	; 0xe203
   4bec8:	movt	r1, #7
   4becc:	str	r0, [sp, #76]	; 0x4c
   4bed0:	mov	r0, r1
   4bed4:	bl	12864 <gettext@plt>
   4bed8:	ldr	r1, [fp, #8]
   4bedc:	ldr	r2, [r1]
   4bee0:	ldr	r1, [fp, #8]
   4bee4:	ldr	r3, [r1, #4]
   4bee8:	ldr	r1, [fp, #8]
   4beec:	ldr	r1, [r1, #8]
   4bef0:	ldr	lr, [fp, #8]
   4bef4:	ldr	lr, [lr, #12]
   4bef8:	ldr	ip, [fp, #8]
   4befc:	ldr	ip, [ip, #16]
   4bf00:	ldr	r4, [fp, #8]
   4bf04:	ldr	r4, [r4, #20]
   4bf08:	ldr	r5, [fp, #8]
   4bf0c:	ldr	r5, [r5, #24]
   4bf10:	ldr	r6, [fp, #8]
   4bf14:	ldr	r6, [r6, #28]
   4bf18:	ldr	r7, [sp, #76]	; 0x4c
   4bf1c:	str	r0, [sp, #72]	; 0x48
   4bf20:	mov	r0, r7
   4bf24:	ldr	r8, [sp, #72]	; 0x48
   4bf28:	str	r1, [sp, #68]	; 0x44
   4bf2c:	mov	r1, r8
   4bf30:	ldr	r9, [sp, #68]	; 0x44
   4bf34:	str	r9, [sp]
   4bf38:	str	lr, [sp, #4]
   4bf3c:	str	ip, [sp, #8]
   4bf40:	str	r4, [sp, #12]
   4bf44:	str	r5, [sp, #16]
   4bf48:	str	r6, [sp, #20]
   4bf4c:	bl	128c4 <fprintf@plt>
   4bf50:	str	r0, [sp, #64]	; 0x40
   4bf54:	b	4c09c <__assert_fail@plt+0x394e4>
   4bf58:	ldr	r0, [fp, #-32]	; 0xffffffe0
   4bf5c:	movw	r1, #57907	; 0xe233
   4bf60:	movt	r1, #7
   4bf64:	str	r0, [sp, #60]	; 0x3c
   4bf68:	mov	r0, r1
   4bf6c:	bl	12864 <gettext@plt>
   4bf70:	ldr	r1, [fp, #8]
   4bf74:	ldr	r2, [r1]
   4bf78:	ldr	r1, [fp, #8]
   4bf7c:	ldr	r3, [r1, #4]
   4bf80:	ldr	r1, [fp, #8]
   4bf84:	ldr	r1, [r1, #8]
   4bf88:	ldr	lr, [fp, #8]
   4bf8c:	ldr	lr, [lr, #12]
   4bf90:	ldr	ip, [fp, #8]
   4bf94:	ldr	ip, [ip, #16]
   4bf98:	ldr	r4, [fp, #8]
   4bf9c:	ldr	r4, [r4, #20]
   4bfa0:	ldr	r5, [fp, #8]
   4bfa4:	ldr	r5, [r5, #24]
   4bfa8:	ldr	r6, [fp, #8]
   4bfac:	ldr	r6, [r6, #28]
   4bfb0:	ldr	r7, [fp, #8]
   4bfb4:	ldr	r7, [r7, #32]
   4bfb8:	ldr	r8, [sp, #60]	; 0x3c
   4bfbc:	str	r0, [sp, #56]	; 0x38
   4bfc0:	mov	r0, r8
   4bfc4:	ldr	r9, [sp, #56]	; 0x38
   4bfc8:	str	r1, [sp, #52]	; 0x34
   4bfcc:	mov	r1, r9
   4bfd0:	ldr	sl, [sp, #52]	; 0x34
   4bfd4:	str	sl, [sp]
   4bfd8:	str	lr, [sp, #4]
   4bfdc:	str	ip, [sp, #8]
   4bfe0:	str	r4, [sp, #12]
   4bfe4:	str	r5, [sp, #16]
   4bfe8:	str	r6, [sp, #20]
   4bfec:	str	r7, [sp, #24]
   4bff0:	bl	128c4 <fprintf@plt>
   4bff4:	str	r0, [sp, #48]	; 0x30
   4bff8:	b	4c09c <__assert_fail@plt+0x394e4>
   4bffc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   4c000:	movw	r1, #57959	; 0xe267
   4c004:	movt	r1, #7
   4c008:	str	r0, [sp, #44]	; 0x2c
   4c00c:	mov	r0, r1
   4c010:	bl	12864 <gettext@plt>
   4c014:	ldr	r1, [fp, #8]
   4c018:	ldr	r2, [r1]
   4c01c:	ldr	r1, [fp, #8]
   4c020:	ldr	r3, [r1, #4]
   4c024:	ldr	r1, [fp, #8]
   4c028:	ldr	r1, [r1, #8]
   4c02c:	ldr	lr, [fp, #8]
   4c030:	ldr	lr, [lr, #12]
   4c034:	ldr	ip, [fp, #8]
   4c038:	ldr	ip, [ip, #16]
   4c03c:	ldr	r4, [fp, #8]
   4c040:	ldr	r4, [r4, #20]
   4c044:	ldr	r5, [fp, #8]
   4c048:	ldr	r5, [r5, #24]
   4c04c:	ldr	r6, [fp, #8]
   4c050:	ldr	r6, [r6, #28]
   4c054:	ldr	r7, [fp, #8]
   4c058:	ldr	r7, [r7, #32]
   4c05c:	ldr	r8, [sp, #44]	; 0x2c
   4c060:	str	r0, [sp, #40]	; 0x28
   4c064:	mov	r0, r8
   4c068:	ldr	r9, [sp, #40]	; 0x28
   4c06c:	str	r1, [sp, #36]	; 0x24
   4c070:	mov	r1, r9
   4c074:	ldr	sl, [sp, #36]	; 0x24
   4c078:	str	sl, [sp]
   4c07c:	str	lr, [sp, #4]
   4c080:	str	ip, [sp, #8]
   4c084:	str	r4, [sp, #12]
   4c088:	str	r5, [sp, #16]
   4c08c:	str	r6, [sp, #20]
   4c090:	str	r7, [sp, #24]
   4c094:	bl	128c4 <fprintf@plt>
   4c098:	str	r0, [sp, #32]
   4c09c:	sub	sp, fp, #28
   4c0a0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   4c0a4:	push	{fp, lr}
   4c0a8:	mov	fp, sp
   4c0ac:	sub	sp, sp, #32
   4c0b0:	ldr	ip, [fp, #8]
   4c0b4:	str	r0, [fp, #-4]
   4c0b8:	str	r1, [fp, #-8]
   4c0bc:	str	r2, [fp, #-12]
   4c0c0:	str	r3, [sp, #16]
   4c0c4:	movw	r0, #0
   4c0c8:	str	r0, [sp, #12]
   4c0cc:	str	ip, [sp, #8]
   4c0d0:	ldr	r0, [fp, #8]
   4c0d4:	ldr	r1, [sp, #12]
   4c0d8:	add	r0, r0, r1, lsl #2
   4c0dc:	ldr	r0, [r0]
   4c0e0:	movw	r1, #0
   4c0e4:	cmp	r0, r1
   4c0e8:	beq	4c100 <__assert_fail@plt+0x39548>
   4c0ec:	b	4c0f0 <__assert_fail@plt+0x39538>
   4c0f0:	ldr	r0, [sp, #12]
   4c0f4:	add	r0, r0, #1
   4c0f8:	str	r0, [sp, #12]
   4c0fc:	b	4c0d0 <__assert_fail@plt+0x39518>
   4c100:	ldr	r0, [fp, #-4]
   4c104:	ldr	r1, [fp, #-8]
   4c108:	ldr	r2, [fp, #-12]
   4c10c:	ldr	r3, [sp, #16]
   4c110:	ldr	ip, [fp, #8]
   4c114:	ldr	lr, [sp, #12]
   4c118:	str	ip, [sp]
   4c11c:	str	lr, [sp, #4]
   4c120:	bl	4ba80 <__assert_fail@plt+0x38ec8>
   4c124:	mov	sp, fp
   4c128:	pop	{fp, pc}
   4c12c:	push	{fp, lr}
   4c130:	mov	fp, sp
   4c134:	sub	sp, sp, #80	; 0x50
   4c138:	ldr	ip, [fp, #8]
   4c13c:	str	ip, [fp, #-4]
   4c140:	str	r0, [fp, #-8]
   4c144:	str	r1, [fp, #-12]
   4c148:	str	r2, [fp, #-16]
   4c14c:	str	r3, [fp, #-20]	; 0xffffffec
   4c150:	movw	r0, #0
   4c154:	str	r0, [fp, #-24]	; 0xffffffe8
   4c158:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4c15c:	cmp	r0, #10
   4c160:	movw	r0, #0
   4c164:	str	r0, [sp, #12]
   4c168:	bcs	4c1a0 <__assert_fail@plt+0x395e8>
   4c16c:	ldr	r0, [fp, #-4]
   4c170:	add	r1, r0, #4
   4c174:	str	r1, [fp, #-4]
   4c178:	ldr	r0, [r0]
   4c17c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   4c180:	add	r2, sp, #16
   4c184:	add	r1, r2, r1, lsl #2
   4c188:	str	r0, [r1]
   4c18c:	movw	r1, #0
   4c190:	cmp	r0, r1
   4c194:	movw	r0, #0
   4c198:	movne	r0, #1
   4c19c:	str	r0, [sp, #12]
   4c1a0:	ldr	r0, [sp, #12]
   4c1a4:	tst	r0, #1
   4c1a8:	beq	4c1c0 <__assert_fail@plt+0x39608>
   4c1ac:	b	4c1b0 <__assert_fail@plt+0x395f8>
   4c1b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4c1b4:	add	r0, r0, #1
   4c1b8:	str	r0, [fp, #-24]	; 0xffffffe8
   4c1bc:	b	4c158 <__assert_fail@plt+0x395a0>
   4c1c0:	add	r0, sp, #16
   4c1c4:	ldr	r1, [fp, #-8]
   4c1c8:	ldr	r2, [fp, #-12]
   4c1cc:	ldr	r3, [fp, #-16]
   4c1d0:	ldr	ip, [fp, #-20]	; 0xffffffec
   4c1d4:	ldr	lr, [fp, #-24]	; 0xffffffe8
   4c1d8:	str	r0, [sp, #8]
   4c1dc:	mov	r0, r1
   4c1e0:	mov	r1, r2
   4c1e4:	mov	r2, r3
   4c1e8:	mov	r3, ip
   4c1ec:	ldr	ip, [sp, #8]
   4c1f0:	str	ip, [sp]
   4c1f4:	str	lr, [sp, #4]
   4c1f8:	bl	4ba80 <__assert_fail@plt+0x38ec8>
   4c1fc:	mov	sp, fp
   4c200:	pop	{fp, pc}
   4c204:	push	{fp, lr}
   4c208:	mov	fp, sp
   4c20c:	sub	sp, sp, #32
   4c210:	str	r0, [fp, #-4]
   4c214:	str	r1, [fp, #-8]
   4c218:	str	r2, [fp, #-12]
   4c21c:	str	r3, [sp, #16]
   4c220:	add	r0, fp, #8
   4c224:	str	r0, [sp, #12]
   4c228:	ldr	r0, [fp, #-4]
   4c22c:	ldr	r1, [fp, #-8]
   4c230:	ldr	r2, [fp, #-12]
   4c234:	ldr	r3, [sp, #16]
   4c238:	ldr	ip, [sp, #12]
   4c23c:	mov	lr, sp
   4c240:	str	ip, [lr]
   4c244:	bl	4c12c <__assert_fail@plt+0x39574>
   4c248:	add	r0, sp, #12
   4c24c:	str	r0, [sp, #8]
   4c250:	mov	sp, fp
   4c254:	pop	{fp, pc}
   4c258:	push	{fp, lr}
   4c25c:	mov	fp, sp
   4c260:	sub	sp, sp, #16
   4c264:	movw	r0, #63284	; 0xf734
   4c268:	movt	r0, #8
   4c26c:	ldr	r1, [r0]
   4c270:	movw	r0, #39196	; 0x991c
   4c274:	movt	r0, #7
   4c278:	bl	12b4c <fputs@plt>
   4c27c:	movw	r1, #58019	; 0xe2a3
   4c280:	movt	r1, #7
   4c284:	str	r0, [fp, #-4]
   4c288:	mov	r0, r1
   4c28c:	bl	12864 <gettext@plt>
   4c290:	movw	r1, #50100	; 0xc3b4
   4c294:	movt	r1, #7
   4c298:	bl	124f8 <printf@plt>
   4c29c:	movw	r1, #58039	; 0xe2b7
   4c2a0:	movt	r1, #7
   4c2a4:	str	r0, [sp, #8]
   4c2a8:	mov	r0, r1
   4c2ac:	bl	12864 <gettext@plt>
   4c2b0:	movw	r1, #49409	; 0xc101
   4c2b4:	movt	r1, #7
   4c2b8:	movw	r2, #50014	; 0xc35e
   4c2bc:	movt	r2, #7
   4c2c0:	bl	124f8 <printf@plt>
   4c2c4:	movw	r1, #58059	; 0xe2cb
   4c2c8:	movt	r1, #7
   4c2cc:	str	r0, [sp, #4]
   4c2d0:	mov	r0, r1
   4c2d4:	bl	12864 <gettext@plt>
   4c2d8:	movw	r1, #58098	; 0xe2f2
   4c2dc:	movt	r1, #7
   4c2e0:	bl	124f8 <printf@plt>
   4c2e4:	str	r0, [sp]
   4c2e8:	mov	sp, fp
   4c2ec:	pop	{fp, pc}
   4c2f0:	push	{fp, lr}
   4c2f4:	mov	fp, sp
   4c2f8:	sub	sp, sp, #16
   4c2fc:	str	r0, [fp, #-4]
   4c300:	str	r1, [sp, #8]
   4c304:	str	r2, [sp, #4]
   4c308:	ldr	r0, [fp, #-4]
   4c30c:	ldr	r1, [sp, #8]
   4c310:	ldr	r2, [sp, #4]
   4c314:	bl	4c320 <__assert_fail@plt+0x39768>
   4c318:	mov	sp, fp
   4c31c:	pop	{fp, pc}
   4c320:	push	{fp, lr}
   4c324:	mov	fp, sp
   4c328:	sub	sp, sp, #16
   4c32c:	str	r0, [fp, #-4]
   4c330:	str	r1, [sp, #8]
   4c334:	str	r2, [sp, #4]
   4c338:	ldr	r0, [fp, #-4]
   4c33c:	ldr	r1, [sp, #8]
   4c340:	ldr	r2, [sp, #4]
   4c344:	bl	55b28 <__assert_fail@plt+0x42f70>
   4c348:	str	r0, [sp]
   4c34c:	ldr	r0, [sp]
   4c350:	movw	r1, #0
   4c354:	cmp	r0, r1
   4c358:	bne	4c388 <__assert_fail@plt+0x397d0>
   4c35c:	ldr	r0, [fp, #-4]
   4c360:	movw	r1, #0
   4c364:	cmp	r0, r1
   4c368:	beq	4c384 <__assert_fail@plt+0x397cc>
   4c36c:	ldr	r0, [sp, #8]
   4c370:	cmp	r0, #0
   4c374:	beq	4c388 <__assert_fail@plt+0x397d0>
   4c378:	ldr	r0, [sp, #4]
   4c37c:	cmp	r0, #0
   4c380:	beq	4c388 <__assert_fail@plt+0x397d0>
   4c384:	bl	4f170 <__assert_fail@plt+0x3c5b8>
   4c388:	ldr	r0, [sp]
   4c38c:	mov	sp, fp
   4c390:	pop	{fp, pc}
   4c394:	push	{fp, lr}
   4c398:	mov	fp, sp
   4c39c:	sub	sp, sp, #8
   4c3a0:	str	r0, [sp, #4]
   4c3a4:	ldr	r0, [sp, #4]
   4c3a8:	bl	549ac <__assert_fail@plt+0x41df4>
   4c3ac:	bl	4c3b8 <__assert_fail@plt+0x39800>
   4c3b0:	mov	sp, fp
   4c3b4:	pop	{fp, pc}
   4c3b8:	push	{fp, lr}
   4c3bc:	mov	fp, sp
   4c3c0:	sub	sp, sp, #8
   4c3c4:	str	r0, [sp, #4]
   4c3c8:	ldr	r0, [sp, #4]
   4c3cc:	movw	r1, #0
   4c3d0:	cmp	r0, r1
   4c3d4:	bne	4c3dc <__assert_fail@plt+0x39824>
   4c3d8:	bl	4f170 <__assert_fail@plt+0x3c5b8>
   4c3dc:	ldr	r0, [sp, #4]
   4c3e0:	mov	sp, fp
   4c3e4:	pop	{fp, pc}
   4c3e8:	push	{fp, lr}
   4c3ec:	mov	fp, sp
   4c3f0:	sub	sp, sp, #8
   4c3f4:	str	r0, [sp, #4]
   4c3f8:	ldr	r0, [sp, #4]
   4c3fc:	bl	73170 <__assert_fail@plt+0x605b8>
   4c400:	bl	4c3b8 <__assert_fail@plt+0x39800>
   4c404:	mov	sp, fp
   4c408:	pop	{fp, pc}
   4c40c:	push	{fp, lr}
   4c410:	mov	fp, sp
   4c414:	sub	sp, sp, #8
   4c418:	str	r0, [sp, #4]
   4c41c:	ldr	r0, [sp, #4]
   4c420:	bl	4c394 <__assert_fail@plt+0x397dc>
   4c424:	mov	sp, fp
   4c428:	pop	{fp, pc}
   4c42c:	push	{fp, lr}
   4c430:	mov	fp, sp
   4c434:	sub	sp, sp, #16
   4c438:	str	r0, [fp, #-4]
   4c43c:	str	r1, [sp, #8]
   4c440:	ldr	r0, [fp, #-4]
   4c444:	ldr	r1, [sp, #8]
   4c448:	bl	55a84 <__assert_fail@plt+0x42ecc>
   4c44c:	str	r0, [sp, #4]
   4c450:	ldr	r0, [sp, #4]
   4c454:	movw	r1, #0
   4c458:	cmp	r0, r1
   4c45c:	bne	4c480 <__assert_fail@plt+0x398c8>
   4c460:	ldr	r0, [fp, #-4]
   4c464:	movw	r1, #0
   4c468:	cmp	r0, r1
   4c46c:	beq	4c47c <__assert_fail@plt+0x398c4>
   4c470:	ldr	r0, [sp, #8]
   4c474:	cmp	r0, #0
   4c478:	beq	4c480 <__assert_fail@plt+0x398c8>
   4c47c:	bl	4f170 <__assert_fail@plt+0x3c5b8>
   4c480:	ldr	r0, [sp, #4]
   4c484:	mov	sp, fp
   4c488:	pop	{fp, pc}
   4c48c:	push	{fp, lr}
   4c490:	mov	fp, sp
   4c494:	sub	sp, sp, #8
   4c498:	str	r0, [sp, #4]
   4c49c:	str	r1, [sp]
   4c4a0:	ldr	r0, [sp, #4]
   4c4a4:	ldr	r1, [sp]
   4c4a8:	bl	731b0 <__assert_fail@plt+0x605f8>
   4c4ac:	bl	4c3b8 <__assert_fail@plt+0x39800>
   4c4b0:	mov	sp, fp
   4c4b4:	pop	{fp, pc}
   4c4b8:	push	{fp, lr}
   4c4bc:	mov	fp, sp
   4c4c0:	sub	sp, sp, #16
   4c4c4:	str	r0, [fp, #-4]
   4c4c8:	str	r1, [sp, #8]
   4c4cc:	str	r2, [sp, #4]
   4c4d0:	ldr	r0, [fp, #-4]
   4c4d4:	ldr	r1, [sp, #8]
   4c4d8:	ldr	r2, [sp, #4]
   4c4dc:	bl	732a8 <__assert_fail@plt+0x606f0>
   4c4e0:	bl	4c3b8 <__assert_fail@plt+0x39800>
   4c4e4:	mov	sp, fp
   4c4e8:	pop	{fp, pc}
   4c4ec:	push	{fp, lr}
   4c4f0:	mov	fp, sp
   4c4f4:	sub	sp, sp, #8
   4c4f8:	str	r0, [sp, #4]
   4c4fc:	str	r1, [sp]
   4c500:	ldr	r1, [sp, #4]
   4c504:	ldr	r2, [sp]
   4c508:	movw	r0, #0
   4c50c:	bl	4c320 <__assert_fail@plt+0x39768>
   4c510:	mov	sp, fp
   4c514:	pop	{fp, pc}
   4c518:	push	{fp, lr}
   4c51c:	mov	fp, sp
   4c520:	sub	sp, sp, #8
   4c524:	str	r0, [sp, #4]
   4c528:	str	r1, [sp]
   4c52c:	ldr	r1, [sp, #4]
   4c530:	ldr	r2, [sp]
   4c534:	movw	r0, #0
   4c538:	bl	4c4b8 <__assert_fail@plt+0x39900>
   4c53c:	mov	sp, fp
   4c540:	pop	{fp, pc}
   4c544:	push	{fp, lr}
   4c548:	mov	fp, sp
   4c54c:	sub	sp, sp, #8
   4c550:	str	r0, [sp, #4]
   4c554:	str	r1, [sp]
   4c558:	ldr	r0, [sp, #4]
   4c55c:	ldr	r1, [sp]
   4c560:	movw	r2, #1
   4c564:	bl	4c570 <__assert_fail@plt+0x399b8>
   4c568:	mov	sp, fp
   4c56c:	pop	{fp, pc}
   4c570:	push	{fp, lr}
   4c574:	mov	fp, sp
   4c578:	sub	sp, sp, #16
   4c57c:	str	r0, [fp, #-4]
   4c580:	str	r1, [sp, #8]
   4c584:	str	r2, [sp, #4]
   4c588:	ldr	r0, [sp, #8]
   4c58c:	ldr	r0, [r0]
   4c590:	str	r0, [sp]
   4c594:	ldr	r0, [fp, #-4]
   4c598:	movw	r1, #0
   4c59c:	cmp	r0, r1
   4c5a0:	bne	4c5ec <__assert_fail@plt+0x39a34>
   4c5a4:	ldr	r0, [sp]
   4c5a8:	cmp	r0, #0
   4c5ac:	bne	4c5e8 <__assert_fail@plt+0x39a30>
   4c5b0:	ldr	r0, [sp, #4]
   4c5b4:	movw	r1, #64	; 0x40
   4c5b8:	udiv	r0, r1, r0
   4c5bc:	str	r0, [sp]
   4c5c0:	ldr	r0, [sp]
   4c5c4:	cmp	r0, #0
   4c5c8:	movw	r0, #0
   4c5cc:	movne	r0, #1
   4c5d0:	mvn	r1, #0
   4c5d4:	eor	r0, r0, r1
   4c5d8:	and	r0, r0, #1
   4c5dc:	ldr	r1, [sp]
   4c5e0:	add	r0, r1, r0
   4c5e4:	str	r0, [sp]
   4c5e8:	b	4c61c <__assert_fail@plt+0x39a64>
   4c5ec:	ldr	r0, [sp]
   4c5f0:	ldr	r1, [sp]
   4c5f4:	lsr	r1, r1, #1
   4c5f8:	add	r1, r1, #1
   4c5fc:	adds	r0, r0, r1
   4c600:	mov	r1, #0
   4c604:	adc	r1, r1, #0
   4c608:	str	r0, [sp]
   4c60c:	tst	r1, #1
   4c610:	beq	4c618 <__assert_fail@plt+0x39a60>
   4c614:	bl	4f170 <__assert_fail@plt+0x3c5b8>
   4c618:	b	4c61c <__assert_fail@plt+0x39a64>
   4c61c:	ldr	r0, [fp, #-4]
   4c620:	ldr	r1, [sp]
   4c624:	ldr	r2, [sp, #4]
   4c628:	bl	4c320 <__assert_fail@plt+0x39768>
   4c62c:	str	r0, [fp, #-4]
   4c630:	ldr	r0, [sp]
   4c634:	ldr	r1, [sp, #8]
   4c638:	str	r0, [r1]
   4c63c:	ldr	r0, [fp, #-4]
   4c640:	mov	sp, fp
   4c644:	pop	{fp, pc}
   4c648:	push	{fp, lr}
   4c64c:	mov	fp, sp
   4c650:	sub	sp, sp, #376	; 0x178
   4c654:	ldr	ip, [fp, #8]
   4c658:	str	r0, [fp, #-4]
   4c65c:	str	r1, [fp, #-8]
   4c660:	str	r2, [fp, #-12]
   4c664:	str	r3, [fp, #-16]
   4c668:	ldr	r0, [fp, #-8]
   4c66c:	ldr	r0, [r0]
   4c670:	str	r0, [fp, #-20]	; 0xffffffec
   4c674:	ldr	r0, [fp, #-20]	; 0xffffffec
   4c678:	ldr	r1, [fp, #-20]	; 0xffffffec
   4c67c:	asr	r1, r1, #1
   4c680:	add	r1, r0, r1
   4c684:	mov	r2, #1
   4c688:	cmp	r1, r0
   4c68c:	movwvc	r2, #0
   4c690:	str	r1, [fp, #-24]	; 0xffffffe8
   4c694:	tst	r2, #1
   4c698:	str	ip, [fp, #-36]	; 0xffffffdc
   4c69c:	beq	4c6a8 <__assert_fail@plt+0x39af0>
   4c6a0:	ldr	r0, [pc, #4044]	; 4d674 <__assert_fail@plt+0x3aabc>
   4c6a4:	str	r0, [fp, #-24]	; 0xffffffe8
   4c6a8:	ldr	r0, [fp, #-16]
   4c6ac:	movw	r1, #0
   4c6b0:	cmp	r1, r0
   4c6b4:	bgt	4c6d0 <__assert_fail@plt+0x39b18>
   4c6b8:	ldr	r0, [fp, #-16]
   4c6bc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   4c6c0:	cmp	r0, r1
   4c6c4:	bge	4c6d0 <__assert_fail@plt+0x39b18>
   4c6c8:	ldr	r0, [fp, #-16]
   4c6cc:	str	r0, [fp, #-24]	; 0xffffffe8
   4c6d0:	b	4caa8 <__assert_fail@plt+0x39ef0>
   4c6d4:	b	4c6d8 <__assert_fail@plt+0x39b20>
   4c6d8:	ldr	r0, [fp, #8]
   4c6dc:	cmp	r0, #0
   4c6e0:	bge	4c7f4 <__assert_fail@plt+0x39c3c>
   4c6e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4c6e8:	cmp	r0, #0
   4c6ec:	bge	4c778 <__assert_fail@plt+0x39bc0>
   4c6f0:	b	4c6f4 <__assert_fail@plt+0x39b3c>
   4c6f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4c6f8:	ldr	r1, [fp, #8]
   4c6fc:	movw	r2, #127	; 0x7f
   4c700:	sdiv	r1, r2, r1
   4c704:	cmp	r0, r1
   4c708:	blt	4c894 <__assert_fail@plt+0x39cdc>
   4c70c:	b	4c8ac <__assert_fail@plt+0x39cf4>
   4c710:	b	4c714 <__assert_fail@plt+0x39b5c>
   4c714:	ldr	r0, [pc, #4076]	; 4d708 <__assert_fail@plt+0x3ab50>
   4c718:	ldr	r1, [fp, #8]
   4c71c:	cmp	r1, r0
   4c720:	blt	4c738 <__assert_fail@plt+0x39b80>
   4c724:	b	4c744 <__assert_fail@plt+0x39b8c>
   4c728:	ldr	r0, [fp, #8]
   4c72c:	movw	r1, #0
   4c730:	cmp	r1, r0
   4c734:	bge	4c744 <__assert_fail@plt+0x39b8c>
   4c738:	movw	r0, #0
   4c73c:	str	r0, [fp, #-40]	; 0xffffffd8
   4c740:	b	4c75c <__assert_fail@plt+0x39ba4>
   4c744:	ldr	r0, [fp, #8]
   4c748:	movw	r1, #0
   4c74c:	sub	r0, r1, r0
   4c750:	movw	r1, #127	; 0x7f
   4c754:	sdiv	r0, r1, r0
   4c758:	str	r0, [fp, #-40]	; 0xffffffd8
   4c75c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   4c760:	ldr	r1, [fp, #-24]	; 0xffffffe8
   4c764:	mvn	r2, #0
   4c768:	sub	r1, r2, r1
   4c76c:	cmp	r0, r1
   4c770:	ble	4c894 <__assert_fail@plt+0x39cdc>
   4c774:	b	4c8ac <__assert_fail@plt+0x39cf4>
   4c778:	b	4c77c <__assert_fail@plt+0x39bc4>
   4c77c:	b	4c7d8 <__assert_fail@plt+0x39c20>
   4c780:	b	4c7d8 <__assert_fail@plt+0x39c20>
   4c784:	ldr	r0, [fp, #8]
   4c788:	cmn	r0, #1
   4c78c:	bne	4c7d8 <__assert_fail@plt+0x39c20>
   4c790:	b	4c794 <__assert_fail@plt+0x39bdc>
   4c794:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4c798:	mvn	r1, #127	; 0x7f
   4c79c:	add	r0, r0, r1
   4c7a0:	movw	r1, #0
   4c7a4:	cmp	r1, r0
   4c7a8:	blt	4c894 <__assert_fail@plt+0x39cdc>
   4c7ac:	b	4c8ac <__assert_fail@plt+0x39cf4>
   4c7b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4c7b4:	movw	r1, #0
   4c7b8:	cmp	r1, r0
   4c7bc:	bge	4c8ac <__assert_fail@plt+0x39cf4>
   4c7c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4c7c4:	sub	r0, r0, #1
   4c7c8:	movw	r1, #127	; 0x7f
   4c7cc:	cmp	r1, r0
   4c7d0:	blt	4c894 <__assert_fail@plt+0x39cdc>
   4c7d4:	b	4c8ac <__assert_fail@plt+0x39cf4>
   4c7d8:	ldr	r0, [fp, #8]
   4c7dc:	mvn	r1, #127	; 0x7f
   4c7e0:	sdiv	r0, r1, r0
   4c7e4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   4c7e8:	cmp	r0, r1
   4c7ec:	blt	4c894 <__assert_fail@plt+0x39cdc>
   4c7f0:	b	4c8ac <__assert_fail@plt+0x39cf4>
   4c7f4:	ldr	r0, [fp, #8]
   4c7f8:	cmp	r0, #0
   4c7fc:	bne	4c804 <__assert_fail@plt+0x39c4c>
   4c800:	b	4c8ac <__assert_fail@plt+0x39cf4>
   4c804:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4c808:	cmp	r0, #0
   4c80c:	bge	4c87c <__assert_fail@plt+0x39cc4>
   4c810:	b	4c814 <__assert_fail@plt+0x39c5c>
   4c814:	b	4c860 <__assert_fail@plt+0x39ca8>
   4c818:	b	4c860 <__assert_fail@plt+0x39ca8>
   4c81c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4c820:	cmn	r0, #1
   4c824:	bne	4c860 <__assert_fail@plt+0x39ca8>
   4c828:	b	4c82c <__assert_fail@plt+0x39c74>
   4c82c:	ldr	r0, [fp, #8]
   4c830:	mvn	r1, #127	; 0x7f
   4c834:	add	r0, r0, r1
   4c838:	movw	r1, #0
   4c83c:	cmp	r1, r0
   4c840:	blt	4c894 <__assert_fail@plt+0x39cdc>
   4c844:	b	4c8ac <__assert_fail@plt+0x39cf4>
   4c848:	ldr	r0, [fp, #8]
   4c84c:	sub	r0, r0, #1
   4c850:	movw	r1, #127	; 0x7f
   4c854:	cmp	r1, r0
   4c858:	blt	4c894 <__assert_fail@plt+0x39cdc>
   4c85c:	b	4c8ac <__assert_fail@plt+0x39cf4>
   4c860:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4c864:	mvn	r1, #127	; 0x7f
   4c868:	sdiv	r0, r1, r0
   4c86c:	ldr	r1, [fp, #8]
   4c870:	cmp	r0, r1
   4c874:	blt	4c894 <__assert_fail@plt+0x39cdc>
   4c878:	b	4c8ac <__assert_fail@plt+0x39cf4>
   4c87c:	ldr	r0, [fp, #8]
   4c880:	movw	r1, #127	; 0x7f
   4c884:	sdiv	r0, r1, r0
   4c888:	ldr	r1, [fp, #-24]	; 0xffffffe8
   4c88c:	cmp	r0, r1
   4c890:	bge	4c8ac <__assert_fail@plt+0x39cf4>
   4c894:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4c898:	ldr	r1, [fp, #8]
   4c89c:	mul	r0, r0, r1
   4c8a0:	sxtb	r0, r0
   4c8a4:	str	r0, [fp, #-28]	; 0xffffffe4
   4c8a8:	b	4dac0 <__assert_fail@plt+0x3af08>
   4c8ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4c8b0:	ldr	r1, [fp, #8]
   4c8b4:	mul	r0, r0, r1
   4c8b8:	sxtb	r0, r0
   4c8bc:	str	r0, [fp, #-28]	; 0xffffffe4
   4c8c0:	b	4dad0 <__assert_fail@plt+0x3af18>
   4c8c4:	ldr	r0, [fp, #8]
   4c8c8:	cmp	r0, #0
   4c8cc:	bge	4c9dc <__assert_fail@plt+0x39e24>
   4c8d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4c8d4:	cmp	r0, #0
   4c8d8:	bge	4c964 <__assert_fail@plt+0x39dac>
   4c8dc:	b	4c8e0 <__assert_fail@plt+0x39d28>
   4c8e0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4c8e4:	ldr	r1, [fp, #8]
   4c8e8:	movw	r2, #255	; 0xff
   4c8ec:	sdiv	r1, r2, r1
   4c8f0:	cmp	r0, r1
   4c8f4:	blt	4ca78 <__assert_fail@plt+0x39ec0>
   4c8f8:	b	4ca90 <__assert_fail@plt+0x39ed8>
   4c8fc:	b	4c900 <__assert_fail@plt+0x39d48>
   4c900:	ldr	r0, [pc, #3584]	; 4d708 <__assert_fail@plt+0x3ab50>
   4c904:	ldr	r1, [fp, #8]
   4c908:	cmp	r1, r0
   4c90c:	blt	4c924 <__assert_fail@plt+0x39d6c>
   4c910:	b	4c930 <__assert_fail@plt+0x39d78>
   4c914:	ldr	r0, [fp, #8]
   4c918:	movw	r1, #0
   4c91c:	cmp	r1, r0
   4c920:	bge	4c930 <__assert_fail@plt+0x39d78>
   4c924:	movw	r0, #0
   4c928:	str	r0, [fp, #-44]	; 0xffffffd4
   4c92c:	b	4c948 <__assert_fail@plt+0x39d90>
   4c930:	ldr	r0, [fp, #8]
   4c934:	movw	r1, #0
   4c938:	sub	r0, r1, r0
   4c93c:	movw	r1, #255	; 0xff
   4c940:	sdiv	r0, r1, r0
   4c944:	str	r0, [fp, #-44]	; 0xffffffd4
   4c948:	ldr	r0, [fp, #-44]	; 0xffffffd4
   4c94c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   4c950:	mvn	r2, #0
   4c954:	sub	r1, r2, r1
   4c958:	cmp	r0, r1
   4c95c:	ble	4ca78 <__assert_fail@plt+0x39ec0>
   4c960:	b	4ca90 <__assert_fail@plt+0x39ed8>
   4c964:	b	4c968 <__assert_fail@plt+0x39db0>
   4c968:	b	4c9c0 <__assert_fail@plt+0x39e08>
   4c96c:	b	4c9c0 <__assert_fail@plt+0x39e08>
   4c970:	ldr	r0, [fp, #8]
   4c974:	cmn	r0, #1
   4c978:	bne	4c9c0 <__assert_fail@plt+0x39e08>
   4c97c:	b	4c980 <__assert_fail@plt+0x39dc8>
   4c980:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4c984:	add	r0, r0, #0
   4c988:	movw	r1, #0
   4c98c:	cmp	r1, r0
   4c990:	blt	4ca78 <__assert_fail@plt+0x39ec0>
   4c994:	b	4ca90 <__assert_fail@plt+0x39ed8>
   4c998:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4c99c:	movw	r1, #0
   4c9a0:	cmp	r1, r0
   4c9a4:	bge	4ca90 <__assert_fail@plt+0x39ed8>
   4c9a8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4c9ac:	sub	r0, r0, #1
   4c9b0:	mvn	r1, #0
   4c9b4:	cmp	r1, r0
   4c9b8:	blt	4ca78 <__assert_fail@plt+0x39ec0>
   4c9bc:	b	4ca90 <__assert_fail@plt+0x39ed8>
   4c9c0:	ldr	r0, [fp, #8]
   4c9c4:	movw	r1, #0
   4c9c8:	sdiv	r0, r1, r0
   4c9cc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   4c9d0:	cmp	r0, r1
   4c9d4:	blt	4ca78 <__assert_fail@plt+0x39ec0>
   4c9d8:	b	4ca90 <__assert_fail@plt+0x39ed8>
   4c9dc:	ldr	r0, [fp, #8]
   4c9e0:	cmp	r0, #0
   4c9e4:	bne	4c9ec <__assert_fail@plt+0x39e34>
   4c9e8:	b	4ca90 <__assert_fail@plt+0x39ed8>
   4c9ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4c9f0:	cmp	r0, #0
   4c9f4:	bge	4ca60 <__assert_fail@plt+0x39ea8>
   4c9f8:	b	4c9fc <__assert_fail@plt+0x39e44>
   4c9fc:	b	4ca44 <__assert_fail@plt+0x39e8c>
   4ca00:	b	4ca44 <__assert_fail@plt+0x39e8c>
   4ca04:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4ca08:	cmn	r0, #1
   4ca0c:	bne	4ca44 <__assert_fail@plt+0x39e8c>
   4ca10:	b	4ca14 <__assert_fail@plt+0x39e5c>
   4ca14:	ldr	r0, [fp, #8]
   4ca18:	add	r0, r0, #0
   4ca1c:	movw	r1, #0
   4ca20:	cmp	r1, r0
   4ca24:	blt	4ca78 <__assert_fail@plt+0x39ec0>
   4ca28:	b	4ca90 <__assert_fail@plt+0x39ed8>
   4ca2c:	ldr	r0, [fp, #8]
   4ca30:	sub	r0, r0, #1
   4ca34:	mvn	r1, #0
   4ca38:	cmp	r1, r0
   4ca3c:	blt	4ca78 <__assert_fail@plt+0x39ec0>
   4ca40:	b	4ca90 <__assert_fail@plt+0x39ed8>
   4ca44:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4ca48:	movw	r1, #0
   4ca4c:	sdiv	r0, r1, r0
   4ca50:	ldr	r1, [fp, #8]
   4ca54:	cmp	r0, r1
   4ca58:	blt	4ca78 <__assert_fail@plt+0x39ec0>
   4ca5c:	b	4ca90 <__assert_fail@plt+0x39ed8>
   4ca60:	ldr	r0, [fp, #8]
   4ca64:	movw	r1, #255	; 0xff
   4ca68:	sdiv	r0, r1, r0
   4ca6c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   4ca70:	cmp	r0, r1
   4ca74:	bge	4ca90 <__assert_fail@plt+0x39ed8>
   4ca78:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4ca7c:	ldr	r1, [fp, #8]
   4ca80:	mul	r0, r0, r1
   4ca84:	and	r0, r0, #255	; 0xff
   4ca88:	str	r0, [fp, #-28]	; 0xffffffe4
   4ca8c:	b	4dac0 <__assert_fail@plt+0x3af08>
   4ca90:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4ca94:	ldr	r1, [fp, #8]
   4ca98:	mul	r0, r0, r1
   4ca9c:	and	r0, r0, #255	; 0xff
   4caa0:	str	r0, [fp, #-28]	; 0xffffffe4
   4caa4:	b	4dad0 <__assert_fail@plt+0x3af18>
   4caa8:	b	4ce80 <__assert_fail@plt+0x3a2c8>
   4caac:	b	4cab0 <__assert_fail@plt+0x39ef8>
   4cab0:	ldr	r0, [fp, #8]
   4cab4:	cmp	r0, #0
   4cab8:	bge	4cbcc <__assert_fail@plt+0x3a014>
   4cabc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4cac0:	cmp	r0, #0
   4cac4:	bge	4cb50 <__assert_fail@plt+0x39f98>
   4cac8:	b	4cacc <__assert_fail@plt+0x39f14>
   4cacc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4cad0:	ldr	r1, [fp, #8]
   4cad4:	movw	r2, #32767	; 0x7fff
   4cad8:	sdiv	r1, r2, r1
   4cadc:	cmp	r0, r1
   4cae0:	blt	4cc6c <__assert_fail@plt+0x3a0b4>
   4cae4:	b	4cc84 <__assert_fail@plt+0x3a0cc>
   4cae8:	b	4caec <__assert_fail@plt+0x39f34>
   4caec:	ldr	r0, [pc, #3092]	; 4d708 <__assert_fail@plt+0x3ab50>
   4caf0:	ldr	r1, [fp, #8]
   4caf4:	cmp	r1, r0
   4caf8:	blt	4cb10 <__assert_fail@plt+0x39f58>
   4cafc:	b	4cb1c <__assert_fail@plt+0x39f64>
   4cb00:	ldr	r0, [fp, #8]
   4cb04:	movw	r1, #0
   4cb08:	cmp	r1, r0
   4cb0c:	bge	4cb1c <__assert_fail@plt+0x39f64>
   4cb10:	movw	r0, #0
   4cb14:	str	r0, [fp, #-48]	; 0xffffffd0
   4cb18:	b	4cb34 <__assert_fail@plt+0x39f7c>
   4cb1c:	ldr	r0, [fp, #8]
   4cb20:	movw	r1, #0
   4cb24:	sub	r0, r1, r0
   4cb28:	movw	r1, #32767	; 0x7fff
   4cb2c:	sdiv	r0, r1, r0
   4cb30:	str	r0, [fp, #-48]	; 0xffffffd0
   4cb34:	ldr	r0, [fp, #-48]	; 0xffffffd0
   4cb38:	ldr	r1, [fp, #-24]	; 0xffffffe8
   4cb3c:	mvn	r2, #0
   4cb40:	sub	r1, r2, r1
   4cb44:	cmp	r0, r1
   4cb48:	ble	4cc6c <__assert_fail@plt+0x3a0b4>
   4cb4c:	b	4cc84 <__assert_fail@plt+0x3a0cc>
   4cb50:	b	4cb54 <__assert_fail@plt+0x39f9c>
   4cb54:	b	4cbb0 <__assert_fail@plt+0x39ff8>
   4cb58:	b	4cbb0 <__assert_fail@plt+0x39ff8>
   4cb5c:	ldr	r0, [fp, #8]
   4cb60:	cmn	r0, #1
   4cb64:	bne	4cbb0 <__assert_fail@plt+0x39ff8>
   4cb68:	b	4cb6c <__assert_fail@plt+0x39fb4>
   4cb6c:	ldr	r0, [pc, #3928]	; 4dacc <__assert_fail@plt+0x3af14>
   4cb70:	ldr	r1, [fp, #-24]	; 0xffffffe8
   4cb74:	add	r0, r1, r0
   4cb78:	movw	r1, #0
   4cb7c:	cmp	r1, r0
   4cb80:	blt	4cc6c <__assert_fail@plt+0x3a0b4>
   4cb84:	b	4cc84 <__assert_fail@plt+0x3a0cc>
   4cb88:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4cb8c:	movw	r1, #0
   4cb90:	cmp	r1, r0
   4cb94:	bge	4cc84 <__assert_fail@plt+0x3a0cc>
   4cb98:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4cb9c:	sub	r0, r0, #1
   4cba0:	movw	r1, #32767	; 0x7fff
   4cba4:	cmp	r1, r0
   4cba8:	blt	4cc6c <__assert_fail@plt+0x3a0b4>
   4cbac:	b	4cc84 <__assert_fail@plt+0x3a0cc>
   4cbb0:	ldr	r0, [pc, #3860]	; 4dacc <__assert_fail@plt+0x3af14>
   4cbb4:	ldr	r1, [fp, #8]
   4cbb8:	sdiv	r0, r0, r1
   4cbbc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   4cbc0:	cmp	r0, r1
   4cbc4:	blt	4cc6c <__assert_fail@plt+0x3a0b4>
   4cbc8:	b	4cc84 <__assert_fail@plt+0x3a0cc>
   4cbcc:	ldr	r0, [fp, #8]
   4cbd0:	cmp	r0, #0
   4cbd4:	bne	4cbdc <__assert_fail@plt+0x3a024>
   4cbd8:	b	4cc84 <__assert_fail@plt+0x3a0cc>
   4cbdc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4cbe0:	cmp	r0, #0
   4cbe4:	bge	4cc54 <__assert_fail@plt+0x3a09c>
   4cbe8:	b	4cbec <__assert_fail@plt+0x3a034>
   4cbec:	b	4cc38 <__assert_fail@plt+0x3a080>
   4cbf0:	b	4cc38 <__assert_fail@plt+0x3a080>
   4cbf4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4cbf8:	cmn	r0, #1
   4cbfc:	bne	4cc38 <__assert_fail@plt+0x3a080>
   4cc00:	b	4cc04 <__assert_fail@plt+0x3a04c>
   4cc04:	ldr	r0, [pc, #3776]	; 4dacc <__assert_fail@plt+0x3af14>
   4cc08:	ldr	r1, [fp, #8]
   4cc0c:	add	r0, r1, r0
   4cc10:	movw	r1, #0
   4cc14:	cmp	r1, r0
   4cc18:	blt	4cc6c <__assert_fail@plt+0x3a0b4>
   4cc1c:	b	4cc84 <__assert_fail@plt+0x3a0cc>
   4cc20:	ldr	r0, [fp, #8]
   4cc24:	sub	r0, r0, #1
   4cc28:	movw	r1, #32767	; 0x7fff
   4cc2c:	cmp	r1, r0
   4cc30:	blt	4cc6c <__assert_fail@plt+0x3a0b4>
   4cc34:	b	4cc84 <__assert_fail@plt+0x3a0cc>
   4cc38:	ldr	r0, [pc, #3724]	; 4dacc <__assert_fail@plt+0x3af14>
   4cc3c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   4cc40:	sdiv	r0, r0, r1
   4cc44:	ldr	r1, [fp, #8]
   4cc48:	cmp	r0, r1
   4cc4c:	blt	4cc6c <__assert_fail@plt+0x3a0b4>
   4cc50:	b	4cc84 <__assert_fail@plt+0x3a0cc>
   4cc54:	ldr	r0, [fp, #8]
   4cc58:	movw	r1, #32767	; 0x7fff
   4cc5c:	sdiv	r0, r1, r0
   4cc60:	ldr	r1, [fp, #-24]	; 0xffffffe8
   4cc64:	cmp	r0, r1
   4cc68:	bge	4cc84 <__assert_fail@plt+0x3a0cc>
   4cc6c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4cc70:	ldr	r1, [fp, #8]
   4cc74:	mul	r0, r0, r1
   4cc78:	sxth	r0, r0
   4cc7c:	str	r0, [fp, #-28]	; 0xffffffe4
   4cc80:	b	4dac0 <__assert_fail@plt+0x3af08>
   4cc84:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4cc88:	ldr	r1, [fp, #8]
   4cc8c:	mul	r0, r0, r1
   4cc90:	sxth	r0, r0
   4cc94:	str	r0, [fp, #-28]	; 0xffffffe4
   4cc98:	b	4dad0 <__assert_fail@plt+0x3af18>
   4cc9c:	ldr	r0, [fp, #8]
   4cca0:	cmp	r0, #0
   4cca4:	bge	4cdb4 <__assert_fail@plt+0x3a1fc>
   4cca8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4ccac:	cmp	r0, #0
   4ccb0:	bge	4cd3c <__assert_fail@plt+0x3a184>
   4ccb4:	b	4ccb8 <__assert_fail@plt+0x3a100>
   4ccb8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4ccbc:	ldr	r1, [fp, #8]
   4ccc0:	movw	r2, #65535	; 0xffff
   4ccc4:	sdiv	r1, r2, r1
   4ccc8:	cmp	r0, r1
   4cccc:	blt	4ce50 <__assert_fail@plt+0x3a298>
   4ccd0:	b	4ce68 <__assert_fail@plt+0x3a2b0>
   4ccd4:	b	4ccd8 <__assert_fail@plt+0x3a120>
   4ccd8:	ldr	r0, [pc, #2600]	; 4d708 <__assert_fail@plt+0x3ab50>
   4ccdc:	ldr	r1, [fp, #8]
   4cce0:	cmp	r1, r0
   4cce4:	blt	4ccfc <__assert_fail@plt+0x3a144>
   4cce8:	b	4cd08 <__assert_fail@plt+0x3a150>
   4ccec:	ldr	r0, [fp, #8]
   4ccf0:	movw	r1, #0
   4ccf4:	cmp	r1, r0
   4ccf8:	bge	4cd08 <__assert_fail@plt+0x3a150>
   4ccfc:	movw	r0, #0
   4cd00:	str	r0, [fp, #-52]	; 0xffffffcc
   4cd04:	b	4cd20 <__assert_fail@plt+0x3a168>
   4cd08:	ldr	r0, [fp, #8]
   4cd0c:	movw	r1, #0
   4cd10:	sub	r0, r1, r0
   4cd14:	movw	r1, #65535	; 0xffff
   4cd18:	sdiv	r0, r1, r0
   4cd1c:	str	r0, [fp, #-52]	; 0xffffffcc
   4cd20:	ldr	r0, [fp, #-52]	; 0xffffffcc
   4cd24:	ldr	r1, [fp, #-24]	; 0xffffffe8
   4cd28:	mvn	r2, #0
   4cd2c:	sub	r1, r2, r1
   4cd30:	cmp	r0, r1
   4cd34:	ble	4ce50 <__assert_fail@plt+0x3a298>
   4cd38:	b	4ce68 <__assert_fail@plt+0x3a2b0>
   4cd3c:	b	4cd40 <__assert_fail@plt+0x3a188>
   4cd40:	b	4cd98 <__assert_fail@plt+0x3a1e0>
   4cd44:	b	4cd98 <__assert_fail@plt+0x3a1e0>
   4cd48:	ldr	r0, [fp, #8]
   4cd4c:	cmn	r0, #1
   4cd50:	bne	4cd98 <__assert_fail@plt+0x3a1e0>
   4cd54:	b	4cd58 <__assert_fail@plt+0x3a1a0>
   4cd58:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4cd5c:	add	r0, r0, #0
   4cd60:	movw	r1, #0
   4cd64:	cmp	r1, r0
   4cd68:	blt	4ce50 <__assert_fail@plt+0x3a298>
   4cd6c:	b	4ce68 <__assert_fail@plt+0x3a2b0>
   4cd70:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4cd74:	movw	r1, #0
   4cd78:	cmp	r1, r0
   4cd7c:	bge	4ce68 <__assert_fail@plt+0x3a2b0>
   4cd80:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4cd84:	sub	r0, r0, #1
   4cd88:	mvn	r1, #0
   4cd8c:	cmp	r1, r0
   4cd90:	blt	4ce50 <__assert_fail@plt+0x3a298>
   4cd94:	b	4ce68 <__assert_fail@plt+0x3a2b0>
   4cd98:	ldr	r0, [fp, #8]
   4cd9c:	movw	r1, #0
   4cda0:	sdiv	r0, r1, r0
   4cda4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   4cda8:	cmp	r0, r1
   4cdac:	blt	4ce50 <__assert_fail@plt+0x3a298>
   4cdb0:	b	4ce68 <__assert_fail@plt+0x3a2b0>
   4cdb4:	ldr	r0, [fp, #8]
   4cdb8:	cmp	r0, #0
   4cdbc:	bne	4cdc4 <__assert_fail@plt+0x3a20c>
   4cdc0:	b	4ce68 <__assert_fail@plt+0x3a2b0>
   4cdc4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4cdc8:	cmp	r0, #0
   4cdcc:	bge	4ce38 <__assert_fail@plt+0x3a280>
   4cdd0:	b	4cdd4 <__assert_fail@plt+0x3a21c>
   4cdd4:	b	4ce1c <__assert_fail@plt+0x3a264>
   4cdd8:	b	4ce1c <__assert_fail@plt+0x3a264>
   4cddc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4cde0:	cmn	r0, #1
   4cde4:	bne	4ce1c <__assert_fail@plt+0x3a264>
   4cde8:	b	4cdec <__assert_fail@plt+0x3a234>
   4cdec:	ldr	r0, [fp, #8]
   4cdf0:	add	r0, r0, #0
   4cdf4:	movw	r1, #0
   4cdf8:	cmp	r1, r0
   4cdfc:	blt	4ce50 <__assert_fail@plt+0x3a298>
   4ce00:	b	4ce68 <__assert_fail@plt+0x3a2b0>
   4ce04:	ldr	r0, [fp, #8]
   4ce08:	sub	r0, r0, #1
   4ce0c:	mvn	r1, #0
   4ce10:	cmp	r1, r0
   4ce14:	blt	4ce50 <__assert_fail@plt+0x3a298>
   4ce18:	b	4ce68 <__assert_fail@plt+0x3a2b0>
   4ce1c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4ce20:	movw	r1, #0
   4ce24:	sdiv	r0, r1, r0
   4ce28:	ldr	r1, [fp, #8]
   4ce2c:	cmp	r0, r1
   4ce30:	blt	4ce50 <__assert_fail@plt+0x3a298>
   4ce34:	b	4ce68 <__assert_fail@plt+0x3a2b0>
   4ce38:	ldr	r0, [fp, #8]
   4ce3c:	movw	r1, #65535	; 0xffff
   4ce40:	sdiv	r0, r1, r0
   4ce44:	ldr	r1, [fp, #-24]	; 0xffffffe8
   4ce48:	cmp	r0, r1
   4ce4c:	bge	4ce68 <__assert_fail@plt+0x3a2b0>
   4ce50:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4ce54:	ldr	r1, [fp, #8]
   4ce58:	mul	r0, r0, r1
   4ce5c:	uxth	r0, r0
   4ce60:	str	r0, [fp, #-28]	; 0xffffffe4
   4ce64:	b	4dac0 <__assert_fail@plt+0x3af08>
   4ce68:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4ce6c:	ldr	r1, [fp, #8]
   4ce70:	mul	r0, r0, r1
   4ce74:	uxth	r0, r0
   4ce78:	str	r0, [fp, #-28]	; 0xffffffe4
   4ce7c:	b	4dad0 <__assert_fail@plt+0x3af18>
   4ce80:	b	4ce84 <__assert_fail@plt+0x3a2cc>
   4ce84:	b	4ce88 <__assert_fail@plt+0x3a2d0>
   4ce88:	ldr	r0, [fp, #8]
   4ce8c:	cmp	r0, #0
   4ce90:	bge	4cf94 <__assert_fail@plt+0x3a3dc>
   4ce94:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4ce98:	cmp	r0, #0
   4ce9c:	bge	4cf28 <__assert_fail@plt+0x3a370>
   4cea0:	b	4cea4 <__assert_fail@plt+0x3a2ec>
   4cea4:	ldr	r0, [pc, #1992]	; 4d674 <__assert_fail@plt+0x3aabc>
   4cea8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   4ceac:	ldr	r2, [fp, #8]
   4ceb0:	sdiv	r0, r0, r2
   4ceb4:	cmp	r1, r0
   4ceb8:	blt	4d024 <__assert_fail@plt+0x3a46c>
   4cebc:	b	4d038 <__assert_fail@plt+0x3a480>
   4cec0:	b	4cec4 <__assert_fail@plt+0x3a30c>
   4cec4:	ldr	r0, [pc, #2108]	; 4d708 <__assert_fail@plt+0x3ab50>
   4cec8:	ldr	r1, [fp, #8]
   4cecc:	cmp	r1, r0
   4ced0:	blt	4cee8 <__assert_fail@plt+0x3a330>
   4ced4:	b	4cef4 <__assert_fail@plt+0x3a33c>
   4ced8:	ldr	r0, [fp, #8]
   4cedc:	movw	r1, #0
   4cee0:	cmp	r1, r0
   4cee4:	bge	4cef4 <__assert_fail@plt+0x3a33c>
   4cee8:	movw	r0, #0
   4ceec:	str	r0, [fp, #-56]	; 0xffffffc8
   4cef0:	b	4cf0c <__assert_fail@plt+0x3a354>
   4cef4:	ldr	r0, [pc, #1912]	; 4d674 <__assert_fail@plt+0x3aabc>
   4cef8:	ldr	r1, [fp, #8]
   4cefc:	movw	r2, #0
   4cf00:	sub	r1, r2, r1
   4cf04:	sdiv	r0, r0, r1
   4cf08:	str	r0, [fp, #-56]	; 0xffffffc8
   4cf0c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   4cf10:	ldr	r1, [fp, #-24]	; 0xffffffe8
   4cf14:	mvn	r2, #0
   4cf18:	sub	r1, r2, r1
   4cf1c:	cmp	r0, r1
   4cf20:	ble	4d024 <__assert_fail@plt+0x3a46c>
   4cf24:	b	4d038 <__assert_fail@plt+0x3a480>
   4cf28:	ldr	r0, [fp, #8]
   4cf2c:	cmn	r0, #1
   4cf30:	bne	4cf78 <__assert_fail@plt+0x3a3c0>
   4cf34:	b	4cf38 <__assert_fail@plt+0x3a380>
   4cf38:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4cf3c:	add	r0, r0, #-2147483648	; 0x80000000
   4cf40:	movw	r1, #0
   4cf44:	cmp	r1, r0
   4cf48:	blt	4d024 <__assert_fail@plt+0x3a46c>
   4cf4c:	b	4d038 <__assert_fail@plt+0x3a480>
   4cf50:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4cf54:	movw	r1, #0
   4cf58:	cmp	r1, r0
   4cf5c:	bge	4d038 <__assert_fail@plt+0x3a480>
   4cf60:	ldr	r0, [pc, #1804]	; 4d674 <__assert_fail@plt+0x3aabc>
   4cf64:	ldr	r1, [fp, #-24]	; 0xffffffe8
   4cf68:	sub	r1, r1, #1
   4cf6c:	cmp	r0, r1
   4cf70:	blt	4d024 <__assert_fail@plt+0x3a46c>
   4cf74:	b	4d038 <__assert_fail@plt+0x3a480>
   4cf78:	ldr	r0, [pc, #4072]	; 4df68 <__assert_fail@plt+0x3b3b0>
   4cf7c:	ldr	r1, [fp, #8]
   4cf80:	sdiv	r0, r0, r1
   4cf84:	ldr	r1, [fp, #-24]	; 0xffffffe8
   4cf88:	cmp	r0, r1
   4cf8c:	blt	4d024 <__assert_fail@plt+0x3a46c>
   4cf90:	b	4d038 <__assert_fail@plt+0x3a480>
   4cf94:	ldr	r0, [fp, #8]
   4cf98:	cmp	r0, #0
   4cf9c:	bne	4cfa4 <__assert_fail@plt+0x3a3ec>
   4cfa0:	b	4d038 <__assert_fail@plt+0x3a480>
   4cfa4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4cfa8:	cmp	r0, #0
   4cfac:	bge	4d00c <__assert_fail@plt+0x3a454>
   4cfb0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4cfb4:	cmn	r0, #1
   4cfb8:	bne	4cff0 <__assert_fail@plt+0x3a438>
   4cfbc:	b	4cfc0 <__assert_fail@plt+0x3a408>
   4cfc0:	ldr	r0, [fp, #8]
   4cfc4:	add	r0, r0, #-2147483648	; 0x80000000
   4cfc8:	movw	r1, #0
   4cfcc:	cmp	r1, r0
   4cfd0:	blt	4d024 <__assert_fail@plt+0x3a46c>
   4cfd4:	b	4d038 <__assert_fail@plt+0x3a480>
   4cfd8:	ldr	r0, [pc, #1684]	; 4d674 <__assert_fail@plt+0x3aabc>
   4cfdc:	ldr	r1, [fp, #8]
   4cfe0:	sub	r1, r1, #1
   4cfe4:	cmp	r0, r1
   4cfe8:	blt	4d024 <__assert_fail@plt+0x3a46c>
   4cfec:	b	4d038 <__assert_fail@plt+0x3a480>
   4cff0:	ldr	r0, [pc, #3952]	; 4df68 <__assert_fail@plt+0x3b3b0>
   4cff4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   4cff8:	sdiv	r0, r0, r1
   4cffc:	ldr	r1, [fp, #8]
   4d000:	cmp	r0, r1
   4d004:	blt	4d024 <__assert_fail@plt+0x3a46c>
   4d008:	b	4d038 <__assert_fail@plt+0x3a480>
   4d00c:	ldr	r0, [pc, #1632]	; 4d674 <__assert_fail@plt+0x3aabc>
   4d010:	ldr	r1, [fp, #8]
   4d014:	sdiv	r0, r0, r1
   4d018:	ldr	r1, [fp, #-24]	; 0xffffffe8
   4d01c:	cmp	r0, r1
   4d020:	bge	4d038 <__assert_fail@plt+0x3a480>
   4d024:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4d028:	ldr	r1, [fp, #8]
   4d02c:	mul	r0, r0, r1
   4d030:	str	r0, [fp, #-28]	; 0xffffffe4
   4d034:	b	4dac0 <__assert_fail@plt+0x3af08>
   4d038:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4d03c:	ldr	r1, [fp, #8]
   4d040:	mul	r0, r0, r1
   4d044:	str	r0, [fp, #-28]	; 0xffffffe4
   4d048:	b	4dad0 <__assert_fail@plt+0x3af18>
   4d04c:	ldr	r0, [fp, #8]
   4d050:	cmp	r0, #0
   4d054:	bge	4d164 <__assert_fail@plt+0x3a5ac>
   4d058:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4d05c:	cmp	r0, #0
   4d060:	bge	4d0ec <__assert_fail@plt+0x3a534>
   4d064:	b	4d084 <__assert_fail@plt+0x3a4cc>
   4d068:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4d06c:	ldr	r1, [fp, #8]
   4d070:	mvn	r2, #0
   4d074:	udiv	r1, r2, r1
   4d078:	cmp	r0, r1
   4d07c:	bcc	4d200 <__assert_fail@plt+0x3a648>
   4d080:	b	4d214 <__assert_fail@plt+0x3a65c>
   4d084:	b	4d088 <__assert_fail@plt+0x3a4d0>
   4d088:	ldr	r0, [pc, #1656]	; 4d708 <__assert_fail@plt+0x3ab50>
   4d08c:	ldr	r1, [fp, #8]
   4d090:	cmp	r1, r0
   4d094:	blt	4d0ac <__assert_fail@plt+0x3a4f4>
   4d098:	b	4d0b8 <__assert_fail@plt+0x3a500>
   4d09c:	ldr	r0, [fp, #8]
   4d0a0:	movw	r1, #0
   4d0a4:	cmp	r1, r0
   4d0a8:	bge	4d0b8 <__assert_fail@plt+0x3a500>
   4d0ac:	movw	r0, #1
   4d0b0:	str	r0, [fp, #-60]	; 0xffffffc4
   4d0b4:	b	4d0d0 <__assert_fail@plt+0x3a518>
   4d0b8:	ldr	r0, [fp, #8]
   4d0bc:	movw	r1, #0
   4d0c0:	sub	r0, r1, r0
   4d0c4:	mvn	r1, #0
   4d0c8:	udiv	r0, r1, r0
   4d0cc:	str	r0, [fp, #-60]	; 0xffffffc4
   4d0d0:	ldr	r0, [fp, #-60]	; 0xffffffc4
   4d0d4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   4d0d8:	mvn	r2, #0
   4d0dc:	sub	r1, r2, r1
   4d0e0:	cmp	r0, r1
   4d0e4:	bls	4d200 <__assert_fail@plt+0x3a648>
   4d0e8:	b	4d214 <__assert_fail@plt+0x3a65c>
   4d0ec:	b	4d0f0 <__assert_fail@plt+0x3a538>
   4d0f0:	b	4d148 <__assert_fail@plt+0x3a590>
   4d0f4:	b	4d148 <__assert_fail@plt+0x3a590>
   4d0f8:	ldr	r0, [fp, #8]
   4d0fc:	cmn	r0, #1
   4d100:	bne	4d148 <__assert_fail@plt+0x3a590>
   4d104:	b	4d108 <__assert_fail@plt+0x3a550>
   4d108:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4d10c:	add	r0, r0, #0
   4d110:	movw	r1, #0
   4d114:	cmp	r1, r0
   4d118:	blt	4d200 <__assert_fail@plt+0x3a648>
   4d11c:	b	4d214 <__assert_fail@plt+0x3a65c>
   4d120:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4d124:	movw	r1, #0
   4d128:	cmp	r1, r0
   4d12c:	bge	4d214 <__assert_fail@plt+0x3a65c>
   4d130:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4d134:	sub	r0, r0, #1
   4d138:	mvn	r1, #0
   4d13c:	cmp	r1, r0
   4d140:	blt	4d200 <__assert_fail@plt+0x3a648>
   4d144:	b	4d214 <__assert_fail@plt+0x3a65c>
   4d148:	ldr	r0, [fp, #8]
   4d14c:	movw	r1, #0
   4d150:	sdiv	r0, r1, r0
   4d154:	ldr	r1, [fp, #-24]	; 0xffffffe8
   4d158:	cmp	r0, r1
   4d15c:	blt	4d200 <__assert_fail@plt+0x3a648>
   4d160:	b	4d214 <__assert_fail@plt+0x3a65c>
   4d164:	ldr	r0, [fp, #8]
   4d168:	cmp	r0, #0
   4d16c:	bne	4d174 <__assert_fail@plt+0x3a5bc>
   4d170:	b	4d214 <__assert_fail@plt+0x3a65c>
   4d174:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4d178:	cmp	r0, #0
   4d17c:	bge	4d1e8 <__assert_fail@plt+0x3a630>
   4d180:	b	4d184 <__assert_fail@plt+0x3a5cc>
   4d184:	b	4d1cc <__assert_fail@plt+0x3a614>
   4d188:	b	4d1cc <__assert_fail@plt+0x3a614>
   4d18c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4d190:	cmn	r0, #1
   4d194:	bne	4d1cc <__assert_fail@plt+0x3a614>
   4d198:	b	4d19c <__assert_fail@plt+0x3a5e4>
   4d19c:	ldr	r0, [fp, #8]
   4d1a0:	add	r0, r0, #0
   4d1a4:	movw	r1, #0
   4d1a8:	cmp	r1, r0
   4d1ac:	blt	4d200 <__assert_fail@plt+0x3a648>
   4d1b0:	b	4d214 <__assert_fail@plt+0x3a65c>
   4d1b4:	ldr	r0, [fp, #8]
   4d1b8:	sub	r0, r0, #1
   4d1bc:	mvn	r1, #0
   4d1c0:	cmp	r1, r0
   4d1c4:	blt	4d200 <__assert_fail@plt+0x3a648>
   4d1c8:	b	4d214 <__assert_fail@plt+0x3a65c>
   4d1cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4d1d0:	movw	r1, #0
   4d1d4:	sdiv	r0, r1, r0
   4d1d8:	ldr	r1, [fp, #8]
   4d1dc:	cmp	r0, r1
   4d1e0:	blt	4d200 <__assert_fail@plt+0x3a648>
   4d1e4:	b	4d214 <__assert_fail@plt+0x3a65c>
   4d1e8:	ldr	r0, [fp, #8]
   4d1ec:	mvn	r1, #0
   4d1f0:	udiv	r0, r1, r0
   4d1f4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   4d1f8:	cmp	r0, r1
   4d1fc:	bcs	4d214 <__assert_fail@plt+0x3a65c>
   4d200:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4d204:	ldr	r1, [fp, #8]
   4d208:	mul	r0, r0, r1
   4d20c:	str	r0, [fp, #-28]	; 0xffffffe4
   4d210:	b	4dac0 <__assert_fail@plt+0x3af08>
   4d214:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4d218:	ldr	r1, [fp, #8]
   4d21c:	mul	r0, r0, r1
   4d220:	str	r0, [fp, #-28]	; 0xffffffe4
   4d224:	b	4dad0 <__assert_fail@plt+0x3af18>
   4d228:	b	4d22c <__assert_fail@plt+0x3a674>
   4d22c:	b	4d230 <__assert_fail@plt+0x3a678>
   4d230:	ldr	r0, [fp, #8]
   4d234:	cmp	r0, #0
   4d238:	bge	4d33c <__assert_fail@plt+0x3a784>
   4d23c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4d240:	cmp	r0, #0
   4d244:	bge	4d2d0 <__assert_fail@plt+0x3a718>
   4d248:	b	4d24c <__assert_fail@plt+0x3a694>
   4d24c:	ldr	r0, [pc, #1056]	; 4d674 <__assert_fail@plt+0x3aabc>
   4d250:	ldr	r1, [fp, #-24]	; 0xffffffe8
   4d254:	ldr	r2, [fp, #8]
   4d258:	sdiv	r0, r0, r2
   4d25c:	cmp	r1, r0
   4d260:	blt	4d3cc <__assert_fail@plt+0x3a814>
   4d264:	b	4d3e0 <__assert_fail@plt+0x3a828>
   4d268:	b	4d26c <__assert_fail@plt+0x3a6b4>
   4d26c:	ldr	r0, [pc, #1172]	; 4d708 <__assert_fail@plt+0x3ab50>
   4d270:	ldr	r1, [fp, #8]
   4d274:	cmp	r1, r0
   4d278:	blt	4d290 <__assert_fail@plt+0x3a6d8>
   4d27c:	b	4d29c <__assert_fail@plt+0x3a6e4>
   4d280:	ldr	r0, [fp, #8]
   4d284:	movw	r1, #0
   4d288:	cmp	r1, r0
   4d28c:	bge	4d29c <__assert_fail@plt+0x3a6e4>
   4d290:	movw	r0, #0
   4d294:	str	r0, [fp, #-64]	; 0xffffffc0
   4d298:	b	4d2b4 <__assert_fail@plt+0x3a6fc>
   4d29c:	ldr	r0, [pc, #976]	; 4d674 <__assert_fail@plt+0x3aabc>
   4d2a0:	ldr	r1, [fp, #8]
   4d2a4:	movw	r2, #0
   4d2a8:	sub	r1, r2, r1
   4d2ac:	sdiv	r0, r0, r1
   4d2b0:	str	r0, [fp, #-64]	; 0xffffffc0
   4d2b4:	ldr	r0, [fp, #-64]	; 0xffffffc0
   4d2b8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   4d2bc:	mvn	r2, #0
   4d2c0:	sub	r1, r2, r1
   4d2c4:	cmp	r0, r1
   4d2c8:	ble	4d3cc <__assert_fail@plt+0x3a814>
   4d2cc:	b	4d3e0 <__assert_fail@plt+0x3a828>
   4d2d0:	ldr	r0, [fp, #8]
   4d2d4:	cmn	r0, #1
   4d2d8:	bne	4d320 <__assert_fail@plt+0x3a768>
   4d2dc:	b	4d2e0 <__assert_fail@plt+0x3a728>
   4d2e0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4d2e4:	add	r0, r0, #-2147483648	; 0x80000000
   4d2e8:	movw	r1, #0
   4d2ec:	cmp	r1, r0
   4d2f0:	blt	4d3cc <__assert_fail@plt+0x3a814>
   4d2f4:	b	4d3e0 <__assert_fail@plt+0x3a828>
   4d2f8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4d2fc:	movw	r1, #0
   4d300:	cmp	r1, r0
   4d304:	bge	4d3e0 <__assert_fail@plt+0x3a828>
   4d308:	ldr	r0, [pc, #868]	; 4d674 <__assert_fail@plt+0x3aabc>
   4d30c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   4d310:	sub	r1, r1, #1
   4d314:	cmp	r0, r1
   4d318:	blt	4d3cc <__assert_fail@plt+0x3a814>
   4d31c:	b	4d3e0 <__assert_fail@plt+0x3a828>
   4d320:	ldr	r0, [pc, #3136]	; 4df68 <__assert_fail@plt+0x3b3b0>
   4d324:	ldr	r1, [fp, #8]
   4d328:	sdiv	r0, r0, r1
   4d32c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   4d330:	cmp	r0, r1
   4d334:	blt	4d3cc <__assert_fail@plt+0x3a814>
   4d338:	b	4d3e0 <__assert_fail@plt+0x3a828>
   4d33c:	ldr	r0, [fp, #8]
   4d340:	cmp	r0, #0
   4d344:	bne	4d34c <__assert_fail@plt+0x3a794>
   4d348:	b	4d3e0 <__assert_fail@plt+0x3a828>
   4d34c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4d350:	cmp	r0, #0
   4d354:	bge	4d3b4 <__assert_fail@plt+0x3a7fc>
   4d358:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4d35c:	cmn	r0, #1
   4d360:	bne	4d398 <__assert_fail@plt+0x3a7e0>
   4d364:	b	4d368 <__assert_fail@plt+0x3a7b0>
   4d368:	ldr	r0, [fp, #8]
   4d36c:	add	r0, r0, #-2147483648	; 0x80000000
   4d370:	movw	r1, #0
   4d374:	cmp	r1, r0
   4d378:	blt	4d3cc <__assert_fail@plt+0x3a814>
   4d37c:	b	4d3e0 <__assert_fail@plt+0x3a828>
   4d380:	ldr	r0, [pc, #748]	; 4d674 <__assert_fail@plt+0x3aabc>
   4d384:	ldr	r1, [fp, #8]
   4d388:	sub	r1, r1, #1
   4d38c:	cmp	r0, r1
   4d390:	blt	4d3cc <__assert_fail@plt+0x3a814>
   4d394:	b	4d3e0 <__assert_fail@plt+0x3a828>
   4d398:	ldr	r0, [pc, #3016]	; 4df68 <__assert_fail@plt+0x3b3b0>
   4d39c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   4d3a0:	sdiv	r0, r0, r1
   4d3a4:	ldr	r1, [fp, #8]
   4d3a8:	cmp	r0, r1
   4d3ac:	blt	4d3cc <__assert_fail@plt+0x3a814>
   4d3b0:	b	4d3e0 <__assert_fail@plt+0x3a828>
   4d3b4:	ldr	r0, [pc, #696]	; 4d674 <__assert_fail@plt+0x3aabc>
   4d3b8:	ldr	r1, [fp, #8]
   4d3bc:	sdiv	r0, r0, r1
   4d3c0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   4d3c4:	cmp	r0, r1
   4d3c8:	bge	4d3e0 <__assert_fail@plt+0x3a828>
   4d3cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4d3d0:	ldr	r1, [fp, #8]
   4d3d4:	mul	r0, r0, r1
   4d3d8:	str	r0, [fp, #-28]	; 0xffffffe4
   4d3dc:	b	4dac0 <__assert_fail@plt+0x3af08>
   4d3e0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4d3e4:	ldr	r1, [fp, #8]
   4d3e8:	mul	r0, r0, r1
   4d3ec:	str	r0, [fp, #-28]	; 0xffffffe4
   4d3f0:	b	4dad0 <__assert_fail@plt+0x3af18>
   4d3f4:	ldr	r0, [fp, #8]
   4d3f8:	cmp	r0, #0
   4d3fc:	bge	4d50c <__assert_fail@plt+0x3a954>
   4d400:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4d404:	cmp	r0, #0
   4d408:	bge	4d494 <__assert_fail@plt+0x3a8dc>
   4d40c:	b	4d42c <__assert_fail@plt+0x3a874>
   4d410:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4d414:	ldr	r1, [fp, #8]
   4d418:	mvn	r2, #0
   4d41c:	udiv	r1, r2, r1
   4d420:	cmp	r0, r1
   4d424:	bcc	4d5a8 <__assert_fail@plt+0x3a9f0>
   4d428:	b	4d5bc <__assert_fail@plt+0x3aa04>
   4d42c:	b	4d430 <__assert_fail@plt+0x3a878>
   4d430:	ldr	r0, [pc, #720]	; 4d708 <__assert_fail@plt+0x3ab50>
   4d434:	ldr	r1, [fp, #8]
   4d438:	cmp	r1, r0
   4d43c:	blt	4d454 <__assert_fail@plt+0x3a89c>
   4d440:	b	4d460 <__assert_fail@plt+0x3a8a8>
   4d444:	ldr	r0, [fp, #8]
   4d448:	movw	r1, #0
   4d44c:	cmp	r1, r0
   4d450:	bge	4d460 <__assert_fail@plt+0x3a8a8>
   4d454:	movw	r0, #1
   4d458:	str	r0, [fp, #-68]	; 0xffffffbc
   4d45c:	b	4d478 <__assert_fail@plt+0x3a8c0>
   4d460:	ldr	r0, [fp, #8]
   4d464:	movw	r1, #0
   4d468:	sub	r0, r1, r0
   4d46c:	mvn	r1, #0
   4d470:	udiv	r0, r1, r0
   4d474:	str	r0, [fp, #-68]	; 0xffffffbc
   4d478:	ldr	r0, [fp, #-68]	; 0xffffffbc
   4d47c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   4d480:	mvn	r2, #0
   4d484:	sub	r1, r2, r1
   4d488:	cmp	r0, r1
   4d48c:	bls	4d5a8 <__assert_fail@plt+0x3a9f0>
   4d490:	b	4d5bc <__assert_fail@plt+0x3aa04>
   4d494:	b	4d498 <__assert_fail@plt+0x3a8e0>
   4d498:	b	4d4f0 <__assert_fail@plt+0x3a938>
   4d49c:	b	4d4f0 <__assert_fail@plt+0x3a938>
   4d4a0:	ldr	r0, [fp, #8]
   4d4a4:	cmn	r0, #1
   4d4a8:	bne	4d4f0 <__assert_fail@plt+0x3a938>
   4d4ac:	b	4d4b0 <__assert_fail@plt+0x3a8f8>
   4d4b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4d4b4:	add	r0, r0, #0
   4d4b8:	movw	r1, #0
   4d4bc:	cmp	r1, r0
   4d4c0:	blt	4d5a8 <__assert_fail@plt+0x3a9f0>
   4d4c4:	b	4d5bc <__assert_fail@plt+0x3aa04>
   4d4c8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4d4cc:	movw	r1, #0
   4d4d0:	cmp	r1, r0
   4d4d4:	bge	4d5bc <__assert_fail@plt+0x3aa04>
   4d4d8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4d4dc:	sub	r0, r0, #1
   4d4e0:	mvn	r1, #0
   4d4e4:	cmp	r1, r0
   4d4e8:	blt	4d5a8 <__assert_fail@plt+0x3a9f0>
   4d4ec:	b	4d5bc <__assert_fail@plt+0x3aa04>
   4d4f0:	ldr	r0, [fp, #8]
   4d4f4:	movw	r1, #0
   4d4f8:	sdiv	r0, r1, r0
   4d4fc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   4d500:	cmp	r0, r1
   4d504:	blt	4d5a8 <__assert_fail@plt+0x3a9f0>
   4d508:	b	4d5bc <__assert_fail@plt+0x3aa04>
   4d50c:	ldr	r0, [fp, #8]
   4d510:	cmp	r0, #0
   4d514:	bne	4d51c <__assert_fail@plt+0x3a964>
   4d518:	b	4d5bc <__assert_fail@plt+0x3aa04>
   4d51c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4d520:	cmp	r0, #0
   4d524:	bge	4d590 <__assert_fail@plt+0x3a9d8>
   4d528:	b	4d52c <__assert_fail@plt+0x3a974>
   4d52c:	b	4d574 <__assert_fail@plt+0x3a9bc>
   4d530:	b	4d574 <__assert_fail@plt+0x3a9bc>
   4d534:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4d538:	cmn	r0, #1
   4d53c:	bne	4d574 <__assert_fail@plt+0x3a9bc>
   4d540:	b	4d544 <__assert_fail@plt+0x3a98c>
   4d544:	ldr	r0, [fp, #8]
   4d548:	add	r0, r0, #0
   4d54c:	movw	r1, #0
   4d550:	cmp	r1, r0
   4d554:	blt	4d5a8 <__assert_fail@plt+0x3a9f0>
   4d558:	b	4d5bc <__assert_fail@plt+0x3aa04>
   4d55c:	ldr	r0, [fp, #8]
   4d560:	sub	r0, r0, #1
   4d564:	mvn	r1, #0
   4d568:	cmp	r1, r0
   4d56c:	blt	4d5a8 <__assert_fail@plt+0x3a9f0>
   4d570:	b	4d5bc <__assert_fail@plt+0x3aa04>
   4d574:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4d578:	movw	r1, #0
   4d57c:	sdiv	r0, r1, r0
   4d580:	ldr	r1, [fp, #8]
   4d584:	cmp	r0, r1
   4d588:	blt	4d5a8 <__assert_fail@plt+0x3a9f0>
   4d58c:	b	4d5bc <__assert_fail@plt+0x3aa04>
   4d590:	ldr	r0, [fp, #8]
   4d594:	mvn	r1, #0
   4d598:	udiv	r0, r1, r0
   4d59c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   4d5a0:	cmp	r0, r1
   4d5a4:	bcs	4d5bc <__assert_fail@plt+0x3aa04>
   4d5a8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4d5ac:	ldr	r1, [fp, #8]
   4d5b0:	mul	r0, r0, r1
   4d5b4:	str	r0, [fp, #-28]	; 0xffffffe4
   4d5b8:	b	4dac0 <__assert_fail@plt+0x3af08>
   4d5bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4d5c0:	ldr	r1, [fp, #8]
   4d5c4:	mul	r0, r0, r1
   4d5c8:	str	r0, [fp, #-28]	; 0xffffffe4
   4d5cc:	b	4dad0 <__assert_fail@plt+0x3af18>
   4d5d0:	b	4d5d4 <__assert_fail@plt+0x3aa1c>
   4d5d4:	ldr	r0, [fp, #8]
   4d5d8:	cmp	r0, #0
   4d5dc:	bge	4d76c <__assert_fail@plt+0x3abb4>
   4d5e0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4d5e4:	cmp	r0, #0
   4d5e8:	bge	4d6d4 <__assert_fail@plt+0x3ab1c>
   4d5ec:	b	4d5f0 <__assert_fail@plt+0x3aa38>
   4d5f0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4d5f4:	ldr	r1, [fp, #8]
   4d5f8:	asr	r3, r1, #31
   4d5fc:	mvn	r2, #0
   4d600:	mvn	ip, #-2147483648	; 0x80000000
   4d604:	str	r0, [fp, #-72]	; 0xffffffb8
   4d608:	mov	r0, r2
   4d60c:	str	r1, [fp, #-76]	; 0xffffffb4
   4d610:	mov	r1, ip
   4d614:	ldr	r2, [fp, #-76]	; 0xffffffb4
   4d618:	bl	77780 <__assert_fail@plt+0x64bc8>
   4d61c:	ldr	r2, [fp, #-72]	; 0xffffffb8
   4d620:	subs	r0, r2, r0
   4d624:	rscs	r1, r1, r2, asr #31
   4d628:	str	r0, [fp, #-80]	; 0xffffffb0
   4d62c:	str	r1, [fp, #-84]	; 0xffffffac
   4d630:	blt	4d84c <__assert_fail@plt+0x3ac94>
   4d634:	b	4d860 <__assert_fail@plt+0x3aca8>
   4d638:	b	4d63c <__assert_fail@plt+0x3aa84>
   4d63c:	ldr	r0, [pc, #196]	; 4d708 <__assert_fail@plt+0x3ab50>
   4d640:	ldr	r1, [fp, #8]
   4d644:	cmp	r1, r0
   4d648:	blt	4d660 <__assert_fail@plt+0x3aaa8>
   4d64c:	b	4d678 <__assert_fail@plt+0x3aac0>
   4d650:	ldr	r0, [fp, #8]
   4d654:	movw	r1, #0
   4d658:	cmp	r1, r0
   4d65c:	bge	4d678 <__assert_fail@plt+0x3aac0>
   4d660:	mov	r0, #0
   4d664:	mvn	r1, #0
   4d668:	str	r1, [fp, #-88]	; 0xffffffa8
   4d66c:	str	r0, [fp, #-92]	; 0xffffffa4
   4d670:	b	4d6ac <__assert_fail@plt+0x3aaf4>
   4d674:	svcvc	0x00ffffff
   4d678:	ldr	r0, [fp, #8]
   4d67c:	rsb	r0, r0, #0
   4d680:	asr	r3, r0, #31
   4d684:	mvn	r1, #0
   4d688:	mvn	r2, #-2147483648	; 0x80000000
   4d68c:	str	r0, [fp, #-96]	; 0xffffffa0
   4d690:	mov	r0, r1
   4d694:	mov	r1, r2
   4d698:	ldr	r2, [fp, #-96]	; 0xffffffa0
   4d69c:	bl	77780 <__assert_fail@plt+0x64bc8>
   4d6a0:	str	r0, [fp, #-88]	; 0xffffffa8
   4d6a4:	str	r1, [fp, #-92]	; 0xffffffa4
   4d6a8:	b	4d6ac <__assert_fail@plt+0x3aaf4>
   4d6ac:	ldr	r0, [fp, #-92]	; 0xffffffa4
   4d6b0:	ldr	r1, [fp, #-88]	; 0xffffffa8
   4d6b4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   4d6b8:	mvn	r2, r2
   4d6bc:	subs	r1, r2, r1
   4d6c0:	rscs	r0, r0, r2, asr #31
   4d6c4:	str	r1, [fp, #-100]	; 0xffffff9c
   4d6c8:	str	r0, [fp, #-104]	; 0xffffff98
   4d6cc:	bge	4d84c <__assert_fail@plt+0x3ac94>
   4d6d0:	b	4d860 <__assert_fail@plt+0x3aca8>
   4d6d4:	ldr	r0, [fp, #8]
   4d6d8:	cmn	r0, #1
   4d6dc:	bne	4d72c <__assert_fail@plt+0x3ab74>
   4d6e0:	b	4d6e4 <__assert_fail@plt+0x3ab2c>
   4d6e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4d6e8:	mov	r1, #-2147483648	; 0x80000000
   4d6ec:	add	r1, r1, r0, asr #31
   4d6f0:	rsbs	r0, r0, #0
   4d6f4:	rscs	r1, r1, #0
   4d6f8:	str	r0, [fp, #-108]	; 0xffffff94
   4d6fc:	str	r1, [fp, #-112]	; 0xffffff90
   4d700:	blt	4d84c <__assert_fail@plt+0x3ac94>
   4d704:	b	4d860 <__assert_fail@plt+0x3aca8>
   4d708:	andhi	r0, r0, r1
   4d70c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4d710:	movw	r1, #0
   4d714:	cmp	r1, r0
   4d718:	bge	4d860 <__assert_fail@plt+0x3aca8>
   4d71c:	mov	r0, #0
   4d720:	cmp	r0, #0
   4d724:	bne	4d84c <__assert_fail@plt+0x3ac94>
   4d728:	b	4d860 <__assert_fail@plt+0x3aca8>
   4d72c:	ldr	r0, [fp, #8]
   4d730:	asr	r3, r0, #31
   4d734:	mov	r1, #0
   4d738:	mov	r2, #-2147483648	; 0x80000000
   4d73c:	str	r0, [fp, #-116]	; 0xffffff8c
   4d740:	mov	r0, r1
   4d744:	mov	r1, r2
   4d748:	ldr	r2, [fp, #-116]	; 0xffffff8c
   4d74c:	bl	77780 <__assert_fail@plt+0x64bc8>
   4d750:	ldr	r2, [fp, #-24]	; 0xffffffe8
   4d754:	subs	r0, r0, r2
   4d758:	sbcs	r1, r1, r2, asr #31
   4d75c:	str	r0, [fp, #-120]	; 0xffffff88
   4d760:	str	r1, [fp, #-124]	; 0xffffff84
   4d764:	blt	4d84c <__assert_fail@plt+0x3ac94>
   4d768:	b	4d860 <__assert_fail@plt+0x3aca8>
   4d76c:	ldr	r0, [fp, #8]
   4d770:	cmp	r0, #0
   4d774:	bne	4d77c <__assert_fail@plt+0x3abc4>
   4d778:	b	4d860 <__assert_fail@plt+0x3aca8>
   4d77c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4d780:	cmp	r0, #0
   4d784:	bge	4d80c <__assert_fail@plt+0x3ac54>
   4d788:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4d78c:	cmn	r0, #1
   4d790:	bne	4d7cc <__assert_fail@plt+0x3ac14>
   4d794:	b	4d798 <__assert_fail@plt+0x3abe0>
   4d798:	ldr	r0, [fp, #8]
   4d79c:	mov	r1, #-2147483648	; 0x80000000
   4d7a0:	add	r1, r1, r0, asr #31
   4d7a4:	rsbs	r0, r0, #0
   4d7a8:	rscs	r1, r1, #0
   4d7ac:	str	r0, [fp, #-128]	; 0xffffff80
   4d7b0:	str	r1, [fp, #-132]	; 0xffffff7c
   4d7b4:	blt	4d84c <__assert_fail@plt+0x3ac94>
   4d7b8:	b	4d860 <__assert_fail@plt+0x3aca8>
   4d7bc:	mov	r0, #0
   4d7c0:	cmp	r0, #0
   4d7c4:	bne	4d84c <__assert_fail@plt+0x3ac94>
   4d7c8:	b	4d860 <__assert_fail@plt+0x3aca8>
   4d7cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4d7d0:	asr	r3, r0, #31
   4d7d4:	mov	r1, #0
   4d7d8:	mov	r2, #-2147483648	; 0x80000000
   4d7dc:	str	r0, [fp, #-136]	; 0xffffff78
   4d7e0:	mov	r0, r1
   4d7e4:	mov	r1, r2
   4d7e8:	ldr	r2, [fp, #-136]	; 0xffffff78
   4d7ec:	bl	77780 <__assert_fail@plt+0x64bc8>
   4d7f0:	ldr	r2, [fp, #8]
   4d7f4:	subs	r0, r0, r2
   4d7f8:	sbcs	r1, r1, r2, asr #31
   4d7fc:	str	r0, [fp, #-140]	; 0xffffff74
   4d800:	str	r1, [fp, #-144]	; 0xffffff70
   4d804:	blt	4d84c <__assert_fail@plt+0x3ac94>
   4d808:	b	4d860 <__assert_fail@plt+0x3aca8>
   4d80c:	ldr	r0, [fp, #8]
   4d810:	asr	r3, r0, #31
   4d814:	mvn	r1, #0
   4d818:	mvn	r2, #-2147483648	; 0x80000000
   4d81c:	str	r0, [fp, #-148]	; 0xffffff6c
   4d820:	mov	r0, r1
   4d824:	mov	r1, r2
   4d828:	ldr	r2, [fp, #-148]	; 0xffffff6c
   4d82c:	bl	77780 <__assert_fail@plt+0x64bc8>
   4d830:	ldr	r2, [fp, #-24]	; 0xffffffe8
   4d834:	subs	r0, r0, r2
   4d838:	sbcs	r1, r1, r2, asr #31
   4d83c:	str	r0, [fp, #-152]	; 0xffffff68
   4d840:	str	r1, [fp, #-156]	; 0xffffff64
   4d844:	bge	4d860 <__assert_fail@plt+0x3aca8>
   4d848:	b	4d84c <__assert_fail@plt+0x3ac94>
   4d84c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4d850:	ldr	r1, [fp, #8]
   4d854:	mul	r0, r0, r1
   4d858:	str	r0, [fp, #-28]	; 0xffffffe4
   4d85c:	b	4dac0 <__assert_fail@plt+0x3af08>
   4d860:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4d864:	ldr	r1, [fp, #8]
   4d868:	mul	r0, r0, r1
   4d86c:	str	r0, [fp, #-28]	; 0xffffffe4
   4d870:	b	4dad0 <__assert_fail@plt+0x3af18>
   4d874:	ldr	r0, [fp, #8]
   4d878:	cmp	r0, #0
   4d87c:	bge	4d9dc <__assert_fail@plt+0x3ae24>
   4d880:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4d884:	cmp	r0, #0
   4d888:	bge	4d964 <__assert_fail@plt+0x3adac>
   4d88c:	b	4d8d4 <__assert_fail@plt+0x3ad1c>
   4d890:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4d894:	ldr	r1, [fp, #8]
   4d898:	asr	r3, r1, #31
   4d89c:	mvn	r2, #0
   4d8a0:	str	r0, [fp, #-160]	; 0xffffff60
   4d8a4:	mov	r0, r2
   4d8a8:	str	r1, [fp, #-164]	; 0xffffff5c
   4d8ac:	mov	r1, r2
   4d8b0:	ldr	r2, [fp, #-164]	; 0xffffff5c
   4d8b4:	bl	77854 <__assert_fail@plt+0x64c9c>
   4d8b8:	ldr	r2, [fp, #-160]	; 0xffffff60
   4d8bc:	subs	r0, r2, r0
   4d8c0:	rscs	r1, r1, r2, asr #31
   4d8c4:	str	r0, [fp, #-168]	; 0xffffff58
   4d8c8:	str	r1, [fp, #-172]	; 0xffffff54
   4d8cc:	bcc	4da98 <__assert_fail@plt+0x3aee0>
   4d8d0:	b	4daac <__assert_fail@plt+0x3aef4>
   4d8d4:	b	4d8d8 <__assert_fail@plt+0x3ad20>
   4d8d8:	ldr	r0, [pc, #-472]	; 4d708 <__assert_fail@plt+0x3ab50>
   4d8dc:	ldr	r1, [fp, #8]
   4d8e0:	cmp	r1, r0
   4d8e4:	blt	4d8fc <__assert_fail@plt+0x3ad44>
   4d8e8:	b	4d910 <__assert_fail@plt+0x3ad58>
   4d8ec:	ldr	r0, [fp, #8]
   4d8f0:	movw	r1, #0
   4d8f4:	cmp	r1, r0
   4d8f8:	bge	4d910 <__assert_fail@plt+0x3ad58>
   4d8fc:	mov	r0, #1
   4d900:	mvn	r1, #0
   4d904:	str	r1, [fp, #-176]	; 0xffffff50
   4d908:	str	r0, [fp, #-180]	; 0xffffff4c
   4d90c:	b	4d93c <__assert_fail@plt+0x3ad84>
   4d910:	ldr	r0, [fp, #8]
   4d914:	rsb	r0, r0, #0
   4d918:	asr	r3, r0, #31
   4d91c:	mvn	r1, #0
   4d920:	str	r0, [fp, #-184]	; 0xffffff48
   4d924:	mov	r0, r1
   4d928:	ldr	r2, [fp, #-184]	; 0xffffff48
   4d92c:	bl	77854 <__assert_fail@plt+0x64c9c>
   4d930:	str	r0, [fp, #-176]	; 0xffffff50
   4d934:	str	r1, [fp, #-180]	; 0xffffff4c
   4d938:	b	4d93c <__assert_fail@plt+0x3ad84>
   4d93c:	ldr	r0, [fp, #-180]	; 0xffffff4c
   4d940:	ldr	r1, [fp, #-176]	; 0xffffff50
   4d944:	ldr	r2, [fp, #-24]	; 0xffffffe8
   4d948:	mvn	r2, r2
   4d94c:	subs	r1, r2, r1
   4d950:	rscs	r0, r0, r2, asr #31
   4d954:	str	r1, [sp, #188]	; 0xbc
   4d958:	str	r0, [sp, #184]	; 0xb8
   4d95c:	bcs	4da98 <__assert_fail@plt+0x3aee0>
   4d960:	b	4daac <__assert_fail@plt+0x3aef4>
   4d964:	b	4d968 <__assert_fail@plt+0x3adb0>
   4d968:	b	4d9c0 <__assert_fail@plt+0x3ae08>
   4d96c:	b	4d9c0 <__assert_fail@plt+0x3ae08>
   4d970:	ldr	r0, [fp, #8]
   4d974:	cmn	r0, #1
   4d978:	bne	4d9c0 <__assert_fail@plt+0x3ae08>
   4d97c:	b	4d980 <__assert_fail@plt+0x3adc8>
   4d980:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4d984:	add	r0, r0, #0
   4d988:	movw	r1, #0
   4d98c:	cmp	r1, r0
   4d990:	blt	4da98 <__assert_fail@plt+0x3aee0>
   4d994:	b	4daac <__assert_fail@plt+0x3aef4>
   4d998:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4d99c:	movw	r1, #0
   4d9a0:	cmp	r1, r0
   4d9a4:	bge	4daac <__assert_fail@plt+0x3aef4>
   4d9a8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4d9ac:	sub	r0, r0, #1
   4d9b0:	mvn	r1, #0
   4d9b4:	cmp	r1, r0
   4d9b8:	blt	4da98 <__assert_fail@plt+0x3aee0>
   4d9bc:	b	4daac <__assert_fail@plt+0x3aef4>
   4d9c0:	ldr	r0, [fp, #8]
   4d9c4:	movw	r1, #0
   4d9c8:	sdiv	r0, r1, r0
   4d9cc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   4d9d0:	cmp	r0, r1
   4d9d4:	blt	4da98 <__assert_fail@plt+0x3aee0>
   4d9d8:	b	4daac <__assert_fail@plt+0x3aef4>
   4d9dc:	ldr	r0, [fp, #8]
   4d9e0:	cmp	r0, #0
   4d9e4:	bne	4d9ec <__assert_fail@plt+0x3ae34>
   4d9e8:	b	4daac <__assert_fail@plt+0x3aef4>
   4d9ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4d9f0:	cmp	r0, #0
   4d9f4:	bge	4da60 <__assert_fail@plt+0x3aea8>
   4d9f8:	b	4d9fc <__assert_fail@plt+0x3ae44>
   4d9fc:	b	4da44 <__assert_fail@plt+0x3ae8c>
   4da00:	b	4da44 <__assert_fail@plt+0x3ae8c>
   4da04:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4da08:	cmn	r0, #1
   4da0c:	bne	4da44 <__assert_fail@plt+0x3ae8c>
   4da10:	b	4da14 <__assert_fail@plt+0x3ae5c>
   4da14:	ldr	r0, [fp, #8]
   4da18:	add	r0, r0, #0
   4da1c:	movw	r1, #0
   4da20:	cmp	r1, r0
   4da24:	blt	4da98 <__assert_fail@plt+0x3aee0>
   4da28:	b	4daac <__assert_fail@plt+0x3aef4>
   4da2c:	ldr	r0, [fp, #8]
   4da30:	sub	r0, r0, #1
   4da34:	mvn	r1, #0
   4da38:	cmp	r1, r0
   4da3c:	blt	4da98 <__assert_fail@plt+0x3aee0>
   4da40:	b	4daac <__assert_fail@plt+0x3aef4>
   4da44:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4da48:	movw	r1, #0
   4da4c:	sdiv	r0, r1, r0
   4da50:	ldr	r1, [fp, #8]
   4da54:	cmp	r0, r1
   4da58:	blt	4da98 <__assert_fail@plt+0x3aee0>
   4da5c:	b	4daac <__assert_fail@plt+0x3aef4>
   4da60:	ldr	r0, [fp, #8]
   4da64:	asr	r3, r0, #31
   4da68:	mvn	r1, #0
   4da6c:	str	r0, [sp, #180]	; 0xb4
   4da70:	mov	r0, r1
   4da74:	ldr	r2, [sp, #180]	; 0xb4
   4da78:	bl	77854 <__assert_fail@plt+0x64c9c>
   4da7c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   4da80:	subs	r0, r0, r2
   4da84:	sbcs	r1, r1, r2, asr #31
   4da88:	str	r0, [sp, #176]	; 0xb0
   4da8c:	str	r1, [sp, #172]	; 0xac
   4da90:	bcs	4daac <__assert_fail@plt+0x3aef4>
   4da94:	b	4da98 <__assert_fail@plt+0x3aee0>
   4da98:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4da9c:	ldr	r1, [fp, #8]
   4daa0:	mul	r0, r0, r1
   4daa4:	str	r0, [fp, #-28]	; 0xffffffe4
   4daa8:	b	4dac0 <__assert_fail@plt+0x3af08>
   4daac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4dab0:	ldr	r1, [fp, #8]
   4dab4:	mul	r0, r0, r1
   4dab8:	str	r0, [fp, #-28]	; 0xffffffe4
   4dabc:	b	4dad0 <__assert_fail@plt+0x3af18>
   4dac0:	ldr	r0, [pc, #-1108]	; 4d674 <__assert_fail@plt+0x3aabc>
   4dac4:	str	r0, [sp, #168]	; 0xa8
   4dac8:	b	4daf0 <__assert_fail@plt+0x3af38>
   4dacc:			; <UNDEFINED> instruction: 0xffff8000
   4dad0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   4dad4:	cmp	r0, #64	; 0x40
   4dad8:	movw	r0, #0
   4dadc:	movlt	r0, #1
   4dae0:	tst	r0, #1
   4dae4:	movw	r0, #64	; 0x40
   4dae8:	moveq	r0, #0
   4daec:	str	r0, [sp, #168]	; 0xa8
   4daf0:	ldr	r0, [sp, #168]	; 0xa8
   4daf4:	str	r0, [fp, #-32]	; 0xffffffe0
   4daf8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   4dafc:	cmp	r0, #0
   4db00:	beq	4db30 <__assert_fail@plt+0x3af78>
   4db04:	ldr	r0, [fp, #-32]	; 0xffffffe0
   4db08:	ldr	r1, [fp, #8]
   4db0c:	sdiv	r0, r0, r1
   4db10:	str	r0, [fp, #-24]	; 0xffffffe8
   4db14:	ldr	r0, [fp, #-32]	; 0xffffffe0
   4db18:	mov	r1, r0
   4db1c:	ldr	r2, [fp, #8]
   4db20:	sdiv	r3, r0, r2
   4db24:	mls	r0, r3, r2, r0
   4db28:	sub	r0, r1, r0
   4db2c:	str	r0, [fp, #-28]	; 0xffffffe4
   4db30:	ldr	r0, [fp, #-4]
   4db34:	movw	r1, #0
   4db38:	cmp	r0, r1
   4db3c:	bne	4db4c <__assert_fail@plt+0x3af94>
   4db40:	ldr	r0, [fp, #-8]
   4db44:	movw	r1, #0
   4db48:	str	r1, [r0]
   4db4c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4db50:	ldr	r1, [fp, #-20]	; 0xffffffec
   4db54:	sub	r0, r0, r1
   4db58:	ldr	r1, [fp, #-12]
   4db5c:	cmp	r0, r1
   4db60:	bge	4ef98 <__assert_fail@plt+0x3c3e0>
   4db64:	ldr	r0, [fp, #-20]	; 0xffffffec
   4db68:	ldr	r1, [fp, #-12]
   4db6c:	add	r1, r0, r1
   4db70:	mov	r2, #1
   4db74:	cmp	r1, r0
   4db78:	movwvc	r2, #0
   4db7c:	str	r1, [fp, #-24]	; 0xffffffe8
   4db80:	tst	r2, #1
   4db84:	bne	4ef94 <__assert_fail@plt+0x3c3dc>
   4db88:	ldr	r0, [fp, #-16]
   4db8c:	movw	r1, #0
   4db90:	cmp	r1, r0
   4db94:	bgt	4dba8 <__assert_fail@plt+0x3aff0>
   4db98:	ldr	r0, [fp, #-16]
   4db9c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   4dba0:	cmp	r0, r1
   4dba4:	blt	4ef94 <__assert_fail@plt+0x3c3dc>
   4dba8:	b	4df84 <__assert_fail@plt+0x3b3cc>
   4dbac:	b	4dbb0 <__assert_fail@plt+0x3aff8>
   4dbb0:	ldr	r0, [fp, #8]
   4dbb4:	cmp	r0, #0
   4dbb8:	bge	4dccc <__assert_fail@plt+0x3b114>
   4dbbc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4dbc0:	cmp	r0, #0
   4dbc4:	bge	4dc50 <__assert_fail@plt+0x3b098>
   4dbc8:	b	4dbcc <__assert_fail@plt+0x3b014>
   4dbcc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4dbd0:	ldr	r1, [fp, #8]
   4dbd4:	movw	r2, #127	; 0x7f
   4dbd8:	sdiv	r1, r2, r1
   4dbdc:	cmp	r0, r1
   4dbe0:	blt	4dd6c <__assert_fail@plt+0x3b1b4>
   4dbe4:	b	4dd84 <__assert_fail@plt+0x3b1cc>
   4dbe8:	b	4dbec <__assert_fail@plt+0x3b034>
   4dbec:	ldr	r0, [pc, #-1260]	; 4d708 <__assert_fail@plt+0x3ab50>
   4dbf0:	ldr	r1, [fp, #8]
   4dbf4:	cmp	r1, r0
   4dbf8:	blt	4dc10 <__assert_fail@plt+0x3b058>
   4dbfc:	b	4dc1c <__assert_fail@plt+0x3b064>
   4dc00:	ldr	r0, [fp, #8]
   4dc04:	movw	r1, #0
   4dc08:	cmp	r1, r0
   4dc0c:	bge	4dc1c <__assert_fail@plt+0x3b064>
   4dc10:	movw	r0, #0
   4dc14:	str	r0, [sp, #164]	; 0xa4
   4dc18:	b	4dc34 <__assert_fail@plt+0x3b07c>
   4dc1c:	ldr	r0, [fp, #8]
   4dc20:	movw	r1, #0
   4dc24:	sub	r0, r1, r0
   4dc28:	movw	r1, #127	; 0x7f
   4dc2c:	sdiv	r0, r1, r0
   4dc30:	str	r0, [sp, #164]	; 0xa4
   4dc34:	ldr	r0, [sp, #164]	; 0xa4
   4dc38:	ldr	r1, [fp, #-24]	; 0xffffffe8
   4dc3c:	mvn	r2, #0
   4dc40:	sub	r1, r2, r1
   4dc44:	cmp	r0, r1
   4dc48:	ble	4dd6c <__assert_fail@plt+0x3b1b4>
   4dc4c:	b	4dd84 <__assert_fail@plt+0x3b1cc>
   4dc50:	b	4dc54 <__assert_fail@plt+0x3b09c>
   4dc54:	b	4dcb0 <__assert_fail@plt+0x3b0f8>
   4dc58:	b	4dcb0 <__assert_fail@plt+0x3b0f8>
   4dc5c:	ldr	r0, [fp, #8]
   4dc60:	cmn	r0, #1
   4dc64:	bne	4dcb0 <__assert_fail@plt+0x3b0f8>
   4dc68:	b	4dc6c <__assert_fail@plt+0x3b0b4>
   4dc6c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4dc70:	mvn	r1, #127	; 0x7f
   4dc74:	add	r0, r0, r1
   4dc78:	movw	r1, #0
   4dc7c:	cmp	r1, r0
   4dc80:	blt	4dd6c <__assert_fail@plt+0x3b1b4>
   4dc84:	b	4dd84 <__assert_fail@plt+0x3b1cc>
   4dc88:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4dc8c:	movw	r1, #0
   4dc90:	cmp	r1, r0
   4dc94:	bge	4dd84 <__assert_fail@plt+0x3b1cc>
   4dc98:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4dc9c:	sub	r0, r0, #1
   4dca0:	movw	r1, #127	; 0x7f
   4dca4:	cmp	r1, r0
   4dca8:	blt	4dd6c <__assert_fail@plt+0x3b1b4>
   4dcac:	b	4dd84 <__assert_fail@plt+0x3b1cc>
   4dcb0:	ldr	r0, [fp, #8]
   4dcb4:	mvn	r1, #127	; 0x7f
   4dcb8:	sdiv	r0, r1, r0
   4dcbc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   4dcc0:	cmp	r0, r1
   4dcc4:	blt	4dd6c <__assert_fail@plt+0x3b1b4>
   4dcc8:	b	4dd84 <__assert_fail@plt+0x3b1cc>
   4dccc:	ldr	r0, [fp, #8]
   4dcd0:	cmp	r0, #0
   4dcd4:	bne	4dcdc <__assert_fail@plt+0x3b124>
   4dcd8:	b	4dd84 <__assert_fail@plt+0x3b1cc>
   4dcdc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4dce0:	cmp	r0, #0
   4dce4:	bge	4dd54 <__assert_fail@plt+0x3b19c>
   4dce8:	b	4dcec <__assert_fail@plt+0x3b134>
   4dcec:	b	4dd38 <__assert_fail@plt+0x3b180>
   4dcf0:	b	4dd38 <__assert_fail@plt+0x3b180>
   4dcf4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4dcf8:	cmn	r0, #1
   4dcfc:	bne	4dd38 <__assert_fail@plt+0x3b180>
   4dd00:	b	4dd04 <__assert_fail@plt+0x3b14c>
   4dd04:	ldr	r0, [fp, #8]
   4dd08:	mvn	r1, #127	; 0x7f
   4dd0c:	add	r0, r0, r1
   4dd10:	movw	r1, #0
   4dd14:	cmp	r1, r0
   4dd18:	blt	4dd6c <__assert_fail@plt+0x3b1b4>
   4dd1c:	b	4dd84 <__assert_fail@plt+0x3b1cc>
   4dd20:	ldr	r0, [fp, #8]
   4dd24:	sub	r0, r0, #1
   4dd28:	movw	r1, #127	; 0x7f
   4dd2c:	cmp	r1, r0
   4dd30:	blt	4dd6c <__assert_fail@plt+0x3b1b4>
   4dd34:	b	4dd84 <__assert_fail@plt+0x3b1cc>
   4dd38:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4dd3c:	mvn	r1, #127	; 0x7f
   4dd40:	sdiv	r0, r1, r0
   4dd44:	ldr	r1, [fp, #8]
   4dd48:	cmp	r0, r1
   4dd4c:	blt	4dd6c <__assert_fail@plt+0x3b1b4>
   4dd50:	b	4dd84 <__assert_fail@plt+0x3b1cc>
   4dd54:	ldr	r0, [fp, #8]
   4dd58:	movw	r1, #127	; 0x7f
   4dd5c:	sdiv	r0, r1, r0
   4dd60:	ldr	r1, [fp, #-24]	; 0xffffffe8
   4dd64:	cmp	r0, r1
   4dd68:	bge	4dd84 <__assert_fail@plt+0x3b1cc>
   4dd6c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4dd70:	ldr	r1, [fp, #8]
   4dd74:	mul	r0, r0, r1
   4dd78:	sxtb	r0, r0
   4dd7c:	str	r0, [fp, #-28]	; 0xffffffe4
   4dd80:	b	4ef94 <__assert_fail@plt+0x3c3dc>
   4dd84:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4dd88:	ldr	r1, [fp, #8]
   4dd8c:	mul	r0, r0, r1
   4dd90:	sxtb	r0, r0
   4dd94:	str	r0, [fp, #-28]	; 0xffffffe4
   4dd98:	b	4ef98 <__assert_fail@plt+0x3c3e0>
   4dd9c:	ldr	r0, [fp, #8]
   4dda0:	cmp	r0, #0
   4dda4:	bge	4deb4 <__assert_fail@plt+0x3b2fc>
   4dda8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4ddac:	cmp	r0, #0
   4ddb0:	bge	4de3c <__assert_fail@plt+0x3b284>
   4ddb4:	b	4ddb8 <__assert_fail@plt+0x3b200>
   4ddb8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4ddbc:	ldr	r1, [fp, #8]
   4ddc0:	movw	r2, #255	; 0xff
   4ddc4:	sdiv	r1, r2, r1
   4ddc8:	cmp	r0, r1
   4ddcc:	blt	4df50 <__assert_fail@plt+0x3b398>
   4ddd0:	b	4df6c <__assert_fail@plt+0x3b3b4>
   4ddd4:	b	4ddd8 <__assert_fail@plt+0x3b220>
   4ddd8:	ldr	r0, [pc, #-1752]	; 4d708 <__assert_fail@plt+0x3ab50>
   4dddc:	ldr	r1, [fp, #8]
   4dde0:	cmp	r1, r0
   4dde4:	blt	4ddfc <__assert_fail@plt+0x3b244>
   4dde8:	b	4de08 <__assert_fail@plt+0x3b250>
   4ddec:	ldr	r0, [fp, #8]
   4ddf0:	movw	r1, #0
   4ddf4:	cmp	r1, r0
   4ddf8:	bge	4de08 <__assert_fail@plt+0x3b250>
   4ddfc:	movw	r0, #0
   4de00:	str	r0, [sp, #160]	; 0xa0
   4de04:	b	4de20 <__assert_fail@plt+0x3b268>
   4de08:	ldr	r0, [fp, #8]
   4de0c:	movw	r1, #0
   4de10:	sub	r0, r1, r0
   4de14:	movw	r1, #255	; 0xff
   4de18:	sdiv	r0, r1, r0
   4de1c:	str	r0, [sp, #160]	; 0xa0
   4de20:	ldr	r0, [sp, #160]	; 0xa0
   4de24:	ldr	r1, [fp, #-24]	; 0xffffffe8
   4de28:	mvn	r2, #0
   4de2c:	sub	r1, r2, r1
   4de30:	cmp	r0, r1
   4de34:	ble	4df50 <__assert_fail@plt+0x3b398>
   4de38:	b	4df6c <__assert_fail@plt+0x3b3b4>
   4de3c:	b	4de40 <__assert_fail@plt+0x3b288>
   4de40:	b	4de98 <__assert_fail@plt+0x3b2e0>
   4de44:	b	4de98 <__assert_fail@plt+0x3b2e0>
   4de48:	ldr	r0, [fp, #8]
   4de4c:	cmn	r0, #1
   4de50:	bne	4de98 <__assert_fail@plt+0x3b2e0>
   4de54:	b	4de58 <__assert_fail@plt+0x3b2a0>
   4de58:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4de5c:	add	r0, r0, #0
   4de60:	movw	r1, #0
   4de64:	cmp	r1, r0
   4de68:	blt	4df50 <__assert_fail@plt+0x3b398>
   4de6c:	b	4df6c <__assert_fail@plt+0x3b3b4>
   4de70:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4de74:	movw	r1, #0
   4de78:	cmp	r1, r0
   4de7c:	bge	4df6c <__assert_fail@plt+0x3b3b4>
   4de80:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4de84:	sub	r0, r0, #1
   4de88:	mvn	r1, #0
   4de8c:	cmp	r1, r0
   4de90:	blt	4df50 <__assert_fail@plt+0x3b398>
   4de94:	b	4df6c <__assert_fail@plt+0x3b3b4>
   4de98:	ldr	r0, [fp, #8]
   4de9c:	movw	r1, #0
   4dea0:	sdiv	r0, r1, r0
   4dea4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   4dea8:	cmp	r0, r1
   4deac:	blt	4df50 <__assert_fail@plt+0x3b398>
   4deb0:	b	4df6c <__assert_fail@plt+0x3b3b4>
   4deb4:	ldr	r0, [fp, #8]
   4deb8:	cmp	r0, #0
   4debc:	bne	4dec4 <__assert_fail@plt+0x3b30c>
   4dec0:	b	4df6c <__assert_fail@plt+0x3b3b4>
   4dec4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4dec8:	cmp	r0, #0
   4decc:	bge	4df38 <__assert_fail@plt+0x3b380>
   4ded0:	b	4ded4 <__assert_fail@plt+0x3b31c>
   4ded4:	b	4df1c <__assert_fail@plt+0x3b364>
   4ded8:	b	4df1c <__assert_fail@plt+0x3b364>
   4dedc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4dee0:	cmn	r0, #1
   4dee4:	bne	4df1c <__assert_fail@plt+0x3b364>
   4dee8:	b	4deec <__assert_fail@plt+0x3b334>
   4deec:	ldr	r0, [fp, #8]
   4def0:	add	r0, r0, #0
   4def4:	movw	r1, #0
   4def8:	cmp	r1, r0
   4defc:	blt	4df50 <__assert_fail@plt+0x3b398>
   4df00:	b	4df6c <__assert_fail@plt+0x3b3b4>
   4df04:	ldr	r0, [fp, #8]
   4df08:	sub	r0, r0, #1
   4df0c:	mvn	r1, #0
   4df10:	cmp	r1, r0
   4df14:	blt	4df50 <__assert_fail@plt+0x3b398>
   4df18:	b	4df6c <__assert_fail@plt+0x3b3b4>
   4df1c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4df20:	movw	r1, #0
   4df24:	sdiv	r0, r1, r0
   4df28:	ldr	r1, [fp, #8]
   4df2c:	cmp	r0, r1
   4df30:	blt	4df50 <__assert_fail@plt+0x3b398>
   4df34:	b	4df6c <__assert_fail@plt+0x3b3b4>
   4df38:	ldr	r0, [fp, #8]
   4df3c:	movw	r1, #255	; 0xff
   4df40:	sdiv	r0, r1, r0
   4df44:	ldr	r1, [fp, #-24]	; 0xffffffe8
   4df48:	cmp	r0, r1
   4df4c:	bge	4df6c <__assert_fail@plt+0x3b3b4>
   4df50:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4df54:	ldr	r1, [fp, #8]
   4df58:	mul	r0, r0, r1
   4df5c:	and	r0, r0, #255	; 0xff
   4df60:	str	r0, [fp, #-28]	; 0xffffffe4
   4df64:	b	4ef94 <__assert_fail@plt+0x3c3dc>
   4df68:	andhi	r0, r0, r0
   4df6c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4df70:	ldr	r1, [fp, #8]
   4df74:	mul	r0, r0, r1
   4df78:	and	r0, r0, #255	; 0xff
   4df7c:	str	r0, [fp, #-28]	; 0xffffffe4
   4df80:	b	4ef98 <__assert_fail@plt+0x3c3e0>
   4df84:	b	4e35c <__assert_fail@plt+0x3b7a4>
   4df88:	b	4df8c <__assert_fail@plt+0x3b3d4>
   4df8c:	ldr	r0, [fp, #8]
   4df90:	cmp	r0, #0
   4df94:	bge	4e0a8 <__assert_fail@plt+0x3b4f0>
   4df98:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4df9c:	cmp	r0, #0
   4dfa0:	bge	4e02c <__assert_fail@plt+0x3b474>
   4dfa4:	b	4dfa8 <__assert_fail@plt+0x3b3f0>
   4dfa8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4dfac:	ldr	r1, [fp, #8]
   4dfb0:	movw	r2, #32767	; 0x7fff
   4dfb4:	sdiv	r1, r2, r1
   4dfb8:	cmp	r0, r1
   4dfbc:	blt	4e148 <__assert_fail@plt+0x3b590>
   4dfc0:	b	4e160 <__assert_fail@plt+0x3b5a8>
   4dfc4:	b	4dfc8 <__assert_fail@plt+0x3b410>
   4dfc8:	ldr	r0, [pc, #4084]	; 4efc4 <__assert_fail@plt+0x3c40c>
   4dfcc:	ldr	r1, [fp, #8]
   4dfd0:	cmp	r1, r0
   4dfd4:	blt	4dfec <__assert_fail@plt+0x3b434>
   4dfd8:	b	4dff8 <__assert_fail@plt+0x3b440>
   4dfdc:	ldr	r0, [fp, #8]
   4dfe0:	movw	r1, #0
   4dfe4:	cmp	r1, r0
   4dfe8:	bge	4dff8 <__assert_fail@plt+0x3b440>
   4dfec:	movw	r0, #0
   4dff0:	str	r0, [sp, #156]	; 0x9c
   4dff4:	b	4e010 <__assert_fail@plt+0x3b458>
   4dff8:	ldr	r0, [fp, #8]
   4dffc:	movw	r1, #0
   4e000:	sub	r0, r1, r0
   4e004:	movw	r1, #32767	; 0x7fff
   4e008:	sdiv	r0, r1, r0
   4e00c:	str	r0, [sp, #156]	; 0x9c
   4e010:	ldr	r0, [sp, #156]	; 0x9c
   4e014:	ldr	r1, [fp, #-24]	; 0xffffffe8
   4e018:	mvn	r2, #0
   4e01c:	sub	r1, r2, r1
   4e020:	cmp	r0, r1
   4e024:	ble	4e148 <__assert_fail@plt+0x3b590>
   4e028:	b	4e160 <__assert_fail@plt+0x3b5a8>
   4e02c:	b	4e030 <__assert_fail@plt+0x3b478>
   4e030:	b	4e08c <__assert_fail@plt+0x3b4d4>
   4e034:	b	4e08c <__assert_fail@plt+0x3b4d4>
   4e038:	ldr	r0, [fp, #8]
   4e03c:	cmn	r0, #1
   4e040:	bne	4e08c <__assert_fail@plt+0x3b4d4>
   4e044:	b	4e048 <__assert_fail@plt+0x3b490>
   4e048:	ldr	r0, [pc, #3964]	; 4efcc <__assert_fail@plt+0x3c414>
   4e04c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   4e050:	add	r0, r1, r0
   4e054:	movw	r1, #0
   4e058:	cmp	r1, r0
   4e05c:	blt	4e148 <__assert_fail@plt+0x3b590>
   4e060:	b	4e160 <__assert_fail@plt+0x3b5a8>
   4e064:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4e068:	movw	r1, #0
   4e06c:	cmp	r1, r0
   4e070:	bge	4e160 <__assert_fail@plt+0x3b5a8>
   4e074:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4e078:	sub	r0, r0, #1
   4e07c:	movw	r1, #32767	; 0x7fff
   4e080:	cmp	r1, r0
   4e084:	blt	4e148 <__assert_fail@plt+0x3b590>
   4e088:	b	4e160 <__assert_fail@plt+0x3b5a8>
   4e08c:	ldr	r0, [pc, #3896]	; 4efcc <__assert_fail@plt+0x3c414>
   4e090:	ldr	r1, [fp, #8]
   4e094:	sdiv	r0, r0, r1
   4e098:	ldr	r1, [fp, #-24]	; 0xffffffe8
   4e09c:	cmp	r0, r1
   4e0a0:	blt	4e148 <__assert_fail@plt+0x3b590>
   4e0a4:	b	4e160 <__assert_fail@plt+0x3b5a8>
   4e0a8:	ldr	r0, [fp, #8]
   4e0ac:	cmp	r0, #0
   4e0b0:	bne	4e0b8 <__assert_fail@plt+0x3b500>
   4e0b4:	b	4e160 <__assert_fail@plt+0x3b5a8>
   4e0b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4e0bc:	cmp	r0, #0
   4e0c0:	bge	4e130 <__assert_fail@plt+0x3b578>
   4e0c4:	b	4e0c8 <__assert_fail@plt+0x3b510>
   4e0c8:	b	4e114 <__assert_fail@plt+0x3b55c>
   4e0cc:	b	4e114 <__assert_fail@plt+0x3b55c>
   4e0d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4e0d4:	cmn	r0, #1
   4e0d8:	bne	4e114 <__assert_fail@plt+0x3b55c>
   4e0dc:	b	4e0e0 <__assert_fail@plt+0x3b528>
   4e0e0:	ldr	r0, [pc, #3812]	; 4efcc <__assert_fail@plt+0x3c414>
   4e0e4:	ldr	r1, [fp, #8]
   4e0e8:	add	r0, r1, r0
   4e0ec:	movw	r1, #0
   4e0f0:	cmp	r1, r0
   4e0f4:	blt	4e148 <__assert_fail@plt+0x3b590>
   4e0f8:	b	4e160 <__assert_fail@plt+0x3b5a8>
   4e0fc:	ldr	r0, [fp, #8]
   4e100:	sub	r0, r0, #1
   4e104:	movw	r1, #32767	; 0x7fff
   4e108:	cmp	r1, r0
   4e10c:	blt	4e148 <__assert_fail@plt+0x3b590>
   4e110:	b	4e160 <__assert_fail@plt+0x3b5a8>
   4e114:	ldr	r0, [pc, #3760]	; 4efcc <__assert_fail@plt+0x3c414>
   4e118:	ldr	r1, [fp, #-24]	; 0xffffffe8
   4e11c:	sdiv	r0, r0, r1
   4e120:	ldr	r1, [fp, #8]
   4e124:	cmp	r0, r1
   4e128:	blt	4e148 <__assert_fail@plt+0x3b590>
   4e12c:	b	4e160 <__assert_fail@plt+0x3b5a8>
   4e130:	ldr	r0, [fp, #8]
   4e134:	movw	r1, #32767	; 0x7fff
   4e138:	sdiv	r0, r1, r0
   4e13c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   4e140:	cmp	r0, r1
   4e144:	bge	4e160 <__assert_fail@plt+0x3b5a8>
   4e148:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4e14c:	ldr	r1, [fp, #8]
   4e150:	mul	r0, r0, r1
   4e154:	sxth	r0, r0
   4e158:	str	r0, [fp, #-28]	; 0xffffffe4
   4e15c:	b	4ef94 <__assert_fail@plt+0x3c3dc>
   4e160:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4e164:	ldr	r1, [fp, #8]
   4e168:	mul	r0, r0, r1
   4e16c:	sxth	r0, r0
   4e170:	str	r0, [fp, #-28]	; 0xffffffe4
   4e174:	b	4ef98 <__assert_fail@plt+0x3c3e0>
   4e178:	ldr	r0, [fp, #8]
   4e17c:	cmp	r0, #0
   4e180:	bge	4e290 <__assert_fail@plt+0x3b6d8>
   4e184:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4e188:	cmp	r0, #0
   4e18c:	bge	4e218 <__assert_fail@plt+0x3b660>
   4e190:	b	4e194 <__assert_fail@plt+0x3b5dc>
   4e194:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4e198:	ldr	r1, [fp, #8]
   4e19c:	movw	r2, #65535	; 0xffff
   4e1a0:	sdiv	r1, r2, r1
   4e1a4:	cmp	r0, r1
   4e1a8:	blt	4e32c <__assert_fail@plt+0x3b774>
   4e1ac:	b	4e344 <__assert_fail@plt+0x3b78c>
   4e1b0:	b	4e1b4 <__assert_fail@plt+0x3b5fc>
   4e1b4:	ldr	r0, [pc, #3592]	; 4efc4 <__assert_fail@plt+0x3c40c>
   4e1b8:	ldr	r1, [fp, #8]
   4e1bc:	cmp	r1, r0
   4e1c0:	blt	4e1d8 <__assert_fail@plt+0x3b620>
   4e1c4:	b	4e1e4 <__assert_fail@plt+0x3b62c>
   4e1c8:	ldr	r0, [fp, #8]
   4e1cc:	movw	r1, #0
   4e1d0:	cmp	r1, r0
   4e1d4:	bge	4e1e4 <__assert_fail@plt+0x3b62c>
   4e1d8:	movw	r0, #0
   4e1dc:	str	r0, [sp, #152]	; 0x98
   4e1e0:	b	4e1fc <__assert_fail@plt+0x3b644>
   4e1e4:	ldr	r0, [fp, #8]
   4e1e8:	movw	r1, #0
   4e1ec:	sub	r0, r1, r0
   4e1f0:	movw	r1, #65535	; 0xffff
   4e1f4:	sdiv	r0, r1, r0
   4e1f8:	str	r0, [sp, #152]	; 0x98
   4e1fc:	ldr	r0, [sp, #152]	; 0x98
   4e200:	ldr	r1, [fp, #-24]	; 0xffffffe8
   4e204:	mvn	r2, #0
   4e208:	sub	r1, r2, r1
   4e20c:	cmp	r0, r1
   4e210:	ble	4e32c <__assert_fail@plt+0x3b774>
   4e214:	b	4e344 <__assert_fail@plt+0x3b78c>
   4e218:	b	4e21c <__assert_fail@plt+0x3b664>
   4e21c:	b	4e274 <__assert_fail@plt+0x3b6bc>
   4e220:	b	4e274 <__assert_fail@plt+0x3b6bc>
   4e224:	ldr	r0, [fp, #8]
   4e228:	cmn	r0, #1
   4e22c:	bne	4e274 <__assert_fail@plt+0x3b6bc>
   4e230:	b	4e234 <__assert_fail@plt+0x3b67c>
   4e234:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4e238:	add	r0, r0, #0
   4e23c:	movw	r1, #0
   4e240:	cmp	r1, r0
   4e244:	blt	4e32c <__assert_fail@plt+0x3b774>
   4e248:	b	4e344 <__assert_fail@plt+0x3b78c>
   4e24c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4e250:	movw	r1, #0
   4e254:	cmp	r1, r0
   4e258:	bge	4e344 <__assert_fail@plt+0x3b78c>
   4e25c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4e260:	sub	r0, r0, #1
   4e264:	mvn	r1, #0
   4e268:	cmp	r1, r0
   4e26c:	blt	4e32c <__assert_fail@plt+0x3b774>
   4e270:	b	4e344 <__assert_fail@plt+0x3b78c>
   4e274:	ldr	r0, [fp, #8]
   4e278:	movw	r1, #0
   4e27c:	sdiv	r0, r1, r0
   4e280:	ldr	r1, [fp, #-24]	; 0xffffffe8
   4e284:	cmp	r0, r1
   4e288:	blt	4e32c <__assert_fail@plt+0x3b774>
   4e28c:	b	4e344 <__assert_fail@plt+0x3b78c>
   4e290:	ldr	r0, [fp, #8]
   4e294:	cmp	r0, #0
   4e298:	bne	4e2a0 <__assert_fail@plt+0x3b6e8>
   4e29c:	b	4e344 <__assert_fail@plt+0x3b78c>
   4e2a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4e2a4:	cmp	r0, #0
   4e2a8:	bge	4e314 <__assert_fail@plt+0x3b75c>
   4e2ac:	b	4e2b0 <__assert_fail@plt+0x3b6f8>
   4e2b0:	b	4e2f8 <__assert_fail@plt+0x3b740>
   4e2b4:	b	4e2f8 <__assert_fail@plt+0x3b740>
   4e2b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4e2bc:	cmn	r0, #1
   4e2c0:	bne	4e2f8 <__assert_fail@plt+0x3b740>
   4e2c4:	b	4e2c8 <__assert_fail@plt+0x3b710>
   4e2c8:	ldr	r0, [fp, #8]
   4e2cc:	add	r0, r0, #0
   4e2d0:	movw	r1, #0
   4e2d4:	cmp	r1, r0
   4e2d8:	blt	4e32c <__assert_fail@plt+0x3b774>
   4e2dc:	b	4e344 <__assert_fail@plt+0x3b78c>
   4e2e0:	ldr	r0, [fp, #8]
   4e2e4:	sub	r0, r0, #1
   4e2e8:	mvn	r1, #0
   4e2ec:	cmp	r1, r0
   4e2f0:	blt	4e32c <__assert_fail@plt+0x3b774>
   4e2f4:	b	4e344 <__assert_fail@plt+0x3b78c>
   4e2f8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4e2fc:	movw	r1, #0
   4e300:	sdiv	r0, r1, r0
   4e304:	ldr	r1, [fp, #8]
   4e308:	cmp	r0, r1
   4e30c:	blt	4e32c <__assert_fail@plt+0x3b774>
   4e310:	b	4e344 <__assert_fail@plt+0x3b78c>
   4e314:	ldr	r0, [fp, #8]
   4e318:	movw	r1, #65535	; 0xffff
   4e31c:	sdiv	r0, r1, r0
   4e320:	ldr	r1, [fp, #-24]	; 0xffffffe8
   4e324:	cmp	r0, r1
   4e328:	bge	4e344 <__assert_fail@plt+0x3b78c>
   4e32c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4e330:	ldr	r1, [fp, #8]
   4e334:	mul	r0, r0, r1
   4e338:	uxth	r0, r0
   4e33c:	str	r0, [fp, #-28]	; 0xffffffe4
   4e340:	b	4ef94 <__assert_fail@plt+0x3c3dc>
   4e344:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4e348:	ldr	r1, [fp, #8]
   4e34c:	mul	r0, r0, r1
   4e350:	uxth	r0, r0
   4e354:	str	r0, [fp, #-28]	; 0xffffffe4
   4e358:	b	4ef98 <__assert_fail@plt+0x3c3e0>
   4e35c:	b	4e360 <__assert_fail@plt+0x3b7a8>
   4e360:	b	4e364 <__assert_fail@plt+0x3b7ac>
   4e364:	ldr	r0, [fp, #8]
   4e368:	cmp	r0, #0
   4e36c:	bge	4e470 <__assert_fail@plt+0x3b8b8>
   4e370:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4e374:	cmp	r0, #0
   4e378:	bge	4e404 <__assert_fail@plt+0x3b84c>
   4e37c:	b	4e380 <__assert_fail@plt+0x3b7c8>
   4e380:	ldr	r0, [pc, #3128]	; 4efc0 <__assert_fail@plt+0x3c408>
   4e384:	ldr	r1, [fp, #-24]	; 0xffffffe8
   4e388:	ldr	r2, [fp, #8]
   4e38c:	sdiv	r0, r0, r2
   4e390:	cmp	r1, r0
   4e394:	blt	4e500 <__assert_fail@plt+0x3b948>
   4e398:	b	4e514 <__assert_fail@plt+0x3b95c>
   4e39c:	b	4e3a0 <__assert_fail@plt+0x3b7e8>
   4e3a0:	ldr	r0, [pc, #3100]	; 4efc4 <__assert_fail@plt+0x3c40c>
   4e3a4:	ldr	r1, [fp, #8]
   4e3a8:	cmp	r1, r0
   4e3ac:	blt	4e3c4 <__assert_fail@plt+0x3b80c>
   4e3b0:	b	4e3d0 <__assert_fail@plt+0x3b818>
   4e3b4:	ldr	r0, [fp, #8]
   4e3b8:	movw	r1, #0
   4e3bc:	cmp	r1, r0
   4e3c0:	bge	4e3d0 <__assert_fail@plt+0x3b818>
   4e3c4:	movw	r0, #0
   4e3c8:	str	r0, [sp, #148]	; 0x94
   4e3cc:	b	4e3e8 <__assert_fail@plt+0x3b830>
   4e3d0:	ldr	r0, [pc, #3048]	; 4efc0 <__assert_fail@plt+0x3c408>
   4e3d4:	ldr	r1, [fp, #8]
   4e3d8:	movw	r2, #0
   4e3dc:	sub	r1, r2, r1
   4e3e0:	sdiv	r0, r0, r1
   4e3e4:	str	r0, [sp, #148]	; 0x94
   4e3e8:	ldr	r0, [sp, #148]	; 0x94
   4e3ec:	ldr	r1, [fp, #-24]	; 0xffffffe8
   4e3f0:	mvn	r2, #0
   4e3f4:	sub	r1, r2, r1
   4e3f8:	cmp	r0, r1
   4e3fc:	ble	4e500 <__assert_fail@plt+0x3b948>
   4e400:	b	4e514 <__assert_fail@plt+0x3b95c>
   4e404:	ldr	r0, [fp, #8]
   4e408:	cmn	r0, #1
   4e40c:	bne	4e454 <__assert_fail@plt+0x3b89c>
   4e410:	b	4e414 <__assert_fail@plt+0x3b85c>
   4e414:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4e418:	add	r0, r0, #-2147483648	; 0x80000000
   4e41c:	movw	r1, #0
   4e420:	cmp	r1, r0
   4e424:	blt	4e500 <__assert_fail@plt+0x3b948>
   4e428:	b	4e514 <__assert_fail@plt+0x3b95c>
   4e42c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4e430:	movw	r1, #0
   4e434:	cmp	r1, r0
   4e438:	bge	4e514 <__assert_fail@plt+0x3b95c>
   4e43c:	ldr	r0, [pc, #2940]	; 4efc0 <__assert_fail@plt+0x3c408>
   4e440:	ldr	r1, [fp, #-24]	; 0xffffffe8
   4e444:	sub	r1, r1, #1
   4e448:	cmp	r0, r1
   4e44c:	blt	4e500 <__assert_fail@plt+0x3b948>
   4e450:	b	4e514 <__assert_fail@plt+0x3b95c>
   4e454:	ldr	r0, [pc, #2924]	; 4efc8 <__assert_fail@plt+0x3c410>
   4e458:	ldr	r1, [fp, #8]
   4e45c:	sdiv	r0, r0, r1
   4e460:	ldr	r1, [fp, #-24]	; 0xffffffe8
   4e464:	cmp	r0, r1
   4e468:	blt	4e500 <__assert_fail@plt+0x3b948>
   4e46c:	b	4e514 <__assert_fail@plt+0x3b95c>
   4e470:	ldr	r0, [fp, #8]
   4e474:	cmp	r0, #0
   4e478:	bne	4e480 <__assert_fail@plt+0x3b8c8>
   4e47c:	b	4e514 <__assert_fail@plt+0x3b95c>
   4e480:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4e484:	cmp	r0, #0
   4e488:	bge	4e4e8 <__assert_fail@plt+0x3b930>
   4e48c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4e490:	cmn	r0, #1
   4e494:	bne	4e4cc <__assert_fail@plt+0x3b914>
   4e498:	b	4e49c <__assert_fail@plt+0x3b8e4>
   4e49c:	ldr	r0, [fp, #8]
   4e4a0:	add	r0, r0, #-2147483648	; 0x80000000
   4e4a4:	movw	r1, #0
   4e4a8:	cmp	r1, r0
   4e4ac:	blt	4e500 <__assert_fail@plt+0x3b948>
   4e4b0:	b	4e514 <__assert_fail@plt+0x3b95c>
   4e4b4:	ldr	r0, [pc, #2820]	; 4efc0 <__assert_fail@plt+0x3c408>
   4e4b8:	ldr	r1, [fp, #8]
   4e4bc:	sub	r1, r1, #1
   4e4c0:	cmp	r0, r1
   4e4c4:	blt	4e500 <__assert_fail@plt+0x3b948>
   4e4c8:	b	4e514 <__assert_fail@plt+0x3b95c>
   4e4cc:	ldr	r0, [pc, #2804]	; 4efc8 <__assert_fail@plt+0x3c410>
   4e4d0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   4e4d4:	sdiv	r0, r0, r1
   4e4d8:	ldr	r1, [fp, #8]
   4e4dc:	cmp	r0, r1
   4e4e0:	blt	4e500 <__assert_fail@plt+0x3b948>
   4e4e4:	b	4e514 <__assert_fail@plt+0x3b95c>
   4e4e8:	ldr	r0, [pc, #2768]	; 4efc0 <__assert_fail@plt+0x3c408>
   4e4ec:	ldr	r1, [fp, #8]
   4e4f0:	sdiv	r0, r0, r1
   4e4f4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   4e4f8:	cmp	r0, r1
   4e4fc:	bge	4e514 <__assert_fail@plt+0x3b95c>
   4e500:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4e504:	ldr	r1, [fp, #8]
   4e508:	mul	r0, r0, r1
   4e50c:	str	r0, [fp, #-28]	; 0xffffffe4
   4e510:	b	4ef94 <__assert_fail@plt+0x3c3dc>
   4e514:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4e518:	ldr	r1, [fp, #8]
   4e51c:	mul	r0, r0, r1
   4e520:	str	r0, [fp, #-28]	; 0xffffffe4
   4e524:	b	4ef98 <__assert_fail@plt+0x3c3e0>
   4e528:	ldr	r0, [fp, #8]
   4e52c:	cmp	r0, #0
   4e530:	bge	4e640 <__assert_fail@plt+0x3ba88>
   4e534:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4e538:	cmp	r0, #0
   4e53c:	bge	4e5c8 <__assert_fail@plt+0x3ba10>
   4e540:	b	4e560 <__assert_fail@plt+0x3b9a8>
   4e544:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4e548:	ldr	r1, [fp, #8]
   4e54c:	mvn	r2, #0
   4e550:	udiv	r1, r2, r1
   4e554:	cmp	r0, r1
   4e558:	bcc	4e6dc <__assert_fail@plt+0x3bb24>
   4e55c:	b	4e6f0 <__assert_fail@plt+0x3bb38>
   4e560:	b	4e564 <__assert_fail@plt+0x3b9ac>
   4e564:	ldr	r0, [pc, #2648]	; 4efc4 <__assert_fail@plt+0x3c40c>
   4e568:	ldr	r1, [fp, #8]
   4e56c:	cmp	r1, r0
   4e570:	blt	4e588 <__assert_fail@plt+0x3b9d0>
   4e574:	b	4e594 <__assert_fail@plt+0x3b9dc>
   4e578:	ldr	r0, [fp, #8]
   4e57c:	movw	r1, #0
   4e580:	cmp	r1, r0
   4e584:	bge	4e594 <__assert_fail@plt+0x3b9dc>
   4e588:	movw	r0, #1
   4e58c:	str	r0, [sp, #144]	; 0x90
   4e590:	b	4e5ac <__assert_fail@plt+0x3b9f4>
   4e594:	ldr	r0, [fp, #8]
   4e598:	movw	r1, #0
   4e59c:	sub	r0, r1, r0
   4e5a0:	mvn	r1, #0
   4e5a4:	udiv	r0, r1, r0
   4e5a8:	str	r0, [sp, #144]	; 0x90
   4e5ac:	ldr	r0, [sp, #144]	; 0x90
   4e5b0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   4e5b4:	mvn	r2, #0
   4e5b8:	sub	r1, r2, r1
   4e5bc:	cmp	r0, r1
   4e5c0:	bls	4e6dc <__assert_fail@plt+0x3bb24>
   4e5c4:	b	4e6f0 <__assert_fail@plt+0x3bb38>
   4e5c8:	b	4e5cc <__assert_fail@plt+0x3ba14>
   4e5cc:	b	4e624 <__assert_fail@plt+0x3ba6c>
   4e5d0:	b	4e624 <__assert_fail@plt+0x3ba6c>
   4e5d4:	ldr	r0, [fp, #8]
   4e5d8:	cmn	r0, #1
   4e5dc:	bne	4e624 <__assert_fail@plt+0x3ba6c>
   4e5e0:	b	4e5e4 <__assert_fail@plt+0x3ba2c>
   4e5e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4e5e8:	add	r0, r0, #0
   4e5ec:	movw	r1, #0
   4e5f0:	cmp	r1, r0
   4e5f4:	blt	4e6dc <__assert_fail@plt+0x3bb24>
   4e5f8:	b	4e6f0 <__assert_fail@plt+0x3bb38>
   4e5fc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4e600:	movw	r1, #0
   4e604:	cmp	r1, r0
   4e608:	bge	4e6f0 <__assert_fail@plt+0x3bb38>
   4e60c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4e610:	sub	r0, r0, #1
   4e614:	mvn	r1, #0
   4e618:	cmp	r1, r0
   4e61c:	blt	4e6dc <__assert_fail@plt+0x3bb24>
   4e620:	b	4e6f0 <__assert_fail@plt+0x3bb38>
   4e624:	ldr	r0, [fp, #8]
   4e628:	movw	r1, #0
   4e62c:	sdiv	r0, r1, r0
   4e630:	ldr	r1, [fp, #-24]	; 0xffffffe8
   4e634:	cmp	r0, r1
   4e638:	blt	4e6dc <__assert_fail@plt+0x3bb24>
   4e63c:	b	4e6f0 <__assert_fail@plt+0x3bb38>
   4e640:	ldr	r0, [fp, #8]
   4e644:	cmp	r0, #0
   4e648:	bne	4e650 <__assert_fail@plt+0x3ba98>
   4e64c:	b	4e6f0 <__assert_fail@plt+0x3bb38>
   4e650:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4e654:	cmp	r0, #0
   4e658:	bge	4e6c4 <__assert_fail@plt+0x3bb0c>
   4e65c:	b	4e660 <__assert_fail@plt+0x3baa8>
   4e660:	b	4e6a8 <__assert_fail@plt+0x3baf0>
   4e664:	b	4e6a8 <__assert_fail@plt+0x3baf0>
   4e668:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4e66c:	cmn	r0, #1
   4e670:	bne	4e6a8 <__assert_fail@plt+0x3baf0>
   4e674:	b	4e678 <__assert_fail@plt+0x3bac0>
   4e678:	ldr	r0, [fp, #8]
   4e67c:	add	r0, r0, #0
   4e680:	movw	r1, #0
   4e684:	cmp	r1, r0
   4e688:	blt	4e6dc <__assert_fail@plt+0x3bb24>
   4e68c:	b	4e6f0 <__assert_fail@plt+0x3bb38>
   4e690:	ldr	r0, [fp, #8]
   4e694:	sub	r0, r0, #1
   4e698:	mvn	r1, #0
   4e69c:	cmp	r1, r0
   4e6a0:	blt	4e6dc <__assert_fail@plt+0x3bb24>
   4e6a4:	b	4e6f0 <__assert_fail@plt+0x3bb38>
   4e6a8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4e6ac:	movw	r1, #0
   4e6b0:	sdiv	r0, r1, r0
   4e6b4:	ldr	r1, [fp, #8]
   4e6b8:	cmp	r0, r1
   4e6bc:	blt	4e6dc <__assert_fail@plt+0x3bb24>
   4e6c0:	b	4e6f0 <__assert_fail@plt+0x3bb38>
   4e6c4:	ldr	r0, [fp, #8]
   4e6c8:	mvn	r1, #0
   4e6cc:	udiv	r0, r1, r0
   4e6d0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   4e6d4:	cmp	r0, r1
   4e6d8:	bcs	4e6f0 <__assert_fail@plt+0x3bb38>
   4e6dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4e6e0:	ldr	r1, [fp, #8]
   4e6e4:	mul	r0, r0, r1
   4e6e8:	str	r0, [fp, #-28]	; 0xffffffe4
   4e6ec:	b	4ef94 <__assert_fail@plt+0x3c3dc>
   4e6f0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4e6f4:	ldr	r1, [fp, #8]
   4e6f8:	mul	r0, r0, r1
   4e6fc:	str	r0, [fp, #-28]	; 0xffffffe4
   4e700:	b	4ef98 <__assert_fail@plt+0x3c3e0>
   4e704:	b	4e708 <__assert_fail@plt+0x3bb50>
   4e708:	b	4e70c <__assert_fail@plt+0x3bb54>
   4e70c:	ldr	r0, [fp, #8]
   4e710:	cmp	r0, #0
   4e714:	bge	4e818 <__assert_fail@plt+0x3bc60>
   4e718:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4e71c:	cmp	r0, #0
   4e720:	bge	4e7ac <__assert_fail@plt+0x3bbf4>
   4e724:	b	4e728 <__assert_fail@plt+0x3bb70>
   4e728:	ldr	r0, [pc, #2192]	; 4efc0 <__assert_fail@plt+0x3c408>
   4e72c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   4e730:	ldr	r2, [fp, #8]
   4e734:	sdiv	r0, r0, r2
   4e738:	cmp	r1, r0
   4e73c:	blt	4e8a8 <__assert_fail@plt+0x3bcf0>
   4e740:	b	4e8bc <__assert_fail@plt+0x3bd04>
   4e744:	b	4e748 <__assert_fail@plt+0x3bb90>
   4e748:	ldr	r0, [pc, #2164]	; 4efc4 <__assert_fail@plt+0x3c40c>
   4e74c:	ldr	r1, [fp, #8]
   4e750:	cmp	r1, r0
   4e754:	blt	4e76c <__assert_fail@plt+0x3bbb4>
   4e758:	b	4e778 <__assert_fail@plt+0x3bbc0>
   4e75c:	ldr	r0, [fp, #8]
   4e760:	movw	r1, #0
   4e764:	cmp	r1, r0
   4e768:	bge	4e778 <__assert_fail@plt+0x3bbc0>
   4e76c:	movw	r0, #0
   4e770:	str	r0, [sp, #140]	; 0x8c
   4e774:	b	4e790 <__assert_fail@plt+0x3bbd8>
   4e778:	ldr	r0, [pc, #2112]	; 4efc0 <__assert_fail@plt+0x3c408>
   4e77c:	ldr	r1, [fp, #8]
   4e780:	movw	r2, #0
   4e784:	sub	r1, r2, r1
   4e788:	sdiv	r0, r0, r1
   4e78c:	str	r0, [sp, #140]	; 0x8c
   4e790:	ldr	r0, [sp, #140]	; 0x8c
   4e794:	ldr	r1, [fp, #-24]	; 0xffffffe8
   4e798:	mvn	r2, #0
   4e79c:	sub	r1, r2, r1
   4e7a0:	cmp	r0, r1
   4e7a4:	ble	4e8a8 <__assert_fail@plt+0x3bcf0>
   4e7a8:	b	4e8bc <__assert_fail@plt+0x3bd04>
   4e7ac:	ldr	r0, [fp, #8]
   4e7b0:	cmn	r0, #1
   4e7b4:	bne	4e7fc <__assert_fail@plt+0x3bc44>
   4e7b8:	b	4e7bc <__assert_fail@plt+0x3bc04>
   4e7bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4e7c0:	add	r0, r0, #-2147483648	; 0x80000000
   4e7c4:	movw	r1, #0
   4e7c8:	cmp	r1, r0
   4e7cc:	blt	4e8a8 <__assert_fail@plt+0x3bcf0>
   4e7d0:	b	4e8bc <__assert_fail@plt+0x3bd04>
   4e7d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4e7d8:	movw	r1, #0
   4e7dc:	cmp	r1, r0
   4e7e0:	bge	4e8bc <__assert_fail@plt+0x3bd04>
   4e7e4:	ldr	r0, [pc, #2004]	; 4efc0 <__assert_fail@plt+0x3c408>
   4e7e8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   4e7ec:	sub	r1, r1, #1
   4e7f0:	cmp	r0, r1
   4e7f4:	blt	4e8a8 <__assert_fail@plt+0x3bcf0>
   4e7f8:	b	4e8bc <__assert_fail@plt+0x3bd04>
   4e7fc:	ldr	r0, [pc, #1988]	; 4efc8 <__assert_fail@plt+0x3c410>
   4e800:	ldr	r1, [fp, #8]
   4e804:	sdiv	r0, r0, r1
   4e808:	ldr	r1, [fp, #-24]	; 0xffffffe8
   4e80c:	cmp	r0, r1
   4e810:	blt	4e8a8 <__assert_fail@plt+0x3bcf0>
   4e814:	b	4e8bc <__assert_fail@plt+0x3bd04>
   4e818:	ldr	r0, [fp, #8]
   4e81c:	cmp	r0, #0
   4e820:	bne	4e828 <__assert_fail@plt+0x3bc70>
   4e824:	b	4e8bc <__assert_fail@plt+0x3bd04>
   4e828:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4e82c:	cmp	r0, #0
   4e830:	bge	4e890 <__assert_fail@plt+0x3bcd8>
   4e834:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4e838:	cmn	r0, #1
   4e83c:	bne	4e874 <__assert_fail@plt+0x3bcbc>
   4e840:	b	4e844 <__assert_fail@plt+0x3bc8c>
   4e844:	ldr	r0, [fp, #8]
   4e848:	add	r0, r0, #-2147483648	; 0x80000000
   4e84c:	movw	r1, #0
   4e850:	cmp	r1, r0
   4e854:	blt	4e8a8 <__assert_fail@plt+0x3bcf0>
   4e858:	b	4e8bc <__assert_fail@plt+0x3bd04>
   4e85c:	ldr	r0, [pc, #1884]	; 4efc0 <__assert_fail@plt+0x3c408>
   4e860:	ldr	r1, [fp, #8]
   4e864:	sub	r1, r1, #1
   4e868:	cmp	r0, r1
   4e86c:	blt	4e8a8 <__assert_fail@plt+0x3bcf0>
   4e870:	b	4e8bc <__assert_fail@plt+0x3bd04>
   4e874:	ldr	r0, [pc, #1868]	; 4efc8 <__assert_fail@plt+0x3c410>
   4e878:	ldr	r1, [fp, #-24]	; 0xffffffe8
   4e87c:	sdiv	r0, r0, r1
   4e880:	ldr	r1, [fp, #8]
   4e884:	cmp	r0, r1
   4e888:	blt	4e8a8 <__assert_fail@plt+0x3bcf0>
   4e88c:	b	4e8bc <__assert_fail@plt+0x3bd04>
   4e890:	ldr	r0, [pc, #1832]	; 4efc0 <__assert_fail@plt+0x3c408>
   4e894:	ldr	r1, [fp, #8]
   4e898:	sdiv	r0, r0, r1
   4e89c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   4e8a0:	cmp	r0, r1
   4e8a4:	bge	4e8bc <__assert_fail@plt+0x3bd04>
   4e8a8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4e8ac:	ldr	r1, [fp, #8]
   4e8b0:	mul	r0, r0, r1
   4e8b4:	str	r0, [fp, #-28]	; 0xffffffe4
   4e8b8:	b	4ef94 <__assert_fail@plt+0x3c3dc>
   4e8bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4e8c0:	ldr	r1, [fp, #8]
   4e8c4:	mul	r0, r0, r1
   4e8c8:	str	r0, [fp, #-28]	; 0xffffffe4
   4e8cc:	b	4ef98 <__assert_fail@plt+0x3c3e0>
   4e8d0:	ldr	r0, [fp, #8]
   4e8d4:	cmp	r0, #0
   4e8d8:	bge	4e9e8 <__assert_fail@plt+0x3be30>
   4e8dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4e8e0:	cmp	r0, #0
   4e8e4:	bge	4e970 <__assert_fail@plt+0x3bdb8>
   4e8e8:	b	4e908 <__assert_fail@plt+0x3bd50>
   4e8ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4e8f0:	ldr	r1, [fp, #8]
   4e8f4:	mvn	r2, #0
   4e8f8:	udiv	r1, r2, r1
   4e8fc:	cmp	r0, r1
   4e900:	bcc	4ea84 <__assert_fail@plt+0x3becc>
   4e904:	b	4ea98 <__assert_fail@plt+0x3bee0>
   4e908:	b	4e90c <__assert_fail@plt+0x3bd54>
   4e90c:	ldr	r0, [pc, #1712]	; 4efc4 <__assert_fail@plt+0x3c40c>
   4e910:	ldr	r1, [fp, #8]
   4e914:	cmp	r1, r0
   4e918:	blt	4e930 <__assert_fail@plt+0x3bd78>
   4e91c:	b	4e93c <__assert_fail@plt+0x3bd84>
   4e920:	ldr	r0, [fp, #8]
   4e924:	movw	r1, #0
   4e928:	cmp	r1, r0
   4e92c:	bge	4e93c <__assert_fail@plt+0x3bd84>
   4e930:	movw	r0, #1
   4e934:	str	r0, [sp, #136]	; 0x88
   4e938:	b	4e954 <__assert_fail@plt+0x3bd9c>
   4e93c:	ldr	r0, [fp, #8]
   4e940:	movw	r1, #0
   4e944:	sub	r0, r1, r0
   4e948:	mvn	r1, #0
   4e94c:	udiv	r0, r1, r0
   4e950:	str	r0, [sp, #136]	; 0x88
   4e954:	ldr	r0, [sp, #136]	; 0x88
   4e958:	ldr	r1, [fp, #-24]	; 0xffffffe8
   4e95c:	mvn	r2, #0
   4e960:	sub	r1, r2, r1
   4e964:	cmp	r0, r1
   4e968:	bls	4ea84 <__assert_fail@plt+0x3becc>
   4e96c:	b	4ea98 <__assert_fail@plt+0x3bee0>
   4e970:	b	4e974 <__assert_fail@plt+0x3bdbc>
   4e974:	b	4e9cc <__assert_fail@plt+0x3be14>
   4e978:	b	4e9cc <__assert_fail@plt+0x3be14>
   4e97c:	ldr	r0, [fp, #8]
   4e980:	cmn	r0, #1
   4e984:	bne	4e9cc <__assert_fail@plt+0x3be14>
   4e988:	b	4e98c <__assert_fail@plt+0x3bdd4>
   4e98c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4e990:	add	r0, r0, #0
   4e994:	movw	r1, #0
   4e998:	cmp	r1, r0
   4e99c:	blt	4ea84 <__assert_fail@plt+0x3becc>
   4e9a0:	b	4ea98 <__assert_fail@plt+0x3bee0>
   4e9a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4e9a8:	movw	r1, #0
   4e9ac:	cmp	r1, r0
   4e9b0:	bge	4ea98 <__assert_fail@plt+0x3bee0>
   4e9b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4e9b8:	sub	r0, r0, #1
   4e9bc:	mvn	r1, #0
   4e9c0:	cmp	r1, r0
   4e9c4:	blt	4ea84 <__assert_fail@plt+0x3becc>
   4e9c8:	b	4ea98 <__assert_fail@plt+0x3bee0>
   4e9cc:	ldr	r0, [fp, #8]
   4e9d0:	movw	r1, #0
   4e9d4:	sdiv	r0, r1, r0
   4e9d8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   4e9dc:	cmp	r0, r1
   4e9e0:	blt	4ea84 <__assert_fail@plt+0x3becc>
   4e9e4:	b	4ea98 <__assert_fail@plt+0x3bee0>
   4e9e8:	ldr	r0, [fp, #8]
   4e9ec:	cmp	r0, #0
   4e9f0:	bne	4e9f8 <__assert_fail@plt+0x3be40>
   4e9f4:	b	4ea98 <__assert_fail@plt+0x3bee0>
   4e9f8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4e9fc:	cmp	r0, #0
   4ea00:	bge	4ea6c <__assert_fail@plt+0x3beb4>
   4ea04:	b	4ea08 <__assert_fail@plt+0x3be50>
   4ea08:	b	4ea50 <__assert_fail@plt+0x3be98>
   4ea0c:	b	4ea50 <__assert_fail@plt+0x3be98>
   4ea10:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4ea14:	cmn	r0, #1
   4ea18:	bne	4ea50 <__assert_fail@plt+0x3be98>
   4ea1c:	b	4ea20 <__assert_fail@plt+0x3be68>
   4ea20:	ldr	r0, [fp, #8]
   4ea24:	add	r0, r0, #0
   4ea28:	movw	r1, #0
   4ea2c:	cmp	r1, r0
   4ea30:	blt	4ea84 <__assert_fail@plt+0x3becc>
   4ea34:	b	4ea98 <__assert_fail@plt+0x3bee0>
   4ea38:	ldr	r0, [fp, #8]
   4ea3c:	sub	r0, r0, #1
   4ea40:	mvn	r1, #0
   4ea44:	cmp	r1, r0
   4ea48:	blt	4ea84 <__assert_fail@plt+0x3becc>
   4ea4c:	b	4ea98 <__assert_fail@plt+0x3bee0>
   4ea50:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4ea54:	movw	r1, #0
   4ea58:	sdiv	r0, r1, r0
   4ea5c:	ldr	r1, [fp, #8]
   4ea60:	cmp	r0, r1
   4ea64:	blt	4ea84 <__assert_fail@plt+0x3becc>
   4ea68:	b	4ea98 <__assert_fail@plt+0x3bee0>
   4ea6c:	ldr	r0, [fp, #8]
   4ea70:	mvn	r1, #0
   4ea74:	udiv	r0, r1, r0
   4ea78:	ldr	r1, [fp, #-24]	; 0xffffffe8
   4ea7c:	cmp	r0, r1
   4ea80:	bcs	4ea98 <__assert_fail@plt+0x3bee0>
   4ea84:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4ea88:	ldr	r1, [fp, #8]
   4ea8c:	mul	r0, r0, r1
   4ea90:	str	r0, [fp, #-28]	; 0xffffffe4
   4ea94:	b	4ef94 <__assert_fail@plt+0x3c3dc>
   4ea98:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4ea9c:	ldr	r1, [fp, #8]
   4eaa0:	mul	r0, r0, r1
   4eaa4:	str	r0, [fp, #-28]	; 0xffffffe4
   4eaa8:	b	4ef98 <__assert_fail@plt+0x3c3e0>
   4eaac:	b	4eab0 <__assert_fail@plt+0x3bef8>
   4eab0:	ldr	r0, [fp, #8]
   4eab4:	cmp	r0, #0
   4eab8:	bge	4ec40 <__assert_fail@plt+0x3c088>
   4eabc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4eac0:	cmp	r0, #0
   4eac4:	bge	4ebac <__assert_fail@plt+0x3bff4>
   4eac8:	b	4eacc <__assert_fail@plt+0x3bf14>
   4eacc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4ead0:	ldr	r1, [fp, #8]
   4ead4:	asr	r3, r1, #31
   4ead8:	mvn	r2, #0
   4eadc:	mvn	ip, #-2147483648	; 0x80000000
   4eae0:	str	r0, [sp, #132]	; 0x84
   4eae4:	mov	r0, r2
   4eae8:	str	r1, [sp, #128]	; 0x80
   4eaec:	mov	r1, ip
   4eaf0:	ldr	r2, [sp, #128]	; 0x80
   4eaf4:	bl	77780 <__assert_fail@plt+0x64bc8>
   4eaf8:	ldr	r2, [sp, #132]	; 0x84
   4eafc:	subs	r0, r2, r0
   4eb00:	rscs	r1, r1, r2, asr #31
   4eb04:	str	r0, [sp, #124]	; 0x7c
   4eb08:	str	r1, [sp, #120]	; 0x78
   4eb0c:	blt	4ed20 <__assert_fail@plt+0x3c168>
   4eb10:	b	4ed34 <__assert_fail@plt+0x3c17c>
   4eb14:	b	4eb18 <__assert_fail@plt+0x3bf60>
   4eb18:	ldr	r0, [pc, #1188]	; 4efc4 <__assert_fail@plt+0x3c40c>
   4eb1c:	ldr	r1, [fp, #8]
   4eb20:	cmp	r1, r0
   4eb24:	blt	4eb3c <__assert_fail@plt+0x3bf84>
   4eb28:	b	4eb50 <__assert_fail@plt+0x3bf98>
   4eb2c:	ldr	r0, [fp, #8]
   4eb30:	movw	r1, #0
   4eb34:	cmp	r1, r0
   4eb38:	bge	4eb50 <__assert_fail@plt+0x3bf98>
   4eb3c:	mov	r0, #0
   4eb40:	mvn	r1, #0
   4eb44:	str	r1, [sp, #116]	; 0x74
   4eb48:	str	r0, [sp, #112]	; 0x70
   4eb4c:	b	4eb84 <__assert_fail@plt+0x3bfcc>
   4eb50:	ldr	r0, [fp, #8]
   4eb54:	rsb	r0, r0, #0
   4eb58:	asr	r3, r0, #31
   4eb5c:	mvn	r1, #0
   4eb60:	mvn	r2, #-2147483648	; 0x80000000
   4eb64:	str	r0, [sp, #108]	; 0x6c
   4eb68:	mov	r0, r1
   4eb6c:	mov	r1, r2
   4eb70:	ldr	r2, [sp, #108]	; 0x6c
   4eb74:	bl	77780 <__assert_fail@plt+0x64bc8>
   4eb78:	str	r0, [sp, #116]	; 0x74
   4eb7c:	str	r1, [sp, #112]	; 0x70
   4eb80:	b	4eb84 <__assert_fail@plt+0x3bfcc>
   4eb84:	ldr	r0, [sp, #112]	; 0x70
   4eb88:	ldr	r1, [sp, #116]	; 0x74
   4eb8c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   4eb90:	mvn	r2, r2
   4eb94:	subs	r1, r2, r1
   4eb98:	rscs	r0, r0, r2, asr #31
   4eb9c:	str	r1, [sp, #104]	; 0x68
   4eba0:	str	r0, [sp, #100]	; 0x64
   4eba4:	bge	4ed20 <__assert_fail@plt+0x3c168>
   4eba8:	b	4ed34 <__assert_fail@plt+0x3c17c>
   4ebac:	ldr	r0, [fp, #8]
   4ebb0:	cmn	r0, #1
   4ebb4:	bne	4ec00 <__assert_fail@plt+0x3c048>
   4ebb8:	b	4ebbc <__assert_fail@plt+0x3c004>
   4ebbc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4ebc0:	mov	r1, #-2147483648	; 0x80000000
   4ebc4:	add	r1, r1, r0, asr #31
   4ebc8:	rsbs	r0, r0, #0
   4ebcc:	rscs	r1, r1, #0
   4ebd0:	str	r0, [sp, #96]	; 0x60
   4ebd4:	str	r1, [sp, #92]	; 0x5c
   4ebd8:	blt	4ed20 <__assert_fail@plt+0x3c168>
   4ebdc:	b	4ed34 <__assert_fail@plt+0x3c17c>
   4ebe0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4ebe4:	movw	r1, #0
   4ebe8:	cmp	r1, r0
   4ebec:	bge	4ed34 <__assert_fail@plt+0x3c17c>
   4ebf0:	mov	r0, #0
   4ebf4:	cmp	r0, #0
   4ebf8:	bne	4ed20 <__assert_fail@plt+0x3c168>
   4ebfc:	b	4ed34 <__assert_fail@plt+0x3c17c>
   4ec00:	ldr	r0, [fp, #8]
   4ec04:	asr	r3, r0, #31
   4ec08:	mov	r1, #0
   4ec0c:	mov	r2, #-2147483648	; 0x80000000
   4ec10:	str	r0, [sp, #88]	; 0x58
   4ec14:	mov	r0, r1
   4ec18:	mov	r1, r2
   4ec1c:	ldr	r2, [sp, #88]	; 0x58
   4ec20:	bl	77780 <__assert_fail@plt+0x64bc8>
   4ec24:	ldr	r2, [fp, #-24]	; 0xffffffe8
   4ec28:	subs	r0, r0, r2
   4ec2c:	sbcs	r1, r1, r2, asr #31
   4ec30:	str	r0, [sp, #84]	; 0x54
   4ec34:	str	r1, [sp, #80]	; 0x50
   4ec38:	blt	4ed20 <__assert_fail@plt+0x3c168>
   4ec3c:	b	4ed34 <__assert_fail@plt+0x3c17c>
   4ec40:	ldr	r0, [fp, #8]
   4ec44:	cmp	r0, #0
   4ec48:	bne	4ec50 <__assert_fail@plt+0x3c098>
   4ec4c:	b	4ed34 <__assert_fail@plt+0x3c17c>
   4ec50:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4ec54:	cmp	r0, #0
   4ec58:	bge	4ece0 <__assert_fail@plt+0x3c128>
   4ec5c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4ec60:	cmn	r0, #1
   4ec64:	bne	4eca0 <__assert_fail@plt+0x3c0e8>
   4ec68:	b	4ec6c <__assert_fail@plt+0x3c0b4>
   4ec6c:	ldr	r0, [fp, #8]
   4ec70:	mov	r1, #-2147483648	; 0x80000000
   4ec74:	add	r1, r1, r0, asr #31
   4ec78:	rsbs	r0, r0, #0
   4ec7c:	rscs	r1, r1, #0
   4ec80:	str	r0, [sp, #76]	; 0x4c
   4ec84:	str	r1, [sp, #72]	; 0x48
   4ec88:	blt	4ed20 <__assert_fail@plt+0x3c168>
   4ec8c:	b	4ed34 <__assert_fail@plt+0x3c17c>
   4ec90:	mov	r0, #0
   4ec94:	cmp	r0, #0
   4ec98:	bne	4ed20 <__assert_fail@plt+0x3c168>
   4ec9c:	b	4ed34 <__assert_fail@plt+0x3c17c>
   4eca0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4eca4:	asr	r3, r0, #31
   4eca8:	mov	r1, #0
   4ecac:	mov	r2, #-2147483648	; 0x80000000
   4ecb0:	str	r0, [sp, #68]	; 0x44
   4ecb4:	mov	r0, r1
   4ecb8:	mov	r1, r2
   4ecbc:	ldr	r2, [sp, #68]	; 0x44
   4ecc0:	bl	77780 <__assert_fail@plt+0x64bc8>
   4ecc4:	ldr	r2, [fp, #8]
   4ecc8:	subs	r0, r0, r2
   4eccc:	sbcs	r1, r1, r2, asr #31
   4ecd0:	str	r0, [sp, #64]	; 0x40
   4ecd4:	str	r1, [sp, #60]	; 0x3c
   4ecd8:	blt	4ed20 <__assert_fail@plt+0x3c168>
   4ecdc:	b	4ed34 <__assert_fail@plt+0x3c17c>
   4ece0:	ldr	r0, [fp, #8]
   4ece4:	asr	r3, r0, #31
   4ece8:	mvn	r1, #0
   4ecec:	mvn	r2, #-2147483648	; 0x80000000
   4ecf0:	str	r0, [sp, #56]	; 0x38
   4ecf4:	mov	r0, r1
   4ecf8:	mov	r1, r2
   4ecfc:	ldr	r2, [sp, #56]	; 0x38
   4ed00:	bl	77780 <__assert_fail@plt+0x64bc8>
   4ed04:	ldr	r2, [fp, #-24]	; 0xffffffe8
   4ed08:	subs	r0, r0, r2
   4ed0c:	sbcs	r1, r1, r2, asr #31
   4ed10:	str	r0, [sp, #52]	; 0x34
   4ed14:	str	r1, [sp, #48]	; 0x30
   4ed18:	bge	4ed34 <__assert_fail@plt+0x3c17c>
   4ed1c:	b	4ed20 <__assert_fail@plt+0x3c168>
   4ed20:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4ed24:	ldr	r1, [fp, #8]
   4ed28:	mul	r0, r0, r1
   4ed2c:	str	r0, [fp, #-28]	; 0xffffffe4
   4ed30:	b	4ef94 <__assert_fail@plt+0x3c3dc>
   4ed34:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4ed38:	ldr	r1, [fp, #8]
   4ed3c:	mul	r0, r0, r1
   4ed40:	str	r0, [fp, #-28]	; 0xffffffe4
   4ed44:	b	4ef98 <__assert_fail@plt+0x3c3e0>
   4ed48:	ldr	r0, [fp, #8]
   4ed4c:	cmp	r0, #0
   4ed50:	bge	4eeb0 <__assert_fail@plt+0x3c2f8>
   4ed54:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4ed58:	cmp	r0, #0
   4ed5c:	bge	4ee38 <__assert_fail@plt+0x3c280>
   4ed60:	b	4eda8 <__assert_fail@plt+0x3c1f0>
   4ed64:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4ed68:	ldr	r1, [fp, #8]
   4ed6c:	asr	r3, r1, #31
   4ed70:	mvn	r2, #0
   4ed74:	str	r0, [sp, #44]	; 0x2c
   4ed78:	mov	r0, r2
   4ed7c:	str	r1, [sp, #40]	; 0x28
   4ed80:	mov	r1, r2
   4ed84:	ldr	r2, [sp, #40]	; 0x28
   4ed88:	bl	77854 <__assert_fail@plt+0x64c9c>
   4ed8c:	ldr	r2, [sp, #44]	; 0x2c
   4ed90:	subs	r0, r2, r0
   4ed94:	rscs	r1, r1, r2, asr #31
   4ed98:	str	r0, [sp, #36]	; 0x24
   4ed9c:	str	r1, [sp, #32]
   4eda0:	bcc	4ef6c <__assert_fail@plt+0x3c3b4>
   4eda4:	b	4ef80 <__assert_fail@plt+0x3c3c8>
   4eda8:	b	4edac <__assert_fail@plt+0x3c1f4>
   4edac:	ldr	r0, [pc, #528]	; 4efc4 <__assert_fail@plt+0x3c40c>
   4edb0:	ldr	r1, [fp, #8]
   4edb4:	cmp	r1, r0
   4edb8:	blt	4edd0 <__assert_fail@plt+0x3c218>
   4edbc:	b	4ede4 <__assert_fail@plt+0x3c22c>
   4edc0:	ldr	r0, [fp, #8]
   4edc4:	movw	r1, #0
   4edc8:	cmp	r1, r0
   4edcc:	bge	4ede4 <__assert_fail@plt+0x3c22c>
   4edd0:	mov	r0, #1
   4edd4:	mvn	r1, #0
   4edd8:	str	r1, [sp, #28]
   4eddc:	str	r0, [sp, #24]
   4ede0:	b	4ee10 <__assert_fail@plt+0x3c258>
   4ede4:	ldr	r0, [fp, #8]
   4ede8:	rsb	r0, r0, #0
   4edec:	asr	r3, r0, #31
   4edf0:	mvn	r1, #0
   4edf4:	str	r0, [sp, #20]
   4edf8:	mov	r0, r1
   4edfc:	ldr	r2, [sp, #20]
   4ee00:	bl	77854 <__assert_fail@plt+0x64c9c>
   4ee04:	str	r0, [sp, #28]
   4ee08:	str	r1, [sp, #24]
   4ee0c:	b	4ee10 <__assert_fail@plt+0x3c258>
   4ee10:	ldr	r0, [sp, #24]
   4ee14:	ldr	r1, [sp, #28]
   4ee18:	ldr	r2, [fp, #-24]	; 0xffffffe8
   4ee1c:	mvn	r2, r2
   4ee20:	subs	r1, r2, r1
   4ee24:	rscs	r0, r0, r2, asr #31
   4ee28:	str	r1, [sp, #16]
   4ee2c:	str	r0, [sp, #12]
   4ee30:	bcs	4ef6c <__assert_fail@plt+0x3c3b4>
   4ee34:	b	4ef80 <__assert_fail@plt+0x3c3c8>
   4ee38:	b	4ee3c <__assert_fail@plt+0x3c284>
   4ee3c:	b	4ee94 <__assert_fail@plt+0x3c2dc>
   4ee40:	b	4ee94 <__assert_fail@plt+0x3c2dc>
   4ee44:	ldr	r0, [fp, #8]
   4ee48:	cmn	r0, #1
   4ee4c:	bne	4ee94 <__assert_fail@plt+0x3c2dc>
   4ee50:	b	4ee54 <__assert_fail@plt+0x3c29c>
   4ee54:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4ee58:	add	r0, r0, #0
   4ee5c:	movw	r1, #0
   4ee60:	cmp	r1, r0
   4ee64:	blt	4ef6c <__assert_fail@plt+0x3c3b4>
   4ee68:	b	4ef80 <__assert_fail@plt+0x3c3c8>
   4ee6c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4ee70:	movw	r1, #0
   4ee74:	cmp	r1, r0
   4ee78:	bge	4ef80 <__assert_fail@plt+0x3c3c8>
   4ee7c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4ee80:	sub	r0, r0, #1
   4ee84:	mvn	r1, #0
   4ee88:	cmp	r1, r0
   4ee8c:	blt	4ef6c <__assert_fail@plt+0x3c3b4>
   4ee90:	b	4ef80 <__assert_fail@plt+0x3c3c8>
   4ee94:	ldr	r0, [fp, #8]
   4ee98:	movw	r1, #0
   4ee9c:	sdiv	r0, r1, r0
   4eea0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   4eea4:	cmp	r0, r1
   4eea8:	blt	4ef6c <__assert_fail@plt+0x3c3b4>
   4eeac:	b	4ef80 <__assert_fail@plt+0x3c3c8>
   4eeb0:	ldr	r0, [fp, #8]
   4eeb4:	cmp	r0, #0
   4eeb8:	bne	4eec0 <__assert_fail@plt+0x3c308>
   4eebc:	b	4ef80 <__assert_fail@plt+0x3c3c8>
   4eec0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4eec4:	cmp	r0, #0
   4eec8:	bge	4ef34 <__assert_fail@plt+0x3c37c>
   4eecc:	b	4eed0 <__assert_fail@plt+0x3c318>
   4eed0:	b	4ef18 <__assert_fail@plt+0x3c360>
   4eed4:	b	4ef18 <__assert_fail@plt+0x3c360>
   4eed8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4eedc:	cmn	r0, #1
   4eee0:	bne	4ef18 <__assert_fail@plt+0x3c360>
   4eee4:	b	4eee8 <__assert_fail@plt+0x3c330>
   4eee8:	ldr	r0, [fp, #8]
   4eeec:	add	r0, r0, #0
   4eef0:	movw	r1, #0
   4eef4:	cmp	r1, r0
   4eef8:	blt	4ef6c <__assert_fail@plt+0x3c3b4>
   4eefc:	b	4ef80 <__assert_fail@plt+0x3c3c8>
   4ef00:	ldr	r0, [fp, #8]
   4ef04:	sub	r0, r0, #1
   4ef08:	mvn	r1, #0
   4ef0c:	cmp	r1, r0
   4ef10:	blt	4ef6c <__assert_fail@plt+0x3c3b4>
   4ef14:	b	4ef80 <__assert_fail@plt+0x3c3c8>
   4ef18:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4ef1c:	movw	r1, #0
   4ef20:	sdiv	r0, r1, r0
   4ef24:	ldr	r1, [fp, #8]
   4ef28:	cmp	r0, r1
   4ef2c:	blt	4ef6c <__assert_fail@plt+0x3c3b4>
   4ef30:	b	4ef80 <__assert_fail@plt+0x3c3c8>
   4ef34:	ldr	r0, [fp, #8]
   4ef38:	asr	r3, r0, #31
   4ef3c:	mvn	r1, #0
   4ef40:	str	r0, [sp, #8]
   4ef44:	mov	r0, r1
   4ef48:	ldr	r2, [sp, #8]
   4ef4c:	bl	77854 <__assert_fail@plt+0x64c9c>
   4ef50:	ldr	r2, [fp, #-24]	; 0xffffffe8
   4ef54:	subs	r0, r0, r2
   4ef58:	sbcs	r1, r1, r2, asr #31
   4ef5c:	str	r0, [sp, #4]
   4ef60:	str	r1, [sp]
   4ef64:	bcs	4ef80 <__assert_fail@plt+0x3c3c8>
   4ef68:	b	4ef6c <__assert_fail@plt+0x3c3b4>
   4ef6c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4ef70:	ldr	r1, [fp, #8]
   4ef74:	mul	r0, r0, r1
   4ef78:	str	r0, [fp, #-28]	; 0xffffffe4
   4ef7c:	b	4ef94 <__assert_fail@plt+0x3c3dc>
   4ef80:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4ef84:	ldr	r1, [fp, #8]
   4ef88:	mul	r0, r0, r1
   4ef8c:	str	r0, [fp, #-28]	; 0xffffffe4
   4ef90:	b	4ef98 <__assert_fail@plt+0x3c3e0>
   4ef94:	bl	4f170 <__assert_fail@plt+0x3c5b8>
   4ef98:	ldr	r0, [fp, #-4]
   4ef9c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   4efa0:	bl	4c42c <__assert_fail@plt+0x39874>
   4efa4:	str	r0, [fp, #-4]
   4efa8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4efac:	ldr	r1, [fp, #-8]
   4efb0:	str	r0, [r1]
   4efb4:	ldr	r0, [fp, #-4]
   4efb8:	mov	sp, fp
   4efbc:	pop	{fp, pc}
   4efc0:	svcvc	0x00ffffff
   4efc4:	andhi	r0, r0, r1
   4efc8:	andhi	r0, r0, r0
   4efcc:			; <UNDEFINED> instruction: 0xffff8000
   4efd0:	push	{fp, lr}
   4efd4:	mov	fp, sp
   4efd8:	sub	sp, sp, #8
   4efdc:	str	r0, [sp, #4]
   4efe0:	ldr	r0, [sp, #4]
   4efe4:	movw	r1, #1
   4efe8:	bl	4eff4 <__assert_fail@plt+0x3c43c>
   4efec:	mov	sp, fp
   4eff0:	pop	{fp, pc}
   4eff4:	push	{fp, lr}
   4eff8:	mov	fp, sp
   4effc:	sub	sp, sp, #8
   4f000:	str	r0, [sp, #4]
   4f004:	str	r1, [sp]
   4f008:	ldr	r0, [sp, #4]
   4f00c:	ldr	r1, [sp]
   4f010:	bl	50240 <__assert_fail@plt+0x3d688>
   4f014:	bl	4c3b8 <__assert_fail@plt+0x39800>
   4f018:	mov	sp, fp
   4f01c:	pop	{fp, pc}
   4f020:	push	{fp, lr}
   4f024:	mov	fp, sp
   4f028:	sub	sp, sp, #8
   4f02c:	str	r0, [sp, #4]
   4f030:	ldr	r0, [sp, #4]
   4f034:	movw	r1, #1
   4f038:	bl	4f044 <__assert_fail@plt+0x3c48c>
   4f03c:	mov	sp, fp
   4f040:	pop	{fp, pc}
   4f044:	push	{fp, lr}
   4f048:	mov	fp, sp
   4f04c:	sub	sp, sp, #8
   4f050:	str	r0, [sp, #4]
   4f054:	str	r1, [sp]
   4f058:	ldr	r0, [sp, #4]
   4f05c:	ldr	r1, [sp]
   4f060:	bl	73218 <__assert_fail@plt+0x60660>
   4f064:	bl	4c3b8 <__assert_fail@plt+0x39800>
   4f068:	mov	sp, fp
   4f06c:	pop	{fp, pc}
   4f070:	push	{fp, lr}
   4f074:	mov	fp, sp
   4f078:	sub	sp, sp, #16
   4f07c:	str	r0, [fp, #-4]
   4f080:	str	r1, [sp, #8]
   4f084:	ldr	r0, [sp, #8]
   4f088:	bl	4c394 <__assert_fail@plt+0x397dc>
   4f08c:	ldr	r1, [fp, #-4]
   4f090:	ldr	r2, [sp, #8]
   4f094:	str	r0, [sp, #4]
   4f098:	bl	125c4 <memcpy@plt>
   4f09c:	ldr	r0, [sp, #4]
   4f0a0:	mov	sp, fp
   4f0a4:	pop	{fp, pc}
   4f0a8:	push	{fp, lr}
   4f0ac:	mov	fp, sp
   4f0b0:	sub	sp, sp, #16
   4f0b4:	str	r0, [fp, #-4]
   4f0b8:	str	r1, [sp, #8]
   4f0bc:	ldr	r0, [sp, #8]
   4f0c0:	bl	4c3e8 <__assert_fail@plt+0x39830>
   4f0c4:	ldr	r1, [fp, #-4]
   4f0c8:	ldr	r2, [sp, #8]
   4f0cc:	str	r0, [sp, #4]
   4f0d0:	bl	125c4 <memcpy@plt>
   4f0d4:	ldr	r0, [sp, #4]
   4f0d8:	mov	sp, fp
   4f0dc:	pop	{fp, pc}
   4f0e0:	push	{fp, lr}
   4f0e4:	mov	fp, sp
   4f0e8:	sub	sp, sp, #16
   4f0ec:	str	r0, [fp, #-4]
   4f0f0:	str	r1, [sp, #8]
   4f0f4:	ldr	r0, [sp, #8]
   4f0f8:	add	r0, r0, #1
   4f0fc:	bl	4c3e8 <__assert_fail@plt+0x39830>
   4f100:	str	r0, [sp, #4]
   4f104:	ldr	r0, [sp, #4]
   4f108:	ldr	r1, [sp, #8]
   4f10c:	add	r0, r0, r1
   4f110:	movw	r1, #0
   4f114:	strb	r1, [r0]
   4f118:	ldr	r0, [sp, #4]
   4f11c:	ldr	r1, [fp, #-4]
   4f120:	ldr	r2, [sp, #8]
   4f124:	str	r0, [sp]
   4f128:	bl	125c4 <memcpy@plt>
   4f12c:	ldr	r0, [sp]
   4f130:	mov	sp, fp
   4f134:	pop	{fp, pc}
   4f138:	push	{fp, lr}
   4f13c:	mov	fp, sp
   4f140:	sub	sp, sp, #8
   4f144:	str	r0, [sp, #4]
   4f148:	ldr	r0, [sp, #4]
   4f14c:	ldr	r1, [sp, #4]
   4f150:	str	r0, [sp]
   4f154:	mov	r0, r1
   4f158:	bl	12888 <strlen@plt>
   4f15c:	add	r1, r0, #1
   4f160:	ldr	r0, [sp]
   4f164:	bl	4f070 <__assert_fail@plt+0x3c4b8>
   4f168:	mov	sp, fp
   4f16c:	pop	{fp, pc}
   4f170:	push	{fp, lr}
   4f174:	mov	fp, sp
   4f178:	sub	sp, sp, #8
   4f17c:	movw	r0, #63180	; 0xf6cc
   4f180:	movt	r0, #8
   4f184:	ldr	r0, [r0]
   4f188:	movw	r1, #53744	; 0xd1f0
   4f18c:	movt	r1, #7
   4f190:	str	r0, [sp, #4]
   4f194:	mov	r0, r1
   4f198:	bl	12864 <gettext@plt>
   4f19c:	ldr	r1, [sp, #4]
   4f1a0:	str	r0, [sp]
   4f1a4:	mov	r0, r1
   4f1a8:	movw	r1, #0
   4f1ac:	movw	r2, #59431	; 0xe827
   4f1b0:	movt	r2, #7
   4f1b4:	ldr	r3, [sp]
   4f1b8:	bl	12780 <error@plt>
   4f1bc:	bl	12b64 <abort@plt>
   4f1c0:	push	{fp, lr}
   4f1c4:	mov	fp, sp
   4f1c8:	sub	sp, sp, #40	; 0x28
   4f1cc:	str	r0, [fp, #-4]
   4f1d0:	str	r1, [fp, #-8]
   4f1d4:	str	r2, [fp, #-12]
   4f1d8:	str	r3, [fp, #-16]
   4f1dc:	movw	r0, #1
   4f1e0:	strb	r0, [sp, #11]
   4f1e4:	bl	128d0 <__errno_location@plt>
   4f1e8:	movw	r1, #0
   4f1ec:	str	r1, [r0]
   4f1f0:	ldr	r0, [fp, #-16]
   4f1f4:	ldr	r1, [fp, #-4]
   4f1f8:	str	r0, [sp, #4]
   4f1fc:	mov	r0, r1
   4f200:	add	r1, sp, #12
   4f204:	ldr	r2, [sp, #4]
   4f208:	blx	r2
   4f20c:	vstr	d0, [sp, #16]
   4f210:	ldr	r0, [sp, #12]
   4f214:	ldr	r1, [fp, #-4]
   4f218:	cmp	r0, r1
   4f21c:	beq	4f240 <__assert_fail@plt+0x3c688>
   4f220:	ldr	r0, [fp, #-8]
   4f224:	movw	r1, #0
   4f228:	cmp	r0, r1
   4f22c:	bne	4f24c <__assert_fail@plt+0x3c694>
   4f230:	ldr	r0, [sp, #12]
   4f234:	ldrb	r0, [r0]
   4f238:	cmp	r0, #0
   4f23c:	beq	4f24c <__assert_fail@plt+0x3c694>
   4f240:	movw	r0, #0
   4f244:	strb	r0, [sp, #11]
   4f248:	b	4f278 <__assert_fail@plt+0x3c6c0>
   4f24c:	vldr	d16, [sp, #16]
   4f250:	vcmp.f64	d16, #0.0
   4f254:	vmrs	APSR_nzcv, fpscr
   4f258:	beq	4f274 <__assert_fail@plt+0x3c6bc>
   4f25c:	bl	128d0 <__errno_location@plt>
   4f260:	ldr	r0, [r0]
   4f264:	cmp	r0, #34	; 0x22
   4f268:	bne	4f274 <__assert_fail@plt+0x3c6bc>
   4f26c:	movw	r0, #0
   4f270:	strb	r0, [sp, #11]
   4f274:	b	4f278 <__assert_fail@plt+0x3c6c0>
   4f278:	ldr	r0, [fp, #-8]
   4f27c:	movw	r1, #0
   4f280:	cmp	r0, r1
   4f284:	beq	4f294 <__assert_fail@plt+0x3c6dc>
   4f288:	ldr	r0, [sp, #12]
   4f28c:	ldr	r1, [fp, #-8]
   4f290:	str	r0, [r1]
   4f294:	vldr	d16, [sp, #16]
   4f298:	ldr	r0, [fp, #-12]
   4f29c:	vstr	d16, [r0]
   4f2a0:	ldrb	r0, [sp, #11]
   4f2a4:	and	r0, r0, #1
   4f2a8:	mov	sp, fp
   4f2ac:	pop	{fp, pc}
   4f2b0:	push	{fp, lr}
   4f2b4:	mov	fp, sp
   4f2b8:	sub	sp, sp, #80	; 0x50
   4f2bc:	ldr	ip, [fp, #8]
   4f2c0:	str	r0, [fp, #-8]
   4f2c4:	str	r1, [fp, #-12]
   4f2c8:	str	r2, [fp, #-16]
   4f2cc:	str	r3, [fp, #-20]	; 0xffffffec
   4f2d0:	movw	r0, #0
   4f2d4:	str	r0, [fp, #-36]	; 0xffffffdc
   4f2d8:	ldr	r1, [fp, #-16]
   4f2dc:	cmp	r0, r1
   4f2e0:	str	ip, [sp, #20]
   4f2e4:	bgt	4f2f8 <__assert_fail@plt+0x3c740>
   4f2e8:	ldr	r0, [fp, #-16]
   4f2ec:	cmp	r0, #36	; 0x24
   4f2f0:	bgt	4f2f8 <__assert_fail@plt+0x3c740>
   4f2f4:	b	4f318 <__assert_fail@plt+0x3c760>
   4f2f8:	movw	r0, #58174	; 0xe33e
   4f2fc:	movt	r0, #7
   4f300:	movw	r1, #58212	; 0xe364
   4f304:	movt	r1, #7
   4f308:	movw	r2, #84	; 0x54
   4f30c:	movw	r3, #58224	; 0xe370
   4f310:	movt	r3, #7
   4f314:	bl	12bb8 <__assert_fail@plt>
   4f318:	ldr	r0, [fp, #-12]
   4f31c:	movw	r1, #0
   4f320:	cmp	r0, r1
   4f324:	beq	4f334 <__assert_fail@plt+0x3c77c>
   4f328:	ldr	r0, [fp, #-12]
   4f32c:	str	r0, [sp, #16]
   4f330:	b	4f340 <__assert_fail@plt+0x3c788>
   4f334:	sub	r0, fp, #24
   4f338:	str	r0, [sp, #16]
   4f33c:	b	4f340 <__assert_fail@plt+0x3c788>
   4f340:	ldr	r0, [sp, #16]
   4f344:	str	r0, [fp, #-28]	; 0xffffffe4
   4f348:	bl	128d0 <__errno_location@plt>
   4f34c:	movw	lr, #0
   4f350:	str	lr, [r0]
   4f354:	ldr	r0, [fp, #-8]
   4f358:	str	r0, [sp, #40]	; 0x28
   4f35c:	ldr	r0, [sp, #40]	; 0x28
   4f360:	ldrb	r0, [r0]
   4f364:	strb	r0, [sp, #39]	; 0x27
   4f368:	bl	12834 <__ctype_b_loc@plt>
   4f36c:	ldr	r0, [r0]
   4f370:	ldrb	lr, [sp, #39]	; 0x27
   4f374:	mov	r1, lr
   4f378:	add	r0, r0, lr, lsl #1
   4f37c:	ldrh	r0, [r0]
   4f380:	and	r0, r0, #8192	; 0x2000
   4f384:	cmp	r0, #0
   4f388:	str	r1, [sp, #12]
   4f38c:	beq	4f3a8 <__assert_fail@plt+0x3c7f0>
   4f390:	ldr	r0, [sp, #40]	; 0x28
   4f394:	add	r1, r0, #1
   4f398:	str	r1, [sp, #40]	; 0x28
   4f39c:	ldrb	r0, [r0, #1]
   4f3a0:	strb	r0, [sp, #39]	; 0x27
   4f3a4:	b	4f368 <__assert_fail@plt+0x3c7b0>
   4f3a8:	ldrb	r0, [sp, #39]	; 0x27
   4f3ac:	cmp	r0, #45	; 0x2d
   4f3b0:	bne	4f3c0 <__assert_fail@plt+0x3c808>
   4f3b4:	movw	r0, #4
   4f3b8:	str	r0, [fp, #-4]
   4f3bc:	b	4f910 <__assert_fail@plt+0x3cd58>
   4f3c0:	ldr	r0, [fp, #-8]
   4f3c4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   4f3c8:	ldr	r2, [fp, #-16]
   4f3cc:	bl	1287c <strtoul@plt>
   4f3d0:	str	r0, [fp, #-32]	; 0xffffffe0
   4f3d4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   4f3d8:	ldr	r0, [r0]
   4f3dc:	ldr	r1, [fp, #-8]
   4f3e0:	cmp	r0, r1
   4f3e4:	bne	4f448 <__assert_fail@plt+0x3c890>
   4f3e8:	ldr	r0, [fp, #8]
   4f3ec:	movw	r1, #0
   4f3f0:	cmp	r0, r1
   4f3f4:	beq	4f438 <__assert_fail@plt+0x3c880>
   4f3f8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   4f3fc:	ldr	r0, [r0]
   4f400:	ldrb	r0, [r0]
   4f404:	cmp	r0, #0
   4f408:	beq	4f438 <__assert_fail@plt+0x3c880>
   4f40c:	ldr	r0, [fp, #8]
   4f410:	ldr	r1, [fp, #-28]	; 0xffffffe4
   4f414:	ldr	r1, [r1]
   4f418:	ldrb	r1, [r1]
   4f41c:	bl	12894 <strchr@plt>
   4f420:	movw	r1, #0
   4f424:	cmp	r0, r1
   4f428:	beq	4f438 <__assert_fail@plt+0x3c880>
   4f42c:	movw	r0, #1
   4f430:	str	r0, [fp, #-32]	; 0xffffffe0
   4f434:	b	4f444 <__assert_fail@plt+0x3c88c>
   4f438:	movw	r0, #4
   4f43c:	str	r0, [fp, #-4]
   4f440:	b	4f910 <__assert_fail@plt+0x3cd58>
   4f444:	b	4f480 <__assert_fail@plt+0x3c8c8>
   4f448:	bl	128d0 <__errno_location@plt>
   4f44c:	ldr	r0, [r0]
   4f450:	cmp	r0, #0
   4f454:	beq	4f47c <__assert_fail@plt+0x3c8c4>
   4f458:	bl	128d0 <__errno_location@plt>
   4f45c:	ldr	r0, [r0]
   4f460:	cmp	r0, #34	; 0x22
   4f464:	beq	4f474 <__assert_fail@plt+0x3c8bc>
   4f468:	movw	r0, #4
   4f46c:	str	r0, [fp, #-4]
   4f470:	b	4f910 <__assert_fail@plt+0x3cd58>
   4f474:	movw	r0, #1
   4f478:	str	r0, [fp, #-36]	; 0xffffffdc
   4f47c:	b	4f480 <__assert_fail@plt+0x3c8c8>
   4f480:	ldr	r0, [fp, #8]
   4f484:	movw	r1, #0
   4f488:	cmp	r0, r1
   4f48c:	bne	4f4a8 <__assert_fail@plt+0x3c8f0>
   4f490:	ldr	r0, [fp, #-32]	; 0xffffffe0
   4f494:	ldr	r1, [fp, #-20]	; 0xffffffec
   4f498:	str	r0, [r1]
   4f49c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   4f4a0:	str	r0, [fp, #-4]
   4f4a4:	b	4f910 <__assert_fail@plt+0x3cd58>
   4f4a8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   4f4ac:	ldr	r0, [r0]
   4f4b0:	ldrb	r0, [r0]
   4f4b4:	cmp	r0, #0
   4f4b8:	beq	4f8fc <__assert_fail@plt+0x3cd44>
   4f4bc:	movw	r0, #1024	; 0x400
   4f4c0:	str	r0, [sp, #32]
   4f4c4:	movw	r0, #1
   4f4c8:	str	r0, [sp, #28]
   4f4cc:	ldr	r0, [fp, #8]
   4f4d0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   4f4d4:	ldr	r1, [r1]
   4f4d8:	ldrb	r1, [r1]
   4f4dc:	bl	12894 <strchr@plt>
   4f4e0:	movw	r1, #0
   4f4e4:	cmp	r0, r1
   4f4e8:	bne	4f508 <__assert_fail@plt+0x3c950>
   4f4ec:	ldr	r0, [fp, #-32]	; 0xffffffe0
   4f4f0:	ldr	r1, [fp, #-20]	; 0xffffffec
   4f4f4:	str	r0, [r1]
   4f4f8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   4f4fc:	orr	r0, r0, #2
   4f500:	str	r0, [fp, #-4]
   4f504:	b	4f910 <__assert_fail@plt+0x3cd58>
   4f508:	ldr	r0, [fp, #-28]	; 0xffffffe4
   4f50c:	ldr	r0, [r0]
   4f510:	ldrb	r0, [r0]
   4f514:	sub	r0, r0, #69	; 0x45
   4f518:	cmp	r0, #47	; 0x2f
   4f51c:	str	r0, [sp, #8]
   4f520:	bhi	4f68c <__assert_fail@plt+0x3cad4>
   4f524:	add	r0, pc, #8
   4f528:	ldr	r1, [sp, #8]
   4f52c:	ldr	r0, [r0, r1, lsl #2]
   4f530:	mov	pc, r0
   4f534:	strdeq	pc, [r4], -r4
   4f538:	andeq	pc, r4, ip, lsl #13
   4f53c:	strdeq	pc, [r4], -r4
   4f540:	andeq	pc, r4, ip, lsl #13
   4f544:	andeq	pc, r4, ip, lsl #13
   4f548:	andeq	pc, r4, ip, lsl #13
   4f54c:	strdeq	pc, [r4], -r4
   4f550:	andeq	pc, r4, ip, lsl #13
   4f554:	strdeq	pc, [r4], -r4
   4f558:	andeq	pc, r4, ip, lsl #13
   4f55c:	andeq	pc, r4, ip, lsl #13
   4f560:	strdeq	pc, [r4], -r4
   4f564:	andeq	pc, r4, ip, lsl #13
   4f568:	andeq	pc, r4, ip, lsl #13
   4f56c:	andeq	pc, r4, ip, lsl #13
   4f570:	strdeq	pc, [r4], -r4
   4f574:	andeq	pc, r4, ip, lsl #13
   4f578:	andeq	pc, r4, ip, lsl #13
   4f57c:	andeq	pc, r4, ip, lsl #13
   4f580:	andeq	pc, r4, ip, lsl #13
   4f584:	strdeq	pc, [r4], -r4
   4f588:	strdeq	pc, [r4], -r4
   4f58c:	andeq	pc, r4, ip, lsl #13
   4f590:	andeq	pc, r4, ip, lsl #13
   4f594:	andeq	pc, r4, ip, lsl #13
   4f598:	andeq	pc, r4, ip, lsl #13
   4f59c:	andeq	pc, r4, ip, lsl #13
   4f5a0:	andeq	pc, r4, ip, lsl #13
   4f5a4:	andeq	pc, r4, ip, lsl #13
   4f5a8:	andeq	pc, r4, ip, lsl #13
   4f5ac:	andeq	pc, r4, ip, lsl #13
   4f5b0:	andeq	pc, r4, ip, lsl #13
   4f5b4:	andeq	pc, r4, ip, lsl #13
   4f5b8:	andeq	pc, r4, ip, lsl #13
   4f5bc:	strdeq	pc, [r4], -r4
   4f5c0:	andeq	pc, r4, ip, lsl #13
   4f5c4:	andeq	pc, r4, ip, lsl #13
   4f5c8:	andeq	pc, r4, ip, lsl #13
   4f5cc:	strdeq	pc, [r4], -r4
   4f5d0:	andeq	pc, r4, ip, lsl #13
   4f5d4:	strdeq	pc, [r4], -r4
   4f5d8:	andeq	pc, r4, ip, lsl #13
   4f5dc:	andeq	pc, r4, ip, lsl #13
   4f5e0:	andeq	pc, r4, ip, lsl #13
   4f5e4:	andeq	pc, r4, ip, lsl #13
   4f5e8:	andeq	pc, r4, ip, lsl #13
   4f5ec:	andeq	pc, r4, ip, lsl #13
   4f5f0:	strdeq	pc, [r4], -r4
   4f5f4:	ldr	r0, [fp, #8]
   4f5f8:	movw	r1, #48	; 0x30
   4f5fc:	bl	12894 <strchr@plt>
   4f600:	movw	r1, #0
   4f604:	cmp	r0, r1
   4f608:	beq	4f688 <__assert_fail@plt+0x3cad0>
   4f60c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   4f610:	ldr	r0, [r0]
   4f614:	ldrb	r0, [r0, #1]
   4f618:	mov	r1, r0
   4f61c:	cmp	r0, #66	; 0x42
   4f620:	str	r1, [sp, #4]
   4f624:	beq	4f670 <__assert_fail@plt+0x3cab8>
   4f628:	b	4f62c <__assert_fail@plt+0x3ca74>
   4f62c:	ldr	r0, [sp, #4]
   4f630:	cmp	r0, #68	; 0x44
   4f634:	beq	4f670 <__assert_fail@plt+0x3cab8>
   4f638:	b	4f63c <__assert_fail@plt+0x3ca84>
   4f63c:	ldr	r0, [sp, #4]
   4f640:	cmp	r0, #105	; 0x69
   4f644:	bne	4f684 <__assert_fail@plt+0x3cacc>
   4f648:	b	4f64c <__assert_fail@plt+0x3ca94>
   4f64c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   4f650:	ldr	r0, [r0]
   4f654:	ldrb	r0, [r0, #2]
   4f658:	cmp	r0, #66	; 0x42
   4f65c:	bne	4f66c <__assert_fail@plt+0x3cab4>
   4f660:	ldr	r0, [sp, #28]
   4f664:	add	r0, r0, #2
   4f668:	str	r0, [sp, #28]
   4f66c:	b	4f684 <__assert_fail@plt+0x3cacc>
   4f670:	movw	r0, #1000	; 0x3e8
   4f674:	str	r0, [sp, #32]
   4f678:	ldr	r0, [sp, #28]
   4f67c:	add	r0, r0, #1
   4f680:	str	r0, [sp, #28]
   4f684:	b	4f688 <__assert_fail@plt+0x3cad0>
   4f688:	b	4f68c <__assert_fail@plt+0x3cad4>
   4f68c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   4f690:	ldr	r0, [r0]
   4f694:	ldrb	r0, [r0]
   4f698:	sub	r0, r0, #66	; 0x42
   4f69c:	cmp	r0, #53	; 0x35
   4f6a0:	str	r0, [sp]
   4f6a4:	bhi	4f898 <__assert_fail@plt+0x3cce0>
   4f6a8:	add	r0, pc, #8
   4f6ac:	ldr	r1, [sp]
   4f6b0:	ldr	r0, [r0, r1, lsl #2]
   4f6b4:	mov	pc, r0
   4f6b8:	andeq	pc, r4, r4, lsr #15
   4f6bc:	muleq	r4, r8, r8
   4f6c0:	muleq	r4, r8, r8
   4f6c4:	andeq	pc, r4, r4, asr #15
   4f6c8:	muleq	r4, r8, r8
   4f6cc:	ldrdeq	pc, [r4], -ip
   4f6d0:	muleq	r4, r8, r8
   4f6d4:	muleq	r4, r8, r8
   4f6d8:	muleq	r4, r8, r8
   4f6dc:	strdeq	pc, [r4], -r4
   4f6e0:	muleq	r4, r8, r8
   4f6e4:	andeq	pc, r4, ip, lsl #16
   4f6e8:	muleq	r4, r8, r8
   4f6ec:	muleq	r4, r8, r8
   4f6f0:	andeq	pc, r4, r4, lsr #16
   4f6f4:	muleq	r4, r8, r8
   4f6f8:	muleq	r4, r8, r8
   4f6fc:	muleq	r4, r8, r8
   4f700:	andeq	pc, r4, ip, lsr r8	; <UNPREDICTABLE>
   4f704:	muleq	r4, r8, r8
   4f708:	muleq	r4, r8, r8
   4f70c:	muleq	r4, r8, r8
   4f710:	muleq	r4, r8, r8
   4f714:	andeq	pc, r4, r8, ror #16
   4f718:	andeq	pc, r4, r0, lsl #17
   4f71c:	muleq	r4, r8, r8
   4f720:	muleq	r4, r8, r8
   4f724:	muleq	r4, r8, r8
   4f728:	muleq	r4, r8, r8
   4f72c:	muleq	r4, r8, r8
   4f730:	muleq	r4, r8, r8
   4f734:	muleq	r4, r8, r8
   4f738:	muleq	r4, r0, r7
   4f73c:			; <UNDEFINED> instruction: 0x0004f7b8
   4f740:	muleq	r4, r8, r8
   4f744:	muleq	r4, r8, r8
   4f748:	muleq	r4, r8, r8
   4f74c:	ldrdeq	pc, [r4], -ip
   4f750:	muleq	r4, r8, r8
   4f754:	muleq	r4, r8, r8
   4f758:	muleq	r4, r8, r8
   4f75c:	strdeq	pc, [r4], -r4
   4f760:	muleq	r4, r8, r8
   4f764:	andeq	pc, r4, ip, lsl #16
   4f768:	muleq	r4, r8, r8
   4f76c:	muleq	r4, r8, r8
   4f770:	muleq	r4, r8, r8
   4f774:	muleq	r4, r8, r8
   4f778:	muleq	r4, r8, r8
   4f77c:	muleq	r4, r8, r8
   4f780:	andeq	pc, r4, ip, lsr r8	; <UNPREDICTABLE>
   4f784:	muleq	r4, r8, r8
   4f788:	muleq	r4, r8, r8
   4f78c:	andeq	pc, r4, r4, asr r8	; <UNPREDICTABLE>
   4f790:	sub	r0, fp, #32
   4f794:	movw	r1, #512	; 0x200
   4f798:	bl	4f91c <__assert_fail@plt+0x3cd64>
   4f79c:	str	r0, [sp, #24]
   4f7a0:	b	4f8b4 <__assert_fail@plt+0x3ccfc>
   4f7a4:	sub	r0, fp, #32
   4f7a8:	movw	r1, #1024	; 0x400
   4f7ac:	bl	4f91c <__assert_fail@plt+0x3cd64>
   4f7b0:	str	r0, [sp, #24]
   4f7b4:	b	4f8b4 <__assert_fail@plt+0x3ccfc>
   4f7b8:	movw	r0, #0
   4f7bc:	str	r0, [sp, #24]
   4f7c0:	b	4f8b4 <__assert_fail@plt+0x3ccfc>
   4f7c4:	ldr	r1, [sp, #32]
   4f7c8:	sub	r0, fp, #32
   4f7cc:	movw	r2, #6
   4f7d0:	bl	4f984 <__assert_fail@plt+0x3cdcc>
   4f7d4:	str	r0, [sp, #24]
   4f7d8:	b	4f8b4 <__assert_fail@plt+0x3ccfc>
   4f7dc:	ldr	r1, [sp, #32]
   4f7e0:	sub	r0, fp, #32
   4f7e4:	movw	r2, #3
   4f7e8:	bl	4f984 <__assert_fail@plt+0x3cdcc>
   4f7ec:	str	r0, [sp, #24]
   4f7f0:	b	4f8b4 <__assert_fail@plt+0x3ccfc>
   4f7f4:	ldr	r1, [sp, #32]
   4f7f8:	sub	r0, fp, #32
   4f7fc:	movw	r2, #1
   4f800:	bl	4f984 <__assert_fail@plt+0x3cdcc>
   4f804:	str	r0, [sp, #24]
   4f808:	b	4f8b4 <__assert_fail@plt+0x3ccfc>
   4f80c:	ldr	r1, [sp, #32]
   4f810:	sub	r0, fp, #32
   4f814:	movw	r2, #2
   4f818:	bl	4f984 <__assert_fail@plt+0x3cdcc>
   4f81c:	str	r0, [sp, #24]
   4f820:	b	4f8b4 <__assert_fail@plt+0x3ccfc>
   4f824:	ldr	r1, [sp, #32]
   4f828:	sub	r0, fp, #32
   4f82c:	movw	r2, #5
   4f830:	bl	4f984 <__assert_fail@plt+0x3cdcc>
   4f834:	str	r0, [sp, #24]
   4f838:	b	4f8b4 <__assert_fail@plt+0x3ccfc>
   4f83c:	ldr	r1, [sp, #32]
   4f840:	sub	r0, fp, #32
   4f844:	movw	r2, #4
   4f848:	bl	4f984 <__assert_fail@plt+0x3cdcc>
   4f84c:	str	r0, [sp, #24]
   4f850:	b	4f8b4 <__assert_fail@plt+0x3ccfc>
   4f854:	sub	r0, fp, #32
   4f858:	movw	r1, #2
   4f85c:	bl	4f91c <__assert_fail@plt+0x3cd64>
   4f860:	str	r0, [sp, #24]
   4f864:	b	4f8b4 <__assert_fail@plt+0x3ccfc>
   4f868:	ldr	r1, [sp, #32]
   4f86c:	sub	r0, fp, #32
   4f870:	movw	r2, #8
   4f874:	bl	4f984 <__assert_fail@plt+0x3cdcc>
   4f878:	str	r0, [sp, #24]
   4f87c:	b	4f8b4 <__assert_fail@plt+0x3ccfc>
   4f880:	ldr	r1, [sp, #32]
   4f884:	sub	r0, fp, #32
   4f888:	movw	r2, #7
   4f88c:	bl	4f984 <__assert_fail@plt+0x3cdcc>
   4f890:	str	r0, [sp, #24]
   4f894:	b	4f8b4 <__assert_fail@plt+0x3ccfc>
   4f898:	ldr	r0, [fp, #-32]	; 0xffffffe0
   4f89c:	ldr	r1, [fp, #-20]	; 0xffffffec
   4f8a0:	str	r0, [r1]
   4f8a4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   4f8a8:	orr	r0, r0, #2
   4f8ac:	str	r0, [fp, #-4]
   4f8b0:	b	4f910 <__assert_fail@plt+0x3cd58>
   4f8b4:	ldr	r0, [sp, #24]
   4f8b8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   4f8bc:	orr	r0, r1, r0
   4f8c0:	str	r0, [fp, #-36]	; 0xffffffdc
   4f8c4:	ldr	r0, [sp, #28]
   4f8c8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   4f8cc:	ldr	r2, [r1]
   4f8d0:	add	r0, r2, r0
   4f8d4:	str	r0, [r1]
   4f8d8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   4f8dc:	ldr	r0, [r0]
   4f8e0:	ldrsb	r0, [r0]
   4f8e4:	cmp	r0, #0
   4f8e8:	beq	4f8f8 <__assert_fail@plt+0x3cd40>
   4f8ec:	ldr	r0, [fp, #-36]	; 0xffffffdc
   4f8f0:	orr	r0, r0, #2
   4f8f4:	str	r0, [fp, #-36]	; 0xffffffdc
   4f8f8:	b	4f8fc <__assert_fail@plt+0x3cd44>
   4f8fc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   4f900:	ldr	r1, [fp, #-20]	; 0xffffffec
   4f904:	str	r0, [r1]
   4f908:	ldr	r0, [fp, #-36]	; 0xffffffdc
   4f90c:	str	r0, [fp, #-4]
   4f910:	ldr	r0, [fp, #-4]
   4f914:	mov	sp, fp
   4f918:	pop	{fp, pc}
   4f91c:	sub	sp, sp, #12
   4f920:	str	r0, [sp, #4]
   4f924:	str	r1, [sp]
   4f928:	ldr	r0, [sp]
   4f92c:	mvn	r1, #0
   4f930:	udiv	r0, r1, r0
   4f934:	ldr	r1, [sp, #4]
   4f938:	ldr	r1, [r1]
   4f93c:	cmp	r0, r1
   4f940:	bcs	4f95c <__assert_fail@plt+0x3cda4>
   4f944:	ldr	r0, [sp, #4]
   4f948:	mvn	r1, #0
   4f94c:	str	r1, [r0]
   4f950:	movw	r0, #1
   4f954:	str	r0, [sp, #8]
   4f958:	b	4f978 <__assert_fail@plt+0x3cdc0>
   4f95c:	ldr	r0, [sp]
   4f960:	ldr	r1, [sp, #4]
   4f964:	ldr	r2, [r1]
   4f968:	mul	r0, r2, r0
   4f96c:	str	r0, [r1]
   4f970:	movw	r0, #0
   4f974:	str	r0, [sp, #8]
   4f978:	ldr	r0, [sp, #8]
   4f97c:	add	sp, sp, #12
   4f980:	bx	lr
   4f984:	push	{fp, lr}
   4f988:	mov	fp, sp
   4f98c:	sub	sp, sp, #16
   4f990:	str	r0, [fp, #-4]
   4f994:	str	r1, [sp, #8]
   4f998:	str	r2, [sp, #4]
   4f99c:	movw	r0, #0
   4f9a0:	str	r0, [sp]
   4f9a4:	ldr	r0, [sp, #4]
   4f9a8:	mvn	r1, #0
   4f9ac:	add	r1, r0, r1
   4f9b0:	str	r1, [sp, #4]
   4f9b4:	cmp	r0, #0
   4f9b8:	beq	4f9d8 <__assert_fail@plt+0x3ce20>
   4f9bc:	ldr	r0, [fp, #-4]
   4f9c0:	ldr	r1, [sp, #8]
   4f9c4:	bl	4f91c <__assert_fail@plt+0x3cd64>
   4f9c8:	ldr	r1, [sp]
   4f9cc:	orr	r0, r1, r0
   4f9d0:	str	r0, [sp]
   4f9d4:	b	4f9a4 <__assert_fail@plt+0x3cdec>
   4f9d8:	ldr	r0, [sp]
   4f9dc:	mov	sp, fp
   4f9e0:	pop	{fp, pc}
   4f9e4:	push	{fp, lr}
   4f9e8:	mov	fp, sp
   4f9ec:	sub	sp, sp, #88	; 0x58
   4f9f0:	ldr	ip, [fp, #8]
   4f9f4:	str	r0, [fp, #-8]
   4f9f8:	str	r1, [fp, #-12]
   4f9fc:	str	r2, [fp, #-16]
   4fa00:	str	r3, [fp, #-20]	; 0xffffffec
   4fa04:	movw	r0, #0
   4fa08:	str	r0, [sp, #44]	; 0x2c
   4fa0c:	ldr	r1, [fp, #-16]
   4fa10:	cmp	r0, r1
   4fa14:	str	ip, [sp, #20]
   4fa18:	bgt	4fa2c <__assert_fail@plt+0x3ce74>
   4fa1c:	ldr	r0, [fp, #-16]
   4fa20:	cmp	r0, #36	; 0x24
   4fa24:	bgt	4fa2c <__assert_fail@plt+0x3ce74>
   4fa28:	b	4fa4c <__assert_fail@plt+0x3ce94>
   4fa2c:	movw	r0, #58174	; 0xe33e
   4fa30:	movt	r0, #7
   4fa34:	movw	r1, #58212	; 0xe364
   4fa38:	movt	r1, #7
   4fa3c:	movw	r2, #84	; 0x54
   4fa40:	movw	r3, #58305	; 0xe3c1
   4fa44:	movt	r3, #7
   4fa48:	bl	12bb8 <__assert_fail@plt>
   4fa4c:	ldr	r0, [fp, #-12]
   4fa50:	movw	r1, #0
   4fa54:	cmp	r0, r1
   4fa58:	beq	4fa68 <__assert_fail@plt+0x3ceb0>
   4fa5c:	ldr	r0, [fp, #-12]
   4fa60:	str	r0, [sp, #16]
   4fa64:	b	4fa74 <__assert_fail@plt+0x3cebc>
   4fa68:	sub	r0, fp, #24
   4fa6c:	str	r0, [sp, #16]
   4fa70:	b	4fa74 <__assert_fail@plt+0x3cebc>
   4fa74:	ldr	r0, [sp, #16]
   4fa78:	str	r0, [fp, #-28]	; 0xffffffe4
   4fa7c:	bl	128d0 <__errno_location@plt>
   4fa80:	movw	lr, #0
   4fa84:	str	lr, [r0]
   4fa88:	ldr	r0, [fp, #-8]
   4fa8c:	str	r0, [sp, #40]	; 0x28
   4fa90:	ldr	r0, [sp, #40]	; 0x28
   4fa94:	ldrb	r0, [r0]
   4fa98:	strb	r0, [sp, #39]	; 0x27
   4fa9c:	bl	12834 <__ctype_b_loc@plt>
   4faa0:	ldr	r0, [r0]
   4faa4:	ldrb	lr, [sp, #39]	; 0x27
   4faa8:	mov	r1, lr
   4faac:	add	r0, r0, lr, lsl #1
   4fab0:	ldrh	r0, [r0]
   4fab4:	and	r0, r0, #8192	; 0x2000
   4fab8:	cmp	r0, #0
   4fabc:	str	r1, [sp, #12]
   4fac0:	beq	4fadc <__assert_fail@plt+0x3cf24>
   4fac4:	ldr	r0, [sp, #40]	; 0x28
   4fac8:	add	r1, r0, #1
   4facc:	str	r1, [sp, #40]	; 0x28
   4fad0:	ldrb	r0, [r0, #1]
   4fad4:	strb	r0, [sp, #39]	; 0x27
   4fad8:	b	4fa9c <__assert_fail@plt+0x3cee4>
   4fadc:	ldrb	r0, [sp, #39]	; 0x27
   4fae0:	cmp	r0, #45	; 0x2d
   4fae4:	bne	4faf4 <__assert_fail@plt+0x3cf3c>
   4fae8:	movw	r0, #4
   4faec:	str	r0, [fp, #-4]
   4faf0:	b	50070 <__assert_fail@plt+0x3d4b8>
   4faf4:	ldr	r0, [fp, #-8]
   4faf8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   4fafc:	ldr	r2, [fp, #-16]
   4fb00:	bl	12960 <strtoumax@plt>
   4fb04:	str	r1, [fp, #-36]	; 0xffffffdc
   4fb08:	str	r0, [fp, #-40]	; 0xffffffd8
   4fb0c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   4fb10:	ldr	r0, [r0]
   4fb14:	ldr	r1, [fp, #-8]
   4fb18:	cmp	r0, r1
   4fb1c:	bne	4fb88 <__assert_fail@plt+0x3cfd0>
   4fb20:	ldr	r0, [fp, #8]
   4fb24:	movw	r1, #0
   4fb28:	cmp	r0, r1
   4fb2c:	beq	4fb78 <__assert_fail@plt+0x3cfc0>
   4fb30:	ldr	r0, [fp, #-28]	; 0xffffffe4
   4fb34:	ldr	r0, [r0]
   4fb38:	ldrb	r0, [r0]
   4fb3c:	cmp	r0, #0
   4fb40:	beq	4fb78 <__assert_fail@plt+0x3cfc0>
   4fb44:	ldr	r0, [fp, #8]
   4fb48:	ldr	r1, [fp, #-28]	; 0xffffffe4
   4fb4c:	ldr	r1, [r1]
   4fb50:	ldrb	r1, [r1]
   4fb54:	bl	12894 <strchr@plt>
   4fb58:	movw	r1, #0
   4fb5c:	cmp	r0, r1
   4fb60:	beq	4fb78 <__assert_fail@plt+0x3cfc0>
   4fb64:	mov	r0, #0
   4fb68:	str	r0, [fp, #-36]	; 0xffffffdc
   4fb6c:	mov	r0, #1
   4fb70:	str	r0, [fp, #-40]	; 0xffffffd8
   4fb74:	b	4fb84 <__assert_fail@plt+0x3cfcc>
   4fb78:	movw	r0, #4
   4fb7c:	str	r0, [fp, #-4]
   4fb80:	b	50070 <__assert_fail@plt+0x3d4b8>
   4fb84:	b	4fbc0 <__assert_fail@plt+0x3d008>
   4fb88:	bl	128d0 <__errno_location@plt>
   4fb8c:	ldr	r0, [r0]
   4fb90:	cmp	r0, #0
   4fb94:	beq	4fbbc <__assert_fail@plt+0x3d004>
   4fb98:	bl	128d0 <__errno_location@plt>
   4fb9c:	ldr	r0, [r0]
   4fba0:	cmp	r0, #34	; 0x22
   4fba4:	beq	4fbb4 <__assert_fail@plt+0x3cffc>
   4fba8:	movw	r0, #4
   4fbac:	str	r0, [fp, #-4]
   4fbb0:	b	50070 <__assert_fail@plt+0x3d4b8>
   4fbb4:	movw	r0, #1
   4fbb8:	str	r0, [sp, #44]	; 0x2c
   4fbbc:	b	4fbc0 <__assert_fail@plt+0x3d008>
   4fbc0:	ldr	r0, [fp, #8]
   4fbc4:	movw	r1, #0
   4fbc8:	cmp	r0, r1
   4fbcc:	bne	4fbf0 <__assert_fail@plt+0x3d038>
   4fbd0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   4fbd4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   4fbd8:	ldr	r2, [fp, #-20]	; 0xffffffec
   4fbdc:	str	r1, [r2, #4]
   4fbe0:	str	r0, [r2]
   4fbe4:	ldr	r0, [sp, #44]	; 0x2c
   4fbe8:	str	r0, [fp, #-4]
   4fbec:	b	50070 <__assert_fail@plt+0x3d4b8>
   4fbf0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   4fbf4:	ldr	r0, [r0]
   4fbf8:	ldrb	r0, [r0]
   4fbfc:	cmp	r0, #0
   4fc00:	beq	50054 <__assert_fail@plt+0x3d49c>
   4fc04:	movw	r0, #1024	; 0x400
   4fc08:	str	r0, [sp, #32]
   4fc0c:	movw	r0, #1
   4fc10:	str	r0, [sp, #28]
   4fc14:	ldr	r0, [fp, #8]
   4fc18:	ldr	r1, [fp, #-28]	; 0xffffffe4
   4fc1c:	ldr	r1, [r1]
   4fc20:	ldrb	r1, [r1]
   4fc24:	bl	12894 <strchr@plt>
   4fc28:	movw	r1, #0
   4fc2c:	cmp	r0, r1
   4fc30:	bne	4fc58 <__assert_fail@plt+0x3d0a0>
   4fc34:	ldr	r0, [fp, #-40]	; 0xffffffd8
   4fc38:	ldr	r1, [fp, #-36]	; 0xffffffdc
   4fc3c:	ldr	r2, [fp, #-20]	; 0xffffffec
   4fc40:	str	r1, [r2, #4]
   4fc44:	str	r0, [r2]
   4fc48:	ldr	r0, [sp, #44]	; 0x2c
   4fc4c:	orr	r0, r0, #2
   4fc50:	str	r0, [fp, #-4]
   4fc54:	b	50070 <__assert_fail@plt+0x3d4b8>
   4fc58:	ldr	r0, [fp, #-28]	; 0xffffffe4
   4fc5c:	ldr	r0, [r0]
   4fc60:	ldrb	r0, [r0]
   4fc64:	sub	r0, r0, #69	; 0x45
   4fc68:	cmp	r0, #47	; 0x2f
   4fc6c:	str	r0, [sp, #8]
   4fc70:	bhi	4fddc <__assert_fail@plt+0x3d224>
   4fc74:	add	r0, pc, #8
   4fc78:	ldr	r1, [sp, #8]
   4fc7c:	ldr	r0, [r0, r1, lsl #2]
   4fc80:	mov	pc, r0
   4fc84:	andeq	pc, r4, r4, asr #26
   4fc88:	ldrdeq	pc, [r4], -ip
   4fc8c:	andeq	pc, r4, r4, asr #26
   4fc90:	ldrdeq	pc, [r4], -ip
   4fc94:	ldrdeq	pc, [r4], -ip
   4fc98:	ldrdeq	pc, [r4], -ip
   4fc9c:	andeq	pc, r4, r4, asr #26
   4fca0:	ldrdeq	pc, [r4], -ip
   4fca4:	andeq	pc, r4, r4, asr #26
   4fca8:	ldrdeq	pc, [r4], -ip
   4fcac:	ldrdeq	pc, [r4], -ip
   4fcb0:	andeq	pc, r4, r4, asr #26
   4fcb4:	ldrdeq	pc, [r4], -ip
   4fcb8:	ldrdeq	pc, [r4], -ip
   4fcbc:	ldrdeq	pc, [r4], -ip
   4fcc0:	andeq	pc, r4, r4, asr #26
   4fcc4:	ldrdeq	pc, [r4], -ip
   4fcc8:	ldrdeq	pc, [r4], -ip
   4fccc:	ldrdeq	pc, [r4], -ip
   4fcd0:	ldrdeq	pc, [r4], -ip
   4fcd4:	andeq	pc, r4, r4, asr #26
   4fcd8:	andeq	pc, r4, r4, asr #26
   4fcdc:	ldrdeq	pc, [r4], -ip
   4fce0:	ldrdeq	pc, [r4], -ip
   4fce4:	ldrdeq	pc, [r4], -ip
   4fce8:	ldrdeq	pc, [r4], -ip
   4fcec:	ldrdeq	pc, [r4], -ip
   4fcf0:	ldrdeq	pc, [r4], -ip
   4fcf4:	ldrdeq	pc, [r4], -ip
   4fcf8:	ldrdeq	pc, [r4], -ip
   4fcfc:	ldrdeq	pc, [r4], -ip
   4fd00:	ldrdeq	pc, [r4], -ip
   4fd04:	ldrdeq	pc, [r4], -ip
   4fd08:	ldrdeq	pc, [r4], -ip
   4fd0c:	andeq	pc, r4, r4, asr #26
   4fd10:	ldrdeq	pc, [r4], -ip
   4fd14:	ldrdeq	pc, [r4], -ip
   4fd18:	ldrdeq	pc, [r4], -ip
   4fd1c:	andeq	pc, r4, r4, asr #26
   4fd20:	ldrdeq	pc, [r4], -ip
   4fd24:	andeq	pc, r4, r4, asr #26
   4fd28:	ldrdeq	pc, [r4], -ip
   4fd2c:	ldrdeq	pc, [r4], -ip
   4fd30:	ldrdeq	pc, [r4], -ip
   4fd34:	ldrdeq	pc, [r4], -ip
   4fd38:	ldrdeq	pc, [r4], -ip
   4fd3c:	ldrdeq	pc, [r4], -ip
   4fd40:	andeq	pc, r4, r4, asr #26
   4fd44:	ldr	r0, [fp, #8]
   4fd48:	movw	r1, #48	; 0x30
   4fd4c:	bl	12894 <strchr@plt>
   4fd50:	movw	r1, #0
   4fd54:	cmp	r0, r1
   4fd58:	beq	4fdd8 <__assert_fail@plt+0x3d220>
   4fd5c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   4fd60:	ldr	r0, [r0]
   4fd64:	ldrb	r0, [r0, #1]
   4fd68:	mov	r1, r0
   4fd6c:	cmp	r0, #66	; 0x42
   4fd70:	str	r1, [sp, #4]
   4fd74:	beq	4fdc0 <__assert_fail@plt+0x3d208>
   4fd78:	b	4fd7c <__assert_fail@plt+0x3d1c4>
   4fd7c:	ldr	r0, [sp, #4]
   4fd80:	cmp	r0, #68	; 0x44
   4fd84:	beq	4fdc0 <__assert_fail@plt+0x3d208>
   4fd88:	b	4fd8c <__assert_fail@plt+0x3d1d4>
   4fd8c:	ldr	r0, [sp, #4]
   4fd90:	cmp	r0, #105	; 0x69
   4fd94:	bne	4fdd4 <__assert_fail@plt+0x3d21c>
   4fd98:	b	4fd9c <__assert_fail@plt+0x3d1e4>
   4fd9c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   4fda0:	ldr	r0, [r0]
   4fda4:	ldrb	r0, [r0, #2]
   4fda8:	cmp	r0, #66	; 0x42
   4fdac:	bne	4fdbc <__assert_fail@plt+0x3d204>
   4fdb0:	ldr	r0, [sp, #28]
   4fdb4:	add	r0, r0, #2
   4fdb8:	str	r0, [sp, #28]
   4fdbc:	b	4fdd4 <__assert_fail@plt+0x3d21c>
   4fdc0:	movw	r0, #1000	; 0x3e8
   4fdc4:	str	r0, [sp, #32]
   4fdc8:	ldr	r0, [sp, #28]
   4fdcc:	add	r0, r0, #1
   4fdd0:	str	r0, [sp, #28]
   4fdd4:	b	4fdd8 <__assert_fail@plt+0x3d220>
   4fdd8:	b	4fddc <__assert_fail@plt+0x3d224>
   4fddc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   4fde0:	ldr	r0, [r0]
   4fde4:	ldrb	r0, [r0]
   4fde8:	sub	r0, r0, #66	; 0x42
   4fdec:	cmp	r0, #53	; 0x35
   4fdf0:	str	r0, [sp]
   4fdf4:	bhi	4ffe8 <__assert_fail@plt+0x3d430>
   4fdf8:	add	r0, pc, #8
   4fdfc:	ldr	r1, [sp]
   4fe00:	ldr	r0, [r0, r1, lsl #2]
   4fe04:	mov	pc, r0
   4fe08:	strdeq	pc, [r4], -r4
   4fe0c:	andeq	pc, r4, r8, ror #31
   4fe10:	andeq	pc, r4, r8, ror #31
   4fe14:	andeq	pc, r4, r4, lsl pc	; <UNPREDICTABLE>
   4fe18:	andeq	pc, r4, r8, ror #31
   4fe1c:	andeq	pc, r4, ip, lsr #30
   4fe20:	andeq	pc, r4, r8, ror #31
   4fe24:	andeq	pc, r4, r8, ror #31
   4fe28:	andeq	pc, r4, r8, ror #31
   4fe2c:	andeq	pc, r4, r4, asr #30
   4fe30:	andeq	pc, r4, r8, ror #31
   4fe34:	andeq	pc, r4, ip, asr pc	; <UNPREDICTABLE>
   4fe38:	andeq	pc, r4, r8, ror #31
   4fe3c:	andeq	pc, r4, r8, ror #31
   4fe40:	andeq	pc, r4, r4, ror pc	; <UNPREDICTABLE>
   4fe44:	andeq	pc, r4, r8, ror #31
   4fe48:	andeq	pc, r4, r8, ror #31
   4fe4c:	andeq	pc, r4, r8, ror #31
   4fe50:	andeq	pc, r4, ip, lsl #31
   4fe54:	andeq	pc, r4, r8, ror #31
   4fe58:	andeq	pc, r4, r8, ror #31
   4fe5c:	andeq	pc, r4, r8, ror #31
   4fe60:	andeq	pc, r4, r8, ror #31
   4fe64:			; <UNDEFINED> instruction: 0x0004ffb8
   4fe68:	ldrdeq	pc, [r4], -r0
   4fe6c:	andeq	pc, r4, r8, ror #31
   4fe70:	andeq	pc, r4, r8, ror #31
   4fe74:	andeq	pc, r4, r8, ror #31
   4fe78:	andeq	pc, r4, r8, ror #31
   4fe7c:	andeq	pc, r4, r8, ror #31
   4fe80:	andeq	pc, r4, r8, ror #31
   4fe84:	andeq	pc, r4, r8, ror #31
   4fe88:	andeq	pc, r4, r0, ror #29
   4fe8c:	andeq	pc, r4, r8, lsl #30
   4fe90:	andeq	pc, r4, r8, ror #31
   4fe94:	andeq	pc, r4, r8, ror #31
   4fe98:	andeq	pc, r4, r8, ror #31
   4fe9c:	andeq	pc, r4, ip, lsr #30
   4fea0:	andeq	pc, r4, r8, ror #31
   4fea4:	andeq	pc, r4, r8, ror #31
   4fea8:	andeq	pc, r4, r8, ror #31
   4feac:	andeq	pc, r4, r4, asr #30
   4feb0:	andeq	pc, r4, r8, ror #31
   4feb4:	andeq	pc, r4, ip, asr pc	; <UNPREDICTABLE>
   4feb8:	andeq	pc, r4, r8, ror #31
   4febc:	andeq	pc, r4, r8, ror #31
   4fec0:	andeq	pc, r4, r8, ror #31
   4fec4:	andeq	pc, r4, r8, ror #31
   4fec8:	andeq	pc, r4, r8, ror #31
   4fecc:	andeq	pc, r4, r8, ror #31
   4fed0:	andeq	pc, r4, ip, lsl #31
   4fed4:	andeq	pc, r4, r8, ror #31
   4fed8:	andeq	pc, r4, r8, ror #31
   4fedc:	andeq	pc, r4, r4, lsr #31
   4fee0:	sub	r0, fp, #40	; 0x28
   4fee4:	movw	r1, #512	; 0x200
   4fee8:	bl	5007c <__assert_fail@plt+0x3d4c4>
   4feec:	str	r0, [sp, #24]
   4fef0:	b	5000c <__assert_fail@plt+0x3d454>
   4fef4:	sub	r0, fp, #40	; 0x28
   4fef8:	movw	r1, #1024	; 0x400
   4fefc:	bl	5007c <__assert_fail@plt+0x3d4c4>
   4ff00:	str	r0, [sp, #24]
   4ff04:	b	5000c <__assert_fail@plt+0x3d454>
   4ff08:	movw	r0, #0
   4ff0c:	str	r0, [sp, #24]
   4ff10:	b	5000c <__assert_fail@plt+0x3d454>
   4ff14:	ldr	r1, [sp, #32]
   4ff18:	sub	r0, fp, #40	; 0x28
   4ff1c:	movw	r2, #6
   4ff20:	bl	50128 <__assert_fail@plt+0x3d570>
   4ff24:	str	r0, [sp, #24]
   4ff28:	b	5000c <__assert_fail@plt+0x3d454>
   4ff2c:	ldr	r1, [sp, #32]
   4ff30:	sub	r0, fp, #40	; 0x28
   4ff34:	movw	r2, #3
   4ff38:	bl	50128 <__assert_fail@plt+0x3d570>
   4ff3c:	str	r0, [sp, #24]
   4ff40:	b	5000c <__assert_fail@plt+0x3d454>
   4ff44:	ldr	r1, [sp, #32]
   4ff48:	sub	r0, fp, #40	; 0x28
   4ff4c:	movw	r2, #1
   4ff50:	bl	50128 <__assert_fail@plt+0x3d570>
   4ff54:	str	r0, [sp, #24]
   4ff58:	b	5000c <__assert_fail@plt+0x3d454>
   4ff5c:	ldr	r1, [sp, #32]
   4ff60:	sub	r0, fp, #40	; 0x28
   4ff64:	movw	r2, #2
   4ff68:	bl	50128 <__assert_fail@plt+0x3d570>
   4ff6c:	str	r0, [sp, #24]
   4ff70:	b	5000c <__assert_fail@plt+0x3d454>
   4ff74:	ldr	r1, [sp, #32]
   4ff78:	sub	r0, fp, #40	; 0x28
   4ff7c:	movw	r2, #5
   4ff80:	bl	50128 <__assert_fail@plt+0x3d570>
   4ff84:	str	r0, [sp, #24]
   4ff88:	b	5000c <__assert_fail@plt+0x3d454>
   4ff8c:	ldr	r1, [sp, #32]
   4ff90:	sub	r0, fp, #40	; 0x28
   4ff94:	movw	r2, #4
   4ff98:	bl	50128 <__assert_fail@plt+0x3d570>
   4ff9c:	str	r0, [sp, #24]
   4ffa0:	b	5000c <__assert_fail@plt+0x3d454>
   4ffa4:	sub	r0, fp, #40	; 0x28
   4ffa8:	movw	r1, #2
   4ffac:	bl	5007c <__assert_fail@plt+0x3d4c4>
   4ffb0:	str	r0, [sp, #24]
   4ffb4:	b	5000c <__assert_fail@plt+0x3d454>
   4ffb8:	ldr	r1, [sp, #32]
   4ffbc:	sub	r0, fp, #40	; 0x28
   4ffc0:	movw	r2, #8
   4ffc4:	bl	50128 <__assert_fail@plt+0x3d570>
   4ffc8:	str	r0, [sp, #24]
   4ffcc:	b	5000c <__assert_fail@plt+0x3d454>
   4ffd0:	ldr	r1, [sp, #32]
   4ffd4:	sub	r0, fp, #40	; 0x28
   4ffd8:	movw	r2, #7
   4ffdc:	bl	50128 <__assert_fail@plt+0x3d570>
   4ffe0:	str	r0, [sp, #24]
   4ffe4:	b	5000c <__assert_fail@plt+0x3d454>
   4ffe8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   4ffec:	ldr	r1, [fp, #-36]	; 0xffffffdc
   4fff0:	ldr	r2, [fp, #-20]	; 0xffffffec
   4fff4:	str	r1, [r2, #4]
   4fff8:	str	r0, [r2]
   4fffc:	ldr	r0, [sp, #44]	; 0x2c
   50000:	orr	r0, r0, #2
   50004:	str	r0, [fp, #-4]
   50008:	b	50070 <__assert_fail@plt+0x3d4b8>
   5000c:	ldr	r0, [sp, #24]
   50010:	ldr	r1, [sp, #44]	; 0x2c
   50014:	orr	r0, r1, r0
   50018:	str	r0, [sp, #44]	; 0x2c
   5001c:	ldr	r0, [sp, #28]
   50020:	ldr	r1, [fp, #-28]	; 0xffffffe4
   50024:	ldr	r2, [r1]
   50028:	add	r0, r2, r0
   5002c:	str	r0, [r1]
   50030:	ldr	r0, [fp, #-28]	; 0xffffffe4
   50034:	ldr	r0, [r0]
   50038:	ldrsb	r0, [r0]
   5003c:	cmp	r0, #0
   50040:	beq	50050 <__assert_fail@plt+0x3d498>
   50044:	ldr	r0, [sp, #44]	; 0x2c
   50048:	orr	r0, r0, #2
   5004c:	str	r0, [sp, #44]	; 0x2c
   50050:	b	50054 <__assert_fail@plt+0x3d49c>
   50054:	ldr	r0, [fp, #-40]	; 0xffffffd8
   50058:	ldr	r1, [fp, #-36]	; 0xffffffdc
   5005c:	ldr	r2, [fp, #-20]	; 0xffffffec
   50060:	str	r1, [r2, #4]
   50064:	str	r0, [r2]
   50068:	ldr	r0, [sp, #44]	; 0x2c
   5006c:	str	r0, [fp, #-4]
   50070:	ldr	r0, [fp, #-4]
   50074:	mov	sp, fp
   50078:	pop	{fp, pc}
   5007c:	push	{r4, sl, fp, lr}
   50080:	add	fp, sp, #8
   50084:	sub	sp, sp, #24
   50088:	str	r0, [sp, #16]
   5008c:	str	r1, [sp, #12]
   50090:	ldr	r0, [sp, #12]
   50094:	asr	r3, r0, #31
   50098:	mvn	r1, #0
   5009c:	str	r0, [sp, #8]
   500a0:	mov	r0, r1
   500a4:	ldr	r2, [sp, #8]
   500a8:	bl	77854 <__assert_fail@plt+0x64c9c>
   500ac:	ldr	r2, [sp, #16]
   500b0:	ldr	r3, [r2]
   500b4:	ldr	r2, [r2, #4]
   500b8:	subs	r0, r0, r3
   500bc:	sbcs	r1, r1, r2
   500c0:	str	r0, [sp, #4]
   500c4:	str	r1, [sp]
   500c8:	bcs	500ec <__assert_fail@plt+0x3d534>
   500cc:	b	500d0 <__assert_fail@plt+0x3d518>
   500d0:	ldr	r0, [sp, #16]
   500d4:	mvn	r1, #0
   500d8:	str	r1, [r0, #4]
   500dc:	str	r1, [r0]
   500e0:	movw	r0, #1
   500e4:	str	r0, [fp, #-12]
   500e8:	b	5011c <__assert_fail@plt+0x3d564>
   500ec:	ldr	r0, [sp, #12]
   500f0:	asr	r1, r0, #31
   500f4:	ldr	r2, [sp, #16]
   500f8:	ldr	r3, [r2]
   500fc:	ldr	ip, [r2, #4]
   50100:	umull	lr, r4, r3, r0
   50104:	mla	r1, r3, r1, r4
   50108:	mla	r0, ip, r0, r1
   5010c:	str	lr, [r2]
   50110:	str	r0, [r2, #4]
   50114:	movw	r0, #0
   50118:	str	r0, [fp, #-12]
   5011c:	ldr	r0, [fp, #-12]
   50120:	sub	sp, fp, #8
   50124:	pop	{r4, sl, fp, pc}
   50128:	push	{fp, lr}
   5012c:	mov	fp, sp
   50130:	sub	sp, sp, #16
   50134:	str	r0, [fp, #-4]
   50138:	str	r1, [sp, #8]
   5013c:	str	r2, [sp, #4]
   50140:	movw	r0, #0
   50144:	str	r0, [sp]
   50148:	ldr	r0, [sp, #4]
   5014c:	mvn	r1, #0
   50150:	add	r1, r0, r1
   50154:	str	r1, [sp, #4]
   50158:	cmp	r0, #0
   5015c:	beq	5017c <__assert_fail@plt+0x3d5c4>
   50160:	ldr	r0, [fp, #-4]
   50164:	ldr	r1, [sp, #8]
   50168:	bl	5007c <__assert_fail@plt+0x3d4c4>
   5016c:	ldr	r1, [sp]
   50170:	orr	r0, r1, r0
   50174:	str	r0, [sp]
   50178:	b	50148 <__assert_fail@plt+0x3d590>
   5017c:	ldr	r0, [sp]
   50180:	mov	sp, fp
   50184:	pop	{fp, pc}
   50188:	push	{fp, lr}
   5018c:	mov	fp, sp
   50190:	sub	sp, sp, #16
   50194:	movw	r0, #0
   50198:	str	r0, [sp, #8]
   5019c:	str	r0, [sp, #4]
   501a0:	movw	r0, #63280	; 0xf730
   501a4:	movt	r0, #8
   501a8:	ldr	r2, [r0]
   501ac:	add	r0, sp, #8
   501b0:	add	r1, sp, #4
   501b4:	bl	12b04 <getline@plt>
   501b8:	str	r0, [sp]
   501bc:	ldr	r0, [sp]
   501c0:	cmp	r0, #0
   501c4:	bgt	501d4 <__assert_fail@plt+0x3d61c>
   501c8:	movw	r0, #0
   501cc:	strb	r0, [fp, #-1]
   501d0:	b	50228 <__assert_fail@plt+0x3d670>
   501d4:	ldr	r0, [sp, #8]
   501d8:	ldr	r1, [sp]
   501dc:	sub	r1, r1, #1
   501e0:	add	r0, r0, r1
   501e4:	ldrb	r0, [r0]
   501e8:	cmp	r0, #10
   501ec:	bne	50208 <__assert_fail@plt+0x3d650>
   501f0:	ldr	r0, [sp, #8]
   501f4:	ldr	r1, [sp]
   501f8:	sub	r1, r1, #1
   501fc:	add	r0, r0, r1
   50200:	movw	r1, #0
   50204:	strb	r1, [r0]
   50208:	ldr	r0, [sp, #8]
   5020c:	bl	129d8 <rpmatch@plt>
   50210:	movw	lr, #0
   50214:	cmp	lr, r0
   50218:	movw	r0, #0
   5021c:	movlt	r0, #1
   50220:	and	r0, r0, #1
   50224:	strb	r0, [fp, #-1]
   50228:	ldr	r0, [sp, #8]
   5022c:	bl	50c68 <__assert_fail@plt+0x3e0b0>
   50230:	ldrb	r0, [fp, #-1]
   50234:	and	r0, r0, #1
   50238:	mov	sp, fp
   5023c:	pop	{fp, pc}
   50240:	push	{fp, lr}
   50244:	mov	fp, sp
   50248:	sub	sp, sp, #16
   5024c:	str	r0, [sp, #8]
   50250:	str	r1, [sp, #4]
   50254:	ldr	r0, [sp, #8]
   50258:	cmp	r0, #0
   5025c:	beq	5026c <__assert_fail@plt+0x3d6b4>
   50260:	ldr	r0, [sp, #4]
   50264:	cmp	r0, #0
   50268:	bne	50278 <__assert_fail@plt+0x3d6c0>
   5026c:	movw	r0, #1
   50270:	str	r0, [sp, #4]
   50274:	str	r0, [sp, #8]
   50278:	ldr	r0, [sp, #4]
   5027c:	cmp	r0, #0
   50280:	beq	502b4 <__assert_fail@plt+0x3d6fc>
   50284:	ldr	r0, [pc, #76]	; 502d8 <__assert_fail@plt+0x3d720>
   50288:	ldr	r1, [sp, #4]
   5028c:	udiv	r0, r0, r1
   50290:	ldr	r1, [sp, #8]
   50294:	cmp	r0, r1
   50298:	bcs	502b4 <__assert_fail@plt+0x3d6fc>
   5029c:	bl	128d0 <__errno_location@plt>
   502a0:	movw	lr, #12
   502a4:	str	lr, [r0]
   502a8:	movw	r0, #0
   502ac:	str	r0, [fp, #-4]
   502b0:	b	502cc <__assert_fail@plt+0x3d714>
   502b4:	ldr	r0, [sp, #8]
   502b8:	ldr	r1, [sp, #4]
   502bc:	bl	12450 <calloc@plt>
   502c0:	str	r0, [sp]
   502c4:	ldr	r0, [sp]
   502c8:	str	r0, [fp, #-4]
   502cc:	ldr	r0, [fp, #-4]
   502d0:	mov	sp, fp
   502d4:	pop	{fp, pc}
   502d8:	svcvc	0x00ffffff
   502dc:	push	{fp, lr}
   502e0:	mov	fp, sp
   502e4:	sub	sp, sp, #56	; 0x38
   502e8:	str	r0, [fp, #-8]
   502ec:	ldr	r0, [fp, #-8]
   502f0:	bl	126a8 <chdir@plt>
   502f4:	str	r0, [fp, #-12]
   502f8:	ldr	r0, [fp, #-12]
   502fc:	cmp	r0, #0
   50300:	beq	50314 <__assert_fail@plt+0x3d75c>
   50304:	bl	128d0 <__errno_location@plt>
   50308:	ldr	r0, [r0]
   5030c:	cmp	r0, #36	; 0x24
   50310:	beq	50320 <__assert_fail@plt+0x3d768>
   50314:	ldr	r0, [fp, #-12]
   50318:	str	r0, [fp, #-4]
   5031c:	b	50668 <__assert_fail@plt+0x3dab0>
   50320:	ldr	r0, [fp, #-8]
   50324:	bl	12888 <strlen@plt>
   50328:	str	r0, [fp, #-16]
   5032c:	ldr	r0, [fp, #-8]
   50330:	ldr	lr, [fp, #-16]
   50334:	add	r0, r0, lr
   50338:	str	r0, [fp, #-20]	; 0xffffffec
   5033c:	sub	r0, fp, #24
   50340:	bl	50674 <__assert_fail@plt+0x3dabc>
   50344:	ldr	r0, [fp, #-16]
   50348:	movw	lr, #0
   5034c:	cmp	lr, r0
   50350:	bcs	50358 <__assert_fail@plt+0x3d7a0>
   50354:	b	50378 <__assert_fail@plt+0x3d7c0>
   50358:	movw	r0, #58384	; 0xe410
   5035c:	movt	r0, #7
   50360:	movw	r1, #58392	; 0xe418
   50364:	movt	r1, #7
   50368:	movw	r2, #126	; 0x7e
   5036c:	movw	r3, #58405	; 0xe425
   50370:	movt	r3, #7
   50374:	bl	12bb8 <__assert_fail@plt>
   50378:	ldr	r0, [fp, #-16]
   5037c:	movw	r1, #4096	; 0x1000
   50380:	cmp	r1, r0
   50384:	bhi	5038c <__assert_fail@plt+0x3d7d4>
   50388:	b	503ac <__assert_fail@plt+0x3d7f4>
   5038c:	movw	r0, #58428	; 0xe43c
   50390:	movt	r0, #7
   50394:	movw	r1, #58392	; 0xe418
   50398:	movt	r1, #7
   5039c:	movw	r2, #127	; 0x7f
   503a0:	movw	r3, #58405	; 0xe425
   503a4:	movt	r3, #7
   503a8:	bl	12bb8 <__assert_fail@plt>
   503ac:	ldr	r0, [fp, #-8]
   503b0:	movw	r1, #34136	; 0x8558
   503b4:	movt	r1, #7
   503b8:	bl	12bac <strspn@plt>
   503bc:	str	r0, [sp, #28]
   503c0:	ldr	r0, [sp, #28]
   503c4:	cmp	r0, #2
   503c8:	bne	50464 <__assert_fail@plt+0x3d8ac>
   503cc:	ldr	r0, [fp, #-8]
   503d0:	add	r0, r0, #3
   503d4:	ldr	r1, [fp, #-20]	; 0xffffffec
   503d8:	ldr	r2, [fp, #-8]
   503dc:	add	r2, r2, #3
   503e0:	sub	r2, r1, r2
   503e4:	mov	r1, #47	; 0x2f
   503e8:	bl	1296c <memchr@plt>
   503ec:	str	r0, [sp, #20]
   503f0:	ldr	r0, [sp, #20]
   503f4:	movw	r1, #0
   503f8:	cmp	r0, r1
   503fc:	bne	50418 <__assert_fail@plt+0x3d860>
   50400:	bl	128d0 <__errno_location@plt>
   50404:	movw	lr, #36	; 0x24
   50408:	str	lr, [r0]
   5040c:	mvn	r0, #0
   50410:	str	r0, [fp, #-4]
   50414:	b	50668 <__assert_fail@plt+0x3dab0>
   50418:	ldr	r0, [sp, #20]
   5041c:	movw	r1, #0
   50420:	strb	r1, [r0]
   50424:	ldr	r1, [fp, #-8]
   50428:	sub	r0, fp, #24
   5042c:	bl	50690 <__assert_fail@plt+0x3dad8>
   50430:	str	r0, [sp, #24]
   50434:	ldr	r0, [sp, #20]
   50438:	movw	r1, #47	; 0x2f
   5043c:	strb	r1, [r0]
   50440:	ldr	r0, [sp, #24]
   50444:	cmp	r0, #0
   50448:	beq	50450 <__assert_fail@plt+0x3d898>
   5044c:	b	50638 <__assert_fail@plt+0x3da80>
   50450:	ldr	r0, [sp, #20]
   50454:	add	r0, r0, #1
   50458:	bl	506fc <__assert_fail@plt+0x3db44>
   5045c:	str	r0, [fp, #-8]
   50460:	b	504a0 <__assert_fail@plt+0x3d8e8>
   50464:	ldr	r0, [sp, #28]
   50468:	cmp	r0, #0
   5046c:	beq	5049c <__assert_fail@plt+0x3d8e4>
   50470:	sub	r0, fp, #24
   50474:	movw	r1, #34136	; 0x8558
   50478:	movt	r1, #7
   5047c:	bl	50690 <__assert_fail@plt+0x3dad8>
   50480:	cmp	r0, #0
   50484:	beq	5048c <__assert_fail@plt+0x3d8d4>
   50488:	b	50638 <__assert_fail@plt+0x3da80>
   5048c:	ldr	r0, [sp, #28]
   50490:	ldr	r1, [fp, #-8]
   50494:	add	r0, r1, r0
   50498:	str	r0, [fp, #-8]
   5049c:	b	504a0 <__assert_fail@plt+0x3d8e8>
   504a0:	ldr	r0, [fp, #-8]
   504a4:	ldrb	r0, [r0]
   504a8:	cmp	r0, #47	; 0x2f
   504ac:	beq	504b4 <__assert_fail@plt+0x3d8fc>
   504b0:	b	504d4 <__assert_fail@plt+0x3d91c>
   504b4:	movw	r0, #58440	; 0xe448
   504b8:	movt	r0, #7
   504bc:	movw	r1, #58392	; 0xe418
   504c0:	movt	r1, #7
   504c4:	movw	r2, #162	; 0xa2
   504c8:	movw	r3, #58405	; 0xe425
   504cc:	movt	r3, #7
   504d0:	bl	12bb8 <__assert_fail@plt>
   504d4:	ldr	r0, [fp, #-8]
   504d8:	ldr	r1, [fp, #-20]	; 0xffffffec
   504dc:	cmp	r0, r1
   504e0:	bhi	504e8 <__assert_fail@plt+0x3d930>
   504e4:	b	50508 <__assert_fail@plt+0x3d950>
   504e8:	movw	r0, #58452	; 0xe454
   504ec:	movt	r0, #7
   504f0:	movw	r1, #58392	; 0xe418
   504f4:	movt	r1, #7
   504f8:	movw	r2, #163	; 0xa3
   504fc:	movw	r3, #58405	; 0xe425
   50500:	movt	r3, #7
   50504:	bl	12bb8 <__assert_fail@plt>
   50508:	b	5050c <__assert_fail@plt+0x3d954>
   5050c:	ldr	r0, [fp, #-20]	; 0xffffffec
   50510:	ldr	r1, [fp, #-8]
   50514:	sub	r0, r0, r1
   50518:	movw	r1, #4096	; 0x1000
   5051c:	cmp	r1, r0
   50520:	bgt	505e4 <__assert_fail@plt+0x3da2c>
   50524:	ldr	r0, [fp, #-8]
   50528:	movw	r1, #47	; 0x2f
   5052c:	movw	r2, #4096	; 0x1000
   50530:	bl	128b8 <memrchr@plt>
   50534:	str	r0, [sp, #12]
   50538:	ldr	r0, [sp, #12]
   5053c:	movw	r1, #0
   50540:	cmp	r0, r1
   50544:	bne	50560 <__assert_fail@plt+0x3d9a8>
   50548:	bl	128d0 <__errno_location@plt>
   5054c:	movw	lr, #36	; 0x24
   50550:	str	lr, [r0]
   50554:	mvn	r0, #0
   50558:	str	r0, [fp, #-4]
   5055c:	b	50668 <__assert_fail@plt+0x3dab0>
   50560:	ldr	r0, [sp, #12]
   50564:	movw	r1, #0
   50568:	strb	r1, [r0]
   5056c:	ldr	r0, [sp, #12]
   50570:	ldr	r1, [fp, #-8]
   50574:	sub	r0, r0, r1
   50578:	cmp	r0, #4096	; 0x1000
   5057c:	bge	50584 <__assert_fail@plt+0x3d9cc>
   50580:	b	505a4 <__assert_fail@plt+0x3d9ec>
   50584:	movw	r0, #58467	; 0xe463
   50588:	movt	r0, #7
   5058c:	movw	r1, #58392	; 0xe418
   50590:	movt	r1, #7
   50594:	movw	r2, #179	; 0xb3
   50598:	movw	r3, #58405	; 0xe425
   5059c:	movt	r3, #7
   505a0:	bl	12bb8 <__assert_fail@plt>
   505a4:	ldr	r1, [fp, #-8]
   505a8:	sub	r0, fp, #24
   505ac:	bl	50690 <__assert_fail@plt+0x3dad8>
   505b0:	str	r0, [sp, #16]
   505b4:	ldr	r0, [sp, #12]
   505b8:	movw	r1, #47	; 0x2f
   505bc:	strb	r1, [r0]
   505c0:	ldr	r0, [sp, #16]
   505c4:	cmp	r0, #0
   505c8:	beq	505d0 <__assert_fail@plt+0x3da18>
   505cc:	b	50638 <__assert_fail@plt+0x3da80>
   505d0:	ldr	r0, [sp, #12]
   505d4:	add	r0, r0, #1
   505d8:	bl	506fc <__assert_fail@plt+0x3db44>
   505dc:	str	r0, [fp, #-8]
   505e0:	b	5050c <__assert_fail@plt+0x3d954>
   505e4:	ldr	r0, [fp, #-8]
   505e8:	ldr	r1, [fp, #-20]	; 0xffffffec
   505ec:	cmp	r0, r1
   505f0:	bcs	50610 <__assert_fail@plt+0x3da58>
   505f4:	ldr	r1, [fp, #-8]
   505f8:	sub	r0, fp, #24
   505fc:	bl	50690 <__assert_fail@plt+0x3dad8>
   50600:	cmp	r0, #0
   50604:	beq	5060c <__assert_fail@plt+0x3da54>
   50608:	b	50638 <__assert_fail@plt+0x3da80>
   5060c:	b	50610 <__assert_fail@plt+0x3da58>
   50610:	sub	r0, fp, #24
   50614:	bl	50734 <__assert_fail@plt+0x3db7c>
   50618:	cmp	r0, #0
   5061c:	beq	50624 <__assert_fail@plt+0x3da6c>
   50620:	b	50638 <__assert_fail@plt+0x3da80>
   50624:	sub	r0, fp, #24
   50628:	bl	50758 <__assert_fail@plt+0x3dba0>
   5062c:	movw	r0, #0
   50630:	str	r0, [fp, #-4]
   50634:	b	50668 <__assert_fail@plt+0x3dab0>
   50638:	bl	128d0 <__errno_location@plt>
   5063c:	ldr	r0, [r0]
   50640:	str	r0, [sp, #8]
   50644:	sub	r0, fp, #24
   50648:	bl	50758 <__assert_fail@plt+0x3dba0>
   5064c:	ldr	r0, [sp, #8]
   50650:	str	r0, [sp, #4]
   50654:	bl	128d0 <__errno_location@plt>
   50658:	ldr	lr, [sp, #4]
   5065c:	str	lr, [r0]
   50660:	mvn	r0, #0
   50664:	str	r0, [fp, #-4]
   50668:	ldr	r0, [fp, #-4]
   5066c:	mov	sp, fp
   50670:	pop	{fp, pc}
   50674:	sub	sp, sp, #4
   50678:	str	r0, [sp]
   5067c:	ldr	r0, [sp]
   50680:	mvn	r1, #99	; 0x63
   50684:	str	r1, [r0]
   50688:	add	sp, sp, #4
   5068c:	bx	lr
   50690:	push	{fp, lr}
   50694:	mov	fp, sp
   50698:	sub	sp, sp, #16
   5069c:	str	r0, [sp, #8]
   506a0:	str	r1, [sp, #4]
   506a4:	ldr	r0, [sp, #8]
   506a8:	ldr	r0, [r0]
   506ac:	ldr	r1, [sp, #4]
   506b0:	movw	r2, #18688	; 0x4900
   506b4:	bl	128ac <openat64@plt>
   506b8:	str	r0, [sp]
   506bc:	ldr	r0, [sp]
   506c0:	cmp	r0, #0
   506c4:	bge	506d4 <__assert_fail@plt+0x3db1c>
   506c8:	mvn	r0, #0
   506cc:	str	r0, [fp, #-4]
   506d0:	b	506f0 <__assert_fail@plt+0x3db38>
   506d4:	ldr	r0, [sp, #8]
   506d8:	bl	50758 <__assert_fail@plt+0x3dba0>
   506dc:	ldr	r0, [sp]
   506e0:	ldr	lr, [sp, #8]
   506e4:	str	r0, [lr]
   506e8:	movw	r0, #0
   506ec:	str	r0, [fp, #-4]
   506f0:	ldr	r0, [fp, #-4]
   506f4:	mov	sp, fp
   506f8:	pop	{fp, pc}
   506fc:	push	{fp, lr}
   50700:	mov	fp, sp
   50704:	sub	sp, sp, #8
   50708:	str	r0, [sp, #4]
   5070c:	ldr	r0, [sp, #4]
   50710:	movw	r1, #34136	; 0x8558
   50714:	movt	r1, #7
   50718:	bl	12bac <strspn@plt>
   5071c:	str	r0, [sp]
   50720:	ldr	r0, [sp, #4]
   50724:	ldr	r1, [sp]
   50728:	add	r0, r0, r1
   5072c:	mov	sp, fp
   50730:	pop	{fp, pc}
   50734:	push	{fp, lr}
   50738:	mov	fp, sp
   5073c:	sub	sp, sp, #8
   50740:	str	r0, [sp, #4]
   50744:	ldr	r0, [sp, #4]
   50748:	ldr	r0, [r0]
   5074c:	bl	12aa4 <fchdir@plt>
   50750:	mov	sp, fp
   50754:	pop	{fp, pc}
   50758:	push	{fp, lr}
   5075c:	mov	fp, sp
   50760:	sub	sp, sp, #8
   50764:	str	r0, [sp, #4]
   50768:	ldr	r0, [sp, #4]
   5076c:	ldr	r0, [r0]
   50770:	movw	r1, #0
   50774:	cmp	r1, r0
   50778:	bgt	507d0 <__assert_fail@plt+0x3dc18>
   5077c:	ldr	r0, [sp, #4]
   50780:	ldr	r0, [r0]
   50784:	bl	12b70 <close@plt>
   50788:	cmp	r0, #0
   5078c:	movw	r0, #0
   50790:	movne	r0, #1
   50794:	and	r0, r0, #1
   50798:	strb	r0, [sp, #3]
   5079c:	ldrb	r0, [sp, #3]
   507a0:	tst	r0, #1
   507a4:	bne	507ac <__assert_fail@plt+0x3dbf4>
   507a8:	b	507cc <__assert_fail@plt+0x3dc14>
   507ac:	movw	r0, #58486	; 0xe476
   507b0:	movt	r0, #7
   507b4:	movw	r1, #58392	; 0xe418
   507b8:	movt	r1, #7
   507bc:	movw	r2, #64	; 0x40
   507c0:	movw	r3, #58499	; 0xe483
   507c4:	movt	r3, #7
   507c8:	bl	12bb8 <__assert_fail@plt>
   507cc:	b	507d0 <__assert_fail@plt+0x3dc18>
   507d0:	mov	sp, fp
   507d4:	pop	{fp, pc}
   507d8:	sub	sp, sp, #8
   507dc:	push	{fp, lr}
   507e0:	mov	fp, sp
   507e4:	sub	sp, sp, #48	; 0x30
   507e8:	str	r3, [fp, #12]
   507ec:	str	r2, [fp, #8]
   507f0:	str	r0, [fp, #-4]
   507f4:	str	r1, [fp, #-8]
   507f8:	mvn	r0, #0
   507fc:	str	r0, [fp, #-16]
   50800:	add	r0, fp, #8
   50804:	str	r0, [fp, #-12]
   50808:	ldr	r0, [fp, #-8]
   5080c:	cmp	r0, #0
   50810:	str	r0, [sp, #12]
   50814:	beq	50830 <__assert_fail@plt+0x3dc78>
   50818:	b	5081c <__assert_fail@plt+0x3dc64>
   5081c:	movw	r0, #1030	; 0x406
   50820:	ldr	r1, [sp, #12]
   50824:	cmp	r1, r0
   50828:	beq	50858 <__assert_fail@plt+0x3dca0>
   5082c:	b	50880 <__assert_fail@plt+0x3dcc8>
   50830:	ldr	r0, [fp, #-12]
   50834:	add	r1, r0, #4
   50838:	str	r1, [fp, #-12]
   5083c:	ldr	r0, [r0]
   50840:	str	r0, [fp, #-20]	; 0xffffffec
   50844:	ldr	r0, [fp, #-4]
   50848:	ldr	r1, [fp, #-20]	; 0xffffffec
   5084c:	bl	50a2c <__assert_fail@plt+0x3de74>
   50850:	str	r0, [fp, #-16]
   50854:	b	50a0c <__assert_fail@plt+0x3de54>
   50858:	ldr	r0, [fp, #-12]
   5085c:	add	r1, r0, #4
   50860:	str	r1, [fp, #-12]
   50864:	ldr	r0, [r0]
   50868:	str	r0, [sp, #24]
   5086c:	ldr	r0, [fp, #-4]
   50870:	ldr	r1, [sp, #24]
   50874:	bl	50a60 <__assert_fail@plt+0x3dea8>
   50878:	str	r0, [fp, #-16]
   5087c:	b	50a0c <__assert_fail@plt+0x3de54>
   50880:	ldr	r0, [fp, #-8]
   50884:	cmp	r0, #0
   50888:	str	r0, [sp, #8]
   5088c:	beq	509b4 <__assert_fail@plt+0x3ddfc>
   50890:	b	50894 <__assert_fail@plt+0x3dcdc>
   50894:	ldr	r0, [sp, #8]
   50898:	cmp	r0, #1
   5089c:	beq	509a0 <__assert_fail@plt+0x3dde8>
   508a0:	b	508a4 <__assert_fail@plt+0x3dcec>
   508a4:	ldr	r0, [sp, #8]
   508a8:	cmp	r0, #2
   508ac:	beq	509b4 <__assert_fail@plt+0x3ddfc>
   508b0:	b	508b4 <__assert_fail@plt+0x3dcfc>
   508b4:	ldr	r0, [sp, #8]
   508b8:	cmp	r0, #3
   508bc:	beq	509a0 <__assert_fail@plt+0x3dde8>
   508c0:	b	508c4 <__assert_fail@plt+0x3dd0c>
   508c4:	ldr	r0, [sp, #8]
   508c8:	cmp	r0, #4
   508cc:	beq	509b4 <__assert_fail@plt+0x3ddfc>
   508d0:	b	508d4 <__assert_fail@plt+0x3dd1c>
   508d4:	ldr	r0, [sp, #8]
   508d8:	cmp	r0, #8
   508dc:	beq	509b4 <__assert_fail@plt+0x3ddfc>
   508e0:	b	508e4 <__assert_fail@plt+0x3dd2c>
   508e4:	ldr	r0, [sp, #8]
   508e8:	cmp	r0, #9
   508ec:	beq	509a0 <__assert_fail@plt+0x3dde8>
   508f0:	b	508f4 <__assert_fail@plt+0x3dd3c>
   508f4:	ldr	r0, [sp, #8]
   508f8:	cmp	r0, #10
   508fc:	beq	509b4 <__assert_fail@plt+0x3ddfc>
   50900:	b	50904 <__assert_fail@plt+0x3dd4c>
   50904:	ldr	r0, [sp, #8]
   50908:	cmp	r0, #11
   5090c:	beq	509a0 <__assert_fail@plt+0x3dde8>
   50910:	b	50914 <__assert_fail@plt+0x3dd5c>
   50914:	ldr	r0, [sp, #8]
   50918:	cmp	r0, #1024	; 0x400
   5091c:	beq	509b4 <__assert_fail@plt+0x3ddfc>
   50920:	b	50924 <__assert_fail@plt+0x3dd6c>
   50924:	movw	r0, #1025	; 0x401
   50928:	ldr	r1, [sp, #8]
   5092c:	cmp	r1, r0
   50930:	beq	509a0 <__assert_fail@plt+0x3dde8>
   50934:	b	50938 <__assert_fail@plt+0x3dd80>
   50938:	movw	r0, #1026	; 0x402
   5093c:	ldr	r1, [sp, #8]
   50940:	cmp	r1, r0
   50944:	beq	509b4 <__assert_fail@plt+0x3ddfc>
   50948:	b	5094c <__assert_fail@plt+0x3dd94>
   5094c:	movw	r0, #1030	; 0x406
   50950:	ldr	r1, [sp, #8]
   50954:	sub	r0, r1, r0
   50958:	cmp	r0, #2
   5095c:	bcc	509b4 <__assert_fail@plt+0x3ddfc>
   50960:	b	50964 <__assert_fail@plt+0x3ddac>
   50964:	movw	r0, #1032	; 0x408
   50968:	ldr	r1, [sp, #8]
   5096c:	cmp	r1, r0
   50970:	beq	509a0 <__assert_fail@plt+0x3dde8>
   50974:	b	50978 <__assert_fail@plt+0x3ddc0>
   50978:	movw	r0, #1033	; 0x409
   5097c:	ldr	r1, [sp, #8]
   50980:	cmp	r1, r0
   50984:	beq	509b4 <__assert_fail@plt+0x3ddfc>
   50988:	b	5098c <__assert_fail@plt+0x3ddd4>
   5098c:	movw	r0, #1034	; 0x40a
   50990:	ldr	r1, [sp, #8]
   50994:	cmp	r1, r0
   50998:	bne	509e0 <__assert_fail@plt+0x3de28>
   5099c:	b	509a0 <__assert_fail@plt+0x3dde8>
   509a0:	ldr	r0, [fp, #-4]
   509a4:	ldr	r1, [fp, #-8]
   509a8:	bl	129cc <fcntl64@plt>
   509ac:	str	r0, [fp, #-16]
   509b0:	b	50a08 <__assert_fail@plt+0x3de50>
   509b4:	ldr	r0, [fp, #-12]
   509b8:	add	r1, r0, #4
   509bc:	str	r1, [fp, #-12]
   509c0:	ldr	r0, [r0]
   509c4:	str	r0, [sp, #20]
   509c8:	ldr	r0, [fp, #-4]
   509cc:	ldr	r1, [fp, #-8]
   509d0:	ldr	r2, [sp, #20]
   509d4:	bl	129cc <fcntl64@plt>
   509d8:	str	r0, [fp, #-16]
   509dc:	b	50a08 <__assert_fail@plt+0x3de50>
   509e0:	ldr	r0, [fp, #-12]
   509e4:	add	r1, r0, #4
   509e8:	str	r1, [fp, #-12]
   509ec:	ldr	r0, [r0]
   509f0:	str	r0, [sp, #16]
   509f4:	ldr	r0, [fp, #-4]
   509f8:	ldr	r1, [fp, #-8]
   509fc:	ldr	r2, [sp, #16]
   50a00:	bl	129cc <fcntl64@plt>
   50a04:	str	r0, [fp, #-16]
   50a08:	b	50a0c <__assert_fail@plt+0x3de54>
   50a0c:	sub	r0, fp, #12
   50a10:	ldr	r1, [fp, #-16]
   50a14:	str	r0, [sp, #4]
   50a18:	mov	r0, r1
   50a1c:	mov	sp, fp
   50a20:	pop	{fp, lr}
   50a24:	add	sp, sp, #8
   50a28:	bx	lr
   50a2c:	push	{fp, lr}
   50a30:	mov	fp, sp
   50a34:	sub	sp, sp, #16
   50a38:	str	r0, [fp, #-4]
   50a3c:	str	r1, [sp, #8]
   50a40:	ldr	r0, [fp, #-4]
   50a44:	ldr	r2, [sp, #8]
   50a48:	movw	r1, #0
   50a4c:	bl	129cc <fcntl64@plt>
   50a50:	str	r0, [sp, #4]
   50a54:	ldr	r0, [sp, #4]
   50a58:	mov	sp, fp
   50a5c:	pop	{fp, pc}
   50a60:	push	{fp, lr}
   50a64:	mov	fp, sp
   50a68:	sub	sp, sp, #32
   50a6c:	str	r0, [fp, #-4]
   50a70:	str	r1, [fp, #-8]
   50a74:	movw	r0, #84	; 0x54
   50a78:	movt	r0, #9
   50a7c:	ldr	r0, [r0]
   50a80:	movw	r1, #0
   50a84:	cmp	r1, r0
   50a88:	bgt	50b08 <__assert_fail@plt+0x3df50>
   50a8c:	ldr	r0, [fp, #-4]
   50a90:	ldr	r2, [fp, #-8]
   50a94:	movw	r1, #1030	; 0x406
   50a98:	bl	129cc <fcntl64@plt>
   50a9c:	str	r0, [fp, #-12]
   50aa0:	ldr	r0, [fp, #-12]
   50aa4:	movw	r1, #0
   50aa8:	cmp	r1, r0
   50aac:	ble	50ac0 <__assert_fail@plt+0x3df08>
   50ab0:	bl	128d0 <__errno_location@plt>
   50ab4:	ldr	r0, [r0]
   50ab8:	cmp	r0, #22
   50abc:	beq	50ad4 <__assert_fail@plt+0x3df1c>
   50ac0:	movw	r0, #84	; 0x54
   50ac4:	movt	r0, #9
   50ac8:	movw	r1, #1
   50acc:	str	r1, [r0]
   50ad0:	b	50b04 <__assert_fail@plt+0x3df4c>
   50ad4:	ldr	r0, [fp, #-4]
   50ad8:	ldr	r1, [fp, #-8]
   50adc:	bl	50a2c <__assert_fail@plt+0x3de74>
   50ae0:	str	r0, [fp, #-12]
   50ae4:	ldr	r0, [fp, #-12]
   50ae8:	cmp	r0, #0
   50aec:	blt	50b00 <__assert_fail@plt+0x3df48>
   50af0:	movw	r0, #84	; 0x54
   50af4:	movt	r0, #9
   50af8:	mvn	r1, #0
   50afc:	str	r1, [r0]
   50b00:	b	50b04 <__assert_fail@plt+0x3df4c>
   50b04:	b	50b18 <__assert_fail@plt+0x3df60>
   50b08:	ldr	r0, [fp, #-4]
   50b0c:	ldr	r1, [fp, #-8]
   50b10:	bl	50a2c <__assert_fail@plt+0x3de74>
   50b14:	str	r0, [fp, #-12]
   50b18:	ldr	r0, [fp, #-12]
   50b1c:	movw	r1, #0
   50b20:	cmp	r1, r0
   50b24:	bgt	50bac <__assert_fail@plt+0x3dff4>
   50b28:	movw	r0, #84	; 0x54
   50b2c:	movt	r0, #9
   50b30:	ldr	r0, [r0]
   50b34:	cmn	r0, #1
   50b38:	bne	50bac <__assert_fail@plt+0x3dff4>
   50b3c:	ldr	r0, [fp, #-12]
   50b40:	movw	r1, #1
   50b44:	bl	129cc <fcntl64@plt>
   50b48:	str	r0, [sp, #16]
   50b4c:	ldr	r0, [sp, #16]
   50b50:	cmp	r0, #0
   50b54:	blt	50b74 <__assert_fail@plt+0x3dfbc>
   50b58:	ldr	r0, [fp, #-12]
   50b5c:	ldr	r1, [sp, #16]
   50b60:	orr	r2, r1, #1
   50b64:	movw	r1, #2
   50b68:	bl	129cc <fcntl64@plt>
   50b6c:	cmn	r0, #1
   50b70:	bne	50ba8 <__assert_fail@plt+0x3dff0>
   50b74:	bl	128d0 <__errno_location@plt>
   50b78:	ldr	r0, [r0]
   50b7c:	str	r0, [sp, #12]
   50b80:	ldr	r0, [fp, #-12]
   50b84:	bl	12b70 <close@plt>
   50b88:	ldr	lr, [sp, #12]
   50b8c:	str	r0, [sp, #8]
   50b90:	str	lr, [sp, #4]
   50b94:	bl	128d0 <__errno_location@plt>
   50b98:	ldr	lr, [sp, #4]
   50b9c:	str	lr, [r0]
   50ba0:	mvn	r0, #0
   50ba4:	str	r0, [fp, #-12]
   50ba8:	b	50bac <__assert_fail@plt+0x3dff4>
   50bac:	ldr	r0, [fp, #-12]
   50bb0:	mov	sp, fp
   50bb4:	pop	{fp, pc}
   50bb8:	push	{fp, lr}
   50bbc:	mov	fp, sp
   50bc0:	sub	sp, sp, #8
   50bc4:	str	r0, [sp]
   50bc8:	ldr	r0, [sp]
   50bcc:	movw	r1, #0
   50bd0:	cmp	r0, r1
   50bd4:	beq	50be8 <__assert_fail@plt+0x3e030>
   50bd8:	ldr	r0, [sp]
   50bdc:	bl	12804 <__freading@plt>
   50be0:	cmp	r0, #0
   50be4:	bne	50bf8 <__assert_fail@plt+0x3e040>
   50be8:	ldr	r0, [sp]
   50bec:	bl	12528 <fflush@plt>
   50bf0:	str	r0, [sp, #4]
   50bf4:	b	50c0c <__assert_fail@plt+0x3e054>
   50bf8:	ldr	r0, [sp]
   50bfc:	bl	50c18 <__assert_fail@plt+0x3e060>
   50c00:	ldr	r0, [sp]
   50c04:	bl	12528 <fflush@plt>
   50c08:	str	r0, [sp, #4]
   50c0c:	ldr	r0, [sp, #4]
   50c10:	mov	sp, fp
   50c14:	pop	{fp, pc}
   50c18:	push	{fp, lr}
   50c1c:	mov	fp, sp
   50c20:	sub	sp, sp, #16
   50c24:	str	r0, [fp, #-4]
   50c28:	ldr	r0, [fp, #-4]
   50c2c:	ldr	r0, [r0]
   50c30:	and	r0, r0, #256	; 0x100
   50c34:	cmp	r0, #0
   50c38:	beq	50c60 <__assert_fail@plt+0x3e0a8>
   50c3c:	ldr	r0, [fp, #-4]
   50c40:	mov	r1, sp
   50c44:	mov	r2, #1
   50c48:	str	r2, [r1]
   50c4c:	mov	r1, #0
   50c50:	mov	r2, r1
   50c54:	mov	r3, r1
   50c58:	bl	50ca8 <__assert_fail@plt+0x3e0f0>
   50c5c:	str	r0, [sp, #8]
   50c60:	mov	sp, fp
   50c64:	pop	{fp, pc}
   50c68:	push	{fp, lr}
   50c6c:	mov	fp, sp
   50c70:	sub	sp, sp, #16
   50c74:	str	r0, [fp, #-4]
   50c78:	bl	128d0 <__errno_location@plt>
   50c7c:	ldr	r0, [r0]
   50c80:	str	r0, [sp, #8]
   50c84:	ldr	r0, [fp, #-4]
   50c88:	bl	12564 <free@plt>
   50c8c:	ldr	r0, [sp, #8]
   50c90:	str	r0, [sp, #4]
   50c94:	bl	128d0 <__errno_location@plt>
   50c98:	ldr	lr, [sp, #4]
   50c9c:	str	lr, [r0]
   50ca0:	mov	sp, fp
   50ca4:	pop	{fp, pc}
   50ca8:	push	{fp, lr}
   50cac:	mov	fp, sp
   50cb0:	sub	sp, sp, #32
   50cb4:	ldr	r1, [fp, #8]
   50cb8:	str	r0, [fp, #-8]
   50cbc:	str	r3, [sp, #20]
   50cc0:	str	r2, [sp, #16]
   50cc4:	ldr	r0, [fp, #-8]
   50cc8:	ldr	r0, [r0, #8]
   50ccc:	ldr	r2, [fp, #-8]
   50cd0:	ldr	r2, [r2, #4]
   50cd4:	cmp	r0, r2
   50cd8:	str	r1, [sp, #4]
   50cdc:	bne	50d88 <__assert_fail@plt+0x3e1d0>
   50ce0:	ldr	r0, [fp, #-8]
   50ce4:	ldr	r0, [r0, #20]
   50ce8:	ldr	r1, [fp, #-8]
   50cec:	ldr	r1, [r1, #16]
   50cf0:	cmp	r0, r1
   50cf4:	bne	50d88 <__assert_fail@plt+0x3e1d0>
   50cf8:	ldr	r0, [fp, #-8]
   50cfc:	ldr	r0, [r0, #36]	; 0x24
   50d00:	movw	r1, #0
   50d04:	cmp	r0, r1
   50d08:	bne	50d88 <__assert_fail@plt+0x3e1d0>
   50d0c:	ldr	r0, [fp, #-8]
   50d10:	bl	12948 <fileno@plt>
   50d14:	ldr	r2, [sp, #16]
   50d18:	ldr	r3, [sp, #20]
   50d1c:	ldr	lr, [fp, #8]
   50d20:	mov	r1, sp
   50d24:	str	lr, [r1]
   50d28:	bl	12708 <lseek64@plt>
   50d2c:	str	r1, [sp, #12]
   50d30:	str	r0, [sp, #8]
   50d34:	ldr	r0, [sp, #8]
   50d38:	ldr	r1, [sp, #12]
   50d3c:	and	r0, r0, r1
   50d40:	cmn	r0, #1
   50d44:	bne	50d58 <__assert_fail@plt+0x3e1a0>
   50d48:	b	50d4c <__assert_fail@plt+0x3e194>
   50d4c:	mvn	r0, #0
   50d50:	str	r0, [fp, #-4]
   50d54:	b	50da8 <__assert_fail@plt+0x3e1f0>
   50d58:	ldr	r0, [fp, #-8]
   50d5c:	ldr	r1, [r0]
   50d60:	bic	r1, r1, #16
   50d64:	str	r1, [r0]
   50d68:	ldr	r0, [sp, #8]
   50d6c:	ldr	r1, [sp, #12]
   50d70:	ldr	r2, [fp, #-8]
   50d74:	str	r1, [r2, #84]	; 0x54
   50d78:	str	r0, [r2, #80]	; 0x50
   50d7c:	movw	r0, #0
   50d80:	str	r0, [fp, #-4]
   50d84:	b	50da8 <__assert_fail@plt+0x3e1f0>
   50d88:	ldr	r0, [fp, #-8]
   50d8c:	ldr	r2, [sp, #16]
   50d90:	ldr	r3, [sp, #20]
   50d94:	ldr	r1, [fp, #8]
   50d98:	mov	ip, sp
   50d9c:	str	r1, [ip]
   50da0:	bl	129a8 <fseeko64@plt>
   50da4:	str	r0, [fp, #-4]
   50da8:	ldr	r0, [fp, #-4]
   50dac:	mov	sp, fp
   50db0:	pop	{fp, pc}
   50db4:	push	{fp, lr}
   50db8:	mov	fp, sp
   50dbc:	sub	sp, sp, #88	; 0x58
   50dc0:	ldr	r3, [pc, #1456]	; 51378 <__assert_fail@plt+0x3e7c0>
   50dc4:	str	r0, [fp, #-8]
   50dc8:	str	r1, [fp, #-12]
   50dcc:	str	r2, [fp, #-16]
   50dd0:	movw	r0, #0
   50dd4:	str	r0, [fp, #-36]	; 0xffffffdc
   50dd8:	str	r0, [fp, #-40]	; 0xffffffd8
   50ddc:	ldr	r0, [fp, #-12]
   50de0:	and	r0, r0, r3
   50de4:	cmp	r0, #0
   50de8:	beq	50e04 <__assert_fail@plt+0x3e24c>
   50dec:	bl	128d0 <__errno_location@plt>
   50df0:	movw	lr, #22
   50df4:	str	lr, [r0]
   50df8:	movw	r0, #0
   50dfc:	str	r0, [fp, #-4]
   50e00:	b	5136c <__assert_fail@plt+0x3e7b4>
   50e04:	ldr	r0, [fp, #-12]
   50e08:	and	r0, r0, #4
   50e0c:	cmp	r0, #0
   50e10:	beq	50e3c <__assert_fail@plt+0x3e284>
   50e14:	ldr	r0, [fp, #-12]
   50e18:	and	r0, r0, #512	; 0x200
   50e1c:	cmp	r0, #0
   50e20:	beq	50e3c <__assert_fail@plt+0x3e284>
   50e24:	bl	128d0 <__errno_location@plt>
   50e28:	movw	lr, #22
   50e2c:	str	lr, [r0]
   50e30:	movw	r0, #0
   50e34:	str	r0, [fp, #-4]
   50e38:	b	5136c <__assert_fail@plt+0x3e7b4>
   50e3c:	ldr	r0, [fp, #-12]
   50e40:	and	r0, r0, #18
   50e44:	cmp	r0, #0
   50e48:	bne	50e64 <__assert_fail@plt+0x3e2ac>
   50e4c:	bl	128d0 <__errno_location@plt>
   50e50:	movw	lr, #22
   50e54:	str	lr, [r0]
   50e58:	movw	r0, #0
   50e5c:	str	r0, [fp, #-4]
   50e60:	b	5136c <__assert_fail@plt+0x3e7b4>
   50e64:	movw	r0, #1
   50e68:	movw	r1, #96	; 0x60
   50e6c:	bl	50240 <__assert_fail@plt+0x3d688>
   50e70:	str	r0, [fp, #-20]	; 0xffffffec
   50e74:	ldr	r0, [fp, #-20]	; 0xffffffec
   50e78:	movw	r1, #0
   50e7c:	cmp	r0, r1
   50e80:	bne	50e90 <__assert_fail@plt+0x3e2d8>
   50e84:	movw	r0, #0
   50e88:	str	r0, [fp, #-4]
   50e8c:	b	5136c <__assert_fail@plt+0x3e7b4>
   50e90:	ldr	r0, [fp, #-16]
   50e94:	ldr	r1, [fp, #-20]	; 0xffffffec
   50e98:	str	r0, [r1, #44]	; 0x2c
   50e9c:	ldr	r0, [fp, #-12]
   50ea0:	ldr	r1, [fp, #-20]	; 0xffffffec
   50ea4:	str	r0, [r1, #48]	; 0x30
   50ea8:	ldr	r0, [fp, #-20]	; 0xffffffec
   50eac:	ldr	r0, [r0, #48]	; 0x30
   50eb0:	and	r0, r0, #2
   50eb4:	cmp	r0, #0
   50eb8:	beq	50ee0 <__assert_fail@plt+0x3e328>
   50ebc:	ldr	r0, [fp, #-20]	; 0xffffffec
   50ec0:	ldr	r1, [r0, #48]	; 0x30
   50ec4:	orr	r1, r1, #4
   50ec8:	str	r1, [r0, #48]	; 0x30
   50ecc:	ldr	r0, [fp, #-20]	; 0xffffffec
   50ed0:	ldr	r1, [r0, #48]	; 0x30
   50ed4:	mvn	r2, #512	; 0x200
   50ed8:	and	r1, r1, r2
   50edc:	str	r1, [r0, #48]	; 0x30
   50ee0:	ldr	r0, [fp, #-20]	; 0xffffffec
   50ee4:	mvn	r1, #99	; 0x63
   50ee8:	str	r1, [r0, #32]
   50eec:	ldr	r0, [fp, #-20]	; 0xffffffec
   50ef0:	ldr	r0, [r0, #48]	; 0x30
   50ef4:	and	r0, r0, #512	; 0x200
   50ef8:	cmp	r0, #0
   50efc:	beq	50f38 <__assert_fail@plt+0x3e380>
   50f00:	b	50f38 <__assert_fail@plt+0x3e380>
   50f04:	ldr	r1, [pc, #1136]	; 5137c <__assert_fail@plt+0x3e7c4>
   50f08:	movw	r0, #35940	; 0x8c64
   50f0c:	movt	r0, #7
   50f10:	bl	2c768 <__assert_fail@plt+0x19bb0>
   50f14:	str	r0, [sp, #40]	; 0x28
   50f18:	ldr	r0, [sp, #40]	; 0x28
   50f1c:	cmp	r0, #0
   50f20:	bge	50f28 <__assert_fail@plt+0x3e370>
   50f24:	b	50f34 <__assert_fail@plt+0x3e37c>
   50f28:	ldr	r0, [sp, #40]	; 0x28
   50f2c:	bl	12b70 <close@plt>
   50f30:	str	r0, [sp, #24]
   50f34:	b	50f38 <__assert_fail@plt+0x3e380>
   50f38:	ldr	r0, [fp, #-8]
   50f3c:	bl	51380 <__assert_fail@plt+0x3e7c8>
   50f40:	str	r0, [sp, #36]	; 0x24
   50f44:	ldr	r0, [fp, #-20]	; 0xffffffec
   50f48:	ldr	lr, [sp, #36]	; 0x24
   50f4c:	cmp	lr, #4096	; 0x1000
   50f50:	str	r0, [sp, #20]
   50f54:	bls	50f64 <__assert_fail@plt+0x3e3ac>
   50f58:	ldr	r0, [sp, #36]	; 0x24
   50f5c:	str	r0, [sp, #16]
   50f60:	b	50f70 <__assert_fail@plt+0x3e3b8>
   50f64:	movw	r0, #4096	; 0x1000
   50f68:	str	r0, [sp, #16]
   50f6c:	b	50f70 <__assert_fail@plt+0x3e3b8>
   50f70:	ldr	r0, [sp, #16]
   50f74:	ldr	r1, [sp, #20]
   50f78:	str	r0, [sp, #12]
   50f7c:	mov	r0, r1
   50f80:	ldr	r1, [sp, #12]
   50f84:	bl	513f4 <__assert_fail@plt+0x3e83c>
   50f88:	tst	r0, #1
   50f8c:	bne	50f94 <__assert_fail@plt+0x3e3dc>
   50f90:	b	5135c <__assert_fail@plt+0x3e7a4>
   50f94:	ldr	r0, [fp, #-8]
   50f98:	ldr	r0, [r0]
   50f9c:	movw	r1, #0
   50fa0:	cmp	r0, r1
   50fa4:	beq	50fdc <__assert_fail@plt+0x3e424>
   50fa8:	ldr	r0, [fp, #-20]	; 0xffffffec
   50fac:	movw	r1, #39197	; 0x991d
   50fb0:	movt	r1, #7
   50fb4:	movw	r2, #0
   50fb8:	bl	514ec <__assert_fail@plt+0x3e934>
   50fbc:	str	r0, [fp, #-36]	; 0xffffffdc
   50fc0:	movw	r1, #0
   50fc4:	cmp	r0, r1
   50fc8:	bne	50fd0 <__assert_fail@plt+0x3e418>
   50fcc:	b	51350 <__assert_fail@plt+0x3e798>
   50fd0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   50fd4:	mvn	r1, #0
   50fd8:	str	r1, [r0, #48]	; 0x30
   50fdc:	ldr	r0, [fp, #-16]
   50fe0:	movw	r1, #0
   50fe4:	cmp	r0, r1
   50fe8:	movw	r0, #1
   50fec:	str	r0, [sp, #8]
   50ff0:	beq	51010 <__assert_fail@plt+0x3e458>
   50ff4:	ldr	r0, [fp, #-20]	; 0xffffffec
   50ff8:	ldr	r0, [r0, #48]	; 0x30
   50ffc:	and	r0, r0, #1024	; 0x400
   51000:	cmp	r0, #0
   51004:	movw	r0, #0
   51008:	movne	r0, #1
   5100c:	str	r0, [sp, #8]
   51010:	ldr	r0, [sp, #8]
   51014:	and	r0, r0, #1
   51018:	strb	r0, [fp, #-41]	; 0xffffffd7
   5101c:	movw	r0, #0
   51020:	str	r0, [fp, #-28]	; 0xffffffe4
   51024:	str	r0, [fp, #-32]	; 0xffffffe0
   51028:	ldr	r0, [fp, #-8]
   5102c:	ldr	r0, [r0]
   51030:	movw	r1, #0
   51034:	cmp	r0, r1
   51038:	beq	5122c <__assert_fail@plt+0x3e674>
   5103c:	ldr	r0, [fp, #-8]
   51040:	ldr	r0, [r0]
   51044:	bl	12888 <strlen@plt>
   51048:	str	r0, [sp, #32]
   5104c:	ldr	r0, [fp, #-12]
   51050:	and	r0, r0, #2048	; 0x800
   51054:	cmp	r0, #0
   51058:	bne	510fc <__assert_fail@plt+0x3e544>
   5105c:	ldr	r0, [fp, #-8]
   51060:	ldr	r0, [r0]
   51064:	str	r0, [sp, #28]
   51068:	ldr	r0, [sp, #32]
   5106c:	movw	r1, #2
   51070:	cmp	r1, r0
   51074:	bcs	510f8 <__assert_fail@plt+0x3e540>
   51078:	ldr	r0, [sp, #28]
   5107c:	ldr	r1, [sp, #32]
   51080:	sub	r1, r1, #1
   51084:	add	r0, r0, r1
   51088:	ldrb	r0, [r0]
   5108c:	cmp	r0, #47	; 0x2f
   51090:	bne	510f8 <__assert_fail@plt+0x3e540>
   51094:	b	51098 <__assert_fail@plt+0x3e4e0>
   51098:	ldr	r0, [sp, #32]
   5109c:	movw	r1, #1
   510a0:	cmp	r1, r0
   510a4:	movw	r0, #0
   510a8:	str	r0, [sp, #4]
   510ac:	bcs	510d4 <__assert_fail@plt+0x3e51c>
   510b0:	ldr	r0, [sp, #28]
   510b4:	ldr	r1, [sp, #32]
   510b8:	sub	r1, r1, #2
   510bc:	add	r0, r0, r1
   510c0:	ldrb	r0, [r0]
   510c4:	cmp	r0, #47	; 0x2f
   510c8:	movw	r0, #0
   510cc:	moveq	r0, #1
   510d0:	str	r0, [sp, #4]
   510d4:	ldr	r0, [sp, #4]
   510d8:	tst	r0, #1
   510dc:	beq	510f4 <__assert_fail@plt+0x3e53c>
   510e0:	ldr	r0, [sp, #32]
   510e4:	mvn	r1, #0
   510e8:	add	r0, r0, r1
   510ec:	str	r0, [sp, #32]
   510f0:	b	51098 <__assert_fail@plt+0x3e4e0>
   510f4:	b	510f8 <__assert_fail@plt+0x3e540>
   510f8:	b	510fc <__assert_fail@plt+0x3e544>
   510fc:	ldr	r0, [fp, #-20]	; 0xffffffec
   51100:	ldr	r1, [fp, #-8]
   51104:	ldr	r1, [r1]
   51108:	ldr	r2, [sp, #32]
   5110c:	bl	514ec <__assert_fail@plt+0x3e934>
   51110:	str	r0, [fp, #-24]	; 0xffffffe8
   51114:	movw	r1, #0
   51118:	cmp	r0, r1
   5111c:	bne	51124 <__assert_fail@plt+0x3e56c>
   51120:	b	51340 <__assert_fail@plt+0x3e788>
   51124:	ldr	r0, [fp, #-24]	; 0xffffffe8
   51128:	movw	r1, #0
   5112c:	str	r1, [r0, #48]	; 0x30
   51130:	ldr	r0, [fp, #-36]	; 0xffffffdc
   51134:	ldr	r1, [fp, #-24]	; 0xffffffe8
   51138:	str	r0, [r1, #4]
   5113c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   51140:	add	r0, r0, #168	; 0xa8
   51144:	ldr	r1, [fp, #-24]	; 0xffffffe8
   51148:	str	r0, [r1, #24]
   5114c:	ldrb	r0, [fp, #-41]	; 0xffffffd7
   51150:	tst	r0, #1
   51154:	beq	51188 <__assert_fail@plt+0x3e5d0>
   51158:	ldr	r0, [fp, #-28]	; 0xffffffe4
   5115c:	movw	r1, #0
   51160:	cmp	r0, r1
   51164:	beq	51188 <__assert_fail@plt+0x3e5d0>
   51168:	ldr	r0, [fp, #-24]	; 0xffffffe8
   5116c:	movw	r1, #11
   51170:	strh	r1, [r0, #56]	; 0x38
   51174:	ldr	r0, [fp, #-24]	; 0xffffffe8
   51178:	movw	r1, #1
   5117c:	and	r1, r1, #1
   51180:	bl	515e4 <__assert_fail@plt+0x3ea2c>
   51184:	b	511a4 <__assert_fail@plt+0x3e5ec>
   51188:	ldr	r0, [fp, #-20]	; 0xffffffec
   5118c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   51190:	movw	r2, #0
   51194:	and	r2, r2, #1
   51198:	bl	5163c <__assert_fail@plt+0x3ea84>
   5119c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   511a0:	strh	r0, [r1, #56]	; 0x38
   511a4:	ldr	r0, [fp, #-16]
   511a8:	movw	r1, #0
   511ac:	cmp	r0, r1
   511b0:	beq	511cc <__assert_fail@plt+0x3e614>
   511b4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   511b8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   511bc:	str	r0, [r1, #8]
   511c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   511c4:	str	r0, [fp, #-28]	; 0xffffffe4
   511c8:	b	5120c <__assert_fail@plt+0x3e654>
   511cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   511d0:	movw	r1, #0
   511d4:	str	r1, [r0, #8]
   511d8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   511dc:	cmp	r0, r1
   511e0:	bne	511f4 <__assert_fail@plt+0x3e63c>
   511e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   511e8:	str	r0, [fp, #-28]	; 0xffffffe4
   511ec:	str	r0, [fp, #-40]	; 0xffffffd8
   511f0:	b	51208 <__assert_fail@plt+0x3e650>
   511f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   511f8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   511fc:	str	r0, [r1, #8]
   51200:	ldr	r0, [fp, #-24]	; 0xffffffe8
   51204:	str	r0, [fp, #-40]	; 0xffffffd8
   51208:	b	5120c <__assert_fail@plt+0x3e654>
   5120c:	b	51210 <__assert_fail@plt+0x3e658>
   51210:	ldr	r0, [fp, #-8]
   51214:	add	r0, r0, #4
   51218:	str	r0, [fp, #-8]
   5121c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   51220:	add	r0, r0, #1
   51224:	str	r0, [fp, #-32]	; 0xffffffe0
   51228:	b	51028 <__assert_fail@plt+0x3e470>
   5122c:	ldr	r0, [fp, #-16]
   51230:	movw	r1, #0
   51234:	cmp	r0, r1
   51238:	beq	5125c <__assert_fail@plt+0x3e6a4>
   5123c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   51240:	cmp	r0, #1
   51244:	bls	5125c <__assert_fail@plt+0x3e6a4>
   51248:	ldr	r0, [fp, #-20]	; 0xffffffec
   5124c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   51250:	ldr	r2, [fp, #-32]	; 0xffffffe0
   51254:	bl	51854 <__assert_fail@plt+0x3ec9c>
   51258:	str	r0, [fp, #-28]	; 0xffffffe4
   5125c:	ldr	r0, [fp, #-20]	; 0xffffffec
   51260:	movw	r1, #39197	; 0x991d
   51264:	movt	r1, #7
   51268:	movw	r2, #0
   5126c:	bl	514ec <__assert_fail@plt+0x3e934>
   51270:	ldr	r1, [fp, #-20]	; 0xffffffec
   51274:	str	r0, [r1]
   51278:	movw	r1, #0
   5127c:	cmp	r0, r1
   51280:	bne	51288 <__assert_fail@plt+0x3e6d0>
   51284:	b	51340 <__assert_fail@plt+0x3e788>
   51288:	ldr	r0, [fp, #-28]	; 0xffffffe4
   5128c:	ldr	r1, [fp, #-20]	; 0xffffffec
   51290:	ldr	r1, [r1]
   51294:	str	r0, [r1, #8]
   51298:	ldr	r0, [fp, #-20]	; 0xffffffec
   5129c:	ldr	r0, [r0]
   512a0:	movw	r1, #9
   512a4:	strh	r1, [r0, #56]	; 0x38
   512a8:	ldr	r0, [fp, #-20]	; 0xffffffec
   512ac:	ldr	r0, [r0]
   512b0:	movw	r1, #1
   512b4:	str	r1, [r0, #48]	; 0x30
   512b8:	ldr	r0, [fp, #-20]	; 0xffffffec
   512bc:	bl	51a1c <__assert_fail@plt+0x3ee64>
   512c0:	tst	r0, #1
   512c4:	bne	512cc <__assert_fail@plt+0x3e714>
   512c8:	b	51340 <__assert_fail@plt+0x3e788>
   512cc:	ldr	r0, [fp, #-20]	; 0xffffffec
   512d0:	ldr	r0, [r0, #48]	; 0x30
   512d4:	and	r0, r0, #4
   512d8:	cmp	r0, #0
   512dc:	bne	51324 <__assert_fail@plt+0x3e76c>
   512e0:	ldr	r0, [fp, #-20]	; 0xffffffec
   512e4:	ldr	r0, [r0, #48]	; 0x30
   512e8:	and	r0, r0, #512	; 0x200
   512ec:	cmp	r0, #0
   512f0:	bne	51324 <__assert_fail@plt+0x3e76c>
   512f4:	ldr	r0, [fp, #-20]	; 0xffffffec
   512f8:	movw	r1, #35940	; 0x8c64
   512fc:	movt	r1, #7
   51300:	bl	51af8 <__assert_fail@plt+0x3ef40>
   51304:	ldr	r1, [fp, #-20]	; 0xffffffec
   51308:	str	r0, [r1, #28]
   5130c:	cmp	r0, #0
   51310:	bge	51324 <__assert_fail@plt+0x3e76c>
   51314:	ldr	r0, [fp, #-20]	; 0xffffffec
   51318:	ldr	r1, [r0, #48]	; 0x30
   5131c:	orr	r1, r1, #4
   51320:	str	r1, [r0, #48]	; 0x30
   51324:	ldr	r0, [fp, #-20]	; 0xffffffec
   51328:	add	r0, r0, #60	; 0x3c
   5132c:	mvn	r1, #0
   51330:	bl	72f78 <__assert_fail@plt+0x603c0>
   51334:	ldr	r0, [fp, #-20]	; 0xffffffec
   51338:	str	r0, [fp, #-4]
   5133c:	b	5136c <__assert_fail@plt+0x3e7b4>
   51340:	ldr	r0, [fp, #-28]	; 0xffffffe4
   51344:	bl	51b94 <__assert_fail@plt+0x3efdc>
   51348:	ldr	r0, [fp, #-36]	; 0xffffffdc
   5134c:	bl	50c68 <__assert_fail@plt+0x3e0b0>
   51350:	ldr	r0, [fp, #-20]	; 0xffffffec
   51354:	ldr	r0, [r0, #24]
   51358:	bl	50c68 <__assert_fail@plt+0x3e0b0>
   5135c:	ldr	r0, [fp, #-20]	; 0xffffffec
   51360:	bl	50c68 <__assert_fail@plt+0x3e0b0>
   51364:	movw	r0, #0
   51368:	str	r0, [fp, #-4]
   5136c:	ldr	r0, [fp, #-4]
   51370:	mov	sp, fp
   51374:	pop	{fp, pc}
   51378:			; <UNDEFINED> instruction: 0xfffff000
   5137c:	andeq	r0, r8, r0
   51380:	push	{fp, lr}
   51384:	mov	fp, sp
   51388:	sub	sp, sp, #16
   5138c:	str	r0, [fp, #-4]
   51390:	movw	r0, #0
   51394:	str	r0, [sp, #4]
   51398:	ldr	r0, [fp, #-4]
   5139c:	ldr	r0, [r0]
   513a0:	movw	r1, #0
   513a4:	cmp	r0, r1
   513a8:	beq	513e4 <__assert_fail@plt+0x3e82c>
   513ac:	ldr	r0, [fp, #-4]
   513b0:	ldr	r0, [r0]
   513b4:	bl	12888 <strlen@plt>
   513b8:	str	r0, [sp, #8]
   513bc:	ldr	lr, [sp, #4]
   513c0:	cmp	r0, lr
   513c4:	bls	513d0 <__assert_fail@plt+0x3e818>
   513c8:	ldr	r0, [sp, #8]
   513cc:	str	r0, [sp, #4]
   513d0:	b	513d4 <__assert_fail@plt+0x3e81c>
   513d4:	ldr	r0, [fp, #-4]
   513d8:	add	r0, r0, #4
   513dc:	str	r0, [fp, #-4]
   513e0:	b	51398 <__assert_fail@plt+0x3e7e0>
   513e4:	ldr	r0, [sp, #4]
   513e8:	add	r0, r0, #1
   513ec:	mov	sp, fp
   513f0:	pop	{fp, pc}
   513f4:	push	{fp, lr}
   513f8:	mov	fp, sp
   513fc:	sub	sp, sp, #24
   51400:	str	r0, [fp, #-8]
   51404:	str	r1, [sp, #12]
   51408:	ldr	r0, [fp, #-8]
   5140c:	ldr	r0, [r0, #36]	; 0x24
   51410:	ldr	r1, [sp, #12]
   51414:	add	r0, r0, r1
   51418:	add	r0, r0, #256	; 0x100
   5141c:	str	r0, [sp, #4]
   51420:	ldr	r0, [sp, #4]
   51424:	ldr	r1, [fp, #-8]
   51428:	ldr	r1, [r1, #36]	; 0x24
   5142c:	cmp	r0, r1
   51430:	bcs	51468 <__assert_fail@plt+0x3e8b0>
   51434:	ldr	r0, [fp, #-8]
   51438:	ldr	r0, [r0, #24]
   5143c:	bl	50c68 <__assert_fail@plt+0x3e0b0>
   51440:	ldr	r0, [fp, #-8]
   51444:	movw	lr, #0
   51448:	str	lr, [r0, #24]
   5144c:	bl	128d0 <__errno_location@plt>
   51450:	movw	lr, #36	; 0x24
   51454:	str	lr, [r0]
   51458:	movw	r0, #0
   5145c:	and	r0, r0, #1
   51460:	strb	r0, [fp, #-1]
   51464:	b	514dc <__assert_fail@plt+0x3e924>
   51468:	ldr	r0, [sp, #4]
   5146c:	ldr	r1, [fp, #-8]
   51470:	str	r0, [r1, #36]	; 0x24
   51474:	ldr	r0, [fp, #-8]
   51478:	ldr	r0, [r0, #24]
   5147c:	ldr	r1, [fp, #-8]
   51480:	ldr	r1, [r1, #36]	; 0x24
   51484:	bl	55a84 <__assert_fail@plt+0x42ecc>
   51488:	str	r0, [sp, #8]
   5148c:	ldr	r0, [sp, #8]
   51490:	movw	r1, #0
   51494:	cmp	r0, r1
   51498:	bne	514c4 <__assert_fail@plt+0x3e90c>
   5149c:	ldr	r0, [fp, #-8]
   514a0:	ldr	r0, [r0, #24]
   514a4:	bl	50c68 <__assert_fail@plt+0x3e0b0>
   514a8:	ldr	r0, [fp, #-8]
   514ac:	movw	lr, #0
   514b0:	str	lr, [r0, #24]
   514b4:	movw	r0, #0
   514b8:	and	r0, r0, #1
   514bc:	strb	r0, [fp, #-1]
   514c0:	b	514dc <__assert_fail@plt+0x3e924>
   514c4:	ldr	r0, [sp, #8]
   514c8:	ldr	r1, [fp, #-8]
   514cc:	str	r0, [r1, #24]
   514d0:	movw	r0, #1
   514d4:	and	r0, r0, #1
   514d8:	strb	r0, [fp, #-1]
   514dc:	ldrb	r0, [fp, #-1]
   514e0:	and	r0, r0, #1
   514e4:	mov	sp, fp
   514e8:	pop	{fp, pc}
   514ec:	push	{fp, lr}
   514f0:	mov	fp, sp
   514f4:	sub	sp, sp, #24
   514f8:	str	r0, [fp, #-8]
   514fc:	str	r1, [sp, #12]
   51500:	str	r2, [sp, #8]
   51504:	ldr	r0, [sp, #8]
   51508:	add	r0, r0, #1
   5150c:	add	r0, r0, #175	; 0xaf
   51510:	mvn	r1, #7
   51514:	and	r0, r0, r1
   51518:	str	r0, [sp]
   5151c:	ldr	r0, [sp]
   51520:	bl	549ac <__assert_fail@plt+0x41df4>
   51524:	str	r0, [sp, #4]
   51528:	movw	r1, #0
   5152c:	cmp	r0, r1
   51530:	bne	51540 <__assert_fail@plt+0x3e988>
   51534:	movw	r0, #0
   51538:	str	r0, [fp, #-4]
   5153c:	b	515d8 <__assert_fail@plt+0x3ea20>
   51540:	ldr	r0, [sp, #4]
   51544:	add	r0, r0, #168	; 0xa8
   51548:	ldr	r1, [sp, #12]
   5154c:	ldr	r2, [sp, #8]
   51550:	bl	125c4 <memcpy@plt>
   51554:	ldr	r0, [sp, #4]
   51558:	add	r0, r0, #168	; 0xa8
   5155c:	ldr	r1, [sp, #8]
   51560:	add	r0, r0, r1
   51564:	movw	r1, #0
   51568:	strb	r1, [r0]
   5156c:	ldr	r0, [sp, #8]
   51570:	ldr	r1, [sp, #4]
   51574:	str	r0, [r1, #52]	; 0x34
   51578:	ldr	r0, [fp, #-8]
   5157c:	ldr	r1, [sp, #4]
   51580:	str	r0, [r1, #44]	; 0x2c
   51584:	ldr	r0, [fp, #-8]
   51588:	ldr	r0, [r0, #24]
   5158c:	ldr	r1, [sp, #4]
   51590:	str	r0, [r1, #28]
   51594:	ldr	r0, [sp, #4]
   51598:	movw	r1, #0
   5159c:	str	r1, [r0, #32]
   515a0:	ldr	r0, [sp, #4]
   515a4:	str	r1, [r0, #12]
   515a8:	ldr	r0, [sp, #4]
   515ac:	movw	r2, #0
   515b0:	strh	r2, [r0, #58]	; 0x3a
   515b4:	ldr	r0, [sp, #4]
   515b8:	movw	r2, #3
   515bc:	strh	r2, [r0, #60]	; 0x3c
   515c0:	ldr	r0, [sp, #4]
   515c4:	str	r1, [r0, #16]
   515c8:	ldr	r0, [sp, #4]
   515cc:	str	r1, [r0, #20]
   515d0:	ldr	r0, [sp, #4]
   515d4:	str	r0, [fp, #-4]
   515d8:	ldr	r0, [fp, #-4]
   515dc:	mov	sp, fp
   515e0:	pop	{fp, pc}
   515e4:	push	{fp, lr}
   515e8:	mov	fp, sp
   515ec:	sub	sp, sp, #8
   515f0:	str	r0, [sp, #4]
   515f4:	and	r0, r1, #1
   515f8:	strb	r0, [sp, #3]
   515fc:	ldr	r0, [sp, #4]
   51600:	ldrh	r0, [r0, #56]	; 0x38
   51604:	cmp	r0, #11
   51608:	beq	51610 <__assert_fail@plt+0x3ea58>
   5160c:	bl	12b64 <abort@plt>
   51610:	b	51614 <__assert_fail@plt+0x3ea5c>
   51614:	ldrb	r0, [sp, #3]
   51618:	mov	r1, #1
   5161c:	tst	r0, #1
   51620:	movwne	r1, #2
   51624:	ldr	r0, [sp, #4]
   51628:	mov	r2, #0
   5162c:	str	r2, [r0, #116]	; 0x74
   51630:	str	r1, [r0, #112]	; 0x70
   51634:	mov	sp, fp
   51638:	pop	{fp, pc}
   5163c:	push	{fp, lr}
   51640:	mov	fp, sp
   51644:	sub	sp, sp, #24
   51648:	str	r0, [fp, #-8]
   5164c:	str	r1, [sp, #12]
   51650:	and	r0, r2, #1
   51654:	strb	r0, [sp, #11]
   51658:	ldr	r0, [sp, #12]
   5165c:	add	r0, r0, #64	; 0x40
   51660:	str	r0, [sp, #4]
   51664:	ldr	r0, [sp, #12]
   51668:	ldr	r0, [r0, #48]	; 0x30
   5166c:	cmp	r0, #0
   51670:	bne	51690 <__assert_fail@plt+0x3ead8>
   51674:	ldr	r0, [fp, #-8]
   51678:	ldr	r0, [r0, #48]	; 0x30
   5167c:	and	r0, r0, #1
   51680:	cmp	r0, #0
   51684:	beq	51690 <__assert_fail@plt+0x3ead8>
   51688:	movw	r0, #1
   5168c:	strb	r0, [sp, #11]
   51690:	ldr	r0, [fp, #-8]
   51694:	ldr	r0, [r0, #48]	; 0x30
   51698:	and	r0, r0, #2
   5169c:	cmp	r0, #0
   516a0:	bne	516b0 <__assert_fail@plt+0x3eaf8>
   516a4:	ldrb	r0, [sp, #11]
   516a8:	tst	r0, #1
   516ac:	beq	51720 <__assert_fail@plt+0x3eb68>
   516b0:	ldr	r0, [sp, #12]
   516b4:	ldr	r0, [r0, #24]
   516b8:	ldr	r1, [sp, #4]
   516bc:	bl	77a84 <__assert_fail@plt+0x64ecc>
   516c0:	cmp	r0, #0
   516c4:	beq	5171c <__assert_fail@plt+0x3eb64>
   516c8:	bl	128d0 <__errno_location@plt>
   516cc:	ldr	r0, [r0]
   516d0:	cmp	r0, #2
   516d4:	bne	51708 <__assert_fail@plt+0x3eb50>
   516d8:	ldr	r0, [sp, #12]
   516dc:	ldr	r0, [r0, #24]
   516e0:	ldr	r1, [sp, #4]
   516e4:	bl	77aa4 <__assert_fail@plt+0x64eec>
   516e8:	cmp	r0, #0
   516ec:	bne	51708 <__assert_fail@plt+0x3eb50>
   516f0:	bl	128d0 <__errno_location@plt>
   516f4:	movw	lr, #0
   516f8:	str	lr, [r0]
   516fc:	movw	r0, #13
   51700:	strh	r0, [fp, #-2]
   51704:	b	51848 <__assert_fail@plt+0x3ec90>
   51708:	bl	128d0 <__errno_location@plt>
   5170c:	ldr	r0, [r0]
   51710:	ldr	lr, [sp, #12]
   51714:	str	r0, [lr, #32]
   51718:	b	51754 <__assert_fail@plt+0x3eb9c>
   5171c:	b	51778 <__assert_fail@plt+0x3ebc0>
   51720:	ldr	r0, [fp, #-8]
   51724:	ldr	r0, [r0, #32]
   51728:	ldr	r1, [sp, #12]
   5172c:	ldr	r1, [r1, #24]
   51730:	ldr	r2, [sp, #4]
   51734:	movw	r3, #256	; 0x100
   51738:	bl	77ab4 <__assert_fail@plt+0x64efc>
   5173c:	cmp	r0, #0
   51740:	beq	51774 <__assert_fail@plt+0x3ebbc>
   51744:	bl	128d0 <__errno_location@plt>
   51748:	ldr	r0, [r0]
   5174c:	ldr	lr, [sp, #12]
   51750:	str	r0, [lr, #32]
   51754:	ldr	r0, [sp, #4]
   51758:	movw	r1, #0
   5175c:	and	r1, r1, #255	; 0xff
   51760:	movw	r2, #104	; 0x68
   51764:	bl	12900 <memset@plt>
   51768:	movw	r0, #10
   5176c:	strh	r0, [fp, #-2]
   51770:	b	51848 <__assert_fail@plt+0x3ec90>
   51774:	b	51778 <__assert_fail@plt+0x3ebc0>
   51778:	ldr	r0, [sp, #4]
   5177c:	ldr	r0, [r0, #16]
   51780:	and	r0, r0, #61440	; 0xf000
   51784:	cmp	r0, #16384	; 0x4000
   51788:	bne	51800 <__assert_fail@plt+0x3ec48>
   5178c:	ldr	r0, [sp, #12]
   51790:	ldrb	r0, [r0, #168]	; 0xa8
   51794:	cmp	r0, #46	; 0x2e
   51798:	bne	517f4 <__assert_fail@plt+0x3ec3c>
   5179c:	ldr	r0, [sp, #12]
   517a0:	ldrsb	r0, [r0, #169]	; 0xa9
   517a4:	cmp	r0, #0
   517a8:	beq	517cc <__assert_fail@plt+0x3ec14>
   517ac:	ldr	r0, [sp, #12]
   517b0:	ldrb	r0, [r0, #169]	; 0xa9
   517b4:	cmp	r0, #46	; 0x2e
   517b8:	bne	517f4 <__assert_fail@plt+0x3ec3c>
   517bc:	ldr	r0, [sp, #12]
   517c0:	ldrsb	r0, [r0, #170]	; 0xaa
   517c4:	cmp	r0, #0
   517c8:	bne	517f4 <__assert_fail@plt+0x3ec3c>
   517cc:	ldr	r0, [sp, #12]
   517d0:	ldr	r0, [r0, #48]	; 0x30
   517d4:	cmp	r0, #0
   517d8:	movw	r0, #0
   517dc:	moveq	r0, #1
   517e0:	tst	r0, #1
   517e4:	movw	r0, #1
   517e8:	moveq	r0, #5
   517ec:	strh	r0, [fp, #-2]
   517f0:	b	51848 <__assert_fail@plt+0x3ec90>
   517f4:	movw	r0, #1
   517f8:	strh	r0, [fp, #-2]
   517fc:	b	51848 <__assert_fail@plt+0x3ec90>
   51800:	ldr	r0, [sp, #4]
   51804:	ldr	r0, [r0, #16]
   51808:	and	r0, r0, #61440	; 0xf000
   5180c:	cmp	r0, #40960	; 0xa000
   51810:	bne	51820 <__assert_fail@plt+0x3ec68>
   51814:	movw	r0, #12
   51818:	strh	r0, [fp, #-2]
   5181c:	b	51848 <__assert_fail@plt+0x3ec90>
   51820:	ldr	r0, [sp, #4]
   51824:	ldr	r0, [r0, #16]
   51828:	and	r0, r0, #61440	; 0xf000
   5182c:	cmp	r0, #32768	; 0x8000
   51830:	bne	51840 <__assert_fail@plt+0x3ec88>
   51834:	movw	r0, #8
   51838:	strh	r0, [fp, #-2]
   5183c:	b	51848 <__assert_fail@plt+0x3ec90>
   51840:	movw	r0, #3
   51844:	strh	r0, [fp, #-2]
   51848:	ldrh	r0, [fp, #-2]
   5184c:	mov	sp, fp
   51850:	pop	{fp, pc}
   51854:	push	{fp, lr}
   51858:	mov	fp, sp
   5185c:	sub	sp, sp, #48	; 0x30
   51860:	add	r3, sp, #20
   51864:	str	r0, [fp, #-8]
   51868:	str	r1, [fp, #-12]
   5186c:	str	r2, [fp, #-16]
   51870:	mov	r0, r3
   51874:	cmp	r3, r0
   51878:	bne	5188c <__assert_fail@plt+0x3ecd4>
   5187c:	ldr	r0, [fp, #-8]
   51880:	ldr	r0, [r0, #44]	; 0x2c
   51884:	str	r0, [sp, #8]
   51888:	b	5189c <__assert_fail@plt+0x3ece4>
   5188c:	movw	r0, #18440	; 0x4808
   51890:	movt	r0, #5
   51894:	str	r0, [sp, #8]
   51898:	b	5189c <__assert_fail@plt+0x3ece4>
   5189c:	ldr	r0, [sp, #8]
   518a0:	str	r0, [sp, #16]
   518a4:	ldr	r0, [fp, #-16]
   518a8:	ldr	r1, [fp, #-8]
   518ac:	ldr	r1, [r1, #40]	; 0x28
   518b0:	cmp	r0, r1
   518b4:	bls	51944 <__assert_fail@plt+0x3ed8c>
   518b8:	ldr	r0, [pc, #344]	; 51a18 <__assert_fail@plt+0x3ee60>
   518bc:	ldr	r1, [fp, #-16]
   518c0:	add	r1, r1, #40	; 0x28
   518c4:	ldr	r2, [fp, #-8]
   518c8:	str	r1, [r2, #40]	; 0x28
   518cc:	ldr	r1, [fp, #-8]
   518d0:	ldr	r1, [r1, #40]	; 0x28
   518d4:	cmp	r0, r1
   518d8:	bcc	5190c <__assert_fail@plt+0x3ed54>
   518dc:	ldr	r0, [fp, #-8]
   518e0:	ldr	r1, [r0, #8]
   518e4:	ldr	r0, [r0, #40]	; 0x28
   518e8:	lsl	r0, r0, #2
   518ec:	str	r0, [sp, #4]
   518f0:	mov	r0, r1
   518f4:	ldr	r1, [sp, #4]
   518f8:	bl	55a84 <__assert_fail@plt+0x42ecc>
   518fc:	str	r0, [sp, #12]
   51900:	movw	r1, #0
   51904:	cmp	r0, r1
   51908:	bne	51938 <__assert_fail@plt+0x3ed80>
   5190c:	ldr	r0, [fp, #-8]
   51910:	ldr	r0, [r0, #8]
   51914:	bl	50c68 <__assert_fail@plt+0x3e0b0>
   51918:	ldr	r0, [fp, #-8]
   5191c:	movw	lr, #0
   51920:	str	lr, [r0, #8]
   51924:	ldr	r0, [fp, #-8]
   51928:	str	lr, [r0, #40]	; 0x28
   5192c:	ldr	r0, [fp, #-12]
   51930:	str	r0, [fp, #-4]
   51934:	b	51a0c <__assert_fail@plt+0x3ee54>
   51938:	ldr	r0, [sp, #12]
   5193c:	ldr	r1, [fp, #-8]
   51940:	str	r0, [r1, #8]
   51944:	ldr	r0, [fp, #-8]
   51948:	ldr	r0, [r0, #8]
   5194c:	str	r0, [fp, #-20]	; 0xffffffec
   51950:	ldr	r0, [fp, #-12]
   51954:	str	r0, [sp, #24]
   51958:	ldr	r0, [sp, #24]
   5195c:	movw	r1, #0
   51960:	cmp	r0, r1
   51964:	beq	5198c <__assert_fail@plt+0x3edd4>
   51968:	ldr	r0, [sp, #24]
   5196c:	ldr	r1, [fp, #-20]	; 0xffffffec
   51970:	add	r2, r1, #4
   51974:	str	r2, [fp, #-20]	; 0xffffffec
   51978:	str	r0, [r1]
   5197c:	ldr	r0, [sp, #24]
   51980:	ldr	r0, [r0, #8]
   51984:	str	r0, [sp, #24]
   51988:	b	51958 <__assert_fail@plt+0x3eda0>
   5198c:	ldr	r0, [fp, #-8]
   51990:	ldr	r0, [r0, #8]
   51994:	ldr	r1, [fp, #-16]
   51998:	ldr	r3, [sp, #16]
   5199c:	movw	r2, #4
   519a0:	bl	12abc <qsort@plt>
   519a4:	ldr	r0, [fp, #-8]
   519a8:	ldr	r0, [r0, #8]
   519ac:	str	r0, [fp, #-20]	; 0xffffffec
   519b0:	ldr	r0, [r0]
   519b4:	str	r0, [fp, #-12]
   519b8:	ldr	r0, [fp, #-16]
   519bc:	mvn	r1, #0
   519c0:	add	r0, r0, r1
   519c4:	str	r0, [fp, #-16]
   519c8:	cmp	r0, #0
   519cc:	beq	519f4 <__assert_fail@plt+0x3ee3c>
   519d0:	ldr	r0, [fp, #-20]	; 0xffffffec
   519d4:	ldr	r0, [r0, #4]
   519d8:	ldr	r1, [fp, #-20]	; 0xffffffec
   519dc:	ldr	r1, [r1]
   519e0:	str	r0, [r1, #8]
   519e4:	ldr	r0, [fp, #-20]	; 0xffffffec
   519e8:	add	r0, r0, #4
   519ec:	str	r0, [fp, #-20]	; 0xffffffec
   519f0:	b	519b8 <__assert_fail@plt+0x3ee00>
   519f4:	ldr	r0, [fp, #-20]	; 0xffffffec
   519f8:	ldr	r0, [r0]
   519fc:	movw	r1, #0
   51a00:	str	r1, [r0, #8]
   51a04:	ldr	r0, [fp, #-12]
   51a08:	str	r0, [fp, #-4]
   51a0c:	ldr	r0, [fp, #-4]
   51a10:	mov	sp, fp
   51a14:	pop	{fp, pc}
   51a18:	svccc	0x00ffffff
   51a1c:	push	{fp, lr}
   51a20:	mov	fp, sp
   51a24:	sub	sp, sp, #16
   51a28:	str	r0, [sp, #8]
   51a2c:	ldr	r0, [sp, #8]
   51a30:	ldr	r0, [r0, #48]	; 0x30
   51a34:	movw	r1, #258	; 0x102
   51a38:	and	r0, r0, r1
   51a3c:	cmp	r0, #0
   51a40:	beq	51a9c <__assert_fail@plt+0x3eee4>
   51a44:	movw	r0, #31
   51a48:	movw	r1, #0
   51a4c:	movw	r2, #16600	; 0x40d8
   51a50:	movt	r2, #5
   51a54:	movw	r3, #16684	; 0x412c
   51a58:	movt	r3, #5
   51a5c:	movw	ip, #3176	; 0xc68
   51a60:	movt	ip, #5
   51a64:	str	ip, [sp]
   51a68:	bl	2d52c <__assert_fail@plt+0x1a974>
   51a6c:	ldr	r1, [sp, #8]
   51a70:	str	r0, [r1, #56]	; 0x38
   51a74:	ldr	r0, [sp, #8]
   51a78:	ldr	r0, [r0, #56]	; 0x38
   51a7c:	movw	r1, #0
   51a80:	cmp	r0, r1
   51a84:	bne	51a98 <__assert_fail@plt+0x3eee0>
   51a88:	movw	r0, #0
   51a8c:	and	r0, r0, #1
   51a90:	strb	r0, [fp, #-1]
   51a94:	b	51ae8 <__assert_fail@plt+0x3ef30>
   51a98:	b	51adc <__assert_fail@plt+0x3ef24>
   51a9c:	movw	r0, #32
   51aa0:	bl	549ac <__assert_fail@plt+0x41df4>
   51aa4:	ldr	lr, [sp, #8]
   51aa8:	str	r0, [lr, #56]	; 0x38
   51aac:	ldr	r0, [sp, #8]
   51ab0:	ldr	r0, [r0, #56]	; 0x38
   51ab4:	movw	lr, #0
   51ab8:	cmp	r0, lr
   51abc:	bne	51ad0 <__assert_fail@plt+0x3ef18>
   51ac0:	movw	r0, #0
   51ac4:	and	r0, r0, #1
   51ac8:	strb	r0, [fp, #-1]
   51acc:	b	51ae8 <__assert_fail@plt+0x3ef30>
   51ad0:	ldr	r0, [sp, #8]
   51ad4:	ldr	r0, [r0, #56]	; 0x38
   51ad8:	bl	7182c <__assert_fail@plt+0x5ec74>
   51adc:	movw	r0, #1
   51ae0:	and	r0, r0, #1
   51ae4:	strb	r0, [fp, #-1]
   51ae8:	ldrb	r0, [fp, #-1]
   51aec:	and	r0, r0, #1
   51af0:	mov	sp, fp
   51af4:	pop	{fp, pc}
   51af8:	push	{fp, lr}
   51afc:	mov	fp, sp
   51b00:	sub	sp, sp, #24
   51b04:	ldr	r2, [pc, #132]	; 51b90 <__assert_fail@plt+0x3efd8>
   51b08:	str	r0, [fp, #-4]
   51b0c:	str	r1, [fp, #-8]
   51b10:	ldr	r0, [fp, #-4]
   51b14:	ldr	r0, [r0, #48]	; 0x30
   51b18:	and	r0, r0, #16
   51b1c:	cmp	r0, #0
   51b20:	movw	r0, #0
   51b24:	movne	r0, #1
   51b28:	tst	r0, #1
   51b2c:	movw	r0, #32768	; 0x8000
   51b30:	moveq	r0, #0
   51b34:	orr	r0, r0, r2
   51b38:	str	r0, [sp, #12]
   51b3c:	ldr	r0, [fp, #-4]
   51b40:	ldr	r0, [r0, #48]	; 0x30
   51b44:	and	r0, r0, #512	; 0x200
   51b48:	cmp	r0, #0
   51b4c:	beq	51b6c <__assert_fail@plt+0x3efb4>
   51b50:	ldr	r0, [fp, #-4]
   51b54:	ldr	r0, [r0, #32]
   51b58:	ldr	r1, [fp, #-8]
   51b5c:	ldr	r2, [sp, #12]
   51b60:	bl	326bc <__assert_fail@plt+0x1fb04>
   51b64:	str	r0, [sp, #4]
   51b68:	b	51b7c <__assert_fail@plt+0x3efc4>
   51b6c:	ldr	r0, [fp, #-8]
   51b70:	ldr	r1, [sp, #12]
   51b74:	bl	2c768 <__assert_fail@plt+0x19bb0>
   51b78:	str	r0, [sp, #4]
   51b7c:	ldr	r0, [sp, #4]
   51b80:	str	r0, [sp, #8]
   51b84:	ldr	r0, [sp, #8]
   51b88:	mov	sp, fp
   51b8c:	pop	{fp, pc}
   51b90:	andeq	r4, r8, r0, lsl #18
   51b94:	push	{fp, lr}
   51b98:	mov	fp, sp
   51b9c:	sub	sp, sp, #16
   51ba0:	str	r0, [fp, #-4]
   51ba4:	ldr	r0, [fp, #-4]
   51ba8:	str	r0, [sp, #8]
   51bac:	movw	r1, #0
   51bb0:	cmp	r0, r1
   51bb4:	beq	51bf4 <__assert_fail@plt+0x3f03c>
   51bb8:	ldr	r0, [fp, #-4]
   51bbc:	ldr	r0, [r0, #8]
   51bc0:	str	r0, [fp, #-4]
   51bc4:	ldr	r0, [sp, #8]
   51bc8:	ldr	r0, [r0, #12]
   51bcc:	movw	r1, #0
   51bd0:	cmp	r0, r1
   51bd4:	beq	51be8 <__assert_fail@plt+0x3f030>
   51bd8:	ldr	r0, [sp, #8]
   51bdc:	ldr	r0, [r0, #12]
   51be0:	bl	12b88 <closedir@plt>
   51be4:	str	r0, [sp, #4]
   51be8:	ldr	r0, [sp, #8]
   51bec:	bl	50c68 <__assert_fail@plt+0x3e0b0>
   51bf0:	b	51ba4 <__assert_fail@plt+0x3efec>
   51bf4:	mov	sp, fp
   51bf8:	pop	{fp, pc}
   51bfc:	push	{fp, lr}
   51c00:	mov	fp, sp
   51c04:	sub	sp, sp, #32
   51c08:	str	r0, [fp, #-8]
   51c0c:	movw	r0, #0
   51c10:	str	r0, [sp, #12]
   51c14:	ldr	r1, [fp, #-8]
   51c18:	ldr	r1, [r1]
   51c1c:	cmp	r1, r0
   51c20:	beq	51c94 <__assert_fail@plt+0x3f0dc>
   51c24:	ldr	r0, [fp, #-8]
   51c28:	ldr	r0, [r0]
   51c2c:	str	r0, [sp, #16]
   51c30:	ldr	r0, [sp, #16]
   51c34:	ldr	r0, [r0, #48]	; 0x30
   51c38:	cmp	r0, #0
   51c3c:	blt	51c8c <__assert_fail@plt+0x3f0d4>
   51c40:	ldr	r0, [sp, #16]
   51c44:	str	r0, [fp, #-12]
   51c48:	ldr	r0, [sp, #16]
   51c4c:	ldr	r0, [r0, #8]
   51c50:	movw	r1, #0
   51c54:	cmp	r0, r1
   51c58:	beq	51c6c <__assert_fail@plt+0x3f0b4>
   51c5c:	ldr	r0, [sp, #16]
   51c60:	ldr	r0, [r0, #8]
   51c64:	str	r0, [sp, #8]
   51c68:	b	51c78 <__assert_fail@plt+0x3f0c0>
   51c6c:	ldr	r0, [sp, #16]
   51c70:	ldr	r0, [r0, #4]
   51c74:	str	r0, [sp, #8]
   51c78:	ldr	r0, [sp, #8]
   51c7c:	str	r0, [sp, #16]
   51c80:	ldr	r0, [fp, #-12]
   51c84:	bl	50c68 <__assert_fail@plt+0x3e0b0>
   51c88:	b	51c30 <__assert_fail@plt+0x3f078>
   51c8c:	ldr	r0, [sp, #16]
   51c90:	bl	50c68 <__assert_fail@plt+0x3e0b0>
   51c94:	ldr	r0, [fp, #-8]
   51c98:	ldr	r0, [r0, #4]
   51c9c:	movw	r1, #0
   51ca0:	cmp	r0, r1
   51ca4:	beq	51cb4 <__assert_fail@plt+0x3f0fc>
   51ca8:	ldr	r0, [fp, #-8]
   51cac:	ldr	r0, [r0, #4]
   51cb0:	bl	51b94 <__assert_fail@plt+0x3efdc>
   51cb4:	ldr	r0, [fp, #-8]
   51cb8:	ldr	r0, [r0, #8]
   51cbc:	bl	50c68 <__assert_fail@plt+0x3e0b0>
   51cc0:	ldr	r0, [fp, #-8]
   51cc4:	ldr	r0, [r0, #24]
   51cc8:	bl	50c68 <__assert_fail@plt+0x3e0b0>
   51ccc:	ldr	r0, [fp, #-8]
   51cd0:	ldr	r0, [r0, #48]	; 0x30
   51cd4:	and	r0, r0, #512	; 0x200
   51cd8:	cmp	r0, #0
   51cdc:	beq	51d1c <__assert_fail@plt+0x3f164>
   51ce0:	ldr	r0, [fp, #-8]
   51ce4:	ldr	r0, [r0, #32]
   51ce8:	movw	r1, #0
   51cec:	cmp	r1, r0
   51cf0:	bgt	51d18 <__assert_fail@plt+0x3f160>
   51cf4:	ldr	r0, [fp, #-8]
   51cf8:	ldr	r0, [r0, #32]
   51cfc:	bl	12b70 <close@plt>
   51d00:	cmp	r0, #0
   51d04:	beq	51d14 <__assert_fail@plt+0x3f15c>
   51d08:	bl	128d0 <__errno_location@plt>
   51d0c:	ldr	r0, [r0]
   51d10:	str	r0, [sp, #12]
   51d14:	b	51d18 <__assert_fail@plt+0x3f160>
   51d18:	b	51d88 <__assert_fail@plt+0x3f1d0>
   51d1c:	ldr	r0, [fp, #-8]
   51d20:	ldr	r0, [r0, #48]	; 0x30
   51d24:	and	r0, r0, #4
   51d28:	cmp	r0, #0
   51d2c:	bne	51d84 <__assert_fail@plt+0x3f1cc>
   51d30:	ldr	r0, [fp, #-8]
   51d34:	ldr	r0, [r0, #28]
   51d38:	bl	12aa4 <fchdir@plt>
   51d3c:	cmp	r0, #0
   51d40:	beq	51d50 <__assert_fail@plt+0x3f198>
   51d44:	bl	128d0 <__errno_location@plt>
   51d48:	ldr	r0, [r0]
   51d4c:	str	r0, [sp, #12]
   51d50:	ldr	r0, [fp, #-8]
   51d54:	ldr	r0, [r0, #28]
   51d58:	bl	12b70 <close@plt>
   51d5c:	cmp	r0, #0
   51d60:	beq	51d80 <__assert_fail@plt+0x3f1c8>
   51d64:	ldr	r0, [sp, #12]
   51d68:	cmp	r0, #0
   51d6c:	bne	51d7c <__assert_fail@plt+0x3f1c4>
   51d70:	bl	128d0 <__errno_location@plt>
   51d74:	ldr	r0, [r0]
   51d78:	str	r0, [sp, #12]
   51d7c:	b	51d80 <__assert_fail@plt+0x3f1c8>
   51d80:	b	51d84 <__assert_fail@plt+0x3f1cc>
   51d84:	b	51d88 <__assert_fail@plt+0x3f1d0>
   51d88:	ldr	r0, [fp, #-8]
   51d8c:	add	r0, r0, #60	; 0x3c
   51d90:	bl	51e04 <__assert_fail@plt+0x3f24c>
   51d94:	ldr	r0, [fp, #-8]
   51d98:	ldr	r0, [r0, #52]	; 0x34
   51d9c:	movw	lr, #0
   51da0:	cmp	r0, lr
   51da4:	beq	51db4 <__assert_fail@plt+0x3f1fc>
   51da8:	ldr	r0, [fp, #-8]
   51dac:	ldr	r0, [r0, #52]	; 0x34
   51db0:	bl	2da80 <__assert_fail@plt+0x1aec8>
   51db4:	ldr	r0, [fp, #-8]
   51db8:	bl	51e60 <__assert_fail@plt+0x3f2a8>
   51dbc:	ldr	r0, [fp, #-8]
   51dc0:	bl	50c68 <__assert_fail@plt+0x3e0b0>
   51dc4:	ldr	r0, [sp, #12]
   51dc8:	cmp	r0, #0
   51dcc:	beq	51df0 <__assert_fail@plt+0x3f238>
   51dd0:	ldr	r0, [sp, #12]
   51dd4:	str	r0, [sp, #4]
   51dd8:	bl	128d0 <__errno_location@plt>
   51ddc:	ldr	lr, [sp, #4]
   51de0:	str	lr, [r0]
   51de4:	mvn	r0, #0
   51de8:	str	r0, [fp, #-4]
   51dec:	b	51df8 <__assert_fail@plt+0x3f240>
   51df0:	movw	r0, #0
   51df4:	str	r0, [fp, #-4]
   51df8:	ldr	r0, [fp, #-4]
   51dfc:	mov	sp, fp
   51e00:	pop	{fp, pc}
   51e04:	push	{fp, lr}
   51e08:	mov	fp, sp
   51e0c:	sub	sp, sp, #16
   51e10:	str	r0, [fp, #-4]
   51e14:	ldr	r0, [fp, #-4]
   51e18:	bl	72fec <__assert_fail@plt+0x60434>
   51e1c:	mvn	lr, #0
   51e20:	eor	r0, r0, lr
   51e24:	tst	r0, #1
   51e28:	beq	51e58 <__assert_fail@plt+0x3f2a0>
   51e2c:	ldr	r0, [fp, #-4]
   51e30:	bl	730bc <__assert_fail@plt+0x60504>
   51e34:	str	r0, [sp, #8]
   51e38:	ldr	r0, [sp, #8]
   51e3c:	movw	lr, #0
   51e40:	cmp	lr, r0
   51e44:	bgt	51e54 <__assert_fail@plt+0x3f29c>
   51e48:	ldr	r0, [sp, #8]
   51e4c:	bl	12b70 <close@plt>
   51e50:	str	r0, [sp, #4]
   51e54:	b	51e14 <__assert_fail@plt+0x3f25c>
   51e58:	mov	sp, fp
   51e5c:	pop	{fp, pc}
   51e60:	push	{fp, lr}
   51e64:	mov	fp, sp
   51e68:	sub	sp, sp, #8
   51e6c:	str	r0, [sp, #4]
   51e70:	ldr	r0, [sp, #4]
   51e74:	ldr	r0, [r0, #48]	; 0x30
   51e78:	movw	r1, #258	; 0x102
   51e7c:	and	r0, r0, r1
   51e80:	cmp	r0, #0
   51e84:	beq	51eac <__assert_fail@plt+0x3f2f4>
   51e88:	ldr	r0, [sp, #4]
   51e8c:	ldr	r0, [r0, #56]	; 0x38
   51e90:	movw	r1, #0
   51e94:	cmp	r0, r1
   51e98:	beq	51ea8 <__assert_fail@plt+0x3f2f0>
   51e9c:	ldr	r0, [sp, #4]
   51ea0:	ldr	r0, [r0, #56]	; 0x38
   51ea4:	bl	2da80 <__assert_fail@plt+0x1aec8>
   51ea8:	b	51eb8 <__assert_fail@plt+0x3f300>
   51eac:	ldr	r0, [sp, #4]
   51eb0:	ldr	r0, [r0, #56]	; 0x38
   51eb4:	bl	50c68 <__assert_fail@plt+0x3e0b0>
   51eb8:	mov	sp, fp
   51ebc:	pop	{fp, pc}
   51ec0:	push	{fp, lr}
   51ec4:	mov	fp, sp
   51ec8:	sub	sp, sp, #48	; 0x30
   51ecc:	str	r0, [fp, #-8]
   51ed0:	ldr	r0, [fp, #-8]
   51ed4:	ldr	r0, [r0]
   51ed8:	movw	r1, #0
   51edc:	cmp	r0, r1
   51ee0:	beq	51ef8 <__assert_fail@plt+0x3f340>
   51ee4:	ldr	r0, [fp, #-8]
   51ee8:	ldr	r0, [r0, #48]	; 0x30
   51eec:	and	r0, r0, #8192	; 0x2000
   51ef0:	cmp	r0, #0
   51ef4:	beq	51f04 <__assert_fail@plt+0x3f34c>
   51ef8:	movw	r0, #0
   51efc:	str	r0, [fp, #-4]
   51f00:	b	528a0 <__assert_fail@plt+0x3fce8>
   51f04:	ldr	r0, [fp, #-8]
   51f08:	ldr	r0, [r0]
   51f0c:	str	r0, [fp, #-12]
   51f10:	ldr	r0, [fp, #-12]
   51f14:	ldrh	r0, [r0, #60]	; 0x3c
   51f18:	strh	r0, [fp, #-18]	; 0xffffffee
   51f1c:	ldr	r0, [fp, #-12]
   51f20:	movw	r1, #3
   51f24:	strh	r1, [r0, #60]	; 0x3c
   51f28:	ldrh	r0, [fp, #-18]	; 0xffffffee
   51f2c:	cmp	r0, #1
   51f30:	bne	51f5c <__assert_fail@plt+0x3f3a4>
   51f34:	ldr	r0, [fp, #-8]
   51f38:	ldr	r1, [fp, #-12]
   51f3c:	movw	r2, #0
   51f40:	and	r2, r2, #1
   51f44:	bl	5163c <__assert_fail@plt+0x3ea84>
   51f48:	ldr	r1, [fp, #-12]
   51f4c:	strh	r0, [r1, #56]	; 0x38
   51f50:	ldr	r0, [fp, #-12]
   51f54:	str	r0, [fp, #-4]
   51f58:	b	528a0 <__assert_fail@plt+0x3fce8>
   51f5c:	ldrh	r0, [fp, #-18]	; 0xffffffee
   51f60:	cmp	r0, #2
   51f64:	bne	52020 <__assert_fail@plt+0x3f468>
   51f68:	ldr	r0, [fp, #-12]
   51f6c:	ldrh	r0, [r0, #56]	; 0x38
   51f70:	cmp	r0, #12
   51f74:	beq	51f88 <__assert_fail@plt+0x3f3d0>
   51f78:	ldr	r0, [fp, #-12]
   51f7c:	ldrh	r0, [r0, #56]	; 0x38
   51f80:	cmp	r0, #13
   51f84:	bne	52020 <__assert_fail@plt+0x3f468>
   51f88:	ldr	r0, [fp, #-8]
   51f8c:	ldr	r1, [fp, #-12]
   51f90:	movw	r2, #1
   51f94:	and	r2, r2, #1
   51f98:	bl	5163c <__assert_fail@plt+0x3ea84>
   51f9c:	ldr	r1, [fp, #-12]
   51fa0:	strh	r0, [r1, #56]	; 0x38
   51fa4:	ldr	r0, [fp, #-12]
   51fa8:	ldrh	r0, [r0, #56]	; 0x38
   51fac:	cmp	r0, #1
   51fb0:	bne	5201c <__assert_fail@plt+0x3f464>
   51fb4:	ldr	r0, [fp, #-8]
   51fb8:	ldr	r0, [r0, #48]	; 0x30
   51fbc:	and	r0, r0, #4
   51fc0:	cmp	r0, #0
   51fc4:	bne	5201c <__assert_fail@plt+0x3f464>
   51fc8:	ldr	r0, [fp, #-8]
   51fcc:	movw	r1, #35940	; 0x8c64
   51fd0:	movt	r1, #7
   51fd4:	bl	51af8 <__assert_fail@plt+0x3ef40>
   51fd8:	ldr	r1, [fp, #-12]
   51fdc:	str	r0, [r1, #36]	; 0x24
   51fe0:	cmp	r0, #0
   51fe4:	bge	52008 <__assert_fail@plt+0x3f450>
   51fe8:	bl	128d0 <__errno_location@plt>
   51fec:	ldr	r0, [r0]
   51ff0:	ldr	lr, [fp, #-12]
   51ff4:	str	r0, [lr, #32]
   51ff8:	ldr	r0, [fp, #-12]
   51ffc:	movw	lr, #7
   52000:	strh	lr, [r0, #56]	; 0x38
   52004:	b	52018 <__assert_fail@plt+0x3f460>
   52008:	ldr	r0, [fp, #-12]
   5200c:	ldrh	r1, [r0, #58]	; 0x3a
   52010:	orr	r1, r1, #2
   52014:	strh	r1, [r0, #58]	; 0x3a
   52018:	b	5201c <__assert_fail@plt+0x3f464>
   5201c:	b	52538 <__assert_fail@plt+0x3f980>
   52020:	ldr	r0, [fp, #-12]
   52024:	ldrh	r0, [r0, #56]	; 0x38
   52028:	cmp	r0, #1
   5202c:	bne	5228c <__assert_fail@plt+0x3f6d4>
   52030:	ldrh	r0, [fp, #-18]	; 0xffffffee
   52034:	cmp	r0, #4
   52038:	beq	52080 <__assert_fail@plt+0x3f4c8>
   5203c:	ldr	r0, [fp, #-8]
   52040:	ldr	r0, [r0, #48]	; 0x30
   52044:	and	r0, r0, #64	; 0x40
   52048:	cmp	r0, #0
   5204c:	beq	520f4 <__assert_fail@plt+0x3f53c>
   52050:	ldr	r0, [fp, #-12]
   52054:	ldr	r1, [r0, #64]	; 0x40
   52058:	ldr	r0, [r0, #68]	; 0x44
   5205c:	ldr	r2, [fp, #-8]
   52060:	ldr	r3, [r2, #16]
   52064:	ldr	r2, [r2, #20]
   52068:	eor	r0, r0, r2
   5206c:	eor	r1, r1, r3
   52070:	orr	r0, r1, r0
   52074:	cmp	r0, #0
   52078:	beq	520f4 <__assert_fail@plt+0x3f53c>
   5207c:	b	52080 <__assert_fail@plt+0x3f4c8>
   52080:	ldr	r0, [fp, #-12]
   52084:	ldrh	r0, [r0, #58]	; 0x3a
   52088:	and	r0, r0, #2
   5208c:	cmp	r0, #0
   52090:	beq	520a4 <__assert_fail@plt+0x3f4ec>
   52094:	ldr	r0, [fp, #-12]
   52098:	ldr	r0, [r0, #36]	; 0x24
   5209c:	bl	12b70 <close@plt>
   520a0:	str	r0, [sp, #20]
   520a4:	ldr	r0, [fp, #-8]
   520a8:	ldr	r0, [r0, #4]
   520ac:	movw	r1, #0
   520b0:	cmp	r0, r1
   520b4:	beq	520d0 <__assert_fail@plt+0x3f518>
   520b8:	ldr	r0, [fp, #-8]
   520bc:	ldr	r0, [r0, #4]
   520c0:	bl	51b94 <__assert_fail@plt+0x3efdc>
   520c4:	ldr	r0, [fp, #-8]
   520c8:	movw	lr, #0
   520cc:	str	lr, [r0, #4]
   520d0:	ldr	r0, [fp, #-12]
   520d4:	movw	r1, #6
   520d8:	strh	r1, [r0, #56]	; 0x38
   520dc:	ldr	r0, [fp, #-8]
   520e0:	ldr	r1, [fp, #-12]
   520e4:	bl	528ac <__assert_fail@plt+0x3fcf4>
   520e8:	ldr	r0, [fp, #-12]
   520ec:	str	r0, [fp, #-4]
   520f0:	b	528a0 <__assert_fail@plt+0x3fce8>
   520f4:	ldr	r0, [fp, #-8]
   520f8:	ldr	r0, [r0, #4]
   520fc:	movw	r1, #0
   52100:	cmp	r0, r1
   52104:	beq	52148 <__assert_fail@plt+0x3f590>
   52108:	ldr	r0, [fp, #-8]
   5210c:	ldr	r0, [r0, #48]	; 0x30
   52110:	and	r0, r0, #4096	; 0x1000
   52114:	cmp	r0, #0
   52118:	beq	52148 <__assert_fail@plt+0x3f590>
   5211c:	ldr	r0, [fp, #-8]
   52120:	ldr	r1, [r0, #48]	; 0x30
   52124:	mvn	r2, #4096	; 0x1000
   52128:	and	r1, r1, r2
   5212c:	str	r1, [r0, #48]	; 0x30
   52130:	ldr	r0, [fp, #-8]
   52134:	ldr	r0, [r0, #4]
   52138:	bl	51b94 <__assert_fail@plt+0x3efdc>
   5213c:	ldr	r0, [fp, #-8]
   52140:	movw	r1, #0
   52144:	str	r1, [r0, #4]
   52148:	ldr	r0, [fp, #-8]
   5214c:	ldr	r0, [r0, #4]
   52150:	movw	r1, #0
   52154:	cmp	r0, r1
   52158:	beq	521e4 <__assert_fail@plt+0x3f62c>
   5215c:	ldr	r0, [fp, #-8]
   52160:	ldr	r1, [fp, #-12]
   52164:	ldr	r2, [fp, #-12]
   52168:	ldr	r3, [r2, #24]
   5216c:	mvn	r2, #0
   52170:	bl	52a4c <__assert_fail@plt+0x3fe94>
   52174:	cmp	r0, #0
   52178:	beq	521e0 <__assert_fail@plt+0x3f628>
   5217c:	bl	128d0 <__errno_location@plt>
   52180:	ldr	r0, [r0]
   52184:	ldr	lr, [fp, #-12]
   52188:	str	r0, [lr, #32]
   5218c:	ldr	r0, [fp, #-12]
   52190:	ldrh	lr, [r0, #58]	; 0x3a
   52194:	orr	lr, lr, #1
   52198:	strh	lr, [r0, #58]	; 0x3a
   5219c:	ldr	r0, [fp, #-8]
   521a0:	ldr	r0, [r0, #4]
   521a4:	str	r0, [fp, #-12]
   521a8:	ldr	r0, [fp, #-12]
   521ac:	movw	r1, #0
   521b0:	cmp	r0, r1
   521b4:	beq	521dc <__assert_fail@plt+0x3f624>
   521b8:	ldr	r0, [fp, #-12]
   521bc:	ldr	r0, [r0, #4]
   521c0:	ldr	r0, [r0, #24]
   521c4:	ldr	r1, [fp, #-12]
   521c8:	str	r0, [r1, #24]
   521cc:	ldr	r0, [fp, #-12]
   521d0:	ldr	r0, [r0, #8]
   521d4:	str	r0, [fp, #-12]
   521d8:	b	521a8 <__assert_fail@plt+0x3f5f0>
   521dc:	b	521e0 <__assert_fail@plt+0x3f628>
   521e0:	b	52270 <__assert_fail@plt+0x3f6b8>
   521e4:	ldr	r0, [fp, #-8]
   521e8:	movw	r1, #3
   521ec:	bl	52d10 <__assert_fail@plt+0x40158>
   521f0:	ldr	r1, [fp, #-8]
   521f4:	str	r0, [r1, #4]
   521f8:	movw	r1, #0
   521fc:	cmp	r0, r1
   52200:	bne	5226c <__assert_fail@plt+0x3f6b4>
   52204:	ldr	r0, [fp, #-8]
   52208:	ldr	r0, [r0, #48]	; 0x30
   5220c:	and	r0, r0, #8192	; 0x2000
   52210:	cmp	r0, #0
   52214:	beq	52224 <__assert_fail@plt+0x3f66c>
   52218:	movw	r0, #0
   5221c:	str	r0, [fp, #-4]
   52220:	b	528a0 <__assert_fail@plt+0x3fce8>
   52224:	ldr	r0, [fp, #-12]
   52228:	ldr	r0, [r0, #32]
   5222c:	cmp	r0, #0
   52230:	beq	52250 <__assert_fail@plt+0x3f698>
   52234:	ldr	r0, [fp, #-12]
   52238:	ldrh	r0, [r0, #56]	; 0x38
   5223c:	cmp	r0, #4
   52240:	beq	52250 <__assert_fail@plt+0x3f698>
   52244:	ldr	r0, [fp, #-12]
   52248:	movw	r1, #7
   5224c:	strh	r1, [r0, #56]	; 0x38
   52250:	b	52254 <__assert_fail@plt+0x3f69c>
   52254:	ldr	r0, [fp, #-8]
   52258:	ldr	r1, [fp, #-12]
   5225c:	bl	528ac <__assert_fail@plt+0x3fcf4>
   52260:	ldr	r0, [fp, #-12]
   52264:	str	r0, [fp, #-4]
   52268:	b	528a0 <__assert_fail@plt+0x3fce8>
   5226c:	b	52270 <__assert_fail@plt+0x3f6b8>
   52270:	ldr	r0, [fp, #-8]
   52274:	ldr	r0, [r0, #4]
   52278:	str	r0, [fp, #-12]
   5227c:	ldr	r0, [fp, #-8]
   52280:	movw	r1, #0
   52284:	str	r1, [r0, #4]
   52288:	b	52498 <__assert_fail@plt+0x3f8e0>
   5228c:	b	52290 <__assert_fail@plt+0x3f6d8>
   52290:	ldr	r0, [fp, #-12]
   52294:	str	r0, [fp, #-16]
   52298:	ldr	r0, [fp, #-12]
   5229c:	ldr	r0, [r0, #8]
   522a0:	movw	r1, #0
   522a4:	cmp	r0, r1
   522a8:	bne	52344 <__assert_fail@plt+0x3f78c>
   522ac:	ldr	r0, [fp, #-12]
   522b0:	ldr	r0, [r0, #4]
   522b4:	ldr	r0, [r0, #12]
   522b8:	movw	r1, #0
   522bc:	cmp	r0, r1
   522c0:	beq	52344 <__assert_fail@plt+0x3f78c>
   522c4:	ldr	r0, [fp, #-16]
   522c8:	ldr	r0, [r0, #4]
   522cc:	str	r0, [fp, #-12]
   522d0:	ldr	r0, [fp, #-12]
   522d4:	ldr	r1, [fp, #-8]
   522d8:	str	r0, [r1]
   522dc:	ldr	r0, [fp, #-8]
   522e0:	ldr	r0, [r0, #24]
   522e4:	ldr	r1, [fp, #-12]
   522e8:	ldr	r1, [r1, #40]	; 0x28
   522ec:	add	r0, r0, r1
   522f0:	movw	r1, #0
   522f4:	strb	r1, [r0]
   522f8:	ldr	r0, [fp, #-8]
   522fc:	movw	r1, #3
   52300:	bl	52d10 <__assert_fail@plt+0x40158>
   52304:	str	r0, [fp, #-12]
   52308:	movw	r1, #0
   5230c:	cmp	r0, r1
   52310:	bne	52338 <__assert_fail@plt+0x3f780>
   52314:	ldr	r0, [fp, #-8]
   52318:	ldr	r0, [r0, #48]	; 0x30
   5231c:	and	r0, r0, #8192	; 0x2000
   52320:	cmp	r0, #0
   52324:	beq	52334 <__assert_fail@plt+0x3f77c>
   52328:	movw	r0, #0
   5232c:	str	r0, [fp, #-4]
   52330:	b	528a0 <__assert_fail@plt+0x3fce8>
   52334:	b	52640 <__assert_fail@plt+0x3fa88>
   52338:	ldr	r0, [fp, #-16]
   5233c:	bl	50c68 <__assert_fail@plt+0x3e0b0>
   52340:	b	52498 <__assert_fail@plt+0x3f8e0>
   52344:	ldr	r0, [fp, #-12]
   52348:	ldr	r0, [r0, #8]
   5234c:	str	r0, [fp, #-12]
   52350:	movw	r1, #0
   52354:	cmp	r0, r1
   52358:	beq	5263c <__assert_fail@plt+0x3fa84>
   5235c:	ldr	r0, [fp, #-12]
   52360:	ldr	r1, [fp, #-8]
   52364:	str	r0, [r1]
   52368:	ldr	r0, [fp, #-16]
   5236c:	bl	50c68 <__assert_fail@plt+0x3e0b0>
   52370:	ldr	r0, [fp, #-12]
   52374:	ldr	r0, [r0, #48]	; 0x30
   52378:	cmp	r0, #0
   5237c:	bne	523d0 <__assert_fail@plt+0x3f818>
   52380:	ldr	r0, [fp, #-8]
   52384:	bl	539ec <__assert_fail@plt+0x40e34>
   52388:	cmp	r0, #0
   5238c:	beq	523ac <__assert_fail@plt+0x3f7f4>
   52390:	ldr	r0, [fp, #-8]
   52394:	ldr	r1, [r0, #48]	; 0x30
   52398:	orr	r1, r1, #8192	; 0x2000
   5239c:	str	r1, [r0, #48]	; 0x30
   523a0:	movw	r0, #0
   523a4:	str	r0, [fp, #-4]
   523a8:	b	528a0 <__assert_fail@plt+0x3fce8>
   523ac:	ldr	r0, [fp, #-8]
   523b0:	bl	51e60 <__assert_fail@plt+0x3f2a8>
   523b4:	ldr	r0, [fp, #-8]
   523b8:	ldr	r1, [fp, #-12]
   523bc:	bl	53afc <__assert_fail@plt+0x40f44>
   523c0:	ldr	r0, [fp, #-8]
   523c4:	bl	51a1c <__assert_fail@plt+0x3ee64>
   523c8:	str	r0, [sp, #16]
   523cc:	b	52538 <__assert_fail@plt+0x3f980>
   523d0:	ldr	r0, [fp, #-12]
   523d4:	ldrh	r0, [r0, #60]	; 0x3c
   523d8:	cmp	r0, #4
   523dc:	bne	523e4 <__assert_fail@plt+0x3f82c>
   523e0:	b	52290 <__assert_fail@plt+0x3f6d8>
   523e4:	ldr	r0, [fp, #-12]
   523e8:	ldrh	r0, [r0, #60]	; 0x3c
   523ec:	cmp	r0, #2
   523f0:	bne	52494 <__assert_fail@plt+0x3f8dc>
   523f4:	ldr	r0, [fp, #-8]
   523f8:	ldr	r1, [fp, #-12]
   523fc:	movw	r2, #1
   52400:	and	r2, r2, #1
   52404:	bl	5163c <__assert_fail@plt+0x3ea84>
   52408:	ldr	r1, [fp, #-12]
   5240c:	strh	r0, [r1, #56]	; 0x38
   52410:	ldr	r0, [fp, #-12]
   52414:	ldrh	r0, [r0, #56]	; 0x38
   52418:	cmp	r0, #1
   5241c:	bne	52488 <__assert_fail@plt+0x3f8d0>
   52420:	ldr	r0, [fp, #-8]
   52424:	ldr	r0, [r0, #48]	; 0x30
   52428:	and	r0, r0, #4
   5242c:	cmp	r0, #0
   52430:	bne	52488 <__assert_fail@plt+0x3f8d0>
   52434:	ldr	r0, [fp, #-8]
   52438:	movw	r1, #35940	; 0x8c64
   5243c:	movt	r1, #7
   52440:	bl	51af8 <__assert_fail@plt+0x3ef40>
   52444:	ldr	r1, [fp, #-12]
   52448:	str	r0, [r1, #36]	; 0x24
   5244c:	cmp	r0, #0
   52450:	bge	52474 <__assert_fail@plt+0x3f8bc>
   52454:	bl	128d0 <__errno_location@plt>
   52458:	ldr	r0, [r0]
   5245c:	ldr	lr, [fp, #-12]
   52460:	str	r0, [lr, #32]
   52464:	ldr	r0, [fp, #-12]
   52468:	movw	lr, #7
   5246c:	strh	lr, [r0, #56]	; 0x38
   52470:	b	52484 <__assert_fail@plt+0x3f8cc>
   52474:	ldr	r0, [fp, #-12]
   52478:	ldrh	r1, [r0, #58]	; 0x3a
   5247c:	orr	r1, r1, #2
   52480:	strh	r1, [r0, #58]	; 0x3a
   52484:	b	52488 <__assert_fail@plt+0x3f8d0>
   52488:	ldr	r0, [fp, #-12]
   5248c:	movw	r1, #3
   52490:	strh	r1, [r0, #60]	; 0x3c
   52494:	b	52498 <__assert_fail@plt+0x3f8e0>
   52498:	ldr	r0, [fp, #-8]
   5249c:	ldr	r0, [r0, #24]
   524a0:	ldr	r1, [fp, #-12]
   524a4:	ldr	r1, [r1, #4]
   524a8:	ldr	r1, [r1, #28]
   524ac:	ldr	r2, [fp, #-12]
   524b0:	ldr	r2, [r2, #4]
   524b4:	ldr	r2, [r2, #40]	; 0x28
   524b8:	sub	r2, r2, #1
   524bc:	add	r1, r1, r2
   524c0:	ldrb	r1, [r1]
   524c4:	cmp	r1, #47	; 0x2f
   524c8:	str	r0, [sp, #12]
   524cc:	bne	524e8 <__assert_fail@plt+0x3f930>
   524d0:	ldr	r0, [fp, #-12]
   524d4:	ldr	r0, [r0, #4]
   524d8:	ldr	r0, [r0, #40]	; 0x28
   524dc:	sub	r0, r0, #1
   524e0:	str	r0, [sp, #8]
   524e4:	b	524f8 <__assert_fail@plt+0x3f940>
   524e8:	ldr	r0, [fp, #-12]
   524ec:	ldr	r0, [r0, #4]
   524f0:	ldr	r0, [r0, #40]	; 0x28
   524f4:	str	r0, [sp, #8]
   524f8:	ldr	r0, [sp, #8]
   524fc:	ldr	r1, [sp, #12]
   52500:	add	r0, r1, r0
   52504:	str	r0, [sp, #24]
   52508:	ldr	r0, [sp, #24]
   5250c:	add	r2, r0, #1
   52510:	str	r2, [sp, #24]
   52514:	movw	r2, #47	; 0x2f
   52518:	strb	r2, [r0]
   5251c:	ldr	r0, [sp, #24]
   52520:	ldr	r2, [fp, #-12]
   52524:	add	r1, r2, #168	; 0xa8
   52528:	ldr	r2, [fp, #-12]
   5252c:	ldr	r2, [r2, #52]	; 0x34
   52530:	add	r2, r2, #1
   52534:	bl	12558 <memmove@plt>
   52538:	ldr	r0, [fp, #-12]
   5253c:	ldr	r1, [fp, #-8]
   52540:	str	r0, [r1]
   52544:	ldr	r0, [fp, #-12]
   52548:	ldrh	r0, [r0, #56]	; 0x38
   5254c:	cmp	r0, #11
   52550:	bne	525c8 <__assert_fail@plt+0x3fa10>
   52554:	ldr	r0, [fp, #-12]
   52558:	ldr	r1, [r0, #112]	; 0x70
   5255c:	ldr	r0, [r0, #116]	; 0x74
   52560:	eor	r1, r1, #2
   52564:	orr	r0, r1, r0
   52568:	cmp	r0, #0
   5256c:	bne	52594 <__assert_fail@plt+0x3f9dc>
   52570:	b	52574 <__assert_fail@plt+0x3f9bc>
   52574:	ldr	r0, [fp, #-8]
   52578:	ldr	r1, [fp, #-12]
   5257c:	movw	r2, #0
   52580:	and	r2, r2, #1
   52584:	bl	5163c <__assert_fail@plt+0x3ea84>
   52588:	ldr	r1, [fp, #-12]
   5258c:	strh	r0, [r1, #56]	; 0x38
   52590:	b	525c4 <__assert_fail@plt+0x3fa0c>
   52594:	b	52598 <__assert_fail@plt+0x3f9e0>
   52598:	ldr	r0, [fp, #-12]
   5259c:	ldr	r1, [r0, #112]	; 0x70
   525a0:	ldr	r0, [r0, #116]	; 0x74
   525a4:	eor	r1, r1, #1
   525a8:	orr	r0, r1, r0
   525ac:	cmp	r0, #0
   525b0:	beq	525bc <__assert_fail@plt+0x3fa04>
   525b4:	b	525b8 <__assert_fail@plt+0x3fa00>
   525b8:	bl	12b64 <abort@plt>
   525bc:	b	525c0 <__assert_fail@plt+0x3fa08>
   525c0:	b	525c4 <__assert_fail@plt+0x3fa0c>
   525c4:	b	525c8 <__assert_fail@plt+0x3fa10>
   525c8:	ldr	r0, [fp, #-12]
   525cc:	ldrh	r0, [r0, #56]	; 0x38
   525d0:	cmp	r0, #1
   525d4:	bne	52630 <__assert_fail@plt+0x3fa78>
   525d8:	ldr	r0, [fp, #-12]
   525dc:	ldr	r0, [r0, #48]	; 0x30
   525e0:	cmp	r0, #0
   525e4:	bne	52600 <__assert_fail@plt+0x3fa48>
   525e8:	ldr	r0, [fp, #-12]
   525ec:	ldr	r1, [r0, #64]	; 0x40
   525f0:	ldr	r0, [r0, #68]	; 0x44
   525f4:	ldr	r2, [fp, #-8]
   525f8:	str	r0, [r2, #20]
   525fc:	str	r1, [r2, #16]
   52600:	ldr	r0, [fp, #-8]
   52604:	ldr	r1, [fp, #-12]
   52608:	bl	53bdc <__assert_fail@plt+0x41024>
   5260c:	tst	r0, #1
   52610:	bne	5262c <__assert_fail@plt+0x3fa74>
   52614:	bl	128d0 <__errno_location@plt>
   52618:	movw	lr, #12
   5261c:	str	lr, [r0]
   52620:	movw	r0, #0
   52624:	str	r0, [fp, #-4]
   52628:	b	528a0 <__assert_fail@plt+0x3fce8>
   5262c:	b	52630 <__assert_fail@plt+0x3fa78>
   52630:	ldr	r0, [fp, #-12]
   52634:	str	r0, [fp, #-4]
   52638:	b	528a0 <__assert_fail@plt+0x3fce8>
   5263c:	b	52640 <__assert_fail@plt+0x3fa88>
   52640:	ldr	r0, [fp, #-16]
   52644:	ldr	r0, [r0, #4]
   52648:	str	r0, [fp, #-12]
   5264c:	ldr	r0, [fp, #-12]
   52650:	ldr	r1, [fp, #-8]
   52654:	str	r0, [r1]
   52658:	ldr	r0, [fp, #-16]
   5265c:	bl	50c68 <__assert_fail@plt+0x3e0b0>
   52660:	ldr	r0, [fp, #-12]
   52664:	ldr	r0, [r0, #48]	; 0x30
   52668:	cmn	r0, #1
   5266c:	bne	52694 <__assert_fail@plt+0x3fadc>
   52670:	ldr	r0, [fp, #-12]
   52674:	bl	50c68 <__assert_fail@plt+0x3e0b0>
   52678:	bl	128d0 <__errno_location@plt>
   5267c:	movw	lr, #0
   52680:	str	lr, [r0]
   52684:	ldr	r0, [fp, #-8]
   52688:	str	lr, [r0]
   5268c:	str	lr, [fp, #-4]
   52690:	b	528a0 <__assert_fail@plt+0x3fce8>
   52694:	b	52698 <__assert_fail@plt+0x3fae0>
   52698:	ldr	r0, [fp, #-12]
   5269c:	ldrh	r0, [r0, #56]	; 0x38
   526a0:	cmp	r0, #11
   526a4:	bne	526ac <__assert_fail@plt+0x3faf4>
   526a8:	bl	12b64 <abort@plt>
   526ac:	b	526b0 <__assert_fail@plt+0x3faf8>
   526b0:	ldr	r0, [fp, #-8]
   526b4:	ldr	r0, [r0, #24]
   526b8:	ldr	r1, [fp, #-12]
   526bc:	ldr	r1, [r1, #40]	; 0x28
   526c0:	add	r0, r0, r1
   526c4:	movw	r1, #0
   526c8:	strb	r1, [r0]
   526cc:	ldr	r0, [fp, #-12]
   526d0:	ldr	r0, [r0, #48]	; 0x30
   526d4:	cmp	r0, #0
   526d8:	bne	52710 <__assert_fail@plt+0x3fb58>
   526dc:	ldr	r0, [fp, #-8]
   526e0:	bl	539ec <__assert_fail@plt+0x40e34>
   526e4:	cmp	r0, #0
   526e8:	beq	5270c <__assert_fail@plt+0x3fb54>
   526ec:	bl	128d0 <__errno_location@plt>
   526f0:	ldr	r0, [r0]
   526f4:	ldr	lr, [fp, #-12]
   526f8:	str	r0, [lr, #32]
   526fc:	ldr	r0, [fp, #-8]
   52700:	ldr	lr, [r0, #48]	; 0x30
   52704:	orr	lr, lr, #8192	; 0x2000
   52708:	str	lr, [r0, #48]	; 0x30
   5270c:	b	52810 <__assert_fail@plt+0x3fc58>
   52710:	ldr	r0, [fp, #-12]
   52714:	ldrh	r0, [r0, #58]	; 0x3a
   52718:	and	r0, r0, #2
   5271c:	cmp	r0, #0
   52720:	beq	527b0 <__assert_fail@plt+0x3fbf8>
   52724:	ldr	r0, [fp, #-8]
   52728:	ldr	r0, [r0, #48]	; 0x30
   5272c:	and	r0, r0, #4
   52730:	cmp	r0, #0
   52734:	bne	5279c <__assert_fail@plt+0x3fbe4>
   52738:	ldr	r0, [fp, #-8]
   5273c:	ldr	r0, [r0, #48]	; 0x30
   52740:	and	r0, r0, #512	; 0x200
   52744:	cmp	r0, #0
   52748:	beq	52768 <__assert_fail@plt+0x3fbb0>
   5274c:	ldr	r0, [fp, #-8]
   52750:	ldr	r1, [fp, #-12]
   52754:	ldr	r1, [r1, #36]	; 0x24
   52758:	movw	r2, #1
   5275c:	and	r2, r2, #1
   52760:	bl	53d3c <__assert_fail@plt+0x41184>
   52764:	b	5279c <__assert_fail@plt+0x3fbe4>
   52768:	ldr	r0, [fp, #-12]
   5276c:	ldr	r0, [r0, #36]	; 0x24
   52770:	bl	12aa4 <fchdir@plt>
   52774:	cmp	r0, #0
   52778:	beq	5279c <__assert_fail@plt+0x3fbe4>
   5277c:	bl	128d0 <__errno_location@plt>
   52780:	ldr	r0, [r0]
   52784:	ldr	lr, [fp, #-12]
   52788:	str	r0, [lr, #32]
   5278c:	ldr	r0, [fp, #-8]
   52790:	ldr	lr, [r0, #48]	; 0x30
   52794:	orr	lr, lr, #8192	; 0x2000
   52798:	str	lr, [r0, #48]	; 0x30
   5279c:	ldr	r0, [fp, #-12]
   527a0:	ldr	r0, [r0, #36]	; 0x24
   527a4:	bl	12b70 <close@plt>
   527a8:	str	r0, [sp, #4]
   527ac:	b	5280c <__assert_fail@plt+0x3fc54>
   527b0:	ldr	r0, [fp, #-12]
   527b4:	ldrh	r0, [r0, #58]	; 0x3a
   527b8:	and	r0, r0, #1
   527bc:	cmp	r0, #0
   527c0:	bne	52808 <__assert_fail@plt+0x3fc50>
   527c4:	ldr	r0, [fp, #-8]
   527c8:	ldr	r1, [fp, #-12]
   527cc:	ldr	r1, [r1, #4]
   527d0:	mvn	r2, #0
   527d4:	movw	r3, #58536	; 0xe4a8
   527d8:	movt	r3, #7
   527dc:	bl	52a4c <__assert_fail@plt+0x3fe94>
   527e0:	cmp	r0, #0
   527e4:	beq	52808 <__assert_fail@plt+0x3fc50>
   527e8:	bl	128d0 <__errno_location@plt>
   527ec:	ldr	r0, [r0]
   527f0:	ldr	lr, [fp, #-12]
   527f4:	str	r0, [lr, #32]
   527f8:	ldr	r0, [fp, #-8]
   527fc:	ldr	lr, [r0, #48]	; 0x30
   52800:	orr	lr, lr, #8192	; 0x2000
   52804:	str	lr, [r0, #48]	; 0x30
   52808:	b	5280c <__assert_fail@plt+0x3fc54>
   5280c:	b	52810 <__assert_fail@plt+0x3fc58>
   52810:	ldr	r0, [fp, #-12]
   52814:	ldrh	r0, [r0, #56]	; 0x38
   52818:	cmp	r0, #2
   5281c:	beq	52870 <__assert_fail@plt+0x3fcb8>
   52820:	ldr	r0, [fp, #-12]
   52824:	ldr	r0, [r0, #32]
   52828:	cmp	r0, #0
   5282c:	movw	r0, #0
   52830:	movne	r0, #1
   52834:	tst	r0, #1
   52838:	movw	r0, #7
   5283c:	moveq	r0, #6
   52840:	ldr	r1, [fp, #-12]
   52844:	strh	r0, [r1, #56]	; 0x38
   52848:	ldr	r0, [fp, #-12]
   5284c:	ldr	r0, [r0, #32]
   52850:	cmp	r0, #0
   52854:	bne	5286c <__assert_fail@plt+0x3fcb4>
   52858:	b	5285c <__assert_fail@plt+0x3fca4>
   5285c:	ldr	r0, [fp, #-8]
   52860:	ldr	r1, [fp, #-12]
   52864:	bl	528ac <__assert_fail@plt+0x3fcf4>
   52868:	b	5286c <__assert_fail@plt+0x3fcb4>
   5286c:	b	52870 <__assert_fail@plt+0x3fcb8>
   52870:	ldr	r0, [fp, #-8]
   52874:	ldr	r0, [r0, #48]	; 0x30
   52878:	and	r0, r0, #8192	; 0x2000
   5287c:	cmp	r0, #0
   52880:	beq	52890 <__assert_fail@plt+0x3fcd8>
   52884:	movw	r0, #0
   52888:	str	r0, [sp]
   5288c:	b	52898 <__assert_fail@plt+0x3fce0>
   52890:	ldr	r0, [fp, #-12]
   52894:	str	r0, [sp]
   52898:	ldr	r0, [sp]
   5289c:	str	r0, [fp, #-4]
   528a0:	ldr	r0, [fp, #-4]
   528a4:	mov	sp, fp
   528a8:	pop	{fp, pc}
   528ac:	push	{fp, lr}
   528b0:	mov	fp, sp
   528b4:	sub	sp, sp, #48	; 0x30
   528b8:	str	r0, [fp, #-4]
   528bc:	str	r1, [fp, #-8]
   528c0:	ldr	r0, [fp, #-8]
   528c4:	add	r0, r0, #64	; 0x40
   528c8:	str	r0, [fp, #-12]
   528cc:	ldr	r0, [fp, #-4]
   528d0:	ldr	r0, [r0, #48]	; 0x30
   528d4:	movw	r1, #258	; 0x102
   528d8:	and	r0, r0, r1
   528dc:	cmp	r0, #0
   528e0:	beq	52940 <__assert_fail@plt+0x3fd88>
   528e4:	ldr	r0, [fp, #-12]
   528e8:	ldr	r1, [r0]
   528ec:	ldr	r0, [r0, #4]
   528f0:	str	r0, [sp, #12]
   528f4:	str	r1, [sp, #8]
   528f8:	ldr	r0, [fp, #-12]
   528fc:	ldr	r1, [r0, #96]	; 0x60
   52900:	ldr	r0, [r0, #100]	; 0x64
   52904:	str	r0, [sp, #20]
   52908:	str	r1, [sp, #16]
   5290c:	ldr	r0, [fp, #-4]
   52910:	ldr	r0, [r0, #56]	; 0x38
   52914:	add	r1, sp, #8
   52918:	bl	2e5cc <__assert_fail@plt+0x1ba14>
   5291c:	str	r0, [sp, #4]
   52920:	ldr	r0, [sp, #4]
   52924:	movw	r1, #0
   52928:	cmp	r0, r1
   5292c:	bne	52934 <__assert_fail@plt+0x3fd7c>
   52930:	bl	12b64 <abort@plt>
   52934:	ldr	r0, [sp, #4]
   52938:	bl	50c68 <__assert_fail@plt+0x3e0b0>
   5293c:	b	52a44 <__assert_fail@plt+0x3fe8c>
   52940:	ldr	r0, [fp, #-8]
   52944:	ldr	r0, [r0, #4]
   52948:	str	r0, [sp]
   5294c:	ldr	r0, [sp]
   52950:	movw	r1, #0
   52954:	cmp	r0, r1
   52958:	beq	52a40 <__assert_fail@plt+0x3fe88>
   5295c:	ldr	r0, [sp]
   52960:	ldr	r0, [r0, #48]	; 0x30
   52964:	movw	r1, #0
   52968:	cmp	r1, r0
   5296c:	bgt	52a40 <__assert_fail@plt+0x3fe88>
   52970:	b	52974 <__assert_fail@plt+0x3fdbc>
   52974:	ldr	r0, [fp, #-4]
   52978:	ldr	r0, [r0, #56]	; 0x38
   5297c:	ldr	r1, [r0, #16]
   52980:	ldr	r0, [r0, #20]
   52984:	orr	r0, r1, r0
   52988:	cmp	r0, #0
   5298c:	bne	52998 <__assert_fail@plt+0x3fde0>
   52990:	b	52994 <__assert_fail@plt+0x3fddc>
   52994:	bl	12b64 <abort@plt>
   52998:	ldr	r0, [fp, #-4]
   5299c:	ldr	r0, [r0, #56]	; 0x38
   529a0:	ldr	r1, [r0]
   529a4:	ldr	r0, [r0, #4]
   529a8:	ldr	r2, [fp, #-12]
   529ac:	ldr	r3, [r2, #96]	; 0x60
   529b0:	ldr	r2, [r2, #100]	; 0x64
   529b4:	eor	r0, r0, r2
   529b8:	eor	r1, r1, r3
   529bc:	orr	r0, r1, r0
   529c0:	cmp	r0, #0
   529c4:	bne	52a38 <__assert_fail@plt+0x3fe80>
   529c8:	b	529cc <__assert_fail@plt+0x3fe14>
   529cc:	ldr	r0, [fp, #-4]
   529d0:	ldr	r0, [r0, #56]	; 0x38
   529d4:	ldr	r1, [r0, #8]
   529d8:	ldr	r0, [r0, #12]
   529dc:	ldr	r2, [fp, #-12]
   529e0:	ldr	r3, [r2]
   529e4:	ldr	r2, [r2, #4]
   529e8:	eor	r0, r0, r2
   529ec:	eor	r1, r1, r3
   529f0:	orr	r0, r1, r0
   529f4:	cmp	r0, #0
   529f8:	bne	52a38 <__assert_fail@plt+0x3fe80>
   529fc:	b	52a00 <__assert_fail@plt+0x3fe48>
   52a00:	ldr	r0, [sp]
   52a04:	ldr	r1, [r0, #64]	; 0x40
   52a08:	ldr	r0, [r0, #68]	; 0x44
   52a0c:	ldr	r2, [fp, #-4]
   52a10:	ldr	r2, [r2, #56]	; 0x38
   52a14:	str	r0, [r2, #12]
   52a18:	str	r1, [r2, #8]
   52a1c:	ldr	r0, [sp]
   52a20:	ldr	r1, [r0, #160]	; 0xa0
   52a24:	ldr	r0, [r0, #164]	; 0xa4
   52a28:	ldr	r2, [fp, #-4]
   52a2c:	ldr	r2, [r2, #56]	; 0x38
   52a30:	str	r0, [r2, #4]
   52a34:	str	r1, [r2]
   52a38:	b	52a3c <__assert_fail@plt+0x3fe84>
   52a3c:	b	52a40 <__assert_fail@plt+0x3fe88>
   52a40:	b	52a44 <__assert_fail@plt+0x3fe8c>
   52a44:	mov	sp, fp
   52a48:	pop	{fp, pc}
   52a4c:	push	{fp, lr}
   52a50:	mov	fp, sp
   52a54:	sub	sp, sp, #168	; 0xa8
   52a58:	str	r0, [fp, #-8]
   52a5c:	str	r1, [fp, #-12]
   52a60:	str	r2, [fp, #-16]
   52a64:	str	r3, [fp, #-20]	; 0xffffffec
   52a68:	ldr	r0, [fp, #-20]	; 0xffffffec
   52a6c:	movw	r1, #0
   52a70:	cmp	r0, r1
   52a74:	movw	r0, #0
   52a78:	str	r0, [sp, #16]
   52a7c:	beq	52aa0 <__assert_fail@plt+0x3fee8>
   52a80:	ldr	r0, [fp, #-20]	; 0xffffffec
   52a84:	movw	r1, #58536	; 0xe4a8
   52a88:	movt	r1, #7
   52a8c:	bl	124c8 <strcmp@plt>
   52a90:	cmp	r0, #0
   52a94:	movw	r0, #0
   52a98:	moveq	r0, #1
   52a9c:	str	r0, [sp, #16]
   52aa0:	ldr	r0, [sp, #16]
   52aa4:	and	r0, r0, #1
   52aa8:	strb	r0, [fp, #-25]	; 0xffffffe7
   52aac:	ldr	r0, [fp, #-8]
   52ab0:	ldr	r0, [r0, #48]	; 0x30
   52ab4:	and	r0, r0, #4
   52ab8:	cmp	r0, #0
   52abc:	beq	52afc <__assert_fail@plt+0x3ff44>
   52ac0:	ldr	r0, [fp, #-8]
   52ac4:	ldr	r0, [r0, #48]	; 0x30
   52ac8:	and	r0, r0, #512	; 0x200
   52acc:	cmp	r0, #0
   52ad0:	beq	52af0 <__assert_fail@plt+0x3ff38>
   52ad4:	ldr	r0, [fp, #-16]
   52ad8:	movw	r1, #0
   52adc:	cmp	r1, r0
   52ae0:	bgt	52af0 <__assert_fail@plt+0x3ff38>
   52ae4:	ldr	r0, [fp, #-16]
   52ae8:	bl	12b70 <close@plt>
   52aec:	str	r0, [sp, #12]
   52af0:	movw	r0, #0
   52af4:	str	r0, [fp, #-4]
   52af8:	b	52d04 <__assert_fail@plt+0x4014c>
   52afc:	ldr	r0, [fp, #-16]
   52b00:	cmp	r0, #0
   52b04:	bge	52b74 <__assert_fail@plt+0x3ffbc>
   52b08:	ldrb	r0, [fp, #-25]	; 0xffffffe7
   52b0c:	tst	r0, #1
   52b10:	beq	52b74 <__assert_fail@plt+0x3ffbc>
   52b14:	ldr	r0, [fp, #-8]
   52b18:	ldr	r0, [r0, #48]	; 0x30
   52b1c:	and	r0, r0, #512	; 0x200
   52b20:	cmp	r0, #0
   52b24:	beq	52b74 <__assert_fail@plt+0x3ffbc>
   52b28:	ldr	r0, [fp, #-8]
   52b2c:	add	r0, r0, #60	; 0x3c
   52b30:	bl	72fec <__assert_fail@plt+0x60434>
   52b34:	tst	r0, #1
   52b38:	bne	52b70 <__assert_fail@plt+0x3ffb8>
   52b3c:	ldr	r0, [fp, #-8]
   52b40:	add	r0, r0, #60	; 0x3c
   52b44:	bl	730bc <__assert_fail@plt+0x60504>
   52b48:	str	r0, [fp, #-36]	; 0xffffffdc
   52b4c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   52b50:	movw	lr, #0
   52b54:	cmp	lr, r0
   52b58:	bgt	52b6c <__assert_fail@plt+0x3ffb4>
   52b5c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   52b60:	str	r0, [fp, #-16]
   52b64:	movw	r0, #0
   52b68:	str	r0, [fp, #-20]	; 0xffffffec
   52b6c:	b	52b70 <__assert_fail@plt+0x3ffb8>
   52b70:	b	52b74 <__assert_fail@plt+0x3ffbc>
   52b74:	ldr	r0, [fp, #-16]
   52b78:	str	r0, [fp, #-32]	; 0xffffffe0
   52b7c:	ldr	r0, [fp, #-16]
   52b80:	cmp	r0, #0
   52b84:	bge	52bac <__assert_fail@plt+0x3fff4>
   52b88:	ldr	r0, [fp, #-8]
   52b8c:	ldr	r1, [fp, #-20]	; 0xffffffec
   52b90:	bl	51af8 <__assert_fail@plt+0x3ef40>
   52b94:	str	r0, [fp, #-32]	; 0xffffffe0
   52b98:	cmp	r0, #0
   52b9c:	bge	52bac <__assert_fail@plt+0x3fff4>
   52ba0:	mvn	r0, #0
   52ba4:	str	r0, [fp, #-4]
   52ba8:	b	52d04 <__assert_fail@plt+0x4014c>
   52bac:	ldr	r0, [fp, #-8]
   52bb0:	ldr	r0, [r0, #48]	; 0x30
   52bb4:	and	r0, r0, #2
   52bb8:	cmp	r0, #0
   52bbc:	bne	52be8 <__assert_fail@plt+0x40030>
   52bc0:	ldr	r0, [fp, #-20]	; 0xffffffec
   52bc4:	movw	r1, #0
   52bc8:	cmp	r0, r1
   52bcc:	beq	52c7c <__assert_fail@plt+0x400c4>
   52bd0:	ldr	r0, [fp, #-20]	; 0xffffffec
   52bd4:	movw	r1, #58536	; 0xe4a8
   52bd8:	movt	r1, #7
   52bdc:	bl	124c8 <strcmp@plt>
   52be0:	cmp	r0, #0
   52be4:	bne	52c7c <__assert_fail@plt+0x400c4>
   52be8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   52bec:	add	r1, sp, #24
   52bf0:	bl	77a94 <__assert_fail@plt+0x64edc>
   52bf4:	cmp	r0, #0
   52bf8:	beq	52c08 <__assert_fail@plt+0x40050>
   52bfc:	mvn	r0, #0
   52c00:	str	r0, [fp, #-24]	; 0xffffffe8
   52c04:	b	52cc4 <__assert_fail@plt+0x4010c>
   52c08:	ldr	r0, [fp, #-12]
   52c0c:	ldr	r1, [r0, #64]	; 0x40
   52c10:	ldr	r0, [r0, #68]	; 0x44
   52c14:	ldr	r2, [sp, #24]
   52c18:	ldr	r3, [sp, #28]
   52c1c:	eor	r0, r0, r3
   52c20:	eor	r1, r1, r2
   52c24:	orr	r0, r1, r0
   52c28:	cmp	r0, #0
   52c2c:	bne	52c60 <__assert_fail@plt+0x400a8>
   52c30:	b	52c34 <__assert_fail@plt+0x4007c>
   52c34:	ldr	r0, [fp, #-12]
   52c38:	ldr	r1, [r0, #160]	; 0xa0
   52c3c:	ldr	r0, [r0, #164]	; 0xa4
   52c40:	ldr	r2, [sp, #120]	; 0x78
   52c44:	ldr	r3, [sp, #124]	; 0x7c
   52c48:	eor	r0, r0, r3
   52c4c:	eor	r1, r1, r2
   52c50:	orr	r0, r1, r0
   52c54:	cmp	r0, #0
   52c58:	beq	52c78 <__assert_fail@plt+0x400c0>
   52c5c:	b	52c60 <__assert_fail@plt+0x400a8>
   52c60:	bl	128d0 <__errno_location@plt>
   52c64:	movw	lr, #2
   52c68:	str	lr, [r0]
   52c6c:	mvn	r0, #0
   52c70:	str	r0, [fp, #-24]	; 0xffffffe8
   52c74:	b	52cc4 <__assert_fail@plt+0x4010c>
   52c78:	b	52c7c <__assert_fail@plt+0x400c4>
   52c7c:	ldr	r0, [fp, #-8]
   52c80:	ldr	r0, [r0, #48]	; 0x30
   52c84:	and	r0, r0, #512	; 0x200
   52c88:	cmp	r0, #0
   52c8c:	beq	52cb8 <__assert_fail@plt+0x40100>
   52c90:	ldr	r0, [fp, #-8]
   52c94:	ldr	r1, [fp, #-32]	; 0xffffffe0
   52c98:	ldrb	r2, [fp, #-25]	; 0xffffffe7
   52c9c:	mvn	r3, #0
   52ca0:	eor	r2, r2, r3
   52ca4:	and	r2, r2, #1
   52ca8:	bl	53d3c <__assert_fail@plt+0x41184>
   52cac:	movw	r0, #0
   52cb0:	str	r0, [fp, #-4]
   52cb4:	b	52d04 <__assert_fail@plt+0x4014c>
   52cb8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   52cbc:	bl	12aa4 <fchdir@plt>
   52cc0:	str	r0, [fp, #-24]	; 0xffffffe8
   52cc4:	ldr	r0, [fp, #-16]
   52cc8:	cmp	r0, #0
   52ccc:	bge	52cfc <__assert_fail@plt+0x40144>
   52cd0:	bl	128d0 <__errno_location@plt>
   52cd4:	ldr	r0, [r0]
   52cd8:	str	r0, [sp, #20]
   52cdc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   52ce0:	bl	12b70 <close@plt>
   52ce4:	ldr	lr, [sp, #20]
   52ce8:	str	r0, [sp, #8]
   52cec:	str	lr, [sp, #4]
   52cf0:	bl	128d0 <__errno_location@plt>
   52cf4:	ldr	lr, [sp, #4]
   52cf8:	str	lr, [r0]
   52cfc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   52d00:	str	r0, [fp, #-4]
   52d04:	ldr	r0, [fp, #-4]
   52d08:	mov	sp, fp
   52d0c:	pop	{fp, pc}
   52d10:	push	{fp, lr}
   52d14:	mov	fp, sp
   52d18:	sub	sp, sp, #176	; 0xb0
   52d1c:	str	r0, [fp, #-8]
   52d20:	str	r1, [fp, #-12]
   52d24:	ldr	r0, [fp, #-8]
   52d28:	ldr	r0, [r0]
   52d2c:	str	r0, [fp, #-68]	; 0xffffffbc
   52d30:	ldr	r0, [fp, #-68]	; 0xffffffbc
   52d34:	ldr	r0, [r0, #12]
   52d38:	movw	r1, #0
   52d3c:	cmp	r0, r1
   52d40:	movw	r0, #0
   52d44:	movne	r0, #1
   52d48:	mvn	r1, #0
   52d4c:	eor	r0, r0, r1
   52d50:	eor	r0, r0, r1
   52d54:	and	r0, r0, #1
   52d58:	strb	r0, [fp, #-69]	; 0xffffffbb
   52d5c:	movw	r0, #0
   52d60:	strb	r0, [fp, #-70]	; 0xffffffba
   52d64:	ldrb	r0, [fp, #-69]	; 0xffffffbb
   52d68:	tst	r0, #1
   52d6c:	beq	52dec <__assert_fail@plt+0x40234>
   52d70:	ldr	r0, [fp, #-68]	; 0xffffffbc
   52d74:	ldr	r0, [r0, #12]
   52d78:	str	r0, [fp, #-80]	; 0xffffffb0
   52d7c:	ldr	r0, [fp, #-80]	; 0xffffffb0
   52d80:	bl	12a98 <dirfd@plt>
   52d84:	str	r0, [fp, #-64]	; 0xffffffc0
   52d88:	ldr	r0, [fp, #-64]	; 0xffffffc0
   52d8c:	cmp	r0, #0
   52d90:	bge	52de8 <__assert_fail@plt+0x40230>
   52d94:	b	52d98 <__assert_fail@plt+0x401e0>
   52d98:	ldr	r0, [fp, #-68]	; 0xffffffbc
   52d9c:	ldr	r0, [r0, #12]
   52da0:	bl	12b88 <closedir@plt>
   52da4:	ldr	lr, [fp, #-68]	; 0xffffffbc
   52da8:	movw	r1, #0
   52dac:	str	r1, [lr, #12]
   52db0:	str	r0, [sp, #80]	; 0x50
   52db4:	ldr	r0, [fp, #-12]
   52db8:	cmp	r0, #3
   52dbc:	bne	52ddc <__assert_fail@plt+0x40224>
   52dc0:	ldr	r0, [fp, #-68]	; 0xffffffbc
   52dc4:	movw	r1, #4
   52dc8:	strh	r1, [r0, #56]	; 0x38
   52dcc:	bl	128d0 <__errno_location@plt>
   52dd0:	ldr	r0, [r0]
   52dd4:	ldr	r1, [fp, #-68]	; 0xffffffbc
   52dd8:	str	r0, [r1, #32]
   52ddc:	movw	r0, #0
   52de0:	str	r0, [fp, #-4]
   52de4:	b	539dc <__assert_fail@plt+0x40e24>
   52de8:	b	52fc4 <__assert_fail@plt+0x4040c>
   52dec:	ldr	r0, [fp, #-8]
   52df0:	ldr	r0, [r0, #48]	; 0x30
   52df4:	and	r0, r0, #4
   52df8:	cmp	r0, #0
   52dfc:	bne	52e24 <__assert_fail@plt+0x4026c>
   52e00:	ldr	r0, [fp, #-8]
   52e04:	ldr	r0, [r0, #48]	; 0x30
   52e08:	and	r0, r0, #512	; 0x200
   52e0c:	cmp	r0, #0
   52e10:	beq	52e24 <__assert_fail@plt+0x4026c>
   52e14:	ldr	r0, [fp, #-8]
   52e18:	ldr	r0, [r0, #32]
   52e1c:	str	r0, [sp, #76]	; 0x4c
   52e20:	b	52e30 <__assert_fail@plt+0x40278>
   52e24:	mvn	r0, #99	; 0x63
   52e28:	str	r0, [sp, #76]	; 0x4c
   52e2c:	b	52e30 <__assert_fail@plt+0x40278>
   52e30:	ldr	r0, [sp, #76]	; 0x4c
   52e34:	ldr	r1, [fp, #-68]	; 0xffffffbc
   52e38:	ldr	r1, [r1, #24]
   52e3c:	ldr	r2, [fp, #-8]
   52e40:	ldr	r2, [r2, #48]	; 0x30
   52e44:	and	r2, r2, #16
   52e48:	cmp	r2, #0
   52e4c:	movw	r2, #0
   52e50:	str	r0, [sp, #72]	; 0x48
   52e54:	str	r1, [sp, #68]	; 0x44
   52e58:	str	r2, [sp, #64]	; 0x40
   52e5c:	beq	52ea4 <__assert_fail@plt+0x402ec>
   52e60:	ldr	r0, [fp, #-8]
   52e64:	ldr	r0, [r0, #48]	; 0x30
   52e68:	and	r0, r0, #1
   52e6c:	cmp	r0, #0
   52e70:	movw	r0, #0
   52e74:	str	r0, [sp, #60]	; 0x3c
   52e78:	beq	52e94 <__assert_fail@plt+0x402dc>
   52e7c:	ldr	r0, [fp, #-68]	; 0xffffffbc
   52e80:	ldr	r0, [r0, #48]	; 0x30
   52e84:	cmp	r0, #0
   52e88:	movw	r0, #0
   52e8c:	moveq	r0, #1
   52e90:	str	r0, [sp, #60]	; 0x3c
   52e94:	ldr	r0, [sp, #60]	; 0x3c
   52e98:	mvn	r1, #0
   52e9c:	eor	r0, r0, r1
   52ea0:	str	r0, [sp, #64]	; 0x40
   52ea4:	ldr	r0, [sp, #64]	; 0x40
   52ea8:	tst	r0, #1
   52eac:	movw	r0, #32768	; 0x8000
   52eb0:	moveq	r0, #0
   52eb4:	ldr	r1, [sp, #72]	; 0x48
   52eb8:	str	r0, [sp, #56]	; 0x38
   52ebc:	mov	r0, r1
   52ec0:	ldr	r1, [sp, #68]	; 0x44
   52ec4:	ldr	r2, [sp, #56]	; 0x38
   52ec8:	sub	r3, fp, #64	; 0x40
   52ecc:	bl	7719c <__assert_fail@plt+0x645e4>
   52ed0:	ldr	r1, [fp, #-68]	; 0xffffffbc
   52ed4:	str	r0, [r1, #12]
   52ed8:	movw	r1, #0
   52edc:	cmp	r0, r1
   52ee0:	bne	52f18 <__assert_fail@plt+0x40360>
   52ee4:	ldr	r0, [fp, #-12]
   52ee8:	cmp	r0, #3
   52eec:	bne	52f0c <__assert_fail@plt+0x40354>
   52ef0:	ldr	r0, [fp, #-68]	; 0xffffffbc
   52ef4:	movw	r1, #4
   52ef8:	strh	r1, [r0, #56]	; 0x38
   52efc:	bl	128d0 <__errno_location@plt>
   52f00:	ldr	r0, [r0]
   52f04:	ldr	r1, [fp, #-68]	; 0xffffffbc
   52f08:	str	r0, [r1, #32]
   52f0c:	movw	r0, #0
   52f10:	str	r0, [fp, #-4]
   52f14:	b	539dc <__assert_fail@plt+0x40e24>
   52f18:	ldr	r0, [fp, #-68]	; 0xffffffbc
   52f1c:	ldrh	r0, [r0, #56]	; 0x38
   52f20:	cmp	r0, #11
   52f24:	bne	52f48 <__assert_fail@plt+0x40390>
   52f28:	ldr	r0, [fp, #-8]
   52f2c:	ldr	r1, [fp, #-68]	; 0xffffffbc
   52f30:	movw	r2, #0
   52f34:	and	r2, r2, #1
   52f38:	bl	5163c <__assert_fail@plt+0x3ea84>
   52f3c:	ldr	r1, [fp, #-68]	; 0xffffffbc
   52f40:	strh	r0, [r1, #56]	; 0x38
   52f44:	b	52fc0 <__assert_fail@plt+0x40408>
   52f48:	ldr	r0, [fp, #-8]
   52f4c:	ldr	r0, [r0, #48]	; 0x30
   52f50:	and	r0, r0, #256	; 0x100
   52f54:	cmp	r0, #0
   52f58:	beq	52fbc <__assert_fail@plt+0x40404>
   52f5c:	b	52f60 <__assert_fail@plt+0x403a8>
   52f60:	ldr	r0, [fp, #-8]
   52f64:	ldr	r1, [fp, #-68]	; 0xffffffbc
   52f68:	bl	528ac <__assert_fail@plt+0x3fcf4>
   52f6c:	ldr	r0, [fp, #-8]
   52f70:	ldr	r1, [fp, #-68]	; 0xffffffbc
   52f74:	movw	r2, #0
   52f78:	and	r2, r2, #1
   52f7c:	bl	5163c <__assert_fail@plt+0x3ea84>
   52f80:	ldr	r1, [fp, #-8]
   52f84:	ldr	r2, [fp, #-68]	; 0xffffffbc
   52f88:	str	r0, [sp, #52]	; 0x34
   52f8c:	mov	r0, r1
   52f90:	mov	r1, r2
   52f94:	bl	53bdc <__assert_fail@plt+0x41024>
   52f98:	tst	r0, #1
   52f9c:	bne	52fb8 <__assert_fail@plt+0x40400>
   52fa0:	bl	128d0 <__errno_location@plt>
   52fa4:	movw	lr, #12
   52fa8:	str	lr, [r0]
   52fac:	movw	r0, #0
   52fb0:	str	r0, [fp, #-4]
   52fb4:	b	539dc <__assert_fail@plt+0x40e24>
   52fb8:	b	52fbc <__assert_fail@plt+0x40404>
   52fbc:	b	52fc0 <__assert_fail@plt+0x40408>
   52fc0:	b	52fc4 <__assert_fail@plt+0x4040c>
   52fc4:	ldr	r0, [pc, #2588]	; 539e8 <__assert_fail@plt+0x40e30>
   52fc8:	ldr	r1, [fp, #-8]
   52fcc:	ldr	r1, [r1, #44]	; 0x2c
   52fd0:	movw	r2, #0
   52fd4:	cmp	r1, r2
   52fd8:	movw	r1, #0
   52fdc:	movne	r1, #1
   52fe0:	tst	r1, #1
   52fe4:	mvn	r1, #0
   52fe8:	movne	r0, r1
   52fec:	str	r0, [fp, #-76]	; 0xffffffb4
   52ff0:	ldrb	r0, [fp, #-69]	; 0xffffffbb
   52ff4:	tst	r0, #1
   52ff8:	beq	53008 <__assert_fail@plt+0x40450>
   52ffc:	movw	r0, #1
   53000:	strb	r0, [fp, #-37]	; 0xffffffdb
   53004:	b	531d4 <__assert_fail@plt+0x4061c>
   53008:	ldr	r0, [fp, #-12]
   5300c:	cmp	r0, #2
   53010:	movw	r0, #0
   53014:	str	r0, [sp, #48]	; 0x30
   53018:	beq	530b4 <__assert_fail@plt+0x404fc>
   5301c:	ldr	r0, [fp, #-8]
   53020:	ldr	r0, [r0, #48]	; 0x30
   53024:	and	r0, r0, #8
   53028:	cmp	r0, #0
   5302c:	movw	r0, #0
   53030:	str	r0, [sp, #44]	; 0x2c
   53034:	beq	530a4 <__assert_fail@plt+0x404ec>
   53038:	ldr	r0, [fp, #-8]
   5303c:	ldr	r0, [r0, #48]	; 0x30
   53040:	and	r0, r0, #16
   53044:	cmp	r0, #0
   53048:	movw	r0, #0
   5304c:	str	r0, [sp, #44]	; 0x2c
   53050:	beq	530a4 <__assert_fail@plt+0x404ec>
   53054:	ldr	r0, [fp, #-8]
   53058:	ldr	r0, [r0, #48]	; 0x30
   5305c:	and	r0, r0, #32
   53060:	cmp	r0, #0
   53064:	movw	r0, #0
   53068:	str	r0, [sp, #44]	; 0x2c
   5306c:	bne	530a4 <__assert_fail@plt+0x404ec>
   53070:	ldr	r0, [fp, #-68]	; 0xffffffbc
   53074:	ldr	r0, [r0, #84]	; 0x54
   53078:	cmp	r0, #2
   5307c:	movw	r0, #0
   53080:	str	r0, [sp, #44]	; 0x2c
   53084:	bne	530a4 <__assert_fail@plt+0x404ec>
   53088:	ldr	r0, [fp, #-68]	; 0xffffffbc
   5308c:	ldr	r1, [fp, #-64]	; 0xffffffc0
   53090:	bl	541c0 <__assert_fail@plt+0x41608>
   53094:	cmp	r0, #0
   53098:	movw	r0, #0
   5309c:	movne	r0, #1
   530a0:	str	r0, [sp, #44]	; 0x2c
   530a4:	ldr	r0, [sp, #44]	; 0x2c
   530a8:	mvn	r1, #0
   530ac:	eor	r0, r0, r1
   530b0:	str	r0, [sp, #48]	; 0x30
   530b4:	ldr	r0, [sp, #48]	; 0x30
   530b8:	and	r0, r0, #1
   530bc:	strb	r0, [fp, #-37]	; 0xffffffdb
   530c0:	ldrb	r0, [fp, #-37]	; 0xffffffdb
   530c4:	tst	r0, #1
   530c8:	bne	530d8 <__assert_fail@plt+0x40520>
   530cc:	ldr	r0, [fp, #-12]
   530d0:	cmp	r0, #3
   530d4:	bne	531d0 <__assert_fail@plt+0x40618>
   530d8:	ldr	r0, [fp, #-8]
   530dc:	ldr	r0, [r0, #48]	; 0x30
   530e0:	and	r0, r0, #512	; 0x200
   530e4:	cmp	r0, #0
   530e8:	beq	53100 <__assert_fail@plt+0x40548>
   530ec:	ldr	r0, [fp, #-64]	; 0xffffffc0
   530f0:	movw	r1, #1030	; 0x406
   530f4:	movw	r2, #3
   530f8:	bl	507d8 <__assert_fail@plt+0x3dc20>
   530fc:	str	r0, [fp, #-64]	; 0xffffffc0
   53100:	ldr	r0, [fp, #-64]	; 0xffffffc0
   53104:	cmp	r0, #0
   53108:	blt	53128 <__assert_fail@plt+0x40570>
   5310c:	ldr	r0, [fp, #-8]
   53110:	ldr	r1, [fp, #-68]	; 0xffffffbc
   53114:	ldr	r2, [fp, #-64]	; 0xffffffc0
   53118:	movw	r3, #0
   5311c:	bl	52a4c <__assert_fail@plt+0x3fe94>
   53120:	cmp	r0, #0
   53124:	beq	531c4 <__assert_fail@plt+0x4060c>
   53128:	ldrb	r0, [fp, #-37]	; 0xffffffdb
   5312c:	tst	r0, #1
   53130:	beq	53150 <__assert_fail@plt+0x40598>
   53134:	ldr	r0, [fp, #-12]
   53138:	cmp	r0, #3
   5313c:	bne	53150 <__assert_fail@plt+0x40598>
   53140:	bl	128d0 <__errno_location@plt>
   53144:	ldr	r0, [r0]
   53148:	ldr	lr, [fp, #-68]	; 0xffffffbc
   5314c:	str	r0, [lr, #32]
   53150:	ldr	r0, [fp, #-68]	; 0xffffffbc
   53154:	ldrh	r1, [r0, #58]	; 0x3a
   53158:	orr	r1, r1, #1
   5315c:	strh	r1, [r0, #58]	; 0x3a
   53160:	movw	r0, #0
   53164:	strb	r0, [fp, #-37]	; 0xffffffdb
   53168:	ldr	r0, [fp, #-68]	; 0xffffffbc
   5316c:	ldr	r0, [r0, #12]
   53170:	bl	12b88 <closedir@plt>
   53174:	ldr	lr, [fp, #-68]	; 0xffffffbc
   53178:	movw	r1, #0
   5317c:	str	r1, [lr, #12]
   53180:	str	r0, [sp, #40]	; 0x28
   53184:	ldr	r0, [fp, #-8]
   53188:	ldr	r0, [r0, #48]	; 0x30
   5318c:	and	r0, r0, #512	; 0x200
   53190:	cmp	r0, #0
   53194:	beq	531b4 <__assert_fail@plt+0x405fc>
   53198:	ldr	r0, [fp, #-64]	; 0xffffffc0
   5319c:	movw	r1, #0
   531a0:	cmp	r1, r0
   531a4:	bgt	531b4 <__assert_fail@plt+0x405fc>
   531a8:	ldr	r0, [fp, #-64]	; 0xffffffc0
   531ac:	bl	12b70 <close@plt>
   531b0:	str	r0, [sp, #36]	; 0x24
   531b4:	ldr	r0, [fp, #-68]	; 0xffffffbc
   531b8:	movw	r1, #0
   531bc:	str	r1, [r0, #12]
   531c0:	b	531cc <__assert_fail@plt+0x40614>
   531c4:	movw	r0, #1
   531c8:	strb	r0, [fp, #-37]	; 0xffffffdb
   531cc:	b	531d0 <__assert_fail@plt+0x40618>
   531d0:	b	531d4 <__assert_fail@plt+0x4061c>
   531d4:	ldr	r0, [fp, #-68]	; 0xffffffbc
   531d8:	ldr	r0, [r0, #28]
   531dc:	ldr	r1, [fp, #-68]	; 0xffffffbc
   531e0:	ldr	r1, [r1, #40]	; 0x28
   531e4:	sub	r1, r1, #1
   531e8:	add	r0, r0, r1
   531ec:	ldrb	r0, [r0]
   531f0:	cmp	r0, #47	; 0x2f
   531f4:	bne	5320c <__assert_fail@plt+0x40654>
   531f8:	ldr	r0, [fp, #-68]	; 0xffffffbc
   531fc:	ldr	r0, [r0, #40]	; 0x28
   53200:	sub	r0, r0, #1
   53204:	str	r0, [sp, #32]
   53208:	b	53218 <__assert_fail@plt+0x40660>
   5320c:	ldr	r0, [fp, #-68]	; 0xffffffbc
   53210:	ldr	r0, [r0, #40]	; 0x28
   53214:	str	r0, [sp, #32]
   53218:	ldr	r0, [sp, #32]
   5321c:	str	r0, [fp, #-48]	; 0xffffffd0
   53220:	ldr	r0, [fp, #-8]
   53224:	ldr	r0, [r0, #48]	; 0x30
   53228:	and	r0, r0, #4
   5322c:	cmp	r0, #0
   53230:	beq	53260 <__assert_fail@plt+0x406a8>
   53234:	ldr	r0, [fp, #-8]
   53238:	ldr	r0, [r0, #24]
   5323c:	ldr	r1, [fp, #-48]	; 0xffffffd0
   53240:	add	r0, r0, r1
   53244:	str	r0, [fp, #-60]	; 0xffffffc4
   53248:	ldr	r0, [fp, #-60]	; 0xffffffc4
   5324c:	add	r1, r0, #1
   53250:	str	r1, [fp, #-60]	; 0xffffffc4
   53254:	movw	r1, #47	; 0x2f
   53258:	strb	r1, [r0]
   5325c:	b	53268 <__assert_fail@plt+0x406b0>
   53260:	movw	r0, #0
   53264:	str	r0, [fp, #-60]	; 0xffffffc4
   53268:	ldr	r0, [fp, #-48]	; 0xffffffd0
   5326c:	add	r0, r0, #1
   53270:	str	r0, [fp, #-48]	; 0xffffffd0
   53274:	ldr	r0, [fp, #-8]
   53278:	ldr	r0, [r0, #36]	; 0x24
   5327c:	ldr	r1, [fp, #-48]	; 0xffffffd0
   53280:	sub	r0, r0, r1
   53284:	str	r0, [fp, #-52]	; 0xffffffcc
   53288:	ldr	r0, [fp, #-68]	; 0xffffffbc
   5328c:	ldr	r0, [r0, #48]	; 0x30
   53290:	add	r0, r0, #1
   53294:	str	r0, [fp, #-44]	; 0xffffffd4
   53298:	movw	r0, #0
   5329c:	strb	r0, [fp, #-38]	; 0xffffffda
   532a0:	movw	r0, #0
   532a4:	str	r0, [fp, #-20]	; 0xffffffec
   532a8:	str	r0, [fp, #-28]	; 0xffffffe4
   532ac:	str	r0, [fp, #-24]	; 0xffffffe8
   532b0:	ldr	r0, [fp, #-68]	; 0xffffffbc
   532b4:	ldr	r0, [r0, #12]
   532b8:	movw	r1, #0
   532bc:	cmp	r0, r1
   532c0:	beq	537c0 <__assert_fail@plt+0x40c08>
   532c4:	bl	128d0 <__errno_location@plt>
   532c8:	movw	lr, #0
   532cc:	str	lr, [r0]
   532d0:	ldr	r0, [fp, #-68]	; 0xffffffbc
   532d4:	ldr	r0, [r0, #12]
   532d8:	bl	12a68 <readdir64@plt>
   532dc:	str	r0, [sp, #88]	; 0x58
   532e0:	ldr	r0, [sp, #88]	; 0x58
   532e4:	movw	lr, #0
   532e8:	cmp	r0, lr
   532ec:	bne	53354 <__assert_fail@plt+0x4079c>
   532f0:	bl	128d0 <__errno_location@plt>
   532f4:	ldr	r0, [r0]
   532f8:	cmp	r0, #0
   532fc:	beq	53350 <__assert_fail@plt+0x40798>
   53300:	bl	128d0 <__errno_location@plt>
   53304:	ldr	r0, [r0]
   53308:	ldr	lr, [fp, #-68]	; 0xffffffbc
   5330c:	str	r0, [lr, #32]
   53310:	ldrb	r0, [fp, #-69]	; 0xffffffbb
   53314:	tst	r0, #1
   53318:	movw	r0, #1
   5331c:	str	r0, [sp, #28]
   53320:	bne	53338 <__assert_fail@plt+0x40780>
   53324:	ldr	r0, [fp, #-24]	; 0xffffffe8
   53328:	cmp	r0, #0
   5332c:	movw	r0, #0
   53330:	movne	r0, #1
   53334:	str	r0, [sp, #28]
   53338:	ldr	r0, [sp, #28]
   5333c:	tst	r0, #1
   53340:	movw	r0, #7
   53344:	moveq	r0, #4
   53348:	ldr	r1, [fp, #-68]	; 0xffffffbc
   5334c:	strh	r0, [r1, #56]	; 0x38
   53350:	b	537c0 <__assert_fail@plt+0x40c08>
   53354:	ldr	r0, [fp, #-8]
   53358:	ldr	r0, [r0, #48]	; 0x30
   5335c:	and	r0, r0, #32
   53360:	cmp	r0, #0
   53364:	bne	533ac <__assert_fail@plt+0x407f4>
   53368:	ldr	r0, [sp, #88]	; 0x58
   5336c:	ldrb	r0, [r0, #19]
   53370:	cmp	r0, #46	; 0x2e
   53374:	bne	533ac <__assert_fail@plt+0x407f4>
   53378:	ldr	r0, [sp, #88]	; 0x58
   5337c:	ldrsb	r0, [r0, #20]
   53380:	cmp	r0, #0
   53384:	beq	533a8 <__assert_fail@plt+0x407f0>
   53388:	ldr	r0, [sp, #88]	; 0x58
   5338c:	ldrb	r0, [r0, #20]
   53390:	cmp	r0, #46	; 0x2e
   53394:	bne	533ac <__assert_fail@plt+0x407f4>
   53398:	ldr	r0, [sp, #88]	; 0x58
   5339c:	ldrsb	r0, [r0, #21]
   533a0:	cmp	r0, #0
   533a4:	bne	533ac <__assert_fail@plt+0x407f4>
   533a8:	b	532b0 <__assert_fail@plt+0x406f8>
   533ac:	ldr	r0, [sp, #88]	; 0x58
   533b0:	add	r0, r0, #19
   533b4:	bl	12888 <strlen@plt>
   533b8:	str	r0, [fp, #-84]	; 0xffffffac
   533bc:	ldr	r0, [fp, #-8]
   533c0:	ldr	lr, [sp, #88]	; 0x58
   533c4:	add	r1, lr, #19
   533c8:	ldr	r2, [fp, #-84]	; 0xffffffac
   533cc:	bl	514ec <__assert_fail@plt+0x3e934>
   533d0:	str	r0, [fp, #-16]
   533d4:	ldr	r0, [fp, #-16]
   533d8:	movw	r1, #0
   533dc:	cmp	r0, r1
   533e0:	bne	533e8 <__assert_fail@plt+0x40830>
   533e4:	b	53428 <__assert_fail@plt+0x40870>
   533e8:	ldr	r0, [fp, #-84]	; 0xffffffac
   533ec:	ldr	r1, [fp, #-52]	; 0xffffffcc
   533f0:	cmp	r0, r1
   533f4:	bcc	534f8 <__assert_fail@plt+0x40940>
   533f8:	ldr	r0, [fp, #-8]
   533fc:	ldr	r0, [r0, #24]
   53400:	str	r0, [fp, #-32]	; 0xffffffe0
   53404:	ldr	r0, [fp, #-8]
   53408:	ldr	r1, [fp, #-84]	; 0xffffffac
   5340c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   53410:	add	r1, r1, r2
   53414:	add	r1, r1, #1
   53418:	bl	513f4 <__assert_fail@plt+0x3e83c>
   5341c:	tst	r0, #1
   53420:	bne	5349c <__assert_fail@plt+0x408e4>
   53424:	b	53428 <__assert_fail@plt+0x40870>
   53428:	bl	128d0 <__errno_location@plt>
   5342c:	ldr	r0, [r0]
   53430:	str	r0, [fp, #-36]	; 0xffffffdc
   53434:	ldr	r0, [fp, #-16]
   53438:	bl	50c68 <__assert_fail@plt+0x3e0b0>
   5343c:	ldr	r0, [fp, #-20]	; 0xffffffec
   53440:	bl	51b94 <__assert_fail@plt+0x3efdc>
   53444:	ldr	r0, [fp, #-68]	; 0xffffffbc
   53448:	ldr	r0, [r0, #12]
   5344c:	bl	12b88 <closedir@plt>
   53450:	ldr	lr, [fp, #-68]	; 0xffffffbc
   53454:	movw	r1, #0
   53458:	str	r1, [lr, #12]
   5345c:	str	r0, [sp, #24]
   53460:	ldr	r0, [fp, #-68]	; 0xffffffbc
   53464:	movw	r1, #7
   53468:	strh	r1, [r0, #56]	; 0x38
   5346c:	ldr	r0, [fp, #-8]
   53470:	ldr	r1, [r0, #48]	; 0x30
   53474:	orr	r1, r1, #8192	; 0x2000
   53478:	str	r1, [r0, #48]	; 0x30
   5347c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   53480:	str	r0, [sp, #20]
   53484:	bl	128d0 <__errno_location@plt>
   53488:	ldr	r1, [sp, #20]
   5348c:	str	r1, [r0]
   53490:	movw	r0, #0
   53494:	str	r0, [fp, #-4]
   53498:	b	539dc <__assert_fail@plt+0x40e24>
   5349c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   534a0:	ldr	r1, [fp, #-8]
   534a4:	ldr	r1, [r1, #24]
   534a8:	cmp	r0, r1
   534ac:	beq	534e4 <__assert_fail@plt+0x4092c>
   534b0:	movw	r0, #1
   534b4:	strb	r0, [fp, #-38]	; 0xffffffda
   534b8:	ldr	r0, [fp, #-8]
   534bc:	ldr	r0, [r0, #48]	; 0x30
   534c0:	and	r0, r0, #4
   534c4:	cmp	r0, #0
   534c8:	beq	534e0 <__assert_fail@plt+0x40928>
   534cc:	ldr	r0, [fp, #-8]
   534d0:	ldr	r0, [r0, #24]
   534d4:	ldr	r1, [fp, #-48]	; 0xffffffd0
   534d8:	add	r0, r0, r1
   534dc:	str	r0, [fp, #-60]	; 0xffffffc4
   534e0:	b	534e4 <__assert_fail@plt+0x4092c>
   534e4:	ldr	r0, [fp, #-8]
   534e8:	ldr	r0, [r0, #36]	; 0x24
   534ec:	ldr	r1, [fp, #-48]	; 0xffffffd0
   534f0:	sub	r0, r0, r1
   534f4:	str	r0, [fp, #-52]	; 0xffffffcc
   534f8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   534fc:	ldr	r1, [fp, #-84]	; 0xffffffac
   53500:	add	r0, r0, r1
   53504:	str	r0, [fp, #-56]	; 0xffffffc8
   53508:	ldr	r0, [fp, #-56]	; 0xffffffc8
   5350c:	ldr	r1, [fp, #-48]	; 0xffffffd0
   53510:	cmp	r0, r1
   53514:	bcs	53578 <__assert_fail@plt+0x409c0>
   53518:	ldr	r0, [fp, #-16]
   5351c:	bl	50c68 <__assert_fail@plt+0x3e0b0>
   53520:	ldr	r0, [fp, #-20]	; 0xffffffec
   53524:	bl	51b94 <__assert_fail@plt+0x3efdc>
   53528:	ldr	r0, [fp, #-68]	; 0xffffffbc
   5352c:	ldr	r0, [r0, #12]
   53530:	bl	12b88 <closedir@plt>
   53534:	ldr	lr, [fp, #-68]	; 0xffffffbc
   53538:	movw	r1, #0
   5353c:	str	r1, [lr, #12]
   53540:	str	r0, [sp, #16]
   53544:	ldr	r0, [fp, #-68]	; 0xffffffbc
   53548:	movw	r1, #7
   5354c:	strh	r1, [r0, #56]	; 0x38
   53550:	ldr	r0, [fp, #-8]
   53554:	ldr	r1, [r0, #48]	; 0x30
   53558:	orr	r1, r1, #8192	; 0x2000
   5355c:	str	r1, [r0, #48]	; 0x30
   53560:	bl	128d0 <__errno_location@plt>
   53564:	movw	r1, #36	; 0x24
   53568:	str	r1, [r0]
   5356c:	movw	r0, #0
   53570:	str	r0, [fp, #-4]
   53574:	b	539dc <__assert_fail@plt+0x40e24>
   53578:	ldr	r0, [fp, #-44]	; 0xffffffd4
   5357c:	ldr	r1, [fp, #-16]
   53580:	str	r0, [r1, #48]	; 0x30
   53584:	ldr	r0, [fp, #-8]
   53588:	ldr	r0, [r0]
   5358c:	ldr	r1, [fp, #-16]
   53590:	str	r0, [r1, #4]
   53594:	ldr	r0, [fp, #-56]	; 0xffffffc8
   53598:	ldr	r1, [fp, #-16]
   5359c:	str	r0, [r1, #40]	; 0x28
   535a0:	ldr	r0, [sp, #88]	; 0x58
   535a4:	ldr	r1, [r0]
   535a8:	ldr	r0, [r0, #4]
   535ac:	ldr	r2, [fp, #-16]
   535b0:	str	r0, [r2, #164]	; 0xa4
   535b4:	str	r1, [r2, #160]	; 0xa0
   535b8:	ldr	r0, [fp, #-8]
   535bc:	ldr	r0, [r0, #48]	; 0x30
   535c0:	and	r0, r0, #4
   535c4:	cmp	r0, #0
   535c8:	beq	535fc <__assert_fail@plt+0x40a44>
   535cc:	ldr	r0, [fp, #-16]
   535d0:	ldr	r0, [r0, #28]
   535d4:	ldr	r1, [fp, #-16]
   535d8:	str	r0, [r1, #24]
   535dc:	ldr	r0, [fp, #-60]	; 0xffffffc4
   535e0:	ldr	r1, [fp, #-16]
   535e4:	add	r1, r1, #168	; 0xa8
   535e8:	ldr	r2, [fp, #-16]
   535ec:	ldr	r2, [r2, #52]	; 0x34
   535f0:	add	r2, r2, #1
   535f4:	bl	12558 <memmove@plt>
   535f8:	b	5360c <__assert_fail@plt+0x40a54>
   535fc:	ldr	r0, [fp, #-16]
   53600:	add	r0, r0, #168	; 0xa8
   53604:	ldr	r1, [fp, #-16]
   53608:	str	r0, [r1, #24]
   5360c:	ldr	r0, [fp, #-8]
   53610:	ldr	r0, [r0, #44]	; 0x2c
   53614:	movw	r1, #0
   53618:	cmp	r0, r1
   5361c:	beq	53634 <__assert_fail@plt+0x40a7c>
   53620:	ldr	r0, [fp, #-8]
   53624:	ldr	r0, [r0, #48]	; 0x30
   53628:	and	r0, r0, #1024	; 0x400
   5362c:	cmp	r0, #0
   53630:	beq	5370c <__assert_fail@plt+0x40b54>
   53634:	ldr	r0, [fp, #-8]
   53638:	ldr	r0, [r0, #48]	; 0x30
   5363c:	and	r0, r0, #8
   53640:	cmp	r0, #0
   53644:	movw	r0, #0
   53648:	str	r0, [sp, #12]
   5364c:	beq	536c4 <__assert_fail@plt+0x40b0c>
   53650:	ldr	r0, [sp, #88]	; 0x58
   53654:	ldrb	r0, [r0, #18]
   53658:	cmp	r0, #0
   5365c:	movw	r0, #0
   53660:	str	r0, [sp, #12]
   53664:	beq	536c4 <__assert_fail@plt+0x40b0c>
   53668:	ldr	r0, [sp, #88]	; 0x58
   5366c:	ldrb	r0, [r0, #18]
   53670:	cmp	r0, #4
   53674:	movw	r0, #0
   53678:	str	r0, [sp, #12]
   5367c:	beq	536c4 <__assert_fail@plt+0x40b0c>
   53680:	ldr	r0, [fp, #-8]
   53684:	ldr	r0, [r0, #48]	; 0x30
   53688:	and	r0, r0, #16
   5368c:	cmp	r0, #0
   53690:	movw	r0, #1
   53694:	str	r0, [sp, #8]
   53698:	bne	536bc <__assert_fail@plt+0x40b04>
   5369c:	ldr	r0, [sp, #88]	; 0x58
   536a0:	ldrb	r0, [r0, #18]
   536a4:	cmp	r0, #10
   536a8:	movw	r0, #0
   536ac:	moveq	r0, #1
   536b0:	mvn	r1, #0
   536b4:	eor	r0, r0, r1
   536b8:	str	r0, [sp, #8]
   536bc:	ldr	r0, [sp, #8]
   536c0:	str	r0, [sp, #12]
   536c4:	ldr	r0, [sp, #12]
   536c8:	and	r0, r0, #1
   536cc:	strb	r0, [sp, #87]	; 0x57
   536d0:	ldr	r0, [fp, #-16]
   536d4:	movw	r1, #11
   536d8:	strh	r1, [r0, #56]	; 0x38
   536dc:	ldr	r0, [fp, #-16]
   536e0:	add	r0, r0, #64	; 0x40
   536e4:	ldr	r1, [sp, #88]	; 0x58
   536e8:	ldrb	r1, [r1, #18]
   536ec:	bl	5427c <__assert_fail@plt+0x416c4>
   536f0:	ldr	r0, [fp, #-16]
   536f4:	ldrb	r1, [sp, #87]	; 0x57
   536f8:	mvn	lr, #0
   536fc:	eor	r1, r1, lr
   53700:	and	r1, r1, #1
   53704:	bl	515e4 <__assert_fail@plt+0x3ea2c>
   53708:	b	53728 <__assert_fail@plt+0x40b70>
   5370c:	ldr	r0, [fp, #-8]
   53710:	ldr	r1, [fp, #-16]
   53714:	movw	r2, #0
   53718:	and	r2, r2, #1
   5371c:	bl	5163c <__assert_fail@plt+0x3ea84>
   53720:	ldr	r1, [fp, #-16]
   53724:	strh	r0, [r1, #56]	; 0x38
   53728:	ldr	r0, [fp, #-16]
   5372c:	movw	r1, #0
   53730:	str	r1, [r0, #8]
   53734:	ldr	r0, [fp, #-20]	; 0xffffffec
   53738:	cmp	r0, r1
   5373c:	bne	53750 <__assert_fail@plt+0x40b98>
   53740:	ldr	r0, [fp, #-16]
   53744:	str	r0, [fp, #-28]	; 0xffffffe4
   53748:	str	r0, [fp, #-20]	; 0xffffffec
   5374c:	b	53764 <__assert_fail@plt+0x40bac>
   53750:	ldr	r0, [fp, #-16]
   53754:	ldr	r1, [fp, #-28]	; 0xffffffe4
   53758:	str	r0, [r1, #8]
   5375c:	ldr	r0, [fp, #-16]
   53760:	str	r0, [fp, #-28]	; 0xffffffe4
   53764:	ldr	r0, [fp, #-24]	; 0xffffffe8
   53768:	movw	r1, #10000	; 0x2710
   5376c:	cmp	r0, r1
   53770:	bne	5379c <__assert_fail@plt+0x40be4>
   53774:	ldr	r0, [fp, #-8]
   53778:	ldr	r0, [r0, #44]	; 0x2c
   5377c:	movw	r1, #0
   53780:	cmp	r0, r1
   53784:	bne	5379c <__assert_fail@plt+0x40be4>
   53788:	ldr	r0, [fp, #-68]	; 0xffffffbc
   5378c:	ldr	r1, [fp, #-64]	; 0xffffffc0
   53790:	bl	5434c <__assert_fail@plt+0x41794>
   53794:	and	r0, r0, #1
   53798:	strb	r0, [fp, #-70]	; 0xffffffba
   5379c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   537a0:	add	r0, r0, #1
   537a4:	str	r0, [fp, #-24]	; 0xffffffe8
   537a8:	ldr	r0, [fp, #-76]	; 0xffffffb4
   537ac:	ldr	r1, [fp, #-24]	; 0xffffffe8
   537b0:	cmp	r0, r1
   537b4:	bhi	537bc <__assert_fail@plt+0x40c04>
   537b8:	b	537fc <__assert_fail@plt+0x40c44>
   537bc:	b	532b0 <__assert_fail@plt+0x406f8>
   537c0:	ldr	r0, [fp, #-68]	; 0xffffffbc
   537c4:	ldr	r0, [r0, #12]
   537c8:	movw	r1, #0
   537cc:	cmp	r0, r1
   537d0:	beq	537f8 <__assert_fail@plt+0x40c40>
   537d4:	b	537d8 <__assert_fail@plt+0x40c20>
   537d8:	ldr	r0, [fp, #-68]	; 0xffffffbc
   537dc:	ldr	r0, [r0, #12]
   537e0:	bl	12b88 <closedir@plt>
   537e4:	ldr	lr, [fp, #-68]	; 0xffffffbc
   537e8:	movw	r1, #0
   537ec:	str	r1, [lr, #12]
   537f0:	str	r0, [sp, #4]
   537f4:	b	537f8 <__assert_fail@plt+0x40c40>
   537f8:	b	537fc <__assert_fail@plt+0x40c44>
   537fc:	ldrb	r0, [fp, #-38]	; 0xffffffda
   53800:	tst	r0, #1
   53804:	beq	53814 <__assert_fail@plt+0x40c5c>
   53808:	ldr	r0, [fp, #-8]
   5380c:	ldr	r1, [fp, #-20]	; 0xffffffec
   53810:	bl	543e0 <__assert_fail@plt+0x41828>
   53814:	ldr	r0, [fp, #-8]
   53818:	ldr	r0, [r0, #48]	; 0x30
   5381c:	and	r0, r0, #4
   53820:	cmp	r0, #0
   53824:	beq	53864 <__assert_fail@plt+0x40cac>
   53828:	ldr	r0, [fp, #-48]	; 0xffffffd0
   5382c:	ldr	r1, [fp, #-8]
   53830:	ldr	r1, [r1, #36]	; 0x24
   53834:	cmp	r0, r1
   53838:	beq	53848 <__assert_fail@plt+0x40c90>
   5383c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   53840:	cmp	r0, #0
   53844:	bne	53858 <__assert_fail@plt+0x40ca0>
   53848:	ldr	r0, [fp, #-60]	; 0xffffffc4
   5384c:	mvn	r1, #0
   53850:	add	r0, r0, r1
   53854:	str	r0, [fp, #-60]	; 0xffffffc4
   53858:	ldr	r0, [fp, #-60]	; 0xffffffc4
   5385c:	movw	r1, #0
   53860:	strb	r1, [r0]
   53864:	ldrb	r0, [fp, #-69]	; 0xffffffbb
   53868:	tst	r0, #1
   5386c:	bne	5390c <__assert_fail@plt+0x40d54>
   53870:	ldrb	r0, [fp, #-37]	; 0xffffffdb
   53874:	tst	r0, #1
   53878:	beq	5390c <__assert_fail@plt+0x40d54>
   5387c:	ldr	r0, [fp, #-12]
   53880:	cmp	r0, #1
   53884:	beq	53894 <__assert_fail@plt+0x40cdc>
   53888:	ldr	r0, [fp, #-24]	; 0xffffffe8
   5388c:	cmp	r0, #0
   53890:	bne	5390c <__assert_fail@plt+0x40d54>
   53894:	ldr	r0, [fp, #-68]	; 0xffffffbc
   53898:	ldr	r0, [r0, #48]	; 0x30
   5389c:	cmp	r0, #0
   538a0:	bne	538b8 <__assert_fail@plt+0x40d00>
   538a4:	ldr	r0, [fp, #-8]
   538a8:	bl	539ec <__assert_fail@plt+0x40e34>
   538ac:	cmp	r0, #0
   538b0:	bne	538dc <__assert_fail@plt+0x40d24>
   538b4:	b	5390c <__assert_fail@plt+0x40d54>
   538b8:	ldr	r0, [fp, #-8]
   538bc:	ldr	r1, [fp, #-68]	; 0xffffffbc
   538c0:	ldr	r1, [r1, #4]
   538c4:	mvn	r2, #0
   538c8:	movw	r3, #58536	; 0xe4a8
   538cc:	movt	r3, #7
   538d0:	bl	52a4c <__assert_fail@plt+0x3fe94>
   538d4:	cmp	r0, #0
   538d8:	beq	5390c <__assert_fail@plt+0x40d54>
   538dc:	ldr	r0, [fp, #-68]	; 0xffffffbc
   538e0:	movw	r1, #7
   538e4:	strh	r1, [r0, #56]	; 0x38
   538e8:	ldr	r0, [fp, #-8]
   538ec:	ldr	r1, [r0, #48]	; 0x30
   538f0:	orr	r1, r1, #8192	; 0x2000
   538f4:	str	r1, [r0, #48]	; 0x30
   538f8:	ldr	r0, [fp, #-20]	; 0xffffffec
   538fc:	bl	51b94 <__assert_fail@plt+0x3efdc>
   53900:	movw	r0, #0
   53904:	str	r0, [fp, #-4]
   53908:	b	539dc <__assert_fail@plt+0x40e24>
   5390c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   53910:	cmp	r0, #0
   53914:	bne	53964 <__assert_fail@plt+0x40dac>
   53918:	ldr	r0, [fp, #-12]
   5391c:	cmp	r0, #3
   53920:	bne	53950 <__assert_fail@plt+0x40d98>
   53924:	ldr	r0, [fp, #-68]	; 0xffffffbc
   53928:	ldrh	r0, [r0, #56]	; 0x38
   5392c:	cmp	r0, #4
   53930:	beq	53950 <__assert_fail@plt+0x40d98>
   53934:	ldr	r0, [fp, #-68]	; 0xffffffbc
   53938:	ldrh	r0, [r0, #56]	; 0x38
   5393c:	cmp	r0, #7
   53940:	beq	53950 <__assert_fail@plt+0x40d98>
   53944:	ldr	r0, [fp, #-68]	; 0xffffffbc
   53948:	movw	r1, #6
   5394c:	strh	r1, [r0, #56]	; 0x38
   53950:	ldr	r0, [fp, #-20]	; 0xffffffec
   53954:	bl	51b94 <__assert_fail@plt+0x3efdc>
   53958:	movw	r0, #0
   5395c:	str	r0, [fp, #-4]
   53960:	b	539dc <__assert_fail@plt+0x40e24>
   53964:	ldrb	r0, [fp, #-70]	; 0xffffffba
   53968:	tst	r0, #1
   5396c:	beq	539a0 <__assert_fail@plt+0x40de8>
   53970:	ldr	r0, [fp, #-8]
   53974:	movw	r1, #17692	; 0x451c
   53978:	movt	r1, #5
   5397c:	str	r1, [r0, #44]	; 0x2c
   53980:	ldr	r0, [fp, #-8]
   53984:	ldr	r1, [fp, #-20]	; 0xffffffec
   53988:	ldr	r2, [fp, #-24]	; 0xffffffe8
   5398c:	bl	51854 <__assert_fail@plt+0x3ec9c>
   53990:	str	r0, [fp, #-20]	; 0xffffffec
   53994:	ldr	r0, [fp, #-8]
   53998:	movw	r1, #0
   5399c:	str	r1, [r0, #44]	; 0x2c
   539a0:	ldr	r0, [fp, #-8]
   539a4:	ldr	r0, [r0, #44]	; 0x2c
   539a8:	movw	r1, #0
   539ac:	cmp	r0, r1
   539b0:	beq	539d4 <__assert_fail@plt+0x40e1c>
   539b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   539b8:	cmp	r0, #1
   539bc:	bls	539d4 <__assert_fail@plt+0x40e1c>
   539c0:	ldr	r0, [fp, #-8]
   539c4:	ldr	r1, [fp, #-20]	; 0xffffffec
   539c8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   539cc:	bl	51854 <__assert_fail@plt+0x3ec9c>
   539d0:	str	r0, [fp, #-20]	; 0xffffffec
   539d4:	ldr	r0, [fp, #-20]	; 0xffffffec
   539d8:	str	r0, [fp, #-4]
   539dc:	ldr	r0, [fp, #-4]
   539e0:	mov	sp, fp
   539e4:	pop	{fp, pc}
   539e8:	andeq	r8, r1, r0, lsr #13
   539ec:	push	{fp, lr}
   539f0:	mov	fp, sp
   539f4:	sub	sp, sp, #32
   539f8:	str	r0, [fp, #-4]
   539fc:	ldr	r0, [fp, #-4]
   53a00:	ldr	r0, [r0, #48]	; 0x30
   53a04:	and	r0, r0, #4
   53a08:	cmp	r0, #0
   53a0c:	movw	r0, #0
   53a10:	str	r0, [fp, #-12]
   53a14:	bne	53ad8 <__assert_fail@plt+0x40f20>
   53a18:	ldr	r0, [fp, #-4]
   53a1c:	ldr	r0, [r0, #48]	; 0x30
   53a20:	and	r0, r0, #512	; 0x200
   53a24:	cmp	r0, #0
   53a28:	beq	53a8c <__assert_fail@plt+0x40ed4>
   53a2c:	ldr	r0, [fp, #-4]
   53a30:	ldr	r1, [fp, #-4]
   53a34:	ldr	r1, [r1, #48]	; 0x30
   53a38:	and	r1, r1, #512	; 0x200
   53a3c:	cmp	r1, #0
   53a40:	str	r0, [sp, #16]
   53a44:	beq	53a54 <__assert_fail@plt+0x40e9c>
   53a48:	mvn	r0, #99	; 0x63
   53a4c:	str	r0, [sp, #12]
   53a50:	b	53a60 <__assert_fail@plt+0x40ea8>
   53a54:	ldr	r0, [fp, #-4]
   53a58:	ldr	r0, [r0, #28]
   53a5c:	str	r0, [sp, #12]
   53a60:	ldr	r0, [sp, #12]
   53a64:	ldr	r1, [sp, #16]
   53a68:	str	r0, [sp, #8]
   53a6c:	mov	r0, r1
   53a70:	ldr	r1, [sp, #8]
   53a74:	movw	r2, #1
   53a78:	and	r2, r2, #1
   53a7c:	bl	53d3c <__assert_fail@plt+0x41184>
   53a80:	movw	r0, #0
   53a84:	str	r0, [sp, #4]
   53a88:	b	53ac4 <__assert_fail@plt+0x40f0c>
   53a8c:	ldr	r0, [fp, #-4]
   53a90:	ldr	r0, [r0, #48]	; 0x30
   53a94:	and	r0, r0, #512	; 0x200
   53a98:	cmp	r0, #0
   53a9c:	beq	53aac <__assert_fail@plt+0x40ef4>
   53aa0:	mvn	r0, #99	; 0x63
   53aa4:	str	r0, [sp]
   53aa8:	b	53ab8 <__assert_fail@plt+0x40f00>
   53aac:	ldr	r0, [fp, #-4]
   53ab0:	ldr	r0, [r0, #28]
   53ab4:	str	r0, [sp]
   53ab8:	ldr	r0, [sp]
   53abc:	bl	12aa4 <fchdir@plt>
   53ac0:	str	r0, [sp, #4]
   53ac4:	ldr	r0, [sp, #4]
   53ac8:	cmp	r0, #0
   53acc:	movw	r0, #0
   53ad0:	movne	r0, #1
   53ad4:	str	r0, [fp, #-12]
   53ad8:	ldr	r0, [fp, #-12]
   53adc:	and	r0, r0, #1
   53ae0:	str	r0, [fp, #-8]
   53ae4:	ldr	r0, [fp, #-4]
   53ae8:	add	r0, r0, #60	; 0x3c
   53aec:	bl	51e04 <__assert_fail@plt+0x3f24c>
   53af0:	ldr	r0, [fp, #-8]
   53af4:	mov	sp, fp
   53af8:	pop	{fp, pc}
   53afc:	push	{fp, lr}
   53b00:	mov	fp, sp
   53b04:	sub	sp, sp, #16
   53b08:	str	r0, [fp, #-4]
   53b0c:	str	r1, [sp, #8]
   53b10:	ldr	r0, [sp, #8]
   53b14:	ldr	r0, [r0, #52]	; 0x34
   53b18:	ldr	r1, [sp, #8]
   53b1c:	str	r0, [r1, #40]	; 0x28
   53b20:	str	r0, [sp, #4]
   53b24:	ldr	r0, [fp, #-4]
   53b28:	ldr	r0, [r0, #24]
   53b2c:	ldr	r1, [sp, #8]
   53b30:	add	r1, r1, #168	; 0xa8
   53b34:	ldr	r2, [sp, #4]
   53b38:	add	r2, r2, #1
   53b3c:	bl	12558 <memmove@plt>
   53b40:	ldr	r0, [sp, #8]
   53b44:	add	r0, r0, #168	; 0xa8
   53b48:	movw	r1, #47	; 0x2f
   53b4c:	bl	12a14 <strrchr@plt>
   53b50:	str	r0, [sp]
   53b54:	movw	r1, #0
   53b58:	cmp	r0, r1
   53b5c:	beq	53bbc <__assert_fail@plt+0x41004>
   53b60:	ldr	r0, [sp]
   53b64:	ldr	r1, [sp, #8]
   53b68:	add	r1, r1, #168	; 0xa8
   53b6c:	cmp	r0, r1
   53b70:	bne	53b84 <__assert_fail@plt+0x40fcc>
   53b74:	ldr	r0, [sp]
   53b78:	ldrb	r0, [r0, #1]
   53b7c:	cmp	r0, #0
   53b80:	beq	53bbc <__assert_fail@plt+0x41004>
   53b84:	ldr	r0, [sp]
   53b88:	add	r0, r0, #1
   53b8c:	str	r0, [sp]
   53b90:	bl	12888 <strlen@plt>
   53b94:	str	r0, [sp, #4]
   53b98:	ldr	r0, [sp, #8]
   53b9c:	add	r0, r0, #168	; 0xa8
   53ba0:	ldr	r1, [sp]
   53ba4:	ldr	lr, [sp, #4]
   53ba8:	add	r2, lr, #1
   53bac:	bl	12558 <memmove@plt>
   53bb0:	ldr	r0, [sp, #4]
   53bb4:	ldr	r1, [sp, #8]
   53bb8:	str	r0, [r1, #52]	; 0x34
   53bbc:	ldr	r0, [fp, #-4]
   53bc0:	ldr	r0, [r0, #24]
   53bc4:	ldr	r1, [sp, #8]
   53bc8:	str	r0, [r1, #28]
   53bcc:	ldr	r1, [sp, #8]
   53bd0:	str	r0, [r1, #24]
   53bd4:	mov	sp, fp
   53bd8:	pop	{fp, pc}
   53bdc:	push	{fp, lr}
   53be0:	mov	fp, sp
   53be4:	sub	sp, sp, #24
   53be8:	str	r0, [fp, #-8]
   53bec:	str	r1, [sp, #12]
   53bf0:	ldr	r0, [fp, #-8]
   53bf4:	ldr	r0, [r0, #48]	; 0x30
   53bf8:	movw	r1, #258	; 0x102
   53bfc:	and	r0, r0, r1
   53c00:	cmp	r0, #0
   53c04:	beq	53ce8 <__assert_fail@plt+0x41130>
   53c08:	ldr	r0, [sp, #12]
   53c0c:	add	r0, r0, #64	; 0x40
   53c10:	str	r0, [sp, #8]
   53c14:	movw	r0, #24
   53c18:	bl	549ac <__assert_fail@plt+0x41df4>
   53c1c:	str	r0, [sp, #4]
   53c20:	ldr	r0, [sp, #4]
   53c24:	movw	lr, #0
   53c28:	cmp	r0, lr
   53c2c:	bne	53c40 <__assert_fail@plt+0x41088>
   53c30:	movw	r0, #0
   53c34:	and	r0, r0, #1
   53c38:	strb	r0, [fp, #-1]
   53c3c:	b	53d2c <__assert_fail@plt+0x41174>
   53c40:	ldr	r0, [sp, #8]
   53c44:	ldr	r1, [r0]
   53c48:	ldr	r0, [r0, #4]
   53c4c:	ldr	r2, [sp, #4]
   53c50:	str	r0, [r2, #4]
   53c54:	str	r1, [r2]
   53c58:	ldr	r0, [sp, #8]
   53c5c:	ldr	r1, [r0, #96]	; 0x60
   53c60:	ldr	r0, [r0, #100]	; 0x64
   53c64:	ldr	r2, [sp, #4]
   53c68:	str	r0, [r2, #12]
   53c6c:	str	r1, [r2, #8]
   53c70:	ldr	r0, [sp, #12]
   53c74:	ldr	r1, [sp, #4]
   53c78:	str	r0, [r1, #16]
   53c7c:	ldr	r0, [fp, #-8]
   53c80:	ldr	r0, [r0, #56]	; 0x38
   53c84:	ldr	r1, [sp, #4]
   53c88:	bl	2e558 <__assert_fail@plt+0x1b9a0>
   53c8c:	str	r0, [sp]
   53c90:	ldr	r0, [sp]
   53c94:	ldr	r1, [sp, #4]
   53c98:	cmp	r0, r1
   53c9c:	beq	53ce4 <__assert_fail@plt+0x4112c>
   53ca0:	ldr	r0, [sp, #4]
   53ca4:	bl	50c68 <__assert_fail@plt+0x3e0b0>
   53ca8:	ldr	r0, [sp]
   53cac:	movw	lr, #0
   53cb0:	cmp	r0, lr
   53cb4:	bne	53cc8 <__assert_fail@plt+0x41110>
   53cb8:	movw	r0, #0
   53cbc:	and	r0, r0, #1
   53cc0:	strb	r0, [fp, #-1]
   53cc4:	b	53d2c <__assert_fail@plt+0x41174>
   53cc8:	ldr	r0, [sp]
   53ccc:	ldr	r0, [r0, #16]
   53cd0:	ldr	r1, [sp, #12]
   53cd4:	str	r0, [r1]
   53cd8:	ldr	r0, [sp, #12]
   53cdc:	movw	r1, #2
   53ce0:	strh	r1, [r0, #56]	; 0x38
   53ce4:	b	53d20 <__assert_fail@plt+0x41168>
   53ce8:	ldr	r0, [fp, #-8]
   53cec:	ldr	r0, [r0, #56]	; 0x38
   53cf0:	ldr	r1, [sp, #12]
   53cf4:	add	r1, r1, #64	; 0x40
   53cf8:	bl	7185c <__assert_fail@plt+0x5eca4>
   53cfc:	tst	r0, #1
   53d00:	beq	53d1c <__assert_fail@plt+0x41164>
   53d04:	ldr	r0, [sp, #12]
   53d08:	ldr	r1, [sp, #12]
   53d0c:	str	r0, [r1]
   53d10:	ldr	r0, [sp, #12]
   53d14:	movw	r1, #2
   53d18:	strh	r1, [r0, #56]	; 0x38
   53d1c:	b	53d20 <__assert_fail@plt+0x41168>
   53d20:	movw	r0, #1
   53d24:	and	r0, r0, #1
   53d28:	strb	r0, [fp, #-1]
   53d2c:	ldrb	r0, [fp, #-1]
   53d30:	and	r0, r0, #1
   53d34:	mov	sp, fp
   53d38:	pop	{fp, pc}
   53d3c:	push	{fp, lr}
   53d40:	mov	fp, sp
   53d44:	sub	sp, sp, #32
   53d48:	str	r0, [fp, #-4]
   53d4c:	str	r1, [fp, #-8]
   53d50:	and	r0, r2, #1
   53d54:	strb	r0, [fp, #-9]
   53d58:	ldr	r0, [fp, #-4]
   53d5c:	ldr	r0, [r0, #32]
   53d60:	str	r0, [sp, #16]
   53d64:	ldr	r0, [sp, #16]
   53d68:	ldr	r1, [fp, #-8]
   53d6c:	cmp	r0, r1
   53d70:	bne	53d84 <__assert_fail@plt+0x411cc>
   53d74:	ldr	r0, [sp, #16]
   53d78:	cmn	r0, #100	; 0x64
   53d7c:	beq	53d84 <__assert_fail@plt+0x411cc>
   53d80:	bl	12b64 <abort@plt>
   53d84:	b	53d88 <__assert_fail@plt+0x411d0>
   53d88:	ldrb	r0, [fp, #-9]
   53d8c:	tst	r0, #1
   53d90:	beq	53dc8 <__assert_fail@plt+0x41210>
   53d94:	ldr	r0, [fp, #-4]
   53d98:	add	r0, r0, #60	; 0x3c
   53d9c:	ldr	r1, [sp, #16]
   53da0:	bl	73008 <__assert_fail@plt+0x60450>
   53da4:	str	r0, [sp, #12]
   53da8:	ldr	r0, [sp, #12]
   53dac:	movw	r1, #0
   53db0:	cmp	r1, r0
   53db4:	bgt	53dc4 <__assert_fail@plt+0x4120c>
   53db8:	ldr	r0, [sp, #12]
   53dbc:	bl	12b70 <close@plt>
   53dc0:	str	r0, [sp, #8]
   53dc4:	b	53e00 <__assert_fail@plt+0x41248>
   53dc8:	ldr	r0, [fp, #-4]
   53dcc:	ldr	r0, [r0, #48]	; 0x30
   53dd0:	and	r0, r0, #4
   53dd4:	cmp	r0, #0
   53dd8:	bne	53dfc <__assert_fail@plt+0x41244>
   53ddc:	ldr	r0, [sp, #16]
   53de0:	movw	r1, #0
   53de4:	cmp	r1, r0
   53de8:	bgt	53df8 <__assert_fail@plt+0x41240>
   53dec:	ldr	r0, [sp, #16]
   53df0:	bl	12b70 <close@plt>
   53df4:	str	r0, [sp, #4]
   53df8:	b	53dfc <__assert_fail@plt+0x41244>
   53dfc:	b	53e00 <__assert_fail@plt+0x41248>
   53e00:	ldr	r0, [fp, #-8]
   53e04:	ldr	r1, [fp, #-4]
   53e08:	str	r0, [r1, #32]
   53e0c:	mov	sp, fp
   53e10:	pop	{fp, pc}
   53e14:	push	{fp, lr}
   53e18:	mov	fp, sp
   53e1c:	sub	sp, sp, #16
   53e20:	str	r0, [sp, #8]
   53e24:	str	r1, [sp, #4]
   53e28:	str	r2, [sp]
   53e2c:	ldr	r0, [sp]
   53e30:	cmp	r0, #0
   53e34:	beq	53e80 <__assert_fail@plt+0x412c8>
   53e38:	ldr	r0, [sp]
   53e3c:	cmp	r0, #1
   53e40:	beq	53e80 <__assert_fail@plt+0x412c8>
   53e44:	ldr	r0, [sp]
   53e48:	cmp	r0, #2
   53e4c:	beq	53e80 <__assert_fail@plt+0x412c8>
   53e50:	ldr	r0, [sp]
   53e54:	cmp	r0, #3
   53e58:	beq	53e80 <__assert_fail@plt+0x412c8>
   53e5c:	ldr	r0, [sp]
   53e60:	cmp	r0, #4
   53e64:	beq	53e80 <__assert_fail@plt+0x412c8>
   53e68:	bl	128d0 <__errno_location@plt>
   53e6c:	movw	lr, #22
   53e70:	str	lr, [r0]
   53e74:	movw	r0, #1
   53e78:	str	r0, [fp, #-4]
   53e7c:	b	53e94 <__assert_fail@plt+0x412dc>
   53e80:	ldr	r0, [sp]
   53e84:	ldr	r1, [sp, #4]
   53e88:	strh	r0, [r1, #60]	; 0x3c
   53e8c:	movw	r0, #0
   53e90:	str	r0, [fp, #-4]
   53e94:	ldr	r0, [fp, #-4]
   53e98:	mov	sp, fp
   53e9c:	pop	{fp, pc}
   53ea0:	push	{fp, lr}
   53ea4:	mov	fp, sp
   53ea8:	sub	sp, sp, #40	; 0x28
   53eac:	str	r0, [fp, #-8]
   53eb0:	str	r1, [fp, #-12]
   53eb4:	ldr	r0, [fp, #-12]
   53eb8:	cmp	r0, #0
   53ebc:	beq	53ee4 <__assert_fail@plt+0x4132c>
   53ec0:	ldr	r0, [fp, #-12]
   53ec4:	cmp	r0, #4096	; 0x1000
   53ec8:	beq	53ee4 <__assert_fail@plt+0x4132c>
   53ecc:	bl	128d0 <__errno_location@plt>
   53ed0:	movw	lr, #22
   53ed4:	str	lr, [r0]
   53ed8:	movw	r0, #0
   53edc:	str	r0, [fp, #-4]
   53ee0:	b	540cc <__assert_fail@plt+0x41514>
   53ee4:	ldr	r0, [fp, #-8]
   53ee8:	ldr	r0, [r0]
   53eec:	str	r0, [fp, #-16]
   53ef0:	bl	128d0 <__errno_location@plt>
   53ef4:	movw	lr, #0
   53ef8:	str	lr, [r0]
   53efc:	ldr	r0, [fp, #-8]
   53f00:	ldr	r0, [r0, #48]	; 0x30
   53f04:	and	r0, r0, #8192	; 0x2000
   53f08:	cmp	r0, #0
   53f0c:	beq	53f1c <__assert_fail@plt+0x41364>
   53f10:	movw	r0, #0
   53f14:	str	r0, [fp, #-4]
   53f18:	b	540cc <__assert_fail@plt+0x41514>
   53f1c:	ldr	r0, [fp, #-16]
   53f20:	ldrh	r0, [r0, #56]	; 0x38
   53f24:	cmp	r0, #9
   53f28:	bne	53f3c <__assert_fail@plt+0x41384>
   53f2c:	ldr	r0, [fp, #-16]
   53f30:	ldr	r0, [r0, #8]
   53f34:	str	r0, [fp, #-4]
   53f38:	b	540cc <__assert_fail@plt+0x41514>
   53f3c:	ldr	r0, [fp, #-16]
   53f40:	ldrh	r0, [r0, #56]	; 0x38
   53f44:	cmp	r0, #1
   53f48:	beq	53f58 <__assert_fail@plt+0x413a0>
   53f4c:	movw	r0, #0
   53f50:	str	r0, [fp, #-4]
   53f54:	b	540cc <__assert_fail@plt+0x41514>
   53f58:	ldr	r0, [fp, #-8]
   53f5c:	ldr	r0, [r0, #4]
   53f60:	movw	r1, #0
   53f64:	cmp	r0, r1
   53f68:	beq	53f78 <__assert_fail@plt+0x413c0>
   53f6c:	ldr	r0, [fp, #-8]
   53f70:	ldr	r0, [r0, #4]
   53f74:	bl	51b94 <__assert_fail@plt+0x3efdc>
   53f78:	ldr	r0, [fp, #-12]
   53f7c:	cmp	r0, #4096	; 0x1000
   53f80:	bne	53fa0 <__assert_fail@plt+0x413e8>
   53f84:	ldr	r0, [fp, #-8]
   53f88:	ldr	r1, [r0, #48]	; 0x30
   53f8c:	orr	r1, r1, #4096	; 0x1000
   53f90:	str	r1, [r0, #48]	; 0x30
   53f94:	movw	r0, #2
   53f98:	str	r0, [fp, #-12]
   53f9c:	b	53fa8 <__assert_fail@plt+0x413f0>
   53fa0:	movw	r0, #1
   53fa4:	str	r0, [fp, #-12]
   53fa8:	ldr	r0, [fp, #-16]
   53fac:	ldr	r0, [r0, #48]	; 0x30
   53fb0:	cmp	r0, #0
   53fb4:	bne	53fe0 <__assert_fail@plt+0x41428>
   53fb8:	ldr	r0, [fp, #-16]
   53fbc:	ldr	r0, [r0, #24]
   53fc0:	ldrb	r0, [r0]
   53fc4:	cmp	r0, #47	; 0x2f
   53fc8:	beq	53fe0 <__assert_fail@plt+0x41428>
   53fcc:	ldr	r0, [fp, #-8]
   53fd0:	ldr	r0, [r0, #48]	; 0x30
   53fd4:	and	r0, r0, #4
   53fd8:	cmp	r0, #0
   53fdc:	beq	53ffc <__assert_fail@plt+0x41444>
   53fe0:	ldr	r0, [fp, #-8]
   53fe4:	ldr	r1, [fp, #-12]
   53fe8:	bl	52d10 <__assert_fail@plt+0x40158>
   53fec:	ldr	r1, [fp, #-8]
   53ff0:	str	r0, [r1, #4]
   53ff4:	str	r0, [fp, #-4]
   53ff8:	b	540cc <__assert_fail@plt+0x41514>
   53ffc:	ldr	r0, [fp, #-8]
   54000:	movw	r1, #35940	; 0x8c64
   54004:	movt	r1, #7
   54008:	bl	51af8 <__assert_fail@plt+0x3ef40>
   5400c:	str	r0, [sp, #20]
   54010:	cmp	r0, #0
   54014:	bge	5402c <__assert_fail@plt+0x41474>
   54018:	ldr	r0, [fp, #-8]
   5401c:	movw	r1, #0
   54020:	str	r1, [r0, #4]
   54024:	str	r1, [fp, #-4]
   54028:	b	540cc <__assert_fail@plt+0x41514>
   5402c:	ldr	r0, [fp, #-8]
   54030:	ldr	r1, [fp, #-12]
   54034:	bl	52d10 <__assert_fail@plt+0x40158>
   54038:	ldr	r1, [fp, #-8]
   5403c:	str	r0, [r1, #4]
   54040:	ldr	r0, [fp, #-8]
   54044:	ldr	r0, [r0, #48]	; 0x30
   54048:	and	r0, r0, #512	; 0x200
   5404c:	cmp	r0, #0
   54050:	beq	5406c <__assert_fail@plt+0x414b4>
   54054:	ldr	r0, [fp, #-8]
   54058:	ldr	r1, [sp, #20]
   5405c:	movw	r2, #1
   54060:	and	r2, r2, #1
   54064:	bl	53d3c <__assert_fail@plt+0x41184>
   54068:	b	540c0 <__assert_fail@plt+0x41508>
   5406c:	ldr	r0, [sp, #20]
   54070:	bl	12aa4 <fchdir@plt>
   54074:	cmp	r0, #0
   54078:	beq	540b4 <__assert_fail@plt+0x414fc>
   5407c:	bl	128d0 <__errno_location@plt>
   54080:	ldr	r0, [r0]
   54084:	str	r0, [sp, #16]
   54088:	ldr	r0, [sp, #20]
   5408c:	bl	12b70 <close@plt>
   54090:	ldr	lr, [sp, #16]
   54094:	str	r0, [sp, #12]
   54098:	str	lr, [sp, #8]
   5409c:	bl	128d0 <__errno_location@plt>
   540a0:	ldr	lr, [sp, #8]
   540a4:	str	lr, [r0]
   540a8:	movw	r0, #0
   540ac:	str	r0, [fp, #-4]
   540b0:	b	540cc <__assert_fail@plt+0x41514>
   540b4:	ldr	r0, [sp, #20]
   540b8:	bl	12b70 <close@plt>
   540bc:	str	r0, [sp, #4]
   540c0:	ldr	r0, [fp, #-8]
   540c4:	ldr	r0, [r0, #4]
   540c8:	str	r0, [fp, #-4]
   540cc:	ldr	r0, [fp, #-4]
   540d0:	mov	sp, fp
   540d4:	pop	{fp, pc}
   540d8:	push	{fp, lr}
   540dc:	mov	fp, sp
   540e0:	sub	sp, sp, #24
   540e4:	str	r0, [fp, #-4]
   540e8:	str	r1, [fp, #-8]
   540ec:	ldr	r0, [fp, #-4]
   540f0:	str	r0, [sp, #12]
   540f4:	ldr	r0, [sp, #12]
   540f8:	ldr	r1, [r0, #8]
   540fc:	ldr	r0, [r0, #12]
   54100:	ldr	r2, [fp, #-8]
   54104:	mov	r3, #0
   54108:	str	r0, [sp, #8]
   5410c:	mov	r0, r1
   54110:	ldr	r1, [sp, #8]
   54114:	bl	77854 <__assert_fail@plt+0x64c9c>
   54118:	str	r0, [sp, #4]
   5411c:	mov	r0, r2
   54120:	str	r1, [sp]
   54124:	mov	sp, fp
   54128:	pop	{fp, pc}
   5412c:	sub	sp, sp, #20
   54130:	str	r0, [sp, #16]
   54134:	str	r1, [sp, #12]
   54138:	ldr	r0, [sp, #16]
   5413c:	str	r0, [sp, #8]
   54140:	ldr	r0, [sp, #12]
   54144:	str	r0, [sp, #4]
   54148:	ldr	r0, [sp, #8]
   5414c:	ldr	r1, [r0, #8]
   54150:	ldr	r0, [r0, #12]
   54154:	ldr	r2, [sp, #4]
   54158:	ldr	r3, [r2, #8]
   5415c:	ldr	r2, [r2, #12]
   54160:	eor	r0, r0, r2
   54164:	eor	r1, r1, r3
   54168:	orr	r0, r1, r0
   5416c:	mov	r1, #0
   54170:	cmp	r0, #0
   54174:	str	r1, [sp]
   54178:	bne	541b0 <__assert_fail@plt+0x415f8>
   5417c:	b	54180 <__assert_fail@plt+0x415c8>
   54180:	ldr	r0, [sp, #8]
   54184:	ldr	r1, [r0]
   54188:	ldr	r0, [r0, #4]
   5418c:	ldr	r2, [sp, #4]
   54190:	ldr	r3, [r2]
   54194:	ldr	r2, [r2, #4]
   54198:	eor	r0, r0, r2
   5419c:	eor	r1, r1, r3
   541a0:	orr	r0, r1, r0
   541a4:	clz	r0, r0
   541a8:	lsr	r0, r0, #5
   541ac:	str	r0, [sp]
   541b0:	ldr	r0, [sp]
   541b4:	and	r0, r0, #1
   541b8:	add	sp, sp, #20
   541bc:	bx	lr
   541c0:	push	{fp, lr}
   541c4:	mov	fp, sp
   541c8:	sub	sp, sp, #16
   541cc:	str	r0, [sp, #8]
   541d0:	str	r1, [sp, #4]
   541d4:	ldr	r0, [sp, #8]
   541d8:	ldr	r1, [sp, #4]
   541dc:	bl	54594 <__assert_fail@plt+0x419dc>
   541e0:	mov	r1, r0
   541e4:	movw	lr, #19778	; 0x4d42
   541e8:	movt	lr, #65363	; 0xff53
   541ec:	cmp	r0, lr
   541f0:	str	r1, [sp]
   541f4:	beq	54254 <__assert_fail@plt+0x4169c>
   541f8:	b	541fc <__assert_fail@plt+0x41644>
   541fc:	ldr	r0, [sp]
   54200:	cmp	r0, #0
   54204:	beq	5424c <__assert_fail@plt+0x41694>
   54208:	b	5420c <__assert_fail@plt+0x41654>
   5420c:	movw	r0, #26985	; 0x6969
   54210:	ldr	r1, [sp]
   54214:	cmp	r1, r0
   54218:	beq	54258 <__assert_fail@plt+0x416a0>
   5421c:	b	54220 <__assert_fail@plt+0x41668>
   54220:	movw	r0, #40864	; 0x9fa0
   54224:	ldr	r1, [sp]
   54228:	cmp	r1, r0
   5422c:	beq	5425c <__assert_fail@plt+0x416a4>
   54230:	b	54234 <__assert_fail@plt+0x4167c>
   54234:	movw	r0, #16719	; 0x414f
   54238:	movt	r0, #21318	; 0x5346
   5423c:	ldr	r1, [sp]
   54240:	cmp	r1, r0
   54244:	beq	54250 <__assert_fail@plt+0x41698>
   54248:	b	54268 <__assert_fail@plt+0x416b0>
   5424c:	b	54250 <__assert_fail@plt+0x41698>
   54250:	b	54254 <__assert_fail@plt+0x4169c>
   54254:	b	54258 <__assert_fail@plt+0x416a0>
   54258:	b	5425c <__assert_fail@plt+0x416a4>
   5425c:	movw	r0, #0
   54260:	str	r0, [fp, #-4]
   54264:	b	54270 <__assert_fail@plt+0x416b8>
   54268:	movw	r0, #1
   5426c:	str	r0, [fp, #-4]
   54270:	ldr	r0, [fp, #-4]
   54274:	mov	sp, fp
   54278:	pop	{fp, pc}
   5427c:	sub	sp, sp, #16
   54280:	str	r0, [sp, #12]
   54284:	str	r1, [sp, #8]
   54288:	ldr	r0, [sp, #8]
   5428c:	sub	r0, r0, #1
   54290:	cmp	r0, #11
   54294:	str	r0, [sp]
   54298:	bhi	54330 <__assert_fail@plt+0x41778>
   5429c:	add	r0, pc, #8
   542a0:	ldr	r1, [sp]
   542a4:	ldr	r0, [r0, r1, lsl #2]
   542a8:	mov	pc, r0
   542ac:	andeq	r4, r5, r0, lsl #6
   542b0:	andeq	r4, r5, r8, ror #5
   542b4:	andeq	r4, r5, r0, lsr r3
   542b8:	strdeq	r4, [r5], -r4	; <UNPREDICTABLE>
   542bc:	andeq	r4, r5, r0, lsr r3
   542c0:	ldrdeq	r4, [r5], -ip
   542c4:	andeq	r4, r5, r0, lsr r3
   542c8:	andeq	r4, r5, r8, lsl r3
   542cc:	andeq	r4, r5, r0, lsr r3
   542d0:	andeq	r4, r5, ip, lsl #6
   542d4:	andeq	r4, r5, r0, lsr r3
   542d8:	andeq	r4, r5, r4, lsr #6
   542dc:	movw	r0, #24576	; 0x6000
   542e0:	str	r0, [sp, #4]
   542e4:	b	54338 <__assert_fail@plt+0x41780>
   542e8:	movw	r0, #8192	; 0x2000
   542ec:	str	r0, [sp, #4]
   542f0:	b	54338 <__assert_fail@plt+0x41780>
   542f4:	movw	r0, #16384	; 0x4000
   542f8:	str	r0, [sp, #4]
   542fc:	b	54338 <__assert_fail@plt+0x41780>
   54300:	movw	r0, #4096	; 0x1000
   54304:	str	r0, [sp, #4]
   54308:	b	54338 <__assert_fail@plt+0x41780>
   5430c:	movw	r0, #40960	; 0xa000
   54310:	str	r0, [sp, #4]
   54314:	b	54338 <__assert_fail@plt+0x41780>
   54318:	movw	r0, #32768	; 0x8000
   5431c:	str	r0, [sp, #4]
   54320:	b	54338 <__assert_fail@plt+0x41780>
   54324:	movw	r0, #49152	; 0xc000
   54328:	str	r0, [sp, #4]
   5432c:	b	54338 <__assert_fail@plt+0x41780>
   54330:	movw	r0, #0
   54334:	str	r0, [sp, #4]
   54338:	ldr	r0, [sp, #4]
   5433c:	ldr	r1, [sp, #12]
   54340:	str	r0, [r1, #16]
   54344:	add	sp, sp, #16
   54348:	bx	lr
   5434c:	push	{fp, lr}
   54350:	mov	fp, sp
   54354:	sub	sp, sp, #16
   54358:	str	r0, [sp, #8]
   5435c:	str	r1, [sp, #4]
   54360:	ldr	r0, [sp, #8]
   54364:	ldr	r1, [sp, #4]
   54368:	bl	54594 <__assert_fail@plt+0x419dc>
   5436c:	mov	r1, r0
   54370:	movw	lr, #19778	; 0x4d42
   54374:	movt	lr, #65363	; 0xff53
   54378:	cmp	r0, lr
   5437c:	str	r1, [sp]
   54380:	beq	543b4 <__assert_fail@plt+0x417fc>
   54384:	b	54388 <__assert_fail@plt+0x417d0>
   54388:	movw	r0, #26985	; 0x6969
   5438c:	ldr	r1, [sp]
   54390:	cmp	r1, r0
   54394:	beq	543b4 <__assert_fail@plt+0x417fc>
   54398:	b	5439c <__assert_fail@plt+0x417e4>
   5439c:	movw	r0, #6548	; 0x1994
   543a0:	movt	r0, #258	; 0x102
   543a4:	ldr	r1, [sp]
   543a8:	cmp	r1, r0
   543ac:	bne	543c4 <__assert_fail@plt+0x4180c>
   543b0:	b	543b4 <__assert_fail@plt+0x417fc>
   543b4:	movw	r0, #0
   543b8:	and	r0, r0, #1
   543bc:	strb	r0, [fp, #-1]
   543c0:	b	543d0 <__assert_fail@plt+0x41818>
   543c4:	movw	r0, #1
   543c8:	and	r0, r0, #1
   543cc:	strb	r0, [fp, #-1]
   543d0:	ldrb	r0, [fp, #-1]
   543d4:	and	r0, r0, #1
   543d8:	mov	sp, fp
   543dc:	pop	{fp, pc}
   543e0:	sub	sp, sp, #20
   543e4:	str	r0, [sp, #16]
   543e8:	str	r1, [sp, #12]
   543ec:	ldr	r0, [sp, #16]
   543f0:	ldr	r0, [r0, #24]
   543f4:	str	r0, [sp, #4]
   543f8:	ldr	r0, [sp, #16]
   543fc:	ldr	r0, [r0, #4]
   54400:	str	r0, [sp, #8]
   54404:	ldr	r0, [sp, #8]
   54408:	movw	r1, #0
   5440c:	cmp	r0, r1
   54410:	beq	54474 <__assert_fail@plt+0x418bc>
   54414:	b	54418 <__assert_fail@plt+0x41860>
   54418:	ldr	r0, [sp, #8]
   5441c:	ldr	r0, [r0, #24]
   54420:	ldr	r1, [sp, #8]
   54424:	add	r1, r1, #168	; 0xa8
   54428:	cmp	r0, r1
   5442c:	beq	54454 <__assert_fail@plt+0x4189c>
   54430:	ldr	r0, [sp, #4]
   54434:	ldr	r1, [sp, #8]
   54438:	ldr	r1, [r1, #24]
   5443c:	ldr	r2, [sp, #8]
   54440:	ldr	r2, [r2, #28]
   54444:	sub	r1, r1, r2
   54448:	add	r0, r0, r1
   5444c:	ldr	r1, [sp, #8]
   54450:	str	r0, [r1, #24]
   54454:	ldr	r0, [sp, #4]
   54458:	ldr	r1, [sp, #8]
   5445c:	str	r0, [r1, #28]
   54460:	b	54464 <__assert_fail@plt+0x418ac>
   54464:	ldr	r0, [sp, #8]
   54468:	ldr	r0, [r0, #8]
   5446c:	str	r0, [sp, #8]
   54470:	b	54404 <__assert_fail@plt+0x4184c>
   54474:	ldr	r0, [sp, #12]
   54478:	str	r0, [sp, #8]
   5447c:	ldr	r0, [sp, #8]
   54480:	ldr	r0, [r0, #48]	; 0x30
   54484:	cmp	r0, #0
   54488:	blt	54514 <__assert_fail@plt+0x4195c>
   5448c:	b	54490 <__assert_fail@plt+0x418d8>
   54490:	ldr	r0, [sp, #8]
   54494:	ldr	r0, [r0, #24]
   54498:	ldr	r1, [sp, #8]
   5449c:	add	r1, r1, #168	; 0xa8
   544a0:	cmp	r0, r1
   544a4:	beq	544cc <__assert_fail@plt+0x41914>
   544a8:	ldr	r0, [sp, #4]
   544ac:	ldr	r1, [sp, #8]
   544b0:	ldr	r1, [r1, #24]
   544b4:	ldr	r2, [sp, #8]
   544b8:	ldr	r2, [r2, #28]
   544bc:	sub	r1, r1, r2
   544c0:	add	r0, r0, r1
   544c4:	ldr	r1, [sp, #8]
   544c8:	str	r0, [r1, #24]
   544cc:	ldr	r0, [sp, #4]
   544d0:	ldr	r1, [sp, #8]
   544d4:	str	r0, [r1, #28]
   544d8:	ldr	r0, [sp, #8]
   544dc:	ldr	r0, [r0, #8]
   544e0:	movw	r1, #0
   544e4:	cmp	r0, r1
   544e8:	beq	544fc <__assert_fail@plt+0x41944>
   544ec:	ldr	r0, [sp, #8]
   544f0:	ldr	r0, [r0, #8]
   544f4:	str	r0, [sp]
   544f8:	b	54508 <__assert_fail@plt+0x41950>
   544fc:	ldr	r0, [sp, #8]
   54500:	ldr	r0, [r0, #4]
   54504:	str	r0, [sp]
   54508:	ldr	r0, [sp]
   5450c:	str	r0, [sp, #8]
   54510:	b	5447c <__assert_fail@plt+0x418c4>
   54514:	add	sp, sp, #20
   54518:	bx	lr
   5451c:	push	{r4, r5, fp, lr}
   54520:	add	fp, sp, #8
   54524:	sub	sp, sp, #24
   54528:	str	r0, [fp, #-12]
   5452c:	str	r1, [sp, #16]
   54530:	ldr	r0, [fp, #-12]
   54534:	ldr	r0, [r0]
   54538:	ldr	r1, [r0, #160]	; 0xa0
   5453c:	ldr	r0, [r0, #164]	; 0xa4
   54540:	ldr	r2, [sp, #16]
   54544:	ldr	r2, [r2]
   54548:	ldr	r3, [r2, #160]	; 0xa0
   5454c:	ldr	r2, [r2, #164]	; 0xa4
   54550:	subs	ip, r3, r1
   54554:	sbcs	lr, r2, r0
   54558:	mov	r4, #0
   5455c:	mov	r5, r4
   54560:	movwcc	r5, #1
   54564:	subs	r1, r1, r3
   54568:	sbcs	r0, r0, r2
   5456c:	movwcc	r4, #1
   54570:	and	r2, r4, #1
   54574:	sub	r2, r5, r2
   54578:	str	r0, [sp, #12]
   5457c:	mov	r0, r2
   54580:	str	ip, [sp, #8]
   54584:	str	r1, [sp, #4]
   54588:	str	lr, [sp]
   5458c:	sub	sp, fp, #8
   54590:	pop	{r4, r5, fp, pc}
   54594:	push	{fp, lr}
   54598:	mov	fp, sp
   5459c:	sub	sp, sp, #136	; 0x88
   545a0:	str	r0, [fp, #-8]
   545a4:	str	r1, [fp, #-12]
   545a8:	ldr	r0, [fp, #-8]
   545ac:	ldr	r0, [r0, #44]	; 0x2c
   545b0:	str	r0, [fp, #-16]
   545b4:	ldr	r0, [fp, #-16]
   545b8:	ldr	r0, [r0, #52]	; 0x34
   545bc:	str	r0, [fp, #-20]	; 0xffffffec
   545c0:	ldr	r0, [fp, #-16]
   545c4:	ldr	r0, [r0, #48]	; 0x30
   545c8:	and	r0, r0, #512	; 0x200
   545cc:	cmp	r0, #0
   545d0:	bne	545e0 <__assert_fail@plt+0x41a28>
   545d4:	movw	r0, #0
   545d8:	str	r0, [fp, #-4]
   545dc:	b	54750 <__assert_fail@plt+0x41b98>
   545e0:	ldr	r0, [fp, #-20]	; 0xffffffec
   545e4:	movw	r1, #0
   545e8:	cmp	r0, r1
   545ec:	bne	54624 <__assert_fail@plt+0x41a6c>
   545f0:	movw	r0, #13
   545f4:	movw	r1, #0
   545f8:	movw	r2, #18268	; 0x475c
   545fc:	movt	r2, #5
   54600:	movw	r3, #18356	; 0x47b4
   54604:	movt	r3, #5
   54608:	movw	ip, #3176	; 0xc68
   5460c:	movt	ip, #5
   54610:	str	ip, [sp]
   54614:	bl	2d52c <__assert_fail@plt+0x1a974>
   54618:	ldr	r1, [fp, #-16]
   5461c:	str	r0, [r1, #52]	; 0x34
   54620:	str	r0, [fp, #-20]	; 0xffffffec
   54624:	ldr	r0, [fp, #-20]	; 0xffffffec
   54628:	movw	r1, #0
   5462c:	cmp	r0, r1
   54630:	beq	5467c <__assert_fail@plt+0x41ac4>
   54634:	ldr	r0, [fp, #-8]
   54638:	ldr	r1, [r0, #64]	; 0x40
   5463c:	ldr	r0, [r0, #68]	; 0x44
   54640:	str	r0, [sp, #12]
   54644:	str	r1, [sp, #8]
   54648:	ldr	r0, [fp, #-20]	; 0xffffffec
   5464c:	add	r1, sp, #8
   54650:	bl	2d010 <__assert_fail@plt+0x1a458>
   54654:	str	r0, [fp, #-24]	; 0xffffffe8
   54658:	ldr	r0, [fp, #-24]	; 0xffffffe8
   5465c:	movw	r1, #0
   54660:	cmp	r0, r1
   54664:	beq	54678 <__assert_fail@plt+0x41ac0>
   54668:	ldr	r0, [fp, #-24]	; 0xffffffe8
   5466c:	ldr	r0, [r0, #8]
   54670:	str	r0, [fp, #-4]
   54674:	b	54750 <__assert_fail@plt+0x41b98>
   54678:	b	5467c <__assert_fail@plt+0x41ac4>
   5467c:	ldr	r0, [fp, #-12]
   54680:	cmp	r0, #0
   54684:	blt	5469c <__assert_fail@plt+0x41ae4>
   54688:	ldr	r0, [fp, #-12]
   5468c:	add	r1, sp, #24
   54690:	bl	12444 <fstatfs64@plt>
   54694:	cmp	r0, #0
   54698:	beq	546a8 <__assert_fail@plt+0x41af0>
   5469c:	movw	r0, #0
   546a0:	str	r0, [fp, #-4]
   546a4:	b	54750 <__assert_fail@plt+0x41b98>
   546a8:	ldr	r0, [fp, #-20]	; 0xffffffec
   546ac:	movw	r1, #0
   546b0:	cmp	r0, r1
   546b4:	beq	54748 <__assert_fail@plt+0x41b90>
   546b8:	movw	r0, #16
   546bc:	bl	549ac <__assert_fail@plt+0x41df4>
   546c0:	str	r0, [sp, #4]
   546c4:	ldr	r0, [sp, #4]
   546c8:	movw	lr, #0
   546cc:	cmp	r0, lr
   546d0:	beq	54744 <__assert_fail@plt+0x41b8c>
   546d4:	ldr	r0, [fp, #-8]
   546d8:	ldr	r1, [r0, #64]	; 0x40
   546dc:	ldr	r0, [r0, #68]	; 0x44
   546e0:	ldr	r2, [sp, #4]
   546e4:	str	r0, [r2, #4]
   546e8:	str	r1, [r2]
   546ec:	ldr	r0, [sp, #24]
   546f0:	ldr	r1, [sp, #4]
   546f4:	str	r0, [r1, #8]
   546f8:	ldr	r0, [fp, #-20]	; 0xffffffec
   546fc:	ldr	r1, [sp, #4]
   54700:	bl	2e558 <__assert_fail@plt+0x1b9a0>
   54704:	str	r0, [fp, #-24]	; 0xffffffe8
   54708:	ldr	r0, [fp, #-24]	; 0xffffffe8
   5470c:	movw	r1, #0
   54710:	cmp	r0, r1
   54714:	beq	54738 <__assert_fail@plt+0x41b80>
   54718:	b	5471c <__assert_fail@plt+0x41b64>
   5471c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   54720:	ldr	r1, [sp, #4]
   54724:	cmp	r0, r1
   54728:	beq	54730 <__assert_fail@plt+0x41b78>
   5472c:	bl	12b64 <abort@plt>
   54730:	b	54734 <__assert_fail@plt+0x41b7c>
   54734:	b	54740 <__assert_fail@plt+0x41b88>
   54738:	ldr	r0, [sp, #4]
   5473c:	bl	50c68 <__assert_fail@plt+0x3e0b0>
   54740:	b	54744 <__assert_fail@plt+0x41b8c>
   54744:	b	54748 <__assert_fail@plt+0x41b90>
   54748:	ldr	r0, [sp, #24]
   5474c:	str	r0, [fp, #-4]
   54750:	ldr	r0, [fp, #-4]
   54754:	mov	sp, fp
   54758:	pop	{fp, pc}
   5475c:	push	{fp, lr}
   54760:	mov	fp, sp
   54764:	sub	sp, sp, #32
   54768:	str	r0, [fp, #-4]
   5476c:	str	r1, [fp, #-8]
   54770:	ldr	r0, [fp, #-4]
   54774:	str	r0, [fp, #-12]
   54778:	ldr	r0, [fp, #-12]
   5477c:	ldr	r1, [r0]
   54780:	ldr	r0, [r0, #4]
   54784:	str	r0, [sp, #12]
   54788:	str	r1, [sp, #8]
   5478c:	ldr	r0, [sp, #8]
   54790:	ldr	r1, [sp, #12]
   54794:	ldr	r2, [fp, #-8]
   54798:	mov	r3, #0
   5479c:	bl	77854 <__assert_fail@plt+0x64c9c>
   547a0:	str	r0, [sp, #4]
   547a4:	mov	r0, r2
   547a8:	str	r1, [sp]
   547ac:	mov	sp, fp
   547b0:	pop	{fp, pc}
   547b4:	sub	sp, sp, #16
   547b8:	str	r0, [sp, #12]
   547bc:	str	r1, [sp, #8]
   547c0:	ldr	r0, [sp, #12]
   547c4:	str	r0, [sp, #4]
   547c8:	ldr	r0, [sp, #8]
   547cc:	str	r0, [sp]
   547d0:	ldr	r0, [sp, #4]
   547d4:	ldr	r1, [r0]
   547d8:	ldr	r0, [r0, #4]
   547dc:	ldr	r2, [sp]
   547e0:	ldr	r3, [r2]
   547e4:	ldr	r2, [r2, #4]
   547e8:	eor	r0, r0, r2
   547ec:	eor	r1, r1, r3
   547f0:	orr	r0, r1, r0
   547f4:	clz	r0, r0
   547f8:	lsr	r0, r0, #5
   547fc:	and	r0, r0, #1
   54800:	add	sp, sp, #16
   54804:	bx	lr
   54808:	push	{fp, lr}
   5480c:	mov	fp, sp
   54810:	sub	sp, sp, #24
   54814:	str	r0, [fp, #-4]
   54818:	str	r1, [fp, #-8]
   5481c:	ldr	r0, [fp, #-4]
   54820:	str	r0, [sp, #12]
   54824:	ldr	r0, [fp, #-8]
   54828:	str	r0, [sp, #8]
   5482c:	ldr	r0, [sp, #12]
   54830:	ldr	r0, [r0]
   54834:	ldr	r0, [r0, #44]	; 0x2c
   54838:	ldr	r0, [r0, #44]	; 0x2c
   5483c:	ldr	r1, [sp, #12]
   54840:	ldr	r2, [sp, #8]
   54844:	str	r0, [sp, #4]
   54848:	mov	r0, r1
   5484c:	mov	r1, r2
   54850:	ldr	r2, [sp, #4]
   54854:	blx	r2
   54858:	mov	sp, fp
   5485c:	pop	{fp, pc}
   54860:	push	{fp, lr}
   54864:	mov	fp, sp
   54868:	sub	sp, sp, #16
   5486c:	str	r0, [fp, #-4]
   54870:	str	r1, [sp, #8]
   54874:	ldr	r0, [fp, #-4]
   54878:	ldr	r1, [sp, #8]
   5487c:	bl	12870 <getfilecon@plt>
   54880:	str	r0, [sp, #4]
   54884:	ldr	r0, [sp, #4]
   54888:	ldr	r1, [sp, #8]
   5488c:	bl	54898 <__assert_fail@plt+0x41ce0>
   54890:	mov	sp, fp
   54894:	pop	{fp, pc}
   54898:	push	{fp, lr}
   5489c:	mov	fp, sp
   548a0:	sub	sp, sp, #16
   548a4:	str	r0, [sp, #8]
   548a8:	str	r1, [sp, #4]
   548ac:	ldr	r0, [sp, #8]
   548b0:	cmp	r0, #0
   548b4:	bne	548d0 <__assert_fail@plt+0x41d18>
   548b8:	bl	128d0 <__errno_location@plt>
   548bc:	movw	lr, #95	; 0x5f
   548c0:	str	lr, [r0]
   548c4:	mvn	r0, #0
   548c8:	str	r0, [fp, #-4]
   548cc:	b	54930 <__assert_fail@plt+0x41d78>
   548d0:	ldr	r0, [sp, #8]
   548d4:	cmp	r0, #10
   548d8:	bne	54928 <__assert_fail@plt+0x41d70>
   548dc:	ldr	r0, [sp, #4]
   548e0:	ldr	r0, [r0]
   548e4:	movw	r1, #58539	; 0xe4ab
   548e8:	movt	r1, #7
   548ec:	bl	124c8 <strcmp@plt>
   548f0:	cmp	r0, #0
   548f4:	bne	54928 <__assert_fail@plt+0x41d70>
   548f8:	ldr	r0, [sp, #4]
   548fc:	ldr	r0, [r0]
   54900:	bl	12ac8 <freecon@plt>
   54904:	ldr	r0, [sp, #4]
   54908:	movw	lr, #0
   5490c:	str	lr, [r0]
   54910:	bl	128d0 <__errno_location@plt>
   54914:	movw	lr, #61	; 0x3d
   54918:	str	lr, [r0]
   5491c:	mvn	r0, #0
   54920:	str	r0, [fp, #-4]
   54924:	b	54930 <__assert_fail@plt+0x41d78>
   54928:	ldr	r0, [sp, #8]
   5492c:	str	r0, [fp, #-4]
   54930:	ldr	r0, [fp, #-4]
   54934:	mov	sp, fp
   54938:	pop	{fp, pc}
   5493c:	push	{fp, lr}
   54940:	mov	fp, sp
   54944:	sub	sp, sp, #16
   54948:	str	r0, [fp, #-4]
   5494c:	str	r1, [sp, #8]
   54950:	ldr	r0, [fp, #-4]
   54954:	ldr	r1, [sp, #8]
   54958:	bl	127c8 <lgetfilecon@plt>
   5495c:	str	r0, [sp, #4]
   54960:	ldr	r0, [sp, #4]
   54964:	ldr	r1, [sp, #8]
   54968:	bl	54898 <__assert_fail@plt+0x41ce0>
   5496c:	mov	sp, fp
   54970:	pop	{fp, pc}
   54974:	push	{fp, lr}
   54978:	mov	fp, sp
   5497c:	sub	sp, sp, #16
   54980:	str	r0, [fp, #-4]
   54984:	str	r1, [sp, #8]
   54988:	ldr	r0, [fp, #-4]
   5498c:	ldr	r1, [sp, #8]
   54990:	bl	12678 <fgetfilecon@plt>
   54994:	str	r0, [sp, #4]
   54998:	ldr	r0, [sp, #4]
   5499c:	ldr	r1, [sp, #8]
   549a0:	bl	54898 <__assert_fail@plt+0x41ce0>
   549a4:	mov	sp, fp
   549a8:	pop	{fp, pc}
   549ac:	push	{fp, lr}
   549b0:	mov	fp, sp
   549b4:	sub	sp, sp, #16
   549b8:	str	r0, [sp, #8]
   549bc:	ldr	r0, [sp, #8]
   549c0:	cmp	r0, #0
   549c4:	bne	549d0 <__assert_fail@plt+0x41e18>
   549c8:	movw	r0, #1
   549cc:	str	r0, [sp, #8]
   549d0:	ldr	r0, [pc, #64]	; 54a18 <__assert_fail@plt+0x41e60>
   549d4:	ldr	r1, [sp, #8]
   549d8:	cmp	r0, r1
   549dc:	bcs	549f8 <__assert_fail@plt+0x41e40>
   549e0:	bl	128d0 <__errno_location@plt>
   549e4:	movw	lr, #12
   549e8:	str	lr, [r0]
   549ec:	movw	r0, #0
   549f0:	str	r0, [fp, #-4]
   549f4:	b	54a0c <__assert_fail@plt+0x41e54>
   549f8:	ldr	r0, [sp, #8]
   549fc:	bl	127d4 <malloc@plt>
   54a00:	str	r0, [sp, #4]
   54a04:	ldr	r0, [sp, #4]
   54a08:	str	r0, [fp, #-4]
   54a0c:	ldr	r0, [fp, #-4]
   54a10:	mov	sp, fp
   54a14:	pop	{fp, pc}
   54a18:	svcvc	0x00ffffff
   54a1c:	push	{fp, lr}
   54a20:	mov	fp, sp
   54a24:	sub	sp, sp, #32
   54a28:	str	r0, [fp, #-8]
   54a2c:	str	r1, [fp, #-12]
   54a30:	str	r2, [sp, #16]
   54a34:	str	r3, [sp, #12]
   54a38:	ldr	r0, [fp, #-8]
   54a3c:	movw	r1, #0
   54a40:	cmp	r0, r1
   54a44:	bne	54a50 <__assert_fail@plt+0x41e98>
   54a48:	add	r0, sp, #4
   54a4c:	str	r0, [fp, #-8]
   54a50:	ldr	r0, [fp, #-8]
   54a54:	ldr	r1, [fp, #-12]
   54a58:	ldr	r2, [sp, #16]
   54a5c:	ldr	r3, [sp, #12]
   54a60:	bl	12768 <mbrtowc@plt>
   54a64:	str	r0, [sp, #8]
   54a68:	ldr	r0, [sp, #8]
   54a6c:	mvn	r1, #1
   54a70:	cmp	r1, r0
   54a74:	bhi	54ab8 <__assert_fail@plt+0x41f00>
   54a78:	ldr	r0, [sp, #16]
   54a7c:	cmp	r0, #0
   54a80:	beq	54ab8 <__assert_fail@plt+0x41f00>
   54a84:	movw	r0, #0
   54a88:	bl	72edc <__assert_fail@plt+0x60324>
   54a8c:	tst	r0, #1
   54a90:	bne	54ab8 <__assert_fail@plt+0x41f00>
   54a94:	ldr	r0, [fp, #-12]
   54a98:	ldrb	r0, [r0]
   54a9c:	strb	r0, [sp, #3]
   54aa0:	ldrb	r0, [sp, #3]
   54aa4:	ldr	r1, [fp, #-8]
   54aa8:	str	r0, [r1]
   54aac:	movw	r0, #1
   54ab0:	str	r0, [fp, #-4]
   54ab4:	b	54ac0 <__assert_fail@plt+0x41f08>
   54ab8:	ldr	r0, [sp, #8]
   54abc:	str	r0, [fp, #-4]
   54ac0:	ldr	r0, [fp, #-4]
   54ac4:	mov	sp, fp
   54ac8:	pop	{fp, pc}
   54acc:	push	{fp, lr}
   54ad0:	mov	fp, sp
   54ad4:	sub	sp, sp, #136	; 0x88
   54ad8:	and	r0, r0, #1
   54adc:	strb	r0, [fp, #-5]
   54ae0:	sub	r0, fp, #12
   54ae4:	str	r0, [fp, #-20]	; 0xffffffec
   54ae8:	movw	r0, #58549	; 0xe4b5
   54aec:	movt	r0, #7
   54af0:	str	r0, [fp, #-28]	; 0xffffffe4
   54af4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   54af8:	movw	r1, #49000	; 0xbf68
   54afc:	movt	r1, #7
   54b00:	bl	12ab0 <fopen64@plt>
   54b04:	str	r0, [fp, #-24]	; 0xffffffe8
   54b08:	ldr	r0, [fp, #-24]	; 0xffffffe8
   54b0c:	movw	r1, #0
   54b10:	cmp	r0, r1
   54b14:	beq	551cc <__assert_fail@plt+0x42614>
   54b18:	movw	r0, #0
   54b1c:	str	r0, [fp, #-32]	; 0xffffffe0
   54b20:	str	r0, [fp, #-36]	; 0xffffffdc
   54b24:	ldr	r2, [fp, #-24]	; 0xffffffe8
   54b28:	sub	r0, fp, #32
   54b2c:	sub	r1, fp, #36	; 0x24
   54b30:	bl	12b04 <getline@plt>
   54b34:	cmn	r0, #1
   54b38:	beq	5516c <__assert_fail@plt+0x425b4>
   54b3c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   54b40:	movw	r1, #58570	; 0xe4ca
   54b44:	movt	r1, #7
   54b48:	sub	r2, fp, #40	; 0x28
   54b4c:	sub	r3, fp, #44	; 0x2c
   54b50:	sub	ip, fp, #52	; 0x34
   54b54:	str	ip, [sp]
   54b58:	bl	12a44 <sscanf@plt>
   54b5c:	str	r0, [fp, #-48]	; 0xffffffd0
   54b60:	ldr	r0, [fp, #-48]	; 0xffffffd0
   54b64:	cmp	r0, #2
   54b68:	beq	54b7c <__assert_fail@plt+0x41fc4>
   54b6c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   54b70:	cmp	r0, #3
   54b74:	beq	54b7c <__assert_fail@plt+0x41fc4>
   54b78:	b	54b24 <__assert_fail@plt+0x41f6c>
   54b7c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   54b80:	ldr	r1, [fp, #-52]	; 0xffffffcc
   54b84:	add	r0, r0, r1
   54b88:	str	r0, [fp, #-56]	; 0xffffffc8
   54b8c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   54b90:	bl	557e8 <__assert_fail@plt+0x42c30>
   54b94:	str	r0, [fp, #-60]	; 0xffffffc4
   54b98:	ldr	r0, [fp, #-60]	; 0xffffffc4
   54b9c:	movw	r1, #0
   54ba0:	cmp	r0, r1
   54ba4:	bne	54bac <__assert_fail@plt+0x41ff4>
   54ba8:	b	54b24 <__assert_fail@plt+0x41f6c>
   54bac:	ldr	r0, [fp, #-60]	; 0xffffffc4
   54bb0:	add	r0, r0, #1
   54bb4:	str	r0, [fp, #-64]	; 0xffffffc0
   54bb8:	ldr	r0, [fp, #-64]	; 0xffffffc0
   54bbc:	bl	557e8 <__assert_fail@plt+0x42c30>
   54bc0:	str	r0, [fp, #-60]	; 0xffffffc4
   54bc4:	ldr	r0, [fp, #-60]	; 0xffffffc4
   54bc8:	movw	lr, #0
   54bcc:	cmp	r0, lr
   54bd0:	bne	54bd8 <__assert_fail@plt+0x42020>
   54bd4:	b	54b24 <__assert_fail@plt+0x41f6c>
   54bd8:	ldr	r0, [fp, #-60]	; 0xffffffc4
   54bdc:	add	r0, r0, #1
   54be0:	movw	r1, #58587	; 0xe4db
   54be4:	movt	r1, #7
   54be8:	bl	6ee64 <__assert_fail@plt+0x5c2ac>
   54bec:	str	r0, [sp, #68]	; 0x44
   54bf0:	ldr	r0, [sp, #68]	; 0x44
   54bf4:	movw	r1, #0
   54bf8:	cmp	r0, r1
   54bfc:	bne	54c04 <__assert_fail@plt+0x4204c>
   54c00:	b	54b24 <__assert_fail@plt+0x41f6c>
   54c04:	ldr	r0, [sp, #68]	; 0x44
   54c08:	add	r0, r0, #3
   54c0c:	str	r0, [sp, #64]	; 0x40
   54c10:	ldr	r0, [sp, #64]	; 0x40
   54c14:	bl	557e8 <__assert_fail@plt+0x42c30>
   54c18:	str	r0, [fp, #-60]	; 0xffffffc4
   54c1c:	ldr	r0, [fp, #-60]	; 0xffffffc4
   54c20:	movw	lr, #0
   54c24:	cmp	r0, lr
   54c28:	bne	54c30 <__assert_fail@plt+0x42078>
   54c2c:	b	54b24 <__assert_fail@plt+0x41f6c>
   54c30:	ldr	r0, [fp, #-60]	; 0xffffffc4
   54c34:	add	r0, r0, #1
   54c38:	str	r0, [sp, #60]	; 0x3c
   54c3c:	ldr	r0, [sp, #60]	; 0x3c
   54c40:	bl	557e8 <__assert_fail@plt+0x42c30>
   54c44:	movw	lr, #0
   54c48:	cmp	r0, lr
   54c4c:	bne	54c54 <__assert_fail@plt+0x4209c>
   54c50:	b	54b24 <__assert_fail@plt+0x41f6c>
   54c54:	ldr	r0, [sp, #60]	; 0x3c
   54c58:	bl	55830 <__assert_fail@plt+0x42c78>
   54c5c:	ldr	r0, [fp, #-64]	; 0xffffffc0
   54c60:	bl	55830 <__assert_fail@plt+0x42c78>
   54c64:	ldr	r0, [fp, #-56]	; 0xffffffc8
   54c68:	bl	55830 <__assert_fail@plt+0x42c78>
   54c6c:	ldr	r0, [sp, #64]	; 0x40
   54c70:	bl	55830 <__assert_fail@plt+0x42c78>
   54c74:	mov	r0, #32
   54c78:	bl	4c394 <__assert_fail@plt+0x397dc>
   54c7c:	str	r0, [fp, #-16]
   54c80:	ldr	r0, [sp, #60]	; 0x3c
   54c84:	bl	4f138 <__assert_fail@plt+0x3c580>
   54c88:	ldr	lr, [fp, #-16]
   54c8c:	str	r0, [lr]
   54c90:	ldr	r0, [fp, #-64]	; 0xffffffc0
   54c94:	bl	4f138 <__assert_fail@plt+0x3c580>
   54c98:	ldr	lr, [fp, #-16]
   54c9c:	str	r0, [lr, #4]
   54ca0:	ldr	r0, [fp, #-56]	; 0xffffffc8
   54ca4:	bl	4f138 <__assert_fail@plt+0x3c580>
   54ca8:	ldr	lr, [fp, #-16]
   54cac:	str	r0, [lr, #8]
   54cb0:	ldr	r0, [sp, #64]	; 0x40
   54cb4:	bl	4f138 <__assert_fail@plt+0x3c580>
   54cb8:	ldr	lr, [fp, #-16]
   54cbc:	str	r0, [lr, #12]
   54cc0:	ldr	r0, [fp, #-16]
   54cc4:	ldrb	lr, [r0, #24]
   54cc8:	orr	lr, lr, #4
   54ccc:	strb	lr, [r0, #24]
   54cd0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   54cd4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   54cd8:	bl	124ec <gnu_dev_makedev@plt>
   54cdc:	ldr	lr, [fp, #-16]
   54ce0:	str	r1, [lr, #20]
   54ce4:	str	r0, [lr, #16]
   54ce8:	ldr	r0, [fp, #-16]
   54cec:	ldr	r0, [r0, #12]
   54cf0:	movw	r1, #58591	; 0xe4df
   54cf4:	movt	r1, #7
   54cf8:	bl	124c8 <strcmp@plt>
   54cfc:	cmp	r0, #0
   54d00:	movw	r0, #1
   54d04:	str	r0, [sp, #36]	; 0x24
   54d08:	beq	54ef4 <__assert_fail@plt+0x4233c>
   54d0c:	ldr	r0, [fp, #-16]
   54d10:	ldr	r0, [r0, #12]
   54d14:	movw	r1, #58598	; 0xe4e6
   54d18:	movt	r1, #7
   54d1c:	bl	124c8 <strcmp@plt>
   54d20:	cmp	r0, #0
   54d24:	movw	r0, #1
   54d28:	str	r0, [sp, #36]	; 0x24
   54d2c:	beq	54ef4 <__assert_fail@plt+0x4233c>
   54d30:	ldr	r0, [fp, #-16]
   54d34:	ldr	r0, [r0, #12]
   54d38:	movw	r1, #58603	; 0xe4eb
   54d3c:	movt	r1, #7
   54d40:	bl	124c8 <strcmp@plt>
   54d44:	cmp	r0, #0
   54d48:	movw	r0, #1
   54d4c:	str	r0, [sp, #36]	; 0x24
   54d50:	beq	54ef4 <__assert_fail@plt+0x4233c>
   54d54:	ldr	r0, [fp, #-16]
   54d58:	ldr	r0, [r0, #12]
   54d5c:	movw	r1, #58609	; 0xe4f1
   54d60:	movt	r1, #7
   54d64:	bl	124c8 <strcmp@plt>
   54d68:	cmp	r0, #0
   54d6c:	movw	r0, #1
   54d70:	str	r0, [sp, #36]	; 0x24
   54d74:	beq	54ef4 <__assert_fail@plt+0x4233c>
   54d78:	ldr	r0, [fp, #-16]
   54d7c:	ldr	r0, [r0, #12]
   54d80:	movw	r1, #58617	; 0xe4f9
   54d84:	movt	r1, #7
   54d88:	bl	124c8 <strcmp@plt>
   54d8c:	cmp	r0, #0
   54d90:	movw	r0, #1
   54d94:	str	r0, [sp, #36]	; 0x24
   54d98:	beq	54ef4 <__assert_fail@plt+0x4233c>
   54d9c:	ldr	r0, [fp, #-16]
   54da0:	ldr	r0, [r0, #12]
   54da4:	movw	r1, #58624	; 0xe500
   54da8:	movt	r1, #7
   54dac:	bl	124c8 <strcmp@plt>
   54db0:	cmp	r0, #0
   54db4:	movw	r0, #1
   54db8:	str	r0, [sp, #36]	; 0x24
   54dbc:	beq	54ef4 <__assert_fail@plt+0x4233c>
   54dc0:	ldr	r0, [fp, #-16]
   54dc4:	ldr	r0, [r0, #12]
   54dc8:	movw	r1, #58632	; 0xe508
   54dcc:	movt	r1, #7
   54dd0:	bl	124c8 <strcmp@plt>
   54dd4:	cmp	r0, #0
   54dd8:	movw	r0, #1
   54ddc:	str	r0, [sp, #36]	; 0x24
   54de0:	beq	54ef4 <__assert_fail@plt+0x4233c>
   54de4:	ldr	r0, [fp, #-16]
   54de8:	ldr	r0, [r0, #12]
   54dec:	movw	r1, #58644	; 0xe514
   54df0:	movt	r1, #7
   54df4:	bl	124c8 <strcmp@plt>
   54df8:	cmp	r0, #0
   54dfc:	movw	r0, #1
   54e00:	str	r0, [sp, #36]	; 0x24
   54e04:	beq	54ef4 <__assert_fail@plt+0x4233c>
   54e08:	ldr	r0, [fp, #-16]
   54e0c:	ldr	r0, [r0, #12]
   54e10:	movw	r1, #58651	; 0xe51b
   54e14:	movt	r1, #7
   54e18:	bl	124c8 <strcmp@plt>
   54e1c:	cmp	r0, #0
   54e20:	movw	r0, #1
   54e24:	str	r0, [sp, #36]	; 0x24
   54e28:	beq	54ef4 <__assert_fail@plt+0x4233c>
   54e2c:	ldr	r0, [fp, #-16]
   54e30:	ldr	r0, [r0, #12]
   54e34:	movw	r1, #58662	; 0xe526
   54e38:	movt	r1, #7
   54e3c:	bl	124c8 <strcmp@plt>
   54e40:	cmp	r0, #0
   54e44:	movw	r0, #1
   54e48:	str	r0, [sp, #36]	; 0x24
   54e4c:	beq	54ef4 <__assert_fail@plt+0x4233c>
   54e50:	ldr	r0, [fp, #-16]
   54e54:	ldr	r0, [r0, #12]
   54e58:	movw	r1, #58668	; 0xe52c
   54e5c:	movt	r1, #7
   54e60:	bl	124c8 <strcmp@plt>
   54e64:	cmp	r0, #0
   54e68:	movw	r0, #1
   54e6c:	str	r0, [sp, #36]	; 0x24
   54e70:	beq	54ef4 <__assert_fail@plt+0x4233c>
   54e74:	ldr	r0, [fp, #-16]
   54e78:	ldr	r0, [r0, #12]
   54e7c:	movw	r1, #58674	; 0xe532
   54e80:	movt	r1, #7
   54e84:	bl	124c8 <strcmp@plt>
   54e88:	cmp	r0, #0
   54e8c:	movw	r0, #1
   54e90:	str	r0, [sp, #36]	; 0x24
   54e94:	beq	54ef4 <__assert_fail@plt+0x4233c>
   54e98:	ldr	r0, [fp, #-16]
   54e9c:	ldr	r0, [r0, #12]
   54ea0:	movw	r1, #42189	; 0xa4cd
   54ea4:	movt	r1, #7
   54ea8:	bl	124c8 <strcmp@plt>
   54eac:	cmp	r0, #0
   54eb0:	movw	r0, #1
   54eb4:	str	r0, [sp, #36]	; 0x24
   54eb8:	beq	54ef4 <__assert_fail@plt+0x4233c>
   54ebc:	ldr	r0, [fp, #-16]
   54ec0:	ldr	r0, [r0, #12]
   54ec4:	movw	r1, #46735	; 0xb68f
   54ec8:	movt	r1, #7
   54ecc:	bl	124c8 <strcmp@plt>
   54ed0:	cmp	r0, #0
   54ed4:	movw	r0, #0
   54ed8:	str	r0, [sp, #32]
   54edc:	bne	54eec <__assert_fail@plt+0x42334>
   54ee0:	movw	r0, #1
   54ee4:	str	r0, [sp, #32]
   54ee8:	b	54eec <__assert_fail@plt+0x42334>
   54eec:	ldr	r0, [sp, #32]
   54ef0:	str	r0, [sp, #36]	; 0x24
   54ef4:	ldr	r0, [sp, #36]	; 0x24
   54ef8:	and	r0, r0, #1
   54efc:	ldr	r1, [fp, #-16]
   54f00:	ldrb	r2, [r1, #24]
   54f04:	bic	r2, r2, #1
   54f08:	orr	r0, r2, r0
   54f0c:	strb	r0, [r1, #24]
   54f10:	ldr	r0, [fp, #-16]
   54f14:	ldr	r0, [r0]
   54f18:	movw	r1, #58	; 0x3a
   54f1c:	bl	12894 <strchr@plt>
   54f20:	movw	r1, #0
   54f24:	cmp	r0, r1
   54f28:	movw	r0, #1
   54f2c:	str	r0, [sp, #28]
   54f30:	bne	55130 <__assert_fail@plt+0x42578>
   54f34:	ldr	r0, [fp, #-16]
   54f38:	ldr	r0, [r0]
   54f3c:	ldrb	r0, [r0]
   54f40:	cmp	r0, #47	; 0x2f
   54f44:	bne	54fc8 <__assert_fail@plt+0x42410>
   54f48:	ldr	r0, [fp, #-16]
   54f4c:	ldr	r0, [r0]
   54f50:	ldrb	r0, [r0, #1]
   54f54:	cmp	r0, #47	; 0x2f
   54f58:	bne	54fc8 <__assert_fail@plt+0x42410>
   54f5c:	ldr	r0, [fp, #-16]
   54f60:	ldr	r0, [r0, #12]
   54f64:	movw	r1, #58681	; 0xe539
   54f68:	movt	r1, #7
   54f6c:	bl	124c8 <strcmp@plt>
   54f70:	cmp	r0, #0
   54f74:	movw	r0, #1
   54f78:	str	r0, [sp, #28]
   54f7c:	beq	55130 <__assert_fail@plt+0x42578>
   54f80:	ldr	r0, [fp, #-16]
   54f84:	ldr	r0, [r0, #12]
   54f88:	movw	r1, #58687	; 0xe53f
   54f8c:	movt	r1, #7
   54f90:	bl	124c8 <strcmp@plt>
   54f94:	cmp	r0, #0
   54f98:	movw	r0, #1
   54f9c:	str	r0, [sp, #28]
   54fa0:	beq	55130 <__assert_fail@plt+0x42578>
   54fa4:	ldr	r0, [fp, #-16]
   54fa8:	ldr	r0, [r0, #12]
   54fac:	movw	r1, #58692	; 0xe544
   54fb0:	movt	r1, #7
   54fb4:	bl	124c8 <strcmp@plt>
   54fb8:	cmp	r0, #0
   54fbc:	movw	r0, #1
   54fc0:	str	r0, [sp, #28]
   54fc4:	beq	55130 <__assert_fail@plt+0x42578>
   54fc8:	ldr	r0, [fp, #-16]
   54fcc:	ldr	r0, [r0, #12]
   54fd0:	movw	r1, #58697	; 0xe549
   54fd4:	movt	r1, #7
   54fd8:	bl	124c8 <strcmp@plt>
   54fdc:	cmp	r0, #0
   54fe0:	movw	r0, #1
   54fe4:	str	r0, [sp, #28]
   54fe8:	beq	55130 <__assert_fail@plt+0x42578>
   54fec:	ldr	r0, [fp, #-16]
   54ff0:	ldr	r0, [r0, #12]
   54ff4:	movw	r1, #42148	; 0xa4a4
   54ff8:	movt	r1, #7
   54ffc:	bl	124c8 <strcmp@plt>
   55000:	cmp	r0, #0
   55004:	movw	r0, #1
   55008:	str	r0, [sp, #28]
   5500c:	beq	55130 <__assert_fail@plt+0x42578>
   55010:	ldr	r0, [fp, #-16]
   55014:	ldr	r0, [r0, #12]
   55018:	movw	r1, #58702	; 0xe54e
   5501c:	movt	r1, #7
   55020:	bl	124c8 <strcmp@plt>
   55024:	cmp	r0, #0
   55028:	movw	r0, #1
   5502c:	str	r0, [sp, #28]
   55030:	beq	55130 <__assert_fail@plt+0x42578>
   55034:	ldr	r0, [fp, #-16]
   55038:	ldr	r0, [r0, #12]
   5503c:	movw	r1, #58707	; 0xe553
   55040:	movt	r1, #7
   55044:	bl	124c8 <strcmp@plt>
   55048:	cmp	r0, #0
   5504c:	movw	r0, #1
   55050:	str	r0, [sp, #28]
   55054:	beq	55130 <__assert_fail@plt+0x42578>
   55058:	ldr	r0, [fp, #-16]
   5505c:	ldr	r0, [r0, #12]
   55060:	movw	r1, #58718	; 0xe55e
   55064:	movt	r1, #7
   55068:	bl	124c8 <strcmp@plt>
   5506c:	cmp	r0, #0
   55070:	movw	r0, #1
   55074:	str	r0, [sp, #28]
   55078:	beq	55130 <__assert_fail@plt+0x42578>
   5507c:	ldr	r0, [fp, #-16]
   55080:	ldr	r0, [r0, #12]
   55084:	movw	r1, #58724	; 0xe564
   55088:	movt	r1, #7
   5508c:	bl	124c8 <strcmp@plt>
   55090:	cmp	r0, #0
   55094:	movw	r0, #1
   55098:	str	r0, [sp, #28]
   5509c:	beq	55130 <__assert_fail@plt+0x42578>
   550a0:	ldr	r0, [fp, #-16]
   550a4:	ldr	r0, [r0, #12]
   550a8:	movw	r1, #58729	; 0xe569
   550ac:	movt	r1, #7
   550b0:	bl	124c8 <strcmp@plt>
   550b4:	cmp	r0, #0
   550b8:	movw	r0, #1
   550bc:	str	r0, [sp, #28]
   550c0:	beq	55130 <__assert_fail@plt+0x42578>
   550c4:	ldr	r0, [fp, #-16]
   550c8:	ldr	r0, [r0, #12]
   550cc:	movw	r1, #58735	; 0xe56f
   550d0:	movt	r1, #7
   550d4:	bl	124c8 <strcmp@plt>
   550d8:	cmp	r0, #0
   550dc:	movw	r0, #1
   550e0:	str	r0, [sp, #28]
   550e4:	beq	55130 <__assert_fail@plt+0x42578>
   550e8:	ldr	r0, [fp, #-16]
   550ec:	ldr	r0, [r0, #12]
   550f0:	movw	r1, #58741	; 0xe575
   550f4:	movt	r1, #7
   550f8:	bl	124c8 <strcmp@plt>
   550fc:	cmp	r0, #0
   55100:	movw	r0, #1
   55104:	str	r0, [sp, #28]
   55108:	beq	55130 <__assert_fail@plt+0x42578>
   5510c:	ldr	r0, [fp, #-16]
   55110:	ldr	r1, [r0]
   55114:	movw	r0, #58746	; 0xe57a
   55118:	movt	r0, #7
   5511c:	bl	124c8 <strcmp@plt>
   55120:	cmp	r0, #0
   55124:	movw	r0, #0
   55128:	moveq	r0, #1
   5512c:	str	r0, [sp, #28]
   55130:	ldr	r0, [sp, #28]
   55134:	ldr	r1, [fp, #-16]
   55138:	and	r0, r0, #1
   5513c:	ldrb	r2, [r1, #24]
   55140:	lsl	r0, r0, #1
   55144:	bic	r2, r2, #2
   55148:	orr	r0, r2, r0
   5514c:	strb	r0, [r1, #24]
   55150:	ldr	r0, [fp, #-16]
   55154:	ldr	r1, [fp, #-20]	; 0xffffffec
   55158:	str	r0, [r1]
   5515c:	ldr	r0, [fp, #-16]
   55160:	add	r0, r0, #28
   55164:	str	r0, [fp, #-20]	; 0xffffffec
   55168:	b	54b24 <__assert_fail@plt+0x41f6c>
   5516c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   55170:	bl	50c68 <__assert_fail@plt+0x3e0b0>
   55174:	ldr	r0, [fp, #-24]	; 0xffffffe8
   55178:	bl	1275c <ferror_unlocked@plt>
   5517c:	cmp	r0, #0
   55180:	beq	551b4 <__assert_fail@plt+0x425fc>
   55184:	bl	128d0 <__errno_location@plt>
   55188:	ldr	r0, [r0]
   5518c:	str	r0, [sp, #56]	; 0x38
   55190:	ldr	r0, [fp, #-24]	; 0xffffffe8
   55194:	bl	12990 <fclose@plt>
   55198:	ldr	lr, [sp, #56]	; 0x38
   5519c:	str	r0, [sp, #24]
   551a0:	str	lr, [sp, #20]
   551a4:	bl	128d0 <__errno_location@plt>
   551a8:	ldr	lr, [sp, #20]
   551ac:	str	lr, [r0]
   551b0:	b	55778 <__assert_fail@plt+0x42bc0>
   551b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   551b8:	bl	12990 <fclose@plt>
   551bc:	cmn	r0, #1
   551c0:	bne	551c8 <__assert_fail@plt+0x42610>
   551c4:	b	55778 <__assert_fail@plt+0x42bc0>
   551c8:	b	55760 <__assert_fail@plt+0x42ba8>
   551cc:	movw	r0, #58753	; 0xe581
   551d0:	movt	r0, #7
   551d4:	str	r0, [sp, #48]	; 0x30
   551d8:	ldr	r0, [sp, #48]	; 0x30
   551dc:	movw	r1, #49580	; 0xc1ac
   551e0:	movt	r1, #7
   551e4:	bl	12ae0 <setmntent@plt>
   551e8:	str	r0, [fp, #-24]	; 0xffffffe8
   551ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   551f0:	movw	r1, #0
   551f4:	cmp	r0, r1
   551f8:	bne	55208 <__assert_fail@plt+0x42650>
   551fc:	movw	r0, #0
   55200:	str	r0, [fp, #-4]
   55204:	b	557dc <__assert_fail@plt+0x42c24>
   55208:	b	5520c <__assert_fail@plt+0x42654>
   5520c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   55210:	bl	1278c <getmntent@plt>
   55214:	str	r0, [sp, #52]	; 0x34
   55218:	movw	lr, #0
   5521c:	cmp	r0, lr
   55220:	beq	55748 <__assert_fail@plt+0x42b90>
   55224:	ldr	r0, [sp, #52]	; 0x34
   55228:	movw	r1, #58763	; 0xe58b
   5522c:	movt	r1, #7
   55230:	bl	1272c <hasmntopt@plt>
   55234:	cmp	r0, #0
   55238:	movwne	r0, #1
   5523c:	strb	r0, [sp, #47]	; 0x2f
   55240:	mov	r0, #32
   55244:	bl	4c394 <__assert_fail@plt+0x397dc>
   55248:	str	r0, [fp, #-16]
   5524c:	ldr	r0, [sp, #52]	; 0x34
   55250:	ldr	r0, [r0]
   55254:	bl	4f138 <__assert_fail@plt+0x3c580>
   55258:	ldr	r1, [fp, #-16]
   5525c:	str	r0, [r1]
   55260:	ldr	r0, [sp, #52]	; 0x34
   55264:	ldr	r0, [r0, #4]
   55268:	bl	4f138 <__assert_fail@plt+0x3c580>
   5526c:	ldr	r1, [fp, #-16]
   55270:	str	r0, [r1, #4]
   55274:	ldr	r0, [fp, #-16]
   55278:	mov	r1, #0
   5527c:	str	r1, [r0, #8]
   55280:	ldr	r0, [sp, #52]	; 0x34
   55284:	ldr	r0, [r0, #8]
   55288:	bl	4f138 <__assert_fail@plt+0x3c580>
   5528c:	ldr	r1, [fp, #-16]
   55290:	str	r0, [r1, #12]
   55294:	ldr	r0, [fp, #-16]
   55298:	ldrb	r1, [r0, #24]
   5529c:	bic	r1, r1, #4
   552a0:	movw	lr, #4
   552a4:	orr	r1, r1, lr
   552a8:	strb	r1, [r0, #24]
   552ac:	ldr	r0, [fp, #-16]
   552b0:	ldr	r0, [r0, #12]
   552b4:	movw	r1, #58591	; 0xe4df
   552b8:	movt	r1, #7
   552bc:	bl	124c8 <strcmp@plt>
   552c0:	cmp	r0, #0
   552c4:	movw	r0, #1
   552c8:	str	r0, [sp, #16]
   552cc:	beq	554bc <__assert_fail@plt+0x42904>
   552d0:	ldr	r0, [fp, #-16]
   552d4:	ldr	r0, [r0, #12]
   552d8:	movw	r1, #58598	; 0xe4e6
   552dc:	movt	r1, #7
   552e0:	bl	124c8 <strcmp@plt>
   552e4:	cmp	r0, #0
   552e8:	movw	r0, #1
   552ec:	str	r0, [sp, #16]
   552f0:	beq	554bc <__assert_fail@plt+0x42904>
   552f4:	ldr	r0, [fp, #-16]
   552f8:	ldr	r0, [r0, #12]
   552fc:	movw	r1, #58603	; 0xe4eb
   55300:	movt	r1, #7
   55304:	bl	124c8 <strcmp@plt>
   55308:	cmp	r0, #0
   5530c:	movw	r0, #1
   55310:	str	r0, [sp, #16]
   55314:	beq	554bc <__assert_fail@plt+0x42904>
   55318:	ldr	r0, [fp, #-16]
   5531c:	ldr	r0, [r0, #12]
   55320:	movw	r1, #58609	; 0xe4f1
   55324:	movt	r1, #7
   55328:	bl	124c8 <strcmp@plt>
   5532c:	cmp	r0, #0
   55330:	movw	r0, #1
   55334:	str	r0, [sp, #16]
   55338:	beq	554bc <__assert_fail@plt+0x42904>
   5533c:	ldr	r0, [fp, #-16]
   55340:	ldr	r0, [r0, #12]
   55344:	movw	r1, #58617	; 0xe4f9
   55348:	movt	r1, #7
   5534c:	bl	124c8 <strcmp@plt>
   55350:	cmp	r0, #0
   55354:	movw	r0, #1
   55358:	str	r0, [sp, #16]
   5535c:	beq	554bc <__assert_fail@plt+0x42904>
   55360:	ldr	r0, [fp, #-16]
   55364:	ldr	r0, [r0, #12]
   55368:	movw	r1, #58624	; 0xe500
   5536c:	movt	r1, #7
   55370:	bl	124c8 <strcmp@plt>
   55374:	cmp	r0, #0
   55378:	movw	r0, #1
   5537c:	str	r0, [sp, #16]
   55380:	beq	554bc <__assert_fail@plt+0x42904>
   55384:	ldr	r0, [fp, #-16]
   55388:	ldr	r0, [r0, #12]
   5538c:	movw	r1, #58632	; 0xe508
   55390:	movt	r1, #7
   55394:	bl	124c8 <strcmp@plt>
   55398:	cmp	r0, #0
   5539c:	movw	r0, #1
   553a0:	str	r0, [sp, #16]
   553a4:	beq	554bc <__assert_fail@plt+0x42904>
   553a8:	ldr	r0, [fp, #-16]
   553ac:	ldr	r0, [r0, #12]
   553b0:	movw	r1, #58644	; 0xe514
   553b4:	movt	r1, #7
   553b8:	bl	124c8 <strcmp@plt>
   553bc:	cmp	r0, #0
   553c0:	movw	r0, #1
   553c4:	str	r0, [sp, #16]
   553c8:	beq	554bc <__assert_fail@plt+0x42904>
   553cc:	ldr	r0, [fp, #-16]
   553d0:	ldr	r0, [r0, #12]
   553d4:	movw	r1, #58651	; 0xe51b
   553d8:	movt	r1, #7
   553dc:	bl	124c8 <strcmp@plt>
   553e0:	cmp	r0, #0
   553e4:	movw	r0, #1
   553e8:	str	r0, [sp, #16]
   553ec:	beq	554bc <__assert_fail@plt+0x42904>
   553f0:	ldr	r0, [fp, #-16]
   553f4:	ldr	r0, [r0, #12]
   553f8:	movw	r1, #58662	; 0xe526
   553fc:	movt	r1, #7
   55400:	bl	124c8 <strcmp@plt>
   55404:	cmp	r0, #0
   55408:	movw	r0, #1
   5540c:	str	r0, [sp, #16]
   55410:	beq	554bc <__assert_fail@plt+0x42904>
   55414:	ldr	r0, [fp, #-16]
   55418:	ldr	r0, [r0, #12]
   5541c:	movw	r1, #58668	; 0xe52c
   55420:	movt	r1, #7
   55424:	bl	124c8 <strcmp@plt>
   55428:	cmp	r0, #0
   5542c:	movw	r0, #1
   55430:	str	r0, [sp, #16]
   55434:	beq	554bc <__assert_fail@plt+0x42904>
   55438:	ldr	r0, [fp, #-16]
   5543c:	ldr	r0, [r0, #12]
   55440:	movw	r1, #58674	; 0xe532
   55444:	movt	r1, #7
   55448:	bl	124c8 <strcmp@plt>
   5544c:	cmp	r0, #0
   55450:	movw	r0, #1
   55454:	str	r0, [sp, #16]
   55458:	beq	554bc <__assert_fail@plt+0x42904>
   5545c:	ldr	r0, [fp, #-16]
   55460:	ldr	r0, [r0, #12]
   55464:	movw	r1, #42189	; 0xa4cd
   55468:	movt	r1, #7
   5546c:	bl	124c8 <strcmp@plt>
   55470:	cmp	r0, #0
   55474:	movw	r0, #1
   55478:	str	r0, [sp, #16]
   5547c:	beq	554bc <__assert_fail@plt+0x42904>
   55480:	ldr	r0, [fp, #-16]
   55484:	ldr	r0, [r0, #12]
   55488:	movw	r1, #46735	; 0xb68f
   5548c:	movt	r1, #7
   55490:	bl	124c8 <strcmp@plt>
   55494:	cmp	r0, #0
   55498:	movw	r0, #0
   5549c:	str	r0, [sp, #12]
   554a0:	bne	554b4 <__assert_fail@plt+0x428fc>
   554a4:	ldrb	r0, [sp, #47]	; 0x2f
   554a8:	mvn	r1, #0
   554ac:	eor	r0, r0, r1
   554b0:	str	r0, [sp, #12]
   554b4:	ldr	r0, [sp, #12]
   554b8:	str	r0, [sp, #16]
   554bc:	ldr	r0, [sp, #16]
   554c0:	and	r0, r0, #1
   554c4:	ldr	r1, [fp, #-16]
   554c8:	ldrb	r2, [r1, #24]
   554cc:	bic	r2, r2, #1
   554d0:	orr	r0, r2, r0
   554d4:	strb	r0, [r1, #24]
   554d8:	ldr	r0, [fp, #-16]
   554dc:	ldr	r0, [r0]
   554e0:	movw	r1, #58	; 0x3a
   554e4:	bl	12894 <strchr@plt>
   554e8:	movw	r1, #0
   554ec:	cmp	r0, r1
   554f0:	movw	r0, #1
   554f4:	str	r0, [sp, #8]
   554f8:	bne	556f8 <__assert_fail@plt+0x42b40>
   554fc:	ldr	r0, [fp, #-16]
   55500:	ldr	r0, [r0]
   55504:	ldrb	r0, [r0]
   55508:	cmp	r0, #47	; 0x2f
   5550c:	bne	55590 <__assert_fail@plt+0x429d8>
   55510:	ldr	r0, [fp, #-16]
   55514:	ldr	r0, [r0]
   55518:	ldrb	r0, [r0, #1]
   5551c:	cmp	r0, #47	; 0x2f
   55520:	bne	55590 <__assert_fail@plt+0x429d8>
   55524:	ldr	r0, [fp, #-16]
   55528:	ldr	r0, [r0, #12]
   5552c:	movw	r1, #58681	; 0xe539
   55530:	movt	r1, #7
   55534:	bl	124c8 <strcmp@plt>
   55538:	cmp	r0, #0
   5553c:	movw	r0, #1
   55540:	str	r0, [sp, #8]
   55544:	beq	556f8 <__assert_fail@plt+0x42b40>
   55548:	ldr	r0, [fp, #-16]
   5554c:	ldr	r0, [r0, #12]
   55550:	movw	r1, #58687	; 0xe53f
   55554:	movt	r1, #7
   55558:	bl	124c8 <strcmp@plt>
   5555c:	cmp	r0, #0
   55560:	movw	r0, #1
   55564:	str	r0, [sp, #8]
   55568:	beq	556f8 <__assert_fail@plt+0x42b40>
   5556c:	ldr	r0, [fp, #-16]
   55570:	ldr	r0, [r0, #12]
   55574:	movw	r1, #58692	; 0xe544
   55578:	movt	r1, #7
   5557c:	bl	124c8 <strcmp@plt>
   55580:	cmp	r0, #0
   55584:	movw	r0, #1
   55588:	str	r0, [sp, #8]
   5558c:	beq	556f8 <__assert_fail@plt+0x42b40>
   55590:	ldr	r0, [fp, #-16]
   55594:	ldr	r0, [r0, #12]
   55598:	movw	r1, #58697	; 0xe549
   5559c:	movt	r1, #7
   555a0:	bl	124c8 <strcmp@plt>
   555a4:	cmp	r0, #0
   555a8:	movw	r0, #1
   555ac:	str	r0, [sp, #8]
   555b0:	beq	556f8 <__assert_fail@plt+0x42b40>
   555b4:	ldr	r0, [fp, #-16]
   555b8:	ldr	r0, [r0, #12]
   555bc:	movw	r1, #42148	; 0xa4a4
   555c0:	movt	r1, #7
   555c4:	bl	124c8 <strcmp@plt>
   555c8:	cmp	r0, #0
   555cc:	movw	r0, #1
   555d0:	str	r0, [sp, #8]
   555d4:	beq	556f8 <__assert_fail@plt+0x42b40>
   555d8:	ldr	r0, [fp, #-16]
   555dc:	ldr	r0, [r0, #12]
   555e0:	movw	r1, #58702	; 0xe54e
   555e4:	movt	r1, #7
   555e8:	bl	124c8 <strcmp@plt>
   555ec:	cmp	r0, #0
   555f0:	movw	r0, #1
   555f4:	str	r0, [sp, #8]
   555f8:	beq	556f8 <__assert_fail@plt+0x42b40>
   555fc:	ldr	r0, [fp, #-16]
   55600:	ldr	r0, [r0, #12]
   55604:	movw	r1, #58707	; 0xe553
   55608:	movt	r1, #7
   5560c:	bl	124c8 <strcmp@plt>
   55610:	cmp	r0, #0
   55614:	movw	r0, #1
   55618:	str	r0, [sp, #8]
   5561c:	beq	556f8 <__assert_fail@plt+0x42b40>
   55620:	ldr	r0, [fp, #-16]
   55624:	ldr	r0, [r0, #12]
   55628:	movw	r1, #58718	; 0xe55e
   5562c:	movt	r1, #7
   55630:	bl	124c8 <strcmp@plt>
   55634:	cmp	r0, #0
   55638:	movw	r0, #1
   5563c:	str	r0, [sp, #8]
   55640:	beq	556f8 <__assert_fail@plt+0x42b40>
   55644:	ldr	r0, [fp, #-16]
   55648:	ldr	r0, [r0, #12]
   5564c:	movw	r1, #58724	; 0xe564
   55650:	movt	r1, #7
   55654:	bl	124c8 <strcmp@plt>
   55658:	cmp	r0, #0
   5565c:	movw	r0, #1
   55660:	str	r0, [sp, #8]
   55664:	beq	556f8 <__assert_fail@plt+0x42b40>
   55668:	ldr	r0, [fp, #-16]
   5566c:	ldr	r0, [r0, #12]
   55670:	movw	r1, #58729	; 0xe569
   55674:	movt	r1, #7
   55678:	bl	124c8 <strcmp@plt>
   5567c:	cmp	r0, #0
   55680:	movw	r0, #1
   55684:	str	r0, [sp, #8]
   55688:	beq	556f8 <__assert_fail@plt+0x42b40>
   5568c:	ldr	r0, [fp, #-16]
   55690:	ldr	r0, [r0, #12]
   55694:	movw	r1, #58735	; 0xe56f
   55698:	movt	r1, #7
   5569c:	bl	124c8 <strcmp@plt>
   556a0:	cmp	r0, #0
   556a4:	movw	r0, #1
   556a8:	str	r0, [sp, #8]
   556ac:	beq	556f8 <__assert_fail@plt+0x42b40>
   556b0:	ldr	r0, [fp, #-16]
   556b4:	ldr	r0, [r0, #12]
   556b8:	movw	r1, #58741	; 0xe575
   556bc:	movt	r1, #7
   556c0:	bl	124c8 <strcmp@plt>
   556c4:	cmp	r0, #0
   556c8:	movw	r0, #1
   556cc:	str	r0, [sp, #8]
   556d0:	beq	556f8 <__assert_fail@plt+0x42b40>
   556d4:	ldr	r0, [fp, #-16]
   556d8:	ldr	r1, [r0]
   556dc:	movw	r0, #58746	; 0xe57a
   556e0:	movt	r0, #7
   556e4:	bl	124c8 <strcmp@plt>
   556e8:	cmp	r0, #0
   556ec:	movw	r0, #0
   556f0:	moveq	r0, #1
   556f4:	str	r0, [sp, #8]
   556f8:	ldr	r0, [sp, #8]
   556fc:	ldr	r1, [fp, #-16]
   55700:	and	r0, r0, #1
   55704:	ldrb	r2, [r1, #24]
   55708:	and	r2, r2, #253	; 0xfd
   5570c:	orr	r0, r2, r0, lsl #1
   55710:	strb	r0, [r1, #24]
   55714:	ldr	r0, [sp, #52]	; 0x34
   55718:	ldr	r0, [r0, #12]
   5571c:	bl	55a00 <__assert_fail@plt+0x42e48>
   55720:	ldr	r2, [fp, #-16]
   55724:	str	r1, [r2, #20]
   55728:	str	r0, [r2, #16]
   5572c:	ldr	r0, [fp, #-16]
   55730:	ldr	r1, [fp, #-20]	; 0xffffffec
   55734:	str	r0, [r1]
   55738:	ldr	r0, [fp, #-16]
   5573c:	add	r0, r0, #28
   55740:	str	r0, [fp, #-20]	; 0xffffffec
   55744:	b	5520c <__assert_fail@plt+0x42654>
   55748:	ldr	r0, [fp, #-24]	; 0xffffffe8
   5574c:	bl	129c0 <endmntent@plt>
   55750:	cmp	r0, #0
   55754:	bne	5575c <__assert_fail@plt+0x42ba4>
   55758:	b	55778 <__assert_fail@plt+0x42bc0>
   5575c:	b	55760 <__assert_fail@plt+0x42ba8>
   55760:	ldr	r0, [fp, #-20]	; 0xffffffec
   55764:	movw	r1, #0
   55768:	str	r1, [r0]
   5576c:	ldr	r0, [fp, #-12]
   55770:	str	r0, [fp, #-4]
   55774:	b	557dc <__assert_fail@plt+0x42c24>
   55778:	bl	128d0 <__errno_location@plt>
   5577c:	ldr	r0, [r0]
   55780:	str	r0, [sp, #40]	; 0x28
   55784:	ldr	r0, [fp, #-20]	; 0xffffffec
   55788:	movw	lr, #0
   5578c:	str	lr, [r0]
   55790:	ldr	r0, [fp, #-12]
   55794:	movw	r1, #0
   55798:	cmp	r0, r1
   5579c:	beq	557c0 <__assert_fail@plt+0x42c08>
   557a0:	ldr	r0, [fp, #-12]
   557a4:	ldr	r0, [r0, #28]
   557a8:	str	r0, [fp, #-16]
   557ac:	ldr	r0, [fp, #-12]
   557b0:	bl	55a1c <__assert_fail@plt+0x42e64>
   557b4:	ldr	r0, [fp, #-16]
   557b8:	str	r0, [fp, #-12]
   557bc:	b	55790 <__assert_fail@plt+0x42bd8>
   557c0:	ldr	r0, [sp, #40]	; 0x28
   557c4:	str	r0, [sp, #4]
   557c8:	bl	128d0 <__errno_location@plt>
   557cc:	ldr	lr, [sp, #4]
   557d0:	str	lr, [r0]
   557d4:	movw	r0, #0
   557d8:	str	r0, [fp, #-4]
   557dc:	ldr	r0, [fp, #-4]
   557e0:	mov	sp, fp
   557e4:	pop	{fp, pc}
   557e8:	push	{fp, lr}
   557ec:	mov	fp, sp
   557f0:	sub	sp, sp, #8
   557f4:	str	r0, [sp, #4]
   557f8:	ldr	r0, [sp, #4]
   557fc:	movw	r1, #32
   55800:	bl	12894 <strchr@plt>
   55804:	str	r0, [sp]
   55808:	ldr	r0, [sp]
   5580c:	movw	r1, #0
   55810:	cmp	r0, r1
   55814:	beq	55824 <__assert_fail@plt+0x42c6c>
   55818:	ldr	r0, [sp]
   5581c:	movw	r1, #0
   55820:	strb	r1, [r0]
   55824:	ldr	r0, [sp]
   55828:	mov	sp, fp
   5582c:	pop	{fp, pc}
   55830:	push	{fp, lr}
   55834:	mov	fp, sp
   55838:	sub	sp, sp, #24
   5583c:	str	r0, [fp, #-4]
   55840:	movw	r0, #0
   55844:	str	r0, [sp, #12]
   55848:	ldr	r1, [fp, #-4]
   5584c:	str	r0, [sp, #4]
   55850:	mov	r0, r1
   55854:	bl	12888 <strlen@plt>
   55858:	add	r0, r0, #1
   5585c:	str	r0, [sp, #8]
   55860:	ldr	r0, [sp, #4]
   55864:	str	r0, [fp, #-8]
   55868:	ldr	r0, [fp, #-8]
   5586c:	ldr	r1, [sp, #8]
   55870:	cmp	r0, r1
   55874:	bcs	559f8 <__assert_fail@plt+0x42e40>
   55878:	ldr	r0, [fp, #-4]
   5587c:	ldr	r1, [fp, #-8]
   55880:	add	r0, r0, r1
   55884:	ldrb	r0, [r0]
   55888:	cmp	r0, #92	; 0x5c
   5588c:	bne	559bc <__assert_fail@plt+0x42e04>
   55890:	ldr	r0, [fp, #-8]
   55894:	add	r0, r0, #4
   55898:	ldr	r1, [sp, #8]
   5589c:	cmp	r0, r1
   558a0:	bcs	559bc <__assert_fail@plt+0x42e04>
   558a4:	ldr	r0, [fp, #-4]
   558a8:	ldr	r1, [fp, #-8]
   558ac:	add	r1, r1, #1
   558b0:	add	r0, r0, r1
   558b4:	ldrb	r0, [r0]
   558b8:	cmp	r0, #48	; 0x30
   558bc:	blt	559bc <__assert_fail@plt+0x42e04>
   558c0:	ldr	r0, [fp, #-4]
   558c4:	ldr	r1, [fp, #-8]
   558c8:	add	r1, r1, #1
   558cc:	add	r0, r0, r1
   558d0:	ldrb	r0, [r0]
   558d4:	cmp	r0, #51	; 0x33
   558d8:	bgt	559bc <__assert_fail@plt+0x42e04>
   558dc:	ldr	r0, [fp, #-4]
   558e0:	ldr	r1, [fp, #-8]
   558e4:	add	r1, r1, #2
   558e8:	add	r0, r0, r1
   558ec:	ldrb	r0, [r0]
   558f0:	cmp	r0, #48	; 0x30
   558f4:	blt	559bc <__assert_fail@plt+0x42e04>
   558f8:	ldr	r0, [fp, #-4]
   558fc:	ldr	r1, [fp, #-8]
   55900:	add	r1, r1, #2
   55904:	add	r0, r0, r1
   55908:	ldrb	r0, [r0]
   5590c:	cmp	r0, #55	; 0x37
   55910:	bgt	559bc <__assert_fail@plt+0x42e04>
   55914:	ldr	r0, [fp, #-4]
   55918:	ldr	r1, [fp, #-8]
   5591c:	add	r1, r1, #3
   55920:	add	r0, r0, r1
   55924:	ldrb	r0, [r0]
   55928:	cmp	r0, #48	; 0x30
   5592c:	blt	559bc <__assert_fail@plt+0x42e04>
   55930:	ldr	r0, [fp, #-4]
   55934:	ldr	r1, [fp, #-8]
   55938:	add	r1, r1, #3
   5593c:	add	r0, r0, r1
   55940:	ldrb	r0, [r0]
   55944:	cmp	r0, #55	; 0x37
   55948:	bgt	559bc <__assert_fail@plt+0x42e04>
   5594c:	ldr	r0, [fp, #-4]
   55950:	ldr	r1, [fp, #-8]
   55954:	add	r0, r0, r1
   55958:	ldrb	r1, [r0, #1]
   5595c:	ldrb	r0, [r0, #2]
   55960:	movw	r2, #62464	; 0xf400
   55964:	movt	r2, #65535	; 0xffff
   55968:	add	r1, r2, r1, lsl #6
   5596c:	sub	r0, r0, #48	; 0x30
   55970:	lsl	r0, r0, #3
   55974:	add	r0, r1, r0
   55978:	ldr	r1, [fp, #-4]
   5597c:	ldr	r2, [fp, #-8]
   55980:	add	r2, r2, #3
   55984:	add	r1, r1, r2
   55988:	ldrb	r1, [r1]
   5598c:	sub	r1, r1, #48	; 0x30
   55990:	add	r0, r0, r1
   55994:	ldr	r1, [fp, #-4]
   55998:	ldr	r2, [sp, #12]
   5599c:	add	r3, r2, #1
   559a0:	str	r3, [sp, #12]
   559a4:	add	r1, r1, r2
   559a8:	strb	r0, [r1]
   559ac:	ldr	r0, [fp, #-8]
   559b0:	add	r0, r0, #3
   559b4:	str	r0, [fp, #-8]
   559b8:	b	559e4 <__assert_fail@plt+0x42e2c>
   559bc:	ldr	r0, [fp, #-4]
   559c0:	ldr	r1, [fp, #-8]
   559c4:	add	r0, r0, r1
   559c8:	ldrb	r0, [r0]
   559cc:	ldr	r1, [fp, #-4]
   559d0:	ldr	r2, [sp, #12]
   559d4:	add	r3, r2, #1
   559d8:	str	r3, [sp, #12]
   559dc:	add	r1, r1, r2
   559e0:	strb	r0, [r1]
   559e4:	b	559e8 <__assert_fail@plt+0x42e30>
   559e8:	ldr	r0, [fp, #-8]
   559ec:	add	r0, r0, #1
   559f0:	str	r0, [fp, #-8]
   559f4:	b	55868 <__assert_fail@plt+0x42cb0>
   559f8:	mov	sp, fp
   559fc:	pop	{fp, pc}
   55a00:	sub	sp, sp, #8
   55a04:	str	r0, [sp, #4]
   55a08:	mvn	r0, #0
   55a0c:	str	r0, [sp]
   55a10:	ldr	r1, [sp]
   55a14:	add	sp, sp, #8
   55a18:	bx	lr
   55a1c:	push	{fp, lr}
   55a20:	mov	fp, sp
   55a24:	sub	sp, sp, #8
   55a28:	str	r0, [sp, #4]
   55a2c:	ldr	r0, [sp, #4]
   55a30:	ldr	r0, [r0]
   55a34:	bl	50c68 <__assert_fail@plt+0x3e0b0>
   55a38:	ldr	r0, [sp, #4]
   55a3c:	ldr	r0, [r0, #4]
   55a40:	bl	50c68 <__assert_fail@plt+0x3e0b0>
   55a44:	ldr	r0, [sp, #4]
   55a48:	ldr	r0, [r0, #8]
   55a4c:	bl	50c68 <__assert_fail@plt+0x3e0b0>
   55a50:	ldr	r0, [sp, #4]
   55a54:	ldrb	r0, [r0, #24]
   55a58:	ubfx	r0, r0, #2, #1
   55a5c:	and	r0, r0, #255	; 0xff
   55a60:	cmp	r0, #0
   55a64:	beq	55a74 <__assert_fail@plt+0x42ebc>
   55a68:	ldr	r0, [sp, #4]
   55a6c:	ldr	r0, [r0, #12]
   55a70:	bl	50c68 <__assert_fail@plt+0x3e0b0>
   55a74:	ldr	r0, [sp, #4]
   55a78:	bl	50c68 <__assert_fail@plt+0x3e0b0>
   55a7c:	mov	sp, fp
   55a80:	pop	{fp, pc}
   55a84:	push	{fp, lr}
   55a88:	mov	fp, sp
   55a8c:	sub	sp, sp, #16
   55a90:	str	r0, [sp, #8]
   55a94:	str	r1, [sp, #4]
   55a98:	ldr	r0, [sp, #8]
   55a9c:	movw	r1, #0
   55aa0:	cmp	r0, r1
   55aa4:	bne	55ab8 <__assert_fail@plt+0x42f00>
   55aa8:	ldr	r0, [sp, #4]
   55aac:	bl	549ac <__assert_fail@plt+0x41df4>
   55ab0:	str	r0, [fp, #-4]
   55ab4:	b	55b18 <__assert_fail@plt+0x42f60>
   55ab8:	ldr	r0, [sp, #4]
   55abc:	cmp	r0, #0
   55ac0:	bne	55ad8 <__assert_fail@plt+0x42f20>
   55ac4:	ldr	r0, [sp, #8]
   55ac8:	bl	50c68 <__assert_fail@plt+0x3e0b0>
   55acc:	movw	r0, #0
   55ad0:	str	r0, [fp, #-4]
   55ad4:	b	55b18 <__assert_fail@plt+0x42f60>
   55ad8:	ldr	r0, [pc, #68]	; 55b24 <__assert_fail@plt+0x42f6c>
   55adc:	ldr	r1, [sp, #4]
   55ae0:	cmp	r0, r1
   55ae4:	bcs	55b00 <__assert_fail@plt+0x42f48>
   55ae8:	bl	128d0 <__errno_location@plt>
   55aec:	movw	lr, #12
   55af0:	str	lr, [r0]
   55af4:	movw	r0, #0
   55af8:	str	r0, [fp, #-4]
   55afc:	b	55b18 <__assert_fail@plt+0x42f60>
   55b00:	ldr	r0, [sp, #8]
   55b04:	ldr	r1, [sp, #4]
   55b08:	bl	1266c <realloc@plt>
   55b0c:	str	r0, [sp]
   55b10:	ldr	r0, [sp]
   55b14:	str	r0, [fp, #-4]
   55b18:	ldr	r0, [fp, #-4]
   55b1c:	mov	sp, fp
   55b20:	pop	{fp, pc}
   55b24:	svcvc	0x00ffffff
   55b28:	push	{fp, lr}
   55b2c:	mov	fp, sp
   55b30:	sub	sp, sp, #176	; 0xb0
   55b34:	str	r0, [fp, #-8]
   55b38:	str	r1, [fp, #-12]
   55b3c:	str	r2, [fp, #-16]
   55b40:	b	55ef8 <__assert_fail@plt+0x43340>
   55b44:	b	55d18 <__assert_fail@plt+0x43160>
   55b48:	ldr	r0, [fp, #-16]
   55b4c:	cmp	r0, #0
   55b50:	bcs	55c54 <__assert_fail@plt+0x4309c>
   55b54:	ldr	r0, [fp, #-12]
   55b58:	cmp	r0, #0
   55b5c:	bcs	55be4 <__assert_fail@plt+0x4302c>
   55b60:	b	55b80 <__assert_fail@plt+0x42fc8>
   55b64:	ldr	r0, [fp, #-12]
   55b68:	ldr	r1, [fp, #-16]
   55b6c:	movw	r2, #127	; 0x7f
   55b70:	udiv	r1, r2, r1
   55b74:	cmp	r0, r1
   55b78:	bcc	55ce8 <__assert_fail@plt+0x43130>
   55b7c:	b	55d00 <__assert_fail@plt+0x43148>
   55b80:	b	55b94 <__assert_fail@plt+0x42fdc>
   55b84:	ldr	r0, [fp, #-16]
   55b88:	cmp	r0, #1
   55b8c:	bcc	55ba4 <__assert_fail@plt+0x42fec>
   55b90:	b	55bb0 <__assert_fail@plt+0x42ff8>
   55b94:	ldr	r0, [fp, #-16]
   55b98:	movw	r1, #0
   55b9c:	cmp	r1, r0
   55ba0:	bcs	55bb0 <__assert_fail@plt+0x42ff8>
   55ba4:	movw	r0, #0
   55ba8:	str	r0, [fp, #-24]	; 0xffffffe8
   55bac:	b	55bc8 <__assert_fail@plt+0x43010>
   55bb0:	ldr	r0, [fp, #-16]
   55bb4:	movw	r1, #0
   55bb8:	sub	r0, r1, r0
   55bbc:	movw	r1, #127	; 0x7f
   55bc0:	udiv	r0, r1, r0
   55bc4:	str	r0, [fp, #-24]	; 0xffffffe8
   55bc8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   55bcc:	ldr	r1, [fp, #-12]
   55bd0:	mvn	r2, #0
   55bd4:	sub	r1, r2, r1
   55bd8:	cmp	r0, r1
   55bdc:	bls	55ce8 <__assert_fail@plt+0x43130>
   55be0:	b	55d00 <__assert_fail@plt+0x43148>
   55be4:	ldr	r0, [fp, #-16]
   55be8:	cmn	r0, #1
   55bec:	bne	55c38 <__assert_fail@plt+0x43080>
   55bf0:	b	55c10 <__assert_fail@plt+0x43058>
   55bf4:	ldr	r0, [fp, #-12]
   55bf8:	mvn	r1, #127	; 0x7f
   55bfc:	add	r0, r0, r1
   55c00:	movw	r1, #0
   55c04:	cmp	r1, r0
   55c08:	bcc	55ce8 <__assert_fail@plt+0x43130>
   55c0c:	b	55d00 <__assert_fail@plt+0x43148>
   55c10:	ldr	r0, [fp, #-12]
   55c14:	movw	r1, #0
   55c18:	cmp	r1, r0
   55c1c:	bcs	55d00 <__assert_fail@plt+0x43148>
   55c20:	ldr	r0, [fp, #-12]
   55c24:	sub	r0, r0, #1
   55c28:	movw	r1, #127	; 0x7f
   55c2c:	cmp	r1, r0
   55c30:	bcc	55ce8 <__assert_fail@plt+0x43130>
   55c34:	b	55d00 <__assert_fail@plt+0x43148>
   55c38:	ldr	r0, [fp, #-16]
   55c3c:	mvn	r1, #127	; 0x7f
   55c40:	udiv	r0, r1, r0
   55c44:	ldr	r1, [fp, #-12]
   55c48:	cmp	r0, r1
   55c4c:	bcc	55ce8 <__assert_fail@plt+0x43130>
   55c50:	b	55d00 <__assert_fail@plt+0x43148>
   55c54:	ldr	r0, [fp, #-16]
   55c58:	cmp	r0, #0
   55c5c:	bne	55c64 <__assert_fail@plt+0x430ac>
   55c60:	b	55d00 <__assert_fail@plt+0x43148>
   55c64:	ldr	r0, [fp, #-12]
   55c68:	cmp	r0, #0
   55c6c:	bcs	55cd0 <__assert_fail@plt+0x43118>
   55c70:	ldr	r0, [fp, #-12]
   55c74:	cmn	r0, #1
   55c78:	bne	55cb4 <__assert_fail@plt+0x430fc>
   55c7c:	b	55c9c <__assert_fail@plt+0x430e4>
   55c80:	ldr	r0, [fp, #-16]
   55c84:	mvn	r1, #127	; 0x7f
   55c88:	add	r0, r0, r1
   55c8c:	movw	r1, #0
   55c90:	cmp	r1, r0
   55c94:	bcc	55ce8 <__assert_fail@plt+0x43130>
   55c98:	b	55d00 <__assert_fail@plt+0x43148>
   55c9c:	ldr	r0, [fp, #-16]
   55ca0:	sub	r0, r0, #1
   55ca4:	movw	r1, #127	; 0x7f
   55ca8:	cmp	r1, r0
   55cac:	bcc	55ce8 <__assert_fail@plt+0x43130>
   55cb0:	b	55d00 <__assert_fail@plt+0x43148>
   55cb4:	ldr	r0, [fp, #-12]
   55cb8:	mvn	r1, #127	; 0x7f
   55cbc:	udiv	r0, r1, r0
   55cc0:	ldr	r1, [fp, #-16]
   55cc4:	cmp	r0, r1
   55cc8:	bcc	55ce8 <__assert_fail@plt+0x43130>
   55ccc:	b	55d00 <__assert_fail@plt+0x43148>
   55cd0:	ldr	r0, [fp, #-16]
   55cd4:	movw	r1, #127	; 0x7f
   55cd8:	udiv	r0, r1, r0
   55cdc:	ldr	r1, [fp, #-12]
   55ce0:	cmp	r0, r1
   55ce4:	bcs	55d00 <__assert_fail@plt+0x43148>
   55ce8:	ldr	r0, [fp, #-12]
   55cec:	ldr	r1, [fp, #-16]
   55cf0:	mul	r0, r0, r1
   55cf4:	sxtb	r0, r0
   55cf8:	str	r0, [fp, #-20]	; 0xffffffec
   55cfc:	b	56e78 <__assert_fail@plt+0x442c0>
   55d00:	ldr	r0, [fp, #-12]
   55d04:	ldr	r1, [fp, #-16]
   55d08:	mul	r0, r0, r1
   55d0c:	sxtb	r0, r0
   55d10:	str	r0, [fp, #-20]	; 0xffffffec
   55d14:	b	56e90 <__assert_fail@plt+0x442d8>
   55d18:	ldr	r0, [fp, #-16]
   55d1c:	cmp	r0, #0
   55d20:	bcs	55e2c <__assert_fail@plt+0x43274>
   55d24:	ldr	r0, [fp, #-12]
   55d28:	cmp	r0, #0
   55d2c:	bcs	55db4 <__assert_fail@plt+0x431fc>
   55d30:	b	55d50 <__assert_fail@plt+0x43198>
   55d34:	ldr	r0, [fp, #-12]
   55d38:	ldr	r1, [fp, #-16]
   55d3c:	movw	r2, #255	; 0xff
   55d40:	udiv	r1, r2, r1
   55d44:	cmp	r0, r1
   55d48:	bcc	55ec8 <__assert_fail@plt+0x43310>
   55d4c:	b	55ee0 <__assert_fail@plt+0x43328>
   55d50:	b	55d64 <__assert_fail@plt+0x431ac>
   55d54:	ldr	r0, [fp, #-16]
   55d58:	cmp	r0, #1
   55d5c:	bcc	55d74 <__assert_fail@plt+0x431bc>
   55d60:	b	55d80 <__assert_fail@plt+0x431c8>
   55d64:	ldr	r0, [fp, #-16]
   55d68:	movw	r1, #0
   55d6c:	cmp	r1, r0
   55d70:	bcs	55d80 <__assert_fail@plt+0x431c8>
   55d74:	movw	r0, #0
   55d78:	str	r0, [fp, #-28]	; 0xffffffe4
   55d7c:	b	55d98 <__assert_fail@plt+0x431e0>
   55d80:	ldr	r0, [fp, #-16]
   55d84:	movw	r1, #0
   55d88:	sub	r0, r1, r0
   55d8c:	movw	r1, #255	; 0xff
   55d90:	udiv	r0, r1, r0
   55d94:	str	r0, [fp, #-28]	; 0xffffffe4
   55d98:	ldr	r0, [fp, #-28]	; 0xffffffe4
   55d9c:	ldr	r1, [fp, #-12]
   55da0:	mvn	r2, #0
   55da4:	sub	r1, r2, r1
   55da8:	cmp	r0, r1
   55dac:	bls	55ec8 <__assert_fail@plt+0x43310>
   55db0:	b	55ee0 <__assert_fail@plt+0x43328>
   55db4:	b	55dbc <__assert_fail@plt+0x43204>
   55db8:	b	55dc0 <__assert_fail@plt+0x43208>
   55dbc:	b	55e10 <__assert_fail@plt+0x43258>
   55dc0:	ldr	r0, [fp, #-16]
   55dc4:	cmn	r0, #1
   55dc8:	bne	55e10 <__assert_fail@plt+0x43258>
   55dcc:	b	55de8 <__assert_fail@plt+0x43230>
   55dd0:	ldr	r0, [fp, #-12]
   55dd4:	add	r0, r0, #0
   55dd8:	movw	r1, #0
   55ddc:	cmp	r1, r0
   55de0:	bcc	55ec8 <__assert_fail@plt+0x43310>
   55de4:	b	55ee0 <__assert_fail@plt+0x43328>
   55de8:	ldr	r0, [fp, #-12]
   55dec:	movw	r1, #0
   55df0:	cmp	r1, r0
   55df4:	bcs	55ee0 <__assert_fail@plt+0x43328>
   55df8:	ldr	r0, [fp, #-12]
   55dfc:	sub	r0, r0, #1
   55e00:	mvn	r1, #0
   55e04:	cmp	r1, r0
   55e08:	bcc	55ec8 <__assert_fail@plt+0x43310>
   55e0c:	b	55ee0 <__assert_fail@plt+0x43328>
   55e10:	ldr	r0, [fp, #-16]
   55e14:	movw	r1, #0
   55e18:	udiv	r0, r1, r0
   55e1c:	ldr	r1, [fp, #-12]
   55e20:	cmp	r0, r1
   55e24:	bcc	55ec8 <__assert_fail@plt+0x43310>
   55e28:	b	55ee0 <__assert_fail@plt+0x43328>
   55e2c:	ldr	r0, [fp, #-16]
   55e30:	cmp	r0, #0
   55e34:	bne	55e3c <__assert_fail@plt+0x43284>
   55e38:	b	55ee0 <__assert_fail@plt+0x43328>
   55e3c:	ldr	r0, [fp, #-12]
   55e40:	cmp	r0, #0
   55e44:	bcs	55eb0 <__assert_fail@plt+0x432f8>
   55e48:	b	55e50 <__assert_fail@plt+0x43298>
   55e4c:	b	55e54 <__assert_fail@plt+0x4329c>
   55e50:	b	55e94 <__assert_fail@plt+0x432dc>
   55e54:	ldr	r0, [fp, #-12]
   55e58:	cmn	r0, #1
   55e5c:	bne	55e94 <__assert_fail@plt+0x432dc>
   55e60:	b	55e7c <__assert_fail@plt+0x432c4>
   55e64:	ldr	r0, [fp, #-16]
   55e68:	add	r0, r0, #0
   55e6c:	movw	r1, #0
   55e70:	cmp	r1, r0
   55e74:	bcc	55ec8 <__assert_fail@plt+0x43310>
   55e78:	b	55ee0 <__assert_fail@plt+0x43328>
   55e7c:	ldr	r0, [fp, #-16]
   55e80:	sub	r0, r0, #1
   55e84:	mvn	r1, #0
   55e88:	cmp	r1, r0
   55e8c:	bcc	55ec8 <__assert_fail@plt+0x43310>
   55e90:	b	55ee0 <__assert_fail@plt+0x43328>
   55e94:	ldr	r0, [fp, #-12]
   55e98:	movw	r1, #0
   55e9c:	udiv	r0, r1, r0
   55ea0:	ldr	r1, [fp, #-16]
   55ea4:	cmp	r0, r1
   55ea8:	bcc	55ec8 <__assert_fail@plt+0x43310>
   55eac:	b	55ee0 <__assert_fail@plt+0x43328>
   55eb0:	ldr	r0, [fp, #-16]
   55eb4:	movw	r1, #255	; 0xff
   55eb8:	udiv	r0, r1, r0
   55ebc:	ldr	r1, [fp, #-12]
   55ec0:	cmp	r0, r1
   55ec4:	bcs	55ee0 <__assert_fail@plt+0x43328>
   55ec8:	ldr	r0, [fp, #-12]
   55ecc:	ldr	r1, [fp, #-16]
   55ed0:	mul	r0, r0, r1
   55ed4:	and	r0, r0, #255	; 0xff
   55ed8:	str	r0, [fp, #-20]	; 0xffffffec
   55edc:	b	56e78 <__assert_fail@plt+0x442c0>
   55ee0:	ldr	r0, [fp, #-12]
   55ee4:	ldr	r1, [fp, #-16]
   55ee8:	mul	r0, r0, r1
   55eec:	and	r0, r0, #255	; 0xff
   55ef0:	str	r0, [fp, #-20]	; 0xffffffec
   55ef4:	b	56e90 <__assert_fail@plt+0x442d8>
   55ef8:	b	562b0 <__assert_fail@plt+0x436f8>
   55efc:	b	560d0 <__assert_fail@plt+0x43518>
   55f00:	ldr	r0, [fp, #-16]
   55f04:	cmp	r0, #0
   55f08:	bcs	5600c <__assert_fail@plt+0x43454>
   55f0c:	ldr	r0, [fp, #-12]
   55f10:	cmp	r0, #0
   55f14:	bcs	55f9c <__assert_fail@plt+0x433e4>
   55f18:	b	55f38 <__assert_fail@plt+0x43380>
   55f1c:	ldr	r0, [fp, #-12]
   55f20:	ldr	r1, [fp, #-16]
   55f24:	movw	r2, #32767	; 0x7fff
   55f28:	udiv	r1, r2, r1
   55f2c:	cmp	r0, r1
   55f30:	bcc	560a0 <__assert_fail@plt+0x434e8>
   55f34:	b	560b8 <__assert_fail@plt+0x43500>
   55f38:	b	55f4c <__assert_fail@plt+0x43394>
   55f3c:	ldr	r0, [fp, #-16]
   55f40:	cmp	r0, #1
   55f44:	bcc	55f5c <__assert_fail@plt+0x433a4>
   55f48:	b	55f68 <__assert_fail@plt+0x433b0>
   55f4c:	ldr	r0, [fp, #-16]
   55f50:	movw	r1, #0
   55f54:	cmp	r1, r0
   55f58:	bcs	55f68 <__assert_fail@plt+0x433b0>
   55f5c:	movw	r0, #0
   55f60:	str	r0, [fp, #-32]	; 0xffffffe0
   55f64:	b	55f80 <__assert_fail@plt+0x433c8>
   55f68:	ldr	r0, [fp, #-16]
   55f6c:	movw	r1, #0
   55f70:	sub	r0, r1, r0
   55f74:	movw	r1, #32767	; 0x7fff
   55f78:	udiv	r0, r1, r0
   55f7c:	str	r0, [fp, #-32]	; 0xffffffe0
   55f80:	ldr	r0, [fp, #-32]	; 0xffffffe0
   55f84:	ldr	r1, [fp, #-12]
   55f88:	mvn	r2, #0
   55f8c:	sub	r1, r2, r1
   55f90:	cmp	r0, r1
   55f94:	bls	560a0 <__assert_fail@plt+0x434e8>
   55f98:	b	560b8 <__assert_fail@plt+0x43500>
   55f9c:	ldr	r0, [fp, #-16]
   55fa0:	cmn	r0, #1
   55fa4:	bne	55ff0 <__assert_fail@plt+0x43438>
   55fa8:	b	55fc8 <__assert_fail@plt+0x43410>
   55fac:	ldr	r0, [pc, #3840]	; 56eb4 <__assert_fail@plt+0x442fc>
   55fb0:	ldr	r1, [fp, #-12]
   55fb4:	add	r0, r1, r0
   55fb8:	movw	r1, #0
   55fbc:	cmp	r1, r0
   55fc0:	bcc	560a0 <__assert_fail@plt+0x434e8>
   55fc4:	b	560b8 <__assert_fail@plt+0x43500>
   55fc8:	ldr	r0, [fp, #-12]
   55fcc:	movw	r1, #0
   55fd0:	cmp	r1, r0
   55fd4:	bcs	560b8 <__assert_fail@plt+0x43500>
   55fd8:	ldr	r0, [fp, #-12]
   55fdc:	sub	r0, r0, #1
   55fe0:	movw	r1, #32767	; 0x7fff
   55fe4:	cmp	r1, r0
   55fe8:	bcc	560a0 <__assert_fail@plt+0x434e8>
   55fec:	b	560b8 <__assert_fail@plt+0x43500>
   55ff0:	ldr	r0, [pc, #3772]	; 56eb4 <__assert_fail@plt+0x442fc>
   55ff4:	ldr	r1, [fp, #-16]
   55ff8:	udiv	r0, r0, r1
   55ffc:	ldr	r1, [fp, #-12]
   56000:	cmp	r0, r1
   56004:	bcc	560a0 <__assert_fail@plt+0x434e8>
   56008:	b	560b8 <__assert_fail@plt+0x43500>
   5600c:	ldr	r0, [fp, #-16]
   56010:	cmp	r0, #0
   56014:	bne	5601c <__assert_fail@plt+0x43464>
   56018:	b	560b8 <__assert_fail@plt+0x43500>
   5601c:	ldr	r0, [fp, #-12]
   56020:	cmp	r0, #0
   56024:	bcs	56088 <__assert_fail@plt+0x434d0>
   56028:	ldr	r0, [fp, #-12]
   5602c:	cmn	r0, #1
   56030:	bne	5606c <__assert_fail@plt+0x434b4>
   56034:	b	56054 <__assert_fail@plt+0x4349c>
   56038:	ldr	r0, [pc, #3700]	; 56eb4 <__assert_fail@plt+0x442fc>
   5603c:	ldr	r1, [fp, #-16]
   56040:	add	r0, r1, r0
   56044:	movw	r1, #0
   56048:	cmp	r1, r0
   5604c:	bcc	560a0 <__assert_fail@plt+0x434e8>
   56050:	b	560b8 <__assert_fail@plt+0x43500>
   56054:	ldr	r0, [fp, #-16]
   56058:	sub	r0, r0, #1
   5605c:	movw	r1, #32767	; 0x7fff
   56060:	cmp	r1, r0
   56064:	bcc	560a0 <__assert_fail@plt+0x434e8>
   56068:	b	560b8 <__assert_fail@plt+0x43500>
   5606c:	ldr	r0, [pc, #3648]	; 56eb4 <__assert_fail@plt+0x442fc>
   56070:	ldr	r1, [fp, #-12]
   56074:	udiv	r0, r0, r1
   56078:	ldr	r1, [fp, #-16]
   5607c:	cmp	r0, r1
   56080:	bcc	560a0 <__assert_fail@plt+0x434e8>
   56084:	b	560b8 <__assert_fail@plt+0x43500>
   56088:	ldr	r0, [fp, #-16]
   5608c:	movw	r1, #32767	; 0x7fff
   56090:	udiv	r0, r1, r0
   56094:	ldr	r1, [fp, #-12]
   56098:	cmp	r0, r1
   5609c:	bcs	560b8 <__assert_fail@plt+0x43500>
   560a0:	ldr	r0, [fp, #-12]
   560a4:	ldr	r1, [fp, #-16]
   560a8:	mul	r0, r0, r1
   560ac:	sxth	r0, r0
   560b0:	str	r0, [fp, #-20]	; 0xffffffec
   560b4:	b	56e78 <__assert_fail@plt+0x442c0>
   560b8:	ldr	r0, [fp, #-12]
   560bc:	ldr	r1, [fp, #-16]
   560c0:	mul	r0, r0, r1
   560c4:	sxth	r0, r0
   560c8:	str	r0, [fp, #-20]	; 0xffffffec
   560cc:	b	56e90 <__assert_fail@plt+0x442d8>
   560d0:	ldr	r0, [fp, #-16]
   560d4:	cmp	r0, #0
   560d8:	bcs	561e4 <__assert_fail@plt+0x4362c>
   560dc:	ldr	r0, [fp, #-12]
   560e0:	cmp	r0, #0
   560e4:	bcs	5616c <__assert_fail@plt+0x435b4>
   560e8:	b	56108 <__assert_fail@plt+0x43550>
   560ec:	ldr	r0, [fp, #-12]
   560f0:	ldr	r1, [fp, #-16]
   560f4:	movw	r2, #65535	; 0xffff
   560f8:	udiv	r1, r2, r1
   560fc:	cmp	r0, r1
   56100:	bcc	56280 <__assert_fail@plt+0x436c8>
   56104:	b	56298 <__assert_fail@plt+0x436e0>
   56108:	b	5611c <__assert_fail@plt+0x43564>
   5610c:	ldr	r0, [fp, #-16]
   56110:	cmp	r0, #1
   56114:	bcc	5612c <__assert_fail@plt+0x43574>
   56118:	b	56138 <__assert_fail@plt+0x43580>
   5611c:	ldr	r0, [fp, #-16]
   56120:	movw	r1, #0
   56124:	cmp	r1, r0
   56128:	bcs	56138 <__assert_fail@plt+0x43580>
   5612c:	movw	r0, #0
   56130:	str	r0, [fp, #-36]	; 0xffffffdc
   56134:	b	56150 <__assert_fail@plt+0x43598>
   56138:	ldr	r0, [fp, #-16]
   5613c:	movw	r1, #0
   56140:	sub	r0, r1, r0
   56144:	movw	r1, #65535	; 0xffff
   56148:	udiv	r0, r1, r0
   5614c:	str	r0, [fp, #-36]	; 0xffffffdc
   56150:	ldr	r0, [fp, #-36]	; 0xffffffdc
   56154:	ldr	r1, [fp, #-12]
   56158:	mvn	r2, #0
   5615c:	sub	r1, r2, r1
   56160:	cmp	r0, r1
   56164:	bls	56280 <__assert_fail@plt+0x436c8>
   56168:	b	56298 <__assert_fail@plt+0x436e0>
   5616c:	b	56174 <__assert_fail@plt+0x435bc>
   56170:	b	56178 <__assert_fail@plt+0x435c0>
   56174:	b	561c8 <__assert_fail@plt+0x43610>
   56178:	ldr	r0, [fp, #-16]
   5617c:	cmn	r0, #1
   56180:	bne	561c8 <__assert_fail@plt+0x43610>
   56184:	b	561a0 <__assert_fail@plt+0x435e8>
   56188:	ldr	r0, [fp, #-12]
   5618c:	add	r0, r0, #0
   56190:	movw	r1, #0
   56194:	cmp	r1, r0
   56198:	bcc	56280 <__assert_fail@plt+0x436c8>
   5619c:	b	56298 <__assert_fail@plt+0x436e0>
   561a0:	ldr	r0, [fp, #-12]
   561a4:	movw	r1, #0
   561a8:	cmp	r1, r0
   561ac:	bcs	56298 <__assert_fail@plt+0x436e0>
   561b0:	ldr	r0, [fp, #-12]
   561b4:	sub	r0, r0, #1
   561b8:	mvn	r1, #0
   561bc:	cmp	r1, r0
   561c0:	bcc	56280 <__assert_fail@plt+0x436c8>
   561c4:	b	56298 <__assert_fail@plt+0x436e0>
   561c8:	ldr	r0, [fp, #-16]
   561cc:	movw	r1, #0
   561d0:	udiv	r0, r1, r0
   561d4:	ldr	r1, [fp, #-12]
   561d8:	cmp	r0, r1
   561dc:	bcc	56280 <__assert_fail@plt+0x436c8>
   561e0:	b	56298 <__assert_fail@plt+0x436e0>
   561e4:	ldr	r0, [fp, #-16]
   561e8:	cmp	r0, #0
   561ec:	bne	561f4 <__assert_fail@plt+0x4363c>
   561f0:	b	56298 <__assert_fail@plt+0x436e0>
   561f4:	ldr	r0, [fp, #-12]
   561f8:	cmp	r0, #0
   561fc:	bcs	56268 <__assert_fail@plt+0x436b0>
   56200:	b	56208 <__assert_fail@plt+0x43650>
   56204:	b	5620c <__assert_fail@plt+0x43654>
   56208:	b	5624c <__assert_fail@plt+0x43694>
   5620c:	ldr	r0, [fp, #-12]
   56210:	cmn	r0, #1
   56214:	bne	5624c <__assert_fail@plt+0x43694>
   56218:	b	56234 <__assert_fail@plt+0x4367c>
   5621c:	ldr	r0, [fp, #-16]
   56220:	add	r0, r0, #0
   56224:	movw	r1, #0
   56228:	cmp	r1, r0
   5622c:	bcc	56280 <__assert_fail@plt+0x436c8>
   56230:	b	56298 <__assert_fail@plt+0x436e0>
   56234:	ldr	r0, [fp, #-16]
   56238:	sub	r0, r0, #1
   5623c:	mvn	r1, #0
   56240:	cmp	r1, r0
   56244:	bcc	56280 <__assert_fail@plt+0x436c8>
   56248:	b	56298 <__assert_fail@plt+0x436e0>
   5624c:	ldr	r0, [fp, #-12]
   56250:	movw	r1, #0
   56254:	udiv	r0, r1, r0
   56258:	ldr	r1, [fp, #-16]
   5625c:	cmp	r0, r1
   56260:	bcc	56280 <__assert_fail@plt+0x436c8>
   56264:	b	56298 <__assert_fail@plt+0x436e0>
   56268:	ldr	r0, [fp, #-16]
   5626c:	movw	r1, #65535	; 0xffff
   56270:	udiv	r0, r1, r0
   56274:	ldr	r1, [fp, #-12]
   56278:	cmp	r0, r1
   5627c:	bcs	56298 <__assert_fail@plt+0x436e0>
   56280:	ldr	r0, [fp, #-12]
   56284:	ldr	r1, [fp, #-16]
   56288:	mul	r0, r0, r1
   5628c:	uxth	r0, r0
   56290:	str	r0, [fp, #-20]	; 0xffffffec
   56294:	b	56e78 <__assert_fail@plt+0x442c0>
   56298:	ldr	r0, [fp, #-12]
   5629c:	ldr	r1, [fp, #-16]
   562a0:	mul	r0, r0, r1
   562a4:	uxth	r0, r0
   562a8:	str	r0, [fp, #-20]	; 0xffffffec
   562ac:	b	56e90 <__assert_fail@plt+0x442d8>
   562b0:	b	562b4 <__assert_fail@plt+0x436fc>
   562b4:	b	56478 <__assert_fail@plt+0x438c0>
   562b8:	ldr	r0, [fp, #-16]
   562bc:	cmp	r0, #0
   562c0:	bcs	563c0 <__assert_fail@plt+0x43808>
   562c4:	ldr	r0, [fp, #-12]
   562c8:	cmp	r0, #0
   562cc:	bcs	56354 <__assert_fail@plt+0x4379c>
   562d0:	b	562f0 <__assert_fail@plt+0x43738>
   562d4:	ldr	r0, [pc, #3024]	; 56eac <__assert_fail@plt+0x442f4>
   562d8:	ldr	r1, [fp, #-12]
   562dc:	ldr	r2, [fp, #-16]
   562e0:	udiv	r0, r0, r2
   562e4:	cmp	r1, r0
   562e8:	bcc	56450 <__assert_fail@plt+0x43898>
   562ec:	b	56464 <__assert_fail@plt+0x438ac>
   562f0:	b	56304 <__assert_fail@plt+0x4374c>
   562f4:	ldr	r0, [fp, #-16]
   562f8:	cmp	r0, #1
   562fc:	bcc	56314 <__assert_fail@plt+0x4375c>
   56300:	b	56320 <__assert_fail@plt+0x43768>
   56304:	ldr	r0, [fp, #-16]
   56308:	movw	r1, #0
   5630c:	cmp	r1, r0
   56310:	bcs	56320 <__assert_fail@plt+0x43768>
   56314:	movw	r0, #0
   56318:	str	r0, [fp, #-40]	; 0xffffffd8
   5631c:	b	56338 <__assert_fail@plt+0x43780>
   56320:	ldr	r0, [pc, #2948]	; 56eac <__assert_fail@plt+0x442f4>
   56324:	ldr	r1, [fp, #-16]
   56328:	movw	r2, #0
   5632c:	sub	r1, r2, r1
   56330:	udiv	r0, r0, r1
   56334:	str	r0, [fp, #-40]	; 0xffffffd8
   56338:	ldr	r0, [fp, #-40]	; 0xffffffd8
   5633c:	ldr	r1, [fp, #-12]
   56340:	mvn	r2, #0
   56344:	sub	r1, r2, r1
   56348:	cmp	r0, r1
   5634c:	bls	56450 <__assert_fail@plt+0x43898>
   56350:	b	56464 <__assert_fail@plt+0x438ac>
   56354:	ldr	r0, [fp, #-16]
   56358:	cmn	r0, #1
   5635c:	bne	563a4 <__assert_fail@plt+0x437ec>
   56360:	b	5637c <__assert_fail@plt+0x437c4>
   56364:	ldr	r0, [fp, #-12]
   56368:	add	r0, r0, #-2147483648	; 0x80000000
   5636c:	movw	r1, #0
   56370:	cmp	r1, r0
   56374:	bcc	56450 <__assert_fail@plt+0x43898>
   56378:	b	56464 <__assert_fail@plt+0x438ac>
   5637c:	ldr	r0, [fp, #-12]
   56380:	movw	r1, #0
   56384:	cmp	r1, r0
   56388:	bcs	56464 <__assert_fail@plt+0x438ac>
   5638c:	ldr	r0, [pc, #2840]	; 56eac <__assert_fail@plt+0x442f4>
   56390:	ldr	r1, [fp, #-12]
   56394:	sub	r1, r1, #1
   56398:	cmp	r0, r1
   5639c:	bcc	56450 <__assert_fail@plt+0x43898>
   563a0:	b	56464 <__assert_fail@plt+0x438ac>
   563a4:	ldr	r0, [pc, #2820]	; 56eb0 <__assert_fail@plt+0x442f8>
   563a8:	ldr	r1, [fp, #-16]
   563ac:	udiv	r0, r0, r1
   563b0:	ldr	r1, [fp, #-12]
   563b4:	cmp	r0, r1
   563b8:	bcc	56450 <__assert_fail@plt+0x43898>
   563bc:	b	56464 <__assert_fail@plt+0x438ac>
   563c0:	ldr	r0, [fp, #-16]
   563c4:	cmp	r0, #0
   563c8:	bne	563d0 <__assert_fail@plt+0x43818>
   563cc:	b	56464 <__assert_fail@plt+0x438ac>
   563d0:	ldr	r0, [fp, #-12]
   563d4:	cmp	r0, #0
   563d8:	bcs	56438 <__assert_fail@plt+0x43880>
   563dc:	ldr	r0, [fp, #-12]
   563e0:	cmn	r0, #1
   563e4:	bne	5641c <__assert_fail@plt+0x43864>
   563e8:	b	56404 <__assert_fail@plt+0x4384c>
   563ec:	ldr	r0, [fp, #-16]
   563f0:	add	r0, r0, #-2147483648	; 0x80000000
   563f4:	movw	r1, #0
   563f8:	cmp	r1, r0
   563fc:	bcc	56450 <__assert_fail@plt+0x43898>
   56400:	b	56464 <__assert_fail@plt+0x438ac>
   56404:	ldr	r0, [pc, #2720]	; 56eac <__assert_fail@plt+0x442f4>
   56408:	ldr	r1, [fp, #-16]
   5640c:	sub	r1, r1, #1
   56410:	cmp	r0, r1
   56414:	bcc	56450 <__assert_fail@plt+0x43898>
   56418:	b	56464 <__assert_fail@plt+0x438ac>
   5641c:	ldr	r0, [pc, #2700]	; 56eb0 <__assert_fail@plt+0x442f8>
   56420:	ldr	r1, [fp, #-12]
   56424:	udiv	r0, r0, r1
   56428:	ldr	r1, [fp, #-16]
   5642c:	cmp	r0, r1
   56430:	bcc	56450 <__assert_fail@plt+0x43898>
   56434:	b	56464 <__assert_fail@plt+0x438ac>
   56438:	ldr	r0, [pc, #2668]	; 56eac <__assert_fail@plt+0x442f4>
   5643c:	ldr	r1, [fp, #-16]
   56440:	udiv	r0, r0, r1
   56444:	ldr	r1, [fp, #-12]
   56448:	cmp	r0, r1
   5644c:	bcs	56464 <__assert_fail@plt+0x438ac>
   56450:	ldr	r0, [fp, #-12]
   56454:	ldr	r1, [fp, #-16]
   56458:	mul	r0, r0, r1
   5645c:	str	r0, [fp, #-20]	; 0xffffffec
   56460:	b	56e78 <__assert_fail@plt+0x442c0>
   56464:	ldr	r0, [fp, #-12]
   56468:	ldr	r1, [fp, #-16]
   5646c:	mul	r0, r0, r1
   56470:	str	r0, [fp, #-20]	; 0xffffffec
   56474:	b	56e90 <__assert_fail@plt+0x442d8>
   56478:	ldr	r0, [fp, #-16]
   5647c:	cmp	r0, #0
   56480:	bcs	5658c <__assert_fail@plt+0x439d4>
   56484:	ldr	r0, [fp, #-12]
   56488:	cmp	r0, #0
   5648c:	bcs	56514 <__assert_fail@plt+0x4395c>
   56490:	b	564b0 <__assert_fail@plt+0x438f8>
   56494:	ldr	r0, [fp, #-12]
   56498:	ldr	r1, [fp, #-16]
   5649c:	mvn	r2, #0
   564a0:	udiv	r1, r2, r1
   564a4:	cmp	r0, r1
   564a8:	bcc	56628 <__assert_fail@plt+0x43a70>
   564ac:	b	5663c <__assert_fail@plt+0x43a84>
   564b0:	b	564c4 <__assert_fail@plt+0x4390c>
   564b4:	ldr	r0, [fp, #-16]
   564b8:	cmp	r0, #1
   564bc:	bcc	564d4 <__assert_fail@plt+0x4391c>
   564c0:	b	564e0 <__assert_fail@plt+0x43928>
   564c4:	ldr	r0, [fp, #-16]
   564c8:	movw	r1, #0
   564cc:	cmp	r1, r0
   564d0:	bcs	564e0 <__assert_fail@plt+0x43928>
   564d4:	movw	r0, #1
   564d8:	str	r0, [fp, #-44]	; 0xffffffd4
   564dc:	b	564f8 <__assert_fail@plt+0x43940>
   564e0:	ldr	r0, [fp, #-16]
   564e4:	movw	r1, #0
   564e8:	sub	r0, r1, r0
   564ec:	mvn	r1, #0
   564f0:	udiv	r0, r1, r0
   564f4:	str	r0, [fp, #-44]	; 0xffffffd4
   564f8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   564fc:	ldr	r1, [fp, #-12]
   56500:	mvn	r2, #0
   56504:	sub	r1, r2, r1
   56508:	cmp	r0, r1
   5650c:	bls	56628 <__assert_fail@plt+0x43a70>
   56510:	b	5663c <__assert_fail@plt+0x43a84>
   56514:	b	5651c <__assert_fail@plt+0x43964>
   56518:	b	56520 <__assert_fail@plt+0x43968>
   5651c:	b	56570 <__assert_fail@plt+0x439b8>
   56520:	ldr	r0, [fp, #-16]
   56524:	cmn	r0, #1
   56528:	bne	56570 <__assert_fail@plt+0x439b8>
   5652c:	b	56548 <__assert_fail@plt+0x43990>
   56530:	ldr	r0, [fp, #-12]
   56534:	add	r0, r0, #0
   56538:	movw	r1, #0
   5653c:	cmp	r1, r0
   56540:	bcc	56628 <__assert_fail@plt+0x43a70>
   56544:	b	5663c <__assert_fail@plt+0x43a84>
   56548:	ldr	r0, [fp, #-12]
   5654c:	movw	r1, #0
   56550:	cmp	r1, r0
   56554:	bcs	5663c <__assert_fail@plt+0x43a84>
   56558:	ldr	r0, [fp, #-12]
   5655c:	sub	r0, r0, #1
   56560:	mvn	r1, #0
   56564:	cmp	r1, r0
   56568:	bcc	56628 <__assert_fail@plt+0x43a70>
   5656c:	b	5663c <__assert_fail@plt+0x43a84>
   56570:	ldr	r0, [fp, #-16]
   56574:	movw	r1, #0
   56578:	udiv	r0, r1, r0
   5657c:	ldr	r1, [fp, #-12]
   56580:	cmp	r0, r1
   56584:	bcc	56628 <__assert_fail@plt+0x43a70>
   56588:	b	5663c <__assert_fail@plt+0x43a84>
   5658c:	ldr	r0, [fp, #-16]
   56590:	cmp	r0, #0
   56594:	bne	5659c <__assert_fail@plt+0x439e4>
   56598:	b	5663c <__assert_fail@plt+0x43a84>
   5659c:	ldr	r0, [fp, #-12]
   565a0:	cmp	r0, #0
   565a4:	bcs	56610 <__assert_fail@plt+0x43a58>
   565a8:	b	565b0 <__assert_fail@plt+0x439f8>
   565ac:	b	565b4 <__assert_fail@plt+0x439fc>
   565b0:	b	565f4 <__assert_fail@plt+0x43a3c>
   565b4:	ldr	r0, [fp, #-12]
   565b8:	cmn	r0, #1
   565bc:	bne	565f4 <__assert_fail@plt+0x43a3c>
   565c0:	b	565dc <__assert_fail@plt+0x43a24>
   565c4:	ldr	r0, [fp, #-16]
   565c8:	add	r0, r0, #0
   565cc:	movw	r1, #0
   565d0:	cmp	r1, r0
   565d4:	bcc	56628 <__assert_fail@plt+0x43a70>
   565d8:	b	5663c <__assert_fail@plt+0x43a84>
   565dc:	ldr	r0, [fp, #-16]
   565e0:	sub	r0, r0, #1
   565e4:	mvn	r1, #0
   565e8:	cmp	r1, r0
   565ec:	bcc	56628 <__assert_fail@plt+0x43a70>
   565f0:	b	5663c <__assert_fail@plt+0x43a84>
   565f4:	ldr	r0, [fp, #-12]
   565f8:	movw	r1, #0
   565fc:	udiv	r0, r1, r0
   56600:	ldr	r1, [fp, #-16]
   56604:	cmp	r0, r1
   56608:	bcc	56628 <__assert_fail@plt+0x43a70>
   5660c:	b	5663c <__assert_fail@plt+0x43a84>
   56610:	ldr	r0, [fp, #-16]
   56614:	mvn	r1, #0
   56618:	udiv	r0, r1, r0
   5661c:	ldr	r1, [fp, #-12]
   56620:	cmp	r0, r1
   56624:	bcs	5663c <__assert_fail@plt+0x43a84>
   56628:	ldr	r0, [fp, #-12]
   5662c:	ldr	r1, [fp, #-16]
   56630:	mul	r0, r0, r1
   56634:	str	r0, [fp, #-20]	; 0xffffffec
   56638:	b	56e78 <__assert_fail@plt+0x442c0>
   5663c:	ldr	r0, [fp, #-12]
   56640:	ldr	r1, [fp, #-16]
   56644:	mul	r0, r0, r1
   56648:	str	r0, [fp, #-20]	; 0xffffffec
   5664c:	b	56e90 <__assert_fail@plt+0x442d8>
   56650:	b	56654 <__assert_fail@plt+0x43a9c>
   56654:	b	56818 <__assert_fail@plt+0x43c60>
   56658:	ldr	r0, [fp, #-16]
   5665c:	cmp	r0, #0
   56660:	bcs	56760 <__assert_fail@plt+0x43ba8>
   56664:	ldr	r0, [fp, #-12]
   56668:	cmp	r0, #0
   5666c:	bcs	566f4 <__assert_fail@plt+0x43b3c>
   56670:	b	56690 <__assert_fail@plt+0x43ad8>
   56674:	ldr	r0, [pc, #2096]	; 56eac <__assert_fail@plt+0x442f4>
   56678:	ldr	r1, [fp, #-12]
   5667c:	ldr	r2, [fp, #-16]
   56680:	udiv	r0, r0, r2
   56684:	cmp	r1, r0
   56688:	bcc	567f0 <__assert_fail@plt+0x43c38>
   5668c:	b	56804 <__assert_fail@plt+0x43c4c>
   56690:	b	566a4 <__assert_fail@plt+0x43aec>
   56694:	ldr	r0, [fp, #-16]
   56698:	cmp	r0, #1
   5669c:	bcc	566b4 <__assert_fail@plt+0x43afc>
   566a0:	b	566c0 <__assert_fail@plt+0x43b08>
   566a4:	ldr	r0, [fp, #-16]
   566a8:	movw	r1, #0
   566ac:	cmp	r1, r0
   566b0:	bcs	566c0 <__assert_fail@plt+0x43b08>
   566b4:	movw	r0, #0
   566b8:	str	r0, [fp, #-48]	; 0xffffffd0
   566bc:	b	566d8 <__assert_fail@plt+0x43b20>
   566c0:	ldr	r0, [pc, #2020]	; 56eac <__assert_fail@plt+0x442f4>
   566c4:	ldr	r1, [fp, #-16]
   566c8:	movw	r2, #0
   566cc:	sub	r1, r2, r1
   566d0:	udiv	r0, r0, r1
   566d4:	str	r0, [fp, #-48]	; 0xffffffd0
   566d8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   566dc:	ldr	r1, [fp, #-12]
   566e0:	mvn	r2, #0
   566e4:	sub	r1, r2, r1
   566e8:	cmp	r0, r1
   566ec:	bls	567f0 <__assert_fail@plt+0x43c38>
   566f0:	b	56804 <__assert_fail@plt+0x43c4c>
   566f4:	ldr	r0, [fp, #-16]
   566f8:	cmn	r0, #1
   566fc:	bne	56744 <__assert_fail@plt+0x43b8c>
   56700:	b	5671c <__assert_fail@plt+0x43b64>
   56704:	ldr	r0, [fp, #-12]
   56708:	add	r0, r0, #-2147483648	; 0x80000000
   5670c:	movw	r1, #0
   56710:	cmp	r1, r0
   56714:	bcc	567f0 <__assert_fail@plt+0x43c38>
   56718:	b	56804 <__assert_fail@plt+0x43c4c>
   5671c:	ldr	r0, [fp, #-12]
   56720:	movw	r1, #0
   56724:	cmp	r1, r0
   56728:	bcs	56804 <__assert_fail@plt+0x43c4c>
   5672c:	ldr	r0, [pc, #1912]	; 56eac <__assert_fail@plt+0x442f4>
   56730:	ldr	r1, [fp, #-12]
   56734:	sub	r1, r1, #1
   56738:	cmp	r0, r1
   5673c:	bcc	567f0 <__assert_fail@plt+0x43c38>
   56740:	b	56804 <__assert_fail@plt+0x43c4c>
   56744:	ldr	r0, [pc, #1892]	; 56eb0 <__assert_fail@plt+0x442f8>
   56748:	ldr	r1, [fp, #-16]
   5674c:	udiv	r0, r0, r1
   56750:	ldr	r1, [fp, #-12]
   56754:	cmp	r0, r1
   56758:	bcc	567f0 <__assert_fail@plt+0x43c38>
   5675c:	b	56804 <__assert_fail@plt+0x43c4c>
   56760:	ldr	r0, [fp, #-16]
   56764:	cmp	r0, #0
   56768:	bne	56770 <__assert_fail@plt+0x43bb8>
   5676c:	b	56804 <__assert_fail@plt+0x43c4c>
   56770:	ldr	r0, [fp, #-12]
   56774:	cmp	r0, #0
   56778:	bcs	567d8 <__assert_fail@plt+0x43c20>
   5677c:	ldr	r0, [fp, #-12]
   56780:	cmn	r0, #1
   56784:	bne	567bc <__assert_fail@plt+0x43c04>
   56788:	b	567a4 <__assert_fail@plt+0x43bec>
   5678c:	ldr	r0, [fp, #-16]
   56790:	add	r0, r0, #-2147483648	; 0x80000000
   56794:	movw	r1, #0
   56798:	cmp	r1, r0
   5679c:	bcc	567f0 <__assert_fail@plt+0x43c38>
   567a0:	b	56804 <__assert_fail@plt+0x43c4c>
   567a4:	ldr	r0, [pc, #1792]	; 56eac <__assert_fail@plt+0x442f4>
   567a8:	ldr	r1, [fp, #-16]
   567ac:	sub	r1, r1, #1
   567b0:	cmp	r0, r1
   567b4:	bcc	567f0 <__assert_fail@plt+0x43c38>
   567b8:	b	56804 <__assert_fail@plt+0x43c4c>
   567bc:	ldr	r0, [pc, #1772]	; 56eb0 <__assert_fail@plt+0x442f8>
   567c0:	ldr	r1, [fp, #-12]
   567c4:	udiv	r0, r0, r1
   567c8:	ldr	r1, [fp, #-16]
   567cc:	cmp	r0, r1
   567d0:	bcc	567f0 <__assert_fail@plt+0x43c38>
   567d4:	b	56804 <__assert_fail@plt+0x43c4c>
   567d8:	ldr	r0, [pc, #1740]	; 56eac <__assert_fail@plt+0x442f4>
   567dc:	ldr	r1, [fp, #-16]
   567e0:	udiv	r0, r0, r1
   567e4:	ldr	r1, [fp, #-12]
   567e8:	cmp	r0, r1
   567ec:	bcs	56804 <__assert_fail@plt+0x43c4c>
   567f0:	ldr	r0, [fp, #-12]
   567f4:	ldr	r1, [fp, #-16]
   567f8:	mul	r0, r0, r1
   567fc:	str	r0, [fp, #-20]	; 0xffffffec
   56800:	b	56e78 <__assert_fail@plt+0x442c0>
   56804:	ldr	r0, [fp, #-12]
   56808:	ldr	r1, [fp, #-16]
   5680c:	mul	r0, r0, r1
   56810:	str	r0, [fp, #-20]	; 0xffffffec
   56814:	b	56e90 <__assert_fail@plt+0x442d8>
   56818:	ldr	r0, [fp, #-16]
   5681c:	cmp	r0, #0
   56820:	bcs	5692c <__assert_fail@plt+0x43d74>
   56824:	ldr	r0, [fp, #-12]
   56828:	cmp	r0, #0
   5682c:	bcs	568b4 <__assert_fail@plt+0x43cfc>
   56830:	b	56850 <__assert_fail@plt+0x43c98>
   56834:	ldr	r0, [fp, #-12]
   56838:	ldr	r1, [fp, #-16]
   5683c:	mvn	r2, #0
   56840:	udiv	r1, r2, r1
   56844:	cmp	r0, r1
   56848:	bcc	569c8 <__assert_fail@plt+0x43e10>
   5684c:	b	569dc <__assert_fail@plt+0x43e24>
   56850:	b	56864 <__assert_fail@plt+0x43cac>
   56854:	ldr	r0, [fp, #-16]
   56858:	cmp	r0, #1
   5685c:	bcc	56874 <__assert_fail@plt+0x43cbc>
   56860:	b	56880 <__assert_fail@plt+0x43cc8>
   56864:	ldr	r0, [fp, #-16]
   56868:	movw	r1, #0
   5686c:	cmp	r1, r0
   56870:	bcs	56880 <__assert_fail@plt+0x43cc8>
   56874:	movw	r0, #1
   56878:	str	r0, [fp, #-52]	; 0xffffffcc
   5687c:	b	56898 <__assert_fail@plt+0x43ce0>
   56880:	ldr	r0, [fp, #-16]
   56884:	movw	r1, #0
   56888:	sub	r0, r1, r0
   5688c:	mvn	r1, #0
   56890:	udiv	r0, r1, r0
   56894:	str	r0, [fp, #-52]	; 0xffffffcc
   56898:	ldr	r0, [fp, #-52]	; 0xffffffcc
   5689c:	ldr	r1, [fp, #-12]
   568a0:	mvn	r2, #0
   568a4:	sub	r1, r2, r1
   568a8:	cmp	r0, r1
   568ac:	bls	569c8 <__assert_fail@plt+0x43e10>
   568b0:	b	569dc <__assert_fail@plt+0x43e24>
   568b4:	b	568bc <__assert_fail@plt+0x43d04>
   568b8:	b	568c0 <__assert_fail@plt+0x43d08>
   568bc:	b	56910 <__assert_fail@plt+0x43d58>
   568c0:	ldr	r0, [fp, #-16]
   568c4:	cmn	r0, #1
   568c8:	bne	56910 <__assert_fail@plt+0x43d58>
   568cc:	b	568e8 <__assert_fail@plt+0x43d30>
   568d0:	ldr	r0, [fp, #-12]
   568d4:	add	r0, r0, #0
   568d8:	movw	r1, #0
   568dc:	cmp	r1, r0
   568e0:	bcc	569c8 <__assert_fail@plt+0x43e10>
   568e4:	b	569dc <__assert_fail@plt+0x43e24>
   568e8:	ldr	r0, [fp, #-12]
   568ec:	movw	r1, #0
   568f0:	cmp	r1, r0
   568f4:	bcs	569dc <__assert_fail@plt+0x43e24>
   568f8:	ldr	r0, [fp, #-12]
   568fc:	sub	r0, r0, #1
   56900:	mvn	r1, #0
   56904:	cmp	r1, r0
   56908:	bcc	569c8 <__assert_fail@plt+0x43e10>
   5690c:	b	569dc <__assert_fail@plt+0x43e24>
   56910:	ldr	r0, [fp, #-16]
   56914:	movw	r1, #0
   56918:	udiv	r0, r1, r0
   5691c:	ldr	r1, [fp, #-12]
   56920:	cmp	r0, r1
   56924:	bcc	569c8 <__assert_fail@plt+0x43e10>
   56928:	b	569dc <__assert_fail@plt+0x43e24>
   5692c:	ldr	r0, [fp, #-16]
   56930:	cmp	r0, #0
   56934:	bne	5693c <__assert_fail@plt+0x43d84>
   56938:	b	569dc <__assert_fail@plt+0x43e24>
   5693c:	ldr	r0, [fp, #-12]
   56940:	cmp	r0, #0
   56944:	bcs	569b0 <__assert_fail@plt+0x43df8>
   56948:	b	56950 <__assert_fail@plt+0x43d98>
   5694c:	b	56954 <__assert_fail@plt+0x43d9c>
   56950:	b	56994 <__assert_fail@plt+0x43ddc>
   56954:	ldr	r0, [fp, #-12]
   56958:	cmn	r0, #1
   5695c:	bne	56994 <__assert_fail@plt+0x43ddc>
   56960:	b	5697c <__assert_fail@plt+0x43dc4>
   56964:	ldr	r0, [fp, #-16]
   56968:	add	r0, r0, #0
   5696c:	movw	r1, #0
   56970:	cmp	r1, r0
   56974:	bcc	569c8 <__assert_fail@plt+0x43e10>
   56978:	b	569dc <__assert_fail@plt+0x43e24>
   5697c:	ldr	r0, [fp, #-16]
   56980:	sub	r0, r0, #1
   56984:	mvn	r1, #0
   56988:	cmp	r1, r0
   5698c:	bcc	569c8 <__assert_fail@plt+0x43e10>
   56990:	b	569dc <__assert_fail@plt+0x43e24>
   56994:	ldr	r0, [fp, #-12]
   56998:	movw	r1, #0
   5699c:	udiv	r0, r1, r0
   569a0:	ldr	r1, [fp, #-16]
   569a4:	cmp	r0, r1
   569a8:	bcc	569c8 <__assert_fail@plt+0x43e10>
   569ac:	b	569dc <__assert_fail@plt+0x43e24>
   569b0:	ldr	r0, [fp, #-16]
   569b4:	mvn	r1, #0
   569b8:	udiv	r0, r1, r0
   569bc:	ldr	r1, [fp, #-12]
   569c0:	cmp	r0, r1
   569c4:	bcs	569dc <__assert_fail@plt+0x43e24>
   569c8:	ldr	r0, [fp, #-12]
   569cc:	ldr	r1, [fp, #-16]
   569d0:	mul	r0, r0, r1
   569d4:	str	r0, [fp, #-20]	; 0xffffffec
   569d8:	b	56e78 <__assert_fail@plt+0x442c0>
   569dc:	ldr	r0, [fp, #-12]
   569e0:	ldr	r1, [fp, #-16]
   569e4:	mul	r0, r0, r1
   569e8:	str	r0, [fp, #-20]	; 0xffffffec
   569ec:	b	56e90 <__assert_fail@plt+0x442d8>
   569f0:	b	56c44 <__assert_fail@plt+0x4408c>
   569f4:	ldr	r0, [fp, #-16]
   569f8:	cmp	r0, #0
   569fc:	bcs	56b5c <__assert_fail@plt+0x43fa4>
   56a00:	ldr	r0, [fp, #-12]
   56a04:	cmp	r0, #0
   56a08:	bcs	56ad8 <__assert_fail@plt+0x43f20>
   56a0c:	b	56a10 <__assert_fail@plt+0x43e58>
   56a10:	ldr	r0, [fp, #-12]
   56a14:	ldr	r2, [fp, #-16]
   56a18:	mvn	r1, #0
   56a1c:	mvn	r3, #-2147483648	; 0x80000000
   56a20:	mov	ip, #0
   56a24:	str	r0, [fp, #-56]	; 0xffffffc8
   56a28:	mov	r0, r1
   56a2c:	mov	r1, r3
   56a30:	mov	r3, ip
   56a34:	bl	77854 <__assert_fail@plt+0x64c9c>
   56a38:	ldr	r2, [fp, #-56]	; 0xffffffc8
   56a3c:	subs	r0, r2, r0
   56a40:	rscs	r1, r1, #0
   56a44:	str	r0, [fp, #-60]	; 0xffffffc4
   56a48:	str	r1, [fp, #-64]	; 0xffffffc0
   56a4c:	blt	56c1c <__assert_fail@plt+0x44064>
   56a50:	b	56c30 <__assert_fail@plt+0x44078>
   56a54:	b	56a68 <__assert_fail@plt+0x43eb0>
   56a58:	ldr	r0, [fp, #-16]
   56a5c:	cmp	r0, #1
   56a60:	bcc	56a78 <__assert_fail@plt+0x43ec0>
   56a64:	b	56a8c <__assert_fail@plt+0x43ed4>
   56a68:	ldr	r0, [fp, #-16]
   56a6c:	movw	r1, #0
   56a70:	cmp	r1, r0
   56a74:	bcs	56a8c <__assert_fail@plt+0x43ed4>
   56a78:	mov	r0, #0
   56a7c:	mvn	r1, #0
   56a80:	str	r1, [fp, #-68]	; 0xffffffbc
   56a84:	str	r0, [fp, #-72]	; 0xffffffb8
   56a88:	b	56ab0 <__assert_fail@plt+0x43ef8>
   56a8c:	ldr	r0, [fp, #-16]
   56a90:	rsb	r2, r0, #0
   56a94:	mvn	r0, #0
   56a98:	mvn	r1, #-2147483648	; 0x80000000
   56a9c:	mov	r3, #0
   56aa0:	bl	77854 <__assert_fail@plt+0x64c9c>
   56aa4:	str	r0, [fp, #-68]	; 0xffffffbc
   56aa8:	str	r1, [fp, #-72]	; 0xffffffb8
   56aac:	b	56ab0 <__assert_fail@plt+0x43ef8>
   56ab0:	ldr	r0, [fp, #-72]	; 0xffffffb8
   56ab4:	ldr	r1, [fp, #-68]	; 0xffffffbc
   56ab8:	ldr	r2, [fp, #-12]
   56abc:	mvn	r2, r2
   56ac0:	subs	r1, r2, r1
   56ac4:	rscs	r0, r0, #0
   56ac8:	str	r1, [fp, #-76]	; 0xffffffb4
   56acc:	str	r0, [fp, #-80]	; 0xffffffb0
   56ad0:	bge	56c1c <__assert_fail@plt+0x44064>
   56ad4:	b	56c30 <__assert_fail@plt+0x44078>
   56ad8:	ldr	r0, [fp, #-16]
   56adc:	cmn	r0, #1
   56ae0:	bne	56b28 <__assert_fail@plt+0x43f70>
   56ae4:	b	56b08 <__assert_fail@plt+0x43f50>
   56ae8:	ldr	r0, [fp, #-12]
   56aec:	rsbs	r0, r0, #0
   56af0:	mov	r1, #0
   56af4:	sbcs	r1, r1, #-2147483648	; 0x80000000
   56af8:	str	r0, [fp, #-84]	; 0xffffffac
   56afc:	str	r1, [sp, #88]	; 0x58
   56b00:	blt	56c1c <__assert_fail@plt+0x44064>
   56b04:	b	56c30 <__assert_fail@plt+0x44078>
   56b08:	ldr	r0, [fp, #-12]
   56b0c:	movw	r1, #0
   56b10:	cmp	r1, r0
   56b14:	bcs	56c30 <__assert_fail@plt+0x44078>
   56b18:	mov	r0, #0
   56b1c:	cmp	r0, #0
   56b20:	bne	56c1c <__assert_fail@plt+0x44064>
   56b24:	b	56c30 <__assert_fail@plt+0x44078>
   56b28:	ldr	r2, [fp, #-16]
   56b2c:	mov	r1, #-2147483648	; 0x80000000
   56b30:	mov	r0, #0
   56b34:	str	r0, [sp, #84]	; 0x54
   56b38:	ldr	r3, [sp, #84]	; 0x54
   56b3c:	bl	77780 <__assert_fail@plt+0x64bc8>
   56b40:	ldr	r2, [fp, #-12]
   56b44:	subs	r0, r0, r2
   56b48:	sbcs	r1, r1, #0
   56b4c:	str	r0, [sp, #80]	; 0x50
   56b50:	str	r1, [sp, #76]	; 0x4c
   56b54:	blt	56c1c <__assert_fail@plt+0x44064>
   56b58:	b	56c30 <__assert_fail@plt+0x44078>
   56b5c:	ldr	r0, [fp, #-16]
   56b60:	cmp	r0, #0
   56b64:	bne	56b6c <__assert_fail@plt+0x43fb4>
   56b68:	b	56c30 <__assert_fail@plt+0x44078>
   56b6c:	ldr	r0, [fp, #-12]
   56b70:	cmp	r0, #0
   56b74:	bcs	56bec <__assert_fail@plt+0x44034>
   56b78:	ldr	r0, [fp, #-12]
   56b7c:	cmn	r0, #1
   56b80:	bne	56bb8 <__assert_fail@plt+0x44000>
   56b84:	b	56ba8 <__assert_fail@plt+0x43ff0>
   56b88:	ldr	r0, [fp, #-16]
   56b8c:	rsbs	r0, r0, #0
   56b90:	mov	r1, #0
   56b94:	sbcs	r1, r1, #-2147483648	; 0x80000000
   56b98:	str	r0, [sp, #72]	; 0x48
   56b9c:	str	r1, [sp, #68]	; 0x44
   56ba0:	blt	56c1c <__assert_fail@plt+0x44064>
   56ba4:	b	56c30 <__assert_fail@plt+0x44078>
   56ba8:	mov	r0, #0
   56bac:	cmp	r0, #0
   56bb0:	bne	56c1c <__assert_fail@plt+0x44064>
   56bb4:	b	56c30 <__assert_fail@plt+0x44078>
   56bb8:	ldr	r2, [fp, #-12]
   56bbc:	mov	r1, #-2147483648	; 0x80000000
   56bc0:	mov	r0, #0
   56bc4:	str	r0, [sp, #64]	; 0x40
   56bc8:	ldr	r3, [sp, #64]	; 0x40
   56bcc:	bl	77780 <__assert_fail@plt+0x64bc8>
   56bd0:	ldr	r2, [fp, #-16]
   56bd4:	subs	r0, r0, r2
   56bd8:	sbcs	r1, r1, #0
   56bdc:	str	r0, [sp, #60]	; 0x3c
   56be0:	str	r1, [sp, #56]	; 0x38
   56be4:	blt	56c1c <__assert_fail@plt+0x44064>
   56be8:	b	56c30 <__assert_fail@plt+0x44078>
   56bec:	ldr	r2, [fp, #-16]
   56bf0:	mvn	r0, #0
   56bf4:	mvn	r1, #-2147483648	; 0x80000000
   56bf8:	mov	r3, #0
   56bfc:	bl	77854 <__assert_fail@plt+0x64c9c>
   56c00:	ldr	r2, [fp, #-12]
   56c04:	subs	r0, r0, r2
   56c08:	sbcs	r1, r1, #0
   56c0c:	str	r0, [sp, #52]	; 0x34
   56c10:	str	r1, [sp, #48]	; 0x30
   56c14:	bge	56c30 <__assert_fail@plt+0x44078>
   56c18:	b	56c1c <__assert_fail@plt+0x44064>
   56c1c:	ldr	r0, [fp, #-12]
   56c20:	ldr	r1, [fp, #-16]
   56c24:	mul	r0, r0, r1
   56c28:	str	r0, [fp, #-20]	; 0xffffffec
   56c2c:	b	56e78 <__assert_fail@plt+0x442c0>
   56c30:	ldr	r0, [fp, #-12]
   56c34:	ldr	r1, [fp, #-16]
   56c38:	mul	r0, r0, r1
   56c3c:	str	r0, [fp, #-20]	; 0xffffffec
   56c40:	b	56e90 <__assert_fail@plt+0x442d8>
   56c44:	ldr	r0, [fp, #-16]
   56c48:	cmp	r0, #0
   56c4c:	bcs	56d98 <__assert_fail@plt+0x441e0>
   56c50:	ldr	r0, [fp, #-12]
   56c54:	cmp	r0, #0
   56c58:	bcs	56d20 <__assert_fail@plt+0x44168>
   56c5c:	b	56c98 <__assert_fail@plt+0x440e0>
   56c60:	ldr	r0, [fp, #-12]
   56c64:	ldr	r2, [fp, #-16]
   56c68:	mvn	r1, #0
   56c6c:	mov	r3, #0
   56c70:	str	r0, [sp, #44]	; 0x2c
   56c74:	mov	r0, r1
   56c78:	bl	77854 <__assert_fail@plt+0x64c9c>
   56c7c:	ldr	r2, [sp, #44]	; 0x2c
   56c80:	subs	r0, r2, r0
   56c84:	rscs	r1, r1, #0
   56c88:	str	r0, [sp, #40]	; 0x28
   56c8c:	str	r1, [sp, #36]	; 0x24
   56c90:	bcc	56e50 <__assert_fail@plt+0x44298>
   56c94:	b	56e64 <__assert_fail@plt+0x442ac>
   56c98:	b	56cac <__assert_fail@plt+0x440f4>
   56c9c:	ldr	r0, [fp, #-16]
   56ca0:	cmp	r0, #1
   56ca4:	bcc	56cbc <__assert_fail@plt+0x44104>
   56ca8:	b	56cd0 <__assert_fail@plt+0x44118>
   56cac:	ldr	r0, [fp, #-16]
   56cb0:	movw	r1, #0
   56cb4:	cmp	r1, r0
   56cb8:	bcs	56cd0 <__assert_fail@plt+0x44118>
   56cbc:	mov	r0, #1
   56cc0:	mvn	r1, #0
   56cc4:	str	r1, [sp, #32]
   56cc8:	str	r0, [sp, #28]
   56ccc:	b	56cf8 <__assert_fail@plt+0x44140>
   56cd0:	ldr	r0, [fp, #-16]
   56cd4:	rsb	r2, r0, #0
   56cd8:	mvn	r0, #0
   56cdc:	mov	r3, #0
   56ce0:	str	r0, [sp, #24]
   56ce4:	ldr	r1, [sp, #24]
   56ce8:	bl	77854 <__assert_fail@plt+0x64c9c>
   56cec:	str	r0, [sp, #32]
   56cf0:	str	r1, [sp, #28]
   56cf4:	b	56cf8 <__assert_fail@plt+0x44140>
   56cf8:	ldr	r0, [sp, #28]
   56cfc:	ldr	r1, [sp, #32]
   56d00:	ldr	r2, [fp, #-12]
   56d04:	mvn	r2, r2
   56d08:	subs	r1, r2, r1
   56d0c:	rscs	r0, r0, #0
   56d10:	str	r1, [sp, #20]
   56d14:	str	r0, [sp, #16]
   56d18:	bcs	56e50 <__assert_fail@plt+0x44298>
   56d1c:	b	56e64 <__assert_fail@plt+0x442ac>
   56d20:	b	56d28 <__assert_fail@plt+0x44170>
   56d24:	b	56d2c <__assert_fail@plt+0x44174>
   56d28:	b	56d7c <__assert_fail@plt+0x441c4>
   56d2c:	ldr	r0, [fp, #-16]
   56d30:	cmn	r0, #1
   56d34:	bne	56d7c <__assert_fail@plt+0x441c4>
   56d38:	b	56d54 <__assert_fail@plt+0x4419c>
   56d3c:	ldr	r0, [fp, #-12]
   56d40:	add	r0, r0, #0
   56d44:	movw	r1, #0
   56d48:	cmp	r1, r0
   56d4c:	bcc	56e50 <__assert_fail@plt+0x44298>
   56d50:	b	56e64 <__assert_fail@plt+0x442ac>
   56d54:	ldr	r0, [fp, #-12]
   56d58:	movw	r1, #0
   56d5c:	cmp	r1, r0
   56d60:	bcs	56e64 <__assert_fail@plt+0x442ac>
   56d64:	ldr	r0, [fp, #-12]
   56d68:	sub	r0, r0, #1
   56d6c:	mvn	r1, #0
   56d70:	cmp	r1, r0
   56d74:	bcc	56e50 <__assert_fail@plt+0x44298>
   56d78:	b	56e64 <__assert_fail@plt+0x442ac>
   56d7c:	ldr	r0, [fp, #-16]
   56d80:	movw	r1, #0
   56d84:	udiv	r0, r1, r0
   56d88:	ldr	r1, [fp, #-12]
   56d8c:	cmp	r0, r1
   56d90:	bcc	56e50 <__assert_fail@plt+0x44298>
   56d94:	b	56e64 <__assert_fail@plt+0x442ac>
   56d98:	ldr	r0, [fp, #-16]
   56d9c:	cmp	r0, #0
   56da0:	bne	56da8 <__assert_fail@plt+0x441f0>
   56da4:	b	56e64 <__assert_fail@plt+0x442ac>
   56da8:	ldr	r0, [fp, #-12]
   56dac:	cmp	r0, #0
   56db0:	bcs	56e1c <__assert_fail@plt+0x44264>
   56db4:	b	56dbc <__assert_fail@plt+0x44204>
   56db8:	b	56dc0 <__assert_fail@plt+0x44208>
   56dbc:	b	56e00 <__assert_fail@plt+0x44248>
   56dc0:	ldr	r0, [fp, #-12]
   56dc4:	cmn	r0, #1
   56dc8:	bne	56e00 <__assert_fail@plt+0x44248>
   56dcc:	b	56de8 <__assert_fail@plt+0x44230>
   56dd0:	ldr	r0, [fp, #-16]
   56dd4:	add	r0, r0, #0
   56dd8:	movw	r1, #0
   56ddc:	cmp	r1, r0
   56de0:	bcc	56e50 <__assert_fail@plt+0x44298>
   56de4:	b	56e64 <__assert_fail@plt+0x442ac>
   56de8:	ldr	r0, [fp, #-16]
   56dec:	sub	r0, r0, #1
   56df0:	mvn	r1, #0
   56df4:	cmp	r1, r0
   56df8:	bcc	56e50 <__assert_fail@plt+0x44298>
   56dfc:	b	56e64 <__assert_fail@plt+0x442ac>
   56e00:	ldr	r0, [fp, #-12]
   56e04:	movw	r1, #0
   56e08:	udiv	r0, r1, r0
   56e0c:	ldr	r1, [fp, #-16]
   56e10:	cmp	r0, r1
   56e14:	bcc	56e50 <__assert_fail@plt+0x44298>
   56e18:	b	56e64 <__assert_fail@plt+0x442ac>
   56e1c:	ldr	r2, [fp, #-16]
   56e20:	mvn	r0, #0
   56e24:	mov	r3, #0
   56e28:	str	r0, [sp, #12]
   56e2c:	ldr	r1, [sp, #12]
   56e30:	bl	77854 <__assert_fail@plt+0x64c9c>
   56e34:	ldr	r2, [fp, #-12]
   56e38:	subs	r0, r0, r2
   56e3c:	sbcs	r1, r1, #0
   56e40:	str	r0, [sp, #8]
   56e44:	str	r1, [sp, #4]
   56e48:	bcs	56e64 <__assert_fail@plt+0x442ac>
   56e4c:	b	56e50 <__assert_fail@plt+0x44298>
   56e50:	ldr	r0, [fp, #-12]
   56e54:	ldr	r1, [fp, #-16]
   56e58:	mul	r0, r0, r1
   56e5c:	str	r0, [fp, #-20]	; 0xffffffec
   56e60:	b	56e78 <__assert_fail@plt+0x442c0>
   56e64:	ldr	r0, [fp, #-12]
   56e68:	ldr	r1, [fp, #-16]
   56e6c:	mul	r0, r0, r1
   56e70:	str	r0, [fp, #-20]	; 0xffffffec
   56e74:	b	56e90 <__assert_fail@plt+0x442d8>
   56e78:	bl	128d0 <__errno_location@plt>
   56e7c:	movw	lr, #12
   56e80:	str	lr, [r0]
   56e84:	movw	r0, #0
   56e88:	str	r0, [fp, #-4]
   56e8c:	b	56ea0 <__assert_fail@plt+0x442e8>
   56e90:	ldr	r0, [fp, #-8]
   56e94:	ldr	r1, [fp, #-20]	; 0xffffffec
   56e98:	bl	55a84 <__assert_fail@plt+0x42ecc>
   56e9c:	str	r0, [fp, #-4]
   56ea0:	ldr	r0, [fp, #-4]
   56ea4:	mov	sp, fp
   56ea8:	pop	{fp, pc}
   56eac:	svcvc	0x00ffffff
   56eb0:	andhi	r0, r0, r0
   56eb4:			; <UNDEFINED> instruction: 0xffff8000
   56eb8:	push	{fp, lr}
   56ebc:	mov	fp, sp
   56ec0:	sub	sp, sp, #24
   56ec4:	str	r0, [fp, #-8]
   56ec8:	str	r1, [sp, #12]
   56ecc:	str	r2, [sp, #8]
   56ed0:	movw	r0, #220	; 0xdc
   56ed4:	movt	r0, #9
   56ed8:	ldr	r0, [r0]
   56edc:	and	r0, r0, #33554432	; 0x2000000
   56ee0:	ldr	r1, [sp, #8]
   56ee4:	ldrb	r2, [r1, #28]
   56ee8:	and	r2, r2, #239	; 0xef
   56eec:	orr	r0, r2, r0, lsr #21
   56ef0:	strb	r0, [r1, #28]
   56ef4:	ldr	r0, [sp, #8]
   56ef8:	ldrb	r1, [r0, #28]
   56efc:	and	r1, r1, #127	; 0x7f
   56f00:	movw	r2, #128	; 0x80
   56f04:	orr	r1, r1, r2
   56f08:	strb	r1, [r0, #28]
   56f0c:	ldr	r0, [sp, #8]
   56f10:	ldr	r1, [fp, #-8]
   56f14:	ldr	r2, [sp, #12]
   56f18:	movw	r3, #220	; 0xdc
   56f1c:	movt	r3, #9
   56f20:	ldr	r3, [r3]
   56f24:	bl	56f78 <__assert_fail@plt+0x443c0>
   56f28:	str	r0, [sp, #4]
   56f2c:	ldr	r0, [sp, #4]
   56f30:	cmp	r0, #0
   56f34:	bne	56f44 <__assert_fail@plt+0x4438c>
   56f38:	movw	r0, #0
   56f3c:	str	r0, [fp, #-4]
   56f40:	b	56f6c <__assert_fail@plt+0x443b4>
   56f44:	ldr	r0, [sp, #4]
   56f48:	movw	r1, #59152	; 0xe710
   56f4c:	movt	r1, #7
   56f50:	add	r0, r1, r0, lsl #2
   56f54:	ldr	r0, [r0]
   56f58:	movw	r1, #58768	; 0xe590
   56f5c:	movt	r1, #7
   56f60:	add	r0, r1, r0
   56f64:	bl	12864 <gettext@plt>
   56f68:	str	r0, [fp, #-4]
   56f6c:	ldr	r0, [fp, #-4]
   56f70:	mov	sp, fp
   56f74:	pop	{fp, pc}
   56f78:	push	{r4, sl, fp, lr}
   56f7c:	add	fp, sp, #8
   56f80:	sub	sp, sp, #144	; 0x90
   56f84:	str	r0, [fp, #-16]
   56f88:	str	r1, [fp, #-20]	; 0xffffffec
   56f8c:	str	r2, [fp, #-24]	; 0xffffffe8
   56f90:	str	r3, [fp, #-28]	; 0xffffffe4
   56f94:	mov	r0, #0
   56f98:	str	r0, [fp, #-32]	; 0xffffffe0
   56f9c:	ldr	r1, [fp, #-16]
   56fa0:	ldrb	r2, [r1, #28]
   56fa4:	and	r2, r2, #247	; 0xf7
   56fa8:	strb	r2, [r1, #28]
   56fac:	ldr	r1, [fp, #-28]	; 0xffffffe4
   56fb0:	ldr	r2, [fp, #-16]
   56fb4:	str	r1, [r2, #12]
   56fb8:	ldr	r1, [fp, #-16]
   56fbc:	ldrb	r2, [r1, #28]
   56fc0:	and	r2, r2, #191	; 0xbf
   56fc4:	strb	r2, [r1, #28]
   56fc8:	ldr	r1, [fp, #-16]
   56fcc:	ldrb	r2, [r1, #28]
   56fd0:	and	r2, r2, #223	; 0xdf
   56fd4:	strb	r2, [r1, #28]
   56fd8:	ldr	r1, [fp, #-16]
   56fdc:	str	r0, [r1, #8]
   56fe0:	ldr	r1, [fp, #-16]
   56fe4:	str	r0, [r1, #24]
   56fe8:	ldr	r0, [fp, #-16]
   56fec:	ldrb	r1, [r0, #28]
   56ff0:	and	r1, r1, #254	; 0xfe
   56ff4:	strb	r1, [r0, #28]
   56ff8:	ldr	r0, [fp, #-16]
   56ffc:	ldrb	r1, [r0, #28]
   57000:	bic	r1, r1, #6
   57004:	strb	r1, [r0, #28]
   57008:	ldr	r0, [fp, #-16]
   5700c:	ldr	r0, [r0]
   57010:	str	r0, [fp, #-36]	; 0xffffffdc
   57014:	ldr	r0, [fp, #-16]
   57018:	ldr	r0, [r0, #4]
   5701c:	cmp	r0, #160	; 0xa0
   57020:	bcs	5706c <__assert_fail@plt+0x444b4>
   57024:	ldr	r0, [fp, #-16]
   57028:	ldr	r0, [r0]
   5702c:	movw	r1, #160	; 0xa0
   57030:	bl	55a84 <__assert_fail@plt+0x42ecc>
   57034:	str	r0, [fp, #-36]	; 0xffffffdc
   57038:	ldr	r0, [fp, #-36]	; 0xffffffdc
   5703c:	movw	r1, #0
   57040:	cmp	r0, r1
   57044:	bne	57054 <__assert_fail@plt+0x4449c>
   57048:	movw	r0, #12
   5704c:	str	r0, [fp, #-12]
   57050:	b	57344 <__assert_fail@plt+0x4478c>
   57054:	ldr	r0, [fp, #-16]
   57058:	movw	r1, #160	; 0xa0
   5705c:	str	r1, [r0, #4]
   57060:	ldr	r0, [fp, #-36]	; 0xffffffdc
   57064:	ldr	r1, [fp, #-16]
   57068:	str	r0, [r1]
   5706c:	ldr	r0, [fp, #-16]
   57070:	movw	r1, #160	; 0xa0
   57074:	str	r1, [r0, #8]
   57078:	ldr	r0, [fp, #-36]	; 0xffffffdc
   5707c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   57080:	bl	59d7c <__assert_fail@plt+0x471c4>
   57084:	str	r0, [fp, #-32]	; 0xffffffe0
   57088:	ldr	r0, [fp, #-32]	; 0xffffffe0
   5708c:	cmp	r0, #0
   57090:	movw	r0, #0
   57094:	str	r0, [sp, #28]
   57098:	bne	570fc <__assert_fail@plt+0x44544>
   5709c:	movw	r0, #10532	; 0x2924
   570a0:	movt	r0, #1
   570a4:	cmp	r0, #0
   570a8:	bne	570c4 <__assert_fail@plt+0x4450c>
   570ac:	b	570b0 <__assert_fail@plt+0x444f8>
   570b0:	movw	r0, #9620	; 0x2594
   570b4:	movt	r0, #1
   570b8:	cmp	r0, #0
   570bc:	beq	570dc <__assert_fail@plt+0x44524>
   570c0:	b	570c4 <__assert_fail@plt+0x4450c>
   570c4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   570c8:	add	r0, r0, #136	; 0x88
   570cc:	movw	r1, #0
   570d0:	bl	125e8 <pthread_mutex_init@plt>
   570d4:	str	r0, [sp, #24]
   570d8:	b	570e8 <__assert_fail@plt+0x44530>
   570dc:	movw	r0, #0
   570e0:	str	r0, [sp, #24]
   570e4:	b	570e8 <__assert_fail@plt+0x44530>
   570e8:	ldr	r0, [sp, #24]
   570ec:	cmp	r0, #0
   570f0:	movw	r0, #0
   570f4:	movne	r0, #1
   570f8:	str	r0, [sp, #28]
   570fc:	ldr	r0, [sp, #28]
   57100:	tst	r0, #1
   57104:	beq	57110 <__assert_fail@plt+0x44558>
   57108:	movw	r0, #12
   5710c:	str	r0, [fp, #-32]	; 0xffffffe0
   57110:	ldr	r0, [fp, #-32]	; 0xffffffe0
   57114:	cmp	r0, #0
   57118:	beq	57144 <__assert_fail@plt+0x4458c>
   5711c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   57120:	bl	57f8c <__assert_fail@plt+0x453d4>
   57124:	ldr	r0, [fp, #-16]
   57128:	movw	lr, #0
   5712c:	str	lr, [r0]
   57130:	ldr	r0, [fp, #-16]
   57134:	str	lr, [r0, #4]
   57138:	ldr	r0, [fp, #-32]	; 0xffffffe0
   5713c:	str	r0, [fp, #-12]
   57140:	b	57344 <__assert_fail@plt+0x4478c>
   57144:	ldr	r1, [fp, #-20]	; 0xffffffec
   57148:	ldr	r2, [fp, #-24]	; 0xffffffe8
   5714c:	ldr	r0, [fp, #-16]
   57150:	ldr	r3, [r0, #20]
   57154:	ldr	r0, [fp, #-28]	; 0xffffffe4
   57158:	and	r0, r0, #4194304	; 0x400000
   5715c:	cmp	r0, #0
   57160:	movw	r0, #0
   57164:	movne	r0, #1
   57168:	ldr	ip, [fp, #-36]	; 0xffffffdc
   5716c:	add	lr, sp, #32
   57170:	str	r0, [sp, #20]
   57174:	mov	r0, lr
   57178:	ldr	lr, [sp, #20]
   5717c:	and	r4, lr, #1
   57180:	str	r4, [sp]
   57184:	str	ip, [sp, #4]
   57188:	bl	5a388 <__assert_fail@plt+0x477d0>
   5718c:	str	r0, [fp, #-32]	; 0xffffffe0
   57190:	ldr	r0, [fp, #-32]	; 0xffffffe0
   57194:	cmp	r0, #0
   57198:	beq	57218 <__assert_fail@plt+0x44660>
   5719c:	b	571a0 <__assert_fail@plt+0x445e8>
   571a0:	ldr	r0, [fp, #-16]
   571a4:	bl	5a59c <__assert_fail@plt+0x479e4>
   571a8:	add	r0, sp, #32
   571ac:	bl	5a634 <__assert_fail@plt+0x47a7c>
   571b0:	movw	r0, #10532	; 0x2924
   571b4:	movt	r0, #1
   571b8:	cmp	r0, #0
   571bc:	bne	571d8 <__assert_fail@plt+0x44620>
   571c0:	b	571c4 <__assert_fail@plt+0x4460c>
   571c4:	movw	r0, #9620	; 0x2594
   571c8:	movt	r0, #1
   571cc:	cmp	r0, #0
   571d0:	beq	571ec <__assert_fail@plt+0x44634>
   571d4:	b	571d8 <__assert_fail@plt+0x44620>
   571d8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   571dc:	add	r0, r0, #136	; 0x88
   571e0:	bl	12510 <pthread_mutex_destroy@plt>
   571e4:	str	r0, [sp, #16]
   571e8:	b	571f0 <__assert_fail@plt+0x44638>
   571ec:	b	571f0 <__assert_fail@plt+0x44638>
   571f0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   571f4:	bl	57f8c <__assert_fail@plt+0x453d4>
   571f8:	ldr	r0, [fp, #-16]
   571fc:	movw	lr, #0
   57200:	str	lr, [r0]
   57204:	ldr	r0, [fp, #-16]
   57208:	str	lr, [r0, #4]
   5720c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   57210:	str	r0, [fp, #-12]
   57214:	b	57344 <__assert_fail@plt+0x4478c>
   57218:	ldr	r0, [fp, #-16]
   5721c:	movw	r1, #0
   57220:	str	r1, [r0, #24]
   57224:	ldr	r1, [fp, #-16]
   57228:	ldr	r2, [fp, #-28]	; 0xffffffe4
   5722c:	add	r0, sp, #32
   57230:	sub	r3, fp, #32
   57234:	bl	5a680 <__assert_fail@plt+0x47ac8>
   57238:	ldr	r1, [fp, #-36]	; 0xffffffdc
   5723c:	str	r0, [r1, #52]	; 0x34
   57240:	ldr	r0, [fp, #-36]	; 0xffffffdc
   57244:	ldr	r0, [r0, #52]	; 0x34
   57248:	movw	r1, #0
   5724c:	cmp	r0, r1
   57250:	bne	57258 <__assert_fail@plt+0x446a0>
   57254:	b	571a0 <__assert_fail@plt+0x445e8>
   57258:	ldr	r0, [fp, #-16]
   5725c:	bl	5a7fc <__assert_fail@plt+0x47c44>
   57260:	str	r0, [fp, #-32]	; 0xffffffe0
   57264:	ldr	r0, [fp, #-32]	; 0xffffffe0
   57268:	cmp	r0, #0
   5726c:	beq	57274 <__assert_fail@plt+0x446bc>
   57270:	b	571a0 <__assert_fail@plt+0x445e8>
   57274:	ldr	r0, [fp, #-36]	; 0xffffffdc
   57278:	ldrb	r0, [r0, #88]	; 0x58
   5727c:	ubfx	r0, r0, #2, #1
   57280:	and	r0, r0, #255	; 0xff
   57284:	cmp	r0, #0
   57288:	beq	572b8 <__assert_fail@plt+0x44700>
   5728c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   57290:	and	r0, r0, #4194304	; 0x400000
   57294:	cmp	r0, #0
   57298:	bne	572b8 <__assert_fail@plt+0x44700>
   5729c:	ldr	r0, [fp, #-16]
   572a0:	ldr	r0, [r0, #20]
   572a4:	movw	r1, #0
   572a8:	cmp	r0, r1
   572ac:	bne	572b8 <__assert_fail@plt+0x44700>
   572b0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   572b4:	bl	5abd4 <__assert_fail@plt+0x4801c>
   572b8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   572bc:	bl	5aee0 <__assert_fail@plt+0x48328>
   572c0:	str	r0, [fp, #-32]	; 0xffffffe0
   572c4:	ldr	r0, [fp, #-16]
   572c8:	bl	5a59c <__assert_fail@plt+0x479e4>
   572cc:	add	r0, sp, #32
   572d0:	bl	5a634 <__assert_fail@plt+0x47a7c>
   572d4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   572d8:	cmp	r0, #0
   572dc:	beq	5733c <__assert_fail@plt+0x44784>
   572e0:	movw	r0, #10532	; 0x2924
   572e4:	movt	r0, #1
   572e8:	cmp	r0, #0
   572ec:	bne	57308 <__assert_fail@plt+0x44750>
   572f0:	b	572f4 <__assert_fail@plt+0x4473c>
   572f4:	movw	r0, #9620	; 0x2594
   572f8:	movt	r0, #1
   572fc:	cmp	r0, #0
   57300:	beq	5731c <__assert_fail@plt+0x44764>
   57304:	b	57308 <__assert_fail@plt+0x44750>
   57308:	ldr	r0, [fp, #-36]	; 0xffffffdc
   5730c:	add	r0, r0, #136	; 0x88
   57310:	bl	12510 <pthread_mutex_destroy@plt>
   57314:	str	r0, [sp, #12]
   57318:	b	57320 <__assert_fail@plt+0x44768>
   5731c:	b	57320 <__assert_fail@plt+0x44768>
   57320:	ldr	r0, [fp, #-36]	; 0xffffffdc
   57324:	bl	57f8c <__assert_fail@plt+0x453d4>
   57328:	ldr	r0, [fp, #-16]
   5732c:	movw	lr, #0
   57330:	str	lr, [r0]
   57334:	ldr	r0, [fp, #-16]
   57338:	str	lr, [r0, #4]
   5733c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   57340:	str	r0, [fp, #-12]
   57344:	ldr	r0, [fp, #-12]
   57348:	sub	sp, fp, #8
   5734c:	pop	{r4, sl, fp, pc}
   57350:	sub	sp, sp, #8
   57354:	str	r0, [sp, #4]
   57358:	movw	r0, #220	; 0xdc
   5735c:	movt	r0, #9
   57360:	ldr	r1, [r0]
   57364:	str	r1, [sp]
   57368:	ldr	r1, [sp, #4]
   5736c:	str	r1, [r0]
   57370:	ldr	r0, [sp]
   57374:	add	sp, sp, #8
   57378:	bx	lr
   5737c:	push	{fp, lr}
   57380:	mov	fp, sp
   57384:	sub	sp, sp, #16
   57388:	str	r0, [fp, #-4]
   5738c:	ldr	r0, [fp, #-4]
   57390:	ldr	r0, [r0]
   57394:	str	r0, [sp, #8]
   57398:	ldr	r0, [fp, #-4]
   5739c:	ldr	r0, [r0, #16]
   573a0:	str	r0, [sp, #4]
   573a4:	ldr	r0, [sp, #4]
   573a8:	movw	r1, #0
   573ac:	and	r1, r1, #255	; 0xff
   573b0:	movw	r2, #256	; 0x100
   573b4:	bl	12900 <memset@plt>
   573b8:	ldr	r0, [fp, #-4]
   573bc:	ldr	r1, [sp, #8]
   573c0:	ldr	r1, [r1, #36]	; 0x24
   573c4:	ldr	r2, [sp, #4]
   573c8:	bl	57474 <__assert_fail@plt+0x448bc>
   573cc:	ldr	r0, [sp, #8]
   573d0:	ldr	r0, [r0, #36]	; 0x24
   573d4:	ldr	r1, [sp, #8]
   573d8:	ldr	r1, [r1, #40]	; 0x28
   573dc:	cmp	r0, r1
   573e0:	beq	573f8 <__assert_fail@plt+0x44840>
   573e4:	ldr	r0, [fp, #-4]
   573e8:	ldr	r1, [sp, #8]
   573ec:	ldr	r1, [r1, #40]	; 0x28
   573f0:	ldr	r2, [sp, #4]
   573f4:	bl	57474 <__assert_fail@plt+0x448bc>
   573f8:	ldr	r0, [sp, #8]
   573fc:	ldr	r0, [r0, #36]	; 0x24
   57400:	ldr	r1, [sp, #8]
   57404:	ldr	r1, [r1, #44]	; 0x2c
   57408:	cmp	r0, r1
   5740c:	beq	57424 <__assert_fail@plt+0x4486c>
   57410:	ldr	r0, [fp, #-4]
   57414:	ldr	r1, [sp, #8]
   57418:	ldr	r1, [r1, #44]	; 0x2c
   5741c:	ldr	r2, [sp, #4]
   57420:	bl	57474 <__assert_fail@plt+0x448bc>
   57424:	ldr	r0, [sp, #8]
   57428:	ldr	r0, [r0, #36]	; 0x24
   5742c:	ldr	r1, [sp, #8]
   57430:	ldr	r1, [r1, #48]	; 0x30
   57434:	cmp	r0, r1
   57438:	beq	57450 <__assert_fail@plt+0x44898>
   5743c:	ldr	r0, [fp, #-4]
   57440:	ldr	r1, [sp, #8]
   57444:	ldr	r1, [r1, #48]	; 0x30
   57448:	ldr	r2, [sp, #4]
   5744c:	bl	57474 <__assert_fail@plt+0x448bc>
   57450:	ldr	r0, [fp, #-4]
   57454:	ldrb	r1, [r0, #28]
   57458:	bic	r1, r1, #8
   5745c:	movw	r2, #8
   57460:	orr	r1, r1, r2
   57464:	strb	r1, [r0, #28]
   57468:	movw	r0, #0
   5746c:	mov	sp, fp
   57470:	pop	{fp, pc}
   57474:	push	{r4, r5, fp, lr}
   57478:	add	fp, sp, #8
   5747c:	sub	sp, sp, #504	; 0x1f8
   57480:	str	r0, [fp, #-84]	; 0xffffffac
   57484:	str	r1, [fp, #-88]	; 0xffffffa8
   57488:	str	r2, [fp, #-92]	; 0xffffffa4
   5748c:	ldr	r0, [fp, #-84]	; 0xffffffac
   57490:	ldr	r0, [r0]
   57494:	str	r0, [fp, #-96]	; 0xffffffa0
   57498:	ldr	r0, [fp, #-96]	; 0xffffffa0
   5749c:	ldr	r0, [r0, #92]	; 0x5c
   574a0:	cmp	r0, #1
   574a4:	movw	r0, #0
   574a8:	str	r0, [sp, #60]	; 0x3c
   574ac:	bne	574cc <__assert_fail@plt+0x44914>
   574b0:	ldr	r0, [fp, #-84]	; 0xffffffac
   574b4:	ldr	r0, [r0, #12]
   574b8:	and	r0, r0, #4194304	; 0x400000
   574bc:	cmp	r0, #0
   574c0:	movw	r0, #0
   574c4:	movne	r0, #1
   574c8:	str	r0, [sp, #60]	; 0x3c
   574cc:	ldr	r0, [sp, #60]	; 0x3c
   574d0:	and	r0, r0, #1
   574d4:	strb	r0, [fp, #-101]	; 0xffffff9b
   574d8:	movw	r0, #0
   574dc:	str	r0, [fp, #-100]	; 0xffffff9c
   574e0:	ldr	r0, [fp, #-100]	; 0xffffff9c
   574e4:	ldr	r1, [fp, #-88]	; 0xffffffa8
   574e8:	ldr	r1, [r1, #8]
   574ec:	cmp	r0, r1
   574f0:	bge	57bf0 <__assert_fail@plt+0x45038>
   574f4:	ldr	r0, [fp, #-88]	; 0xffffffa8
   574f8:	ldr	r0, [r0, #12]
   574fc:	ldr	r1, [fp, #-100]	; 0xffffff9c
   57500:	ldr	r0, [r0, r1, lsl #2]
   57504:	str	r0, [fp, #-108]	; 0xffffff94
   57508:	ldr	r0, [fp, #-96]	; 0xffffffa0
   5750c:	ldr	r0, [r0]
   57510:	ldr	r1, [fp, #-108]	; 0xffffff94
   57514:	add	r0, r0, r1, lsl #3
   57518:	ldr	r0, [r0, #4]
   5751c:	and	r0, r0, #255	; 0xff
   57520:	str	r0, [fp, #-112]	; 0xffffff90
   57524:	ldr	r0, [fp, #-112]	; 0xffffff90
   57528:	cmp	r0, #1
   5752c:	bne	57790 <__assert_fail@plt+0x44bd8>
   57530:	ldr	r0, [fp, #-92]	; 0xffffffa4
   57534:	ldrb	r1, [fp, #-101]	; 0xffffff9b
   57538:	ldr	r2, [fp, #-96]	; 0xffffffa0
   5753c:	ldr	r2, [r2]
   57540:	ldr	r3, [fp, #-108]	; 0xffffff94
   57544:	add	r2, r2, r3, lsl #3
   57548:	ldrb	r2, [r2]
   5754c:	str	r0, [fp, #-72]	; 0xffffffb8
   57550:	and	r0, r1, #1
   57554:	strb	r0, [fp, #-73]	; 0xffffffb7
   57558:	str	r2, [fp, #-80]	; 0xffffffb0
   5755c:	ldr	r0, [fp, #-72]	; 0xffffffb8
   57560:	ldr	r1, [fp, #-80]	; 0xffffffb0
   57564:	add	r0, r0, r1
   57568:	movw	r1, #1
   5756c:	strb	r1, [r0]
   57570:	ldrb	r0, [fp, #-73]	; 0xffffffb7
   57574:	tst	r0, #1
   57578:	beq	575a0 <__assert_fail@plt+0x449e8>
   5757c:	ldr	r0, [fp, #-72]	; 0xffffffb8
   57580:	ldr	r1, [fp, #-80]	; 0xffffffb0
   57584:	str	r0, [sp, #56]	; 0x38
   57588:	mov	r0, r1
   5758c:	bl	125dc <tolower@plt>
   57590:	ldr	r1, [sp, #56]	; 0x38
   57594:	add	r0, r1, r0
   57598:	movw	r1, #1
   5759c:	strb	r1, [r0]
   575a0:	ldr	r0, [fp, #-84]	; 0xffffffac
   575a4:	ldr	r0, [r0, #12]
   575a8:	and	r0, r0, #4194304	; 0x400000
   575ac:	cmp	r0, #0
   575b0:	beq	5778c <__assert_fail@plt+0x44bd4>
   575b4:	ldr	r0, [fp, #-96]	; 0xffffffa0
   575b8:	ldr	r0, [r0, #92]	; 0x5c
   575bc:	cmp	r0, #1
   575c0:	ble	5778c <__assert_fail@plt+0x44bd4>
   575c4:	sub	r0, fp, #128	; 0x80
   575c8:	str	r0, [fp, #-132]	; 0xffffff7c
   575cc:	ldr	r0, [fp, #-96]	; 0xffffffa0
   575d0:	ldr	r0, [r0]
   575d4:	ldr	r1, [fp, #-108]	; 0xffffff94
   575d8:	add	r0, r0, r1, lsl #3
   575dc:	ldrb	r0, [r0]
   575e0:	ldr	r1, [fp, #-132]	; 0xffffff7c
   575e4:	add	r2, r1, #1
   575e8:	str	r2, [fp, #-132]	; 0xffffff7c
   575ec:	strb	r0, [r1]
   575f0:	ldr	r0, [fp, #-108]	; 0xffffff94
   575f4:	add	r0, r0, #1
   575f8:	str	r0, [fp, #-108]	; 0xffffff94
   575fc:	ldr	r1, [fp, #-96]	; 0xffffffa0
   57600:	ldr	r1, [r1, #8]
   57604:	cmp	r0, r1
   57608:	movw	r0, #0
   5760c:	str	r0, [sp, #52]	; 0x34
   57610:	bcs	57668 <__assert_fail@plt+0x44ab0>
   57614:	ldr	r0, [fp, #-96]	; 0xffffffa0
   57618:	ldr	r0, [r0]
   5761c:	ldr	r1, [fp, #-108]	; 0xffffff94
   57620:	add	r0, r0, r1, lsl #3
   57624:	ldr	r0, [r0, #4]
   57628:	and	r0, r0, #255	; 0xff
   5762c:	cmp	r0, #1
   57630:	movw	r0, #0
   57634:	str	r0, [sp, #52]	; 0x34
   57638:	bne	57668 <__assert_fail@plt+0x44ab0>
   5763c:	ldr	r0, [fp, #-96]	; 0xffffffa0
   57640:	ldr	r0, [r0]
   57644:	ldr	r1, [fp, #-108]	; 0xffffff94
   57648:	add	r0, r0, r1, lsl #3
   5764c:	ldr	r0, [r0, #4]
   57650:	lsr	r0, r0, #21
   57654:	and	r0, r0, #1
   57658:	cmp	r0, #0
   5765c:	movw	r0, #0
   57660:	movne	r0, #1
   57664:	str	r0, [sp, #52]	; 0x34
   57668:	ldr	r0, [sp, #52]	; 0x34
   5766c:	tst	r0, #1
   57670:	beq	5769c <__assert_fail@plt+0x44ae4>
   57674:	ldr	r0, [fp, #-96]	; 0xffffffa0
   57678:	ldr	r0, [r0]
   5767c:	ldr	r1, [fp, #-108]	; 0xffffff94
   57680:	add	r0, r0, r1, lsl #3
   57684:	ldrb	r0, [r0]
   57688:	ldr	r1, [fp, #-132]	; 0xffffff7c
   5768c:	add	r2, r1, #1
   57690:	str	r2, [fp, #-132]	; 0xffffff7c
   57694:	strb	r0, [r1]
   57698:	b	575f0 <__assert_fail@plt+0x44a38>
   5769c:	sub	r0, fp, #128	; 0x80
   576a0:	sub	r1, fp, #144	; 0x90
   576a4:	mov	r2, r1
   576a8:	str	r0, [sp, #48]	; 0x30
   576ac:	mov	r0, r2
   576b0:	movw	r2, #0
   576b4:	and	r2, r2, #255	; 0xff
   576b8:	str	r1, [sp, #44]	; 0x2c
   576bc:	mov	r1, r2
   576c0:	movw	r2, #8
   576c4:	bl	12900 <memset@plt>
   576c8:	ldr	r0, [fp, #-132]	; 0xffffff7c
   576cc:	ldr	r1, [sp, #48]	; 0x30
   576d0:	sub	r2, r0, r1
   576d4:	sub	r0, fp, #136	; 0x88
   576d8:	ldr	r3, [sp, #44]	; 0x2c
   576dc:	bl	54a1c <__assert_fail@plt+0x41e64>
   576e0:	sub	r1, fp, #128	; 0x80
   576e4:	ldr	r2, [fp, #-132]	; 0xffffff7c
   576e8:	sub	r1, r2, r1
   576ec:	cmp	r0, r1
   576f0:	bne	57788 <__assert_fail@plt+0x44bd0>
   576f4:	sub	r0, fp, #128	; 0x80
   576f8:	ldr	r1, [fp, #-136]	; 0xffffff78
   576fc:	str	r0, [sp, #40]	; 0x28
   57700:	mov	r0, r1
   57704:	bl	125f4 <towlower@plt>
   57708:	ldr	r1, [sp, #40]	; 0x28
   5770c:	str	r0, [sp, #36]	; 0x24
   57710:	mov	r0, r1
   57714:	ldr	r1, [sp, #36]	; 0x24
   57718:	sub	r2, fp, #144	; 0x90
   5771c:	bl	1248c <wcrtomb@plt>
   57720:	cmn	r0, #1
   57724:	beq	57788 <__assert_fail@plt+0x44bd0>
   57728:	ldr	r0, [fp, #-92]	; 0xffffffa4
   5772c:	ldrb	r1, [fp, #-128]	; 0xffffff80
   57730:	str	r0, [fp, #-60]	; 0xffffffc4
   57734:	movw	r0, #0
   57738:	strb	r0, [fp, #-61]	; 0xffffffc3
   5773c:	str	r1, [fp, #-68]	; 0xffffffbc
   57740:	ldr	r0, [fp, #-60]	; 0xffffffc4
   57744:	ldr	r1, [fp, #-68]	; 0xffffffbc
   57748:	add	r0, r0, r1
   5774c:	movw	r1, #1
   57750:	strb	r1, [r0]
   57754:	ldrb	r0, [fp, #-61]	; 0xffffffc3
   57758:	tst	r0, #1
   5775c:	beq	57784 <__assert_fail@plt+0x44bcc>
   57760:	ldr	r0, [fp, #-60]	; 0xffffffc4
   57764:	ldr	r1, [fp, #-68]	; 0xffffffbc
   57768:	str	r0, [sp, #32]
   5776c:	mov	r0, r1
   57770:	bl	125dc <tolower@plt>
   57774:	ldr	r1, [sp, #32]
   57778:	add	r0, r1, r0
   5777c:	movw	r1, #1
   57780:	strb	r1, [r0]
   57784:	b	57788 <__assert_fail@plt+0x44bd0>
   57788:	b	5778c <__assert_fail@plt+0x44bd4>
   5778c:	b	57bdc <__assert_fail@plt+0x45024>
   57790:	ldr	r0, [fp, #-112]	; 0xffffff90
   57794:	cmp	r0, #3
   57798:	bne	578a0 <__assert_fail@plt+0x44ce8>
   5779c:	movw	r0, #0
   577a0:	str	r0, [fp, #-148]	; 0xffffff6c
   577a4:	str	r0, [fp, #-152]	; 0xffffff68
   577a8:	ldr	r0, [fp, #-148]	; 0xffffff6c
   577ac:	cmp	r0, #8
   577b0:	bge	5789c <__assert_fail@plt+0x44ce4>
   577b4:	ldr	r0, [fp, #-96]	; 0xffffffa0
   577b8:	ldr	r0, [r0]
   577bc:	ldr	r1, [fp, #-108]	; 0xffffff94
   577c0:	ldr	r0, [r0, r1, lsl #3]
   577c4:	ldr	r1, [fp, #-148]	; 0xffffff6c
   577c8:	add	r0, r0, r1, lsl #2
   577cc:	ldr	r0, [r0]
   577d0:	str	r0, [fp, #-160]	; 0xffffff60
   577d4:	movw	r0, #0
   577d8:	str	r0, [fp, #-156]	; 0xffffff64
   577dc:	ldr	r0, [fp, #-156]	; 0xffffff64
   577e0:	cmp	r0, #32
   577e4:	bge	57888 <__assert_fail@plt+0x44cd0>
   577e8:	ldr	r0, [fp, #-160]	; 0xffffff60
   577ec:	ldr	r1, [fp, #-156]	; 0xffffff64
   577f0:	movw	r2, #1
   577f4:	lsl	r1, r2, r1
   577f8:	and	r0, r0, r1
   577fc:	cmp	r0, #0
   57800:	beq	57868 <__assert_fail@plt+0x44cb0>
   57804:	ldr	r0, [fp, #-92]	; 0xffffffa4
   57808:	ldrb	r1, [fp, #-101]	; 0xffffff9b
   5780c:	ldr	r2, [fp, #-152]	; 0xffffff68
   57810:	str	r0, [fp, #-48]	; 0xffffffd0
   57814:	and	r0, r1, #1
   57818:	strb	r0, [fp, #-49]	; 0xffffffcf
   5781c:	str	r2, [fp, #-56]	; 0xffffffc8
   57820:	ldr	r0, [fp, #-48]	; 0xffffffd0
   57824:	ldr	r1, [fp, #-56]	; 0xffffffc8
   57828:	add	r0, r0, r1
   5782c:	movw	r1, #1
   57830:	strb	r1, [r0]
   57834:	ldrb	r0, [fp, #-49]	; 0xffffffcf
   57838:	tst	r0, #1
   5783c:	beq	57864 <__assert_fail@plt+0x44cac>
   57840:	ldr	r0, [fp, #-48]	; 0xffffffd0
   57844:	ldr	r1, [fp, #-56]	; 0xffffffc8
   57848:	str	r0, [sp, #28]
   5784c:	mov	r0, r1
   57850:	bl	125dc <tolower@plt>
   57854:	ldr	r1, [sp, #28]
   57858:	add	r0, r1, r0
   5785c:	movw	r1, #1
   57860:	strb	r1, [r0]
   57864:	b	57868 <__assert_fail@plt+0x44cb0>
   57868:	b	5786c <__assert_fail@plt+0x44cb4>
   5786c:	ldr	r0, [fp, #-156]	; 0xffffff64
   57870:	add	r0, r0, #1
   57874:	str	r0, [fp, #-156]	; 0xffffff64
   57878:	ldr	r0, [fp, #-152]	; 0xffffff68
   5787c:	add	r0, r0, #1
   57880:	str	r0, [fp, #-152]	; 0xffffff68
   57884:	b	577dc <__assert_fail@plt+0x44c24>
   57888:	b	5788c <__assert_fail@plt+0x44cd4>
   5788c:	ldr	r0, [fp, #-148]	; 0xffffff6c
   57890:	add	r0, r0, #1
   57894:	str	r0, [fp, #-148]	; 0xffffff6c
   57898:	b	577a8 <__assert_fail@plt+0x44bf0>
   5789c:	b	57bd8 <__assert_fail@plt+0x45020>
   578a0:	ldr	r0, [fp, #-112]	; 0xffffff90
   578a4:	cmp	r0, #6
   578a8:	bne	57b70 <__assert_fail@plt+0x44fb8>
   578ac:	ldr	r0, [fp, #-96]	; 0xffffffa0
   578b0:	ldr	r0, [r0]
   578b4:	ldr	r1, [fp, #-108]	; 0xffffff94
   578b8:	add	r0, r0, r1, lsl #3
   578bc:	ldr	r0, [r0]
   578c0:	str	r0, [fp, #-164]	; 0xffffff5c
   578c4:	ldr	r0, [fp, #-96]	; 0xffffffa0
   578c8:	ldr	r0, [r0, #92]	; 0x5c
   578cc:	cmp	r0, #1
   578d0:	ble	579d4 <__assert_fail@plt+0x44e1c>
   578d4:	ldr	r0, [fp, #-164]	; 0xffffff5c
   578d8:	ldr	r0, [r0, #36]	; 0x24
   578dc:	cmp	r0, #0
   578e0:	bne	5790c <__assert_fail@plt+0x44d54>
   578e4:	ldr	r0, [fp, #-164]	; 0xffffff5c
   578e8:	ldrb	r0, [r0, #16]
   578ec:	and	r0, r0, #1
   578f0:	and	r0, r0, #255	; 0xff
   578f4:	cmp	r0, #0
   578f8:	bne	5790c <__assert_fail@plt+0x44d54>
   578fc:	ldr	r0, [fp, #-164]	; 0xffffff5c
   57900:	ldr	r0, [r0, #32]
   57904:	cmp	r0, #0
   57908:	beq	579d4 <__assert_fail@plt+0x44e1c>
   5790c:	movw	r0, #0
   57910:	strb	r0, [fp, #-169]	; 0xffffff57
   57914:	sub	r0, fp, #180	; 0xb4
   57918:	mov	r1, r0
   5791c:	str	r0, [sp, #24]
   57920:	mov	r0, r1
   57924:	movw	r1, #0
   57928:	and	r1, r1, #255	; 0xff
   5792c:	movw	r2, #8
   57930:	bl	12900 <memset@plt>
   57934:	movw	r0, #0
   57938:	sub	r1, fp, #169	; 0xa9
   5793c:	movw	r2, #1
   57940:	ldr	r3, [sp, #24]
   57944:	bl	54a1c <__assert_fail@plt+0x41e64>
   57948:	cmn	r0, #2
   5794c:	bne	579b0 <__assert_fail@plt+0x44df8>
   57950:	ldr	r0, [fp, #-92]	; 0xffffffa4
   57954:	ldrb	r1, [fp, #-169]	; 0xffffff57
   57958:	str	r0, [fp, #-36]	; 0xffffffdc
   5795c:	movw	r0, #0
   57960:	strb	r0, [fp, #-37]	; 0xffffffdb
   57964:	str	r1, [fp, #-44]	; 0xffffffd4
   57968:	ldr	r0, [fp, #-36]	; 0xffffffdc
   5796c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   57970:	add	r0, r0, r1
   57974:	movw	r1, #1
   57978:	strb	r1, [r0]
   5797c:	ldrb	r0, [fp, #-37]	; 0xffffffdb
   57980:	tst	r0, #1
   57984:	beq	579ac <__assert_fail@plt+0x44df4>
   57988:	ldr	r0, [fp, #-36]	; 0xffffffdc
   5798c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   57990:	str	r0, [sp, #20]
   57994:	mov	r0, r1
   57998:	bl	125dc <tolower@plt>
   5799c:	ldr	r1, [sp, #20]
   579a0:	add	r0, r1, r0
   579a4:	movw	r1, #1
   579a8:	strb	r1, [r0]
   579ac:	b	579b0 <__assert_fail@plt+0x44df8>
   579b0:	b	579b4 <__assert_fail@plt+0x44dfc>
   579b4:	ldrb	r0, [fp, #-169]	; 0xffffff57
   579b8:	movw	r1, #1
   579bc:	add	r0, r0, r1
   579c0:	strb	r0, [fp, #-169]	; 0xffffff57
   579c4:	and	r0, r0, #255	; 0xff
   579c8:	cmp	r0, #0
   579cc:	bne	57914 <__assert_fail@plt+0x44d5c>
   579d0:	b	57b6c <__assert_fail@plt+0x44fb4>
   579d4:	movw	r0, #0
   579d8:	str	r0, [fp, #-168]	; 0xffffff58
   579dc:	ldr	r0, [fp, #-168]	; 0xffffff58
   579e0:	ldr	r1, [fp, #-164]	; 0xffffff5c
   579e4:	ldr	r1, [r1, #20]
   579e8:	cmp	r0, r1
   579ec:	bge	57b68 <__assert_fail@plt+0x44fb0>
   579f0:	mov	r0, #0
   579f4:	str	r0, [sp, #68]	; 0x44
   579f8:	str	r0, [sp, #64]	; 0x40
   579fc:	add	r0, sp, #76	; 0x4c
   57a00:	ldr	r1, [fp, #-164]	; 0xffffff5c
   57a04:	ldr	r1, [r1]
   57a08:	ldr	r2, [fp, #-168]	; 0xffffff58
   57a0c:	add	r1, r1, r2, lsl #2
   57a10:	ldr	r1, [r1]
   57a14:	add	r2, sp, #64	; 0x40
   57a18:	bl	1248c <wcrtomb@plt>
   57a1c:	cmn	r0, #1
   57a20:	beq	57a88 <__assert_fail@plt+0x44ed0>
   57a24:	ldr	r0, [fp, #-92]	; 0xffffffa4
   57a28:	ldrb	r1, [fp, #-101]	; 0xffffff9b
   57a2c:	ldrb	r2, [sp, #76]	; 0x4c
   57a30:	str	r0, [fp, #-24]	; 0xffffffe8
   57a34:	and	r0, r1, #1
   57a38:	strb	r0, [fp, #-25]	; 0xffffffe7
   57a3c:	str	r2, [fp, #-32]	; 0xffffffe0
   57a40:	ldr	r0, [fp, #-24]	; 0xffffffe8
   57a44:	ldr	r1, [fp, #-32]	; 0xffffffe0
   57a48:	add	r0, r0, r1
   57a4c:	movw	r1, #1
   57a50:	strb	r1, [r0]
   57a54:	ldrb	r0, [fp, #-25]	; 0xffffffe7
   57a58:	tst	r0, #1
   57a5c:	beq	57a84 <__assert_fail@plt+0x44ecc>
   57a60:	ldr	r0, [fp, #-24]	; 0xffffffe8
   57a64:	ldr	r1, [fp, #-32]	; 0xffffffe0
   57a68:	str	r0, [sp, #16]
   57a6c:	mov	r0, r1
   57a70:	bl	125dc <tolower@plt>
   57a74:	ldr	r1, [sp, #16]
   57a78:	add	r0, r1, r0
   57a7c:	movw	r1, #1
   57a80:	strb	r1, [r0]
   57a84:	b	57a88 <__assert_fail@plt+0x44ed0>
   57a88:	ldr	r0, [fp, #-84]	; 0xffffffac
   57a8c:	ldr	r0, [r0, #12]
   57a90:	and	r0, r0, #4194304	; 0x400000
   57a94:	cmp	r0, #0
   57a98:	beq	57b54 <__assert_fail@plt+0x44f9c>
   57a9c:	ldr	r0, [fp, #-96]	; 0xffffffa0
   57aa0:	ldr	r0, [r0, #92]	; 0x5c
   57aa4:	cmp	r0, #1
   57aa8:	ble	57b54 <__assert_fail@plt+0x44f9c>
   57aac:	add	r0, sp, #76	; 0x4c
   57ab0:	ldr	r1, [fp, #-164]	; 0xffffff5c
   57ab4:	ldr	r1, [r1]
   57ab8:	ldr	r2, [fp, #-168]	; 0xffffff58
   57abc:	add	r1, r1, r2, lsl #2
   57ac0:	ldr	r1, [r1]
   57ac4:	str	r0, [sp, #12]
   57ac8:	mov	r0, r1
   57acc:	bl	125f4 <towlower@plt>
   57ad0:	ldr	r1, [sp, #12]
   57ad4:	str	r0, [sp, #8]
   57ad8:	mov	r0, r1
   57adc:	ldr	r1, [sp, #8]
   57ae0:	add	r2, sp, #64	; 0x40
   57ae4:	bl	1248c <wcrtomb@plt>
   57ae8:	cmn	r0, #1
   57aec:	beq	57b50 <__assert_fail@plt+0x44f98>
   57af0:	ldr	r0, [fp, #-92]	; 0xffffffa4
   57af4:	ldrb	r1, [sp, #76]	; 0x4c
   57af8:	str	r0, [fp, #-12]
   57afc:	movw	r0, #0
   57b00:	strb	r0, [fp, #-13]
   57b04:	str	r1, [fp, #-20]	; 0xffffffec
   57b08:	ldr	r0, [fp, #-12]
   57b0c:	ldr	r1, [fp, #-20]	; 0xffffffec
   57b10:	add	r0, r0, r1
   57b14:	movw	r1, #1
   57b18:	strb	r1, [r0]
   57b1c:	ldrb	r0, [fp, #-13]
   57b20:	tst	r0, #1
   57b24:	beq	57b4c <__assert_fail@plt+0x44f94>
   57b28:	ldr	r0, [fp, #-12]
   57b2c:	ldr	r1, [fp, #-20]	; 0xffffffec
   57b30:	str	r0, [sp, #4]
   57b34:	mov	r0, r1
   57b38:	bl	125dc <tolower@plt>
   57b3c:	ldr	r1, [sp, #4]
   57b40:	add	r0, r1, r0
   57b44:	movw	r1, #1
   57b48:	strb	r1, [r0]
   57b4c:	b	57b50 <__assert_fail@plt+0x44f98>
   57b50:	b	57b54 <__assert_fail@plt+0x44f9c>
   57b54:	b	57b58 <__assert_fail@plt+0x44fa0>
   57b58:	ldr	r0, [fp, #-168]	; 0xffffff58
   57b5c:	add	r0, r0, #1
   57b60:	str	r0, [fp, #-168]	; 0xffffff58
   57b64:	b	579dc <__assert_fail@plt+0x44e24>
   57b68:	b	57b6c <__assert_fail@plt+0x44fb4>
   57b6c:	b	57bd4 <__assert_fail@plt+0x4501c>
   57b70:	ldr	r0, [fp, #-112]	; 0xffffff90
   57b74:	cmp	r0, #5
   57b78:	beq	57b94 <__assert_fail@plt+0x44fdc>
   57b7c:	ldr	r0, [fp, #-112]	; 0xffffff90
   57b80:	cmp	r0, #7
   57b84:	beq	57b94 <__assert_fail@plt+0x44fdc>
   57b88:	ldr	r0, [fp, #-112]	; 0xffffff90
   57b8c:	cmp	r0, #2
   57b90:	bne	57bd0 <__assert_fail@plt+0x45018>
   57b94:	ldr	r0, [fp, #-92]	; 0xffffffa4
   57b98:	movw	r1, #1
   57b9c:	and	r1, r1, #255	; 0xff
   57ba0:	movw	r2, #256	; 0x100
   57ba4:	bl	12900 <memset@plt>
   57ba8:	ldr	r0, [fp, #-112]	; 0xffffff90
   57bac:	cmp	r0, #2
   57bb0:	bne	57bcc <__assert_fail@plt+0x45014>
   57bb4:	ldr	r0, [fp, #-84]	; 0xffffffac
   57bb8:	ldrb	r1, [r0, #28]
   57bbc:	bic	r1, r1, #1
   57bc0:	movw	r2, #1
   57bc4:	orr	r1, r1, r2
   57bc8:	strb	r1, [r0, #28]
   57bcc:	b	57bf0 <__assert_fail@plt+0x45038>
   57bd0:	b	57bd4 <__assert_fail@plt+0x4501c>
   57bd4:	b	57bd8 <__assert_fail@plt+0x45020>
   57bd8:	b	57bdc <__assert_fail@plt+0x45024>
   57bdc:	b	57be0 <__assert_fail@plt+0x45028>
   57be0:	ldr	r0, [fp, #-100]	; 0xffffff9c
   57be4:	add	r0, r0, #1
   57be8:	str	r0, [fp, #-100]	; 0xffffff9c
   57bec:	b	574e0 <__assert_fail@plt+0x44928>
   57bf0:	sub	sp, fp, #8
   57bf4:	pop	{r4, r5, fp, pc}
   57bf8:	push	{fp, lr}
   57bfc:	mov	fp, sp
   57c00:	sub	sp, sp, #40	; 0x28
   57c04:	ldr	r3, [pc, #444]	; 57dc8 <__assert_fail@plt+0x45210>
   57c08:	ldr	ip, [pc, #444]	; 57dcc <__assert_fail@plt+0x45214>
   57c0c:	str	r0, [fp, #-8]
   57c10:	str	r1, [fp, #-12]
   57c14:	str	r2, [fp, #-16]
   57c18:	ldr	r0, [fp, #-16]
   57c1c:	and	r0, r0, #1
   57c20:	cmp	r0, #0
   57c24:	movw	r0, #0
   57c28:	movne	r0, #1
   57c2c:	tst	r0, #1
   57c30:	movne	ip, r3
   57c34:	str	ip, [sp, #16]
   57c38:	ldr	r0, [fp, #-8]
   57c3c:	movw	r1, #0
   57c40:	str	r1, [r0]
   57c44:	ldr	r0, [fp, #-8]
   57c48:	str	r1, [r0, #4]
   57c4c:	ldr	r0, [fp, #-8]
   57c50:	str	r1, [r0, #8]
   57c54:	movw	r0, #256	; 0x100
   57c58:	bl	549ac <__assert_fail@plt+0x41df4>
   57c5c:	ldr	r1, [fp, #-8]
   57c60:	str	r0, [r1, #16]
   57c64:	ldr	r0, [fp, #-8]
   57c68:	ldr	r0, [r0, #16]
   57c6c:	movw	r1, #0
   57c70:	cmp	r0, r1
   57c74:	bne	57c84 <__assert_fail@plt+0x450cc>
   57c78:	movw	r0, #12
   57c7c:	str	r0, [fp, #-4]
   57c80:	b	57dbc <__assert_fail@plt+0x45204>
   57c84:	ldr	r0, [pc, #324]	; 57dd0 <__assert_fail@plt+0x45218>
   57c88:	ldr	r1, [fp, #-16]
   57c8c:	and	r1, r1, #2
   57c90:	cmp	r1, #0
   57c94:	movw	r1, #0
   57c98:	movne	r1, #1
   57c9c:	tst	r1, #1
   57ca0:	moveq	r0, #0
   57ca4:	ldr	r1, [sp, #16]
   57ca8:	orr	r0, r1, r0
   57cac:	str	r0, [sp, #16]
   57cb0:	ldr	r0, [fp, #-16]
   57cb4:	and	r0, r0, #4
   57cb8:	cmp	r0, #0
   57cbc:	beq	57cf4 <__assert_fail@plt+0x4513c>
   57cc0:	ldr	r0, [sp, #16]
   57cc4:	bic	r0, r0, #64	; 0x40
   57cc8:	str	r0, [sp, #16]
   57ccc:	ldr	r0, [sp, #16]
   57cd0:	orr	r0, r0, #256	; 0x100
   57cd4:	str	r0, [sp, #16]
   57cd8:	ldr	r0, [fp, #-8]
   57cdc:	ldrb	r1, [r0, #28]
   57ce0:	and	r1, r1, #127	; 0x7f
   57ce4:	movw	r2, #128	; 0x80
   57ce8:	orr	r1, r1, r2
   57cec:	strb	r1, [r0, #28]
   57cf0:	b	57d04 <__assert_fail@plt+0x4514c>
   57cf4:	ldr	r0, [fp, #-8]
   57cf8:	ldrb	r1, [r0, #28]
   57cfc:	and	r1, r1, #127	; 0x7f
   57d00:	strb	r1, [r0, #28]
   57d04:	ldrb	r0, [fp, #-16]
   57d08:	and	r0, r0, #8
   57d0c:	ldr	r1, [fp, #-8]
   57d10:	ldrb	r2, [r1, #28]
   57d14:	lsl	r0, r0, #1
   57d18:	bic	r2, r2, #16
   57d1c:	orr	r0, r2, r0
   57d20:	strb	r0, [r1, #28]
   57d24:	ldr	r0, [fp, #-8]
   57d28:	movw	r1, #0
   57d2c:	str	r1, [r0, #20]
   57d30:	ldr	r0, [fp, #-8]
   57d34:	ldr	r1, [fp, #-12]
   57d38:	ldr	r2, [fp, #-12]
   57d3c:	str	r0, [sp, #12]
   57d40:	mov	r0, r2
   57d44:	str	r1, [sp, #8]
   57d48:	bl	12888 <strlen@plt>
   57d4c:	ldr	r3, [sp, #16]
   57d50:	ldr	r1, [sp, #12]
   57d54:	str	r0, [sp, #4]
   57d58:	mov	r0, r1
   57d5c:	ldr	r1, [sp, #8]
   57d60:	ldr	r2, [sp, #4]
   57d64:	bl	56f78 <__assert_fail@plt+0x443c0>
   57d68:	str	r0, [sp, #20]
   57d6c:	ldr	r0, [sp, #20]
   57d70:	cmp	r0, #16
   57d74:	bne	57d80 <__assert_fail@plt+0x451c8>
   57d78:	movw	r0, #8
   57d7c:	str	r0, [sp, #20]
   57d80:	ldr	r0, [sp, #20]
   57d84:	cmp	r0, #0
   57d88:	bne	57d9c <__assert_fail@plt+0x451e4>
   57d8c:	ldr	r0, [fp, #-8]
   57d90:	bl	5737c <__assert_fail@plt+0x447c4>
   57d94:	str	r0, [sp]
   57d98:	b	57db4 <__assert_fail@plt+0x451fc>
   57d9c:	ldr	r0, [fp, #-8]
   57da0:	ldr	r0, [r0, #16]
   57da4:	bl	50c68 <__assert_fail@plt+0x3e0b0>
   57da8:	ldr	r0, [fp, #-8]
   57dac:	movw	lr, #0
   57db0:	str	lr, [r0, #16]
   57db4:	ldr	r0, [sp, #20]
   57db8:	str	r0, [fp, #-4]
   57dbc:	ldr	r0, [fp, #-4]
   57dc0:	mov	sp, fp
   57dc4:	pop	{fp, pc}
   57dc8:	strdeq	fp, [r3], -ip
   57dcc:	smlabteq	r1, r6, r2, r0
   57dd0:	subeq	r0, r0, r0
   57dd4:	push	{fp, lr}
   57dd8:	mov	fp, sp
   57ddc:	sub	sp, sp, #40	; 0x28
   57de0:	str	r0, [fp, #-4]
   57de4:	str	r1, [fp, #-8]
   57de8:	str	r2, [fp, #-12]
   57dec:	str	r3, [fp, #-16]
   57df0:	movw	r0, #17
   57df4:	str	r0, [sp, #12]
   57df8:	ldr	r0, [fp, #-4]
   57dfc:	cmp	r0, #0
   57e00:	movw	r0, #1
   57e04:	str	r0, [sp, #4]
   57e08:	blt	57e24 <__assert_fail@plt+0x4526c>
   57e0c:	ldr	r0, [fp, #-4]
   57e10:	ldr	r1, [sp, #12]
   57e14:	cmp	r0, r1
   57e18:	movw	r0, #0
   57e1c:	movge	r0, #1
   57e20:	str	r0, [sp, #4]
   57e24:	ldr	r0, [sp, #4]
   57e28:	tst	r0, #1
   57e2c:	beq	57e34 <__assert_fail@plt+0x4527c>
   57e30:	bl	12b64 <abort@plt>
   57e34:	ldr	r0, [fp, #-4]
   57e38:	movw	r1, #59152	; 0xe710
   57e3c:	movt	r1, #7
   57e40:	add	r0, r1, r0, lsl #2
   57e44:	ldr	r0, [r0]
   57e48:	movw	r1, #58768	; 0xe590
   57e4c:	movt	r1, #7
   57e50:	add	r0, r1, r0
   57e54:	bl	12864 <gettext@plt>
   57e58:	str	r0, [sp, #20]
   57e5c:	ldr	r0, [sp, #20]
   57e60:	bl	12888 <strlen@plt>
   57e64:	add	r0, r0, #1
   57e68:	str	r0, [sp, #16]
   57e6c:	ldr	r0, [fp, #-16]
   57e70:	cmp	r0, #0
   57e74:	beq	57ec0 <__assert_fail@plt+0x45308>
   57e78:	ldr	r0, [sp, #16]
   57e7c:	str	r0, [sp, #8]
   57e80:	ldr	r0, [sp, #16]
   57e84:	ldr	r1, [fp, #-16]
   57e88:	cmp	r0, r1
   57e8c:	bls	57eb0 <__assert_fail@plt+0x452f8>
   57e90:	ldr	r0, [fp, #-16]
   57e94:	sub	r0, r0, #1
   57e98:	str	r0, [sp, #8]
   57e9c:	ldr	r0, [fp, #-12]
   57ea0:	ldr	r1, [sp, #8]
   57ea4:	add	r0, r0, r1
   57ea8:	movw	r1, #0
   57eac:	strb	r1, [r0]
   57eb0:	ldr	r0, [fp, #-12]
   57eb4:	ldr	r1, [sp, #20]
   57eb8:	ldr	r2, [sp, #8]
   57ebc:	bl	125c4 <memcpy@plt>
   57ec0:	ldr	r0, [sp, #16]
   57ec4:	mov	sp, fp
   57ec8:	pop	{fp, pc}
   57ecc:	push	{fp, lr}
   57ed0:	mov	fp, sp
   57ed4:	sub	sp, sp, #16
   57ed8:	str	r0, [fp, #-4]
   57edc:	ldr	r0, [fp, #-4]
   57ee0:	ldr	r0, [r0]
   57ee4:	str	r0, [sp, #8]
   57ee8:	ldr	r0, [sp, #8]
   57eec:	movw	r1, #0
   57ef0:	cmp	r0, r1
   57ef4:	beq	57f40 <__assert_fail@plt+0x45388>
   57ef8:	movw	r0, #10532	; 0x2924
   57efc:	movt	r0, #1
   57f00:	cmp	r0, #0
   57f04:	bne	57f20 <__assert_fail@plt+0x45368>
   57f08:	b	57f0c <__assert_fail@plt+0x45354>
   57f0c:	movw	r0, #9620	; 0x2594
   57f10:	movt	r0, #1
   57f14:	cmp	r0, #0
   57f18:	beq	57f34 <__assert_fail@plt+0x4537c>
   57f1c:	b	57f20 <__assert_fail@plt+0x45368>
   57f20:	ldr	r0, [sp, #8]
   57f24:	add	r0, r0, #136	; 0x88
   57f28:	bl	12510 <pthread_mutex_destroy@plt>
   57f2c:	str	r0, [sp, #4]
   57f30:	b	57f38 <__assert_fail@plt+0x45380>
   57f34:	b	57f38 <__assert_fail@plt+0x45380>
   57f38:	ldr	r0, [sp, #8]
   57f3c:	bl	57f8c <__assert_fail@plt+0x453d4>
   57f40:	ldr	r0, [fp, #-4]
   57f44:	movw	r1, #0
   57f48:	str	r1, [r0]
   57f4c:	ldr	r0, [fp, #-4]
   57f50:	str	r1, [r0, #4]
   57f54:	ldr	r0, [fp, #-4]
   57f58:	ldr	r0, [r0, #16]
   57f5c:	bl	50c68 <__assert_fail@plt+0x3e0b0>
   57f60:	ldr	r0, [fp, #-4]
   57f64:	movw	r1, #0
   57f68:	str	r1, [r0, #16]
   57f6c:	ldr	r0, [fp, #-4]
   57f70:	ldr	r0, [r0, #20]
   57f74:	bl	50c68 <__assert_fail@plt+0x3e0b0>
   57f78:	ldr	r0, [fp, #-4]
   57f7c:	movw	r1, #0
   57f80:	str	r1, [r0, #20]
   57f84:	mov	sp, fp
   57f88:	pop	{fp, pc}
   57f8c:	push	{fp, lr}
   57f90:	mov	fp, sp
   57f94:	sub	sp, sp, #24
   57f98:	str	r0, [fp, #-4]
   57f9c:	ldr	r0, [fp, #-4]
   57fa0:	ldr	r0, [r0]
   57fa4:	movw	r1, #0
   57fa8:	cmp	r0, r1
   57fac:	beq	57ff4 <__assert_fail@plt+0x4543c>
   57fb0:	movw	r0, #0
   57fb4:	str	r0, [fp, #-8]
   57fb8:	ldr	r0, [fp, #-8]
   57fbc:	ldr	r1, [fp, #-4]
   57fc0:	ldr	r1, [r1, #8]
   57fc4:	cmp	r0, r1
   57fc8:	bcs	57ff0 <__assert_fail@plt+0x45438>
   57fcc:	ldr	r0, [fp, #-4]
   57fd0:	ldr	r0, [r0]
   57fd4:	ldr	r1, [fp, #-8]
   57fd8:	add	r0, r0, r1, lsl #3
   57fdc:	bl	59c0c <__assert_fail@plt+0x47054>
   57fe0:	ldr	r0, [fp, #-8]
   57fe4:	add	r0, r0, #1
   57fe8:	str	r0, [fp, #-8]
   57fec:	b	57fb8 <__assert_fail@plt+0x45400>
   57ff0:	b	57ff4 <__assert_fail@plt+0x4543c>
   57ff4:	ldr	r0, [fp, #-4]
   57ff8:	ldr	r0, [r0, #12]
   57ffc:	bl	50c68 <__assert_fail@plt+0x3e0b0>
   58000:	movw	r0, #0
   58004:	str	r0, [fp, #-8]
   58008:	ldr	r0, [fp, #-8]
   5800c:	ldr	r1, [fp, #-4]
   58010:	ldr	r1, [r1, #8]
   58014:	cmp	r0, r1
   58018:	bcs	580cc <__assert_fail@plt+0x45514>
   5801c:	ldr	r0, [fp, #-4]
   58020:	ldr	r0, [r0, #24]
   58024:	movw	r1, #0
   58028:	cmp	r0, r1
   5802c:	beq	58050 <__assert_fail@plt+0x45498>
   58030:	ldr	r0, [fp, #-4]
   58034:	ldr	r0, [r0, #24]
   58038:	ldr	r1, [fp, #-8]
   5803c:	movw	r2, #12
   58040:	mul	r1, r1, r2
   58044:	add	r0, r0, r1
   58048:	ldr	r0, [r0, #8]
   5804c:	bl	50c68 <__assert_fail@plt+0x3e0b0>
   58050:	ldr	r0, [fp, #-4]
   58054:	ldr	r0, [r0, #28]
   58058:	movw	r1, #0
   5805c:	cmp	r0, r1
   58060:	beq	58084 <__assert_fail@plt+0x454cc>
   58064:	ldr	r0, [fp, #-4]
   58068:	ldr	r0, [r0, #28]
   5806c:	ldr	r1, [fp, #-8]
   58070:	movw	r2, #12
   58074:	mul	r1, r1, r2
   58078:	add	r0, r0, r1
   5807c:	ldr	r0, [r0, #8]
   58080:	bl	50c68 <__assert_fail@plt+0x3e0b0>
   58084:	ldr	r0, [fp, #-4]
   58088:	ldr	r0, [r0, #20]
   5808c:	movw	r1, #0
   58090:	cmp	r0, r1
   58094:	beq	580b8 <__assert_fail@plt+0x45500>
   58098:	ldr	r0, [fp, #-4]
   5809c:	ldr	r0, [r0, #20]
   580a0:	ldr	r1, [fp, #-8]
   580a4:	movw	r2, #12
   580a8:	mul	r1, r1, r2
   580ac:	add	r0, r0, r1
   580b0:	ldr	r0, [r0, #8]
   580b4:	bl	50c68 <__assert_fail@plt+0x3e0b0>
   580b8:	b	580bc <__assert_fail@plt+0x45504>
   580bc:	ldr	r0, [fp, #-8]
   580c0:	add	r0, r0, #1
   580c4:	str	r0, [fp, #-8]
   580c8:	b	58008 <__assert_fail@plt+0x45450>
   580cc:	ldr	r0, [fp, #-4]
   580d0:	ldr	r0, [r0, #20]
   580d4:	bl	50c68 <__assert_fail@plt+0x3e0b0>
   580d8:	ldr	r0, [fp, #-4]
   580dc:	ldr	r0, [r0, #24]
   580e0:	bl	50c68 <__assert_fail@plt+0x3e0b0>
   580e4:	ldr	r0, [fp, #-4]
   580e8:	ldr	r0, [r0, #28]
   580ec:	bl	50c68 <__assert_fail@plt+0x3e0b0>
   580f0:	ldr	r0, [fp, #-4]
   580f4:	ldr	r0, [r0]
   580f8:	bl	50c68 <__assert_fail@plt+0x3e0b0>
   580fc:	ldr	r0, [fp, #-4]
   58100:	ldr	r0, [r0, #32]
   58104:	movw	lr, #0
   58108:	cmp	r0, lr
   5810c:	beq	581b4 <__assert_fail@plt+0x455fc>
   58110:	movw	r0, #0
   58114:	str	r0, [fp, #-8]
   58118:	ldr	r0, [fp, #-8]
   5811c:	ldr	r1, [fp, #-4]
   58120:	ldr	r1, [r1, #68]	; 0x44
   58124:	cmp	r0, r1
   58128:	bhi	581b0 <__assert_fail@plt+0x455f8>
   5812c:	ldr	r0, [fp, #-4]
   58130:	ldr	r0, [r0, #32]
   58134:	ldr	r1, [fp, #-8]
   58138:	movw	r2, #12
   5813c:	mul	r1, r1, r2
   58140:	add	r0, r0, r1
   58144:	str	r0, [sp, #8]
   58148:	movw	r0, #0
   5814c:	str	r0, [sp, #12]
   58150:	ldr	r0, [sp, #12]
   58154:	ldr	r1, [sp, #8]
   58158:	ldr	r1, [r1]
   5815c:	cmp	r0, r1
   58160:	bge	58194 <__assert_fail@plt+0x455dc>
   58164:	ldr	r0, [sp, #8]
   58168:	ldr	r0, [r0, #8]
   5816c:	ldr	r1, [sp, #12]
   58170:	add	r0, r0, r1, lsl #2
   58174:	ldr	r0, [r0]
   58178:	str	r0, [sp, #4]
   5817c:	ldr	r0, [sp, #4]
   58180:	bl	59c9c <__assert_fail@plt+0x470e4>
   58184:	ldr	r0, [sp, #12]
   58188:	add	r0, r0, #1
   5818c:	str	r0, [sp, #12]
   58190:	b	58150 <__assert_fail@plt+0x45598>
   58194:	ldr	r0, [sp, #8]
   58198:	ldr	r0, [r0, #8]
   5819c:	bl	50c68 <__assert_fail@plt+0x3e0b0>
   581a0:	ldr	r0, [fp, #-8]
   581a4:	add	r0, r0, #1
   581a8:	str	r0, [fp, #-8]
   581ac:	b	58118 <__assert_fail@plt+0x45560>
   581b0:	b	581b4 <__assert_fail@plt+0x455fc>
   581b4:	ldr	r0, [fp, #-4]
   581b8:	ldr	r0, [r0, #32]
   581bc:	bl	50c68 <__assert_fail@plt+0x3e0b0>
   581c0:	ldr	r0, [fp, #-4]
   581c4:	ldr	r0, [r0, #60]	; 0x3c
   581c8:	movw	lr, #59220	; 0xe754
   581cc:	movt	lr, #7
   581d0:	cmp	r0, lr
   581d4:	beq	581e4 <__assert_fail@plt+0x4562c>
   581d8:	ldr	r0, [fp, #-4]
   581dc:	ldr	r0, [r0, #60]	; 0x3c
   581e0:	bl	50c68 <__assert_fail@plt+0x3e0b0>
   581e4:	ldr	r0, [fp, #-4]
   581e8:	ldr	r0, [r0, #132]	; 0x84
   581ec:	bl	50c68 <__assert_fail@plt+0x3e0b0>
   581f0:	ldr	r0, [fp, #-4]
   581f4:	bl	50c68 <__assert_fail@plt+0x3e0b0>
   581f8:	mov	sp, fp
   581fc:	pop	{fp, pc}
   58200:	push	{r4, r5, r6, sl, fp, lr}
   58204:	add	fp, sp, #16
   58208:	sub	sp, sp, #72	; 0x48
   5820c:	ldr	ip, [fp, #8]
   58210:	str	r0, [fp, #-24]	; 0xffffffe8
   58214:	str	r1, [fp, #-28]	; 0xffffffe4
   58218:	str	r2, [fp, #-32]	; 0xffffffe0
   5821c:	str	r3, [fp, #-36]	; 0xffffffdc
   58220:	ldr	r0, [fp, #-24]	; 0xffffffe8
   58224:	ldr	r0, [r0]
   58228:	str	r0, [sp, #36]	; 0x24
   5822c:	ldr	r0, [fp, #8]
   58230:	mvn	r1, #7
   58234:	and	r0, r0, r1
   58238:	cmp	r0, #0
   5823c:	str	ip, [sp, #32]
   58240:	beq	58250 <__assert_fail@plt+0x45698>
   58244:	movw	r0, #2
   58248:	str	r0, [fp, #-20]	; 0xffffffec
   5824c:	b	583c0 <__assert_fail@plt+0x45808>
   58250:	ldr	r0, [fp, #8]
   58254:	and	r0, r0, #4
   58258:	cmp	r0, #0
   5825c:	beq	5827c <__assert_fail@plt+0x456c4>
   58260:	ldr	r0, [fp, #-36]	; 0xffffffdc
   58264:	ldr	r0, [r0]
   58268:	str	r0, [sp, #44]	; 0x2c
   5826c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   58270:	ldr	r0, [r0, #4]
   58274:	str	r0, [sp, #40]	; 0x28
   58278:	b	58290 <__assert_fail@plt+0x456d8>
   5827c:	movw	r0, #0
   58280:	str	r0, [sp, #44]	; 0x2c
   58284:	ldr	r0, [fp, #-28]	; 0xffffffe4
   58288:	bl	12888 <strlen@plt>
   5828c:	str	r0, [sp, #40]	; 0x28
   58290:	movw	r0, #10532	; 0x2924
   58294:	movt	r0, #1
   58298:	cmp	r0, #0
   5829c:	bne	582b8 <__assert_fail@plt+0x45700>
   582a0:	b	582a4 <__assert_fail@plt+0x456ec>
   582a4:	movw	r0, #9620	; 0x2594
   582a8:	movt	r0, #1
   582ac:	cmp	r0, #0
   582b0:	beq	582cc <__assert_fail@plt+0x45714>
   582b4:	b	582b8 <__assert_fail@plt+0x45700>
   582b8:	ldr	r0, [sp, #36]	; 0x24
   582bc:	add	r0, r0, #136	; 0x88
   582c0:	bl	12570 <pthread_mutex_lock@plt>
   582c4:	str	r0, [sp, #28]
   582c8:	b	582d0 <__assert_fail@plt+0x45718>
   582cc:	b	582d0 <__assert_fail@plt+0x45718>
   582d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   582d4:	ldrb	r0, [r0, #28]
   582d8:	ubfx	r0, r0, #4, #1
   582dc:	and	r0, r0, #255	; 0xff
   582e0:	cmp	r0, #0
   582e4:	beq	58328 <__assert_fail@plt+0x45770>
   582e8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   582ec:	ldr	r1, [fp, #-28]	; 0xffffffe4
   582f0:	ldr	r2, [sp, #40]	; 0x28
   582f4:	ldr	r3, [sp, #44]	; 0x2c
   582f8:	ldr	ip, [sp, #40]	; 0x28
   582fc:	ldr	lr, [sp, #40]	; 0x28
   58300:	ldr	r4, [fp, #8]
   58304:	str	ip, [sp]
   58308:	str	lr, [sp, #4]
   5830c:	movw	ip, #0
   58310:	str	ip, [sp, #8]
   58314:	str	ip, [sp, #12]
   58318:	str	r4, [sp, #16]
   5831c:	bl	583cc <__assert_fail@plt+0x45814>
   58320:	str	r0, [fp, #-40]	; 0xffffffd8
   58324:	b	58368 <__assert_fail@plt+0x457b0>
   58328:	ldr	r0, [fp, #-24]	; 0xffffffe8
   5832c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   58330:	ldr	r2, [sp, #40]	; 0x28
   58334:	ldr	r3, [sp, #44]	; 0x2c
   58338:	ldr	ip, [sp, #40]	; 0x28
   5833c:	ldr	lr, [sp, #40]	; 0x28
   58340:	ldr	r4, [fp, #-32]	; 0xffffffe0
   58344:	ldr	r5, [fp, #-36]	; 0xffffffdc
   58348:	ldr	r6, [fp, #8]
   5834c:	str	ip, [sp]
   58350:	str	lr, [sp, #4]
   58354:	str	r4, [sp, #8]
   58358:	str	r5, [sp, #12]
   5835c:	str	r6, [sp, #16]
   58360:	bl	583cc <__assert_fail@plt+0x45814>
   58364:	str	r0, [fp, #-40]	; 0xffffffd8
   58368:	movw	r0, #10532	; 0x2924
   5836c:	movt	r0, #1
   58370:	cmp	r0, #0
   58374:	bne	58390 <__assert_fail@plt+0x457d8>
   58378:	b	5837c <__assert_fail@plt+0x457c4>
   5837c:	movw	r0, #9620	; 0x2594
   58380:	movt	r0, #1
   58384:	cmp	r0, #0
   58388:	beq	583a4 <__assert_fail@plt+0x457ec>
   5838c:	b	58390 <__assert_fail@plt+0x457d8>
   58390:	ldr	r0, [sp, #36]	; 0x24
   58394:	add	r0, r0, #136	; 0x88
   58398:	bl	1242c <pthread_mutex_unlock@plt>
   5839c:	str	r0, [sp, #24]
   583a0:	b	583a8 <__assert_fail@plt+0x457f0>
   583a4:	b	583a8 <__assert_fail@plt+0x457f0>
   583a8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   583ac:	cmp	r0, #0
   583b0:	movw	r0, #0
   583b4:	movne	r0, #1
   583b8:	and	r0, r0, #1
   583bc:	str	r0, [fp, #-20]	; 0xffffffec
   583c0:	ldr	r0, [fp, #-20]	; 0xffffffec
   583c4:	sub	sp, fp, #16
   583c8:	pop	{r4, r5, r6, sl, fp, pc}
   583cc:	push	{r4, r5, r6, sl, fp, lr}
   583d0:	add	fp, sp, #16
   583d4:	sub	sp, sp, #384	; 0x180
   583d8:	ldr	ip, [fp, #24]
   583dc:	ldr	lr, [fp, #20]
   583e0:	ldr	r4, [fp, #16]
   583e4:	ldr	r5, [fp, #12]
   583e8:	ldr	r6, [fp, #8]
   583ec:	str	r0, [fp, #-24]	; 0xffffffe8
   583f0:	str	r1, [fp, #-28]	; 0xffffffe4
   583f4:	str	r2, [fp, #-32]	; 0xffffffe0
   583f8:	str	r3, [fp, #-36]	; 0xffffffdc
   583fc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   58400:	ldr	r0, [r0]
   58404:	str	r0, [fp, #-44]	; 0xffffffd4
   58408:	mvn	r0, #0
   5840c:	str	r0, [fp, #-72]	; 0xffffffb8
   58410:	add	r0, sp, #180	; 0xb4
   58414:	mov	r1, #0
   58418:	mov	r2, #136	; 0x88
   5841c:	str	r6, [sp, #156]	; 0x9c
   58420:	str	lr, [sp, #152]	; 0x98
   58424:	str	r4, [sp, #148]	; 0x94
   58428:	str	r5, [sp, #144]	; 0x90
   5842c:	str	ip, [sp, #140]	; 0x8c
   58430:	bl	12900 <memset@plt>
   58434:	ldr	r1, [fp, #-44]	; 0xffffffd4
   58438:	str	r1, [sp, #264]	; 0x108
   5843c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   58440:	ldr	r1, [r1, #16]
   58444:	movw	r2, #0
   58448:	cmp	r1, r2
   5844c:	str	r0, [sp, #136]	; 0x88
   58450:	beq	584a4 <__assert_fail@plt+0x458ec>
   58454:	ldr	r0, [fp, #-24]	; 0xffffffe8
   58458:	ldrb	r0, [r0, #28]
   5845c:	ubfx	r0, r0, #3, #1
   58460:	and	r0, r0, #255	; 0xff
   58464:	cmp	r0, #0
   58468:	beq	584a4 <__assert_fail@plt+0x458ec>
   5846c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   58470:	ldr	r1, [fp, #8]
   58474:	cmp	r0, r1
   58478:	beq	584a4 <__assert_fail@plt+0x458ec>
   5847c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   58480:	ldrb	r0, [r0, #28]
   58484:	and	r0, r0, #1
   58488:	and	r0, r0, #255	; 0xff
   5848c:	cmp	r0, #0
   58490:	bne	584a4 <__assert_fail@plt+0x458ec>
   58494:	ldr	r0, [fp, #-24]	; 0xffffffe8
   58498:	ldr	r0, [r0, #16]
   5849c:	str	r0, [sp, #132]	; 0x84
   584a0:	b	584b0 <__assert_fail@plt+0x458f8>
   584a4:	movw	r0, #0
   584a8:	str	r0, [sp, #132]	; 0x84
   584ac:	b	584b0 <__assert_fail@plt+0x458f8>
   584b0:	ldr	r0, [sp, #132]	; 0x84
   584b4:	str	r0, [sp, #176]	; 0xb0
   584b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   584bc:	ldr	r0, [r0, #20]
   584c0:	str	r0, [sp, #172]	; 0xac
   584c4:	ldr	r0, [fp, #16]
   584c8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   584cc:	ldr	r1, [r1, #24]
   584d0:	cmp	r0, r1
   584d4:	bls	584f4 <__assert_fail@plt+0x4593c>
   584d8:	ldr	r0, [fp, #16]
   584dc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   584e0:	ldr	r1, [r1, #24]
   584e4:	add	r1, r1, #1
   584e8:	sub	r0, r0, r1
   584ec:	str	r0, [sp, #128]	; 0x80
   584f0:	b	58500 <__assert_fail@plt+0x45948>
   584f4:	movw	r0, #0
   584f8:	str	r0, [sp, #128]	; 0x80
   584fc:	b	58500 <__assert_fail@plt+0x45948>
   58500:	ldr	r0, [sp, #128]	; 0x80
   58504:	str	r0, [fp, #-76]	; 0xffffffb4
   58508:	ldr	r0, [fp, #-76]	; 0xffffffb4
   5850c:	ldr	r1, [fp, #16]
   58510:	sub	r0, r1, r0
   58514:	str	r0, [fp, #16]
   58518:	ldr	r0, [fp, #-24]	; 0xffffffe8
   5851c:	ldr	r0, [r0, #8]
   58520:	cmp	r0, #0
   58524:	movw	r0, #1
   58528:	str	r0, [sp, #124]	; 0x7c
   5852c:	beq	585a0 <__assert_fail@plt+0x459e8>
   58530:	ldr	r0, [fp, #-44]	; 0xffffffd4
   58534:	ldr	r0, [r0, #36]	; 0x24
   58538:	movw	r1, #0
   5853c:	cmp	r0, r1
   58540:	movw	r0, #1
   58544:	str	r0, [sp, #124]	; 0x7c
   58548:	beq	585a0 <__assert_fail@plt+0x459e8>
   5854c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   58550:	ldr	r0, [r0, #40]	; 0x28
   58554:	movw	r1, #0
   58558:	cmp	r0, r1
   5855c:	movw	r0, #1
   58560:	str	r0, [sp, #124]	; 0x7c
   58564:	beq	585a0 <__assert_fail@plt+0x459e8>
   58568:	ldr	r0, [fp, #-44]	; 0xffffffd4
   5856c:	ldr	r0, [r0, #44]	; 0x2c
   58570:	movw	r1, #0
   58574:	cmp	r0, r1
   58578:	movw	r0, #1
   5857c:	str	r0, [sp, #124]	; 0x7c
   58580:	beq	585a0 <__assert_fail@plt+0x459e8>
   58584:	ldr	r0, [fp, #-44]	; 0xffffffd4
   58588:	ldr	r0, [r0, #48]	; 0x30
   5858c:	movw	r1, #0
   58590:	cmp	r0, r1
   58594:	movw	r0, #0
   58598:	moveq	r0, #1
   5859c:	str	r0, [sp, #124]	; 0x7c
   585a0:	ldr	r0, [sp, #124]	; 0x7c
   585a4:	tst	r0, #1
   585a8:	beq	585b8 <__assert_fail@plt+0x45a00>
   585ac:	movw	r0, #1
   585b0:	str	r0, [fp, #-20]	; 0xffffffec
   585b4:	b	592d4 <__assert_fail@plt+0x4671c>
   585b8:	ldr	r0, [fp, #8]
   585bc:	movw	r1, #0
   585c0:	cmp	r1, r0
   585c4:	bgt	585dc <__assert_fail@plt+0x45a24>
   585c8:	ldr	r0, [fp, #8]
   585cc:	ldr	r1, [fp, #-32]	; 0xffffffe0
   585d0:	cmp	r0, r1
   585d4:	bgt	585dc <__assert_fail@plt+0x45a24>
   585d8:	b	585dc <__assert_fail@plt+0x45a24>
   585dc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   585e0:	ldr	r0, [r0, #36]	; 0x24
   585e4:	ldr	r0, [r0, #8]
   585e8:	cmp	r0, #0
   585ec:	bne	58660 <__assert_fail@plt+0x45aa8>
   585f0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   585f4:	ldr	r0, [r0, #40]	; 0x28
   585f8:	ldr	r0, [r0, #8]
   585fc:	cmp	r0, #0
   58600:	bne	58660 <__assert_fail@plt+0x45aa8>
   58604:	ldr	r0, [fp, #-44]	; 0xffffffd4
   58608:	ldr	r0, [r0, #44]	; 0x2c
   5860c:	ldr	r0, [r0, #8]
   58610:	cmp	r0, #0
   58614:	beq	58630 <__assert_fail@plt+0x45a78>
   58618:	ldr	r0, [fp, #-24]	; 0xffffffe8
   5861c:	ldrb	r0, [r0, #28]
   58620:	lsr	r0, r0, #7
   58624:	and	r0, r0, #255	; 0xff
   58628:	cmp	r0, #0
   5862c:	bne	58660 <__assert_fail@plt+0x45aa8>
   58630:	ldr	r0, [fp, #-36]	; 0xffffffdc
   58634:	cmp	r0, #0
   58638:	beq	58654 <__assert_fail@plt+0x45a9c>
   5863c:	ldr	r0, [fp, #8]
   58640:	cmp	r0, #0
   58644:	beq	58654 <__assert_fail@plt+0x45a9c>
   58648:	movw	r0, #1
   5864c:	str	r0, [fp, #-20]	; 0xffffffec
   58650:	b	592d4 <__assert_fail@plt+0x4671c>
   58654:	movw	r0, #0
   58658:	str	r0, [fp, #8]
   5865c:	str	r0, [fp, #-36]	; 0xffffffdc
   58660:	ldr	r0, [fp, #16]
   58664:	cmp	r0, #0
   58668:	movw	r0, #1
   5866c:	str	r0, [sp, #120]	; 0x78
   58670:	bne	5868c <__assert_fail@plt+0x45ad4>
   58674:	ldr	r0, [fp, #-44]	; 0xffffffd4
   58678:	ldr	r0, [r0, #76]	; 0x4c
   5867c:	cmp	r0, #0
   58680:	movw	r0, #0
   58684:	movne	r0, #1
   58688:	str	r0, [sp, #120]	; 0x78
   5868c:	ldr	r0, [sp, #120]	; 0x78
   58690:	add	r1, sp, #180	; 0xb4
   58694:	and	r0, r0, #1
   58698:	strb	r0, [fp, #-57]	; 0xffffffc7
   5869c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   586a0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   586a4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   586a8:	ldr	r3, [r3, #8]
   586ac:	add	r3, r3, #1
   586b0:	ldr	ip, [fp, #-24]	; 0xffffffe8
   586b4:	ldr	ip, [ip, #20]
   586b8:	ldr	lr, [fp, #-24]	; 0xffffffe8
   586bc:	ldr	lr, [lr, #12]
   586c0:	and	lr, lr, #4194304	; 0x400000
   586c4:	cmp	lr, #0
   586c8:	movw	lr, #0
   586cc:	movne	lr, #1
   586d0:	ldr	r4, [fp, #-44]	; 0xffffffd4
   586d4:	str	r0, [sp, #116]	; 0x74
   586d8:	mov	r0, r1
   586dc:	ldr	r1, [sp, #116]	; 0x74
   586e0:	str	ip, [sp]
   586e4:	and	ip, lr, #1
   586e8:	str	ip, [sp, #4]
   586ec:	str	r4, [sp, #8]
   586f0:	bl	64ef0 <__assert_fail@plt+0x52338>
   586f4:	str	r0, [fp, #-40]	; 0xffffffd8
   586f8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   586fc:	cmp	r0, #0
   58700:	beq	58708 <__assert_fail@plt+0x45b50>
   58704:	b	592a4 <__assert_fail@plt+0x466ec>
   58708:	ldr	r0, [fp, #12]
   5870c:	str	r0, [sp, #236]	; 0xec
   58710:	ldr	r0, [fp, #12]
   58714:	str	r0, [sp, #232]	; 0xe8
   58718:	ldr	r0, [fp, #-24]	; 0xffffffe8
   5871c:	ldrb	r0, [r0, #28]
   58720:	lsr	r0, r0, #7
   58724:	strb	r0, [sp, #257]	; 0x101
   58728:	ldr	r1, [fp, #24]
   5872c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   58730:	ldr	r0, [r0, #76]	; 0x4c
   58734:	lsl	r2, r0, #1
   58738:	add	r0, sp, #180	; 0xb4
   5873c:	bl	6508c <__assert_fail@plt+0x524d4>
   58740:	str	r0, [fp, #-40]	; 0xffffffd8
   58744:	ldr	r0, [fp, #-40]	; 0xffffffd8
   58748:	cmp	r0, #0
   5874c:	beq	58754 <__assert_fail@plt+0x45b9c>
   58750:	b	592a4 <__assert_fail@plt+0x466ec>
   58754:	ldr	r0, [fp, #16]
   58758:	cmp	r0, #1
   5875c:	bhi	58778 <__assert_fail@plt+0x45bc0>
   58760:	ldr	r0, [fp, #-44]	; 0xffffffd4
   58764:	ldrb	r0, [r0, #88]	; 0x58
   58768:	ubfx	r0, r0, #1, #1
   5876c:	and	r0, r0, #255	; 0xff
   58770:	cmp	r0, #0
   58774:	beq	587c8 <__assert_fail@plt+0x45c10>
   58778:	ldr	r0, [pc, #2912]	; 592e0 <__assert_fail@plt+0x46728>
   5877c:	ldr	r1, [sp, #216]	; 0xd8
   58780:	cmp	r0, r1
   58784:	bhi	58794 <__assert_fail@plt+0x45bdc>
   58788:	movw	r0, #12
   5878c:	str	r0, [fp, #-40]	; 0xffffffd8
   58790:	b	592a4 <__assert_fail@plt+0x466ec>
   58794:	ldr	r0, [sp, #216]	; 0xd8
   58798:	add	r0, r0, #1
   5879c:	lsl	r0, r0, #2
   587a0:	bl	549ac <__assert_fail@plt+0x41df4>
   587a4:	str	r0, [sp, #280]	; 0x118
   587a8:	ldr	r0, [sp, #280]	; 0x118
   587ac:	movw	lr, #0
   587b0:	cmp	r0, lr
   587b4:	bne	587c4 <__assert_fail@plt+0x45c0c>
   587b8:	movw	r0, #12
   587bc:	str	r0, [fp, #-40]	; 0xffffffd8
   587c0:	b	592a4 <__assert_fail@plt+0x466ec>
   587c4:	b	587c8 <__assert_fail@plt+0x45c10>
   587c8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   587cc:	str	r0, [fp, #-68]	; 0xffffffbc
   587d0:	ldr	r0, [fp, #24]
   587d4:	and	r0, r0, #1
   587d8:	cmp	r0, #0
   587dc:	movw	r0, #0
   587e0:	movne	r0, #1
   587e4:	tst	r0, #1
   587e8:	movw	r0, #4
   587ec:	moveq	r0, #6
   587f0:	str	r0, [sp, #240]	; 0xf0
   587f4:	ldr	r0, [fp, #8]
   587f8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   587fc:	cmp	r0, r1
   58800:	movw	r0, #0
   58804:	movlt	r0, #1
   58808:	tst	r0, #1
   5880c:	mvn	r0, #0
   58810:	moveq	r0, #1
   58814:	str	r0, [fp, #-56]	; 0xffffffc8
   58818:	ldr	r0, [fp, #8]
   5881c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   58820:	cmp	r0, r1
   58824:	bge	58834 <__assert_fail@plt+0x45c7c>
   58828:	ldr	r0, [fp, #8]
   5882c:	str	r0, [sp, #112]	; 0x70
   58830:	b	5883c <__assert_fail@plt+0x45c84>
   58834:	ldr	r0, [fp, #-36]	; 0xffffffdc
   58838:	str	r0, [sp, #112]	; 0x70
   5883c:	ldr	r0, [sp, #112]	; 0x70
   58840:	str	r0, [fp, #-48]	; 0xffffffd0
   58844:	ldr	r0, [fp, #8]
   58848:	ldr	r1, [fp, #-36]	; 0xffffffdc
   5884c:	cmp	r0, r1
   58850:	bge	58860 <__assert_fail@plt+0x45ca8>
   58854:	ldr	r0, [fp, #-36]	; 0xffffffdc
   58858:	str	r0, [sp, #108]	; 0x6c
   5885c:	b	58868 <__assert_fail@plt+0x45cb0>
   58860:	ldr	r0, [fp, #8]
   58864:	str	r0, [sp, #108]	; 0x6c
   58868:	ldr	r0, [sp, #108]	; 0x6c
   5886c:	str	r0, [fp, #-52]	; 0xffffffcc
   58870:	ldr	r0, [fp, #-44]	; 0xffffffd4
   58874:	ldr	r0, [r0, #92]	; 0x5c
   58878:	cmp	r0, #1
   5887c:	movw	r0, #0
   58880:	moveq	r0, #1
   58884:	and	r0, r0, #1
   58888:	strb	r0, [fp, #-77]	; 0xffffffb3
   5888c:	ldr	r0, [sp, #176]	; 0xb0
   58890:	movw	r1, #0
   58894:	cmp	r0, r1
   58898:	beq	58954 <__assert_fail@plt+0x45d9c>
   5889c:	ldrb	r0, [fp, #-77]	; 0xffffffb3
   588a0:	tst	r0, #1
   588a4:	movw	r0, #1
   588a8:	str	r0, [sp, #104]	; 0x68
   588ac:	bne	588f4 <__assert_fail@plt+0x45d3c>
   588b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   588b4:	ldr	r0, [r0, #12]
   588b8:	and	r0, r0, #4194304	; 0x400000
   588bc:	cmp	r0, #0
   588c0:	movw	r0, #1
   588c4:	str	r0, [sp, #100]	; 0x64
   588c8:	bne	588e4 <__assert_fail@plt+0x45d2c>
   588cc:	ldr	r0, [sp, #172]	; 0xac
   588d0:	movw	r1, #0
   588d4:	cmp	r0, r1
   588d8:	movw	r0, #0
   588dc:	movne	r0, #1
   588e0:	str	r0, [sp, #100]	; 0x64
   588e4:	ldr	r0, [sp, #100]	; 0x64
   588e8:	mvn	r1, #0
   588ec:	eor	r0, r0, r1
   588f0:	str	r0, [sp, #104]	; 0x68
   588f4:	ldr	r0, [sp, #104]	; 0x68
   588f8:	tst	r0, #1
   588fc:	movw	r0, #4
   58900:	moveq	r0, #0
   58904:	ldr	r1, [fp, #-36]	; 0xffffffdc
   58908:	ldr	r2, [fp, #8]
   5890c:	cmp	r1, r2
   58910:	movw	r1, #0
   58914:	movle	r1, #1
   58918:	tst	r1, #1
   5891c:	movw	r1, #2
   58920:	moveq	r1, #0
   58924:	orr	r0, r0, r1
   58928:	ldr	r1, [sp, #172]	; 0xac
   5892c:	movw	r2, #0
   58930:	cmp	r1, r2
   58934:	movw	r1, #0
   58938:	movne	r1, #1
   5893c:	tst	r1, #1
   58940:	movw	r1, #1
   58944:	moveq	r1, #0
   58948:	orr	r0, r0, r1
   5894c:	str	r0, [sp, #96]	; 0x60
   58950:	b	58960 <__assert_fail@plt+0x45da8>
   58954:	movw	r0, #8
   58958:	str	r0, [sp, #96]	; 0x60
   5895c:	b	58960 <__assert_fail@plt+0x45da8>
   58960:	ldr	r0, [sp, #96]	; 0x60
   58964:	str	r0, [fp, #-64]	; 0xffffffc0
   58968:	movw	r0, #1
   5896c:	str	r0, [fp, #-40]	; 0xffffffd8
   58970:	ldr	r0, [fp, #-68]	; 0xffffffbc
   58974:	ldr	r1, [fp, #-48]	; 0xffffffd0
   58978:	cmp	r0, r1
   5897c:	blt	58990 <__assert_fail@plt+0x45dd8>
   58980:	ldr	r0, [fp, #-52]	; 0xffffffcc
   58984:	ldr	r1, [fp, #-68]	; 0xffffffbc
   58988:	cmp	r0, r1
   5898c:	bge	58994 <__assert_fail@plt+0x45ddc>
   58990:	b	592a4 <__assert_fail@plt+0x466ec>
   58994:	ldr	r0, [fp, #-64]	; 0xffffffc0
   58998:	sub	r0, r0, #4
   5899c:	cmp	r0, #4
   589a0:	str	r0, [sp, #92]	; 0x5c
   589a4:	bhi	58c2c <__assert_fail@plt+0x46074>
   589a8:	add	r0, pc, #8
   589ac:	ldr	r1, [sp, #92]	; 0x5c
   589b0:	ldr	r0, [r0, r1, lsl #2]
   589b4:	mov	pc, r0
   589b8:	andeq	r8, r5, r0, ror #22
   589bc:	andeq	r8, r5, r0, ror #22
   589c0:	andeq	r8, r5, ip, asr #20
   589c4:	ldrdeq	r8, [r5], -r0
   589c8:	andeq	r8, r5, ip, asr #19
   589cc:	b	58d20 <__assert_fail@plt+0x46168>
   589d0:	b	589d4 <__assert_fail@plt+0x45e1c>
   589d4:	ldr	r0, [fp, #-68]	; 0xffffffbc
   589d8:	ldr	r1, [fp, #-52]	; 0xffffffcc
   589dc:	cmp	r0, r1
   589e0:	movw	r0, #0
   589e4:	str	r0, [sp, #88]	; 0x58
   589e8:	bge	58a2c <__assert_fail@plt+0x45e74>
   589ec:	ldr	r0, [sp, #176]	; 0xb0
   589f0:	ldr	r1, [sp, #172]	; 0xac
   589f4:	ldr	r2, [fp, #-28]	; 0xffffffe4
   589f8:	ldr	r3, [fp, #-68]	; 0xffffffbc
   589fc:	add	r2, r2, r3
   58a00:	ldrb	r2, [r2]
   58a04:	add	r1, r1, r2
   58a08:	ldrb	r1, [r1]
   58a0c:	add	r0, r0, r1
   58a10:	ldrsb	r0, [r0]
   58a14:	cmp	r0, #0
   58a18:	movw	r0, #0
   58a1c:	movne	r0, #1
   58a20:	mvn	r1, #0
   58a24:	eor	r0, r0, r1
   58a28:	str	r0, [sp, #88]	; 0x58
   58a2c:	ldr	r0, [sp, #88]	; 0x58
   58a30:	tst	r0, #1
   58a34:	beq	58a48 <__assert_fail@plt+0x45e90>
   58a38:	ldr	r0, [fp, #-68]	; 0xffffffbc
   58a3c:	add	r0, r0, #1
   58a40:	str	r0, [fp, #-68]	; 0xffffffbc
   58a44:	b	589d4 <__assert_fail@plt+0x45e1c>
   58a48:	b	58abc <__assert_fail@plt+0x45f04>
   58a4c:	b	58a50 <__assert_fail@plt+0x45e98>
   58a50:	ldr	r0, [fp, #-68]	; 0xffffffbc
   58a54:	ldr	r1, [fp, #-52]	; 0xffffffcc
   58a58:	cmp	r0, r1
   58a5c:	movw	r0, #0
   58a60:	str	r0, [sp, #84]	; 0x54
   58a64:	bge	58a9c <__assert_fail@plt+0x45ee4>
   58a68:	ldr	r0, [sp, #176]	; 0xb0
   58a6c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   58a70:	ldr	r2, [fp, #-68]	; 0xffffffbc
   58a74:	add	r1, r1, r2
   58a78:	ldrb	r1, [r1]
   58a7c:	add	r0, r0, r1
   58a80:	ldrsb	r0, [r0]
   58a84:	cmp	r0, #0
   58a88:	movw	r0, #0
   58a8c:	movne	r0, #1
   58a90:	mvn	r1, #0
   58a94:	eor	r0, r0, r1
   58a98:	str	r0, [sp, #84]	; 0x54
   58a9c:	ldr	r0, [sp, #84]	; 0x54
   58aa0:	tst	r0, #1
   58aa4:	beq	58ab8 <__assert_fail@plt+0x45f00>
   58aa8:	ldr	r0, [fp, #-68]	; 0xffffffbc
   58aac:	add	r0, r0, #1
   58ab0:	str	r0, [fp, #-68]	; 0xffffffbc
   58ab4:	b	58a50 <__assert_fail@plt+0x45e98>
   58ab8:	b	58abc <__assert_fail@plt+0x45f04>
   58abc:	ldr	r0, [fp, #-68]	; 0xffffffbc
   58ac0:	ldr	r1, [fp, #-52]	; 0xffffffcc
   58ac4:	cmp	r0, r1
   58ac8:	bne	58b5c <__assert_fail@plt+0x45fa4>
   58acc:	ldr	r0, [fp, #-68]	; 0xffffffbc
   58ad0:	ldr	r1, [fp, #-32]	; 0xffffffe0
   58ad4:	cmp	r0, r1
   58ad8:	blt	58ae8 <__assert_fail@plt+0x45f30>
   58adc:	movw	r0, #0
   58ae0:	str	r0, [sp, #80]	; 0x50
   58ae4:	b	58afc <__assert_fail@plt+0x45f44>
   58ae8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   58aec:	ldr	r1, [fp, #-68]	; 0xffffffbc
   58af0:	add	r0, r0, r1
   58af4:	ldrb	r0, [r0]
   58af8:	str	r0, [sp, #80]	; 0x50
   58afc:	ldr	r0, [sp, #80]	; 0x50
   58b00:	str	r0, [fp, #-84]	; 0xffffffac
   58b04:	ldr	r0, [sp, #176]	; 0xb0
   58b08:	ldr	r1, [sp, #172]	; 0xac
   58b0c:	movw	r2, #0
   58b10:	cmp	r1, r2
   58b14:	str	r0, [sp, #76]	; 0x4c
   58b18:	beq	58b34 <__assert_fail@plt+0x45f7c>
   58b1c:	ldr	r0, [sp, #172]	; 0xac
   58b20:	ldr	r1, [fp, #-84]	; 0xffffffac
   58b24:	add	r0, r0, r1
   58b28:	ldrb	r0, [r0]
   58b2c:	str	r0, [sp, #72]	; 0x48
   58b30:	b	58b3c <__assert_fail@plt+0x45f84>
   58b34:	ldr	r0, [fp, #-84]	; 0xffffffac
   58b38:	str	r0, [sp, #72]	; 0x48
   58b3c:	ldr	r0, [sp, #72]	; 0x48
   58b40:	ldr	r1, [sp, #76]	; 0x4c
   58b44:	add	r0, r1, r0
   58b48:	ldrsb	r0, [r0]
   58b4c:	cmp	r0, #0
   58b50:	bne	58b58 <__assert_fail@plt+0x45fa0>
   58b54:	b	592a4 <__assert_fail@plt+0x466ec>
   58b58:	b	58b5c <__assert_fail@plt+0x45fa4>
   58b5c:	b	58d20 <__assert_fail@plt+0x46168>
   58b60:	b	58b64 <__assert_fail@plt+0x45fac>
   58b64:	ldr	r0, [fp, #-68]	; 0xffffffbc
   58b68:	ldr	r1, [fp, #-48]	; 0xffffffd0
   58b6c:	cmp	r0, r1
   58b70:	blt	58c14 <__assert_fail@plt+0x4605c>
   58b74:	ldr	r0, [fp, #-68]	; 0xffffffbc
   58b78:	ldr	r1, [fp, #-32]	; 0xffffffe0
   58b7c:	cmp	r0, r1
   58b80:	blt	58b90 <__assert_fail@plt+0x45fd8>
   58b84:	movw	r0, #0
   58b88:	str	r0, [sp, #68]	; 0x44
   58b8c:	b	58ba4 <__assert_fail@plt+0x45fec>
   58b90:	ldr	r0, [fp, #-28]	; 0xffffffe4
   58b94:	ldr	r1, [fp, #-68]	; 0xffffffbc
   58b98:	add	r0, r0, r1
   58b9c:	ldrb	r0, [r0]
   58ba0:	str	r0, [sp, #68]	; 0x44
   58ba4:	ldr	r0, [sp, #68]	; 0x44
   58ba8:	str	r0, [fp, #-84]	; 0xffffffac
   58bac:	ldr	r0, [sp, #176]	; 0xb0
   58bb0:	ldr	r1, [sp, #172]	; 0xac
   58bb4:	movw	r2, #0
   58bb8:	cmp	r1, r2
   58bbc:	str	r0, [sp, #64]	; 0x40
   58bc0:	beq	58bdc <__assert_fail@plt+0x46024>
   58bc4:	ldr	r0, [sp, #172]	; 0xac
   58bc8:	ldr	r1, [fp, #-84]	; 0xffffffac
   58bcc:	add	r0, r0, r1
   58bd0:	ldrb	r0, [r0]
   58bd4:	str	r0, [sp, #60]	; 0x3c
   58bd8:	b	58be4 <__assert_fail@plt+0x4602c>
   58bdc:	ldr	r0, [fp, #-84]	; 0xffffffac
   58be0:	str	r0, [sp, #60]	; 0x3c
   58be4:	ldr	r0, [sp, #60]	; 0x3c
   58be8:	ldr	r1, [sp, #64]	; 0x40
   58bec:	add	r0, r1, r0
   58bf0:	ldrsb	r0, [r0]
   58bf4:	cmp	r0, #0
   58bf8:	beq	58c00 <__assert_fail@plt+0x46048>
   58bfc:	b	58c14 <__assert_fail@plt+0x4605c>
   58c00:	ldr	r0, [fp, #-68]	; 0xffffffbc
   58c04:	mvn	r1, #0
   58c08:	add	r0, r0, r1
   58c0c:	str	r0, [fp, #-68]	; 0xffffffbc
   58c10:	b	58b64 <__assert_fail@plt+0x45fac>
   58c14:	ldr	r0, [fp, #-68]	; 0xffffffbc
   58c18:	ldr	r1, [fp, #-48]	; 0xffffffd0
   58c1c:	cmp	r0, r1
   58c20:	bge	58c28 <__assert_fail@plt+0x46070>
   58c24:	b	592a4 <__assert_fail@plt+0x466ec>
   58c28:	b	58d20 <__assert_fail@plt+0x46168>
   58c2c:	b	58c30 <__assert_fail@plt+0x46078>
   58c30:	ldr	r0, [fp, #-68]	; 0xffffffbc
   58c34:	ldr	r1, [sp, #204]	; 0xcc
   58c38:	sub	r0, r0, r1
   58c3c:	str	r0, [sp, #168]	; 0xa8
   58c40:	ldr	r0, [sp, #168]	; 0xa8
   58c44:	ldr	r1, [sp, #212]	; 0xd4
   58c48:	cmp	r0, r1
   58c4c:	bcc	58c84 <__assert_fail@plt+0x460cc>
   58c50:	add	r0, sp, #180	; 0xb4
   58c54:	ldr	r1, [fp, #-68]	; 0xffffffbc
   58c58:	ldr	r2, [fp, #24]
   58c5c:	bl	651dc <__assert_fail@plt+0x52624>
   58c60:	str	r0, [fp, #-40]	; 0xffffffd8
   58c64:	ldr	r0, [fp, #-40]	; 0xffffffd8
   58c68:	cmp	r0, #0
   58c6c:	beq	58c74 <__assert_fail@plt+0x460bc>
   58c70:	b	592a4 <__assert_fail@plt+0x466ec>
   58c74:	ldr	r0, [fp, #-68]	; 0xffffffbc
   58c78:	ldr	r1, [sp, #204]	; 0xcc
   58c7c:	sub	r0, r0, r1
   58c80:	str	r0, [sp, #168]	; 0xa8
   58c84:	ldr	r0, [sp, #168]	; 0xa8
   58c88:	ldr	r1, [sp, #208]	; 0xd0
   58c8c:	cmp	r0, r1
   58c90:	bcs	58cac <__assert_fail@plt+0x460f4>
   58c94:	ldr	r0, [sp, #184]	; 0xb8
   58c98:	ldr	r1, [sp, #168]	; 0xa8
   58c9c:	add	r0, r0, r1
   58ca0:	ldrb	r0, [r0]
   58ca4:	str	r0, [sp, #56]	; 0x38
   58ca8:	b	58cb8 <__assert_fail@plt+0x46100>
   58cac:	movw	r0, #0
   58cb0:	str	r0, [sp, #56]	; 0x38
   58cb4:	b	58cb8 <__assert_fail@plt+0x46100>
   58cb8:	ldr	r0, [sp, #56]	; 0x38
   58cbc:	str	r0, [fp, #-84]	; 0xffffffac
   58cc0:	ldr	r0, [sp, #176]	; 0xb0
   58cc4:	ldr	r1, [fp, #-84]	; 0xffffffac
   58cc8:	add	r0, r0, r1
   58ccc:	ldrsb	r0, [r0]
   58cd0:	cmp	r0, #0
   58cd4:	beq	58cdc <__assert_fail@plt+0x46124>
   58cd8:	b	58d1c <__assert_fail@plt+0x46164>
   58cdc:	ldr	r0, [fp, #-56]	; 0xffffffc8
   58ce0:	ldr	r1, [fp, #-68]	; 0xffffffbc
   58ce4:	add	r0, r1, r0
   58ce8:	str	r0, [fp, #-68]	; 0xffffffbc
   58cec:	ldr	r0, [fp, #-68]	; 0xffffffbc
   58cf0:	ldr	r1, [fp, #-48]	; 0xffffffd0
   58cf4:	cmp	r0, r1
   58cf8:	blt	58d0c <__assert_fail@plt+0x46154>
   58cfc:	ldr	r0, [fp, #-68]	; 0xffffffbc
   58d00:	ldr	r1, [fp, #-52]	; 0xffffffcc
   58d04:	cmp	r0, r1
   58d08:	ble	58d18 <__assert_fail@plt+0x46160>
   58d0c:	movw	r0, #1
   58d10:	str	r0, [fp, #-40]	; 0xffffffd8
   58d14:	b	592a4 <__assert_fail@plt+0x466ec>
   58d18:	b	58c30 <__assert_fail@plt+0x46078>
   58d1c:	b	58d20 <__assert_fail@plt+0x46168>
   58d20:	add	r0, sp, #180	; 0xb4
   58d24:	ldr	r1, [fp, #-68]	; 0xffffffbc
   58d28:	ldr	r2, [fp, #24]
   58d2c:	bl	651dc <__assert_fail@plt+0x52624>
   58d30:	str	r0, [fp, #-40]	; 0xffffffd8
   58d34:	ldr	r0, [fp, #-40]	; 0xffffffd8
   58d38:	cmp	r0, #0
   58d3c:	beq	58d44 <__assert_fail@plt+0x4618c>
   58d40:	b	592a4 <__assert_fail@plt+0x466ec>
   58d44:	ldrb	r0, [fp, #-77]	; 0xffffffb3
   58d48:	tst	r0, #1
   58d4c:	bne	58d74 <__assert_fail@plt+0x461bc>
   58d50:	ldr	r0, [sp, #208]	; 0xd0
   58d54:	movw	r1, #0
   58d58:	cmp	r1, r0
   58d5c:	beq	58d74 <__assert_fail@plt+0x461bc>
   58d60:	ldr	r0, [sp, #188]	; 0xbc
   58d64:	ldr	r0, [r0]
   58d68:	cmn	r0, #1
   58d6c:	bne	58d74 <__assert_fail@plt+0x461bc>
   58d70:	b	58ef8 <__assert_fail@plt+0x46340>
   58d74:	movw	r0, #0
   58d78:	str	r0, [sp, #300]	; 0x12c
   58d7c:	str	r0, [sp, #288]	; 0x120
   58d80:	str	r0, [sp, #284]	; 0x11c
   58d84:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   58d88:	ldr	r1, [fp, #-36]	; 0xffffffdc
   58d8c:	ldr	r2, [fp, #8]
   58d90:	cmp	r1, r2
   58d94:	str	r0, [sp, #52]	; 0x34
   58d98:	bgt	58da8 <__assert_fail@plt+0x461f0>
   58d9c:	sub	r0, fp, #68	; 0x44
   58da0:	str	r0, [sp, #48]	; 0x30
   58da4:	b	58db4 <__assert_fail@plt+0x461fc>
   58da8:	movw	r0, #0
   58dac:	str	r0, [sp, #48]	; 0x30
   58db0:	b	58db4 <__assert_fail@plt+0x461fc>
   58db4:	ldr	r0, [sp, #48]	; 0x30
   58db8:	add	r1, sp, #180	; 0xb4
   58dbc:	str	r0, [sp, #44]	; 0x2c
   58dc0:	mov	r0, r1
   58dc4:	ldr	r1, [sp, #52]	; 0x34
   58dc8:	and	r1, r1, #1
   58dcc:	ldr	r2, [sp, #44]	; 0x2c
   58dd0:	bl	65dc8 <__assert_fail@plt+0x53210>
   58dd4:	str	r0, [fp, #-72]	; 0xffffffb8
   58dd8:	ldr	r0, [fp, #-72]	; 0xffffffb8
   58ddc:	cmn	r0, #1
   58de0:	beq	58ef0 <__assert_fail@plt+0x46338>
   58de4:	ldr	r0, [fp, #-72]	; 0xffffffb8
   58de8:	cmn	r0, #2
   58dec:	bne	58dfc <__assert_fail@plt+0x46244>
   58df0:	movw	r0, #12
   58df4:	str	r0, [fp, #-40]	; 0xffffffd8
   58df8:	b	592a4 <__assert_fail@plt+0x466ec>
   58dfc:	ldr	r0, [fp, #-72]	; 0xffffffb8
   58e00:	str	r0, [sp, #272]	; 0x110
   58e04:	ldr	r0, [fp, #-24]	; 0xffffffe8
   58e08:	ldrb	r0, [r0, #28]
   58e0c:	ubfx	r0, r0, #4, #1
   58e10:	and	r0, r0, #255	; 0xff
   58e14:	cmp	r0, #0
   58e18:	bne	58e28 <__assert_fail@plt+0x46270>
   58e1c:	ldr	r0, [fp, #16]
   58e20:	cmp	r0, #1
   58e24:	bhi	58e38 <__assert_fail@plt+0x46280>
   58e28:	ldr	r0, [fp, #-44]	; 0xffffffd4
   58e2c:	ldr	r0, [r0, #76]	; 0x4c
   58e30:	cmp	r0, #0
   58e34:	beq	58e60 <__assert_fail@plt+0x462a8>
   58e38:	ldr	r0, [sp, #280]	; 0x118
   58e3c:	ldr	r1, [fp, #-72]	; 0xffffffb8
   58e40:	add	r0, r0, r1, lsl #2
   58e44:	ldr	r0, [r0]
   58e48:	str	r0, [sp, #164]	; 0xa4
   58e4c:	ldr	r1, [sp, #164]	; 0xa4
   58e50:	ldr	r2, [fp, #-72]	; 0xffffffb8
   58e54:	add	r0, sp, #180	; 0xb4
   58e58:	bl	66354 <__assert_fail@plt+0x5379c>
   58e5c:	str	r0, [sp, #276]	; 0x114
   58e60:	ldr	r0, [fp, #-24]	; 0xffffffe8
   58e64:	ldrb	r0, [r0, #28]
   58e68:	ubfx	r0, r0, #4, #1
   58e6c:	and	r0, r0, #255	; 0xff
   58e70:	cmp	r0, #0
   58e74:	bne	58e9c <__assert_fail@plt+0x462e4>
   58e78:	ldr	r0, [fp, #16]
   58e7c:	cmp	r0, #1
   58e80:	bls	58e9c <__assert_fail@plt+0x462e4>
   58e84:	ldr	r0, [fp, #-44]	; 0xffffffd4
   58e88:	ldrb	r0, [r0, #88]	; 0x58
   58e8c:	and	r0, r0, #1
   58e90:	and	r0, r0, #255	; 0xff
   58e94:	cmp	r0, #0
   58e98:	bne	58eac <__assert_fail@plt+0x462f4>
   58e9c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   58ea0:	ldr	r0, [r0, #76]	; 0x4c
   58ea4:	cmp	r0, #0
   58ea8:	beq	58ee4 <__assert_fail@plt+0x4632c>
   58eac:	add	r0, sp, #180	; 0xb4
   58eb0:	bl	6642c <__assert_fail@plt+0x53874>
   58eb4:	str	r0, [fp, #-40]	; 0xffffffd8
   58eb8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   58ebc:	cmp	r0, #0
   58ec0:	bne	58ec8 <__assert_fail@plt+0x46310>
   58ec4:	b	58f0c <__assert_fail@plt+0x46354>
   58ec8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   58ecc:	cmp	r0, #1
   58ed0:	beq	58ed8 <__assert_fail@plt+0x46320>
   58ed4:	b	592a4 <__assert_fail@plt+0x466ec>
   58ed8:	mvn	r0, #0
   58edc:	str	r0, [fp, #-72]	; 0xffffffb8
   58ee0:	b	58ee8 <__assert_fail@plt+0x46330>
   58ee4:	b	58f0c <__assert_fail@plt+0x46354>
   58ee8:	b	58eec <__assert_fail@plt+0x46334>
   58eec:	b	58ef0 <__assert_fail@plt+0x46338>
   58ef0:	add	r0, sp, #180	; 0xb4
   58ef4:	bl	66778 <__assert_fail@plt+0x53bc0>
   58ef8:	ldr	r0, [fp, #-56]	; 0xffffffc8
   58efc:	ldr	r1, [fp, #-68]	; 0xffffffbc
   58f00:	add	r0, r1, r0
   58f04:	str	r0, [fp, #-68]	; 0xffffffbc
   58f08:	b	58968 <__assert_fail@plt+0x45db0>
   58f0c:	ldr	r0, [fp, #-72]	; 0xffffffb8
   58f10:	cmn	r0, #1
   58f14:	beq	58f1c <__assert_fail@plt+0x46364>
   58f18:	b	58f1c <__assert_fail@plt+0x46364>
   58f1c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   58f20:	cmp	r0, #0
   58f24:	bne	58f2c <__assert_fail@plt+0x46374>
   58f28:	b	58f2c <__assert_fail@plt+0x46374>
   58f2c:	ldr	r0, [fp, #16]
   58f30:	cmp	r0, #0
   58f34:	bls	592a0 <__assert_fail@plt+0x466e8>
   58f38:	movw	r0, #1
   58f3c:	str	r0, [sp, #160]	; 0xa0
   58f40:	ldr	r0, [sp, #160]	; 0xa0
   58f44:	ldr	r1, [fp, #16]
   58f48:	cmp	r0, r1
   58f4c:	bcs	58f88 <__assert_fail@plt+0x463d0>
   58f50:	ldr	r0, [fp, #20]
   58f54:	ldr	r1, [sp, #160]	; 0xa0
   58f58:	add	r0, r0, r1, lsl #3
   58f5c:	mvn	r1, #0
   58f60:	str	r1, [r0, #4]
   58f64:	ldr	r0, [fp, #20]
   58f68:	ldr	r1, [sp, #160]	; 0xa0
   58f6c:	add	r0, r0, r1, lsl #3
   58f70:	mvn	r1, #0
   58f74:	str	r1, [r0]
   58f78:	ldr	r0, [sp, #160]	; 0xa0
   58f7c:	add	r0, r0, #1
   58f80:	str	r0, [sp, #160]	; 0xa0
   58f84:	b	58f40 <__assert_fail@plt+0x46388>
   58f88:	ldr	r0, [fp, #20]
   58f8c:	mov	r1, #0
   58f90:	str	r1, [r0]
   58f94:	ldr	r0, [sp, #272]	; 0x110
   58f98:	ldr	r1, [fp, #20]
   58f9c:	str	r0, [r1, #4]
   58fa0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   58fa4:	ldrb	r0, [r0, #28]
   58fa8:	ubfx	r0, r0, #4, #1
   58fac:	and	r0, r0, #255	; 0xff
   58fb0:	cmp	r0, #0
   58fb4:	bne	59058 <__assert_fail@plt+0x464a0>
   58fb8:	ldr	r0, [fp, #16]
   58fbc:	cmp	r0, #1
   58fc0:	bls	59058 <__assert_fail@plt+0x464a0>
   58fc4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   58fc8:	ldr	r2, [fp, #16]
   58fcc:	ldr	r3, [fp, #20]
   58fd0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   58fd4:	ldrb	r1, [r1, #88]	; 0x58
   58fd8:	and	r1, r1, #1
   58fdc:	and	r1, r1, #255	; 0xff
   58fe0:	cmp	r1, #0
   58fe4:	movw	r1, #0
   58fe8:	str	r0, [sp, #40]	; 0x28
   58fec:	str	r2, [sp, #36]	; 0x24
   58ff0:	str	r3, [sp, #32]
   58ff4:	str	r1, [sp, #28]
   58ff8:	beq	59014 <__assert_fail@plt+0x4645c>
   58ffc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   59000:	ldr	r0, [r0, #76]	; 0x4c
   59004:	cmp	r0, #0
   59008:	movw	r0, #0
   5900c:	movgt	r0, #1
   59010:	str	r0, [sp, #28]
   59014:	ldr	r0, [sp, #28]
   59018:	ldr	r1, [sp, #40]	; 0x28
   5901c:	str	r0, [sp, #24]
   59020:	mov	r0, r1
   59024:	add	r1, sp, #180	; 0xb4
   59028:	ldr	r2, [sp, #36]	; 0x24
   5902c:	ldr	r3, [sp, #32]
   59030:	ldr	ip, [sp, #24]
   59034:	and	lr, ip, #1
   59038:	str	lr, [sp]
   5903c:	bl	66884 <__assert_fail@plt+0x53ccc>
   59040:	str	r0, [fp, #-40]	; 0xffffffd8
   59044:	ldr	r0, [fp, #-40]	; 0xffffffd8
   59048:	cmp	r0, #0
   5904c:	beq	59054 <__assert_fail@plt+0x4649c>
   59050:	b	592a4 <__assert_fail@plt+0x466ec>
   59054:	b	59058 <__assert_fail@plt+0x464a0>
   59058:	movw	r0, #0
   5905c:	str	r0, [sp, #160]	; 0xa0
   59060:	ldr	r0, [sp, #160]	; 0xa0
   59064:	ldr	r1, [fp, #16]
   59068:	cmp	r0, r1
   5906c:	bcs	5918c <__assert_fail@plt+0x465d4>
   59070:	ldr	r0, [fp, #20]
   59074:	ldr	r1, [sp, #160]	; 0xa0
   59078:	add	r0, r0, r1, lsl #3
   5907c:	ldr	r0, [r0]
   59080:	cmn	r0, #1
   59084:	beq	59178 <__assert_fail@plt+0x465c0>
   59088:	ldrb	r0, [sp, #256]	; 0x100
   5908c:	cmp	r0, #0
   59090:	beq	59144 <__assert_fail@plt+0x4658c>
   59094:	ldr	r0, [fp, #20]
   59098:	ldr	r1, [sp, #160]	; 0xa0
   5909c:	add	r0, r0, r1, lsl #3
   590a0:	ldr	r0, [r0]
   590a4:	ldr	r1, [sp, #208]	; 0xd0
   590a8:	cmp	r0, r1
   590ac:	bne	590bc <__assert_fail@plt+0x46504>
   590b0:	ldr	r0, [sp, #212]	; 0xd4
   590b4:	str	r0, [sp, #20]
   590b8:	b	590d8 <__assert_fail@plt+0x46520>
   590bc:	ldr	r0, [sp, #192]	; 0xc0
   590c0:	ldr	r1, [fp, #20]
   590c4:	ldr	r2, [sp, #160]	; 0xa0
   590c8:	ldr	r1, [r1, r2, lsl #3]
   590cc:	add	r0, r0, r1, lsl #2
   590d0:	ldr	r0, [r0]
   590d4:	str	r0, [sp, #20]
   590d8:	ldr	r0, [sp, #20]
   590dc:	ldr	r1, [fp, #20]
   590e0:	ldr	r2, [sp, #160]	; 0xa0
   590e4:	str	r0, [r1, r2, lsl #3]
   590e8:	ldr	r0, [fp, #20]
   590ec:	ldr	r1, [sp, #160]	; 0xa0
   590f0:	add	r0, r0, r1, lsl #3
   590f4:	ldr	r0, [r0, #4]
   590f8:	ldr	r1, [sp, #208]	; 0xd0
   590fc:	cmp	r0, r1
   59100:	bne	59110 <__assert_fail@plt+0x46558>
   59104:	ldr	r0, [sp, #212]	; 0xd4
   59108:	str	r0, [sp, #16]
   5910c:	b	59130 <__assert_fail@plt+0x46578>
   59110:	ldr	r0, [sp, #192]	; 0xc0
   59114:	ldr	r1, [fp, #20]
   59118:	ldr	r2, [sp, #160]	; 0xa0
   5911c:	add	r1, r1, r2, lsl #3
   59120:	ldr	r1, [r1, #4]
   59124:	add	r0, r0, r1, lsl #2
   59128:	ldr	r0, [r0]
   5912c:	str	r0, [sp, #16]
   59130:	ldr	r0, [sp, #16]
   59134:	ldr	r1, [fp, #20]
   59138:	ldr	r2, [sp, #160]	; 0xa0
   5913c:	add	r1, r1, r2, lsl #3
   59140:	str	r0, [r1, #4]
   59144:	ldr	r0, [fp, #-68]	; 0xffffffbc
   59148:	ldr	r1, [fp, #20]
   5914c:	ldr	r2, [sp, #160]	; 0xa0
   59150:	ldr	r3, [r1, r2, lsl #3]
   59154:	add	r0, r3, r0
   59158:	str	r0, [r1, r2, lsl #3]
   5915c:	ldr	r0, [fp, #-68]	; 0xffffffbc
   59160:	ldr	r1, [fp, #20]
   59164:	ldr	r2, [sp, #160]	; 0xa0
   59168:	add	r1, r1, r2, lsl #3
   5916c:	ldr	r2, [r1, #4]
   59170:	add	r0, r2, r0
   59174:	str	r0, [r1, #4]
   59178:	b	5917c <__assert_fail@plt+0x465c4>
   5917c:	ldr	r0, [sp, #160]	; 0xa0
   59180:	add	r0, r0, #1
   59184:	str	r0, [sp, #160]	; 0xa0
   59188:	b	59060 <__assert_fail@plt+0x464a8>
   5918c:	movw	r0, #0
   59190:	str	r0, [sp, #160]	; 0xa0
   59194:	ldr	r0, [sp, #160]	; 0xa0
   59198:	ldr	r1, [fp, #-76]	; 0xffffffb4
   5919c:	cmp	r0, r1
   591a0:	bge	591e8 <__assert_fail@plt+0x46630>
   591a4:	ldr	r0, [fp, #20]
   591a8:	ldr	r1, [fp, #16]
   591ac:	ldr	r2, [sp, #160]	; 0xa0
   591b0:	add	r1, r1, r2
   591b4:	mvn	r2, #0
   591b8:	str	r2, [r0, r1, lsl #3]
   591bc:	ldr	r0, [fp, #20]
   591c0:	ldr	r1, [fp, #16]
   591c4:	ldr	r2, [sp, #160]	; 0xa0
   591c8:	add	r1, r1, r2
   591cc:	add	r0, r0, r1, lsl #3
   591d0:	mvn	r1, #0
   591d4:	str	r1, [r0, #4]
   591d8:	ldr	r0, [sp, #160]	; 0xa0
   591dc:	add	r0, r0, #1
   591e0:	str	r0, [sp, #160]	; 0xa0
   591e4:	b	59194 <__assert_fail@plt+0x465dc>
   591e8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   591ec:	ldr	r0, [r0, #132]	; 0x84
   591f0:	movw	r1, #0
   591f4:	cmp	r0, r1
   591f8:	beq	5929c <__assert_fail@plt+0x466e4>
   591fc:	movw	r0, #0
   59200:	str	r0, [sp, #160]	; 0xa0
   59204:	ldr	r0, [sp, #160]	; 0xa0
   59208:	add	r0, r0, #1
   5920c:	ldr	r1, [fp, #16]
   59210:	cmp	r0, r1
   59214:	bcs	59298 <__assert_fail@plt+0x466e0>
   59218:	ldr	r0, [fp, #-44]	; 0xffffffd4
   5921c:	ldr	r0, [r0, #132]	; 0x84
   59220:	ldr	r1, [sp, #160]	; 0xa0
   59224:	add	r0, r0, r1, lsl #2
   59228:	ldr	r0, [r0]
   5922c:	ldr	r1, [sp, #160]	; 0xa0
   59230:	cmp	r0, r1
   59234:	beq	59284 <__assert_fail@plt+0x466cc>
   59238:	ldr	r0, [fp, #20]
   5923c:	ldr	r1, [sp, #160]	; 0xa0
   59240:	add	r2, r0, r1, lsl #3
   59244:	ldr	r3, [fp, #-44]	; 0xffffffd4
   59248:	ldr	r3, [r3, #132]	; 0x84
   5924c:	ldr	r1, [r3, r1, lsl #2]
   59250:	add	r0, r0, r1, lsl #3
   59254:	ldr	r0, [r0, #8]
   59258:	str	r0, [r2, #8]
   5925c:	ldr	r0, [fp, #20]
   59260:	ldr	r1, [fp, #-44]	; 0xffffffd4
   59264:	ldr	r1, [r1, #132]	; 0x84
   59268:	ldr	r2, [sp, #160]	; 0xa0
   5926c:	ldr	r1, [r1, r2, lsl #2]
   59270:	add	r1, r0, r1, lsl #3
   59274:	ldr	r1, [r1, #12]
   59278:	add	r2, r2, #1
   5927c:	add	r0, r0, r2, lsl #3
   59280:	str	r1, [r0, #4]
   59284:	b	59288 <__assert_fail@plt+0x466d0>
   59288:	ldr	r0, [sp, #160]	; 0xa0
   5928c:	add	r0, r0, #1
   59290:	str	r0, [sp, #160]	; 0xa0
   59294:	b	59204 <__assert_fail@plt+0x4664c>
   59298:	b	5929c <__assert_fail@plt+0x466e4>
   5929c:	b	592a0 <__assert_fail@plt+0x466e8>
   592a0:	b	592a4 <__assert_fail@plt+0x466ec>
   592a4:	ldr	r0, [sp, #280]	; 0x118
   592a8:	bl	50c68 <__assert_fail@plt+0x3e0b0>
   592ac:	ldr	r0, [fp, #-44]	; 0xffffffd4
   592b0:	ldr	r0, [r0, #76]	; 0x4c
   592b4:	cmp	r0, #0
   592b8:	beq	592c4 <__assert_fail@plt+0x4670c>
   592bc:	add	r0, sp, #180	; 0xb4
   592c0:	bl	66c58 <__assert_fail@plt+0x540a0>
   592c4:	add	r0, sp, #180	; 0xb4
   592c8:	bl	5a634 <__assert_fail@plt+0x47a7c>
   592cc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   592d0:	str	r0, [fp, #-20]	; 0xffffffec
   592d4:	ldr	r0, [fp, #-20]	; 0xffffffec
   592d8:	sub	sp, fp, #16
   592dc:	pop	{r4, r5, r6, sl, fp, pc}
   592e0:	svccc	0x00ffffff
   592e4:	push	{r4, r5, fp, lr}
   592e8:	add	fp, sp, #8
   592ec:	sub	sp, sp, #40	; 0x28
   592f0:	ldr	ip, [fp, #8]
   592f4:	str	r0, [fp, #-12]
   592f8:	str	r1, [fp, #-16]
   592fc:	str	r2, [fp, #-20]	; 0xffffffec
   59300:	str	r3, [sp, #24]
   59304:	ldr	r0, [fp, #-12]
   59308:	ldr	r1, [fp, #-16]
   5930c:	ldr	r2, [fp, #-20]	; 0xffffffec
   59310:	ldr	r3, [sp, #24]
   59314:	ldr	lr, [fp, #-20]	; 0xffffffec
   59318:	ldr	r4, [fp, #8]
   5931c:	movw	r5, #0
   59320:	str	r5, [sp]
   59324:	str	lr, [sp, #4]
   59328:	str	r4, [sp, #8]
   5932c:	movw	lr, #1
   59330:	and	lr, lr, #1
   59334:	str	lr, [sp, #12]
   59338:	str	ip, [sp, #20]
   5933c:	bl	59348 <__assert_fail@plt+0x46790>
   59340:	sub	sp, fp, #8
   59344:	pop	{r4, r5, fp, pc}
   59348:	push	{r4, r5, r6, sl, fp, lr}
   5934c:	add	fp, sp, #16
   59350:	sub	sp, sp, #120	; 0x78
   59354:	ldr	ip, [fp, #20]
   59358:	ldr	lr, [fp, #16]
   5935c:	ldr	r4, [fp, #12]
   59360:	ldr	r5, [fp, #8]
   59364:	str	r0, [fp, #-24]	; 0xffffffe8
   59368:	str	r1, [fp, #-28]	; 0xffffffe4
   5936c:	str	r2, [fp, #-32]	; 0xffffffe0
   59370:	str	r3, [fp, #-36]	; 0xffffffdc
   59374:	and	r0, ip, #1
   59378:	strb	r0, [fp, #-37]	; 0xffffffdb
   5937c:	movw	r0, #0
   59380:	str	r0, [fp, #-60]	; 0xffffffc4
   59384:	ldr	r0, [fp, #-24]	; 0xffffffe8
   59388:	ldr	r0, [r0]
   5938c:	str	r0, [fp, #-64]	; 0xffffffc0
   59390:	ldr	r0, [fp, #-36]	; 0xffffffdc
   59394:	ldr	r1, [fp, #8]
   59398:	add	r0, r0, r1
   5939c:	str	r0, [sp, #68]	; 0x44
   593a0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   593a4:	cmp	r0, #0
   593a8:	movw	r0, #1
   593ac:	str	r5, [sp, #64]	; 0x40
   593b0:	str	r4, [sp, #60]	; 0x3c
   593b4:	str	lr, [sp, #56]	; 0x38
   593b8:	str	r0, [sp, #52]	; 0x34
   593bc:	blt	593d8 <__assert_fail@plt+0x46820>
   593c0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   593c4:	ldr	r1, [fp, #-32]	; 0xffffffe0
   593c8:	cmp	r0, r1
   593cc:	movw	r0, #0
   593d0:	movgt	r0, #1
   593d4:	str	r0, [sp, #52]	; 0x34
   593d8:	ldr	r0, [sp, #52]	; 0x34
   593dc:	tst	r0, #1
   593e0:	beq	593f0 <__assert_fail@plt+0x46838>
   593e4:	mvn	r0, #0
   593e8:	str	r0, [fp, #-20]	; 0xffffffec
   593ec:	b	59814 <__assert_fail@plt+0x46c5c>
   593f0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   593f4:	ldr	r1, [sp, #68]	; 0x44
   593f8:	cmp	r0, r1
   593fc:	movw	r0, #1
   59400:	str	r0, [sp, #48]	; 0x30
   59404:	blt	59440 <__assert_fail@plt+0x46888>
   59408:	ldr	r0, [fp, #8]
   5940c:	movw	r1, #0
   59410:	cmp	r1, r0
   59414:	movw	r0, #0
   59418:	str	r0, [sp, #44]	; 0x2c
   5941c:	bgt	59438 <__assert_fail@plt+0x46880>
   59420:	ldr	r0, [sp, #68]	; 0x44
   59424:	ldr	r1, [fp, #-36]	; 0xffffffdc
   59428:	cmp	r0, r1
   5942c:	movw	r0, #0
   59430:	movlt	r0, #1
   59434:	str	r0, [sp, #44]	; 0x2c
   59438:	ldr	r0, [sp, #44]	; 0x2c
   5943c:	str	r0, [sp, #48]	; 0x30
   59440:	ldr	r0, [sp, #48]	; 0x30
   59444:	tst	r0, #1
   59448:	beq	59458 <__assert_fail@plt+0x468a0>
   5944c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   59450:	str	r0, [sp, #68]	; 0x44
   59454:	b	594b8 <__assert_fail@plt+0x46900>
   59458:	ldr	r0, [sp, #68]	; 0x44
   5945c:	cmp	r0, #0
   59460:	movw	r0, #1
   59464:	str	r0, [sp, #40]	; 0x28
   59468:	blt	594a0 <__assert_fail@plt+0x468e8>
   5946c:	ldr	r0, [fp, #8]
   59470:	cmp	r0, #0
   59474:	movw	r0, #0
   59478:	str	r0, [sp, #36]	; 0x24
   5947c:	bge	59498 <__assert_fail@plt+0x468e0>
   59480:	ldr	r0, [fp, #-36]	; 0xffffffdc
   59484:	ldr	r1, [sp, #68]	; 0x44
   59488:	cmp	r0, r1
   5948c:	movw	r0, #0
   59490:	movle	r0, #1
   59494:	str	r0, [sp, #36]	; 0x24
   59498:	ldr	r0, [sp, #36]	; 0x24
   5949c:	str	r0, [sp, #40]	; 0x28
   594a0:	ldr	r0, [sp, #40]	; 0x28
   594a4:	tst	r0, #1
   594a8:	beq	594b4 <__assert_fail@plt+0x468fc>
   594ac:	movw	r0, #0
   594b0:	str	r0, [sp, #68]	; 0x44
   594b4:	b	594b8 <__assert_fail@plt+0x46900>
   594b8:	movw	r0, #10532	; 0x2924
   594bc:	movt	r0, #1
   594c0:	cmp	r0, #0
   594c4:	bne	594e0 <__assert_fail@plt+0x46928>
   594c8:	b	594cc <__assert_fail@plt+0x46914>
   594cc:	movw	r0, #9620	; 0x2594
   594d0:	movt	r0, #1
   594d4:	cmp	r0, #0
   594d8:	beq	594f4 <__assert_fail@plt+0x4693c>
   594dc:	b	594e0 <__assert_fail@plt+0x46928>
   594e0:	ldr	r0, [fp, #-64]	; 0xffffffc0
   594e4:	add	r0, r0, #136	; 0x88
   594e8:	bl	12570 <pthread_mutex_lock@plt>
   594ec:	str	r0, [sp, #32]
   594f0:	b	594f8 <__assert_fail@plt+0x46940>
   594f4:	b	594f8 <__assert_fail@plt+0x46940>
   594f8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   594fc:	ldrb	r0, [r0, #28]
   59500:	ldr	r1, [fp, #-60]	; 0xffffffc4
   59504:	orr	r2, r1, #1
   59508:	mov	r3, #1
   5950c:	tst	r3, r0, lsr #5
   59510:	movne	r1, r2
   59514:	str	r1, [fp, #-60]	; 0xffffffc4
   59518:	ldr	r0, [fp, #-24]	; 0xffffffe8
   5951c:	ldrb	r0, [r0, #28]
   59520:	ubfx	r0, r0, #6, #1
   59524:	and	r0, r0, #255	; 0xff
   59528:	cmp	r0, #0
   5952c:	movw	r0, #0
   59530:	movne	r0, #1
   59534:	tst	r0, #1
   59538:	movw	r0, #2
   5953c:	moveq	r0, #0
   59540:	ldr	r1, [fp, #-60]	; 0xffffffc4
   59544:	orr	r0, r1, r0
   59548:	str	r0, [fp, #-60]	; 0xffffffc4
   5954c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   59550:	ldr	r1, [sp, #68]	; 0x44
   59554:	cmp	r0, r1
   59558:	bge	59594 <__assert_fail@plt+0x469dc>
   5955c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   59560:	ldr	r0, [r0, #16]
   59564:	movw	r1, #0
   59568:	cmp	r0, r1
   5956c:	beq	59594 <__assert_fail@plt+0x469dc>
   59570:	ldr	r0, [fp, #-24]	; 0xffffffe8
   59574:	ldrb	r0, [r0, #28]
   59578:	ubfx	r0, r0, #3, #1
   5957c:	and	r0, r0, #255	; 0xff
   59580:	cmp	r0, #0
   59584:	bne	59594 <__assert_fail@plt+0x469dc>
   59588:	ldr	r0, [fp, #-24]	; 0xffffffe8
   5958c:	bl	5737c <__assert_fail@plt+0x447c4>
   59590:	str	r0, [sp, #28]
   59594:	ldr	r0, [fp, #-24]	; 0xffffffe8
   59598:	ldrb	r0, [r0, #28]
   5959c:	ubfx	r0, r0, #4, #1
   595a0:	and	r0, r0, #255	; 0xff
   595a4:	cmp	r0, #0
   595a8:	beq	595b4 <__assert_fail@plt+0x469fc>
   595ac:	movw	r0, #0
   595b0:	str	r0, [fp, #16]
   595b4:	ldr	r0, [fp, #16]
   595b8:	movw	r1, #0
   595bc:	cmp	r0, r1
   595c0:	bne	595d0 <__assert_fail@plt+0x46a18>
   595c4:	movw	r0, #1
   595c8:	str	r0, [fp, #-52]	; 0xffffffcc
   595cc:	b	5965c <__assert_fail@plt+0x46aa4>
   595d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   595d4:	ldrb	r0, [r0, #28]
   595d8:	ubfx	r0, r0, #1, #2
   595dc:	and	r0, r0, #255	; 0xff
   595e0:	cmp	r0, #2
   595e4:	movw	r0, #0
   595e8:	str	r0, [sp, #24]
   595ec:	bne	59610 <__assert_fail@plt+0x46a58>
   595f0:	ldr	r0, [fp, #16]
   595f4:	ldr	r0, [r0]
   595f8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   595fc:	ldr	r1, [r1, #24]
   59600:	cmp	r0, r1
   59604:	movw	r0, #0
   59608:	movls	r0, #1
   5960c:	str	r0, [sp, #24]
   59610:	ldr	r0, [sp, #24]
   59614:	tst	r0, #1
   59618:	beq	59648 <__assert_fail@plt+0x46a90>
   5961c:	ldr	r0, [fp, #16]
   59620:	ldr	r0, [r0]
   59624:	str	r0, [fp, #-52]	; 0xffffffcc
   59628:	ldr	r0, [fp, #-52]	; 0xffffffcc
   5962c:	cmp	r0, #1
   59630:	bge	59644 <__assert_fail@plt+0x46a8c>
   59634:	movw	r0, #0
   59638:	str	r0, [fp, #16]
   5963c:	movw	r0, #1
   59640:	str	r0, [fp, #-52]	; 0xffffffcc
   59644:	b	59658 <__assert_fail@plt+0x46aa0>
   59648:	ldr	r0, [fp, #-24]	; 0xffffffe8
   5964c:	ldr	r0, [r0, #24]
   59650:	add	r0, r0, #1
   59654:	str	r0, [fp, #-52]	; 0xffffffcc
   59658:	b	5965c <__assert_fail@plt+0x46aa4>
   5965c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   59660:	lsl	r0, r0, #3
   59664:	bl	549ac <__assert_fail@plt+0x41df4>
   59668:	str	r0, [fp, #-48]	; 0xffffffd0
   5966c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   59670:	movw	lr, #0
   59674:	cmp	r0, lr
   59678:	bne	59688 <__assert_fail@plt+0x46ad0>
   5967c:	mvn	r0, #1
   59680:	str	r0, [fp, #-56]	; 0xffffffc8
   59684:	b	597cc <__assert_fail@plt+0x46c14>
   59688:	ldr	r0, [fp, #-24]	; 0xffffffe8
   5968c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   59690:	ldr	r2, [fp, #-32]	; 0xffffffe0
   59694:	ldr	r3, [fp, #-36]	; 0xffffffdc
   59698:	ldr	ip, [sp, #68]	; 0x44
   5969c:	ldr	lr, [fp, #12]
   596a0:	ldr	r4, [fp, #-52]	; 0xffffffcc
   596a4:	ldr	r5, [fp, #-48]	; 0xffffffd0
   596a8:	ldr	r6, [fp, #-60]	; 0xffffffc4
   596ac:	str	ip, [sp]
   596b0:	str	lr, [sp, #4]
   596b4:	str	r4, [sp, #8]
   596b8:	str	r5, [sp, #12]
   596bc:	str	r6, [sp, #16]
   596c0:	bl	583cc <__assert_fail@plt+0x45814>
   596c4:	str	r0, [fp, #-44]	; 0xffffffd4
   596c8:	movw	r0, #0
   596cc:	str	r0, [fp, #-56]	; 0xffffffc8
   596d0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   596d4:	cmp	r0, #0
   596d8:	beq	59700 <__assert_fail@plt+0x46b48>
   596dc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   596e0:	cmp	r0, #1
   596e4:	movw	r0, #0
   596e8:	moveq	r0, #1
   596ec:	tst	r0, #1
   596f0:	mvn	r0, #0
   596f4:	mvneq	r0, #1
   596f8:	str	r0, [fp, #-56]	; 0xffffffc8
   596fc:	b	5976c <__assert_fail@plt+0x46bb4>
   59700:	ldr	r0, [fp, #16]
   59704:	movw	r1, #0
   59708:	cmp	r0, r1
   5970c:	beq	59768 <__assert_fail@plt+0x46bb0>
   59710:	ldr	r0, [fp, #16]
   59714:	ldr	r1, [fp, #-48]	; 0xffffffd0
   59718:	ldr	r2, [fp, #-52]	; 0xffffffcc
   5971c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   59720:	ldrb	r3, [r3, #28]
   59724:	ubfx	r3, r3, #1, #2
   59728:	bl	64c7c <__assert_fail@plt+0x520c4>
   5972c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   59730:	ldrb	r2, [r1, #28]
   59734:	and	r0, r0, #3
   59738:	and	r2, r2, #249	; 0xf9
   5973c:	orr	r0, r2, r0, lsl #1
   59740:	strb	r0, [r1, #28]
   59744:	ldr	r0, [fp, #-24]	; 0xffffffe8
   59748:	ldrb	r0, [r0, #28]
   5974c:	ubfx	r0, r0, #1, #2
   59750:	and	r0, r0, #255	; 0xff
   59754:	cmp	r0, #0
   59758:	bne	59764 <__assert_fail@plt+0x46bac>
   5975c:	mvn	r0, #1
   59760:	str	r0, [fp, #-56]	; 0xffffffc8
   59764:	b	59768 <__assert_fail@plt+0x46bb0>
   59768:	b	5976c <__assert_fail@plt+0x46bb4>
   5976c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   59770:	cmp	r0, #0
   59774:	bne	597c4 <__assert_fail@plt+0x46c0c>
   59778:	ldrb	r0, [fp, #-37]	; 0xffffffdb
   5977c:	tst	r0, #1
   59780:	beq	597b4 <__assert_fail@plt+0x46bfc>
   59784:	ldr	r0, [fp, #-48]	; 0xffffffd0
   59788:	ldr	r0, [r0]
   5978c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   59790:	cmp	r0, r1
   59794:	bne	5979c <__assert_fail@plt+0x46be4>
   59798:	b	5979c <__assert_fail@plt+0x46be4>
   5979c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   597a0:	ldr	r0, [r0, #4]
   597a4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   597a8:	sub	r0, r0, r1
   597ac:	str	r0, [fp, #-56]	; 0xffffffc8
   597b0:	b	597c0 <__assert_fail@plt+0x46c08>
   597b4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   597b8:	ldr	r0, [r0]
   597bc:	str	r0, [fp, #-56]	; 0xffffffc8
   597c0:	b	597c4 <__assert_fail@plt+0x46c0c>
   597c4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   597c8:	bl	50c68 <__assert_fail@plt+0x3e0b0>
   597cc:	movw	r0, #10532	; 0x2924
   597d0:	movt	r0, #1
   597d4:	cmp	r0, #0
   597d8:	bne	597f4 <__assert_fail@plt+0x46c3c>
   597dc:	b	597e0 <__assert_fail@plt+0x46c28>
   597e0:	movw	r0, #9620	; 0x2594
   597e4:	movt	r0, #1
   597e8:	cmp	r0, #0
   597ec:	beq	59808 <__assert_fail@plt+0x46c50>
   597f0:	b	597f4 <__assert_fail@plt+0x46c3c>
   597f4:	ldr	r0, [fp, #-64]	; 0xffffffc0
   597f8:	add	r0, r0, #136	; 0x88
   597fc:	bl	1242c <pthread_mutex_unlock@plt>
   59800:	str	r0, [sp, #20]
   59804:	b	5980c <__assert_fail@plt+0x46c54>
   59808:	b	5980c <__assert_fail@plt+0x46c54>
   5980c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   59810:	str	r0, [fp, #-20]	; 0xffffffec
   59814:	ldr	r0, [fp, #-20]	; 0xffffffec
   59818:	sub	sp, fp, #16
   5981c:	pop	{r4, r5, r6, sl, fp, pc}
   59820:	push	{r4, r5, r6, sl, fp, lr}
   59824:	add	fp, sp, #16
   59828:	sub	sp, sp, #40	; 0x28
   5982c:	ldr	ip, [fp, #12]
   59830:	ldr	lr, [fp, #8]
   59834:	str	r0, [fp, #-20]	; 0xffffffec
   59838:	str	r1, [fp, #-24]	; 0xffffffe8
   5983c:	str	r2, [sp, #28]
   59840:	str	r3, [sp, #24]
   59844:	ldr	r0, [fp, #-20]	; 0xffffffec
   59848:	ldr	r1, [fp, #-24]	; 0xffffffe8
   5984c:	ldr	r2, [sp, #28]
   59850:	ldr	r3, [sp, #24]
   59854:	ldr	r4, [fp, #8]
   59858:	ldr	r5, [sp, #28]
   5985c:	ldr	r6, [fp, #12]
   59860:	str	r4, [sp]
   59864:	str	r5, [sp, #4]
   59868:	str	r6, [sp, #8]
   5986c:	movw	r4, #0
   59870:	and	r4, r4, #1
   59874:	str	r4, [sp, #12]
   59878:	str	lr, [sp, #20]
   5987c:	str	ip, [sp, #16]
   59880:	bl	59348 <__assert_fail@plt+0x46790>
   59884:	sub	sp, fp, #16
   59888:	pop	{r4, r5, r6, sl, fp, pc}
   5988c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   59890:	add	fp, sp, #24
   59894:	sub	sp, sp, #56	; 0x38
   59898:	ldr	ip, [fp, #20]
   5989c:	ldr	lr, [fp, #16]
   598a0:	ldr	r4, [fp, #12]
   598a4:	ldr	r5, [fp, #8]
   598a8:	str	r0, [fp, #-28]	; 0xffffffe4
   598ac:	str	r1, [fp, #-32]	; 0xffffffe0
   598b0:	str	r2, [fp, #-36]	; 0xffffffdc
   598b4:	str	r3, [sp, #40]	; 0x28
   598b8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   598bc:	ldr	r1, [fp, #-32]	; 0xffffffe0
   598c0:	ldr	r2, [fp, #-36]	; 0xffffffdc
   598c4:	ldr	r3, [sp, #40]	; 0x28
   598c8:	ldr	r6, [fp, #8]
   598cc:	ldr	r7, [fp, #12]
   598d0:	ldr	r8, [fp, #16]
   598d4:	ldr	r9, [fp, #20]
   598d8:	str	r6, [sp]
   598dc:	str	r7, [sp, #4]
   598e0:	movw	r6, #0
   598e4:	str	r6, [sp, #8]
   598e8:	str	r8, [sp, #12]
   598ec:	str	r9, [sp, #16]
   598f0:	movw	r6, #1
   598f4:	and	r6, r6, #1
   598f8:	str	r6, [sp, #20]
   598fc:	str	r5, [sp, #36]	; 0x24
   59900:	str	ip, [sp, #32]
   59904:	str	lr, [sp, #28]
   59908:	str	r4, [sp, #24]
   5990c:	bl	59918 <__assert_fail@plt+0x46d60>
   59910:	sub	sp, fp, #24
   59914:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   59918:	push	{r4, r5, r6, r7, fp, lr}
   5991c:	add	fp, sp, #16
   59920:	sub	sp, sp, #88	; 0x58
   59924:	ldr	ip, [fp, #28]
   59928:	ldr	lr, [fp, #24]
   5992c:	ldr	r4, [fp, #20]
   59930:	ldr	r5, [fp, #16]
   59934:	ldr	r6, [fp, #12]
   59938:	ldr	r7, [fp, #8]
   5993c:	str	r0, [fp, #-24]	; 0xffffffe8
   59940:	str	r1, [fp, #-28]	; 0xffffffe4
   59944:	str	r2, [fp, #-32]	; 0xffffffe0
   59948:	str	r3, [fp, #-36]	; 0xffffffdc
   5994c:	and	r0, ip, #1
   59950:	strb	r0, [fp, #-37]	; 0xffffffdb
   59954:	movw	r0, #0
   59958:	str	r0, [sp, #48]	; 0x30
   5995c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   59960:	cmp	r0, #0
   59964:	movw	r0, #1
   59968:	str	r7, [sp, #44]	; 0x2c
   5996c:	str	r4, [sp, #40]	; 0x28
   59970:	str	r5, [sp, #36]	; 0x24
   59974:	str	r6, [sp, #32]
   59978:	str	lr, [sp, #28]
   5997c:	str	r0, [sp, #24]
   59980:	blt	599cc <__assert_fail@plt+0x46e14>
   59984:	ldr	r0, [fp, #8]
   59988:	cmp	r0, #0
   5998c:	movw	r0, #1
   59990:	str	r0, [sp, #24]
   59994:	blt	599cc <__assert_fail@plt+0x46e14>
   59998:	ldr	r0, [fp, #24]
   5999c:	cmp	r0, #0
   599a0:	movw	r0, #1
   599a4:	str	r0, [sp, #24]
   599a8:	blt	599cc <__assert_fail@plt+0x46e14>
   599ac:	ldr	r0, [fp, #-32]	; 0xffffffe0
   599b0:	ldr	r1, [fp, #8]
   599b4:	add	r1, r0, r1
   599b8:	mov	r2, #1
   599bc:	cmp	r1, r0
   599c0:	movwvc	r2, #0
   599c4:	str	r1, [sp, #52]	; 0x34
   599c8:	str	r2, [sp, #24]
   599cc:	ldr	r0, [sp, #24]
   599d0:	tst	r0, #1
   599d4:	beq	599e4 <__assert_fail@plt+0x46e2c>
   599d8:	mvn	r0, #1
   599dc:	str	r0, [fp, #-20]	; 0xffffffec
   599e0:	b	59ac0 <__assert_fail@plt+0x46f08>
   599e4:	ldr	r0, [fp, #8]
   599e8:	cmp	r0, #0
   599ec:	ble	59a6c <__assert_fail@plt+0x46eb4>
   599f0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   599f4:	cmp	r0, #0
   599f8:	ble	59a60 <__assert_fail@plt+0x46ea8>
   599fc:	ldr	r0, [sp, #52]	; 0x34
   59a00:	mov	r1, r0
   59a04:	str	r1, [sp, #20]
   59a08:	bl	549ac <__assert_fail@plt+0x41df4>
   59a0c:	str	r0, [sp, #48]	; 0x30
   59a10:	ldr	r0, [sp, #48]	; 0x30
   59a14:	movw	r1, #0
   59a18:	cmp	r0, r1
   59a1c:	bne	59a2c <__assert_fail@plt+0x46e74>
   59a20:	mvn	r0, #1
   59a24:	str	r0, [fp, #-20]	; 0xffffffec
   59a28:	b	59ac0 <__assert_fail@plt+0x46f08>
   59a2c:	ldr	r0, [sp, #48]	; 0x30
   59a30:	ldr	r1, [fp, #-28]	; 0xffffffe4
   59a34:	ldr	r2, [fp, #-32]	; 0xffffffe0
   59a38:	bl	125c4 <memcpy@plt>
   59a3c:	ldr	r0, [sp, #48]	; 0x30
   59a40:	ldr	r1, [fp, #-32]	; 0xffffffe0
   59a44:	add	r0, r0, r1
   59a48:	ldr	r1, [fp, #-36]	; 0xffffffdc
   59a4c:	ldr	r2, [fp, #8]
   59a50:	bl	125c4 <memcpy@plt>
   59a54:	ldr	r0, [sp, #48]	; 0x30
   59a58:	str	r0, [fp, #-44]	; 0xffffffd4
   59a5c:	b	59a68 <__assert_fail@plt+0x46eb0>
   59a60:	ldr	r0, [fp, #-36]	; 0xffffffdc
   59a64:	str	r0, [fp, #-44]	; 0xffffffd4
   59a68:	b	59a74 <__assert_fail@plt+0x46ebc>
   59a6c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   59a70:	str	r0, [fp, #-44]	; 0xffffffd4
   59a74:	ldr	r0, [fp, #-24]	; 0xffffffe8
   59a78:	ldr	r1, [fp, #-44]	; 0xffffffd4
   59a7c:	ldr	r2, [sp, #52]	; 0x34
   59a80:	ldr	r3, [fp, #12]
   59a84:	ldr	ip, [fp, #16]
   59a88:	ldr	lr, [fp, #24]
   59a8c:	ldr	r4, [fp, #20]
   59a90:	ldrb	r5, [fp, #-37]	; 0xffffffdb
   59a94:	str	ip, [sp]
   59a98:	str	lr, [sp, #4]
   59a9c:	str	r4, [sp, #8]
   59aa0:	and	ip, r5, #1
   59aa4:	str	ip, [sp, #12]
   59aa8:	bl	59348 <__assert_fail@plt+0x46790>
   59aac:	str	r0, [fp, #-48]	; 0xffffffd0
   59ab0:	ldr	r0, [sp, #48]	; 0x30
   59ab4:	bl	50c68 <__assert_fail@plt+0x3e0b0>
   59ab8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   59abc:	str	r0, [fp, #-20]	; 0xffffffec
   59ac0:	ldr	r0, [fp, #-20]	; 0xffffffec
   59ac4:	sub	sp, fp, #16
   59ac8:	pop	{r4, r5, r6, r7, fp, pc}
   59acc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   59ad0:	add	fp, sp, #28
   59ad4:	sub	sp, sp, #68	; 0x44
   59ad8:	ldr	ip, [fp, #24]
   59adc:	ldr	lr, [fp, #20]
   59ae0:	ldr	r4, [fp, #16]
   59ae4:	ldr	r5, [fp, #12]
   59ae8:	ldr	r6, [fp, #8]
   59aec:	str	r0, [fp, #-32]	; 0xffffffe0
   59af0:	str	r1, [fp, #-36]	; 0xffffffdc
   59af4:	str	r2, [fp, #-40]	; 0xffffffd8
   59af8:	str	r3, [fp, #-44]	; 0xffffffd4
   59afc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   59b00:	ldr	r1, [fp, #-36]	; 0xffffffdc
   59b04:	ldr	r2, [fp, #-40]	; 0xffffffd8
   59b08:	ldr	r3, [fp, #-44]	; 0xffffffd4
   59b0c:	ldr	r7, [fp, #8]
   59b10:	ldr	r8, [fp, #12]
   59b14:	ldr	r9, [fp, #16]
   59b18:	ldr	sl, [fp, #20]
   59b1c:	str	r0, [sp, #48]	; 0x30
   59b20:	ldr	r0, [fp, #24]
   59b24:	str	r0, [sp, #44]	; 0x2c
   59b28:	ldr	r0, [sp, #48]	; 0x30
   59b2c:	str	r7, [sp]
   59b30:	str	r8, [sp, #4]
   59b34:	str	r9, [sp, #8]
   59b38:	str	sl, [sp, #12]
   59b3c:	ldr	r7, [sp, #44]	; 0x2c
   59b40:	str	r7, [sp, #16]
   59b44:	movw	r8, #0
   59b48:	and	r8, r8, #1
   59b4c:	str	r8, [sp, #20]
   59b50:	str	r6, [sp, #40]	; 0x28
   59b54:	str	lr, [sp, #36]	; 0x24
   59b58:	str	r4, [sp, #32]
   59b5c:	str	r5, [sp, #28]
   59b60:	str	ip, [sp, #24]
   59b64:	bl	59918 <__assert_fail@plt+0x46d60>
   59b68:	sub	sp, fp, #28
   59b6c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   59b70:	sub	sp, sp, #20
   59b74:	ldr	ip, [sp, #20]
   59b78:	str	r0, [sp, #16]
   59b7c:	str	r1, [sp, #12]
   59b80:	str	r2, [sp, #8]
   59b84:	str	r3, [sp, #4]
   59b88:	ldr	r0, [sp, #8]
   59b8c:	cmp	r0, #0
   59b90:	str	ip, [sp]
   59b94:	beq	59bd8 <__assert_fail@plt+0x47020>
   59b98:	ldr	r0, [sp, #16]
   59b9c:	ldrb	r1, [r0, #28]
   59ba0:	bic	r1, r1, #6
   59ba4:	movw	r2, #2
   59ba8:	orr	r1, r1, r2
   59bac:	strb	r1, [r0, #28]
   59bb0:	ldr	r0, [sp, #8]
   59bb4:	ldr	r1, [sp, #12]
   59bb8:	str	r0, [r1]
   59bbc:	ldr	r0, [sp, #4]
   59bc0:	ldr	r1, [sp, #12]
   59bc4:	str	r0, [r1, #4]
   59bc8:	ldr	r0, [sp, #20]
   59bcc:	ldr	r1, [sp, #12]
   59bd0:	str	r0, [r1, #8]
   59bd4:	b	59c04 <__assert_fail@plt+0x4704c>
   59bd8:	ldr	r0, [sp, #16]
   59bdc:	ldrb	r1, [r0, #28]
   59be0:	bic	r1, r1, #6
   59be4:	strb	r1, [r0, #28]
   59be8:	ldr	r0, [sp, #12]
   59bec:	movw	r1, #0
   59bf0:	str	r1, [r0]
   59bf4:	ldr	r0, [sp, #12]
   59bf8:	str	r1, [r0, #8]
   59bfc:	ldr	r0, [sp, #12]
   59c00:	str	r1, [r0, #4]
   59c04:	add	sp, sp, #20
   59c08:	bx	lr
   59c0c:	push	{fp, lr}
   59c10:	mov	fp, sp
   59c14:	sub	sp, sp, #8
   59c18:	str	r0, [sp, #4]
   59c1c:	ldr	r0, [sp, #4]
   59c20:	ldr	r0, [r0, #4]
   59c24:	and	r0, r0, #255	; 0xff
   59c28:	cmp	r0, #6
   59c2c:	bne	59c58 <__assert_fail@plt+0x470a0>
   59c30:	ldr	r0, [sp, #4]
   59c34:	ldr	r0, [r0, #4]
   59c38:	lsr	r0, r0, #18
   59c3c:	and	r0, r0, #1
   59c40:	cmp	r0, #0
   59c44:	bne	59c58 <__assert_fail@plt+0x470a0>
   59c48:	ldr	r0, [sp, #4]
   59c4c:	ldr	r0, [r0]
   59c50:	bl	59d2c <__assert_fail@plt+0x47174>
   59c54:	b	59c94 <__assert_fail@plt+0x470dc>
   59c58:	ldr	r0, [sp, #4]
   59c5c:	ldr	r0, [r0, #4]
   59c60:	and	r0, r0, #255	; 0xff
   59c64:	cmp	r0, #3
   59c68:	bne	59c90 <__assert_fail@plt+0x470d8>
   59c6c:	ldr	r0, [sp, #4]
   59c70:	ldr	r0, [r0, #4]
   59c74:	lsr	r0, r0, #18
   59c78:	and	r0, r0, #1
   59c7c:	cmp	r0, #0
   59c80:	bne	59c90 <__assert_fail@plt+0x470d8>
   59c84:	ldr	r0, [sp, #4]
   59c88:	ldr	r0, [r0]
   59c8c:	bl	50c68 <__assert_fail@plt+0x3e0b0>
   59c90:	b	59c94 <__assert_fail@plt+0x470dc>
   59c94:	mov	sp, fp
   59c98:	pop	{fp, pc}
   59c9c:	push	{fp, lr}
   59ca0:	mov	fp, sp
   59ca4:	sub	sp, sp, #8
   59ca8:	str	r0, [sp, #4]
   59cac:	ldr	r0, [sp, #4]
   59cb0:	ldr	r0, [r0, #24]
   59cb4:	bl	50c68 <__assert_fail@plt+0x3e0b0>
   59cb8:	ldr	r0, [sp, #4]
   59cbc:	ldr	r0, [r0, #36]	; 0x24
   59cc0:	bl	50c68 <__assert_fail@plt+0x3e0b0>
   59cc4:	ldr	r0, [sp, #4]
   59cc8:	ldr	r0, [r0, #40]	; 0x28
   59ccc:	ldr	lr, [sp, #4]
   59cd0:	add	lr, lr, #4
   59cd4:	cmp	r0, lr
   59cd8:	beq	59cf8 <__assert_fail@plt+0x47140>
   59cdc:	ldr	r0, [sp, #4]
   59ce0:	ldr	r0, [r0, #40]	; 0x28
   59ce4:	ldr	r0, [r0, #8]
   59ce8:	bl	50c68 <__assert_fail@plt+0x3e0b0>
   59cec:	ldr	r0, [sp, #4]
   59cf0:	ldr	r0, [r0, #40]	; 0x28
   59cf4:	bl	50c68 <__assert_fail@plt+0x3e0b0>
   59cf8:	ldr	r0, [sp, #4]
   59cfc:	ldr	r0, [r0, #12]
   59d00:	bl	50c68 <__assert_fail@plt+0x3e0b0>
   59d04:	ldr	r0, [sp, #4]
   59d08:	ldr	r0, [r0, #48]	; 0x30
   59d0c:	bl	50c68 <__assert_fail@plt+0x3e0b0>
   59d10:	ldr	r0, [sp, #4]
   59d14:	ldr	r0, [r0, #44]	; 0x2c
   59d18:	bl	50c68 <__assert_fail@plt+0x3e0b0>
   59d1c:	ldr	r0, [sp, #4]
   59d20:	bl	50c68 <__assert_fail@plt+0x3e0b0>
   59d24:	mov	sp, fp
   59d28:	pop	{fp, pc}
   59d2c:	push	{fp, lr}
   59d30:	mov	fp, sp
   59d34:	sub	sp, sp, #8
   59d38:	str	r0, [sp, #4]
   59d3c:	ldr	r0, [sp, #4]
   59d40:	ldr	r0, [r0]
   59d44:	bl	50c68 <__assert_fail@plt+0x3e0b0>
   59d48:	ldr	r0, [sp, #4]
   59d4c:	ldr	r0, [r0, #4]
   59d50:	bl	50c68 <__assert_fail@plt+0x3e0b0>
   59d54:	ldr	r0, [sp, #4]
   59d58:	ldr	r0, [r0, #8]
   59d5c:	bl	50c68 <__assert_fail@plt+0x3e0b0>
   59d60:	ldr	r0, [sp, #4]
   59d64:	ldr	r0, [r0, #12]
   59d68:	bl	50c68 <__assert_fail@plt+0x3e0b0>
   59d6c:	ldr	r0, [sp, #4]
   59d70:	bl	50c68 <__assert_fail@plt+0x3e0b0>
   59d74:	mov	sp, fp
   59d78:	pop	{fp, pc}
   59d7c:	push	{fp, lr}
   59d80:	mov	fp, sp
   59d84:	sub	sp, sp, #120	; 0x78
   59d88:	str	r0, [fp, #-8]
   59d8c:	str	r1, [fp, #-12]
   59d90:	movw	r0, #4
   59d94:	str	r0, [fp, #-24]	; 0xffffffe8
   59d98:	ldr	r0, [fp, #-24]	; 0xffffffe8
   59d9c:	movw	r1, #8
   59da0:	cmp	r1, r0
   59da4:	bcs	59db4 <__assert_fail@plt+0x471fc>
   59da8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   59dac:	str	r0, [fp, #-48]	; 0xffffffd0
   59db0:	b	59dc0 <__assert_fail@plt+0x47208>
   59db4:	movw	r0, #8
   59db8:	str	r0, [fp, #-48]	; 0xffffffd0
   59dbc:	b	59dc0 <__assert_fail@plt+0x47208>
   59dc0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   59dc4:	movw	r1, #12
   59dc8:	cmp	r1, r0
   59dcc:	bcs	59e04 <__assert_fail@plt+0x4724c>
   59dd0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   59dd4:	movw	r1, #8
   59dd8:	cmp	r1, r0
   59ddc:	bcs	59dec <__assert_fail@plt+0x47234>
   59de0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   59de4:	str	r0, [fp, #-52]	; 0xffffffcc
   59de8:	b	59df8 <__assert_fail@plt+0x47240>
   59dec:	movw	r0, #8
   59df0:	str	r0, [fp, #-52]	; 0xffffffcc
   59df4:	b	59df8 <__assert_fail@plt+0x47240>
   59df8:	ldr	r0, [fp, #-52]	; 0xffffffcc
   59dfc:	str	r0, [fp, #-56]	; 0xffffffc8
   59e00:	b	59e10 <__assert_fail@plt+0x47258>
   59e04:	movw	r0, #12
   59e08:	str	r0, [fp, #-56]	; 0xffffffc8
   59e0c:	b	59e10 <__assert_fail@plt+0x47258>
   59e10:	ldr	r0, [fp, #-56]	; 0xffffffc8
   59e14:	movw	r1, #8
   59e18:	cmp	r1, r0
   59e1c:	bcs	59ea4 <__assert_fail@plt+0x472ec>
   59e20:	ldr	r0, [fp, #-24]	; 0xffffffe8
   59e24:	movw	r1, #8
   59e28:	cmp	r1, r0
   59e2c:	bcs	59e3c <__assert_fail@plt+0x47284>
   59e30:	ldr	r0, [fp, #-24]	; 0xffffffe8
   59e34:	str	r0, [sp, #60]	; 0x3c
   59e38:	b	59e48 <__assert_fail@plt+0x47290>
   59e3c:	movw	r0, #8
   59e40:	str	r0, [sp, #60]	; 0x3c
   59e44:	b	59e48 <__assert_fail@plt+0x47290>
   59e48:	ldr	r0, [sp, #60]	; 0x3c
   59e4c:	movw	r1, #12
   59e50:	cmp	r1, r0
   59e54:	bcs	59e8c <__assert_fail@plt+0x472d4>
   59e58:	ldr	r0, [fp, #-24]	; 0xffffffe8
   59e5c:	movw	r1, #8
   59e60:	cmp	r1, r0
   59e64:	bcs	59e74 <__assert_fail@plt+0x472bc>
   59e68:	ldr	r0, [fp, #-24]	; 0xffffffe8
   59e6c:	str	r0, [sp, #56]	; 0x38
   59e70:	b	59e80 <__assert_fail@plt+0x472c8>
   59e74:	movw	r0, #8
   59e78:	str	r0, [sp, #56]	; 0x38
   59e7c:	b	59e80 <__assert_fail@plt+0x472c8>
   59e80:	ldr	r0, [sp, #56]	; 0x38
   59e84:	str	r0, [sp, #52]	; 0x34
   59e88:	b	59e98 <__assert_fail@plt+0x472e0>
   59e8c:	movw	r0, #12
   59e90:	str	r0, [sp, #52]	; 0x34
   59e94:	b	59e98 <__assert_fail@plt+0x472e0>
   59e98:	ldr	r0, [sp, #52]	; 0x34
   59e9c:	str	r0, [sp, #48]	; 0x30
   59ea0:	b	59eb0 <__assert_fail@plt+0x472f8>
   59ea4:	movw	r0, #8
   59ea8:	str	r0, [sp, #48]	; 0x30
   59eac:	b	59eb0 <__assert_fail@plt+0x472f8>
   59eb0:	ldr	r0, [sp, #48]	; 0x30
   59eb4:	movw	r1, #12
   59eb8:	cmp	r1, r0
   59ebc:	bcs	59fe4 <__assert_fail@plt+0x4742c>
   59ec0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   59ec4:	movw	r1, #8
   59ec8:	cmp	r1, r0
   59ecc:	bcs	59edc <__assert_fail@plt+0x47324>
   59ed0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   59ed4:	str	r0, [sp, #44]	; 0x2c
   59ed8:	b	59ee8 <__assert_fail@plt+0x47330>
   59edc:	movw	r0, #8
   59ee0:	str	r0, [sp, #44]	; 0x2c
   59ee4:	b	59ee8 <__assert_fail@plt+0x47330>
   59ee8:	ldr	r0, [sp, #44]	; 0x2c
   59eec:	movw	r1, #12
   59ef0:	cmp	r1, r0
   59ef4:	bcs	59f2c <__assert_fail@plt+0x47374>
   59ef8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   59efc:	movw	r1, #8
   59f00:	cmp	r1, r0
   59f04:	bcs	59f14 <__assert_fail@plt+0x4735c>
   59f08:	ldr	r0, [fp, #-24]	; 0xffffffe8
   59f0c:	str	r0, [sp, #40]	; 0x28
   59f10:	b	59f20 <__assert_fail@plt+0x47368>
   59f14:	movw	r0, #8
   59f18:	str	r0, [sp, #40]	; 0x28
   59f1c:	b	59f20 <__assert_fail@plt+0x47368>
   59f20:	ldr	r0, [sp, #40]	; 0x28
   59f24:	str	r0, [sp, #36]	; 0x24
   59f28:	b	59f38 <__assert_fail@plt+0x47380>
   59f2c:	movw	r0, #12
   59f30:	str	r0, [sp, #36]	; 0x24
   59f34:	b	59f38 <__assert_fail@plt+0x47380>
   59f38:	ldr	r0, [sp, #36]	; 0x24
   59f3c:	movw	r1, #8
   59f40:	cmp	r1, r0
   59f44:	bcs	59fcc <__assert_fail@plt+0x47414>
   59f48:	ldr	r0, [fp, #-24]	; 0xffffffe8
   59f4c:	movw	r1, #8
   59f50:	cmp	r1, r0
   59f54:	bcs	59f64 <__assert_fail@plt+0x473ac>
   59f58:	ldr	r0, [fp, #-24]	; 0xffffffe8
   59f5c:	str	r0, [sp, #32]
   59f60:	b	59f70 <__assert_fail@plt+0x473b8>
   59f64:	movw	r0, #8
   59f68:	str	r0, [sp, #32]
   59f6c:	b	59f70 <__assert_fail@plt+0x473b8>
   59f70:	ldr	r0, [sp, #32]
   59f74:	movw	r1, #12
   59f78:	cmp	r1, r0
   59f7c:	bcs	59fb4 <__assert_fail@plt+0x473fc>
   59f80:	ldr	r0, [fp, #-24]	; 0xffffffe8
   59f84:	movw	r1, #8
   59f88:	cmp	r1, r0
   59f8c:	bcs	59f9c <__assert_fail@plt+0x473e4>
   59f90:	ldr	r0, [fp, #-24]	; 0xffffffe8
   59f94:	str	r0, [sp, #28]
   59f98:	b	59fa8 <__assert_fail@plt+0x473f0>
   59f9c:	movw	r0, #8
   59fa0:	str	r0, [sp, #28]
   59fa4:	b	59fa8 <__assert_fail@plt+0x473f0>
   59fa8:	ldr	r0, [sp, #28]
   59fac:	str	r0, [sp, #24]
   59fb0:	b	59fc0 <__assert_fail@plt+0x47408>
   59fb4:	movw	r0, #12
   59fb8:	str	r0, [sp, #24]
   59fbc:	b	59fc0 <__assert_fail@plt+0x47408>
   59fc0:	ldr	r0, [sp, #24]
   59fc4:	str	r0, [sp, #20]
   59fc8:	b	59fd8 <__assert_fail@plt+0x47420>
   59fcc:	movw	r0, #8
   59fd0:	str	r0, [sp, #20]
   59fd4:	b	59fd8 <__assert_fail@plt+0x47420>
   59fd8:	ldr	r0, [sp, #20]
   59fdc:	str	r0, [sp, #16]
   59fe0:	b	59ff0 <__assert_fail@plt+0x47438>
   59fe4:	movw	r0, #12
   59fe8:	str	r0, [sp, #16]
   59fec:	b	59ff0 <__assert_fail@plt+0x47438>
   59ff0:	ldr	r0, [sp, #16]
   59ff4:	ldr	r1, [pc, #904]	; 5a384 <__assert_fail@plt+0x477cc>
   59ff8:	str	r0, [fp, #-28]	; 0xffffffe4
   59ffc:	ldr	r0, [fp, #-8]
   5a000:	movw	r2, #0
   5a004:	and	r2, r2, #255	; 0xff
   5a008:	str	r1, [sp, #12]
   5a00c:	mov	r1, r2
   5a010:	movw	r2, #160	; 0xa0
   5a014:	bl	12900 <memset@plt>
   5a018:	ldr	r0, [fp, #-8]
   5a01c:	movw	r1, #31
   5a020:	str	r1, [r0, #64]	; 0x40
   5a024:	ldr	r0, [fp, #-28]	; 0xffffffe4
   5a028:	mvn	r1, #0
   5a02c:	udiv	r0, r1, r0
   5a030:	ldr	r1, [sp, #12]
   5a034:	cmp	r1, r0
   5a038:	bcs	5a048 <__assert_fail@plt+0x47490>
   5a03c:	ldr	r0, [pc, #832]	; 5a384 <__assert_fail@plt+0x477cc>
   5a040:	str	r0, [sp, #8]
   5a044:	b	5a058 <__assert_fail@plt+0x474a0>
   5a048:	ldr	r0, [fp, #-28]	; 0xffffffe4
   5a04c:	mvn	r1, #0
   5a050:	udiv	r0, r1, r0
   5a054:	str	r0, [sp, #8]
   5a058:	ldr	r0, [sp, #8]
   5a05c:	lsr	r0, r0, #1
   5a060:	ldr	r1, [fp, #-12]
   5a064:	cmp	r0, r1
   5a068:	bhi	5a078 <__assert_fail@plt+0x474c0>
   5a06c:	movw	r0, #12
   5a070:	str	r0, [fp, #-4]
   5a074:	b	5a378 <__assert_fail@plt+0x477c0>
   5a078:	ldr	r0, [fp, #-12]
   5a07c:	add	r0, r0, #1
   5a080:	ldr	r1, [fp, #-8]
   5a084:	str	r0, [r1, #4]
   5a088:	ldr	r0, [fp, #-8]
   5a08c:	ldr	r0, [r0, #4]
   5a090:	lsl	r0, r0, #3
   5a094:	bl	549ac <__assert_fail@plt+0x41df4>
   5a098:	ldr	r1, [fp, #-8]
   5a09c:	str	r0, [r1]
   5a0a0:	movw	r0, #1
   5a0a4:	str	r0, [fp, #-16]
   5a0a8:	ldr	r0, [fp, #-16]
   5a0ac:	ldr	r1, [fp, #-12]
   5a0b0:	cmp	r0, r1
   5a0b4:	bls	5a0bc <__assert_fail@plt+0x47504>
   5a0b8:	b	5a0d0 <__assert_fail@plt+0x47518>
   5a0bc:	b	5a0c0 <__assert_fail@plt+0x47508>
   5a0c0:	ldr	r0, [fp, #-16]
   5a0c4:	lsl	r0, r0, #1
   5a0c8:	str	r0, [fp, #-16]
   5a0cc:	b	5a0a8 <__assert_fail@plt+0x474f0>
   5a0d0:	ldr	r1, [fp, #-16]
   5a0d4:	movw	r0, #12
   5a0d8:	bl	50240 <__assert_fail@plt+0x3d688>
   5a0dc:	ldr	r1, [fp, #-8]
   5a0e0:	str	r0, [r1, #32]
   5a0e4:	ldr	r0, [fp, #-16]
   5a0e8:	sub	r0, r0, #1
   5a0ec:	ldr	r1, [fp, #-8]
   5a0f0:	str	r0, [r1, #68]	; 0x44
   5a0f4:	bl	12720 <__ctype_get_mb_cur_max@plt>
   5a0f8:	ldr	r1, [fp, #-8]
   5a0fc:	str	r0, [r1, #92]	; 0x5c
   5a100:	movw	r0, #14
   5a104:	bl	12a2c <nl_langinfo@plt>
   5a108:	str	r0, [fp, #-20]	; 0xffffffec
   5a10c:	ldr	r0, [fp, #-20]	; 0xffffffec
   5a110:	ldrb	r0, [r0]
   5a114:	cmp	r0, #85	; 0x55
   5a118:	beq	5a12c <__assert_fail@plt+0x47574>
   5a11c:	ldr	r0, [fp, #-20]	; 0xffffffec
   5a120:	ldrb	r0, [r0]
   5a124:	cmp	r0, #117	; 0x75
   5a128:	bne	5a1bc <__assert_fail@plt+0x47604>
   5a12c:	ldr	r0, [fp, #-20]	; 0xffffffec
   5a130:	ldrb	r0, [r0, #1]
   5a134:	cmp	r0, #84	; 0x54
   5a138:	beq	5a14c <__assert_fail@plt+0x47594>
   5a13c:	ldr	r0, [fp, #-20]	; 0xffffffec
   5a140:	ldrb	r0, [r0, #1]
   5a144:	cmp	r0, #116	; 0x74
   5a148:	bne	5a1bc <__assert_fail@plt+0x47604>
   5a14c:	ldr	r0, [fp, #-20]	; 0xffffffec
   5a150:	ldrb	r0, [r0, #2]
   5a154:	cmp	r0, #70	; 0x46
   5a158:	beq	5a16c <__assert_fail@plt+0x475b4>
   5a15c:	ldr	r0, [fp, #-20]	; 0xffffffec
   5a160:	ldrb	r0, [r0, #2]
   5a164:	cmp	r0, #102	; 0x66
   5a168:	bne	5a1bc <__assert_fail@plt+0x47604>
   5a16c:	ldr	r0, [fp, #-20]	; 0xffffffec
   5a170:	add	r0, r0, #3
   5a174:	ldr	r1, [fp, #-20]	; 0xffffffec
   5a178:	ldrb	r1, [r1, #3]
   5a17c:	cmp	r1, #45	; 0x2d
   5a180:	movw	r1, #0
   5a184:	moveq	r1, #1
   5a188:	and	r1, r1, #1
   5a18c:	add	r0, r0, r1
   5a190:	movw	r1, #57302	; 0xdfd6
   5a194:	movt	r1, #7
   5a198:	bl	124c8 <strcmp@plt>
   5a19c:	cmp	r0, #0
   5a1a0:	bne	5a1bc <__assert_fail@plt+0x47604>
   5a1a4:	ldr	r0, [fp, #-8]
   5a1a8:	ldrb	r1, [r0, #88]	; 0x58
   5a1ac:	bic	r1, r1, #4
   5a1b0:	movw	r2, #4
   5a1b4:	orr	r1, r1, r2
   5a1b8:	strb	r1, [r0, #88]	; 0x58
   5a1bc:	ldr	r0, [fp, #-8]
   5a1c0:	ldrb	r1, [r0, #88]	; 0x58
   5a1c4:	bic	r1, r1, #8
   5a1c8:	strb	r1, [r0, #88]	; 0x58
   5a1cc:	ldr	r0, [fp, #-8]
   5a1d0:	ldr	r0, [r0, #92]	; 0x5c
   5a1d4:	cmp	r0, #1
   5a1d8:	ble	5a320 <__assert_fail@plt+0x47768>
   5a1dc:	ldr	r0, [fp, #-8]
   5a1e0:	ldrb	r0, [r0, #88]	; 0x58
   5a1e4:	ubfx	r0, r0, #2, #1
   5a1e8:	and	r0, r0, #255	; 0xff
   5a1ec:	cmp	r0, #0
   5a1f0:	beq	5a208 <__assert_fail@plt+0x47650>
   5a1f4:	ldr	r0, [fp, #-8]
   5a1f8:	movw	r1, #59220	; 0xe754
   5a1fc:	movt	r1, #7
   5a200:	str	r1, [r0, #60]	; 0x3c
   5a204:	b	5a31c <__assert_fail@plt+0x47764>
   5a208:	movw	r0, #32
   5a20c:	movw	r1, #1
   5a210:	bl	50240 <__assert_fail@plt+0x3d688>
   5a214:	ldr	r1, [fp, #-8]
   5a218:	str	r0, [r1, #60]	; 0x3c
   5a21c:	ldr	r0, [fp, #-8]
   5a220:	ldr	r0, [r0, #60]	; 0x3c
   5a224:	movw	r1, #0
   5a228:	cmp	r0, r1
   5a22c:	bne	5a23c <__assert_fail@plt+0x47684>
   5a230:	movw	r0, #12
   5a234:	str	r0, [fp, #-4]
   5a238:	b	5a378 <__assert_fail@plt+0x477c0>
   5a23c:	movw	r0, #0
   5a240:	str	r0, [fp, #-32]	; 0xffffffe0
   5a244:	str	r0, [fp, #-40]	; 0xffffffd8
   5a248:	ldr	r0, [fp, #-32]	; 0xffffffe0
   5a24c:	cmp	r0, #8
   5a250:	bge	5a318 <__assert_fail@plt+0x47760>
   5a254:	movw	r0, #0
   5a258:	str	r0, [fp, #-36]	; 0xffffffdc
   5a25c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   5a260:	cmp	r0, #32
   5a264:	bge	5a304 <__assert_fail@plt+0x4774c>
   5a268:	ldr	r0, [fp, #-40]	; 0xffffffd8
   5a26c:	bl	12930 <btowc@plt>
   5a270:	str	r0, [fp, #-44]	; 0xffffffd4
   5a274:	ldr	r0, [fp, #-44]	; 0xffffffd4
   5a278:	cmn	r0, #1
   5a27c:	beq	5a2a8 <__assert_fail@plt+0x476f0>
   5a280:	ldr	r0, [fp, #-36]	; 0xffffffdc
   5a284:	mov	r1, #1
   5a288:	lsl	r0, r1, r0
   5a28c:	ldr	r1, [fp, #-8]
   5a290:	ldr	r1, [r1, #60]	; 0x3c
   5a294:	ldr	r2, [fp, #-32]	; 0xffffffe0
   5a298:	add	r1, r1, r2, lsl #2
   5a29c:	ldr	r2, [r1]
   5a2a0:	orr	r0, r2, r0
   5a2a4:	str	r0, [r1]
   5a2a8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   5a2ac:	mvn	r1, #127	; 0x7f
   5a2b0:	and	r0, r0, r1
   5a2b4:	cmp	r0, #0
   5a2b8:	bne	5a2e4 <__assert_fail@plt+0x4772c>
   5a2bc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   5a2c0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   5a2c4:	cmp	r0, r1
   5a2c8:	beq	5a2e4 <__assert_fail@plt+0x4772c>
   5a2cc:	ldr	r0, [fp, #-8]
   5a2d0:	ldrb	r1, [r0, #88]	; 0x58
   5a2d4:	bic	r1, r1, #8
   5a2d8:	movw	r2, #8
   5a2dc:	orr	r1, r1, r2
   5a2e0:	strb	r1, [r0, #88]	; 0x58
   5a2e4:	b	5a2e8 <__assert_fail@plt+0x47730>
   5a2e8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   5a2ec:	add	r0, r0, #1
   5a2f0:	str	r0, [fp, #-36]	; 0xffffffdc
   5a2f4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   5a2f8:	add	r0, r0, #1
   5a2fc:	str	r0, [fp, #-40]	; 0xffffffd8
   5a300:	b	5a25c <__assert_fail@plt+0x476a4>
   5a304:	b	5a308 <__assert_fail@plt+0x47750>
   5a308:	ldr	r0, [fp, #-32]	; 0xffffffe0
   5a30c:	add	r0, r0, #1
   5a310:	str	r0, [fp, #-32]	; 0xffffffe0
   5a314:	b	5a248 <__assert_fail@plt+0x47690>
   5a318:	b	5a31c <__assert_fail@plt+0x47764>
   5a31c:	b	5a320 <__assert_fail@plt+0x47768>
   5a320:	ldr	r0, [fp, #-8]
   5a324:	ldr	r0, [r0]
   5a328:	movw	r1, #0
   5a32c:	cmp	r0, r1
   5a330:	movw	r0, #1
   5a334:	str	r0, [sp, #4]
   5a338:	beq	5a358 <__assert_fail@plt+0x477a0>
   5a33c:	ldr	r0, [fp, #-8]
   5a340:	ldr	r0, [r0, #32]
   5a344:	movw	r1, #0
   5a348:	cmp	r0, r1
   5a34c:	movw	r0, #0
   5a350:	moveq	r0, #1
   5a354:	str	r0, [sp, #4]
   5a358:	ldr	r0, [sp, #4]
   5a35c:	tst	r0, #1
   5a360:	beq	5a370 <__assert_fail@plt+0x477b8>
   5a364:	movw	r0, #12
   5a368:	str	r0, [fp, #-4]
   5a36c:	b	5a378 <__assert_fail@plt+0x477c0>
   5a370:	movw	r0, #0
   5a374:	str	r0, [fp, #-4]
   5a378:	ldr	r0, [fp, #-4]
   5a37c:	mov	sp, fp
   5a380:	pop	{fp, pc}
   5a384:	svcvc	0x00ffffff
   5a388:	push	{fp, lr}
   5a38c:	mov	fp, sp
   5a390:	sub	sp, sp, #48	; 0x30
   5a394:	ldr	ip, [fp, #12]
   5a398:	ldr	lr, [fp, #8]
   5a39c:	str	r0, [fp, #-8]
   5a3a0:	str	r1, [fp, #-12]
   5a3a4:	str	r2, [fp, #-16]
   5a3a8:	str	r3, [fp, #-20]	; 0xffffffec
   5a3ac:	and	r0, lr, #1
   5a3b0:	strb	r0, [fp, #-21]	; 0xffffffeb
   5a3b4:	ldr	r0, [fp, #-8]
   5a3b8:	movw	r1, #0
   5a3bc:	and	r1, r1, #255	; 0xff
   5a3c0:	movw	r2, #84	; 0x54
   5a3c4:	str	ip, [sp, #16]
   5a3c8:	bl	12900 <memset@plt>
   5a3cc:	ldr	r0, [fp, #-12]
   5a3d0:	ldr	r1, [fp, #-16]
   5a3d4:	ldr	r2, [fp, #-8]
   5a3d8:	ldr	r3, [fp, #-20]	; 0xffffffec
   5a3dc:	ldrb	ip, [fp, #-21]	; 0xffffffeb
   5a3e0:	ldr	lr, [fp, #12]
   5a3e4:	and	ip, ip, #1
   5a3e8:	str	ip, [sp]
   5a3ec:	str	lr, [sp, #4]
   5a3f0:	bl	5b244 <__assert_fail@plt+0x4868c>
   5a3f4:	ldr	r0, [fp, #-16]
   5a3f8:	cmp	r0, #0
   5a3fc:	ble	5a430 <__assert_fail@plt+0x47878>
   5a400:	ldr	r0, [fp, #-8]
   5a404:	ldr	r1, [fp, #-16]
   5a408:	add	r1, r1, #1
   5a40c:	bl	5b348 <__assert_fail@plt+0x48790>
   5a410:	str	r0, [sp, #20]
   5a414:	ldr	r0, [sp, #20]
   5a418:	cmp	r0, #0
   5a41c:	beq	5a42c <__assert_fail@plt+0x47874>
   5a420:	ldr	r0, [sp, #20]
   5a424:	str	r0, [fp, #-4]
   5a428:	b	5a590 <__assert_fail@plt+0x479d8>
   5a42c:	b	5a430 <__assert_fail@plt+0x47878>
   5a430:	ldr	r0, [fp, #-8]
   5a434:	ldrb	r0, [r0, #75]	; 0x4b
   5a438:	cmp	r0, #0
   5a43c:	beq	5a450 <__assert_fail@plt+0x47898>
   5a440:	ldr	r0, [fp, #-8]
   5a444:	ldr	r0, [r0, #4]
   5a448:	str	r0, [sp, #12]
   5a44c:	b	5a458 <__assert_fail@plt+0x478a0>
   5a450:	ldr	r0, [fp, #-12]
   5a454:	str	r0, [sp, #12]
   5a458:	ldr	r0, [sp, #12]
   5a45c:	ldr	r1, [fp, #-8]
   5a460:	str	r0, [r1, #4]
   5a464:	ldrb	r0, [fp, #-21]	; 0xffffffeb
   5a468:	tst	r0, #1
   5a46c:	beq	5a528 <__assert_fail@plt+0x47970>
   5a470:	ldr	r0, [fp, #12]
   5a474:	ldr	r0, [r0, #92]	; 0x5c
   5a478:	cmp	r0, #1
   5a47c:	ble	5a51c <__assert_fail@plt+0x47964>
   5a480:	b	5a484 <__assert_fail@plt+0x478cc>
   5a484:	ldr	r0, [fp, #-8]
   5a488:	bl	5b4a0 <__assert_fail@plt+0x488e8>
   5a48c:	str	r0, [sp, #20]
   5a490:	ldr	r0, [sp, #20]
   5a494:	cmp	r0, #0
   5a498:	beq	5a4a8 <__assert_fail@plt+0x478f0>
   5a49c:	ldr	r0, [sp, #20]
   5a4a0:	str	r0, [fp, #-4]
   5a4a4:	b	5a590 <__assert_fail@plt+0x479d8>
   5a4a8:	ldr	r0, [fp, #-8]
   5a4ac:	ldr	r0, [r0, #32]
   5a4b0:	ldr	r1, [fp, #-16]
   5a4b4:	cmp	r0, r1
   5a4b8:	blt	5a4c0 <__assert_fail@plt+0x47908>
   5a4bc:	b	5a518 <__assert_fail@plt+0x47960>
   5a4c0:	ldr	r0, [fp, #-8]
   5a4c4:	ldr	r0, [r0, #36]	; 0x24
   5a4c8:	ldr	r1, [fp, #-8]
   5a4cc:	ldr	r1, [r1, #28]
   5a4d0:	ldr	r2, [fp, #12]
   5a4d4:	ldr	r2, [r2, #92]	; 0x5c
   5a4d8:	add	r1, r1, r2
   5a4dc:	cmp	r0, r1
   5a4e0:	ble	5a4e8 <__assert_fail@plt+0x47930>
   5a4e4:	b	5a518 <__assert_fail@plt+0x47960>
   5a4e8:	ldr	r0, [fp, #-8]
   5a4ec:	ldr	r1, [r0, #36]	; 0x24
   5a4f0:	lsl	r1, r1, #1
   5a4f4:	bl	5b348 <__assert_fail@plt+0x48790>
   5a4f8:	str	r0, [sp, #20]
   5a4fc:	ldr	r0, [sp, #20]
   5a500:	cmp	r0, #0
   5a504:	beq	5a514 <__assert_fail@plt+0x4795c>
   5a508:	ldr	r0, [sp, #20]
   5a50c:	str	r0, [fp, #-4]
   5a510:	b	5a590 <__assert_fail@plt+0x479d8>
   5a514:	b	5a484 <__assert_fail@plt+0x478cc>
   5a518:	b	5a524 <__assert_fail@plt+0x4796c>
   5a51c:	ldr	r0, [fp, #-8]
   5a520:	bl	5bf4c <__assert_fail@plt+0x49394>
   5a524:	b	5a588 <__assert_fail@plt+0x479d0>
   5a528:	ldr	r0, [fp, #12]
   5a52c:	ldr	r0, [r0, #92]	; 0x5c
   5a530:	cmp	r0, #1
   5a534:	ble	5a544 <__assert_fail@plt+0x4798c>
   5a538:	ldr	r0, [fp, #-8]
   5a53c:	bl	5c050 <__assert_fail@plt+0x49498>
   5a540:	b	5a584 <__assert_fail@plt+0x479cc>
   5a544:	ldr	r0, [fp, #-20]	; 0xffffffec
   5a548:	movw	r1, #0
   5a54c:	cmp	r0, r1
   5a550:	beq	5a560 <__assert_fail@plt+0x479a8>
   5a554:	ldr	r0, [fp, #-8]
   5a558:	bl	5c390 <__assert_fail@plt+0x497d8>
   5a55c:	b	5a580 <__assert_fail@plt+0x479c8>
   5a560:	ldr	r0, [fp, #-8]
   5a564:	ldr	r0, [r0, #36]	; 0x24
   5a568:	ldr	r1, [fp, #-8]
   5a56c:	str	r0, [r1, #28]
   5a570:	ldr	r0, [fp, #-8]
   5a574:	ldr	r0, [r0, #36]	; 0x24
   5a578:	ldr	r1, [fp, #-8]
   5a57c:	str	r0, [r1, #32]
   5a580:	b	5a584 <__assert_fail@plt+0x479cc>
   5a584:	b	5a588 <__assert_fail@plt+0x479d0>
   5a588:	movw	r0, #0
   5a58c:	str	r0, [fp, #-4]
   5a590:	ldr	r0, [fp, #-4]
   5a594:	mov	sp, fp
   5a598:	pop	{fp, pc}
   5a59c:	push	{fp, lr}
   5a5a0:	mov	fp, sp
   5a5a4:	sub	sp, sp, #16
   5a5a8:	str	r0, [fp, #-4]
   5a5ac:	ldr	r0, [fp, #-4]
   5a5b0:	ldr	r0, [r0]
   5a5b4:	str	r0, [sp, #8]
   5a5b8:	ldr	r0, [sp, #8]
   5a5bc:	ldr	r0, [r0, #56]	; 0x38
   5a5c0:	str	r0, [sp, #4]
   5a5c4:	ldr	r0, [sp, #4]
   5a5c8:	movw	r1, #0
   5a5cc:	cmp	r0, r1
   5a5d0:	beq	5a5f4 <__assert_fail@plt+0x47a3c>
   5a5d4:	ldr	r0, [sp, #4]
   5a5d8:	ldr	r0, [r0]
   5a5dc:	str	r0, [sp]
   5a5e0:	ldr	r0, [sp, #4]
   5a5e4:	bl	50c68 <__assert_fail@plt+0x3e0b0>
   5a5e8:	ldr	r0, [sp]
   5a5ec:	str	r0, [sp, #4]
   5a5f0:	b	5a5c4 <__assert_fail@plt+0x47a0c>
   5a5f4:	ldr	r0, [sp, #8]
   5a5f8:	movw	r1, #0
   5a5fc:	str	r1, [r0, #56]	; 0x38
   5a600:	ldr	r0, [sp, #8]
   5a604:	movw	r2, #31
   5a608:	str	r2, [r0, #64]	; 0x40
   5a60c:	ldr	r0, [sp, #8]
   5a610:	str	r1, [r0, #52]	; 0x34
   5a614:	ldr	r0, [sp, #8]
   5a618:	ldr	r0, [r0, #16]
   5a61c:	bl	50c68 <__assert_fail@plt+0x3e0b0>
   5a620:	ldr	r0, [sp, #8]
   5a624:	movw	r1, #0
   5a628:	str	r1, [r0, #16]
   5a62c:	mov	sp, fp
   5a630:	pop	{fp, pc}
   5a634:	push	{fp, lr}
   5a638:	mov	fp, sp
   5a63c:	sub	sp, sp, #8
   5a640:	str	r0, [sp, #4]
   5a644:	ldr	r0, [sp, #4]
   5a648:	ldr	r0, [r0, #8]
   5a64c:	bl	50c68 <__assert_fail@plt+0x3e0b0>
   5a650:	ldr	r0, [sp, #4]
   5a654:	ldr	r0, [r0, #12]
   5a658:	bl	50c68 <__assert_fail@plt+0x3e0b0>
   5a65c:	ldr	r0, [sp, #4]
   5a660:	ldrsb	r0, [r0, #75]	; 0x4b
   5a664:	cmp	r0, #0
   5a668:	beq	5a678 <__assert_fail@plt+0x47ac0>
   5a66c:	ldr	r0, [sp, #4]
   5a670:	ldr	r0, [r0, #4]
   5a674:	bl	50c68 <__assert_fail@plt+0x3e0b0>
   5a678:	mov	sp, fp
   5a67c:	pop	{fp, pc}
   5a680:	push	{fp, lr}
   5a684:	mov	fp, sp
   5a688:	sub	sp, sp, #72	; 0x48
   5a68c:	str	r0, [fp, #-8]
   5a690:	str	r1, [fp, #-12]
   5a694:	str	r2, [fp, #-16]
   5a698:	str	r3, [fp, #-20]	; 0xffffffec
   5a69c:	ldr	r0, [fp, #-12]
   5a6a0:	ldr	r0, [r0]
   5a6a4:	str	r0, [fp, #-24]	; 0xffffffe8
   5a6a8:	ldr	r0, [fp, #-16]
   5a6ac:	ldr	r1, [fp, #-24]	; 0xffffffe8
   5a6b0:	str	r0, [r1, #128]	; 0x80
   5a6b4:	ldr	r1, [fp, #-8]
   5a6b8:	ldr	r0, [fp, #-16]
   5a6bc:	orr	r2, r0, #8388608	; 0x800000
   5a6c0:	add	r0, sp, #28
   5a6c4:	bl	5c46c <__assert_fail@plt+0x498b4>
   5a6c8:	ldr	r0, [fp, #-8]
   5a6cc:	ldr	r1, [fp, #-12]
   5a6d0:	ldr	r3, [fp, #-16]
   5a6d4:	ldr	r2, [fp, #-20]	; 0xffffffec
   5a6d8:	add	lr, sp, #28
   5a6dc:	str	r2, [sp, #24]
   5a6e0:	mov	r2, lr
   5a6e4:	movw	lr, #0
   5a6e8:	str	lr, [sp]
   5a6ec:	ldr	lr, [sp, #24]
   5a6f0:	str	lr, [sp, #4]
   5a6f4:	bl	5c4ac <__assert_fail@plt+0x498f4>
   5a6f8:	str	r0, [fp, #-28]	; 0xffffffe4
   5a6fc:	ldr	r0, [fp, #-20]	; 0xffffffec
   5a700:	ldr	r0, [r0]
   5a704:	cmp	r0, #0
   5a708:	movw	r0, #0
   5a70c:	str	r0, [sp, #20]
   5a710:	beq	5a72c <__assert_fail@plt+0x47b74>
   5a714:	ldr	r0, [fp, #-28]	; 0xffffffe4
   5a718:	movw	r1, #0
   5a71c:	cmp	r0, r1
   5a720:	movw	r0, #0
   5a724:	moveq	r0, #1
   5a728:	str	r0, [sp, #20]
   5a72c:	ldr	r0, [sp, #20]
   5a730:	tst	r0, #1
   5a734:	beq	5a744 <__assert_fail@plt+0x47b8c>
   5a738:	movw	r0, #0
   5a73c:	str	r0, [fp, #-4]
   5a740:	b	5a7f0 <__assert_fail@plt+0x47c38>
   5a744:	ldr	r0, [fp, #-24]	; 0xffffffe8
   5a748:	movw	r1, #0
   5a74c:	str	r1, [sp, #16]
   5a750:	ldr	r2, [sp, #16]
   5a754:	movw	r3, #2
   5a758:	bl	5c704 <__assert_fail@plt+0x49b4c>
   5a75c:	str	r0, [fp, #-32]	; 0xffffffe0
   5a760:	ldr	r0, [fp, #-28]	; 0xffffffe4
   5a764:	movw	r1, #0
   5a768:	cmp	r0, r1
   5a76c:	beq	5a78c <__assert_fail@plt+0x47bd4>
   5a770:	ldr	r0, [fp, #-24]	; 0xffffffe8
   5a774:	ldr	r1, [fp, #-28]	; 0xffffffe4
   5a778:	ldr	r2, [fp, #-32]	; 0xffffffe0
   5a77c:	movw	r3, #16
   5a780:	bl	5c704 <__assert_fail@plt+0x49b4c>
   5a784:	str	r0, [sp, #36]	; 0x24
   5a788:	b	5a794 <__assert_fail@plt+0x47bdc>
   5a78c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   5a790:	str	r0, [sp, #36]	; 0x24
   5a794:	ldr	r0, [fp, #-32]	; 0xffffffe0
   5a798:	movw	r1, #0
   5a79c:	cmp	r0, r1
   5a7a0:	movw	r0, #1
   5a7a4:	str	r0, [sp, #12]
   5a7a8:	beq	5a7c4 <__assert_fail@plt+0x47c0c>
   5a7ac:	ldr	r0, [sp, #36]	; 0x24
   5a7b0:	movw	r1, #0
   5a7b4:	cmp	r0, r1
   5a7b8:	movw	r0, #0
   5a7bc:	moveq	r0, #1
   5a7c0:	str	r0, [sp, #12]
   5a7c4:	ldr	r0, [sp, #12]
   5a7c8:	tst	r0, #1
   5a7cc:	beq	5a7e8 <__assert_fail@plt+0x47c30>
   5a7d0:	ldr	r0, [fp, #-20]	; 0xffffffec
   5a7d4:	movw	r1, #12
   5a7d8:	str	r1, [r0]
   5a7dc:	movw	r0, #0
   5a7e0:	str	r0, [fp, #-4]
   5a7e4:	b	5a7f0 <__assert_fail@plt+0x47c38>
   5a7e8:	ldr	r0, [sp, #36]	; 0x24
   5a7ec:	str	r0, [fp, #-4]
   5a7f0:	ldr	r0, [fp, #-4]
   5a7f4:	mov	sp, fp
   5a7f8:	pop	{fp, pc}
   5a7fc:	push	{fp, lr}
   5a800:	mov	fp, sp
   5a804:	sub	sp, sp, #48	; 0x30
   5a808:	str	r0, [fp, #-8]
   5a80c:	ldr	r0, [fp, #-8]
   5a810:	ldr	r0, [r0]
   5a814:	str	r0, [fp, #-12]
   5a818:	ldr	r0, [fp, #-12]
   5a81c:	ldr	r0, [r0, #4]
   5a820:	lsl	r0, r0, #2
   5a824:	bl	549ac <__assert_fail@plt+0x41df4>
   5a828:	ldr	lr, [fp, #-12]
   5a82c:	str	r0, [lr, #12]
   5a830:	ldr	r0, [fp, #-12]
   5a834:	ldr	r0, [r0, #4]
   5a838:	lsl	r0, r0, #2
   5a83c:	bl	549ac <__assert_fail@plt+0x41df4>
   5a840:	ldr	lr, [fp, #-12]
   5a844:	str	r0, [lr, #16]
   5a848:	ldr	r0, [fp, #-12]
   5a84c:	ldr	r0, [r0, #4]
   5a850:	movw	lr, #12
   5a854:	mul	r0, r0, lr
   5a858:	bl	549ac <__assert_fail@plt+0x41df4>
   5a85c:	ldr	lr, [fp, #-12]
   5a860:	str	r0, [lr, #20]
   5a864:	ldr	r0, [fp, #-12]
   5a868:	ldr	r0, [r0, #4]
   5a86c:	movw	lr, #12
   5a870:	mul	r0, r0, lr
   5a874:	bl	549ac <__assert_fail@plt+0x41df4>
   5a878:	ldr	lr, [fp, #-12]
   5a87c:	str	r0, [lr, #24]
   5a880:	ldr	r0, [fp, #-12]
   5a884:	ldr	r0, [r0, #12]
   5a888:	movw	lr, #0
   5a88c:	cmp	r0, lr
   5a890:	movw	r0, #1
   5a894:	str	r0, [sp, #24]
   5a898:	beq	5a8f0 <__assert_fail@plt+0x47d38>
   5a89c:	ldr	r0, [fp, #-12]
   5a8a0:	ldr	r0, [r0, #16]
   5a8a4:	movw	r1, #0
   5a8a8:	cmp	r0, r1
   5a8ac:	movw	r0, #1
   5a8b0:	str	r0, [sp, #24]
   5a8b4:	beq	5a8f0 <__assert_fail@plt+0x47d38>
   5a8b8:	ldr	r0, [fp, #-12]
   5a8bc:	ldr	r0, [r0, #20]
   5a8c0:	movw	r1, #0
   5a8c4:	cmp	r0, r1
   5a8c8:	movw	r0, #1
   5a8cc:	str	r0, [sp, #24]
   5a8d0:	beq	5a8f0 <__assert_fail@plt+0x47d38>
   5a8d4:	ldr	r0, [fp, #-12]
   5a8d8:	ldr	r0, [r0, #24]
   5a8dc:	movw	r1, #0
   5a8e0:	cmp	r0, r1
   5a8e4:	movw	r0, #0
   5a8e8:	moveq	r0, #1
   5a8ec:	str	r0, [sp, #24]
   5a8f0:	ldr	r0, [sp, #24]
   5a8f4:	tst	r0, #1
   5a8f8:	beq	5a908 <__assert_fail@plt+0x47d50>
   5a8fc:	movw	r0, #12
   5a900:	str	r0, [fp, #-4]
   5a904:	b	5abc8 <__assert_fail@plt+0x48010>
   5a908:	ldr	r0, [fp, #-8]
   5a90c:	ldr	r0, [r0, #24]
   5a910:	lsl	r0, r0, #2
   5a914:	bl	549ac <__assert_fail@plt+0x41df4>
   5a918:	ldr	lr, [fp, #-12]
   5a91c:	str	r0, [lr, #132]	; 0x84
   5a920:	ldr	r0, [fp, #-12]
   5a924:	ldr	r0, [r0, #132]	; 0x84
   5a928:	movw	lr, #0
   5a92c:	cmp	r0, lr
   5a930:	beq	5aa24 <__assert_fail@plt+0x47e6c>
   5a934:	movw	r0, #0
   5a938:	str	r0, [fp, #-20]	; 0xffffffec
   5a93c:	ldr	r0, [fp, #-20]	; 0xffffffec
   5a940:	ldr	r1, [fp, #-8]
   5a944:	ldr	r1, [r1, #24]
   5a948:	cmp	r0, r1
   5a94c:	bcs	5a978 <__assert_fail@plt+0x47dc0>
   5a950:	ldr	r0, [fp, #-20]	; 0xffffffec
   5a954:	mov	r1, r0
   5a958:	ldr	r2, [fp, #-12]
   5a95c:	ldr	r2, [r2, #132]	; 0x84
   5a960:	add	r0, r2, r0, lsl #2
   5a964:	str	r1, [r0]
   5a968:	ldr	r0, [fp, #-20]	; 0xffffffec
   5a96c:	add	r0, r0, #1
   5a970:	str	r0, [fp, #-20]	; 0xffffffec
   5a974:	b	5a93c <__assert_fail@plt+0x47d84>
   5a978:	ldr	r0, [fp, #-12]
   5a97c:	ldr	r0, [r0, #52]	; 0x34
   5a980:	ldr	r1, [fp, #-12]
   5a984:	movw	r2, #8208	; 0x2010
   5a988:	movt	r2, #6
   5a98c:	str	r1, [sp, #20]
   5a990:	mov	r1, r2
   5a994:	ldr	r2, [sp, #20]
   5a998:	bl	61ef4 <__assert_fail@plt+0x4f33c>
   5a99c:	movw	r1, #0
   5a9a0:	str	r1, [fp, #-20]	; 0xffffffec
   5a9a4:	str	r0, [sp, #16]
   5a9a8:	ldr	r0, [fp, #-20]	; 0xffffffec
   5a9ac:	ldr	r1, [fp, #-8]
   5a9b0:	ldr	r1, [r1, #24]
   5a9b4:	cmp	r0, r1
   5a9b8:	bcs	5a9f4 <__assert_fail@plt+0x47e3c>
   5a9bc:	ldr	r0, [fp, #-12]
   5a9c0:	ldr	r0, [r0, #132]	; 0x84
   5a9c4:	ldr	r1, [fp, #-20]	; 0xffffffec
   5a9c8:	add	r0, r0, r1, lsl #2
   5a9cc:	ldr	r0, [r0]
   5a9d0:	ldr	r1, [fp, #-20]	; 0xffffffec
   5a9d4:	cmp	r0, r1
   5a9d8:	beq	5a9e0 <__assert_fail@plt+0x47e28>
   5a9dc:	b	5a9f4 <__assert_fail@plt+0x47e3c>
   5a9e0:	b	5a9e4 <__assert_fail@plt+0x47e2c>
   5a9e4:	ldr	r0, [fp, #-20]	; 0xffffffec
   5a9e8:	add	r0, r0, #1
   5a9ec:	str	r0, [fp, #-20]	; 0xffffffec
   5a9f0:	b	5a9a8 <__assert_fail@plt+0x47df0>
   5a9f4:	ldr	r0, [fp, #-20]	; 0xffffffec
   5a9f8:	ldr	r1, [fp, #-8]
   5a9fc:	ldr	r1, [r1, #24]
   5aa00:	cmp	r0, r1
   5aa04:	bne	5aa20 <__assert_fail@plt+0x47e68>
   5aa08:	ldr	r0, [fp, #-12]
   5aa0c:	ldr	r0, [r0, #132]	; 0x84
   5aa10:	bl	50c68 <__assert_fail@plt+0x3e0b0>
   5aa14:	ldr	r0, [fp, #-12]
   5aa18:	movw	lr, #0
   5aa1c:	str	lr, [r0, #132]	; 0x84
   5aa20:	b	5aa24 <__assert_fail@plt+0x47e6c>
   5aa24:	ldr	r0, [fp, #-12]
   5aa28:	ldr	r0, [r0, #52]	; 0x34
   5aa2c:	ldr	r1, [fp, #-8]
   5aa30:	movw	r2, #8580	; 0x2184
   5aa34:	movt	r2, #6
   5aa38:	str	r1, [sp, #12]
   5aa3c:	mov	r1, r2
   5aa40:	ldr	r2, [sp, #12]
   5aa44:	bl	5db08 <__assert_fail@plt+0x4af50>
   5aa48:	str	r0, [fp, #-16]
   5aa4c:	ldr	r0, [fp, #-16]
   5aa50:	cmp	r0, #0
   5aa54:	beq	5aa64 <__assert_fail@plt+0x47eac>
   5aa58:	ldr	r0, [fp, #-16]
   5aa5c:	str	r0, [fp, #-4]
   5aa60:	b	5abc8 <__assert_fail@plt+0x48010>
   5aa64:	ldr	r0, [fp, #-12]
   5aa68:	ldr	r0, [r0, #52]	; 0x34
   5aa6c:	ldr	r1, [fp, #-12]
   5aa70:	movw	r2, #8848	; 0x2290
   5aa74:	movt	r2, #6
   5aa78:	str	r1, [sp, #8]
   5aa7c:	mov	r1, r2
   5aa80:	ldr	r2, [sp, #8]
   5aa84:	bl	5db08 <__assert_fail@plt+0x4af50>
   5aa88:	str	r0, [fp, #-16]
   5aa8c:	ldr	r0, [fp, #-16]
   5aa90:	cmp	r0, #0
   5aa94:	beq	5aaa4 <__assert_fail@plt+0x47eec>
   5aa98:	ldr	r0, [fp, #-16]
   5aa9c:	str	r0, [fp, #-4]
   5aaa0:	b	5abc8 <__assert_fail@plt+0x48010>
   5aaa4:	ldr	r0, [fp, #-12]
   5aaa8:	ldr	r0, [r0, #52]	; 0x34
   5aaac:	ldr	r1, [fp, #-12]
   5aab0:	movw	r2, #9120	; 0x23a0
   5aab4:	movt	r2, #6
   5aab8:	str	r1, [sp, #4]
   5aabc:	mov	r1, r2
   5aac0:	ldr	r2, [sp, #4]
   5aac4:	bl	61ef4 <__assert_fail@plt+0x4f33c>
   5aac8:	ldr	r1, [fp, #-12]
   5aacc:	ldr	r1, [r1, #52]	; 0x34
   5aad0:	ldr	r2, [fp, #-12]
   5aad4:	str	r0, [sp]
   5aad8:	mov	r0, r1
   5aadc:	movw	r1, #9340	; 0x247c
   5aae0:	movt	r1, #6
   5aae4:	bl	61ef4 <__assert_fail@plt+0x4f33c>
   5aae8:	str	r0, [fp, #-16]
   5aaec:	ldr	r0, [fp, #-16]
   5aaf0:	cmp	r0, #0
   5aaf4:	beq	5ab04 <__assert_fail@plt+0x47f4c>
   5aaf8:	ldr	r0, [fp, #-16]
   5aafc:	str	r0, [fp, #-4]
   5ab00:	b	5abc8 <__assert_fail@plt+0x48010>
   5ab04:	ldr	r0, [fp, #-12]
   5ab08:	bl	626e4 <__assert_fail@plt+0x4fb2c>
   5ab0c:	str	r0, [fp, #-16]
   5ab10:	ldr	r0, [fp, #-16]
   5ab14:	cmp	r0, #0
   5ab18:	beq	5ab28 <__assert_fail@plt+0x47f70>
   5ab1c:	ldr	r0, [fp, #-16]
   5ab20:	str	r0, [fp, #-4]
   5ab24:	b	5abc8 <__assert_fail@plt+0x48010>
   5ab28:	ldr	r0, [fp, #-8]
   5ab2c:	ldrb	r0, [r0, #28]
   5ab30:	ubfx	r0, r0, #4, #1
   5ab34:	and	r0, r0, #255	; 0xff
   5ab38:	cmp	r0, #0
   5ab3c:	bne	5ab68 <__assert_fail@plt+0x47fb0>
   5ab40:	ldr	r0, [fp, #-8]
   5ab44:	ldr	r0, [r0, #24]
   5ab48:	cmp	r0, #0
   5ab4c:	bls	5ab68 <__assert_fail@plt+0x47fb0>
   5ab50:	ldr	r0, [fp, #-12]
   5ab54:	ldrb	r0, [r0, #88]	; 0x58
   5ab58:	and	r0, r0, #1
   5ab5c:	and	r0, r0, #255	; 0xff
   5ab60:	cmp	r0, #0
   5ab64:	bne	5ab78 <__assert_fail@plt+0x47fc0>
   5ab68:	ldr	r0, [fp, #-12]
   5ab6c:	ldr	r0, [r0, #76]	; 0x4c
   5ab70:	cmp	r0, #0
   5ab74:	beq	5abc0 <__assert_fail@plt+0x48008>
   5ab78:	ldr	r0, [fp, #-12]
   5ab7c:	ldr	r0, [r0, #8]
   5ab80:	movw	r1, #12
   5ab84:	mul	r0, r0, r1
   5ab88:	bl	549ac <__assert_fail@plt+0x41df4>
   5ab8c:	ldr	r1, [fp, #-12]
   5ab90:	str	r0, [r1, #28]
   5ab94:	ldr	r0, [fp, #-12]
   5ab98:	ldr	r0, [r0, #28]
   5ab9c:	movw	r1, #0
   5aba0:	cmp	r0, r1
   5aba4:	bne	5abb4 <__assert_fail@plt+0x47ffc>
   5aba8:	movw	r0, #12
   5abac:	str	r0, [fp, #-4]
   5abb0:	b	5abc8 <__assert_fail@plt+0x48010>
   5abb4:	ldr	r0, [fp, #-12]
   5abb8:	bl	6282c <__assert_fail@plt+0x4fc74>
   5abbc:	str	r0, [fp, #-16]
   5abc0:	ldr	r0, [fp, #-16]
   5abc4:	str	r0, [fp, #-4]
   5abc8:	ldr	r0, [fp, #-4]
   5abcc:	mov	sp, fp
   5abd0:	pop	{fp, pc}
   5abd4:	push	{fp, lr}
   5abd8:	mov	fp, sp
   5abdc:	sub	sp, sp, #32
   5abe0:	str	r0, [fp, #-4]
   5abe4:	movw	r0, #0
   5abe8:	strb	r0, [fp, #-13]
   5abec:	strb	r0, [fp, #-14]
   5abf0:	movw	r0, #0
   5abf4:	str	r0, [fp, #-8]
   5abf8:	ldr	r0, [fp, #-8]
   5abfc:	ldr	r1, [fp, #-4]
   5ac00:	ldr	r1, [r1, #8]
   5ac04:	cmp	r0, r1
   5ac08:	bcs	5ad88 <__assert_fail@plt+0x481d0>
   5ac0c:	ldr	r0, [fp, #-4]
   5ac10:	ldr	r0, [r0]
   5ac14:	ldr	r1, [fp, #-8]
   5ac18:	add	r0, r0, r1, lsl #3
   5ac1c:	ldrb	r0, [r0, #4]
   5ac20:	sub	r0, r0, #1
   5ac24:	cmp	r0, #11
   5ac28:	str	r0, [sp, #8]
   5ac2c:	bhi	5ad70 <__assert_fail@plt+0x481b8>
   5ac30:	add	r0, pc, #8
   5ac34:	ldr	r1, [sp, #8]
   5ac38:	ldr	r0, [r0, r1, lsl #2]
   5ac3c:	mov	pc, r0
   5ac40:	andeq	sl, r5, r0, ror ip
   5ac44:	andeq	sl, r5, r0, lsl #26
   5ac48:	andeq	sl, r5, r8, lsl #26
   5ac4c:	andeq	sl, r5, r0, lsl #26
   5ac50:	strdeq	sl, [r5], -r4
   5ac54:	andeq	sl, r5, r4, lsl #26
   5ac58:	andeq	sl, r5, r0, ror sp
   5ac5c:	andeq	sl, r5, r0, lsl #26
   5ac60:	andeq	sl, r5, r0, lsl #26
   5ac64:	andeq	sl, r5, r0, lsl #26
   5ac68:	andeq	sl, r5, r0, lsl #26
   5ac6c:	muleq	r5, r8, ip
   5ac70:	ldr	r0, [fp, #-4]
   5ac74:	ldr	r0, [r0]
   5ac78:	ldr	r1, [fp, #-8]
   5ac7c:	add	r0, r0, r1, lsl #3
   5ac80:	ldrb	r0, [r0]
   5ac84:	cmp	r0, #128	; 0x80
   5ac88:	blt	5ac94 <__assert_fail@plt+0x480dc>
   5ac8c:	movw	r0, #1
   5ac90:	strb	r0, [fp, #-13]
   5ac94:	b	5ad74 <__assert_fail@plt+0x481bc>
   5ac98:	ldr	r0, [fp, #-4]
   5ac9c:	ldr	r0, [r0]
   5aca0:	ldr	r1, [fp, #-8]
   5aca4:	ldr	r0, [r0, r1, lsl #3]
   5aca8:	cmp	r0, #16
   5acac:	str	r0, [sp, #4]
   5acb0:	beq	5ace8 <__assert_fail@plt+0x48130>
   5acb4:	b	5acb8 <__assert_fail@plt+0x48100>
   5acb8:	ldr	r0, [sp, #4]
   5acbc:	cmp	r0, #32
   5acc0:	beq	5ace8 <__assert_fail@plt+0x48130>
   5acc4:	b	5acc8 <__assert_fail@plt+0x48110>
   5acc8:	ldr	r0, [sp, #4]
   5accc:	cmp	r0, #64	; 0x40
   5acd0:	beq	5ace8 <__assert_fail@plt+0x48130>
   5acd4:	b	5acd8 <__assert_fail@plt+0x48120>
   5acd8:	ldr	r0, [sp, #4]
   5acdc:	cmp	r0, #128	; 0x80
   5ace0:	bne	5acec <__assert_fail@plt+0x48134>
   5ace4:	b	5ace8 <__assert_fail@plt+0x48130>
   5ace8:	b	5acf0 <__assert_fail@plt+0x48138>
   5acec:	b	5aed8 <__assert_fail@plt+0x48320>
   5acf0:	b	5ad74 <__assert_fail@plt+0x481bc>
   5acf4:	movw	r0, #1
   5acf8:	strb	r0, [fp, #-14]
   5acfc:	b	5ad74 <__assert_fail@plt+0x481bc>
   5ad00:	b	5ad74 <__assert_fail@plt+0x481bc>
   5ad04:	b	5aed8 <__assert_fail@plt+0x48320>
   5ad08:	movw	r0, #0
   5ad0c:	str	r0, [sp, #12]
   5ad10:	movw	r0, #4
   5ad14:	str	r0, [fp, #-12]
   5ad18:	ldr	r0, [fp, #-12]
   5ad1c:	cmp	r0, #8
   5ad20:	bge	5ad6c <__assert_fail@plt+0x481b4>
   5ad24:	ldr	r0, [fp, #-4]
   5ad28:	ldr	r0, [r0]
   5ad2c:	ldr	r1, [fp, #-8]
   5ad30:	ldr	r0, [r0, r1, lsl #3]
   5ad34:	ldr	r1, [fp, #-12]
   5ad38:	add	r0, r0, r1, lsl #2
   5ad3c:	ldr	r0, [r0]
   5ad40:	ldr	r1, [sp, #12]
   5ad44:	lsr	r0, r0, r1
   5ad48:	cmp	r0, #0
   5ad4c:	beq	5ad54 <__assert_fail@plt+0x4819c>
   5ad50:	b	5aed8 <__assert_fail@plt+0x48320>
   5ad54:	movw	r0, #0
   5ad58:	str	r0, [sp, #12]
   5ad5c:	ldr	r0, [fp, #-12]
   5ad60:	add	r0, r0, #1
   5ad64:	str	r0, [fp, #-12]
   5ad68:	b	5ad18 <__assert_fail@plt+0x48160>
   5ad6c:	b	5ad74 <__assert_fail@plt+0x481bc>
   5ad70:	bl	12b64 <abort@plt>
   5ad74:	b	5ad78 <__assert_fail@plt+0x481c0>
   5ad78:	ldr	r0, [fp, #-8]
   5ad7c:	add	r0, r0, #1
   5ad80:	str	r0, [fp, #-8]
   5ad84:	b	5abf8 <__assert_fail@plt+0x48040>
   5ad88:	ldrb	r0, [fp, #-13]
   5ad8c:	tst	r0, #1
   5ad90:	bne	5ada0 <__assert_fail@plt+0x481e8>
   5ad94:	ldrb	r0, [fp, #-14]
   5ad98:	tst	r0, #1
   5ad9c:	beq	5ae7c <__assert_fail@plt+0x482c4>
   5ada0:	movw	r0, #0
   5ada4:	str	r0, [fp, #-8]
   5ada8:	ldr	r0, [fp, #-8]
   5adac:	ldr	r1, [fp, #-4]
   5adb0:	ldr	r1, [r1, #8]
   5adb4:	cmp	r0, r1
   5adb8:	bcs	5ae78 <__assert_fail@plt+0x482c0>
   5adbc:	ldr	r0, [fp, #-4]
   5adc0:	ldr	r0, [r0]
   5adc4:	ldr	r1, [fp, #-8]
   5adc8:	add	r0, r0, r1, lsl #3
   5adcc:	ldr	r0, [r0, #4]
   5add0:	and	r0, r0, #255	; 0xff
   5add4:	cmp	r0, #1
   5add8:	bne	5ae1c <__assert_fail@plt+0x48264>
   5addc:	ldr	r0, [fp, #-4]
   5ade0:	ldr	r0, [r0]
   5ade4:	ldr	r1, [fp, #-8]
   5ade8:	add	r0, r0, r1, lsl #3
   5adec:	ldrb	r0, [r0]
   5adf0:	cmp	r0, #128	; 0x80
   5adf4:	blt	5ae1c <__assert_fail@plt+0x48264>
   5adf8:	ldr	r0, [fp, #-4]
   5adfc:	ldr	r0, [r0]
   5ae00:	ldr	r1, [fp, #-8]
   5ae04:	add	r0, r0, r1, lsl #3
   5ae08:	ldr	r1, [r0, #4]
   5ae0c:	mvn	r2, #2097152	; 0x200000
   5ae10:	and	r1, r1, r2
   5ae14:	str	r1, [r0, #4]
   5ae18:	b	5ae64 <__assert_fail@plt+0x482ac>
   5ae1c:	ldr	r0, [fp, #-4]
   5ae20:	ldr	r0, [r0]
   5ae24:	ldr	r1, [fp, #-8]
   5ae28:	add	r0, r0, r1, lsl #3
   5ae2c:	ldr	r0, [r0, #4]
   5ae30:	and	r0, r0, #255	; 0xff
   5ae34:	cmp	r0, #5
   5ae38:	bne	5ae60 <__assert_fail@plt+0x482a8>
   5ae3c:	ldr	r0, [fp, #-4]
   5ae40:	ldr	r0, [r0]
   5ae44:	ldr	r1, [fp, #-8]
   5ae48:	add	r0, r0, r1, lsl #3
   5ae4c:	ldr	r1, [r0, #4]
   5ae50:	mvn	r2, #255	; 0xff
   5ae54:	and	r1, r1, r2
   5ae58:	orr	r1, r1, #7
   5ae5c:	str	r1, [r0, #4]
   5ae60:	b	5ae64 <__assert_fail@plt+0x482ac>
   5ae64:	b	5ae68 <__assert_fail@plt+0x482b0>
   5ae68:	ldr	r0, [fp, #-8]
   5ae6c:	add	r0, r0, #1
   5ae70:	str	r0, [fp, #-8]
   5ae74:	b	5ada8 <__assert_fail@plt+0x481f0>
   5ae78:	b	5ae7c <__assert_fail@plt+0x482c4>
   5ae7c:	ldr	r0, [fp, #-4]
   5ae80:	mov	r1, #1
   5ae84:	str	r1, [r0, #92]	; 0x5c
   5ae88:	ldr	r0, [fp, #-4]
   5ae8c:	ldrb	r1, [r0, #88]	; 0x58
   5ae90:	bic	r1, r1, #4
   5ae94:	strb	r1, [r0, #88]	; 0x58
   5ae98:	ldr	r0, [fp, #-4]
   5ae9c:	ldr	r0, [r0, #76]	; 0x4c
   5aea0:	cmp	r0, #0
   5aea4:	movw	r0, #1
   5aea8:	str	r0, [sp]
   5aeac:	bgt	5aeb8 <__assert_fail@plt+0x48300>
   5aeb0:	ldrb	r0, [fp, #-14]
   5aeb4:	str	r0, [sp]
   5aeb8:	ldr	r0, [sp]
   5aebc:	ldr	r1, [fp, #-4]
   5aec0:	and	r0, r0, #1
   5aec4:	ldrb	r2, [r1, #88]	; 0x58
   5aec8:	lsl	r0, r0, #1
   5aecc:	bic	r2, r2, #2
   5aed0:	orr	r0, r2, r0
   5aed4:	strb	r0, [r1, #88]	; 0x58
   5aed8:	mov	sp, fp
   5aedc:	pop	{fp, pc}
   5aee0:	push	{fp, lr}
   5aee4:	mov	fp, sp
   5aee8:	sub	sp, sp, #64	; 0x40
   5aeec:	str	r0, [fp, #-8]
   5aef0:	ldr	r0, [fp, #-8]
   5aef4:	ldr	r0, [r0, #52]	; 0x34
   5aef8:	ldr	r0, [r0, #12]
   5aefc:	ldr	r0, [r0, #28]
   5af00:	str	r0, [fp, #-12]
   5af04:	ldr	r0, [fp, #-12]
   5af08:	ldr	r1, [fp, #-8]
   5af0c:	str	r0, [r1, #72]	; 0x48
   5af10:	ldr	r0, [fp, #-8]
   5af14:	ldr	r0, [r0, #24]
   5af18:	ldr	r1, [fp, #-12]
   5af1c:	movw	r2, #12
   5af20:	mul	r1, r1, r2
   5af24:	add	r1, r0, r1
   5af28:	add	r0, sp, #32
   5af2c:	bl	6427c <__assert_fail@plt+0x516c4>
   5af30:	str	r0, [fp, #-20]	; 0xffffffec
   5af34:	ldr	r0, [fp, #-20]	; 0xffffffec
   5af38:	cmp	r0, #0
   5af3c:	beq	5af4c <__assert_fail@plt+0x48394>
   5af40:	ldr	r0, [fp, #-20]	; 0xffffffec
   5af44:	str	r0, [fp, #-4]
   5af48:	b	5b238 <__assert_fail@plt+0x48680>
   5af4c:	ldr	r0, [fp, #-8]
   5af50:	ldr	r0, [r0, #76]	; 0x4c
   5af54:	cmp	r0, #0
   5af58:	ble	5b0ec <__assert_fail@plt+0x48534>
   5af5c:	movw	r0, #0
   5af60:	str	r0, [fp, #-16]
   5af64:	ldr	r0, [fp, #-16]
   5af68:	ldr	r1, [sp, #36]	; 0x24
   5af6c:	cmp	r0, r1
   5af70:	bge	5b0e8 <__assert_fail@plt+0x48530>
   5af74:	ldr	r0, [sp, #40]	; 0x28
   5af78:	ldr	r1, [fp, #-16]
   5af7c:	ldr	r0, [r0, r1, lsl #2]
   5af80:	str	r0, [sp, #28]
   5af84:	ldr	r0, [fp, #-8]
   5af88:	ldr	r0, [r0]
   5af8c:	ldr	r1, [sp, #28]
   5af90:	add	r0, r0, r1, lsl #3
   5af94:	ldr	r0, [r0, #4]
   5af98:	and	r0, r0, #255	; 0xff
   5af9c:	str	r0, [sp, #24]
   5afa0:	ldr	r0, [sp, #24]
   5afa4:	cmp	r0, #4
   5afa8:	beq	5afb0 <__assert_fail@plt+0x483f8>
   5afac:	b	5b0d8 <__assert_fail@plt+0x48520>
   5afb0:	movw	r0, #0
   5afb4:	str	r0, [sp, #20]
   5afb8:	ldr	r0, [sp, #20]
   5afbc:	ldr	r1, [sp, #36]	; 0x24
   5afc0:	cmp	r0, r1
   5afc4:	bge	5b034 <__assert_fail@plt+0x4847c>
   5afc8:	ldr	r0, [fp, #-8]
   5afcc:	ldr	r0, [r0]
   5afd0:	ldr	r1, [sp, #40]	; 0x28
   5afd4:	ldr	r2, [sp, #20]
   5afd8:	ldr	r1, [r1, r2, lsl #2]
   5afdc:	add	r0, r0, r1, lsl #3
   5afe0:	str	r0, [sp, #16]
   5afe4:	ldr	r0, [sp, #16]
   5afe8:	ldr	r0, [r0, #4]
   5afec:	and	r0, r0, #255	; 0xff
   5aff0:	cmp	r0, #9
   5aff4:	bne	5b020 <__assert_fail@plt+0x48468>
   5aff8:	ldr	r0, [sp, #16]
   5affc:	ldr	r0, [r0]
   5b000:	ldr	r1, [fp, #-8]
   5b004:	ldr	r1, [r1]
   5b008:	ldr	r2, [sp, #28]
   5b00c:	add	r1, r1, r2, lsl #3
   5b010:	ldr	r1, [r1]
   5b014:	cmp	r0, r1
   5b018:	bne	5b020 <__assert_fail@plt+0x48468>
   5b01c:	b	5b034 <__assert_fail@plt+0x4847c>
   5b020:	b	5b024 <__assert_fail@plt+0x4846c>
   5b024:	ldr	r0, [sp, #20]
   5b028:	add	r0, r0, #1
   5b02c:	str	r0, [sp, #20]
   5b030:	b	5afb8 <__assert_fail@plt+0x48400>
   5b034:	ldr	r0, [sp, #20]
   5b038:	ldr	r1, [sp, #36]	; 0x24
   5b03c:	cmp	r0, r1
   5b040:	bne	5b048 <__assert_fail@plt+0x48490>
   5b044:	b	5b0d8 <__assert_fail@plt+0x48520>
   5b048:	ldr	r0, [sp, #24]
   5b04c:	cmp	r0, #4
   5b050:	bne	5b0d4 <__assert_fail@plt+0x4851c>
   5b054:	ldr	r0, [fp, #-8]
   5b058:	ldr	r0, [r0, #20]
   5b05c:	ldr	r1, [sp, #28]
   5b060:	movw	r2, #12
   5b064:	mul	r1, r1, r2
   5b068:	add	r0, r0, r1
   5b06c:	ldr	r0, [r0, #8]
   5b070:	ldr	r0, [r0]
   5b074:	str	r0, [sp, #12]
   5b078:	ldr	r1, [sp, #12]
   5b07c:	add	r0, sp, #32
   5b080:	bl	64350 <__assert_fail@plt+0x51798>
   5b084:	cmp	r0, #0
   5b088:	bne	5b0d0 <__assert_fail@plt+0x48518>
   5b08c:	ldr	r0, [fp, #-8]
   5b090:	ldr	r0, [r0, #24]
   5b094:	ldr	r1, [sp, #12]
   5b098:	movw	r2, #12
   5b09c:	mul	r1, r1, r2
   5b0a0:	add	r1, r0, r1
   5b0a4:	add	r0, sp, #32
   5b0a8:	bl	639a8 <__assert_fail@plt+0x50df0>
   5b0ac:	str	r0, [sp, #8]
   5b0b0:	ldr	r0, [sp, #8]
   5b0b4:	cmp	r0, #0
   5b0b8:	beq	5b0c8 <__assert_fail@plt+0x48510>
   5b0bc:	ldr	r0, [sp, #8]
   5b0c0:	str	r0, [fp, #-4]
   5b0c4:	b	5b238 <__assert_fail@plt+0x48680>
   5b0c8:	movw	r0, #0
   5b0cc:	str	r0, [fp, #-16]
   5b0d0:	b	5b0d4 <__assert_fail@plt+0x4851c>
   5b0d4:	b	5b0d8 <__assert_fail@plt+0x48520>
   5b0d8:	ldr	r0, [fp, #-16]
   5b0dc:	add	r0, r0, #1
   5b0e0:	str	r0, [fp, #-16]
   5b0e4:	b	5af64 <__assert_fail@plt+0x483ac>
   5b0e8:	b	5b0ec <__assert_fail@plt+0x48534>
   5b0ec:	ldr	r1, [fp, #-8]
   5b0f0:	sub	r0, fp, #20
   5b0f4:	add	r2, sp, #32
   5b0f8:	movw	r3, #0
   5b0fc:	bl	64440 <__assert_fail@plt+0x51888>
   5b100:	ldr	r1, [fp, #-8]
   5b104:	str	r0, [r1, #36]	; 0x24
   5b108:	ldr	r0, [fp, #-8]
   5b10c:	ldr	r0, [r0, #36]	; 0x24
   5b110:	movw	r1, #0
   5b114:	cmp	r0, r1
   5b118:	bne	5b128 <__assert_fail@plt+0x48570>
   5b11c:	ldr	r0, [fp, #-20]	; 0xffffffec
   5b120:	str	r0, [fp, #-4]
   5b124:	b	5b238 <__assert_fail@plt+0x48680>
   5b128:	ldr	r0, [fp, #-8]
   5b12c:	ldr	r0, [r0, #36]	; 0x24
   5b130:	ldrb	r0, [r0, #52]	; 0x34
   5b134:	lsr	r0, r0, #7
   5b138:	and	r0, r0, #255	; 0xff
   5b13c:	cmp	r0, #0
   5b140:	beq	5b208 <__assert_fail@plt+0x48650>
   5b144:	ldr	r1, [fp, #-8]
   5b148:	sub	r0, fp, #20
   5b14c:	add	r2, sp, #32
   5b150:	movw	r3, #1
   5b154:	bl	64440 <__assert_fail@plt+0x51888>
   5b158:	ldr	r1, [fp, #-8]
   5b15c:	str	r0, [r1, #40]	; 0x28
   5b160:	ldr	r1, [fp, #-8]
   5b164:	sub	r0, fp, #20
   5b168:	add	r2, sp, #32
   5b16c:	movw	r3, #2
   5b170:	bl	64440 <__assert_fail@plt+0x51888>
   5b174:	ldr	r1, [fp, #-8]
   5b178:	str	r0, [r1, #44]	; 0x2c
   5b17c:	ldr	r1, [fp, #-8]
   5b180:	sub	r0, fp, #20
   5b184:	add	r2, sp, #32
   5b188:	movw	r3, #6
   5b18c:	bl	64440 <__assert_fail@plt+0x51888>
   5b190:	ldr	r1, [fp, #-8]
   5b194:	str	r0, [r1, #48]	; 0x30
   5b198:	ldr	r0, [fp, #-8]
   5b19c:	ldr	r0, [r0, #40]	; 0x28
   5b1a0:	movw	r1, #0
   5b1a4:	cmp	r0, r1
   5b1a8:	movw	r0, #1
   5b1ac:	str	r0, [sp, #4]
   5b1b0:	beq	5b1ec <__assert_fail@plt+0x48634>
   5b1b4:	ldr	r0, [fp, #-8]
   5b1b8:	ldr	r0, [r0, #44]	; 0x2c
   5b1bc:	movw	r1, #0
   5b1c0:	cmp	r0, r1
   5b1c4:	movw	r0, #1
   5b1c8:	str	r0, [sp, #4]
   5b1cc:	beq	5b1ec <__assert_fail@plt+0x48634>
   5b1d0:	ldr	r0, [fp, #-8]
   5b1d4:	ldr	r0, [r0, #48]	; 0x30
   5b1d8:	movw	r1, #0
   5b1dc:	cmp	r0, r1
   5b1e0:	movw	r0, #0
   5b1e4:	moveq	r0, #1
   5b1e8:	str	r0, [sp, #4]
   5b1ec:	ldr	r0, [sp, #4]
   5b1f0:	tst	r0, #1
   5b1f4:	beq	5b204 <__assert_fail@plt+0x4864c>
   5b1f8:	ldr	r0, [fp, #-20]	; 0xffffffec
   5b1fc:	str	r0, [fp, #-4]
   5b200:	b	5b238 <__assert_fail@plt+0x48680>
   5b204:	b	5b228 <__assert_fail@plt+0x48670>
   5b208:	ldr	r0, [fp, #-8]
   5b20c:	ldr	r0, [r0, #36]	; 0x24
   5b210:	ldr	r1, [fp, #-8]
   5b214:	str	r0, [r1, #48]	; 0x30
   5b218:	ldr	r1, [fp, #-8]
   5b21c:	str	r0, [r1, #44]	; 0x2c
   5b220:	ldr	r1, [fp, #-8]
   5b224:	str	r0, [r1, #40]	; 0x28
   5b228:	ldr	r0, [sp, #40]	; 0x28
   5b22c:	bl	50c68 <__assert_fail@plt+0x3e0b0>
   5b230:	movw	r0, #0
   5b234:	str	r0, [fp, #-4]
   5b238:	ldr	r0, [fp, #-4]
   5b23c:	mov	sp, fp
   5b240:	pop	{fp, pc}
   5b244:	push	{fp, lr}
   5b248:	mov	fp, sp
   5b24c:	sub	sp, sp, #28
   5b250:	ldr	ip, [fp, #12]
   5b254:	ldr	lr, [fp, #8]
   5b258:	str	r0, [fp, #-4]
   5b25c:	str	r1, [fp, #-8]
   5b260:	str	r2, [fp, #-12]
   5b264:	str	r3, [sp, #12]
   5b268:	and	r0, lr, #1
   5b26c:	strb	r0, [sp, #11]
   5b270:	ldr	r0, [fp, #-4]
   5b274:	ldr	r1, [fp, #-12]
   5b278:	str	r0, [r1]
   5b27c:	ldr	r0, [fp, #-8]
   5b280:	ldr	r1, [fp, #-12]
   5b284:	str	r0, [r1, #48]	; 0x30
   5b288:	ldr	r0, [fp, #-8]
   5b28c:	ldr	r1, [fp, #-12]
   5b290:	str	r0, [r1, #44]	; 0x2c
   5b294:	ldr	r0, [sp, #12]
   5b298:	ldr	r1, [fp, #-12]
   5b29c:	str	r0, [r1, #64]	; 0x40
   5b2a0:	ldrb	r0, [sp, #11]
   5b2a4:	and	r0, r0, #1
   5b2a8:	ldr	r1, [fp, #-12]
   5b2ac:	strb	r0, [r1, #72]	; 0x48
   5b2b0:	ldr	r0, [sp, #12]
   5b2b4:	movw	r1, #0
   5b2b8:	cmp	r0, r1
   5b2bc:	movw	r0, #1
   5b2c0:	str	ip, [sp, #4]
   5b2c4:	str	r0, [sp]
   5b2c8:	bne	5b2d4 <__assert_fail@plt+0x4871c>
   5b2cc:	ldrb	r0, [sp, #11]
   5b2d0:	str	r0, [sp]
   5b2d4:	ldr	r0, [sp]
   5b2d8:	and	r0, r0, #1
   5b2dc:	ldr	r1, [fp, #-12]
   5b2e0:	strb	r0, [r1, #75]	; 0x4b
   5b2e4:	ldr	r0, [fp, #12]
   5b2e8:	ldr	r0, [r0, #92]	; 0x5c
   5b2ec:	ldr	r1, [fp, #-12]
   5b2f0:	str	r0, [r1, #80]	; 0x50
   5b2f4:	ldr	r0, [fp, #12]
   5b2f8:	ldrb	r0, [r0, #88]	; 0x58
   5b2fc:	ubfx	r0, r0, #2, #1
   5b300:	ldr	r1, [fp, #-12]
   5b304:	strb	r0, [r1, #73]	; 0x49
   5b308:	ldr	r0, [fp, #12]
   5b30c:	ldrb	r0, [r0, #88]	; 0x58
   5b310:	ubfx	r0, r0, #3, #1
   5b314:	and	r0, r0, #255	; 0xff
   5b318:	ldr	r1, [fp, #-12]
   5b31c:	strb	r0, [r1, #74]	; 0x4a
   5b320:	ldr	r0, [fp, #-12]
   5b324:	ldr	r0, [r0, #48]	; 0x30
   5b328:	ldr	r1, [fp, #-12]
   5b32c:	str	r0, [r1, #56]	; 0x38
   5b330:	ldr	r0, [fp, #-12]
   5b334:	ldr	r0, [r0, #56]	; 0x38
   5b338:	ldr	r1, [fp, #-12]
   5b33c:	str	r0, [r1, #52]	; 0x34
   5b340:	mov	sp, fp
   5b344:	pop	{fp, pc}
   5b348:	push	{fp, lr}
   5b34c:	mov	fp, sp
   5b350:	sub	sp, sp, #32
   5b354:	str	r0, [fp, #-8]
   5b358:	str	r1, [fp, #-12]
   5b35c:	ldr	r0, [fp, #-8]
   5b360:	ldr	r0, [r0, #80]	; 0x50
   5b364:	cmp	r0, #1
   5b368:	ble	5b428 <__assert_fail@plt+0x48870>
   5b36c:	ldr	r0, [pc, #296]	; 5b49c <__assert_fail@plt+0x488e4>
   5b370:	movw	r1, #4
   5b374:	str	r1, [sp, #12]
   5b378:	ldr	r1, [fp, #-12]
   5b37c:	cmp	r0, r1
   5b380:	bcs	5b390 <__assert_fail@plt+0x487d8>
   5b384:	movw	r0, #12
   5b388:	str	r0, [fp, #-4]
   5b38c:	b	5b490 <__assert_fail@plt+0x488d8>
   5b390:	ldr	r0, [fp, #-8]
   5b394:	ldr	r0, [r0, #8]
   5b398:	ldr	r1, [fp, #-12]
   5b39c:	lsl	r1, r1, #2
   5b3a0:	bl	55a84 <__assert_fail@plt+0x42ecc>
   5b3a4:	str	r0, [sp, #16]
   5b3a8:	ldr	r0, [sp, #16]
   5b3ac:	movw	r1, #0
   5b3b0:	cmp	r0, r1
   5b3b4:	bne	5b3c4 <__assert_fail@plt+0x4880c>
   5b3b8:	movw	r0, #12
   5b3bc:	str	r0, [fp, #-4]
   5b3c0:	b	5b490 <__assert_fail@plt+0x488d8>
   5b3c4:	ldr	r0, [sp, #16]
   5b3c8:	ldr	r1, [fp, #-8]
   5b3cc:	str	r0, [r1, #8]
   5b3d0:	ldr	r0, [fp, #-8]
   5b3d4:	ldr	r0, [r0, #12]
   5b3d8:	movw	r1, #0
   5b3dc:	cmp	r0, r1
   5b3e0:	beq	5b424 <__assert_fail@plt+0x4886c>
   5b3e4:	ldr	r0, [fp, #-8]
   5b3e8:	ldr	r0, [r0, #12]
   5b3ec:	ldr	r1, [fp, #-12]
   5b3f0:	lsl	r1, r1, #2
   5b3f4:	bl	55a84 <__assert_fail@plt+0x42ecc>
   5b3f8:	str	r0, [sp, #8]
   5b3fc:	ldr	r0, [sp, #8]
   5b400:	movw	r1, #0
   5b404:	cmp	r0, r1
   5b408:	bne	5b418 <__assert_fail@plt+0x48860>
   5b40c:	movw	r0, #12
   5b410:	str	r0, [fp, #-4]
   5b414:	b	5b490 <__assert_fail@plt+0x488d8>
   5b418:	ldr	r0, [sp, #8]
   5b41c:	ldr	r1, [fp, #-8]
   5b420:	str	r0, [r1, #12]
   5b424:	b	5b428 <__assert_fail@plt+0x48870>
   5b428:	ldr	r0, [fp, #-8]
   5b42c:	ldrsb	r0, [r0, #75]	; 0x4b
   5b430:	cmp	r0, #0
   5b434:	beq	5b47c <__assert_fail@plt+0x488c4>
   5b438:	ldr	r0, [fp, #-8]
   5b43c:	ldr	r0, [r0, #4]
   5b440:	ldr	r1, [fp, #-12]
   5b444:	mov	r2, r1
   5b448:	str	r2, [sp]
   5b44c:	bl	55a84 <__assert_fail@plt+0x42ecc>
   5b450:	str	r0, [sp, #4]
   5b454:	ldr	r0, [sp, #4]
   5b458:	movw	r1, #0
   5b45c:	cmp	r0, r1
   5b460:	bne	5b470 <__assert_fail@plt+0x488b8>
   5b464:	movw	r0, #12
   5b468:	str	r0, [fp, #-4]
   5b46c:	b	5b490 <__assert_fail@plt+0x488d8>
   5b470:	ldr	r0, [sp, #4]
   5b474:	ldr	r1, [fp, #-8]
   5b478:	str	r0, [r1, #4]
   5b47c:	ldr	r0, [fp, #-12]
   5b480:	ldr	r1, [fp, #-8]
   5b484:	str	r0, [r1, #36]	; 0x24
   5b488:	movw	r0, #0
   5b48c:	str	r0, [fp, #-4]
   5b490:	ldr	r0, [fp, #-4]
   5b494:	mov	sp, fp
   5b498:	pop	{fp, pc}
   5b49c:	svccc	0x00ffffff
   5b4a0:	push	{fp, lr}
   5b4a4:	mov	fp, sp
   5b4a8:	sub	sp, sp, #192	; 0xc0
   5b4ac:	str	r0, [fp, #-8]
   5b4b0:	ldr	r0, [fp, #-8]
   5b4b4:	ldr	r0, [r0, #28]
   5b4b8:	str	r0, [fp, #-24]	; 0xffffffe8
   5b4bc:	ldr	r0, [fp, #-8]
   5b4c0:	ldr	r0, [r0, #36]	; 0x24
   5b4c4:	ldr	r1, [fp, #-8]
   5b4c8:	ldr	r1, [r1, #48]	; 0x30
   5b4cc:	cmp	r0, r1
   5b4d0:	ble	5b4e4 <__assert_fail@plt+0x4892c>
   5b4d4:	ldr	r0, [fp, #-8]
   5b4d8:	ldr	r0, [r0, #48]	; 0x30
   5b4dc:	str	r0, [sp, #32]
   5b4e0:	b	5b4f0 <__assert_fail@plt+0x48938>
   5b4e4:	ldr	r0, [fp, #-8]
   5b4e8:	ldr	r0, [r0, #36]	; 0x24
   5b4ec:	str	r0, [sp, #32]
   5b4f0:	ldr	r0, [sp, #32]
   5b4f4:	str	r0, [fp, #-28]	; 0xffffffe4
   5b4f8:	ldr	r0, [fp, #-8]
   5b4fc:	ldrsb	r0, [r0, #74]	; 0x4a
   5b500:	cmp	r0, #0
   5b504:	bne	5b864 <__assert_fail@plt+0x48cac>
   5b508:	ldr	r0, [fp, #-8]
   5b50c:	ldr	r0, [r0, #64]	; 0x40
   5b510:	movw	r1, #0
   5b514:	cmp	r0, r1
   5b518:	bne	5b864 <__assert_fail@plt+0x48cac>
   5b51c:	ldr	r0, [fp, #-8]
   5b520:	ldrsb	r0, [r0, #76]	; 0x4c
   5b524:	cmp	r0, #0
   5b528:	bne	5b864 <__assert_fail@plt+0x48cac>
   5b52c:	b	5b530 <__assert_fail@plt+0x48978>
   5b530:	ldr	r0, [fp, #-24]	; 0xffffffe8
   5b534:	ldr	r1, [fp, #-28]	; 0xffffffe4
   5b538:	cmp	r0, r1
   5b53c:	bge	5b840 <__assert_fail@plt+0x48c88>
   5b540:	ldr	r0, [fp, #-8]
   5b544:	ldr	r0, [r0]
   5b548:	ldr	r1, [fp, #-8]
   5b54c:	ldr	r1, [r1, #24]
   5b550:	ldr	r2, [fp, #-24]	; 0xffffffe8
   5b554:	add	r1, r1, r2
   5b558:	add	r0, r0, r1
   5b55c:	ldrb	r0, [r0]
   5b560:	strb	r0, [sp, #87]	; 0x57
   5b564:	ldrb	r0, [sp, #87]	; 0x57
   5b568:	mvn	r1, #127	; 0x7f
   5b56c:	and	r0, r0, r1
   5b570:	cmp	r0, #0
   5b574:	bne	5b5ec <__assert_fail@plt+0x48a34>
   5b578:	ldr	r0, [fp, #-8]
   5b57c:	add	r0, r0, #16
   5b580:	bl	12600 <mbsinit@plt>
   5b584:	cmp	r0, #0
   5b588:	beq	5b5ec <__assert_fail@plt+0x48a34>
   5b58c:	ldrb	r0, [sp, #87]	; 0x57
   5b590:	bl	12b40 <towupper@plt>
   5b594:	str	r0, [sp, #80]	; 0x50
   5b598:	ldr	r0, [sp, #80]	; 0x50
   5b59c:	mvn	lr, #127	; 0x7f
   5b5a0:	and	r0, r0, lr
   5b5a4:	cmp	r0, #0
   5b5a8:	bne	5b5e8 <__assert_fail@plt+0x48a30>
   5b5ac:	ldr	r0, [sp, #80]	; 0x50
   5b5b0:	ldr	r1, [fp, #-8]
   5b5b4:	ldr	r1, [r1, #4]
   5b5b8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   5b5bc:	strb	r0, [r1, r2]
   5b5c0:	ldr	r0, [sp, #80]	; 0x50
   5b5c4:	ldr	r1, [fp, #-8]
   5b5c8:	ldr	r1, [r1, #8]
   5b5cc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   5b5d0:	add	r1, r1, r2, lsl #2
   5b5d4:	str	r0, [r1]
   5b5d8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   5b5dc:	add	r0, r0, #1
   5b5e0:	str	r0, [fp, #-24]	; 0xffffffe8
   5b5e4:	b	5b530 <__assert_fail@plt+0x48978>
   5b5e8:	b	5b5ec <__assert_fail@plt+0x48a34>
   5b5ec:	ldr	r0, [fp, #-28]	; 0xffffffe4
   5b5f0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   5b5f4:	sub	r0, r0, r1
   5b5f8:	str	r0, [fp, #-32]	; 0xffffffe0
   5b5fc:	ldr	r0, [fp, #-8]
   5b600:	ldr	r1, [r0, #16]
   5b604:	str	r1, [fp, #-16]
   5b608:	ldr	r0, [r0, #20]
   5b60c:	str	r0, [fp, #-12]
   5b610:	ldr	r0, [fp, #-8]
   5b614:	ldr	r0, [r0]
   5b618:	ldr	r1, [fp, #-8]
   5b61c:	ldr	r1, [r1, #24]
   5b620:	add	r0, r0, r1
   5b624:	ldr	r1, [fp, #-24]	; 0xffffffe8
   5b628:	add	r1, r0, r1
   5b62c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   5b630:	ldr	r0, [fp, #-8]
   5b634:	add	r3, r0, #16
   5b638:	add	r0, sp, #88	; 0x58
   5b63c:	bl	54a1c <__assert_fail@plt+0x41e64>
   5b640:	str	r0, [fp, #-36]	; 0xffffffdc
   5b644:	ldr	r0, [fp, #-36]	; 0xffffffdc
   5b648:	movw	r1, #0
   5b64c:	cmp	r1, r0
   5b650:	movw	r0, #0
   5b654:	str	r0, [sp, #28]
   5b658:	bcs	5b670 <__assert_fail@plt+0x48ab8>
   5b65c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   5b660:	cmn	r0, #2
   5b664:	movw	r0, #0
   5b668:	movcc	r0, #1
   5b66c:	str	r0, [sp, #28]
   5b670:	ldr	r0, [sp, #28]
   5b674:	tst	r0, #1
   5b678:	beq	5b78c <__assert_fail@plt+0x48bd4>
   5b67c:	ldr	r0, [sp, #88]	; 0x58
   5b680:	bl	12b40 <towupper@plt>
   5b684:	str	r0, [sp, #76]	; 0x4c
   5b688:	ldr	r0, [sp, #76]	; 0x4c
   5b68c:	ldr	lr, [sp, #88]	; 0x58
   5b690:	cmp	r0, lr
   5b694:	beq	5b6ec <__assert_fail@plt+0x48b34>
   5b698:	add	r0, sp, #92	; 0x5c
   5b69c:	ldr	r1, [sp, #76]	; 0x4c
   5b6a0:	sub	r2, fp, #16
   5b6a4:	bl	1248c <wcrtomb@plt>
   5b6a8:	str	r0, [sp, #72]	; 0x48
   5b6ac:	ldr	r0, [fp, #-36]	; 0xffffffdc
   5b6b0:	ldr	r1, [sp, #72]	; 0x48
   5b6b4:	cmp	r0, r1
   5b6b8:	bne	5b6dc <__assert_fail@plt+0x48b24>
   5b6bc:	add	r1, sp, #92	; 0x5c
   5b6c0:	ldr	r0, [fp, #-8]
   5b6c4:	ldr	r0, [r0, #4]
   5b6c8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   5b6cc:	add	r0, r0, r2
   5b6d0:	ldr	r2, [fp, #-36]	; 0xffffffdc
   5b6d4:	bl	125c4 <memcpy@plt>
   5b6d8:	b	5b6e8 <__assert_fail@plt+0x48b30>
   5b6dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   5b6e0:	str	r0, [fp, #-20]	; 0xffffffec
   5b6e4:	b	5b884 <__assert_fail@plt+0x48ccc>
   5b6e8:	b	5b720 <__assert_fail@plt+0x48b68>
   5b6ec:	ldr	r0, [fp, #-8]
   5b6f0:	ldr	r0, [r0, #4]
   5b6f4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   5b6f8:	add	r0, r0, r1
   5b6fc:	ldr	r1, [fp, #-8]
   5b700:	ldr	r1, [r1]
   5b704:	ldr	r2, [fp, #-8]
   5b708:	ldr	r2, [r2, #24]
   5b70c:	add	r1, r1, r2
   5b710:	ldr	r2, [fp, #-24]	; 0xffffffe8
   5b714:	add	r1, r1, r2
   5b718:	ldr	r2, [fp, #-36]	; 0xffffffdc
   5b71c:	bl	125c4 <memcpy@plt>
   5b720:	ldr	r0, [sp, #76]	; 0x4c
   5b724:	ldr	r1, [fp, #-8]
   5b728:	ldr	r1, [r1, #8]
   5b72c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   5b730:	add	r3, r2, #1
   5b734:	str	r3, [fp, #-24]	; 0xffffffe8
   5b738:	add	r1, r1, r2, lsl #2
   5b73c:	str	r0, [r1]
   5b740:	ldr	r0, [fp, #-24]	; 0xffffffe8
   5b744:	ldr	r1, [fp, #-36]	; 0xffffffdc
   5b748:	add	r0, r0, r1
   5b74c:	sub	r0, r0, #1
   5b750:	str	r0, [fp, #-32]	; 0xffffffe0
   5b754:	ldr	r0, [fp, #-24]	; 0xffffffe8
   5b758:	ldr	r1, [fp, #-32]	; 0xffffffe0
   5b75c:	cmp	r0, r1
   5b760:	bge	5b788 <__assert_fail@plt+0x48bd0>
   5b764:	ldr	r0, [fp, #-8]
   5b768:	ldr	r0, [r0, #8]
   5b76c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   5b770:	add	r2, r1, #1
   5b774:	str	r2, [fp, #-24]	; 0xffffffe8
   5b778:	add	r0, r0, r1, lsl #2
   5b77c:	mvn	r1, #0
   5b780:	str	r1, [r0]
   5b784:	b	5b754 <__assert_fail@plt+0x48b9c>
   5b788:	b	5b83c <__assert_fail@plt+0x48c84>
   5b78c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   5b790:	cmn	r0, #1
   5b794:	beq	5b7c8 <__assert_fail@plt+0x48c10>
   5b798:	ldr	r0, [fp, #-36]	; 0xffffffdc
   5b79c:	cmp	r0, #0
   5b7a0:	beq	5b7c8 <__assert_fail@plt+0x48c10>
   5b7a4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   5b7a8:	cmn	r0, #2
   5b7ac:	bne	5b820 <__assert_fail@plt+0x48c68>
   5b7b0:	ldr	r0, [fp, #-8]
   5b7b4:	ldr	r0, [r0, #36]	; 0x24
   5b7b8:	ldr	r1, [fp, #-8]
   5b7bc:	ldr	r1, [r1, #48]	; 0x30
   5b7c0:	cmp	r0, r1
   5b7c4:	blt	5b820 <__assert_fail@plt+0x48c68>
   5b7c8:	ldrb	r0, [sp, #87]	; 0x57
   5b7cc:	ldr	r1, [fp, #-8]
   5b7d0:	ldr	r1, [r1, #4]
   5b7d4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   5b7d8:	strb	r0, [r1, r2]
   5b7dc:	ldrb	r0, [sp, #87]	; 0x57
   5b7e0:	ldr	r1, [fp, #-8]
   5b7e4:	ldr	r1, [r1, #8]
   5b7e8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   5b7ec:	add	r3, r2, #1
   5b7f0:	str	r3, [fp, #-24]	; 0xffffffe8
   5b7f4:	add	r1, r1, r2, lsl #2
   5b7f8:	str	r0, [r1]
   5b7fc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   5b800:	cmn	r0, #1
   5b804:	bne	5b81c <__assert_fail@plt+0x48c64>
   5b808:	ldr	r0, [fp, #-8]
   5b80c:	ldr	r1, [fp, #-16]
   5b810:	str	r1, [r0, #16]
   5b814:	ldr	r1, [fp, #-12]
   5b818:	str	r1, [r0, #20]
   5b81c:	b	5b838 <__assert_fail@plt+0x48c80>
   5b820:	ldr	r0, [fp, #-8]
   5b824:	ldr	r1, [fp, #-16]
   5b828:	str	r1, [r0, #16]
   5b82c:	ldr	r1, [fp, #-12]
   5b830:	str	r1, [r0, #20]
   5b834:	b	5b840 <__assert_fail@plt+0x48c88>
   5b838:	b	5b83c <__assert_fail@plt+0x48c84>
   5b83c:	b	5b530 <__assert_fail@plt+0x48978>
   5b840:	ldr	r0, [fp, #-24]	; 0xffffffe8
   5b844:	ldr	r1, [fp, #-8]
   5b848:	str	r0, [r1, #28]
   5b84c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   5b850:	ldr	r1, [fp, #-8]
   5b854:	str	r0, [r1, #32]
   5b858:	movw	r0, #0
   5b85c:	str	r0, [fp, #-4]
   5b860:	b	5bf40 <__assert_fail@plt+0x49388>
   5b864:	ldr	r0, [fp, #-8]
   5b868:	ldr	r0, [r0, #32]
   5b86c:	str	r0, [fp, #-20]	; 0xffffffec
   5b870:	ldr	r0, [fp, #-24]	; 0xffffffe8
   5b874:	ldr	r1, [fp, #-28]	; 0xffffffe4
   5b878:	cmp	r0, r1
   5b87c:	bge	5bf1c <__assert_fail@plt+0x49364>
   5b880:	b	5b884 <__assert_fail@plt+0x48ccc>
   5b884:	ldr	r0, [fp, #-28]	; 0xffffffe4
   5b888:	ldr	r1, [fp, #-24]	; 0xffffffe8
   5b88c:	sub	r0, r0, r1
   5b890:	str	r0, [fp, #-32]	; 0xffffffe0
   5b894:	ldr	r0, [fp, #-8]
   5b898:	ldr	r1, [r0, #16]
   5b89c:	str	r1, [fp, #-16]
   5b8a0:	ldr	r0, [r0, #20]
   5b8a4:	str	r0, [fp, #-12]
   5b8a8:	ldr	r0, [fp, #-8]
   5b8ac:	ldr	r0, [r0, #64]	; 0x40
   5b8b0:	movw	r1, #0
   5b8b4:	cmp	r0, r1
   5b8b8:	beq	5b970 <__assert_fail@plt+0x48db8>
   5b8bc:	movw	r0, #0
   5b8c0:	str	r0, [sp, #60]	; 0x3c
   5b8c4:	ldr	r0, [sp, #60]	; 0x3c
   5b8c8:	ldr	r1, [fp, #-8]
   5b8cc:	ldr	r1, [r1, #80]	; 0x50
   5b8d0:	cmp	r0, r1
   5b8d4:	movw	r0, #0
   5b8d8:	str	r0, [sp, #24]
   5b8dc:	bge	5b8f8 <__assert_fail@plt+0x48d40>
   5b8e0:	ldr	r0, [sp, #60]	; 0x3c
   5b8e4:	ldr	r1, [fp, #-32]	; 0xffffffe0
   5b8e8:	cmp	r0, r1
   5b8ec:	movw	r0, #0
   5b8f0:	movlt	r0, #1
   5b8f4:	str	r0, [sp, #24]
   5b8f8:	ldr	r0, [sp, #24]
   5b8fc:	tst	r0, #1
   5b900:	beq	5b964 <__assert_fail@plt+0x48dac>
   5b904:	ldr	r0, [fp, #-8]
   5b908:	ldr	r0, [r0]
   5b90c:	ldr	r1, [fp, #-8]
   5b910:	ldr	r1, [r1, #24]
   5b914:	ldr	r2, [fp, #-20]	; 0xffffffec
   5b918:	add	r1, r1, r2
   5b91c:	ldr	r2, [sp, #60]	; 0x3c
   5b920:	add	r1, r1, r2
   5b924:	add	r0, r0, r1
   5b928:	ldrb	r0, [r0]
   5b92c:	str	r0, [sp, #56]	; 0x38
   5b930:	ldr	r0, [fp, #-8]
   5b934:	ldr	r0, [r0, #64]	; 0x40
   5b938:	ldr	r1, [sp, #56]	; 0x38
   5b93c:	add	r0, r0, r1
   5b940:	ldrb	r0, [r0]
   5b944:	ldr	r1, [sp, #60]	; 0x3c
   5b948:	add	r2, sp, #92	; 0x5c
   5b94c:	add	r1, r2, r1
   5b950:	strb	r0, [r1]
   5b954:	ldr	r0, [sp, #60]	; 0x3c
   5b958:	add	r0, r0, #1
   5b95c:	str	r0, [sp, #60]	; 0x3c
   5b960:	b	5b8c4 <__assert_fail@plt+0x48d0c>
   5b964:	add	r0, sp, #92	; 0x5c
   5b968:	str	r0, [sp, #64]	; 0x40
   5b96c:	b	5b990 <__assert_fail@plt+0x48dd8>
   5b970:	ldr	r0, [fp, #-8]
   5b974:	ldr	r0, [r0]
   5b978:	ldr	r1, [fp, #-8]
   5b97c:	ldr	r1, [r1, #24]
   5b980:	add	r0, r0, r1
   5b984:	ldr	r1, [fp, #-20]	; 0xffffffec
   5b988:	add	r0, r0, r1
   5b98c:	str	r0, [sp, #64]	; 0x40
   5b990:	ldr	r1, [sp, #64]	; 0x40
   5b994:	ldr	r2, [fp, #-32]	; 0xffffffe0
   5b998:	ldr	r0, [fp, #-8]
   5b99c:	add	r3, r0, #16
   5b9a0:	add	r0, sp, #68	; 0x44
   5b9a4:	bl	54a1c <__assert_fail@plt+0x41e64>
   5b9a8:	str	r0, [fp, #-36]	; 0xffffffdc
   5b9ac:	ldr	r0, [fp, #-36]	; 0xffffffdc
   5b9b0:	movw	r1, #0
   5b9b4:	cmp	r1, r0
   5b9b8:	movw	r0, #0
   5b9bc:	str	r0, [sp, #20]
   5b9c0:	bcs	5b9d8 <__assert_fail@plt+0x48e20>
   5b9c4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   5b9c8:	cmn	r0, #2
   5b9cc:	movw	r0, #0
   5b9d0:	movcc	r0, #1
   5b9d4:	str	r0, [sp, #20]
   5b9d8:	ldr	r0, [sp, #20]
   5b9dc:	tst	r0, #1
   5b9e0:	beq	5bde0 <__assert_fail@plt+0x49228>
   5b9e4:	ldr	r0, [sp, #68]	; 0x44
   5b9e8:	bl	12b40 <towupper@plt>
   5b9ec:	str	r0, [sp, #52]	; 0x34
   5b9f0:	ldr	r0, [sp, #52]	; 0x34
   5b9f4:	ldr	lr, [sp, #68]	; 0x44
   5b9f8:	cmp	r0, lr
   5b9fc:	beq	5bce8 <__assert_fail@plt+0x49130>
   5ba00:	add	r0, sp, #92	; 0x5c
   5ba04:	ldr	r1, [sp, #52]	; 0x34
   5ba08:	sub	r2, fp, #16
   5ba0c:	bl	1248c <wcrtomb@plt>
   5ba10:	str	r0, [sp, #48]	; 0x30
   5ba14:	ldr	r0, [fp, #-36]	; 0xffffffdc
   5ba18:	ldr	r1, [sp, #48]	; 0x30
   5ba1c:	cmp	r0, r1
   5ba20:	bne	5ba44 <__assert_fail@plt+0x48e8c>
   5ba24:	add	r1, sp, #92	; 0x5c
   5ba28:	ldr	r0, [fp, #-8]
   5ba2c:	ldr	r0, [r0, #4]
   5ba30:	ldr	r2, [fp, #-24]	; 0xffffffe8
   5ba34:	add	r0, r0, r2
   5ba38:	ldr	r2, [fp, #-36]	; 0xffffffdc
   5ba3c:	bl	125c4 <memcpy@plt>
   5ba40:	b	5bce4 <__assert_fail@plt+0x4912c>
   5ba44:	ldr	r0, [sp, #48]	; 0x30
   5ba48:	cmn	r0, #1
   5ba4c:	beq	5bcc4 <__assert_fail@plt+0x4910c>
   5ba50:	ldr	r0, [fp, #-24]	; 0xffffffe8
   5ba54:	ldr	r1, [sp, #48]	; 0x30
   5ba58:	add	r0, r0, r1
   5ba5c:	ldr	r1, [fp, #-8]
   5ba60:	ldr	r1, [r1, #36]	; 0x24
   5ba64:	cmp	r0, r1
   5ba68:	bls	5ba84 <__assert_fail@plt+0x48ecc>
   5ba6c:	ldr	r0, [fp, #-8]
   5ba70:	ldr	r1, [fp, #-16]
   5ba74:	str	r1, [r0, #16]
   5ba78:	ldr	r1, [fp, #-12]
   5ba7c:	str	r1, [r0, #20]
   5ba80:	b	5bf1c <__assert_fail@plt+0x49364>
   5ba84:	ldr	r0, [fp, #-8]
   5ba88:	ldr	r0, [r0, #12]
   5ba8c:	movw	r1, #0
   5ba90:	cmp	r0, r1
   5ba94:	bne	5bad4 <__assert_fail@plt+0x48f1c>
   5ba98:	ldr	r0, [fp, #-8]
   5ba9c:	ldr	r0, [r0, #36]	; 0x24
   5baa0:	lsl	r0, r0, #2
   5baa4:	bl	549ac <__assert_fail@plt+0x41df4>
   5baa8:	ldr	lr, [fp, #-8]
   5baac:	str	r0, [lr, #12]
   5bab0:	ldr	r0, [fp, #-8]
   5bab4:	ldr	r0, [r0, #12]
   5bab8:	movw	lr, #0
   5babc:	cmp	r0, lr
   5bac0:	bne	5bad0 <__assert_fail@plt+0x48f18>
   5bac4:	movw	r0, #12
   5bac8:	str	r0, [fp, #-4]
   5bacc:	b	5bf40 <__assert_fail@plt+0x49388>
   5bad0:	b	5bad4 <__assert_fail@plt+0x48f1c>
   5bad4:	ldr	r0, [fp, #-8]
   5bad8:	ldrsb	r0, [r0, #76]	; 0x4c
   5badc:	cmp	r0, #0
   5bae0:	bne	5bb30 <__assert_fail@plt+0x48f78>
   5bae4:	movw	r0, #0
   5bae8:	str	r0, [sp, #44]	; 0x2c
   5baec:	ldr	r0, [sp, #44]	; 0x2c
   5baf0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   5baf4:	cmp	r0, r1
   5baf8:	bcs	5bb24 <__assert_fail@plt+0x48f6c>
   5bafc:	ldr	r0, [sp, #44]	; 0x2c
   5bb00:	mov	r1, r0
   5bb04:	ldr	r2, [fp, #-8]
   5bb08:	ldr	r2, [r2, #12]
   5bb0c:	add	r0, r2, r0, lsl #2
   5bb10:	str	r1, [r0]
   5bb14:	ldr	r0, [sp, #44]	; 0x2c
   5bb18:	add	r0, r0, #1
   5bb1c:	str	r0, [sp, #44]	; 0x2c
   5bb20:	b	5baec <__assert_fail@plt+0x48f34>
   5bb24:	ldr	r0, [fp, #-8]
   5bb28:	movw	r1, #1
   5bb2c:	strb	r1, [r0, #76]	; 0x4c
   5bb30:	ldr	r0, [fp, #-8]
   5bb34:	ldr	r0, [r0, #4]
   5bb38:	ldr	r1, [fp, #-24]	; 0xffffffe8
   5bb3c:	add	r0, r0, r1
   5bb40:	ldr	r2, [sp, #48]	; 0x30
   5bb44:	add	r1, sp, #92	; 0x5c
   5bb48:	bl	125c4 <memcpy@plt>
   5bb4c:	ldr	r1, [sp, #52]	; 0x34
   5bb50:	ldr	r2, [fp, #-8]
   5bb54:	ldr	r2, [r2, #8]
   5bb58:	ldr	lr, [fp, #-24]	; 0xffffffe8
   5bb5c:	str	r1, [r2, lr, lsl #2]
   5bb60:	ldr	r1, [fp, #-20]	; 0xffffffec
   5bb64:	ldr	r2, [fp, #-8]
   5bb68:	ldr	r2, [r2, #12]
   5bb6c:	ldr	lr, [fp, #-24]	; 0xffffffe8
   5bb70:	add	r2, r2, lr, lsl #2
   5bb74:	str	r1, [r2]
   5bb78:	movw	r1, #1
   5bb7c:	str	r1, [sp, #44]	; 0x2c
   5bb80:	str	r0, [sp, #16]
   5bb84:	ldr	r0, [sp, #44]	; 0x2c
   5bb88:	ldr	r1, [sp, #48]	; 0x30
   5bb8c:	cmp	r0, r1
   5bb90:	bcs	5bc18 <__assert_fail@plt+0x49060>
   5bb94:	ldr	r0, [fp, #-20]	; 0xffffffec
   5bb98:	ldr	r1, [sp, #44]	; 0x2c
   5bb9c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   5bba0:	cmp	r1, r2
   5bba4:	str	r0, [sp, #12]
   5bba8:	bcs	5bbb8 <__assert_fail@plt+0x49000>
   5bbac:	ldr	r0, [sp, #44]	; 0x2c
   5bbb0:	str	r0, [sp, #8]
   5bbb4:	b	5bbc4 <__assert_fail@plt+0x4900c>
   5bbb8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   5bbbc:	sub	r0, r0, #1
   5bbc0:	str	r0, [sp, #8]
   5bbc4:	ldr	r0, [sp, #8]
   5bbc8:	ldr	r1, [sp, #12]
   5bbcc:	add	r0, r1, r0
   5bbd0:	ldr	r2, [fp, #-8]
   5bbd4:	ldr	r2, [r2, #12]
   5bbd8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5bbdc:	ldr	ip, [sp, #44]	; 0x2c
   5bbe0:	add	r3, r3, ip
   5bbe4:	str	r0, [r2, r3, lsl #2]
   5bbe8:	ldr	r0, [fp, #-8]
   5bbec:	ldr	r0, [r0, #8]
   5bbf0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   5bbf4:	ldr	r3, [sp, #44]	; 0x2c
   5bbf8:	add	r2, r2, r3
   5bbfc:	add	r0, r0, r2, lsl #2
   5bc00:	mvn	r2, #0
   5bc04:	str	r2, [r0]
   5bc08:	ldr	r0, [sp, #44]	; 0x2c
   5bc0c:	add	r0, r0, #1
   5bc10:	str	r0, [sp, #44]	; 0x2c
   5bc14:	b	5bb84 <__assert_fail@plt+0x48fcc>
   5bc18:	ldr	r0, [sp, #48]	; 0x30
   5bc1c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   5bc20:	sub	r0, r0, r1
   5bc24:	ldr	r1, [fp, #-8]
   5bc28:	ldr	r2, [r1, #48]	; 0x30
   5bc2c:	add	r0, r2, r0
   5bc30:	str	r0, [r1, #48]	; 0x30
   5bc34:	ldr	r0, [fp, #-8]
   5bc38:	ldr	r0, [r0, #52]	; 0x34
   5bc3c:	ldr	r1, [fp, #-20]	; 0xffffffec
   5bc40:	cmp	r0, r1
   5bc44:	ble	5bc64 <__assert_fail@plt+0x490ac>
   5bc48:	ldr	r0, [sp, #48]	; 0x30
   5bc4c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   5bc50:	sub	r0, r0, r1
   5bc54:	ldr	r1, [fp, #-8]
   5bc58:	ldr	r2, [r1, #56]	; 0x38
   5bc5c:	add	r0, r2, r0
   5bc60:	str	r0, [r1, #56]	; 0x38
   5bc64:	ldr	r0, [fp, #-8]
   5bc68:	ldr	r0, [r0, #36]	; 0x24
   5bc6c:	ldr	r1, [fp, #-8]
   5bc70:	ldr	r1, [r1, #48]	; 0x30
   5bc74:	cmp	r0, r1
   5bc78:	ble	5bc8c <__assert_fail@plt+0x490d4>
   5bc7c:	ldr	r0, [fp, #-8]
   5bc80:	ldr	r0, [r0, #48]	; 0x30
   5bc84:	str	r0, [sp, #4]
   5bc88:	b	5bc98 <__assert_fail@plt+0x490e0>
   5bc8c:	ldr	r0, [fp, #-8]
   5bc90:	ldr	r0, [r0, #36]	; 0x24
   5bc94:	str	r0, [sp, #4]
   5bc98:	ldr	r0, [sp, #4]
   5bc9c:	str	r0, [fp, #-28]	; 0xffffffe4
   5bca0:	ldr	r0, [sp, #48]	; 0x30
   5bca4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   5bca8:	add	r0, r1, r0
   5bcac:	str	r0, [fp, #-24]	; 0xffffffe8
   5bcb0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   5bcb4:	ldr	r1, [fp, #-20]	; 0xffffffec
   5bcb8:	add	r0, r1, r0
   5bcbc:	str	r0, [fp, #-20]	; 0xffffffec
   5bcc0:	b	5b870 <__assert_fail@plt+0x48cb8>
   5bcc4:	ldr	r0, [fp, #-8]
   5bcc8:	ldr	r0, [r0, #4]
   5bccc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   5bcd0:	add	r0, r0, r1
   5bcd4:	ldr	r1, [sp, #64]	; 0x40
   5bcd8:	ldr	r2, [fp, #-36]	; 0xffffffdc
   5bcdc:	bl	125c4 <memcpy@plt>
   5bce0:	b	5bce4 <__assert_fail@plt+0x4912c>
   5bce4:	b	5bd04 <__assert_fail@plt+0x4914c>
   5bce8:	ldr	r0, [fp, #-8]
   5bcec:	ldr	r0, [r0, #4]
   5bcf0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   5bcf4:	add	r0, r0, r1
   5bcf8:	ldr	r1, [sp, #64]	; 0x40
   5bcfc:	ldr	r2, [fp, #-36]	; 0xffffffdc
   5bd00:	bl	125c4 <memcpy@plt>
   5bd04:	ldr	r0, [fp, #-8]
   5bd08:	ldrb	r0, [r0, #76]	; 0x4c
   5bd0c:	cmp	r0, #0
   5bd10:	beq	5bd64 <__assert_fail@plt+0x491ac>
   5bd14:	movw	r0, #0
   5bd18:	str	r0, [sp, #40]	; 0x28
   5bd1c:	ldr	r0, [sp, #40]	; 0x28
   5bd20:	ldr	r1, [fp, #-36]	; 0xffffffdc
   5bd24:	cmp	r0, r1
   5bd28:	bcs	5bd60 <__assert_fail@plt+0x491a8>
   5bd2c:	ldr	r0, [fp, #-20]	; 0xffffffec
   5bd30:	ldr	r1, [sp, #40]	; 0x28
   5bd34:	add	r0, r0, r1
   5bd38:	ldr	r2, [fp, #-8]
   5bd3c:	ldr	r2, [r2, #12]
   5bd40:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5bd44:	add	r1, r3, r1
   5bd48:	add	r1, r2, r1, lsl #2
   5bd4c:	str	r0, [r1]
   5bd50:	ldr	r0, [sp, #40]	; 0x28
   5bd54:	add	r0, r0, #1
   5bd58:	str	r0, [sp, #40]	; 0x28
   5bd5c:	b	5bd1c <__assert_fail@plt+0x49164>
   5bd60:	b	5bd64 <__assert_fail@plt+0x491ac>
   5bd64:	ldr	r0, [fp, #-36]	; 0xffffffdc
   5bd68:	ldr	r1, [fp, #-20]	; 0xffffffec
   5bd6c:	add	r0, r1, r0
   5bd70:	str	r0, [fp, #-20]	; 0xffffffec
   5bd74:	ldr	r0, [sp, #52]	; 0x34
   5bd78:	ldr	r1, [fp, #-8]
   5bd7c:	ldr	r1, [r1, #8]
   5bd80:	ldr	r2, [fp, #-24]	; 0xffffffe8
   5bd84:	add	r3, r2, #1
   5bd88:	str	r3, [fp, #-24]	; 0xffffffe8
   5bd8c:	add	r1, r1, r2, lsl #2
   5bd90:	str	r0, [r1]
   5bd94:	ldr	r0, [fp, #-24]	; 0xffffffe8
   5bd98:	ldr	r1, [fp, #-36]	; 0xffffffdc
   5bd9c:	add	r0, r0, r1
   5bda0:	sub	r0, r0, #1
   5bda4:	str	r0, [fp, #-32]	; 0xffffffe0
   5bda8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   5bdac:	ldr	r1, [fp, #-32]	; 0xffffffe0
   5bdb0:	cmp	r0, r1
   5bdb4:	bge	5bddc <__assert_fail@plt+0x49224>
   5bdb8:	ldr	r0, [fp, #-8]
   5bdbc:	ldr	r0, [r0, #8]
   5bdc0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   5bdc4:	add	r2, r1, #1
   5bdc8:	str	r2, [fp, #-24]	; 0xffffffe8
   5bdcc:	add	r0, r0, r1, lsl #2
   5bdd0:	mvn	r1, #0
   5bdd4:	str	r1, [r0]
   5bdd8:	b	5bda8 <__assert_fail@plt+0x491f0>
   5bddc:	b	5bf18 <__assert_fail@plt+0x49360>
   5bde0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   5bde4:	cmn	r0, #1
   5bde8:	beq	5be1c <__assert_fail@plt+0x49264>
   5bdec:	ldr	r0, [fp, #-36]	; 0xffffffdc
   5bdf0:	cmp	r0, #0
   5bdf4:	beq	5be1c <__assert_fail@plt+0x49264>
   5bdf8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   5bdfc:	cmn	r0, #2
   5be00:	bne	5befc <__assert_fail@plt+0x49344>
   5be04:	ldr	r0, [fp, #-8]
   5be08:	ldr	r0, [r0, #36]	; 0x24
   5be0c:	ldr	r1, [fp, #-8]
   5be10:	ldr	r1, [r1, #48]	; 0x30
   5be14:	cmp	r0, r1
   5be18:	blt	5befc <__assert_fail@plt+0x49344>
   5be1c:	ldr	r0, [fp, #-8]
   5be20:	ldr	r0, [r0]
   5be24:	ldr	r1, [fp, #-8]
   5be28:	ldr	r1, [r1, #24]
   5be2c:	ldr	r2, [fp, #-20]	; 0xffffffec
   5be30:	add	r1, r1, r2
   5be34:	add	r0, r0, r1
   5be38:	ldrb	r0, [r0]
   5be3c:	str	r0, [sp, #36]	; 0x24
   5be40:	ldr	r0, [fp, #-8]
   5be44:	ldr	r0, [r0, #64]	; 0x40
   5be48:	movw	r1, #0
   5be4c:	cmp	r0, r1
   5be50:	beq	5be6c <__assert_fail@plt+0x492b4>
   5be54:	ldr	r0, [fp, #-8]
   5be58:	ldr	r0, [r0, #64]	; 0x40
   5be5c:	ldr	r1, [sp, #36]	; 0x24
   5be60:	add	r0, r0, r1
   5be64:	ldrb	r0, [r0]
   5be68:	str	r0, [sp, #36]	; 0x24
   5be6c:	ldr	r0, [sp, #36]	; 0x24
   5be70:	ldr	r1, [fp, #-8]
   5be74:	ldr	r1, [r1, #4]
   5be78:	ldr	r2, [fp, #-24]	; 0xffffffe8
   5be7c:	add	r1, r1, r2
   5be80:	strb	r0, [r1]
   5be84:	ldr	r0, [fp, #-8]
   5be88:	ldrb	r0, [r0, #76]	; 0x4c
   5be8c:	cmp	r0, #0
   5be90:	beq	5beac <__assert_fail@plt+0x492f4>
   5be94:	ldr	r0, [fp, #-20]	; 0xffffffec
   5be98:	ldr	r1, [fp, #-8]
   5be9c:	ldr	r1, [r1, #12]
   5bea0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   5bea4:	add	r1, r1, r2, lsl #2
   5bea8:	str	r0, [r1]
   5beac:	ldr	r0, [fp, #-20]	; 0xffffffec
   5beb0:	add	r0, r0, #1
   5beb4:	str	r0, [fp, #-20]	; 0xffffffec
   5beb8:	ldr	r0, [sp, #36]	; 0x24
   5bebc:	ldr	r1, [fp, #-8]
   5bec0:	ldr	r1, [r1, #8]
   5bec4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   5bec8:	add	r3, r2, #1
   5becc:	str	r3, [fp, #-24]	; 0xffffffe8
   5bed0:	add	r1, r1, r2, lsl #2
   5bed4:	str	r0, [r1]
   5bed8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   5bedc:	cmn	r0, #1
   5bee0:	bne	5bef8 <__assert_fail@plt+0x49340>
   5bee4:	ldr	r0, [fp, #-8]
   5bee8:	ldr	r1, [fp, #-16]
   5beec:	str	r1, [r0, #16]
   5bef0:	ldr	r1, [fp, #-12]
   5bef4:	str	r1, [r0, #20]
   5bef8:	b	5bf14 <__assert_fail@plt+0x4935c>
   5befc:	ldr	r0, [fp, #-8]
   5bf00:	ldr	r1, [fp, #-16]
   5bf04:	str	r1, [r0, #16]
   5bf08:	ldr	r1, [fp, #-12]
   5bf0c:	str	r1, [r0, #20]
   5bf10:	b	5bf1c <__assert_fail@plt+0x49364>
   5bf14:	b	5bf18 <__assert_fail@plt+0x49360>
   5bf18:	b	5b870 <__assert_fail@plt+0x48cb8>
   5bf1c:	b	5bf20 <__assert_fail@plt+0x49368>
   5bf20:	ldr	r0, [fp, #-24]	; 0xffffffe8
   5bf24:	ldr	r1, [fp, #-8]
   5bf28:	str	r0, [r1, #28]
   5bf2c:	ldr	r0, [fp, #-20]	; 0xffffffec
   5bf30:	ldr	r1, [fp, #-8]
   5bf34:	str	r0, [r1, #32]
   5bf38:	movw	r0, #0
   5bf3c:	str	r0, [fp, #-4]
   5bf40:	ldr	r0, [fp, #-4]
   5bf44:	mov	sp, fp
   5bf48:	pop	{fp, pc}
   5bf4c:	push	{fp, lr}
   5bf50:	mov	fp, sp
   5bf54:	sub	sp, sp, #24
   5bf58:	str	r0, [fp, #-4]
   5bf5c:	ldr	r0, [fp, #-4]
   5bf60:	ldr	r0, [r0, #36]	; 0x24
   5bf64:	ldr	r1, [fp, #-4]
   5bf68:	ldr	r1, [r1, #48]	; 0x30
   5bf6c:	cmp	r0, r1
   5bf70:	ble	5bf84 <__assert_fail@plt+0x493cc>
   5bf74:	ldr	r0, [fp, #-4]
   5bf78:	ldr	r0, [r0, #48]	; 0x30
   5bf7c:	str	r0, [sp, #4]
   5bf80:	b	5bf90 <__assert_fail@plt+0x493d8>
   5bf84:	ldr	r0, [fp, #-4]
   5bf88:	ldr	r0, [r0, #36]	; 0x24
   5bf8c:	str	r0, [sp, #4]
   5bf90:	ldr	r0, [sp, #4]
   5bf94:	str	r0, [sp, #12]
   5bf98:	ldr	r0, [fp, #-4]
   5bf9c:	ldr	r0, [r0, #28]
   5bfa0:	str	r0, [fp, #-8]
   5bfa4:	ldr	r0, [fp, #-8]
   5bfa8:	ldr	r1, [sp, #12]
   5bfac:	cmp	r0, r1
   5bfb0:	bge	5c030 <__assert_fail@plt+0x49478>
   5bfb4:	ldr	r0, [fp, #-4]
   5bfb8:	ldr	r0, [r0]
   5bfbc:	ldr	r1, [fp, #-4]
   5bfc0:	ldr	r1, [r1, #24]
   5bfc4:	ldr	r2, [fp, #-8]
   5bfc8:	add	r1, r1, r2
   5bfcc:	add	r0, r0, r1
   5bfd0:	ldrb	r0, [r0]
   5bfd4:	str	r0, [sp, #8]
   5bfd8:	ldr	r0, [fp, #-4]
   5bfdc:	ldr	r0, [r0, #64]	; 0x40
   5bfe0:	movw	r1, #0
   5bfe4:	cmp	r0, r1
   5bfe8:	beq	5c004 <__assert_fail@plt+0x4944c>
   5bfec:	ldr	r0, [fp, #-4]
   5bff0:	ldr	r0, [r0, #64]	; 0x40
   5bff4:	ldr	r1, [sp, #8]
   5bff8:	add	r0, r0, r1
   5bffc:	ldrb	r0, [r0]
   5c000:	str	r0, [sp, #8]
   5c004:	ldr	r0, [sp, #8]
   5c008:	bl	12a08 <toupper@plt>
   5c00c:	ldr	lr, [fp, #-4]
   5c010:	ldr	lr, [lr, #4]
   5c014:	ldr	r1, [fp, #-8]
   5c018:	add	r1, lr, r1
   5c01c:	strb	r0, [r1]
   5c020:	ldr	r0, [fp, #-8]
   5c024:	add	r0, r0, #1
   5c028:	str	r0, [fp, #-8]
   5c02c:	b	5bfa4 <__assert_fail@plt+0x493ec>
   5c030:	ldr	r0, [fp, #-8]
   5c034:	ldr	r1, [fp, #-4]
   5c038:	str	r0, [r1, #28]
   5c03c:	ldr	r0, [fp, #-8]
   5c040:	ldr	r1, [fp, #-4]
   5c044:	str	r0, [r1, #32]
   5c048:	mov	sp, fp
   5c04c:	pop	{fp, pc}
   5c050:	push	{fp, lr}
   5c054:	mov	fp, sp
   5c058:	sub	sp, sp, #128	; 0x80
   5c05c:	str	r0, [fp, #-4]
   5c060:	ldr	r0, [fp, #-4]
   5c064:	ldr	r0, [r0, #36]	; 0x24
   5c068:	ldr	r1, [fp, #-4]
   5c06c:	ldr	r1, [r1, #48]	; 0x30
   5c070:	cmp	r0, r1
   5c074:	ble	5c088 <__assert_fail@plt+0x494d0>
   5c078:	ldr	r0, [fp, #-4]
   5c07c:	ldr	r0, [r0, #48]	; 0x30
   5c080:	str	r0, [sp, #16]
   5c084:	b	5c094 <__assert_fail@plt+0x494dc>
   5c088:	ldr	r0, [fp, #-4]
   5c08c:	ldr	r0, [r0, #36]	; 0x24
   5c090:	str	r0, [sp, #16]
   5c094:	ldr	r0, [sp, #16]
   5c098:	str	r0, [sp, #44]	; 0x2c
   5c09c:	ldr	r0, [fp, #-4]
   5c0a0:	ldr	r0, [r0, #28]
   5c0a4:	str	r0, [sp, #48]	; 0x30
   5c0a8:	ldr	r0, [sp, #48]	; 0x30
   5c0ac:	ldr	r1, [sp, #44]	; 0x2c
   5c0b0:	cmp	r0, r1
   5c0b4:	bge	5c370 <__assert_fail@plt+0x497b8>
   5c0b8:	ldr	r0, [sp, #44]	; 0x2c
   5c0bc:	ldr	r1, [sp, #48]	; 0x30
   5c0c0:	sub	r0, r0, r1
   5c0c4:	str	r0, [sp, #40]	; 0x28
   5c0c8:	ldr	r0, [fp, #-4]
   5c0cc:	ldr	r1, [r0, #16]
   5c0d0:	str	r1, [sp, #52]	; 0x34
   5c0d4:	ldr	r0, [r0, #20]
   5c0d8:	str	r0, [sp, #56]	; 0x38
   5c0dc:	ldr	r0, [fp, #-4]
   5c0e0:	ldr	r0, [r0, #64]	; 0x40
   5c0e4:	movw	r1, #0
   5c0e8:	cmp	r0, r1
   5c0ec:	beq	5c1c0 <__assert_fail@plt+0x49608>
   5c0f0:	movw	r0, #0
   5c0f4:	str	r0, [sp, #24]
   5c0f8:	ldr	r0, [sp, #24]
   5c0fc:	ldr	r1, [fp, #-4]
   5c100:	ldr	r1, [r1, #80]	; 0x50
   5c104:	cmp	r0, r1
   5c108:	movw	r0, #0
   5c10c:	str	r0, [sp, #12]
   5c110:	bge	5c12c <__assert_fail@plt+0x49574>
   5c114:	ldr	r0, [sp, #24]
   5c118:	ldr	r1, [sp, #40]	; 0x28
   5c11c:	cmp	r0, r1
   5c120:	movw	r0, #0
   5c124:	movlt	r0, #1
   5c128:	str	r0, [sp, #12]
   5c12c:	ldr	r0, [sp, #12]
   5c130:	tst	r0, #1
   5c134:	beq	5c1b4 <__assert_fail@plt+0x495fc>
   5c138:	ldr	r0, [fp, #-4]
   5c13c:	ldr	r0, [r0]
   5c140:	ldr	r1, [fp, #-4]
   5c144:	ldr	r1, [r1, #24]
   5c148:	ldr	r2, [sp, #48]	; 0x30
   5c14c:	add	r1, r1, r2
   5c150:	ldr	r2, [sp, #24]
   5c154:	add	r1, r1, r2
   5c158:	add	r0, r0, r1
   5c15c:	ldrb	r0, [r0]
   5c160:	str	r0, [sp, #20]
   5c164:	ldr	r0, [fp, #-4]
   5c168:	ldr	r0, [r0, #64]	; 0x40
   5c16c:	ldr	r1, [sp, #20]
   5c170:	add	r0, r0, r1
   5c174:	ldrb	r0, [r0]
   5c178:	ldr	r1, [fp, #-4]
   5c17c:	ldr	r1, [r1, #4]
   5c180:	ldr	r2, [sp, #48]	; 0x30
   5c184:	ldr	r3, [sp, #24]
   5c188:	add	r2, r2, r3
   5c18c:	add	r1, r1, r2
   5c190:	strb	r0, [r1]
   5c194:	ldr	r1, [sp, #24]
   5c198:	add	r2, sp, #60	; 0x3c
   5c19c:	add	r1, r2, r1
   5c1a0:	strb	r0, [r1]
   5c1a4:	ldr	r0, [sp, #24]
   5c1a8:	add	r0, r0, #1
   5c1ac:	str	r0, [sp, #24]
   5c1b0:	b	5c0f8 <__assert_fail@plt+0x49540>
   5c1b4:	add	r0, sp, #60	; 0x3c
   5c1b8:	str	r0, [sp, #28]
   5c1bc:	b	5c1e0 <__assert_fail@plt+0x49628>
   5c1c0:	ldr	r0, [fp, #-4]
   5c1c4:	ldr	r0, [r0]
   5c1c8:	ldr	r1, [fp, #-4]
   5c1cc:	ldr	r1, [r1, #24]
   5c1d0:	add	r0, r0, r1
   5c1d4:	ldr	r1, [sp, #48]	; 0x30
   5c1d8:	add	r0, r0, r1
   5c1dc:	str	r0, [sp, #28]
   5c1e0:	ldr	r1, [sp, #28]
   5c1e4:	ldr	r2, [sp, #40]	; 0x28
   5c1e8:	ldr	r0, [fp, #-4]
   5c1ec:	add	r3, r0, #16
   5c1f0:	add	r0, sp, #32
   5c1f4:	bl	54a1c <__assert_fail@plt+0x41e64>
   5c1f8:	str	r0, [sp, #36]	; 0x24
   5c1fc:	ldr	r0, [sp, #36]	; 0x24
   5c200:	cmn	r0, #1
   5c204:	movw	r0, #1
   5c208:	str	r0, [sp, #8]
   5c20c:	beq	5c260 <__assert_fail@plt+0x496a8>
   5c210:	ldr	r0, [sp, #36]	; 0x24
   5c214:	cmp	r0, #0
   5c218:	movw	r0, #1
   5c21c:	str	r0, [sp, #8]
   5c220:	beq	5c260 <__assert_fail@plt+0x496a8>
   5c224:	ldr	r0, [sp, #36]	; 0x24
   5c228:	cmn	r0, #2
   5c22c:	movw	r0, #0
   5c230:	str	r0, [sp, #4]
   5c234:	bne	5c258 <__assert_fail@plt+0x496a0>
   5c238:	ldr	r0, [fp, #-4]
   5c23c:	ldr	r0, [r0, #36]	; 0x24
   5c240:	ldr	r1, [fp, #-4]
   5c244:	ldr	r1, [r1, #48]	; 0x30
   5c248:	cmp	r0, r1
   5c24c:	movw	r0, #0
   5c250:	movge	r0, #1
   5c254:	str	r0, [sp, #4]
   5c258:	ldr	r0, [sp, #4]
   5c25c:	str	r0, [sp, #8]
   5c260:	ldr	r0, [sp, #8]
   5c264:	tst	r0, #1
   5c268:	beq	5c2dc <__assert_fail@plt+0x49724>
   5c26c:	movw	r0, #1
   5c270:	str	r0, [sp, #36]	; 0x24
   5c274:	ldr	r0, [fp, #-4]
   5c278:	ldr	r0, [r0]
   5c27c:	ldr	r1, [fp, #-4]
   5c280:	ldr	r1, [r1, #24]
   5c284:	ldr	r2, [sp, #48]	; 0x30
   5c288:	add	r1, r1, r2
   5c28c:	add	r0, r0, r1
   5c290:	ldrb	r0, [r0]
   5c294:	str	r0, [sp, #32]
   5c298:	ldr	r0, [fp, #-4]
   5c29c:	ldr	r0, [r0, #64]	; 0x40
   5c2a0:	movw	r1, #0
   5c2a4:	cmp	r0, r1
   5c2a8:	beq	5c2c4 <__assert_fail@plt+0x4970c>
   5c2ac:	ldr	r0, [fp, #-4]
   5c2b0:	ldr	r0, [r0, #64]	; 0x40
   5c2b4:	ldr	r1, [sp, #32]
   5c2b8:	add	r0, r0, r1
   5c2bc:	ldrb	r0, [r0]
   5c2c0:	str	r0, [sp, #32]
   5c2c4:	ldr	r0, [fp, #-4]
   5c2c8:	ldr	r1, [sp, #52]	; 0x34
   5c2cc:	str	r1, [r0, #16]
   5c2d0:	ldr	r1, [sp, #56]	; 0x38
   5c2d4:	str	r1, [r0, #20]
   5c2d8:	b	5c304 <__assert_fail@plt+0x4974c>
   5c2dc:	ldr	r0, [sp, #36]	; 0x24
   5c2e0:	cmn	r0, #2
   5c2e4:	bne	5c300 <__assert_fail@plt+0x49748>
   5c2e8:	ldr	r0, [fp, #-4]
   5c2ec:	ldr	r1, [sp, #52]	; 0x34
   5c2f0:	str	r1, [r0, #16]
   5c2f4:	ldr	r1, [sp, #56]	; 0x38
   5c2f8:	str	r1, [r0, #20]
   5c2fc:	b	5c370 <__assert_fail@plt+0x497b8>
   5c300:	b	5c304 <__assert_fail@plt+0x4974c>
   5c304:	ldr	r0, [sp, #32]
   5c308:	ldr	r1, [fp, #-4]
   5c30c:	ldr	r1, [r1, #8]
   5c310:	ldr	r2, [sp, #48]	; 0x30
   5c314:	add	r3, r2, #1
   5c318:	str	r3, [sp, #48]	; 0x30
   5c31c:	add	r1, r1, r2, lsl #2
   5c320:	str	r0, [r1]
   5c324:	ldr	r0, [sp, #48]	; 0x30
   5c328:	ldr	r1, [sp, #36]	; 0x24
   5c32c:	add	r0, r0, r1
   5c330:	sub	r0, r0, #1
   5c334:	str	r0, [sp, #40]	; 0x28
   5c338:	ldr	r0, [sp, #48]	; 0x30
   5c33c:	ldr	r1, [sp, #40]	; 0x28
   5c340:	cmp	r0, r1
   5c344:	bge	5c36c <__assert_fail@plt+0x497b4>
   5c348:	ldr	r0, [fp, #-4]
   5c34c:	ldr	r0, [r0, #8]
   5c350:	ldr	r1, [sp, #48]	; 0x30
   5c354:	add	r2, r1, #1
   5c358:	str	r2, [sp, #48]	; 0x30
   5c35c:	add	r0, r0, r1, lsl #2
   5c360:	mvn	r1, #0
   5c364:	str	r1, [r0]
   5c368:	b	5c338 <__assert_fail@plt+0x49780>
   5c36c:	b	5c0a8 <__assert_fail@plt+0x494f0>
   5c370:	ldr	r0, [sp, #48]	; 0x30
   5c374:	ldr	r1, [fp, #-4]
   5c378:	str	r0, [r1, #28]
   5c37c:	ldr	r0, [sp, #48]	; 0x30
   5c380:	ldr	r1, [fp, #-4]
   5c384:	str	r0, [r1, #32]
   5c388:	mov	sp, fp
   5c38c:	pop	{fp, pc}
   5c390:	sub	sp, sp, #20
   5c394:	str	r0, [sp, #16]
   5c398:	ldr	r0, [sp, #16]
   5c39c:	ldr	r0, [r0, #36]	; 0x24
   5c3a0:	ldr	r1, [sp, #16]
   5c3a4:	ldr	r1, [r1, #48]	; 0x30
   5c3a8:	cmp	r0, r1
   5c3ac:	ble	5c3c0 <__assert_fail@plt+0x49808>
   5c3b0:	ldr	r0, [sp, #16]
   5c3b4:	ldr	r0, [r0, #48]	; 0x30
   5c3b8:	str	r0, [sp]
   5c3bc:	b	5c3cc <__assert_fail@plt+0x49814>
   5c3c0:	ldr	r0, [sp, #16]
   5c3c4:	ldr	r0, [r0, #36]	; 0x24
   5c3c8:	str	r0, [sp]
   5c3cc:	ldr	r0, [sp]
   5c3d0:	str	r0, [sp, #8]
   5c3d4:	ldr	r0, [sp, #16]
   5c3d8:	ldr	r0, [r0, #28]
   5c3dc:	str	r0, [sp, #12]
   5c3e0:	ldr	r0, [sp, #12]
   5c3e4:	ldr	r1, [sp, #8]
   5c3e8:	cmp	r0, r1
   5c3ec:	bge	5c44c <__assert_fail@plt+0x49894>
   5c3f0:	ldr	r0, [sp, #16]
   5c3f4:	ldr	r0, [r0]
   5c3f8:	ldr	r1, [sp, #16]
   5c3fc:	ldr	r1, [r1, #24]
   5c400:	ldr	r2, [sp, #12]
   5c404:	add	r1, r1, r2
   5c408:	add	r0, r0, r1
   5c40c:	ldrb	r0, [r0]
   5c410:	str	r0, [sp, #4]
   5c414:	ldr	r0, [sp, #16]
   5c418:	ldr	r0, [r0, #64]	; 0x40
   5c41c:	ldr	r1, [sp, #4]
   5c420:	add	r0, r0, r1
   5c424:	ldrb	r0, [r0]
   5c428:	ldr	r1, [sp, #16]
   5c42c:	ldr	r1, [r1, #4]
   5c430:	ldr	r2, [sp, #12]
   5c434:	add	r1, r1, r2
   5c438:	strb	r0, [r1]
   5c43c:	ldr	r0, [sp, #12]
   5c440:	add	r0, r0, #1
   5c444:	str	r0, [sp, #12]
   5c448:	b	5c3e0 <__assert_fail@plt+0x49828>
   5c44c:	ldr	r0, [sp, #12]
   5c450:	ldr	r1, [sp, #16]
   5c454:	str	r0, [r1, #28]
   5c458:	ldr	r0, [sp, #12]
   5c45c:	ldr	r1, [sp, #16]
   5c460:	str	r0, [r1, #32]
   5c464:	add	sp, sp, #20
   5c468:	bx	lr
   5c46c:	push	{fp, lr}
   5c470:	mov	fp, sp
   5c474:	sub	sp, sp, #16
   5c478:	str	r0, [fp, #-4]
   5c47c:	str	r1, [sp, #8]
   5c480:	str	r2, [sp, #4]
   5c484:	ldr	r0, [fp, #-4]
   5c488:	ldr	r1, [sp, #8]
   5c48c:	ldr	r2, [sp, #4]
   5c490:	bl	5c7e0 <__assert_fail@plt+0x49c28>
   5c494:	ldr	r1, [sp, #8]
   5c498:	ldr	r2, [r1, #40]	; 0x28
   5c49c:	add	r0, r2, r0
   5c4a0:	str	r0, [r1, #40]	; 0x28
   5c4a4:	mov	sp, fp
   5c4a8:	pop	{fp, pc}
   5c4ac:	push	{r4, r5, fp, lr}
   5c4b0:	add	fp, sp, #8
   5c4b4:	sub	sp, sp, #72	; 0x48
   5c4b8:	ldr	ip, [fp, #12]
   5c4bc:	ldr	lr, [fp, #8]
   5c4c0:	str	r0, [fp, #-16]
   5c4c4:	str	r1, [fp, #-20]	; 0xffffffec
   5c4c8:	str	r2, [fp, #-24]	; 0xffffffe8
   5c4cc:	str	r3, [fp, #-28]	; 0xffffffe4
   5c4d0:	ldr	r0, [fp, #-20]	; 0xffffffec
   5c4d4:	ldr	r0, [r0]
   5c4d8:	str	r0, [fp, #-32]	; 0xffffffe0
   5c4dc:	movw	r0, #0
   5c4e0:	str	r0, [sp, #40]	; 0x28
   5c4e4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   5c4e8:	ldr	r0, [r0, #84]	; 0x54
   5c4ec:	str	r0, [sp, #36]	; 0x24
   5c4f0:	ldr	r0, [fp, #-16]
   5c4f4:	ldr	r1, [fp, #-20]	; 0xffffffec
   5c4f8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   5c4fc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   5c500:	ldr	r4, [fp, #8]
   5c504:	ldr	r5, [fp, #12]
   5c508:	str	r4, [sp]
   5c50c:	str	r5, [sp, #4]
   5c510:	str	lr, [sp, #28]
   5c514:	str	ip, [sp, #24]
   5c518:	bl	5d874 <__assert_fail@plt+0x4acbc>
   5c51c:	str	r0, [fp, #-36]	; 0xffffffdc
   5c520:	ldr	r0, [fp, #12]
   5c524:	ldr	r0, [r0]
   5c528:	cmp	r0, #0
   5c52c:	movw	r0, #0
   5c530:	str	r0, [sp, #20]
   5c534:	beq	5c550 <__assert_fail@plt+0x49998>
   5c538:	ldr	r0, [fp, #-36]	; 0xffffffdc
   5c53c:	movw	r1, #0
   5c540:	cmp	r0, r1
   5c544:	movw	r0, #0
   5c548:	moveq	r0, #1
   5c54c:	str	r0, [sp, #20]
   5c550:	ldr	r0, [sp, #20]
   5c554:	tst	r0, #1
   5c558:	beq	5c568 <__assert_fail@plt+0x499b0>
   5c55c:	movw	r0, #0
   5c560:	str	r0, [fp, #-12]
   5c564:	b	5c6f8 <__assert_fail@plt+0x49b40>
   5c568:	b	5c56c <__assert_fail@plt+0x499b4>
   5c56c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   5c570:	ldr	r0, [r0, #4]
   5c574:	and	r0, r0, #255	; 0xff
   5c578:	cmp	r0, #10
   5c57c:	bne	5c6f0 <__assert_fail@plt+0x49b38>
   5c580:	ldr	r0, [fp, #-24]	; 0xffffffe8
   5c584:	ldr	r1, [fp, #-16]
   5c588:	ldr	r2, [fp, #-28]	; 0xffffffe4
   5c58c:	orr	r2, r2, #8388608	; 0x800000
   5c590:	bl	5c46c <__assert_fail@plt+0x498b4>
   5c594:	ldr	r0, [fp, #-24]	; 0xffffffe8
   5c598:	ldr	r0, [r0, #4]
   5c59c:	and	r0, r0, #255	; 0xff
   5c5a0:	cmp	r0, #10
   5c5a4:	beq	5c6a4 <__assert_fail@plt+0x49aec>
   5c5a8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   5c5ac:	ldr	r0, [r0, #4]
   5c5b0:	and	r0, r0, #255	; 0xff
   5c5b4:	cmp	r0, #2
   5c5b8:	beq	5c6a4 <__assert_fail@plt+0x49aec>
   5c5bc:	ldr	r0, [fp, #8]
   5c5c0:	cmp	r0, #0
   5c5c4:	beq	5c5dc <__assert_fail@plt+0x49a24>
   5c5c8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   5c5cc:	ldr	r0, [r0, #4]
   5c5d0:	and	r0, r0, #255	; 0xff
   5c5d4:	cmp	r0, #9
   5c5d8:	beq	5c6a4 <__assert_fail@plt+0x49aec>
   5c5dc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   5c5e0:	ldr	r0, [r0, #84]	; 0x54
   5c5e4:	str	r0, [sp, #32]
   5c5e8:	ldr	r0, [sp, #36]	; 0x24
   5c5ec:	ldr	r1, [fp, #-32]	; 0xffffffe0
   5c5f0:	str	r0, [r1, #84]	; 0x54
   5c5f4:	ldr	r0, [fp, #-16]
   5c5f8:	ldr	r1, [fp, #-20]	; 0xffffffec
   5c5fc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   5c600:	ldr	r3, [fp, #-28]	; 0xffffffe4
   5c604:	ldr	ip, [fp, #8]
   5c608:	ldr	lr, [fp, #12]
   5c60c:	str	ip, [sp]
   5c610:	str	lr, [sp, #4]
   5c614:	bl	5d874 <__assert_fail@plt+0x4acbc>
   5c618:	str	r0, [sp, #40]	; 0x28
   5c61c:	ldr	r0, [fp, #12]
   5c620:	ldr	r0, [r0]
   5c624:	cmp	r0, #0
   5c628:	movw	r0, #0
   5c62c:	str	r0, [sp, #16]
   5c630:	beq	5c64c <__assert_fail@plt+0x49a94>
   5c634:	ldr	r0, [sp, #40]	; 0x28
   5c638:	movw	r1, #0
   5c63c:	cmp	r0, r1
   5c640:	movw	r0, #0
   5c644:	moveq	r0, #1
   5c648:	str	r0, [sp, #16]
   5c64c:	ldr	r0, [sp, #16]
   5c650:	tst	r0, #1
   5c654:	beq	5c68c <__assert_fail@plt+0x49ad4>
   5c658:	ldr	r0, [fp, #-36]	; 0xffffffdc
   5c65c:	movw	r1, #0
   5c660:	cmp	r0, r1
   5c664:	beq	5c680 <__assert_fail@plt+0x49ac8>
   5c668:	ldr	r0, [fp, #-36]	; 0xffffffdc
   5c66c:	movw	r1, #56440	; 0xdc78
   5c670:	movt	r1, #5
   5c674:	movw	r2, #0
   5c678:	bl	5db08 <__assert_fail@plt+0x4af50>
   5c67c:	str	r0, [sp, #12]
   5c680:	movw	r0, #0
   5c684:	str	r0, [fp, #-12]
   5c688:	b	5c6f8 <__assert_fail@plt+0x49b40>
   5c68c:	ldr	r0, [sp, #32]
   5c690:	ldr	r1, [fp, #-32]	; 0xffffffe0
   5c694:	ldr	r2, [r1, #84]	; 0x54
   5c698:	orr	r0, r2, r0
   5c69c:	str	r0, [r1, #84]	; 0x54
   5c6a0:	b	5c6ac <__assert_fail@plt+0x49af4>
   5c6a4:	movw	r0, #0
   5c6a8:	str	r0, [sp, #40]	; 0x28
   5c6ac:	ldr	r0, [fp, #-32]	; 0xffffffe0
   5c6b0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   5c6b4:	ldr	r2, [sp, #40]	; 0x28
   5c6b8:	movw	r3, #10
   5c6bc:	bl	5c704 <__assert_fail@plt+0x49b4c>
   5c6c0:	str	r0, [fp, #-36]	; 0xffffffdc
   5c6c4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   5c6c8:	movw	r1, #0
   5c6cc:	cmp	r0, r1
   5c6d0:	bne	5c6ec <__assert_fail@plt+0x49b34>
   5c6d4:	ldr	r0, [fp, #12]
   5c6d8:	movw	r1, #12
   5c6dc:	str	r1, [r0]
   5c6e0:	movw	r0, #0
   5c6e4:	str	r0, [fp, #-12]
   5c6e8:	b	5c6f8 <__assert_fail@plt+0x49b40>
   5c6ec:	b	5c56c <__assert_fail@plt+0x499b4>
   5c6f0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   5c6f4:	str	r0, [fp, #-12]
   5c6f8:	ldr	r0, [fp, #-12]
   5c6fc:	sub	sp, fp, #8
   5c700:	pop	{r4, r5, fp, pc}
   5c704:	push	{fp, lr}
   5c708:	mov	fp, sp
   5c70c:	sub	sp, sp, #32
   5c710:	add	ip, sp, #8
   5c714:	ldr	lr, [pc, #192]	; 5c7dc <__assert_fail@plt+0x49c24>
   5c718:	str	r0, [fp, #-4]
   5c71c:	str	r1, [fp, #-8]
   5c720:	str	r2, [fp, #-12]
   5c724:	str	r3, [sp, #16]
   5c728:	mov	r0, ip
   5c72c:	movw	r1, #0
   5c730:	and	r1, r1, #255	; 0xff
   5c734:	movw	r2, #4
   5c738:	str	lr, [sp, #4]
   5c73c:	str	ip, [sp]
   5c740:	bl	12900 <memset@plt>
   5c744:	ldr	r0, [sp, #16]
   5c748:	ldr	r1, [sp, #12]
   5c74c:	and	r0, r0, #255	; 0xff
   5c750:	mvn	r2, #255	; 0xff
   5c754:	and	r1, r1, r2
   5c758:	orr	r0, r1, r0
   5c75c:	str	r0, [sp, #12]
   5c760:	ldr	r0, [sp, #12]
   5c764:	ldr	r1, [sp, #4]
   5c768:	and	r0, r0, r1
   5c76c:	str	r0, [sp, #12]
   5c770:	ldr	r0, [sp, #12]
   5c774:	mvn	r2, #262144	; 0x40000
   5c778:	and	r0, r0, r2
   5c77c:	str	r0, [sp, #12]
   5c780:	ldr	r0, [sp, #12]
   5c784:	mvn	r2, #524288	; 0x80000
   5c788:	and	r0, r0, r2
   5c78c:	str	r0, [sp, #12]
   5c790:	ldr	r0, [sp, #12]
   5c794:	mvn	r2, #1048576	; 0x100000
   5c798:	and	r0, r0, r2
   5c79c:	str	r0, [sp, #12]
   5c7a0:	ldr	r0, [sp, #12]
   5c7a4:	mvn	r2, #2097152	; 0x200000
   5c7a8:	and	r0, r0, r2
   5c7ac:	str	r0, [sp, #12]
   5c7b0:	ldr	r0, [sp, #12]
   5c7b4:	mvn	r2, #4194304	; 0x400000
   5c7b8:	and	r0, r0, r2
   5c7bc:	str	r0, [sp, #12]
   5c7c0:	ldr	r0, [fp, #-4]
   5c7c4:	ldr	r1, [fp, #-8]
   5c7c8:	ldr	r2, [fp, #-12]
   5c7cc:	ldr	r3, [sp]
   5c7d0:	bl	5e794 <__assert_fail@plt+0x4bbdc>
   5c7d4:	mov	sp, fp
   5c7d8:	pop	{fp, pc}
   5c7dc:			; <UNDEFINED> instruction: 0xfffc00ff
   5c7e0:	push	{fp, lr}
   5c7e4:	mov	fp, sp
   5c7e8:	sub	sp, sp, #80	; 0x50
   5c7ec:	str	r0, [fp, #-8]
   5c7f0:	str	r1, [fp, #-12]
   5c7f4:	str	r2, [fp, #-16]
   5c7f8:	ldr	r0, [fp, #-12]
   5c7fc:	ldr	r0, [r0, #56]	; 0x38
   5c800:	ldr	r1, [fp, #-12]
   5c804:	ldr	r1, [r1, #40]	; 0x28
   5c808:	cmp	r0, r1
   5c80c:	bgt	5c834 <__assert_fail@plt+0x49c7c>
   5c810:	ldr	r0, [fp, #-8]
   5c814:	ldr	r1, [r0, #4]
   5c818:	mvn	r2, #255	; 0xff
   5c81c:	and	r1, r1, r2
   5c820:	orr	r1, r1, #2
   5c824:	str	r1, [r0, #4]
   5c828:	movw	r0, #0
   5c82c:	str	r0, [fp, #-4]
   5c830:	b	5d648 <__assert_fail@plt+0x4aa90>
   5c834:	ldr	r0, [fp, #-12]
   5c838:	ldr	r0, [r0, #4]
   5c83c:	ldr	r1, [fp, #-12]
   5c840:	ldr	r1, [r1, #40]	; 0x28
   5c844:	add	r1, r1, #0
   5c848:	add	r0, r0, r1
   5c84c:	ldrb	r0, [r0]
   5c850:	strb	r0, [fp, #-17]	; 0xffffffef
   5c854:	ldrb	r0, [fp, #-17]	; 0xffffffef
   5c858:	ldr	r1, [fp, #-8]
   5c85c:	strb	r0, [r1]
   5c860:	ldr	r0, [fp, #-8]
   5c864:	ldr	r1, [r0, #4]
   5c868:	mvn	r2, #4194304	; 0x400000
   5c86c:	and	r1, r1, r2
   5c870:	str	r1, [r0, #4]
   5c874:	ldr	r0, [fp, #-8]
   5c878:	ldr	r1, [r0, #4]
   5c87c:	mvn	r2, #2097152	; 0x200000
   5c880:	and	r1, r1, r2
   5c884:	str	r1, [r0, #4]
   5c888:	ldr	r0, [fp, #-12]
   5c88c:	ldr	r0, [r0, #80]	; 0x50
   5c890:	cmp	r0, #1
   5c894:	ble	5c908 <__assert_fail@plt+0x49d50>
   5c898:	ldr	r0, [fp, #-12]
   5c89c:	ldr	r0, [r0, #40]	; 0x28
   5c8a0:	ldr	r1, [fp, #-12]
   5c8a4:	ldr	r1, [r1, #28]
   5c8a8:	cmp	r0, r1
   5c8ac:	beq	5c908 <__assert_fail@plt+0x49d50>
   5c8b0:	ldr	r0, [fp, #-12]
   5c8b4:	ldr	r1, [r0, #8]
   5c8b8:	ldr	r0, [r0, #40]	; 0x28
   5c8bc:	add	r0, r1, r0, lsl #2
   5c8c0:	ldr	r0, [r0]
   5c8c4:	cmn	r0, #1
   5c8c8:	bne	5c908 <__assert_fail@plt+0x49d50>
   5c8cc:	ldr	r0, [fp, #-8]
   5c8d0:	ldr	r1, [r0, #4]
   5c8d4:	mvn	r2, #255	; 0xff
   5c8d8:	and	r1, r1, r2
   5c8dc:	orr	r1, r1, #1
   5c8e0:	str	r1, [r0, #4]
   5c8e4:	ldr	r0, [fp, #-8]
   5c8e8:	ldr	r1, [r0, #4]
   5c8ec:	mvn	r2, #2097152	; 0x200000
   5c8f0:	and	r1, r1, r2
   5c8f4:	orr	r1, r1, #2097152	; 0x200000
   5c8f8:	str	r1, [r0, #4]
   5c8fc:	movw	r0, #1
   5c900:	str	r0, [fp, #-4]
   5c904:	b	5d648 <__assert_fail@plt+0x4aa90>
   5c908:	ldrb	r0, [fp, #-17]	; 0xffffffef
   5c90c:	cmp	r0, #92	; 0x5c
   5c910:	bne	5cfe4 <__assert_fail@plt+0x4a42c>
   5c914:	ldr	r0, [fp, #-12]
   5c918:	ldr	r0, [r0, #40]	; 0x28
   5c91c:	add	r0, r0, #1
   5c920:	ldr	r1, [fp, #-12]
   5c924:	ldr	r1, [r1, #48]	; 0x30
   5c928:	cmp	r0, r1
   5c92c:	blt	5c954 <__assert_fail@plt+0x49d9c>
   5c930:	ldr	r0, [fp, #-8]
   5c934:	ldr	r1, [r0, #4]
   5c938:	mvn	r2, #255	; 0xff
   5c93c:	and	r1, r1, r2
   5c940:	orr	r1, r1, #36	; 0x24
   5c944:	str	r1, [r0, #4]
   5c948:	movw	r0, #1
   5c94c:	str	r0, [fp, #-4]
   5c950:	b	5d648 <__assert_fail@plt+0x4aa90>
   5c954:	ldr	r0, [fp, #-12]
   5c958:	movw	r1, #1
   5c95c:	bl	5d658 <__assert_fail@plt+0x4aaa0>
   5c960:	strb	r0, [fp, #-18]	; 0xffffffee
   5c964:	ldrb	r0, [fp, #-18]	; 0xffffffee
   5c968:	ldr	r1, [fp, #-8]
   5c96c:	strb	r0, [r1]
   5c970:	ldr	r0, [fp, #-8]
   5c974:	ldr	r1, [r0, #4]
   5c978:	mvn	lr, #255	; 0xff
   5c97c:	and	r1, r1, lr
   5c980:	orr	r1, r1, #1
   5c984:	str	r1, [r0, #4]
   5c988:	ldr	r0, [fp, #-12]
   5c98c:	ldr	r0, [r0, #80]	; 0x50
   5c990:	cmp	r0, #1
   5c994:	ble	5ca18 <__assert_fail@plt+0x49e60>
   5c998:	ldr	r0, [fp, #-12]
   5c99c:	ldr	r1, [fp, #-12]
   5c9a0:	ldr	r1, [r1, #40]	; 0x28
   5c9a4:	add	r1, r1, #1
   5c9a8:	bl	5d818 <__assert_fail@plt+0x4ac60>
   5c9ac:	str	r0, [fp, #-24]	; 0xffffffe8
   5c9b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   5c9b4:	bl	128dc <iswalnum@plt>
   5c9b8:	cmp	r0, #0
   5c9bc:	movw	r0, #1
   5c9c0:	str	r0, [sp, #36]	; 0x24
   5c9c4:	bne	5c9dc <__assert_fail@plt+0x49e24>
   5c9c8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   5c9cc:	cmp	r0, #95	; 0x5f
   5c9d0:	movw	r0, #0
   5c9d4:	moveq	r0, #1
   5c9d8:	str	r0, [sp, #36]	; 0x24
   5c9dc:	ldr	r0, [sp, #36]	; 0x24
   5c9e0:	and	r0, r0, #1
   5c9e4:	cmp	r0, #0
   5c9e8:	movw	r0, #0
   5c9ec:	movne	r0, #1
   5c9f0:	and	r0, r0, #1
   5c9f4:	ldr	r1, [fp, #-8]
   5c9f8:	ldr	r2, [r1, #4]
   5c9fc:	and	r0, r0, #1
   5ca00:	lsl	r0, r0, #22
   5ca04:	mvn	r3, #4194304	; 0x400000
   5ca08:	and	r2, r2, r3
   5ca0c:	orr	r0, r2, r0
   5ca10:	str	r0, [r1, #4]
   5ca14:	b	5ca94 <__assert_fail@plt+0x49edc>
   5ca18:	bl	12834 <__ctype_b_loc@plt>
   5ca1c:	ldr	r0, [r0]
   5ca20:	ldrb	lr, [fp, #-18]	; 0xffffffee
   5ca24:	mov	r1, lr
   5ca28:	add	r0, r0, lr, lsl #1
   5ca2c:	ldrh	r0, [r0]
   5ca30:	and	r0, r0, #8
   5ca34:	cmp	r0, #0
   5ca38:	movw	r0, #1
   5ca3c:	str	r1, [sp, #32]
   5ca40:	str	r0, [sp, #28]
   5ca44:	bne	5ca5c <__assert_fail@plt+0x49ea4>
   5ca48:	ldrb	r0, [fp, #-18]	; 0xffffffee
   5ca4c:	cmp	r0, #95	; 0x5f
   5ca50:	movw	r0, #0
   5ca54:	moveq	r0, #1
   5ca58:	str	r0, [sp, #28]
   5ca5c:	ldr	r0, [sp, #28]
   5ca60:	and	r0, r0, #1
   5ca64:	cmp	r0, #0
   5ca68:	movw	r0, #0
   5ca6c:	movne	r0, #1
   5ca70:	and	r0, r0, #1
   5ca74:	ldr	r1, [fp, #-8]
   5ca78:	ldr	r2, [r1, #4]
   5ca7c:	and	r0, r0, #1
   5ca80:	lsl	r0, r0, #22
   5ca84:	mvn	r3, #4194304	; 0x400000
   5ca88:	and	r2, r2, r3
   5ca8c:	orr	r0, r2, r0
   5ca90:	str	r0, [r1, #4]
   5ca94:	ldrb	r0, [fp, #-18]	; 0xffffffee
   5ca98:	sub	r0, r0, #39	; 0x27
   5ca9c:	cmp	r0, #86	; 0x56
   5caa0:	str	r0, [sp, #24]
   5caa4:	bhi	5cfd4 <__assert_fail@plt+0x4a41c>
   5caa8:	add	r0, pc, #8
   5caac:	ldr	r1, [sp, #24]
   5cab0:	ldr	r0, [r0, r1, lsl #2]
   5cab4:	mov	pc, r0
   5cab8:	andeq	ip, r5, r4, asr lr
   5cabc:	andeq	ip, r5, ip, lsl #29
   5cac0:			; <UNDEFINED> instruction: 0x0005ceb8
   5cac4:	ldrdeq	ip, [r5], -r4
   5cac8:	andeq	ip, r5, r4, ror #29
   5cacc:	ldrdeq	ip, [r5], -r4
   5cad0:	ldrdeq	ip, [r5], -r4
   5cad4:	ldrdeq	ip, [r5], -r4
   5cad8:	ldrdeq	ip, [r5], -r4
   5cadc:	ldrdeq	ip, [r5], -r4
   5cae0:	andeq	ip, r5, r0, asr ip
   5cae4:	andeq	ip, r5, r0, asr ip
   5cae8:	andeq	ip, r5, r0, asr ip
   5caec:	andeq	ip, r5, r0, asr ip
   5caf0:	andeq	ip, r5, r0, asr ip
   5caf4:	andeq	ip, r5, r0, asr ip
   5caf8:	andeq	ip, r5, r0, asr ip
   5cafc:	andeq	ip, r5, r0, asr ip
   5cb00:	andeq	ip, r5, r0, asr ip
   5cb04:	ldrdeq	ip, [r5], -r4
   5cb08:	ldrdeq	ip, [r5], -r4
   5cb0c:	andeq	ip, r5, ip, lsl #25
   5cb10:	ldrdeq	ip, [r5], -r4
   5cb14:	andeq	ip, r5, r4, asr #25
   5cb18:	andeq	ip, r5, r0, lsr #30
   5cb1c:	ldrdeq	ip, [r5], -r4
   5cb20:	ldrdeq	ip, [r5], -r4
   5cb24:	andeq	ip, r5, r4, lsr sp
   5cb28:	ldrdeq	ip, [r5], -r4
   5cb2c:	ldrdeq	ip, [r5], -r4
   5cb30:	ldrdeq	ip, [r5], -r4
   5cb34:	ldrdeq	ip, [r5], -r4
   5cb38:	ldrdeq	ip, [r5], -r4
   5cb3c:	ldrdeq	ip, [r5], -r4
   5cb40:	ldrdeq	ip, [r5], -r4
   5cb44:	ldrdeq	ip, [r5], -r4
   5cb48:	ldrdeq	ip, [r5], -r4
   5cb4c:	ldrdeq	ip, [r5], -r4
   5cb50:	ldrdeq	ip, [r5], -r4
   5cb54:	ldrdeq	ip, [r5], -r4
   5cb58:	ldrdeq	ip, [r5], -r4
   5cb5c:	ldrdeq	ip, [r5], -r4
   5cb60:	ldrdeq	ip, [r5], -r4
   5cb64:	ldrdeq	ip, [r5], -r4
   5cb68:	strdeq	ip, [r5], -r0
   5cb6c:	ldrdeq	ip, [r5], -r4
   5cb70:	ldrdeq	ip, [r5], -r4
   5cb74:	ldrdeq	ip, [r5], -r4
   5cb78:	muleq	r5, r8, sp
   5cb7c:	ldrdeq	ip, [r5], -r4
   5cb80:	ldrdeq	ip, [r5], -r4
   5cb84:	ldrdeq	ip, [r5], -r4
   5cb88:	ldrdeq	ip, [r5], -r4
   5cb8c:	ldrdeq	ip, [r5], -r4
   5cb90:	ldrdeq	ip, [r5], -r4
   5cb94:	ldrdeq	ip, [r5], -r4
   5cb98:	ldrdeq	ip, [r5], -r4
   5cb9c:	andeq	ip, r5, ip, lsl lr
   5cba0:	ldrdeq	ip, [r5], -r4
   5cba4:	strdeq	ip, [r5], -ip	; <UNPREDICTABLE>
   5cba8:	ldrdeq	ip, [r5], -r4
   5cbac:	ldrdeq	ip, [r5], -r4
   5cbb0:	ldrdeq	ip, [r5], -r4
   5cbb4:	ldrdeq	ip, [r5], -r4
   5cbb8:	ldrdeq	ip, [r5], -r4
   5cbbc:	ldrdeq	ip, [r5], -r4
   5cbc0:	ldrdeq	ip, [r5], -r4
   5cbc4:	ldrdeq	ip, [r5], -r4
   5cbc8:	ldrdeq	ip, [r5], -r4
   5cbcc:	ldrdeq	ip, [r5], -r4
   5cbd0:	ldrdeq	ip, [r5], -r4
   5cbd4:	ldrdeq	ip, [r5], -r4
   5cbd8:	ldrdeq	ip, [r5], -r4
   5cbdc:	ldrdeq	ip, [r5], -r4
   5cbe0:	ldrdeq	ip, [r5], -r4
   5cbe4:	ldrdeq	ip, [r5], -r4
   5cbe8:	andeq	ip, r5, r4, asr #27
   5cbec:	ldrdeq	ip, [r5], -r4
   5cbf0:	ldrdeq	ip, [r5], -r4
   5cbf4:	ldrdeq	ip, [r5], -r4
   5cbf8:	andeq	ip, r5, ip, ror #26
   5cbfc:	ldrdeq	ip, [r5], -r4
   5cc00:	ldrdeq	ip, [r5], -r4
   5cc04:	ldrdeq	ip, [r5], -r4
   5cc08:	andeq	ip, r5, ip, asr pc
   5cc0c:	andeq	ip, r5, r4, lsl ip
   5cc10:	muleq	r5, r8, pc	; <UNPREDICTABLE>
   5cc14:	ldr	r0, [fp, #-16]
   5cc18:	and	r0, r0, #1024	; 0x400
   5cc1c:	cmp	r0, #0
   5cc20:	bne	5cc4c <__assert_fail@plt+0x4a094>
   5cc24:	ldr	r0, [fp, #-16]
   5cc28:	and	r0, r0, #32768	; 0x8000
   5cc2c:	cmp	r0, #0
   5cc30:	bne	5cc4c <__assert_fail@plt+0x4a094>
   5cc34:	ldr	r0, [fp, #-8]
   5cc38:	ldr	r1, [r0, #4]
   5cc3c:	mvn	r2, #255	; 0xff
   5cc40:	and	r1, r1, r2
   5cc44:	orr	r1, r1, #10
   5cc48:	str	r1, [r0, #4]
   5cc4c:	b	5cfd8 <__assert_fail@plt+0x4a420>
   5cc50:	ldr	r0, [fp, #-16]
   5cc54:	and	r0, r0, #16384	; 0x4000
   5cc58:	cmp	r0, #0
   5cc5c:	bne	5cc88 <__assert_fail@plt+0x4a0d0>
   5cc60:	ldr	r0, [fp, #-8]
   5cc64:	ldr	r1, [r0, #4]
   5cc68:	mvn	r2, #255	; 0xff
   5cc6c:	and	r1, r1, r2
   5cc70:	orr	r1, r1, #4
   5cc74:	str	r1, [r0, #4]
   5cc78:	ldrb	r0, [fp, #-18]	; 0xffffffee
   5cc7c:	sub	r0, r0, #49	; 0x31
   5cc80:	ldr	r1, [fp, #-8]
   5cc84:	str	r0, [r1]
   5cc88:	b	5cfd8 <__assert_fail@plt+0x4a420>
   5cc8c:	ldr	r0, [fp, #-16]
   5cc90:	and	r0, r0, #524288	; 0x80000
   5cc94:	cmp	r0, #0
   5cc98:	bne	5ccc0 <__assert_fail@plt+0x4a108>
   5cc9c:	ldr	r0, [fp, #-8]
   5cca0:	ldr	r1, [r0, #4]
   5cca4:	mvn	r2, #255	; 0xff
   5cca8:	and	r1, r1, r2
   5ccac:	orr	r1, r1, #12
   5ccb0:	str	r1, [r0, #4]
   5ccb4:	ldr	r0, [fp, #-8]
   5ccb8:	movw	r1, #6
   5ccbc:	str	r1, [r0]
   5ccc0:	b	5cfd8 <__assert_fail@plt+0x4a420>
   5ccc4:	ldr	r0, [fp, #-16]
   5ccc8:	and	r0, r0, #524288	; 0x80000
   5cccc:	cmp	r0, #0
   5ccd0:	bne	5ccf8 <__assert_fail@plt+0x4a140>
   5ccd4:	ldr	r0, [fp, #-8]
   5ccd8:	ldr	r1, [r0, #4]
   5ccdc:	mvn	r2, #255	; 0xff
   5cce0:	and	r1, r1, r2
   5cce4:	orr	r1, r1, #12
   5cce8:	str	r1, [r0, #4]
   5ccec:	ldr	r0, [fp, #-8]
   5ccf0:	movw	r1, #9
   5ccf4:	str	r1, [r0]
   5ccf8:	b	5cfd8 <__assert_fail@plt+0x4a420>
   5ccfc:	ldr	r0, [fp, #-16]
   5cd00:	and	r0, r0, #524288	; 0x80000
   5cd04:	cmp	r0, #0
   5cd08:	bne	5cd30 <__assert_fail@plt+0x4a178>
   5cd0c:	ldr	r0, [fp, #-8]
   5cd10:	ldr	r1, [r0, #4]
   5cd14:	mvn	r2, #255	; 0xff
   5cd18:	and	r1, r1, r2
   5cd1c:	orr	r1, r1, #12
   5cd20:	str	r1, [r0, #4]
   5cd24:	ldr	r0, [fp, #-8]
   5cd28:	movw	r1, #256	; 0x100
   5cd2c:	str	r1, [r0]
   5cd30:	b	5cfd8 <__assert_fail@plt+0x4a420>
   5cd34:	ldr	r0, [fp, #-16]
   5cd38:	and	r0, r0, #524288	; 0x80000
   5cd3c:	cmp	r0, #0
   5cd40:	bne	5cd68 <__assert_fail@plt+0x4a1b0>
   5cd44:	ldr	r0, [fp, #-8]
   5cd48:	ldr	r1, [r0, #4]
   5cd4c:	mvn	r2, #255	; 0xff
   5cd50:	and	r1, r1, r2
   5cd54:	orr	r1, r1, #12
   5cd58:	str	r1, [r0, #4]
   5cd5c:	ldr	r0, [fp, #-8]
   5cd60:	movw	r1, #512	; 0x200
   5cd64:	str	r1, [r0]
   5cd68:	b	5cfd8 <__assert_fail@plt+0x4a420>
   5cd6c:	ldr	r0, [fp, #-16]
   5cd70:	and	r0, r0, #524288	; 0x80000
   5cd74:	cmp	r0, #0
   5cd78:	bne	5cd94 <__assert_fail@plt+0x4a1dc>
   5cd7c:	ldr	r0, [fp, #-8]
   5cd80:	ldr	r1, [r0, #4]
   5cd84:	mvn	r2, #255	; 0xff
   5cd88:	and	r1, r1, r2
   5cd8c:	orr	r1, r1, #32
   5cd90:	str	r1, [r0, #4]
   5cd94:	b	5cfd8 <__assert_fail@plt+0x4a420>
   5cd98:	ldr	r0, [fp, #-16]
   5cd9c:	and	r0, r0, #524288	; 0x80000
   5cda0:	cmp	r0, #0
   5cda4:	bne	5cdc0 <__assert_fail@plt+0x4a208>
   5cda8:	ldr	r0, [fp, #-8]
   5cdac:	ldr	r1, [r0, #4]
   5cdb0:	mvn	r2, #255	; 0xff
   5cdb4:	and	r1, r1, r2
   5cdb8:	orr	r1, r1, #33	; 0x21
   5cdbc:	str	r1, [r0, #4]
   5cdc0:	b	5cfd8 <__assert_fail@plt+0x4a420>
   5cdc4:	ldr	r0, [fp, #-16]
   5cdc8:	and	r0, r0, #524288	; 0x80000
   5cdcc:	cmp	r0, #0
   5cdd0:	bne	5cdec <__assert_fail@plt+0x4a234>
   5cdd4:	ldr	r0, [fp, #-8]
   5cdd8:	ldr	r1, [r0, #4]
   5cddc:	mvn	r2, #255	; 0xff
   5cde0:	and	r1, r1, r2
   5cde4:	orr	r1, r1, #34	; 0x22
   5cde8:	str	r1, [r0, #4]
   5cdec:	b	5cfd8 <__assert_fail@plt+0x4a420>
   5cdf0:	ldr	r0, [fp, #-16]
   5cdf4:	and	r0, r0, #524288	; 0x80000
   5cdf8:	cmp	r0, #0
   5cdfc:	bne	5ce18 <__assert_fail@plt+0x4a260>
   5ce00:	ldr	r0, [fp, #-8]
   5ce04:	ldr	r1, [r0, #4]
   5ce08:	mvn	r2, #255	; 0xff
   5ce0c:	and	r1, r1, r2
   5ce10:	orr	r1, r1, #35	; 0x23
   5ce14:	str	r1, [r0, #4]
   5ce18:	b	5cfd8 <__assert_fail@plt+0x4a420>
   5ce1c:	ldr	r0, [fp, #-16]
   5ce20:	and	r0, r0, #524288	; 0x80000
   5ce24:	cmp	r0, #0
   5ce28:	bne	5ce50 <__assert_fail@plt+0x4a298>
   5ce2c:	ldr	r0, [fp, #-8]
   5ce30:	ldr	r1, [r0, #4]
   5ce34:	mvn	r2, #255	; 0xff
   5ce38:	and	r1, r1, r2
   5ce3c:	orr	r1, r1, #12
   5ce40:	str	r1, [r0, #4]
   5ce44:	ldr	r0, [fp, #-8]
   5ce48:	movw	r1, #64	; 0x40
   5ce4c:	str	r1, [r0]
   5ce50:	b	5cfd8 <__assert_fail@plt+0x4a420>
   5ce54:	ldr	r0, [fp, #-16]
   5ce58:	and	r0, r0, #524288	; 0x80000
   5ce5c:	cmp	r0, #0
   5ce60:	bne	5ce88 <__assert_fail@plt+0x4a2d0>
   5ce64:	ldr	r0, [fp, #-8]
   5ce68:	ldr	r1, [r0, #4]
   5ce6c:	mvn	r2, #255	; 0xff
   5ce70:	and	r1, r1, r2
   5ce74:	orr	r1, r1, #12
   5ce78:	str	r1, [r0, #4]
   5ce7c:	ldr	r0, [fp, #-8]
   5ce80:	movw	r1, #128	; 0x80
   5ce84:	str	r1, [r0]
   5ce88:	b	5cfd8 <__assert_fail@plt+0x4a420>
   5ce8c:	ldr	r0, [fp, #-16]
   5ce90:	and	r0, r0, #8192	; 0x2000
   5ce94:	cmp	r0, #0
   5ce98:	bne	5ceb4 <__assert_fail@plt+0x4a2fc>
   5ce9c:	ldr	r0, [fp, #-8]
   5cea0:	ldr	r1, [r0, #4]
   5cea4:	mvn	r2, #255	; 0xff
   5cea8:	and	r1, r1, r2
   5ceac:	orr	r1, r1, #8
   5ceb0:	str	r1, [r0, #4]
   5ceb4:	b	5cfd8 <__assert_fail@plt+0x4a420>
   5ceb8:	ldr	r0, [fp, #-16]
   5cebc:	and	r0, r0, #8192	; 0x2000
   5cec0:	cmp	r0, #0
   5cec4:	bne	5cee0 <__assert_fail@plt+0x4a328>
   5cec8:	ldr	r0, [fp, #-8]
   5cecc:	ldr	r1, [r0, #4]
   5ced0:	mvn	r2, #255	; 0xff
   5ced4:	and	r1, r1, r2
   5ced8:	orr	r1, r1, #9
   5cedc:	str	r1, [r0, #4]
   5cee0:	b	5cfd8 <__assert_fail@plt+0x4a420>
   5cee4:	ldr	r0, [fp, #-16]
   5cee8:	and	r0, r0, #1024	; 0x400
   5ceec:	cmp	r0, #0
   5cef0:	bne	5cf1c <__assert_fail@plt+0x4a364>
   5cef4:	ldr	r0, [fp, #-16]
   5cef8:	and	r0, r0, #2
   5cefc:	cmp	r0, #0
   5cf00:	beq	5cf1c <__assert_fail@plt+0x4a364>
   5cf04:	ldr	r0, [fp, #-8]
   5cf08:	ldr	r1, [r0, #4]
   5cf0c:	mvn	r2, #255	; 0xff
   5cf10:	and	r1, r1, r2
   5cf14:	orr	r1, r1, #18
   5cf18:	str	r1, [r0, #4]
   5cf1c:	b	5cfd8 <__assert_fail@plt+0x4a420>
   5cf20:	ldr	r0, [fp, #-16]
   5cf24:	and	r0, r0, #1024	; 0x400
   5cf28:	cmp	r0, #0
   5cf2c:	bne	5cf58 <__assert_fail@plt+0x4a3a0>
   5cf30:	ldr	r0, [fp, #-16]
   5cf34:	and	r0, r0, #2
   5cf38:	cmp	r0, #0
   5cf3c:	beq	5cf58 <__assert_fail@plt+0x4a3a0>
   5cf40:	ldr	r0, [fp, #-8]
   5cf44:	ldr	r1, [r0, #4]
   5cf48:	mvn	r2, #255	; 0xff
   5cf4c:	and	r1, r1, r2
   5cf50:	orr	r1, r1, #19
   5cf54:	str	r1, [r0, #4]
   5cf58:	b	5cfd8 <__assert_fail@plt+0x4a420>
   5cf5c:	ldr	r0, [fp, #-16]
   5cf60:	and	r0, r0, #512	; 0x200
   5cf64:	cmp	r0, #0
   5cf68:	beq	5cf94 <__assert_fail@plt+0x4a3dc>
   5cf6c:	ldr	r0, [fp, #-16]
   5cf70:	and	r0, r0, #4096	; 0x1000
   5cf74:	cmp	r0, #0
   5cf78:	bne	5cf94 <__assert_fail@plt+0x4a3dc>
   5cf7c:	ldr	r0, [fp, #-8]
   5cf80:	ldr	r1, [r0, #4]
   5cf84:	mvn	r2, #255	; 0xff
   5cf88:	and	r1, r1, r2
   5cf8c:	orr	r1, r1, #23
   5cf90:	str	r1, [r0, #4]
   5cf94:	b	5cfd8 <__assert_fail@plt+0x4a420>
   5cf98:	ldr	r0, [fp, #-16]
   5cf9c:	and	r0, r0, #512	; 0x200
   5cfa0:	cmp	r0, #0
   5cfa4:	beq	5cfd0 <__assert_fail@plt+0x4a418>
   5cfa8:	ldr	r0, [fp, #-16]
   5cfac:	and	r0, r0, #4096	; 0x1000
   5cfb0:	cmp	r0, #0
   5cfb4:	bne	5cfd0 <__assert_fail@plt+0x4a418>
   5cfb8:	ldr	r0, [fp, #-8]
   5cfbc:	ldr	r1, [r0, #4]
   5cfc0:	mvn	r2, #255	; 0xff
   5cfc4:	and	r1, r1, r2
   5cfc8:	orr	r1, r1, #24
   5cfcc:	str	r1, [r0, #4]
   5cfd0:	b	5cfd8 <__assert_fail@plt+0x4a420>
   5cfd4:	b	5cfd8 <__assert_fail@plt+0x4a420>
   5cfd8:	movw	r0, #2
   5cfdc:	str	r0, [fp, #-4]
   5cfe0:	b	5d648 <__assert_fail@plt+0x4aa90>
   5cfe4:	ldr	r0, [fp, #-8]
   5cfe8:	ldr	r1, [r0, #4]
   5cfec:	mvn	r2, #255	; 0xff
   5cff0:	and	r1, r1, r2
   5cff4:	orr	r1, r1, #1
   5cff8:	str	r1, [r0, #4]
   5cffc:	ldr	r0, [fp, #-12]
   5d000:	ldr	r0, [r0, #80]	; 0x50
   5d004:	cmp	r0, #1
   5d008:	ble	5d088 <__assert_fail@plt+0x4a4d0>
   5d00c:	ldr	r0, [fp, #-12]
   5d010:	ldr	r1, [fp, #-12]
   5d014:	ldr	r1, [r1, #40]	; 0x28
   5d018:	bl	5d818 <__assert_fail@plt+0x4ac60>
   5d01c:	str	r0, [fp, #-28]	; 0xffffffe4
   5d020:	ldr	r0, [fp, #-28]	; 0xffffffe4
   5d024:	bl	128dc <iswalnum@plt>
   5d028:	cmp	r0, #0
   5d02c:	movw	r0, #1
   5d030:	str	r0, [sp, #20]
   5d034:	bne	5d04c <__assert_fail@plt+0x4a494>
   5d038:	ldr	r0, [fp, #-28]	; 0xffffffe4
   5d03c:	cmp	r0, #95	; 0x5f
   5d040:	movw	r0, #0
   5d044:	moveq	r0, #1
   5d048:	str	r0, [sp, #20]
   5d04c:	ldr	r0, [sp, #20]
   5d050:	and	r0, r0, #1
   5d054:	cmp	r0, #0
   5d058:	movw	r0, #0
   5d05c:	movne	r0, #1
   5d060:	and	r0, r0, #1
   5d064:	ldr	r1, [fp, #-8]
   5d068:	ldr	r2, [r1, #4]
   5d06c:	and	r0, r0, #1
   5d070:	lsl	r0, r0, #22
   5d074:	mvn	r3, #4194304	; 0x400000
   5d078:	and	r2, r2, r3
   5d07c:	orr	r0, r2, r0
   5d080:	str	r0, [r1, #4]
   5d084:	b	5d0fc <__assert_fail@plt+0x4a544>
   5d088:	bl	12834 <__ctype_b_loc@plt>
   5d08c:	ldr	r0, [r0]
   5d090:	ldr	lr, [fp, #-8]
   5d094:	ldrb	lr, [lr]
   5d098:	mov	r1, lr
   5d09c:	add	r0, r0, lr, lsl #1
   5d0a0:	ldrh	r0, [r0]
   5d0a4:	and	r0, r0, #8
   5d0a8:	cmp	r0, #0
   5d0ac:	movw	r0, #1
   5d0b0:	str	r1, [sp, #16]
   5d0b4:	str	r0, [sp, #12]
   5d0b8:	bne	5d0d4 <__assert_fail@plt+0x4a51c>
   5d0bc:	ldr	r0, [fp, #-8]
   5d0c0:	ldrb	r0, [r0]
   5d0c4:	cmp	r0, #95	; 0x5f
   5d0c8:	movw	r0, #0
   5d0cc:	moveq	r0, #1
   5d0d0:	str	r0, [sp, #12]
   5d0d4:	ldr	r0, [sp, #12]
   5d0d8:	and	r0, r0, #1
   5d0dc:	ldr	r1, [fp, #-8]
   5d0e0:	ldr	r2, [r1, #4]
   5d0e4:	and	r0, r0, #1
   5d0e8:	lsl	r0, r0, #22
   5d0ec:	mvn	r3, #4194304	; 0x400000
   5d0f0:	and	r2, r2, r3
   5d0f4:	orr	r0, r2, r0
   5d0f8:	str	r0, [r1, #4]
   5d0fc:	ldrb	r0, [fp, #-17]	; 0xffffffef
   5d100:	sub	r0, r0, #10
   5d104:	cmp	r0, #115	; 0x73
   5d108:	str	r0, [sp, #8]
   5d10c:	bhi	5d63c <__assert_fail@plt+0x4aa84>
   5d110:	add	r0, pc, #8
   5d114:	ldr	r1, [sp, #8]
   5d118:	ldr	r0, [r0, r1, lsl #2]
   5d11c:	mov	pc, r0
   5d120:	strdeq	sp, [r5], -r0
   5d124:	andeq	sp, r5, ip, lsr r6
   5d128:	andeq	sp, r5, ip, lsr r6
   5d12c:	andeq	sp, r5, ip, lsr r6
   5d130:	andeq	sp, r5, ip, lsr r6
   5d134:	andeq	sp, r5, ip, lsr r6
   5d138:	andeq	sp, r5, ip, lsr r6
   5d13c:	andeq	sp, r5, ip, lsr r6
   5d140:	andeq	sp, r5, ip, lsr r6
   5d144:	andeq	sp, r5, ip, lsr r6
   5d148:	andeq	sp, r5, ip, lsr r6
   5d14c:	andeq	sp, r5, ip, lsr r6
   5d150:	andeq	sp, r5, ip, lsr r6
   5d154:	andeq	sp, r5, ip, lsr r6
   5d158:	andeq	sp, r5, ip, lsr r6
   5d15c:	andeq	sp, r5, ip, lsr r6
   5d160:	andeq	sp, r5, ip, lsr r6
   5d164:	andeq	sp, r5, ip, lsr r6
   5d168:	andeq	sp, r5, ip, lsr r6
   5d16c:	andeq	sp, r5, ip, lsr r6
   5d170:	andeq	sp, r5, ip, lsr r6
   5d174:	andeq	sp, r5, ip, lsr r6
   5d178:	andeq	sp, r5, ip, lsr r6
   5d17c:	andeq	sp, r5, ip, lsr r6
   5d180:	andeq	sp, r5, ip, lsr r6
   5d184:	andeq	sp, r5, ip, lsr r6
   5d188:	andeq	sp, r5, r8, lsl #11
   5d18c:	andeq	sp, r5, ip, lsr r6
   5d190:	andeq	sp, r5, ip, lsr r6
   5d194:	andeq	sp, r5, ip, lsr r6
   5d198:	andeq	sp, r5, r4, ror #8
   5d19c:	muleq	r5, r0, r4
   5d1a0:	andeq	sp, r5, r8, asr r3
   5d1a4:	andeq	sp, r5, r4, ror r3
   5d1a8:	andeq	sp, r5, ip, lsr r6
   5d1ac:	andeq	sp, r5, ip, lsr r6
   5d1b0:	ldrdeq	sp, [r5], -r8
   5d1b4:	andeq	sp, r5, ip, lsr r6
   5d1b8:	andeq	sp, r5, ip, lsr r6
   5d1bc:	andeq	sp, r5, ip, lsr r6
   5d1c0:	andeq	sp, r5, ip, lsr r6
   5d1c4:	andeq	sp, r5, ip, lsr r6
   5d1c8:	andeq	sp, r5, ip, lsr r6
   5d1cc:	andeq	sp, r5, ip, lsr r6
   5d1d0:	andeq	sp, r5, ip, lsr r6
   5d1d4:	andeq	sp, r5, ip, lsr r6
   5d1d8:	andeq	sp, r5, ip, lsr r6
   5d1dc:	andeq	sp, r5, ip, lsr r6
   5d1e0:	andeq	sp, r5, ip, lsr r6
   5d1e4:	andeq	sp, r5, ip, lsr r6
   5d1e8:	andeq	sp, r5, ip, lsr r6
   5d1ec:	andeq	sp, r5, ip, lsr r6
   5d1f0:	andeq	sp, r5, ip, lsr r6
   5d1f4:			; <UNDEFINED> instruction: 0x0005d3b0
   5d1f8:	andeq	sp, r5, ip, lsr r6
   5d1fc:	andeq	sp, r5, ip, lsr r6
   5d200:	andeq	sp, r5, ip, lsr r6
   5d204:	andeq	sp, r5, ip, lsr r6
   5d208:	andeq	sp, r5, ip, lsr r6
   5d20c:	andeq	sp, r5, ip, lsr r6
   5d210:	andeq	sp, r5, ip, lsr r6
   5d214:	andeq	sp, r5, ip, lsr r6
   5d218:	andeq	sp, r5, ip, lsr r6
   5d21c:	andeq	sp, r5, ip, lsr r6
   5d220:	andeq	sp, r5, ip, lsr r6
   5d224:	andeq	sp, r5, ip, lsr r6
   5d228:	andeq	sp, r5, ip, lsr r6
   5d22c:	andeq	sp, r5, ip, lsr r6
   5d230:	andeq	sp, r5, ip, lsr r6
   5d234:	andeq	sp, r5, ip, lsr r6
   5d238:	andeq	sp, r5, ip, lsr r6
   5d23c:	andeq	sp, r5, ip, lsr r6
   5d240:	andeq	sp, r5, ip, lsr r6
   5d244:	andeq	sp, r5, ip, lsr r6
   5d248:	andeq	sp, r5, ip, lsr r6
   5d24c:	andeq	sp, r5, ip, lsr r6
   5d250:	andeq	sp, r5, ip, lsr r6
   5d254:	andeq	sp, r5, ip, lsr r6
   5d258:	andeq	sp, r5, ip, lsr r6
   5d25c:	andeq	sp, r5, ip, lsr r6
   5d260:	andeq	sp, r5, ip, lsr r6
   5d264:			; <UNDEFINED> instruction: 0x0005d4bc
   5d268:	andeq	sp, r5, ip, lsr r6
   5d26c:	andeq	sp, r5, ip, lsr r6
   5d270:	strdeq	sp, [r5], -r4
   5d274:	andeq	sp, r5, ip, lsr r6
   5d278:	andeq	sp, r5, ip, lsr r6
   5d27c:	andeq	sp, r5, ip, lsr r6
   5d280:	andeq	sp, r5, ip, lsr r6
   5d284:	andeq	sp, r5, ip, lsr r6
   5d288:	andeq	sp, r5, ip, lsr r6
   5d28c:	andeq	sp, r5, ip, lsr r6
   5d290:	andeq	sp, r5, ip, lsr r6
   5d294:	andeq	sp, r5, ip, lsr r6
   5d298:	andeq	sp, r5, ip, lsr r6
   5d29c:	andeq	sp, r5, ip, lsr r6
   5d2a0:	andeq	sp, r5, ip, lsr r6
   5d2a4:	andeq	sp, r5, ip, lsr r6
   5d2a8:	andeq	sp, r5, ip, lsr r6
   5d2ac:	andeq	sp, r5, ip, lsr r6
   5d2b0:	andeq	sp, r5, ip, lsr r6
   5d2b4:	andeq	sp, r5, ip, lsr r6
   5d2b8:	andeq	sp, r5, ip, lsr r6
   5d2bc:	andeq	sp, r5, ip, lsr r6
   5d2c0:	andeq	sp, r5, ip, lsr r6
   5d2c4:	andeq	sp, r5, ip, lsr r6
   5d2c8:	andeq	sp, r5, ip, lsr r6
   5d2cc:	andeq	sp, r5, ip, lsr r6
   5d2d0:	andeq	sp, r5, ip, lsr r6
   5d2d4:	andeq	sp, r5, ip, lsr r6
   5d2d8:	andeq	sp, r5, ip, lsr r6
   5d2dc:	andeq	sp, r5, ip, lsr r6
   5d2e0:	andeq	sp, r5, ip, lsr r6
   5d2e4:	andeq	sp, r5, ip, ror #7
   5d2e8:	andeq	sp, r5, ip, lsl r3
   5d2ec:	andeq	sp, r5, r8, lsr #8
   5d2f0:	ldr	r0, [fp, #-16]
   5d2f4:	and	r0, r0, #2048	; 0x800
   5d2f8:	cmp	r0, #0
   5d2fc:	beq	5d318 <__assert_fail@plt+0x4a760>
   5d300:	ldr	r0, [fp, #-8]
   5d304:	ldr	r1, [r0, #4]
   5d308:	mvn	r2, #255	; 0xff
   5d30c:	and	r1, r1, r2
   5d310:	orr	r1, r1, #10
   5d314:	str	r1, [r0, #4]
   5d318:	b	5d640 <__assert_fail@plt+0x4aa88>
   5d31c:	ldr	r0, [fp, #-16]
   5d320:	and	r0, r0, #1024	; 0x400
   5d324:	cmp	r0, #0
   5d328:	bne	5d354 <__assert_fail@plt+0x4a79c>
   5d32c:	ldr	r0, [fp, #-16]
   5d330:	and	r0, r0, #32768	; 0x8000
   5d334:	cmp	r0, #0
   5d338:	beq	5d354 <__assert_fail@plt+0x4a79c>
   5d33c:	ldr	r0, [fp, #-8]
   5d340:	ldr	r1, [r0, #4]
   5d344:	mvn	r2, #255	; 0xff
   5d348:	and	r1, r1, r2
   5d34c:	orr	r1, r1, #10
   5d350:	str	r1, [r0, #4]
   5d354:	b	5d640 <__assert_fail@plt+0x4aa88>
   5d358:	ldr	r0, [fp, #-8]
   5d35c:	ldr	r1, [r0, #4]
   5d360:	mvn	r2, #255	; 0xff
   5d364:	and	r1, r1, r2
   5d368:	orr	r1, r1, #11
   5d36c:	str	r1, [r0, #4]
   5d370:	b	5d640 <__assert_fail@plt+0x4aa88>
   5d374:	ldr	r0, [fp, #-16]
   5d378:	and	r0, r0, #1024	; 0x400
   5d37c:	cmp	r0, #0
   5d380:	bne	5d3ac <__assert_fail@plt+0x4a7f4>
   5d384:	ldr	r0, [fp, #-16]
   5d388:	and	r0, r0, #2
   5d38c:	cmp	r0, #0
   5d390:	bne	5d3ac <__assert_fail@plt+0x4a7f4>
   5d394:	ldr	r0, [fp, #-8]
   5d398:	ldr	r1, [r0, #4]
   5d39c:	mvn	r2, #255	; 0xff
   5d3a0:	and	r1, r1, r2
   5d3a4:	orr	r1, r1, #18
   5d3a8:	str	r1, [r0, #4]
   5d3ac:	b	5d640 <__assert_fail@plt+0x4aa88>
   5d3b0:	ldr	r0, [fp, #-16]
   5d3b4:	and	r0, r0, #1024	; 0x400
   5d3b8:	cmp	r0, #0
   5d3bc:	bne	5d3e8 <__assert_fail@plt+0x4a830>
   5d3c0:	ldr	r0, [fp, #-16]
   5d3c4:	and	r0, r0, #2
   5d3c8:	cmp	r0, #0
   5d3cc:	bne	5d3e8 <__assert_fail@plt+0x4a830>
   5d3d0:	ldr	r0, [fp, #-8]
   5d3d4:	ldr	r1, [r0, #4]
   5d3d8:	mvn	r2, #255	; 0xff
   5d3dc:	and	r1, r1, r2
   5d3e0:	orr	r1, r1, #19
   5d3e4:	str	r1, [r0, #4]
   5d3e8:	b	5d640 <__assert_fail@plt+0x4aa88>
   5d3ec:	ldr	r0, [fp, #-16]
   5d3f0:	and	r0, r0, #512	; 0x200
   5d3f4:	cmp	r0, #0
   5d3f8:	beq	5d424 <__assert_fail@plt+0x4a86c>
   5d3fc:	ldr	r0, [fp, #-16]
   5d400:	and	r0, r0, #4096	; 0x1000
   5d404:	cmp	r0, #0
   5d408:	beq	5d424 <__assert_fail@plt+0x4a86c>
   5d40c:	ldr	r0, [fp, #-8]
   5d410:	ldr	r1, [r0, #4]
   5d414:	mvn	r2, #255	; 0xff
   5d418:	and	r1, r1, r2
   5d41c:	orr	r1, r1, #23
   5d420:	str	r1, [r0, #4]
   5d424:	b	5d640 <__assert_fail@plt+0x4aa88>
   5d428:	ldr	r0, [fp, #-16]
   5d42c:	and	r0, r0, #512	; 0x200
   5d430:	cmp	r0, #0
   5d434:	beq	5d460 <__assert_fail@plt+0x4a8a8>
   5d438:	ldr	r0, [fp, #-16]
   5d43c:	and	r0, r0, #4096	; 0x1000
   5d440:	cmp	r0, #0
   5d444:	beq	5d460 <__assert_fail@plt+0x4a8a8>
   5d448:	ldr	r0, [fp, #-8]
   5d44c:	ldr	r1, [r0, #4]
   5d450:	mvn	r2, #255	; 0xff
   5d454:	and	r1, r1, r2
   5d458:	orr	r1, r1, #24
   5d45c:	str	r1, [r0, #4]
   5d460:	b	5d640 <__assert_fail@plt+0x4aa88>
   5d464:	ldr	r0, [fp, #-16]
   5d468:	and	r0, r0, #8192	; 0x2000
   5d46c:	cmp	r0, #0
   5d470:	beq	5d48c <__assert_fail@plt+0x4a8d4>
   5d474:	ldr	r0, [fp, #-8]
   5d478:	ldr	r1, [r0, #4]
   5d47c:	mvn	r2, #255	; 0xff
   5d480:	and	r1, r1, r2
   5d484:	orr	r1, r1, #8
   5d488:	str	r1, [r0, #4]
   5d48c:	b	5d640 <__assert_fail@plt+0x4aa88>
   5d490:	ldr	r0, [fp, #-16]
   5d494:	and	r0, r0, #8192	; 0x2000
   5d498:	cmp	r0, #0
   5d49c:	beq	5d4b8 <__assert_fail@plt+0x4a900>
   5d4a0:	ldr	r0, [fp, #-8]
   5d4a4:	ldr	r1, [r0, #4]
   5d4a8:	mvn	r2, #255	; 0xff
   5d4ac:	and	r1, r1, r2
   5d4b0:	orr	r1, r1, #9
   5d4b4:	str	r1, [r0, #4]
   5d4b8:	b	5d640 <__assert_fail@plt+0x4aa88>
   5d4bc:	ldr	r0, [fp, #-8]
   5d4c0:	ldr	r1, [r0, #4]
   5d4c4:	mvn	r2, #255	; 0xff
   5d4c8:	and	r1, r1, r2
   5d4cc:	orr	r1, r1, #20
   5d4d0:	str	r1, [r0, #4]
   5d4d4:	b	5d640 <__assert_fail@plt+0x4aa88>
   5d4d8:	ldr	r0, [fp, #-8]
   5d4dc:	ldr	r1, [r0, #4]
   5d4e0:	mvn	r2, #255	; 0xff
   5d4e4:	and	r1, r1, r2
   5d4e8:	orr	r1, r1, #5
   5d4ec:	str	r1, [r0, #4]
   5d4f0:	b	5d640 <__assert_fail@plt+0x4aa88>
   5d4f4:	ldr	r0, [pc, #344]	; 5d654 <__assert_fail@plt+0x4aa9c>
   5d4f8:	ldr	r1, [fp, #-16]
   5d4fc:	and	r0, r1, r0
   5d500:	cmp	r0, #0
   5d504:	bne	5d560 <__assert_fail@plt+0x4a9a8>
   5d508:	ldr	r0, [fp, #-12]
   5d50c:	ldr	r0, [r0, #40]	; 0x28
   5d510:	cmp	r0, #0
   5d514:	beq	5d560 <__assert_fail@plt+0x4a9a8>
   5d518:	ldr	r0, [fp, #-12]
   5d51c:	ldr	r0, [r0, #4]
   5d520:	ldr	r1, [fp, #-12]
   5d524:	ldr	r1, [r1, #40]	; 0x28
   5d528:	mvn	r2, #0
   5d52c:	add	r1, r1, r2
   5d530:	add	r0, r0, r1
   5d534:	ldrb	r0, [r0]
   5d538:	strb	r0, [fp, #-29]	; 0xffffffe3
   5d53c:	ldr	r0, [fp, #-16]
   5d540:	and	r0, r0, #2048	; 0x800
   5d544:	cmp	r0, #0
   5d548:	beq	5d558 <__assert_fail@plt+0x4a9a0>
   5d54c:	ldrb	r0, [fp, #-29]	; 0xffffffe3
   5d550:	cmp	r0, #10
   5d554:	beq	5d55c <__assert_fail@plt+0x4a9a4>
   5d558:	b	5d640 <__assert_fail@plt+0x4aa88>
   5d55c:	b	5d560 <__assert_fail@plt+0x4a9a8>
   5d560:	ldr	r0, [fp, #-8]
   5d564:	ldr	r1, [r0, #4]
   5d568:	mvn	r2, #255	; 0xff
   5d56c:	and	r1, r1, r2
   5d570:	orr	r1, r1, #12
   5d574:	str	r1, [r0, #4]
   5d578:	ldr	r0, [fp, #-8]
   5d57c:	movw	r1, #16
   5d580:	str	r1, [r0]
   5d584:	b	5d640 <__assert_fail@plt+0x4aa88>
   5d588:	ldr	r0, [fp, #-16]
   5d58c:	and	r0, r0, #8
   5d590:	cmp	r0, #0
   5d594:	bne	5d614 <__assert_fail@plt+0x4aa5c>
   5d598:	ldr	r0, [fp, #-12]
   5d59c:	ldr	r0, [r0, #40]	; 0x28
   5d5a0:	add	r0, r0, #1
   5d5a4:	ldr	r1, [fp, #-12]
   5d5a8:	ldr	r1, [r1, #48]	; 0x30
   5d5ac:	cmp	r0, r1
   5d5b0:	beq	5d614 <__assert_fail@plt+0x4aa5c>
   5d5b4:	ldr	r0, [fp, #-12]
   5d5b8:	ldr	r1, [r0, #40]	; 0x28
   5d5bc:	add	r1, r1, #1
   5d5c0:	str	r1, [r0, #40]	; 0x28
   5d5c4:	ldr	r1, [fp, #-12]
   5d5c8:	ldr	r2, [fp, #-16]
   5d5cc:	add	r0, sp, #40	; 0x28
   5d5d0:	bl	5c7e0 <__assert_fail@plt+0x49c28>
   5d5d4:	ldr	r1, [fp, #-12]
   5d5d8:	ldr	r2, [r1, #40]	; 0x28
   5d5dc:	mvn	lr, #0
   5d5e0:	add	r2, r2, lr
   5d5e4:	str	r2, [r1, #40]	; 0x28
   5d5e8:	ldr	r1, [sp, #44]	; 0x2c
   5d5ec:	and	r1, r1, #255	; 0xff
   5d5f0:	cmp	r1, #10
   5d5f4:	str	r0, [sp, #4]
   5d5f8:	beq	5d610 <__assert_fail@plt+0x4aa58>
   5d5fc:	ldr	r0, [sp, #44]	; 0x2c
   5d600:	and	r0, r0, #255	; 0xff
   5d604:	cmp	r0, #9
   5d608:	beq	5d610 <__assert_fail@plt+0x4aa58>
   5d60c:	b	5d640 <__assert_fail@plt+0x4aa88>
   5d610:	b	5d614 <__assert_fail@plt+0x4aa5c>
   5d614:	ldr	r0, [fp, #-8]
   5d618:	ldr	r1, [r0, #4]
   5d61c:	mvn	r2, #255	; 0xff
   5d620:	and	r1, r1, r2
   5d624:	orr	r1, r1, #12
   5d628:	str	r1, [r0, #4]
   5d62c:	ldr	r0, [fp, #-8]
   5d630:	movw	r1, #32
   5d634:	str	r1, [r0]
   5d638:	b	5d640 <__assert_fail@plt+0x4aa88>
   5d63c:	b	5d640 <__assert_fail@plt+0x4aa88>
   5d640:	movw	r0, #1
   5d644:	str	r0, [fp, #-4]
   5d648:	ldr	r0, [fp, #-4]
   5d64c:	mov	sp, fp
   5d650:	pop	{fp, pc}
   5d654:	addeq	r0, r0, r8
   5d658:	sub	sp, sp, #20
   5d65c:	str	r0, [sp, #12]
   5d660:	str	r1, [sp, #8]
   5d664:	ldr	r0, [sp, #12]
   5d668:	ldrsb	r0, [r0, #75]	; 0x4b
   5d66c:	cmp	r0, #0
   5d670:	movw	r0, #0
   5d674:	movne	r0, #1
   5d678:	mvn	r1, #0
   5d67c:	eor	r0, r0, r1
   5d680:	tst	r0, #1
   5d684:	beq	5d6b0 <__assert_fail@plt+0x4aaf8>
   5d688:	ldr	r0, [sp, #12]
   5d68c:	ldr	r0, [r0, #4]
   5d690:	ldr	r1, [sp, #12]
   5d694:	ldr	r1, [r1, #40]	; 0x28
   5d698:	ldr	r2, [sp, #8]
   5d69c:	add	r1, r1, r2
   5d6a0:	add	r0, r0, r1
   5d6a4:	ldrb	r0, [r0]
   5d6a8:	strb	r0, [sp, #19]
   5d6ac:	b	5d80c <__assert_fail@plt+0x4ac54>
   5d6b0:	ldr	r0, [sp, #12]
   5d6b4:	ldr	r0, [r0, #80]	; 0x50
   5d6b8:	cmp	r0, #1
   5d6bc:	ble	5d758 <__assert_fail@plt+0x4aba0>
   5d6c0:	ldr	r0, [sp, #12]
   5d6c4:	ldr	r1, [r0, #8]
   5d6c8:	ldr	r0, [r0, #40]	; 0x28
   5d6cc:	ldr	r2, [sp, #8]
   5d6d0:	add	r0, r0, r2
   5d6d4:	add	r0, r1, r0, lsl #2
   5d6d8:	ldr	r0, [r0]
   5d6dc:	cmn	r0, #1
   5d6e0:	beq	5d730 <__assert_fail@plt+0x4ab78>
   5d6e4:	ldr	r0, [sp, #12]
   5d6e8:	ldr	r0, [r0, #28]
   5d6ec:	ldr	r1, [sp, #12]
   5d6f0:	ldr	r1, [r1, #40]	; 0x28
   5d6f4:	ldr	r2, [sp, #8]
   5d6f8:	add	r1, r1, r2
   5d6fc:	add	r1, r1, #1
   5d700:	cmp	r0, r1
   5d704:	beq	5d758 <__assert_fail@plt+0x4aba0>
   5d708:	ldr	r0, [sp, #12]
   5d70c:	ldr	r1, [r0, #8]
   5d710:	ldr	r0, [r0, #40]	; 0x28
   5d714:	ldr	r2, [sp, #8]
   5d718:	add	r0, r0, r2
   5d71c:	add	r0, r0, #1
   5d720:	add	r0, r1, r0, lsl #2
   5d724:	ldr	r0, [r0]
   5d728:	cmn	r0, #1
   5d72c:	bne	5d758 <__assert_fail@plt+0x4aba0>
   5d730:	ldr	r0, [sp, #12]
   5d734:	ldr	r0, [r0, #4]
   5d738:	ldr	r1, [sp, #12]
   5d73c:	ldr	r1, [r1, #40]	; 0x28
   5d740:	ldr	r2, [sp, #8]
   5d744:	add	r1, r1, r2
   5d748:	add	r0, r0, r1
   5d74c:	ldrb	r0, [r0]
   5d750:	strb	r0, [sp, #19]
   5d754:	b	5d80c <__assert_fail@plt+0x4ac54>
   5d758:	ldr	r0, [sp, #12]
   5d75c:	ldr	r0, [r0, #40]	; 0x28
   5d760:	ldr	r1, [sp, #8]
   5d764:	add	r0, r0, r1
   5d768:	str	r0, [sp]
   5d76c:	ldr	r0, [sp, #12]
   5d770:	ldrsb	r0, [r0, #76]	; 0x4c
   5d774:	cmp	r0, #0
   5d778:	beq	5d794 <__assert_fail@plt+0x4abdc>
   5d77c:	ldr	r0, [sp, #12]
   5d780:	ldr	r0, [r0, #12]
   5d784:	ldr	r1, [sp]
   5d788:	add	r0, r0, r1, lsl #2
   5d78c:	ldr	r0, [r0]
   5d790:	str	r0, [sp]
   5d794:	ldr	r0, [sp, #12]
   5d798:	ldr	r0, [r0]
   5d79c:	ldr	r1, [sp, #12]
   5d7a0:	ldr	r1, [r1, #24]
   5d7a4:	ldr	r2, [sp]
   5d7a8:	add	r1, r1, r2
   5d7ac:	add	r0, r0, r1
   5d7b0:	ldrb	r0, [r0]
   5d7b4:	str	r0, [sp, #4]
   5d7b8:	ldr	r0, [sp, #12]
   5d7bc:	ldrb	r0, [r0, #76]	; 0x4c
   5d7c0:	cmp	r0, #0
   5d7c4:	beq	5d804 <__assert_fail@plt+0x4ac4c>
   5d7c8:	ldr	r0, [sp, #4]
   5d7cc:	mvn	r1, #127	; 0x7f
   5d7d0:	and	r0, r0, r1
   5d7d4:	cmp	r0, #0
   5d7d8:	beq	5d804 <__assert_fail@plt+0x4ac4c>
   5d7dc:	ldr	r0, [sp, #12]
   5d7e0:	ldr	r0, [r0, #4]
   5d7e4:	ldr	r1, [sp, #12]
   5d7e8:	ldr	r1, [r1, #40]	; 0x28
   5d7ec:	ldr	r2, [sp, #8]
   5d7f0:	add	r1, r1, r2
   5d7f4:	add	r0, r0, r1
   5d7f8:	ldrb	r0, [r0]
   5d7fc:	strb	r0, [sp, #19]
   5d800:	b	5d80c <__assert_fail@plt+0x4ac54>
   5d804:	ldr	r0, [sp, #4]
   5d808:	strb	r0, [sp, #19]
   5d80c:	ldrb	r0, [sp, #19]
   5d810:	add	sp, sp, #20
   5d814:	bx	lr
   5d818:	sub	sp, sp, #12
   5d81c:	str	r0, [sp, #4]
   5d820:	str	r1, [sp]
   5d824:	ldr	r0, [sp, #4]
   5d828:	ldr	r0, [r0, #80]	; 0x50
   5d82c:	cmp	r0, #1
   5d830:	bne	5d850 <__assert_fail@plt+0x4ac98>
   5d834:	ldr	r0, [sp, #4]
   5d838:	ldr	r0, [r0, #4]
   5d83c:	ldr	r1, [sp]
   5d840:	add	r0, r0, r1
   5d844:	ldrb	r0, [r0]
   5d848:	str	r0, [sp, #8]
   5d84c:	b	5d868 <__assert_fail@plt+0x4acb0>
   5d850:	ldr	r0, [sp, #4]
   5d854:	ldr	r0, [r0, #8]
   5d858:	ldr	r1, [sp]
   5d85c:	add	r0, r0, r1, lsl #2
   5d860:	ldr	r0, [r0]
   5d864:	str	r0, [sp, #8]
   5d868:	ldr	r0, [sp, #8]
   5d86c:	add	sp, sp, #12
   5d870:	bx	lr
   5d874:	push	{r4, r5, fp, lr}
   5d878:	add	fp, sp, #8
   5d87c:	sub	sp, sp, #80	; 0x50
   5d880:	ldr	ip, [fp, #12]
   5d884:	ldr	lr, [fp, #8]
   5d888:	str	r0, [fp, #-16]
   5d88c:	str	r1, [fp, #-20]	; 0xffffffec
   5d890:	str	r2, [fp, #-24]	; 0xffffffe8
   5d894:	str	r3, [fp, #-28]	; 0xffffffe4
   5d898:	ldr	r0, [fp, #-20]	; 0xffffffec
   5d89c:	ldr	r0, [r0]
   5d8a0:	str	r0, [fp, #-40]	; 0xffffffd8
   5d8a4:	ldr	r0, [fp, #-16]
   5d8a8:	ldr	r1, [fp, #-20]	; 0xffffffec
   5d8ac:	ldr	r2, [fp, #-24]	; 0xffffffe8
   5d8b0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   5d8b4:	ldr	r4, [fp, #8]
   5d8b8:	ldr	r5, [fp, #12]
   5d8bc:	str	r4, [sp]
   5d8c0:	str	r5, [sp, #4]
   5d8c4:	str	lr, [sp, #40]	; 0x28
   5d8c8:	str	ip, [sp, #36]	; 0x24
   5d8cc:	bl	5dca4 <__assert_fail@plt+0x4b0ec>
   5d8d0:	str	r0, [fp, #-32]	; 0xffffffe0
   5d8d4:	ldr	r0, [fp, #12]
   5d8d8:	ldr	r0, [r0]
   5d8dc:	cmp	r0, #0
   5d8e0:	movw	r0, #0
   5d8e4:	str	r0, [sp, #32]
   5d8e8:	beq	5d904 <__assert_fail@plt+0x4ad4c>
   5d8ec:	ldr	r0, [fp, #-32]	; 0xffffffe0
   5d8f0:	movw	r1, #0
   5d8f4:	cmp	r0, r1
   5d8f8:	movw	r0, #0
   5d8fc:	moveq	r0, #1
   5d900:	str	r0, [sp, #32]
   5d904:	ldr	r0, [sp, #32]
   5d908:	tst	r0, #1
   5d90c:	beq	5d91c <__assert_fail@plt+0x4ad64>
   5d910:	movw	r0, #0
   5d914:	str	r0, [fp, #-12]
   5d918:	b	5dafc <__assert_fail@plt+0x4af44>
   5d91c:	b	5d920 <__assert_fail@plt+0x4ad68>
   5d920:	ldr	r0, [fp, #-24]	; 0xffffffe8
   5d924:	ldr	r0, [r0, #4]
   5d928:	and	r0, r0, #255	; 0xff
   5d92c:	cmp	r0, #10
   5d930:	movw	r0, #0
   5d934:	str	r0, [sp, #28]
   5d938:	beq	5d990 <__assert_fail@plt+0x4add8>
   5d93c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   5d940:	ldr	r0, [r0, #4]
   5d944:	and	r0, r0, #255	; 0xff
   5d948:	cmp	r0, #2
   5d94c:	movw	r0, #0
   5d950:	str	r0, [sp, #28]
   5d954:	beq	5d990 <__assert_fail@plt+0x4add8>
   5d958:	ldr	r0, [fp, #8]
   5d95c:	cmp	r0, #0
   5d960:	movw	r0, #1
   5d964:	str	r0, [sp, #24]
   5d968:	beq	5d988 <__assert_fail@plt+0x4add0>
   5d96c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   5d970:	ldr	r0, [r0, #4]
   5d974:	and	r0, r0, #255	; 0xff
   5d978:	cmp	r0, #9
   5d97c:	movw	r0, #0
   5d980:	movne	r0, #1
   5d984:	str	r0, [sp, #24]
   5d988:	ldr	r0, [sp, #24]
   5d98c:	str	r0, [sp, #28]
   5d990:	ldr	r0, [sp, #28]
   5d994:	tst	r0, #1
   5d998:	beq	5daf4 <__assert_fail@plt+0x4af3c>
   5d99c:	ldr	r0, [fp, #-16]
   5d9a0:	ldr	r1, [fp, #-20]	; 0xffffffec
   5d9a4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   5d9a8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   5d9ac:	ldr	ip, [fp, #8]
   5d9b0:	ldr	lr, [fp, #12]
   5d9b4:	str	ip, [sp]
   5d9b8:	str	lr, [sp, #4]
   5d9bc:	bl	5dca4 <__assert_fail@plt+0x4b0ec>
   5d9c0:	str	r0, [fp, #-36]	; 0xffffffdc
   5d9c4:	ldr	r0, [fp, #12]
   5d9c8:	ldr	r0, [r0]
   5d9cc:	cmp	r0, #0
   5d9d0:	movw	r0, #0
   5d9d4:	str	r0, [sp, #20]
   5d9d8:	beq	5d9f4 <__assert_fail@plt+0x4ae3c>
   5d9dc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   5d9e0:	movw	r1, #0
   5d9e4:	cmp	r0, r1
   5d9e8:	movw	r0, #0
   5d9ec:	moveq	r0, #1
   5d9f0:	str	r0, [sp, #20]
   5d9f4:	ldr	r0, [sp, #20]
   5d9f8:	tst	r0, #1
   5d9fc:	beq	5da34 <__assert_fail@plt+0x4ae7c>
   5da00:	ldr	r0, [fp, #-32]	; 0xffffffe0
   5da04:	movw	r1, #0
   5da08:	cmp	r0, r1
   5da0c:	beq	5da28 <__assert_fail@plt+0x4ae70>
   5da10:	ldr	r0, [fp, #-32]	; 0xffffffe0
   5da14:	movw	r1, #56440	; 0xdc78
   5da18:	movt	r1, #5
   5da1c:	movw	r2, #0
   5da20:	bl	5db08 <__assert_fail@plt+0x4af50>
   5da24:	str	r0, [sp, #16]
   5da28:	movw	r0, #0
   5da2c:	str	r0, [fp, #-12]
   5da30:	b	5dafc <__assert_fail@plt+0x4af44>
   5da34:	ldr	r0, [fp, #-32]	; 0xffffffe0
   5da38:	movw	r1, #0
   5da3c:	cmp	r0, r1
   5da40:	beq	5dad4 <__assert_fail@plt+0x4af1c>
   5da44:	ldr	r0, [fp, #-36]	; 0xffffffdc
   5da48:	movw	r1, #0
   5da4c:	cmp	r0, r1
   5da50:	beq	5dad4 <__assert_fail@plt+0x4af1c>
   5da54:	ldr	r0, [fp, #-40]	; 0xffffffd8
   5da58:	ldr	r1, [fp, #-32]	; 0xffffffe0
   5da5c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   5da60:	movw	r3, #16
   5da64:	bl	5c704 <__assert_fail@plt+0x49b4c>
   5da68:	str	r0, [sp, #44]	; 0x2c
   5da6c:	ldr	r0, [sp, #44]	; 0x2c
   5da70:	movw	r1, #0
   5da74:	cmp	r0, r1
   5da78:	bne	5dac8 <__assert_fail@plt+0x4af10>
   5da7c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   5da80:	movw	r1, #56440	; 0xdc78
   5da84:	movt	r1, #5
   5da88:	movw	r2, #0
   5da8c:	bl	5db08 <__assert_fail@plt+0x4af50>
   5da90:	ldr	r1, [fp, #-32]	; 0xffffffe0
   5da94:	str	r0, [sp, #12]
   5da98:	mov	r0, r1
   5da9c:	movw	r1, #56440	; 0xdc78
   5daa0:	movt	r1, #5
   5daa4:	movw	r2, #0
   5daa8:	bl	5db08 <__assert_fail@plt+0x4af50>
   5daac:	ldr	r1, [fp, #12]
   5dab0:	movw	r2, #12
   5dab4:	str	r2, [r1]
   5dab8:	movw	r1, #0
   5dabc:	str	r1, [fp, #-12]
   5dac0:	str	r0, [sp, #8]
   5dac4:	b	5dafc <__assert_fail@plt+0x4af44>
   5dac8:	ldr	r0, [sp, #44]	; 0x2c
   5dacc:	str	r0, [fp, #-32]	; 0xffffffe0
   5dad0:	b	5daf0 <__assert_fail@plt+0x4af38>
   5dad4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   5dad8:	movw	r1, #0
   5dadc:	cmp	r0, r1
   5dae0:	bne	5daec <__assert_fail@plt+0x4af34>
   5dae4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   5dae8:	str	r0, [fp, #-32]	; 0xffffffe0
   5daec:	b	5daf0 <__assert_fail@plt+0x4af38>
   5daf0:	b	5d920 <__assert_fail@plt+0x4ad68>
   5daf4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   5daf8:	str	r0, [fp, #-12]
   5dafc:	ldr	r0, [fp, #-12]
   5db00:	sub	sp, fp, #8
   5db04:	pop	{r4, r5, fp, pc}
   5db08:	push	{fp, lr}
   5db0c:	mov	fp, sp
   5db10:	sub	sp, sp, #40	; 0x28
   5db14:	str	r0, [fp, #-8]
   5db18:	str	r1, [fp, #-12]
   5db1c:	str	r2, [fp, #-16]
   5db20:	ldr	r0, [fp, #-8]
   5db24:	str	r0, [sp, #20]
   5db28:	b	5db2c <__assert_fail@plt+0x4af74>
   5db2c:	ldr	r0, [sp, #20]
   5db30:	ldr	r0, [r0, #4]
   5db34:	movw	r1, #0
   5db38:	cmp	r0, r1
   5db3c:	movw	r0, #1
   5db40:	str	r0, [sp, #8]
   5db44:	bne	5db64 <__assert_fail@plt+0x4afac>
   5db48:	ldr	r0, [sp, #20]
   5db4c:	ldr	r0, [r0, #8]
   5db50:	movw	r1, #0
   5db54:	cmp	r0, r1
   5db58:	movw	r0, #0
   5db5c:	movne	r0, #1
   5db60:	str	r0, [sp, #8]
   5db64:	ldr	r0, [sp, #8]
   5db68:	tst	r0, #1
   5db6c:	beq	5dba4 <__assert_fail@plt+0x4afec>
   5db70:	ldr	r0, [sp, #20]
   5db74:	ldr	r0, [r0, #4]
   5db78:	movw	r1, #0
   5db7c:	cmp	r0, r1
   5db80:	beq	5db94 <__assert_fail@plt+0x4afdc>
   5db84:	ldr	r0, [sp, #20]
   5db88:	ldr	r0, [r0, #4]
   5db8c:	str	r0, [sp, #20]
   5db90:	b	5dba0 <__assert_fail@plt+0x4afe8>
   5db94:	ldr	r0, [sp, #20]
   5db98:	ldr	r0, [r0, #8]
   5db9c:	str	r0, [sp, #20]
   5dba0:	b	5db2c <__assert_fail@plt+0x4af74>
   5dba4:	b	5dba8 <__assert_fail@plt+0x4aff0>
   5dba8:	ldr	r0, [fp, #-12]
   5dbac:	ldr	r1, [fp, #-16]
   5dbb0:	ldr	r2, [sp, #20]
   5dbb4:	str	r0, [sp, #4]
   5dbb8:	mov	r0, r1
   5dbbc:	mov	r1, r2
   5dbc0:	ldr	r2, [sp, #4]
   5dbc4:	blx	r2
   5dbc8:	str	r0, [sp, #12]
   5dbcc:	ldr	r0, [sp, #12]
   5dbd0:	cmp	r0, #0
   5dbd4:	beq	5dbe4 <__assert_fail@plt+0x4b02c>
   5dbd8:	ldr	r0, [sp, #12]
   5dbdc:	str	r0, [fp, #-4]
   5dbe0:	b	5dc6c <__assert_fail@plt+0x4b0b4>
   5dbe4:	ldr	r0, [sp, #20]
   5dbe8:	ldr	r0, [r0]
   5dbec:	movw	r1, #0
   5dbf0:	cmp	r0, r1
   5dbf4:	bne	5dc04 <__assert_fail@plt+0x4b04c>
   5dbf8:	movw	r0, #0
   5dbfc:	str	r0, [fp, #-4]
   5dc00:	b	5dc6c <__assert_fail@plt+0x4b0b4>
   5dc04:	ldr	r0, [sp, #20]
   5dc08:	str	r0, [sp, #16]
   5dc0c:	ldr	r0, [sp, #20]
   5dc10:	ldr	r0, [r0]
   5dc14:	str	r0, [sp, #20]
   5dc18:	ldr	r0, [sp, #20]
   5dc1c:	ldr	r0, [r0, #8]
   5dc20:	ldr	r1, [sp, #16]
   5dc24:	cmp	r0, r1
   5dc28:	movw	r0, #1
   5dc2c:	str	r0, [sp]
   5dc30:	beq	5dc50 <__assert_fail@plt+0x4b098>
   5dc34:	ldr	r0, [sp, #20]
   5dc38:	ldr	r0, [r0, #8]
   5dc3c:	movw	r1, #0
   5dc40:	cmp	r0, r1
   5dc44:	movw	r0, #0
   5dc48:	moveq	r0, #1
   5dc4c:	str	r0, [sp]
   5dc50:	ldr	r0, [sp]
   5dc54:	tst	r0, #1
   5dc58:	bne	5dba8 <__assert_fail@plt+0x4aff0>
   5dc5c:	ldr	r0, [sp, #20]
   5dc60:	ldr	r0, [r0, #8]
   5dc64:	str	r0, [sp, #20]
   5dc68:	b	5db28 <__assert_fail@plt+0x4af70>
   5dc6c:	ldr	r0, [fp, #-4]
   5dc70:	mov	sp, fp
   5dc74:	pop	{fp, pc}
   5dc78:	push	{fp, lr}
   5dc7c:	mov	fp, sp
   5dc80:	sub	sp, sp, #8
   5dc84:	str	r0, [sp, #4]
   5dc88:	str	r1, [sp]
   5dc8c:	ldr	r0, [sp]
   5dc90:	add	r0, r0, #20
   5dc94:	bl	59c0c <__assert_fail@plt+0x47054>
   5dc98:	movw	r0, #0
   5dc9c:	mov	sp, fp
   5dca0:	pop	{fp, pc}
   5dca4:	push	{fp, lr}
   5dca8:	mov	fp, sp
   5dcac:	sub	sp, sp, #168	; 0xa8
   5dcb0:	ldr	ip, [fp, #12]
   5dcb4:	ldr	lr, [fp, #8]
   5dcb8:	str	r0, [fp, #-8]
   5dcbc:	str	r1, [fp, #-12]
   5dcc0:	str	r2, [fp, #-16]
   5dcc4:	str	r3, [fp, #-20]	; 0xffffffec
   5dcc8:	ldr	r0, [fp, #-12]
   5dccc:	ldr	r0, [r0]
   5dcd0:	str	r0, [fp, #-24]	; 0xffffffe8
   5dcd4:	ldr	r0, [fp, #-16]
   5dcd8:	ldrb	r0, [r0, #4]
   5dcdc:	sub	r0, r0, #1
   5dce0:	cmp	r0, #35	; 0x23
   5dce4:	str	lr, [fp, #-48]	; 0xffffffd0
   5dce8:	str	ip, [fp, #-52]	; 0xffffffcc
   5dcec:	str	r0, [fp, #-56]	; 0xffffffc8
   5dcf0:	bhi	5e5d8 <__assert_fail@plt+0x4ba20>
   5dcf4:	add	r0, pc, #8
   5dcf8:	ldr	r1, [fp, #-56]	; 0xffffffc8
   5dcfc:	ldr	r0, [r0, r1, lsl #2]
   5dd00:	mov	pc, r0
   5dd04:	muleq	r5, r4, sp
   5dd08:			; <UNDEFINED> instruction: 0x0005e5b4
   5dd0c:	ldrdeq	lr, [r5], -r8
   5dd10:	strdeq	sp, [r5], -r4
   5dd14:	andeq	lr, r5, r4, ror #7
   5dd18:	ldrdeq	lr, [r5], -r8
   5dd1c:	ldrdeq	lr, [r5], -r8
   5dd20:	andeq	sp, r5, r0, lsl pc
   5dd24:	andeq	lr, r5, r8, ror #2
   5dd28:			; <UNDEFINED> instruction: 0x0005e5b4
   5dd2c:	andeq	lr, r5, ip, ror #1
   5dd30:	andeq	lr, r5, r8, lsl #4
   5dd34:	ldrdeq	lr, [r5], -r8
   5dd38:	ldrdeq	lr, [r5], -r8
   5dd3c:	ldrdeq	lr, [r5], -r8
   5dd40:	ldrdeq	lr, [r5], -r8
   5dd44:	ldrdeq	lr, [r5], -r8
   5dd48:	andeq	lr, r5, ip, ror #1
   5dd4c:	andeq	lr, r5, ip, ror #1
   5dd50:	andeq	sp, r5, r8, lsl #31
   5dd54:	ldrdeq	lr, [r5], -r8
   5dd58:	ldrdeq	lr, [r5], -r8
   5dd5c:	andeq	lr, r5, r0, asr #1
   5dd60:	andeq	lr, r5, r8, lsr #3
   5dd64:	ldrdeq	lr, [r5], -r8
   5dd68:	ldrdeq	lr, [r5], -r8
   5dd6c:	ldrdeq	lr, [r5], -r8
   5dd70:	ldrdeq	lr, [r5], -r8
   5dd74:	ldrdeq	lr, [r5], -r8
   5dd78:	ldrdeq	lr, [r5], -r8
   5dd7c:	ldrdeq	lr, [r5], -r8
   5dd80:	andeq	lr, r5, r4, asr r4
   5dd84:	andeq	lr, r5, r4, asr r4
   5dd88:	andeq	lr, r5, r4, lsl #10
   5dd8c:	andeq	lr, r5, r4, lsl #10
   5dd90:	andeq	lr, r5, r0, asr #11
   5dd94:	ldr	r0, [fp, #-24]	; 0xffffffe8
   5dd98:	ldr	r3, [fp, #-16]
   5dd9c:	movw	r1, #0
   5dda0:	str	r1, [fp, #-60]	; 0xffffffc4
   5dda4:	ldr	r2, [fp, #-60]	; 0xffffffc4
   5dda8:	bl	5e794 <__assert_fail@plt+0x4bbdc>
   5ddac:	str	r0, [fp, #-28]	; 0xffffffe4
   5ddb0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   5ddb4:	movw	r1, #0
   5ddb8:	cmp	r0, r1
   5ddbc:	bne	5ddd8 <__assert_fail@plt+0x4b220>
   5ddc0:	ldr	r0, [fp, #12]
   5ddc4:	movw	r1, #12
   5ddc8:	str	r1, [r0]
   5ddcc:	movw	r0, #0
   5ddd0:	str	r0, [fp, #-4]
   5ddd4:	b	5e788 <__assert_fail@plt+0x4bbd0>
   5ddd8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   5dddc:	ldr	r0, [r0, #92]	; 0x5c
   5dde0:	cmp	r0, #1
   5dde4:	ble	5df0c <__assert_fail@plt+0x4b354>
   5dde8:	b	5ddec <__assert_fail@plt+0x4b234>
   5ddec:	ldr	r0, [fp, #-8]
   5ddf0:	ldr	r0, [r0, #56]	; 0x38
   5ddf4:	ldr	r1, [fp, #-8]
   5ddf8:	ldr	r1, [r1, #40]	; 0x28
   5ddfc:	cmp	r0, r1
   5de00:	movw	r0, #0
   5de04:	str	r0, [fp, #-64]	; 0xffffffc0
   5de08:	ble	5de60 <__assert_fail@plt+0x4b2a8>
   5de0c:	ldr	r0, [fp, #-8]
   5de10:	ldr	r0, [r0, #40]	; 0x28
   5de14:	ldr	r1, [fp, #-8]
   5de18:	ldr	r1, [r1, #28]
   5de1c:	cmp	r0, r1
   5de20:	movw	r0, #1
   5de24:	str	r0, [fp, #-68]	; 0xffffffbc
   5de28:	beq	5de50 <__assert_fail@plt+0x4b298>
   5de2c:	ldr	r0, [fp, #-8]
   5de30:	ldr	r1, [r0, #8]
   5de34:	ldr	r0, [r0, #40]	; 0x28
   5de38:	add	r0, r1, r0, lsl #2
   5de3c:	ldr	r0, [r0]
   5de40:	cmn	r0, #1
   5de44:	movw	r0, #0
   5de48:	movne	r0, #1
   5de4c:	str	r0, [fp, #-68]	; 0xffffffbc
   5de50:	ldr	r0, [fp, #-68]	; 0xffffffbc
   5de54:	mvn	r1, #0
   5de58:	eor	r0, r0, r1
   5de5c:	str	r0, [fp, #-64]	; 0xffffffc0
   5de60:	ldr	r0, [fp, #-64]	; 0xffffffc0
   5de64:	tst	r0, #1
   5de68:	beq	5df08 <__assert_fail@plt+0x4b350>
   5de6c:	ldr	r0, [fp, #-16]
   5de70:	ldr	r1, [fp, #-8]
   5de74:	ldr	r2, [fp, #-20]	; 0xffffffec
   5de78:	bl	5c46c <__assert_fail@plt+0x498b4>
   5de7c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   5de80:	ldr	r3, [fp, #-16]
   5de84:	movw	r1, #0
   5de88:	str	r1, [fp, #-72]	; 0xffffffb8
   5de8c:	ldr	r2, [fp, #-72]	; 0xffffffb8
   5de90:	bl	5e794 <__assert_fail@plt+0x4bbdc>
   5de94:	str	r0, [fp, #-32]	; 0xffffffe0
   5de98:	ldr	r0, [fp, #-24]	; 0xffffffe8
   5de9c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   5dea0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   5dea4:	movw	r3, #16
   5dea8:	bl	5c704 <__assert_fail@plt+0x49b4c>
   5deac:	str	r0, [fp, #-28]	; 0xffffffe4
   5deb0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   5deb4:	movw	r1, #0
   5deb8:	cmp	r0, r1
   5debc:	movw	r0, #1
   5dec0:	str	r0, [fp, #-76]	; 0xffffffb4
   5dec4:	beq	5dee0 <__assert_fail@plt+0x4b328>
   5dec8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   5decc:	movw	r1, #0
   5ded0:	cmp	r0, r1
   5ded4:	movw	r0, #0
   5ded8:	moveq	r0, #1
   5dedc:	str	r0, [fp, #-76]	; 0xffffffb4
   5dee0:	ldr	r0, [fp, #-76]	; 0xffffffb4
   5dee4:	tst	r0, #1
   5dee8:	beq	5df04 <__assert_fail@plt+0x4b34c>
   5deec:	ldr	r0, [fp, #12]
   5def0:	movw	r1, #12
   5def4:	str	r1, [r0]
   5def8:	movw	r0, #0
   5defc:	str	r0, [fp, #-4]
   5df00:	b	5e788 <__assert_fail@plt+0x4bbd0>
   5df04:	b	5ddec <__assert_fail@plt+0x4b234>
   5df08:	b	5df0c <__assert_fail@plt+0x4b354>
   5df0c:	b	5e5d8 <__assert_fail@plt+0x4ba20>
   5df10:	ldr	r0, [fp, #-8]
   5df14:	ldr	r1, [fp, #-12]
   5df18:	ldr	r2, [fp, #-16]
   5df1c:	ldr	r3, [fp, #-20]	; 0xffffffec
   5df20:	ldr	ip, [fp, #8]
   5df24:	add	ip, ip, #1
   5df28:	ldr	lr, [fp, #12]
   5df2c:	str	ip, [sp]
   5df30:	str	lr, [sp, #4]
   5df34:	bl	5e8f8 <__assert_fail@plt+0x4bd40>
   5df38:	str	r0, [fp, #-28]	; 0xffffffe4
   5df3c:	ldr	r0, [fp, #12]
   5df40:	ldr	r0, [r0]
   5df44:	cmp	r0, #0
   5df48:	movw	r0, #0
   5df4c:	str	r0, [fp, #-80]	; 0xffffffb0
   5df50:	beq	5df6c <__assert_fail@plt+0x4b3b4>
   5df54:	ldr	r0, [fp, #-28]	; 0xffffffe4
   5df58:	movw	r1, #0
   5df5c:	cmp	r0, r1
   5df60:	movw	r0, #0
   5df64:	moveq	r0, #1
   5df68:	str	r0, [fp, #-80]	; 0xffffffb0
   5df6c:	ldr	r0, [fp, #-80]	; 0xffffffb0
   5df70:	tst	r0, #1
   5df74:	beq	5df84 <__assert_fail@plt+0x4b3cc>
   5df78:	movw	r0, #0
   5df7c:	str	r0, [fp, #-4]
   5df80:	b	5e788 <__assert_fail@plt+0x4bbd0>
   5df84:	b	5e5d8 <__assert_fail@plt+0x4ba20>
   5df88:	ldr	r0, [fp, #-8]
   5df8c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   5df90:	ldr	r2, [fp, #-16]
   5df94:	ldr	r3, [fp, #-20]	; 0xffffffec
   5df98:	ldr	ip, [fp, #12]
   5df9c:	str	ip, [sp]
   5dfa0:	bl	5eabc <__assert_fail@plt+0x4bf04>
   5dfa4:	str	r0, [fp, #-28]	; 0xffffffe4
   5dfa8:	ldr	r0, [fp, #12]
   5dfac:	ldr	r0, [r0]
   5dfb0:	cmp	r0, #0
   5dfb4:	movw	r0, #0
   5dfb8:	str	r0, [sp, #84]	; 0x54
   5dfbc:	beq	5dfd8 <__assert_fail@plt+0x4b420>
   5dfc0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   5dfc4:	movw	r1, #0
   5dfc8:	cmp	r0, r1
   5dfcc:	movw	r0, #0
   5dfd0:	moveq	r0, #1
   5dfd4:	str	r0, [sp, #84]	; 0x54
   5dfd8:	ldr	r0, [sp, #84]	; 0x54
   5dfdc:	tst	r0, #1
   5dfe0:	beq	5dff0 <__assert_fail@plt+0x4b438>
   5dfe4:	movw	r0, #0
   5dfe8:	str	r0, [fp, #-4]
   5dfec:	b	5e788 <__assert_fail@plt+0x4bbd0>
   5dff0:	b	5e5d8 <__assert_fail@plt+0x4ba20>
   5dff4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   5dff8:	ldr	r0, [r0, #84]	; 0x54
   5dffc:	ldr	r1, [fp, #-16]
   5e000:	ldr	r1, [r1]
   5e004:	movw	r2, #1
   5e008:	lsl	r1, r2, r1
   5e00c:	and	r0, r0, r1
   5e010:	cmp	r0, #0
   5e014:	bne	5e030 <__assert_fail@plt+0x4b478>
   5e018:	ldr	r0, [fp, #12]
   5e01c:	movw	r1, #6
   5e020:	str	r1, [r0]
   5e024:	movw	r0, #0
   5e028:	str	r0, [fp, #-4]
   5e02c:	b	5e788 <__assert_fail@plt+0x4bbd0>
   5e030:	ldr	r0, [fp, #-16]
   5e034:	ldr	r0, [r0]
   5e038:	movw	r1, #1
   5e03c:	lsl	r0, r1, r0
   5e040:	ldr	r1, [fp, #-24]	; 0xffffffe8
   5e044:	ldr	r2, [r1, #80]	; 0x50
   5e048:	orr	r0, r2, r0
   5e04c:	str	r0, [r1, #80]	; 0x50
   5e050:	ldr	r0, [fp, #-24]	; 0xffffffe8
   5e054:	ldr	r3, [fp, #-16]
   5e058:	movw	r1, #0
   5e05c:	str	r1, [sp, #80]	; 0x50
   5e060:	ldr	r2, [sp, #80]	; 0x50
   5e064:	bl	5e794 <__assert_fail@plt+0x4bbdc>
   5e068:	str	r0, [fp, #-28]	; 0xffffffe4
   5e06c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   5e070:	movw	r1, #0
   5e074:	cmp	r0, r1
   5e078:	bne	5e094 <__assert_fail@plt+0x4b4dc>
   5e07c:	ldr	r0, [fp, #12]
   5e080:	movw	r1, #12
   5e084:	str	r1, [r0]
   5e088:	movw	r0, #0
   5e08c:	str	r0, [fp, #-4]
   5e090:	b	5e788 <__assert_fail@plt+0x4bbd0>
   5e094:	ldr	r0, [fp, #-24]	; 0xffffffe8
   5e098:	ldr	r1, [r0, #76]	; 0x4c
   5e09c:	add	r1, r1, #1
   5e0a0:	str	r1, [r0, #76]	; 0x4c
   5e0a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   5e0a8:	ldrb	r1, [r0, #88]	; 0x58
   5e0ac:	bic	r1, r1, #2
   5e0b0:	movw	r2, #2
   5e0b4:	orr	r1, r1, r2
   5e0b8:	strb	r1, [r0, #88]	; 0x58
   5e0bc:	b	5e5d8 <__assert_fail@plt+0x4ba20>
   5e0c0:	ldr	r0, [fp, #-20]	; 0xffffffec
   5e0c4:	and	r0, r0, #16777216	; 0x1000000
   5e0c8:	cmp	r0, #0
   5e0cc:	beq	5e0e8 <__assert_fail@plt+0x4b530>
   5e0d0:	ldr	r0, [fp, #12]
   5e0d4:	movw	r1, #13
   5e0d8:	str	r1, [r0]
   5e0dc:	movw	r0, #0
   5e0e0:	str	r0, [fp, #-4]
   5e0e4:	b	5e788 <__assert_fail@plt+0x4bbd0>
   5e0e8:	b	5e0ec <__assert_fail@plt+0x4b534>
   5e0ec:	ldr	r0, [fp, #-20]	; 0xffffffec
   5e0f0:	and	r0, r0, #32
   5e0f4:	cmp	r0, #0
   5e0f8:	beq	5e114 <__assert_fail@plt+0x4b55c>
   5e0fc:	ldr	r0, [fp, #12]
   5e100:	movw	r1, #13
   5e104:	str	r1, [r0]
   5e108:	movw	r0, #0
   5e10c:	str	r0, [fp, #-4]
   5e110:	b	5e788 <__assert_fail@plt+0x4bbd0>
   5e114:	ldr	r0, [fp, #-20]	; 0xffffffec
   5e118:	and	r0, r0, #16
   5e11c:	cmp	r0, #0
   5e120:	beq	5e160 <__assert_fail@plt+0x4b5a8>
   5e124:	ldr	r0, [fp, #-16]
   5e128:	ldr	r1, [fp, #-8]
   5e12c:	ldr	r2, [fp, #-20]	; 0xffffffec
   5e130:	bl	5c46c <__assert_fail@plt+0x498b4>
   5e134:	ldr	r0, [fp, #-8]
   5e138:	ldr	r1, [fp, #-12]
   5e13c:	ldr	r2, [fp, #-16]
   5e140:	ldr	r3, [fp, #-20]	; 0xffffffec
   5e144:	ldr	lr, [fp, #8]
   5e148:	ldr	ip, [fp, #12]
   5e14c:	str	lr, [sp]
   5e150:	str	ip, [sp, #4]
   5e154:	bl	5dca4 <__assert_fail@plt+0x4b0ec>
   5e158:	str	r0, [fp, #-4]
   5e15c:	b	5e788 <__assert_fail@plt+0x4bbd0>
   5e160:	b	5e164 <__assert_fail@plt+0x4b5ac>
   5e164:	b	5e168 <__assert_fail@plt+0x4b5b0>
   5e168:	ldr	r0, [fp, #-16]
   5e16c:	ldr	r0, [r0, #4]
   5e170:	and	r0, r0, #255	; 0xff
   5e174:	cmp	r0, #9
   5e178:	bne	5e1a4 <__assert_fail@plt+0x4b5ec>
   5e17c:	ldr	r0, [fp, #-20]	; 0xffffffec
   5e180:	and	r0, r0, #131072	; 0x20000
   5e184:	cmp	r0, #0
   5e188:	bne	5e1a4 <__assert_fail@plt+0x4b5ec>
   5e18c:	ldr	r0, [fp, #12]
   5e190:	movw	r1, #16
   5e194:	str	r1, [r0]
   5e198:	movw	r0, #0
   5e19c:	str	r0, [fp, #-4]
   5e1a0:	b	5e788 <__assert_fail@plt+0x4bbd0>
   5e1a4:	b	5e1a8 <__assert_fail@plt+0x4b5f0>
   5e1a8:	ldr	r0, [fp, #-16]
   5e1ac:	ldr	r1, [r0, #4]
   5e1b0:	mvn	r2, #255	; 0xff
   5e1b4:	and	r1, r1, r2
   5e1b8:	orr	r1, r1, #1
   5e1bc:	str	r1, [r0, #4]
   5e1c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   5e1c4:	ldr	r3, [fp, #-16]
   5e1c8:	movw	r1, #0
   5e1cc:	str	r1, [sp, #76]	; 0x4c
   5e1d0:	ldr	r2, [sp, #76]	; 0x4c
   5e1d4:	bl	5e794 <__assert_fail@plt+0x4bbdc>
   5e1d8:	str	r0, [fp, #-28]	; 0xffffffe4
   5e1dc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   5e1e0:	movw	r1, #0
   5e1e4:	cmp	r0, r1
   5e1e8:	bne	5e204 <__assert_fail@plt+0x4b64c>
   5e1ec:	ldr	r0, [fp, #12]
   5e1f0:	movw	r1, #12
   5e1f4:	str	r1, [r0]
   5e1f8:	movw	r0, #0
   5e1fc:	str	r0, [fp, #-4]
   5e200:	b	5e788 <__assert_fail@plt+0x4bbd0>
   5e204:	b	5e5d8 <__assert_fail@plt+0x4ba20>
   5e208:	ldr	r0, [fp, #-16]
   5e20c:	ldr	r0, [r0]
   5e210:	movw	r1, #783	; 0x30f
   5e214:	and	r0, r0, r1
   5e218:	cmp	r0, #0
   5e21c:	beq	5e240 <__assert_fail@plt+0x4b688>
   5e220:	ldr	r0, [fp, #-24]	; 0xffffffe8
   5e224:	ldrb	r0, [r0, #88]	; 0x58
   5e228:	ubfx	r0, r0, #4, #1
   5e22c:	and	r0, r0, #255	; 0xff
   5e230:	cmp	r0, #0
   5e234:	bne	5e240 <__assert_fail@plt+0x4b688>
   5e238:	ldr	r0, [fp, #-24]	; 0xffffffe8
   5e23c:	bl	5f3ec <__assert_fail@plt+0x4c834>
   5e240:	ldr	r0, [fp, #-16]
   5e244:	ldr	r0, [r0]
   5e248:	cmp	r0, #256	; 0x100
   5e24c:	beq	5e260 <__assert_fail@plt+0x4b6a8>
   5e250:	ldr	r0, [fp, #-16]
   5e254:	ldr	r0, [r0]
   5e258:	cmp	r0, #512	; 0x200
   5e25c:	bne	5e380 <__assert_fail@plt+0x4b7c8>
   5e260:	ldr	r0, [fp, #-16]
   5e264:	ldr	r0, [r0]
   5e268:	cmp	r0, #256	; 0x100
   5e26c:	bne	5e2a8 <__assert_fail@plt+0x4b6f0>
   5e270:	ldr	r0, [fp, #-16]
   5e274:	movw	r1, #6
   5e278:	str	r1, [r0]
   5e27c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   5e280:	ldr	r3, [fp, #-16]
   5e284:	movw	r1, #0
   5e288:	str	r1, [sp, #72]	; 0x48
   5e28c:	ldr	r2, [sp, #72]	; 0x48
   5e290:	bl	5e794 <__assert_fail@plt+0x4bbdc>
   5e294:	str	r0, [fp, #-36]	; 0xffffffdc
   5e298:	ldr	r0, [fp, #-16]
   5e29c:	movw	r1, #9
   5e2a0:	str	r1, [r0]
   5e2a4:	b	5e2dc <__assert_fail@plt+0x4b724>
   5e2a8:	ldr	r0, [fp, #-16]
   5e2ac:	movw	r1, #5
   5e2b0:	str	r1, [r0]
   5e2b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   5e2b8:	ldr	r3, [fp, #-16]
   5e2bc:	movw	r1, #0
   5e2c0:	str	r1, [sp, #68]	; 0x44
   5e2c4:	ldr	r2, [sp, #68]	; 0x44
   5e2c8:	bl	5e794 <__assert_fail@plt+0x4bbdc>
   5e2cc:	str	r0, [fp, #-36]	; 0xffffffdc
   5e2d0:	ldr	r0, [fp, #-16]
   5e2d4:	movw	r1, #10
   5e2d8:	str	r1, [r0]
   5e2dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   5e2e0:	ldr	r3, [fp, #-16]
   5e2e4:	movw	r1, #0
   5e2e8:	str	r1, [sp, #64]	; 0x40
   5e2ec:	ldr	r2, [sp, #64]	; 0x40
   5e2f0:	bl	5e794 <__assert_fail@plt+0x4bbdc>
   5e2f4:	str	r0, [fp, #-40]	; 0xffffffd8
   5e2f8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   5e2fc:	ldr	r1, [fp, #-36]	; 0xffffffdc
   5e300:	ldr	r2, [fp, #-40]	; 0xffffffd8
   5e304:	movw	r3, #10
   5e308:	bl	5c704 <__assert_fail@plt+0x49b4c>
   5e30c:	str	r0, [fp, #-28]	; 0xffffffe4
   5e310:	ldr	r0, [fp, #-36]	; 0xffffffdc
   5e314:	movw	r1, #0
   5e318:	cmp	r0, r1
   5e31c:	movw	r0, #1
   5e320:	str	r0, [sp, #60]	; 0x3c
   5e324:	beq	5e358 <__assert_fail@plt+0x4b7a0>
   5e328:	ldr	r0, [fp, #-40]	; 0xffffffd8
   5e32c:	movw	r1, #0
   5e330:	cmp	r0, r1
   5e334:	movw	r0, #1
   5e338:	str	r0, [sp, #60]	; 0x3c
   5e33c:	beq	5e358 <__assert_fail@plt+0x4b7a0>
   5e340:	ldr	r0, [fp, #-28]	; 0xffffffe4
   5e344:	movw	r1, #0
   5e348:	cmp	r0, r1
   5e34c:	movw	r0, #0
   5e350:	moveq	r0, #1
   5e354:	str	r0, [sp, #60]	; 0x3c
   5e358:	ldr	r0, [sp, #60]	; 0x3c
   5e35c:	tst	r0, #1
   5e360:	beq	5e37c <__assert_fail@plt+0x4b7c4>
   5e364:	ldr	r0, [fp, #12]
   5e368:	movw	r1, #12
   5e36c:	str	r1, [r0]
   5e370:	movw	r0, #0
   5e374:	str	r0, [fp, #-4]
   5e378:	b	5e788 <__assert_fail@plt+0x4bbd0>
   5e37c:	b	5e3c8 <__assert_fail@plt+0x4b810>
   5e380:	ldr	r0, [fp, #-24]	; 0xffffffe8
   5e384:	ldr	r3, [fp, #-16]
   5e388:	movw	r1, #0
   5e38c:	str	r1, [sp, #56]	; 0x38
   5e390:	ldr	r2, [sp, #56]	; 0x38
   5e394:	bl	5e794 <__assert_fail@plt+0x4bbdc>
   5e398:	str	r0, [fp, #-28]	; 0xffffffe4
   5e39c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   5e3a0:	movw	r1, #0
   5e3a4:	cmp	r0, r1
   5e3a8:	bne	5e3c4 <__assert_fail@plt+0x4b80c>
   5e3ac:	ldr	r0, [fp, #12]
   5e3b0:	movw	r1, #12
   5e3b4:	str	r1, [r0]
   5e3b8:	movw	r0, #0
   5e3bc:	str	r0, [fp, #-4]
   5e3c0:	b	5e788 <__assert_fail@plt+0x4bbd0>
   5e3c4:	b	5e3c8 <__assert_fail@plt+0x4b810>
   5e3c8:	ldr	r0, [fp, #-16]
   5e3cc:	ldr	r1, [fp, #-8]
   5e3d0:	ldr	r2, [fp, #-20]	; 0xffffffec
   5e3d4:	bl	5c46c <__assert_fail@plt+0x498b4>
   5e3d8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   5e3dc:	str	r0, [fp, #-4]
   5e3e0:	b	5e788 <__assert_fail@plt+0x4bbd0>
   5e3e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   5e3e8:	ldr	r3, [fp, #-16]
   5e3ec:	movw	r1, #0
   5e3f0:	str	r1, [sp, #52]	; 0x34
   5e3f4:	ldr	r2, [sp, #52]	; 0x34
   5e3f8:	bl	5e794 <__assert_fail@plt+0x4bbdc>
   5e3fc:	str	r0, [fp, #-28]	; 0xffffffe4
   5e400:	ldr	r0, [fp, #-28]	; 0xffffffe4
   5e404:	movw	r1, #0
   5e408:	cmp	r0, r1
   5e40c:	bne	5e428 <__assert_fail@plt+0x4b870>
   5e410:	ldr	r0, [fp, #12]
   5e414:	movw	r1, #12
   5e418:	str	r1, [r0]
   5e41c:	movw	r0, #0
   5e420:	str	r0, [fp, #-4]
   5e424:	b	5e788 <__assert_fail@plt+0x4bbd0>
   5e428:	ldr	r0, [fp, #-24]	; 0xffffffe8
   5e42c:	ldr	r0, [r0, #92]	; 0x5c
   5e430:	cmp	r0, #1
   5e434:	ble	5e450 <__assert_fail@plt+0x4b898>
   5e438:	ldr	r0, [fp, #-24]	; 0xffffffe8
   5e43c:	ldrb	r1, [r0, #88]	; 0x58
   5e440:	bic	r1, r1, #2
   5e444:	movw	r2, #2
   5e448:	orr	r1, r1, r2
   5e44c:	strb	r1, [r0, #88]	; 0x58
   5e450:	b	5e5d8 <__assert_fail@plt+0x4ba20>
   5e454:	ldr	r0, [fp, #-24]	; 0xffffffe8
   5e458:	ldr	r1, [fp, #-8]
   5e45c:	ldr	r1, [r1, #64]	; 0x40
   5e460:	ldr	r2, [fp, #-16]
   5e464:	ldr	r2, [r2, #4]
   5e468:	and	r2, r2, #255	; 0xff
   5e46c:	cmp	r2, #33	; 0x21
   5e470:	movw	r2, #0
   5e474:	moveq	r2, #1
   5e478:	ldr	r3, [fp, #12]
   5e47c:	movw	ip, #59264	; 0xe780
   5e480:	movt	ip, #7
   5e484:	str	r2, [sp, #48]	; 0x30
   5e488:	mov	r2, ip
   5e48c:	movw	ip, #59270	; 0xe786
   5e490:	movt	ip, #7
   5e494:	str	r3, [sp, #44]	; 0x2c
   5e498:	mov	r3, ip
   5e49c:	ldr	ip, [sp, #48]	; 0x30
   5e4a0:	and	lr, ip, #1
   5e4a4:	str	lr, [sp]
   5e4a8:	ldr	lr, [sp, #44]	; 0x2c
   5e4ac:	str	lr, [sp, #4]
   5e4b0:	bl	5f59c <__assert_fail@plt+0x4c9e4>
   5e4b4:	str	r0, [fp, #-28]	; 0xffffffe4
   5e4b8:	ldr	r0, [fp, #12]
   5e4bc:	ldr	r0, [r0]
   5e4c0:	cmp	r0, #0
   5e4c4:	movw	r0, #0
   5e4c8:	str	r0, [sp, #40]	; 0x28
   5e4cc:	beq	5e4e8 <__assert_fail@plt+0x4b930>
   5e4d0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   5e4d4:	movw	r1, #0
   5e4d8:	cmp	r0, r1
   5e4dc:	movw	r0, #0
   5e4e0:	moveq	r0, #1
   5e4e4:	str	r0, [sp, #40]	; 0x28
   5e4e8:	ldr	r0, [sp, #40]	; 0x28
   5e4ec:	tst	r0, #1
   5e4f0:	beq	5e500 <__assert_fail@plt+0x4b948>
   5e4f4:	movw	r0, #0
   5e4f8:	str	r0, [fp, #-4]
   5e4fc:	b	5e788 <__assert_fail@plt+0x4bbd0>
   5e500:	b	5e5d8 <__assert_fail@plt+0x4ba20>
   5e504:	ldr	r0, [fp, #-24]	; 0xffffffe8
   5e508:	ldr	r1, [fp, #-8]
   5e50c:	ldr	r1, [r1, #64]	; 0x40
   5e510:	ldr	r2, [fp, #-16]
   5e514:	ldr	r2, [r2, #4]
   5e518:	and	r2, r2, #255	; 0xff
   5e51c:	cmp	r2, #35	; 0x23
   5e520:	movw	r2, #0
   5e524:	moveq	r2, #1
   5e528:	ldr	r3, [fp, #12]
   5e52c:	movw	ip, #59272	; 0xe788
   5e530:	movt	ip, #7
   5e534:	str	r2, [sp, #36]	; 0x24
   5e538:	mov	r2, ip
   5e53c:	movw	ip, #39197	; 0x991d
   5e540:	movt	ip, #7
   5e544:	str	r3, [sp, #32]
   5e548:	mov	r3, ip
   5e54c:	ldr	ip, [sp, #36]	; 0x24
   5e550:	and	lr, ip, #1
   5e554:	str	lr, [sp]
   5e558:	ldr	lr, [sp, #32]
   5e55c:	str	lr, [sp, #4]
   5e560:	bl	5f59c <__assert_fail@plt+0x4c9e4>
   5e564:	str	r0, [fp, #-28]	; 0xffffffe4
   5e568:	ldr	r0, [fp, #12]
   5e56c:	ldr	r0, [r0]
   5e570:	cmp	r0, #0
   5e574:	movw	r0, #0
   5e578:	str	r0, [sp, #28]
   5e57c:	beq	5e598 <__assert_fail@plt+0x4b9e0>
   5e580:	ldr	r0, [fp, #-28]	; 0xffffffe4
   5e584:	movw	r1, #0
   5e588:	cmp	r0, r1
   5e58c:	movw	r0, #0
   5e590:	moveq	r0, #1
   5e594:	str	r0, [sp, #28]
   5e598:	ldr	r0, [sp, #28]
   5e59c:	tst	r0, #1
   5e5a0:	beq	5e5b0 <__assert_fail@plt+0x4b9f8>
   5e5a4:	movw	r0, #0
   5e5a8:	str	r0, [fp, #-4]
   5e5ac:	b	5e788 <__assert_fail@plt+0x4bbd0>
   5e5b0:	b	5e5d8 <__assert_fail@plt+0x4ba20>
   5e5b4:	movw	r0, #0
   5e5b8:	str	r0, [fp, #-4]
   5e5bc:	b	5e788 <__assert_fail@plt+0x4bbd0>
   5e5c0:	ldr	r0, [fp, #12]
   5e5c4:	movw	r1, #5
   5e5c8:	str	r1, [r0]
   5e5cc:	movw	r0, #0
   5e5d0:	str	r0, [fp, #-4]
   5e5d4:	b	5e788 <__assert_fail@plt+0x4bbd0>
   5e5d8:	ldr	r0, [fp, #-16]
   5e5dc:	ldr	r1, [fp, #-8]
   5e5e0:	ldr	r2, [fp, #-20]	; 0xffffffec
   5e5e4:	bl	5c46c <__assert_fail@plt+0x498b4>
   5e5e8:	ldr	r0, [fp, #-16]
   5e5ec:	ldr	r0, [r0, #4]
   5e5f0:	and	r0, r0, #255	; 0xff
   5e5f4:	cmp	r0, #11
   5e5f8:	movw	r0, #1
   5e5fc:	str	r0, [sp, #24]
   5e600:	beq	5e658 <__assert_fail@plt+0x4baa0>
   5e604:	ldr	r0, [fp, #-16]
   5e608:	ldr	r0, [r0, #4]
   5e60c:	and	r0, r0, #255	; 0xff
   5e610:	cmp	r0, #18
   5e614:	movw	r0, #1
   5e618:	str	r0, [sp, #24]
   5e61c:	beq	5e658 <__assert_fail@plt+0x4baa0>
   5e620:	ldr	r0, [fp, #-16]
   5e624:	ldr	r0, [r0, #4]
   5e628:	and	r0, r0, #255	; 0xff
   5e62c:	cmp	r0, #19
   5e630:	movw	r0, #1
   5e634:	str	r0, [sp, #24]
   5e638:	beq	5e658 <__assert_fail@plt+0x4baa0>
   5e63c:	ldr	r0, [fp, #-16]
   5e640:	ldr	r0, [r0, #4]
   5e644:	and	r0, r0, #255	; 0xff
   5e648:	cmp	r0, #23
   5e64c:	movw	r0, #0
   5e650:	moveq	r0, #1
   5e654:	str	r0, [sp, #24]
   5e658:	ldr	r0, [sp, #24]
   5e65c:	tst	r0, #1
   5e660:	beq	5e780 <__assert_fail@plt+0x4bbc8>
   5e664:	ldr	r0, [fp, #-28]	; 0xffffffe4
   5e668:	ldr	r1, [fp, #-8]
   5e66c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   5e670:	ldr	r3, [fp, #-16]
   5e674:	ldr	ip, [fp, #-20]	; 0xffffffec
   5e678:	ldr	lr, [fp, #12]
   5e67c:	str	ip, [sp]
   5e680:	str	lr, [sp, #4]
   5e684:	bl	5f8d0 <__assert_fail@plt+0x4cd18>
   5e688:	str	r0, [fp, #-44]	; 0xffffffd4
   5e68c:	ldr	r0, [fp, #12]
   5e690:	ldr	r0, [r0]
   5e694:	cmp	r0, #0
   5e698:	movw	r0, #0
   5e69c:	str	r0, [sp, #20]
   5e6a0:	beq	5e6bc <__assert_fail@plt+0x4bb04>
   5e6a4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   5e6a8:	movw	r1, #0
   5e6ac:	cmp	r0, r1
   5e6b0:	movw	r0, #0
   5e6b4:	moveq	r0, #1
   5e6b8:	str	r0, [sp, #20]
   5e6bc:	ldr	r0, [sp, #20]
   5e6c0:	tst	r0, #1
   5e6c4:	beq	5e6fc <__assert_fail@plt+0x4bb44>
   5e6c8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   5e6cc:	movw	r1, #0
   5e6d0:	cmp	r0, r1
   5e6d4:	beq	5e6f0 <__assert_fail@plt+0x4bb38>
   5e6d8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   5e6dc:	movw	r1, #56440	; 0xdc78
   5e6e0:	movt	r1, #5
   5e6e4:	movw	r2, #0
   5e6e8:	bl	5db08 <__assert_fail@plt+0x4af50>
   5e6ec:	str	r0, [sp, #16]
   5e6f0:	movw	r0, #0
   5e6f4:	str	r0, [fp, #-4]
   5e6f8:	b	5e788 <__assert_fail@plt+0x4bbd0>
   5e6fc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   5e700:	str	r0, [fp, #-28]	; 0xffffffe4
   5e704:	ldr	r0, [fp, #-20]	; 0xffffffec
   5e708:	and	r0, r0, #16777216	; 0x1000000
   5e70c:	cmp	r0, #0
   5e710:	beq	5e77c <__assert_fail@plt+0x4bbc4>
   5e714:	ldr	r0, [fp, #-16]
   5e718:	ldr	r0, [r0, #4]
   5e71c:	and	r0, r0, #255	; 0xff
   5e720:	cmp	r0, #11
   5e724:	beq	5e73c <__assert_fail@plt+0x4bb84>
   5e728:	ldr	r0, [fp, #-16]
   5e72c:	ldr	r0, [r0, #4]
   5e730:	and	r0, r0, #255	; 0xff
   5e734:	cmp	r0, #23
   5e738:	bne	5e77c <__assert_fail@plt+0x4bbc4>
   5e73c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   5e740:	movw	r1, #0
   5e744:	cmp	r0, r1
   5e748:	beq	5e764 <__assert_fail@plt+0x4bbac>
   5e74c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   5e750:	movw	r1, #56440	; 0xdc78
   5e754:	movt	r1, #5
   5e758:	movw	r2, #0
   5e75c:	bl	5db08 <__assert_fail@plt+0x4af50>
   5e760:	str	r0, [sp, #12]
   5e764:	ldr	r0, [fp, #12]
   5e768:	movw	r1, #13
   5e76c:	str	r1, [r0]
   5e770:	movw	r0, #0
   5e774:	str	r0, [fp, #-4]
   5e778:	b	5e788 <__assert_fail@plt+0x4bbd0>
   5e77c:	b	5e5e8 <__assert_fail@plt+0x4ba30>
   5e780:	ldr	r0, [fp, #-28]	; 0xffffffe4
   5e784:	str	r0, [fp, #-4]
   5e788:	ldr	r0, [fp, #-4]
   5e78c:	mov	sp, fp
   5e790:	pop	{fp, pc}
   5e794:	push	{fp, lr}
   5e798:	mov	fp, sp
   5e79c:	sub	sp, sp, #32
   5e7a0:	str	r0, [fp, #-8]
   5e7a4:	str	r1, [fp, #-12]
   5e7a8:	str	r2, [sp, #16]
   5e7ac:	str	r3, [sp, #12]
   5e7b0:	ldr	r0, [fp, #-8]
   5e7b4:	ldr	r0, [r0, #64]	; 0x40
   5e7b8:	cmp	r0, #31
   5e7bc:	bne	5e810 <__assert_fail@plt+0x4bc58>
   5e7c0:	movw	r0, #996	; 0x3e4
   5e7c4:	bl	549ac <__assert_fail@plt+0x41df4>
   5e7c8:	str	r0, [sp, #4]
   5e7cc:	ldr	r0, [sp, #4]
   5e7d0:	movw	lr, #0
   5e7d4:	cmp	r0, lr
   5e7d8:	bne	5e7e8 <__assert_fail@plt+0x4bc30>
   5e7dc:	movw	r0, #0
   5e7e0:	str	r0, [fp, #-4]
   5e7e4:	b	5e8ec <__assert_fail@plt+0x4bd34>
   5e7e8:	ldr	r0, [fp, #-8]
   5e7ec:	ldr	r0, [r0, #56]	; 0x38
   5e7f0:	ldr	r1, [sp, #4]
   5e7f4:	str	r0, [r1]
   5e7f8:	ldr	r0, [sp, #4]
   5e7fc:	ldr	r1, [fp, #-8]
   5e800:	str	r0, [r1, #56]	; 0x38
   5e804:	ldr	r0, [fp, #-8]
   5e808:	movw	r1, #0
   5e80c:	str	r1, [r0, #64]	; 0x40
   5e810:	ldr	r0, [fp, #-8]
   5e814:	ldr	r1, [r0, #56]	; 0x38
   5e818:	ldr	r2, [r0, #64]	; 0x40
   5e81c:	add	r1, r1, #4
   5e820:	add	r3, r2, #1
   5e824:	str	r3, [r0, #64]	; 0x40
   5e828:	add	r0, r1, r2, lsl #5
   5e82c:	str	r0, [sp, #8]
   5e830:	ldr	r0, [sp, #8]
   5e834:	movw	r1, #0
   5e838:	str	r1, [r0]
   5e83c:	ldr	r0, [fp, #-12]
   5e840:	ldr	r2, [sp, #8]
   5e844:	str	r0, [r2, #4]
   5e848:	ldr	r0, [sp, #16]
   5e84c:	ldr	r2, [sp, #8]
   5e850:	str	r0, [r2, #8]
   5e854:	ldr	r0, [sp, #8]
   5e858:	ldr	r2, [sp, #12]
   5e85c:	ldr	r3, [r2]
   5e860:	str	r3, [r0, #20]
   5e864:	ldr	r2, [r2, #4]
   5e868:	str	r2, [r0, #24]
   5e86c:	ldr	r0, [sp, #8]
   5e870:	ldr	r2, [r0, #24]
   5e874:	mvn	r3, #262144	; 0x40000
   5e878:	and	r2, r2, r3
   5e87c:	str	r2, [r0, #24]
   5e880:	ldr	r0, [sp, #8]
   5e884:	ldr	r2, [r0, #24]
   5e888:	mvn	r3, #524288	; 0x80000
   5e88c:	and	r2, r2, r3
   5e890:	str	r2, [r0, #24]
   5e894:	ldr	r0, [sp, #8]
   5e898:	str	r1, [r0, #12]
   5e89c:	ldr	r0, [sp, #8]
   5e8a0:	str	r1, [r0, #16]
   5e8a4:	ldr	r0, [sp, #8]
   5e8a8:	mvn	r2, #0
   5e8ac:	str	r2, [r0, #28]
   5e8b0:	ldr	r0, [fp, #-12]
   5e8b4:	cmp	r0, r1
   5e8b8:	beq	5e8c8 <__assert_fail@plt+0x4bd10>
   5e8bc:	ldr	r0, [sp, #8]
   5e8c0:	ldr	r1, [fp, #-12]
   5e8c4:	str	r0, [r1]
   5e8c8:	ldr	r0, [sp, #16]
   5e8cc:	movw	r1, #0
   5e8d0:	cmp	r0, r1
   5e8d4:	beq	5e8e4 <__assert_fail@plt+0x4bd2c>
   5e8d8:	ldr	r0, [sp, #8]
   5e8dc:	ldr	r1, [sp, #16]
   5e8e0:	str	r0, [r1]
   5e8e4:	ldr	r0, [sp, #8]
   5e8e8:	str	r0, [fp, #-4]
   5e8ec:	ldr	r0, [fp, #-4]
   5e8f0:	mov	sp, fp
   5e8f4:	pop	{fp, pc}
   5e8f8:	push	{fp, lr}
   5e8fc:	mov	fp, sp
   5e900:	sub	sp, sp, #56	; 0x38
   5e904:	ldr	ip, [fp, #12]
   5e908:	ldr	lr, [fp, #8]
   5e90c:	str	r0, [fp, #-8]
   5e910:	str	r1, [fp, #-12]
   5e914:	str	r2, [fp, #-16]
   5e918:	str	r3, [fp, #-20]	; 0xffffffec
   5e91c:	ldr	r0, [fp, #-12]
   5e920:	ldr	r0, [r0]
   5e924:	str	r0, [fp, #-24]	; 0xffffffe8
   5e928:	ldr	r0, [fp, #-12]
   5e92c:	ldr	r1, [r0, #24]
   5e930:	add	r2, r1, #1
   5e934:	str	r2, [r0, #24]
   5e938:	str	r1, [sp, #24]
   5e93c:	ldr	r0, [fp, #-16]
   5e940:	ldr	r1, [fp, #-8]
   5e944:	ldr	r2, [fp, #-20]	; 0xffffffec
   5e948:	orr	r2, r2, #8388608	; 0x800000
   5e94c:	str	lr, [sp, #20]
   5e950:	str	ip, [sp, #16]
   5e954:	bl	5c46c <__assert_fail@plt+0x498b4>
   5e958:	ldr	r0, [fp, #-16]
   5e95c:	ldr	r0, [r0, #4]
   5e960:	and	r0, r0, #255	; 0xff
   5e964:	cmp	r0, #9
   5e968:	bne	5e978 <__assert_fail@plt+0x4bdc0>
   5e96c:	movw	r0, #0
   5e970:	str	r0, [sp, #28]
   5e974:	b	5ea34 <__assert_fail@plt+0x4be7c>
   5e978:	ldr	r0, [fp, #-8]
   5e97c:	ldr	r1, [fp, #-12]
   5e980:	ldr	r2, [fp, #-16]
   5e984:	ldr	r3, [fp, #-20]	; 0xffffffec
   5e988:	ldr	ip, [fp, #8]
   5e98c:	ldr	lr, [fp, #12]
   5e990:	str	ip, [sp]
   5e994:	str	lr, [sp, #4]
   5e998:	bl	5c4ac <__assert_fail@plt+0x498f4>
   5e99c:	str	r0, [sp, #28]
   5e9a0:	ldr	r0, [fp, #12]
   5e9a4:	ldr	r0, [r0]
   5e9a8:	cmp	r0, #0
   5e9ac:	movw	r0, #0
   5e9b0:	str	r0, [sp, #12]
   5e9b4:	bne	5e9d4 <__assert_fail@plt+0x4be1c>
   5e9b8:	ldr	r0, [fp, #-16]
   5e9bc:	ldr	r0, [r0, #4]
   5e9c0:	and	r0, r0, #255	; 0xff
   5e9c4:	cmp	r0, #9
   5e9c8:	movw	r0, #0
   5e9cc:	movne	r0, #1
   5e9d0:	str	r0, [sp, #12]
   5e9d4:	ldr	r0, [sp, #12]
   5e9d8:	tst	r0, #1
   5e9dc:	beq	5ea14 <__assert_fail@plt+0x4be5c>
   5e9e0:	ldr	r0, [sp, #28]
   5e9e4:	movw	r1, #0
   5e9e8:	cmp	r0, r1
   5e9ec:	beq	5ea08 <__assert_fail@plt+0x4be50>
   5e9f0:	ldr	r0, [sp, #28]
   5e9f4:	movw	r1, #56440	; 0xdc78
   5e9f8:	movt	r1, #5
   5e9fc:	movw	r2, #0
   5ea00:	bl	5db08 <__assert_fail@plt+0x4af50>
   5ea04:	str	r0, [sp, #8]
   5ea08:	ldr	r0, [fp, #12]
   5ea0c:	movw	r1, #8
   5ea10:	str	r1, [r0]
   5ea14:	ldr	r0, [fp, #12]
   5ea18:	ldr	r0, [r0]
   5ea1c:	cmp	r0, #0
   5ea20:	beq	5ea30 <__assert_fail@plt+0x4be78>
   5ea24:	movw	r0, #0
   5ea28:	str	r0, [fp, #-4]
   5ea2c:	b	5eab0 <__assert_fail@plt+0x4bef8>
   5ea30:	b	5ea34 <__assert_fail@plt+0x4be7c>
   5ea34:	ldr	r0, [sp, #24]
   5ea38:	cmp	r0, #8
   5ea3c:	bhi	5ea5c <__assert_fail@plt+0x4bea4>
   5ea40:	ldr	r0, [sp, #24]
   5ea44:	movw	r1, #1
   5ea48:	lsl	r0, r1, r0
   5ea4c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   5ea50:	ldr	r2, [r1, #84]	; 0x54
   5ea54:	orr	r0, r2, r0
   5ea58:	str	r0, [r1, #84]	; 0x54
   5ea5c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   5ea60:	ldr	r1, [sp, #28]
   5ea64:	movw	r2, #0
   5ea68:	movw	r3, #17
   5ea6c:	bl	5c704 <__assert_fail@plt+0x49b4c>
   5ea70:	str	r0, [sp, #28]
   5ea74:	ldr	r0, [sp, #28]
   5ea78:	movw	r1, #0
   5ea7c:	cmp	r0, r1
   5ea80:	bne	5ea9c <__assert_fail@plt+0x4bee4>
   5ea84:	ldr	r0, [fp, #12]
   5ea88:	movw	r1, #12
   5ea8c:	str	r1, [r0]
   5ea90:	movw	r0, #0
   5ea94:	str	r0, [fp, #-4]
   5ea98:	b	5eab0 <__assert_fail@plt+0x4bef8>
   5ea9c:	ldr	r0, [sp, #24]
   5eaa0:	ldr	r1, [sp, #28]
   5eaa4:	str	r0, [r1, #20]
   5eaa8:	ldr	r0, [sp, #28]
   5eaac:	str	r0, [fp, #-4]
   5eab0:	ldr	r0, [fp, #-4]
   5eab4:	mov	sp, fp
   5eab8:	pop	{fp, pc}
   5eabc:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   5eac0:	add	fp, sp, #24
   5eac4:	sub	sp, sp, #296	; 0x128
   5eac8:	ldr	ip, [fp, #8]
   5eacc:	str	r0, [fp, #-32]	; 0xffffffe0
   5ead0:	str	r1, [fp, #-36]	; 0xffffffdc
   5ead4:	str	r2, [fp, #-40]	; 0xffffffd8
   5ead8:	str	r3, [fp, #-44]	; 0xffffffd4
   5eadc:	movw	r0, #0
   5eae0:	str	r0, [fp, #-48]	; 0xffffffd0
   5eae4:	str	r0, [fp, #-52]	; 0xffffffcc
   5eae8:	str	r0, [fp, #-56]	; 0xffffffc8
   5eaec:	str	r0, [fp, #-60]	; 0xffffffc4
   5eaf0:	str	r0, [fp, #-64]	; 0xffffffc0
   5eaf4:	str	r0, [fp, #-68]	; 0xffffffbc
   5eaf8:	str	r0, [fp, #-88]	; 0xffffffa8
   5eafc:	str	r0, [fp, #-92]	; 0xffffffa4
   5eb00:	str	r0, [fp, #-96]	; 0xffffffa0
   5eb04:	str	r0, [fp, #-100]	; 0xffffff9c
   5eb08:	str	r0, [fp, #-104]	; 0xffffff98
   5eb0c:	movw	r0, #0
   5eb10:	strb	r0, [fp, #-105]	; 0xffffff97
   5eb14:	movw	r0, #1
   5eb18:	strb	r0, [fp, #-117]	; 0xffffff8b
   5eb1c:	movw	r0, #32
   5eb20:	movw	r1, #1
   5eb24:	str	ip, [sp, #84]	; 0x54
   5eb28:	bl	50240 <__assert_fail@plt+0x3d688>
   5eb2c:	str	r0, [fp, #-80]	; 0xffffffb0
   5eb30:	movw	r0, #40	; 0x28
   5eb34:	movw	r1, #1
   5eb38:	bl	50240 <__assert_fail@plt+0x3d688>
   5eb3c:	str	r0, [fp, #-84]	; 0xffffffac
   5eb40:	ldr	r0, [fp, #-80]	; 0xffffffb0
   5eb44:	movw	r1, #0
   5eb48:	cmp	r0, r1
   5eb4c:	movw	r0, #1
   5eb50:	str	r0, [sp, #80]	; 0x50
   5eb54:	beq	5eb70 <__assert_fail@plt+0x4bfb8>
   5eb58:	ldr	r0, [fp, #-84]	; 0xffffffac
   5eb5c:	movw	r1, #0
   5eb60:	cmp	r0, r1
   5eb64:	movw	r0, #0
   5eb68:	moveq	r0, #1
   5eb6c:	str	r0, [sp, #80]	; 0x50
   5eb70:	ldr	r0, [sp, #80]	; 0x50
   5eb74:	tst	r0, #1
   5eb78:	beq	5eba4 <__assert_fail@plt+0x4bfec>
   5eb7c:	ldr	r0, [fp, #-80]	; 0xffffffb0
   5eb80:	bl	50c68 <__assert_fail@plt+0x3e0b0>
   5eb84:	ldr	r0, [fp, #-84]	; 0xffffffac
   5eb88:	bl	50c68 <__assert_fail@plt+0x3e0b0>
   5eb8c:	ldr	r0, [fp, #8]
   5eb90:	movw	lr, #12
   5eb94:	str	lr, [r0]
   5eb98:	movw	r0, #0
   5eb9c:	str	r0, [fp, #-28]	; 0xffffffe4
   5eba0:	b	5f3e0 <__assert_fail@plt+0x4c828>
   5eba4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   5eba8:	ldr	r1, [fp, #-32]	; 0xffffffe0
   5ebac:	ldr	r2, [fp, #-44]	; 0xffffffd4
   5ebb0:	bl	5ff2c <__assert_fail@plt+0x4d374>
   5ebb4:	str	r0, [fp, #-116]	; 0xffffff8c
   5ebb8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   5ebbc:	ldr	r0, [r0, #4]
   5ebc0:	and	r0, r0, #255	; 0xff
   5ebc4:	cmp	r0, #2
   5ebc8:	bne	5ebdc <__assert_fail@plt+0x4c024>
   5ebcc:	ldr	r0, [fp, #8]
   5ebd0:	movw	r1, #2
   5ebd4:	str	r1, [r0]
   5ebd8:	b	5f3c8 <__assert_fail@plt+0x4c810>
   5ebdc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   5ebe0:	ldr	r0, [r0, #4]
   5ebe4:	and	r0, r0, #255	; 0xff
   5ebe8:	cmp	r0, #25
   5ebec:	bne	5ec78 <__assert_fail@plt+0x4c0c0>
   5ebf0:	ldr	r0, [fp, #-84]	; 0xffffffac
   5ebf4:	ldrb	r1, [r0, #16]
   5ebf8:	bic	r1, r1, #1
   5ebfc:	movw	r2, #1
   5ec00:	orr	r1, r1, r2
   5ec04:	strb	r1, [r0, #16]
   5ec08:	strb	r2, [fp, #-105]	; 0xffffff97
   5ec0c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   5ec10:	and	r0, r0, #256	; 0x100
   5ec14:	cmp	r0, #0
   5ec18:	beq	5ec28 <__assert_fail@plt+0x4c070>
   5ec1c:	ldr	r0, [fp, #-80]	; 0xffffffb0
   5ec20:	movw	r1, #10
   5ec24:	bl	6029c <__assert_fail@plt+0x4d6e4>
   5ec28:	ldr	r0, [fp, #-116]	; 0xffffff8c
   5ec2c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   5ec30:	ldr	r2, [r1, #40]	; 0x28
   5ec34:	add	r0, r2, r0
   5ec38:	str	r0, [r1, #40]	; 0x28
   5ec3c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   5ec40:	ldr	r1, [fp, #-32]	; 0xffffffe0
   5ec44:	ldr	r2, [fp, #-44]	; 0xffffffd4
   5ec48:	bl	5ff2c <__assert_fail@plt+0x4d374>
   5ec4c:	str	r0, [fp, #-116]	; 0xffffff8c
   5ec50:	ldr	r0, [fp, #-40]	; 0xffffffd8
   5ec54:	ldr	r0, [r0, #4]
   5ec58:	and	r0, r0, #255	; 0xff
   5ec5c:	cmp	r0, #2
   5ec60:	bne	5ec74 <__assert_fail@plt+0x4c0bc>
   5ec64:	ldr	r0, [fp, #8]
   5ec68:	movw	r1, #2
   5ec6c:	str	r1, [r0]
   5ec70:	b	5f3c8 <__assert_fail@plt+0x4c810>
   5ec74:	b	5ec78 <__assert_fail@plt+0x4c0c0>
   5ec78:	ldr	r0, [fp, #-40]	; 0xffffffd8
   5ec7c:	ldr	r0, [r0, #4]
   5ec80:	and	r0, r0, #255	; 0xff
   5ec84:	cmp	r0, #21
   5ec88:	bne	5eca4 <__assert_fail@plt+0x4c0ec>
   5ec8c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   5ec90:	ldr	r1, [r0, #4]
   5ec94:	mvn	r2, #255	; 0xff
   5ec98:	and	r1, r1, r2
   5ec9c:	orr	r1, r1, #1
   5eca0:	str	r1, [r0, #4]
   5eca4:	b	5eca8 <__assert_fail@plt+0x4c0f0>
   5eca8:	add	r0, sp, #152	; 0x98
   5ecac:	movw	r1, #0
   5ecb0:	str	r1, [sp, #112]	; 0x70
   5ecb4:	movw	r1, #0
   5ecb8:	strb	r1, [sp, #111]	; 0x6f
   5ecbc:	str	r0, [fp, #-124]	; 0xffffff84
   5ecc0:	movw	r0, #3
   5ecc4:	str	r0, [fp, #-128]	; 0xffffff80
   5ecc8:	ldr	r1, [fp, #-32]	; 0xffffffe0
   5eccc:	ldr	r2, [fp, #-40]	; 0xffffffd8
   5ecd0:	ldr	r3, [fp, #-116]	; 0xffffff8c
   5ecd4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   5ecd8:	ldr	ip, [fp, #-44]	; 0xffffffd4
   5ecdc:	ldrb	lr, [fp, #-117]	; 0xffffff8b
   5ece0:	sub	r4, fp, #128	; 0x80
   5ece4:	str	r0, [sp, #76]	; 0x4c
   5ece8:	mov	r0, r4
   5ecec:	ldr	r4, [sp, #76]	; 0x4c
   5ecf0:	str	r4, [sp]
   5ecf4:	str	ip, [sp, #4]
   5ecf8:	and	ip, lr, #1
   5ecfc:	str	ip, [sp, #8]
   5ed00:	bl	602e4 <__assert_fail@plt+0x4d72c>
   5ed04:	str	r0, [sp, #116]	; 0x74
   5ed08:	ldr	r0, [sp, #116]	; 0x74
   5ed0c:	cmp	r0, #0
   5ed10:	beq	5ed24 <__assert_fail@plt+0x4c16c>
   5ed14:	ldr	r0, [sp, #116]	; 0x74
   5ed18:	ldr	r1, [fp, #8]
   5ed1c:	str	r0, [r1]
   5ed20:	b	5f3c8 <__assert_fail@plt+0x4c810>
   5ed24:	movw	r0, #0
   5ed28:	strb	r0, [fp, #-117]	; 0xffffff8b
   5ed2c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   5ed30:	ldr	r1, [fp, #-32]	; 0xffffffe0
   5ed34:	ldr	r2, [fp, #-44]	; 0xffffffd4
   5ed38:	bl	5ff2c <__assert_fail@plt+0x4d374>
   5ed3c:	str	r0, [fp, #-116]	; 0xffffff8c
   5ed40:	ldr	r0, [fp, #-128]	; 0xffffff80
   5ed44:	cmp	r0, #4
   5ed48:	beq	5ee30 <__assert_fail@plt+0x4c278>
   5ed4c:	ldr	r0, [fp, #-128]	; 0xffffff80
   5ed50:	cmp	r0, #2
   5ed54:	beq	5ee30 <__assert_fail@plt+0x4c278>
   5ed58:	ldr	r0, [fp, #-40]	; 0xffffffd8
   5ed5c:	ldr	r0, [r0, #4]
   5ed60:	and	r0, r0, #255	; 0xff
   5ed64:	cmp	r0, #2
   5ed68:	bne	5ed7c <__assert_fail@plt+0x4c1c4>
   5ed6c:	ldr	r0, [fp, #8]
   5ed70:	movw	r1, #7
   5ed74:	str	r1, [r0]
   5ed78:	b	5f3c8 <__assert_fail@plt+0x4c810>
   5ed7c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   5ed80:	ldr	r0, [r0, #4]
   5ed84:	and	r0, r0, #255	; 0xff
   5ed88:	cmp	r0, #22
   5ed8c:	bne	5ee2c <__assert_fail@plt+0x4c274>
   5ed90:	ldr	r0, [fp, #-116]	; 0xffffff8c
   5ed94:	ldr	r1, [fp, #-32]	; 0xffffffe0
   5ed98:	ldr	r2, [r1, #40]	; 0x28
   5ed9c:	add	r0, r2, r0
   5eda0:	str	r0, [r1, #40]	; 0x28
   5eda4:	ldr	r1, [fp, #-32]	; 0xffffffe0
   5eda8:	ldr	r2, [fp, #-44]	; 0xffffffd4
   5edac:	add	r0, sp, #100	; 0x64
   5edb0:	bl	5ff2c <__assert_fail@plt+0x4d374>
   5edb4:	str	r0, [sp, #112]	; 0x70
   5edb8:	ldr	r0, [sp, #104]	; 0x68
   5edbc:	and	r0, r0, #255	; 0xff
   5edc0:	cmp	r0, #2
   5edc4:	bne	5edd8 <__assert_fail@plt+0x4c220>
   5edc8:	ldr	r0, [fp, #8]
   5edcc:	movw	r1, #7
   5edd0:	str	r1, [r0]
   5edd4:	b	5f3c8 <__assert_fail@plt+0x4c810>
   5edd8:	ldr	r0, [sp, #104]	; 0x68
   5eddc:	and	r0, r0, #255	; 0xff
   5ede0:	cmp	r0, #21
   5ede4:	bne	5ee20 <__assert_fail@plt+0x4c268>
   5ede8:	ldr	r0, [fp, #-116]	; 0xffffff8c
   5edec:	movw	r1, #0
   5edf0:	sub	r0, r1, r0
   5edf4:	ldr	r1, [fp, #-32]	; 0xffffffe0
   5edf8:	ldr	r2, [r1, #40]	; 0x28
   5edfc:	add	r0, r2, r0
   5ee00:	str	r0, [r1, #40]	; 0x28
   5ee04:	ldr	r0, [fp, #-40]	; 0xffffffd8
   5ee08:	ldr	r1, [r0, #4]
   5ee0c:	mvn	r2, #255	; 0xff
   5ee10:	and	r1, r1, r2
   5ee14:	orr	r1, r1, #1
   5ee18:	str	r1, [r0, #4]
   5ee1c:	b	5ee28 <__assert_fail@plt+0x4c270>
   5ee20:	movw	r0, #1
   5ee24:	strb	r0, [sp, #111]	; 0x6f
   5ee28:	b	5ee2c <__assert_fail@plt+0x4c274>
   5ee2c:	b	5ee30 <__assert_fail@plt+0x4c278>
   5ee30:	ldrb	r0, [sp, #111]	; 0x6f
   5ee34:	and	r0, r0, #1
   5ee38:	cmp	r0, #1
   5ee3c:	bne	5ef60 <__assert_fail@plt+0x4c3a8>
   5ee40:	add	r0, sp, #120	; 0x78
   5ee44:	str	r0, [fp, #-132]	; 0xffffff7c
   5ee48:	movw	r0, #3
   5ee4c:	str	r0, [fp, #-136]	; 0xffffff78
   5ee50:	ldr	r1, [fp, #-32]	; 0xffffffe0
   5ee54:	ldr	r3, [sp, #112]	; 0x70
   5ee58:	ldr	r0, [fp, #-36]	; 0xffffffdc
   5ee5c:	ldr	r2, [fp, #-44]	; 0xffffffd4
   5ee60:	sub	ip, fp, #136	; 0x88
   5ee64:	str	r0, [sp, #72]	; 0x48
   5ee68:	mov	r0, ip
   5ee6c:	add	ip, sp, #100	; 0x64
   5ee70:	str	r2, [sp, #68]	; 0x44
   5ee74:	mov	r2, ip
   5ee78:	ldr	ip, [sp, #72]	; 0x48
   5ee7c:	str	ip, [sp]
   5ee80:	ldr	lr, [sp, #68]	; 0x44
   5ee84:	str	lr, [sp, #4]
   5ee88:	movw	r4, #1
   5ee8c:	and	r4, r4, #1
   5ee90:	str	r4, [sp, #8]
   5ee94:	bl	602e4 <__assert_fail@plt+0x4d72c>
   5ee98:	str	r0, [sp, #116]	; 0x74
   5ee9c:	ldr	r0, [sp, #116]	; 0x74
   5eea0:	cmp	r0, #0
   5eea4:	beq	5eeb8 <__assert_fail@plt+0x4c300>
   5eea8:	ldr	r0, [sp, #116]	; 0x74
   5eeac:	ldr	r1, [fp, #8]
   5eeb0:	str	r0, [r1]
   5eeb4:	b	5f3c8 <__assert_fail@plt+0x4c810>
   5eeb8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   5eebc:	ldr	r1, [fp, #-32]	; 0xffffffe0
   5eec0:	ldr	r2, [fp, #-44]	; 0xffffffd4
   5eec4:	bl	5ff2c <__assert_fail@plt+0x4d374>
   5eec8:	str	r0, [fp, #-116]	; 0xffffff8c
   5eecc:	ldr	r0, [fp, #-80]	; 0xffffffb0
   5eed0:	ldr	r1, [fp, #-84]	; 0xffffffac
   5eed4:	ldr	r2, [fp, #-36]	; 0xffffffdc
   5eed8:	ldr	lr, [fp, #-44]	; 0xffffffd4
   5eedc:	ldr	r3, [fp, #-56]	; 0xffffffc8
   5eee0:	ldr	ip, [fp, #-48]	; 0xffffffd0
   5eee4:	ldr	r4, [fp, #-52]	; 0xffffffcc
   5eee8:	ldr	r5, [fp, #-60]	; 0xffffffc4
   5eeec:	ldr	r6, [fp, #-64]	; 0xffffffc0
   5eef0:	ldr	r7, [fp, #-68]	; 0xffffffbc
   5eef4:	sub	r8, fp, #92	; 0x5c
   5eef8:	str	r2, [sp, #64]	; 0x40
   5eefc:	mov	r2, r8
   5ef00:	sub	r8, fp, #128	; 0x80
   5ef04:	str	r3, [sp, #60]	; 0x3c
   5ef08:	mov	r3, r8
   5ef0c:	sub	r8, fp, #136	; 0x88
   5ef10:	str	r8, [sp]
   5ef14:	ldr	r8, [sp, #64]	; 0x40
   5ef18:	str	r8, [sp, #4]
   5ef1c:	str	lr, [sp, #8]
   5ef20:	ldr	lr, [sp, #60]	; 0x3c
   5ef24:	str	lr, [sp, #12]
   5ef28:	str	ip, [sp, #16]
   5ef2c:	str	r4, [sp, #20]
   5ef30:	str	r5, [sp, #24]
   5ef34:	str	r6, [sp, #28]
   5ef38:	str	r7, [sp, #32]
   5ef3c:	bl	60468 <__assert_fail@plt+0x4d8b0>
   5ef40:	ldr	r1, [fp, #8]
   5ef44:	str	r0, [r1]
   5ef48:	ldr	r0, [fp, #8]
   5ef4c:	ldr	r0, [r0]
   5ef50:	cmp	r0, #0
   5ef54:	beq	5ef5c <__assert_fail@plt+0x4c3a4>
   5ef58:	b	5f3c8 <__assert_fail@plt+0x4c810>
   5ef5c:	b	5f114 <__assert_fail@plt+0x4c55c>
   5ef60:	ldr	r0, [fp, #-128]	; 0xffffff80
   5ef64:	cmp	r0, #4
   5ef68:	str	r0, [sp, #56]	; 0x38
   5ef6c:	bhi	5f110 <__assert_fail@plt+0x4c558>
   5ef70:	add	r0, pc, #8
   5ef74:	ldr	r1, [sp, #56]	; 0x38
   5ef78:	ldr	r0, [r0, r1, lsl #2]
   5ef7c:	mov	pc, r0
   5ef80:	muleq	r5, r4, pc	; <UNPREDICTABLE>
   5ef84:	andeq	lr, r5, r4, lsr #31
   5ef88:	andeq	pc, r5, r8, lsr #32
   5ef8c:	andeq	pc, r5, ip, asr r0	; <UNPREDICTABLE>
   5ef90:	strheq	pc, [r5], -ip	; <UNPREDICTABLE>
   5ef94:	ldr	r0, [fp, #-80]	; 0xffffffb0
   5ef98:	ldrb	r1, [fp, #-124]	; 0xffffff84
   5ef9c:	bl	6029c <__assert_fail@plt+0x4d6e4>
   5efa0:	b	5f110 <__assert_fail@plt+0x4c558>
   5efa4:	ldr	r0, [fp, #-96]	; 0xffffffa0
   5efa8:	ldr	r1, [fp, #-84]	; 0xffffffac
   5efac:	ldr	r1, [r1, #20]
   5efb0:	cmp	r0, r1
   5efb4:	bne	5f004 <__assert_fail@plt+0x4c44c>
   5efb8:	ldr	r0, [fp, #-84]	; 0xffffffac
   5efbc:	ldr	r0, [r0, #20]
   5efc0:	mov	r1, #1
   5efc4:	orr	r0, r1, r0, lsl #1
   5efc8:	str	r0, [fp, #-96]	; 0xffffffa0
   5efcc:	ldr	r0, [fp, #-84]	; 0xffffffac
   5efd0:	ldr	r0, [r0]
   5efd4:	ldr	r1, [fp, #-96]	; 0xffffffa0
   5efd8:	lsl	r1, r1, #2
   5efdc:	bl	55a84 <__assert_fail@plt+0x42ecc>
   5efe0:	str	r0, [sp, #96]	; 0x60
   5efe4:	ldr	r0, [sp, #96]	; 0x60
   5efe8:	movw	r1, #0
   5efec:	cmp	r0, r1
   5eff0:	bne	5eff8 <__assert_fail@plt+0x4c440>
   5eff4:	b	5f3bc <__assert_fail@plt+0x4c804>
   5eff8:	ldr	r0, [sp, #96]	; 0x60
   5effc:	ldr	r1, [fp, #-84]	; 0xffffffac
   5f000:	str	r0, [r1]
   5f004:	ldr	r0, [fp, #-124]	; 0xffffff84
   5f008:	ldr	r1, [fp, #-84]	; 0xffffffac
   5f00c:	ldr	r2, [r1]
   5f010:	ldr	r3, [r1, #20]
   5f014:	add	ip, r3, #1
   5f018:	str	ip, [r1, #20]
   5f01c:	add	r1, r2, r3, lsl #2
   5f020:	str	r0, [r1]
   5f024:	b	5f110 <__assert_fail@plt+0x4c558>
   5f028:	ldr	r0, [fp, #-80]	; 0xffffffb0
   5f02c:	ldr	r1, [fp, #-84]	; 0xffffffac
   5f030:	ldr	r3, [fp, #-124]	; 0xffffff84
   5f034:	sub	r2, fp, #100	; 0x64
   5f038:	bl	60910 <__assert_fail@plt+0x4dd58>
   5f03c:	ldr	r1, [fp, #8]
   5f040:	str	r0, [r1]
   5f044:	ldr	r0, [fp, #8]
   5f048:	ldr	r0, [r0]
   5f04c:	cmp	r0, #0
   5f050:	beq	5f058 <__assert_fail@plt+0x4c4a0>
   5f054:	b	5f3c8 <__assert_fail@plt+0x4c810>
   5f058:	b	5f110 <__assert_fail@plt+0x4c558>
   5f05c:	ldr	r0, [fp, #-80]	; 0xffffffb0
   5f060:	ldr	r1, [fp, #-84]	; 0xffffffac
   5f064:	ldr	r3, [fp, #-124]	; 0xffffff84
   5f068:	ldr	r2, [fp, #-56]	; 0xffffffc8
   5f06c:	ldr	ip, [fp, #-60]	; 0xffffffc4
   5f070:	ldr	lr, [fp, #-64]	; 0xffffffc0
   5f074:	ldr	r4, [fp, #-68]	; 0xffffffbc
   5f078:	sub	r5, fp, #88	; 0x58
   5f07c:	str	r2, [sp, #52]	; 0x34
   5f080:	mov	r2, r5
   5f084:	ldr	r5, [sp, #52]	; 0x34
   5f088:	str	r5, [sp]
   5f08c:	str	ip, [sp, #4]
   5f090:	str	lr, [sp, #8]
   5f094:	str	r4, [sp, #12]
   5f098:	bl	6096c <__assert_fail@plt+0x4ddb4>
   5f09c:	ldr	r1, [fp, #8]
   5f0a0:	str	r0, [r1]
   5f0a4:	ldr	r0, [fp, #8]
   5f0a8:	ldr	r0, [r0]
   5f0ac:	cmp	r0, #0
   5f0b0:	beq	5f0b8 <__assert_fail@plt+0x4c500>
   5f0b4:	b	5f3c8 <__assert_fail@plt+0x4c810>
   5f0b8:	b	5f110 <__assert_fail@plt+0x4c558>
   5f0bc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   5f0c0:	ldr	r0, [r0, #64]	; 0x40
   5f0c4:	ldr	r1, [fp, #-80]	; 0xffffffb0
   5f0c8:	ldr	r2, [fp, #-84]	; 0xffffffac
   5f0cc:	ldr	r3, [fp, #-124]	; 0xffffff84
   5f0d0:	ldr	ip, [fp, #-44]	; 0xffffffd4
   5f0d4:	sub	lr, fp, #104	; 0x68
   5f0d8:	str	r3, [sp, #48]	; 0x30
   5f0dc:	mov	r3, lr
   5f0e0:	ldr	lr, [sp, #48]	; 0x30
   5f0e4:	str	lr, [sp]
   5f0e8:	str	ip, [sp, #4]
   5f0ec:	bl	609f0 <__assert_fail@plt+0x4de38>
   5f0f0:	ldr	r1, [fp, #8]
   5f0f4:	str	r0, [r1]
   5f0f8:	ldr	r0, [fp, #8]
   5f0fc:	ldr	r0, [r0]
   5f100:	cmp	r0, #0
   5f104:	beq	5f10c <__assert_fail@plt+0x4c554>
   5f108:	b	5f3c8 <__assert_fail@plt+0x4c810>
   5f10c:	b	5f110 <__assert_fail@plt+0x4c558>
   5f110:	b	5f114 <__assert_fail@plt+0x4c55c>
   5f114:	ldr	r0, [fp, #-40]	; 0xffffffd8
   5f118:	ldr	r0, [r0, #4]
   5f11c:	and	r0, r0, #255	; 0xff
   5f120:	cmp	r0, #2
   5f124:	bne	5f138 <__assert_fail@plt+0x4c580>
   5f128:	ldr	r0, [fp, #8]
   5f12c:	movw	r1, #7
   5f130:	str	r1, [r0]
   5f134:	b	5f3c8 <__assert_fail@plt+0x4c810>
   5f138:	ldr	r0, [fp, #-40]	; 0xffffffd8
   5f13c:	ldr	r0, [r0, #4]
   5f140:	and	r0, r0, #255	; 0xff
   5f144:	cmp	r0, #21
   5f148:	bne	5f150 <__assert_fail@plt+0x4c598>
   5f14c:	b	5f154 <__assert_fail@plt+0x4c59c>
   5f150:	b	5eca8 <__assert_fail@plt+0x4c0f0>
   5f154:	ldr	r0, [fp, #-116]	; 0xffffff8c
   5f158:	ldr	r1, [fp, #-32]	; 0xffffffe0
   5f15c:	ldr	r2, [r1, #40]	; 0x28
   5f160:	add	r0, r2, r0
   5f164:	str	r0, [r1, #40]	; 0x28
   5f168:	ldrb	r0, [fp, #-105]	; 0xffffff97
   5f16c:	tst	r0, #1
   5f170:	beq	5f17c <__assert_fail@plt+0x4c5c4>
   5f174:	ldr	r0, [fp, #-80]	; 0xffffffb0
   5f178:	bl	61698 <__assert_fail@plt+0x4eae0>
   5f17c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   5f180:	ldr	r0, [r0, #92]	; 0x5c
   5f184:	cmp	r0, #1
   5f188:	ble	5f19c <__assert_fail@plt+0x4c5e4>
   5f18c:	ldr	r0, [fp, #-80]	; 0xffffffb0
   5f190:	ldr	r1, [fp, #-36]	; 0xffffffdc
   5f194:	ldr	r1, [r1, #60]	; 0x3c
   5f198:	bl	616e0 <__assert_fail@plt+0x4eb28>
   5f19c:	ldr	r0, [fp, #-84]	; 0xffffffac
   5f1a0:	ldr	r0, [r0, #20]
   5f1a4:	cmp	r0, #0
   5f1a8:	bne	5f214 <__assert_fail@plt+0x4c65c>
   5f1ac:	ldr	r0, [fp, #-84]	; 0xffffffac
   5f1b0:	ldr	r0, [r0, #24]
   5f1b4:	cmp	r0, #0
   5f1b8:	bne	5f214 <__assert_fail@plt+0x4c65c>
   5f1bc:	ldr	r0, [fp, #-84]	; 0xffffffac
   5f1c0:	ldr	r0, [r0, #28]
   5f1c4:	cmp	r0, #0
   5f1c8:	bne	5f214 <__assert_fail@plt+0x4c65c>
   5f1cc:	ldr	r0, [fp, #-84]	; 0xffffffac
   5f1d0:	ldr	r0, [r0, #32]
   5f1d4:	cmp	r0, #0
   5f1d8:	bne	5f214 <__assert_fail@plt+0x4c65c>
   5f1dc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   5f1e0:	ldr	r0, [r0, #92]	; 0x5c
   5f1e4:	cmp	r0, #1
   5f1e8:	ble	5f358 <__assert_fail@plt+0x4c7a0>
   5f1ec:	ldr	r0, [fp, #-84]	; 0xffffffac
   5f1f0:	ldr	r0, [r0, #36]	; 0x24
   5f1f4:	cmp	r0, #0
   5f1f8:	bne	5f214 <__assert_fail@plt+0x4c65c>
   5f1fc:	ldr	r0, [fp, #-84]	; 0xffffffac
   5f200:	ldrb	r0, [r0, #16]
   5f204:	and	r0, r0, #1
   5f208:	and	r0, r0, #255	; 0xff
   5f20c:	cmp	r0, #0
   5f210:	beq	5f358 <__assert_fail@plt+0x4c7a0>
   5f214:	ldr	r0, [fp, #-36]	; 0xffffffdc
   5f218:	ldrb	r1, [r0, #88]	; 0x58
   5f21c:	bic	r1, r1, #2
   5f220:	movw	r2, #2
   5f224:	orr	r1, r1, r2
   5f228:	strb	r1, [r0, #88]	; 0x58
   5f22c:	ldr	r0, [fp, #-72]	; 0xffffffb8
   5f230:	mvn	r1, #255	; 0xff
   5f234:	and	r0, r0, r1
   5f238:	orr	r0, r0, #6
   5f23c:	str	r0, [fp, #-72]	; 0xffffffb8
   5f240:	ldr	r0, [fp, #-84]	; 0xffffffac
   5f244:	str	r0, [fp, #-76]	; 0xffffffb4
   5f248:	ldr	r0, [fp, #-36]	; 0xffffffdc
   5f24c:	movw	r1, #0
   5f250:	str	r1, [sp, #44]	; 0x2c
   5f254:	ldr	r2, [sp, #44]	; 0x2c
   5f258:	sub	r3, fp, #76	; 0x4c
   5f25c:	bl	5e794 <__assert_fail@plt+0x4bbdc>
   5f260:	str	r0, [sp, #92]	; 0x5c
   5f264:	ldr	r0, [sp, #92]	; 0x5c
   5f268:	movw	r1, #0
   5f26c:	cmp	r0, r1
   5f270:	bne	5f278 <__assert_fail@plt+0x4c6c0>
   5f274:	b	5f3bc <__assert_fail@plt+0x4c804>
   5f278:	movw	r0, #0
   5f27c:	str	r0, [sp, #88]	; 0x58
   5f280:	ldr	r0, [sp, #88]	; 0x58
   5f284:	cmp	r0, #8
   5f288:	bge	5f2bc <__assert_fail@plt+0x4c704>
   5f28c:	ldr	r0, [fp, #-80]	; 0xffffffb0
   5f290:	ldr	r1, [sp, #88]	; 0x58
   5f294:	add	r0, r0, r1, lsl #2
   5f298:	ldr	r0, [r0]
   5f29c:	cmp	r0, #0
   5f2a0:	beq	5f2a8 <__assert_fail@plt+0x4c6f0>
   5f2a4:	b	5f2bc <__assert_fail@plt+0x4c704>
   5f2a8:	b	5f2ac <__assert_fail@plt+0x4c6f4>
   5f2ac:	ldr	r0, [sp, #88]	; 0x58
   5f2b0:	add	r0, r0, #1
   5f2b4:	str	r0, [sp, #88]	; 0x58
   5f2b8:	b	5f280 <__assert_fail@plt+0x4c6c8>
   5f2bc:	ldr	r0, [sp, #88]	; 0x58
   5f2c0:	cmp	r0, #8
   5f2c4:	bge	5f344 <__assert_fail@plt+0x4c78c>
   5f2c8:	ldr	r0, [fp, #-72]	; 0xffffffb8
   5f2cc:	mvn	r1, #255	; 0xff
   5f2d0:	and	r0, r0, r1
   5f2d4:	orr	r0, r0, #3
   5f2d8:	str	r0, [fp, #-72]	; 0xffffffb8
   5f2dc:	ldr	r0, [fp, #-80]	; 0xffffffb0
   5f2e0:	str	r0, [fp, #-76]	; 0xffffffb4
   5f2e4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   5f2e8:	movw	r1, #0
   5f2ec:	str	r1, [sp, #40]	; 0x28
   5f2f0:	ldr	r2, [sp, #40]	; 0x28
   5f2f4:	sub	r3, fp, #76	; 0x4c
   5f2f8:	bl	5e794 <__assert_fail@plt+0x4bbdc>
   5f2fc:	str	r0, [fp, #-112]	; 0xffffff90
   5f300:	ldr	r0, [fp, #-112]	; 0xffffff90
   5f304:	movw	r1, #0
   5f308:	cmp	r0, r1
   5f30c:	bne	5f314 <__assert_fail@plt+0x4c75c>
   5f310:	b	5f3bc <__assert_fail@plt+0x4c804>
   5f314:	ldr	r0, [fp, #-36]	; 0xffffffdc
   5f318:	ldr	r1, [fp, #-112]	; 0xffffff90
   5f31c:	ldr	r2, [sp, #92]	; 0x5c
   5f320:	movw	r3, #10
   5f324:	bl	5c704 <__assert_fail@plt+0x49b4c>
   5f328:	str	r0, [fp, #-112]	; 0xffffff90
   5f32c:	ldr	r0, [fp, #-112]	; 0xffffff90
   5f330:	movw	r1, #0
   5f334:	cmp	r0, r1
   5f338:	bne	5f340 <__assert_fail@plt+0x4c788>
   5f33c:	b	5f3bc <__assert_fail@plt+0x4c804>
   5f340:	b	5f354 <__assert_fail@plt+0x4c79c>
   5f344:	ldr	r0, [fp, #-80]	; 0xffffffb0
   5f348:	bl	50c68 <__assert_fail@plt+0x3e0b0>
   5f34c:	ldr	r0, [sp, #92]	; 0x5c
   5f350:	str	r0, [fp, #-112]	; 0xffffff90
   5f354:	b	5f3b0 <__assert_fail@plt+0x4c7f8>
   5f358:	ldr	r0, [fp, #-84]	; 0xffffffac
   5f35c:	bl	59d2c <__assert_fail@plt+0x47174>
   5f360:	ldr	r0, [fp, #-72]	; 0xffffffb8
   5f364:	mvn	lr, #255	; 0xff
   5f368:	and	r0, r0, lr
   5f36c:	orr	r0, r0, #3
   5f370:	str	r0, [fp, #-72]	; 0xffffffb8
   5f374:	ldr	r0, [fp, #-80]	; 0xffffffb0
   5f378:	str	r0, [fp, #-76]	; 0xffffffb4
   5f37c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   5f380:	movw	lr, #0
   5f384:	mov	r1, lr
   5f388:	mov	r2, lr
   5f38c:	sub	r3, fp, #76	; 0x4c
   5f390:	bl	5e794 <__assert_fail@plt+0x4bbdc>
   5f394:	str	r0, [fp, #-112]	; 0xffffff90
   5f398:	ldr	r0, [fp, #-112]	; 0xffffff90
   5f39c:	movw	r1, #0
   5f3a0:	cmp	r0, r1
   5f3a4:	bne	5f3ac <__assert_fail@plt+0x4c7f4>
   5f3a8:	b	5f3bc <__assert_fail@plt+0x4c804>
   5f3ac:	b	5f3b0 <__assert_fail@plt+0x4c7f8>
   5f3b0:	ldr	r0, [fp, #-112]	; 0xffffff90
   5f3b4:	str	r0, [fp, #-28]	; 0xffffffe4
   5f3b8:	b	5f3e0 <__assert_fail@plt+0x4c828>
   5f3bc:	ldr	r0, [fp, #8]
   5f3c0:	movw	r1, #12
   5f3c4:	str	r1, [r0]
   5f3c8:	ldr	r0, [fp, #-80]	; 0xffffffb0
   5f3cc:	bl	50c68 <__assert_fail@plt+0x3e0b0>
   5f3d0:	ldr	r0, [fp, #-84]	; 0xffffffac
   5f3d4:	bl	59d2c <__assert_fail@plt+0x47174>
   5f3d8:	movw	r0, #0
   5f3dc:	str	r0, [fp, #-28]	; 0xffffffe4
   5f3e0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   5f3e4:	sub	sp, fp, #24
   5f3e8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   5f3ec:	push	{fp, lr}
   5f3f0:	mov	fp, sp
   5f3f4:	sub	sp, sp, #32
   5f3f8:	str	r0, [fp, #-4]
   5f3fc:	mov	r0, #0
   5f400:	str	r0, [fp, #-8]
   5f404:	str	r0, [sp, #16]
   5f408:	ldr	r0, [fp, #-4]
   5f40c:	ldrb	r1, [r0, #88]	; 0x58
   5f410:	orr	r1, r1, #16
   5f414:	strb	r1, [r0, #88]	; 0x58
   5f418:	ldr	r0, [fp, #-4]
   5f41c:	ldrb	r0, [r0, #88]	; 0x58
   5f420:	ubfx	r0, r0, #3, #1
   5f424:	and	r0, r0, #255	; 0xff
   5f428:	cmp	r0, #0
   5f42c:	bne	5f4e4 <__assert_fail@plt+0x4c92c>
   5f430:	mov	r0, #0
   5f434:	str	r0, [sp, #12]
   5f438:	movw	r0, #0
   5f43c:	movt	r0, #1023	; 0x3ff
   5f440:	str	r0, [sp, #8]
   5f444:	mvn	r0, #2013265921	; 0x78000001
   5f448:	str	r0, [sp, #4]
   5f44c:	mvn	r0, #-134217727	; 0xf8000001
   5f450:	str	r0, [sp]
   5f454:	ldr	r0, [sp, #12]
   5f458:	ldr	r1, [fp, #-4]
   5f45c:	str	r0, [r1, #96]	; 0x60
   5f460:	ldr	r0, [sp, #8]
   5f464:	ldr	r1, [fp, #-4]
   5f468:	str	r0, [r1, #100]	; 0x64
   5f46c:	ldr	r0, [sp, #4]
   5f470:	ldr	r1, [fp, #-4]
   5f474:	str	r0, [r1, #104]	; 0x68
   5f478:	ldr	r0, [sp]
   5f47c:	ldr	r1, [fp, #-4]
   5f480:	str	r0, [r1, #108]	; 0x6c
   5f484:	mov	r0, #4
   5f488:	str	r0, [fp, #-8]
   5f48c:	mov	r0, #128	; 0x80
   5f490:	str	r0, [sp, #16]
   5f494:	ldr	r0, [fp, #-4]
   5f498:	ldrb	r0, [r0, #88]	; 0x58
   5f49c:	ubfx	r0, r0, #2, #1
   5f4a0:	and	r0, r0, #255	; 0xff
   5f4a4:	cmp	r0, #0
   5f4a8:	beq	5f4e0 <__assert_fail@plt+0x4c928>
   5f4ac:	ldr	r0, [fp, #-4]
   5f4b0:	add	r0, r0, #96	; 0x60
   5f4b4:	ldr	r1, [fp, #-8]
   5f4b8:	add	r0, r0, r1, lsl #2
   5f4bc:	ldr	r1, [sp, #16]
   5f4c0:	movw	r2, #256	; 0x100
   5f4c4:	sub	r1, r2, r1
   5f4c8:	movw	r2, #8
   5f4cc:	sdiv	r2, r1, r2
   5f4d0:	movw	r1, #0
   5f4d4:	and	r1, r1, #255	; 0xff
   5f4d8:	bl	12900 <memset@plt>
   5f4dc:	b	5f594 <__assert_fail@plt+0x4c9dc>
   5f4e0:	b	5f4e4 <__assert_fail@plt+0x4c92c>
   5f4e4:	b	5f4e8 <__assert_fail@plt+0x4c930>
   5f4e8:	b	5f4ec <__assert_fail@plt+0x4c934>
   5f4ec:	ldr	r0, [fp, #-8]
   5f4f0:	cmp	r0, #8
   5f4f4:	bge	5f594 <__assert_fail@plt+0x4c9dc>
   5f4f8:	movw	r0, #0
   5f4fc:	str	r0, [fp, #-12]
   5f500:	ldr	r0, [fp, #-12]
   5f504:	cmp	r0, #32
   5f508:	bge	5f580 <__assert_fail@plt+0x4c9c8>
   5f50c:	bl	12834 <__ctype_b_loc@plt>
   5f510:	ldr	r0, [r0]
   5f514:	ldr	lr, [sp, #16]
   5f518:	add	r0, r0, lr, lsl #1
   5f51c:	ldrh	r0, [r0]
   5f520:	and	r0, r0, #8
   5f524:	cmp	r0, #0
   5f528:	bne	5f538 <__assert_fail@plt+0x4c980>
   5f52c:	ldr	r0, [sp, #16]
   5f530:	cmp	r0, #95	; 0x5f
   5f534:	bne	5f560 <__assert_fail@plt+0x4c9a8>
   5f538:	ldr	r0, [fp, #-12]
   5f53c:	mov	r1, #1
   5f540:	lsl	r0, r1, r0
   5f544:	ldr	r1, [fp, #-4]
   5f548:	add	r1, r1, #96	; 0x60
   5f54c:	ldr	r2, [fp, #-8]
   5f550:	add	r1, r1, r2, lsl #2
   5f554:	ldr	r2, [r1]
   5f558:	orr	r0, r2, r0
   5f55c:	str	r0, [r1]
   5f560:	b	5f564 <__assert_fail@plt+0x4c9ac>
   5f564:	ldr	r0, [fp, #-12]
   5f568:	add	r0, r0, #1
   5f56c:	str	r0, [fp, #-12]
   5f570:	ldr	r0, [sp, #16]
   5f574:	add	r0, r0, #1
   5f578:	str	r0, [sp, #16]
   5f57c:	b	5f500 <__assert_fail@plt+0x4c948>
   5f580:	b	5f584 <__assert_fail@plt+0x4c9cc>
   5f584:	ldr	r0, [fp, #-8]
   5f588:	add	r0, r0, #1
   5f58c:	str	r0, [fp, #-8]
   5f590:	b	5f4ec <__assert_fail@plt+0x4c934>
   5f594:	mov	sp, fp
   5f598:	pop	{fp, pc}
   5f59c:	push	{fp, lr}
   5f5a0:	mov	fp, sp
   5f5a4:	sub	sp, sp, #80	; 0x50
   5f5a8:	ldr	ip, [fp, #12]
   5f5ac:	ldr	lr, [fp, #8]
   5f5b0:	str	r0, [fp, #-8]
   5f5b4:	str	r1, [fp, #-12]
   5f5b8:	str	r2, [fp, #-16]
   5f5bc:	str	r3, [fp, #-20]	; 0xffffffec
   5f5c0:	and	r0, lr, #1
   5f5c4:	strb	r0, [fp, #-21]	; 0xffffffeb
   5f5c8:	movw	r0, #0
   5f5cc:	str	r0, [fp, #-36]	; 0xffffffdc
   5f5d0:	movw	r0, #32
   5f5d4:	movw	r1, #1
   5f5d8:	str	ip, [sp, #20]
   5f5dc:	bl	50240 <__assert_fail@plt+0x3d688>
   5f5e0:	str	r0, [fp, #-28]	; 0xffffffe4
   5f5e4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   5f5e8:	movw	r1, #0
   5f5ec:	cmp	r0, r1
   5f5f0:	bne	5f60c <__assert_fail@plt+0x4ca54>
   5f5f4:	ldr	r0, [fp, #12]
   5f5f8:	movw	r1, #12
   5f5fc:	str	r1, [r0]
   5f600:	movw	r0, #0
   5f604:	str	r0, [fp, #-4]
   5f608:	b	5f8c0 <__assert_fail@plt+0x4cd08>
   5f60c:	movw	r0, #40	; 0x28
   5f610:	movw	r1, #1
   5f614:	bl	50240 <__assert_fail@plt+0x3d688>
   5f618:	str	r0, [fp, #-32]	; 0xffffffe0
   5f61c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   5f620:	movw	r1, #0
   5f624:	cmp	r0, r1
   5f628:	bne	5f64c <__assert_fail@plt+0x4ca94>
   5f62c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   5f630:	bl	50c68 <__assert_fail@plt+0x3e0b0>
   5f634:	ldr	r0, [fp, #12]
   5f638:	movw	lr, #12
   5f63c:	str	lr, [r0]
   5f640:	movw	r0, #0
   5f644:	str	r0, [fp, #-4]
   5f648:	b	5f8c0 <__assert_fail@plt+0x4cd08>
   5f64c:	ldrb	r0, [fp, #-21]	; 0xffffffeb
   5f650:	and	r0, r0, #1
   5f654:	ldr	r1, [fp, #-32]	; 0xffffffe0
   5f658:	ldrb	r2, [r1, #16]
   5f65c:	bic	r2, r2, #1
   5f660:	orr	r0, r2, r0
   5f664:	strb	r0, [r1, #16]
   5f668:	ldr	r0, [fp, #-12]
   5f66c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   5f670:	ldr	r2, [fp, #-32]	; 0xffffffe0
   5f674:	ldr	r3, [fp, #-16]
   5f678:	sub	ip, fp, #36	; 0x24
   5f67c:	str	r3, [sp, #16]
   5f680:	mov	r3, ip
   5f684:	ldr	ip, [sp, #16]
   5f688:	str	ip, [sp]
   5f68c:	movw	lr, #0
   5f690:	str	lr, [sp, #4]
   5f694:	bl	609f0 <__assert_fail@plt+0x4de38>
   5f698:	str	r0, [sp, #40]	; 0x28
   5f69c:	ldr	r0, [sp, #40]	; 0x28
   5f6a0:	cmp	r0, #0
   5f6a4:	beq	5f6d0 <__assert_fail@plt+0x4cb18>
   5f6a8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   5f6ac:	bl	50c68 <__assert_fail@plt+0x3e0b0>
   5f6b0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   5f6b4:	bl	59d2c <__assert_fail@plt+0x47174>
   5f6b8:	ldr	r0, [sp, #40]	; 0x28
   5f6bc:	ldr	lr, [fp, #12]
   5f6c0:	str	r0, [lr]
   5f6c4:	movw	r0, #0
   5f6c8:	str	r0, [fp, #-4]
   5f6cc:	b	5f8c0 <__assert_fail@plt+0x4cd08>
   5f6d0:	b	5f6d4 <__assert_fail@plt+0x4cb1c>
   5f6d4:	ldr	r0, [fp, #-20]	; 0xffffffec
   5f6d8:	ldrsb	r0, [r0]
   5f6dc:	cmp	r0, #0
   5f6e0:	beq	5f704 <__assert_fail@plt+0x4cb4c>
   5f6e4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   5f6e8:	ldr	r1, [fp, #-20]	; 0xffffffec
   5f6ec:	ldrb	r1, [r1]
   5f6f0:	bl	6029c <__assert_fail@plt+0x4d6e4>
   5f6f4:	ldr	r0, [fp, #-20]	; 0xffffffec
   5f6f8:	add	r0, r0, #1
   5f6fc:	str	r0, [fp, #-20]	; 0xffffffec
   5f700:	b	5f6d4 <__assert_fail@plt+0x4cb1c>
   5f704:	ldrb	r0, [fp, #-21]	; 0xffffffeb
   5f708:	tst	r0, #1
   5f70c:	beq	5f718 <__assert_fail@plt+0x4cb60>
   5f710:	ldr	r0, [fp, #-28]	; 0xffffffe4
   5f714:	bl	61698 <__assert_fail@plt+0x4eae0>
   5f718:	ldr	r0, [fp, #-8]
   5f71c:	ldr	r0, [r0, #92]	; 0x5c
   5f720:	cmp	r0, #1
   5f724:	ble	5f738 <__assert_fail@plt+0x4cb80>
   5f728:	ldr	r0, [fp, #-28]	; 0xffffffe4
   5f72c:	ldr	r1, [fp, #-8]
   5f730:	ldr	r1, [r1, #60]	; 0x3c
   5f734:	bl	616e0 <__assert_fail@plt+0x4eb28>
   5f738:	ldr	r0, [pc, #396]	; 5f8cc <__assert_fail@plt+0x4cd14>
   5f73c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   5f740:	str	r1, [sp, #28]
   5f744:	ldr	r1, [sp, #32]
   5f748:	mvn	r2, #255	; 0xff
   5f74c:	and	r1, r1, r2
   5f750:	orr	r1, r1, #3
   5f754:	str	r1, [sp, #32]
   5f758:	ldr	r1, [sp, #32]
   5f75c:	and	r0, r1, r0
   5f760:	str	r0, [sp, #32]
   5f764:	ldr	r0, [sp, #32]
   5f768:	mvn	r1, #262144	; 0x40000
   5f76c:	and	r0, r0, r1
   5f770:	str	r0, [sp, #32]
   5f774:	ldr	r0, [sp, #32]
   5f778:	mvn	r1, #524288	; 0x80000
   5f77c:	and	r0, r0, r1
   5f780:	str	r0, [sp, #32]
   5f784:	ldr	r0, [sp, #32]
   5f788:	mvn	r1, #1048576	; 0x100000
   5f78c:	and	r0, r0, r1
   5f790:	str	r0, [sp, #32]
   5f794:	ldr	r0, [sp, #32]
   5f798:	mvn	r1, #2097152	; 0x200000
   5f79c:	and	r0, r0, r1
   5f7a0:	str	r0, [sp, #32]
   5f7a4:	ldr	r0, [sp, #32]
   5f7a8:	mvn	r1, #4194304	; 0x400000
   5f7ac:	and	r0, r0, r1
   5f7b0:	str	r0, [sp, #32]
   5f7b4:	ldr	r0, [fp, #-8]
   5f7b8:	movw	r1, #0
   5f7bc:	str	r1, [sp, #12]
   5f7c0:	ldr	r2, [sp, #12]
   5f7c4:	add	r3, sp, #28
   5f7c8:	bl	5e794 <__assert_fail@plt+0x4bbdc>
   5f7cc:	str	r0, [sp, #36]	; 0x24
   5f7d0:	ldr	r0, [sp, #36]	; 0x24
   5f7d4:	movw	r1, #0
   5f7d8:	cmp	r0, r1
   5f7dc:	bne	5f7e4 <__assert_fail@plt+0x4cc2c>
   5f7e0:	b	5f89c <__assert_fail@plt+0x4cce4>
   5f7e4:	ldr	r0, [fp, #-8]
   5f7e8:	ldr	r0, [r0, #92]	; 0x5c
   5f7ec:	cmp	r0, #1
   5f7f0:	ble	5f884 <__assert_fail@plt+0x4cccc>
   5f7f4:	mov	r0, #6
   5f7f8:	strb	r0, [sp, #32]
   5f7fc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   5f800:	str	r0, [sp, #28]
   5f804:	ldr	r0, [fp, #-8]
   5f808:	ldrb	r1, [r0, #88]	; 0x58
   5f80c:	bic	r1, r1, #2
   5f810:	movw	r2, #2
   5f814:	orr	r1, r1, r2
   5f818:	strb	r1, [r0, #88]	; 0x58
   5f81c:	ldr	r0, [fp, #-8]
   5f820:	movw	r1, #0
   5f824:	str	r1, [sp, #8]
   5f828:	ldr	r2, [sp, #8]
   5f82c:	add	r3, sp, #28
   5f830:	bl	5e794 <__assert_fail@plt+0x4bbdc>
   5f834:	str	r0, [sp, #24]
   5f838:	ldr	r0, [sp, #24]
   5f83c:	movw	r1, #0
   5f840:	cmp	r0, r1
   5f844:	bne	5f84c <__assert_fail@plt+0x4cc94>
   5f848:	b	5f89c <__assert_fail@plt+0x4cce4>
   5f84c:	ldr	r0, [fp, #-8]
   5f850:	ldr	r1, [sp, #36]	; 0x24
   5f854:	ldr	r2, [sp, #24]
   5f858:	movw	r3, #10
   5f85c:	bl	5c704 <__assert_fail@plt+0x49b4c>
   5f860:	str	r0, [sp, #36]	; 0x24
   5f864:	ldr	r0, [sp, #24]
   5f868:	movw	r1, #0
   5f86c:	cmp	r0, r1
   5f870:	beq	5f880 <__assert_fail@plt+0x4ccc8>
   5f874:	ldr	r0, [sp, #36]	; 0x24
   5f878:	str	r0, [fp, #-4]
   5f87c:	b	5f8c0 <__assert_fail@plt+0x4cd08>
   5f880:	b	5f898 <__assert_fail@plt+0x4cce0>
   5f884:	ldr	r0, [fp, #-32]	; 0xffffffe0
   5f888:	bl	59d2c <__assert_fail@plt+0x47174>
   5f88c:	ldr	r0, [sp, #36]	; 0x24
   5f890:	str	r0, [fp, #-4]
   5f894:	b	5f8c0 <__assert_fail@plt+0x4cd08>
   5f898:	b	5f89c <__assert_fail@plt+0x4cce4>
   5f89c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   5f8a0:	bl	50c68 <__assert_fail@plt+0x3e0b0>
   5f8a4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   5f8a8:	bl	59d2c <__assert_fail@plt+0x47174>
   5f8ac:	ldr	r0, [fp, #12]
   5f8b0:	movw	lr, #12
   5f8b4:	str	lr, [r0]
   5f8b8:	movw	r0, #0
   5f8bc:	str	r0, [fp, #-4]
   5f8c0:	ldr	r0, [fp, #-4]
   5f8c4:	mov	sp, fp
   5f8c8:	pop	{fp, pc}
   5f8cc:			; <UNDEFINED> instruction: 0xfffc00ff
   5f8d0:	push	{fp, lr}
   5f8d4:	mov	fp, sp
   5f8d8:	sub	sp, sp, #112	; 0x70
   5f8dc:	ldr	ip, [fp, #12]
   5f8e0:	ldr	lr, [fp, #8]
   5f8e4:	str	r0, [fp, #-8]
   5f8e8:	str	r1, [fp, #-12]
   5f8ec:	str	r2, [fp, #-16]
   5f8f0:	str	r3, [fp, #-20]	; 0xffffffec
   5f8f4:	movw	r0, #0
   5f8f8:	str	r0, [fp, #-24]	; 0xffffffe8
   5f8fc:	str	r0, [fp, #-28]	; 0xffffffe4
   5f900:	ldr	r0, [fp, #-12]
   5f904:	ldr	r0, [r0, #40]	; 0x28
   5f908:	str	r0, [fp, #-44]	; 0xffffffd4
   5f90c:	ldr	r0, [fp, #-20]	; 0xffffffec
   5f910:	ldr	r1, [r0]
   5f914:	str	r1, [fp, #-52]	; 0xffffffcc
   5f918:	ldr	r0, [r0, #4]
   5f91c:	str	r0, [fp, #-48]	; 0xffffffd0
   5f920:	ldr	r0, [fp, #-20]	; 0xffffffec
   5f924:	ldr	r0, [r0, #4]
   5f928:	and	r0, r0, #255	; 0xff
   5f92c:	cmp	r0, #23
   5f930:	str	lr, [sp, #52]	; 0x34
   5f934:	str	ip, [sp, #48]	; 0x30
   5f938:	bne	5fbbc <__assert_fail@plt+0x4d004>
   5f93c:	movw	r0, #0
   5f940:	str	r0, [fp, #-40]	; 0xffffffd8
   5f944:	ldr	r0, [fp, #-12]
   5f948:	ldr	r1, [fp, #-20]	; 0xffffffec
   5f94c:	ldr	r2, [fp, #8]
   5f950:	bl	61ba4 <__assert_fail@plt+0x4efec>
   5f954:	str	r0, [fp, #-36]	; 0xffffffdc
   5f958:	ldr	r0, [fp, #-36]	; 0xffffffdc
   5f95c:	cmn	r0, #1
   5f960:	bne	5f9b0 <__assert_fail@plt+0x4cdf8>
   5f964:	ldr	r0, [fp, #-20]	; 0xffffffec
   5f968:	ldr	r0, [r0, #4]
   5f96c:	and	r0, r0, #255	; 0xff
   5f970:	cmp	r0, #1
   5f974:	bne	5f994 <__assert_fail@plt+0x4cddc>
   5f978:	ldr	r0, [fp, #-20]	; 0xffffffec
   5f97c:	ldrb	r0, [r0]
   5f980:	cmp	r0, #44	; 0x2c
   5f984:	bne	5f994 <__assert_fail@plt+0x4cddc>
   5f988:	movw	r0, #0
   5f98c:	str	r0, [fp, #-36]	; 0xffffffdc
   5f990:	b	5f9ac <__assert_fail@plt+0x4cdf4>
   5f994:	ldr	r0, [fp, #12]
   5f998:	movw	r1, #10
   5f99c:	str	r1, [r0]
   5f9a0:	movw	r0, #0
   5f9a4:	str	r0, [fp, #-4]
   5f9a8:	b	5ff20 <__assert_fail@plt+0x4d368>
   5f9ac:	b	5f9b0 <__assert_fail@plt+0x4cdf8>
   5f9b0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   5f9b4:	cmn	r0, #2
   5f9b8:	beq	5fa34 <__assert_fail@plt+0x4ce7c>
   5f9bc:	ldr	r0, [fp, #-20]	; 0xffffffec
   5f9c0:	ldr	r0, [r0, #4]
   5f9c4:	and	r0, r0, #255	; 0xff
   5f9c8:	cmp	r0, #24
   5f9cc:	bne	5f9dc <__assert_fail@plt+0x4ce24>
   5f9d0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   5f9d4:	str	r0, [sp, #44]	; 0x2c
   5f9d8:	b	5fa2c <__assert_fail@plt+0x4ce74>
   5f9dc:	ldr	r0, [fp, #-20]	; 0xffffffec
   5f9e0:	ldr	r0, [r0, #4]
   5f9e4:	and	r0, r0, #255	; 0xff
   5f9e8:	cmp	r0, #1
   5f9ec:	bne	5fa18 <__assert_fail@plt+0x4ce60>
   5f9f0:	ldr	r0, [fp, #-20]	; 0xffffffec
   5f9f4:	ldrb	r0, [r0]
   5f9f8:	cmp	r0, #44	; 0x2c
   5f9fc:	bne	5fa18 <__assert_fail@plt+0x4ce60>
   5fa00:	ldr	r0, [fp, #-12]
   5fa04:	ldr	r1, [fp, #-20]	; 0xffffffec
   5fa08:	ldr	r2, [fp, #8]
   5fa0c:	bl	61ba4 <__assert_fail@plt+0x4efec>
   5fa10:	str	r0, [sp, #40]	; 0x28
   5fa14:	b	5fa24 <__assert_fail@plt+0x4ce6c>
   5fa18:	mvn	r0, #1
   5fa1c:	str	r0, [sp, #40]	; 0x28
   5fa20:	b	5fa24 <__assert_fail@plt+0x4ce6c>
   5fa24:	ldr	r0, [sp, #40]	; 0x28
   5fa28:	str	r0, [sp, #44]	; 0x2c
   5fa2c:	ldr	r0, [sp, #44]	; 0x2c
   5fa30:	str	r0, [fp, #-40]	; 0xffffffd8
   5fa34:	ldr	r0, [fp, #-36]	; 0xffffffdc
   5fa38:	cmn	r0, #2
   5fa3c:	movw	r0, #1
   5fa40:	str	r0, [sp, #36]	; 0x24
   5fa44:	beq	5fa5c <__assert_fail@plt+0x4cea4>
   5fa48:	ldr	r0, [fp, #-40]	; 0xffffffd8
   5fa4c:	cmn	r0, #2
   5fa50:	movw	r0, #0
   5fa54:	moveq	r0, #1
   5fa58:	str	r0, [sp, #36]	; 0x24
   5fa5c:	ldr	r0, [sp, #36]	; 0x24
   5fa60:	tst	r0, #1
   5fa64:	beq	5fb0c <__assert_fail@plt+0x4cf54>
   5fa68:	ldr	r0, [fp, #8]
   5fa6c:	and	r0, r0, #2097152	; 0x200000
   5fa70:	cmp	r0, #0
   5fa74:	movw	r0, #0
   5fa78:	movne	r0, #1
   5fa7c:	mvn	r1, #0
   5fa80:	eor	r0, r0, r1
   5fa84:	tst	r0, #1
   5fa88:	beq	5fac8 <__assert_fail@plt+0x4cf10>
   5fa8c:	ldr	r0, [fp, #-20]	; 0xffffffec
   5fa90:	ldr	r0, [r0, #4]
   5fa94:	and	r0, r0, #255	; 0xff
   5fa98:	cmp	r0, #2
   5fa9c:	bne	5fab0 <__assert_fail@plt+0x4cef8>
   5faa0:	ldr	r0, [fp, #12]
   5faa4:	movw	r1, #9
   5faa8:	str	r1, [r0]
   5faac:	b	5fabc <__assert_fail@plt+0x4cf04>
   5fab0:	ldr	r0, [fp, #12]
   5fab4:	movw	r1, #10
   5fab8:	str	r1, [r0]
   5fabc:	movw	r0, #0
   5fac0:	str	r0, [fp, #-4]
   5fac4:	b	5ff20 <__assert_fail@plt+0x4d368>
   5fac8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   5facc:	ldr	r1, [fp, #-12]
   5fad0:	str	r0, [r1, #40]	; 0x28
   5fad4:	ldr	r0, [fp, #-20]	; 0xffffffec
   5fad8:	ldr	r1, [fp, #-52]	; 0xffffffcc
   5fadc:	str	r1, [r0]
   5fae0:	ldr	r1, [fp, #-48]	; 0xffffffd0
   5fae4:	str	r1, [r0, #4]
   5fae8:	ldr	r0, [fp, #-20]	; 0xffffffec
   5faec:	ldr	r1, [r0, #4]
   5faf0:	mvn	r2, #255	; 0xff
   5faf4:	and	r1, r1, r2
   5faf8:	orr	r1, r1, #1
   5fafc:	str	r1, [r0, #4]
   5fb00:	ldr	r0, [fp, #-8]
   5fb04:	str	r0, [fp, #-4]
   5fb08:	b	5ff20 <__assert_fail@plt+0x4d368>
   5fb0c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   5fb10:	cmn	r0, #1
   5fb14:	beq	5fb30 <__assert_fail@plt+0x4cf78>
   5fb18:	ldr	r0, [fp, #-36]	; 0xffffffdc
   5fb1c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   5fb20:	cmp	r0, r1
   5fb24:	movw	r0, #1
   5fb28:	str	r0, [sp, #32]
   5fb2c:	bgt	5fb4c <__assert_fail@plt+0x4cf94>
   5fb30:	ldr	r0, [fp, #-20]	; 0xffffffec
   5fb34:	ldr	r0, [r0, #4]
   5fb38:	and	r0, r0, #255	; 0xff
   5fb3c:	cmp	r0, #24
   5fb40:	movw	r0, #0
   5fb44:	movne	r0, #1
   5fb48:	str	r0, [sp, #32]
   5fb4c:	ldr	r0, [sp, #32]
   5fb50:	tst	r0, #1
   5fb54:	beq	5fb70 <__assert_fail@plt+0x4cfb8>
   5fb58:	ldr	r0, [fp, #12]
   5fb5c:	movw	r1, #10
   5fb60:	str	r1, [r0]
   5fb64:	movw	r0, #0
   5fb68:	str	r0, [fp, #-4]
   5fb6c:	b	5ff20 <__assert_fail@plt+0x4d368>
   5fb70:	ldr	r0, [fp, #-40]	; 0xffffffd8
   5fb74:	cmn	r0, #1
   5fb78:	bne	5fb88 <__assert_fail@plt+0x4cfd0>
   5fb7c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   5fb80:	str	r0, [sp, #28]
   5fb84:	b	5fb90 <__assert_fail@plt+0x4cfd8>
   5fb88:	ldr	r0, [fp, #-40]	; 0xffffffd8
   5fb8c:	str	r0, [sp, #28]
   5fb90:	ldr	r0, [sp, #28]
   5fb94:	movw	r1, #32767	; 0x7fff
   5fb98:	cmp	r1, r0
   5fb9c:	bge	5fbb8 <__assert_fail@plt+0x4d000>
   5fba0:	ldr	r0, [fp, #12]
   5fba4:	movw	r1, #15
   5fba8:	str	r1, [r0]
   5fbac:	movw	r0, #0
   5fbb0:	str	r0, [fp, #-4]
   5fbb4:	b	5ff20 <__assert_fail@plt+0x4d368>
   5fbb8:	b	5fc0c <__assert_fail@plt+0x4d054>
   5fbbc:	ldr	r0, [fp, #-20]	; 0xffffffec
   5fbc0:	ldr	r0, [r0, #4]
   5fbc4:	and	r0, r0, #255	; 0xff
   5fbc8:	cmp	r0, #18
   5fbcc:	movw	r0, #0
   5fbd0:	moveq	r0, #1
   5fbd4:	tst	r0, #1
   5fbd8:	movw	r0, #1
   5fbdc:	mov	r1, r0
   5fbe0:	moveq	r1, #0
   5fbe4:	str	r1, [fp, #-36]	; 0xffffffdc
   5fbe8:	ldr	r1, [fp, #-20]	; 0xffffffec
   5fbec:	ldr	r1, [r1, #4]
   5fbf0:	and	r1, r1, #255	; 0xff
   5fbf4:	cmp	r1, #19
   5fbf8:	movw	r1, #0
   5fbfc:	moveq	r1, #1
   5fc00:	tst	r1, #1
   5fc04:	mvneq	r0, #0
   5fc08:	str	r0, [fp, #-40]	; 0xffffffd8
   5fc0c:	ldr	r0, [fp, #-20]	; 0xffffffec
   5fc10:	ldr	r1, [fp, #-12]
   5fc14:	ldr	r2, [fp, #8]
   5fc18:	bl	5c46c <__assert_fail@plt+0x498b4>
   5fc1c:	ldr	r0, [fp, #-8]
   5fc20:	movw	r1, #0
   5fc24:	cmp	r0, r1
   5fc28:	bne	5fc38 <__assert_fail@plt+0x4d080>
   5fc2c:	movw	r0, #0
   5fc30:	str	r0, [fp, #-4]
   5fc34:	b	5ff20 <__assert_fail@plt+0x4d368>
   5fc38:	ldr	r0, [fp, #-36]	; 0xffffffdc
   5fc3c:	cmp	r0, #0
   5fc40:	movw	r0, #0
   5fc44:	str	r0, [sp, #24]
   5fc48:	bne	5fc60 <__assert_fail@plt+0x4d0a8>
   5fc4c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   5fc50:	cmp	r0, #0
   5fc54:	movw	r0, #0
   5fc58:	moveq	r0, #1
   5fc5c:	str	r0, [sp, #24]
   5fc60:	ldr	r0, [sp, #24]
   5fc64:	tst	r0, #1
   5fc68:	beq	5fc90 <__assert_fail@plt+0x4d0d8>
   5fc6c:	ldr	r0, [fp, #-8]
   5fc70:	movw	r1, #56440	; 0xdc78
   5fc74:	movt	r1, #5
   5fc78:	movw	r2, #0
   5fc7c:	bl	5db08 <__assert_fail@plt+0x4af50>
   5fc80:	movw	r1, #0
   5fc84:	str	r1, [fp, #-4]
   5fc88:	str	r0, [sp, #20]
   5fc8c:	b	5ff20 <__assert_fail@plt+0x4d368>
   5fc90:	ldr	r0, [fp, #-36]	; 0xffffffdc
   5fc94:	cmp	r0, #0
   5fc98:	ble	5fd84 <__assert_fail@plt+0x4d1cc>
   5fc9c:	ldr	r0, [fp, #-8]
   5fca0:	str	r0, [fp, #-24]	; 0xffffffe8
   5fca4:	movw	r0, #2
   5fca8:	str	r0, [fp, #-32]	; 0xffffffe0
   5fcac:	ldr	r0, [fp, #-32]	; 0xffffffe0
   5fcb0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   5fcb4:	cmp	r0, r1
   5fcb8:	bgt	5fd38 <__assert_fail@plt+0x4d180>
   5fcbc:	ldr	r0, [fp, #-8]
   5fcc0:	ldr	r1, [fp, #-16]
   5fcc4:	bl	61d04 <__assert_fail@plt+0x4f14c>
   5fcc8:	str	r0, [fp, #-8]
   5fccc:	ldr	r0, [fp, #-16]
   5fcd0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   5fcd4:	ldr	r2, [fp, #-8]
   5fcd8:	movw	r3, #16
   5fcdc:	bl	5c704 <__assert_fail@plt+0x49b4c>
   5fce0:	str	r0, [fp, #-24]	; 0xffffffe8
   5fce4:	ldr	r0, [fp, #-8]
   5fce8:	movw	r1, #0
   5fcec:	cmp	r0, r1
   5fcf0:	movw	r0, #1
   5fcf4:	str	r0, [sp, #16]
   5fcf8:	beq	5fd14 <__assert_fail@plt+0x4d15c>
   5fcfc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   5fd00:	movw	r1, #0
   5fd04:	cmp	r0, r1
   5fd08:	movw	r0, #0
   5fd0c:	moveq	r0, #1
   5fd10:	str	r0, [sp, #16]
   5fd14:	ldr	r0, [sp, #16]
   5fd18:	tst	r0, #1
   5fd1c:	beq	5fd24 <__assert_fail@plt+0x4d16c>
   5fd20:	b	5ff0c <__assert_fail@plt+0x4d354>
   5fd24:	b	5fd28 <__assert_fail@plt+0x4d170>
   5fd28:	ldr	r0, [fp, #-32]	; 0xffffffe0
   5fd2c:	add	r0, r0, #1
   5fd30:	str	r0, [fp, #-32]	; 0xffffffe0
   5fd34:	b	5fcac <__assert_fail@plt+0x4d0f4>
   5fd38:	ldr	r0, [fp, #-36]	; 0xffffffdc
   5fd3c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   5fd40:	cmp	r0, r1
   5fd44:	bne	5fd54 <__assert_fail@plt+0x4d19c>
   5fd48:	ldr	r0, [fp, #-24]	; 0xffffffe8
   5fd4c:	str	r0, [fp, #-4]
   5fd50:	b	5ff20 <__assert_fail@plt+0x4d368>
   5fd54:	ldr	r0, [fp, #-8]
   5fd58:	ldr	r1, [fp, #-16]
   5fd5c:	bl	61d04 <__assert_fail@plt+0x4f14c>
   5fd60:	str	r0, [fp, #-8]
   5fd64:	ldr	r0, [fp, #-8]
   5fd68:	movw	r1, #0
   5fd6c:	cmp	r0, r1
   5fd70:	bne	5fd78 <__assert_fail@plt+0x4d1c0>
   5fd74:	b	5ff0c <__assert_fail@plt+0x4d354>
   5fd78:	ldr	r0, [fp, #-24]	; 0xffffffe8
   5fd7c:	str	r0, [fp, #-28]	; 0xffffffe4
   5fd80:	b	5fd8c <__assert_fail@plt+0x4d1d4>
   5fd84:	movw	r0, #0
   5fd88:	str	r0, [fp, #-28]	; 0xffffffe4
   5fd8c:	ldr	r0, [fp, #-8]
   5fd90:	ldr	r0, [r0, #24]
   5fd94:	and	r0, r0, #255	; 0xff
   5fd98:	cmp	r0, #17
   5fd9c:	bne	5fdc4 <__assert_fail@plt+0x4d20c>
   5fda0:	ldr	r0, [fp, #-8]
   5fda4:	ldr	r0, [r0, #20]
   5fda8:	str	r0, [sp, #56]	; 0x38
   5fdac:	ldr	r0, [fp, #-8]
   5fdb0:	ldr	r2, [sp, #56]	; 0x38
   5fdb4:	movw	r1, #7828	; 0x1e94
   5fdb8:	movt	r1, #6
   5fdbc:	bl	5db08 <__assert_fail@plt+0x4af50>
   5fdc0:	str	r0, [sp, #12]
   5fdc4:	ldr	r0, [fp, #-16]
   5fdc8:	ldr	r1, [fp, #-8]
   5fdcc:	ldr	r2, [fp, #-40]	; 0xffffffd8
   5fdd0:	cmn	r2, #1
   5fdd4:	movw	r2, #0
   5fdd8:	moveq	r2, #1
   5fddc:	tst	r2, #1
   5fde0:	movw	r2, #11
   5fde4:	moveq	r2, #10
   5fde8:	movw	r3, #0
   5fdec:	str	r2, [sp, #8]
   5fdf0:	mov	r2, r3
   5fdf4:	ldr	r3, [sp, #8]
   5fdf8:	bl	5c704 <__assert_fail@plt+0x49b4c>
   5fdfc:	str	r0, [fp, #-24]	; 0xffffffe8
   5fe00:	ldr	r0, [fp, #-24]	; 0xffffffe8
   5fe04:	movw	r1, #0
   5fe08:	cmp	r0, r1
   5fe0c:	bne	5fe14 <__assert_fail@plt+0x4d25c>
   5fe10:	b	5ff0c <__assert_fail@plt+0x4d354>
   5fe14:	ldr	r0, [fp, #-36]	; 0xffffffdc
   5fe18:	add	r0, r0, #2
   5fe1c:	str	r0, [fp, #-32]	; 0xffffffe0
   5fe20:	ldr	r0, [fp, #-32]	; 0xffffffe0
   5fe24:	ldr	r1, [fp, #-40]	; 0xffffffd8
   5fe28:	cmp	r0, r1
   5fe2c:	bgt	5fed8 <__assert_fail@plt+0x4d320>
   5fe30:	ldr	r0, [fp, #-8]
   5fe34:	ldr	r1, [fp, #-16]
   5fe38:	bl	61d04 <__assert_fail@plt+0x4f14c>
   5fe3c:	str	r0, [fp, #-8]
   5fe40:	ldr	r0, [fp, #-16]
   5fe44:	ldr	r1, [fp, #-24]	; 0xffffffe8
   5fe48:	ldr	r2, [fp, #-8]
   5fe4c:	movw	r3, #16
   5fe50:	bl	5c704 <__assert_fail@plt+0x49b4c>
   5fe54:	str	r0, [fp, #-24]	; 0xffffffe8
   5fe58:	ldr	r0, [fp, #-8]
   5fe5c:	movw	r1, #0
   5fe60:	cmp	r0, r1
   5fe64:	movw	r0, #1
   5fe68:	str	r0, [sp, #4]
   5fe6c:	beq	5fe88 <__assert_fail@plt+0x4d2d0>
   5fe70:	ldr	r0, [fp, #-24]	; 0xffffffe8
   5fe74:	movw	r1, #0
   5fe78:	cmp	r0, r1
   5fe7c:	movw	r0, #0
   5fe80:	moveq	r0, #1
   5fe84:	str	r0, [sp, #4]
   5fe88:	ldr	r0, [sp, #4]
   5fe8c:	tst	r0, #1
   5fe90:	beq	5fe98 <__assert_fail@plt+0x4d2e0>
   5fe94:	b	5ff0c <__assert_fail@plt+0x4d354>
   5fe98:	ldr	r0, [fp, #-16]
   5fe9c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   5fea0:	movw	r2, #0
   5fea4:	movw	r3, #10
   5fea8:	bl	5c704 <__assert_fail@plt+0x49b4c>
   5feac:	str	r0, [fp, #-24]	; 0xffffffe8
   5feb0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   5feb4:	movw	r1, #0
   5feb8:	cmp	r0, r1
   5febc:	bne	5fec4 <__assert_fail@plt+0x4d30c>
   5fec0:	b	5ff0c <__assert_fail@plt+0x4d354>
   5fec4:	b	5fec8 <__assert_fail@plt+0x4d310>
   5fec8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   5fecc:	add	r0, r0, #1
   5fed0:	str	r0, [fp, #-32]	; 0xffffffe0
   5fed4:	b	5fe20 <__assert_fail@plt+0x4d268>
   5fed8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   5fedc:	movw	r1, #0
   5fee0:	cmp	r0, r1
   5fee4:	beq	5ff00 <__assert_fail@plt+0x4d348>
   5fee8:	ldr	r0, [fp, #-16]
   5feec:	ldr	r1, [fp, #-28]	; 0xffffffe4
   5fef0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   5fef4:	movw	r3, #16
   5fef8:	bl	5c704 <__assert_fail@plt+0x49b4c>
   5fefc:	str	r0, [fp, #-24]	; 0xffffffe8
   5ff00:	ldr	r0, [fp, #-24]	; 0xffffffe8
   5ff04:	str	r0, [fp, #-4]
   5ff08:	b	5ff20 <__assert_fail@plt+0x4d368>
   5ff0c:	ldr	r0, [fp, #12]
   5ff10:	movw	r1, #12
   5ff14:	str	r1, [r0]
   5ff18:	movw	r0, #0
   5ff1c:	str	r0, [fp, #-4]
   5ff20:	ldr	r0, [fp, #-4]
   5ff24:	mov	sp, fp
   5ff28:	pop	{fp, pc}
   5ff2c:	sub	sp, sp, #32
   5ff30:	str	r0, [sp, #24]
   5ff34:	str	r1, [sp, #20]
   5ff38:	str	r2, [sp, #16]
   5ff3c:	ldr	r0, [sp, #20]
   5ff40:	ldr	r0, [r0, #56]	; 0x38
   5ff44:	ldr	r1, [sp, #20]
   5ff48:	ldr	r1, [r1, #40]	; 0x28
   5ff4c:	cmp	r0, r1
   5ff50:	bgt	5ff78 <__assert_fail@plt+0x4d3c0>
   5ff54:	ldr	r0, [sp, #24]
   5ff58:	ldr	r1, [r0, #4]
   5ff5c:	mvn	r2, #255	; 0xff
   5ff60:	and	r1, r1, r2
   5ff64:	orr	r1, r1, #2
   5ff68:	str	r1, [r0, #4]
   5ff6c:	movw	r0, #0
   5ff70:	str	r0, [sp, #28]
   5ff74:	b	60290 <__assert_fail@plt+0x4d6d8>
   5ff78:	ldr	r0, [sp, #20]
   5ff7c:	ldr	r0, [r0, #4]
   5ff80:	ldr	r1, [sp, #20]
   5ff84:	ldr	r1, [r1, #40]	; 0x28
   5ff88:	add	r1, r1, #0
   5ff8c:	add	r0, r0, r1
   5ff90:	ldrb	r0, [r0]
   5ff94:	strb	r0, [sp, #15]
   5ff98:	ldrb	r0, [sp, #15]
   5ff9c:	ldr	r1, [sp, #24]
   5ffa0:	strb	r0, [r1]
   5ffa4:	ldr	r0, [sp, #20]
   5ffa8:	ldr	r0, [r0, #80]	; 0x50
   5ffac:	cmp	r0, #1
   5ffb0:	ble	6000c <__assert_fail@plt+0x4d454>
   5ffb4:	ldr	r0, [sp, #20]
   5ffb8:	ldr	r0, [r0, #40]	; 0x28
   5ffbc:	ldr	r1, [sp, #20]
   5ffc0:	ldr	r1, [r1, #28]
   5ffc4:	cmp	r0, r1
   5ffc8:	beq	6000c <__assert_fail@plt+0x4d454>
   5ffcc:	ldr	r0, [sp, #20]
   5ffd0:	ldr	r1, [r0, #8]
   5ffd4:	ldr	r0, [r0, #40]	; 0x28
   5ffd8:	add	r0, r1, r0, lsl #2
   5ffdc:	ldr	r0, [r0]
   5ffe0:	cmn	r0, #1
   5ffe4:	bne	6000c <__assert_fail@plt+0x4d454>
   5ffe8:	ldr	r0, [sp, #24]
   5ffec:	ldr	r1, [r0, #4]
   5fff0:	mvn	r2, #255	; 0xff
   5fff4:	and	r1, r1, r2
   5fff8:	orr	r1, r1, #1
   5fffc:	str	r1, [r0, #4]
   60000:	movw	r0, #1
   60004:	str	r0, [sp, #28]
   60008:	b	60290 <__assert_fail@plt+0x4d6d8>
   6000c:	ldrb	r0, [sp, #15]
   60010:	cmp	r0, #92	; 0x5c
   60014:	bne	600a4 <__assert_fail@plt+0x4d4ec>
   60018:	ldr	r0, [sp, #16]
   6001c:	and	r0, r0, #1
   60020:	cmp	r0, #0
   60024:	beq	600a4 <__assert_fail@plt+0x4d4ec>
   60028:	ldr	r0, [sp, #20]
   6002c:	ldr	r0, [r0, #40]	; 0x28
   60030:	add	r0, r0, #1
   60034:	ldr	r1, [sp, #20]
   60038:	ldr	r1, [r1, #48]	; 0x30
   6003c:	cmp	r0, r1
   60040:	bge	600a4 <__assert_fail@plt+0x4d4ec>
   60044:	ldr	r0, [sp, #20]
   60048:	ldr	r1, [r0, #40]	; 0x28
   6004c:	add	r1, r1, #1
   60050:	str	r1, [r0, #40]	; 0x28
   60054:	ldr	r0, [sp, #20]
   60058:	ldr	r0, [r0, #4]
   6005c:	ldr	r1, [sp, #20]
   60060:	ldr	r1, [r1, #40]	; 0x28
   60064:	add	r1, r1, #0
   60068:	add	r0, r0, r1
   6006c:	ldrb	r0, [r0]
   60070:	strb	r0, [sp, #14]
   60074:	ldrb	r0, [sp, #14]
   60078:	ldr	r1, [sp, #24]
   6007c:	strb	r0, [r1]
   60080:	ldr	r0, [sp, #24]
   60084:	ldr	r1, [r0, #4]
   60088:	mvn	r2, #255	; 0xff
   6008c:	and	r1, r1, r2
   60090:	orr	r1, r1, #1
   60094:	str	r1, [r0, #4]
   60098:	movw	r0, #1
   6009c:	str	r0, [sp, #28]
   600a0:	b	60290 <__assert_fail@plt+0x4d6d8>
   600a4:	ldrb	r0, [sp, #15]
   600a8:	cmp	r0, #91	; 0x5b
   600ac:	bne	601e4 <__assert_fail@plt+0x4d62c>
   600b0:	ldr	r0, [sp, #20]
   600b4:	ldr	r0, [r0, #40]	; 0x28
   600b8:	add	r0, r0, #1
   600bc:	ldr	r1, [sp, #20]
   600c0:	ldr	r1, [r1, #48]	; 0x30
   600c4:	cmp	r0, r1
   600c8:	bge	600f0 <__assert_fail@plt+0x4d538>
   600cc:	ldr	r0, [sp, #20]
   600d0:	ldr	r0, [r0, #4]
   600d4:	ldr	r1, [sp, #20]
   600d8:	ldr	r1, [r1, #40]	; 0x28
   600dc:	add	r1, r1, #1
   600e0:	add	r0, r0, r1
   600e4:	ldrb	r0, [r0]
   600e8:	strb	r0, [sp, #13]
   600ec:	b	600f8 <__assert_fail@plt+0x4d540>
   600f0:	movw	r0, #0
   600f4:	strb	r0, [sp, #13]
   600f8:	ldrb	r0, [sp, #13]
   600fc:	ldr	r1, [sp, #24]
   60100:	strb	r0, [r1]
   60104:	mov	r0, #2
   60108:	str	r0, [sp, #8]
   6010c:	ldrb	r0, [sp, #13]
   60110:	mov	r1, r0
   60114:	cmp	r0, #46	; 0x2e
   60118:	str	r1, [sp, #4]
   6011c:	beq	60144 <__assert_fail@plt+0x4d58c>
   60120:	b	60124 <__assert_fail@plt+0x4d56c>
   60124:	ldr	r0, [sp, #4]
   60128:	cmp	r0, #58	; 0x3a
   6012c:	beq	6017c <__assert_fail@plt+0x4d5c4>
   60130:	b	60134 <__assert_fail@plt+0x4d57c>
   60134:	ldr	r0, [sp, #4]
   60138:	cmp	r0, #61	; 0x3d
   6013c:	beq	60160 <__assert_fail@plt+0x4d5a8>
   60140:	b	601ac <__assert_fail@plt+0x4d5f4>
   60144:	ldr	r0, [sp, #24]
   60148:	ldr	r1, [r0, #4]
   6014c:	mvn	r2, #255	; 0xff
   60150:	and	r1, r1, r2
   60154:	orr	r1, r1, #26
   60158:	str	r1, [r0, #4]
   6015c:	b	601d8 <__assert_fail@plt+0x4d620>
   60160:	ldr	r0, [sp, #24]
   60164:	ldr	r1, [r0, #4]
   60168:	mvn	r2, #255	; 0xff
   6016c:	and	r1, r1, r2
   60170:	orr	r1, r1, #28
   60174:	str	r1, [r0, #4]
   60178:	b	601d8 <__assert_fail@plt+0x4d620>
   6017c:	ldr	r0, [sp, #16]
   60180:	and	r0, r0, #4
   60184:	cmp	r0, #0
   60188:	beq	601a8 <__assert_fail@plt+0x4d5f0>
   6018c:	ldr	r0, [sp, #24]
   60190:	ldr	r1, [r0, #4]
   60194:	mvn	r2, #255	; 0xff
   60198:	and	r1, r1, r2
   6019c:	orr	r1, r1, #30
   601a0:	str	r1, [r0, #4]
   601a4:	b	601d8 <__assert_fail@plt+0x4d620>
   601a8:	b	601ac <__assert_fail@plt+0x4d5f4>
   601ac:	ldr	r0, [sp, #24]
   601b0:	ldr	r1, [r0, #4]
   601b4:	mvn	r2, #255	; 0xff
   601b8:	and	r1, r1, r2
   601bc:	orr	r1, r1, #1
   601c0:	str	r1, [r0, #4]
   601c4:	ldrb	r0, [sp, #15]
   601c8:	ldr	r1, [sp, #24]
   601cc:	strb	r0, [r1]
   601d0:	movw	r0, #1
   601d4:	str	r0, [sp, #8]
   601d8:	ldr	r0, [sp, #8]
   601dc:	str	r0, [sp, #28]
   601e0:	b	60290 <__assert_fail@plt+0x4d6d8>
   601e4:	ldrb	r0, [sp, #15]
   601e8:	mov	r1, r0
   601ec:	cmp	r0, #45	; 0x2d
   601f0:	str	r1, [sp]
   601f4:	beq	6021c <__assert_fail@plt+0x4d664>
   601f8:	b	601fc <__assert_fail@plt+0x4d644>
   601fc:	ldr	r0, [sp]
   60200:	cmp	r0, #93	; 0x5d
   60204:	beq	60238 <__assert_fail@plt+0x4d680>
   60208:	b	6020c <__assert_fail@plt+0x4d654>
   6020c:	ldr	r0, [sp]
   60210:	cmp	r0, #94	; 0x5e
   60214:	beq	60254 <__assert_fail@plt+0x4d69c>
   60218:	b	60270 <__assert_fail@plt+0x4d6b8>
   6021c:	ldr	r0, [sp, #24]
   60220:	ldr	r1, [r0, #4]
   60224:	mvn	r2, #255	; 0xff
   60228:	and	r1, r1, r2
   6022c:	orr	r1, r1, #22
   60230:	str	r1, [r0, #4]
   60234:	b	60288 <__assert_fail@plt+0x4d6d0>
   60238:	ldr	r0, [sp, #24]
   6023c:	ldr	r1, [r0, #4]
   60240:	mvn	r2, #255	; 0xff
   60244:	and	r1, r1, r2
   60248:	orr	r1, r1, #21
   6024c:	str	r1, [r0, #4]
   60250:	b	60288 <__assert_fail@plt+0x4d6d0>
   60254:	ldr	r0, [sp, #24]
   60258:	ldr	r1, [r0, #4]
   6025c:	mvn	r2, #255	; 0xff
   60260:	and	r1, r1, r2
   60264:	orr	r1, r1, #25
   60268:	str	r1, [r0, #4]
   6026c:	b	60288 <__assert_fail@plt+0x4d6d0>
   60270:	ldr	r0, [sp, #24]
   60274:	ldr	r1, [r0, #4]
   60278:	mvn	r2, #255	; 0xff
   6027c:	and	r1, r1, r2
   60280:	orr	r1, r1, #1
   60284:	str	r1, [r0, #4]
   60288:	movw	r0, #1
   6028c:	str	r0, [sp, #28]
   60290:	ldr	r0, [sp, #28]
   60294:	add	sp, sp, #32
   60298:	bx	lr
   6029c:	sub	sp, sp, #8
   602a0:	str	r0, [sp, #4]
   602a4:	str	r1, [sp]
   602a8:	ldr	r0, [sp]
   602ac:	asr	r1, r0, #31
   602b0:	add	r1, r0, r1, lsr #27
   602b4:	bic	r2, r1, #31
   602b8:	sub	r0, r0, r2
   602bc:	mov	r2, #1
   602c0:	lsl	r0, r2, r0
   602c4:	ldr	r2, [sp, #4]
   602c8:	asr	r1, r1, #5
   602cc:	add	r1, r2, r1, lsl #2
   602d0:	ldr	r2, [r1]
   602d4:	orr	r0, r2, r0
   602d8:	str	r0, [r1]
   602dc:	add	sp, sp, #8
   602e0:	bx	lr
   602e4:	push	{r4, sl, fp, lr}
   602e8:	add	fp, sp, #8
   602ec:	sub	sp, sp, #48	; 0x30
   602f0:	ldr	ip, [fp, #16]
   602f4:	ldr	lr, [fp, #12]
   602f8:	ldr	r4, [fp, #8]
   602fc:	str	r0, [fp, #-16]
   60300:	str	r1, [fp, #-20]	; 0xffffffec
   60304:	str	r2, [fp, #-24]	; 0xffffffe8
   60308:	str	r3, [sp, #28]
   6030c:	and	r0, ip, #1
   60310:	strb	r0, [sp, #27]
   60314:	ldr	r0, [fp, #-20]	; 0xffffffec
   60318:	ldr	r1, [fp, #-20]	; 0xffffffec
   6031c:	ldr	r1, [r1, #40]	; 0x28
   60320:	str	r4, [sp, #8]
   60324:	str	lr, [sp, #4]
   60328:	bl	61738 <__assert_fail@plt+0x4eb80>
   6032c:	str	r0, [sp, #20]
   60330:	ldr	r0, [sp, #20]
   60334:	cmp	r0, #1
   60338:	ble	60380 <__assert_fail@plt+0x4d7c8>
   6033c:	ldr	r0, [fp, #-16]
   60340:	movw	r1, #1
   60344:	str	r1, [r0]
   60348:	ldr	r0, [fp, #-20]	; 0xffffffec
   6034c:	ldr	r1, [fp, #-20]	; 0xffffffec
   60350:	ldr	r1, [r1, #40]	; 0x28
   60354:	bl	5d818 <__assert_fail@plt+0x4ac60>
   60358:	ldr	r1, [fp, #-16]
   6035c:	str	r0, [r1, #4]
   60360:	ldr	r0, [sp, #20]
   60364:	ldr	r1, [fp, #-20]	; 0xffffffec
   60368:	ldr	lr, [r1, #40]	; 0x28
   6036c:	add	r0, lr, r0
   60370:	str	r0, [r1, #40]	; 0x28
   60374:	movw	r0, #0
   60378:	str	r0, [fp, #-12]
   6037c:	b	6045c <__assert_fail@plt+0x4d8a4>
   60380:	ldr	r0, [sp, #28]
   60384:	ldr	r1, [fp, #-20]	; 0xffffffec
   60388:	ldr	r2, [r1, #40]	; 0x28
   6038c:	add	r0, r2, r0
   60390:	str	r0, [r1, #40]	; 0x28
   60394:	ldr	r0, [fp, #-24]	; 0xffffffe8
   60398:	ldr	r0, [r0, #4]
   6039c:	and	r0, r0, #255	; 0xff
   603a0:	cmp	r0, #26
   603a4:	beq	603d0 <__assert_fail@plt+0x4d818>
   603a8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   603ac:	ldr	r0, [r0, #4]
   603b0:	and	r0, r0, #255	; 0xff
   603b4:	cmp	r0, #30
   603b8:	beq	603d0 <__assert_fail@plt+0x4d818>
   603bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   603c0:	ldr	r0, [r0, #4]
   603c4:	and	r0, r0, #255	; 0xff
   603c8:	cmp	r0, #28
   603cc:	bne	603e8 <__assert_fail@plt+0x4d830>
   603d0:	ldr	r0, [fp, #-16]
   603d4:	ldr	r1, [fp, #-20]	; 0xffffffec
   603d8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   603dc:	bl	617d4 <__assert_fail@plt+0x4ec1c>
   603e0:	str	r0, [fp, #-12]
   603e4:	b	6045c <__assert_fail@plt+0x4d8a4>
   603e8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   603ec:	ldr	r0, [r0, #4]
   603f0:	and	r0, r0, #255	; 0xff
   603f4:	cmp	r0, #22
   603f8:	bne	6043c <__assert_fail@plt+0x4d884>
   603fc:	ldrb	r0, [sp, #27]
   60400:	tst	r0, #1
   60404:	bne	6043c <__assert_fail@plt+0x4d884>
   60408:	ldr	r1, [fp, #-20]	; 0xffffffec
   6040c:	ldr	r2, [fp, #12]
   60410:	add	r0, sp, #12
   60414:	bl	5ff2c <__assert_fail@plt+0x4d374>
   60418:	ldr	r1, [sp, #16]
   6041c:	and	r1, r1, #255	; 0xff
   60420:	cmp	r1, #21
   60424:	str	r0, [sp]
   60428:	beq	60438 <__assert_fail@plt+0x4d880>
   6042c:	movw	r0, #11
   60430:	str	r0, [fp, #-12]
   60434:	b	6045c <__assert_fail@plt+0x4d8a4>
   60438:	b	6043c <__assert_fail@plt+0x4d884>
   6043c:	ldr	r0, [fp, #-16]
   60440:	movw	r1, #0
   60444:	str	r1, [r0]
   60448:	ldr	r0, [fp, #-24]	; 0xffffffe8
   6044c:	ldrb	r0, [r0]
   60450:	ldr	r2, [fp, #-16]
   60454:	strb	r0, [r2, #4]
   60458:	str	r1, [fp, #-12]
   6045c:	ldr	r0, [fp, #-12]
   60460:	sub	sp, fp, #8
   60464:	pop	{r4, sl, fp, pc}
   60468:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   6046c:	add	fp, sp, #28
   60470:	sub	sp, sp, #132	; 0x84
   60474:	ldr	ip, [fp, #40]	; 0x28
   60478:	ldr	lr, [fp, #36]	; 0x24
   6047c:	ldr	r4, [fp, #32]
   60480:	ldr	r5, [fp, #28]
   60484:	ldr	r6, [fp, #24]
   60488:	ldr	r7, [fp, #20]
   6048c:	ldr	r8, [fp, #16]
   60490:	ldr	r9, [fp, #12]
   60494:	ldr	sl, [fp, #8]
   60498:	str	r0, [fp, #-36]	; 0xffffffdc
   6049c:	str	r1, [fp, #-40]	; 0xffffffd8
   604a0:	str	r2, [fp, #-44]	; 0xffffffd4
   604a4:	str	r3, [fp, #-48]	; 0xffffffd0
   604a8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   604ac:	ldr	r0, [r0]
   604b0:	cmp	r0, #2
   604b4:	movw	r0, #1
   604b8:	str	sl, [sp, #76]	; 0x4c
   604bc:	str	r7, [sp, #72]	; 0x48
   604c0:	str	r8, [sp, #68]	; 0x44
   604c4:	str	r9, [sp, #64]	; 0x40
   604c8:	str	ip, [sp, #60]	; 0x3c
   604cc:	str	lr, [sp, #56]	; 0x38
   604d0:	str	r4, [sp, #52]	; 0x34
   604d4:	str	r5, [sp, #48]	; 0x30
   604d8:	str	r6, [sp, #44]	; 0x2c
   604dc:	str	r0, [sp, #40]	; 0x28
   604e0:	beq	6052c <__assert_fail@plt+0x4d974>
   604e4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   604e8:	ldr	r0, [r0]
   604ec:	cmp	r0, #4
   604f0:	movw	r0, #1
   604f4:	str	r0, [sp, #40]	; 0x28
   604f8:	beq	6052c <__assert_fail@plt+0x4d974>
   604fc:	ldr	r0, [fp, #8]
   60500:	ldr	r0, [r0]
   60504:	cmp	r0, #2
   60508:	movw	r0, #1
   6050c:	str	r0, [sp, #40]	; 0x28
   60510:	beq	6052c <__assert_fail@plt+0x4d974>
   60514:	ldr	r0, [fp, #8]
   60518:	ldr	r0, [r0]
   6051c:	cmp	r0, #4
   60520:	movw	r0, #0
   60524:	moveq	r0, #1
   60528:	str	r0, [sp, #40]	; 0x28
   6052c:	ldr	r0, [sp, #40]	; 0x28
   60530:	tst	r0, #1
   60534:	beq	60544 <__assert_fail@plt+0x4d98c>
   60538:	movw	r0, #11
   6053c:	str	r0, [fp, #-32]	; 0xffffffe0
   60540:	b	60904 <__assert_fail@plt+0x4dd4c>
   60544:	ldr	r0, [fp, #-48]	; 0xffffffd0
   60548:	ldr	r0, [r0]
   6054c:	cmp	r0, #3
   60550:	bne	60570 <__assert_fail@plt+0x4d9b8>
   60554:	ldr	r0, [fp, #-48]	; 0xffffffd0
   60558:	ldr	r0, [r0, #4]
   6055c:	bl	12888 <strlen@plt>
   60560:	cmp	r0, #1
   60564:	movw	r0, #1
   60568:	str	r0, [sp, #36]	; 0x24
   6056c:	bhi	605ac <__assert_fail@plt+0x4d9f4>
   60570:	ldr	r0, [fp, #8]
   60574:	ldr	r0, [r0]
   60578:	cmp	r0, #3
   6057c:	movw	r0, #0
   60580:	str	r0, [sp, #32]
   60584:	bne	605a4 <__assert_fail@plt+0x4d9ec>
   60588:	ldr	r0, [fp, #8]
   6058c:	ldr	r0, [r0, #4]
   60590:	bl	12888 <strlen@plt>
   60594:	cmp	r0, #1
   60598:	movw	r0, #0
   6059c:	movhi	r0, #1
   605a0:	str	r0, [sp, #32]
   605a4:	ldr	r0, [sp, #32]
   605a8:	str	r0, [sp, #36]	; 0x24
   605ac:	ldr	r0, [sp, #36]	; 0x24
   605b0:	tst	r0, #1
   605b4:	beq	605c4 <__assert_fail@plt+0x4da0c>
   605b8:	movw	r0, #3
   605bc:	str	r0, [fp, #-32]	; 0xffffffe0
   605c0:	b	60904 <__assert_fail@plt+0x4dd4c>
   605c4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   605c8:	ldr	r0, [r0]
   605cc:	cmp	r0, #0
   605d0:	bne	605e4 <__assert_fail@plt+0x4da2c>
   605d4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   605d8:	ldrb	r0, [r0, #4]
   605dc:	str	r0, [sp, #28]
   605e0:	b	6061c <__assert_fail@plt+0x4da64>
   605e4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   605e8:	ldr	r0, [r0]
   605ec:	cmp	r0, #3
   605f0:	bne	60608 <__assert_fail@plt+0x4da50>
   605f4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   605f8:	ldr	r0, [r0, #4]
   605fc:	ldrb	r0, [r0]
   60600:	str	r0, [sp, #24]
   60604:	b	60614 <__assert_fail@plt+0x4da5c>
   60608:	movw	r0, #0
   6060c:	str	r0, [sp, #24]
   60610:	b	60614 <__assert_fail@plt+0x4da5c>
   60614:	ldr	r0, [sp, #24]
   60618:	str	r0, [sp, #28]
   6061c:	ldr	r0, [sp, #28]
   60620:	str	r0, [fp, #-52]	; 0xffffffcc
   60624:	ldr	r0, [fp, #8]
   60628:	ldr	r0, [r0]
   6062c:	cmp	r0, #0
   60630:	bne	60644 <__assert_fail@plt+0x4da8c>
   60634:	ldr	r0, [fp, #8]
   60638:	ldrb	r0, [r0, #4]
   6063c:	str	r0, [sp, #20]
   60640:	b	6067c <__assert_fail@plt+0x4dac4>
   60644:	ldr	r0, [fp, #8]
   60648:	ldr	r0, [r0]
   6064c:	cmp	r0, #3
   60650:	bne	60668 <__assert_fail@plt+0x4dab0>
   60654:	ldr	r0, [fp, #8]
   60658:	ldr	r0, [r0, #4]
   6065c:	ldrb	r0, [r0]
   60660:	str	r0, [sp, #16]
   60664:	b	60674 <__assert_fail@plt+0x4dabc>
   60668:	movw	r0, #0
   6066c:	str	r0, [sp, #16]
   60670:	b	60674 <__assert_fail@plt+0x4dabc>
   60674:	ldr	r0, [sp, #16]
   60678:	str	r0, [sp, #20]
   6067c:	ldr	r0, [sp, #20]
   60680:	str	r0, [fp, #-56]	; 0xffffffc8
   60684:	ldr	r0, [fp, #-48]	; 0xffffffd0
   60688:	ldr	r0, [r0]
   6068c:	cmp	r0, #0
   60690:	beq	606a4 <__assert_fail@plt+0x4daec>
   60694:	ldr	r0, [fp, #-48]	; 0xffffffd0
   60698:	ldr	r0, [r0]
   6069c:	cmp	r0, #3
   606a0:	bne	606bc <__assert_fail@plt+0x4db04>
   606a4:	ldr	r0, [fp, #-52]	; 0xffffffcc
   606a8:	ldr	r1, [fp, #12]
   606ac:	and	r0, r0, #255	; 0xff
   606b0:	bl	61b5c <__assert_fail@plt+0x4efa4>
   606b4:	str	r0, [sp, #12]
   606b8:	b	606c8 <__assert_fail@plt+0x4db10>
   606bc:	ldr	r0, [fp, #-48]	; 0xffffffd0
   606c0:	ldr	r0, [r0, #4]
   606c4:	str	r0, [sp, #12]
   606c8:	ldr	r0, [sp, #12]
   606cc:	str	r0, [fp, #-60]	; 0xffffffc4
   606d0:	ldr	r0, [fp, #8]
   606d4:	ldr	r0, [r0]
   606d8:	cmp	r0, #0
   606dc:	beq	606f0 <__assert_fail@plt+0x4db38>
   606e0:	ldr	r0, [fp, #8]
   606e4:	ldr	r0, [r0]
   606e8:	cmp	r0, #3
   606ec:	bne	60708 <__assert_fail@plt+0x4db50>
   606f0:	ldr	r0, [fp, #-56]	; 0xffffffc8
   606f4:	ldr	r1, [fp, #12]
   606f8:	and	r0, r0, #255	; 0xff
   606fc:	bl	61b5c <__assert_fail@plt+0x4efa4>
   60700:	str	r0, [sp, #8]
   60704:	b	60714 <__assert_fail@plt+0x4db5c>
   60708:	ldr	r0, [fp, #8]
   6070c:	ldr	r0, [r0, #4]
   60710:	str	r0, [sp, #8]
   60714:	ldr	r0, [sp, #8]
   60718:	str	r0, [fp, #-64]	; 0xffffffc0
   6071c:	ldr	r0, [fp, #-60]	; 0xffffffc4
   60720:	cmn	r0, #1
   60724:	beq	60734 <__assert_fail@plt+0x4db7c>
   60728:	ldr	r0, [fp, #-64]	; 0xffffffc0
   6072c:	cmn	r0, #1
   60730:	bne	60740 <__assert_fail@plt+0x4db88>
   60734:	movw	r0, #3
   60738:	str	r0, [fp, #-32]	; 0xffffffe0
   6073c:	b	60904 <__assert_fail@plt+0x4dd4c>
   60740:	ldr	r0, [fp, #16]
   60744:	and	r0, r0, #65536	; 0x10000
   60748:	cmp	r0, #0
   6074c:	movw	r0, #0
   60750:	str	r0, [sp, #4]
   60754:	beq	60770 <__assert_fail@plt+0x4dbb8>
   60758:	ldr	r0, [fp, #-60]	; 0xffffffc4
   6075c:	ldr	r1, [fp, #-64]	; 0xffffffc0
   60760:	cmp	r0, r1
   60764:	movw	r0, #0
   60768:	movhi	r0, #1
   6076c:	str	r0, [sp, #4]
   60770:	ldr	r0, [sp, #4]
   60774:	tst	r0, #1
   60778:	beq	60788 <__assert_fail@plt+0x4dbd0>
   6077c:	movw	r0, #11
   60780:	str	r0, [fp, #-32]	; 0xffffffe0
   60784:	b	60904 <__assert_fail@plt+0x4dd4c>
   60788:	b	6078c <__assert_fail@plt+0x4dbd4>
   6078c:	ldr	r0, [fp, #12]
   60790:	ldr	r0, [r0, #92]	; 0x5c
   60794:	cmp	r0, #1
   60798:	ble	608a8 <__assert_fail@plt+0x4dcf0>
   6079c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   607a0:	ldr	r0, [r0]
   607a4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   607a8:	ldr	r1, [r1, #32]
   607ac:	cmp	r0, r1
   607b0:	bne	60874 <__assert_fail@plt+0x4dcbc>
   607b4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   607b8:	ldr	r0, [r0, #32]
   607bc:	mov	r1, #1
   607c0:	orr	r0, r1, r0, lsl #1
   607c4:	str	r0, [fp, #-76]	; 0xffffffb4
   607c8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   607cc:	ldr	r0, [r0, #4]
   607d0:	ldr	r1, [fp, #-76]	; 0xffffffb4
   607d4:	lsl	r1, r1, #2
   607d8:	bl	55a84 <__assert_fail@plt+0x42ecc>
   607dc:	str	r0, [fp, #-68]	; 0xffffffbc
   607e0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   607e4:	ldr	r0, [r0, #8]
   607e8:	ldr	r1, [fp, #-76]	; 0xffffffb4
   607ec:	lsl	r1, r1, #2
   607f0:	bl	55a84 <__assert_fail@plt+0x42ecc>
   607f4:	str	r0, [fp, #-72]	; 0xffffffb8
   607f8:	ldr	r0, [fp, #-68]	; 0xffffffbc
   607fc:	movw	r1, #0
   60800:	cmp	r0, r1
   60804:	movw	r0, #1
   60808:	str	r0, [sp]
   6080c:	beq	60828 <__assert_fail@plt+0x4dc70>
   60810:	ldr	r0, [fp, #-72]	; 0xffffffb8
   60814:	movw	r1, #0
   60818:	cmp	r0, r1
   6081c:	movw	r0, #0
   60820:	moveq	r0, #1
   60824:	str	r0, [sp]
   60828:	ldr	r0, [sp]
   6082c:	tst	r0, #1
   60830:	beq	60850 <__assert_fail@plt+0x4dc98>
   60834:	ldr	r0, [fp, #-68]	; 0xffffffbc
   60838:	bl	50c68 <__assert_fail@plt+0x3e0b0>
   6083c:	ldr	r0, [fp, #-72]	; 0xffffffb8
   60840:	bl	50c68 <__assert_fail@plt+0x3e0b0>
   60844:	movw	r0, #12
   60848:	str	r0, [fp, #-32]	; 0xffffffe0
   6084c:	b	60904 <__assert_fail@plt+0x4dd4c>
   60850:	ldr	r0, [fp, #-68]	; 0xffffffbc
   60854:	ldr	r1, [fp, #-40]	; 0xffffffd8
   60858:	str	r0, [r1, #4]
   6085c:	ldr	r0, [fp, #-72]	; 0xffffffb8
   60860:	ldr	r1, [fp, #-40]	; 0xffffffd8
   60864:	str	r0, [r1, #8]
   60868:	ldr	r0, [fp, #-76]	; 0xffffffb4
   6086c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   60870:	str	r0, [r1]
   60874:	ldr	r0, [fp, #-60]	; 0xffffffc4
   60878:	ldr	r1, [fp, #-40]	; 0xffffffd8
   6087c:	ldr	r2, [r1, #4]
   60880:	ldr	r1, [r1, #32]
   60884:	str	r0, [r2, r1, lsl #2]
   60888:	ldr	r0, [fp, #-64]	; 0xffffffc0
   6088c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   60890:	ldr	r2, [r1, #8]
   60894:	ldr	r3, [r1, #32]
   60898:	add	ip, r3, #1
   6089c:	str	ip, [r1, #32]
   608a0:	add	r1, r2, r3, lsl #2
   608a4:	str	r0, [r1]
   608a8:	movw	r0, #0
   608ac:	str	r0, [sp, #80]	; 0x50
   608b0:	ldr	r0, [sp, #80]	; 0x50
   608b4:	cmp	r0, #256	; 0x100
   608b8:	bcs	608fc <__assert_fail@plt+0x4dd44>
   608bc:	ldr	r0, [fp, #-60]	; 0xffffffc4
   608c0:	ldr	r1, [sp, #80]	; 0x50
   608c4:	cmp	r0, r1
   608c8:	bhi	608e8 <__assert_fail@plt+0x4dd30>
   608cc:	ldr	r0, [sp, #80]	; 0x50
   608d0:	ldr	r1, [fp, #-64]	; 0xffffffc0
   608d4:	cmp	r0, r1
   608d8:	bhi	608e8 <__assert_fail@plt+0x4dd30>
   608dc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   608e0:	ldr	r1, [sp, #80]	; 0x50
   608e4:	bl	6029c <__assert_fail@plt+0x4d6e4>
   608e8:	b	608ec <__assert_fail@plt+0x4dd34>
   608ec:	ldr	r0, [sp, #80]	; 0x50
   608f0:	add	r0, r0, #1
   608f4:	str	r0, [sp, #80]	; 0x50
   608f8:	b	608b0 <__assert_fail@plt+0x4dcf8>
   608fc:	movw	r0, #0
   60900:	str	r0, [fp, #-32]	; 0xffffffe0
   60904:	ldr	r0, [fp, #-32]	; 0xffffffe0
   60908:	sub	sp, fp, #28
   6090c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   60910:	push	{fp, lr}
   60914:	mov	fp, sp
   60918:	sub	sp, sp, #24
   6091c:	str	r0, [fp, #-8]
   60920:	str	r1, [sp, #12]
   60924:	str	r2, [sp, #8]
   60928:	str	r3, [sp, #4]
   6092c:	ldr	r0, [sp, #4]
   60930:	bl	12888 <strlen@plt>
   60934:	cmp	r0, #1
   60938:	beq	60948 <__assert_fail@plt+0x4dd90>
   6093c:	movw	r0, #3
   60940:	str	r0, [fp, #-4]
   60944:	b	60960 <__assert_fail@plt+0x4dda8>
   60948:	ldr	r0, [fp, #-8]
   6094c:	ldr	r1, [sp, #4]
   60950:	ldrb	r1, [r1]
   60954:	bl	6029c <__assert_fail@plt+0x4d6e4>
   60958:	movw	r0, #0
   6095c:	str	r0, [fp, #-4]
   60960:	ldr	r0, [fp, #-4]
   60964:	mov	sp, fp
   60968:	pop	{fp, pc}
   6096c:	push	{r4, r5, fp, lr}
   60970:	add	fp, sp, #8
   60974:	sub	sp, sp, #40	; 0x28
   60978:	ldr	ip, [fp, #20]
   6097c:	ldr	lr, [fp, #16]
   60980:	ldr	r4, [fp, #12]
   60984:	ldr	r5, [fp, #8]
   60988:	str	r0, [fp, #-16]
   6098c:	str	r1, [fp, #-20]	; 0xffffffec
   60990:	str	r2, [sp, #24]
   60994:	str	r3, [sp, #20]
   60998:	ldr	r0, [sp, #20]
   6099c:	str	r5, [sp, #12]
   609a0:	str	ip, [sp, #8]
   609a4:	str	lr, [sp, #4]
   609a8:	str	r4, [sp]
   609ac:	bl	12888 <strlen@plt>
   609b0:	str	r0, [sp, #16]
   609b4:	ldr	r0, [sp, #16]
   609b8:	cmp	r0, #1
   609bc:	beq	609cc <__assert_fail@plt+0x4de14>
   609c0:	movw	r0, #3
   609c4:	str	r0, [fp, #-12]
   609c8:	b	609e4 <__assert_fail@plt+0x4de2c>
   609cc:	ldr	r0, [fp, #-16]
   609d0:	ldr	r1, [sp, #20]
   609d4:	ldrb	r1, [r1]
   609d8:	bl	6029c <__assert_fail@plt+0x4d6e4>
   609dc:	movw	r0, #0
   609e0:	str	r0, [fp, #-12]
   609e4:	ldr	r0, [fp, #-12]
   609e8:	sub	sp, fp, #8
   609ec:	pop	{r4, r5, fp, pc}
   609f0:	push	{fp, lr}
   609f4:	mov	fp, sp
   609f8:	sub	sp, sp, #48	; 0x30
   609fc:	ldr	ip, [fp, #12]
   60a00:	ldr	lr, [fp, #8]
   60a04:	str	r0, [fp, #-8]
   60a08:	str	r1, [fp, #-12]
   60a0c:	str	r2, [fp, #-16]
   60a10:	str	r3, [fp, #-20]	; 0xffffffec
   60a14:	ldr	r0, [fp, #8]
   60a18:	str	r0, [sp, #20]
   60a1c:	ldr	r0, [fp, #12]
   60a20:	and	r0, r0, #4194304	; 0x400000
   60a24:	cmp	r0, #0
   60a28:	str	lr, [sp, #8]
   60a2c:	str	ip, [sp, #4]
   60a30:	beq	60a70 <__assert_fail@plt+0x4deb8>
   60a34:	ldr	r0, [sp, #20]
   60a38:	movw	r1, #59278	; 0xe78e
   60a3c:	movt	r1, #7
   60a40:	bl	124c8 <strcmp@plt>
   60a44:	cmp	r0, #0
   60a48:	beq	60a64 <__assert_fail@plt+0x4deac>
   60a4c:	ldr	r0, [sp, #20]
   60a50:	movw	r1, #59284	; 0xe794
   60a54:	movt	r1, #7
   60a58:	bl	124c8 <strcmp@plt>
   60a5c:	cmp	r0, #0
   60a60:	bne	60a70 <__assert_fail@plt+0x4deb8>
   60a64:	movw	r0, #59290	; 0xe79a
   60a68:	movt	r0, #7
   60a6c:	str	r0, [sp, #20]
   60a70:	ldr	r0, [fp, #-20]	; 0xffffffec
   60a74:	ldr	r0, [r0]
   60a78:	ldr	r1, [fp, #-16]
   60a7c:	ldr	r1, [r1, #36]	; 0x24
   60a80:	cmp	r0, r1
   60a84:	bne	60ae8 <__assert_fail@plt+0x4df30>
   60a88:	ldr	r0, [fp, #-16]
   60a8c:	ldr	r0, [r0, #36]	; 0x24
   60a90:	mov	r1, #1
   60a94:	orr	r0, r1, r0, lsl #1
   60a98:	str	r0, [sp, #16]
   60a9c:	ldr	r0, [fp, #-16]
   60aa0:	ldr	r0, [r0, #12]
   60aa4:	ldr	r1, [sp, #16]
   60aa8:	lsl	r1, r1, #2
   60aac:	bl	55a84 <__assert_fail@plt+0x42ecc>
   60ab0:	str	r0, [sp, #12]
   60ab4:	ldr	r0, [sp, #12]
   60ab8:	movw	r1, #0
   60abc:	cmp	r0, r1
   60ac0:	bne	60ad0 <__assert_fail@plt+0x4df18>
   60ac4:	movw	r0, #12
   60ac8:	str	r0, [fp, #-4]
   60acc:	b	6168c <__assert_fail@plt+0x4ead4>
   60ad0:	ldr	r0, [sp, #12]
   60ad4:	ldr	r1, [fp, #-16]
   60ad8:	str	r0, [r1, #12]
   60adc:	ldr	r0, [sp, #16]
   60ae0:	ldr	r1, [fp, #-20]	; 0xffffffec
   60ae4:	str	r0, [r1]
   60ae8:	ldr	r0, [sp, #20]
   60aec:	bl	12468 <wctype@plt>
   60af0:	ldr	lr, [fp, #-16]
   60af4:	ldr	r1, [lr, #12]
   60af8:	ldr	r2, [lr, #36]	; 0x24
   60afc:	add	r3, r2, #1
   60b00:	str	r3, [lr, #36]	; 0x24
   60b04:	add	r1, r1, r2, lsl #2
   60b08:	str	r0, [r1]
   60b0c:	ldr	r0, [sp, #20]
   60b10:	movw	r1, #59264	; 0xe780
   60b14:	movt	r1, #7
   60b18:	bl	124c8 <strcmp@plt>
   60b1c:	cmp	r0, #0
   60b20:	bne	60bfc <__assert_fail@plt+0x4e044>
   60b24:	b	60b28 <__assert_fail@plt+0x4df70>
   60b28:	ldr	r0, [fp, #-8]
   60b2c:	movw	r1, #0
   60b30:	cmp	r0, r1
   60b34:	beq	60b9c <__assert_fail@plt+0x4dfe4>
   60b38:	movw	r0, #0
   60b3c:	str	r0, [sp, #24]
   60b40:	ldr	r0, [sp, #24]
   60b44:	cmp	r0, #256	; 0x100
   60b48:	bge	60b98 <__assert_fail@plt+0x4dfe0>
   60b4c:	bl	12834 <__ctype_b_loc@plt>
   60b50:	ldr	r0, [r0]
   60b54:	ldr	lr, [sp, #24]
   60b58:	add	r0, r0, lr, lsl #1
   60b5c:	ldrh	r0, [r0]
   60b60:	and	r0, r0, #8
   60b64:	cmp	r0, #0
   60b68:	beq	60b84 <__assert_fail@plt+0x4dfcc>
   60b6c:	ldr	r0, [fp, #-12]
   60b70:	ldr	r1, [fp, #-8]
   60b74:	ldr	r2, [sp, #24]
   60b78:	add	r1, r1, r2
   60b7c:	ldrb	r1, [r1]
   60b80:	bl	6029c <__assert_fail@plt+0x4d6e4>
   60b84:	b	60b88 <__assert_fail@plt+0x4dfd0>
   60b88:	ldr	r0, [sp, #24]
   60b8c:	add	r0, r0, #1
   60b90:	str	r0, [sp, #24]
   60b94:	b	60b40 <__assert_fail@plt+0x4df88>
   60b98:	b	60bf4 <__assert_fail@plt+0x4e03c>
   60b9c:	movw	r0, #0
   60ba0:	str	r0, [sp, #24]
   60ba4:	ldr	r0, [sp, #24]
   60ba8:	cmp	r0, #256	; 0x100
   60bac:	bge	60bf0 <__assert_fail@plt+0x4e038>
   60bb0:	bl	12834 <__ctype_b_loc@plt>
   60bb4:	ldr	r0, [r0]
   60bb8:	ldr	lr, [sp, #24]
   60bbc:	add	r0, r0, lr, lsl #1
   60bc0:	ldrh	r0, [r0]
   60bc4:	and	r0, r0, #8
   60bc8:	cmp	r0, #0
   60bcc:	beq	60bdc <__assert_fail@plt+0x4e024>
   60bd0:	ldr	r0, [fp, #-12]
   60bd4:	ldr	r1, [sp, #24]
   60bd8:	bl	6029c <__assert_fail@plt+0x4d6e4>
   60bdc:	b	60be0 <__assert_fail@plt+0x4e028>
   60be0:	ldr	r0, [sp, #24]
   60be4:	add	r0, r0, #1
   60be8:	str	r0, [sp, #24]
   60bec:	b	60ba4 <__assert_fail@plt+0x4dfec>
   60bf0:	b	60bf4 <__assert_fail@plt+0x4e03c>
   60bf4:	b	60bf8 <__assert_fail@plt+0x4e040>
   60bf8:	b	61684 <__assert_fail@plt+0x4eacc>
   60bfc:	ldr	r0, [sp, #20]
   60c00:	movw	r1, #59296	; 0xe7a0
   60c04:	movt	r1, #7
   60c08:	bl	124c8 <strcmp@plt>
   60c0c:	cmp	r0, #0
   60c10:	bne	60cec <__assert_fail@plt+0x4e134>
   60c14:	b	60c18 <__assert_fail@plt+0x4e060>
   60c18:	ldr	r0, [fp, #-8]
   60c1c:	movw	r1, #0
   60c20:	cmp	r0, r1
   60c24:	beq	60c8c <__assert_fail@plt+0x4e0d4>
   60c28:	movw	r0, #0
   60c2c:	str	r0, [sp, #24]
   60c30:	ldr	r0, [sp, #24]
   60c34:	cmp	r0, #256	; 0x100
   60c38:	bge	60c88 <__assert_fail@plt+0x4e0d0>
   60c3c:	bl	12834 <__ctype_b_loc@plt>
   60c40:	ldr	r0, [r0]
   60c44:	ldr	lr, [sp, #24]
   60c48:	add	r0, r0, lr, lsl #1
   60c4c:	ldrh	r0, [r0]
   60c50:	and	r0, r0, #2
   60c54:	cmp	r0, #0
   60c58:	beq	60c74 <__assert_fail@plt+0x4e0bc>
   60c5c:	ldr	r0, [fp, #-12]
   60c60:	ldr	r1, [fp, #-8]
   60c64:	ldr	r2, [sp, #24]
   60c68:	add	r1, r1, r2
   60c6c:	ldrb	r1, [r1]
   60c70:	bl	6029c <__assert_fail@plt+0x4d6e4>
   60c74:	b	60c78 <__assert_fail@plt+0x4e0c0>
   60c78:	ldr	r0, [sp, #24]
   60c7c:	add	r0, r0, #1
   60c80:	str	r0, [sp, #24]
   60c84:	b	60c30 <__assert_fail@plt+0x4e078>
   60c88:	b	60ce4 <__assert_fail@plt+0x4e12c>
   60c8c:	movw	r0, #0
   60c90:	str	r0, [sp, #24]
   60c94:	ldr	r0, [sp, #24]
   60c98:	cmp	r0, #256	; 0x100
   60c9c:	bge	60ce0 <__assert_fail@plt+0x4e128>
   60ca0:	bl	12834 <__ctype_b_loc@plt>
   60ca4:	ldr	r0, [r0]
   60ca8:	ldr	lr, [sp, #24]
   60cac:	add	r0, r0, lr, lsl #1
   60cb0:	ldrh	r0, [r0]
   60cb4:	and	r0, r0, #2
   60cb8:	cmp	r0, #0
   60cbc:	beq	60ccc <__assert_fail@plt+0x4e114>
   60cc0:	ldr	r0, [fp, #-12]
   60cc4:	ldr	r1, [sp, #24]
   60cc8:	bl	6029c <__assert_fail@plt+0x4d6e4>
   60ccc:	b	60cd0 <__assert_fail@plt+0x4e118>
   60cd0:	ldr	r0, [sp, #24]
   60cd4:	add	r0, r0, #1
   60cd8:	str	r0, [sp, #24]
   60cdc:	b	60c94 <__assert_fail@plt+0x4e0dc>
   60ce0:	b	60ce4 <__assert_fail@plt+0x4e12c>
   60ce4:	b	60ce8 <__assert_fail@plt+0x4e130>
   60ce8:	b	61680 <__assert_fail@plt+0x4eac8>
   60cec:	ldr	r0, [sp, #20]
   60cf0:	movw	r1, #59284	; 0xe794
   60cf4:	movt	r1, #7
   60cf8:	bl	124c8 <strcmp@plt>
   60cfc:	cmp	r0, #0
   60d00:	bne	60ddc <__assert_fail@plt+0x4e224>
   60d04:	b	60d08 <__assert_fail@plt+0x4e150>
   60d08:	ldr	r0, [fp, #-8]
   60d0c:	movw	r1, #0
   60d10:	cmp	r0, r1
   60d14:	beq	60d7c <__assert_fail@plt+0x4e1c4>
   60d18:	movw	r0, #0
   60d1c:	str	r0, [sp, #24]
   60d20:	ldr	r0, [sp, #24]
   60d24:	cmp	r0, #256	; 0x100
   60d28:	bge	60d78 <__assert_fail@plt+0x4e1c0>
   60d2c:	bl	12834 <__ctype_b_loc@plt>
   60d30:	ldr	r0, [r0]
   60d34:	ldr	lr, [sp, #24]
   60d38:	add	r0, r0, lr, lsl #1
   60d3c:	ldrh	r0, [r0]
   60d40:	and	r0, r0, #512	; 0x200
   60d44:	cmp	r0, #0
   60d48:	beq	60d64 <__assert_fail@plt+0x4e1ac>
   60d4c:	ldr	r0, [fp, #-12]
   60d50:	ldr	r1, [fp, #-8]
   60d54:	ldr	r2, [sp, #24]
   60d58:	add	r1, r1, r2
   60d5c:	ldrb	r1, [r1]
   60d60:	bl	6029c <__assert_fail@plt+0x4d6e4>
   60d64:	b	60d68 <__assert_fail@plt+0x4e1b0>
   60d68:	ldr	r0, [sp, #24]
   60d6c:	add	r0, r0, #1
   60d70:	str	r0, [sp, #24]
   60d74:	b	60d20 <__assert_fail@plt+0x4e168>
   60d78:	b	60dd4 <__assert_fail@plt+0x4e21c>
   60d7c:	movw	r0, #0
   60d80:	str	r0, [sp, #24]
   60d84:	ldr	r0, [sp, #24]
   60d88:	cmp	r0, #256	; 0x100
   60d8c:	bge	60dd0 <__assert_fail@plt+0x4e218>
   60d90:	bl	12834 <__ctype_b_loc@plt>
   60d94:	ldr	r0, [r0]
   60d98:	ldr	lr, [sp, #24]
   60d9c:	add	r0, r0, lr, lsl #1
   60da0:	ldrh	r0, [r0]
   60da4:	and	r0, r0, #512	; 0x200
   60da8:	cmp	r0, #0
   60dac:	beq	60dbc <__assert_fail@plt+0x4e204>
   60db0:	ldr	r0, [fp, #-12]
   60db4:	ldr	r1, [sp, #24]
   60db8:	bl	6029c <__assert_fail@plt+0x4d6e4>
   60dbc:	b	60dc0 <__assert_fail@plt+0x4e208>
   60dc0:	ldr	r0, [sp, #24]
   60dc4:	add	r0, r0, #1
   60dc8:	str	r0, [sp, #24]
   60dcc:	b	60d84 <__assert_fail@plt+0x4e1cc>
   60dd0:	b	60dd4 <__assert_fail@plt+0x4e21c>
   60dd4:	b	60dd8 <__assert_fail@plt+0x4e220>
   60dd8:	b	6167c <__assert_fail@plt+0x4eac4>
   60ddc:	ldr	r0, [sp, #20]
   60de0:	movw	r1, #59272	; 0xe788
   60de4:	movt	r1, #7
   60de8:	bl	124c8 <strcmp@plt>
   60dec:	cmp	r0, #0
   60df0:	bne	60ecc <__assert_fail@plt+0x4e314>
   60df4:	b	60df8 <__assert_fail@plt+0x4e240>
   60df8:	ldr	r0, [fp, #-8]
   60dfc:	movw	r1, #0
   60e00:	cmp	r0, r1
   60e04:	beq	60e6c <__assert_fail@plt+0x4e2b4>
   60e08:	movw	r0, #0
   60e0c:	str	r0, [sp, #24]
   60e10:	ldr	r0, [sp, #24]
   60e14:	cmp	r0, #256	; 0x100
   60e18:	bge	60e68 <__assert_fail@plt+0x4e2b0>
   60e1c:	bl	12834 <__ctype_b_loc@plt>
   60e20:	ldr	r0, [r0]
   60e24:	ldr	lr, [sp, #24]
   60e28:	add	r0, r0, lr, lsl #1
   60e2c:	ldrh	r0, [r0]
   60e30:	and	r0, r0, #8192	; 0x2000
   60e34:	cmp	r0, #0
   60e38:	beq	60e54 <__assert_fail@plt+0x4e29c>
   60e3c:	ldr	r0, [fp, #-12]
   60e40:	ldr	r1, [fp, #-8]
   60e44:	ldr	r2, [sp, #24]
   60e48:	add	r1, r1, r2
   60e4c:	ldrb	r1, [r1]
   60e50:	bl	6029c <__assert_fail@plt+0x4d6e4>
   60e54:	b	60e58 <__assert_fail@plt+0x4e2a0>
   60e58:	ldr	r0, [sp, #24]
   60e5c:	add	r0, r0, #1
   60e60:	str	r0, [sp, #24]
   60e64:	b	60e10 <__assert_fail@plt+0x4e258>
   60e68:	b	60ec4 <__assert_fail@plt+0x4e30c>
   60e6c:	movw	r0, #0
   60e70:	str	r0, [sp, #24]
   60e74:	ldr	r0, [sp, #24]
   60e78:	cmp	r0, #256	; 0x100
   60e7c:	bge	60ec0 <__assert_fail@plt+0x4e308>
   60e80:	bl	12834 <__ctype_b_loc@plt>
   60e84:	ldr	r0, [r0]
   60e88:	ldr	lr, [sp, #24]
   60e8c:	add	r0, r0, lr, lsl #1
   60e90:	ldrh	r0, [r0]
   60e94:	and	r0, r0, #8192	; 0x2000
   60e98:	cmp	r0, #0
   60e9c:	beq	60eac <__assert_fail@plt+0x4e2f4>
   60ea0:	ldr	r0, [fp, #-12]
   60ea4:	ldr	r1, [sp, #24]
   60ea8:	bl	6029c <__assert_fail@plt+0x4d6e4>
   60eac:	b	60eb0 <__assert_fail@plt+0x4e2f8>
   60eb0:	ldr	r0, [sp, #24]
   60eb4:	add	r0, r0, #1
   60eb8:	str	r0, [sp, #24]
   60ebc:	b	60e74 <__assert_fail@plt+0x4e2bc>
   60ec0:	b	60ec4 <__assert_fail@plt+0x4e30c>
   60ec4:	b	60ec8 <__assert_fail@plt+0x4e310>
   60ec8:	b	61678 <__assert_fail@plt+0x4eac0>
   60ecc:	ldr	r0, [sp, #20]
   60ed0:	movw	r1, #59290	; 0xe79a
   60ed4:	movt	r1, #7
   60ed8:	bl	124c8 <strcmp@plt>
   60edc:	cmp	r0, #0
   60ee0:	bne	60fbc <__assert_fail@plt+0x4e404>
   60ee4:	b	60ee8 <__assert_fail@plt+0x4e330>
   60ee8:	ldr	r0, [fp, #-8]
   60eec:	movw	r1, #0
   60ef0:	cmp	r0, r1
   60ef4:	beq	60f5c <__assert_fail@plt+0x4e3a4>
   60ef8:	movw	r0, #0
   60efc:	str	r0, [sp, #24]
   60f00:	ldr	r0, [sp, #24]
   60f04:	cmp	r0, #256	; 0x100
   60f08:	bge	60f58 <__assert_fail@plt+0x4e3a0>
   60f0c:	bl	12834 <__ctype_b_loc@plt>
   60f10:	ldr	r0, [r0]
   60f14:	ldr	lr, [sp, #24]
   60f18:	add	r0, r0, lr, lsl #1
   60f1c:	ldrh	r0, [r0]
   60f20:	and	r0, r0, #1024	; 0x400
   60f24:	cmp	r0, #0
   60f28:	beq	60f44 <__assert_fail@plt+0x4e38c>
   60f2c:	ldr	r0, [fp, #-12]
   60f30:	ldr	r1, [fp, #-8]
   60f34:	ldr	r2, [sp, #24]
   60f38:	add	r1, r1, r2
   60f3c:	ldrb	r1, [r1]
   60f40:	bl	6029c <__assert_fail@plt+0x4d6e4>
   60f44:	b	60f48 <__assert_fail@plt+0x4e390>
   60f48:	ldr	r0, [sp, #24]
   60f4c:	add	r0, r0, #1
   60f50:	str	r0, [sp, #24]
   60f54:	b	60f00 <__assert_fail@plt+0x4e348>
   60f58:	b	60fb4 <__assert_fail@plt+0x4e3fc>
   60f5c:	movw	r0, #0
   60f60:	str	r0, [sp, #24]
   60f64:	ldr	r0, [sp, #24]
   60f68:	cmp	r0, #256	; 0x100
   60f6c:	bge	60fb0 <__assert_fail@plt+0x4e3f8>
   60f70:	bl	12834 <__ctype_b_loc@plt>
   60f74:	ldr	r0, [r0]
   60f78:	ldr	lr, [sp, #24]
   60f7c:	add	r0, r0, lr, lsl #1
   60f80:	ldrh	r0, [r0]
   60f84:	and	r0, r0, #1024	; 0x400
   60f88:	cmp	r0, #0
   60f8c:	beq	60f9c <__assert_fail@plt+0x4e3e4>
   60f90:	ldr	r0, [fp, #-12]
   60f94:	ldr	r1, [sp, #24]
   60f98:	bl	6029c <__assert_fail@plt+0x4d6e4>
   60f9c:	b	60fa0 <__assert_fail@plt+0x4e3e8>
   60fa0:	ldr	r0, [sp, #24]
   60fa4:	add	r0, r0, #1
   60fa8:	str	r0, [sp, #24]
   60fac:	b	60f64 <__assert_fail@plt+0x4e3ac>
   60fb0:	b	60fb4 <__assert_fail@plt+0x4e3fc>
   60fb4:	b	60fb8 <__assert_fail@plt+0x4e400>
   60fb8:	b	61674 <__assert_fail@plt+0x4eabc>
   60fbc:	ldr	r0, [sp, #20]
   60fc0:	movw	r1, #59321	; 0xe7b9
   60fc4:	movt	r1, #7
   60fc8:	bl	124c8 <strcmp@plt>
   60fcc:	cmp	r0, #0
   60fd0:	bne	610ac <__assert_fail@plt+0x4e4f4>
   60fd4:	b	60fd8 <__assert_fail@plt+0x4e420>
   60fd8:	ldr	r0, [fp, #-8]
   60fdc:	movw	r1, #0
   60fe0:	cmp	r0, r1
   60fe4:	beq	6104c <__assert_fail@plt+0x4e494>
   60fe8:	movw	r0, #0
   60fec:	str	r0, [sp, #24]
   60ff0:	ldr	r0, [sp, #24]
   60ff4:	cmp	r0, #256	; 0x100
   60ff8:	bge	61048 <__assert_fail@plt+0x4e490>
   60ffc:	bl	12834 <__ctype_b_loc@plt>
   61000:	ldr	r0, [r0]
   61004:	ldr	lr, [sp, #24]
   61008:	add	r0, r0, lr, lsl #1
   6100c:	ldrh	r0, [r0]
   61010:	and	r0, r0, #2048	; 0x800
   61014:	cmp	r0, #0
   61018:	beq	61034 <__assert_fail@plt+0x4e47c>
   6101c:	ldr	r0, [fp, #-12]
   61020:	ldr	r1, [fp, #-8]
   61024:	ldr	r2, [sp, #24]
   61028:	add	r1, r1, r2
   6102c:	ldrb	r1, [r1]
   61030:	bl	6029c <__assert_fail@plt+0x4d6e4>
   61034:	b	61038 <__assert_fail@plt+0x4e480>
   61038:	ldr	r0, [sp, #24]
   6103c:	add	r0, r0, #1
   61040:	str	r0, [sp, #24]
   61044:	b	60ff0 <__assert_fail@plt+0x4e438>
   61048:	b	610a4 <__assert_fail@plt+0x4e4ec>
   6104c:	movw	r0, #0
   61050:	str	r0, [sp, #24]
   61054:	ldr	r0, [sp, #24]
   61058:	cmp	r0, #256	; 0x100
   6105c:	bge	610a0 <__assert_fail@plt+0x4e4e8>
   61060:	bl	12834 <__ctype_b_loc@plt>
   61064:	ldr	r0, [r0]
   61068:	ldr	lr, [sp, #24]
   6106c:	add	r0, r0, lr, lsl #1
   61070:	ldrh	r0, [r0]
   61074:	and	r0, r0, #2048	; 0x800
   61078:	cmp	r0, #0
   6107c:	beq	6108c <__assert_fail@plt+0x4e4d4>
   61080:	ldr	r0, [fp, #-12]
   61084:	ldr	r1, [sp, #24]
   61088:	bl	6029c <__assert_fail@plt+0x4d6e4>
   6108c:	b	61090 <__assert_fail@plt+0x4e4d8>
   61090:	ldr	r0, [sp, #24]
   61094:	add	r0, r0, #1
   61098:	str	r0, [sp, #24]
   6109c:	b	61054 <__assert_fail@plt+0x4e49c>
   610a0:	b	610a4 <__assert_fail@plt+0x4e4ec>
   610a4:	b	610a8 <__assert_fail@plt+0x4e4f0>
   610a8:	b	61670 <__assert_fail@plt+0x4eab8>
   610ac:	ldr	r0, [sp, #20]
   610b0:	movw	r1, #35128	; 0x8938
   610b4:	movt	r1, #7
   610b8:	bl	124c8 <strcmp@plt>
   610bc:	cmp	r0, #0
   610c0:	bne	6119c <__assert_fail@plt+0x4e5e4>
   610c4:	b	610c8 <__assert_fail@plt+0x4e510>
   610c8:	ldr	r0, [fp, #-8]
   610cc:	movw	r1, #0
   610d0:	cmp	r0, r1
   610d4:	beq	6113c <__assert_fail@plt+0x4e584>
   610d8:	movw	r0, #0
   610dc:	str	r0, [sp, #24]
   610e0:	ldr	r0, [sp, #24]
   610e4:	cmp	r0, #256	; 0x100
   610e8:	bge	61138 <__assert_fail@plt+0x4e580>
   610ec:	bl	12834 <__ctype_b_loc@plt>
   610f0:	ldr	r0, [r0]
   610f4:	ldr	lr, [sp, #24]
   610f8:	add	r0, r0, lr, lsl #1
   610fc:	ldrh	r0, [r0]
   61100:	and	r0, r0, #16384	; 0x4000
   61104:	cmp	r0, #0
   61108:	beq	61124 <__assert_fail@plt+0x4e56c>
   6110c:	ldr	r0, [fp, #-12]
   61110:	ldr	r1, [fp, #-8]
   61114:	ldr	r2, [sp, #24]
   61118:	add	r1, r1, r2
   6111c:	ldrb	r1, [r1]
   61120:	bl	6029c <__assert_fail@plt+0x4d6e4>
   61124:	b	61128 <__assert_fail@plt+0x4e570>
   61128:	ldr	r0, [sp, #24]
   6112c:	add	r0, r0, #1
   61130:	str	r0, [sp, #24]
   61134:	b	610e0 <__assert_fail@plt+0x4e528>
   61138:	b	61194 <__assert_fail@plt+0x4e5dc>
   6113c:	movw	r0, #0
   61140:	str	r0, [sp, #24]
   61144:	ldr	r0, [sp, #24]
   61148:	cmp	r0, #256	; 0x100
   6114c:	bge	61190 <__assert_fail@plt+0x4e5d8>
   61150:	bl	12834 <__ctype_b_loc@plt>
   61154:	ldr	r0, [r0]
   61158:	ldr	lr, [sp, #24]
   6115c:	add	r0, r0, lr, lsl #1
   61160:	ldrh	r0, [r0]
   61164:	and	r0, r0, #16384	; 0x4000
   61168:	cmp	r0, #0
   6116c:	beq	6117c <__assert_fail@plt+0x4e5c4>
   61170:	ldr	r0, [fp, #-12]
   61174:	ldr	r1, [sp, #24]
   61178:	bl	6029c <__assert_fail@plt+0x4d6e4>
   6117c:	b	61180 <__assert_fail@plt+0x4e5c8>
   61180:	ldr	r0, [sp, #24]
   61184:	add	r0, r0, #1
   61188:	str	r0, [sp, #24]
   6118c:	b	61144 <__assert_fail@plt+0x4e58c>
   61190:	b	61194 <__assert_fail@plt+0x4e5dc>
   61194:	b	61198 <__assert_fail@plt+0x4e5e0>
   61198:	b	6166c <__assert_fail@plt+0x4eab4>
   6119c:	ldr	r0, [sp, #20]
   611a0:	movw	r1, #59278	; 0xe78e
   611a4:	movt	r1, #7
   611a8:	bl	124c8 <strcmp@plt>
   611ac:	cmp	r0, #0
   611b0:	bne	6128c <__assert_fail@plt+0x4e6d4>
   611b4:	b	611b8 <__assert_fail@plt+0x4e600>
   611b8:	ldr	r0, [fp, #-8]
   611bc:	movw	r1, #0
   611c0:	cmp	r0, r1
   611c4:	beq	6122c <__assert_fail@plt+0x4e674>
   611c8:	movw	r0, #0
   611cc:	str	r0, [sp, #24]
   611d0:	ldr	r0, [sp, #24]
   611d4:	cmp	r0, #256	; 0x100
   611d8:	bge	61228 <__assert_fail@plt+0x4e670>
   611dc:	bl	12834 <__ctype_b_loc@plt>
   611e0:	ldr	r0, [r0]
   611e4:	ldr	lr, [sp, #24]
   611e8:	add	r0, r0, lr, lsl #1
   611ec:	ldrh	r0, [r0]
   611f0:	and	r0, r0, #256	; 0x100
   611f4:	cmp	r0, #0
   611f8:	beq	61214 <__assert_fail@plt+0x4e65c>
   611fc:	ldr	r0, [fp, #-12]
   61200:	ldr	r1, [fp, #-8]
   61204:	ldr	r2, [sp, #24]
   61208:	add	r1, r1, r2
   6120c:	ldrb	r1, [r1]
   61210:	bl	6029c <__assert_fail@plt+0x4d6e4>
   61214:	b	61218 <__assert_fail@plt+0x4e660>
   61218:	ldr	r0, [sp, #24]
   6121c:	add	r0, r0, #1
   61220:	str	r0, [sp, #24]
   61224:	b	611d0 <__assert_fail@plt+0x4e618>
   61228:	b	61284 <__assert_fail@plt+0x4e6cc>
   6122c:	movw	r0, #0
   61230:	str	r0, [sp, #24]
   61234:	ldr	r0, [sp, #24]
   61238:	cmp	r0, #256	; 0x100
   6123c:	bge	61280 <__assert_fail@plt+0x4e6c8>
   61240:	bl	12834 <__ctype_b_loc@plt>
   61244:	ldr	r0, [r0]
   61248:	ldr	lr, [sp, #24]
   6124c:	add	r0, r0, lr, lsl #1
   61250:	ldrh	r0, [r0]
   61254:	and	r0, r0, #256	; 0x100
   61258:	cmp	r0, #0
   6125c:	beq	6126c <__assert_fail@plt+0x4e6b4>
   61260:	ldr	r0, [fp, #-12]
   61264:	ldr	r1, [sp, #24]
   61268:	bl	6029c <__assert_fail@plt+0x4d6e4>
   6126c:	b	61270 <__assert_fail@plt+0x4e6b8>
   61270:	ldr	r0, [sp, #24]
   61274:	add	r0, r0, #1
   61278:	str	r0, [sp, #24]
   6127c:	b	61234 <__assert_fail@plt+0x4e67c>
   61280:	b	61284 <__assert_fail@plt+0x4e6cc>
   61284:	b	61288 <__assert_fail@plt+0x4e6d0>
   61288:	b	61668 <__assert_fail@plt+0x4eab0>
   6128c:	ldr	r0, [sp, #20]
   61290:	movw	r1, #59302	; 0xe7a6
   61294:	movt	r1, #7
   61298:	bl	124c8 <strcmp@plt>
   6129c:	cmp	r0, #0
   612a0:	bne	6137c <__assert_fail@plt+0x4e7c4>
   612a4:	b	612a8 <__assert_fail@plt+0x4e6f0>
   612a8:	ldr	r0, [fp, #-8]
   612ac:	movw	r1, #0
   612b0:	cmp	r0, r1
   612b4:	beq	6131c <__assert_fail@plt+0x4e764>
   612b8:	movw	r0, #0
   612bc:	str	r0, [sp, #24]
   612c0:	ldr	r0, [sp, #24]
   612c4:	cmp	r0, #256	; 0x100
   612c8:	bge	61318 <__assert_fail@plt+0x4e760>
   612cc:	bl	12834 <__ctype_b_loc@plt>
   612d0:	ldr	r0, [r0]
   612d4:	ldr	lr, [sp, #24]
   612d8:	add	r0, r0, lr, lsl #1
   612dc:	ldrh	r0, [r0]
   612e0:	and	r0, r0, #1
   612e4:	cmp	r0, #0
   612e8:	beq	61304 <__assert_fail@plt+0x4e74c>
   612ec:	ldr	r0, [fp, #-12]
   612f0:	ldr	r1, [fp, #-8]
   612f4:	ldr	r2, [sp, #24]
   612f8:	add	r1, r1, r2
   612fc:	ldrb	r1, [r1]
   61300:	bl	6029c <__assert_fail@plt+0x4d6e4>
   61304:	b	61308 <__assert_fail@plt+0x4e750>
   61308:	ldr	r0, [sp, #24]
   6130c:	add	r0, r0, #1
   61310:	str	r0, [sp, #24]
   61314:	b	612c0 <__assert_fail@plt+0x4e708>
   61318:	b	61374 <__assert_fail@plt+0x4e7bc>
   6131c:	movw	r0, #0
   61320:	str	r0, [sp, #24]
   61324:	ldr	r0, [sp, #24]
   61328:	cmp	r0, #256	; 0x100
   6132c:	bge	61370 <__assert_fail@plt+0x4e7b8>
   61330:	bl	12834 <__ctype_b_loc@plt>
   61334:	ldr	r0, [r0]
   61338:	ldr	lr, [sp, #24]
   6133c:	add	r0, r0, lr, lsl #1
   61340:	ldrh	r0, [r0]
   61344:	and	r0, r0, #1
   61348:	cmp	r0, #0
   6134c:	beq	6135c <__assert_fail@plt+0x4e7a4>
   61350:	ldr	r0, [fp, #-12]
   61354:	ldr	r1, [sp, #24]
   61358:	bl	6029c <__assert_fail@plt+0x4d6e4>
   6135c:	b	61360 <__assert_fail@plt+0x4e7a8>
   61360:	ldr	r0, [sp, #24]
   61364:	add	r0, r0, #1
   61368:	str	r0, [sp, #24]
   6136c:	b	61324 <__assert_fail@plt+0x4e76c>
   61370:	b	61374 <__assert_fail@plt+0x4e7bc>
   61374:	b	61378 <__assert_fail@plt+0x4e7c0>
   61378:	b	61664 <__assert_fail@plt+0x4eaac>
   6137c:	ldr	r0, [sp, #20]
   61380:	movw	r1, #59308	; 0xe7ac
   61384:	movt	r1, #7
   61388:	bl	124c8 <strcmp@plt>
   6138c:	cmp	r0, #0
   61390:	bne	6146c <__assert_fail@plt+0x4e8b4>
   61394:	b	61398 <__assert_fail@plt+0x4e7e0>
   61398:	ldr	r0, [fp, #-8]
   6139c:	movw	r1, #0
   613a0:	cmp	r0, r1
   613a4:	beq	6140c <__assert_fail@plt+0x4e854>
   613a8:	movw	r0, #0
   613ac:	str	r0, [sp, #24]
   613b0:	ldr	r0, [sp, #24]
   613b4:	cmp	r0, #256	; 0x100
   613b8:	bge	61408 <__assert_fail@plt+0x4e850>
   613bc:	bl	12834 <__ctype_b_loc@plt>
   613c0:	ldr	r0, [r0]
   613c4:	ldr	lr, [sp, #24]
   613c8:	add	r0, r0, lr, lsl #1
   613cc:	ldrh	r0, [r0]
   613d0:	and	r0, r0, #32768	; 0x8000
   613d4:	cmp	r0, #0
   613d8:	beq	613f4 <__assert_fail@plt+0x4e83c>
   613dc:	ldr	r0, [fp, #-12]
   613e0:	ldr	r1, [fp, #-8]
   613e4:	ldr	r2, [sp, #24]
   613e8:	add	r1, r1, r2
   613ec:	ldrb	r1, [r1]
   613f0:	bl	6029c <__assert_fail@plt+0x4d6e4>
   613f4:	b	613f8 <__assert_fail@plt+0x4e840>
   613f8:	ldr	r0, [sp, #24]
   613fc:	add	r0, r0, #1
   61400:	str	r0, [sp, #24]
   61404:	b	613b0 <__assert_fail@plt+0x4e7f8>
   61408:	b	61464 <__assert_fail@plt+0x4e8ac>
   6140c:	movw	r0, #0
   61410:	str	r0, [sp, #24]
   61414:	ldr	r0, [sp, #24]
   61418:	cmp	r0, #256	; 0x100
   6141c:	bge	61460 <__assert_fail@plt+0x4e8a8>
   61420:	bl	12834 <__ctype_b_loc@plt>
   61424:	ldr	r0, [r0]
   61428:	ldr	lr, [sp, #24]
   6142c:	add	r0, r0, lr, lsl #1
   61430:	ldrh	r0, [r0]
   61434:	and	r0, r0, #32768	; 0x8000
   61438:	cmp	r0, #0
   6143c:	beq	6144c <__assert_fail@plt+0x4e894>
   61440:	ldr	r0, [fp, #-12]
   61444:	ldr	r1, [sp, #24]
   61448:	bl	6029c <__assert_fail@plt+0x4d6e4>
   6144c:	b	61450 <__assert_fail@plt+0x4e898>
   61450:	ldr	r0, [sp, #24]
   61454:	add	r0, r0, #1
   61458:	str	r0, [sp, #24]
   6145c:	b	61414 <__assert_fail@plt+0x4e85c>
   61460:	b	61464 <__assert_fail@plt+0x4e8ac>
   61464:	b	61468 <__assert_fail@plt+0x4e8b0>
   61468:	b	61660 <__assert_fail@plt+0x4eaa8>
   6146c:	ldr	r0, [sp, #20]
   61470:	movw	r1, #59314	; 0xe7b2
   61474:	movt	r1, #7
   61478:	bl	124c8 <strcmp@plt>
   6147c:	cmp	r0, #0
   61480:	bne	6155c <__assert_fail@plt+0x4e9a4>
   61484:	b	61488 <__assert_fail@plt+0x4e8d0>
   61488:	ldr	r0, [fp, #-8]
   6148c:	movw	r1, #0
   61490:	cmp	r0, r1
   61494:	beq	614fc <__assert_fail@plt+0x4e944>
   61498:	movw	r0, #0
   6149c:	str	r0, [sp, #24]
   614a0:	ldr	r0, [sp, #24]
   614a4:	cmp	r0, #256	; 0x100
   614a8:	bge	614f8 <__assert_fail@plt+0x4e940>
   614ac:	bl	12834 <__ctype_b_loc@plt>
   614b0:	ldr	r0, [r0]
   614b4:	ldr	lr, [sp, #24]
   614b8:	add	r0, r0, lr, lsl #1
   614bc:	ldrh	r0, [r0]
   614c0:	and	r0, r0, #4
   614c4:	cmp	r0, #0
   614c8:	beq	614e4 <__assert_fail@plt+0x4e92c>
   614cc:	ldr	r0, [fp, #-12]
   614d0:	ldr	r1, [fp, #-8]
   614d4:	ldr	r2, [sp, #24]
   614d8:	add	r1, r1, r2
   614dc:	ldrb	r1, [r1]
   614e0:	bl	6029c <__assert_fail@plt+0x4d6e4>
   614e4:	b	614e8 <__assert_fail@plt+0x4e930>
   614e8:	ldr	r0, [sp, #24]
   614ec:	add	r0, r0, #1
   614f0:	str	r0, [sp, #24]
   614f4:	b	614a0 <__assert_fail@plt+0x4e8e8>
   614f8:	b	61554 <__assert_fail@plt+0x4e99c>
   614fc:	movw	r0, #0
   61500:	str	r0, [sp, #24]
   61504:	ldr	r0, [sp, #24]
   61508:	cmp	r0, #256	; 0x100
   6150c:	bge	61550 <__assert_fail@plt+0x4e998>
   61510:	bl	12834 <__ctype_b_loc@plt>
   61514:	ldr	r0, [r0]
   61518:	ldr	lr, [sp, #24]
   6151c:	add	r0, r0, lr, lsl #1
   61520:	ldrh	r0, [r0]
   61524:	and	r0, r0, #4
   61528:	cmp	r0, #0
   6152c:	beq	6153c <__assert_fail@plt+0x4e984>
   61530:	ldr	r0, [fp, #-12]
   61534:	ldr	r1, [sp, #24]
   61538:	bl	6029c <__assert_fail@plt+0x4d6e4>
   6153c:	b	61540 <__assert_fail@plt+0x4e988>
   61540:	ldr	r0, [sp, #24]
   61544:	add	r0, r0, #1
   61548:	str	r0, [sp, #24]
   6154c:	b	61504 <__assert_fail@plt+0x4e94c>
   61550:	b	61554 <__assert_fail@plt+0x4e99c>
   61554:	b	61558 <__assert_fail@plt+0x4e9a0>
   61558:	b	6165c <__assert_fail@plt+0x4eaa4>
   6155c:	ldr	r0, [sp, #20]
   61560:	movw	r1, #59320	; 0xe7b8
   61564:	movt	r1, #7
   61568:	bl	124c8 <strcmp@plt>
   6156c:	cmp	r0, #0
   61570:	bne	6164c <__assert_fail@plt+0x4ea94>
   61574:	b	61578 <__assert_fail@plt+0x4e9c0>
   61578:	ldr	r0, [fp, #-8]
   6157c:	movw	r1, #0
   61580:	cmp	r0, r1
   61584:	beq	615ec <__assert_fail@plt+0x4ea34>
   61588:	movw	r0, #0
   6158c:	str	r0, [sp, #24]
   61590:	ldr	r0, [sp, #24]
   61594:	cmp	r0, #256	; 0x100
   61598:	bge	615e8 <__assert_fail@plt+0x4ea30>
   6159c:	bl	12834 <__ctype_b_loc@plt>
   615a0:	ldr	r0, [r0]
   615a4:	ldr	lr, [sp, #24]
   615a8:	add	r0, r0, lr, lsl #1
   615ac:	ldrh	r0, [r0]
   615b0:	and	r0, r0, #4096	; 0x1000
   615b4:	cmp	r0, #0
   615b8:	beq	615d4 <__assert_fail@plt+0x4ea1c>
   615bc:	ldr	r0, [fp, #-12]
   615c0:	ldr	r1, [fp, #-8]
   615c4:	ldr	r2, [sp, #24]
   615c8:	add	r1, r1, r2
   615cc:	ldrb	r1, [r1]
   615d0:	bl	6029c <__assert_fail@plt+0x4d6e4>
   615d4:	b	615d8 <__assert_fail@plt+0x4ea20>
   615d8:	ldr	r0, [sp, #24]
   615dc:	add	r0, r0, #1
   615e0:	str	r0, [sp, #24]
   615e4:	b	61590 <__assert_fail@plt+0x4e9d8>
   615e8:	b	61644 <__assert_fail@plt+0x4ea8c>
   615ec:	movw	r0, #0
   615f0:	str	r0, [sp, #24]
   615f4:	ldr	r0, [sp, #24]
   615f8:	cmp	r0, #256	; 0x100
   615fc:	bge	61640 <__assert_fail@plt+0x4ea88>
   61600:	bl	12834 <__ctype_b_loc@plt>
   61604:	ldr	r0, [r0]
   61608:	ldr	lr, [sp, #24]
   6160c:	add	r0, r0, lr, lsl #1
   61610:	ldrh	r0, [r0]
   61614:	and	r0, r0, #4096	; 0x1000
   61618:	cmp	r0, #0
   6161c:	beq	6162c <__assert_fail@plt+0x4ea74>
   61620:	ldr	r0, [fp, #-12]
   61624:	ldr	r1, [sp, #24]
   61628:	bl	6029c <__assert_fail@plt+0x4d6e4>
   6162c:	b	61630 <__assert_fail@plt+0x4ea78>
   61630:	ldr	r0, [sp, #24]
   61634:	add	r0, r0, #1
   61638:	str	r0, [sp, #24]
   6163c:	b	615f4 <__assert_fail@plt+0x4ea3c>
   61640:	b	61644 <__assert_fail@plt+0x4ea8c>
   61644:	b	61648 <__assert_fail@plt+0x4ea90>
   61648:	b	61658 <__assert_fail@plt+0x4eaa0>
   6164c:	movw	r0, #4
   61650:	str	r0, [fp, #-4]
   61654:	b	6168c <__assert_fail@plt+0x4ead4>
   61658:	b	6165c <__assert_fail@plt+0x4eaa4>
   6165c:	b	61660 <__assert_fail@plt+0x4eaa8>
   61660:	b	61664 <__assert_fail@plt+0x4eaac>
   61664:	b	61668 <__assert_fail@plt+0x4eab0>
   61668:	b	6166c <__assert_fail@plt+0x4eab4>
   6166c:	b	61670 <__assert_fail@plt+0x4eab8>
   61670:	b	61674 <__assert_fail@plt+0x4eabc>
   61674:	b	61678 <__assert_fail@plt+0x4eac0>
   61678:	b	6167c <__assert_fail@plt+0x4eac4>
   6167c:	b	61680 <__assert_fail@plt+0x4eac8>
   61680:	b	61684 <__assert_fail@plt+0x4eacc>
   61684:	movw	r0, #0
   61688:	str	r0, [fp, #-4]
   6168c:	ldr	r0, [fp, #-4]
   61690:	mov	sp, fp
   61694:	pop	{fp, pc}
   61698:	sub	sp, sp, #8
   6169c:	str	r0, [sp, #4]
   616a0:	movw	r0, #0
   616a4:	str	r0, [sp]
   616a8:	ldr	r0, [sp]
   616ac:	cmp	r0, #8
   616b0:	bge	616d8 <__assert_fail@plt+0x4eb20>
   616b4:	ldr	r0, [sp, #4]
   616b8:	ldr	r1, [sp]
   616bc:	ldr	r1, [r0, r1, lsl #2]!
   616c0:	mvn	r1, r1
   616c4:	str	r1, [r0]
   616c8:	ldr	r0, [sp]
   616cc:	add	r0, r0, #1
   616d0:	str	r0, [sp]
   616d4:	b	616a8 <__assert_fail@plt+0x4eaf0>
   616d8:	add	sp, sp, #8
   616dc:	bx	lr
   616e0:	sub	sp, sp, #12
   616e4:	str	r0, [sp, #8]
   616e8:	str	r1, [sp, #4]
   616ec:	movw	r0, #0
   616f0:	str	r0, [sp]
   616f4:	ldr	r0, [sp]
   616f8:	cmp	r0, #8
   616fc:	bge	61730 <__assert_fail@plt+0x4eb78>
   61700:	ldr	r0, [sp, #4]
   61704:	ldr	r1, [sp]
   61708:	ldr	r0, [r0, r1, lsl #2]
   6170c:	ldr	r2, [sp, #8]
   61710:	add	r1, r2, r1, lsl #2
   61714:	ldr	r2, [r1]
   61718:	and	r0, r2, r0
   6171c:	str	r0, [r1]
   61720:	ldr	r0, [sp]
   61724:	add	r0, r0, #1
   61728:	str	r0, [sp]
   6172c:	b	616f4 <__assert_fail@plt+0x4eb3c>
   61730:	add	sp, sp, #12
   61734:	bx	lr
   61738:	sub	sp, sp, #16
   6173c:	str	r0, [sp, #8]
   61740:	str	r1, [sp, #4]
   61744:	ldr	r0, [sp, #8]
   61748:	ldr	r0, [r0, #80]	; 0x50
   6174c:	cmp	r0, #1
   61750:	bne	61760 <__assert_fail@plt+0x4eba8>
   61754:	movw	r0, #1
   61758:	str	r0, [sp, #12]
   6175c:	b	617c8 <__assert_fail@plt+0x4ec10>
   61760:	movw	r0, #1
   61764:	str	r0, [sp]
   61768:	ldr	r0, [sp, #4]
   6176c:	ldr	r1, [sp]
   61770:	add	r0, r0, r1
   61774:	ldr	r1, [sp, #8]
   61778:	ldr	r1, [r1, #28]
   6177c:	cmp	r0, r1
   61780:	bge	617c0 <__assert_fail@plt+0x4ec08>
   61784:	ldr	r0, [sp, #8]
   61788:	ldr	r0, [r0, #8]
   6178c:	ldr	r1, [sp, #4]
   61790:	ldr	r2, [sp]
   61794:	add	r1, r1, r2
   61798:	add	r0, r0, r1, lsl #2
   6179c:	ldr	r0, [r0]
   617a0:	cmn	r0, #1
   617a4:	beq	617ac <__assert_fail@plt+0x4ebf4>
   617a8:	b	617c0 <__assert_fail@plt+0x4ec08>
   617ac:	b	617b0 <__assert_fail@plt+0x4ebf8>
   617b0:	ldr	r0, [sp]
   617b4:	add	r0, r0, #1
   617b8:	str	r0, [sp]
   617bc:	b	61768 <__assert_fail@plt+0x4ebb0>
   617c0:	ldr	r0, [sp]
   617c4:	str	r0, [sp, #12]
   617c8:	ldr	r0, [sp, #12]
   617cc:	add	sp, sp, #16
   617d0:	bx	lr
   617d4:	push	{fp, lr}
   617d8:	mov	fp, sp
   617dc:	sub	sp, sp, #32
   617e0:	str	r0, [fp, #-8]
   617e4:	str	r1, [fp, #-12]
   617e8:	str	r2, [sp, #16]
   617ec:	ldr	r0, [sp, #16]
   617f0:	ldrb	r0, [r0]
   617f4:	strb	r0, [sp, #14]
   617f8:	movw	r0, #0
   617fc:	str	r0, [sp, #8]
   61800:	ldr	r0, [fp, #-12]
   61804:	ldr	r0, [r0, #56]	; 0x38
   61808:	ldr	r1, [fp, #-12]
   6180c:	ldr	r1, [r1, #40]	; 0x28
   61810:	cmp	r0, r1
   61814:	bgt	61824 <__assert_fail@plt+0x4ec6c>
   61818:	movw	r0, #7
   6181c:	str	r0, [fp, #-4]
   61820:	b	619a8 <__assert_fail@plt+0x4edf0>
   61824:	b	61828 <__assert_fail@plt+0x4ec70>
   61828:	ldr	r0, [sp, #8]
   6182c:	cmp	r0, #32
   61830:	blt	61840 <__assert_fail@plt+0x4ec88>
   61834:	movw	r0, #7
   61838:	str	r0, [fp, #-4]
   6183c:	b	619a8 <__assert_fail@plt+0x4edf0>
   61840:	ldr	r0, [sp, #16]
   61844:	ldr	r0, [r0, #4]
   61848:	and	r0, r0, #255	; 0xff
   6184c:	cmp	r0, #30
   61850:	bne	61864 <__assert_fail@plt+0x4ecac>
   61854:	ldr	r0, [fp, #-12]
   61858:	bl	619b4 <__assert_fail@plt+0x4edfc>
   6185c:	strb	r0, [sp, #15]
   61860:	b	61888 <__assert_fail@plt+0x4ecd0>
   61864:	ldr	r0, [fp, #-12]
   61868:	ldr	r0, [r0, #4]
   6186c:	ldr	r1, [fp, #-12]
   61870:	ldr	r2, [r1, #40]	; 0x28
   61874:	add	r3, r2, #1
   61878:	str	r3, [r1, #40]	; 0x28
   6187c:	add	r0, r0, r2
   61880:	ldrb	r0, [r0]
   61884:	strb	r0, [sp, #15]
   61888:	ldr	r0, [fp, #-12]
   6188c:	ldr	r0, [r0, #56]	; 0x38
   61890:	ldr	r1, [fp, #-12]
   61894:	ldr	r1, [r1, #40]	; 0x28
   61898:	cmp	r0, r1
   6189c:	bgt	618ac <__assert_fail@plt+0x4ecf4>
   618a0:	movw	r0, #7
   618a4:	str	r0, [fp, #-4]
   618a8:	b	619a8 <__assert_fail@plt+0x4edf0>
   618ac:	ldrb	r0, [sp, #15]
   618b0:	ldrb	r1, [sp, #14]
   618b4:	cmp	r0, r1
   618b8:	bne	618e4 <__assert_fail@plt+0x4ed2c>
   618bc:	ldr	r0, [fp, #-12]
   618c0:	ldr	r0, [r0, #4]
   618c4:	ldr	r1, [fp, #-12]
   618c8:	ldr	r1, [r1, #40]	; 0x28
   618cc:	add	r1, r1, #0
   618d0:	add	r0, r0, r1
   618d4:	ldrb	r0, [r0]
   618d8:	cmp	r0, #93	; 0x5d
   618dc:	bne	618e4 <__assert_fail@plt+0x4ed2c>
   618e0:	b	6190c <__assert_fail@plt+0x4ed54>
   618e4:	ldrb	r0, [sp, #15]
   618e8:	ldr	r1, [fp, #-8]
   618ec:	ldr	r1, [r1, #4]
   618f0:	ldr	r2, [sp, #8]
   618f4:	add	r1, r1, r2
   618f8:	strb	r0, [r1]
   618fc:	ldr	r0, [sp, #8]
   61900:	add	r0, r0, #1
   61904:	str	r0, [sp, #8]
   61908:	b	61828 <__assert_fail@plt+0x4ec70>
   6190c:	ldr	r0, [fp, #-12]
   61910:	ldr	r1, [r0, #40]	; 0x28
   61914:	add	r1, r1, #1
   61918:	str	r1, [r0, #40]	; 0x28
   6191c:	ldr	r0, [fp, #-8]
   61920:	ldr	r0, [r0, #4]
   61924:	ldr	r1, [sp, #8]
   61928:	mov	r2, #0
   6192c:	strb	r2, [r0, r1]
   61930:	ldr	r0, [sp, #16]
   61934:	ldrb	r0, [r0, #4]
   61938:	mov	r1, r0
   6193c:	cmp	r0, #26
   61940:	str	r1, [sp, #4]
   61944:	beq	6196c <__assert_fail@plt+0x4edb4>
   61948:	b	6194c <__assert_fail@plt+0x4ed94>
   6194c:	ldr	r0, [sp, #4]
   61950:	cmp	r0, #28
   61954:	beq	6197c <__assert_fail@plt+0x4edc4>
   61958:	b	6195c <__assert_fail@plt+0x4eda4>
   6195c:	ldr	r0, [sp, #4]
   61960:	cmp	r0, #30
   61964:	beq	6198c <__assert_fail@plt+0x4edd4>
   61968:	b	6199c <__assert_fail@plt+0x4ede4>
   6196c:	ldr	r0, [fp, #-8]
   61970:	movw	r1, #3
   61974:	str	r1, [r0]
   61978:	b	619a0 <__assert_fail@plt+0x4ede8>
   6197c:	ldr	r0, [fp, #-8]
   61980:	movw	r1, #2
   61984:	str	r1, [r0]
   61988:	b	619a0 <__assert_fail@plt+0x4ede8>
   6198c:	ldr	r0, [fp, #-8]
   61990:	movw	r1, #4
   61994:	str	r1, [r0]
   61998:	b	619a0 <__assert_fail@plt+0x4ede8>
   6199c:	b	619a0 <__assert_fail@plt+0x4ede8>
   619a0:	movw	r0, #0
   619a4:	str	r0, [fp, #-4]
   619a8:	ldr	r0, [fp, #-4]
   619ac:	mov	sp, fp
   619b0:	pop	{fp, pc}
   619b4:	push	{fp, lr}
   619b8:	mov	fp, sp
   619bc:	sub	sp, sp, #16
   619c0:	str	r0, [sp, #8]
   619c4:	ldr	r0, [sp, #8]
   619c8:	ldrsb	r0, [r0, #75]	; 0x4b
   619cc:	cmp	r0, #0
   619d0:	movw	r0, #0
   619d4:	movne	r0, #1
   619d8:	mvn	r1, #0
   619dc:	eor	r0, r0, r1
   619e0:	tst	r0, #1
   619e4:	beq	61a10 <__assert_fail@plt+0x4ee58>
   619e8:	ldr	r0, [sp, #8]
   619ec:	ldr	r0, [r0, #4]
   619f0:	ldr	r1, [sp, #8]
   619f4:	ldr	r2, [r1, #40]	; 0x28
   619f8:	add	r3, r2, #1
   619fc:	str	r3, [r1, #40]	; 0x28
   61a00:	add	r0, r0, r2
   61a04:	ldrb	r0, [r0]
   61a08:	strb	r0, [fp, #-1]
   61a0c:	b	61b50 <__assert_fail@plt+0x4ef98>
   61a10:	ldr	r0, [sp, #8]
   61a14:	ldrsb	r0, [r0, #76]	; 0x4c
   61a18:	cmp	r0, #0
   61a1c:	beq	61b20 <__assert_fail@plt+0x4ef68>
   61a20:	ldr	r0, [sp, #8]
   61a24:	ldr	r0, [r0, #40]	; 0x28
   61a28:	ldr	r1, [sp, #8]
   61a2c:	ldr	r1, [r1, #28]
   61a30:	cmp	r0, r1
   61a34:	beq	61a7c <__assert_fail@plt+0x4eec4>
   61a38:	ldr	r0, [sp, #8]
   61a3c:	ldr	r1, [r0, #8]
   61a40:	ldr	r0, [r0, #40]	; 0x28
   61a44:	add	r0, r1, r0, lsl #2
   61a48:	ldr	r0, [r0]
   61a4c:	cmn	r0, #1
   61a50:	bne	61a7c <__assert_fail@plt+0x4eec4>
   61a54:	ldr	r0, [sp, #8]
   61a58:	ldr	r0, [r0, #4]
   61a5c:	ldr	r1, [sp, #8]
   61a60:	ldr	r2, [r1, #40]	; 0x28
   61a64:	add	r3, r2, #1
   61a68:	str	r3, [r1, #40]	; 0x28
   61a6c:	add	r0, r0, r2
   61a70:	ldrb	r0, [r0]
   61a74:	strb	r0, [fp, #-1]
   61a78:	b	61b50 <__assert_fail@plt+0x4ef98>
   61a7c:	ldr	r0, [sp, #8]
   61a80:	ldr	r1, [r0, #12]
   61a84:	ldr	r0, [r0, #40]	; 0x28
   61a88:	add	r0, r1, r0, lsl #2
   61a8c:	ldr	r0, [r0]
   61a90:	str	r0, [sp, #4]
   61a94:	ldr	r0, [sp, #8]
   61a98:	ldr	r0, [r0]
   61a9c:	ldr	r1, [sp, #8]
   61aa0:	ldr	r1, [r1, #24]
   61aa4:	ldr	r2, [sp, #4]
   61aa8:	add	r1, r1, r2
   61aac:	add	r0, r0, r1
   61ab0:	ldrb	r0, [r0]
   61ab4:	str	r0, [sp]
   61ab8:	ldr	r0, [sp]
   61abc:	mvn	r1, #127	; 0x7f
   61ac0:	and	r0, r0, r1
   61ac4:	cmp	r0, #0
   61ac8:	beq	61af4 <__assert_fail@plt+0x4ef3c>
   61acc:	ldr	r0, [sp, #8]
   61ad0:	ldr	r0, [r0, #4]
   61ad4:	ldr	r1, [sp, #8]
   61ad8:	ldr	r2, [r1, #40]	; 0x28
   61adc:	add	r3, r2, #1
   61ae0:	str	r3, [r1, #40]	; 0x28
   61ae4:	add	r0, r0, r2
   61ae8:	ldrb	r0, [r0]
   61aec:	strb	r0, [fp, #-1]
   61af0:	b	61b50 <__assert_fail@plt+0x4ef98>
   61af4:	ldr	r0, [sp, #8]
   61af8:	ldr	r1, [sp, #8]
   61afc:	ldr	r1, [r1, #40]	; 0x28
   61b00:	bl	61738 <__assert_fail@plt+0x4eb80>
   61b04:	ldr	r1, [sp, #8]
   61b08:	ldr	lr, [r1, #40]	; 0x28
   61b0c:	add	r0, lr, r0
   61b10:	str	r0, [r1, #40]	; 0x28
   61b14:	ldr	r0, [sp]
   61b18:	strb	r0, [fp, #-1]
   61b1c:	b	61b50 <__assert_fail@plt+0x4ef98>
   61b20:	ldr	r0, [sp, #8]
   61b24:	ldr	r0, [r0]
   61b28:	ldr	r1, [sp, #8]
   61b2c:	ldr	r1, [r1, #24]
   61b30:	ldr	r2, [sp, #8]
   61b34:	ldr	r3, [r2, #40]	; 0x28
   61b38:	add	ip, r3, #1
   61b3c:	str	ip, [r2, #40]	; 0x28
   61b40:	add	r1, r1, r3
   61b44:	add	r0, r0, r1
   61b48:	ldrb	r0, [r0]
   61b4c:	strb	r0, [fp, #-1]
   61b50:	ldrb	r0, [fp, #-1]
   61b54:	mov	sp, fp
   61b58:	pop	{fp, pc}
   61b5c:	push	{fp, lr}
   61b60:	mov	fp, sp
   61b64:	sub	sp, sp, #16
   61b68:	strb	r0, [fp, #-1]
   61b6c:	str	r1, [sp, #8]
   61b70:	ldr	r0, [sp, #8]
   61b74:	ldr	r0, [r0, #92]	; 0x5c
   61b78:	cmp	r0, #1
   61b7c:	ble	61b90 <__assert_fail@plt+0x4efd8>
   61b80:	ldrb	r0, [fp, #-1]
   61b84:	bl	12930 <btowc@plt>
   61b88:	str	r0, [sp, #4]
   61b8c:	b	61b98 <__assert_fail@plt+0x4efe0>
   61b90:	ldrb	r0, [fp, #-1]
   61b94:	str	r0, [sp, #4]
   61b98:	ldr	r0, [sp, #4]
   61b9c:	mov	sp, fp
   61ba0:	pop	{fp, pc}
   61ba4:	push	{fp, lr}
   61ba8:	mov	fp, sp
   61bac:	sub	sp, sp, #40	; 0x28
   61bb0:	str	r0, [fp, #-8]
   61bb4:	str	r1, [fp, #-12]
   61bb8:	str	r2, [fp, #-16]
   61bbc:	mvn	r0, #0
   61bc0:	str	r0, [sp, #20]
   61bc4:	ldr	r0, [fp, #-12]
   61bc8:	ldr	r1, [fp, #-8]
   61bcc:	ldr	r2, [fp, #-16]
   61bd0:	bl	5c46c <__assert_fail@plt+0x498b4>
   61bd4:	ldr	r0, [fp, #-12]
   61bd8:	ldrb	r0, [r0]
   61bdc:	strb	r0, [sp, #19]
   61be0:	ldr	r0, [fp, #-12]
   61be4:	ldr	r0, [r0, #4]
   61be8:	and	r0, r0, #255	; 0xff
   61bec:	cmp	r0, #2
   61bf0:	bne	61c00 <__assert_fail@plt+0x4f048>
   61bf4:	mvn	r0, #1
   61bf8:	str	r0, [fp, #-4]
   61bfc:	b	61cf8 <__assert_fail@plt+0x4f140>
   61c00:	ldr	r0, [fp, #-12]
   61c04:	ldr	r0, [r0, #4]
   61c08:	and	r0, r0, #255	; 0xff
   61c0c:	cmp	r0, #24
   61c10:	beq	61c20 <__assert_fail@plt+0x4f068>
   61c14:	ldrb	r0, [sp, #19]
   61c18:	cmp	r0, #44	; 0x2c
   61c1c:	bne	61c24 <__assert_fail@plt+0x4f06c>
   61c20:	b	61cf0 <__assert_fail@plt+0x4f138>
   61c24:	ldr	r0, [fp, #-12]
   61c28:	ldr	r0, [r0, #4]
   61c2c:	and	r0, r0, #255	; 0xff
   61c30:	cmp	r0, #1
   61c34:	bne	61c60 <__assert_fail@plt+0x4f0a8>
   61c38:	ldrb	r0, [sp, #19]
   61c3c:	cmp	r0, #48	; 0x30
   61c40:	blt	61c60 <__assert_fail@plt+0x4f0a8>
   61c44:	ldrb	r0, [sp, #19]
   61c48:	movw	r1, #57	; 0x39
   61c4c:	cmp	r1, r0
   61c50:	blt	61c60 <__assert_fail@plt+0x4f0a8>
   61c54:	ldr	r0, [sp, #20]
   61c58:	cmn	r0, #2
   61c5c:	bne	61c6c <__assert_fail@plt+0x4f0b4>
   61c60:	mvn	r0, #1
   61c64:	str	r0, [sp, #12]
   61c68:	b	61ce4 <__assert_fail@plt+0x4f12c>
   61c6c:	ldr	r0, [sp, #20]
   61c70:	cmn	r0, #1
   61c74:	bne	61c88 <__assert_fail@plt+0x4f0d0>
   61c78:	ldrb	r0, [sp, #19]
   61c7c:	sub	r0, r0, #48	; 0x30
   61c80:	str	r0, [sp, #8]
   61c84:	b	61cdc <__assert_fail@plt+0x4f124>
   61c88:	ldr	r0, [sp, #20]
   61c8c:	movw	r1, #10
   61c90:	mul	r0, r0, r1
   61c94:	ldrb	r1, [sp, #19]
   61c98:	add	r0, r0, r1
   61c9c:	sub	r0, r0, #48	; 0x30
   61ca0:	movw	r1, #32768	; 0x8000
   61ca4:	cmp	r1, r0
   61ca8:	bge	61cb8 <__assert_fail@plt+0x4f100>
   61cac:	movw	r0, #32768	; 0x8000
   61cb0:	str	r0, [sp, #4]
   61cb4:	b	61cd4 <__assert_fail@plt+0x4f11c>
   61cb8:	ldr	r0, [sp, #20]
   61cbc:	movw	r1, #10
   61cc0:	mul	r0, r0, r1
   61cc4:	ldrb	r1, [sp, #19]
   61cc8:	add	r0, r0, r1
   61ccc:	sub	r0, r0, #48	; 0x30
   61cd0:	str	r0, [sp, #4]
   61cd4:	ldr	r0, [sp, #4]
   61cd8:	str	r0, [sp, #8]
   61cdc:	ldr	r0, [sp, #8]
   61ce0:	str	r0, [sp, #12]
   61ce4:	ldr	r0, [sp, #12]
   61ce8:	str	r0, [sp, #20]
   61cec:	b	61bc4 <__assert_fail@plt+0x4f00c>
   61cf0:	ldr	r0, [sp, #20]
   61cf4:	str	r0, [fp, #-4]
   61cf8:	ldr	r0, [fp, #-4]
   61cfc:	mov	sp, fp
   61d00:	pop	{fp, pc}
   61d04:	push	{fp, lr}
   61d08:	mov	fp, sp
   61d0c:	sub	sp, sp, #40	; 0x28
   61d10:	str	r0, [fp, #-8]
   61d14:	str	r1, [fp, #-12]
   61d18:	add	r0, sp, #20
   61d1c:	str	r0, [sp, #16]
   61d20:	ldr	r0, [fp, #-8]
   61d24:	ldr	r0, [r0]
   61d28:	str	r0, [sp, #12]
   61d2c:	ldr	r0, [fp, #-8]
   61d30:	str	r0, [fp, #-16]
   61d34:	ldr	r0, [fp, #-12]
   61d38:	ldr	r1, [fp, #-16]
   61d3c:	add	r3, r1, #20
   61d40:	movw	r1, #0
   61d44:	str	r1, [sp, #4]
   61d48:	ldr	r2, [sp, #4]
   61d4c:	bl	5e794 <__assert_fail@plt+0x4bbdc>
   61d50:	ldr	r1, [sp, #16]
   61d54:	str	r0, [r1]
   61d58:	ldr	r0, [sp, #16]
   61d5c:	ldr	r0, [r0]
   61d60:	movw	r1, #0
   61d64:	cmp	r0, r1
   61d68:	bne	61d78 <__assert_fail@plt+0x4f1c0>
   61d6c:	movw	r0, #0
   61d70:	str	r0, [fp, #-4]
   61d74:	b	61e88 <__assert_fail@plt+0x4f2d0>
   61d78:	ldr	r0, [sp, #12]
   61d7c:	ldr	r1, [sp, #16]
   61d80:	ldr	r1, [r1]
   61d84:	str	r0, [r1]
   61d88:	ldr	r0, [sp, #16]
   61d8c:	ldr	r0, [r0]
   61d90:	ldr	r1, [r0, #24]
   61d94:	mvn	r2, #262144	; 0x40000
   61d98:	and	r1, r1, r2
   61d9c:	orr	r1, r1, #262144	; 0x40000
   61da0:	str	r1, [r0, #24]
   61da4:	ldr	r0, [sp, #16]
   61da8:	ldr	r0, [r0]
   61dac:	str	r0, [sp, #12]
   61db0:	ldr	r0, [fp, #-16]
   61db4:	ldr	r0, [r0, #4]
   61db8:	movw	r1, #0
   61dbc:	cmp	r0, r1
   61dc0:	beq	61de0 <__assert_fail@plt+0x4f228>
   61dc4:	ldr	r0, [fp, #-16]
   61dc8:	ldr	r0, [r0, #4]
   61dcc:	str	r0, [fp, #-16]
   61dd0:	ldr	r0, [sp, #12]
   61dd4:	add	r0, r0, #4
   61dd8:	str	r0, [sp, #16]
   61ddc:	b	61e84 <__assert_fail@plt+0x4f2cc>
   61de0:	movw	r0, #0
   61de4:	str	r0, [sp, #8]
   61de8:	ldr	r0, [fp, #-16]
   61dec:	ldr	r0, [r0, #8]
   61df0:	ldr	r1, [sp, #8]
   61df4:	cmp	r0, r1
   61df8:	movw	r0, #1
   61dfc:	str	r0, [sp]
   61e00:	beq	61e20 <__assert_fail@plt+0x4f268>
   61e04:	ldr	r0, [fp, #-16]
   61e08:	ldr	r0, [r0, #8]
   61e0c:	movw	r1, #0
   61e10:	cmp	r0, r1
   61e14:	movw	r0, #0
   61e18:	moveq	r0, #1
   61e1c:	str	r0, [sp]
   61e20:	ldr	r0, [sp]
   61e24:	tst	r0, #1
   61e28:	beq	61e6c <__assert_fail@plt+0x4f2b4>
   61e2c:	ldr	r0, [fp, #-16]
   61e30:	str	r0, [sp, #8]
   61e34:	ldr	r0, [fp, #-16]
   61e38:	ldr	r0, [r0]
   61e3c:	str	r0, [fp, #-16]
   61e40:	ldr	r0, [sp, #12]
   61e44:	ldr	r0, [r0]
   61e48:	str	r0, [sp, #12]
   61e4c:	ldr	r0, [fp, #-16]
   61e50:	movw	r1, #0
   61e54:	cmp	r0, r1
   61e58:	bne	61e68 <__assert_fail@plt+0x4f2b0>
   61e5c:	ldr	r0, [sp, #20]
   61e60:	str	r0, [fp, #-4]
   61e64:	b	61e88 <__assert_fail@plt+0x4f2d0>
   61e68:	b	61de8 <__assert_fail@plt+0x4f230>
   61e6c:	ldr	r0, [fp, #-16]
   61e70:	ldr	r0, [r0, #8]
   61e74:	str	r0, [fp, #-16]
   61e78:	ldr	r0, [sp, #12]
   61e7c:	add	r0, r0, #8
   61e80:	str	r0, [sp, #16]
   61e84:	b	61d34 <__assert_fail@plt+0x4f17c>
   61e88:	ldr	r0, [fp, #-4]
   61e8c:	mov	sp, fp
   61e90:	pop	{fp, pc}
   61e94:	sub	sp, sp, #12
   61e98:	str	r0, [sp, #8]
   61e9c:	str	r1, [sp, #4]
   61ea0:	ldr	r0, [sp, #8]
   61ea4:	str	r0, [sp]
   61ea8:	ldr	r0, [sp, #4]
   61eac:	ldr	r0, [r0, #24]
   61eb0:	and	r0, r0, #255	; 0xff
   61eb4:	cmp	r0, #17
   61eb8:	bne	61ee8 <__assert_fail@plt+0x4f330>
   61ebc:	ldr	r0, [sp, #4]
   61ec0:	ldr	r0, [r0, #20]
   61ec4:	ldr	r1, [sp]
   61ec8:	cmp	r0, r1
   61ecc:	bne	61ee8 <__assert_fail@plt+0x4f330>
   61ed0:	ldr	r0, [sp, #4]
   61ed4:	ldr	r1, [r0, #24]
   61ed8:	mvn	r2, #524288	; 0x80000
   61edc:	and	r1, r1, r2
   61ee0:	orr	r1, r1, #524288	; 0x80000
   61ee4:	str	r1, [r0, #24]
   61ee8:	movw	r0, #0
   61eec:	add	sp, sp, #12
   61ef0:	bx	lr
   61ef4:	push	{fp, lr}
   61ef8:	mov	fp, sp
   61efc:	sub	sp, sp, #40	; 0x28
   61f00:	str	r0, [fp, #-8]
   61f04:	str	r1, [fp, #-12]
   61f08:	str	r2, [fp, #-16]
   61f0c:	ldr	r0, [fp, #-8]
   61f10:	str	r0, [sp, #20]
   61f14:	ldr	r0, [fp, #-12]
   61f18:	ldr	r1, [fp, #-16]
   61f1c:	ldr	r2, [sp, #20]
   61f20:	str	r0, [sp, #8]
   61f24:	mov	r0, r1
   61f28:	mov	r1, r2
   61f2c:	ldr	r2, [sp, #8]
   61f30:	blx	r2
   61f34:	str	r0, [sp, #16]
   61f38:	ldr	r0, [sp, #16]
   61f3c:	cmp	r0, #0
   61f40:	beq	61f50 <__assert_fail@plt+0x4f398>
   61f44:	ldr	r0, [sp, #16]
   61f48:	str	r0, [fp, #-4]
   61f4c:	b	62004 <__assert_fail@plt+0x4f44c>
   61f50:	ldr	r0, [sp, #20]
   61f54:	ldr	r0, [r0, #4]
   61f58:	movw	r1, #0
   61f5c:	cmp	r0, r1
   61f60:	beq	61f74 <__assert_fail@plt+0x4f3bc>
   61f64:	ldr	r0, [sp, #20]
   61f68:	ldr	r0, [r0, #4]
   61f6c:	str	r0, [sp, #20]
   61f70:	b	62000 <__assert_fail@plt+0x4f448>
   61f74:	movw	r0, #0
   61f78:	str	r0, [sp, #12]
   61f7c:	ldr	r0, [sp, #20]
   61f80:	ldr	r0, [r0, #8]
   61f84:	ldr	r1, [sp, #12]
   61f88:	cmp	r0, r1
   61f8c:	movw	r0, #1
   61f90:	str	r0, [sp, #4]
   61f94:	beq	61fb4 <__assert_fail@plt+0x4f3fc>
   61f98:	ldr	r0, [sp, #20]
   61f9c:	ldr	r0, [r0, #8]
   61fa0:	movw	r1, #0
   61fa4:	cmp	r0, r1
   61fa8:	movw	r0, #0
   61fac:	moveq	r0, #1
   61fb0:	str	r0, [sp, #4]
   61fb4:	ldr	r0, [sp, #4]
   61fb8:	tst	r0, #1
   61fbc:	beq	61ff4 <__assert_fail@plt+0x4f43c>
   61fc0:	ldr	r0, [sp, #20]
   61fc4:	str	r0, [sp, #12]
   61fc8:	ldr	r0, [sp, #20]
   61fcc:	ldr	r0, [r0]
   61fd0:	str	r0, [sp, #20]
   61fd4:	ldr	r0, [sp, #20]
   61fd8:	movw	r1, #0
   61fdc:	cmp	r0, r1
   61fe0:	bne	61ff0 <__assert_fail@plt+0x4f438>
   61fe4:	movw	r0, #0
   61fe8:	str	r0, [fp, #-4]
   61fec:	b	62004 <__assert_fail@plt+0x4f44c>
   61ff0:	b	61f7c <__assert_fail@plt+0x4f3c4>
   61ff4:	ldr	r0, [sp, #20]
   61ff8:	ldr	r0, [r0, #8]
   61ffc:	str	r0, [sp, #20]
   62000:	b	61f14 <__assert_fail@plt+0x4f35c>
   62004:	ldr	r0, [fp, #-4]
   62008:	mov	sp, fp
   6200c:	pop	{fp, pc}
   62010:	sub	sp, sp, #20
   62014:	str	r0, [sp, #16]
   62018:	str	r1, [sp, #12]
   6201c:	ldr	r0, [sp, #16]
   62020:	str	r0, [sp, #8]
   62024:	ldr	r0, [sp, #12]
   62028:	ldr	r0, [r0, #24]
   6202c:	and	r0, r0, #255	; 0xff
   62030:	cmp	r0, #4
   62034:	bne	62098 <__assert_fail@plt+0x4f4e0>
   62038:	ldr	r0, [sp, #8]
   6203c:	ldr	r0, [r0, #132]	; 0x84
   62040:	movw	r1, #0
   62044:	cmp	r0, r1
   62048:	beq	62098 <__assert_fail@plt+0x4f4e0>
   6204c:	ldr	r0, [sp, #12]
   62050:	ldr	r0, [r0, #20]
   62054:	str	r0, [sp, #4]
   62058:	ldr	r0, [sp, #8]
   6205c:	ldr	r0, [r0, #132]	; 0x84
   62060:	ldr	r1, [sp, #4]
   62064:	add	r0, r0, r1, lsl #2
   62068:	ldr	r0, [r0]
   6206c:	ldr	r1, [sp, #12]
   62070:	str	r0, [r1, #20]
   62074:	ldr	r0, [sp, #12]
   62078:	ldr	r0, [r0, #20]
   6207c:	movw	r1, #1
   62080:	lsl	r0, r1, r0
   62084:	ldr	r1, [sp, #8]
   62088:	ldr	r2, [r1, #80]	; 0x50
   6208c:	orr	r0, r2, r0
   62090:	str	r0, [r1, #80]	; 0x50
   62094:	b	62178 <__assert_fail@plt+0x4f5c0>
   62098:	ldr	r0, [sp, #12]
   6209c:	ldr	r0, [r0, #24]
   620a0:	and	r0, r0, #255	; 0xff
   620a4:	cmp	r0, #17
   620a8:	bne	62174 <__assert_fail@plt+0x4f5bc>
   620ac:	ldr	r0, [sp, #12]
   620b0:	ldr	r0, [r0, #4]
   620b4:	movw	r1, #0
   620b8:	cmp	r0, r1
   620bc:	beq	62174 <__assert_fail@plt+0x4f5bc>
   620c0:	ldr	r0, [sp, #12]
   620c4:	ldr	r0, [r0, #4]
   620c8:	ldr	r0, [r0, #24]
   620cc:	and	r0, r0, #255	; 0xff
   620d0:	cmp	r0, #17
   620d4:	bne	62174 <__assert_fail@plt+0x4f5bc>
   620d8:	ldr	r0, [sp, #12]
   620dc:	ldr	r0, [r0, #4]
   620e0:	ldr	r0, [r0, #20]
   620e4:	str	r0, [sp]
   620e8:	ldr	r0, [sp, #12]
   620ec:	ldr	r0, [r0, #4]
   620f0:	ldr	r0, [r0, #4]
   620f4:	ldr	r1, [sp, #12]
   620f8:	str	r0, [r1, #4]
   620fc:	ldr	r0, [sp, #12]
   62100:	ldr	r0, [r0, #4]
   62104:	movw	r1, #0
   62108:	cmp	r0, r1
   6210c:	beq	62120 <__assert_fail@plt+0x4f568>
   62110:	ldr	r0, [sp, #12]
   62114:	ldr	r1, [sp, #12]
   62118:	ldr	r1, [r1, #4]
   6211c:	str	r0, [r1]
   62120:	ldr	r0, [sp, #8]
   62124:	ldr	r0, [r0, #132]	; 0x84
   62128:	ldr	r1, [sp, #12]
   6212c:	ldr	r1, [r1, #20]
   62130:	ldr	r1, [r0, r1, lsl #2]
   62134:	ldr	r2, [sp]
   62138:	add	r0, r0, r2, lsl #2
   6213c:	str	r1, [r0]
   62140:	ldr	r0, [sp]
   62144:	cmp	r0, #32
   62148:	bge	62170 <__assert_fail@plt+0x4f5b8>
   6214c:	ldr	r0, [sp]
   62150:	movw	r1, #1
   62154:	lsl	r0, r1, r0
   62158:	mvn	r1, #0
   6215c:	eor	r0, r0, r1
   62160:	ldr	r1, [sp, #8]
   62164:	ldr	r2, [r1, #80]	; 0x50
   62168:	and	r0, r2, r0
   6216c:	str	r0, [r1, #80]	; 0x50
   62170:	b	62174 <__assert_fail@plt+0x4f5bc>
   62174:	b	62178 <__assert_fail@plt+0x4f5c0>
   62178:	movw	r0, #0
   6217c:	add	sp, sp, #20
   62180:	bx	lr
   62184:	push	{fp, lr}
   62188:	mov	fp, sp
   6218c:	sub	sp, sp, #16
   62190:	str	r0, [fp, #-4]
   62194:	str	r1, [sp, #8]
   62198:	ldr	r0, [fp, #-4]
   6219c:	str	r0, [sp, #4]
   621a0:	movw	r0, #0
   621a4:	str	r0, [sp]
   621a8:	ldr	r1, [sp, #8]
   621ac:	ldr	r1, [r1, #4]
   621b0:	cmp	r1, r0
   621b4:	beq	62214 <__assert_fail@plt+0x4f65c>
   621b8:	ldr	r0, [sp, #8]
   621bc:	ldr	r0, [r0, #4]
   621c0:	ldr	r0, [r0, #24]
   621c4:	and	r0, r0, #255	; 0xff
   621c8:	cmp	r0, #17
   621cc:	bne	62214 <__assert_fail@plt+0x4f65c>
   621d0:	ldr	r1, [sp, #4]
   621d4:	ldr	r0, [sp, #8]
   621d8:	ldr	r2, [r0, #4]
   621dc:	mov	r0, sp
   621e0:	bl	62988 <__assert_fail@plt+0x4fdd0>
   621e4:	ldr	r1, [sp, #8]
   621e8:	str	r0, [r1, #4]
   621ec:	ldr	r0, [sp, #8]
   621f0:	ldr	r0, [r0, #4]
   621f4:	movw	r1, #0
   621f8:	cmp	r0, r1
   621fc:	beq	62210 <__assert_fail@plt+0x4f658>
   62200:	ldr	r0, [sp, #8]
   62204:	ldr	r1, [sp, #8]
   62208:	ldr	r1, [r1, #4]
   6220c:	str	r0, [r1]
   62210:	b	62214 <__assert_fail@plt+0x4f65c>
   62214:	ldr	r0, [sp, #8]
   62218:	ldr	r0, [r0, #8]
   6221c:	movw	r1, #0
   62220:	cmp	r0, r1
   62224:	beq	62284 <__assert_fail@plt+0x4f6cc>
   62228:	ldr	r0, [sp, #8]
   6222c:	ldr	r0, [r0, #8]
   62230:	ldr	r0, [r0, #24]
   62234:	and	r0, r0, #255	; 0xff
   62238:	cmp	r0, #17
   6223c:	bne	62284 <__assert_fail@plt+0x4f6cc>
   62240:	ldr	r1, [sp, #4]
   62244:	ldr	r0, [sp, #8]
   62248:	ldr	r2, [r0, #8]
   6224c:	mov	r0, sp
   62250:	bl	62988 <__assert_fail@plt+0x4fdd0>
   62254:	ldr	r1, [sp, #8]
   62258:	str	r0, [r1, #8]
   6225c:	ldr	r0, [sp, #8]
   62260:	ldr	r0, [r0, #8]
   62264:	movw	r1, #0
   62268:	cmp	r0, r1
   6226c:	beq	62280 <__assert_fail@plt+0x4f6c8>
   62270:	ldr	r0, [sp, #8]
   62274:	ldr	r1, [sp, #8]
   62278:	ldr	r1, [r1, #8]
   6227c:	str	r0, [r1]
   62280:	b	62284 <__assert_fail@plt+0x4f6cc>
   62284:	ldr	r0, [sp]
   62288:	mov	sp, fp
   6228c:	pop	{fp, pc}
   62290:	push	{fp, lr}
   62294:	mov	fp, sp
   62298:	sub	sp, sp, #24
   6229c:	str	r0, [fp, #-8]
   622a0:	str	r1, [sp, #12]
   622a4:	ldr	r0, [fp, #-8]
   622a8:	str	r0, [sp, #8]
   622ac:	ldr	r0, [sp, #12]
   622b0:	ldr	r0, [r0, #24]
   622b4:	and	r0, r0, #255	; 0xff
   622b8:	cmp	r0, #16
   622bc:	bne	622ec <__assert_fail@plt+0x4f734>
   622c0:	ldr	r0, [sp, #12]
   622c4:	ldr	r0, [r0, #4]
   622c8:	ldr	r0, [r0, #12]
   622cc:	ldr	r1, [sp, #12]
   622d0:	str	r0, [r1, #12]
   622d4:	ldr	r0, [sp, #12]
   622d8:	ldr	r0, [r0, #4]
   622dc:	ldr	r0, [r0, #28]
   622e0:	ldr	r1, [sp, #12]
   622e4:	str	r0, [r1, #28]
   622e8:	b	62388 <__assert_fail@plt+0x4f7d0>
   622ec:	ldr	r0, [sp, #12]
   622f0:	str	r0, [r0, #12]
   622f4:	ldr	r0, [sp, #8]
   622f8:	ldr	r1, [sp, #12]
   622fc:	ldr	r2, [r1, #20]
   62300:	ldr	r1, [r1, #24]
   62304:	str	r1, [sp, #4]
   62308:	mov	r1, r2
   6230c:	ldr	r2, [sp, #4]
   62310:	bl	62bb0 <__assert_fail@plt+0x4fff8>
   62314:	ldr	r1, [sp, #12]
   62318:	str	r0, [r1, #28]
   6231c:	ldr	r0, [sp, #12]
   62320:	ldr	r0, [r0, #28]
   62324:	cmn	r0, #1
   62328:	bne	62338 <__assert_fail@plt+0x4f780>
   6232c:	movw	r0, #12
   62330:	str	r0, [fp, #-4]
   62334:	b	62390 <__assert_fail@plt+0x4f7d8>
   62338:	ldr	r0, [sp, #12]
   6233c:	ldr	r0, [r0, #24]
   62340:	and	r0, r0, #255	; 0xff
   62344:	cmp	r0, #12
   62348:	bne	62384 <__assert_fail@plt+0x4f7cc>
   6234c:	ldr	r0, [pc, #72]	; 6239c <__assert_fail@plt+0x4f7e4>
   62350:	ldr	r1, [sp, #12]
   62354:	ldr	r2, [r1, #20]
   62358:	ldr	r1, [r1, #28]
   6235c:	ldr	r3, [sp, #8]
   62360:	ldr	r3, [r3]
   62364:	add	r1, r3, r1, lsl #3
   62368:	ldr	r3, [r1, #4]
   6236c:	movw	ip, #1023	; 0x3ff
   62370:	and	r2, r2, ip
   62374:	lsl	r2, r2, #8
   62378:	and	r0, r3, r0
   6237c:	orr	r0, r0, r2
   62380:	str	r0, [r1, #4]
   62384:	b	62388 <__assert_fail@plt+0x4f7d0>
   62388:	movw	r0, #0
   6238c:	str	r0, [fp, #-4]
   62390:	ldr	r0, [fp, #-4]
   62394:	mov	sp, fp
   62398:	pop	{fp, pc}
   6239c:			; <UNDEFINED> instruction: 0xfffc00ff
   623a0:	sub	sp, sp, #12
   623a4:	str	r0, [sp, #8]
   623a8:	str	r1, [sp, #4]
   623ac:	ldr	r0, [sp, #4]
   623b0:	ldrb	r0, [r0, #24]
   623b4:	mov	r1, r0
   623b8:	cmp	r0, #11
   623bc:	str	r1, [sp]
   623c0:	beq	623d8 <__assert_fail@plt+0x4f820>
   623c4:	b	623c8 <__assert_fail@plt+0x4f810>
   623c8:	ldr	r0, [sp]
   623cc:	cmp	r0, #16
   623d0:	beq	623ec <__assert_fail@plt+0x4f834>
   623d4:	b	6241c <__assert_fail@plt+0x4f864>
   623d8:	ldr	r0, [sp, #4]
   623dc:	ldr	r1, [sp, #4]
   623e0:	ldr	r1, [r1, #4]
   623e4:	str	r0, [r1, #16]
   623e8:	b	62470 <__assert_fail@plt+0x4f8b8>
   623ec:	ldr	r0, [sp, #4]
   623f0:	ldr	r0, [r0, #8]
   623f4:	ldr	r0, [r0, #12]
   623f8:	ldr	r1, [sp, #4]
   623fc:	ldr	r1, [r1, #4]
   62400:	str	r0, [r1, #16]
   62404:	ldr	r0, [sp, #4]
   62408:	ldr	r0, [r0, #16]
   6240c:	ldr	r1, [sp, #4]
   62410:	ldr	r1, [r1, #8]
   62414:	str	r0, [r1, #16]
   62418:	b	62470 <__assert_fail@plt+0x4f8b8>
   6241c:	ldr	r0, [sp, #4]
   62420:	ldr	r0, [r0, #4]
   62424:	movw	r1, #0
   62428:	cmp	r0, r1
   6242c:	beq	62444 <__assert_fail@plt+0x4f88c>
   62430:	ldr	r0, [sp, #4]
   62434:	ldr	r0, [r0, #16]
   62438:	ldr	r1, [sp, #4]
   6243c:	ldr	r1, [r1, #4]
   62440:	str	r0, [r1, #16]
   62444:	ldr	r0, [sp, #4]
   62448:	ldr	r0, [r0, #8]
   6244c:	movw	r1, #0
   62450:	cmp	r0, r1
   62454:	beq	6246c <__assert_fail@plt+0x4f8b4>
   62458:	ldr	r0, [sp, #4]
   6245c:	ldr	r0, [r0, #16]
   62460:	ldr	r1, [sp, #4]
   62464:	ldr	r1, [r1, #8]
   62468:	str	r0, [r1, #16]
   6246c:	b	62470 <__assert_fail@plt+0x4f8b8>
   62470:	movw	r0, #0
   62474:	add	sp, sp, #12
   62478:	bx	lr
   6247c:	push	{fp, lr}
   62480:	mov	fp, sp
   62484:	sub	sp, sp, #32
   62488:	str	r0, [fp, #-4]
   6248c:	str	r1, [fp, #-8]
   62490:	ldr	r0, [fp, #-4]
   62494:	str	r0, [fp, #-12]
   62498:	ldr	r0, [fp, #-8]
   6249c:	ldr	r0, [r0, #28]
   624a0:	str	r0, [sp, #16]
   624a4:	mov	r0, #0
   624a8:	str	r0, [sp, #12]
   624ac:	ldr	r0, [fp, #-8]
   624b0:	ldrb	r0, [r0, #24]
   624b4:	sub	r0, r0, #2
   624b8:	cmp	r0, #14
   624bc:	str	r0, [sp]
   624c0:	bhi	6269c <__assert_fail@plt+0x4fae4>
   624c4:	add	r0, pc, #8
   624c8:	ldr	r1, [sp]
   624cc:	ldr	r0, [r0, r1, lsl #2]
   624d0:	mov	pc, r0
   624d4:	andeq	r2, r6, r4, lsl r5
   624d8:	muleq	r6, ip, r6
   624dc:	andeq	r2, r6, ip, lsr r6
   624e0:	muleq	r6, ip, r6
   624e4:	muleq	r6, ip, r6
   624e8:	muleq	r6, ip, r6
   624ec:	andeq	r2, r6, ip, lsl #12
   624f0:	andeq	r2, r6, ip, lsl #12
   624f4:	andeq	r2, r6, r0, lsr r5
   624f8:	andeq	r2, r6, r0, lsr r5
   624fc:	andeq	r2, r6, ip, lsl #12
   62500:	muleq	r6, ip, r6
   62504:	muleq	r6, ip, r6
   62508:	muleq	r6, ip, r6
   6250c:	andeq	r2, r6, r0, lsl r5
   62510:	b	626d8 <__assert_fail@plt+0x4fb20>
   62514:	ldr	r0, [fp, #-8]
   62518:	ldr	r0, [r0, #16]
   6251c:	movw	r1, #0
   62520:	cmp	r0, r1
   62524:	bne	6252c <__assert_fail@plt+0x4f974>
   62528:	b	6252c <__assert_fail@plt+0x4f974>
   6252c:	b	626d8 <__assert_fail@plt+0x4fb20>
   62530:	ldr	r0, [fp, #-12]
   62534:	ldrb	r1, [r0, #88]	; 0x58
   62538:	bic	r1, r1, #1
   6253c:	movw	r2, #1
   62540:	orr	r1, r1, r2
   62544:	strb	r1, [r0, #88]	; 0x58
   62548:	ldr	r0, [fp, #-8]
   6254c:	ldr	r0, [r0, #4]
   62550:	movw	r1, #0
   62554:	cmp	r0, r1
   62558:	beq	62574 <__assert_fail@plt+0x4f9bc>
   6255c:	ldr	r0, [fp, #-8]
   62560:	ldr	r0, [r0, #4]
   62564:	ldr	r0, [r0, #12]
   62568:	ldr	r0, [r0, #28]
   6256c:	str	r0, [sp, #8]
   62570:	b	62584 <__assert_fail@plt+0x4f9cc>
   62574:	ldr	r0, [fp, #-8]
   62578:	ldr	r0, [r0, #16]
   6257c:	ldr	r0, [r0, #28]
   62580:	str	r0, [sp, #8]
   62584:	ldr	r0, [fp, #-8]
   62588:	ldr	r0, [r0, #8]
   6258c:	movw	r1, #0
   62590:	cmp	r0, r1
   62594:	beq	625b0 <__assert_fail@plt+0x4f9f8>
   62598:	ldr	r0, [fp, #-8]
   6259c:	ldr	r0, [r0, #8]
   625a0:	ldr	r0, [r0, #12]
   625a4:	ldr	r0, [r0, #28]
   625a8:	str	r0, [sp, #4]
   625ac:	b	625c0 <__assert_fail@plt+0x4fa08>
   625b0:	ldr	r0, [fp, #-8]
   625b4:	ldr	r0, [r0, #16]
   625b8:	ldr	r0, [r0, #28]
   625bc:	str	r0, [sp, #4]
   625c0:	ldr	r0, [sp, #8]
   625c4:	cmn	r0, #1
   625c8:	ble	625d0 <__assert_fail@plt+0x4fa18>
   625cc:	b	625d0 <__assert_fail@plt+0x4fa18>
   625d0:	ldr	r0, [sp, #4]
   625d4:	cmn	r0, #1
   625d8:	ble	625e0 <__assert_fail@plt+0x4fa28>
   625dc:	b	625e0 <__assert_fail@plt+0x4fa28>
   625e0:	ldr	r0, [fp, #-12]
   625e4:	ldr	r0, [r0, #20]
   625e8:	ldr	r1, [sp, #16]
   625ec:	movw	r2, #12
   625f0:	mul	r1, r1, r2
   625f4:	add	r0, r0, r1
   625f8:	ldr	r1, [sp, #8]
   625fc:	ldr	r2, [sp, #4]
   62600:	bl	62ecc <__assert_fail@plt+0x50314>
   62604:	str	r0, [sp, #12]
   62608:	b	626d8 <__assert_fail@plt+0x4fb20>
   6260c:	ldr	r0, [fp, #-12]
   62610:	ldr	r0, [r0, #20]
   62614:	ldr	r1, [sp, #16]
   62618:	movw	r2, #12
   6261c:	mul	r1, r1, r2
   62620:	add	r0, r0, r1
   62624:	ldr	r1, [fp, #-8]
   62628:	ldr	r1, [r1, #16]
   6262c:	ldr	r1, [r1, #28]
   62630:	bl	62fc8 <__assert_fail@plt+0x50410>
   62634:	str	r0, [sp, #12]
   62638:	b	626d8 <__assert_fail@plt+0x4fb20>
   6263c:	ldr	r0, [fp, #-8]
   62640:	ldr	r0, [r0, #16]
   62644:	ldr	r0, [r0, #28]
   62648:	ldr	r1, [fp, #-12]
   6264c:	ldr	r1, [r1, #12]
   62650:	ldr	r2, [sp, #16]
   62654:	add	r1, r1, r2, lsl #2
   62658:	str	r0, [r1]
   6265c:	ldr	r0, [fp, #-8]
   62660:	ldr	r0, [r0, #24]
   62664:	and	r0, r0, #255	; 0xff
   62668:	cmp	r0, #4
   6266c:	bne	62698 <__assert_fail@plt+0x4fae0>
   62670:	ldr	r0, [fp, #-12]
   62674:	ldr	r1, [r0, #12]
   62678:	ldr	r0, [r0, #20]
   6267c:	ldr	r2, [sp, #16]
   62680:	add	r3, r2, r2, lsl #1
   62684:	add	r0, r0, r3, lsl #2
   62688:	add	r1, r1, r2, lsl #2
   6268c:	ldr	r1, [r1]
   62690:	bl	62fc8 <__assert_fail@plt+0x50410>
   62694:	str	r0, [sp, #12]
   62698:	b	626d8 <__assert_fail@plt+0x4fb20>
   6269c:	ldr	r0, [fp, #-8]
   626a0:	ldr	r0, [r0, #24]
   626a4:	and	r0, r0, #255	; 0xff
   626a8:	and	r0, r0, #8
   626ac:	cmp	r0, #0
   626b0:	bne	626b8 <__assert_fail@plt+0x4fb00>
   626b4:	b	626b8 <__assert_fail@plt+0x4fb00>
   626b8:	ldr	r0, [fp, #-8]
   626bc:	ldr	r0, [r0, #16]
   626c0:	ldr	r0, [r0, #28]
   626c4:	ldr	r1, [fp, #-12]
   626c8:	ldr	r1, [r1, #12]
   626cc:	ldr	r2, [sp, #16]
   626d0:	add	r1, r1, r2, lsl #2
   626d4:	str	r0, [r1]
   626d8:	ldr	r0, [sp, #12]
   626dc:	mov	sp, fp
   626e0:	pop	{fp, pc}
   626e4:	push	{fp, lr}
   626e8:	mov	fp, sp
   626ec:	sub	sp, sp, #32
   626f0:	str	r0, [fp, #-8]
   626f4:	ldr	r0, [fp, #-8]
   626f8:	ldr	r0, [r0, #8]
   626fc:	cmp	r0, #0
   62700:	bls	62708 <__assert_fail@plt+0x4fb50>
   62704:	b	62708 <__assert_fail@plt+0x4fb50>
   62708:	movw	r0, #0
   6270c:	strb	r0, [fp, #-13]
   62710:	movw	r0, #0
   62714:	str	r0, [fp, #-12]
   62718:	ldr	r0, [fp, #-12]
   6271c:	ldr	r1, [fp, #-8]
   62720:	ldr	r1, [r1, #8]
   62724:	cmp	r0, r1
   62728:	bne	6274c <__assert_fail@plt+0x4fb94>
   6272c:	ldrb	r0, [fp, #-13]
   62730:	tst	r0, #1
   62734:	bne	6273c <__assert_fail@plt+0x4fb84>
   62738:	b	62818 <__assert_fail@plt+0x4fc60>
   6273c:	movw	r0, #0
   62740:	strb	r0, [fp, #-13]
   62744:	movw	r0, #0
   62748:	str	r0, [fp, #-12]
   6274c:	ldr	r0, [fp, #-8]
   62750:	ldr	r0, [r0, #24]
   62754:	ldr	r1, [fp, #-12]
   62758:	movw	r2, #12
   6275c:	mul	r1, r1, r2
   62760:	add	r0, r0, r1
   62764:	ldr	r0, [r0, #4]
   62768:	cmn	r0, #1
   6276c:	beq	62774 <__assert_fail@plt+0x4fbbc>
   62770:	b	62774 <__assert_fail@plt+0x4fbbc>
   62774:	ldr	r0, [fp, #-8]
   62778:	ldr	r0, [r0, #24]
   6277c:	ldr	r1, [fp, #-12]
   62780:	movw	r2, #12
   62784:	mul	r1, r1, r2
   62788:	add	r0, r0, r1
   6278c:	ldr	r0, [r0, #4]
   62790:	cmp	r0, #0
   62794:	beq	6279c <__assert_fail@plt+0x4fbe4>
   62798:	b	62808 <__assert_fail@plt+0x4fc50>
   6279c:	ldr	r1, [fp, #-8]
   627a0:	ldr	r2, [fp, #-12]
   627a4:	mov	r0, sp
   627a8:	movw	r3, #1
   627ac:	and	r3, r3, #1
   627b0:	bl	63058 <__assert_fail@plt+0x504a0>
   627b4:	str	r0, [sp, #12]
   627b8:	ldr	r0, [sp, #12]
   627bc:	cmp	r0, #0
   627c0:	beq	627d0 <__assert_fail@plt+0x4fc18>
   627c4:	ldr	r0, [sp, #12]
   627c8:	str	r0, [fp, #-4]
   627cc:	b	62820 <__assert_fail@plt+0x4fc68>
   627d0:	ldr	r0, [fp, #-8]
   627d4:	ldr	r0, [r0, #24]
   627d8:	ldr	r1, [fp, #-12]
   627dc:	movw	r2, #12
   627e0:	mul	r1, r1, r2
   627e4:	add	r0, r0, r1
   627e8:	ldr	r0, [r0, #4]
   627ec:	cmp	r0, #0
   627f0:	bne	62804 <__assert_fail@plt+0x4fc4c>
   627f4:	movw	r0, #1
   627f8:	strb	r0, [fp, #-13]
   627fc:	ldr	r0, [sp, #8]
   62800:	bl	50c68 <__assert_fail@plt+0x3e0b0>
   62804:	b	62808 <__assert_fail@plt+0x4fc50>
   62808:	ldr	r0, [fp, #-12]
   6280c:	add	r0, r0, #1
   62810:	str	r0, [fp, #-12]
   62814:	b	62718 <__assert_fail@plt+0x4fb60>
   62818:	movw	r0, #0
   6281c:	str	r0, [fp, #-4]
   62820:	ldr	r0, [fp, #-4]
   62824:	mov	sp, fp
   62828:	pop	{fp, pc}
   6282c:	push	{fp, lr}
   62830:	mov	fp, sp
   62834:	sub	sp, sp, #24
   62838:	str	r0, [fp, #-8]
   6283c:	movw	r0, #0
   62840:	str	r0, [sp, #8]
   62844:	ldr	r0, [sp, #8]
   62848:	ldr	r1, [fp, #-8]
   6284c:	ldr	r1, [r1, #8]
   62850:	cmp	r0, r1
   62854:	bcs	6288c <__assert_fail@plt+0x4fcd4>
   62858:	ldr	r0, [fp, #-8]
   6285c:	ldr	r0, [r0, #28]
   62860:	ldr	r1, [sp, #8]
   62864:	movw	r2, #12
   62868:	mul	r1, r1, r2
   6286c:	add	r0, r0, r1
   62870:	movw	r1, #0
   62874:	and	r1, r1, #255	; 0xff
   62878:	bl	12900 <memset@plt>
   6287c:	ldr	r0, [sp, #8]
   62880:	add	r0, r0, #1
   62884:	str	r0, [sp, #8]
   62888:	b	62844 <__assert_fail@plt+0x4fc8c>
   6288c:	movw	r0, #0
   62890:	str	r0, [sp, #12]
   62894:	ldr	r0, [sp, #12]
   62898:	ldr	r1, [fp, #-8]
   6289c:	ldr	r1, [r1, #8]
   628a0:	cmp	r0, r1
   628a4:	bcs	62974 <__assert_fail@plt+0x4fdbc>
   628a8:	ldr	r0, [fp, #-8]
   628ac:	ldr	r0, [r0, #24]
   628b0:	ldr	r1, [sp, #12]
   628b4:	movw	r2, #12
   628b8:	mul	r1, r1, r2
   628bc:	add	r0, r0, r1
   628c0:	ldr	r0, [r0, #8]
   628c4:	str	r0, [sp]
   628c8:	movw	r0, #0
   628cc:	str	r0, [sp, #8]
   628d0:	ldr	r0, [sp, #8]
   628d4:	ldr	r1, [fp, #-8]
   628d8:	ldr	r1, [r1, #24]
   628dc:	ldr	r2, [sp, #12]
   628e0:	movw	r3, #12
   628e4:	mul	r2, r2, r3
   628e8:	add	r1, r1, r2
   628ec:	ldr	r1, [r1, #4]
   628f0:	cmp	r0, r1
   628f4:	bge	62960 <__assert_fail@plt+0x4fda8>
   628f8:	ldr	r0, [fp, #-8]
   628fc:	ldr	r0, [r0, #28]
   62900:	ldr	r1, [sp]
   62904:	ldr	r2, [sp, #8]
   62908:	add	r1, r1, r2, lsl #2
   6290c:	ldr	r1, [r1]
   62910:	movw	r2, #12
   62914:	mul	r1, r1, r2
   62918:	add	r0, r0, r1
   6291c:	ldr	r1, [sp, #12]
   62920:	bl	641bc <__assert_fail@plt+0x51604>
   62924:	and	r0, r0, #1
   62928:	strb	r0, [sp, #7]
   6292c:	ldrb	r0, [sp, #7]
   62930:	mvn	r1, #0
   62934:	eor	r0, r0, r1
   62938:	tst	r0, #1
   6293c:	beq	6294c <__assert_fail@plt+0x4fd94>
   62940:	movw	r0, #12
   62944:	str	r0, [fp, #-4]
   62948:	b	6297c <__assert_fail@plt+0x4fdc4>
   6294c:	b	62950 <__assert_fail@plt+0x4fd98>
   62950:	ldr	r0, [sp, #8]
   62954:	add	r0, r0, #1
   62958:	str	r0, [sp, #8]
   6295c:	b	628d0 <__assert_fail@plt+0x4fd18>
   62960:	b	62964 <__assert_fail@plt+0x4fdac>
   62964:	ldr	r0, [sp, #12]
   62968:	add	r0, r0, #1
   6296c:	str	r0, [sp, #12]
   62970:	b	62894 <__assert_fail@plt+0x4fcdc>
   62974:	movw	r0, #0
   62978:	str	r0, [fp, #-4]
   6297c:	ldr	r0, [fp, #-4]
   62980:	mov	sp, fp
   62984:	pop	{fp, pc}
   62988:	push	{fp, lr}
   6298c:	mov	fp, sp
   62990:	sub	sp, sp, #56	; 0x38
   62994:	str	r0, [fp, #-8]
   62998:	str	r1, [fp, #-12]
   6299c:	str	r2, [fp, #-16]
   629a0:	ldr	r0, [fp, #-12]
   629a4:	ldr	r0, [r0]
   629a8:	str	r0, [fp, #-20]	; 0xffffffec
   629ac:	ldr	r0, [fp, #-16]
   629b0:	ldr	r0, [r0, #4]
   629b4:	str	r0, [fp, #-24]	; 0xffffffe8
   629b8:	ldr	r0, [fp, #-12]
   629bc:	ldrb	r0, [r0, #28]
   629c0:	ubfx	r0, r0, #4, #1
   629c4:	and	r0, r0, #255	; 0xff
   629c8:	cmp	r0, #0
   629cc:	beq	62a28 <__assert_fail@plt+0x4fe70>
   629d0:	ldr	r0, [fp, #-16]
   629d4:	ldr	r0, [r0, #4]
   629d8:	movw	r1, #0
   629dc:	cmp	r0, r1
   629e0:	beq	62a28 <__assert_fail@plt+0x4fe70>
   629e4:	ldr	r0, [fp, #-16]
   629e8:	ldr	r0, [r0, #20]
   629ec:	cmp	r0, #32
   629f0:	bge	62a18 <__assert_fail@plt+0x4fe60>
   629f4:	ldr	r0, [fp, #-20]	; 0xffffffec
   629f8:	ldr	r0, [r0, #80]	; 0x50
   629fc:	ldr	r1, [fp, #-16]
   62a00:	ldr	r1, [r1, #20]
   62a04:	movw	r2, #1
   62a08:	lsl	r1, r2, r1
   62a0c:	and	r0, r0, r1
   62a10:	cmp	r0, #0
   62a14:	bne	62a28 <__assert_fail@plt+0x4fe70>
   62a18:	ldr	r0, [fp, #-16]
   62a1c:	ldr	r0, [r0, #4]
   62a20:	str	r0, [fp, #-4]
   62a24:	b	62ba4 <__assert_fail@plt+0x4ffec>
   62a28:	ldr	r0, [fp, #-20]	; 0xffffffec
   62a2c:	movw	r1, #0
   62a30:	str	r1, [sp, #12]
   62a34:	ldr	r2, [sp, #12]
   62a38:	movw	r3, #8
   62a3c:	bl	5c704 <__assert_fail@plt+0x49b4c>
   62a40:	str	r0, [sp, #28]
   62a44:	ldr	r0, [fp, #-20]	; 0xffffffec
   62a48:	movw	r1, #0
   62a4c:	str	r1, [sp, #8]
   62a50:	ldr	r2, [sp, #8]
   62a54:	movw	r3, #9
   62a58:	bl	5c704 <__assert_fail@plt+0x49b4c>
   62a5c:	str	r0, [sp, #24]
   62a60:	ldr	r0, [fp, #-24]	; 0xffffffe8
   62a64:	movw	r1, #0
   62a68:	cmp	r0, r1
   62a6c:	beq	62a8c <__assert_fail@plt+0x4fed4>
   62a70:	ldr	r0, [fp, #-20]	; 0xffffffec
   62a74:	ldr	r1, [fp, #-24]	; 0xffffffe8
   62a78:	ldr	r2, [sp, #24]
   62a7c:	movw	r3, #16
   62a80:	bl	5c704 <__assert_fail@plt+0x49b4c>
   62a84:	str	r0, [sp, #4]
   62a88:	b	62a94 <__assert_fail@plt+0x4fedc>
   62a8c:	ldr	r0, [sp, #24]
   62a90:	str	r0, [sp, #4]
   62a94:	ldr	r0, [sp, #4]
   62a98:	str	r0, [sp, #20]
   62a9c:	ldr	r0, [fp, #-20]	; 0xffffffec
   62aa0:	ldr	r1, [sp, #28]
   62aa4:	ldr	r2, [sp, #20]
   62aa8:	movw	r3, #16
   62aac:	bl	5c704 <__assert_fail@plt+0x49b4c>
   62ab0:	str	r0, [sp, #16]
   62ab4:	ldr	r0, [sp, #16]
   62ab8:	movw	r1, #0
   62abc:	cmp	r0, r1
   62ac0:	movw	r0, #1
   62ac4:	str	r0, [sp]
   62ac8:	beq	62b14 <__assert_fail@plt+0x4ff5c>
   62acc:	ldr	r0, [sp, #20]
   62ad0:	movw	r1, #0
   62ad4:	cmp	r0, r1
   62ad8:	movw	r0, #1
   62adc:	str	r0, [sp]
   62ae0:	beq	62b14 <__assert_fail@plt+0x4ff5c>
   62ae4:	ldr	r0, [sp, #28]
   62ae8:	movw	r1, #0
   62aec:	cmp	r0, r1
   62af0:	movw	r0, #1
   62af4:	str	r0, [sp]
   62af8:	beq	62b14 <__assert_fail@plt+0x4ff5c>
   62afc:	ldr	r0, [sp, #24]
   62b00:	movw	r1, #0
   62b04:	cmp	r0, r1
   62b08:	movw	r0, #0
   62b0c:	moveq	r0, #1
   62b10:	str	r0, [sp]
   62b14:	ldr	r0, [sp]
   62b18:	tst	r0, #1
   62b1c:	beq	62b38 <__assert_fail@plt+0x4ff80>
   62b20:	ldr	r0, [fp, #-8]
   62b24:	movw	r1, #12
   62b28:	str	r1, [r0]
   62b2c:	movw	r0, #0
   62b30:	str	r0, [fp, #-4]
   62b34:	b	62ba4 <__assert_fail@plt+0x4ffec>
   62b38:	ldr	r0, [fp, #-16]
   62b3c:	ldr	r0, [r0, #20]
   62b40:	ldr	r1, [sp, #24]
   62b44:	str	r0, [r1, #20]
   62b48:	ldr	r1, [sp, #28]
   62b4c:	str	r0, [r1, #20]
   62b50:	ldr	r0, [fp, #-16]
   62b54:	ldr	r0, [r0, #24]
   62b58:	lsr	r0, r0, #19
   62b5c:	and	r0, r0, #1
   62b60:	ldr	r1, [sp, #24]
   62b64:	ldr	r2, [r1, #24]
   62b68:	and	r0, r0, #1
   62b6c:	lsl	r3, r0, #19
   62b70:	mvn	ip, #524288	; 0x80000
   62b74:	and	r2, r2, ip
   62b78:	orr	r2, r2, r3
   62b7c:	str	r2, [r1, #24]
   62b80:	ldr	r1, [sp, #28]
   62b84:	ldr	r2, [r1, #24]
   62b88:	and	r0, r0, #1
   62b8c:	lsl	r0, r0, #19
   62b90:	and	r2, r2, ip
   62b94:	orr	r0, r2, r0
   62b98:	str	r0, [r1, #24]
   62b9c:	ldr	r0, [sp, #16]
   62ba0:	str	r0, [fp, #-4]
   62ba4:	ldr	r0, [fp, #-4]
   62ba8:	mov	sp, fp
   62bac:	pop	{fp, pc}
   62bb0:	push	{fp, lr}
   62bb4:	mov	fp, sp
   62bb8:	sub	sp, sp, #64	; 0x40
   62bbc:	str	r1, [fp, #-12]
   62bc0:	str	r2, [fp, #-8]
   62bc4:	str	r0, [fp, #-16]
   62bc8:	ldr	r0, [fp, #-16]
   62bcc:	ldr	r0, [r0, #8]
   62bd0:	ldr	r1, [fp, #-16]
   62bd4:	ldr	r1, [r1, #4]
   62bd8:	cmp	r0, r1
   62bdc:	bcc	62d90 <__assert_fail@plt+0x501d8>
   62be0:	ldr	r0, [pc, #732]	; 62ec4 <__assert_fail@plt+0x5030c>
   62be4:	ldr	r1, [fp, #-16]
   62be8:	ldr	r1, [r1, #4]
   62bec:	lsl	r1, r1, #1
   62bf0:	str	r1, [fp, #-20]	; 0xffffffec
   62bf4:	movw	r1, #12
   62bf8:	str	r1, [sp, #20]
   62bfc:	ldr	r1, [fp, #-20]	; 0xffffffec
   62c00:	cmp	r0, r1
   62c04:	bcs	62c14 <__assert_fail@plt+0x5005c>
   62c08:	mvn	r0, #0
   62c0c:	str	r0, [fp, #-4]
   62c10:	b	62eb8 <__assert_fail@plt+0x50300>
   62c14:	ldr	r0, [fp, #-16]
   62c18:	ldr	r0, [r0]
   62c1c:	ldr	r1, [fp, #-20]	; 0xffffffec
   62c20:	lsl	r1, r1, #3
   62c24:	bl	55a84 <__assert_fail@plt+0x42ecc>
   62c28:	str	r0, [sp, #24]
   62c2c:	ldr	r0, [sp, #24]
   62c30:	movw	r1, #0
   62c34:	cmp	r0, r1
   62c38:	bne	62c48 <__assert_fail@plt+0x50090>
   62c3c:	mvn	r0, #0
   62c40:	str	r0, [fp, #-4]
   62c44:	b	62eb8 <__assert_fail@plt+0x50300>
   62c48:	ldr	r0, [sp, #24]
   62c4c:	ldr	r1, [fp, #-16]
   62c50:	str	r0, [r1]
   62c54:	ldr	r0, [fp, #-16]
   62c58:	ldr	r0, [r0, #12]
   62c5c:	ldr	r1, [fp, #-20]	; 0xffffffec
   62c60:	lsl	r1, r1, #2
   62c64:	bl	55a84 <__assert_fail@plt+0x42ecc>
   62c68:	str	r0, [fp, #-24]	; 0xffffffe8
   62c6c:	ldr	r0, [fp, #-16]
   62c70:	ldr	r0, [r0, #16]
   62c74:	ldr	r1, [fp, #-20]	; 0xffffffec
   62c78:	lsl	r1, r1, #2
   62c7c:	bl	55a84 <__assert_fail@plt+0x42ecc>
   62c80:	str	r0, [fp, #-28]	; 0xffffffe4
   62c84:	ldr	r0, [fp, #-16]
   62c88:	ldr	r0, [r0, #20]
   62c8c:	ldr	r1, [fp, #-20]	; 0xffffffec
   62c90:	movw	lr, #12
   62c94:	mul	r1, r1, lr
   62c98:	bl	55a84 <__assert_fail@plt+0x42ecc>
   62c9c:	str	r0, [sp, #32]
   62ca0:	ldr	r0, [fp, #-16]
   62ca4:	ldr	r0, [r0, #24]
   62ca8:	ldr	r1, [fp, #-20]	; 0xffffffec
   62cac:	movw	lr, #12
   62cb0:	mul	r1, r1, lr
   62cb4:	bl	55a84 <__assert_fail@plt+0x42ecc>
   62cb8:	str	r0, [sp, #28]
   62cbc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   62cc0:	movw	r1, #0
   62cc4:	cmp	r0, r1
   62cc8:	movw	r0, #1
   62ccc:	str	r0, [sp, #16]
   62cd0:	beq	62d1c <__assert_fail@plt+0x50164>
   62cd4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   62cd8:	movw	r1, #0
   62cdc:	cmp	r0, r1
   62ce0:	movw	r0, #1
   62ce4:	str	r0, [sp, #16]
   62ce8:	beq	62d1c <__assert_fail@plt+0x50164>
   62cec:	ldr	r0, [sp, #32]
   62cf0:	movw	r1, #0
   62cf4:	cmp	r0, r1
   62cf8:	movw	r0, #1
   62cfc:	str	r0, [sp, #16]
   62d00:	beq	62d1c <__assert_fail@plt+0x50164>
   62d04:	ldr	r0, [sp, #28]
   62d08:	movw	r1, #0
   62d0c:	cmp	r0, r1
   62d10:	movw	r0, #0
   62d14:	moveq	r0, #1
   62d18:	str	r0, [sp, #16]
   62d1c:	ldr	r0, [sp, #16]
   62d20:	tst	r0, #1
   62d24:	beq	62d54 <__assert_fail@plt+0x5019c>
   62d28:	ldr	r0, [fp, #-24]	; 0xffffffe8
   62d2c:	bl	50c68 <__assert_fail@plt+0x3e0b0>
   62d30:	ldr	r0, [fp, #-28]	; 0xffffffe4
   62d34:	bl	50c68 <__assert_fail@plt+0x3e0b0>
   62d38:	ldr	r0, [sp, #32]
   62d3c:	bl	50c68 <__assert_fail@plt+0x3e0b0>
   62d40:	ldr	r0, [sp, #28]
   62d44:	bl	50c68 <__assert_fail@plt+0x3e0b0>
   62d48:	mvn	r0, #0
   62d4c:	str	r0, [fp, #-4]
   62d50:	b	62eb8 <__assert_fail@plt+0x50300>
   62d54:	ldr	r0, [fp, #-24]	; 0xffffffe8
   62d58:	ldr	r1, [fp, #-16]
   62d5c:	str	r0, [r1, #12]
   62d60:	ldr	r0, [fp, #-28]	; 0xffffffe4
   62d64:	ldr	r1, [fp, #-16]
   62d68:	str	r0, [r1, #16]
   62d6c:	ldr	r0, [sp, #32]
   62d70:	ldr	r1, [fp, #-16]
   62d74:	str	r0, [r1, #20]
   62d78:	ldr	r0, [sp, #28]
   62d7c:	ldr	r1, [fp, #-16]
   62d80:	str	r0, [r1, #24]
   62d84:	ldr	r0, [fp, #-20]	; 0xffffffec
   62d88:	ldr	r1, [fp, #-16]
   62d8c:	str	r0, [r1, #4]
   62d90:	ldr	r0, [pc, #304]	; 62ec8 <__assert_fail@plt+0x50310>
   62d94:	ldr	r1, [fp, #-16]
   62d98:	ldr	r2, [r1]
   62d9c:	ldr	r1, [r1, #8]
   62da0:	add	r1, r2, r1, lsl #3
   62da4:	vldr	d16, [fp, #-12]
   62da8:	vstr	d16, [r1]
   62dac:	ldr	r1, [fp, #-16]
   62db0:	ldr	r2, [r1]
   62db4:	ldr	r1, [r1, #8]
   62db8:	add	r1, r2, r1, lsl #3
   62dbc:	ldr	r2, [r1, #4]
   62dc0:	and	r0, r2, r0
   62dc4:	str	r0, [r1, #4]
   62dc8:	ldr	r0, [fp, #-8]
   62dcc:	and	r0, r0, #255	; 0xff
   62dd0:	cmp	r0, #5
   62dd4:	bne	62df0 <__assert_fail@plt+0x50238>
   62dd8:	ldr	r0, [fp, #-16]
   62ddc:	ldr	r0, [r0, #92]	; 0x5c
   62de0:	cmp	r0, #1
   62de4:	movw	r0, #1
   62de8:	str	r0, [sp, #12]
   62dec:	bgt	62e08 <__assert_fail@plt+0x50250>
   62df0:	ldr	r0, [fp, #-8]
   62df4:	and	r0, r0, #255	; 0xff
   62df8:	cmp	r0, #6
   62dfc:	movw	r0, #0
   62e00:	moveq	r0, #1
   62e04:	str	r0, [sp, #12]
   62e08:	ldr	r0, [sp, #12]
   62e0c:	and	r0, r0, #1
   62e10:	ldr	r1, [fp, #-16]
   62e14:	ldr	r2, [r1]
   62e18:	ldr	r1, [r1, #8]
   62e1c:	add	r1, r2, r1, lsl #3
   62e20:	ldr	r2, [r1, #4]
   62e24:	bic	r2, r2, #1048576	; 0x100000
   62e28:	orr	r0, r2, r0, lsl #20
   62e2c:	str	r0, [r1, #4]
   62e30:	ldr	r0, [fp, #-16]
   62e34:	ldr	r1, [r0, #8]
   62e38:	ldr	r0, [r0, #12]
   62e3c:	add	r0, r0, r1, lsl #2
   62e40:	mvn	r1, #0
   62e44:	str	r1, [r0]
   62e48:	ldr	r0, [fp, #-16]
   62e4c:	ldr	r0, [r0, #20]
   62e50:	ldr	r1, [fp, #-16]
   62e54:	ldr	r1, [r1, #8]
   62e58:	movw	r2, #12
   62e5c:	mul	r1, r1, r2
   62e60:	add	r0, r0, r1
   62e64:	movw	r1, #0
   62e68:	and	r3, r1, #255	; 0xff
   62e6c:	str	r1, [sp, #8]
   62e70:	mov	r1, r3
   62e74:	str	r2, [sp, #4]
   62e78:	bl	12900 <memset@plt>
   62e7c:	ldr	r0, [fp, #-16]
   62e80:	ldr	r0, [r0, #24]
   62e84:	ldr	r1, [fp, #-16]
   62e88:	ldr	r1, [r1, #8]
   62e8c:	ldr	r2, [sp, #4]
   62e90:	mul	r1, r1, r2
   62e94:	add	r0, r0, r1
   62e98:	ldr	r1, [sp, #8]
   62e9c:	and	r1, r1, #255	; 0xff
   62ea0:	bl	12900 <memset@plt>
   62ea4:	ldr	r0, [fp, #-16]
   62ea8:	ldr	r1, [r0, #8]
   62eac:	add	r2, r1, #1
   62eb0:	str	r2, [r0, #8]
   62eb4:	str	r1, [fp, #-4]
   62eb8:	ldr	r0, [fp, #-4]
   62ebc:	mov	sp, fp
   62ec0:	pop	{fp, pc}
   62ec4:	ldrbne	r5, [r5, #-1365]	; 0xfffffaab
   62ec8:			; <UNDEFINED> instruction: 0xfffc00ff
   62ecc:	push	{fp, lr}
   62ed0:	mov	fp, sp
   62ed4:	sub	sp, sp, #16
   62ed8:	str	r0, [sp, #8]
   62edc:	str	r1, [sp, #4]
   62ee0:	str	r2, [sp]
   62ee4:	ldr	r0, [sp, #8]
   62ee8:	movw	r1, #2
   62eec:	str	r1, [r0]
   62ef0:	movw	r0, #8
   62ef4:	bl	549ac <__assert_fail@plt+0x41df4>
   62ef8:	ldr	r1, [sp, #8]
   62efc:	str	r0, [r1, #8]
   62f00:	ldr	r0, [sp, #8]
   62f04:	ldr	r0, [r0, #8]
   62f08:	movw	r1, #0
   62f0c:	cmp	r0, r1
   62f10:	bne	62f20 <__assert_fail@plt+0x50368>
   62f14:	movw	r0, #12
   62f18:	str	r0, [fp, #-4]
   62f1c:	b	62fbc <__assert_fail@plt+0x50404>
   62f20:	ldr	r0, [sp, #4]
   62f24:	ldr	r1, [sp]
   62f28:	cmp	r0, r1
   62f2c:	bne	62f50 <__assert_fail@plt+0x50398>
   62f30:	ldr	r0, [sp, #8]
   62f34:	movw	r1, #1
   62f38:	str	r1, [r0, #4]
   62f3c:	ldr	r0, [sp, #4]
   62f40:	ldr	r1, [sp, #8]
   62f44:	ldr	r1, [r1, #8]
   62f48:	str	r0, [r1]
   62f4c:	b	62fb4 <__assert_fail@plt+0x503fc>
   62f50:	ldr	r0, [sp, #8]
   62f54:	movw	r1, #2
   62f58:	str	r1, [r0, #4]
   62f5c:	ldr	r0, [sp, #4]
   62f60:	ldr	r1, [sp]
   62f64:	cmp	r0, r1
   62f68:	bge	62f90 <__assert_fail@plt+0x503d8>
   62f6c:	ldr	r0, [sp, #4]
   62f70:	ldr	r1, [sp, #8]
   62f74:	ldr	r1, [r1, #8]
   62f78:	str	r0, [r1]
   62f7c:	ldr	r0, [sp]
   62f80:	ldr	r1, [sp, #8]
   62f84:	ldr	r1, [r1, #8]
   62f88:	str	r0, [r1, #4]
   62f8c:	b	62fb0 <__assert_fail@plt+0x503f8>
   62f90:	ldr	r0, [sp]
   62f94:	ldr	r1, [sp, #8]
   62f98:	ldr	r1, [r1, #8]
   62f9c:	str	r0, [r1]
   62fa0:	ldr	r0, [sp, #4]
   62fa4:	ldr	r1, [sp, #8]
   62fa8:	ldr	r1, [r1, #8]
   62fac:	str	r0, [r1, #4]
   62fb0:	b	62fb4 <__assert_fail@plt+0x503fc>
   62fb4:	movw	r0, #0
   62fb8:	str	r0, [fp, #-4]
   62fbc:	ldr	r0, [fp, #-4]
   62fc0:	mov	sp, fp
   62fc4:	pop	{fp, pc}
   62fc8:	push	{fp, lr}
   62fcc:	mov	fp, sp
   62fd0:	sub	sp, sp, #16
   62fd4:	str	r0, [sp, #8]
   62fd8:	str	r1, [sp, #4]
   62fdc:	ldr	r0, [sp, #8]
   62fe0:	movw	r1, #1
   62fe4:	str	r1, [r0]
   62fe8:	ldr	r0, [sp, #8]
   62fec:	str	r1, [r0, #4]
   62ff0:	movw	r0, #4
   62ff4:	bl	549ac <__assert_fail@plt+0x41df4>
   62ff8:	ldr	r1, [sp, #8]
   62ffc:	str	r0, [r1, #8]
   63000:	ldr	r0, [sp, #8]
   63004:	ldr	r0, [r0, #8]
   63008:	movw	r1, #0
   6300c:	cmp	r0, r1
   63010:	bne	63034 <__assert_fail@plt+0x5047c>
   63014:	ldr	r0, [sp, #8]
   63018:	movw	r1, #0
   6301c:	str	r1, [r0, #4]
   63020:	ldr	r0, [sp, #8]
   63024:	str	r1, [r0]
   63028:	movw	r0, #12
   6302c:	str	r0, [fp, #-4]
   63030:	b	6304c <__assert_fail@plt+0x50494>
   63034:	ldr	r0, [sp, #4]
   63038:	ldr	r1, [sp, #8]
   6303c:	ldr	r1, [r1, #8]
   63040:	str	r0, [r1]
   63044:	movw	r0, #0
   63048:	str	r0, [fp, #-4]
   6304c:	ldr	r0, [fp, #-4]
   63050:	mov	sp, fp
   63054:	pop	{fp, pc}
   63058:	push	{fp, lr}
   6305c:	mov	fp, sp
   63060:	sub	sp, sp, #72	; 0x48
   63064:	str	r0, [fp, #-8]
   63068:	str	r1, [fp, #-12]
   6306c:	str	r2, [fp, #-16]
   63070:	and	r0, r3, #1
   63074:	strb	r0, [fp, #-17]	; 0xffffffef
   63078:	movw	r0, #0
   6307c:	strb	r0, [sp, #31]
   63080:	ldr	r0, [fp, #-12]
   63084:	ldr	r0, [r0, #20]
   63088:	ldr	r1, [fp, #-16]
   6308c:	movw	r2, #12
   63090:	mul	r1, r1, r2
   63094:	add	r0, r0, r1
   63098:	ldr	r0, [r0, #4]
   6309c:	add	r1, r0, #1
   630a0:	add	r0, sp, #32
   630a4:	bl	6342c <__assert_fail@plt+0x50874>
   630a8:	str	r0, [fp, #-24]	; 0xffffffe8
   630ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   630b0:	cmp	r0, #0
   630b4:	beq	630c4 <__assert_fail@plt+0x5050c>
   630b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   630bc:	str	r0, [fp, #-4]
   630c0:	b	63420 <__assert_fail@plt+0x50868>
   630c4:	ldr	r0, [fp, #-16]
   630c8:	ldr	r1, [sp, #36]	; 0x24
   630cc:	ldr	r2, [sp, #40]	; 0x28
   630d0:	add	r3, r1, #1
   630d4:	str	r3, [sp, #36]	; 0x24
   630d8:	str	r0, [r2, r1, lsl #2]
   630dc:	ldr	r0, [fp, #-12]
   630e0:	ldr	r0, [r0, #24]
   630e4:	ldr	r1, [fp, #-16]
   630e8:	add	r1, r1, r1, lsl #1
   630ec:	add	r0, r0, r1, lsl #2
   630f0:	mvn	r1, #0
   630f4:	str	r1, [r0, #4]
   630f8:	ldr	r0, [fp, #-12]
   630fc:	ldr	r0, [r0]
   63100:	ldr	r1, [fp, #-16]
   63104:	add	r0, r0, r1, lsl #3
   63108:	ldr	r0, [r0, #4]
   6310c:	lsr	r0, r0, #8
   63110:	movw	r1, #1023	; 0x3ff
   63114:	and	r0, r0, r1
   63118:	cmp	r0, #0
   6311c:	beq	631e4 <__assert_fail@plt+0x5062c>
   63120:	ldr	r0, [fp, #-12]
   63124:	ldr	r0, [r0, #20]
   63128:	ldr	r1, [fp, #-16]
   6312c:	movw	r2, #12
   63130:	mul	r1, r1, r2
   63134:	add	r0, r0, r1
   63138:	ldr	r0, [r0, #4]
   6313c:	cmp	r0, #0
   63140:	beq	631e4 <__assert_fail@plt+0x5062c>
   63144:	ldr	r0, [fp, #-12]
   63148:	ldr	r1, [r0]
   6314c:	ldr	r0, [r0, #20]
   63150:	ldr	r2, [fp, #-16]
   63154:	add	r2, r2, r2, lsl #1
   63158:	add	r0, r0, r2, lsl #2
   6315c:	ldr	r0, [r0, #8]
   63160:	ldr	r0, [r0]
   63164:	add	r0, r1, r0, lsl #3
   63168:	ldr	r0, [r0, #4]
   6316c:	lsr	r0, r0, #18
   63170:	and	r0, r0, #1
   63174:	cmp	r0, #0
   63178:	bne	631e4 <__assert_fail@plt+0x5062c>
   6317c:	ldr	r0, [fp, #-12]
   63180:	ldr	r1, [fp, #-16]
   63184:	mov	r2, r1
   63188:	mov	r3, r1
   6318c:	mov	ip, r1
   63190:	ldr	lr, [r0]
   63194:	add	r1, lr, r1, lsl #3
   63198:	ldr	r1, [r1, #4]
   6319c:	lsr	r1, r1, #8
   631a0:	movw	lr, #1023	; 0x3ff
   631a4:	and	r1, r1, lr
   631a8:	str	r1, [sp, #8]
   631ac:	mov	r1, r2
   631b0:	mov	r2, r3
   631b4:	mov	r3, ip
   631b8:	ldr	ip, [sp, #8]
   631bc:	str	ip, [sp]
   631c0:	bl	634a0 <__assert_fail@plt+0x508e8>
   631c4:	str	r0, [fp, #-24]	; 0xffffffe8
   631c8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   631cc:	cmp	r0, #0
   631d0:	beq	631e0 <__assert_fail@plt+0x50628>
   631d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   631d8:	str	r0, [fp, #-4]
   631dc:	b	63420 <__assert_fail@plt+0x50868>
   631e0:	b	631e4 <__assert_fail@plt+0x5062c>
   631e4:	ldr	r0, [fp, #-12]
   631e8:	ldr	r0, [r0]
   631ec:	ldr	r1, [fp, #-16]
   631f0:	add	r0, r0, r1, lsl #3
   631f4:	ldr	r0, [r0, #4]
   631f8:	and	r0, r0, #255	; 0xff
   631fc:	and	r0, r0, #8
   63200:	cmp	r0, #0
   63204:	beq	63390 <__assert_fail@plt+0x507d8>
   63208:	movw	r0, #0
   6320c:	str	r0, [fp, #-28]	; 0xffffffe4
   63210:	ldr	r0, [fp, #-28]	; 0xffffffe4
   63214:	ldr	r1, [fp, #-12]
   63218:	ldr	r1, [r1, #20]
   6321c:	ldr	r2, [fp, #-16]
   63220:	movw	r3, #12
   63224:	mul	r2, r2, r3
   63228:	add	r1, r1, r2
   6322c:	ldr	r1, [r1, #4]
   63230:	cmp	r0, r1
   63234:	bge	6338c <__assert_fail@plt+0x507d4>
   63238:	ldr	r0, [fp, #-12]
   6323c:	ldr	r0, [r0, #20]
   63240:	ldr	r1, [fp, #-16]
   63244:	add	r1, r1, r1, lsl #1
   63248:	add	r0, r0, r1, lsl #2
   6324c:	ldr	r0, [r0, #8]
   63250:	ldr	r1, [fp, #-28]	; 0xffffffe4
   63254:	add	r0, r0, r1, lsl #2
   63258:	ldr	r0, [r0]
   6325c:	str	r0, [sp, #12]
   63260:	ldr	r0, [fp, #-12]
   63264:	ldr	r0, [r0, #24]
   63268:	ldr	r1, [sp, #12]
   6326c:	movw	r2, #12
   63270:	mul	r1, r1, r2
   63274:	add	r0, r0, r1
   63278:	ldr	r0, [r0, #4]
   6327c:	cmn	r0, #1
   63280:	bne	63290 <__assert_fail@plt+0x506d8>
   63284:	movw	r0, #1
   63288:	strb	r0, [sp, #31]
   6328c:	b	6337c <__assert_fail@plt+0x507c4>
   63290:	ldr	r0, [fp, #-12]
   63294:	ldr	r0, [r0, #24]
   63298:	ldr	r1, [sp, #12]
   6329c:	movw	r2, #12
   632a0:	mul	r1, r1, r2
   632a4:	add	r0, r0, r1
   632a8:	ldr	r0, [r0, #4]
   632ac:	cmp	r0, #0
   632b0:	bne	632ec <__assert_fail@plt+0x50734>
   632b4:	ldr	r1, [fp, #-12]
   632b8:	ldr	r2, [sp, #12]
   632bc:	add	r0, sp, #16
   632c0:	movw	r3, #0
   632c4:	and	r3, r3, #1
   632c8:	bl	63058 <__assert_fail@plt+0x504a0>
   632cc:	str	r0, [fp, #-24]	; 0xffffffe8
   632d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   632d4:	cmp	r0, #0
   632d8:	beq	632e8 <__assert_fail@plt+0x50730>
   632dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   632e0:	str	r0, [fp, #-4]
   632e4:	b	63420 <__assert_fail@plt+0x50868>
   632e8:	b	6331c <__assert_fail@plt+0x50764>
   632ec:	ldr	r0, [fp, #-12]
   632f0:	ldr	r0, [r0, #24]
   632f4:	ldr	r1, [sp, #12]
   632f8:	movw	r2, #12
   632fc:	mul	r1, r1, r2
   63300:	add	r0, r0, r1
   63304:	ldr	r1, [r0]
   63308:	str	r1, [sp, #16]
   6330c:	ldr	r1, [r0, #4]
   63310:	str	r1, [sp, #20]
   63314:	ldr	r0, [r0, #8]
   63318:	str	r0, [sp, #24]
   6331c:	add	r0, sp, #32
   63320:	add	r1, sp, #16
   63324:	bl	639a8 <__assert_fail@plt+0x50df0>
   63328:	str	r0, [fp, #-24]	; 0xffffffe8
   6332c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   63330:	cmp	r0, #0
   63334:	beq	63344 <__assert_fail@plt+0x5078c>
   63338:	ldr	r0, [fp, #-24]	; 0xffffffe8
   6333c:	str	r0, [fp, #-4]
   63340:	b	63420 <__assert_fail@plt+0x50868>
   63344:	ldr	r0, [fp, #-12]
   63348:	ldr	r0, [r0, #24]
   6334c:	ldr	r1, [sp, #12]
   63350:	movw	r2, #12
   63354:	mul	r1, r1, r2
   63358:	add	r0, r0, r1
   6335c:	ldr	r0, [r0, #4]
   63360:	cmp	r0, #0
   63364:	bne	63378 <__assert_fail@plt+0x507c0>
   63368:	movw	r0, #1
   6336c:	strb	r0, [sp, #31]
   63370:	ldr	r0, [sp, #24]
   63374:	bl	50c68 <__assert_fail@plt+0x3e0b0>
   63378:	b	6337c <__assert_fail@plt+0x507c4>
   6337c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   63380:	add	r0, r0, #1
   63384:	str	r0, [fp, #-28]	; 0xffffffe4
   63388:	b	63210 <__assert_fail@plt+0x50658>
   6338c:	b	63390 <__assert_fail@plt+0x507d8>
   63390:	ldrb	r0, [sp, #31]
   63394:	tst	r0, #1
   63398:	beq	633cc <__assert_fail@plt+0x50814>
   6339c:	ldrb	r0, [fp, #-17]	; 0xffffffef
   633a0:	tst	r0, #1
   633a4:	bne	633cc <__assert_fail@plt+0x50814>
   633a8:	ldr	r0, [fp, #-12]
   633ac:	ldr	r0, [r0, #24]
   633b0:	ldr	r1, [fp, #-16]
   633b4:	movw	r2, #12
   633b8:	mul	r1, r1, r2
   633bc:	add	r0, r0, r1
   633c0:	movw	r1, #0
   633c4:	str	r1, [r0, #4]
   633c8:	b	633fc <__assert_fail@plt+0x50844>
   633cc:	ldr	r0, [fp, #-12]
   633d0:	ldr	r0, [r0, #24]
   633d4:	ldr	r1, [fp, #-16]
   633d8:	movw	r2, #12
   633dc:	mul	r1, r1, r2
   633e0:	add	r0, r0, r1
   633e4:	ldr	r1, [sp, #32]
   633e8:	str	r1, [r0]
   633ec:	ldr	r1, [sp, #36]	; 0x24
   633f0:	str	r1, [r0, #4]
   633f4:	ldr	r1, [sp, #40]	; 0x28
   633f8:	str	r1, [r0, #8]
   633fc:	ldr	r0, [fp, #-8]
   63400:	ldr	r1, [sp, #32]
   63404:	str	r1, [r0]
   63408:	ldr	r1, [sp, #36]	; 0x24
   6340c:	str	r1, [r0, #4]
   63410:	ldr	r1, [sp, #40]	; 0x28
   63414:	str	r1, [r0, #8]
   63418:	movw	r0, #0
   6341c:	str	r0, [fp, #-4]
   63420:	ldr	r0, [fp, #-4]
   63424:	mov	sp, fp
   63428:	pop	{fp, pc}
   6342c:	push	{fp, lr}
   63430:	mov	fp, sp
   63434:	sub	sp, sp, #16
   63438:	str	r0, [sp, #8]
   6343c:	str	r1, [sp, #4]
   63440:	ldr	r0, [sp, #4]
   63444:	ldr	r1, [sp, #8]
   63448:	str	r0, [r1]
   6344c:	ldr	r0, [sp, #8]
   63450:	mov	r1, #0
   63454:	str	r1, [r0, #4]
   63458:	ldr	r0, [sp, #4]
   6345c:	lsl	r0, r0, #2
   63460:	bl	549ac <__assert_fail@plt+0x41df4>
   63464:	ldr	r1, [sp, #8]
   63468:	str	r0, [r1, #8]
   6346c:	ldr	r0, [sp, #8]
   63470:	ldr	r0, [r0, #8]
   63474:	movw	r1, #0
   63478:	cmp	r0, r1
   6347c:	bne	6348c <__assert_fail@plt+0x508d4>
   63480:	movw	r0, #12
   63484:	str	r0, [fp, #-4]
   63488:	b	63494 <__assert_fail@plt+0x508dc>
   6348c:	movw	r0, #0
   63490:	str	r0, [fp, #-4]
   63494:	ldr	r0, [fp, #-4]
   63498:	mov	sp, fp
   6349c:	pop	{fp, pc}
   634a0:	push	{fp, lr}
   634a4:	mov	fp, sp
   634a8:	sub	sp, sp, #56	; 0x38
   634ac:	ldr	ip, [fp, #8]
   634b0:	str	r0, [fp, #-8]
   634b4:	str	r1, [fp, #-12]
   634b8:	str	r2, [fp, #-16]
   634bc:	str	r3, [fp, #-20]	; 0xffffffec
   634c0:	ldr	r0, [fp, #8]
   634c4:	str	r0, [sp, #20]
   634c8:	ldr	r0, [fp, #-12]
   634cc:	str	r0, [fp, #-24]	; 0xffffffe8
   634d0:	ldr	r0, [fp, #-16]
   634d4:	str	r0, [sp, #28]
   634d8:	str	ip, [sp, #4]
   634dc:	ldr	r0, [fp, #-8]
   634e0:	ldr	r0, [r0]
   634e4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   634e8:	add	r0, r0, r1, lsl #3
   634ec:	ldr	r0, [r0, #4]
   634f0:	and	r0, r0, #255	; 0xff
   634f4:	cmp	r0, #4
   634f8:	bne	635c8 <__assert_fail@plt+0x50a10>
   634fc:	ldr	r0, [fp, #-8]
   63500:	ldr	r0, [r0, #12]
   63504:	ldr	r1, [fp, #-24]	; 0xffffffe8
   63508:	add	r0, r0, r1, lsl #2
   6350c:	ldr	r0, [r0]
   63510:	str	r0, [sp, #16]
   63514:	ldr	r0, [fp, #-8]
   63518:	ldr	r0, [r0, #20]
   6351c:	ldr	r1, [sp, #28]
   63520:	movw	r2, #12
   63524:	mul	r1, r1, r2
   63528:	add	r0, r0, r1
   6352c:	movw	r1, #0
   63530:	str	r1, [r0, #4]
   63534:	ldr	r0, [fp, #-8]
   63538:	ldr	r1, [sp, #16]
   6353c:	ldr	r2, [sp, #20]
   63540:	bl	63db0 <__assert_fail@plt+0x511f8>
   63544:	str	r0, [sp, #12]
   63548:	ldr	r0, [sp, #12]
   6354c:	cmn	r0, #1
   63550:	bne	63560 <__assert_fail@plt+0x509a8>
   63554:	movw	r0, #12
   63558:	str	r0, [fp, #-4]
   6355c:	b	6399c <__assert_fail@plt+0x50de4>
   63560:	ldr	r0, [fp, #-8]
   63564:	ldr	r0, [r0, #12]
   63568:	ldr	r1, [fp, #-24]	; 0xffffffe8
   6356c:	ldr	r1, [r0, r1, lsl #2]
   63570:	ldr	r2, [sp, #28]
   63574:	add	r0, r0, r2, lsl #2
   63578:	str	r1, [r0]
   6357c:	ldr	r0, [fp, #-8]
   63580:	ldr	r0, [r0, #20]
   63584:	ldr	r1, [sp, #28]
   63588:	movw	r2, #12
   6358c:	mul	r1, r1, r2
   63590:	add	r0, r0, r1
   63594:	ldr	r1, [sp, #12]
   63598:	bl	63e94 <__assert_fail@plt+0x512dc>
   6359c:	and	r0, r0, #1
   635a0:	strb	r0, [sp, #27]
   635a4:	ldrb	r0, [sp, #27]
   635a8:	mvn	r1, #0
   635ac:	eor	r0, r0, r1
   635b0:	tst	r0, #1
   635b4:	beq	635c4 <__assert_fail@plt+0x50a0c>
   635b8:	movw	r0, #12
   635bc:	str	r0, [fp, #-4]
   635c0:	b	6399c <__assert_fail@plt+0x50de4>
   635c4:	b	63980 <__assert_fail@plt+0x50dc8>
   635c8:	ldr	r0, [fp, #-8]
   635cc:	ldr	r0, [r0, #20]
   635d0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   635d4:	movw	r2, #12
   635d8:	mul	r1, r1, r2
   635dc:	add	r0, r0, r1
   635e0:	ldr	r0, [r0, #4]
   635e4:	cmp	r0, #0
   635e8:	bne	6360c <__assert_fail@plt+0x50a54>
   635ec:	ldr	r0, [fp, #-8]
   635f0:	ldr	r0, [r0, #12]
   635f4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   635f8:	ldr	r1, [r0, r1, lsl #2]
   635fc:	ldr	r2, [sp, #28]
   63600:	add	r0, r0, r2, lsl #2
   63604:	str	r1, [r0]
   63608:	b	63994 <__assert_fail@plt+0x50ddc>
   6360c:	ldr	r0, [fp, #-8]
   63610:	ldr	r0, [r0, #20]
   63614:	ldr	r1, [fp, #-24]	; 0xffffffe8
   63618:	movw	r2, #12
   6361c:	mul	r1, r1, r2
   63620:	add	r0, r0, r1
   63624:	ldr	r0, [r0, #4]
   63628:	cmp	r0, #1
   6362c:	bne	63780 <__assert_fail@plt+0x50bc8>
   63630:	ldr	r0, [fp, #-8]
   63634:	ldr	r0, [r0, #20]
   63638:	ldr	r1, [fp, #-24]	; 0xffffffe8
   6363c:	movw	r2, #12
   63640:	mul	r1, r1, r2
   63644:	add	r0, r0, r1
   63648:	ldr	r0, [r0, #8]
   6364c:	ldr	r0, [r0]
   63650:	str	r0, [sp, #16]
   63654:	ldr	r0, [fp, #-8]
   63658:	ldr	r0, [r0, #20]
   6365c:	ldr	r1, [sp, #28]
   63660:	mul	r1, r1, r2
   63664:	add	r0, r0, r1
   63668:	movw	r1, #0
   6366c:	str	r1, [r0, #4]
   63670:	ldr	r0, [fp, #-24]	; 0xffffffe8
   63674:	ldr	r1, [fp, #-20]	; 0xffffffec
   63678:	cmp	r0, r1
   6367c:	bne	636dc <__assert_fail@plt+0x50b24>
   63680:	ldr	r0, [sp, #28]
   63684:	ldr	r1, [fp, #-24]	; 0xffffffe8
   63688:	cmp	r0, r1
   6368c:	beq	636dc <__assert_fail@plt+0x50b24>
   63690:	ldr	r0, [fp, #-8]
   63694:	ldr	r0, [r0, #20]
   63698:	ldr	r1, [sp, #28]
   6369c:	movw	r2, #12
   636a0:	mul	r1, r1, r2
   636a4:	add	r0, r0, r1
   636a8:	ldr	r1, [sp, #16]
   636ac:	bl	63e94 <__assert_fail@plt+0x512dc>
   636b0:	and	r0, r0, #1
   636b4:	strb	r0, [sp, #27]
   636b8:	ldrb	r0, [sp, #27]
   636bc:	mvn	r1, #0
   636c0:	eor	r0, r0, r1
   636c4:	tst	r0, #1
   636c8:	beq	636d8 <__assert_fail@plt+0x50b20>
   636cc:	movw	r0, #12
   636d0:	str	r0, [fp, #-4]
   636d4:	b	6399c <__assert_fail@plt+0x50de4>
   636d8:	b	63994 <__assert_fail@plt+0x50ddc>
   636dc:	ldr	r0, [fp, #-8]
   636e0:	ldr	r0, [r0]
   636e4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   636e8:	add	r0, r0, r1, lsl #3
   636ec:	ldr	r0, [r0, #4]
   636f0:	lsr	r0, r0, #8
   636f4:	movw	r1, #1023	; 0x3ff
   636f8:	and	r0, r0, r1
   636fc:	ldr	r1, [sp, #20]
   63700:	orr	r0, r1, r0
   63704:	str	r0, [sp, #20]
   63708:	ldr	r0, [fp, #-8]
   6370c:	ldr	r1, [sp, #16]
   63710:	ldr	r2, [sp, #20]
   63714:	bl	63db0 <__assert_fail@plt+0x511f8>
   63718:	str	r0, [sp, #12]
   6371c:	ldr	r0, [sp, #12]
   63720:	cmn	r0, #1
   63724:	bne	63734 <__assert_fail@plt+0x50b7c>
   63728:	movw	r0, #12
   6372c:	str	r0, [fp, #-4]
   63730:	b	6399c <__assert_fail@plt+0x50de4>
   63734:	ldr	r0, [fp, #-8]
   63738:	ldr	r0, [r0, #20]
   6373c:	ldr	r1, [sp, #28]
   63740:	movw	r2, #12
   63744:	mul	r1, r1, r2
   63748:	add	r0, r0, r1
   6374c:	ldr	r1, [sp, #12]
   63750:	bl	63e94 <__assert_fail@plt+0x512dc>
   63754:	and	r0, r0, #1
   63758:	strb	r0, [sp, #27]
   6375c:	ldrb	r0, [sp, #27]
   63760:	mvn	r1, #0
   63764:	eor	r0, r0, r1
   63768:	tst	r0, #1
   6376c:	beq	6377c <__assert_fail@plt+0x50bc4>
   63770:	movw	r0, #12
   63774:	str	r0, [fp, #-4]
   63778:	b	6399c <__assert_fail@plt+0x50de4>
   6377c:	b	63978 <__assert_fail@plt+0x50dc0>
   63780:	ldr	r0, [fp, #-8]
   63784:	ldr	r0, [r0, #20]
   63788:	ldr	r1, [fp, #-24]	; 0xffffffe8
   6378c:	movw	r2, #12
   63790:	mul	r1, r1, r2
   63794:	add	r0, r0, r1
   63798:	ldr	r0, [r0, #8]
   6379c:	ldr	r0, [r0]
   637a0:	str	r0, [sp, #16]
   637a4:	ldr	r0, [fp, #-8]
   637a8:	ldr	r0, [r0, #20]
   637ac:	ldr	r1, [sp, #28]
   637b0:	mul	r1, r1, r2
   637b4:	add	r0, r0, r1
   637b8:	movw	r1, #0
   637bc:	str	r1, [r0, #4]
   637c0:	ldr	r0, [fp, #-8]
   637c4:	ldr	r1, [sp, #16]
   637c8:	ldr	r2, [sp, #20]
   637cc:	bl	640cc <__assert_fail@plt+0x51514>
   637d0:	str	r0, [sp, #12]
   637d4:	ldr	r0, [sp, #12]
   637d8:	cmn	r0, #1
   637dc:	bne	63890 <__assert_fail@plt+0x50cd8>
   637e0:	ldr	r0, [fp, #-8]
   637e4:	ldr	r1, [sp, #16]
   637e8:	ldr	r2, [sp, #20]
   637ec:	bl	63db0 <__assert_fail@plt+0x511f8>
   637f0:	str	r0, [sp, #12]
   637f4:	ldr	r0, [sp, #12]
   637f8:	cmn	r0, #1
   637fc:	bne	6380c <__assert_fail@plt+0x50c54>
   63800:	movw	r0, #12
   63804:	str	r0, [fp, #-4]
   63808:	b	6399c <__assert_fail@plt+0x50de4>
   6380c:	ldr	r0, [fp, #-8]
   63810:	ldr	r0, [r0, #20]
   63814:	ldr	r1, [sp, #28]
   63818:	movw	r2, #12
   6381c:	mul	r1, r1, r2
   63820:	add	r0, r0, r1
   63824:	ldr	r1, [sp, #12]
   63828:	bl	63e94 <__assert_fail@plt+0x512dc>
   6382c:	and	r0, r0, #1
   63830:	strb	r0, [sp, #27]
   63834:	ldrb	r0, [sp, #27]
   63838:	mvn	r1, #0
   6383c:	eor	r0, r0, r1
   63840:	tst	r0, #1
   63844:	beq	63854 <__assert_fail@plt+0x50c9c>
   63848:	movw	r0, #12
   6384c:	str	r0, [fp, #-4]
   63850:	b	6399c <__assert_fail@plt+0x50de4>
   63854:	ldr	r0, [fp, #-8]
   63858:	ldr	r1, [sp, #16]
   6385c:	ldr	r2, [sp, #12]
   63860:	ldr	r3, [fp, #-20]	; 0xffffffec
   63864:	ldr	ip, [sp, #20]
   63868:	str	ip, [sp]
   6386c:	bl	634a0 <__assert_fail@plt+0x508e8>
   63870:	str	r0, [sp, #8]
   63874:	ldr	r0, [sp, #8]
   63878:	cmp	r0, #0
   6387c:	beq	6388c <__assert_fail@plt+0x50cd4>
   63880:	ldr	r0, [sp, #8]
   63884:	str	r0, [fp, #-4]
   63888:	b	6399c <__assert_fail@plt+0x50de4>
   6388c:	b	638dc <__assert_fail@plt+0x50d24>
   63890:	ldr	r0, [fp, #-8]
   63894:	ldr	r0, [r0, #20]
   63898:	ldr	r1, [sp, #28]
   6389c:	movw	r2, #12
   638a0:	mul	r1, r1, r2
   638a4:	add	r0, r0, r1
   638a8:	ldr	r1, [sp, #12]
   638ac:	bl	63e94 <__assert_fail@plt+0x512dc>
   638b0:	and	r0, r0, #1
   638b4:	strb	r0, [sp, #27]
   638b8:	ldrb	r0, [sp, #27]
   638bc:	mvn	r1, #0
   638c0:	eor	r0, r0, r1
   638c4:	tst	r0, #1
   638c8:	beq	638d8 <__assert_fail@plt+0x50d20>
   638cc:	movw	r0, #12
   638d0:	str	r0, [fp, #-4]
   638d4:	b	6399c <__assert_fail@plt+0x50de4>
   638d8:	b	638dc <__assert_fail@plt+0x50d24>
   638dc:	ldr	r0, [fp, #-8]
   638e0:	ldr	r0, [r0, #20]
   638e4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   638e8:	movw	r2, #12
   638ec:	mul	r1, r1, r2
   638f0:	add	r0, r0, r1
   638f4:	ldr	r0, [r0, #8]
   638f8:	ldr	r0, [r0, #4]
   638fc:	str	r0, [sp, #16]
   63900:	ldr	r0, [fp, #-8]
   63904:	ldr	r1, [sp, #16]
   63908:	ldr	r2, [sp, #20]
   6390c:	bl	63db0 <__assert_fail@plt+0x511f8>
   63910:	str	r0, [sp, #12]
   63914:	ldr	r0, [sp, #12]
   63918:	cmn	r0, #1
   6391c:	bne	6392c <__assert_fail@plt+0x50d74>
   63920:	movw	r0, #12
   63924:	str	r0, [fp, #-4]
   63928:	b	6399c <__assert_fail@plt+0x50de4>
   6392c:	ldr	r0, [fp, #-8]
   63930:	ldr	r0, [r0, #20]
   63934:	ldr	r1, [sp, #28]
   63938:	movw	r2, #12
   6393c:	mul	r1, r1, r2
   63940:	add	r0, r0, r1
   63944:	ldr	r1, [sp, #12]
   63948:	bl	63e94 <__assert_fail@plt+0x512dc>
   6394c:	and	r0, r0, #1
   63950:	strb	r0, [sp, #27]
   63954:	ldrb	r0, [sp, #27]
   63958:	mvn	r1, #0
   6395c:	eor	r0, r0, r1
   63960:	tst	r0, #1
   63964:	beq	63974 <__assert_fail@plt+0x50dbc>
   63968:	movw	r0, #12
   6396c:	str	r0, [fp, #-4]
   63970:	b	6399c <__assert_fail@plt+0x50de4>
   63974:	b	63978 <__assert_fail@plt+0x50dc0>
   63978:	b	6397c <__assert_fail@plt+0x50dc4>
   6397c:	b	63980 <__assert_fail@plt+0x50dc8>
   63980:	ldr	r0, [sp, #16]
   63984:	str	r0, [fp, #-24]	; 0xffffffe8
   63988:	ldr	r0, [sp, #12]
   6398c:	str	r0, [sp, #28]
   63990:	b	634dc <__assert_fail@plt+0x50924>
   63994:	movw	r0, #0
   63998:	str	r0, [fp, #-4]
   6399c:	ldr	r0, [fp, #-4]
   639a0:	mov	sp, fp
   639a4:	pop	{fp, pc}
   639a8:	push	{fp, lr}
   639ac:	mov	fp, sp
   639b0:	sub	sp, sp, #40	; 0x28
   639b4:	str	r0, [fp, #-8]
   639b8:	str	r1, [fp, #-12]
   639bc:	ldr	r0, [fp, #-12]
   639c0:	movw	r1, #0
   639c4:	cmp	r0, r1
   639c8:	beq	639dc <__assert_fail@plt+0x50e24>
   639cc:	ldr	r0, [fp, #-12]
   639d0:	ldr	r0, [r0, #4]
   639d4:	cmp	r0, #0
   639d8:	bne	639e8 <__assert_fail@plt+0x50e30>
   639dc:	movw	r0, #0
   639e0:	str	r0, [fp, #-4]
   639e4:	b	63da4 <__assert_fail@plt+0x511ec>
   639e8:	ldr	r0, [fp, #-8]
   639ec:	ldr	r0, [r0]
   639f0:	ldr	r1, [fp, #-12]
   639f4:	ldr	r1, [r1, #4]
   639f8:	lsl	r1, r1, #1
   639fc:	ldr	r2, [fp, #-8]
   63a00:	ldr	r2, [r2, #4]
   63a04:	add	r1, r1, r2
   63a08:	cmp	r0, r1
   63a0c:	bge	63a78 <__assert_fail@plt+0x50ec0>
   63a10:	ldr	r0, [fp, #-12]
   63a14:	ldr	r0, [r0, #4]
   63a18:	ldr	r1, [fp, #-8]
   63a1c:	ldr	r1, [r1]
   63a20:	add	r0, r0, r1
   63a24:	lsl	r0, r0, #1
   63a28:	str	r0, [sp, #8]
   63a2c:	ldr	r0, [fp, #-8]
   63a30:	ldr	r0, [r0, #8]
   63a34:	ldr	r1, [sp, #8]
   63a38:	lsl	r1, r1, #2
   63a3c:	bl	55a84 <__assert_fail@plt+0x42ecc>
   63a40:	str	r0, [sp, #4]
   63a44:	ldr	r0, [sp, #4]
   63a48:	movw	r1, #0
   63a4c:	cmp	r0, r1
   63a50:	bne	63a60 <__assert_fail@plt+0x50ea8>
   63a54:	movw	r0, #12
   63a58:	str	r0, [fp, #-4]
   63a5c:	b	63da4 <__assert_fail@plt+0x511ec>
   63a60:	ldr	r0, [sp, #4]
   63a64:	ldr	r1, [fp, #-8]
   63a68:	str	r0, [r1, #8]
   63a6c:	ldr	r0, [sp, #8]
   63a70:	ldr	r1, [fp, #-8]
   63a74:	str	r0, [r1]
   63a78:	ldr	r0, [fp, #-8]
   63a7c:	ldr	r0, [r0, #4]
   63a80:	cmp	r0, #0
   63a84:	bne	63ad8 <__assert_fail@plt+0x50f20>
   63a88:	ldr	r0, [fp, #-8]
   63a8c:	ldr	r0, [r0, #8]
   63a90:	movw	r1, #0
   63a94:	cmp	r0, r1
   63a98:	beq	63aa0 <__assert_fail@plt+0x50ee8>
   63a9c:	b	63aa0 <__assert_fail@plt+0x50ee8>
   63aa0:	ldr	r0, [fp, #-12]
   63aa4:	ldr	r0, [r0, #4]
   63aa8:	ldr	r1, [fp, #-8]
   63aac:	str	r0, [r1, #4]
   63ab0:	ldr	r0, [fp, #-8]
   63ab4:	ldr	r0, [r0, #8]
   63ab8:	ldr	r1, [fp, #-12]
   63abc:	ldr	r2, [r1, #4]
   63ac0:	ldr	r1, [r1, #8]
   63ac4:	lsl	r2, r2, #2
   63ac8:	bl	125c4 <memcpy@plt>
   63acc:	movw	r0, #0
   63ad0:	str	r0, [fp, #-4]
   63ad4:	b	63da4 <__assert_fail@plt+0x511ec>
   63ad8:	ldr	r0, [fp, #-8]
   63adc:	ldr	r0, [r0, #4]
   63ae0:	ldr	r1, [fp, #-12]
   63ae4:	ldr	r1, [r1, #4]
   63ae8:	lsl	r1, r1, #1
   63aec:	add	r0, r0, r1
   63af0:	str	r0, [sp, #16]
   63af4:	ldr	r0, [fp, #-12]
   63af8:	ldr	r0, [r0, #4]
   63afc:	sub	r0, r0, #1
   63b00:	str	r0, [fp, #-16]
   63b04:	ldr	r0, [fp, #-8]
   63b08:	ldr	r0, [r0, #4]
   63b0c:	sub	r0, r0, #1
   63b10:	str	r0, [sp, #20]
   63b14:	ldr	r0, [fp, #-16]
   63b18:	cmp	r0, #0
   63b1c:	movw	r0, #0
   63b20:	str	r0, [sp]
   63b24:	blt	63b3c <__assert_fail@plt+0x50f84>
   63b28:	ldr	r0, [sp, #20]
   63b2c:	cmp	r0, #0
   63b30:	movw	r0, #0
   63b34:	movge	r0, #1
   63b38:	str	r0, [sp]
   63b3c:	ldr	r0, [sp]
   63b40:	tst	r0, #1
   63b44:	beq	63c10 <__assert_fail@plt+0x51058>
   63b48:	ldr	r0, [fp, #-8]
   63b4c:	ldr	r0, [r0, #8]
   63b50:	ldr	r1, [sp, #20]
   63b54:	ldr	r0, [r0, r1, lsl #2]
   63b58:	ldr	r1, [fp, #-12]
   63b5c:	ldr	r1, [r1, #8]
   63b60:	ldr	r2, [fp, #-16]
   63b64:	add	r1, r1, r2, lsl #2
   63b68:	ldr	r1, [r1]
   63b6c:	cmp	r0, r1
   63b70:	bne	63b94 <__assert_fail@plt+0x50fdc>
   63b74:	ldr	r0, [fp, #-16]
   63b78:	mvn	r1, #0
   63b7c:	add	r0, r0, r1
   63b80:	str	r0, [fp, #-16]
   63b84:	ldr	r0, [sp, #20]
   63b88:	add	r0, r0, r1
   63b8c:	str	r0, [sp, #20]
   63b90:	b	63c0c <__assert_fail@plt+0x51054>
   63b94:	ldr	r0, [fp, #-8]
   63b98:	ldr	r0, [r0, #8]
   63b9c:	ldr	r1, [sp, #20]
   63ba0:	ldr	r0, [r0, r1, lsl #2]
   63ba4:	ldr	r1, [fp, #-12]
   63ba8:	ldr	r1, [r1, #8]
   63bac:	ldr	r2, [fp, #-16]
   63bb0:	add	r1, r1, r2, lsl #2
   63bb4:	ldr	r1, [r1]
   63bb8:	cmp	r0, r1
   63bbc:	bge	63bf8 <__assert_fail@plt+0x51040>
   63bc0:	ldr	r0, [fp, #-12]
   63bc4:	ldr	r0, [r0, #8]
   63bc8:	ldr	r1, [fp, #-16]
   63bcc:	sub	r2, r1, #1
   63bd0:	str	r2, [fp, #-16]
   63bd4:	ldr	r0, [r0, r1, lsl #2]
   63bd8:	ldr	r1, [fp, #-8]
   63bdc:	ldr	r1, [r1, #8]
   63be0:	ldr	r2, [sp, #16]
   63be4:	sub	r2, r2, #1
   63be8:	str	r2, [sp, #16]
   63bec:	add	r1, r1, r2, lsl #2
   63bf0:	str	r0, [r1]
   63bf4:	b	63c08 <__assert_fail@plt+0x51050>
   63bf8:	ldr	r0, [sp, #20]
   63bfc:	mvn	r1, #0
   63c00:	add	r0, r0, r1
   63c04:	str	r0, [sp, #20]
   63c08:	b	63c0c <__assert_fail@plt+0x51054>
   63c0c:	b	63b14 <__assert_fail@plt+0x50f5c>
   63c10:	ldr	r0, [fp, #-16]
   63c14:	cmp	r0, #0
   63c18:	blt	63c58 <__assert_fail@plt+0x510a0>
   63c1c:	ldr	r0, [fp, #-16]
   63c20:	add	r0, r0, #1
   63c24:	ldr	r1, [sp, #16]
   63c28:	sub	r0, r1, r0
   63c2c:	str	r0, [sp, #16]
   63c30:	ldr	r0, [fp, #-8]
   63c34:	ldr	r0, [r0, #8]
   63c38:	ldr	r1, [sp, #16]
   63c3c:	add	r0, r0, r1, lsl #2
   63c40:	ldr	r1, [fp, #-12]
   63c44:	ldr	r1, [r1, #8]
   63c48:	ldr	r2, [fp, #-16]
   63c4c:	add	r2, r2, #1
   63c50:	lsl	r2, r2, #2
   63c54:	bl	125c4 <memcpy@plt>
   63c58:	ldr	r0, [fp, #-8]
   63c5c:	ldr	r0, [r0, #4]
   63c60:	sub	r0, r0, #1
   63c64:	str	r0, [sp, #20]
   63c68:	ldr	r0, [fp, #-8]
   63c6c:	ldr	r0, [r0, #4]
   63c70:	ldr	r1, [fp, #-12]
   63c74:	ldr	r1, [r1, #4]
   63c78:	lsl	r1, r1, #1
   63c7c:	add	r0, r0, r1
   63c80:	sub	r0, r0, #1
   63c84:	str	r0, [fp, #-16]
   63c88:	ldr	r0, [fp, #-16]
   63c8c:	ldr	r1, [sp, #16]
   63c90:	sub	r0, r0, r1
   63c94:	add	r0, r0, #1
   63c98:	str	r0, [sp, #12]
   63c9c:	ldr	r0, [sp, #12]
   63ca0:	cmp	r0, #0
   63ca4:	bne	63cb4 <__assert_fail@plt+0x510fc>
   63ca8:	movw	r0, #0
   63cac:	str	r0, [fp, #-4]
   63cb0:	b	63da4 <__assert_fail@plt+0x511ec>
   63cb4:	ldr	r0, [sp, #12]
   63cb8:	ldr	r1, [fp, #-8]
   63cbc:	ldr	r2, [r1, #4]
   63cc0:	add	r0, r2, r0
   63cc4:	str	r0, [r1, #4]
   63cc8:	ldr	r0, [fp, #-8]
   63ccc:	ldr	r0, [r0, #8]
   63cd0:	ldr	r1, [fp, #-16]
   63cd4:	ldr	r1, [r0, r1, lsl #2]
   63cd8:	ldr	r2, [sp, #20]
   63cdc:	add	r0, r0, r2, lsl #2
   63ce0:	ldr	r0, [r0]
   63ce4:	cmp	r1, r0
   63ce8:	ble	63d3c <__assert_fail@plt+0x51184>
   63cec:	ldr	r0, [fp, #-8]
   63cf0:	ldr	r0, [r0, #8]
   63cf4:	ldr	r1, [fp, #-16]
   63cf8:	sub	r2, r1, #1
   63cfc:	str	r2, [fp, #-16]
   63d00:	ldr	r0, [r0, r1, lsl #2]
   63d04:	ldr	r1, [fp, #-8]
   63d08:	ldr	r1, [r1, #8]
   63d0c:	ldr	r2, [sp, #20]
   63d10:	ldr	r3, [sp, #12]
   63d14:	sub	ip, r3, #1
   63d18:	str	ip, [sp, #12]
   63d1c:	add	r2, r2, r3
   63d20:	add	r1, r1, r2, lsl #2
   63d24:	str	r0, [r1]
   63d28:	ldr	r0, [sp, #12]
   63d2c:	cmp	r0, #0
   63d30:	bne	63d38 <__assert_fail@plt+0x51180>
   63d34:	b	63d9c <__assert_fail@plt+0x511e4>
   63d38:	b	63d98 <__assert_fail@plt+0x511e0>
   63d3c:	ldr	r0, [fp, #-8]
   63d40:	ldr	r0, [r0, #8]
   63d44:	ldr	r1, [sp, #20]
   63d48:	ldr	r2, [r0, r1, lsl #2]
   63d4c:	ldr	r3, [sp, #12]
   63d50:	add	r1, r1, r3
   63d54:	add	r0, r0, r1, lsl #2
   63d58:	str	r2, [r0]
   63d5c:	ldr	r0, [sp, #20]
   63d60:	mvn	r1, #0
   63d64:	add	r0, r0, r1
   63d68:	str	r0, [sp, #20]
   63d6c:	cmp	r0, #0
   63d70:	bge	63d94 <__assert_fail@plt+0x511dc>
   63d74:	ldr	r0, [fp, #-8]
   63d78:	ldr	r0, [r0, #8]
   63d7c:	ldr	r1, [sp, #16]
   63d80:	add	r1, r0, r1, lsl #2
   63d84:	ldr	r2, [sp, #12]
   63d88:	lsl	r2, r2, #2
   63d8c:	bl	125c4 <memcpy@plt>
   63d90:	b	63d9c <__assert_fail@plt+0x511e4>
   63d94:	b	63d98 <__assert_fail@plt+0x511e0>
   63d98:	b	63cc8 <__assert_fail@plt+0x51110>
   63d9c:	movw	r0, #0
   63da0:	str	r0, [fp, #-4]
   63da4:	ldr	r0, [fp, #-4]
   63da8:	mov	sp, fp
   63dac:	pop	{fp, pc}
   63db0:	push	{fp, lr}
   63db4:	mov	fp, sp
   63db8:	sub	sp, sp, #24
   63dbc:	str	r0, [fp, #-4]
   63dc0:	str	r1, [fp, #-8]
   63dc4:	str	r2, [sp, #12]
   63dc8:	ldr	r0, [fp, #-4]
   63dcc:	ldr	r1, [r0]
   63dd0:	ldr	r2, [fp, #-8]
   63dd4:	ldr	r2, [r1, r2, lsl #3]!
   63dd8:	ldr	r1, [r1, #4]
   63ddc:	str	r1, [sp, #4]
   63de0:	mov	r1, r2
   63de4:	ldr	r2, [sp, #4]
   63de8:	bl	62bb0 <__assert_fail@plt+0x4fff8>
   63dec:	str	r0, [sp, #8]
   63df0:	ldr	r0, [sp, #8]
   63df4:	cmn	r0, #1
   63df8:	beq	63e88 <__assert_fail@plt+0x512d0>
   63dfc:	ldr	r0, [sp, #12]
   63e00:	ldr	r1, [fp, #-4]
   63e04:	ldr	r1, [r1]
   63e08:	ldr	r2, [sp, #8]
   63e0c:	add	r1, r1, r2, lsl #3
   63e10:	ldr	r2, [r1, #4]
   63e14:	bfc	r0, #10, #22
   63e18:	bfc	r2, #8, #10
   63e1c:	orr	r0, r2, r0, lsl #8
   63e20:	str	r0, [r1, #4]
   63e24:	ldr	r0, [fp, #-4]
   63e28:	ldr	r0, [r0]
   63e2c:	ldr	r1, [fp, #-8]
   63e30:	add	r1, r0, r1, lsl #3
   63e34:	ldr	r1, [r1, #4]
   63e38:	ldr	r2, [sp, #8]
   63e3c:	add	r0, r0, r2, lsl #3
   63e40:	ldr	r2, [r0, #4]
   63e44:	orr	r1, r2, r1
   63e48:	lsr	r1, r1, #8
   63e4c:	bfi	r2, r1, #8, #10
   63e50:	str	r2, [r0, #4]
   63e54:	ldr	r0, [fp, #-4]
   63e58:	ldr	r0, [r0]
   63e5c:	ldr	r1, [sp, #8]
   63e60:	add	r0, r0, r1, lsl #3
   63e64:	ldr	r1, [r0, #4]
   63e68:	orr	r1, r1, #262144	; 0x40000
   63e6c:	str	r1, [r0, #4]
   63e70:	ldr	r0, [fp, #-8]
   63e74:	ldr	r1, [fp, #-4]
   63e78:	ldr	r1, [r1, #16]
   63e7c:	ldr	r2, [sp, #8]
   63e80:	add	r1, r1, r2, lsl #2
   63e84:	str	r0, [r1]
   63e88:	ldr	r0, [sp, #8]
   63e8c:	mov	sp, fp
   63e90:	pop	{fp, pc}
   63e94:	push	{fp, lr}
   63e98:	mov	fp, sp
   63e9c:	sub	sp, sp, #24
   63ea0:	str	r0, [fp, #-8]
   63ea4:	str	r1, [sp, #12]
   63ea8:	ldr	r0, [fp, #-8]
   63eac:	ldr	r0, [r0]
   63eb0:	cmp	r0, #0
   63eb4:	bne	63edc <__assert_fail@plt+0x51324>
   63eb8:	ldr	r0, [fp, #-8]
   63ebc:	ldr	r1, [sp, #12]
   63ec0:	bl	62fc8 <__assert_fail@plt+0x50410>
   63ec4:	cmp	r0, #0
   63ec8:	movw	r0, #0
   63ecc:	moveq	r0, #1
   63ed0:	and	r0, r0, #1
   63ed4:	strb	r0, [fp, #-1]
   63ed8:	b	640bc <__assert_fail@plt+0x51504>
   63edc:	ldr	r0, [fp, #-8]
   63ee0:	ldr	r0, [r0, #4]
   63ee4:	cmp	r0, #0
   63ee8:	bne	63f34 <__assert_fail@plt+0x5137c>
   63eec:	ldr	r0, [fp, #-8]
   63ef0:	ldr	r0, [r0, #8]
   63ef4:	movw	r1, #0
   63ef8:	cmp	r0, r1
   63efc:	beq	63f04 <__assert_fail@plt+0x5134c>
   63f00:	b	63f04 <__assert_fail@plt+0x5134c>
   63f04:	ldr	r0, [sp, #12]
   63f08:	ldr	r1, [fp, #-8]
   63f0c:	ldr	r1, [r1, #8]
   63f10:	str	r0, [r1]
   63f14:	ldr	r0, [fp, #-8]
   63f18:	ldr	r1, [r0, #4]
   63f1c:	add	r1, r1, #1
   63f20:	str	r1, [r0, #4]
   63f24:	movw	r0, #1
   63f28:	and	r0, r0, #1
   63f2c:	strb	r0, [fp, #-1]
   63f30:	b	640bc <__assert_fail@plt+0x51504>
   63f34:	ldr	r0, [fp, #-8]
   63f38:	ldr	r0, [r0]
   63f3c:	ldr	r1, [fp, #-8]
   63f40:	ldr	r1, [r1, #4]
   63f44:	cmp	r0, r1
   63f48:	bne	63fa0 <__assert_fail@plt+0x513e8>
   63f4c:	ldr	r0, [fp, #-8]
   63f50:	ldr	r1, [r0]
   63f54:	lsl	r1, r1, #1
   63f58:	str	r1, [r0]
   63f5c:	ldr	r0, [fp, #-8]
   63f60:	ldr	r1, [r0]
   63f64:	ldr	r0, [r0, #8]
   63f68:	lsl	r1, r1, #2
   63f6c:	bl	55a84 <__assert_fail@plt+0x42ecc>
   63f70:	str	r0, [sp, #4]
   63f74:	ldr	r0, [sp, #4]
   63f78:	movw	r1, #0
   63f7c:	cmp	r0, r1
   63f80:	bne	63f94 <__assert_fail@plt+0x513dc>
   63f84:	movw	r0, #0
   63f88:	and	r0, r0, #1
   63f8c:	strb	r0, [fp, #-1]
   63f90:	b	640bc <__assert_fail@plt+0x51504>
   63f94:	ldr	r0, [sp, #4]
   63f98:	ldr	r1, [fp, #-8]
   63f9c:	str	r0, [r1, #8]
   63fa0:	ldr	r0, [sp, #12]
   63fa4:	ldr	r1, [fp, #-8]
   63fa8:	ldr	r1, [r1, #8]
   63fac:	ldr	r1, [r1]
   63fb0:	cmp	r0, r1
   63fb4:	bge	64000 <__assert_fail@plt+0x51448>
   63fb8:	ldr	r0, [fp, #-8]
   63fbc:	ldr	r0, [r0, #4]
   63fc0:	str	r0, [sp, #8]
   63fc4:	ldr	r0, [sp, #8]
   63fc8:	cmp	r0, #0
   63fcc:	ble	63ffc <__assert_fail@plt+0x51444>
   63fd0:	ldr	r0, [fp, #-8]
   63fd4:	ldr	r0, [r0, #8]
   63fd8:	ldr	r1, [sp, #8]
   63fdc:	add	r0, r0, r1, lsl #2
   63fe0:	ldr	r1, [r0, #-4]
   63fe4:	str	r1, [r0]
   63fe8:	ldr	r0, [sp, #8]
   63fec:	mvn	r1, #0
   63ff0:	add	r0, r0, r1
   63ff4:	str	r0, [sp, #8]
   63ff8:	b	63fc4 <__assert_fail@plt+0x5140c>
   63ffc:	b	64088 <__assert_fail@plt+0x514d0>
   64000:	ldr	r0, [fp, #-8]
   64004:	ldr	r0, [r0, #4]
   64008:	str	r0, [sp, #8]
   6400c:	ldr	r0, [fp, #-8]
   64010:	ldr	r0, [r0, #8]
   64014:	ldr	r1, [sp, #8]
   64018:	sub	r1, r1, #1
   6401c:	add	r0, r0, r1, lsl #2
   64020:	ldr	r0, [r0]
   64024:	ldr	r1, [sp, #12]
   64028:	cmp	r0, r1
   6402c:	ble	6405c <__assert_fail@plt+0x514a4>
   64030:	ldr	r0, [fp, #-8]
   64034:	ldr	r0, [r0, #8]
   64038:	ldr	r1, [sp, #8]
   6403c:	add	r0, r0, r1, lsl #2
   64040:	ldr	r1, [r0, #-4]
   64044:	str	r1, [r0]
   64048:	ldr	r0, [sp, #8]
   6404c:	mvn	r1, #0
   64050:	add	r0, r0, r1
   64054:	str	r0, [sp, #8]
   64058:	b	6400c <__assert_fail@plt+0x51454>
   6405c:	ldr	r0, [fp, #-8]
   64060:	ldr	r0, [r0, #8]
   64064:	ldr	r1, [sp, #8]
   64068:	sub	r1, r1, #1
   6406c:	add	r0, r0, r1, lsl #2
   64070:	ldr	r0, [r0]
   64074:	ldr	r1, [sp, #12]
   64078:	cmp	r0, r1
   6407c:	bge	64084 <__assert_fail@plt+0x514cc>
   64080:	b	64084 <__assert_fail@plt+0x514cc>
   64084:	b	64088 <__assert_fail@plt+0x514d0>
   64088:	ldr	r0, [sp, #12]
   6408c:	ldr	r1, [fp, #-8]
   64090:	ldr	r1, [r1, #8]
   64094:	ldr	r2, [sp, #8]
   64098:	add	r1, r1, r2, lsl #2
   6409c:	str	r0, [r1]
   640a0:	ldr	r0, [fp, #-8]
   640a4:	ldr	r1, [r0, #4]
   640a8:	add	r1, r1, #1
   640ac:	str	r1, [r0, #4]
   640b0:	movw	r0, #1
   640b4:	and	r0, r0, #1
   640b8:	strb	r0, [fp, #-1]
   640bc:	ldrb	r0, [fp, #-1]
   640c0:	and	r0, r0, #1
   640c4:	mov	sp, fp
   640c8:	pop	{fp, pc}
   640cc:	sub	sp, sp, #24
   640d0:	str	r0, [sp, #16]
   640d4:	str	r1, [sp, #12]
   640d8:	str	r2, [sp, #8]
   640dc:	ldr	r0, [sp, #16]
   640e0:	ldr	r0, [r0, #8]
   640e4:	sub	r0, r0, #1
   640e8:	str	r0, [sp, #4]
   640ec:	ldr	r0, [sp, #16]
   640f0:	ldr	r0, [r0]
   640f4:	ldr	r1, [sp, #4]
   640f8:	add	r0, r0, r1, lsl #3
   640fc:	ldr	r0, [r0, #4]
   64100:	lsr	r0, r0, #18
   64104:	and	r0, r0, #1
   64108:	cmp	r0, #0
   6410c:	movw	r0, #0
   64110:	str	r0, [sp]
   64114:	beq	6412c <__assert_fail@plt+0x51574>
   64118:	ldr	r0, [sp, #4]
   6411c:	cmp	r0, #0
   64120:	movw	r0, #0
   64124:	movgt	r0, #1
   64128:	str	r0, [sp]
   6412c:	ldr	r0, [sp]
   64130:	tst	r0, #1
   64134:	beq	641a8 <__assert_fail@plt+0x515f0>
   64138:	ldr	r0, [sp, #12]
   6413c:	ldr	r1, [sp, #16]
   64140:	ldr	r1, [r1, #16]
   64144:	ldr	r2, [sp, #4]
   64148:	add	r1, r1, r2, lsl #2
   6414c:	ldr	r1, [r1]
   64150:	cmp	r0, r1
   64154:	bne	64190 <__assert_fail@plt+0x515d8>
   64158:	ldr	r0, [sp, #8]
   6415c:	ldr	r1, [sp, #16]
   64160:	ldr	r1, [r1]
   64164:	ldr	r2, [sp, #4]
   64168:	add	r1, r1, r2, lsl #3
   6416c:	ldr	r1, [r1, #4]
   64170:	lsr	r1, r1, #8
   64174:	movw	r2, #1023	; 0x3ff
   64178:	and	r1, r1, r2
   6417c:	cmp	r0, r1
   64180:	bne	64190 <__assert_fail@plt+0x515d8>
   64184:	ldr	r0, [sp, #4]
   64188:	str	r0, [sp, #20]
   6418c:	b	641b0 <__assert_fail@plt+0x515f8>
   64190:	b	64194 <__assert_fail@plt+0x515dc>
   64194:	ldr	r0, [sp, #4]
   64198:	mvn	r1, #0
   6419c:	add	r0, r0, r1
   641a0:	str	r0, [sp, #4]
   641a4:	b	640ec <__assert_fail@plt+0x51534>
   641a8:	mvn	r0, #0
   641ac:	str	r0, [sp, #20]
   641b0:	ldr	r0, [sp, #20]
   641b4:	add	sp, sp, #24
   641b8:	bx	lr
   641bc:	push	{fp, lr}
   641c0:	mov	fp, sp
   641c4:	sub	sp, sp, #16
   641c8:	str	r0, [sp, #8]
   641cc:	str	r1, [sp, #4]
   641d0:	ldr	r0, [sp, #8]
   641d4:	ldr	r0, [r0]
   641d8:	ldr	r1, [sp, #8]
   641dc:	ldr	r1, [r1, #4]
   641e0:	cmp	r0, r1
   641e4:	bne	64240 <__assert_fail@plt+0x51688>
   641e8:	ldr	r0, [sp, #8]
   641ec:	ldr	r1, [r0]
   641f0:	mov	r2, #2
   641f4:	add	r1, r2, r1, lsl #1
   641f8:	str	r1, [r0]
   641fc:	ldr	r0, [sp, #8]
   64200:	ldr	r1, [r0]
   64204:	ldr	r0, [r0, #8]
   64208:	lsl	r1, r1, #2
   6420c:	bl	55a84 <__assert_fail@plt+0x42ecc>
   64210:	str	r0, [sp]
   64214:	ldr	r0, [sp]
   64218:	movw	r1, #0
   6421c:	cmp	r0, r1
   64220:	bne	64234 <__assert_fail@plt+0x5167c>
   64224:	movw	r0, #0
   64228:	and	r0, r0, #1
   6422c:	strb	r0, [fp, #-1]
   64230:	b	6426c <__assert_fail@plt+0x516b4>
   64234:	ldr	r0, [sp]
   64238:	ldr	r1, [sp, #8]
   6423c:	str	r0, [r1, #8]
   64240:	ldr	r0, [sp, #4]
   64244:	ldr	r1, [sp, #8]
   64248:	ldr	r2, [r1, #4]
   6424c:	ldr	r3, [r1, #8]
   64250:	add	ip, r2, #1
   64254:	str	ip, [r1, #4]
   64258:	add	r1, r3, r2, lsl #2
   6425c:	str	r0, [r1]
   64260:	movw	r0, #1
   64264:	and	r0, r0, #1
   64268:	strb	r0, [fp, #-1]
   6426c:	ldrb	r0, [fp, #-1]
   64270:	and	r0, r0, #1
   64274:	mov	sp, fp
   64278:	pop	{fp, pc}
   6427c:	push	{fp, lr}
   64280:	mov	fp, sp
   64284:	sub	sp, sp, #16
   64288:	str	r0, [sp, #8]
   6428c:	str	r1, [sp, #4]
   64290:	ldr	r0, [sp, #4]
   64294:	ldr	r0, [r0, #4]
   64298:	ldr	r1, [sp, #8]
   6429c:	str	r0, [r1, #4]
   642a0:	ldr	r0, [sp, #4]
   642a4:	ldr	r0, [r0, #4]
   642a8:	cmp	r0, #0
   642ac:	ble	64328 <__assert_fail@plt+0x51770>
   642b0:	ldr	r0, [sp, #8]
   642b4:	ldr	r1, [r0, #4]
   642b8:	str	r1, [r0]
   642bc:	ldr	r0, [sp, #8]
   642c0:	ldr	r0, [r0]
   642c4:	lsl	r0, r0, #2
   642c8:	bl	549ac <__assert_fail@plt+0x41df4>
   642cc:	ldr	r1, [sp, #8]
   642d0:	str	r0, [r1, #8]
   642d4:	ldr	r0, [sp, #8]
   642d8:	ldr	r0, [r0, #8]
   642dc:	movw	r1, #0
   642e0:	cmp	r0, r1
   642e4:	bne	64308 <__assert_fail@plt+0x51750>
   642e8:	ldr	r0, [sp, #8]
   642ec:	movw	r1, #0
   642f0:	str	r1, [r0, #4]
   642f4:	ldr	r0, [sp, #8]
   642f8:	str	r1, [r0]
   642fc:	movw	r0, #12
   64300:	str	r0, [fp, #-4]
   64304:	b	64344 <__assert_fail@plt+0x5178c>
   64308:	ldr	r0, [sp, #8]
   6430c:	ldr	r0, [r0, #8]
   64310:	ldr	r1, [sp, #4]
   64314:	ldr	r2, [r1, #4]
   64318:	ldr	r1, [r1, #8]
   6431c:	lsl	r2, r2, #2
   64320:	bl	125c4 <memcpy@plt>
   64324:	b	6433c <__assert_fail@plt+0x51784>
   64328:	ldr	r0, [sp, #8]
   6432c:	movw	r1, #0
   64330:	and	r1, r1, #255	; 0xff
   64334:	movw	r2, #12
   64338:	bl	12900 <memset@plt>
   6433c:	movw	r0, #0
   64340:	str	r0, [fp, #-4]
   64344:	ldr	r0, [fp, #-4]
   64348:	mov	sp, fp
   6434c:	pop	{fp, pc}
   64350:	sub	sp, sp, #28
   64354:	str	r0, [sp, #20]
   64358:	str	r1, [sp, #16]
   6435c:	ldr	r0, [sp, #20]
   64360:	ldr	r0, [r0, #4]
   64364:	cmp	r0, #0
   64368:	bgt	64378 <__assert_fail@plt+0x517c0>
   6436c:	movw	r0, #0
   64370:	str	r0, [sp, #24]
   64374:	b	64434 <__assert_fail@plt+0x5187c>
   64378:	movw	r0, #0
   6437c:	str	r0, [sp, #12]
   64380:	ldr	r0, [sp, #20]
   64384:	ldr	r0, [r0, #4]
   64388:	sub	r0, r0, #1
   6438c:	str	r0, [sp, #8]
   64390:	ldr	r0, [sp, #12]
   64394:	ldr	r1, [sp, #8]
   64398:	cmp	r0, r1
   6439c:	bcs	643f0 <__assert_fail@plt+0x51838>
   643a0:	ldr	r0, [sp, #12]
   643a4:	ldr	r1, [sp, #8]
   643a8:	add	r0, r0, r1
   643ac:	lsr	r0, r0, #1
   643b0:	str	r0, [sp, #4]
   643b4:	ldr	r0, [sp, #20]
   643b8:	ldr	r0, [r0, #8]
   643bc:	ldr	r1, [sp, #4]
   643c0:	add	r0, r0, r1, lsl #2
   643c4:	ldr	r0, [r0]
   643c8:	ldr	r1, [sp, #16]
   643cc:	cmp	r0, r1
   643d0:	bge	643e4 <__assert_fail@plt+0x5182c>
   643d4:	ldr	r0, [sp, #4]
   643d8:	add	r0, r0, #1
   643dc:	str	r0, [sp, #12]
   643e0:	b	643ec <__assert_fail@plt+0x51834>
   643e4:	ldr	r0, [sp, #4]
   643e8:	str	r0, [sp, #8]
   643ec:	b	64390 <__assert_fail@plt+0x517d8>
   643f0:	ldr	r0, [sp, #20]
   643f4:	ldr	r0, [r0, #8]
   643f8:	ldr	r1, [sp, #12]
   643fc:	add	r0, r0, r1, lsl #2
   64400:	ldr	r0, [r0]
   64404:	ldr	r1, [sp, #16]
   64408:	cmp	r0, r1
   6440c:	bne	64420 <__assert_fail@plt+0x51868>
   64410:	ldr	r0, [sp, #12]
   64414:	add	r0, r0, #1
   64418:	str	r0, [sp]
   6441c:	b	6442c <__assert_fail@plt+0x51874>
   64420:	movw	r0, #0
   64424:	str	r0, [sp]
   64428:	b	6442c <__assert_fail@plt+0x51874>
   6442c:	ldr	r0, [sp]
   64430:	str	r0, [sp, #24]
   64434:	ldr	r0, [sp, #24]
   64438:	add	sp, sp, #28
   6443c:	bx	lr
   64440:	push	{fp, lr}
   64444:	mov	fp, sp
   64448:	sub	sp, sp, #40	; 0x28
   6444c:	str	r0, [fp, #-8]
   64450:	str	r1, [fp, #-12]
   64454:	str	r2, [fp, #-16]
   64458:	str	r3, [sp, #20]
   6445c:	ldr	r0, [fp, #-16]
   64460:	ldr	r0, [r0, #4]
   64464:	cmp	r0, #0
   64468:	bne	64480 <__assert_fail@plt+0x518c8>
   6446c:	ldr	r0, [fp, #-8]
   64470:	movw	r1, #0
   64474:	str	r1, [r0]
   64478:	str	r1, [fp, #-4]
   6447c:	b	64590 <__assert_fail@plt+0x519d8>
   64480:	ldr	r0, [fp, #-16]
   64484:	ldr	r1, [sp, #20]
   64488:	bl	6459c <__assert_fail@plt+0x519e4>
   6448c:	str	r0, [sp, #16]
   64490:	ldr	r0, [fp, #-12]
   64494:	ldr	r0, [r0, #32]
   64498:	ldr	r1, [sp, #16]
   6449c:	ldr	lr, [fp, #-12]
   644a0:	ldr	lr, [lr, #68]	; 0x44
   644a4:	and	r1, r1, lr
   644a8:	movw	lr, #12
   644ac:	mul	r1, r1, lr
   644b0:	add	r0, r0, r1
   644b4:	str	r0, [sp, #8]
   644b8:	movw	r0, #0
   644bc:	str	r0, [sp, #4]
   644c0:	ldr	r0, [sp, #4]
   644c4:	ldr	r1, [sp, #8]
   644c8:	ldr	r1, [r1]
   644cc:	cmp	r0, r1
   644d0:	bge	64554 <__assert_fail@plt+0x5199c>
   644d4:	ldr	r0, [sp, #8]
   644d8:	ldr	r0, [r0, #8]
   644dc:	ldr	r1, [sp, #4]
   644e0:	add	r0, r0, r1, lsl #2
   644e4:	ldr	r0, [r0]
   644e8:	str	r0, [sp]
   644ec:	ldr	r0, [sp]
   644f0:	ldr	r0, [r0]
   644f4:	ldr	r1, [sp, #16]
   644f8:	cmp	r0, r1
   644fc:	bne	64540 <__assert_fail@plt+0x51988>
   64500:	ldr	r0, [sp]
   64504:	ldrb	r0, [r0, #52]	; 0x34
   64508:	and	r0, r0, #15
   6450c:	and	r0, r0, #255	; 0xff
   64510:	ldr	r1, [sp, #20]
   64514:	cmp	r0, r1
   64518:	bne	64540 <__assert_fail@plt+0x51988>
   6451c:	ldr	r0, [sp]
   64520:	ldr	r0, [r0, #40]	; 0x28
   64524:	ldr	r1, [fp, #-16]
   64528:	bl	64614 <__assert_fail@plt+0x51a5c>
   6452c:	tst	r0, #1
   64530:	beq	64540 <__assert_fail@plt+0x51988>
   64534:	ldr	r0, [sp]
   64538:	str	r0, [fp, #-4]
   6453c:	b	64590 <__assert_fail@plt+0x519d8>
   64540:	b	64544 <__assert_fail@plt+0x5198c>
   64544:	ldr	r0, [sp, #4]
   64548:	add	r0, r0, #1
   6454c:	str	r0, [sp, #4]
   64550:	b	644c0 <__assert_fail@plt+0x51908>
   64554:	ldr	r0, [fp, #-12]
   64558:	ldr	r1, [fp, #-16]
   6455c:	ldr	r2, [sp, #20]
   64560:	ldr	r3, [sp, #16]
   64564:	bl	646e4 <__assert_fail@plt+0x51b2c>
   64568:	str	r0, [sp, #12]
   6456c:	ldr	r0, [sp, #12]
   64570:	movw	r1, #0
   64574:	cmp	r0, r1
   64578:	bne	64588 <__assert_fail@plt+0x519d0>
   6457c:	ldr	r0, [fp, #-8]
   64580:	movw	r1, #12
   64584:	str	r1, [r0]
   64588:	ldr	r0, [sp, #12]
   6458c:	str	r0, [fp, #-4]
   64590:	ldr	r0, [fp, #-4]
   64594:	mov	sp, fp
   64598:	pop	{fp, pc}
   6459c:	sub	sp, sp, #16
   645a0:	str	r0, [sp, #12]
   645a4:	str	r1, [sp, #8]
   645a8:	ldr	r0, [sp, #12]
   645ac:	ldr	r0, [r0, #4]
   645b0:	ldr	r1, [sp, #8]
   645b4:	add	r0, r0, r1
   645b8:	str	r0, [sp, #4]
   645bc:	movw	r0, #0
   645c0:	str	r0, [sp]
   645c4:	ldr	r0, [sp]
   645c8:	ldr	r1, [sp, #12]
   645cc:	ldr	r1, [r1, #4]
   645d0:	cmp	r0, r1
   645d4:	bge	64608 <__assert_fail@plt+0x51a50>
   645d8:	ldr	r0, [sp, #12]
   645dc:	ldr	r0, [r0, #8]
   645e0:	ldr	r1, [sp]
   645e4:	add	r0, r0, r1, lsl #2
   645e8:	ldr	r0, [r0]
   645ec:	ldr	r1, [sp, #4]
   645f0:	add	r0, r1, r0
   645f4:	str	r0, [sp, #4]
   645f8:	ldr	r0, [sp]
   645fc:	add	r0, r0, #1
   64600:	str	r0, [sp]
   64604:	b	645c4 <__assert_fail@plt+0x51a0c>
   64608:	ldr	r0, [sp, #4]
   6460c:	add	sp, sp, #16
   64610:	bx	lr
   64614:	sub	sp, sp, #16
   64618:	str	r0, [sp, #8]
   6461c:	str	r1, [sp, #4]
   64620:	ldr	r0, [sp, #8]
   64624:	movw	r1, #0
   64628:	cmp	r0, r1
   6462c:	beq	64658 <__assert_fail@plt+0x51aa0>
   64630:	ldr	r0, [sp, #4]
   64634:	movw	r1, #0
   64638:	cmp	r0, r1
   6463c:	beq	64658 <__assert_fail@plt+0x51aa0>
   64640:	ldr	r0, [sp, #8]
   64644:	ldr	r0, [r0, #4]
   64648:	ldr	r1, [sp, #4]
   6464c:	ldr	r1, [r1, #4]
   64650:	cmp	r0, r1
   64654:	beq	64668 <__assert_fail@plt+0x51ab0>
   64658:	movw	r0, #0
   6465c:	and	r0, r0, #1
   64660:	strb	r0, [sp, #15]
   64664:	b	646d4 <__assert_fail@plt+0x51b1c>
   64668:	ldr	r0, [sp, #8]
   6466c:	ldr	r0, [r0, #4]
   64670:	str	r0, [sp]
   64674:	ldr	r0, [sp]
   64678:	mvn	r1, #0
   6467c:	add	r0, r0, r1
   64680:	str	r0, [sp]
   64684:	cmp	r0, #0
   64688:	blt	646c8 <__assert_fail@plt+0x51b10>
   6468c:	ldr	r0, [sp, #8]
   64690:	ldr	r0, [r0, #8]
   64694:	ldr	r1, [sp]
   64698:	ldr	r0, [r0, r1, lsl #2]
   6469c:	ldr	r2, [sp, #4]
   646a0:	ldr	r2, [r2, #8]
   646a4:	add	r1, r2, r1, lsl #2
   646a8:	ldr	r1, [r1]
   646ac:	cmp	r0, r1
   646b0:	beq	646c4 <__assert_fail@plt+0x51b0c>
   646b4:	movw	r0, #0
   646b8:	and	r0, r0, #1
   646bc:	strb	r0, [sp, #15]
   646c0:	b	646d4 <__assert_fail@plt+0x51b1c>
   646c4:	b	64674 <__assert_fail@plt+0x51abc>
   646c8:	movw	r0, #1
   646cc:	and	r0, r0, #1
   646d0:	strb	r0, [sp, #15]
   646d4:	ldrb	r0, [sp, #15]
   646d8:	and	r0, r0, #1
   646dc:	add	sp, sp, #16
   646e0:	bx	lr
   646e4:	push	{fp, lr}
   646e8:	mov	fp, sp
   646ec:	sub	sp, sp, #56	; 0x38
   646f0:	str	r0, [fp, #-8]
   646f4:	str	r1, [fp, #-12]
   646f8:	str	r2, [fp, #-16]
   646fc:	str	r3, [fp, #-20]	; 0xffffffec
   64700:	movw	r0, #0
   64704:	str	r0, [sp, #28]
   64708:	movw	r0, #56	; 0x38
   6470c:	movw	r1, #1
   64710:	bl	50240 <__assert_fail@plt+0x3d688>
   64714:	str	r0, [sp, #20]
   64718:	ldr	r0, [sp, #20]
   6471c:	movw	r1, #0
   64720:	cmp	r0, r1
   64724:	bne	64734 <__assert_fail@plt+0x51b7c>
   64728:	movw	r0, #0
   6472c:	str	r0, [fp, #-4]
   64730:	b	64a30 <__assert_fail@plt+0x51e78>
   64734:	ldr	r0, [sp, #20]
   64738:	add	r0, r0, #4
   6473c:	ldr	r1, [fp, #-12]
   64740:	bl	6427c <__assert_fail@plt+0x516c4>
   64744:	str	r0, [sp, #24]
   64748:	ldr	r0, [sp, #24]
   6474c:	cmp	r0, #0
   64750:	beq	64768 <__assert_fail@plt+0x51bb0>
   64754:	ldr	r0, [sp, #20]
   64758:	bl	50c68 <__assert_fail@plt+0x3e0b0>
   6475c:	movw	r0, #0
   64760:	str	r0, [fp, #-4]
   64764:	b	64a30 <__assert_fail@plt+0x51e78>
   64768:	ldr	r0, [fp, #-16]
   6476c:	ldr	r1, [sp, #20]
   64770:	ldrb	r2, [r1, #52]	; 0x34
   64774:	and	r0, r0, #15
   64778:	bic	r2, r2, #15
   6477c:	orr	r0, r2, r0
   64780:	strb	r0, [r1, #52]	; 0x34
   64784:	ldr	r0, [sp, #20]
   64788:	add	r0, r0, #4
   6478c:	ldr	r1, [sp, #20]
   64790:	str	r0, [r1, #40]	; 0x28
   64794:	movw	r0, #0
   64798:	str	r0, [fp, #-24]	; 0xffffffe8
   6479c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   647a0:	ldr	r1, [fp, #-12]
   647a4:	ldr	r1, [r1, #4]
   647a8:	cmp	r0, r1
   647ac:	bge	649f8 <__assert_fail@plt+0x51e40>
   647b0:	ldr	r0, [fp, #-8]
   647b4:	ldr	r0, [r0]
   647b8:	ldr	r1, [fp, #-12]
   647bc:	ldr	r1, [r1, #8]
   647c0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   647c4:	ldr	r1, [r1, r2, lsl #2]
   647c8:	add	r0, r0, r1, lsl #3
   647cc:	str	r0, [sp, #16]
   647d0:	ldr	r0, [sp, #16]
   647d4:	ldr	r0, [r0, #4]
   647d8:	and	r0, r0, #255	; 0xff
   647dc:	str	r0, [sp, #12]
   647e0:	ldr	r0, [sp, #16]
   647e4:	ldr	r0, [r0, #4]
   647e8:	lsr	r0, r0, #8
   647ec:	movw	r1, #1023	; 0x3ff
   647f0:	and	r0, r0, r1
   647f4:	str	r0, [sp, #8]
   647f8:	ldr	r0, [sp, #12]
   647fc:	cmp	r0, #1
   64800:	bne	64814 <__assert_fail@plt+0x51c5c>
   64804:	ldr	r0, [sp, #8]
   64808:	cmp	r0, #0
   6480c:	bne	64814 <__assert_fail@plt+0x51c5c>
   64810:	b	649e8 <__assert_fail@plt+0x51e30>
   64814:	ldr	r0, [sp, #16]
   64818:	ldr	r0, [r0, #4]
   6481c:	ldr	r1, [sp, #20]
   64820:	ldrb	r2, [r1, #52]	; 0x34
   64824:	lsr	r3, r2, #5
   64828:	orr	r0, r3, r0, lsr #20
   6482c:	and	r0, r0, #1
   64830:	lsl	r0, r0, #5
   64834:	bic	r2, r2, #32
   64838:	orr	r0, r2, r0
   6483c:	strb	r0, [r1, #52]	; 0x34
   64840:	ldr	r0, [sp, #12]
   64844:	cmp	r0, #2
   64848:	bne	64868 <__assert_fail@plt+0x51cb0>
   6484c:	ldr	r0, [sp, #20]
   64850:	ldrb	r1, [r0, #52]	; 0x34
   64854:	bic	r1, r1, #16
   64858:	movw	r2, #16
   6485c:	orr	r1, r1, r2
   64860:	strb	r1, [r0, #52]	; 0x34
   64864:	b	64890 <__assert_fail@plt+0x51cd8>
   64868:	ldr	r0, [sp, #12]
   6486c:	cmp	r0, #4
   64870:	bne	6488c <__assert_fail@plt+0x51cd4>
   64874:	ldr	r0, [sp, #20]
   64878:	ldrb	r1, [r0, #52]	; 0x34
   6487c:	bic	r1, r1, #64	; 0x40
   64880:	movw	r2, #64	; 0x40
   64884:	orr	r1, r1, r2
   64888:	strb	r1, [r0, #52]	; 0x34
   6488c:	b	64890 <__assert_fail@plt+0x51cd8>
   64890:	ldr	r0, [sp, #8]
   64894:	cmp	r0, #0
   64898:	beq	649e4 <__assert_fail@plt+0x51e2c>
   6489c:	ldr	r0, [sp, #20]
   648a0:	ldr	r0, [r0, #40]	; 0x28
   648a4:	ldr	r1, [sp, #20]
   648a8:	add	r1, r1, #4
   648ac:	cmp	r0, r1
   648b0:	bne	6493c <__assert_fail@plt+0x51d84>
   648b4:	movw	r0, #12
   648b8:	bl	549ac <__assert_fail@plt+0x41df4>
   648bc:	str	r0, [sp, #4]
   648c0:	ldr	r0, [sp, #4]
   648c4:	movw	lr, #0
   648c8:	cmp	r0, lr
   648cc:	bne	648e4 <__assert_fail@plt+0x51d2c>
   648d0:	ldr	r0, [sp, #20]
   648d4:	bl	59c9c <__assert_fail@plt+0x470e4>
   648d8:	movw	r0, #0
   648dc:	str	r0, [fp, #-4]
   648e0:	b	64a30 <__assert_fail@plt+0x51e78>
   648e4:	ldr	r0, [sp, #4]
   648e8:	ldr	r1, [sp, #20]
   648ec:	str	r0, [r1, #40]	; 0x28
   648f0:	ldr	r0, [sp, #20]
   648f4:	ldr	r0, [r0, #40]	; 0x28
   648f8:	ldr	r1, [fp, #-12]
   648fc:	bl	6427c <__assert_fail@plt+0x516c4>
   64900:	cmp	r0, #0
   64904:	beq	6491c <__assert_fail@plt+0x51d64>
   64908:	ldr	r0, [sp, #20]
   6490c:	bl	59c9c <__assert_fail@plt+0x470e4>
   64910:	movw	r0, #0
   64914:	str	r0, [fp, #-4]
   64918:	b	64a30 <__assert_fail@plt+0x51e78>
   6491c:	mov	r0, #0
   64920:	str	r0, [sp, #28]
   64924:	ldr	r0, [sp, #20]
   64928:	ldrb	r1, [r0, #52]	; 0x34
   6492c:	and	r1, r1, #127	; 0x7f
   64930:	movw	r2, #128	; 0x80
   64934:	orr	r1, r1, r2
   64938:	strb	r1, [r0, #52]	; 0x34
   6493c:	ldr	r0, [sp, #8]
   64940:	and	r0, r0, #1
   64944:	cmp	r0, #0
   64948:	beq	6495c <__assert_fail@plt+0x51da4>
   6494c:	ldr	r0, [fp, #-16]
   64950:	and	r0, r0, #1
   64954:	cmp	r0, #0
   64958:	beq	649bc <__assert_fail@plt+0x51e04>
   6495c:	ldr	r0, [sp, #8]
   64960:	and	r0, r0, #2
   64964:	cmp	r0, #0
   64968:	beq	6497c <__assert_fail@plt+0x51dc4>
   6496c:	ldr	r0, [fp, #-16]
   64970:	and	r0, r0, #1
   64974:	cmp	r0, #0
   64978:	bne	649bc <__assert_fail@plt+0x51e04>
   6497c:	ldr	r0, [sp, #8]
   64980:	and	r0, r0, #16
   64984:	cmp	r0, #0
   64988:	beq	6499c <__assert_fail@plt+0x51de4>
   6498c:	ldr	r0, [fp, #-16]
   64990:	and	r0, r0, #2
   64994:	cmp	r0, #0
   64998:	beq	649bc <__assert_fail@plt+0x51e04>
   6499c:	ldr	r0, [sp, #8]
   649a0:	and	r0, r0, #64	; 0x40
   649a4:	cmp	r0, #0
   649a8:	beq	649e0 <__assert_fail@plt+0x51e28>
   649ac:	ldr	r0, [fp, #-16]
   649b0:	and	r0, r0, #4
   649b4:	cmp	r0, #0
   649b8:	bne	649e0 <__assert_fail@plt+0x51e28>
   649bc:	ldr	r0, [sp, #20]
   649c0:	add	r0, r0, #4
   649c4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   649c8:	ldr	r2, [sp, #28]
   649cc:	sub	r1, r1, r2
   649d0:	bl	64a3c <__assert_fail@plt+0x51e84>
   649d4:	ldr	r0, [sp, #28]
   649d8:	add	r0, r0, #1
   649dc:	str	r0, [sp, #28]
   649e0:	b	649e4 <__assert_fail@plt+0x51e2c>
   649e4:	b	649e8 <__assert_fail@plt+0x51e30>
   649e8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   649ec:	add	r0, r0, #1
   649f0:	str	r0, [fp, #-24]	; 0xffffffe8
   649f4:	b	6479c <__assert_fail@plt+0x51be4>
   649f8:	ldr	r0, [fp, #-8]
   649fc:	ldr	r1, [sp, #20]
   64a00:	ldr	r2, [fp, #-20]	; 0xffffffec
   64a04:	bl	64ac4 <__assert_fail@plt+0x51f0c>
   64a08:	str	r0, [sp, #24]
   64a0c:	ldr	r0, [sp, #24]
   64a10:	cmp	r0, #0
   64a14:	beq	64a28 <__assert_fail@plt+0x51e70>
   64a18:	ldr	r0, [sp, #20]
   64a1c:	bl	59c9c <__assert_fail@plt+0x470e4>
   64a20:	movw	r0, #0
   64a24:	str	r0, [sp, #20]
   64a28:	ldr	r0, [sp, #20]
   64a2c:	str	r0, [fp, #-4]
   64a30:	ldr	r0, [fp, #-4]
   64a34:	mov	sp, fp
   64a38:	pop	{fp, pc}
   64a3c:	sub	sp, sp, #8
   64a40:	str	r0, [sp, #4]
   64a44:	str	r1, [sp]
   64a48:	ldr	r0, [sp]
   64a4c:	cmp	r0, #0
   64a50:	blt	64a68 <__assert_fail@plt+0x51eb0>
   64a54:	ldr	r0, [sp]
   64a58:	ldr	r1, [sp, #4]
   64a5c:	ldr	r1, [r1, #4]
   64a60:	cmp	r0, r1
   64a64:	blt	64a6c <__assert_fail@plt+0x51eb4>
   64a68:	b	64abc <__assert_fail@plt+0x51f04>
   64a6c:	ldr	r0, [sp, #4]
   64a70:	ldr	r1, [r0, #4]
   64a74:	mvn	r2, #0
   64a78:	add	r1, r1, r2
   64a7c:	str	r1, [r0, #4]
   64a80:	ldr	r0, [sp]
   64a84:	ldr	r1, [sp, #4]
   64a88:	ldr	r1, [r1, #4]
   64a8c:	cmp	r0, r1
   64a90:	bge	64abc <__assert_fail@plt+0x51f04>
   64a94:	ldr	r0, [sp, #4]
   64a98:	ldr	r0, [r0, #8]
   64a9c:	ldr	r1, [sp]
   64aa0:	add	r0, r0, r1, lsl #2
   64aa4:	ldr	r1, [r0, #4]
   64aa8:	str	r1, [r0]
   64aac:	ldr	r0, [sp]
   64ab0:	add	r0, r0, #1
   64ab4:	str	r0, [sp]
   64ab8:	b	64a80 <__assert_fail@plt+0x51ec8>
   64abc:	add	sp, sp, #8
   64ac0:	bx	lr
   64ac4:	push	{fp, lr}
   64ac8:	mov	fp, sp
   64acc:	sub	sp, sp, #40	; 0x28
   64ad0:	str	r0, [fp, #-8]
   64ad4:	str	r1, [fp, #-12]
   64ad8:	str	r2, [fp, #-16]
   64adc:	ldr	r0, [fp, #-16]
   64ae0:	ldr	r1, [fp, #-12]
   64ae4:	str	r0, [r1]
   64ae8:	ldr	r0, [fp, #-12]
   64aec:	add	r0, r0, #16
   64af0:	ldr	r1, [fp, #-12]
   64af4:	ldr	r1, [r1, #8]
   64af8:	bl	6342c <__assert_fail@plt+0x50874>
   64afc:	str	r0, [sp, #16]
   64b00:	ldr	r0, [sp, #16]
   64b04:	cmp	r0, #0
   64b08:	beq	64b18 <__assert_fail@plt+0x51f60>
   64b0c:	movw	r0, #12
   64b10:	str	r0, [fp, #-4]
   64b14:	b	64c70 <__assert_fail@plt+0x520b8>
   64b18:	movw	r0, #0
   64b1c:	str	r0, [sp, #12]
   64b20:	ldr	r0, [sp, #12]
   64b24:	ldr	r1, [fp, #-12]
   64b28:	ldr	r1, [r1, #8]
   64b2c:	cmp	r0, r1
   64b30:	bge	64ba8 <__assert_fail@plt+0x51ff0>
   64b34:	ldr	r0, [fp, #-12]
   64b38:	ldr	r0, [r0, #12]
   64b3c:	ldr	r1, [sp, #12]
   64b40:	ldr	r0, [r0, r1, lsl #2]
   64b44:	str	r0, [sp, #8]
   64b48:	ldr	r0, [fp, #-8]
   64b4c:	ldr	r0, [r0]
   64b50:	ldr	r1, [sp, #8]
   64b54:	add	r0, r0, r1, lsl #3
   64b58:	ldr	r0, [r0, #4]
   64b5c:	and	r0, r0, #255	; 0xff
   64b60:	and	r0, r0, #8
   64b64:	cmp	r0, #0
   64b68:	bne	64b94 <__assert_fail@plt+0x51fdc>
   64b6c:	ldr	r0, [fp, #-12]
   64b70:	add	r0, r0, #16
   64b74:	ldr	r1, [sp, #8]
   64b78:	bl	641bc <__assert_fail@plt+0x51604>
   64b7c:	tst	r0, #1
   64b80:	bne	64b90 <__assert_fail@plt+0x51fd8>
   64b84:	movw	r0, #12
   64b88:	str	r0, [fp, #-4]
   64b8c:	b	64c70 <__assert_fail@plt+0x520b8>
   64b90:	b	64b94 <__assert_fail@plt+0x51fdc>
   64b94:	b	64b98 <__assert_fail@plt+0x51fe0>
   64b98:	ldr	r0, [sp, #12]
   64b9c:	add	r0, r0, #1
   64ba0:	str	r0, [sp, #12]
   64ba4:	b	64b20 <__assert_fail@plt+0x51f68>
   64ba8:	ldr	r0, [fp, #-8]
   64bac:	ldr	r0, [r0, #32]
   64bb0:	ldr	r1, [fp, #-16]
   64bb4:	ldr	r2, [fp, #-8]
   64bb8:	ldr	r2, [r2, #68]	; 0x44
   64bbc:	and	r1, r1, r2
   64bc0:	movw	r2, #12
   64bc4:	mul	r1, r1, r2
   64bc8:	add	r0, r0, r1
   64bcc:	str	r0, [sp, #20]
   64bd0:	ldr	r0, [sp, #20]
   64bd4:	ldr	r0, [r0, #4]
   64bd8:	ldr	r1, [sp, #20]
   64bdc:	ldr	r1, [r1]
   64be0:	cmp	r0, r1
   64be4:	bgt	64c48 <__assert_fail@plt+0x52090>
   64be8:	ldr	r0, [sp, #20]
   64bec:	ldr	r0, [r0]
   64bf0:	mov	r1, #2
   64bf4:	add	r0, r1, r0, lsl #1
   64bf8:	str	r0, [sp, #4]
   64bfc:	ldr	r0, [sp, #20]
   64c00:	ldr	r0, [r0, #8]
   64c04:	ldr	r1, [sp, #4]
   64c08:	lsl	r1, r1, #2
   64c0c:	bl	55a84 <__assert_fail@plt+0x42ecc>
   64c10:	str	r0, [sp]
   64c14:	ldr	r0, [sp]
   64c18:	movw	r1, #0
   64c1c:	cmp	r0, r1
   64c20:	bne	64c30 <__assert_fail@plt+0x52078>
   64c24:	movw	r0, #12
   64c28:	str	r0, [fp, #-4]
   64c2c:	b	64c70 <__assert_fail@plt+0x520b8>
   64c30:	ldr	r0, [sp]
   64c34:	ldr	r1, [sp, #20]
   64c38:	str	r0, [r1, #8]
   64c3c:	ldr	r0, [sp, #4]
   64c40:	ldr	r1, [sp, #20]
   64c44:	str	r0, [r1, #4]
   64c48:	ldr	r0, [fp, #-12]
   64c4c:	ldr	r1, [sp, #20]
   64c50:	ldr	r2, [r1]
   64c54:	ldr	r3, [r1, #8]
   64c58:	add	ip, r2, #1
   64c5c:	str	ip, [r1]
   64c60:	add	r1, r3, r2, lsl #2
   64c64:	str	r0, [r1]
   64c68:	movw	r0, #0
   64c6c:	str	r0, [fp, #-4]
   64c70:	ldr	r0, [fp, #-4]
   64c74:	mov	sp, fp
   64c78:	pop	{fp, pc}
   64c7c:	push	{fp, lr}
   64c80:	mov	fp, sp
   64c84:	sub	sp, sp, #40	; 0x28
   64c88:	str	r0, [fp, #-8]
   64c8c:	str	r1, [fp, #-12]
   64c90:	str	r2, [fp, #-16]
   64c94:	str	r3, [sp, #20]
   64c98:	movw	r0, #1
   64c9c:	str	r0, [sp, #16]
   64ca0:	ldr	r0, [fp, #-16]
   64ca4:	add	r0, r0, #1
   64ca8:	str	r0, [sp, #8]
   64cac:	ldr	r0, [sp, #20]
   64cb0:	cmp	r0, #0
   64cb4:	bne	64d3c <__assert_fail@plt+0x52184>
   64cb8:	ldr	r0, [sp, #8]
   64cbc:	lsl	r0, r0, #2
   64cc0:	bl	549ac <__assert_fail@plt+0x41df4>
   64cc4:	ldr	lr, [fp, #-8]
   64cc8:	str	r0, [lr, #4]
   64ccc:	ldr	r0, [fp, #-8]
   64cd0:	ldr	r0, [r0, #4]
   64cd4:	movw	lr, #0
   64cd8:	cmp	r0, lr
   64cdc:	bne	64cec <__assert_fail@plt+0x52134>
   64ce0:	movw	r0, #0
   64ce4:	str	r0, [fp, #-4]
   64ce8:	b	64ee4 <__assert_fail@plt+0x5232c>
   64cec:	ldr	r0, [sp, #8]
   64cf0:	lsl	r0, r0, #2
   64cf4:	bl	549ac <__assert_fail@plt+0x41df4>
   64cf8:	ldr	lr, [fp, #-8]
   64cfc:	str	r0, [lr, #8]
   64d00:	ldr	r0, [fp, #-8]
   64d04:	ldr	r0, [r0, #8]
   64d08:	movw	lr, #0
   64d0c:	cmp	r0, lr
   64d10:	bne	64d2c <__assert_fail@plt+0x52174>
   64d14:	ldr	r0, [fp, #-8]
   64d18:	ldr	r0, [r0, #4]
   64d1c:	bl	50c68 <__assert_fail@plt+0x3e0b0>
   64d20:	movw	r0, #0
   64d24:	str	r0, [fp, #-4]
   64d28:	b	64ee4 <__assert_fail@plt+0x5232c>
   64d2c:	ldr	r0, [sp, #8]
   64d30:	ldr	r1, [fp, #-8]
   64d34:	str	r0, [r1]
   64d38:	b	64e28 <__assert_fail@plt+0x52270>
   64d3c:	ldr	r0, [sp, #20]
   64d40:	cmp	r0, #1
   64d44:	bne	64df4 <__assert_fail@plt+0x5223c>
   64d48:	ldr	r0, [sp, #8]
   64d4c:	ldr	r1, [fp, #-8]
   64d50:	ldr	r1, [r1]
   64d54:	cmp	r0, r1
   64d58:	bls	64df0 <__assert_fail@plt+0x52238>
   64d5c:	ldr	r0, [fp, #-8]
   64d60:	ldr	r0, [r0, #4]
   64d64:	ldr	r1, [sp, #8]
   64d68:	lsl	r1, r1, #2
   64d6c:	bl	55a84 <__assert_fail@plt+0x42ecc>
   64d70:	str	r0, [sp, #4]
   64d74:	ldr	r0, [sp, #4]
   64d78:	movw	r1, #0
   64d7c:	cmp	r0, r1
   64d80:	bne	64d90 <__assert_fail@plt+0x521d8>
   64d84:	movw	r0, #0
   64d88:	str	r0, [fp, #-4]
   64d8c:	b	64ee4 <__assert_fail@plt+0x5232c>
   64d90:	ldr	r0, [fp, #-8]
   64d94:	ldr	r0, [r0, #8]
   64d98:	ldr	r1, [sp, #8]
   64d9c:	lsl	r1, r1, #2
   64da0:	bl	55a84 <__assert_fail@plt+0x42ecc>
   64da4:	str	r0, [sp]
   64da8:	ldr	r0, [sp]
   64dac:	movw	r1, #0
   64db0:	cmp	r0, r1
   64db4:	bne	64dcc <__assert_fail@plt+0x52214>
   64db8:	ldr	r0, [sp, #4]
   64dbc:	bl	50c68 <__assert_fail@plt+0x3e0b0>
   64dc0:	movw	r0, #0
   64dc4:	str	r0, [fp, #-4]
   64dc8:	b	64ee4 <__assert_fail@plt+0x5232c>
   64dcc:	ldr	r0, [sp, #4]
   64dd0:	ldr	r1, [fp, #-8]
   64dd4:	str	r0, [r1, #4]
   64dd8:	ldr	r0, [sp]
   64ddc:	ldr	r1, [fp, #-8]
   64de0:	str	r0, [r1, #8]
   64de4:	ldr	r0, [sp, #8]
   64de8:	ldr	r1, [fp, #-8]
   64dec:	str	r0, [r1]
   64df0:	b	64e24 <__assert_fail@plt+0x5226c>
   64df4:	ldr	r0, [sp, #20]
   64df8:	cmp	r0, #2
   64dfc:	bne	64e04 <__assert_fail@plt+0x5224c>
   64e00:	b	64e04 <__assert_fail@plt+0x5224c>
   64e04:	ldr	r0, [fp, #-16]
   64e08:	ldr	r1, [fp, #-8]
   64e0c:	ldr	r1, [r1]
   64e10:	cmp	r0, r1
   64e14:	bhi	64e1c <__assert_fail@plt+0x52264>
   64e18:	b	64e1c <__assert_fail@plt+0x52264>
   64e1c:	movw	r0, #2
   64e20:	str	r0, [sp, #16]
   64e24:	b	64e28 <__assert_fail@plt+0x52270>
   64e28:	movw	r0, #0
   64e2c:	str	r0, [sp, #12]
   64e30:	ldr	r0, [sp, #12]
   64e34:	ldr	r1, [fp, #-16]
   64e38:	cmp	r0, r1
   64e3c:	bge	64e88 <__assert_fail@plt+0x522d0>
   64e40:	ldr	r0, [fp, #-12]
   64e44:	ldr	r1, [sp, #12]
   64e48:	ldr	r0, [r0, r1, lsl #3]
   64e4c:	ldr	r2, [fp, #-8]
   64e50:	ldr	r2, [r2, #4]
   64e54:	str	r0, [r2, r1, lsl #2]
   64e58:	ldr	r0, [fp, #-12]
   64e5c:	ldr	r1, [sp, #12]
   64e60:	add	r0, r0, r1, lsl #3
   64e64:	ldr	r0, [r0, #4]
   64e68:	ldr	r2, [fp, #-8]
   64e6c:	ldr	r2, [r2, #8]
   64e70:	add	r1, r2, r1, lsl #2
   64e74:	str	r0, [r1]
   64e78:	ldr	r0, [sp, #12]
   64e7c:	add	r0, r0, #1
   64e80:	str	r0, [sp, #12]
   64e84:	b	64e30 <__assert_fail@plt+0x52278>
   64e88:	b	64e8c <__assert_fail@plt+0x522d4>
   64e8c:	ldr	r0, [sp, #12]
   64e90:	ldr	r1, [fp, #-8]
   64e94:	ldr	r1, [r1]
   64e98:	cmp	r0, r1
   64e9c:	bcs	64edc <__assert_fail@plt+0x52324>
   64ea0:	ldr	r0, [fp, #-8]
   64ea4:	ldr	r0, [r0, #8]
   64ea8:	ldr	r1, [sp, #12]
   64eac:	mvn	r2, #0
   64eb0:	str	r2, [r0, r1, lsl #2]
   64eb4:	ldr	r0, [fp, #-8]
   64eb8:	ldr	r0, [r0, #4]
   64ebc:	ldr	r1, [sp, #12]
   64ec0:	add	r0, r0, r1, lsl #2
   64ec4:	mvn	r1, #0
   64ec8:	str	r1, [r0]
   64ecc:	ldr	r0, [sp, #12]
   64ed0:	add	r0, r0, #1
   64ed4:	str	r0, [sp, #12]
   64ed8:	b	64e8c <__assert_fail@plt+0x522d4>
   64edc:	ldr	r0, [sp, #16]
   64ee0:	str	r0, [fp, #-4]
   64ee4:	ldr	r0, [fp, #-4]
   64ee8:	mov	sp, fp
   64eec:	pop	{fp, pc}
   64ef0:	push	{r4, sl, fp, lr}
   64ef4:	add	fp, sp, #8
   64ef8:	sub	sp, sp, #64	; 0x40
   64efc:	ldr	ip, [fp, #16]
   64f00:	ldr	lr, [fp, #12]
   64f04:	ldr	r4, [fp, #8]
   64f08:	str	r0, [fp, #-16]
   64f0c:	str	r1, [fp, #-20]	; 0xffffffec
   64f10:	str	r2, [fp, #-24]	; 0xffffffe8
   64f14:	str	r3, [fp, #-28]	; 0xffffffe4
   64f18:	and	r0, lr, #1
   64f1c:	strb	r0, [fp, #-29]	; 0xffffffe3
   64f20:	ldr	r0, [fp, #-28]	; 0xffffffe4
   64f24:	ldr	r1, [fp, #16]
   64f28:	ldr	r1, [r1, #92]	; 0x5c
   64f2c:	cmp	r0, r1
   64f30:	str	r4, [sp, #28]
   64f34:	str	ip, [sp, #24]
   64f38:	bge	64f48 <__assert_fail@plt+0x52390>
   64f3c:	ldr	r0, [fp, #16]
   64f40:	ldr	r0, [r0, #92]	; 0x5c
   64f44:	str	r0, [fp, #-28]	; 0xffffffe4
   64f48:	ldr	r0, [fp, #-24]	; 0xffffffe8
   64f4c:	add	r0, r0, #1
   64f50:	ldr	r1, [fp, #-28]	; 0xffffffe4
   64f54:	cmp	r0, r1
   64f58:	bge	64f6c <__assert_fail@plt+0x523b4>
   64f5c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   64f60:	add	r0, r0, #1
   64f64:	str	r0, [sp, #20]
   64f68:	b	64f74 <__assert_fail@plt+0x523bc>
   64f6c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   64f70:	str	r0, [sp, #20]
   64f74:	ldr	r0, [sp, #20]
   64f78:	str	r0, [sp, #32]
   64f7c:	ldr	r0, [fp, #-20]	; 0xffffffec
   64f80:	ldr	r1, [fp, #-24]	; 0xffffffe8
   64f84:	ldr	r2, [fp, #-16]
   64f88:	ldr	r3, [fp, #8]
   64f8c:	ldrb	ip, [fp, #-29]	; 0xffffffe3
   64f90:	ldr	lr, [fp, #16]
   64f94:	and	ip, ip, #1
   64f98:	str	ip, [sp]
   64f9c:	str	lr, [sp, #4]
   64fa0:	bl	5b244 <__assert_fail@plt+0x4868c>
   64fa4:	ldr	r0, [fp, #-16]
   64fa8:	ldr	r1, [sp, #32]
   64fac:	bl	5b348 <__assert_fail@plt+0x48790>
   64fb0:	str	r0, [sp, #36]	; 0x24
   64fb4:	ldr	r0, [sp, #36]	; 0x24
   64fb8:	cmp	r0, #0
   64fbc:	beq	64fcc <__assert_fail@plt+0x52414>
   64fc0:	ldr	r0, [sp, #36]	; 0x24
   64fc4:	str	r0, [fp, #-12]
   64fc8:	b	65080 <__assert_fail@plt+0x524c8>
   64fcc:	ldr	r0, [fp, #16]
   64fd0:	add	r0, r0, #96	; 0x60
   64fd4:	ldr	r1, [fp, #-16]
   64fd8:	str	r0, [r1, #68]	; 0x44
   64fdc:	ldr	r0, [fp, #16]
   64fe0:	ldrb	r0, [r0, #88]	; 0x58
   64fe4:	ubfx	r0, r0, #4, #1
   64fe8:	and	r0, r0, #255	; 0xff
   64fec:	ldr	r1, [fp, #-16]
   64ff0:	strb	r0, [r1, #78]	; 0x4e
   64ff4:	ldr	r0, [fp, #-16]
   64ff8:	ldrb	r0, [r0, #75]	; 0x4b
   64ffc:	cmp	r0, #0
   65000:	beq	65014 <__assert_fail@plt+0x5245c>
   65004:	ldr	r0, [fp, #-16]
   65008:	ldr	r0, [r0, #4]
   6500c:	str	r0, [sp, #16]
   65010:	b	6501c <__assert_fail@plt+0x52464>
   65014:	ldr	r0, [fp, #-20]	; 0xffffffec
   65018:	str	r0, [sp, #16]
   6501c:	ldr	r0, [sp, #16]
   65020:	ldr	r1, [fp, #-16]
   65024:	str	r0, [r1, #4]
   65028:	ldr	r0, [fp, #-16]
   6502c:	ldrb	r0, [r0, #75]	; 0x4b
   65030:	cmp	r0, #0
   65034:	bne	65048 <__assert_fail@plt+0x52490>
   65038:	ldr	r0, [fp, #16]
   6503c:	ldr	r0, [r0, #92]	; 0x5c
   65040:	cmp	r0, #1
   65044:	ble	65054 <__assert_fail@plt+0x5249c>
   65048:	movw	r0, #0
   6504c:	str	r0, [sp, #12]
   65050:	b	6505c <__assert_fail@plt+0x524a4>
   65054:	ldr	r0, [fp, #-24]	; 0xffffffe8
   65058:	str	r0, [sp, #12]
   6505c:	ldr	r0, [sp, #12]
   65060:	ldr	r1, [fp, #-16]
   65064:	str	r0, [r1, #28]
   65068:	ldr	r0, [fp, #-16]
   6506c:	ldr	r0, [r0, #28]
   65070:	ldr	r1, [fp, #-16]
   65074:	str	r0, [r1, #32]
   65078:	movw	r0, #0
   6507c:	str	r0, [fp, #-12]
   65080:	ldr	r0, [fp, #-12]
   65084:	sub	sp, fp, #8
   65088:	pop	{r4, sl, fp, pc}
   6508c:	push	{fp, lr}
   65090:	mov	fp, sp
   65094:	sub	sp, sp, #32
   65098:	str	r0, [fp, #-8]
   6509c:	str	r1, [fp, #-12]
   650a0:	str	r2, [sp, #16]
   650a4:	ldr	r0, [fp, #-12]
   650a8:	ldr	r1, [fp, #-8]
   650ac:	str	r0, [r1, #88]	; 0x58
   650b0:	ldr	r0, [fp, #-8]
   650b4:	mvn	r1, #0
   650b8:	str	r1, [r0, #92]	; 0x5c
   650bc:	ldr	r0, [sp, #16]
   650c0:	cmp	r0, #0
   650c4:	ble	651a0 <__assert_fail@plt+0x525e8>
   650c8:	ldr	r0, [pc, #264]	; 651d8 <__assert_fail@plt+0x52620>
   650cc:	movw	r1, #24
   650d0:	str	r1, [sp, #12]
   650d4:	ldr	r1, [sp, #12]
   650d8:	mvn	r2, #0
   650dc:	udiv	r1, r2, r1
   650e0:	cmp	r0, r1
   650e4:	bcs	650f4 <__assert_fail@plt+0x5253c>
   650e8:	ldr	r0, [pc, #232]	; 651d8 <__assert_fail@plt+0x52620>
   650ec:	str	r0, [sp, #8]
   650f0:	b	65104 <__assert_fail@plt+0x5254c>
   650f4:	ldr	r0, [sp, #12]
   650f8:	mvn	r1, #0
   650fc:	udiv	r0, r1, r0
   65100:	str	r0, [sp, #8]
   65104:	ldr	r0, [sp, #8]
   65108:	ldr	r1, [sp, #16]
   6510c:	cmp	r0, r1
   65110:	bcs	65120 <__assert_fail@plt+0x52568>
   65114:	movw	r0, #12
   65118:	str	r0, [fp, #-4]
   6511c:	b	651cc <__assert_fail@plt+0x52614>
   65120:	ldr	r0, [sp, #16]
   65124:	add	r0, r0, r0, lsl #1
   65128:	lsl	r0, r0, #3
   6512c:	bl	549ac <__assert_fail@plt+0x41df4>
   65130:	ldr	lr, [fp, #-8]
   65134:	str	r0, [lr, #116]	; 0x74
   65138:	ldr	r0, [sp, #16]
   6513c:	lsl	r0, r0, #2
   65140:	bl	549ac <__assert_fail@plt+0x41df4>
   65144:	ldr	lr, [fp, #-8]
   65148:	str	r0, [lr, #132]	; 0x84
   6514c:	ldr	r0, [fp, #-8]
   65150:	ldr	r0, [r0, #116]	; 0x74
   65154:	movw	lr, #0
   65158:	cmp	r0, lr
   6515c:	movw	r0, #1
   65160:	str	r0, [sp, #4]
   65164:	beq	65184 <__assert_fail@plt+0x525cc>
   65168:	ldr	r0, [fp, #-8]
   6516c:	ldr	r0, [r0, #132]	; 0x84
   65170:	movw	r1, #0
   65174:	cmp	r0, r1
   65178:	movw	r0, #0
   6517c:	moveq	r0, #1
   65180:	str	r0, [sp, #4]
   65184:	ldr	r0, [sp, #4]
   65188:	tst	r0, #1
   6518c:	beq	6519c <__assert_fail@plt+0x525e4>
   65190:	movw	r0, #12
   65194:	str	r0, [fp, #-4]
   65198:	b	651cc <__assert_fail@plt+0x52614>
   6519c:	b	651a0 <__assert_fail@plt+0x525e8>
   651a0:	ldr	r0, [sp, #16]
   651a4:	ldr	r1, [fp, #-8]
   651a8:	str	r0, [r1, #112]	; 0x70
   651ac:	ldr	r0, [fp, #-8]
   651b0:	movw	r1, #1
   651b4:	str	r1, [r0, #120]	; 0x78
   651b8:	ldr	r0, [sp, #16]
   651bc:	ldr	r1, [fp, #-8]
   651c0:	str	r0, [r1, #128]	; 0x80
   651c4:	movw	r0, #0
   651c8:	str	r0, [fp, #-4]
   651cc:	ldr	r0, [fp, #-4]
   651d0:	mov	sp, fp
   651d4:	pop	{fp, pc}
   651d8:	svcvc	0x00ffffff
   651dc:	push	{fp, lr}
   651e0:	mov	fp, sp
   651e4:	sub	sp, sp, #128	; 0x80
   651e8:	str	r0, [fp, #-8]
   651ec:	str	r1, [fp, #-12]
   651f0:	str	r2, [fp, #-16]
   651f4:	ldr	r0, [fp, #-8]
   651f8:	ldr	r0, [r0, #24]
   651fc:	ldr	r1, [fp, #-12]
   65200:	cmp	r0, r1
   65204:	bgt	65220 <__assert_fail@plt+0x52668>
   65208:	ldr	r0, [fp, #-12]
   6520c:	ldr	r1, [fp, #-8]
   65210:	ldr	r1, [r1, #24]
   65214:	sub	r0, r0, r1
   65218:	str	r0, [fp, #-20]	; 0xffffffec
   6521c:	b	652e0 <__assert_fail@plt+0x52728>
   65220:	ldr	r0, [fp, #-8]
   65224:	ldr	r0, [r0, #80]	; 0x50
   65228:	cmp	r0, #1
   6522c:	ble	65248 <__assert_fail@plt+0x52690>
   65230:	ldr	r0, [fp, #-8]
   65234:	add	r0, r0, #16
   65238:	movw	r1, #0
   6523c:	and	r1, r1, #255	; 0xff
   65240:	movw	r2, #8
   65244:	bl	12900 <memset@plt>
   65248:	ldr	r0, [fp, #-8]
   6524c:	ldr	r0, [r0, #44]	; 0x2c
   65250:	ldr	r1, [fp, #-8]
   65254:	str	r0, [r1, #48]	; 0x30
   65258:	ldr	r0, [fp, #-8]
   6525c:	ldr	r0, [r0, #52]	; 0x34
   65260:	ldr	r1, [fp, #-8]
   65264:	str	r0, [r1, #56]	; 0x38
   65268:	ldr	r0, [fp, #-8]
   6526c:	movw	r1, #0
   65270:	str	r1, [r0, #28]
   65274:	ldr	r0, [fp, #-8]
   65278:	str	r1, [r0, #24]
   6527c:	ldr	r0, [fp, #-8]
   65280:	str	r1, [r0, #32]
   65284:	ldr	r0, [fp, #-8]
   65288:	movw	r1, #0
   6528c:	strb	r1, [r0, #76]	; 0x4c
   65290:	ldr	r0, [fp, #-16]
   65294:	and	r0, r0, #1
   65298:	cmp	r0, #0
   6529c:	movw	r0, #0
   652a0:	movne	r0, #1
   652a4:	tst	r0, #1
   652a8:	movw	r0, #4
   652ac:	moveq	r0, #6
   652b0:	ldr	r1, [fp, #-8]
   652b4:	str	r0, [r1, #60]	; 0x3c
   652b8:	ldr	r0, [fp, #-8]
   652bc:	ldrsb	r0, [r0, #75]	; 0x4b
   652c0:	cmp	r0, #0
   652c4:	bne	652d8 <__assert_fail@plt+0x52720>
   652c8:	ldr	r0, [fp, #-8]
   652cc:	ldr	r0, [r0]
   652d0:	ldr	r1, [fp, #-8]
   652d4:	str	r0, [r1, #4]
   652d8:	ldr	r0, [fp, #-12]
   652dc:	str	r0, [fp, #-20]	; 0xffffffec
   652e0:	ldr	r0, [fp, #-20]	; 0xffffffec
   652e4:	cmp	r0, #0
   652e8:	beq	65cc0 <__assert_fail@plt+0x53108>
   652ec:	ldr	r0, [fp, #-20]	; 0xffffffec
   652f0:	ldr	r1, [fp, #-8]
   652f4:	ldr	r1, [r1, #32]
   652f8:	cmp	r0, r1
   652fc:	bge	657a8 <__assert_fail@plt+0x52bf0>
   65300:	ldr	r0, [fp, #-8]
   65304:	ldrb	r0, [r0, #76]	; 0x4c
   65308:	cmp	r0, #0
   6530c:	beq	656d4 <__assert_fail@plt+0x52b1c>
   65310:	movw	r0, #0
   65314:	str	r0, [fp, #-24]	; 0xffffffe8
   65318:	ldr	r0, [fp, #-8]
   6531c:	ldr	r0, [r0, #28]
   65320:	str	r0, [fp, #-28]	; 0xffffffe4
   65324:	ldr	r0, [fp, #-28]	; 0xffffffe4
   65328:	ldr	r1, [fp, #-24]	; 0xffffffe8
   6532c:	add	r0, r0, r1
   65330:	add	r0, r0, r0, lsr #31
   65334:	asr	r0, r0, #1
   65338:	str	r0, [fp, #-32]	; 0xffffffe0
   6533c:	ldr	r0, [fp, #-8]
   65340:	ldr	r0, [r0, #12]
   65344:	ldr	r1, [fp, #-32]	; 0xffffffe0
   65348:	add	r0, r0, r1, lsl #2
   6534c:	ldr	r0, [r0]
   65350:	ldr	r1, [fp, #-20]	; 0xffffffec
   65354:	cmp	r0, r1
   65358:	ble	65368 <__assert_fail@plt+0x527b0>
   6535c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   65360:	str	r0, [fp, #-28]	; 0xffffffe4
   65364:	b	653a0 <__assert_fail@plt+0x527e8>
   65368:	ldr	r0, [fp, #-8]
   6536c:	ldr	r0, [r0, #12]
   65370:	ldr	r1, [fp, #-32]	; 0xffffffe0
   65374:	add	r0, r0, r1, lsl #2
   65378:	ldr	r0, [r0]
   6537c:	ldr	r1, [fp, #-20]	; 0xffffffec
   65380:	cmp	r0, r1
   65384:	bge	65398 <__assert_fail@plt+0x527e0>
   65388:	ldr	r0, [fp, #-32]	; 0xffffffe0
   6538c:	add	r0, r0, #1
   65390:	str	r0, [fp, #-24]	; 0xffffffe8
   65394:	b	6539c <__assert_fail@plt+0x527e4>
   65398:	b	653b4 <__assert_fail@plt+0x527fc>
   6539c:	b	653a0 <__assert_fail@plt+0x527e8>
   653a0:	b	653a4 <__assert_fail@plt+0x527ec>
   653a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   653a8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   653ac:	cmp	r0, r1
   653b0:	blt	65324 <__assert_fail@plt+0x5276c>
   653b4:	ldr	r0, [fp, #-8]
   653b8:	ldr	r0, [r0, #12]
   653bc:	ldr	r1, [fp, #-32]	; 0xffffffe0
   653c0:	add	r0, r0, r1, lsl #2
   653c4:	ldr	r0, [r0]
   653c8:	ldr	r1, [fp, #-20]	; 0xffffffec
   653cc:	cmp	r0, r1
   653d0:	bge	653e0 <__assert_fail@plt+0x52828>
   653d4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   653d8:	add	r0, r0, #1
   653dc:	str	r0, [fp, #-32]	; 0xffffffe0
   653e0:	ldr	r0, [fp, #-8]
   653e4:	ldr	r1, [fp, #-32]	; 0xffffffe0
   653e8:	sub	r1, r1, #1
   653ec:	ldr	r2, [fp, #-16]
   653f0:	bl	66c90 <__assert_fail@plt+0x540d8>
   653f4:	ldr	r1, [fp, #-8]
   653f8:	str	r0, [r1, #60]	; 0x3c
   653fc:	ldr	r0, [fp, #-8]
   65400:	ldr	r0, [r0, #28]
   65404:	ldr	r1, [fp, #-20]	; 0xffffffec
   65408:	cmp	r0, r1
   6540c:	ble	65510 <__assert_fail@plt+0x52958>
   65410:	ldr	r0, [fp, #-32]	; 0xffffffe0
   65414:	ldr	r1, [fp, #-20]	; 0xffffffec
   65418:	cmp	r0, r1
   6541c:	bne	65510 <__assert_fail@plt+0x52958>
   65420:	ldr	r0, [fp, #-8]
   65424:	ldr	r0, [r0, #12]
   65428:	ldr	r1, [fp, #-32]	; 0xffffffe0
   6542c:	add	r0, r0, r1, lsl #2
   65430:	ldr	r0, [r0]
   65434:	ldr	r1, [fp, #-20]	; 0xffffffec
   65438:	cmp	r0, r1
   6543c:	bne	65510 <__assert_fail@plt+0x52958>
   65440:	ldr	r0, [fp, #-8]
   65444:	ldr	r1, [r0, #8]
   65448:	ldr	r0, [r0, #28]
   6544c:	ldr	r2, [fp, #-20]	; 0xffffffec
   65450:	add	r3, r1, r2, lsl #2
   65454:	sub	r0, r0, r2
   65458:	lsl	r2, r0, #2
   6545c:	mov	r0, r1
   65460:	mov	r1, r3
   65464:	bl	12558 <memmove@plt>
   65468:	ldr	r0, [fp, #-8]
   6546c:	ldr	r0, [r0, #4]
   65470:	ldr	r1, [fp, #-8]
   65474:	ldr	r1, [r1, #4]
   65478:	ldr	r2, [fp, #-20]	; 0xffffffec
   6547c:	add	r1, r1, r2
   65480:	ldr	r2, [fp, #-8]
   65484:	ldr	r2, [r2, #28]
   65488:	ldr	r3, [fp, #-20]	; 0xffffffec
   6548c:	sub	r2, r2, r3
   65490:	bl	12558 <memmove@plt>
   65494:	ldr	r0, [fp, #-20]	; 0xffffffec
   65498:	ldr	r1, [fp, #-8]
   6549c:	ldr	r2, [r1, #28]
   654a0:	sub	r0, r2, r0
   654a4:	str	r0, [r1, #28]
   654a8:	ldr	r0, [fp, #-20]	; 0xffffffec
   654ac:	ldr	r1, [fp, #-8]
   654b0:	ldr	r2, [r1, #32]
   654b4:	sub	r0, r2, r0
   654b8:	str	r0, [r1, #32]
   654bc:	movw	r0, #0
   654c0:	str	r0, [fp, #-24]	; 0xffffffe8
   654c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   654c8:	ldr	r1, [fp, #-8]
   654cc:	ldr	r1, [r1, #28]
   654d0:	cmp	r0, r1
   654d4:	bge	6550c <__assert_fail@plt+0x52954>
   654d8:	ldr	r0, [fp, #-8]
   654dc:	ldr	r0, [r0, #12]
   654e0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   654e4:	ldr	r2, [fp, #-20]	; 0xffffffec
   654e8:	add	r3, r1, r2
   654ec:	ldr	r3, [r0, r3, lsl #2]
   654f0:	sub	r2, r3, r2
   654f4:	add	r0, r0, r1, lsl #2
   654f8:	str	r2, [r0]
   654fc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   65500:	add	r0, r0, #1
   65504:	str	r0, [fp, #-24]	; 0xffffffe8
   65508:	b	654c4 <__assert_fail@plt+0x5290c>
   6550c:	b	656d0 <__assert_fail@plt+0x52b18>
   65510:	ldr	r0, [fp, #-8]
   65514:	ldr	r0, [r0, #44]	; 0x2c
   65518:	ldr	r1, [fp, #-12]
   6551c:	sub	r0, r0, r1
   65520:	ldr	r1, [fp, #-20]	; 0xffffffec
   65524:	add	r0, r0, r1
   65528:	ldr	r1, [fp, #-8]
   6552c:	str	r0, [r1, #48]	; 0x30
   65530:	ldr	r0, [fp, #-8]
   65534:	ldr	r0, [r0, #52]	; 0x34
   65538:	ldr	r1, [fp, #-12]
   6553c:	sub	r0, r0, r1
   65540:	ldr	r1, [fp, #-20]	; 0xffffffec
   65544:	add	r0, r0, r1
   65548:	ldr	r1, [fp, #-8]
   6554c:	str	r0, [r1, #56]	; 0x38
   65550:	ldr	r0, [fp, #-8]
   65554:	movw	r1, #0
   65558:	strb	r1, [r0, #76]	; 0x4c
   6555c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   65560:	cmp	r0, #0
   65564:	movw	r0, #0
   65568:	str	r0, [sp, #24]
   6556c:	ble	6559c <__assert_fail@plt+0x529e4>
   65570:	ldr	r0, [fp, #-8]
   65574:	ldr	r0, [r0, #12]
   65578:	ldr	r1, [fp, #-32]	; 0xffffffe0
   6557c:	sub	r1, r1, #1
   65580:	add	r0, r0, r1, lsl #2
   65584:	ldr	r0, [r0]
   65588:	ldr	r1, [fp, #-20]	; 0xffffffec
   6558c:	cmp	r0, r1
   65590:	movw	r0, #0
   65594:	moveq	r0, #1
   65598:	str	r0, [sp, #24]
   6559c:	ldr	r0, [sp, #24]
   655a0:	tst	r0, #1
   655a4:	beq	655bc <__assert_fail@plt+0x52a04>
   655a8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   655ac:	mvn	r1, #0
   655b0:	add	r0, r0, r1
   655b4:	str	r0, [fp, #-32]	; 0xffffffe0
   655b8:	b	6555c <__assert_fail@plt+0x529a4>
   655bc:	b	655c0 <__assert_fail@plt+0x52a08>
   655c0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   655c4:	ldr	r1, [fp, #-8]
   655c8:	ldr	r1, [r1, #28]
   655cc:	cmp	r0, r1
   655d0:	bge	65604 <__assert_fail@plt+0x52a4c>
   655d4:	ldr	r0, [fp, #-8]
   655d8:	ldr	r0, [r0, #8]
   655dc:	ldr	r1, [fp, #-32]	; 0xffffffe0
   655e0:	add	r0, r0, r1, lsl #2
   655e4:	ldr	r0, [r0]
   655e8:	cmn	r0, #1
   655ec:	beq	655f4 <__assert_fail@plt+0x52a3c>
   655f0:	b	65604 <__assert_fail@plt+0x52a4c>
   655f4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   655f8:	add	r0, r0, #1
   655fc:	str	r0, [fp, #-32]	; 0xffffffe0
   65600:	b	655c0 <__assert_fail@plt+0x52a08>
   65604:	ldr	r0, [fp, #-32]	; 0xffffffe0
   65608:	ldr	r1, [fp, #-8]
   6560c:	ldr	r1, [r1, #28]
   65610:	cmp	r0, r1
   65614:	bne	65628 <__assert_fail@plt+0x52a70>
   65618:	ldr	r0, [fp, #-8]
   6561c:	movw	r1, #0
   65620:	str	r1, [r0, #28]
   65624:	b	656c0 <__assert_fail@plt+0x52b08>
   65628:	ldr	r0, [fp, #-8]
   6562c:	ldr	r0, [r0, #12]
   65630:	ldr	r1, [fp, #-32]	; 0xffffffe0
   65634:	add	r0, r0, r1, lsl #2
   65638:	ldr	r0, [r0]
   6563c:	ldr	r1, [fp, #-20]	; 0xffffffec
   65640:	sub	r0, r0, r1
   65644:	ldr	r1, [fp, #-8]
   65648:	str	r0, [r1, #28]
   6564c:	ldr	r0, [fp, #-8]
   65650:	ldr	r0, [r0, #28]
   65654:	cmp	r0, #0
   65658:	beq	656bc <__assert_fail@plt+0x52b04>
   6565c:	movw	r0, #0
   65660:	str	r0, [fp, #-24]	; 0xffffffe8
   65664:	ldr	r0, [fp, #-24]	; 0xffffffe8
   65668:	ldr	r1, [fp, #-8]
   6566c:	ldr	r1, [r1, #28]
   65670:	cmp	r0, r1
   65674:	bge	656a0 <__assert_fail@plt+0x52ae8>
   65678:	ldr	r0, [fp, #-8]
   6567c:	ldr	r0, [r0, #8]
   65680:	ldr	r1, [fp, #-24]	; 0xffffffe8
   65684:	add	r0, r0, r1, lsl #2
   65688:	mvn	r1, #0
   6568c:	str	r1, [r0]
   65690:	ldr	r0, [fp, #-24]	; 0xffffffe8
   65694:	add	r0, r0, #1
   65698:	str	r0, [fp, #-24]	; 0xffffffe8
   6569c:	b	65664 <__assert_fail@plt+0x52aac>
   656a0:	ldr	r0, [fp, #-8]
   656a4:	ldr	r0, [r0, #4]
   656a8:	ldr	r1, [fp, #-8]
   656ac:	ldr	r2, [r1, #28]
   656b0:	movw	r1, #255	; 0xff
   656b4:	and	r1, r1, #255	; 0xff
   656b8:	bl	12900 <memset@plt>
   656bc:	b	656c0 <__assert_fail@plt+0x52b08>
   656c0:	ldr	r0, [fp, #-8]
   656c4:	ldr	r0, [r0, #28]
   656c8:	ldr	r1, [fp, #-8]
   656cc:	str	r0, [r1, #32]
   656d0:	b	657a4 <__assert_fail@plt+0x52bec>
   656d4:	ldr	r0, [fp, #-8]
   656d8:	ldr	r1, [fp, #-20]	; 0xffffffec
   656dc:	sub	r1, r1, #1
   656e0:	ldr	r2, [fp, #-16]
   656e4:	bl	66c90 <__assert_fail@plt+0x540d8>
   656e8:	ldr	r1, [fp, #-8]
   656ec:	str	r0, [r1, #60]	; 0x3c
   656f0:	ldr	r0, [fp, #-8]
   656f4:	ldr	r0, [r0, #80]	; 0x50
   656f8:	cmp	r0, #1
   656fc:	ble	65728 <__assert_fail@plt+0x52b70>
   65700:	ldr	r0, [fp, #-8]
   65704:	ldr	r1, [r0, #8]
   65708:	ldr	r0, [r0, #28]
   6570c:	ldr	r2, [fp, #-20]	; 0xffffffec
   65710:	add	r3, r1, r2, lsl #2
   65714:	sub	r0, r0, r2
   65718:	lsl	r2, r0, #2
   6571c:	mov	r0, r1
   65720:	mov	r1, r3
   65724:	bl	12558 <memmove@plt>
   65728:	ldr	r0, [fp, #-8]
   6572c:	ldrb	r0, [r0, #75]	; 0x4b
   65730:	cmp	r0, #0
   65734:	beq	65764 <__assert_fail@plt+0x52bac>
   65738:	ldr	r0, [fp, #-8]
   6573c:	ldr	r0, [r0, #4]
   65740:	ldr	r1, [fp, #-8]
   65744:	ldr	r1, [r1, #4]
   65748:	ldr	r2, [fp, #-20]	; 0xffffffec
   6574c:	add	r1, r1, r2
   65750:	ldr	r2, [fp, #-8]
   65754:	ldr	r2, [r2, #28]
   65758:	ldr	r3, [fp, #-20]	; 0xffffffec
   6575c:	sub	r2, r2, r3
   65760:	bl	12558 <memmove@plt>
   65764:	ldr	r0, [fp, #-20]	; 0xffffffec
   65768:	ldr	r1, [fp, #-8]
   6576c:	ldr	r2, [r1, #28]
   65770:	sub	r0, r2, r0
   65774:	str	r0, [r1, #28]
   65778:	ldr	r0, [fp, #-20]	; 0xffffffec
   6577c:	ldr	r1, [fp, #-8]
   65780:	ldr	r2, [r1, #32]
   65784:	sub	r0, r2, r0
   65788:	str	r0, [r1, #32]
   6578c:	ldr	r0, [fp, #-8]
   65790:	ldr	r0, [r0, #28]
   65794:	cmp	r0, #0
   65798:	ble	657a0 <__assert_fail@plt+0x52be8>
   6579c:	b	657a0 <__assert_fail@plt+0x52be8>
   657a0:	b	657a4 <__assert_fail@plt+0x52bec>
   657a4:	b	65c98 <__assert_fail@plt+0x530e0>
   657a8:	ldr	r0, [fp, #-8]
   657ac:	ldr	r0, [r0, #28]
   657b0:	str	r0, [fp, #-36]	; 0xffffffdc
   657b4:	ldr	r0, [fp, #-8]
   657b8:	ldrb	r0, [r0, #76]	; 0x4c
   657bc:	cmp	r0, #0
   657c0:	beq	65810 <__assert_fail@plt+0x52c58>
   657c4:	ldr	r0, [fp, #-8]
   657c8:	ldr	r0, [r0, #44]	; 0x2c
   657cc:	ldr	r1, [fp, #-12]
   657d0:	sub	r0, r0, r1
   657d4:	ldr	r1, [fp, #-20]	; 0xffffffec
   657d8:	add	r0, r0, r1
   657dc:	ldr	r1, [fp, #-8]
   657e0:	str	r0, [r1, #48]	; 0x30
   657e4:	ldr	r0, [fp, #-8]
   657e8:	ldr	r0, [r0, #52]	; 0x34
   657ec:	ldr	r1, [fp, #-12]
   657f0:	sub	r0, r0, r1
   657f4:	ldr	r1, [fp, #-20]	; 0xffffffec
   657f8:	add	r0, r0, r1
   657fc:	ldr	r1, [fp, #-8]
   65800:	str	r0, [r1, #56]	; 0x38
   65804:	ldr	r0, [fp, #-8]
   65808:	movw	r1, #0
   6580c:	strb	r1, [r0, #76]	; 0x4c
   65810:	ldr	r0, [fp, #-8]
   65814:	movw	r1, #0
   65818:	str	r1, [r0, #28]
   6581c:	ldr	r0, [fp, #-8]
   65820:	ldr	r0, [r0, #80]	; 0x50
   65824:	cmp	r0, #1
   65828:	ble	65bc8 <__assert_fail@plt+0x53010>
   6582c:	mvn	r0, #0
   65830:	str	r0, [fp, #-44]	; 0xffffffd4
   65834:	ldr	r0, [fp, #-8]
   65838:	ldrsb	r0, [r0, #73]	; 0x49
   6583c:	cmp	r0, #0
   65840:	beq	65a54 <__assert_fail@plt+0x52e9c>
   65844:	ldr	r0, [fp, #-8]
   65848:	ldr	r0, [r0]
   6584c:	ldr	r1, [fp, #-8]
   65850:	ldr	r1, [r1, #24]
   65854:	add	r0, r0, r1
   65858:	str	r0, [fp, #-48]	; 0xffffffd0
   6585c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   65860:	ldr	r1, [fp, #-20]	; 0xffffffec
   65864:	ldr	r2, [fp, #-8]
   65868:	ldr	r2, [r2, #80]	; 0x50
   6586c:	sub	r1, r1, r2
   65870:	add	r0, r0, r1
   65874:	str	r0, [fp, #-56]	; 0xffffffc8
   65878:	ldr	r0, [fp, #-56]	; 0xffffffc8
   6587c:	ldr	r1, [fp, #-8]
   65880:	ldr	r1, [r1]
   65884:	cmp	r0, r1
   65888:	bcs	65898 <__assert_fail@plt+0x52ce0>
   6588c:	ldr	r0, [fp, #-8]
   65890:	ldr	r0, [r0]
   65894:	str	r0, [fp, #-56]	; 0xffffffc8
   65898:	ldr	r0, [fp, #-48]	; 0xffffffd0
   6589c:	ldr	r1, [fp, #-20]	; 0xffffffec
   658a0:	add	r0, r0, r1
   658a4:	mvn	r1, #0
   658a8:	add	r0, r0, r1
   658ac:	str	r0, [fp, #-52]	; 0xffffffcc
   658b0:	ldr	r0, [fp, #-52]	; 0xffffffcc
   658b4:	ldr	r1, [fp, #-56]	; 0xffffffc8
   658b8:	cmp	r0, r1
   658bc:	bcc	65a50 <__assert_fail@plt+0x52e98>
   658c0:	ldr	r0, [fp, #-52]	; 0xffffffcc
   658c4:	ldrb	r0, [r0]
   658c8:	and	r0, r0, #192	; 0xc0
   658cc:	cmp	r0, #128	; 0x80
   658d0:	beq	65a38 <__assert_fail@plt+0x52e80>
   658d4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   658d8:	ldr	r1, [fp, #-8]
   658dc:	ldr	r1, [r1, #48]	; 0x30
   658e0:	add	r0, r0, r1
   658e4:	ldr	r1, [fp, #-52]	; 0xffffffcc
   658e8:	sub	r0, r0, r1
   658ec:	str	r0, [sp, #56]	; 0x38
   658f0:	ldr	r0, [fp, #-52]	; 0xffffffcc
   658f4:	str	r0, [sp, #40]	; 0x28
   658f8:	ldr	r0, [fp, #-8]
   658fc:	ldr	r0, [r0, #64]	; 0x40
   65900:	movw	r1, #0
   65904:	cmp	r0, r1
   65908:	beq	6598c <__assert_fail@plt+0x52dd4>
   6590c:	ldr	r0, [sp, #56]	; 0x38
   65910:	cmp	r0, #6
   65914:	bge	65924 <__assert_fail@plt+0x52d6c>
   65918:	ldr	r0, [sp, #56]	; 0x38
   6591c:	str	r0, [sp, #20]
   65920:	b	65930 <__assert_fail@plt+0x52d78>
   65924:	movw	r0, #6
   65928:	str	r0, [sp, #20]
   6592c:	b	65930 <__assert_fail@plt+0x52d78>
   65930:	ldr	r0, [sp, #20]
   65934:	str	r0, [sp, #36]	; 0x24
   65938:	ldr	r0, [sp, #36]	; 0x24
   6593c:	mvn	r1, #0
   65940:	add	r0, r0, r1
   65944:	str	r0, [sp, #36]	; 0x24
   65948:	cmp	r0, #0
   6594c:	blt	65984 <__assert_fail@plt+0x52dcc>
   65950:	ldr	r0, [fp, #-8]
   65954:	ldr	r0, [r0, #64]	; 0x40
   65958:	ldr	r1, [fp, #-52]	; 0xffffffcc
   6595c:	ldr	r2, [sp, #36]	; 0x24
   65960:	add	r1, r1, r2
   65964:	ldrb	r1, [r1]
   65968:	add	r0, r0, r1
   6596c:	ldrb	r0, [r0]
   65970:	ldr	r1, [sp, #36]	; 0x24
   65974:	add	r2, sp, #50	; 0x32
   65978:	add	r1, r2, r1
   6597c:	strb	r0, [r1]
   65980:	b	65938 <__assert_fail@plt+0x52d80>
   65984:	add	r0, sp, #50	; 0x32
   65988:	str	r0, [sp, #40]	; 0x28
   6598c:	add	r0, sp, #64	; 0x40
   65990:	mov	r1, r0
   65994:	str	r0, [sp, #16]
   65998:	mov	r0, r1
   6599c:	movw	r1, #0
   659a0:	and	r1, r1, #255	; 0xff
   659a4:	movw	r2, #8
   659a8:	bl	12900 <memset@plt>
   659ac:	ldr	r1, [sp, #40]	; 0x28
   659b0:	ldr	r2, [sp, #56]	; 0x38
   659b4:	add	r0, sp, #60	; 0x3c
   659b8:	ldr	r3, [sp, #16]
   659bc:	bl	54a1c <__assert_fail@plt+0x41e64>
   659c0:	str	r0, [sp, #44]	; 0x2c
   659c4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   659c8:	ldr	r1, [fp, #-20]	; 0xffffffec
   659cc:	add	r0, r0, r1
   659d0:	ldr	r1, [fp, #-52]	; 0xffffffcc
   659d4:	sub	r0, r0, r1
   659d8:	ldr	r1, [sp, #44]	; 0x2c
   659dc:	cmp	r0, r1
   659e0:	bhi	65a34 <__assert_fail@plt+0x52e7c>
   659e4:	ldr	r0, [sp, #44]	; 0x2c
   659e8:	cmn	r0, #2
   659ec:	bcs	65a34 <__assert_fail@plt+0x52e7c>
   659f0:	ldr	r0, [fp, #-8]
   659f4:	add	r0, r0, #16
   659f8:	movw	r1, #0
   659fc:	and	r1, r1, #255	; 0xff
   65a00:	movw	r2, #8
   65a04:	bl	12900 <memset@plt>
   65a08:	ldr	r0, [sp, #44]	; 0x2c
   65a0c:	ldr	r1, [fp, #-48]	; 0xffffffd0
   65a10:	ldr	r2, [fp, #-20]	; 0xffffffec
   65a14:	add	r1, r1, r2
   65a18:	ldr	r2, [fp, #-52]	; 0xffffffcc
   65a1c:	sub	r1, r1, r2
   65a20:	sub	r0, r0, r1
   65a24:	ldr	r1, [fp, #-8]
   65a28:	str	r0, [r1, #28]
   65a2c:	ldr	r0, [sp, #60]	; 0x3c
   65a30:	str	r0, [fp, #-44]	; 0xffffffd4
   65a34:	b	65a50 <__assert_fail@plt+0x52e98>
   65a38:	b	65a3c <__assert_fail@plt+0x52e84>
   65a3c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   65a40:	mvn	r1, #0
   65a44:	add	r0, r0, r1
   65a48:	str	r0, [fp, #-52]	; 0xffffffcc
   65a4c:	b	658b0 <__assert_fail@plt+0x52cf8>
   65a50:	b	65a54 <__assert_fail@plt+0x52e9c>
   65a54:	ldr	r0, [fp, #-44]	; 0xffffffd4
   65a58:	cmn	r0, #1
   65a5c:	bne	65a80 <__assert_fail@plt+0x52ec8>
   65a60:	ldr	r0, [fp, #-8]
   65a64:	ldr	r1, [fp, #-12]
   65a68:	sub	r2, fp, #44	; 0x2c
   65a6c:	bl	66e90 <__assert_fail@plt+0x542d8>
   65a70:	ldr	r1, [fp, #-12]
   65a74:	sub	r0, r0, r1
   65a78:	ldr	r1, [fp, #-8]
   65a7c:	str	r0, [r1, #28]
   65a80:	ldr	r0, [fp, #-44]	; 0xffffffd4
   65a84:	cmn	r0, #1
   65a88:	bne	65aac <__assert_fail@plt+0x52ef4>
   65a8c:	ldr	r0, [fp, #-8]
   65a90:	ldr	r1, [fp, #-36]	; 0xffffffdc
   65a94:	sub	r1, r1, #1
   65a98:	ldr	r2, [fp, #-16]
   65a9c:	bl	66c90 <__assert_fail@plt+0x540d8>
   65aa0:	ldr	r1, [fp, #-8]
   65aa4:	str	r0, [r1, #60]	; 0x3c
   65aa8:	b	65b30 <__assert_fail@plt+0x52f78>
   65aac:	ldr	r0, [fp, #-8]
   65ab0:	ldrb	r0, [r0, #78]	; 0x4e
   65ab4:	cmp	r0, #0
   65ab8:	beq	65ae4 <__assert_fail@plt+0x52f2c>
   65abc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   65ac0:	bl	128dc <iswalnum@plt>
   65ac4:	cmp	r0, #0
   65ac8:	bne	65ad8 <__assert_fail@plt+0x52f20>
   65acc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   65ad0:	cmp	r0, #95	; 0x5f
   65ad4:	bne	65ae4 <__assert_fail@plt+0x52f2c>
   65ad8:	movw	r0, #1
   65adc:	str	r0, [sp, #12]
   65ae0:	b	65b24 <__assert_fail@plt+0x52f6c>
   65ae4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   65ae8:	cmp	r0, #10
   65aec:	movw	r0, #0
   65af0:	str	r0, [sp, #8]
   65af4:	bne	65b10 <__assert_fail@plt+0x52f58>
   65af8:	ldr	r0, [fp, #-8]
   65afc:	ldrb	r0, [r0, #77]	; 0x4d
   65b00:	cmp	r0, #0
   65b04:	movw	r0, #0
   65b08:	movne	r0, #1
   65b0c:	str	r0, [sp, #8]
   65b10:	ldr	r0, [sp, #8]
   65b14:	tst	r0, #1
   65b18:	movw	r0, #2
   65b1c:	moveq	r0, #0
   65b20:	str	r0, [sp, #12]
   65b24:	ldr	r0, [sp, #12]
   65b28:	ldr	r1, [fp, #-8]
   65b2c:	str	r0, [r1, #60]	; 0x3c
   65b30:	ldr	r0, [fp, #-8]
   65b34:	ldr	r0, [r0, #28]
   65b38:	cmp	r0, #0
   65b3c:	beq	65bb4 <__assert_fail@plt+0x52ffc>
   65b40:	movw	r0, #0
   65b44:	str	r0, [fp, #-40]	; 0xffffffd8
   65b48:	ldr	r0, [fp, #-40]	; 0xffffffd8
   65b4c:	ldr	r1, [fp, #-8]
   65b50:	ldr	r1, [r1, #28]
   65b54:	cmp	r0, r1
   65b58:	bge	65b84 <__assert_fail@plt+0x52fcc>
   65b5c:	ldr	r0, [fp, #-8]
   65b60:	ldr	r0, [r0, #8]
   65b64:	ldr	r1, [fp, #-40]	; 0xffffffd8
   65b68:	add	r0, r0, r1, lsl #2
   65b6c:	mvn	r1, #0
   65b70:	str	r1, [r0]
   65b74:	ldr	r0, [fp, #-40]	; 0xffffffd8
   65b78:	add	r0, r0, #1
   65b7c:	str	r0, [fp, #-40]	; 0xffffffd8
   65b80:	b	65b48 <__assert_fail@plt+0x52f90>
   65b84:	ldr	r0, [fp, #-8]
   65b88:	ldrsb	r0, [r0, #75]	; 0x4b
   65b8c:	cmp	r0, #0
   65b90:	beq	65bb0 <__assert_fail@plt+0x52ff8>
   65b94:	ldr	r0, [fp, #-8]
   65b98:	ldr	r0, [r0, #4]
   65b9c:	ldr	r1, [fp, #-8]
   65ba0:	ldr	r2, [r1, #28]
   65ba4:	movw	r1, #255	; 0xff
   65ba8:	and	r1, r1, #255	; 0xff
   65bac:	bl	12900 <memset@plt>
   65bb0:	b	65bb4 <__assert_fail@plt+0x52ffc>
   65bb4:	ldr	r0, [fp, #-8]
   65bb8:	ldr	r0, [r0, #28]
   65bbc:	ldr	r1, [fp, #-8]
   65bc0:	str	r0, [r1, #32]
   65bc4:	b	65c94 <__assert_fail@plt+0x530dc>
   65bc8:	ldr	r0, [fp, #-8]
   65bcc:	ldr	r0, [r0]
   65bd0:	ldr	r1, [fp, #-8]
   65bd4:	ldr	r1, [r1, #24]
   65bd8:	ldr	r2, [fp, #-20]	; 0xffffffec
   65bdc:	add	r1, r1, r2
   65be0:	sub	r1, r1, #1
   65be4:	add	r0, r0, r1
   65be8:	ldrb	r0, [r0]
   65bec:	str	r0, [sp, #32]
   65bf0:	ldr	r0, [fp, #-8]
   65bf4:	movw	r1, #0
   65bf8:	str	r1, [r0, #32]
   65bfc:	ldr	r0, [fp, #-8]
   65c00:	ldr	r0, [r0, #64]	; 0x40
   65c04:	cmp	r0, r1
   65c08:	beq	65c24 <__assert_fail@plt+0x5306c>
   65c0c:	ldr	r0, [fp, #-8]
   65c10:	ldr	r0, [r0, #64]	; 0x40
   65c14:	ldr	r1, [sp, #32]
   65c18:	add	r0, r0, r1
   65c1c:	ldrb	r0, [r0]
   65c20:	str	r0, [sp, #32]
   65c24:	ldr	r0, [fp, #-8]
   65c28:	ldr	r0, [r0, #68]	; 0x44
   65c2c:	ldr	r1, [sp, #32]
   65c30:	bl	67000 <__assert_fail@plt+0x54448>
   65c34:	tst	r0, #1
   65c38:	beq	65c48 <__assert_fail@plt+0x53090>
   65c3c:	movw	r0, #1
   65c40:	str	r0, [sp, #4]
   65c44:	b	65c88 <__assert_fail@plt+0x530d0>
   65c48:	ldr	r0, [sp, #32]
   65c4c:	cmp	r0, #10
   65c50:	movw	r0, #0
   65c54:	str	r0, [sp]
   65c58:	bne	65c74 <__assert_fail@plt+0x530bc>
   65c5c:	ldr	r0, [fp, #-8]
   65c60:	ldrb	r0, [r0, #77]	; 0x4d
   65c64:	cmp	r0, #0
   65c68:	movw	r0, #0
   65c6c:	movne	r0, #1
   65c70:	str	r0, [sp]
   65c74:	ldr	r0, [sp]
   65c78:	tst	r0, #1
   65c7c:	movw	r0, #2
   65c80:	moveq	r0, #0
   65c84:	str	r0, [sp, #4]
   65c88:	ldr	r0, [sp, #4]
   65c8c:	ldr	r1, [fp, #-8]
   65c90:	str	r0, [r1, #60]	; 0x3c
   65c94:	b	65c98 <__assert_fail@plt+0x530e0>
   65c98:	ldr	r0, [fp, #-8]
   65c9c:	ldrb	r0, [r0, #75]	; 0x4b
   65ca0:	cmp	r0, #0
   65ca4:	bne	65cbc <__assert_fail@plt+0x53104>
   65ca8:	ldr	r0, [fp, #-20]	; 0xffffffec
   65cac:	ldr	r1, [fp, #-8]
   65cb0:	ldr	r2, [r1, #4]
   65cb4:	add	r0, r2, r0
   65cb8:	str	r0, [r1, #4]
   65cbc:	b	65cc0 <__assert_fail@plt+0x53108>
   65cc0:	ldr	r0, [fp, #-12]
   65cc4:	ldr	r1, [fp, #-8]
   65cc8:	str	r0, [r1, #24]
   65ccc:	ldr	r0, [fp, #-20]	; 0xffffffec
   65cd0:	ldr	r1, [fp, #-8]
   65cd4:	ldr	r2, [r1, #48]	; 0x30
   65cd8:	sub	r0, r2, r0
   65cdc:	str	r0, [r1, #48]	; 0x30
   65ce0:	ldr	r0, [fp, #-20]	; 0xffffffec
   65ce4:	ldr	r1, [fp, #-8]
   65ce8:	ldr	r2, [r1, #56]	; 0x38
   65cec:	sub	r0, r2, r0
   65cf0:	str	r0, [r1, #56]	; 0x38
   65cf4:	ldr	r0, [fp, #-8]
   65cf8:	ldr	r0, [r0, #80]	; 0x50
   65cfc:	cmp	r0, #1
   65d00:	ble	65d48 <__assert_fail@plt+0x53190>
   65d04:	ldr	r0, [fp, #-8]
   65d08:	ldrsb	r0, [r0, #72]	; 0x48
   65d0c:	cmp	r0, #0
   65d10:	beq	65d3c <__assert_fail@plt+0x53184>
   65d14:	ldr	r0, [fp, #-8]
   65d18:	bl	5b4a0 <__assert_fail@plt+0x488e8>
   65d1c:	str	r0, [sp, #28]
   65d20:	ldr	r0, [sp, #28]
   65d24:	cmp	r0, #0
   65d28:	beq	65d38 <__assert_fail@plt+0x53180>
   65d2c:	ldr	r0, [sp, #28]
   65d30:	str	r0, [fp, #-4]
   65d34:	b	65dbc <__assert_fail@plt+0x53204>
   65d38:	b	65d44 <__assert_fail@plt+0x5318c>
   65d3c:	ldr	r0, [fp, #-8]
   65d40:	bl	5c050 <__assert_fail@plt+0x49498>
   65d44:	b	65dac <__assert_fail@plt+0x531f4>
   65d48:	ldr	r0, [fp, #-8]
   65d4c:	ldrb	r0, [r0, #75]	; 0x4b
   65d50:	cmp	r0, #0
   65d54:	beq	65d98 <__assert_fail@plt+0x531e0>
   65d58:	ldr	r0, [fp, #-8]
   65d5c:	ldrsb	r0, [r0, #72]	; 0x48
   65d60:	cmp	r0, #0
   65d64:	beq	65d74 <__assert_fail@plt+0x531bc>
   65d68:	ldr	r0, [fp, #-8]
   65d6c:	bl	5bf4c <__assert_fail@plt+0x49394>
   65d70:	b	65d94 <__assert_fail@plt+0x531dc>
   65d74:	ldr	r0, [fp, #-8]
   65d78:	ldr	r0, [r0, #64]	; 0x40
   65d7c:	movw	r1, #0
   65d80:	cmp	r0, r1
   65d84:	beq	65d90 <__assert_fail@plt+0x531d8>
   65d88:	ldr	r0, [fp, #-8]
   65d8c:	bl	5c390 <__assert_fail@plt+0x497d8>
   65d90:	b	65d94 <__assert_fail@plt+0x531dc>
   65d94:	b	65da8 <__assert_fail@plt+0x531f0>
   65d98:	ldr	r0, [fp, #-8]
   65d9c:	ldr	r0, [r0, #48]	; 0x30
   65da0:	ldr	r1, [fp, #-8]
   65da4:	str	r0, [r1, #28]
   65da8:	b	65dac <__assert_fail@plt+0x531f4>
   65dac:	ldr	r0, [fp, #-8]
   65db0:	movw	r1, #0
   65db4:	str	r1, [r0, #40]	; 0x28
   65db8:	str	r1, [fp, #-4]
   65dbc:	ldr	r0, [fp, #-4]
   65dc0:	mov	sp, fp
   65dc4:	pop	{fp, pc}
   65dc8:	push	{fp, lr}
   65dcc:	mov	fp, sp
   65dd0:	sub	sp, sp, #80	; 0x50
   65dd4:	str	r0, [fp, #-32]	; 0xffffffe0
   65dd8:	and	r0, r1, #1
   65ddc:	strb	r0, [fp, #-33]	; 0xffffffdf
   65de0:	str	r2, [sp, #40]	; 0x28
   65de4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   65de8:	ldr	r0, [r0, #84]	; 0x54
   65dec:	str	r0, [sp, #36]	; 0x24
   65df0:	mov	r0, #0
   65df4:	str	r0, [sp, #28]
   65df8:	mvn	r1, #0
   65dfc:	str	r1, [sp, #24]
   65e00:	ldr	r1, [fp, #-32]	; 0xffffffe0
   65e04:	ldr	r1, [r1, #40]	; 0x28
   65e08:	str	r1, [sp, #20]
   65e0c:	ldr	r1, [sp, #40]	; 0x28
   65e10:	cmp	r1, #0
   65e14:	movwne	r1, #1
   65e18:	strb	r1, [sp, #15]
   65e1c:	ldr	r1, [sp, #20]
   65e20:	str	r1, [sp, #8]
   65e24:	str	r0, [sp, #32]
   65e28:	ldr	r0, [fp, #-32]	; 0xffffffe0
   65e2c:	ldr	r1, [sp, #20]
   65e30:	add	r2, sp, #32
   65e34:	str	r2, [fp, #-8]
   65e38:	str	r0, [fp, #-12]
   65e3c:	str	r1, [fp, #-16]
   65e40:	ldr	r0, [fp, #-12]
   65e44:	ldr	r0, [r0, #84]	; 0x54
   65e48:	str	r0, [fp, #-20]	; 0xffffffec
   65e4c:	ldr	r0, [fp, #-20]	; 0xffffffec
   65e50:	ldr	r0, [r0, #36]	; 0x24
   65e54:	ldrb	r0, [r0, #52]	; 0x34
   65e58:	lsr	r0, r0, #7
   65e5c:	and	r0, r0, #255	; 0xff
   65e60:	cmp	r0, #0
   65e64:	beq	65f54 <__assert_fail@plt+0x5339c>
   65e68:	ldr	r0, [fp, #-12]
   65e6c:	ldr	r1, [fp, #-16]
   65e70:	sub	r1, r1, #1
   65e74:	ldr	r2, [fp, #-12]
   65e78:	ldr	r2, [r2, #88]	; 0x58
   65e7c:	bl	66c90 <__assert_fail@plt+0x540d8>
   65e80:	str	r0, [fp, #-24]	; 0xffffffe8
   65e84:	ldr	r0, [fp, #-24]	; 0xffffffe8
   65e88:	and	r0, r0, #1
   65e8c:	cmp	r0, #0
   65e90:	beq	65ea4 <__assert_fail@plt+0x532ec>
   65e94:	ldr	r0, [fp, #-20]	; 0xffffffec
   65e98:	ldr	r0, [r0, #40]	; 0x28
   65e9c:	str	r0, [fp, #-4]
   65ea0:	b	65f60 <__assert_fail@plt+0x533a8>
   65ea4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   65ea8:	cmp	r0, #0
   65eac:	bne	65ec0 <__assert_fail@plt+0x53308>
   65eb0:	ldr	r0, [fp, #-20]	; 0xffffffec
   65eb4:	ldr	r0, [r0, #36]	; 0x24
   65eb8:	str	r0, [fp, #-4]
   65ebc:	b	65f60 <__assert_fail@plt+0x533a8>
   65ec0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   65ec4:	and	r0, r0, #4
   65ec8:	cmp	r0, #0
   65ecc:	beq	65ef0 <__assert_fail@plt+0x53338>
   65ed0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   65ed4:	and	r0, r0, #2
   65ed8:	cmp	r0, #0
   65edc:	beq	65ef0 <__assert_fail@plt+0x53338>
   65ee0:	ldr	r0, [fp, #-20]	; 0xffffffec
   65ee4:	ldr	r0, [r0, #48]	; 0x30
   65ee8:	str	r0, [fp, #-4]
   65eec:	b	65f60 <__assert_fail@plt+0x533a8>
   65ef0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   65ef4:	and	r0, r0, #2
   65ef8:	cmp	r0, #0
   65efc:	beq	65f10 <__assert_fail@plt+0x53358>
   65f00:	ldr	r0, [fp, #-20]	; 0xffffffec
   65f04:	ldr	r0, [r0, #44]	; 0x2c
   65f08:	str	r0, [fp, #-4]
   65f0c:	b	65f60 <__assert_fail@plt+0x533a8>
   65f10:	ldr	r0, [fp, #-24]	; 0xffffffe8
   65f14:	and	r0, r0, #4
   65f18:	cmp	r0, #0
   65f1c:	beq	65f44 <__assert_fail@plt+0x5338c>
   65f20:	ldr	r0, [fp, #-8]
   65f24:	ldr	r1, [fp, #-20]	; 0xffffffec
   65f28:	ldr	r2, [fp, #-20]	; 0xffffffec
   65f2c:	ldr	r2, [r2, #36]	; 0x24
   65f30:	ldr	r2, [r2, #40]	; 0x28
   65f34:	ldr	r3, [fp, #-24]	; 0xffffffe8
   65f38:	bl	64440 <__assert_fail@plt+0x51888>
   65f3c:	str	r0, [fp, #-4]
   65f40:	b	65f60 <__assert_fail@plt+0x533a8>
   65f44:	ldr	r0, [fp, #-20]	; 0xffffffec
   65f48:	ldr	r0, [r0, #36]	; 0x24
   65f4c:	str	r0, [fp, #-4]
   65f50:	b	65f60 <__assert_fail@plt+0x533a8>
   65f54:	ldr	r0, [fp, #-20]	; 0xffffffec
   65f58:	ldr	r0, [r0, #36]	; 0x24
   65f5c:	str	r0, [fp, #-4]
   65f60:	ldr	r0, [fp, #-4]
   65f64:	str	r0, [sp, #16]
   65f68:	ldr	r0, [sp, #16]
   65f6c:	movw	r1, #0
   65f70:	cmp	r0, r1
   65f74:	bne	65f94 <__assert_fail@plt+0x533dc>
   65f78:	ldr	r0, [sp, #32]
   65f7c:	cmp	r0, #12
   65f80:	bne	65f88 <__assert_fail@plt+0x533d0>
   65f84:	b	65f88 <__assert_fail@plt+0x533d0>
   65f88:	mvn	r0, #1
   65f8c:	str	r0, [fp, #-28]	; 0xffffffe4
   65f90:	b	66348 <__assert_fail@plt+0x53790>
   65f94:	ldr	r0, [fp, #-32]	; 0xffffffe0
   65f98:	ldr	r0, [r0, #100]	; 0x64
   65f9c:	movw	r1, #0
   65fa0:	cmp	r0, r1
   65fa4:	beq	66058 <__assert_fail@plt+0x534a0>
   65fa8:	ldr	r0, [sp, #16]
   65fac:	ldr	r1, [fp, #-32]	; 0xffffffe0
   65fb0:	ldr	r1, [r1, #100]	; 0x64
   65fb4:	ldr	r2, [sp, #20]
   65fb8:	add	r1, r1, r2, lsl #2
   65fbc:	str	r0, [r1]
   65fc0:	ldr	r0, [sp, #36]	; 0x24
   65fc4:	ldr	r0, [r0, #76]	; 0x4c
   65fc8:	cmp	r0, #0
   65fcc:	beq	66054 <__assert_fail@plt+0x5349c>
   65fd0:	movw	r0, #0
   65fd4:	strb	r0, [sp, #15]
   65fd8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   65fdc:	ldr	r1, [sp, #16]
   65fe0:	add	r1, r1, #4
   65fe4:	movw	r2, #0
   65fe8:	bl	6704c <__assert_fail@plt+0x54494>
   65fec:	str	r0, [sp, #32]
   65ff0:	ldr	r0, [sp, #32]
   65ff4:	cmp	r0, #0
   65ff8:	beq	66008 <__assert_fail@plt+0x53450>
   65ffc:	ldr	r0, [sp, #32]
   66000:	str	r0, [fp, #-28]	; 0xffffffe4
   66004:	b	66348 <__assert_fail@plt+0x53790>
   66008:	ldr	r0, [sp, #16]
   6600c:	ldrb	r0, [r0, #52]	; 0x34
   66010:	ubfx	r0, r0, #6, #1
   66014:	and	r0, r0, #255	; 0xff
   66018:	cmp	r0, #0
   6601c:	beq	66050 <__assert_fail@plt+0x53498>
   66020:	ldr	r0, [fp, #-32]	; 0xffffffe0
   66024:	ldr	r1, [sp, #16]
   66028:	add	r1, r1, #4
   6602c:	bl	67160 <__assert_fail@plt+0x545a8>
   66030:	str	r0, [sp, #32]
   66034:	ldr	r0, [sp, #32]
   66038:	cmp	r0, #0
   6603c:	beq	6604c <__assert_fail@plt+0x53494>
   66040:	ldr	r0, [sp, #32]
   66044:	str	r0, [fp, #-28]	; 0xffffffe4
   66048:	b	66348 <__assert_fail@plt+0x53790>
   6604c:	b	66050 <__assert_fail@plt+0x53498>
   66050:	b	66054 <__assert_fail@plt+0x5349c>
   66054:	b	66058 <__assert_fail@plt+0x534a0>
   66058:	ldr	r0, [sp, #16]
   6605c:	ldrb	r0, [r0, #52]	; 0x34
   66060:	ubfx	r0, r0, #4, #1
   66064:	and	r0, r0, #255	; 0xff
   66068:	cmp	r0, #0
   6606c:	beq	660d0 <__assert_fail@plt+0x53518>
   66070:	ldr	r0, [sp, #16]
   66074:	ldrb	r0, [r0, #52]	; 0x34
   66078:	lsr	r0, r0, #7
   6607c:	and	r0, r0, #255	; 0xff
   66080:	cmp	r0, #0
   66084:	beq	660a0 <__assert_fail@plt+0x534e8>
   66088:	ldr	r0, [fp, #-32]	; 0xffffffe0
   6608c:	ldr	r1, [sp, #16]
   66090:	ldr	r2, [sp, #20]
   66094:	bl	66354 <__assert_fail@plt+0x5379c>
   66098:	cmp	r0, #0
   6609c:	beq	660cc <__assert_fail@plt+0x53514>
   660a0:	ldrb	r0, [fp, #-33]	; 0xffffffdf
   660a4:	tst	r0, #1
   660a8:	bne	660b8 <__assert_fail@plt+0x53500>
   660ac:	ldr	r0, [sp, #20]
   660b0:	str	r0, [fp, #-28]	; 0xffffffe4
   660b4:	b	66348 <__assert_fail@plt+0x53790>
   660b8:	ldr	r0, [sp, #20]
   660bc:	str	r0, [sp, #24]
   660c0:	movw	r0, #1
   660c4:	str	r0, [sp, #28]
   660c8:	b	660cc <__assert_fail@plt+0x53514>
   660cc:	b	660d0 <__assert_fail@plt+0x53518>
   660d0:	b	660d4 <__assert_fail@plt+0x5351c>
   660d4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   660d8:	ldr	r0, [r0, #56]	; 0x38
   660dc:	ldr	r1, [fp, #-32]	; 0xffffffe0
   660e0:	ldr	r1, [r1, #40]	; 0x28
   660e4:	cmp	r0, r1
   660e8:	movw	r0, #0
   660ec:	movle	r0, #1
   660f0:	mvn	r1, #0
   660f4:	eor	r0, r0, r1
   660f8:	tst	r0, #1
   660fc:	beq	6631c <__assert_fail@plt+0x53764>
   66100:	ldr	r0, [sp, #16]
   66104:	str	r0, [sp, #4]
   66108:	ldr	r0, [fp, #-32]	; 0xffffffe0
   6610c:	ldr	r0, [r0, #40]	; 0x28
   66110:	add	r0, r0, #1
   66114:	str	r0, [sp]
   66118:	ldr	r0, [sp]
   6611c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   66120:	ldr	r1, [r1, #36]	; 0x24
   66124:	cmp	r0, r1
   66128:	blt	66144 <__assert_fail@plt+0x5358c>
   6612c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   66130:	ldr	r0, [r0, #36]	; 0x24
   66134:	ldr	r1, [fp, #-32]	; 0xffffffe0
   66138:	ldr	r1, [r1, #48]	; 0x30
   6613c:	cmp	r0, r1
   66140:	blt	66170 <__assert_fail@plt+0x535b8>
   66144:	ldr	r0, [sp]
   66148:	ldr	r1, [fp, #-32]	; 0xffffffe0
   6614c:	ldr	r1, [r1, #28]
   66150:	cmp	r0, r1
   66154:	blt	661b0 <__assert_fail@plt+0x535f8>
   66158:	ldr	r0, [fp, #-32]	; 0xffffffe0
   6615c:	ldr	r0, [r0, #28]
   66160:	ldr	r1, [fp, #-32]	; 0xffffffe0
   66164:	ldr	r1, [r1, #48]	; 0x30
   66168:	cmp	r0, r1
   6616c:	bge	661b0 <__assert_fail@plt+0x535f8>
   66170:	ldr	r0, [fp, #-32]	; 0xffffffe0
   66174:	ldr	r1, [sp]
   66178:	add	r1, r1, #1
   6617c:	bl	6769c <__assert_fail@plt+0x54ae4>
   66180:	str	r0, [sp, #32]
   66184:	ldr	r0, [sp, #32]
   66188:	cmp	r0, #0
   6618c:	beq	661ac <__assert_fail@plt+0x535f4>
   66190:	ldr	r0, [sp, #32]
   66194:	cmp	r0, #12
   66198:	bne	661a0 <__assert_fail@plt+0x535e8>
   6619c:	b	661a0 <__assert_fail@plt+0x535e8>
   661a0:	mvn	r0, #1
   661a4:	str	r0, [fp, #-28]	; 0xffffffe4
   661a8:	b	66348 <__assert_fail@plt+0x53790>
   661ac:	b	661b0 <__assert_fail@plt+0x535f8>
   661b0:	ldr	r1, [fp, #-32]	; 0xffffffe0
   661b4:	ldr	r2, [sp, #16]
   661b8:	add	r0, sp, #32
   661bc:	bl	678b4 <__assert_fail@plt+0x54cfc>
   661c0:	str	r0, [sp, #16]
   661c4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   661c8:	ldr	r0, [r0, #100]	; 0x64
   661cc:	movw	r1, #0
   661d0:	cmp	r0, r1
   661d4:	beq	661ec <__assert_fail@plt+0x53634>
   661d8:	ldr	r1, [fp, #-32]	; 0xffffffe0
   661dc:	ldr	r2, [sp, #16]
   661e0:	add	r0, sp, #32
   661e4:	bl	67a40 <__assert_fail@plt+0x54e88>
   661e8:	str	r0, [sp, #16]
   661ec:	ldr	r0, [sp, #16]
   661f0:	movw	r1, #0
   661f4:	cmp	r0, r1
   661f8:	bne	66264 <__assert_fail@plt+0x536ac>
   661fc:	ldr	r0, [sp, #32]
   66200:	cmp	r0, #0
   66204:	beq	66214 <__assert_fail@plt+0x5365c>
   66208:	mvn	r0, #1
   6620c:	str	r0, [fp, #-28]	; 0xffffffe4
   66210:	b	66348 <__assert_fail@plt+0x53790>
   66214:	ldr	r0, [fp, #-32]	; 0xffffffe0
   66218:	ldr	r0, [r0, #100]	; 0x64
   6621c:	movw	r1, #0
   66220:	cmp	r0, r1
   66224:	beq	6625c <__assert_fail@plt+0x536a4>
   66228:	ldr	r0, [sp, #28]
   6622c:	cmp	r0, #0
   66230:	beq	66240 <__assert_fail@plt+0x53688>
   66234:	ldrb	r0, [fp, #-33]	; 0xffffffdf
   66238:	tst	r0, #1
   6623c:	beq	6625c <__assert_fail@plt+0x536a4>
   66240:	ldr	r1, [fp, #-32]	; 0xffffffe0
   66244:	add	r0, sp, #32
   66248:	bl	67cbc <__assert_fail@plt+0x55104>
   6624c:	str	r0, [sp, #16]
   66250:	movw	r1, #0
   66254:	cmp	r0, r1
   66258:	bne	66260 <__assert_fail@plt+0x536a8>
   6625c:	b	6631c <__assert_fail@plt+0x53764>
   66260:	b	66264 <__assert_fail@plt+0x536ac>
   66264:	ldrb	r0, [sp, #15]
   66268:	tst	r0, #1
   6626c:	beq	66298 <__assert_fail@plt+0x536e0>
   66270:	ldr	r0, [sp, #4]
   66274:	ldr	r1, [sp, #16]
   66278:	cmp	r0, r1
   6627c:	bne	6628c <__assert_fail@plt+0x536d4>
   66280:	ldr	r0, [sp]
   66284:	str	r0, [sp, #8]
   66288:	b	66294 <__assert_fail@plt+0x536dc>
   6628c:	movw	r0, #0
   66290:	strb	r0, [sp, #15]
   66294:	b	66298 <__assert_fail@plt+0x536e0>
   66298:	ldr	r0, [sp, #16]
   6629c:	ldrb	r0, [r0, #52]	; 0x34
   662a0:	ubfx	r0, r0, #4, #1
   662a4:	and	r0, r0, #255	; 0xff
   662a8:	cmp	r0, #0
   662ac:	beq	66318 <__assert_fail@plt+0x53760>
   662b0:	ldr	r0, [sp, #16]
   662b4:	ldrb	r0, [r0, #52]	; 0x34
   662b8:	lsr	r0, r0, #7
   662bc:	and	r0, r0, #255	; 0xff
   662c0:	cmp	r0, #0
   662c4:	beq	662e4 <__assert_fail@plt+0x5372c>
   662c8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   662cc:	ldr	r1, [sp, #16]
   662d0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   662d4:	ldr	r2, [r2, #40]	; 0x28
   662d8:	bl	66354 <__assert_fail@plt+0x5379c>
   662dc:	cmp	r0, #0
   662e0:	beq	66314 <__assert_fail@plt+0x5375c>
   662e4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   662e8:	ldr	r0, [r0, #40]	; 0x28
   662ec:	str	r0, [sp, #24]
   662f0:	movw	r0, #1
   662f4:	str	r0, [sp, #28]
   662f8:	movw	r0, #0
   662fc:	str	r0, [sp, #40]	; 0x28
   66300:	ldrb	r0, [fp, #-33]	; 0xffffffdf
   66304:	tst	r0, #1
   66308:	bne	66310 <__assert_fail@plt+0x53758>
   6630c:	b	6631c <__assert_fail@plt+0x53764>
   66310:	b	66314 <__assert_fail@plt+0x5375c>
   66314:	b	66318 <__assert_fail@plt+0x53760>
   66318:	b	660d4 <__assert_fail@plt+0x5351c>
   6631c:	ldr	r0, [sp, #40]	; 0x28
   66320:	movw	r1, #0
   66324:	cmp	r0, r1
   66328:	beq	66340 <__assert_fail@plt+0x53788>
   6632c:	ldr	r0, [sp, #8]
   66330:	ldr	r1, [sp, #40]	; 0x28
   66334:	ldr	r2, [r1]
   66338:	add	r0, r2, r0
   6633c:	str	r0, [r1]
   66340:	ldr	r0, [sp, #24]
   66344:	str	r0, [fp, #-28]	; 0xffffffe4
   66348:	ldr	r0, [fp, #-28]	; 0xffffffe4
   6634c:	mov	sp, fp
   66350:	pop	{fp, pc}
   66354:	push	{fp, lr}
   66358:	mov	fp, sp
   6635c:	sub	sp, sp, #24
   66360:	str	r0, [fp, #-8]
   66364:	str	r1, [sp, #12]
   66368:	str	r2, [sp, #8]
   6636c:	ldr	r0, [sp, #12]
   66370:	ldrb	r0, [r0, #52]	; 0x34
   66374:	ubfx	r0, r0, #4, #1
   66378:	and	r0, r0, #255	; 0xff
   6637c:	cmp	r0, #0
   66380:	beq	66388 <__assert_fail@plt+0x537d0>
   66384:	b	66388 <__assert_fail@plt+0x537d0>
   66388:	ldr	r0, [fp, #-8]
   6638c:	ldr	r1, [sp, #8]
   66390:	ldr	r2, [fp, #-8]
   66394:	ldr	r2, [r2, #88]	; 0x58
   66398:	bl	66c90 <__assert_fail@plt+0x540d8>
   6639c:	str	r0, [sp]
   663a0:	movw	r0, #0
   663a4:	str	r0, [sp, #4]
   663a8:	ldr	r0, [sp, #4]
   663ac:	ldr	r1, [sp, #12]
   663b0:	ldr	r1, [r1, #8]
   663b4:	cmp	r0, r1
   663b8:	bge	66418 <__assert_fail@plt+0x53860>
   663bc:	ldr	r0, [fp, #-8]
   663c0:	ldr	r0, [r0, #84]	; 0x54
   663c4:	ldr	r1, [sp, #12]
   663c8:	ldr	r1, [r1, #12]
   663cc:	ldr	r2, [sp, #4]
   663d0:	add	r1, r1, r2, lsl #2
   663d4:	ldr	r1, [r1]
   663d8:	ldr	r2, [sp]
   663dc:	bl	6c158 <__assert_fail@plt+0x595a0>
   663e0:	tst	r0, #1
   663e4:	beq	66404 <__assert_fail@plt+0x5384c>
   663e8:	ldr	r0, [sp, #12]
   663ec:	ldr	r0, [r0, #12]
   663f0:	ldr	r1, [sp, #4]
   663f4:	add	r0, r0, r1, lsl #2
   663f8:	ldr	r0, [r0]
   663fc:	str	r0, [fp, #-4]
   66400:	b	66420 <__assert_fail@plt+0x53868>
   66404:	b	66408 <__assert_fail@plt+0x53850>
   66408:	ldr	r0, [sp, #4]
   6640c:	add	r0, r0, #1
   66410:	str	r0, [sp, #4]
   66414:	b	663a8 <__assert_fail@plt+0x537f0>
   66418:	movw	r0, #0
   6641c:	str	r0, [fp, #-4]
   66420:	ldr	r0, [fp, #-4]
   66424:	mov	sp, fp
   66428:	pop	{fp, pc}
   6642c:	push	{fp, lr}
   66430:	mov	fp, sp
   66434:	sub	sp, sp, #80	; 0x50
   66438:	str	r0, [fp, #-8]
   6643c:	ldr	r0, [fp, #-8]
   66440:	ldr	r0, [r0, #84]	; 0x54
   66444:	str	r0, [fp, #-12]
   66448:	movw	r0, #0
   6644c:	str	r0, [fp, #-32]	; 0xffffffe0
   66450:	ldr	r1, [fp, #-8]
   66454:	ldr	r1, [r1, #100]	; 0x64
   66458:	cmp	r1, r0
   6645c:	beq	66464 <__assert_fail@plt+0x538ac>
   66460:	b	66464 <__assert_fail@plt+0x538ac>
   66464:	ldr	r0, [pc, #776]	; 66774 <__assert_fail@plt+0x53bbc>
   66468:	ldr	r1, [fp, #-8]
   6646c:	ldr	r1, [r1, #92]	; 0x5c
   66470:	str	r1, [fp, #-20]	; 0xffffffec
   66474:	ldr	r1, [fp, #-8]
   66478:	ldr	r1, [r1, #96]	; 0x60
   6647c:	str	r1, [fp, #-16]
   66480:	ldr	r1, [fp, #-20]	; 0xffffffec
   66484:	cmp	r0, r1
   66488:	bhi	66498 <__assert_fail@plt+0x538e0>
   6648c:	movw	r0, #12
   66490:	str	r0, [fp, #-4]
   66494:	b	66768 <__assert_fail@plt+0x53bb0>
   66498:	ldr	r0, [fp, #-20]	; 0xffffffec
   6649c:	add	r0, r0, #1
   664a0:	lsl	r0, r0, #2
   664a4:	bl	549ac <__assert_fail@plt+0x41df4>
   664a8:	str	r0, [fp, #-28]	; 0xffffffe4
   664ac:	ldr	r0, [fp, #-28]	; 0xffffffe4
   664b0:	movw	lr, #0
   664b4:	cmp	r0, lr
   664b8:	bne	664c8 <__assert_fail@plt+0x53910>
   664bc:	movw	r0, #12
   664c0:	str	r0, [fp, #-24]	; 0xffffffe8
   664c4:	b	66750 <__assert_fail@plt+0x53b98>
   664c8:	ldr	r0, [fp, #-12]
   664cc:	ldr	r0, [r0, #76]	; 0x4c
   664d0:	cmp	r0, #0
   664d4:	beq	666a0 <__assert_fail@plt+0x53ae8>
   664d8:	ldr	r0, [fp, #-20]	; 0xffffffec
   664dc:	add	r0, r0, #1
   664e0:	lsl	r0, r0, #2
   664e4:	bl	549ac <__assert_fail@plt+0x41df4>
   664e8:	str	r0, [fp, #-32]	; 0xffffffe0
   664ec:	ldr	r0, [fp, #-32]	; 0xffffffe0
   664f0:	movw	lr, #0
   664f4:	cmp	r0, lr
   664f8:	bne	66508 <__assert_fail@plt+0x53950>
   664fc:	movw	r0, #12
   66500:	str	r0, [fp, #-24]	; 0xffffffe8
   66504:	b	66750 <__assert_fail@plt+0x53b98>
   66508:	b	6650c <__assert_fail@plt+0x53954>
   6650c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   66510:	ldr	r1, [fp, #-20]	; 0xffffffec
   66514:	add	r1, r1, #1
   66518:	lsl	r2, r1, #2
   6651c:	movw	r1, #0
   66520:	and	r1, r1, #255	; 0xff
   66524:	bl	12900 <memset@plt>
   66528:	ldr	r1, [fp, #-28]	; 0xffffffe4
   6652c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   66530:	ldr	r3, [fp, #-16]
   66534:	ldr	r0, [fp, #-20]	; 0xffffffec
   66538:	add	lr, sp, #20
   6653c:	str	r0, [sp, #16]
   66540:	mov	r0, lr
   66544:	ldr	lr, [sp, #16]
   66548:	str	lr, [sp]
   6654c:	bl	6c288 <__assert_fail@plt+0x596d0>
   66550:	ldr	r0, [fp, #-8]
   66554:	add	r1, sp, #20
   66558:	bl	6c2fc <__assert_fail@plt+0x59744>
   6655c:	str	r0, [fp, #-24]	; 0xffffffe8
   66560:	ldr	r0, [sp, #44]	; 0x2c
   66564:	bl	50c68 <__assert_fail@plt+0x3e0b0>
   66568:	ldr	r0, [fp, #-24]	; 0xffffffe8
   6656c:	cmp	r0, #0
   66570:	beq	66578 <__assert_fail@plt+0x539c0>
   66574:	b	66750 <__assert_fail@plt+0x53b98>
   66578:	ldr	r0, [fp, #-28]	; 0xffffffe4
   6657c:	ldr	r0, [r0]
   66580:	movw	r1, #0
   66584:	cmp	r0, r1
   66588:	bne	665a0 <__assert_fail@plt+0x539e8>
   6658c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   66590:	ldr	r0, [r0]
   66594:	movw	r1, #0
   66598:	cmp	r0, r1
   6659c:	beq	665a4 <__assert_fail@plt+0x539ec>
   665a0:	b	66660 <__assert_fail@plt+0x53aa8>
   665a4:	b	665a8 <__assert_fail@plt+0x539f0>
   665a8:	ldr	r0, [fp, #-20]	; 0xffffffec
   665ac:	mvn	r1, #0
   665b0:	add	r0, r0, r1
   665b4:	str	r0, [fp, #-20]	; 0xffffffec
   665b8:	ldr	r0, [fp, #-20]	; 0xffffffec
   665bc:	cmp	r0, #0
   665c0:	bge	665d0 <__assert_fail@plt+0x53a18>
   665c4:	movw	r0, #1
   665c8:	str	r0, [fp, #-24]	; 0xffffffe8
   665cc:	b	66750 <__assert_fail@plt+0x53b98>
   665d0:	b	665d4 <__assert_fail@plt+0x53a1c>
   665d4:	ldr	r0, [fp, #-8]
   665d8:	ldr	r0, [r0, #100]	; 0x64
   665dc:	ldr	r1, [fp, #-20]	; 0xffffffec
   665e0:	add	r0, r0, r1, lsl #2
   665e4:	ldr	r0, [r0]
   665e8:	movw	r1, #0
   665ec:	cmp	r0, r1
   665f0:	movw	r0, #1
   665f4:	str	r0, [sp, #12]
   665f8:	beq	66630 <__assert_fail@plt+0x53a78>
   665fc:	ldr	r0, [fp, #-8]
   66600:	ldr	r0, [r0, #100]	; 0x64
   66604:	ldr	r1, [fp, #-20]	; 0xffffffec
   66608:	ldr	r0, [r0, r1, lsl #2]
   6660c:	ldrb	r0, [r0, #52]	; 0x34
   66610:	ubfx	r0, r0, #4, #1
   66614:	and	r0, r0, #255	; 0xff
   66618:	cmp	r0, #0
   6661c:	movw	r0, #0
   66620:	movne	r0, #1
   66624:	mvn	r1, #0
   66628:	eor	r0, r0, r1
   6662c:	str	r0, [sp, #12]
   66630:	ldr	r0, [sp, #12]
   66634:	tst	r0, #1
   66638:	bne	665a8 <__assert_fail@plt+0x539f0>
   6663c:	ldr	r0, [fp, #-8]
   66640:	ldr	r1, [r0, #100]	; 0x64
   66644:	ldr	r2, [fp, #-20]	; 0xffffffec
   66648:	add	r1, r1, r2, lsl #2
   6664c:	ldr	r1, [r1]
   66650:	ldr	r2, [fp, #-20]	; 0xffffffec
   66654:	bl	66354 <__assert_fail@plt+0x5379c>
   66658:	str	r0, [fp, #-16]
   6665c:	b	6650c <__assert_fail@plt+0x53954>
   66660:	ldr	r0, [fp, #-12]
   66664:	ldr	r1, [fp, #-28]	; 0xffffffe4
   66668:	ldr	r2, [fp, #-32]	; 0xffffffe0
   6666c:	ldr	r3, [fp, #-20]	; 0xffffffec
   66670:	add	r3, r3, #1
   66674:	bl	6c4f4 <__assert_fail@plt+0x5993c>
   66678:	str	r0, [fp, #-24]	; 0xffffffe8
   6667c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   66680:	bl	50c68 <__assert_fail@plt+0x3e0b0>
   66684:	movw	r0, #0
   66688:	str	r0, [fp, #-32]	; 0xffffffe0
   6668c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   66690:	cmp	r0, #0
   66694:	beq	6669c <__assert_fail@plt+0x53ae4>
   66698:	b	66750 <__assert_fail@plt+0x53b98>
   6669c:	b	66714 <__assert_fail@plt+0x53b5c>
   666a0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   666a4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   666a8:	ldr	r3, [fp, #-16]
   666ac:	ldr	r0, [fp, #-20]	; 0xffffffec
   666b0:	add	ip, sp, #20
   666b4:	str	r0, [sp, #8]
   666b8:	mov	r0, ip
   666bc:	ldr	ip, [sp, #8]
   666c0:	str	ip, [sp]
   666c4:	bl	6c288 <__assert_fail@plt+0x596d0>
   666c8:	ldr	r0, [fp, #-8]
   666cc:	add	r1, sp, #20
   666d0:	bl	6c2fc <__assert_fail@plt+0x59744>
   666d4:	str	r0, [fp, #-24]	; 0xffffffe8
   666d8:	ldr	r0, [sp, #44]	; 0x2c
   666dc:	bl	50c68 <__assert_fail@plt+0x3e0b0>
   666e0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   666e4:	cmp	r0, #0
   666e8:	beq	666f0 <__assert_fail@plt+0x53b38>
   666ec:	b	66750 <__assert_fail@plt+0x53b98>
   666f0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   666f4:	ldr	r0, [r0]
   666f8:	movw	r1, #0
   666fc:	cmp	r0, r1
   66700:	bne	66710 <__assert_fail@plt+0x53b58>
   66704:	movw	r0, #1
   66708:	str	r0, [fp, #-24]	; 0xffffffe8
   6670c:	b	66750 <__assert_fail@plt+0x53b98>
   66710:	b	66714 <__assert_fail@plt+0x53b5c>
   66714:	ldr	r0, [fp, #-8]
   66718:	ldr	r0, [r0, #100]	; 0x64
   6671c:	bl	50c68 <__assert_fail@plt+0x3e0b0>
   66720:	ldr	r0, [fp, #-28]	; 0xffffffe4
   66724:	ldr	lr, [fp, #-8]
   66728:	str	r0, [lr, #100]	; 0x64
   6672c:	movw	r0, #0
   66730:	str	r0, [fp, #-28]	; 0xffffffe4
   66734:	ldr	lr, [fp, #-16]
   66738:	ldr	r1, [fp, #-8]
   6673c:	str	lr, [r1, #96]	; 0x60
   66740:	ldr	r1, [fp, #-20]	; 0xffffffec
   66744:	ldr	lr, [fp, #-8]
   66748:	str	r1, [lr, #92]	; 0x5c
   6674c:	str	r0, [fp, #-24]	; 0xffffffe8
   66750:	ldr	r0, [fp, #-28]	; 0xffffffe4
   66754:	bl	50c68 <__assert_fail@plt+0x3e0b0>
   66758:	ldr	r0, [fp, #-32]	; 0xffffffe0
   6675c:	bl	50c68 <__assert_fail@plt+0x3e0b0>
   66760:	ldr	r0, [fp, #-24]	; 0xffffffe8
   66764:	str	r0, [fp, #-4]
   66768:	ldr	r0, [fp, #-4]
   6676c:	mov	sp, fp
   66770:	pop	{fp, pc}
   66774:	svccc	0x00ffffff
   66778:	push	{fp, lr}
   6677c:	mov	fp, sp
   66780:	sub	sp, sp, #24
   66784:	str	r0, [fp, #-4]
   66788:	movw	r0, #0
   6678c:	str	r0, [fp, #-8]
   66790:	ldr	r0, [fp, #-8]
   66794:	ldr	r1, [fp, #-4]
   66798:	ldr	r1, [r1, #124]	; 0x7c
   6679c:	cmp	r0, r1
   667a0:	bge	66868 <__assert_fail@plt+0x53cb0>
   667a4:	ldr	r0, [fp, #-4]
   667a8:	ldr	r0, [r0, #132]	; 0x84
   667ac:	ldr	r1, [fp, #-8]
   667b0:	add	r0, r0, r1, lsl #2
   667b4:	ldr	r0, [r0]
   667b8:	str	r0, [sp, #8]
   667bc:	movw	r0, #0
   667c0:	str	r0, [sp, #12]
   667c4:	ldr	r0, [sp, #12]
   667c8:	ldr	r1, [sp, #8]
   667cc:	ldr	r1, [r1, #16]
   667d0:	cmp	r0, r1
   667d4:	bge	66814 <__assert_fail@plt+0x53c5c>
   667d8:	ldr	r0, [sp, #8]
   667dc:	ldr	r0, [r0, #20]
   667e0:	ldr	r1, [sp, #12]
   667e4:	add	r0, r0, r1, lsl #2
   667e8:	ldr	r0, [r0]
   667ec:	str	r0, [sp, #4]
   667f0:	ldr	r0, [sp, #4]
   667f4:	ldr	r0, [r0, #16]
   667f8:	bl	50c68 <__assert_fail@plt+0x3e0b0>
   667fc:	ldr	r0, [sp, #4]
   66800:	bl	50c68 <__assert_fail@plt+0x3e0b0>
   66804:	ldr	r0, [sp, #12]
   66808:	add	r0, r0, #1
   6680c:	str	r0, [sp, #12]
   66810:	b	667c4 <__assert_fail@plt+0x53c0c>
   66814:	ldr	r0, [sp, #8]
   66818:	ldr	r0, [r0, #20]
   6681c:	bl	50c68 <__assert_fail@plt+0x3e0b0>
   66820:	ldr	r0, [sp, #8]
   66824:	ldr	r0, [r0, #8]
   66828:	movw	lr, #0
   6682c:	cmp	r0, lr
   66830:	beq	66850 <__assert_fail@plt+0x53c98>
   66834:	ldr	r0, [sp, #8]
   66838:	ldr	r0, [r0, #8]
   6683c:	ldr	r0, [r0, #8]
   66840:	bl	50c68 <__assert_fail@plt+0x3e0b0>
   66844:	ldr	r0, [sp, #8]
   66848:	ldr	r0, [r0, #8]
   6684c:	bl	50c68 <__assert_fail@plt+0x3e0b0>
   66850:	ldr	r0, [sp, #8]
   66854:	bl	50c68 <__assert_fail@plt+0x3e0b0>
   66858:	ldr	r0, [fp, #-8]
   6685c:	add	r0, r0, #1
   66860:	str	r0, [fp, #-8]
   66864:	b	66790 <__assert_fail@plt+0x53bd8>
   66868:	ldr	r0, [fp, #-4]
   6686c:	movw	r1, #0
   66870:	str	r1, [r0, #124]	; 0x7c
   66874:	ldr	r0, [fp, #-4]
   66878:	str	r1, [r0, #108]	; 0x6c
   6687c:	mov	sp, fp
   66880:	pop	{fp, pc}
   66884:	push	{r4, sl, fp, lr}
   66888:	add	fp, sp, #8
   6688c:	sub	sp, sp, #248	; 0xf8
   66890:	ldr	ip, [fp, #8]
   66894:	str	r0, [fp, #-16]
   66898:	str	r1, [fp, #-20]	; 0xffffffec
   6689c:	str	r2, [fp, #-24]	; 0xffffffe8
   668a0:	str	r3, [fp, #-28]	; 0xffffffe4
   668a4:	and	r0, ip, #1
   668a8:	strb	r0, [fp, #-29]	; 0xffffffe3
   668ac:	ldr	r0, [fp, #-16]
   668b0:	ldr	r0, [r0]
   668b4:	str	r0, [fp, #-36]	; 0xffffffdc
   668b8:	movw	r0, #59252	; 0xe774
   668bc:	movt	r0, #7
   668c0:	ldr	r1, [r0]
   668c4:	str	r1, [fp, #-72]	; 0xffffffb8
   668c8:	ldr	r1, [r0, #4]
   668cc:	str	r1, [fp, #-68]	; 0xffffffbc
   668d0:	ldr	r0, [r0, #8]
   668d4:	str	r0, [fp, #-64]	; 0xffffffc0
   668d8:	add	r0, sp, #44	; 0x2c
   668dc:	bl	6e114 <__assert_fail@plt+0x5b55c>
   668e0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   668e4:	cmp	r0, #1
   668e8:	bls	668f0 <__assert_fail@plt+0x53d38>
   668ec:	b	668f0 <__assert_fail@plt+0x53d38>
   668f0:	ldr	r0, [fp, #-20]	; 0xffffffec
   668f4:	ldr	r0, [r0, #100]	; 0x64
   668f8:	movw	r1, #0
   668fc:	cmp	r0, r1
   66900:	beq	66908 <__assert_fail@plt+0x53d50>
   66904:	b	66908 <__assert_fail@plt+0x53d50>
   66908:	ldrb	r0, [fp, #-29]	; 0xffffffe3
   6690c:	tst	r0, #1
   66910:	beq	6695c <__assert_fail@plt+0x53da4>
   66914:	sub	r0, fp, #72	; 0x48
   66918:	str	r0, [fp, #-60]	; 0xffffffc4
   6691c:	ldr	r0, [fp, #-60]	; 0xffffffc4
   66920:	ldr	r0, [r0, #4]
   66924:	movw	r1, #24
   66928:	mul	r0, r0, r1
   6692c:	bl	549ac <__assert_fail@plt+0x41df4>
   66930:	ldr	r1, [fp, #-60]	; 0xffffffc4
   66934:	str	r0, [r1, #8]
   66938:	ldr	r0, [fp, #-60]	; 0xffffffc4
   6693c:	ldr	r0, [r0, #8]
   66940:	movw	r1, #0
   66944:	cmp	r0, r1
   66948:	bne	66958 <__assert_fail@plt+0x53da0>
   6694c:	movw	r0, #12
   66950:	str	r0, [fp, #-12]
   66954:	b	66c4c <__assert_fail@plt+0x54094>
   66958:	b	66964 <__assert_fail@plt+0x53dac>
   6695c:	movw	r0, #0
   66960:	str	r0, [fp, #-60]	; 0xffffffc4
   66964:	ldr	r0, [fp, #-36]	; 0xffffffdc
   66968:	ldr	r0, [r0, #72]	; 0x48
   6696c:	str	r0, [fp, #-44]	; 0xffffffd4
   66970:	sub	r0, fp, #56	; 0x38
   66974:	movw	r1, #0
   66978:	and	r1, r1, #255	; 0xff
   6697c:	movw	r2, #12
   66980:	bl	12900 <memset@plt>
   66984:	ldr	r1, [fp, #-24]	; 0xffffffe8
   66988:	add	r0, sp, #44	; 0x2c
   6698c:	bl	6e14c <__assert_fail@plt+0x5b594>
   66990:	tst	r0, #1
   66994:	bne	669b8 <__assert_fail@plt+0x53e00>
   66998:	add	r0, sp, #44	; 0x2c
   6699c:	bl	6e20c <__assert_fail@plt+0x5b654>
   669a0:	ldr	r0, [fp, #-60]	; 0xffffffc4
   669a4:	bl	6e248 <__assert_fail@plt+0x5b690>
   669a8:	movw	lr, #12
   669ac:	str	lr, [fp, #-12]
   669b0:	str	r0, [sp, #32]
   669b4:	b	66c4c <__assert_fail@plt+0x54094>
   669b8:	add	r0, sp, #44	; 0x2c
   669bc:	bl	6e2ec <__assert_fail@plt+0x5b734>
   669c0:	str	r0, [sp, #40]	; 0x28
   669c4:	ldr	r0, [sp, #40]	; 0x28
   669c8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   669cc:	ldr	lr, [fp, #-24]	; 0xffffffe8
   669d0:	lsl	r2, lr, #3
   669d4:	bl	125c4 <memcpy@plt>
   669d8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   669dc:	ldr	r0, [r0]
   669e0:	str	r0, [fp, #-40]	; 0xffffffd8
   669e4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   669e8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   669ec:	ldr	r1, [r1, #4]
   669f0:	cmp	r0, r1
   669f4:	bgt	66c30 <__assert_fail@plt+0x54078>
   669f8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   669fc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   66a00:	ldr	r2, [sp, #40]	; 0x28
   66a04:	ldr	r3, [fp, #-44]	; 0xffffffd4
   66a08:	ldr	ip, [fp, #-40]	; 0xffffffd8
   66a0c:	ldr	lr, [fp, #-24]	; 0xffffffe8
   66a10:	str	ip, [sp]
   66a14:	str	lr, [sp, #4]
   66a18:	bl	6e304 <__assert_fail@plt+0x5b74c>
   66a1c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   66a20:	ldr	r1, [fp, #-28]	; 0xffffffe4
   66a24:	ldr	r1, [r1, #4]
   66a28:	cmp	r0, r1
   66a2c:	bne	66a44 <__assert_fail@plt+0x53e8c>
   66a30:	ldr	r0, [fp, #-44]	; 0xffffffd4
   66a34:	ldr	r1, [fp, #-20]	; 0xffffffec
   66a38:	ldr	r1, [r1, #96]	; 0x60
   66a3c:	cmp	r0, r1
   66a40:	beq	66a68 <__assert_fail@plt+0x53eb0>
   66a44:	ldr	r0, [fp, #-60]	; 0xffffffc4
   66a48:	movw	r1, #0
   66a4c:	cmp	r0, r1
   66a50:	beq	66b48 <__assert_fail@plt+0x53f90>
   66a54:	ldr	r1, [fp, #-44]	; 0xffffffd4
   66a58:	sub	r0, fp, #56	; 0x38
   66a5c:	bl	64350 <__assert_fail@plt+0x51798>
   66a60:	cmp	r0, #0
   66a64:	beq	66b48 <__assert_fail@plt+0x53f90>
   66a68:	mvn	r0, #0
   66a6c:	str	r0, [fp, #-44]	; 0xffffffd4
   66a70:	ldr	r0, [fp, #-60]	; 0xffffffc4
   66a74:	movw	r1, #0
   66a78:	cmp	r0, r1
   66a7c:	beq	66b18 <__assert_fail@plt+0x53f60>
   66a80:	movw	r0, #0
   66a84:	str	r0, [sp, #36]	; 0x24
   66a88:	ldr	r0, [sp, #36]	; 0x24
   66a8c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   66a90:	cmp	r0, r1
   66a94:	bcs	66b14 <__assert_fail@plt+0x53f5c>
   66a98:	ldr	r0, [fp, #-28]	; 0xffffffe4
   66a9c:	ldr	r1, [sp, #36]	; 0x24
   66aa0:	add	r0, r0, r1, lsl #3
   66aa4:	ldr	r0, [r0]
   66aa8:	cmn	r0, #1
   66aac:	ble	66b00 <__assert_fail@plt+0x53f48>
   66ab0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   66ab4:	ldr	r1, [sp, #36]	; 0x24
   66ab8:	add	r0, r0, r1, lsl #3
   66abc:	ldr	r0, [r0, #4]
   66ac0:	cmn	r0, #1
   66ac4:	bne	66b00 <__assert_fail@plt+0x53f48>
   66ac8:	ldr	r0, [fp, #-60]	; 0xffffffc4
   66acc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   66ad0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   66ad4:	ldr	r1, [sp, #40]	; 0x28
   66ad8:	sub	ip, fp, #40	; 0x28
   66adc:	str	r1, [sp, #28]
   66ae0:	mov	r1, ip
   66ae4:	ldr	ip, [sp, #28]
   66ae8:	str	ip, [sp]
   66aec:	sub	lr, fp, #56	; 0x38
   66af0:	str	lr, [sp, #4]
   66af4:	bl	6e4ac <__assert_fail@plt+0x5b8f4>
   66af8:	str	r0, [fp, #-44]	; 0xffffffd4
   66afc:	b	66b14 <__assert_fail@plt+0x53f5c>
   66b00:	b	66b04 <__assert_fail@plt+0x53f4c>
   66b04:	ldr	r0, [sp, #36]	; 0x24
   66b08:	add	r0, r0, #1
   66b0c:	str	r0, [sp, #36]	; 0x24
   66b10:	b	66a88 <__assert_fail@plt+0x53ed0>
   66b14:	b	66b18 <__assert_fail@plt+0x53f60>
   66b18:	ldr	r0, [fp, #-44]	; 0xffffffd4
   66b1c:	cmp	r0, #0
   66b20:	bge	66b44 <__assert_fail@plt+0x53f8c>
   66b24:	ldr	r0, [fp, #-48]	; 0xffffffd0
   66b28:	bl	50c68 <__assert_fail@plt+0x3e0b0>
   66b2c:	add	r0, sp, #44	; 0x2c
   66b30:	bl	6e20c <__assert_fail@plt+0x5b654>
   66b34:	ldr	r0, [fp, #-60]	; 0xffffffc4
   66b38:	bl	6e248 <__assert_fail@plt+0x5b690>
   66b3c:	str	r0, [fp, #-12]
   66b40:	b	66c4c <__assert_fail@plt+0x54094>
   66b44:	b	66b48 <__assert_fail@plt+0x53f90>
   66b48:	ldr	r0, [fp, #-20]	; 0xffffffec
   66b4c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   66b50:	ldr	r2, [fp, #-28]	; 0xffffffe4
   66b54:	ldr	r3, [sp, #40]	; 0x28
   66b58:	ldr	ip, [fp, #-44]	; 0xffffffd4
   66b5c:	ldr	lr, [fp, #-60]	; 0xffffffc4
   66b60:	sub	r4, fp, #40	; 0x28
   66b64:	str	r4, [sp]
   66b68:	str	ip, [sp, #4]
   66b6c:	sub	ip, fp, #56	; 0x38
   66b70:	str	ip, [sp, #8]
   66b74:	str	lr, [sp, #12]
   66b78:	bl	6e64c <__assert_fail@plt+0x5ba94>
   66b7c:	str	r0, [fp, #-44]	; 0xffffffd4
   66b80:	ldr	r0, [fp, #-44]	; 0xffffffd4
   66b84:	cmp	r0, #0
   66b88:	bge	66c2c <__assert_fail@plt+0x54074>
   66b8c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   66b90:	cmn	r0, #2
   66b94:	bne	66bc0 <__assert_fail@plt+0x54008>
   66b98:	ldr	r0, [fp, #-48]	; 0xffffffd0
   66b9c:	bl	50c68 <__assert_fail@plt+0x3e0b0>
   66ba0:	add	r0, sp, #44	; 0x2c
   66ba4:	bl	6e20c <__assert_fail@plt+0x5b654>
   66ba8:	ldr	r0, [fp, #-60]	; 0xffffffc4
   66bac:	bl	6e248 <__assert_fail@plt+0x5b690>
   66bb0:	movw	lr, #12
   66bb4:	str	lr, [fp, #-12]
   66bb8:	str	r0, [sp, #24]
   66bbc:	b	66c4c <__assert_fail@plt+0x54094>
   66bc0:	ldr	r0, [fp, #-60]	; 0xffffffc4
   66bc4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   66bc8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   66bcc:	ldr	r1, [sp, #40]	; 0x28
   66bd0:	sub	ip, fp, #40	; 0x28
   66bd4:	str	r1, [sp, #20]
   66bd8:	mov	r1, ip
   66bdc:	ldr	ip, [sp, #20]
   66be0:	str	ip, [sp]
   66be4:	sub	lr, fp, #56	; 0x38
   66be8:	str	lr, [sp, #4]
   66bec:	bl	6e4ac <__assert_fail@plt+0x5b8f4>
   66bf0:	str	r0, [fp, #-44]	; 0xffffffd4
   66bf4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   66bf8:	cmp	r0, #0
   66bfc:	bge	66c28 <__assert_fail@plt+0x54070>
   66c00:	ldr	r0, [fp, #-48]	; 0xffffffd0
   66c04:	bl	50c68 <__assert_fail@plt+0x3e0b0>
   66c08:	add	r0, sp, #44	; 0x2c
   66c0c:	bl	6e20c <__assert_fail@plt+0x5b654>
   66c10:	ldr	r0, [fp, #-60]	; 0xffffffc4
   66c14:	bl	6e248 <__assert_fail@plt+0x5b690>
   66c18:	movw	lr, #1
   66c1c:	str	lr, [fp, #-12]
   66c20:	str	r0, [sp, #16]
   66c24:	b	66c4c <__assert_fail@plt+0x54094>
   66c28:	b	66c2c <__assert_fail@plt+0x54074>
   66c2c:	b	669e4 <__assert_fail@plt+0x53e2c>
   66c30:	ldr	r0, [fp, #-48]	; 0xffffffd0
   66c34:	bl	50c68 <__assert_fail@plt+0x3e0b0>
   66c38:	add	r0, sp, #44	; 0x2c
   66c3c:	bl	6e20c <__assert_fail@plt+0x5b654>
   66c40:	ldr	r0, [fp, #-60]	; 0xffffffc4
   66c44:	bl	6e248 <__assert_fail@plt+0x5b690>
   66c48:	str	r0, [fp, #-12]
   66c4c:	ldr	r0, [fp, #-12]
   66c50:	sub	sp, fp, #8
   66c54:	pop	{r4, sl, fp, pc}
   66c58:	push	{fp, lr}
   66c5c:	mov	fp, sp
   66c60:	sub	sp, sp, #8
   66c64:	str	r0, [sp, #4]
   66c68:	ldr	r0, [sp, #4]
   66c6c:	bl	66778 <__assert_fail@plt+0x53bc0>
   66c70:	ldr	r0, [sp, #4]
   66c74:	ldr	r0, [r0, #132]	; 0x84
   66c78:	bl	50c68 <__assert_fail@plt+0x3e0b0>
   66c7c:	ldr	r0, [sp, #4]
   66c80:	ldr	r0, [r0, #116]	; 0x74
   66c84:	bl	50c68 <__assert_fail@plt+0x3e0b0>
   66c88:	mov	sp, fp
   66c8c:	pop	{fp, pc}
   66c90:	push	{fp, lr}
   66c94:	mov	fp, sp
   66c98:	sub	sp, sp, #40	; 0x28
   66c9c:	str	r0, [fp, #-8]
   66ca0:	str	r1, [fp, #-12]
   66ca4:	str	r2, [fp, #-16]
   66ca8:	ldr	r0, [fp, #-12]
   66cac:	cmp	r0, #0
   66cb0:	bge	66cc4 <__assert_fail@plt+0x5410c>
   66cb4:	ldr	r0, [fp, #-8]
   66cb8:	ldr	r0, [r0, #60]	; 0x3c
   66cbc:	str	r0, [fp, #-4]
   66cc0:	b	66e84 <__assert_fail@plt+0x542cc>
   66cc4:	ldr	r0, [fp, #-12]
   66cc8:	ldr	r1, [fp, #-8]
   66ccc:	ldr	r1, [r1, #48]	; 0x30
   66cd0:	cmp	r0, r1
   66cd4:	bne	66d00 <__assert_fail@plt+0x54148>
   66cd8:	ldr	r0, [fp, #-16]
   66cdc:	and	r0, r0, #2
   66ce0:	cmp	r0, #0
   66ce4:	movw	r0, #0
   66ce8:	movne	r0, #1
   66cec:	tst	r0, #1
   66cf0:	movw	r0, #8
   66cf4:	moveq	r0, #10
   66cf8:	str	r0, [fp, #-4]
   66cfc:	b	66e84 <__assert_fail@plt+0x542cc>
   66d00:	ldr	r0, [fp, #-8]
   66d04:	ldr	r0, [r0, #80]	; 0x50
   66d08:	cmp	r0, #1
   66d0c:	ble	66e08 <__assert_fail@plt+0x54250>
   66d10:	ldr	r0, [fp, #-12]
   66d14:	str	r0, [sp, #12]
   66d18:	ldr	r0, [fp, #-8]
   66d1c:	ldr	r0, [r0, #8]
   66d20:	ldr	r1, [sp, #12]
   66d24:	add	r0, r0, r1, lsl #2
   66d28:	ldr	r0, [r0]
   66d2c:	cmn	r0, #1
   66d30:	bne	66d74 <__assert_fail@plt+0x541bc>
   66d34:	ldr	r0, [sp, #12]
   66d38:	cmp	r0, #0
   66d3c:	blt	66d44 <__assert_fail@plt+0x5418c>
   66d40:	b	66d44 <__assert_fail@plt+0x5418c>
   66d44:	ldr	r0, [sp, #12]
   66d48:	mvn	r1, #0
   66d4c:	add	r0, r0, r1
   66d50:	str	r0, [sp, #12]
   66d54:	ldr	r0, [sp, #12]
   66d58:	cmp	r0, #0
   66d5c:	bge	66d70 <__assert_fail@plt+0x541b8>
   66d60:	ldr	r0, [fp, #-8]
   66d64:	ldr	r0, [r0, #60]	; 0x3c
   66d68:	str	r0, [fp, #-4]
   66d6c:	b	66e84 <__assert_fail@plt+0x542cc>
   66d70:	b	66d18 <__assert_fail@plt+0x54160>
   66d74:	ldr	r0, [fp, #-8]
   66d78:	ldr	r0, [r0, #8]
   66d7c:	ldr	r1, [sp, #12]
   66d80:	add	r0, r0, r1, lsl #2
   66d84:	ldr	r0, [r0]
   66d88:	str	r0, [sp, #16]
   66d8c:	ldr	r0, [fp, #-8]
   66d90:	ldrb	r0, [r0, #78]	; 0x4e
   66d94:	cmp	r0, #0
   66d98:	beq	66dc4 <__assert_fail@plt+0x5420c>
   66d9c:	ldr	r0, [sp, #16]
   66da0:	bl	128dc <iswalnum@plt>
   66da4:	cmp	r0, #0
   66da8:	bne	66db8 <__assert_fail@plt+0x54200>
   66dac:	ldr	r0, [sp, #16]
   66db0:	cmp	r0, #95	; 0x5f
   66db4:	bne	66dc4 <__assert_fail@plt+0x5420c>
   66db8:	movw	r0, #1
   66dbc:	str	r0, [fp, #-4]
   66dc0:	b	66e84 <__assert_fail@plt+0x542cc>
   66dc4:	ldr	r0, [sp, #16]
   66dc8:	cmp	r0, #10
   66dcc:	movw	r0, #0
   66dd0:	str	r0, [sp, #8]
   66dd4:	bne	66df0 <__assert_fail@plt+0x54238>
   66dd8:	ldr	r0, [fp, #-8]
   66ddc:	ldrb	r0, [r0, #77]	; 0x4d
   66de0:	cmp	r0, #0
   66de4:	movw	r0, #0
   66de8:	movne	r0, #1
   66dec:	str	r0, [sp, #8]
   66df0:	ldr	r0, [sp, #8]
   66df4:	tst	r0, #1
   66df8:	movw	r0, #2
   66dfc:	moveq	r0, #0
   66e00:	str	r0, [fp, #-4]
   66e04:	b	66e84 <__assert_fail@plt+0x542cc>
   66e08:	ldr	r0, [fp, #-8]
   66e0c:	ldr	r0, [r0, #4]
   66e10:	ldr	r1, [fp, #-12]
   66e14:	add	r0, r0, r1
   66e18:	ldrb	r0, [r0]
   66e1c:	str	r0, [sp, #20]
   66e20:	ldr	r0, [fp, #-8]
   66e24:	ldr	r0, [r0, #68]	; 0x44
   66e28:	ldr	r1, [sp, #20]
   66e2c:	bl	67000 <__assert_fail@plt+0x54448>
   66e30:	tst	r0, #1
   66e34:	beq	66e44 <__assert_fail@plt+0x5428c>
   66e38:	movw	r0, #1
   66e3c:	str	r0, [fp, #-4]
   66e40:	b	66e84 <__assert_fail@plt+0x542cc>
   66e44:	ldr	r0, [sp, #20]
   66e48:	cmp	r0, #10
   66e4c:	movw	r0, #0
   66e50:	str	r0, [sp, #4]
   66e54:	bne	66e70 <__assert_fail@plt+0x542b8>
   66e58:	ldr	r0, [fp, #-8]
   66e5c:	ldrb	r0, [r0, #77]	; 0x4d
   66e60:	cmp	r0, #0
   66e64:	movw	r0, #0
   66e68:	movne	r0, #1
   66e6c:	str	r0, [sp, #4]
   66e70:	ldr	r0, [sp, #4]
   66e74:	tst	r0, #1
   66e78:	movw	r0, #2
   66e7c:	moveq	r0, #0
   66e80:	str	r0, [fp, #-4]
   66e84:	ldr	r0, [fp, #-4]
   66e88:	mov	sp, fp
   66e8c:	pop	{fp, pc}
   66e90:	push	{fp, lr}
   66e94:	mov	fp, sp
   66e98:	sub	sp, sp, #48	; 0x30
   66e9c:	str	r0, [fp, #-4]
   66ea0:	str	r1, [fp, #-8]
   66ea4:	str	r2, [fp, #-12]
   66ea8:	mvn	r0, #0
   66eac:	str	r0, [sp, #16]
   66eb0:	ldr	r0, [fp, #-4]
   66eb4:	ldr	r0, [r0, #24]
   66eb8:	ldr	r1, [fp, #-4]
   66ebc:	ldr	r1, [r1, #32]
   66ec0:	add	r0, r0, r1
   66ec4:	str	r0, [sp, #24]
   66ec8:	ldr	r0, [sp, #24]
   66ecc:	ldr	r1, [fp, #-8]
   66ed0:	cmp	r0, r1
   66ed4:	bge	66fe8 <__assert_fail@plt+0x54430>
   66ed8:	ldr	r0, [fp, #-4]
   66edc:	ldr	r0, [r0, #44]	; 0x2c
   66ee0:	ldr	r1, [sp, #24]
   66ee4:	sub	r0, r0, r1
   66ee8:	str	r0, [sp, #8]
   66eec:	ldr	r0, [fp, #-4]
   66ef0:	ldr	r1, [r0, #16]
   66ef4:	str	r1, [fp, #-20]	; 0xffffffec
   66ef8:	ldr	r0, [r0, #20]
   66efc:	str	r0, [fp, #-16]
   66f00:	ldr	r0, [fp, #-4]
   66f04:	ldr	r0, [r0]
   66f08:	ldr	r1, [sp, #24]
   66f0c:	add	r1, r0, r1
   66f10:	ldr	r2, [sp, #8]
   66f14:	ldr	r0, [fp, #-4]
   66f18:	add	r3, r0, #16
   66f1c:	add	r0, sp, #12
   66f20:	bl	54a1c <__assert_fail@plt+0x41e64>
   66f24:	str	r0, [sp, #20]
   66f28:	ldr	r0, [sp, #20]
   66f2c:	cmn	r0, #2
   66f30:	movw	r0, #1
   66f34:	str	r0, [sp, #4]
   66f38:	beq	66f64 <__assert_fail@plt+0x543ac>
   66f3c:	ldr	r0, [sp, #20]
   66f40:	cmn	r0, #1
   66f44:	movw	r0, #1
   66f48:	str	r0, [sp, #4]
   66f4c:	beq	66f64 <__assert_fail@plt+0x543ac>
   66f50:	ldr	r0, [sp, #20]
   66f54:	cmp	r0, #0
   66f58:	movw	r0, #0
   66f5c:	moveq	r0, #1
   66f60:	str	r0, [sp, #4]
   66f64:	ldr	r0, [sp, #4]
   66f68:	tst	r0, #1
   66f6c:	beq	66fcc <__assert_fail@plt+0x54414>
   66f70:	ldr	r0, [sp, #20]
   66f74:	cmp	r0, #0
   66f78:	beq	66f88 <__assert_fail@plt+0x543d0>
   66f7c:	ldr	r0, [sp, #8]
   66f80:	cmp	r0, #0
   66f84:	bne	66f94 <__assert_fail@plt+0x543dc>
   66f88:	movw	r0, #0
   66f8c:	str	r0, [sp, #16]
   66f90:	b	66fac <__assert_fail@plt+0x543f4>
   66f94:	ldr	r0, [fp, #-4]
   66f98:	ldr	r0, [r0]
   66f9c:	ldr	r1, [sp, #24]
   66fa0:	add	r0, r0, r1
   66fa4:	ldrb	r0, [r0]
   66fa8:	str	r0, [sp, #16]
   66fac:	movw	r0, #1
   66fb0:	str	r0, [sp, #20]
   66fb4:	ldr	r0, [fp, #-4]
   66fb8:	ldr	r1, [fp, #-20]	; 0xffffffec
   66fbc:	str	r1, [r0, #16]
   66fc0:	ldr	r1, [fp, #-16]
   66fc4:	str	r1, [r0, #20]
   66fc8:	b	66fd4 <__assert_fail@plt+0x5441c>
   66fcc:	ldr	r0, [sp, #12]
   66fd0:	str	r0, [sp, #16]
   66fd4:	ldr	r0, [sp, #20]
   66fd8:	ldr	r1, [sp, #24]
   66fdc:	add	r0, r1, r0
   66fe0:	str	r0, [sp, #24]
   66fe4:	b	66ec8 <__assert_fail@plt+0x54310>
   66fe8:	ldr	r0, [sp, #16]
   66fec:	ldr	r1, [fp, #-12]
   66ff0:	str	r0, [r1]
   66ff4:	ldr	r0, [sp, #24]
   66ff8:	mov	sp, fp
   66ffc:	pop	{fp, pc}
   67000:	sub	sp, sp, #8
   67004:	str	r0, [sp, #4]
   67008:	str	r1, [sp]
   6700c:	ldr	r0, [sp, #4]
   67010:	ldr	r1, [sp]
   67014:	asr	r2, r1, #31
   67018:	add	r2, r1, r2, lsr #27
   6701c:	asr	r3, r2, #5
   67020:	ldr	r0, [r0, r3, lsl #2]
   67024:	bic	r2, r2, #31
   67028:	sub	r1, r1, r2
   6702c:	lsr	r0, r0, r1
   67030:	and	r0, r0, #1
   67034:	cmp	r0, #0
   67038:	movw	r0, #0
   6703c:	movne	r0, #1
   67040:	and	r0, r0, #1
   67044:	add	sp, sp, #8
   67048:	bx	lr
   6704c:	push	{fp, lr}
   67050:	mov	fp, sp
   67054:	sub	sp, sp, #32
   67058:	str	r0, [fp, #-8]
   6705c:	str	r1, [fp, #-12]
   67060:	str	r2, [sp, #16]
   67064:	ldr	r0, [fp, #-8]
   67068:	ldr	r0, [r0, #84]	; 0x54
   6706c:	str	r0, [sp, #12]
   67070:	movw	r0, #0
   67074:	str	r0, [sp, #8]
   67078:	ldr	r0, [sp, #8]
   6707c:	ldr	r1, [fp, #-12]
   67080:	ldr	r1, [r1, #4]
   67084:	cmp	r0, r1
   67088:	bge	6714c <__assert_fail@plt+0x54594>
   6708c:	ldr	r0, [fp, #-12]
   67090:	ldr	r0, [r0, #8]
   67094:	ldr	r1, [sp, #8]
   67098:	ldr	r0, [r0, r1, lsl #2]
   6709c:	str	r0, [sp]
   670a0:	ldr	r0, [sp, #12]
   670a4:	ldr	r0, [r0]
   670a8:	ldr	r1, [sp]
   670ac:	add	r0, r0, r1, lsl #3
   670b0:	ldr	r0, [r0, #4]
   670b4:	and	r0, r0, #255	; 0xff
   670b8:	cmp	r0, #8
   670bc:	bne	67138 <__assert_fail@plt+0x54580>
   670c0:	ldr	r0, [sp, #12]
   670c4:	ldr	r0, [r0]
   670c8:	ldr	r1, [sp]
   670cc:	add	r0, r0, r1, lsl #3
   670d0:	ldr	r0, [r0]
   670d4:	cmp	r0, #32
   670d8:	bge	67138 <__assert_fail@plt+0x54580>
   670dc:	ldr	r0, [sp, #12]
   670e0:	ldr	r1, [r0]
   670e4:	ldr	r0, [r0, #80]	; 0x50
   670e8:	ldr	r2, [sp]
   670ec:	add	r1, r1, r2, lsl #3
   670f0:	ldr	r1, [r1]
   670f4:	movw	r2, #1
   670f8:	lsl	r1, r2, r1
   670fc:	and	r0, r0, r1
   67100:	cmp	r0, #0
   67104:	beq	67138 <__assert_fail@plt+0x54580>
   67108:	ldr	r0, [fp, #-8]
   6710c:	ldr	r1, [sp]
   67110:	ldr	r2, [sp, #16]
   67114:	bl	67da0 <__assert_fail@plt+0x551e8>
   67118:	str	r0, [sp, #4]
   6711c:	ldr	r0, [sp, #4]
   67120:	cmp	r0, #0
   67124:	beq	67134 <__assert_fail@plt+0x5457c>
   67128:	ldr	r0, [sp, #4]
   6712c:	str	r0, [fp, #-4]
   67130:	b	67154 <__assert_fail@plt+0x5459c>
   67134:	b	67138 <__assert_fail@plt+0x54580>
   67138:	b	6713c <__assert_fail@plt+0x54584>
   6713c:	ldr	r0, [sp, #8]
   67140:	add	r0, r0, #1
   67144:	str	r0, [sp, #8]
   67148:	b	67078 <__assert_fail@plt+0x544c0>
   6714c:	movw	r0, #0
   67150:	str	r0, [fp, #-4]
   67154:	ldr	r0, [fp, #-4]
   67158:	mov	sp, fp
   6715c:	pop	{fp, pc}
   67160:	push	{fp, lr}
   67164:	mov	fp, sp
   67168:	sub	sp, sp, #96	; 0x60
   6716c:	str	r0, [fp, #-4]
   67170:	str	r1, [fp, #-8]
   67174:	ldr	r0, [fp, #-4]
   67178:	ldr	r0, [r0, #84]	; 0x54
   6717c:	str	r0, [fp, #-12]
   67180:	ldr	r0, [fp, #-4]
   67184:	ldr	r0, [r0, #40]	; 0x28
   67188:	str	r0, [fp, #-24]	; 0xffffffe8
   6718c:	movw	r0, #0
   67190:	str	r0, [fp, #-20]	; 0xffffffec
   67194:	ldr	r0, [fp, #-20]	; 0xffffffec
   67198:	ldr	r1, [fp, #-8]
   6719c:	ldr	r1, [r1, #4]
   671a0:	cmp	r0, r1
   671a4:	bge	67688 <__assert_fail@plt+0x54ad0>
   671a8:	ldr	r0, [fp, #-8]
   671ac:	ldr	r0, [r0, #8]
   671b0:	ldr	r1, [fp, #-20]	; 0xffffffec
   671b4:	ldr	r0, [r0, r1, lsl #2]
   671b8:	str	r0, [fp, #-40]	; 0xffffffd8
   671bc:	ldr	r0, [fp, #-12]
   671c0:	ldr	r0, [r0]
   671c4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   671c8:	add	r0, r0, r1, lsl #3
   671cc:	str	r0, [sp, #48]	; 0x30
   671d0:	ldr	r0, [sp, #48]	; 0x30
   671d4:	ldr	r0, [r0, #4]
   671d8:	and	r0, r0, #255	; 0xff
   671dc:	cmp	r0, #4
   671e0:	beq	671e8 <__assert_fail@plt+0x54630>
   671e4:	b	67678 <__assert_fail@plt+0x54ac0>
   671e8:	ldr	r0, [sp, #48]	; 0x30
   671ec:	ldr	r0, [r0, #4]
   671f0:	lsr	r0, r0, #8
   671f4:	movw	r1, #1023	; 0x3ff
   671f8:	and	r0, r0, r1
   671fc:	cmp	r0, #0
   67200:	beq	672e4 <__assert_fail@plt+0x5472c>
   67204:	ldr	r0, [fp, #-4]
   67208:	ldr	r1, [fp, #-24]	; 0xffffffe8
   6720c:	ldr	r2, [fp, #-4]
   67210:	ldr	r2, [r2, #88]	; 0x58
   67214:	bl	66c90 <__assert_fail@plt+0x540d8>
   67218:	str	r0, [fp, #-44]	; 0xffffffd4
   6721c:	ldr	r0, [sp, #48]	; 0x30
   67220:	ldr	r0, [r0, #4]
   67224:	lsr	r0, r0, #8
   67228:	movw	r1, #1023	; 0x3ff
   6722c:	and	r0, r0, r1
   67230:	and	r0, r0, #4
   67234:	cmp	r0, #0
   67238:	beq	6724c <__assert_fail@plt+0x54694>
   6723c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   67240:	and	r0, r0, #1
   67244:	cmp	r0, #0
   67248:	beq	672dc <__assert_fail@plt+0x54724>
   6724c:	ldr	r0, [sp, #48]	; 0x30
   67250:	ldr	r0, [r0, #4]
   67254:	lsr	r0, r0, #8
   67258:	movw	r1, #1023	; 0x3ff
   6725c:	and	r0, r0, r1
   67260:	and	r0, r0, #8
   67264:	cmp	r0, #0
   67268:	beq	6727c <__assert_fail@plt+0x546c4>
   6726c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   67270:	and	r0, r0, #1
   67274:	cmp	r0, #0
   67278:	bne	672dc <__assert_fail@plt+0x54724>
   6727c:	ldr	r0, [sp, #48]	; 0x30
   67280:	ldr	r0, [r0, #4]
   67284:	lsr	r0, r0, #8
   67288:	movw	r1, #1023	; 0x3ff
   6728c:	and	r0, r0, r1
   67290:	and	r0, r0, #32
   67294:	cmp	r0, #0
   67298:	beq	672ac <__assert_fail@plt+0x546f4>
   6729c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   672a0:	and	r0, r0, #2
   672a4:	cmp	r0, #0
   672a8:	beq	672dc <__assert_fail@plt+0x54724>
   672ac:	ldr	r0, [sp, #48]	; 0x30
   672b0:	ldr	r0, [r0, #4]
   672b4:	lsr	r0, r0, #8
   672b8:	movw	r1, #1023	; 0x3ff
   672bc:	and	r0, r0, r1
   672c0:	and	r0, r0, #128	; 0x80
   672c4:	cmp	r0, #0
   672c8:	beq	672e0 <__assert_fail@plt+0x54728>
   672cc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   672d0:	and	r0, r0, #8
   672d4:	cmp	r0, #0
   672d8:	bne	672e0 <__assert_fail@plt+0x54728>
   672dc:	b	67678 <__assert_fail@plt+0x54ac0>
   672e0:	b	672e4 <__assert_fail@plt+0x5472c>
   672e4:	ldr	r0, [fp, #-4]
   672e8:	ldr	r0, [r0, #108]	; 0x6c
   672ec:	str	r0, [fp, #-36]	; 0xffffffdc
   672f0:	ldr	r0, [fp, #-4]
   672f4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   672f8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   672fc:	bl	67ef0 <__assert_fail@plt+0x55338>
   67300:	str	r0, [fp, #-16]
   67304:	ldr	r0, [fp, #-16]
   67308:	cmp	r0, #0
   6730c:	beq	67314 <__assert_fail@plt+0x5475c>
   67310:	b	67690 <__assert_fail@plt+0x54ad8>
   67314:	ldr	r0, [fp, #-12]
   67318:	ldr	r0, [r0, #12]
   6731c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   67320:	add	r0, r0, r1, lsl #2
   67324:	ldr	r0, [r0]
   67328:	cmn	r0, #1
   6732c:	beq	67334 <__assert_fail@plt+0x5477c>
   67330:	b	67334 <__assert_fail@plt+0x5477c>
   67334:	b	67338 <__assert_fail@plt+0x54780>
   67338:	ldr	r0, [fp, #-36]	; 0xffffffdc
   6733c:	ldr	r1, [fp, #-4]
   67340:	ldr	r1, [r1, #108]	; 0x6c
   67344:	cmp	r0, r1
   67348:	bge	67674 <__assert_fail@plt+0x54abc>
   6734c:	ldr	r0, [fp, #-4]
   67350:	ldr	r0, [r0, #116]	; 0x74
   67354:	ldr	r1, [fp, #-36]	; 0xffffffdc
   67358:	movw	r2, #24
   6735c:	mul	r1, r1, r2
   67360:	add	r0, r0, r1
   67364:	str	r0, [sp, #32]
   67368:	ldr	r0, [sp, #32]
   6736c:	ldr	r0, [r0]
   67370:	ldr	r1, [fp, #-40]	; 0xffffffd8
   67374:	cmp	r0, r1
   67378:	bne	67390 <__assert_fail@plt+0x547d8>
   6737c:	ldr	r0, [sp, #32]
   67380:	ldr	r0, [r0, #4]
   67384:	ldr	r1, [fp, #-24]	; 0xffffffe8
   67388:	cmp	r0, r1
   6738c:	beq	67394 <__assert_fail@plt+0x547dc>
   67390:	b	67664 <__assert_fail@plt+0x54aac>
   67394:	ldr	r0, [sp, #32]
   67398:	ldr	r0, [r0, #12]
   6739c:	ldr	r1, [sp, #32]
   673a0:	ldr	r1, [r1, #8]
   673a4:	sub	r0, r0, r1
   673a8:	str	r0, [sp, #40]	; 0x28
   673ac:	ldr	r0, [sp, #40]	; 0x28
   673b0:	cmp	r0, #0
   673b4:	bne	673f0 <__assert_fail@plt+0x54838>
   673b8:	ldr	r0, [fp, #-12]
   673bc:	ldr	r0, [r0, #24]
   673c0:	ldr	r1, [fp, #-12]
   673c4:	ldr	r1, [r1, #20]
   673c8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   673cc:	movw	r3, #12
   673d0:	mul	r2, r2, r3
   673d4:	add	r1, r1, r2
   673d8:	ldr	r1, [r1, #8]
   673dc:	ldr	r1, [r1]
   673e0:	mul	r1, r1, r3
   673e4:	add	r0, r0, r1
   673e8:	str	r0, [sp, #16]
   673ec:	b	67418 <__assert_fail@plt+0x54860>
   673f0:	ldr	r0, [fp, #-12]
   673f4:	ldr	r1, [r0, #12]
   673f8:	ldr	r0, [r0, #24]
   673fc:	ldr	r2, [fp, #-40]	; 0xffffffd8
   67400:	add	r1, r1, r2, lsl #2
   67404:	ldr	r1, [r1]
   67408:	movw	r2, #12
   6740c:	mul	r1, r1, r2
   67410:	add	r0, r0, r1
   67414:	str	r0, [sp, #16]
   67418:	ldr	r0, [sp, #16]
   6741c:	str	r0, [sp, #44]	; 0x2c
   67420:	ldr	r0, [fp, #-24]	; 0xffffffe8
   67424:	ldr	r1, [sp, #32]
   67428:	ldr	r2, [r1, #8]
   6742c:	ldr	r1, [r1, #12]
   67430:	add	r0, r0, r1
   67434:	sub	r0, r0, r2
   67438:	str	r0, [fp, #-28]	; 0xffffffe4
   6743c:	ldr	r0, [fp, #-4]
   67440:	ldr	r1, [fp, #-28]	; 0xffffffe4
   67444:	sub	r1, r1, #1
   67448:	ldr	r2, [r0, #88]	; 0x58
   6744c:	bl	66c90 <__assert_fail@plt+0x540d8>
   67450:	str	r0, [fp, #-44]	; 0xffffffd4
   67454:	ldr	r0, [fp, #-4]
   67458:	ldr	r0, [r0, #100]	; 0x64
   6745c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   67460:	ldr	r0, [r0, r1, lsl #2]
   67464:	str	r0, [sp, #36]	; 0x24
   67468:	ldr	r0, [fp, #-4]
   6746c:	ldr	r0, [r0, #100]	; 0x64
   67470:	ldr	r1, [fp, #-24]	; 0xffffffe8
   67474:	add	r0, r0, r1, lsl #2
   67478:	ldr	r0, [r0]
   6747c:	movw	r1, #0
   67480:	cmp	r0, r1
   67484:	bne	67494 <__assert_fail@plt+0x548dc>
   67488:	movw	r0, #0
   6748c:	str	r0, [sp, #12]
   67490:	b	674b0 <__assert_fail@plt+0x548f8>
   67494:	ldr	r0, [fp, #-4]
   67498:	ldr	r0, [r0, #100]	; 0x64
   6749c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   674a0:	add	r0, r0, r1, lsl #2
   674a4:	ldr	r0, [r0]
   674a8:	ldr	r0, [r0, #8]
   674ac:	str	r0, [sp, #12]
   674b0:	ldr	r0, [sp, #12]
   674b4:	str	r0, [fp, #-32]	; 0xffffffe0
   674b8:	ldr	r0, [sp, #36]	; 0x24
   674bc:	movw	r1, #0
   674c0:	cmp	r0, r1
   674c4:	bne	6753c <__assert_fail@plt+0x54984>
   674c8:	ldr	r1, [fp, #-12]
   674cc:	ldr	r2, [sp, #44]	; 0x2c
   674d0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   674d4:	sub	r0, fp, #16
   674d8:	bl	64440 <__assert_fail@plt+0x51888>
   674dc:	ldr	r1, [fp, #-4]
   674e0:	ldr	r1, [r1, #100]	; 0x64
   674e4:	ldr	r2, [fp, #-28]	; 0xffffffe4
   674e8:	str	r0, [r1, r2, lsl #2]
   674ec:	ldr	r0, [fp, #-4]
   674f0:	ldr	r0, [r0, #100]	; 0x64
   674f4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   674f8:	add	r0, r0, r1, lsl #2
   674fc:	ldr	r0, [r0]
   67500:	movw	r1, #0
   67504:	cmp	r0, r1
   67508:	movw	r0, #0
   6750c:	str	r0, [sp, #8]
   67510:	bne	67528 <__assert_fail@plt+0x54970>
   67514:	ldr	r0, [fp, #-16]
   67518:	cmp	r0, #0
   6751c:	movw	r0, #0
   67520:	movne	r0, #1
   67524:	str	r0, [sp, #8]
   67528:	ldr	r0, [sp, #8]
   6752c:	tst	r0, #1
   67530:	beq	67538 <__assert_fail@plt+0x54980>
   67534:	b	67690 <__assert_fail@plt+0x54ad8>
   67538:	b	675e8 <__assert_fail@plt+0x54a30>
   6753c:	ldr	r0, [sp, #36]	; 0x24
   67540:	ldr	r1, [r0, #40]	; 0x28
   67544:	ldr	r2, [sp, #44]	; 0x2c
   67548:	add	r0, sp, #20
   6754c:	bl	6848c <__assert_fail@plt+0x558d4>
   67550:	str	r0, [fp, #-16]
   67554:	ldr	r0, [fp, #-16]
   67558:	cmp	r0, #0
   6755c:	beq	6756c <__assert_fail@plt+0x549b4>
   67560:	ldr	r0, [sp, #28]
   67564:	bl	50c68 <__assert_fail@plt+0x3e0b0>
   67568:	b	67690 <__assert_fail@plt+0x54ad8>
   6756c:	ldr	r1, [fp, #-12]
   67570:	ldr	r3, [fp, #-44]	; 0xffffffd4
   67574:	sub	r0, fp, #16
   67578:	add	r2, sp, #20
   6757c:	bl	64440 <__assert_fail@plt+0x51888>
   67580:	ldr	r1, [fp, #-4]
   67584:	ldr	r1, [r1, #100]	; 0x64
   67588:	ldr	r2, [fp, #-28]	; 0xffffffe4
   6758c:	str	r0, [r1, r2, lsl #2]
   67590:	ldr	r0, [sp, #28]
   67594:	bl	50c68 <__assert_fail@plt+0x3e0b0>
   67598:	ldr	r0, [fp, #-4]
   6759c:	ldr	r0, [r0, #100]	; 0x64
   675a0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   675a4:	add	r0, r0, r1, lsl #2
   675a8:	ldr	r0, [r0]
   675ac:	movw	r1, #0
   675b0:	cmp	r0, r1
   675b4:	movw	r0, #0
   675b8:	str	r0, [sp, #4]
   675bc:	bne	675d4 <__assert_fail@plt+0x54a1c>
   675c0:	ldr	r0, [fp, #-16]
   675c4:	cmp	r0, #0
   675c8:	movw	r0, #0
   675cc:	movne	r0, #1
   675d0:	str	r0, [sp, #4]
   675d4:	ldr	r0, [sp, #4]
   675d8:	tst	r0, #1
   675dc:	beq	675e4 <__assert_fail@plt+0x54a2c>
   675e0:	b	67690 <__assert_fail@plt+0x54ad8>
   675e4:	b	675e8 <__assert_fail@plt+0x54a30>
   675e8:	ldr	r0, [sp, #40]	; 0x28
   675ec:	cmp	r0, #0
   675f0:	bne	67660 <__assert_fail@plt+0x54aa8>
   675f4:	ldr	r0, [fp, #-4]
   675f8:	ldr	r0, [r0, #100]	; 0x64
   675fc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   67600:	add	r0, r0, r1, lsl #2
   67604:	ldr	r0, [r0]
   67608:	ldr	r0, [r0, #8]
   6760c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   67610:	cmp	r0, r1
   67614:	ble	67660 <__assert_fail@plt+0x54aa8>
   67618:	ldr	r0, [fp, #-4]
   6761c:	ldr	r1, [sp, #44]	; 0x2c
   67620:	ldr	r2, [fp, #-24]	; 0xffffffe8
   67624:	bl	6704c <__assert_fail@plt+0x54494>
   67628:	str	r0, [fp, #-16]
   6762c:	ldr	r0, [fp, #-16]
   67630:	cmp	r0, #0
   67634:	beq	6763c <__assert_fail@plt+0x54a84>
   67638:	b	67690 <__assert_fail@plt+0x54ad8>
   6763c:	ldr	r0, [fp, #-4]
   67640:	ldr	r1, [sp, #44]	; 0x2c
   67644:	bl	67160 <__assert_fail@plt+0x545a8>
   67648:	str	r0, [fp, #-16]
   6764c:	ldr	r0, [fp, #-16]
   67650:	cmp	r0, #0
   67654:	beq	6765c <__assert_fail@plt+0x54aa4>
   67658:	b	67690 <__assert_fail@plt+0x54ad8>
   6765c:	b	67660 <__assert_fail@plt+0x54aa8>
   67660:	b	67664 <__assert_fail@plt+0x54aac>
   67664:	ldr	r0, [fp, #-36]	; 0xffffffdc
   67668:	add	r0, r0, #1
   6766c:	str	r0, [fp, #-36]	; 0xffffffdc
   67670:	b	67338 <__assert_fail@plt+0x54780>
   67674:	b	67678 <__assert_fail@plt+0x54ac0>
   67678:	ldr	r0, [fp, #-20]	; 0xffffffec
   6767c:	add	r0, r0, #1
   67680:	str	r0, [fp, #-20]	; 0xffffffec
   67684:	b	67194 <__assert_fail@plt+0x545dc>
   67688:	movw	r0, #0
   6768c:	str	r0, [fp, #-16]
   67690:	ldr	r0, [fp, #-16]
   67694:	mov	sp, fp
   67698:	pop	{fp, pc}
   6769c:	push	{fp, lr}
   676a0:	mov	fp, sp
   676a4:	sub	sp, sp, #48	; 0x30
   676a8:	ldr	r2, [pc, #512]	; 678b0 <__assert_fail@plt+0x54cf8>
   676ac:	str	r0, [fp, #-8]
   676b0:	str	r1, [fp, #-12]
   676b4:	ldr	r0, [fp, #-8]
   676b8:	str	r0, [fp, #-20]	; 0xffffffec
   676bc:	ldr	r0, [fp, #-20]	; 0xffffffec
   676c0:	ldr	r0, [r0, #36]	; 0x24
   676c4:	cmp	r2, r0
   676c8:	bhi	676d8 <__assert_fail@plt+0x54b20>
   676cc:	movw	r0, #12
   676d0:	str	r0, [fp, #-4]
   676d4:	b	678a4 <__assert_fail@plt+0x54cec>
   676d8:	ldr	r0, [fp, #-20]	; 0xffffffec
   676dc:	ldr	r1, [fp, #-12]
   676e0:	ldr	r2, [r0, #36]	; 0x24
   676e4:	ldr	r3, [r0, #48]	; 0x30
   676e8:	lsl	r2, r2, #1
   676ec:	cmp	r3, r2
   676f0:	str	r0, [sp, #20]
   676f4:	str	r1, [sp, #16]
   676f8:	bge	6770c <__assert_fail@plt+0x54b54>
   676fc:	ldr	r0, [fp, #-20]	; 0xffffffec
   67700:	ldr	r0, [r0, #48]	; 0x30
   67704:	str	r0, [sp, #12]
   67708:	b	6771c <__assert_fail@plt+0x54b64>
   6770c:	ldr	r0, [fp, #-20]	; 0xffffffec
   67710:	ldr	r0, [r0, #36]	; 0x24
   67714:	lsl	r0, r0, #1
   67718:	str	r0, [sp, #12]
   6771c:	ldr	r0, [sp, #12]
   67720:	ldr	r1, [sp, #16]
   67724:	cmp	r1, r0
   67728:	bge	67770 <__assert_fail@plt+0x54bb8>
   6772c:	ldr	r0, [fp, #-20]	; 0xffffffec
   67730:	ldr	r1, [r0, #36]	; 0x24
   67734:	ldr	r0, [r0, #48]	; 0x30
   67738:	lsl	r1, r1, #1
   6773c:	cmp	r0, r1
   67740:	bge	67754 <__assert_fail@plt+0x54b9c>
   67744:	ldr	r0, [fp, #-20]	; 0xffffffec
   67748:	ldr	r0, [r0, #48]	; 0x30
   6774c:	str	r0, [sp, #8]
   67750:	b	67764 <__assert_fail@plt+0x54bac>
   67754:	ldr	r0, [fp, #-20]	; 0xffffffec
   67758:	ldr	r0, [r0, #36]	; 0x24
   6775c:	lsl	r0, r0, #1
   67760:	str	r0, [sp, #8]
   67764:	ldr	r0, [sp, #8]
   67768:	str	r0, [sp, #4]
   6776c:	b	67778 <__assert_fail@plt+0x54bc0>
   67770:	ldr	r0, [fp, #-12]
   67774:	str	r0, [sp, #4]
   67778:	ldr	r0, [sp, #4]
   6777c:	ldr	r1, [sp, #20]
   67780:	str	r0, [sp]
   67784:	mov	r0, r1
   67788:	ldr	r1, [sp]
   6778c:	bl	5b348 <__assert_fail@plt+0x48790>
   67790:	str	r0, [fp, #-16]
   67794:	ldr	r0, [fp, #-16]
   67798:	cmp	r0, #0
   6779c:	beq	677ac <__assert_fail@plt+0x54bf4>
   677a0:	ldr	r0, [fp, #-16]
   677a4:	str	r0, [fp, #-4]
   677a8:	b	678a4 <__assert_fail@plt+0x54cec>
   677ac:	ldr	r0, [fp, #-8]
   677b0:	ldr	r0, [r0, #100]	; 0x64
   677b4:	movw	r1, #0
   677b8:	cmp	r0, r1
   677bc:	beq	67808 <__assert_fail@plt+0x54c50>
   677c0:	ldr	r0, [fp, #-8]
   677c4:	ldr	r0, [r0, #100]	; 0x64
   677c8:	ldr	r1, [fp, #-20]	; 0xffffffec
   677cc:	ldr	r1, [r1, #36]	; 0x24
   677d0:	add	r1, r1, #1
   677d4:	lsl	r1, r1, #2
   677d8:	bl	55a84 <__assert_fail@plt+0x42ecc>
   677dc:	str	r0, [sp, #24]
   677e0:	ldr	r0, [sp, #24]
   677e4:	movw	r1, #0
   677e8:	cmp	r0, r1
   677ec:	bne	677fc <__assert_fail@plt+0x54c44>
   677f0:	movw	r0, #12
   677f4:	str	r0, [fp, #-4]
   677f8:	b	678a4 <__assert_fail@plt+0x54cec>
   677fc:	ldr	r0, [sp, #24]
   67800:	ldr	r1, [fp, #-8]
   67804:	str	r0, [r1, #100]	; 0x64
   67808:	ldr	r0, [fp, #-20]	; 0xffffffec
   6780c:	ldrsb	r0, [r0, #72]	; 0x48
   67810:	cmp	r0, #0
   67814:	beq	6785c <__assert_fail@plt+0x54ca4>
   67818:	ldr	r0, [fp, #-20]	; 0xffffffec
   6781c:	ldr	r0, [r0, #80]	; 0x50
   67820:	cmp	r0, #1
   67824:	ble	67850 <__assert_fail@plt+0x54c98>
   67828:	ldr	r0, [fp, #-20]	; 0xffffffec
   6782c:	bl	5b4a0 <__assert_fail@plt+0x488e8>
   67830:	str	r0, [fp, #-16]
   67834:	ldr	r0, [fp, #-16]
   67838:	cmp	r0, #0
   6783c:	beq	6784c <__assert_fail@plt+0x54c94>
   67840:	ldr	r0, [fp, #-16]
   67844:	str	r0, [fp, #-4]
   67848:	b	678a4 <__assert_fail@plt+0x54cec>
   6784c:	b	67858 <__assert_fail@plt+0x54ca0>
   67850:	ldr	r0, [fp, #-20]	; 0xffffffec
   67854:	bl	5bf4c <__assert_fail@plt+0x49394>
   67858:	b	6789c <__assert_fail@plt+0x54ce4>
   6785c:	ldr	r0, [fp, #-20]	; 0xffffffec
   67860:	ldr	r0, [r0, #80]	; 0x50
   67864:	cmp	r0, #1
   67868:	ble	67878 <__assert_fail@plt+0x54cc0>
   6786c:	ldr	r0, [fp, #-20]	; 0xffffffec
   67870:	bl	5c050 <__assert_fail@plt+0x49498>
   67874:	b	67898 <__assert_fail@plt+0x54ce0>
   67878:	ldr	r0, [fp, #-20]	; 0xffffffec
   6787c:	ldr	r0, [r0, #64]	; 0x40
   67880:	movw	r1, #0
   67884:	cmp	r0, r1
   67888:	beq	67894 <__assert_fail@plt+0x54cdc>
   6788c:	ldr	r0, [fp, #-20]	; 0xffffffec
   67890:	bl	5c390 <__assert_fail@plt+0x497d8>
   67894:	b	67898 <__assert_fail@plt+0x54ce0>
   67898:	b	6789c <__assert_fail@plt+0x54ce4>
   6789c:	movw	r0, #0
   678a0:	str	r0, [fp, #-4]
   678a4:	ldr	r0, [fp, #-4]
   678a8:	mov	sp, fp
   678ac:	pop	{fp, pc}
   678b0:	svcne	0x00ffffff
   678b4:	push	{fp, lr}
   678b8:	mov	fp, sp
   678bc:	sub	sp, sp, #40	; 0x28
   678c0:	str	r0, [fp, #-8]
   678c4:	str	r1, [fp, #-12]
   678c8:	str	r2, [fp, #-16]
   678cc:	ldr	r0, [fp, #-16]
   678d0:	ldrb	r0, [r0, #52]	; 0x34
   678d4:	ubfx	r0, r0, #5, #1
   678d8:	and	r0, r0, #255	; 0xff
   678dc:	cmp	r0, #0
   678e0:	beq	67918 <__assert_fail@plt+0x54d60>
   678e4:	ldr	r0, [fp, #-12]
   678e8:	ldr	r1, [fp, #-16]
   678ec:	bl	6ac50 <__assert_fail@plt+0x58098>
   678f0:	ldr	r1, [fp, #-8]
   678f4:	str	r0, [r1]
   678f8:	ldr	r0, [fp, #-8]
   678fc:	ldr	r0, [r0]
   67900:	cmp	r0, #0
   67904:	beq	67914 <__assert_fail@plt+0x54d5c>
   67908:	movw	r0, #0
   6790c:	str	r0, [fp, #-4]
   67910:	b	67a34 <__assert_fail@plt+0x54e7c>
   67914:	b	67918 <__assert_fail@plt+0x54d60>
   67918:	ldr	r0, [fp, #-12]
   6791c:	ldr	r0, [r0, #4]
   67920:	ldr	r1, [fp, #-12]
   67924:	ldr	r2, [r1, #40]	; 0x28
   67928:	add	r3, r2, #1
   6792c:	str	r3, [r1, #40]	; 0x28
   67930:	add	r0, r0, r2
   67934:	ldrb	r0, [r0]
   67938:	strb	r0, [sp, #19]
   6793c:	ldr	r0, [fp, #-16]
   67940:	ldr	r0, [r0, #44]	; 0x2c
   67944:	str	r0, [sp, #20]
   67948:	ldr	r0, [sp, #20]
   6794c:	movw	r1, #0
   67950:	cmp	r0, r1
   67954:	beq	67978 <__assert_fail@plt+0x54dc0>
   67958:	ldr	r0, [sp, #20]
   6795c:	ldrb	r1, [sp, #19]
   67960:	mov	r2, r1
   67964:	add	r0, r0, r1, lsl #2
   67968:	ldr	r0, [r0]
   6796c:	str	r0, [fp, #-4]
   67970:	str	r2, [sp, #8]
   67974:	b	67a34 <__assert_fail@plt+0x54e7c>
   67978:	ldr	r0, [fp, #-16]
   6797c:	ldr	r0, [r0, #48]	; 0x30
   67980:	str	r0, [sp, #20]
   67984:	ldr	r0, [sp, #20]
   67988:	movw	r1, #0
   6798c:	cmp	r0, r1
   67990:	beq	67a00 <__assert_fail@plt+0x54e48>
   67994:	ldr	r0, [fp, #-12]
   67998:	ldr	r1, [fp, #-12]
   6799c:	ldr	r1, [r1, #40]	; 0x28
   679a0:	sub	r1, r1, #1
   679a4:	ldr	r2, [fp, #-12]
   679a8:	ldr	r2, [r2, #88]	; 0x58
   679ac:	bl	66c90 <__assert_fail@plt+0x540d8>
   679b0:	str	r0, [sp, #12]
   679b4:	ldr	r0, [sp, #12]
   679b8:	and	r0, r0, #1
   679bc:	cmp	r0, #0
   679c0:	beq	679e0 <__assert_fail@plt+0x54e28>
   679c4:	ldr	r0, [sp, #20]
   679c8:	ldrb	r1, [sp, #19]
   679cc:	orr	r1, r1, #256	; 0x100
   679d0:	add	r0, r0, r1, lsl #2
   679d4:	ldr	r0, [r0]
   679d8:	str	r0, [fp, #-4]
   679dc:	b	67a34 <__assert_fail@plt+0x54e7c>
   679e0:	ldr	r0, [sp, #20]
   679e4:	ldrb	r1, [sp, #19]
   679e8:	mov	r2, r1
   679ec:	add	r0, r0, r1, lsl #2
   679f0:	ldr	r0, [r0]
   679f4:	str	r0, [fp, #-4]
   679f8:	str	r2, [sp, #4]
   679fc:	b	67a34 <__assert_fail@plt+0x54e7c>
   67a00:	ldr	r0, [fp, #-12]
   67a04:	ldr	r0, [r0, #84]	; 0x54
   67a08:	ldr	r1, [fp, #-16]
   67a0c:	bl	6b02c <__assert_fail@plt+0x58474>
   67a10:	tst	r0, #1
   67a14:	bne	67a30 <__assert_fail@plt+0x54e78>
   67a18:	ldr	r0, [fp, #-8]
   67a1c:	movw	r1, #12
   67a20:	str	r1, [r0]
   67a24:	movw	r0, #0
   67a28:	str	r0, [fp, #-4]
   67a2c:	b	67a34 <__assert_fail@plt+0x54e7c>
   67a30:	b	6793c <__assert_fail@plt+0x54d84>
   67a34:	ldr	r0, [fp, #-4]
   67a38:	mov	sp, fp
   67a3c:	pop	{fp, pc}
   67a40:	push	{fp, lr}
   67a44:	mov	fp, sp
   67a48:	sub	sp, sp, #56	; 0x38
   67a4c:	str	r0, [fp, #-8]
   67a50:	str	r1, [fp, #-12]
   67a54:	str	r2, [fp, #-16]
   67a58:	ldr	r0, [fp, #-12]
   67a5c:	ldr	r0, [r0, #84]	; 0x54
   67a60:	str	r0, [fp, #-20]	; 0xffffffec
   67a64:	ldr	r0, [fp, #-12]
   67a68:	ldr	r0, [r0, #40]	; 0x28
   67a6c:	str	r0, [fp, #-24]	; 0xffffffe8
   67a70:	ldr	r0, [fp, #-24]	; 0xffffffe8
   67a74:	ldr	r1, [fp, #-12]
   67a78:	ldr	r1, [r1, #104]	; 0x68
   67a7c:	cmp	r0, r1
   67a80:	ble	67aac <__assert_fail@plt+0x54ef4>
   67a84:	ldr	r0, [fp, #-16]
   67a88:	ldr	r1, [fp, #-12]
   67a8c:	ldr	r1, [r1, #100]	; 0x64
   67a90:	ldr	r2, [fp, #-24]	; 0xffffffe8
   67a94:	add	r1, r1, r2, lsl #2
   67a98:	str	r0, [r1]
   67a9c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   67aa0:	ldr	r1, [fp, #-12]
   67aa4:	str	r0, [r1, #104]	; 0x68
   67aa8:	b	67be8 <__assert_fail@plt+0x55030>
   67aac:	ldr	r0, [fp, #-12]
   67ab0:	ldr	r0, [r0, #100]	; 0x64
   67ab4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   67ab8:	add	r0, r0, r1, lsl #2
   67abc:	ldr	r0, [r0]
   67ac0:	movw	r1, #0
   67ac4:	cmp	r0, r1
   67ac8:	bne	67ae8 <__assert_fail@plt+0x54f30>
   67acc:	ldr	r0, [fp, #-16]
   67ad0:	ldr	r1, [fp, #-12]
   67ad4:	ldr	r1, [r1, #100]	; 0x64
   67ad8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   67adc:	add	r1, r1, r2, lsl #2
   67ae0:	str	r0, [r1]
   67ae4:	b	67be4 <__assert_fail@plt+0x5502c>
   67ae8:	mov	r0, #0
   67aec:	str	r0, [sp, #4]
   67af0:	ldr	r0, [fp, #-12]
   67af4:	ldr	r0, [r0, #100]	; 0x64
   67af8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   67afc:	add	r0, r0, r1, lsl #2
   67b00:	ldr	r0, [r0]
   67b04:	str	r0, [sp, #28]
   67b08:	ldr	r0, [sp, #28]
   67b0c:	ldr	r0, [r0, #40]	; 0x28
   67b10:	str	r0, [sp, #8]
   67b14:	ldr	r0, [fp, #-16]
   67b18:	movw	r1, #0
   67b1c:	cmp	r0, r1
   67b20:	beq	67b68 <__assert_fail@plt+0x54fb0>
   67b24:	ldr	r0, [fp, #-16]
   67b28:	ldr	r0, [r0, #40]	; 0x28
   67b2c:	str	r0, [sp, #4]
   67b30:	ldr	r1, [sp, #4]
   67b34:	ldr	r2, [sp, #8]
   67b38:	add	r0, sp, #12
   67b3c:	bl	6848c <__assert_fail@plt+0x558d4>
   67b40:	ldr	r1, [fp, #-8]
   67b44:	str	r0, [r1]
   67b48:	ldr	r0, [fp, #-8]
   67b4c:	ldr	r0, [r0]
   67b50:	cmp	r0, #0
   67b54:	beq	67b64 <__assert_fail@plt+0x54fac>
   67b58:	movw	r0, #0
   67b5c:	str	r0, [fp, #-4]
   67b60:	b	67cb0 <__assert_fail@plt+0x550f8>
   67b64:	b	67b84 <__assert_fail@plt+0x54fcc>
   67b68:	ldr	r0, [sp, #8]
   67b6c:	ldr	r1, [r0]
   67b70:	str	r1, [sp, #12]
   67b74:	ldr	r1, [r0, #4]
   67b78:	str	r1, [sp, #16]
   67b7c:	ldr	r0, [r0, #8]
   67b80:	str	r0, [sp, #20]
   67b84:	ldr	r0, [fp, #-12]
   67b88:	ldr	r1, [r0, #40]	; 0x28
   67b8c:	ldr	r2, [r0, #88]	; 0x58
   67b90:	sub	r1, r1, #1
   67b94:	bl	66c90 <__assert_fail@plt+0x540d8>
   67b98:	str	r0, [sp, #24]
   67b9c:	ldr	r0, [fp, #-8]
   67ba0:	ldr	r1, [fp, #-20]	; 0xffffffec
   67ba4:	ldr	r3, [sp, #24]
   67ba8:	add	r2, sp, #12
   67bac:	bl	64440 <__assert_fail@plt+0x51888>
   67bb0:	ldr	r1, [fp, #-12]
   67bb4:	ldr	r1, [r1, #100]	; 0x64
   67bb8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   67bbc:	add	r1, r1, r2, lsl #2
   67bc0:	str	r0, [r1]
   67bc4:	str	r0, [fp, #-16]
   67bc8:	ldr	r0, [sp, #4]
   67bcc:	movw	r1, #0
   67bd0:	cmp	r0, r1
   67bd4:	beq	67be0 <__assert_fail@plt+0x55028>
   67bd8:	ldr	r0, [sp, #20]
   67bdc:	bl	50c68 <__assert_fail@plt+0x3e0b0>
   67be0:	b	67be4 <__assert_fail@plt+0x5502c>
   67be4:	b	67be8 <__assert_fail@plt+0x55030>
   67be8:	ldr	r0, [fp, #-20]	; 0xffffffec
   67bec:	ldr	r0, [r0, #76]	; 0x4c
   67bf0:	cmp	r0, #0
   67bf4:	beq	67ca8 <__assert_fail@plt+0x550f0>
   67bf8:	ldr	r0, [fp, #-16]
   67bfc:	movw	r1, #0
   67c00:	cmp	r0, r1
   67c04:	beq	67ca8 <__assert_fail@plt+0x550f0>
   67c08:	ldr	r0, [fp, #-12]
   67c0c:	ldr	r1, [fp, #-16]
   67c10:	add	r1, r1, #4
   67c14:	ldr	r2, [fp, #-24]	; 0xffffffe8
   67c18:	bl	6704c <__assert_fail@plt+0x54494>
   67c1c:	ldr	r1, [fp, #-8]
   67c20:	str	r0, [r1]
   67c24:	ldr	r0, [fp, #-8]
   67c28:	ldr	r0, [r0]
   67c2c:	cmp	r0, #0
   67c30:	beq	67c40 <__assert_fail@plt+0x55088>
   67c34:	movw	r0, #0
   67c38:	str	r0, [fp, #-4]
   67c3c:	b	67cb0 <__assert_fail@plt+0x550f8>
   67c40:	ldr	r0, [fp, #-16]
   67c44:	ldrb	r0, [r0, #52]	; 0x34
   67c48:	ubfx	r0, r0, #6, #1
   67c4c:	and	r0, r0, #255	; 0xff
   67c50:	cmp	r0, #0
   67c54:	beq	67ca4 <__assert_fail@plt+0x550ec>
   67c58:	ldr	r0, [fp, #-12]
   67c5c:	ldr	r1, [fp, #-16]
   67c60:	add	r1, r1, #4
   67c64:	bl	67160 <__assert_fail@plt+0x545a8>
   67c68:	ldr	r1, [fp, #-8]
   67c6c:	str	r0, [r1]
   67c70:	ldr	r0, [fp, #-8]
   67c74:	ldr	r0, [r0]
   67c78:	cmp	r0, #0
   67c7c:	beq	67c8c <__assert_fail@plt+0x550d4>
   67c80:	movw	r0, #0
   67c84:	str	r0, [fp, #-4]
   67c88:	b	67cb0 <__assert_fail@plt+0x550f8>
   67c8c:	ldr	r0, [fp, #-12]
   67c90:	ldr	r0, [r0, #100]	; 0x64
   67c94:	ldr	r1, [fp, #-24]	; 0xffffffe8
   67c98:	add	r0, r0, r1, lsl #2
   67c9c:	ldr	r0, [r0]
   67ca0:	str	r0, [fp, #-16]
   67ca4:	b	67ca8 <__assert_fail@plt+0x550f0>
   67ca8:	ldr	r0, [fp, #-16]
   67cac:	str	r0, [fp, #-4]
   67cb0:	ldr	r0, [fp, #-4]
   67cb4:	mov	sp, fp
   67cb8:	pop	{fp, pc}
   67cbc:	push	{fp, lr}
   67cc0:	mov	fp, sp
   67cc4:	sub	sp, sp, #32
   67cc8:	str	r0, [fp, #-8]
   67ccc:	str	r1, [fp, #-12]
   67cd0:	ldr	r0, [fp, #-12]
   67cd4:	ldr	r0, [r0, #104]	; 0x68
   67cd8:	str	r0, [sp, #12]
   67cdc:	ldr	r0, [fp, #-12]
   67ce0:	ldr	r0, [r0, #40]	; 0x28
   67ce4:	str	r0, [sp, #8]
   67ce8:	ldr	r0, [sp, #8]
   67cec:	add	r0, r0, #1
   67cf0:	str	r0, [sp, #8]
   67cf4:	ldr	r1, [sp, #12]
   67cf8:	cmp	r0, r1
   67cfc:	ble	67d0c <__assert_fail@plt+0x55154>
   67d00:	movw	r0, #0
   67d04:	str	r0, [fp, #-4]
   67d08:	b	67d94 <__assert_fail@plt+0x551dc>
   67d0c:	ldr	r0, [fp, #-12]
   67d10:	ldr	r1, [r0, #40]	; 0x28
   67d14:	add	r1, r1, #1
   67d18:	str	r1, [r0, #40]	; 0x28
   67d1c:	ldr	r0, [fp, #-12]
   67d20:	ldr	r0, [r0, #100]	; 0x64
   67d24:	ldr	r1, [sp, #8]
   67d28:	add	r0, r0, r1, lsl #2
   67d2c:	ldr	r0, [r0]
   67d30:	movw	r1, #0
   67d34:	cmp	r0, r1
   67d38:	beq	67ce8 <__assert_fail@plt+0x55130>
   67d3c:	ldr	r0, [fp, #-8]
   67d40:	ldr	r1, [fp, #-12]
   67d44:	movw	r2, #0
   67d48:	bl	67a40 <__assert_fail@plt+0x54e88>
   67d4c:	str	r0, [sp, #16]
   67d50:	ldr	r0, [fp, #-8]
   67d54:	ldr	r0, [r0]
   67d58:	cmp	r0, #0
   67d5c:	movw	r0, #0
   67d60:	str	r0, [sp, #4]
   67d64:	bne	67d80 <__assert_fail@plt+0x551c8>
   67d68:	ldr	r0, [sp, #16]
   67d6c:	movw	r1, #0
   67d70:	cmp	r0, r1
   67d74:	movw	r0, #0
   67d78:	moveq	r0, #1
   67d7c:	str	r0, [sp, #4]
   67d80:	ldr	r0, [sp, #4]
   67d84:	tst	r0, #1
   67d88:	bne	67cd0 <__assert_fail@plt+0x55118>
   67d8c:	ldr	r0, [sp, #16]
   67d90:	str	r0, [fp, #-4]
   67d94:	ldr	r0, [fp, #-4]
   67d98:	mov	sp, fp
   67d9c:	pop	{fp, pc}
   67da0:	push	{fp, lr}
   67da4:	mov	fp, sp
   67da8:	sub	sp, sp, #24
   67dac:	str	r0, [fp, #-8]
   67db0:	str	r1, [sp, #12]
   67db4:	str	r2, [sp, #8]
   67db8:	ldr	r0, [fp, #-8]
   67dbc:	ldr	r0, [r0, #132]	; 0x84
   67dc0:	movw	r1, #0
   67dc4:	cmp	r0, r1
   67dc8:	beq	67dd0 <__assert_fail@plt+0x55218>
   67dcc:	b	67dd0 <__assert_fail@plt+0x55218>
   67dd0:	ldr	r0, [fp, #-8]
   67dd4:	ldr	r0, [r0, #128]	; 0x80
   67dd8:	cmp	r0, #0
   67ddc:	ble	67de4 <__assert_fail@plt+0x5522c>
   67de0:	b	67de4 <__assert_fail@plt+0x5522c>
   67de4:	ldr	r0, [fp, #-8]
   67de8:	ldr	r0, [r0, #124]	; 0x7c
   67dec:	ldr	r1, [fp, #-8]
   67df0:	ldr	r1, [r1, #128]	; 0x80
   67df4:	cmp	r0, r1
   67df8:	bne	67e58 <__assert_fail@plt+0x552a0>
   67dfc:	ldr	r0, [fp, #-8]
   67e00:	ldr	r0, [r0, #128]	; 0x80
   67e04:	lsl	r0, r0, #1
   67e08:	str	r0, [sp, #4]
   67e0c:	ldr	r0, [fp, #-8]
   67e10:	ldr	r0, [r0, #132]	; 0x84
   67e14:	ldr	r1, [sp, #4]
   67e18:	lsl	r1, r1, #2
   67e1c:	bl	55a84 <__assert_fail@plt+0x42ecc>
   67e20:	str	r0, [sp]
   67e24:	ldr	r0, [sp]
   67e28:	movw	r1, #0
   67e2c:	cmp	r0, r1
   67e30:	bne	67e40 <__assert_fail@plt+0x55288>
   67e34:	movw	r0, #12
   67e38:	str	r0, [fp, #-4]
   67e3c:	b	67ee4 <__assert_fail@plt+0x5532c>
   67e40:	ldr	r0, [sp]
   67e44:	ldr	r1, [fp, #-8]
   67e48:	str	r0, [r1, #132]	; 0x84
   67e4c:	ldr	r0, [sp, #4]
   67e50:	ldr	r1, [fp, #-8]
   67e54:	str	r0, [r1, #128]	; 0x80
   67e58:	mov	r0, #1
   67e5c:	mov	r1, #24
   67e60:	bl	50240 <__assert_fail@plt+0x3d688>
   67e64:	ldr	r1, [fp, #-8]
   67e68:	ldr	lr, [r1, #124]	; 0x7c
   67e6c:	ldr	r1, [r1, #132]	; 0x84
   67e70:	str	r0, [r1, lr, lsl #2]
   67e74:	ldr	r0, [fp, #-8]
   67e78:	ldr	r1, [r0, #124]	; 0x7c
   67e7c:	ldr	r0, [r0, #132]	; 0x84
   67e80:	add	r0, r0, r1, lsl #2
   67e84:	ldr	r0, [r0]
   67e88:	movw	r1, #0
   67e8c:	cmp	r0, r1
   67e90:	bne	67ea0 <__assert_fail@plt+0x552e8>
   67e94:	movw	r0, #12
   67e98:	str	r0, [fp, #-4]
   67e9c:	b	67ee4 <__assert_fail@plt+0x5532c>
   67ea0:	ldr	r0, [sp, #12]
   67ea4:	ldr	r1, [fp, #-8]
   67ea8:	ldr	r2, [r1, #124]	; 0x7c
   67eac:	ldr	r1, [r1, #132]	; 0x84
   67eb0:	ldr	r1, [r1, r2, lsl #2]
   67eb4:	str	r0, [r1, #4]
   67eb8:	ldr	r0, [sp, #8]
   67ebc:	ldr	r1, [fp, #-8]
   67ec0:	ldr	r2, [r1, #124]	; 0x7c
   67ec4:	ldr	r3, [r1, #132]	; 0x84
   67ec8:	add	ip, r2, #1
   67ecc:	str	ip, [r1, #124]	; 0x7c
   67ed0:	add	r1, r3, r2, lsl #2
   67ed4:	ldr	r1, [r1]
   67ed8:	str	r0, [r1]
   67edc:	movw	r0, #0
   67ee0:	str	r0, [fp, #-4]
   67ee4:	ldr	r0, [fp, #-4]
   67ee8:	mov	sp, fp
   67eec:	pop	{fp, pc}
   67ef0:	push	{fp, lr}
   67ef4:	mov	fp, sp
   67ef8:	sub	sp, sp, #96	; 0x60
   67efc:	str	r0, [fp, #-8]
   67f00:	str	r1, [fp, #-12]
   67f04:	str	r2, [fp, #-16]
   67f08:	ldr	r0, [fp, #-8]
   67f0c:	ldr	r0, [r0, #84]	; 0x54
   67f10:	str	r0, [fp, #-20]	; 0xffffffec
   67f14:	ldr	r0, [fp, #-8]
   67f18:	ldr	r0, [r0, #4]
   67f1c:	str	r0, [fp, #-32]	; 0xffffffe0
   67f20:	ldr	r0, [fp, #-8]
   67f24:	ldr	r1, [fp, #-16]
   67f28:	bl	687d8 <__assert_fail@plt+0x55c20>
   67f2c:	str	r0, [fp, #-36]	; 0xffffffdc
   67f30:	ldr	r0, [fp, #-36]	; 0xffffffdc
   67f34:	cmn	r0, #1
   67f38:	beq	67f98 <__assert_fail@plt+0x553e0>
   67f3c:	ldr	r0, [fp, #-8]
   67f40:	ldr	r0, [r0, #116]	; 0x74
   67f44:	ldr	r1, [fp, #-36]	; 0xffffffdc
   67f48:	movw	r2, #24
   67f4c:	mul	r1, r1, r2
   67f50:	add	r0, r0, r1
   67f54:	str	r0, [fp, #-40]	; 0xffffffd8
   67f58:	ldr	r0, [fp, #-40]	; 0xffffffd8
   67f5c:	ldr	r0, [r0]
   67f60:	ldr	r1, [fp, #-12]
   67f64:	cmp	r0, r1
   67f68:	bne	67f78 <__assert_fail@plt+0x553c0>
   67f6c:	movw	r0, #0
   67f70:	str	r0, [fp, #-4]
   67f74:	b	68480 <__assert_fail@plt+0x558c8>
   67f78:	b	67f7c <__assert_fail@plt+0x553c4>
   67f7c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   67f80:	add	r1, r0, #24
   67f84:	str	r1, [fp, #-40]	; 0xffffffd8
   67f88:	ldrsb	r0, [r0, #20]
   67f8c:	cmp	r0, #0
   67f90:	bne	67f58 <__assert_fail@plt+0x553a0>
   67f94:	b	67f98 <__assert_fail@plt+0x553e0>
   67f98:	ldr	r0, [fp, #-20]	; 0xffffffec
   67f9c:	ldr	r0, [r0]
   67fa0:	ldr	r1, [fp, #-12]
   67fa4:	add	r0, r0, r1, lsl #3
   67fa8:	ldr	r0, [r0]
   67fac:	str	r0, [fp, #-24]	; 0xffffffe8
   67fb0:	movw	r0, #0
   67fb4:	str	r0, [fp, #-28]	; 0xffffffe4
   67fb8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   67fbc:	ldr	r1, [fp, #-8]
   67fc0:	ldr	r1, [r1, #124]	; 0x7c
   67fc4:	cmp	r0, r1
   67fc8:	bge	68478 <__assert_fail@plt+0x558c0>
   67fcc:	ldr	r0, [fp, #-8]
   67fd0:	ldr	r0, [r0, #132]	; 0x84
   67fd4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   67fd8:	ldr	r0, [r0, r1, lsl #2]
   67fdc:	str	r0, [sp, #48]	; 0x30
   67fe0:	ldr	r0, [fp, #-20]	; 0xffffffec
   67fe4:	ldr	r0, [r0]
   67fe8:	ldr	r1, [sp, #48]	; 0x30
   67fec:	ldr	r1, [r1, #4]
   67ff0:	add	r0, r0, r1, lsl #3
   67ff4:	ldr	r0, [r0]
   67ff8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   67ffc:	cmp	r0, r1
   68000:	beq	68008 <__assert_fail@plt+0x55450>
   68004:	b	68468 <__assert_fail@plt+0x558b0>
   68008:	ldr	r0, [sp, #48]	; 0x30
   6800c:	ldr	r0, [r0]
   68010:	str	r0, [sp, #36]	; 0x24
   68014:	ldr	r0, [fp, #-16]
   68018:	str	r0, [sp, #32]
   6801c:	movw	r0, #0
   68020:	str	r0, [sp, #40]	; 0x28
   68024:	ldr	r0, [sp, #40]	; 0x28
   68028:	ldr	r1, [sp, #48]	; 0x30
   6802c:	ldr	r1, [r1, #16]
   68030:	cmp	r0, r1
   68034:	bge	681a0 <__assert_fail@plt+0x555e8>
   68038:	ldr	r0, [sp, #48]	; 0x30
   6803c:	ldr	r0, [r0, #20]
   68040:	ldr	r1, [sp, #40]	; 0x28
   68044:	add	r0, r0, r1, lsl #2
   68048:	ldr	r0, [r0]
   6804c:	str	r0, [sp, #44]	; 0x2c
   68050:	ldr	r0, [sp, #44]	; 0x2c
   68054:	ldr	r0, [r0, #4]
   68058:	ldr	r1, [sp, #36]	; 0x24
   6805c:	sub	r0, r0, r1
   68060:	str	r0, [sp, #28]
   68064:	ldr	r0, [sp, #28]
   68068:	cmp	r0, #0
   6806c:	ble	68118 <__assert_fail@plt+0x55560>
   68070:	ldr	r0, [sp, #32]
   68074:	ldr	r1, [sp, #28]
   68078:	add	r0, r0, r1
   6807c:	ldr	r1, [fp, #-8]
   68080:	ldr	r1, [r1, #28]
   68084:	cmp	r0, r1
   68088:	ble	680e8 <__assert_fail@plt+0x55530>
   6808c:	ldr	r0, [sp, #32]
   68090:	ldr	r1, [sp, #28]
   68094:	add	r0, r0, r1
   68098:	ldr	r1, [fp, #-8]
   6809c:	ldr	r1, [r1, #48]	; 0x30
   680a0:	cmp	r0, r1
   680a4:	ble	680ac <__assert_fail@plt+0x554f4>
   680a8:	b	681a0 <__assert_fail@plt+0x555e8>
   680ac:	ldr	r0, [fp, #-8]
   680b0:	ldr	r1, [sp, #32]
   680b4:	ldr	r2, [sp, #28]
   680b8:	add	r1, r1, r2
   680bc:	bl	688c0 <__assert_fail@plt+0x55d08>
   680c0:	str	r0, [fp, #-44]	; 0xffffffd4
   680c4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   680c8:	cmp	r0, #0
   680cc:	beq	680dc <__assert_fail@plt+0x55524>
   680d0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   680d4:	str	r0, [fp, #-4]
   680d8:	b	68480 <__assert_fail@plt+0x558c8>
   680dc:	ldr	r0, [fp, #-8]
   680e0:	ldr	r0, [r0, #4]
   680e4:	str	r0, [fp, #-32]	; 0xffffffe0
   680e8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   680ec:	ldr	r1, [sp, #32]
   680f0:	add	r0, r0, r1
   680f4:	ldr	r1, [fp, #-32]	; 0xffffffe0
   680f8:	ldr	r2, [sp, #36]	; 0x24
   680fc:	add	r1, r1, r2
   68100:	ldr	r2, [sp, #28]
   68104:	bl	12624 <memcmp@plt>
   68108:	cmp	r0, #0
   6810c:	beq	68114 <__assert_fail@plt+0x5555c>
   68110:	b	681a0 <__assert_fail@plt+0x555e8>
   68114:	b	68118 <__assert_fail@plt+0x55560>
   68118:	ldr	r0, [sp, #28]
   6811c:	ldr	r1, [sp, #32]
   68120:	add	r0, r1, r0
   68124:	str	r0, [sp, #32]
   68128:	ldr	r0, [sp, #28]
   6812c:	ldr	r1, [sp, #36]	; 0x24
   68130:	add	r0, r1, r0
   68134:	str	r0, [sp, #36]	; 0x24
   68138:	ldr	r0, [fp, #-8]
   6813c:	ldr	r1, [sp, #48]	; 0x30
   68140:	ldr	r2, [sp, #44]	; 0x2c
   68144:	ldr	r3, [fp, #-12]
   68148:	ldr	ip, [fp, #-16]
   6814c:	str	ip, [sp]
   68150:	bl	689dc <__assert_fail@plt+0x55e24>
   68154:	str	r0, [fp, #-44]	; 0xffffffd4
   68158:	ldr	r0, [fp, #-8]
   6815c:	ldr	r0, [r0, #4]
   68160:	str	r0, [fp, #-32]	; 0xffffffe0
   68164:	ldr	r0, [fp, #-44]	; 0xffffffd4
   68168:	cmp	r0, #1
   6816c:	bne	68174 <__assert_fail@plt+0x555bc>
   68170:	b	68190 <__assert_fail@plt+0x555d8>
   68174:	ldr	r0, [fp, #-44]	; 0xffffffd4
   68178:	cmp	r0, #0
   6817c:	beq	6818c <__assert_fail@plt+0x555d4>
   68180:	ldr	r0, [fp, #-44]	; 0xffffffd4
   68184:	str	r0, [fp, #-4]
   68188:	b	68480 <__assert_fail@plt+0x558c8>
   6818c:	b	68190 <__assert_fail@plt+0x555d8>
   68190:	ldr	r0, [sp, #40]	; 0x28
   68194:	add	r0, r0, #1
   68198:	str	r0, [sp, #40]	; 0x28
   6819c:	b	68024 <__assert_fail@plt+0x5546c>
   681a0:	ldr	r0, [sp, #40]	; 0x28
   681a4:	ldr	r1, [sp, #48]	; 0x30
   681a8:	ldr	r1, [r1, #16]
   681ac:	cmp	r0, r1
   681b0:	bge	681b8 <__assert_fail@plt+0x55600>
   681b4:	b	68468 <__assert_fail@plt+0x558b0>
   681b8:	ldr	r0, [sp, #40]	; 0x28
   681bc:	cmp	r0, #0
   681c0:	ble	681d0 <__assert_fail@plt+0x55618>
   681c4:	ldr	r0, [sp, #36]	; 0x24
   681c8:	add	r0, r0, #1
   681cc:	str	r0, [sp, #36]	; 0x24
   681d0:	b	681d4 <__assert_fail@plt+0x5561c>
   681d4:	ldr	r0, [sp, #36]	; 0x24
   681d8:	ldr	r1, [fp, #-16]
   681dc:	cmp	r0, r1
   681e0:	bgt	68464 <__assert_fail@plt+0x558ac>
   681e4:	ldr	r0, [sp, #36]	; 0x24
   681e8:	ldr	r1, [sp, #48]	; 0x30
   681ec:	ldr	r1, [r1]
   681f0:	sub	r0, r0, r1
   681f4:	str	r0, [sp, #20]
   681f8:	ldr	r0, [sp, #20]
   681fc:	cmp	r0, #0
   68200:	ble	682a4 <__assert_fail@plt+0x556ec>
   68204:	ldr	r0, [sp, #32]
   68208:	ldr	r1, [fp, #-8]
   6820c:	ldr	r1, [r1, #28]
   68210:	cmp	r0, r1
   68214:	blt	68268 <__assert_fail@plt+0x556b0>
   68218:	ldr	r0, [sp, #32]
   6821c:	ldr	r1, [fp, #-8]
   68220:	ldr	r1, [r1, #48]	; 0x30
   68224:	cmp	r0, r1
   68228:	blt	68230 <__assert_fail@plt+0x55678>
   6822c:	b	68464 <__assert_fail@plt+0x558ac>
   68230:	ldr	r0, [fp, #-8]
   68234:	ldr	r1, [sp, #32]
   68238:	add	r1, r1, #1
   6823c:	bl	6769c <__assert_fail@plt+0x54ae4>
   68240:	str	r0, [fp, #-44]	; 0xffffffd4
   68244:	ldr	r0, [fp, #-44]	; 0xffffffd4
   68248:	cmp	r0, #0
   6824c:	beq	6825c <__assert_fail@plt+0x556a4>
   68250:	ldr	r0, [fp, #-44]	; 0xffffffd4
   68254:	str	r0, [fp, #-4]
   68258:	b	68480 <__assert_fail@plt+0x558c8>
   6825c:	ldr	r0, [fp, #-8]
   68260:	ldr	r0, [r0, #4]
   68264:	str	r0, [fp, #-32]	; 0xffffffe0
   68268:	ldr	r0, [fp, #-32]	; 0xffffffe0
   6826c:	ldr	r1, [sp, #32]
   68270:	add	r2, r1, #1
   68274:	str	r2, [sp, #32]
   68278:	add	r0, r0, r1
   6827c:	ldrb	r0, [r0]
   68280:	ldr	r1, [fp, #-32]	; 0xffffffe0
   68284:	ldr	r2, [sp, #36]	; 0x24
   68288:	sub	r2, r2, #1
   6828c:	add	r1, r1, r2
   68290:	ldrb	r1, [r1]
   68294:	cmp	r0, r1
   68298:	beq	682a0 <__assert_fail@plt+0x556e8>
   6829c:	b	68464 <__assert_fail@plt+0x558ac>
   682a0:	b	682a4 <__assert_fail@plt+0x556ec>
   682a4:	ldr	r0, [fp, #-8]
   682a8:	ldr	r0, [r0, #100]	; 0x64
   682ac:	ldr	r1, [sp, #36]	; 0x24
   682b0:	add	r0, r0, r1, lsl #2
   682b4:	ldr	r0, [r0]
   682b8:	movw	r1, #0
   682bc:	cmp	r0, r1
   682c0:	bne	682c8 <__assert_fail@plt+0x55710>
   682c4:	b	68454 <__assert_fail@plt+0x5589c>
   682c8:	ldr	r0, [fp, #-8]
   682cc:	ldr	r0, [r0, #100]	; 0x64
   682d0:	ldr	r1, [sp, #36]	; 0x24
   682d4:	add	r0, r0, r1, lsl #2
   682d8:	ldr	r0, [r0]
   682dc:	add	r0, r0, #4
   682e0:	str	r0, [sp, #16]
   682e4:	ldr	r0, [fp, #-20]	; 0xffffffec
   682e8:	ldr	r1, [sp, #16]
   682ec:	ldr	r2, [fp, #-24]	; 0xffffffe8
   682f0:	movw	r3, #9
   682f4:	bl	68ad0 <__assert_fail@plt+0x55f18>
   682f8:	str	r0, [sp, #24]
   682fc:	ldr	r0, [sp, #24]
   68300:	cmn	r0, #1
   68304:	bne	6830c <__assert_fail@plt+0x55754>
   68308:	b	68454 <__assert_fail@plt+0x5589c>
   6830c:	ldr	r0, [sp, #48]	; 0x30
   68310:	ldr	r0, [r0, #8]
   68314:	movw	r1, #0
   68318:	cmp	r0, r1
   6831c:	bne	68368 <__assert_fail@plt+0x557b0>
   68320:	ldr	r0, [sp, #36]	; 0x24
   68324:	ldr	r1, [sp, #48]	; 0x30
   68328:	ldr	r1, [r1]
   6832c:	sub	r0, r0, r1
   68330:	add	r1, r0, #1
   68334:	movw	r0, #12
   68338:	bl	50240 <__assert_fail@plt+0x3d688>
   6833c:	ldr	r1, [sp, #48]	; 0x30
   68340:	str	r0, [r1, #8]
   68344:	ldr	r0, [sp, #48]	; 0x30
   68348:	ldr	r0, [r0, #8]
   6834c:	movw	r1, #0
   68350:	cmp	r0, r1
   68354:	bne	68364 <__assert_fail@plt+0x557ac>
   68358:	movw	r0, #12
   6835c:	str	r0, [fp, #-4]
   68360:	b	68480 <__assert_fail@plt+0x558c8>
   68364:	b	68368 <__assert_fail@plt+0x557b0>
   68368:	ldr	r0, [fp, #-8]
   6836c:	ldr	r1, [sp, #48]	; 0x30
   68370:	ldr	r1, [r1, #8]
   68374:	ldr	r2, [sp, #48]	; 0x30
   68378:	ldr	r2, [r2, #4]
   6837c:	ldr	r3, [sp, #48]	; 0x30
   68380:	ldr	r3, [r3]
   68384:	ldr	ip, [sp, #24]
   68388:	ldr	lr, [sp, #36]	; 0x24
   6838c:	str	ip, [sp]
   68390:	str	lr, [sp, #4]
   68394:	movw	ip, #9
   68398:	str	ip, [sp, #8]
   6839c:	bl	68b88 <__assert_fail@plt+0x55fd0>
   683a0:	str	r0, [fp, #-44]	; 0xffffffd4
   683a4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   683a8:	cmp	r0, #1
   683ac:	bne	683b4 <__assert_fail@plt+0x557fc>
   683b0:	b	68454 <__assert_fail@plt+0x5589c>
   683b4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   683b8:	cmp	r0, #0
   683bc:	beq	683cc <__assert_fail@plt+0x55814>
   683c0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   683c4:	str	r0, [fp, #-4]
   683c8:	b	68480 <__assert_fail@plt+0x558c8>
   683cc:	ldr	r0, [sp, #48]	; 0x30
   683d0:	ldr	r1, [sp, #24]
   683d4:	ldr	r2, [sp, #36]	; 0x24
   683d8:	bl	692cc <__assert_fail@plt+0x56714>
   683dc:	str	r0, [sp, #44]	; 0x2c
   683e0:	ldr	r0, [sp, #44]	; 0x2c
   683e4:	movw	r1, #0
   683e8:	cmp	r0, r1
   683ec:	bne	683fc <__assert_fail@plt+0x55844>
   683f0:	movw	r0, #12
   683f4:	str	r0, [fp, #-4]
   683f8:	b	68480 <__assert_fail@plt+0x558c8>
   683fc:	ldr	r0, [fp, #-8]
   68400:	ldr	r1, [sp, #48]	; 0x30
   68404:	ldr	r2, [sp, #44]	; 0x2c
   68408:	ldr	r3, [fp, #-12]
   6840c:	ldr	ip, [fp, #-16]
   68410:	str	ip, [sp]
   68414:	bl	689dc <__assert_fail@plt+0x55e24>
   68418:	str	r0, [fp, #-44]	; 0xffffffd4
   6841c:	ldr	r0, [fp, #-8]
   68420:	ldr	r0, [r0, #4]
   68424:	str	r0, [fp, #-32]	; 0xffffffe0
   68428:	ldr	r0, [fp, #-44]	; 0xffffffd4
   6842c:	cmp	r0, #1
   68430:	bne	68438 <__assert_fail@plt+0x55880>
   68434:	b	68454 <__assert_fail@plt+0x5589c>
   68438:	ldr	r0, [fp, #-44]	; 0xffffffd4
   6843c:	cmp	r0, #0
   68440:	beq	68450 <__assert_fail@plt+0x55898>
   68444:	ldr	r0, [fp, #-44]	; 0xffffffd4
   68448:	str	r0, [fp, #-4]
   6844c:	b	68480 <__assert_fail@plt+0x558c8>
   68450:	b	68454 <__assert_fail@plt+0x5589c>
   68454:	ldr	r0, [sp, #36]	; 0x24
   68458:	add	r0, r0, #1
   6845c:	str	r0, [sp, #36]	; 0x24
   68460:	b	681d4 <__assert_fail@plt+0x5561c>
   68464:	b	68468 <__assert_fail@plt+0x558b0>
   68468:	ldr	r0, [fp, #-28]	; 0xffffffe4
   6846c:	add	r0, r0, #1
   68470:	str	r0, [fp, #-28]	; 0xffffffe4
   68474:	b	67fb8 <__assert_fail@plt+0x55400>
   68478:	movw	r0, #0
   6847c:	str	r0, [fp, #-4]
   68480:	ldr	r0, [fp, #-4]
   68484:	mov	sp, fp
   68488:	pop	{fp, pc}
   6848c:	push	{fp, lr}
   68490:	mov	fp, sp
   68494:	sub	sp, sp, #32
   68498:	str	r0, [fp, #-8]
   6849c:	str	r1, [fp, #-12]
   684a0:	str	r2, [sp, #16]
   684a4:	ldr	r0, [fp, #-12]
   684a8:	movw	r1, #0
   684ac:	cmp	r0, r1
   684b0:	beq	6853c <__assert_fail@plt+0x55984>
   684b4:	ldr	r0, [fp, #-12]
   684b8:	ldr	r0, [r0, #4]
   684bc:	cmp	r0, #0
   684c0:	ble	6853c <__assert_fail@plt+0x55984>
   684c4:	ldr	r0, [sp, #16]
   684c8:	movw	r1, #0
   684cc:	cmp	r0, r1
   684d0:	beq	6853c <__assert_fail@plt+0x55984>
   684d4:	ldr	r0, [sp, #16]
   684d8:	ldr	r0, [r0, #4]
   684dc:	cmp	r0, #0
   684e0:	ble	6853c <__assert_fail@plt+0x55984>
   684e4:	ldr	r0, [fp, #-12]
   684e8:	ldr	r0, [r0, #4]
   684ec:	ldr	r1, [sp, #16]
   684f0:	ldr	r1, [r1, #4]
   684f4:	add	r0, r0, r1
   684f8:	ldr	r1, [fp, #-8]
   684fc:	str	r0, [r1]
   68500:	ldr	r0, [fp, #-8]
   68504:	ldr	r0, [r0]
   68508:	lsl	r0, r0, #2
   6850c:	bl	549ac <__assert_fail@plt+0x41df4>
   68510:	ldr	r1, [fp, #-8]
   68514:	str	r0, [r1, #8]
   68518:	ldr	r0, [fp, #-8]
   6851c:	ldr	r0, [r0, #8]
   68520:	movw	r1, #0
   68524:	cmp	r0, r1
   68528:	bne	68538 <__assert_fail@plt+0x55980>
   6852c:	movw	r0, #12
   68530:	str	r0, [fp, #-4]
   68534:	b	687cc <__assert_fail@plt+0x55c14>
   68538:	b	685c8 <__assert_fail@plt+0x55a10>
   6853c:	ldr	r0, [fp, #-12]
   68540:	movw	r1, #0
   68544:	cmp	r0, r1
   68548:	beq	68570 <__assert_fail@plt+0x559b8>
   6854c:	ldr	r0, [fp, #-12]
   68550:	ldr	r0, [r0, #4]
   68554:	cmp	r0, #0
   68558:	ble	68570 <__assert_fail@plt+0x559b8>
   6855c:	ldr	r0, [fp, #-8]
   68560:	ldr	r1, [fp, #-12]
   68564:	bl	6427c <__assert_fail@plt+0x516c4>
   68568:	str	r0, [fp, #-4]
   6856c:	b	687cc <__assert_fail@plt+0x55c14>
   68570:	ldr	r0, [sp, #16]
   68574:	movw	r1, #0
   68578:	cmp	r0, r1
   6857c:	beq	685a4 <__assert_fail@plt+0x559ec>
   68580:	ldr	r0, [sp, #16]
   68584:	ldr	r0, [r0, #4]
   68588:	cmp	r0, #0
   6858c:	ble	685a4 <__assert_fail@plt+0x559ec>
   68590:	ldr	r0, [fp, #-8]
   68594:	ldr	r1, [sp, #16]
   68598:	bl	6427c <__assert_fail@plt+0x516c4>
   6859c:	str	r0, [fp, #-4]
   685a0:	b	687cc <__assert_fail@plt+0x55c14>
   685a4:	ldr	r0, [fp, #-8]
   685a8:	movw	r1, #0
   685ac:	and	r1, r1, #255	; 0xff
   685b0:	movw	r2, #12
   685b4:	bl	12900 <memset@plt>
   685b8:	b	685bc <__assert_fail@plt+0x55a04>
   685bc:	movw	r0, #0
   685c0:	str	r0, [fp, #-4]
   685c4:	b	687cc <__assert_fail@plt+0x55c14>
   685c8:	movw	r0, #0
   685cc:	str	r0, [sp, #4]
   685d0:	str	r0, [sp, #8]
   685d4:	str	r0, [sp, #12]
   685d8:	ldr	r0, [sp, #12]
   685dc:	ldr	r1, [fp, #-12]
   685e0:	ldr	r1, [r1, #4]
   685e4:	cmp	r0, r1
   685e8:	movw	r0, #0
   685ec:	str	r0, [sp]
   685f0:	bge	68610 <__assert_fail@plt+0x55a58>
   685f4:	ldr	r0, [sp, #8]
   685f8:	ldr	r1, [sp, #16]
   685fc:	ldr	r1, [r1, #4]
   68600:	cmp	r0, r1
   68604:	movw	r0, #0
   68608:	movlt	r0, #1
   6860c:	str	r0, [sp]
   68610:	ldr	r0, [sp]
   68614:	tst	r0, #1
   68618:	beq	686f0 <__assert_fail@plt+0x55b38>
   6861c:	ldr	r0, [fp, #-12]
   68620:	ldr	r0, [r0, #8]
   68624:	ldr	r1, [sp, #12]
   68628:	ldr	r0, [r0, r1, lsl #2]
   6862c:	ldr	r1, [sp, #16]
   68630:	ldr	r1, [r1, #8]
   68634:	ldr	r2, [sp, #8]
   68638:	add	r1, r1, r2, lsl #2
   6863c:	ldr	r1, [r1]
   68640:	cmp	r0, r1
   68644:	ble	68680 <__assert_fail@plt+0x55ac8>
   68648:	ldr	r0, [sp, #16]
   6864c:	ldr	r0, [r0, #8]
   68650:	ldr	r1, [sp, #8]
   68654:	add	r2, r1, #1
   68658:	str	r2, [sp, #8]
   6865c:	ldr	r0, [r0, r1, lsl #2]
   68660:	ldr	r1, [fp, #-8]
   68664:	ldr	r1, [r1, #8]
   68668:	ldr	r2, [sp, #4]
   6866c:	add	r3, r2, #1
   68670:	str	r3, [sp, #4]
   68674:	add	r1, r1, r2, lsl #2
   68678:	str	r0, [r1]
   6867c:	b	685d8 <__assert_fail@plt+0x55a20>
   68680:	ldr	r0, [fp, #-12]
   68684:	ldr	r0, [r0, #8]
   68688:	ldr	r1, [sp, #12]
   6868c:	ldr	r0, [r0, r1, lsl #2]
   68690:	ldr	r1, [sp, #16]
   68694:	ldr	r1, [r1, #8]
   68698:	ldr	r2, [sp, #8]
   6869c:	add	r1, r1, r2, lsl #2
   686a0:	ldr	r1, [r1]
   686a4:	cmp	r0, r1
   686a8:	bne	686b8 <__assert_fail@plt+0x55b00>
   686ac:	ldr	r0, [sp, #8]
   686b0:	add	r0, r0, #1
   686b4:	str	r0, [sp, #8]
   686b8:	ldr	r0, [fp, #-12]
   686bc:	ldr	r0, [r0, #8]
   686c0:	ldr	r1, [sp, #12]
   686c4:	add	r2, r1, #1
   686c8:	str	r2, [sp, #12]
   686cc:	ldr	r0, [r0, r1, lsl #2]
   686d0:	ldr	r1, [fp, #-8]
   686d4:	ldr	r1, [r1, #8]
   686d8:	ldr	r2, [sp, #4]
   686dc:	add	r3, r2, #1
   686e0:	str	r3, [sp, #4]
   686e4:	add	r1, r1, r2, lsl #2
   686e8:	str	r0, [r1]
   686ec:	b	685d8 <__assert_fail@plt+0x55a20>
   686f0:	ldr	r0, [sp, #12]
   686f4:	ldr	r1, [fp, #-12]
   686f8:	ldr	r1, [r1, #4]
   686fc:	cmp	r0, r1
   68700:	bge	68754 <__assert_fail@plt+0x55b9c>
   68704:	ldr	r0, [fp, #-8]
   68708:	ldr	r0, [r0, #8]
   6870c:	ldr	r1, [sp, #4]
   68710:	add	r0, r0, r1, lsl #2
   68714:	ldr	r1, [fp, #-12]
   68718:	ldr	r2, [r1, #4]
   6871c:	ldr	r1, [r1, #8]
   68720:	ldr	r3, [sp, #12]
   68724:	add	r1, r1, r3, lsl #2
   68728:	sub	r2, r2, r3
   6872c:	lsl	r2, r2, #2
   68730:	bl	125c4 <memcpy@plt>
   68734:	ldr	r0, [fp, #-12]
   68738:	ldr	r0, [r0, #4]
   6873c:	ldr	r1, [sp, #12]
   68740:	sub	r0, r0, r1
   68744:	ldr	r1, [sp, #4]
   68748:	add	r0, r1, r0
   6874c:	str	r0, [sp, #4]
   68750:	b	687b8 <__assert_fail@plt+0x55c00>
   68754:	ldr	r0, [sp, #8]
   68758:	ldr	r1, [sp, #16]
   6875c:	ldr	r1, [r1, #4]
   68760:	cmp	r0, r1
   68764:	bge	687b4 <__assert_fail@plt+0x55bfc>
   68768:	ldr	r0, [fp, #-8]
   6876c:	ldr	r0, [r0, #8]
   68770:	ldr	r1, [sp, #4]
   68774:	add	r0, r0, r1, lsl #2
   68778:	ldr	r1, [sp, #16]
   6877c:	ldr	r2, [r1, #4]
   68780:	ldr	r1, [r1, #8]
   68784:	ldr	r3, [sp, #8]
   68788:	add	r1, r1, r3, lsl #2
   6878c:	sub	r2, r2, r3
   68790:	lsl	r2, r2, #2
   68794:	bl	125c4 <memcpy@plt>
   68798:	ldr	r0, [sp, #16]
   6879c:	ldr	r0, [r0, #4]
   687a0:	ldr	r1, [sp, #8]
   687a4:	sub	r0, r0, r1
   687a8:	ldr	r1, [sp, #4]
   687ac:	add	r0, r1, r0
   687b0:	str	r0, [sp, #4]
   687b4:	b	687b8 <__assert_fail@plt+0x55c00>
   687b8:	ldr	r0, [sp, #4]
   687bc:	ldr	r1, [fp, #-8]
   687c0:	str	r0, [r1, #4]
   687c4:	movw	r0, #0
   687c8:	str	r0, [fp, #-4]
   687cc:	ldr	r0, [fp, #-4]
   687d0:	mov	sp, fp
   687d4:	pop	{fp, pc}
   687d8:	sub	sp, sp, #28
   687dc:	str	r0, [sp, #20]
   687e0:	str	r1, [sp, #16]
   687e4:	ldr	r0, [sp, #20]
   687e8:	ldr	r0, [r0, #108]	; 0x6c
   687ec:	str	r0, [sp, #8]
   687f0:	str	r0, [sp]
   687f4:	movw	r0, #0
   687f8:	str	r0, [sp, #12]
   687fc:	ldr	r0, [sp, #12]
   68800:	ldr	r1, [sp, #8]
   68804:	cmp	r0, r1
   68808:	bge	68868 <__assert_fail@plt+0x55cb0>
   6880c:	ldr	r0, [sp, #12]
   68810:	ldr	r1, [sp, #8]
   68814:	add	r0, r0, r1
   68818:	movw	r1, #2
   6881c:	sdiv	r0, r0, r1
   68820:	str	r0, [sp, #4]
   68824:	ldr	r0, [sp, #20]
   68828:	ldr	r0, [r0, #116]	; 0x74
   6882c:	ldr	r1, [sp, #4]
   68830:	movw	r2, #24
   68834:	mul	r1, r1, r2
   68838:	add	r0, r0, r1
   6883c:	ldr	r0, [r0, #4]
   68840:	ldr	r1, [sp, #16]
   68844:	cmp	r0, r1
   68848:	bge	6885c <__assert_fail@plt+0x55ca4>
   6884c:	ldr	r0, [sp, #4]
   68850:	add	r0, r0, #1
   68854:	str	r0, [sp, #12]
   68858:	b	68864 <__assert_fail@plt+0x55cac>
   6885c:	ldr	r0, [sp, #4]
   68860:	str	r0, [sp, #8]
   68864:	b	687fc <__assert_fail@plt+0x55c44>
   68868:	ldr	r0, [sp, #12]
   6886c:	ldr	r1, [sp]
   68870:	cmp	r0, r1
   68874:	bge	688ac <__assert_fail@plt+0x55cf4>
   68878:	ldr	r0, [sp, #20]
   6887c:	ldr	r0, [r0, #116]	; 0x74
   68880:	ldr	r1, [sp, #12]
   68884:	movw	r2, #24
   68888:	mul	r1, r1, r2
   6888c:	add	r0, r0, r1
   68890:	ldr	r0, [r0, #4]
   68894:	ldr	r1, [sp, #16]
   68898:	cmp	r0, r1
   6889c:	bne	688ac <__assert_fail@plt+0x55cf4>
   688a0:	ldr	r0, [sp, #12]
   688a4:	str	r0, [sp, #24]
   688a8:	b	688b4 <__assert_fail@plt+0x55cfc>
   688ac:	mvn	r0, #0
   688b0:	str	r0, [sp, #24]
   688b4:	ldr	r0, [sp, #24]
   688b8:	add	sp, sp, #28
   688bc:	bx	lr
   688c0:	push	{fp, lr}
   688c4:	mov	fp, sp
   688c8:	sub	sp, sp, #24
   688cc:	str	r0, [fp, #-8]
   688d0:	str	r1, [sp, #12]
   688d4:	ldr	r0, [fp, #-8]
   688d8:	ldr	r0, [r0, #104]	; 0x68
   688dc:	str	r0, [sp, #8]
   688e0:	ldr	r0, [sp, #12]
   688e4:	ldr	r1, [fp, #-8]
   688e8:	ldr	r1, [r1, #36]	; 0x24
   688ec:	cmp	r0, r1
   688f0:	blt	6890c <__assert_fail@plt+0x55d54>
   688f4:	ldr	r0, [fp, #-8]
   688f8:	ldr	r0, [r0, #36]	; 0x24
   688fc:	ldr	r1, [fp, #-8]
   68900:	ldr	r1, [r1, #48]	; 0x30
   68904:	cmp	r0, r1
   68908:	blt	68938 <__assert_fail@plt+0x55d80>
   6890c:	ldr	r0, [sp, #12]
   68910:	ldr	r1, [fp, #-8]
   68914:	ldr	r1, [r1, #28]
   68918:	cmp	r0, r1
   6891c:	blt	68968 <__assert_fail@plt+0x55db0>
   68920:	ldr	r0, [fp, #-8]
   68924:	ldr	r0, [r0, #28]
   68928:	ldr	r1, [fp, #-8]
   6892c:	ldr	r1, [r1, #48]	; 0x30
   68930:	cmp	r0, r1
   68934:	bge	68968 <__assert_fail@plt+0x55db0>
   68938:	ldr	r0, [fp, #-8]
   6893c:	ldr	r1, [sp, #12]
   68940:	add	r1, r1, #1
   68944:	bl	6769c <__assert_fail@plt+0x54ae4>
   68948:	str	r0, [sp, #4]
   6894c:	ldr	r0, [sp, #4]
   68950:	cmp	r0, #0
   68954:	beq	68964 <__assert_fail@plt+0x55dac>
   68958:	ldr	r0, [sp, #4]
   6895c:	str	r0, [fp, #-4]
   68960:	b	689d0 <__assert_fail@plt+0x55e18>
   68964:	b	68968 <__assert_fail@plt+0x55db0>
   68968:	ldr	r0, [sp, #8]
   6896c:	ldr	r1, [sp, #12]
   68970:	cmp	r0, r1
   68974:	bge	689c8 <__assert_fail@plt+0x55e10>
   68978:	ldr	r0, [fp, #-8]
   6897c:	ldr	r0, [r0, #100]	; 0x64
   68980:	movw	r1, #0
   68984:	cmp	r0, r1
   68988:	beq	68990 <__assert_fail@plt+0x55dd8>
   6898c:	b	68990 <__assert_fail@plt+0x55dd8>
   68990:	ldr	r0, [fp, #-8]
   68994:	ldr	r0, [r0, #100]	; 0x64
   68998:	ldr	r1, [sp, #8]
   6899c:	add	r0, r0, r1, lsl #2
   689a0:	add	r0, r0, #4
   689a4:	ldr	r2, [sp, #12]
   689a8:	sub	r1, r2, r1
   689ac:	lsl	r2, r1, #2
   689b0:	movw	r1, #0
   689b4:	and	r1, r1, #255	; 0xff
   689b8:	bl	12900 <memset@plt>
   689bc:	ldr	r0, [sp, #12]
   689c0:	ldr	r1, [fp, #-8]
   689c4:	str	r0, [r1, #104]	; 0x68
   689c8:	movw	r0, #0
   689cc:	str	r0, [fp, #-4]
   689d0:	ldr	r0, [fp, #-4]
   689d4:	mov	sp, fp
   689d8:	pop	{fp, pc}
   689dc:	push	{r4, sl, fp, lr}
   689e0:	add	fp, sp, #8
   689e4:	sub	sp, sp, #48	; 0x30
   689e8:	ldr	ip, [fp, #8]
   689ec:	str	r0, [fp, #-16]
   689f0:	str	r1, [fp, #-20]	; 0xffffffec
   689f4:	str	r2, [fp, #-24]	; 0xffffffe8
   689f8:	str	r3, [sp, #28]
   689fc:	ldr	r0, [fp, #-16]
   68a00:	ldr	r1, [fp, #-24]	; 0xffffffe8
   68a04:	add	r1, r1, #8
   68a08:	ldr	r2, [fp, #-24]	; 0xffffffe8
   68a0c:	ldr	r2, [r2]
   68a10:	ldr	r3, [fp, #-24]	; 0xffffffe8
   68a14:	ldr	r3, [r3, #4]
   68a18:	ldr	lr, [sp, #28]
   68a1c:	ldr	r4, [fp, #8]
   68a20:	str	lr, [sp]
   68a24:	str	r4, [sp, #4]
   68a28:	movw	lr, #8
   68a2c:	str	lr, [sp, #8]
   68a30:	str	ip, [sp, #16]
   68a34:	bl	68b88 <__assert_fail@plt+0x55fd0>
   68a38:	str	r0, [sp, #24]
   68a3c:	ldr	r0, [sp, #24]
   68a40:	cmp	r0, #0
   68a44:	beq	68a54 <__assert_fail@plt+0x55e9c>
   68a48:	ldr	r0, [sp, #24]
   68a4c:	str	r0, [fp, #-12]
   68a50:	b	68ac4 <__assert_fail@plt+0x55f0c>
   68a54:	ldr	r0, [fp, #-16]
   68a58:	ldr	r1, [sp, #28]
   68a5c:	ldr	r2, [fp, #8]
   68a60:	ldr	r3, [fp, #-20]	; 0xffffffec
   68a64:	ldr	r3, [r3]
   68a68:	ldr	ip, [fp, #-24]	; 0xffffffe8
   68a6c:	ldr	ip, [ip, #4]
   68a70:	str	ip, [sp]
   68a74:	bl	693d0 <__assert_fail@plt+0x56818>
   68a78:	str	r0, [sp, #24]
   68a7c:	ldr	r0, [sp, #24]
   68a80:	cmp	r0, #0
   68a84:	beq	68a94 <__assert_fail@plt+0x55edc>
   68a88:	ldr	r0, [sp, #24]
   68a8c:	str	r0, [fp, #-12]
   68a90:	b	68ac4 <__assert_fail@plt+0x55f0c>
   68a94:	ldr	r0, [fp, #8]
   68a98:	ldr	r1, [fp, #-24]	; 0xffffffe8
   68a9c:	ldr	r1, [r1, #4]
   68aa0:	add	r0, r0, r1
   68aa4:	ldr	r1, [fp, #-20]	; 0xffffffec
   68aa8:	ldr	r1, [r1]
   68aac:	sub	r0, r0, r1
   68ab0:	str	r0, [sp, #20]
   68ab4:	ldr	r0, [fp, #-16]
   68ab8:	ldr	r1, [sp, #20]
   68abc:	bl	688c0 <__assert_fail@plt+0x55d08>
   68ac0:	str	r0, [fp, #-12]
   68ac4:	ldr	r0, [fp, #-12]
   68ac8:	sub	sp, fp, #8
   68acc:	pop	{r4, sl, fp, pc}
   68ad0:	sub	sp, sp, #32
   68ad4:	str	r0, [sp, #24]
   68ad8:	str	r1, [sp, #20]
   68adc:	str	r2, [sp, #16]
   68ae0:	str	r3, [sp, #12]
   68ae4:	movw	r0, #0
   68ae8:	str	r0, [sp, #8]
   68aec:	ldr	r0, [sp, #8]
   68af0:	ldr	r1, [sp, #20]
   68af4:	ldr	r1, [r1, #4]
   68af8:	cmp	r0, r1
   68afc:	bge	68b74 <__assert_fail@plt+0x55fbc>
   68b00:	ldr	r0, [sp, #20]
   68b04:	ldr	r0, [r0, #8]
   68b08:	ldr	r1, [sp, #8]
   68b0c:	ldr	r0, [r0, r1, lsl #2]
   68b10:	str	r0, [sp, #4]
   68b14:	ldr	r0, [sp, #24]
   68b18:	ldr	r0, [r0]
   68b1c:	ldr	r1, [sp, #4]
   68b20:	add	r0, r0, r1, lsl #3
   68b24:	str	r0, [sp]
   68b28:	ldr	r0, [sp]
   68b2c:	ldr	r0, [r0, #4]
   68b30:	and	r0, r0, #255	; 0xff
   68b34:	ldr	r1, [sp, #12]
   68b38:	cmp	r0, r1
   68b3c:	bne	68b60 <__assert_fail@plt+0x55fa8>
   68b40:	ldr	r0, [sp]
   68b44:	ldr	r0, [r0]
   68b48:	ldr	r1, [sp, #16]
   68b4c:	cmp	r0, r1
   68b50:	bne	68b60 <__assert_fail@plt+0x55fa8>
   68b54:	ldr	r0, [sp, #4]
   68b58:	str	r0, [sp, #28]
   68b5c:	b	68b7c <__assert_fail@plt+0x55fc4>
   68b60:	b	68b64 <__assert_fail@plt+0x55fac>
   68b64:	ldr	r0, [sp, #8]
   68b68:	add	r0, r0, #1
   68b6c:	str	r0, [sp, #8]
   68b70:	b	68aec <__assert_fail@plt+0x55f34>
   68b74:	mvn	r0, #0
   68b78:	str	r0, [sp, #28]
   68b7c:	ldr	r0, [sp, #28]
   68b80:	add	sp, sp, #32
   68b84:	bx	lr
   68b88:	push	{r4, sl, fp, lr}
   68b8c:	add	fp, sp, #8
   68b90:	sub	sp, sp, #136	; 0x88
   68b94:	ldr	ip, [fp, #16]
   68b98:	ldr	lr, [fp, #12]
   68b9c:	ldr	r4, [fp, #8]
   68ba0:	str	r0, [fp, #-16]
   68ba4:	str	r1, [fp, #-20]	; 0xffffffec
   68ba8:	str	r2, [fp, #-24]	; 0xffffffe8
   68bac:	str	r3, [fp, #-28]	; 0xffffffe4
   68bb0:	ldr	r0, [fp, #-16]
   68bb4:	ldr	r0, [r0, #84]	; 0x54
   68bb8:	str	r0, [fp, #-32]	; 0xffffffe0
   68bbc:	mov	r0, #0
   68bc0:	str	r0, [fp, #-36]	; 0xffffffdc
   68bc4:	str	r0, [fp, #-56]	; 0xffffffc8
   68bc8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   68bcc:	ldr	r0, [r0]
   68bd0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   68bd4:	add	r0, r0, r1, lsl #3
   68bd8:	ldr	r0, [r0]
   68bdc:	str	r0, [fp, #-40]	; 0xffffffd8
   68be0:	ldr	r0, [fp, #-20]	; 0xffffffec
   68be4:	ldr	r0, [r0, #4]
   68be8:	ldr	r1, [fp, #12]
   68bec:	ldr	r2, [fp, #-16]
   68bf0:	ldr	r2, [r2, #120]	; 0x78
   68bf4:	add	r1, r1, r2
   68bf8:	add	r1, r1, #1
   68bfc:	cmp	r0, r1
   68c00:	str	r4, [sp, #44]	; 0x2c
   68c04:	str	lr, [sp, #40]	; 0x28
   68c08:	str	ip, [sp, #36]	; 0x24
   68c0c:	bge	68cf8 <__assert_fail@plt+0x56140>
   68c10:	ldr	r0, [pc, #1708]	; 692c4 <__assert_fail@plt+0x5670c>
   68c14:	ldr	r1, [fp, #-20]	; 0xffffffec
   68c18:	ldr	r1, [r1, #4]
   68c1c:	str	r1, [sp, #56]	; 0x38
   68c20:	ldr	r1, [fp, #12]
   68c24:	ldr	r2, [fp, #-16]
   68c28:	ldr	r2, [r2, #120]	; 0x78
   68c2c:	add	r1, r1, r2
   68c30:	add	r1, r1, #1
   68c34:	str	r1, [sp, #52]	; 0x34
   68c38:	ldr	r1, [sp, #56]	; 0x38
   68c3c:	sub	r0, r0, r1
   68c40:	ldr	r1, [sp, #52]	; 0x34
   68c44:	cmp	r0, r1
   68c48:	bge	68c58 <__assert_fail@plt+0x560a0>
   68c4c:	movw	r0, #12
   68c50:	str	r0, [fp, #-12]
   68c54:	b	692b8 <__assert_fail@plt+0x56700>
   68c58:	ldr	r0, [pc, #1640]	; 692c8 <__assert_fail@plt+0x56710>
   68c5c:	ldr	r1, [sp, #56]	; 0x38
   68c60:	ldr	r2, [sp, #52]	; 0x34
   68c64:	add	r1, r1, r2
   68c68:	str	r1, [sp, #48]	; 0x30
   68c6c:	ldr	r1, [sp, #48]	; 0x30
   68c70:	cmp	r0, r1
   68c74:	bcs	68c84 <__assert_fail@plt+0x560cc>
   68c78:	movw	r0, #12
   68c7c:	str	r0, [fp, #-12]
   68c80:	b	692b8 <__assert_fail@plt+0x56700>
   68c84:	ldr	r0, [fp, #-20]	; 0xffffffec
   68c88:	ldr	r0, [r0, #8]
   68c8c:	ldr	r1, [sp, #48]	; 0x30
   68c90:	lsl	r1, r1, #2
   68c94:	bl	55a84 <__assert_fail@plt+0x42ecc>
   68c98:	str	r0, [sp, #60]	; 0x3c
   68c9c:	ldr	r0, [sp, #60]	; 0x3c
   68ca0:	movw	r1, #0
   68ca4:	cmp	r0, r1
   68ca8:	bne	68cb8 <__assert_fail@plt+0x56100>
   68cac:	movw	r0, #12
   68cb0:	str	r0, [fp, #-12]
   68cb4:	b	692b8 <__assert_fail@plt+0x56700>
   68cb8:	ldr	r0, [sp, #60]	; 0x3c
   68cbc:	ldr	r1, [fp, #-20]	; 0xffffffec
   68cc0:	str	r0, [r1, #8]
   68cc4:	ldr	r0, [sp, #48]	; 0x30
   68cc8:	ldr	r1, [fp, #-20]	; 0xffffffec
   68ccc:	str	r0, [r1, #4]
   68cd0:	ldr	r0, [sp, #60]	; 0x3c
   68cd4:	ldr	r1, [sp, #56]	; 0x38
   68cd8:	add	r0, r0, r1, lsl #2
   68cdc:	ldr	r2, [fp, #-20]	; 0xffffffec
   68ce0:	ldr	r2, [r2, #4]
   68ce4:	sub	r1, r2, r1
   68ce8:	lsl	r2, r1, #2
   68cec:	movw	r1, #0
   68cf0:	and	r1, r1, #255	; 0xff
   68cf4:	bl	12900 <memset@plt>
   68cf8:	ldr	r0, [fp, #-20]	; 0xffffffec
   68cfc:	ldr	r0, [r0]
   68d00:	cmp	r0, #0
   68d04:	beq	68d18 <__assert_fail@plt+0x56160>
   68d08:	ldr	r0, [fp, #-20]	; 0xffffffec
   68d0c:	ldr	r0, [r0]
   68d10:	str	r0, [sp, #32]
   68d14:	b	68d20 <__assert_fail@plt+0x56168>
   68d18:	ldr	r0, [fp, #-28]	; 0xffffffe4
   68d1c:	str	r0, [sp, #32]
   68d20:	ldr	r0, [sp, #32]
   68d24:	str	r0, [fp, #-48]	; 0xffffffd0
   68d28:	ldr	r0, [fp, #-16]
   68d2c:	ldr	r0, [r0, #100]	; 0x64
   68d30:	str	r0, [sp, #68]	; 0x44
   68d34:	ldr	r0, [fp, #-16]
   68d38:	ldr	r0, [r0, #40]	; 0x28
   68d3c:	str	r0, [fp, #-44]	; 0xffffffd4
   68d40:	ldr	r0, [fp, #-20]	; 0xffffffec
   68d44:	ldr	r0, [r0, #8]
   68d48:	ldr	r1, [fp, #-16]
   68d4c:	str	r0, [r1, #100]	; 0x64
   68d50:	ldr	r0, [fp, #-48]	; 0xffffffd0
   68d54:	ldr	r1, [fp, #-16]
   68d58:	str	r0, [r1, #40]	; 0x28
   68d5c:	ldr	r0, [fp, #-16]
   68d60:	ldr	r1, [fp, #-48]	; 0xffffffd0
   68d64:	sub	r1, r1, #1
   68d68:	ldr	r2, [fp, #-16]
   68d6c:	ldr	r2, [r2, #88]	; 0x58
   68d70:	bl	66c90 <__assert_fail@plt+0x540d8>
   68d74:	str	r0, [sp, #64]	; 0x40
   68d78:	ldr	r0, [fp, #-48]	; 0xffffffd0
   68d7c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   68d80:	cmp	r0, r1
   68d84:	bne	68dec <__assert_fail@plt+0x56234>
   68d88:	ldr	r1, [fp, #-24]	; 0xffffffe8
   68d8c:	add	r0, sp, #72	; 0x48
   68d90:	bl	62fc8 <__assert_fail@plt+0x50410>
   68d94:	str	r0, [fp, #-36]	; 0xffffffdc
   68d98:	ldr	r0, [fp, #-36]	; 0xffffffdc
   68d9c:	cmp	r0, #0
   68da0:	beq	68db0 <__assert_fail@plt+0x561f8>
   68da4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   68da8:	str	r0, [fp, #-12]
   68dac:	b	692b8 <__assert_fail@plt+0x56700>
   68db0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   68db4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   68db8:	ldr	r3, [fp, #16]
   68dbc:	add	r1, sp, #72	; 0x48
   68dc0:	bl	69630 <__assert_fail@plt+0x56a78>
   68dc4:	str	r0, [fp, #-36]	; 0xffffffdc
   68dc8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   68dcc:	cmp	r0, #0
   68dd0:	beq	68de8 <__assert_fail@plt+0x56230>
   68dd4:	ldr	r0, [sp, #80]	; 0x50
   68dd8:	bl	50c68 <__assert_fail@plt+0x3e0b0>
   68ddc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   68de0:	str	r0, [fp, #-12]
   68de4:	b	692b8 <__assert_fail@plt+0x56700>
   68de8:	b	68e74 <__assert_fail@plt+0x562bc>
   68dec:	ldr	r0, [fp, #-16]
   68df0:	ldr	r0, [r0, #100]	; 0x64
   68df4:	ldr	r1, [fp, #-48]	; 0xffffffd0
   68df8:	add	r0, r0, r1, lsl #2
   68dfc:	ldr	r0, [r0]
   68e00:	str	r0, [fp, #-56]	; 0xffffffc8
   68e04:	ldr	r0, [fp, #-56]	; 0xffffffc8
   68e08:	movw	r1, #0
   68e0c:	cmp	r0, r1
   68e10:	beq	68e5c <__assert_fail@plt+0x562a4>
   68e14:	ldr	r0, [fp, #-56]	; 0xffffffc8
   68e18:	ldrb	r0, [r0, #52]	; 0x34
   68e1c:	ubfx	r0, r0, #6, #1
   68e20:	and	r0, r0, #255	; 0xff
   68e24:	cmp	r0, #0
   68e28:	beq	68e5c <__assert_fail@plt+0x562a4>
   68e2c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   68e30:	add	r1, r0, #4
   68e34:	add	r0, sp, #72	; 0x48
   68e38:	bl	6427c <__assert_fail@plt+0x516c4>
   68e3c:	str	r0, [fp, #-36]	; 0xffffffdc
   68e40:	ldr	r0, [fp, #-36]	; 0xffffffdc
   68e44:	cmp	r0, #0
   68e48:	beq	68e58 <__assert_fail@plt+0x562a0>
   68e4c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   68e50:	str	r0, [fp, #-12]
   68e54:	b	692b8 <__assert_fail@plt+0x56700>
   68e58:	b	68e70 <__assert_fail@plt+0x562b8>
   68e5c:	add	r0, sp, #72	; 0x48
   68e60:	movw	r1, #0
   68e64:	and	r1, r1, #255	; 0xff
   68e68:	movw	r2, #12
   68e6c:	bl	12900 <memset@plt>
   68e70:	b	68e74 <__assert_fail@plt+0x562bc>
   68e74:	ldr	r0, [fp, #-48]	; 0xffffffd0
   68e78:	ldr	r1, [fp, #-28]	; 0xffffffe4
   68e7c:	cmp	r0, r1
   68e80:	beq	68eac <__assert_fail@plt+0x562f4>
   68e84:	ldr	r0, [fp, #-56]	; 0xffffffc8
   68e88:	movw	r1, #0
   68e8c:	cmp	r0, r1
   68e90:	beq	68f84 <__assert_fail@plt+0x563cc>
   68e94:	ldr	r0, [fp, #-56]	; 0xffffffc8
   68e98:	ldrb	r0, [r0, #52]	; 0x34
   68e9c:	ubfx	r0, r0, #6, #1
   68ea0:	and	r0, r0, #255	; 0xff
   68ea4:	cmp	r0, #0
   68ea8:	beq	68f84 <__assert_fail@plt+0x563cc>
   68eac:	ldr	r0, [sp, #76]	; 0x4c
   68eb0:	cmp	r0, #0
   68eb4:	beq	68f08 <__assert_fail@plt+0x56350>
   68eb8:	ldr	r0, [fp, #-16]
   68ebc:	ldr	r2, [fp, #-48]	; 0xffffffd0
   68ec0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   68ec4:	ldr	r1, [fp, #16]
   68ec8:	add	ip, sp, #72	; 0x48
   68ecc:	str	r1, [sp, #28]
   68ed0:	mov	r1, ip
   68ed4:	ldr	ip, [sp, #28]
   68ed8:	str	ip, [sp]
   68edc:	bl	697d4 <__assert_fail@plt+0x56c1c>
   68ee0:	str	r0, [fp, #-36]	; 0xffffffdc
   68ee4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   68ee8:	cmp	r0, #0
   68eec:	beq	68f04 <__assert_fail@plt+0x5634c>
   68ef0:	ldr	r0, [sp, #80]	; 0x50
   68ef4:	bl	50c68 <__assert_fail@plt+0x3e0b0>
   68ef8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   68efc:	str	r0, [fp, #-12]
   68f00:	b	692b8 <__assert_fail@plt+0x56700>
   68f04:	b	68f08 <__assert_fail@plt+0x56350>
   68f08:	ldr	r1, [fp, #-32]	; 0xffffffe0
   68f0c:	ldr	r3, [sp, #64]	; 0x40
   68f10:	sub	r0, fp, #36	; 0x24
   68f14:	add	r2, sp, #72	; 0x48
   68f18:	bl	64440 <__assert_fail@plt+0x51888>
   68f1c:	str	r0, [fp, #-56]	; 0xffffffc8
   68f20:	ldr	r0, [fp, #-56]	; 0xffffffc8
   68f24:	movw	r1, #0
   68f28:	cmp	r0, r1
   68f2c:	movw	r0, #0
   68f30:	str	r0, [sp, #24]
   68f34:	bne	68f4c <__assert_fail@plt+0x56394>
   68f38:	ldr	r0, [fp, #-36]	; 0xffffffdc
   68f3c:	cmp	r0, #0
   68f40:	movw	r0, #0
   68f44:	movne	r0, #1
   68f48:	str	r0, [sp, #24]
   68f4c:	ldr	r0, [sp, #24]
   68f50:	tst	r0, #1
   68f54:	beq	68f6c <__assert_fail@plt+0x563b4>
   68f58:	ldr	r0, [sp, #80]	; 0x50
   68f5c:	bl	50c68 <__assert_fail@plt+0x3e0b0>
   68f60:	ldr	r0, [fp, #-36]	; 0xffffffdc
   68f64:	str	r0, [fp, #-12]
   68f68:	b	692b8 <__assert_fail@plt+0x56700>
   68f6c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   68f70:	ldr	r1, [fp, #-16]
   68f74:	ldr	r1, [r1, #100]	; 0x64
   68f78:	ldr	r2, [fp, #-48]	; 0xffffffd0
   68f7c:	add	r1, r1, r2, lsl #2
   68f80:	str	r0, [r1]
   68f84:	movw	r0, #0
   68f88:	str	r0, [fp, #-52]	; 0xffffffcc
   68f8c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   68f90:	ldr	r1, [fp, #12]
   68f94:	cmp	r0, r1
   68f98:	movw	r0, #0
   68f9c:	str	r0, [sp, #20]
   68fa0:	bge	68fc0 <__assert_fail@plt+0x56408>
   68fa4:	ldr	r0, [fp, #-52]	; 0xffffffcc
   68fa8:	ldr	r1, [fp, #-16]
   68fac:	ldr	r1, [r1, #120]	; 0x78
   68fb0:	cmp	r0, r1
   68fb4:	movw	r0, #0
   68fb8:	movle	r0, #1
   68fbc:	str	r0, [sp, #20]
   68fc0:	ldr	r0, [sp, #20]
   68fc4:	tst	r0, #1
   68fc8:	beq	69204 <__assert_fail@plt+0x5664c>
   68fcc:	mov	r0, #0
   68fd0:	str	r0, [sp, #76]	; 0x4c
   68fd4:	ldr	r0, [fp, #-16]
   68fd8:	ldr	r0, [r0, #100]	; 0x64
   68fdc:	ldr	r1, [fp, #-48]	; 0xffffffd0
   68fe0:	add	r1, r1, #1
   68fe4:	add	r0, r0, r1, lsl #2
   68fe8:	ldr	r0, [r0]
   68fec:	movw	r1, #0
   68ff0:	cmp	r0, r1
   68ff4:	beq	69044 <__assert_fail@plt+0x5648c>
   68ff8:	ldr	r0, [fp, #-16]
   68ffc:	ldr	r0, [r0, #100]	; 0x64
   69000:	ldr	r1, [fp, #-48]	; 0xffffffd0
   69004:	add	r1, r1, #1
   69008:	add	r0, r0, r1, lsl #2
   6900c:	ldr	r0, [r0]
   69010:	add	r1, r0, #4
   69014:	add	r0, sp, #72	; 0x48
   69018:	bl	639a8 <__assert_fail@plt+0x50df0>
   6901c:	str	r0, [fp, #-36]	; 0xffffffdc
   69020:	ldr	r0, [fp, #-36]	; 0xffffffdc
   69024:	cmp	r0, #0
   69028:	beq	69040 <__assert_fail@plt+0x56488>
   6902c:	ldr	r0, [sp, #80]	; 0x50
   69030:	bl	50c68 <__assert_fail@plt+0x3e0b0>
   69034:	ldr	r0, [fp, #-36]	; 0xffffffdc
   69038:	str	r0, [fp, #-12]
   6903c:	b	692b8 <__assert_fail@plt+0x56700>
   69040:	b	69044 <__assert_fail@plt+0x5648c>
   69044:	ldr	r0, [fp, #-56]	; 0xffffffc8
   69048:	movw	r1, #0
   6904c:	cmp	r0, r1
   69050:	beq	69094 <__assert_fail@plt+0x564dc>
   69054:	ldr	r0, [fp, #-16]
   69058:	ldr	r1, [fp, #-48]	; 0xffffffd0
   6905c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   69060:	add	r2, r2, #16
   69064:	add	r3, sp, #72	; 0x48
   69068:	bl	69ba4 <__assert_fail@plt+0x56fec>
   6906c:	str	r0, [fp, #-36]	; 0xffffffdc
   69070:	ldr	r0, [fp, #-36]	; 0xffffffdc
   69074:	cmp	r0, #0
   69078:	beq	69090 <__assert_fail@plt+0x564d8>
   6907c:	ldr	r0, [sp, #80]	; 0x50
   69080:	bl	50c68 <__assert_fail@plt+0x3e0b0>
   69084:	ldr	r0, [fp, #-36]	; 0xffffffdc
   69088:	str	r0, [fp, #-12]
   6908c:	b	692b8 <__assert_fail@plt+0x56700>
   69090:	b	69094 <__assert_fail@plt+0x564dc>
   69094:	ldr	r0, [fp, #-48]	; 0xffffffd0
   69098:	add	r0, r0, #1
   6909c:	str	r0, [fp, #-48]	; 0xffffffd0
   690a0:	ldr	r0, [sp, #76]	; 0x4c
   690a4:	cmp	r0, #0
   690a8:	beq	69134 <__assert_fail@plt+0x5657c>
   690ac:	ldr	r0, [fp, #-32]	; 0xffffffe0
   690b0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   690b4:	ldr	r3, [fp, #16]
   690b8:	add	r1, sp, #72	; 0x48
   690bc:	bl	69630 <__assert_fail@plt+0x56a78>
   690c0:	str	r0, [fp, #-36]	; 0xffffffdc
   690c4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   690c8:	cmp	r0, #0
   690cc:	beq	690e4 <__assert_fail@plt+0x5652c>
   690d0:	ldr	r0, [sp, #80]	; 0x50
   690d4:	bl	50c68 <__assert_fail@plt+0x3e0b0>
   690d8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   690dc:	str	r0, [fp, #-12]
   690e0:	b	692b8 <__assert_fail@plt+0x56700>
   690e4:	ldr	r0, [fp, #-16]
   690e8:	ldr	r2, [fp, #-48]	; 0xffffffd0
   690ec:	ldr	r3, [fp, #-40]	; 0xffffffd8
   690f0:	ldr	r1, [fp, #16]
   690f4:	add	ip, sp, #72	; 0x48
   690f8:	str	r1, [sp, #16]
   690fc:	mov	r1, ip
   69100:	ldr	ip, [sp, #16]
   69104:	str	ip, [sp]
   69108:	bl	697d4 <__assert_fail@plt+0x56c1c>
   6910c:	str	r0, [fp, #-36]	; 0xffffffdc
   69110:	ldr	r0, [fp, #-36]	; 0xffffffdc
   69114:	cmp	r0, #0
   69118:	beq	69130 <__assert_fail@plt+0x56578>
   6911c:	ldr	r0, [sp, #80]	; 0x50
   69120:	bl	50c68 <__assert_fail@plt+0x3e0b0>
   69124:	ldr	r0, [fp, #-36]	; 0xffffffdc
   69128:	str	r0, [fp, #-12]
   6912c:	b	692b8 <__assert_fail@plt+0x56700>
   69130:	b	69134 <__assert_fail@plt+0x5657c>
   69134:	ldr	r0, [fp, #-16]
   69138:	ldr	r1, [fp, #-48]	; 0xffffffd0
   6913c:	sub	r1, r1, #1
   69140:	ldr	r2, [fp, #-16]
   69144:	ldr	r2, [r2, #88]	; 0x58
   69148:	bl	66c90 <__assert_fail@plt+0x540d8>
   6914c:	str	r0, [sp, #64]	; 0x40
   69150:	ldr	r1, [fp, #-32]	; 0xffffffe0
   69154:	ldr	r3, [sp, #64]	; 0x40
   69158:	sub	r0, fp, #36	; 0x24
   6915c:	add	r2, sp, #72	; 0x48
   69160:	bl	64440 <__assert_fail@plt+0x51888>
   69164:	str	r0, [fp, #-56]	; 0xffffffc8
   69168:	ldr	r0, [fp, #-56]	; 0xffffffc8
   6916c:	movw	r1, #0
   69170:	cmp	r0, r1
   69174:	movw	r0, #0
   69178:	str	r0, [sp, #12]
   6917c:	bne	69194 <__assert_fail@plt+0x565dc>
   69180:	ldr	r0, [fp, #-36]	; 0xffffffdc
   69184:	cmp	r0, #0
   69188:	movw	r0, #0
   6918c:	movne	r0, #1
   69190:	str	r0, [sp, #12]
   69194:	ldr	r0, [sp, #12]
   69198:	tst	r0, #1
   6919c:	beq	691b4 <__assert_fail@plt+0x565fc>
   691a0:	ldr	r0, [sp, #80]	; 0x50
   691a4:	bl	50c68 <__assert_fail@plt+0x3e0b0>
   691a8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   691ac:	str	r0, [fp, #-12]
   691b0:	b	692b8 <__assert_fail@plt+0x56700>
   691b4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   691b8:	ldr	r1, [fp, #-16]
   691bc:	ldr	r1, [r1, #100]	; 0x64
   691c0:	ldr	r2, [fp, #-48]	; 0xffffffd0
   691c4:	add	r1, r1, r2, lsl #2
   691c8:	str	r0, [r1]
   691cc:	ldr	r0, [fp, #-56]	; 0xffffffc8
   691d0:	movw	r1, #0
   691d4:	cmp	r0, r1
   691d8:	bne	691ec <__assert_fail@plt+0x56634>
   691dc:	ldr	r0, [fp, #-52]	; 0xffffffcc
   691e0:	add	r0, r0, #1
   691e4:	str	r0, [sp, #8]
   691e8:	b	691f8 <__assert_fail@plt+0x56640>
   691ec:	movw	r0, #0
   691f0:	str	r0, [sp, #8]
   691f4:	b	691f8 <__assert_fail@plt+0x56640>
   691f8:	ldr	r0, [sp, #8]
   691fc:	str	r0, [fp, #-52]	; 0xffffffcc
   69200:	b	68f8c <__assert_fail@plt+0x563d4>
   69204:	ldr	r0, [sp, #80]	; 0x50
   69208:	bl	50c68 <__assert_fail@plt+0x3e0b0>
   6920c:	ldr	r0, [fp, #-16]
   69210:	ldr	r0, [r0, #100]	; 0x64
   69214:	ldr	lr, [fp, #12]
   69218:	add	r0, r0, lr, lsl #2
   6921c:	ldr	r0, [r0]
   69220:	movw	lr, #0
   69224:	cmp	r0, lr
   69228:	bne	69238 <__assert_fail@plt+0x56680>
   6922c:	movw	r0, #0
   69230:	str	r0, [sp, #4]
   69234:	b	69254 <__assert_fail@plt+0x5669c>
   69238:	ldr	r0, [fp, #-16]
   6923c:	ldr	r0, [r0, #100]	; 0x64
   69240:	ldr	r1, [fp, #12]
   69244:	add	r0, r0, r1, lsl #2
   69248:	ldr	r0, [r0]
   6924c:	add	r0, r0, #4
   69250:	str	r0, [sp, #4]
   69254:	ldr	r0, [sp, #4]
   69258:	str	r0, [fp, #-60]	; 0xffffffc4
   6925c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   69260:	ldr	r1, [fp, #-20]	; 0xffffffec
   69264:	str	r0, [r1]
   69268:	ldr	r0, [sp, #68]	; 0x44
   6926c:	ldr	r1, [fp, #-16]
   69270:	str	r0, [r1, #100]	; 0x64
   69274:	ldr	r0, [fp, #-44]	; 0xffffffd4
   69278:	ldr	r1, [fp, #-16]
   6927c:	str	r0, [r1, #40]	; 0x28
   69280:	ldr	r0, [fp, #-60]	; 0xffffffc4
   69284:	movw	r1, #0
   69288:	cmp	r0, r1
   6928c:	beq	692b0 <__assert_fail@plt+0x566f8>
   69290:	ldr	r0, [fp, #-60]	; 0xffffffc4
   69294:	ldr	r1, [fp, #8]
   69298:	bl	64350 <__assert_fail@plt+0x51798>
   6929c:	cmp	r0, #0
   692a0:	beq	692b0 <__assert_fail@plt+0x566f8>
   692a4:	movw	r0, #0
   692a8:	str	r0, [fp, #-12]
   692ac:	b	692b8 <__assert_fail@plt+0x56700>
   692b0:	movw	r0, #1
   692b4:	str	r0, [fp, #-12]
   692b8:	ldr	r0, [fp, #-12]
   692bc:	sub	sp, fp, #8
   692c0:	pop	{r4, sl, fp, pc}
   692c4:	svcvc	0x00ffffff
   692c8:	svccc	0x00ffffff
   692cc:	push	{fp, lr}
   692d0:	mov	fp, sp
   692d4:	sub	sp, sp, #32
   692d8:	str	r0, [fp, #-8]
   692dc:	str	r1, [fp, #-12]
   692e0:	str	r2, [sp, #16]
   692e4:	ldr	r0, [fp, #-8]
   692e8:	ldr	r0, [r0, #16]
   692ec:	ldr	r1, [fp, #-8]
   692f0:	ldr	r1, [r1, #12]
   692f4:	cmp	r0, r1
   692f8:	bne	6935c <__assert_fail@plt+0x567a4>
   692fc:	ldr	r0, [fp, #-8]
   69300:	ldr	r0, [r0, #12]
   69304:	mov	r1, #1
   69308:	orr	r0, r1, r0, lsl #1
   6930c:	str	r0, [sp, #8]
   69310:	ldr	r0, [fp, #-8]
   69314:	ldr	r0, [r0, #20]
   69318:	ldr	r1, [sp, #8]
   6931c:	lsl	r1, r1, #2
   69320:	bl	55a84 <__assert_fail@plt+0x42ecc>
   69324:	str	r0, [sp, #4]
   69328:	ldr	r0, [sp, #4]
   6932c:	movw	r1, #0
   69330:	cmp	r0, r1
   69334:	bne	69344 <__assert_fail@plt+0x5678c>
   69338:	movw	r0, #0
   6933c:	str	r0, [fp, #-4]
   69340:	b	693c4 <__assert_fail@plt+0x5680c>
   69344:	ldr	r0, [sp, #4]
   69348:	ldr	r1, [fp, #-8]
   6934c:	str	r0, [r1, #20]
   69350:	ldr	r0, [sp, #8]
   69354:	ldr	r1, [fp, #-8]
   69358:	str	r0, [r1, #12]
   6935c:	movw	r0, #1
   69360:	movw	r1, #20
   69364:	bl	50240 <__assert_fail@plt+0x3d688>
   69368:	str	r0, [sp, #12]
   6936c:	ldr	r0, [sp, #12]
   69370:	movw	r1, #0
   69374:	cmp	r0, r1
   69378:	beq	693bc <__assert_fail@plt+0x56804>
   6937c:	ldr	r0, [sp, #12]
   69380:	ldr	r1, [fp, #-8]
   69384:	ldr	r2, [r1, #16]
   69388:	ldr	r1, [r1, #20]
   6938c:	add	r1, r1, r2, lsl #2
   69390:	str	r0, [r1]
   69394:	ldr	r0, [fp, #-12]
   69398:	ldr	r1, [sp, #12]
   6939c:	str	r0, [r1]
   693a0:	ldr	r0, [sp, #16]
   693a4:	ldr	r1, [sp, #12]
   693a8:	str	r0, [r1, #4]
   693ac:	ldr	r0, [fp, #-8]
   693b0:	ldr	r1, [r0, #16]
   693b4:	add	r1, r1, #1
   693b8:	str	r1, [r0, #16]
   693bc:	ldr	r0, [sp, #12]
   693c0:	str	r0, [fp, #-4]
   693c4:	ldr	r0, [fp, #-4]
   693c8:	mov	sp, fp
   693cc:	pop	{fp, pc}
   693d0:	push	{fp, lr}
   693d4:	mov	fp, sp
   693d8:	sub	sp, sp, #32
   693dc:	ldr	ip, [fp, #8]
   693e0:	str	r0, [fp, #-8]
   693e4:	str	r1, [fp, #-12]
   693e8:	str	r2, [sp, #16]
   693ec:	str	r3, [sp, #12]
   693f0:	ldr	r0, [fp, #-8]
   693f4:	ldr	r0, [r0, #108]	; 0x6c
   693f8:	ldr	r1, [fp, #-8]
   693fc:	ldr	r1, [r1, #112]	; 0x70
   69400:	cmp	r0, r1
   69404:	str	ip, [sp, #4]
   69408:	blt	6949c <__assert_fail@plt+0x568e4>
   6940c:	ldr	r0, [fp, #-8]
   69410:	ldr	r1, [r0, #112]	; 0x70
   69414:	ldr	r0, [r0, #116]	; 0x74
   69418:	lsl	r1, r1, #1
   6941c:	movw	r2, #24
   69420:	mul	r1, r1, r2
   69424:	bl	55a84 <__assert_fail@plt+0x42ecc>
   69428:	str	r0, [sp, #8]
   6942c:	ldr	r0, [sp, #8]
   69430:	movw	r1, #0
   69434:	cmp	r0, r1
   69438:	bne	69454 <__assert_fail@plt+0x5689c>
   6943c:	ldr	r0, [fp, #-8]
   69440:	ldr	r0, [r0, #116]	; 0x74
   69444:	bl	50c68 <__assert_fail@plt+0x3e0b0>
   69448:	movw	r0, #12
   6944c:	str	r0, [fp, #-4]
   69450:	b	69624 <__assert_fail@plt+0x56a6c>
   69454:	ldr	r0, [sp, #8]
   69458:	ldr	r1, [fp, #-8]
   6945c:	str	r0, [r1, #116]	; 0x74
   69460:	ldr	r0, [fp, #-8]
   69464:	ldr	r1, [r0, #108]	; 0x6c
   69468:	ldr	r2, [r0, #112]	; 0x70
   6946c:	ldr	r0, [r0, #116]	; 0x74
   69470:	add	r1, r1, r1, lsl #1
   69474:	add	r0, r0, r1, lsl #3
   69478:	add	r1, r2, r2, lsl #1
   6947c:	lsl	r2, r1, #3
   69480:	mov	r1, #0
   69484:	bl	12900 <memset@plt>
   69488:	ldr	r1, [fp, #-8]
   6948c:	ldr	r2, [r1, #112]	; 0x70
   69490:	lsl	r2, r2, #1
   69494:	str	r2, [r1, #112]	; 0x70
   69498:	str	r0, [sp]
   6949c:	ldr	r0, [fp, #-8]
   694a0:	ldr	r0, [r0, #108]	; 0x6c
   694a4:	cmp	r0, #0
   694a8:	ble	69504 <__assert_fail@plt+0x5694c>
   694ac:	ldr	r0, [fp, #-8]
   694b0:	ldr	r0, [r0, #116]	; 0x74
   694b4:	ldr	r1, [fp, #-8]
   694b8:	ldr	r1, [r1, #108]	; 0x6c
   694bc:	sub	r1, r1, #1
   694c0:	movw	r2, #24
   694c4:	mul	r1, r1, r2
   694c8:	add	r0, r0, r1
   694cc:	ldr	r0, [r0, #4]
   694d0:	ldr	r1, [sp, #16]
   694d4:	cmp	r0, r1
   694d8:	bne	69504 <__assert_fail@plt+0x5694c>
   694dc:	ldr	r0, [fp, #-8]
   694e0:	ldr	r0, [r0, #116]	; 0x74
   694e4:	ldr	r1, [fp, #-8]
   694e8:	ldr	r1, [r1, #108]	; 0x6c
   694ec:	sub	r1, r1, #1
   694f0:	movw	r2, #24
   694f4:	mul	r1, r1, r2
   694f8:	add	r0, r0, r1
   694fc:	movw	r1, #1
   69500:	strb	r1, [r0, #20]
   69504:	ldr	r0, [fp, #-12]
   69508:	ldr	r1, [fp, #-8]
   6950c:	ldr	r1, [r1, #116]	; 0x74
   69510:	ldr	r2, [fp, #-8]
   69514:	ldr	r2, [r2, #108]	; 0x6c
   69518:	movw	r3, #24
   6951c:	mul	r2, r2, r3
   69520:	add	r1, r1, r2
   69524:	str	r0, [r1]
   69528:	ldr	r0, [sp, #16]
   6952c:	ldr	r1, [fp, #-8]
   69530:	ldr	r1, [r1, #116]	; 0x74
   69534:	ldr	r2, [fp, #-8]
   69538:	ldr	r2, [r2, #108]	; 0x6c
   6953c:	mul	r2, r2, r3
   69540:	add	r1, r1, r2
   69544:	str	r0, [r1, #4]
   69548:	ldr	r0, [sp, #12]
   6954c:	ldr	r1, [fp, #-8]
   69550:	ldr	r1, [r1, #116]	; 0x74
   69554:	ldr	r2, [fp, #-8]
   69558:	ldr	r2, [r2, #108]	; 0x6c
   6955c:	mul	r2, r2, r3
   69560:	add	r1, r1, r2
   69564:	str	r0, [r1, #8]
   69568:	ldr	r0, [fp, #8]
   6956c:	ldr	r1, [fp, #-8]
   69570:	ldr	r1, [r1, #116]	; 0x74
   69574:	ldr	r2, [fp, #-8]
   69578:	ldr	r2, [r2, #108]	; 0x6c
   6957c:	mul	r2, r2, r3
   69580:	add	r1, r1, r2
   69584:	str	r0, [r1, #12]
   69588:	ldr	r0, [sp, #12]
   6958c:	ldr	r1, [fp, #8]
   69590:	cmp	r0, r1
   69594:	movw	r0, #0
   69598:	moveq	r0, #1
   6959c:	tst	r0, #1
   695a0:	mvn	r0, #0
   695a4:	moveq	r0, #0
   695a8:	ldr	r1, [fp, #-8]
   695ac:	ldr	r1, [r1, #116]	; 0x74
   695b0:	ldr	r2, [fp, #-8]
   695b4:	ldr	r2, [r2, #108]	; 0x6c
   695b8:	mul	r2, r2, r3
   695bc:	add	r1, r1, r2
   695c0:	str	r0, [r1, #16]
   695c4:	ldr	r0, [fp, #-8]
   695c8:	ldr	r0, [r0, #116]	; 0x74
   695cc:	ldr	r1, [fp, #-8]
   695d0:	ldr	r2, [r1, #108]	; 0x6c
   695d4:	add	ip, r2, #1
   695d8:	str	ip, [r1, #108]	; 0x6c
   695dc:	mul	r1, r2, r3
   695e0:	add	r0, r0, r1
   695e4:	movw	r1, #0
   695e8:	strb	r1, [r0, #20]
   695ec:	ldr	r0, [fp, #-8]
   695f0:	ldr	r0, [r0, #120]	; 0x78
   695f4:	ldr	r1, [fp, #8]
   695f8:	ldr	r2, [sp, #12]
   695fc:	sub	r1, r1, r2
   69600:	cmp	r0, r1
   69604:	bge	6961c <__assert_fail@plt+0x56a64>
   69608:	ldr	r0, [fp, #8]
   6960c:	ldr	r1, [sp, #12]
   69610:	sub	r0, r0, r1
   69614:	ldr	r1, [fp, #-8]
   69618:	str	r0, [r1, #120]	; 0x78
   6961c:	movw	r0, #0
   69620:	str	r0, [fp, #-4]
   69624:	ldr	r0, [fp, #-4]
   69628:	mov	sp, fp
   6962c:	pop	{fp, pc}
   69630:	push	{fp, lr}
   69634:	mov	fp, sp
   69638:	sub	sp, sp, #64	; 0x40
   6963c:	str	r0, [fp, #-8]
   69640:	str	r1, [fp, #-12]
   69644:	str	r2, [fp, #-16]
   69648:	str	r3, [fp, #-20]	; 0xffffffec
   6964c:	ldr	r0, [fp, #-12]
   69650:	ldr	r0, [r0, #4]
   69654:	cmp	r0, #0
   69658:	beq	69660 <__assert_fail@plt+0x56aa8>
   6965c:	b	69660 <__assert_fail@plt+0x56aa8>
   69660:	ldr	r0, [fp, #-12]
   69664:	ldr	r1, [r0, #4]
   69668:	add	r0, sp, #20
   6966c:	bl	6342c <__assert_fail@plt+0x50874>
   69670:	str	r0, [fp, #-24]	; 0xffffffe8
   69674:	ldr	r0, [fp, #-24]	; 0xffffffe8
   69678:	cmp	r0, #0
   6967c:	beq	6968c <__assert_fail@plt+0x56ad4>
   69680:	ldr	r0, [fp, #-24]	; 0xffffffe8
   69684:	str	r0, [fp, #-4]
   69688:	b	697c8 <__assert_fail@plt+0x56c10>
   6968c:	movw	r0, #0
   69690:	str	r0, [fp, #-28]	; 0xffffffe4
   69694:	ldr	r0, [fp, #-28]	; 0xffffffe4
   69698:	ldr	r1, [fp, #-12]
   6969c:	ldr	r1, [r1, #4]
   696a0:	cmp	r0, r1
   696a4:	bge	69798 <__assert_fail@plt+0x56be0>
   696a8:	ldr	r0, [fp, #-12]
   696ac:	ldr	r0, [r0, #8]
   696b0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   696b4:	add	r0, r0, r1, lsl #2
   696b8:	ldr	r0, [r0]
   696bc:	str	r0, [sp, #16]
   696c0:	ldr	r0, [fp, #-8]
   696c4:	ldr	r0, [r0, #24]
   696c8:	ldr	r1, [sp, #16]
   696cc:	movw	r2, #12
   696d0:	mul	r1, r1, r2
   696d4:	add	r0, r0, r1
   696d8:	str	r0, [sp, #12]
   696dc:	ldr	r0, [fp, #-8]
   696e0:	ldr	r1, [sp, #12]
   696e4:	ldr	r2, [fp, #-16]
   696e8:	ldr	r3, [fp, #-20]	; 0xffffffec
   696ec:	bl	68ad0 <__assert_fail@plt+0x55f18>
   696f0:	str	r0, [sp, #32]
   696f4:	ldr	r0, [sp, #32]
   696f8:	cmn	r0, #1
   696fc:	bne	69734 <__assert_fail@plt+0x56b7c>
   69700:	ldr	r1, [sp, #12]
   69704:	add	r0, sp, #20
   69708:	bl	639a8 <__assert_fail@plt+0x50df0>
   6970c:	str	r0, [fp, #-24]	; 0xffffffe8
   69710:	ldr	r0, [fp, #-24]	; 0xffffffe8
   69714:	cmp	r0, #0
   69718:	beq	69730 <__assert_fail@plt+0x56b78>
   6971c:	ldr	r0, [sp, #28]
   69720:	bl	50c68 <__assert_fail@plt+0x3e0b0>
   69724:	ldr	r0, [fp, #-24]	; 0xffffffe8
   69728:	str	r0, [fp, #-4]
   6972c:	b	697c8 <__assert_fail@plt+0x56c10>
   69730:	b	69784 <__assert_fail@plt+0x56bcc>
   69734:	ldr	r0, [fp, #-8]
   69738:	ldr	r2, [sp, #16]
   6973c:	ldr	r3, [fp, #-16]
   69740:	ldr	r1, [fp, #-20]	; 0xffffffec
   69744:	add	ip, sp, #20
   69748:	str	r1, [sp, #8]
   6974c:	mov	r1, ip
   69750:	ldr	ip, [sp, #8]
   69754:	str	ip, [sp]
   69758:	bl	69e90 <__assert_fail@plt+0x572d8>
   6975c:	str	r0, [fp, #-24]	; 0xffffffe8
   69760:	ldr	r0, [fp, #-24]	; 0xffffffe8
   69764:	cmp	r0, #0
   69768:	beq	69780 <__assert_fail@plt+0x56bc8>
   6976c:	ldr	r0, [sp, #28]
   69770:	bl	50c68 <__assert_fail@plt+0x3e0b0>
   69774:	ldr	r0, [fp, #-24]	; 0xffffffe8
   69778:	str	r0, [fp, #-4]
   6977c:	b	697c8 <__assert_fail@plt+0x56c10>
   69780:	b	69784 <__assert_fail@plt+0x56bcc>
   69784:	b	69788 <__assert_fail@plt+0x56bd0>
   69788:	ldr	r0, [fp, #-28]	; 0xffffffe4
   6978c:	add	r0, r0, #1
   69790:	str	r0, [fp, #-28]	; 0xffffffe4
   69794:	b	69694 <__assert_fail@plt+0x56adc>
   69798:	ldr	r0, [fp, #-12]
   6979c:	ldr	r0, [r0, #8]
   697a0:	bl	50c68 <__assert_fail@plt+0x3e0b0>
   697a4:	ldr	r0, [fp, #-12]
   697a8:	ldr	lr, [sp, #20]
   697ac:	str	lr, [r0]
   697b0:	ldr	lr, [sp, #24]
   697b4:	str	lr, [r0, #4]
   697b8:	ldr	lr, [sp, #28]
   697bc:	str	lr, [r0, #8]
   697c0:	movw	r0, #0
   697c4:	str	r0, [fp, #-4]
   697c8:	ldr	r0, [fp, #-4]
   697cc:	mov	sp, fp
   697d0:	pop	{fp, pc}
   697d4:	push	{fp, lr}
   697d8:	mov	fp, sp
   697dc:	sub	sp, sp, #112	; 0x70
   697e0:	ldr	ip, [fp, #8]
   697e4:	str	r0, [fp, #-8]
   697e8:	str	r1, [fp, #-12]
   697ec:	str	r2, [fp, #-16]
   697f0:	str	r3, [fp, #-20]	; 0xffffffec
   697f4:	ldr	r0, [fp, #-8]
   697f8:	ldr	r0, [r0, #84]	; 0x54
   697fc:	str	r0, [fp, #-24]	; 0xffffffe8
   69800:	ldr	r0, [fp, #-8]
   69804:	ldr	r1, [fp, #-16]
   69808:	str	ip, [sp, #28]
   6980c:	bl	687d8 <__assert_fail@plt+0x55c20>
   69810:	str	r0, [fp, #-32]	; 0xffffffe0
   69814:	ldr	r0, [fp, #-32]	; 0xffffffe0
   69818:	cmn	r0, #1
   6981c:	bne	6982c <__assert_fail@plt+0x56c74>
   69820:	movw	r0, #0
   69824:	str	r0, [fp, #-4]
   69828:	b	69b98 <__assert_fail@plt+0x56fe0>
   6982c:	b	69830 <__assert_fail@plt+0x56c78>
   69830:	ldr	r0, [fp, #-8]
   69834:	ldr	r0, [r0, #116]	; 0x74
   69838:	ldr	r1, [fp, #-32]	; 0xffffffe0
   6983c:	movw	r2, #24
   69840:	mul	r1, r1, r2
   69844:	add	r0, r0, r1
   69848:	str	r0, [fp, #-36]	; 0xffffffdc
   6984c:	ldr	r0, [fp, #-12]
   69850:	ldr	r1, [fp, #-36]	; 0xffffffdc
   69854:	ldr	r1, [r1]
   69858:	bl	64350 <__assert_fail@plt+0x51798>
   6985c:	cmp	r0, #0
   69860:	bne	69868 <__assert_fail@plt+0x56cb0>
   69864:	b	69b78 <__assert_fail@plt+0x56fc0>
   69868:	ldr	r0, [fp, #-16]
   6986c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   69870:	ldr	r1, [r1, #12]
   69874:	add	r0, r0, r1
   69878:	ldr	r1, [fp, #-36]	; 0xffffffdc
   6987c:	ldr	r1, [r1, #8]
   69880:	sub	r0, r0, r1
   69884:	str	r0, [fp, #-40]	; 0xffffffd8
   69888:	ldr	r0, [fp, #-40]	; 0xffffffd8
   6988c:	ldr	r1, [fp, #-16]
   69890:	cmp	r0, r1
   69894:	bne	699b8 <__assert_fail@plt+0x56e00>
   69898:	ldr	r0, [fp, #-24]	; 0xffffffe8
   6989c:	ldr	r0, [r0, #20]
   698a0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   698a4:	ldr	r1, [r1]
   698a8:	movw	r2, #12
   698ac:	mul	r1, r1, r2
   698b0:	add	r0, r0, r1
   698b4:	ldr	r0, [r0, #8]
   698b8:	ldr	r0, [r0]
   698bc:	str	r0, [fp, #-44]	; 0xffffffd4
   698c0:	ldr	r0, [fp, #-12]
   698c4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   698c8:	bl	64350 <__assert_fail@plt+0x51798>
   698cc:	cmp	r0, #0
   698d0:	beq	698d8 <__assert_fail@plt+0x56d20>
   698d4:	b	69b78 <__assert_fail@plt+0x56fc0>
   698d8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   698dc:	add	r0, sp, #56	; 0x38
   698e0:	bl	62fc8 <__assert_fail@plt+0x50410>
   698e4:	str	r0, [fp, #-28]	; 0xffffffe4
   698e8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   698ec:	ldr	r2, [fp, #-20]	; 0xffffffec
   698f0:	ldr	r3, [fp, #8]
   698f4:	add	r1, sp, #56	; 0x38
   698f8:	bl	69630 <__assert_fail@plt+0x56a78>
   698fc:	str	r0, [sp, #52]	; 0x34
   69900:	ldr	r0, [fp, #-12]
   69904:	add	r1, sp, #56	; 0x38
   69908:	bl	639a8 <__assert_fail@plt+0x50df0>
   6990c:	str	r0, [sp, #48]	; 0x30
   69910:	ldr	r0, [sp, #64]	; 0x40
   69914:	bl	50c68 <__assert_fail@plt+0x3e0b0>
   69918:	ldr	r0, [fp, #-28]	; 0xffffffe4
   6991c:	cmp	r0, #0
   69920:	movw	r0, #1
   69924:	str	r0, [sp, #24]
   69928:	bne	69954 <__assert_fail@plt+0x56d9c>
   6992c:	ldr	r0, [sp, #52]	; 0x34
   69930:	cmp	r0, #0
   69934:	movw	r0, #1
   69938:	str	r0, [sp, #24]
   6993c:	bne	69954 <__assert_fail@plt+0x56d9c>
   69940:	ldr	r0, [sp, #48]	; 0x30
   69944:	cmp	r0, #0
   69948:	movw	r0, #0
   6994c:	movne	r0, #1
   69950:	str	r0, [sp, #24]
   69954:	ldr	r0, [sp, #24]
   69958:	tst	r0, #1
   6995c:	beq	699b4 <__assert_fail@plt+0x56dfc>
   69960:	ldr	r0, [fp, #-28]	; 0xffffffe4
   69964:	cmp	r0, #0
   69968:	beq	69978 <__assert_fail@plt+0x56dc0>
   6996c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   69970:	str	r0, [sp, #20]
   69974:	b	699a0 <__assert_fail@plt+0x56de8>
   69978:	ldr	r0, [sp, #52]	; 0x34
   6997c:	cmp	r0, #0
   69980:	beq	69990 <__assert_fail@plt+0x56dd8>
   69984:	ldr	r0, [sp, #52]	; 0x34
   69988:	str	r0, [sp, #16]
   6998c:	b	69998 <__assert_fail@plt+0x56de0>
   69990:	ldr	r0, [sp, #48]	; 0x30
   69994:	str	r0, [sp, #16]
   69998:	ldr	r0, [sp, #16]
   6999c:	str	r0, [sp, #20]
   699a0:	ldr	r0, [sp, #20]
   699a4:	str	r0, [fp, #-28]	; 0xffffffe4
   699a8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   699ac:	str	r0, [fp, #-4]
   699b0:	b	69b98 <__assert_fail@plt+0x56fe0>
   699b4:	b	69830 <__assert_fail@plt+0x56c78>
   699b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   699bc:	ldr	r0, [r0, #12]
   699c0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   699c4:	ldr	r1, [r1]
   699c8:	ldr	r0, [r0, r1, lsl #2]
   699cc:	str	r0, [fp, #-44]	; 0xffffffd4
   699d0:	ldr	r0, [fp, #-8]
   699d4:	ldr	r0, [r0, #100]	; 0x64
   699d8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   699dc:	add	r0, r0, r1, lsl #2
   699e0:	ldr	r0, [r0]
   699e4:	movw	r1, #0
   699e8:	cmp	r0, r1
   699ec:	beq	69ac8 <__assert_fail@plt+0x56f10>
   699f0:	ldr	r0, [fp, #-8]
   699f4:	ldr	r0, [r0, #100]	; 0x64
   699f8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   699fc:	add	r0, r0, r1, lsl #2
   69a00:	ldr	r0, [r0]
   69a04:	add	r0, r0, #4
   69a08:	ldr	r1, [fp, #-44]	; 0xffffffd4
   69a0c:	bl	64350 <__assert_fail@plt+0x51798>
   69a10:	cmp	r0, #0
   69a14:	beq	69a1c <__assert_fail@plt+0x56e64>
   69a18:	b	69b78 <__assert_fail@plt+0x56fc0>
   69a1c:	ldr	r0, [fp, #-8]
   69a20:	ldr	r0, [r0, #100]	; 0x64
   69a24:	ldr	r1, [fp, #-40]	; 0xffffffd8
   69a28:	add	r0, r0, r1, lsl #2
   69a2c:	ldr	r0, [r0]
   69a30:	add	r1, r0, #4
   69a34:	add	r0, sp, #36	; 0x24
   69a38:	bl	6427c <__assert_fail@plt+0x516c4>
   69a3c:	str	r0, [fp, #-28]	; 0xffffffe4
   69a40:	ldr	r1, [fp, #-44]	; 0xffffffd4
   69a44:	add	r0, sp, #36	; 0x24
   69a48:	bl	63e94 <__assert_fail@plt+0x512dc>
   69a4c:	and	r0, r0, #1
   69a50:	strb	r0, [sp, #35]	; 0x23
   69a54:	ldr	r0, [fp, #-28]	; 0xffffffe4
   69a58:	cmp	r0, #0
   69a5c:	movw	r0, #1
   69a60:	str	r0, [sp, #12]
   69a64:	bne	69a78 <__assert_fail@plt+0x56ec0>
   69a68:	ldrb	r0, [sp, #35]	; 0x23
   69a6c:	mvn	r1, #0
   69a70:	eor	r0, r0, r1
   69a74:	str	r0, [sp, #12]
   69a78:	ldr	r0, [sp, #12]
   69a7c:	tst	r0, #1
   69a80:	beq	69ac4 <__assert_fail@plt+0x56f0c>
   69a84:	ldr	r0, [sp, #44]	; 0x2c
   69a88:	bl	50c68 <__assert_fail@plt+0x3e0b0>
   69a8c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   69a90:	cmp	r0, #0
   69a94:	beq	69aa4 <__assert_fail@plt+0x56eec>
   69a98:	ldr	r0, [fp, #-28]	; 0xffffffe4
   69a9c:	str	r0, [sp, #8]
   69aa0:	b	69ab0 <__assert_fail@plt+0x56ef8>
   69aa4:	movw	r0, #12
   69aa8:	str	r0, [sp, #8]
   69aac:	b	69ab0 <__assert_fail@plt+0x56ef8>
   69ab0:	ldr	r0, [sp, #8]
   69ab4:	str	r0, [fp, #-28]	; 0xffffffe4
   69ab8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   69abc:	str	r0, [fp, #-4]
   69ac0:	b	69b98 <__assert_fail@plt+0x56fe0>
   69ac4:	b	69af4 <__assert_fail@plt+0x56f3c>
   69ac8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   69acc:	add	r0, sp, #36	; 0x24
   69ad0:	bl	62fc8 <__assert_fail@plt+0x50410>
   69ad4:	str	r0, [fp, #-28]	; 0xffffffe4
   69ad8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   69adc:	cmp	r0, #0
   69ae0:	beq	69af0 <__assert_fail@plt+0x56f38>
   69ae4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   69ae8:	str	r0, [fp, #-4]
   69aec:	b	69b98 <__assert_fail@plt+0x56fe0>
   69af0:	b	69af4 <__assert_fail@plt+0x56f3c>
   69af4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   69af8:	sub	r0, fp, #28
   69afc:	add	r2, sp, #36	; 0x24
   69b00:	bl	6a084 <__assert_fail@plt+0x574cc>
   69b04:	ldr	r1, [fp, #-8]
   69b08:	ldr	r1, [r1, #100]	; 0x64
   69b0c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   69b10:	str	r0, [r1, r2, lsl #2]
   69b14:	ldr	r0, [sp, #44]	; 0x2c
   69b18:	bl	50c68 <__assert_fail@plt+0x3e0b0>
   69b1c:	ldr	r0, [fp, #-8]
   69b20:	ldr	r0, [r0, #100]	; 0x64
   69b24:	ldr	r1, [fp, #-40]	; 0xffffffd8
   69b28:	add	r0, r0, r1, lsl #2
   69b2c:	ldr	r0, [r0]
   69b30:	movw	r1, #0
   69b34:	cmp	r0, r1
   69b38:	movw	r0, #0
   69b3c:	str	r0, [sp, #4]
   69b40:	bne	69b58 <__assert_fail@plt+0x56fa0>
   69b44:	ldr	r0, [fp, #-28]	; 0xffffffe4
   69b48:	cmp	r0, #0
   69b4c:	movw	r0, #0
   69b50:	movne	r0, #1
   69b54:	str	r0, [sp, #4]
   69b58:	ldr	r0, [sp, #4]
   69b5c:	tst	r0, #1
   69b60:	beq	69b70 <__assert_fail@plt+0x56fb8>
   69b64:	ldr	r0, [fp, #-28]	; 0xffffffe4
   69b68:	str	r0, [fp, #-4]
   69b6c:	b	69b98 <__assert_fail@plt+0x56fe0>
   69b70:	b	69b74 <__assert_fail@plt+0x56fbc>
   69b74:	b	69b78 <__assert_fail@plt+0x56fc0>
   69b78:	ldr	r0, [fp, #-36]	; 0xffffffdc
   69b7c:	add	r1, r0, #24
   69b80:	str	r1, [fp, #-36]	; 0xffffffdc
   69b84:	ldrsb	r0, [r0, #20]
   69b88:	cmp	r0, #0
   69b8c:	bne	6984c <__assert_fail@plt+0x56c94>
   69b90:	movw	r0, #0
   69b94:	str	r0, [fp, #-4]
   69b98:	ldr	r0, [fp, #-4]
   69b9c:	mov	sp, fp
   69ba0:	pop	{fp, pc}
   69ba4:	push	{fp, lr}
   69ba8:	mov	fp, sp
   69bac:	sub	sp, sp, #80	; 0x50
   69bb0:	str	r0, [fp, #-8]
   69bb4:	str	r1, [fp, #-12]
   69bb8:	str	r2, [fp, #-16]
   69bbc:	str	r3, [fp, #-20]	; 0xffffffec
   69bc0:	ldr	r0, [fp, #-8]
   69bc4:	ldr	r0, [r0, #84]	; 0x54
   69bc8:	str	r0, [fp, #-24]	; 0xffffffe8
   69bcc:	movw	r0, #0
   69bd0:	str	r0, [fp, #-36]	; 0xffffffdc
   69bd4:	add	r1, sp, #32
   69bd8:	str	r0, [sp, #8]
   69bdc:	mov	r0, r1
   69be0:	movw	r1, #0
   69be4:	and	r1, r1, #255	; 0xff
   69be8:	movw	r2, #12
   69bec:	bl	12900 <memset@plt>
   69bf0:	ldr	r0, [sp, #8]
   69bf4:	str	r0, [fp, #-32]	; 0xffffffe0
   69bf8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   69bfc:	ldr	r1, [fp, #-16]
   69c00:	ldr	r1, [r1, #4]
   69c04:	cmp	r0, r1
   69c08:	bge	69e74 <__assert_fail@plt+0x572bc>
   69c0c:	mov	r0, #0
   69c10:	str	r0, [sp, #28]
   69c14:	ldr	r0, [fp, #-16]
   69c18:	ldr	r0, [r0, #8]
   69c1c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   69c20:	ldr	r0, [r0, r1, lsl #2]
   69c24:	str	r0, [sp, #24]
   69c28:	ldr	r0, [fp, #-24]	; 0xffffffe8
   69c2c:	ldr	r0, [r0]
   69c30:	ldr	r1, [sp, #24]
   69c34:	add	r0, r0, r1, lsl #3
   69c38:	ldr	r0, [r0, #4]
   69c3c:	and	r0, r0, #255	; 0xff
   69c40:	and	r0, r0, #8
   69c44:	cmp	r0, #0
   69c48:	bne	69c50 <__assert_fail@plt+0x57098>
   69c4c:	b	69c50 <__assert_fail@plt+0x57098>
   69c50:	ldr	r0, [fp, #-24]	; 0xffffffe8
   69c54:	ldr	r0, [r0]
   69c58:	ldr	r1, [sp, #24]
   69c5c:	add	r0, r0, r1, lsl #3
   69c60:	ldr	r0, [r0, #4]
   69c64:	lsr	r0, r0, #20
   69c68:	and	r0, r0, #1
   69c6c:	cmp	r0, #0
   69c70:	beq	69de0 <__assert_fail@plt+0x57228>
   69c74:	ldr	r0, [fp, #-24]	; 0xffffffe8
   69c78:	ldr	r1, [sp, #24]
   69c7c:	ldr	r2, [fp, #-8]
   69c80:	ldr	r3, [fp, #-12]
   69c84:	bl	6a3dc <__assert_fail@plt+0x57824>
   69c88:	str	r0, [sp, #28]
   69c8c:	ldr	r0, [sp, #28]
   69c90:	cmp	r0, #1
   69c94:	ble	69ddc <__assert_fail@plt+0x57224>
   69c98:	ldr	r0, [fp, #-24]	; 0xffffffe8
   69c9c:	ldr	r0, [r0, #12]
   69ca0:	ldr	r1, [sp, #24]
   69ca4:	ldr	r0, [r0, r1, lsl #2]
   69ca8:	str	r0, [sp, #16]
   69cac:	ldr	r0, [fp, #-12]
   69cb0:	ldr	r1, [sp, #28]
   69cb4:	add	r0, r0, r1
   69cb8:	str	r0, [sp, #12]
   69cbc:	ldr	r0, [fp, #-8]
   69cc0:	ldr	r0, [r0, #100]	; 0x64
   69cc4:	ldr	r1, [sp, #12]
   69cc8:	add	r0, r0, r1, lsl #2
   69ccc:	ldr	r0, [r0]
   69cd0:	str	r0, [sp, #20]
   69cd4:	movw	r0, #0
   69cd8:	str	r0, [sp, #36]	; 0x24
   69cdc:	ldr	r1, [sp, #20]
   69ce0:	cmp	r1, r0
   69ce4:	beq	69d20 <__assert_fail@plt+0x57168>
   69ce8:	ldr	r0, [sp, #20]
   69cec:	add	r1, r0, #4
   69cf0:	add	r0, sp, #32
   69cf4:	bl	639a8 <__assert_fail@plt+0x50df0>
   69cf8:	str	r0, [fp, #-36]	; 0xffffffdc
   69cfc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   69d00:	cmp	r0, #0
   69d04:	beq	69d1c <__assert_fail@plt+0x57164>
   69d08:	ldr	r0, [sp, #40]	; 0x28
   69d0c:	bl	50c68 <__assert_fail@plt+0x3e0b0>
   69d10:	ldr	r0, [fp, #-36]	; 0xffffffdc
   69d14:	str	r0, [fp, #-4]
   69d18:	b	69e84 <__assert_fail@plt+0x572cc>
   69d1c:	b	69d20 <__assert_fail@plt+0x57168>
   69d20:	ldr	r1, [sp, #16]
   69d24:	add	r0, sp, #32
   69d28:	bl	63e94 <__assert_fail@plt+0x512dc>
   69d2c:	and	r0, r0, #1
   69d30:	strb	r0, [fp, #-25]	; 0xffffffe7
   69d34:	ldrb	r0, [fp, #-25]	; 0xffffffe7
   69d38:	mvn	r1, #0
   69d3c:	eor	r0, r0, r1
   69d40:	tst	r0, #1
   69d44:	beq	69d5c <__assert_fail@plt+0x571a4>
   69d48:	ldr	r0, [sp, #40]	; 0x28
   69d4c:	bl	50c68 <__assert_fail@plt+0x3e0b0>
   69d50:	movw	r0, #12
   69d54:	str	r0, [fp, #-4]
   69d58:	b	69e84 <__assert_fail@plt+0x572cc>
   69d5c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   69d60:	sub	r0, fp, #36	; 0x24
   69d64:	add	r2, sp, #32
   69d68:	bl	6a084 <__assert_fail@plt+0x574cc>
   69d6c:	ldr	r1, [fp, #-8]
   69d70:	ldr	r1, [r1, #100]	; 0x64
   69d74:	ldr	r2, [sp, #12]
   69d78:	str	r0, [r1, r2, lsl #2]
   69d7c:	ldr	r0, [fp, #-8]
   69d80:	ldr	r0, [r0, #100]	; 0x64
   69d84:	ldr	r1, [sp, #12]
   69d88:	add	r0, r0, r1, lsl #2
   69d8c:	ldr	r0, [r0]
   69d90:	movw	r1, #0
   69d94:	cmp	r0, r1
   69d98:	movw	r0, #0
   69d9c:	str	r0, [sp, #4]
   69da0:	bne	69db8 <__assert_fail@plt+0x57200>
   69da4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   69da8:	cmp	r0, #0
   69dac:	movw	r0, #0
   69db0:	movne	r0, #1
   69db4:	str	r0, [sp, #4]
   69db8:	ldr	r0, [sp, #4]
   69dbc:	tst	r0, #1
   69dc0:	beq	69dd8 <__assert_fail@plt+0x57220>
   69dc4:	ldr	r0, [sp, #40]	; 0x28
   69dc8:	bl	50c68 <__assert_fail@plt+0x3e0b0>
   69dcc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   69dd0:	str	r0, [fp, #-4]
   69dd4:	b	69e84 <__assert_fail@plt+0x572cc>
   69dd8:	b	69ddc <__assert_fail@plt+0x57224>
   69ddc:	b	69de0 <__assert_fail@plt+0x57228>
   69de0:	ldr	r0, [sp, #28]
   69de4:	cmp	r0, #0
   69de8:	bne	69e10 <__assert_fail@plt+0x57258>
   69dec:	ldr	r0, [fp, #-8]
   69df0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   69df4:	ldr	r1, [r1]
   69df8:	ldr	r2, [sp, #24]
   69dfc:	add	r1, r1, r2, lsl #3
   69e00:	ldr	r2, [fp, #-12]
   69e04:	bl	6a9c4 <__assert_fail@plt+0x57e0c>
   69e08:	tst	r0, #1
   69e0c:	beq	69e60 <__assert_fail@plt+0x572a8>
   69e10:	ldr	r0, [fp, #-20]	; 0xffffffec
   69e14:	ldr	r1, [fp, #-24]	; 0xffffffe8
   69e18:	ldr	r1, [r1, #12]
   69e1c:	ldr	r2, [sp, #24]
   69e20:	add	r1, r1, r2, lsl #2
   69e24:	ldr	r1, [r1]
   69e28:	bl	63e94 <__assert_fail@plt+0x512dc>
   69e2c:	and	r0, r0, #1
   69e30:	strb	r0, [fp, #-25]	; 0xffffffe7
   69e34:	ldrb	r0, [fp, #-25]	; 0xffffffe7
   69e38:	mvn	r1, #0
   69e3c:	eor	r0, r0, r1
   69e40:	tst	r0, #1
   69e44:	beq	69e5c <__assert_fail@plt+0x572a4>
   69e48:	ldr	r0, [sp, #40]	; 0x28
   69e4c:	bl	50c68 <__assert_fail@plt+0x3e0b0>
   69e50:	movw	r0, #12
   69e54:	str	r0, [fp, #-4]
   69e58:	b	69e84 <__assert_fail@plt+0x572cc>
   69e5c:	b	69e60 <__assert_fail@plt+0x572a8>
   69e60:	b	69e64 <__assert_fail@plt+0x572ac>
   69e64:	ldr	r0, [fp, #-32]	; 0xffffffe0
   69e68:	add	r0, r0, #1
   69e6c:	str	r0, [fp, #-32]	; 0xffffffe0
   69e70:	b	69bf8 <__assert_fail@plt+0x57040>
   69e74:	ldr	r0, [sp, #40]	; 0x28
   69e78:	bl	50c68 <__assert_fail@plt+0x3e0b0>
   69e7c:	movw	r0, #0
   69e80:	str	r0, [fp, #-4]
   69e84:	ldr	r0, [fp, #-4]
   69e88:	mov	sp, fp
   69e8c:	pop	{fp, pc}
   69e90:	push	{fp, lr}
   69e94:	mov	fp, sp
   69e98:	sub	sp, sp, #40	; 0x28
   69e9c:	ldr	ip, [fp, #8]
   69ea0:	str	r0, [fp, #-8]
   69ea4:	str	r1, [fp, #-12]
   69ea8:	str	r2, [fp, #-16]
   69eac:	str	r3, [sp, #20]
   69eb0:	ldr	r0, [fp, #-16]
   69eb4:	str	r0, [sp, #16]
   69eb8:	str	ip, [sp, #4]
   69ebc:	ldr	r0, [fp, #-12]
   69ec0:	ldr	r1, [sp, #16]
   69ec4:	bl	64350 <__assert_fail@plt+0x51798>
   69ec8:	cmp	r0, #0
   69ecc:	movw	r0, #0
   69ed0:	movne	r0, #1
   69ed4:	mvn	r1, #0
   69ed8:	eor	r0, r0, r1
   69edc:	tst	r0, #1
   69ee0:	beq	6a070 <__assert_fail@plt+0x574b8>
   69ee4:	ldr	r0, [fp, #-8]
   69ee8:	ldr	r0, [r0]
   69eec:	ldr	r1, [sp, #16]
   69ef0:	add	r0, r0, r1, lsl #3
   69ef4:	ldr	r0, [r0, #4]
   69ef8:	and	r0, r0, #255	; 0xff
   69efc:	ldr	r1, [fp, #8]
   69f00:	cmp	r0, r1
   69f04:	bne	69f70 <__assert_fail@plt+0x573b8>
   69f08:	ldr	r0, [fp, #-8]
   69f0c:	ldr	r0, [r0]
   69f10:	ldr	r1, [sp, #16]
   69f14:	add	r0, r0, r1, lsl #3
   69f18:	ldr	r0, [r0]
   69f1c:	ldr	r1, [sp, #20]
   69f20:	cmp	r0, r1
   69f24:	bne	69f70 <__assert_fail@plt+0x573b8>
   69f28:	ldr	r0, [fp, #8]
   69f2c:	cmp	r0, #9
   69f30:	bne	69f6c <__assert_fail@plt+0x573b4>
   69f34:	ldr	r0, [fp, #-12]
   69f38:	ldr	r1, [sp, #16]
   69f3c:	bl	63e94 <__assert_fail@plt+0x512dc>
   69f40:	and	r0, r0, #1
   69f44:	strb	r0, [sp, #15]
   69f48:	ldrb	r0, [sp, #15]
   69f4c:	mvn	r1, #0
   69f50:	eor	r0, r0, r1
   69f54:	tst	r0, #1
   69f58:	beq	69f68 <__assert_fail@plt+0x573b0>
   69f5c:	movw	r0, #12
   69f60:	str	r0, [fp, #-4]
   69f64:	b	6a078 <__assert_fail@plt+0x574c0>
   69f68:	b	69f6c <__assert_fail@plt+0x573b4>
   69f6c:	b	6a070 <__assert_fail@plt+0x574b8>
   69f70:	ldr	r0, [fp, #-12]
   69f74:	ldr	r1, [sp, #16]
   69f78:	bl	63e94 <__assert_fail@plt+0x512dc>
   69f7c:	and	r0, r0, #1
   69f80:	strb	r0, [sp, #15]
   69f84:	ldrb	r0, [sp, #15]
   69f88:	mvn	r1, #0
   69f8c:	eor	r0, r0, r1
   69f90:	tst	r0, #1
   69f94:	beq	69fa4 <__assert_fail@plt+0x573ec>
   69f98:	movw	r0, #12
   69f9c:	str	r0, [fp, #-4]
   69fa0:	b	6a078 <__assert_fail@plt+0x574c0>
   69fa4:	ldr	r0, [fp, #-8]
   69fa8:	ldr	r0, [r0, #20]
   69fac:	ldr	r1, [sp, #16]
   69fb0:	movw	r2, #12
   69fb4:	mul	r1, r1, r2
   69fb8:	add	r0, r0, r1
   69fbc:	ldr	r0, [r0, #4]
   69fc0:	cmp	r0, #0
   69fc4:	bne	69fcc <__assert_fail@plt+0x57414>
   69fc8:	b	6a070 <__assert_fail@plt+0x574b8>
   69fcc:	ldr	r0, [fp, #-8]
   69fd0:	ldr	r0, [r0, #20]
   69fd4:	ldr	r1, [sp, #16]
   69fd8:	movw	r2, #12
   69fdc:	mul	r1, r1, r2
   69fe0:	add	r0, r0, r1
   69fe4:	ldr	r0, [r0, #4]
   69fe8:	cmp	r0, #2
   69fec:	bne	6a048 <__assert_fail@plt+0x57490>
   69ff0:	ldr	r0, [fp, #-8]
   69ff4:	ldr	r1, [fp, #-12]
   69ff8:	ldr	r2, [fp, #-8]
   69ffc:	ldr	r2, [r2, #20]
   6a000:	ldr	r3, [sp, #16]
   6a004:	movw	ip, #12
   6a008:	mul	r3, r3, ip
   6a00c:	add	r2, r2, r3
   6a010:	ldr	r2, [r2, #8]
   6a014:	ldr	r2, [r2, #4]
   6a018:	ldr	r3, [sp, #20]
   6a01c:	ldr	ip, [fp, #8]
   6a020:	str	ip, [sp]
   6a024:	bl	69e90 <__assert_fail@plt+0x572d8>
   6a028:	str	r0, [sp, #8]
   6a02c:	ldr	r0, [sp, #8]
   6a030:	cmp	r0, #0
   6a034:	beq	6a044 <__assert_fail@plt+0x5748c>
   6a038:	ldr	r0, [sp, #8]
   6a03c:	str	r0, [fp, #-4]
   6a040:	b	6a078 <__assert_fail@plt+0x574c0>
   6a044:	b	6a048 <__assert_fail@plt+0x57490>
   6a048:	ldr	r0, [fp, #-8]
   6a04c:	ldr	r0, [r0, #20]
   6a050:	ldr	r1, [sp, #16]
   6a054:	movw	r2, #12
   6a058:	mul	r1, r1, r2
   6a05c:	add	r0, r0, r1
   6a060:	ldr	r0, [r0, #8]
   6a064:	ldr	r0, [r0]
   6a068:	str	r0, [sp, #16]
   6a06c:	b	69ebc <__assert_fail@plt+0x57304>
   6a070:	movw	r0, #0
   6a074:	str	r0, [fp, #-4]
   6a078:	ldr	r0, [fp, #-4]
   6a07c:	mov	sp, fp
   6a080:	pop	{fp, pc}
   6a084:	push	{fp, lr}
   6a088:	mov	fp, sp
   6a08c:	sub	sp, sp, #40	; 0x28
   6a090:	str	r0, [fp, #-8]
   6a094:	str	r1, [fp, #-12]
   6a098:	str	r2, [fp, #-16]
   6a09c:	ldr	r0, [fp, #-16]
   6a0a0:	ldr	r0, [r0, #4]
   6a0a4:	cmp	r0, #0
   6a0a8:	bne	6a0c0 <__assert_fail@plt+0x57508>
   6a0ac:	ldr	r0, [fp, #-8]
   6a0b0:	movw	r1, #0
   6a0b4:	str	r1, [r0]
   6a0b8:	str	r1, [fp, #-4]
   6a0bc:	b	6a1b4 <__assert_fail@plt+0x575fc>
   6a0c0:	ldr	r0, [fp, #-16]
   6a0c4:	movw	r1, #0
   6a0c8:	bl	6459c <__assert_fail@plt+0x519e4>
   6a0cc:	str	r0, [sp, #20]
   6a0d0:	ldr	r0, [fp, #-12]
   6a0d4:	ldr	r0, [r0, #32]
   6a0d8:	ldr	r1, [sp, #20]
   6a0dc:	ldr	lr, [fp, #-12]
   6a0e0:	ldr	lr, [lr, #68]	; 0x44
   6a0e4:	and	r1, r1, lr
   6a0e8:	movw	lr, #12
   6a0ec:	mul	r1, r1, lr
   6a0f0:	add	r0, r0, r1
   6a0f4:	str	r0, [sp, #12]
   6a0f8:	movw	r0, #0
   6a0fc:	str	r0, [sp, #8]
   6a100:	ldr	r0, [sp, #8]
   6a104:	ldr	r1, [sp, #12]
   6a108:	ldr	r1, [r1]
   6a10c:	cmp	r0, r1
   6a110:	bge	6a17c <__assert_fail@plt+0x575c4>
   6a114:	ldr	r0, [sp, #12]
   6a118:	ldr	r0, [r0, #8]
   6a11c:	ldr	r1, [sp, #8]
   6a120:	add	r0, r0, r1, lsl #2
   6a124:	ldr	r0, [r0]
   6a128:	str	r0, [sp, #4]
   6a12c:	ldr	r0, [sp, #20]
   6a130:	ldr	r1, [sp, #4]
   6a134:	ldr	r1, [r1]
   6a138:	cmp	r0, r1
   6a13c:	beq	6a144 <__assert_fail@plt+0x5758c>
   6a140:	b	6a16c <__assert_fail@plt+0x575b4>
   6a144:	ldr	r0, [sp, #4]
   6a148:	add	r0, r0, #4
   6a14c:	ldr	r1, [fp, #-16]
   6a150:	bl	64614 <__assert_fail@plt+0x51a5c>
   6a154:	tst	r0, #1
   6a158:	beq	6a168 <__assert_fail@plt+0x575b0>
   6a15c:	ldr	r0, [sp, #4]
   6a160:	str	r0, [fp, #-4]
   6a164:	b	6a1b4 <__assert_fail@plt+0x575fc>
   6a168:	b	6a16c <__assert_fail@plt+0x575b4>
   6a16c:	ldr	r0, [sp, #8]
   6a170:	add	r0, r0, #1
   6a174:	str	r0, [sp, #8]
   6a178:	b	6a100 <__assert_fail@plt+0x57548>
   6a17c:	ldr	r0, [fp, #-12]
   6a180:	ldr	r1, [fp, #-16]
   6a184:	ldr	r2, [sp, #20]
   6a188:	bl	6a1c0 <__assert_fail@plt+0x57608>
   6a18c:	str	r0, [sp, #16]
   6a190:	ldr	r0, [sp, #16]
   6a194:	movw	r1, #0
   6a198:	cmp	r0, r1
   6a19c:	bne	6a1ac <__assert_fail@plt+0x575f4>
   6a1a0:	ldr	r0, [fp, #-8]
   6a1a4:	movw	r1, #12
   6a1a8:	str	r1, [r0]
   6a1ac:	ldr	r0, [sp, #16]
   6a1b0:	str	r0, [fp, #-4]
   6a1b4:	ldr	r0, [fp, #-4]
   6a1b8:	mov	sp, fp
   6a1bc:	pop	{fp, pc}
   6a1c0:	push	{fp, lr}
   6a1c4:	mov	fp, sp
   6a1c8:	sub	sp, sp, #40	; 0x28
   6a1cc:	str	r0, [fp, #-8]
   6a1d0:	str	r1, [fp, #-12]
   6a1d4:	str	r2, [fp, #-16]
   6a1d8:	movw	r0, #56	; 0x38
   6a1dc:	movw	r1, #1
   6a1e0:	bl	50240 <__assert_fail@plt+0x3d688>
   6a1e4:	str	r0, [sp, #12]
   6a1e8:	ldr	r0, [sp, #12]
   6a1ec:	movw	r1, #0
   6a1f0:	cmp	r0, r1
   6a1f4:	bne	6a204 <__assert_fail@plt+0x5764c>
   6a1f8:	movw	r0, #0
   6a1fc:	str	r0, [fp, #-4]
   6a200:	b	6a3d0 <__assert_fail@plt+0x57818>
   6a204:	ldr	r0, [sp, #12]
   6a208:	add	r0, r0, #4
   6a20c:	ldr	r1, [fp, #-12]
   6a210:	bl	6427c <__assert_fail@plt+0x516c4>
   6a214:	str	r0, [sp, #16]
   6a218:	ldr	r0, [sp, #16]
   6a21c:	cmp	r0, #0
   6a220:	beq	6a238 <__assert_fail@plt+0x57680>
   6a224:	ldr	r0, [sp, #12]
   6a228:	bl	50c68 <__assert_fail@plt+0x3e0b0>
   6a22c:	movw	r0, #0
   6a230:	str	r0, [fp, #-4]
   6a234:	b	6a3d0 <__assert_fail@plt+0x57818>
   6a238:	ldr	r0, [sp, #12]
   6a23c:	add	r0, r0, #4
   6a240:	ldr	r1, [sp, #12]
   6a244:	str	r0, [r1, #40]	; 0x28
   6a248:	movw	r0, #0
   6a24c:	str	r0, [sp, #20]
   6a250:	ldr	r0, [sp, #20]
   6a254:	ldr	r1, [fp, #-12]
   6a258:	ldr	r1, [r1, #4]
   6a25c:	cmp	r0, r1
   6a260:	bge	6a398 <__assert_fail@plt+0x577e0>
   6a264:	ldr	r0, [fp, #-8]
   6a268:	ldr	r0, [r0]
   6a26c:	ldr	r1, [fp, #-12]
   6a270:	ldr	r1, [r1, #8]
   6a274:	ldr	r2, [sp, #20]
   6a278:	ldr	r1, [r1, r2, lsl #2]
   6a27c:	add	r0, r0, r1, lsl #3
   6a280:	str	r0, [sp, #8]
   6a284:	ldr	r0, [sp, #8]
   6a288:	ldr	r0, [r0, #4]
   6a28c:	and	r0, r0, #255	; 0xff
   6a290:	str	r0, [sp, #4]
   6a294:	ldr	r0, [sp, #4]
   6a298:	cmp	r0, #1
   6a29c:	bne	6a2c0 <__assert_fail@plt+0x57708>
   6a2a0:	ldr	r0, [sp, #8]
   6a2a4:	ldr	r0, [r0, #4]
   6a2a8:	lsr	r0, r0, #8
   6a2ac:	movw	r1, #1023	; 0x3ff
   6a2b0:	and	r0, r0, r1
   6a2b4:	cmp	r0, #0
   6a2b8:	bne	6a2c0 <__assert_fail@plt+0x57708>
   6a2bc:	b	6a388 <__assert_fail@plt+0x577d0>
   6a2c0:	ldr	r0, [sp, #8]
   6a2c4:	ldr	r0, [r0, #4]
   6a2c8:	ldr	r1, [sp, #12]
   6a2cc:	ldrb	r2, [r1, #52]	; 0x34
   6a2d0:	lsr	r3, r2, #5
   6a2d4:	orr	r0, r3, r0, lsr #20
   6a2d8:	and	r0, r0, #1
   6a2dc:	lsl	r0, r0, #5
   6a2e0:	bic	r2, r2, #32
   6a2e4:	orr	r0, r2, r0
   6a2e8:	strb	r0, [r1, #52]	; 0x34
   6a2ec:	ldr	r0, [sp, #4]
   6a2f0:	cmp	r0, #2
   6a2f4:	bne	6a314 <__assert_fail@plt+0x5775c>
   6a2f8:	ldr	r0, [sp, #12]
   6a2fc:	ldrb	r1, [r0, #52]	; 0x34
   6a300:	bic	r1, r1, #16
   6a304:	movw	r2, #16
   6a308:	orr	r1, r1, r2
   6a30c:	strb	r1, [r0, #52]	; 0x34
   6a310:	b	6a384 <__assert_fail@plt+0x577cc>
   6a314:	ldr	r0, [sp, #4]
   6a318:	cmp	r0, #4
   6a31c:	bne	6a33c <__assert_fail@plt+0x57784>
   6a320:	ldr	r0, [sp, #12]
   6a324:	ldrb	r1, [r0, #52]	; 0x34
   6a328:	bic	r1, r1, #64	; 0x40
   6a32c:	movw	r2, #64	; 0x40
   6a330:	orr	r1, r1, r2
   6a334:	strb	r1, [r0, #52]	; 0x34
   6a338:	b	6a380 <__assert_fail@plt+0x577c8>
   6a33c:	ldr	r0, [sp, #4]
   6a340:	cmp	r0, #12
   6a344:	beq	6a364 <__assert_fail@plt+0x577ac>
   6a348:	ldr	r0, [sp, #8]
   6a34c:	ldr	r0, [r0, #4]
   6a350:	lsr	r0, r0, #8
   6a354:	movw	r1, #1023	; 0x3ff
   6a358:	and	r0, r0, r1
   6a35c:	cmp	r0, #0
   6a360:	beq	6a37c <__assert_fail@plt+0x577c4>
   6a364:	ldr	r0, [sp, #12]
   6a368:	ldrb	r1, [r0, #52]	; 0x34
   6a36c:	and	r1, r1, #127	; 0x7f
   6a370:	movw	r2, #128	; 0x80
   6a374:	orr	r1, r1, r2
   6a378:	strb	r1, [r0, #52]	; 0x34
   6a37c:	b	6a380 <__assert_fail@plt+0x577c8>
   6a380:	b	6a384 <__assert_fail@plt+0x577cc>
   6a384:	b	6a388 <__assert_fail@plt+0x577d0>
   6a388:	ldr	r0, [sp, #20]
   6a38c:	add	r0, r0, #1
   6a390:	str	r0, [sp, #20]
   6a394:	b	6a250 <__assert_fail@plt+0x57698>
   6a398:	ldr	r0, [fp, #-8]
   6a39c:	ldr	r1, [sp, #12]
   6a3a0:	ldr	r2, [fp, #-16]
   6a3a4:	bl	64ac4 <__assert_fail@plt+0x51f0c>
   6a3a8:	str	r0, [sp, #16]
   6a3ac:	ldr	r0, [sp, #16]
   6a3b0:	cmp	r0, #0
   6a3b4:	beq	6a3c8 <__assert_fail@plt+0x57810>
   6a3b8:	ldr	r0, [sp, #12]
   6a3bc:	bl	59c9c <__assert_fail@plt+0x470e4>
   6a3c0:	movw	r0, #0
   6a3c4:	str	r0, [sp, #12]
   6a3c8:	ldr	r0, [sp, #12]
   6a3cc:	str	r0, [fp, #-4]
   6a3d0:	ldr	r0, [fp, #-4]
   6a3d4:	mov	sp, fp
   6a3d8:	pop	{fp, pc}
   6a3dc:	push	{fp, lr}
   6a3e0:	mov	fp, sp
   6a3e4:	sub	sp, sp, #72	; 0x48
   6a3e8:	str	r0, [fp, #-8]
   6a3ec:	str	r1, [fp, #-12]
   6a3f0:	str	r2, [fp, #-16]
   6a3f4:	str	r3, [fp, #-20]	; 0xffffffec
   6a3f8:	ldr	r0, [fp, #-8]
   6a3fc:	ldr	r0, [r0]
   6a400:	ldr	r1, [fp, #-12]
   6a404:	add	r0, r0, r1, lsl #3
   6a408:	str	r0, [fp, #-24]	; 0xffffffe8
   6a40c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   6a410:	ldr	r0, [r0, #4]
   6a414:	and	r0, r0, #255	; 0xff
   6a418:	cmp	r0, #7
   6a41c:	bne	6a68c <__assert_fail@plt+0x57ad4>
   6a420:	ldr	r0, [fp, #-16]
   6a424:	ldr	r0, [r0, #4]
   6a428:	ldr	r1, [fp, #-20]	; 0xffffffec
   6a42c:	add	r0, r0, r1
   6a430:	ldrb	r0, [r0]
   6a434:	strb	r0, [sp, #35]	; 0x23
   6a438:	ldrb	r0, [sp, #35]	; 0x23
   6a43c:	cmp	r0, #194	; 0xc2
   6a440:	bge	6a450 <__assert_fail@plt+0x57898>
   6a444:	movw	r0, #0
   6a448:	str	r0, [fp, #-4]
   6a44c:	b	6a9b8 <__assert_fail@plt+0x57e00>
   6a450:	ldr	r0, [fp, #-20]	; 0xffffffec
   6a454:	add	r0, r0, #2
   6a458:	ldr	r1, [fp, #-16]
   6a45c:	ldr	r1, [r1, #48]	; 0x30
   6a460:	cmp	r0, r1
   6a464:	ble	6a474 <__assert_fail@plt+0x578bc>
   6a468:	movw	r0, #0
   6a46c:	str	r0, [fp, #-4]
   6a470:	b	6a9b8 <__assert_fail@plt+0x57e00>
   6a474:	ldr	r0, [fp, #-16]
   6a478:	ldr	r0, [r0, #4]
   6a47c:	ldr	r1, [fp, #-20]	; 0xffffffec
   6a480:	add	r1, r1, #1
   6a484:	add	r0, r0, r1
   6a488:	ldrb	r0, [r0]
   6a48c:	strb	r0, [sp, #34]	; 0x22
   6a490:	ldrb	r0, [sp, #35]	; 0x23
   6a494:	cmp	r0, #224	; 0xe0
   6a498:	bge	6a4dc <__assert_fail@plt+0x57924>
   6a49c:	ldrb	r0, [sp, #34]	; 0x22
   6a4a0:	cmp	r0, #128	; 0x80
   6a4a4:	movw	r0, #1
   6a4a8:	str	r0, [sp, #12]
   6a4ac:	blt	6a4c4 <__assert_fail@plt+0x5790c>
   6a4b0:	ldrb	r0, [sp, #34]	; 0x22
   6a4b4:	cmp	r0, #191	; 0xbf
   6a4b8:	movw	r0, #0
   6a4bc:	movgt	r0, #1
   6a4c0:	str	r0, [sp, #12]
   6a4c4:	ldr	r0, [sp, #12]
   6a4c8:	tst	r0, #1
   6a4cc:	movw	r0, #0
   6a4d0:	moveq	r0, #2
   6a4d4:	str	r0, [fp, #-4]
   6a4d8:	b	6a9b8 <__assert_fail@plt+0x57e00>
   6a4dc:	ldrb	r0, [sp, #35]	; 0x23
   6a4e0:	cmp	r0, #240	; 0xf0
   6a4e4:	bge	6a518 <__assert_fail@plt+0x57960>
   6a4e8:	movw	r0, #3
   6a4ec:	str	r0, [fp, #-28]	; 0xffffffe4
   6a4f0:	ldrb	r0, [sp, #35]	; 0x23
   6a4f4:	cmp	r0, #224	; 0xe0
   6a4f8:	bne	6a514 <__assert_fail@plt+0x5795c>
   6a4fc:	ldrb	r0, [sp, #34]	; 0x22
   6a500:	cmp	r0, #160	; 0xa0
   6a504:	bge	6a514 <__assert_fail@plt+0x5795c>
   6a508:	movw	r0, #0
   6a50c:	str	r0, [fp, #-4]
   6a510:	b	6a9b8 <__assert_fail@plt+0x57e00>
   6a514:	b	6a5e4 <__assert_fail@plt+0x57a2c>
   6a518:	ldrb	r0, [sp, #35]	; 0x23
   6a51c:	cmp	r0, #248	; 0xf8
   6a520:	bge	6a554 <__assert_fail@plt+0x5799c>
   6a524:	movw	r0, #4
   6a528:	str	r0, [fp, #-28]	; 0xffffffe4
   6a52c:	ldrb	r0, [sp, #35]	; 0x23
   6a530:	cmp	r0, #240	; 0xf0
   6a534:	bne	6a550 <__assert_fail@plt+0x57998>
   6a538:	ldrb	r0, [sp, #34]	; 0x22
   6a53c:	cmp	r0, #144	; 0x90
   6a540:	bge	6a550 <__assert_fail@plt+0x57998>
   6a544:	movw	r0, #0
   6a548:	str	r0, [fp, #-4]
   6a54c:	b	6a9b8 <__assert_fail@plt+0x57e00>
   6a550:	b	6a5e0 <__assert_fail@plt+0x57a28>
   6a554:	ldrb	r0, [sp, #35]	; 0x23
   6a558:	cmp	r0, #252	; 0xfc
   6a55c:	bge	6a590 <__assert_fail@plt+0x579d8>
   6a560:	movw	r0, #5
   6a564:	str	r0, [fp, #-28]	; 0xffffffe4
   6a568:	ldrb	r0, [sp, #35]	; 0x23
   6a56c:	cmp	r0, #248	; 0xf8
   6a570:	bne	6a58c <__assert_fail@plt+0x579d4>
   6a574:	ldrb	r0, [sp, #34]	; 0x22
   6a578:	cmp	r0, #136	; 0x88
   6a57c:	bge	6a58c <__assert_fail@plt+0x579d4>
   6a580:	movw	r0, #0
   6a584:	str	r0, [fp, #-4]
   6a588:	b	6a9b8 <__assert_fail@plt+0x57e00>
   6a58c:	b	6a5dc <__assert_fail@plt+0x57a24>
   6a590:	ldrb	r0, [sp, #35]	; 0x23
   6a594:	cmp	r0, #254	; 0xfe
   6a598:	bge	6a5cc <__assert_fail@plt+0x57a14>
   6a59c:	movw	r0, #6
   6a5a0:	str	r0, [fp, #-28]	; 0xffffffe4
   6a5a4:	ldrb	r0, [sp, #35]	; 0x23
   6a5a8:	cmp	r0, #252	; 0xfc
   6a5ac:	bne	6a5c8 <__assert_fail@plt+0x57a10>
   6a5b0:	ldrb	r0, [sp, #34]	; 0x22
   6a5b4:	cmp	r0, #132	; 0x84
   6a5b8:	bge	6a5c8 <__assert_fail@plt+0x57a10>
   6a5bc:	movw	r0, #0
   6a5c0:	str	r0, [fp, #-4]
   6a5c4:	b	6a9b8 <__assert_fail@plt+0x57e00>
   6a5c8:	b	6a5d8 <__assert_fail@plt+0x57a20>
   6a5cc:	movw	r0, #0
   6a5d0:	str	r0, [fp, #-4]
   6a5d4:	b	6a9b8 <__assert_fail@plt+0x57e00>
   6a5d8:	b	6a5dc <__assert_fail@plt+0x57a24>
   6a5dc:	b	6a5e0 <__assert_fail@plt+0x57a28>
   6a5e0:	b	6a5e4 <__assert_fail@plt+0x57a2c>
   6a5e4:	b	6a5e8 <__assert_fail@plt+0x57a30>
   6a5e8:	ldr	r0, [fp, #-20]	; 0xffffffec
   6a5ec:	ldr	r1, [fp, #-28]	; 0xffffffe4
   6a5f0:	add	r0, r0, r1
   6a5f4:	ldr	r1, [fp, #-16]
   6a5f8:	ldr	r1, [r1, #48]	; 0x30
   6a5fc:	cmp	r0, r1
   6a600:	ble	6a610 <__assert_fail@plt+0x57a58>
   6a604:	movw	r0, #0
   6a608:	str	r0, [fp, #-4]
   6a60c:	b	6a9b8 <__assert_fail@plt+0x57e00>
   6a610:	movw	r0, #1
   6a614:	str	r0, [sp, #36]	; 0x24
   6a618:	ldr	r0, [sp, #36]	; 0x24
   6a61c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   6a620:	cmp	r0, r1
   6a624:	bge	6a680 <__assert_fail@plt+0x57ac8>
   6a628:	ldr	r0, [fp, #-16]
   6a62c:	ldr	r0, [r0, #4]
   6a630:	ldr	r1, [fp, #-20]	; 0xffffffec
   6a634:	ldr	r2, [sp, #36]	; 0x24
   6a638:	add	r1, r1, r2
   6a63c:	add	r0, r0, r1
   6a640:	ldrb	r0, [r0]
   6a644:	strb	r0, [sp, #34]	; 0x22
   6a648:	ldrb	r0, [sp, #34]	; 0x22
   6a64c:	cmp	r0, #128	; 0x80
   6a650:	blt	6a660 <__assert_fail@plt+0x57aa8>
   6a654:	ldrb	r0, [sp, #34]	; 0x22
   6a658:	cmp	r0, #191	; 0xbf
   6a65c:	ble	6a66c <__assert_fail@plt+0x57ab4>
   6a660:	movw	r0, #0
   6a664:	str	r0, [fp, #-4]
   6a668:	b	6a9b8 <__assert_fail@plt+0x57e00>
   6a66c:	b	6a670 <__assert_fail@plt+0x57ab8>
   6a670:	ldr	r0, [sp, #36]	; 0x24
   6a674:	add	r0, r0, #1
   6a678:	str	r0, [sp, #36]	; 0x24
   6a67c:	b	6a618 <__assert_fail@plt+0x57a60>
   6a680:	ldr	r0, [fp, #-28]	; 0xffffffe4
   6a684:	str	r0, [fp, #-4]
   6a688:	b	6a9b8 <__assert_fail@plt+0x57e00>
   6a68c:	ldr	r0, [fp, #-16]
   6a690:	ldr	r1, [fp, #-20]	; 0xffffffec
   6a694:	bl	61738 <__assert_fail@plt+0x4eb80>
   6a698:	str	r0, [fp, #-28]	; 0xffffffe4
   6a69c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   6a6a0:	ldr	r0, [r0, #4]
   6a6a4:	and	r0, r0, #255	; 0xff
   6a6a8:	cmp	r0, #5
   6a6ac:	bne	6a740 <__assert_fail@plt+0x57b88>
   6a6b0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   6a6b4:	cmp	r0, #1
   6a6b8:	bgt	6a6c8 <__assert_fail@plt+0x57b10>
   6a6bc:	movw	r0, #0
   6a6c0:	str	r0, [fp, #-4]
   6a6c4:	b	6a9b8 <__assert_fail@plt+0x57e00>
   6a6c8:	ldr	r0, [fp, #-8]
   6a6cc:	ldr	r0, [r0, #128]	; 0x80
   6a6d0:	and	r0, r0, #64	; 0x40
   6a6d4:	cmp	r0, #0
   6a6d8:	bne	6a6f8 <__assert_fail@plt+0x57b40>
   6a6dc:	ldr	r0, [fp, #-16]
   6a6e0:	ldr	r0, [r0, #4]
   6a6e4:	ldr	r1, [fp, #-20]	; 0xffffffec
   6a6e8:	add	r0, r0, r1
   6a6ec:	ldrb	r0, [r0]
   6a6f0:	cmp	r0, #10
   6a6f4:	beq	6a728 <__assert_fail@plt+0x57b70>
   6a6f8:	ldr	r0, [fp, #-8]
   6a6fc:	ldr	r0, [r0, #128]	; 0x80
   6a700:	and	r0, r0, #128	; 0x80
   6a704:	cmp	r0, #0
   6a708:	beq	6a734 <__assert_fail@plt+0x57b7c>
   6a70c:	ldr	r0, [fp, #-16]
   6a710:	ldr	r0, [r0, #4]
   6a714:	ldr	r1, [fp, #-20]	; 0xffffffec
   6a718:	add	r0, r0, r1
   6a71c:	ldrb	r0, [r0]
   6a720:	cmp	r0, #0
   6a724:	bne	6a734 <__assert_fail@plt+0x57b7c>
   6a728:	movw	r0, #0
   6a72c:	str	r0, [fp, #-4]
   6a730:	b	6a9b8 <__assert_fail@plt+0x57e00>
   6a734:	ldr	r0, [fp, #-28]	; 0xffffffe4
   6a738:	str	r0, [fp, #-4]
   6a73c:	b	6a9b8 <__assert_fail@plt+0x57e00>
   6a740:	ldr	r0, [fp, #-16]
   6a744:	ldr	r1, [fp, #-20]	; 0xffffffec
   6a748:	bl	6ac38 <__assert_fail@plt+0x58080>
   6a74c:	str	r0, [fp, #-32]	; 0xffffffe0
   6a750:	ldr	r0, [fp, #-32]	; 0xffffffe0
   6a754:	cmp	r0, #1
   6a758:	bgt	6a768 <__assert_fail@plt+0x57bb0>
   6a75c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   6a760:	cmp	r0, #1
   6a764:	ble	6a774 <__assert_fail@plt+0x57bbc>
   6a768:	ldr	r0, [fp, #-28]	; 0xffffffe4
   6a76c:	cmp	r0, #0
   6a770:	bne	6a780 <__assert_fail@plt+0x57bc8>
   6a774:	movw	r0, #0
   6a778:	str	r0, [fp, #-4]
   6a77c:	b	6a9b8 <__assert_fail@plt+0x57e00>
   6a780:	ldr	r0, [fp, #-24]	; 0xffffffe8
   6a784:	ldr	r0, [r0, #4]
   6a788:	and	r0, r0, #255	; 0xff
   6a78c:	cmp	r0, #6
   6a790:	bne	6a9b0 <__assert_fail@plt+0x57df8>
   6a794:	ldr	r0, [fp, #-24]	; 0xffffffe8
   6a798:	ldr	r0, [r0]
   6a79c:	str	r0, [sp, #28]
   6a7a0:	movw	r0, #0
   6a7a4:	str	r0, [sp, #24]
   6a7a8:	ldr	r0, [sp, #28]
   6a7ac:	ldr	r0, [r0, #32]
   6a7b0:	cmp	r0, #0
   6a7b4:	bne	6a7d8 <__assert_fail@plt+0x57c20>
   6a7b8:	ldr	r0, [sp, #28]
   6a7bc:	ldr	r0, [r0, #36]	; 0x24
   6a7c0:	cmp	r0, #0
   6a7c4:	bne	6a7d8 <__assert_fail@plt+0x57c20>
   6a7c8:	ldr	r0, [sp, #28]
   6a7cc:	ldr	r0, [r0, #20]
   6a7d0:	cmp	r0, #0
   6a7d4:	beq	6a7ec <__assert_fail@plt+0x57c34>
   6a7d8:	ldr	r0, [fp, #-16]
   6a7dc:	ldr	r1, [fp, #-20]	; 0xffffffec
   6a7e0:	bl	5d818 <__assert_fail@plt+0x4ac60>
   6a7e4:	str	r0, [sp, #8]
   6a7e8:	b	6a7f8 <__assert_fail@plt+0x57c40>
   6a7ec:	movw	r0, #0
   6a7f0:	str	r0, [sp, #8]
   6a7f4:	b	6a7f8 <__assert_fail@plt+0x57c40>
   6a7f8:	ldr	r0, [sp, #8]
   6a7fc:	str	r0, [sp, #20]
   6a800:	movw	r0, #0
   6a804:	str	r0, [sp, #36]	; 0x24
   6a808:	ldr	r0, [sp, #36]	; 0x24
   6a80c:	ldr	r1, [sp, #28]
   6a810:	ldr	r1, [r1, #20]
   6a814:	cmp	r0, r1
   6a818:	bge	6a85c <__assert_fail@plt+0x57ca4>
   6a81c:	ldr	r0, [sp, #20]
   6a820:	ldr	r1, [sp, #28]
   6a824:	ldr	r1, [r1]
   6a828:	ldr	r2, [sp, #36]	; 0x24
   6a82c:	add	r1, r1, r2, lsl #2
   6a830:	ldr	r1, [r1]
   6a834:	cmp	r0, r1
   6a838:	bne	6a848 <__assert_fail@plt+0x57c90>
   6a83c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   6a840:	str	r0, [sp, #24]
   6a844:	b	6a944 <__assert_fail@plt+0x57d8c>
   6a848:	b	6a84c <__assert_fail@plt+0x57c94>
   6a84c:	ldr	r0, [sp, #36]	; 0x24
   6a850:	add	r0, r0, #1
   6a854:	str	r0, [sp, #36]	; 0x24
   6a858:	b	6a808 <__assert_fail@plt+0x57c50>
   6a85c:	movw	r0, #0
   6a860:	str	r0, [sp, #36]	; 0x24
   6a864:	ldr	r0, [sp, #36]	; 0x24
   6a868:	ldr	r1, [sp, #28]
   6a86c:	ldr	r1, [r1, #36]	; 0x24
   6a870:	cmp	r0, r1
   6a874:	bge	6a8c4 <__assert_fail@plt+0x57d0c>
   6a878:	ldr	r0, [sp, #28]
   6a87c:	ldr	r0, [r0, #12]
   6a880:	ldr	r1, [sp, #36]	; 0x24
   6a884:	add	r0, r0, r1, lsl #2
   6a888:	ldr	r0, [r0]
   6a88c:	str	r0, [sp, #16]
   6a890:	ldr	r0, [sp, #20]
   6a894:	ldr	r1, [sp, #16]
   6a898:	bl	124bc <iswctype@plt>
   6a89c:	cmp	r0, #0
   6a8a0:	beq	6a8b0 <__assert_fail@plt+0x57cf8>
   6a8a4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   6a8a8:	str	r0, [sp, #24]
   6a8ac:	b	6a944 <__assert_fail@plt+0x57d8c>
   6a8b0:	b	6a8b4 <__assert_fail@plt+0x57cfc>
   6a8b4:	ldr	r0, [sp, #36]	; 0x24
   6a8b8:	add	r0, r0, #1
   6a8bc:	str	r0, [sp, #36]	; 0x24
   6a8c0:	b	6a864 <__assert_fail@plt+0x57cac>
   6a8c4:	movw	r0, #0
   6a8c8:	str	r0, [sp, #36]	; 0x24
   6a8cc:	ldr	r0, [sp, #36]	; 0x24
   6a8d0:	ldr	r1, [sp, #28]
   6a8d4:	ldr	r1, [r1, #32]
   6a8d8:	cmp	r0, r1
   6a8dc:	bge	6a940 <__assert_fail@plt+0x57d88>
   6a8e0:	ldr	r0, [sp, #28]
   6a8e4:	ldr	r0, [r0, #4]
   6a8e8:	ldr	r1, [sp, #36]	; 0x24
   6a8ec:	add	r0, r0, r1, lsl #2
   6a8f0:	ldr	r0, [r0]
   6a8f4:	ldr	r1, [sp, #20]
   6a8f8:	cmp	r0, r1
   6a8fc:	bhi	6a92c <__assert_fail@plt+0x57d74>
   6a900:	ldr	r0, [sp, #20]
   6a904:	ldr	r1, [sp, #28]
   6a908:	ldr	r1, [r1, #8]
   6a90c:	ldr	r2, [sp, #36]	; 0x24
   6a910:	add	r1, r1, r2, lsl #2
   6a914:	ldr	r1, [r1]
   6a918:	cmp	r0, r1
   6a91c:	bhi	6a92c <__assert_fail@plt+0x57d74>
   6a920:	ldr	r0, [fp, #-28]	; 0xffffffe4
   6a924:	str	r0, [sp, #24]
   6a928:	b	6a944 <__assert_fail@plt+0x57d8c>
   6a92c:	b	6a930 <__assert_fail@plt+0x57d78>
   6a930:	ldr	r0, [sp, #36]	; 0x24
   6a934:	add	r0, r0, #1
   6a938:	str	r0, [sp, #36]	; 0x24
   6a93c:	b	6a8cc <__assert_fail@plt+0x57d14>
   6a940:	b	6a944 <__assert_fail@plt+0x57d8c>
   6a944:	ldr	r0, [sp, #28]
   6a948:	ldrb	r0, [r0, #16]
   6a94c:	and	r0, r0, #1
   6a950:	and	r0, r0, #255	; 0xff
   6a954:	cmp	r0, #0
   6a958:	bne	6a968 <__assert_fail@plt+0x57db0>
   6a95c:	ldr	r0, [sp, #24]
   6a960:	str	r0, [fp, #-4]
   6a964:	b	6a9b8 <__assert_fail@plt+0x57e00>
   6a968:	ldr	r0, [sp, #24]
   6a96c:	cmp	r0, #0
   6a970:	ble	6a980 <__assert_fail@plt+0x57dc8>
   6a974:	movw	r0, #0
   6a978:	str	r0, [fp, #-4]
   6a97c:	b	6a9b8 <__assert_fail@plt+0x57e00>
   6a980:	ldr	r0, [fp, #-32]	; 0xffffffe0
   6a984:	ldr	r1, [fp, #-28]	; 0xffffffe4
   6a988:	cmp	r0, r1
   6a98c:	ble	6a99c <__assert_fail@plt+0x57de4>
   6a990:	ldr	r0, [fp, #-32]	; 0xffffffe0
   6a994:	str	r0, [sp, #4]
   6a998:	b	6a9a4 <__assert_fail@plt+0x57dec>
   6a99c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   6a9a0:	str	r0, [sp, #4]
   6a9a4:	ldr	r0, [sp, #4]
   6a9a8:	str	r0, [fp, #-4]
   6a9ac:	b	6a9b8 <__assert_fail@plt+0x57e00>
   6a9b0:	movw	r0, #0
   6a9b4:	str	r0, [fp, #-4]
   6a9b8:	ldr	r0, [fp, #-4]
   6a9bc:	mov	sp, fp
   6a9c0:	pop	{fp, pc}
   6a9c4:	push	{fp, lr}
   6a9c8:	mov	fp, sp
   6a9cc:	sub	sp, sp, #32
   6a9d0:	str	r0, [fp, #-8]
   6a9d4:	str	r1, [fp, #-12]
   6a9d8:	str	r2, [sp, #16]
   6a9dc:	ldr	r0, [fp, #-8]
   6a9e0:	ldr	r0, [r0, #4]
   6a9e4:	ldr	r1, [sp, #16]
   6a9e8:	ldrb	r0, [r0, r1]
   6a9ec:	strb	r0, [sp, #15]
   6a9f0:	ldr	r0, [fp, #-12]
   6a9f4:	ldrb	r0, [r0, #4]
   6a9f8:	sub	r0, r0, #1
   6a9fc:	cmp	r0, #6
   6aa00:	str	r0, [sp, #4]
   6aa04:	bhi	6ab04 <__assert_fail@plt+0x57f4c>
   6aa08:	add	r0, pc, #8
   6aa0c:	ldr	r1, [sp, #4]
   6aa10:	ldr	r0, [r0, r1, lsl #2]
   6aa14:	mov	pc, r0
   6aa18:	andeq	sl, r6, r4, lsr sl
   6aa1c:	andeq	sl, r6, r4, lsl #22
   6aa20:	andeq	sl, r6, ip, asr sl
   6aa24:	andeq	sl, r6, r4, lsl #22
   6aa28:	andeq	sl, r6, r8, lsr #21
   6aa2c:	andeq	sl, r6, r4, lsl #22
   6aa30:	andeq	sl, r6, r8, lsl #21
   6aa34:	ldr	r0, [fp, #-12]
   6aa38:	ldrb	r0, [r0]
   6aa3c:	ldrb	r1, [sp, #15]
   6aa40:	cmp	r0, r1
   6aa44:	beq	6aa58 <__assert_fail@plt+0x57ea0>
   6aa48:	movw	r0, #0
   6aa4c:	and	r0, r0, #1
   6aa50:	strb	r0, [fp, #-1]
   6aa54:	b	6ac28 <__assert_fail@plt+0x58070>
   6aa58:	b	6ab14 <__assert_fail@plt+0x57f5c>
   6aa5c:	ldr	r0, [fp, #-12]
   6aa60:	ldr	r0, [r0]
   6aa64:	ldrb	r1, [sp, #15]
   6aa68:	bl	67000 <__assert_fail@plt+0x54448>
   6aa6c:	tst	r0, #1
   6aa70:	bne	6aa84 <__assert_fail@plt+0x57ecc>
   6aa74:	movw	r0, #0
   6aa78:	and	r0, r0, #1
   6aa7c:	strb	r0, [fp, #-1]
   6aa80:	b	6ac28 <__assert_fail@plt+0x58070>
   6aa84:	b	6ab14 <__assert_fail@plt+0x57f5c>
   6aa88:	ldrb	r0, [sp, #15]
   6aa8c:	cmp	r0, #128	; 0x80
   6aa90:	blt	6aaa4 <__assert_fail@plt+0x57eec>
   6aa94:	movw	r0, #0
   6aa98:	and	r0, r0, #1
   6aa9c:	strb	r0, [fp, #-1]
   6aaa0:	b	6ac28 <__assert_fail@plt+0x58070>
   6aaa4:	b	6aaa8 <__assert_fail@plt+0x57ef0>
   6aaa8:	ldrb	r0, [sp, #15]
   6aaac:	cmp	r0, #10
   6aab0:	bne	6aacc <__assert_fail@plt+0x57f14>
   6aab4:	ldr	r0, [fp, #-8]
   6aab8:	ldr	r0, [r0, #84]	; 0x54
   6aabc:	ldr	r0, [r0, #128]	; 0x80
   6aac0:	and	r0, r0, #64	; 0x40
   6aac4:	cmp	r0, #0
   6aac8:	beq	6aaf0 <__assert_fail@plt+0x57f38>
   6aacc:	ldrb	r0, [sp, #15]
   6aad0:	cmp	r0, #0
   6aad4:	bne	6ab00 <__assert_fail@plt+0x57f48>
   6aad8:	ldr	r0, [fp, #-8]
   6aadc:	ldr	r0, [r0, #84]	; 0x54
   6aae0:	ldr	r0, [r0, #128]	; 0x80
   6aae4:	and	r0, r0, #128	; 0x80
   6aae8:	cmp	r0, #0
   6aaec:	beq	6ab00 <__assert_fail@plt+0x57f48>
   6aaf0:	movw	r0, #0
   6aaf4:	and	r0, r0, #1
   6aaf8:	strb	r0, [fp, #-1]
   6aafc:	b	6ac28 <__assert_fail@plt+0x58070>
   6ab00:	b	6ab14 <__assert_fail@plt+0x57f5c>
   6ab04:	movw	r0, #0
   6ab08:	and	r0, r0, #1
   6ab0c:	strb	r0, [fp, #-1]
   6ab10:	b	6ac28 <__assert_fail@plt+0x58070>
   6ab14:	ldr	r0, [fp, #-12]
   6ab18:	ldr	r0, [r0, #4]
   6ab1c:	lsr	r0, r0, #8
   6ab20:	movw	r1, #1023	; 0x3ff
   6ab24:	and	r0, r0, r1
   6ab28:	cmp	r0, #0
   6ab2c:	beq	6ac1c <__assert_fail@plt+0x58064>
   6ab30:	ldr	r0, [fp, #-8]
   6ab34:	ldr	r1, [sp, #16]
   6ab38:	ldr	r2, [fp, #-8]
   6ab3c:	ldr	r2, [r2, #88]	; 0x58
   6ab40:	bl	66c90 <__assert_fail@plt+0x540d8>
   6ab44:	str	r0, [sp, #8]
   6ab48:	ldr	r0, [fp, #-12]
   6ab4c:	ldr	r0, [r0, #4]
   6ab50:	lsr	r0, r0, #8
   6ab54:	movw	r1, #1023	; 0x3ff
   6ab58:	and	r0, r0, r1
   6ab5c:	and	r0, r0, #4
   6ab60:	cmp	r0, #0
   6ab64:	beq	6ab78 <__assert_fail@plt+0x57fc0>
   6ab68:	ldr	r0, [sp, #8]
   6ab6c:	and	r0, r0, #1
   6ab70:	cmp	r0, #0
   6ab74:	beq	6ac08 <__assert_fail@plt+0x58050>
   6ab78:	ldr	r0, [fp, #-12]
   6ab7c:	ldr	r0, [r0, #4]
   6ab80:	lsr	r0, r0, #8
   6ab84:	movw	r1, #1023	; 0x3ff
   6ab88:	and	r0, r0, r1
   6ab8c:	and	r0, r0, #8
   6ab90:	cmp	r0, #0
   6ab94:	beq	6aba8 <__assert_fail@plt+0x57ff0>
   6ab98:	ldr	r0, [sp, #8]
   6ab9c:	and	r0, r0, #1
   6aba0:	cmp	r0, #0
   6aba4:	bne	6ac08 <__assert_fail@plt+0x58050>
   6aba8:	ldr	r0, [fp, #-12]
   6abac:	ldr	r0, [r0, #4]
   6abb0:	lsr	r0, r0, #8
   6abb4:	movw	r1, #1023	; 0x3ff
   6abb8:	and	r0, r0, r1
   6abbc:	and	r0, r0, #32
   6abc0:	cmp	r0, #0
   6abc4:	beq	6abd8 <__assert_fail@plt+0x58020>
   6abc8:	ldr	r0, [sp, #8]
   6abcc:	and	r0, r0, #2
   6abd0:	cmp	r0, #0
   6abd4:	beq	6ac08 <__assert_fail@plt+0x58050>
   6abd8:	ldr	r0, [fp, #-12]
   6abdc:	ldr	r0, [r0, #4]
   6abe0:	lsr	r0, r0, #8
   6abe4:	movw	r1, #1023	; 0x3ff
   6abe8:	and	r0, r0, r1
   6abec:	and	r0, r0, #128	; 0x80
   6abf0:	cmp	r0, #0
   6abf4:	beq	6ac18 <__assert_fail@plt+0x58060>
   6abf8:	ldr	r0, [sp, #8]
   6abfc:	and	r0, r0, #8
   6ac00:	cmp	r0, #0
   6ac04:	bne	6ac18 <__assert_fail@plt+0x58060>
   6ac08:	movw	r0, #0
   6ac0c:	and	r0, r0, #1
   6ac10:	strb	r0, [fp, #-1]
   6ac14:	b	6ac28 <__assert_fail@plt+0x58070>
   6ac18:	b	6ac1c <__assert_fail@plt+0x58064>
   6ac1c:	movw	r0, #1
   6ac20:	and	r0, r0, #1
   6ac24:	strb	r0, [fp, #-1]
   6ac28:	ldrb	r0, [fp, #-1]
   6ac2c:	and	r0, r0, #1
   6ac30:	mov	sp, fp
   6ac34:	pop	{fp, pc}
   6ac38:	sub	sp, sp, #8
   6ac3c:	str	r0, [sp, #4]
   6ac40:	str	r1, [sp]
   6ac44:	movw	r0, #1
   6ac48:	add	sp, sp, #8
   6ac4c:	bx	lr
   6ac50:	push	{fp, lr}
   6ac54:	mov	fp, sp
   6ac58:	sub	sp, sp, #72	; 0x48
   6ac5c:	str	r0, [fp, #-8]
   6ac60:	str	r1, [fp, #-12]
   6ac64:	ldr	r0, [fp, #-8]
   6ac68:	ldr	r0, [r0, #84]	; 0x54
   6ac6c:	str	r0, [fp, #-16]
   6ac70:	movw	r0, #0
   6ac74:	str	r0, [fp, #-24]	; 0xffffffe8
   6ac78:	ldr	r0, [fp, #-24]	; 0xffffffe8
   6ac7c:	ldr	r1, [fp, #-12]
   6ac80:	ldr	r1, [r1, #8]
   6ac84:	cmp	r0, r1
   6ac88:	bge	6b018 <__assert_fail@plt+0x58460>
   6ac8c:	ldr	r0, [fp, #-12]
   6ac90:	ldr	r0, [r0, #12]
   6ac94:	ldr	r1, [fp, #-24]	; 0xffffffe8
   6ac98:	ldr	r0, [r0, r1, lsl #2]
   6ac9c:	str	r0, [sp, #28]
   6aca0:	ldr	r0, [fp, #-16]
   6aca4:	ldr	r0, [r0]
   6aca8:	ldr	r1, [sp, #28]
   6acac:	add	r0, r0, r1, lsl #3
   6acb0:	ldr	r0, [r0, #4]
   6acb4:	lsr	r0, r0, #20
   6acb8:	and	r0, r0, #1
   6acbc:	cmp	r0, #0
   6acc0:	bne	6acc8 <__assert_fail@plt+0x58110>
   6acc4:	b	6b008 <__assert_fail@plt+0x58450>
   6acc8:	ldr	r0, [fp, #-16]
   6accc:	ldr	r0, [r0]
   6acd0:	ldr	r1, [sp, #28]
   6acd4:	add	r0, r0, r1, lsl #3
   6acd8:	ldr	r0, [r0, #4]
   6acdc:	lsr	r0, r0, #8
   6ace0:	movw	r1, #1023	; 0x3ff
   6ace4:	and	r0, r0, r1
   6ace8:	cmp	r0, #0
   6acec:	beq	6adfc <__assert_fail@plt+0x58244>
   6acf0:	ldr	r0, [fp, #-8]
   6acf4:	ldr	r1, [r0, #40]	; 0x28
   6acf8:	ldr	r2, [r0, #88]	; 0x58
   6acfc:	bl	66c90 <__assert_fail@plt+0x540d8>
   6ad00:	str	r0, [sp, #16]
   6ad04:	ldr	r0, [fp, #-16]
   6ad08:	ldr	r0, [r0]
   6ad0c:	ldr	r1, [sp, #28]
   6ad10:	add	r0, r0, r1, lsl #3
   6ad14:	ldr	r0, [r0, #4]
   6ad18:	lsr	r0, r0, #8
   6ad1c:	movw	r1, #1023	; 0x3ff
   6ad20:	and	r0, r0, r1
   6ad24:	and	r0, r0, #4
   6ad28:	cmp	r0, #0
   6ad2c:	beq	6ad40 <__assert_fail@plt+0x58188>
   6ad30:	ldr	r0, [sp, #16]
   6ad34:	and	r0, r0, #1
   6ad38:	cmp	r0, #0
   6ad3c:	beq	6adf4 <__assert_fail@plt+0x5823c>
   6ad40:	ldr	r0, [fp, #-16]
   6ad44:	ldr	r0, [r0]
   6ad48:	ldr	r1, [sp, #28]
   6ad4c:	add	r0, r0, r1, lsl #3
   6ad50:	ldr	r0, [r0, #4]
   6ad54:	lsr	r0, r0, #8
   6ad58:	movw	r1, #1023	; 0x3ff
   6ad5c:	and	r0, r0, r1
   6ad60:	and	r0, r0, #8
   6ad64:	cmp	r0, #0
   6ad68:	beq	6ad7c <__assert_fail@plt+0x581c4>
   6ad6c:	ldr	r0, [sp, #16]
   6ad70:	and	r0, r0, #1
   6ad74:	cmp	r0, #0
   6ad78:	bne	6adf4 <__assert_fail@plt+0x5823c>
   6ad7c:	ldr	r0, [fp, #-16]
   6ad80:	ldr	r0, [r0]
   6ad84:	ldr	r1, [sp, #28]
   6ad88:	add	r0, r0, r1, lsl #3
   6ad8c:	ldr	r0, [r0, #4]
   6ad90:	lsr	r0, r0, #8
   6ad94:	movw	r1, #1023	; 0x3ff
   6ad98:	and	r0, r0, r1
   6ad9c:	and	r0, r0, #32
   6ada0:	cmp	r0, #0
   6ada4:	beq	6adb8 <__assert_fail@plt+0x58200>
   6ada8:	ldr	r0, [sp, #16]
   6adac:	and	r0, r0, #2
   6adb0:	cmp	r0, #0
   6adb4:	beq	6adf4 <__assert_fail@plt+0x5823c>
   6adb8:	ldr	r0, [fp, #-16]
   6adbc:	ldr	r0, [r0]
   6adc0:	ldr	r1, [sp, #28]
   6adc4:	add	r0, r0, r1, lsl #3
   6adc8:	ldr	r0, [r0, #4]
   6adcc:	lsr	r0, r0, #8
   6add0:	movw	r1, #1023	; 0x3ff
   6add4:	and	r0, r0, r1
   6add8:	and	r0, r0, #128	; 0x80
   6addc:	cmp	r0, #0
   6ade0:	beq	6adf8 <__assert_fail@plt+0x58240>
   6ade4:	ldr	r0, [sp, #16]
   6ade8:	and	r0, r0, #8
   6adec:	cmp	r0, #0
   6adf0:	bne	6adf8 <__assert_fail@plt+0x58240>
   6adf4:	b	6b008 <__assert_fail@plt+0x58450>
   6adf8:	b	6adfc <__assert_fail@plt+0x58244>
   6adfc:	ldr	r0, [fp, #-16]
   6ae00:	ldr	r1, [sp, #28]
   6ae04:	ldr	r2, [fp, #-8]
   6ae08:	ldr	r3, [fp, #-8]
   6ae0c:	ldr	r3, [r3, #40]	; 0x28
   6ae10:	bl	6a3dc <__assert_fail@plt+0x57824>
   6ae14:	str	r0, [sp, #24]
   6ae18:	ldr	r0, [sp, #24]
   6ae1c:	cmp	r0, #0
   6ae20:	bne	6ae28 <__assert_fail@plt+0x58270>
   6ae24:	b	6b008 <__assert_fail@plt+0x58450>
   6ae28:	ldr	r0, [fp, #-8]
   6ae2c:	ldr	r0, [r0, #40]	; 0x28
   6ae30:	ldr	r1, [sp, #24]
   6ae34:	add	r0, r0, r1
   6ae38:	str	r0, [sp, #20]
   6ae3c:	ldr	r0, [fp, #-8]
   6ae40:	ldr	r0, [r0, #120]	; 0x78
   6ae44:	ldr	r1, [sp, #24]
   6ae48:	cmp	r0, r1
   6ae4c:	bge	6ae5c <__assert_fail@plt+0x582a4>
   6ae50:	ldr	r0, [sp, #24]
   6ae54:	str	r0, [sp, #8]
   6ae58:	b	6ae68 <__assert_fail@plt+0x582b0>
   6ae5c:	ldr	r0, [fp, #-8]
   6ae60:	ldr	r0, [r0, #120]	; 0x78
   6ae64:	str	r0, [sp, #8]
   6ae68:	ldr	r0, [sp, #8]
   6ae6c:	ldr	r1, [fp, #-8]
   6ae70:	str	r0, [r1, #120]	; 0x78
   6ae74:	ldr	r0, [fp, #-8]
   6ae78:	ldr	r1, [sp, #20]
   6ae7c:	bl	688c0 <__assert_fail@plt+0x55d08>
   6ae80:	str	r0, [fp, #-20]	; 0xffffffec
   6ae84:	ldr	r0, [fp, #-20]	; 0xffffffec
   6ae88:	cmp	r0, #0
   6ae8c:	beq	6ae9c <__assert_fail@plt+0x582e4>
   6ae90:	ldr	r0, [fp, #-20]	; 0xffffffec
   6ae94:	str	r0, [fp, #-4]
   6ae98:	b	6b020 <__assert_fail@plt+0x58468>
   6ae9c:	ldr	r0, [fp, #-16]
   6aea0:	ldr	r0, [r0, #12]
   6aea4:	ldr	r1, [sp, #28]
   6aea8:	add	r0, r0, r1, lsl #2
   6aeac:	ldr	r0, [r0]
   6aeb0:	cmn	r0, #1
   6aeb4:	beq	6aebc <__assert_fail@plt+0x58304>
   6aeb8:	b	6aebc <__assert_fail@plt+0x58304>
   6aebc:	ldr	r0, [fp, #-16]
   6aec0:	ldr	r1, [r0, #12]
   6aec4:	ldr	r0, [r0, #24]
   6aec8:	ldr	r2, [sp, #28]
   6aecc:	ldr	r1, [r1, r2, lsl #2]
   6aed0:	add	r1, r1, r1, lsl #1
   6aed4:	add	r0, r0, r1, lsl #2
   6aed8:	str	r0, [sp, #32]
   6aedc:	ldr	r0, [fp, #-8]
   6aee0:	ldr	r0, [r0, #100]	; 0x64
   6aee4:	ldr	r1, [sp, #20]
   6aee8:	add	r0, r0, r1, lsl #2
   6aeec:	ldr	r0, [r0]
   6aef0:	str	r0, [sp, #12]
   6aef4:	ldr	r0, [sp, #12]
   6aef8:	movw	r1, #0
   6aefc:	cmp	r0, r1
   6af00:	bne	6af24 <__assert_fail@plt+0x5836c>
   6af04:	ldr	r0, [sp, #32]
   6af08:	ldr	r1, [r0]
   6af0c:	str	r1, [sp, #36]	; 0x24
   6af10:	ldr	r1, [r0, #4]
   6af14:	str	r1, [sp, #40]	; 0x28
   6af18:	ldr	r0, [r0, #8]
   6af1c:	str	r0, [sp, #44]	; 0x2c
   6af20:	b	6af58 <__assert_fail@plt+0x583a0>
   6af24:	ldr	r0, [sp, #12]
   6af28:	ldr	r1, [r0, #40]	; 0x28
   6af2c:	ldr	r2, [sp, #32]
   6af30:	add	r0, sp, #36	; 0x24
   6af34:	bl	6848c <__assert_fail@plt+0x558d4>
   6af38:	str	r0, [fp, #-20]	; 0xffffffec
   6af3c:	ldr	r0, [fp, #-20]	; 0xffffffec
   6af40:	cmp	r0, #0
   6af44:	beq	6af54 <__assert_fail@plt+0x5839c>
   6af48:	ldr	r0, [fp, #-20]	; 0xffffffec
   6af4c:	str	r0, [fp, #-4]
   6af50:	b	6b020 <__assert_fail@plt+0x58468>
   6af54:	b	6af58 <__assert_fail@plt+0x583a0>
   6af58:	ldr	r0, [fp, #-8]
   6af5c:	ldr	r1, [sp, #20]
   6af60:	sub	r1, r1, #1
   6af64:	ldr	r2, [r0, #88]	; 0x58
   6af68:	bl	66c90 <__assert_fail@plt+0x540d8>
   6af6c:	str	r0, [sp, #16]
   6af70:	ldr	r1, [fp, #-16]
   6af74:	ldr	r3, [sp, #16]
   6af78:	sub	r0, fp, #20
   6af7c:	add	r2, sp, #36	; 0x24
   6af80:	bl	64440 <__assert_fail@plt+0x51888>
   6af84:	ldr	r1, [fp, #-8]
   6af88:	ldr	r1, [r1, #100]	; 0x64
   6af8c:	ldr	r2, [sp, #20]
   6af90:	add	r1, r1, r2, lsl #2
   6af94:	str	r0, [r1]
   6af98:	ldr	r0, [sp, #12]
   6af9c:	movw	r1, #0
   6afa0:	cmp	r0, r1
   6afa4:	beq	6afb0 <__assert_fail@plt+0x583f8>
   6afa8:	ldr	r0, [sp, #44]	; 0x2c
   6afac:	bl	50c68 <__assert_fail@plt+0x3e0b0>
   6afb0:	ldr	r0, [fp, #-8]
   6afb4:	ldr	r0, [r0, #100]	; 0x64
   6afb8:	ldr	r1, [sp, #20]
   6afbc:	add	r0, r0, r1, lsl #2
   6afc0:	ldr	r0, [r0]
   6afc4:	movw	r1, #0
   6afc8:	cmp	r0, r1
   6afcc:	movw	r0, #0
   6afd0:	str	r0, [sp, #4]
   6afd4:	bne	6afec <__assert_fail@plt+0x58434>
   6afd8:	ldr	r0, [fp, #-20]	; 0xffffffec
   6afdc:	cmp	r0, #0
   6afe0:	movw	r0, #0
   6afe4:	movne	r0, #1
   6afe8:	str	r0, [sp, #4]
   6afec:	ldr	r0, [sp, #4]
   6aff0:	tst	r0, #1
   6aff4:	beq	6b004 <__assert_fail@plt+0x5844c>
   6aff8:	ldr	r0, [fp, #-20]	; 0xffffffec
   6affc:	str	r0, [fp, #-4]
   6b000:	b	6b020 <__assert_fail@plt+0x58468>
   6b004:	b	6b008 <__assert_fail@plt+0x58450>
   6b008:	ldr	r0, [fp, #-24]	; 0xffffffe8
   6b00c:	add	r0, r0, #1
   6b010:	str	r0, [fp, #-24]	; 0xffffffe8
   6b014:	b	6ac78 <__assert_fail@plt+0x580c0>
   6b018:	movw	r0, #0
   6b01c:	str	r0, [fp, #-4]
   6b020:	ldr	r0, [fp, #-4]
   6b024:	mov	sp, fp
   6b028:	pop	{fp, pc}
   6b02c:	push	{r4, r5, fp, lr}
   6b030:	add	fp, sp, #8
   6b034:	sub	sp, sp, #2160	; 0x870
   6b038:	sub	sp, sp, #12288	; 0x3000
   6b03c:	add	r3, sp, #20
   6b040:	sub	lr, fp, #6144	; 0x1800
   6b044:	sub	r2, lr, #100	; 0x64
   6b048:	str	r0, [fp, #-16]
   6b04c:	str	r1, [fp, #-20]	; 0xffffffec
   6b050:	movw	r0, #0
   6b054:	strb	r0, [fp, #-37]	; 0xffffffdb
   6b058:	ldr	r0, [fp, #-20]	; 0xffffffec
   6b05c:	movw	r1, #0
   6b060:	str	r1, [r0, #44]	; 0x2c
   6b064:	ldr	r0, [fp, #-20]	; 0xffffffec
   6b068:	str	r1, [r0, #48]	; 0x30
   6b06c:	ldr	r0, [fp, #-16]
   6b070:	ldr	r1, [fp, #-20]	; 0xffffffec
   6b074:	bl	6b854 <__assert_fail@plt+0x58c9c>
   6b078:	str	r0, [fp, #-52]	; 0xffffffcc
   6b07c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   6b080:	cmp	r0, #0
   6b084:	bgt	6b0ec <__assert_fail@plt+0x58534>
   6b088:	ldr	r0, [fp, #-52]	; 0xffffffcc
   6b08c:	cmp	r0, #0
   6b090:	bne	6b0dc <__assert_fail@plt+0x58524>
   6b094:	movw	r0, #4
   6b098:	movw	r1, #256	; 0x100
   6b09c:	bl	50240 <__assert_fail@plt+0x3d688>
   6b0a0:	ldr	r1, [fp, #-20]	; 0xffffffec
   6b0a4:	str	r0, [r1, #44]	; 0x2c
   6b0a8:	ldr	r0, [fp, #-20]	; 0xffffffec
   6b0ac:	ldr	r0, [r0, #44]	; 0x2c
   6b0b0:	movw	r1, #0
   6b0b4:	cmp	r0, r1
   6b0b8:	bne	6b0cc <__assert_fail@plt+0x58514>
   6b0bc:	movw	r0, #0
   6b0c0:	and	r0, r0, #1
   6b0c4:	strb	r0, [fp, #-9]
   6b0c8:	b	6b844 <__assert_fail@plt+0x58c8c>
   6b0cc:	movw	r0, #1
   6b0d0:	and	r0, r0, #1
   6b0d4:	strb	r0, [fp, #-9]
   6b0d8:	b	6b844 <__assert_fail@plt+0x58c8c>
   6b0dc:	movw	r0, #0
   6b0e0:	and	r0, r0, #1
   6b0e4:	strb	r0, [fp, #-9]
   6b0e8:	b	6b844 <__assert_fail@plt+0x58c8c>
   6b0ec:	ldr	r0, [fp, #-52]	; 0xffffffcc
   6b0f0:	add	r1, r0, #1
   6b0f4:	sub	lr, fp, #3072	; 0xc00
   6b0f8:	sub	r0, lr, #68	; 0x44
   6b0fc:	bl	6342c <__assert_fail@plt+0x50874>
   6b100:	str	r0, [fp, #-24]	; 0xffffffe8
   6b104:	ldr	r0, [fp, #-24]	; 0xffffffe8
   6b108:	cmp	r0, #0
   6b10c:	beq	6b174 <__assert_fail@plt+0x585bc>
   6b110:	b	6b114 <__assert_fail@plt+0x5855c>
   6b114:	ldr	r0, [fp, #-3132]	; 0xfffff3c4
   6b118:	bl	50c68 <__assert_fail@plt+0x3e0b0>
   6b11c:	movw	r0, #0
   6b120:	str	r0, [fp, #-28]	; 0xffffffe4
   6b124:	ldr	r0, [fp, #-28]	; 0xffffffe4
   6b128:	ldr	r1, [fp, #-52]	; 0xffffffcc
   6b12c:	cmp	r0, r1
   6b130:	bge	6b164 <__assert_fail@plt+0x585ac>
   6b134:	sub	lr, fp, #6144	; 0x1800
   6b138:	sub	r0, lr, #100	; 0x64
   6b13c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   6b140:	movw	r2, #12
   6b144:	mul	r1, r1, r2
   6b148:	add	r0, r0, r1
   6b14c:	ldr	r0, [r0, #8]
   6b150:	bl	50c68 <__assert_fail@plt+0x3e0b0>
   6b154:	ldr	r0, [fp, #-28]	; 0xffffffe4
   6b158:	add	r0, r0, #1
   6b15c:	str	r0, [fp, #-28]	; 0xffffffe4
   6b160:	b	6b124 <__assert_fail@plt+0x5856c>
   6b164:	movw	r0, #0
   6b168:	and	r0, r0, #1
   6b16c:	strb	r0, [fp, #-9]
   6b170:	b	6b844 <__assert_fail@plt+0x58c8c>
   6b174:	sub	lr, fp, #3072	; 0xc00
   6b178:	sub	r0, lr, #100	; 0x64
   6b17c:	bl	6c034 <__assert_fail@plt+0x5947c>
   6b180:	movw	r0, #0
   6b184:	str	r0, [fp, #-28]	; 0xffffffe4
   6b188:	ldr	r0, [fp, #-28]	; 0xffffffe4
   6b18c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   6b190:	cmp	r0, r1
   6b194:	bge	6b464 <__assert_fail@plt+0x588ac>
   6b198:	movw	r0, #0
   6b19c:	str	r0, [fp, #-3136]	; 0xfffff3c0
   6b1a0:	str	r0, [fp, #-32]	; 0xffffffe0
   6b1a4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   6b1a8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   6b1ac:	movw	r2, #12
   6b1b0:	mul	r1, r1, r2
   6b1b4:	sub	lr, fp, #6144	; 0x1800
   6b1b8:	sub	r2, lr, #100	; 0x64
   6b1bc:	add	r1, r2, r1
   6b1c0:	ldr	r1, [r1, #4]
   6b1c4:	cmp	r0, r1
   6b1c8:	bge	6b25c <__assert_fail@plt+0x586a4>
   6b1cc:	ldr	r0, [fp, #-16]
   6b1d0:	ldr	r0, [r0, #12]
   6b1d4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   6b1d8:	add	r1, r1, r1, lsl #1
   6b1dc:	sub	lr, fp, #6144	; 0x1800
   6b1e0:	sub	r2, lr, #100	; 0x64
   6b1e4:	add	r1, r2, r1, lsl #2
   6b1e8:	ldr	r1, [r1, #8]
   6b1ec:	ldr	r2, [fp, #-32]	; 0xffffffe0
   6b1f0:	ldr	r1, [r1, r2, lsl #2]
   6b1f4:	add	r0, r0, r1, lsl #2
   6b1f8:	ldr	r0, [r0]
   6b1fc:	str	r0, [sp, #16]
   6b200:	ldr	r0, [sp, #16]
   6b204:	cmn	r0, #1
   6b208:	beq	6b248 <__assert_fail@plt+0x58690>
   6b20c:	ldr	r0, [fp, #-16]
   6b210:	ldr	r0, [r0, #24]
   6b214:	ldr	r1, [sp, #16]
   6b218:	movw	r2, #12
   6b21c:	mul	r1, r1, r2
   6b220:	add	r1, r0, r1
   6b224:	sub	lr, fp, #3072	; 0xc00
   6b228:	sub	r0, lr, #68	; 0x44
   6b22c:	bl	639a8 <__assert_fail@plt+0x50df0>
   6b230:	str	r0, [fp, #-24]	; 0xffffffe8
   6b234:	ldr	r0, [fp, #-24]	; 0xffffffe8
   6b238:	cmp	r0, #0
   6b23c:	beq	6b244 <__assert_fail@plt+0x5868c>
   6b240:	b	6b114 <__assert_fail@plt+0x5855c>
   6b244:	b	6b248 <__assert_fail@plt+0x58690>
   6b248:	b	6b24c <__assert_fail@plt+0x58694>
   6b24c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   6b250:	add	r0, r0, #1
   6b254:	str	r0, [fp, #-32]	; 0xffffffe0
   6b258:	b	6b1a4 <__assert_fail@plt+0x585ec>
   6b25c:	ldr	r1, [fp, #-16]
   6b260:	sub	r0, fp, #24
   6b264:	sub	lr, fp, #3072	; 0xc00
   6b268:	sub	r2, lr, #68	; 0x44
   6b26c:	mov	r3, #0
   6b270:	bl	64440 <__assert_fail@plt+0x51888>
   6b274:	ldr	r1, [fp, #-28]	; 0xffffffe4
   6b278:	sub	lr, fp, #1024	; 0x400
   6b27c:	sub	r2, lr, #56	; 0x38
   6b280:	str	r0, [r2, r1, lsl #2]
   6b284:	ldr	r0, [fp, #-28]	; 0xffffffe4
   6b288:	add	r0, r2, r0, lsl #2
   6b28c:	ldr	r0, [r0]
   6b290:	movw	r1, #0
   6b294:	cmp	r0, r1
   6b298:	movw	r0, #0
   6b29c:	str	r0, [sp, #12]
   6b2a0:	bne	6b2b8 <__assert_fail@plt+0x58700>
   6b2a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   6b2a8:	cmp	r0, #0
   6b2ac:	movw	r0, #0
   6b2b0:	movne	r0, #1
   6b2b4:	str	r0, [sp, #12]
   6b2b8:	ldr	r0, [sp, #12]
   6b2bc:	tst	r0, #1
   6b2c0:	beq	6b2c8 <__assert_fail@plt+0x58710>
   6b2c4:	b	6b114 <__assert_fail@plt+0x5855c>
   6b2c8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   6b2cc:	sub	lr, fp, #1024	; 0x400
   6b2d0:	sub	r1, lr, #56	; 0x38
   6b2d4:	ldr	r0, [r1, r0, lsl #2]
   6b2d8:	ldrb	r0, [r0, #52]	; 0x34
   6b2dc:	lsr	r0, r0, #7
   6b2e0:	and	r0, r0, #255	; 0xff
   6b2e4:	cmp	r0, #0
   6b2e8:	beq	6b408 <__assert_fail@plt+0x58850>
   6b2ec:	ldr	r1, [fp, #-16]
   6b2f0:	sub	r0, fp, #24
   6b2f4:	sub	lr, fp, #3072	; 0xc00
   6b2f8:	sub	r2, lr, #68	; 0x44
   6b2fc:	mov	r3, #1
   6b300:	bl	64440 <__assert_fail@plt+0x51888>
   6b304:	ldr	r1, [fp, #-28]	; 0xffffffe4
   6b308:	sub	lr, fp, #2048	; 0x800
   6b30c:	sub	r2, lr, #56	; 0x38
   6b310:	str	r0, [r2, r1, lsl #2]
   6b314:	ldr	r0, [fp, #-28]	; 0xffffffe4
   6b318:	add	r0, r2, r0, lsl #2
   6b31c:	ldr	r0, [r0]
   6b320:	movw	r1, #0
   6b324:	cmp	r0, r1
   6b328:	movw	r0, #0
   6b32c:	str	r0, [sp, #8]
   6b330:	bne	6b348 <__assert_fail@plt+0x58790>
   6b334:	ldr	r0, [fp, #-24]	; 0xffffffe8
   6b338:	cmp	r0, #0
   6b33c:	movw	r0, #0
   6b340:	movne	r0, #1
   6b344:	str	r0, [sp, #8]
   6b348:	ldr	r0, [sp, #8]
   6b34c:	tst	r0, #1
   6b350:	beq	6b358 <__assert_fail@plt+0x587a0>
   6b354:	b	6b114 <__assert_fail@plt+0x5855c>
   6b358:	ldr	r0, [fp, #-28]	; 0xffffffe4
   6b35c:	sub	lr, fp, #1024	; 0x400
   6b360:	sub	r1, lr, #56	; 0x38
   6b364:	ldr	r1, [r1, r0, lsl #2]
   6b368:	sub	lr, fp, #2048	; 0x800
   6b36c:	sub	r2, lr, #56	; 0x38
   6b370:	add	r0, r2, r0, lsl #2
   6b374:	ldr	r0, [r0]
   6b378:	cmp	r1, r0
   6b37c:	beq	6b398 <__assert_fail@plt+0x587e0>
   6b380:	ldr	r0, [fp, #-16]
   6b384:	ldr	r0, [r0, #92]	; 0x5c
   6b388:	cmp	r0, #1
   6b38c:	ble	6b398 <__assert_fail@plt+0x587e0>
   6b390:	movw	r0, #1
   6b394:	strb	r0, [fp, #-37]	; 0xffffffdb
   6b398:	ldr	r1, [fp, #-16]
   6b39c:	sub	r0, fp, #24
   6b3a0:	sub	lr, fp, #3072	; 0xc00
   6b3a4:	sub	r2, lr, #68	; 0x44
   6b3a8:	mov	r3, #2
   6b3ac:	bl	64440 <__assert_fail@plt+0x51888>
   6b3b0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   6b3b4:	sub	lr, fp, #3072	; 0xc00
   6b3b8:	sub	r2, lr, #56	; 0x38
   6b3bc:	str	r0, [r2, r1, lsl #2]
   6b3c0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   6b3c4:	add	r0, r2, r0, lsl #2
   6b3c8:	ldr	r0, [r0]
   6b3cc:	movw	r1, #0
   6b3d0:	cmp	r0, r1
   6b3d4:	movw	r0, #0
   6b3d8:	str	r0, [sp, #4]
   6b3dc:	bne	6b3f4 <__assert_fail@plt+0x5883c>
   6b3e0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   6b3e4:	cmp	r0, #0
   6b3e8:	movw	r0, #0
   6b3ec:	movne	r0, #1
   6b3f0:	str	r0, [sp, #4]
   6b3f4:	ldr	r0, [sp, #4]
   6b3f8:	tst	r0, #1
   6b3fc:	beq	6b404 <__assert_fail@plt+0x5884c>
   6b400:	b	6b114 <__assert_fail@plt+0x5855c>
   6b404:	b	6b43c <__assert_fail@plt+0x58884>
   6b408:	ldr	r0, [fp, #-28]	; 0xffffffe4
   6b40c:	sub	lr, fp, #1024	; 0x400
   6b410:	sub	r1, lr, #56	; 0x38
   6b414:	ldr	r2, [r1, r0, lsl #2]
   6b418:	sub	lr, fp, #2048	; 0x800
   6b41c:	sub	r3, lr, #56	; 0x38
   6b420:	str	r2, [r3, r0, lsl #2]
   6b424:	ldr	r0, [fp, #-28]	; 0xffffffe4
   6b428:	ldr	r1, [r1, r0, lsl #2]
   6b42c:	sub	lr, fp, #3072	; 0xc00
   6b430:	sub	r2, lr, #56	; 0x38
   6b434:	add	r0, r2, r0, lsl #2
   6b438:	str	r1, [r0]
   6b43c:	sub	lr, fp, #3072	; 0xc00
   6b440:	sub	r0, lr, #100	; 0x64
   6b444:	ldr	r1, [fp, #-28]	; 0xffffffe4
   6b448:	add	r2, sp, #20
   6b44c:	add	r1, r2, r1, lsl #5
   6b450:	bl	6c060 <__assert_fail@plt+0x594a8>
   6b454:	ldr	r0, [fp, #-28]	; 0xffffffe4
   6b458:	add	r0, r0, #1
   6b45c:	str	r0, [fp, #-28]	; 0xffffffe4
   6b460:	b	6b188 <__assert_fail@plt+0x585d0>
   6b464:	ldrb	r0, [fp, #-37]	; 0xffffffdb
   6b468:	tst	r0, #1
   6b46c:	bne	6b5ec <__assert_fail@plt+0x58a34>
   6b470:	movw	r0, #4
   6b474:	movw	r1, #256	; 0x100
   6b478:	bl	50240 <__assert_fail@plt+0x3d688>
   6b47c:	ldr	r1, [fp, #-20]	; 0xffffffec
   6b480:	str	r0, [r1, #44]	; 0x2c
   6b484:	str	r0, [fp, #-56]	; 0xffffffc8
   6b488:	ldr	r0, [fp, #-56]	; 0xffffffc8
   6b48c:	movw	r1, #0
   6b490:	cmp	r0, r1
   6b494:	bne	6b49c <__assert_fail@plt+0x588e4>
   6b498:	b	6b114 <__assert_fail@plt+0x5855c>
   6b49c:	movw	r0, #0
   6b4a0:	str	r0, [fp, #-28]	; 0xffffffe4
   6b4a4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   6b4a8:	cmp	r0, #8
   6b4ac:	bge	6b5e8 <__assert_fail@plt+0x58a30>
   6b4b0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   6b4b4:	lsl	r0, r0, #5
   6b4b8:	str	r0, [fp, #-36]	; 0xffffffdc
   6b4bc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   6b4c0:	sub	lr, fp, #3072	; 0xc00
   6b4c4:	sub	r1, lr, #100	; 0x64
   6b4c8:	add	r0, r1, r0, lsl #2
   6b4cc:	ldr	r0, [r0]
   6b4d0:	str	r0, [fp, #-44]	; 0xffffffd4
   6b4d4:	movw	r0, #1
   6b4d8:	str	r0, [fp, #-48]	; 0xffffffd0
   6b4dc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   6b4e0:	cmp	r0, #0
   6b4e4:	beq	6b5d4 <__assert_fail@plt+0x58a1c>
   6b4e8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   6b4ec:	and	r0, r0, #1
   6b4f0:	cmp	r0, #0
   6b4f4:	beq	6b5a8 <__assert_fail@plt+0x589f0>
   6b4f8:	movw	r0, #0
   6b4fc:	str	r0, [fp, #-32]	; 0xffffffe0
   6b500:	ldr	r0, [fp, #-32]	; 0xffffffe0
   6b504:	add	r1, sp, #20
   6b508:	add	r0, r1, r0, lsl #5
   6b50c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   6b510:	add	r0, r0, r1, lsl #2
   6b514:	ldr	r0, [r0]
   6b518:	ldr	r1, [fp, #-48]	; 0xffffffd0
   6b51c:	and	r0, r0, r1
   6b520:	cmp	r0, #0
   6b524:	bne	6b53c <__assert_fail@plt+0x58984>
   6b528:	b	6b52c <__assert_fail@plt+0x58974>
   6b52c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   6b530:	add	r0, r0, #1
   6b534:	str	r0, [fp, #-32]	; 0xffffffe0
   6b538:	b	6b500 <__assert_fail@plt+0x58948>
   6b53c:	ldr	r0, [fp, #-16]
   6b540:	add	r0, r0, #96	; 0x60
   6b544:	ldr	r1, [fp, #-28]	; 0xffffffe4
   6b548:	add	r0, r0, r1, lsl #2
   6b54c:	ldr	r0, [r0]
   6b550:	ldr	r1, [fp, #-48]	; 0xffffffd0
   6b554:	and	r0, r0, r1
   6b558:	cmp	r0, #0
   6b55c:	beq	6b584 <__assert_fail@plt+0x589cc>
   6b560:	ldr	r0, [fp, #-32]	; 0xffffffe0
   6b564:	sub	lr, fp, #2048	; 0x800
   6b568:	sub	r1, lr, #56	; 0x38
   6b56c:	ldr	r0, [r1, r0, lsl #2]
   6b570:	ldr	r1, [fp, #-56]	; 0xffffffc8
   6b574:	ldr	r2, [fp, #-36]	; 0xffffffdc
   6b578:	add	r1, r1, r2, lsl #2
   6b57c:	str	r0, [r1]
   6b580:	b	6b5a4 <__assert_fail@plt+0x589ec>
   6b584:	ldr	r0, [fp, #-32]	; 0xffffffe0
   6b588:	sub	lr, fp, #1024	; 0x400
   6b58c:	sub	r1, lr, #56	; 0x38
   6b590:	ldr	r0, [r1, r0, lsl #2]
   6b594:	ldr	r1, [fp, #-56]	; 0xffffffc8
   6b598:	ldr	r2, [fp, #-36]	; 0xffffffdc
   6b59c:	add	r1, r1, r2, lsl #2
   6b5a0:	str	r0, [r1]
   6b5a4:	b	6b5a8 <__assert_fail@plt+0x589f0>
   6b5a8:	b	6b5ac <__assert_fail@plt+0x589f4>
   6b5ac:	ldr	r0, [fp, #-48]	; 0xffffffd0
   6b5b0:	lsl	r0, r0, #1
   6b5b4:	str	r0, [fp, #-48]	; 0xffffffd0
   6b5b8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   6b5bc:	lsr	r0, r0, #1
   6b5c0:	str	r0, [fp, #-44]	; 0xffffffd4
   6b5c4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   6b5c8:	add	r0, r0, #1
   6b5cc:	str	r0, [fp, #-36]	; 0xffffffdc
   6b5d0:	b	6b4dc <__assert_fail@plt+0x58924>
   6b5d4:	b	6b5d8 <__assert_fail@plt+0x58a20>
   6b5d8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   6b5dc:	add	r0, r0, #1
   6b5e0:	str	r0, [fp, #-28]	; 0xffffffe4
   6b5e4:	b	6b4a4 <__assert_fail@plt+0x588ec>
   6b5e8:	b	6b73c <__assert_fail@plt+0x58b84>
   6b5ec:	movw	r0, #4
   6b5f0:	movw	r1, #512	; 0x200
   6b5f4:	bl	50240 <__assert_fail@plt+0x3d688>
   6b5f8:	ldr	r1, [fp, #-20]	; 0xffffffec
   6b5fc:	str	r0, [r1, #48]	; 0x30
   6b600:	str	r0, [fp, #-56]	; 0xffffffc8
   6b604:	ldr	r0, [fp, #-56]	; 0xffffffc8
   6b608:	movw	r1, #0
   6b60c:	cmp	r0, r1
   6b610:	bne	6b618 <__assert_fail@plt+0x58a60>
   6b614:	b	6b114 <__assert_fail@plt+0x5855c>
   6b618:	movw	r0, #0
   6b61c:	str	r0, [fp, #-28]	; 0xffffffe4
   6b620:	ldr	r0, [fp, #-28]	; 0xffffffe4
   6b624:	cmp	r0, #8
   6b628:	bge	6b738 <__assert_fail@plt+0x58b80>
   6b62c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   6b630:	lsl	r0, r0, #5
   6b634:	str	r0, [fp, #-36]	; 0xffffffdc
   6b638:	ldr	r0, [fp, #-28]	; 0xffffffe4
   6b63c:	sub	lr, fp, #3072	; 0xc00
   6b640:	sub	r1, lr, #100	; 0x64
   6b644:	add	r0, r1, r0, lsl #2
   6b648:	ldr	r0, [r0]
   6b64c:	str	r0, [fp, #-44]	; 0xffffffd4
   6b650:	movw	r0, #1
   6b654:	str	r0, [fp, #-48]	; 0xffffffd0
   6b658:	ldr	r0, [fp, #-44]	; 0xffffffd4
   6b65c:	cmp	r0, #0
   6b660:	beq	6b724 <__assert_fail@plt+0x58b6c>
   6b664:	ldr	r0, [fp, #-44]	; 0xffffffd4
   6b668:	and	r0, r0, #1
   6b66c:	cmp	r0, #0
   6b670:	beq	6b6f8 <__assert_fail@plt+0x58b40>
   6b674:	movw	r0, #0
   6b678:	str	r0, [fp, #-32]	; 0xffffffe0
   6b67c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   6b680:	add	r1, sp, #20
   6b684:	add	r0, r1, r0, lsl #5
   6b688:	ldr	r1, [fp, #-28]	; 0xffffffe4
   6b68c:	add	r0, r0, r1, lsl #2
   6b690:	ldr	r0, [r0]
   6b694:	ldr	r1, [fp, #-48]	; 0xffffffd0
   6b698:	and	r0, r0, r1
   6b69c:	cmp	r0, #0
   6b6a0:	bne	6b6b8 <__assert_fail@plt+0x58b00>
   6b6a4:	b	6b6a8 <__assert_fail@plt+0x58af0>
   6b6a8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   6b6ac:	add	r0, r0, #1
   6b6b0:	str	r0, [fp, #-32]	; 0xffffffe0
   6b6b4:	b	6b67c <__assert_fail@plt+0x58ac4>
   6b6b8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   6b6bc:	sub	lr, fp, #1024	; 0x400
   6b6c0:	sub	r1, lr, #56	; 0x38
   6b6c4:	ldr	r0, [r1, r0, lsl #2]
   6b6c8:	ldr	r1, [fp, #-56]	; 0xffffffc8
   6b6cc:	ldr	r2, [fp, #-36]	; 0xffffffdc
   6b6d0:	str	r0, [r1, r2, lsl #2]
   6b6d4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   6b6d8:	sub	lr, fp, #2048	; 0x800
   6b6dc:	sub	r1, lr, #56	; 0x38
   6b6e0:	ldr	r0, [r1, r0, lsl #2]
   6b6e4:	ldr	r1, [fp, #-56]	; 0xffffffc8
   6b6e8:	ldr	r2, [fp, #-36]	; 0xffffffdc
   6b6ec:	add	r2, r2, #256	; 0x100
   6b6f0:	add	r1, r1, r2, lsl #2
   6b6f4:	str	r0, [r1]
   6b6f8:	b	6b6fc <__assert_fail@plt+0x58b44>
   6b6fc:	ldr	r0, [fp, #-48]	; 0xffffffd0
   6b700:	lsl	r0, r0, #1
   6b704:	str	r0, [fp, #-48]	; 0xffffffd0
   6b708:	ldr	r0, [fp, #-44]	; 0xffffffd4
   6b70c:	lsr	r0, r0, #1
   6b710:	str	r0, [fp, #-44]	; 0xffffffd4
   6b714:	ldr	r0, [fp, #-36]	; 0xffffffdc
   6b718:	add	r0, r0, #1
   6b71c:	str	r0, [fp, #-36]	; 0xffffffdc
   6b720:	b	6b658 <__assert_fail@plt+0x58aa0>
   6b724:	b	6b728 <__assert_fail@plt+0x58b70>
   6b728:	ldr	r0, [fp, #-28]	; 0xffffffe4
   6b72c:	add	r0, r0, #1
   6b730:	str	r0, [fp, #-28]	; 0xffffffe4
   6b734:	b	6b620 <__assert_fail@plt+0x58a68>
   6b738:	b	6b73c <__assert_fail@plt+0x58b84>
   6b73c:	sub	lr, fp, #3072	; 0xc00
   6b740:	sub	r0, lr, #100	; 0x64
   6b744:	movw	r1, #10
   6b748:	bl	67000 <__assert_fail@plt+0x54448>
   6b74c:	tst	r0, #1
   6b750:	beq	6b7e8 <__assert_fail@plt+0x58c30>
   6b754:	movw	r0, #0
   6b758:	str	r0, [fp, #-32]	; 0xffffffe0
   6b75c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   6b760:	ldr	r1, [fp, #-52]	; 0xffffffcc
   6b764:	cmp	r0, r1
   6b768:	bge	6b7e4 <__assert_fail@plt+0x58c2c>
   6b76c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   6b770:	add	r1, sp, #20
   6b774:	add	r0, r1, r0, lsl #5
   6b778:	movw	r1, #10
   6b77c:	bl	67000 <__assert_fail@plt+0x54448>
   6b780:	tst	r0, #1
   6b784:	beq	6b7d0 <__assert_fail@plt+0x58c18>
   6b788:	ldr	r0, [fp, #-32]	; 0xffffffe0
   6b78c:	sub	lr, fp, #3072	; 0xc00
   6b790:	sub	r1, lr, #56	; 0x38
   6b794:	add	r0, r1, r0, lsl #2
   6b798:	ldr	r0, [r0]
   6b79c:	ldr	r1, [fp, #-56]	; 0xffffffc8
   6b7a0:	str	r0, [r1, #40]	; 0x28
   6b7a4:	ldrb	r0, [fp, #-37]	; 0xffffffdb
   6b7a8:	tst	r0, #1
   6b7ac:	beq	6b7cc <__assert_fail@plt+0x58c14>
   6b7b0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   6b7b4:	sub	lr, fp, #3072	; 0xc00
   6b7b8:	sub	r1, lr, #56	; 0x38
   6b7bc:	add	r0, r1, r0, lsl #2
   6b7c0:	ldr	r0, [r0]
   6b7c4:	ldr	r1, [fp, #-56]	; 0xffffffc8
   6b7c8:	str	r0, [r1, #1064]	; 0x428
   6b7cc:	b	6b7e4 <__assert_fail@plt+0x58c2c>
   6b7d0:	b	6b7d4 <__assert_fail@plt+0x58c1c>
   6b7d4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   6b7d8:	add	r0, r0, #1
   6b7dc:	str	r0, [fp, #-32]	; 0xffffffe0
   6b7e0:	b	6b75c <__assert_fail@plt+0x58ba4>
   6b7e4:	b	6b7e8 <__assert_fail@plt+0x58c30>
   6b7e8:	ldr	r0, [fp, #-3132]	; 0xfffff3c4
   6b7ec:	bl	50c68 <__assert_fail@plt+0x3e0b0>
   6b7f0:	movw	r0, #0
   6b7f4:	str	r0, [fp, #-28]	; 0xffffffe4
   6b7f8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   6b7fc:	ldr	r1, [fp, #-52]	; 0xffffffcc
   6b800:	cmp	r0, r1
   6b804:	bge	6b838 <__assert_fail@plt+0x58c80>
   6b808:	sub	lr, fp, #6144	; 0x1800
   6b80c:	sub	r0, lr, #100	; 0x64
   6b810:	ldr	r1, [fp, #-28]	; 0xffffffe4
   6b814:	movw	r2, #12
   6b818:	mul	r1, r1, r2
   6b81c:	add	r0, r0, r1
   6b820:	ldr	r0, [r0, #8]
   6b824:	bl	50c68 <__assert_fail@plt+0x3e0b0>
   6b828:	ldr	r0, [fp, #-28]	; 0xffffffe4
   6b82c:	add	r0, r0, #1
   6b830:	str	r0, [fp, #-28]	; 0xffffffe4
   6b834:	b	6b7f8 <__assert_fail@plt+0x58c40>
   6b838:	movw	r0, #1
   6b83c:	and	r0, r0, #1
   6b840:	strb	r0, [fp, #-9]
   6b844:	ldrb	r0, [fp, #-9]
   6b848:	and	r0, r0, #1
   6b84c:	sub	sp, fp, #8
   6b850:	pop	{r4, r5, fp, pc}
   6b854:	push	{fp, lr}
   6b858:	mov	fp, sp
   6b85c:	sub	sp, sp, #184	; 0xb8
   6b860:	sub	ip, fp, #76	; 0x4c
   6b864:	str	r0, [fp, #-8]
   6b868:	str	r1, [fp, #-12]
   6b86c:	str	r2, [fp, #-16]
   6b870:	str	r3, [fp, #-20]	; 0xffffffec
   6b874:	ldr	r0, [fp, #-12]
   6b878:	add	r0, r0, #4
   6b87c:	str	r0, [fp, #-80]	; 0xffffffb0
   6b880:	mov	r0, ip
   6b884:	bl	6c034 <__assert_fail@plt+0x5947c>
   6b888:	movw	r0, #0
   6b88c:	str	r0, [fp, #-44]	; 0xffffffd4
   6b890:	str	r0, [fp, #-32]	; 0xffffffe0
   6b894:	ldr	r0, [fp, #-32]	; 0xffffffe0
   6b898:	ldr	r1, [fp, #-80]	; 0xffffffb0
   6b89c:	ldr	r1, [r1, #4]
   6b8a0:	cmp	r0, r1
   6b8a4:	bge	6bfc0 <__assert_fail@plt+0x59408>
   6b8a8:	ldr	r0, [fp, #-8]
   6b8ac:	ldr	r0, [r0]
   6b8b0:	ldr	r1, [fp, #-80]	; 0xffffffb0
   6b8b4:	ldr	r1, [r1, #8]
   6b8b8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   6b8bc:	ldr	r1, [r1, r2, lsl #2]
   6b8c0:	add	r0, r0, r1, lsl #3
   6b8c4:	str	r0, [fp, #-84]	; 0xffffffac
   6b8c8:	ldr	r0, [fp, #-84]	; 0xffffffac
   6b8cc:	ldr	r0, [r0, #4]
   6b8d0:	and	r0, r0, #255	; 0xff
   6b8d4:	str	r0, [fp, #-88]	; 0xffffffa8
   6b8d8:	ldr	r0, [fp, #-84]	; 0xffffffac
   6b8dc:	ldr	r0, [r0, #4]
   6b8e0:	lsr	r0, r0, #8
   6b8e4:	movw	r1, #1023	; 0x3ff
   6b8e8:	and	r0, r0, r1
   6b8ec:	str	r0, [sp, #92]	; 0x5c
   6b8f0:	ldr	r0, [fp, #-88]	; 0xffffffa8
   6b8f4:	cmp	r0, #1
   6b8f8:	bne	6b910 <__assert_fail@plt+0x58d58>
   6b8fc:	sub	r0, fp, #76	; 0x4c
   6b900:	ldr	r1, [fp, #-84]	; 0xffffffac
   6b904:	ldrb	r1, [r1]
   6b908:	bl	6029c <__assert_fail@plt+0x4d6e4>
   6b90c:	b	6ba20 <__assert_fail@plt+0x58e68>
   6b910:	ldr	r0, [fp, #-88]	; 0xffffffa8
   6b914:	cmp	r0, #3
   6b918:	bne	6b930 <__assert_fail@plt+0x58d78>
   6b91c:	sub	r0, fp, #76	; 0x4c
   6b920:	ldr	r1, [fp, #-84]	; 0xffffffac
   6b924:	ldr	r1, [r1]
   6b928:	bl	6c060 <__assert_fail@plt+0x594a8>
   6b92c:	b	6ba1c <__assert_fail@plt+0x58e64>
   6b930:	ldr	r0, [fp, #-88]	; 0xffffffa8
   6b934:	cmp	r0, #5
   6b938:	bne	6b9ac <__assert_fail@plt+0x58df4>
   6b93c:	ldr	r0, [fp, #-8]
   6b940:	ldr	r0, [r0, #92]	; 0x5c
   6b944:	cmp	r0, #1
   6b948:	ble	6b960 <__assert_fail@plt+0x58da8>
   6b94c:	sub	r0, fp, #76	; 0x4c
   6b950:	ldr	r1, [fp, #-8]
   6b954:	ldr	r1, [r1, #60]	; 0x3c
   6b958:	bl	6c060 <__assert_fail@plt+0x594a8>
   6b95c:	b	6b968 <__assert_fail@plt+0x58db0>
   6b960:	sub	r0, fp, #76	; 0x4c
   6b964:	bl	6c0b8 <__assert_fail@plt+0x59500>
   6b968:	ldr	r0, [fp, #-8]
   6b96c:	ldr	r0, [r0, #128]	; 0x80
   6b970:	and	r0, r0, #64	; 0x40
   6b974:	cmp	r0, #0
   6b978:	bne	6b988 <__assert_fail@plt+0x58dd0>
   6b97c:	sub	r0, fp, #76	; 0x4c
   6b980:	movw	r1, #10
   6b984:	bl	6c0e4 <__assert_fail@plt+0x5952c>
   6b988:	ldr	r0, [fp, #-8]
   6b98c:	ldr	r0, [r0, #128]	; 0x80
   6b990:	and	r0, r0, #128	; 0x80
   6b994:	cmp	r0, #0
   6b998:	beq	6b9a8 <__assert_fail@plt+0x58df0>
   6b99c:	sub	r0, fp, #76	; 0x4c
   6b9a0:	movw	r1, #0
   6b9a4:	bl	6c0e4 <__assert_fail@plt+0x5952c>
   6b9a8:	b	6ba18 <__assert_fail@plt+0x58e60>
   6b9ac:	ldr	r0, [fp, #-88]	; 0xffffffa8
   6b9b0:	cmp	r0, #7
   6b9b4:	bne	6ba10 <__assert_fail@plt+0x58e58>
   6b9b8:	sub	r0, fp, #76	; 0x4c
   6b9bc:	movw	r1, #255	; 0xff
   6b9c0:	and	r1, r1, #255	; 0xff
   6b9c4:	movw	r2, #16
   6b9c8:	bl	12900 <memset@plt>
   6b9cc:	ldr	r0, [fp, #-8]
   6b9d0:	ldr	r0, [r0, #128]	; 0x80
   6b9d4:	and	r0, r0, #64	; 0x40
   6b9d8:	cmp	r0, #0
   6b9dc:	bne	6b9ec <__assert_fail@plt+0x58e34>
   6b9e0:	sub	r0, fp, #76	; 0x4c
   6b9e4:	movw	r1, #10
   6b9e8:	bl	6c0e4 <__assert_fail@plt+0x5952c>
   6b9ec:	ldr	r0, [fp, #-8]
   6b9f0:	ldr	r0, [r0, #128]	; 0x80
   6b9f4:	and	r0, r0, #128	; 0x80
   6b9f8:	cmp	r0, #0
   6b9fc:	beq	6ba0c <__assert_fail@plt+0x58e54>
   6ba00:	sub	r0, fp, #76	; 0x4c
   6ba04:	movw	r1, #0
   6ba08:	bl	6c0e4 <__assert_fail@plt+0x5952c>
   6ba0c:	b	6ba14 <__assert_fail@plt+0x58e5c>
   6ba10:	b	6bfb0 <__assert_fail@plt+0x593f8>
   6ba14:	b	6ba18 <__assert_fail@plt+0x58e60>
   6ba18:	b	6ba1c <__assert_fail@plt+0x58e64>
   6ba1c:	b	6ba20 <__assert_fail@plt+0x58e68>
   6ba20:	ldr	r0, [sp, #92]	; 0x5c
   6ba24:	cmp	r0, #0
   6ba28:	beq	6bcfc <__assert_fail@plt+0x59144>
   6ba2c:	ldr	r0, [sp, #92]	; 0x5c
   6ba30:	and	r0, r0, #32
   6ba34:	cmp	r0, #0
   6ba38:	beq	6ba80 <__assert_fail@plt+0x58ec8>
   6ba3c:	sub	r0, fp, #76	; 0x4c
   6ba40:	movw	r1, #10
   6ba44:	bl	67000 <__assert_fail@plt+0x54448>
   6ba48:	sub	r1, fp, #76	; 0x4c
   6ba4c:	and	r0, r0, #1
   6ba50:	strb	r0, [sp, #91]	; 0x5b
   6ba54:	mov	r0, r1
   6ba58:	bl	6c034 <__assert_fail@plt+0x5947c>
   6ba5c:	ldrb	r0, [sp, #91]	; 0x5b
   6ba60:	tst	r0, #1
   6ba64:	beq	6ba78 <__assert_fail@plt+0x58ec0>
   6ba68:	sub	r0, fp, #76	; 0x4c
   6ba6c:	movw	r1, #10
   6ba70:	bl	6029c <__assert_fail@plt+0x4d6e4>
   6ba74:	b	6ba7c <__assert_fail@plt+0x58ec4>
   6ba78:	b	6bfb0 <__assert_fail@plt+0x593f8>
   6ba7c:	b	6ba80 <__assert_fail@plt+0x58ec8>
   6ba80:	ldr	r0, [sp, #92]	; 0x5c
   6ba84:	and	r0, r0, #128	; 0x80
   6ba88:	cmp	r0, #0
   6ba8c:	beq	6ba9c <__assert_fail@plt+0x58ee4>
   6ba90:	sub	r0, fp, #76	; 0x4c
   6ba94:	bl	6c034 <__assert_fail@plt+0x5947c>
   6ba98:	b	6bfb0 <__assert_fail@plt+0x593f8>
   6ba9c:	ldr	r0, [sp, #92]	; 0x5c
   6baa0:	and	r0, r0, #4
   6baa4:	cmp	r0, #0
   6baa8:	beq	6bbc8 <__assert_fail@plt+0x59010>
   6baac:	movw	r0, #0
   6bab0:	str	r0, [sp, #84]	; 0x54
   6bab4:	ldr	r0, [fp, #-88]	; 0xffffffa8
   6bab8:	cmp	r0, #1
   6babc:	bne	6bae4 <__assert_fail@plt+0x58f2c>
   6bac0:	ldr	r0, [fp, #-84]	; 0xffffffac
   6bac4:	ldr	r0, [r0, #4]
   6bac8:	lsr	r0, r0, #22
   6bacc:	and	r0, r0, #1
   6bad0:	cmp	r0, #0
   6bad4:	bne	6bae4 <__assert_fail@plt+0x58f2c>
   6bad8:	sub	r0, fp, #76	; 0x4c
   6badc:	bl	6c034 <__assert_fail@plt+0x5947c>
   6bae0:	b	6bfb0 <__assert_fail@plt+0x593f8>
   6bae4:	ldr	r0, [fp, #-8]
   6bae8:	ldr	r0, [r0, #92]	; 0x5c
   6baec:	cmp	r0, #1
   6baf0:	ble	6bb5c <__assert_fail@plt+0x58fa4>
   6baf4:	movw	r0, #0
   6baf8:	str	r0, [fp, #-36]	; 0xffffffdc
   6bafc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   6bb00:	cmp	r0, #8
   6bb04:	bge	6bb58 <__assert_fail@plt+0x58fa0>
   6bb08:	ldr	r0, [fp, #-8]
   6bb0c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   6bb10:	add	r2, r0, r1, lsl #2
   6bb14:	ldr	r2, [r2, #96]	; 0x60
   6bb18:	ldr	r0, [r0, #60]	; 0x3c
   6bb1c:	ldr	r0, [r0, r1, lsl #2]
   6bb20:	mvn	r0, r0
   6bb24:	orr	r0, r2, r0
   6bb28:	sub	r2, fp, #76	; 0x4c
   6bb2c:	add	r1, r2, r1, lsl #2
   6bb30:	ldr	r2, [r1]
   6bb34:	and	r0, r2, r0
   6bb38:	str	r0, [r1]
   6bb3c:	ldr	r1, [sp, #84]	; 0x54
   6bb40:	orr	r0, r1, r0
   6bb44:	str	r0, [sp, #84]	; 0x54
   6bb48:	ldr	r0, [fp, #-36]	; 0xffffffdc
   6bb4c:	add	r0, r0, #1
   6bb50:	str	r0, [fp, #-36]	; 0xffffffdc
   6bb54:	b	6bafc <__assert_fail@plt+0x58f44>
   6bb58:	b	6bbb4 <__assert_fail@plt+0x58ffc>
   6bb5c:	movw	r0, #0
   6bb60:	str	r0, [fp, #-36]	; 0xffffffdc
   6bb64:	ldr	r0, [fp, #-36]	; 0xffffffdc
   6bb68:	cmp	r0, #8
   6bb6c:	bge	6bbb0 <__assert_fail@plt+0x58ff8>
   6bb70:	ldr	r0, [fp, #-8]
   6bb74:	ldr	r1, [fp, #-36]	; 0xffffffdc
   6bb78:	add	r0, r0, r1, lsl #2
   6bb7c:	ldr	r0, [r0, #96]	; 0x60
   6bb80:	sub	r2, fp, #76	; 0x4c
   6bb84:	add	r1, r2, r1, lsl #2
   6bb88:	ldr	r2, [r1]
   6bb8c:	and	r0, r2, r0
   6bb90:	str	r0, [r1]
   6bb94:	ldr	r1, [sp, #84]	; 0x54
   6bb98:	orr	r0, r1, r0
   6bb9c:	str	r0, [sp, #84]	; 0x54
   6bba0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   6bba4:	add	r0, r0, #1
   6bba8:	str	r0, [fp, #-36]	; 0xffffffdc
   6bbac:	b	6bb64 <__assert_fail@plt+0x58fac>
   6bbb0:	b	6bbb4 <__assert_fail@plt+0x58ffc>
   6bbb4:	ldr	r0, [sp, #84]	; 0x54
   6bbb8:	cmp	r0, #0
   6bbbc:	bne	6bbc4 <__assert_fail@plt+0x5900c>
   6bbc0:	b	6bfb0 <__assert_fail@plt+0x593f8>
   6bbc4:	b	6bbc8 <__assert_fail@plt+0x59010>
   6bbc8:	ldr	r0, [sp, #92]	; 0x5c
   6bbcc:	and	r0, r0, #8
   6bbd0:	cmp	r0, #0
   6bbd4:	beq	6bcf8 <__assert_fail@plt+0x59140>
   6bbd8:	movw	r0, #0
   6bbdc:	str	r0, [sp, #80]	; 0x50
   6bbe0:	ldr	r0, [fp, #-88]	; 0xffffffa8
   6bbe4:	cmp	r0, #1
   6bbe8:	bne	6bc10 <__assert_fail@plt+0x59058>
   6bbec:	ldr	r0, [fp, #-84]	; 0xffffffac
   6bbf0:	ldr	r0, [r0, #4]
   6bbf4:	lsr	r0, r0, #22
   6bbf8:	and	r0, r0, #1
   6bbfc:	cmp	r0, #0
   6bc00:	beq	6bc10 <__assert_fail@plt+0x59058>
   6bc04:	sub	r0, fp, #76	; 0x4c
   6bc08:	bl	6c034 <__assert_fail@plt+0x5947c>
   6bc0c:	b	6bfb0 <__assert_fail@plt+0x593f8>
   6bc10:	ldr	r0, [fp, #-8]
   6bc14:	ldr	r0, [r0, #92]	; 0x5c
   6bc18:	cmp	r0, #1
   6bc1c:	ble	6bc88 <__assert_fail@plt+0x590d0>
   6bc20:	movw	r0, #0
   6bc24:	str	r0, [fp, #-36]	; 0xffffffdc
   6bc28:	ldr	r0, [fp, #-36]	; 0xffffffdc
   6bc2c:	cmp	r0, #8
   6bc30:	bge	6bc84 <__assert_fail@plt+0x590cc>
   6bc34:	ldr	r0, [fp, #-8]
   6bc38:	ldr	r1, [fp, #-36]	; 0xffffffdc
   6bc3c:	add	r2, r0, r1, lsl #2
   6bc40:	ldr	r2, [r2, #96]	; 0x60
   6bc44:	ldr	r0, [r0, #60]	; 0x3c
   6bc48:	ldr	r0, [r0, r1, lsl #2]
   6bc4c:	and	r0, r2, r0
   6bc50:	mvn	r0, r0
   6bc54:	sub	r2, fp, #76	; 0x4c
   6bc58:	add	r1, r2, r1, lsl #2
   6bc5c:	ldr	r2, [r1]
   6bc60:	and	r0, r2, r0
   6bc64:	str	r0, [r1]
   6bc68:	ldr	r1, [sp, #80]	; 0x50
   6bc6c:	orr	r0, r1, r0
   6bc70:	str	r0, [sp, #80]	; 0x50
   6bc74:	ldr	r0, [fp, #-36]	; 0xffffffdc
   6bc78:	add	r0, r0, #1
   6bc7c:	str	r0, [fp, #-36]	; 0xffffffdc
   6bc80:	b	6bc28 <__assert_fail@plt+0x59070>
   6bc84:	b	6bce4 <__assert_fail@plt+0x5912c>
   6bc88:	movw	r0, #0
   6bc8c:	str	r0, [fp, #-36]	; 0xffffffdc
   6bc90:	ldr	r0, [fp, #-36]	; 0xffffffdc
   6bc94:	cmp	r0, #8
   6bc98:	bge	6bce0 <__assert_fail@plt+0x59128>
   6bc9c:	ldr	r0, [fp, #-8]
   6bca0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   6bca4:	add	r0, r0, r1, lsl #2
   6bca8:	ldr	r0, [r0, #96]	; 0x60
   6bcac:	mvn	r0, r0
   6bcb0:	sub	r2, fp, #76	; 0x4c
   6bcb4:	add	r1, r2, r1, lsl #2
   6bcb8:	ldr	r2, [r1]
   6bcbc:	and	r0, r2, r0
   6bcc0:	str	r0, [r1]
   6bcc4:	ldr	r1, [sp, #80]	; 0x50
   6bcc8:	orr	r0, r1, r0
   6bccc:	str	r0, [sp, #80]	; 0x50
   6bcd0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   6bcd4:	add	r0, r0, #1
   6bcd8:	str	r0, [fp, #-36]	; 0xffffffdc
   6bcdc:	b	6bc90 <__assert_fail@plt+0x590d8>
   6bce0:	b	6bce4 <__assert_fail@plt+0x5912c>
   6bce4:	ldr	r0, [sp, #80]	; 0x50
   6bce8:	cmp	r0, #0
   6bcec:	bne	6bcf4 <__assert_fail@plt+0x5913c>
   6bcf0:	b	6bfb0 <__assert_fail@plt+0x593f8>
   6bcf4:	b	6bcf8 <__assert_fail@plt+0x59140>
   6bcf8:	b	6bcfc <__assert_fail@plt+0x59144>
   6bcfc:	movw	r0, #0
   6bd00:	str	r0, [fp, #-36]	; 0xffffffdc
   6bd04:	ldr	r0, [fp, #-36]	; 0xffffffdc
   6bd08:	ldr	r1, [fp, #-44]	; 0xffffffd4
   6bd0c:	cmp	r0, r1
   6bd10:	bge	6bf38 <__assert_fail@plt+0x59380>
   6bd14:	ldr	r0, [fp, #-88]	; 0xffffffa8
   6bd18:	cmp	r0, #1
   6bd1c:	bne	6bd44 <__assert_fail@plt+0x5918c>
   6bd20:	ldr	r0, [fp, #-20]	; 0xffffffec
   6bd24:	ldr	r1, [fp, #-36]	; 0xffffffdc
   6bd28:	add	r0, r0, r1, lsl #5
   6bd2c:	ldr	r1, [fp, #-84]	; 0xffffffac
   6bd30:	ldrb	r1, [r1]
   6bd34:	bl	67000 <__assert_fail@plt+0x54448>
   6bd38:	tst	r0, #1
   6bd3c:	bne	6bd44 <__assert_fail@plt+0x5918c>
   6bd40:	b	6bf28 <__assert_fail@plt+0x59370>
   6bd44:	movw	r0, #0
   6bd48:	str	r0, [sp, #12]
   6bd4c:	str	r0, [fp, #-40]	; 0xffffffd8
   6bd50:	ldr	r0, [fp, #-40]	; 0xffffffd8
   6bd54:	cmp	r0, #8
   6bd58:	bge	6bda4 <__assert_fail@plt+0x591ec>
   6bd5c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   6bd60:	sub	r1, fp, #76	; 0x4c
   6bd64:	ldr	r1, [r1, r0, lsl #2]
   6bd68:	ldr	r2, [fp, #-20]	; 0xffffffec
   6bd6c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   6bd70:	add	r2, r2, r3, lsl #5
   6bd74:	ldr	r2, [r2, r0, lsl #2]
   6bd78:	and	r1, r1, r2
   6bd7c:	add	r2, sp, #48	; 0x30
   6bd80:	add	r0, r2, r0, lsl #2
   6bd84:	str	r1, [r0]
   6bd88:	ldr	r0, [sp, #12]
   6bd8c:	orr	r0, r0, r1
   6bd90:	str	r0, [sp, #12]
   6bd94:	ldr	r0, [fp, #-40]	; 0xffffffd8
   6bd98:	add	r0, r0, #1
   6bd9c:	str	r0, [fp, #-40]	; 0xffffffd8
   6bda0:	b	6bd50 <__assert_fail@plt+0x59198>
   6bda4:	ldr	r0, [sp, #12]
   6bda8:	cmp	r0, #0
   6bdac:	bne	6bdb4 <__assert_fail@plt+0x591fc>
   6bdb0:	b	6bf28 <__assert_fail@plt+0x59370>
   6bdb4:	movw	r0, #0
   6bdb8:	str	r0, [sp, #4]
   6bdbc:	str	r0, [sp, #8]
   6bdc0:	str	r0, [fp, #-40]	; 0xffffffd8
   6bdc4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   6bdc8:	cmp	r0, #8
   6bdcc:	bge	6be44 <__assert_fail@plt+0x5928c>
   6bdd0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   6bdd4:	sub	r1, fp, #76	; 0x4c
   6bdd8:	ldr	r2, [r1, r0, lsl #2]
   6bddc:	ldr	r3, [fp, #-20]	; 0xffffffec
   6bde0:	ldr	ip, [fp, #-36]	; 0xffffffdc
   6bde4:	add	r3, r3, ip, lsl #5
   6bde8:	ldr	r3, [r3, r0, lsl #2]
   6bdec:	bic	r2, r3, r2
   6bdf0:	add	r3, sp, #16
   6bdf4:	str	r2, [r3, r0, lsl #2]
   6bdf8:	ldr	r0, [sp, #8]
   6bdfc:	orr	r0, r0, r2
   6be00:	str	r0, [sp, #8]
   6be04:	ldr	r0, [fp, #-40]	; 0xffffffd8
   6be08:	add	r2, r1, r0, lsl #2
   6be0c:	ldr	r1, [r1, r0, lsl #2]
   6be10:	ldr	r3, [fp, #-20]	; 0xffffffec
   6be14:	ldr	ip, [fp, #-36]	; 0xffffffdc
   6be18:	add	r3, r3, ip, lsl #5
   6be1c:	ldr	r0, [r3, r0, lsl #2]
   6be20:	bic	r0, r1, r0
   6be24:	str	r0, [r2]
   6be28:	ldr	r1, [sp, #4]
   6be2c:	orr	r0, r1, r0
   6be30:	str	r0, [sp, #4]
   6be34:	ldr	r0, [fp, #-40]	; 0xffffffd8
   6be38:	add	r0, r0, #1
   6be3c:	str	r0, [fp, #-40]	; 0xffffffd8
   6be40:	b	6bdc4 <__assert_fail@plt+0x5920c>
   6be44:	ldr	r0, [sp, #8]
   6be48:	cmp	r0, #0
   6be4c:	beq	6becc <__assert_fail@plt+0x59314>
   6be50:	add	r1, sp, #48	; 0x30
   6be54:	ldr	r0, [fp, #-20]	; 0xffffffec
   6be58:	ldr	r2, [fp, #-44]	; 0xffffffd4
   6be5c:	add	r0, r0, r2, lsl #5
   6be60:	add	r2, sp, #16
   6be64:	str	r1, [sp]
   6be68:	mov	r1, r2
   6be6c:	bl	6c12c <__assert_fail@plt+0x59574>
   6be70:	ldr	r0, [fp, #-20]	; 0xffffffec
   6be74:	ldr	r1, [fp, #-36]	; 0xffffffdc
   6be78:	add	r0, r0, r1, lsl #5
   6be7c:	ldr	r1, [sp]
   6be80:	bl	6c12c <__assert_fail@plt+0x59574>
   6be84:	ldr	r0, [fp, #-16]
   6be88:	ldr	r1, [fp, #-44]	; 0xffffffd4
   6be8c:	movw	r2, #12
   6be90:	mul	r1, r1, r2
   6be94:	add	r0, r0, r1
   6be98:	ldr	r1, [fp, #-16]
   6be9c:	ldr	lr, [fp, #-36]	; 0xffffffdc
   6bea0:	mul	r2, lr, r2
   6bea4:	add	r1, r1, r2
   6bea8:	bl	6427c <__assert_fail@plt+0x516c4>
   6beac:	str	r0, [fp, #-24]	; 0xffffffe8
   6beb0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   6beb4:	cmp	r0, #0
   6beb8:	beq	6bec0 <__assert_fail@plt+0x59308>
   6bebc:	b	6bfdc <__assert_fail@plt+0x59424>
   6bec0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   6bec4:	add	r0, r0, #1
   6bec8:	str	r0, [fp, #-44]	; 0xffffffd4
   6becc:	ldr	r0, [fp, #-16]
   6bed0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   6bed4:	add	r1, r1, r1, lsl #1
   6bed8:	add	r0, r0, r1, lsl #2
   6bedc:	ldr	r1, [fp, #-80]	; 0xffffffb0
   6bee0:	ldr	r1, [r1, #8]
   6bee4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   6bee8:	add	r1, r1, r2, lsl #2
   6beec:	ldr	r1, [r1]
   6bef0:	bl	63e94 <__assert_fail@plt+0x512dc>
   6bef4:	and	r0, r0, #1
   6bef8:	strb	r0, [fp, #-25]	; 0xffffffe7
   6befc:	ldrb	r0, [fp, #-25]	; 0xffffffe7
   6bf00:	mvn	r1, #0
   6bf04:	eor	r0, r0, r1
   6bf08:	tst	r0, #1
   6bf0c:	beq	6bf14 <__assert_fail@plt+0x5935c>
   6bf10:	b	6bfdc <__assert_fail@plt+0x59424>
   6bf14:	ldr	r0, [sp, #4]
   6bf18:	cmp	r0, #0
   6bf1c:	bne	6bf24 <__assert_fail@plt+0x5936c>
   6bf20:	b	6bf38 <__assert_fail@plt+0x59380>
   6bf24:	b	6bf28 <__assert_fail@plt+0x59370>
   6bf28:	ldr	r0, [fp, #-36]	; 0xffffffdc
   6bf2c:	add	r0, r0, #1
   6bf30:	str	r0, [fp, #-36]	; 0xffffffdc
   6bf34:	b	6bd04 <__assert_fail@plt+0x5914c>
   6bf38:	ldr	r0, [fp, #-36]	; 0xffffffdc
   6bf3c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   6bf40:	cmp	r0, r1
   6bf44:	bne	6bfac <__assert_fail@plt+0x593f4>
   6bf48:	ldr	r0, [fp, #-20]	; 0xffffffec
   6bf4c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   6bf50:	add	r0, r0, r1, lsl #5
   6bf54:	sub	r1, fp, #76	; 0x4c
   6bf58:	bl	6c12c <__assert_fail@plt+0x59574>
   6bf5c:	ldr	r0, [fp, #-16]
   6bf60:	ldr	r1, [fp, #-44]	; 0xffffffd4
   6bf64:	add	r1, r1, r1, lsl #1
   6bf68:	add	r0, r0, r1, lsl #2
   6bf6c:	ldr	r1, [fp, #-80]	; 0xffffffb0
   6bf70:	ldr	r1, [r1, #8]
   6bf74:	ldr	lr, [fp, #-32]	; 0xffffffe0
   6bf78:	add	r1, r1, lr, lsl #2
   6bf7c:	ldr	r1, [r1]
   6bf80:	bl	62fc8 <__assert_fail@plt+0x50410>
   6bf84:	str	r0, [fp, #-24]	; 0xffffffe8
   6bf88:	ldr	r0, [fp, #-24]	; 0xffffffe8
   6bf8c:	cmp	r0, #0
   6bf90:	beq	6bf98 <__assert_fail@plt+0x593e0>
   6bf94:	b	6bfdc <__assert_fail@plt+0x59424>
   6bf98:	sub	r0, fp, #76	; 0x4c
   6bf9c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   6bfa0:	add	r1, r1, #1
   6bfa4:	str	r1, [fp, #-44]	; 0xffffffd4
   6bfa8:	bl	6c034 <__assert_fail@plt+0x5947c>
   6bfac:	b	6bfb0 <__assert_fail@plt+0x593f8>
   6bfb0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   6bfb4:	add	r0, r0, #1
   6bfb8:	str	r0, [fp, #-32]	; 0xffffffe0
   6bfbc:	b	6b894 <__assert_fail@plt+0x58cdc>
   6bfc0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   6bfc4:	cmp	r0, #256	; 0x100
   6bfc8:	bgt	6bfd0 <__assert_fail@plt+0x59418>
   6bfcc:	b	6bfd0 <__assert_fail@plt+0x59418>
   6bfd0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   6bfd4:	str	r0, [fp, #-4]
   6bfd8:	b	6c028 <__assert_fail@plt+0x59470>
   6bfdc:	movw	r0, #0
   6bfe0:	str	r0, [fp, #-36]	; 0xffffffdc
   6bfe4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   6bfe8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   6bfec:	cmp	r0, r1
   6bff0:	bge	6c020 <__assert_fail@plt+0x59468>
   6bff4:	ldr	r0, [fp, #-16]
   6bff8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   6bffc:	movw	r2, #12
   6c000:	mul	r1, r1, r2
   6c004:	add	r0, r0, r1
   6c008:	ldr	r0, [r0, #8]
   6c00c:	bl	50c68 <__assert_fail@plt+0x3e0b0>
   6c010:	ldr	r0, [fp, #-36]	; 0xffffffdc
   6c014:	add	r0, r0, #1
   6c018:	str	r0, [fp, #-36]	; 0xffffffdc
   6c01c:	b	6bfe4 <__assert_fail@plt+0x5942c>
   6c020:	mvn	r0, #0
   6c024:	str	r0, [fp, #-4]
   6c028:	ldr	r0, [fp, #-4]
   6c02c:	mov	sp, fp
   6c030:	pop	{fp, pc}
   6c034:	push	{fp, lr}
   6c038:	mov	fp, sp
   6c03c:	sub	sp, sp, #8
   6c040:	str	r0, [sp, #4]
   6c044:	ldr	r0, [sp, #4]
   6c048:	movw	r1, #0
   6c04c:	and	r1, r1, #255	; 0xff
   6c050:	movw	r2, #32
   6c054:	bl	12900 <memset@plt>
   6c058:	mov	sp, fp
   6c05c:	pop	{fp, pc}
   6c060:	sub	sp, sp, #12
   6c064:	str	r0, [sp, #8]
   6c068:	str	r1, [sp, #4]
   6c06c:	movw	r0, #0
   6c070:	str	r0, [sp]
   6c074:	ldr	r0, [sp]
   6c078:	cmp	r0, #8
   6c07c:	bge	6c0b0 <__assert_fail@plt+0x594f8>
   6c080:	ldr	r0, [sp, #4]
   6c084:	ldr	r1, [sp]
   6c088:	ldr	r0, [r0, r1, lsl #2]
   6c08c:	ldr	r2, [sp, #8]
   6c090:	add	r1, r2, r1, lsl #2
   6c094:	ldr	r2, [r1]
   6c098:	orr	r0, r2, r0
   6c09c:	str	r0, [r1]
   6c0a0:	ldr	r0, [sp]
   6c0a4:	add	r0, r0, #1
   6c0a8:	str	r0, [sp]
   6c0ac:	b	6c074 <__assert_fail@plt+0x594bc>
   6c0b0:	add	sp, sp, #12
   6c0b4:	bx	lr
   6c0b8:	push	{fp, lr}
   6c0bc:	mov	fp, sp
   6c0c0:	sub	sp, sp, #8
   6c0c4:	str	r0, [sp, #4]
   6c0c8:	ldr	r0, [sp, #4]
   6c0cc:	movw	r1, #255	; 0xff
   6c0d0:	and	r1, r1, #255	; 0xff
   6c0d4:	movw	r2, #32
   6c0d8:	bl	12900 <memset@plt>
   6c0dc:	mov	sp, fp
   6c0e0:	pop	{fp, pc}
   6c0e4:	sub	sp, sp, #8
   6c0e8:	str	r0, [sp, #4]
   6c0ec:	str	r1, [sp]
   6c0f0:	ldr	r0, [sp]
   6c0f4:	asr	r1, r0, #31
   6c0f8:	add	r1, r0, r1, lsr #27
   6c0fc:	bic	r2, r1, #31
   6c100:	sub	r0, r0, r2
   6c104:	mov	r2, #1
   6c108:	mvn	r0, r2, lsl r0
   6c10c:	ldr	r2, [sp, #4]
   6c110:	asr	r1, r1, #5
   6c114:	add	r1, r2, r1, lsl #2
   6c118:	ldr	r2, [r1]
   6c11c:	and	r0, r2, r0
   6c120:	str	r0, [r1]
   6c124:	add	sp, sp, #8
   6c128:	bx	lr
   6c12c:	push	{fp, lr}
   6c130:	mov	fp, sp
   6c134:	sub	sp, sp, #8
   6c138:	str	r0, [sp, #4]
   6c13c:	str	r1, [sp]
   6c140:	ldr	r0, [sp, #4]
   6c144:	ldr	r1, [sp]
   6c148:	movw	r2, #32
   6c14c:	bl	125c4 <memcpy@plt>
   6c150:	mov	sp, fp
   6c154:	pop	{fp, pc}
   6c158:	sub	sp, sp, #24
   6c15c:	str	r0, [sp, #16]
   6c160:	str	r1, [sp, #12]
   6c164:	str	r2, [sp, #8]
   6c168:	ldr	r0, [sp, #16]
   6c16c:	ldr	r0, [r0]
   6c170:	ldr	r1, [sp, #12]
   6c174:	add	r0, r0, r1, lsl #3
   6c178:	ldrb	r0, [r0, #4]
   6c17c:	str	r0, [sp, #4]
   6c180:	ldr	r0, [sp, #16]
   6c184:	ldr	r0, [r0]
   6c188:	ldr	r1, [sp, #12]
   6c18c:	add	r0, r0, r1, lsl #3
   6c190:	ldr	r0, [r0, #4]
   6c194:	lsr	r0, r0, #8
   6c198:	movw	r1, #1023	; 0x3ff
   6c19c:	and	r0, r0, r1
   6c1a0:	str	r0, [sp]
   6c1a4:	ldr	r0, [sp, #4]
   6c1a8:	cmp	r0, #2
   6c1ac:	beq	6c1c0 <__assert_fail@plt+0x59608>
   6c1b0:	movw	r0, #0
   6c1b4:	and	r0, r0, #1
   6c1b8:	strb	r0, [sp, #23]
   6c1bc:	b	6c278 <__assert_fail@plt+0x596c0>
   6c1c0:	ldr	r0, [sp]
   6c1c4:	cmp	r0, #0
   6c1c8:	bne	6c1dc <__assert_fail@plt+0x59624>
   6c1cc:	movw	r0, #1
   6c1d0:	and	r0, r0, #1
   6c1d4:	strb	r0, [sp, #23]
   6c1d8:	b	6c278 <__assert_fail@plt+0x596c0>
   6c1dc:	ldr	r0, [sp]
   6c1e0:	and	r0, r0, #4
   6c1e4:	cmp	r0, #0
   6c1e8:	beq	6c1fc <__assert_fail@plt+0x59644>
   6c1ec:	ldr	r0, [sp, #8]
   6c1f0:	and	r0, r0, #1
   6c1f4:	cmp	r0, #0
   6c1f8:	beq	6c25c <__assert_fail@plt+0x596a4>
   6c1fc:	ldr	r0, [sp]
   6c200:	and	r0, r0, #8
   6c204:	cmp	r0, #0
   6c208:	beq	6c21c <__assert_fail@plt+0x59664>
   6c20c:	ldr	r0, [sp, #8]
   6c210:	and	r0, r0, #1
   6c214:	cmp	r0, #0
   6c218:	bne	6c25c <__assert_fail@plt+0x596a4>
   6c21c:	ldr	r0, [sp]
   6c220:	and	r0, r0, #32
   6c224:	cmp	r0, #0
   6c228:	beq	6c23c <__assert_fail@plt+0x59684>
   6c22c:	ldr	r0, [sp, #8]
   6c230:	and	r0, r0, #2
   6c234:	cmp	r0, #0
   6c238:	beq	6c25c <__assert_fail@plt+0x596a4>
   6c23c:	ldr	r0, [sp]
   6c240:	and	r0, r0, #128	; 0x80
   6c244:	cmp	r0, #0
   6c248:	beq	6c26c <__assert_fail@plt+0x596b4>
   6c24c:	ldr	r0, [sp, #8]
   6c250:	and	r0, r0, #8
   6c254:	cmp	r0, #0
   6c258:	bne	6c26c <__assert_fail@plt+0x596b4>
   6c25c:	movw	r0, #0
   6c260:	and	r0, r0, #1
   6c264:	strb	r0, [sp, #23]
   6c268:	b	6c278 <__assert_fail@plt+0x596c0>
   6c26c:	movw	r0, #1
   6c270:	and	r0, r0, #1
   6c274:	strb	r0, [sp, #23]
   6c278:	ldrb	r0, [sp, #23]
   6c27c:	and	r0, r0, #1
   6c280:	add	sp, sp, #24
   6c284:	bx	lr
   6c288:	push	{fp, lr}
   6c28c:	mov	fp, sp
   6c290:	sub	sp, sp, #24
   6c294:	ldr	ip, [fp, #8]
   6c298:	str	r0, [fp, #-4]
   6c29c:	str	r1, [fp, #-8]
   6c2a0:	str	r2, [sp, #12]
   6c2a4:	str	r3, [sp, #8]
   6c2a8:	ldr	r0, [fp, #-8]
   6c2ac:	ldr	r1, [fp, #-4]
   6c2b0:	str	r0, [r1]
   6c2b4:	ldr	r0, [sp, #12]
   6c2b8:	ldr	r1, [fp, #-4]
   6c2bc:	str	r0, [r1, #4]
   6c2c0:	ldr	r0, [sp, #8]
   6c2c4:	ldr	r1, [fp, #-4]
   6c2c8:	str	r0, [r1, #8]
   6c2cc:	ldr	r0, [fp, #8]
   6c2d0:	ldr	r1, [fp, #-4]
   6c2d4:	str	r0, [r1, #12]
   6c2d8:	ldr	r0, [fp, #-4]
   6c2dc:	add	r0, r0, #16
   6c2e0:	movw	r1, #0
   6c2e4:	and	r1, r1, #255	; 0xff
   6c2e8:	movw	r2, #12
   6c2ec:	str	ip, [sp, #4]
   6c2f0:	bl	12900 <memset@plt>
   6c2f4:	mov	sp, fp
   6c2f8:	pop	{fp, pc}
   6c2fc:	push	{fp, lr}
   6c300:	mov	fp, sp
   6c304:	sub	sp, sp, #40	; 0x28
   6c308:	str	r0, [fp, #-8]
   6c30c:	str	r1, [fp, #-12]
   6c310:	movw	r0, #0
   6c314:	str	r0, [sp, #20]
   6c318:	ldr	r1, [fp, #-12]
   6c31c:	ldr	r1, [r1, #12]
   6c320:	str	r1, [sp, #16]
   6c324:	ldr	r1, [fp, #-8]
   6c328:	ldr	r1, [r1, #100]	; 0x64
   6c32c:	cmp	r1, r0
   6c330:	beq	6c358 <__assert_fail@plt+0x597a0>
   6c334:	ldr	r0, [fp, #-8]
   6c338:	ldr	r0, [r0, #100]	; 0x64
   6c33c:	ldr	r1, [sp, #16]
   6c340:	add	r0, r0, r1, lsl #2
   6c344:	ldr	r0, [r0]
   6c348:	movw	r1, #0
   6c34c:	cmp	r0, r1
   6c350:	beq	6c358 <__assert_fail@plt+0x597a0>
   6c354:	b	6c358 <__assert_fail@plt+0x597a0>
   6c358:	ldr	r0, [fp, #-12]
   6c35c:	ldr	r1, [r0, #8]
   6c360:	add	r0, sp, #4
   6c364:	bl	62fc8 <__assert_fail@plt+0x50410>
   6c368:	str	r0, [fp, #-16]
   6c36c:	ldr	r0, [fp, #-16]
   6c370:	cmp	r0, #0
   6c374:	beq	6c384 <__assert_fail@plt+0x597cc>
   6c378:	ldr	r0, [fp, #-16]
   6c37c:	str	r0, [fp, #-4]
   6c380:	b	6c4e8 <__assert_fail@plt+0x59930>
   6c384:	ldr	r0, [fp, #-8]
   6c388:	ldr	r1, [fp, #-12]
   6c38c:	ldr	r2, [sp, #16]
   6c390:	add	r3, sp, #4
   6c394:	bl	6c63c <__assert_fail@plt+0x59a84>
   6c398:	str	r0, [fp, #-16]
   6c39c:	ldr	r0, [fp, #-16]
   6c3a0:	cmp	r0, #0
   6c3a4:	beq	6c3ac <__assert_fail@plt+0x597f4>
   6c3a8:	b	6c4d8 <__assert_fail@plt+0x59920>
   6c3ac:	b	6c3b0 <__assert_fail@plt+0x597f8>
   6c3b0:	ldr	r0, [sp, #16]
   6c3b4:	cmp	r0, #0
   6c3b8:	ble	6c4d0 <__assert_fail@plt+0x59918>
   6c3bc:	ldr	r0, [fp, #-12]
   6c3c0:	ldr	r0, [r0]
   6c3c4:	ldr	r1, [sp, #16]
   6c3c8:	add	r0, r0, r1, lsl #2
   6c3cc:	ldr	r0, [r0]
   6c3d0:	movw	r1, #0
   6c3d4:	cmp	r0, r1
   6c3d8:	bne	6c3ec <__assert_fail@plt+0x59834>
   6c3dc:	ldr	r0, [sp, #20]
   6c3e0:	add	r0, r0, #1
   6c3e4:	str	r0, [sp]
   6c3e8:	b	6c3f8 <__assert_fail@plt+0x59840>
   6c3ec:	movw	r0, #0
   6c3f0:	str	r0, [sp]
   6c3f4:	b	6c3f8 <__assert_fail@plt+0x59840>
   6c3f8:	ldr	r0, [sp]
   6c3fc:	str	r0, [sp, #20]
   6c400:	ldr	r0, [sp, #20]
   6c404:	ldr	r1, [fp, #-8]
   6c408:	ldr	r1, [r1, #120]	; 0x78
   6c40c:	cmp	r0, r1
   6c410:	ble	6c444 <__assert_fail@plt+0x5988c>
   6c414:	ldr	r0, [fp, #-12]
   6c418:	ldr	r0, [r0]
   6c41c:	ldr	r1, [sp, #16]
   6c420:	lsl	r2, r1, #2
   6c424:	movw	r1, #0
   6c428:	and	r1, r1, #255	; 0xff
   6c42c:	bl	12900 <memset@plt>
   6c430:	ldr	r0, [sp, #12]
   6c434:	bl	50c68 <__assert_fail@plt+0x3e0b0>
   6c438:	movw	r0, #0
   6c43c:	str	r0, [fp, #-4]
   6c440:	b	6c4e8 <__assert_fail@plt+0x59930>
   6c444:	mov	r0, #0
   6c448:	str	r0, [sp, #8]
   6c44c:	ldr	r0, [sp, #16]
   6c450:	sub	r0, r0, #1
   6c454:	str	r0, [sp, #16]
   6c458:	ldr	r0, [fp, #-8]
   6c45c:	ldr	r0, [r0, #100]	; 0x64
   6c460:	ldr	r1, [sp, #16]
   6c464:	add	r0, r0, r1, lsl #2
   6c468:	ldr	r0, [r0]
   6c46c:	movw	r1, #0
   6c470:	cmp	r0, r1
   6c474:	beq	6c4a4 <__assert_fail@plt+0x598ec>
   6c478:	ldr	r0, [fp, #-8]
   6c47c:	ldr	r1, [fp, #-12]
   6c480:	ldr	r2, [sp, #16]
   6c484:	add	r3, sp, #4
   6c488:	bl	6c840 <__assert_fail@plt+0x59c88>
   6c48c:	str	r0, [fp, #-16]
   6c490:	ldr	r0, [fp, #-16]
   6c494:	cmp	r0, #0
   6c498:	beq	6c4a0 <__assert_fail@plt+0x598e8>
   6c49c:	b	6c4d8 <__assert_fail@plt+0x59920>
   6c4a0:	b	6c4a4 <__assert_fail@plt+0x598ec>
   6c4a4:	ldr	r0, [fp, #-8]
   6c4a8:	ldr	r1, [fp, #-12]
   6c4ac:	ldr	r2, [sp, #16]
   6c4b0:	add	r3, sp, #4
   6c4b4:	bl	6c63c <__assert_fail@plt+0x59a84>
   6c4b8:	str	r0, [fp, #-16]
   6c4bc:	ldr	r0, [fp, #-16]
   6c4c0:	cmp	r0, #0
   6c4c4:	beq	6c4cc <__assert_fail@plt+0x59914>
   6c4c8:	b	6c4d8 <__assert_fail@plt+0x59920>
   6c4cc:	b	6c3b0 <__assert_fail@plt+0x597f8>
   6c4d0:	movw	r0, #0
   6c4d4:	str	r0, [fp, #-16]
   6c4d8:	ldr	r0, [sp, #12]
   6c4dc:	bl	50c68 <__assert_fail@plt+0x3e0b0>
   6c4e0:	ldr	r0, [fp, #-16]
   6c4e4:	str	r0, [fp, #-4]
   6c4e8:	ldr	r0, [fp, #-4]
   6c4ec:	mov	sp, fp
   6c4f0:	pop	{fp, pc}
   6c4f4:	push	{fp, lr}
   6c4f8:	mov	fp, sp
   6c4fc:	sub	sp, sp, #48	; 0x30
   6c500:	str	r0, [fp, #-8]
   6c504:	str	r1, [fp, #-12]
   6c508:	str	r2, [fp, #-16]
   6c50c:	str	r3, [fp, #-20]	; 0xffffffec
   6c510:	movw	r0, #0
   6c514:	str	r0, [sp, #24]
   6c518:	ldr	r0, [sp, #24]
   6c51c:	ldr	r1, [fp, #-20]	; 0xffffffec
   6c520:	cmp	r0, r1
   6c524:	bge	6c628 <__assert_fail@plt+0x59a70>
   6c528:	ldr	r0, [fp, #-12]
   6c52c:	ldr	r1, [sp, #24]
   6c530:	add	r0, r0, r1, lsl #2
   6c534:	ldr	r0, [r0]
   6c538:	movw	r1, #0
   6c53c:	cmp	r0, r1
   6c540:	bne	6c560 <__assert_fail@plt+0x599a8>
   6c544:	ldr	r0, [fp, #-16]
   6c548:	ldr	r1, [sp, #24]
   6c54c:	ldr	r0, [r0, r1, lsl #2]
   6c550:	ldr	r2, [fp, #-12]
   6c554:	add	r1, r2, r1, lsl #2
   6c558:	str	r0, [r1]
   6c55c:	b	6c614 <__assert_fail@plt+0x59a5c>
   6c560:	ldr	r0, [fp, #-16]
   6c564:	ldr	r1, [sp, #24]
   6c568:	add	r0, r0, r1, lsl #2
   6c56c:	ldr	r0, [r0]
   6c570:	movw	r1, #0
   6c574:	cmp	r0, r1
   6c578:	beq	6c610 <__assert_fail@plt+0x59a58>
   6c57c:	ldr	r0, [fp, #-12]
   6c580:	ldr	r1, [sp, #24]
   6c584:	ldr	r0, [r0, r1, lsl #2]
   6c588:	add	r0, r0, #4
   6c58c:	ldr	r2, [fp, #-16]
   6c590:	add	r1, r2, r1, lsl #2
   6c594:	ldr	r1, [r1]
   6c598:	add	r2, r1, #4
   6c59c:	add	r1, sp, #8
   6c5a0:	str	r0, [sp, #4]
   6c5a4:	mov	r0, r1
   6c5a8:	ldr	r1, [sp, #4]
   6c5ac:	bl	6848c <__assert_fail@plt+0x558d4>
   6c5b0:	str	r0, [sp, #20]
   6c5b4:	ldr	r0, [sp, #20]
   6c5b8:	cmp	r0, #0
   6c5bc:	beq	6c5cc <__assert_fail@plt+0x59a14>
   6c5c0:	ldr	r0, [sp, #20]
   6c5c4:	str	r0, [fp, #-4]
   6c5c8:	b	6c630 <__assert_fail@plt+0x59a78>
   6c5cc:	ldr	r1, [fp, #-8]
   6c5d0:	add	r0, sp, #20
   6c5d4:	add	r2, sp, #8
   6c5d8:	bl	6a084 <__assert_fail@plt+0x574cc>
   6c5dc:	ldr	r1, [fp, #-12]
   6c5e0:	ldr	r2, [sp, #24]
   6c5e4:	add	r1, r1, r2, lsl #2
   6c5e8:	str	r0, [r1]
   6c5ec:	ldr	r0, [sp, #16]
   6c5f0:	bl	50c68 <__assert_fail@plt+0x3e0b0>
   6c5f4:	ldr	r0, [sp, #20]
   6c5f8:	cmp	r0, #0
   6c5fc:	beq	6c60c <__assert_fail@plt+0x59a54>
   6c600:	ldr	r0, [sp, #20]
   6c604:	str	r0, [fp, #-4]
   6c608:	b	6c630 <__assert_fail@plt+0x59a78>
   6c60c:	b	6c610 <__assert_fail@plt+0x59a58>
   6c610:	b	6c614 <__assert_fail@plt+0x59a5c>
   6c614:	b	6c618 <__assert_fail@plt+0x59a60>
   6c618:	ldr	r0, [sp, #24]
   6c61c:	add	r0, r0, #1
   6c620:	str	r0, [sp, #24]
   6c624:	b	6c518 <__assert_fail@plt+0x59960>
   6c628:	movw	r0, #0
   6c62c:	str	r0, [fp, #-4]
   6c630:	ldr	r0, [fp, #-4]
   6c634:	mov	sp, fp
   6c638:	pop	{fp, pc}
   6c63c:	push	{fp, lr}
   6c640:	mov	fp, sp
   6c644:	sub	sp, sp, #48	; 0x30
   6c648:	str	r0, [fp, #-8]
   6c64c:	str	r1, [fp, #-12]
   6c650:	str	r2, [fp, #-16]
   6c654:	str	r3, [fp, #-20]	; 0xffffffec
   6c658:	ldr	r0, [fp, #-8]
   6c65c:	ldr	r0, [r0, #84]	; 0x54
   6c660:	str	r0, [sp, #24]
   6c664:	mov	r0, #0
   6c668:	str	r0, [sp, #20]
   6c66c:	ldr	r0, [fp, #-8]
   6c670:	ldr	r0, [r0, #100]	; 0x64
   6c674:	ldr	r1, [fp, #-16]
   6c678:	add	r0, r0, r1, lsl #2
   6c67c:	ldr	r0, [r0]
   6c680:	movw	r1, #0
   6c684:	cmp	r0, r1
   6c688:	bne	6c698 <__assert_fail@plt+0x59ae0>
   6c68c:	movw	r0, #0
   6c690:	str	r0, [sp, #12]
   6c694:	b	6c6b4 <__assert_fail@plt+0x59afc>
   6c698:	ldr	r0, [fp, #-8]
   6c69c:	ldr	r0, [r0, #100]	; 0x64
   6c6a0:	ldr	r1, [fp, #-16]
   6c6a4:	add	r0, r0, r1, lsl #2
   6c6a8:	ldr	r0, [r0]
   6c6ac:	add	r0, r0, #4
   6c6b0:	str	r0, [sp, #12]
   6c6b4:	ldr	r0, [sp, #12]
   6c6b8:	str	r0, [sp, #16]
   6c6bc:	ldr	r0, [fp, #-20]	; 0xffffffec
   6c6c0:	ldr	r0, [r0, #4]
   6c6c4:	cmp	r0, #0
   6c6c8:	bne	6c6e8 <__assert_fail@plt+0x59b30>
   6c6cc:	ldr	r0, [fp, #-12]
   6c6d0:	ldr	r0, [r0]
   6c6d4:	ldr	r1, [fp, #-16]
   6c6d8:	add	r0, r0, r1, lsl #2
   6c6dc:	movw	r1, #0
   6c6e0:	str	r1, [r0]
   6c6e4:	b	6c7c4 <__assert_fail@plt+0x59c0c>
   6c6e8:	ldr	r0, [sp, #16]
   6c6ec:	movw	r1, #0
   6c6f0:	cmp	r0, r1
   6c6f4:	beq	6c784 <__assert_fail@plt+0x59bcc>
   6c6f8:	ldr	r0, [sp, #24]
   6c6fc:	ldr	r1, [fp, #-20]	; 0xffffffec
   6c700:	ldr	r2, [sp, #16]
   6c704:	bl	6ca94 <__assert_fail@plt+0x59edc>
   6c708:	str	r0, [sp, #20]
   6c70c:	ldr	r0, [sp, #20]
   6c710:	cmp	r0, #0
   6c714:	beq	6c724 <__assert_fail@plt+0x59b6c>
   6c718:	ldr	r0, [sp, #20]
   6c71c:	str	r0, [fp, #-4]
   6c720:	b	6c834 <__assert_fail@plt+0x59c7c>
   6c724:	ldr	r0, [fp, #-12]
   6c728:	ldr	r0, [r0, #20]
   6c72c:	cmp	r0, #0
   6c730:	beq	6c780 <__assert_fail@plt+0x59bc8>
   6c734:	ldr	r0, [sp, #24]
   6c738:	ldr	r1, [fp, #-20]	; 0xffffffec
   6c73c:	ldr	r2, [sp, #16]
   6c740:	ldr	r3, [fp, #-12]
   6c744:	add	r3, r3, #16
   6c748:	ldr	ip, [fp, #-8]
   6c74c:	ldr	ip, [ip, #116]	; 0x74
   6c750:	ldr	lr, [fp, #-16]
   6c754:	str	ip, [sp]
   6c758:	str	lr, [sp, #4]
   6c75c:	bl	6cbc8 <__assert_fail@plt+0x5a010>
   6c760:	str	r0, [sp, #20]
   6c764:	ldr	r0, [sp, #20]
   6c768:	cmp	r0, #0
   6c76c:	beq	6c77c <__assert_fail@plt+0x59bc4>
   6c770:	ldr	r0, [sp, #20]
   6c774:	str	r0, [fp, #-4]
   6c778:	b	6c834 <__assert_fail@plt+0x59c7c>
   6c77c:	b	6c780 <__assert_fail@plt+0x59bc8>
   6c780:	b	6c784 <__assert_fail@plt+0x59bcc>
   6c784:	ldr	r1, [sp, #24]
   6c788:	ldr	r2, [fp, #-20]	; 0xffffffec
   6c78c:	add	r0, sp, #20
   6c790:	bl	6a084 <__assert_fail@plt+0x574cc>
   6c794:	ldr	r1, [fp, #-12]
   6c798:	ldr	r1, [r1]
   6c79c:	ldr	r2, [fp, #-16]
   6c7a0:	add	r1, r1, r2, lsl #2
   6c7a4:	str	r0, [r1]
   6c7a8:	ldr	r0, [sp, #20]
   6c7ac:	cmp	r0, #0
   6c7b0:	beq	6c7c0 <__assert_fail@plt+0x59c08>
   6c7b4:	ldr	r0, [sp, #20]
   6c7b8:	str	r0, [fp, #-4]
   6c7bc:	b	6c834 <__assert_fail@plt+0x59c7c>
   6c7c0:	b	6c7c4 <__assert_fail@plt+0x59c0c>
   6c7c4:	ldr	r0, [sp, #16]
   6c7c8:	movw	r1, #0
   6c7cc:	cmp	r0, r1
   6c7d0:	beq	6c82c <__assert_fail@plt+0x59c74>
   6c7d4:	ldr	r0, [fp, #-8]
   6c7d8:	ldr	r0, [r0, #100]	; 0x64
   6c7dc:	ldr	r1, [fp, #-16]
   6c7e0:	ldr	r0, [r0, r1, lsl #2]
   6c7e4:	ldrb	r0, [r0, #52]	; 0x34
   6c7e8:	ubfx	r0, r0, #6, #1
   6c7ec:	and	r0, r0, #255	; 0xff
   6c7f0:	cmp	r0, #0
   6c7f4:	beq	6c82c <__assert_fail@plt+0x59c74>
   6c7f8:	ldr	r0, [fp, #-8]
   6c7fc:	ldr	r1, [fp, #-12]
   6c800:	ldr	r2, [fp, #-16]
   6c804:	ldr	r3, [sp, #16]
   6c808:	bl	6cf98 <__assert_fail@plt+0x5a3e0>
   6c80c:	str	r0, [sp, #20]
   6c810:	ldr	r0, [sp, #20]
   6c814:	cmp	r0, #0
   6c818:	beq	6c828 <__assert_fail@plt+0x59c70>
   6c81c:	ldr	r0, [sp, #20]
   6c820:	str	r0, [fp, #-4]
   6c824:	b	6c834 <__assert_fail@plt+0x59c7c>
   6c828:	b	6c82c <__assert_fail@plt+0x59c74>
   6c82c:	movw	r0, #0
   6c830:	str	r0, [fp, #-4]
   6c834:	ldr	r0, [fp, #-4]
   6c838:	mov	sp, fp
   6c83c:	pop	{fp, pc}
   6c840:	push	{fp, lr}
   6c844:	mov	fp, sp
   6c848:	sub	sp, sp, #56	; 0x38
   6c84c:	str	r0, [fp, #-8]
   6c850:	str	r1, [fp, #-12]
   6c854:	str	r2, [fp, #-16]
   6c858:	str	r3, [fp, #-20]	; 0xffffffec
   6c85c:	ldr	r0, [fp, #-8]
   6c860:	ldr	r0, [r0, #84]	; 0x54
   6c864:	str	r0, [fp, #-24]	; 0xffffffe8
   6c868:	ldr	r0, [fp, #-8]
   6c86c:	ldr	r0, [r0, #100]	; 0x64
   6c870:	ldr	r1, [fp, #-16]
   6c874:	add	r0, r0, r1, lsl #2
   6c878:	ldr	r0, [r0]
   6c87c:	add	r0, r0, #16
   6c880:	str	r0, [sp, #28]
   6c884:	movw	r0, #0
   6c888:	str	r0, [sp, #24]
   6c88c:	ldr	r0, [sp, #24]
   6c890:	ldr	r1, [sp, #28]
   6c894:	ldr	r1, [r1, #4]
   6c898:	cmp	r0, r1
   6c89c:	bge	6ca80 <__assert_fail@plt+0x59ec8>
   6c8a0:	ldr	r0, [sp, #28]
   6c8a4:	ldr	r0, [r0, #8]
   6c8a8:	ldr	r1, [sp, #24]
   6c8ac:	ldr	r0, [r0, r1, lsl #2]
   6c8b0:	str	r0, [sp, #20]
   6c8b4:	mov	r0, #0
   6c8b8:	str	r0, [sp, #16]
   6c8bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   6c8c0:	ldr	r0, [r0]
   6c8c4:	ldr	r1, [sp, #20]
   6c8c8:	add	r0, r0, r1, lsl #3
   6c8cc:	ldr	r0, [r0, #4]
   6c8d0:	and	r0, r0, #255	; 0xff
   6c8d4:	and	r0, r0, #8
   6c8d8:	cmp	r0, #0
   6c8dc:	bne	6c8e4 <__assert_fail@plt+0x59d2c>
   6c8e0:	b	6c8e4 <__assert_fail@plt+0x59d2c>
   6c8e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   6c8e8:	ldr	r0, [r0]
   6c8ec:	ldr	r1, [sp, #20]
   6c8f0:	add	r0, r0, r1, lsl #3
   6c8f4:	ldr	r0, [r0, #4]
   6c8f8:	lsr	r0, r0, #20
   6c8fc:	and	r0, r0, #1
   6c900:	cmp	r0, #0
   6c904:	beq	6c92c <__assert_fail@plt+0x59d74>
   6c908:	ldr	r0, [fp, #-8]
   6c90c:	ldr	r1, [fp, #-12]
   6c910:	ldr	r2, [sp, #20]
   6c914:	ldr	r3, [fp, #-16]
   6c918:	ldr	ip, [fp, #-12]
   6c91c:	ldr	ip, [ip, #12]
   6c920:	str	ip, [sp]
   6c924:	bl	6e030 <__assert_fail@plt+0x5b478>
   6c928:	str	r0, [sp, #16]
   6c92c:	ldr	r0, [sp, #16]
   6c930:	cmp	r0, #0
   6c934:	bne	6c9c0 <__assert_fail@plt+0x59e08>
   6c938:	ldr	r0, [fp, #-8]
   6c93c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   6c940:	ldr	r1, [r1]
   6c944:	ldr	r2, [sp, #20]
   6c948:	add	r1, r1, r2, lsl #3
   6c94c:	ldr	r2, [fp, #-16]
   6c950:	bl	6a9c4 <__assert_fail@plt+0x57e0c>
   6c954:	tst	r0, #1
   6c958:	beq	6c9c0 <__assert_fail@plt+0x59e08>
   6c95c:	ldr	r0, [fp, #-12]
   6c960:	ldr	r0, [r0]
   6c964:	ldr	r1, [fp, #-16]
   6c968:	add	r1, r1, #1
   6c96c:	add	r0, r0, r1, lsl #2
   6c970:	ldr	r0, [r0]
   6c974:	movw	r1, #0
   6c978:	cmp	r0, r1
   6c97c:	beq	6c9c0 <__assert_fail@plt+0x59e08>
   6c980:	ldr	r0, [fp, #-12]
   6c984:	ldr	r0, [r0]
   6c988:	ldr	r1, [fp, #-16]
   6c98c:	add	r0, r0, r1, lsl #2
   6c990:	ldr	r0, [r0, #4]
   6c994:	add	r0, r0, #4
   6c998:	ldr	r1, [fp, #-24]	; 0xffffffe8
   6c99c:	ldr	r1, [r1, #12]
   6c9a0:	ldr	r2, [sp, #20]
   6c9a4:	add	r1, r1, r2, lsl #2
   6c9a8:	ldr	r1, [r1]
   6c9ac:	bl	64350 <__assert_fail@plt+0x51798>
   6c9b0:	cmp	r0, #0
   6c9b4:	beq	6c9c0 <__assert_fail@plt+0x59e08>
   6c9b8:	movw	r0, #1
   6c9bc:	str	r0, [sp, #16]
   6c9c0:	ldr	r0, [sp, #16]
   6c9c4:	cmp	r0, #0
   6c9c8:	bne	6c9d0 <__assert_fail@plt+0x59e18>
   6c9cc:	b	6ca70 <__assert_fail@plt+0x59eb8>
   6c9d0:	ldr	r0, [fp, #-12]
   6c9d4:	ldr	r0, [r0, #20]
   6c9d8:	cmp	r0, #0
   6c9dc:	beq	6ca38 <__assert_fail@plt+0x59e80>
   6c9e0:	ldr	r0, [fp, #-16]
   6c9e4:	ldr	r1, [sp, #16]
   6c9e8:	add	r0, r0, r1
   6c9ec:	str	r0, [sp, #8]
   6c9f0:	ldr	r0, [fp, #-8]
   6c9f4:	ldr	r1, [fp, #-12]
   6c9f8:	add	r1, r1, #16
   6c9fc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   6ca00:	ldr	r2, [r2, #12]
   6ca04:	ldr	r3, [sp, #20]
   6ca08:	add	r2, r2, r3, lsl #2
   6ca0c:	ldr	r2, [r2]
   6ca10:	ldr	r3, [sp, #8]
   6ca14:	ldr	ip, [sp, #20]
   6ca18:	ldr	lr, [fp, #-16]
   6ca1c:	str	ip, [sp]
   6ca20:	str	lr, [sp, #4]
   6ca24:	bl	6da9c <__assert_fail@plt+0x5aee4>
   6ca28:	tst	r0, #1
   6ca2c:	beq	6ca34 <__assert_fail@plt+0x59e7c>
   6ca30:	b	6ca70 <__assert_fail@plt+0x59eb8>
   6ca34:	b	6ca38 <__assert_fail@plt+0x59e80>
   6ca38:	ldr	r0, [fp, #-20]	; 0xffffffec
   6ca3c:	ldr	r1, [sp, #20]
   6ca40:	bl	63e94 <__assert_fail@plt+0x512dc>
   6ca44:	and	r0, r0, #1
   6ca48:	strb	r0, [sp, #15]
   6ca4c:	ldrb	r0, [sp, #15]
   6ca50:	mvn	r1, #0
   6ca54:	eor	r0, r0, r1
   6ca58:	tst	r0, #1
   6ca5c:	beq	6ca6c <__assert_fail@plt+0x59eb4>
   6ca60:	movw	r0, #12
   6ca64:	str	r0, [fp, #-4]
   6ca68:	b	6ca88 <__assert_fail@plt+0x59ed0>
   6ca6c:	b	6ca70 <__assert_fail@plt+0x59eb8>
   6ca70:	ldr	r0, [sp, #24]
   6ca74:	add	r0, r0, #1
   6ca78:	str	r0, [sp, #24]
   6ca7c:	b	6c88c <__assert_fail@plt+0x59cd4>
   6ca80:	movw	r0, #0
   6ca84:	str	r0, [fp, #-4]
   6ca88:	ldr	r0, [fp, #-4]
   6ca8c:	mov	sp, fp
   6ca90:	pop	{fp, pc}
   6ca94:	push	{fp, lr}
   6ca98:	mov	fp, sp
   6ca9c:	sub	sp, sp, #32
   6caa0:	str	r0, [fp, #-8]
   6caa4:	str	r1, [fp, #-12]
   6caa8:	str	r2, [sp, #16]
   6caac:	movw	r0, #0
   6cab0:	str	r0, [sp, #12]
   6cab4:	ldr	r1, [fp, #-8]
   6cab8:	ldr	r2, [fp, #-12]
   6cabc:	add	r0, sp, #12
   6cac0:	bl	6a084 <__assert_fail@plt+0x574cc>
   6cac4:	str	r0, [sp, #4]
   6cac8:	ldr	r0, [sp, #12]
   6cacc:	cmp	r0, #0
   6cad0:	beq	6cae0 <__assert_fail@plt+0x59f28>
   6cad4:	ldr	r0, [sp, #12]
   6cad8:	str	r0, [fp, #-4]
   6cadc:	b	6cbbc <__assert_fail@plt+0x5a004>
   6cae0:	ldr	r0, [sp, #4]
   6cae4:	ldr	r0, [r0, #28]
   6cae8:	cmp	r0, #0
   6caec:	bne	6cba4 <__assert_fail@plt+0x59fec>
   6caf0:	ldr	r0, [sp, #4]
   6caf4:	add	r0, r0, #28
   6caf8:	ldr	r1, [fp, #-12]
   6cafc:	ldr	r1, [r1, #4]
   6cb00:	bl	6342c <__assert_fail@plt+0x50874>
   6cb04:	str	r0, [sp, #12]
   6cb08:	ldr	r0, [sp, #12]
   6cb0c:	cmp	r0, #0
   6cb10:	beq	6cb20 <__assert_fail@plt+0x59f68>
   6cb14:	movw	r0, #12
   6cb18:	str	r0, [fp, #-4]
   6cb1c:	b	6cbbc <__assert_fail@plt+0x5a004>
   6cb20:	movw	r0, #0
   6cb24:	str	r0, [sp, #8]
   6cb28:	ldr	r0, [sp, #8]
   6cb2c:	ldr	r1, [fp, #-12]
   6cb30:	ldr	r1, [r1, #4]
   6cb34:	cmp	r0, r1
   6cb38:	bge	6cba0 <__assert_fail@plt+0x59fe8>
   6cb3c:	ldr	r0, [sp, #4]
   6cb40:	add	r0, r0, #28
   6cb44:	ldr	r1, [fp, #-8]
   6cb48:	ldr	r1, [r1, #28]
   6cb4c:	ldr	r2, [fp, #-12]
   6cb50:	ldr	r2, [r2, #8]
   6cb54:	ldr	r3, [sp, #8]
   6cb58:	add	r2, r2, r3, lsl #2
   6cb5c:	ldr	r2, [r2]
   6cb60:	movw	r3, #12
   6cb64:	mul	r2, r2, r3
   6cb68:	add	r1, r1, r2
   6cb6c:	bl	639a8 <__assert_fail@plt+0x50df0>
   6cb70:	str	r0, [sp, #12]
   6cb74:	ldr	r0, [sp, #12]
   6cb78:	cmp	r0, #0
   6cb7c:	beq	6cb8c <__assert_fail@plt+0x59fd4>
   6cb80:	movw	r0, #12
   6cb84:	str	r0, [fp, #-4]
   6cb88:	b	6cbbc <__assert_fail@plt+0x5a004>
   6cb8c:	b	6cb90 <__assert_fail@plt+0x59fd8>
   6cb90:	ldr	r0, [sp, #8]
   6cb94:	add	r0, r0, #1
   6cb98:	str	r0, [sp, #8]
   6cb9c:	b	6cb28 <__assert_fail@plt+0x59f70>
   6cba0:	b	6cba4 <__assert_fail@plt+0x59fec>
   6cba4:	ldr	r0, [fp, #-12]
   6cba8:	ldr	r1, [sp, #16]
   6cbac:	ldr	r2, [sp, #4]
   6cbb0:	add	r2, r2, #28
   6cbb4:	bl	6d3c8 <__assert_fail@plt+0x5a810>
   6cbb8:	str	r0, [fp, #-4]
   6cbbc:	ldr	r0, [fp, #-4]
   6cbc0:	mov	sp, fp
   6cbc4:	pop	{fp, pc}
   6cbc8:	push	{fp, lr}
   6cbcc:	mov	fp, sp
   6cbd0:	sub	sp, sp, #80	; 0x50
   6cbd4:	ldr	ip, [fp, #12]
   6cbd8:	ldr	lr, [fp, #8]
   6cbdc:	str	r0, [fp, #-8]
   6cbe0:	str	r1, [fp, #-12]
   6cbe4:	str	r2, [fp, #-16]
   6cbe8:	str	r3, [fp, #-20]	; 0xffffffec
   6cbec:	movw	r0, #0
   6cbf0:	str	r0, [fp, #-32]	; 0xffffffe0
   6cbf4:	str	lr, [sp, #8]
   6cbf8:	str	ip, [sp, #4]
   6cbfc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   6cc00:	ldr	r1, [fp, #-20]	; 0xffffffec
   6cc04:	ldr	r1, [r1, #4]
   6cc08:	cmp	r0, r1
   6cc0c:	bge	6cf84 <__assert_fail@plt+0x5a3cc>
   6cc10:	ldr	r0, [fp, #8]
   6cc14:	ldr	r1, [fp, #-20]	; 0xffffffec
   6cc18:	ldr	r1, [r1, #8]
   6cc1c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   6cc20:	add	r1, r1, r2, lsl #2
   6cc24:	ldr	r1, [r1]
   6cc28:	movw	r2, #24
   6cc2c:	mul	r1, r1, r2
   6cc30:	add	r0, r0, r1
   6cc34:	str	r0, [sp, #40]	; 0x28
   6cc38:	ldr	r0, [fp, #12]
   6cc3c:	ldr	r1, [sp, #40]	; 0x28
   6cc40:	ldr	r1, [r1, #8]
   6cc44:	cmp	r0, r1
   6cc48:	ble	6cc60 <__assert_fail@plt+0x5a0a8>
   6cc4c:	ldr	r0, [sp, #40]	; 0x28
   6cc50:	ldr	r0, [r0, #4]
   6cc54:	ldr	r1, [fp, #12]
   6cc58:	cmp	r0, r1
   6cc5c:	bge	6cc64 <__assert_fail@plt+0x5a0ac>
   6cc60:	b	6cf74 <__assert_fail@plt+0x5a3bc>
   6cc64:	ldr	r0, [fp, #-8]
   6cc68:	ldr	r0, [r0]
   6cc6c:	ldr	r1, [sp, #40]	; 0x28
   6cc70:	ldr	r1, [r1]
   6cc74:	add	r0, r0, r1, lsl #3
   6cc78:	ldr	r0, [r0]
   6cc7c:	str	r0, [fp, #-36]	; 0xffffffdc
   6cc80:	ldr	r0, [sp, #40]	; 0x28
   6cc84:	ldr	r0, [r0, #12]
   6cc88:	ldr	r1, [fp, #12]
   6cc8c:	cmp	r0, r1
   6cc90:	bne	6ce9c <__assert_fail@plt+0x5a2e4>
   6cc94:	mvn	r0, #0
   6cc98:	str	r0, [sp, #36]	; 0x24
   6cc9c:	str	r0, [sp, #32]
   6cca0:	movw	r0, #0
   6cca4:	str	r0, [fp, #-28]	; 0xffffffe4
   6cca8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   6ccac:	ldr	r1, [fp, #-12]
   6ccb0:	ldr	r1, [r1, #4]
   6ccb4:	cmp	r0, r1
   6ccb8:	bge	6cd70 <__assert_fail@plt+0x5a1b8>
   6ccbc:	ldr	r0, [fp, #-12]
   6ccc0:	ldr	r0, [r0, #8]
   6ccc4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   6ccc8:	ldr	r0, [r0, r1, lsl #2]
   6cccc:	str	r0, [sp, #28]
   6ccd0:	ldr	r0, [fp, #-8]
   6ccd4:	ldr	r0, [r0]
   6ccd8:	ldr	r1, [sp, #28]
   6ccdc:	add	r0, r0, r1, lsl #3
   6cce0:	ldr	r0, [r0, #4]
   6cce4:	and	r0, r0, #255	; 0xff
   6cce8:	str	r0, [sp, #24]
   6ccec:	ldr	r0, [sp, #24]
   6ccf0:	cmp	r0, #8
   6ccf4:	bne	6cd24 <__assert_fail@plt+0x5a16c>
   6ccf8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   6ccfc:	ldr	r1, [fp, #-8]
   6cd00:	ldr	r1, [r1]
   6cd04:	ldr	r2, [sp, #28]
   6cd08:	add	r1, r1, r2, lsl #3
   6cd0c:	ldr	r1, [r1]
   6cd10:	cmp	r0, r1
   6cd14:	bne	6cd24 <__assert_fail@plt+0x5a16c>
   6cd18:	ldr	r0, [sp, #28]
   6cd1c:	str	r0, [sp, #36]	; 0x24
   6cd20:	b	6cd5c <__assert_fail@plt+0x5a1a4>
   6cd24:	ldr	r0, [sp, #24]
   6cd28:	cmp	r0, #9
   6cd2c:	bne	6cd58 <__assert_fail@plt+0x5a1a0>
   6cd30:	ldr	r0, [fp, #-36]	; 0xffffffdc
   6cd34:	ldr	r1, [fp, #-8]
   6cd38:	ldr	r1, [r1]
   6cd3c:	ldr	r2, [sp, #28]
   6cd40:	add	r1, r1, r2, lsl #3
   6cd44:	ldr	r1, [r1]
   6cd48:	cmp	r0, r1
   6cd4c:	bne	6cd58 <__assert_fail@plt+0x5a1a0>
   6cd50:	ldr	r0, [sp, #28]
   6cd54:	str	r0, [sp, #32]
   6cd58:	b	6cd5c <__assert_fail@plt+0x5a1a4>
   6cd5c:	b	6cd60 <__assert_fail@plt+0x5a1a8>
   6cd60:	ldr	r0, [fp, #-28]	; 0xffffffe4
   6cd64:	add	r0, r0, #1
   6cd68:	str	r0, [fp, #-28]	; 0xffffffe4
   6cd6c:	b	6cca8 <__assert_fail@plt+0x5a0f0>
   6cd70:	ldr	r0, [sp, #36]	; 0x24
   6cd74:	cmp	r0, #0
   6cd78:	blt	6cdb0 <__assert_fail@plt+0x5a1f8>
   6cd7c:	ldr	r0, [fp, #-8]
   6cd80:	ldr	r1, [sp, #36]	; 0x24
   6cd84:	ldr	r2, [fp, #-12]
   6cd88:	ldr	r3, [fp, #-16]
   6cd8c:	bl	6d810 <__assert_fail@plt+0x5ac58>
   6cd90:	str	r0, [fp, #-24]	; 0xffffffe8
   6cd94:	ldr	r0, [fp, #-24]	; 0xffffffe8
   6cd98:	cmp	r0, #0
   6cd9c:	beq	6cdac <__assert_fail@plt+0x5a1f4>
   6cda0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   6cda4:	str	r0, [fp, #-4]
   6cda8:	b	6cf8c <__assert_fail@plt+0x5a3d4>
   6cdac:	b	6cdb0 <__assert_fail@plt+0x5a1f8>
   6cdb0:	ldr	r0, [sp, #32]
   6cdb4:	cmp	r0, #0
   6cdb8:	blt	6ce98 <__assert_fail@plt+0x5a2e0>
   6cdbc:	movw	r0, #0
   6cdc0:	str	r0, [fp, #-28]	; 0xffffffe4
   6cdc4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   6cdc8:	ldr	r1, [fp, #-12]
   6cdcc:	ldr	r1, [r1, #4]
   6cdd0:	cmp	r0, r1
   6cdd4:	bge	6ce94 <__assert_fail@plt+0x5a2dc>
   6cdd8:	ldr	r0, [fp, #-12]
   6cddc:	ldr	r0, [r0, #8]
   6cde0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   6cde4:	add	r0, r0, r1, lsl #2
   6cde8:	ldr	r0, [r0]
   6cdec:	str	r0, [sp, #20]
   6cdf0:	ldr	r0, [fp, #-8]
   6cdf4:	ldr	r0, [r0, #28]
   6cdf8:	ldr	r1, [sp, #20]
   6cdfc:	movw	r2, #12
   6ce00:	mul	r1, r1, r2
   6ce04:	add	r0, r0, r1
   6ce08:	ldr	r1, [sp, #32]
   6ce0c:	bl	64350 <__assert_fail@plt+0x51798>
   6ce10:	cmp	r0, #0
   6ce14:	bne	6ce80 <__assert_fail@plt+0x5a2c8>
   6ce18:	ldr	r0, [fp, #-8]
   6ce1c:	ldr	r0, [r0, #24]
   6ce20:	ldr	r1, [sp, #20]
   6ce24:	movw	r2, #12
   6ce28:	mul	r1, r1, r2
   6ce2c:	add	r0, r0, r1
   6ce30:	ldr	r1, [sp, #32]
   6ce34:	bl	64350 <__assert_fail@plt+0x51798>
   6ce38:	cmp	r0, #0
   6ce3c:	bne	6ce80 <__assert_fail@plt+0x5a2c8>
   6ce40:	ldr	r0, [fp, #-8]
   6ce44:	ldr	r1, [sp, #20]
   6ce48:	ldr	r2, [fp, #-12]
   6ce4c:	ldr	r3, [fp, #-16]
   6ce50:	bl	6d810 <__assert_fail@plt+0x5ac58>
   6ce54:	str	r0, [fp, #-24]	; 0xffffffe8
   6ce58:	ldr	r0, [fp, #-24]	; 0xffffffe8
   6ce5c:	cmp	r0, #0
   6ce60:	beq	6ce70 <__assert_fail@plt+0x5a2b8>
   6ce64:	ldr	r0, [fp, #-24]	; 0xffffffe8
   6ce68:	str	r0, [fp, #-4]
   6ce6c:	b	6cf8c <__assert_fail@plt+0x5a3d4>
   6ce70:	ldr	r0, [fp, #-28]	; 0xffffffe4
   6ce74:	mvn	r1, #0
   6ce78:	add	r0, r0, r1
   6ce7c:	str	r0, [fp, #-28]	; 0xffffffe4
   6ce80:	b	6ce84 <__assert_fail@plt+0x5a2cc>
   6ce84:	ldr	r0, [fp, #-28]	; 0xffffffe4
   6ce88:	add	r0, r0, #1
   6ce8c:	str	r0, [fp, #-28]	; 0xffffffe4
   6ce90:	b	6cdc4 <__assert_fail@plt+0x5a20c>
   6ce94:	b	6ce98 <__assert_fail@plt+0x5a2e0>
   6ce98:	b	6cf70 <__assert_fail@plt+0x5a3b8>
   6ce9c:	movw	r0, #0
   6cea0:	str	r0, [fp, #-28]	; 0xffffffe4
   6cea4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   6cea8:	ldr	r1, [fp, #-12]
   6ceac:	ldr	r1, [r1, #4]
   6ceb0:	cmp	r0, r1
   6ceb4:	bge	6cf6c <__assert_fail@plt+0x5a3b4>
   6ceb8:	ldr	r0, [fp, #-12]
   6cebc:	ldr	r0, [r0, #8]
   6cec0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   6cec4:	ldr	r0, [r0, r1, lsl #2]
   6cec8:	str	r0, [sp, #16]
   6cecc:	ldr	r0, [fp, #-8]
   6ced0:	ldr	r0, [r0]
   6ced4:	ldr	r1, [sp, #16]
   6ced8:	add	r0, r0, r1, lsl #3
   6cedc:	ldr	r0, [r0, #4]
   6cee0:	and	r0, r0, #255	; 0xff
   6cee4:	str	r0, [sp, #12]
   6cee8:	ldr	r0, [sp, #12]
   6ceec:	cmp	r0, #9
   6cef0:	beq	6cf00 <__assert_fail@plt+0x5a348>
   6cef4:	ldr	r0, [sp, #12]
   6cef8:	cmp	r0, #8
   6cefc:	bne	6cf58 <__assert_fail@plt+0x5a3a0>
   6cf00:	ldr	r0, [fp, #-36]	; 0xffffffdc
   6cf04:	ldr	r1, [fp, #-8]
   6cf08:	ldr	r1, [r1]
   6cf0c:	ldr	r2, [sp, #16]
   6cf10:	add	r1, r1, r2, lsl #3
   6cf14:	ldr	r1, [r1]
   6cf18:	cmp	r0, r1
   6cf1c:	beq	6cf24 <__assert_fail@plt+0x5a36c>
   6cf20:	b	6cf5c <__assert_fail@plt+0x5a3a4>
   6cf24:	ldr	r0, [fp, #-8]
   6cf28:	ldr	r1, [sp, #16]
   6cf2c:	ldr	r2, [fp, #-12]
   6cf30:	ldr	r3, [fp, #-16]
   6cf34:	bl	6d810 <__assert_fail@plt+0x5ac58>
   6cf38:	str	r0, [fp, #-24]	; 0xffffffe8
   6cf3c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   6cf40:	cmp	r0, #0
   6cf44:	beq	6cf54 <__assert_fail@plt+0x5a39c>
   6cf48:	ldr	r0, [fp, #-24]	; 0xffffffe8
   6cf4c:	str	r0, [fp, #-4]
   6cf50:	b	6cf8c <__assert_fail@plt+0x5a3d4>
   6cf54:	b	6cf58 <__assert_fail@plt+0x5a3a0>
   6cf58:	b	6cf5c <__assert_fail@plt+0x5a3a4>
   6cf5c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   6cf60:	add	r0, r0, #1
   6cf64:	str	r0, [fp, #-28]	; 0xffffffe4
   6cf68:	b	6cea4 <__assert_fail@plt+0x5a2ec>
   6cf6c:	b	6cf70 <__assert_fail@plt+0x5a3b8>
   6cf70:	b	6cf74 <__assert_fail@plt+0x5a3bc>
   6cf74:	ldr	r0, [fp, #-32]	; 0xffffffe0
   6cf78:	add	r0, r0, #1
   6cf7c:	str	r0, [fp, #-32]	; 0xffffffe0
   6cf80:	b	6cbfc <__assert_fail@plt+0x5a044>
   6cf84:	movw	r0, #0
   6cf88:	str	r0, [fp, #-4]
   6cf8c:	ldr	r0, [fp, #-4]
   6cf90:	mov	sp, fp
   6cf94:	pop	{fp, pc}
   6cf98:	push	{fp, lr}
   6cf9c:	mov	fp, sp
   6cfa0:	sub	sp, sp, #128	; 0x80
   6cfa4:	str	r0, [fp, #-8]
   6cfa8:	str	r1, [fp, #-12]
   6cfac:	str	r2, [fp, #-16]
   6cfb0:	str	r3, [fp, #-20]	; 0xffffffec
   6cfb4:	ldr	r0, [fp, #-8]
   6cfb8:	ldr	r0, [r0, #84]	; 0x54
   6cfbc:	str	r0, [fp, #-24]	; 0xffffffe8
   6cfc0:	ldr	r0, [fp, #-8]
   6cfc4:	ldr	r1, [fp, #-16]
   6cfc8:	bl	687d8 <__assert_fail@plt+0x55c20>
   6cfcc:	str	r0, [sp, #60]	; 0x3c
   6cfd0:	ldr	r0, [sp, #60]	; 0x3c
   6cfd4:	cmn	r0, #1
   6cfd8:	bne	6cfe8 <__assert_fail@plt+0x5a430>
   6cfdc:	movw	r0, #0
   6cfe0:	str	r0, [fp, #-4]
   6cfe4:	b	6d3bc <__assert_fail@plt+0x5a804>
   6cfe8:	movw	r0, #0
   6cfec:	str	r0, [sp, #64]	; 0x40
   6cff0:	str	r0, [fp, #-32]	; 0xffffffe0
   6cff4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   6cff8:	ldr	r1, [fp, #-20]	; 0xffffffec
   6cffc:	ldr	r1, [r1, #4]
   6d000:	cmp	r0, r1
   6d004:	bge	6d394 <__assert_fail@plt+0x5a7dc>
   6d008:	ldr	r0, [fp, #-20]	; 0xffffffec
   6d00c:	ldr	r0, [r0, #8]
   6d010:	ldr	r1, [fp, #-32]	; 0xffffffe0
   6d014:	ldr	r0, [r0, r1, lsl #2]
   6d018:	str	r0, [fp, #-36]	; 0xffffffdc
   6d01c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   6d020:	ldr	r0, [r0]
   6d024:	ldr	r1, [fp, #-36]	; 0xffffffdc
   6d028:	add	r0, r0, r1, lsl #3
   6d02c:	ldr	r0, [r0, #4]
   6d030:	and	r0, r0, #255	; 0xff
   6d034:	str	r0, [sp, #52]	; 0x34
   6d038:	ldr	r0, [fp, #-36]	; 0xffffffdc
   6d03c:	ldr	r1, [fp, #-12]
   6d040:	ldr	r1, [r1, #8]
   6d044:	cmp	r0, r1
   6d048:	bne	6d064 <__assert_fail@plt+0x5a4ac>
   6d04c:	ldr	r0, [fp, #-16]
   6d050:	ldr	r1, [fp, #-12]
   6d054:	ldr	r1, [r1, #12]
   6d058:	cmp	r0, r1
   6d05c:	bne	6d064 <__assert_fail@plt+0x5a4ac>
   6d060:	b	6d384 <__assert_fail@plt+0x5a7cc>
   6d064:	ldr	r0, [sp, #52]	; 0x34
   6d068:	cmp	r0, #4
   6d06c:	beq	6d074 <__assert_fail@plt+0x5a4bc>
   6d070:	b	6d384 <__assert_fail@plt+0x5a7cc>
   6d074:	ldr	r0, [fp, #-8]
   6d078:	ldr	r0, [r0, #116]	; 0x74
   6d07c:	ldr	r1, [sp, #60]	; 0x3c
   6d080:	movw	r2, #24
   6d084:	mul	r1, r1, r2
   6d088:	add	r0, r0, r1
   6d08c:	str	r0, [sp, #48]	; 0x30
   6d090:	ldr	r0, [sp, #60]	; 0x3c
   6d094:	str	r0, [sp, #56]	; 0x38
   6d098:	ldr	r0, [sp, #48]	; 0x30
   6d09c:	ldr	r0, [r0]
   6d0a0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   6d0a4:	cmp	r0, r1
   6d0a8:	beq	6d0b0 <__assert_fail@plt+0x5a4f8>
   6d0ac:	b	6d35c <__assert_fail@plt+0x5a7a4>
   6d0b0:	ldr	r0, [sp, #48]	; 0x30
   6d0b4:	ldr	r0, [r0, #12]
   6d0b8:	ldr	r1, [sp, #48]	; 0x30
   6d0bc:	ldr	r1, [r1, #8]
   6d0c0:	sub	r0, r0, r1
   6d0c4:	str	r0, [sp, #44]	; 0x2c
   6d0c8:	ldr	r0, [fp, #-16]
   6d0cc:	ldr	r1, [sp, #44]	; 0x2c
   6d0d0:	add	r0, r0, r1
   6d0d4:	str	r0, [sp, #40]	; 0x28
   6d0d8:	ldr	r0, [sp, #44]	; 0x2c
   6d0dc:	cmp	r0, #0
   6d0e0:	beq	6d100 <__assert_fail@plt+0x5a548>
   6d0e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   6d0e8:	ldr	r0, [r0, #12]
   6d0ec:	ldr	r1, [fp, #-36]	; 0xffffffdc
   6d0f0:	add	r0, r0, r1, lsl #2
   6d0f4:	ldr	r0, [r0]
   6d0f8:	str	r0, [sp, #24]
   6d0fc:	b	6d124 <__assert_fail@plt+0x5a56c>
   6d100:	ldr	r0, [fp, #-24]	; 0xffffffe8
   6d104:	ldr	r0, [r0, #20]
   6d108:	ldr	r1, [fp, #-36]	; 0xffffffdc
   6d10c:	movw	r2, #12
   6d110:	mul	r1, r1, r2
   6d114:	add	r0, r0, r1
   6d118:	ldr	r0, [r0, #8]
   6d11c:	ldr	r0, [r0]
   6d120:	str	r0, [sp, #24]
   6d124:	ldr	r0, [sp, #24]
   6d128:	str	r0, [sp, #36]	; 0x24
   6d12c:	ldr	r0, [sp, #40]	; 0x28
   6d130:	ldr	r1, [fp, #-12]
   6d134:	ldr	r1, [r1, #12]
   6d138:	cmp	r0, r1
   6d13c:	bgt	6d1d8 <__assert_fail@plt+0x5a620>
   6d140:	ldr	r0, [fp, #-12]
   6d144:	ldr	r0, [r0]
   6d148:	ldr	r1, [sp, #40]	; 0x28
   6d14c:	add	r0, r0, r1, lsl #2
   6d150:	ldr	r0, [r0]
   6d154:	movw	r1, #0
   6d158:	cmp	r0, r1
   6d15c:	beq	6d1d8 <__assert_fail@plt+0x5a620>
   6d160:	ldr	r0, [fp, #-12]
   6d164:	ldr	r0, [r0]
   6d168:	ldr	r1, [sp, #40]	; 0x28
   6d16c:	add	r0, r0, r1, lsl #2
   6d170:	ldr	r0, [r0]
   6d174:	movw	r1, #0
   6d178:	cmp	r0, r1
   6d17c:	beq	6d1d8 <__assert_fail@plt+0x5a620>
   6d180:	ldr	r0, [fp, #-12]
   6d184:	ldr	r0, [r0]
   6d188:	ldr	r1, [sp, #40]	; 0x28
   6d18c:	add	r0, r0, r1, lsl #2
   6d190:	ldr	r0, [r0]
   6d194:	add	r0, r0, #4
   6d198:	ldr	r1, [sp, #36]	; 0x24
   6d19c:	bl	64350 <__assert_fail@plt+0x51798>
   6d1a0:	cmp	r0, #0
   6d1a4:	beq	6d1d8 <__assert_fail@plt+0x5a620>
   6d1a8:	ldr	r0, [fp, #-8]
   6d1ac:	ldr	r1, [fp, #-12]
   6d1b0:	add	r1, r1, #16
   6d1b4:	ldr	r2, [fp, #-36]	; 0xffffffdc
   6d1b8:	ldr	r3, [fp, #-16]
   6d1bc:	ldr	ip, [sp, #36]	; 0x24
   6d1c0:	ldr	lr, [sp, #40]	; 0x28
   6d1c4:	str	ip, [sp]
   6d1c8:	str	lr, [sp, #4]
   6d1cc:	bl	6da9c <__assert_fail@plt+0x5aee4>
   6d1d0:	tst	r0, #1
   6d1d4:	beq	6d1dc <__assert_fail@plt+0x5a624>
   6d1d8:	b	6d35c <__assert_fail@plt+0x5a7a4>
   6d1dc:	ldr	r0, [sp, #64]	; 0x40
   6d1e0:	movw	r1, #0
   6d1e4:	cmp	r0, r1
   6d1e8:	bne	6d240 <__assert_fail@plt+0x5a688>
   6d1ec:	ldr	r0, [fp, #-12]
   6d1f0:	add	r1, sp, #64	; 0x40
   6d1f4:	mov	r2, r1
   6d1f8:	str	r0, [sp, #20]
   6d1fc:	mov	r0, r2
   6d200:	ldr	r2, [sp, #20]
   6d204:	str	r1, [sp, #16]
   6d208:	mov	r1, r2
   6d20c:	movw	r2, #28
   6d210:	bl	125c4 <memcpy@plt>
   6d214:	ldr	r0, [sp, #16]
   6d218:	add	r0, r0, #16
   6d21c:	ldr	r1, [fp, #-12]
   6d220:	add	r1, r1, #16
   6d224:	bl	6427c <__assert_fail@plt+0x516c4>
   6d228:	str	r0, [fp, #-28]	; 0xffffffe4
   6d22c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   6d230:	cmp	r0, #0
   6d234:	beq	6d23c <__assert_fail@plt+0x5a684>
   6d238:	b	6d39c <__assert_fail@plt+0x5a7e4>
   6d23c:	b	6d240 <__assert_fail@plt+0x5a688>
   6d240:	ldr	r0, [fp, #-36]	; 0xffffffdc
   6d244:	str	r0, [sp, #72]	; 0x48
   6d248:	ldr	r0, [fp, #-16]
   6d24c:	str	r0, [sp, #76]	; 0x4c
   6d250:	add	r0, sp, #64	; 0x40
   6d254:	add	r0, r0, #16
   6d258:	ldr	r1, [sp, #56]	; 0x38
   6d25c:	bl	63e94 <__assert_fail@plt+0x512dc>
   6d260:	and	r0, r0, #1
   6d264:	strb	r0, [sp, #35]	; 0x23
   6d268:	ldrb	r0, [sp, #35]	; 0x23
   6d26c:	mvn	r1, #0
   6d270:	eor	r0, r0, r1
   6d274:	tst	r0, #1
   6d278:	beq	6d288 <__assert_fail@plt+0x5a6d0>
   6d27c:	movw	r0, #12
   6d280:	str	r0, [fp, #-28]	; 0xffffffe4
   6d284:	b	6d39c <__assert_fail@plt+0x5a7e4>
   6d288:	ldr	r0, [sp, #64]	; 0x40
   6d28c:	ldr	r1, [fp, #-16]
   6d290:	add	r0, r0, r1, lsl #2
   6d294:	ldr	r0, [r0]
   6d298:	str	r0, [sp, #28]
   6d29c:	ldr	r0, [fp, #-8]
   6d2a0:	add	r1, sp, #64	; 0x40
   6d2a4:	bl	6c2fc <__assert_fail@plt+0x59744>
   6d2a8:	str	r0, [fp, #-28]	; 0xffffffe4
   6d2ac:	ldr	r0, [fp, #-28]	; 0xffffffe4
   6d2b0:	cmp	r0, #0
   6d2b4:	beq	6d2bc <__assert_fail@plt+0x5a704>
   6d2b8:	b	6d39c <__assert_fail@plt+0x5a7e4>
   6d2bc:	ldr	r0, [fp, #-12]
   6d2c0:	ldr	r0, [r0, #4]
   6d2c4:	movw	r1, #0
   6d2c8:	cmp	r0, r1
   6d2cc:	beq	6d304 <__assert_fail@plt+0x5a74c>
   6d2d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   6d2d4:	ldr	r1, [fp, #-12]
   6d2d8:	ldr	r1, [r1, #4]
   6d2dc:	ldr	r2, [sp, #64]	; 0x40
   6d2e0:	ldr	r3, [fp, #-16]
   6d2e4:	add	r3, r3, #1
   6d2e8:	bl	6c4f4 <__assert_fail@plt+0x5993c>
   6d2ec:	str	r0, [fp, #-28]	; 0xffffffe4
   6d2f0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   6d2f4:	cmp	r0, #0
   6d2f8:	beq	6d300 <__assert_fail@plt+0x5a748>
   6d2fc:	b	6d39c <__assert_fail@plt+0x5a7e4>
   6d300:	b	6d304 <__assert_fail@plt+0x5a74c>
   6d304:	ldr	r0, [sp, #28]
   6d308:	ldr	r1, [sp, #64]	; 0x40
   6d30c:	ldr	r2, [fp, #-16]
   6d310:	add	r1, r1, r2, lsl #2
   6d314:	str	r0, [r1]
   6d318:	add	r0, sp, #64	; 0x40
   6d31c:	add	r1, r0, #16
   6d320:	add	r0, r0, #16
   6d324:	ldr	r2, [sp, #56]	; 0x38
   6d328:	str	r1, [sp, #12]
   6d32c:	mov	r1, r2
   6d330:	bl	64350 <__assert_fail@plt+0x51798>
   6d334:	sub	r1, r0, #1
   6d338:	ldr	r0, [sp, #12]
   6d33c:	bl	64a3c <__assert_fail@plt+0x51e84>
   6d340:	ldr	r0, [fp, #-8]
   6d344:	ldr	r0, [r0, #116]	; 0x74
   6d348:	ldr	r1, [sp, #56]	; 0x38
   6d34c:	movw	r2, #24
   6d350:	mul	r1, r1, r2
   6d354:	add	r0, r0, r1
   6d358:	str	r0, [sp, #48]	; 0x30
   6d35c:	ldr	r0, [sp, #56]	; 0x38
   6d360:	add	r0, r0, #1
   6d364:	str	r0, [sp, #56]	; 0x38
   6d368:	ldr	r0, [sp, #48]	; 0x30
   6d36c:	add	r1, r0, #24
   6d370:	str	r1, [sp, #48]	; 0x30
   6d374:	ldrsb	r0, [r0, #20]
   6d378:	cmp	r0, #0
   6d37c:	bne	6d098 <__assert_fail@plt+0x5a4e0>
   6d380:	b	6d384 <__assert_fail@plt+0x5a7cc>
   6d384:	ldr	r0, [fp, #-32]	; 0xffffffe0
   6d388:	add	r0, r0, #1
   6d38c:	str	r0, [fp, #-32]	; 0xffffffe0
   6d390:	b	6cff4 <__assert_fail@plt+0x5a43c>
   6d394:	movw	r0, #0
   6d398:	str	r0, [fp, #-28]	; 0xffffffe4
   6d39c:	ldr	r0, [sp, #64]	; 0x40
   6d3a0:	movw	r1, #0
   6d3a4:	cmp	r0, r1
   6d3a8:	beq	6d3b4 <__assert_fail@plt+0x5a7fc>
   6d3ac:	ldr	r0, [sp, #88]	; 0x58
   6d3b0:	bl	50c68 <__assert_fail@plt+0x3e0b0>
   6d3b4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   6d3b8:	str	r0, [fp, #-4]
   6d3bc:	ldr	r0, [fp, #-4]
   6d3c0:	mov	sp, fp
   6d3c4:	pop	{fp, pc}
   6d3c8:	push	{fp, lr}
   6d3cc:	mov	fp, sp
   6d3d0:	sub	sp, sp, #56	; 0x38
   6d3d4:	str	r0, [fp, #-8]
   6d3d8:	str	r1, [fp, #-12]
   6d3dc:	str	r2, [fp, #-16]
   6d3e0:	ldr	r0, [fp, #-12]
   6d3e4:	ldr	r0, [r0, #4]
   6d3e8:	cmp	r0, #0
   6d3ec:	beq	6d400 <__assert_fail@plt+0x5a848>
   6d3f0:	ldr	r0, [fp, #-16]
   6d3f4:	ldr	r0, [r0, #4]
   6d3f8:	cmp	r0, #0
   6d3fc:	bne	6d40c <__assert_fail@plt+0x5a854>
   6d400:	movw	r0, #0
   6d404:	str	r0, [fp, #-4]
   6d408:	b	6d804 <__assert_fail@plt+0x5ac4c>
   6d40c:	ldr	r0, [fp, #-12]
   6d410:	ldr	r0, [r0, #4]
   6d414:	ldr	r1, [fp, #-16]
   6d418:	ldr	r1, [r1, #4]
   6d41c:	add	r0, r0, r1
   6d420:	ldr	r1, [fp, #-8]
   6d424:	ldr	r1, [r1, #4]
   6d428:	add	r0, r0, r1
   6d42c:	ldr	r1, [fp, #-8]
   6d430:	ldr	r1, [r1]
   6d434:	cmp	r0, r1
   6d438:	ble	6d4ac <__assert_fail@plt+0x5a8f4>
   6d43c:	ldr	r0, [fp, #-12]
   6d440:	ldr	r0, [r0, #4]
   6d444:	ldr	r1, [fp, #-16]
   6d448:	ldr	r1, [r1, #4]
   6d44c:	add	r0, r0, r1
   6d450:	ldr	r1, [fp, #-8]
   6d454:	ldr	r1, [r1]
   6d458:	add	r0, r0, r1
   6d45c:	str	r0, [sp, #12]
   6d460:	ldr	r0, [fp, #-8]
   6d464:	ldr	r0, [r0, #8]
   6d468:	ldr	r1, [sp, #12]
   6d46c:	lsl	r1, r1, #2
   6d470:	bl	55a84 <__assert_fail@plt+0x42ecc>
   6d474:	str	r0, [sp, #8]
   6d478:	ldr	r0, [sp, #8]
   6d47c:	movw	r1, #0
   6d480:	cmp	r0, r1
   6d484:	bne	6d494 <__assert_fail@plt+0x5a8dc>
   6d488:	movw	r0, #12
   6d48c:	str	r0, [fp, #-4]
   6d490:	b	6d804 <__assert_fail@plt+0x5ac4c>
   6d494:	ldr	r0, [sp, #8]
   6d498:	ldr	r1, [fp, #-8]
   6d49c:	str	r0, [r1, #8]
   6d4a0:	ldr	r0, [sp, #12]
   6d4a4:	ldr	r1, [fp, #-8]
   6d4a8:	str	r0, [r1]
   6d4ac:	ldr	r0, [fp, #-8]
   6d4b0:	ldr	r0, [r0, #4]
   6d4b4:	ldr	r1, [fp, #-12]
   6d4b8:	ldr	r1, [r1, #4]
   6d4bc:	add	r0, r0, r1
   6d4c0:	ldr	r1, [fp, #-16]
   6d4c4:	ldr	r1, [r1, #4]
   6d4c8:	add	r0, r0, r1
   6d4cc:	str	r0, [sp, #16]
   6d4d0:	ldr	r0, [fp, #-12]
   6d4d4:	ldr	r0, [r0, #4]
   6d4d8:	sub	r0, r0, #1
   6d4dc:	str	r0, [fp, #-20]	; 0xffffffec
   6d4e0:	ldr	r0, [fp, #-16]
   6d4e4:	ldr	r0, [r0, #4]
   6d4e8:	sub	r0, r0, #1
   6d4ec:	str	r0, [fp, #-24]	; 0xffffffe8
   6d4f0:	ldr	r0, [fp, #-8]
   6d4f4:	ldr	r0, [r0, #4]
   6d4f8:	sub	r0, r0, #1
   6d4fc:	str	r0, [sp, #24]
   6d500:	ldr	r0, [fp, #-12]
   6d504:	ldr	r0, [r0, #8]
   6d508:	ldr	r1, [fp, #-20]	; 0xffffffec
   6d50c:	ldr	r0, [r0, r1, lsl #2]
   6d510:	ldr	r1, [fp, #-16]
   6d514:	ldr	r1, [r1, #8]
   6d518:	ldr	r2, [fp, #-24]	; 0xffffffe8
   6d51c:	add	r1, r1, r2, lsl #2
   6d520:	ldr	r1, [r1]
   6d524:	cmp	r0, r1
   6d528:	bne	6d634 <__assert_fail@plt+0x5aa7c>
   6d52c:	b	6d530 <__assert_fail@plt+0x5a978>
   6d530:	ldr	r0, [sp, #24]
   6d534:	cmp	r0, #0
   6d538:	movw	r0, #0
   6d53c:	str	r0, [sp, #4]
   6d540:	blt	6d578 <__assert_fail@plt+0x5a9c0>
   6d544:	ldr	r0, [fp, #-8]
   6d548:	ldr	r0, [r0, #8]
   6d54c:	ldr	r1, [sp, #24]
   6d550:	ldr	r0, [r0, r1, lsl #2]
   6d554:	ldr	r1, [fp, #-12]
   6d558:	ldr	r1, [r1, #8]
   6d55c:	ldr	r2, [fp, #-20]	; 0xffffffec
   6d560:	add	r1, r1, r2, lsl #2
   6d564:	ldr	r1, [r1]
   6d568:	cmp	r0, r1
   6d56c:	movw	r0, #0
   6d570:	movgt	r0, #1
   6d574:	str	r0, [sp, #4]
   6d578:	ldr	r0, [sp, #4]
   6d57c:	tst	r0, #1
   6d580:	beq	6d598 <__assert_fail@plt+0x5a9e0>
   6d584:	ldr	r0, [sp, #24]
   6d588:	mvn	r1, #0
   6d58c:	add	r0, r0, r1
   6d590:	str	r0, [sp, #24]
   6d594:	b	6d530 <__assert_fail@plt+0x5a978>
   6d598:	ldr	r0, [sp, #24]
   6d59c:	cmp	r0, #0
   6d5a0:	blt	6d5d0 <__assert_fail@plt+0x5aa18>
   6d5a4:	ldr	r0, [fp, #-8]
   6d5a8:	ldr	r0, [r0, #8]
   6d5ac:	ldr	r1, [sp, #24]
   6d5b0:	ldr	r0, [r0, r1, lsl #2]
   6d5b4:	ldr	r1, [fp, #-12]
   6d5b8:	ldr	r1, [r1, #8]
   6d5bc:	ldr	r2, [fp, #-20]	; 0xffffffec
   6d5c0:	add	r1, r1, r2, lsl #2
   6d5c4:	ldr	r1, [r1]
   6d5c8:	cmp	r0, r1
   6d5cc:	beq	6d5fc <__assert_fail@plt+0x5aa44>
   6d5d0:	ldr	r0, [fp, #-12]
   6d5d4:	ldr	r0, [r0, #8]
   6d5d8:	ldr	r1, [fp, #-20]	; 0xffffffec
   6d5dc:	ldr	r0, [r0, r1, lsl #2]
   6d5e0:	ldr	r1, [fp, #-8]
   6d5e4:	ldr	r1, [r1, #8]
   6d5e8:	ldr	r2, [sp, #16]
   6d5ec:	sub	r2, r2, #1
   6d5f0:	str	r2, [sp, #16]
   6d5f4:	add	r1, r1, r2, lsl #2
   6d5f8:	str	r0, [r1]
   6d5fc:	ldr	r0, [fp, #-20]	; 0xffffffec
   6d600:	mvn	r1, #0
   6d604:	add	r0, r0, r1
   6d608:	str	r0, [fp, #-20]	; 0xffffffec
   6d60c:	cmp	r0, #0
   6d610:	blt	6d62c <__assert_fail@plt+0x5aa74>
   6d614:	ldr	r0, [fp, #-24]	; 0xffffffe8
   6d618:	mvn	r1, #0
   6d61c:	add	r0, r0, r1
   6d620:	str	r0, [fp, #-24]	; 0xffffffe8
   6d624:	cmp	r0, #0
   6d628:	bge	6d630 <__assert_fail@plt+0x5aa78>
   6d62c:	b	6d6a8 <__assert_fail@plt+0x5aaf0>
   6d630:	b	6d6a4 <__assert_fail@plt+0x5aaec>
   6d634:	ldr	r0, [fp, #-12]
   6d638:	ldr	r0, [r0, #8]
   6d63c:	ldr	r1, [fp, #-20]	; 0xffffffec
   6d640:	ldr	r0, [r0, r1, lsl #2]
   6d644:	ldr	r1, [fp, #-16]
   6d648:	ldr	r1, [r1, #8]
   6d64c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   6d650:	add	r1, r1, r2, lsl #2
   6d654:	ldr	r1, [r1]
   6d658:	cmp	r0, r1
   6d65c:	bge	6d680 <__assert_fail@plt+0x5aac8>
   6d660:	ldr	r0, [fp, #-24]	; 0xffffffe8
   6d664:	mvn	r1, #0
   6d668:	add	r0, r0, r1
   6d66c:	str	r0, [fp, #-24]	; 0xffffffe8
   6d670:	cmp	r0, #0
   6d674:	bge	6d67c <__assert_fail@plt+0x5aac4>
   6d678:	b	6d6a8 <__assert_fail@plt+0x5aaf0>
   6d67c:	b	6d6a0 <__assert_fail@plt+0x5aae8>
   6d680:	ldr	r0, [fp, #-20]	; 0xffffffec
   6d684:	mvn	r1, #0
   6d688:	add	r0, r0, r1
   6d68c:	str	r0, [fp, #-20]	; 0xffffffec
   6d690:	cmp	r0, #0
   6d694:	bge	6d69c <__assert_fail@plt+0x5aae4>
   6d698:	b	6d6a8 <__assert_fail@plt+0x5aaf0>
   6d69c:	b	6d6a0 <__assert_fail@plt+0x5aae8>
   6d6a0:	b	6d6a4 <__assert_fail@plt+0x5aaec>
   6d6a4:	b	6d500 <__assert_fail@plt+0x5a948>
   6d6a8:	ldr	r0, [fp, #-8]
   6d6ac:	ldr	r0, [r0, #4]
   6d6b0:	sub	r0, r0, #1
   6d6b4:	str	r0, [sp, #24]
   6d6b8:	ldr	r0, [fp, #-8]
   6d6bc:	ldr	r0, [r0, #4]
   6d6c0:	ldr	r1, [fp, #-12]
   6d6c4:	ldr	r1, [r1, #4]
   6d6c8:	add	r0, r0, r1
   6d6cc:	ldr	r1, [fp, #-16]
   6d6d0:	ldr	r1, [r1, #4]
   6d6d4:	add	r0, r0, r1
   6d6d8:	sub	r0, r0, #1
   6d6dc:	str	r0, [sp, #28]
   6d6e0:	ldr	r0, [sp, #28]
   6d6e4:	ldr	r1, [sp, #16]
   6d6e8:	sub	r0, r0, r1
   6d6ec:	add	r0, r0, #1
   6d6f0:	str	r0, [sp, #20]
   6d6f4:	ldr	r0, [sp, #20]
   6d6f8:	ldr	r1, [fp, #-8]
   6d6fc:	ldr	r2, [r1, #4]
   6d700:	add	r0, r2, r0
   6d704:	str	r0, [r1, #4]
   6d708:	ldr	r0, [sp, #20]
   6d70c:	cmp	r0, #0
   6d710:	ble	6d7e0 <__assert_fail@plt+0x5ac28>
   6d714:	ldr	r0, [sp, #24]
   6d718:	cmp	r0, #0
   6d71c:	blt	6d7e0 <__assert_fail@plt+0x5ac28>
   6d720:	b	6d724 <__assert_fail@plt+0x5ab6c>
   6d724:	ldr	r0, [fp, #-8]
   6d728:	ldr	r0, [r0, #8]
   6d72c:	ldr	r1, [sp, #28]
   6d730:	ldr	r1, [r0, r1, lsl #2]
   6d734:	ldr	r2, [sp, #24]
   6d738:	add	r0, r0, r2, lsl #2
   6d73c:	ldr	r0, [r0]
   6d740:	cmp	r1, r0
   6d744:	ble	6d798 <__assert_fail@plt+0x5abe0>
   6d748:	ldr	r0, [fp, #-8]
   6d74c:	ldr	r0, [r0, #8]
   6d750:	ldr	r1, [sp, #28]
   6d754:	sub	r2, r1, #1
   6d758:	str	r2, [sp, #28]
   6d75c:	ldr	r0, [r0, r1, lsl #2]
   6d760:	ldr	r1, [fp, #-8]
   6d764:	ldr	r1, [r1, #8]
   6d768:	ldr	r2, [sp, #24]
   6d76c:	ldr	r3, [sp, #20]
   6d770:	sub	ip, r3, #1
   6d774:	str	ip, [sp, #20]
   6d778:	add	r2, r2, r3
   6d77c:	add	r1, r1, r2, lsl #2
   6d780:	str	r0, [r1]
   6d784:	ldr	r0, [sp, #20]
   6d788:	cmp	r0, #0
   6d78c:	bne	6d794 <__assert_fail@plt+0x5abdc>
   6d790:	b	6d7dc <__assert_fail@plt+0x5ac24>
   6d794:	b	6d7d8 <__assert_fail@plt+0x5ac20>
   6d798:	ldr	r0, [fp, #-8]
   6d79c:	ldr	r0, [r0, #8]
   6d7a0:	ldr	r1, [sp, #24]
   6d7a4:	ldr	r2, [r0, r1, lsl #2]
   6d7a8:	ldr	r3, [sp, #20]
   6d7ac:	add	r1, r1, r3
   6d7b0:	add	r0, r0, r1, lsl #2
   6d7b4:	str	r2, [r0]
   6d7b8:	ldr	r0, [sp, #24]
   6d7bc:	mvn	r1, #0
   6d7c0:	add	r0, r0, r1
   6d7c4:	str	r0, [sp, #24]
   6d7c8:	cmp	r0, #0
   6d7cc:	bge	6d7d4 <__assert_fail@plt+0x5ac1c>
   6d7d0:	b	6d7dc <__assert_fail@plt+0x5ac24>
   6d7d4:	b	6d7d8 <__assert_fail@plt+0x5ac20>
   6d7d8:	b	6d724 <__assert_fail@plt+0x5ab6c>
   6d7dc:	b	6d7e0 <__assert_fail@plt+0x5ac28>
   6d7e0:	ldr	r0, [fp, #-8]
   6d7e4:	ldr	r0, [r0, #8]
   6d7e8:	ldr	r1, [sp, #16]
   6d7ec:	add	r1, r0, r1, lsl #2
   6d7f0:	ldr	r2, [sp, #20]
   6d7f4:	lsl	r2, r2, #2
   6d7f8:	bl	125c4 <memcpy@plt>
   6d7fc:	movw	r0, #0
   6d800:	str	r0, [fp, #-4]
   6d804:	ldr	r0, [fp, #-4]
   6d808:	mov	sp, fp
   6d80c:	pop	{fp, pc}
   6d810:	push	{fp, lr}
   6d814:	mov	fp, sp
   6d818:	sub	sp, sp, #72	; 0x48
   6d81c:	str	r0, [fp, #-8]
   6d820:	str	r1, [fp, #-12]
   6d824:	str	r2, [fp, #-16]
   6d828:	str	r3, [fp, #-20]	; 0xffffffec
   6d82c:	ldr	r0, [fp, #-8]
   6d830:	ldr	r0, [r0, #28]
   6d834:	ldr	r1, [fp, #-12]
   6d838:	movw	r2, #12
   6d83c:	mul	r1, r1, r2
   6d840:	add	r0, r0, r1
   6d844:	str	r0, [fp, #-32]	; 0xffffffe0
   6d848:	add	r0, sp, #28
   6d84c:	movw	r1, #0
   6d850:	and	r1, r1, #255	; 0xff
   6d854:	bl	12900 <memset@plt>
   6d858:	movw	r0, #0
   6d85c:	str	r0, [fp, #-24]	; 0xffffffe8
   6d860:	ldr	r0, [fp, #-24]	; 0xffffffe8
   6d864:	ldr	r1, [fp, #-32]	; 0xffffffe0
   6d868:	ldr	r1, [r1, #4]
   6d86c:	cmp	r0, r1
   6d870:	bge	6da04 <__assert_fail@plt+0x5ae4c>
   6d874:	ldr	r0, [fp, #-32]	; 0xffffffe0
   6d878:	ldr	r0, [r0, #8]
   6d87c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   6d880:	add	r0, r0, r1, lsl #2
   6d884:	ldr	r0, [r0]
   6d888:	str	r0, [sp, #24]
   6d88c:	ldr	r0, [sp, #24]
   6d890:	ldr	r1, [fp, #-12]
   6d894:	cmp	r0, r1
   6d898:	bne	6d8a0 <__assert_fail@plt+0x5ace8>
   6d89c:	b	6d9f4 <__assert_fail@plt+0x5ae3c>
   6d8a0:	ldr	r0, [fp, #-8]
   6d8a4:	ldr	r0, [r0]
   6d8a8:	ldr	r1, [sp, #24]
   6d8ac:	add	r0, r0, r1, lsl #3
   6d8b0:	ldr	r0, [r0, #4]
   6d8b4:	and	r0, r0, #255	; 0xff
   6d8b8:	and	r0, r0, #8
   6d8bc:	cmp	r0, #0
   6d8c0:	beq	6d9f0 <__assert_fail@plt+0x5ae38>
   6d8c4:	ldr	r0, [fp, #-8]
   6d8c8:	ldr	r0, [r0, #20]
   6d8cc:	ldr	r1, [sp, #24]
   6d8d0:	movw	r2, #12
   6d8d4:	mul	r1, r1, r2
   6d8d8:	add	r0, r0, r1
   6d8dc:	ldr	r0, [r0, #8]
   6d8e0:	ldr	r0, [r0]
   6d8e4:	str	r0, [sp, #20]
   6d8e8:	ldr	r0, [fp, #-8]
   6d8ec:	ldr	r0, [r0, #20]
   6d8f0:	ldr	r1, [sp, #24]
   6d8f4:	mul	r1, r1, r2
   6d8f8:	add	r0, r0, r1
   6d8fc:	ldr	r0, [r0, #4]
   6d900:	cmp	r0, #1
   6d904:	ble	6d930 <__assert_fail@plt+0x5ad78>
   6d908:	ldr	r0, [fp, #-8]
   6d90c:	ldr	r0, [r0, #20]
   6d910:	ldr	r1, [sp, #24]
   6d914:	movw	r2, #12
   6d918:	mul	r1, r1, r2
   6d91c:	add	r0, r0, r1
   6d920:	ldr	r0, [r0, #8]
   6d924:	ldr	r0, [r0, #4]
   6d928:	str	r0, [sp, #4]
   6d92c:	b	6d93c <__assert_fail@plt+0x5ad84>
   6d930:	mvn	r0, #0
   6d934:	str	r0, [sp, #4]
   6d938:	b	6d93c <__assert_fail@plt+0x5ad84>
   6d93c:	ldr	r0, [sp, #4]
   6d940:	str	r0, [sp, #16]
   6d944:	ldr	r0, [fp, #-32]	; 0xffffffe0
   6d948:	ldr	r1, [sp, #20]
   6d94c:	bl	64350 <__assert_fail@plt+0x51798>
   6d950:	cmp	r0, #0
   6d954:	bne	6d96c <__assert_fail@plt+0x5adb4>
   6d958:	ldr	r0, [fp, #-16]
   6d95c:	ldr	r1, [sp, #20]
   6d960:	bl	64350 <__assert_fail@plt+0x51798>
   6d964:	cmp	r0, #0
   6d968:	bne	6d9a0 <__assert_fail@plt+0x5ade8>
   6d96c:	ldr	r0, [sp, #16]
   6d970:	cmp	r0, #0
   6d974:	ble	6d9ec <__assert_fail@plt+0x5ae34>
   6d978:	ldr	r0, [fp, #-32]	; 0xffffffe0
   6d97c:	ldr	r1, [sp, #16]
   6d980:	bl	64350 <__assert_fail@plt+0x51798>
   6d984:	cmp	r0, #0
   6d988:	bne	6d9ec <__assert_fail@plt+0x5ae34>
   6d98c:	ldr	r0, [fp, #-16]
   6d990:	ldr	r1, [sp, #16]
   6d994:	bl	64350 <__assert_fail@plt+0x51798>
   6d998:	cmp	r0, #0
   6d99c:	beq	6d9ec <__assert_fail@plt+0x5ae34>
   6d9a0:	ldr	r1, [fp, #-20]	; 0xffffffec
   6d9a4:	ldr	r0, [fp, #-8]
   6d9a8:	ldr	r0, [r0, #28]
   6d9ac:	ldr	r2, [sp, #24]
   6d9b0:	movw	r3, #12
   6d9b4:	mul	r2, r2, r3
   6d9b8:	add	r2, r0, r2
   6d9bc:	add	r0, sp, #28
   6d9c0:	bl	6d3c8 <__assert_fail@plt+0x5a810>
   6d9c4:	str	r0, [fp, #-28]	; 0xffffffe4
   6d9c8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   6d9cc:	cmp	r0, #0
   6d9d0:	beq	6d9e8 <__assert_fail@plt+0x5ae30>
   6d9d4:	ldr	r0, [sp, #36]	; 0x24
   6d9d8:	bl	50c68 <__assert_fail@plt+0x3e0b0>
   6d9dc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   6d9e0:	str	r0, [fp, #-4]
   6d9e4:	b	6da90 <__assert_fail@plt+0x5aed8>
   6d9e8:	b	6d9ec <__assert_fail@plt+0x5ae34>
   6d9ec:	b	6d9f0 <__assert_fail@plt+0x5ae38>
   6d9f0:	b	6d9f4 <__assert_fail@plt+0x5ae3c>
   6d9f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   6d9f8:	add	r0, r0, #1
   6d9fc:	str	r0, [fp, #-24]	; 0xffffffe8
   6da00:	b	6d860 <__assert_fail@plt+0x5aca8>
   6da04:	movw	r0, #0
   6da08:	str	r0, [fp, #-24]	; 0xffffffe8
   6da0c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   6da10:	ldr	r1, [fp, #-32]	; 0xffffffe0
   6da14:	ldr	r1, [r1, #4]
   6da18:	cmp	r0, r1
   6da1c:	bge	6da80 <__assert_fail@plt+0x5aec8>
   6da20:	ldr	r0, [fp, #-32]	; 0xffffffe0
   6da24:	ldr	r0, [r0, #8]
   6da28:	ldr	r1, [fp, #-24]	; 0xffffffe8
   6da2c:	add	r0, r0, r1, lsl #2
   6da30:	ldr	r0, [r0]
   6da34:	str	r0, [sp, #12]
   6da38:	ldr	r1, [sp, #12]
   6da3c:	add	r0, sp, #28
   6da40:	bl	64350 <__assert_fail@plt+0x51798>
   6da44:	cmp	r0, #0
   6da48:	bne	6da6c <__assert_fail@plt+0x5aeb4>
   6da4c:	ldr	r0, [fp, #-16]
   6da50:	ldr	r1, [sp, #12]
   6da54:	bl	64350 <__assert_fail@plt+0x51798>
   6da58:	sub	r0, r0, #1
   6da5c:	str	r0, [sp, #8]
   6da60:	ldr	r0, [fp, #-16]
   6da64:	ldr	r1, [sp, #8]
   6da68:	bl	64a3c <__assert_fail@plt+0x51e84>
   6da6c:	b	6da70 <__assert_fail@plt+0x5aeb8>
   6da70:	ldr	r0, [fp, #-24]	; 0xffffffe8
   6da74:	add	r0, r0, #1
   6da78:	str	r0, [fp, #-24]	; 0xffffffe8
   6da7c:	b	6da0c <__assert_fail@plt+0x5ae54>
   6da80:	ldr	r0, [sp, #36]	; 0x24
   6da84:	bl	50c68 <__assert_fail@plt+0x3e0b0>
   6da88:	movw	r0, #0
   6da8c:	str	r0, [fp, #-4]
   6da90:	ldr	r0, [fp, #-4]
   6da94:	mov	sp, fp
   6da98:	pop	{fp, pc}
   6da9c:	push	{r4, sl, fp, lr}
   6daa0:	add	fp, sp, #8
   6daa4:	sub	sp, sp, #72	; 0x48
   6daa8:	ldr	ip, [fp, #12]
   6daac:	ldr	lr, [fp, #8]
   6dab0:	str	r0, [fp, #-16]
   6dab4:	str	r1, [fp, #-20]	; 0xffffffec
   6dab8:	str	r2, [fp, #-24]	; 0xffffffe8
   6dabc:	str	r3, [fp, #-28]	; 0xffffffe4
   6dac0:	ldr	r0, [fp, #-16]
   6dac4:	ldr	r0, [r0, #84]	; 0x54
   6dac8:	str	r0, [fp, #-32]	; 0xffffffe0
   6dacc:	ldr	r0, [fp, #-16]
   6dad0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   6dad4:	str	lr, [sp, #16]
   6dad8:	str	ip, [sp, #12]
   6dadc:	bl	687d8 <__assert_fail@plt+0x55c20>
   6dae0:	str	r0, [sp, #32]
   6dae4:	ldr	r0, [fp, #-16]
   6dae8:	ldr	r1, [fp, #12]
   6daec:	bl	687d8 <__assert_fail@plt+0x55c20>
   6daf0:	str	r0, [sp, #28]
   6daf4:	movw	r0, #0
   6daf8:	str	r0, [fp, #-36]	; 0xffffffdc
   6dafc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   6db00:	ldr	r1, [fp, #-20]	; 0xffffffec
   6db04:	ldr	r1, [r1, #4]
   6db08:	cmp	r0, r1
   6db0c:	bge	6dbf0 <__assert_fail@plt+0x5b038>
   6db10:	ldr	r0, [fp, #-16]
   6db14:	ldr	r0, [r0, #116]	; 0x74
   6db18:	ldr	r1, [fp, #-20]	; 0xffffffec
   6db1c:	ldr	r1, [r1, #8]
   6db20:	ldr	r2, [fp, #-36]	; 0xffffffdc
   6db24:	ldr	r1, [r1, r2, lsl #2]
   6db28:	add	r1, r1, r1, lsl #1
   6db2c:	add	r0, r0, r1, lsl #3
   6db30:	str	r0, [sp, #20]
   6db34:	ldr	r0, [fp, #-32]	; 0xffffffe0
   6db38:	ldr	r0, [r0]
   6db3c:	ldr	r1, [sp, #20]
   6db40:	ldr	r1, [r1]
   6db44:	ldr	r0, [r0, r1, lsl #3]
   6db48:	str	r0, [sp, #24]
   6db4c:	ldr	r0, [fp, #-16]
   6db50:	ldr	r1, [fp, #-20]	; 0xffffffec
   6db54:	ldr	r1, [r1, #8]
   6db58:	ldr	r2, [fp, #-36]	; 0xffffffdc
   6db5c:	ldr	r1, [r1, r2, lsl #2]
   6db60:	ldr	r2, [sp, #24]
   6db64:	ldr	r3, [fp, #-24]	; 0xffffffe8
   6db68:	ldr	ip, [fp, #-28]	; 0xffffffe4
   6db6c:	ldr	lr, [sp, #32]
   6db70:	mov	r4, sp
   6db74:	str	lr, [r4, #4]
   6db78:	str	ip, [r4]
   6db7c:	bl	6dc0c <__assert_fail@plt+0x5b054>
   6db80:	str	r0, [sp, #36]	; 0x24
   6db84:	ldr	r0, [fp, #-16]
   6db88:	ldr	r1, [fp, #-20]	; 0xffffffec
   6db8c:	ldr	r1, [r1, #8]
   6db90:	ldr	r2, [fp, #-36]	; 0xffffffdc
   6db94:	add	r1, r1, r2, lsl #2
   6db98:	ldr	r1, [r1]
   6db9c:	ldr	r2, [sp, #24]
   6dba0:	ldr	r3, [fp, #8]
   6dba4:	ldr	ip, [fp, #12]
   6dba8:	ldr	lr, [sp, #28]
   6dbac:	str	ip, [sp]
   6dbb0:	str	lr, [sp, #4]
   6dbb4:	bl	6dc0c <__assert_fail@plt+0x5b054>
   6dbb8:	str	r0, [sp, #40]	; 0x28
   6dbbc:	ldr	r0, [sp, #40]	; 0x28
   6dbc0:	ldr	r1, [sp, #36]	; 0x24
   6dbc4:	cmp	r0, r1
   6dbc8:	bne	6dbd0 <__assert_fail@plt+0x5b018>
   6dbcc:	b	6dbe0 <__assert_fail@plt+0x5b028>
   6dbd0:	movw	r0, #1
   6dbd4:	and	r0, r0, #1
   6dbd8:	strb	r0, [fp, #-9]
   6dbdc:	b	6dbfc <__assert_fail@plt+0x5b044>
   6dbe0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   6dbe4:	add	r0, r0, #1
   6dbe8:	str	r0, [fp, #-36]	; 0xffffffdc
   6dbec:	b	6dafc <__assert_fail@plt+0x5af44>
   6dbf0:	movw	r0, #0
   6dbf4:	and	r0, r0, #1
   6dbf8:	strb	r0, [fp, #-9]
   6dbfc:	ldrb	r0, [fp, #-9]
   6dc00:	and	r0, r0, #1
   6dc04:	sub	sp, fp, #8
   6dc08:	pop	{r4, sl, fp, pc}
   6dc0c:	push	{fp, lr}
   6dc10:	mov	fp, sp
   6dc14:	sub	sp, sp, #40	; 0x28
   6dc18:	ldr	ip, [fp, #12]
   6dc1c:	ldr	lr, [fp, #8]
   6dc20:	str	r0, [fp, #-8]
   6dc24:	str	r1, [fp, #-12]
   6dc28:	str	r2, [fp, #-16]
   6dc2c:	str	r3, [sp, #20]
   6dc30:	ldr	r0, [fp, #-8]
   6dc34:	ldr	r0, [r0, #116]	; 0x74
   6dc38:	ldr	r1, [fp, #-12]
   6dc3c:	movw	r2, #24
   6dc40:	mul	r1, r1, r2
   6dc44:	add	r0, r0, r1
   6dc48:	str	r0, [sp, #16]
   6dc4c:	ldr	r0, [fp, #8]
   6dc50:	ldr	r1, [sp, #16]
   6dc54:	ldr	r1, [r1, #8]
   6dc58:	cmp	r0, r1
   6dc5c:	str	lr, [sp, #8]
   6dc60:	str	ip, [sp, #4]
   6dc64:	bge	6dc74 <__assert_fail@plt+0x5b0bc>
   6dc68:	mvn	r0, #0
   6dc6c:	str	r0, [fp, #-4]
   6dc70:	b	6dd18 <__assert_fail@plt+0x5b160>
   6dc74:	ldr	r0, [sp, #16]
   6dc78:	ldr	r0, [r0, #12]
   6dc7c:	ldr	r1, [fp, #8]
   6dc80:	cmp	r0, r1
   6dc84:	bge	6dc94 <__assert_fail@plt+0x5b0dc>
   6dc88:	movw	r0, #1
   6dc8c:	str	r0, [fp, #-4]
   6dc90:	b	6dd18 <__assert_fail@plt+0x5b160>
   6dc94:	ldr	r0, [fp, #8]
   6dc98:	ldr	r1, [sp, #16]
   6dc9c:	ldr	r1, [r1, #8]
   6dca0:	cmp	r0, r1
   6dca4:	movw	r0, #0
   6dca8:	moveq	r0, #1
   6dcac:	and	r0, r0, #1
   6dcb0:	str	r0, [sp, #12]
   6dcb4:	ldr	r0, [fp, #8]
   6dcb8:	ldr	r1, [sp, #16]
   6dcbc:	ldr	r1, [r1, #12]
   6dcc0:	cmp	r0, r1
   6dcc4:	movw	r0, #0
   6dcc8:	moveq	r0, #1
   6dccc:	and	r0, r0, #1
   6dcd0:	lsl	r0, r0, #1
   6dcd4:	ldr	r1, [sp, #12]
   6dcd8:	orr	r0, r1, r0
   6dcdc:	str	r0, [sp, #12]
   6dce0:	ldr	r0, [sp, #12]
   6dce4:	cmp	r0, #0
   6dce8:	bne	6dcf8 <__assert_fail@plt+0x5b140>
   6dcec:	movw	r0, #0
   6dcf0:	str	r0, [fp, #-4]
   6dcf4:	b	6dd18 <__assert_fail@plt+0x5b160>
   6dcf8:	ldr	r0, [fp, #-8]
   6dcfc:	ldr	r1, [sp, #12]
   6dd00:	ldr	r2, [fp, #-16]
   6dd04:	ldr	r3, [sp, #20]
   6dd08:	ldr	ip, [fp, #12]
   6dd0c:	str	ip, [sp]
   6dd10:	bl	6dd24 <__assert_fail@plt+0x5b16c>
   6dd14:	str	r0, [fp, #-4]
   6dd18:	ldr	r0, [fp, #-4]
   6dd1c:	mov	sp, fp
   6dd20:	pop	{fp, pc}
   6dd24:	push	{fp, lr}
   6dd28:	mov	fp, sp
   6dd2c:	sub	sp, sp, #64	; 0x40
   6dd30:	ldr	ip, [fp, #8]
   6dd34:	str	r0, [fp, #-8]
   6dd38:	str	r1, [fp, #-12]
   6dd3c:	str	r2, [fp, #-16]
   6dd40:	str	r3, [fp, #-20]	; 0xffffffec
   6dd44:	ldr	r0, [fp, #-8]
   6dd48:	ldr	r0, [r0, #84]	; 0x54
   6dd4c:	str	r0, [fp, #-24]	; 0xffffffe8
   6dd50:	ldr	r0, [fp, #-24]	; 0xffffffe8
   6dd54:	ldr	r0, [r0, #24]
   6dd58:	ldr	r1, [fp, #-20]	; 0xffffffec
   6dd5c:	movw	r2, #12
   6dd60:	mul	r1, r1, r2
   6dd64:	add	r0, r0, r1
   6dd68:	str	r0, [fp, #-28]	; 0xffffffe4
   6dd6c:	movw	r0, #0
   6dd70:	str	r0, [sp, #32]
   6dd74:	str	ip, [sp, #12]
   6dd78:	ldr	r0, [sp, #32]
   6dd7c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   6dd80:	ldr	r1, [r1, #4]
   6dd84:	cmp	r0, r1
   6dd88:	bge	6e000 <__assert_fail@plt+0x5b448>
   6dd8c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   6dd90:	ldr	r0, [r0, #8]
   6dd94:	ldr	r1, [sp, #32]
   6dd98:	ldr	r0, [r0, r1, lsl #2]
   6dd9c:	str	r0, [sp, #28]
   6dda0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   6dda4:	ldr	r0, [r0]
   6dda8:	ldr	r1, [sp, #28]
   6ddac:	add	r0, r0, r1, lsl #3
   6ddb0:	ldrb	r0, [r0, #4]
   6ddb4:	mov	r1, r0
   6ddb8:	cmp	r0, #4
   6ddbc:	str	r1, [sp, #8]
   6ddc0:	beq	6dde8 <__assert_fail@plt+0x5b230>
   6ddc4:	b	6ddc8 <__assert_fail@plt+0x5b210>
   6ddc8:	ldr	r0, [sp, #8]
   6ddcc:	cmp	r0, #8
   6ddd0:	beq	6df68 <__assert_fail@plt+0x5b3b0>
   6ddd4:	b	6ddd8 <__assert_fail@plt+0x5b220>
   6ddd8:	ldr	r0, [sp, #8]
   6dddc:	cmp	r0, #9
   6dde0:	beq	6dfa8 <__assert_fail@plt+0x5b3f0>
   6dde4:	b	6dfe8 <__assert_fail@plt+0x5b430>
   6dde8:	ldr	r0, [fp, #8]
   6ddec:	cmn	r0, #1
   6ddf0:	beq	6df64 <__assert_fail@plt+0x5b3ac>
   6ddf4:	ldr	r0, [fp, #-8]
   6ddf8:	ldr	r0, [r0, #116]	; 0x74
   6ddfc:	ldr	r1, [fp, #8]
   6de00:	movw	r2, #24
   6de04:	mul	r1, r1, r2
   6de08:	add	r0, r0, r1
   6de0c:	str	r0, [sp, #24]
   6de10:	ldr	r0, [sp, #24]
   6de14:	ldr	r0, [r0]
   6de18:	ldr	r1, [sp, #28]
   6de1c:	cmp	r0, r1
   6de20:	beq	6de28 <__assert_fail@plt+0x5b270>
   6de24:	b	6df48 <__assert_fail@plt+0x5b390>
   6de28:	ldr	r0, [fp, #-16]
   6de2c:	cmp	r0, #32
   6de30:	bge	6de58 <__assert_fail@plt+0x5b2a0>
   6de34:	ldr	r0, [sp, #24]
   6de38:	ldr	r0, [r0, #16]
   6de3c:	ldr	r1, [fp, #-16]
   6de40:	movw	r2, #1
   6de44:	lsl	r1, r2, r1
   6de48:	and	r0, r0, r1
   6de4c:	cmp	r0, #0
   6de50:	bne	6de58 <__assert_fail@plt+0x5b2a0>
   6de54:	b	6df48 <__assert_fail@plt+0x5b390>
   6de58:	ldr	r0, [fp, #-24]	; 0xffffffe8
   6de5c:	ldr	r0, [r0, #20]
   6de60:	ldr	r1, [sp, #28]
   6de64:	movw	r2, #12
   6de68:	mul	r1, r1, r2
   6de6c:	add	r0, r0, r1
   6de70:	ldr	r0, [r0, #8]
   6de74:	ldr	r0, [r0]
   6de78:	str	r0, [sp, #20]
   6de7c:	ldr	r0, [sp, #20]
   6de80:	ldr	r1, [fp, #-20]	; 0xffffffec
   6de84:	cmp	r0, r1
   6de88:	bne	6deb4 <__assert_fail@plt+0x5b2fc>
   6de8c:	ldr	r0, [fp, #-12]
   6de90:	and	r0, r0, #1
   6de94:	cmp	r0, #0
   6de98:	beq	6dea8 <__assert_fail@plt+0x5b2f0>
   6de9c:	mvn	r0, #0
   6dea0:	str	r0, [fp, #-4]
   6dea4:	b	6e024 <__assert_fail@plt+0x5b46c>
   6dea8:	movw	r0, #0
   6deac:	str	r0, [fp, #-4]
   6deb0:	b	6e024 <__assert_fail@plt+0x5b46c>
   6deb4:	ldr	r0, [fp, #-8]
   6deb8:	ldr	r1, [fp, #-12]
   6debc:	ldr	r2, [fp, #-16]
   6dec0:	ldr	r3, [sp, #20]
   6dec4:	ldr	ip, [fp, #8]
   6dec8:	str	ip, [sp]
   6decc:	bl	6dd24 <__assert_fail@plt+0x5b16c>
   6ded0:	str	r0, [sp, #16]
   6ded4:	ldr	r0, [sp, #16]
   6ded8:	cmn	r0, #1
   6dedc:	bne	6deec <__assert_fail@plt+0x5b334>
   6dee0:	mvn	r0, #0
   6dee4:	str	r0, [fp, #-4]
   6dee8:	b	6e024 <__assert_fail@plt+0x5b46c>
   6deec:	ldr	r0, [sp, #16]
   6def0:	cmp	r0, #0
   6def4:	bne	6df14 <__assert_fail@plt+0x5b35c>
   6def8:	ldr	r0, [fp, #-12]
   6defc:	and	r0, r0, #2
   6df00:	cmp	r0, #0
   6df04:	beq	6df14 <__assert_fail@plt+0x5b35c>
   6df08:	movw	r0, #0
   6df0c:	str	r0, [fp, #-4]
   6df10:	b	6e024 <__assert_fail@plt+0x5b46c>
   6df14:	ldr	r0, [fp, #-16]
   6df18:	cmp	r0, #32
   6df1c:	bge	6df44 <__assert_fail@plt+0x5b38c>
   6df20:	ldr	r0, [fp, #-16]
   6df24:	movw	r1, #1
   6df28:	lsl	r0, r1, r0
   6df2c:	mvn	r1, #0
   6df30:	eor	r0, r0, r1
   6df34:	ldr	r1, [sp, #24]
   6df38:	ldr	r2, [r1, #16]
   6df3c:	and	r0, r2, r0
   6df40:	str	r0, [r1, #16]
   6df44:	b	6df48 <__assert_fail@plt+0x5b390>
   6df48:	ldr	r0, [sp, #24]
   6df4c:	add	r1, r0, #24
   6df50:	str	r1, [sp, #24]
   6df54:	ldrsb	r0, [r0, #20]
   6df58:	cmp	r0, #0
   6df5c:	bne	6de10 <__assert_fail@plt+0x5b258>
   6df60:	b	6df64 <__assert_fail@plt+0x5b3ac>
   6df64:	b	6dfec <__assert_fail@plt+0x5b434>
   6df68:	ldr	r0, [fp, #-12]
   6df6c:	and	r0, r0, #1
   6df70:	cmp	r0, #0
   6df74:	beq	6dfa4 <__assert_fail@plt+0x5b3ec>
   6df78:	ldr	r0, [fp, #-16]
   6df7c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   6df80:	ldr	r1, [r1]
   6df84:	ldr	r2, [sp, #28]
   6df88:	add	r1, r1, r2, lsl #3
   6df8c:	ldr	r1, [r1]
   6df90:	cmp	r0, r1
   6df94:	bne	6dfa4 <__assert_fail@plt+0x5b3ec>
   6df98:	mvn	r0, #0
   6df9c:	str	r0, [fp, #-4]
   6dfa0:	b	6e024 <__assert_fail@plt+0x5b46c>
   6dfa4:	b	6dfec <__assert_fail@plt+0x5b434>
   6dfa8:	ldr	r0, [fp, #-12]
   6dfac:	and	r0, r0, #2
   6dfb0:	cmp	r0, #0
   6dfb4:	beq	6dfe4 <__assert_fail@plt+0x5b42c>
   6dfb8:	ldr	r0, [fp, #-16]
   6dfbc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   6dfc0:	ldr	r1, [r1]
   6dfc4:	ldr	r2, [sp, #28]
   6dfc8:	add	r1, r1, r2, lsl #3
   6dfcc:	ldr	r1, [r1]
   6dfd0:	cmp	r0, r1
   6dfd4:	bne	6dfe4 <__assert_fail@plt+0x5b42c>
   6dfd8:	movw	r0, #0
   6dfdc:	str	r0, [fp, #-4]
   6dfe0:	b	6e024 <__assert_fail@plt+0x5b46c>
   6dfe4:	b	6dfec <__assert_fail@plt+0x5b434>
   6dfe8:	b	6dfec <__assert_fail@plt+0x5b434>
   6dfec:	b	6dff0 <__assert_fail@plt+0x5b438>
   6dff0:	ldr	r0, [sp, #32]
   6dff4:	add	r0, r0, #1
   6dff8:	str	r0, [sp, #32]
   6dffc:	b	6dd78 <__assert_fail@plt+0x5b1c0>
   6e000:	ldr	r0, [fp, #-12]
   6e004:	and	r0, r0, #2
   6e008:	cmp	r0, #0
   6e00c:	movw	r0, #0
   6e010:	movne	r0, #1
   6e014:	tst	r0, #1
   6e018:	movw	r0, #1
   6e01c:	moveq	r0, #0
   6e020:	str	r0, [fp, #-4]
   6e024:	ldr	r0, [fp, #-4]
   6e028:	mov	sp, fp
   6e02c:	pop	{fp, pc}
   6e030:	push	{fp, lr}
   6e034:	mov	fp, sp
   6e038:	sub	sp, sp, #32
   6e03c:	ldr	ip, [fp, #8]
   6e040:	str	r0, [fp, #-4]
   6e044:	str	r1, [fp, #-8]
   6e048:	str	r2, [fp, #-12]
   6e04c:	str	r3, [sp, #16]
   6e050:	ldr	r0, [fp, #-4]
   6e054:	ldr	r0, [r0, #84]	; 0x54
   6e058:	str	r0, [sp, #12]
   6e05c:	ldr	r0, [sp, #12]
   6e060:	ldr	r1, [fp, #-12]
   6e064:	ldr	r2, [fp, #-4]
   6e068:	ldr	r3, [sp, #16]
   6e06c:	str	ip, [sp, #4]
   6e070:	bl	6a3dc <__assert_fail@plt+0x57824>
   6e074:	str	r0, [sp, #8]
   6e078:	ldr	r0, [sp, #8]
   6e07c:	cmp	r0, #0
   6e080:	ble	6e108 <__assert_fail@plt+0x5b550>
   6e084:	ldr	r0, [sp, #16]
   6e088:	ldr	r1, [sp, #8]
   6e08c:	add	r0, r0, r1
   6e090:	ldr	r1, [fp, #8]
   6e094:	cmp	r0, r1
   6e098:	bgt	6e108 <__assert_fail@plt+0x5b550>
   6e09c:	ldr	r0, [fp, #-8]
   6e0a0:	ldr	r0, [r0]
   6e0a4:	ldr	r1, [sp, #16]
   6e0a8:	ldr	r2, [sp, #8]
   6e0ac:	add	r1, r1, r2
   6e0b0:	add	r0, r0, r1, lsl #2
   6e0b4:	ldr	r0, [r0]
   6e0b8:	movw	r1, #0
   6e0bc:	cmp	r0, r1
   6e0c0:	beq	6e100 <__assert_fail@plt+0x5b548>
   6e0c4:	ldr	r0, [fp, #-8]
   6e0c8:	ldr	r0, [r0]
   6e0cc:	ldr	r1, [sp, #16]
   6e0d0:	ldr	r2, [sp, #8]
   6e0d4:	add	r1, r1, r2
   6e0d8:	ldr	r0, [r0, r1, lsl #2]
   6e0dc:	add	r0, r0, #4
   6e0e0:	ldr	r1, [sp, #12]
   6e0e4:	ldr	r1, [r1, #12]
   6e0e8:	ldr	r2, [fp, #-12]
   6e0ec:	add	r1, r1, r2, lsl #2
   6e0f0:	ldr	r1, [r1]
   6e0f4:	bl	64350 <__assert_fail@plt+0x51798>
   6e0f8:	cmp	r0, #0
   6e0fc:	bne	6e108 <__assert_fail@plt+0x5b550>
   6e100:	movw	r0, #0
   6e104:	str	r0, [sp, #8]
   6e108:	ldr	r0, [sp, #8]
   6e10c:	mov	sp, fp
   6e110:	pop	{fp, pc}
   6e114:	sub	sp, sp, #4
   6e118:	str	r0, [sp]
   6e11c:	ldr	r0, [sp]
   6e120:	movw	r1, #0
   6e124:	str	r1, [r0]
   6e128:	ldr	r0, [sp]
   6e12c:	movw	r1, #16
   6e130:	str	r1, [r0, #4]
   6e134:	ldr	r0, [sp]
   6e138:	add	r0, r0, #12
   6e13c:	ldr	r1, [sp]
   6e140:	str	r0, [r1, #8]
   6e144:	add	sp, sp, #4
   6e148:	bx	lr
   6e14c:	push	{fp, lr}
   6e150:	mov	fp, sp
   6e154:	sub	sp, sp, #16
   6e158:	str	r0, [sp, #8]
   6e15c:	str	r1, [sp, #4]
   6e160:	ldr	r0, [sp, #4]
   6e164:	ldr	r1, [sp, #8]
   6e168:	ldr	r1, [r1]
   6e16c:	cmp	r0, r1
   6e170:	bls	6e1c0 <__assert_fail@plt+0x5b608>
   6e174:	ldr	r0, [sp, #8]
   6e178:	ldr	r1, [sp, #4]
   6e17c:	ldr	r2, [sp, #8]
   6e180:	add	r2, r2, #12
   6e184:	movw	r3, #8
   6e188:	bl	71a1c <__assert_fail@plt+0x5ee64>
   6e18c:	and	r0, r0, #1
   6e190:	strb	r0, [sp, #3]
   6e194:	ldrb	r0, [sp, #3]
   6e198:	mvn	r1, #0
   6e19c:	eor	r0, r0, r1
   6e1a0:	tst	r0, #1
   6e1a4:	beq	6e1b0 <__assert_fail@plt+0x5b5f8>
   6e1a8:	ldr	r0, [sp, #8]
   6e1ac:	bl	6ebc8 <__assert_fail@plt+0x5c010>
   6e1b0:	ldrb	r0, [sp, #3]
   6e1b4:	and	r0, r0, #1
   6e1b8:	strb	r0, [fp, #-1]
   6e1bc:	b	6e1fc <__assert_fail@plt+0x5b644>
   6e1c0:	ldr	r0, [sp, #8]
   6e1c4:	ldr	r0, [r0, #8]
   6e1c8:	ldr	r1, [sp, #4]
   6e1cc:	add	r0, r0, r1, lsl #3
   6e1d0:	ldr	r1, [sp, #8]
   6e1d4:	ldr	r1, [r1]
   6e1d8:	ldr	r2, [sp, #4]
   6e1dc:	sub	r1, r1, r2
   6e1e0:	bl	6ec24 <__assert_fail@plt+0x5c06c>
   6e1e4:	ldr	r0, [sp, #4]
   6e1e8:	ldr	r1, [sp, #8]
   6e1ec:	str	r0, [r1]
   6e1f0:	movw	r0, #1
   6e1f4:	and	r0, r0, #1
   6e1f8:	strb	r0, [fp, #-1]
   6e1fc:	ldrb	r0, [fp, #-1]
   6e200:	and	r0, r0, #1
   6e204:	mov	sp, fp
   6e208:	pop	{fp, pc}
   6e20c:	push	{fp, lr}
   6e210:	mov	fp, sp
   6e214:	sub	sp, sp, #8
   6e218:	str	r0, [sp, #4]
   6e21c:	ldr	r0, [sp, #4]
   6e220:	ldr	r0, [r0, #8]
   6e224:	ldr	r1, [sp, #4]
   6e228:	ldr	r1, [r1]
   6e22c:	bl	6ec24 <__assert_fail@plt+0x5c06c>
   6e230:	ldr	r0, [sp, #4]
   6e234:	bl	6ec38 <__assert_fail@plt+0x5c080>
   6e238:	ldr	r0, [sp, #4]
   6e23c:	bl	6e114 <__assert_fail@plt+0x5b55c>
   6e240:	mov	sp, fp
   6e244:	pop	{fp, pc}
   6e248:	push	{fp, lr}
   6e24c:	mov	fp, sp
   6e250:	sub	sp, sp, #8
   6e254:	str	r0, [sp, #4]
   6e258:	ldr	r0, [sp, #4]
   6e25c:	movw	r1, #0
   6e260:	cmp	r0, r1
   6e264:	beq	6e2e0 <__assert_fail@plt+0x5b728>
   6e268:	movw	r0, #0
   6e26c:	str	r0, [sp]
   6e270:	ldr	r0, [sp]
   6e274:	ldr	r1, [sp, #4]
   6e278:	ldr	r1, [r1]
   6e27c:	cmp	r0, r1
   6e280:	bge	6e2d4 <__assert_fail@plt+0x5b71c>
   6e284:	ldr	r0, [sp, #4]
   6e288:	ldr	r0, [r0, #8]
   6e28c:	ldr	r1, [sp]
   6e290:	movw	r2, #24
   6e294:	mul	r1, r1, r2
   6e298:	add	r0, r0, r1
   6e29c:	ldr	r0, [r0, #20]
   6e2a0:	bl	50c68 <__assert_fail@plt+0x3e0b0>
   6e2a4:	ldr	r0, [sp, #4]
   6e2a8:	ldr	r0, [r0, #8]
   6e2ac:	ldr	r1, [sp]
   6e2b0:	movw	r2, #24
   6e2b4:	mul	r1, r1, r2
   6e2b8:	add	r0, r0, r1
   6e2bc:	ldr	r0, [r0, #8]
   6e2c0:	bl	50c68 <__assert_fail@plt+0x3e0b0>
   6e2c4:	ldr	r0, [sp]
   6e2c8:	add	r0, r0, #1
   6e2cc:	str	r0, [sp]
   6e2d0:	b	6e270 <__assert_fail@plt+0x5b6b8>
   6e2d4:	ldr	r0, [sp, #4]
   6e2d8:	ldr	r0, [r0, #8]
   6e2dc:	bl	50c68 <__assert_fail@plt+0x3e0b0>
   6e2e0:	movw	r0, #0
   6e2e4:	mov	sp, fp
   6e2e8:	pop	{fp, pc}
   6e2ec:	sub	sp, sp, #4
   6e2f0:	str	r0, [sp]
   6e2f4:	ldr	r0, [sp]
   6e2f8:	ldr	r0, [r0, #8]
   6e2fc:	add	sp, sp, #4
   6e300:	bx	lr
   6e304:	push	{fp, lr}
   6e308:	mov	fp, sp
   6e30c:	sub	sp, sp, #40	; 0x28
   6e310:	ldr	ip, [fp, #12]
   6e314:	ldr	lr, [fp, #8]
   6e318:	str	r0, [fp, #-4]
   6e31c:	str	r1, [fp, #-8]
   6e320:	str	r2, [fp, #-12]
   6e324:	str	r3, [fp, #-16]
   6e328:	ldr	r0, [fp, #-4]
   6e32c:	ldr	r0, [r0]
   6e330:	ldr	r1, [fp, #-16]
   6e334:	add	r0, r0, r1, lsl #3
   6e338:	ldr	r0, [r0, #4]
   6e33c:	and	r0, r0, #255	; 0xff
   6e340:	str	r0, [sp, #20]
   6e344:	ldr	r0, [sp, #20]
   6e348:	cmp	r0, #8
   6e34c:	str	lr, [sp, #8]
   6e350:	str	ip, [sp, #4]
   6e354:	bne	6e3ac <__assert_fail@plt+0x5b7f4>
   6e358:	ldr	r0, [fp, #-4]
   6e35c:	ldr	r0, [r0]
   6e360:	ldr	r1, [fp, #-16]
   6e364:	add	r0, r0, r1, lsl #3
   6e368:	ldr	r0, [r0]
   6e36c:	add	r0, r0, #1
   6e370:	str	r0, [sp, #16]
   6e374:	ldr	r0, [sp, #16]
   6e378:	ldr	r1, [fp, #12]
   6e37c:	cmp	r0, r1
   6e380:	bge	6e3a8 <__assert_fail@plt+0x5b7f0>
   6e384:	ldr	r0, [fp, #8]
   6e388:	ldr	r1, [fp, #-8]
   6e38c:	ldr	r2, [sp, #16]
   6e390:	str	r0, [r1, r2, lsl #3]
   6e394:	ldr	r0, [fp, #-8]
   6e398:	ldr	r1, [sp, #16]
   6e39c:	add	r0, r0, r1, lsl #3
   6e3a0:	mvn	r1, #0
   6e3a4:	str	r1, [r0, #4]
   6e3a8:	b	6e4a4 <__assert_fail@plt+0x5b8ec>
   6e3ac:	ldr	r0, [sp, #20]
   6e3b0:	cmp	r0, #9
   6e3b4:	bne	6e4a0 <__assert_fail@plt+0x5b8e8>
   6e3b8:	ldr	r0, [fp, #-4]
   6e3bc:	ldr	r0, [r0]
   6e3c0:	ldr	r1, [fp, #-16]
   6e3c4:	add	r0, r0, r1, lsl #3
   6e3c8:	ldr	r0, [r0]
   6e3cc:	add	r0, r0, #1
   6e3d0:	str	r0, [sp, #12]
   6e3d4:	ldr	r0, [sp, #12]
   6e3d8:	ldr	r1, [fp, #12]
   6e3dc:	cmp	r0, r1
   6e3e0:	bge	6e49c <__assert_fail@plt+0x5b8e4>
   6e3e4:	ldr	r0, [fp, #-8]
   6e3e8:	ldr	r1, [sp, #12]
   6e3ec:	add	r0, r0, r1, lsl #3
   6e3f0:	ldr	r0, [r0]
   6e3f4:	ldr	r1, [fp, #8]
   6e3f8:	cmp	r0, r1
   6e3fc:	bge	6e42c <__assert_fail@plt+0x5b874>
   6e400:	ldr	r0, [fp, #8]
   6e404:	ldr	r1, [fp, #-8]
   6e408:	ldr	r2, [sp, #12]
   6e40c:	add	r1, r1, r2, lsl #3
   6e410:	str	r0, [r1, #4]
   6e414:	ldr	r0, [fp, #-12]
   6e418:	ldr	r1, [fp, #-8]
   6e41c:	ldr	r2, [fp, #12]
   6e420:	lsl	r2, r2, #3
   6e424:	bl	125c4 <memcpy@plt>
   6e428:	b	6e498 <__assert_fail@plt+0x5b8e0>
   6e42c:	ldr	r0, [fp, #-4]
   6e430:	ldr	r0, [r0]
   6e434:	ldr	r1, [fp, #-16]
   6e438:	add	r0, r0, r1, lsl #3
   6e43c:	ldr	r0, [r0, #4]
   6e440:	lsr	r0, r0, #19
   6e444:	and	r0, r0, #1
   6e448:	cmp	r0, #0
   6e44c:	beq	6e480 <__assert_fail@plt+0x5b8c8>
   6e450:	ldr	r0, [fp, #-12]
   6e454:	ldr	r1, [sp, #12]
   6e458:	add	r0, r0, r1, lsl #3
   6e45c:	ldr	r0, [r0]
   6e460:	cmn	r0, #1
   6e464:	beq	6e480 <__assert_fail@plt+0x5b8c8>
   6e468:	ldr	r0, [fp, #-8]
   6e46c:	ldr	r1, [fp, #-12]
   6e470:	ldr	r2, [fp, #12]
   6e474:	lsl	r2, r2, #3
   6e478:	bl	125c4 <memcpy@plt>
   6e47c:	b	6e494 <__assert_fail@plt+0x5b8dc>
   6e480:	ldr	r0, [fp, #8]
   6e484:	ldr	r1, [fp, #-8]
   6e488:	ldr	r2, [sp, #12]
   6e48c:	add	r1, r1, r2, lsl #3
   6e490:	str	r0, [r1, #4]
   6e494:	b	6e498 <__assert_fail@plt+0x5b8e0>
   6e498:	b	6e49c <__assert_fail@plt+0x5b8e4>
   6e49c:	b	6e4a0 <__assert_fail@plt+0x5b8e8>
   6e4a0:	b	6e4a4 <__assert_fail@plt+0x5b8ec>
   6e4a4:	mov	sp, fp
   6e4a8:	pop	{fp, pc}
   6e4ac:	push	{fp, lr}
   6e4b0:	mov	fp, sp
   6e4b4:	sub	sp, sp, #40	; 0x28
   6e4b8:	ldr	ip, [fp, #12]
   6e4bc:	ldr	lr, [fp, #8]
   6e4c0:	str	r0, [fp, #-8]
   6e4c4:	str	r1, [fp, #-12]
   6e4c8:	str	r2, [fp, #-16]
   6e4cc:	str	r3, [sp, #20]
   6e4d0:	ldr	r0, [fp, #-8]
   6e4d4:	movw	r1, #0
   6e4d8:	cmp	r0, r1
   6e4dc:	str	lr, [sp, #12]
   6e4e0:	str	ip, [sp, #8]
   6e4e4:	beq	6e4f8 <__assert_fail@plt+0x5b940>
   6e4e8:	ldr	r0, [fp, #-8]
   6e4ec:	ldr	r0, [r0]
   6e4f0:	cmp	r0, #0
   6e4f4:	bne	6e504 <__assert_fail@plt+0x5b94c>
   6e4f8:	mvn	r0, #0
   6e4fc:	str	r0, [fp, #-4]
   6e500:	b	6e640 <__assert_fail@plt+0x5ba88>
   6e504:	ldr	r0, [fp, #-8]
   6e508:	ldr	r1, [r0]
   6e50c:	sub	r1, r1, #1
   6e510:	str	r1, [r0]
   6e514:	str	r1, [sp, #16]
   6e518:	ldr	r0, [fp, #-8]
   6e51c:	ldr	r0, [r0, #8]
   6e520:	ldr	r1, [sp, #16]
   6e524:	add	r1, r1, r1, lsl #1
   6e528:	ldr	r0, [r0, r1, lsl #3]
   6e52c:	ldr	r1, [fp, #-12]
   6e530:	str	r0, [r1]
   6e534:	ldr	r0, [sp, #20]
   6e538:	ldr	r1, [fp, #-8]
   6e53c:	ldr	r1, [r1, #8]
   6e540:	ldr	r2, [sp, #16]
   6e544:	add	r2, r2, r2, lsl #1
   6e548:	add	r1, r1, r2, lsl #3
   6e54c:	ldr	r1, [r1, #8]
   6e550:	ldr	r2, [fp, #-16]
   6e554:	lsl	r2, r2, #3
   6e558:	bl	125c4 <memcpy@plt>
   6e55c:	ldr	r1, [fp, #8]
   6e560:	ldr	r2, [fp, #-8]
   6e564:	ldr	r2, [r2, #8]
   6e568:	ldr	lr, [sp, #16]
   6e56c:	add	lr, lr, lr, lsl #1
   6e570:	add	r2, r2, lr, lsl #3
   6e574:	ldr	r2, [r2, #8]
   6e578:	ldr	lr, [fp, #-16]
   6e57c:	add	r2, r2, lr, lsl #3
   6e580:	lsl	lr, lr, #3
   6e584:	str	r0, [sp, #4]
   6e588:	mov	r0, r1
   6e58c:	mov	r1, r2
   6e590:	mov	r2, lr
   6e594:	bl	125c4 <memcpy@plt>
   6e598:	ldr	r0, [fp, #12]
   6e59c:	ldr	r0, [r0, #8]
   6e5a0:	bl	50c68 <__assert_fail@plt+0x3e0b0>
   6e5a4:	ldr	r0, [fp, #-8]
   6e5a8:	ldr	r0, [r0, #8]
   6e5ac:	ldr	r1, [sp, #16]
   6e5b0:	movw	r2, #24
   6e5b4:	mul	r1, r1, r2
   6e5b8:	add	r0, r0, r1
   6e5bc:	ldr	r0, [r0, #8]
   6e5c0:	bl	50c68 <__assert_fail@plt+0x3e0b0>
   6e5c4:	ldr	r0, [fp, #12]
   6e5c8:	ldr	r1, [fp, #-8]
   6e5cc:	ldr	r1, [r1, #8]
   6e5d0:	ldr	r2, [sp, #16]
   6e5d4:	movw	lr, #24
   6e5d8:	mul	r2, r2, lr
   6e5dc:	add	r1, r1, r2
   6e5e0:	ldr	r2, [r1, #12]
   6e5e4:	str	r2, [r0]
   6e5e8:	ldr	r2, [r1, #16]
   6e5ec:	str	r2, [r0, #4]
   6e5f0:	ldr	r1, [r1, #20]
   6e5f4:	str	r1, [r0, #8]
   6e5f8:	ldr	r0, [fp, #-8]
   6e5fc:	ldr	r0, [r0, #8]
   6e600:	ldr	r1, [sp, #16]
   6e604:	mul	r1, r1, lr
   6e608:	add	r0, r0, r1
   6e60c:	ldr	r0, [r0, #4]
   6e610:	movw	r1, #0
   6e614:	cmp	r1, r0
   6e618:	bgt	6e620 <__assert_fail@plt+0x5ba68>
   6e61c:	b	6e620 <__assert_fail@plt+0x5ba68>
   6e620:	ldr	r0, [fp, #-8]
   6e624:	ldr	r0, [r0, #8]
   6e628:	ldr	r1, [sp, #16]
   6e62c:	movw	r2, #24
   6e630:	mul	r1, r1, r2
   6e634:	add	r0, r0, r1
   6e638:	ldr	r0, [r0, #4]
   6e63c:	str	r0, [fp, #-4]
   6e640:	ldr	r0, [fp, #-4]
   6e644:	mov	sp, fp
   6e648:	pop	{fp, pc}
   6e64c:	push	{r4, r5, fp, lr}
   6e650:	add	fp, sp, #8
   6e654:	sub	sp, sp, #112	; 0x70
   6e658:	ldr	ip, [fp, #20]
   6e65c:	ldr	lr, [fp, #16]
   6e660:	ldr	r4, [fp, #12]
   6e664:	ldr	r5, [fp, #8]
   6e668:	str	r0, [fp, #-16]
   6e66c:	str	r1, [fp, #-20]	; 0xffffffec
   6e670:	str	r2, [fp, #-24]	; 0xffffffe8
   6e674:	str	r3, [fp, #-28]	; 0xffffffe4
   6e678:	ldr	r0, [fp, #-16]
   6e67c:	ldr	r0, [r0, #84]	; 0x54
   6e680:	str	r0, [fp, #-32]	; 0xffffffe0
   6e684:	ldr	r0, [fp, #-32]	; 0xffffffe0
   6e688:	ldr	r0, [r0]
   6e68c:	ldr	r1, [fp, #12]
   6e690:	add	r0, r0, r1, lsl #3
   6e694:	ldr	r0, [r0, #4]
   6e698:	and	r0, r0, #255	; 0xff
   6e69c:	and	r0, r0, #8
   6e6a0:	cmp	r0, #0
   6e6a4:	str	r5, [sp, #32]
   6e6a8:	str	ip, [sp, #28]
   6e6ac:	str	lr, [sp, #24]
   6e6b0:	str	r4, [sp, #20]
   6e6b4:	beq	6e848 <__assert_fail@plt+0x5bc90>
   6e6b8:	ldr	r0, [fp, #-16]
   6e6bc:	ldr	r0, [r0, #100]	; 0x64
   6e6c0:	ldr	r1, [fp, #8]
   6e6c4:	ldr	r1, [r1]
   6e6c8:	add	r0, r0, r1, lsl #2
   6e6cc:	ldr	r0, [r0]
   6e6d0:	add	r0, r0, #4
   6e6d4:	str	r0, [fp, #-36]	; 0xffffffdc
   6e6d8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   6e6dc:	ldr	r0, [r0, #20]
   6e6e0:	ldr	r1, [fp, #12]
   6e6e4:	movw	r2, #12
   6e6e8:	mul	r1, r1, r2
   6e6ec:	add	r0, r0, r1
   6e6f0:	str	r0, [fp, #-40]	; 0xffffffd8
   6e6f4:	ldr	r0, [fp, #16]
   6e6f8:	ldr	r1, [fp, #12]
   6e6fc:	bl	64350 <__assert_fail@plt+0x51798>
   6e700:	cmp	r0, #0
   6e704:	bne	6e740 <__assert_fail@plt+0x5bb88>
   6e708:	ldr	r0, [fp, #16]
   6e70c:	ldr	r1, [fp, #12]
   6e710:	bl	63e94 <__assert_fail@plt+0x512dc>
   6e714:	and	r0, r0, #1
   6e718:	strb	r0, [fp, #-41]	; 0xffffffd7
   6e71c:	ldrb	r0, [fp, #-41]	; 0xffffffd7
   6e720:	mvn	r1, #0
   6e724:	eor	r0, r0, r1
   6e728:	tst	r0, #1
   6e72c:	beq	6e73c <__assert_fail@plt+0x5bb84>
   6e730:	mvn	r0, #1
   6e734:	str	r0, [fp, #-12]
   6e738:	b	6ebbc <__assert_fail@plt+0x5c004>
   6e73c:	b	6e740 <__assert_fail@plt+0x5bb88>
   6e740:	mvn	r0, #0
   6e744:	str	r0, [fp, #-48]	; 0xffffffd0
   6e748:	movw	r0, #0
   6e74c:	str	r0, [fp, #-52]	; 0xffffffcc
   6e750:	ldr	r0, [fp, #-52]	; 0xffffffcc
   6e754:	ldr	r1, [fp, #-40]	; 0xffffffd8
   6e758:	ldr	r1, [r1, #4]
   6e75c:	cmp	r0, r1
   6e760:	bge	6e83c <__assert_fail@plt+0x5bc84>
   6e764:	ldr	r0, [fp, #-40]	; 0xffffffd8
   6e768:	ldr	r0, [r0, #8]
   6e76c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   6e770:	add	r0, r0, r1, lsl #2
   6e774:	ldr	r0, [r0]
   6e778:	str	r0, [fp, #-56]	; 0xffffffc8
   6e77c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   6e780:	ldr	r1, [fp, #-56]	; 0xffffffc8
   6e784:	bl	64350 <__assert_fail@plt+0x51798>
   6e788:	cmp	r0, #0
   6e78c:	bne	6e794 <__assert_fail@plt+0x5bbdc>
   6e790:	b	6e82c <__assert_fail@plt+0x5bc74>
   6e794:	ldr	r0, [fp, #-48]	; 0xffffffd0
   6e798:	cmn	r0, #1
   6e79c:	bne	6e7ac <__assert_fail@plt+0x5bbf4>
   6e7a0:	ldr	r0, [fp, #-56]	; 0xffffffc8
   6e7a4:	str	r0, [fp, #-48]	; 0xffffffd0
   6e7a8:	b	6e828 <__assert_fail@plt+0x5bc70>
   6e7ac:	ldr	r0, [fp, #16]
   6e7b0:	ldr	r1, [fp, #-48]	; 0xffffffd0
   6e7b4:	bl	64350 <__assert_fail@plt+0x51798>
   6e7b8:	cmp	r0, #0
   6e7bc:	beq	6e7cc <__assert_fail@plt+0x5bc14>
   6e7c0:	ldr	r0, [fp, #-56]	; 0xffffffc8
   6e7c4:	str	r0, [fp, #-12]
   6e7c8:	b	6ebbc <__assert_fail@plt+0x5c004>
   6e7cc:	ldr	r0, [fp, #20]
   6e7d0:	movw	r1, #0
   6e7d4:	cmp	r0, r1
   6e7d8:	beq	6e820 <__assert_fail@plt+0x5bc68>
   6e7dc:	ldr	r0, [fp, #20]
   6e7e0:	ldr	r1, [fp, #8]
   6e7e4:	ldr	r1, [r1]
   6e7e8:	ldr	r2, [fp, #-56]	; 0xffffffc8
   6e7ec:	ldr	r3, [fp, #-20]	; 0xffffffec
   6e7f0:	ldr	ip, [fp, #-24]	; 0xffffffe8
   6e7f4:	ldr	lr, [fp, #-28]	; 0xffffffe4
   6e7f8:	ldr	r4, [fp, #16]
   6e7fc:	str	ip, [sp]
   6e800:	str	lr, [sp, #4]
   6e804:	str	r4, [sp, #8]
   6e808:	bl	6ec7c <__assert_fail@plt+0x5c0c4>
   6e80c:	cmp	r0, #0
   6e810:	beq	6e820 <__assert_fail@plt+0x5bc68>
   6e814:	mvn	r0, #1
   6e818:	str	r0, [fp, #-12]
   6e81c:	b	6ebbc <__assert_fail@plt+0x5c004>
   6e820:	b	6e824 <__assert_fail@plt+0x5bc6c>
   6e824:	b	6e83c <__assert_fail@plt+0x5bc84>
   6e828:	b	6e82c <__assert_fail@plt+0x5bc74>
   6e82c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   6e830:	add	r0, r0, #1
   6e834:	str	r0, [fp, #-52]	; 0xffffffcc
   6e838:	b	6e750 <__assert_fail@plt+0x5bb98>
   6e83c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   6e840:	str	r0, [fp, #-12]
   6e844:	b	6ebbc <__assert_fail@plt+0x5c004>
   6e848:	mov	r0, #0
   6e84c:	str	r0, [sp, #60]	; 0x3c
   6e850:	ldr	r0, [fp, #-32]	; 0xffffffe0
   6e854:	ldr	r0, [r0]
   6e858:	ldr	r1, [fp, #12]
   6e85c:	add	r0, r0, r1, lsl #3
   6e860:	ldrb	r0, [r0, #4]
   6e864:	str	r0, [sp, #56]	; 0x38
   6e868:	ldr	r0, [fp, #-32]	; 0xffffffe0
   6e86c:	ldr	r0, [r0]
   6e870:	ldr	r1, [fp, #12]
   6e874:	add	r0, r0, r1, lsl #3
   6e878:	ldr	r0, [r0, #4]
   6e87c:	lsr	r0, r0, #20
   6e880:	and	r0, r0, #1
   6e884:	cmp	r0, #0
   6e888:	beq	6e8ac <__assert_fail@plt+0x5bcf4>
   6e88c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   6e890:	ldr	r1, [fp, #12]
   6e894:	ldr	r2, [fp, #-16]
   6e898:	ldr	r3, [fp, #8]
   6e89c:	ldr	r3, [r3]
   6e8a0:	bl	6a3dc <__assert_fail@plt+0x57824>
   6e8a4:	str	r0, [sp, #60]	; 0x3c
   6e8a8:	b	6ea88 <__assert_fail@plt+0x5bed0>
   6e8ac:	ldr	r0, [sp, #56]	; 0x38
   6e8b0:	cmp	r0, #4
   6e8b4:	bne	6ea84 <__assert_fail@plt+0x5becc>
   6e8b8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   6e8bc:	ldr	r0, [r0]
   6e8c0:	ldr	r1, [fp, #12]
   6e8c4:	add	r0, r0, r1, lsl #3
   6e8c8:	ldr	r0, [r0]
   6e8cc:	add	r0, r0, #1
   6e8d0:	str	r0, [sp, #52]	; 0x34
   6e8d4:	ldr	r0, [sp, #52]	; 0x34
   6e8d8:	ldr	r1, [fp, #-20]	; 0xffffffec
   6e8dc:	cmp	r0, r1
   6e8e0:	bge	6e900 <__assert_fail@plt+0x5bd48>
   6e8e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   6e8e8:	ldr	r1, [sp, #52]	; 0x34
   6e8ec:	add	r0, r0, r1, lsl #3
   6e8f0:	ldr	r1, [r0, #4]
   6e8f4:	ldr	r0, [r0]
   6e8f8:	sub	r0, r1, r0
   6e8fc:	str	r0, [sp, #60]	; 0x3c
   6e900:	ldr	r0, [fp, #20]
   6e904:	movw	r1, #0
   6e908:	cmp	r0, r1
   6e90c:	beq	6e9e4 <__assert_fail@plt+0x5be2c>
   6e910:	ldr	r0, [sp, #52]	; 0x34
   6e914:	ldr	r1, [fp, #-20]	; 0xffffffec
   6e918:	cmp	r0, r1
   6e91c:	bge	6e950 <__assert_fail@plt+0x5bd98>
   6e920:	ldr	r0, [fp, #-24]	; 0xffffffe8
   6e924:	ldr	r1, [sp, #52]	; 0x34
   6e928:	add	r0, r0, r1, lsl #3
   6e92c:	ldr	r0, [r0]
   6e930:	cmn	r0, #1
   6e934:	beq	6e950 <__assert_fail@plt+0x5bd98>
   6e938:	ldr	r0, [fp, #-24]	; 0xffffffe8
   6e93c:	ldr	r1, [sp, #52]	; 0x34
   6e940:	add	r0, r0, r1, lsl #3
   6e944:	ldr	r0, [r0, #4]
   6e948:	cmn	r0, #1
   6e94c:	bne	6e95c <__assert_fail@plt+0x5bda4>
   6e950:	mvn	r0, #0
   6e954:	str	r0, [fp, #-12]
   6e958:	b	6ebbc <__assert_fail@plt+0x5c004>
   6e95c:	ldr	r0, [sp, #60]	; 0x3c
   6e960:	cmp	r0, #0
   6e964:	beq	6e9dc <__assert_fail@plt+0x5be24>
   6e968:	ldr	r0, [fp, #-16]
   6e96c:	ldr	r0, [r0, #4]
   6e970:	str	r0, [sp, #48]	; 0x30
   6e974:	ldr	r0, [fp, #-16]
   6e978:	ldr	r0, [r0, #28]
   6e97c:	ldr	r1, [fp, #8]
   6e980:	ldr	r1, [r1]
   6e984:	sub	r0, r0, r1
   6e988:	ldr	r1, [sp, #60]	; 0x3c
   6e98c:	cmp	r0, r1
   6e990:	blt	6e9cc <__assert_fail@plt+0x5be14>
   6e994:	ldr	r0, [sp, #48]	; 0x30
   6e998:	ldr	r1, [fp, #-24]	; 0xffffffe8
   6e99c:	ldr	r2, [sp, #52]	; 0x34
   6e9a0:	add	r1, r1, r2, lsl #3
   6e9a4:	ldr	r1, [r1]
   6e9a8:	add	r0, r0, r1
   6e9ac:	ldr	r1, [sp, #48]	; 0x30
   6e9b0:	ldr	r2, [fp, #8]
   6e9b4:	ldr	r2, [r2]
   6e9b8:	add	r1, r1, r2
   6e9bc:	ldr	r2, [sp, #60]	; 0x3c
   6e9c0:	bl	12624 <memcmp@plt>
   6e9c4:	cmp	r0, #0
   6e9c8:	beq	6e9d8 <__assert_fail@plt+0x5be20>
   6e9cc:	mvn	r0, #0
   6e9d0:	str	r0, [fp, #-12]
   6e9d4:	b	6ebbc <__assert_fail@plt+0x5c004>
   6e9d8:	b	6e9dc <__assert_fail@plt+0x5be24>
   6e9dc:	b	6e9e0 <__assert_fail@plt+0x5be28>
   6e9e0:	b	6e9e4 <__assert_fail@plt+0x5be2c>
   6e9e4:	ldr	r0, [sp, #60]	; 0x3c
   6e9e8:	cmp	r0, #0
   6e9ec:	bne	6ea80 <__assert_fail@plt+0x5bec8>
   6e9f0:	ldr	r0, [fp, #16]
   6e9f4:	ldr	r1, [fp, #12]
   6e9f8:	bl	63e94 <__assert_fail@plt+0x512dc>
   6e9fc:	and	r0, r0, #1
   6ea00:	strb	r0, [sp, #43]	; 0x2b
   6ea04:	ldrb	r0, [sp, #43]	; 0x2b
   6ea08:	mvn	r1, #0
   6ea0c:	eor	r0, r0, r1
   6ea10:	tst	r0, #1
   6ea14:	beq	6ea24 <__assert_fail@plt+0x5be6c>
   6ea18:	mvn	r0, #1
   6ea1c:	str	r0, [fp, #-12]
   6ea20:	b	6ebbc <__assert_fail@plt+0x5c004>
   6ea24:	ldr	r0, [fp, #-32]	; 0xffffffe0
   6ea28:	ldr	r0, [r0, #20]
   6ea2c:	ldr	r1, [fp, #12]
   6ea30:	add	r1, r1, r1, lsl #1
   6ea34:	add	r0, r0, r1, lsl #2
   6ea38:	ldr	r0, [r0, #8]
   6ea3c:	ldr	r0, [r0]
   6ea40:	str	r0, [sp, #44]	; 0x2c
   6ea44:	ldr	r0, [fp, #-16]
   6ea48:	ldr	r0, [r0, #100]	; 0x64
   6ea4c:	ldr	r1, [fp, #8]
   6ea50:	ldr	r1, [r1]
   6ea54:	add	r0, r0, r1, lsl #2
   6ea58:	ldr	r0, [r0]
   6ea5c:	add	r0, r0, #4
   6ea60:	ldr	r1, [sp, #44]	; 0x2c
   6ea64:	bl	64350 <__assert_fail@plt+0x51798>
   6ea68:	cmp	r0, #0
   6ea6c:	beq	6ea7c <__assert_fail@plt+0x5bec4>
   6ea70:	ldr	r0, [sp, #44]	; 0x2c
   6ea74:	str	r0, [fp, #-12]
   6ea78:	b	6ebbc <__assert_fail@plt+0x5c004>
   6ea7c:	b	6ea80 <__assert_fail@plt+0x5bec8>
   6ea80:	b	6ea84 <__assert_fail@plt+0x5becc>
   6ea84:	b	6ea88 <__assert_fail@plt+0x5bed0>
   6ea88:	ldr	r0, [sp, #60]	; 0x3c
   6ea8c:	cmp	r0, #0
   6ea90:	bne	6eabc <__assert_fail@plt+0x5bf04>
   6ea94:	ldr	r0, [fp, #-16]
   6ea98:	ldr	r1, [fp, #-32]	; 0xffffffe0
   6ea9c:	ldr	r1, [r1]
   6eaa0:	ldr	r2, [fp, #12]
   6eaa4:	add	r1, r1, r2, lsl #3
   6eaa8:	ldr	r2, [fp, #8]
   6eaac:	ldr	r2, [r2]
   6eab0:	bl	6a9c4 <__assert_fail@plt+0x57e0c>
   6eab4:	tst	r0, #1
   6eab8:	beq	6ebb0 <__assert_fail@plt+0x5bff8>
   6eabc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   6eac0:	ldr	r0, [r0, #12]
   6eac4:	ldr	r1, [fp, #12]
   6eac8:	add	r0, r0, r1, lsl #2
   6eacc:	ldr	r0, [r0]
   6ead0:	str	r0, [sp, #36]	; 0x24
   6ead4:	ldr	r0, [sp, #60]	; 0x3c
   6ead8:	cmp	r0, #0
   6eadc:	bne	6eaf4 <__assert_fail@plt+0x5bf3c>
   6eae0:	ldr	r0, [fp, #8]
   6eae4:	ldr	r0, [r0]
   6eae8:	add	r0, r0, #1
   6eaec:	str	r0, [sp, #16]
   6eaf0:	b	6eb08 <__assert_fail@plt+0x5bf50>
   6eaf4:	ldr	r0, [fp, #8]
   6eaf8:	ldr	r0, [r0]
   6eafc:	ldr	r1, [sp, #60]	; 0x3c
   6eb00:	add	r0, r0, r1
   6eb04:	str	r0, [sp, #16]
   6eb08:	ldr	r0, [sp, #16]
   6eb0c:	ldr	r1, [fp, #8]
   6eb10:	str	r0, [r1]
   6eb14:	ldr	r0, [fp, #20]
   6eb18:	movw	r1, #0
   6eb1c:	cmp	r0, r1
   6eb20:	beq	6eb98 <__assert_fail@plt+0x5bfe0>
   6eb24:	ldr	r0, [fp, #8]
   6eb28:	ldr	r0, [r0]
   6eb2c:	ldr	r1, [fp, #-16]
   6eb30:	ldr	r1, [r1, #92]	; 0x5c
   6eb34:	cmp	r0, r1
   6eb38:	bgt	6eb8c <__assert_fail@plt+0x5bfd4>
   6eb3c:	ldr	r0, [fp, #-16]
   6eb40:	ldr	r0, [r0, #100]	; 0x64
   6eb44:	ldr	r1, [fp, #8]
   6eb48:	ldr	r1, [r1]
   6eb4c:	add	r0, r0, r1, lsl #2
   6eb50:	ldr	r0, [r0]
   6eb54:	movw	r1, #0
   6eb58:	cmp	r0, r1
   6eb5c:	beq	6eb8c <__assert_fail@plt+0x5bfd4>
   6eb60:	ldr	r0, [fp, #-16]
   6eb64:	ldr	r0, [r0, #100]	; 0x64
   6eb68:	ldr	r1, [fp, #8]
   6eb6c:	ldr	r1, [r1]
   6eb70:	add	r0, r0, r1, lsl #2
   6eb74:	ldr	r0, [r0]
   6eb78:	add	r0, r0, #4
   6eb7c:	ldr	r1, [sp, #36]	; 0x24
   6eb80:	bl	64350 <__assert_fail@plt+0x51798>
   6eb84:	cmp	r0, #0
   6eb88:	bne	6eb98 <__assert_fail@plt+0x5bfe0>
   6eb8c:	mvn	r0, #0
   6eb90:	str	r0, [fp, #-12]
   6eb94:	b	6ebbc <__assert_fail@plt+0x5c004>
   6eb98:	ldr	r0, [fp, #16]
   6eb9c:	movw	r1, #0
   6eba0:	str	r1, [r0, #4]
   6eba4:	ldr	r0, [sp, #36]	; 0x24
   6eba8:	str	r0, [fp, #-12]
   6ebac:	b	6ebbc <__assert_fail@plt+0x5c004>
   6ebb0:	b	6ebb4 <__assert_fail@plt+0x5bffc>
   6ebb4:	mvn	r0, #0
   6ebb8:	str	r0, [fp, #-12]
   6ebbc:	ldr	r0, [fp, #-12]
   6ebc0:	sub	sp, fp, #8
   6ebc4:	pop	{r4, r5, fp, pc}
   6ebc8:	push	{fp, lr}
   6ebcc:	mov	fp, sp
   6ebd0:	sub	sp, sp, #8
   6ebd4:	str	r0, [sp, #4]
   6ebd8:	ldr	r0, [sp, #4]
   6ebdc:	ldr	r0, [r0, #8]
   6ebe0:	ldr	r1, [sp, #4]
   6ebe4:	ldr	r1, [r1]
   6ebe8:	bl	6ec24 <__assert_fail@plt+0x5c06c>
   6ebec:	ldr	r0, [sp, #4]
   6ebf0:	bl	6ec38 <__assert_fail@plt+0x5c080>
   6ebf4:	ldr	r0, [sp, #4]
   6ebf8:	add	r0, r0, #12
   6ebfc:	ldr	r1, [sp, #4]
   6ec00:	str	r0, [r1, #8]
   6ec04:	ldr	r0, [sp, #4]
   6ec08:	movw	r1, #0
   6ec0c:	str	r1, [r0]
   6ec10:	bl	6ec74 <__assert_fail@plt+0x5c0bc>
   6ec14:	ldr	r1, [sp, #4]
   6ec18:	str	r0, [r1, #4]
   6ec1c:	mov	sp, fp
   6ec20:	pop	{fp, pc}
   6ec24:	sub	sp, sp, #8
   6ec28:	str	r0, [sp, #4]
   6ec2c:	str	r1, [sp]
   6ec30:	add	sp, sp, #8
   6ec34:	bx	lr
   6ec38:	push	{fp, lr}
   6ec3c:	mov	fp, sp
   6ec40:	sub	sp, sp, #8
   6ec44:	str	r0, [sp, #4]
   6ec48:	ldr	r0, [sp, #4]
   6ec4c:	ldr	r0, [r0, #8]
   6ec50:	ldr	r1, [sp, #4]
   6ec54:	add	r1, r1, #12
   6ec58:	cmp	r0, r1
   6ec5c:	beq	6ec6c <__assert_fail@plt+0x5c0b4>
   6ec60:	ldr	r0, [sp, #4]
   6ec64:	ldr	r0, [r0, #8]
   6ec68:	bl	50c68 <__assert_fail@plt+0x3e0b0>
   6ec6c:	mov	sp, fp
   6ec70:	pop	{fp, pc}
   6ec74:	mvn	r0, #0
   6ec78:	bx	lr
   6ec7c:	push	{r4, sl, fp, lr}
   6ec80:	add	fp, sp, #8
   6ec84:	sub	sp, sp, #56	; 0x38
   6ec88:	ldr	ip, [fp, #16]
   6ec8c:	ldr	lr, [fp, #12]
   6ec90:	ldr	r4, [fp, #8]
   6ec94:	str	r0, [fp, #-16]
   6ec98:	str	r1, [fp, #-20]	; 0xffffffec
   6ec9c:	str	r2, [fp, #-24]	; 0xffffffe8
   6eca0:	str	r3, [fp, #-28]	; 0xffffffe4
   6eca4:	ldr	r0, [fp, #-16]
   6eca8:	ldr	r1, [r0]
   6ecac:	add	r2, r1, #1
   6ecb0:	str	r2, [r0]
   6ecb4:	str	r1, [sp, #28]
   6ecb8:	ldr	r0, [fp, #-16]
   6ecbc:	ldr	r0, [r0]
   6ecc0:	ldr	r1, [fp, #-16]
   6ecc4:	ldr	r1, [r1, #4]
   6ecc8:	cmp	r0, r1
   6eccc:	str	r4, [sp, #20]
   6ecd0:	str	lr, [sp, #16]
   6ecd4:	str	ip, [sp, #12]
   6ecd8:	bne	6ed34 <__assert_fail@plt+0x5c17c>
   6ecdc:	ldr	r0, [fp, #-16]
   6ece0:	ldr	r1, [r0, #4]
   6ece4:	ldr	r0, [r0, #8]
   6ece8:	lsl	r1, r1, #1
   6ecec:	movw	r2, #24
   6ecf0:	mul	r1, r1, r2
   6ecf4:	bl	55a84 <__assert_fail@plt+0x42ecc>
   6ecf8:	str	r0, [sp, #24]
   6ecfc:	ldr	r0, [sp, #24]
   6ed00:	movw	r1, #0
   6ed04:	cmp	r0, r1
   6ed08:	bne	6ed18 <__assert_fail@plt+0x5c160>
   6ed0c:	movw	r0, #12
   6ed10:	str	r0, [fp, #-12]
   6ed14:	b	6ee58 <__assert_fail@plt+0x5c2a0>
   6ed18:	ldr	r0, [fp, #-16]
   6ed1c:	ldr	r1, [r0, #4]
   6ed20:	lsl	r1, r1, #1
   6ed24:	str	r1, [r0, #4]
   6ed28:	ldr	r0, [sp, #24]
   6ed2c:	ldr	r1, [fp, #-16]
   6ed30:	str	r0, [r1, #8]
   6ed34:	ldr	r0, [fp, #-20]	; 0xffffffec
   6ed38:	ldr	r1, [fp, #-16]
   6ed3c:	ldr	r1, [r1, #8]
   6ed40:	ldr	r2, [sp, #28]
   6ed44:	add	r2, r2, r2, lsl #1
   6ed48:	str	r0, [r1, r2, lsl #3]
   6ed4c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   6ed50:	ldr	r1, [fp, #-16]
   6ed54:	ldr	r1, [r1, #8]
   6ed58:	ldr	r2, [sp, #28]
   6ed5c:	add	r2, r2, r2, lsl #1
   6ed60:	add	r1, r1, r2, lsl #3
   6ed64:	str	r0, [r1, #4]
   6ed68:	ldr	r0, [fp, #-28]	; 0xffffffe4
   6ed6c:	lsl	r1, r0, #1
   6ed70:	lsl	r0, r0, #4
   6ed74:	str	r1, [sp, #8]
   6ed78:	bl	549ac <__assert_fail@plt+0x41df4>
   6ed7c:	ldr	r1, [fp, #-16]
   6ed80:	ldr	r1, [r1, #8]
   6ed84:	ldr	r2, [sp, #28]
   6ed88:	movw	lr, #24
   6ed8c:	mul	r2, r2, lr
   6ed90:	add	r1, r1, r2
   6ed94:	str	r0, [r1, #8]
   6ed98:	ldr	r0, [fp, #-16]
   6ed9c:	ldr	r0, [r0, #8]
   6eda0:	ldr	r1, [sp, #28]
   6eda4:	mul	r1, r1, lr
   6eda8:	add	r0, r0, r1
   6edac:	ldr	r0, [r0, #8]
   6edb0:	movw	r1, #0
   6edb4:	cmp	r0, r1
   6edb8:	bne	6edc8 <__assert_fail@plt+0x5c210>
   6edbc:	movw	r0, #12
   6edc0:	str	r0, [fp, #-12]
   6edc4:	b	6ee58 <__assert_fail@plt+0x5c2a0>
   6edc8:	ldr	r0, [fp, #-16]
   6edcc:	ldr	r0, [r0, #8]
   6edd0:	ldr	r1, [sp, #28]
   6edd4:	add	r1, r1, r1, lsl #1
   6edd8:	add	r0, r0, r1, lsl #3
   6eddc:	ldr	r0, [r0, #8]
   6ede0:	ldr	r1, [fp, #8]
   6ede4:	ldr	r2, [fp, #-28]	; 0xffffffe4
   6ede8:	lsl	r2, r2, #3
   6edec:	bl	125c4 <memcpy@plt>
   6edf0:	ldr	r1, [fp, #-16]
   6edf4:	ldr	r1, [r1, #8]
   6edf8:	ldr	r2, [sp, #28]
   6edfc:	add	r2, r2, r2, lsl #1
   6ee00:	add	r1, r1, r2, lsl #3
   6ee04:	ldr	r1, [r1, #8]
   6ee08:	ldr	r2, [fp, #-28]	; 0xffffffe4
   6ee0c:	add	r1, r1, r2, lsl #3
   6ee10:	lsl	r2, r2, #3
   6ee14:	ldr	lr, [fp, #12]
   6ee18:	str	r0, [sp, #4]
   6ee1c:	mov	r0, r1
   6ee20:	mov	r1, lr
   6ee24:	bl	125c4 <memcpy@plt>
   6ee28:	ldr	r0, [fp, #-16]
   6ee2c:	ldr	r0, [r0, #8]
   6ee30:	ldr	r1, [sp, #28]
   6ee34:	movw	r2, #24
   6ee38:	mul	r1, r1, r2
   6ee3c:	add	r0, r0, r1
   6ee40:	add	r0, r0, #12
   6ee44:	ldr	r1, [fp, #16]
   6ee48:	bl	6427c <__assert_fail@plt+0x516c4>
   6ee4c:	str	r0, [sp, #32]
   6ee50:	ldr	r0, [sp, #32]
   6ee54:	str	r0, [fp, #-12]
   6ee58:	ldr	r0, [fp, #-12]
   6ee5c:	sub	sp, fp, #8
   6ee60:	pop	{r4, sl, fp, pc}
   6ee64:	push	{fp, lr}
   6ee68:	mov	fp, sp
   6ee6c:	sub	sp, sp, #40	; 0x28
   6ee70:	str	r0, [fp, #-8]
   6ee74:	str	r1, [fp, #-12]
   6ee78:	ldr	r0, [fp, #-8]
   6ee7c:	str	r0, [fp, #-16]
   6ee80:	ldr	r0, [fp, #-12]
   6ee84:	str	r0, [sp, #20]
   6ee88:	movw	r0, #1
   6ee8c:	strb	r0, [sp, #11]
   6ee90:	ldr	r0, [fp, #-16]
   6ee94:	ldrb	r0, [r0]
   6ee98:	cmp	r0, #0
   6ee9c:	movw	r0, #0
   6eea0:	str	r0, [sp, #4]
   6eea4:	beq	6eec0 <__assert_fail@plt+0x5c308>
   6eea8:	ldr	r0, [sp, #20]
   6eeac:	ldrb	r0, [r0]
   6eeb0:	cmp	r0, #0
   6eeb4:	movw	r0, #0
   6eeb8:	movne	r0, #1
   6eebc:	str	r0, [sp, #4]
   6eec0:	ldr	r0, [sp, #4]
   6eec4:	tst	r0, #1
   6eec8:	beq	6ef20 <__assert_fail@plt+0x5c368>
   6eecc:	ldr	r0, [fp, #-16]
   6eed0:	add	r1, r0, #1
   6eed4:	str	r1, [fp, #-16]
   6eed8:	ldrb	r0, [r0]
   6eedc:	ldr	r1, [sp, #20]
   6eee0:	add	r2, r1, #1
   6eee4:	str	r2, [sp, #20]
   6eee8:	ldrb	r1, [r1]
   6eeec:	cmp	r0, r1
   6eef0:	movw	r0, #0
   6eef4:	moveq	r0, #1
   6eef8:	and	r0, r0, #1
   6eefc:	ldrb	r1, [sp, #11]
   6ef00:	and	r1, r1, #1
   6ef04:	and	r0, r1, r0
   6ef08:	cmp	r0, #0
   6ef0c:	movw	r0, #0
   6ef10:	movne	r0, #1
   6ef14:	and	r0, r0, #1
   6ef18:	strb	r0, [sp, #11]
   6ef1c:	b	6ee90 <__assert_fail@plt+0x5c2d8>
   6ef20:	ldr	r0, [sp, #20]
   6ef24:	ldrsb	r0, [r0]
   6ef28:	cmp	r0, #0
   6ef2c:	beq	6ef3c <__assert_fail@plt+0x5c384>
   6ef30:	movw	r0, #0
   6ef34:	str	r0, [fp, #-4]
   6ef38:	b	6f040 <__assert_fail@plt+0x5c488>
   6ef3c:	ldrb	r0, [sp, #11]
   6ef40:	tst	r0, #1
   6ef44:	beq	6ef54 <__assert_fail@plt+0x5c39c>
   6ef48:	ldr	r0, [fp, #-8]
   6ef4c:	str	r0, [fp, #-4]
   6ef50:	b	6f040 <__assert_fail@plt+0x5c488>
   6ef54:	ldr	r0, [sp, #20]
   6ef58:	ldr	r1, [fp, #-12]
   6ef5c:	sub	r0, r0, r1
   6ef60:	str	r0, [sp, #16]
   6ef64:	ldr	r0, [fp, #-8]
   6ef68:	add	r0, r0, #1
   6ef6c:	ldr	r1, [fp, #-12]
   6ef70:	ldrb	r1, [r1]
   6ef74:	bl	12894 <strchr@plt>
   6ef78:	str	r0, [fp, #-16]
   6ef7c:	ldr	r0, [fp, #-16]
   6ef80:	movw	r1, #0
   6ef84:	cmp	r0, r1
   6ef88:	beq	6ef98 <__assert_fail@plt+0x5c3e0>
   6ef8c:	ldr	r0, [sp, #16]
   6ef90:	cmp	r0, #1
   6ef94:	bne	6efa4 <__assert_fail@plt+0x5c3ec>
   6ef98:	ldr	r0, [fp, #-16]
   6ef9c:	str	r0, [fp, #-4]
   6efa0:	b	6f040 <__assert_fail@plt+0x5c488>
   6efa4:	ldr	r0, [sp, #16]
   6efa8:	ldr	r1, [sp, #20]
   6efac:	movw	r2, #0
   6efb0:	sub	r0, r2, r0
   6efb4:	add	r0, r1, r0
   6efb8:	str	r0, [sp, #20]
   6efbc:	ldr	r0, [fp, #-16]
   6efc0:	ldr	r1, [fp, #-8]
   6efc4:	ldr	r2, [sp, #16]
   6efc8:	add	r1, r1, r2
   6efcc:	cmp	r0, r1
   6efd0:	bls	6efe0 <__assert_fail@plt+0x5c428>
   6efd4:	movw	r0, #1
   6efd8:	str	r0, [sp]
   6efdc:	b	6eff8 <__assert_fail@plt+0x5c440>
   6efe0:	ldr	r0, [sp, #16]
   6efe4:	ldr	r1, [fp, #-8]
   6efe8:	add	r0, r1, r0
   6efec:	ldr	r1, [fp, #-16]
   6eff0:	sub	r0, r0, r1
   6eff4:	str	r0, [sp]
   6eff8:	ldr	r0, [sp]
   6effc:	str	r0, [sp, #12]
   6f000:	ldr	r0, [sp, #16]
   6f004:	cmp	r0, #32
   6f008:	bcs	6f028 <__assert_fail@plt+0x5c470>
   6f00c:	ldr	r0, [fp, #-16]
   6f010:	ldr	r1, [sp, #12]
   6f014:	ldr	r2, [sp, #20]
   6f018:	ldr	r3, [sp, #16]
   6f01c:	bl	6f04c <__assert_fail@plt+0x5c494>
   6f020:	str	r0, [fp, #-4]
   6f024:	b	6f040 <__assert_fail@plt+0x5c488>
   6f028:	ldr	r0, [fp, #-16]
   6f02c:	ldr	r1, [sp, #12]
   6f030:	ldr	r2, [sp, #20]
   6f034:	ldr	r3, [sp, #16]
   6f038:	bl	6f4cc <__assert_fail@plt+0x5c914>
   6f03c:	str	r0, [fp, #-4]
   6f040:	ldr	r0, [fp, #-4]
   6f044:	mov	sp, fp
   6f048:	pop	{fp, pc}
   6f04c:	push	{fp, lr}
   6f050:	mov	fp, sp
   6f054:	sub	sp, sp, #72	; 0x48
   6f058:	str	r0, [fp, #-8]
   6f05c:	str	r1, [fp, #-12]
   6f060:	str	r2, [fp, #-16]
   6f064:	str	r3, [fp, #-20]	; 0xffffffec
   6f068:	ldr	r0, [fp, #-16]
   6f06c:	ldr	r1, [fp, #-20]	; 0xffffffec
   6f070:	sub	r2, fp, #32
   6f074:	bl	6fac4 <__assert_fail@plt+0x5cf0c>
   6f078:	str	r0, [sp, #36]	; 0x24
   6f07c:	ldr	r0, [fp, #-16]
   6f080:	ldr	r1, [fp, #-16]
   6f084:	ldr	r2, [fp, #-32]	; 0xffffffe0
   6f088:	add	r1, r1, r2
   6f08c:	ldr	r2, [sp, #36]	; 0x24
   6f090:	bl	12624 <memcmp@plt>
   6f094:	cmp	r0, #0
   6f098:	bne	6f2b4 <__assert_fail@plt+0x5c6fc>
   6f09c:	movw	r0, #0
   6f0a0:	str	r0, [sp, #32]
   6f0a4:	str	r0, [fp, #-28]	; 0xffffffe4
   6f0a8:	ldr	r0, [fp, #-8]
   6f0ac:	ldr	r1, [fp, #-12]
   6f0b0:	add	r0, r0, r1
   6f0b4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   6f0b8:	ldr	r2, [fp, #-20]	; 0xffffffec
   6f0bc:	add	r1, r1, r2
   6f0c0:	ldr	r2, [fp, #-12]
   6f0c4:	sub	r2, r1, r2
   6f0c8:	mov	r1, #0
   6f0cc:	bl	1296c <memchr@plt>
   6f0d0:	movw	r1, #0
   6f0d4:	cmp	r0, r1
   6f0d8:	movw	r0, #0
   6f0dc:	str	r0, [sp, #28]
   6f0e0:	bne	6f104 <__assert_fail@plt+0x5c54c>
   6f0e4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   6f0e8:	ldr	r1, [fp, #-20]	; 0xffffffec
   6f0ec:	add	r0, r0, r1
   6f0f0:	str	r0, [fp, #-12]
   6f0f4:	cmp	r0, #0
   6f0f8:	movw	r0, #0
   6f0fc:	movne	r0, #1
   6f100:	str	r0, [sp, #28]
   6f104:	ldr	r0, [sp, #28]
   6f108:	tst	r0, #1
   6f10c:	beq	6f2b0 <__assert_fail@plt+0x5c6f8>
   6f110:	ldr	r0, [sp, #36]	; 0x24
   6f114:	ldr	r1, [sp, #32]
   6f118:	cmp	r0, r1
   6f11c:	bcs	6f12c <__assert_fail@plt+0x5c574>
   6f120:	ldr	r0, [sp, #32]
   6f124:	str	r0, [sp, #24]
   6f128:	b	6f134 <__assert_fail@plt+0x5c57c>
   6f12c:	ldr	r0, [sp, #36]	; 0x24
   6f130:	str	r0, [sp, #24]
   6f134:	ldr	r0, [sp, #24]
   6f138:	str	r0, [fp, #-24]	; 0xffffffe8
   6f13c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   6f140:	ldr	r1, [fp, #-20]	; 0xffffffec
   6f144:	cmp	r0, r1
   6f148:	movw	r0, #0
   6f14c:	str	r0, [sp, #20]
   6f150:	bcs	6f18c <__assert_fail@plt+0x5c5d4>
   6f154:	ldr	r0, [fp, #-16]
   6f158:	ldr	r1, [fp, #-24]	; 0xffffffe8
   6f15c:	add	r0, r0, r1
   6f160:	ldrb	r0, [r0]
   6f164:	ldr	r1, [fp, #-8]
   6f168:	ldr	r2, [fp, #-24]	; 0xffffffe8
   6f16c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   6f170:	add	r2, r2, r3
   6f174:	add	r1, r1, r2
   6f178:	ldrb	r1, [r1]
   6f17c:	cmp	r0, r1
   6f180:	movw	r0, #0
   6f184:	moveq	r0, #1
   6f188:	str	r0, [sp, #20]
   6f18c:	ldr	r0, [sp, #20]
   6f190:	tst	r0, #1
   6f194:	beq	6f1a8 <__assert_fail@plt+0x5c5f0>
   6f198:	ldr	r0, [fp, #-24]	; 0xffffffe8
   6f19c:	add	r0, r0, #1
   6f1a0:	str	r0, [fp, #-24]	; 0xffffffe8
   6f1a4:	b	6f13c <__assert_fail@plt+0x5c584>
   6f1a8:	ldr	r0, [fp, #-20]	; 0xffffffec
   6f1ac:	ldr	r1, [fp, #-24]	; 0xffffffe8
   6f1b0:	cmp	r0, r1
   6f1b4:	bhi	6f288 <__assert_fail@plt+0x5c6d0>
   6f1b8:	ldr	r0, [sp, #36]	; 0x24
   6f1bc:	sub	r0, r0, #1
   6f1c0:	str	r0, [fp, #-24]	; 0xffffffe8
   6f1c4:	ldr	r0, [sp, #32]
   6f1c8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   6f1cc:	add	r1, r1, #1
   6f1d0:	cmp	r0, r1
   6f1d4:	movw	r0, #0
   6f1d8:	str	r0, [sp, #16]
   6f1dc:	bcs	6f218 <__assert_fail@plt+0x5c660>
   6f1e0:	ldr	r0, [fp, #-16]
   6f1e4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   6f1e8:	add	r0, r0, r1
   6f1ec:	ldrb	r0, [r0]
   6f1f0:	ldr	r1, [fp, #-8]
   6f1f4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   6f1f8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   6f1fc:	add	r2, r2, r3
   6f200:	add	r1, r1, r2
   6f204:	ldrb	r1, [r1]
   6f208:	cmp	r0, r1
   6f20c:	movw	r0, #0
   6f210:	moveq	r0, #1
   6f214:	str	r0, [sp, #16]
   6f218:	ldr	r0, [sp, #16]
   6f21c:	tst	r0, #1
   6f220:	beq	6f238 <__assert_fail@plt+0x5c680>
   6f224:	ldr	r0, [fp, #-24]	; 0xffffffe8
   6f228:	mvn	r1, #0
   6f22c:	add	r0, r0, r1
   6f230:	str	r0, [fp, #-24]	; 0xffffffe8
   6f234:	b	6f1c4 <__assert_fail@plt+0x5c60c>
   6f238:	ldr	r0, [fp, #-24]	; 0xffffffe8
   6f23c:	add	r0, r0, #1
   6f240:	ldr	r1, [sp, #32]
   6f244:	add	r1, r1, #1
   6f248:	cmp	r0, r1
   6f24c:	bcs	6f264 <__assert_fail@plt+0x5c6ac>
   6f250:	ldr	r0, [fp, #-8]
   6f254:	ldr	r1, [fp, #-28]	; 0xffffffe4
   6f258:	add	r0, r0, r1
   6f25c:	str	r0, [fp, #-4]
   6f260:	b	6f4c0 <__assert_fail@plt+0x5c908>
   6f264:	ldr	r0, [fp, #-32]	; 0xffffffe0
   6f268:	ldr	r1, [fp, #-28]	; 0xffffffe4
   6f26c:	add	r0, r1, r0
   6f270:	str	r0, [fp, #-28]	; 0xffffffe4
   6f274:	ldr	r0, [fp, #-20]	; 0xffffffec
   6f278:	ldr	r1, [fp, #-32]	; 0xffffffe0
   6f27c:	sub	r0, r0, r1
   6f280:	str	r0, [sp, #32]
   6f284:	b	6f2ac <__assert_fail@plt+0x5c6f4>
   6f288:	ldr	r0, [fp, #-24]	; 0xffffffe8
   6f28c:	ldr	r1, [sp, #36]	; 0x24
   6f290:	sub	r0, r0, r1
   6f294:	add	r0, r0, #1
   6f298:	ldr	r1, [fp, #-28]	; 0xffffffe4
   6f29c:	add	r0, r1, r0
   6f2a0:	str	r0, [fp, #-28]	; 0xffffffe4
   6f2a4:	movw	r0, #0
   6f2a8:	str	r0, [sp, #32]
   6f2ac:	b	6f0a8 <__assert_fail@plt+0x5c4f0>
   6f2b0:	b	6f4b8 <__assert_fail@plt+0x5c900>
   6f2b4:	ldr	r0, [sp, #36]	; 0x24
   6f2b8:	ldr	r1, [fp, #-20]	; 0xffffffec
   6f2bc:	ldr	r2, [sp, #36]	; 0x24
   6f2c0:	sub	r1, r1, r2
   6f2c4:	cmp	r0, r1
   6f2c8:	bcs	6f2e0 <__assert_fail@plt+0x5c728>
   6f2cc:	ldr	r0, [fp, #-20]	; 0xffffffec
   6f2d0:	ldr	r1, [sp, #36]	; 0x24
   6f2d4:	sub	r0, r0, r1
   6f2d8:	str	r0, [sp, #12]
   6f2dc:	b	6f2e8 <__assert_fail@plt+0x5c730>
   6f2e0:	ldr	r0, [sp, #36]	; 0x24
   6f2e4:	str	r0, [sp, #12]
   6f2e8:	ldr	r0, [sp, #12]
   6f2ec:	add	r0, r0, #1
   6f2f0:	str	r0, [fp, #-32]	; 0xffffffe0
   6f2f4:	movw	r0, #0
   6f2f8:	str	r0, [fp, #-28]	; 0xffffffe4
   6f2fc:	ldr	r0, [fp, #-8]
   6f300:	ldr	r1, [fp, #-12]
   6f304:	add	r0, r0, r1
   6f308:	ldr	r1, [fp, #-28]	; 0xffffffe4
   6f30c:	ldr	r2, [fp, #-20]	; 0xffffffec
   6f310:	add	r1, r1, r2
   6f314:	ldr	r2, [fp, #-12]
   6f318:	sub	r2, r1, r2
   6f31c:	mov	r1, #0
   6f320:	bl	1296c <memchr@plt>
   6f324:	movw	r1, #0
   6f328:	cmp	r0, r1
   6f32c:	movw	r0, #0
   6f330:	str	r0, [sp, #8]
   6f334:	bne	6f358 <__assert_fail@plt+0x5c7a0>
   6f338:	ldr	r0, [fp, #-28]	; 0xffffffe4
   6f33c:	ldr	r1, [fp, #-20]	; 0xffffffec
   6f340:	add	r0, r0, r1
   6f344:	str	r0, [fp, #-12]
   6f348:	cmp	r0, #0
   6f34c:	movw	r0, #0
   6f350:	movne	r0, #1
   6f354:	str	r0, [sp, #8]
   6f358:	ldr	r0, [sp, #8]
   6f35c:	tst	r0, #1
   6f360:	beq	6f4b4 <__assert_fail@plt+0x5c8fc>
   6f364:	ldr	r0, [sp, #36]	; 0x24
   6f368:	str	r0, [fp, #-24]	; 0xffffffe8
   6f36c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   6f370:	ldr	r1, [fp, #-20]	; 0xffffffec
   6f374:	cmp	r0, r1
   6f378:	movw	r0, #0
   6f37c:	str	r0, [sp, #4]
   6f380:	bcs	6f3bc <__assert_fail@plt+0x5c804>
   6f384:	ldr	r0, [fp, #-16]
   6f388:	ldr	r1, [fp, #-24]	; 0xffffffe8
   6f38c:	add	r0, r0, r1
   6f390:	ldrb	r0, [r0]
   6f394:	ldr	r1, [fp, #-8]
   6f398:	ldr	r2, [fp, #-24]	; 0xffffffe8
   6f39c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   6f3a0:	add	r2, r2, r3
   6f3a4:	add	r1, r1, r2
   6f3a8:	ldrb	r1, [r1]
   6f3ac:	cmp	r0, r1
   6f3b0:	movw	r0, #0
   6f3b4:	moveq	r0, #1
   6f3b8:	str	r0, [sp, #4]
   6f3bc:	ldr	r0, [sp, #4]
   6f3c0:	tst	r0, #1
   6f3c4:	beq	6f3d8 <__assert_fail@plt+0x5c820>
   6f3c8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   6f3cc:	add	r0, r0, #1
   6f3d0:	str	r0, [fp, #-24]	; 0xffffffe8
   6f3d4:	b	6f36c <__assert_fail@plt+0x5c7b4>
   6f3d8:	ldr	r0, [fp, #-20]	; 0xffffffec
   6f3dc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   6f3e0:	cmp	r0, r1
   6f3e4:	bhi	6f494 <__assert_fail@plt+0x5c8dc>
   6f3e8:	ldr	r0, [sp, #36]	; 0x24
   6f3ec:	sub	r0, r0, #1
   6f3f0:	str	r0, [fp, #-24]	; 0xffffffe8
   6f3f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   6f3f8:	cmn	r0, #1
   6f3fc:	movw	r0, #0
   6f400:	str	r0, [sp]
   6f404:	beq	6f440 <__assert_fail@plt+0x5c888>
   6f408:	ldr	r0, [fp, #-16]
   6f40c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   6f410:	add	r0, r0, r1
   6f414:	ldrb	r0, [r0]
   6f418:	ldr	r1, [fp, #-8]
   6f41c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   6f420:	ldr	r3, [fp, #-28]	; 0xffffffe4
   6f424:	add	r2, r2, r3
   6f428:	add	r1, r1, r2
   6f42c:	ldrb	r1, [r1]
   6f430:	cmp	r0, r1
   6f434:	movw	r0, #0
   6f438:	moveq	r0, #1
   6f43c:	str	r0, [sp]
   6f440:	ldr	r0, [sp]
   6f444:	tst	r0, #1
   6f448:	beq	6f460 <__assert_fail@plt+0x5c8a8>
   6f44c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   6f450:	mvn	r1, #0
   6f454:	add	r0, r0, r1
   6f458:	str	r0, [fp, #-24]	; 0xffffffe8
   6f45c:	b	6f3f4 <__assert_fail@plt+0x5c83c>
   6f460:	ldr	r0, [fp, #-24]	; 0xffffffe8
   6f464:	cmn	r0, #1
   6f468:	bne	6f480 <__assert_fail@plt+0x5c8c8>
   6f46c:	ldr	r0, [fp, #-8]
   6f470:	ldr	r1, [fp, #-28]	; 0xffffffe4
   6f474:	add	r0, r0, r1
   6f478:	str	r0, [fp, #-4]
   6f47c:	b	6f4c0 <__assert_fail@plt+0x5c908>
   6f480:	ldr	r0, [fp, #-32]	; 0xffffffe0
   6f484:	ldr	r1, [fp, #-28]	; 0xffffffe4
   6f488:	add	r0, r1, r0
   6f48c:	str	r0, [fp, #-28]	; 0xffffffe4
   6f490:	b	6f4b0 <__assert_fail@plt+0x5c8f8>
   6f494:	ldr	r0, [fp, #-24]	; 0xffffffe8
   6f498:	ldr	r1, [sp, #36]	; 0x24
   6f49c:	sub	r0, r0, r1
   6f4a0:	add	r0, r0, #1
   6f4a4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   6f4a8:	add	r0, r1, r0
   6f4ac:	str	r0, [fp, #-28]	; 0xffffffe4
   6f4b0:	b	6f2fc <__assert_fail@plt+0x5c744>
   6f4b4:	b	6f4b8 <__assert_fail@plt+0x5c900>
   6f4b8:	movw	r0, #0
   6f4bc:	str	r0, [fp, #-4]
   6f4c0:	ldr	r0, [fp, #-4]
   6f4c4:	mov	sp, fp
   6f4c8:	pop	{fp, pc}
   6f4cc:	push	{r4, r5, fp, lr}
   6f4d0:	add	fp, sp, #8
   6f4d4:	sub	sp, sp, #1120	; 0x460
   6f4d8:	str	r0, [fp, #-16]
   6f4dc:	str	r1, [fp, #-20]	; 0xffffffec
   6f4e0:	str	r2, [fp, #-24]	; 0xffffffe8
   6f4e4:	str	r3, [fp, #-28]	; 0xffffffe4
   6f4e8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   6f4ec:	ldr	r1, [fp, #-28]	; 0xffffffe4
   6f4f0:	sub	r2, fp, #40	; 0x28
   6f4f4:	bl	6fac4 <__assert_fail@plt+0x5cf0c>
   6f4f8:	str	r0, [fp, #-44]	; 0xffffffd4
   6f4fc:	movw	r0, #0
   6f500:	str	r0, [fp, #-32]	; 0xffffffe0
   6f504:	ldr	r0, [fp, #-32]	; 0xffffffe0
   6f508:	cmp	r0, #256	; 0x100
   6f50c:	bcs	6f534 <__assert_fail@plt+0x5c97c>
   6f510:	ldr	r0, [fp, #-28]	; 0xffffffe4
   6f514:	ldr	r1, [fp, #-32]	; 0xffffffe0
   6f518:	add	r2, sp, #60	; 0x3c
   6f51c:	add	r1, r2, r1, lsl #2
   6f520:	str	r0, [r1]
   6f524:	ldr	r0, [fp, #-32]	; 0xffffffe0
   6f528:	add	r0, r0, #1
   6f52c:	str	r0, [fp, #-32]	; 0xffffffe0
   6f530:	b	6f504 <__assert_fail@plt+0x5c94c>
   6f534:	movw	r0, #0
   6f538:	str	r0, [fp, #-32]	; 0xffffffe0
   6f53c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   6f540:	ldr	r1, [fp, #-28]	; 0xffffffe4
   6f544:	cmp	r0, r1
   6f548:	bcs	6f588 <__assert_fail@plt+0x5c9d0>
   6f54c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   6f550:	ldr	r1, [fp, #-32]	; 0xffffffe0
   6f554:	sub	r0, r0, r1
   6f558:	sub	r0, r0, #1
   6f55c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   6f560:	ldrb	r1, [r2, r1]
   6f564:	mov	r2, r1
   6f568:	add	r3, sp, #60	; 0x3c
   6f56c:	add	r1, r3, r1, lsl #2
   6f570:	str	r0, [r1]
   6f574:	str	r2, [sp, #44]	; 0x2c
   6f578:	ldr	r0, [fp, #-32]	; 0xffffffe0
   6f57c:	add	r0, r0, #1
   6f580:	str	r0, [fp, #-32]	; 0xffffffe0
   6f584:	b	6f53c <__assert_fail@plt+0x5c984>
   6f588:	ldr	r0, [fp, #-24]	; 0xffffffe8
   6f58c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   6f590:	ldr	r2, [fp, #-40]	; 0xffffffd8
   6f594:	add	r1, r1, r2
   6f598:	ldr	r2, [fp, #-44]	; 0xffffffd4
   6f59c:	bl	12624 <memcmp@plt>
   6f5a0:	cmp	r0, #0
   6f5a4:	bne	6f850 <__assert_fail@plt+0x5cc98>
   6f5a8:	movw	r0, #0
   6f5ac:	str	r0, [sp, #56]	; 0x38
   6f5b0:	str	r0, [fp, #-36]	; 0xffffffdc
   6f5b4:	ldr	r0, [fp, #-16]
   6f5b8:	ldr	r1, [fp, #-20]	; 0xffffffec
   6f5bc:	add	r0, r0, r1
   6f5c0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   6f5c4:	ldr	r2, [fp, #-28]	; 0xffffffe4
   6f5c8:	add	r1, r1, r2
   6f5cc:	ldr	r2, [fp, #-20]	; 0xffffffec
   6f5d0:	sub	r2, r1, r2
   6f5d4:	mov	r1, #0
   6f5d8:	bl	1296c <memchr@plt>
   6f5dc:	movw	r1, #0
   6f5e0:	cmp	r0, r1
   6f5e4:	movw	r0, #0
   6f5e8:	str	r0, [sp, #40]	; 0x28
   6f5ec:	bne	6f610 <__assert_fail@plt+0x5ca58>
   6f5f0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   6f5f4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   6f5f8:	add	r0, r0, r1
   6f5fc:	str	r0, [fp, #-20]	; 0xffffffec
   6f600:	cmp	r0, #0
   6f604:	movw	r0, #0
   6f608:	movne	r0, #1
   6f60c:	str	r0, [sp, #40]	; 0x28
   6f610:	ldr	r0, [sp, #40]	; 0x28
   6f614:	tst	r0, #1
   6f618:	beq	6f84c <__assert_fail@plt+0x5cc94>
   6f61c:	ldr	r0, [fp, #-16]
   6f620:	ldr	r1, [fp, #-36]	; 0xffffffdc
   6f624:	ldr	r2, [fp, #-28]	; 0xffffffe4
   6f628:	add	r1, r1, r2
   6f62c:	add	r0, r0, r1
   6f630:	ldrb	r0, [r0, #-1]
   6f634:	mov	r1, r0
   6f638:	add	r2, sp, #60	; 0x3c
   6f63c:	add	r0, r2, r0, lsl #2
   6f640:	ldr	r0, [r0]
   6f644:	str	r0, [sp, #52]	; 0x34
   6f648:	ldr	r0, [sp, #52]	; 0x34
   6f64c:	movw	r2, #0
   6f650:	cmp	r2, r0
   6f654:	str	r1, [sp, #36]	; 0x24
   6f658:	bcs	6f6a4 <__assert_fail@plt+0x5caec>
   6f65c:	ldr	r0, [sp, #56]	; 0x38
   6f660:	cmp	r0, #0
   6f664:	beq	6f688 <__assert_fail@plt+0x5cad0>
   6f668:	ldr	r0, [sp, #52]	; 0x34
   6f66c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   6f670:	cmp	r0, r1
   6f674:	bcs	6f688 <__assert_fail@plt+0x5cad0>
   6f678:	ldr	r0, [fp, #-28]	; 0xffffffe4
   6f67c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   6f680:	sub	r0, r0, r1
   6f684:	str	r0, [sp, #52]	; 0x34
   6f688:	movw	r0, #0
   6f68c:	str	r0, [sp, #56]	; 0x38
   6f690:	ldr	r0, [sp, #52]	; 0x34
   6f694:	ldr	r1, [fp, #-36]	; 0xffffffdc
   6f698:	add	r0, r1, r0
   6f69c:	str	r0, [fp, #-36]	; 0xffffffdc
   6f6a0:	b	6f5b4 <__assert_fail@plt+0x5c9fc>
   6f6a4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   6f6a8:	ldr	r1, [sp, #56]	; 0x38
   6f6ac:	cmp	r0, r1
   6f6b0:	bcs	6f6c0 <__assert_fail@plt+0x5cb08>
   6f6b4:	ldr	r0, [sp, #56]	; 0x38
   6f6b8:	str	r0, [sp, #32]
   6f6bc:	b	6f6c8 <__assert_fail@plt+0x5cb10>
   6f6c0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   6f6c4:	str	r0, [sp, #32]
   6f6c8:	ldr	r0, [sp, #32]
   6f6cc:	str	r0, [fp, #-32]	; 0xffffffe0
   6f6d0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   6f6d4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   6f6d8:	sub	r1, r1, #1
   6f6dc:	cmp	r0, r1
   6f6e0:	movw	r0, #0
   6f6e4:	str	r0, [sp, #28]
   6f6e8:	bcs	6f724 <__assert_fail@plt+0x5cb6c>
   6f6ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   6f6f0:	ldr	r1, [fp, #-32]	; 0xffffffe0
   6f6f4:	add	r0, r0, r1
   6f6f8:	ldrb	r0, [r0]
   6f6fc:	ldr	r1, [fp, #-16]
   6f700:	ldr	r2, [fp, #-32]	; 0xffffffe0
   6f704:	ldr	r3, [fp, #-36]	; 0xffffffdc
   6f708:	add	r2, r2, r3
   6f70c:	add	r1, r1, r2
   6f710:	ldrb	r1, [r1]
   6f714:	cmp	r0, r1
   6f718:	movw	r0, #0
   6f71c:	moveq	r0, #1
   6f720:	str	r0, [sp, #28]
   6f724:	ldr	r0, [sp, #28]
   6f728:	tst	r0, #1
   6f72c:	beq	6f740 <__assert_fail@plt+0x5cb88>
   6f730:	ldr	r0, [fp, #-32]	; 0xffffffe0
   6f734:	add	r0, r0, #1
   6f738:	str	r0, [fp, #-32]	; 0xffffffe0
   6f73c:	b	6f6d0 <__assert_fail@plt+0x5cb18>
   6f740:	ldr	r0, [fp, #-28]	; 0xffffffe4
   6f744:	sub	r0, r0, #1
   6f748:	ldr	r1, [fp, #-32]	; 0xffffffe0
   6f74c:	cmp	r0, r1
   6f750:	bhi	6f824 <__assert_fail@plt+0x5cc6c>
   6f754:	ldr	r0, [fp, #-44]	; 0xffffffd4
   6f758:	sub	r0, r0, #1
   6f75c:	str	r0, [fp, #-32]	; 0xffffffe0
   6f760:	ldr	r0, [sp, #56]	; 0x38
   6f764:	ldr	r1, [fp, #-32]	; 0xffffffe0
   6f768:	add	r1, r1, #1
   6f76c:	cmp	r0, r1
   6f770:	movw	r0, #0
   6f774:	str	r0, [sp, #24]
   6f778:	bcs	6f7b4 <__assert_fail@plt+0x5cbfc>
   6f77c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   6f780:	ldr	r1, [fp, #-32]	; 0xffffffe0
   6f784:	add	r0, r0, r1
   6f788:	ldrb	r0, [r0]
   6f78c:	ldr	r1, [fp, #-16]
   6f790:	ldr	r2, [fp, #-32]	; 0xffffffe0
   6f794:	ldr	r3, [fp, #-36]	; 0xffffffdc
   6f798:	add	r2, r2, r3
   6f79c:	add	r1, r1, r2
   6f7a0:	ldrb	r1, [r1]
   6f7a4:	cmp	r0, r1
   6f7a8:	movw	r0, #0
   6f7ac:	moveq	r0, #1
   6f7b0:	str	r0, [sp, #24]
   6f7b4:	ldr	r0, [sp, #24]
   6f7b8:	tst	r0, #1
   6f7bc:	beq	6f7d4 <__assert_fail@plt+0x5cc1c>
   6f7c0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   6f7c4:	mvn	r1, #0
   6f7c8:	add	r0, r0, r1
   6f7cc:	str	r0, [fp, #-32]	; 0xffffffe0
   6f7d0:	b	6f760 <__assert_fail@plt+0x5cba8>
   6f7d4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   6f7d8:	add	r0, r0, #1
   6f7dc:	ldr	r1, [sp, #56]	; 0x38
   6f7e0:	add	r1, r1, #1
   6f7e4:	cmp	r0, r1
   6f7e8:	bcs	6f800 <__assert_fail@plt+0x5cc48>
   6f7ec:	ldr	r0, [fp, #-16]
   6f7f0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   6f7f4:	add	r0, r0, r1
   6f7f8:	str	r0, [fp, #-12]
   6f7fc:	b	6fab8 <__assert_fail@plt+0x5cf00>
   6f800:	ldr	r0, [fp, #-40]	; 0xffffffd8
   6f804:	ldr	r1, [fp, #-36]	; 0xffffffdc
   6f808:	add	r0, r1, r0
   6f80c:	str	r0, [fp, #-36]	; 0xffffffdc
   6f810:	ldr	r0, [fp, #-28]	; 0xffffffe4
   6f814:	ldr	r1, [fp, #-40]	; 0xffffffd8
   6f818:	sub	r0, r0, r1
   6f81c:	str	r0, [sp, #56]	; 0x38
   6f820:	b	6f848 <__assert_fail@plt+0x5cc90>
   6f824:	ldr	r0, [fp, #-32]	; 0xffffffe0
   6f828:	ldr	r1, [fp, #-44]	; 0xffffffd4
   6f82c:	sub	r0, r0, r1
   6f830:	add	r0, r0, #1
   6f834:	ldr	r1, [fp, #-36]	; 0xffffffdc
   6f838:	add	r0, r1, r0
   6f83c:	str	r0, [fp, #-36]	; 0xffffffdc
   6f840:	movw	r0, #0
   6f844:	str	r0, [sp, #56]	; 0x38
   6f848:	b	6f5b4 <__assert_fail@plt+0x5c9fc>
   6f84c:	b	6fab0 <__assert_fail@plt+0x5cef8>
   6f850:	ldr	r0, [fp, #-44]	; 0xffffffd4
   6f854:	ldr	r1, [fp, #-28]	; 0xffffffe4
   6f858:	ldr	r2, [fp, #-44]	; 0xffffffd4
   6f85c:	sub	r1, r1, r2
   6f860:	cmp	r0, r1
   6f864:	bcs	6f87c <__assert_fail@plt+0x5ccc4>
   6f868:	ldr	r0, [fp, #-28]	; 0xffffffe4
   6f86c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   6f870:	sub	r0, r0, r1
   6f874:	str	r0, [sp, #20]
   6f878:	b	6f884 <__assert_fail@plt+0x5cccc>
   6f87c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   6f880:	str	r0, [sp, #20]
   6f884:	ldr	r0, [sp, #20]
   6f888:	add	r0, r0, #1
   6f88c:	str	r0, [fp, #-40]	; 0xffffffd8
   6f890:	movw	r0, #0
   6f894:	str	r0, [fp, #-36]	; 0xffffffdc
   6f898:	ldr	r0, [fp, #-16]
   6f89c:	ldr	r1, [fp, #-20]	; 0xffffffec
   6f8a0:	add	r0, r0, r1
   6f8a4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   6f8a8:	ldr	r2, [fp, #-28]	; 0xffffffe4
   6f8ac:	add	r1, r1, r2
   6f8b0:	ldr	r2, [fp, #-20]	; 0xffffffec
   6f8b4:	sub	r2, r1, r2
   6f8b8:	mov	r1, #0
   6f8bc:	bl	1296c <memchr@plt>
   6f8c0:	movw	r1, #0
   6f8c4:	cmp	r0, r1
   6f8c8:	movw	r0, #0
   6f8cc:	str	r0, [sp, #16]
   6f8d0:	bne	6f8f4 <__assert_fail@plt+0x5cd3c>
   6f8d4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   6f8d8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   6f8dc:	add	r0, r0, r1
   6f8e0:	str	r0, [fp, #-20]	; 0xffffffec
   6f8e4:	cmp	r0, #0
   6f8e8:	movw	r0, #0
   6f8ec:	movne	r0, #1
   6f8f0:	str	r0, [sp, #16]
   6f8f4:	ldr	r0, [sp, #16]
   6f8f8:	tst	r0, #1
   6f8fc:	beq	6faac <__assert_fail@plt+0x5cef4>
   6f900:	ldr	r0, [fp, #-16]
   6f904:	ldr	r1, [fp, #-36]	; 0xffffffdc
   6f908:	ldr	r2, [fp, #-28]	; 0xffffffe4
   6f90c:	add	r1, r1, r2
   6f910:	add	r0, r0, r1
   6f914:	ldrb	r0, [r0, #-1]
   6f918:	mov	r1, r0
   6f91c:	add	r2, sp, #60	; 0x3c
   6f920:	add	r0, r2, r0, lsl #2
   6f924:	ldr	r0, [r0]
   6f928:	str	r0, [sp, #48]	; 0x30
   6f92c:	ldr	r0, [sp, #48]	; 0x30
   6f930:	movw	r2, #0
   6f934:	cmp	r2, r0
   6f938:	str	r1, [sp, #12]
   6f93c:	bcs	6f954 <__assert_fail@plt+0x5cd9c>
   6f940:	ldr	r0, [sp, #48]	; 0x30
   6f944:	ldr	r1, [fp, #-36]	; 0xffffffdc
   6f948:	add	r0, r1, r0
   6f94c:	str	r0, [fp, #-36]	; 0xffffffdc
   6f950:	b	6f898 <__assert_fail@plt+0x5cce0>
   6f954:	ldr	r0, [fp, #-44]	; 0xffffffd4
   6f958:	str	r0, [fp, #-32]	; 0xffffffe0
   6f95c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   6f960:	ldr	r1, [fp, #-28]	; 0xffffffe4
   6f964:	sub	r1, r1, #1
   6f968:	cmp	r0, r1
   6f96c:	movw	r0, #0
   6f970:	str	r0, [sp, #8]
   6f974:	bcs	6f9b0 <__assert_fail@plt+0x5cdf8>
   6f978:	ldr	r0, [fp, #-24]	; 0xffffffe8
   6f97c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   6f980:	add	r0, r0, r1
   6f984:	ldrb	r0, [r0]
   6f988:	ldr	r1, [fp, #-16]
   6f98c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   6f990:	ldr	r3, [fp, #-36]	; 0xffffffdc
   6f994:	add	r2, r2, r3
   6f998:	add	r1, r1, r2
   6f99c:	ldrb	r1, [r1]
   6f9a0:	cmp	r0, r1
   6f9a4:	movw	r0, #0
   6f9a8:	moveq	r0, #1
   6f9ac:	str	r0, [sp, #8]
   6f9b0:	ldr	r0, [sp, #8]
   6f9b4:	tst	r0, #1
   6f9b8:	beq	6f9cc <__assert_fail@plt+0x5ce14>
   6f9bc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   6f9c0:	add	r0, r0, #1
   6f9c4:	str	r0, [fp, #-32]	; 0xffffffe0
   6f9c8:	b	6f95c <__assert_fail@plt+0x5cda4>
   6f9cc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   6f9d0:	sub	r0, r0, #1
   6f9d4:	ldr	r1, [fp, #-32]	; 0xffffffe0
   6f9d8:	cmp	r0, r1
   6f9dc:	bhi	6fa8c <__assert_fail@plt+0x5ced4>
   6f9e0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   6f9e4:	sub	r0, r0, #1
   6f9e8:	str	r0, [fp, #-32]	; 0xffffffe0
   6f9ec:	ldr	r0, [fp, #-32]	; 0xffffffe0
   6f9f0:	cmn	r0, #1
   6f9f4:	movw	r0, #0
   6f9f8:	str	r0, [sp, #4]
   6f9fc:	beq	6fa38 <__assert_fail@plt+0x5ce80>
   6fa00:	ldr	r0, [fp, #-24]	; 0xffffffe8
   6fa04:	ldr	r1, [fp, #-32]	; 0xffffffe0
   6fa08:	add	r0, r0, r1
   6fa0c:	ldrb	r0, [r0]
   6fa10:	ldr	r1, [fp, #-16]
   6fa14:	ldr	r2, [fp, #-32]	; 0xffffffe0
   6fa18:	ldr	r3, [fp, #-36]	; 0xffffffdc
   6fa1c:	add	r2, r2, r3
   6fa20:	add	r1, r1, r2
   6fa24:	ldrb	r1, [r1]
   6fa28:	cmp	r0, r1
   6fa2c:	movw	r0, #0
   6fa30:	moveq	r0, #1
   6fa34:	str	r0, [sp, #4]
   6fa38:	ldr	r0, [sp, #4]
   6fa3c:	tst	r0, #1
   6fa40:	beq	6fa58 <__assert_fail@plt+0x5cea0>
   6fa44:	ldr	r0, [fp, #-32]	; 0xffffffe0
   6fa48:	mvn	r1, #0
   6fa4c:	add	r0, r0, r1
   6fa50:	str	r0, [fp, #-32]	; 0xffffffe0
   6fa54:	b	6f9ec <__assert_fail@plt+0x5ce34>
   6fa58:	ldr	r0, [fp, #-32]	; 0xffffffe0
   6fa5c:	cmn	r0, #1
   6fa60:	bne	6fa78 <__assert_fail@plt+0x5cec0>
   6fa64:	ldr	r0, [fp, #-16]
   6fa68:	ldr	r1, [fp, #-36]	; 0xffffffdc
   6fa6c:	add	r0, r0, r1
   6fa70:	str	r0, [fp, #-12]
   6fa74:	b	6fab8 <__assert_fail@plt+0x5cf00>
   6fa78:	ldr	r0, [fp, #-40]	; 0xffffffd8
   6fa7c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   6fa80:	add	r0, r1, r0
   6fa84:	str	r0, [fp, #-36]	; 0xffffffdc
   6fa88:	b	6faa8 <__assert_fail@plt+0x5cef0>
   6fa8c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   6fa90:	ldr	r1, [fp, #-44]	; 0xffffffd4
   6fa94:	sub	r0, r0, r1
   6fa98:	add	r0, r0, #1
   6fa9c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   6faa0:	add	r0, r1, r0
   6faa4:	str	r0, [fp, #-36]	; 0xffffffdc
   6faa8:	b	6f898 <__assert_fail@plt+0x5cce0>
   6faac:	b	6fab0 <__assert_fail@plt+0x5cef8>
   6fab0:	movw	r0, #0
   6fab4:	str	r0, [fp, #-12]
   6fab8:	ldr	r0, [fp, #-12]
   6fabc:	sub	sp, fp, #8
   6fac0:	pop	{r4, r5, fp, pc}
   6fac4:	sub	sp, sp, #40	; 0x28
   6fac8:	str	r0, [sp, #32]
   6facc:	str	r1, [sp, #28]
   6fad0:	str	r2, [sp, #24]
   6fad4:	ldr	r0, [sp, #28]
   6fad8:	cmp	r0, #3
   6fadc:	bcs	6fafc <__assert_fail@plt+0x5cf44>
   6fae0:	ldr	r0, [sp, #24]
   6fae4:	movw	r1, #1
   6fae8:	str	r1, [r0]
   6faec:	ldr	r0, [sp, #28]
   6faf0:	sub	r0, r0, #1
   6faf4:	str	r0, [sp, #36]	; 0x24
   6faf8:	b	6fd78 <__assert_fail@plt+0x5d1c0>
   6fafc:	mvn	r0, #0
   6fb00:	str	r0, [sp, #20]
   6fb04:	movw	r0, #0
   6fb08:	str	r0, [sp, #12]
   6fb0c:	movw	r0, #1
   6fb10:	str	r0, [sp, #4]
   6fb14:	str	r0, [sp, #8]
   6fb18:	ldr	r0, [sp, #12]
   6fb1c:	ldr	r1, [sp, #8]
   6fb20:	add	r0, r0, r1
   6fb24:	ldr	r1, [sp, #28]
   6fb28:	cmp	r0, r1
   6fb2c:	bcs	6fc14 <__assert_fail@plt+0x5d05c>
   6fb30:	ldr	r0, [sp, #32]
   6fb34:	ldr	r1, [sp, #12]
   6fb38:	ldr	r2, [sp, #8]
   6fb3c:	add	r1, r1, r2
   6fb40:	add	r0, r0, r1
   6fb44:	ldrb	r0, [r0]
   6fb48:	strb	r0, [sp, #3]
   6fb4c:	ldr	r0, [sp, #32]
   6fb50:	ldr	r1, [sp, #20]
   6fb54:	ldr	r2, [sp, #8]
   6fb58:	add	r1, r1, r2
   6fb5c:	add	r0, r0, r1
   6fb60:	ldrb	r0, [r0]
   6fb64:	strb	r0, [sp, #2]
   6fb68:	ldrb	r0, [sp, #3]
   6fb6c:	ldrb	r1, [sp, #2]
   6fb70:	cmp	r0, r1
   6fb74:	bge	6fba4 <__assert_fail@plt+0x5cfec>
   6fb78:	ldr	r0, [sp, #8]
   6fb7c:	ldr	r1, [sp, #12]
   6fb80:	add	r0, r1, r0
   6fb84:	str	r0, [sp, #12]
   6fb88:	movw	r0, #1
   6fb8c:	str	r0, [sp, #8]
   6fb90:	ldr	r0, [sp, #12]
   6fb94:	ldr	r1, [sp, #20]
   6fb98:	sub	r0, r0, r1
   6fb9c:	str	r0, [sp, #4]
   6fba0:	b	6fc10 <__assert_fail@plt+0x5d058>
   6fba4:	ldrb	r0, [sp, #3]
   6fba8:	ldrb	r1, [sp, #2]
   6fbac:	cmp	r0, r1
   6fbb0:	bne	6fbf0 <__assert_fail@plt+0x5d038>
   6fbb4:	ldr	r0, [sp, #8]
   6fbb8:	ldr	r1, [sp, #4]
   6fbbc:	cmp	r0, r1
   6fbc0:	beq	6fbd4 <__assert_fail@plt+0x5d01c>
   6fbc4:	ldr	r0, [sp, #8]
   6fbc8:	add	r0, r0, #1
   6fbcc:	str	r0, [sp, #8]
   6fbd0:	b	6fbec <__assert_fail@plt+0x5d034>
   6fbd4:	ldr	r0, [sp, #4]
   6fbd8:	ldr	r1, [sp, #12]
   6fbdc:	add	r0, r1, r0
   6fbe0:	str	r0, [sp, #12]
   6fbe4:	movw	r0, #1
   6fbe8:	str	r0, [sp, #8]
   6fbec:	b	6fc0c <__assert_fail@plt+0x5d054>
   6fbf0:	ldr	r0, [sp, #12]
   6fbf4:	add	r1, r0, #1
   6fbf8:	str	r1, [sp, #12]
   6fbfc:	str	r0, [sp, #20]
   6fc00:	movw	r0, #1
   6fc04:	str	r0, [sp, #4]
   6fc08:	str	r0, [sp, #8]
   6fc0c:	b	6fc10 <__assert_fail@plt+0x5d058>
   6fc10:	b	6fb18 <__assert_fail@plt+0x5cf60>
   6fc14:	ldr	r0, [sp, #4]
   6fc18:	ldr	r1, [sp, #24]
   6fc1c:	str	r0, [r1]
   6fc20:	mvn	r0, #0
   6fc24:	str	r0, [sp, #16]
   6fc28:	movw	r0, #0
   6fc2c:	str	r0, [sp, #12]
   6fc30:	movw	r0, #1
   6fc34:	str	r0, [sp, #4]
   6fc38:	str	r0, [sp, #8]
   6fc3c:	ldr	r0, [sp, #12]
   6fc40:	ldr	r1, [sp, #8]
   6fc44:	add	r0, r0, r1
   6fc48:	ldr	r1, [sp, #28]
   6fc4c:	cmp	r0, r1
   6fc50:	bcs	6fd38 <__assert_fail@plt+0x5d180>
   6fc54:	ldr	r0, [sp, #32]
   6fc58:	ldr	r1, [sp, #12]
   6fc5c:	ldr	r2, [sp, #8]
   6fc60:	add	r1, r1, r2
   6fc64:	add	r0, r0, r1
   6fc68:	ldrb	r0, [r0]
   6fc6c:	strb	r0, [sp, #3]
   6fc70:	ldr	r0, [sp, #32]
   6fc74:	ldr	r1, [sp, #16]
   6fc78:	ldr	r2, [sp, #8]
   6fc7c:	add	r1, r1, r2
   6fc80:	add	r0, r0, r1
   6fc84:	ldrb	r0, [r0]
   6fc88:	strb	r0, [sp, #2]
   6fc8c:	ldrb	r0, [sp, #2]
   6fc90:	ldrb	r1, [sp, #3]
   6fc94:	cmp	r0, r1
   6fc98:	bge	6fcc8 <__assert_fail@plt+0x5d110>
   6fc9c:	ldr	r0, [sp, #8]
   6fca0:	ldr	r1, [sp, #12]
   6fca4:	add	r0, r1, r0
   6fca8:	str	r0, [sp, #12]
   6fcac:	movw	r0, #1
   6fcb0:	str	r0, [sp, #8]
   6fcb4:	ldr	r0, [sp, #12]
   6fcb8:	ldr	r1, [sp, #16]
   6fcbc:	sub	r0, r0, r1
   6fcc0:	str	r0, [sp, #4]
   6fcc4:	b	6fd34 <__assert_fail@plt+0x5d17c>
   6fcc8:	ldrb	r0, [sp, #3]
   6fccc:	ldrb	r1, [sp, #2]
   6fcd0:	cmp	r0, r1
   6fcd4:	bne	6fd14 <__assert_fail@plt+0x5d15c>
   6fcd8:	ldr	r0, [sp, #8]
   6fcdc:	ldr	r1, [sp, #4]
   6fce0:	cmp	r0, r1
   6fce4:	beq	6fcf8 <__assert_fail@plt+0x5d140>
   6fce8:	ldr	r0, [sp, #8]
   6fcec:	add	r0, r0, #1
   6fcf0:	str	r0, [sp, #8]
   6fcf4:	b	6fd10 <__assert_fail@plt+0x5d158>
   6fcf8:	ldr	r0, [sp, #4]
   6fcfc:	ldr	r1, [sp, #12]
   6fd00:	add	r0, r1, r0
   6fd04:	str	r0, [sp, #12]
   6fd08:	movw	r0, #1
   6fd0c:	str	r0, [sp, #8]
   6fd10:	b	6fd30 <__assert_fail@plt+0x5d178>
   6fd14:	ldr	r0, [sp, #12]
   6fd18:	add	r1, r0, #1
   6fd1c:	str	r1, [sp, #12]
   6fd20:	str	r0, [sp, #16]
   6fd24:	movw	r0, #1
   6fd28:	str	r0, [sp, #4]
   6fd2c:	str	r0, [sp, #8]
   6fd30:	b	6fd34 <__assert_fail@plt+0x5d17c>
   6fd34:	b	6fc3c <__assert_fail@plt+0x5d084>
   6fd38:	ldr	r0, [sp, #16]
   6fd3c:	add	r0, r0, #1
   6fd40:	ldr	r1, [sp, #20]
   6fd44:	add	r1, r1, #1
   6fd48:	cmp	r0, r1
   6fd4c:	bcs	6fd60 <__assert_fail@plt+0x5d1a8>
   6fd50:	ldr	r0, [sp, #20]
   6fd54:	add	r0, r0, #1
   6fd58:	str	r0, [sp, #36]	; 0x24
   6fd5c:	b	6fd78 <__assert_fail@plt+0x5d1c0>
   6fd60:	ldr	r0, [sp, #4]
   6fd64:	ldr	r1, [sp, #24]
   6fd68:	str	r0, [r1]
   6fd6c:	ldr	r0, [sp, #16]
   6fd70:	add	r0, r0, #1
   6fd74:	str	r0, [sp, #36]	; 0x24
   6fd78:	ldr	r0, [sp, #36]	; 0x24
   6fd7c:	add	sp, sp, #40	; 0x28
   6fd80:	bx	lr
   6fd84:	push	{fp, lr}
   6fd88:	mov	fp, sp
   6fd8c:	sub	sp, sp, #24
   6fd90:	str	r0, [fp, #-4]
   6fd94:	ldr	r0, [fp, #-4]
   6fd98:	movw	r1, #0
   6fd9c:	cmp	r0, r1
   6fda0:	beq	6fdb8 <__assert_fail@plt+0x5d200>
   6fda4:	ldr	r0, [fp, #-4]
   6fda8:	bl	12888 <strlen@plt>
   6fdac:	add	r0, r0, #1
   6fdb0:	str	r0, [sp, #4]
   6fdb4:	b	6fdc4 <__assert_fail@plt+0x5d20c>
   6fdb8:	movw	r0, #0
   6fdbc:	str	r0, [sp, #4]
   6fdc0:	b	6fdc4 <__assert_fail@plt+0x5d20c>
   6fdc4:	ldr	r0, [sp, #4]
   6fdc8:	str	r0, [fp, #-8]
   6fdcc:	ldr	r0, [fp, #-8]
   6fdd0:	cmp	r0, #59	; 0x3b
   6fdd4:	bcs	6fde4 <__assert_fail@plt+0x5d22c>
   6fdd8:	movw	r0, #59	; 0x3b
   6fddc:	str	r0, [sp]
   6fde0:	b	6fdf0 <__assert_fail@plt+0x5d238>
   6fde4:	ldr	r0, [fp, #-8]
   6fde8:	add	r0, r0, #1
   6fdec:	str	r0, [sp]
   6fdf0:	ldr	r0, [sp]
   6fdf4:	str	r0, [sp, #12]
   6fdf8:	ldr	r0, [sp, #12]
   6fdfc:	add	r0, r0, #8
   6fe00:	mvn	r1, #3
   6fe04:	and	r0, r0, r1
   6fe08:	bl	549ac <__assert_fail@plt+0x41df4>
   6fe0c:	str	r0, [sp, #8]
   6fe10:	ldr	r0, [sp, #8]
   6fe14:	movw	r1, #0
   6fe18:	cmp	r0, r1
   6fe1c:	beq	6fe84 <__assert_fail@plt+0x5d2cc>
   6fe20:	ldr	r0, [sp, #8]
   6fe24:	movw	r1, #0
   6fe28:	str	r1, [r0]
   6fe2c:	ldr	r0, [fp, #-4]
   6fe30:	cmp	r0, r1
   6fe34:	movw	r0, #0
   6fe38:	movne	r0, #1
   6fe3c:	mvn	r2, #0
   6fe40:	eor	r0, r0, r2
   6fe44:	eor	r0, r0, r2
   6fe48:	and	r0, r0, #1
   6fe4c:	ldr	r2, [sp, #8]
   6fe50:	strb	r0, [r2, #4]
   6fe54:	ldr	r0, [sp, #8]
   6fe58:	movw	r2, #0
   6fe5c:	strb	r2, [r0, #5]
   6fe60:	ldr	r0, [fp, #-4]
   6fe64:	cmp	r0, r1
   6fe68:	beq	6fe80 <__assert_fail@plt+0x5d2c8>
   6fe6c:	ldr	r0, [sp, #8]
   6fe70:	add	r0, r0, #5
   6fe74:	ldr	r1, [fp, #-4]
   6fe78:	ldr	r2, [fp, #-8]
   6fe7c:	bl	6fe90 <__assert_fail@plt+0x5d2d8>
   6fe80:	b	6fe84 <__assert_fail@plt+0x5d2cc>
   6fe84:	ldr	r0, [sp, #8]
   6fe88:	mov	sp, fp
   6fe8c:	pop	{fp, pc}
   6fe90:	push	{fp, lr}
   6fe94:	mov	fp, sp
   6fe98:	sub	sp, sp, #16
   6fe9c:	str	r0, [fp, #-4]
   6fea0:	str	r1, [sp, #8]
   6fea4:	str	r2, [sp, #4]
   6fea8:	ldr	r0, [fp, #-4]
   6feac:	ldr	r1, [sp, #8]
   6feb0:	ldr	r2, [sp, #4]
   6feb4:	bl	125c4 <memcpy@plt>
   6feb8:	ldr	r0, [fp, #-4]
   6febc:	ldr	r1, [sp, #4]
   6fec0:	add	r0, r0, r1
   6fec4:	movw	r1, #0
   6fec8:	strb	r1, [r0]
   6fecc:	mov	sp, fp
   6fed0:	pop	{fp, pc}
   6fed4:	push	{fp, lr}
   6fed8:	mov	fp, sp
   6fedc:	sub	sp, sp, #8
   6fee0:	str	r0, [sp, #4]
   6fee4:	ldr	r0, [sp, #4]
   6fee8:	movw	r1, #1
   6feec:	cmp	r0, r1
   6fef0:	beq	6ff2c <__assert_fail@plt+0x5d374>
   6fef4:	b	6fef8 <__assert_fail@plt+0x5d340>
   6fef8:	ldr	r0, [sp, #4]
   6fefc:	movw	r1, #0
   6ff00:	cmp	r0, r1
   6ff04:	beq	6ff28 <__assert_fail@plt+0x5d370>
   6ff08:	ldr	r0, [sp, #4]
   6ff0c:	ldr	r0, [r0]
   6ff10:	str	r0, [sp]
   6ff14:	ldr	r0, [sp, #4]
   6ff18:	bl	50c68 <__assert_fail@plt+0x3e0b0>
   6ff1c:	ldr	r0, [sp]
   6ff20:	str	r0, [sp, #4]
   6ff24:	b	6fef8 <__assert_fail@plt+0x5d340>
   6ff28:	b	6ff2c <__assert_fail@plt+0x5d374>
   6ff2c:	mov	sp, fp
   6ff30:	pop	{fp, pc}
   6ff34:	push	{fp, lr}
   6ff38:	mov	fp, sp
   6ff3c:	sub	sp, sp, #32
   6ff40:	str	r0, [fp, #-8]
   6ff44:	str	r1, [fp, #-12]
   6ff48:	str	r2, [sp, #16]
   6ff4c:	ldr	r0, [fp, #-8]
   6ff50:	movw	r1, #0
   6ff54:	cmp	r0, r1
   6ff58:	bne	6ff70 <__assert_fail@plt+0x5d3b8>
   6ff5c:	ldr	r0, [fp, #-12]
   6ff60:	ldr	r1, [sp, #16]
   6ff64:	bl	12498 <gmtime_r@plt>
   6ff68:	str	r0, [fp, #-4]
   6ff6c:	b	6fffc <__assert_fail@plt+0x5d444>
   6ff70:	ldr	r0, [fp, #-8]
   6ff74:	bl	70008 <__assert_fail@plt+0x5d450>
   6ff78:	str	r0, [sp, #12]
   6ff7c:	ldr	r0, [sp, #12]
   6ff80:	movw	lr, #0
   6ff84:	cmp	r0, lr
   6ff88:	beq	6fff4 <__assert_fail@plt+0x5d43c>
   6ff8c:	ldr	r0, [fp, #-12]
   6ff90:	ldr	r1, [sp, #16]
   6ff94:	bl	12684 <localtime_r@plt>
   6ff98:	movw	r1, #0
   6ff9c:	cmp	r0, r1
   6ffa0:	movw	r0, #0
   6ffa4:	str	r0, [sp, #4]
   6ffa8:	beq	6ffbc <__assert_fail@plt+0x5d404>
   6ffac:	ldr	r0, [fp, #-8]
   6ffb0:	ldr	r1, [sp, #16]
   6ffb4:	bl	700f8 <__assert_fail@plt+0x5d540>
   6ffb8:	str	r0, [sp, #4]
   6ffbc:	ldr	r0, [sp, #4]
   6ffc0:	and	r0, r0, #1
   6ffc4:	strb	r0, [sp, #11]
   6ffc8:	ldr	r0, [sp, #12]
   6ffcc:	bl	702e8 <__assert_fail@plt+0x5d730>
   6ffd0:	tst	r0, #1
   6ffd4:	beq	6fff0 <__assert_fail@plt+0x5d438>
   6ffd8:	ldrb	r0, [sp, #11]
   6ffdc:	tst	r0, #1
   6ffe0:	beq	6fff0 <__assert_fail@plt+0x5d438>
   6ffe4:	ldr	r0, [sp, #16]
   6ffe8:	str	r0, [fp, #-4]
   6ffec:	b	6fffc <__assert_fail@plt+0x5d444>
   6fff0:	b	6fff4 <__assert_fail@plt+0x5d43c>
   6fff4:	movw	r0, #0
   6fff8:	str	r0, [fp, #-4]
   6fffc:	ldr	r0, [fp, #-4]
   70000:	mov	sp, fp
   70004:	pop	{fp, pc}
   70008:	push	{fp, lr}
   7000c:	mov	fp, sp
   70010:	sub	sp, sp, #24
   70014:	str	r0, [fp, #-8]
   70018:	bl	704d8 <__assert_fail@plt+0x5d920>
   7001c:	str	r0, [sp, #12]
   70020:	ldr	r0, [sp, #12]
   70024:	movw	lr, #0
   70028:	cmp	r0, lr
   7002c:	beq	7005c <__assert_fail@plt+0x5d4a4>
   70030:	ldr	r0, [fp, #-8]
   70034:	ldrb	r0, [r0, #4]
   70038:	cmp	r0, #0
   7003c:	beq	70078 <__assert_fail@plt+0x5d4c0>
   70040:	ldr	r0, [fp, #-8]
   70044:	add	r0, r0, #5
   70048:	ldr	r1, [sp, #12]
   7004c:	bl	124c8 <strcmp@plt>
   70050:	cmp	r0, #0
   70054:	beq	7006c <__assert_fail@plt+0x5d4b4>
   70058:	b	70078 <__assert_fail@plt+0x5d4c0>
   7005c:	ldr	r0, [fp, #-8]
   70060:	ldrsb	r0, [r0, #4]
   70064:	cmp	r0, #0
   70068:	bne	70078 <__assert_fail@plt+0x5d4c0>
   7006c:	movw	r0, #1
   70070:	str	r0, [fp, #-4]
   70074:	b	700ec <__assert_fail@plt+0x5d534>
   70078:	ldr	r0, [sp, #12]
   7007c:	bl	6fd84 <__assert_fail@plt+0x5d1cc>
   70080:	str	r0, [sp, #8]
   70084:	ldr	r0, [sp, #8]
   70088:	movw	lr, #0
   7008c:	cmp	r0, lr
   70090:	bne	700a0 <__assert_fail@plt+0x5d4e8>
   70094:	ldr	r0, [sp, #8]
   70098:	str	r0, [fp, #-4]
   7009c:	b	700ec <__assert_fail@plt+0x5d534>
   700a0:	ldr	r0, [fp, #-8]
   700a4:	bl	704f0 <__assert_fail@plt+0x5d938>
   700a8:	tst	r0, #1
   700ac:	bne	700e4 <__assert_fail@plt+0x5d52c>
   700b0:	bl	128d0 <__errno_location@plt>
   700b4:	ldr	r0, [r0]
   700b8:	str	r0, [sp, #4]
   700bc:	ldr	r0, [sp, #8]
   700c0:	bl	6fed4 <__assert_fail@plt+0x5d31c>
   700c4:	ldr	r0, [sp, #4]
   700c8:	str	r0, [sp]
   700cc:	bl	128d0 <__errno_location@plt>
   700d0:	ldr	lr, [sp]
   700d4:	str	lr, [r0]
   700d8:	movw	r0, #0
   700dc:	str	r0, [fp, #-4]
   700e0:	b	700ec <__assert_fail@plt+0x5d534>
   700e4:	ldr	r0, [sp, #8]
   700e8:	str	r0, [fp, #-4]
   700ec:	ldr	r0, [fp, #-4]
   700f0:	mov	sp, fp
   700f4:	pop	{fp, pc}
   700f8:	push	{fp, lr}
   700fc:	mov	fp, sp
   70100:	sub	sp, sp, #24
   70104:	str	r0, [fp, #-8]
   70108:	str	r1, [sp, #12]
   7010c:	movw	r0, #0
   70110:	str	r0, [sp, #8]
   70114:	movw	r1, #39197	; 0x991d
   70118:	movt	r1, #7
   7011c:	str	r1, [sp, #4]
   70120:	ldr	r1, [sp, #12]
   70124:	ldr	r1, [r1, #40]	; 0x28
   70128:	str	r1, [sp, #8]
   7012c:	ldr	r1, [sp, #8]
   70130:	cmp	r1, r0
   70134:	beq	7015c <__assert_fail@plt+0x5d5a4>
   70138:	ldr	r0, [sp, #12]
   7013c:	ldr	r1, [sp, #8]
   70140:	cmp	r0, r1
   70144:	bhi	7016c <__assert_fail@plt+0x5d5b4>
   70148:	ldr	r0, [sp, #8]
   7014c:	ldr	r1, [sp, #12]
   70150:	add	r1, r1, #44	; 0x2c
   70154:	cmp	r0, r1
   70158:	bcs	7016c <__assert_fail@plt+0x5d5b4>
   7015c:	movw	r0, #1
   70160:	and	r0, r0, #1
   70164:	strb	r0, [fp, #-1]
   70168:	b	702d8 <__assert_fail@plt+0x5d720>
   7016c:	ldr	r0, [sp, #8]
   70170:	ldrsb	r0, [r0]
   70174:	cmp	r0, #0
   70178:	beq	702c0 <__assert_fail@plt+0x5d708>
   7017c:	ldr	r0, [fp, #-8]
   70180:	add	r0, r0, #5
   70184:	str	r0, [sp, #4]
   70188:	ldr	r0, [sp, #4]
   7018c:	ldr	r1, [sp, #8]
   70190:	bl	124c8 <strcmp@plt>
   70194:	cmp	r0, #0
   70198:	beq	702bc <__assert_fail@plt+0x5d704>
   7019c:	ldr	r0, [sp, #4]
   701a0:	ldrb	r0, [r0]
   701a4:	cmp	r0, #0
   701a8:	bne	70264 <__assert_fail@plt+0x5d6ac>
   701ac:	ldr	r0, [sp, #4]
   701b0:	ldr	r1, [fp, #-8]
   701b4:	add	r1, r1, #5
   701b8:	cmp	r0, r1
   701bc:	bne	701d0 <__assert_fail@plt+0x5d618>
   701c0:	ldr	r0, [fp, #-8]
   701c4:	ldrb	r0, [r0, #4]
   701c8:	cmp	r0, #0
   701cc:	bne	70264 <__assert_fail@plt+0x5d6ac>
   701d0:	ldr	r0, [sp, #8]
   701d4:	bl	12888 <strlen@plt>
   701d8:	add	r0, r0, #1
   701dc:	str	r0, [sp]
   701e0:	ldr	r0, [sp]
   701e4:	ldr	lr, [fp, #-8]
   701e8:	add	lr, lr, #5
   701ec:	add	lr, lr, #59	; 0x3b
   701f0:	ldr	r1, [sp, #4]
   701f4:	sub	r1, lr, r1
   701f8:	cmp	r0, r1
   701fc:	bge	70214 <__assert_fail@plt+0x5d65c>
   70200:	ldr	r0, [sp, #4]
   70204:	ldr	r1, [sp, #8]
   70208:	ldr	r2, [sp]
   7020c:	bl	6fe90 <__assert_fail@plt+0x5d2d8>
   70210:	b	70260 <__assert_fail@plt+0x5d6a8>
   70214:	ldr	r0, [sp, #8]
   70218:	bl	6fd84 <__assert_fail@plt+0x5d1cc>
   7021c:	ldr	lr, [fp, #-8]
   70220:	str	r0, [lr]
   70224:	str	r0, [fp, #-8]
   70228:	ldr	r0, [fp, #-8]
   7022c:	movw	lr, #0
   70230:	cmp	r0, lr
   70234:	bne	70248 <__assert_fail@plt+0x5d690>
   70238:	movw	r0, #0
   7023c:	and	r0, r0, #1
   70240:	strb	r0, [fp, #-1]
   70244:	b	702d8 <__assert_fail@plt+0x5d720>
   70248:	ldr	r0, [fp, #-8]
   7024c:	movw	r1, #0
   70250:	strb	r1, [r0, #4]
   70254:	ldr	r0, [fp, #-8]
   70258:	add	r0, r0, #5
   7025c:	str	r0, [sp, #4]
   70260:	b	702bc <__assert_fail@plt+0x5d704>
   70264:	ldr	r0, [sp, #4]
   70268:	bl	12888 <strlen@plt>
   7026c:	add	r0, r0, #1
   70270:	ldr	lr, [sp, #4]
   70274:	add	r0, lr, r0
   70278:	str	r0, [sp, #4]
   7027c:	ldr	r0, [sp, #4]
   70280:	ldrsb	r0, [r0]
   70284:	cmp	r0, #0
   70288:	bne	702b8 <__assert_fail@plt+0x5d700>
   7028c:	ldr	r0, [fp, #-8]
   70290:	ldr	r0, [r0]
   70294:	movw	r1, #0
   70298:	cmp	r0, r1
   7029c:	beq	702b8 <__assert_fail@plt+0x5d700>
   702a0:	ldr	r0, [fp, #-8]
   702a4:	ldr	r0, [r0]
   702a8:	str	r0, [fp, #-8]
   702ac:	ldr	r0, [fp, #-8]
   702b0:	add	r0, r0, #5
   702b4:	str	r0, [sp, #4]
   702b8:	b	70188 <__assert_fail@plt+0x5d5d0>
   702bc:	b	702c0 <__assert_fail@plt+0x5d708>
   702c0:	ldr	r0, [sp, #4]
   702c4:	ldr	r1, [sp, #12]
   702c8:	str	r0, [r1, #40]	; 0x28
   702cc:	movw	r0, #1
   702d0:	and	r0, r0, #1
   702d4:	strb	r0, [fp, #-1]
   702d8:	ldrb	r0, [fp, #-1]
   702dc:	and	r0, r0, #1
   702e0:	mov	sp, fp
   702e4:	pop	{fp, pc}
   702e8:	push	{fp, lr}
   702ec:	mov	fp, sp
   702f0:	sub	sp, sp, #24
   702f4:	str	r0, [fp, #-8]
   702f8:	ldr	r0, [fp, #-8]
   702fc:	movw	r1, #1
   70300:	cmp	r0, r1
   70304:	bne	70318 <__assert_fail@plt+0x5d760>
   70308:	movw	r0, #1
   7030c:	and	r0, r0, #1
   70310:	strb	r0, [fp, #-1]
   70314:	b	70374 <__assert_fail@plt+0x5d7bc>
   70318:	bl	128d0 <__errno_location@plt>
   7031c:	ldr	r0, [r0]
   70320:	str	r0, [sp, #12]
   70324:	ldr	r0, [fp, #-8]
   70328:	bl	704f0 <__assert_fail@plt+0x5d938>
   7032c:	and	r0, r0, #1
   70330:	strb	r0, [sp, #11]
   70334:	ldrb	r0, [sp, #11]
   70338:	tst	r0, #1
   7033c:	bne	7034c <__assert_fail@plt+0x5d794>
   70340:	bl	128d0 <__errno_location@plt>
   70344:	ldr	r0, [r0]
   70348:	str	r0, [sp, #12]
   7034c:	ldr	r0, [fp, #-8]
   70350:	bl	6fed4 <__assert_fail@plt+0x5d31c>
   70354:	ldr	r0, [sp, #12]
   70358:	str	r0, [sp, #4]
   7035c:	bl	128d0 <__errno_location@plt>
   70360:	ldr	lr, [sp, #4]
   70364:	str	lr, [r0]
   70368:	ldrb	r0, [sp, #11]
   7036c:	and	r0, r0, #1
   70370:	strb	r0, [fp, #-1]
   70374:	ldrb	r0, [fp, #-1]
   70378:	and	r0, r0, #1
   7037c:	mov	sp, fp
   70380:	pop	{fp, pc}
   70384:	push	{fp, lr}
   70388:	mov	fp, sp
   7038c:	sub	sp, sp, #72	; 0x48
   70390:	str	r0, [fp, #-8]
   70394:	str	r1, [fp, #-12]
   70398:	ldr	r0, [fp, #-8]
   7039c:	movw	r1, #0
   703a0:	cmp	r0, r1
   703a4:	bne	703b8 <__assert_fail@plt+0x5d800>
   703a8:	ldr	r0, [fp, #-12]
   703ac:	bl	12a80 <timegm@plt>
   703b0:	str	r0, [fp, #-4]
   703b4:	b	704cc <__assert_fail@plt+0x5d914>
   703b8:	ldr	r0, [fp, #-8]
   703bc:	bl	70008 <__assert_fail@plt+0x5d450>
   703c0:	str	r0, [fp, #-16]
   703c4:	ldr	r0, [fp, #-16]
   703c8:	movw	lr, #0
   703cc:	cmp	r0, lr
   703d0:	beq	704c4 <__assert_fail@plt+0x5d90c>
   703d4:	ldr	r0, [fp, #-12]
   703d8:	ldr	r0, [r0]
   703dc:	str	r0, [sp, #12]
   703e0:	ldr	r0, [fp, #-12]
   703e4:	ldr	r0, [r0, #4]
   703e8:	str	r0, [sp, #16]
   703ec:	ldr	r0, [fp, #-12]
   703f0:	ldr	r0, [r0, #8]
   703f4:	str	r0, [sp, #20]
   703f8:	ldr	r0, [fp, #-12]
   703fc:	ldr	r0, [r0, #12]
   70400:	str	r0, [sp, #24]
   70404:	ldr	r0, [fp, #-12]
   70408:	ldr	r0, [r0, #16]
   7040c:	str	r0, [sp, #28]
   70410:	ldr	r0, [fp, #-12]
   70414:	ldr	r0, [r0, #20]
   70418:	str	r0, [sp, #32]
   7041c:	mvn	r0, #0
   70420:	str	r0, [sp, #40]	; 0x28
   70424:	ldr	r0, [fp, #-12]
   70428:	ldr	r0, [r0, #32]
   7042c:	str	r0, [sp, #44]	; 0x2c
   70430:	add	r0, sp, #12
   70434:	bl	1251c <mktime@plt>
   70438:	str	r0, [sp, #8]
   7043c:	ldr	r0, [sp, #40]	; 0x28
   70440:	movw	lr, #0
   70444:	cmp	lr, r0
   70448:	movw	r0, #0
   7044c:	movle	r0, #1
   70450:	and	r0, r0, #1
   70454:	strb	r0, [sp, #7]
   70458:	ldrb	r0, [sp, #7]
   7045c:	tst	r0, #1
   70460:	movw	r0, #0
   70464:	str	r0, [sp]
   70468:	beq	7047c <__assert_fail@plt+0x5d8c4>
   7046c:	ldr	r0, [fp, #-8]
   70470:	add	r1, sp, #12
   70474:	bl	700f8 <__assert_fail@plt+0x5d540>
   70478:	str	r0, [sp]
   7047c:	ldr	r0, [sp]
   70480:	and	r0, r0, #1
   70484:	strb	r0, [sp, #7]
   70488:	ldr	r0, [fp, #-16]
   7048c:	bl	702e8 <__assert_fail@plt+0x5d730>
   70490:	tst	r0, #1
   70494:	beq	704c0 <__assert_fail@plt+0x5d908>
   70498:	ldrb	r0, [sp, #7]
   7049c:	tst	r0, #1
   704a0:	beq	704c0 <__assert_fail@plt+0x5d908>
   704a4:	ldr	r0, [fp, #-12]
   704a8:	add	r1, sp, #12
   704ac:	movw	r2, #44	; 0x2c
   704b0:	bl	125c4 <memcpy@plt>
   704b4:	ldr	r0, [sp, #8]
   704b8:	str	r0, [fp, #-4]
   704bc:	b	704cc <__assert_fail@plt+0x5d914>
   704c0:	b	704c4 <__assert_fail@plt+0x5d90c>
   704c4:	mvn	r0, #0
   704c8:	str	r0, [fp, #-4]
   704cc:	ldr	r0, [fp, #-4]
   704d0:	mov	sp, fp
   704d4:	pop	{fp, pc}
   704d8:	push	{fp, lr}
   704dc:	mov	fp, sp
   704e0:	movw	r0, #53808	; 0xd230
   704e4:	movt	r0, #7
   704e8:	bl	127bc <getenv@plt>
   704ec:	pop	{fp, pc}
   704f0:	push	{fp, lr}
   704f4:	mov	fp, sp
   704f8:	sub	sp, sp, #16
   704fc:	str	r0, [sp, #8]
   70500:	ldr	r0, [sp, #8]
   70504:	ldrb	r0, [r0, #4]
   70508:	cmp	r0, #0
   7050c:	beq	70520 <__assert_fail@plt+0x5d968>
   70510:	ldr	r0, [sp, #8]
   70514:	add	r0, r0, #5
   70518:	str	r0, [sp, #4]
   7051c:	b	7052c <__assert_fail@plt+0x5d974>
   70520:	movw	r0, #0
   70524:	str	r0, [sp, #4]
   70528:	b	7052c <__assert_fail@plt+0x5d974>
   7052c:	ldr	r0, [sp, #4]
   70530:	bl	7056c <__assert_fail@plt+0x5d9b4>
   70534:	cmp	r0, #0
   70538:	beq	7054c <__assert_fail@plt+0x5d994>
   7053c:	movw	r0, #0
   70540:	and	r0, r0, #1
   70544:	strb	r0, [fp, #-1]
   70548:	b	7055c <__assert_fail@plt+0x5d9a4>
   7054c:	bl	126cc <tzset@plt>
   70550:	movw	lr, #1
   70554:	and	lr, lr, #1
   70558:	strb	lr, [fp, #-1]
   7055c:	ldrb	r0, [fp, #-1]
   70560:	and	r0, r0, #1
   70564:	mov	sp, fp
   70568:	pop	{fp, pc}
   7056c:	push	{fp, lr}
   70570:	mov	fp, sp
   70574:	sub	sp, sp, #8
   70578:	str	r0, [sp, #4]
   7057c:	ldr	r0, [sp, #4]
   70580:	movw	r1, #0
   70584:	cmp	r0, r1
   70588:	beq	705a8 <__assert_fail@plt+0x5d9f0>
   7058c:	ldr	r1, [sp, #4]
   70590:	movw	r0, #53808	; 0xd230
   70594:	movt	r0, #7
   70598:	movw	r2, #1
   7059c:	bl	128a0 <setenv@plt>
   705a0:	str	r0, [sp]
   705a4:	b	705b8 <__assert_fail@plt+0x5da00>
   705a8:	movw	r0, #53808	; 0xd230
   705ac:	movt	r0, #7
   705b0:	bl	12b34 <unsetenv@plt>
   705b4:	str	r0, [sp]
   705b8:	ldr	r0, [sp]
   705bc:	mov	sp, fp
   705c0:	pop	{fp, pc}
   705c4:	push	{fp, lr}
   705c8:	mov	fp, sp
   705cc:	movw	r0, #63180	; 0xf6cc
   705d0:	movt	r0, #8
   705d4:	ldr	r0, [r0]
   705d8:	bl	1284c <exit@plt>
   705dc:	push	{fp, lr}
   705e0:	mov	fp, sp
   705e4:	sub	sp, sp, #40	; 0x28
   705e8:	str	r0, [fp, #-8]
   705ec:	str	r1, [fp, #-12]
   705f0:	str	r2, [fp, #-16]
   705f4:	str	r3, [sp, #20]
   705f8:	mvn	r0, #0
   705fc:	str	r0, [sp, #8]
   70600:	movw	r0, #0
   70604:	strb	r0, [sp, #7]
   70608:	ldr	r0, [fp, #-8]
   7060c:	bl	12888 <strlen@plt>
   70610:	str	r0, [sp, #12]
   70614:	movw	r0, #0
   70618:	str	r0, [sp, #16]
   7061c:	ldr	r0, [fp, #-12]
   70620:	ldr	r1, [sp, #16]
   70624:	add	r0, r0, r1, lsl #2
   70628:	ldr	r0, [r0]
   7062c:	movw	r1, #0
   70630:	cmp	r0, r1
   70634:	beq	70710 <__assert_fail@plt+0x5db58>
   70638:	ldr	r0, [fp, #-12]
   7063c:	ldr	r1, [sp, #16]
   70640:	add	r0, r0, r1, lsl #2
   70644:	ldr	r0, [r0]
   70648:	ldr	r1, [fp, #-8]
   7064c:	ldr	r2, [sp, #12]
   70650:	bl	12b58 <strncmp@plt>
   70654:	cmp	r0, #0
   70658:	bne	706fc <__assert_fail@plt+0x5db44>
   7065c:	ldr	r0, [fp, #-12]
   70660:	ldr	r1, [sp, #16]
   70664:	add	r0, r0, r1, lsl #2
   70668:	ldr	r0, [r0]
   7066c:	bl	12888 <strlen@plt>
   70670:	ldr	r1, [sp, #12]
   70674:	cmp	r0, r1
   70678:	bne	70688 <__assert_fail@plt+0x5dad0>
   7067c:	ldr	r0, [sp, #16]
   70680:	str	r0, [fp, #-4]
   70684:	b	70730 <__assert_fail@plt+0x5db78>
   70688:	ldr	r0, [sp, #8]
   7068c:	cmn	r0, #1
   70690:	bne	706a0 <__assert_fail@plt+0x5dae8>
   70694:	ldr	r0, [sp, #16]
   70698:	str	r0, [sp, #8]
   7069c:	b	706f4 <__assert_fail@plt+0x5db3c>
   706a0:	ldr	r0, [fp, #-16]
   706a4:	movw	r1, #0
   706a8:	cmp	r0, r1
   706ac:	beq	706e8 <__assert_fail@plt+0x5db30>
   706b0:	ldr	r0, [fp, #-16]
   706b4:	ldr	r1, [sp, #20]
   706b8:	ldr	r2, [sp, #8]
   706bc:	mul	r1, r1, r2
   706c0:	add	r0, r0, r1
   706c4:	ldr	r1, [fp, #-16]
   706c8:	ldr	r2, [sp, #20]
   706cc:	ldr	r3, [sp, #16]
   706d0:	mul	r2, r2, r3
   706d4:	add	r1, r1, r2
   706d8:	ldr	r2, [sp, #20]
   706dc:	bl	12624 <memcmp@plt>
   706e0:	cmp	r0, #0
   706e4:	beq	706f0 <__assert_fail@plt+0x5db38>
   706e8:	movw	r0, #1
   706ec:	strb	r0, [sp, #7]
   706f0:	b	706f4 <__assert_fail@plt+0x5db3c>
   706f4:	b	706f8 <__assert_fail@plt+0x5db40>
   706f8:	b	706fc <__assert_fail@plt+0x5db44>
   706fc:	b	70700 <__assert_fail@plt+0x5db48>
   70700:	ldr	r0, [sp, #16]
   70704:	add	r0, r0, #1
   70708:	str	r0, [sp, #16]
   7070c:	b	7061c <__assert_fail@plt+0x5da64>
   70710:	ldrb	r0, [sp, #7]
   70714:	tst	r0, #1
   70718:	beq	70728 <__assert_fail@plt+0x5db70>
   7071c:	mvn	r0, #1
   70720:	str	r0, [fp, #-4]
   70724:	b	70730 <__assert_fail@plt+0x5db78>
   70728:	ldr	r0, [sp, #8]
   7072c:	str	r0, [fp, #-4]
   70730:	ldr	r0, [fp, #-4]
   70734:	mov	sp, fp
   70738:	pop	{fp, pc}
   7073c:	push	{fp, lr}
   70740:	mov	fp, sp
   70744:	sub	sp, sp, #40	; 0x28
   70748:	str	r0, [fp, #-4]
   7074c:	str	r1, [fp, #-8]
   70750:	str	r2, [fp, #-12]
   70754:	ldr	r0, [fp, #-12]
   70758:	cmn	r0, #1
   7075c:	bne	70774 <__assert_fail@plt+0x5dbbc>
   70760:	movw	r0, #59344	; 0xe7d0
   70764:	movt	r0, #7
   70768:	bl	12864 <gettext@plt>
   7076c:	str	r0, [sp, #20]
   70770:	b	70784 <__assert_fail@plt+0x5dbcc>
   70774:	movw	r0, #59371	; 0xe7eb
   70778:	movt	r0, #7
   7077c:	bl	12864 <gettext@plt>
   70780:	str	r0, [sp, #20]
   70784:	ldr	r0, [sp, #20]
   70788:	str	r0, [fp, #-16]
   7078c:	ldr	r2, [fp, #-16]
   70790:	ldr	r0, [fp, #-8]
   70794:	movw	r1, #0
   70798:	str	r0, [sp, #16]
   7079c:	mov	r0, r1
   707a0:	movw	r1, #8
   707a4:	ldr	r3, [sp, #16]
   707a8:	str	r2, [sp, #12]
   707ac:	mov	r2, r3
   707b0:	bl	4a828 <__assert_fail@plt+0x37c70>
   707b4:	ldr	r1, [fp, #-4]
   707b8:	movw	r2, #1
   707bc:	str	r0, [sp, #8]
   707c0:	mov	r0, r2
   707c4:	bl	4ac68 <__assert_fail@plt+0x380b0>
   707c8:	movw	r1, #0
   707cc:	str	r0, [sp, #4]
   707d0:	mov	r0, r1
   707d4:	ldr	r2, [sp, #12]
   707d8:	ldr	r3, [sp, #8]
   707dc:	ldr	lr, [sp, #4]
   707e0:	str	lr, [sp]
   707e4:	bl	12780 <error@plt>
   707e8:	mov	sp, fp
   707ec:	pop	{fp, pc}
   707f0:	push	{fp, lr}
   707f4:	mov	fp, sp
   707f8:	sub	sp, sp, #56	; 0x38
   707fc:	str	r0, [fp, #-4]
   70800:	str	r1, [fp, #-8]
   70804:	str	r2, [fp, #-12]
   70808:	movw	r0, #0
   7080c:	str	r0, [fp, #-20]	; 0xffffffec
   70810:	movw	r0, #59400	; 0xe808
   70814:	movt	r0, #7
   70818:	bl	12864 <gettext@plt>
   7081c:	movw	r1, #63272	; 0xf728
   70820:	movt	r1, #8
   70824:	ldr	r1, [r1]
   70828:	bl	12b4c <fputs@plt>
   7082c:	movw	r1, #0
   70830:	str	r1, [fp, #-16]
   70834:	str	r0, [fp, #-24]	; 0xffffffe8
   70838:	ldr	r0, [fp, #-4]
   7083c:	ldr	r1, [fp, #-16]
   70840:	add	r0, r0, r1, lsl #2
   70844:	ldr	r0, [r0]
   70848:	movw	r1, #0
   7084c:	cmp	r0, r1
   70850:	beq	70948 <__assert_fail@plt+0x5dd90>
   70854:	ldr	r0, [fp, #-16]
   70858:	cmp	r0, #0
   7085c:	beq	70888 <__assert_fail@plt+0x5dcd0>
   70860:	ldr	r0, [fp, #-20]	; 0xffffffec
   70864:	ldr	r1, [fp, #-8]
   70868:	ldr	r2, [fp, #-12]
   7086c:	ldr	r3, [fp, #-16]
   70870:	mul	r2, r2, r3
   70874:	add	r1, r1, r2
   70878:	ldr	r2, [fp, #-12]
   7087c:	bl	12624 <memcmp@plt>
   70880:	cmp	r0, #0
   70884:	beq	708ec <__assert_fail@plt+0x5dd34>
   70888:	movw	r0, #63272	; 0xf728
   7088c:	movt	r0, #8
   70890:	ldr	r0, [r0]
   70894:	ldr	r1, [fp, #-4]
   70898:	ldr	r2, [fp, #-16]
   7089c:	add	r1, r1, r2, lsl #2
   708a0:	ldr	r1, [r1]
   708a4:	str	r0, [sp, #28]
   708a8:	mov	r0, r1
   708ac:	bl	4ac94 <__assert_fail@plt+0x380dc>
   708b0:	ldr	r1, [sp, #28]
   708b4:	str	r0, [sp, #24]
   708b8:	mov	r0, r1
   708bc:	movw	r1, #59421	; 0xe81d
   708c0:	movt	r1, #7
   708c4:	ldr	r2, [sp, #24]
   708c8:	bl	128c4 <fprintf@plt>
   708cc:	ldr	r1, [fp, #-8]
   708d0:	ldr	r2, [fp, #-12]
   708d4:	ldr	lr, [fp, #-16]
   708d8:	mul	r2, r2, lr
   708dc:	add	r1, r1, r2
   708e0:	str	r1, [fp, #-20]	; 0xffffffec
   708e4:	str	r0, [sp, #20]
   708e8:	b	70934 <__assert_fail@plt+0x5dd7c>
   708ec:	movw	r0, #63272	; 0xf728
   708f0:	movt	r0, #8
   708f4:	ldr	r0, [r0]
   708f8:	ldr	r1, [fp, #-4]
   708fc:	ldr	r2, [fp, #-16]
   70900:	add	r1, r1, r2, lsl #2
   70904:	ldr	r1, [r1]
   70908:	str	r0, [sp, #16]
   7090c:	mov	r0, r1
   70910:	bl	4ac94 <__assert_fail@plt+0x380dc>
   70914:	ldr	r1, [sp, #16]
   70918:	str	r0, [sp, #12]
   7091c:	mov	r0, r1
   70920:	movw	r1, #59429	; 0xe825
   70924:	movt	r1, #7
   70928:	ldr	r2, [sp, #12]
   7092c:	bl	128c4 <fprintf@plt>
   70930:	str	r0, [sp, #8]
   70934:	b	70938 <__assert_fail@plt+0x5dd80>
   70938:	ldr	r0, [fp, #-16]
   7093c:	add	r0, r0, #1
   70940:	str	r0, [fp, #-16]
   70944:	b	70838 <__assert_fail@plt+0x5dc80>
   70948:	movw	r0, #63272	; 0xf728
   7094c:	movt	r0, #8
   70950:	ldr	r1, [r0]
   70954:	movw	r0, #10
   70958:	bl	12a8c <putc@plt>
   7095c:	str	r0, [sp, #4]
   70960:	mov	sp, fp
   70964:	pop	{fp, pc}
   70968:	push	{fp, lr}
   7096c:	mov	fp, sp
   70970:	sub	sp, sp, #32
   70974:	ldr	ip, [fp, #12]
   70978:	ldr	lr, [fp, #8]
   7097c:	str	r0, [fp, #-8]
   70980:	str	r1, [fp, #-12]
   70984:	str	r2, [sp, #16]
   70988:	str	r3, [sp, #12]
   7098c:	ldr	r0, [fp, #-12]
   70990:	ldr	r1, [sp, #16]
   70994:	ldr	r2, [sp, #12]
   70998:	ldr	r3, [fp, #8]
   7099c:	str	lr, [sp, #4]
   709a0:	str	ip, [sp]
   709a4:	bl	705dc <__assert_fail@plt+0x5da24>
   709a8:	str	r0, [sp, #8]
   709ac:	ldr	r0, [sp, #8]
   709b0:	cmp	r0, #0
   709b4:	blt	709c4 <__assert_fail@plt+0x5de0c>
   709b8:	ldr	r0, [sp, #8]
   709bc:	str	r0, [fp, #-4]
   709c0:	b	709f4 <__assert_fail@plt+0x5de3c>
   709c4:	ldr	r0, [fp, #-8]
   709c8:	ldr	r1, [fp, #-12]
   709cc:	ldr	r2, [sp, #8]
   709d0:	bl	7073c <__assert_fail@plt+0x5db84>
   709d4:	ldr	r0, [sp, #16]
   709d8:	ldr	r1, [sp, #12]
   709dc:	ldr	r2, [fp, #8]
   709e0:	bl	707f0 <__assert_fail@plt+0x5dc38>
   709e4:	ldr	r0, [fp, #12]
   709e8:	blx	r0
   709ec:	mvn	r0, #0
   709f0:	str	r0, [fp, #-4]
   709f4:	ldr	r0, [fp, #-4]
   709f8:	mov	sp, fp
   709fc:	pop	{fp, pc}
   70a00:	push	{fp, lr}
   70a04:	mov	fp, sp
   70a08:	sub	sp, sp, #24
   70a0c:	str	r0, [fp, #-8]
   70a10:	str	r1, [sp, #12]
   70a14:	str	r2, [sp, #8]
   70a18:	str	r3, [sp, #4]
   70a1c:	movw	r0, #0
   70a20:	str	r0, [sp]
   70a24:	ldr	r0, [sp, #12]
   70a28:	ldr	r1, [sp]
   70a2c:	add	r0, r0, r1, lsl #2
   70a30:	ldr	r0, [r0]
   70a34:	movw	r1, #0
   70a38:	cmp	r0, r1
   70a3c:	beq	70a94 <__assert_fail@plt+0x5dedc>
   70a40:	ldr	r0, [fp, #-8]
   70a44:	ldr	r1, [sp, #8]
   70a48:	ldr	r2, [sp, #4]
   70a4c:	ldr	r3, [sp]
   70a50:	mul	r2, r2, r3
   70a54:	add	r1, r1, r2
   70a58:	ldr	r2, [sp, #4]
   70a5c:	bl	12624 <memcmp@plt>
   70a60:	cmp	r0, #0
   70a64:	bne	70a80 <__assert_fail@plt+0x5dec8>
   70a68:	ldr	r0, [sp, #12]
   70a6c:	ldr	r1, [sp]
   70a70:	add	r0, r0, r1, lsl #2
   70a74:	ldr	r0, [r0]
   70a78:	str	r0, [fp, #-4]
   70a7c:	b	70a9c <__assert_fail@plt+0x5dee4>
   70a80:	b	70a84 <__assert_fail@plt+0x5decc>
   70a84:	ldr	r0, [sp]
   70a88:	add	r0, r0, #1
   70a8c:	str	r0, [sp]
   70a90:	b	70a24 <__assert_fail@plt+0x5de6c>
   70a94:	movw	r0, #0
   70a98:	str	r0, [fp, #-4]
   70a9c:	ldr	r0, [fp, #-4]
   70aa0:	mov	sp, fp
   70aa4:	pop	{fp, pc}
   70aa8:	push	{fp, lr}
   70aac:	mov	fp, sp
   70ab0:	sub	sp, sp, #80	; 0x50
   70ab4:	str	r0, [fp, #-8]
   70ab8:	str	r1, [fp, #-12]
   70abc:	str	r2, [fp, #-16]
   70ac0:	ldr	r0, [fp, #-8]
   70ac4:	str	r0, [fp, #-20]	; 0xffffffec
   70ac8:	ldr	r0, [fp, #-16]
   70acc:	ldrsb	r0, [r0]
   70ad0:	cmp	r0, #0
   70ad4:	bne	70af0 <__assert_fail@plt+0x5df38>
   70ad8:	ldr	r0, [fp, #-8]
   70adc:	movw	r1, #0
   70ae0:	strb	r1, [r0]
   70ae4:	ldr	r0, [fp, #-8]
   70ae8:	str	r0, [fp, #-4]
   70aec:	b	70c38 <__assert_fail@plt+0x5e080>
   70af0:	movw	r0, #88	; 0x58
   70af4:	movt	r0, #9
   70af8:	ldr	r0, [r0]
   70afc:	cmp	r0, #0
   70b00:	bne	70b94 <__assert_fail@plt+0x5dfdc>
   70b04:	ldr	r1, [pc, #312]	; 70c44 <__assert_fail@plt+0x5e08c>
   70b08:	movw	r0, #49381	; 0xc0e5
   70b0c:	movt	r0, #7
   70b10:	bl	127b0 <open64@plt>
   70b14:	str	r0, [fp, #-28]	; 0xffffffe4
   70b18:	ldr	r0, [fp, #-28]	; 0xffffffe4
   70b1c:	cmp	r0, #0
   70b20:	bge	70b38 <__assert_fail@plt+0x5df80>
   70b24:	movw	r0, #88	; 0x58
   70b28:	movt	r0, #9
   70b2c:	mvn	r1, #0
   70b30:	str	r1, [r0]
   70b34:	b	70b90 <__assert_fail@plt+0x5dfd8>
   70b38:	add	r0, sp, #20
   70b3c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   70b40:	movw	r1, #59434	; 0xe82a
   70b44:	movt	r1, #7
   70b48:	bl	12a5c <sprintf@plt>
   70b4c:	add	r1, sp, #20
   70b50:	str	r0, [sp, #12]
   70b54:	mov	r0, r1
   70b58:	movw	r1, #0
   70b5c:	bl	12984 <access@plt>
   70b60:	cmp	r0, #0
   70b64:	movw	r0, #0
   70b68:	movne	r0, #1
   70b6c:	tst	r0, #1
   70b70:	mvn	r0, #0
   70b74:	moveq	r0, #1
   70b78:	movw	r1, #88	; 0x58
   70b7c:	movt	r1, #9
   70b80:	str	r0, [r1]
   70b84:	ldr	r0, [fp, #-28]	; 0xffffffe4
   70b88:	bl	12b70 <close@plt>
   70b8c:	str	r0, [sp, #8]
   70b90:	b	70b94 <__assert_fail@plt+0x5dfdc>
   70b94:	movw	r0, #88	; 0x58
   70b98:	movt	r0, #9
   70b9c:	ldr	r0, [r0]
   70ba0:	cmp	r0, #0
   70ba4:	bge	70bb4 <__assert_fail@plt+0x5dffc>
   70ba8:	movw	r0, #0
   70bac:	str	r0, [fp, #-4]
   70bb0:	b	70c38 <__assert_fail@plt+0x5e080>
   70bb4:	ldr	r0, [fp, #-16]
   70bb8:	bl	12888 <strlen@plt>
   70bbc:	add	r0, r0, #27
   70bc0:	str	r0, [sp, #16]
   70bc4:	ldr	r0, [sp, #16]
   70bc8:	movw	lr, #4032	; 0xfc0
   70bcc:	cmp	lr, r0
   70bd0:	bcs	70c00 <__assert_fail@plt+0x5e048>
   70bd4:	ldr	r0, [sp, #16]
   70bd8:	bl	549ac <__assert_fail@plt+0x41df4>
   70bdc:	str	r0, [fp, #-20]	; 0xffffffec
   70be0:	ldr	r0, [fp, #-20]	; 0xffffffec
   70be4:	movw	lr, #0
   70be8:	cmp	r0, lr
   70bec:	bne	70bfc <__assert_fail@plt+0x5e044>
   70bf0:	movw	r0, #0
   70bf4:	str	r0, [fp, #-4]
   70bf8:	b	70c38 <__assert_fail@plt+0x5e080>
   70bfc:	b	70c00 <__assert_fail@plt+0x5e048>
   70c00:	ldr	r0, [fp, #-20]	; 0xffffffec
   70c04:	ldr	r2, [fp, #-12]
   70c08:	movw	r1, #59457	; 0xe841
   70c0c:	movt	r1, #7
   70c10:	bl	12a5c <sprintf@plt>
   70c14:	str	r0, [fp, #-24]	; 0xffffffe8
   70c18:	ldr	r0, [fp, #-20]	; 0xffffffec
   70c1c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   70c20:	add	r0, r0, r1
   70c24:	ldr	r1, [fp, #-16]
   70c28:	bl	12738 <strcpy@plt>
   70c2c:	ldr	r1, [fp, #-20]	; 0xffffffec
   70c30:	str	r1, [fp, #-4]
   70c34:	str	r0, [sp, #4]
   70c38:	ldr	r0, [fp, #-4]
   70c3c:	mov	sp, fp
   70c40:	pop	{fp, pc}
   70c44:	andeq	r4, r8, r0, lsl #18
   70c48:	sub	sp, sp, #16
   70c4c:	str	r0, [sp, #12]
   70c50:	ldr	r0, [sp, #12]
   70c54:	str	r0, [sp, #8]
   70c58:	movw	r0, #0
   70c5c:	strb	r0, [sp, #3]
   70c60:	ldr	r0, [sp, #8]
   70c64:	ldrb	r0, [r0]
   70c68:	cmp	r0, #47	; 0x2f
   70c6c:	bne	70c80 <__assert_fail@plt+0x5e0c8>
   70c70:	ldr	r0, [sp, #8]
   70c74:	add	r0, r0, #1
   70c78:	str	r0, [sp, #8]
   70c7c:	b	70c60 <__assert_fail@plt+0x5e0a8>
   70c80:	ldr	r0, [sp, #8]
   70c84:	str	r0, [sp, #4]
   70c88:	ldr	r0, [sp, #4]
   70c8c:	ldrsb	r0, [r0]
   70c90:	cmp	r0, #0
   70c94:	beq	70ce8 <__assert_fail@plt+0x5e130>
   70c98:	ldr	r0, [sp, #4]
   70c9c:	ldrb	r0, [r0]
   70ca0:	cmp	r0, #47	; 0x2f
   70ca4:	bne	70cb4 <__assert_fail@plt+0x5e0fc>
   70ca8:	movw	r0, #1
   70cac:	strb	r0, [sp, #3]
   70cb0:	b	70cd4 <__assert_fail@plt+0x5e11c>
   70cb4:	ldrb	r0, [sp, #3]
   70cb8:	tst	r0, #1
   70cbc:	beq	70cd0 <__assert_fail@plt+0x5e118>
   70cc0:	ldr	r0, [sp, #4]
   70cc4:	str	r0, [sp, #8]
   70cc8:	movw	r0, #0
   70ccc:	strb	r0, [sp, #3]
   70cd0:	b	70cd4 <__assert_fail@plt+0x5e11c>
   70cd4:	b	70cd8 <__assert_fail@plt+0x5e120>
   70cd8:	ldr	r0, [sp, #4]
   70cdc:	add	r0, r0, #1
   70ce0:	str	r0, [sp, #4]
   70ce4:	b	70c88 <__assert_fail@plt+0x5e0d0>
   70ce8:	ldr	r0, [sp, #8]
   70cec:	add	sp, sp, #16
   70cf0:	bx	lr
   70cf4:	push	{fp, lr}
   70cf8:	mov	fp, sp
   70cfc:	sub	sp, sp, #16
   70d00:	str	r0, [fp, #-4]
   70d04:	movw	r0, #0
   70d08:	str	r0, [sp, #4]
   70d0c:	ldr	r0, [fp, #-4]
   70d10:	bl	12888 <strlen@plt>
   70d14:	str	r0, [sp, #8]
   70d18:	ldr	r0, [sp, #8]
   70d1c:	movw	r1, #1
   70d20:	cmp	r1, r0
   70d24:	movw	r0, #0
   70d28:	str	r0, [sp]
   70d2c:	bcs	70d54 <__assert_fail@plt+0x5e19c>
   70d30:	ldr	r0, [fp, #-4]
   70d34:	ldr	r1, [sp, #8]
   70d38:	sub	r1, r1, #1
   70d3c:	add	r0, r0, r1
   70d40:	ldrb	r0, [r0]
   70d44:	cmp	r0, #47	; 0x2f
   70d48:	movw	r0, #0
   70d4c:	moveq	r0, #1
   70d50:	str	r0, [sp]
   70d54:	ldr	r0, [sp]
   70d58:	tst	r0, #1
   70d5c:	beq	70d78 <__assert_fail@plt+0x5e1c0>
   70d60:	b	70d64 <__assert_fail@plt+0x5e1ac>
   70d64:	ldr	r0, [sp, #8]
   70d68:	mvn	r1, #0
   70d6c:	add	r0, r0, r1
   70d70:	str	r0, [sp, #8]
   70d74:	b	70d18 <__assert_fail@plt+0x5e160>
   70d78:	ldr	r0, [sp, #8]
   70d7c:	mov	sp, fp
   70d80:	pop	{fp, pc}
   70d84:	push	{r4, sl, fp, lr}
   70d88:	add	fp, sp, #8
   70d8c:	sub	sp, sp, #16
   70d90:	str	r0, [sp, #8]
   70d94:	str	r1, [sp, #12]
   70d98:	str	r2, [sp, #4]
   70d9c:	ldr	r0, [sp, #8]
   70da0:	ldr	r1, [sp, #12]
   70da4:	ldr	r2, [sp, #4]
   70da8:	rsb	r3, r2, #32
   70dac:	lsr	ip, r0, r3
   70db0:	orr	ip, ip, r1, lsl r2
   70db4:	sub	lr, r2, #32
   70db8:	cmp	lr, #0
   70dbc:	lslge	ip, r0, lr
   70dc0:	lsl	r4, r0, r2
   70dc4:	cmp	lr, #0
   70dc8:	movwge	r4, #0
   70dcc:	rsb	r2, r2, #64	; 0x40
   70dd0:	lsr	lr, r1, r2
   70dd4:	cmp	r3, #0
   70dd8:	movwge	lr, #0
   70ddc:	lsr	r0, r0, r2
   70de0:	rsb	r2, r2, #32
   70de4:	orr	r0, r0, r1, lsl r2
   70de8:	cmp	r3, #0
   70dec:	lsrge	r0, r1, r3
   70df0:	orr	r0, r4, r0
   70df4:	orr	r1, ip, lr
   70df8:	sub	sp, fp, #8
   70dfc:	pop	{r4, sl, fp, pc}
   70e00:	push	{r4, sl, fp, lr}
   70e04:	add	fp, sp, #8
   70e08:	sub	sp, sp, #16
   70e0c:	str	r0, [sp, #8]
   70e10:	str	r1, [sp, #12]
   70e14:	str	r2, [sp, #4]
   70e18:	ldr	r0, [sp, #8]
   70e1c:	ldr	r1, [sp, #12]
   70e20:	ldr	r2, [sp, #4]
   70e24:	lsr	r3, r1, r2
   70e28:	sub	ip, r2, #32
   70e2c:	cmp	ip, #0
   70e30:	movwge	r3, #0
   70e34:	lsr	lr, r0, r2
   70e38:	rsb	r4, r2, #32
   70e3c:	orr	lr, lr, r1, lsl r4
   70e40:	cmp	ip, #0
   70e44:	lsrge	lr, r1, ip
   70e48:	rsb	r2, r2, #64	; 0x40
   70e4c:	rsb	ip, r2, #32
   70e50:	lsr	ip, r0, ip
   70e54:	orr	r1, ip, r1, lsl r2
   70e58:	cmp	r4, #0
   70e5c:	lslge	r1, r0, r4
   70e60:	lsl	r0, r0, r2
   70e64:	cmp	r4, #0
   70e68:	movwge	r0, #0
   70e6c:	orr	r0, lr, r0
   70e70:	orr	r1, r3, r1
   70e74:	sub	sp, fp, #8
   70e78:	pop	{r4, sl, fp, pc}
   70e7c:	sub	sp, sp, #8
   70e80:	str	r0, [sp, #4]
   70e84:	str	r1, [sp]
   70e88:	ldr	r0, [sp, #4]
   70e8c:	ldr	r1, [sp]
   70e90:	lsl	r0, r0, r1
   70e94:	ldr	r1, [sp, #4]
   70e98:	ldr	r2, [sp]
   70e9c:	movw	r3, #32
   70ea0:	sub	r2, r3, r2
   70ea4:	lsr	r1, r1, r2
   70ea8:	orr	r0, r0, r1
   70eac:	add	sp, sp, #8
   70eb0:	bx	lr
   70eb4:	sub	sp, sp, #8
   70eb8:	str	r0, [sp, #4]
   70ebc:	str	r1, [sp]
   70ec0:	ldr	r0, [sp, #4]
   70ec4:	ldr	r1, [sp]
   70ec8:	lsr	r0, r0, r1
   70ecc:	ldr	r1, [sp, #4]
   70ed0:	ldr	r2, [sp]
   70ed4:	movw	r3, #32
   70ed8:	sub	r2, r3, r2
   70edc:	lsl	r1, r1, r2
   70ee0:	orr	r0, r0, r1
   70ee4:	add	sp, sp, #8
   70ee8:	bx	lr
   70eec:	sub	sp, sp, #8
   70ef0:	str	r0, [sp, #4]
   70ef4:	str	r1, [sp]
   70ef8:	ldr	r0, [sp, #4]
   70efc:	ldr	r1, [sp]
   70f00:	lsl	r0, r0, r1
   70f04:	ldr	r1, [sp, #4]
   70f08:	ldr	r2, [sp]
   70f0c:	movw	r3, #32
   70f10:	sub	r2, r3, r2
   70f14:	lsr	r1, r1, r2
   70f18:	orr	r0, r0, r1
   70f1c:	add	sp, sp, #8
   70f20:	bx	lr
   70f24:	sub	sp, sp, #8
   70f28:	str	r0, [sp, #4]
   70f2c:	str	r1, [sp]
   70f30:	ldr	r0, [sp, #4]
   70f34:	ldr	r1, [sp]
   70f38:	lsr	r0, r0, r1
   70f3c:	ldr	r1, [sp, #4]
   70f40:	ldr	r2, [sp]
   70f44:	movw	r3, #32
   70f48:	sub	r2, r3, r2
   70f4c:	lsl	r1, r1, r2
   70f50:	orr	r0, r0, r1
   70f54:	add	sp, sp, #8
   70f58:	bx	lr
   70f5c:	sub	sp, sp, #8
   70f60:	strh	r0, [sp, #6]
   70f64:	str	r1, [sp]
   70f68:	ldrh	r0, [sp, #6]
   70f6c:	ldr	r1, [sp]
   70f70:	lsl	r0, r0, r1
   70f74:	ldrh	r1, [sp, #6]
   70f78:	ldr	r2, [sp]
   70f7c:	movw	r3, #16
   70f80:	sub	r2, r3, r2
   70f84:	lsr	r1, r1, r2
   70f88:	orr	r0, r0, r1
   70f8c:	movw	r1, #65535	; 0xffff
   70f90:	and	r0, r0, r1
   70f94:	uxth	r0, r0
   70f98:	add	sp, sp, #8
   70f9c:	bx	lr
   70fa0:	sub	sp, sp, #8
   70fa4:	strh	r0, [sp, #6]
   70fa8:	str	r1, [sp]
   70fac:	ldrh	r0, [sp, #6]
   70fb0:	ldr	r1, [sp]
   70fb4:	lsr	r0, r0, r1
   70fb8:	ldrh	r1, [sp, #6]
   70fbc:	ldr	r2, [sp]
   70fc0:	movw	r3, #16
   70fc4:	sub	r2, r3, r2
   70fc8:	lsl	r1, r1, r2
   70fcc:	orr	r0, r0, r1
   70fd0:	movw	r1, #65535	; 0xffff
   70fd4:	and	r0, r0, r1
   70fd8:	uxth	r0, r0
   70fdc:	add	sp, sp, #8
   70fe0:	bx	lr
   70fe4:	sub	sp, sp, #8
   70fe8:	strb	r0, [sp, #7]
   70fec:	str	r1, [sp]
   70ff0:	ldrb	r0, [sp, #7]
   70ff4:	ldr	r1, [sp]
   70ff8:	lsl	r0, r0, r1
   70ffc:	ldrb	r1, [sp, #7]
   71000:	ldr	r2, [sp]
   71004:	movw	r3, #8
   71008:	sub	r2, r3, r2
   7100c:	lsr	r1, r1, r2
   71010:	orr	r0, r0, r1
   71014:	and	r0, r0, #255	; 0xff
   71018:	and	r0, r0, #255	; 0xff
   7101c:	add	sp, sp, #8
   71020:	bx	lr
   71024:	sub	sp, sp, #8
   71028:	strb	r0, [sp, #7]
   7102c:	str	r1, [sp]
   71030:	ldrb	r0, [sp, #7]
   71034:	ldr	r1, [sp]
   71038:	lsr	r0, r0, r1
   7103c:	ldrb	r1, [sp, #7]
   71040:	ldr	r2, [sp]
   71044:	movw	r3, #8
   71048:	sub	r2, r3, r2
   7104c:	lsl	r1, r1, r2
   71050:	orr	r0, r0, r1
   71054:	and	r0, r0, #255	; 0xff
   71058:	and	r0, r0, #255	; 0xff
   7105c:	add	sp, sp, #8
   71060:	bx	lr
   71064:	sub	sp, sp, #12
   71068:	str	r0, [sp, #4]
   7106c:	ldr	r0, [sp, #4]
   71070:	sub	r1, r0, #48	; 0x30
   71074:	cmp	r1, #10
   71078:	str	r0, [sp]
   7107c:	bcc	710ac <__assert_fail@plt+0x5e4f4>
   71080:	b	71084 <__assert_fail@plt+0x5e4cc>
   71084:	ldr	r0, [sp]
   71088:	sub	r1, r0, #65	; 0x41
   7108c:	cmp	r1, #26
   71090:	bcc	710ac <__assert_fail@plt+0x5e4f4>
   71094:	b	71098 <__assert_fail@plt+0x5e4e0>
   71098:	ldr	r0, [sp]
   7109c:	sub	r1, r0, #97	; 0x61
   710a0:	cmp	r1, #25
   710a4:	bhi	710bc <__assert_fail@plt+0x5e504>
   710a8:	b	710ac <__assert_fail@plt+0x5e4f4>
   710ac:	movw	r0, #1
   710b0:	and	r0, r0, #1
   710b4:	strb	r0, [sp, #11]
   710b8:	b	710c8 <__assert_fail@plt+0x5e510>
   710bc:	movw	r0, #0
   710c0:	and	r0, r0, #1
   710c4:	strb	r0, [sp, #11]
   710c8:	ldrb	r0, [sp, #11]
   710cc:	and	r0, r0, #1
   710d0:	add	sp, sp, #12
   710d4:	bx	lr
   710d8:	sub	sp, sp, #12
   710dc:	str	r0, [sp, #4]
   710e0:	ldr	r0, [sp, #4]
   710e4:	sub	r1, r0, #65	; 0x41
   710e8:	cmp	r1, #26
   710ec:	str	r0, [sp]
   710f0:	bcc	7110c <__assert_fail@plt+0x5e554>
   710f4:	b	710f8 <__assert_fail@plt+0x5e540>
   710f8:	ldr	r0, [sp]
   710fc:	sub	r1, r0, #97	; 0x61
   71100:	cmp	r1, #25
   71104:	bhi	7111c <__assert_fail@plt+0x5e564>
   71108:	b	7110c <__assert_fail@plt+0x5e554>
   7110c:	movw	r0, #1
   71110:	and	r0, r0, #1
   71114:	strb	r0, [sp, #11]
   71118:	b	71128 <__assert_fail@plt+0x5e570>
   7111c:	movw	r0, #0
   71120:	and	r0, r0, #1
   71124:	strb	r0, [sp, #11]
   71128:	ldrb	r0, [sp, #11]
   7112c:	and	r0, r0, #1
   71130:	add	sp, sp, #12
   71134:	bx	lr
   71138:	sub	sp, sp, #8
   7113c:	str	r0, [sp]
   71140:	ldr	r0, [sp]
   71144:	cmp	r0, #127	; 0x7f
   71148:	bhi	71160 <__assert_fail@plt+0x5e5a8>
   7114c:	b	71150 <__assert_fail@plt+0x5e598>
   71150:	movw	r0, #1
   71154:	and	r0, r0, #1
   71158:	strb	r0, [sp, #7]
   7115c:	b	7116c <__assert_fail@plt+0x5e5b4>
   71160:	movw	r0, #0
   71164:	and	r0, r0, #1
   71168:	strb	r0, [sp, #7]
   7116c:	ldrb	r0, [sp, #7]
   71170:	and	r0, r0, #1
   71174:	add	sp, sp, #8
   71178:	bx	lr
   7117c:	sub	sp, sp, #8
   71180:	str	r0, [sp, #4]
   71184:	ldr	r0, [sp, #4]
   71188:	cmp	r0, #32
   7118c:	movw	r0, #1
   71190:	str	r0, [sp]
   71194:	beq	711ac <__assert_fail@plt+0x5e5f4>
   71198:	ldr	r0, [sp, #4]
   7119c:	cmp	r0, #9
   711a0:	movw	r0, #0
   711a4:	moveq	r0, #1
   711a8:	str	r0, [sp]
   711ac:	ldr	r0, [sp]
   711b0:	and	r0, r0, #1
   711b4:	add	sp, sp, #8
   711b8:	bx	lr
   711bc:	sub	sp, sp, #12
   711c0:	str	r0, [sp, #4]
   711c4:	ldr	r0, [sp, #4]
   711c8:	cmp	r0, #32
   711cc:	str	r0, [sp]
   711d0:	bcc	711e8 <__assert_fail@plt+0x5e630>
   711d4:	b	711d8 <__assert_fail@plt+0x5e620>
   711d8:	ldr	r0, [sp]
   711dc:	cmp	r0, #127	; 0x7f
   711e0:	bne	711f8 <__assert_fail@plt+0x5e640>
   711e4:	b	711e8 <__assert_fail@plt+0x5e630>
   711e8:	movw	r0, #1
   711ec:	and	r0, r0, #1
   711f0:	strb	r0, [sp, #11]
   711f4:	b	71204 <__assert_fail@plt+0x5e64c>
   711f8:	movw	r0, #0
   711fc:	and	r0, r0, #1
   71200:	strb	r0, [sp, #11]
   71204:	ldrb	r0, [sp, #11]
   71208:	and	r0, r0, #1
   7120c:	add	sp, sp, #12
   71210:	bx	lr
   71214:	sub	sp, sp, #8
   71218:	str	r0, [sp]
   7121c:	ldr	r0, [sp]
   71220:	sub	r0, r0, #48	; 0x30
   71224:	cmp	r0, #9
   71228:	bhi	71240 <__assert_fail@plt+0x5e688>
   7122c:	b	71230 <__assert_fail@plt+0x5e678>
   71230:	movw	r0, #1
   71234:	and	r0, r0, #1
   71238:	strb	r0, [sp, #7]
   7123c:	b	7124c <__assert_fail@plt+0x5e694>
   71240:	movw	r0, #0
   71244:	and	r0, r0, #1
   71248:	strb	r0, [sp, #7]
   7124c:	ldrb	r0, [sp, #7]
   71250:	and	r0, r0, #1
   71254:	add	sp, sp, #8
   71258:	bx	lr
   7125c:	sub	sp, sp, #8
   71260:	str	r0, [sp]
   71264:	ldr	r0, [sp]
   71268:	sub	r0, r0, #33	; 0x21
   7126c:	cmp	r0, #93	; 0x5d
   71270:	bhi	71288 <__assert_fail@plt+0x5e6d0>
   71274:	b	71278 <__assert_fail@plt+0x5e6c0>
   71278:	movw	r0, #1
   7127c:	and	r0, r0, #1
   71280:	strb	r0, [sp, #7]
   71284:	b	71294 <__assert_fail@plt+0x5e6dc>
   71288:	movw	r0, #0
   7128c:	and	r0, r0, #1
   71290:	strb	r0, [sp, #7]
   71294:	ldrb	r0, [sp, #7]
   71298:	and	r0, r0, #1
   7129c:	add	sp, sp, #8
   712a0:	bx	lr
   712a4:	sub	sp, sp, #8
   712a8:	str	r0, [sp]
   712ac:	ldr	r0, [sp]
   712b0:	sub	r0, r0, #97	; 0x61
   712b4:	cmp	r0, #25
   712b8:	bhi	712d0 <__assert_fail@plt+0x5e718>
   712bc:	b	712c0 <__assert_fail@plt+0x5e708>
   712c0:	movw	r0, #1
   712c4:	and	r0, r0, #1
   712c8:	strb	r0, [sp, #7]
   712cc:	b	712dc <__assert_fail@plt+0x5e724>
   712d0:	movw	r0, #0
   712d4:	and	r0, r0, #1
   712d8:	strb	r0, [sp, #7]
   712dc:	ldrb	r0, [sp, #7]
   712e0:	and	r0, r0, #1
   712e4:	add	sp, sp, #8
   712e8:	bx	lr
   712ec:	sub	sp, sp, #8
   712f0:	str	r0, [sp]
   712f4:	ldr	r0, [sp]
   712f8:	sub	r0, r0, #32
   712fc:	cmp	r0, #94	; 0x5e
   71300:	bhi	71318 <__assert_fail@plt+0x5e760>
   71304:	b	71308 <__assert_fail@plt+0x5e750>
   71308:	movw	r0, #1
   7130c:	and	r0, r0, #1
   71310:	strb	r0, [sp, #7]
   71314:	b	71324 <__assert_fail@plt+0x5e76c>
   71318:	movw	r0, #0
   7131c:	and	r0, r0, #1
   71320:	strb	r0, [sp, #7]
   71324:	ldrb	r0, [sp, #7]
   71328:	and	r0, r0, #1
   7132c:	add	sp, sp, #8
   71330:	bx	lr
   71334:	sub	sp, sp, #12
   71338:	str	r0, [sp, #4]
   7133c:	ldr	r0, [sp, #4]
   71340:	sub	r0, r0, #33	; 0x21
   71344:	cmp	r0, #93	; 0x5d
   71348:	str	r0, [sp]
   7134c:	bhi	714e8 <__assert_fail@plt+0x5e930>
   71350:	add	r0, pc, #8
   71354:	ldr	r1, [sp]
   71358:	ldr	r0, [r0, r1, lsl #2]
   7135c:	mov	pc, r0
   71360:	ldrdeq	r1, [r7], -r8
   71364:	ldrdeq	r1, [r7], -r8
   71368:	ldrdeq	r1, [r7], -r8
   7136c:	ldrdeq	r1, [r7], -r8
   71370:	ldrdeq	r1, [r7], -r8
   71374:	ldrdeq	r1, [r7], -r8
   71378:	ldrdeq	r1, [r7], -r8
   7137c:	ldrdeq	r1, [r7], -r8
   71380:	ldrdeq	r1, [r7], -r8
   71384:	ldrdeq	r1, [r7], -r8
   71388:	ldrdeq	r1, [r7], -r8
   7138c:	ldrdeq	r1, [r7], -r8
   71390:	ldrdeq	r1, [r7], -r8
   71394:	ldrdeq	r1, [r7], -r8
   71398:	ldrdeq	r1, [r7], -r8
   7139c:	andeq	r1, r7, r8, ror #9
   713a0:	andeq	r1, r7, r8, ror #9
   713a4:	andeq	r1, r7, r8, ror #9
   713a8:	andeq	r1, r7, r8, ror #9
   713ac:	andeq	r1, r7, r8, ror #9
   713b0:	andeq	r1, r7, r8, ror #9
   713b4:	andeq	r1, r7, r8, ror #9
   713b8:	andeq	r1, r7, r8, ror #9
   713bc:	andeq	r1, r7, r8, ror #9
   713c0:	andeq	r1, r7, r8, ror #9
   713c4:	ldrdeq	r1, [r7], -r8
   713c8:	ldrdeq	r1, [r7], -r8
   713cc:	ldrdeq	r1, [r7], -r8
   713d0:	ldrdeq	r1, [r7], -r8
   713d4:	ldrdeq	r1, [r7], -r8
   713d8:	ldrdeq	r1, [r7], -r8
   713dc:	ldrdeq	r1, [r7], -r8
   713e0:	andeq	r1, r7, r8, ror #9
   713e4:	andeq	r1, r7, r8, ror #9
   713e8:	andeq	r1, r7, r8, ror #9
   713ec:	andeq	r1, r7, r8, ror #9
   713f0:	andeq	r1, r7, r8, ror #9
   713f4:	andeq	r1, r7, r8, ror #9
   713f8:	andeq	r1, r7, r8, ror #9
   713fc:	andeq	r1, r7, r8, ror #9
   71400:	andeq	r1, r7, r8, ror #9
   71404:	andeq	r1, r7, r8, ror #9
   71408:	andeq	r1, r7, r8, ror #9
   7140c:	andeq	r1, r7, r8, ror #9
   71410:	andeq	r1, r7, r8, ror #9
   71414:	andeq	r1, r7, r8, ror #9
   71418:	andeq	r1, r7, r8, ror #9
   7141c:	andeq	r1, r7, r8, ror #9
   71420:	andeq	r1, r7, r8, ror #9
   71424:	andeq	r1, r7, r8, ror #9
   71428:	andeq	r1, r7, r8, ror #9
   7142c:	andeq	r1, r7, r8, ror #9
   71430:	andeq	r1, r7, r8, ror #9
   71434:	andeq	r1, r7, r8, ror #9
   71438:	andeq	r1, r7, r8, ror #9
   7143c:	andeq	r1, r7, r8, ror #9
   71440:	andeq	r1, r7, r8, ror #9
   71444:	andeq	r1, r7, r8, ror #9
   71448:	ldrdeq	r1, [r7], -r8
   7144c:	ldrdeq	r1, [r7], -r8
   71450:	ldrdeq	r1, [r7], -r8
   71454:	ldrdeq	r1, [r7], -r8
   71458:	ldrdeq	r1, [r7], -r8
   7145c:	ldrdeq	r1, [r7], -r8
   71460:	andeq	r1, r7, r8, ror #9
   71464:	andeq	r1, r7, r8, ror #9
   71468:	andeq	r1, r7, r8, ror #9
   7146c:	andeq	r1, r7, r8, ror #9
   71470:	andeq	r1, r7, r8, ror #9
   71474:	andeq	r1, r7, r8, ror #9
   71478:	andeq	r1, r7, r8, ror #9
   7147c:	andeq	r1, r7, r8, ror #9
   71480:	andeq	r1, r7, r8, ror #9
   71484:	andeq	r1, r7, r8, ror #9
   71488:	andeq	r1, r7, r8, ror #9
   7148c:	andeq	r1, r7, r8, ror #9
   71490:	andeq	r1, r7, r8, ror #9
   71494:	andeq	r1, r7, r8, ror #9
   71498:	andeq	r1, r7, r8, ror #9
   7149c:	andeq	r1, r7, r8, ror #9
   714a0:	andeq	r1, r7, r8, ror #9
   714a4:	andeq	r1, r7, r8, ror #9
   714a8:	andeq	r1, r7, r8, ror #9
   714ac:	andeq	r1, r7, r8, ror #9
   714b0:	andeq	r1, r7, r8, ror #9
   714b4:	andeq	r1, r7, r8, ror #9
   714b8:	andeq	r1, r7, r8, ror #9
   714bc:	andeq	r1, r7, r8, ror #9
   714c0:	andeq	r1, r7, r8, ror #9
   714c4:	andeq	r1, r7, r8, ror #9
   714c8:	ldrdeq	r1, [r7], -r8
   714cc:	ldrdeq	r1, [r7], -r8
   714d0:	ldrdeq	r1, [r7], -r8
   714d4:	ldrdeq	r1, [r7], -r8
   714d8:	movw	r0, #1
   714dc:	and	r0, r0, #1
   714e0:	strb	r0, [sp, #11]
   714e4:	b	714f4 <__assert_fail@plt+0x5e93c>
   714e8:	movw	r0, #0
   714ec:	and	r0, r0, #1
   714f0:	strb	r0, [sp, #11]
   714f4:	ldrb	r0, [sp, #11]
   714f8:	and	r0, r0, #1
   714fc:	add	sp, sp, #12
   71500:	bx	lr
   71504:	sub	sp, sp, #12
   71508:	str	r0, [sp, #4]
   7150c:	ldr	r0, [sp, #4]
   71510:	sub	r1, r0, #9
   71514:	cmp	r1, #5
   71518:	str	r0, [sp]
   7151c:	bcc	71534 <__assert_fail@plt+0x5e97c>
   71520:	b	71524 <__assert_fail@plt+0x5e96c>
   71524:	ldr	r0, [sp]
   71528:	cmp	r0, #32
   7152c:	bne	71544 <__assert_fail@plt+0x5e98c>
   71530:	b	71534 <__assert_fail@plt+0x5e97c>
   71534:	movw	r0, #1
   71538:	and	r0, r0, #1
   7153c:	strb	r0, [sp, #11]
   71540:	b	71550 <__assert_fail@plt+0x5e998>
   71544:	movw	r0, #0
   71548:	and	r0, r0, #1
   7154c:	strb	r0, [sp, #11]
   71550:	ldrb	r0, [sp, #11]
   71554:	and	r0, r0, #1
   71558:	add	sp, sp, #12
   7155c:	bx	lr
   71560:	sub	sp, sp, #8
   71564:	str	r0, [sp]
   71568:	ldr	r0, [sp]
   7156c:	sub	r0, r0, #65	; 0x41
   71570:	cmp	r0, #25
   71574:	bhi	7158c <__assert_fail@plt+0x5e9d4>
   71578:	b	7157c <__assert_fail@plt+0x5e9c4>
   7157c:	movw	r0, #1
   71580:	and	r0, r0, #1
   71584:	strb	r0, [sp, #7]
   71588:	b	71598 <__assert_fail@plt+0x5e9e0>
   7158c:	movw	r0, #0
   71590:	and	r0, r0, #1
   71594:	strb	r0, [sp, #7]
   71598:	ldrb	r0, [sp, #7]
   7159c:	and	r0, r0, #1
   715a0:	add	sp, sp, #8
   715a4:	bx	lr
   715a8:	sub	sp, sp, #12
   715ac:	str	r0, [sp, #4]
   715b0:	ldr	r0, [sp, #4]
   715b4:	sub	r1, r0, #48	; 0x30
   715b8:	cmp	r1, #10
   715bc:	str	r0, [sp]
   715c0:	bcc	715f0 <__assert_fail@plt+0x5ea38>
   715c4:	b	715c8 <__assert_fail@plt+0x5ea10>
   715c8:	ldr	r0, [sp]
   715cc:	sub	r1, r0, #65	; 0x41
   715d0:	cmp	r1, #6
   715d4:	bcc	715f0 <__assert_fail@plt+0x5ea38>
   715d8:	b	715dc <__assert_fail@plt+0x5ea24>
   715dc:	ldr	r0, [sp]
   715e0:	sub	r1, r0, #97	; 0x61
   715e4:	cmp	r1, #5
   715e8:	bhi	71600 <__assert_fail@plt+0x5ea48>
   715ec:	b	715f0 <__assert_fail@plt+0x5ea38>
   715f0:	movw	r0, #1
   715f4:	and	r0, r0, #1
   715f8:	strb	r0, [sp, #11]
   715fc:	b	7160c <__assert_fail@plt+0x5ea54>
   71600:	movw	r0, #0
   71604:	and	r0, r0, #1
   71608:	strb	r0, [sp, #11]
   7160c:	ldrb	r0, [sp, #11]
   71610:	and	r0, r0, #1
   71614:	add	sp, sp, #12
   71618:	bx	lr
   7161c:	sub	sp, sp, #8
   71620:	str	r0, [sp]
   71624:	ldr	r0, [sp]
   71628:	sub	r0, r0, #65	; 0x41
   7162c:	cmp	r0, #25
   71630:	bhi	7164c <__assert_fail@plt+0x5ea94>
   71634:	b	71638 <__assert_fail@plt+0x5ea80>
   71638:	ldr	r0, [sp]
   7163c:	sub	r0, r0, #65	; 0x41
   71640:	add	r0, r0, #97	; 0x61
   71644:	str	r0, [sp, #4]
   71648:	b	71654 <__assert_fail@plt+0x5ea9c>
   7164c:	ldr	r0, [sp]
   71650:	str	r0, [sp, #4]
   71654:	ldr	r0, [sp, #4]
   71658:	add	sp, sp, #8
   7165c:	bx	lr
   71660:	sub	sp, sp, #8
   71664:	str	r0, [sp]
   71668:	ldr	r0, [sp]
   7166c:	sub	r0, r0, #97	; 0x61
   71670:	cmp	r0, #25
   71674:	bhi	71690 <__assert_fail@plt+0x5ead8>
   71678:	b	7167c <__assert_fail@plt+0x5eac4>
   7167c:	ldr	r0, [sp]
   71680:	sub	r0, r0, #97	; 0x61
   71684:	add	r0, r0, #65	; 0x41
   71688:	str	r0, [sp, #4]
   7168c:	b	71698 <__assert_fail@plt+0x5eae0>
   71690:	ldr	r0, [sp]
   71694:	str	r0, [sp, #4]
   71698:	ldr	r0, [sp, #4]
   7169c:	add	sp, sp, #8
   716a0:	bx	lr
   716a4:	push	{fp, lr}
   716a8:	mov	fp, sp
   716ac:	sub	sp, sp, #24
   716b0:	str	r0, [fp, #-8]
   716b4:	str	r1, [sp, #12]
   716b8:	ldr	r0, [fp, #-8]
   716bc:	str	r0, [sp, #8]
   716c0:	ldr	r0, [sp, #12]
   716c4:	str	r0, [sp, #4]
   716c8:	ldr	r0, [sp, #8]
   716cc:	ldr	r1, [sp, #4]
   716d0:	cmp	r0, r1
   716d4:	bne	716e4 <__assert_fail@plt+0x5eb2c>
   716d8:	movw	r0, #0
   716dc:	str	r0, [fp, #-4]
   716e0:	b	71750 <__assert_fail@plt+0x5eb98>
   716e4:	b	716e8 <__assert_fail@plt+0x5eb30>
   716e8:	ldr	r0, [sp, #8]
   716ec:	ldrb	r0, [r0]
   716f0:	bl	7161c <__assert_fail@plt+0x5ea64>
   716f4:	strb	r0, [sp, #3]
   716f8:	ldr	r0, [sp, #4]
   716fc:	ldrb	r0, [r0]
   71700:	bl	7161c <__assert_fail@plt+0x5ea64>
   71704:	strb	r0, [sp, #2]
   71708:	ldrb	r0, [sp, #3]
   7170c:	cmp	r0, #0
   71710:	bne	71718 <__assert_fail@plt+0x5eb60>
   71714:	b	71740 <__assert_fail@plt+0x5eb88>
   71718:	ldr	r0, [sp, #8]
   7171c:	add	r0, r0, #1
   71720:	str	r0, [sp, #8]
   71724:	ldr	r0, [sp, #4]
   71728:	add	r0, r0, #1
   7172c:	str	r0, [sp, #4]
   71730:	ldrb	r0, [sp, #3]
   71734:	ldrb	r1, [sp, #2]
   71738:	cmp	r0, r1
   7173c:	beq	716e8 <__assert_fail@plt+0x5eb30>
   71740:	ldrb	r0, [sp, #3]
   71744:	ldrb	r1, [sp, #2]
   71748:	sub	r0, r0, r1
   7174c:	str	r0, [fp, #-4]
   71750:	ldr	r0, [fp, #-4]
   71754:	mov	sp, fp
   71758:	pop	{fp, pc}
   7175c:	push	{fp, lr}
   71760:	mov	fp, sp
   71764:	sub	sp, sp, #16
   71768:	str	r0, [sp, #8]
   7176c:	ldr	r0, [sp, #8]
   71770:	bl	12750 <__fpending@plt>
   71774:	cmp	r0, #0
   71778:	movw	r0, #0
   7177c:	movne	r0, #1
   71780:	and	r0, r0, #1
   71784:	strb	r0, [sp, #7]
   71788:	ldr	r0, [sp, #8]
   7178c:	bl	12588 <ferror@plt>
   71790:	cmp	r0, #0
   71794:	movw	r0, #0
   71798:	movne	r0, #1
   7179c:	and	r0, r0, #1
   717a0:	strb	r0, [sp, #6]
   717a4:	ldr	r0, [sp, #8]
   717a8:	bl	12990 <fclose@plt>
   717ac:	cmp	r0, #0
   717b0:	movw	r0, #0
   717b4:	movne	r0, #1
   717b8:	and	r0, r0, #1
   717bc:	strb	r0, [sp, #5]
   717c0:	ldrb	r0, [sp, #6]
   717c4:	tst	r0, #1
   717c8:	bne	717f4 <__assert_fail@plt+0x5ec3c>
   717cc:	ldrb	r0, [sp, #5]
   717d0:	tst	r0, #1
   717d4:	beq	71818 <__assert_fail@plt+0x5ec60>
   717d8:	ldrb	r0, [sp, #7]
   717dc:	tst	r0, #1
   717e0:	bne	717f4 <__assert_fail@plt+0x5ec3c>
   717e4:	bl	128d0 <__errno_location@plt>
   717e8:	ldr	r0, [r0]
   717ec:	cmp	r0, #9
   717f0:	beq	71818 <__assert_fail@plt+0x5ec60>
   717f4:	ldrb	r0, [sp, #5]
   717f8:	tst	r0, #1
   717fc:	bne	7180c <__assert_fail@plt+0x5ec54>
   71800:	bl	128d0 <__errno_location@plt>
   71804:	movw	lr, #0
   71808:	str	lr, [r0]
   7180c:	mvn	r0, #0
   71810:	str	r0, [fp, #-4]
   71814:	b	71820 <__assert_fail@plt+0x5ec68>
   71818:	movw	r0, #0
   7181c:	str	r0, [fp, #-4]
   71820:	ldr	r0, [fp, #-4]
   71824:	mov	sp, fp
   71828:	pop	{fp, pc}
   7182c:	sub	sp, sp, #4
   71830:	ldr	r1, [pc, #32]	; 71858 <__assert_fail@plt+0x5eca0>
   71834:	str	r0, [sp]
   71838:	ldr	r0, [sp]
   7183c:	mov	r2, #0
   71840:	str	r2, [r0, #20]
   71844:	str	r2, [r0, #16]
   71848:	ldr	r0, [sp]
   7184c:	str	r1, [r0, #24]
   71850:	add	sp, sp, #4
   71854:	bx	lr
   71858:	addseq	pc, r5, r6, lsl r6	; <UNPREDICTABLE>
   7185c:	push	{fp, lr}
   71860:	mov	fp, sp
   71864:	sub	sp, sp, #16
   71868:	ldr	r2, [pc, #364]	; 719dc <__assert_fail@plt+0x5ee24>
   7186c:	str	r0, [sp, #8]
   71870:	str	r1, [sp, #4]
   71874:	ldr	r0, [sp, #8]
   71878:	ldr	r0, [r0, #24]
   7187c:	cmp	r0, r2
   71880:	bne	71888 <__assert_fail@plt+0x5ecd0>
   71884:	b	718a8 <__assert_fail@plt+0x5ecf0>
   71888:	movw	r0, #59475	; 0xe853
   7188c:	movt	r0, #7
   71890:	movw	r1, #59499	; 0xe86b
   71894:	movt	r1, #7
   71898:	movw	r2, #60	; 0x3c
   7189c:	movw	r3, #59513	; 0xe879
   718a0:	movt	r3, #7
   718a4:	bl	12bb8 <__assert_fail@plt>
   718a8:	ldr	r0, [sp, #8]
   718ac:	ldr	r1, [r0, #16]
   718b0:	ldr	r0, [r0, #20]
   718b4:	orr	r0, r1, r0
   718b8:	cmp	r0, #0
   718bc:	beq	71934 <__assert_fail@plt+0x5ed7c>
   718c0:	b	718c4 <__assert_fail@plt+0x5ed0c>
   718c4:	ldr	r0, [sp, #4]
   718c8:	ldr	r1, [r0, #96]	; 0x60
   718cc:	ldr	r0, [r0, #100]	; 0x64
   718d0:	ldr	r2, [sp, #8]
   718d4:	ldr	r3, [r2]
   718d8:	ldr	r2, [r2, #4]
   718dc:	eor	r0, r0, r2
   718e0:	eor	r1, r1, r3
   718e4:	orr	r0, r1, r0
   718e8:	cmp	r0, #0
   718ec:	bne	71934 <__assert_fail@plt+0x5ed7c>
   718f0:	b	718f4 <__assert_fail@plt+0x5ed3c>
   718f4:	ldr	r0, [sp, #4]
   718f8:	ldr	r1, [r0]
   718fc:	ldr	r0, [r0, #4]
   71900:	ldr	r2, [sp, #8]
   71904:	ldr	r3, [r2, #8]
   71908:	ldr	r2, [r2, #12]
   7190c:	eor	r0, r0, r2
   71910:	eor	r1, r1, r3
   71914:	orr	r0, r1, r0
   71918:	cmp	r0, #0
   7191c:	bne	71934 <__assert_fail@plt+0x5ed7c>
   71920:	b	71924 <__assert_fail@plt+0x5ed6c>
   71924:	movw	r0, #1
   71928:	and	r0, r0, #1
   7192c:	strb	r0, [fp, #-1]
   71930:	b	719cc <__assert_fail@plt+0x5ee14>
   71934:	ldr	r0, [sp, #8]
   71938:	ldr	r1, [r0, #16]
   7193c:	ldr	r2, [r0, #20]
   71940:	adds	r1, r1, #1
   71944:	adc	r2, r2, #0
   71948:	str	r1, [r0, #16]
   7194c:	str	r2, [r0, #20]
   71950:	mov	r0, r1
   71954:	mov	r1, r2
   71958:	bl	719e0 <__assert_fail@plt+0x5ee28>
   7195c:	tst	r0, #1
   71960:	beq	719c0 <__assert_fail@plt+0x5ee08>
   71964:	ldr	r0, [sp, #8]
   71968:	ldr	r1, [r0, #16]
   7196c:	ldr	r0, [r0, #20]
   71970:	orr	r0, r1, r0
   71974:	cmp	r0, #0
   71978:	bne	71990 <__assert_fail@plt+0x5edd8>
   7197c:	b	71980 <__assert_fail@plt+0x5edc8>
   71980:	movw	r0, #1
   71984:	and	r0, r0, #1
   71988:	strb	r0, [fp, #-1]
   7198c:	b	719cc <__assert_fail@plt+0x5ee14>
   71990:	ldr	r0, [sp, #4]
   71994:	ldr	r1, [r0]
   71998:	ldr	r0, [r0, #4]
   7199c:	ldr	r2, [sp, #8]
   719a0:	str	r0, [r2, #12]
   719a4:	str	r1, [r2, #8]
   719a8:	ldr	r0, [sp, #4]
   719ac:	ldr	r1, [r0, #96]	; 0x60
   719b0:	ldr	r0, [r0, #100]	; 0x64
   719b4:	ldr	r2, [sp, #8]
   719b8:	str	r0, [r2, #4]
   719bc:	str	r1, [r2]
   719c0:	movw	r0, #0
   719c4:	and	r0, r0, #1
   719c8:	strb	r0, [fp, #-1]
   719cc:	ldrb	r0, [fp, #-1]
   719d0:	and	r0, r0, #1
   719d4:	mov	sp, fp
   719d8:	pop	{fp, pc}
   719dc:	addseq	pc, r5, r6, lsl r6	; <UNPREDICTABLE>
   719e0:	sub	sp, sp, #8
   719e4:	str	r0, [sp]
   719e8:	str	r1, [sp, #4]
   719ec:	ldr	r0, [sp]
   719f0:	ldr	r1, [sp, #4]
   719f4:	subs	r2, r0, #1
   719f8:	sbc	r3, r1, #0
   719fc:	and	r0, r0, r2
   71a00:	and	r1, r1, r3
   71a04:	orr	r0, r0, r1
   71a08:	clz	r0, r0
   71a0c:	lsr	r0, r0, #5
   71a10:	and	r0, r0, #1
   71a14:	add	sp, sp, #8
   71a18:	bx	lr
   71a1c:	push	{fp, lr}
   71a20:	mov	fp, sp
   71a24:	sub	sp, sp, #184	; 0xb8
   71a28:	str	r0, [fp, #-8]
   71a2c:	str	r1, [fp, #-12]
   71a30:	str	r2, [fp, #-16]
   71a34:	str	r3, [fp, #-20]	; 0xffffffec
   71a38:	ldr	r0, [fp, #-12]
   71a3c:	ldr	r1, [fp, #-8]
   71a40:	ldr	r1, [r1, #4]
   71a44:	cmp	r0, r1
   71a48:	bhi	71a68 <__assert_fail@plt+0x5eeb0>
   71a4c:	ldr	r0, [fp, #-12]
   71a50:	ldr	r1, [fp, #-8]
   71a54:	str	r0, [r1]
   71a58:	movw	r0, #1
   71a5c:	and	r0, r0, #1
   71a60:	strb	r0, [fp, #-1]
   71a64:	b	72e88 <__assert_fail@plt+0x602d0>
   71a68:	b	71e20 <__assert_fail@plt+0x5f268>
   71a6c:	b	71c40 <__assert_fail@plt+0x5f088>
   71a70:	ldr	r0, [fp, #-20]	; 0xffffffec
   71a74:	cmp	r0, #0
   71a78:	bcs	71b7c <__assert_fail@plt+0x5efc4>
   71a7c:	ldr	r0, [fp, #-12]
   71a80:	cmp	r0, #0
   71a84:	bcs	71b0c <__assert_fail@plt+0x5ef54>
   71a88:	b	71aa8 <__assert_fail@plt+0x5eef0>
   71a8c:	ldr	r0, [fp, #-12]
   71a90:	ldr	r1, [fp, #-20]	; 0xffffffec
   71a94:	movw	r2, #127	; 0x7f
   71a98:	udiv	r1, r2, r1
   71a9c:	cmp	r0, r1
   71aa0:	bcc	71c10 <__assert_fail@plt+0x5f058>
   71aa4:	b	71c28 <__assert_fail@plt+0x5f070>
   71aa8:	b	71abc <__assert_fail@plt+0x5ef04>
   71aac:	ldr	r0, [fp, #-20]	; 0xffffffec
   71ab0:	cmp	r0, #1
   71ab4:	bcc	71acc <__assert_fail@plt+0x5ef14>
   71ab8:	b	71ad8 <__assert_fail@plt+0x5ef20>
   71abc:	ldr	r0, [fp, #-20]	; 0xffffffec
   71ac0:	movw	r1, #0
   71ac4:	cmp	r1, r0
   71ac8:	bcs	71ad8 <__assert_fail@plt+0x5ef20>
   71acc:	movw	r0, #0
   71ad0:	str	r0, [fp, #-32]	; 0xffffffe0
   71ad4:	b	71af0 <__assert_fail@plt+0x5ef38>
   71ad8:	ldr	r0, [fp, #-20]	; 0xffffffec
   71adc:	movw	r1, #0
   71ae0:	sub	r0, r1, r0
   71ae4:	movw	r1, #127	; 0x7f
   71ae8:	udiv	r0, r1, r0
   71aec:	str	r0, [fp, #-32]	; 0xffffffe0
   71af0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   71af4:	ldr	r1, [fp, #-12]
   71af8:	mvn	r2, #0
   71afc:	sub	r1, r2, r1
   71b00:	cmp	r0, r1
   71b04:	bls	71c10 <__assert_fail@plt+0x5f058>
   71b08:	b	71c28 <__assert_fail@plt+0x5f070>
   71b0c:	ldr	r0, [fp, #-20]	; 0xffffffec
   71b10:	cmn	r0, #1
   71b14:	bne	71b60 <__assert_fail@plt+0x5efa8>
   71b18:	b	71b38 <__assert_fail@plt+0x5ef80>
   71b1c:	ldr	r0, [fp, #-12]
   71b20:	mvn	r1, #127	; 0x7f
   71b24:	add	r0, r0, r1
   71b28:	movw	r1, #0
   71b2c:	cmp	r1, r0
   71b30:	bcc	71c10 <__assert_fail@plt+0x5f058>
   71b34:	b	71c28 <__assert_fail@plt+0x5f070>
   71b38:	ldr	r0, [fp, #-12]
   71b3c:	movw	r1, #0
   71b40:	cmp	r1, r0
   71b44:	bcs	71c28 <__assert_fail@plt+0x5f070>
   71b48:	ldr	r0, [fp, #-12]
   71b4c:	sub	r0, r0, #1
   71b50:	movw	r1, #127	; 0x7f
   71b54:	cmp	r1, r0
   71b58:	bcc	71c10 <__assert_fail@plt+0x5f058>
   71b5c:	b	71c28 <__assert_fail@plt+0x5f070>
   71b60:	ldr	r0, [fp, #-20]	; 0xffffffec
   71b64:	mvn	r1, #127	; 0x7f
   71b68:	udiv	r0, r1, r0
   71b6c:	ldr	r1, [fp, #-12]
   71b70:	cmp	r0, r1
   71b74:	bcc	71c10 <__assert_fail@plt+0x5f058>
   71b78:	b	71c28 <__assert_fail@plt+0x5f070>
   71b7c:	ldr	r0, [fp, #-20]	; 0xffffffec
   71b80:	cmp	r0, #0
   71b84:	bne	71b8c <__assert_fail@plt+0x5efd4>
   71b88:	b	71c28 <__assert_fail@plt+0x5f070>
   71b8c:	ldr	r0, [fp, #-12]
   71b90:	cmp	r0, #0
   71b94:	bcs	71bf8 <__assert_fail@plt+0x5f040>
   71b98:	ldr	r0, [fp, #-12]
   71b9c:	cmn	r0, #1
   71ba0:	bne	71bdc <__assert_fail@plt+0x5f024>
   71ba4:	b	71bc4 <__assert_fail@plt+0x5f00c>
   71ba8:	ldr	r0, [fp, #-20]	; 0xffffffec
   71bac:	mvn	r1, #127	; 0x7f
   71bb0:	add	r0, r0, r1
   71bb4:	movw	r1, #0
   71bb8:	cmp	r1, r0
   71bbc:	bcc	71c10 <__assert_fail@plt+0x5f058>
   71bc0:	b	71c28 <__assert_fail@plt+0x5f070>
   71bc4:	ldr	r0, [fp, #-20]	; 0xffffffec
   71bc8:	sub	r0, r0, #1
   71bcc:	movw	r1, #127	; 0x7f
   71bd0:	cmp	r1, r0
   71bd4:	bcc	71c10 <__assert_fail@plt+0x5f058>
   71bd8:	b	71c28 <__assert_fail@plt+0x5f070>
   71bdc:	ldr	r0, [fp, #-12]
   71be0:	mvn	r1, #127	; 0x7f
   71be4:	udiv	r0, r1, r0
   71be8:	ldr	r1, [fp, #-20]	; 0xffffffec
   71bec:	cmp	r0, r1
   71bf0:	bcc	71c10 <__assert_fail@plt+0x5f058>
   71bf4:	b	71c28 <__assert_fail@plt+0x5f070>
   71bf8:	ldr	r0, [fp, #-20]	; 0xffffffec
   71bfc:	movw	r1, #127	; 0x7f
   71c00:	udiv	r0, r1, r0
   71c04:	ldr	r1, [fp, #-12]
   71c08:	cmp	r0, r1
   71c0c:	bcs	71c28 <__assert_fail@plt+0x5f070>
   71c10:	ldr	r0, [fp, #-12]
   71c14:	ldr	r1, [fp, #-20]	; 0xffffffec
   71c18:	mul	r0, r0, r1
   71c1c:	sxtb	r0, r0
   71c20:	str	r0, [fp, #-24]	; 0xffffffe8
   71c24:	b	72da0 <__assert_fail@plt+0x601e8>
   71c28:	ldr	r0, [fp, #-12]
   71c2c:	ldr	r1, [fp, #-20]	; 0xffffffec
   71c30:	mul	r0, r0, r1
   71c34:	sxtb	r0, r0
   71c38:	str	r0, [fp, #-24]	; 0xffffffe8
   71c3c:	b	72dbc <__assert_fail@plt+0x60204>
   71c40:	ldr	r0, [fp, #-20]	; 0xffffffec
   71c44:	cmp	r0, #0
   71c48:	bcs	71d54 <__assert_fail@plt+0x5f19c>
   71c4c:	ldr	r0, [fp, #-12]
   71c50:	cmp	r0, #0
   71c54:	bcs	71cdc <__assert_fail@plt+0x5f124>
   71c58:	b	71c78 <__assert_fail@plt+0x5f0c0>
   71c5c:	ldr	r0, [fp, #-12]
   71c60:	ldr	r1, [fp, #-20]	; 0xffffffec
   71c64:	movw	r2, #255	; 0xff
   71c68:	udiv	r1, r2, r1
   71c6c:	cmp	r0, r1
   71c70:	bcc	71df0 <__assert_fail@plt+0x5f238>
   71c74:	b	71e08 <__assert_fail@plt+0x5f250>
   71c78:	b	71c8c <__assert_fail@plt+0x5f0d4>
   71c7c:	ldr	r0, [fp, #-20]	; 0xffffffec
   71c80:	cmp	r0, #1
   71c84:	bcc	71c9c <__assert_fail@plt+0x5f0e4>
   71c88:	b	71ca8 <__assert_fail@plt+0x5f0f0>
   71c8c:	ldr	r0, [fp, #-20]	; 0xffffffec
   71c90:	movw	r1, #0
   71c94:	cmp	r1, r0
   71c98:	bcs	71ca8 <__assert_fail@plt+0x5f0f0>
   71c9c:	movw	r0, #0
   71ca0:	str	r0, [fp, #-36]	; 0xffffffdc
   71ca4:	b	71cc0 <__assert_fail@plt+0x5f108>
   71ca8:	ldr	r0, [fp, #-20]	; 0xffffffec
   71cac:	movw	r1, #0
   71cb0:	sub	r0, r1, r0
   71cb4:	movw	r1, #255	; 0xff
   71cb8:	udiv	r0, r1, r0
   71cbc:	str	r0, [fp, #-36]	; 0xffffffdc
   71cc0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   71cc4:	ldr	r1, [fp, #-12]
   71cc8:	mvn	r2, #0
   71ccc:	sub	r1, r2, r1
   71cd0:	cmp	r0, r1
   71cd4:	bls	71df0 <__assert_fail@plt+0x5f238>
   71cd8:	b	71e08 <__assert_fail@plt+0x5f250>
   71cdc:	b	71ce4 <__assert_fail@plt+0x5f12c>
   71ce0:	b	71ce8 <__assert_fail@plt+0x5f130>
   71ce4:	b	71d38 <__assert_fail@plt+0x5f180>
   71ce8:	ldr	r0, [fp, #-20]	; 0xffffffec
   71cec:	cmn	r0, #1
   71cf0:	bne	71d38 <__assert_fail@plt+0x5f180>
   71cf4:	b	71d10 <__assert_fail@plt+0x5f158>
   71cf8:	ldr	r0, [fp, #-12]
   71cfc:	add	r0, r0, #0
   71d00:	movw	r1, #0
   71d04:	cmp	r1, r0
   71d08:	bcc	71df0 <__assert_fail@plt+0x5f238>
   71d0c:	b	71e08 <__assert_fail@plt+0x5f250>
   71d10:	ldr	r0, [fp, #-12]
   71d14:	movw	r1, #0
   71d18:	cmp	r1, r0
   71d1c:	bcs	71e08 <__assert_fail@plt+0x5f250>
   71d20:	ldr	r0, [fp, #-12]
   71d24:	sub	r0, r0, #1
   71d28:	mvn	r1, #0
   71d2c:	cmp	r1, r0
   71d30:	bcc	71df0 <__assert_fail@plt+0x5f238>
   71d34:	b	71e08 <__assert_fail@plt+0x5f250>
   71d38:	ldr	r0, [fp, #-20]	; 0xffffffec
   71d3c:	movw	r1, #0
   71d40:	udiv	r0, r1, r0
   71d44:	ldr	r1, [fp, #-12]
   71d48:	cmp	r0, r1
   71d4c:	bcc	71df0 <__assert_fail@plt+0x5f238>
   71d50:	b	71e08 <__assert_fail@plt+0x5f250>
   71d54:	ldr	r0, [fp, #-20]	; 0xffffffec
   71d58:	cmp	r0, #0
   71d5c:	bne	71d64 <__assert_fail@plt+0x5f1ac>
   71d60:	b	71e08 <__assert_fail@plt+0x5f250>
   71d64:	ldr	r0, [fp, #-12]
   71d68:	cmp	r0, #0
   71d6c:	bcs	71dd8 <__assert_fail@plt+0x5f220>
   71d70:	b	71d78 <__assert_fail@plt+0x5f1c0>
   71d74:	b	71d7c <__assert_fail@plt+0x5f1c4>
   71d78:	b	71dbc <__assert_fail@plt+0x5f204>
   71d7c:	ldr	r0, [fp, #-12]
   71d80:	cmn	r0, #1
   71d84:	bne	71dbc <__assert_fail@plt+0x5f204>
   71d88:	b	71da4 <__assert_fail@plt+0x5f1ec>
   71d8c:	ldr	r0, [fp, #-20]	; 0xffffffec
   71d90:	add	r0, r0, #0
   71d94:	movw	r1, #0
   71d98:	cmp	r1, r0
   71d9c:	bcc	71df0 <__assert_fail@plt+0x5f238>
   71da0:	b	71e08 <__assert_fail@plt+0x5f250>
   71da4:	ldr	r0, [fp, #-20]	; 0xffffffec
   71da8:	sub	r0, r0, #1
   71dac:	mvn	r1, #0
   71db0:	cmp	r1, r0
   71db4:	bcc	71df0 <__assert_fail@plt+0x5f238>
   71db8:	b	71e08 <__assert_fail@plt+0x5f250>
   71dbc:	ldr	r0, [fp, #-12]
   71dc0:	movw	r1, #0
   71dc4:	udiv	r0, r1, r0
   71dc8:	ldr	r1, [fp, #-20]	; 0xffffffec
   71dcc:	cmp	r0, r1
   71dd0:	bcc	71df0 <__assert_fail@plt+0x5f238>
   71dd4:	b	71e08 <__assert_fail@plt+0x5f250>
   71dd8:	ldr	r0, [fp, #-20]	; 0xffffffec
   71ddc:	movw	r1, #255	; 0xff
   71de0:	udiv	r0, r1, r0
   71de4:	ldr	r1, [fp, #-12]
   71de8:	cmp	r0, r1
   71dec:	bcs	71e08 <__assert_fail@plt+0x5f250>
   71df0:	ldr	r0, [fp, #-12]
   71df4:	ldr	r1, [fp, #-20]	; 0xffffffec
   71df8:	mul	r0, r0, r1
   71dfc:	and	r0, r0, #255	; 0xff
   71e00:	str	r0, [fp, #-24]	; 0xffffffe8
   71e04:	b	72da0 <__assert_fail@plt+0x601e8>
   71e08:	ldr	r0, [fp, #-12]
   71e0c:	ldr	r1, [fp, #-20]	; 0xffffffec
   71e10:	mul	r0, r0, r1
   71e14:	and	r0, r0, #255	; 0xff
   71e18:	str	r0, [fp, #-24]	; 0xffffffe8
   71e1c:	b	72dbc <__assert_fail@plt+0x60204>
   71e20:	b	721d8 <__assert_fail@plt+0x5f620>
   71e24:	b	71ff8 <__assert_fail@plt+0x5f440>
   71e28:	ldr	r0, [fp, #-20]	; 0xffffffec
   71e2c:	cmp	r0, #0
   71e30:	bcs	71f34 <__assert_fail@plt+0x5f37c>
   71e34:	ldr	r0, [fp, #-12]
   71e38:	cmp	r0, #0
   71e3c:	bcs	71ec4 <__assert_fail@plt+0x5f30c>
   71e40:	b	71e60 <__assert_fail@plt+0x5f2a8>
   71e44:	ldr	r0, [fp, #-12]
   71e48:	ldr	r1, [fp, #-20]	; 0xffffffec
   71e4c:	movw	r2, #32767	; 0x7fff
   71e50:	udiv	r1, r2, r1
   71e54:	cmp	r0, r1
   71e58:	bcc	71fc8 <__assert_fail@plt+0x5f410>
   71e5c:	b	71fe0 <__assert_fail@plt+0x5f428>
   71e60:	b	71e74 <__assert_fail@plt+0x5f2bc>
   71e64:	ldr	r0, [fp, #-20]	; 0xffffffec
   71e68:	cmp	r0, #1
   71e6c:	bcc	71e84 <__assert_fail@plt+0x5f2cc>
   71e70:	b	71e90 <__assert_fail@plt+0x5f2d8>
   71e74:	ldr	r0, [fp, #-20]	; 0xffffffec
   71e78:	movw	r1, #0
   71e7c:	cmp	r1, r0
   71e80:	bcs	71e90 <__assert_fail@plt+0x5f2d8>
   71e84:	movw	r0, #0
   71e88:	str	r0, [fp, #-40]	; 0xffffffd8
   71e8c:	b	71ea8 <__assert_fail@plt+0x5f2f0>
   71e90:	ldr	r0, [fp, #-20]	; 0xffffffec
   71e94:	movw	r1, #0
   71e98:	sub	r0, r1, r0
   71e9c:	movw	r1, #32767	; 0x7fff
   71ea0:	udiv	r0, r1, r0
   71ea4:	str	r0, [fp, #-40]	; 0xffffffd8
   71ea8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   71eac:	ldr	r1, [fp, #-12]
   71eb0:	mvn	r2, #0
   71eb4:	sub	r1, r2, r1
   71eb8:	cmp	r0, r1
   71ebc:	bls	71fc8 <__assert_fail@plt+0x5f410>
   71ec0:	b	71fe0 <__assert_fail@plt+0x5f428>
   71ec4:	ldr	r0, [fp, #-20]	; 0xffffffec
   71ec8:	cmn	r0, #1
   71ecc:	bne	71f18 <__assert_fail@plt+0x5f360>
   71ed0:	b	71ef0 <__assert_fail@plt+0x5f338>
   71ed4:	ldr	r0, [pc, #4036]	; 72ea0 <__assert_fail@plt+0x602e8>
   71ed8:	ldr	r1, [fp, #-12]
   71edc:	add	r0, r1, r0
   71ee0:	movw	r1, #0
   71ee4:	cmp	r1, r0
   71ee8:	bcc	71fc8 <__assert_fail@plt+0x5f410>
   71eec:	b	71fe0 <__assert_fail@plt+0x5f428>
   71ef0:	ldr	r0, [fp, #-12]
   71ef4:	movw	r1, #0
   71ef8:	cmp	r1, r0
   71efc:	bcs	71fe0 <__assert_fail@plt+0x5f428>
   71f00:	ldr	r0, [fp, #-12]
   71f04:	sub	r0, r0, #1
   71f08:	movw	r1, #32767	; 0x7fff
   71f0c:	cmp	r1, r0
   71f10:	bcc	71fc8 <__assert_fail@plt+0x5f410>
   71f14:	b	71fe0 <__assert_fail@plt+0x5f428>
   71f18:	ldr	r0, [pc, #3968]	; 72ea0 <__assert_fail@plt+0x602e8>
   71f1c:	ldr	r1, [fp, #-20]	; 0xffffffec
   71f20:	udiv	r0, r0, r1
   71f24:	ldr	r1, [fp, #-12]
   71f28:	cmp	r0, r1
   71f2c:	bcc	71fc8 <__assert_fail@plt+0x5f410>
   71f30:	b	71fe0 <__assert_fail@plt+0x5f428>
   71f34:	ldr	r0, [fp, #-20]	; 0xffffffec
   71f38:	cmp	r0, #0
   71f3c:	bne	71f44 <__assert_fail@plt+0x5f38c>
   71f40:	b	71fe0 <__assert_fail@plt+0x5f428>
   71f44:	ldr	r0, [fp, #-12]
   71f48:	cmp	r0, #0
   71f4c:	bcs	71fb0 <__assert_fail@plt+0x5f3f8>
   71f50:	ldr	r0, [fp, #-12]
   71f54:	cmn	r0, #1
   71f58:	bne	71f94 <__assert_fail@plt+0x5f3dc>
   71f5c:	b	71f7c <__assert_fail@plt+0x5f3c4>
   71f60:	ldr	r0, [pc, #3896]	; 72ea0 <__assert_fail@plt+0x602e8>
   71f64:	ldr	r1, [fp, #-20]	; 0xffffffec
   71f68:	add	r0, r1, r0
   71f6c:	movw	r1, #0
   71f70:	cmp	r1, r0
   71f74:	bcc	71fc8 <__assert_fail@plt+0x5f410>
   71f78:	b	71fe0 <__assert_fail@plt+0x5f428>
   71f7c:	ldr	r0, [fp, #-20]	; 0xffffffec
   71f80:	sub	r0, r0, #1
   71f84:	movw	r1, #32767	; 0x7fff
   71f88:	cmp	r1, r0
   71f8c:	bcc	71fc8 <__assert_fail@plt+0x5f410>
   71f90:	b	71fe0 <__assert_fail@plt+0x5f428>
   71f94:	ldr	r0, [pc, #3844]	; 72ea0 <__assert_fail@plt+0x602e8>
   71f98:	ldr	r1, [fp, #-12]
   71f9c:	udiv	r0, r0, r1
   71fa0:	ldr	r1, [fp, #-20]	; 0xffffffec
   71fa4:	cmp	r0, r1
   71fa8:	bcc	71fc8 <__assert_fail@plt+0x5f410>
   71fac:	b	71fe0 <__assert_fail@plt+0x5f428>
   71fb0:	ldr	r0, [fp, #-20]	; 0xffffffec
   71fb4:	movw	r1, #32767	; 0x7fff
   71fb8:	udiv	r0, r1, r0
   71fbc:	ldr	r1, [fp, #-12]
   71fc0:	cmp	r0, r1
   71fc4:	bcs	71fe0 <__assert_fail@plt+0x5f428>
   71fc8:	ldr	r0, [fp, #-12]
   71fcc:	ldr	r1, [fp, #-20]	; 0xffffffec
   71fd0:	mul	r0, r0, r1
   71fd4:	sxth	r0, r0
   71fd8:	str	r0, [fp, #-24]	; 0xffffffe8
   71fdc:	b	72da0 <__assert_fail@plt+0x601e8>
   71fe0:	ldr	r0, [fp, #-12]
   71fe4:	ldr	r1, [fp, #-20]	; 0xffffffec
   71fe8:	mul	r0, r0, r1
   71fec:	sxth	r0, r0
   71ff0:	str	r0, [fp, #-24]	; 0xffffffe8
   71ff4:	b	72dbc <__assert_fail@plt+0x60204>
   71ff8:	ldr	r0, [fp, #-20]	; 0xffffffec
   71ffc:	cmp	r0, #0
   72000:	bcs	7210c <__assert_fail@plt+0x5f554>
   72004:	ldr	r0, [fp, #-12]
   72008:	cmp	r0, #0
   7200c:	bcs	72094 <__assert_fail@plt+0x5f4dc>
   72010:	b	72030 <__assert_fail@plt+0x5f478>
   72014:	ldr	r0, [fp, #-12]
   72018:	ldr	r1, [fp, #-20]	; 0xffffffec
   7201c:	movw	r2, #65535	; 0xffff
   72020:	udiv	r1, r2, r1
   72024:	cmp	r0, r1
   72028:	bcc	721a8 <__assert_fail@plt+0x5f5f0>
   7202c:	b	721c0 <__assert_fail@plt+0x5f608>
   72030:	b	72044 <__assert_fail@plt+0x5f48c>
   72034:	ldr	r0, [fp, #-20]	; 0xffffffec
   72038:	cmp	r0, #1
   7203c:	bcc	72054 <__assert_fail@plt+0x5f49c>
   72040:	b	72060 <__assert_fail@plt+0x5f4a8>
   72044:	ldr	r0, [fp, #-20]	; 0xffffffec
   72048:	movw	r1, #0
   7204c:	cmp	r1, r0
   72050:	bcs	72060 <__assert_fail@plt+0x5f4a8>
   72054:	movw	r0, #0
   72058:	str	r0, [fp, #-44]	; 0xffffffd4
   7205c:	b	72078 <__assert_fail@plt+0x5f4c0>
   72060:	ldr	r0, [fp, #-20]	; 0xffffffec
   72064:	movw	r1, #0
   72068:	sub	r0, r1, r0
   7206c:	movw	r1, #65535	; 0xffff
   72070:	udiv	r0, r1, r0
   72074:	str	r0, [fp, #-44]	; 0xffffffd4
   72078:	ldr	r0, [fp, #-44]	; 0xffffffd4
   7207c:	ldr	r1, [fp, #-12]
   72080:	mvn	r2, #0
   72084:	sub	r1, r2, r1
   72088:	cmp	r0, r1
   7208c:	bls	721a8 <__assert_fail@plt+0x5f5f0>
   72090:	b	721c0 <__assert_fail@plt+0x5f608>
   72094:	b	7209c <__assert_fail@plt+0x5f4e4>
   72098:	b	720a0 <__assert_fail@plt+0x5f4e8>
   7209c:	b	720f0 <__assert_fail@plt+0x5f538>
   720a0:	ldr	r0, [fp, #-20]	; 0xffffffec
   720a4:	cmn	r0, #1
   720a8:	bne	720f0 <__assert_fail@plt+0x5f538>
   720ac:	b	720c8 <__assert_fail@plt+0x5f510>
   720b0:	ldr	r0, [fp, #-12]
   720b4:	add	r0, r0, #0
   720b8:	movw	r1, #0
   720bc:	cmp	r1, r0
   720c0:	bcc	721a8 <__assert_fail@plt+0x5f5f0>
   720c4:	b	721c0 <__assert_fail@plt+0x5f608>
   720c8:	ldr	r0, [fp, #-12]
   720cc:	movw	r1, #0
   720d0:	cmp	r1, r0
   720d4:	bcs	721c0 <__assert_fail@plt+0x5f608>
   720d8:	ldr	r0, [fp, #-12]
   720dc:	sub	r0, r0, #1
   720e0:	mvn	r1, #0
   720e4:	cmp	r1, r0
   720e8:	bcc	721a8 <__assert_fail@plt+0x5f5f0>
   720ec:	b	721c0 <__assert_fail@plt+0x5f608>
   720f0:	ldr	r0, [fp, #-20]	; 0xffffffec
   720f4:	movw	r1, #0
   720f8:	udiv	r0, r1, r0
   720fc:	ldr	r1, [fp, #-12]
   72100:	cmp	r0, r1
   72104:	bcc	721a8 <__assert_fail@plt+0x5f5f0>
   72108:	b	721c0 <__assert_fail@plt+0x5f608>
   7210c:	ldr	r0, [fp, #-20]	; 0xffffffec
   72110:	cmp	r0, #0
   72114:	bne	7211c <__assert_fail@plt+0x5f564>
   72118:	b	721c0 <__assert_fail@plt+0x5f608>
   7211c:	ldr	r0, [fp, #-12]
   72120:	cmp	r0, #0
   72124:	bcs	72190 <__assert_fail@plt+0x5f5d8>
   72128:	b	72130 <__assert_fail@plt+0x5f578>
   7212c:	b	72134 <__assert_fail@plt+0x5f57c>
   72130:	b	72174 <__assert_fail@plt+0x5f5bc>
   72134:	ldr	r0, [fp, #-12]
   72138:	cmn	r0, #1
   7213c:	bne	72174 <__assert_fail@plt+0x5f5bc>
   72140:	b	7215c <__assert_fail@plt+0x5f5a4>
   72144:	ldr	r0, [fp, #-20]	; 0xffffffec
   72148:	add	r0, r0, #0
   7214c:	movw	r1, #0
   72150:	cmp	r1, r0
   72154:	bcc	721a8 <__assert_fail@plt+0x5f5f0>
   72158:	b	721c0 <__assert_fail@plt+0x5f608>
   7215c:	ldr	r0, [fp, #-20]	; 0xffffffec
   72160:	sub	r0, r0, #1
   72164:	mvn	r1, #0
   72168:	cmp	r1, r0
   7216c:	bcc	721a8 <__assert_fail@plt+0x5f5f0>
   72170:	b	721c0 <__assert_fail@plt+0x5f608>
   72174:	ldr	r0, [fp, #-12]
   72178:	movw	r1, #0
   7217c:	udiv	r0, r1, r0
   72180:	ldr	r1, [fp, #-20]	; 0xffffffec
   72184:	cmp	r0, r1
   72188:	bcc	721a8 <__assert_fail@plt+0x5f5f0>
   7218c:	b	721c0 <__assert_fail@plt+0x5f608>
   72190:	ldr	r0, [fp, #-20]	; 0xffffffec
   72194:	movw	r1, #65535	; 0xffff
   72198:	udiv	r0, r1, r0
   7219c:	ldr	r1, [fp, #-12]
   721a0:	cmp	r0, r1
   721a4:	bcs	721c0 <__assert_fail@plt+0x5f608>
   721a8:	ldr	r0, [fp, #-12]
   721ac:	ldr	r1, [fp, #-20]	; 0xffffffec
   721b0:	mul	r0, r0, r1
   721b4:	uxth	r0, r0
   721b8:	str	r0, [fp, #-24]	; 0xffffffe8
   721bc:	b	72da0 <__assert_fail@plt+0x601e8>
   721c0:	ldr	r0, [fp, #-12]
   721c4:	ldr	r1, [fp, #-20]	; 0xffffffec
   721c8:	mul	r0, r0, r1
   721cc:	uxth	r0, r0
   721d0:	str	r0, [fp, #-24]	; 0xffffffe8
   721d4:	b	72dbc <__assert_fail@plt+0x60204>
   721d8:	b	721dc <__assert_fail@plt+0x5f624>
   721dc:	b	723a0 <__assert_fail@plt+0x5f7e8>
   721e0:	ldr	r0, [fp, #-20]	; 0xffffffec
   721e4:	cmp	r0, #0
   721e8:	bcs	722e8 <__assert_fail@plt+0x5f730>
   721ec:	ldr	r0, [fp, #-12]
   721f0:	cmp	r0, #0
   721f4:	bcs	7227c <__assert_fail@plt+0x5f6c4>
   721f8:	b	72218 <__assert_fail@plt+0x5f660>
   721fc:	ldr	r0, [pc, #3220]	; 72e98 <__assert_fail@plt+0x602e0>
   72200:	ldr	r1, [fp, #-12]
   72204:	ldr	r2, [fp, #-20]	; 0xffffffec
   72208:	udiv	r0, r0, r2
   7220c:	cmp	r1, r0
   72210:	bcc	72378 <__assert_fail@plt+0x5f7c0>
   72214:	b	7238c <__assert_fail@plt+0x5f7d4>
   72218:	b	7222c <__assert_fail@plt+0x5f674>
   7221c:	ldr	r0, [fp, #-20]	; 0xffffffec
   72220:	cmp	r0, #1
   72224:	bcc	7223c <__assert_fail@plt+0x5f684>
   72228:	b	72248 <__assert_fail@plt+0x5f690>
   7222c:	ldr	r0, [fp, #-20]	; 0xffffffec
   72230:	movw	r1, #0
   72234:	cmp	r1, r0
   72238:	bcs	72248 <__assert_fail@plt+0x5f690>
   7223c:	movw	r0, #0
   72240:	str	r0, [fp, #-48]	; 0xffffffd0
   72244:	b	72260 <__assert_fail@plt+0x5f6a8>
   72248:	ldr	r0, [pc, #3144]	; 72e98 <__assert_fail@plt+0x602e0>
   7224c:	ldr	r1, [fp, #-20]	; 0xffffffec
   72250:	movw	r2, #0
   72254:	sub	r1, r2, r1
   72258:	udiv	r0, r0, r1
   7225c:	str	r0, [fp, #-48]	; 0xffffffd0
   72260:	ldr	r0, [fp, #-48]	; 0xffffffd0
   72264:	ldr	r1, [fp, #-12]
   72268:	mvn	r2, #0
   7226c:	sub	r1, r2, r1
   72270:	cmp	r0, r1
   72274:	bls	72378 <__assert_fail@plt+0x5f7c0>
   72278:	b	7238c <__assert_fail@plt+0x5f7d4>
   7227c:	ldr	r0, [fp, #-20]	; 0xffffffec
   72280:	cmn	r0, #1
   72284:	bne	722cc <__assert_fail@plt+0x5f714>
   72288:	b	722a4 <__assert_fail@plt+0x5f6ec>
   7228c:	ldr	r0, [fp, #-12]
   72290:	add	r0, r0, #-2147483648	; 0x80000000
   72294:	movw	r1, #0
   72298:	cmp	r1, r0
   7229c:	bcc	72378 <__assert_fail@plt+0x5f7c0>
   722a0:	b	7238c <__assert_fail@plt+0x5f7d4>
   722a4:	ldr	r0, [fp, #-12]
   722a8:	movw	r1, #0
   722ac:	cmp	r1, r0
   722b0:	bcs	7238c <__assert_fail@plt+0x5f7d4>
   722b4:	ldr	r0, [pc, #3036]	; 72e98 <__assert_fail@plt+0x602e0>
   722b8:	ldr	r1, [fp, #-12]
   722bc:	sub	r1, r1, #1
   722c0:	cmp	r0, r1
   722c4:	bcc	72378 <__assert_fail@plt+0x5f7c0>
   722c8:	b	7238c <__assert_fail@plt+0x5f7d4>
   722cc:	ldr	r0, [pc, #3016]	; 72e9c <__assert_fail@plt+0x602e4>
   722d0:	ldr	r1, [fp, #-20]	; 0xffffffec
   722d4:	udiv	r0, r0, r1
   722d8:	ldr	r1, [fp, #-12]
   722dc:	cmp	r0, r1
   722e0:	bcc	72378 <__assert_fail@plt+0x5f7c0>
   722e4:	b	7238c <__assert_fail@plt+0x5f7d4>
   722e8:	ldr	r0, [fp, #-20]	; 0xffffffec
   722ec:	cmp	r0, #0
   722f0:	bne	722f8 <__assert_fail@plt+0x5f740>
   722f4:	b	7238c <__assert_fail@plt+0x5f7d4>
   722f8:	ldr	r0, [fp, #-12]
   722fc:	cmp	r0, #0
   72300:	bcs	72360 <__assert_fail@plt+0x5f7a8>
   72304:	ldr	r0, [fp, #-12]
   72308:	cmn	r0, #1
   7230c:	bne	72344 <__assert_fail@plt+0x5f78c>
   72310:	b	7232c <__assert_fail@plt+0x5f774>
   72314:	ldr	r0, [fp, #-20]	; 0xffffffec
   72318:	add	r0, r0, #-2147483648	; 0x80000000
   7231c:	movw	r1, #0
   72320:	cmp	r1, r0
   72324:	bcc	72378 <__assert_fail@plt+0x5f7c0>
   72328:	b	7238c <__assert_fail@plt+0x5f7d4>
   7232c:	ldr	r0, [pc, #2916]	; 72e98 <__assert_fail@plt+0x602e0>
   72330:	ldr	r1, [fp, #-20]	; 0xffffffec
   72334:	sub	r1, r1, #1
   72338:	cmp	r0, r1
   7233c:	bcc	72378 <__assert_fail@plt+0x5f7c0>
   72340:	b	7238c <__assert_fail@plt+0x5f7d4>
   72344:	ldr	r0, [pc, #2896]	; 72e9c <__assert_fail@plt+0x602e4>
   72348:	ldr	r1, [fp, #-12]
   7234c:	udiv	r0, r0, r1
   72350:	ldr	r1, [fp, #-20]	; 0xffffffec
   72354:	cmp	r0, r1
   72358:	bcc	72378 <__assert_fail@plt+0x5f7c0>
   7235c:	b	7238c <__assert_fail@plt+0x5f7d4>
   72360:	ldr	r0, [pc, #2864]	; 72e98 <__assert_fail@plt+0x602e0>
   72364:	ldr	r1, [fp, #-20]	; 0xffffffec
   72368:	udiv	r0, r0, r1
   7236c:	ldr	r1, [fp, #-12]
   72370:	cmp	r0, r1
   72374:	bcs	7238c <__assert_fail@plt+0x5f7d4>
   72378:	ldr	r0, [fp, #-12]
   7237c:	ldr	r1, [fp, #-20]	; 0xffffffec
   72380:	mul	r0, r0, r1
   72384:	str	r0, [fp, #-24]	; 0xffffffe8
   72388:	b	72da0 <__assert_fail@plt+0x601e8>
   7238c:	ldr	r0, [fp, #-12]
   72390:	ldr	r1, [fp, #-20]	; 0xffffffec
   72394:	mul	r0, r0, r1
   72398:	str	r0, [fp, #-24]	; 0xffffffe8
   7239c:	b	72dbc <__assert_fail@plt+0x60204>
   723a0:	ldr	r0, [fp, #-20]	; 0xffffffec
   723a4:	cmp	r0, #0
   723a8:	bcs	724b4 <__assert_fail@plt+0x5f8fc>
   723ac:	ldr	r0, [fp, #-12]
   723b0:	cmp	r0, #0
   723b4:	bcs	7243c <__assert_fail@plt+0x5f884>
   723b8:	b	723d8 <__assert_fail@plt+0x5f820>
   723bc:	ldr	r0, [fp, #-12]
   723c0:	ldr	r1, [fp, #-20]	; 0xffffffec
   723c4:	mvn	r2, #0
   723c8:	udiv	r1, r2, r1
   723cc:	cmp	r0, r1
   723d0:	bcc	72550 <__assert_fail@plt+0x5f998>
   723d4:	b	72564 <__assert_fail@plt+0x5f9ac>
   723d8:	b	723ec <__assert_fail@plt+0x5f834>
   723dc:	ldr	r0, [fp, #-20]	; 0xffffffec
   723e0:	cmp	r0, #1
   723e4:	bcc	723fc <__assert_fail@plt+0x5f844>
   723e8:	b	72408 <__assert_fail@plt+0x5f850>
   723ec:	ldr	r0, [fp, #-20]	; 0xffffffec
   723f0:	movw	r1, #0
   723f4:	cmp	r1, r0
   723f8:	bcs	72408 <__assert_fail@plt+0x5f850>
   723fc:	movw	r0, #1
   72400:	str	r0, [fp, #-52]	; 0xffffffcc
   72404:	b	72420 <__assert_fail@plt+0x5f868>
   72408:	ldr	r0, [fp, #-20]	; 0xffffffec
   7240c:	movw	r1, #0
   72410:	sub	r0, r1, r0
   72414:	mvn	r1, #0
   72418:	udiv	r0, r1, r0
   7241c:	str	r0, [fp, #-52]	; 0xffffffcc
   72420:	ldr	r0, [fp, #-52]	; 0xffffffcc
   72424:	ldr	r1, [fp, #-12]
   72428:	mvn	r2, #0
   7242c:	sub	r1, r2, r1
   72430:	cmp	r0, r1
   72434:	bls	72550 <__assert_fail@plt+0x5f998>
   72438:	b	72564 <__assert_fail@plt+0x5f9ac>
   7243c:	b	72444 <__assert_fail@plt+0x5f88c>
   72440:	b	72448 <__assert_fail@plt+0x5f890>
   72444:	b	72498 <__assert_fail@plt+0x5f8e0>
   72448:	ldr	r0, [fp, #-20]	; 0xffffffec
   7244c:	cmn	r0, #1
   72450:	bne	72498 <__assert_fail@plt+0x5f8e0>
   72454:	b	72470 <__assert_fail@plt+0x5f8b8>
   72458:	ldr	r0, [fp, #-12]
   7245c:	add	r0, r0, #0
   72460:	movw	r1, #0
   72464:	cmp	r1, r0
   72468:	bcc	72550 <__assert_fail@plt+0x5f998>
   7246c:	b	72564 <__assert_fail@plt+0x5f9ac>
   72470:	ldr	r0, [fp, #-12]
   72474:	movw	r1, #0
   72478:	cmp	r1, r0
   7247c:	bcs	72564 <__assert_fail@plt+0x5f9ac>
   72480:	ldr	r0, [fp, #-12]
   72484:	sub	r0, r0, #1
   72488:	mvn	r1, #0
   7248c:	cmp	r1, r0
   72490:	bcc	72550 <__assert_fail@plt+0x5f998>
   72494:	b	72564 <__assert_fail@plt+0x5f9ac>
   72498:	ldr	r0, [fp, #-20]	; 0xffffffec
   7249c:	movw	r1, #0
   724a0:	udiv	r0, r1, r0
   724a4:	ldr	r1, [fp, #-12]
   724a8:	cmp	r0, r1
   724ac:	bcc	72550 <__assert_fail@plt+0x5f998>
   724b0:	b	72564 <__assert_fail@plt+0x5f9ac>
   724b4:	ldr	r0, [fp, #-20]	; 0xffffffec
   724b8:	cmp	r0, #0
   724bc:	bne	724c4 <__assert_fail@plt+0x5f90c>
   724c0:	b	72564 <__assert_fail@plt+0x5f9ac>
   724c4:	ldr	r0, [fp, #-12]
   724c8:	cmp	r0, #0
   724cc:	bcs	72538 <__assert_fail@plt+0x5f980>
   724d0:	b	724d8 <__assert_fail@plt+0x5f920>
   724d4:	b	724dc <__assert_fail@plt+0x5f924>
   724d8:	b	7251c <__assert_fail@plt+0x5f964>
   724dc:	ldr	r0, [fp, #-12]
   724e0:	cmn	r0, #1
   724e4:	bne	7251c <__assert_fail@plt+0x5f964>
   724e8:	b	72504 <__assert_fail@plt+0x5f94c>
   724ec:	ldr	r0, [fp, #-20]	; 0xffffffec
   724f0:	add	r0, r0, #0
   724f4:	movw	r1, #0
   724f8:	cmp	r1, r0
   724fc:	bcc	72550 <__assert_fail@plt+0x5f998>
   72500:	b	72564 <__assert_fail@plt+0x5f9ac>
   72504:	ldr	r0, [fp, #-20]	; 0xffffffec
   72508:	sub	r0, r0, #1
   7250c:	mvn	r1, #0
   72510:	cmp	r1, r0
   72514:	bcc	72550 <__assert_fail@plt+0x5f998>
   72518:	b	72564 <__assert_fail@plt+0x5f9ac>
   7251c:	ldr	r0, [fp, #-12]
   72520:	movw	r1, #0
   72524:	udiv	r0, r1, r0
   72528:	ldr	r1, [fp, #-20]	; 0xffffffec
   7252c:	cmp	r0, r1
   72530:	bcc	72550 <__assert_fail@plt+0x5f998>
   72534:	b	72564 <__assert_fail@plt+0x5f9ac>
   72538:	ldr	r0, [fp, #-20]	; 0xffffffec
   7253c:	mvn	r1, #0
   72540:	udiv	r0, r1, r0
   72544:	ldr	r1, [fp, #-12]
   72548:	cmp	r0, r1
   7254c:	bcs	72564 <__assert_fail@plt+0x5f9ac>
   72550:	ldr	r0, [fp, #-12]
   72554:	ldr	r1, [fp, #-20]	; 0xffffffec
   72558:	mul	r0, r0, r1
   7255c:	str	r0, [fp, #-24]	; 0xffffffe8
   72560:	b	72da0 <__assert_fail@plt+0x601e8>
   72564:	ldr	r0, [fp, #-12]
   72568:	ldr	r1, [fp, #-20]	; 0xffffffec
   7256c:	mul	r0, r0, r1
   72570:	str	r0, [fp, #-24]	; 0xffffffe8
   72574:	b	72dbc <__assert_fail@plt+0x60204>
   72578:	b	7257c <__assert_fail@plt+0x5f9c4>
   7257c:	b	72740 <__assert_fail@plt+0x5fb88>
   72580:	ldr	r0, [fp, #-20]	; 0xffffffec
   72584:	cmp	r0, #0
   72588:	bcs	72688 <__assert_fail@plt+0x5fad0>
   7258c:	ldr	r0, [fp, #-12]
   72590:	cmp	r0, #0
   72594:	bcs	7261c <__assert_fail@plt+0x5fa64>
   72598:	b	725b8 <__assert_fail@plt+0x5fa00>
   7259c:	ldr	r0, [pc, #2292]	; 72e98 <__assert_fail@plt+0x602e0>
   725a0:	ldr	r1, [fp, #-12]
   725a4:	ldr	r2, [fp, #-20]	; 0xffffffec
   725a8:	udiv	r0, r0, r2
   725ac:	cmp	r1, r0
   725b0:	bcc	72718 <__assert_fail@plt+0x5fb60>
   725b4:	b	7272c <__assert_fail@plt+0x5fb74>
   725b8:	b	725cc <__assert_fail@plt+0x5fa14>
   725bc:	ldr	r0, [fp, #-20]	; 0xffffffec
   725c0:	cmp	r0, #1
   725c4:	bcc	725dc <__assert_fail@plt+0x5fa24>
   725c8:	b	725e8 <__assert_fail@plt+0x5fa30>
   725cc:	ldr	r0, [fp, #-20]	; 0xffffffec
   725d0:	movw	r1, #0
   725d4:	cmp	r1, r0
   725d8:	bcs	725e8 <__assert_fail@plt+0x5fa30>
   725dc:	movw	r0, #0
   725e0:	str	r0, [fp, #-56]	; 0xffffffc8
   725e4:	b	72600 <__assert_fail@plt+0x5fa48>
   725e8:	ldr	r0, [pc, #2216]	; 72e98 <__assert_fail@plt+0x602e0>
   725ec:	ldr	r1, [fp, #-20]	; 0xffffffec
   725f0:	movw	r2, #0
   725f4:	sub	r1, r2, r1
   725f8:	udiv	r0, r0, r1
   725fc:	str	r0, [fp, #-56]	; 0xffffffc8
   72600:	ldr	r0, [fp, #-56]	; 0xffffffc8
   72604:	ldr	r1, [fp, #-12]
   72608:	mvn	r2, #0
   7260c:	sub	r1, r2, r1
   72610:	cmp	r0, r1
   72614:	bls	72718 <__assert_fail@plt+0x5fb60>
   72618:	b	7272c <__assert_fail@plt+0x5fb74>
   7261c:	ldr	r0, [fp, #-20]	; 0xffffffec
   72620:	cmn	r0, #1
   72624:	bne	7266c <__assert_fail@plt+0x5fab4>
   72628:	b	72644 <__assert_fail@plt+0x5fa8c>
   7262c:	ldr	r0, [fp, #-12]
   72630:	add	r0, r0, #-2147483648	; 0x80000000
   72634:	movw	r1, #0
   72638:	cmp	r1, r0
   7263c:	bcc	72718 <__assert_fail@plt+0x5fb60>
   72640:	b	7272c <__assert_fail@plt+0x5fb74>
   72644:	ldr	r0, [fp, #-12]
   72648:	movw	r1, #0
   7264c:	cmp	r1, r0
   72650:	bcs	7272c <__assert_fail@plt+0x5fb74>
   72654:	ldr	r0, [pc, #2108]	; 72e98 <__assert_fail@plt+0x602e0>
   72658:	ldr	r1, [fp, #-12]
   7265c:	sub	r1, r1, #1
   72660:	cmp	r0, r1
   72664:	bcc	72718 <__assert_fail@plt+0x5fb60>
   72668:	b	7272c <__assert_fail@plt+0x5fb74>
   7266c:	ldr	r0, [pc, #2088]	; 72e9c <__assert_fail@plt+0x602e4>
   72670:	ldr	r1, [fp, #-20]	; 0xffffffec
   72674:	udiv	r0, r0, r1
   72678:	ldr	r1, [fp, #-12]
   7267c:	cmp	r0, r1
   72680:	bcc	72718 <__assert_fail@plt+0x5fb60>
   72684:	b	7272c <__assert_fail@plt+0x5fb74>
   72688:	ldr	r0, [fp, #-20]	; 0xffffffec
   7268c:	cmp	r0, #0
   72690:	bne	72698 <__assert_fail@plt+0x5fae0>
   72694:	b	7272c <__assert_fail@plt+0x5fb74>
   72698:	ldr	r0, [fp, #-12]
   7269c:	cmp	r0, #0
   726a0:	bcs	72700 <__assert_fail@plt+0x5fb48>
   726a4:	ldr	r0, [fp, #-12]
   726a8:	cmn	r0, #1
   726ac:	bne	726e4 <__assert_fail@plt+0x5fb2c>
   726b0:	b	726cc <__assert_fail@plt+0x5fb14>
   726b4:	ldr	r0, [fp, #-20]	; 0xffffffec
   726b8:	add	r0, r0, #-2147483648	; 0x80000000
   726bc:	movw	r1, #0
   726c0:	cmp	r1, r0
   726c4:	bcc	72718 <__assert_fail@plt+0x5fb60>
   726c8:	b	7272c <__assert_fail@plt+0x5fb74>
   726cc:	ldr	r0, [pc, #1988]	; 72e98 <__assert_fail@plt+0x602e0>
   726d0:	ldr	r1, [fp, #-20]	; 0xffffffec
   726d4:	sub	r1, r1, #1
   726d8:	cmp	r0, r1
   726dc:	bcc	72718 <__assert_fail@plt+0x5fb60>
   726e0:	b	7272c <__assert_fail@plt+0x5fb74>
   726e4:	ldr	r0, [pc, #1968]	; 72e9c <__assert_fail@plt+0x602e4>
   726e8:	ldr	r1, [fp, #-12]
   726ec:	udiv	r0, r0, r1
   726f0:	ldr	r1, [fp, #-20]	; 0xffffffec
   726f4:	cmp	r0, r1
   726f8:	bcc	72718 <__assert_fail@plt+0x5fb60>
   726fc:	b	7272c <__assert_fail@plt+0x5fb74>
   72700:	ldr	r0, [pc, #1936]	; 72e98 <__assert_fail@plt+0x602e0>
   72704:	ldr	r1, [fp, #-20]	; 0xffffffec
   72708:	udiv	r0, r0, r1
   7270c:	ldr	r1, [fp, #-12]
   72710:	cmp	r0, r1
   72714:	bcs	7272c <__assert_fail@plt+0x5fb74>
   72718:	ldr	r0, [fp, #-12]
   7271c:	ldr	r1, [fp, #-20]	; 0xffffffec
   72720:	mul	r0, r0, r1
   72724:	str	r0, [fp, #-24]	; 0xffffffe8
   72728:	b	72da0 <__assert_fail@plt+0x601e8>
   7272c:	ldr	r0, [fp, #-12]
   72730:	ldr	r1, [fp, #-20]	; 0xffffffec
   72734:	mul	r0, r0, r1
   72738:	str	r0, [fp, #-24]	; 0xffffffe8
   7273c:	b	72dbc <__assert_fail@plt+0x60204>
   72740:	ldr	r0, [fp, #-20]	; 0xffffffec
   72744:	cmp	r0, #0
   72748:	bcs	72854 <__assert_fail@plt+0x5fc9c>
   7274c:	ldr	r0, [fp, #-12]
   72750:	cmp	r0, #0
   72754:	bcs	727dc <__assert_fail@plt+0x5fc24>
   72758:	b	72778 <__assert_fail@plt+0x5fbc0>
   7275c:	ldr	r0, [fp, #-12]
   72760:	ldr	r1, [fp, #-20]	; 0xffffffec
   72764:	mvn	r2, #0
   72768:	udiv	r1, r2, r1
   7276c:	cmp	r0, r1
   72770:	bcc	728f0 <__assert_fail@plt+0x5fd38>
   72774:	b	72904 <__assert_fail@plt+0x5fd4c>
   72778:	b	7278c <__assert_fail@plt+0x5fbd4>
   7277c:	ldr	r0, [fp, #-20]	; 0xffffffec
   72780:	cmp	r0, #1
   72784:	bcc	7279c <__assert_fail@plt+0x5fbe4>
   72788:	b	727a8 <__assert_fail@plt+0x5fbf0>
   7278c:	ldr	r0, [fp, #-20]	; 0xffffffec
   72790:	movw	r1, #0
   72794:	cmp	r1, r0
   72798:	bcs	727a8 <__assert_fail@plt+0x5fbf0>
   7279c:	movw	r0, #1
   727a0:	str	r0, [fp, #-60]	; 0xffffffc4
   727a4:	b	727c0 <__assert_fail@plt+0x5fc08>
   727a8:	ldr	r0, [fp, #-20]	; 0xffffffec
   727ac:	movw	r1, #0
   727b0:	sub	r0, r1, r0
   727b4:	mvn	r1, #0
   727b8:	udiv	r0, r1, r0
   727bc:	str	r0, [fp, #-60]	; 0xffffffc4
   727c0:	ldr	r0, [fp, #-60]	; 0xffffffc4
   727c4:	ldr	r1, [fp, #-12]
   727c8:	mvn	r2, #0
   727cc:	sub	r1, r2, r1
   727d0:	cmp	r0, r1
   727d4:	bls	728f0 <__assert_fail@plt+0x5fd38>
   727d8:	b	72904 <__assert_fail@plt+0x5fd4c>
   727dc:	b	727e4 <__assert_fail@plt+0x5fc2c>
   727e0:	b	727e8 <__assert_fail@plt+0x5fc30>
   727e4:	b	72838 <__assert_fail@plt+0x5fc80>
   727e8:	ldr	r0, [fp, #-20]	; 0xffffffec
   727ec:	cmn	r0, #1
   727f0:	bne	72838 <__assert_fail@plt+0x5fc80>
   727f4:	b	72810 <__assert_fail@plt+0x5fc58>
   727f8:	ldr	r0, [fp, #-12]
   727fc:	add	r0, r0, #0
   72800:	movw	r1, #0
   72804:	cmp	r1, r0
   72808:	bcc	728f0 <__assert_fail@plt+0x5fd38>
   7280c:	b	72904 <__assert_fail@plt+0x5fd4c>
   72810:	ldr	r0, [fp, #-12]
   72814:	movw	r1, #0
   72818:	cmp	r1, r0
   7281c:	bcs	72904 <__assert_fail@plt+0x5fd4c>
   72820:	ldr	r0, [fp, #-12]
   72824:	sub	r0, r0, #1
   72828:	mvn	r1, #0
   7282c:	cmp	r1, r0
   72830:	bcc	728f0 <__assert_fail@plt+0x5fd38>
   72834:	b	72904 <__assert_fail@plt+0x5fd4c>
   72838:	ldr	r0, [fp, #-20]	; 0xffffffec
   7283c:	movw	r1, #0
   72840:	udiv	r0, r1, r0
   72844:	ldr	r1, [fp, #-12]
   72848:	cmp	r0, r1
   7284c:	bcc	728f0 <__assert_fail@plt+0x5fd38>
   72850:	b	72904 <__assert_fail@plt+0x5fd4c>
   72854:	ldr	r0, [fp, #-20]	; 0xffffffec
   72858:	cmp	r0, #0
   7285c:	bne	72864 <__assert_fail@plt+0x5fcac>
   72860:	b	72904 <__assert_fail@plt+0x5fd4c>
   72864:	ldr	r0, [fp, #-12]
   72868:	cmp	r0, #0
   7286c:	bcs	728d8 <__assert_fail@plt+0x5fd20>
   72870:	b	72878 <__assert_fail@plt+0x5fcc0>
   72874:	b	7287c <__assert_fail@plt+0x5fcc4>
   72878:	b	728bc <__assert_fail@plt+0x5fd04>
   7287c:	ldr	r0, [fp, #-12]
   72880:	cmn	r0, #1
   72884:	bne	728bc <__assert_fail@plt+0x5fd04>
   72888:	b	728a4 <__assert_fail@plt+0x5fcec>
   7288c:	ldr	r0, [fp, #-20]	; 0xffffffec
   72890:	add	r0, r0, #0
   72894:	movw	r1, #0
   72898:	cmp	r1, r0
   7289c:	bcc	728f0 <__assert_fail@plt+0x5fd38>
   728a0:	b	72904 <__assert_fail@plt+0x5fd4c>
   728a4:	ldr	r0, [fp, #-20]	; 0xffffffec
   728a8:	sub	r0, r0, #1
   728ac:	mvn	r1, #0
   728b0:	cmp	r1, r0
   728b4:	bcc	728f0 <__assert_fail@plt+0x5fd38>
   728b8:	b	72904 <__assert_fail@plt+0x5fd4c>
   728bc:	ldr	r0, [fp, #-12]
   728c0:	movw	r1, #0
   728c4:	udiv	r0, r1, r0
   728c8:	ldr	r1, [fp, #-20]	; 0xffffffec
   728cc:	cmp	r0, r1
   728d0:	bcc	728f0 <__assert_fail@plt+0x5fd38>
   728d4:	b	72904 <__assert_fail@plt+0x5fd4c>
   728d8:	ldr	r0, [fp, #-20]	; 0xffffffec
   728dc:	mvn	r1, #0
   728e0:	udiv	r0, r1, r0
   728e4:	ldr	r1, [fp, #-12]
   728e8:	cmp	r0, r1
   728ec:	bcs	72904 <__assert_fail@plt+0x5fd4c>
   728f0:	ldr	r0, [fp, #-12]
   728f4:	ldr	r1, [fp, #-20]	; 0xffffffec
   728f8:	mul	r0, r0, r1
   728fc:	str	r0, [fp, #-24]	; 0xffffffe8
   72900:	b	72da0 <__assert_fail@plt+0x601e8>
   72904:	ldr	r0, [fp, #-12]
   72908:	ldr	r1, [fp, #-20]	; 0xffffffec
   7290c:	mul	r0, r0, r1
   72910:	str	r0, [fp, #-24]	; 0xffffffe8
   72914:	b	72dbc <__assert_fail@plt+0x60204>
   72918:	b	72b6c <__assert_fail@plt+0x5ffb4>
   7291c:	ldr	r0, [fp, #-20]	; 0xffffffec
   72920:	cmp	r0, #0
   72924:	bcs	72a84 <__assert_fail@plt+0x5fecc>
   72928:	ldr	r0, [fp, #-12]
   7292c:	cmp	r0, #0
   72930:	bcs	72a00 <__assert_fail@plt+0x5fe48>
   72934:	b	72938 <__assert_fail@plt+0x5fd80>
   72938:	ldr	r0, [fp, #-12]
   7293c:	ldr	r2, [fp, #-20]	; 0xffffffec
   72940:	mvn	r1, #0
   72944:	mvn	r3, #-2147483648	; 0x80000000
   72948:	mov	ip, #0
   7294c:	str	r0, [fp, #-64]	; 0xffffffc0
   72950:	mov	r0, r1
   72954:	mov	r1, r3
   72958:	mov	r3, ip
   7295c:	bl	77854 <__assert_fail@plt+0x64c9c>
   72960:	ldr	r2, [fp, #-64]	; 0xffffffc0
   72964:	subs	r0, r2, r0
   72968:	rscs	r1, r1, #0
   7296c:	str	r0, [fp, #-68]	; 0xffffffbc
   72970:	str	r1, [fp, #-72]	; 0xffffffb8
   72974:	blt	72b44 <__assert_fail@plt+0x5ff8c>
   72978:	b	72b58 <__assert_fail@plt+0x5ffa0>
   7297c:	b	72990 <__assert_fail@plt+0x5fdd8>
   72980:	ldr	r0, [fp, #-20]	; 0xffffffec
   72984:	cmp	r0, #1
   72988:	bcc	729a0 <__assert_fail@plt+0x5fde8>
   7298c:	b	729b4 <__assert_fail@plt+0x5fdfc>
   72990:	ldr	r0, [fp, #-20]	; 0xffffffec
   72994:	movw	r1, #0
   72998:	cmp	r1, r0
   7299c:	bcs	729b4 <__assert_fail@plt+0x5fdfc>
   729a0:	mov	r0, #0
   729a4:	mvn	r1, #0
   729a8:	str	r1, [fp, #-76]	; 0xffffffb4
   729ac:	str	r0, [fp, #-80]	; 0xffffffb0
   729b0:	b	729d8 <__assert_fail@plt+0x5fe20>
   729b4:	ldr	r0, [fp, #-20]	; 0xffffffec
   729b8:	rsb	r2, r0, #0
   729bc:	mvn	r0, #0
   729c0:	mvn	r1, #-2147483648	; 0x80000000
   729c4:	mov	r3, #0
   729c8:	bl	77854 <__assert_fail@plt+0x64c9c>
   729cc:	str	r0, [fp, #-76]	; 0xffffffb4
   729d0:	str	r1, [fp, #-80]	; 0xffffffb0
   729d4:	b	729d8 <__assert_fail@plt+0x5fe20>
   729d8:	ldr	r0, [fp, #-80]	; 0xffffffb0
   729dc:	ldr	r1, [fp, #-76]	; 0xffffffb4
   729e0:	ldr	r2, [fp, #-12]
   729e4:	mvn	r2, r2
   729e8:	subs	r1, r2, r1
   729ec:	rscs	r0, r0, #0
   729f0:	str	r1, [fp, #-84]	; 0xffffffac
   729f4:	str	r0, [fp, #-88]	; 0xffffffa8
   729f8:	bge	72b44 <__assert_fail@plt+0x5ff8c>
   729fc:	b	72b58 <__assert_fail@plt+0x5ffa0>
   72a00:	ldr	r0, [fp, #-20]	; 0xffffffec
   72a04:	cmn	r0, #1
   72a08:	bne	72a50 <__assert_fail@plt+0x5fe98>
   72a0c:	b	72a30 <__assert_fail@plt+0x5fe78>
   72a10:	ldr	r0, [fp, #-12]
   72a14:	rsbs	r0, r0, #0
   72a18:	mov	r1, #0
   72a1c:	sbcs	r1, r1, #-2147483648	; 0x80000000
   72a20:	str	r0, [sp, #92]	; 0x5c
   72a24:	str	r1, [sp, #88]	; 0x58
   72a28:	blt	72b44 <__assert_fail@plt+0x5ff8c>
   72a2c:	b	72b58 <__assert_fail@plt+0x5ffa0>
   72a30:	ldr	r0, [fp, #-12]
   72a34:	movw	r1, #0
   72a38:	cmp	r1, r0
   72a3c:	bcs	72b58 <__assert_fail@plt+0x5ffa0>
   72a40:	mov	r0, #0
   72a44:	cmp	r0, #0
   72a48:	bne	72b44 <__assert_fail@plt+0x5ff8c>
   72a4c:	b	72b58 <__assert_fail@plt+0x5ffa0>
   72a50:	ldr	r2, [fp, #-20]	; 0xffffffec
   72a54:	mov	r1, #-2147483648	; 0x80000000
   72a58:	mov	r0, #0
   72a5c:	str	r0, [sp, #84]	; 0x54
   72a60:	ldr	r3, [sp, #84]	; 0x54
   72a64:	bl	77780 <__assert_fail@plt+0x64bc8>
   72a68:	ldr	r2, [fp, #-12]
   72a6c:	subs	r0, r0, r2
   72a70:	sbcs	r1, r1, #0
   72a74:	str	r0, [sp, #80]	; 0x50
   72a78:	str	r1, [sp, #76]	; 0x4c
   72a7c:	blt	72b44 <__assert_fail@plt+0x5ff8c>
   72a80:	b	72b58 <__assert_fail@plt+0x5ffa0>
   72a84:	ldr	r0, [fp, #-20]	; 0xffffffec
   72a88:	cmp	r0, #0
   72a8c:	bne	72a94 <__assert_fail@plt+0x5fedc>
   72a90:	b	72b58 <__assert_fail@plt+0x5ffa0>
   72a94:	ldr	r0, [fp, #-12]
   72a98:	cmp	r0, #0
   72a9c:	bcs	72b14 <__assert_fail@plt+0x5ff5c>
   72aa0:	ldr	r0, [fp, #-12]
   72aa4:	cmn	r0, #1
   72aa8:	bne	72ae0 <__assert_fail@plt+0x5ff28>
   72aac:	b	72ad0 <__assert_fail@plt+0x5ff18>
   72ab0:	ldr	r0, [fp, #-20]	; 0xffffffec
   72ab4:	rsbs	r0, r0, #0
   72ab8:	mov	r1, #0
   72abc:	sbcs	r1, r1, #-2147483648	; 0x80000000
   72ac0:	str	r0, [sp, #72]	; 0x48
   72ac4:	str	r1, [sp, #68]	; 0x44
   72ac8:	blt	72b44 <__assert_fail@plt+0x5ff8c>
   72acc:	b	72b58 <__assert_fail@plt+0x5ffa0>
   72ad0:	mov	r0, #0
   72ad4:	cmp	r0, #0
   72ad8:	bne	72b44 <__assert_fail@plt+0x5ff8c>
   72adc:	b	72b58 <__assert_fail@plt+0x5ffa0>
   72ae0:	ldr	r2, [fp, #-12]
   72ae4:	mov	r1, #-2147483648	; 0x80000000
   72ae8:	mov	r0, #0
   72aec:	str	r0, [sp, #64]	; 0x40
   72af0:	ldr	r3, [sp, #64]	; 0x40
   72af4:	bl	77780 <__assert_fail@plt+0x64bc8>
   72af8:	ldr	r2, [fp, #-20]	; 0xffffffec
   72afc:	subs	r0, r0, r2
   72b00:	sbcs	r1, r1, #0
   72b04:	str	r0, [sp, #60]	; 0x3c
   72b08:	str	r1, [sp, #56]	; 0x38
   72b0c:	blt	72b44 <__assert_fail@plt+0x5ff8c>
   72b10:	b	72b58 <__assert_fail@plt+0x5ffa0>
   72b14:	ldr	r2, [fp, #-20]	; 0xffffffec
   72b18:	mvn	r0, #0
   72b1c:	mvn	r1, #-2147483648	; 0x80000000
   72b20:	mov	r3, #0
   72b24:	bl	77854 <__assert_fail@plt+0x64c9c>
   72b28:	ldr	r2, [fp, #-12]
   72b2c:	subs	r0, r0, r2
   72b30:	sbcs	r1, r1, #0
   72b34:	str	r0, [sp, #52]	; 0x34
   72b38:	str	r1, [sp, #48]	; 0x30
   72b3c:	bge	72b58 <__assert_fail@plt+0x5ffa0>
   72b40:	b	72b44 <__assert_fail@plt+0x5ff8c>
   72b44:	ldr	r0, [fp, #-12]
   72b48:	ldr	r1, [fp, #-20]	; 0xffffffec
   72b4c:	mul	r0, r0, r1
   72b50:	str	r0, [fp, #-24]	; 0xffffffe8
   72b54:	b	72da0 <__assert_fail@plt+0x601e8>
   72b58:	ldr	r0, [fp, #-12]
   72b5c:	ldr	r1, [fp, #-20]	; 0xffffffec
   72b60:	mul	r0, r0, r1
   72b64:	str	r0, [fp, #-24]	; 0xffffffe8
   72b68:	b	72dbc <__assert_fail@plt+0x60204>
   72b6c:	ldr	r0, [fp, #-20]	; 0xffffffec
   72b70:	cmp	r0, #0
   72b74:	bcs	72cc0 <__assert_fail@plt+0x60108>
   72b78:	ldr	r0, [fp, #-12]
   72b7c:	cmp	r0, #0
   72b80:	bcs	72c48 <__assert_fail@plt+0x60090>
   72b84:	b	72bc0 <__assert_fail@plt+0x60008>
   72b88:	ldr	r0, [fp, #-12]
   72b8c:	ldr	r2, [fp, #-20]	; 0xffffffec
   72b90:	mvn	r1, #0
   72b94:	mov	r3, #0
   72b98:	str	r0, [sp, #44]	; 0x2c
   72b9c:	mov	r0, r1
   72ba0:	bl	77854 <__assert_fail@plt+0x64c9c>
   72ba4:	ldr	r2, [sp, #44]	; 0x2c
   72ba8:	subs	r0, r2, r0
   72bac:	rscs	r1, r1, #0
   72bb0:	str	r0, [sp, #40]	; 0x28
   72bb4:	str	r1, [sp, #36]	; 0x24
   72bb8:	bcc	72d78 <__assert_fail@plt+0x601c0>
   72bbc:	b	72d8c <__assert_fail@plt+0x601d4>
   72bc0:	b	72bd4 <__assert_fail@plt+0x6001c>
   72bc4:	ldr	r0, [fp, #-20]	; 0xffffffec
   72bc8:	cmp	r0, #1
   72bcc:	bcc	72be4 <__assert_fail@plt+0x6002c>
   72bd0:	b	72bf8 <__assert_fail@plt+0x60040>
   72bd4:	ldr	r0, [fp, #-20]	; 0xffffffec
   72bd8:	movw	r1, #0
   72bdc:	cmp	r1, r0
   72be0:	bcs	72bf8 <__assert_fail@plt+0x60040>
   72be4:	mov	r0, #1
   72be8:	mvn	r1, #0
   72bec:	str	r1, [sp, #32]
   72bf0:	str	r0, [sp, #28]
   72bf4:	b	72c20 <__assert_fail@plt+0x60068>
   72bf8:	ldr	r0, [fp, #-20]	; 0xffffffec
   72bfc:	rsb	r2, r0, #0
   72c00:	mvn	r0, #0
   72c04:	mov	r3, #0
   72c08:	str	r0, [sp, #24]
   72c0c:	ldr	r1, [sp, #24]
   72c10:	bl	77854 <__assert_fail@plt+0x64c9c>
   72c14:	str	r0, [sp, #32]
   72c18:	str	r1, [sp, #28]
   72c1c:	b	72c20 <__assert_fail@plt+0x60068>
   72c20:	ldr	r0, [sp, #28]
   72c24:	ldr	r1, [sp, #32]
   72c28:	ldr	r2, [fp, #-12]
   72c2c:	mvn	r2, r2
   72c30:	subs	r1, r2, r1
   72c34:	rscs	r0, r0, #0
   72c38:	str	r1, [sp, #20]
   72c3c:	str	r0, [sp, #16]
   72c40:	bcs	72d78 <__assert_fail@plt+0x601c0>
   72c44:	b	72d8c <__assert_fail@plt+0x601d4>
   72c48:	b	72c50 <__assert_fail@plt+0x60098>
   72c4c:	b	72c54 <__assert_fail@plt+0x6009c>
   72c50:	b	72ca4 <__assert_fail@plt+0x600ec>
   72c54:	ldr	r0, [fp, #-20]	; 0xffffffec
   72c58:	cmn	r0, #1
   72c5c:	bne	72ca4 <__assert_fail@plt+0x600ec>
   72c60:	b	72c7c <__assert_fail@plt+0x600c4>
   72c64:	ldr	r0, [fp, #-12]
   72c68:	add	r0, r0, #0
   72c6c:	movw	r1, #0
   72c70:	cmp	r1, r0
   72c74:	bcc	72d78 <__assert_fail@plt+0x601c0>
   72c78:	b	72d8c <__assert_fail@plt+0x601d4>
   72c7c:	ldr	r0, [fp, #-12]
   72c80:	movw	r1, #0
   72c84:	cmp	r1, r0
   72c88:	bcs	72d8c <__assert_fail@plt+0x601d4>
   72c8c:	ldr	r0, [fp, #-12]
   72c90:	sub	r0, r0, #1
   72c94:	mvn	r1, #0
   72c98:	cmp	r1, r0
   72c9c:	bcc	72d78 <__assert_fail@plt+0x601c0>
   72ca0:	b	72d8c <__assert_fail@plt+0x601d4>
   72ca4:	ldr	r0, [fp, #-20]	; 0xffffffec
   72ca8:	movw	r1, #0
   72cac:	udiv	r0, r1, r0
   72cb0:	ldr	r1, [fp, #-12]
   72cb4:	cmp	r0, r1
   72cb8:	bcc	72d78 <__assert_fail@plt+0x601c0>
   72cbc:	b	72d8c <__assert_fail@plt+0x601d4>
   72cc0:	ldr	r0, [fp, #-20]	; 0xffffffec
   72cc4:	cmp	r0, #0
   72cc8:	bne	72cd0 <__assert_fail@plt+0x60118>
   72ccc:	b	72d8c <__assert_fail@plt+0x601d4>
   72cd0:	ldr	r0, [fp, #-12]
   72cd4:	cmp	r0, #0
   72cd8:	bcs	72d44 <__assert_fail@plt+0x6018c>
   72cdc:	b	72ce4 <__assert_fail@plt+0x6012c>
   72ce0:	b	72ce8 <__assert_fail@plt+0x60130>
   72ce4:	b	72d28 <__assert_fail@plt+0x60170>
   72ce8:	ldr	r0, [fp, #-12]
   72cec:	cmn	r0, #1
   72cf0:	bne	72d28 <__assert_fail@plt+0x60170>
   72cf4:	b	72d10 <__assert_fail@plt+0x60158>
   72cf8:	ldr	r0, [fp, #-20]	; 0xffffffec
   72cfc:	add	r0, r0, #0
   72d00:	movw	r1, #0
   72d04:	cmp	r1, r0
   72d08:	bcc	72d78 <__assert_fail@plt+0x601c0>
   72d0c:	b	72d8c <__assert_fail@plt+0x601d4>
   72d10:	ldr	r0, [fp, #-20]	; 0xffffffec
   72d14:	sub	r0, r0, #1
   72d18:	mvn	r1, #0
   72d1c:	cmp	r1, r0
   72d20:	bcc	72d78 <__assert_fail@plt+0x601c0>
   72d24:	b	72d8c <__assert_fail@plt+0x601d4>
   72d28:	ldr	r0, [fp, #-12]
   72d2c:	movw	r1, #0
   72d30:	udiv	r0, r1, r0
   72d34:	ldr	r1, [fp, #-20]	; 0xffffffec
   72d38:	cmp	r0, r1
   72d3c:	bcc	72d78 <__assert_fail@plt+0x601c0>
   72d40:	b	72d8c <__assert_fail@plt+0x601d4>
   72d44:	ldr	r2, [fp, #-20]	; 0xffffffec
   72d48:	mvn	r0, #0
   72d4c:	mov	r3, #0
   72d50:	str	r0, [sp, #12]
   72d54:	ldr	r1, [sp, #12]
   72d58:	bl	77854 <__assert_fail@plt+0x64c9c>
   72d5c:	ldr	r2, [fp, #-12]
   72d60:	subs	r0, r0, r2
   72d64:	sbcs	r1, r1, #0
   72d68:	str	r0, [sp, #8]
   72d6c:	str	r1, [sp, #4]
   72d70:	bcs	72d8c <__assert_fail@plt+0x601d4>
   72d74:	b	72d78 <__assert_fail@plt+0x601c0>
   72d78:	ldr	r0, [fp, #-12]
   72d7c:	ldr	r1, [fp, #-20]	; 0xffffffec
   72d80:	mul	r0, r0, r1
   72d84:	str	r0, [fp, #-24]	; 0xffffffe8
   72d88:	b	72da0 <__assert_fail@plt+0x601e8>
   72d8c:	ldr	r0, [fp, #-12]
   72d90:	ldr	r1, [fp, #-20]	; 0xffffffec
   72d94:	mul	r0, r0, r1
   72d98:	str	r0, [fp, #-24]	; 0xffffffe8
   72d9c:	b	72dbc <__assert_fail@plt+0x60204>
   72da0:	bl	128d0 <__errno_location@plt>
   72da4:	movw	lr, #12
   72da8:	str	lr, [r0]
   72dac:	movw	r0, #0
   72db0:	and	r0, r0, #1
   72db4:	strb	r0, [fp, #-1]
   72db8:	b	72e88 <__assert_fail@plt+0x602d0>
   72dbc:	ldr	r0, [fp, #-8]
   72dc0:	ldr	r0, [r0, #8]
   72dc4:	ldr	r1, [fp, #-16]
   72dc8:	cmp	r0, r1
   72dcc:	bne	72e24 <__assert_fail@plt+0x6026c>
   72dd0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   72dd4:	bl	549ac <__assert_fail@plt+0x41df4>
   72dd8:	str	r0, [fp, #-28]	; 0xffffffe4
   72ddc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   72de0:	movw	lr, #0
   72de4:	cmp	r0, lr
   72de8:	beq	72e20 <__assert_fail@plt+0x60268>
   72dec:	ldr	r0, [fp, #-8]
   72df0:	ldr	r0, [r0, #8]
   72df4:	movw	r1, #0
   72df8:	cmp	r0, r1
   72dfc:	beq	72e20 <__assert_fail@plt+0x60268>
   72e00:	ldr	r0, [fp, #-28]	; 0xffffffe4
   72e04:	ldr	r1, [fp, #-8]
   72e08:	ldr	r1, [r1, #8]
   72e0c:	ldr	r2, [fp, #-8]
   72e10:	ldr	r2, [r2]
   72e14:	ldr	r3, [fp, #-20]	; 0xffffffec
   72e18:	mul	r2, r2, r3
   72e1c:	bl	125c4 <memcpy@plt>
   72e20:	b	72e38 <__assert_fail@plt+0x60280>
   72e24:	ldr	r0, [fp, #-8]
   72e28:	ldr	r0, [r0, #8]
   72e2c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   72e30:	bl	55a84 <__assert_fail@plt+0x42ecc>
   72e34:	str	r0, [fp, #-28]	; 0xffffffe4
   72e38:	ldr	r0, [fp, #-28]	; 0xffffffe4
   72e3c:	movw	r1, #0
   72e40:	cmp	r0, r1
   72e44:	bne	72e58 <__assert_fail@plt+0x602a0>
   72e48:	movw	r0, #0
   72e4c:	and	r0, r0, #1
   72e50:	strb	r0, [fp, #-1]
   72e54:	b	72e88 <__assert_fail@plt+0x602d0>
   72e58:	ldr	r0, [fp, #-28]	; 0xffffffe4
   72e5c:	ldr	r1, [fp, #-8]
   72e60:	str	r0, [r1, #8]
   72e64:	ldr	r0, [fp, #-12]
   72e68:	ldr	r1, [fp, #-8]
   72e6c:	str	r0, [r1, #4]
   72e70:	ldr	r0, [fp, #-12]
   72e74:	ldr	r1, [fp, #-8]
   72e78:	str	r0, [r1]
   72e7c:	movw	r0, #1
   72e80:	and	r0, r0, #1
   72e84:	strb	r0, [fp, #-1]
   72e88:	ldrb	r0, [fp, #-1]
   72e8c:	and	r0, r0, #1
   72e90:	mov	sp, fp
   72e94:	pop	{fp, pc}
   72e98:	svcvc	0x00ffffff
   72e9c:	andhi	r0, r0, r0
   72ea0:			; <UNDEFINED> instruction: 0xffff8000
   72ea4:	push	{fp, lr}
   72ea8:	mov	fp, sp
   72eac:	sub	sp, sp, #8
   72eb0:	str	r0, [sp, #4]
   72eb4:	ldr	r1, [sp, #4]
   72eb8:	movw	r0, #0
   72ebc:	bl	125ac <clock_gettime@plt>
   72ec0:	str	r0, [sp]
   72ec4:	mov	sp, fp
   72ec8:	pop	{fp, pc}
   72ecc:	push	{fp, lr}
   72ed0:	mov	fp, sp
   72ed4:	bl	72ea4 <__assert_fail@plt+0x602ec>
   72ed8:	pop	{fp, pc}
   72edc:	push	{r4, r5, fp, lr}
   72ee0:	add	fp, sp, #8
   72ee4:	sub	sp, sp, #272	; 0x110
   72ee8:	add	r1, sp, #7
   72eec:	str	r0, [fp, #-16]
   72ef0:	ldr	r0, [fp, #-16]
   72ef4:	movw	r2, #257	; 0x101
   72ef8:	bl	77264 <__assert_fail@plt+0x646ac>
   72efc:	cmp	r0, #0
   72f00:	beq	72f14 <__assert_fail@plt+0x6035c>
   72f04:	movw	r0, #0
   72f08:	and	r0, r0, #1
   72f0c:	strb	r0, [fp, #-9]
   72f10:	b	72f68 <__assert_fail@plt+0x603b0>
   72f14:	add	r0, sp, #7
   72f18:	movw	r1, #32626	; 0x7f72
   72f1c:	movt	r1, #7
   72f20:	bl	124c8 <strcmp@plt>
   72f24:	cmp	r0, #0
   72f28:	movw	r0, #1
   72f2c:	str	r0, [sp]
   72f30:	beq	72f54 <__assert_fail@plt+0x6039c>
   72f34:	add	r0, sp, #7
   72f38:	movw	r1, #59580	; 0xe8bc
   72f3c:	movt	r1, #7
   72f40:	bl	124c8 <strcmp@plt>
   72f44:	cmp	r0, #0
   72f48:	movw	r0, #0
   72f4c:	moveq	r0, #1
   72f50:	str	r0, [sp]
   72f54:	ldr	r0, [sp]
   72f58:	mvn	r1, #0
   72f5c:	eor	r0, r0, r1
   72f60:	and	r0, r0, #1
   72f64:	strb	r0, [fp, #-9]
   72f68:	ldrb	r0, [fp, #-9]
   72f6c:	and	r0, r0, #1
   72f70:	sub	sp, fp, #8
   72f74:	pop	{r4, r5, fp, pc}
   72f78:	sub	sp, sp, #12
   72f7c:	str	r0, [sp, #8]
   72f80:	str	r1, [sp, #4]
   72f84:	ldr	r0, [sp, #8]
   72f88:	movw	r1, #1
   72f8c:	strb	r1, [r0, #28]
   72f90:	ldr	r0, [sp, #8]
   72f94:	movw	r1, #0
   72f98:	str	r1, [r0, #20]
   72f9c:	ldr	r0, [sp, #8]
   72fa0:	str	r1, [r0, #24]
   72fa4:	str	r1, [sp]
   72fa8:	ldr	r0, [sp]
   72fac:	cmp	r0, #4
   72fb0:	bge	72fd8 <__assert_fail@plt+0x60420>
   72fb4:	ldr	r0, [sp, #4]
   72fb8:	ldr	r1, [sp, #8]
   72fbc:	ldr	r2, [sp]
   72fc0:	add	r1, r1, r2, lsl #2
   72fc4:	str	r0, [r1]
   72fc8:	ldr	r0, [sp]
   72fcc:	add	r0, r0, #1
   72fd0:	str	r0, [sp]
   72fd4:	b	72fa8 <__assert_fail@plt+0x603f0>
   72fd8:	ldr	r0, [sp, #4]
   72fdc:	ldr	r1, [sp, #8]
   72fe0:	str	r0, [r1, #16]
   72fe4:	add	sp, sp, #12
   72fe8:	bx	lr
   72fec:	sub	sp, sp, #4
   72ff0:	str	r0, [sp]
   72ff4:	ldr	r0, [sp]
   72ff8:	ldrb	r0, [r0, #28]
   72ffc:	and	r0, r0, #1
   73000:	add	sp, sp, #4
   73004:	bx	lr
   73008:	sub	sp, sp, #16
   7300c:	str	r0, [sp, #12]
   73010:	str	r1, [sp, #8]
   73014:	ldr	r0, [sp, #12]
   73018:	ldr	r1, [r0, #20]
   7301c:	ldrb	r0, [r0, #28]
   73020:	mov	r2, #1
   73024:	bic	r0, r2, r0
   73028:	add	r0, r1, r0
   7302c:	and	r0, r0, #3
   73030:	str	r0, [sp, #4]
   73034:	ldr	r0, [sp, #12]
   73038:	ldr	r1, [sp, #4]
   7303c:	ldr	r0, [r0, r1, lsl #2]
   73040:	str	r0, [sp]
   73044:	ldr	r0, [sp, #8]
   73048:	ldr	r1, [sp, #12]
   7304c:	ldr	r2, [sp, #4]
   73050:	add	r1, r1, r2, lsl #2
   73054:	str	r0, [r1]
   73058:	ldr	r0, [sp, #4]
   7305c:	ldr	r1, [sp, #12]
   73060:	str	r0, [r1, #20]
   73064:	ldr	r0, [sp, #4]
   73068:	ldr	r1, [sp, #12]
   7306c:	ldr	r1, [r1, #24]
   73070:	cmp	r0, r1
   73074:	bne	730a4 <__assert_fail@plt+0x604ec>
   73078:	ldr	r0, [sp, #12]
   7307c:	ldr	r0, [r0, #24]
   73080:	ldr	r1, [sp, #12]
   73084:	ldrb	r1, [r1, #28]
   73088:	mvn	r2, #0
   7308c:	eor	r1, r1, r2
   73090:	and	r1, r1, #1
   73094:	add	r0, r0, r1
   73098:	and	r0, r0, #3
   7309c:	ldr	r1, [sp, #12]
   730a0:	str	r0, [r1, #24]
   730a4:	ldr	r0, [sp, #12]
   730a8:	movw	r1, #0
   730ac:	strb	r1, [r0, #28]
   730b0:	ldr	r0, [sp]
   730b4:	add	sp, sp, #16
   730b8:	bx	lr
   730bc:	push	{fp, lr}
   730c0:	mov	fp, sp
   730c4:	sub	sp, sp, #8
   730c8:	str	r0, [sp, #4]
   730cc:	ldr	r0, [sp, #4]
   730d0:	bl	72fec <__assert_fail@plt+0x60434>
   730d4:	tst	r0, #1
   730d8:	beq	730e0 <__assert_fail@plt+0x60528>
   730dc:	bl	12b64 <abort@plt>
   730e0:	ldr	r0, [sp, #4]
   730e4:	ldr	r1, [r0, #20]
   730e8:	ldr	r0, [r0, r1, lsl #2]
   730ec:	str	r0, [sp]
   730f0:	ldr	r0, [sp, #4]
   730f4:	ldr	r1, [r0, #16]
   730f8:	ldr	r2, [r0, #20]
   730fc:	add	r0, r0, r2, lsl #2
   73100:	str	r1, [r0]
   73104:	ldr	r0, [sp, #4]
   73108:	ldr	r0, [r0, #20]
   7310c:	ldr	r1, [sp, #4]
   73110:	ldr	r1, [r1, #24]
   73114:	cmp	r0, r1
   73118:	bne	7312c <__assert_fail@plt+0x60574>
   7311c:	ldr	r0, [sp, #4]
   73120:	movw	r1, #1
   73124:	strb	r1, [r0, #28]
   73128:	b	73148 <__assert_fail@plt+0x60590>
   7312c:	ldr	r0, [sp, #4]
   73130:	ldr	r0, [r0, #20]
   73134:	add	r0, r0, #4
   73138:	sub	r0, r0, #1
   7313c:	and	r0, r0, #3
   73140:	ldr	r1, [sp, #4]
   73144:	str	r0, [r1, #20]
   73148:	ldr	r0, [sp]
   7314c:	mov	sp, fp
   73150:	pop	{fp, pc}
   73154:	push	{fp, lr}
   73158:	mov	fp, sp
   7315c:	bl	128d0 <__errno_location@plt>
   73160:	movw	lr, #12
   73164:	str	lr, [r0]
   73168:	movw	r0, #0
   7316c:	pop	{fp, pc}
   73170:	push	{fp, lr}
   73174:	mov	fp, sp
   73178:	sub	sp, sp, #8
   7317c:	str	r0, [sp, #4]
   73180:	ldr	r0, [sp, #4]
   73184:	cmn	r0, #1
   73188:	bhi	7319c <__assert_fail@plt+0x605e4>
   7318c:	ldr	r0, [sp, #4]
   73190:	bl	549ac <__assert_fail@plt+0x41df4>
   73194:	str	r0, [sp]
   73198:	b	731a4 <__assert_fail@plt+0x605ec>
   7319c:	bl	73154 <__assert_fail@plt+0x6059c>
   731a0:	str	r0, [sp]
   731a4:	ldr	r0, [sp]
   731a8:	mov	sp, fp
   731ac:	pop	{fp, pc}
   731b0:	push	{fp, lr}
   731b4:	mov	fp, sp
   731b8:	sub	sp, sp, #16
   731bc:	str	r0, [fp, #-4]
   731c0:	str	r1, [sp, #8]
   731c4:	ldr	r0, [sp, #8]
   731c8:	cmn	r0, #1
   731cc:	bhi	73204 <__assert_fail@plt+0x6064c>
   731d0:	ldr	r0, [fp, #-4]
   731d4:	ldr	r1, [sp, #8]
   731d8:	ldr	r2, [sp, #8]
   731dc:	cmp	r2, #0
   731e0:	movw	r2, #0
   731e4:	movne	r2, #1
   731e8:	mvn	r3, #0
   731ec:	eor	r2, r2, r3
   731f0:	and	r2, r2, #1
   731f4:	orr	r1, r1, r2
   731f8:	bl	55a84 <__assert_fail@plt+0x42ecc>
   731fc:	str	r0, [sp, #4]
   73200:	b	7320c <__assert_fail@plt+0x60654>
   73204:	bl	73154 <__assert_fail@plt+0x6059c>
   73208:	str	r0, [sp, #4]
   7320c:	ldr	r0, [sp, #4]
   73210:	mov	sp, fp
   73214:	pop	{fp, pc}
   73218:	push	{fp, lr}
   7321c:	mov	fp, sp
   73220:	sub	sp, sp, #16
   73224:	str	r0, [sp, #8]
   73228:	str	r1, [sp, #4]
   7322c:	ldr	r0, [sp, #8]
   73230:	mvn	r1, #0
   73234:	cmp	r1, r0
   73238:	bcs	7325c <__assert_fail@plt+0x606a4>
   7323c:	ldr	r0, [sp, #4]
   73240:	cmp	r0, #0
   73244:	beq	73254 <__assert_fail@plt+0x6069c>
   73248:	bl	73154 <__assert_fail@plt+0x6059c>
   7324c:	str	r0, [fp, #-4]
   73250:	b	7329c <__assert_fail@plt+0x606e4>
   73254:	movw	r0, #0
   73258:	str	r0, [sp, #8]
   7325c:	ldr	r0, [sp, #4]
   73260:	mvn	r1, #0
   73264:	cmp	r1, r0
   73268:	bcs	7328c <__assert_fail@plt+0x606d4>
   7326c:	ldr	r0, [sp, #8]
   73270:	cmp	r0, #0
   73274:	beq	73284 <__assert_fail@plt+0x606cc>
   73278:	bl	73154 <__assert_fail@plt+0x6059c>
   7327c:	str	r0, [fp, #-4]
   73280:	b	7329c <__assert_fail@plt+0x606e4>
   73284:	movw	r0, #0
   73288:	str	r0, [sp, #4]
   7328c:	ldr	r0, [sp, #8]
   73290:	ldr	r1, [sp, #4]
   73294:	bl	50240 <__assert_fail@plt+0x3d688>
   73298:	str	r0, [fp, #-4]
   7329c:	ldr	r0, [fp, #-4]
   732a0:	mov	sp, fp
   732a4:	pop	{fp, pc}
   732a8:	push	{fp, lr}
   732ac:	mov	fp, sp
   732b0:	sub	sp, sp, #16
   732b4:	str	r0, [fp, #-4]
   732b8:	str	r1, [sp, #8]
   732bc:	str	r2, [sp, #4]
   732c0:	ldr	r0, [sp, #8]
   732c4:	cmp	r0, #0
   732c8:	beq	732d8 <__assert_fail@plt+0x60720>
   732cc:	ldr	r0, [sp, #4]
   732d0:	cmp	r0, #0
   732d4:	bne	732e4 <__assert_fail@plt+0x6072c>
   732d8:	movw	r0, #1
   732dc:	str	r0, [sp, #4]
   732e0:	str	r0, [sp, #8]
   732e4:	ldr	r0, [sp, #8]
   732e8:	cmn	r0, #1
   732ec:	bhi	73314 <__assert_fail@plt+0x6075c>
   732f0:	ldr	r0, [sp, #4]
   732f4:	cmn	r0, #1
   732f8:	bhi	73314 <__assert_fail@plt+0x6075c>
   732fc:	ldr	r0, [fp, #-4]
   73300:	ldr	r1, [sp, #8]
   73304:	ldr	r2, [sp, #4]
   73308:	bl	55b28 <__assert_fail@plt+0x42f70>
   7330c:	str	r0, [sp]
   73310:	b	7331c <__assert_fail@plt+0x60764>
   73314:	bl	73154 <__assert_fail@plt+0x6059c>
   73318:	str	r0, [sp]
   7331c:	ldr	r0, [sp]
   73320:	mov	sp, fp
   73324:	pop	{fp, pc}
   73328:	push	{fp, lr}
   7332c:	mov	fp, sp
   73330:	sub	sp, sp, #8
   73334:	movw	r0, #14
   73338:	bl	12a2c <nl_langinfo@plt>
   7333c:	str	r0, [sp, #4]
   73340:	ldr	r0, [sp, #4]
   73344:	movw	lr, #0
   73348:	cmp	r0, lr
   7334c:	bne	7335c <__assert_fail@plt+0x607a4>
   73350:	movw	r0, #39197	; 0x991d
   73354:	movt	r0, #7
   73358:	str	r0, [sp, #4]
   7335c:	ldr	r0, [sp, #4]
   73360:	ldrb	r0, [r0]
   73364:	cmp	r0, #0
   73368:	bne	73378 <__assert_fail@plt+0x607c0>
   7336c:	movw	r0, #59586	; 0xe8c2
   73370:	movt	r0, #7
   73374:	str	r0, [sp, #4]
   73378:	ldr	r0, [sp, #4]
   7337c:	mov	sp, fp
   73380:	pop	{fp, pc}
   73384:	push	{fp, lr}
   73388:	mov	fp, sp
   7338c:	sub	sp, sp, #48	; 0x30
   73390:	str	r0, [fp, #-8]
   73394:	mov	r0, #15
   73398:	str	r0, [fp, #-12]
   7339c:	ldr	r0, [fp, #-12]
   733a0:	add	r0, r0, #1
   733a4:	str	r0, [fp, #-16]
   733a8:	ldr	r0, [fp, #-8]
   733ac:	ldr	r1, [fp, #-16]
   733b0:	asr	r2, r1, #31
   733b4:	adds	r0, r0, r1
   733b8:	adc	r1, r2, #0
   733bc:	and	r2, r1, #1
   733c0:	rsb	r3, r2, #0
   733c4:	eor	r1, r3, r1
   733c8:	cmp	r1, #0
   733cc:	movwne	r1, #1
   733d0:	eor	r2, r2, r0, lsr #31
   733d4:	cmp	r2, #0
   733d8:	movwne	r2, #1
   733dc:	orr	r1, r1, r2
   733e0:	str	r0, [fp, #-20]	; 0xffffffec
   733e4:	tst	r1, #1
   733e8:	bne	73494 <__assert_fail@plt+0x608dc>
   733ec:	ldr	r0, [pc, #180]	; 734a8 <__assert_fail@plt+0x608f0>
   733f0:	ldr	r1, [fp, #-20]	; 0xffffffec
   733f4:	cmp	r0, r1
   733f8:	bcc	73494 <__assert_fail@plt+0x608dc>
   733fc:	ldr	r0, [fp, #-20]	; 0xffffffec
   73400:	bl	127d4 <malloc@plt>
   73404:	str	r0, [sp, #24]
   73408:	ldr	r0, [sp, #24]
   7340c:	movw	lr, #0
   73410:	cmp	r0, lr
   73414:	beq	73490 <__assert_fail@plt+0x608d8>
   73418:	ldr	r0, [sp, #24]
   7341c:	str	r0, [sp, #20]
   73420:	ldr	r0, [sp, #20]
   73424:	adds	r0, r0, #8
   73428:	mov	r1, #0
   7342c:	adc	r1, r1, #0
   73430:	str	r0, [sp, #16]
   73434:	ldr	r0, [sp, #16]
   73438:	ldr	r2, [fp, #-12]
   7343c:	mvn	r3, #0
   73440:	eor	r2, r2, r3
   73444:	and	r0, r0, r2
   73448:	add	r0, r0, #8
   7344c:	ldr	r2, [sp, #20]
   73450:	sub	r0, r0, r2
   73454:	str	r0, [sp, #12]
   73458:	ldr	r0, [sp, #24]
   7345c:	ldr	r2, [sp, #12]
   73460:	add	r0, r0, r2
   73464:	str	r0, [sp, #8]
   73468:	ldr	r0, [sp, #8]
   7346c:	str	r0, [sp, #4]
   73470:	ldr	r0, [sp, #12]
   73474:	ldr	r2, [sp, #4]
   73478:	add	r2, r2, r3
   7347c:	strb	r0, [r2]
   73480:	ldr	r0, [sp, #4]
   73484:	str	r0, [fp, #-4]
   73488:	str	r1, [sp]
   7348c:	b	7349c <__assert_fail@plt+0x608e4>
   73490:	b	73494 <__assert_fail@plt+0x608dc>
   73494:	movw	r0, #0
   73498:	str	r0, [fp, #-4]
   7349c:	ldr	r0, [fp, #-4]
   734a0:	mov	sp, fp
   734a4:	pop	{fp, pc}
   734a8:	svcvc	0x00ffffff
   734ac:	push	{fp, lr}
   734b0:	mov	fp, sp
   734b4:	sub	sp, sp, #8
   734b8:	str	r0, [sp, #4]
   734bc:	ldr	r0, [sp, #4]
   734c0:	and	r0, r0, #7
   734c4:	cmp	r0, #0
   734c8:	beq	734d0 <__assert_fail@plt+0x60918>
   734cc:	bl	12b64 <abort@plt>
   734d0:	ldr	r0, [sp, #4]
   734d4:	and	r0, r0, #8
   734d8:	cmp	r0, #0
   734dc:	beq	7350c <__assert_fail@plt+0x60954>
   734e0:	ldr	r0, [sp, #4]
   734e4:	ldr	r1, [sp, #4]
   734e8:	mvn	r2, #0
   734ec:	add	r1, r1, r2
   734f0:	ldrb	r1, [r1]
   734f4:	movw	r2, #0
   734f8:	sub	r1, r2, r1
   734fc:	add	r0, r0, r1
   73500:	str	r0, [sp]
   73504:	ldr	r0, [sp]
   73508:	bl	50c68 <__assert_fail@plt+0x3e0b0>
   7350c:	mov	sp, fp
   73510:	pop	{fp, pc}
   73514:	push	{fp, lr}
   73518:	mov	fp, sp
   7351c:	sub	sp, sp, #16
   73520:	str	r0, [fp, #-4]
   73524:	ldr	r0, [fp, #-4]
   73528:	bl	12540 <wcwidth@plt>
   7352c:	str	r0, [sp, #8]
   73530:	ldr	r0, [sp, #8]
   73534:	cmp	r0, #0
   73538:	blt	73548 <__assert_fail@plt+0x60990>
   7353c:	ldr	r0, [sp, #8]
   73540:	str	r0, [sp, #4]
   73544:	b	7356c <__assert_fail@plt+0x609b4>
   73548:	ldr	r0, [fp, #-4]
   7354c:	bl	1269c <iswcntrl@plt>
   73550:	cmp	r0, #0
   73554:	movw	r0, #0
   73558:	movne	r0, #1
   7355c:	tst	r0, #1
   73560:	movw	r0, #0
   73564:	moveq	r0, #1
   73568:	str	r0, [sp, #4]
   7356c:	ldr	r0, [sp, #4]
   73570:	mov	sp, fp
   73574:	pop	{fp, pc}
   73578:	push	{fp, lr}
   7357c:	mov	fp, sp
   73580:	sub	sp, sp, #8
   73584:	str	r0, [sp, #4]
   73588:	str	r1, [sp]
   7358c:	ldr	r0, [sp]
   73590:	ldr	r0, [r0]
   73594:	ldr	r1, [sp]
   73598:	add	r1, r1, #16
   7359c:	cmp	r0, r1
   735a0:	bne	735d4 <__assert_fail@plt+0x60a1c>
   735a4:	ldr	r0, [sp, #4]
   735a8:	add	r0, r0, #16
   735ac:	ldr	r1, [sp]
   735b0:	add	r1, r1, #16
   735b4:	ldr	r2, [sp]
   735b8:	ldr	r2, [r2, #4]
   735bc:	bl	125c4 <memcpy@plt>
   735c0:	ldr	r0, [sp, #4]
   735c4:	add	r0, r0, #16
   735c8:	ldr	r1, [sp, #4]
   735cc:	str	r0, [r1]
   735d0:	b	735e4 <__assert_fail@plt+0x60a2c>
   735d4:	ldr	r0, [sp]
   735d8:	ldr	r0, [r0]
   735dc:	ldr	r1, [sp, #4]
   735e0:	str	r0, [r1]
   735e4:	ldr	r0, [sp]
   735e8:	ldr	r0, [r0, #4]
   735ec:	ldr	r1, [sp, #4]
   735f0:	str	r0, [r1, #4]
   735f4:	ldr	r0, [sp]
   735f8:	ldrb	r0, [r0, #8]
   735fc:	ldr	r1, [sp, #4]
   73600:	and	r2, r0, #1
   73604:	strb	r2, [r1, #8]
   73608:	tst	r0, #1
   7360c:	beq	73620 <__assert_fail@plt+0x60a68>
   73610:	ldr	r0, [sp]
   73614:	ldr	r0, [r0, #12]
   73618:	ldr	r1, [sp, #4]
   7361c:	str	r0, [r1, #12]
   73620:	mov	sp, fp
   73624:	pop	{fp, pc}
   73628:	sub	sp, sp, #8
   7362c:	movw	r1, #59592	; 0xe8c8
   73630:	movt	r1, #7
   73634:	strb	r0, [sp, #7]
   73638:	ldrb	r0, [sp, #7]
   7363c:	lsr	r0, r0, #5
   73640:	movw	r2, #59592	; 0xe8c8
   73644:	movt	r2, #7
   73648:	add	r0, r2, r0, lsl #2
   7364c:	ldr	r0, [r0]
   73650:	ldrb	r2, [sp, #7]
   73654:	and	r2, r2, #31
   73658:	lsr	r0, r0, r2
   7365c:	and	r0, r0, #1
   73660:	cmp	r0, #0
   73664:	movw	r0, #0
   73668:	movne	r0, #1
   7366c:	and	r0, r0, #1
   73670:	str	r1, [sp]
   73674:	add	sp, sp, #8
   73678:	bx	lr
   7367c:	push	{fp, lr}
   73680:	mov	fp, sp
   73684:	sub	sp, sp, #80	; 0x50
   73688:	str	r0, [fp, #-8]
   7368c:	bl	12720 <__ctype_get_mb_cur_max@plt>
   73690:	cmp	r0, #1
   73694:	bls	73750 <__assert_fail@plt+0x60b98>
   73698:	movw	r0, #0
   7369c:	str	r0, [fp, #-12]
   736a0:	ldr	r0, [fp, #-8]
   736a4:	str	r0, [sp, #28]
   736a8:	movw	r0, #0
   736ac:	strb	r0, [sp, #12]
   736b0:	add	r1, sp, #12
   736b4:	add	r1, r1, #4
   736b8:	str	r0, [sp, #8]
   736bc:	mov	r0, r1
   736c0:	ldr	r1, [sp, #8]
   736c4:	and	r1, r1, #255	; 0xff
   736c8:	movw	r2, #8
   736cc:	bl	12900 <memset@plt>
   736d0:	ldr	r0, [sp, #8]
   736d4:	strb	r0, [sp, #24]
   736d8:	add	r0, sp, #12
   736dc:	bl	3172c <__assert_fail@plt+0x1eb74>
   736e0:	ldrb	r0, [sp, #36]	; 0x24
   736e4:	tst	r0, #1
   736e8:	movw	r0, #0
   736ec:	str	r0, [sp, #4]
   736f0:	beq	73708 <__assert_fail@plt+0x60b50>
   736f4:	ldr	r0, [sp, #40]	; 0x28
   736f8:	cmp	r0, #0
   736fc:	movw	r0, #0
   73700:	moveq	r0, #1
   73704:	str	r0, [sp, #4]
   73708:	ldr	r0, [sp, #4]
   7370c:	mvn	r1, #0
   73710:	eor	r0, r0, r1
   73714:	tst	r0, #1
   73718:	beq	73744 <__assert_fail@plt+0x60b8c>
   7371c:	ldr	r0, [fp, #-12]
   73720:	add	r0, r0, #1
   73724:	str	r0, [fp, #-12]
   73728:	ldr	r0, [sp, #32]
   7372c:	ldr	r1, [sp, #28]
   73730:	add	r0, r1, r0
   73734:	str	r0, [sp, #28]
   73738:	movw	r0, #0
   7373c:	strb	r0, [sp, #24]
   73740:	b	736d8 <__assert_fail@plt+0x60b20>
   73744:	ldr	r0, [fp, #-12]
   73748:	str	r0, [fp, #-4]
   7374c:	b	7375c <__assert_fail@plt+0x60ba4>
   73750:	ldr	r0, [fp, #-8]
   73754:	bl	12888 <strlen@plt>
   73758:	str	r0, [fp, #-4]
   7375c:	ldr	r0, [fp, #-4]
   73760:	mov	sp, fp
   73764:	pop	{fp, pc}
   73768:	push	{r4, r5, r6, sl, fp, lr}
   7376c:	add	fp, sp, #16
   73770:	sub	sp, sp, #56	; 0x38
   73774:	ldr	ip, [fp, #12]
   73778:	ldr	lr, [fp, #8]
   7377c:	str	r0, [fp, #-20]	; 0xffffffec
   73780:	str	r1, [fp, #-24]	; 0xffffffe8
   73784:	str	r2, [fp, #-28]	; 0xffffffe4
   73788:	str	r3, [fp, #-32]	; 0xffffffe0
   7378c:	movw	r0, #0
   73790:	strb	r0, [fp, #-33]	; 0xffffffdf
   73794:	ldr	r0, [fp, #-20]	; 0xffffffec
   73798:	ldr	r1, [fp, #-24]	; 0xffffffe8
   7379c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   737a0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   737a4:	ldr	r4, [fp, #8]
   737a8:	ldr	r5, [fp, #12]
   737ac:	movw	r6, #0
   737b0:	and	r6, r6, #1
   737b4:	str	r6, [sp]
   737b8:	movw	r6, #0
   737bc:	str	r6, [sp, #4]
   737c0:	mvn	r6, #0
   737c4:	str	r6, [sp, #8]
   737c8:	sub	r6, fp, #33	; 0x21
   737cc:	str	r6, [sp, #12]
   737d0:	str	r4, [sp, #16]
   737d4:	str	r5, [sp, #20]
   737d8:	str	lr, [sp, #32]
   737dc:	str	ip, [sp, #28]
   737e0:	bl	737ec <__assert_fail@plt+0x60c34>
   737e4:	sub	sp, fp, #16
   737e8:	pop	{r4, r5, r6, sl, fp, pc}
   737ec:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   737f0:	add	fp, sp, #24
   737f4:	sub	sp, sp, #1872	; 0x750
   737f8:	ldr	ip, [fp, #28]
   737fc:	ldr	lr, [fp, #24]
   73800:	ldr	r4, [fp, #20]
   73804:	ldr	r5, [fp, #16]
   73808:	ldr	r6, [fp, #12]
   7380c:	ldr	r7, [fp, #8]
   73810:	str	r0, [fp, #-32]	; 0xffffffe0
   73814:	str	r1, [fp, #-36]	; 0xffffffdc
   73818:	str	r2, [fp, #-40]	; 0xffffffd8
   7381c:	str	r3, [fp, #-44]	; 0xffffffd4
   73820:	and	r0, r7, #1
   73824:	strb	r0, [fp, #-45]	; 0xffffffd3
   73828:	str	lr, [sp, #380]	; 0x17c
   7382c:	str	r4, [sp, #376]	; 0x178
   73830:	str	r5, [sp, #372]	; 0x174
   73834:	str	r6, [sp, #368]	; 0x170
   73838:	str	ip, [sp, #364]	; 0x16c
   7383c:	bl	128d0 <__errno_location@plt>
   73840:	ldr	r0, [r0]
   73844:	str	r0, [fp, #-52]	; 0xffffffcc
   73848:	ldr	r0, [fp, #-44]	; 0xffffffd4
   7384c:	ldr	r0, [r0, #8]
   73850:	str	r0, [fp, #-56]	; 0xffffffc8
   73854:	movw	r0, #0
   73858:	str	r0, [fp, #-64]	; 0xffffffc0
   7385c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   73860:	str	r1, [fp, #-68]	; 0xffffffbc
   73864:	str	r0, [fp, #-60]	; 0xffffffc4
   73868:	ldr	r1, [fp, #-44]	; 0xffffffd4
   7386c:	ldr	r1, [r1, #40]	; 0x28
   73870:	str	r1, [fp, #-60]	; 0xffffffc4
   73874:	ldr	r1, [fp, #-60]	; 0xffffffc4
   73878:	cmp	r1, r0
   7387c:	bne	7388c <__assert_fail@plt+0x60cd4>
   73880:	movw	r0, #39197	; 0x991d
   73884:	movt	r0, #7
   73888:	str	r0, [fp, #-60]	; 0xffffffc4
   7388c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   73890:	cmp	r0, #12
   73894:	ble	738a8 <__assert_fail@plt+0x60cf0>
   73898:	ldr	r0, [fp, #-56]	; 0xffffffc8
   7389c:	sub	r0, r0, #12
   738a0:	str	r0, [fp, #-56]	; 0xffffffc8
   738a4:	b	738c0 <__assert_fail@plt+0x60d08>
   738a8:	ldr	r0, [fp, #-56]	; 0xffffffc8
   738ac:	cmp	r0, #0
   738b0:	bne	738bc <__assert_fail@plt+0x60d04>
   738b4:	movw	r0, #12
   738b8:	str	r0, [fp, #-56]	; 0xffffffc8
   738bc:	b	738c0 <__assert_fail@plt+0x60d08>
   738c0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   738c4:	str	r0, [fp, #-72]	; 0xffffffb8
   738c8:	ldr	r0, [fp, #-72]	; 0xffffffb8
   738cc:	ldrb	r0, [r0]
   738d0:	cmp	r0, #0
   738d4:	beq	77024 <__assert_fail@plt+0x6446c>
   738d8:	movw	r0, #0
   738dc:	str	r0, [fp, #-76]	; 0xffffffb4
   738e0:	str	r0, [fp, #-84]	; 0xffffffac
   738e4:	movw	r0, #0
   738e8:	strb	r0, [fp, #-123]	; 0xffffff85
   738ec:	ldrb	r1, [fp, #-45]	; 0xffffffd3
   738f0:	and	r1, r1, #1
   738f4:	strb	r1, [fp, #-124]	; 0xffffff84
   738f8:	strb	r0, [fp, #-129]	; 0xffffff7f
   738fc:	ldr	r0, [fp, #-72]	; 0xffffffb8
   73900:	ldrb	r0, [r0]
   73904:	cmp	r0, #37	; 0x25
   73908:	beq	73a74 <__assert_fail@plt+0x60ebc>
   7390c:	b	73910 <__assert_fail@plt+0x60d58>
   73910:	movw	r0, #1
   73914:	str	r0, [fp, #-144]	; 0xffffff70
   73918:	ldr	r0, [fp, #-76]	; 0xffffffb4
   7391c:	cmp	r0, #45	; 0x2d
   73920:	beq	73930 <__assert_fail@plt+0x60d78>
   73924:	ldr	r0, [fp, #16]
   73928:	cmp	r0, #0
   7392c:	bge	7393c <__assert_fail@plt+0x60d84>
   73930:	movw	r0, #0
   73934:	str	r0, [sp, #360]	; 0x168
   73938:	b	73944 <__assert_fail@plt+0x60d8c>
   7393c:	ldr	r0, [fp, #16]
   73940:	str	r0, [sp, #360]	; 0x168
   73944:	ldr	r0, [sp, #360]	; 0x168
   73948:	str	r0, [fp, #-148]	; 0xffffff6c
   7394c:	ldr	r0, [fp, #-144]	; 0xffffff70
   73950:	ldr	r1, [fp, #-148]	; 0xffffff6c
   73954:	cmp	r0, r1
   73958:	bcs	73968 <__assert_fail@plt+0x60db0>
   7395c:	ldr	r0, [fp, #-148]	; 0xffffff6c
   73960:	str	r0, [sp, #356]	; 0x164
   73964:	b	73970 <__assert_fail@plt+0x60db8>
   73968:	ldr	r0, [fp, #-144]	; 0xffffff70
   7396c:	str	r0, [sp, #356]	; 0x164
   73970:	ldr	r0, [sp, #356]	; 0x164
   73974:	str	r0, [fp, #-152]	; 0xffffff68
   73978:	ldr	r0, [fp, #-152]	; 0xffffff68
   7397c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   73980:	ldr	r2, [fp, #-64]	; 0xffffffc0
   73984:	sub	r1, r1, r2
   73988:	cmp	r0, r1
   7398c:	bcc	739a8 <__assert_fail@plt+0x60df0>
   73990:	bl	128d0 <__errno_location@plt>
   73994:	movw	lr, #34	; 0x22
   73998:	str	lr, [r0]
   7399c:	movw	r0, #0
   739a0:	str	r0, [fp, #-28]	; 0xffffffe4
   739a4:	b	77068 <__assert_fail@plt+0x644b0>
   739a8:	ldr	r0, [fp, #-68]	; 0xffffffbc
   739ac:	movw	r1, #0
   739b0:	cmp	r0, r1
   739b4:	beq	73a60 <__assert_fail@plt+0x60ea8>
   739b8:	ldr	r0, [fp, #-144]	; 0xffffff70
   739bc:	ldr	r1, [fp, #-148]	; 0xffffff6c
   739c0:	cmp	r0, r1
   739c4:	bcs	73a40 <__assert_fail@plt+0x60e88>
   739c8:	ldr	r0, [fp, #-148]	; 0xffffff6c
   739cc:	ldr	r1, [fp, #-144]	; 0xffffff70
   739d0:	sub	r0, r0, r1
   739d4:	str	r0, [fp, #-156]	; 0xffffff64
   739d8:	ldr	r0, [fp, #-76]	; 0xffffffb4
   739dc:	cmp	r0, #48	; 0x30
   739e0:	beq	739f0 <__assert_fail@plt+0x60e38>
   739e4:	ldr	r0, [fp, #-76]	; 0xffffffb4
   739e8:	cmp	r0, #43	; 0x2b
   739ec:	bne	73a18 <__assert_fail@plt+0x60e60>
   739f0:	ldr	r0, [fp, #-68]	; 0xffffffbc
   739f4:	ldr	r2, [fp, #-156]	; 0xffffff64
   739f8:	movw	r1, #48	; 0x30
   739fc:	and	r1, r1, #255	; 0xff
   73a00:	bl	12900 <memset@plt>
   73a04:	ldr	r0, [fp, #-156]	; 0xffffff64
   73a08:	ldr	r1, [fp, #-68]	; 0xffffffbc
   73a0c:	add	r0, r1, r0
   73a10:	str	r0, [fp, #-68]	; 0xffffffbc
   73a14:	b	73a3c <__assert_fail@plt+0x60e84>
   73a18:	ldr	r0, [fp, #-68]	; 0xffffffbc
   73a1c:	ldr	r2, [fp, #-156]	; 0xffffff64
   73a20:	movw	r1, #32
   73a24:	and	r1, r1, #255	; 0xff
   73a28:	bl	12900 <memset@plt>
   73a2c:	ldr	r0, [fp, #-156]	; 0xffffff64
   73a30:	ldr	r1, [fp, #-68]	; 0xffffffbc
   73a34:	add	r0, r1, r0
   73a38:	str	r0, [fp, #-68]	; 0xffffffbc
   73a3c:	b	73a40 <__assert_fail@plt+0x60e88>
   73a40:	ldr	r0, [fp, #-72]	; 0xffffffb8
   73a44:	ldrb	r0, [r0]
   73a48:	ldr	r1, [fp, #-68]	; 0xffffffbc
   73a4c:	strb	r0, [r1]
   73a50:	ldr	r0, [fp, #-144]	; 0xffffff70
   73a54:	ldr	r1, [fp, #-68]	; 0xffffffbc
   73a58:	add	r0, r1, r0
   73a5c:	str	r0, [fp, #-68]	; 0xffffffbc
   73a60:	ldr	r0, [fp, #-152]	; 0xffffff68
   73a64:	ldr	r1, [fp, #-64]	; 0xffffffc0
   73a68:	add	r0, r1, r0
   73a6c:	str	r0, [fp, #-64]	; 0xffffffc0
   73a70:	b	7700c <__assert_fail@plt+0x64454>
   73a74:	ldr	r0, [fp, #-72]	; 0xffffffb8
   73a78:	str	r0, [fp, #-160]	; 0xffffff60
   73a7c:	ldr	r0, [fp, #-72]	; 0xffffffb8
   73a80:	add	r1, r0, #1
   73a84:	str	r1, [fp, #-72]	; 0xffffffb8
   73a88:	ldrb	r0, [r0, #1]
   73a8c:	mov	r1, r0
   73a90:	cmp	r0, #35	; 0x23
   73a94:	str	r1, [sp, #352]	; 0x160
   73a98:	beq	73b0c <__assert_fail@plt+0x60f54>
   73a9c:	b	73aa0 <__assert_fail@plt+0x60ee8>
   73aa0:	ldr	r0, [sp, #352]	; 0x160
   73aa4:	cmp	r0, #43	; 0x2b
   73aa8:	beq	73af0 <__assert_fail@plt+0x60f38>
   73aac:	b	73ab0 <__assert_fail@plt+0x60ef8>
   73ab0:	ldr	r0, [sp, #352]	; 0x160
   73ab4:	cmp	r0, #45	; 0x2d
   73ab8:	beq	73af0 <__assert_fail@plt+0x60f38>
   73abc:	b	73ac0 <__assert_fail@plt+0x60f08>
   73ac0:	ldr	r0, [sp, #352]	; 0x160
   73ac4:	cmp	r0, #48	; 0x30
   73ac8:	beq	73af0 <__assert_fail@plt+0x60f38>
   73acc:	b	73ad0 <__assert_fail@plt+0x60f18>
   73ad0:	ldr	r0, [sp, #352]	; 0x160
   73ad4:	cmp	r0, #94	; 0x5e
   73ad8:	beq	73b00 <__assert_fail@plt+0x60f48>
   73adc:	b	73ae0 <__assert_fail@plt+0x60f28>
   73ae0:	ldr	r0, [sp, #352]	; 0x160
   73ae4:	cmp	r0, #95	; 0x5f
   73ae8:	bne	73b18 <__assert_fail@plt+0x60f60>
   73aec:	b	73af0 <__assert_fail@plt+0x60f38>
   73af0:	ldr	r0, [fp, #-72]	; 0xffffffb8
   73af4:	ldrb	r0, [r0]
   73af8:	str	r0, [fp, #-76]	; 0xffffffb4
   73afc:	b	73a7c <__assert_fail@plt+0x60ec4>
   73b00:	movw	r0, #1
   73b04:	strb	r0, [fp, #-124]	; 0xffffff84
   73b08:	b	73a7c <__assert_fail@plt+0x60ec4>
   73b0c:	movw	r0, #1
   73b10:	strb	r0, [fp, #-129]	; 0xffffff7f
   73b14:	b	73a7c <__assert_fail@plt+0x60ec4>
   73b18:	b	73b1c <__assert_fail@plt+0x60f64>
   73b1c:	b	73b20 <__assert_fail@plt+0x60f68>
   73b20:	ldr	r0, [fp, #-72]	; 0xffffffb8
   73b24:	ldrb	r0, [r0]
   73b28:	sub	r0, r0, #48	; 0x30
   73b2c:	cmp	r0, #9
   73b30:	bhi	74844 <__assert_fail@plt+0x61c8c>
   73b34:	movw	r0, #0
   73b38:	str	r0, [fp, #16]
   73b3c:	b	73db8 <__assert_fail@plt+0x61200>
   73b40:	b	73b44 <__assert_fail@plt+0x60f8c>
   73b44:	b	73bf0 <__assert_fail@plt+0x61038>
   73b48:	ldr	r0, [fp, #16]
   73b4c:	cmp	r0, #0
   73b50:	bge	73b84 <__assert_fail@plt+0x60fcc>
   73b54:	b	73b58 <__assert_fail@plt+0x60fa0>
   73b58:	ldr	r0, [fp, #16]
   73b5c:	cmp	r0, #12
   73b60:	blt	73c50 <__assert_fail@plt+0x61098>
   73b64:	b	73c68 <__assert_fail@plt+0x610b0>
   73b68:	ldr	r0, [fp, #16]
   73b6c:	mvn	r1, #0
   73b70:	sub	r0, r1, r0
   73b74:	mvn	r1, #11
   73b78:	cmp	r1, r0
   73b7c:	ble	73c50 <__assert_fail@plt+0x61098>
   73b80:	b	73c68 <__assert_fail@plt+0x610b0>
   73b84:	b	73b88 <__assert_fail@plt+0x60fd0>
   73b88:	b	73bdc <__assert_fail@plt+0x61024>
   73b8c:	b	73bdc <__assert_fail@plt+0x61024>
   73b90:	b	73bdc <__assert_fail@plt+0x61024>
   73b94:	b	73b98 <__assert_fail@plt+0x60fe0>
   73b98:	ldr	r0, [fp, #16]
   73b9c:	mvn	r1, #127	; 0x7f
   73ba0:	add	r0, r0, r1
   73ba4:	movw	r1, #0
   73ba8:	cmp	r1, r0
   73bac:	blt	73c50 <__assert_fail@plt+0x61098>
   73bb0:	b	73c68 <__assert_fail@plt+0x610b0>
   73bb4:	ldr	r0, [fp, #16]
   73bb8:	movw	r1, #0
   73bbc:	cmp	r1, r0
   73bc0:	bge	73c68 <__assert_fail@plt+0x610b0>
   73bc4:	ldr	r0, [fp, #16]
   73bc8:	sub	r0, r0, #1
   73bcc:	movw	r1, #127	; 0x7f
   73bd0:	cmp	r1, r0
   73bd4:	blt	73c50 <__assert_fail@plt+0x61098>
   73bd8:	b	73c68 <__assert_fail@plt+0x610b0>
   73bdc:	ldr	r0, [fp, #16]
   73be0:	mvn	r1, #11
   73be4:	cmp	r1, r0
   73be8:	blt	73c50 <__assert_fail@plt+0x61098>
   73bec:	b	73c68 <__assert_fail@plt+0x610b0>
   73bf0:	b	73bf8 <__assert_fail@plt+0x61040>
   73bf4:	b	73c68 <__assert_fail@plt+0x610b0>
   73bf8:	ldr	r0, [fp, #16]
   73bfc:	cmp	r0, #0
   73c00:	bge	73c40 <__assert_fail@plt+0x61088>
   73c04:	b	73c08 <__assert_fail@plt+0x61050>
   73c08:	b	73c28 <__assert_fail@plt+0x61070>
   73c0c:	b	73c28 <__assert_fail@plt+0x61070>
   73c10:	ldr	r0, [fp, #16]
   73c14:	cmn	r0, #1
   73c18:	bne	73c28 <__assert_fail@plt+0x61070>
   73c1c:	b	73c20 <__assert_fail@plt+0x61068>
   73c20:	b	73c68 <__assert_fail@plt+0x610b0>
   73c24:	b	73c68 <__assert_fail@plt+0x610b0>
   73c28:	ldr	r0, [fp, #16]
   73c2c:	mvn	r1, #127	; 0x7f
   73c30:	sdiv	r0, r1, r0
   73c34:	cmp	r0, #10
   73c38:	blt	73c50 <__assert_fail@plt+0x61098>
   73c3c:	b	73c68 <__assert_fail@plt+0x610b0>
   73c40:	ldr	r0, [fp, #16]
   73c44:	movw	r1, #12
   73c48:	cmp	r1, r0
   73c4c:	bge	73c68 <__assert_fail@plt+0x610b0>
   73c50:	ldr	r0, [fp, #16]
   73c54:	movw	r1, #10
   73c58:	mul	r0, r0, r1
   73c5c:	sxtb	r0, r0
   73c60:	str	r0, [fp, #16]
   73c64:	b	74818 <__assert_fail@plt+0x61c60>
   73c68:	ldr	r0, [fp, #16]
   73c6c:	movw	r1, #10
   73c70:	mul	r0, r0, r1
   73c74:	sxtb	r0, r0
   73c78:	str	r0, [fp, #16]
   73c7c:	b	747ec <__assert_fail@plt+0x61c34>
   73c80:	b	73d28 <__assert_fail@plt+0x61170>
   73c84:	ldr	r0, [fp, #16]
   73c88:	cmp	r0, #0
   73c8c:	bge	73cc0 <__assert_fail@plt+0x61108>
   73c90:	b	73c94 <__assert_fail@plt+0x610dc>
   73c94:	ldr	r0, [fp, #16]
   73c98:	cmp	r0, #25
   73c9c:	blt	73d88 <__assert_fail@plt+0x611d0>
   73ca0:	b	73da0 <__assert_fail@plt+0x611e8>
   73ca4:	ldr	r0, [fp, #16]
   73ca8:	mvn	r1, #0
   73cac:	sub	r0, r1, r0
   73cb0:	mvn	r1, #24
   73cb4:	cmp	r1, r0
   73cb8:	ble	73d88 <__assert_fail@plt+0x611d0>
   73cbc:	b	73da0 <__assert_fail@plt+0x611e8>
   73cc0:	b	73cc4 <__assert_fail@plt+0x6110c>
   73cc4:	b	73d14 <__assert_fail@plt+0x6115c>
   73cc8:	b	73d14 <__assert_fail@plt+0x6115c>
   73ccc:	b	73d14 <__assert_fail@plt+0x6115c>
   73cd0:	b	73cd4 <__assert_fail@plt+0x6111c>
   73cd4:	ldr	r0, [fp, #16]
   73cd8:	add	r0, r0, #0
   73cdc:	movw	r1, #0
   73ce0:	cmp	r1, r0
   73ce4:	blt	73d88 <__assert_fail@plt+0x611d0>
   73ce8:	b	73da0 <__assert_fail@plt+0x611e8>
   73cec:	ldr	r0, [fp, #16]
   73cf0:	movw	r1, #0
   73cf4:	cmp	r1, r0
   73cf8:	bge	73da0 <__assert_fail@plt+0x611e8>
   73cfc:	ldr	r0, [fp, #16]
   73d00:	sub	r0, r0, #1
   73d04:	mvn	r1, #0
   73d08:	cmp	r1, r0
   73d0c:	blt	73d88 <__assert_fail@plt+0x611d0>
   73d10:	b	73da0 <__assert_fail@plt+0x611e8>
   73d14:	ldr	r0, [fp, #16]
   73d18:	movw	r1, #0
   73d1c:	cmp	r1, r0
   73d20:	blt	73d88 <__assert_fail@plt+0x611d0>
   73d24:	b	73da0 <__assert_fail@plt+0x611e8>
   73d28:	b	73d30 <__assert_fail@plt+0x61178>
   73d2c:	b	73da0 <__assert_fail@plt+0x611e8>
   73d30:	ldr	r0, [fp, #16]
   73d34:	cmp	r0, #0
   73d38:	bge	73d78 <__assert_fail@plt+0x611c0>
   73d3c:	b	73d40 <__assert_fail@plt+0x61188>
   73d40:	b	73d60 <__assert_fail@plt+0x611a8>
   73d44:	b	73d60 <__assert_fail@plt+0x611a8>
   73d48:	ldr	r0, [fp, #16]
   73d4c:	cmn	r0, #1
   73d50:	bne	73d60 <__assert_fail@plt+0x611a8>
   73d54:	b	73d58 <__assert_fail@plt+0x611a0>
   73d58:	b	73d88 <__assert_fail@plt+0x611d0>
   73d5c:	b	73d88 <__assert_fail@plt+0x611d0>
   73d60:	ldr	r0, [fp, #16]
   73d64:	movw	r1, #0
   73d68:	sdiv	r0, r1, r0
   73d6c:	cmp	r0, #10
   73d70:	blt	73d88 <__assert_fail@plt+0x611d0>
   73d74:	b	73da0 <__assert_fail@plt+0x611e8>
   73d78:	ldr	r0, [fp, #16]
   73d7c:	movw	r1, #25
   73d80:	cmp	r1, r0
   73d84:	bge	73da0 <__assert_fail@plt+0x611e8>
   73d88:	ldr	r0, [fp, #16]
   73d8c:	movw	r1, #10
   73d90:	mul	r0, r0, r1
   73d94:	and	r0, r0, #255	; 0xff
   73d98:	str	r0, [fp, #16]
   73d9c:	b	74818 <__assert_fail@plt+0x61c60>
   73da0:	ldr	r0, [fp, #16]
   73da4:	movw	r1, #10
   73da8:	mul	r0, r0, r1
   73dac:	and	r0, r0, #255	; 0xff
   73db0:	str	r0, [fp, #16]
   73db4:	b	747ec <__assert_fail@plt+0x61c34>
   73db8:	b	7403c <__assert_fail@plt+0x61484>
   73dbc:	b	73dc0 <__assert_fail@plt+0x61208>
   73dc0:	b	73e70 <__assert_fail@plt+0x612b8>
   73dc4:	ldr	r0, [fp, #16]
   73dc8:	cmp	r0, #0
   73dcc:	bge	73e04 <__assert_fail@plt+0x6124c>
   73dd0:	b	73dd4 <__assert_fail@plt+0x6121c>
   73dd4:	ldr	r0, [fp, #16]
   73dd8:	movw	r1, #3276	; 0xccc
   73ddc:	cmp	r0, r1
   73de0:	blt	73ed0 <__assert_fail@plt+0x61318>
   73de4:	b	73ee8 <__assert_fail@plt+0x61330>
   73de8:	ldr	r0, [pc, #4052]	; 74dc4 <__assert_fail@plt+0x6220c>
   73dec:	ldr	r1, [fp, #16]
   73df0:	mvn	r2, #0
   73df4:	sub	r1, r2, r1
   73df8:	cmp	r0, r1
   73dfc:	ble	73ed0 <__assert_fail@plt+0x61318>
   73e00:	b	73ee8 <__assert_fail@plt+0x61330>
   73e04:	b	73e08 <__assert_fail@plt+0x61250>
   73e08:	b	73e5c <__assert_fail@plt+0x612a4>
   73e0c:	b	73e5c <__assert_fail@plt+0x612a4>
   73e10:	b	73e5c <__assert_fail@plt+0x612a4>
   73e14:	b	73e18 <__assert_fail@plt+0x61260>
   73e18:	ldr	r0, [pc, #4072]	; 74e08 <__assert_fail@plt+0x62250>
   73e1c:	ldr	r1, [fp, #16]
   73e20:	add	r0, r1, r0
   73e24:	movw	r1, #0
   73e28:	cmp	r1, r0
   73e2c:	blt	73ed0 <__assert_fail@plt+0x61318>
   73e30:	b	73ee8 <__assert_fail@plt+0x61330>
   73e34:	ldr	r0, [fp, #16]
   73e38:	movw	r1, #0
   73e3c:	cmp	r1, r0
   73e40:	bge	73ee8 <__assert_fail@plt+0x61330>
   73e44:	ldr	r0, [fp, #16]
   73e48:	sub	r0, r0, #1
   73e4c:	movw	r1, #32767	; 0x7fff
   73e50:	cmp	r1, r0
   73e54:	blt	73ed0 <__assert_fail@plt+0x61318>
   73e58:	b	73ee8 <__assert_fail@plt+0x61330>
   73e5c:	ldr	r0, [pc, #3936]	; 74dc4 <__assert_fail@plt+0x6220c>
   73e60:	ldr	r1, [fp, #16]
   73e64:	cmp	r0, r1
   73e68:	blt	73ed0 <__assert_fail@plt+0x61318>
   73e6c:	b	73ee8 <__assert_fail@plt+0x61330>
   73e70:	b	73e78 <__assert_fail@plt+0x612c0>
   73e74:	b	73ee8 <__assert_fail@plt+0x61330>
   73e78:	ldr	r0, [fp, #16]
   73e7c:	cmp	r0, #0
   73e80:	bge	73ec0 <__assert_fail@plt+0x61308>
   73e84:	b	73e88 <__assert_fail@plt+0x612d0>
   73e88:	b	73ea8 <__assert_fail@plt+0x612f0>
   73e8c:	b	73ea8 <__assert_fail@plt+0x612f0>
   73e90:	ldr	r0, [fp, #16]
   73e94:	cmn	r0, #1
   73e98:	bne	73ea8 <__assert_fail@plt+0x612f0>
   73e9c:	b	73ea0 <__assert_fail@plt+0x612e8>
   73ea0:	b	73ee8 <__assert_fail@plt+0x61330>
   73ea4:	b	73ee8 <__assert_fail@plt+0x61330>
   73ea8:	ldr	r0, [pc, #3928]	; 74e08 <__assert_fail@plt+0x62250>
   73eac:	ldr	r1, [fp, #16]
   73eb0:	sdiv	r0, r0, r1
   73eb4:	cmp	r0, #10
   73eb8:	blt	73ed0 <__assert_fail@plt+0x61318>
   73ebc:	b	73ee8 <__assert_fail@plt+0x61330>
   73ec0:	ldr	r0, [fp, #16]
   73ec4:	movw	r1, #3276	; 0xccc
   73ec8:	cmp	r1, r0
   73ecc:	bge	73ee8 <__assert_fail@plt+0x61330>
   73ed0:	ldr	r0, [fp, #16]
   73ed4:	movw	r1, #10
   73ed8:	mul	r0, r0, r1
   73edc:	sxth	r0, r0
   73ee0:	str	r0, [fp, #16]
   73ee4:	b	74818 <__assert_fail@plt+0x61c60>
   73ee8:	ldr	r0, [fp, #16]
   73eec:	movw	r1, #10
   73ef0:	mul	r0, r0, r1
   73ef4:	sxth	r0, r0
   73ef8:	str	r0, [fp, #16]
   73efc:	b	747ec <__assert_fail@plt+0x61c34>
   73f00:	b	73fac <__assert_fail@plt+0x613f4>
   73f04:	ldr	r0, [fp, #16]
   73f08:	cmp	r0, #0
   73f0c:	bge	73f44 <__assert_fail@plt+0x6138c>
   73f10:	b	73f14 <__assert_fail@plt+0x6135c>
   73f14:	ldr	r0, [fp, #16]
   73f18:	movw	r1, #6553	; 0x1999
   73f1c:	cmp	r0, r1
   73f20:	blt	7400c <__assert_fail@plt+0x61454>
   73f24:	b	74024 <__assert_fail@plt+0x6146c>
   73f28:	ldr	r0, [pc, #4076]	; 74f1c <__assert_fail@plt+0x62364>
   73f2c:	ldr	r1, [fp, #16]
   73f30:	mvn	r2, #0
   73f34:	sub	r1, r2, r1
   73f38:	cmp	r0, r1
   73f3c:	ble	7400c <__assert_fail@plt+0x61454>
   73f40:	b	74024 <__assert_fail@plt+0x6146c>
   73f44:	b	73f48 <__assert_fail@plt+0x61390>
   73f48:	b	73f98 <__assert_fail@plt+0x613e0>
   73f4c:	b	73f98 <__assert_fail@plt+0x613e0>
   73f50:	b	73f98 <__assert_fail@plt+0x613e0>
   73f54:	b	73f58 <__assert_fail@plt+0x613a0>
   73f58:	ldr	r0, [fp, #16]
   73f5c:	add	r0, r0, #0
   73f60:	movw	r1, #0
   73f64:	cmp	r1, r0
   73f68:	blt	7400c <__assert_fail@plt+0x61454>
   73f6c:	b	74024 <__assert_fail@plt+0x6146c>
   73f70:	ldr	r0, [fp, #16]
   73f74:	movw	r1, #0
   73f78:	cmp	r1, r0
   73f7c:	bge	74024 <__assert_fail@plt+0x6146c>
   73f80:	ldr	r0, [fp, #16]
   73f84:	sub	r0, r0, #1
   73f88:	mvn	r1, #0
   73f8c:	cmp	r1, r0
   73f90:	blt	7400c <__assert_fail@plt+0x61454>
   73f94:	b	74024 <__assert_fail@plt+0x6146c>
   73f98:	ldr	r0, [fp, #16]
   73f9c:	movw	r1, #0
   73fa0:	cmp	r1, r0
   73fa4:	blt	7400c <__assert_fail@plt+0x61454>
   73fa8:	b	74024 <__assert_fail@plt+0x6146c>
   73fac:	b	73fb4 <__assert_fail@plt+0x613fc>
   73fb0:	b	74024 <__assert_fail@plt+0x6146c>
   73fb4:	ldr	r0, [fp, #16]
   73fb8:	cmp	r0, #0
   73fbc:	bge	73ffc <__assert_fail@plt+0x61444>
   73fc0:	b	73fc4 <__assert_fail@plt+0x6140c>
   73fc4:	b	73fe4 <__assert_fail@plt+0x6142c>
   73fc8:	b	73fe4 <__assert_fail@plt+0x6142c>
   73fcc:	ldr	r0, [fp, #16]
   73fd0:	cmn	r0, #1
   73fd4:	bne	73fe4 <__assert_fail@plt+0x6142c>
   73fd8:	b	73fdc <__assert_fail@plt+0x61424>
   73fdc:	b	7400c <__assert_fail@plt+0x61454>
   73fe0:	b	7400c <__assert_fail@plt+0x61454>
   73fe4:	ldr	r0, [fp, #16]
   73fe8:	movw	r1, #0
   73fec:	sdiv	r0, r1, r0
   73ff0:	cmp	r0, #10
   73ff4:	blt	7400c <__assert_fail@plt+0x61454>
   73ff8:	b	74024 <__assert_fail@plt+0x6146c>
   73ffc:	ldr	r0, [fp, #16]
   74000:	movw	r1, #6553	; 0x1999
   74004:	cmp	r1, r0
   74008:	bge	74024 <__assert_fail@plt+0x6146c>
   7400c:	ldr	r0, [fp, #16]
   74010:	movw	r1, #10
   74014:	mul	r0, r0, r1
   74018:	uxth	r0, r0
   7401c:	str	r0, [fp, #16]
   74020:	b	74818 <__assert_fail@plt+0x61c60>
   74024:	ldr	r0, [fp, #16]
   74028:	movw	r1, #10
   7402c:	mul	r0, r0, r1
   74030:	uxth	r0, r0
   74034:	str	r0, [fp, #16]
   74038:	b	747ec <__assert_fail@plt+0x61c34>
   7403c:	b	74040 <__assert_fail@plt+0x61488>
   74040:	b	74044 <__assert_fail@plt+0x6148c>
   74044:	b	740e4 <__assert_fail@plt+0x6152c>
   74048:	ldr	r0, [fp, #16]
   7404c:	cmp	r0, #0
   74050:	bge	74088 <__assert_fail@plt+0x614d0>
   74054:	b	74058 <__assert_fail@plt+0x614a0>
   74058:	ldr	r0, [pc, #4084]	; 75054 <__assert_fail@plt+0x6249c>
   7405c:	ldr	r1, [fp, #16]
   74060:	cmp	r1, r0
   74064:	blt	74138 <__assert_fail@plt+0x61580>
   74068:	b	7414c <__assert_fail@plt+0x61594>
   7406c:	ldr	r0, [pc, #4068]	; 75058 <__assert_fail@plt+0x624a0>
   74070:	ldr	r1, [fp, #16]
   74074:	mvn	r2, #0
   74078:	sub	r1, r2, r1
   7407c:	cmp	r0, r1
   74080:	ble	74138 <__assert_fail@plt+0x61580>
   74084:	b	7414c <__assert_fail@plt+0x61594>
   74088:	b	740d0 <__assert_fail@plt+0x61518>
   7408c:	b	74090 <__assert_fail@plt+0x614d8>
   74090:	ldr	r0, [fp, #16]
   74094:	add	r0, r0, #-2147483648	; 0x80000000
   74098:	movw	r1, #0
   7409c:	cmp	r1, r0
   740a0:	blt	74138 <__assert_fail@plt+0x61580>
   740a4:	b	7414c <__assert_fail@plt+0x61594>
   740a8:	ldr	r0, [fp, #16]
   740ac:	movw	r1, #0
   740b0:	cmp	r1, r0
   740b4:	bge	7414c <__assert_fail@plt+0x61594>
   740b8:	ldr	r0, [pc, #3996]	; 7505c <__assert_fail@plt+0x624a4>
   740bc:	ldr	r1, [fp, #16]
   740c0:	sub	r1, r1, #1
   740c4:	cmp	r0, r1
   740c8:	blt	74138 <__assert_fail@plt+0x61580>
   740cc:	b	7414c <__assert_fail@plt+0x61594>
   740d0:	ldr	r0, [pc, #3968]	; 75058 <__assert_fail@plt+0x624a0>
   740d4:	ldr	r1, [fp, #16]
   740d8:	cmp	r0, r1
   740dc:	blt	74138 <__assert_fail@plt+0x61580>
   740e0:	b	7414c <__assert_fail@plt+0x61594>
   740e4:	b	740ec <__assert_fail@plt+0x61534>
   740e8:	b	7414c <__assert_fail@plt+0x61594>
   740ec:	ldr	r0, [fp, #16]
   740f0:	cmp	r0, #0
   740f4:	bge	74128 <__assert_fail@plt+0x61570>
   740f8:	ldr	r0, [fp, #16]
   740fc:	cmn	r0, #1
   74100:	bne	74110 <__assert_fail@plt+0x61558>
   74104:	b	74108 <__assert_fail@plt+0x61550>
   74108:	b	7414c <__assert_fail@plt+0x61594>
   7410c:	b	7414c <__assert_fail@plt+0x61594>
   74110:	ldr	r0, [pc, #4024]	; 750d0 <__assert_fail@plt+0x62518>
   74114:	ldr	r1, [fp, #16]
   74118:	sdiv	r0, r0, r1
   7411c:	cmp	r0, #10
   74120:	blt	74138 <__assert_fail@plt+0x61580>
   74124:	b	7414c <__assert_fail@plt+0x61594>
   74128:	ldr	r0, [pc, #3876]	; 75054 <__assert_fail@plt+0x6249c>
   7412c:	ldr	r1, [fp, #16]
   74130:	cmp	r0, r1
   74134:	bge	7414c <__assert_fail@plt+0x61594>
   74138:	ldr	r0, [fp, #16]
   7413c:	movw	r1, #10
   74140:	mul	r0, r0, r1
   74144:	str	r0, [fp, #16]
   74148:	b	74818 <__assert_fail@plt+0x61c60>
   7414c:	ldr	r0, [fp, #16]
   74150:	movw	r1, #10
   74154:	mul	r0, r0, r1
   74158:	str	r0, [fp, #16]
   7415c:	b	747ec <__assert_fail@plt+0x61c34>
   74160:	b	7420c <__assert_fail@plt+0x61654>
   74164:	ldr	r0, [fp, #16]
   74168:	cmp	r0, #0
   7416c:	bge	741a4 <__assert_fail@plt+0x615ec>
   74170:	b	74188 <__assert_fail@plt+0x615d0>
   74174:	ldr	r0, [pc, #4072]	; 75164 <__assert_fail@plt+0x625ac>
   74178:	ldr	r1, [fp, #16]
   7417c:	cmp	r1, r0
   74180:	bcc	7426c <__assert_fail@plt+0x616b4>
   74184:	b	74280 <__assert_fail@plt+0x616c8>
   74188:	ldr	r0, [fp, #16]
   7418c:	mvn	r1, #0
   74190:	sub	r0, r1, r0
   74194:	movw	r1, #1
   74198:	cmp	r1, r0
   7419c:	bls	7426c <__assert_fail@plt+0x616b4>
   741a0:	b	74280 <__assert_fail@plt+0x616c8>
   741a4:	b	741a8 <__assert_fail@plt+0x615f0>
   741a8:	b	741f8 <__assert_fail@plt+0x61640>
   741ac:	b	741f8 <__assert_fail@plt+0x61640>
   741b0:	b	741f8 <__assert_fail@plt+0x61640>
   741b4:	b	741b8 <__assert_fail@plt+0x61600>
   741b8:	ldr	r0, [fp, #16]
   741bc:	add	r0, r0, #0
   741c0:	movw	r1, #0
   741c4:	cmp	r1, r0
   741c8:	blt	7426c <__assert_fail@plt+0x616b4>
   741cc:	b	74280 <__assert_fail@plt+0x616c8>
   741d0:	ldr	r0, [fp, #16]
   741d4:	movw	r1, #0
   741d8:	cmp	r1, r0
   741dc:	bge	74280 <__assert_fail@plt+0x616c8>
   741e0:	ldr	r0, [fp, #16]
   741e4:	sub	r0, r0, #1
   741e8:	mvn	r1, #0
   741ec:	cmp	r1, r0
   741f0:	blt	7426c <__assert_fail@plt+0x616b4>
   741f4:	b	74280 <__assert_fail@plt+0x616c8>
   741f8:	ldr	r0, [fp, #16]
   741fc:	movw	r1, #0
   74200:	cmp	r1, r0
   74204:	blt	7426c <__assert_fail@plt+0x616b4>
   74208:	b	74280 <__assert_fail@plt+0x616c8>
   7420c:	b	74214 <__assert_fail@plt+0x6165c>
   74210:	b	74280 <__assert_fail@plt+0x616c8>
   74214:	ldr	r0, [fp, #16]
   74218:	cmp	r0, #0
   7421c:	bge	7425c <__assert_fail@plt+0x616a4>
   74220:	b	74224 <__assert_fail@plt+0x6166c>
   74224:	b	74244 <__assert_fail@plt+0x6168c>
   74228:	b	74244 <__assert_fail@plt+0x6168c>
   7422c:	ldr	r0, [fp, #16]
   74230:	cmn	r0, #1
   74234:	bne	74244 <__assert_fail@plt+0x6168c>
   74238:	b	7423c <__assert_fail@plt+0x61684>
   7423c:	b	7426c <__assert_fail@plt+0x616b4>
   74240:	b	7426c <__assert_fail@plt+0x616b4>
   74244:	ldr	r0, [fp, #16]
   74248:	movw	r1, #0
   7424c:	sdiv	r0, r1, r0
   74250:	cmp	r0, #10
   74254:	blt	7426c <__assert_fail@plt+0x616b4>
   74258:	b	74280 <__assert_fail@plt+0x616c8>
   7425c:	ldr	r0, [pc, #3840]	; 75164 <__assert_fail@plt+0x625ac>
   74260:	ldr	r1, [fp, #16]
   74264:	cmp	r0, r1
   74268:	bcs	74280 <__assert_fail@plt+0x616c8>
   7426c:	ldr	r0, [fp, #16]
   74270:	movw	r1, #10
   74274:	mul	r0, r0, r1
   74278:	str	r0, [fp, #16]
   7427c:	b	74818 <__assert_fail@plt+0x61c60>
   74280:	ldr	r0, [fp, #16]
   74284:	movw	r1, #10
   74288:	mul	r0, r0, r1
   7428c:	str	r0, [fp, #16]
   74290:	b	747ec <__assert_fail@plt+0x61c34>
   74294:	b	74298 <__assert_fail@plt+0x616e0>
   74298:	b	7429c <__assert_fail@plt+0x616e4>
   7429c:	b	7433c <__assert_fail@plt+0x61784>
   742a0:	ldr	r0, [fp, #16]
   742a4:	cmp	r0, #0
   742a8:	bge	742e0 <__assert_fail@plt+0x61728>
   742ac:	b	742b0 <__assert_fail@plt+0x616f8>
   742b0:	ldr	r0, [pc, #3484]	; 75054 <__assert_fail@plt+0x6249c>
   742b4:	ldr	r1, [fp, #16]
   742b8:	cmp	r1, r0
   742bc:	blt	74390 <__assert_fail@plt+0x617d8>
   742c0:	b	743a4 <__assert_fail@plt+0x617ec>
   742c4:	ldr	r0, [pc, #3468]	; 75058 <__assert_fail@plt+0x624a0>
   742c8:	ldr	r1, [fp, #16]
   742cc:	mvn	r2, #0
   742d0:	sub	r1, r2, r1
   742d4:	cmp	r0, r1
   742d8:	ble	74390 <__assert_fail@plt+0x617d8>
   742dc:	b	743a4 <__assert_fail@plt+0x617ec>
   742e0:	b	74328 <__assert_fail@plt+0x61770>
   742e4:	b	742e8 <__assert_fail@plt+0x61730>
   742e8:	ldr	r0, [fp, #16]
   742ec:	add	r0, r0, #-2147483648	; 0x80000000
   742f0:	movw	r1, #0
   742f4:	cmp	r1, r0
   742f8:	blt	74390 <__assert_fail@plt+0x617d8>
   742fc:	b	743a4 <__assert_fail@plt+0x617ec>
   74300:	ldr	r0, [fp, #16]
   74304:	movw	r1, #0
   74308:	cmp	r1, r0
   7430c:	bge	743a4 <__assert_fail@plt+0x617ec>
   74310:	ldr	r0, [pc, #3396]	; 7505c <__assert_fail@plt+0x624a4>
   74314:	ldr	r1, [fp, #16]
   74318:	sub	r1, r1, #1
   7431c:	cmp	r0, r1
   74320:	blt	74390 <__assert_fail@plt+0x617d8>
   74324:	b	743a4 <__assert_fail@plt+0x617ec>
   74328:	ldr	r0, [pc, #3368]	; 75058 <__assert_fail@plt+0x624a0>
   7432c:	ldr	r1, [fp, #16]
   74330:	cmp	r0, r1
   74334:	blt	74390 <__assert_fail@plt+0x617d8>
   74338:	b	743a4 <__assert_fail@plt+0x617ec>
   7433c:	b	74344 <__assert_fail@plt+0x6178c>
   74340:	b	743a4 <__assert_fail@plt+0x617ec>
   74344:	ldr	r0, [fp, #16]
   74348:	cmp	r0, #0
   7434c:	bge	74380 <__assert_fail@plt+0x617c8>
   74350:	ldr	r0, [fp, #16]
   74354:	cmn	r0, #1
   74358:	bne	74368 <__assert_fail@plt+0x617b0>
   7435c:	b	74360 <__assert_fail@plt+0x617a8>
   74360:	b	743a4 <__assert_fail@plt+0x617ec>
   74364:	b	743a4 <__assert_fail@plt+0x617ec>
   74368:	ldr	r0, [pc, #3424]	; 750d0 <__assert_fail@plt+0x62518>
   7436c:	ldr	r1, [fp, #16]
   74370:	sdiv	r0, r0, r1
   74374:	cmp	r0, #10
   74378:	blt	74390 <__assert_fail@plt+0x617d8>
   7437c:	b	743a4 <__assert_fail@plt+0x617ec>
   74380:	ldr	r0, [pc, #3276]	; 75054 <__assert_fail@plt+0x6249c>
   74384:	ldr	r1, [fp, #16]
   74388:	cmp	r0, r1
   7438c:	bge	743a4 <__assert_fail@plt+0x617ec>
   74390:	ldr	r0, [fp, #16]
   74394:	movw	r1, #10
   74398:	mul	r0, r0, r1
   7439c:	str	r0, [fp, #16]
   743a0:	b	74818 <__assert_fail@plt+0x61c60>
   743a4:	ldr	r0, [fp, #16]
   743a8:	movw	r1, #10
   743ac:	mul	r0, r0, r1
   743b0:	str	r0, [fp, #16]
   743b4:	b	747ec <__assert_fail@plt+0x61c34>
   743b8:	b	74464 <__assert_fail@plt+0x618ac>
   743bc:	ldr	r0, [fp, #16]
   743c0:	cmp	r0, #0
   743c4:	bge	743fc <__assert_fail@plt+0x61844>
   743c8:	b	743e0 <__assert_fail@plt+0x61828>
   743cc:	ldr	r0, [pc, #3472]	; 75164 <__assert_fail@plt+0x625ac>
   743d0:	ldr	r1, [fp, #16]
   743d4:	cmp	r1, r0
   743d8:	bcc	744c4 <__assert_fail@plt+0x6190c>
   743dc:	b	744d8 <__assert_fail@plt+0x61920>
   743e0:	ldr	r0, [fp, #16]
   743e4:	mvn	r1, #0
   743e8:	sub	r0, r1, r0
   743ec:	movw	r1, #1
   743f0:	cmp	r1, r0
   743f4:	bls	744c4 <__assert_fail@plt+0x6190c>
   743f8:	b	744d8 <__assert_fail@plt+0x61920>
   743fc:	b	74400 <__assert_fail@plt+0x61848>
   74400:	b	74450 <__assert_fail@plt+0x61898>
   74404:	b	74450 <__assert_fail@plt+0x61898>
   74408:	b	74450 <__assert_fail@plt+0x61898>
   7440c:	b	74410 <__assert_fail@plt+0x61858>
   74410:	ldr	r0, [fp, #16]
   74414:	add	r0, r0, #0
   74418:	movw	r1, #0
   7441c:	cmp	r1, r0
   74420:	blt	744c4 <__assert_fail@plt+0x6190c>
   74424:	b	744d8 <__assert_fail@plt+0x61920>
   74428:	ldr	r0, [fp, #16]
   7442c:	movw	r1, #0
   74430:	cmp	r1, r0
   74434:	bge	744d8 <__assert_fail@plt+0x61920>
   74438:	ldr	r0, [fp, #16]
   7443c:	sub	r0, r0, #1
   74440:	mvn	r1, #0
   74444:	cmp	r1, r0
   74448:	blt	744c4 <__assert_fail@plt+0x6190c>
   7444c:	b	744d8 <__assert_fail@plt+0x61920>
   74450:	ldr	r0, [fp, #16]
   74454:	movw	r1, #0
   74458:	cmp	r1, r0
   7445c:	blt	744c4 <__assert_fail@plt+0x6190c>
   74460:	b	744d8 <__assert_fail@plt+0x61920>
   74464:	b	7446c <__assert_fail@plt+0x618b4>
   74468:	b	744d8 <__assert_fail@plt+0x61920>
   7446c:	ldr	r0, [fp, #16]
   74470:	cmp	r0, #0
   74474:	bge	744b4 <__assert_fail@plt+0x618fc>
   74478:	b	7447c <__assert_fail@plt+0x618c4>
   7447c:	b	7449c <__assert_fail@plt+0x618e4>
   74480:	b	7449c <__assert_fail@plt+0x618e4>
   74484:	ldr	r0, [fp, #16]
   74488:	cmn	r0, #1
   7448c:	bne	7449c <__assert_fail@plt+0x618e4>
   74490:	b	74494 <__assert_fail@plt+0x618dc>
   74494:	b	744c4 <__assert_fail@plt+0x6190c>
   74498:	b	744c4 <__assert_fail@plt+0x6190c>
   7449c:	ldr	r0, [fp, #16]
   744a0:	movw	r1, #0
   744a4:	sdiv	r0, r1, r0
   744a8:	cmp	r0, #10
   744ac:	blt	744c4 <__assert_fail@plt+0x6190c>
   744b0:	b	744d8 <__assert_fail@plt+0x61920>
   744b4:	ldr	r0, [pc, #3240]	; 75164 <__assert_fail@plt+0x625ac>
   744b8:	ldr	r1, [fp, #16]
   744bc:	cmp	r0, r1
   744c0:	bcs	744d8 <__assert_fail@plt+0x61920>
   744c4:	ldr	r0, [fp, #16]
   744c8:	movw	r1, #10
   744cc:	mul	r0, r0, r1
   744d0:	str	r0, [fp, #16]
   744d4:	b	74818 <__assert_fail@plt+0x61c60>
   744d8:	ldr	r0, [fp, #16]
   744dc:	movw	r1, #10
   744e0:	mul	r0, r0, r1
   744e4:	str	r0, [fp, #16]
   744e8:	b	747ec <__assert_fail@plt+0x61c34>
   744ec:	b	744f0 <__assert_fail@plt+0x61938>
   744f0:	b	745d8 <__assert_fail@plt+0x61a20>
   744f4:	ldr	r0, [fp, #16]
   744f8:	cmp	r0, #0
   744fc:	bge	74560 <__assert_fail@plt+0x619a8>
   74500:	b	74504 <__assert_fail@plt+0x6194c>
   74504:	ldr	r0, [fp, #16]
   74508:	movw	r1, #52428	; 0xcccc
   7450c:	movt	r1, #52428	; 0xcccc
   74510:	subs	r1, r0, r1
   74514:	movw	r2, #52428	; 0xcccc
   74518:	movt	r2, #3276	; 0xccc
   7451c:	rscs	r0, r2, r0, asr #31
   74520:	str	r1, [sp, #348]	; 0x15c
   74524:	str	r0, [sp, #344]	; 0x158
   74528:	blt	7466c <__assert_fail@plt+0x61ab4>
   7452c:	b	74680 <__assert_fail@plt+0x61ac8>
   74530:	ldr	r0, [fp, #16]
   74534:	mvn	r0, r0
   74538:	movw	r1, #13107	; 0x3333
   7453c:	movt	r1, #13107	; 0x3333
   74540:	subs	r1, r1, r0
   74544:	movw	r2, #13107	; 0x3333
   74548:	movt	r2, #62259	; 0xf333
   7454c:	sbcs	r0, r2, r0, asr #31
   74550:	str	r1, [sp, #340]	; 0x154
   74554:	str	r0, [sp, #336]	; 0x150
   74558:	blt	7466c <__assert_fail@plt+0x61ab4>
   7455c:	b	74680 <__assert_fail@plt+0x61ac8>
   74560:	b	745ac <__assert_fail@plt+0x619f4>
   74564:	b	74568 <__assert_fail@plt+0x619b0>
   74568:	ldr	r0, [fp, #16]
   7456c:	mov	r1, #-2147483648	; 0x80000000
   74570:	add	r1, r1, r0, asr #31
   74574:	rsbs	r0, r0, #0
   74578:	rscs	r1, r1, #0
   7457c:	str	r0, [sp, #332]	; 0x14c
   74580:	str	r1, [sp, #328]	; 0x148
   74584:	blt	7466c <__assert_fail@plt+0x61ab4>
   74588:	b	74680 <__assert_fail@plt+0x61ac8>
   7458c:	ldr	r0, [fp, #16]
   74590:	movw	r1, #0
   74594:	cmp	r1, r0
   74598:	bge	74680 <__assert_fail@plt+0x61ac8>
   7459c:	mov	r0, #0
   745a0:	cmp	r0, #0
   745a4:	bne	7466c <__assert_fail@plt+0x61ab4>
   745a8:	b	74680 <__assert_fail@plt+0x61ac8>
   745ac:	ldr	r0, [fp, #16]
   745b0:	movw	r1, #13108	; 0x3334
   745b4:	movt	r1, #13107	; 0x3333
   745b8:	subs	r1, r1, r0
   745bc:	movw	r2, #13107	; 0x3333
   745c0:	movt	r2, #62259	; 0xf333
   745c4:	sbcs	r0, r2, r0, asr #31
   745c8:	str	r1, [sp, #324]	; 0x144
   745cc:	str	r0, [sp, #320]	; 0x140
   745d0:	blt	7466c <__assert_fail@plt+0x61ab4>
   745d4:	b	74680 <__assert_fail@plt+0x61ac8>
   745d8:	b	745e0 <__assert_fail@plt+0x61a28>
   745dc:	b	74680 <__assert_fail@plt+0x61ac8>
   745e0:	ldr	r0, [fp, #16]
   745e4:	cmp	r0, #0
   745e8:	bge	74640 <__assert_fail@plt+0x61a88>
   745ec:	ldr	r0, [fp, #16]
   745f0:	cmn	r0, #1
   745f4:	bne	74604 <__assert_fail@plt+0x61a4c>
   745f8:	b	745fc <__assert_fail@plt+0x61a44>
   745fc:	b	74680 <__assert_fail@plt+0x61ac8>
   74600:	b	74680 <__assert_fail@plt+0x61ac8>
   74604:	ldr	r0, [fp, #16]
   74608:	asr	r3, r0, #31
   7460c:	mov	r1, #0
   74610:	mov	r2, #-2147483648	; 0x80000000
   74614:	str	r0, [sp, #316]	; 0x13c
   74618:	mov	r0, r1
   7461c:	mov	r1, r2
   74620:	ldr	r2, [sp, #316]	; 0x13c
   74624:	bl	77780 <__assert_fail@plt+0x64bc8>
   74628:	subs	r0, r0, #10
   7462c:	sbcs	r1, r1, #0
   74630:	str	r0, [sp, #312]	; 0x138
   74634:	str	r1, [sp, #308]	; 0x134
   74638:	blt	7466c <__assert_fail@plt+0x61ab4>
   7463c:	b	74680 <__assert_fail@plt+0x61ac8>
   74640:	ldr	r0, [fp, #16]
   74644:	movw	r1, #52429	; 0xcccd
   74648:	movt	r1, #52428	; 0xcccc
   7464c:	subs	r1, r0, r1
   74650:	movw	r2, #52428	; 0xcccc
   74654:	movt	r2, #3276	; 0xccc
   74658:	rscs	r0, r2, r0, asr #31
   7465c:	str	r1, [sp, #304]	; 0x130
   74660:	str	r0, [sp, #300]	; 0x12c
   74664:	blt	74680 <__assert_fail@plt+0x61ac8>
   74668:	b	7466c <__assert_fail@plt+0x61ab4>
   7466c:	ldr	r0, [fp, #16]
   74670:	add	r0, r0, r0, lsl #2
   74674:	lsl	r0, r0, #1
   74678:	str	r0, [fp, #16]
   7467c:	b	74818 <__assert_fail@plt+0x61c60>
   74680:	ldr	r0, [fp, #16]
   74684:	add	r0, r0, r0, lsl #2
   74688:	lsl	r0, r0, #1
   7468c:	str	r0, [fp, #16]
   74690:	b	747ec <__assert_fail@plt+0x61c34>
   74694:	b	7474c <__assert_fail@plt+0x61b94>
   74698:	ldr	r0, [fp, #16]
   7469c:	cmp	r0, #0
   746a0:	bge	746e4 <__assert_fail@plt+0x61b2c>
   746a4:	b	746d4 <__assert_fail@plt+0x61b1c>
   746a8:	ldr	r0, [fp, #16]
   746ac:	movw	r1, #39321	; 0x9999
   746b0:	movt	r1, #39321	; 0x9999
   746b4:	subs	r1, r0, r1
   746b8:	movw	r2, #39321	; 0x9999
   746bc:	movt	r2, #6553	; 0x1999
   746c0:	rscs	r0, r2, r0, asr #31
   746c4:	str	r1, [sp, #296]	; 0x128
   746c8:	str	r0, [sp, #292]	; 0x124
   746cc:	bcc	747c8 <__assert_fail@plt+0x61c10>
   746d0:	b	747dc <__assert_fail@plt+0x61c24>
   746d4:	ldr	r0, [fp, #16]
   746d8:	cmn	r0, #1
   746dc:	bne	747c8 <__assert_fail@plt+0x61c10>
   746e0:	b	747dc <__assert_fail@plt+0x61c24>
   746e4:	b	746e8 <__assert_fail@plt+0x61b30>
   746e8:	b	74738 <__assert_fail@plt+0x61b80>
   746ec:	b	74738 <__assert_fail@plt+0x61b80>
   746f0:	b	74738 <__assert_fail@plt+0x61b80>
   746f4:	b	746f8 <__assert_fail@plt+0x61b40>
   746f8:	ldr	r0, [fp, #16]
   746fc:	add	r0, r0, #0
   74700:	movw	r1, #0
   74704:	cmp	r1, r0
   74708:	blt	747c8 <__assert_fail@plt+0x61c10>
   7470c:	b	747dc <__assert_fail@plt+0x61c24>
   74710:	ldr	r0, [fp, #16]
   74714:	movw	r1, #0
   74718:	cmp	r1, r0
   7471c:	bge	747dc <__assert_fail@plt+0x61c24>
   74720:	ldr	r0, [fp, #16]
   74724:	sub	r0, r0, #1
   74728:	mvn	r1, #0
   7472c:	cmp	r1, r0
   74730:	blt	747c8 <__assert_fail@plt+0x61c10>
   74734:	b	747dc <__assert_fail@plt+0x61c24>
   74738:	ldr	r0, [fp, #16]
   7473c:	movw	r1, #0
   74740:	cmp	r1, r0
   74744:	blt	747c8 <__assert_fail@plt+0x61c10>
   74748:	b	747dc <__assert_fail@plt+0x61c24>
   7474c:	b	74754 <__assert_fail@plt+0x61b9c>
   74750:	b	747dc <__assert_fail@plt+0x61c24>
   74754:	ldr	r0, [fp, #16]
   74758:	cmp	r0, #0
   7475c:	bge	7479c <__assert_fail@plt+0x61be4>
   74760:	b	74764 <__assert_fail@plt+0x61bac>
   74764:	b	74784 <__assert_fail@plt+0x61bcc>
   74768:	b	74784 <__assert_fail@plt+0x61bcc>
   7476c:	ldr	r0, [fp, #16]
   74770:	cmn	r0, #1
   74774:	bne	74784 <__assert_fail@plt+0x61bcc>
   74778:	b	7477c <__assert_fail@plt+0x61bc4>
   7477c:	b	747c8 <__assert_fail@plt+0x61c10>
   74780:	b	747c8 <__assert_fail@plt+0x61c10>
   74784:	ldr	r0, [fp, #16]
   74788:	movw	r1, #0
   7478c:	sdiv	r0, r1, r0
   74790:	cmp	r0, #10
   74794:	blt	747c8 <__assert_fail@plt+0x61c10>
   74798:	b	747dc <__assert_fail@plt+0x61c24>
   7479c:	ldr	r0, [fp, #16]
   747a0:	movw	r1, #39322	; 0x999a
   747a4:	movt	r1, #39321	; 0x9999
   747a8:	subs	r1, r0, r1
   747ac:	movw	r2, #39321	; 0x9999
   747b0:	movt	r2, #6553	; 0x1999
   747b4:	rscs	r0, r2, r0, asr #31
   747b8:	str	r1, [sp, #288]	; 0x120
   747bc:	str	r0, [sp, #284]	; 0x11c
   747c0:	bcc	747dc <__assert_fail@plt+0x61c24>
   747c4:	b	747c8 <__assert_fail@plt+0x61c10>
   747c8:	ldr	r0, [fp, #16]
   747cc:	add	r0, r0, r0, lsl #2
   747d0:	lsl	r0, r0, #1
   747d4:	str	r0, [fp, #16]
   747d8:	b	74818 <__assert_fail@plt+0x61c60>
   747dc:	ldr	r0, [fp, #16]
   747e0:	add	r0, r0, r0, lsl #2
   747e4:	lsl	r0, r0, #1
   747e8:	str	r0, [fp, #16]
   747ec:	ldr	r0, [fp, #16]
   747f0:	ldr	r1, [fp, #-72]	; 0xffffffb8
   747f4:	ldrb	r1, [r1]
   747f8:	sub	r1, r1, #48	; 0x30
   747fc:	add	r1, r0, r1
   74800:	mov	r2, #1
   74804:	cmp	r1, r0
   74808:	movwvc	r2, #0
   7480c:	str	r1, [fp, #16]
   74810:	tst	r2, #1
   74814:	beq	74820 <__assert_fail@plt+0x61c68>
   74818:	ldr	r0, [pc, #2108]	; 7505c <__assert_fail@plt+0x624a4>
   7481c:	str	r0, [fp, #16]
   74820:	ldr	r0, [fp, #-72]	; 0xffffffb8
   74824:	add	r0, r0, #1
   74828:	str	r0, [fp, #-72]	; 0xffffffb8
   7482c:	ldr	r0, [fp, #-72]	; 0xffffffb8
   74830:	ldrb	r0, [r0]
   74834:	sub	r0, r0, #48	; 0x30
   74838:	cmp	r0, #9
   7483c:	bls	73b3c <__assert_fail@plt+0x60f84>
   74840:	b	74844 <__assert_fail@plt+0x61c8c>
   74844:	ldr	r0, [fp, #-72]	; 0xffffffb8
   74848:	ldrb	r0, [r0]
   7484c:	mov	r1, r0
   74850:	cmp	r0, #69	; 0x45
   74854:	str	r1, [sp, #280]	; 0x118
   74858:	beq	74870 <__assert_fail@plt+0x61cb8>
   7485c:	b	74860 <__assert_fail@plt+0x61ca8>
   74860:	ldr	r0, [sp, #280]	; 0x118
   74864:	cmp	r0, #79	; 0x4f
   74868:	bne	74888 <__assert_fail@plt+0x61cd0>
   7486c:	b	74870 <__assert_fail@plt+0x61cb8>
   74870:	ldr	r0, [fp, #-72]	; 0xffffffb8
   74874:	add	r1, r0, #1
   74878:	str	r1, [fp, #-72]	; 0xffffffb8
   7487c:	ldrb	r0, [r0]
   74880:	str	r0, [fp, #-80]	; 0xffffffb0
   74884:	b	74890 <__assert_fail@plt+0x61cd8>
   74888:	movw	r0, #0
   7488c:	str	r0, [fp, #-80]	; 0xffffffb0
   74890:	ldr	r0, [fp, #-72]	; 0xffffffb8
   74894:	ldrb	r0, [r0]
   74898:	str	r0, [fp, #-136]	; 0xffffff78
   7489c:	ldr	r0, [fp, #-136]	; 0xffffff78
   748a0:	cmp	r0, #122	; 0x7a
   748a4:	str	r0, [sp, #276]	; 0x114
   748a8:	bhi	76e44 <__assert_fail@plt+0x6428c>
   748ac:	add	r0, pc, #8
   748b0:	ldr	r1, [sp, #276]	; 0x114
   748b4:	ldr	r0, [r0, r1, lsl #2]
   748b8:	mov	pc, r0
   748bc:	andeq	r6, r7, r0, lsr lr
   748c0:	andeq	r6, r7, r4, asr #28
   748c4:	andeq	r6, r7, r4, asr #28
   748c8:	andeq	r6, r7, r4, asr #28
   748cc:	andeq	r6, r7, r4, asr #28
   748d0:	andeq	r6, r7, r4, asr #28
   748d4:	andeq	r6, r7, r4, asr #28
   748d8:	andeq	r6, r7, r4, asr #28
   748dc:	andeq	r6, r7, r4, asr #28
   748e0:	andeq	r6, r7, r4, asr #28
   748e4:	andeq	r6, r7, r4, asr #28
   748e8:	andeq	r6, r7, r4, asr #28
   748ec:	andeq	r6, r7, r4, asr #28
   748f0:	andeq	r6, r7, r4, asr #28
   748f4:	andeq	r6, r7, r4, asr #28
   748f8:	andeq	r6, r7, r4, asr #28
   748fc:	andeq	r6, r7, r4, asr #28
   74900:	andeq	r6, r7, r4, asr #28
   74904:	andeq	r6, r7, r4, asr #28
   74908:	andeq	r6, r7, r4, asr #28
   7490c:	andeq	r6, r7, r4, asr #28
   74910:	andeq	r6, r7, r4, asr #28
   74914:	andeq	r6, r7, r4, asr #28
   74918:	andeq	r6, r7, r4, asr #28
   7491c:	andeq	r6, r7, r4, asr #28
   74920:	andeq	r6, r7, r4, asr #28
   74924:	andeq	r6, r7, r4, asr #28
   74928:	andeq	r6, r7, r4, asr #28
   7492c:	andeq	r6, r7, r4, asr #28
   74930:	andeq	r6, r7, r4, asr #28
   74934:	andeq	r6, r7, r4, asr #28
   74938:	andeq	r6, r7, r4, asr #28
   7493c:	andeq	r6, r7, r4, asr #28
   74940:	andeq	r6, r7, r4, asr #28
   74944:	andeq	r6, r7, r4, asr #28
   74948:	andeq	r6, r7, r4, asr #28
   7494c:	andeq	r6, r7, r4, asr #28
   74950:	andeq	r4, r7, r8, lsr #21
   74954:	andeq	r6, r7, r4, asr #28
   74958:	andeq	r6, r7, r4, asr #28
   7495c:	andeq	r6, r7, r4, asr #28
   74960:	andeq	r6, r7, r4, asr #28
   74964:	andeq	r6, r7, r4, asr #28
   74968:	andeq	r6, r7, r4, asr #28
   7496c:	andeq	r6, r7, r4, asr #28
   74970:	andeq	r6, r7, r4, asr #28
   74974:	andeq	r6, r7, r4, asr #28
   74978:	andeq	r6, r7, r4, asr #28
   7497c:	andeq	r6, r7, r4, asr #28
   74980:	andeq	r6, r7, r4, asr #28
   74984:	andeq	r6, r7, r4, asr #28
   74988:	andeq	r6, r7, r4, asr #28
   7498c:	andeq	r6, r7, r4, asr #28
   74990:	andeq	r6, r7, r4, asr #28
   74994:	andeq	r6, r7, r4, asr #28
   74998:	andeq	r6, r7, r4, asr #28
   7499c:	andeq	r6, r7, r4, asr #28
   749a0:	andeq	r6, r7, r4, asr #28
   749a4:	andeq	r6, r7, r8, asr #23
   749a8:	andeq	r6, r7, r4, asr #28
   749ac:	andeq	r6, r7, r4, asr #28
   749b0:	andeq	r6, r7, r4, asr #28
   749b4:	andeq	r6, r7, r4, asr #28
   749b8:	andeq	r6, r7, r4, asr #28
   749bc:	andeq	r6, r7, r4, asr #28
   749c0:	andeq	r4, r7, ip, asr ip
   749c4:			; <UNDEFINED> instruction: 0x00074cbc
   749c8:			; <UNDEFINED> instruction: 0x000751b4
   749cc:	andeq	r5, r7, r4, lsl #5
   749d0:	andeq	r6, r7, r4, asr #28
   749d4:	andeq	r5, r7, r0, asr r9
   749d8:	ldrdeq	r6, [r7], -ip
   749dc:	andeq	r5, r7, r0, asr #19
   749e0:	andeq	r5, r7, ip, ror #19
   749e4:	andeq	r6, r7, r4, asr #28
   749e8:	andeq	r6, r7, r4, asr #28
   749ec:	andeq	r6, r7, r4, asr #28
   749f0:			; <UNDEFINED> instruction: 0x00075ab4
   749f4:	andeq	r5, r7, ip, lsr #22
   749f8:	andeq	r6, r7, r4, asr #28
   749fc:	andeq	r6, r7, r4, lsl #2
   74a00:	andeq	r6, r7, r4, asr #28
   74a04:	andeq	r6, r7, r8, ror #2
   74a08:	andeq	r6, r7, ip, ror r1
   74a0c:	andeq	r6, r7, r4, ror #5
   74a10:	muleq	r7, r8, r4
   74a14:	ldrdeq	r6, [r7], -ip
   74a18:	andeq	r6, r7, r4, ror #16
   74a1c:	ldrdeq	r6, [r7], -r0
   74a20:	strdeq	r6, [r7], -r0
   74a24:	strdeq	r6, [r7], -r4
   74a28:	andeq	r6, r7, r4, asr #28
   74a2c:	andeq	r6, r7, r4, asr #28
   74a30:	andeq	r6, r7, r4, asr #28
   74a34:	andeq	r6, r7, r4, asr #28
   74a38:	andeq	r6, r7, r4, asr #28
   74a3c:	andeq	r6, r7, r4, asr #28
   74a40:	andeq	r4, r7, ip, lsr #24
   74a44:	andeq	r4, r7, ip, lsl #25
   74a48:	andeq	r4, r7, ip, ror #25
   74a4c:	andeq	r5, r7, r4, lsr #5
   74a50:	ldrdeq	r5, [r7], -r0
   74a54:	andeq	r6, r7, r4, asr #28
   74a58:	ldrdeq	r6, [r7], -ip
   74a5c:	andeq	r4, r7, ip, lsl #25
   74a60:	andeq	r6, r7, r4, asr #28
   74a64:	andeq	r5, r7, r8, ror #20
   74a68:	andeq	r5, r7, r4, lsl sl
   74a6c:	andeq	r5, r7, r0, asr #20
   74a70:	andeq	r5, r7, r0, ror #21
   74a74:	andeq	r5, r7, r0, lsr #31
   74a78:	andeq	r6, r7, r4, asr #28
   74a7c:	andeq	r6, r7, r4, lsl r1
   74a80:	andeq	r6, r7, r4, lsr r1
   74a84:	andeq	r6, r7, r8, ror r1
   74a88:	andeq	r6, r7, ip, lsr #3
   74a8c:	strdeq	r6, [r7], -r4
   74a90:	andeq	r6, r7, r8, asr r4
   74a94:	andeq	r6, r7, r4, asr #28
   74a98:	andeq	r6, r7, r4, asr #17
   74a9c:	andeq	r5, r7, r0, ror r2
   74aa0:	andeq	r6, r7, r4, asr r9
   74aa4:	andeq	r6, r7, ip, lsr #24
   74aa8:	ldr	r0, [fp, #-72]	; 0xffffffb8
   74aac:	mvn	r1, #0
   74ab0:	add	r0, r0, r1
   74ab4:	ldr	r1, [fp, #-160]	; 0xffffff60
   74ab8:	cmp	r0, r1
   74abc:	beq	74ac4 <__assert_fail@plt+0x61f0c>
   74ac0:	b	76e34 <__assert_fail@plt+0x6427c>
   74ac4:	b	74ac8 <__assert_fail@plt+0x61f10>
   74ac8:	movw	r0, #1
   74acc:	str	r0, [fp, #-164]	; 0xffffff5c
   74ad0:	ldr	r0, [fp, #-76]	; 0xffffffb4
   74ad4:	cmp	r0, #45	; 0x2d
   74ad8:	beq	74ae8 <__assert_fail@plt+0x61f30>
   74adc:	ldr	r0, [fp, #16]
   74ae0:	cmp	r0, #0
   74ae4:	bge	74af4 <__assert_fail@plt+0x61f3c>
   74ae8:	movw	r0, #0
   74aec:	str	r0, [sp, #272]	; 0x110
   74af0:	b	74afc <__assert_fail@plt+0x61f44>
   74af4:	ldr	r0, [fp, #16]
   74af8:	str	r0, [sp, #272]	; 0x110
   74afc:	ldr	r0, [sp, #272]	; 0x110
   74b00:	str	r0, [fp, #-168]	; 0xffffff58
   74b04:	ldr	r0, [fp, #-164]	; 0xffffff5c
   74b08:	ldr	r1, [fp, #-168]	; 0xffffff58
   74b0c:	cmp	r0, r1
   74b10:	bcs	74b20 <__assert_fail@plt+0x61f68>
   74b14:	ldr	r0, [fp, #-168]	; 0xffffff58
   74b18:	str	r0, [sp, #268]	; 0x10c
   74b1c:	b	74b28 <__assert_fail@plt+0x61f70>
   74b20:	ldr	r0, [fp, #-164]	; 0xffffff5c
   74b24:	str	r0, [sp, #268]	; 0x10c
   74b28:	ldr	r0, [sp, #268]	; 0x10c
   74b2c:	str	r0, [fp, #-172]	; 0xffffff54
   74b30:	ldr	r0, [fp, #-172]	; 0xffffff54
   74b34:	ldr	r1, [fp, #-36]	; 0xffffffdc
   74b38:	ldr	r2, [fp, #-64]	; 0xffffffc0
   74b3c:	sub	r1, r1, r2
   74b40:	cmp	r0, r1
   74b44:	bcc	74b60 <__assert_fail@plt+0x61fa8>
   74b48:	bl	128d0 <__errno_location@plt>
   74b4c:	movw	lr, #34	; 0x22
   74b50:	str	lr, [r0]
   74b54:	movw	r0, #0
   74b58:	str	r0, [fp, #-28]	; 0xffffffe4
   74b5c:	b	77068 <__assert_fail@plt+0x644b0>
   74b60:	ldr	r0, [fp, #-68]	; 0xffffffbc
   74b64:	movw	r1, #0
   74b68:	cmp	r0, r1
   74b6c:	beq	74c18 <__assert_fail@plt+0x62060>
   74b70:	ldr	r0, [fp, #-164]	; 0xffffff5c
   74b74:	ldr	r1, [fp, #-168]	; 0xffffff58
   74b78:	cmp	r0, r1
   74b7c:	bcs	74bf8 <__assert_fail@plt+0x62040>
   74b80:	ldr	r0, [fp, #-168]	; 0xffffff58
   74b84:	ldr	r1, [fp, #-164]	; 0xffffff5c
   74b88:	sub	r0, r0, r1
   74b8c:	str	r0, [fp, #-176]	; 0xffffff50
   74b90:	ldr	r0, [fp, #-76]	; 0xffffffb4
   74b94:	cmp	r0, #48	; 0x30
   74b98:	beq	74ba8 <__assert_fail@plt+0x61ff0>
   74b9c:	ldr	r0, [fp, #-76]	; 0xffffffb4
   74ba0:	cmp	r0, #43	; 0x2b
   74ba4:	bne	74bd0 <__assert_fail@plt+0x62018>
   74ba8:	ldr	r0, [fp, #-68]	; 0xffffffbc
   74bac:	ldr	r2, [fp, #-176]	; 0xffffff50
   74bb0:	movw	r1, #48	; 0x30
   74bb4:	and	r1, r1, #255	; 0xff
   74bb8:	bl	12900 <memset@plt>
   74bbc:	ldr	r0, [fp, #-176]	; 0xffffff50
   74bc0:	ldr	r1, [fp, #-68]	; 0xffffffbc
   74bc4:	add	r0, r1, r0
   74bc8:	str	r0, [fp, #-68]	; 0xffffffbc
   74bcc:	b	74bf4 <__assert_fail@plt+0x6203c>
   74bd0:	ldr	r0, [fp, #-68]	; 0xffffffbc
   74bd4:	ldr	r2, [fp, #-176]	; 0xffffff50
   74bd8:	movw	r1, #32
   74bdc:	and	r1, r1, #255	; 0xff
   74be0:	bl	12900 <memset@plt>
   74be4:	ldr	r0, [fp, #-176]	; 0xffffff50
   74be8:	ldr	r1, [fp, #-68]	; 0xffffffbc
   74bec:	add	r0, r1, r0
   74bf0:	str	r0, [fp, #-68]	; 0xffffffbc
   74bf4:	b	74bf8 <__assert_fail@plt+0x62040>
   74bf8:	ldr	r0, [fp, #-72]	; 0xffffffb8
   74bfc:	ldrb	r0, [r0]
   74c00:	ldr	r1, [fp, #-68]	; 0xffffffbc
   74c04:	strb	r0, [r1]
   74c08:	ldr	r0, [fp, #-164]	; 0xffffff5c
   74c0c:	ldr	r1, [fp, #-68]	; 0xffffffbc
   74c10:	add	r0, r1, r0
   74c14:	str	r0, [fp, #-68]	; 0xffffffbc
   74c18:	ldr	r0, [fp, #-172]	; 0xffffff54
   74c1c:	ldr	r1, [fp, #-64]	; 0xffffffc0
   74c20:	add	r0, r1, r0
   74c24:	str	r0, [fp, #-64]	; 0xffffffc0
   74c28:	b	77008 <__assert_fail@plt+0x64450>
   74c2c:	ldr	r0, [fp, #-80]	; 0xffffffb0
   74c30:	cmp	r0, #0
   74c34:	beq	74c3c <__assert_fail@plt+0x62084>
   74c38:	b	76e48 <__assert_fail@plt+0x64290>
   74c3c:	ldrb	r0, [fp, #-129]	; 0xffffff7f
   74c40:	tst	r0, #1
   74c44:	beq	74c58 <__assert_fail@plt+0x620a0>
   74c48:	movw	r0, #1
   74c4c:	strb	r0, [fp, #-124]	; 0xffffff84
   74c50:	movw	r0, #0
   74c54:	strb	r0, [fp, #-123]	; 0xffffff85
   74c58:	b	74f20 <__assert_fail@plt+0x62368>
   74c5c:	ldr	r0, [fp, #-80]	; 0xffffffb0
   74c60:	cmp	r0, #0
   74c64:	beq	74c6c <__assert_fail@plt+0x620b4>
   74c68:	b	76e48 <__assert_fail@plt+0x64290>
   74c6c:	ldrb	r0, [fp, #-129]	; 0xffffff7f
   74c70:	tst	r0, #1
   74c74:	beq	74c88 <__assert_fail@plt+0x620d0>
   74c78:	movw	r0, #1
   74c7c:	strb	r0, [fp, #-124]	; 0xffffff84
   74c80:	movw	r0, #0
   74c84:	strb	r0, [fp, #-123]	; 0xffffff85
   74c88:	b	74f20 <__assert_fail@plt+0x62368>
   74c8c:	ldrb	r0, [fp, #-129]	; 0xffffff7f
   74c90:	tst	r0, #1
   74c94:	beq	74ca8 <__assert_fail@plt+0x620f0>
   74c98:	movw	r0, #1
   74c9c:	strb	r0, [fp, #-124]	; 0xffffff84
   74ca0:	movw	r0, #0
   74ca4:	strb	r0, [fp, #-123]	; 0xffffff85
   74ca8:	ldr	r0, [fp, #-80]	; 0xffffffb0
   74cac:	cmp	r0, #69	; 0x45
   74cb0:	bne	74cb8 <__assert_fail@plt+0x62100>
   74cb4:	b	76e48 <__assert_fail@plt+0x64290>
   74cb8:	b	74f20 <__assert_fail@plt+0x62368>
   74cbc:	ldr	r0, [fp, #-80]	; 0xffffffb0
   74cc0:	cmp	r0, #69	; 0x45
   74cc4:	bne	74ccc <__assert_fail@plt+0x62114>
   74cc8:	b	76e48 <__assert_fail@plt+0x64290>
   74ccc:	ldrb	r0, [fp, #-129]	; 0xffffff7f
   74cd0:	tst	r0, #1
   74cd4:	beq	74ce8 <__assert_fail@plt+0x62130>
   74cd8:	movw	r0, #1
   74cdc:	strb	r0, [fp, #-124]	; 0xffffff84
   74ce0:	movw	r0, #0
   74ce4:	strb	r0, [fp, #-123]	; 0xffffff85
   74ce8:	b	74f20 <__assert_fail@plt+0x62368>
   74cec:	ldr	r0, [fp, #-80]	; 0xffffffb0
   74cf0:	cmp	r0, #79	; 0x4f
   74cf4:	bne	74cfc <__assert_fail@plt+0x62144>
   74cf8:	b	76e48 <__assert_fail@plt+0x64290>
   74cfc:	b	74f20 <__assert_fail@plt+0x62368>
   74d00:	mvn	r0, #0
   74d04:	str	r0, [fp, #-140]	; 0xffffff74
   74d08:	ldr	r2, [fp, #-104]	; 0xffffff98
   74d0c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   74d10:	ldrb	r0, [fp, #-124]	; 0xffffff84
   74d14:	ldr	r1, [fp, #-76]	; 0xffffffb4
   74d18:	ldr	ip, [fp, #-140]	; 0xffffff74
   74d1c:	ldr	lr, [fp, #20]
   74d20:	ldr	r4, [fp, #24]
   74d24:	ldr	r5, [fp, #28]
   74d28:	movw	r6, #0
   74d2c:	str	r0, [sp, #264]	; 0x108
   74d30:	mov	r0, r6
   74d34:	mvn	r6, #0
   74d38:	str	r1, [sp, #260]	; 0x104
   74d3c:	mov	r1, r6
   74d40:	ldr	r6, [sp, #264]	; 0x108
   74d44:	and	r7, r6, #1
   74d48:	str	r7, [sp]
   74d4c:	ldr	r7, [sp, #260]	; 0x104
   74d50:	str	r7, [sp, #4]
   74d54:	str	ip, [sp, #8]
   74d58:	str	lr, [sp, #12]
   74d5c:	str	r4, [sp, #16]
   74d60:	str	r5, [sp, #20]
   74d64:	bl	737ec <__assert_fail@plt+0x60c34>
   74d68:	str	r0, [fp, #-180]	; 0xffffff4c
   74d6c:	ldr	r0, [fp, #-180]	; 0xffffff4c
   74d70:	str	r0, [fp, #-184]	; 0xffffff48
   74d74:	ldr	r0, [fp, #-76]	; 0xffffffb4
   74d78:	cmp	r0, #45	; 0x2d
   74d7c:	beq	74d8c <__assert_fail@plt+0x621d4>
   74d80:	ldr	r0, [fp, #16]
   74d84:	cmp	r0, #0
   74d88:	bge	74d98 <__assert_fail@plt+0x621e0>
   74d8c:	movw	r0, #0
   74d90:	str	r0, [sp, #256]	; 0x100
   74d94:	b	74da0 <__assert_fail@plt+0x621e8>
   74d98:	ldr	r0, [fp, #16]
   74d9c:	str	r0, [sp, #256]	; 0x100
   74da0:	ldr	r0, [sp, #256]	; 0x100
   74da4:	str	r0, [fp, #-188]	; 0xffffff44
   74da8:	ldr	r0, [fp, #-184]	; 0xffffff48
   74dac:	ldr	r1, [fp, #-188]	; 0xffffff44
   74db0:	cmp	r0, r1
   74db4:	bcs	74dc8 <__assert_fail@plt+0x62210>
   74db8:	ldr	r0, [fp, #-188]	; 0xffffff44
   74dbc:	str	r0, [sp, #252]	; 0xfc
   74dc0:	b	74dd0 <__assert_fail@plt+0x62218>
   74dc4:			; <UNDEFINED> instruction: 0xfffff334
   74dc8:	ldr	r0, [fp, #-184]	; 0xffffff48
   74dcc:	str	r0, [sp, #252]	; 0xfc
   74dd0:	ldr	r0, [sp, #252]	; 0xfc
   74dd4:	str	r0, [fp, #-192]	; 0xffffff40
   74dd8:	ldr	r0, [fp, #-192]	; 0xffffff40
   74ddc:	ldr	r1, [fp, #-36]	; 0xffffffdc
   74de0:	ldr	r2, [fp, #-64]	; 0xffffffc0
   74de4:	sub	r1, r1, r2
   74de8:	cmp	r0, r1
   74dec:	bcc	74e0c <__assert_fail@plt+0x62254>
   74df0:	bl	128d0 <__errno_location@plt>
   74df4:	movw	lr, #34	; 0x22
   74df8:	str	lr, [r0]
   74dfc:	movw	r0, #0
   74e00:	str	r0, [fp, #-28]	; 0xffffffe4
   74e04:	b	77068 <__assert_fail@plt+0x644b0>
   74e08:			; <UNDEFINED> instruction: 0xffff8000
   74e0c:	ldr	r0, [fp, #-68]	; 0xffffffbc
   74e10:	movw	r1, #0
   74e14:	cmp	r0, r1
   74e18:	beq	74f08 <__assert_fail@plt+0x62350>
   74e1c:	ldr	r0, [fp, #-184]	; 0xffffff48
   74e20:	ldr	r1, [fp, #-188]	; 0xffffff44
   74e24:	cmp	r0, r1
   74e28:	bcs	74ea4 <__assert_fail@plt+0x622ec>
   74e2c:	ldr	r0, [fp, #-188]	; 0xffffff44
   74e30:	ldr	r1, [fp, #-184]	; 0xffffff48
   74e34:	sub	r0, r0, r1
   74e38:	str	r0, [fp, #-196]	; 0xffffff3c
   74e3c:	ldr	r0, [fp, #-76]	; 0xffffffb4
   74e40:	cmp	r0, #48	; 0x30
   74e44:	beq	74e54 <__assert_fail@plt+0x6229c>
   74e48:	ldr	r0, [fp, #-76]	; 0xffffffb4
   74e4c:	cmp	r0, #43	; 0x2b
   74e50:	bne	74e7c <__assert_fail@plt+0x622c4>
   74e54:	ldr	r0, [fp, #-68]	; 0xffffffbc
   74e58:	ldr	r2, [fp, #-196]	; 0xffffff3c
   74e5c:	movw	r1, #48	; 0x30
   74e60:	and	r1, r1, #255	; 0xff
   74e64:	bl	12900 <memset@plt>
   74e68:	ldr	r0, [fp, #-196]	; 0xffffff3c
   74e6c:	ldr	r1, [fp, #-68]	; 0xffffffbc
   74e70:	add	r0, r1, r0
   74e74:	str	r0, [fp, #-68]	; 0xffffffbc
   74e78:	b	74ea0 <__assert_fail@plt+0x622e8>
   74e7c:	ldr	r0, [fp, #-68]	; 0xffffffbc
   74e80:	ldr	r2, [fp, #-196]	; 0xffffff3c
   74e84:	movw	r1, #32
   74e88:	and	r1, r1, #255	; 0xff
   74e8c:	bl	12900 <memset@plt>
   74e90:	ldr	r0, [fp, #-196]	; 0xffffff3c
   74e94:	ldr	r1, [fp, #-68]	; 0xffffffbc
   74e98:	add	r0, r1, r0
   74e9c:	str	r0, [fp, #-68]	; 0xffffffbc
   74ea0:	b	74ea4 <__assert_fail@plt+0x622ec>
   74ea4:	ldr	r0, [fp, #-68]	; 0xffffffbc
   74ea8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   74eac:	ldr	r2, [fp, #-64]	; 0xffffffc0
   74eb0:	sub	r1, r1, r2
   74eb4:	ldr	r2, [fp, #-104]	; 0xffffff98
   74eb8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   74ebc:	ldrb	ip, [fp, #-124]	; 0xffffff84
   74ec0:	ldr	lr, [fp, #-76]	; 0xffffffb4
   74ec4:	ldr	r4, [fp, #-140]	; 0xffffff74
   74ec8:	ldr	r5, [fp, #20]
   74ecc:	ldr	r6, [fp, #24]
   74ed0:	ldr	r7, [fp, #28]
   74ed4:	and	ip, ip, #1
   74ed8:	str	ip, [sp]
   74edc:	str	lr, [sp, #4]
   74ee0:	str	r4, [sp, #8]
   74ee4:	str	r5, [sp, #12]
   74ee8:	str	r6, [sp, #16]
   74eec:	str	r7, [sp, #20]
   74ef0:	bl	737ec <__assert_fail@plt+0x60c34>
   74ef4:	ldr	r1, [fp, #-184]	; 0xffffff48
   74ef8:	ldr	r2, [fp, #-68]	; 0xffffffbc
   74efc:	add	r1, r2, r1
   74f00:	str	r1, [fp, #-68]	; 0xffffffbc
   74f04:	str	r0, [sp, #248]	; 0xf8
   74f08:	ldr	r0, [fp, #-192]	; 0xffffff40
   74f0c:	ldr	r1, [fp, #-64]	; 0xffffffc0
   74f10:	add	r0, r1, r0
   74f14:	str	r0, [fp, #-64]	; 0xffffffc0
   74f18:	b	77008 <__assert_fail@plt+0x64450>
   74f1c:			; <UNDEFINED> instruction: 0xffffe667
   74f20:	sub	r0, fp, #201	; 0xc9
   74f24:	str	r0, [fp, #-208]	; 0xffffff30
   74f28:	ldr	r0, [fp, #-208]	; 0xffffff30
   74f2c:	add	r1, r0, #1
   74f30:	str	r1, [fp, #-208]	; 0xffffff30
   74f34:	movw	r1, #32
   74f38:	strb	r1, [r0]
   74f3c:	ldr	r0, [fp, #-208]	; 0xffffff30
   74f40:	add	r1, r0, #1
   74f44:	str	r1, [fp, #-208]	; 0xffffff30
   74f48:	movw	r1, #37	; 0x25
   74f4c:	strb	r1, [r0]
   74f50:	ldr	r0, [fp, #-80]	; 0xffffffb0
   74f54:	cmp	r0, #0
   74f58:	beq	74f70 <__assert_fail@plt+0x623b8>
   74f5c:	ldr	r0, [fp, #-80]	; 0xffffffb0
   74f60:	ldr	r1, [fp, #-208]	; 0xffffff30
   74f64:	add	r2, r1, #1
   74f68:	str	r2, [fp, #-208]	; 0xffffff30
   74f6c:	strb	r0, [r1]
   74f70:	sub	r2, fp, #201	; 0xc9
   74f74:	add	r0, sp, #664	; 0x298
   74f78:	ldr	r1, [fp, #-136]	; 0xffffff78
   74f7c:	ldr	r3, [fp, #-208]	; 0xffffff30
   74f80:	add	ip, r3, #1
   74f84:	str	ip, [fp, #-208]	; 0xffffff30
   74f88:	strb	r1, [r3]
   74f8c:	ldr	r1, [fp, #-208]	; 0xffffff30
   74f90:	movw	r3, #0
   74f94:	strb	r3, [r1]
   74f98:	ldr	r3, [fp, #-44]	; 0xffffffd4
   74f9c:	movw	r1, #1024	; 0x400
   74fa0:	bl	127f8 <strftime@plt>
   74fa4:	str	r0, [sp, #660]	; 0x294
   74fa8:	ldr	r0, [sp, #660]	; 0x294
   74fac:	cmp	r0, #0
   74fb0:	beq	751b0 <__assert_fail@plt+0x625f8>
   74fb4:	b	74fb8 <__assert_fail@plt+0x62400>
   74fb8:	ldr	r0, [sp, #660]	; 0x294
   74fbc:	sub	r0, r0, #1
   74fc0:	str	r0, [sp, #656]	; 0x290
   74fc4:	ldr	r0, [fp, #-76]	; 0xffffffb4
   74fc8:	cmp	r0, #45	; 0x2d
   74fcc:	beq	74fdc <__assert_fail@plt+0x62424>
   74fd0:	ldr	r0, [fp, #16]
   74fd4:	cmp	r0, #0
   74fd8:	bge	74fe8 <__assert_fail@plt+0x62430>
   74fdc:	movw	r0, #0
   74fe0:	str	r0, [sp, #244]	; 0xf4
   74fe4:	b	74ff0 <__assert_fail@plt+0x62438>
   74fe8:	ldr	r0, [fp, #16]
   74fec:	str	r0, [sp, #244]	; 0xf4
   74ff0:	ldr	r0, [sp, #244]	; 0xf4
   74ff4:	str	r0, [sp, #652]	; 0x28c
   74ff8:	ldr	r0, [sp, #656]	; 0x290
   74ffc:	ldr	r1, [sp, #652]	; 0x28c
   75000:	cmp	r0, r1
   75004:	bcs	75014 <__assert_fail@plt+0x6245c>
   75008:	ldr	r0, [sp, #652]	; 0x28c
   7500c:	str	r0, [sp, #240]	; 0xf0
   75010:	b	7501c <__assert_fail@plt+0x62464>
   75014:	ldr	r0, [sp, #656]	; 0x290
   75018:	str	r0, [sp, #240]	; 0xf0
   7501c:	ldr	r0, [sp, #240]	; 0xf0
   75020:	str	r0, [sp, #648]	; 0x288
   75024:	ldr	r0, [sp, #648]	; 0x288
   75028:	ldr	r1, [fp, #-36]	; 0xffffffdc
   7502c:	ldr	r2, [fp, #-64]	; 0xffffffc0
   75030:	sub	r1, r1, r2
   75034:	cmp	r0, r1
   75038:	bcc	75060 <__assert_fail@plt+0x624a8>
   7503c:	bl	128d0 <__errno_location@plt>
   75040:	movw	lr, #34	; 0x22
   75044:	str	lr, [r0]
   75048:	movw	r0, #0
   7504c:	str	r0, [fp, #-28]	; 0xffffffe4
   75050:	b	77068 <__assert_fail@plt+0x644b0>
   75054:	stcleq	12, cr12, [ip], {204}	; 0xcc
   75058:	vcge.u<illegal width 64>	d3, d3, d20
   7505c:	svcvc	0x00ffffff
   75060:	ldr	r0, [fp, #-68]	; 0xffffffbc
   75064:	movw	r1, #0
   75068:	cmp	r0, r1
   7506c:	beq	7519c <__assert_fail@plt+0x625e4>
   75070:	ldr	r0, [sp, #656]	; 0x290
   75074:	ldr	r1, [sp, #652]	; 0x28c
   75078:	cmp	r0, r1
   7507c:	bcs	750fc <__assert_fail@plt+0x62544>
   75080:	ldr	r0, [sp, #652]	; 0x28c
   75084:	ldr	r1, [sp, #656]	; 0x290
   75088:	sub	r0, r0, r1
   7508c:	str	r0, [sp, #644]	; 0x284
   75090:	ldr	r0, [fp, #-76]	; 0xffffffb4
   75094:	cmp	r0, #48	; 0x30
   75098:	beq	750a8 <__assert_fail@plt+0x624f0>
   7509c:	ldr	r0, [fp, #-76]	; 0xffffffb4
   750a0:	cmp	r0, #43	; 0x2b
   750a4:	bne	750d4 <__assert_fail@plt+0x6251c>
   750a8:	ldr	r0, [fp, #-68]	; 0xffffffbc
   750ac:	ldr	r2, [sp, #644]	; 0x284
   750b0:	movw	r1, #48	; 0x30
   750b4:	and	r1, r1, #255	; 0xff
   750b8:	bl	12900 <memset@plt>
   750bc:	ldr	r0, [sp, #644]	; 0x284
   750c0:	ldr	r1, [fp, #-68]	; 0xffffffbc
   750c4:	add	r0, r1, r0
   750c8:	str	r0, [fp, #-68]	; 0xffffffbc
   750cc:	b	750f8 <__assert_fail@plt+0x62540>
   750d0:	andhi	r0, r0, r0
   750d4:	ldr	r0, [fp, #-68]	; 0xffffffbc
   750d8:	ldr	r2, [sp, #644]	; 0x284
   750dc:	movw	r1, #32
   750e0:	and	r1, r1, #255	; 0xff
   750e4:	bl	12900 <memset@plt>
   750e8:	ldr	r0, [sp, #644]	; 0x284
   750ec:	ldr	r1, [fp, #-68]	; 0xffffffbc
   750f0:	add	r0, r1, r0
   750f4:	str	r0, [fp, #-68]	; 0xffffffbc
   750f8:	b	750fc <__assert_fail@plt+0x62544>
   750fc:	ldrb	r0, [fp, #-123]	; 0xffffff85
   75100:	tst	r0, #1
   75104:	beq	75130 <__assert_fail@plt+0x62578>
   75108:	add	r0, sp, #664	; 0x298
   7510c:	ldr	r1, [fp, #-68]	; 0xffffffbc
   75110:	add	r0, r0, #1
   75114:	ldr	r2, [sp, #656]	; 0x290
   75118:	str	r0, [sp, #236]	; 0xec
   7511c:	mov	r0, r1
   75120:	ldr	r1, [sp, #236]	; 0xec
   75124:	bl	77078 <__assert_fail@plt+0x644c0>
   75128:	str	r0, [sp, #232]	; 0xe8
   7512c:	b	7518c <__assert_fail@plt+0x625d4>
   75130:	ldrb	r0, [fp, #-124]	; 0xffffff84
   75134:	tst	r0, #1
   75138:	beq	75168 <__assert_fail@plt+0x625b0>
   7513c:	add	r0, sp, #664	; 0x298
   75140:	ldr	r1, [fp, #-68]	; 0xffffffbc
   75144:	add	r0, r0, #1
   75148:	ldr	r2, [sp, #656]	; 0x290
   7514c:	str	r0, [sp, #228]	; 0xe4
   75150:	mov	r0, r1
   75154:	ldr	r1, [sp, #228]	; 0xe4
   75158:	bl	770dc <__assert_fail@plt+0x64524>
   7515c:	str	r0, [sp, #224]	; 0xe0
   75160:	b	75188 <__assert_fail@plt+0x625d0>
   75164:	ldmibne	r9, {r0, r3, r4, r7, r8, fp, ip, pc}
   75168:	add	r0, sp, #664	; 0x298
   7516c:	ldr	r1, [fp, #-68]	; 0xffffffbc
   75170:	add	r0, r0, #1
   75174:	ldr	r2, [sp, #656]	; 0x290
   75178:	str	r0, [sp, #220]	; 0xdc
   7517c:	mov	r0, r1
   75180:	ldr	r1, [sp, #220]	; 0xdc
   75184:	bl	125c4 <memcpy@plt>
   75188:	b	7518c <__assert_fail@plt+0x625d4>
   7518c:	ldr	r0, [sp, #656]	; 0x290
   75190:	ldr	r1, [fp, #-68]	; 0xffffffbc
   75194:	add	r0, r1, r0
   75198:	str	r0, [fp, #-68]	; 0xffffffbc
   7519c:	ldr	r0, [sp, #648]	; 0x288
   751a0:	ldr	r1, [fp, #-64]	; 0xffffffc0
   751a4:	add	r0, r1, r0
   751a8:	str	r0, [fp, #-64]	; 0xffffffc0
   751ac:	b	751b0 <__assert_fail@plt+0x625f8>
   751b0:	b	77008 <__assert_fail@plt+0x64450>
   751b4:	ldr	r0, [fp, #-80]	; 0xffffffb0
   751b8:	cmp	r0, #69	; 0x45
   751bc:	bne	751c4 <__assert_fail@plt+0x6260c>
   751c0:	b	74f20 <__assert_fail@plt+0x62368>
   751c4:	ldr	r0, [pc, #4060]	; 761a8 <__assert_fail@plt+0x635f0>
   751c8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   751cc:	ldr	r1, [r1, #20]
   751d0:	cmp	r1, r0
   751d4:	movw	r0, #0
   751d8:	movlt	r0, #1
   751dc:	and	r0, r0, #1
   751e0:	strb	r0, [sp, #643]	; 0x283
   751e4:	ldrb	r0, [sp, #643]	; 0x283
   751e8:	mvn	r1, #0
   751ec:	eor	r0, r0, r1
   751f0:	and	r0, r0, #1
   751f4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   751f8:	ldr	r1, [r1, #20]
   751fc:	cmp	r1, #0
   75200:	movw	r1, #0
   75204:	movlt	r1, #1
   75208:	and	r1, r1, #1
   7520c:	and	r0, r0, r1
   75210:	cmp	r0, #0
   75214:	movw	r0, #0
   75218:	movne	r0, #1
   7521c:	and	r0, r0, #1
   75220:	strb	r0, [sp, #642]	; 0x282
   75224:	ldr	r0, [fp, #-44]	; 0xffffffd4
   75228:	ldr	r0, [r0, #20]
   7522c:	ldrb	r1, [sp, #642]	; 0x282
   75230:	and	r1, r1, #1
   75234:	movw	r2, #99	; 0x63
   75238:	mul	r1, r1, r2
   7523c:	sub	r0, r0, r1
   75240:	movw	r1, #100	; 0x64
   75244:	sdiv	r0, r0, r1
   75248:	add	r0, r0, #19
   7524c:	str	r0, [sp, #636]	; 0x27c
   75250:	movw	r0, #2
   75254:	str	r0, [fp, #-84]	; 0xffffffac
   75258:	ldrb	r0, [sp, #643]	; 0x283
   7525c:	and	r0, r0, #1
   75260:	strb	r0, [fp, #-93]	; 0xffffffa3
   75264:	ldr	r0, [sp, #636]	; 0x27c
   75268:	str	r0, [fp, #-92]	; 0xffffffa4
   7526c:	b	75308 <__assert_fail@plt+0x62750>
   75270:	ldr	r0, [fp, #-80]	; 0xffffffb0
   75274:	cmp	r0, #79	; 0x4f
   75278:	bne	75280 <__assert_fail@plt+0x626c8>
   7527c:	b	76e48 <__assert_fail@plt+0x64290>
   75280:	b	74f20 <__assert_fail@plt+0x62368>
   75284:	ldr	r0, [fp, #-80]	; 0xffffffb0
   75288:	cmp	r0, #0
   7528c:	beq	75294 <__assert_fail@plt+0x626dc>
   75290:	b	76e48 <__assert_fail@plt+0x64290>
   75294:	movw	r0, #59624	; 0xe8e8
   75298:	movt	r0, #7
   7529c:	str	r0, [fp, #-104]	; 0xffffff98
   752a0:	b	74d00 <__assert_fail@plt+0x62148>
   752a4:	ldr	r0, [fp, #-80]	; 0xffffffb0
   752a8:	cmp	r0, #69	; 0x45
   752ac:	bne	752b4 <__assert_fail@plt+0x626fc>
   752b0:	b	76e48 <__assert_fail@plt+0x64290>
   752b4:	b	752b8 <__assert_fail@plt+0x62700>
   752b8:	movw	r0, #2
   752bc:	str	r0, [fp, #-84]	; 0xffffffac
   752c0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   752c4:	ldr	r0, [r0, #12]
   752c8:	str	r0, [fp, #-88]	; 0xffffffa8
   752cc:	b	753ac <__assert_fail@plt+0x627f4>
   752d0:	ldr	r0, [fp, #-80]	; 0xffffffb0
   752d4:	cmp	r0, #69	; 0x45
   752d8:	bne	752e0 <__assert_fail@plt+0x62728>
   752dc:	b	76e48 <__assert_fail@plt+0x64290>
   752e0:	b	752e4 <__assert_fail@plt+0x6272c>
   752e4:	movw	r0, #2
   752e8:	str	r0, [fp, #-84]	; 0xffffffac
   752ec:	ldr	r0, [fp, #-44]	; 0xffffffd4
   752f0:	ldr	r0, [r0, #12]
   752f4:	str	r0, [fp, #-88]	; 0xffffffa8
   752f8:	b	75394 <__assert_fail@plt+0x627dc>
   752fc:	movw	r0, #1
   75300:	strb	r0, [fp, #-94]	; 0xffffffa2
   75304:	b	753dc <__assert_fail@plt+0x62824>
   75308:	ldr	r0, [fp, #-76]	; 0xffffffb4
   7530c:	cmp	r0, #0
   75310:	bne	7531c <__assert_fail@plt+0x62764>
   75314:	ldr	r0, [fp, #12]
   75318:	str	r0, [fp, #-76]	; 0xffffffb4
   7531c:	ldr	r0, [fp, #-76]	; 0xffffffb4
   75320:	cmp	r0, #43	; 0x2b
   75324:	movw	r0, #0
   75328:	str	r0, [sp, #216]	; 0xd8
   7532c:	bne	75384 <__assert_fail@plt+0x627cc>
   75330:	ldr	r0, [fp, #-84]	; 0xffffffac
   75334:	cmp	r0, #2
   75338:	movw	r0, #0
   7533c:	moveq	r0, #1
   75340:	tst	r0, #1
   75344:	movw	r0, #9999	; 0x270f
   75348:	movw	r1, #99	; 0x63
   7534c:	movne	r0, r1
   75350:	ldr	r1, [fp, #-92]	; 0xffffffa4
   75354:	cmp	r0, r1
   75358:	movw	r0, #1
   7535c:	str	r0, [sp, #212]	; 0xd4
   75360:	bcc	7537c <__assert_fail@plt+0x627c4>
   75364:	ldr	r0, [fp, #-84]	; 0xffffffac
   75368:	ldr	r1, [fp, #16]
   7536c:	cmp	r0, r1
   75370:	movw	r0, #0
   75374:	movlt	r0, #1
   75378:	str	r0, [sp, #212]	; 0xd4
   7537c:	ldr	r0, [sp, #212]	; 0xd4
   75380:	str	r0, [sp, #216]	; 0xd8
   75384:	ldr	r0, [sp, #216]	; 0xd8
   75388:	and	r0, r0, #1
   7538c:	strb	r0, [fp, #-94]	; 0xffffffa2
   75390:	b	753d4 <__assert_fail@plt+0x6281c>
   75394:	ldr	r0, [fp, #-76]	; 0xffffffb4
   75398:	cmp	r0, #0
   7539c:	bne	753a8 <__assert_fail@plt+0x627f0>
   753a0:	movw	r0, #95	; 0x5f
   753a4:	str	r0, [fp, #-76]	; 0xffffffb4
   753a8:	b	753ac <__assert_fail@plt+0x627f4>
   753ac:	ldr	r0, [fp, #-88]	; 0xffffffa8
   753b0:	cmp	r0, #0
   753b4:	movw	r0, #0
   753b8:	movlt	r0, #1
   753bc:	and	r0, r0, #1
   753c0:	strb	r0, [fp, #-93]	; 0xffffffa3
   753c4:	ldr	r0, [fp, #-88]	; 0xffffffa8
   753c8:	str	r0, [fp, #-92]	; 0xffffffa4
   753cc:	movw	r0, #0
   753d0:	strb	r0, [fp, #-94]	; 0xffffffa2
   753d4:	movw	r0, #0
   753d8:	str	r0, [fp, #-100]	; 0xffffff9c
   753dc:	ldr	r0, [fp, #-80]	; 0xffffffb0
   753e0:	cmp	r0, #79	; 0x4f
   753e4:	bne	753f8 <__assert_fail@plt+0x62840>
   753e8:	ldrb	r0, [fp, #-93]	; 0xffffffa3
   753ec:	tst	r0, #1
   753f0:	bne	753f8 <__assert_fail@plt+0x62840>
   753f4:	b	74f20 <__assert_fail@plt+0x62368>
   753f8:	sub	r0, fp, #122	; 0x7a
   753fc:	add	r0, r0, #14
   75400:	str	r0, [fp, #-108]	; 0xffffff94
   75404:	ldrb	r0, [fp, #-93]	; 0xffffffa3
   75408:	tst	r0, #1
   7540c:	beq	75420 <__assert_fail@plt+0x62868>
   75410:	ldr	r0, [fp, #-92]	; 0xffffffa4
   75414:	movw	r1, #0
   75418:	sub	r0, r1, r0
   7541c:	str	r0, [fp, #-92]	; 0xffffffa4
   75420:	b	75424 <__assert_fail@plt+0x6286c>
   75424:	ldr	r0, [fp, #-100]	; 0xffffff9c
   75428:	and	r0, r0, #1
   7542c:	cmp	r0, #0
   75430:	beq	75450 <__assert_fail@plt+0x62898>
   75434:	ldr	r0, [fp, #-108]	; 0xffffff94
   75438:	mvn	r1, #0
   7543c:	add	r2, r0, r1
   75440:	str	r2, [fp, #-108]	; 0xffffff94
   75444:	add	r0, r0, r1
   75448:	movw	r1, #58	; 0x3a
   7544c:	strb	r1, [r0]
   75450:	ldr	r0, [fp, #-100]	; 0xffffff9c
   75454:	asr	r0, r0, #1
   75458:	str	r0, [fp, #-100]	; 0xffffff9c
   7545c:	ldr	r0, [fp, #-92]	; 0xffffffa4
   75460:	movw	r1, #52429	; 0xcccd
   75464:	movt	r1, #52428	; 0xcccc
   75468:	umull	r1, r2, r0, r1
   7546c:	lsr	r2, r2, #3
   75470:	add	r2, r2, r2, lsl #2
   75474:	sub	r0, r0, r2, lsl #1
   75478:	add	r0, r0, #48	; 0x30
   7547c:	ldr	r2, [fp, #-108]	; 0xffffff94
   75480:	mvn	r3, #0
   75484:	add	ip, r2, r3
   75488:	str	ip, [fp, #-108]	; 0xffffff94
   7548c:	add	r2, r2, r3
   75490:	strb	r0, [r2]
   75494:	ldr	r0, [fp, #-92]	; 0xffffffa4
   75498:	movw	r2, #10
   7549c:	udiv	r0, r0, r2
   754a0:	str	r0, [fp, #-92]	; 0xffffffa4
   754a4:	str	r1, [sp, #208]	; 0xd0
   754a8:	ldr	r0, [fp, #-92]	; 0xffffffa4
   754ac:	cmp	r0, #0
   754b0:	movw	r0, #1
   754b4:	str	r0, [sp, #204]	; 0xcc
   754b8:	bne	754d0 <__assert_fail@plt+0x62918>
   754bc:	ldr	r0, [fp, #-100]	; 0xffffff9c
   754c0:	cmp	r0, #0
   754c4:	movw	r0, #0
   754c8:	movne	r0, #1
   754cc:	str	r0, [sp, #204]	; 0xcc
   754d0:	ldr	r0, [sp, #204]	; 0xcc
   754d4:	tst	r0, #1
   754d8:	bne	75424 <__assert_fail@plt+0x6286c>
   754dc:	b	754e0 <__assert_fail@plt+0x62928>
   754e0:	ldr	r0, [fp, #-76]	; 0xffffffb4
   754e4:	cmp	r0, #0
   754e8:	bne	754f4 <__assert_fail@plt+0x6293c>
   754ec:	movw	r0, #48	; 0x30
   754f0:	str	r0, [fp, #-76]	; 0xffffffb4
   754f4:	ldr	r0, [fp, #16]
   754f8:	cmp	r0, #0
   754fc:	bge	75508 <__assert_fail@plt+0x62950>
   75500:	ldr	r0, [fp, #-84]	; 0xffffffac
   75504:	str	r0, [fp, #16]
   75508:	ldrb	r0, [fp, #-93]	; 0xffffffa3
   7550c:	tst	r0, #1
   75510:	beq	75520 <__assert_fail@plt+0x62968>
   75514:	movw	r0, #45	; 0x2d
   75518:	str	r0, [sp, #200]	; 0xc8
   7551c:	b	75534 <__assert_fail@plt+0x6297c>
   75520:	ldrb	r0, [fp, #-94]	; 0xffffffa2
   75524:	tst	r0, #1
   75528:	movw	r0, #43	; 0x2b
   7552c:	moveq	r0, #0
   75530:	str	r0, [sp, #200]	; 0xc8
   75534:	ldr	r0, [sp, #200]	; 0xc8
   75538:	sub	r1, fp, #122	; 0x7a
   7553c:	strb	r0, [sp, #635]	; 0x27b
   75540:	add	r0, r1, #14
   75544:	ldr	r1, [fp, #-108]	; 0xffffff94
   75548:	sub	r0, r0, r1
   7554c:	str	r0, [sp, #628]	; 0x274
   75550:	ldr	r0, [fp, #16]
   75554:	add	lr, sp, #512	; 0x200
   75558:	ldrsb	r1, [lr, #123]	; 0x7b
   7555c:	cmp	r1, #0
   75560:	movw	r1, #0
   75564:	movne	r1, #1
   75568:	mvn	r2, #0
   7556c:	eor	r1, r1, r2
   75570:	eor	r1, r1, r2
   75574:	and	r1, r1, #1
   75578:	sub	r0, r0, r1
   7557c:	ldr	r1, [sp, #628]	; 0x274
   75580:	sub	r0, r0, r1
   75584:	str	r0, [sp, #624]	; 0x270
   75588:	ldr	r0, [fp, #-76]	; 0xffffffb4
   7558c:	cmp	r0, #45	; 0x2d
   75590:	beq	755a0 <__assert_fail@plt+0x629e8>
   75594:	ldr	r0, [sp, #624]	; 0x270
   75598:	cmp	r0, #0
   7559c:	bgt	755ac <__assert_fail@plt+0x629f4>
   755a0:	movw	r0, #0
   755a4:	str	r0, [sp, #196]	; 0xc4
   755a8:	b	755b4 <__assert_fail@plt+0x629fc>
   755ac:	ldr	r0, [sp, #624]	; 0x270
   755b0:	str	r0, [sp, #196]	; 0xc4
   755b4:	ldr	r0, [sp, #196]	; 0xc4
   755b8:	str	r0, [sp, #620]	; 0x26c
   755bc:	add	lr, sp, #512	; 0x200
   755c0:	ldrsb	r0, [lr, #123]	; 0x7b
   755c4:	cmp	r0, #0
   755c8:	beq	7579c <__assert_fail@plt+0x62be4>
   755cc:	ldr	r0, [fp, #-76]	; 0xffffffb4
   755d0:	cmp	r0, #95	; 0x5f
   755d4:	bne	7562c <__assert_fail@plt+0x62a74>
   755d8:	ldr	r0, [fp, #-68]	; 0xffffffbc
   755dc:	movw	r1, #0
   755e0:	cmp	r0, r1
   755e4:	beq	7560c <__assert_fail@plt+0x62a54>
   755e8:	ldr	r0, [fp, #-68]	; 0xffffffbc
   755ec:	ldr	r2, [sp, #620]	; 0x26c
   755f0:	movw	r1, #32
   755f4:	and	r1, r1, #255	; 0xff
   755f8:	bl	12900 <memset@plt>
   755fc:	ldr	r0, [sp, #620]	; 0x26c
   75600:	ldr	r1, [fp, #-68]	; 0xffffffbc
   75604:	add	r0, r1, r0
   75608:	str	r0, [fp, #-68]	; 0xffffffbc
   7560c:	ldr	r0, [sp, #620]	; 0x26c
   75610:	ldr	r1, [fp, #-64]	; 0xffffffc0
   75614:	add	r0, r1, r0
   75618:	str	r0, [fp, #-64]	; 0xffffffc0
   7561c:	ldr	r0, [sp, #620]	; 0x26c
   75620:	ldr	r1, [fp, #16]
   75624:	sub	r0, r1, r0
   75628:	str	r0, [fp, #16]
   7562c:	b	75630 <__assert_fail@plt+0x62a78>
   75630:	movw	r0, #1
   75634:	str	r0, [sp, #616]	; 0x268
   75638:	ldr	r0, [fp, #-76]	; 0xffffffb4
   7563c:	cmp	r0, #45	; 0x2d
   75640:	movw	r0, #1
   75644:	str	r0, [sp, #192]	; 0xc0
   75648:	beq	75658 <__assert_fail@plt+0x62aa0>
   7564c:	movw	r0, #0
   75650:	str	r0, [sp, #192]	; 0xc0
   75654:	b	75658 <__assert_fail@plt+0x62aa0>
   75658:	ldr	r0, [sp, #192]	; 0xc0
   7565c:	tst	r0, #1
   75660:	movw	r0, #0
   75664:	moveq	r0, #0
   75668:	str	r0, [sp, #612]	; 0x264
   7566c:	ldr	r0, [sp, #616]	; 0x268
   75670:	ldr	r1, [sp, #612]	; 0x264
   75674:	cmp	r0, r1
   75678:	bcs	75688 <__assert_fail@plt+0x62ad0>
   7567c:	ldr	r0, [sp, #612]	; 0x264
   75680:	str	r0, [sp, #188]	; 0xbc
   75684:	b	75690 <__assert_fail@plt+0x62ad8>
   75688:	ldr	r0, [sp, #616]	; 0x268
   7568c:	str	r0, [sp, #188]	; 0xbc
   75690:	ldr	r0, [sp, #188]	; 0xbc
   75694:	str	r0, [sp, #608]	; 0x260
   75698:	ldr	r0, [sp, #608]	; 0x260
   7569c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   756a0:	ldr	r2, [fp, #-64]	; 0xffffffc0
   756a4:	sub	r1, r1, r2
   756a8:	cmp	r0, r1
   756ac:	bcc	756c8 <__assert_fail@plt+0x62b10>
   756b0:	bl	128d0 <__errno_location@plt>
   756b4:	movw	lr, #34	; 0x22
   756b8:	str	lr, [r0]
   756bc:	movw	r0, #0
   756c0:	str	r0, [fp, #-28]	; 0xffffffe4
   756c4:	b	77068 <__assert_fail@plt+0x644b0>
   756c8:	ldr	r0, [fp, #-68]	; 0xffffffbc
   756cc:	movw	r1, #0
   756d0:	cmp	r0, r1
   756d4:	beq	7577c <__assert_fail@plt+0x62bc4>
   756d8:	ldr	r0, [sp, #616]	; 0x268
   756dc:	ldr	r1, [sp, #612]	; 0x264
   756e0:	cmp	r0, r1
   756e4:	bcs	75760 <__assert_fail@plt+0x62ba8>
   756e8:	ldr	r0, [sp, #612]	; 0x264
   756ec:	ldr	r1, [sp, #616]	; 0x268
   756f0:	sub	r0, r0, r1
   756f4:	str	r0, [sp, #604]	; 0x25c
   756f8:	ldr	r0, [fp, #-76]	; 0xffffffb4
   756fc:	cmp	r0, #48	; 0x30
   75700:	beq	75710 <__assert_fail@plt+0x62b58>
   75704:	ldr	r0, [fp, #-76]	; 0xffffffb4
   75708:	cmp	r0, #43	; 0x2b
   7570c:	bne	75738 <__assert_fail@plt+0x62b80>
   75710:	ldr	r0, [fp, #-68]	; 0xffffffbc
   75714:	ldr	r2, [sp, #604]	; 0x25c
   75718:	movw	r1, #48	; 0x30
   7571c:	and	r1, r1, #255	; 0xff
   75720:	bl	12900 <memset@plt>
   75724:	ldr	r0, [sp, #604]	; 0x25c
   75728:	ldr	r1, [fp, #-68]	; 0xffffffbc
   7572c:	add	r0, r1, r0
   75730:	str	r0, [fp, #-68]	; 0xffffffbc
   75734:	b	7575c <__assert_fail@plt+0x62ba4>
   75738:	ldr	r0, [fp, #-68]	; 0xffffffbc
   7573c:	ldr	r2, [sp, #604]	; 0x25c
   75740:	movw	r1, #32
   75744:	and	r1, r1, #255	; 0xff
   75748:	bl	12900 <memset@plt>
   7574c:	ldr	r0, [sp, #604]	; 0x25c
   75750:	ldr	r1, [fp, #-68]	; 0xffffffbc
   75754:	add	r0, r1, r0
   75758:	str	r0, [fp, #-68]	; 0xffffffbc
   7575c:	b	75760 <__assert_fail@plt+0x62ba8>
   75760:	ldrb	r0, [sp, #635]	; 0x27b
   75764:	ldr	r1, [fp, #-68]	; 0xffffffbc
   75768:	strb	r0, [r1]
   7576c:	ldr	r0, [sp, #616]	; 0x268
   75770:	ldr	r1, [fp, #-68]	; 0xffffffbc
   75774:	add	r0, r1, r0
   75778:	str	r0, [fp, #-68]	; 0xffffffbc
   7577c:	ldr	r0, [sp, #608]	; 0x260
   75780:	ldr	r1, [fp, #-64]	; 0xffffffc0
   75784:	add	r0, r1, r0
   75788:	str	r0, [fp, #-64]	; 0xffffffc0
   7578c:	ldr	r0, [fp, #16]
   75790:	mvn	r1, #0
   75794:	add	r0, r0, r1
   75798:	str	r0, [fp, #16]
   7579c:	b	757a0 <__assert_fail@plt+0x62be8>
   757a0:	ldr	r0, [sp, #628]	; 0x274
   757a4:	str	r0, [sp, #600]	; 0x258
   757a8:	ldr	r0, [fp, #-76]	; 0xffffffb4
   757ac:	cmp	r0, #45	; 0x2d
   757b0:	beq	757c0 <__assert_fail@plt+0x62c08>
   757b4:	ldr	r0, [fp, #16]
   757b8:	cmp	r0, #0
   757bc:	bge	757cc <__assert_fail@plt+0x62c14>
   757c0:	movw	r0, #0
   757c4:	str	r0, [sp, #184]	; 0xb8
   757c8:	b	757d4 <__assert_fail@plt+0x62c1c>
   757cc:	ldr	r0, [fp, #16]
   757d0:	str	r0, [sp, #184]	; 0xb8
   757d4:	ldr	r0, [sp, #184]	; 0xb8
   757d8:	str	r0, [sp, #596]	; 0x254
   757dc:	ldr	r0, [sp, #600]	; 0x258
   757e0:	ldr	r1, [sp, #596]	; 0x254
   757e4:	cmp	r0, r1
   757e8:	bcs	757f8 <__assert_fail@plt+0x62c40>
   757ec:	ldr	r0, [sp, #596]	; 0x254
   757f0:	str	r0, [sp, #180]	; 0xb4
   757f4:	b	75800 <__assert_fail@plt+0x62c48>
   757f8:	ldr	r0, [sp, #600]	; 0x258
   757fc:	str	r0, [sp, #180]	; 0xb4
   75800:	ldr	r0, [sp, #180]	; 0xb4
   75804:	str	r0, [sp, #592]	; 0x250
   75808:	ldr	r0, [sp, #592]	; 0x250
   7580c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   75810:	ldr	r2, [fp, #-64]	; 0xffffffc0
   75814:	sub	r1, r1, r2
   75818:	cmp	r0, r1
   7581c:	bcc	75838 <__assert_fail@plt+0x62c80>
   75820:	bl	128d0 <__errno_location@plt>
   75824:	movw	lr, #34	; 0x22
   75828:	str	lr, [r0]
   7582c:	movw	r0, #0
   75830:	str	r0, [fp, #-28]	; 0xffffffe4
   75834:	b	77068 <__assert_fail@plt+0x644b0>
   75838:	ldr	r0, [fp, #-68]	; 0xffffffbc
   7583c:	movw	r1, #0
   75840:	cmp	r0, r1
   75844:	beq	7593c <__assert_fail@plt+0x62d84>
   75848:	ldr	r0, [sp, #600]	; 0x258
   7584c:	ldr	r1, [sp, #596]	; 0x254
   75850:	cmp	r0, r1
   75854:	bcs	758d0 <__assert_fail@plt+0x62d18>
   75858:	ldr	r0, [sp, #596]	; 0x254
   7585c:	ldr	r1, [sp, #600]	; 0x258
   75860:	sub	r0, r0, r1
   75864:	str	r0, [sp, #588]	; 0x24c
   75868:	ldr	r0, [fp, #-76]	; 0xffffffb4
   7586c:	cmp	r0, #48	; 0x30
   75870:	beq	75880 <__assert_fail@plt+0x62cc8>
   75874:	ldr	r0, [fp, #-76]	; 0xffffffb4
   75878:	cmp	r0, #43	; 0x2b
   7587c:	bne	758a8 <__assert_fail@plt+0x62cf0>
   75880:	ldr	r0, [fp, #-68]	; 0xffffffbc
   75884:	ldr	r2, [sp, #588]	; 0x24c
   75888:	movw	r1, #48	; 0x30
   7588c:	and	r1, r1, #255	; 0xff
   75890:	bl	12900 <memset@plt>
   75894:	ldr	r0, [sp, #588]	; 0x24c
   75898:	ldr	r1, [fp, #-68]	; 0xffffffbc
   7589c:	add	r0, r1, r0
   758a0:	str	r0, [fp, #-68]	; 0xffffffbc
   758a4:	b	758cc <__assert_fail@plt+0x62d14>
   758a8:	ldr	r0, [fp, #-68]	; 0xffffffbc
   758ac:	ldr	r2, [sp, #588]	; 0x24c
   758b0:	movw	r1, #32
   758b4:	and	r1, r1, #255	; 0xff
   758b8:	bl	12900 <memset@plt>
   758bc:	ldr	r0, [sp, #588]	; 0x24c
   758c0:	ldr	r1, [fp, #-68]	; 0xffffffbc
   758c4:	add	r0, r1, r0
   758c8:	str	r0, [fp, #-68]	; 0xffffffbc
   758cc:	b	758d0 <__assert_fail@plt+0x62d18>
   758d0:	ldrb	r0, [fp, #-123]	; 0xffffff85
   758d4:	tst	r0, #1
   758d8:	beq	758f4 <__assert_fail@plt+0x62d3c>
   758dc:	ldr	r0, [fp, #-68]	; 0xffffffbc
   758e0:	ldr	r1, [fp, #-108]	; 0xffffff94
   758e4:	ldr	r2, [sp, #600]	; 0x258
   758e8:	bl	77078 <__assert_fail@plt+0x644c0>
   758ec:	str	r0, [sp, #176]	; 0xb0
   758f0:	b	7592c <__assert_fail@plt+0x62d74>
   758f4:	ldrb	r0, [fp, #-124]	; 0xffffff84
   758f8:	tst	r0, #1
   758fc:	beq	75918 <__assert_fail@plt+0x62d60>
   75900:	ldr	r0, [fp, #-68]	; 0xffffffbc
   75904:	ldr	r1, [fp, #-108]	; 0xffffff94
   75908:	ldr	r2, [sp, #600]	; 0x258
   7590c:	bl	770dc <__assert_fail@plt+0x64524>
   75910:	str	r0, [sp, #172]	; 0xac
   75914:	b	75928 <__assert_fail@plt+0x62d70>
   75918:	ldr	r0, [fp, #-68]	; 0xffffffbc
   7591c:	ldr	r1, [fp, #-108]	; 0xffffff94
   75920:	ldr	r2, [sp, #600]	; 0x258
   75924:	bl	125c4 <memcpy@plt>
   75928:	b	7592c <__assert_fail@plt+0x62d74>
   7592c:	ldr	r0, [sp, #600]	; 0x258
   75930:	ldr	r1, [fp, #-68]	; 0xffffffbc
   75934:	add	r0, r1, r0
   75938:	str	r0, [fp, #-68]	; 0xffffffbc
   7593c:	ldr	r0, [sp, #592]	; 0x250
   75940:	ldr	r1, [fp, #-64]	; 0xffffffc0
   75944:	add	r0, r1, r0
   75948:	str	r0, [fp, #-64]	; 0xffffffc0
   7594c:	b	77008 <__assert_fail@plt+0x64450>
   75950:	ldr	r0, [fp, #-80]	; 0xffffffb0
   75954:	cmp	r0, #0
   75958:	beq	75960 <__assert_fail@plt+0x62da8>
   7595c:	b	76e48 <__assert_fail@plt+0x64290>
   75960:	ldr	r0, [fp, #-76]	; 0xffffffb4
   75964:	cmp	r0, #0
   75968:	bne	7598c <__assert_fail@plt+0x62dd4>
   7596c:	ldr	r0, [fp, #16]
   75970:	cmp	r0, #0
   75974:	bge	7598c <__assert_fail@plt+0x62dd4>
   75978:	movw	r0, #43	; 0x2b
   7597c:	str	r0, [fp, #-76]	; 0xffffffb4
   75980:	movw	r0, #4
   75984:	str	r0, [fp, #-140]	; 0xffffff74
   75988:	b	759b0 <__assert_fail@plt+0x62df8>
   7598c:	ldr	r0, [fp, #16]
   75990:	sub	r0, r0, #6
   75994:	str	r0, [fp, #-140]	; 0xffffff74
   75998:	ldr	r0, [fp, #-140]	; 0xffffff74
   7599c:	cmp	r0, #0
   759a0:	bge	759ac <__assert_fail@plt+0x62df4>
   759a4:	movw	r0, #0
   759a8:	str	r0, [fp, #-140]	; 0xffffff74
   759ac:	b	759b0 <__assert_fail@plt+0x62df8>
   759b0:	movw	r0, #59633	; 0xe8f1
   759b4:	movt	r0, #7
   759b8:	str	r0, [fp, #-104]	; 0xffffff98
   759bc:	b	74d08 <__assert_fail@plt+0x62150>
   759c0:	ldr	r0, [fp, #-80]	; 0xffffffb0
   759c4:	cmp	r0, #69	; 0x45
   759c8:	bne	759d0 <__assert_fail@plt+0x62e18>
   759cc:	b	76e48 <__assert_fail@plt+0x64290>
   759d0:	b	759d4 <__assert_fail@plt+0x62e1c>
   759d4:	movw	r0, #2
   759d8:	str	r0, [fp, #-84]	; 0xffffffac
   759dc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   759e0:	ldr	r0, [r0, #8]
   759e4:	str	r0, [fp, #-88]	; 0xffffffa8
   759e8:	b	753ac <__assert_fail@plt+0x627f4>
   759ec:	ldr	r0, [fp, #-80]	; 0xffffffb0
   759f0:	cmp	r0, #69	; 0x45
   759f4:	bne	759fc <__assert_fail@plt+0x62e44>
   759f8:	b	76e48 <__assert_fail@plt+0x64290>
   759fc:	b	75a00 <__assert_fail@plt+0x62e48>
   75a00:	movw	r0, #2
   75a04:	str	r0, [fp, #-84]	; 0xffffffac
   75a08:	ldr	r0, [fp, #-56]	; 0xffffffc8
   75a0c:	str	r0, [fp, #-88]	; 0xffffffa8
   75a10:	b	753ac <__assert_fail@plt+0x627f4>
   75a14:	ldr	r0, [fp, #-80]	; 0xffffffb0
   75a18:	cmp	r0, #69	; 0x45
   75a1c:	bne	75a24 <__assert_fail@plt+0x62e6c>
   75a20:	b	76e48 <__assert_fail@plt+0x64290>
   75a24:	b	75a28 <__assert_fail@plt+0x62e70>
   75a28:	movw	r0, #2
   75a2c:	str	r0, [fp, #-84]	; 0xffffffac
   75a30:	ldr	r0, [fp, #-44]	; 0xffffffd4
   75a34:	ldr	r0, [r0, #8]
   75a38:	str	r0, [fp, #-88]	; 0xffffffa8
   75a3c:	b	75394 <__assert_fail@plt+0x627dc>
   75a40:	ldr	r0, [fp, #-80]	; 0xffffffb0
   75a44:	cmp	r0, #69	; 0x45
   75a48:	bne	75a50 <__assert_fail@plt+0x62e98>
   75a4c:	b	76e48 <__assert_fail@plt+0x64290>
   75a50:	b	75a54 <__assert_fail@plt+0x62e9c>
   75a54:	movw	r0, #2
   75a58:	str	r0, [fp, #-84]	; 0xffffffac
   75a5c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   75a60:	str	r0, [fp, #-88]	; 0xffffffa8
   75a64:	b	75394 <__assert_fail@plt+0x627dc>
   75a68:	ldr	r0, [fp, #-80]	; 0xffffffb0
   75a6c:	cmp	r0, #69	; 0x45
   75a70:	bne	75a78 <__assert_fail@plt+0x62ec0>
   75a74:	b	76e48 <__assert_fail@plt+0x64290>
   75a78:	b	75a7c <__assert_fail@plt+0x62ec4>
   75a7c:	movw	r0, #3
   75a80:	str	r0, [fp, #-84]	; 0xffffffac
   75a84:	ldr	r0, [fp, #-44]	; 0xffffffd4
   75a88:	ldr	r0, [r0, #28]
   75a8c:	cmn	r0, #1
   75a90:	movw	r0, #0
   75a94:	movlt	r0, #1
   75a98:	and	r0, r0, #1
   75a9c:	strb	r0, [fp, #-93]	; 0xffffffa3
   75aa0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   75aa4:	ldr	r0, [r0, #28]
   75aa8:	add	r0, r0, #1
   75aac:	str	r0, [fp, #-92]	; 0xffffffa4
   75ab0:	b	753cc <__assert_fail@plt+0x62814>
   75ab4:	ldr	r0, [fp, #-80]	; 0xffffffb0
   75ab8:	cmp	r0, #69	; 0x45
   75abc:	bne	75ac4 <__assert_fail@plt+0x62f0c>
   75ac0:	b	76e48 <__assert_fail@plt+0x64290>
   75ac4:	b	75ac8 <__assert_fail@plt+0x62f10>
   75ac8:	movw	r0, #2
   75acc:	str	r0, [fp, #-84]	; 0xffffffac
   75ad0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   75ad4:	ldr	r0, [r0, #4]
   75ad8:	str	r0, [fp, #-88]	; 0xffffffa8
   75adc:	b	753ac <__assert_fail@plt+0x627f4>
   75ae0:	ldr	r0, [fp, #-80]	; 0xffffffb0
   75ae4:	cmp	r0, #69	; 0x45
   75ae8:	bne	75af0 <__assert_fail@plt+0x62f38>
   75aec:	b	76e48 <__assert_fail@plt+0x64290>
   75af0:	b	75af4 <__assert_fail@plt+0x62f3c>
   75af4:	movw	r0, #2
   75af8:	str	r0, [fp, #-84]	; 0xffffffac
   75afc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   75b00:	ldr	r0, [r0, #16]
   75b04:	cmn	r0, #1
   75b08:	movw	r0, #0
   75b0c:	movlt	r0, #1
   75b10:	and	r0, r0, #1
   75b14:	strb	r0, [fp, #-93]	; 0xffffffa3
   75b18:	ldr	r0, [fp, #-44]	; 0xffffffd4
   75b1c:	ldr	r0, [r0, #16]
   75b20:	add	r0, r0, #1
   75b24:	str	r0, [fp, #-92]	; 0xffffffa4
   75b28:	b	753cc <__assert_fail@plt+0x62814>
   75b2c:	ldr	r0, [fp, #-80]	; 0xffffffb0
   75b30:	cmp	r0, #69	; 0x45
   75b34:	bne	75b3c <__assert_fail@plt+0x62f84>
   75b38:	b	76e48 <__assert_fail@plt+0x64290>
   75b3c:	ldr	r0, [fp, #28]
   75b40:	str	r0, [sp, #584]	; 0x248
   75b44:	movw	r0, #9
   75b48:	str	r0, [sp, #580]	; 0x244
   75b4c:	ldr	r0, [fp, #16]
   75b50:	cmp	r0, #0
   75b54:	bgt	75b60 <__assert_fail@plt+0x62fa8>
   75b58:	ldr	r0, [sp, #580]	; 0x244
   75b5c:	str	r0, [fp, #16]
   75b60:	ldr	r0, [sp, #580]	; 0x244
   75b64:	str	r0, [sp, #576]	; 0x240
   75b68:	ldr	r0, [fp, #16]
   75b6c:	ldr	r1, [sp, #576]	; 0x240
   75b70:	cmp	r0, r1
   75b74:	movw	r0, #1
   75b78:	str	r0, [sp, #168]	; 0xa8
   75b7c:	blt	75bd0 <__assert_fail@plt+0x63018>
   75b80:	ldr	r0, [sp, #576]	; 0x240
   75b84:	movw	r1, #1
   75b88:	cmp	r1, r0
   75b8c:	movw	r0, #0
   75b90:	str	r0, [sp, #164]	; 0xa4
   75b94:	bge	75bc8 <__assert_fail@plt+0x63010>
   75b98:	ldr	r0, [sp, #584]	; 0x248
   75b9c:	movw	r1, #26215	; 0x6667
   75ba0:	movt	r1, #26214	; 0x6666
   75ba4:	smmul	r1, r0, r1
   75ba8:	asr	r2, r1, #2
   75bac:	add	r1, r2, r1, lsr #31
   75bb0:	add	r1, r1, r1, lsl #2
   75bb4:	sub	r0, r0, r1, lsl #1
   75bb8:	cmp	r0, #0
   75bbc:	movw	r0, #0
   75bc0:	moveq	r0, #1
   75bc4:	str	r0, [sp, #164]	; 0xa4
   75bc8:	ldr	r0, [sp, #164]	; 0xa4
   75bcc:	str	r0, [sp, #168]	; 0xa8
   75bd0:	ldr	r0, [sp, #168]	; 0xa8
   75bd4:	tst	r0, #1
   75bd8:	beq	75c00 <__assert_fail@plt+0x63048>
   75bdc:	ldr	r0, [sp, #576]	; 0x240
   75be0:	mvn	r1, #0
   75be4:	add	r0, r0, r1
   75be8:	str	r0, [sp, #576]	; 0x240
   75bec:	ldr	r0, [sp, #584]	; 0x248
   75bf0:	movw	r1, #10
   75bf4:	sdiv	r0, r0, r1
   75bf8:	str	r0, [sp, #584]	; 0x248
   75bfc:	b	75b68 <__assert_fail@plt+0x62fb0>
   75c00:	ldr	r0, [sp, #576]	; 0x240
   75c04:	str	r0, [sp, #572]	; 0x23c
   75c08:	ldr	r0, [sp, #572]	; 0x23c
   75c0c:	movw	r1, #0
   75c10:	cmp	r1, r0
   75c14:	bge	75c74 <__assert_fail@plt+0x630bc>
   75c18:	ldr	r0, [sp, #584]	; 0x248
   75c1c:	movw	r1, #26215	; 0x6667
   75c20:	movt	r1, #26214	; 0x6666
   75c24:	smmul	r1, r0, r1
   75c28:	asr	r2, r1, #2
   75c2c:	add	r1, r2, r1, lsr #31
   75c30:	add	r1, r1, r1, lsl #2
   75c34:	sub	r0, r0, r1, lsl #1
   75c38:	add	r0, r0, #48	; 0x30
   75c3c:	ldr	r1, [sp, #572]	; 0x23c
   75c40:	sub	r1, r1, #1
   75c44:	sub	r2, fp, #122	; 0x7a
   75c48:	add	r1, r2, r1
   75c4c:	strb	r0, [r1]
   75c50:	ldr	r0, [sp, #584]	; 0x248
   75c54:	movw	r1, #10
   75c58:	sdiv	r0, r0, r1
   75c5c:	str	r0, [sp, #584]	; 0x248
   75c60:	ldr	r0, [sp, #572]	; 0x23c
   75c64:	mvn	r1, #0
   75c68:	add	r0, r0, r1
   75c6c:	str	r0, [sp, #572]	; 0x23c
   75c70:	b	75c08 <__assert_fail@plt+0x63050>
   75c74:	ldr	r0, [fp, #-76]	; 0xffffffb4
   75c78:	cmp	r0, #0
   75c7c:	bne	75c88 <__assert_fail@plt+0x630d0>
   75c80:	movw	r0, #48	; 0x30
   75c84:	str	r0, [fp, #-76]	; 0xffffffb4
   75c88:	b	75c8c <__assert_fail@plt+0x630d4>
   75c8c:	ldr	r0, [sp, #576]	; 0x240
   75c90:	str	r0, [sp, #568]	; 0x238
   75c94:	ldr	r0, [fp, #-76]	; 0xffffffb4
   75c98:	cmp	r0, #45	; 0x2d
   75c9c:	movw	r0, #1
   75ca0:	str	r0, [sp, #160]	; 0xa0
   75ca4:	beq	75cb4 <__assert_fail@plt+0x630fc>
   75ca8:	movw	r0, #0
   75cac:	str	r0, [sp, #160]	; 0xa0
   75cb0:	b	75cb4 <__assert_fail@plt+0x630fc>
   75cb4:	ldr	r0, [sp, #160]	; 0xa0
   75cb8:	tst	r0, #1
   75cbc:	movw	r0, #0
   75cc0:	moveq	r0, #0
   75cc4:	str	r0, [sp, #564]	; 0x234
   75cc8:	ldr	r0, [sp, #568]	; 0x238
   75ccc:	ldr	r1, [sp, #564]	; 0x234
   75cd0:	cmp	r0, r1
   75cd4:	bcs	75ce4 <__assert_fail@plt+0x6312c>
   75cd8:	ldr	r0, [sp, #564]	; 0x234
   75cdc:	str	r0, [sp, #156]	; 0x9c
   75ce0:	b	75cec <__assert_fail@plt+0x63134>
   75ce4:	ldr	r0, [sp, #568]	; 0x238
   75ce8:	str	r0, [sp, #156]	; 0x9c
   75cec:	ldr	r0, [sp, #156]	; 0x9c
   75cf0:	str	r0, [sp, #560]	; 0x230
   75cf4:	ldr	r0, [sp, #560]	; 0x230
   75cf8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   75cfc:	ldr	r2, [fp, #-64]	; 0xffffffc0
   75d00:	sub	r1, r1, r2
   75d04:	cmp	r0, r1
   75d08:	bcc	75d24 <__assert_fail@plt+0x6316c>
   75d0c:	bl	128d0 <__errno_location@plt>
   75d10:	movw	lr, #34	; 0x22
   75d14:	str	lr, [r0]
   75d18:	movw	r0, #0
   75d1c:	str	r0, [fp, #-28]	; 0xffffffe4
   75d20:	b	77068 <__assert_fail@plt+0x644b0>
   75d24:	ldr	r0, [fp, #-68]	; 0xffffffbc
   75d28:	movw	r1, #0
   75d2c:	cmp	r0, r1
   75d30:	beq	75e28 <__assert_fail@plt+0x63270>
   75d34:	ldr	r0, [sp, #568]	; 0x238
   75d38:	ldr	r1, [sp, #564]	; 0x234
   75d3c:	cmp	r0, r1
   75d40:	bcs	75dbc <__assert_fail@plt+0x63204>
   75d44:	ldr	r0, [sp, #564]	; 0x234
   75d48:	ldr	r1, [sp, #568]	; 0x238
   75d4c:	sub	r0, r0, r1
   75d50:	str	r0, [sp, #556]	; 0x22c
   75d54:	ldr	r0, [fp, #-76]	; 0xffffffb4
   75d58:	cmp	r0, #48	; 0x30
   75d5c:	beq	75d6c <__assert_fail@plt+0x631b4>
   75d60:	ldr	r0, [fp, #-76]	; 0xffffffb4
   75d64:	cmp	r0, #43	; 0x2b
   75d68:	bne	75d94 <__assert_fail@plt+0x631dc>
   75d6c:	ldr	r0, [fp, #-68]	; 0xffffffbc
   75d70:	ldr	r2, [sp, #556]	; 0x22c
   75d74:	movw	r1, #48	; 0x30
   75d78:	and	r1, r1, #255	; 0xff
   75d7c:	bl	12900 <memset@plt>
   75d80:	ldr	r0, [sp, #556]	; 0x22c
   75d84:	ldr	r1, [fp, #-68]	; 0xffffffbc
   75d88:	add	r0, r1, r0
   75d8c:	str	r0, [fp, #-68]	; 0xffffffbc
   75d90:	b	75db8 <__assert_fail@plt+0x63200>
   75d94:	ldr	r0, [fp, #-68]	; 0xffffffbc
   75d98:	ldr	r2, [sp, #556]	; 0x22c
   75d9c:	movw	r1, #32
   75da0:	and	r1, r1, #255	; 0xff
   75da4:	bl	12900 <memset@plt>
   75da8:	ldr	r0, [sp, #556]	; 0x22c
   75dac:	ldr	r1, [fp, #-68]	; 0xffffffbc
   75db0:	add	r0, r1, r0
   75db4:	str	r0, [fp, #-68]	; 0xffffffbc
   75db8:	b	75dbc <__assert_fail@plt+0x63204>
   75dbc:	ldrb	r0, [fp, #-123]	; 0xffffff85
   75dc0:	tst	r0, #1
   75dc4:	beq	75de0 <__assert_fail@plt+0x63228>
   75dc8:	sub	r1, fp, #122	; 0x7a
   75dcc:	ldr	r0, [fp, #-68]	; 0xffffffbc
   75dd0:	ldr	r2, [sp, #568]	; 0x238
   75dd4:	bl	77078 <__assert_fail@plt+0x644c0>
   75dd8:	str	r0, [sp, #152]	; 0x98
   75ddc:	b	75e18 <__assert_fail@plt+0x63260>
   75de0:	ldrb	r0, [fp, #-124]	; 0xffffff84
   75de4:	tst	r0, #1
   75de8:	beq	75e04 <__assert_fail@plt+0x6324c>
   75dec:	sub	r1, fp, #122	; 0x7a
   75df0:	ldr	r0, [fp, #-68]	; 0xffffffbc
   75df4:	ldr	r2, [sp, #568]	; 0x238
   75df8:	bl	770dc <__assert_fail@plt+0x64524>
   75dfc:	str	r0, [sp, #148]	; 0x94
   75e00:	b	75e14 <__assert_fail@plt+0x6325c>
   75e04:	sub	r1, fp, #122	; 0x7a
   75e08:	ldr	r0, [fp, #-68]	; 0xffffffbc
   75e0c:	ldr	r2, [sp, #568]	; 0x238
   75e10:	bl	125c4 <memcpy@plt>
   75e14:	b	75e18 <__assert_fail@plt+0x63260>
   75e18:	ldr	r0, [sp, #568]	; 0x238
   75e1c:	ldr	r1, [fp, #-68]	; 0xffffffbc
   75e20:	add	r0, r1, r0
   75e24:	str	r0, [fp, #-68]	; 0xffffffbc
   75e28:	ldr	r0, [sp, #560]	; 0x230
   75e2c:	ldr	r1, [fp, #-64]	; 0xffffffc0
   75e30:	add	r0, r1, r0
   75e34:	str	r0, [fp, #-64]	; 0xffffffc0
   75e38:	b	75e3c <__assert_fail@plt+0x63284>
   75e3c:	movw	r0, #0
   75e40:	str	r0, [sp, #552]	; 0x228
   75e44:	ldr	r0, [fp, #-76]	; 0xffffffb4
   75e48:	cmp	r0, #45	; 0x2d
   75e4c:	beq	75e64 <__assert_fail@plt+0x632ac>
   75e50:	ldr	r0, [fp, #16]
   75e54:	ldr	r1, [sp, #576]	; 0x240
   75e58:	sub	r0, r0, r1
   75e5c:	cmp	r0, #0
   75e60:	bge	75e70 <__assert_fail@plt+0x632b8>
   75e64:	movw	r0, #0
   75e68:	str	r0, [sp, #144]	; 0x90
   75e6c:	b	75e80 <__assert_fail@plt+0x632c8>
   75e70:	ldr	r0, [fp, #16]
   75e74:	ldr	r1, [sp, #576]	; 0x240
   75e78:	sub	r0, r0, r1
   75e7c:	str	r0, [sp, #144]	; 0x90
   75e80:	ldr	r0, [sp, #144]	; 0x90
   75e84:	str	r0, [sp, #548]	; 0x224
   75e88:	ldr	r0, [sp, #552]	; 0x228
   75e8c:	ldr	r1, [sp, #548]	; 0x224
   75e90:	cmp	r0, r1
   75e94:	bcs	75ea4 <__assert_fail@plt+0x632ec>
   75e98:	ldr	r0, [sp, #548]	; 0x224
   75e9c:	str	r0, [sp, #140]	; 0x8c
   75ea0:	b	75eac <__assert_fail@plt+0x632f4>
   75ea4:	ldr	r0, [sp, #552]	; 0x228
   75ea8:	str	r0, [sp, #140]	; 0x8c
   75eac:	ldr	r0, [sp, #140]	; 0x8c
   75eb0:	str	r0, [sp, #544]	; 0x220
   75eb4:	ldr	r0, [sp, #544]	; 0x220
   75eb8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   75ebc:	ldr	r2, [fp, #-64]	; 0xffffffc0
   75ec0:	sub	r1, r1, r2
   75ec4:	cmp	r0, r1
   75ec8:	bcc	75ee4 <__assert_fail@plt+0x6332c>
   75ecc:	bl	128d0 <__errno_location@plt>
   75ed0:	movw	lr, #34	; 0x22
   75ed4:	str	lr, [r0]
   75ed8:	movw	r0, #0
   75edc:	str	r0, [fp, #-28]	; 0xffffffe4
   75ee0:	b	77068 <__assert_fail@plt+0x644b0>
   75ee4:	ldr	r0, [fp, #-68]	; 0xffffffbc
   75ee8:	movw	r1, #0
   75eec:	cmp	r0, r1
   75ef0:	beq	75f8c <__assert_fail@plt+0x633d4>
   75ef4:	ldr	r0, [sp, #552]	; 0x228
   75ef8:	ldr	r1, [sp, #548]	; 0x224
   75efc:	cmp	r0, r1
   75f00:	bcs	75f7c <__assert_fail@plt+0x633c4>
   75f04:	ldr	r0, [sp, #548]	; 0x224
   75f08:	ldr	r1, [sp, #552]	; 0x228
   75f0c:	sub	r0, r0, r1
   75f10:	str	r0, [sp, #540]	; 0x21c
   75f14:	ldr	r0, [fp, #-76]	; 0xffffffb4
   75f18:	cmp	r0, #48	; 0x30
   75f1c:	beq	75f2c <__assert_fail@plt+0x63374>
   75f20:	ldr	r0, [fp, #-76]	; 0xffffffb4
   75f24:	cmp	r0, #43	; 0x2b
   75f28:	bne	75f54 <__assert_fail@plt+0x6339c>
   75f2c:	ldr	r0, [fp, #-68]	; 0xffffffbc
   75f30:	ldr	r2, [sp, #540]	; 0x21c
   75f34:	movw	r1, #48	; 0x30
   75f38:	and	r1, r1, #255	; 0xff
   75f3c:	bl	12900 <memset@plt>
   75f40:	ldr	r0, [sp, #540]	; 0x21c
   75f44:	ldr	r1, [fp, #-68]	; 0xffffffbc
   75f48:	add	r0, r1, r0
   75f4c:	str	r0, [fp, #-68]	; 0xffffffbc
   75f50:	b	75f78 <__assert_fail@plt+0x633c0>
   75f54:	ldr	r0, [fp, #-68]	; 0xffffffbc
   75f58:	ldr	r2, [sp, #540]	; 0x21c
   75f5c:	movw	r1, #32
   75f60:	and	r1, r1, #255	; 0xff
   75f64:	bl	12900 <memset@plt>
   75f68:	ldr	r0, [sp, #540]	; 0x21c
   75f6c:	ldr	r1, [fp, #-68]	; 0xffffffbc
   75f70:	add	r0, r1, r0
   75f74:	str	r0, [fp, #-68]	; 0xffffffbc
   75f78:	b	75f7c <__assert_fail@plt+0x633c4>
   75f7c:	ldr	r0, [sp, #552]	; 0x228
   75f80:	ldr	r1, [fp, #-68]	; 0xffffffbc
   75f84:	add	r0, r1, r0
   75f88:	str	r0, [fp, #-68]	; 0xffffffbc
   75f8c:	ldr	r0, [sp, #544]	; 0x220
   75f90:	ldr	r1, [fp, #-64]	; 0xffffffc0
   75f94:	add	r0, r1, r0
   75f98:	str	r0, [fp, #-64]	; 0xffffffc0
   75f9c:	b	77008 <__assert_fail@plt+0x64450>
   75fa0:	b	75fa4 <__assert_fail@plt+0x633ec>
   75fa4:	movw	r0, #1
   75fa8:	str	r0, [sp, #536]	; 0x218
   75fac:	ldr	r0, [fp, #-76]	; 0xffffffb4
   75fb0:	cmp	r0, #45	; 0x2d
   75fb4:	beq	75fc4 <__assert_fail@plt+0x6340c>
   75fb8:	ldr	r0, [fp, #16]
   75fbc:	cmp	r0, #0
   75fc0:	bge	75fd0 <__assert_fail@plt+0x63418>
   75fc4:	movw	r0, #0
   75fc8:	str	r0, [sp, #136]	; 0x88
   75fcc:	b	75fd8 <__assert_fail@plt+0x63420>
   75fd0:	ldr	r0, [fp, #16]
   75fd4:	str	r0, [sp, #136]	; 0x88
   75fd8:	ldr	r0, [sp, #136]	; 0x88
   75fdc:	str	r0, [sp, #532]	; 0x214
   75fe0:	ldr	r0, [sp, #536]	; 0x218
   75fe4:	ldr	r1, [sp, #532]	; 0x214
   75fe8:	cmp	r0, r1
   75fec:	bcs	75ffc <__assert_fail@plt+0x63444>
   75ff0:	ldr	r0, [sp, #532]	; 0x214
   75ff4:	str	r0, [sp, #132]	; 0x84
   75ff8:	b	76004 <__assert_fail@plt+0x6344c>
   75ffc:	ldr	r0, [sp, #536]	; 0x218
   76000:	str	r0, [sp, #132]	; 0x84
   76004:	ldr	r0, [sp, #132]	; 0x84
   76008:	str	r0, [sp, #528]	; 0x210
   7600c:	ldr	r0, [sp, #528]	; 0x210
   76010:	ldr	r1, [fp, #-36]	; 0xffffffdc
   76014:	ldr	r2, [fp, #-64]	; 0xffffffc0
   76018:	sub	r1, r1, r2
   7601c:	cmp	r0, r1
   76020:	bcc	7603c <__assert_fail@plt+0x63484>
   76024:	bl	128d0 <__errno_location@plt>
   76028:	movw	lr, #34	; 0x22
   7602c:	str	lr, [r0]
   76030:	movw	r0, #0
   76034:	str	r0, [fp, #-28]	; 0xffffffe4
   76038:	b	77068 <__assert_fail@plt+0x644b0>
   7603c:	ldr	r0, [fp, #-68]	; 0xffffffbc
   76040:	movw	r1, #0
   76044:	cmp	r0, r1
   76048:	beq	760f0 <__assert_fail@plt+0x63538>
   7604c:	ldr	r0, [sp, #536]	; 0x218
   76050:	ldr	r1, [sp, #532]	; 0x214
   76054:	cmp	r0, r1
   76058:	bcs	760d4 <__assert_fail@plt+0x6351c>
   7605c:	ldr	r0, [sp, #532]	; 0x214
   76060:	ldr	r1, [sp, #536]	; 0x218
   76064:	sub	r0, r0, r1
   76068:	str	r0, [sp, #524]	; 0x20c
   7606c:	ldr	r0, [fp, #-76]	; 0xffffffb4
   76070:	cmp	r0, #48	; 0x30
   76074:	beq	76084 <__assert_fail@plt+0x634cc>
   76078:	ldr	r0, [fp, #-76]	; 0xffffffb4
   7607c:	cmp	r0, #43	; 0x2b
   76080:	bne	760ac <__assert_fail@plt+0x634f4>
   76084:	ldr	r0, [fp, #-68]	; 0xffffffbc
   76088:	ldr	r2, [sp, #524]	; 0x20c
   7608c:	movw	r1, #48	; 0x30
   76090:	and	r1, r1, #255	; 0xff
   76094:	bl	12900 <memset@plt>
   76098:	ldr	r0, [sp, #524]	; 0x20c
   7609c:	ldr	r1, [fp, #-68]	; 0xffffffbc
   760a0:	add	r0, r1, r0
   760a4:	str	r0, [fp, #-68]	; 0xffffffbc
   760a8:	b	760d0 <__assert_fail@plt+0x63518>
   760ac:	ldr	r0, [fp, #-68]	; 0xffffffbc
   760b0:	ldr	r2, [sp, #524]	; 0x20c
   760b4:	movw	r1, #32
   760b8:	and	r1, r1, #255	; 0xff
   760bc:	bl	12900 <memset@plt>
   760c0:	ldr	r0, [sp, #524]	; 0x20c
   760c4:	ldr	r1, [fp, #-68]	; 0xffffffbc
   760c8:	add	r0, r1, r0
   760cc:	str	r0, [fp, #-68]	; 0xffffffbc
   760d0:	b	760d4 <__assert_fail@plt+0x6351c>
   760d4:	ldr	r0, [fp, #-68]	; 0xffffffbc
   760d8:	movw	r1, #10
   760dc:	strb	r1, [r0]
   760e0:	ldr	r0, [sp, #536]	; 0x218
   760e4:	ldr	r1, [fp, #-68]	; 0xffffffbc
   760e8:	add	r0, r1, r0
   760ec:	str	r0, [fp, #-68]	; 0xffffffbc
   760f0:	ldr	r0, [sp, #528]	; 0x210
   760f4:	ldr	r1, [fp, #-64]	; 0xffffffc0
   760f8:	add	r0, r1, r0
   760fc:	str	r0, [fp, #-64]	; 0xffffffc0
   76100:	b	77008 <__assert_fail@plt+0x64450>
   76104:	movw	r0, #1
   76108:	strb	r0, [fp, #-123]	; 0xffffff85
   7610c:	movw	r0, #112	; 0x70
   76110:	str	r0, [fp, #-136]	; 0xffffff78
   76114:	ldrb	r0, [fp, #-129]	; 0xffffff7f
   76118:	tst	r0, #1
   7611c:	beq	76130 <__assert_fail@plt+0x63578>
   76120:	movw	r0, #0
   76124:	strb	r0, [fp, #-124]	; 0xffffff84
   76128:	movw	r0, #1
   7612c:	strb	r0, [fp, #-123]	; 0xffffff85
   76130:	b	74f20 <__assert_fail@plt+0x62368>
   76134:	b	76138 <__assert_fail@plt+0x63580>
   76138:	movw	r0, #1
   7613c:	str	r0, [fp, #-84]	; 0xffffffac
   76140:	movw	r0, #0
   76144:	strb	r0, [fp, #-93]	; 0xffffffa3
   76148:	ldr	r0, [fp, #-44]	; 0xffffffd4
   7614c:	ldr	r0, [r0, #16]
   76150:	movw	r1, #11
   76154:	mul	r0, r0, r1
   76158:	asr	r0, r0, #5
   7615c:	add	r0, r0, #1
   76160:	str	r0, [fp, #-92]	; 0xffffffa4
   76164:	b	753cc <__assert_fail@plt+0x62814>
   76168:	movw	r0, #49500	; 0xc15c
   7616c:	movt	r0, #7
   76170:	str	r0, [fp, #-104]	; 0xffffff98
   76174:	b	74d00 <__assert_fail@plt+0x62148>
   76178:	b	74f20 <__assert_fail@plt+0x62368>
   7617c:	ldr	r0, [fp, #-80]	; 0xffffffb0
   76180:	cmp	r0, #69	; 0x45
   76184:	bne	7618c <__assert_fail@plt+0x635d4>
   76188:	b	76e48 <__assert_fail@plt+0x64290>
   7618c:	b	76190 <__assert_fail@plt+0x635d8>
   76190:	movw	r0, #2
   76194:	str	r0, [fp, #-84]	; 0xffffffac
   76198:	ldr	r0, [fp, #-44]	; 0xffffffd4
   7619c:	ldr	r0, [r0]
   761a0:	str	r0, [fp, #-88]	; 0xffffffa8
   761a4:	b	753ac <__assert_fail@plt+0x627f4>
   761a8:			; <UNDEFINED> instruction: 0xfffff894
   761ac:	ldr	r0, [fp, #-44]	; 0xffffffd4
   761b0:	add	r1, sp, #480	; 0x1e0
   761b4:	mov	r2, r1
   761b8:	str	r0, [sp, #128]	; 0x80
   761bc:	mov	r0, r2
   761c0:	ldr	r2, [sp, #128]	; 0x80
   761c4:	str	r1, [sp, #124]	; 0x7c
   761c8:	mov	r1, r2
   761cc:	movw	r2, #44	; 0x2c
   761d0:	bl	125c4 <memcpy@plt>
   761d4:	mvn	r0, #0
   761d8:	str	r0, [sp, #508]	; 0x1fc
   761dc:	ldr	r0, [fp, #24]
   761e0:	ldr	r1, [sp, #124]	; 0x7c
   761e4:	bl	70384 <__assert_fail@plt+0x5d7cc>
   761e8:	str	r0, [sp, #476]	; 0x1dc
   761ec:	ldr	r0, [sp, #508]	; 0x1fc
   761f0:	cmp	r0, #0
   761f4:	bge	76210 <__assert_fail@plt+0x63658>
   761f8:	bl	128d0 <__errno_location@plt>
   761fc:	movw	lr, #75	; 0x4b
   76200:	str	lr, [r0]
   76204:	movw	r0, #0
   76208:	str	r0, [fp, #-28]	; 0xffffffe4
   7620c:	b	77068 <__assert_fail@plt+0x644b0>
   76210:	sub	r0, fp, #122	; 0x7a
   76214:	add	r0, r0, #14
   76218:	str	r0, [fp, #-108]	; 0xffffff94
   7621c:	ldr	r0, [sp, #476]	; 0x1dc
   76220:	cmp	r0, #0
   76224:	movw	r0, #0
   76228:	movlt	r0, #1
   7622c:	and	r0, r0, #1
   76230:	strb	r0, [fp, #-93]	; 0xffffffa3
   76234:	ldr	r0, [sp, #476]	; 0x1dc
   76238:	movw	r1, #26215	; 0x6667
   7623c:	movt	r1, #26214	; 0x6666
   76240:	smmul	r1, r0, r1
   76244:	asr	r2, r1, #2
   76248:	add	r1, r2, r1, lsr #31
   7624c:	add	r1, r1, r1, lsl #2
   76250:	sub	r0, r0, r1, lsl #1
   76254:	str	r0, [sp, #472]	; 0x1d8
   76258:	ldr	r0, [sp, #476]	; 0x1dc
   7625c:	movw	r1, #10
   76260:	sdiv	r0, r0, r1
   76264:	str	r0, [sp, #476]	; 0x1dc
   76268:	ldrb	r0, [fp, #-93]	; 0xffffffa3
   7626c:	tst	r0, #1
   76270:	beq	76288 <__assert_fail@plt+0x636d0>
   76274:	ldr	r0, [sp, #472]	; 0x1d8
   76278:	movw	r1, #0
   7627c:	sub	r0, r1, r0
   76280:	str	r0, [sp, #120]	; 0x78
   76284:	b	76290 <__assert_fail@plt+0x636d8>
   76288:	ldr	r0, [sp, #472]	; 0x1d8
   7628c:	str	r0, [sp, #120]	; 0x78
   76290:	ldr	r0, [sp, #120]	; 0x78
   76294:	add	r0, r0, #48	; 0x30
   76298:	ldr	r1, [fp, #-108]	; 0xffffff94
   7629c:	mvn	r2, #0
   762a0:	add	r3, r1, r2
   762a4:	str	r3, [fp, #-108]	; 0xffffff94
   762a8:	add	r1, r1, r2
   762ac:	strb	r0, [r1]
   762b0:	ldr	r0, [sp, #476]	; 0x1dc
   762b4:	cmp	r0, #0
   762b8:	bne	76234 <__assert_fail@plt+0x6367c>
   762bc:	movw	r0, #1
   762c0:	str	r0, [fp, #-84]	; 0xffffffac
   762c4:	movw	r0, #0
   762c8:	strb	r0, [fp, #-94]	; 0xffffffa2
   762cc:	b	754e0 <__assert_fail@plt+0x62928>
   762d0:	ldr	r0, [fp, #-80]	; 0xffffffb0
   762d4:	cmp	r0, #79	; 0x4f
   762d8:	bne	762e0 <__assert_fail@plt+0x63728>
   762dc:	b	76e48 <__assert_fail@plt+0x64290>
   762e0:	b	74f20 <__assert_fail@plt+0x62368>
   762e4:	movw	r0, #57105	; 0xdf11
   762e8:	movt	r0, #7
   762ec:	str	r0, [fp, #-104]	; 0xffffff98
   762f0:	b	74d00 <__assert_fail@plt+0x62148>
   762f4:	b	762f8 <__assert_fail@plt+0x63740>
   762f8:	movw	r0, #1
   762fc:	str	r0, [sp, #468]	; 0x1d4
   76300:	ldr	r0, [fp, #-76]	; 0xffffffb4
   76304:	cmp	r0, #45	; 0x2d
   76308:	beq	76318 <__assert_fail@plt+0x63760>
   7630c:	ldr	r0, [fp, #16]
   76310:	cmp	r0, #0
   76314:	bge	76324 <__assert_fail@plt+0x6376c>
   76318:	movw	r0, #0
   7631c:	str	r0, [sp, #116]	; 0x74
   76320:	b	7632c <__assert_fail@plt+0x63774>
   76324:	ldr	r0, [fp, #16]
   76328:	str	r0, [sp, #116]	; 0x74
   7632c:	ldr	r0, [sp, #116]	; 0x74
   76330:	str	r0, [sp, #464]	; 0x1d0
   76334:	ldr	r0, [sp, #468]	; 0x1d4
   76338:	ldr	r1, [sp, #464]	; 0x1d0
   7633c:	cmp	r0, r1
   76340:	bcs	76350 <__assert_fail@plt+0x63798>
   76344:	ldr	r0, [sp, #464]	; 0x1d0
   76348:	str	r0, [sp, #112]	; 0x70
   7634c:	b	76358 <__assert_fail@plt+0x637a0>
   76350:	ldr	r0, [sp, #468]	; 0x1d4
   76354:	str	r0, [sp, #112]	; 0x70
   76358:	ldr	r0, [sp, #112]	; 0x70
   7635c:	str	r0, [sp, #460]	; 0x1cc
   76360:	ldr	r0, [sp, #460]	; 0x1cc
   76364:	ldr	r1, [fp, #-36]	; 0xffffffdc
   76368:	ldr	r2, [fp, #-64]	; 0xffffffc0
   7636c:	sub	r1, r1, r2
   76370:	cmp	r0, r1
   76374:	bcc	76390 <__assert_fail@plt+0x637d8>
   76378:	bl	128d0 <__errno_location@plt>
   7637c:	movw	lr, #34	; 0x22
   76380:	str	lr, [r0]
   76384:	movw	r0, #0
   76388:	str	r0, [fp, #-28]	; 0xffffffe4
   7638c:	b	77068 <__assert_fail@plt+0x644b0>
   76390:	ldr	r0, [fp, #-68]	; 0xffffffbc
   76394:	movw	r1, #0
   76398:	cmp	r0, r1
   7639c:	beq	76444 <__assert_fail@plt+0x6388c>
   763a0:	ldr	r0, [sp, #468]	; 0x1d4
   763a4:	ldr	r1, [sp, #464]	; 0x1d0
   763a8:	cmp	r0, r1
   763ac:	bcs	76428 <__assert_fail@plt+0x63870>
   763b0:	ldr	r0, [sp, #464]	; 0x1d0
   763b4:	ldr	r1, [sp, #468]	; 0x1d4
   763b8:	sub	r0, r0, r1
   763bc:	str	r0, [sp, #456]	; 0x1c8
   763c0:	ldr	r0, [fp, #-76]	; 0xffffffb4
   763c4:	cmp	r0, #48	; 0x30
   763c8:	beq	763d8 <__assert_fail@plt+0x63820>
   763cc:	ldr	r0, [fp, #-76]	; 0xffffffb4
   763d0:	cmp	r0, #43	; 0x2b
   763d4:	bne	76400 <__assert_fail@plt+0x63848>
   763d8:	ldr	r0, [fp, #-68]	; 0xffffffbc
   763dc:	ldr	r2, [sp, #456]	; 0x1c8
   763e0:	movw	r1, #48	; 0x30
   763e4:	and	r1, r1, #255	; 0xff
   763e8:	bl	12900 <memset@plt>
   763ec:	ldr	r0, [sp, #456]	; 0x1c8
   763f0:	ldr	r1, [fp, #-68]	; 0xffffffbc
   763f4:	add	r0, r1, r0
   763f8:	str	r0, [fp, #-68]	; 0xffffffbc
   763fc:	b	76424 <__assert_fail@plt+0x6386c>
   76400:	ldr	r0, [fp, #-68]	; 0xffffffbc
   76404:	ldr	r2, [sp, #456]	; 0x1c8
   76408:	movw	r1, #32
   7640c:	and	r1, r1, #255	; 0xff
   76410:	bl	12900 <memset@plt>
   76414:	ldr	r0, [sp, #456]	; 0x1c8
   76418:	ldr	r1, [fp, #-68]	; 0xffffffbc
   7641c:	add	r0, r1, r0
   76420:	str	r0, [fp, #-68]	; 0xffffffbc
   76424:	b	76428 <__assert_fail@plt+0x63870>
   76428:	ldr	r0, [fp, #-68]	; 0xffffffbc
   7642c:	movw	r1, #9
   76430:	strb	r1, [r0]
   76434:	ldr	r0, [sp, #468]	; 0x1d4
   76438:	ldr	r1, [fp, #-68]	; 0xffffffbc
   7643c:	add	r0, r1, r0
   76440:	str	r0, [fp, #-68]	; 0xffffffbc
   76444:	ldr	r0, [sp, #460]	; 0x1cc
   76448:	ldr	r1, [fp, #-64]	; 0xffffffc0
   7644c:	add	r0, r1, r0
   76450:	str	r0, [fp, #-64]	; 0xffffffc0
   76454:	b	77008 <__assert_fail@plt+0x64450>
   76458:	b	7645c <__assert_fail@plt+0x638a4>
   7645c:	mov	r0, #1
   76460:	str	r0, [fp, #-84]	; 0xffffffac
   76464:	ldr	r0, [fp, #-44]	; 0xffffffd4
   76468:	ldr	r0, [r0, #24]
   7646c:	add	r0, r0, #6
   76470:	movw	r1, #9363	; 0x2493
   76474:	movt	r1, #37449	; 0x9249
   76478:	smmla	r1, r0, r1, r0
   7647c:	asr	r2, r1, #2
   76480:	add	r1, r2, r1, lsr #31
   76484:	rsb	r1, r1, r1, lsl #3
   76488:	sub	r0, r0, r1
   7648c:	add	r0, r0, #1
   76490:	str	r0, [fp, #-88]	; 0xffffffa8
   76494:	b	753ac <__assert_fail@plt+0x627f4>
   76498:	ldr	r0, [fp, #-80]	; 0xffffffb0
   7649c:	cmp	r0, #69	; 0x45
   764a0:	bne	764a8 <__assert_fail@plt+0x638f0>
   764a4:	b	76e48 <__assert_fail@plt+0x64290>
   764a8:	b	764ac <__assert_fail@plt+0x638f4>
   764ac:	movw	r0, #2
   764b0:	str	r0, [fp, #-84]	; 0xffffffac
   764b4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   764b8:	ldr	r0, [r0, #28]
   764bc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   764c0:	ldr	r1, [r1, #24]
   764c4:	sub	r0, r0, r1
   764c8:	add	r0, r0, #7
   764cc:	movw	r1, #7
   764d0:	sdiv	r0, r0, r1
   764d4:	str	r0, [fp, #-88]	; 0xffffffa8
   764d8:	b	753ac <__assert_fail@plt+0x627f4>
   764dc:	ldr	r0, [fp, #-80]	; 0xffffffb0
   764e0:	cmp	r0, #69	; 0x45
   764e4:	bne	764ec <__assert_fail@plt+0x63934>
   764e8:	b	76e48 <__assert_fail@plt+0x64290>
   764ec:	ldr	r0, [fp, #-44]	; 0xffffffd4
   764f0:	ldr	r0, [r0, #20]
   764f4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   764f8:	ldr	r1, [r1, #20]
   764fc:	cmp	r1, #0
   76500:	movw	r1, #0
   76504:	movlt	r1, #1
   76508:	tst	r1, #1
   7650c:	movw	r1, #300	; 0x12c
   76510:	mvneq	r1, #99	; 0x63
   76514:	add	r0, r0, r1
   76518:	str	r0, [sp, #452]	; 0x1c4
   7651c:	movw	r0, #0
   76520:	str	r0, [sp, #448]	; 0x1c0
   76524:	ldr	r0, [fp, #-44]	; 0xffffffd4
   76528:	ldr	r0, [r0, #28]
   7652c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   76530:	ldr	r1, [r1, #24]
   76534:	bl	77140 <__assert_fail@plt+0x64588>
   76538:	str	r0, [sp, #444]	; 0x1bc
   7653c:	ldr	r0, [sp, #444]	; 0x1bc
   76540:	cmp	r0, #0
   76544:	bge	76620 <__assert_fail@plt+0x63a68>
   76548:	mvn	r0, #0
   7654c:	str	r0, [sp, #448]	; 0x1c0
   76550:	ldr	r0, [fp, #-44]	; 0xffffffd4
   76554:	ldr	r0, [r0, #28]
   76558:	ldr	r1, [sp, #452]	; 0x1c4
   7655c:	sub	r1, r1, #1
   76560:	asr	r2, r1, #31
   76564:	add	r2, r1, r2, lsr #30
   76568:	bic	r2, r2, #3
   7656c:	sub	r1, r1, r2
   76570:	cmp	r1, #0
   76574:	movw	r1, #0
   76578:	str	r0, [sp, #108]	; 0x6c
   7657c:	str	r1, [sp, #104]	; 0x68
   76580:	bne	765f4 <__assert_fail@plt+0x63a3c>
   76584:	ldr	r0, [sp, #452]	; 0x1c4
   76588:	sub	r0, r0, #1
   7658c:	movw	r1, #34079	; 0x851f
   76590:	movt	r1, #20971	; 0x51eb
   76594:	smmul	r1, r0, r1
   76598:	asr	r2, r1, #5
   7659c:	add	r1, r2, r1, lsr #31
   765a0:	mov	r2, #100	; 0x64
   765a4:	mls	r0, r1, r2, r0
   765a8:	cmp	r0, #0
   765ac:	movw	r0, #1
   765b0:	str	r0, [sp, #100]	; 0x64
   765b4:	bne	765ec <__assert_fail@plt+0x63a34>
   765b8:	ldr	r0, [sp, #452]	; 0x1c4
   765bc:	sub	r0, r0, #1
   765c0:	movw	r1, #34079	; 0x851f
   765c4:	movt	r1, #20971	; 0x51eb
   765c8:	smmul	r1, r0, r1
   765cc:	asr	r2, r1, #7
   765d0:	add	r1, r2, r1, lsr #31
   765d4:	mov	r2, #400	; 0x190
   765d8:	mls	r0, r1, r2, r0
   765dc:	cmp	r0, #0
   765e0:	movw	r0, #0
   765e4:	moveq	r0, #1
   765e8:	str	r0, [sp, #100]	; 0x64
   765ec:	ldr	r0, [sp, #100]	; 0x64
   765f0:	str	r0, [sp, #104]	; 0x68
   765f4:	ldr	r0, [sp, #104]	; 0x68
   765f8:	and	r0, r0, #1
   765fc:	movw	r1, #365	; 0x16d
   76600:	add	r0, r0, r1
   76604:	ldr	r1, [sp, #108]	; 0x6c
   76608:	add	r0, r1, r0
   7660c:	ldr	r2, [fp, #-44]	; 0xffffffd4
   76610:	ldr	r1, [r2, #24]
   76614:	bl	77140 <__assert_fail@plt+0x64588>
   76618:	str	r0, [sp, #444]	; 0x1bc
   7661c:	b	76704 <__assert_fail@plt+0x63b4c>
   76620:	ldr	r0, [fp, #-44]	; 0xffffffd4
   76624:	ldr	r0, [r0, #28]
   76628:	ldr	r1, [sp, #452]	; 0x1c4
   7662c:	asr	r2, r1, #31
   76630:	add	r2, r1, r2, lsr #30
   76634:	bic	r2, r2, #3
   76638:	sub	r1, r1, r2
   7663c:	cmp	r1, #0
   76640:	movw	r1, #0
   76644:	str	r0, [sp, #96]	; 0x60
   76648:	str	r1, [sp, #92]	; 0x5c
   7664c:	bne	766b8 <__assert_fail@plt+0x63b00>
   76650:	ldr	r0, [sp, #452]	; 0x1c4
   76654:	movw	r1, #34079	; 0x851f
   76658:	movt	r1, #20971	; 0x51eb
   7665c:	smmul	r1, r0, r1
   76660:	asr	r2, r1, #5
   76664:	add	r1, r2, r1, lsr #31
   76668:	mov	r2, #100	; 0x64
   7666c:	mls	r0, r1, r2, r0
   76670:	cmp	r0, #0
   76674:	movw	r0, #1
   76678:	str	r0, [sp, #88]	; 0x58
   7667c:	bne	766b0 <__assert_fail@plt+0x63af8>
   76680:	ldr	r0, [sp, #452]	; 0x1c4
   76684:	movw	r1, #34079	; 0x851f
   76688:	movt	r1, #20971	; 0x51eb
   7668c:	smmul	r1, r0, r1
   76690:	asr	r2, r1, #7
   76694:	add	r1, r2, r1, lsr #31
   76698:	mov	r2, #400	; 0x190
   7669c:	mls	r0, r1, r2, r0
   766a0:	cmp	r0, #0
   766a4:	movw	r0, #0
   766a8:	moveq	r0, #1
   766ac:	str	r0, [sp, #88]	; 0x58
   766b0:	ldr	r0, [sp, #88]	; 0x58
   766b4:	str	r0, [sp, #92]	; 0x5c
   766b8:	ldr	r0, [sp, #92]	; 0x5c
   766bc:	and	r0, r0, #1
   766c0:	movw	r1, #365	; 0x16d
   766c4:	add	r0, r0, r1
   766c8:	ldr	r1, [sp, #96]	; 0x60
   766cc:	sub	r0, r1, r0
   766d0:	ldr	r2, [fp, #-44]	; 0xffffffd4
   766d4:	ldr	r1, [r2, #24]
   766d8:	bl	77140 <__assert_fail@plt+0x64588>
   766dc:	str	r0, [sp, #440]	; 0x1b8
   766e0:	ldr	r0, [sp, #440]	; 0x1b8
   766e4:	movw	r1, #0
   766e8:	cmp	r1, r0
   766ec:	bgt	76700 <__assert_fail@plt+0x63b48>
   766f0:	movw	r0, #1
   766f4:	str	r0, [sp, #448]	; 0x1c0
   766f8:	ldr	r0, [sp, #440]	; 0x1b8
   766fc:	str	r0, [sp, #444]	; 0x1bc
   76700:	b	76704 <__assert_fail@plt+0x63b4c>
   76704:	ldr	r0, [fp, #-72]	; 0xffffffb8
   76708:	ldrb	r0, [r0]
   7670c:	mov	r1, r0
   76710:	cmp	r0, #71	; 0x47
   76714:	str	r1, [sp, #84]	; 0x54
   76718:	beq	767ec <__assert_fail@plt+0x63c34>
   7671c:	b	76720 <__assert_fail@plt+0x63b68>
   76720:	ldr	r0, [sp, #84]	; 0x54
   76724:	cmp	r0, #103	; 0x67
   76728:	bne	76840 <__assert_fail@plt+0x63c88>
   7672c:	b	76730 <__assert_fail@plt+0x63b78>
   76730:	ldr	r0, [fp, #-44]	; 0xffffffd4
   76734:	ldr	r0, [r0, #20]
   76738:	movw	r1, #34079	; 0x851f
   7673c:	movt	r1, #20971	; 0x51eb
   76740:	smmul	r2, r0, r1
   76744:	asr	r3, r2, #5
   76748:	add	r2, r3, r2, lsr #31
   7674c:	mov	r3, #100	; 0x64
   76750:	mls	r0, r2, r3, r0
   76754:	ldr	r2, [sp, #448]	; 0x1c0
   76758:	add	r0, r0, r2
   7675c:	smmul	r1, r0, r1
   76760:	asr	r2, r1, #5
   76764:	add	r1, r2, r1, lsr #31
   76768:	mls	r0, r1, r3, r0
   7676c:	str	r0, [sp, #436]	; 0x1b4
   76770:	movw	r0, #2
   76774:	str	r0, [fp, #-84]	; 0xffffffac
   76778:	movw	r0, #0
   7677c:	strb	r0, [fp, #-93]	; 0xffffffa3
   76780:	ldr	r0, [sp, #436]	; 0x1b4
   76784:	movw	r1, #0
   76788:	cmp	r1, r0
   7678c:	bgt	7679c <__assert_fail@plt+0x63be4>
   76790:	ldr	r0, [sp, #436]	; 0x1b4
   76794:	str	r0, [sp, #80]	; 0x50
   76798:	b	767e0 <__assert_fail@plt+0x63c28>
   7679c:	ldr	r0, [pc, #2256]	; 77074 <__assert_fail@plt+0x644bc>
   767a0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   767a4:	ldr	r1, [r1, #20]
   767a8:	ldr	r2, [sp, #448]	; 0x1c0
   767ac:	sub	r0, r0, r2
   767b0:	cmp	r1, r0
   767b4:	bge	767cc <__assert_fail@plt+0x63c14>
   767b8:	ldr	r0, [sp, #436]	; 0x1b4
   767bc:	movw	r1, #0
   767c0:	sub	r0, r1, r0
   767c4:	str	r0, [sp, #76]	; 0x4c
   767c8:	b	767d8 <__assert_fail@plt+0x63c20>
   767cc:	ldr	r0, [sp, #436]	; 0x1b4
   767d0:	add	r0, r0, #100	; 0x64
   767d4:	str	r0, [sp, #76]	; 0x4c
   767d8:	ldr	r0, [sp, #76]	; 0x4c
   767dc:	str	r0, [sp, #80]	; 0x50
   767e0:	ldr	r0, [sp, #80]	; 0x50
   767e4:	str	r0, [fp, #-92]	; 0xffffffa4
   767e8:	b	75308 <__assert_fail@plt+0x62750>
   767ec:	b	767f0 <__assert_fail@plt+0x63c38>
   767f0:	ldr	r0, [pc, #2172]	; 77074 <__assert_fail@plt+0x644bc>
   767f4:	movw	r1, #4
   767f8:	str	r1, [fp, #-84]	; 0xffffffac
   767fc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   76800:	ldr	r1, [r1, #20]
   76804:	ldr	r2, [sp, #448]	; 0x1c0
   76808:	sub	r0, r0, r2
   7680c:	cmp	r1, r0
   76810:	movw	r0, #0
   76814:	movlt	r0, #1
   76818:	and	r0, r0, #1
   7681c:	strb	r0, [fp, #-93]	; 0xffffffa3
   76820:	ldr	r0, [fp, #-44]	; 0xffffffd4
   76824:	ldr	r0, [r0, #20]
   76828:	movw	r1, #1900	; 0x76c
   7682c:	add	r0, r0, r1
   76830:	ldr	r1, [sp, #448]	; 0x1c0
   76834:	add	r0, r0, r1
   76838:	str	r0, [fp, #-92]	; 0xffffffa4
   7683c:	b	75308 <__assert_fail@plt+0x62750>
   76840:	b	76844 <__assert_fail@plt+0x63c8c>
   76844:	movw	r0, #2
   76848:	str	r0, [fp, #-84]	; 0xffffffac
   7684c:	ldr	r0, [sp, #444]	; 0x1bc
   76850:	movw	r1, #7
   76854:	sdiv	r0, r0, r1
   76858:	add	r0, r0, #1
   7685c:	str	r0, [fp, #-88]	; 0xffffffa8
   76860:	b	753ac <__assert_fail@plt+0x627f4>
   76864:	ldr	r0, [fp, #-80]	; 0xffffffb0
   76868:	cmp	r0, #69	; 0x45
   7686c:	bne	76874 <__assert_fail@plt+0x63cbc>
   76870:	b	76e48 <__assert_fail@plt+0x64290>
   76874:	b	76878 <__assert_fail@plt+0x63cc0>
   76878:	mov	r0, #2
   7687c:	str	r0, [fp, #-84]	; 0xffffffac
   76880:	ldr	r0, [fp, #-44]	; 0xffffffd4
   76884:	ldr	r1, [r0, #24]
   76888:	ldr	r0, [r0, #28]
   7688c:	add	r1, r1, #6
   76890:	movw	r2, #9363	; 0x2493
   76894:	movt	r2, #37449	; 0x9249
   76898:	smmla	r2, r1, r2, r1
   7689c:	asr	r3, r2, #2
   768a0:	add	r2, r3, r2, lsr #31
   768a4:	rsb	r2, r2, r2, lsl #3
   768a8:	sub	r1, r1, r2
   768ac:	sub	r0, r0, r1
   768b0:	add	r0, r0, #7
   768b4:	movw	r1, #7
   768b8:	sdiv	r0, r0, r1
   768bc:	str	r0, [fp, #-88]	; 0xffffffa8
   768c0:	b	753ac <__assert_fail@plt+0x627f4>
   768c4:	ldr	r0, [fp, #-80]	; 0xffffffb0
   768c8:	cmp	r0, #69	; 0x45
   768cc:	bne	768d4 <__assert_fail@plt+0x63d1c>
   768d0:	b	76e48 <__assert_fail@plt+0x64290>
   768d4:	b	768d8 <__assert_fail@plt+0x63d20>
   768d8:	movw	r0, #1
   768dc:	str	r0, [fp, #-84]	; 0xffffffac
   768e0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   768e4:	ldr	r0, [r0, #24]
   768e8:	str	r0, [fp, #-88]	; 0xffffffa8
   768ec:	b	753ac <__assert_fail@plt+0x627f4>
   768f0:	ldr	r0, [fp, #-80]	; 0xffffffb0
   768f4:	cmp	r0, #69	; 0x45
   768f8:	bne	76900 <__assert_fail@plt+0x63d48>
   768fc:	b	74f20 <__assert_fail@plt+0x62368>
   76900:	ldr	r0, [fp, #-80]	; 0xffffffb0
   76904:	cmp	r0, #79	; 0x4f
   76908:	bne	76910 <__assert_fail@plt+0x63d58>
   7690c:	b	76e48 <__assert_fail@plt+0x64290>
   76910:	b	76914 <__assert_fail@plt+0x63d5c>
   76914:	ldr	r0, [pc, #1880]	; 77074 <__assert_fail@plt+0x644bc>
   76918:	movw	r1, #4
   7691c:	str	r1, [fp, #-84]	; 0xffffffac
   76920:	ldr	r1, [fp, #-44]	; 0xffffffd4
   76924:	ldr	r1, [r1, #20]
   76928:	cmp	r1, r0
   7692c:	movw	r0, #0
   76930:	movlt	r0, #1
   76934:	and	r0, r0, #1
   76938:	strb	r0, [fp, #-93]	; 0xffffffa3
   7693c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   76940:	ldr	r0, [r0, #20]
   76944:	movw	r1, #1900	; 0x76c
   76948:	add	r0, r0, r1
   7694c:	str	r0, [fp, #-92]	; 0xffffffa4
   76950:	b	75308 <__assert_fail@plt+0x62750>
   76954:	ldr	r0, [fp, #-80]	; 0xffffffb0
   76958:	cmp	r0, #69	; 0x45
   7695c:	bne	76964 <__assert_fail@plt+0x63dac>
   76960:	b	74f20 <__assert_fail@plt+0x62368>
   76964:	ldr	r0, [fp, #-44]	; 0xffffffd4
   76968:	ldr	r0, [r0, #20]
   7696c:	movw	r1, #34079	; 0x851f
   76970:	movt	r1, #20971	; 0x51eb
   76974:	smmul	r1, r0, r1
   76978:	asr	r2, r1, #5
   7697c:	add	r1, r2, r1, lsr #31
   76980:	mov	r2, #100	; 0x64
   76984:	mls	r0, r1, r2, r0
   76988:	str	r0, [sp, #432]	; 0x1b0
   7698c:	ldr	r0, [sp, #432]	; 0x1b0
   76990:	cmp	r0, #0
   76994:	bge	769d4 <__assert_fail@plt+0x63e1c>
   76998:	ldr	r0, [pc, #1748]	; 77074 <__assert_fail@plt+0x644bc>
   7699c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   769a0:	ldr	r1, [r1, #20]
   769a4:	cmp	r1, r0
   769a8:	bge	769c0 <__assert_fail@plt+0x63e08>
   769ac:	ldr	r0, [sp, #432]	; 0x1b0
   769b0:	movw	r1, #0
   769b4:	sub	r0, r1, r0
   769b8:	str	r0, [sp, #72]	; 0x48
   769bc:	b	769cc <__assert_fail@plt+0x63e14>
   769c0:	ldr	r0, [sp, #432]	; 0x1b0
   769c4:	add	r0, r0, #100	; 0x64
   769c8:	str	r0, [sp, #72]	; 0x48
   769cc:	ldr	r0, [sp, #72]	; 0x48
   769d0:	str	r0, [sp, #432]	; 0x1b0
   769d4:	b	769d8 <__assert_fail@plt+0x63e20>
   769d8:	movw	r0, #2
   769dc:	str	r0, [fp, #-84]	; 0xffffffac
   769e0:	movw	r0, #0
   769e4:	strb	r0, [fp, #-93]	; 0xffffffa3
   769e8:	ldr	r0, [sp, #432]	; 0x1b0
   769ec:	str	r0, [fp, #-92]	; 0xffffffa4
   769f0:	b	75308 <__assert_fail@plt+0x62750>
   769f4:	ldrb	r0, [fp, #-129]	; 0xffffff7f
   769f8:	tst	r0, #1
   769fc:	beq	76a10 <__assert_fail@plt+0x63e58>
   76a00:	movw	r0, #0
   76a04:	strb	r0, [fp, #-124]	; 0xffffff84
   76a08:	movw	r0, #1
   76a0c:	strb	r0, [fp, #-123]	; 0xffffff85
   76a10:	b	76a14 <__assert_fail@plt+0x63e5c>
   76a14:	ldr	r0, [fp, #-60]	; 0xffffffc4
   76a18:	bl	12888 <strlen@plt>
   76a1c:	str	r0, [sp, #428]	; 0x1ac
   76a20:	ldr	r0, [fp, #-76]	; 0xffffffb4
   76a24:	cmp	r0, #45	; 0x2d
   76a28:	beq	76a38 <__assert_fail@plt+0x63e80>
   76a2c:	ldr	r0, [fp, #16]
   76a30:	cmp	r0, #0
   76a34:	bge	76a44 <__assert_fail@plt+0x63e8c>
   76a38:	movw	r0, #0
   76a3c:	str	r0, [sp, #68]	; 0x44
   76a40:	b	76a4c <__assert_fail@plt+0x63e94>
   76a44:	ldr	r0, [fp, #16]
   76a48:	str	r0, [sp, #68]	; 0x44
   76a4c:	ldr	r0, [sp, #68]	; 0x44
   76a50:	str	r0, [sp, #424]	; 0x1a8
   76a54:	ldr	r0, [sp, #428]	; 0x1ac
   76a58:	ldr	r1, [sp, #424]	; 0x1a8
   76a5c:	cmp	r0, r1
   76a60:	bcs	76a70 <__assert_fail@plt+0x63eb8>
   76a64:	ldr	r0, [sp, #424]	; 0x1a8
   76a68:	str	r0, [sp, #64]	; 0x40
   76a6c:	b	76a78 <__assert_fail@plt+0x63ec0>
   76a70:	ldr	r0, [sp, #428]	; 0x1ac
   76a74:	str	r0, [sp, #64]	; 0x40
   76a78:	ldr	r0, [sp, #64]	; 0x40
   76a7c:	str	r0, [sp, #420]	; 0x1a4
   76a80:	ldr	r0, [sp, #420]	; 0x1a4
   76a84:	ldr	r1, [fp, #-36]	; 0xffffffdc
   76a88:	ldr	r2, [fp, #-64]	; 0xffffffc0
   76a8c:	sub	r1, r1, r2
   76a90:	cmp	r0, r1
   76a94:	bcc	76ab0 <__assert_fail@plt+0x63ef8>
   76a98:	bl	128d0 <__errno_location@plt>
   76a9c:	movw	lr, #34	; 0x22
   76aa0:	str	lr, [r0]
   76aa4:	movw	r0, #0
   76aa8:	str	r0, [fp, #-28]	; 0xffffffe4
   76aac:	b	77068 <__assert_fail@plt+0x644b0>
   76ab0:	ldr	r0, [fp, #-68]	; 0xffffffbc
   76ab4:	movw	r1, #0
   76ab8:	cmp	r0, r1
   76abc:	beq	76bb4 <__assert_fail@plt+0x63ffc>
   76ac0:	ldr	r0, [sp, #428]	; 0x1ac
   76ac4:	ldr	r1, [sp, #424]	; 0x1a8
   76ac8:	cmp	r0, r1
   76acc:	bcs	76b48 <__assert_fail@plt+0x63f90>
   76ad0:	ldr	r0, [sp, #424]	; 0x1a8
   76ad4:	ldr	r1, [sp, #428]	; 0x1ac
   76ad8:	sub	r0, r0, r1
   76adc:	str	r0, [sp, #416]	; 0x1a0
   76ae0:	ldr	r0, [fp, #-76]	; 0xffffffb4
   76ae4:	cmp	r0, #48	; 0x30
   76ae8:	beq	76af8 <__assert_fail@plt+0x63f40>
   76aec:	ldr	r0, [fp, #-76]	; 0xffffffb4
   76af0:	cmp	r0, #43	; 0x2b
   76af4:	bne	76b20 <__assert_fail@plt+0x63f68>
   76af8:	ldr	r0, [fp, #-68]	; 0xffffffbc
   76afc:	ldr	r2, [sp, #416]	; 0x1a0
   76b00:	movw	r1, #48	; 0x30
   76b04:	and	r1, r1, #255	; 0xff
   76b08:	bl	12900 <memset@plt>
   76b0c:	ldr	r0, [sp, #416]	; 0x1a0
   76b10:	ldr	r1, [fp, #-68]	; 0xffffffbc
   76b14:	add	r0, r1, r0
   76b18:	str	r0, [fp, #-68]	; 0xffffffbc
   76b1c:	b	76b44 <__assert_fail@plt+0x63f8c>
   76b20:	ldr	r0, [fp, #-68]	; 0xffffffbc
   76b24:	ldr	r2, [sp, #416]	; 0x1a0
   76b28:	movw	r1, #32
   76b2c:	and	r1, r1, #255	; 0xff
   76b30:	bl	12900 <memset@plt>
   76b34:	ldr	r0, [sp, #416]	; 0x1a0
   76b38:	ldr	r1, [fp, #-68]	; 0xffffffbc
   76b3c:	add	r0, r1, r0
   76b40:	str	r0, [fp, #-68]	; 0xffffffbc
   76b44:	b	76b48 <__assert_fail@plt+0x63f90>
   76b48:	ldrb	r0, [fp, #-123]	; 0xffffff85
   76b4c:	tst	r0, #1
   76b50:	beq	76b6c <__assert_fail@plt+0x63fb4>
   76b54:	ldr	r0, [fp, #-68]	; 0xffffffbc
   76b58:	ldr	r1, [fp, #-60]	; 0xffffffc4
   76b5c:	ldr	r2, [sp, #428]	; 0x1ac
   76b60:	bl	77078 <__assert_fail@plt+0x644c0>
   76b64:	str	r0, [sp, #60]	; 0x3c
   76b68:	b	76ba4 <__assert_fail@plt+0x63fec>
   76b6c:	ldrb	r0, [fp, #-124]	; 0xffffff84
   76b70:	tst	r0, #1
   76b74:	beq	76b90 <__assert_fail@plt+0x63fd8>
   76b78:	ldr	r0, [fp, #-68]	; 0xffffffbc
   76b7c:	ldr	r1, [fp, #-60]	; 0xffffffc4
   76b80:	ldr	r2, [sp, #428]	; 0x1ac
   76b84:	bl	770dc <__assert_fail@plt+0x64524>
   76b88:	str	r0, [sp, #56]	; 0x38
   76b8c:	b	76ba0 <__assert_fail@plt+0x63fe8>
   76b90:	ldr	r0, [fp, #-68]	; 0xffffffbc
   76b94:	ldr	r1, [fp, #-60]	; 0xffffffc4
   76b98:	ldr	r2, [sp, #428]	; 0x1ac
   76b9c:	bl	125c4 <memcpy@plt>
   76ba0:	b	76ba4 <__assert_fail@plt+0x63fec>
   76ba4:	ldr	r0, [sp, #428]	; 0x1ac
   76ba8:	ldr	r1, [fp, #-68]	; 0xffffffbc
   76bac:	add	r0, r1, r0
   76bb0:	str	r0, [fp, #-68]	; 0xffffffbc
   76bb4:	ldr	r0, [sp, #420]	; 0x1a4
   76bb8:	ldr	r1, [fp, #-64]	; 0xffffffc0
   76bbc:	add	r0, r1, r0
   76bc0:	str	r0, [fp, #-64]	; 0xffffffc0
   76bc4:	b	77008 <__assert_fail@plt+0x64450>
   76bc8:	movw	r0, #1
   76bcc:	str	r0, [fp, #-128]	; 0xffffff80
   76bd0:	ldr	r0, [fp, #-72]	; 0xffffffb8
   76bd4:	ldr	r1, [fp, #-128]	; 0xffffff80
   76bd8:	add	r0, r0, r1
   76bdc:	ldrb	r0, [r0]
   76be0:	cmp	r0, #58	; 0x3a
   76be4:	bne	76bfc <__assert_fail@plt+0x64044>
   76be8:	b	76bec <__assert_fail@plt+0x64034>
   76bec:	ldr	r0, [fp, #-128]	; 0xffffff80
   76bf0:	add	r0, r0, #1
   76bf4:	str	r0, [fp, #-128]	; 0xffffff80
   76bf8:	b	76bd0 <__assert_fail@plt+0x64018>
   76bfc:	ldr	r0, [fp, #-72]	; 0xffffffb8
   76c00:	ldr	r1, [fp, #-128]	; 0xffffff80
   76c04:	add	r0, r0, r1
   76c08:	ldrb	r0, [r0]
   76c0c:	cmp	r0, #122	; 0x7a
   76c10:	beq	76c18 <__assert_fail@plt+0x64060>
   76c14:	b	76e48 <__assert_fail@plt+0x64290>
   76c18:	ldr	r0, [fp, #-128]	; 0xffffff80
   76c1c:	ldr	r1, [fp, #-72]	; 0xffffffb8
   76c20:	add	r0, r1, r0
   76c24:	str	r0, [fp, #-72]	; 0xffffffb8
   76c28:	b	76c34 <__assert_fail@plt+0x6407c>
   76c2c:	movw	r0, #0
   76c30:	str	r0, [fp, #-128]	; 0xffffff80
   76c34:	ldr	r0, [fp, #-44]	; 0xffffffd4
   76c38:	ldr	r0, [r0, #32]
   76c3c:	cmp	r0, #0
   76c40:	bge	76c48 <__assert_fail@plt+0x64090>
   76c44:	b	77008 <__assert_fail@plt+0x64450>
   76c48:	ldr	r0, [fp, #-44]	; 0xffffffd4
   76c4c:	ldr	r0, [r0, #36]	; 0x24
   76c50:	str	r0, [sp, #412]	; 0x19c
   76c54:	ldr	r0, [sp, #412]	; 0x19c
   76c58:	cmp	r0, #0
   76c5c:	movw	r0, #1
   76c60:	str	r0, [sp, #52]	; 0x34
   76c64:	blt	76c9c <__assert_fail@plt+0x640e4>
   76c68:	ldr	r0, [sp, #412]	; 0x19c
   76c6c:	cmp	r0, #0
   76c70:	movw	r0, #0
   76c74:	str	r0, [sp, #48]	; 0x30
   76c78:	bne	76c94 <__assert_fail@plt+0x640dc>
   76c7c:	ldr	r0, [fp, #-60]	; 0xffffffc4
   76c80:	ldrb	r0, [r0]
   76c84:	cmp	r0, #45	; 0x2d
   76c88:	movw	r0, #0
   76c8c:	moveq	r0, #1
   76c90:	str	r0, [sp, #48]	; 0x30
   76c94:	ldr	r0, [sp, #48]	; 0x30
   76c98:	str	r0, [sp, #52]	; 0x34
   76c9c:	ldr	r0, [sp, #52]	; 0x34
   76ca0:	and	r0, r0, #1
   76ca4:	strb	r0, [fp, #-93]	; 0xffffffa3
   76ca8:	ldr	r0, [sp, #412]	; 0x19c
   76cac:	movw	r1, #34953	; 0x8889
   76cb0:	movt	r1, #34952	; 0x8888
   76cb4:	smmla	r0, r0, r1, r0
   76cb8:	asr	r2, r0, #5
   76cbc:	add	r0, r2, r0, lsr #31
   76cc0:	smmla	r0, r0, r1, r0
   76cc4:	asr	r2, r0, #5
   76cc8:	add	r0, r2, r0, lsr #31
   76ccc:	str	r0, [sp, #408]	; 0x198
   76cd0:	ldr	r0, [sp, #412]	; 0x19c
   76cd4:	smmla	r0, r0, r1, r0
   76cd8:	asr	r2, r0, #5
   76cdc:	add	r0, r2, r0, lsr #31
   76ce0:	smmla	r2, r0, r1, r0
   76ce4:	asr	r3, r2, #5
   76ce8:	add	r2, r3, r2, lsr #31
   76cec:	rsb	r2, r2, r2, lsl #4
   76cf0:	sub	r0, r0, r2, lsl #2
   76cf4:	str	r0, [sp, #404]	; 0x194
   76cf8:	ldr	r0, [sp, #412]	; 0x19c
   76cfc:	smmla	r1, r0, r1, r0
   76d00:	asr	r2, r1, #5
   76d04:	add	r1, r2, r1, lsr #31
   76d08:	rsb	r1, r1, r1, lsl #4
   76d0c:	sub	r0, r0, r1, lsl #2
   76d10:	str	r0, [sp, #400]	; 0x190
   76d14:	ldr	r0, [fp, #-128]	; 0xffffff80
   76d18:	cmp	r0, #3
   76d1c:	str	r0, [sp, #44]	; 0x2c
   76d20:	bhi	76e2c <__assert_fail@plt+0x64274>
   76d24:	add	r0, pc, #8
   76d28:	ldr	r1, [sp, #44]	; 0x2c
   76d2c:	ldr	r0, [r0, r1, lsl #2]
   76d30:	mov	pc, r0
   76d34:	andeq	r6, r7, r4, asr #26
   76d38:	andeq	r6, r7, r4, ror sp
   76d3c:	andeq	r6, r7, r8, lsr #27
   76d40:	andeq	r6, r7, ip, ror #27
   76d44:	b	76d48 <__assert_fail@plt+0x64190>
   76d48:	movw	r0, #5
   76d4c:	str	r0, [fp, #-84]	; 0xffffffac
   76d50:	movw	r0, #0
   76d54:	str	r0, [fp, #-100]	; 0xffffff9c
   76d58:	ldr	r0, [sp, #408]	; 0x198
   76d5c:	movw	r1, #100	; 0x64
   76d60:	mul	r0, r0, r1
   76d64:	ldr	r1, [sp, #404]	; 0x194
   76d68:	add	r0, r0, r1
   76d6c:	str	r0, [fp, #-92]	; 0xffffffa4
   76d70:	b	752fc <__assert_fail@plt+0x62744>
   76d74:	b	76d78 <__assert_fail@plt+0x641c0>
   76d78:	b	76d7c <__assert_fail@plt+0x641c4>
   76d7c:	movw	r0, #6
   76d80:	str	r0, [fp, #-84]	; 0xffffffac
   76d84:	movw	r0, #4
   76d88:	str	r0, [fp, #-100]	; 0xffffff9c
   76d8c:	ldr	r0, [sp, #408]	; 0x198
   76d90:	movw	r1, #100	; 0x64
   76d94:	mul	r0, r0, r1
   76d98:	ldr	r1, [sp, #404]	; 0x194
   76d9c:	add	r0, r0, r1
   76da0:	str	r0, [fp, #-92]	; 0xffffffa4
   76da4:	b	752fc <__assert_fail@plt+0x62744>
   76da8:	b	76dac <__assert_fail@plt+0x641f4>
   76dac:	b	76db0 <__assert_fail@plt+0x641f8>
   76db0:	movw	r0, #9
   76db4:	str	r0, [fp, #-84]	; 0xffffffac
   76db8:	movw	r0, #20
   76dbc:	str	r0, [fp, #-100]	; 0xffffff9c
   76dc0:	ldr	r0, [sp, #408]	; 0x198
   76dc4:	movw	r1, #10000	; 0x2710
   76dc8:	mul	r0, r0, r1
   76dcc:	ldr	r1, [sp, #404]	; 0x194
   76dd0:	movw	r2, #100	; 0x64
   76dd4:	mul	r1, r1, r2
   76dd8:	add	r0, r0, r1
   76ddc:	ldr	r1, [sp, #400]	; 0x190
   76de0:	add	r0, r0, r1
   76de4:	str	r0, [fp, #-92]	; 0xffffffa4
   76de8:	b	752fc <__assert_fail@plt+0x62744>
   76dec:	ldr	r0, [sp, #400]	; 0x190
   76df0:	cmp	r0, #0
   76df4:	beq	76dfc <__assert_fail@plt+0x64244>
   76df8:	b	76dac <__assert_fail@plt+0x641f4>
   76dfc:	ldr	r0, [sp, #404]	; 0x194
   76e00:	cmp	r0, #0
   76e04:	beq	76e0c <__assert_fail@plt+0x64254>
   76e08:	b	76d78 <__assert_fail@plt+0x641c0>
   76e0c:	b	76e10 <__assert_fail@plt+0x64258>
   76e10:	movw	r0, #3
   76e14:	str	r0, [fp, #-84]	; 0xffffffac
   76e18:	movw	r0, #0
   76e1c:	str	r0, [fp, #-100]	; 0xffffff9c
   76e20:	ldr	r0, [sp, #408]	; 0x198
   76e24:	str	r0, [fp, #-92]	; 0xffffffa4
   76e28:	b	752fc <__assert_fail@plt+0x62744>
   76e2c:	b	76e48 <__assert_fail@plt+0x64290>
   76e30:	b	76e34 <__assert_fail@plt+0x6427c>
   76e34:	ldr	r0, [fp, #-72]	; 0xffffffb8
   76e38:	mvn	r1, #0
   76e3c:	add	r0, r0, r1
   76e40:	str	r0, [fp, #-72]	; 0xffffffb8
   76e44:	b	76e48 <__assert_fail@plt+0x64290>
   76e48:	b	76e4c <__assert_fail@plt+0x64294>
   76e4c:	ldr	r0, [fp, #-72]	; 0xffffffb8
   76e50:	ldr	r1, [fp, #-160]	; 0xffffff60
   76e54:	sub	r0, r0, r1
   76e58:	add	r0, r0, #1
   76e5c:	str	r0, [sp, #396]	; 0x18c
   76e60:	ldr	r0, [fp, #-76]	; 0xffffffb4
   76e64:	cmp	r0, #45	; 0x2d
   76e68:	beq	76e78 <__assert_fail@plt+0x642c0>
   76e6c:	ldr	r0, [fp, #16]
   76e70:	cmp	r0, #0
   76e74:	bge	76e84 <__assert_fail@plt+0x642cc>
   76e78:	movw	r0, #0
   76e7c:	str	r0, [sp, #40]	; 0x28
   76e80:	b	76e8c <__assert_fail@plt+0x642d4>
   76e84:	ldr	r0, [fp, #16]
   76e88:	str	r0, [sp, #40]	; 0x28
   76e8c:	ldr	r0, [sp, #40]	; 0x28
   76e90:	str	r0, [sp, #392]	; 0x188
   76e94:	ldr	r0, [sp, #396]	; 0x18c
   76e98:	ldr	r1, [sp, #392]	; 0x188
   76e9c:	cmp	r0, r1
   76ea0:	bcs	76eb0 <__assert_fail@plt+0x642f8>
   76ea4:	ldr	r0, [sp, #392]	; 0x188
   76ea8:	str	r0, [sp, #36]	; 0x24
   76eac:	b	76eb8 <__assert_fail@plt+0x64300>
   76eb0:	ldr	r0, [sp, #396]	; 0x18c
   76eb4:	str	r0, [sp, #36]	; 0x24
   76eb8:	ldr	r0, [sp, #36]	; 0x24
   76ebc:	str	r0, [sp, #388]	; 0x184
   76ec0:	ldr	r0, [sp, #388]	; 0x184
   76ec4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   76ec8:	ldr	r2, [fp, #-64]	; 0xffffffc0
   76ecc:	sub	r1, r1, r2
   76ed0:	cmp	r0, r1
   76ed4:	bcc	76ef0 <__assert_fail@plt+0x64338>
   76ed8:	bl	128d0 <__errno_location@plt>
   76edc:	movw	lr, #34	; 0x22
   76ee0:	str	lr, [r0]
   76ee4:	movw	r0, #0
   76ee8:	str	r0, [fp, #-28]	; 0xffffffe4
   76eec:	b	77068 <__assert_fail@plt+0x644b0>
   76ef0:	ldr	r0, [fp, #-68]	; 0xffffffbc
   76ef4:	movw	r1, #0
   76ef8:	cmp	r0, r1
   76efc:	beq	76ff4 <__assert_fail@plt+0x6443c>
   76f00:	ldr	r0, [sp, #396]	; 0x18c
   76f04:	ldr	r1, [sp, #392]	; 0x188
   76f08:	cmp	r0, r1
   76f0c:	bcs	76f88 <__assert_fail@plt+0x643d0>
   76f10:	ldr	r0, [sp, #392]	; 0x188
   76f14:	ldr	r1, [sp, #396]	; 0x18c
   76f18:	sub	r0, r0, r1
   76f1c:	str	r0, [sp, #384]	; 0x180
   76f20:	ldr	r0, [fp, #-76]	; 0xffffffb4
   76f24:	cmp	r0, #48	; 0x30
   76f28:	beq	76f38 <__assert_fail@plt+0x64380>
   76f2c:	ldr	r0, [fp, #-76]	; 0xffffffb4
   76f30:	cmp	r0, #43	; 0x2b
   76f34:	bne	76f60 <__assert_fail@plt+0x643a8>
   76f38:	ldr	r0, [fp, #-68]	; 0xffffffbc
   76f3c:	ldr	r2, [sp, #384]	; 0x180
   76f40:	movw	r1, #48	; 0x30
   76f44:	and	r1, r1, #255	; 0xff
   76f48:	bl	12900 <memset@plt>
   76f4c:	ldr	r0, [sp, #384]	; 0x180
   76f50:	ldr	r1, [fp, #-68]	; 0xffffffbc
   76f54:	add	r0, r1, r0
   76f58:	str	r0, [fp, #-68]	; 0xffffffbc
   76f5c:	b	76f84 <__assert_fail@plt+0x643cc>
   76f60:	ldr	r0, [fp, #-68]	; 0xffffffbc
   76f64:	ldr	r2, [sp, #384]	; 0x180
   76f68:	movw	r1, #32
   76f6c:	and	r1, r1, #255	; 0xff
   76f70:	bl	12900 <memset@plt>
   76f74:	ldr	r0, [sp, #384]	; 0x180
   76f78:	ldr	r1, [fp, #-68]	; 0xffffffbc
   76f7c:	add	r0, r1, r0
   76f80:	str	r0, [fp, #-68]	; 0xffffffbc
   76f84:	b	76f88 <__assert_fail@plt+0x643d0>
   76f88:	ldrb	r0, [fp, #-123]	; 0xffffff85
   76f8c:	tst	r0, #1
   76f90:	beq	76fac <__assert_fail@plt+0x643f4>
   76f94:	ldr	r0, [fp, #-68]	; 0xffffffbc
   76f98:	ldr	r1, [fp, #-160]	; 0xffffff60
   76f9c:	ldr	r2, [sp, #396]	; 0x18c
   76fa0:	bl	77078 <__assert_fail@plt+0x644c0>
   76fa4:	str	r0, [sp, #32]
   76fa8:	b	76fe4 <__assert_fail@plt+0x6442c>
   76fac:	ldrb	r0, [fp, #-124]	; 0xffffff84
   76fb0:	tst	r0, #1
   76fb4:	beq	76fd0 <__assert_fail@plt+0x64418>
   76fb8:	ldr	r0, [fp, #-68]	; 0xffffffbc
   76fbc:	ldr	r1, [fp, #-160]	; 0xffffff60
   76fc0:	ldr	r2, [sp, #396]	; 0x18c
   76fc4:	bl	770dc <__assert_fail@plt+0x64524>
   76fc8:	str	r0, [sp, #28]
   76fcc:	b	76fe0 <__assert_fail@plt+0x64428>
   76fd0:	ldr	r0, [fp, #-68]	; 0xffffffbc
   76fd4:	ldr	r1, [fp, #-160]	; 0xffffff60
   76fd8:	ldr	r2, [sp, #396]	; 0x18c
   76fdc:	bl	125c4 <memcpy@plt>
   76fe0:	b	76fe4 <__assert_fail@plt+0x6442c>
   76fe4:	ldr	r0, [sp, #396]	; 0x18c
   76fe8:	ldr	r1, [fp, #-68]	; 0xffffffbc
   76fec:	add	r0, r1, r0
   76ff0:	str	r0, [fp, #-68]	; 0xffffffbc
   76ff4:	ldr	r0, [sp, #388]	; 0x184
   76ff8:	ldr	r1, [fp, #-64]	; 0xffffffc0
   76ffc:	add	r0, r1, r0
   77000:	str	r0, [fp, #-64]	; 0xffffffc0
   77004:	b	77008 <__assert_fail@plt+0x64450>
   77008:	b	7700c <__assert_fail@plt+0x64454>
   7700c:	mvn	r0, #0
   77010:	str	r0, [fp, #16]
   77014:	ldr	r0, [fp, #-72]	; 0xffffffb8
   77018:	add	r0, r0, #1
   7701c:	str	r0, [fp, #-72]	; 0xffffffb8
   77020:	b	738c8 <__assert_fail@plt+0x60d10>
   77024:	ldr	r0, [fp, #-68]	; 0xffffffbc
   77028:	movw	r1, #0
   7702c:	cmp	r0, r1
   77030:	beq	7704c <__assert_fail@plt+0x64494>
   77034:	ldr	r0, [fp, #-36]	; 0xffffffdc
   77038:	cmp	r0, #0
   7703c:	beq	7704c <__assert_fail@plt+0x64494>
   77040:	ldr	r0, [fp, #-68]	; 0xffffffbc
   77044:	movw	r1, #0
   77048:	strb	r1, [r0]
   7704c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   77050:	str	r0, [sp, #24]
   77054:	bl	128d0 <__errno_location@plt>
   77058:	ldr	lr, [sp, #24]
   7705c:	str	lr, [r0]
   77060:	ldr	r0, [fp, #-64]	; 0xffffffc0
   77064:	str	r0, [fp, #-28]	; 0xffffffe4
   77068:	ldr	r0, [fp, #-28]	; 0xffffffe4
   7706c:	sub	sp, fp, #24
   77070:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   77074:			; <UNDEFINED> instruction: 0xfffff894
   77078:	push	{fp, lr}
   7707c:	mov	fp, sp
   77080:	sub	sp, sp, #16
   77084:	str	r0, [fp, #-4]
   77088:	str	r1, [sp, #8]
   7708c:	str	r2, [sp, #4]
   77090:	ldr	r0, [sp, #4]
   77094:	mvn	r1, #0
   77098:	add	r1, r0, r1
   7709c:	str	r1, [sp, #4]
   770a0:	cmp	r0, #0
   770a4:	bls	770d0 <__assert_fail@plt+0x64518>
   770a8:	ldr	r0, [sp, #8]
   770ac:	ldr	r1, [sp, #4]
   770b0:	add	r0, r0, r1
   770b4:	ldrb	r0, [r0]
   770b8:	bl	125dc <tolower@plt>
   770bc:	ldr	r1, [fp, #-4]
   770c0:	ldr	lr, [sp, #4]
   770c4:	add	r1, r1, lr
   770c8:	strb	r0, [r1]
   770cc:	b	77090 <__assert_fail@plt+0x644d8>
   770d0:	ldr	r0, [fp, #-4]
   770d4:	mov	sp, fp
   770d8:	pop	{fp, pc}
   770dc:	push	{fp, lr}
   770e0:	mov	fp, sp
   770e4:	sub	sp, sp, #16
   770e8:	str	r0, [fp, #-4]
   770ec:	str	r1, [sp, #8]
   770f0:	str	r2, [sp, #4]
   770f4:	ldr	r0, [sp, #4]
   770f8:	mvn	r1, #0
   770fc:	add	r1, r0, r1
   77100:	str	r1, [sp, #4]
   77104:	cmp	r0, #0
   77108:	bls	77134 <__assert_fail@plt+0x6457c>
   7710c:	ldr	r0, [sp, #8]
   77110:	ldr	r1, [sp, #4]
   77114:	add	r0, r0, r1
   77118:	ldrb	r0, [r0]
   7711c:	bl	12a08 <toupper@plt>
   77120:	ldr	r1, [fp, #-4]
   77124:	ldr	lr, [sp, #4]
   77128:	add	r1, r1, lr
   7712c:	strb	r0, [r1]
   77130:	b	770f4 <__assert_fail@plt+0x6453c>
   77134:	ldr	r0, [fp, #-4]
   77138:	mov	sp, fp
   7713c:	pop	{fp, pc}
   77140:	sub	sp, sp, #12
   77144:	str	r0, [sp, #8]
   77148:	str	r1, [sp, #4]
   7714c:	movw	r0, #378	; 0x17a
   77150:	str	r0, [sp]
   77154:	ldr	r0, [sp, #8]
   77158:	ldr	r1, [sp, #4]
   7715c:	sub	r1, r0, r1
   77160:	ldr	r2, [sp]
   77164:	add	r1, r1, r2
   77168:	add	r1, r1, #4
   7716c:	movw	r2, #9363	; 0x2493
   77170:	movt	r2, #37449	; 0x9249
   77174:	smmla	r2, r1, r2, r1
   77178:	asr	r3, r2, #2
   7717c:	add	r2, r3, r2, lsr #31
   77180:	rsb	r2, r2, r2, lsl #3
   77184:	sub	r1, r1, r2
   77188:	sub	r0, r0, r1
   7718c:	add	r0, r0, #4
   77190:	sub	r0, r0, #1
   77194:	add	sp, sp, #12
   77198:	bx	lr
   7719c:	push	{fp, lr}
   771a0:	mov	fp, sp
   771a4:	sub	sp, sp, #48	; 0x30
   771a8:	ldr	ip, [pc, #176]	; 77260 <__assert_fail@plt+0x646a8>
   771ac:	str	r0, [fp, #-8]
   771b0:	str	r1, [fp, #-12]
   771b4:	str	r2, [fp, #-16]
   771b8:	str	r3, [fp, #-20]	; 0xffffffec
   771bc:	ldr	r0, [fp, #-16]
   771c0:	orr	r0, r0, ip
   771c4:	str	r0, [sp, #24]
   771c8:	ldr	r0, [fp, #-8]
   771cc:	ldr	r1, [fp, #-12]
   771d0:	ldr	r2, [sp, #24]
   771d4:	bl	326bc <__assert_fail@plt+0x1fb04>
   771d8:	str	r0, [sp, #20]
   771dc:	ldr	r0, [sp, #20]
   771e0:	cmp	r0, #0
   771e4:	bge	771f4 <__assert_fail@plt+0x6463c>
   771e8:	movw	r0, #0
   771ec:	str	r0, [fp, #-4]
   771f0:	b	77254 <__assert_fail@plt+0x6469c>
   771f4:	ldr	r0, [sp, #20]
   771f8:	bl	12a74 <fdopendir@plt>
   771fc:	str	r0, [sp, #16]
   77200:	ldr	r0, [sp, #16]
   77204:	movw	lr, #0
   77208:	cmp	r0, lr
   7720c:	beq	77220 <__assert_fail@plt+0x64668>
   77210:	ldr	r0, [sp, #20]
   77214:	ldr	r1, [fp, #-20]	; 0xffffffec
   77218:	str	r0, [r1]
   7721c:	b	7724c <__assert_fail@plt+0x64694>
   77220:	bl	128d0 <__errno_location@plt>
   77224:	ldr	r0, [r0]
   77228:	str	r0, [sp, #12]
   7722c:	ldr	r0, [sp, #20]
   77230:	bl	12b70 <close@plt>
   77234:	ldr	lr, [sp, #12]
   77238:	str	r0, [sp, #8]
   7723c:	str	lr, [sp, #4]
   77240:	bl	128d0 <__errno_location@plt>
   77244:	ldr	lr, [sp, #4]
   77248:	str	lr, [r0]
   7724c:	ldr	r0, [sp, #16]
   77250:	str	r0, [fp, #-4]
   77254:	ldr	r0, [fp, #-4]
   77258:	mov	sp, fp
   7725c:	pop	{fp, pc}
   77260:	andeq	r4, r8, r0, lsl #18
   77264:	push	{fp, lr}
   77268:	mov	fp, sp
   7726c:	sub	sp, sp, #16
   77270:	str	r0, [fp, #-4]
   77274:	str	r1, [sp, #8]
   77278:	str	r2, [sp, #4]
   7727c:	ldr	r0, [fp, #-4]
   77280:	ldr	r1, [sp, #8]
   77284:	ldr	r2, [sp, #4]
   77288:	bl	77294 <__assert_fail@plt+0x646dc>
   7728c:	mov	sp, fp
   77290:	pop	{fp, pc}
   77294:	push	{fp, lr}
   77298:	mov	fp, sp
   7729c:	sub	sp, sp, #24
   772a0:	str	r0, [fp, #-8]
   772a4:	str	r1, [sp, #12]
   772a8:	str	r2, [sp, #8]
   772ac:	ldr	r0, [fp, #-8]
   772b0:	bl	77394 <__assert_fail@plt+0x647dc>
   772b4:	str	r0, [sp, #4]
   772b8:	ldr	r0, [sp, #4]
   772bc:	movw	r1, #0
   772c0:	cmp	r0, r1
   772c4:	bne	772ec <__assert_fail@plt+0x64734>
   772c8:	ldr	r0, [sp, #8]
   772cc:	cmp	r0, #0
   772d0:	bls	772e0 <__assert_fail@plt+0x64728>
   772d4:	ldr	r0, [sp, #12]
   772d8:	movw	r1, #0
   772dc:	strb	r1, [r0]
   772e0:	movw	r0, #22
   772e4:	str	r0, [fp, #-4]
   772e8:	b	77368 <__assert_fail@plt+0x647b0>
   772ec:	ldr	r0, [sp, #4]
   772f0:	bl	12888 <strlen@plt>
   772f4:	str	r0, [sp]
   772f8:	ldr	r0, [sp]
   772fc:	ldr	lr, [sp, #8]
   77300:	cmp	r0, lr
   77304:	bcs	77328 <__assert_fail@plt+0x64770>
   77308:	ldr	r0, [sp, #12]
   7730c:	ldr	r1, [sp, #4]
   77310:	ldr	r2, [sp]
   77314:	add	r2, r2, #1
   77318:	bl	125c4 <memcpy@plt>
   7731c:	movw	r0, #0
   77320:	str	r0, [fp, #-4]
   77324:	b	77368 <__assert_fail@plt+0x647b0>
   77328:	ldr	r0, [sp, #8]
   7732c:	cmp	r0, #0
   77330:	bls	77360 <__assert_fail@plt+0x647a8>
   77334:	ldr	r0, [sp, #12]
   77338:	ldr	r1, [sp, #4]
   7733c:	ldr	r2, [sp, #8]
   77340:	sub	r2, r2, #1
   77344:	bl	125c4 <memcpy@plt>
   77348:	ldr	r0, [sp, #12]
   7734c:	ldr	r1, [sp, #8]
   77350:	sub	r1, r1, #1
   77354:	add	r0, r0, r1
   77358:	movw	r1, #0
   7735c:	strb	r1, [r0]
   77360:	movw	r0, #34	; 0x22
   77364:	str	r0, [fp, #-4]
   77368:	ldr	r0, [fp, #-4]
   7736c:	mov	sp, fp
   77370:	pop	{fp, pc}
   77374:	push	{fp, lr}
   77378:	mov	fp, sp
   7737c:	sub	sp, sp, #8
   77380:	str	r0, [sp, #4]
   77384:	ldr	r0, [sp, #4]
   77388:	bl	77394 <__assert_fail@plt+0x647dc>
   7738c:	mov	sp, fp
   77390:	pop	{fp, pc}
   77394:	push	{fp, lr}
   77398:	mov	fp, sp
   7739c:	sub	sp, sp, #8
   773a0:	str	r0, [sp, #4]
   773a4:	ldr	r0, [sp, #4]
   773a8:	movw	r1, #0
   773ac:	bl	129e4 <setlocale@plt>
   773b0:	str	r0, [sp]
   773b4:	ldr	r0, [sp]
   773b8:	mov	sp, fp
   773bc:	pop	{fp, pc}
   773c0:	eor	r1, r1, #-2147483648	; 0x80000000
   773c4:	b	773cc <__assert_fail@plt+0x64814>
   773c8:	eor	r3, r3, #-2147483648	; 0x80000000
   773cc:	push	{r4, r5, lr}
   773d0:	lsl	r4, r1, #1
   773d4:	lsl	r5, r3, #1
   773d8:	teq	r4, r5
   773dc:	teqeq	r0, r2
   773e0:	orrsne	ip, r4, r0
   773e4:	orrsne	ip, r5, r2
   773e8:	mvnsne	ip, r4, asr #21
   773ec:	mvnsne	ip, r5, asr #21
   773f0:	beq	775dc <__assert_fail@plt+0x64a24>
   773f4:	lsr	r4, r4, #21
   773f8:	rsbs	r5, r4, r5, lsr #21
   773fc:	rsblt	r5, r5, #0
   77400:	ble	77420 <__assert_fail@plt+0x64868>
   77404:	add	r4, r4, r5
   77408:	eor	r2, r0, r2
   7740c:	eor	r3, r1, r3
   77410:	eor	r0, r2, r0
   77414:	eor	r1, r3, r1
   77418:	eor	r2, r0, r2
   7741c:	eor	r3, r1, r3
   77420:	cmp	r5, #54	; 0x36
   77424:	pophi	{r4, r5, pc}
   77428:	tst	r1, #-2147483648	; 0x80000000
   7742c:	lsl	r1, r1, #12
   77430:	mov	ip, #1048576	; 0x100000
   77434:	orr	r1, ip, r1, lsr #12
   77438:	beq	77444 <__assert_fail@plt+0x6488c>
   7743c:	rsbs	r0, r0, #0
   77440:	rsc	r1, r1, #0
   77444:	tst	r3, #-2147483648	; 0x80000000
   77448:	lsl	r3, r3, #12
   7744c:	orr	r3, ip, r3, lsr #12
   77450:	beq	7745c <__assert_fail@plt+0x648a4>
   77454:	rsbs	r2, r2, #0
   77458:	rsc	r3, r3, #0
   7745c:	teq	r4, r5
   77460:	beq	775c4 <__assert_fail@plt+0x64a0c>
   77464:	sub	r4, r4, #1
   77468:	rsbs	lr, r5, #32
   7746c:	blt	77488 <__assert_fail@plt+0x648d0>
   77470:	lsl	ip, r2, lr
   77474:	adds	r0, r0, r2, lsr r5
   77478:	adc	r1, r1, #0
   7747c:	adds	r0, r0, r3, lsl lr
   77480:	adcs	r1, r1, r3, asr r5
   77484:	b	774a4 <__assert_fail@plt+0x648ec>
   77488:	sub	r5, r5, #32
   7748c:	add	lr, lr, #32
   77490:	cmp	r2, #1
   77494:	lsl	ip, r3, lr
   77498:	orrcs	ip, ip, #2
   7749c:	adds	r0, r0, r3, asr r5
   774a0:	adcs	r1, r1, r3, asr #31
   774a4:	and	r5, r1, #-2147483648	; 0x80000000
   774a8:	bpl	774b8 <__assert_fail@plt+0x64900>
   774ac:	rsbs	ip, ip, #0
   774b0:	rscs	r0, r0, #0
   774b4:	rsc	r1, r1, #0
   774b8:	cmp	r1, #1048576	; 0x100000
   774bc:	bcc	774fc <__assert_fail@plt+0x64944>
   774c0:	cmp	r1, #2097152	; 0x200000
   774c4:	bcc	774e4 <__assert_fail@plt+0x6492c>
   774c8:	lsrs	r1, r1, #1
   774cc:	rrxs	r0, r0
   774d0:	rrx	ip, ip
   774d4:	add	r4, r4, #1
   774d8:	lsl	r2, r4, #21
   774dc:	cmn	r2, #4194304	; 0x400000
   774e0:	bcs	7763c <__assert_fail@plt+0x64a84>
   774e4:	cmp	ip, #-2147483648	; 0x80000000
   774e8:	lsrseq	ip, r0, #1
   774ec:	adcs	r0, r0, #0
   774f0:	adc	r1, r1, r4, lsl #20
   774f4:	orr	r1, r1, r5
   774f8:	pop	{r4, r5, pc}
   774fc:	lsls	ip, ip, #1
   77500:	adcs	r0, r0, r0
   77504:	adc	r1, r1, r1
   77508:	tst	r1, #1048576	; 0x100000
   7750c:	sub	r4, r4, #1
   77510:	bne	774e4 <__assert_fail@plt+0x6492c>
   77514:	teq	r1, #0
   77518:	moveq	r1, r0
   7751c:	moveq	r0, #0
   77520:	clz	r3, r1
   77524:	addeq	r3, r3, #32
   77528:	sub	r3, r3, #11
   7752c:	subs	r2, r3, #32
   77530:	bge	77554 <__assert_fail@plt+0x6499c>
   77534:	adds	r2, r2, #12
   77538:	ble	77550 <__assert_fail@plt+0x64998>
   7753c:	add	ip, r2, #20
   77540:	rsb	r2, r2, #12
   77544:	lsl	r0, r1, ip
   77548:	lsr	r1, r1, r2
   7754c:	b	77564 <__assert_fail@plt+0x649ac>
   77550:	add	r2, r2, #20
   77554:	rsble	ip, r2, #32
   77558:	lsl	r1, r1, r2
   7755c:	orrle	r1, r1, r0, lsr ip
   77560:	lslle	r0, r0, r2
   77564:	subs	r4, r4, r3
   77568:	addge	r1, r1, r4, lsl #20
   7756c:	orrge	r1, r1, r5
   77570:	popge	{r4, r5, pc}
   77574:	mvn	r4, r4
   77578:	subs	r4, r4, #31
   7757c:	bge	775b8 <__assert_fail@plt+0x64a00>
   77580:	adds	r4, r4, #12
   77584:	bgt	775a0 <__assert_fail@plt+0x649e8>
   77588:	add	r4, r4, #20
   7758c:	rsb	r2, r4, #32
   77590:	lsr	r0, r0, r4
   77594:	orr	r0, r0, r1, lsl r2
   77598:	orr	r1, r5, r1, lsr r4
   7759c:	pop	{r4, r5, pc}
   775a0:	rsb	r4, r4, #12
   775a4:	rsb	r2, r4, #32
   775a8:	lsr	r0, r0, r2
   775ac:	orr	r0, r0, r1, lsl r4
   775b0:	mov	r1, r5
   775b4:	pop	{r4, r5, pc}
   775b8:	lsr	r0, r1, r4
   775bc:	mov	r1, r5
   775c0:	pop	{r4, r5, pc}
   775c4:	teq	r4, #0
   775c8:	eor	r3, r3, #1048576	; 0x100000
   775cc:	eoreq	r1, r1, #1048576	; 0x100000
   775d0:	addeq	r4, r4, #1
   775d4:	subne	r5, r5, #1
   775d8:	b	77464 <__assert_fail@plt+0x648ac>
   775dc:	mvns	ip, r4, asr #21
   775e0:	mvnsne	ip, r5, asr #21
   775e4:	beq	7764c <__assert_fail@plt+0x64a94>
   775e8:	teq	r4, r5
   775ec:	teqeq	r0, r2
   775f0:	beq	77604 <__assert_fail@plt+0x64a4c>
   775f4:	orrs	ip, r4, r0
   775f8:	moveq	r1, r3
   775fc:	moveq	r0, r2
   77600:	pop	{r4, r5, pc}
   77604:	teq	r1, r3
   77608:	movne	r1, #0
   7760c:	movne	r0, #0
   77610:	popne	{r4, r5, pc}
   77614:	lsrs	ip, r4, #21
   77618:	bne	7762c <__assert_fail@plt+0x64a74>
   7761c:	lsls	r0, r0, #1
   77620:	adcs	r1, r1, r1
   77624:	orrcs	r1, r1, #-2147483648	; 0x80000000
   77628:	pop	{r4, r5, pc}
   7762c:	adds	r4, r4, #4194304	; 0x400000
   77630:	addcc	r1, r1, #1048576	; 0x100000
   77634:	popcc	{r4, r5, pc}
   77638:	and	r5, r1, #-2147483648	; 0x80000000
   7763c:	orr	r1, r5, #2130706432	; 0x7f000000
   77640:	orr	r1, r1, #15728640	; 0xf00000
   77644:	mov	r0, #0
   77648:	pop	{r4, r5, pc}
   7764c:	mvns	ip, r4, asr #21
   77650:	movne	r1, r3
   77654:	movne	r0, r2
   77658:	mvnseq	ip, r5, asr #21
   7765c:	movne	r3, r1
   77660:	movne	r2, r0
   77664:	orrs	r4, r0, r1, lsl #12
   77668:	orrseq	r5, r2, r3, lsl #12
   7766c:	teqeq	r1, r3
   77670:	orrne	r1, r1, #524288	; 0x80000
   77674:	pop	{r4, r5, pc}
   77678:	teq	r0, #0
   7767c:	moveq	r1, #0
   77680:	bxeq	lr
   77684:	push	{r4, r5, lr}
   77688:	mov	r4, #1024	; 0x400
   7768c:	add	r4, r4, #50	; 0x32
   77690:	mov	r5, #0
   77694:	mov	r1, #0
   77698:	b	77514 <__assert_fail@plt+0x6495c>
   7769c:	teq	r0, #0
   776a0:	moveq	r1, #0
   776a4:	bxeq	lr
   776a8:	push	{r4, r5, lr}
   776ac:	mov	r4, #1024	; 0x400
   776b0:	add	r4, r4, #50	; 0x32
   776b4:	ands	r5, r0, #-2147483648	; 0x80000000
   776b8:	rsbmi	r0, r0, #0
   776bc:	mov	r1, #0
   776c0:	b	77514 <__assert_fail@plt+0x6495c>
   776c4:	lsls	r2, r0, #1
   776c8:	asr	r1, r2, #3
   776cc:	rrx	r1, r1
   776d0:	lsl	r0, r2, #28
   776d4:	andsne	r3, r2, #-16777216	; 0xff000000
   776d8:	teqne	r3, #-16777216	; 0xff000000
   776dc:	eorne	r1, r1, #939524096	; 0x38000000
   776e0:	bxne	lr
   776e4:	bics	r2, r2, #-16777216	; 0xff000000
   776e8:	bxeq	lr
   776ec:	teq	r3, #-16777216	; 0xff000000
   776f0:	orreq	r1, r1, #524288	; 0x80000
   776f4:	bxeq	lr
   776f8:	push	{r4, r5, lr}
   776fc:	mov	r4, #896	; 0x380
   77700:	and	r5, r1, #-2147483648	; 0x80000000
   77704:	bic	r1, r1, #-2147483648	; 0x80000000
   77708:	b	77514 <__assert_fail@plt+0x6495c>
   7770c:	orrs	r2, r0, r1
   77710:	bxeq	lr
   77714:	push	{r4, r5, lr}
   77718:	mov	r5, #0
   7771c:	b	7773c <__assert_fail@plt+0x64b84>
   77720:	orrs	r2, r0, r1
   77724:	bxeq	lr
   77728:	push	{r4, r5, lr}
   7772c:	ands	r5, r1, #-2147483648	; 0x80000000
   77730:	bpl	7773c <__assert_fail@plt+0x64b84>
   77734:	rsbs	r0, r0, #0
   77738:	rsc	r1, r1, #0
   7773c:	mov	r4, #1024	; 0x400
   77740:	add	r4, r4, #50	; 0x32
   77744:	lsrs	ip, r1, #22
   77748:	beq	774b8 <__assert_fail@plt+0x64900>
   7774c:	mov	r2, #3
   77750:	lsrs	ip, ip, #3
   77754:	addne	r2, r2, #3
   77758:	lsrs	ip, ip, #3
   7775c:	addne	r2, r2, #3
   77760:	add	r2, r2, ip, lsr #3
   77764:	rsb	r3, r2, #32
   77768:	lsl	ip, r0, r3
   7776c:	lsr	r0, r0, r2
   77770:	orr	r0, r0, r1, lsl r3
   77774:	lsr	r1, r1, r2
   77778:	add	r4, r4, r2
   7777c:	b	774b8 <__assert_fail@plt+0x64900>
   77780:	cmp	r3, #0
   77784:	cmpeq	r2, #0
   77788:	bne	777ac <__assert_fail@plt+0x64bf4>
   7778c:	cmp	r1, #0
   77790:	movlt	r1, #-2147483648	; 0x80000000
   77794:	movlt	r0, #0
   77798:	blt	777a8 <__assert_fail@plt+0x64bf0>
   7779c:	cmpeq	r0, #0
   777a0:	mvnne	r1, #-2147483648	; 0x80000000
   777a4:	mvnne	r0, #0
   777a8:	b	77890 <__assert_fail@plt+0x64cd8>
   777ac:	sub	sp, sp, #8
   777b0:	push	{sp, lr}
   777b4:	cmp	r1, #0
   777b8:	blt	777d8 <__assert_fail@plt+0x64c20>
   777bc:	cmp	r3, #0
   777c0:	blt	7780c <__assert_fail@plt+0x64c54>
   777c4:	bl	778e0 <__assert_fail@plt+0x64d28>
   777c8:	ldr	lr, [sp, #4]
   777cc:	add	sp, sp, #8
   777d0:	pop	{r2, r3}
   777d4:	bx	lr
   777d8:	rsbs	r0, r0, #0
   777dc:	sbc	r1, r1, r1, lsl #1
   777e0:	cmp	r3, #0
   777e4:	blt	77830 <__assert_fail@plt+0x64c78>
   777e8:	bl	778e0 <__assert_fail@plt+0x64d28>
   777ec:	ldr	lr, [sp, #4]
   777f0:	add	sp, sp, #8
   777f4:	pop	{r2, r3}
   777f8:	rsbs	r0, r0, #0
   777fc:	sbc	r1, r1, r1, lsl #1
   77800:	rsbs	r2, r2, #0
   77804:	sbc	r3, r3, r3, lsl #1
   77808:	bx	lr
   7780c:	rsbs	r2, r2, #0
   77810:	sbc	r3, r3, r3, lsl #1
   77814:	bl	778e0 <__assert_fail@plt+0x64d28>
   77818:	ldr	lr, [sp, #4]
   7781c:	add	sp, sp, #8
   77820:	pop	{r2, r3}
   77824:	rsbs	r0, r0, #0
   77828:	sbc	r1, r1, r1, lsl #1
   7782c:	bx	lr
   77830:	rsbs	r2, r2, #0
   77834:	sbc	r3, r3, r3, lsl #1
   77838:	bl	778e0 <__assert_fail@plt+0x64d28>
   7783c:	ldr	lr, [sp, #4]
   77840:	add	sp, sp, #8
   77844:	pop	{r2, r3}
   77848:	rsbs	r2, r2, #0
   7784c:	sbc	r3, r3, r3, lsl #1
   77850:	bx	lr
   77854:	cmp	r3, #0
   77858:	cmpeq	r2, #0
   7785c:	bne	77874 <__assert_fail@plt+0x64cbc>
   77860:	cmp	r1, #0
   77864:	cmpeq	r0, #0
   77868:	mvnne	r1, #0
   7786c:	mvnne	r0, #0
   77870:	b	77890 <__assert_fail@plt+0x64cd8>
   77874:	sub	sp, sp, #8
   77878:	push	{sp, lr}
   7787c:	bl	778e0 <__assert_fail@plt+0x64d28>
   77880:	ldr	lr, [sp, #4]
   77884:	add	sp, sp, #8
   77888:	pop	{r2, r3}
   7788c:	bx	lr
   77890:	push	{r1, lr}
   77894:	mov	r0, #8
   77898:	bl	12480 <raise@plt>
   7789c:	pop	{r1, pc}
   778a0:	vmov	d6, r0, r1
   778a4:	vldr	d7, [pc, #36]	; 778d0 <__assert_fail@plt+0x64d18>
   778a8:	vldr	d5, [pc, #40]	; 778d8 <__assert_fail@plt+0x64d20>
   778ac:	vmul.f64	d7, d6, d7
   778b0:	vcvt.u32.f64	s14, d7
   778b4:	vcvt.f64.u32	d4, s14
   778b8:	vmov	r1, s14
   778bc:	vmls.f64	d6, d4, d5
   778c0:	vcvt.u32.f64	s15, d6
   778c4:	vmov	r0, s15
   778c8:	bx	lr
   778cc:	nop			; (mov r0, r0)
   778d0:	andeq	r0, r0, r0
   778d4:	ldclcc	0, cr0, [r0]
   778d8:	andeq	r0, r0, r0
   778dc:	mvnsmi	r0, r0
   778e0:	cmp	r1, r3
   778e4:	cmpeq	r0, r2
   778e8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   778ec:	mov	r4, r0
   778f0:	movcc	r0, #0
   778f4:	mov	r5, r1
   778f8:	ldr	lr, [sp, #36]	; 0x24
   778fc:	movcc	r1, r0
   77900:	bcc	779fc <__assert_fail@plt+0x64e44>
   77904:	cmp	r3, #0
   77908:	clzeq	ip, r2
   7790c:	clzne	ip, r3
   77910:	addeq	ip, ip, #32
   77914:	cmp	r5, #0
   77918:	clzeq	r1, r4
   7791c:	addeq	r1, r1, #32
   77920:	clzne	r1, r5
   77924:	sub	ip, ip, r1
   77928:	sub	sl, ip, #32
   7792c:	lsl	r9, r3, ip
   77930:	rsb	fp, ip, #32
   77934:	orr	r9, r9, r2, lsl sl
   77938:	orr	r9, r9, r2, lsr fp
   7793c:	lsl	r8, r2, ip
   77940:	cmp	r5, r9
   77944:	cmpeq	r4, r8
   77948:	movcc	r0, #0
   7794c:	movcc	r1, r0
   77950:	bcc	7796c <__assert_fail@plt+0x64db4>
   77954:	mov	r0, #1
   77958:	subs	r4, r4, r8
   7795c:	lsl	r1, r0, sl
   77960:	orr	r1, r1, r0, lsr fp
   77964:	lsl	r0, r0, ip
   77968:	sbc	r5, r5, r9
   7796c:	cmp	ip, #0
   77970:	beq	779fc <__assert_fail@plt+0x64e44>
   77974:	lsr	r6, r8, #1
   77978:	orr	r6, r6, r9, lsl #31
   7797c:	lsr	r7, r9, #1
   77980:	mov	r2, ip
   77984:	b	779a8 <__assert_fail@plt+0x64df0>
   77988:	subs	r3, r4, r6
   7798c:	sbc	r8, r5, r7
   77990:	adds	r3, r3, r3
   77994:	adc	r8, r8, r8
   77998:	adds	r4, r3, #1
   7799c:	adc	r5, r8, #0
   779a0:	subs	r2, r2, #1
   779a4:	beq	779c4 <__assert_fail@plt+0x64e0c>
   779a8:	cmp	r5, r7
   779ac:	cmpeq	r4, r6
   779b0:	bcs	77988 <__assert_fail@plt+0x64dd0>
   779b4:	adds	r4, r4, r4
   779b8:	adc	r5, r5, r5
   779bc:	subs	r2, r2, #1
   779c0:	bne	779a8 <__assert_fail@plt+0x64df0>
   779c4:	lsr	r3, r4, ip
   779c8:	orr	r3, r3, r5, lsl fp
   779cc:	lsr	r2, r5, ip
   779d0:	orr	r3, r3, r5, lsr sl
   779d4:	adds	r0, r0, r4
   779d8:	mov	r4, r3
   779dc:	lsl	r3, r2, ip
   779e0:	orr	r3, r3, r4, lsl sl
   779e4:	lsl	ip, r4, ip
   779e8:	orr	r3, r3, r4, lsr fp
   779ec:	adc	r1, r1, r5
   779f0:	subs	r0, r0, ip
   779f4:	mov	r5, r2
   779f8:	sbc	r1, r1, r3
   779fc:	cmp	lr, #0
   77a00:	strdne	r4, [lr]
   77a04:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   77a08:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   77a0c:	mov	r7, r0
   77a10:	ldr	r6, [pc, #72]	; 77a60 <__assert_fail@plt+0x64ea8>
   77a14:	ldr	r5, [pc, #72]	; 77a64 <__assert_fail@plt+0x64eac>
   77a18:	add	r6, pc, r6
   77a1c:	add	r5, pc, r5
   77a20:	sub	r6, r6, r5
   77a24:	mov	r8, r1
   77a28:	mov	r9, r2
   77a2c:	bl	1240c <pthread_mutex_unlock@plt-0x20>
   77a30:	asrs	r6, r6, #2
   77a34:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   77a38:	mov	r4, #0
   77a3c:	add	r4, r4, #1
   77a40:	ldr	r3, [r5], #4
   77a44:	mov	r2, r9
   77a48:	mov	r1, r8
   77a4c:	mov	r0, r7
   77a50:	blx	r3
   77a54:	cmp	r6, r4
   77a58:	bne	77a3c <__assert_fail@plt+0x64e84>
   77a5c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   77a60:	ldrdeq	r7, [r1], -ip
   77a64:	ldrdeq	r7, [r1], -r4
   77a68:	bx	lr
   77a6c:	ldr	r3, [pc, #12]	; 77a80 <__assert_fail@plt+0x64ec8>
   77a70:	mov	r1, #0
   77a74:	add	r3, pc, r3
   77a78:	ldr	r2, [r3]
   77a7c:	b	128f4 <__cxa_atexit@plt>
   77a80:	andeq	r7, r1, r0, lsr #16
   77a84:	mov	r2, r1
   77a88:	mov	r1, r0
   77a8c:	mov	r0, #3
   77a90:	b	12b1c <__xstat64@plt>
   77a94:	mov	r2, r1
   77a98:	mov	r1, r0
   77a9c:	mov	r0, #3
   77aa0:	b	126e4 <__fxstat64@plt>
   77aa4:	mov	r2, r1
   77aa8:	mov	r1, r0
   77aac:	mov	r0, #3
   77ab0:	b	12b7c <__lxstat64@plt>
   77ab4:	push	{lr}		; (str lr, [sp, #-4]!)
   77ab8:	sub	sp, sp, #12
   77abc:	str	r3, [sp]
   77ac0:	mov	r3, r2
   77ac4:	mov	r2, r1
   77ac8:	mov	r1, r0
   77acc:	mov	r0, #3
   77ad0:	bl	126b4 <__fxstatat64@plt>
   77ad4:	add	sp, sp, #12
   77ad8:	pop	{pc}		; (ldr pc, [sp], #4)

Disassembly of section .fini:

00077adc <.fini>:
   77adc:	push	{r3, lr}
   77ae0:	pop	{r3, pc}
