
../repos/coreutils/src/basename:     file format elf32-littlearm


Disassembly of section .init:

00010b1c <.init>:
   10b1c:	push	{r3, lr}
   10b20:	bl	10d94 <putchar_unlocked@plt+0x48>
   10b24:	pop	{r3, pc}

Disassembly of section .plt:

00010b28 <calloc@plt-0x14>:
   10b28:	push	{lr}		; (str lr, [sp, #-4]!)
   10b2c:	ldr	lr, [pc, #4]	; 10b38 <calloc@plt-0x4>
   10b30:	add	lr, pc, lr
   10b34:	ldr	pc, [lr, #8]!
   10b38:	andeq	r7, r1, r8, asr #9

00010b3c <calloc@plt>:
   10b3c:	add	ip, pc, #0, 12
   10b40:	add	ip, ip, #94208	; 0x17000
   10b44:	ldr	pc, [ip, #1224]!	; 0x4c8

00010b48 <fputs_unlocked@plt>:
   10b48:	add	ip, pc, #0, 12
   10b4c:	add	ip, ip, #94208	; 0x17000
   10b50:	ldr	pc, [ip, #1216]!	; 0x4c0

00010b54 <raise@plt>:
   10b54:	add	ip, pc, #0, 12
   10b58:	add	ip, ip, #94208	; 0x17000
   10b5c:	ldr	pc, [ip, #1208]!	; 0x4b8

00010b60 <strcmp@plt>:
   10b60:	add	ip, pc, #0, 12
   10b64:	add	ip, ip, #94208	; 0x17000
   10b68:	ldr	pc, [ip, #1200]!	; 0x4b0

00010b6c <printf@plt>:
   10b6c:	add	ip, pc, #0, 12
   10b70:	add	ip, ip, #94208	; 0x17000
   10b74:	ldr	pc, [ip, #1192]!	; 0x4a8

00010b78 <fflush@plt>:
   10b78:	add	ip, pc, #0, 12
   10b7c:	add	ip, ip, #94208	; 0x17000
   10b80:	ldr	pc, [ip, #1184]!	; 0x4a0

00010b84 <free@plt>:
   10b84:	add	ip, pc, #0, 12
   10b88:	add	ip, ip, #94208	; 0x17000
   10b8c:	ldr	pc, [ip, #1176]!	; 0x498

00010b90 <_exit@plt>:
   10b90:	add	ip, pc, #0, 12
   10b94:	add	ip, ip, #94208	; 0x17000
   10b98:	ldr	pc, [ip, #1168]!	; 0x490

00010b9c <memcpy@plt>:
   10b9c:	add	ip, pc, #0, 12
   10ba0:	add	ip, ip, #94208	; 0x17000
   10ba4:	ldr	pc, [ip, #1160]!	; 0x488

00010ba8 <mbsinit@plt>:
   10ba8:	add	ip, pc, #0, 12
   10bac:	add	ip, ip, #94208	; 0x17000
   10bb0:	ldr	pc, [ip, #1152]!	; 0x480

00010bb4 <memcmp@plt>:
   10bb4:	add	ip, pc, #0, 12
   10bb8:	add	ip, ip, #94208	; 0x17000
   10bbc:	ldr	pc, [ip, #1144]!	; 0x478

00010bc0 <fputc_unlocked@plt>:
   10bc0:	add	ip, pc, #0, 12
   10bc4:	add	ip, ip, #94208	; 0x17000
   10bc8:	ldr	pc, [ip, #1136]!	; 0x470

00010bcc <realloc@plt>:
   10bcc:	add	ip, pc, #0, 12
   10bd0:	add	ip, ip, #94208	; 0x17000
   10bd4:	ldr	pc, [ip, #1128]!	; 0x468

00010bd8 <textdomain@plt>:
   10bd8:	add	ip, pc, #0, 12
   10bdc:	add	ip, ip, #94208	; 0x17000
   10be0:	ldr	pc, [ip, #1120]!	; 0x460

00010be4 <iswprint@plt>:
   10be4:	add	ip, pc, #0, 12
   10be8:	add	ip, ip, #94208	; 0x17000
   10bec:	ldr	pc, [ip, #1112]!	; 0x458

00010bf0 <fwrite@plt>:
   10bf0:	add	ip, pc, #0, 12
   10bf4:	add	ip, ip, #94208	; 0x17000
   10bf8:	ldr	pc, [ip, #1104]!	; 0x450

00010bfc <lseek64@plt>:
   10bfc:	add	ip, pc, #0, 12
   10c00:	add	ip, ip, #94208	; 0x17000
   10c04:	ldr	pc, [ip, #1096]!	; 0x448

00010c08 <__ctype_get_mb_cur_max@plt>:
   10c08:	add	ip, pc, #0, 12
   10c0c:	add	ip, ip, #94208	; 0x17000
   10c10:	ldr	pc, [ip, #1088]!	; 0x440

00010c14 <__fpending@plt>:
   10c14:	add	ip, pc, #0, 12
   10c18:	add	ip, ip, #94208	; 0x17000
   10c1c:	ldr	pc, [ip, #1080]!	; 0x438

00010c20 <ferror_unlocked@plt>:
   10c20:	add	ip, pc, #0, 12
   10c24:	add	ip, ip, #94208	; 0x17000
   10c28:	ldr	pc, [ip, #1072]!	; 0x430

00010c2c <mbrtowc@plt>:
   10c2c:	add	ip, pc, #0, 12
   10c30:	add	ip, ip, #94208	; 0x17000
   10c34:	ldr	pc, [ip, #1064]!	; 0x428

00010c38 <error@plt>:
   10c38:	add	ip, pc, #0, 12
   10c3c:	add	ip, ip, #94208	; 0x17000
   10c40:	ldr	pc, [ip, #1056]!	; 0x420

00010c44 <malloc@plt>:
   10c44:	add	ip, pc, #0, 12
   10c48:	add	ip, ip, #94208	; 0x17000
   10c4c:	ldr	pc, [ip, #1048]!	; 0x418

00010c50 <__libc_start_main@plt>:
   10c50:	add	ip, pc, #0, 12
   10c54:	add	ip, ip, #94208	; 0x17000
   10c58:	ldr	pc, [ip, #1040]!	; 0x410

00010c5c <__freading@plt>:
   10c5c:	add	ip, pc, #0, 12
   10c60:	add	ip, ip, #94208	; 0x17000
   10c64:	ldr	pc, [ip, #1032]!	; 0x408

00010c68 <__gmon_start__@plt>:
   10c68:	add	ip, pc, #0, 12
   10c6c:	add	ip, ip, #94208	; 0x17000
   10c70:	ldr	pc, [ip, #1024]!	; 0x400

00010c74 <getopt_long@plt>:
   10c74:	add	ip, pc, #0, 12
   10c78:	add	ip, ip, #94208	; 0x17000
   10c7c:	ldr	pc, [ip, #1016]!	; 0x3f8

00010c80 <__ctype_b_loc@plt>:
   10c80:	add	ip, pc, #0, 12
   10c84:	add	ip, ip, #94208	; 0x17000
   10c88:	ldr	pc, [ip, #1008]!	; 0x3f0

00010c8c <exit@plt>:
   10c8c:	add	ip, pc, #0, 12
   10c90:	add	ip, ip, #94208	; 0x17000
   10c94:	ldr	pc, [ip, #1000]!	; 0x3e8

00010c98 <gettext@plt>:
   10c98:	add	ip, pc, #0, 12
   10c9c:	add	ip, ip, #94208	; 0x17000
   10ca0:	ldr	pc, [ip, #992]!	; 0x3e0

00010ca4 <strlen@plt>:
   10ca4:	add	ip, pc, #0, 12
   10ca8:	add	ip, ip, #94208	; 0x17000
   10cac:	ldr	pc, [ip, #984]!	; 0x3d8

00010cb0 <fprintf@plt>:
   10cb0:	add	ip, pc, #0, 12
   10cb4:	add	ip, ip, #94208	; 0x17000
   10cb8:	ldr	pc, [ip, #976]!	; 0x3d0

00010cbc <__errno_location@plt>:
   10cbc:	add	ip, pc, #0, 12
   10cc0:	add	ip, ip, #94208	; 0x17000
   10cc4:	ldr	pc, [ip, #968]!	; 0x3c8

00010cc8 <__cxa_atexit@plt>:
   10cc8:	add	ip, pc, #0, 12
   10ccc:	add	ip, ip, #94208	; 0x17000
   10cd0:	ldr	pc, [ip, #960]!	; 0x3c0

00010cd4 <memset@plt>:
   10cd4:	add	ip, pc, #0, 12
   10cd8:	add	ip, ip, #94208	; 0x17000
   10cdc:	ldr	pc, [ip, #952]!	; 0x3b8

00010ce0 <fileno@plt>:
   10ce0:	add	ip, pc, #0, 12
   10ce4:	add	ip, ip, #94208	; 0x17000
   10ce8:	ldr	pc, [ip, #944]!	; 0x3b0

00010cec <fclose@plt>:
   10cec:	add	ip, pc, #0, 12
   10cf0:	add	ip, ip, #94208	; 0x17000
   10cf4:	ldr	pc, [ip, #936]!	; 0x3a8

00010cf8 <fseeko64@plt>:
   10cf8:	add	ip, pc, #0, 12
   10cfc:	add	ip, ip, #94208	; 0x17000
   10d00:	ldr	pc, [ip, #928]!	; 0x3a0

00010d04 <setlocale@plt>:
   10d04:	add	ip, pc, #0, 12
   10d08:	add	ip, ip, #94208	; 0x17000
   10d0c:	ldr	pc, [ip, #920]!	; 0x398

00010d10 <strrchr@plt>:
   10d10:	add	ip, pc, #0, 12
   10d14:	add	ip, ip, #94208	; 0x17000
   10d18:	ldr	pc, [ip, #912]!	; 0x390

00010d1c <nl_langinfo@plt>:
   10d1c:	add	ip, pc, #0, 12
   10d20:	add	ip, ip, #94208	; 0x17000
   10d24:	ldr	pc, [ip, #904]!	; 0x388

00010d28 <bindtextdomain@plt>:
   10d28:	add	ip, pc, #0, 12
   10d2c:	add	ip, ip, #94208	; 0x17000
   10d30:	ldr	pc, [ip, #896]!	; 0x380

00010d34 <strncmp@plt>:
   10d34:	add	ip, pc, #0, 12
   10d38:	add	ip, ip, #94208	; 0x17000
   10d3c:	ldr	pc, [ip, #888]!	; 0x378

00010d40 <abort@plt>:
   10d40:	add	ip, pc, #0, 12
   10d44:	add	ip, ip, #94208	; 0x17000
   10d48:	ldr	pc, [ip, #880]!	; 0x370

00010d4c <putchar_unlocked@plt>:
   10d4c:	add	ip, pc, #0, 12
   10d50:	add	ip, ip, #94208	; 0x17000
   10d54:	ldr	pc, [ip, #872]!	; 0x368

Disassembly of section .text:

00010d58 <.text>:
   10d58:	mov	fp, #0
   10d5c:	mov	lr, #0
   10d60:	pop	{r1}		; (ldr r1, [sp], #4)
   10d64:	mov	r2, sp
   10d68:	push	{r2}		; (str r2, [sp, #-4]!)
   10d6c:	push	{r0}		; (str r0, [sp, #-4]!)
   10d70:	ldr	ip, [pc, #16]	; 10d88 <putchar_unlocked@plt+0x3c>
   10d74:	push	{ip}		; (str ip, [sp, #-4]!)
   10d78:	ldr	r0, [pc, #12]	; 10d8c <putchar_unlocked@plt+0x40>
   10d7c:	ldr	r3, [pc, #12]	; 10d90 <putchar_unlocked@plt+0x44>
   10d80:	bl	10c50 <__libc_start_main@plt>
   10d84:	bl	10d40 <abort@plt>
   10d88:	muleq	r1, r4, sl
   10d8c:	andeq	r1, r1, r8, lsr #6
   10d90:	andeq	r6, r1, r4, lsr sl
   10d94:	ldr	r3, [pc, #20]	; 10db0 <putchar_unlocked@plt+0x64>
   10d98:	ldr	r2, [pc, #20]	; 10db4 <putchar_unlocked@plt+0x68>
   10d9c:	add	r3, pc, r3
   10da0:	ldr	r2, [r3, r2]
   10da4:	cmp	r2, #0
   10da8:	bxeq	lr
   10dac:	b	10c68 <__gmon_start__@plt>
   10db0:	andeq	r7, r1, ip, asr r2
   10db4:	andeq	r0, r0, r0, asr #1
   10db8:	ldr	r3, [pc, #28]	; 10ddc <putchar_unlocked@plt+0x90>
   10dbc:	ldr	r0, [pc, #28]	; 10de0 <putchar_unlocked@plt+0x94>
   10dc0:	sub	r3, r3, r0
   10dc4:	cmp	r3, #6
   10dc8:	bxls	lr
   10dcc:	ldr	r3, [pc, #16]	; 10de4 <putchar_unlocked@plt+0x98>
   10dd0:	cmp	r3, #0
   10dd4:	bxeq	lr
   10dd8:	bx	r3
   10ddc:	andeq	r8, r2, r7, lsl r1
   10de0:	andeq	r8, r2, r4, lsl r1
   10de4:	andeq	r0, r0, r0
   10de8:	ldr	r1, [pc, #36]	; 10e14 <putchar_unlocked@plt+0xc8>
   10dec:	ldr	r0, [pc, #36]	; 10e18 <putchar_unlocked@plt+0xcc>
   10df0:	sub	r1, r1, r0
   10df4:	asr	r1, r1, #2
   10df8:	add	r1, r1, r1, lsr #31
   10dfc:	asrs	r1, r1, #1
   10e00:	bxeq	lr
   10e04:	ldr	r3, [pc, #16]	; 10e1c <putchar_unlocked@plt+0xd0>
   10e08:	cmp	r3, #0
   10e0c:	bxeq	lr
   10e10:	bx	r3
   10e14:	andeq	r8, r2, r4, lsl r1
   10e18:	andeq	r8, r2, r4, lsl r1
   10e1c:	andeq	r0, r0, r0
   10e20:	push	{r4, lr}
   10e24:	ldr	r4, [pc, #24]	; 10e44 <putchar_unlocked@plt+0xf8>
   10e28:	ldrb	r3, [r4]
   10e2c:	cmp	r3, #0
   10e30:	popne	{r4, pc}
   10e34:	bl	10db8 <putchar_unlocked@plt+0x6c>
   10e38:	mov	r3, #1
   10e3c:	strb	r3, [r4]
   10e40:	pop	{r4, pc}
   10e44:	andeq	r8, r2, r4, lsr r1
   10e48:	ldr	r0, [pc, #40]	; 10e78 <putchar_unlocked@plt+0x12c>
   10e4c:	ldr	r3, [r0]
   10e50:	cmp	r3, #0
   10e54:	bne	10e5c <putchar_unlocked@plt+0x110>
   10e58:	b	10de8 <putchar_unlocked@plt+0x9c>
   10e5c:	ldr	r3, [pc, #24]	; 10e7c <putchar_unlocked@plt+0x130>
   10e60:	cmp	r3, #0
   10e64:	beq	10e58 <putchar_unlocked@plt+0x10c>
   10e68:	push	{r4, lr}
   10e6c:	blx	r3
   10e70:	pop	{r4, lr}
   10e74:	b	10de8 <putchar_unlocked@plt+0x9c>
   10e78:	andeq	r7, r2, r4, lsl pc
   10e7c:	andeq	r0, r0, r0
   10e80:	push	{fp, lr}
   10e84:	add	fp, sp, #4
   10e88:	ldr	r0, [pc, #32]	; 10eb0 <putchar_unlocked@plt+0x164>
   10e8c:	bl	10c98 <gettext@plt>
   10e90:	mov	r2, r0
   10e94:	ldr	r3, [pc, #24]	; 10eb4 <putchar_unlocked@plt+0x168>
   10e98:	ldr	r3, [r3]
   10e9c:	mov	r1, r3
   10ea0:	mov	r0, r2
   10ea4:	bl	10b48 <fputs_unlocked@plt>
   10ea8:	nop			; (mov r0, r0)
   10eac:	pop	{fp, pc}
   10eb0:			; <UNDEFINED> instruction: 0x00016abc
   10eb4:	andeq	r8, r2, ip, lsr #2
   10eb8:	push	{fp, lr}
   10ebc:	add	fp, sp, #4
   10ec0:	sub	sp, sp, #80	; 0x50
   10ec4:	str	r0, [fp, #-80]	; 0xffffffb0
   10ec8:	ldr	r3, [pc, #348]	; 1102c <putchar_unlocked@plt+0x2e0>
   10ecc:	sub	ip, fp, #72	; 0x48
   10ed0:	mov	lr, r3
   10ed4:	ldm	lr!, {r0, r1, r2, r3}
   10ed8:	stmia	ip!, {r0, r1, r2, r3}
   10edc:	ldm	lr!, {r0, r1, r2, r3}
   10ee0:	stmia	ip!, {r0, r1, r2, r3}
   10ee4:	ldm	lr!, {r0, r1, r2, r3}
   10ee8:	stmia	ip!, {r0, r1, r2, r3}
   10eec:	ldm	lr, {r0, r1}
   10ef0:	stm	ip, {r0, r1}
   10ef4:	ldr	r3, [fp, #-80]	; 0xffffffb0
   10ef8:	str	r3, [fp, #-8]
   10efc:	sub	r3, fp, #72	; 0x48
   10f00:	str	r3, [fp, #-12]
   10f04:	b	10f14 <putchar_unlocked@plt+0x1c8>
   10f08:	ldr	r3, [fp, #-12]
   10f0c:	add	r3, r3, #8
   10f10:	str	r3, [fp, #-12]
   10f14:	ldr	r3, [fp, #-12]
   10f18:	ldr	r3, [r3]
   10f1c:	cmp	r3, #0
   10f20:	beq	10f44 <putchar_unlocked@plt+0x1f8>
   10f24:	ldr	r3, [fp, #-12]
   10f28:	ldr	r3, [r3]
   10f2c:	mov	r1, r3
   10f30:	ldr	r0, [fp, #-80]	; 0xffffffb0
   10f34:	bl	10b60 <strcmp@plt>
   10f38:	mov	r3, r0
   10f3c:	cmp	r3, #0
   10f40:	bne	10f08 <putchar_unlocked@plt+0x1bc>
   10f44:	ldr	r3, [fp, #-12]
   10f48:	ldr	r3, [r3, #4]
   10f4c:	cmp	r3, #0
   10f50:	beq	10f60 <putchar_unlocked@plt+0x214>
   10f54:	ldr	r3, [fp, #-12]
   10f58:	ldr	r3, [r3, #4]
   10f5c:	str	r3, [fp, #-8]
   10f60:	ldr	r0, [pc, #200]	; 11030 <putchar_unlocked@plt+0x2e4>
   10f64:	bl	10c98 <gettext@plt>
   10f68:	mov	r3, r0
   10f6c:	ldr	r2, [pc, #192]	; 11034 <putchar_unlocked@plt+0x2e8>
   10f70:	ldr	r1, [pc, #192]	; 11038 <putchar_unlocked@plt+0x2ec>
   10f74:	mov	r0, r3
   10f78:	bl	10b6c <printf@plt>
   10f7c:	mov	r1, #0
   10f80:	mov	r0, #5
   10f84:	bl	10d04 <setlocale@plt>
   10f88:	str	r0, [fp, #-16]
   10f8c:	ldr	r3, [fp, #-16]
   10f90:	cmp	r3, #0
   10f94:	beq	10fd4 <putchar_unlocked@plt+0x288>
   10f98:	mov	r2, #3
   10f9c:	ldr	r1, [pc, #152]	; 1103c <putchar_unlocked@plt+0x2f0>
   10fa0:	ldr	r0, [fp, #-16]
   10fa4:	bl	10d34 <strncmp@plt>
   10fa8:	mov	r3, r0
   10fac:	cmp	r3, #0
   10fb0:	beq	10fd4 <putchar_unlocked@plt+0x288>
   10fb4:	ldr	r0, [pc, #132]	; 11040 <putchar_unlocked@plt+0x2f4>
   10fb8:	bl	10c98 <gettext@plt>
   10fbc:	mov	r2, r0
   10fc0:	ldr	r3, [pc, #124]	; 11044 <putchar_unlocked@plt+0x2f8>
   10fc4:	ldr	r3, [r3]
   10fc8:	mov	r1, r3
   10fcc:	mov	r0, r2
   10fd0:	bl	10b48 <fputs_unlocked@plt>
   10fd4:	ldr	r0, [pc, #108]	; 11048 <putchar_unlocked@plt+0x2fc>
   10fd8:	bl	10c98 <gettext@plt>
   10fdc:	mov	r3, r0
   10fe0:	ldr	r2, [fp, #-80]	; 0xffffffb0
   10fe4:	ldr	r1, [pc, #72]	; 11034 <putchar_unlocked@plt+0x2e8>
   10fe8:	mov	r0, r3
   10fec:	bl	10b6c <printf@plt>
   10ff0:	ldr	r0, [pc, #84]	; 1104c <putchar_unlocked@plt+0x300>
   10ff4:	bl	10c98 <gettext@plt>
   10ff8:	ldr	r2, [fp, #-8]
   10ffc:	ldr	r3, [fp, #-80]	; 0xffffffb0
   11000:	cmp	r2, r3
   11004:	bne	11010 <putchar_unlocked@plt+0x2c4>
   11008:	ldr	r3, [pc, #64]	; 11050 <putchar_unlocked@plt+0x304>
   1100c:	b	11014 <putchar_unlocked@plt+0x2c8>
   11010:	ldr	r3, [pc, #60]	; 11054 <putchar_unlocked@plt+0x308>
   11014:	mov	r2, r3
   11018:	ldr	r1, [fp, #-8]
   1101c:	bl	10b6c <printf@plt>
   11020:	nop			; (mov r0, r0)
   11024:	sub	sp, fp, #4
   11028:	pop	{fp, pc}
   1102c:	andeq	r6, r1, ip, ror ip
   11030:	andeq	r6, r1, r8, lsl #22
   11034:	andeq	r6, r1, r0, lsr #22
   11038:	andeq	r6, r1, r8, asr #22
   1103c:	andeq	r6, r1, r8, asr fp
   11040:	andeq	r6, r1, ip, asr fp
   11044:	andeq	r8, r2, ip, lsr #2
   11048:	andeq	r6, r1, r4, lsr #23
   1104c:	andeq	r6, r1, r0, asr #23
   11050:	strdeq	r6, [r1], -r4
   11054:	andeq	r6, r1, r0, lsl #24
   11058:	push	{r4, fp, lr}
   1105c:	add	fp, sp, #8
   11060:	sub	sp, sp, #20
   11064:	str	r0, [fp, #-16]
   11068:	ldr	r3, [fp, #-16]
   1106c:	cmp	r3, #0
   11070:	beq	110a0 <putchar_unlocked@plt+0x354>
   11074:	ldr	r3, [pc, #276]	; 11190 <putchar_unlocked@plt+0x444>
   11078:	ldr	r4, [r3]
   1107c:	ldr	r0, [pc, #272]	; 11194 <putchar_unlocked@plt+0x448>
   11080:	bl	10c98 <gettext@plt>
   11084:	mov	r1, r0
   11088:	ldr	r3, [pc, #264]	; 11198 <putchar_unlocked@plt+0x44c>
   1108c:	ldr	r3, [r3]
   11090:	mov	r2, r3
   11094:	mov	r0, r4
   11098:	bl	10cb0 <fprintf@plt>
   1109c:	b	11188 <putchar_unlocked@plt+0x43c>
   110a0:	ldr	r0, [pc, #244]	; 1119c <putchar_unlocked@plt+0x450>
   110a4:	bl	10c98 <gettext@plt>
   110a8:	ldr	r3, [pc, #232]	; 11198 <putchar_unlocked@plt+0x44c>
   110ac:	ldr	r1, [r3]
   110b0:	ldr	r3, [pc, #224]	; 11198 <putchar_unlocked@plt+0x44c>
   110b4:	ldr	r3, [r3]
   110b8:	mov	r2, r3
   110bc:	bl	10b6c <printf@plt>
   110c0:	ldr	r0, [pc, #216]	; 111a0 <putchar_unlocked@plt+0x454>
   110c4:	bl	10c98 <gettext@plt>
   110c8:	mov	r2, r0
   110cc:	ldr	r3, [pc, #208]	; 111a4 <putchar_unlocked@plt+0x458>
   110d0:	ldr	r3, [r3]
   110d4:	mov	r1, r3
   110d8:	mov	r0, r2
   110dc:	bl	10b48 <fputs_unlocked@plt>
   110e0:	bl	10e80 <putchar_unlocked@plt+0x134>
   110e4:	ldr	r0, [pc, #188]	; 111a8 <putchar_unlocked@plt+0x45c>
   110e8:	bl	10c98 <gettext@plt>
   110ec:	mov	r2, r0
   110f0:	ldr	r3, [pc, #172]	; 111a4 <putchar_unlocked@plt+0x458>
   110f4:	ldr	r3, [r3]
   110f8:	mov	r1, r3
   110fc:	mov	r0, r2
   11100:	bl	10b48 <fputs_unlocked@plt>
   11104:	ldr	r0, [pc, #160]	; 111ac <putchar_unlocked@plt+0x460>
   11108:	bl	10c98 <gettext@plt>
   1110c:	mov	r2, r0
   11110:	ldr	r3, [pc, #140]	; 111a4 <putchar_unlocked@plt+0x458>
   11114:	ldr	r3, [r3]
   11118:	mov	r1, r3
   1111c:	mov	r0, r2
   11120:	bl	10b48 <fputs_unlocked@plt>
   11124:	ldr	r0, [pc, #132]	; 111b0 <putchar_unlocked@plt+0x464>
   11128:	bl	10c98 <gettext@plt>
   1112c:	mov	r2, r0
   11130:	ldr	r3, [pc, #108]	; 111a4 <putchar_unlocked@plt+0x458>
   11134:	ldr	r3, [r3]
   11138:	mov	r1, r3
   1113c:	mov	r0, r2
   11140:	bl	10b48 <fputs_unlocked@plt>
   11144:	ldr	r0, [pc, #104]	; 111b4 <putchar_unlocked@plt+0x468>
   11148:	bl	10c98 <gettext@plt>
   1114c:	mov	ip, r0
   11150:	ldr	r3, [pc, #64]	; 11198 <putchar_unlocked@plt+0x44c>
   11154:	ldr	r1, [r3]
   11158:	ldr	r3, [pc, #56]	; 11198 <putchar_unlocked@plt+0x44c>
   1115c:	ldr	r2, [r3]
   11160:	ldr	r3, [pc, #48]	; 11198 <putchar_unlocked@plt+0x44c>
   11164:	ldr	r0, [r3]
   11168:	ldr	r3, [pc, #40]	; 11198 <putchar_unlocked@plt+0x44c>
   1116c:	ldr	r3, [r3]
   11170:	str	r3, [sp]
   11174:	mov	r3, r0
   11178:	mov	r0, ip
   1117c:	bl	10b6c <printf@plt>
   11180:	ldr	r0, [pc, #48]	; 111b8 <putchar_unlocked@plt+0x46c>
   11184:	bl	10eb8 <putchar_unlocked@plt+0x16c>
   11188:	ldr	r0, [fp, #-16]
   1118c:	bl	10c8c <exit@plt>
   11190:	andeq	r8, r2, r8, lsr #2
   11194:	andeq	r6, r1, r0, asr #26
   11198:	andeq	r8, r2, r0, asr #2
   1119c:	andeq	r6, r1, r8, ror #26
   111a0:	andeq	r6, r1, r0, lsr #27
   111a4:	andeq	r8, r2, ip, lsr #2
   111a8:	andeq	r6, r1, r8, lsl #28
   111ac:	ldrdeq	r6, [r1], -r4
   111b0:	andeq	r6, r1, r4, lsl #30
   111b4:	andeq	r6, r1, ip, lsr pc
   111b8:	strdeq	r6, [r1], -r8
   111bc:	push	{fp, lr}
   111c0:	add	fp, sp, #4
   111c4:	sub	sp, sp, #16
   111c8:	str	r0, [fp, #-16]
   111cc:	str	r1, [fp, #-20]	; 0xffffffec
   111d0:	ldr	r0, [fp, #-16]
   111d4:	bl	10ca4 <strlen@plt>
   111d8:	mov	r2, r0
   111dc:	ldr	r3, [fp, #-16]
   111e0:	add	r3, r3, r2
   111e4:	str	r3, [fp, #-8]
   111e8:	ldr	r0, [fp, #-20]	; 0xffffffec
   111ec:	bl	10ca4 <strlen@plt>
   111f0:	mov	r2, r0
   111f4:	ldr	r3, [fp, #-20]	; 0xffffffec
   111f8:	add	r3, r3, r2
   111fc:	str	r3, [fp, #-12]
   11200:	b	11234 <putchar_unlocked@plt+0x4e8>
   11204:	ldr	r3, [fp, #-8]
   11208:	sub	r3, r3, #1
   1120c:	str	r3, [fp, #-8]
   11210:	ldr	r3, [fp, #-8]
   11214:	ldrb	r2, [r3]
   11218:	ldr	r3, [fp, #-12]
   1121c:	sub	r3, r3, #1
   11220:	str	r3, [fp, #-12]
   11224:	ldr	r3, [fp, #-12]
   11228:	ldrb	r3, [r3]
   1122c:	cmp	r2, r3
   11230:	bne	11274 <putchar_unlocked@plt+0x528>
   11234:	ldr	r2, [fp, #-8]
   11238:	ldr	r3, [fp, #-16]
   1123c:	cmp	r2, r3
   11240:	bls	11254 <putchar_unlocked@plt+0x508>
   11244:	ldr	r2, [fp, #-12]
   11248:	ldr	r3, [fp, #-20]	; 0xffffffec
   1124c:	cmp	r2, r3
   11250:	bhi	11204 <putchar_unlocked@plt+0x4b8>
   11254:	ldr	r2, [fp, #-8]
   11258:	ldr	r3, [fp, #-16]
   1125c:	cmp	r2, r3
   11260:	bls	11278 <putchar_unlocked@plt+0x52c>
   11264:	ldr	r3, [fp, #-8]
   11268:	mov	r2, #0
   1126c:	strb	r2, [r3]
   11270:	b	11278 <putchar_unlocked@plt+0x52c>
   11274:	nop			; (mov r0, r0)
   11278:	sub	sp, fp, #4
   1127c:	pop	{fp, pc}
   11280:	push	{fp, lr}
   11284:	add	fp, sp, #4
   11288:	sub	sp, sp, #24
   1128c:	str	r0, [fp, #-16]
   11290:	str	r1, [fp, #-20]	; 0xffffffec
   11294:	mov	r3, r2
   11298:	strb	r3, [fp, #-21]	; 0xffffffeb
   1129c:	ldr	r0, [fp, #-16]
   112a0:	bl	117c4 <putchar_unlocked@plt+0xa78>
   112a4:	mov	r3, r0
   112a8:	str	r3, [fp, #-8]
   112ac:	ldr	r0, [fp, #-8]
   112b0:	bl	118f0 <putchar_unlocked@plt+0xba4>
   112b4:	ldr	r3, [fp, #-20]	; 0xffffffec
   112b8:	cmp	r3, #0
   112bc:	beq	112dc <putchar_unlocked@plt+0x590>
   112c0:	ldr	r3, [fp, #-8]
   112c4:	ldrb	r3, [r3]
   112c8:	cmp	r3, #47	; 0x2f
   112cc:	beq	112dc <putchar_unlocked@plt+0x590>
   112d0:	ldr	r1, [fp, #-20]	; 0xffffffec
   112d4:	ldr	r0, [fp, #-8]
   112d8:	bl	111bc <putchar_unlocked@plt+0x470>
   112dc:	ldr	r3, [pc, #64]	; 11324 <putchar_unlocked@plt+0x5d8>
   112e0:	ldr	r3, [r3]
   112e4:	mov	r1, r3
   112e8:	ldr	r0, [fp, #-8]
   112ec:	bl	10b48 <fputs_unlocked@plt>
   112f0:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   112f4:	cmp	r3, #0
   112f8:	beq	11304 <putchar_unlocked@plt+0x5b8>
   112fc:	mov	r3, #0
   11300:	b	11308 <putchar_unlocked@plt+0x5bc>
   11304:	mov	r3, #10
   11308:	mov	r0, r3
   1130c:	bl	10d4c <putchar_unlocked@plt>
   11310:	ldr	r0, [fp, #-8]
   11314:	bl	11970 <putchar_unlocked@plt+0xc24>
   11318:	nop			; (mov r0, r0)
   1131c:	sub	sp, fp, #4
   11320:	pop	{fp, pc}
   11324:	andeq	r8, r2, ip, lsr #2
   11328:	push	{r4, fp, lr}
   1132c:	add	fp, sp, #8
   11330:	sub	sp, sp, #36	; 0x24
   11334:	str	r0, [fp, #-32]	; 0xffffffe0
   11338:	str	r1, [fp, #-36]	; 0xffffffdc
   1133c:	mov	r3, #0
   11340:	strb	r3, [fp, #-13]
   11344:	mov	r3, #0
   11348:	strb	r3, [fp, #-14]
   1134c:	mov	r3, #0
   11350:	str	r3, [fp, #-20]	; 0xffffffec
   11354:	ldr	r3, [fp, #-36]	; 0xffffffdc
   11358:	ldr	r3, [r3]
   1135c:	mov	r0, r3
   11360:	bl	119fc <putchar_unlocked@plt+0xcb0>
   11364:	ldr	r1, [pc, #644]	; 115f0 <putchar_unlocked@plt+0x8a4>
   11368:	mov	r0, #6
   1136c:	bl	10d04 <setlocale@plt>
   11370:	ldr	r1, [pc, #636]	; 115f4 <putchar_unlocked@plt+0x8a8>
   11374:	ldr	r0, [pc, #636]	; 115f8 <putchar_unlocked@plt+0x8ac>
   11378:	bl	10d28 <bindtextdomain@plt>
   1137c:	ldr	r0, [pc, #628]	; 115f8 <putchar_unlocked@plt+0x8ac>
   11380:	bl	10bd8 <textdomain@plt>
   11384:	ldr	r0, [pc, #624]	; 115fc <putchar_unlocked@plt+0x8b0>
   11388:	bl	16a98 <putchar_unlocked@plt+0x5d4c>
   1138c:	mov	r3, #0
   11390:	str	r3, [sp]
   11394:	ldr	r3, [pc, #612]	; 11600 <putchar_unlocked@plt+0x8b4>
   11398:	ldr	r2, [pc, #612]	; 11604 <putchar_unlocked@plt+0x8b8>
   1139c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   113a0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   113a4:	bl	10c74 <getopt_long@plt>
   113a8:	str	r0, [fp, #-24]	; 0xffffffe8
   113ac:	ldr	r3, [fp, #-24]	; 0xffffffe8
   113b0:	cmn	r3, #1
   113b4:	beq	11464 <putchar_unlocked@plt+0x718>
   113b8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   113bc:	cmp	r3, #97	; 0x61
   113c0:	beq	11400 <putchar_unlocked@plt+0x6b4>
   113c4:	cmp	r3, #97	; 0x61
   113c8:	bgt	113e0 <putchar_unlocked@plt+0x694>
   113cc:	cmn	r3, #3
   113d0:	beq	11420 <putchar_unlocked@plt+0x6d4>
   113d4:	cmn	r3, #2
   113d8:	beq	11418 <putchar_unlocked@plt+0x6cc>
   113dc:	b	11458 <putchar_unlocked@plt+0x70c>
   113e0:	cmp	r3, #115	; 0x73
   113e4:	beq	113f4 <putchar_unlocked@plt+0x6a8>
   113e8:	cmp	r3, #122	; 0x7a
   113ec:	beq	1140c <putchar_unlocked@plt+0x6c0>
   113f0:	b	11458 <putchar_unlocked@plt+0x70c>
   113f4:	ldr	r3, [pc, #524]	; 11608 <putchar_unlocked@plt+0x8bc>
   113f8:	ldr	r3, [r3]
   113fc:	str	r3, [fp, #-20]	; 0xffffffec
   11400:	mov	r3, #1
   11404:	strb	r3, [fp, #-13]
   11408:	b	11460 <putchar_unlocked@plt+0x714>
   1140c:	mov	r3, #1
   11410:	strb	r3, [fp, #-14]
   11414:	b	11460 <putchar_unlocked@plt+0x714>
   11418:	mov	r0, #0
   1141c:	bl	11058 <putchar_unlocked@plt+0x30c>
   11420:	ldr	r3, [pc, #484]	; 1160c <putchar_unlocked@plt+0x8c0>
   11424:	ldr	r0, [r3]
   11428:	ldr	r3, [pc, #480]	; 11610 <putchar_unlocked@plt+0x8c4>
   1142c:	ldr	r2, [r3]
   11430:	mov	r3, #0
   11434:	str	r3, [sp, #4]
   11438:	ldr	r3, [pc, #468]	; 11614 <putchar_unlocked@plt+0x8c8>
   1143c:	str	r3, [sp]
   11440:	mov	r3, r2
   11444:	ldr	r2, [pc, #460]	; 11618 <putchar_unlocked@plt+0x8cc>
   11448:	ldr	r1, [pc, #460]	; 1161c <putchar_unlocked@plt+0x8d0>
   1144c:	bl	147f8 <putchar_unlocked@plt+0x3aac>
   11450:	mov	r0, #0
   11454:	bl	10c8c <exit@plt>
   11458:	mov	r0, #1
   1145c:	bl	11058 <putchar_unlocked@plt+0x30c>
   11460:	b	1138c <putchar_unlocked@plt+0x640>
   11464:	nop			; (mov r0, r0)
   11468:	ldr	r3, [pc, #432]	; 11620 <putchar_unlocked@plt+0x8d4>
   1146c:	ldr	r3, [r3]
   11470:	add	r2, r3, #1
   11474:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11478:	cmp	r2, r3
   1147c:	ble	114a4 <putchar_unlocked@plt+0x758>
   11480:	ldr	r0, [pc, #412]	; 11624 <putchar_unlocked@plt+0x8d8>
   11484:	bl	10c98 <gettext@plt>
   11488:	mov	r3, r0
   1148c:	mov	r2, r3
   11490:	mov	r1, #0
   11494:	mov	r0, #0
   11498:	bl	10c38 <error@plt>
   1149c:	mov	r0, #1
   114a0:	bl	11058 <putchar_unlocked@plt+0x30c>
   114a4:	ldrb	r3, [fp, #-13]
   114a8:	eor	r3, r3, #1
   114ac:	uxtb	r3, r3
   114b0:	cmp	r3, #0
   114b4:	beq	1151c <putchar_unlocked@plt+0x7d0>
   114b8:	ldr	r3, [pc, #352]	; 11620 <putchar_unlocked@plt+0x8d4>
   114bc:	ldr	r3, [r3]
   114c0:	add	r2, r3, #2
   114c4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   114c8:	cmp	r2, r3
   114cc:	bge	1151c <putchar_unlocked@plt+0x7d0>
   114d0:	ldr	r0, [pc, #336]	; 11628 <putchar_unlocked@plt+0x8dc>
   114d4:	bl	10c98 <gettext@plt>
   114d8:	mov	r4, r0
   114dc:	ldr	r3, [pc, #316]	; 11620 <putchar_unlocked@plt+0x8d4>
   114e0:	ldr	r3, [r3]
   114e4:	add	r3, r3, #2
   114e8:	lsl	r3, r3, #2
   114ec:	ldr	r2, [fp, #-36]	; 0xffffffdc
   114f0:	add	r3, r2, r3
   114f4:	ldr	r3, [r3]
   114f8:	mov	r0, r3
   114fc:	bl	1412c <putchar_unlocked@plt+0x33e0>
   11500:	mov	r3, r0
   11504:	mov	r2, r4
   11508:	mov	r1, #0
   1150c:	mov	r0, #0
   11510:	bl	10c38 <error@plt>
   11514:	mov	r0, #1
   11518:	bl	11058 <putchar_unlocked@plt+0x30c>
   1151c:	ldrb	r3, [fp, #-13]
   11520:	cmp	r3, #0
   11524:	beq	11580 <putchar_unlocked@plt+0x834>
   11528:	b	11568 <putchar_unlocked@plt+0x81c>
   1152c:	ldr	r3, [pc, #236]	; 11620 <putchar_unlocked@plt+0x8d4>
   11530:	ldr	r3, [r3]
   11534:	lsl	r3, r3, #2
   11538:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1153c:	add	r3, r2, r3
   11540:	ldr	r3, [r3]
   11544:	ldrb	r2, [fp, #-14]
   11548:	ldr	r1, [fp, #-20]	; 0xffffffec
   1154c:	mov	r0, r3
   11550:	bl	11280 <putchar_unlocked@plt+0x534>
   11554:	ldr	r3, [pc, #196]	; 11620 <putchar_unlocked@plt+0x8d4>
   11558:	ldr	r3, [r3]
   1155c:	add	r3, r3, #1
   11560:	ldr	r2, [pc, #184]	; 11620 <putchar_unlocked@plt+0x8d4>
   11564:	str	r3, [r2]
   11568:	ldr	r3, [pc, #176]	; 11620 <putchar_unlocked@plt+0x8d4>
   1156c:	ldr	r2, [r3]
   11570:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11574:	cmp	r2, r3
   11578:	blt	1152c <putchar_unlocked@plt+0x7e0>
   1157c:	b	115e0 <putchar_unlocked@plt+0x894>
   11580:	ldr	r3, [pc, #152]	; 11620 <putchar_unlocked@plt+0x8d4>
   11584:	ldr	r3, [r3]
   11588:	lsl	r3, r3, #2
   1158c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   11590:	add	r3, r2, r3
   11594:	ldr	r0, [r3]
   11598:	ldr	r3, [pc, #128]	; 11620 <putchar_unlocked@plt+0x8d4>
   1159c:	ldr	r3, [r3]
   115a0:	add	r2, r3, #2
   115a4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   115a8:	cmp	r2, r3
   115ac:	bne	115d0 <putchar_unlocked@plt+0x884>
   115b0:	ldr	r3, [pc, #104]	; 11620 <putchar_unlocked@plt+0x8d4>
   115b4:	ldr	r3, [r3]
   115b8:	add	r3, r3, #1
   115bc:	lsl	r3, r3, #2
   115c0:	ldr	r2, [fp, #-36]	; 0xffffffdc
   115c4:	add	r3, r2, r3
   115c8:	ldr	r3, [r3]
   115cc:	b	115d4 <putchar_unlocked@plt+0x888>
   115d0:	mov	r3, #0
   115d4:	ldrb	r2, [fp, #-14]
   115d8:	mov	r1, r3
   115dc:	bl	11280 <putchar_unlocked@plt+0x534>
   115e0:	mov	r3, #0
   115e4:	mov	r0, r3
   115e8:	sub	sp, fp, #8
   115ec:	pop	{r4, fp, pc}
   115f0:	andeq	r6, r1, r0, lsl #24
   115f4:	andeq	r7, r1, r4
   115f8:	andeq	r6, r1, r8, lsl ip
   115fc:	muleq	r1, r0, r6
   11600:	andeq	r6, r1, r0, ror #25
   11604:	andeq	r7, r1, ip, lsl r0
   11608:	andeq	r8, r2, r0, lsr r1
   1160c:	andeq	r8, r2, ip, lsr #2
   11610:	andeq	r8, r2, ip, asr #1
   11614:	andeq	r7, r1, r4, lsr #32
   11618:	andeq	r6, r1, r8, asr #22
   1161c:	strdeq	r6, [r1], -r8
   11620:	andeq	r8, r2, r0, lsr #2
   11624:	andeq	r7, r1, r4, lsr r0
   11628:	andeq	r7, r1, r4, asr #32
   1162c:	push	{fp}		; (str fp, [sp, #-4]!)
   11630:	add	fp, sp, #0
   11634:	sub	sp, sp, #12
   11638:	str	r0, [fp, #-8]
   1163c:	ldr	r2, [pc, #20]	; 11658 <putchar_unlocked@plt+0x90c>
   11640:	ldr	r3, [fp, #-8]
   11644:	str	r3, [r2]
   11648:	nop			; (mov r0, r0)
   1164c:	add	sp, fp, #0
   11650:	pop	{fp}		; (ldr fp, [sp], #4)
   11654:	bx	lr
   11658:	andeq	r8, r2, r8, lsr r1
   1165c:	push	{fp}		; (str fp, [sp, #-4]!)
   11660:	add	fp, sp, #0
   11664:	sub	sp, sp, #12
   11668:	mov	r3, r0
   1166c:	strb	r3, [fp, #-5]
   11670:	ldr	r2, [pc, #20]	; 1168c <putchar_unlocked@plt+0x940>
   11674:	ldrb	r3, [fp, #-5]
   11678:	strb	r3, [r2]
   1167c:	nop			; (mov r0, r0)
   11680:	add	sp, fp, #0
   11684:	pop	{fp}		; (ldr fp, [sp], #4)
   11688:	bx	lr
   1168c:	andeq	r8, r2, ip, lsr r1
   11690:	push	{r4, fp, lr}
   11694:	add	fp, sp, #8
   11698:	sub	sp, sp, #20
   1169c:	ldr	r3, [pc, #256]	; 117a4 <putchar_unlocked@plt+0xa58>
   116a0:	ldr	r3, [r3]
   116a4:	mov	r0, r3
   116a8:	bl	15890 <putchar_unlocked@plt+0x4b44>
   116ac:	mov	r3, r0
   116b0:	cmp	r3, #0
   116b4:	beq	1176c <putchar_unlocked@plt+0xa20>
   116b8:	ldr	r3, [pc, #232]	; 117a8 <putchar_unlocked@plt+0xa5c>
   116bc:	ldrb	r3, [r3]
   116c0:	eor	r3, r3, #1
   116c4:	uxtb	r3, r3
   116c8:	cmp	r3, #0
   116cc:	bne	116e4 <putchar_unlocked@plt+0x998>
   116d0:	bl	10cbc <__errno_location@plt>
   116d4:	mov	r3, r0
   116d8:	ldr	r3, [r3]
   116dc:	cmp	r3, #32
   116e0:	beq	1176c <putchar_unlocked@plt+0xa20>
   116e4:	ldr	r0, [pc, #192]	; 117ac <putchar_unlocked@plt+0xa60>
   116e8:	bl	10c98 <gettext@plt>
   116ec:	str	r0, [fp, #-16]
   116f0:	ldr	r3, [pc, #184]	; 117b0 <putchar_unlocked@plt+0xa64>
   116f4:	ldr	r3, [r3]
   116f8:	cmp	r3, #0
   116fc:	beq	11740 <putchar_unlocked@plt+0x9f4>
   11700:	bl	10cbc <__errno_location@plt>
   11704:	mov	r3, r0
   11708:	ldr	r4, [r3]
   1170c:	ldr	r3, [pc, #156]	; 117b0 <putchar_unlocked@plt+0xa64>
   11710:	ldr	r3, [r3]
   11714:	mov	r0, r3
   11718:	bl	13e5c <putchar_unlocked@plt+0x3110>
   1171c:	mov	r2, r0
   11720:	ldr	r3, [fp, #-16]
   11724:	str	r3, [sp]
   11728:	mov	r3, r2
   1172c:	ldr	r2, [pc, #128]	; 117b4 <putchar_unlocked@plt+0xa68>
   11730:	mov	r1, r4
   11734:	mov	r0, #0
   11738:	bl	10c38 <error@plt>
   1173c:	b	1175c <putchar_unlocked@plt+0xa10>
   11740:	bl	10cbc <__errno_location@plt>
   11744:	mov	r3, r0
   11748:	ldr	r1, [r3]
   1174c:	ldr	r3, [fp, #-16]
   11750:	ldr	r2, [pc, #96]	; 117b8 <putchar_unlocked@plt+0xa6c>
   11754:	mov	r0, #0
   11758:	bl	10c38 <error@plt>
   1175c:	ldr	r3, [pc, #88]	; 117bc <putchar_unlocked@plt+0xa70>
   11760:	ldr	r3, [r3]
   11764:	mov	r0, r3
   11768:	bl	10b90 <_exit@plt>
   1176c:	ldr	r3, [pc, #76]	; 117c0 <putchar_unlocked@plt+0xa74>
   11770:	ldr	r3, [r3]
   11774:	mov	r0, r3
   11778:	bl	15890 <putchar_unlocked@plt+0x4b44>
   1177c:	mov	r3, r0
   11780:	cmp	r3, #0
   11784:	beq	11798 <putchar_unlocked@plt+0xa4c>
   11788:	ldr	r3, [pc, #44]	; 117bc <putchar_unlocked@plt+0xa70>
   1178c:	ldr	r3, [r3]
   11790:	mov	r0, r3
   11794:	bl	10b90 <_exit@plt>
   11798:	nop			; (mov r0, r0)
   1179c:	sub	sp, fp, #8
   117a0:	pop	{r4, fp, pc}
   117a4:	andeq	r8, r2, ip, lsr #2
   117a8:	andeq	r8, r2, ip, lsr r1
   117ac:	andeq	r7, r1, r8, rrx
   117b0:	andeq	r8, r2, r8, lsr r1
   117b4:	andeq	r7, r1, r4, ror r0
   117b8:	andeq	r7, r1, ip, ror r0
   117bc:	ldrdeq	r8, [r2], -r0
   117c0:	andeq	r8, r2, r8, lsr #2
   117c4:	push	{fp, lr}
   117c8:	add	fp, sp, #4
   117cc:	sub	sp, sp, #24
   117d0:	str	r0, [fp, #-24]	; 0xffffffe8
   117d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   117d8:	bl	156d8 <putchar_unlocked@plt+0x498c>
   117dc:	str	r0, [fp, #-8]
   117e0:	ldr	r3, [fp, #-8]
   117e4:	ldrb	r3, [r3]
   117e8:	cmp	r3, #0
   117ec:	beq	1183c <putchar_unlocked@plt+0xaf0>
   117f0:	ldr	r0, [fp, #-8]
   117f4:	bl	1578c <putchar_unlocked@plt+0x4a40>
   117f8:	mov	r3, r0
   117fc:	str	r3, [fp, #-12]
   11800:	ldr	r3, [fp, #-12]
   11804:	ldr	r2, [fp, #-8]
   11808:	add	r3, r2, r3
   1180c:	ldrb	r3, [r3]
   11810:	cmp	r3, #47	; 0x2f
   11814:	moveq	r3, #1
   11818:	movne	r3, #0
   1181c:	uxtb	r3, r3
   11820:	mov	r2, r3
   11824:	ldr	r3, [fp, #-12]
   11828:	add	r3, r3, r2
   1182c:	str	r3, [fp, #-12]
   11830:	mov	r3, #0
   11834:	str	r3, [fp, #-16]
   11838:	b	1185c <putchar_unlocked@plt+0xb10>
   1183c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11840:	str	r3, [fp, #-8]
   11844:	ldr	r0, [fp, #-8]
   11848:	bl	1578c <putchar_unlocked@plt+0x4a40>
   1184c:	mov	r3, r0
   11850:	str	r3, [fp, #-12]
   11854:	mov	r3, #0
   11858:	str	r3, [fp, #-16]
   1185c:	ldr	r2, [fp, #-16]
   11860:	ldr	r3, [fp, #-12]
   11864:	add	r3, r2, r3
   11868:	add	r3, r3, #1
   1186c:	mov	r0, r3
   11870:	bl	14978 <putchar_unlocked@plt+0x3c2c>
   11874:	mov	r3, r0
   11878:	str	r3, [fp, #-20]	; 0xffffffec
   1187c:	ldr	r3, [fp, #-16]
   11880:	cmp	r3, #0
   11884:	beq	118a4 <putchar_unlocked@plt+0xb58>
   11888:	ldr	r3, [fp, #-20]	; 0xffffffec
   1188c:	mov	r2, #46	; 0x2e
   11890:	strb	r2, [r3]
   11894:	ldr	r3, [fp, #-20]	; 0xffffffec
   11898:	add	r3, r3, #1
   1189c:	mov	r2, #47	; 0x2f
   118a0:	strb	r2, [r3]
   118a4:	ldr	r3, [fp, #-16]
   118a8:	ldr	r2, [fp, #-20]	; 0xffffffec
   118ac:	add	r3, r2, r3
   118b0:	ldr	r2, [fp, #-12]
   118b4:	ldr	r1, [fp, #-8]
   118b8:	mov	r0, r3
   118bc:	bl	10b9c <memcpy@plt>
   118c0:	ldr	r2, [fp, #-16]
   118c4:	ldr	r3, [fp, #-12]
   118c8:	add	r3, r2, r3
   118cc:	mov	r2, r3
   118d0:	ldr	r3, [fp, #-20]	; 0xffffffec
   118d4:	add	r3, r3, r2
   118d8:	mov	r2, #0
   118dc:	strb	r2, [r3]
   118e0:	ldr	r3, [fp, #-20]	; 0xffffffec
   118e4:	mov	r0, r3
   118e8:	sub	sp, fp, #4
   118ec:	pop	{fp, pc}
   118f0:	push	{fp, lr}
   118f4:	add	fp, sp, #4
   118f8:	sub	sp, sp, #24
   118fc:	str	r0, [fp, #-24]	; 0xffffffe8
   11900:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11904:	bl	156d8 <putchar_unlocked@plt+0x498c>
   11908:	str	r0, [fp, #-8]
   1190c:	ldr	r3, [fp, #-8]
   11910:	ldrb	r3, [r3]
   11914:	cmp	r3, #0
   11918:	bne	11924 <putchar_unlocked@plt+0xbd8>
   1191c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11920:	str	r3, [fp, #-8]
   11924:	ldr	r0, [fp, #-8]
   11928:	bl	1578c <putchar_unlocked@plt+0x4a40>
   1192c:	mov	r2, r0
   11930:	ldr	r3, [fp, #-8]
   11934:	add	r3, r3, r2
   11938:	str	r3, [fp, #-12]
   1193c:	ldr	r3, [fp, #-12]
   11940:	ldrb	r3, [r3]
   11944:	cmp	r3, #0
   11948:	movne	r3, #1
   1194c:	moveq	r3, #0
   11950:	strb	r3, [fp, #-13]
   11954:	ldr	r3, [fp, #-12]
   11958:	mov	r2, #0
   1195c:	strb	r2, [r3]
   11960:	ldrb	r3, [fp, #-13]
   11964:	mov	r0, r3
   11968:	sub	sp, fp, #4
   1196c:	pop	{fp, pc}
   11970:	push	{r4, fp, lr}
   11974:	add	fp, sp, #8
   11978:	sub	sp, sp, #20
   1197c:	str	r0, [fp, #-24]	; 0xffffffe8
   11980:	bl	10cbc <__errno_location@plt>
   11984:	mov	r3, r0
   11988:	ldr	r3, [r3]
   1198c:	str	r3, [fp, #-20]	; 0xffffffec
   11990:	bl	10cbc <__errno_location@plt>
   11994:	mov	r3, r0
   11998:	ldr	r3, [r3]
   1199c:	str	r3, [fp, #-16]
   119a0:	bl	10cbc <__errno_location@plt>
   119a4:	mov	r2, r0
   119a8:	mov	r3, #0
   119ac:	str	r3, [r2]
   119b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   119b4:	bl	10b84 <free@plt>
   119b8:	bl	10cbc <__errno_location@plt>
   119bc:	mov	r4, r0
   119c0:	bl	10cbc <__errno_location@plt>
   119c4:	mov	r3, r0
   119c8:	ldr	r3, [r3]
   119cc:	cmp	r3, #0
   119d0:	moveq	r3, #1
   119d4:	movne	r3, #0
   119d8:	uxtb	r3, r3
   119dc:	lsl	r3, r3, #2
   119e0:	sub	r2, fp, #12
   119e4:	add	r3, r2, r3
   119e8:	ldr	r3, [r3, #-8]
   119ec:	str	r3, [r4]
   119f0:	nop			; (mov r0, r0)
   119f4:	sub	sp, fp, #8
   119f8:	pop	{r4, fp, pc}
   119fc:	push	{fp, lr}
   11a00:	add	fp, sp, #4
   11a04:	sub	sp, sp, #16
   11a08:	str	r0, [fp, #-16]
   11a0c:	ldr	r3, [fp, #-16]
   11a10:	cmp	r3, #0
   11a14:	bne	11a34 <putchar_unlocked@plt+0xce8>
   11a18:	ldr	r3, [pc, #220]	; 11afc <putchar_unlocked@plt+0xdb0>
   11a1c:	ldr	r3, [r3]
   11a20:	mov	r2, #55	; 0x37
   11a24:	mov	r1, #1
   11a28:	ldr	r0, [pc, #208]	; 11b00 <putchar_unlocked@plt+0xdb4>
   11a2c:	bl	10bf0 <fwrite@plt>
   11a30:	bl	10d40 <abort@plt>
   11a34:	mov	r1, #47	; 0x2f
   11a38:	ldr	r0, [fp, #-16]
   11a3c:	bl	10d10 <strrchr@plt>
   11a40:	str	r0, [fp, #-8]
   11a44:	ldr	r3, [fp, #-8]
   11a48:	cmp	r3, #0
   11a4c:	beq	11a5c <putchar_unlocked@plt+0xd10>
   11a50:	ldr	r3, [fp, #-8]
   11a54:	add	r3, r3, #1
   11a58:	b	11a60 <putchar_unlocked@plt+0xd14>
   11a5c:	ldr	r3, [fp, #-16]
   11a60:	str	r3, [fp, #-12]
   11a64:	ldr	r2, [fp, #-12]
   11a68:	ldr	r3, [fp, #-16]
   11a6c:	sub	r3, r2, r3
   11a70:	cmp	r3, #6
   11a74:	ble	11ad8 <putchar_unlocked@plt+0xd8c>
   11a78:	ldr	r3, [fp, #-12]
   11a7c:	sub	r3, r3, #7
   11a80:	mov	r2, #7
   11a84:	ldr	r1, [pc, #120]	; 11b04 <putchar_unlocked@plt+0xdb8>
   11a88:	mov	r0, r3
   11a8c:	bl	10d34 <strncmp@plt>
   11a90:	mov	r3, r0
   11a94:	cmp	r3, #0
   11a98:	bne	11ad8 <putchar_unlocked@plt+0xd8c>
   11a9c:	ldr	r3, [fp, #-12]
   11aa0:	str	r3, [fp, #-16]
   11aa4:	mov	r2, #3
   11aa8:	ldr	r1, [pc, #88]	; 11b08 <putchar_unlocked@plt+0xdbc>
   11aac:	ldr	r0, [fp, #-12]
   11ab0:	bl	10d34 <strncmp@plt>
   11ab4:	mov	r3, r0
   11ab8:	cmp	r3, #0
   11abc:	bne	11ad8 <putchar_unlocked@plt+0xd8c>
   11ac0:	ldr	r3, [fp, #-12]
   11ac4:	add	r3, r3, #3
   11ac8:	str	r3, [fp, #-16]
   11acc:	ldr	r2, [pc, #56]	; 11b0c <putchar_unlocked@plt+0xdc0>
   11ad0:	ldr	r3, [fp, #-16]
   11ad4:	str	r3, [r2]
   11ad8:	ldr	r2, [pc, #48]	; 11b10 <putchar_unlocked@plt+0xdc4>
   11adc:	ldr	r3, [fp, #-16]
   11ae0:	str	r3, [r2]
   11ae4:	ldr	r2, [pc, #40]	; 11b14 <putchar_unlocked@plt+0xdc8>
   11ae8:	ldr	r3, [fp, #-16]
   11aec:	str	r3, [r2]
   11af0:	nop			; (mov r0, r0)
   11af4:	sub	sp, fp, #4
   11af8:	pop	{fp, pc}
   11afc:	andeq	r8, r2, r8, lsr #2
   11b00:	andeq	r7, r1, r0, lsl #1
   11b04:	strheq	r7, [r1], -r8
   11b08:	andeq	r7, r1, r0, asr #1
   11b0c:	andeq	r8, r2, r8, lsl r1
   11b10:	andeq	r8, r2, r0, asr #2
   11b14:	andeq	r8, r2, ip, lsl r1
   11b18:	push	{fp, lr}
   11b1c:	add	fp, sp, #4
   11b20:	sub	sp, sp, #16
   11b24:	str	r0, [fp, #-16]
   11b28:	bl	10cbc <__errno_location@plt>
   11b2c:	mov	r3, r0
   11b30:	ldr	r3, [r3]
   11b34:	str	r3, [fp, #-8]
   11b38:	ldr	r3, [fp, #-16]
   11b3c:	cmp	r3, #0
   11b40:	beq	11b4c <putchar_unlocked@plt+0xe00>
   11b44:	ldr	r3, [fp, #-16]
   11b48:	b	11b50 <putchar_unlocked@plt+0xe04>
   11b4c:	ldr	r3, [pc, #48]	; 11b84 <putchar_unlocked@plt+0xe38>
   11b50:	mov	r1, #48	; 0x30
   11b54:	mov	r0, r3
   11b58:	bl	1533c <putchar_unlocked@plt+0x45f0>
   11b5c:	mov	r3, r0
   11b60:	str	r3, [fp, #-12]
   11b64:	bl	10cbc <__errno_location@plt>
   11b68:	mov	r2, r0
   11b6c:	ldr	r3, [fp, #-8]
   11b70:	str	r3, [r2]
   11b74:	ldr	r3, [fp, #-12]
   11b78:	mov	r0, r3
   11b7c:	sub	sp, fp, #4
   11b80:	pop	{fp, pc}
   11b84:	andeq	r8, r2, r4, asr #2
   11b88:	push	{fp}		; (str fp, [sp, #-4]!)
   11b8c:	add	fp, sp, #0
   11b90:	sub	sp, sp, #12
   11b94:	str	r0, [fp, #-8]
   11b98:	ldr	r3, [fp, #-8]
   11b9c:	cmp	r3, #0
   11ba0:	beq	11bac <putchar_unlocked@plt+0xe60>
   11ba4:	ldr	r3, [fp, #-8]
   11ba8:	b	11bb0 <putchar_unlocked@plt+0xe64>
   11bac:	ldr	r3, [pc, #16]	; 11bc4 <putchar_unlocked@plt+0xe78>
   11bb0:	ldr	r3, [r3]
   11bb4:	mov	r0, r3
   11bb8:	add	sp, fp, #0
   11bbc:	pop	{fp}		; (ldr fp, [sp], #4)
   11bc0:	bx	lr
   11bc4:	andeq	r8, r2, r4, asr #2
   11bc8:	push	{fp}		; (str fp, [sp, #-4]!)
   11bcc:	add	fp, sp, #0
   11bd0:	sub	sp, sp, #12
   11bd4:	str	r0, [fp, #-8]
   11bd8:	str	r1, [fp, #-12]
   11bdc:	ldr	r3, [fp, #-8]
   11be0:	cmp	r3, #0
   11be4:	beq	11bf0 <putchar_unlocked@plt+0xea4>
   11be8:	ldr	r3, [fp, #-8]
   11bec:	b	11bf4 <putchar_unlocked@plt+0xea8>
   11bf0:	ldr	r3, [pc, #20]	; 11c0c <putchar_unlocked@plt+0xec0>
   11bf4:	ldr	r2, [fp, #-12]
   11bf8:	str	r2, [r3]
   11bfc:	nop			; (mov r0, r0)
   11c00:	add	sp, fp, #0
   11c04:	pop	{fp}		; (ldr fp, [sp], #4)
   11c08:	bx	lr
   11c0c:	andeq	r8, r2, r4, asr #2
   11c10:	push	{fp}		; (str fp, [sp, #-4]!)
   11c14:	add	fp, sp, #0
   11c18:	sub	sp, sp, #36	; 0x24
   11c1c:	str	r0, [fp, #-24]	; 0xffffffe8
   11c20:	mov	r3, r1
   11c24:	str	r2, [fp, #-32]	; 0xffffffe0
   11c28:	strb	r3, [fp, #-25]	; 0xffffffe7
   11c2c:	ldrb	r3, [fp, #-25]	; 0xffffffe7
   11c30:	strb	r3, [fp, #-5]
   11c34:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11c38:	cmp	r3, #0
   11c3c:	beq	11c48 <putchar_unlocked@plt+0xefc>
   11c40:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11c44:	b	11c4c <putchar_unlocked@plt+0xf00>
   11c48:	ldr	r3, [pc, #124]	; 11ccc <putchar_unlocked@plt+0xf80>
   11c4c:	add	r2, r3, #8
   11c50:	ldrb	r3, [fp, #-5]
   11c54:	lsr	r3, r3, #5
   11c58:	uxtb	r3, r3
   11c5c:	lsl	r3, r3, #2
   11c60:	add	r3, r2, r3
   11c64:	str	r3, [fp, #-12]
   11c68:	ldrb	r3, [fp, #-5]
   11c6c:	and	r3, r3, #31
   11c70:	str	r3, [fp, #-16]
   11c74:	ldr	r3, [fp, #-12]
   11c78:	ldr	r2, [r3]
   11c7c:	ldr	r3, [fp, #-16]
   11c80:	lsr	r3, r2, r3
   11c84:	and	r3, r3, #1
   11c88:	str	r3, [fp, #-20]	; 0xffffffec
   11c8c:	ldr	r3, [fp, #-12]
   11c90:	ldr	r3, [r3]
   11c94:	ldr	r2, [fp, #-32]	; 0xffffffe0
   11c98:	and	r1, r2, #1
   11c9c:	ldr	r2, [fp, #-20]	; 0xffffffec
   11ca0:	eor	r1, r1, r2
   11ca4:	ldr	r2, [fp, #-16]
   11ca8:	lsl	r2, r1, r2
   11cac:	eor	r2, r2, r3
   11cb0:	ldr	r3, [fp, #-12]
   11cb4:	str	r2, [r3]
   11cb8:	ldr	r3, [fp, #-20]	; 0xffffffec
   11cbc:	mov	r0, r3
   11cc0:	add	sp, fp, #0
   11cc4:	pop	{fp}		; (ldr fp, [sp], #4)
   11cc8:	bx	lr
   11ccc:	andeq	r8, r2, r4, asr #2
   11cd0:	push	{fp}		; (str fp, [sp, #-4]!)
   11cd4:	add	fp, sp, #0
   11cd8:	sub	sp, sp, #20
   11cdc:	str	r0, [fp, #-16]
   11ce0:	str	r1, [fp, #-20]	; 0xffffffec
   11ce4:	ldr	r3, [fp, #-16]
   11ce8:	cmp	r3, #0
   11cec:	bne	11cf8 <putchar_unlocked@plt+0xfac>
   11cf0:	ldr	r3, [pc, #44]	; 11d24 <putchar_unlocked@plt+0xfd8>
   11cf4:	str	r3, [fp, #-16]
   11cf8:	ldr	r3, [fp, #-16]
   11cfc:	ldr	r3, [r3, #4]
   11d00:	str	r3, [fp, #-8]
   11d04:	ldr	r3, [fp, #-16]
   11d08:	ldr	r2, [fp, #-20]	; 0xffffffec
   11d0c:	str	r2, [r3, #4]
   11d10:	ldr	r3, [fp, #-8]
   11d14:	mov	r0, r3
   11d18:	add	sp, fp, #0
   11d1c:	pop	{fp}		; (ldr fp, [sp], #4)
   11d20:	bx	lr
   11d24:	andeq	r8, r2, r4, asr #2
   11d28:	push	{fp, lr}
   11d2c:	add	fp, sp, #4
   11d30:	sub	sp, sp, #16
   11d34:	str	r0, [fp, #-8]
   11d38:	str	r1, [fp, #-12]
   11d3c:	str	r2, [fp, #-16]
   11d40:	ldr	r3, [fp, #-8]
   11d44:	cmp	r3, #0
   11d48:	bne	11d54 <putchar_unlocked@plt+0x1008>
   11d4c:	ldr	r3, [pc, #76]	; 11da0 <putchar_unlocked@plt+0x1054>
   11d50:	str	r3, [fp, #-8]
   11d54:	ldr	r3, [fp, #-8]
   11d58:	mov	r2, #10
   11d5c:	str	r2, [r3]
   11d60:	ldr	r3, [fp, #-12]
   11d64:	cmp	r3, #0
   11d68:	beq	11d78 <putchar_unlocked@plt+0x102c>
   11d6c:	ldr	r3, [fp, #-16]
   11d70:	cmp	r3, #0
   11d74:	bne	11d7c <putchar_unlocked@plt+0x1030>
   11d78:	bl	10d40 <abort@plt>
   11d7c:	ldr	r3, [fp, #-8]
   11d80:	ldr	r2, [fp, #-12]
   11d84:	str	r2, [r3, #40]	; 0x28
   11d88:	ldr	r3, [fp, #-8]
   11d8c:	ldr	r2, [fp, #-16]
   11d90:	str	r2, [r3, #44]	; 0x2c
   11d94:	nop			; (mov r0, r0)
   11d98:	sub	sp, fp, #4
   11d9c:	pop	{fp, pc}
   11da0:	andeq	r8, r2, r4, asr #2
   11da4:	push	{fp, lr}
   11da8:	add	fp, sp, #4
   11dac:	sub	sp, sp, #56	; 0x38
   11db0:	str	r0, [fp, #-56]	; 0xffffffc8
   11db4:	str	r1, [fp, #-60]	; 0xffffffc4
   11db8:	sub	r3, fp, #52	; 0x34
   11dbc:	mov	r2, #48	; 0x30
   11dc0:	mov	r1, #0
   11dc4:	mov	r0, r3
   11dc8:	bl	10cd4 <memset@plt>
   11dcc:	ldr	r3, [fp, #-60]	; 0xffffffc4
   11dd0:	cmp	r3, #10
   11dd4:	bne	11ddc <putchar_unlocked@plt+0x1090>
   11dd8:	bl	10d40 <abort@plt>
   11ddc:	ldr	r3, [fp, #-60]	; 0xffffffc4
   11de0:	str	r3, [fp, #-52]	; 0xffffffcc
   11de4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   11de8:	mov	lr, r3
   11dec:	sub	ip, fp, #52	; 0x34
   11df0:	ldm	ip!, {r0, r1, r2, r3}
   11df4:	stmia	lr!, {r0, r1, r2, r3}
   11df8:	ldm	ip!, {r0, r1, r2, r3}
   11dfc:	stmia	lr!, {r0, r1, r2, r3}
   11e00:	ldm	ip, {r0, r1, r2, r3}
   11e04:	stm	lr, {r0, r1, r2, r3}
   11e08:	ldr	r0, [fp, #-56]	; 0xffffffc8
   11e0c:	sub	sp, fp, #4
   11e10:	pop	{fp, pc}
   11e14:	push	{fp, lr}
   11e18:	add	fp, sp, #4
   11e1c:	sub	sp, sp, #16
   11e20:	str	r0, [fp, #-16]
   11e24:	str	r1, [fp, #-20]	; 0xffffffec
   11e28:	ldr	r0, [fp, #-16]
   11e2c:	bl	10c98 <gettext@plt>
   11e30:	str	r0, [fp, #-8]
   11e34:	ldr	r2, [fp, #-8]
   11e38:	ldr	r3, [fp, #-16]
   11e3c:	cmp	r2, r3
   11e40:	beq	11e4c <putchar_unlocked@plt+0x1100>
   11e44:	ldr	r3, [fp, #-8]
   11e48:	b	11edc <putchar_unlocked@plt+0x1190>
   11e4c:	bl	15d28 <putchar_unlocked@plt+0x4fdc>
   11e50:	str	r0, [fp, #-12]
   11e54:	ldr	r1, [pc, #140]	; 11ee8 <putchar_unlocked@plt+0x119c>
   11e58:	ldr	r0, [fp, #-12]
   11e5c:	bl	157f8 <putchar_unlocked@plt+0x4aac>
   11e60:	mov	r3, r0
   11e64:	cmp	r3, #0
   11e68:	bne	11e8c <putchar_unlocked@plt+0x1140>
   11e6c:	ldr	r3, [fp, #-16]
   11e70:	ldrb	r3, [r3]
   11e74:	cmp	r3, #96	; 0x60
   11e78:	bne	11e84 <putchar_unlocked@plt+0x1138>
   11e7c:	ldr	r3, [pc, #104]	; 11eec <putchar_unlocked@plt+0x11a0>
   11e80:	b	11edc <putchar_unlocked@plt+0x1190>
   11e84:	ldr	r3, [pc, #100]	; 11ef0 <putchar_unlocked@plt+0x11a4>
   11e88:	b	11edc <putchar_unlocked@plt+0x1190>
   11e8c:	ldr	r1, [pc, #96]	; 11ef4 <putchar_unlocked@plt+0x11a8>
   11e90:	ldr	r0, [fp, #-12]
   11e94:	bl	157f8 <putchar_unlocked@plt+0x4aac>
   11e98:	mov	r3, r0
   11e9c:	cmp	r3, #0
   11ea0:	bne	11ec4 <putchar_unlocked@plt+0x1178>
   11ea4:	ldr	r3, [fp, #-16]
   11ea8:	ldrb	r3, [r3]
   11eac:	cmp	r3, #96	; 0x60
   11eb0:	bne	11ebc <putchar_unlocked@plt+0x1170>
   11eb4:	ldr	r3, [pc, #60]	; 11ef8 <putchar_unlocked@plt+0x11ac>
   11eb8:	b	11edc <putchar_unlocked@plt+0x1190>
   11ebc:	ldr	r3, [pc, #56]	; 11efc <putchar_unlocked@plt+0x11b0>
   11ec0:	b	11edc <putchar_unlocked@plt+0x1190>
   11ec4:	ldr	r3, [fp, #-20]	; 0xffffffec
   11ec8:	cmp	r3, #9
   11ecc:	bne	11ed8 <putchar_unlocked@plt+0x118c>
   11ed0:	ldr	r3, [pc, #40]	; 11f00 <putchar_unlocked@plt+0x11b4>
   11ed4:	b	11edc <putchar_unlocked@plt+0x1190>
   11ed8:	ldr	r3, [pc, #36]	; 11f04 <putchar_unlocked@plt+0x11b8>
   11edc:	mov	r0, r3
   11ee0:	sub	sp, fp, #4
   11ee4:	pop	{fp, pc}
   11ee8:	andeq	r7, r1, r0, lsl #3
   11eec:	andeq	r7, r1, r8, lsl #3
   11ef0:	andeq	r7, r1, ip, lsl #3
   11ef4:	muleq	r1, r0, r1
   11ef8:	muleq	r1, r8, r1
   11efc:	muleq	r1, ip, r1
   11f00:	andeq	r7, r1, r0, lsr #3
   11f04:	andeq	r7, r1, r4, lsr #3
   11f08:	push	{r4, fp, lr}
   11f0c:	add	fp, sp, #8
   11f10:	sub	sp, sp, #116	; 0x74
   11f14:	str	r0, [fp, #-88]	; 0xffffffa8
   11f18:	str	r1, [fp, #-92]	; 0xffffffa4
   11f1c:	str	r2, [fp, #-96]	; 0xffffffa0
   11f20:	str	r3, [fp, #-100]	; 0xffffff9c
   11f24:	mov	r3, #0
   11f28:	str	r3, [fp, #-20]	; 0xffffffec
   11f2c:	mov	r3, #0
   11f30:	str	r3, [fp, #-24]	; 0xffffffe8
   11f34:	mov	r3, #0
   11f38:	str	r3, [fp, #-28]	; 0xffffffe4
   11f3c:	mov	r3, #0
   11f40:	str	r3, [fp, #-32]	; 0xffffffe0
   11f44:	mov	r3, #0
   11f48:	strb	r3, [fp, #-33]	; 0xffffffdf
   11f4c:	bl	10c08 <__ctype_get_mb_cur_max@plt>
   11f50:	mov	r3, r0
   11f54:	cmp	r3, #1
   11f58:	moveq	r3, #1
   11f5c:	movne	r3, #0
   11f60:	strb	r3, [fp, #-57]	; 0xffffffc7
   11f64:	ldr	r3, [fp, #8]
   11f68:	and	r3, r3, #2
   11f6c:	cmp	r3, #0
   11f70:	movne	r3, #1
   11f74:	moveq	r3, #0
   11f78:	strb	r3, [fp, #-34]	; 0xffffffde
   11f7c:	mov	r3, #0
   11f80:	strb	r3, [fp, #-35]	; 0xffffffdd
   11f84:	mov	r3, #0
   11f88:	strb	r3, [fp, #-36]	; 0xffffffdc
   11f8c:	mov	r3, #1
   11f90:	strb	r3, [fp, #-37]	; 0xffffffdb
   11f94:	ldr	r3, [fp, #4]
   11f98:	cmp	r3, #10
   11f9c:	ldrls	pc, [pc, r3, lsl #2]
   11fa0:	b	121a8 <putchar_unlocked@plt+0x145c>
   11fa4:	muleq	r1, ip, r1
   11fa8:	andeq	r2, r1, r8, lsl r1
   11fac:	andeq	r2, r1, ip, lsr r1
   11fb0:	andeq	r2, r1, r0, lsl r1
   11fb4:	andeq	r2, r1, r0, lsr #2
   11fb8:	andeq	r1, r1, r0, ror #31
   11fbc:	ldrdeq	r1, [r1], -r0
   11fc0:	andeq	r2, r1, r0, asr #32
   11fc4:	andeq	r2, r1, r4, asr r0
   11fc8:	andeq	r2, r1, r4, asr r0
   11fcc:	andeq	r2, r1, r4, asr r0
   11fd0:	mov	r3, #5
   11fd4:	str	r3, [fp, #4]
   11fd8:	mov	r3, #1
   11fdc:	strb	r3, [fp, #-34]	; 0xffffffde
   11fe0:	ldrb	r3, [fp, #-34]	; 0xffffffde
   11fe4:	eor	r3, r3, #1
   11fe8:	uxtb	r3, r3
   11fec:	cmp	r3, #0
   11ff0:	beq	12024 <putchar_unlocked@plt+0x12d8>
   11ff4:	ldr	r2, [fp, #-20]	; 0xffffffec
   11ff8:	ldr	r3, [fp, #-92]	; 0xffffffa4
   11ffc:	cmp	r2, r3
   12000:	bcs	12018 <putchar_unlocked@plt+0x12cc>
   12004:	ldr	r2, [fp, #-88]	; 0xffffffa8
   12008:	ldr	r3, [fp, #-20]	; 0xffffffec
   1200c:	add	r3, r2, r3
   12010:	mov	r2, #34	; 0x22
   12014:	strb	r2, [r3]
   12018:	ldr	r3, [fp, #-20]	; 0xffffffec
   1201c:	add	r3, r3, #1
   12020:	str	r3, [fp, #-20]	; 0xffffffec
   12024:	mov	r3, #1
   12028:	strb	r3, [fp, #-33]	; 0xffffffdf
   1202c:	ldr	r3, [pc, #3872]	; 12f54 <putchar_unlocked@plt+0x2208>
   12030:	str	r3, [fp, #-28]	; 0xffffffe4
   12034:	mov	r3, #1
   12038:	str	r3, [fp, #-32]	; 0xffffffe0
   1203c:	b	121ac <putchar_unlocked@plt+0x1460>
   12040:	mov	r3, #1
   12044:	strb	r3, [fp, #-33]	; 0xffffffdf
   12048:	mov	r3, #0
   1204c:	strb	r3, [fp, #-34]	; 0xffffffde
   12050:	b	121ac <putchar_unlocked@plt+0x1460>
   12054:	ldr	r3, [fp, #4]
   12058:	cmp	r3, #10
   1205c:	beq	12080 <putchar_unlocked@plt+0x1334>
   12060:	ldr	r1, [fp, #4]
   12064:	ldr	r0, [pc, #3820]	; 12f58 <putchar_unlocked@plt+0x220c>
   12068:	bl	11e14 <putchar_unlocked@plt+0x10c8>
   1206c:	str	r0, [fp, #16]
   12070:	ldr	r1, [fp, #4]
   12074:	ldr	r0, [pc, #3808]	; 12f5c <putchar_unlocked@plt+0x2210>
   12078:	bl	11e14 <putchar_unlocked@plt+0x10c8>
   1207c:	str	r0, [fp, #20]
   12080:	ldrb	r3, [fp, #-34]	; 0xffffffde
   12084:	eor	r3, r3, #1
   12088:	uxtb	r3, r3
   1208c:	cmp	r3, #0
   12090:	beq	120f0 <putchar_unlocked@plt+0x13a4>
   12094:	ldr	r3, [fp, #16]
   12098:	str	r3, [fp, #-28]	; 0xffffffe4
   1209c:	b	120e0 <putchar_unlocked@plt+0x1394>
   120a0:	ldr	r2, [fp, #-20]	; 0xffffffec
   120a4:	ldr	r3, [fp, #-92]	; 0xffffffa4
   120a8:	cmp	r2, r3
   120ac:	bcs	120c8 <putchar_unlocked@plt+0x137c>
   120b0:	ldr	r2, [fp, #-88]	; 0xffffffa8
   120b4:	ldr	r3, [fp, #-20]	; 0xffffffec
   120b8:	add	r3, r2, r3
   120bc:	ldr	r2, [fp, #-28]	; 0xffffffe4
   120c0:	ldrb	r2, [r2]
   120c4:	strb	r2, [r3]
   120c8:	ldr	r3, [fp, #-20]	; 0xffffffec
   120cc:	add	r3, r3, #1
   120d0:	str	r3, [fp, #-20]	; 0xffffffec
   120d4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   120d8:	add	r3, r3, #1
   120dc:	str	r3, [fp, #-28]	; 0xffffffe4
   120e0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   120e4:	ldrb	r3, [r3]
   120e8:	cmp	r3, #0
   120ec:	bne	120a0 <putchar_unlocked@plt+0x1354>
   120f0:	mov	r3, #1
   120f4:	strb	r3, [fp, #-33]	; 0xffffffdf
   120f8:	ldr	r3, [fp, #20]
   120fc:	str	r3, [fp, #-28]	; 0xffffffe4
   12100:	ldr	r0, [fp, #-28]	; 0xffffffe4
   12104:	bl	10ca4 <strlen@plt>
   12108:	str	r0, [fp, #-32]	; 0xffffffe0
   1210c:	b	121ac <putchar_unlocked@plt+0x1460>
   12110:	mov	r3, #1
   12114:	strb	r3, [fp, #-33]	; 0xffffffdf
   12118:	mov	r3, #1
   1211c:	strb	r3, [fp, #-34]	; 0xffffffde
   12120:	ldrb	r3, [fp, #-34]	; 0xffffffde
   12124:	eor	r3, r3, #1
   12128:	uxtb	r3, r3
   1212c:	cmp	r3, #0
   12130:	beq	1213c <putchar_unlocked@plt+0x13f0>
   12134:	mov	r3, #1
   12138:	strb	r3, [fp, #-33]	; 0xffffffdf
   1213c:	mov	r3, #2
   12140:	str	r3, [fp, #4]
   12144:	ldrb	r3, [fp, #-34]	; 0xffffffde
   12148:	eor	r3, r3, #1
   1214c:	uxtb	r3, r3
   12150:	cmp	r3, #0
   12154:	beq	12188 <putchar_unlocked@plt+0x143c>
   12158:	ldr	r2, [fp, #-20]	; 0xffffffec
   1215c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   12160:	cmp	r2, r3
   12164:	bcs	1217c <putchar_unlocked@plt+0x1430>
   12168:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1216c:	ldr	r3, [fp, #-20]	; 0xffffffec
   12170:	add	r3, r2, r3
   12174:	mov	r2, #39	; 0x27
   12178:	strb	r2, [r3]
   1217c:	ldr	r3, [fp, #-20]	; 0xffffffec
   12180:	add	r3, r3, #1
   12184:	str	r3, [fp, #-20]	; 0xffffffec
   12188:	ldr	r3, [pc, #3532]	; 12f5c <putchar_unlocked@plt+0x2210>
   1218c:	str	r3, [fp, #-28]	; 0xffffffe4
   12190:	mov	r3, #1
   12194:	str	r3, [fp, #-32]	; 0xffffffe0
   12198:	b	121ac <putchar_unlocked@plt+0x1460>
   1219c:	mov	r3, #0
   121a0:	strb	r3, [fp, #-34]	; 0xffffffde
   121a4:	b	121ac <putchar_unlocked@plt+0x1460>
   121a8:	bl	10d40 <abort@plt>
   121ac:	mov	r3, #0
   121b0:	str	r3, [fp, #-16]
   121b4:	b	13344 <putchar_unlocked@plt+0x25f8>
   121b8:	mov	r3, #0
   121bc:	strb	r3, [fp, #-40]	; 0xffffffd8
   121c0:	mov	r3, #0
   121c4:	strb	r3, [fp, #-41]	; 0xffffffd7
   121c8:	mov	r3, #0
   121cc:	strb	r3, [fp, #-42]	; 0xffffffd6
   121d0:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   121d4:	cmp	r3, #0
   121d8:	beq	12274 <putchar_unlocked@plt+0x1528>
   121dc:	ldr	r3, [fp, #4]
   121e0:	cmp	r3, #2
   121e4:	beq	12274 <putchar_unlocked@plt+0x1528>
   121e8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   121ec:	cmp	r3, #0
   121f0:	beq	12274 <putchar_unlocked@plt+0x1528>
   121f4:	ldr	r2, [fp, #-16]
   121f8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   121fc:	add	r4, r2, r3
   12200:	ldr	r3, [fp, #-100]	; 0xffffff9c
   12204:	cmn	r3, #1
   12208:	bne	1222c <putchar_unlocked@plt+0x14e0>
   1220c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   12210:	cmp	r3, #1
   12214:	bls	1222c <putchar_unlocked@plt+0x14e0>
   12218:	ldr	r0, [fp, #-96]	; 0xffffffa0
   1221c:	bl	10ca4 <strlen@plt>
   12220:	str	r0, [fp, #-100]	; 0xffffff9c
   12224:	ldr	r3, [fp, #-100]	; 0xffffff9c
   12228:	b	12230 <putchar_unlocked@plt+0x14e4>
   1222c:	ldr	r3, [fp, #-100]	; 0xffffff9c
   12230:	cmp	r4, r3
   12234:	bhi	12274 <putchar_unlocked@plt+0x1528>
   12238:	ldr	r2, [fp, #-96]	; 0xffffffa0
   1223c:	ldr	r3, [fp, #-16]
   12240:	add	r3, r2, r3
   12244:	ldr	r2, [fp, #-32]	; 0xffffffe0
   12248:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1224c:	mov	r0, r3
   12250:	bl	10bb4 <memcmp@plt>
   12254:	mov	r3, r0
   12258:	cmp	r3, #0
   1225c:	bne	12274 <putchar_unlocked@plt+0x1528>
   12260:	ldrb	r3, [fp, #-34]	; 0xffffffde
   12264:	cmp	r3, #0
   12268:	bne	13500 <putchar_unlocked@plt+0x27b4>
   1226c:	mov	r3, #1
   12270:	strb	r3, [fp, #-40]	; 0xffffffd8
   12274:	ldr	r2, [fp, #-96]	; 0xffffffa0
   12278:	ldr	r3, [fp, #-16]
   1227c:	add	r3, r2, r3
   12280:	ldrb	r3, [r3]
   12284:	strb	r3, [fp, #-38]	; 0xffffffda
   12288:	ldrb	r3, [fp, #-38]	; 0xffffffda
   1228c:	cmp	r3, #126	; 0x7e
   12290:	ldrls	pc, [pc, r3, lsl #2]
   12294:	b	12ac0 <putchar_unlocked@plt+0x1d74>
   12298:	muleq	r1, r4, r4
   1229c:	andeq	r2, r1, r0, asr #21
   122a0:	andeq	r2, r1, r0, asr #21
   122a4:	andeq	r2, r1, r0, asr #21
   122a8:	andeq	r2, r1, r0, asr #21
   122ac:	andeq	r2, r1, r0, asr #21
   122b0:	andeq	r2, r1, r0, asr #21
   122b4:	andeq	r2, r1, r4, lsl #17
   122b8:	muleq	r1, r0, r8
   122bc:	andeq	r2, r1, r0, asr #17
   122c0:	andeq	r2, r1, r8, lsr #17
   122c4:	andeq	r2, r1, ip, asr #17
   122c8:	muleq	r1, ip, r8
   122cc:			; <UNDEFINED> instruction: 0x000128b4
   122d0:	andeq	r2, r1, r0, asr #21
   122d4:	andeq	r2, r1, r0, asr #21
   122d8:	andeq	r2, r1, r0, asr #21
   122dc:	andeq	r2, r1, r0, asr #21
   122e0:	andeq	r2, r1, r0, asr #21
   122e4:	andeq	r2, r1, r0, asr #21
   122e8:	andeq	r2, r1, r0, asr #21
   122ec:	andeq	r2, r1, r0, asr #21
   122f0:	andeq	r2, r1, r0, asr #21
   122f4:	andeq	r2, r1, r0, asr #21
   122f8:	andeq	r2, r1, r0, asr #21
   122fc:	andeq	r2, r1, r0, asr #21
   12300:	andeq	r2, r1, r0, asr #21
   12304:	andeq	r2, r1, r0, asr #21
   12308:	andeq	r2, r1, r0, asr #21
   1230c:	andeq	r2, r1, r0, asr #21
   12310:	andeq	r2, r1, r0, asr #21
   12314:	andeq	r2, r1, r0, asr #21
   12318:	andeq	r2, r1, r4, lsr #19
   1231c:	andeq	r2, r1, ip, lsr #19
   12320:	andeq	r2, r1, ip, lsr #19
   12324:	muleq	r1, r8, r9
   12328:	andeq	r2, r1, ip, lsr #19
   1232c:			; <UNDEFINED> instruction: 0x00012ab4
   12330:	andeq	r2, r1, ip, lsr #19
   12334:	andeq	r2, r1, r8, asr #19
   12338:	andeq	r2, r1, ip, lsr #19
   1233c:	andeq	r2, r1, ip, lsr #19
   12340:	andeq	r2, r1, ip, lsr #19
   12344:			; <UNDEFINED> instruction: 0x00012ab4
   12348:			; <UNDEFINED> instruction: 0x00012ab4
   1234c:			; <UNDEFINED> instruction: 0x00012ab4
   12350:			; <UNDEFINED> instruction: 0x00012ab4
   12354:			; <UNDEFINED> instruction: 0x00012ab4
   12358:			; <UNDEFINED> instruction: 0x00012ab4
   1235c:			; <UNDEFINED> instruction: 0x00012ab4
   12360:			; <UNDEFINED> instruction: 0x00012ab4
   12364:			; <UNDEFINED> instruction: 0x00012ab4
   12368:			; <UNDEFINED> instruction: 0x00012ab4
   1236c:			; <UNDEFINED> instruction: 0x00012ab4
   12370:			; <UNDEFINED> instruction: 0x00012ab4
   12374:			; <UNDEFINED> instruction: 0x00012ab4
   12378:			; <UNDEFINED> instruction: 0x00012ab4
   1237c:			; <UNDEFINED> instruction: 0x00012ab4
   12380:			; <UNDEFINED> instruction: 0x00012ab4
   12384:	andeq	r2, r1, ip, lsr #19
   12388:	andeq	r2, r1, ip, lsr #19
   1238c:	andeq	r2, r1, ip, lsr #19
   12390:	andeq	r2, r1, ip, lsr #19
   12394:	andeq	r2, r1, r4, ror r6
   12398:	andeq	r2, r1, r0, asr #21
   1239c:			; <UNDEFINED> instruction: 0x00012ab4
   123a0:			; <UNDEFINED> instruction: 0x00012ab4
   123a4:			; <UNDEFINED> instruction: 0x00012ab4
   123a8:			; <UNDEFINED> instruction: 0x00012ab4
   123ac:			; <UNDEFINED> instruction: 0x00012ab4
   123b0:			; <UNDEFINED> instruction: 0x00012ab4
   123b4:			; <UNDEFINED> instruction: 0x00012ab4
   123b8:			; <UNDEFINED> instruction: 0x00012ab4
   123bc:			; <UNDEFINED> instruction: 0x00012ab4
   123c0:			; <UNDEFINED> instruction: 0x00012ab4
   123c4:			; <UNDEFINED> instruction: 0x00012ab4
   123c8:			; <UNDEFINED> instruction: 0x00012ab4
   123cc:			; <UNDEFINED> instruction: 0x00012ab4
   123d0:			; <UNDEFINED> instruction: 0x00012ab4
   123d4:			; <UNDEFINED> instruction: 0x00012ab4
   123d8:			; <UNDEFINED> instruction: 0x00012ab4
   123dc:			; <UNDEFINED> instruction: 0x00012ab4
   123e0:			; <UNDEFINED> instruction: 0x00012ab4
   123e4:			; <UNDEFINED> instruction: 0x00012ab4
   123e8:			; <UNDEFINED> instruction: 0x00012ab4
   123ec:			; <UNDEFINED> instruction: 0x00012ab4
   123f0:			; <UNDEFINED> instruction: 0x00012ab4
   123f4:			; <UNDEFINED> instruction: 0x00012ab4
   123f8:			; <UNDEFINED> instruction: 0x00012ab4
   123fc:			; <UNDEFINED> instruction: 0x00012ab4
   12400:			; <UNDEFINED> instruction: 0x00012ab4
   12404:	andeq	r2, r1, ip, lsr #19
   12408:	ldrdeq	r2, [r1], -r8
   1240c:			; <UNDEFINED> instruction: 0x00012ab4
   12410:	andeq	r2, r1, ip, lsr #19
   12414:			; <UNDEFINED> instruction: 0x00012ab4
   12418:	andeq	r2, r1, ip, lsr #19
   1241c:			; <UNDEFINED> instruction: 0x00012ab4
   12420:			; <UNDEFINED> instruction: 0x00012ab4
   12424:			; <UNDEFINED> instruction: 0x00012ab4
   12428:			; <UNDEFINED> instruction: 0x00012ab4
   1242c:			; <UNDEFINED> instruction: 0x00012ab4
   12430:			; <UNDEFINED> instruction: 0x00012ab4
   12434:			; <UNDEFINED> instruction: 0x00012ab4
   12438:			; <UNDEFINED> instruction: 0x00012ab4
   1243c:			; <UNDEFINED> instruction: 0x00012ab4
   12440:			; <UNDEFINED> instruction: 0x00012ab4
   12444:			; <UNDEFINED> instruction: 0x00012ab4
   12448:			; <UNDEFINED> instruction: 0x00012ab4
   1244c:			; <UNDEFINED> instruction: 0x00012ab4
   12450:			; <UNDEFINED> instruction: 0x00012ab4
   12454:			; <UNDEFINED> instruction: 0x00012ab4
   12458:			; <UNDEFINED> instruction: 0x00012ab4
   1245c:			; <UNDEFINED> instruction: 0x00012ab4
   12460:			; <UNDEFINED> instruction: 0x00012ab4
   12464:			; <UNDEFINED> instruction: 0x00012ab4
   12468:			; <UNDEFINED> instruction: 0x00012ab4
   1246c:			; <UNDEFINED> instruction: 0x00012ab4
   12470:			; <UNDEFINED> instruction: 0x00012ab4
   12474:			; <UNDEFINED> instruction: 0x00012ab4
   12478:			; <UNDEFINED> instruction: 0x00012ab4
   1247c:			; <UNDEFINED> instruction: 0x00012ab4
   12480:			; <UNDEFINED> instruction: 0x00012ab4
   12484:	andeq	r2, r1, r0, asr r9
   12488:	andeq	r2, r1, ip, lsr #19
   1248c:	andeq	r2, r1, r0, asr r9
   12490:	muleq	r1, r8, r9
   12494:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   12498:	cmp	r3, #0
   1249c:	beq	12660 <putchar_unlocked@plt+0x1914>
   124a0:	ldrb	r3, [fp, #-34]	; 0xffffffde
   124a4:	cmp	r3, #0
   124a8:	bne	13508 <putchar_unlocked@plt+0x27bc>
   124ac:	mov	r3, #1
   124b0:	strb	r3, [fp, #-41]	; 0xffffffd7
   124b4:	ldr	r3, [fp, #4]
   124b8:	cmp	r3, #2
   124bc:	bne	1256c <putchar_unlocked@plt+0x1820>
   124c0:	ldrb	r3, [fp, #-35]	; 0xffffffdd
   124c4:	eor	r3, r3, #1
   124c8:	uxtb	r3, r3
   124cc:	cmp	r3, #0
   124d0:	beq	1256c <putchar_unlocked@plt+0x1820>
   124d4:	ldr	r2, [fp, #-20]	; 0xffffffec
   124d8:	ldr	r3, [fp, #-92]	; 0xffffffa4
   124dc:	cmp	r2, r3
   124e0:	bcs	124f8 <putchar_unlocked@plt+0x17ac>
   124e4:	ldr	r2, [fp, #-88]	; 0xffffffa8
   124e8:	ldr	r3, [fp, #-20]	; 0xffffffec
   124ec:	add	r3, r2, r3
   124f0:	mov	r2, #39	; 0x27
   124f4:	strb	r2, [r3]
   124f8:	ldr	r3, [fp, #-20]	; 0xffffffec
   124fc:	add	r3, r3, #1
   12500:	str	r3, [fp, #-20]	; 0xffffffec
   12504:	ldr	r2, [fp, #-20]	; 0xffffffec
   12508:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1250c:	cmp	r2, r3
   12510:	bcs	12528 <putchar_unlocked@plt+0x17dc>
   12514:	ldr	r2, [fp, #-88]	; 0xffffffa8
   12518:	ldr	r3, [fp, #-20]	; 0xffffffec
   1251c:	add	r3, r2, r3
   12520:	mov	r2, #36	; 0x24
   12524:	strb	r2, [r3]
   12528:	ldr	r3, [fp, #-20]	; 0xffffffec
   1252c:	add	r3, r3, #1
   12530:	str	r3, [fp, #-20]	; 0xffffffec
   12534:	ldr	r2, [fp, #-20]	; 0xffffffec
   12538:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1253c:	cmp	r2, r3
   12540:	bcs	12558 <putchar_unlocked@plt+0x180c>
   12544:	ldr	r2, [fp, #-88]	; 0xffffffa8
   12548:	ldr	r3, [fp, #-20]	; 0xffffffec
   1254c:	add	r3, r2, r3
   12550:	mov	r2, #39	; 0x27
   12554:	strb	r2, [r3]
   12558:	ldr	r3, [fp, #-20]	; 0xffffffec
   1255c:	add	r3, r3, #1
   12560:	str	r3, [fp, #-20]	; 0xffffffec
   12564:	mov	r3, #1
   12568:	strb	r3, [fp, #-35]	; 0xffffffdd
   1256c:	ldr	r2, [fp, #-20]	; 0xffffffec
   12570:	ldr	r3, [fp, #-92]	; 0xffffffa4
   12574:	cmp	r2, r3
   12578:	bcs	12590 <putchar_unlocked@plt+0x1844>
   1257c:	ldr	r2, [fp, #-88]	; 0xffffffa8
   12580:	ldr	r3, [fp, #-20]	; 0xffffffec
   12584:	add	r3, r2, r3
   12588:	mov	r2, #92	; 0x5c
   1258c:	strb	r2, [r3]
   12590:	ldr	r3, [fp, #-20]	; 0xffffffec
   12594:	add	r3, r3, #1
   12598:	str	r3, [fp, #-20]	; 0xffffffec
   1259c:	ldr	r3, [fp, #4]
   125a0:	cmp	r3, #2
   125a4:	beq	12654 <putchar_unlocked@plt+0x1908>
   125a8:	ldr	r3, [fp, #-16]
   125ac:	add	r2, r3, #1
   125b0:	ldr	r3, [fp, #-100]	; 0xffffff9c
   125b4:	cmp	r2, r3
   125b8:	bcs	12654 <putchar_unlocked@plt+0x1908>
   125bc:	ldr	r3, [fp, #-16]
   125c0:	add	r3, r3, #1
   125c4:	ldr	r2, [fp, #-96]	; 0xffffffa0
   125c8:	add	r3, r2, r3
   125cc:	ldrb	r3, [r3]
   125d0:	cmp	r3, #47	; 0x2f
   125d4:	bls	12654 <putchar_unlocked@plt+0x1908>
   125d8:	ldr	r3, [fp, #-16]
   125dc:	add	r3, r3, #1
   125e0:	ldr	r2, [fp, #-96]	; 0xffffffa0
   125e4:	add	r3, r2, r3
   125e8:	ldrb	r3, [r3]
   125ec:	cmp	r3, #57	; 0x39
   125f0:	bhi	12654 <putchar_unlocked@plt+0x1908>
   125f4:	ldr	r2, [fp, #-20]	; 0xffffffec
   125f8:	ldr	r3, [fp, #-92]	; 0xffffffa4
   125fc:	cmp	r2, r3
   12600:	bcs	12618 <putchar_unlocked@plt+0x18cc>
   12604:	ldr	r2, [fp, #-88]	; 0xffffffa8
   12608:	ldr	r3, [fp, #-20]	; 0xffffffec
   1260c:	add	r3, r2, r3
   12610:	mov	r2, #48	; 0x30
   12614:	strb	r2, [r3]
   12618:	ldr	r3, [fp, #-20]	; 0xffffffec
   1261c:	add	r3, r3, #1
   12620:	str	r3, [fp, #-20]	; 0xffffffec
   12624:	ldr	r2, [fp, #-20]	; 0xffffffec
   12628:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1262c:	cmp	r2, r3
   12630:	bcs	12648 <putchar_unlocked@plt+0x18fc>
   12634:	ldr	r2, [fp, #-88]	; 0xffffffa8
   12638:	ldr	r3, [fp, #-20]	; 0xffffffec
   1263c:	add	r3, r2, r3
   12640:	mov	r2, #48	; 0x30
   12644:	strb	r2, [r3]
   12648:	ldr	r3, [fp, #-20]	; 0xffffffec
   1264c:	add	r3, r3, #1
   12650:	str	r3, [fp, #-20]	; 0xffffffec
   12654:	mov	r3, #48	; 0x30
   12658:	strb	r3, [fp, #-38]	; 0xffffffda
   1265c:	b	1309c <putchar_unlocked@plt+0x2350>
   12660:	ldr	r3, [fp, #8]
   12664:	and	r3, r3, #1
   12668:	cmp	r3, #0
   1266c:	beq	1309c <putchar_unlocked@plt+0x2350>
   12670:	b	13338 <putchar_unlocked@plt+0x25ec>
   12674:	ldr	r3, [fp, #4]
   12678:	cmp	r3, #2
   1267c:	beq	1268c <putchar_unlocked@plt+0x1940>
   12680:	cmp	r3, #5
   12684:	beq	1269c <putchar_unlocked@plt+0x1950>
   12688:	b	12880 <putchar_unlocked@plt+0x1b34>
   1268c:	ldrb	r3, [fp, #-34]	; 0xffffffde
   12690:	cmp	r3, #0
   12694:	beq	12874 <putchar_unlocked@plt+0x1b28>
   12698:	b	13544 <putchar_unlocked@plt+0x27f8>
   1269c:	ldr	r3, [fp, #8]
   126a0:	and	r3, r3, #4
   126a4:	cmp	r3, #0
   126a8:	beq	1287c <putchar_unlocked@plt+0x1b30>
   126ac:	ldr	r3, [fp, #-16]
   126b0:	add	r2, r3, #2
   126b4:	ldr	r3, [fp, #-100]	; 0xffffff9c
   126b8:	cmp	r2, r3
   126bc:	bcs	1287c <putchar_unlocked@plt+0x1b30>
   126c0:	ldr	r3, [fp, #-16]
   126c4:	add	r3, r3, #1
   126c8:	ldr	r2, [fp, #-96]	; 0xffffffa0
   126cc:	add	r3, r2, r3
   126d0:	ldrb	r3, [r3]
   126d4:	cmp	r3, #63	; 0x3f
   126d8:	bne	1287c <putchar_unlocked@plt+0x1b30>
   126dc:	ldr	r3, [fp, #-16]
   126e0:	add	r3, r3, #2
   126e4:	ldr	r2, [fp, #-96]	; 0xffffffa0
   126e8:	add	r3, r2, r3
   126ec:	ldrb	r3, [r3]
   126f0:	sub	r3, r3, #33	; 0x21
   126f4:	cmp	r3, #29
   126f8:	ldrls	pc, [pc, r3, lsl #2]
   126fc:	b	1286c <putchar_unlocked@plt+0x1b20>
   12700:	andeq	r2, r1, r8, ror r7
   12704:	andeq	r2, r1, ip, ror #16
   12708:	andeq	r2, r1, ip, ror #16
   1270c:	andeq	r2, r1, ip, ror #16
   12710:	andeq	r2, r1, ip, ror #16
   12714:	andeq	r2, r1, ip, ror #16
   12718:	andeq	r2, r1, r8, ror r7
   1271c:	andeq	r2, r1, r8, ror r7
   12720:	andeq	r2, r1, r8, ror r7
   12724:	andeq	r2, r1, ip, ror #16
   12728:	andeq	r2, r1, ip, ror #16
   1272c:	andeq	r2, r1, ip, ror #16
   12730:	andeq	r2, r1, r8, ror r7
   12734:	andeq	r2, r1, ip, ror #16
   12738:	andeq	r2, r1, r8, ror r7
   1273c:	andeq	r2, r1, ip, ror #16
   12740:	andeq	r2, r1, ip, ror #16
   12744:	andeq	r2, r1, ip, ror #16
   12748:	andeq	r2, r1, ip, ror #16
   1274c:	andeq	r2, r1, ip, ror #16
   12750:	andeq	r2, r1, ip, ror #16
   12754:	andeq	r2, r1, ip, ror #16
   12758:	andeq	r2, r1, ip, ror #16
   1275c:	andeq	r2, r1, ip, ror #16
   12760:	andeq	r2, r1, ip, ror #16
   12764:	andeq	r2, r1, ip, ror #16
   12768:	andeq	r2, r1, ip, ror #16
   1276c:	andeq	r2, r1, r8, ror r7
   12770:	andeq	r2, r1, r8, ror r7
   12774:	andeq	r2, r1, r8, ror r7
   12778:	ldrb	r3, [fp, #-34]	; 0xffffffde
   1277c:	cmp	r3, #0
   12780:	bne	13510 <putchar_unlocked@plt+0x27c4>
   12784:	ldr	r3, [fp, #-16]
   12788:	add	r3, r3, #2
   1278c:	ldr	r2, [fp, #-96]	; 0xffffffa0
   12790:	add	r3, r2, r3
   12794:	ldrb	r3, [r3]
   12798:	strb	r3, [fp, #-38]	; 0xffffffda
   1279c:	ldr	r3, [fp, #-16]
   127a0:	add	r3, r3, #2
   127a4:	str	r3, [fp, #-16]
   127a8:	ldr	r2, [fp, #-20]	; 0xffffffec
   127ac:	ldr	r3, [fp, #-92]	; 0xffffffa4
   127b0:	cmp	r2, r3
   127b4:	bcs	127cc <putchar_unlocked@plt+0x1a80>
   127b8:	ldr	r2, [fp, #-88]	; 0xffffffa8
   127bc:	ldr	r3, [fp, #-20]	; 0xffffffec
   127c0:	add	r3, r2, r3
   127c4:	mov	r2, #63	; 0x3f
   127c8:	strb	r2, [r3]
   127cc:	ldr	r3, [fp, #-20]	; 0xffffffec
   127d0:	add	r3, r3, #1
   127d4:	str	r3, [fp, #-20]	; 0xffffffec
   127d8:	ldr	r2, [fp, #-20]	; 0xffffffec
   127dc:	ldr	r3, [fp, #-92]	; 0xffffffa4
   127e0:	cmp	r2, r3
   127e4:	bcs	127fc <putchar_unlocked@plt+0x1ab0>
   127e8:	ldr	r2, [fp, #-88]	; 0xffffffa8
   127ec:	ldr	r3, [fp, #-20]	; 0xffffffec
   127f0:	add	r3, r2, r3
   127f4:	mov	r2, #34	; 0x22
   127f8:	strb	r2, [r3]
   127fc:	ldr	r3, [fp, #-20]	; 0xffffffec
   12800:	add	r3, r3, #1
   12804:	str	r3, [fp, #-20]	; 0xffffffec
   12808:	ldr	r2, [fp, #-20]	; 0xffffffec
   1280c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   12810:	cmp	r2, r3
   12814:	bcs	1282c <putchar_unlocked@plt+0x1ae0>
   12818:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1281c:	ldr	r3, [fp, #-20]	; 0xffffffec
   12820:	add	r3, r2, r3
   12824:	mov	r2, #34	; 0x22
   12828:	strb	r2, [r3]
   1282c:	ldr	r3, [fp, #-20]	; 0xffffffec
   12830:	add	r3, r3, #1
   12834:	str	r3, [fp, #-20]	; 0xffffffec
   12838:	ldr	r2, [fp, #-20]	; 0xffffffec
   1283c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   12840:	cmp	r2, r3
   12844:	bcs	1285c <putchar_unlocked@plt+0x1b10>
   12848:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1284c:	ldr	r3, [fp, #-20]	; 0xffffffec
   12850:	add	r3, r2, r3
   12854:	mov	r2, #63	; 0x3f
   12858:	strb	r2, [r3]
   1285c:	ldr	r3, [fp, #-20]	; 0xffffffec
   12860:	add	r3, r3, #1
   12864:	str	r3, [fp, #-20]	; 0xffffffec
   12868:	b	12870 <putchar_unlocked@plt+0x1b24>
   1286c:	nop			; (mov r0, r0)
   12870:	b	1287c <putchar_unlocked@plt+0x1b30>
   12874:	nop			; (mov r0, r0)
   12878:	b	130c8 <putchar_unlocked@plt+0x237c>
   1287c:	nop			; (mov r0, r0)
   12880:	b	130c8 <putchar_unlocked@plt+0x237c>
   12884:	mov	r3, #97	; 0x61
   12888:	strb	r3, [fp, #-39]	; 0xffffffd9
   1288c:	b	12938 <putchar_unlocked@plt+0x1bec>
   12890:	mov	r3, #98	; 0x62
   12894:	strb	r3, [fp, #-39]	; 0xffffffd9
   12898:	b	12938 <putchar_unlocked@plt+0x1bec>
   1289c:	mov	r3, #102	; 0x66
   128a0:	strb	r3, [fp, #-39]	; 0xffffffd9
   128a4:	b	12938 <putchar_unlocked@plt+0x1bec>
   128a8:	mov	r3, #110	; 0x6e
   128ac:	strb	r3, [fp, #-39]	; 0xffffffd9
   128b0:	b	12920 <putchar_unlocked@plt+0x1bd4>
   128b4:	mov	r3, #114	; 0x72
   128b8:	strb	r3, [fp, #-39]	; 0xffffffd9
   128bc:	b	12920 <putchar_unlocked@plt+0x1bd4>
   128c0:	mov	r3, #116	; 0x74
   128c4:	strb	r3, [fp, #-39]	; 0xffffffd9
   128c8:	b	12920 <putchar_unlocked@plt+0x1bd4>
   128cc:	mov	r3, #118	; 0x76
   128d0:	strb	r3, [fp, #-39]	; 0xffffffd9
   128d4:	b	12938 <putchar_unlocked@plt+0x1bec>
   128d8:	ldrb	r3, [fp, #-38]	; 0xffffffda
   128dc:	strb	r3, [fp, #-39]	; 0xffffffd9
   128e0:	ldr	r3, [fp, #4]
   128e4:	cmp	r3, #2
   128e8:	bne	128fc <putchar_unlocked@plt+0x1bb0>
   128ec:	ldrb	r3, [fp, #-34]	; 0xffffffde
   128f0:	cmp	r3, #0
   128f4:	beq	13250 <putchar_unlocked@plt+0x2504>
   128f8:	b	13544 <putchar_unlocked@plt+0x27f8>
   128fc:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   12900:	cmp	r3, #0
   12904:	beq	12920 <putchar_unlocked@plt+0x1bd4>
   12908:	ldrb	r3, [fp, #-34]	; 0xffffffde
   1290c:	cmp	r3, #0
   12910:	beq	12920 <putchar_unlocked@plt+0x1bd4>
   12914:	ldr	r3, [fp, #-32]	; 0xffffffe0
   12918:	cmp	r3, #0
   1291c:	bne	13258 <putchar_unlocked@plt+0x250c>
   12920:	ldr	r3, [fp, #4]
   12924:	cmp	r3, #2
   12928:	bne	12938 <putchar_unlocked@plt+0x1bec>
   1292c:	ldrb	r3, [fp, #-34]	; 0xffffffde
   12930:	cmp	r3, #0
   12934:	bne	13518 <putchar_unlocked@plt+0x27cc>
   12938:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   1293c:	cmp	r3, #0
   12940:	beq	130a4 <putchar_unlocked@plt+0x2358>
   12944:	ldrb	r3, [fp, #-39]	; 0xffffffd9
   12948:	strb	r3, [fp, #-38]	; 0xffffffda
   1294c:	b	13150 <putchar_unlocked@plt+0x2404>
   12950:	ldr	r3, [fp, #-100]	; 0xffffff9c
   12954:	cmn	r3, #1
   12958:	bne	1297c <putchar_unlocked@plt+0x1c30>
   1295c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   12960:	add	r3, r3, #1
   12964:	ldrb	r3, [r3]
   12968:	cmp	r3, #0
   1296c:	movne	r3, #1
   12970:	moveq	r3, #0
   12974:	uxtb	r3, r3
   12978:	b	12990 <putchar_unlocked@plt+0x1c44>
   1297c:	ldr	r3, [fp, #-100]	; 0xffffff9c
   12980:	cmp	r3, #1
   12984:	movne	r3, #1
   12988:	moveq	r3, #0
   1298c:	uxtb	r3, r3
   12990:	cmp	r3, #0
   12994:	bne	130ac <putchar_unlocked@plt+0x2360>
   12998:	ldr	r3, [fp, #-16]
   1299c:	cmp	r3, #0
   129a0:	bne	130b4 <putchar_unlocked@plt+0x2368>
   129a4:	mov	r3, #1
   129a8:	strb	r3, [fp, #-42]	; 0xffffffd6
   129ac:	ldr	r3, [fp, #4]
   129b0:	cmp	r3, #2
   129b4:	bne	130bc <putchar_unlocked@plt+0x2370>
   129b8:	ldrb	r3, [fp, #-34]	; 0xffffffde
   129bc:	cmp	r3, #0
   129c0:	beq	130bc <putchar_unlocked@plt+0x2370>
   129c4:	b	13544 <putchar_unlocked@plt+0x27f8>
   129c8:	mov	r3, #1
   129cc:	strb	r3, [fp, #-36]	; 0xffffffdc
   129d0:	mov	r3, #1
   129d4:	strb	r3, [fp, #-42]	; 0xffffffd6
   129d8:	ldr	r3, [fp, #4]
   129dc:	cmp	r3, #2
   129e0:	bne	130c4 <putchar_unlocked@plt+0x2378>
   129e4:	ldrb	r3, [fp, #-34]	; 0xffffffde
   129e8:	cmp	r3, #0
   129ec:	bne	13520 <putchar_unlocked@plt+0x27d4>
   129f0:	ldr	r3, [fp, #-92]	; 0xffffffa4
   129f4:	cmp	r3, #0
   129f8:	beq	12a18 <putchar_unlocked@plt+0x1ccc>
   129fc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12a00:	cmp	r3, #0
   12a04:	bne	12a18 <putchar_unlocked@plt+0x1ccc>
   12a08:	ldr	r3, [fp, #-92]	; 0xffffffa4
   12a0c:	str	r3, [fp, #-24]	; 0xffffffe8
   12a10:	mov	r3, #0
   12a14:	str	r3, [fp, #-92]	; 0xffffffa4
   12a18:	ldr	r2, [fp, #-20]	; 0xffffffec
   12a1c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   12a20:	cmp	r2, r3
   12a24:	bcs	12a3c <putchar_unlocked@plt+0x1cf0>
   12a28:	ldr	r2, [fp, #-88]	; 0xffffffa8
   12a2c:	ldr	r3, [fp, #-20]	; 0xffffffec
   12a30:	add	r3, r2, r3
   12a34:	mov	r2, #39	; 0x27
   12a38:	strb	r2, [r3]
   12a3c:	ldr	r3, [fp, #-20]	; 0xffffffec
   12a40:	add	r3, r3, #1
   12a44:	str	r3, [fp, #-20]	; 0xffffffec
   12a48:	ldr	r2, [fp, #-20]	; 0xffffffec
   12a4c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   12a50:	cmp	r2, r3
   12a54:	bcs	12a6c <putchar_unlocked@plt+0x1d20>
   12a58:	ldr	r2, [fp, #-88]	; 0xffffffa8
   12a5c:	ldr	r3, [fp, #-20]	; 0xffffffec
   12a60:	add	r3, r2, r3
   12a64:	mov	r2, #92	; 0x5c
   12a68:	strb	r2, [r3]
   12a6c:	ldr	r3, [fp, #-20]	; 0xffffffec
   12a70:	add	r3, r3, #1
   12a74:	str	r3, [fp, #-20]	; 0xffffffec
   12a78:	ldr	r2, [fp, #-20]	; 0xffffffec
   12a7c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   12a80:	cmp	r2, r3
   12a84:	bcs	12a9c <putchar_unlocked@plt+0x1d50>
   12a88:	ldr	r2, [fp, #-88]	; 0xffffffa8
   12a8c:	ldr	r3, [fp, #-20]	; 0xffffffec
   12a90:	add	r3, r2, r3
   12a94:	mov	r2, #39	; 0x27
   12a98:	strb	r2, [r3]
   12a9c:	ldr	r3, [fp, #-20]	; 0xffffffec
   12aa0:	add	r3, r3, #1
   12aa4:	str	r3, [fp, #-20]	; 0xffffffec
   12aa8:	mov	r3, #0
   12aac:	strb	r3, [fp, #-35]	; 0xffffffdd
   12ab0:	b	130c4 <putchar_unlocked@plt+0x2378>
   12ab4:	mov	r3, #1
   12ab8:	strb	r3, [fp, #-42]	; 0xffffffd6
   12abc:	b	130c8 <putchar_unlocked@plt+0x237c>
   12ac0:	ldrb	r3, [fp, #-57]	; 0xffffffc7
   12ac4:	cmp	r3, #0
   12ac8:	beq	12b08 <putchar_unlocked@plt+0x1dbc>
   12acc:	mov	r3, #1
   12ad0:	str	r3, [fp, #-48]	; 0xffffffd0
   12ad4:	bl	10c80 <__ctype_b_loc@plt>
   12ad8:	mov	r3, r0
   12adc:	ldr	r2, [r3]
   12ae0:	ldrb	r3, [fp, #-38]	; 0xffffffda
   12ae4:	lsl	r3, r3, #1
   12ae8:	add	r3, r2, r3
   12aec:	ldrh	r3, [r3]
   12af0:	and	r3, r3, #16384	; 0x4000
   12af4:	cmp	r3, #0
   12af8:	movne	r3, #1
   12afc:	moveq	r3, #0
   12b00:	strb	r3, [fp, #-49]	; 0xffffffcf
   12b04:	b	12d54 <putchar_unlocked@plt+0x2008>
   12b08:	sub	r3, fp, #76	; 0x4c
   12b0c:	mov	r2, #8
   12b10:	mov	r1, #0
   12b14:	mov	r0, r3
   12b18:	bl	10cd4 <memset@plt>
   12b1c:	mov	r3, #0
   12b20:	str	r3, [fp, #-48]	; 0xffffffd0
   12b24:	mov	r3, #1
   12b28:	strb	r3, [fp, #-49]	; 0xffffffcf
   12b2c:	ldr	r3, [fp, #-100]	; 0xffffff9c
   12b30:	cmn	r3, #1
   12b34:	bne	12b44 <putchar_unlocked@plt+0x1df8>
   12b38:	ldr	r0, [fp, #-96]	; 0xffffffa0
   12b3c:	bl	10ca4 <strlen@plt>
   12b40:	str	r0, [fp, #-100]	; 0xffffff9c
   12b44:	ldr	r2, [fp, #-16]
   12b48:	ldr	r3, [fp, #-48]	; 0xffffffd0
   12b4c:	add	r3, r2, r3
   12b50:	ldr	r2, [fp, #-96]	; 0xffffffa0
   12b54:	add	r1, r2, r3
   12b58:	ldr	r2, [fp, #-16]
   12b5c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   12b60:	add	r3, r2, r3
   12b64:	ldr	r2, [fp, #-100]	; 0xffffff9c
   12b68:	sub	r2, r2, r3
   12b6c:	sub	r3, fp, #76	; 0x4c
   12b70:	sub	r0, fp, #80	; 0x50
   12b74:	bl	15d84 <putchar_unlocked@plt+0x5038>
   12b78:	str	r0, [fp, #-64]	; 0xffffffc0
   12b7c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   12b80:	cmp	r3, #0
   12b84:	beq	12d48 <putchar_unlocked@plt+0x1ffc>
   12b88:	ldr	r3, [fp, #-64]	; 0xffffffc0
   12b8c:	cmn	r3, #1
   12b90:	bne	12ba0 <putchar_unlocked@plt+0x1e54>
   12b94:	mov	r3, #0
   12b98:	strb	r3, [fp, #-49]	; 0xffffffcf
   12b9c:	b	12d54 <putchar_unlocked@plt+0x2008>
   12ba0:	ldr	r3, [fp, #-64]	; 0xffffffc0
   12ba4:	cmn	r3, #2
   12ba8:	bne	12c00 <putchar_unlocked@plt+0x1eb4>
   12bac:	mov	r3, #0
   12bb0:	strb	r3, [fp, #-49]	; 0xffffffcf
   12bb4:	b	12bc4 <putchar_unlocked@plt+0x1e78>
   12bb8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   12bbc:	add	r3, r3, #1
   12bc0:	str	r3, [fp, #-48]	; 0xffffffd0
   12bc4:	ldr	r2, [fp, #-16]
   12bc8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   12bcc:	add	r2, r2, r3
   12bd0:	ldr	r3, [fp, #-100]	; 0xffffff9c
   12bd4:	cmp	r2, r3
   12bd8:	bcs	12d50 <putchar_unlocked@plt+0x2004>
   12bdc:	ldr	r2, [fp, #-16]
   12be0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   12be4:	add	r3, r2, r3
   12be8:	ldr	r2, [fp, #-96]	; 0xffffffa0
   12bec:	add	r3, r2, r3
   12bf0:	ldrb	r3, [r3]
   12bf4:	cmp	r3, #0
   12bf8:	bne	12bb8 <putchar_unlocked@plt+0x1e6c>
   12bfc:	b	12d50 <putchar_unlocked@plt+0x2004>
   12c00:	ldrb	r3, [fp, #-34]	; 0xffffffde
   12c04:	cmp	r3, #0
   12c08:	beq	12cfc <putchar_unlocked@plt+0x1fb0>
   12c0c:	ldr	r3, [fp, #4]
   12c10:	cmp	r3, #2
   12c14:	bne	12cfc <putchar_unlocked@plt+0x1fb0>
   12c18:	mov	r3, #1
   12c1c:	str	r3, [fp, #-56]	; 0xffffffc8
   12c20:	b	12cec <putchar_unlocked@plt+0x1fa0>
   12c24:	ldr	r2, [fp, #-16]
   12c28:	ldr	r3, [fp, #-48]	; 0xffffffd0
   12c2c:	add	r2, r2, r3
   12c30:	ldr	r3, [fp, #-56]	; 0xffffffc8
   12c34:	add	r3, r2, r3
   12c38:	ldr	r2, [fp, #-96]	; 0xffffffa0
   12c3c:	add	r3, r2, r3
   12c40:	ldrb	r3, [r3]
   12c44:	sub	r3, r3, #91	; 0x5b
   12c48:	cmp	r3, #33	; 0x21
   12c4c:	ldrls	pc, [pc, r3, lsl #2]
   12c50:	b	12cdc <putchar_unlocked@plt+0x1f90>
   12c54:	andeq	r3, r1, r8, lsr #10
   12c58:	andeq	r3, r1, r8, lsr #10
   12c5c:	ldrdeq	r2, [r1], -ip
   12c60:	andeq	r3, r1, r8, lsr #10
   12c64:	ldrdeq	r2, [r1], -ip
   12c68:	andeq	r3, r1, r8, lsr #10
   12c6c:	ldrdeq	r2, [r1], -ip
   12c70:	ldrdeq	r2, [r1], -ip
   12c74:	ldrdeq	r2, [r1], -ip
   12c78:	ldrdeq	r2, [r1], -ip
   12c7c:	ldrdeq	r2, [r1], -ip
   12c80:	ldrdeq	r2, [r1], -ip
   12c84:	ldrdeq	r2, [r1], -ip
   12c88:	ldrdeq	r2, [r1], -ip
   12c8c:	ldrdeq	r2, [r1], -ip
   12c90:	ldrdeq	r2, [r1], -ip
   12c94:	ldrdeq	r2, [r1], -ip
   12c98:	ldrdeq	r2, [r1], -ip
   12c9c:	ldrdeq	r2, [r1], -ip
   12ca0:	ldrdeq	r2, [r1], -ip
   12ca4:	ldrdeq	r2, [r1], -ip
   12ca8:	ldrdeq	r2, [r1], -ip
   12cac:	ldrdeq	r2, [r1], -ip
   12cb0:	ldrdeq	r2, [r1], -ip
   12cb4:	ldrdeq	r2, [r1], -ip
   12cb8:	ldrdeq	r2, [r1], -ip
   12cbc:	ldrdeq	r2, [r1], -ip
   12cc0:	ldrdeq	r2, [r1], -ip
   12cc4:	ldrdeq	r2, [r1], -ip
   12cc8:	ldrdeq	r2, [r1], -ip
   12ccc:	ldrdeq	r2, [r1], -ip
   12cd0:	ldrdeq	r2, [r1], -ip
   12cd4:	ldrdeq	r2, [r1], -ip
   12cd8:	andeq	r3, r1, r8, lsr #10
   12cdc:	nop			; (mov r0, r0)
   12ce0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   12ce4:	add	r3, r3, #1
   12ce8:	str	r3, [fp, #-56]	; 0xffffffc8
   12cec:	ldr	r2, [fp, #-56]	; 0xffffffc8
   12cf0:	ldr	r3, [fp, #-64]	; 0xffffffc0
   12cf4:	cmp	r2, r3
   12cf8:	bcc	12c24 <putchar_unlocked@plt+0x1ed8>
   12cfc:	ldr	r3, [fp, #-80]	; 0xffffffb0
   12d00:	mov	r0, r3
   12d04:	bl	10be4 <iswprint@plt>
   12d08:	mov	r3, r0
   12d0c:	cmp	r3, #0
   12d10:	bne	12d1c <putchar_unlocked@plt+0x1fd0>
   12d14:	mov	r3, #0
   12d18:	strb	r3, [fp, #-49]	; 0xffffffcf
   12d1c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   12d20:	ldr	r3, [fp, #-64]	; 0xffffffc0
   12d24:	add	r3, r2, r3
   12d28:	str	r3, [fp, #-48]	; 0xffffffd0
   12d2c:	sub	r3, fp, #76	; 0x4c
   12d30:	mov	r0, r3
   12d34:	bl	10ba8 <mbsinit@plt>
   12d38:	mov	r3, r0
   12d3c:	cmp	r3, #0
   12d40:	beq	12b44 <putchar_unlocked@plt+0x1df8>
   12d44:	b	12d54 <putchar_unlocked@plt+0x2008>
   12d48:	nop			; (mov r0, r0)
   12d4c:	b	12d54 <putchar_unlocked@plt+0x2008>
   12d50:	nop			; (mov r0, r0)
   12d54:	ldrb	r3, [fp, #-49]	; 0xffffffcf
   12d58:	strb	r3, [fp, #-42]	; 0xffffffd6
   12d5c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   12d60:	cmp	r3, #1
   12d64:	bhi	12d88 <putchar_unlocked@plt+0x203c>
   12d68:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   12d6c:	cmp	r3, #0
   12d70:	beq	130c8 <putchar_unlocked@plt+0x237c>
   12d74:	ldrb	r3, [fp, #-49]	; 0xffffffcf
   12d78:	eor	r3, r3, #1
   12d7c:	uxtb	r3, r3
   12d80:	cmp	r3, #0
   12d84:	beq	130c8 <putchar_unlocked@plt+0x237c>
   12d88:	ldr	r2, [fp, #-16]
   12d8c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   12d90:	add	r3, r2, r3
   12d94:	str	r3, [fp, #-68]	; 0xffffffbc
   12d98:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   12d9c:	cmp	r3, #0
   12da0:	beq	12f60 <putchar_unlocked@plt+0x2214>
   12da4:	ldrb	r3, [fp, #-49]	; 0xffffffcf
   12da8:	eor	r3, r3, #1
   12dac:	uxtb	r3, r3
   12db0:	cmp	r3, #0
   12db4:	beq	12f60 <putchar_unlocked@plt+0x2214>
   12db8:	ldrb	r3, [fp, #-34]	; 0xffffffde
   12dbc:	cmp	r3, #0
   12dc0:	bne	13530 <putchar_unlocked@plt+0x27e4>
   12dc4:	mov	r3, #1
   12dc8:	strb	r3, [fp, #-41]	; 0xffffffd7
   12dcc:	ldr	r3, [fp, #4]
   12dd0:	cmp	r3, #2
   12dd4:	bne	12e84 <putchar_unlocked@plt+0x2138>
   12dd8:	ldrb	r3, [fp, #-35]	; 0xffffffdd
   12ddc:	eor	r3, r3, #1
   12de0:	uxtb	r3, r3
   12de4:	cmp	r3, #0
   12de8:	beq	12e84 <putchar_unlocked@plt+0x2138>
   12dec:	ldr	r2, [fp, #-20]	; 0xffffffec
   12df0:	ldr	r3, [fp, #-92]	; 0xffffffa4
   12df4:	cmp	r2, r3
   12df8:	bcs	12e10 <putchar_unlocked@plt+0x20c4>
   12dfc:	ldr	r2, [fp, #-88]	; 0xffffffa8
   12e00:	ldr	r3, [fp, #-20]	; 0xffffffec
   12e04:	add	r3, r2, r3
   12e08:	mov	r2, #39	; 0x27
   12e0c:	strb	r2, [r3]
   12e10:	ldr	r3, [fp, #-20]	; 0xffffffec
   12e14:	add	r3, r3, #1
   12e18:	str	r3, [fp, #-20]	; 0xffffffec
   12e1c:	ldr	r2, [fp, #-20]	; 0xffffffec
   12e20:	ldr	r3, [fp, #-92]	; 0xffffffa4
   12e24:	cmp	r2, r3
   12e28:	bcs	12e40 <putchar_unlocked@plt+0x20f4>
   12e2c:	ldr	r2, [fp, #-88]	; 0xffffffa8
   12e30:	ldr	r3, [fp, #-20]	; 0xffffffec
   12e34:	add	r3, r2, r3
   12e38:	mov	r2, #36	; 0x24
   12e3c:	strb	r2, [r3]
   12e40:	ldr	r3, [fp, #-20]	; 0xffffffec
   12e44:	add	r3, r3, #1
   12e48:	str	r3, [fp, #-20]	; 0xffffffec
   12e4c:	ldr	r2, [fp, #-20]	; 0xffffffec
   12e50:	ldr	r3, [fp, #-92]	; 0xffffffa4
   12e54:	cmp	r2, r3
   12e58:	bcs	12e70 <putchar_unlocked@plt+0x2124>
   12e5c:	ldr	r2, [fp, #-88]	; 0xffffffa8
   12e60:	ldr	r3, [fp, #-20]	; 0xffffffec
   12e64:	add	r3, r2, r3
   12e68:	mov	r2, #39	; 0x27
   12e6c:	strb	r2, [r3]
   12e70:	ldr	r3, [fp, #-20]	; 0xffffffec
   12e74:	add	r3, r3, #1
   12e78:	str	r3, [fp, #-20]	; 0xffffffec
   12e7c:	mov	r3, #1
   12e80:	strb	r3, [fp, #-35]	; 0xffffffdd
   12e84:	ldr	r2, [fp, #-20]	; 0xffffffec
   12e88:	ldr	r3, [fp, #-92]	; 0xffffffa4
   12e8c:	cmp	r2, r3
   12e90:	bcs	12ea8 <putchar_unlocked@plt+0x215c>
   12e94:	ldr	r2, [fp, #-88]	; 0xffffffa8
   12e98:	ldr	r3, [fp, #-20]	; 0xffffffec
   12e9c:	add	r3, r2, r3
   12ea0:	mov	r2, #92	; 0x5c
   12ea4:	strb	r2, [r3]
   12ea8:	ldr	r3, [fp, #-20]	; 0xffffffec
   12eac:	add	r3, r3, #1
   12eb0:	str	r3, [fp, #-20]	; 0xffffffec
   12eb4:	ldr	r2, [fp, #-20]	; 0xffffffec
   12eb8:	ldr	r3, [fp, #-92]	; 0xffffffa4
   12ebc:	cmp	r2, r3
   12ec0:	bcs	12ee8 <putchar_unlocked@plt+0x219c>
   12ec4:	ldr	r2, [fp, #-88]	; 0xffffffa8
   12ec8:	ldr	r3, [fp, #-20]	; 0xffffffec
   12ecc:	add	r3, r2, r3
   12ed0:	ldrb	r2, [fp, #-38]	; 0xffffffda
   12ed4:	lsr	r2, r2, #6
   12ed8:	uxtb	r2, r2
   12edc:	add	r2, r2, #48	; 0x30
   12ee0:	uxtb	r2, r2
   12ee4:	strb	r2, [r3]
   12ee8:	ldr	r3, [fp, #-20]	; 0xffffffec
   12eec:	add	r3, r3, #1
   12ef0:	str	r3, [fp, #-20]	; 0xffffffec
   12ef4:	ldr	r2, [fp, #-20]	; 0xffffffec
   12ef8:	ldr	r3, [fp, #-92]	; 0xffffffa4
   12efc:	cmp	r2, r3
   12f00:	bcs	12f30 <putchar_unlocked@plt+0x21e4>
   12f04:	ldr	r2, [fp, #-88]	; 0xffffffa8
   12f08:	ldr	r3, [fp, #-20]	; 0xffffffec
   12f0c:	add	r3, r2, r3
   12f10:	ldrb	r2, [fp, #-38]	; 0xffffffda
   12f14:	lsr	r2, r2, #3
   12f18:	uxtb	r2, r2
   12f1c:	and	r2, r2, #7
   12f20:	uxtb	r2, r2
   12f24:	add	r2, r2, #48	; 0x30
   12f28:	uxtb	r2, r2
   12f2c:	strb	r2, [r3]
   12f30:	ldr	r3, [fp, #-20]	; 0xffffffec
   12f34:	add	r3, r3, #1
   12f38:	str	r3, [fp, #-20]	; 0xffffffec
   12f3c:	ldrb	r3, [fp, #-38]	; 0xffffffda
   12f40:	and	r3, r3, #7
   12f44:	uxtb	r3, r3
   12f48:	add	r3, r3, #48	; 0x30
   12f4c:	strb	r3, [fp, #-38]	; 0xffffffda
   12f50:	b	12fa4 <putchar_unlocked@plt+0x2258>
   12f54:	andeq	r7, r1, r0, lsr #3
   12f58:	andeq	r7, r1, r8, lsr #3
   12f5c:	andeq	r7, r1, r4, lsr #3
   12f60:	ldrb	r3, [fp, #-40]	; 0xffffffd8
   12f64:	cmp	r3, #0
   12f68:	beq	12fa4 <putchar_unlocked@plt+0x2258>
   12f6c:	ldr	r2, [fp, #-20]	; 0xffffffec
   12f70:	ldr	r3, [fp, #-92]	; 0xffffffa4
   12f74:	cmp	r2, r3
   12f78:	bcs	12f90 <putchar_unlocked@plt+0x2244>
   12f7c:	ldr	r2, [fp, #-88]	; 0xffffffa8
   12f80:	ldr	r3, [fp, #-20]	; 0xffffffec
   12f84:	add	r3, r2, r3
   12f88:	mov	r2, #92	; 0x5c
   12f8c:	strb	r2, [r3]
   12f90:	ldr	r3, [fp, #-20]	; 0xffffffec
   12f94:	add	r3, r3, #1
   12f98:	str	r3, [fp, #-20]	; 0xffffffec
   12f9c:	mov	r3, #0
   12fa0:	strb	r3, [fp, #-40]	; 0xffffffd8
   12fa4:	ldr	r3, [fp, #-16]
   12fa8:	add	r2, r3, #1
   12fac:	ldr	r3, [fp, #-68]	; 0xffffffbc
   12fb0:	cmp	r2, r3
   12fb4:	bcs	13094 <putchar_unlocked@plt+0x2348>
   12fb8:	ldrb	r3, [fp, #-35]	; 0xffffffdd
   12fbc:	cmp	r3, #0
   12fc0:	beq	13040 <putchar_unlocked@plt+0x22f4>
   12fc4:	ldrb	r3, [fp, #-41]	; 0xffffffd7
   12fc8:	eor	r3, r3, #1
   12fcc:	uxtb	r3, r3
   12fd0:	cmp	r3, #0
   12fd4:	beq	13040 <putchar_unlocked@plt+0x22f4>
   12fd8:	ldr	r2, [fp, #-20]	; 0xffffffec
   12fdc:	ldr	r3, [fp, #-92]	; 0xffffffa4
   12fe0:	cmp	r2, r3
   12fe4:	bcs	12ffc <putchar_unlocked@plt+0x22b0>
   12fe8:	ldr	r2, [fp, #-88]	; 0xffffffa8
   12fec:	ldr	r3, [fp, #-20]	; 0xffffffec
   12ff0:	add	r3, r2, r3
   12ff4:	mov	r2, #39	; 0x27
   12ff8:	strb	r2, [r3]
   12ffc:	ldr	r3, [fp, #-20]	; 0xffffffec
   13000:	add	r3, r3, #1
   13004:	str	r3, [fp, #-20]	; 0xffffffec
   13008:	ldr	r2, [fp, #-20]	; 0xffffffec
   1300c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   13010:	cmp	r2, r3
   13014:	bcs	1302c <putchar_unlocked@plt+0x22e0>
   13018:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1301c:	ldr	r3, [fp, #-20]	; 0xffffffec
   13020:	add	r3, r2, r3
   13024:	mov	r2, #39	; 0x27
   13028:	strb	r2, [r3]
   1302c:	ldr	r3, [fp, #-20]	; 0xffffffec
   13030:	add	r3, r3, #1
   13034:	str	r3, [fp, #-20]	; 0xffffffec
   13038:	mov	r3, #0
   1303c:	strb	r3, [fp, #-35]	; 0xffffffdd
   13040:	ldr	r2, [fp, #-20]	; 0xffffffec
   13044:	ldr	r3, [fp, #-92]	; 0xffffffa4
   13048:	cmp	r2, r3
   1304c:	bcs	13064 <putchar_unlocked@plt+0x2318>
   13050:	ldr	r2, [fp, #-88]	; 0xffffffa8
   13054:	ldr	r3, [fp, #-20]	; 0xffffffec
   13058:	add	r3, r2, r3
   1305c:	ldrb	r2, [fp, #-38]	; 0xffffffda
   13060:	strb	r2, [r3]
   13064:	ldr	r3, [fp, #-20]	; 0xffffffec
   13068:	add	r3, r3, #1
   1306c:	str	r3, [fp, #-20]	; 0xffffffec
   13070:	ldr	r3, [fp, #-16]
   13074:	add	r3, r3, #1
   13078:	str	r3, [fp, #-16]
   1307c:	ldr	r2, [fp, #-96]	; 0xffffffa0
   13080:	ldr	r3, [fp, #-16]
   13084:	add	r3, r2, r3
   13088:	ldrb	r3, [r3]
   1308c:	strb	r3, [fp, #-38]	; 0xffffffda
   13090:	b	12d98 <putchar_unlocked@plt+0x204c>
   13094:	nop			; (mov r0, r0)
   13098:	b	13264 <putchar_unlocked@plt+0x2518>
   1309c:	nop			; (mov r0, r0)
   130a0:	b	130c8 <putchar_unlocked@plt+0x237c>
   130a4:	nop			; (mov r0, r0)
   130a8:	b	130c8 <putchar_unlocked@plt+0x237c>
   130ac:	nop			; (mov r0, r0)
   130b0:	b	130c8 <putchar_unlocked@plt+0x237c>
   130b4:	nop			; (mov r0, r0)
   130b8:	b	130c8 <putchar_unlocked@plt+0x237c>
   130bc:	nop			; (mov r0, r0)
   130c0:	b	130c8 <putchar_unlocked@plt+0x237c>
   130c4:	nop			; (mov r0, r0)
   130c8:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   130cc:	eor	r3, r3, #1
   130d0:	uxtb	r3, r3
   130d4:	cmp	r3, #0
   130d8:	bne	130e8 <putchar_unlocked@plt+0x239c>
   130dc:	ldr	r3, [fp, #4]
   130e0:	cmp	r3, #2
   130e4:	bne	130fc <putchar_unlocked@plt+0x23b0>
   130e8:	ldrb	r3, [fp, #-34]	; 0xffffffde
   130ec:	eor	r3, r3, #1
   130f0:	uxtb	r3, r3
   130f4:	cmp	r3, #0
   130f8:	bne	1313c <putchar_unlocked@plt+0x23f0>
   130fc:	ldr	r3, [fp, #12]
   13100:	cmp	r3, #0
   13104:	beq	1313c <putchar_unlocked@plt+0x23f0>
   13108:	ldrb	r3, [fp, #-38]	; 0xffffffda
   1310c:	lsr	r3, r3, #5
   13110:	uxtb	r3, r3
   13114:	lsl	r3, r3, #2
   13118:	ldr	r2, [fp, #12]
   1311c:	add	r3, r2, r3
   13120:	ldr	r2, [r3]
   13124:	ldrb	r3, [fp, #-38]	; 0xffffffda
   13128:	and	r3, r3, #31
   1312c:	lsr	r3, r2, r3
   13130:	and	r3, r3, #1
   13134:	cmp	r3, #0
   13138:	bne	13150 <putchar_unlocked@plt+0x2404>
   1313c:	ldrb	r3, [fp, #-40]	; 0xffffffd8
   13140:	eor	r3, r3, #1
   13144:	uxtb	r3, r3
   13148:	cmp	r3, #0
   1314c:	bne	13260 <putchar_unlocked@plt+0x2514>
   13150:	ldrb	r3, [fp, #-34]	; 0xffffffde
   13154:	cmp	r3, #0
   13158:	bne	13538 <putchar_unlocked@plt+0x27ec>
   1315c:	mov	r3, #1
   13160:	strb	r3, [fp, #-41]	; 0xffffffd7
   13164:	ldr	r3, [fp, #4]
   13168:	cmp	r3, #2
   1316c:	bne	1321c <putchar_unlocked@plt+0x24d0>
   13170:	ldrb	r3, [fp, #-35]	; 0xffffffdd
   13174:	eor	r3, r3, #1
   13178:	uxtb	r3, r3
   1317c:	cmp	r3, #0
   13180:	beq	1321c <putchar_unlocked@plt+0x24d0>
   13184:	ldr	r2, [fp, #-20]	; 0xffffffec
   13188:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1318c:	cmp	r2, r3
   13190:	bcs	131a8 <putchar_unlocked@plt+0x245c>
   13194:	ldr	r2, [fp, #-88]	; 0xffffffa8
   13198:	ldr	r3, [fp, #-20]	; 0xffffffec
   1319c:	add	r3, r2, r3
   131a0:	mov	r2, #39	; 0x27
   131a4:	strb	r2, [r3]
   131a8:	ldr	r3, [fp, #-20]	; 0xffffffec
   131ac:	add	r3, r3, #1
   131b0:	str	r3, [fp, #-20]	; 0xffffffec
   131b4:	ldr	r2, [fp, #-20]	; 0xffffffec
   131b8:	ldr	r3, [fp, #-92]	; 0xffffffa4
   131bc:	cmp	r2, r3
   131c0:	bcs	131d8 <putchar_unlocked@plt+0x248c>
   131c4:	ldr	r2, [fp, #-88]	; 0xffffffa8
   131c8:	ldr	r3, [fp, #-20]	; 0xffffffec
   131cc:	add	r3, r2, r3
   131d0:	mov	r2, #36	; 0x24
   131d4:	strb	r2, [r3]
   131d8:	ldr	r3, [fp, #-20]	; 0xffffffec
   131dc:	add	r3, r3, #1
   131e0:	str	r3, [fp, #-20]	; 0xffffffec
   131e4:	ldr	r2, [fp, #-20]	; 0xffffffec
   131e8:	ldr	r3, [fp, #-92]	; 0xffffffa4
   131ec:	cmp	r2, r3
   131f0:	bcs	13208 <putchar_unlocked@plt+0x24bc>
   131f4:	ldr	r2, [fp, #-88]	; 0xffffffa8
   131f8:	ldr	r3, [fp, #-20]	; 0xffffffec
   131fc:	add	r3, r2, r3
   13200:	mov	r2, #39	; 0x27
   13204:	strb	r2, [r3]
   13208:	ldr	r3, [fp, #-20]	; 0xffffffec
   1320c:	add	r3, r3, #1
   13210:	str	r3, [fp, #-20]	; 0xffffffec
   13214:	mov	r3, #1
   13218:	strb	r3, [fp, #-35]	; 0xffffffdd
   1321c:	ldr	r2, [fp, #-20]	; 0xffffffec
   13220:	ldr	r3, [fp, #-92]	; 0xffffffa4
   13224:	cmp	r2, r3
   13228:	bcs	13240 <putchar_unlocked@plt+0x24f4>
   1322c:	ldr	r2, [fp, #-88]	; 0xffffffa8
   13230:	ldr	r3, [fp, #-20]	; 0xffffffec
   13234:	add	r3, r2, r3
   13238:	mov	r2, #92	; 0x5c
   1323c:	strb	r2, [r3]
   13240:	ldr	r3, [fp, #-20]	; 0xffffffec
   13244:	add	r3, r3, #1
   13248:	str	r3, [fp, #-20]	; 0xffffffec
   1324c:	b	13264 <putchar_unlocked@plt+0x2518>
   13250:	nop			; (mov r0, r0)
   13254:	b	13264 <putchar_unlocked@plt+0x2518>
   13258:	nop			; (mov r0, r0)
   1325c:	b	13264 <putchar_unlocked@plt+0x2518>
   13260:	nop			; (mov r0, r0)
   13264:	ldrb	r3, [fp, #-35]	; 0xffffffdd
   13268:	cmp	r3, #0
   1326c:	beq	132ec <putchar_unlocked@plt+0x25a0>
   13270:	ldrb	r3, [fp, #-41]	; 0xffffffd7
   13274:	eor	r3, r3, #1
   13278:	uxtb	r3, r3
   1327c:	cmp	r3, #0
   13280:	beq	132ec <putchar_unlocked@plt+0x25a0>
   13284:	ldr	r2, [fp, #-20]	; 0xffffffec
   13288:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1328c:	cmp	r2, r3
   13290:	bcs	132a8 <putchar_unlocked@plt+0x255c>
   13294:	ldr	r2, [fp, #-88]	; 0xffffffa8
   13298:	ldr	r3, [fp, #-20]	; 0xffffffec
   1329c:	add	r3, r2, r3
   132a0:	mov	r2, #39	; 0x27
   132a4:	strb	r2, [r3]
   132a8:	ldr	r3, [fp, #-20]	; 0xffffffec
   132ac:	add	r3, r3, #1
   132b0:	str	r3, [fp, #-20]	; 0xffffffec
   132b4:	ldr	r2, [fp, #-20]	; 0xffffffec
   132b8:	ldr	r3, [fp, #-92]	; 0xffffffa4
   132bc:	cmp	r2, r3
   132c0:	bcs	132d8 <putchar_unlocked@plt+0x258c>
   132c4:	ldr	r2, [fp, #-88]	; 0xffffffa8
   132c8:	ldr	r3, [fp, #-20]	; 0xffffffec
   132cc:	add	r3, r2, r3
   132d0:	mov	r2, #39	; 0x27
   132d4:	strb	r2, [r3]
   132d8:	ldr	r3, [fp, #-20]	; 0xffffffec
   132dc:	add	r3, r3, #1
   132e0:	str	r3, [fp, #-20]	; 0xffffffec
   132e4:	mov	r3, #0
   132e8:	strb	r3, [fp, #-35]	; 0xffffffdd
   132ec:	ldr	r2, [fp, #-20]	; 0xffffffec
   132f0:	ldr	r3, [fp, #-92]	; 0xffffffa4
   132f4:	cmp	r2, r3
   132f8:	bcs	13310 <putchar_unlocked@plt+0x25c4>
   132fc:	ldr	r2, [fp, #-88]	; 0xffffffa8
   13300:	ldr	r3, [fp, #-20]	; 0xffffffec
   13304:	add	r3, r2, r3
   13308:	ldrb	r2, [fp, #-38]	; 0xffffffda
   1330c:	strb	r2, [r3]
   13310:	ldr	r3, [fp, #-20]	; 0xffffffec
   13314:	add	r3, r3, #1
   13318:	str	r3, [fp, #-20]	; 0xffffffec
   1331c:	ldrb	r3, [fp, #-42]	; 0xffffffd6
   13320:	eor	r3, r3, #1
   13324:	uxtb	r3, r3
   13328:	cmp	r3, #0
   1332c:	beq	13338 <putchar_unlocked@plt+0x25ec>
   13330:	mov	r3, #0
   13334:	strb	r3, [fp, #-37]	; 0xffffffdb
   13338:	ldr	r3, [fp, #-16]
   1333c:	add	r3, r3, #1
   13340:	str	r3, [fp, #-16]
   13344:	ldr	r3, [fp, #-100]	; 0xffffff9c
   13348:	cmn	r3, #1
   1334c:	bne	13374 <putchar_unlocked@plt+0x2628>
   13350:	ldr	r2, [fp, #-96]	; 0xffffffa0
   13354:	ldr	r3, [fp, #-16]
   13358:	add	r3, r2, r3
   1335c:	ldrb	r3, [r3]
   13360:	cmp	r3, #0
   13364:	movne	r3, #1
   13368:	moveq	r3, #0
   1336c:	uxtb	r3, r3
   13370:	b	1338c <putchar_unlocked@plt+0x2640>
   13374:	ldr	r2, [fp, #-16]
   13378:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1337c:	cmp	r2, r3
   13380:	movne	r3, #1
   13384:	moveq	r3, #0
   13388:	uxtb	r3, r3
   1338c:	cmp	r3, #0
   13390:	bne	121b8 <putchar_unlocked@plt+0x146c>
   13394:	ldr	r3, [fp, #-20]	; 0xffffffec
   13398:	cmp	r3, #0
   1339c:	bne	133b8 <putchar_unlocked@plt+0x266c>
   133a0:	ldr	r3, [fp, #4]
   133a4:	cmp	r3, #2
   133a8:	bne	133b8 <putchar_unlocked@plt+0x266c>
   133ac:	ldrb	r3, [fp, #-34]	; 0xffffffde
   133b0:	cmp	r3, #0
   133b4:	bne	13540 <putchar_unlocked@plt+0x27f4>
   133b8:	ldr	r3, [fp, #4]
   133bc:	cmp	r3, #2
   133c0:	bne	13460 <putchar_unlocked@plt+0x2714>
   133c4:	ldrb	r3, [fp, #-34]	; 0xffffffde
   133c8:	eor	r3, r3, #1
   133cc:	uxtb	r3, r3
   133d0:	cmp	r3, #0
   133d4:	beq	13460 <putchar_unlocked@plt+0x2714>
   133d8:	ldrb	r3, [fp, #-36]	; 0xffffffdc
   133dc:	cmp	r3, #0
   133e0:	beq	13460 <putchar_unlocked@plt+0x2714>
   133e4:	ldrb	r3, [fp, #-37]	; 0xffffffdb
   133e8:	cmp	r3, #0
   133ec:	beq	13434 <putchar_unlocked@plt+0x26e8>
   133f0:	ldr	r3, [fp, #20]
   133f4:	str	r3, [sp, #16]
   133f8:	ldr	r3, [fp, #16]
   133fc:	str	r3, [sp, #12]
   13400:	ldr	r3, [fp, #12]
   13404:	str	r3, [sp, #8]
   13408:	ldr	r3, [fp, #8]
   1340c:	str	r3, [sp, #4]
   13410:	mov	r3, #5
   13414:	str	r3, [sp]
   13418:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1341c:	ldr	r2, [fp, #-96]	; 0xffffffa0
   13420:	ldr	r1, [fp, #-24]	; 0xffffffe8
   13424:	ldr	r0, [fp, #-88]	; 0xffffffa8
   13428:	bl	11f08 <putchar_unlocked@plt+0x11bc>
   1342c:	mov	r3, r0
   13430:	b	135a8 <putchar_unlocked@plt+0x285c>
   13434:	ldr	r3, [fp, #-92]	; 0xffffffa4
   13438:	cmp	r3, #0
   1343c:	bne	13460 <putchar_unlocked@plt+0x2714>
   13440:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13444:	cmp	r3, #0
   13448:	beq	13460 <putchar_unlocked@plt+0x2714>
   1344c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13450:	str	r3, [fp, #-92]	; 0xffffffa4
   13454:	mov	r3, #0
   13458:	str	r3, [fp, #-20]	; 0xffffffec
   1345c:	b	11f94 <putchar_unlocked@plt+0x1248>
   13460:	ldr	r3, [fp, #-28]	; 0xffffffe4
   13464:	cmp	r3, #0
   13468:	beq	134d4 <putchar_unlocked@plt+0x2788>
   1346c:	ldrb	r3, [fp, #-34]	; 0xffffffde
   13470:	eor	r3, r3, #1
   13474:	uxtb	r3, r3
   13478:	cmp	r3, #0
   1347c:	beq	134d4 <putchar_unlocked@plt+0x2788>
   13480:	b	134c4 <putchar_unlocked@plt+0x2778>
   13484:	ldr	r2, [fp, #-20]	; 0xffffffec
   13488:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1348c:	cmp	r2, r3
   13490:	bcs	134ac <putchar_unlocked@plt+0x2760>
   13494:	ldr	r2, [fp, #-88]	; 0xffffffa8
   13498:	ldr	r3, [fp, #-20]	; 0xffffffec
   1349c:	add	r3, r2, r3
   134a0:	ldr	r2, [fp, #-28]	; 0xffffffe4
   134a4:	ldrb	r2, [r2]
   134a8:	strb	r2, [r3]
   134ac:	ldr	r3, [fp, #-20]	; 0xffffffec
   134b0:	add	r3, r3, #1
   134b4:	str	r3, [fp, #-20]	; 0xffffffec
   134b8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   134bc:	add	r3, r3, #1
   134c0:	str	r3, [fp, #-28]	; 0xffffffe4
   134c4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   134c8:	ldrb	r3, [r3]
   134cc:	cmp	r3, #0
   134d0:	bne	13484 <putchar_unlocked@plt+0x2738>
   134d4:	ldr	r2, [fp, #-20]	; 0xffffffec
   134d8:	ldr	r3, [fp, #-92]	; 0xffffffa4
   134dc:	cmp	r2, r3
   134e0:	bcs	134f8 <putchar_unlocked@plt+0x27ac>
   134e4:	ldr	r2, [fp, #-88]	; 0xffffffa8
   134e8:	ldr	r3, [fp, #-20]	; 0xffffffec
   134ec:	add	r3, r2, r3
   134f0:	mov	r2, #0
   134f4:	strb	r2, [r3]
   134f8:	ldr	r3, [fp, #-20]	; 0xffffffec
   134fc:	b	135a8 <putchar_unlocked@plt+0x285c>
   13500:	nop			; (mov r0, r0)
   13504:	b	13544 <putchar_unlocked@plt+0x27f8>
   13508:	nop			; (mov r0, r0)
   1350c:	b	13544 <putchar_unlocked@plt+0x27f8>
   13510:	nop			; (mov r0, r0)
   13514:	b	13544 <putchar_unlocked@plt+0x27f8>
   13518:	nop			; (mov r0, r0)
   1351c:	b	13544 <putchar_unlocked@plt+0x27f8>
   13520:	nop			; (mov r0, r0)
   13524:	b	13544 <putchar_unlocked@plt+0x27f8>
   13528:	nop			; (mov r0, r0)
   1352c:	b	13544 <putchar_unlocked@plt+0x27f8>
   13530:	nop			; (mov r0, r0)
   13534:	b	13544 <putchar_unlocked@plt+0x27f8>
   13538:	nop			; (mov r0, r0)
   1353c:	b	13544 <putchar_unlocked@plt+0x27f8>
   13540:	nop			; (mov r0, r0)
   13544:	ldr	r3, [fp, #4]
   13548:	cmp	r3, #2
   1354c:	bne	13564 <putchar_unlocked@plt+0x2818>
   13550:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   13554:	cmp	r3, #0
   13558:	beq	13564 <putchar_unlocked@plt+0x2818>
   1355c:	mov	r3, #4
   13560:	str	r3, [fp, #4]
   13564:	ldr	r3, [fp, #8]
   13568:	bic	r3, r3, #2
   1356c:	ldr	r2, [fp, #20]
   13570:	str	r2, [sp, #16]
   13574:	ldr	r2, [fp, #16]
   13578:	str	r2, [sp, #12]
   1357c:	mov	r2, #0
   13580:	str	r2, [sp, #8]
   13584:	str	r3, [sp, #4]
   13588:	ldr	r3, [fp, #4]
   1358c:	str	r3, [sp]
   13590:	ldr	r3, [fp, #-100]	; 0xffffff9c
   13594:	ldr	r2, [fp, #-96]	; 0xffffffa0
   13598:	ldr	r1, [fp, #-92]	; 0xffffffa4
   1359c:	ldr	r0, [fp, #-88]	; 0xffffffa8
   135a0:	bl	11f08 <putchar_unlocked@plt+0x11bc>
   135a4:	mov	r3, r0
   135a8:	mov	r0, r3
   135ac:	sub	sp, fp, #8
   135b0:	pop	{r4, fp, pc}
   135b4:	push	{fp, lr}
   135b8:	add	fp, sp, #4
   135bc:	sub	sp, sp, #56	; 0x38
   135c0:	str	r0, [fp, #-24]	; 0xffffffe8
   135c4:	str	r1, [fp, #-28]	; 0xffffffe4
   135c8:	str	r2, [fp, #-32]	; 0xffffffe0
   135cc:	str	r3, [fp, #-36]	; 0xffffffdc
   135d0:	ldr	r3, [fp, #4]
   135d4:	cmp	r3, #0
   135d8:	beq	135e4 <putchar_unlocked@plt+0x2898>
   135dc:	ldr	r3, [fp, #4]
   135e0:	b	135e8 <putchar_unlocked@plt+0x289c>
   135e4:	ldr	r3, [pc, #132]	; 13670 <putchar_unlocked@plt+0x2924>
   135e8:	str	r3, [fp, #-8]
   135ec:	bl	10cbc <__errno_location@plt>
   135f0:	mov	r3, r0
   135f4:	ldr	r3, [r3]
   135f8:	str	r3, [fp, #-12]
   135fc:	ldr	r3, [fp, #-8]
   13600:	ldr	r3, [r3]
   13604:	ldr	r2, [fp, #-8]
   13608:	ldr	r2, [r2, #4]
   1360c:	ldr	r1, [fp, #-8]
   13610:	add	r1, r1, #8
   13614:	ldr	r0, [fp, #-8]
   13618:	ldr	r0, [r0, #40]	; 0x28
   1361c:	ldr	ip, [fp, #-8]
   13620:	ldr	ip, [ip, #44]	; 0x2c
   13624:	str	ip, [sp, #16]
   13628:	str	r0, [sp, #12]
   1362c:	str	r1, [sp, #8]
   13630:	str	r2, [sp, #4]
   13634:	str	r3, [sp]
   13638:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1363c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   13640:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13644:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13648:	bl	11f08 <putchar_unlocked@plt+0x11bc>
   1364c:	str	r0, [fp, #-16]
   13650:	bl	10cbc <__errno_location@plt>
   13654:	mov	r2, r0
   13658:	ldr	r3, [fp, #-12]
   1365c:	str	r3, [r2]
   13660:	ldr	r3, [fp, #-16]
   13664:	mov	r0, r3
   13668:	sub	sp, fp, #4
   1366c:	pop	{fp, pc}
   13670:	andeq	r8, r2, r4, asr #2
   13674:	push	{fp, lr}
   13678:	add	fp, sp, #4
   1367c:	sub	sp, sp, #16
   13680:	str	r0, [fp, #-8]
   13684:	str	r1, [fp, #-12]
   13688:	str	r2, [fp, #-16]
   1368c:	ldr	r3, [fp, #-16]
   13690:	mov	r2, #0
   13694:	ldr	r1, [fp, #-12]
   13698:	ldr	r0, [fp, #-8]
   1369c:	bl	136b0 <putchar_unlocked@plt+0x2964>
   136a0:	mov	r3, r0
   136a4:	mov	r0, r3
   136a8:	sub	sp, fp, #4
   136ac:	pop	{fp, pc}
   136b0:	push	{fp, lr}
   136b4:	add	fp, sp, #4
   136b8:	sub	sp, sp, #64	; 0x40
   136bc:	str	r0, [fp, #-32]	; 0xffffffe0
   136c0:	str	r1, [fp, #-36]	; 0xffffffdc
   136c4:	str	r2, [fp, #-40]	; 0xffffffd8
   136c8:	str	r3, [fp, #-44]	; 0xffffffd4
   136cc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   136d0:	cmp	r3, #0
   136d4:	beq	136e0 <putchar_unlocked@plt+0x2994>
   136d8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   136dc:	b	136e4 <putchar_unlocked@plt+0x2998>
   136e0:	ldr	r3, [pc, #292]	; 1380c <putchar_unlocked@plt+0x2ac0>
   136e4:	str	r3, [fp, #-8]
   136e8:	bl	10cbc <__errno_location@plt>
   136ec:	mov	r3, r0
   136f0:	ldr	r3, [r3]
   136f4:	str	r3, [fp, #-12]
   136f8:	ldr	r3, [fp, #-8]
   136fc:	ldr	r3, [r3, #4]
   13700:	ldr	r2, [fp, #-40]	; 0xffffffd8
   13704:	cmp	r2, #0
   13708:	moveq	r2, #1
   1370c:	movne	r2, #0
   13710:	uxtb	r2, r2
   13714:	orr	r3, r3, r2
   13718:	str	r3, [fp, #-16]
   1371c:	ldr	r3, [fp, #-8]
   13720:	ldr	r3, [r3]
   13724:	ldr	r2, [fp, #-8]
   13728:	add	r2, r2, #8
   1372c:	ldr	r1, [fp, #-8]
   13730:	ldr	r1, [r1, #40]	; 0x28
   13734:	ldr	r0, [fp, #-8]
   13738:	ldr	r0, [r0, #44]	; 0x2c
   1373c:	str	r0, [sp, #16]
   13740:	str	r1, [sp, #12]
   13744:	str	r2, [sp, #8]
   13748:	ldr	r2, [fp, #-16]
   1374c:	str	r2, [sp, #4]
   13750:	str	r3, [sp]
   13754:	ldr	r3, [fp, #-36]	; 0xffffffdc
   13758:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1375c:	mov	r1, #0
   13760:	mov	r0, #0
   13764:	bl	11f08 <putchar_unlocked@plt+0x11bc>
   13768:	mov	r3, r0
   1376c:	add	r3, r3, #1
   13770:	str	r3, [fp, #-20]	; 0xffffffec
   13774:	ldr	r0, [fp, #-20]	; 0xffffffec
   13778:	bl	149ac <putchar_unlocked@plt+0x3c60>
   1377c:	mov	r3, r0
   13780:	str	r3, [fp, #-24]	; 0xffffffe8
   13784:	ldr	r3, [fp, #-8]
   13788:	ldr	r3, [r3]
   1378c:	ldr	r2, [fp, #-8]
   13790:	add	r2, r2, #8
   13794:	ldr	r1, [fp, #-8]
   13798:	ldr	r1, [r1, #40]	; 0x28
   1379c:	ldr	r0, [fp, #-8]
   137a0:	ldr	r0, [r0, #44]	; 0x2c
   137a4:	str	r0, [sp, #16]
   137a8:	str	r1, [sp, #12]
   137ac:	str	r2, [sp, #8]
   137b0:	ldr	r2, [fp, #-16]
   137b4:	str	r2, [sp, #4]
   137b8:	str	r3, [sp]
   137bc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   137c0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   137c4:	ldr	r1, [fp, #-20]	; 0xffffffec
   137c8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   137cc:	bl	11f08 <putchar_unlocked@plt+0x11bc>
   137d0:	bl	10cbc <__errno_location@plt>
   137d4:	mov	r2, r0
   137d8:	ldr	r3, [fp, #-12]
   137dc:	str	r3, [r2]
   137e0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   137e4:	cmp	r3, #0
   137e8:	beq	137fc <putchar_unlocked@plt+0x2ab0>
   137ec:	ldr	r3, [fp, #-20]	; 0xffffffec
   137f0:	sub	r2, r3, #1
   137f4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   137f8:	str	r2, [r3]
   137fc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13800:	mov	r0, r3
   13804:	sub	sp, fp, #4
   13808:	pop	{fp, pc}
   1380c:	andeq	r8, r2, r4, asr #2
   13810:	push	{fp, lr}
   13814:	add	fp, sp, #4
   13818:	sub	sp, sp, #8
   1381c:	ldr	r3, [pc, #196]	; 138e8 <putchar_unlocked@plt+0x2b9c>
   13820:	ldr	r3, [r3]
   13824:	str	r3, [fp, #-12]
   13828:	mov	r3, #1
   1382c:	str	r3, [fp, #-8]
   13830:	b	1385c <putchar_unlocked@plt+0x2b10>
   13834:	ldr	r3, [fp, #-8]
   13838:	lsl	r3, r3, #3
   1383c:	ldr	r2, [fp, #-12]
   13840:	add	r3, r2, r3
   13844:	ldr	r3, [r3, #4]
   13848:	mov	r0, r3
   1384c:	bl	11970 <putchar_unlocked@plt+0xc24>
   13850:	ldr	r3, [fp, #-8]
   13854:	add	r3, r3, #1
   13858:	str	r3, [fp, #-8]
   1385c:	ldr	r3, [pc, #136]	; 138ec <putchar_unlocked@plt+0x2ba0>
   13860:	ldr	r3, [r3]
   13864:	ldr	r2, [fp, #-8]
   13868:	cmp	r2, r3
   1386c:	blt	13834 <putchar_unlocked@plt+0x2ae8>
   13870:	ldr	r3, [fp, #-12]
   13874:	ldr	r3, [r3, #4]
   13878:	ldr	r2, [pc, #112]	; 138f0 <putchar_unlocked@plt+0x2ba4>
   1387c:	cmp	r3, r2
   13880:	beq	138ac <putchar_unlocked@plt+0x2b60>
   13884:	ldr	r3, [fp, #-12]
   13888:	ldr	r3, [r3, #4]
   1388c:	mov	r0, r3
   13890:	bl	11970 <putchar_unlocked@plt+0xc24>
   13894:	ldr	r3, [pc, #88]	; 138f4 <putchar_unlocked@plt+0x2ba8>
   13898:	mov	r2, #256	; 0x100
   1389c:	str	r2, [r3]
   138a0:	ldr	r3, [pc, #76]	; 138f4 <putchar_unlocked@plt+0x2ba8>
   138a4:	ldr	r2, [pc, #68]	; 138f0 <putchar_unlocked@plt+0x2ba4>
   138a8:	str	r2, [r3, #4]
   138ac:	ldr	r3, [fp, #-12]
   138b0:	ldr	r2, [pc, #60]	; 138f4 <putchar_unlocked@plt+0x2ba8>
   138b4:	cmp	r3, r2
   138b8:	beq	138d0 <putchar_unlocked@plt+0x2b84>
   138bc:	ldr	r0, [fp, #-12]
   138c0:	bl	11970 <putchar_unlocked@plt+0xc24>
   138c4:	ldr	r3, [pc, #28]	; 138e8 <putchar_unlocked@plt+0x2b9c>
   138c8:	ldr	r2, [pc, #36]	; 138f4 <putchar_unlocked@plt+0x2ba8>
   138cc:	str	r2, [r3]
   138d0:	ldr	r3, [pc, #20]	; 138ec <putchar_unlocked@plt+0x2ba0>
   138d4:	mov	r2, #1
   138d8:	str	r2, [r3]
   138dc:	nop			; (mov r0, r0)
   138e0:	sub	sp, fp, #4
   138e4:	pop	{fp, pc}
   138e8:	andeq	r8, r2, r0, ror #1
   138ec:	ldrdeq	r8, [r2], -r4
   138f0:	andeq	r8, r2, r4, ror r1
   138f4:	ldrdeq	r8, [r2], -r8	; <UNPREDICTABLE>
   138f8:	push	{r4, fp, lr}
   138fc:	add	fp, sp, #8
   13900:	sub	sp, sp, #84	; 0x54
   13904:	str	r0, [fp, #-56]	; 0xffffffc8
   13908:	str	r1, [fp, #-60]	; 0xffffffc4
   1390c:	str	r2, [fp, #-64]	; 0xffffffc0
   13910:	str	r3, [fp, #-68]	; 0xffffffbc
   13914:	bl	10cbc <__errno_location@plt>
   13918:	mov	r3, r0
   1391c:	ldr	r3, [r3]
   13920:	str	r3, [fp, #-24]	; 0xffffffe8
   13924:	ldr	r3, [pc, #640]	; 13bac <putchar_unlocked@plt+0x2e60>
   13928:	ldr	r3, [r3]
   1392c:	str	r3, [fp, #-16]
   13930:	mvn	r3, #-2147483648	; 0x80000000
   13934:	str	r3, [fp, #-28]	; 0xffffffe4
   13938:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1393c:	cmp	r3, #0
   13940:	blt	13954 <putchar_unlocked@plt+0x2c08>
   13944:	ldr	r2, [fp, #-56]	; 0xffffffc8
   13948:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1394c:	cmp	r2, r3
   13950:	blt	13958 <putchar_unlocked@plt+0x2c0c>
   13954:	bl	10d40 <abort@plt>
   13958:	ldr	r3, [pc, #592]	; 13bb0 <putchar_unlocked@plt+0x2e64>
   1395c:	ldr	r2, [r3]
   13960:	ldr	r3, [fp, #-56]	; 0xffffffc8
   13964:	cmp	r2, r3
   13968:	bgt	13a3c <putchar_unlocked@plt+0x2cf0>
   1396c:	ldr	r3, [fp, #-16]
   13970:	ldr	r2, [pc, #572]	; 13bb4 <putchar_unlocked@plt+0x2e68>
   13974:	cmp	r3, r2
   13978:	moveq	r3, #1
   1397c:	movne	r3, #0
   13980:	strb	r3, [fp, #-29]	; 0xffffffe3
   13984:	ldr	r3, [pc, #548]	; 13bb0 <putchar_unlocked@plt+0x2e64>
   13988:	ldr	r3, [r3]
   1398c:	str	r3, [fp, #-48]	; 0xffffffd0
   13990:	ldrb	r3, [fp, #-29]	; 0xffffffe3
   13994:	cmp	r3, #0
   13998:	beq	139a4 <putchar_unlocked@plt+0x2c58>
   1399c:	mov	r0, #0
   139a0:	b	139a8 <putchar_unlocked@plt+0x2c5c>
   139a4:	ldr	r0, [fp, #-16]
   139a8:	ldr	r3, [pc, #512]	; 13bb0 <putchar_unlocked@plt+0x2e64>
   139ac:	ldr	r3, [r3]
   139b0:	ldr	r2, [fp, #-56]	; 0xffffffc8
   139b4:	sub	r3, r2, r3
   139b8:	add	r2, r3, #1
   139bc:	sub	r1, fp, #48	; 0x30
   139c0:	mov	r3, #8
   139c4:	str	r3, [sp]
   139c8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   139cc:	bl	14ccc <putchar_unlocked@plt+0x3f80>
   139d0:	str	r0, [fp, #-16]
   139d4:	ldr	r2, [pc, #464]	; 13bac <putchar_unlocked@plt+0x2e60>
   139d8:	ldr	r3, [fp, #-16]
   139dc:	str	r3, [r2]
   139e0:	ldrb	r3, [fp, #-29]	; 0xffffffe3
   139e4:	cmp	r3, #0
   139e8:	beq	139fc <putchar_unlocked@plt+0x2cb0>
   139ec:	ldr	r3, [fp, #-16]
   139f0:	ldr	r2, [pc, #444]	; 13bb4 <putchar_unlocked@plt+0x2e68>
   139f4:	ldm	r2, {r0, r1}
   139f8:	stm	r3, {r0, r1}
   139fc:	ldr	r3, [pc, #428]	; 13bb0 <putchar_unlocked@plt+0x2e64>
   13a00:	ldr	r3, [r3]
   13a04:	lsl	r3, r3, #3
   13a08:	ldr	r2, [fp, #-16]
   13a0c:	add	r0, r2, r3
   13a10:	ldr	r2, [fp, #-48]	; 0xffffffd0
   13a14:	ldr	r3, [pc, #404]	; 13bb0 <putchar_unlocked@plt+0x2e64>
   13a18:	ldr	r3, [r3]
   13a1c:	sub	r3, r2, r3
   13a20:	lsl	r3, r3, #3
   13a24:	mov	r2, r3
   13a28:	mov	r1, #0
   13a2c:	bl	10cd4 <memset@plt>
   13a30:	ldr	r3, [fp, #-48]	; 0xffffffd0
   13a34:	ldr	r2, [pc, #372]	; 13bb0 <putchar_unlocked@plt+0x2e64>
   13a38:	str	r3, [r2]
   13a3c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   13a40:	lsl	r3, r3, #3
   13a44:	ldr	r2, [fp, #-16]
   13a48:	add	r3, r2, r3
   13a4c:	ldr	r3, [r3]
   13a50:	str	r3, [fp, #-36]	; 0xffffffdc
   13a54:	ldr	r3, [fp, #-56]	; 0xffffffc8
   13a58:	lsl	r3, r3, #3
   13a5c:	ldr	r2, [fp, #-16]
   13a60:	add	r3, r2, r3
   13a64:	ldr	r3, [r3, #4]
   13a68:	str	r3, [fp, #-20]	; 0xffffffec
   13a6c:	ldr	r3, [fp, #-68]	; 0xffffffbc
   13a70:	ldr	r3, [r3, #4]
   13a74:	orr	r3, r3, #1
   13a78:	str	r3, [fp, #-40]	; 0xffffffd8
   13a7c:	ldr	r3, [fp, #-68]	; 0xffffffbc
   13a80:	ldr	r3, [r3]
   13a84:	ldr	r2, [fp, #-68]	; 0xffffffbc
   13a88:	add	r2, r2, #8
   13a8c:	ldr	r1, [fp, #-68]	; 0xffffffbc
   13a90:	ldr	r1, [r1, #40]	; 0x28
   13a94:	ldr	r0, [fp, #-68]	; 0xffffffbc
   13a98:	ldr	r0, [r0, #44]	; 0x2c
   13a9c:	str	r0, [sp, #16]
   13aa0:	str	r1, [sp, #12]
   13aa4:	str	r2, [sp, #8]
   13aa8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   13aac:	str	r2, [sp, #4]
   13ab0:	str	r3, [sp]
   13ab4:	ldr	r3, [fp, #-64]	; 0xffffffc0
   13ab8:	ldr	r2, [fp, #-60]	; 0xffffffc4
   13abc:	ldr	r1, [fp, #-36]	; 0xffffffdc
   13ac0:	ldr	r0, [fp, #-20]	; 0xffffffec
   13ac4:	bl	11f08 <putchar_unlocked@plt+0x11bc>
   13ac8:	str	r0, [fp, #-44]	; 0xffffffd4
   13acc:	ldr	r2, [fp, #-36]	; 0xffffffdc
   13ad0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   13ad4:	cmp	r2, r3
   13ad8:	bhi	13b8c <putchar_unlocked@plt+0x2e40>
   13adc:	ldr	r3, [fp, #-56]	; 0xffffffc8
   13ae0:	lsl	r3, r3, #3
   13ae4:	ldr	r2, [fp, #-16]
   13ae8:	add	r3, r2, r3
   13aec:	ldr	r2, [fp, #-44]	; 0xffffffd4
   13af0:	add	r2, r2, #1
   13af4:	str	r2, [fp, #-36]	; 0xffffffdc
   13af8:	ldr	r2, [fp, #-36]	; 0xffffffdc
   13afc:	str	r2, [r3]
   13b00:	ldr	r3, [fp, #-20]	; 0xffffffec
   13b04:	ldr	r2, [pc, #172]	; 13bb8 <putchar_unlocked@plt+0x2e6c>
   13b08:	cmp	r3, r2
   13b0c:	beq	13b18 <putchar_unlocked@plt+0x2dcc>
   13b10:	ldr	r0, [fp, #-20]	; 0xffffffec
   13b14:	bl	11970 <putchar_unlocked@plt+0xc24>
   13b18:	ldr	r3, [fp, #-56]	; 0xffffffc8
   13b1c:	lsl	r3, r3, #3
   13b20:	ldr	r2, [fp, #-16]
   13b24:	add	r4, r2, r3
   13b28:	ldr	r0, [fp, #-36]	; 0xffffffdc
   13b2c:	bl	149ac <putchar_unlocked@plt+0x3c60>
   13b30:	mov	r3, r0
   13b34:	str	r3, [fp, #-20]	; 0xffffffec
   13b38:	ldr	r3, [fp, #-20]	; 0xffffffec
   13b3c:	str	r3, [r4, #4]
   13b40:	ldr	r3, [fp, #-68]	; 0xffffffbc
   13b44:	ldr	r3, [r3]
   13b48:	ldr	r2, [fp, #-68]	; 0xffffffbc
   13b4c:	add	r2, r2, #8
   13b50:	ldr	r1, [fp, #-68]	; 0xffffffbc
   13b54:	ldr	r1, [r1, #40]	; 0x28
   13b58:	ldr	r0, [fp, #-68]	; 0xffffffbc
   13b5c:	ldr	r0, [r0, #44]	; 0x2c
   13b60:	str	r0, [sp, #16]
   13b64:	str	r1, [sp, #12]
   13b68:	str	r2, [sp, #8]
   13b6c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   13b70:	str	r2, [sp, #4]
   13b74:	str	r3, [sp]
   13b78:	ldr	r3, [fp, #-64]	; 0xffffffc0
   13b7c:	ldr	r2, [fp, #-60]	; 0xffffffc4
   13b80:	ldr	r1, [fp, #-36]	; 0xffffffdc
   13b84:	ldr	r0, [fp, #-20]	; 0xffffffec
   13b88:	bl	11f08 <putchar_unlocked@plt+0x11bc>
   13b8c:	bl	10cbc <__errno_location@plt>
   13b90:	mov	r2, r0
   13b94:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13b98:	str	r3, [r2]
   13b9c:	ldr	r3, [fp, #-20]	; 0xffffffec
   13ba0:	mov	r0, r3
   13ba4:	sub	sp, fp, #8
   13ba8:	pop	{r4, fp, pc}
   13bac:	andeq	r8, r2, r0, ror #1
   13bb0:	ldrdeq	r8, [r2], -r4
   13bb4:	ldrdeq	r8, [r2], -r8	; <UNPREDICTABLE>
   13bb8:	andeq	r8, r2, r4, ror r1
   13bbc:	push	{fp, lr}
   13bc0:	add	fp, sp, #4
   13bc4:	sub	sp, sp, #8
   13bc8:	str	r0, [fp, #-8]
   13bcc:	str	r1, [fp, #-12]
   13bd0:	ldr	r3, [pc, #28]	; 13bf4 <putchar_unlocked@plt+0x2ea8>
   13bd4:	mvn	r2, #0
   13bd8:	ldr	r1, [fp, #-12]
   13bdc:	ldr	r0, [fp, #-8]
   13be0:	bl	138f8 <putchar_unlocked@plt+0x2bac>
   13be4:	mov	r3, r0
   13be8:	mov	r0, r3
   13bec:	sub	sp, fp, #4
   13bf0:	pop	{fp, pc}
   13bf4:	andeq	r8, r2, r4, asr #2
   13bf8:	push	{fp, lr}
   13bfc:	add	fp, sp, #4
   13c00:	sub	sp, sp, #16
   13c04:	str	r0, [fp, #-8]
   13c08:	str	r1, [fp, #-12]
   13c0c:	str	r2, [fp, #-16]
   13c10:	ldr	r3, [pc, #28]	; 13c34 <putchar_unlocked@plt+0x2ee8>
   13c14:	ldr	r2, [fp, #-16]
   13c18:	ldr	r1, [fp, #-12]
   13c1c:	ldr	r0, [fp, #-8]
   13c20:	bl	138f8 <putchar_unlocked@plt+0x2bac>
   13c24:	mov	r3, r0
   13c28:	mov	r0, r3
   13c2c:	sub	sp, fp, #4
   13c30:	pop	{fp, pc}
   13c34:	andeq	r8, r2, r4, asr #2
   13c38:	push	{fp, lr}
   13c3c:	add	fp, sp, #4
   13c40:	sub	sp, sp, #8
   13c44:	str	r0, [fp, #-8]
   13c48:	ldr	r1, [fp, #-8]
   13c4c:	mov	r0, #0
   13c50:	bl	13bbc <putchar_unlocked@plt+0x2e70>
   13c54:	mov	r3, r0
   13c58:	mov	r0, r3
   13c5c:	sub	sp, fp, #4
   13c60:	pop	{fp, pc}
   13c64:	push	{fp, lr}
   13c68:	add	fp, sp, #4
   13c6c:	sub	sp, sp, #8
   13c70:	str	r0, [fp, #-8]
   13c74:	str	r1, [fp, #-12]
   13c78:	ldr	r2, [fp, #-12]
   13c7c:	ldr	r1, [fp, #-8]
   13c80:	mov	r0, #0
   13c84:	bl	13bf8 <putchar_unlocked@plt+0x2eac>
   13c88:	mov	r3, r0
   13c8c:	mov	r0, r3
   13c90:	sub	sp, fp, #4
   13c94:	pop	{fp, pc}
   13c98:	push	{fp, lr}
   13c9c:	add	fp, sp, #4
   13ca0:	sub	sp, sp, #64	; 0x40
   13ca4:	str	r0, [fp, #-56]	; 0xffffffc8
   13ca8:	str	r1, [fp, #-60]	; 0xffffffc4
   13cac:	str	r2, [fp, #-64]	; 0xffffffc0
   13cb0:	sub	r3, fp, #52	; 0x34
   13cb4:	ldr	r1, [fp, #-60]	; 0xffffffc4
   13cb8:	mov	r0, r3
   13cbc:	bl	11da4 <putchar_unlocked@plt+0x1058>
   13cc0:	sub	r3, fp, #52	; 0x34
   13cc4:	mvn	r2, #0
   13cc8:	ldr	r1, [fp, #-64]	; 0xffffffc0
   13ccc:	ldr	r0, [fp, #-56]	; 0xffffffc8
   13cd0:	bl	138f8 <putchar_unlocked@plt+0x2bac>
   13cd4:	mov	r3, r0
   13cd8:	mov	r0, r3
   13cdc:	sub	sp, fp, #4
   13ce0:	pop	{fp, pc}
   13ce4:	push	{fp, lr}
   13ce8:	add	fp, sp, #4
   13cec:	sub	sp, sp, #64	; 0x40
   13cf0:	str	r0, [fp, #-56]	; 0xffffffc8
   13cf4:	str	r1, [fp, #-60]	; 0xffffffc4
   13cf8:	str	r2, [fp, #-64]	; 0xffffffc0
   13cfc:	str	r3, [fp, #-68]	; 0xffffffbc
   13d00:	sub	r3, fp, #52	; 0x34
   13d04:	ldr	r1, [fp, #-60]	; 0xffffffc4
   13d08:	mov	r0, r3
   13d0c:	bl	11da4 <putchar_unlocked@plt+0x1058>
   13d10:	sub	r3, fp, #52	; 0x34
   13d14:	ldr	r2, [fp, #-68]	; 0xffffffbc
   13d18:	ldr	r1, [fp, #-64]	; 0xffffffc0
   13d1c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   13d20:	bl	138f8 <putchar_unlocked@plt+0x2bac>
   13d24:	mov	r3, r0
   13d28:	mov	r0, r3
   13d2c:	sub	sp, fp, #4
   13d30:	pop	{fp, pc}
   13d34:	push	{fp, lr}
   13d38:	add	fp, sp, #4
   13d3c:	sub	sp, sp, #8
   13d40:	str	r0, [fp, #-8]
   13d44:	str	r1, [fp, #-12]
   13d48:	ldr	r2, [fp, #-12]
   13d4c:	ldr	r1, [fp, #-8]
   13d50:	mov	r0, #0
   13d54:	bl	13c98 <putchar_unlocked@plt+0x2f4c>
   13d58:	mov	r3, r0
   13d5c:	mov	r0, r3
   13d60:	sub	sp, fp, #4
   13d64:	pop	{fp, pc}
   13d68:	push	{fp, lr}
   13d6c:	add	fp, sp, #4
   13d70:	sub	sp, sp, #16
   13d74:	str	r0, [fp, #-8]
   13d78:	str	r1, [fp, #-12]
   13d7c:	str	r2, [fp, #-16]
   13d80:	ldr	r3, [fp, #-16]
   13d84:	ldr	r2, [fp, #-12]
   13d88:	ldr	r1, [fp, #-8]
   13d8c:	mov	r0, #0
   13d90:	bl	13ce4 <putchar_unlocked@plt+0x2f98>
   13d94:	mov	r3, r0
   13d98:	mov	r0, r3
   13d9c:	sub	sp, fp, #4
   13da0:	pop	{fp, pc}
   13da4:	push	{fp, lr}
   13da8:	add	fp, sp, #4
   13dac:	sub	sp, sp, #64	; 0x40
   13db0:	str	r0, [fp, #-56]	; 0xffffffc8
   13db4:	str	r1, [fp, #-60]	; 0xffffffc4
   13db8:	mov	r3, r2
   13dbc:	strb	r3, [fp, #-61]	; 0xffffffc3
   13dc0:	ldr	r3, [pc, #84]	; 13e1c <putchar_unlocked@plt+0x30d0>
   13dc4:	sub	ip, fp, #52	; 0x34
   13dc8:	mov	lr, r3
   13dcc:	ldm	lr!, {r0, r1, r2, r3}
   13dd0:	stmia	ip!, {r0, r1, r2, r3}
   13dd4:	ldm	lr!, {r0, r1, r2, r3}
   13dd8:	stmia	ip!, {r0, r1, r2, r3}
   13ddc:	ldm	lr, {r0, r1, r2, r3}
   13de0:	stm	ip, {r0, r1, r2, r3}
   13de4:	ldrb	r1, [fp, #-61]	; 0xffffffc3
   13de8:	sub	r3, fp, #52	; 0x34
   13dec:	mov	r2, #1
   13df0:	mov	r0, r3
   13df4:	bl	11c10 <putchar_unlocked@plt+0xec4>
   13df8:	sub	r3, fp, #52	; 0x34
   13dfc:	ldr	r2, [fp, #-60]	; 0xffffffc4
   13e00:	ldr	r1, [fp, #-56]	; 0xffffffc8
   13e04:	mov	r0, #0
   13e08:	bl	138f8 <putchar_unlocked@plt+0x2bac>
   13e0c:	mov	r3, r0
   13e10:	mov	r0, r3
   13e14:	sub	sp, fp, #4
   13e18:	pop	{fp, pc}
   13e1c:	andeq	r8, r2, r4, asr #2
   13e20:	push	{fp, lr}
   13e24:	add	fp, sp, #4
   13e28:	sub	sp, sp, #8
   13e2c:	str	r0, [fp, #-8]
   13e30:	mov	r3, r1
   13e34:	strb	r3, [fp, #-9]
   13e38:	ldrb	r3, [fp, #-9]
   13e3c:	mov	r2, r3
   13e40:	mvn	r1, #0
   13e44:	ldr	r0, [fp, #-8]
   13e48:	bl	13da4 <putchar_unlocked@plt+0x3058>
   13e4c:	mov	r3, r0
   13e50:	mov	r0, r3
   13e54:	sub	sp, fp, #4
   13e58:	pop	{fp, pc}
   13e5c:	push	{fp, lr}
   13e60:	add	fp, sp, #4
   13e64:	sub	sp, sp, #8
   13e68:	str	r0, [fp, #-8]
   13e6c:	mov	r1, #58	; 0x3a
   13e70:	ldr	r0, [fp, #-8]
   13e74:	bl	13e20 <putchar_unlocked@plt+0x30d4>
   13e78:	mov	r3, r0
   13e7c:	mov	r0, r3
   13e80:	sub	sp, fp, #4
   13e84:	pop	{fp, pc}
   13e88:	push	{fp, lr}
   13e8c:	add	fp, sp, #4
   13e90:	sub	sp, sp, #8
   13e94:	str	r0, [fp, #-8]
   13e98:	str	r1, [fp, #-12]
   13e9c:	mov	r2, #58	; 0x3a
   13ea0:	ldr	r1, [fp, #-12]
   13ea4:	ldr	r0, [fp, #-8]
   13ea8:	bl	13da4 <putchar_unlocked@plt+0x3058>
   13eac:	mov	r3, r0
   13eb0:	mov	r0, r3
   13eb4:	sub	sp, fp, #4
   13eb8:	pop	{fp, pc}
   13ebc:	push	{fp, lr}
   13ec0:	add	fp, sp, #4
   13ec4:	sub	sp, sp, #112	; 0x70
   13ec8:	str	r0, [fp, #-56]	; 0xffffffc8
   13ecc:	str	r1, [fp, #-60]	; 0xffffffc4
   13ed0:	str	r2, [fp, #-64]	; 0xffffffc0
   13ed4:	sub	r3, fp, #116	; 0x74
   13ed8:	ldr	r1, [fp, #-60]	; 0xffffffc4
   13edc:	mov	r0, r3
   13ee0:	bl	11da4 <putchar_unlocked@plt+0x1058>
   13ee4:	sub	ip, fp, #52	; 0x34
   13ee8:	sub	lr, fp, #116	; 0x74
   13eec:	ldm	lr!, {r0, r1, r2, r3}
   13ef0:	stmia	ip!, {r0, r1, r2, r3}
   13ef4:	ldm	lr!, {r0, r1, r2, r3}
   13ef8:	stmia	ip!, {r0, r1, r2, r3}
   13efc:	ldm	lr, {r0, r1, r2, r3}
   13f00:	stm	ip, {r0, r1, r2, r3}
   13f04:	sub	r3, fp, #52	; 0x34
   13f08:	mov	r2, #1
   13f0c:	mov	r1, #58	; 0x3a
   13f10:	mov	r0, r3
   13f14:	bl	11c10 <putchar_unlocked@plt+0xec4>
   13f18:	sub	r3, fp, #52	; 0x34
   13f1c:	mvn	r2, #0
   13f20:	ldr	r1, [fp, #-64]	; 0xffffffc0
   13f24:	ldr	r0, [fp, #-56]	; 0xffffffc8
   13f28:	bl	138f8 <putchar_unlocked@plt+0x2bac>
   13f2c:	mov	r3, r0
   13f30:	mov	r0, r3
   13f34:	sub	sp, fp, #4
   13f38:	pop	{fp, pc}
   13f3c:	push	{fp, lr}
   13f40:	add	fp, sp, #4
   13f44:	sub	sp, sp, #24
   13f48:	str	r0, [fp, #-8]
   13f4c:	str	r1, [fp, #-12]
   13f50:	str	r2, [fp, #-16]
   13f54:	str	r3, [fp, #-20]	; 0xffffffec
   13f58:	mvn	r3, #0
   13f5c:	str	r3, [sp]
   13f60:	ldr	r3, [fp, #-20]	; 0xffffffec
   13f64:	ldr	r2, [fp, #-16]
   13f68:	ldr	r1, [fp, #-12]
   13f6c:	ldr	r0, [fp, #-8]
   13f70:	bl	13f84 <putchar_unlocked@plt+0x3238>
   13f74:	mov	r3, r0
   13f78:	mov	r0, r3
   13f7c:	sub	sp, fp, #4
   13f80:	pop	{fp, pc}
   13f84:	push	{fp, lr}
   13f88:	add	fp, sp, #4
   13f8c:	sub	sp, sp, #64	; 0x40
   13f90:	str	r0, [fp, #-56]	; 0xffffffc8
   13f94:	str	r1, [fp, #-60]	; 0xffffffc4
   13f98:	str	r2, [fp, #-64]	; 0xffffffc0
   13f9c:	str	r3, [fp, #-68]	; 0xffffffbc
   13fa0:	ldr	r3, [pc, #84]	; 13ffc <putchar_unlocked@plt+0x32b0>
   13fa4:	sub	ip, fp, #52	; 0x34
   13fa8:	mov	lr, r3
   13fac:	ldm	lr!, {r0, r1, r2, r3}
   13fb0:	stmia	ip!, {r0, r1, r2, r3}
   13fb4:	ldm	lr!, {r0, r1, r2, r3}
   13fb8:	stmia	ip!, {r0, r1, r2, r3}
   13fbc:	ldm	lr, {r0, r1, r2, r3}
   13fc0:	stm	ip, {r0, r1, r2, r3}
   13fc4:	sub	r3, fp, #52	; 0x34
   13fc8:	ldr	r2, [fp, #-64]	; 0xffffffc0
   13fcc:	ldr	r1, [fp, #-60]	; 0xffffffc4
   13fd0:	mov	r0, r3
   13fd4:	bl	11d28 <putchar_unlocked@plt+0xfdc>
   13fd8:	sub	r3, fp, #52	; 0x34
   13fdc:	ldr	r2, [fp, #4]
   13fe0:	ldr	r1, [fp, #-68]	; 0xffffffbc
   13fe4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   13fe8:	bl	138f8 <putchar_unlocked@plt+0x2bac>
   13fec:	mov	r3, r0
   13ff0:	mov	r0, r3
   13ff4:	sub	sp, fp, #4
   13ff8:	pop	{fp, pc}
   13ffc:	andeq	r8, r2, r4, asr #2
   14000:	push	{fp, lr}
   14004:	add	fp, sp, #4
   14008:	sub	sp, sp, #16
   1400c:	str	r0, [fp, #-8]
   14010:	str	r1, [fp, #-12]
   14014:	str	r2, [fp, #-16]
   14018:	ldr	r3, [fp, #-16]
   1401c:	ldr	r2, [fp, #-12]
   14020:	ldr	r1, [fp, #-8]
   14024:	mov	r0, #0
   14028:	bl	13f3c <putchar_unlocked@plt+0x31f0>
   1402c:	mov	r3, r0
   14030:	mov	r0, r3
   14034:	sub	sp, fp, #4
   14038:	pop	{fp, pc}
   1403c:	push	{fp, lr}
   14040:	add	fp, sp, #4
   14044:	sub	sp, sp, #24
   14048:	str	r0, [fp, #-8]
   1404c:	str	r1, [fp, #-12]
   14050:	str	r2, [fp, #-16]
   14054:	str	r3, [fp, #-20]	; 0xffffffec
   14058:	ldr	r3, [fp, #-20]	; 0xffffffec
   1405c:	str	r3, [sp]
   14060:	ldr	r3, [fp, #-16]
   14064:	ldr	r2, [fp, #-12]
   14068:	ldr	r1, [fp, #-8]
   1406c:	mov	r0, #0
   14070:	bl	13f84 <putchar_unlocked@plt+0x3238>
   14074:	mov	r3, r0
   14078:	mov	r0, r3
   1407c:	sub	sp, fp, #4
   14080:	pop	{fp, pc}
   14084:	push	{fp, lr}
   14088:	add	fp, sp, #4
   1408c:	sub	sp, sp, #16
   14090:	str	r0, [fp, #-8]
   14094:	str	r1, [fp, #-12]
   14098:	str	r2, [fp, #-16]
   1409c:	ldr	r3, [pc, #28]	; 140c0 <putchar_unlocked@plt+0x3374>
   140a0:	ldr	r2, [fp, #-16]
   140a4:	ldr	r1, [fp, #-12]
   140a8:	ldr	r0, [fp, #-8]
   140ac:	bl	138f8 <putchar_unlocked@plt+0x2bac>
   140b0:	mov	r3, r0
   140b4:	mov	r0, r3
   140b8:	sub	sp, fp, #4
   140bc:	pop	{fp, pc}
   140c0:	andeq	r8, r2, r4, ror #1
   140c4:	push	{fp, lr}
   140c8:	add	fp, sp, #4
   140cc:	sub	sp, sp, #8
   140d0:	str	r0, [fp, #-8]
   140d4:	str	r1, [fp, #-12]
   140d8:	ldr	r2, [fp, #-12]
   140dc:	ldr	r1, [fp, #-8]
   140e0:	mov	r0, #0
   140e4:	bl	14084 <putchar_unlocked@plt+0x3338>
   140e8:	mov	r3, r0
   140ec:	mov	r0, r3
   140f0:	sub	sp, fp, #4
   140f4:	pop	{fp, pc}
   140f8:	push	{fp, lr}
   140fc:	add	fp, sp, #4
   14100:	sub	sp, sp, #8
   14104:	str	r0, [fp, #-8]
   14108:	str	r1, [fp, #-12]
   1410c:	mvn	r2, #0
   14110:	ldr	r1, [fp, #-12]
   14114:	ldr	r0, [fp, #-8]
   14118:	bl	14084 <putchar_unlocked@plt+0x3338>
   1411c:	mov	r3, r0
   14120:	mov	r0, r3
   14124:	sub	sp, fp, #4
   14128:	pop	{fp, pc}
   1412c:	push	{fp, lr}
   14130:	add	fp, sp, #4
   14134:	sub	sp, sp, #8
   14138:	str	r0, [fp, #-8]
   1413c:	ldr	r1, [fp, #-8]
   14140:	mov	r0, #0
   14144:	bl	140f8 <putchar_unlocked@plt+0x33ac>
   14148:	mov	r3, r0
   1414c:	mov	r0, r3
   14150:	sub	sp, fp, #4
   14154:	pop	{fp, pc}
   14158:	push	{r4, r5, r6, r7, fp, lr}
   1415c:	add	fp, sp, #20
   14160:	sub	sp, sp, #48	; 0x30
   14164:	str	r0, [fp, #-24]	; 0xffffffe8
   14168:	str	r1, [fp, #-28]	; 0xffffffe4
   1416c:	str	r2, [fp, #-32]	; 0xffffffe0
   14170:	str	r3, [fp, #-36]	; 0xffffffdc
   14174:	ldr	r3, [fp, #-28]	; 0xffffffe4
   14178:	cmp	r3, #0
   1417c:	beq	141a0 <putchar_unlocked@plt+0x3454>
   14180:	ldr	r3, [fp, #-36]	; 0xffffffdc
   14184:	str	r3, [sp]
   14188:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1418c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   14190:	ldr	r1, [pc, #1260]	; 14684 <putchar_unlocked@plt+0x3938>
   14194:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14198:	bl	10cb0 <fprintf@plt>
   1419c:	b	141b4 <putchar_unlocked@plt+0x3468>
   141a0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   141a4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   141a8:	ldr	r1, [pc, #1240]	; 14688 <putchar_unlocked@plt+0x393c>
   141ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   141b0:	bl	10cb0 <fprintf@plt>
   141b4:	ldr	r0, [pc, #1232]	; 1468c <putchar_unlocked@plt+0x3940>
   141b8:	bl	10c98 <gettext@plt>
   141bc:	mov	r2, r0
   141c0:	ldr	r3, [pc, #1224]	; 14690 <putchar_unlocked@plt+0x3944>
   141c4:	ldr	r1, [pc, #1224]	; 14694 <putchar_unlocked@plt+0x3948>
   141c8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   141cc:	bl	10cb0 <fprintf@plt>
   141d0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   141d4:	mov	r0, #10
   141d8:	bl	10bc0 <fputc_unlocked@plt>
   141dc:	ldr	r0, [pc, #1204]	; 14698 <putchar_unlocked@plt+0x394c>
   141e0:	bl	10c98 <gettext@plt>
   141e4:	mov	r3, r0
   141e8:	ldr	r2, [pc, #1196]	; 1469c <putchar_unlocked@plt+0x3950>
   141ec:	mov	r1, r3
   141f0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   141f4:	bl	10cb0 <fprintf@plt>
   141f8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   141fc:	mov	r0, #10
   14200:	bl	10bc0 <fputc_unlocked@plt>
   14204:	ldr	r3, [fp, #8]
   14208:	cmp	r3, #9
   1420c:	ldrls	pc, [pc, r3, lsl #2]
   14210:	b	145cc <putchar_unlocked@plt+0x3880>
   14214:	andeq	r4, r1, r4, ror r6
   14218:	andeq	r4, r1, ip, lsr r2
   1421c:	andeq	r4, r1, r0, ror #4
   14220:	andeq	r4, r1, ip, lsl #5
   14224:	andeq	r4, r1, ip, asr #5
   14228:	andeq	r4, r1, r4, lsr #6
   1422c:	andeq	r4, r1, ip, lsl #7
   14230:	andeq	r4, r1, r4, lsl #8
   14234:	andeq	r4, r1, ip, lsl #9
   14238:	andeq	r4, r1, r4, lsr #10
   1423c:	ldr	r0, [pc, #1116]	; 146a0 <putchar_unlocked@plt+0x3954>
   14240:	bl	10c98 <gettext@plt>
   14244:	mov	r1, r0
   14248:	ldr	r3, [fp, #4]
   1424c:	ldr	r3, [r3]
   14250:	mov	r2, r3
   14254:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14258:	bl	10cb0 <fprintf@plt>
   1425c:	b	14678 <putchar_unlocked@plt+0x392c>
   14260:	ldr	r0, [pc, #1084]	; 146a4 <putchar_unlocked@plt+0x3958>
   14264:	bl	10c98 <gettext@plt>
   14268:	mov	r1, r0
   1426c:	ldr	r3, [fp, #4]
   14270:	ldr	r2, [r3]
   14274:	ldr	r3, [fp, #4]
   14278:	add	r3, r3, #4
   1427c:	ldr	r3, [r3]
   14280:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14284:	bl	10cb0 <fprintf@plt>
   14288:	b	14678 <putchar_unlocked@plt+0x392c>
   1428c:	ldr	r0, [pc, #1044]	; 146a8 <putchar_unlocked@plt+0x395c>
   14290:	bl	10c98 <gettext@plt>
   14294:	ldr	r3, [fp, #4]
   14298:	ldr	r2, [r3]
   1429c:	ldr	r3, [fp, #4]
   142a0:	add	r3, r3, #4
   142a4:	ldr	r1, [r3]
   142a8:	ldr	r3, [fp, #4]
   142ac:	add	r3, r3, #8
   142b0:	ldr	r3, [r3]
   142b4:	str	r3, [sp]
   142b8:	mov	r3, r1
   142bc:	mov	r1, r0
   142c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   142c4:	bl	10cb0 <fprintf@plt>
   142c8:	b	14678 <putchar_unlocked@plt+0x392c>
   142cc:	ldr	r0, [pc, #984]	; 146ac <putchar_unlocked@plt+0x3960>
   142d0:	bl	10c98 <gettext@plt>
   142d4:	mov	ip, r0
   142d8:	ldr	r3, [fp, #4]
   142dc:	ldr	r1, [r3]
   142e0:	ldr	r3, [fp, #4]
   142e4:	add	r3, r3, #4
   142e8:	ldr	r0, [r3]
   142ec:	ldr	r3, [fp, #4]
   142f0:	add	r3, r3, #8
   142f4:	ldr	r3, [r3]
   142f8:	ldr	r2, [fp, #4]
   142fc:	add	r2, r2, #12
   14300:	ldr	r2, [r2]
   14304:	str	r2, [sp, #4]
   14308:	str	r3, [sp]
   1430c:	mov	r3, r0
   14310:	mov	r2, r1
   14314:	mov	r1, ip
   14318:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1431c:	bl	10cb0 <fprintf@plt>
   14320:	b	14678 <putchar_unlocked@plt+0x392c>
   14324:	ldr	r0, [pc, #900]	; 146b0 <putchar_unlocked@plt+0x3964>
   14328:	bl	10c98 <gettext@plt>
   1432c:	mov	lr, r0
   14330:	ldr	r3, [fp, #4]
   14334:	ldr	r0, [r3]
   14338:	ldr	r3, [fp, #4]
   1433c:	add	r3, r3, #4
   14340:	ldr	ip, [r3]
   14344:	ldr	r3, [fp, #4]
   14348:	add	r3, r3, #8
   1434c:	ldr	r3, [r3]
   14350:	ldr	r2, [fp, #4]
   14354:	add	r2, r2, #12
   14358:	ldr	r2, [r2]
   1435c:	ldr	r1, [fp, #4]
   14360:	add	r1, r1, #16
   14364:	ldr	r1, [r1]
   14368:	str	r1, [sp, #8]
   1436c:	str	r2, [sp, #4]
   14370:	str	r3, [sp]
   14374:	mov	r3, ip
   14378:	mov	r2, r0
   1437c:	mov	r1, lr
   14380:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14384:	bl	10cb0 <fprintf@plt>
   14388:	b	14678 <putchar_unlocked@plt+0x392c>
   1438c:	ldr	r0, [pc, #800]	; 146b4 <putchar_unlocked@plt+0x3968>
   14390:	bl	10c98 <gettext@plt>
   14394:	mov	r4, r0
   14398:	ldr	r3, [fp, #4]
   1439c:	ldr	ip, [r3]
   143a0:	ldr	r3, [fp, #4]
   143a4:	add	r3, r3, #4
   143a8:	ldr	lr, [r3]
   143ac:	ldr	r3, [fp, #4]
   143b0:	add	r3, r3, #8
   143b4:	ldr	r3, [r3]
   143b8:	ldr	r2, [fp, #4]
   143bc:	add	r2, r2, #12
   143c0:	ldr	r2, [r2]
   143c4:	ldr	r1, [fp, #4]
   143c8:	add	r1, r1, #16
   143cc:	ldr	r1, [r1]
   143d0:	ldr	r0, [fp, #4]
   143d4:	add	r0, r0, #20
   143d8:	ldr	r0, [r0]
   143dc:	str	r0, [sp, #12]
   143e0:	str	r1, [sp, #8]
   143e4:	str	r2, [sp, #4]
   143e8:	str	r3, [sp]
   143ec:	mov	r3, lr
   143f0:	mov	r2, ip
   143f4:	mov	r1, r4
   143f8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   143fc:	bl	10cb0 <fprintf@plt>
   14400:	b	14678 <putchar_unlocked@plt+0x392c>
   14404:	ldr	r0, [pc, #684]	; 146b8 <putchar_unlocked@plt+0x396c>
   14408:	bl	10c98 <gettext@plt>
   1440c:	mov	r5, r0
   14410:	ldr	r3, [fp, #4]
   14414:	ldr	lr, [r3]
   14418:	ldr	r3, [fp, #4]
   1441c:	add	r3, r3, #4
   14420:	ldr	r4, [r3]
   14424:	ldr	r3, [fp, #4]
   14428:	add	r3, r3, #8
   1442c:	ldr	r3, [r3]
   14430:	ldr	r2, [fp, #4]
   14434:	add	r2, r2, #12
   14438:	ldr	r2, [r2]
   1443c:	ldr	r1, [fp, #4]
   14440:	add	r1, r1, #16
   14444:	ldr	r1, [r1]
   14448:	ldr	r0, [fp, #4]
   1444c:	add	r0, r0, #20
   14450:	ldr	r0, [r0]
   14454:	ldr	ip, [fp, #4]
   14458:	add	ip, ip, #24
   1445c:	ldr	ip, [ip]
   14460:	str	ip, [sp, #16]
   14464:	str	r0, [sp, #12]
   14468:	str	r1, [sp, #8]
   1446c:	str	r2, [sp, #4]
   14470:	str	r3, [sp]
   14474:	mov	r3, r4
   14478:	mov	r2, lr
   1447c:	mov	r1, r5
   14480:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14484:	bl	10cb0 <fprintf@plt>
   14488:	b	14678 <putchar_unlocked@plt+0x392c>
   1448c:	ldr	r0, [pc, #552]	; 146bc <putchar_unlocked@plt+0x3970>
   14490:	bl	10c98 <gettext@plt>
   14494:	mov	r6, r0
   14498:	ldr	r3, [fp, #4]
   1449c:	ldr	r4, [r3]
   144a0:	ldr	r3, [fp, #4]
   144a4:	add	r3, r3, #4
   144a8:	ldr	r5, [r3]
   144ac:	ldr	r3, [fp, #4]
   144b0:	add	r3, r3, #8
   144b4:	ldr	r3, [r3]
   144b8:	ldr	r2, [fp, #4]
   144bc:	add	r2, r2, #12
   144c0:	ldr	r2, [r2]
   144c4:	ldr	r1, [fp, #4]
   144c8:	add	r1, r1, #16
   144cc:	ldr	r1, [r1]
   144d0:	ldr	r0, [fp, #4]
   144d4:	add	r0, r0, #20
   144d8:	ldr	r0, [r0]
   144dc:	ldr	ip, [fp, #4]
   144e0:	add	ip, ip, #24
   144e4:	ldr	ip, [ip]
   144e8:	ldr	lr, [fp, #4]
   144ec:	add	lr, lr, #28
   144f0:	ldr	lr, [lr]
   144f4:	str	lr, [sp, #20]
   144f8:	str	ip, [sp, #16]
   144fc:	str	r0, [sp, #12]
   14500:	str	r1, [sp, #8]
   14504:	str	r2, [sp, #4]
   14508:	str	r3, [sp]
   1450c:	mov	r3, r5
   14510:	mov	r2, r4
   14514:	mov	r1, r6
   14518:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1451c:	bl	10cb0 <fprintf@plt>
   14520:	b	14678 <putchar_unlocked@plt+0x392c>
   14524:	ldr	r0, [pc, #404]	; 146c0 <putchar_unlocked@plt+0x3974>
   14528:	bl	10c98 <gettext@plt>
   1452c:	mov	r7, r0
   14530:	ldr	r3, [fp, #4]
   14534:	ldr	r5, [r3]
   14538:	ldr	r3, [fp, #4]
   1453c:	add	r3, r3, #4
   14540:	ldr	r6, [r3]
   14544:	ldr	r3, [fp, #4]
   14548:	add	r3, r3, #8
   1454c:	ldr	r3, [r3]
   14550:	ldr	r2, [fp, #4]
   14554:	add	r2, r2, #12
   14558:	ldr	r2, [r2]
   1455c:	ldr	r1, [fp, #4]
   14560:	add	r1, r1, #16
   14564:	ldr	r1, [r1]
   14568:	ldr	r0, [fp, #4]
   1456c:	add	r0, r0, #20
   14570:	ldr	r0, [r0]
   14574:	ldr	ip, [fp, #4]
   14578:	add	ip, ip, #24
   1457c:	ldr	ip, [ip]
   14580:	ldr	lr, [fp, #4]
   14584:	add	lr, lr, #28
   14588:	ldr	lr, [lr]
   1458c:	ldr	r4, [fp, #4]
   14590:	add	r4, r4, #32
   14594:	ldr	r4, [r4]
   14598:	str	r4, [sp, #24]
   1459c:	str	lr, [sp, #20]
   145a0:	str	ip, [sp, #16]
   145a4:	str	r0, [sp, #12]
   145a8:	str	r1, [sp, #8]
   145ac:	str	r2, [sp, #4]
   145b0:	str	r3, [sp]
   145b4:	mov	r3, r6
   145b8:	mov	r2, r5
   145bc:	mov	r1, r7
   145c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   145c4:	bl	10cb0 <fprintf@plt>
   145c8:	b	14678 <putchar_unlocked@plt+0x392c>
   145cc:	ldr	r0, [pc, #240]	; 146c4 <putchar_unlocked@plt+0x3978>
   145d0:	bl	10c98 <gettext@plt>
   145d4:	mov	r7, r0
   145d8:	ldr	r3, [fp, #4]
   145dc:	ldr	r5, [r3]
   145e0:	ldr	r3, [fp, #4]
   145e4:	add	r3, r3, #4
   145e8:	ldr	r6, [r3]
   145ec:	ldr	r3, [fp, #4]
   145f0:	add	r3, r3, #8
   145f4:	ldr	r3, [r3]
   145f8:	ldr	r2, [fp, #4]
   145fc:	add	r2, r2, #12
   14600:	ldr	r2, [r2]
   14604:	ldr	r1, [fp, #4]
   14608:	add	r1, r1, #16
   1460c:	ldr	r1, [r1]
   14610:	ldr	r0, [fp, #4]
   14614:	add	r0, r0, #20
   14618:	ldr	r0, [r0]
   1461c:	ldr	ip, [fp, #4]
   14620:	add	ip, ip, #24
   14624:	ldr	ip, [ip]
   14628:	ldr	lr, [fp, #4]
   1462c:	add	lr, lr, #28
   14630:	ldr	lr, [lr]
   14634:	ldr	r4, [fp, #4]
   14638:	add	r4, r4, #32
   1463c:	ldr	r4, [r4]
   14640:	str	r4, [sp, #24]
   14644:	str	lr, [sp, #20]
   14648:	str	ip, [sp, #16]
   1464c:	str	r0, [sp, #12]
   14650:	str	r1, [sp, #8]
   14654:	str	r2, [sp, #4]
   14658:	str	r3, [sp]
   1465c:	mov	r3, r6
   14660:	mov	r2, r5
   14664:	mov	r1, r7
   14668:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1466c:	bl	10cb0 <fprintf@plt>
   14670:	b	14678 <putchar_unlocked@plt+0x392c>
   14674:	nop			; (mov r0, r0)
   14678:	nop			; (mov r0, r0)
   1467c:	sub	sp, fp, #20
   14680:	pop	{r4, r5, r6, r7, fp, pc}
   14684:	andeq	r7, r1, ip, lsr #3
   14688:			; <UNDEFINED> instruction: 0x000171b8
   1468c:	andeq	r7, r1, r0, asr #3
   14690:	andeq	r0, r0, r6, ror #15
   14694:	ldrdeq	r7, [r1], -r0
   14698:	andeq	r7, r1, r4, asr #3
   1469c:	andeq	r7, r1, r0, ror r2
   146a0:	muleq	r1, r4, r2
   146a4:	andeq	r7, r1, r4, lsr #5
   146a8:			; <UNDEFINED> instruction: 0x000172bc
   146ac:	ldrdeq	r7, [r1], -r8
   146b0:	strdeq	r7, [r1], -r8
   146b4:	andeq	r7, r1, ip, lsl r3
   146b8:	andeq	r7, r1, r4, asr #6
   146bc:	andeq	r7, r1, r0, ror r3
   146c0:	andeq	r7, r1, r0, lsr #7
   146c4:	ldrdeq	r7, [r1], -r4
   146c8:	push	{fp, lr}
   146cc:	add	fp, sp, #4
   146d0:	sub	sp, sp, #32
   146d4:	str	r0, [fp, #-16]
   146d8:	str	r1, [fp, #-20]	; 0xffffffec
   146dc:	str	r2, [fp, #-24]	; 0xffffffe8
   146e0:	str	r3, [fp, #-28]	; 0xffffffe4
   146e4:	mov	r3, #0
   146e8:	str	r3, [fp, #-8]
   146ec:	b	146fc <putchar_unlocked@plt+0x39b0>
   146f0:	ldr	r3, [fp, #-8]
   146f4:	add	r3, r3, #1
   146f8:	str	r3, [fp, #-8]
   146fc:	ldr	r3, [fp, #-8]
   14700:	lsl	r3, r3, #2
   14704:	ldr	r2, [fp, #4]
   14708:	add	r3, r2, r3
   1470c:	ldr	r3, [r3]
   14710:	cmp	r3, #0
   14714:	bne	146f0 <putchar_unlocked@plt+0x39a4>
   14718:	ldr	r3, [fp, #-8]
   1471c:	str	r3, [sp, #4]
   14720:	ldr	r3, [fp, #4]
   14724:	str	r3, [sp]
   14728:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1472c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   14730:	ldr	r1, [fp, #-20]	; 0xffffffec
   14734:	ldr	r0, [fp, #-16]
   14738:	bl	14158 <putchar_unlocked@plt+0x340c>
   1473c:	nop			; (mov r0, r0)
   14740:	sub	sp, fp, #4
   14744:	pop	{fp, pc}
   14748:	push	{fp, lr}
   1474c:	add	fp, sp, #4
   14750:	sub	sp, sp, #72	; 0x48
   14754:	str	r0, [fp, #-56]	; 0xffffffc8
   14758:	str	r1, [fp, #-60]	; 0xffffffc4
   1475c:	str	r2, [fp, #-64]	; 0xffffffc0
   14760:	str	r3, [fp, #-68]	; 0xffffffbc
   14764:	mov	r3, #0
   14768:	str	r3, [fp, #-8]
   1476c:	b	1477c <putchar_unlocked@plt+0x3a30>
   14770:	ldr	r3, [fp, #-8]
   14774:	add	r3, r3, #1
   14778:	str	r3, [fp, #-8]
   1477c:	ldr	r3, [fp, #-8]
   14780:	cmp	r3, #9
   14784:	bhi	147c8 <putchar_unlocked@plt+0x3a7c>
   14788:	ldr	r3, [fp, #4]
   1478c:	add	r2, r3, #4
   14790:	str	r2, [fp, #4]
   14794:	ldr	r2, [r3]
   14798:	ldr	r3, [fp, #-8]
   1479c:	lsl	r3, r3, #2
   147a0:	sub	r1, fp, #4
   147a4:	add	r3, r1, r3
   147a8:	str	r2, [r3, #-44]	; 0xffffffd4
   147ac:	ldr	r3, [fp, #-8]
   147b0:	lsl	r3, r3, #2
   147b4:	sub	r2, fp, #4
   147b8:	add	r3, r2, r3
   147bc:	ldr	r3, [r3, #-44]	; 0xffffffd4
   147c0:	cmp	r3, #0
   147c4:	bne	14770 <putchar_unlocked@plt+0x3a24>
   147c8:	ldr	r3, [fp, #-8]
   147cc:	str	r3, [sp, #4]
   147d0:	sub	r3, fp, #48	; 0x30
   147d4:	str	r3, [sp]
   147d8:	ldr	r3, [fp, #-68]	; 0xffffffbc
   147dc:	ldr	r2, [fp, #-64]	; 0xffffffc0
   147e0:	ldr	r1, [fp, #-60]	; 0xffffffc4
   147e4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   147e8:	bl	14158 <putchar_unlocked@plt+0x340c>
   147ec:	nop			; (mov r0, r0)
   147f0:	sub	sp, fp, #4
   147f4:	pop	{fp, pc}
   147f8:	push	{r3}		; (str r3, [sp, #-4]!)
   147fc:	push	{fp, lr}
   14800:	add	fp, sp, #4
   14804:	sub	sp, sp, #36	; 0x24
   14808:	str	r0, [fp, #-20]	; 0xffffffec
   1480c:	str	r1, [fp, #-24]	; 0xffffffe8
   14810:	str	r2, [fp, #-28]	; 0xffffffe4
   14814:	add	r3, fp, #8
   14818:	str	r3, [fp, #-12]
   1481c:	ldr	r3, [fp, #-12]
   14820:	str	r3, [sp]
   14824:	ldr	r3, [fp, #4]
   14828:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1482c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   14830:	ldr	r0, [fp, #-20]	; 0xffffffec
   14834:	bl	14748 <putchar_unlocked@plt+0x39fc>
   14838:	nop			; (mov r0, r0)
   1483c:	sub	sp, fp, #4
   14840:	pop	{fp, lr}
   14844:	add	sp, sp, #4
   14848:	bx	lr
   1484c:	push	{fp, lr}
   14850:	add	fp, sp, #4
   14854:	ldr	r3, [pc, #96]	; 148bc <putchar_unlocked@plt+0x3b70>
   14858:	ldr	r3, [r3]
   1485c:	mov	r1, r3
   14860:	mov	r0, #10
   14864:	bl	10bc0 <fputc_unlocked@plt>
   14868:	ldr	r0, [pc, #80]	; 148c0 <putchar_unlocked@plt+0x3b74>
   1486c:	bl	10c98 <gettext@plt>
   14870:	mov	r3, r0
   14874:	ldr	r1, [pc, #72]	; 148c4 <putchar_unlocked@plt+0x3b78>
   14878:	mov	r0, r3
   1487c:	bl	10b6c <printf@plt>
   14880:	ldr	r0, [pc, #64]	; 148c8 <putchar_unlocked@plt+0x3b7c>
   14884:	bl	10c98 <gettext@plt>
   14888:	mov	r3, r0
   1488c:	ldr	r2, [pc, #56]	; 148cc <putchar_unlocked@plt+0x3b80>
   14890:	ldr	r1, [pc, #56]	; 148d0 <putchar_unlocked@plt+0x3b84>
   14894:	mov	r0, r3
   14898:	bl	10b6c <printf@plt>
   1489c:	ldr	r0, [pc, #48]	; 148d4 <putchar_unlocked@plt+0x3b88>
   148a0:	bl	10c98 <gettext@plt>
   148a4:	mov	r3, r0
   148a8:	ldr	r1, [pc, #40]	; 148d8 <putchar_unlocked@plt+0x3b8c>
   148ac:	mov	r0, r3
   148b0:	bl	10b6c <printf@plt>
   148b4:	nop			; (mov r0, r0)
   148b8:	pop	{fp, pc}
   148bc:	andeq	r8, r2, ip, lsr #2
   148c0:	andeq	r7, r1, r0, lsl r4
   148c4:	andeq	r7, r1, r4, lsr #8
   148c8:	andeq	r7, r1, ip, lsr r4
   148cc:	andeq	r7, r1, r0, asr r4
   148d0:	andeq	r7, r1, r8, ror r4
   148d4:	andeq	r7, r1, r8, lsl #9
   148d8:			; <UNDEFINED> instruction: 0x000174b0
   148dc:	push	{fp, lr}
   148e0:	add	fp, sp, #4
   148e4:	sub	sp, sp, #16
   148e8:	str	r0, [fp, #-8]
   148ec:	str	r1, [fp, #-12]
   148f0:	str	r2, [fp, #-16]
   148f4:	ldr	r2, [fp, #-16]
   148f8:	ldr	r1, [fp, #-12]
   148fc:	ldr	r0, [fp, #-8]
   14900:	bl	14a6c <putchar_unlocked@plt+0x3d20>
   14904:	mov	r3, r0
   14908:	mov	r0, r3
   1490c:	sub	sp, fp, #4
   14910:	pop	{fp, pc}
   14914:	push	{fp, lr}
   14918:	add	fp, sp, #4
   1491c:	sub	sp, sp, #8
   14920:	str	r0, [fp, #-8]
   14924:	ldr	r3, [fp, #-8]
   14928:	cmp	r3, #0
   1492c:	bne	14934 <putchar_unlocked@plt+0x3be8>
   14930:	bl	15460 <putchar_unlocked@plt+0x4714>
   14934:	ldr	r3, [fp, #-8]
   14938:	mov	r0, r3
   1493c:	sub	sp, fp, #4
   14940:	pop	{fp, pc}
   14944:	push	{fp, lr}
   14948:	add	fp, sp, #4
   1494c:	sub	sp, sp, #8
   14950:	str	r0, [fp, #-8]
   14954:	ldr	r0, [fp, #-8]
   14958:	bl	15560 <putchar_unlocked@plt+0x4814>
   1495c:	mov	r3, r0
   14960:	mov	r0, r3
   14964:	bl	14914 <putchar_unlocked@plt+0x3bc8>
   14968:	mov	r3, r0
   1496c:	mov	r0, r3
   14970:	sub	sp, fp, #4
   14974:	pop	{fp, pc}
   14978:	push	{fp, lr}
   1497c:	add	fp, sp, #4
   14980:	sub	sp, sp, #8
   14984:	str	r0, [fp, #-8]
   14988:	ldr	r0, [fp, #-8]
   1498c:	bl	15c10 <putchar_unlocked@plt+0x4ec4>
   14990:	mov	r3, r0
   14994:	mov	r0, r3
   14998:	bl	14914 <putchar_unlocked@plt+0x3bc8>
   1499c:	mov	r3, r0
   149a0:	mov	r0, r3
   149a4:	sub	sp, fp, #4
   149a8:	pop	{fp, pc}
   149ac:	push	{fp, lr}
   149b0:	add	fp, sp, #4
   149b4:	sub	sp, sp, #8
   149b8:	str	r0, [fp, #-8]
   149bc:	ldr	r0, [fp, #-8]
   149c0:	bl	14944 <putchar_unlocked@plt+0x3bf8>
   149c4:	mov	r3, r0
   149c8:	mov	r0, r3
   149cc:	sub	sp, fp, #4
   149d0:	pop	{fp, pc}
   149d4:	push	{fp, lr}
   149d8:	add	fp, sp, #4
   149dc:	sub	sp, sp, #16
   149e0:	str	r0, [fp, #-16]
   149e4:	str	r1, [fp, #-20]	; 0xffffffec
   149e8:	ldr	r1, [fp, #-20]	; 0xffffffec
   149ec:	ldr	r0, [fp, #-16]
   149f0:	bl	15608 <putchar_unlocked@plt+0x48bc>
   149f4:	str	r0, [fp, #-8]
   149f8:	ldr	r3, [fp, #-8]
   149fc:	cmp	r3, #0
   14a00:	bne	14a20 <putchar_unlocked@plt+0x3cd4>
   14a04:	ldr	r3, [fp, #-16]
   14a08:	cmp	r3, #0
   14a0c:	beq	14a1c <putchar_unlocked@plt+0x3cd0>
   14a10:	ldr	r3, [fp, #-20]	; 0xffffffec
   14a14:	cmp	r3, #0
   14a18:	beq	14a20 <putchar_unlocked@plt+0x3cd4>
   14a1c:	bl	15460 <putchar_unlocked@plt+0x4714>
   14a20:	ldr	r3, [fp, #-8]
   14a24:	mov	r0, r3
   14a28:	sub	sp, fp, #4
   14a2c:	pop	{fp, pc}
   14a30:	push	{fp, lr}
   14a34:	add	fp, sp, #4
   14a38:	sub	sp, sp, #8
   14a3c:	str	r0, [fp, #-8]
   14a40:	str	r1, [fp, #-12]
   14a44:	ldr	r1, [fp, #-12]
   14a48:	ldr	r0, [fp, #-8]
   14a4c:	bl	15c3c <putchar_unlocked@plt+0x4ef0>
   14a50:	mov	r3, r0
   14a54:	mov	r0, r3
   14a58:	bl	14914 <putchar_unlocked@plt+0x3bc8>
   14a5c:	mov	r3, r0
   14a60:	mov	r0, r3
   14a64:	sub	sp, fp, #4
   14a68:	pop	{fp, pc}
   14a6c:	push	{fp, lr}
   14a70:	add	fp, sp, #4
   14a74:	sub	sp, sp, #24
   14a78:	str	r0, [fp, #-16]
   14a7c:	str	r1, [fp, #-20]	; 0xffffffec
   14a80:	str	r2, [fp, #-24]	; 0xffffffe8
   14a84:	ldr	r2, [fp, #-24]	; 0xffffffe8
   14a88:	ldr	r1, [fp, #-20]	; 0xffffffec
   14a8c:	ldr	r0, [fp, #-16]
   14a90:	bl	15e30 <putchar_unlocked@plt+0x50e4>
   14a94:	str	r0, [fp, #-8]
   14a98:	ldr	r3, [fp, #-8]
   14a9c:	cmp	r3, #0
   14aa0:	bne	14acc <putchar_unlocked@plt+0x3d80>
   14aa4:	ldr	r3, [fp, #-16]
   14aa8:	cmp	r3, #0
   14aac:	beq	14ac8 <putchar_unlocked@plt+0x3d7c>
   14ab0:	ldr	r3, [fp, #-20]	; 0xffffffec
   14ab4:	cmp	r3, #0
   14ab8:	beq	14acc <putchar_unlocked@plt+0x3d80>
   14abc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14ac0:	cmp	r3, #0
   14ac4:	beq	14acc <putchar_unlocked@plt+0x3d80>
   14ac8:	bl	15460 <putchar_unlocked@plt+0x4714>
   14acc:	ldr	r3, [fp, #-8]
   14ad0:	mov	r0, r3
   14ad4:	sub	sp, fp, #4
   14ad8:	pop	{fp, pc}
   14adc:	push	{fp, lr}
   14ae0:	add	fp, sp, #4
   14ae4:	sub	sp, sp, #16
   14ae8:	str	r0, [fp, #-8]
   14aec:	str	r1, [fp, #-12]
   14af0:	str	r2, [fp, #-16]
   14af4:	ldr	r2, [fp, #-16]
   14af8:	ldr	r1, [fp, #-12]
   14afc:	ldr	r0, [fp, #-8]
   14b00:	bl	15cc4 <putchar_unlocked@plt+0x4f78>
   14b04:	mov	r3, r0
   14b08:	mov	r0, r3
   14b0c:	bl	14914 <putchar_unlocked@plt+0x3bc8>
   14b10:	mov	r3, r0
   14b14:	mov	r0, r3
   14b18:	sub	sp, fp, #4
   14b1c:	pop	{fp, pc}
   14b20:	push	{fp, lr}
   14b24:	add	fp, sp, #4
   14b28:	sub	sp, sp, #8
   14b2c:	str	r0, [fp, #-8]
   14b30:	str	r1, [fp, #-12]
   14b34:	ldr	r2, [fp, #-12]
   14b38:	ldr	r1, [fp, #-8]
   14b3c:	mov	r0, #0
   14b40:	bl	14a6c <putchar_unlocked@plt+0x3d20>
   14b44:	mov	r3, r0
   14b48:	mov	r0, r3
   14b4c:	sub	sp, fp, #4
   14b50:	pop	{fp, pc}
   14b54:	push	{fp, lr}
   14b58:	add	fp, sp, #4
   14b5c:	sub	sp, sp, #8
   14b60:	str	r0, [fp, #-8]
   14b64:	str	r1, [fp, #-12]
   14b68:	ldr	r2, [fp, #-12]
   14b6c:	ldr	r1, [fp, #-8]
   14b70:	mov	r0, #0
   14b74:	bl	14adc <putchar_unlocked@plt+0x3d90>
   14b78:	mov	r3, r0
   14b7c:	mov	r0, r3
   14b80:	sub	sp, fp, #4
   14b84:	pop	{fp, pc}
   14b88:	push	{fp, lr}
   14b8c:	add	fp, sp, #4
   14b90:	sub	sp, sp, #8
   14b94:	str	r0, [fp, #-8]
   14b98:	str	r1, [fp, #-12]
   14b9c:	mov	r2, #1
   14ba0:	ldr	r1, [fp, #-12]
   14ba4:	ldr	r0, [fp, #-8]
   14ba8:	bl	14bbc <putchar_unlocked@plt+0x3e70>
   14bac:	mov	r3, r0
   14bb0:	mov	r0, r3
   14bb4:	sub	sp, fp, #4
   14bb8:	pop	{fp, pc}
   14bbc:	push	{fp, lr}
   14bc0:	add	fp, sp, #4
   14bc4:	sub	sp, sp, #24
   14bc8:	str	r0, [fp, #-16]
   14bcc:	str	r1, [fp, #-20]	; 0xffffffec
   14bd0:	str	r2, [fp, #-24]	; 0xffffffe8
   14bd4:	ldr	r3, [fp, #-20]	; 0xffffffec
   14bd8:	ldr	r3, [r3]
   14bdc:	str	r3, [fp, #-8]
   14be0:	ldr	r3, [fp, #-16]
   14be4:	cmp	r3, #0
   14be8:	bne	14c34 <putchar_unlocked@plt+0x3ee8>
   14bec:	ldr	r3, [fp, #-8]
   14bf0:	cmp	r3, #0
   14bf4:	bne	14c98 <putchar_unlocked@plt+0x3f4c>
   14bf8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   14bfc:	mov	r0, #64	; 0x40
   14c00:	bl	165d8 <putchar_unlocked@plt+0x588c>
   14c04:	mov	r3, r0
   14c08:	str	r3, [fp, #-8]
   14c0c:	ldr	r3, [fp, #-8]
   14c10:	cmp	r3, #0
   14c14:	moveq	r3, #1
   14c18:	movne	r3, #0
   14c1c:	uxtb	r3, r3
   14c20:	mov	r2, r3
   14c24:	ldr	r3, [fp, #-8]
   14c28:	add	r3, r2, r3
   14c2c:	str	r3, [fp, #-8]
   14c30:	b	14c98 <putchar_unlocked@plt+0x3f4c>
   14c34:	ldr	r3, [fp, #-8]
   14c38:	lsr	r3, r3, #1
   14c3c:	add	r3, r3, #1
   14c40:	mvn	r2, r3
   14c44:	ldr	r3, [fp, #-8]
   14c48:	cmp	r2, r3
   14c4c:	bcs	14c70 <putchar_unlocked@plt+0x3f24>
   14c50:	ldr	r3, [fp, #-8]
   14c54:	lsr	r2, r3, #1
   14c58:	ldr	r3, [fp, #-8]
   14c5c:	add	r3, r2, r3
   14c60:	add	r3, r3, #1
   14c64:	str	r3, [fp, #-8]
   14c68:	mov	r3, #1
   14c6c:	b	14c8c <putchar_unlocked@plt+0x3f40>
   14c70:	ldr	r3, [fp, #-8]
   14c74:	lsr	r2, r3, #1
   14c78:	ldr	r3, [fp, #-8]
   14c7c:	add	r3, r2, r3
   14c80:	add	r3, r3, #1
   14c84:	str	r3, [fp, #-8]
   14c88:	mov	r3, #0
   14c8c:	cmp	r3, #0
   14c90:	beq	14c98 <putchar_unlocked@plt+0x3f4c>
   14c94:	bl	15460 <putchar_unlocked@plt+0x4714>
   14c98:	ldr	r3, [fp, #-8]
   14c9c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   14ca0:	mov	r1, r3
   14ca4:	ldr	r0, [fp, #-16]
   14ca8:	bl	14a6c <putchar_unlocked@plt+0x3d20>
   14cac:	str	r0, [fp, #-16]
   14cb0:	ldr	r2, [fp, #-8]
   14cb4:	ldr	r3, [fp, #-20]	; 0xffffffec
   14cb8:	str	r2, [r3]
   14cbc:	ldr	r3, [fp, #-16]
   14cc0:	mov	r0, r3
   14cc4:	sub	sp, fp, #4
   14cc8:	pop	{fp, pc}
   14ccc:	push	{fp, lr}
   14cd0:	add	fp, sp, #4
   14cd4:	sub	sp, sp, #32
   14cd8:	str	r0, [fp, #-24]	; 0xffffffe8
   14cdc:	str	r1, [fp, #-28]	; 0xffffffe4
   14ce0:	str	r2, [fp, #-32]	; 0xffffffe0
   14ce4:	str	r3, [fp, #-36]	; 0xffffffdc
   14ce8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   14cec:	ldr	r3, [r3]
   14cf0:	str	r3, [fp, #-8]
   14cf4:	ldr	r3, [fp, #-8]
   14cf8:	asr	r3, r3, #1
   14cfc:	cmp	r3, #0
   14d00:	bge	14d28 <putchar_unlocked@plt+0x3fdc>
   14d04:	ldr	r3, [fp, #-8]
   14d08:	asr	r3, r3, #1
   14d0c:	rsb	r2, r3, #-2147483648	; 0x80000000
   14d10:	ldr	r3, [fp, #-8]
   14d14:	cmp	r2, r3
   14d18:	movgt	r3, #1
   14d1c:	movle	r3, #0
   14d20:	uxtb	r3, r3
   14d24:	b	14d7c <putchar_unlocked@plt+0x4030>
   14d28:	ldr	r3, [fp, #-8]
   14d2c:	cmp	r3, #0
   14d30:	bge	14d58 <putchar_unlocked@plt+0x400c>
   14d34:	ldr	r3, [fp, #-8]
   14d38:	asr	r2, r3, #1
   14d3c:	ldr	r3, [fp, #-8]
   14d40:	rsb	r3, r3, #-2147483648	; 0x80000000
   14d44:	cmp	r2, r3
   14d48:	movlt	r3, #1
   14d4c:	movge	r3, #0
   14d50:	uxtb	r3, r3
   14d54:	b	14d7c <putchar_unlocked@plt+0x4030>
   14d58:	ldr	r3, [fp, #-8]
   14d5c:	asr	r2, r3, #1
   14d60:	mvn	r3, #-2147483648	; 0x80000000
   14d64:	sub	r3, r3, r2
   14d68:	ldr	r2, [fp, #-8]
   14d6c:	cmp	r3, r2
   14d70:	movlt	r3, #1
   14d74:	movge	r3, #0
   14d78:	uxtb	r3, r3
   14d7c:	cmp	r3, #0
   14d80:	beq	14da4 <putchar_unlocked@plt+0x4058>
   14d84:	ldr	r3, [fp, #-8]
   14d88:	asr	r3, r3, #1
   14d8c:	mov	r2, r3
   14d90:	ldr	r3, [fp, #-8]
   14d94:	add	r3, r2, r3
   14d98:	str	r3, [fp, #-16]
   14d9c:	mov	r3, #1
   14da0:	b	14dc0 <putchar_unlocked@plt+0x4074>
   14da4:	ldr	r3, [fp, #-8]
   14da8:	asr	r3, r3, #1
   14dac:	mov	r2, r3
   14db0:	ldr	r3, [fp, #-8]
   14db4:	add	r3, r2, r3
   14db8:	str	r3, [fp, #-16]
   14dbc:	mov	r3, #0
   14dc0:	cmp	r3, #0
   14dc4:	beq	14dd0 <putchar_unlocked@plt+0x4084>
   14dc8:	mvn	r3, #-2147483648	; 0x80000000
   14dcc:	str	r3, [fp, #-16]
   14dd0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   14dd4:	cmp	r3, #0
   14dd8:	blt	14df4 <putchar_unlocked@plt+0x40a8>
   14ddc:	ldr	r3, [fp, #-16]
   14de0:	ldr	r2, [fp, #-36]	; 0xffffffdc
   14de4:	cmp	r2, r3
   14de8:	bge	14df4 <putchar_unlocked@plt+0x40a8>
   14dec:	ldr	r3, [fp, #-36]	; 0xffffffdc
   14df0:	str	r3, [fp, #-16]
   14df4:	ldr	r3, [fp, #4]
   14df8:	cmp	r3, #0
   14dfc:	bge	14e8c <putchar_unlocked@plt+0x4140>
   14e00:	ldr	r3, [fp, #-16]
   14e04:	cmp	r3, #0
   14e08:	bge	14e38 <putchar_unlocked@plt+0x40ec>
   14e0c:	ldr	r1, [fp, #4]
   14e10:	mvn	r0, #-2147483648	; 0x80000000
   14e14:	bl	167e4 <putchar_unlocked@plt+0x5a98>
   14e18:	mov	r3, r0
   14e1c:	mov	r2, r3
   14e20:	ldr	r3, [fp, #-16]
   14e24:	cmp	r2, r3
   14e28:	movgt	r3, #1
   14e2c:	movle	r3, #0
   14e30:	uxtb	r3, r3
   14e34:	b	14f2c <putchar_unlocked@plt+0x41e0>
   14e38:	ldr	r3, [fp, #4]
   14e3c:	cmn	r3, #1
   14e40:	bne	14e60 <putchar_unlocked@plt+0x4114>
   14e44:	ldr	r3, [fp, #-16]
   14e48:	add	r3, r3, #-2147483648	; 0x80000000
   14e4c:	cmp	r3, #0
   14e50:	movgt	r3, #1
   14e54:	movle	r3, #0
   14e58:	uxtb	r3, r3
   14e5c:	b	14f2c <putchar_unlocked@plt+0x41e0>
   14e60:	ldr	r1, [fp, #4]
   14e64:	mov	r0, #-2147483648	; 0x80000000
   14e68:	bl	167e4 <putchar_unlocked@plt+0x5a98>
   14e6c:	mov	r3, r0
   14e70:	mov	r2, r3
   14e74:	ldr	r3, [fp, #-16]
   14e78:	cmp	r2, r3
   14e7c:	movlt	r3, #1
   14e80:	movge	r3, #0
   14e84:	uxtb	r3, r3
   14e88:	b	14f2c <putchar_unlocked@plt+0x41e0>
   14e8c:	ldr	r3, [fp, #4]
   14e90:	cmp	r3, #0
   14e94:	beq	14f28 <putchar_unlocked@plt+0x41dc>
   14e98:	ldr	r3, [fp, #-16]
   14e9c:	cmp	r3, #0
   14ea0:	bge	14efc <putchar_unlocked@plt+0x41b0>
   14ea4:	ldr	r3, [fp, #-16]
   14ea8:	cmn	r3, #1
   14eac:	bne	14ecc <putchar_unlocked@plt+0x4180>
   14eb0:	ldr	r3, [fp, #4]
   14eb4:	add	r3, r3, #-2147483648	; 0x80000000
   14eb8:	cmp	r3, #0
   14ebc:	movgt	r3, #1
   14ec0:	movle	r3, #0
   14ec4:	uxtb	r3, r3
   14ec8:	b	14f2c <putchar_unlocked@plt+0x41e0>
   14ecc:	ldr	r3, [fp, #-16]
   14ed0:	mov	r1, r3
   14ed4:	mov	r0, #-2147483648	; 0x80000000
   14ed8:	bl	167e4 <putchar_unlocked@plt+0x5a98>
   14edc:	mov	r3, r0
   14ee0:	mov	r2, r3
   14ee4:	ldr	r3, [fp, #4]
   14ee8:	cmp	r2, r3
   14eec:	movlt	r3, #1
   14ef0:	movge	r3, #0
   14ef4:	uxtb	r3, r3
   14ef8:	b	14f2c <putchar_unlocked@plt+0x41e0>
   14efc:	ldr	r1, [fp, #4]
   14f00:	mvn	r0, #-2147483648	; 0x80000000
   14f04:	bl	167e4 <putchar_unlocked@plt+0x5a98>
   14f08:	mov	r3, r0
   14f0c:	mov	r2, r3
   14f10:	ldr	r3, [fp, #-16]
   14f14:	cmp	r2, r3
   14f18:	movlt	r3, #1
   14f1c:	movge	r3, #0
   14f20:	uxtb	r3, r3
   14f24:	b	14f2c <putchar_unlocked@plt+0x41e0>
   14f28:	mov	r3, #0
   14f2c:	cmp	r3, #0
   14f30:	beq	14f50 <putchar_unlocked@plt+0x4204>
   14f34:	ldr	r3, [fp, #-16]
   14f38:	mov	r2, r3
   14f3c:	ldr	r3, [fp, #4]
   14f40:	mul	r3, r3, r2
   14f44:	str	r3, [fp, #-20]	; 0xffffffec
   14f48:	mov	r3, #1
   14f4c:	b	14f68 <putchar_unlocked@plt+0x421c>
   14f50:	ldr	r3, [fp, #-16]
   14f54:	mov	r2, r3
   14f58:	ldr	r3, [fp, #4]
   14f5c:	mul	r3, r3, r2
   14f60:	str	r3, [fp, #-20]	; 0xffffffec
   14f64:	mov	r3, #0
   14f68:	cmp	r3, #0
   14f6c:	beq	14f78 <putchar_unlocked@plt+0x422c>
   14f70:	mvn	r3, #-2147483648	; 0x80000000
   14f74:	b	14f90 <putchar_unlocked@plt+0x4244>
   14f78:	ldr	r3, [fp, #-20]	; 0xffffffec
   14f7c:	cmp	r3, #63	; 0x3f
   14f80:	bgt	14f8c <putchar_unlocked@plt+0x4240>
   14f84:	mov	r3, #64	; 0x40
   14f88:	b	14f90 <putchar_unlocked@plt+0x4244>
   14f8c:	mov	r3, #0
   14f90:	str	r3, [fp, #-12]
   14f94:	ldr	r3, [fp, #-12]
   14f98:	cmp	r3, #0
   14f9c:	beq	14fd8 <putchar_unlocked@plt+0x428c>
   14fa0:	ldr	r1, [fp, #4]
   14fa4:	ldr	r0, [fp, #-12]
   14fa8:	bl	167e4 <putchar_unlocked@plt+0x5a98>
   14fac:	mov	r3, r0
   14fb0:	str	r3, [fp, #-16]
   14fb4:	ldr	r3, [fp, #-12]
   14fb8:	ldr	r1, [fp, #4]
   14fbc:	mov	r0, r3
   14fc0:	bl	16a04 <putchar_unlocked@plt+0x5cb8>
   14fc4:	mov	r3, r1
   14fc8:	mov	r2, r3
   14fcc:	ldr	r3, [fp, #-12]
   14fd0:	sub	r3, r3, r2
   14fd4:	str	r3, [fp, #-20]	; 0xffffffec
   14fd8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14fdc:	cmp	r3, #0
   14fe0:	bne	14ff0 <putchar_unlocked@plt+0x42a4>
   14fe4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   14fe8:	mov	r2, #0
   14fec:	str	r2, [r3]
   14ff0:	ldr	r2, [fp, #-16]
   14ff4:	ldr	r3, [fp, #-8]
   14ff8:	sub	r2, r2, r3
   14ffc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   15000:	cmp	r2, r3
   15004:	bge	1523c <putchar_unlocked@plt+0x44f0>
   15008:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1500c:	cmp	r3, #0
   15010:	bge	15034 <putchar_unlocked@plt+0x42e8>
   15014:	ldr	r3, [fp, #-32]	; 0xffffffe0
   15018:	rsb	r2, r3, #-2147483648	; 0x80000000
   1501c:	ldr	r3, [fp, #-8]
   15020:	cmp	r2, r3
   15024:	movgt	r3, #1
   15028:	movle	r3, #0
   1502c:	uxtb	r3, r3
   15030:	b	15080 <putchar_unlocked@plt+0x4334>
   15034:	ldr	r3, [fp, #-8]
   15038:	cmp	r3, #0
   1503c:	bge	15060 <putchar_unlocked@plt+0x4314>
   15040:	ldr	r3, [fp, #-8]
   15044:	rsb	r2, r3, #-2147483648	; 0x80000000
   15048:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1504c:	cmp	r2, r3
   15050:	movgt	r3, #1
   15054:	movle	r3, #0
   15058:	uxtb	r3, r3
   1505c:	b	15080 <putchar_unlocked@plt+0x4334>
   15060:	ldr	r2, [fp, #-32]	; 0xffffffe0
   15064:	mvn	r3, #-2147483648	; 0x80000000
   15068:	sub	r3, r3, r2
   1506c:	ldr	r2, [fp, #-8]
   15070:	cmp	r3, r2
   15074:	movlt	r3, #1
   15078:	movge	r3, #0
   1507c:	uxtb	r3, r3
   15080:	cmp	r3, #0
   15084:	beq	1509c <putchar_unlocked@plt+0x4350>
   15088:	ldr	r2, [fp, #-8]
   1508c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   15090:	add	r3, r2, r3
   15094:	str	r3, [fp, #-16]
   15098:	b	15238 <putchar_unlocked@plt+0x44ec>
   1509c:	ldr	r2, [fp, #-8]
   150a0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   150a4:	add	r3, r2, r3
   150a8:	str	r3, [fp, #-16]
   150ac:	ldr	r3, [fp, #-36]	; 0xffffffdc
   150b0:	cmp	r3, #0
   150b4:	blt	150c8 <putchar_unlocked@plt+0x437c>
   150b8:	ldr	r3, [fp, #-16]
   150bc:	ldr	r2, [fp, #-36]	; 0xffffffdc
   150c0:	cmp	r2, r3
   150c4:	blt	15238 <putchar_unlocked@plt+0x44ec>
   150c8:	ldr	r3, [fp, #4]
   150cc:	cmp	r3, #0
   150d0:	bge	15160 <putchar_unlocked@plt+0x4414>
   150d4:	ldr	r3, [fp, #-16]
   150d8:	cmp	r3, #0
   150dc:	bge	1510c <putchar_unlocked@plt+0x43c0>
   150e0:	ldr	r1, [fp, #4]
   150e4:	mvn	r0, #-2147483648	; 0x80000000
   150e8:	bl	167e4 <putchar_unlocked@plt+0x5a98>
   150ec:	mov	r3, r0
   150f0:	mov	r2, r3
   150f4:	ldr	r3, [fp, #-16]
   150f8:	cmp	r2, r3
   150fc:	movgt	r3, #1
   15100:	movle	r3, #0
   15104:	uxtb	r3, r3
   15108:	b	15200 <putchar_unlocked@plt+0x44b4>
   1510c:	ldr	r3, [fp, #4]
   15110:	cmn	r3, #1
   15114:	bne	15134 <putchar_unlocked@plt+0x43e8>
   15118:	ldr	r3, [fp, #-16]
   1511c:	add	r3, r3, #-2147483648	; 0x80000000
   15120:	cmp	r3, #0
   15124:	movgt	r3, #1
   15128:	movle	r3, #0
   1512c:	uxtb	r3, r3
   15130:	b	15200 <putchar_unlocked@plt+0x44b4>
   15134:	ldr	r1, [fp, #4]
   15138:	mov	r0, #-2147483648	; 0x80000000
   1513c:	bl	167e4 <putchar_unlocked@plt+0x5a98>
   15140:	mov	r3, r0
   15144:	mov	r2, r3
   15148:	ldr	r3, [fp, #-16]
   1514c:	cmp	r2, r3
   15150:	movlt	r3, #1
   15154:	movge	r3, #0
   15158:	uxtb	r3, r3
   1515c:	b	15200 <putchar_unlocked@plt+0x44b4>
   15160:	ldr	r3, [fp, #4]
   15164:	cmp	r3, #0
   15168:	beq	151fc <putchar_unlocked@plt+0x44b0>
   1516c:	ldr	r3, [fp, #-16]
   15170:	cmp	r3, #0
   15174:	bge	151d0 <putchar_unlocked@plt+0x4484>
   15178:	ldr	r3, [fp, #-16]
   1517c:	cmn	r3, #1
   15180:	bne	151a0 <putchar_unlocked@plt+0x4454>
   15184:	ldr	r3, [fp, #4]
   15188:	add	r3, r3, #-2147483648	; 0x80000000
   1518c:	cmp	r3, #0
   15190:	movgt	r3, #1
   15194:	movle	r3, #0
   15198:	uxtb	r3, r3
   1519c:	b	15200 <putchar_unlocked@plt+0x44b4>
   151a0:	ldr	r3, [fp, #-16]
   151a4:	mov	r1, r3
   151a8:	mov	r0, #-2147483648	; 0x80000000
   151ac:	bl	167e4 <putchar_unlocked@plt+0x5a98>
   151b0:	mov	r3, r0
   151b4:	mov	r2, r3
   151b8:	ldr	r3, [fp, #4]
   151bc:	cmp	r2, r3
   151c0:	movlt	r3, #1
   151c4:	movge	r3, #0
   151c8:	uxtb	r3, r3
   151cc:	b	15200 <putchar_unlocked@plt+0x44b4>
   151d0:	ldr	r1, [fp, #4]
   151d4:	mvn	r0, #-2147483648	; 0x80000000
   151d8:	bl	167e4 <putchar_unlocked@plt+0x5a98>
   151dc:	mov	r3, r0
   151e0:	mov	r2, r3
   151e4:	ldr	r3, [fp, #-16]
   151e8:	cmp	r2, r3
   151ec:	movlt	r3, #1
   151f0:	movge	r3, #0
   151f4:	uxtb	r3, r3
   151f8:	b	15200 <putchar_unlocked@plt+0x44b4>
   151fc:	mov	r3, #0
   15200:	cmp	r3, #0
   15204:	beq	15220 <putchar_unlocked@plt+0x44d4>
   15208:	ldr	r3, [fp, #-16]
   1520c:	mov	r2, r3
   15210:	ldr	r3, [fp, #4]
   15214:	mul	r3, r3, r2
   15218:	str	r3, [fp, #-20]	; 0xffffffec
   1521c:	b	15238 <putchar_unlocked@plt+0x44ec>
   15220:	ldr	r3, [fp, #-16]
   15224:	mov	r2, r3
   15228:	ldr	r3, [fp, #4]
   1522c:	mul	r3, r3, r2
   15230:	str	r3, [fp, #-20]	; 0xffffffec
   15234:	b	1523c <putchar_unlocked@plt+0x44f0>
   15238:	bl	15460 <putchar_unlocked@plt+0x4714>
   1523c:	ldr	r3, [fp, #-20]	; 0xffffffec
   15240:	mov	r1, r3
   15244:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15248:	bl	149d4 <putchar_unlocked@plt+0x3c88>
   1524c:	str	r0, [fp, #-24]	; 0xffffffe8
   15250:	ldr	r2, [fp, #-16]
   15254:	ldr	r3, [fp, #-28]	; 0xffffffe4
   15258:	str	r2, [r3]
   1525c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15260:	mov	r0, r3
   15264:	sub	sp, fp, #4
   15268:	pop	{fp, pc}
   1526c:	push	{fp, lr}
   15270:	add	fp, sp, #4
   15274:	sub	sp, sp, #8
   15278:	str	r0, [fp, #-8]
   1527c:	mov	r1, #1
   15280:	ldr	r0, [fp, #-8]
   15284:	bl	152c4 <putchar_unlocked@plt+0x4578>
   15288:	mov	r3, r0
   1528c:	mov	r0, r3
   15290:	sub	sp, fp, #4
   15294:	pop	{fp, pc}
   15298:	push	{fp, lr}
   1529c:	add	fp, sp, #4
   152a0:	sub	sp, sp, #8
   152a4:	str	r0, [fp, #-8]
   152a8:	mov	r1, #1
   152ac:	ldr	r0, [fp, #-8]
   152b0:	bl	15300 <putchar_unlocked@plt+0x45b4>
   152b4:	mov	r3, r0
   152b8:	mov	r0, r3
   152bc:	sub	sp, fp, #4
   152c0:	pop	{fp, pc}
   152c4:	push	{fp, lr}
   152c8:	add	fp, sp, #4
   152cc:	sub	sp, sp, #8
   152d0:	str	r0, [fp, #-8]
   152d4:	str	r1, [fp, #-12]
   152d8:	ldr	r1, [fp, #-12]
   152dc:	ldr	r0, [fp, #-8]
   152e0:	bl	1549c <putchar_unlocked@plt+0x4750>
   152e4:	mov	r3, r0
   152e8:	mov	r0, r3
   152ec:	bl	14914 <putchar_unlocked@plt+0x3bc8>
   152f0:	mov	r3, r0
   152f4:	mov	r0, r3
   152f8:	sub	sp, fp, #4
   152fc:	pop	{fp, pc}
   15300:	push	{fp, lr}
   15304:	add	fp, sp, #4
   15308:	sub	sp, sp, #8
   1530c:	str	r0, [fp, #-8]
   15310:	str	r1, [fp, #-12]
   15314:	ldr	r1, [fp, #-12]
   15318:	ldr	r0, [fp, #-8]
   1531c:	bl	15c8c <putchar_unlocked@plt+0x4f40>
   15320:	mov	r3, r0
   15324:	mov	r0, r3
   15328:	bl	14914 <putchar_unlocked@plt+0x3bc8>
   1532c:	mov	r3, r0
   15330:	mov	r0, r3
   15334:	sub	sp, fp, #4
   15338:	pop	{fp, pc}
   1533c:	push	{fp, lr}
   15340:	add	fp, sp, #4
   15344:	sub	sp, sp, #8
   15348:	str	r0, [fp, #-8]
   1534c:	str	r1, [fp, #-12]
   15350:	ldr	r0, [fp, #-12]
   15354:	bl	14944 <putchar_unlocked@plt+0x3bf8>
   15358:	mov	r3, r0
   1535c:	ldr	r2, [fp, #-12]
   15360:	ldr	r1, [fp, #-8]
   15364:	mov	r0, r3
   15368:	bl	10b9c <memcpy@plt>
   1536c:	mov	r3, r0
   15370:	mov	r0, r3
   15374:	sub	sp, fp, #4
   15378:	pop	{fp, pc}
   1537c:	push	{fp, lr}
   15380:	add	fp, sp, #4
   15384:	sub	sp, sp, #8
   15388:	str	r0, [fp, #-8]
   1538c:	str	r1, [fp, #-12]
   15390:	ldr	r0, [fp, #-12]
   15394:	bl	14978 <putchar_unlocked@plt+0x3c2c>
   15398:	mov	r3, r0
   1539c:	mov	r0, r3
   153a0:	ldr	r3, [fp, #-12]
   153a4:	mov	r2, r3
   153a8:	ldr	r1, [fp, #-8]
   153ac:	bl	10b9c <memcpy@plt>
   153b0:	mov	r3, r0
   153b4:	mov	r0, r3
   153b8:	sub	sp, fp, #4
   153bc:	pop	{fp, pc}
   153c0:	push	{fp, lr}
   153c4:	add	fp, sp, #4
   153c8:	sub	sp, sp, #16
   153cc:	str	r0, [fp, #-16]
   153d0:	str	r1, [fp, #-20]	; 0xffffffec
   153d4:	ldr	r3, [fp, #-20]	; 0xffffffec
   153d8:	add	r3, r3, #1
   153dc:	mov	r0, r3
   153e0:	bl	14978 <putchar_unlocked@plt+0x3c2c>
   153e4:	mov	r3, r0
   153e8:	str	r3, [fp, #-8]
   153ec:	ldr	r3, [fp, #-20]	; 0xffffffec
   153f0:	ldr	r2, [fp, #-8]
   153f4:	add	r3, r2, r3
   153f8:	mov	r2, #0
   153fc:	strb	r2, [r3]
   15400:	ldr	r3, [fp, #-20]	; 0xffffffec
   15404:	mov	r2, r3
   15408:	ldr	r1, [fp, #-16]
   1540c:	ldr	r0, [fp, #-8]
   15410:	bl	10b9c <memcpy@plt>
   15414:	mov	r3, r0
   15418:	mov	r0, r3
   1541c:	sub	sp, fp, #4
   15420:	pop	{fp, pc}
   15424:	push	{fp, lr}
   15428:	add	fp, sp, #4
   1542c:	sub	sp, sp, #8
   15430:	str	r0, [fp, #-8]
   15434:	ldr	r0, [fp, #-8]
   15438:	bl	10ca4 <strlen@plt>
   1543c:	mov	r3, r0
   15440:	add	r3, r3, #1
   15444:	mov	r1, r3
   15448:	ldr	r0, [fp, #-8]
   1544c:	bl	1533c <putchar_unlocked@plt+0x45f0>
   15450:	mov	r3, r0
   15454:	mov	r0, r3
   15458:	sub	sp, fp, #4
   1545c:	pop	{fp, pc}
   15460:	push	{r4, r5, fp, lr}
   15464:	add	fp, sp, #12
   15468:	ldr	r3, [pc, #32]	; 15490 <putchar_unlocked@plt+0x4744>
   1546c:	ldr	r4, [r3]
   15470:	ldr	r0, [pc, #28]	; 15494 <putchar_unlocked@plt+0x4748>
   15474:	bl	10c98 <gettext@plt>
   15478:	mov	r3, r0
   1547c:	ldr	r2, [pc, #20]	; 15498 <putchar_unlocked@plt+0x474c>
   15480:	mov	r1, #0
   15484:	mov	r0, r4
   15488:	bl	10c38 <error@plt>
   1548c:	bl	10d40 <abort@plt>
   15490:	ldrdeq	r8, [r2], -r0
   15494:	andeq	r7, r1, r0, lsl #10
   15498:	andeq	r7, r1, r4, lsl r5
   1549c:	push	{r4, r5, fp, lr}
   154a0:	add	fp, sp, #12
   154a4:	sub	sp, sp, #16
   154a8:	str	r0, [fp, #-24]	; 0xffffffe8
   154ac:	str	r1, [fp, #-28]	; 0xffffffe4
   154b0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   154b4:	cmp	r3, #0
   154b8:	beq	154c8 <putchar_unlocked@plt+0x477c>
   154bc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   154c0:	cmp	r3, #0
   154c4:	bne	154d8 <putchar_unlocked@plt+0x478c>
   154c8:	mov	r3, #1
   154cc:	str	r3, [fp, #-28]	; 0xffffffe4
   154d0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   154d4:	str	r3, [fp, #-24]	; 0xffffffe8
   154d8:	mov	r1, #0
   154dc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   154e0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   154e4:	umull	r2, r3, r2, r3
   154e8:	mov	r4, r3
   154ec:	mov	r5, #0
   154f0:	cmp	r4, #0
   154f4:	beq	154fc <putchar_unlocked@plt+0x47b0>
   154f8:	mov	r1, #1
   154fc:	cmp	r2, #0
   15500:	bge	15508 <putchar_unlocked@plt+0x47bc>
   15504:	mov	r1, #1
   15508:	mov	r3, r2
   1550c:	str	r3, [fp, #-20]	; 0xffffffec
   15510:	mov	r3, r1
   15514:	and	r3, r3, #1
   15518:	uxtb	r3, r3
   1551c:	cmp	r3, #0
   15520:	beq	1553c <putchar_unlocked@plt+0x47f0>
   15524:	bl	10cbc <__errno_location@plt>
   15528:	mov	r2, r0
   1552c:	mov	r3, #12
   15530:	str	r3, [r2]
   15534:	mov	r3, #0
   15538:	b	15554 <putchar_unlocked@plt+0x4808>
   1553c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15540:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15544:	bl	10b3c <calloc@plt>
   15548:	mov	r3, r0
   1554c:	str	r3, [fp, #-16]
   15550:	ldr	r3, [fp, #-16]
   15554:	mov	r0, r3
   15558:	sub	sp, fp, #12
   1555c:	pop	{r4, r5, fp, pc}
   15560:	push	{r4, r5, fp, lr}
   15564:	add	fp, sp, #12
   15568:	sub	sp, sp, #16
   1556c:	str	r0, [fp, #-24]	; 0xffffffe8
   15570:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15574:	cmp	r3, #0
   15578:	bne	15584 <putchar_unlocked@plt+0x4838>
   1557c:	mov	r3, #1
   15580:	str	r3, [fp, #-24]	; 0xffffffe8
   15584:	mov	r1, #0
   15588:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1558c:	mov	r2, r3
   15590:	mov	r3, #0
   15594:	mov	r4, r3
   15598:	mov	r5, #0
   1559c:	cmp	r4, #0
   155a0:	beq	155a8 <putchar_unlocked@plt+0x485c>
   155a4:	mov	r1, #1
   155a8:	cmp	r2, #0
   155ac:	bge	155b4 <putchar_unlocked@plt+0x4868>
   155b0:	mov	r1, #1
   155b4:	mov	r3, r2
   155b8:	str	r3, [fp, #-20]	; 0xffffffec
   155bc:	mov	r3, r1
   155c0:	and	r3, r3, #1
   155c4:	uxtb	r3, r3
   155c8:	cmp	r3, #0
   155cc:	beq	155e8 <putchar_unlocked@plt+0x489c>
   155d0:	bl	10cbc <__errno_location@plt>
   155d4:	mov	r2, r0
   155d8:	mov	r3, #12
   155dc:	str	r3, [r2]
   155e0:	mov	r3, #0
   155e4:	b	155fc <putchar_unlocked@plt+0x48b0>
   155e8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   155ec:	bl	10c44 <malloc@plt>
   155f0:	mov	r3, r0
   155f4:	str	r3, [fp, #-16]
   155f8:	ldr	r3, [fp, #-16]
   155fc:	mov	r0, r3
   15600:	sub	sp, fp, #12
   15604:	pop	{r4, r5, fp, pc}
   15608:	push	{r4, r5, fp, lr}
   1560c:	add	fp, sp, #12
   15610:	sub	sp, sp, #16
   15614:	str	r0, [fp, #-24]	; 0xffffffe8
   15618:	str	r1, [fp, #-28]	; 0xffffffe4
   1561c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15620:	cmp	r3, #0
   15624:	bne	15638 <putchar_unlocked@plt+0x48ec>
   15628:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1562c:	bl	15560 <putchar_unlocked@plt+0x4814>
   15630:	mov	r3, r0
   15634:	b	156cc <putchar_unlocked@plt+0x4980>
   15638:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1563c:	cmp	r3, #0
   15640:	bne	15654 <putchar_unlocked@plt+0x4908>
   15644:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15648:	bl	11970 <putchar_unlocked@plt+0xc24>
   1564c:	mov	r3, #0
   15650:	b	156cc <putchar_unlocked@plt+0x4980>
   15654:	mov	r1, #0
   15658:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1565c:	mov	r2, r3
   15660:	mov	r3, #0
   15664:	mov	r4, r3
   15668:	mov	r5, #0
   1566c:	cmp	r4, #0
   15670:	beq	15678 <putchar_unlocked@plt+0x492c>
   15674:	mov	r1, #1
   15678:	cmp	r2, #0
   1567c:	bge	15684 <putchar_unlocked@plt+0x4938>
   15680:	mov	r1, #1
   15684:	mov	r3, r2
   15688:	str	r3, [fp, #-20]	; 0xffffffec
   1568c:	mov	r3, r1
   15690:	and	r3, r3, #1
   15694:	uxtb	r3, r3
   15698:	cmp	r3, #0
   1569c:	beq	156b8 <putchar_unlocked@plt+0x496c>
   156a0:	bl	10cbc <__errno_location@plt>
   156a4:	mov	r2, r0
   156a8:	mov	r3, #12
   156ac:	str	r3, [r2]
   156b0:	mov	r3, #0
   156b4:	b	156cc <putchar_unlocked@plt+0x4980>
   156b8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   156bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   156c0:	bl	10bcc <realloc@plt>
   156c4:	str	r0, [fp, #-16]
   156c8:	ldr	r3, [fp, #-16]
   156cc:	mov	r0, r3
   156d0:	sub	sp, fp, #12
   156d4:	pop	{r4, r5, fp, pc}
   156d8:	push	{fp}		; (str fp, [sp, #-4]!)
   156dc:	add	fp, sp, #0
   156e0:	sub	sp, sp, #28
   156e4:	str	r0, [fp, #-24]	; 0xffffffe8
   156e8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   156ec:	str	r3, [fp, #-8]
   156f0:	mov	r3, #0
   156f4:	strb	r3, [fp, #-13]
   156f8:	b	15708 <putchar_unlocked@plt+0x49bc>
   156fc:	ldr	r3, [fp, #-8]
   15700:	add	r3, r3, #1
   15704:	str	r3, [fp, #-8]
   15708:	ldr	r3, [fp, #-8]
   1570c:	ldrb	r3, [r3]
   15710:	cmp	r3, #47	; 0x2f
   15714:	beq	156fc <putchar_unlocked@plt+0x49b0>
   15718:	ldr	r3, [fp, #-8]
   1571c:	str	r3, [fp, #-12]
   15720:	b	15768 <putchar_unlocked@plt+0x4a1c>
   15724:	ldr	r3, [fp, #-12]
   15728:	ldrb	r3, [r3]
   1572c:	cmp	r3, #47	; 0x2f
   15730:	bne	15740 <putchar_unlocked@plt+0x49f4>
   15734:	mov	r3, #1
   15738:	strb	r3, [fp, #-13]
   1573c:	b	1575c <putchar_unlocked@plt+0x4a10>
   15740:	ldrb	r3, [fp, #-13]
   15744:	cmp	r3, #0
   15748:	beq	1575c <putchar_unlocked@plt+0x4a10>
   1574c:	ldr	r3, [fp, #-12]
   15750:	str	r3, [fp, #-8]
   15754:	mov	r3, #0
   15758:	strb	r3, [fp, #-13]
   1575c:	ldr	r3, [fp, #-12]
   15760:	add	r3, r3, #1
   15764:	str	r3, [fp, #-12]
   15768:	ldr	r3, [fp, #-12]
   1576c:	ldrb	r3, [r3]
   15770:	cmp	r3, #0
   15774:	bne	15724 <putchar_unlocked@plt+0x49d8>
   15778:	ldr	r3, [fp, #-8]
   1577c:	mov	r0, r3
   15780:	add	sp, fp, #0
   15784:	pop	{fp}		; (ldr fp, [sp], #4)
   15788:	bx	lr
   1578c:	push	{fp, lr}
   15790:	add	fp, sp, #4
   15794:	sub	sp, sp, #16
   15798:	str	r0, [fp, #-16]
   1579c:	mov	r3, #0
   157a0:	str	r3, [fp, #-12]
   157a4:	ldr	r0, [fp, #-16]
   157a8:	bl	10ca4 <strlen@plt>
   157ac:	str	r0, [fp, #-8]
   157b0:	b	157c0 <putchar_unlocked@plt+0x4a74>
   157b4:	ldr	r3, [fp, #-8]
   157b8:	sub	r3, r3, #1
   157bc:	str	r3, [fp, #-8]
   157c0:	ldr	r3, [fp, #-8]
   157c4:	cmp	r3, #1
   157c8:	bls	157e8 <putchar_unlocked@plt+0x4a9c>
   157cc:	ldr	r3, [fp, #-8]
   157d0:	sub	r3, r3, #1
   157d4:	ldr	r2, [fp, #-16]
   157d8:	add	r3, r2, r3
   157dc:	ldrb	r3, [r3]
   157e0:	cmp	r3, #47	; 0x2f
   157e4:	beq	157b4 <putchar_unlocked@plt+0x4a68>
   157e8:	ldr	r3, [fp, #-8]
   157ec:	mov	r0, r3
   157f0:	sub	sp, fp, #4
   157f4:	pop	{fp, pc}
   157f8:	push	{r4, r5, fp, lr}
   157fc:	add	fp, sp, #12
   15800:	sub	sp, sp, #16
   15804:	str	r0, [fp, #-24]	; 0xffffffe8
   15808:	str	r1, [fp, #-28]	; 0xffffffe4
   1580c:	ldr	r5, [fp, #-24]	; 0xffffffe8
   15810:	ldr	r4, [fp, #-28]	; 0xffffffe4
   15814:	cmp	r5, r4
   15818:	bne	15824 <putchar_unlocked@plt+0x4ad8>
   1581c:	mov	r3, #0
   15820:	b	15884 <putchar_unlocked@plt+0x4b38>
   15824:	ldrb	r3, [r5]
   15828:	mov	r0, r3
   1582c:	bl	16354 <putchar_unlocked@plt+0x5608>
   15830:	mov	r3, r0
   15834:	strb	r3, [fp, #-13]
   15838:	ldrb	r3, [r4]
   1583c:	mov	r0, r3
   15840:	bl	16354 <putchar_unlocked@plt+0x5608>
   15844:	mov	r3, r0
   15848:	strb	r3, [fp, #-14]
   1584c:	ldrb	r3, [fp, #-13]
   15850:	cmp	r3, #0
   15854:	beq	15874 <putchar_unlocked@plt+0x4b28>
   15858:	add	r5, r5, #1
   1585c:	add	r4, r4, #1
   15860:	ldrb	r2, [fp, #-13]
   15864:	ldrb	r3, [fp, #-14]
   15868:	cmp	r2, r3
   1586c:	beq	15824 <putchar_unlocked@plt+0x4ad8>
   15870:	b	15878 <putchar_unlocked@plt+0x4b2c>
   15874:	nop			; (mov r0, r0)
   15878:	ldrb	r2, [fp, #-13]
   1587c:	ldrb	r3, [fp, #-14]
   15880:	sub	r3, r2, r3
   15884:	mov	r0, r3
   15888:	sub	sp, fp, #12
   1588c:	pop	{r4, r5, fp, pc}
   15890:	push	{fp, lr}
   15894:	add	fp, sp, #4
   15898:	sub	sp, sp, #16
   1589c:	str	r0, [fp, #-16]
   158a0:	ldr	r0, [fp, #-16]
   158a4:	bl	10c14 <__fpending@plt>
   158a8:	mov	r3, r0
   158ac:	cmp	r3, #0
   158b0:	movne	r3, #1
   158b4:	moveq	r3, #0
   158b8:	strb	r3, [fp, #-5]
   158bc:	ldr	r0, [fp, #-16]
   158c0:	bl	10c20 <ferror_unlocked@plt>
   158c4:	mov	r3, r0
   158c8:	cmp	r3, #0
   158cc:	movne	r3, #1
   158d0:	moveq	r3, #0
   158d4:	strb	r3, [fp, #-6]
   158d8:	ldr	r0, [fp, #-16]
   158dc:	bl	15968 <putchar_unlocked@plt+0x4c1c>
   158e0:	mov	r3, r0
   158e4:	cmp	r3, #0
   158e8:	movne	r3, #1
   158ec:	moveq	r3, #0
   158f0:	strb	r3, [fp, #-7]
   158f4:	ldrb	r3, [fp, #-6]
   158f8:	cmp	r3, #0
   158fc:	bne	1592c <putchar_unlocked@plt+0x4be0>
   15900:	ldrb	r3, [fp, #-7]
   15904:	cmp	r3, #0
   15908:	beq	15958 <putchar_unlocked@plt+0x4c0c>
   1590c:	ldrb	r3, [fp, #-5]
   15910:	cmp	r3, #0
   15914:	bne	1592c <putchar_unlocked@plt+0x4be0>
   15918:	bl	10cbc <__errno_location@plt>
   1591c:	mov	r3, r0
   15920:	ldr	r3, [r3]
   15924:	cmp	r3, #9
   15928:	beq	15958 <putchar_unlocked@plt+0x4c0c>
   1592c:	ldrb	r3, [fp, #-7]
   15930:	eor	r3, r3, #1
   15934:	uxtb	r3, r3
   15938:	cmp	r3, #0
   1593c:	beq	15950 <putchar_unlocked@plt+0x4c04>
   15940:	bl	10cbc <__errno_location@plt>
   15944:	mov	r2, r0
   15948:	mov	r3, #0
   1594c:	str	r3, [r2]
   15950:	mvn	r3, #0
   15954:	b	1595c <putchar_unlocked@plt+0x4c10>
   15958:	mov	r3, #0
   1595c:	mov	r0, r3
   15960:	sub	sp, fp, #4
   15964:	pop	{fp, pc}
   15968:	push	{fp, lr}
   1596c:	add	fp, sp, #4
   15970:	sub	sp, sp, #32
   15974:	str	r0, [fp, #-24]	; 0xffffffe8
   15978:	mov	r3, #0
   1597c:	str	r3, [fp, #-8]
   15980:	mov	r3, #0
   15984:	str	r3, [fp, #-12]
   15988:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1598c:	bl	10ce0 <fileno@plt>
   15990:	str	r0, [fp, #-16]
   15994:	ldr	r3, [fp, #-16]
   15998:	cmp	r3, #0
   1599c:	bge	159b0 <putchar_unlocked@plt+0x4c64>
   159a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   159a4:	bl	10cec <fclose@plt>
   159a8:	mov	r3, r0
   159ac:	b	15a54 <putchar_unlocked@plt+0x4d08>
   159b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   159b4:	bl	10c5c <__freading@plt>
   159b8:	mov	r3, r0
   159bc:	cmp	r3, #0
   159c0:	beq	159fc <putchar_unlocked@plt+0x4cb0>
   159c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   159c8:	bl	10ce0 <fileno@plt>
   159cc:	mov	r1, r0
   159d0:	mov	r3, #1
   159d4:	str	r3, [sp]
   159d8:	mov	r2, #0
   159dc:	mov	r3, #0
   159e0:	mov	r0, r1
   159e4:	bl	10bfc <lseek64@plt>
   159e8:	mvn	r2, #0
   159ec:	mvn	r3, #0
   159f0:	cmp	r1, r3
   159f4:	cmpeq	r0, r2
   159f8:	beq	15a20 <putchar_unlocked@plt+0x4cd4>
   159fc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15a00:	bl	15aa8 <putchar_unlocked@plt+0x4d5c>
   15a04:	mov	r3, r0
   15a08:	cmp	r3, #0
   15a0c:	beq	15a20 <putchar_unlocked@plt+0x4cd4>
   15a10:	bl	10cbc <__errno_location@plt>
   15a14:	mov	r3, r0
   15a18:	ldr	r3, [r3]
   15a1c:	str	r3, [fp, #-8]
   15a20:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15a24:	bl	10cec <fclose@plt>
   15a28:	str	r0, [fp, #-12]
   15a2c:	ldr	r3, [fp, #-8]
   15a30:	cmp	r3, #0
   15a34:	beq	15a50 <putchar_unlocked@plt+0x4d04>
   15a38:	bl	10cbc <__errno_location@plt>
   15a3c:	mov	r2, r0
   15a40:	ldr	r3, [fp, #-8]
   15a44:	str	r3, [r2]
   15a48:	mvn	r3, #0
   15a4c:	str	r3, [fp, #-12]
   15a50:	ldr	r3, [fp, #-12]
   15a54:	mov	r0, r3
   15a58:	sub	sp, fp, #4
   15a5c:	pop	{fp, pc}
   15a60:	push	{fp, lr}
   15a64:	add	fp, sp, #4
   15a68:	sub	sp, sp, #16
   15a6c:	str	r0, [fp, #-8]
   15a70:	ldr	r3, [fp, #-8]
   15a74:	ldr	r3, [r3]
   15a78:	and	r3, r3, #256	; 0x100
   15a7c:	cmp	r3, #0
   15a80:	beq	15a9c <putchar_unlocked@plt+0x4d50>
   15a84:	mov	r3, #1
   15a88:	str	r3, [sp]
   15a8c:	mov	r2, #0
   15a90:	mov	r3, #0
   15a94:	ldr	r0, [fp, #-8]
   15a98:	bl	15b08 <putchar_unlocked@plt+0x4dbc>
   15a9c:	nop			; (mov r0, r0)
   15aa0:	sub	sp, fp, #4
   15aa4:	pop	{fp, pc}
   15aa8:	push	{fp, lr}
   15aac:	add	fp, sp, #4
   15ab0:	sub	sp, sp, #8
   15ab4:	str	r0, [fp, #-8]
   15ab8:	ldr	r3, [fp, #-8]
   15abc:	cmp	r3, #0
   15ac0:	beq	15ad8 <putchar_unlocked@plt+0x4d8c>
   15ac4:	ldr	r0, [fp, #-8]
   15ac8:	bl	10c5c <__freading@plt>
   15acc:	mov	r3, r0
   15ad0:	cmp	r3, #0
   15ad4:	bne	15ae8 <putchar_unlocked@plt+0x4d9c>
   15ad8:	ldr	r0, [fp, #-8]
   15adc:	bl	10b78 <fflush@plt>
   15ae0:	mov	r3, r0
   15ae4:	b	15afc <putchar_unlocked@plt+0x4db0>
   15ae8:	ldr	r0, [fp, #-8]
   15aec:	bl	15a60 <putchar_unlocked@plt+0x4d14>
   15af0:	ldr	r0, [fp, #-8]
   15af4:	bl	10b78 <fflush@plt>
   15af8:	mov	r3, r0
   15afc:	mov	r0, r3
   15b00:	sub	sp, fp, #4
   15b04:	pop	{fp, pc}
   15b08:	push	{fp, lr}
   15b0c:	add	fp, sp, #4
   15b10:	sub	sp, sp, #32
   15b14:	str	r0, [fp, #-16]
   15b18:	strd	r2, [fp, #-28]	; 0xffffffe4
   15b1c:	ldr	r3, [fp, #-16]
   15b20:	ldr	r2, [r3, #8]
   15b24:	ldr	r3, [fp, #-16]
   15b28:	ldr	r3, [r3, #4]
   15b2c:	cmp	r2, r3
   15b30:	bne	15bc8 <putchar_unlocked@plt+0x4e7c>
   15b34:	ldr	r3, [fp, #-16]
   15b38:	ldr	r2, [r3, #20]
   15b3c:	ldr	r3, [fp, #-16]
   15b40:	ldr	r3, [r3, #16]
   15b44:	cmp	r2, r3
   15b48:	bne	15bc8 <putchar_unlocked@plt+0x4e7c>
   15b4c:	ldr	r3, [fp, #-16]
   15b50:	ldr	r3, [r3, #36]	; 0x24
   15b54:	cmp	r3, #0
   15b58:	bne	15bc8 <putchar_unlocked@plt+0x4e7c>
   15b5c:	ldr	r0, [fp, #-16]
   15b60:	bl	10ce0 <fileno@plt>
   15b64:	mov	r1, r0
   15b68:	ldr	r3, [fp, #4]
   15b6c:	str	r3, [sp]
   15b70:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   15b74:	mov	r0, r1
   15b78:	bl	10bfc <lseek64@plt>
   15b7c:	strd	r0, [fp, #-12]
   15b80:	ldrd	r2, [fp, #-12]
   15b84:	mvn	r0, #0
   15b88:	mvn	r1, #0
   15b8c:	cmp	r3, r1
   15b90:	cmpeq	r2, r0
   15b94:	bne	15ba0 <putchar_unlocked@plt+0x4e54>
   15b98:	mvn	r3, #0
   15b9c:	b	15be0 <putchar_unlocked@plt+0x4e94>
   15ba0:	ldr	r3, [fp, #-16]
   15ba4:	ldr	r3, [r3]
   15ba8:	bic	r2, r3, #16
   15bac:	ldr	r3, [fp, #-16]
   15bb0:	str	r2, [r3]
   15bb4:	ldr	r1, [fp, #-16]
   15bb8:	ldrd	r2, [fp, #-12]
   15bbc:	strd	r2, [r1, #80]	; 0x50
   15bc0:	mov	r3, #0
   15bc4:	b	15be0 <putchar_unlocked@plt+0x4e94>
   15bc8:	ldr	r3, [fp, #4]
   15bcc:	str	r3, [sp]
   15bd0:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   15bd4:	ldr	r0, [fp, #-16]
   15bd8:	bl	10cf8 <fseeko64@plt>
   15bdc:	mov	r3, r0
   15be0:	mov	r0, r3
   15be4:	sub	sp, fp, #4
   15be8:	pop	{fp, pc}
   15bec:	push	{fp, lr}
   15bf0:	add	fp, sp, #4
   15bf4:	bl	10cbc <__errno_location@plt>
   15bf8:	mov	r2, r0
   15bfc:	mov	r3, #12
   15c00:	str	r3, [r2]
   15c04:	mov	r3, #0
   15c08:	mov	r0, r3
   15c0c:	pop	{fp, pc}
   15c10:	push	{fp, lr}
   15c14:	add	fp, sp, #4
   15c18:	sub	sp, sp, #8
   15c1c:	str	r0, [fp, #-8]
   15c20:	ldr	r3, [fp, #-8]
   15c24:	mov	r0, r3
   15c28:	bl	15560 <putchar_unlocked@plt+0x4814>
   15c2c:	mov	r3, r0
   15c30:	mov	r0, r3
   15c34:	sub	sp, fp, #4
   15c38:	pop	{fp, pc}
   15c3c:	push	{fp, lr}
   15c40:	add	fp, sp, #4
   15c44:	sub	sp, sp, #8
   15c48:	str	r0, [fp, #-8]
   15c4c:	str	r1, [fp, #-12]
   15c50:	ldr	r3, [fp, #-12]
   15c54:	cmp	r3, #0
   15c58:	moveq	r3, #1
   15c5c:	movne	r3, #0
   15c60:	uxtb	r3, r3
   15c64:	mov	r2, r3
   15c68:	ldr	r3, [fp, #-12]
   15c6c:	orr	r3, r2, r3
   15c70:	mov	r1, r3
   15c74:	ldr	r0, [fp, #-8]
   15c78:	bl	15608 <putchar_unlocked@plt+0x48bc>
   15c7c:	mov	r3, r0
   15c80:	mov	r0, r3
   15c84:	sub	sp, fp, #4
   15c88:	pop	{fp, pc}
   15c8c:	push	{fp, lr}
   15c90:	add	fp, sp, #4
   15c94:	sub	sp, sp, #8
   15c98:	str	r0, [fp, #-8]
   15c9c:	str	r1, [fp, #-12]
   15ca0:	ldr	r3, [fp, #-8]
   15ca4:	ldr	r2, [fp, #-12]
   15ca8:	mov	r1, r2
   15cac:	mov	r0, r3
   15cb0:	bl	1549c <putchar_unlocked@plt+0x4750>
   15cb4:	mov	r3, r0
   15cb8:	mov	r0, r3
   15cbc:	sub	sp, fp, #4
   15cc0:	pop	{fp, pc}
   15cc4:	push	{fp, lr}
   15cc8:	add	fp, sp, #4
   15ccc:	sub	sp, sp, #16
   15cd0:	str	r0, [fp, #-8]
   15cd4:	str	r1, [fp, #-12]
   15cd8:	str	r2, [fp, #-16]
   15cdc:	ldr	r3, [fp, #-12]
   15ce0:	cmp	r3, #0
   15ce4:	beq	15cf4 <putchar_unlocked@plt+0x4fa8>
   15ce8:	ldr	r3, [fp, #-16]
   15cec:	cmp	r3, #0
   15cf0:	bne	15d04 <putchar_unlocked@plt+0x4fb8>
   15cf4:	mov	r3, #1
   15cf8:	str	r3, [fp, #-16]
   15cfc:	ldr	r3, [fp, #-16]
   15d00:	str	r3, [fp, #-12]
   15d04:	ldr	r3, [fp, #-12]
   15d08:	ldr	r2, [fp, #-16]
   15d0c:	mov	r1, r3
   15d10:	ldr	r0, [fp, #-8]
   15d14:	bl	15e30 <putchar_unlocked@plt+0x50e4>
   15d18:	mov	r3, r0
   15d1c:	mov	r0, r3
   15d20:	sub	sp, fp, #4
   15d24:	pop	{fp, pc}
   15d28:	push	{fp, lr}
   15d2c:	add	fp, sp, #4
   15d30:	sub	sp, sp, #8
   15d34:	mov	r0, #14
   15d38:	bl	10d1c <nl_langinfo@plt>
   15d3c:	str	r0, [fp, #-8]
   15d40:	ldr	r3, [fp, #-8]
   15d44:	cmp	r3, #0
   15d48:	bne	15d54 <putchar_unlocked@plt+0x5008>
   15d4c:	ldr	r3, [pc, #40]	; 15d7c <putchar_unlocked@plt+0x5030>
   15d50:	str	r3, [fp, #-8]
   15d54:	ldr	r3, [fp, #-8]
   15d58:	ldrb	r3, [r3]
   15d5c:	cmp	r3, #0
   15d60:	bne	15d6c <putchar_unlocked@plt+0x5020>
   15d64:	ldr	r3, [pc, #20]	; 15d80 <putchar_unlocked@plt+0x5034>
   15d68:	str	r3, [fp, #-8]
   15d6c:	ldr	r3, [fp, #-8]
   15d70:	mov	r0, r3
   15d74:	sub	sp, fp, #4
   15d78:	pop	{fp, pc}
   15d7c:	andeq	r7, r1, r8, lsl r5
   15d80:	andeq	r7, r1, ip, lsl r5
   15d84:	push	{fp, lr}
   15d88:	add	fp, sp, #4
   15d8c:	sub	sp, sp, #32
   15d90:	str	r0, [fp, #-24]	; 0xffffffe8
   15d94:	str	r1, [fp, #-28]	; 0xffffffe4
   15d98:	str	r2, [fp, #-32]	; 0xffffffe0
   15d9c:	str	r3, [fp, #-36]	; 0xffffffdc
   15da0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15da4:	cmp	r3, #0
   15da8:	bne	15db4 <putchar_unlocked@plt+0x5068>
   15dac:	sub	r3, fp, #16
   15db0:	str	r3, [fp, #-24]	; 0xffffffe8
   15db4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   15db8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   15dbc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15dc0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15dc4:	bl	10c2c <mbrtowc@plt>
   15dc8:	str	r0, [fp, #-8]
   15dcc:	ldr	r3, [fp, #-8]
   15dd0:	cmn	r3, #3
   15dd4:	bls	15e20 <putchar_unlocked@plt+0x50d4>
   15dd8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   15ddc:	cmp	r3, #0
   15de0:	beq	15e20 <putchar_unlocked@plt+0x50d4>
   15de4:	mov	r0, #0
   15de8:	bl	163d4 <putchar_unlocked@plt+0x5688>
   15dec:	mov	r3, r0
   15df0:	eor	r3, r3, #1
   15df4:	uxtb	r3, r3
   15df8:	cmp	r3, #0
   15dfc:	beq	15e20 <putchar_unlocked@plt+0x50d4>
   15e00:	ldr	r3, [fp, #-28]	; 0xffffffe4
   15e04:	ldrb	r3, [r3]
   15e08:	strb	r3, [fp, #-9]
   15e0c:	ldrb	r2, [fp, #-9]
   15e10:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15e14:	str	r2, [r3]
   15e18:	mov	r3, #1
   15e1c:	b	15e24 <putchar_unlocked@plt+0x50d8>
   15e20:	ldr	r3, [fp, #-8]
   15e24:	mov	r0, r3
   15e28:	sub	sp, fp, #4
   15e2c:	pop	{fp, pc}
   15e30:	push	{fp, lr}
   15e34:	add	fp, sp, #4
   15e38:	sub	sp, sp, #24
   15e3c:	str	r0, [fp, #-16]
   15e40:	str	r1, [fp, #-20]	; 0xffffffec
   15e44:	str	r2, [fp, #-24]	; 0xffffffe8
   15e48:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15e4c:	cmp	r3, #0
   15e50:	beq	15e8c <putchar_unlocked@plt+0x5140>
   15e54:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15e58:	mvn	r0, #0
   15e5c:	bl	165d8 <putchar_unlocked@plt+0x588c>
   15e60:	mov	r3, r0
   15e64:	mov	r2, r3
   15e68:	ldr	r3, [fp, #-20]	; 0xffffffec
   15e6c:	cmp	r2, r3
   15e70:	bcs	15e8c <putchar_unlocked@plt+0x5140>
   15e74:	ldr	r3, [fp, #-20]	; 0xffffffec
   15e78:	ldr	r2, [fp, #-24]	; 0xffffffe8
   15e7c:	mul	r3, r2, r3
   15e80:	str	r3, [fp, #-8]
   15e84:	mov	r3, #1
   15e88:	b	15ea0 <putchar_unlocked@plt+0x5154>
   15e8c:	ldr	r3, [fp, #-20]	; 0xffffffec
   15e90:	ldr	r2, [fp, #-24]	; 0xffffffe8
   15e94:	mul	r3, r2, r3
   15e98:	str	r3, [fp, #-8]
   15e9c:	mov	r3, #0
   15ea0:	cmp	r3, #0
   15ea4:	beq	15ec0 <putchar_unlocked@plt+0x5174>
   15ea8:	bl	10cbc <__errno_location@plt>
   15eac:	mov	r2, r0
   15eb0:	mov	r3, #12
   15eb4:	str	r3, [r2]
   15eb8:	mov	r3, #0
   15ebc:	b	15ed4 <putchar_unlocked@plt+0x5188>
   15ec0:	ldr	r3, [fp, #-8]
   15ec4:	mov	r1, r3
   15ec8:	ldr	r0, [fp, #-16]
   15ecc:	bl	15608 <putchar_unlocked@plt+0x48bc>
   15ed0:	mov	r3, r0
   15ed4:	mov	r0, r3
   15ed8:	sub	sp, fp, #4
   15edc:	pop	{fp, pc}
   15ee0:	push	{fp}		; (str fp, [sp, #-4]!)
   15ee4:	add	fp, sp, #0
   15ee8:	sub	sp, sp, #12
   15eec:	str	r0, [fp, #-8]
   15ef0:	ldr	r3, [fp, #-8]
   15ef4:	cmp	r3, #90	; 0x5a
   15ef8:	bgt	15f14 <putchar_unlocked@plt+0x51c8>
   15efc:	cmp	r3, #65	; 0x41
   15f00:	bge	15f20 <putchar_unlocked@plt+0x51d4>
   15f04:	sub	r3, r3, #48	; 0x30
   15f08:	cmp	r3, #9
   15f0c:	bhi	15f28 <putchar_unlocked@plt+0x51dc>
   15f10:	b	15f20 <putchar_unlocked@plt+0x51d4>
   15f14:	sub	r3, r3, #97	; 0x61
   15f18:	cmp	r3, #25
   15f1c:	bhi	15f28 <putchar_unlocked@plt+0x51dc>
   15f20:	mov	r3, #1
   15f24:	b	15f2c <putchar_unlocked@plt+0x51e0>
   15f28:	mov	r3, #0
   15f2c:	mov	r0, r3
   15f30:	add	sp, fp, #0
   15f34:	pop	{fp}		; (ldr fp, [sp], #4)
   15f38:	bx	lr
   15f3c:	push	{fp}		; (str fp, [sp, #-4]!)
   15f40:	add	fp, sp, #0
   15f44:	sub	sp, sp, #12
   15f48:	str	r0, [fp, #-8]
   15f4c:	ldr	r3, [fp, #-8]
   15f50:	cmp	r3, #65	; 0x41
   15f54:	blt	15f74 <putchar_unlocked@plt+0x5228>
   15f58:	cmp	r3, #90	; 0x5a
   15f5c:	ble	15f6c <putchar_unlocked@plt+0x5220>
   15f60:	sub	r3, r3, #97	; 0x61
   15f64:	cmp	r3, #25
   15f68:	bhi	15f74 <putchar_unlocked@plt+0x5228>
   15f6c:	mov	r3, #1
   15f70:	b	15f78 <putchar_unlocked@plt+0x522c>
   15f74:	mov	r3, #0
   15f78:	mov	r0, r3
   15f7c:	add	sp, fp, #0
   15f80:	pop	{fp}		; (ldr fp, [sp], #4)
   15f84:	bx	lr
   15f88:	push	{fp}		; (str fp, [sp, #-4]!)
   15f8c:	add	fp, sp, #0
   15f90:	sub	sp, sp, #12
   15f94:	str	r0, [fp, #-8]
   15f98:	ldr	r3, [fp, #-8]
   15f9c:	add	r3, r3, #0
   15fa0:	cmp	r3, #127	; 0x7f
   15fa4:	bhi	15fb0 <putchar_unlocked@plt+0x5264>
   15fa8:	mov	r3, #1
   15fac:	b	15fb4 <putchar_unlocked@plt+0x5268>
   15fb0:	mov	r3, #0
   15fb4:	mov	r0, r3
   15fb8:	add	sp, fp, #0
   15fbc:	pop	{fp}		; (ldr fp, [sp], #4)
   15fc0:	bx	lr
   15fc4:	push	{fp}		; (str fp, [sp, #-4]!)
   15fc8:	add	fp, sp, #0
   15fcc:	sub	sp, sp, #12
   15fd0:	str	r0, [fp, #-8]
   15fd4:	ldr	r3, [fp, #-8]
   15fd8:	cmp	r3, #32
   15fdc:	beq	15fec <putchar_unlocked@plt+0x52a0>
   15fe0:	ldr	r3, [fp, #-8]
   15fe4:	cmp	r3, #9
   15fe8:	bne	15ff4 <putchar_unlocked@plt+0x52a8>
   15fec:	mov	r3, #1
   15ff0:	b	15ff8 <putchar_unlocked@plt+0x52ac>
   15ff4:	mov	r3, #0
   15ff8:	and	r3, r3, #1
   15ffc:	uxtb	r3, r3
   16000:	mov	r0, r3
   16004:	add	sp, fp, #0
   16008:	pop	{fp}		; (ldr fp, [sp], #4)
   1600c:	bx	lr
   16010:	push	{fp}		; (str fp, [sp, #-4]!)
   16014:	add	fp, sp, #0
   16018:	sub	sp, sp, #12
   1601c:	str	r0, [fp, #-8]
   16020:	ldr	r3, [fp, #-8]
   16024:	cmp	r3, #0
   16028:	blt	16044 <putchar_unlocked@plt+0x52f8>
   1602c:	cmp	r3, #31
   16030:	ble	1603c <putchar_unlocked@plt+0x52f0>
   16034:	cmp	r3, #127	; 0x7f
   16038:	bne	16044 <putchar_unlocked@plt+0x52f8>
   1603c:	mov	r3, #1
   16040:	b	16048 <putchar_unlocked@plt+0x52fc>
   16044:	mov	r3, #0
   16048:	mov	r0, r3
   1604c:	add	sp, fp, #0
   16050:	pop	{fp}		; (ldr fp, [sp], #4)
   16054:	bx	lr
   16058:	push	{fp}		; (str fp, [sp, #-4]!)
   1605c:	add	fp, sp, #0
   16060:	sub	sp, sp, #12
   16064:	str	r0, [fp, #-8]
   16068:	ldr	r3, [fp, #-8]
   1606c:	sub	r3, r3, #48	; 0x30
   16070:	cmp	r3, #9
   16074:	bhi	16080 <putchar_unlocked@plt+0x5334>
   16078:	mov	r3, #1
   1607c:	b	16084 <putchar_unlocked@plt+0x5338>
   16080:	mov	r3, #0
   16084:	mov	r0, r3
   16088:	add	sp, fp, #0
   1608c:	pop	{fp}		; (ldr fp, [sp], #4)
   16090:	bx	lr
   16094:	push	{fp}		; (str fp, [sp, #-4]!)
   16098:	add	fp, sp, #0
   1609c:	sub	sp, sp, #12
   160a0:	str	r0, [fp, #-8]
   160a4:	ldr	r3, [fp, #-8]
   160a8:	sub	r3, r3, #33	; 0x21
   160ac:	cmp	r3, #93	; 0x5d
   160b0:	bhi	160bc <putchar_unlocked@plt+0x5370>
   160b4:	mov	r3, #1
   160b8:	b	160c0 <putchar_unlocked@plt+0x5374>
   160bc:	mov	r3, #0
   160c0:	mov	r0, r3
   160c4:	add	sp, fp, #0
   160c8:	pop	{fp}		; (ldr fp, [sp], #4)
   160cc:	bx	lr
   160d0:	push	{fp}		; (str fp, [sp, #-4]!)
   160d4:	add	fp, sp, #0
   160d8:	sub	sp, sp, #12
   160dc:	str	r0, [fp, #-8]
   160e0:	ldr	r3, [fp, #-8]
   160e4:	sub	r3, r3, #97	; 0x61
   160e8:	cmp	r3, #25
   160ec:	bhi	160f8 <putchar_unlocked@plt+0x53ac>
   160f0:	mov	r3, #1
   160f4:	b	160fc <putchar_unlocked@plt+0x53b0>
   160f8:	mov	r3, #0
   160fc:	mov	r0, r3
   16100:	add	sp, fp, #0
   16104:	pop	{fp}		; (ldr fp, [sp], #4)
   16108:	bx	lr
   1610c:	push	{fp}		; (str fp, [sp, #-4]!)
   16110:	add	fp, sp, #0
   16114:	sub	sp, sp, #12
   16118:	str	r0, [fp, #-8]
   1611c:	ldr	r3, [fp, #-8]
   16120:	sub	r3, r3, #32
   16124:	cmp	r3, #94	; 0x5e
   16128:	bhi	16134 <putchar_unlocked@plt+0x53e8>
   1612c:	mov	r3, #1
   16130:	b	16138 <putchar_unlocked@plt+0x53ec>
   16134:	mov	r3, #0
   16138:	mov	r0, r3
   1613c:	add	sp, fp, #0
   16140:	pop	{fp}		; (ldr fp, [sp], #4)
   16144:	bx	lr
   16148:	push	{fp}		; (str fp, [sp, #-4]!)
   1614c:	add	fp, sp, #0
   16150:	sub	sp, sp, #12
   16154:	str	r0, [fp, #-8]
   16158:	ldr	r3, [fp, #-8]
   1615c:	cmp	r3, #64	; 0x40
   16160:	bgt	1617c <putchar_unlocked@plt+0x5430>
   16164:	cmp	r3, #58	; 0x3a
   16168:	bge	16198 <putchar_unlocked@plt+0x544c>
   1616c:	sub	r3, r3, #33	; 0x21
   16170:	cmp	r3, #14
   16174:	bhi	161a0 <putchar_unlocked@plt+0x5454>
   16178:	b	16198 <putchar_unlocked@plt+0x544c>
   1617c:	cmp	r3, #91	; 0x5b
   16180:	blt	161a0 <putchar_unlocked@plt+0x5454>
   16184:	cmp	r3, #96	; 0x60
   16188:	ble	16198 <putchar_unlocked@plt+0x544c>
   1618c:	sub	r3, r3, #123	; 0x7b
   16190:	cmp	r3, #3
   16194:	bhi	161a0 <putchar_unlocked@plt+0x5454>
   16198:	mov	r3, #1
   1619c:	b	161a4 <putchar_unlocked@plt+0x5458>
   161a0:	mov	r3, #0
   161a4:	mov	r0, r3
   161a8:	add	sp, fp, #0
   161ac:	pop	{fp}		; (ldr fp, [sp], #4)
   161b0:	bx	lr
   161b4:	push	{fp}		; (str fp, [sp, #-4]!)
   161b8:	add	fp, sp, #0
   161bc:	sub	sp, sp, #12
   161c0:	str	r0, [fp, #-8]
   161c4:	ldr	r3, [fp, #-8]
   161c8:	cmp	r3, #9
   161cc:	blt	161e8 <putchar_unlocked@plt+0x549c>
   161d0:	cmp	r3, #13
   161d4:	ble	161e0 <putchar_unlocked@plt+0x5494>
   161d8:	cmp	r3, #32
   161dc:	bne	161e8 <putchar_unlocked@plt+0x549c>
   161e0:	mov	r3, #1
   161e4:	b	161ec <putchar_unlocked@plt+0x54a0>
   161e8:	mov	r3, #0
   161ec:	mov	r0, r3
   161f0:	add	sp, fp, #0
   161f4:	pop	{fp}		; (ldr fp, [sp], #4)
   161f8:	bx	lr
   161fc:	push	{fp}		; (str fp, [sp, #-4]!)
   16200:	add	fp, sp, #0
   16204:	sub	sp, sp, #12
   16208:	str	r0, [fp, #-8]
   1620c:	ldr	r3, [fp, #-8]
   16210:	sub	r3, r3, #65	; 0x41
   16214:	cmp	r3, #25
   16218:	bhi	16224 <putchar_unlocked@plt+0x54d8>
   1621c:	mov	r3, #1
   16220:	b	16228 <putchar_unlocked@plt+0x54dc>
   16224:	mov	r3, #0
   16228:	mov	r0, r3
   1622c:	add	sp, fp, #0
   16230:	pop	{fp}		; (ldr fp, [sp], #4)
   16234:	bx	lr
   16238:	push	{fp}		; (str fp, [sp, #-4]!)
   1623c:	add	fp, sp, #0
   16240:	sub	sp, sp, #12
   16244:	str	r0, [fp, #-8]
   16248:	ldr	r3, [fp, #-8]
   1624c:	sub	r3, r3, #48	; 0x30
   16250:	cmp	r3, #54	; 0x36
   16254:	addls	pc, pc, r3, lsl #2
   16258:	b	16340 <putchar_unlocked@plt+0x55f4>
   1625c:	b	16338 <putchar_unlocked@plt+0x55ec>
   16260:	b	16338 <putchar_unlocked@plt+0x55ec>
   16264:	b	16338 <putchar_unlocked@plt+0x55ec>
   16268:	b	16338 <putchar_unlocked@plt+0x55ec>
   1626c:	b	16338 <putchar_unlocked@plt+0x55ec>
   16270:	b	16338 <putchar_unlocked@plt+0x55ec>
   16274:	b	16338 <putchar_unlocked@plt+0x55ec>
   16278:	b	16338 <putchar_unlocked@plt+0x55ec>
   1627c:	b	16338 <putchar_unlocked@plt+0x55ec>
   16280:	b	16338 <putchar_unlocked@plt+0x55ec>
   16284:	b	16340 <putchar_unlocked@plt+0x55f4>
   16288:	b	16340 <putchar_unlocked@plt+0x55f4>
   1628c:	b	16340 <putchar_unlocked@plt+0x55f4>
   16290:	b	16340 <putchar_unlocked@plt+0x55f4>
   16294:	b	16340 <putchar_unlocked@plt+0x55f4>
   16298:	b	16340 <putchar_unlocked@plt+0x55f4>
   1629c:	b	16340 <putchar_unlocked@plt+0x55f4>
   162a0:	b	16338 <putchar_unlocked@plt+0x55ec>
   162a4:	b	16338 <putchar_unlocked@plt+0x55ec>
   162a8:	b	16338 <putchar_unlocked@plt+0x55ec>
   162ac:	b	16338 <putchar_unlocked@plt+0x55ec>
   162b0:	b	16338 <putchar_unlocked@plt+0x55ec>
   162b4:	b	16338 <putchar_unlocked@plt+0x55ec>
   162b8:	b	16340 <putchar_unlocked@plt+0x55f4>
   162bc:	b	16340 <putchar_unlocked@plt+0x55f4>
   162c0:	b	16340 <putchar_unlocked@plt+0x55f4>
   162c4:	b	16340 <putchar_unlocked@plt+0x55f4>
   162c8:	b	16340 <putchar_unlocked@plt+0x55f4>
   162cc:	b	16340 <putchar_unlocked@plt+0x55f4>
   162d0:	b	16340 <putchar_unlocked@plt+0x55f4>
   162d4:	b	16340 <putchar_unlocked@plt+0x55f4>
   162d8:	b	16340 <putchar_unlocked@plt+0x55f4>
   162dc:	b	16340 <putchar_unlocked@plt+0x55f4>
   162e0:	b	16340 <putchar_unlocked@plt+0x55f4>
   162e4:	b	16340 <putchar_unlocked@plt+0x55f4>
   162e8:	b	16340 <putchar_unlocked@plt+0x55f4>
   162ec:	b	16340 <putchar_unlocked@plt+0x55f4>
   162f0:	b	16340 <putchar_unlocked@plt+0x55f4>
   162f4:	b	16340 <putchar_unlocked@plt+0x55f4>
   162f8:	b	16340 <putchar_unlocked@plt+0x55f4>
   162fc:	b	16340 <putchar_unlocked@plt+0x55f4>
   16300:	b	16340 <putchar_unlocked@plt+0x55f4>
   16304:	b	16340 <putchar_unlocked@plt+0x55f4>
   16308:	b	16340 <putchar_unlocked@plt+0x55f4>
   1630c:	b	16340 <putchar_unlocked@plt+0x55f4>
   16310:	b	16340 <putchar_unlocked@plt+0x55f4>
   16314:	b	16340 <putchar_unlocked@plt+0x55f4>
   16318:	b	16340 <putchar_unlocked@plt+0x55f4>
   1631c:	b	16340 <putchar_unlocked@plt+0x55f4>
   16320:	b	16338 <putchar_unlocked@plt+0x55ec>
   16324:	b	16338 <putchar_unlocked@plt+0x55ec>
   16328:	b	16338 <putchar_unlocked@plt+0x55ec>
   1632c:	b	16338 <putchar_unlocked@plt+0x55ec>
   16330:	b	16338 <putchar_unlocked@plt+0x55ec>
   16334:	b	16338 <putchar_unlocked@plt+0x55ec>
   16338:	mov	r3, #1
   1633c:	b	16344 <putchar_unlocked@plt+0x55f8>
   16340:	mov	r3, #0
   16344:	mov	r0, r3
   16348:	add	sp, fp, #0
   1634c:	pop	{fp}		; (ldr fp, [sp], #4)
   16350:	bx	lr
   16354:	push	{fp}		; (str fp, [sp, #-4]!)
   16358:	add	fp, sp, #0
   1635c:	sub	sp, sp, #12
   16360:	str	r0, [fp, #-8]
   16364:	ldr	r3, [fp, #-8]
   16368:	sub	r3, r3, #65	; 0x41
   1636c:	cmp	r3, #25
   16370:	bhi	16380 <putchar_unlocked@plt+0x5634>
   16374:	ldr	r3, [fp, #-8]
   16378:	add	r3, r3, #32
   1637c:	b	16384 <putchar_unlocked@plt+0x5638>
   16380:	ldr	r3, [fp, #-8]
   16384:	mov	r0, r3
   16388:	add	sp, fp, #0
   1638c:	pop	{fp}		; (ldr fp, [sp], #4)
   16390:	bx	lr
   16394:	push	{fp}		; (str fp, [sp, #-4]!)
   16398:	add	fp, sp, #0
   1639c:	sub	sp, sp, #12
   163a0:	str	r0, [fp, #-8]
   163a4:	ldr	r3, [fp, #-8]
   163a8:	sub	r3, r3, #97	; 0x61
   163ac:	cmp	r3, #25
   163b0:	bhi	163c0 <putchar_unlocked@plt+0x5674>
   163b4:	ldr	r3, [fp, #-8]
   163b8:	sub	r3, r3, #32
   163bc:	b	163c4 <putchar_unlocked@plt+0x5678>
   163c0:	ldr	r3, [fp, #-8]
   163c4:	mov	r0, r3
   163c8:	add	sp, fp, #0
   163cc:	pop	{fp}		; (ldr fp, [sp], #4)
   163d0:	bx	lr
   163d4:	push	{fp, lr}
   163d8:	add	fp, sp, #4
   163dc:	sub	sp, sp, #272	; 0x110
   163e0:	str	r0, [fp, #-272]	; 0xfffffef0
   163e4:	sub	r3, fp, #264	; 0x108
   163e8:	ldr	r2, [pc, #116]	; 16464 <putchar_unlocked@plt+0x5718>
   163ec:	mov	r1, r3
   163f0:	ldr	r0, [fp, #-272]	; 0xfffffef0
   163f4:	bl	16578 <putchar_unlocked@plt+0x582c>
   163f8:	mov	r3, r0
   163fc:	cmp	r3, #0
   16400:	beq	1640c <putchar_unlocked@plt+0x56c0>
   16404:	mov	r3, #0
   16408:	b	16458 <putchar_unlocked@plt+0x570c>
   1640c:	sub	r3, fp, #264	; 0x108
   16410:	ldr	r1, [pc, #80]	; 16468 <putchar_unlocked@plt+0x571c>
   16414:	mov	r0, r3
   16418:	bl	10b60 <strcmp@plt>
   1641c:	mov	r3, r0
   16420:	cmp	r3, #0
   16424:	beq	1644c <putchar_unlocked@plt+0x5700>
   16428:	sub	r3, fp, #264	; 0x108
   1642c:	ldr	r1, [pc, #56]	; 1646c <putchar_unlocked@plt+0x5720>
   16430:	mov	r0, r3
   16434:	bl	10b60 <strcmp@plt>
   16438:	mov	r3, r0
   1643c:	cmp	r3, #0
   16440:	beq	1644c <putchar_unlocked@plt+0x5700>
   16444:	mov	r3, #1
   16448:	b	16450 <putchar_unlocked@plt+0x5704>
   1644c:	mov	r3, #0
   16450:	and	r3, r3, #1
   16454:	uxtb	r3, r3
   16458:	mov	r0, r3
   1645c:	sub	sp, fp, #4
   16460:	pop	{fp, pc}
   16464:	andeq	r0, r0, r1, lsl #2
   16468:	andeq	r7, r1, r4, lsr #10
   1646c:	andeq	r7, r1, r8, lsr #10
   16470:	push	{fp, lr}
   16474:	add	fp, sp, #4
   16478:	sub	sp, sp, #16
   1647c:	str	r0, [fp, #-16]
   16480:	mov	r1, #0
   16484:	ldr	r0, [fp, #-16]
   16488:	bl	10d04 <setlocale@plt>
   1648c:	str	r0, [fp, #-8]
   16490:	ldr	r3, [fp, #-8]
   16494:	mov	r0, r3
   16498:	sub	sp, fp, #4
   1649c:	pop	{fp, pc}
   164a0:	push	{fp, lr}
   164a4:	add	fp, sp, #4
   164a8:	sub	sp, sp, #24
   164ac:	str	r0, [fp, #-16]
   164b0:	str	r1, [fp, #-20]	; 0xffffffec
   164b4:	str	r2, [fp, #-24]	; 0xffffffe8
   164b8:	ldr	r0, [fp, #-16]
   164bc:	bl	16470 <putchar_unlocked@plt+0x5724>
   164c0:	str	r0, [fp, #-8]
   164c4:	ldr	r3, [fp, #-8]
   164c8:	cmp	r3, #0
   164cc:	bne	164f0 <putchar_unlocked@plt+0x57a4>
   164d0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   164d4:	cmp	r3, #0
   164d8:	beq	164e8 <putchar_unlocked@plt+0x579c>
   164dc:	ldr	r3, [fp, #-20]	; 0xffffffec
   164e0:	mov	r2, #0
   164e4:	strb	r2, [r3]
   164e8:	mov	r3, #22
   164ec:	b	1656c <putchar_unlocked@plt+0x5820>
   164f0:	ldr	r0, [fp, #-8]
   164f4:	bl	10ca4 <strlen@plt>
   164f8:	str	r0, [fp, #-12]
   164fc:	ldr	r2, [fp, #-12]
   16500:	ldr	r3, [fp, #-24]	; 0xffffffe8
   16504:	cmp	r2, r3
   16508:	bcs	1652c <putchar_unlocked@plt+0x57e0>
   1650c:	ldr	r3, [fp, #-12]
   16510:	add	r3, r3, #1
   16514:	mov	r2, r3
   16518:	ldr	r1, [fp, #-8]
   1651c:	ldr	r0, [fp, #-20]	; 0xffffffec
   16520:	bl	10b9c <memcpy@plt>
   16524:	mov	r3, #0
   16528:	b	1656c <putchar_unlocked@plt+0x5820>
   1652c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   16530:	cmp	r3, #0
   16534:	beq	16568 <putchar_unlocked@plt+0x581c>
   16538:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1653c:	sub	r3, r3, #1
   16540:	mov	r2, r3
   16544:	ldr	r1, [fp, #-8]
   16548:	ldr	r0, [fp, #-20]	; 0xffffffec
   1654c:	bl	10b9c <memcpy@plt>
   16550:	ldr	r3, [fp, #-24]	; 0xffffffe8
   16554:	sub	r3, r3, #1
   16558:	ldr	r2, [fp, #-20]	; 0xffffffec
   1655c:	add	r3, r2, r3
   16560:	mov	r2, #0
   16564:	strb	r2, [r3]
   16568:	mov	r3, #34	; 0x22
   1656c:	mov	r0, r3
   16570:	sub	sp, fp, #4
   16574:	pop	{fp, pc}
   16578:	push	{fp, lr}
   1657c:	add	fp, sp, #4
   16580:	sub	sp, sp, #16
   16584:	str	r0, [fp, #-8]
   16588:	str	r1, [fp, #-12]
   1658c:	str	r2, [fp, #-16]
   16590:	ldr	r2, [fp, #-16]
   16594:	ldr	r1, [fp, #-12]
   16598:	ldr	r0, [fp, #-8]
   1659c:	bl	164a0 <putchar_unlocked@plt+0x5754>
   165a0:	mov	r3, r0
   165a4:	mov	r0, r3
   165a8:	sub	sp, fp, #4
   165ac:	pop	{fp, pc}
   165b0:	push	{fp, lr}
   165b4:	add	fp, sp, #4
   165b8:	sub	sp, sp, #8
   165bc:	str	r0, [fp, #-8]
   165c0:	ldr	r0, [fp, #-8]
   165c4:	bl	16470 <putchar_unlocked@plt+0x5724>
   165c8:	mov	r3, r0
   165cc:	mov	r0, r3
   165d0:	sub	sp, fp, #4
   165d4:	pop	{fp, pc}
   165d8:	subs	r2, r1, #1
   165dc:	bxeq	lr
   165e0:	bcc	167b8 <putchar_unlocked@plt+0x5a6c>
   165e4:	cmp	r0, r1
   165e8:	bls	1679c <putchar_unlocked@plt+0x5a50>
   165ec:	tst	r1, r2
   165f0:	beq	167a8 <putchar_unlocked@plt+0x5a5c>
   165f4:	clz	r3, r0
   165f8:	clz	r2, r1
   165fc:	sub	r3, r2, r3
   16600:	rsbs	r3, r3, #31
   16604:	addne	r3, r3, r3, lsl #1
   16608:	mov	r2, #0
   1660c:	addne	pc, pc, r3, lsl #2
   16610:	nop			; (mov r0, r0)
   16614:	cmp	r0, r1, lsl #31
   16618:	adc	r2, r2, r2
   1661c:	subcs	r0, r0, r1, lsl #31
   16620:	cmp	r0, r1, lsl #30
   16624:	adc	r2, r2, r2
   16628:	subcs	r0, r0, r1, lsl #30
   1662c:	cmp	r0, r1, lsl #29
   16630:	adc	r2, r2, r2
   16634:	subcs	r0, r0, r1, lsl #29
   16638:	cmp	r0, r1, lsl #28
   1663c:	adc	r2, r2, r2
   16640:	subcs	r0, r0, r1, lsl #28
   16644:	cmp	r0, r1, lsl #27
   16648:	adc	r2, r2, r2
   1664c:	subcs	r0, r0, r1, lsl #27
   16650:	cmp	r0, r1, lsl #26
   16654:	adc	r2, r2, r2
   16658:	subcs	r0, r0, r1, lsl #26
   1665c:	cmp	r0, r1, lsl #25
   16660:	adc	r2, r2, r2
   16664:	subcs	r0, r0, r1, lsl #25
   16668:	cmp	r0, r1, lsl #24
   1666c:	adc	r2, r2, r2
   16670:	subcs	r0, r0, r1, lsl #24
   16674:	cmp	r0, r1, lsl #23
   16678:	adc	r2, r2, r2
   1667c:	subcs	r0, r0, r1, lsl #23
   16680:	cmp	r0, r1, lsl #22
   16684:	adc	r2, r2, r2
   16688:	subcs	r0, r0, r1, lsl #22
   1668c:	cmp	r0, r1, lsl #21
   16690:	adc	r2, r2, r2
   16694:	subcs	r0, r0, r1, lsl #21
   16698:	cmp	r0, r1, lsl #20
   1669c:	adc	r2, r2, r2
   166a0:	subcs	r0, r0, r1, lsl #20
   166a4:	cmp	r0, r1, lsl #19
   166a8:	adc	r2, r2, r2
   166ac:	subcs	r0, r0, r1, lsl #19
   166b0:	cmp	r0, r1, lsl #18
   166b4:	adc	r2, r2, r2
   166b8:	subcs	r0, r0, r1, lsl #18
   166bc:	cmp	r0, r1, lsl #17
   166c0:	adc	r2, r2, r2
   166c4:	subcs	r0, r0, r1, lsl #17
   166c8:	cmp	r0, r1, lsl #16
   166cc:	adc	r2, r2, r2
   166d0:	subcs	r0, r0, r1, lsl #16
   166d4:	cmp	r0, r1, lsl #15
   166d8:	adc	r2, r2, r2
   166dc:	subcs	r0, r0, r1, lsl #15
   166e0:	cmp	r0, r1, lsl #14
   166e4:	adc	r2, r2, r2
   166e8:	subcs	r0, r0, r1, lsl #14
   166ec:	cmp	r0, r1, lsl #13
   166f0:	adc	r2, r2, r2
   166f4:	subcs	r0, r0, r1, lsl #13
   166f8:	cmp	r0, r1, lsl #12
   166fc:	adc	r2, r2, r2
   16700:	subcs	r0, r0, r1, lsl #12
   16704:	cmp	r0, r1, lsl #11
   16708:	adc	r2, r2, r2
   1670c:	subcs	r0, r0, r1, lsl #11
   16710:	cmp	r0, r1, lsl #10
   16714:	adc	r2, r2, r2
   16718:	subcs	r0, r0, r1, lsl #10
   1671c:	cmp	r0, r1, lsl #9
   16720:	adc	r2, r2, r2
   16724:	subcs	r0, r0, r1, lsl #9
   16728:	cmp	r0, r1, lsl #8
   1672c:	adc	r2, r2, r2
   16730:	subcs	r0, r0, r1, lsl #8
   16734:	cmp	r0, r1, lsl #7
   16738:	adc	r2, r2, r2
   1673c:	subcs	r0, r0, r1, lsl #7
   16740:	cmp	r0, r1, lsl #6
   16744:	adc	r2, r2, r2
   16748:	subcs	r0, r0, r1, lsl #6
   1674c:	cmp	r0, r1, lsl #5
   16750:	adc	r2, r2, r2
   16754:	subcs	r0, r0, r1, lsl #5
   16758:	cmp	r0, r1, lsl #4
   1675c:	adc	r2, r2, r2
   16760:	subcs	r0, r0, r1, lsl #4
   16764:	cmp	r0, r1, lsl #3
   16768:	adc	r2, r2, r2
   1676c:	subcs	r0, r0, r1, lsl #3
   16770:	cmp	r0, r1, lsl #2
   16774:	adc	r2, r2, r2
   16778:	subcs	r0, r0, r1, lsl #2
   1677c:	cmp	r0, r1, lsl #1
   16780:	adc	r2, r2, r2
   16784:	subcs	r0, r0, r1, lsl #1
   16788:	cmp	r0, r1
   1678c:	adc	r2, r2, r2
   16790:	subcs	r0, r0, r1
   16794:	mov	r0, r2
   16798:	bx	lr
   1679c:	moveq	r0, #1
   167a0:	movne	r0, #0
   167a4:	bx	lr
   167a8:	clz	r2, r1
   167ac:	rsb	r2, r2, #31
   167b0:	lsr	r0, r0, r2
   167b4:	bx	lr
   167b8:	cmp	r0, #0
   167bc:	mvnne	r0, #0
   167c0:	b	16a24 <putchar_unlocked@plt+0x5cd8>
   167c4:	cmp	r1, #0
   167c8:	beq	167b8 <putchar_unlocked@plt+0x5a6c>
   167cc:	push	{r0, r1, lr}
   167d0:	bl	165d8 <putchar_unlocked@plt+0x588c>
   167d4:	pop	{r1, r2, lr}
   167d8:	mul	r3, r2, r0
   167dc:	sub	r1, r1, r3
   167e0:	bx	lr
   167e4:	cmp	r1, #0
   167e8:	beq	169f4 <putchar_unlocked@plt+0x5ca8>
   167ec:	eor	ip, r0, r1
   167f0:	rsbmi	r1, r1, #0
   167f4:	subs	r2, r1, #1
   167f8:	beq	169c0 <putchar_unlocked@plt+0x5c74>
   167fc:	movs	r3, r0
   16800:	rsbmi	r3, r0, #0
   16804:	cmp	r3, r1
   16808:	bls	169cc <putchar_unlocked@plt+0x5c80>
   1680c:	tst	r1, r2
   16810:	beq	169dc <putchar_unlocked@plt+0x5c90>
   16814:	clz	r2, r3
   16818:	clz	r0, r1
   1681c:	sub	r2, r0, r2
   16820:	rsbs	r2, r2, #31
   16824:	addne	r2, r2, r2, lsl #1
   16828:	mov	r0, #0
   1682c:	addne	pc, pc, r2, lsl #2
   16830:	nop			; (mov r0, r0)
   16834:	cmp	r3, r1, lsl #31
   16838:	adc	r0, r0, r0
   1683c:	subcs	r3, r3, r1, lsl #31
   16840:	cmp	r3, r1, lsl #30
   16844:	adc	r0, r0, r0
   16848:	subcs	r3, r3, r1, lsl #30
   1684c:	cmp	r3, r1, lsl #29
   16850:	adc	r0, r0, r0
   16854:	subcs	r3, r3, r1, lsl #29
   16858:	cmp	r3, r1, lsl #28
   1685c:	adc	r0, r0, r0
   16860:	subcs	r3, r3, r1, lsl #28
   16864:	cmp	r3, r1, lsl #27
   16868:	adc	r0, r0, r0
   1686c:	subcs	r3, r3, r1, lsl #27
   16870:	cmp	r3, r1, lsl #26
   16874:	adc	r0, r0, r0
   16878:	subcs	r3, r3, r1, lsl #26
   1687c:	cmp	r3, r1, lsl #25
   16880:	adc	r0, r0, r0
   16884:	subcs	r3, r3, r1, lsl #25
   16888:	cmp	r3, r1, lsl #24
   1688c:	adc	r0, r0, r0
   16890:	subcs	r3, r3, r1, lsl #24
   16894:	cmp	r3, r1, lsl #23
   16898:	adc	r0, r0, r0
   1689c:	subcs	r3, r3, r1, lsl #23
   168a0:	cmp	r3, r1, lsl #22
   168a4:	adc	r0, r0, r0
   168a8:	subcs	r3, r3, r1, lsl #22
   168ac:	cmp	r3, r1, lsl #21
   168b0:	adc	r0, r0, r0
   168b4:	subcs	r3, r3, r1, lsl #21
   168b8:	cmp	r3, r1, lsl #20
   168bc:	adc	r0, r0, r0
   168c0:	subcs	r3, r3, r1, lsl #20
   168c4:	cmp	r3, r1, lsl #19
   168c8:	adc	r0, r0, r0
   168cc:	subcs	r3, r3, r1, lsl #19
   168d0:	cmp	r3, r1, lsl #18
   168d4:	adc	r0, r0, r0
   168d8:	subcs	r3, r3, r1, lsl #18
   168dc:	cmp	r3, r1, lsl #17
   168e0:	adc	r0, r0, r0
   168e4:	subcs	r3, r3, r1, lsl #17
   168e8:	cmp	r3, r1, lsl #16
   168ec:	adc	r0, r0, r0
   168f0:	subcs	r3, r3, r1, lsl #16
   168f4:	cmp	r3, r1, lsl #15
   168f8:	adc	r0, r0, r0
   168fc:	subcs	r3, r3, r1, lsl #15
   16900:	cmp	r3, r1, lsl #14
   16904:	adc	r0, r0, r0
   16908:	subcs	r3, r3, r1, lsl #14
   1690c:	cmp	r3, r1, lsl #13
   16910:	adc	r0, r0, r0
   16914:	subcs	r3, r3, r1, lsl #13
   16918:	cmp	r3, r1, lsl #12
   1691c:	adc	r0, r0, r0
   16920:	subcs	r3, r3, r1, lsl #12
   16924:	cmp	r3, r1, lsl #11
   16928:	adc	r0, r0, r0
   1692c:	subcs	r3, r3, r1, lsl #11
   16930:	cmp	r3, r1, lsl #10
   16934:	adc	r0, r0, r0
   16938:	subcs	r3, r3, r1, lsl #10
   1693c:	cmp	r3, r1, lsl #9
   16940:	adc	r0, r0, r0
   16944:	subcs	r3, r3, r1, lsl #9
   16948:	cmp	r3, r1, lsl #8
   1694c:	adc	r0, r0, r0
   16950:	subcs	r3, r3, r1, lsl #8
   16954:	cmp	r3, r1, lsl #7
   16958:	adc	r0, r0, r0
   1695c:	subcs	r3, r3, r1, lsl #7
   16960:	cmp	r3, r1, lsl #6
   16964:	adc	r0, r0, r0
   16968:	subcs	r3, r3, r1, lsl #6
   1696c:	cmp	r3, r1, lsl #5
   16970:	adc	r0, r0, r0
   16974:	subcs	r3, r3, r1, lsl #5
   16978:	cmp	r3, r1, lsl #4
   1697c:	adc	r0, r0, r0
   16980:	subcs	r3, r3, r1, lsl #4
   16984:	cmp	r3, r1, lsl #3
   16988:	adc	r0, r0, r0
   1698c:	subcs	r3, r3, r1, lsl #3
   16990:	cmp	r3, r1, lsl #2
   16994:	adc	r0, r0, r0
   16998:	subcs	r3, r3, r1, lsl #2
   1699c:	cmp	r3, r1, lsl #1
   169a0:	adc	r0, r0, r0
   169a4:	subcs	r3, r3, r1, lsl #1
   169a8:	cmp	r3, r1
   169ac:	adc	r0, r0, r0
   169b0:	subcs	r3, r3, r1
   169b4:	cmp	ip, #0
   169b8:	rsbmi	r0, r0, #0
   169bc:	bx	lr
   169c0:	teq	ip, r0
   169c4:	rsbmi	r0, r0, #0
   169c8:	bx	lr
   169cc:	movcc	r0, #0
   169d0:	asreq	r0, ip, #31
   169d4:	orreq	r0, r0, #1
   169d8:	bx	lr
   169dc:	clz	r2, r1
   169e0:	rsb	r2, r2, #31
   169e4:	cmp	ip, #0
   169e8:	lsr	r0, r3, r2
   169ec:	rsbmi	r0, r0, #0
   169f0:	bx	lr
   169f4:	cmp	r0, #0
   169f8:	mvngt	r0, #-2147483648	; 0x80000000
   169fc:	movlt	r0, #-2147483648	; 0x80000000
   16a00:	b	16a24 <putchar_unlocked@plt+0x5cd8>
   16a04:	cmp	r1, #0
   16a08:	beq	169f4 <putchar_unlocked@plt+0x5ca8>
   16a0c:	push	{r0, r1, lr}
   16a10:	bl	167ec <putchar_unlocked@plt+0x5aa0>
   16a14:	pop	{r1, r2, lr}
   16a18:	mul	r3, r2, r0
   16a1c:	sub	r1, r1, r3
   16a20:	bx	lr
   16a24:	push	{r1, lr}
   16a28:	mov	r0, #8
   16a2c:	bl	10b54 <raise@plt>
   16a30:	pop	{r1, pc}
   16a34:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   16a38:	mov	r7, r0
   16a3c:	ldr	r6, [pc, #72]	; 16a8c <putchar_unlocked@plt+0x5d40>
   16a40:	ldr	r5, [pc, #72]	; 16a90 <putchar_unlocked@plt+0x5d44>
   16a44:	add	r6, pc, r6
   16a48:	add	r5, pc, r5
   16a4c:	sub	r6, r6, r5
   16a50:	mov	r8, r1
   16a54:	mov	r9, r2
   16a58:	bl	10b1c <calloc@plt-0x20>
   16a5c:	asrs	r6, r6, #2
   16a60:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   16a64:	mov	r4, #0
   16a68:	add	r4, r4, #1
   16a6c:	ldr	r3, [r5], #4
   16a70:	mov	r2, r9
   16a74:	mov	r1, r8
   16a78:	mov	r0, r7
   16a7c:	blx	r3
   16a80:	cmp	r6, r4
   16a84:	bne	16a68 <putchar_unlocked@plt+0x5d1c>
   16a88:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   16a8c:	andeq	r1, r1, r4, asr #9
   16a90:			; <UNDEFINED> instruction: 0x000114bc
   16a94:	bx	lr
   16a98:	ldr	r3, [pc, #12]	; 16aac <putchar_unlocked@plt+0x5d60>
   16a9c:	mov	r1, #0
   16aa0:	add	r3, pc, r3
   16aa4:	ldr	r2, [r3]
   16aa8:	b	10cc8 <__cxa_atexit@plt>
   16aac:	andeq	r1, r1, r0, lsr #12

Disassembly of section .fini:

00016ab0 <.fini>:
   16ab0:	push	{r3, lr}
   16ab4:	pop	{r3, pc}
