
../repos/inetutils/whois/whois:     file format elf32-littlearm


Disassembly of section .init:

0001107c <.init>:
   1107c:	push	{r3, lr}
   11080:	bl	11814 <putc_unlocked@plt+0x484>
   11084:	pop	{r3, pc}

Disassembly of section .plt:

00011088 <fdopen@plt-0x14>:
   11088:	push	{lr}		; (str lr, [sp, #-4]!)
   1108c:	ldr	lr, [pc, #4]	; 11098 <fdopen@plt-0x4>
   11090:	add	lr, pc, lr
   11094:	ldr	pc, [lr, #8]!
   11098:	andeq	r9, r1, r8, ror #30

0001109c <fdopen@plt>:
   1109c:	add	ip, pc, #0, 12
   110a0:	add	ip, ip, #102400	; 0x19000
   110a4:	ldr	pc, [ip, #3944]!	; 0xf68

000110a8 <calloc@plt>:
   110a8:	add	ip, pc, #0, 12
   110ac:	add	ip, ip, #102400	; 0x19000
   110b0:	ldr	pc, [ip, #3936]!	; 0xf60

000110b4 <fputs_unlocked@plt>:
   110b4:	add	ip, pc, #0, 12
   110b8:	add	ip, ip, #102400	; 0x19000
   110bc:	ldr	pc, [ip, #3928]!	; 0xf58

000110c0 <raise@plt>:
   110c0:	add	ip, pc, #0, 12
   110c4:	add	ip, ip, #102400	; 0x19000
   110c8:	ldr	pc, [ip, #3920]!	; 0xf50

000110cc <inet_aton@plt>:
   110cc:	add	ip, pc, #0, 12
   110d0:	add	ip, ip, #102400	; 0x19000
   110d4:	ldr	pc, [ip, #3912]!	; 0xf48

000110d8 <strcmp@plt>:
   110d8:	add	ip, pc, #0, 12
   110dc:	add	ip, ip, #102400	; 0x19000
   110e0:	ldr	pc, [ip, #3904]!	; 0xf40

000110e4 <printf@plt>:
   110e4:	add	ip, pc, #0, 12
   110e8:	add	ip, ip, #102400	; 0x19000
   110ec:	ldr	pc, [ip, #3896]!	; 0xf38

000110f0 <memmove@plt>:
   110f0:	add	ip, pc, #0, 12
   110f4:	add	ip, ip, #102400	; 0x19000
   110f8:	ldr	pc, [ip, #3888]!	; 0xf30

000110fc <strchrnul@plt>:
   110fc:	add	ip, pc, #0, 12
   11100:	add	ip, ip, #102400	; 0x19000
   11104:	ldr	pc, [ip, #3880]!	; 0xf28

00011108 <free@plt>:
   11108:	add	ip, pc, #0, 12
   1110c:	add	ip, ip, #102400	; 0x19000
   11110:	ldr	pc, [ip, #3872]!	; 0xf20

00011114 <gai_strerror@plt>:
   11114:	add	ip, pc, #0, 12
   11118:	add	ip, ip, #102400	; 0x19000
   1111c:	ldr	pc, [ip, #3864]!	; 0xf18

00011120 <fgets@plt>:
   11120:	add	ip, pc, #0, 12
   11124:	add	ip, ip, #102400	; 0x19000
   11128:	ldr	pc, [ip, #3856]!	; 0xf10

0001112c <ferror@plt>:
   1112c:	add	ip, pc, #0, 12
   11130:	add	ip, ip, #102400	; 0x19000
   11134:	ldr	pc, [ip, #3848]!	; 0xf08

00011138 <strndup@plt>:
   11138:	add	ip, pc, #0, 12
   1113c:	add	ip, ip, #102400	; 0x19000
   11140:	ldr	pc, [ip, #3840]!	; 0xf00

00011144 <memcpy@plt>:
   11144:	add	ip, pc, #0, 12
   11148:	add	ip, ip, #102400	; 0x19000
   1114c:	ldr	pc, [ip, #3832]!	; 0xef8

00011150 <signal@plt>:
   11150:	add	ip, pc, #0, 12
   11154:	add	ip, ip, #102400	; 0x19000
   11158:	ldr	pc, [ip, #3824]!	; 0xef0

0001115c <fwrite_unlocked@plt>:
   1115c:	add	ip, pc, #0, 12
   11160:	add	ip, ip, #102400	; 0x19000
   11164:	ldr	pc, [ip, #3816]!	; 0xee8

00011168 <sleep@plt>:
   11168:	add	ip, pc, #0, 12
   1116c:	add	ip, ip, #102400	; 0x19000
   11170:	ldr	pc, [ip, #3808]!	; 0xee0

00011174 <realloc@plt>:
   11174:	add	ip, pc, #0, 12
   11178:	add	ip, ip, #102400	; 0x19000
   1117c:	ldr	pc, [ip, #3800]!	; 0xed8

00011180 <strcasecmp@plt>:
   11180:	add	ip, pc, #0, 12
   11184:	add	ip, ip, #102400	; 0x19000
   11188:	ldr	pc, [ip, #3792]!	; 0xed0

0001118c <funlockfile@plt>:
   1118c:	add	ip, pc, #0, 12
   11190:	add	ip, ip, #102400	; 0x19000
   11194:	ldr	pc, [ip, #3784]!	; 0xec8

00011198 <strcat@plt>:
   11198:	add	ip, pc, #0, 12
   1119c:	add	ip, ip, #102400	; 0x19000
   111a0:	ldr	pc, [ip, #3776]!	; 0xec0

000111a4 <strcpy@plt>:
   111a4:	add	ip, pc, #0, 12
   111a8:	add	ip, ip, #102400	; 0x19000
   111ac:	ldr	pc, [ip, #3768]!	; 0xeb8

000111b0 <error@plt>:
   111b0:	add	ip, pc, #0, 12
   111b4:	add	ip, ip, #102400	; 0x19000
   111b8:	ldr	pc, [ip, #3760]!	; 0xeb0

000111bc <getenv@plt>:
   111bc:	add	ip, pc, #0, 12
   111c0:	add	ip, ip, #102400	; 0x19000
   111c4:	ldr	pc, [ip, #3752]!	; 0xea8

000111c8 <puts@plt>:
   111c8:	add	ip, pc, #0, 12
   111cc:	add	ip, ip, #102400	; 0x19000
   111d0:	ldr	pc, [ip, #3744]!	; 0xea0

000111d4 <malloc@plt>:
   111d4:	add	ip, pc, #0, 12
   111d8:	add	ip, ip, #102400	; 0x19000
   111dc:	ldr	pc, [ip, #3736]!	; 0xe98

000111e0 <__libc_start_main@plt>:
   111e0:	add	ip, pc, #0, 12
   111e4:	add	ip, ip, #102400	; 0x19000
   111e8:	ldr	pc, [ip, #3728]!	; 0xe90

000111ec <strerror@plt>:
   111ec:	add	ip, pc, #0, 12
   111f0:	add	ip, ip, #102400	; 0x19000
   111f4:	ldr	pc, [ip, #3720]!	; 0xe88

000111f8 <__ctype_tolower_loc@plt>:
   111f8:	add	ip, pc, #0, 12
   111fc:	add	ip, ip, #102400	; 0x19000
   11200:	ldr	pc, [ip, #3712]!	; 0xe80

00011204 <__gmon_start__@plt>:
   11204:	add	ip, pc, #0, 12
   11208:	add	ip, ip, #102400	; 0x19000
   1120c:	ldr	pc, [ip, #3704]!	; 0xe78

00011210 <mempcpy@plt>:
   11210:	add	ip, pc, #0, 12
   11214:	add	ip, ip, #102400	; 0x19000
   11218:	ldr	pc, [ip, #3696]!	; 0xe70

0001121c <__ctype_b_loc@plt>:
   1121c:	add	ip, pc, #0, 12
   11220:	add	ip, ip, #102400	; 0x19000
   11224:	ldr	pc, [ip, #3688]!	; 0xe68

00011228 <exit@plt>:
   11228:	add	ip, pc, #0, 12
   1122c:	add	ip, ip, #102400	; 0x19000
   11230:	ldr	pc, [ip, #3680]!	; 0xe60

00011234 <strlen@plt>:
   11234:	add	ip, pc, #0, 12
   11238:	add	ip, ip, #102400	; 0x19000
   1123c:	ldr	pc, [ip, #3672]!	; 0xe58

00011240 <strchr@plt>:
   11240:	add	ip, pc, #0, 12
   11244:	add	ip, ip, #102400	; 0x19000
   11248:	ldr	pc, [ip, #3664]!	; 0xe50

0001124c <fprintf@plt>:
   1124c:	add	ip, pc, #0, 12
   11250:	add	ip, ip, #102400	; 0x19000
   11254:	ldr	pc, [ip, #3656]!	; 0xe48

00011258 <__errno_location@plt>:
   11258:	add	ip, pc, #0, 12
   1125c:	add	ip, ip, #102400	; 0x19000
   11260:	ldr	pc, [ip, #3648]!	; 0xe40

00011264 <strncasecmp@plt>:
   11264:	add	ip, pc, #0, 12
   11268:	add	ip, ip, #102400	; 0x19000
   1126c:	ldr	pc, [ip, #3640]!	; 0xe38

00011270 <strerror_r@plt>:
   11270:	add	ip, pc, #0, 12
   11274:	add	ip, ip, #102400	; 0x19000
   11278:	ldr	pc, [ip, #3632]!	; 0xe30

0001127c <memset@plt>:
   1127c:	add	ip, pc, #0, 12
   11280:	add	ip, ip, #102400	; 0x19000
   11284:	ldr	pc, [ip, #3624]!	; 0xe28

00011288 <write@plt>:
   11288:	add	ip, pc, #0, 12
   1128c:	add	ip, ip, #102400	; 0x19000
   11290:	ldr	pc, [ip, #3616]!	; 0xe20

00011294 <memchr@plt>:
   11294:	add	ip, pc, #0, 12
   11298:	add	ip, ip, #102400	; 0x19000
   1129c:	ldr	pc, [ip, #3608]!	; 0xe18

000112a0 <strrchr@plt>:
   112a0:	add	ip, pc, #0, 12
   112a4:	add	ip, ip, #102400	; 0x19000
   112a8:	ldr	pc, [ip, #3600]!	; 0xe10

000112ac <vfprintf@plt>:
   112ac:	add	ip, pc, #0, 12
   112b0:	add	ip, ip, #102400	; 0x19000
   112b4:	ldr	pc, [ip, #3592]!	; 0xe08

000112b8 <fputc@plt>:
   112b8:	add	ip, pc, #0, 12
   112bc:	add	ip, ip, #102400	; 0x19000
   112c0:	ldr	pc, [ip, #3584]!	; 0xe00

000112c4 <sscanf@plt>:
   112c4:	add	ip, pc, #0, 12
   112c8:	add	ip, ip, #102400	; 0x19000
   112cc:	ldr	pc, [ip, #3576]!	; 0xdf8

000112d0 <sprintf@plt>:
   112d0:	add	ip, pc, #0, 12
   112d4:	add	ip, ip, #102400	; 0x19000
   112d8:	ldr	pc, [ip, #3568]!	; 0xdf0

000112dc <flockfile@plt>:
   112dc:	add	ip, pc, #0, 12
   112e0:	add	ip, ip, #102400	; 0x19000
   112e4:	ldr	pc, [ip, #3560]!	; 0xde8

000112e8 <vsnprintf@plt>:
   112e8:	add	ip, pc, #0, 12
   112ec:	add	ip, ip, #102400	; 0x19000
   112f0:	ldr	pc, [ip, #3552]!	; 0xde0

000112f4 <atoi@plt>:
   112f4:	add	ip, pc, #0, 12
   112f8:	add	ip, ip, #102400	; 0x19000
   112fc:	ldr	pc, [ip, #3544]!	; 0xdd8

00011300 <qsort@plt>:
   11300:	add	ip, pc, #0, 12
   11304:	add	ip, ip, #102400	; 0x19000
   11308:	ldr	pc, [ip, #3536]!	; 0xdd0

0001130c <strpbrk@plt>:
   1130c:	add	ip, pc, #0, 12
   11310:	add	ip, ip, #102400	; 0x19000
   11314:	ldr	pc, [ip, #3528]!	; 0xdc8

00011318 <freeaddrinfo@plt>:
   11318:	add	ip, pc, #0, 12
   1131c:	add	ip, ip, #102400	; 0x19000
   11320:	ldr	pc, [ip, #3520]!	; 0xdc0

00011324 <getaddrinfo@plt>:
   11324:	add	ip, pc, #0, 12
   11328:	add	ip, ip, #102400	; 0x19000
   1132c:	ldr	pc, [ip, #3512]!	; 0xdb8

00011330 <socket@plt>:
   11330:	add	ip, pc, #0, 12
   11334:	add	ip, ip, #102400	; 0x19000
   11338:	ldr	pc, [ip, #3504]!	; 0xdb0

0001133c <gethostbyname@plt>:
   1133c:	add	ip, pc, #0, 12
   11340:	add	ip, ip, #102400	; 0x19000
   11344:	ldr	pc, [ip, #3496]!	; 0xda8

00011348 <fputs@plt>:
   11348:	add	ip, pc, #0, 12
   1134c:	add	ip, ip, #102400	; 0x19000
   11350:	ldr	pc, [ip, #3488]!	; 0xda0

00011354 <strncmp@plt>:
   11354:	add	ip, pc, #0, 12
   11358:	add	ip, ip, #102400	; 0x19000
   1135c:	ldr	pc, [ip, #3480]!	; 0xd98

00011360 <abort@plt>:
   11360:	add	ip, pc, #0, 12
   11364:	add	ip, ip, #102400	; 0x19000
   11368:	ldr	pc, [ip, #3472]!	; 0xd90

0001136c <close@plt>:
   1136c:	add	ip, pc, #0, 12
   11370:	add	ip, ip, #102400	; 0x19000
   11374:	ldr	pc, [ip, #3464]!	; 0xd88

00011378 <connect@plt>:
   11378:	add	ip, pc, #0, 12
   1137c:	add	ip, ip, #102400	; 0x19000
   11380:	ldr	pc, [ip, #3456]!	; 0xd80

00011384 <__assert_fail@plt>:
   11384:	add	ip, pc, #0, 12
   11388:	add	ip, ip, #102400	; 0x19000
   1138c:	ldr	pc, [ip, #3448]!	; 0xd78

00011390 <putc_unlocked@plt>:
   11390:	add	ip, pc, #0, 12
   11394:	add	ip, ip, #102400	; 0x19000
   11398:	ldr	pc, [ip, #3440]!	; 0xd70

Disassembly of section .text:

0001139c <argp_parse@@Base-0x18d8>:
   1139c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   113a0:	mov	sl, r0
   113a4:	sub	sp, sp, #20
   113a8:	ldr	r0, [r1]
   113ac:	mov	r6, r1
   113b0:	ldr	r4, [pc, #956]	; 11774 <putc_unlocked@plt+0x3e4>
   113b4:	bl	13b28 <_obstack_memory_used@@Base+0x28>
   113b8:	ldr	r3, [pc, #952]	; 11778 <putc_unlocked@plt+0x3e8>
   113bc:	mov	r2, #0
   113c0:	mov	r1, r2
   113c4:	str	r3, [sp]
   113c8:	mov	r0, r4
   113cc:	ldr	r3, [pc, #936]	; 1177c <putc_unlocked@plt+0x3ec>
   113d0:	bl	1391c <_obstack_begin@@Base>
   113d4:	ldr	r3, [pc, #932]	; 11780 <putc_unlocked@plt+0x3f0>
   113d8:	ldr	r2, [pc, #932]	; 11784 <putc_unlocked@plt+0x3f4>
   113dc:	ldr	r1, [pc, #932]	; 11788 <putc_unlocked@plt+0x3f8>
   113e0:	ldr	r0, [pc, #932]	; 1178c <putc_unlocked@plt+0x3fc>
   113e4:	str	r2, [r3]
   113e8:	bl	1365c <argp_parse@@Base+0x9e8>
   113ec:	mov	r3, #0
   113f0:	str	r3, [sp, #4]
   113f4:	add	r3, sp, #12
   113f8:	str	r3, [sp]
   113fc:	mov	r2, r6
   11400:	mov	r3, #8
   11404:	mov	r1, sl
   11408:	ldr	r0, [pc, #896]	; 11790 <putc_unlocked@plt+0x400>
   1140c:	bl	12c74 <argp_parse@@Base>
   11410:	ldr	r2, [r4, #16]
   11414:	ldr	r3, [r4, #12]
   11418:	cmp	r2, r3
   1141c:	bne	1142c <putc_unlocked@plt+0x9c>
   11420:	mov	r1, #1
   11424:	mov	r0, r4
   11428:	bl	1395c <_obstack_newchunk@@Base>
   1142c:	ldr	r3, [r4, #12]
   11430:	ldr	r5, [pc, #860]	; 11794 <putc_unlocked@plt+0x404>
   11434:	add	r2, r3, #1
   11438:	str	r2, [r4, #12]
   1143c:	mov	r2, #0
   11440:	strb	r2, [r3]
   11444:	ldr	r3, [r4, #12]
   11448:	ldr	r7, [r4, #8]
   1144c:	ldr	r1, [r4, #16]
   11450:	cmp	r7, r3
   11454:	ldr	r8, [sp, #12]
   11458:	ldrbeq	r2, [r4, #40]	; 0x28
   1145c:	orreq	r2, r2, #2
   11460:	strbeq	r2, [r4, #40]	; 0x28
   11464:	ldr	r2, [r4, #24]
   11468:	add	r3, r3, r2
   1146c:	bic	r3, r3, r2
   11470:	ldr	r2, [r4, #4]
   11474:	str	r3, [r4, #12]
   11478:	sub	r3, r3, r2
   1147c:	sub	r2, r1, r2
   11480:	cmp	r3, r2
   11484:	strhi	r1, [r4, #12]
   11488:	ldr	r3, [r4, #12]
   1148c:	subs	sl, sl, r8
   11490:	str	r3, [r4, #8]
   11494:	bne	114b4 <putc_unlocked@plt+0x124>
   11498:	ldr	r3, [r5]
   1149c:	cmp	r3, #0
   114a0:	bne	114b4 <putc_unlocked@plt+0x124>
   114a4:	ldr	r2, [pc, #748]	; 11798 <putc_unlocked@plt+0x408>
   114a8:	mov	r1, sl
   114ac:	mov	r0, #1
   114b0:	bl	111b0 <error@plt>
   114b4:	ldr	r3, [r5]
   114b8:	cmp	r3, #0
   114bc:	beq	115a8 <putc_unlocked@plt+0x218>
   114c0:	ldr	r2, [r4, #16]
   114c4:	ldr	r3, [r4, #12]
   114c8:	cmp	r2, r3
   114cc:	bne	114dc <putc_unlocked@plt+0x14c>
   114d0:	mov	r1, #1
   114d4:	ldr	r0, [pc, #664]	; 11774 <putc_unlocked@plt+0x3e4>
   114d8:	bl	1395c <_obstack_newchunk@@Base>
   114dc:	ldr	r3, [r4, #12]
   114e0:	add	r2, r3, #1
   114e4:	str	r2, [r4, #12]
   114e8:	mov	r2, #0
   114ec:	strb	r2, [r3]
   114f0:	ldr	r3, [r4, #12]
   114f4:	ldr	r6, [r4, #8]
   114f8:	ldr	r1, [r4, #16]
   114fc:	cmp	r6, r3
   11500:	ldrbeq	r2, [r4, #40]	; 0x28
   11504:	orreq	r2, r2, #2
   11508:	strbeq	r2, [r4, #40]	; 0x28
   1150c:	ldr	r2, [r4, #24]
   11510:	add	r3, r3, r2
   11514:	bic	r3, r3, r2
   11518:	ldr	r2, [r4, #4]
   1151c:	str	r3, [r4, #12]
   11520:	sub	r3, r3, r2
   11524:	sub	r2, r1, r2
   11528:	cmp	r3, r2
   1152c:	strhi	r1, [r4, #12]
   11530:	ldr	r3, [r4, #12]
   11534:	str	r3, [r4, #8]
   11538:	ldr	r3, [r5, #4]
   1153c:	ldr	r4, [pc, #600]	; 1179c <putc_unlocked@plt+0x40c>
   11540:	cmp	r3, #0
   11544:	bne	1164c <putc_unlocked@plt+0x2bc>
   11548:	ldr	r1, [pc, #592]	; 117a0 <putc_unlocked@plt+0x410>
   1154c:	mov	r0, r6
   11550:	bl	11e84 <putc_unlocked@plt+0xaf4>
   11554:	cmp	r0, #0
   11558:	beq	1164c <putc_unlocked@plt+0x2bc>
   1155c:	ldr	r3, [r5, #12]
   11560:	cmp	r3, #0
   11564:	beq	11570 <putc_unlocked@plt+0x1e0>
   11568:	ldr	r0, [pc, #564]	; 117a4 <putc_unlocked@plt+0x414>
   1156c:	bl	111c8 <puts@plt>
   11570:	mov	r1, #0
   11574:	ldr	r0, [pc, #556]	; 117a8 <putc_unlocked@plt+0x418>
   11578:	bl	123ec <putc_unlocked@plt+0x105c>
   1157c:	mov	r1, r6
   11580:	str	r0, [r4]
   11584:	bl	12238 <putc_unlocked@plt+0xea8>
   11588:	str	r0, [r5, #4]
   1158c:	ldr	r0, [r4]
   11590:	bl	1136c <close@plt>
   11594:	ldr	r1, [r5, #4]
   11598:	cmp	r1, #0
   1159c:	bne	11644 <putc_unlocked@plt+0x2b4>
   115a0:	mov	r0, #0
   115a4:	bl	11228 <exit@plt>
   115a8:	ldr	r9, [pc, #452]	; 11774 <putc_unlocked@plt+0x3e4>
   115ac:	add	r6, r6, r8, lsl #2
   115b0:	cmp	sl, #0
   115b4:	sub	r8, sl, #1
   115b8:	beq	114c0 <putc_unlocked@plt+0x130>
   115bc:	ldr	sl, [r6], #4
   115c0:	mov	r0, sl
   115c4:	bl	11234 <strlen@plt>
   115c8:	ldr	r2, [r4, #16]
   115cc:	ldr	r1, [r4, #12]
   115d0:	sub	r2, r2, r1
   115d4:	cmp	r0, r2
   115d8:	mov	fp, r0
   115dc:	bls	115ec <putc_unlocked@plt+0x25c>
   115e0:	mov	r1, r0
   115e4:	mov	r0, r9
   115e8:	bl	1395c <_obstack_newchunk@@Base>
   115ec:	mov	r2, fp
   115f0:	mov	r1, sl
   115f4:	ldr	r0, [r4, #12]
   115f8:	bl	11144 <memcpy@plt>
   115fc:	ldr	r2, [r4, #12]
   11600:	cmp	r8, #0
   11604:	add	r3, r2, fp
   11608:	str	r3, [r4, #12]
   1160c:	beq	1163c <putc_unlocked@plt+0x2ac>
   11610:	ldr	r2, [r4, #16]
   11614:	cmp	r2, r3
   11618:	bne	11628 <putc_unlocked@plt+0x298>
   1161c:	mov	r1, #1
   11620:	mov	r0, r9
   11624:	bl	1395c <_obstack_newchunk@@Base>
   11628:	ldr	r3, [r4, #12]
   1162c:	add	r2, r3, #1
   11630:	str	r2, [r4, #12]
   11634:	mov	r2, #32
   11638:	strb	r2, [r3]
   1163c:	mov	sl, r8
   11640:	b	115b0 <putc_unlocked@plt+0x220>
   11644:	ldr	r0, [pc, #352]	; 117ac <putc_unlocked@plt+0x41c>
   11648:	bl	110e4 <printf@plt>
   1164c:	ldr	r3, [r5, #4]
   11650:	cmp	r3, #0
   11654:	bne	116b4 <putc_unlocked@plt+0x324>
   11658:	mov	r0, r6
   1165c:	bl	11f24 <putc_unlocked@plt+0xb94>
   11660:	str	r0, [r5, #4]
   11664:	ldrb	r3, [r0]
   11668:	mov	r1, r0
   1166c:	cmp	r3, #3
   11670:	ldrls	pc, [pc, r3, lsl #2]
   11674:	b	1175c <putc_unlocked@plt+0x3cc>
   11678:	andeq	r1, r1, r8, lsl #13
   1167c:	andeq	r1, r1, ip, lsr r7
   11680:	andeq	r1, r1, r4, asr #14
   11684:	andeq	r1, r1, r4, asr r7
   11688:	ldr	r0, [pc, #288]	; 117b0 <putc_unlocked@plt+0x420>
   1168c:	bl	111bc <getenv@plt>
   11690:	cmp	r0, #0
   11694:	str	r0, [r5, #4]
   11698:	ldreq	r3, [pc, #264]	; 117a8 <putc_unlocked@plt+0x418>
   1169c:	streq	r3, [r5, #4]
   116a0:	ldr	r3, [r5, #12]
   116a4:	cmp	r3, #0
   116a8:	ldrne	r1, [r5, #4]
   116ac:	ldrne	r0, [pc, #256]	; 117b4 <putc_unlocked@plt+0x424>
   116b0:	bne	1176c <putc_unlocked@plt+0x3dc>
   116b4:	ldr	r0, [pc, #252]	; 117b8 <putc_unlocked@plt+0x428>
   116b8:	bl	111bc <getenv@plt>
   116bc:	mov	r1, r7
   116c0:	cmp	r0, #0
   116c4:	movne	r2, #0
   116c8:	ldrne	r3, [pc, #236]	; 117bc <putc_unlocked@plt+0x42c>
   116cc:	ldr	r0, [r5, #4]
   116d0:	strne	r2, [r3]
   116d4:	mov	r2, r6
   116d8:	bl	11be4 <putc_unlocked@plt+0x854>
   116dc:	ldr	r3, [r5, #12]
   116e0:	cmp	r3, #0
   116e4:	mov	r6, r0
   116e8:	beq	116f8 <putc_unlocked@plt+0x368>
   116ec:	mov	r1, r0
   116f0:	ldr	r0, [pc, #200]	; 117c0 <putc_unlocked@plt+0x430>
   116f4:	bl	110e4 <printf@plt>
   116f8:	ldr	r1, [pc, #196]	; 117c4 <putc_unlocked@plt+0x434>
   116fc:	mov	r0, r6
   11700:	bl	11198 <strcat@plt>
   11704:	ldr	r1, [pc, #188]	; 117c8 <putc_unlocked@plt+0x438>
   11708:	mov	r0, #15
   1170c:	bl	11150 <signal@plt>
   11710:	ldr	r1, [pc, #176]	; 117c8 <putc_unlocked@plt+0x438>
   11714:	mov	r0, #2
   11718:	bl	11150 <signal@plt>
   1171c:	ldmib	r5, {r0, r1}
   11720:	bl	123ec <putc_unlocked@plt+0x105c>
   11724:	mov	r1, r6
   11728:	str	r0, [r4]
   1172c:	bl	124f4 <putc_unlocked@plt+0x1164>
   11730:	ldr	r0, [r4]
   11734:	bl	1136c <close@plt>
   11738:	b	115a0 <putc_unlocked@plt+0x210>
   1173c:	ldr	r0, [pc, #136]	; 117cc <putc_unlocked@plt+0x43c>
   11740:	bl	111c8 <puts@plt>
   11744:	ldr	r0, [r5, #4]
   11748:	add	r0, r0, #1
   1174c:	bl	111c8 <puts@plt>
   11750:	b	115a0 <putc_unlocked@plt+0x210>
   11754:	ldr	r0, [pc, #116]	; 117d0 <putc_unlocked@plt+0x440>
   11758:	b	1174c <putc_unlocked@plt+0x3bc>
   1175c:	ldr	r3, [r5, #12]
   11760:	cmp	r3, #0
   11764:	beq	116b4 <putc_unlocked@plt+0x324>
   11768:	ldr	r0, [pc, #100]	; 117d4 <putc_unlocked@plt+0x444>
   1176c:	bl	110e4 <printf@plt>
   11770:	b	116b4 <putc_unlocked@plt+0x324>
   11774:	andeq	lr, r2, ip, lsl #18
   11778:	andeq	r3, r1, r0, lsl r7
   1177c:			; <UNDEFINED> instruction: 0x000144bc
   11780:	andeq	lr, r2, ip, lsr r9
   11784:	strdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   11788:	andeq	lr, r2, ip, asr #11
   1178c:	andeq	r9, r1, r0, asr sp
   11790:	ldrdeq	lr, [r2], -r4
   11794:	andeq	lr, r2, r4, asr #17
   11798:	andeq	r8, r1, r0, lsl fp
   1179c:	andeq	lr, r2, r8, lsr r9
   117a0:	strdeq	lr, [r2], -r0
   117a4:	andeq	r8, r1, r5, lsr #22
   117a8:	andeq	r8, r1, r7, asr #22
   117ac:	andeq	r8, r1, sl, asr fp
   117b0:	andeq	r8, r1, ip, ror fp
   117b4:	andeq	r8, r1, r9, lsl #23
   117b8:	andeq	r8, r1, sl, lsl ip
   117bc:	andeq	fp, r2, r8, lsl r1
   117c0:	andeq	r8, r1, r5, lsr #24
   117c4:	andeq	r8, r1, fp, lsl #20
   117c8:	andeq	r2, r1, r4, lsl r7
   117cc:	andeq	r8, r1, r3, lsr #23
   117d0:	andeq	r8, r1, sl, ror #23
   117d4:	andeq	r8, r1, r8, lsl #24
   117d8:	mov	fp, #0
   117dc:	mov	lr, #0
   117e0:	pop	{r1}		; (ldr r1, [sp], #4)
   117e4:	mov	r2, sp
   117e8:	push	{r2}		; (str r2, [sp, #-4]!)
   117ec:	push	{r0}		; (str r0, [sp, #-4]!)
   117f0:	ldr	ip, [pc, #16]	; 11808 <putc_unlocked@plt+0x478>
   117f4:	push	{ip}		; (str ip, [sp, #-4]!)
   117f8:	ldr	r0, [pc, #12]	; 1180c <putc_unlocked@plt+0x47c>
   117fc:	ldr	r3, [pc, #12]	; 11810 <putc_unlocked@plt+0x480>
   11800:	bl	111e0 <__libc_start_main@plt>
   11804:	bl	11360 <abort@plt>
   11808:			; <UNDEFINED> instruction: 0x000187b8
   1180c:	muleq	r1, ip, r3
   11810:	andeq	r8, r1, r8, asr r7
   11814:	ldr	r3, [pc, #20]	; 11830 <putc_unlocked@plt+0x4a0>
   11818:	ldr	r2, [pc, #20]	; 11834 <putc_unlocked@plt+0x4a4>
   1181c:	add	r3, pc, r3
   11820:	ldr	r2, [r3, r2]
   11824:	cmp	r2, #0
   11828:	bxeq	lr
   1182c:	b	11204 <__gmon_start__@plt>
   11830:	ldrdeq	r9, [r1], -ip
   11834:	andeq	r0, r0, ip, lsl #2
   11838:	ldr	r3, [pc, #28]	; 1185c <putc_unlocked@plt+0x4cc>
   1183c:	ldr	r0, [pc, #28]	; 11860 <putc_unlocked@plt+0x4d0>
   11840:	sub	r3, r3, r0
   11844:	cmp	r3, #6
   11848:	bxls	lr
   1184c:	ldr	r3, [pc, #16]	; 11864 <putc_unlocked@plt+0x4d4>
   11850:	cmp	r3, #0
   11854:	bxeq	lr
   11858:	bx	r3
   1185c:	andeq	lr, r2, pc, lsr #17
   11860:	andeq	lr, r2, ip, lsr #17
   11864:	andeq	r0, r0, r0
   11868:	ldr	r1, [pc, #36]	; 11894 <putc_unlocked@plt+0x504>
   1186c:	ldr	r0, [pc, #36]	; 11898 <putc_unlocked@plt+0x508>
   11870:	sub	r1, r1, r0
   11874:	asr	r1, r1, #2
   11878:	add	r1, r1, r1, lsr #31
   1187c:	asrs	r1, r1, #1
   11880:	bxeq	lr
   11884:	ldr	r3, [pc, #16]	; 1189c <putc_unlocked@plt+0x50c>
   11888:	cmp	r3, #0
   1188c:	bxeq	lr
   11890:	bx	r3
   11894:	andeq	lr, r2, ip, lsr #17
   11898:	andeq	lr, r2, ip, lsr #17
   1189c:	andeq	r0, r0, r0
   118a0:	push	{r4, lr}
   118a4:	ldr	r4, [pc, #24]	; 118c4 <putc_unlocked@plt+0x534>
   118a8:	ldrb	r3, [r4]
   118ac:	cmp	r3, #0
   118b0:	popne	{r4, pc}
   118b4:	bl	11838 <putc_unlocked@plt+0x4a8>
   118b8:	mov	r3, #1
   118bc:	strb	r3, [r4]
   118c0:	pop	{r4, pc}
   118c4:	andeq	lr, r2, r0, asr #17
   118c8:	ldr	r0, [pc, #40]	; 118f8 <putc_unlocked@plt+0x568>
   118cc:	ldr	r3, [r0]
   118d0:	cmp	r3, #0
   118d4:	bne	118dc <putc_unlocked@plt+0x54c>
   118d8:	b	11868 <putc_unlocked@plt+0x4d8>
   118dc:	ldr	r3, [pc, #24]	; 118fc <putc_unlocked@plt+0x56c>
   118e0:	cmp	r3, #0
   118e4:	beq	118d8 <putc_unlocked@plt+0x548>
   118e8:	push	{r4, lr}
   118ec:	blx	r3
   118f0:	pop	{r4, lr}
   118f4:	b	11868 <putc_unlocked@plt+0x4d8>
   118f8:	andeq	sl, r2, r4, lsl pc
   118fc:	andeq	r0, r0, r0
   11900:	sub	r3, r0, #1
   11904:	cmp	r3, #126	; 0x7e
   11908:	bhi	11a18 <putc_unlocked@plt+0x688>
   1190c:	bic	r3, r0, #2
   11910:	cmp	r0, #113	; 0x71
   11914:	cmpne	r3, #116	; 0x74
   11918:	push	{r4, r5, r6, lr}
   1191c:	moveq	r2, #1
   11920:	ldreq	r3, [pc, #248]	; 11a20 <putc_unlocked@plt+0x690>
   11924:	ldr	r4, [pc, #248]	; 11a24 <putc_unlocked@plt+0x694>
   11928:	mov	r6, r1
   1192c:	streq	r2, [r3]
   11930:	ldr	r2, [r4, #16]
   11934:	ldr	r3, [r4, #12]
   11938:	mov	r5, r0
   1193c:	cmp	r2, r3
   11940:	bne	11950 <putc_unlocked@plt+0x5c0>
   11944:	mov	r1, #1
   11948:	mov	r0, r4
   1194c:	bl	1395c <_obstack_newchunk@@Base>
   11950:	ldr	r3, [r4, #12]
   11954:	add	r2, r3, #1
   11958:	str	r2, [r4, #12]
   1195c:	mov	r2, #45	; 0x2d
   11960:	strb	r2, [r3]
   11964:	ldr	r2, [r4, #16]
   11968:	ldr	r3, [r4, #12]
   1196c:	cmp	r2, r3
   11970:	bne	11980 <putc_unlocked@plt+0x5f0>
   11974:	mov	r1, #1
   11978:	ldr	r0, [pc, #164]	; 11a24 <putc_unlocked@plt+0x694>
   1197c:	bl	1395c <_obstack_newchunk@@Base>
   11980:	ldr	r3, [r4, #12]
   11984:	cmp	r6, #0
   11988:	add	r2, r3, #1
   1198c:	str	r2, [r4, #12]
   11990:	strb	r5, [r3]
   11994:	beq	11a10 <putc_unlocked@plt+0x680>
   11998:	ldr	r2, [r4, #16]
   1199c:	ldr	r3, [r4, #12]
   119a0:	cmp	r2, r3
   119a4:	bne	119b4 <putc_unlocked@plt+0x624>
   119a8:	mov	r1, #1
   119ac:	ldr	r0, [pc, #112]	; 11a24 <putc_unlocked@plt+0x694>
   119b0:	bl	1395c <_obstack_newchunk@@Base>
   119b4:	ldr	r3, [r4, #12]
   119b8:	mov	r0, r6
   119bc:	add	r2, r3, #1
   119c0:	str	r2, [r4, #12]
   119c4:	mov	r2, #32
   119c8:	strb	r2, [r3]
   119cc:	bl	11234 <strlen@plt>
   119d0:	ldr	r3, [r4, #16]
   119d4:	ldr	r2, [r4, #12]
   119d8:	sub	r3, r3, r2
   119dc:	cmp	r0, r3
   119e0:	mov	r5, r0
   119e4:	bls	119f4 <putc_unlocked@plt+0x664>
   119e8:	mov	r1, r0
   119ec:	ldr	r0, [pc, #48]	; 11a24 <putc_unlocked@plt+0x694>
   119f0:	bl	1395c <_obstack_newchunk@@Base>
   119f4:	mov	r2, r5
   119f8:	mov	r1, r6
   119fc:	ldr	r0, [r4, #12]
   11a00:	bl	11144 <memcpy@plt>
   11a04:	ldr	r3, [r4, #12]
   11a08:	add	r5, r3, r5
   11a0c:	str	r5, [r4, #12]
   11a10:	mov	r0, #0
   11a14:	pop	{r4, r5, r6, pc}
   11a18:	mov	r0, #7
   11a1c:	bx	lr
   11a20:	andeq	lr, r2, r4, asr #17
   11a24:	andeq	lr, r2, ip, lsl #18
   11a28:	cmp	r0, #86	; 0x56
   11a2c:	beq	11ad8 <putc_unlocked@plt+0x748>
   11a30:	bgt	11a44 <putc_unlocked@plt+0x6b4>
   11a34:	cmp	r0, #72	; 0x48
   11a38:	beq	11ac8 <putc_unlocked@plt+0x738>
   11a3c:	mov	r0, #7
   11a40:	bx	lr
   11a44:	cmp	r0, #104	; 0x68
   11a48:	beq	11a64 <putc_unlocked@plt+0x6d4>
   11a4c:	cmp	r0, #112	; 0x70
   11a50:	ldreq	r3, [pc, #144]	; 11ae8 <putc_unlocked@plt+0x758>
   11a54:	streq	r1, [r3, #8]
   11a58:	bne	11a3c <putc_unlocked@plt+0x6ac>
   11a5c:	mov	r0, #0
   11a60:	bx	lr
   11a64:	push	{r4, r5, r6, r7, r8, lr}
   11a68:	mov	r0, r1
   11a6c:	mov	r4, r1
   11a70:	bl	11234 <strlen@plt>
   11a74:	add	r0, r0, #1
   11a78:	bl	13fb4 <_obstack_memory_used@@Base+0x4b4>
   11a7c:	ldr	r3, [pc, #100]	; 11ae8 <putc_unlocked@plt+0x758>
   11a80:	mov	r6, r3
   11a84:	mov	r5, r0
   11a88:	str	r0, [r3, #4]
   11a8c:	ldrb	r7, [r4], #1
   11a90:	cmp	r7, #0
   11a94:	cmpne	r7, #58	; 0x3a
   11a98:	bne	11ab4 <putc_unlocked@plt+0x724>
   11a9c:	cmp	r7, #58	; 0x3a
   11aa0:	moveq	r3, r4
   11aa4:	mov	r0, #0
   11aa8:	streq	r3, [r6, #8]
   11aac:	strb	r0, [r5]
   11ab0:	pop	{r4, r5, r6, r7, r8, pc}
   11ab4:	bl	111f8 <__ctype_tolower_loc@plt>
   11ab8:	ldr	r3, [r0]
   11abc:	ldr	r3, [r3, r7, lsl #2]
   11ac0:	strb	r3, [r5], #1
   11ac4:	b	11a8c <putc_unlocked@plt+0x6fc>
   11ac8:	ldr	r3, [pc, #28]	; 11aec <putc_unlocked@plt+0x75c>
   11acc:	mov	r0, #0
   11ad0:	str	r0, [r3]
   11ad4:	bx	lr
   11ad8:	ldr	r3, [pc, #8]	; 11ae8 <putc_unlocked@plt+0x758>
   11adc:	mov	r2, #1
   11ae0:	str	r2, [r3, #12]
   11ae4:	b	11a5c <putc_unlocked@plt+0x6cc>
   11ae8:	andeq	lr, r2, r4, asr #17
   11aec:	andeq	fp, r2, r8, lsl r1
   11af0:	ldr	r3, [pc, #80]	; 11b48 <putc_unlocked@plt+0x7b8>
   11af4:	push	{r4, r5, r6, lr}
   11af8:	cmp	r0, r3
   11afc:	mov	r5, r0
   11b00:	mov	r4, r1
   11b04:	ble	11b10 <putc_unlocked@plt+0x780>
   11b08:	ldr	r0, [pc, #60]	; 11b4c <putc_unlocked@plt+0x7bc>
   11b0c:	bl	111c8 <puts@plt>
   11b10:	mov	r1, r4
   11b14:	ldr	r0, [r1, #4]
   11b18:	cmp	r0, #0
   11b1c:	bne	11b28 <putc_unlocked@plt+0x798>
   11b20:	ldr	r0, [pc, #40]	; 11b50 <putc_unlocked@plt+0x7c0>
   11b24:	pop	{r4, r5, r6, pc}
   11b28:	ldrh	r3, [r1]
   11b2c:	cmp	r5, r3
   11b30:	blt	11b40 <putc_unlocked@plt+0x7b0>
   11b34:	ldrh	r3, [r1, #2]
   11b38:	cmp	r5, r3
   11b3c:	pople	{r4, r5, r6, pc}
   11b40:	add	r1, r1, #8
   11b44:	b	11b14 <putc_unlocked@plt+0x784>
   11b48:	andeq	r1, r6, pc, asr #7
   11b4c:	ldrdeq	r8, [r1], -r7
   11b50:	andeq	r8, r1, r8, asr #15
   11b54:	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   11b58:	mov	r6, r1
   11b5c:	mov	r5, r0
   11b60:	add	r1, sp, #4
   11b64:	mov	r0, r6
   11b68:	bl	110cc <inet_aton@plt>
   11b6c:	sub	r5, r5, #4
   11b70:	mov	r7, r0
   11b74:	ldr	r4, [r5, #4]!
   11b78:	cmp	r4, #0
   11b7c:	moveq	r0, r4
   11b80:	beq	11b9c <putc_unlocked@plt+0x80c>
   11b84:	mov	r1, r6
   11b88:	mov	r0, r4
   11b8c:	bl	110d8 <strcmp@plt>
   11b90:	cmp	r0, #0
   11b94:	bne	11ba4 <putc_unlocked@plt+0x814>
   11b98:	mov	r0, #1
   11b9c:	add	sp, sp, #12
   11ba0:	pop	{r4, r5, r6, r7, pc}
   11ba4:	cmp	r7, #0
   11ba8:	beq	11b74 <putc_unlocked@plt+0x7e4>
   11bac:	mov	r0, r4
   11bb0:	bl	1133c <gethostbyname@plt>
   11bb4:	cmp	r0, #0
   11bb8:	beq	11b74 <putc_unlocked@plt+0x7e4>
   11bbc:	ldr	r3, [r0, #16]
   11bc0:	ldr	r1, [sp, #4]
   11bc4:	sub	r3, r3, #4
   11bc8:	ldr	r2, [r3, #4]!
   11bcc:	cmp	r2, #0
   11bd0:	beq	11b74 <putc_unlocked@plt+0x7e4>
   11bd4:	ldr	r2, [r2]
   11bd8:	cmp	r2, r1
   11bdc:	bne	11bc8 <putc_unlocked@plt+0x838>
   11be0:	b	11b98 <putc_unlocked@plt+0x808>
   11be4:	push	{r4, r5, r6, r7, r8, lr}
   11be8:	mov	r6, r0
   11bec:	mov	r0, r1
   11bf0:	mov	r5, r2
   11bf4:	mov	r8, r1
   11bf8:	bl	11234 <strlen@plt>
   11bfc:	mov	r4, r0
   11c00:	mov	r0, r5
   11c04:	bl	11234 <strlen@plt>
   11c08:	add	r0, r4, r0
   11c0c:	add	r0, r0, #13
   11c10:	bl	13fb4 <_obstack_memory_used@@Base+0x4b4>
   11c14:	mov	r3, #0
   11c18:	mov	r1, r6
   11c1c:	strb	r3, [r0]
   11c20:	mov	r4, r0
   11c24:	ldr	r0, [pc, #376]	; 11da4 <putc_unlocked@plt+0xa14>
   11c28:	bl	11b54 <putc_unlocked@plt+0x7c4>
   11c2c:	cmp	r0, #0
   11c30:	bne	11d90 <putc_unlocked@plt+0xa00>
   11c34:	mov	r1, r6
   11c38:	ldr	r0, [pc, #360]	; 11da8 <putc_unlocked@plt+0xa18>
   11c3c:	bl	11b54 <putc_unlocked@plt+0x7c4>
   11c40:	subs	r7, r0, #0
   11c44:	bne	11d90 <putc_unlocked@plt+0xa00>
   11c48:	ldrb	r3, [r8]
   11c4c:	cmp	r3, #0
   11c50:	beq	11d78 <putc_unlocked@plt+0x9e8>
   11c54:	cmp	r7, #0
   11c58:	bne	11d6c <putc_unlocked@plt+0x9dc>
   11c5c:	ldr	r1, [pc, #328]	; 11dac <putc_unlocked@plt+0xa1c>
   11c60:	mov	r0, r6
   11c64:	bl	110d8 <strcmp@plt>
   11c68:	cmp	r0, #0
   11c6c:	beq	11d6c <putc_unlocked@plt+0x9dc>
   11c70:	ldr	r0, [pc, #312]	; 11db0 <putc_unlocked@plt+0xa20>
   11c74:	bl	111c8 <puts@plt>
   11c78:	ldr	r1, [pc, #308]	; 11db4 <putc_unlocked@plt+0xa24>
   11c7c:	mov	r0, r6
   11c80:	bl	110d8 <strcmp@plt>
   11c84:	cmp	r0, #0
   11c88:	beq	11ca0 <putc_unlocked@plt+0x910>
   11c8c:	ldr	r1, [pc, #292]	; 11db8 <putc_unlocked@plt+0xa28>
   11c90:	mov	r0, r6
   11c94:	bl	110d8 <strcmp@plt>
   11c98:	cmp	r0, #0
   11c9c:	bne	11cd0 <putc_unlocked@plt+0x940>
   11ca0:	mov	r2, #2
   11ca4:	ldr	r1, [pc, #272]	; 11dbc <putc_unlocked@plt+0xa2c>
   11ca8:	mov	r0, r5
   11cac:	bl	11264 <strncasecmp@plt>
   11cb0:	cmp	r0, #0
   11cb4:	bne	11cd0 <putc_unlocked@plt+0x940>
   11cb8:	ldrb	r3, [r5, #2]
   11cbc:	sub	r3, r3, #48	; 0x30
   11cc0:	cmp	r3, #9
   11cc4:	addls	r2, r5, #2
   11cc8:	ldrls	r1, [pc, #240]	; 11dc0 <putc_unlocked@plt+0xa30>
   11ccc:	bls	11d5c <putc_unlocked@plt+0x9cc>
   11cd0:	ldr	r1, [pc, #212]	; 11dac <putc_unlocked@plt+0xa1c>
   11cd4:	mov	r0, r6
   11cd8:	bl	110d8 <strcmp@plt>
   11cdc:	cmp	r0, #0
   11ce0:	moveq	r2, r5
   11ce4:	ldreq	r1, [pc, #216]	; 11dc4 <putc_unlocked@plt+0xa34>
   11ce8:	beq	11d5c <putc_unlocked@plt+0x9cc>
   11cec:	ldr	r1, [pc, #212]	; 11dc8 <putc_unlocked@plt+0xa38>
   11cf0:	mov	r0, r6
   11cf4:	bl	110d8 <strcmp@plt>
   11cf8:	cmp	r0, #0
   11cfc:	bne	11d1c <putc_unlocked@plt+0x98c>
   11d00:	mov	r1, #32
   11d04:	mov	r0, r5
   11d08:	bl	11240 <strchr@plt>
   11d0c:	cmp	r0, #0
   11d10:	moveq	r2, r5
   11d14:	ldreq	r1, [pc, #176]	; 11dcc <putc_unlocked@plt+0xa3c>
   11d18:	beq	11d5c <putc_unlocked@plt+0x9cc>
   11d1c:	ldr	r1, [pc, #172]	; 11dd0 <putc_unlocked@plt+0xa40>
   11d20:	mov	r0, r6
   11d24:	bl	110d8 <strcmp@plt>
   11d28:	cmp	r0, #0
   11d2c:	bne	11d80 <putc_unlocked@plt+0x9f0>
   11d30:	ldr	r0, [pc, #156]	; 11dd4 <putc_unlocked@plt+0xa44>
   11d34:	bl	111bc <getenv@plt>
   11d38:	cmp	r0, #0
   11d3c:	beq	11d54 <putc_unlocked@plt+0x9c4>
   11d40:	mov	r2, #2
   11d44:	ldr	r1, [pc, #140]	; 11dd8 <putc_unlocked@plt+0xa48>
   11d48:	bl	11354 <strncmp@plt>
   11d4c:	cmp	r0, #0
   11d50:	beq	11d80 <putc_unlocked@plt+0x9f0>
   11d54:	ldr	r1, [pc, #128]	; 11ddc <putc_unlocked@plt+0xa4c>
   11d58:	mov	r2, r5
   11d5c:	mov	r0, r4
   11d60:	bl	112d0 <sprintf@plt>
   11d64:	mov	r0, r4
   11d68:	pop	{r4, r5, r6, r7, r8, pc}
   11d6c:	mov	r1, r8
   11d70:	mov	r0, r4
   11d74:	bl	11198 <strcat@plt>
   11d78:	cmp	r7, #0
   11d7c:	beq	11c78 <putc_unlocked@plt+0x8e8>
   11d80:	mov	r1, r5
   11d84:	mov	r0, r4
   11d88:	bl	11198 <strcat@plt>
   11d8c:	b	11d64 <putc_unlocked@plt+0x9d4>
   11d90:	ldr	r1, [pc, #72]	; 11de0 <putc_unlocked@plt+0xa50>
   11d94:	mov	r0, r4
   11d98:	bl	11198 <strcat@plt>
   11d9c:	mov	r7, #1
   11da0:	b	11c48 <putc_unlocked@plt+0x8b8>
   11da4:	andeq	fp, r2, ip, lsl r1
   11da8:	andeq	fp, r2, r8, asr r1
   11dac:	andeq	r8, r1, r7, lsl #16
   11db0:	andeq	r8, r1, r9, lsl r8
   11db4:	andeq	r8, r1, r8, asr #15
   11db8:	andeq	r8, r1, pc, asr #16
   11dbc:	andeq	r8, r1, sp, asr r8
   11dc0:	andeq	r8, r1, r0, ror #16
   11dc4:	andeq	r8, r1, r5, ror #16
   11dc8:	andeq	r8, r1, r2, ror r8
   11dcc:	andeq	r8, r1, r6, lsl #17
   11dd0:	muleq	r1, r0, r8
   11dd4:	andeq	r8, r1, r0, lsr #17
   11dd8:	andeq	r8, r1, r5, lsr #17
   11ddc:	andeq	r8, r1, r8, lsr #17
   11de0:	andeq	r8, r1, sp, lsr #17
   11de4:	b	1136c <close@plt>
   11de8:	push	{r4, r5, r6, r7, r8, lr}
   11dec:	mov	r3, r0
   11df0:	mov	r7, r0
   11df4:	mov	r6, r1
   11df8:	mov	r4, r3
   11dfc:	add	r3, r3, #1
   11e00:	ldrb	r2, [r4]
   11e04:	cmp	r2, #0
   11e08:	bne	11df8 <putc_unlocked@plt+0xa68>
   11e0c:	sub	r4, r4, #1
   11e10:	mov	r3, r6
   11e14:	mov	r5, r3
   11e18:	add	r3, r3, #1
   11e1c:	ldrb	r2, [r5]
   11e20:	cmp	r2, #0
   11e24:	bne	11e14 <putc_unlocked@plt+0xa84>
   11e28:	cmp	r7, r4
   11e2c:	sub	r5, r5, #1
   11e30:	movhi	r0, #0
   11e34:	movls	r0, #1
   11e38:	cmp	r5, r6
   11e3c:	movcc	r0, #0
   11e40:	cmp	r0, #0
   11e44:	mov	r8, r4
   11e48:	popeq	{r4, r5, r6, r7, r8, pc}
   11e4c:	bl	111f8 <__ctype_tolower_loc@plt>
   11e50:	ldrb	r1, [r8]
   11e54:	ldrb	r3, [r5]
   11e58:	sub	r4, r4, #1
   11e5c:	ldr	r2, [r0]
   11e60:	ldr	r2, [r2, r1, lsl #2]
   11e64:	cmp	r2, r3
   11e68:	beq	11e74 <putc_unlocked@plt+0xae4>
   11e6c:	mov	r0, #0
   11e70:	pop	{r4, r5, r6, r7, r8, pc}
   11e74:	cmp	r5, r6
   11e78:	bne	11e28 <putc_unlocked@plt+0xa98>
   11e7c:	mov	r0, #1
   11e80:	pop	{r4, r5, r6, r7, r8, pc}
   11e84:	push	{r4, r5, r6, lr}
   11e88:	mov	r5, r0
   11e8c:	sub	r4, r1, #4
   11e90:	ldr	r1, [r4, #4]!
   11e94:	cmp	r1, #0
   11e98:	bne	11ea4 <putc_unlocked@plt+0xb14>
   11e9c:	mov	r0, r1
   11ea0:	pop	{r4, r5, r6, pc}
   11ea4:	mov	r0, r5
   11ea8:	bl	11de8 <putc_unlocked@plt+0xa58>
   11eac:	cmp	r0, #0
   11eb0:	beq	11e90 <putc_unlocked@plt+0xb00>
   11eb4:	mov	r0, #1
   11eb8:	pop	{r4, r5, r6, pc}
   11ebc:	cmp	r0, #0
   11ec0:	push	{r0, r1, r2, r3, r4, r5, r6, lr}
   11ec4:	bne	11ed4 <putc_unlocked@plt+0xb44>
   11ec8:	mov	r0, #0
   11ecc:	add	sp, sp, #28
   11ed0:	pop	{pc}		; (ldr pc, [sp], #4)
   11ed4:	add	r3, sp, #20
   11ed8:	str	r3, [sp, #4]
   11edc:	add	r3, sp, #16
   11ee0:	str	r3, [sp]
   11ee4:	add	r2, sp, #8
   11ee8:	add	r3, sp, #12
   11eec:	ldr	r1, [pc, #44]	; 11f20 <putc_unlocked@plt+0xb90>
   11ef0:	bl	112c4 <sscanf@plt>
   11ef4:	cmp	r0, #4
   11ef8:	bne	11ec8 <putc_unlocked@plt+0xb38>
   11efc:	ldr	r0, [sp, #12]
   11f00:	ldr	r3, [sp, #8]
   11f04:	lsl	r0, r0, #16
   11f08:	add	r0, r0, r3, lsl #24
   11f0c:	ldr	r3, [sp, #16]
   11f10:	add	r0, r0, r3, lsl #8
   11f14:	ldr	r3, [sp, #20]
   11f18:	add	r0, r0, r3
   11f1c:	b	11ecc <putc_unlocked@plt+0xb3c>
   11f20:			; <UNDEFINED> instruction: 0x000188b6
   11f24:	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   11f28:	mov	r4, r0
   11f2c:	ldrb	r3, [r4]
   11f30:	cmp	r3, #0
   11f34:	beq	12190 <putc_unlocked@plt+0xe00>
   11f38:	ldrb	r3, [r4, #1]
   11f3c:	cmp	r3, #32
   11f40:	beq	11fc8 <putc_unlocked@plt+0xc38>
   11f44:	mov	r1, #64	; 0x40
   11f48:	mov	r0, r4
   11f4c:	bl	11240 <strchr@plt>
   11f50:	subs	r5, r0, #0
   11f54:	bne	11fec <putc_unlocked@plt+0xc5c>
   11f58:	ldr	r1, [pc, #568]	; 12198 <putc_unlocked@plt+0xe08>
   11f5c:	mov	r0, r4
   11f60:	bl	1130c <strpbrk@plt>
   11f64:	cmp	r0, #0
   11f68:	bne	11ff4 <putc_unlocked@plt+0xc64>
   11f6c:	mov	r3, r4
   11f70:	mov	r5, r3
   11f74:	add	r3, r3, #1
   11f78:	ldrb	r2, [r5]
   11f7c:	cmp	r2, #0
   11f80:	bne	11f70 <putc_unlocked@plt+0xbe0>
   11f84:	mov	r2, #2
   11f88:	ldr	r1, [pc, #524]	; 1219c <putc_unlocked@plt+0xe0c>
   11f8c:	mov	r0, r4
   11f90:	bl	11264 <strncasecmp@plt>
   11f94:	cmp	r0, #0
   11f98:	bne	11fd0 <putc_unlocked@plt+0xc40>
   11f9c:	ldrb	r3, [r4, #2]
   11fa0:	sub	r2, r3, #48	; 0x30
   11fa4:	cmp	r3, #32
   11fa8:	cmpne	r2, #9
   11fac:	bhi	11fd0 <putc_unlocked@plt+0xc40>
   11fb0:	add	r0, r4, #2
   11fb4:	bl	112f4 <atoi@plt>
   11fb8:	ldr	r1, [pc, #480]	; 121a0 <putc_unlocked@plt+0xe10>
   11fbc:	bl	11af0 <putc_unlocked@plt+0x760>
   11fc0:	add	sp, sp, #12
   11fc4:	pop	{r4, r5, r6, r7, pc}
   11fc8:	add	r4, r4, #2
   11fcc:	b	11f2c <putc_unlocked@plt+0xb9c>
   11fd0:	mov	r2, #2
   11fd4:	ldr	r1, [pc, #456]	; 121a4 <putc_unlocked@plt+0xe14>
   11fd8:	sub	r0, r5, #2
   11fdc:	bl	11264 <strncasecmp@plt>
   11fe0:	cmp	r0, #0
   11fe4:	ldreq	r0, [pc, #444]	; 121a8 <putc_unlocked@plt+0xe18>
   11fe8:	beq	11fc0 <putc_unlocked@plt+0xc30>
   11fec:	ldr	r0, [pc, #440]	; 121ac <putc_unlocked@plt+0xe1c>
   11ff0:	b	11fc0 <putc_unlocked@plt+0xc30>
   11ff4:	mov	r1, #58	; 0x3a
   11ff8:	mov	r0, r4
   11ffc:	bl	11240 <strchr@plt>
   12000:	cmp	r0, #0
   12004:	beq	12080 <putc_unlocked@plt+0xcf0>
   12008:	add	r3, sp, #8
   1200c:	mov	r2, sp
   12010:	str	r5, [r3, #-4]!
   12014:	ldr	r1, [pc, #404]	; 121b0 <putc_unlocked@plt+0xe20>
   12018:	mov	r0, r4
   1201c:	str	r5, [sp]
   12020:	bl	112c4 <sscanf@plt>
   12024:	cmp	r0, #0
   12028:	beq	11fec <putc_unlocked@plt+0xc5c>
   1202c:	ldr	r3, [sp]
   12030:	ldrh	r2, [sp, #4]
   12034:	orr	r2, r2, r3, lsl #16
   12038:	ldr	r3, [pc, #372]	; 121b4 <putc_unlocked@plt+0xe24>
   1203c:	ldr	r0, [r3, #8]
   12040:	mov	r1, r3
   12044:	cmp	r0, #0
   12048:	bne	12068 <putc_unlocked@plt+0xcd8>
   1204c:	ldr	r3, [pc, #356]	; 121b8 <putc_unlocked@plt+0xe28>
   12050:	ldr	r3, [r3, #12]
   12054:	cmp	r3, #0
   12058:	ldrne	r0, [pc, #348]	; 121bc <putc_unlocked@plt+0xe2c>
   1205c:	bne	12110 <putc_unlocked@plt+0xd80>
   12060:	ldr	r0, [pc, #344]	; 121c0 <putc_unlocked@plt+0xe30>
   12064:	b	11fc0 <putc_unlocked@plt+0xc30>
   12068:	ldr	r1, [r1, #4]
   1206c:	ldr	ip, [r3], #12
   12070:	and	r1, r1, r2
   12074:	cmp	r1, ip
   12078:	bne	1203c <putc_unlocked@plt+0xcac>
   1207c:	b	11fc0 <putc_unlocked@plt+0xc30>
   12080:	mov	r0, r4
   12084:	bl	11ebc <putc_unlocked@plt+0xb2c>
   12088:	subs	r5, r0, #0
   1208c:	ldreq	r6, [pc, #304]	; 121c4 <putc_unlocked@plt+0xe34>
   12090:	ldrne	r3, [pc, #304]	; 121c8 <putc_unlocked@plt+0xe38>
   12094:	bne	120ec <putc_unlocked@plt+0xd5c>
   12098:	ldr	r1, [r6, r5, lsl #2]
   1209c:	cmp	r1, #0
   120a0:	bne	12118 <putc_unlocked@plt+0xd88>
   120a4:	mov	r1, #46	; 0x2e
   120a8:	mov	r0, r4
   120ac:	bl	11240 <strchr@plt>
   120b0:	subs	r5, r0, #0
   120b4:	ldreq	r7, [pc, #272]	; 121cc <putc_unlocked@plt+0xe3c>
   120b8:	beq	1216c <putc_unlocked@plt+0xddc>
   120bc:	ldr	r3, [pc, #244]	; 121b8 <putc_unlocked@plt+0xe28>
   120c0:	ldr	r3, [r3, #12]
   120c4:	cmp	r3, #0
   120c8:	beq	11fec <putc_unlocked@plt+0xc5c>
   120cc:	ldr	r0, [pc, #252]	; 121d0 <putc_unlocked@plt+0xe40>
   120d0:	bl	111c8 <puts@plt>
   120d4:	b	11fec <putc_unlocked@plt+0xc5c>
   120d8:	ldr	r2, [r2, #4]
   120dc:	ldr	r1, [r3], #12
   120e0:	and	r2, r2, r5
   120e4:	cmp	r2, r1
   120e8:	beq	11fc0 <putc_unlocked@plt+0xc30>
   120ec:	ldr	r0, [r3, #8]
   120f0:	mov	r2, r3
   120f4:	cmp	r0, #0
   120f8:	bne	120d8 <putc_unlocked@plt+0xd48>
   120fc:	ldr	r3, [pc, #180]	; 121b8 <putc_unlocked@plt+0xe28>
   12100:	ldr	r3, [r3, #12]
   12104:	cmp	r3, #0
   12108:	ldrne	r0, [pc, #196]	; 121d4 <putc_unlocked@plt+0xe44>
   1210c:	beq	12060 <putc_unlocked@plt+0xcd0>
   12110:	bl	111c8 <puts@plt>
   12114:	b	12060 <putc_unlocked@plt+0xcd0>
   12118:	mov	r0, r4
   1211c:	bl	11de8 <putc_unlocked@plt+0xa58>
   12120:	cmp	r0, #0
   12124:	ldrne	r0, [pc, #172]	; 121d8 <putc_unlocked@plt+0xe48>
   12128:	addne	r5, r0, r5, lsl #2
   1212c:	ldrne	r0, [r5, #3144]	; 0xc48
   12130:	bne	11fc0 <putc_unlocked@plt+0xc30>
   12134:	add	r5, r5, #2
   12138:	b	12098 <putc_unlocked@plt+0xd08>
   1213c:	mov	r0, r6
   12140:	bl	11234 <strlen@plt>
   12144:	mov	r1, r6
   12148:	mov	r2, r0
   1214c:	mov	r0, r4
   12150:	bl	11264 <strncasecmp@plt>
   12154:	cmp	r0, #0
   12158:	ldreq	r0, [pc, #124]	; 121dc <putc_unlocked@plt+0xe4c>
   1215c:	addeq	r5, r0, r5, lsl #2
   12160:	ldreq	r0, [r5, #-3048]	; 0xfffff418
   12164:	beq	11fc0 <putc_unlocked@plt+0xc30>
   12168:	add	r5, r5, #2
   1216c:	ldr	r6, [r7, r5, lsl #2]
   12170:	cmp	r6, #0
   12174:	bne	1213c <putc_unlocked@plt+0xdac>
   12178:	ldr	r3, [pc, #56]	; 121b8 <putc_unlocked@plt+0xe28>
   1217c:	ldr	r3, [r3, #12]
   12180:	cmp	r3, #0
   12184:	beq	12060 <putc_unlocked@plt+0xcd0>
   12188:	ldr	r0, [pc, #80]	; 121e0 <putc_unlocked@plt+0xe50>
   1218c:	b	12110 <putc_unlocked@plt+0xd80>
   12190:	ldr	r0, [pc, #76]	; 121e4 <putc_unlocked@plt+0xe54>
   12194:	b	11fc0 <putc_unlocked@plt+0xc30>
   12198:	ldrdeq	r8, [r1], -r1
   1219c:	ldrdeq	r9, [r1], -r3
   121a0:	andeq	fp, r2, r8, ror r1
   121a4:	muleq	r1, sp, r8
   121a8:	muleq	r1, r0, r8
   121ac:	andeq	r9, r1, r3, asr #1
   121b0:	ldrdeq	r8, [r1], -r5
   121b4:	andeq	fp, r2, r8, asr r2
   121b8:	andeq	lr, r2, r4, asr #17
   121bc:	ldrdeq	r8, [r1], -ip
   121c0:	andeq	r8, r1, r8, asr #15
   121c4:	andeq	sp, r2, r4, asr sp
   121c8:	andeq	fp, r2, r8, ror r3
   121cc:	andeq	lr, r2, ip, lsl r5
   121d0:	andeq	r8, r1, pc, asr #19
   121d4:	andeq	r8, r1, r6, lsr r9
   121d8:	andeq	sp, r2, r0, lsl r1
   121dc:	andeq	pc, r2, r8, lsl #2
   121e0:	andeq	r8, r1, ip, lsl #19
   121e4:	andeq	r8, r1, r2, asr #17
   121e8:	ldr	r4, [pc, #64]	; 12230 <putc_unlocked@plt+0xea0>
   121ec:	push	{r0, r1, r2, r3}
   121f0:	push	{r0, r1, r2, lr}
   121f4:	add	r2, sp, #20
   121f8:	ldr	r1, [sp, #16]
   121fc:	ldr	r0, [r4]
   12200:	str	r2, [sp, #4]
   12204:	bl	112ac <vfprintf@plt>
   12208:	bl	11258 <__errno_location@plt>
   1220c:	ldr	r4, [r4]
   12210:	ldr	r0, [r0]
   12214:	bl	111ec <strerror@plt>
   12218:	ldr	r1, [pc, #20]	; 12234 <putc_unlocked@plt+0xea4>
   1221c:	mov	r2, r0
   12220:	mov	r0, r4
   12224:	bl	1124c <fprintf@plt>
   12228:	mov	r0, #1
   1222c:	bl	11228 <exit@plt>
   12230:			; <UNDEFINED> instruction: 0x0002e8b8
   12234:	andeq	sl, r1, lr, ror #12
   12238:	push	{r4, r5, r6, r7, r8, r9, lr}
   1223c:	mov	r4, r0
   12240:	sub	sp, sp, #108	; 0x6c
   12244:	mov	r0, r1
   12248:	mov	r6, r1
   1224c:	bl	11234 <strlen@plt>
   12250:	add	r0, r0, #4
   12254:	bl	13fb4 <_obstack_memory_used@@Base+0x4b4>
   12258:	mov	r3, #61	; 0x3d
   1225c:	mov	r1, r6
   12260:	mov	r5, r0
   12264:	strb	r3, [r0], #1
   12268:	bl	111a4 <strcpy@plt>
   1226c:	ldr	r1, [pc, #296]	; 1239c <putc_unlocked@plt+0x100c>
   12270:	mov	r0, r5
   12274:	bl	11198 <strcat@plt>
   12278:	ldr	r1, [pc, #288]	; 123a0 <putc_unlocked@plt+0x1010>
   1227c:	mov	r0, r4
   12280:	bl	1109c <fdopen@plt>
   12284:	mov	r6, r0
   12288:	mov	r0, r5
   1228c:	bl	11234 <strlen@plt>
   12290:	mov	r1, r5
   12294:	mov	r2, r0
   12298:	mov	r0, r4
   1229c:	bl	11288 <write@plt>
   122a0:	cmp	r0, #0
   122a4:	blt	122e4 <putc_unlocked@plt+0xf54>
   122a8:	ldr	r7, [pc, #244]	; 123a4 <putc_unlocked@plt+0x1014>
   122ac:	ldr	r8, [pc, #244]	; 123a8 <putc_unlocked@plt+0x1018>
   122b0:	mov	r9, #0
   122b4:	mov	r2, r6
   122b8:	mov	r1, #100	; 0x64
   122bc:	add	r0, sp, #4
   122c0:	bl	11120 <fgets@plt>
   122c4:	cmp	r0, #0
   122c8:	bne	122ec <putc_unlocked@plt+0xf5c>
   122cc:	mov	r0, r6
   122d0:	bl	1112c <ferror@plt>
   122d4:	cmp	r0, #0
   122d8:	beq	12388 <putc_unlocked@plt+0xff8>
   122dc:	ldr	r0, [pc, #200]	; 123ac <putc_unlocked@plt+0x101c>
   122e0:	b	122e8 <putc_unlocked@plt+0xf58>
   122e4:	ldr	r0, [pc, #196]	; 123b0 <putc_unlocked@plt+0x1020>
   122e8:	bl	121e8 <putc_unlocked@plt+0xe58>
   122ec:	mov	r2, #16
   122f0:	mov	r1, r7
   122f4:	add	r0, sp, #4
   122f8:	bl	11354 <strncmp@plt>
   122fc:	cmp	r0, #0
   12300:	cmpeq	r9, #0
   12304:	bne	12370 <putc_unlocked@plt+0xfe0>
   12308:	add	r2, sp, #4
   1230c:	mov	r3, r2
   12310:	add	r2, r2, #1
   12314:	ldrb	r1, [r3]
   12318:	cmp	r1, #58	; 0x3a
   1231c:	bne	1230c <putc_unlocked@plt+0xf7c>
   12320:	mov	r3, r2
   12324:	mov	r4, r3
   12328:	add	r3, r3, #1
   1232c:	ldrb	r2, [r4]
   12330:	cmp	r2, #32
   12334:	beq	12324 <putc_unlocked@plt+0xf94>
   12338:	mov	r0, r4
   1233c:	bl	11234 <strlen@plt>
   12340:	sub	r4, r4, #1
   12344:	add	r0, r0, #1
   12348:	bl	13fb4 <_obstack_memory_used@@Base+0x4b4>
   1234c:	mov	r9, r0
   12350:	mov	r2, r0
   12354:	ldrb	r3, [r4, #1]!
   12358:	cmp	r3, #10
   1235c:	cmpne	r3, #13
   12360:	movne	r1, #1
   12364:	moveq	r1, #0
   12368:	bne	12380 <putc_unlocked@plt+0xff0>
   1236c:	strb	r1, [r2]
   12370:	ldr	r1, [r8]
   12374:	add	r0, sp, #4
   12378:	bl	11348 <fputs@plt>
   1237c:	b	122b4 <putc_unlocked@plt+0xf24>
   12380:	strb	r3, [r2], #1
   12384:	b	12354 <putc_unlocked@plt+0xfc4>
   12388:	mov	r0, r5
   1238c:	bl	13710 <argp_parse@@Base+0xa9c>
   12390:	mov	r0, r9
   12394:	add	sp, sp, #108	; 0x6c
   12398:	pop	{r4, r5, r6, r7, r8, r9, pc}
   1239c:	andeq	r8, r1, fp, lsl #20
   123a0:	muleq	r1, lr, r1
   123a4:	andeq	r8, r1, r4, lsl sl
   123a8:			; <UNDEFINED> instruction: 0x0002e8bc
   123ac:	andeq	r8, r1, r5, lsr #20
   123b0:	andeq	r8, r1, lr, lsl #20
   123b4:	ldr	r4, [pc, #44]	; 123e8 <putc_unlocked@plt+0x1058>
   123b8:	push	{r0, r1, r2, r3}
   123bc:	push	{r0, r1, r2, lr}
   123c0:	add	r2, sp, #20
   123c4:	ldr	r1, [sp, #16]
   123c8:	ldr	r0, [r4]
   123cc:	str	r2, [sp, #4]
   123d0:	bl	112ac <vfprintf@plt>
   123d4:	ldr	r1, [r4]
   123d8:	mov	r0, #10
   123dc:	bl	112b8 <fputc@plt>
   123e0:	mov	r0, #1
   123e4:	bl	11228 <exit@plt>
   123e8:			; <UNDEFINED> instruction: 0x0002e8b8
   123ec:	push	{r4, r5, r6, lr}
   123f0:	sub	sp, sp, #40	; 0x28
   123f4:	mov	r4, r1
   123f8:	mov	r6, r0
   123fc:	mov	r2, #32
   12400:	mov	r1, #0
   12404:	add	r0, sp, #8
   12408:	bl	1127c <memset@plt>
   1240c:	cmp	r4, #0
   12410:	mov	r3, #1
   12414:	str	r3, [sp, #16]
   12418:	ldr	r1, [pc, #196]	; 124e4 <putc_unlocked@plt+0x1154>
   1241c:	add	r3, sp, #4
   12420:	movne	r1, r4
   12424:	add	r2, sp, #8
   12428:	mov	r0, r6
   1242c:	bl	11324 <getaddrinfo@plt>
   12430:	cmp	r0, #0
   12434:	beq	1246c <putc_unlocked@plt+0x10dc>
   12438:	cmp	r4, #0
   1243c:	ldr	r1, [pc, #164]	; 124e8 <putc_unlocked@plt+0x1158>
   12440:	add	r3, sp, #4
   12444:	movne	r1, r4
   12448:	add	r2, sp, #8
   1244c:	mov	r0, r6
   12450:	bl	11324 <getaddrinfo@plt>
   12454:	cmp	r0, #0
   12458:	beq	1246c <putc_unlocked@plt+0x10dc>
   1245c:	bl	11114 <gai_strerror@plt>
   12460:	mov	r1, r0
   12464:	ldr	r0, [pc, #128]	; 124ec <putc_unlocked@plt+0x115c>
   12468:	bl	123b4 <putc_unlocked@plt+0x1024>
   1246c:	ldr	r4, [sp, #4]
   12470:	ldr	r3, [sp, #4]
   12474:	cmp	r3, #0
   12478:	bne	12490 <putc_unlocked@plt+0x1100>
   1247c:	ldr	r3, [sp, #4]
   12480:	cmp	r3, #0
   12484:	bne	124d0 <putc_unlocked@plt+0x1140>
   12488:	ldr	r0, [pc, #96]	; 124f0 <putc_unlocked@plt+0x1160>
   1248c:	bl	121e8 <putc_unlocked@plt+0xe58>
   12490:	ldmib	r3, {r0, r1, r2}
   12494:	bl	11330 <socket@plt>
   12498:	subs	r5, r0, #0
   1249c:	blt	124c0 <putc_unlocked@plt+0x1130>
   124a0:	ldr	r3, [sp, #4]
   124a4:	ldr	r2, [r3, #16]
   124a8:	ldr	r1, [r3, #20]
   124ac:	bl	11378 <connect@plt>
   124b0:	cmp	r0, #0
   124b4:	beq	1247c <putc_unlocked@plt+0x10ec>
   124b8:	mov	r0, r5
   124bc:	bl	1136c <close@plt>
   124c0:	ldr	r3, [sp, #4]
   124c4:	ldr	r3, [r3, #28]
   124c8:	str	r3, [sp, #4]
   124cc:	b	12470 <putc_unlocked@plt+0x10e0>
   124d0:	mov	r0, r4
   124d4:	bl	11318 <freeaddrinfo@plt>
   124d8:	mov	r0, r5
   124dc:	add	sp, sp, #40	; 0x28
   124e0:	pop	{r4, r5, r6, pc}
   124e4:	andeq	r9, r1, r0, asr sp
   124e8:	andeq	r8, r1, fp, lsr #20
   124ec:	andeq	r8, r1, r3, lsr sl
   124f0:	andeq	r8, r1, r3, asr #20
   124f4:	ldr	r3, [pc, #476]	; 126d8 <putc_unlocked@plt+0x1348>
   124f8:	push	{r4, r5, r6, r7, r8, lr}
   124fc:	mov	r5, r1
   12500:	sub	sp, sp, #1504	; 0x5e0
   12504:	ldr	r1, [pc, #464]	; 126dc <putc_unlocked@plt+0x134c>
   12508:	ldr	r4, [r3]
   1250c:	mov	r6, r0
   12510:	bl	1109c <fdopen@plt>
   12514:	mov	r7, r0
   12518:	mov	r0, r5
   1251c:	bl	11234 <strlen@plt>
   12520:	mov	r1, r5
   12524:	mov	r2, r0
   12528:	mov	r0, r6
   1252c:	bl	11288 <write@plt>
   12530:	cmp	r0, #0
   12534:	movge	r5, #0
   12538:	ldrlt	r0, [pc, #416]	; 126e0 <putc_unlocked@plt+0x1350>
   1253c:	blt	1256c <putc_unlocked@plt+0x11dc>
   12540:	mov	r2, r7
   12544:	mov	r1, #200	; 0xc8
   12548:	add	r0, sp, #24
   1254c:	bl	11120 <fgets@plt>
   12550:	cmp	r0, #0
   12554:	bne	12570 <putc_unlocked@plt+0x11e0>
   12558:	mov	r0, r7
   1255c:	bl	1112c <ferror@plt>
   12560:	cmp	r0, #0
   12564:	beq	126c0 <putc_unlocked@plt+0x1330>
   12568:	ldr	r0, [pc, #372]	; 126e4 <putc_unlocked@plt+0x1354>
   1256c:	bl	121e8 <putc_unlocked@plt+0xe58>
   12570:	cmp	r4, #1
   12574:	bne	125a8 <putc_unlocked@plt+0x1218>
   12578:	ldr	r3, [pc, #360]	; 126e8 <putc_unlocked@plt+0x1358>
   1257c:	add	r3, r3, r5, lsl #2
   12580:	ldr	r4, [r3, #-2976]	; 0xfffff460
   12584:	mov	r0, r4
   12588:	bl	11234 <strlen@plt>
   1258c:	mov	r1, r4
   12590:	mov	r2, r0
   12594:	add	r0, sp, #24
   12598:	bl	11354 <strncmp@plt>
   1259c:	adds	r4, r0, #0
   125a0:	movne	r4, #1
   125a4:	b	12540 <putc_unlocked@plt+0x11b0>
   125a8:	cmp	r4, #0
   125ac:	moveq	r5, r4
   125b0:	ldreq	r8, [pc, #308]	; 126ec <putc_unlocked@plt+0x135c>
   125b4:	beq	12668 <putc_unlocked@plt+0x12d8>
   125b8:	mov	r2, #10
   125bc:	ldr	r1, [pc, #300]	; 126f0 <putc_unlocked@plt+0x1360>
   125c0:	add	r0, sp, #24
   125c4:	bl	11354 <strncmp@plt>
   125c8:	cmp	r0, #0
   125cc:	bne	12678 <putc_unlocked@plt+0x12e8>
   125d0:	add	r6, sp, #480	; 0x1e0
   125d4:	str	r6, [sp]
   125d8:	add	r3, sp, #8
   125dc:	add	r2, sp, #224	; 0xe0
   125e0:	ldr	r1, [pc, #268]	; 126f4 <putc_unlocked@plt+0x1364>
   125e4:	add	r0, sp, #24
   125e8:	bl	112c4 <sscanf@plt>
   125ec:	cmp	r0, #3
   125f0:	bne	12678 <putc_unlocked@plt+0x12e8>
   125f4:	ldr	r3, [pc, #252]	; 126f8 <putc_unlocked@plt+0x1368>
   125f8:	ldr	r3, [r3, #12]
   125fc:	cmp	r3, #0
   12600:	beq	12614 <putc_unlocked@plt+0x1284>
   12604:	add	r2, sp, #224	; 0xe0
   12608:	mov	r1, r6
   1260c:	ldr	r0, [pc, #232]	; 126fc <putc_unlocked@plt+0x136c>
   12610:	bl	110e4 <printf@plt>
   12614:	ldr	r1, [pc, #228]	; 12700 <putc_unlocked@plt+0x1370>
   12618:	mov	r0, r6
   1261c:	bl	11198 <strcat@plt>
   12620:	add	r1, sp, #8
   12624:	add	r0, sp, #224	; 0xe0
   12628:	bl	123ec <putc_unlocked@plt+0x105c>
   1262c:	mov	r1, r6
   12630:	mov	r8, r0
   12634:	bl	124f4 <putc_unlocked@plt+0x1164>
   12638:	mov	r0, r8
   1263c:	bl	1136c <close@plt>
   12640:	b	12540 <putc_unlocked@plt+0x11b0>
   12644:	mov	r0, r6
   12648:	bl	11234 <strlen@plt>
   1264c:	mov	r1, r6
   12650:	mov	r2, r0
   12654:	add	r0, sp, #24
   12658:	bl	11354 <strncmp@plt>
   1265c:	cmp	r0, #0
   12660:	beq	126b8 <putc_unlocked@plt+0x1328>
   12664:	add	r5, r5, #2
   12668:	ldr	r6, [r8, r5, lsl #2]
   1266c:	cmp	r6, #0
   12670:	bne	12644 <putc_unlocked@plt+0x12b4>
   12674:	b	125b8 <putc_unlocked@plt+0x1228>
   12678:	ldr	r0, [pc, #132]	; 12704 <putc_unlocked@plt+0x1374>
   1267c:	add	r2, sp, #24
   12680:	mov	r1, r2
   12684:	ldrb	r3, [r2], #1
   12688:	cmp	r3, #13
   1268c:	bhi	12680 <putc_unlocked@plt+0x12f0>
   12690:	mvn	r3, r0, lsr r3
   12694:	ands	r3, r3, #1
   12698:	bne	12680 <putc_unlocked@plt+0x12f0>
   1269c:	strb	r3, [r1]
   126a0:	ldr	r3, [pc, #96]	; 12708 <putc_unlocked@plt+0x1378>
   126a4:	add	r2, sp, #24
   126a8:	ldr	r1, [pc, #92]	; 1270c <putc_unlocked@plt+0x137c>
   126ac:	ldr	r0, [r3]
   126b0:	bl	1124c <fprintf@plt>
   126b4:	b	12540 <putc_unlocked@plt+0x11b0>
   126b8:	mov	r4, #1
   126bc:	b	12540 <putc_unlocked@plt+0x11b0>
   126c0:	cmp	r4, #1
   126c4:	bne	126d0 <putc_unlocked@plt+0x1340>
   126c8:	ldr	r0, [pc, #64]	; 12710 <putc_unlocked@plt+0x1380>
   126cc:	bl	123b4 <putc_unlocked@plt+0x1024>
   126d0:	add	sp, sp, #1504	; 0x5e0
   126d4:	pop	{r4, r5, r6, r7, r8, pc}
   126d8:	andeq	fp, r2, r8, lsl r1
   126dc:	muleq	r1, lr, r1
   126e0:	andeq	r8, r1, lr, lsl #20
   126e4:	andeq	r8, r1, r5, lsr #20
   126e8:	andeq	pc, r2, r8, lsl #2
   126ec:	andeq	lr, r2, r4, ror #10
   126f0:	andeq	r8, r1, fp, asr #20
   126f4:	andeq	r8, r1, r6, asr sl
   126f8:	andeq	lr, r2, r4, asr #17
   126fc:	andeq	r8, r1, r4, lsl #21
   12700:	andeq	r8, r1, fp, lsl #20
   12704:	andeq	r2, r0, r1, lsl #8
   12708:			; <UNDEFINED> instruction: 0x0002e8bc
   1270c:	strdeq	sl, [r1], -r3
   12710:	andeq	r8, r1, r4, lsr #21
   12714:	ldr	r3, [pc, #24]	; 12734 <putc_unlocked@plt+0x13a4>
   12718:	push	{r4, lr}
   1271c:	mov	r4, r0
   12720:	ldr	r0, [r3]
   12724:	bl	1136c <close@plt>
   12728:	mov	r1, r4
   1272c:	ldr	r0, [pc, #4]	; 12738 <putc_unlocked@plt+0x13a8>
   12730:	bl	123b4 <putc_unlocked@plt+0x1024>
   12734:	andeq	lr, r2, r8, lsr r9
   12738:	andeq	r8, r1, sl, lsr ip
   1273c:	push	{r4, r5, r6, lr}
   12740:	ldr	r6, [r0]
   12744:	cmp	r6, #0
   12748:	beq	12794 <putc_unlocked@plt+0x1404>
   1274c:	mov	ip, r2
   12750:	ldr	r2, [r0, #32]
   12754:	mov	r5, r1
   12758:	str	r2, [r1, #36]	; 0x24
   1275c:	ldr	r2, [r0, #24]
   12760:	mov	r4, r0
   12764:	str	r2, [r1, #28]
   12768:	ldr	r2, [r0, #28]
   1276c:	str	r2, [r1, #32]
   12770:	ldr	r2, [r0, #12]
   12774:	mov	r0, ip
   12778:	str	r2, [r1, #20]
   1277c:	mov	r2, r1
   12780:	mov	r1, r3
   12784:	blx	r6
   12788:	ldr	r3, [r5, #36]	; 0x24
   1278c:	str	r3, [r4, #32]
   12790:	pop	{r4, r5, r6, pc}
   12794:	mov	r0, #7
   12798:	pop	{r4, r5, r6, pc}
   1279c:	ldr	r3, [r0]
   127a0:	push	{r4, r5, r6, lr}
   127a4:	cmp	r3, #0
   127a8:	ldr	r4, [r0, #16]
   127ac:	bne	127bc <putc_unlocked@plt+0x142c>
   127b0:	ldr	r2, [r0, #4]
   127b4:	cmp	r2, #0
   127b8:	beq	12824 <putc_unlocked@plt+0x1494>
   127bc:	ldr	r2, [r1, #8]
   127c0:	cmp	r3, #0
   127c4:	add	r2, r2, #1
   127c8:	str	r2, [r1, #8]
   127cc:	beq	12824 <putc_unlocked@plt+0x1494>
   127d0:	mov	r2, #0
   127d4:	add	r3, r3, #24
   127d8:	ldr	r0, [r3, #-20]	; 0xffffffec
   127dc:	cmp	r0, #0
   127e0:	bne	12860 <putc_unlocked@plt+0x14d0>
   127e4:	ldr	r0, [r3, #-24]	; 0xffffffe8
   127e8:	cmp	r0, #0
   127ec:	bne	12860 <putc_unlocked@plt+0x14d0>
   127f0:	ldr	r0, [r3, #-8]
   127f4:	cmp	r0, #0
   127f8:	bne	12860 <putc_unlocked@plt+0x14d0>
   127fc:	ldr	r0, [r3, #-4]
   12800:	cmp	r0, #0
   12804:	bne	12860 <putc_unlocked@plt+0x14d0>
   12808:	ldr	r3, [r1]
   1280c:	add	r0, r2, r2, lsl #1
   12810:	add	r3, r3, r0
   12814:	str	r3, [r1]
   12818:	ldr	r3, [r1, #4]
   1281c:	add	r2, r3, r2
   12820:	str	r2, [r1, #4]
   12824:	cmp	r4, #0
   12828:	movne	r5, r1
   1282c:	addne	r4, r4, #16
   12830:	bne	1284c <putc_unlocked@plt+0x14bc>
   12834:	pop	{r4, r5, r6, pc}
   12838:	mov	r1, r5
   1283c:	bl	1279c <putc_unlocked@plt+0x140c>
   12840:	ldr	r3, [r5, #12]
   12844:	add	r3, r3, #1
   12848:	str	r3, [r5, #12]
   1284c:	add	r4, r4, #16
   12850:	ldr	r0, [r4, #-32]	; 0xffffffe0
   12854:	cmp	r0, #0
   12858:	bne	12838 <putc_unlocked@plt+0x14a8>
   1285c:	pop	{r4, r5, r6, pc}
   12860:	add	r2, r2, #1
   12864:	b	127d4 <putc_unlocked@plt+0x1444>
   12868:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1286c:	sub	sp, sp, #36	; 0x24
   12870:	ldr	r6, [r0]
   12874:	mov	r9, r0
   12878:	cmp	r6, #0
   1287c:	str	r1, [sp, #16]
   12880:	str	r2, [sp, #20]
   12884:	mov	r4, r3
   12888:	ldr	r5, [sp, #72]	; 0x48
   1288c:	ldr	sl, [r0, #16]
   12890:	addne	r7, r6, #24
   12894:	movne	fp, #0
   12898:	bne	12a14 <putc_unlocked@plt+0x1684>
   1289c:	ldr	r6, [r0, #4]
   128a0:	cmp	r6, #0
   128a4:	beq	12908 <putc_unlocked@plt+0x1578>
   128a8:	ldr	r3, [r9, #4]
   128ac:	ldr	r2, [sp, #16]
   128b0:	stm	r4, {r3, r9}
   128b4:	ldr	r3, [r5, #4]
   128b8:	str	r2, [r4, #16]
   128bc:	str	r3, [r4, #8]
   128c0:	ldr	r2, [sp, #20]
   128c4:	mov	r3, #0
   128c8:	cmp	sl, r3
   128cc:	str	r3, [r4, #12]
   128d0:	str	r2, [r4, #20]
   128d4:	str	r3, [r4, #24]
   128d8:	str	r3, [r4, #32]
   128dc:	str	r3, [r4, #28]
   128e0:	beq	12900 <putc_unlocked@plt+0x1570>
   128e4:	ldr	r2, [sl, r3, lsl #4]
   128e8:	cmp	r2, #0
   128ec:	bne	12a70 <putc_unlocked@plt+0x16e0>
   128f0:	ldr	r2, [r5, #12]
   128f4:	add	r3, r2, r3, lsl #2
   128f8:	str	r2, [r4, #28]
   128fc:	str	r3, [r5, #12]
   12900:	mov	r6, r4
   12904:	add	r4, r4, #36	; 0x24
   12908:	cmp	sl, #0
   1290c:	movne	r2, #0
   12910:	bne	12a94 <putc_unlocked@plt+0x1704>
   12914:	mov	r0, r4
   12918:	add	sp, sp, #36	; 0x24
   1291c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12920:	tst	r2, #8
   12924:	bne	1294c <putc_unlocked@plt+0x15bc>
   12928:	sub	r3, r8, #1
   1292c:	cmp	r3, #254	; 0xfe
   12930:	bhi	1294c <putc_unlocked@plt+0x15bc>
   12934:	bl	1121c <__ctype_b_loc@plt>
   12938:	lsl	r3, r8, #1
   1293c:	ldr	r2, [r0]
   12940:	ldrh	r3, [r2, r3]
   12944:	tst	r3, #16384	; 0x4000
   12948:	bne	12aa4 <putc_unlocked@plt+0x1714>
   1294c:	ldr	r3, [r7, #-24]	; 0xffffffe8
   12950:	cmp	r3, #0
   12954:	beq	12a10 <putc_unlocked@plt+0x1680>
   12958:	ldr	r2, [r5]
   1295c:	str	r2, [sp, #12]
   12960:	ldr	r2, [r2, #8]
   12964:	mov	r8, r2
   12968:	ldr	r0, [r8]
   1296c:	cmp	r0, #0
   12970:	beq	129a0 <putc_unlocked@plt+0x1610>
   12974:	mov	r1, r3
   12978:	str	r2, [sp, #28]
   1297c:	str	r3, [sp, #24]
   12980:	bl	110d8 <strcmp@plt>
   12984:	ldr	r3, [sp, #24]
   12988:	ldr	r2, [sp, #28]
   1298c:	cmp	r0, #0
   12990:	bne	12a68 <putc_unlocked@plt+0x16d8>
   12994:	sub	r8, r8, r2
   12998:	cmn	r8, #15
   1299c:	bge	12a10 <putc_unlocked@plt+0x1680>
   129a0:	ldr	r1, [r5, #8]
   129a4:	str	r3, [r1]
   129a8:	ldr	r3, [r6, #8]
   129ac:	cmp	r3, #0
   129b0:	beq	129c8 <putc_unlocked@plt+0x1638>
   129b4:	ldr	r3, [r6, #12]
   129b8:	tst	r3, #1
   129bc:	movne	r3, #2
   129c0:	moveq	r3, #1
   129c4:	str	r3, [sp, #8]
   129c8:	ldr	r2, [sp, #12]
   129cc:	ldr	r3, [sp, #8]
   129d0:	ldr	r0, [pc, #292]	; 12afc <putc_unlocked@plt+0x176c>
   129d4:	ldr	r2, [r2, #48]	; 0x30
   129d8:	stmib	r1, {r3, fp}
   129dc:	sub	r2, r4, r2
   129e0:	ldr	r3, [r7, #-20]	; 0xffffffec
   129e4:	asr	r2, r2, #2
   129e8:	cmp	r3, #0
   129ec:	mul	r2, r0, r2
   129f0:	ldreq	r3, [r6, #4]
   129f4:	add	r2, r2, #1
   129f8:	bic	r3, r3, #-16777216	; 0xff000000
   129fc:	add	r3, r3, r2, lsl #24
   12a00:	str	r3, [r1, #12]
   12a04:	add	r3, r1, #16
   12a08:	str	r3, [r5, #8]
   12a0c:	str	fp, [r1, #16]
   12a10:	add	r7, r7, #24
   12a14:	ldr	r8, [r7, #-20]	; 0xffffffec
   12a18:	sub	r3, r7, #24
   12a1c:	cmp	r8, #0
   12a20:	bne	12a48 <putc_unlocked@plt+0x16b8>
   12a24:	ldr	r2, [r7, #-24]	; 0xffffffe8
   12a28:	cmp	r2, #0
   12a2c:	bne	12a48 <putc_unlocked@plt+0x16b8>
   12a30:	ldr	r2, [r7, #-8]
   12a34:	cmp	r2, #0
   12a38:	bne	12a48 <putc_unlocked@plt+0x16b8>
   12a3c:	ldr	r2, [r7, #-4]
   12a40:	cmp	r2, #0
   12a44:	beq	128a8 <putc_unlocked@plt+0x1518>
   12a48:	ldr	r2, [r7, #-12]
   12a4c:	tst	r2, #4
   12a50:	moveq	r6, r3
   12a54:	ldr	r3, [r6, #12]
   12a58:	ands	r3, r3, #8
   12a5c:	str	r3, [sp, #8]
   12a60:	beq	12920 <putc_unlocked@plt+0x1590>
   12a64:	b	12a10 <putc_unlocked@plt+0x1680>
   12a68:	add	r8, r8, #16
   12a6c:	b	12968 <putc_unlocked@plt+0x15d8>
   12a70:	add	r3, r3, #1
   12a74:	b	128e4 <putc_unlocked@plt+0x1554>
   12a78:	mov	r3, r4
   12a7c:	str	r5, [sp]
   12a80:	mov	r1, r6
   12a84:	add	r7, r2, #1
   12a88:	bl	12868 <putc_unlocked@plt+0x14d8>
   12a8c:	mov	r2, r7
   12a90:	mov	r4, r0
   12a94:	ldr	r0, [sl, r2, lsl #4]
   12a98:	cmp	r0, #0
   12a9c:	bne	12a78 <putc_unlocked@plt+0x16e8>
   12aa0:	b	12914 <putc_unlocked@plt+0x1584>
   12aa4:	ldr	r3, [r5, #4]
   12aa8:	add	r2, r3, #1
   12aac:	str	r2, [r5, #4]
   12ab0:	strb	r8, [r3]
   12ab4:	ldr	r3, [r6, #8]
   12ab8:	cmp	r3, #0
   12abc:	beq	12af0 <putc_unlocked@plt+0x1760>
   12ac0:	ldr	r3, [r5, #4]
   12ac4:	add	r2, r3, #1
   12ac8:	str	r2, [r5, #4]
   12acc:	mov	r2, #58	; 0x3a
   12ad0:	strb	r2, [r3]
   12ad4:	ldr	r3, [r6, #12]
   12ad8:	tst	r3, #1
   12adc:	ldrne	r3, [r5, #4]
   12ae0:	addne	r2, r3, #1
   12ae4:	strne	r2, [r5, #4]
   12ae8:	movne	r2, #58	; 0x3a
   12aec:	strbne	r2, [r3]
   12af0:	ldr	r3, [r5, #4]
   12af4:	strb	fp, [r3]
   12af8:	b	1294c <putc_unlocked@plt+0x15bc>
   12afc:	stmiacc	r3!, {r0, r3, r4, r5, r9, sl, fp, pc}^
   12b00:	cmp	r0, #86	; 0x56
   12b04:	bne	12b70 <putc_unlocked@plt+0x17e0>
   12b08:	ldr	r3, [pc, #112]	; 12b80 <putc_unlocked@plt+0x17f0>
   12b0c:	push	{r4, lr}
   12b10:	mov	r4, r2
   12b14:	ldr	r3, [r3]
   12b18:	cmp	r3, #0
   12b1c:	beq	12b3c <putc_unlocked@plt+0x17ac>
   12b20:	mov	r1, r2
   12b24:	ldr	r0, [r2, #48]	; 0x30
   12b28:	blx	r3
   12b2c:	ldr	r0, [r4, #16]
   12b30:	ands	r0, r0, #32
   12b34:	bne	12b78 <putc_unlocked@plt+0x17e8>
   12b38:	bl	11228 <exit@plt>
   12b3c:	ldr	r3, [pc, #64]	; 12b84 <putc_unlocked@plt+0x17f4>
   12b40:	ldr	r2, [r3]
   12b44:	cmp	r2, #0
   12b48:	beq	12b5c <putc_unlocked@plt+0x17cc>
   12b4c:	ldr	r1, [pc, #52]	; 12b88 <putc_unlocked@plt+0x17f8>
   12b50:	ldr	r0, [r4, #48]	; 0x30
   12b54:	bl	1124c <fprintf@plt>
   12b58:	b	12b2c <putc_unlocked@plt+0x179c>
   12b5c:	ldr	r2, [pc, #40]	; 12b8c <putc_unlocked@plt+0x17fc>
   12b60:	ldr	r1, [pc, #40]	; 12b90 <putc_unlocked@plt+0x1800>
   12b64:	mov	r0, r4
   12b68:	bl	17118 <argp_error@@Base>
   12b6c:	b	12b2c <putc_unlocked@plt+0x179c>
   12b70:	mov	r0, #7
   12b74:	bx	lr
   12b78:	mov	r0, #0
   12b7c:	pop	{r4, pc}
   12b80:	ldrdeq	lr, [r2], -r8
   12b84:	andeq	lr, r2, r0, asr #18
   12b88:	strdeq	sl, [r1], -r3
   12b8c:	andeq	sl, r1, r8, ror r2
   12b90:	andeq	sl, r1, fp, lsr #18
   12b94:	cmn	r0, #3
   12b98:	push	{r4, r5, r6, lr}
   12b9c:	mov	r4, r2
   12ba0:	beq	12be4 <putc_unlocked@plt+0x1854>
   12ba4:	mov	r5, r1
   12ba8:	bgt	12bbc <putc_unlocked@plt+0x182c>
   12bac:	cmn	r0, #4
   12bb0:	beq	12c20 <putc_unlocked@plt+0x1890>
   12bb4:	mov	r0, #7
   12bb8:	pop	{r4, r5, r6, pc}
   12bbc:	cmn	r0, #2
   12bc0:	beq	12bec <putc_unlocked@plt+0x185c>
   12bc4:	cmp	r0, #63	; 0x3f
   12bc8:	ldreq	r2, [pc, #140]	; 12c5c <putc_unlocked@plt+0x18cc>
   12bcc:	bne	12bb4 <putc_unlocked@plt+0x1824>
   12bd0:	ldr	r1, [r4, #48]	; 0x30
   12bd4:	mov	r0, r4
   12bd8:	bl	17078 <argp_state_help@@Base>
   12bdc:	mov	r0, #0
   12be0:	pop	{r4, r5, r6, pc}
   12be4:	ldr	r2, [pc, #116]	; 12c60 <putc_unlocked@plt+0x18d0>
   12be8:	b	12bd0 <putc_unlocked@plt+0x1840>
   12bec:	ldr	r3, [pc, #112]	; 12c64 <putc_unlocked@plt+0x18d4>
   12bf0:	mov	r0, r1
   12bf4:	str	r1, [r3]
   12bf8:	bl	13680 <argp_parse@@Base+0xa0c>
   12bfc:	ldr	r3, [pc, #100]	; 12c68 <putc_unlocked@plt+0x18d8>
   12c00:	str	r0, [r3]
   12c04:	ldr	r3, [r4, #16]
   12c08:	str	r0, [r4, #40]	; 0x28
   12c0c:	and	r3, r3, #3
   12c10:	cmp	r3, #1
   12c14:	ldreq	r3, [r4, #8]
   12c18:	streq	r5, [r3]
   12c1c:	b	12bdc <putc_unlocked@plt+0x184c>
   12c20:	cmp	r1, #0
   12c24:	ldr	r0, [pc, #64]	; 12c6c <putc_unlocked@plt+0x18dc>
   12c28:	movne	r0, r1
   12c2c:	bl	112f4 <atoi@plt>
   12c30:	ldr	r4, [pc, #56]	; 12c70 <putc_unlocked@plt+0x18e0>
   12c34:	mov	r5, #1
   12c38:	str	r0, [r4]
   12c3c:	ldr	r3, [r4]
   12c40:	sub	r2, r3, #1
   12c44:	cmp	r3, #0
   12c48:	str	r2, [r4]
   12c4c:	ble	12bdc <putc_unlocked@plt+0x184c>
   12c50:	mov	r0, r5
   12c54:	bl	11168 <sleep@plt>
   12c58:	b	12c3c <putc_unlocked@plt+0x18ac>
   12c5c:	andeq	r0, r0, sl, ror r2
   12c60:	andeq	r0, r0, r1, lsl #4
   12c64:			; <UNDEFINED> instruction: 0x0002e8b4
   12c68:			; <UNDEFINED> instruction: 0x0002e8b0
   12c6c:	muleq	r1, fp, r2
   12c70:	ldrdeq	lr, [r2], -r4

00012c74 <argp_parse@@Base>:
   12c74:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12c78:	add	fp, sp, #32
   12c7c:	tst	r3, #1
   12c80:	sub	sp, sp, #220	; 0xdc
   12c84:	mov	r4, r0
   12c88:	mov	r8, r2
   12c8c:	str	r1, [fp, #-240]	; 0xffffff10
   12c90:	mov	sl, r3
   12c94:	bne	12cc8 <argp_parse@@Base+0x54>
   12c98:	ldr	r3, [pc, #2296]	; 13598 <argp_parse@@Base+0x924>
   12c9c:	ldr	r5, [pc, #2296]	; 1359c <argp_parse@@Base+0x928>
   12ca0:	ldr	r2, [r3]
   12ca4:	cmp	r2, #0
   12ca8:	ldreq	r2, [r8]
   12cac:	streq	r2, [r3]
   12cb0:	ldr	r3, [r5]
   12cb4:	cmp	r3, #0
   12cb8:	bne	12cc8 <argp_parse@@Base+0x54>
   12cbc:	ldr	r0, [r8]
   12cc0:	bl	13680 <argp_parse@@Base+0xa0c>
   12cc4:	str	r0, [r5]
   12cc8:	ands	r7, sl, #16
   12ccc:	bne	12d54 <argp_parse@@Base+0xe0>
   12cd0:	sub	sp, sp, #72	; 0x48
   12cd4:	add	r5, sp, #8
   12cd8:	sub	sp, sp, #40	; 0x28
   12cdc:	add	r6, sp, #8
   12ce0:	mov	r2, #28
   12ce4:	mov	r1, r7
   12ce8:	mov	r0, r6
   12cec:	bl	1127c <memset@plt>
   12cf0:	str	r5, [r6, #16]
   12cf4:	mov	r0, r5
   12cf8:	mov	r2, #64	; 0x40
   12cfc:	mov	r1, r7
   12d00:	bl	1127c <memset@plt>
   12d04:	cmp	r4, #0
   12d08:	strne	r4, [r5]
   12d0c:	ldr	r3, [pc, #2188]	; 135a0 <argp_parse@@Base+0x92c>
   12d10:	addne	r5, r5, #16
   12d14:	str	r3, [r5]
   12d18:	ldr	r3, [pc, #2180]	; 135a4 <argp_parse@@Base+0x930>
   12d1c:	ldr	r3, [r3]
   12d20:	cmp	r3, #0
   12d24:	bne	12d3c <argp_parse@@Base+0xc8>
   12d28:	ldr	r3, [pc, #2168]	; 135a8 <argp_parse@@Base+0x934>
   12d2c:	ldr	r3, [r3]
   12d30:	cmp	r3, #0
   12d34:	addeq	r3, r5, #16
   12d38:	beq	12d48 <argp_parse@@Base+0xd4>
   12d3c:	ldr	r2, [pc, #2152]	; 135ac <argp_parse@@Base+0x938>
   12d40:	add	r3, r5, #32
   12d44:	str	r2, [r5, #16]
   12d48:	mov	r4, r6
   12d4c:	mov	r2, #0
   12d50:	str	r2, [r3]
   12d54:	mov	r2, #36	; 0x24
   12d58:	mov	r1, #0
   12d5c:	sub	r0, fp, #196	; 0xc4
   12d60:	bl	1127c <memset@plt>
   12d64:	ands	r3, sl, #4
   12d68:	moveq	r3, #1
   12d6c:	movne	r3, #0
   12d70:	str	r3, [fp, #-228]	; 0xffffff1c
   12d74:	mov	r3, #0
   12d78:	cmp	r4, r3
   12d7c:	str	r3, [fp, #-224]	; 0xffffff20
   12d80:	str	r3, [fp, #-220]	; 0xffffff24
   12d84:	str	r3, [fp, #-216]	; 0xffffff28
   12d88:	beq	12d98 <argp_parse@@Base+0x124>
   12d8c:	sub	r1, fp, #228	; 0xe4
   12d90:	mov	r0, r4
   12d94:	bl	1279c <putc_unlocked@plt+0x140c>
   12d98:	ldr	r9, [fp, #-220]	; 0xffffff24
   12d9c:	ldr	r5, [fp, #-216]	; 0xffffff28
   12da0:	add	r3, r9, #1
   12da4:	mov	r9, #36	; 0x24
   12da8:	ldr	r6, [fp, #-224]	; 0xffffff20
   12dac:	mul	r9, r9, r3
   12db0:	ldr	r0, [fp, #-228]	; 0xffffff1c
   12db4:	lsl	r5, r5, #2
   12db8:	add	r6, r6, #1
   12dbc:	add	r3, r9, r5
   12dc0:	add	r6, r3, r6, lsl #4
   12dc4:	add	r0, r0, #1
   12dc8:	add	r0, r0, r6
   12dcc:	str	r3, [fp, #-236]	; 0xffffff14
   12dd0:	bl	144bc <_obstack_memory_used@@Base+0x9bc>
   12dd4:	cmp	r0, #0
   12dd8:	mov	r7, r0
   12ddc:	str	r0, [fp, #-40]	; 0xffffffd8
   12de0:	moveq	r4, #12
   12de4:	beq	12f64 <argp_parse@@Base+0x2f0>
   12de8:	add	r3, r0, r9
   12dec:	str	r3, [fp, #-232]	; 0xffffff18
   12df0:	str	r3, [fp, #-104]	; 0xffffff98
   12df4:	ldr	r3, [fp, #-236]	; 0xffffff14
   12df8:	sub	lr, fp, #196	; 0xc4
   12dfc:	add	r3, r0, r3
   12e00:	str	r3, [fp, #-236]	; 0xffffff14
   12e04:	str	r3, [fp, #-152]	; 0xffffff68
   12e08:	mov	r3, #1
   12e0c:	add	r9, r0, r6
   12e10:	str	r0, [fp, #-112]	; 0xffffff90
   12e14:	str	r3, [fp, #-196]	; 0xffffff3c
   12e18:	str	r3, [fp, #-192]	; 0xffffff40
   12e1c:	ldm	lr!, {r0, r1, r2, r3}
   12e20:	sub	ip, fp, #148	; 0x94
   12e24:	str	r9, [fp, #-156]	; 0xffffff64
   12e28:	stmia	ip!, {r0, r1, r2, r3}
   12e2c:	ldm	lr!, {r0, r1, r2, r3}
   12e30:	stmia	ip!, {r0, r1, r2, r3}
   12e34:	mov	r2, r5
   12e38:	ldr	r3, [lr]
   12e3c:	mov	r1, #0
   12e40:	ldr	r0, [fp, #-232]	; 0xffffff18
   12e44:	str	r3, [ip]
   12e48:	bl	1127c <memset@plt>
   12e4c:	ldr	r3, [fp, #-236]	; 0xffffff14
   12e50:	tst	sl, #8
   12e54:	str	r3, [fp, #-204]	; 0xffffff34
   12e58:	ldr	r3, [fp, #-232]	; 0xffffff18
   12e5c:	str	r9, [fp, #-208]	; 0xffffff30
   12e60:	sub	r5, fp, #160	; 0xa0
   12e64:	addne	r9, r9, #1
   12e68:	str	r3, [fp, #-200]	; 0xffffff38
   12e6c:	str	r5, [fp, #-212]	; 0xffffff2c
   12e70:	strne	r9, [fp, #-208]	; 0xffffff30
   12e74:	movne	r3, #45	; 0x2d
   12e78:	bne	12e94 <argp_parse@@Base+0x220>
   12e7c:	ands	r3, sl, #4
   12e80:	cmp	r3, #0
   12e84:	beq	12e98 <argp_parse@@Base+0x224>
   12e88:	mov	r3, #43	; 0x2b
   12e8c:	add	r9, r9, #1
   12e90:	str	r9, [fp, #-208]	; 0xffffff30
   12e94:	strb	r3, [r7, r6]
   12e98:	ldr	r3, [fp, #-208]	; 0xffffff30
   12e9c:	mov	r2, #0
   12ea0:	cmp	r4, r2
   12ea4:	strb	r2, [r3]
   12ea8:	ldr	r3, [fp, #-204]	; 0xffffff34
   12eac:	str	r2, [r3]
   12eb0:	ldreq	r3, [fp, #-112]	; 0xffffff90
   12eb4:	str	r4, [fp, #-160]	; 0xffffff60
   12eb8:	streq	r3, [fp, #-108]	; 0xffffff94
   12ebc:	beq	12edc <argp_parse@@Base+0x268>
   12ec0:	sub	r3, fp, #212	; 0xd4
   12ec4:	str	r3, [sp]
   12ec8:	mov	r1, r2
   12ecc:	ldr	r3, [fp, #-112]	; 0xffffff90
   12ed0:	mov	r0, r4
   12ed4:	bl	12868 <putc_unlocked@plt+0x14d8>
   12ed8:	str	r0, [fp, #-108]	; 0xffffff94
   12edc:	mov	r2, #56	; 0x38
   12ee0:	mov	r1, #0
   12ee4:	add	r0, r5, #64	; 0x40
   12ee8:	bl	1127c <memset@plt>
   12eec:	ldr	r3, [fp, #-160]	; 0xffffff60
   12ef0:	ldr	r6, [fp, #-112]	; 0xffffff90
   12ef4:	str	r3, [fp, #-96]	; 0xffffffa0
   12ef8:	ldr	r3, [fp, #-240]	; 0xffffff10
   12efc:	str	sl, [fp, #-80]	; 0xffffffb0
   12f00:	str	r3, [fp, #-92]	; 0xffffffa4
   12f04:	ldr	r3, [pc, #1700]	; 135b0 <argp_parse@@Base+0x93c>
   12f08:	mov	r4, #0
   12f0c:	ldr	sl, [pc, #1696]	; 135b4 <argp_parse@@Base+0x940>
   12f10:	ldr	r3, [r3]
   12f14:	add	r7, r5, #64	; 0x40
   12f18:	str	r3, [fp, #-52]	; 0xffffffcc
   12f1c:	ldr	r3, [pc, #1684]	; 135b8 <argp_parse@@Base+0x944>
   12f20:	mov	r9, r4
   12f24:	str	r8, [fp, #-88]	; 0xffffffa8
   12f28:	ldr	r3, [r3]
   12f2c:	str	r5, [fp, #-44]	; 0xffffffd4
   12f30:	str	r3, [fp, #-48]	; 0xffffffd0
   12f34:	mov	r3, #1
   12f38:	str	r3, [fp, #-100]	; 0xffffff9c
   12f3c:	ldr	r3, [fp, #-108]	; 0xffffff94
   12f40:	cmp	r6, r3
   12f44:	ldrcc	r3, [fp, #8]
   12f48:	strcc	r3, [r6, #24]
   12f4c:	ldr	r3, [fp, #-108]	; 0xffffff94
   12f50:	cmp	r6, r3
   12f54:	bcs	12fd8 <argp_parse@@Base+0x364>
   12f58:	cmp	r4, #7
   12f5c:	cmpne	r4, #0
   12f60:	beq	12f70 <argp_parse@@Base+0x2fc>
   12f64:	mov	r0, r4
   12f68:	sub	sp, fp, #32
   12f6c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12f70:	ldr	r3, [r6, #16]
   12f74:	cmp	r3, #0
   12f78:	ldrne	r3, [r3, #28]
   12f7c:	ldrne	r2, [r6, #20]
   12f80:	ldrne	r3, [r3, r2, lsl #2]
   12f84:	strne	r3, [r6, #24]
   12f88:	ldr	r3, [r6]
   12f8c:	cmp	r3, #0
   12f90:	bne	12fb8 <argp_parse@@Base+0x344>
   12f94:	ldr	r3, [r6, #4]
   12f98:	ldr	r3, [r3, #16]
   12f9c:	cmp	r3, #0
   12fa0:	beq	12fb8 <argp_parse@@Base+0x344>
   12fa4:	ldr	r3, [r3]
   12fa8:	cmp	r3, #0
   12fac:	ldrne	r3, [r6, #28]
   12fb0:	ldrne	r2, [r6, #24]
   12fb4:	strne	r2, [r3]
   12fb8:	mov	r0, r6
   12fbc:	mov	r3, r9
   12fc0:	mov	r2, sl
   12fc4:	mov	r1, r7
   12fc8:	bl	1273c <putc_unlocked@plt+0x13ac>
   12fcc:	add	r6, r6, #36	; 0x24
   12fd0:	mov	r4, r0
   12fd4:	b	12f4c <argp_parse@@Base+0x2d8>
   12fd8:	cmp	r4, #7
   12fdc:	beq	12fe8 <argp_parse@@Base+0x374>
   12fe0:	cmp	r4, #0
   12fe4:	bne	12f64 <argp_parse@@Base+0x2f0>
   12fe8:	ldr	r3, [fp, #-80]	; 0xffffffb0
   12fec:	tst	r3, #2
   12ff0:	moveq	r3, #1
   12ff4:	streq	r3, [fp, #-144]	; 0xffffff70
   12ff8:	beq	13020 <argp_parse@@Base+0x3ac>
   12ffc:	tst	r3, #1
   13000:	mov	r2, #0
   13004:	ldrne	r3, [fp, #-88]	; 0xffffffa8
   13008:	str	r2, [fp, #-144]	; 0xffffff70
   1300c:	subne	r3, r3, #4
   13010:	strne	r3, [fp, #-88]	; 0xffffffa8
   13014:	ldrne	r3, [fp, #-92]	; 0xffffffa4
   13018:	addne	r3, r3, #1
   1301c:	strne	r3, [fp, #-92]	; 0xffffffa4
   13020:	ldr	r3, [fp, #-88]	; 0xffffffa8
   13024:	cmp	r8, r3
   13028:	bne	1304c <argp_parse@@Base+0x3d8>
   1302c:	ldr	r0, [r8]
   13030:	cmp	r0, #0
   13034:	beq	1304c <argp_parse@@Base+0x3d8>
   13038:	bl	13680 <argp_parse@@Base+0xa0c>
   1303c:	str	r0, [fp, #-56]	; 0xffffffc8
   13040:	add	r8, r5, #64	; 0x40
   13044:	ldr	r9, [pc, #1392]	; 135bc <argp_parse@@Base+0x948>
   13048:	b	13210 <argp_parse@@Base+0x59c>
   1304c:	ldr	r3, [pc, #1352]	; 1359c <argp_parse@@Base+0x928>
   13050:	ldr	r3, [r3]
   13054:	str	r3, [fp, #-56]	; 0xffffffc8
   13058:	b	13040 <argp_parse@@Base+0x3cc>
   1305c:	bl	13788 <argp_parse@@Base+0xb14>
   13060:	b	1327c <argp_parse@@Base+0x608>
   13064:	cmp	r0, #63	; 0x3f
   13068:	bne	1352c <argp_parse@@Base+0x8b8>
   1306c:	ldr	r3, [fp, #-140]	; 0xffffff74
   13070:	cmn	r3, #1
   13074:	bne	134d0 <argp_parse@@Base+0x85c>
   13078:	asrs	r3, r6, #24
   1307c:	bne	13338 <argp_parse@@Base+0x6c4>
   13080:	mov	r1, r6
   13084:	ldr	r0, [fp, #-156]	; 0xffffff64
   13088:	bl	11240 <strchr@plt>
   1308c:	subs	r2, r0, #0
   13090:	beq	130cc <argp_parse@@Base+0x458>
   13094:	ldr	r0, [fp, #-112]	; 0xffffff90
   13098:	ldr	r3, [fp, #-108]	; 0xffffff94
   1309c:	cmp	r0, r3
   130a0:	bcs	130cc <argp_parse@@Base+0x458>
   130a4:	ldr	r1, [r0, #8]
   130a8:	cmp	r2, r1
   130ac:	bcs	13330 <argp_parse@@Base+0x6bc>
   130b0:	ldr	r3, [fp, #-136]	; 0xffffff78
   130b4:	mov	r2, r6
   130b8:	mov	r1, r8
   130bc:	bl	1273c <putc_unlocked@plt+0x13ac>
   130c0:	cmp	r0, #7
   130c4:	mov	r4, r0
   130c8:	bne	133c4 <argp_parse@@Base+0x750>
   130cc:	ldr	r3, [pc, #1260]	; 135c0 <argp_parse@@Base+0x94c>
   130d0:	ldr	r1, [pc, #1260]	; 135c4 <argp_parse@@Base+0x950>
   130d4:	mov	r2, r6
   130d8:	add	r0, r5, #64	; 0x40
   130dc:	bl	17118 <argp_error@@Base>
   130e0:	sub	r7, r6, #1
   130e4:	mov	r4, #7
   130e8:	clz	r7, r7
   130ec:	lsr	r7, r7, #5
   130f0:	cmp	r4, #7
   130f4:	movne	r7, #0
   130f8:	andeq	r7, r7, #1
   130fc:	cmp	r7, #0
   13100:	beq	13444 <argp_parse@@Base+0x7d0>
   13104:	ldr	r3, [fp, #-84]	; 0xffffffac
   13108:	ldr	r2, [fp, #-92]	; 0xffffffa4
   1310c:	cmp	r3, r2
   13110:	bne	1349c <argp_parse@@Base+0x828>
   13114:	mov	r4, #0
   13118:	ldr	r7, [fp, #-112]	; 0xffffff90
   1311c:	ldr	sl, [pc, #1188]	; 135c8 <argp_parse@@Base+0x954>
   13120:	add	r8, r5, #64	; 0x40
   13124:	mov	r9, r4
   13128:	ldr	r6, [fp, #-108]	; 0xffffff94
   1312c:	cmp	r7, r6
   13130:	bcc	133d0 <argp_parse@@Base+0x75c>
   13134:	ldr	r9, [pc, #1168]	; 135cc <argp_parse@@Base+0x958>
   13138:	sub	r6, r6, #36	; 0x24
   1313c:	add	r7, r5, #64	; 0x40
   13140:	mov	r8, #0
   13144:	ldr	r3, [fp, #-112]	; 0xffffff90
   13148:	cmp	r6, r3
   1314c:	bcc	13428 <argp_parse@@Base+0x7b4>
   13150:	cmp	r4, #7
   13154:	cmpne	r4, #0
   13158:	beq	13408 <argp_parse@@Base+0x794>
   1315c:	ldr	r3, [fp, #4]
   13160:	cmp	r3, #0
   13164:	beq	13444 <argp_parse@@Base+0x7d0>
   13168:	ldr	r2, [fp, #4]
   1316c:	ldr	r3, [fp, #-84]	; 0xffffffac
   13170:	str	r3, [r2]
   13174:	b	1343c <argp_parse@@Base+0x7c8>
   13178:	ldr	r2, [fp, #-80]	; 0xffffffb0
   1317c:	tst	r2, #4
   13180:	bne	13104 <argp_parse@@Base+0x490>
   13184:	add	r2, r3, #1
   13188:	str	r2, [fp, #-84]	; 0xffffffac
   1318c:	ldr	r2, [fp, #-88]	; 0xffffffa8
   13190:	ldr	r3, [r2, r3, lsl #2]
   13194:	str	r3, [fp, #-136]	; 0xffffff78
   13198:	ldr	r3, [fp, #-136]	; 0xffffff78
   1319c:	ldr	r7, [fp, #-84]	; 0xffffffac
   131a0:	str	r3, [fp, #-232]	; 0xffffff18
   131a4:	ldr	r6, [fp, #-112]	; 0xffffff90
   131a8:	mov	r3, #0
   131ac:	mov	r4, #7
   131b0:	mov	sl, r3
   131b4:	sub	r7, r7, #1
   131b8:	str	r7, [fp, #-84]	; 0xffffffac
   131bc:	ldr	r2, [fp, #-108]	; 0xffffff94
   131c0:	cmp	r6, r2
   131c4:	movcs	r2, #0
   131c8:	movcc	r2, #1
   131cc:	cmp	r4, #7
   131d0:	movne	r2, #0
   131d4:	cmp	r2, #0
   131d8:	bne	132d0 <argp_parse@@Base+0x65c>
   131dc:	cmp	r4, #0
   131e0:	bne	133b4 <argp_parse@@Base+0x740>
   131e4:	cmp	r3, r9
   131e8:	ldreq	r3, [fp, #-92]	; 0xffffffa4
   131ec:	streq	r3, [fp, #-84]	; 0xffffffac
   131f0:	ldr	r3, [fp, #-84]	; 0xffffffac
   131f4:	cmp	r7, r3
   131f8:	sublt	r7, r3, r7
   131fc:	ldrlt	r3, [r6, #-24]	; 0xffffffe8
   13200:	movge	r3, #1
   13204:	addlt	r7, r3, r7
   13208:	strlt	r7, [r6, #-24]	; 0xffffffe8
   1320c:	strge	r3, [fp, #-100]	; 0xffffff9c
   13210:	ldr	r2, [fp, #-72]	; 0xffffffb8
   13214:	ldr	r3, [fp, #-84]	; 0xffffffac
   13218:	cmp	r2, #0
   1321c:	beq	1322c <argp_parse@@Base+0x5b8>
   13220:	cmp	r2, r3
   13224:	movgt	r2, #0
   13228:	strgt	r2, [fp, #-72]	; 0xffffffb8
   1322c:	ldr	r2, [fp, #-100]	; 0xffffff9c
   13230:	cmp	r2, #0
   13234:	beq	132bc <argp_parse@@Base+0x648>
   13238:	ldr	r7, [fp, #-72]	; 0xffffffb8
   1323c:	cmp	r7, #0
   13240:	bne	132bc <argp_parse@@Base+0x648>
   13244:	str	r3, [fp, #-148]	; 0xffffff6c
   13248:	mvn	r3, #0
   1324c:	str	r3, [fp, #-140]	; 0xffffff74
   13250:	ldr	r3, [fp, #-80]	; 0xffffffb0
   13254:	str	r7, [sp]
   13258:	tst	r3, #64	; 0x40
   1325c:	add	r3, r5, #12
   13260:	str	r3, [sp, #4]
   13264:	ldr	r2, [fp, #-156]	; 0xffffff64
   13268:	ldr	r3, [fp, #-152]	; 0xffffff68
   1326c:	ldr	r1, [fp, #-88]	; 0xffffffa8
   13270:	ldr	r0, [fp, #-92]	; 0xffffffa4
   13274:	beq	1305c <argp_parse@@Base+0x3e8>
   13278:	bl	137d4 <argp_parse@@Base+0xb60>
   1327c:	ldr	r4, [fp, #-148]	; 0xffffff6c
   13280:	cmn	r0, #1
   13284:	mov	r6, r0
   13288:	str	r4, [fp, #-84]	; 0xffffffac
   1328c:	bne	13064 <argp_parse@@Base+0x3f0>
   13290:	mov	r3, #0
   13294:	cmp	r4, #1
   13298:	str	r3, [fp, #-100]	; 0xffffff9c
   1329c:	ble	132bc <argp_parse@@Base+0x648>
   132a0:	ldr	r2, [fp, #-88]	; 0xffffffa8
   132a4:	sub	r3, r4, #-1073741823	; 0xc0000001
   132a8:	ldr	r1, [pc, #800]	; 135d0 <argp_parse@@Base+0x95c>
   132ac:	ldr	r0, [r2, r3, lsl #2]
   132b0:	bl	110d8 <strcmp@plt>
   132b4:	cmp	r0, #0
   132b8:	streq	r4, [fp, #-72]	; 0xffffffb8
   132bc:	ldr	r3, [fp, #-84]	; 0xffffffac
   132c0:	ldr	r2, [fp, #-92]	; 0xffffffa4
   132c4:	cmp	r3, r2
   132c8:	bge	13104 <argp_parse@@Base+0x490>
   132cc:	b	13178 <argp_parse@@Base+0x504>
   132d0:	ldr	r3, [fp, #-84]	; 0xffffffac
   132d4:	mov	r2, sl
   132d8:	add	r3, r3, #1
   132dc:	str	r3, [fp, #-84]	; 0xffffffac
   132e0:	mov	r1, r8
   132e4:	ldr	r3, [fp, #-232]	; 0xffffff18
   132e8:	mov	r0, r6
   132ec:	bl	1273c <putc_unlocked@plt+0x13ac>
   132f0:	cmp	r0, #7
   132f4:	mov	r4, r0
   132f8:	movne	r3, sl
   132fc:	bne	13328 <argp_parse@@Base+0x6b4>
   13300:	ldr	r3, [fp, #-84]	; 0xffffffac
   13304:	mov	r2, r9
   13308:	sub	r3, r3, #1
   1330c:	str	r3, [fp, #-84]	; 0xffffffac
   13310:	mov	r1, r8
   13314:	mov	r3, sl
   13318:	mov	r0, r6
   1331c:	bl	1273c <putc_unlocked@plt+0x13ac>
   13320:	mov	r3, r9
   13324:	mov	r4, r0
   13328:	add	r6, r6, #36	; 0x24
   1332c:	b	131bc <argp_parse@@Base+0x548>
   13330:	add	r0, r0, #36	; 0x24
   13334:	b	1309c <argp_parse@@Base+0x428>
   13338:	mov	r0, #36	; 0x24
   1333c:	ands	r1, r6, #8388608	; 0x800000
   13340:	mul	r0, r0, r3
   13344:	ldr	ip, [fp, #-112]	; 0xffffff90
   13348:	movne	r1, #-16777216	; 0xff000000
   1334c:	bic	r2, r6, #-16777216	; 0xff000000
   13350:	sub	r0, r0, #36	; 0x24
   13354:	orr	r2, r2, r1
   13358:	ldr	r3, [fp, #-136]	; 0xffffff78
   1335c:	mov	r1, r8
   13360:	add	r0, ip, r0
   13364:	bl	1273c <putc_unlocked@plt+0x13ac>
   13368:	cmp	r0, #7
   1336c:	mov	r4, r0
   13370:	bne	133c4 <argp_parse@@Base+0x750>
   13374:	ldr	r3, [fp, #-152]	; 0xffffff68
   13378:	b	1338c <argp_parse@@Base+0x718>
   1337c:	ldr	r2, [r3]
   13380:	cmp	r2, #0
   13384:	beq	13398 <argp_parse@@Base+0x724>
   13388:	add	r3, r3, #16
   1338c:	ldr	r2, [r3, #12]
   13390:	cmp	r2, r6
   13394:	bne	1337c <argp_parse@@Base+0x708>
   13398:	ldr	r2, [r3]
   1339c:	ldr	r1, [pc, #560]	; 135d4 <argp_parse@@Base+0x960>
   133a0:	cmp	r2, #0
   133a4:	moveq	r2, r1
   133a8:	ldr	r3, [pc, #528]	; 135c0 <argp_parse@@Base+0x94c>
   133ac:	ldr	r1, [pc, #548]	; 135d8 <argp_parse@@Base+0x964>
   133b0:	b	130d8 <argp_parse@@Base+0x464>
   133b4:	cmp	r4, #7
   133b8:	bne	1344c <argp_parse@@Base+0x7d8>
   133bc:	mov	r6, #1
   133c0:	b	130e0 <argp_parse@@Base+0x46c>
   133c4:	cmp	r4, #0
   133c8:	beq	13210 <argp_parse@@Base+0x59c>
   133cc:	b	130f0 <argp_parse@@Base+0x47c>
   133d0:	cmp	r4, #7
   133d4:	cmpne	r4, #0
   133d8:	bne	13134 <argp_parse@@Base+0x4c0>
   133dc:	ldr	r3, [r7, #12]
   133e0:	cmp	r3, #0
   133e4:	bne	13400 <argp_parse@@Base+0x78c>
   133e8:	mov	r3, r9
   133ec:	mov	r2, sl
   133f0:	mov	r1, r8
   133f4:	mov	r0, r7
   133f8:	bl	1273c <putc_unlocked@plt+0x13ac>
   133fc:	mov	r4, r0
   13400:	add	r7, r7, #36	; 0x24
   13404:	b	13128 <argp_parse@@Base+0x4b4>
   13408:	mov	r0, r6
   1340c:	mov	r3, r8
   13410:	mov	r2, r9
   13414:	mov	r1, r7
   13418:	bl	1273c <putc_unlocked@plt+0x13ac>
   1341c:	sub	r6, r6, #36	; 0x24
   13420:	mov	r4, r0
   13424:	b	13144 <argp_parse@@Base+0x4d0>
   13428:	cmp	r4, #7
   1342c:	beq	13538 <argp_parse@@Base+0x8c4>
   13430:	ldr	r3, [fp, #4]
   13434:	cmp	r3, #0
   13438:	bne	13168 <argp_parse@@Base+0x4f4>
   1343c:	cmp	r4, #0
   13440:	beq	13548 <argp_parse@@Base+0x8d4>
   13444:	cmp	r4, #7
   13448:	beq	134d0 <argp_parse@@Base+0x85c>
   1344c:	ldr	r6, [fp, #-112]	; 0xffffff90
   13450:	ldr	r9, [pc, #388]	; 135dc <argp_parse@@Base+0x968>
   13454:	add	r7, r5, #64	; 0x40
   13458:	mov	r8, #0
   1345c:	ldr	r3, [fp, #-108]	; 0xffffff94
   13460:	cmp	r6, r3
   13464:	bcc	134e8 <argp_parse@@Base+0x874>
   13468:	ldr	r6, [fp, #-108]	; 0xffffff94
   1346c:	ldr	r8, [pc, #364]	; 135e0 <argp_parse@@Base+0x96c>
   13470:	sub	r6, r6, #36	; 0x24
   13474:	add	r5, r5, #64	; 0x40
   13478:	mov	r7, #0
   1347c:	ldr	r3, [fp, #-112]	; 0xffffff90
   13480:	cmp	r6, r3
   13484:	bcs	13510 <argp_parse@@Base+0x89c>
   13488:	cmp	r4, #7
   1348c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   13490:	moveq	r4, #22
   13494:	bl	13710 <argp_parse@@Base+0xa9c>
   13498:	b	12f64 <argp_parse@@Base+0x2f0>
   1349c:	ldr	r2, [fp, #4]
   134a0:	cmp	r2, #0
   134a4:	strne	r3, [r2]
   134a8:	bne	13548 <argp_parse@@Base+0x8d4>
   134ac:	ldr	r3, [fp, #-80]	; 0xffffffb0
   134b0:	tst	r3, #2
   134b4:	bne	134d0 <argp_parse@@Base+0x85c>
   134b8:	ldr	r0, [fp, #-52]	; 0xffffffcc
   134bc:	cmp	r0, #0
   134c0:	beq	134d0 <argp_parse@@Base+0x85c>
   134c4:	ldr	r2, [fp, #-56]	; 0xffffffc8
   134c8:	ldr	r1, [pc, #276]	; 135e4 <argp_parse@@Base+0x970>
   134cc:	bl	1124c <fprintf@plt>
   134d0:	mov	r2, #260	; 0x104
   134d4:	ldr	r1, [fp, #-52]	; 0xffffffcc
   134d8:	add	r0, r5, #64	; 0x40
   134dc:	bl	17078 <argp_state_help@@Base>
   134e0:	mov	r4, #7
   134e4:	b	1344c <argp_parse@@Base+0x7d8>
   134e8:	mov	r0, r6
   134ec:	mov	r3, r8
   134f0:	mov	r2, r9
   134f4:	mov	r1, r7
   134f8:	bl	1273c <putc_unlocked@plt+0x13ac>
   134fc:	add	r6, r6, #36	; 0x24
   13500:	b	1345c <argp_parse@@Base+0x7e8>
   13504:	cmp	r4, #7
   13508:	moveq	r4, #0
   1350c:	b	13468 <argp_parse@@Base+0x7f4>
   13510:	mov	r0, r6
   13514:	mov	r3, r7
   13518:	mov	r2, r8
   1351c:	mov	r1, r5
   13520:	bl	1273c <putc_unlocked@plt+0x13ac>
   13524:	sub	r6, r6, #36	; 0x24
   13528:	b	1347c <argp_parse@@Base+0x808>
   1352c:	cmp	r0, #1
   13530:	bne	13078 <argp_parse@@Base+0x404>
   13534:	b	13198 <argp_parse@@Base+0x524>
   13538:	ldr	r3, [fp, #4]
   1353c:	cmp	r3, #0
   13540:	movne	r4, #0
   13544:	bne	13168 <argp_parse@@Base+0x4f4>
   13548:	ldr	r6, [fp, #-108]	; 0xffffff94
   1354c:	mov	r4, #0
   13550:	ldr	r9, [pc, #144]	; 135e8 <argp_parse@@Base+0x974>
   13554:	sub	r6, r6, #36	; 0x24
   13558:	add	r7, r5, #64	; 0x40
   1355c:	mov	r8, r4
   13560:	ldr	r3, [fp, #-112]	; 0xffffff90
   13564:	cmp	r6, r3
   13568:	bcc	13504 <argp_parse@@Base+0x890>
   1356c:	cmp	r4, #7
   13570:	cmpne	r4, #0
   13574:	bne	13468 <argp_parse@@Base+0x7f4>
   13578:	mov	r0, r6
   1357c:	mov	r3, r8
   13580:	mov	r2, r9
   13584:	mov	r1, r7
   13588:	bl	1273c <putc_unlocked@plt+0x13ac>
   1358c:	sub	r6, r6, #36	; 0x24
   13590:	mov	r4, r0
   13594:	b	13560 <argp_parse@@Base+0x8ec>
   13598:			; <UNDEFINED> instruction: 0x0002e8b4
   1359c:			; <UNDEFINED> instruction: 0x0002e8b0
   135a0:	andeq	sl, r1, r0, ror #2
   135a4:	andeq	lr, r2, r0, asr #18
   135a8:	ldrdeq	lr, [r2], -r8
   135ac:	andeq	sl, r1, ip, ror r1
   135b0:			; <UNDEFINED> instruction: 0x0002e8b8
   135b4:	tsteq	r0, r3
   135b8:			; <UNDEFINED> instruction: 0x0002e8bc
   135bc:	tsteq	r0, r6
   135c0:	muleq	r1, r8, r1
   135c4:	andeq	sl, r1, r7, lsr #5
   135c8:	tsteq	r0, r2
   135cc:	tsteq	r0, r1
   135d0:	andeq	sl, r1, r4, lsr #5
   135d4:	andeq	sl, r1, r0, lsr #5
   135d8:	andeq	sl, r1, pc, lsr #5
   135dc:	tsteq	r0, r5
   135e0:	tsteq	r0, r7
   135e4:			; <UNDEFINED> instruction: 0x0001a2b8
   135e8:	tsteq	r0, r4
   135ec:	cmp	r1, #0
   135f0:	ldrne	r2, [r1, #52]	; 0x34
   135f4:	ldrne	r3, [r2, #48]	; 0x30
   135f8:	ldrne	r2, [r2, #52]	; 0x34
   135fc:	bne	1360c <argp_parse@@Base+0x998>
   13600:	mov	r0, #0
   13604:	bx	lr
   13608:	add	r3, r3, #36	; 0x24
   1360c:	cmp	r3, r2
   13610:	bcs	13600 <argp_parse@@Base+0x98c>
   13614:	ldr	r1, [r3, #4]
   13618:	cmp	r1, r0
   1361c:	bne	13608 <argp_parse@@Base+0x994>
   13620:	ldr	r0, [r3, #24]
   13624:	bx	lr
   13628:	push	{r0, r1, r2, lr}
   1362c:	ldr	r1, [pc, #28]	; 13650 <argp_parse@@Base+0x9dc>
   13630:	ldr	r2, [pc, #28]	; 13654 <argp_parse@@Base+0x9e0>
   13634:	ldr	r3, [r1, #4]
   13638:	str	r3, [sp]
   1363c:	ldr	r3, [pc, #20]	; 13658 <argp_parse@@Base+0x9e4>
   13640:	ldr	r1, [r1]
   13644:	bl	13eb0 <_obstack_memory_used@@Base+0x3b0>
   13648:	add	sp, sp, #12
   1364c:	pop	{pc}		; (ldr pc, [sp], #4)
   13650:	ldrdeq	lr, [r2], -ip
   13654:	andeq	sl, r1, r8, lsl #7
   13658:	andeq	sl, r1, fp, ror r3
   1365c:	ldr	r3, [pc, #16]	; 13674 <argp_parse@@Base+0xa00>
   13660:	ldr	r2, [pc, #16]	; 13678 <argp_parse@@Base+0xa04>
   13664:	str	r2, [r3]
   13668:	ldr	r3, [pc, #12]	; 1367c <argp_parse@@Base+0xa08>
   1366c:	stm	r3, {r0, r1}
   13670:	bx	lr
   13674:	ldrdeq	lr, [r2], -r8
   13678:	andeq	r3, r1, r8, lsr #12
   1367c:	ldrdeq	lr, [r2], -ip
   13680:	mov	r2, r0
   13684:	push	{r4, lr}
   13688:	mov	r0, r2
   1368c:	ldrb	r3, [r2]
   13690:	add	r1, r2, #1
   13694:	cmp	r3, #47	; 0x2f
   13698:	beq	136bc <argp_parse@@Base+0xa48>
   1369c:	mov	r3, #0
   136a0:	mov	lr, #1
   136a4:	mov	r4, r3
   136a8:	mov	ip, r2
   136ac:	ldrb	r1, [r2], #1
   136b0:	cmp	r1, #0
   136b4:	bne	136c4 <argp_parse@@Base+0xa50>
   136b8:	pop	{r4, pc}
   136bc:	mov	r2, r1
   136c0:	b	13688 <argp_parse@@Base+0xa14>
   136c4:	cmp	r1, #47	; 0x2f
   136c8:	moveq	r3, lr
   136cc:	beq	136a8 <argp_parse@@Base+0xa34>
   136d0:	cmp	r3, #0
   136d4:	movne	r0, ip
   136d8:	movne	r3, r4
   136dc:	b	136a8 <argp_parse@@Base+0xa34>
   136e0:	push	{r4, lr}
   136e4:	mov	r4, r0
   136e8:	bl	11234 <strlen@plt>
   136ec:	cmp	r0, #1
   136f0:	popls	{r4, pc}
   136f4:	sub	r3, r0, #1
   136f8:	ldrb	r2, [r4, r3]
   136fc:	cmp	r2, #47	; 0x2f
   13700:	beq	13708 <argp_parse@@Base+0xa94>
   13704:	pop	{r4, pc}
   13708:	mov	r0, r3
   1370c:	b	136ec <argp_parse@@Base+0xa78>
   13710:	push	{r0, r1, r2, r4, r5, lr}
   13714:	mov	r5, r0
   13718:	bl	11258 <__errno_location@plt>
   1371c:	ldr	r3, [r0]
   13720:	mov	r4, r0
   13724:	str	r3, [sp]
   13728:	str	r3, [sp, #4]
   1372c:	mov	r3, #0
   13730:	str	r3, [r0]
   13734:	mov	r0, r5
   13738:	bl	11108 <free@plt>
   1373c:	ldr	r3, [r4]
   13740:	add	r2, sp, #8
   13744:	cmp	r3, #0
   13748:	moveq	r3, #4
   1374c:	movne	r3, #0
   13750:	add	r3, r2, r3
   13754:	ldr	r3, [r3, #-8]
   13758:	str	r3, [r4]
   1375c:	add	sp, sp, #12
   13760:	pop	{r4, r5, pc}
   13764:	push	{r0, r1, r2, r3, r4, lr}
   13768:	mov	ip, #0
   1376c:	str	ip, [sp, #8]
   13770:	str	ip, [sp, #4]
   13774:	ldr	ip, [sp, #24]
   13778:	str	ip, [sp]
   1377c:	bl	17bfc <argp_error@@Base+0xae4>
   13780:	add	sp, sp, #20
   13784:	pop	{pc}		; (ldr pc, [sp], #4)
   13788:	push	{r0, r1, r2, r3, r4, lr}
   1378c:	mov	ip, #0
   13790:	ldr	lr, [sp, #28]
   13794:	str	ip, [sp, #12]
   13798:	stmib	sp, {ip, lr}
   1379c:	ldr	ip, [sp, #24]
   137a0:	str	ip, [sp]
   137a4:	bl	17704 <argp_error@@Base+0x5ec>
   137a8:	add	sp, sp, #20
   137ac:	pop	{pc}		; (ldr pc, [sp], #4)
   137b0:	push	{r0, r1, r2, r3, r4, lr}
   137b4:	mov	ip, #1
   137b8:	mov	lr, #0
   137bc:	stmib	sp, {ip, lr}
   137c0:	ldr	ip, [sp, #24]
   137c4:	str	ip, [sp]
   137c8:	bl	17bfc <argp_error@@Base+0xae4>
   137cc:	add	sp, sp, #20
   137d0:	pop	{pc}		; (ldr pc, [sp], #4)
   137d4:	push	{r0, r1, r2, r3, r4, lr}
   137d8:	mov	ip, #0
   137dc:	str	ip, [sp, #12]
   137e0:	ldr	ip, [sp, #28]
   137e4:	str	ip, [sp, #8]
   137e8:	mov	ip, #1
   137ec:	str	ip, [sp, #4]
   137f0:	ldr	ip, [sp, #24]
   137f4:	str	ip, [sp]
   137f8:	bl	17704 <argp_error@@Base+0x5ec>
   137fc:	add	sp, sp, #20
   13800:	pop	{pc}		; (ldr pc, [sp], #4)
   13804:	ldr	r3, [pc, #28]	; 13828 <argp_parse@@Base+0xbb4>
   13808:	push	{r4, lr}
   1380c:	ldr	r0, [r3]
   13810:	ldr	r2, [pc, #20]	; 1382c <argp_parse@@Base+0xbb8>
   13814:	ldr	r1, [pc, #20]	; 13830 <argp_parse@@Base+0xbbc>
   13818:	bl	1124c <fprintf@plt>
   1381c:	ldr	r3, [pc, #16]	; 13834 <argp_parse@@Base+0xbc0>
   13820:	ldr	r0, [r3]
   13824:	bl	11228 <exit@plt>
   13828:			; <UNDEFINED> instruction: 0x0002e8b8
   1382c:	muleq	r1, r6, r3
   13830:	strdeq	sl, [r1], -r3
   13834:	muleq	r2, r8, r8
   13838:	mov	r3, r0
   1383c:	mov	r0, r1
   13840:	ldrb	r2, [r3, #40]	; 0x28
   13844:	tst	r2, #1
   13848:	beq	13858 <argp_parse@@Base+0xbe4>
   1384c:	ldr	r2, [r3, #28]
   13850:	ldr	r0, [r3, #36]	; 0x24
   13854:	bx	r2
   13858:	ldr	r3, [r3, #28]
   1385c:	bx	r3
   13860:	mov	r3, r0
   13864:	mov	r0, r1
   13868:	ldrb	r2, [r3, #40]	; 0x28
   1386c:	tst	r2, #1
   13870:	beq	13880 <argp_parse@@Base+0xc0c>
   13874:	ldr	r2, [r3, #32]
   13878:	ldr	r0, [r3, #36]	; 0x24
   1387c:	bx	r2
   13880:	ldr	r3, [r3, #32]
   13884:	bx	r3
   13888:	cmp	r2, #0
   1388c:	ldr	r3, [pc, #128]	; 13914 <argp_parse@@Base+0xca0>
   13890:	push	{r4, r5, r6, lr}
   13894:	movne	r5, r2
   13898:	moveq	r5, #8
   1389c:	cmp	r1, #0
   138a0:	moveq	r1, r3
   138a4:	sub	r6, r5, #1
   138a8:	str	r1, [r0]
   138ac:	str	r6, [r0, #24]
   138b0:	mov	r4, r0
   138b4:	bl	13838 <argp_parse@@Base+0xbc4>
   138b8:	cmp	r0, #0
   138bc:	str	r0, [r4, #4]
   138c0:	bne	138d0 <argp_parse@@Base+0xc5c>
   138c4:	ldr	r3, [pc, #76]	; 13918 <argp_parse@@Base+0xca4>
   138c8:	ldr	r3, [r3]
   138cc:	blx	r3
   138d0:	add	r3, r0, #8
   138d4:	add	r3, r3, r6
   138d8:	rsb	r2, r5, #0
   138dc:	and	r2, r2, r3
   138e0:	ldr	r3, [r4]
   138e4:	str	r2, [r4, #8]
   138e8:	add	r3, r0, r3
   138ec:	str	r2, [r4, #12]
   138f0:	str	r3, [r0]
   138f4:	str	r3, [r4, #16]
   138f8:	mov	r3, #0
   138fc:	str	r3, [r0, #4]
   13900:	ldrb	r3, [r4, #40]	; 0x28
   13904:	mov	r0, #1
   13908:	and	r3, r3, #249	; 0xf9
   1390c:	strb	r3, [r4, #40]	; 0x28
   13910:	pop	{r4, r5, r6, pc}
   13914:	andeq	r0, r0, r8, ror #31
   13918:	andeq	lr, r2, ip, ror #16

0001391c <_obstack_begin@@Base>:
   1391c:	str	r3, [r0, #28]
   13920:	ldr	r3, [sp]
   13924:	str	r3, [r0, #32]
   13928:	ldrb	r3, [r0, #40]	; 0x28
   1392c:	bic	r3, r3, #1
   13930:	strb	r3, [r0, #40]	; 0x28
   13934:	b	13888 <argp_parse@@Base+0xc14>

00013938 <_obstack_begin_1@@Base>:
   13938:	str	r3, [r0, #28]
   1393c:	ldr	r3, [sp]
   13940:	str	r3, [r0, #32]
   13944:	ldr	r3, [sp, #4]
   13948:	str	r3, [r0, #36]	; 0x24
   1394c:	ldrb	r3, [r0, #40]	; 0x28
   13950:	orr	r3, r3, #1
   13954:	strb	r3, [r0, #40]	; 0x28
   13958:	b	13888 <argp_parse@@Base+0xc14>

0001395c <_obstack_newchunk@@Base>:
   1395c:	push	{r4, r5, r6, r7, r8, lr}
   13960:	ldr	r3, [r0, #8]
   13964:	ldr	r5, [r0, #12]
   13968:	sub	r6, r5, r3
   1396c:	ldr	r3, [r0, #24]
   13970:	add	r1, r6, r1
   13974:	adds	r3, r1, r3
   13978:	movcc	r2, #1
   1397c:	movcs	r2, #0
   13980:	cmp	r6, r1
   13984:	movhi	r1, #0
   13988:	andls	r1, r2, #1
   1398c:	cmp	r1, #0
   13990:	bne	139a0 <_obstack_newchunk@@Base+0x44>
   13994:	ldr	r3, [pc, #196]	; 13a60 <_obstack_newchunk@@Base+0x104>
   13998:	ldr	r3, [r3]
   1399c:	blx	r3
   139a0:	ldr	r2, [r0]
   139a4:	add	r5, r3, r6, lsr #3
   139a8:	cmp	r3, r2
   139ac:	add	r5, r5, #100	; 0x64
   139b0:	movcc	r3, r2
   139b4:	cmp	r3, r5
   139b8:	movcs	r5, r3
   139bc:	mov	r1, r5
   139c0:	mov	r4, r0
   139c4:	ldr	r8, [r0, #4]
   139c8:	bl	13838 <argp_parse@@Base+0xbc4>
   139cc:	subs	r7, r0, #0
   139d0:	beq	13994 <_obstack_newchunk@@Base+0x38>
   139d4:	mov	r3, r7
   139d8:	add	r5, r7, r5
   139dc:	str	r7, [r4, #4]
   139e0:	str	r8, [r7, #4]
   139e4:	str	r5, [r4, #16]
   139e8:	str	r5, [r3], #8
   139ec:	ldr	r5, [r4, #24]
   139f0:	mov	r2, r6
   139f4:	add	r3, r3, r5
   139f8:	bic	r5, r3, r5
   139fc:	ldr	r1, [r4, #8]
   13a00:	mov	r0, r5
   13a04:	bl	11144 <memcpy@plt>
   13a08:	ldrb	r3, [r4, #40]	; 0x28
   13a0c:	tst	r3, #2
   13a10:	bne	13a44 <_obstack_newchunk@@Base+0xe8>
   13a14:	ldr	r2, [r4, #24]
   13a18:	add	r3, r8, #8
   13a1c:	add	r3, r3, r2
   13a20:	bic	r3, r3, r2
   13a24:	ldr	r2, [r4, #8]
   13a28:	cmp	r2, r3
   13a2c:	bne	13a44 <_obstack_newchunk@@Base+0xe8>
   13a30:	ldr	r3, [r8, #4]
   13a34:	mov	r1, r8
   13a38:	str	r3, [r7, #4]
   13a3c:	mov	r0, r4
   13a40:	bl	13860 <argp_parse@@Base+0xbec>
   13a44:	ldrb	r3, [r4, #40]	; 0x28
   13a48:	str	r5, [r4, #8]
   13a4c:	add	r5, r5, r6
   13a50:	bic	r3, r3, #2
   13a54:	str	r5, [r4, #12]
   13a58:	strb	r3, [r4, #40]	; 0x28
   13a5c:	pop	{r4, r5, r6, r7, r8, pc}
   13a60:	andeq	lr, r2, ip, ror #16

00013a64 <_obstack_allocated_p@@Base>:
   13a64:	ldr	r0, [r0, #4]
   13a68:	cmp	r0, #0
   13a6c:	beq	13a84 <_obstack_allocated_p@@Base+0x20>
   13a70:	cmp	r0, r1
   13a74:	bcs	13a64 <_obstack_allocated_p@@Base>
   13a78:	ldr	r3, [r0]
   13a7c:	cmp	r1, r3
   13a80:	bhi	13a64 <_obstack_allocated_p@@Base>
   13a84:	adds	r0, r0, #0
   13a88:	movne	r0, #1
   13a8c:	bx	lr

00013a90 <_obstack_free@@Base>:
   13a90:	push	{r4, r5, r6, lr}
   13a94:	mov	r5, r1
   13a98:	ldr	r1, [r0, #4]
   13a9c:	mov	r4, r0
   13aa0:	cmp	r1, #0
   13aa4:	beq	13af4 <_obstack_free@@Base+0x64>
   13aa8:	cmp	r1, r5
   13aac:	bcs	13ad0 <_obstack_free@@Base+0x40>
   13ab0:	ldr	r3, [r1]
   13ab4:	cmp	r5, r3
   13ab8:	bhi	13ad0 <_obstack_free@@Base+0x40>
   13abc:	str	r5, [r4, #12]
   13ac0:	str	r5, [r4, #8]
   13ac4:	str	r3, [r4, #16]
   13ac8:	str	r1, [r4, #4]
   13acc:	pop	{r4, r5, r6, pc}
   13ad0:	mov	r0, r4
   13ad4:	ldr	r6, [r1, #4]
   13ad8:	bl	13860 <argp_parse@@Base+0xbec>
   13adc:	ldrb	r3, [r4, #40]	; 0x28
   13ae0:	mov	r1, r6
   13ae4:	orr	r3, r3, #2
   13ae8:	strb	r3, [r4, #40]	; 0x28
   13aec:	b	13aa0 <_obstack_free@@Base+0x10>
   13af0:	bl	11360 <abort@plt>
   13af4:	cmp	r5, #0
   13af8:	bne	13af0 <_obstack_free@@Base+0x60>
   13afc:	pop	{r4, r5, r6, pc}

00013b00 <_obstack_memory_used@@Base>:
   13b00:	ldr	r3, [r0, #4]
   13b04:	mov	r0, #0
   13b08:	cmp	r3, #0
   13b0c:	bne	13b14 <_obstack_memory_used@@Base+0x14>
   13b10:	bx	lr
   13b14:	ldr	r2, [r3]
   13b18:	sub	r2, r2, r3
   13b1c:	add	r0, r0, r2
   13b20:	ldr	r3, [r3, #4]
   13b24:	b	13b08 <_obstack_memory_used@@Base+0x8>
   13b28:	push	{r4, r5, r6, lr}
   13b2c:	subs	r5, r0, #0
   13b30:	bne	13b48 <_obstack_memory_used@@Base+0x48>
   13b34:	ldr	r3, [pc, #124]	; 13bb8 <_obstack_memory_used@@Base+0xb8>
   13b38:	ldr	r0, [pc, #124]	; 13bbc <_obstack_memory_used@@Base+0xbc>
   13b3c:	ldr	r1, [r3]
   13b40:	bl	11348 <fputs@plt>
   13b44:	bl	11360 <abort@plt>
   13b48:	mov	r1, #47	; 0x2f
   13b4c:	bl	112a0 <strrchr@plt>
   13b50:	cmp	r0, #0
   13b54:	addne	r4, r0, #1
   13b58:	moveq	r4, r5
   13b5c:	sub	r3, r4, r5
   13b60:	cmp	r3, #6
   13b64:	ble	13ba4 <_obstack_memory_used@@Base+0xa4>
   13b68:	mov	r2, #7
   13b6c:	ldr	r1, [pc, #76]	; 13bc0 <_obstack_memory_used@@Base+0xc0>
   13b70:	sub	r0, r4, #7
   13b74:	bl	11354 <strncmp@plt>
   13b78:	cmp	r0, #0
   13b7c:	bne	13ba4 <_obstack_memory_used@@Base+0xa4>
   13b80:	mov	r2, #3
   13b84:	ldr	r1, [pc, #56]	; 13bc4 <_obstack_memory_used@@Base+0xc4>
   13b88:	mov	r0, r4
   13b8c:	bl	11354 <strncmp@plt>
   13b90:	cmp	r0, #0
   13b94:	movne	r5, r4
   13b98:	ldreq	r3, [pc, #40]	; 13bc8 <_obstack_memory_used@@Base+0xc8>
   13b9c:	addeq	r5, r4, #3
   13ba0:	streq	r5, [r3]
   13ba4:	ldr	r3, [pc, #32]	; 13bcc <_obstack_memory_used@@Base+0xcc>
   13ba8:	str	r5, [r3]
   13bac:	ldr	r3, [pc, #28]	; 13bd0 <_obstack_memory_used@@Base+0xd0>
   13bb0:	str	r5, [r3]
   13bb4:	pop	{r4, r5, r6, pc}
   13bb8:			; <UNDEFINED> instruction: 0x0002e8b8
   13bbc:	andeq	sl, r1, r7, lsr #7
   13bc0:	ldrdeq	sl, [r1], -pc	; <UNPREDICTABLE>
   13bc4:	andeq	sl, r1, r7, ror #7
   13bc8:			; <UNDEFINED> instruction: 0x0002e8b0
   13bcc:	andeq	lr, r2, r4, ror #17
   13bd0:			; <UNDEFINED> instruction: 0x0002e8b4
   13bd4:	push	{r4, r5, r6, lr}
   13bd8:	sub	sp, sp, #32
   13bdc:	cmp	r1, #0
   13be0:	mov	r5, r0
   13be4:	ldr	r4, [sp, #48]	; 0x30
   13be8:	ldr	r6, [sp, #52]	; 0x34
   13bec:	beq	13c74 <_obstack_memory_used@@Base+0x174>
   13bf0:	str	r3, [sp]
   13bf4:	mov	r3, r2
   13bf8:	mov	r2, r1
   13bfc:	ldr	r1, [pc, #616]	; 13e6c <_obstack_memory_used@@Base+0x36c>
   13c00:	bl	1124c <fprintf@plt>
   13c04:	ldr	r3, [pc, #612]	; 13e70 <_obstack_memory_used@@Base+0x370>
   13c08:	ldr	r2, [pc, #612]	; 13e74 <_obstack_memory_used@@Base+0x374>
   13c0c:	ldr	r1, [pc, #612]	; 13e78 <_obstack_memory_used@@Base+0x378>
   13c10:	mov	r0, r5
   13c14:	bl	1124c <fprintf@plt>
   13c18:	mov	r1, r5
   13c1c:	mov	r0, #10
   13c20:	bl	112b8 <fputc@plt>
   13c24:	ldr	r1, [pc, #592]	; 13e7c <_obstack_memory_used@@Base+0x37c>
   13c28:	ldr	r2, [pc, #592]	; 13e80 <_obstack_memory_used@@Base+0x380>
   13c2c:	mov	r0, r5
   13c30:	bl	1124c <fprintf@plt>
   13c34:	mov	r1, r5
   13c38:	mov	r0, #10
   13c3c:	bl	112b8 <fputc@plt>
   13c40:	cmp	r6, #9
   13c44:	ldrls	pc, [pc, r6, lsl #2]
   13c48:	b	13e28 <_obstack_memory_used@@Base+0x328>
   13c4c:	andeq	r3, r1, r0, lsr #26
   13c50:	andeq	r3, r1, r0, lsl #25
   13c54:	muleq	r1, r8, ip
   13c58:			; <UNDEFINED> instruction: 0x00013cb0
   13c5c:	ldrdeq	r3, [r1], -r0
   13c60:	strdeq	r3, [r1], -r8
   13c64:	andeq	r3, r1, r8, lsr #26
   13c68:	andeq	r3, r1, ip, asr sp
   13c6c:	muleq	r1, r8, sp
   13c70:	ldrdeq	r3, [r1], -ip
   13c74:	ldr	r1, [pc, #520]	; 13e84 <_obstack_memory_used@@Base+0x384>
   13c78:	bl	1124c <fprintf@plt>
   13c7c:	b	13c04 <_obstack_memory_used@@Base+0x104>
   13c80:	ldr	r2, [r4]
   13c84:	ldr	r1, [pc, #508]	; 13e88 <_obstack_memory_used@@Base+0x388>
   13c88:	mov	r0, r5
   13c8c:	add	sp, sp, #32
   13c90:	pop	{r4, r5, r6, lr}
   13c94:	b	1124c <fprintf@plt>
   13c98:	ldm	r4, {r2, r3}
   13c9c:	ldr	r1, [pc, #488]	; 13e8c <_obstack_memory_used@@Base+0x38c>
   13ca0:	mov	r0, r5
   13ca4:	add	sp, sp, #32
   13ca8:	pop	{r4, r5, r6, lr}
   13cac:	b	1124c <fprintf@plt>
   13cb0:	ldr	r3, [r4, #8]
   13cb4:	ldr	r1, [pc, #468]	; 13e90 <_obstack_memory_used@@Base+0x390>
   13cb8:	str	r3, [sp, #48]	; 0x30
   13cbc:	mov	r0, r5
   13cc0:	ldm	r4, {r2, r3}
   13cc4:	add	sp, sp, #32
   13cc8:	pop	{r4, r5, r6, lr}
   13ccc:	b	1124c <fprintf@plt>
   13cd0:	ldr	r3, [r4, #12]
   13cd4:	ldr	r1, [pc, #440]	; 13e94 <_obstack_memory_used@@Base+0x394>
   13cd8:	str	r3, [sp, #52]	; 0x34
   13cdc:	ldr	r3, [r4, #8]
   13ce0:	mov	r0, r5
   13ce4:	str	r3, [sp, #48]	; 0x30
   13ce8:	ldm	r4, {r2, r3}
   13cec:	add	sp, sp, #32
   13cf0:	pop	{r4, r5, r6, lr}
   13cf4:	b	1124c <fprintf@plt>
   13cf8:	ldr	r3, [r4, #16]
   13cfc:	ldr	r1, [pc, #404]	; 13e98 <_obstack_memory_used@@Base+0x398>
   13d00:	str	r3, [sp, #8]
   13d04:	ldr	r3, [r4, #12]
   13d08:	mov	r0, r5
   13d0c:	str	r3, [sp, #4]
   13d10:	ldr	r3, [r4, #8]
   13d14:	str	r3, [sp]
   13d18:	ldm	r4, {r2, r3}
   13d1c:	bl	1124c <fprintf@plt>
   13d20:	add	sp, sp, #32
   13d24:	pop	{r4, r5, r6, pc}
   13d28:	ldr	r3, [r4, #20]
   13d2c:	ldr	r1, [pc, #360]	; 13e9c <_obstack_memory_used@@Base+0x39c>
   13d30:	str	r3, [sp, #12]
   13d34:	ldr	r3, [r4, #16]
   13d38:	mov	r0, r5
   13d3c:	str	r3, [sp, #8]
   13d40:	ldr	r3, [r4, #12]
   13d44:	str	r3, [sp, #4]
   13d48:	ldr	r3, [r4, #8]
   13d4c:	str	r3, [sp]
   13d50:	ldm	r4, {r2, r3}
   13d54:	bl	1124c <fprintf@plt>
   13d58:	b	13d20 <_obstack_memory_used@@Base+0x220>
   13d5c:	ldr	r3, [r4, #24]
   13d60:	ldr	r1, [pc, #312]	; 13ea0 <_obstack_memory_used@@Base+0x3a0>
   13d64:	str	r3, [sp, #16]
   13d68:	ldr	r3, [r4, #20]
   13d6c:	mov	r0, r5
   13d70:	str	r3, [sp, #12]
   13d74:	ldr	r3, [r4, #16]
   13d78:	str	r3, [sp, #8]
   13d7c:	ldr	r3, [r4, #12]
   13d80:	str	r3, [sp, #4]
   13d84:	ldr	r3, [r4, #8]
   13d88:	str	r3, [sp]
   13d8c:	ldm	r4, {r2, r3}
   13d90:	bl	1124c <fprintf@plt>
   13d94:	b	13d20 <_obstack_memory_used@@Base+0x220>
   13d98:	ldr	r3, [r4, #28]
   13d9c:	ldr	r1, [pc, #256]	; 13ea4 <_obstack_memory_used@@Base+0x3a4>
   13da0:	str	r3, [sp, #20]
   13da4:	ldr	r3, [r4, #24]
   13da8:	mov	r0, r5
   13dac:	str	r3, [sp, #16]
   13db0:	ldr	r3, [r4, #20]
   13db4:	str	r3, [sp, #12]
   13db8:	ldr	r3, [r4, #16]
   13dbc:	str	r3, [sp, #8]
   13dc0:	ldr	r3, [r4, #12]
   13dc4:	str	r3, [sp, #4]
   13dc8:	ldr	r3, [r4, #8]
   13dcc:	str	r3, [sp]
   13dd0:	ldm	r4, {r2, r3}
   13dd4:	bl	1124c <fprintf@plt>
   13dd8:	b	13d20 <_obstack_memory_used@@Base+0x220>
   13ddc:	ldr	r3, [r4, #32]
   13de0:	ldr	r1, [pc, #192]	; 13ea8 <_obstack_memory_used@@Base+0x3a8>
   13de4:	str	r3, [sp, #24]
   13de8:	ldr	r3, [r4, #28]
   13dec:	str	r3, [sp, #20]
   13df0:	ldr	r3, [r4, #24]
   13df4:	str	r3, [sp, #16]
   13df8:	ldr	r3, [r4, #20]
   13dfc:	str	r3, [sp, #12]
   13e00:	ldr	r3, [r4, #16]
   13e04:	str	r3, [sp, #8]
   13e08:	ldr	r3, [r4, #12]
   13e0c:	str	r3, [sp, #4]
   13e10:	ldr	r3, [r4, #8]
   13e14:	str	r3, [sp]
   13e18:	ldm	r4, {r2, r3}
   13e1c:	mov	r0, r5
   13e20:	bl	1124c <fprintf@plt>
   13e24:	b	13d20 <_obstack_memory_used@@Base+0x220>
   13e28:	ldr	r3, [r4, #32]
   13e2c:	ldr	r1, [pc, #120]	; 13eac <_obstack_memory_used@@Base+0x3ac>
   13e30:	str	r3, [sp, #24]
   13e34:	ldr	r3, [r4, #28]
   13e38:	str	r3, [sp, #20]
   13e3c:	ldr	r3, [r4, #24]
   13e40:	str	r3, [sp, #16]
   13e44:	ldr	r3, [r4, #20]
   13e48:	str	r3, [sp, #12]
   13e4c:	ldr	r3, [r4, #16]
   13e50:	str	r3, [sp, #8]
   13e54:	ldr	r3, [r4, #12]
   13e58:	str	r3, [sp, #4]
   13e5c:	ldr	r3, [r4, #8]
   13e60:	str	r3, [sp]
   13e64:	ldm	r4, {r2, r3}
   13e68:	b	13e1c <_obstack_memory_used@@Base+0x31c>
   13e6c:	andeq	sl, r1, fp, ror #7
   13e70:	andeq	r0, r0, r6, ror #15
   13e74:	strdeq	sl, [r1], -lr
   13e78:	strdeq	sl, [r1], -r3
   13e7c:	andeq	sl, r1, r4, lsr #8
   13e80:	andeq	sl, r1, r2, lsl #8
   13e84:	strdeq	sl, [r1], -r7
   13e88:	andeq	sl, r1, pc, asr #9
   13e8c:	ldrdeq	sl, [r1], -pc	; <UNPREDICTABLE>
   13e90:	strdeq	sl, [r1], -r6
   13e94:	andeq	sl, r1, r2, lsl r5
   13e98:	andeq	sl, r1, r2, lsr r5
   13e9c:	andeq	sl, r1, r6, asr r5
   13ea0:	andeq	sl, r1, lr, ror r5
   13ea4:	andeq	sl, r1, sl, lsr #11
   13ea8:	ldrdeq	sl, [r1], -sl	; <UNPREDICTABLE>
   13eac:	andeq	sl, r1, lr, lsl #12
   13eb0:	push	{r0, r1, r4, lr}
   13eb4:	mov	ip, #0
   13eb8:	ldr	lr, [sp, #16]
   13ebc:	ldr	r4, [lr, ip, lsl #2]
   13ec0:	cmp	r4, #0
   13ec4:	bne	13edc <_obstack_memory_used@@Base+0x3dc>
   13ec8:	str	ip, [sp, #4]
   13ecc:	str	lr, [sp]
   13ed0:	bl	13bd4 <_obstack_memory_used@@Base+0xd4>
   13ed4:	add	sp, sp, #8
   13ed8:	pop	{r4, pc}
   13edc:	add	ip, ip, #1
   13ee0:	b	13ebc <_obstack_memory_used@@Base+0x3bc>
   13ee4:	push	{r4, r5, lr}
   13ee8:	sub	sp, sp, #52	; 0x34
   13eec:	mov	ip, #0
   13ef0:	ldr	r5, [sp, #64]	; 0x40
   13ef4:	add	lr, sp, #8
   13ef8:	ldr	r4, [r5, ip, lsl #2]
   13efc:	cmp	r4, #0
   13f00:	str	r4, [lr, ip, lsl #2]
   13f04:	beq	13f14 <_obstack_memory_used@@Base+0x414>
   13f08:	add	ip, ip, #1
   13f0c:	cmp	ip, #10
   13f10:	bne	13ef8 <_obstack_memory_used@@Base+0x3f8>
   13f14:	str	ip, [sp, #4]
   13f18:	str	lr, [sp]
   13f1c:	bl	13bd4 <_obstack_memory_used@@Base+0xd4>
   13f20:	add	sp, sp, #52	; 0x34
   13f24:	pop	{r4, r5, pc}
   13f28:	push	{r3}		; (str r3, [sp, #-4]!)
   13f2c:	push	{r0, r1, r2, r3, lr}
   13f30:	add	r3, sp, #24
   13f34:	str	r3, [sp, #12]
   13f38:	str	r3, [sp]
   13f3c:	ldr	r3, [sp, #20]
   13f40:	bl	13ee4 <_obstack_memory_used@@Base+0x3e4>
   13f44:	add	sp, sp, #16
   13f48:	pop	{lr}		; (ldr lr, [sp], #4)
   13f4c:	add	sp, sp, #4
   13f50:	bx	lr
   13f54:	ldr	r3, [pc, #56]	; 13f94 <_obstack_memory_used@@Base+0x494>
   13f58:	push	{r4, lr}
   13f5c:	mov	r0, #10
   13f60:	ldr	r1, [r3]
   13f64:	bl	112b8 <fputc@plt>
   13f68:	ldr	r1, [pc, #40]	; 13f98 <_obstack_memory_used@@Base+0x498>
   13f6c:	ldr	r0, [pc, #40]	; 13f9c <_obstack_memory_used@@Base+0x49c>
   13f70:	bl	110e4 <printf@plt>
   13f74:	ldr	r1, [pc, #36]	; 13fa0 <_obstack_memory_used@@Base+0x4a0>
   13f78:	ldr	r2, [pc, #36]	; 13fa4 <_obstack_memory_used@@Base+0x4a4>
   13f7c:	ldr	r0, [pc, #36]	; 13fa8 <_obstack_memory_used@@Base+0x4a8>
   13f80:	bl	110e4 <printf@plt>
   13f84:	ldr	r1, [pc, #32]	; 13fac <_obstack_memory_used@@Base+0x4ac>
   13f88:	ldr	r0, [pc, #32]	; 13fb0 <_obstack_memory_used@@Base+0x4b0>
   13f8c:	pop	{r4, lr}
   13f90:	b	110e4 <printf@plt>
   13f94:			; <UNDEFINED> instruction: 0x0002e8bc
   13f98:	andeq	sl, r1, sl, asr #12
   13f9c:	andeq	sl, r1, r0, ror #12
   13fa0:	andeq	sl, r1, r8, lsl #7
   13fa4:	andeq	sl, r1, r4, ror r6
   13fa8:	muleq	r1, fp, r6
   13fac:	andeq	sl, r1, pc, lsr #13
   13fb0:	andeq	sl, r1, ip, asr #13
   13fb4:	push	{r4, lr}
   13fb8:	bl	144bc <_obstack_memory_used@@Base+0x9bc>
   13fbc:	cmp	r0, #0
   13fc0:	popne	{r4, pc}
   13fc4:	bl	14448 <_obstack_memory_used@@Base+0x948>
   13fc8:	push	{r4, lr}
   13fcc:	bl	144bc <_obstack_memory_used@@Base+0x9bc>
   13fd0:	cmp	r0, #0
   13fd4:	popne	{r4, pc}
   13fd8:	bl	14448 <_obstack_memory_used@@Base+0x948>
   13fdc:	b	13fb4 <_obstack_memory_used@@Base+0x4b4>
   13fe0:	push	{r4, r5, r6, lr}
   13fe4:	mov	r5, r0
   13fe8:	mov	r4, r1
   13fec:	bl	144fc <_obstack_memory_used@@Base+0x9fc>
   13ff0:	cmp	r0, #0
   13ff4:	popne	{r4, r5, r6, pc}
   13ff8:	adds	r4, r4, #0
   13ffc:	movne	r4, #1
   14000:	cmp	r5, #0
   14004:	orreq	r4, r4, #1
   14008:	cmp	r4, #0
   1400c:	popeq	{r4, r5, r6, pc}
   14010:	bl	14448 <_obstack_memory_used@@Base+0x948>
   14014:	push	{r4, lr}
   14018:	cmp	r1, #0
   1401c:	orreq	r1, r1, #1
   14020:	bl	144fc <_obstack_memory_used@@Base+0x9fc>
   14024:	cmp	r0, #0
   14028:	popne	{r4, pc}
   1402c:	bl	14448 <_obstack_memory_used@@Base+0x948>
   14030:	push	{r4, r5, r6, lr}
   14034:	mov	r6, r0
   14038:	mov	r5, r1
   1403c:	mov	r4, r2
   14040:	bl	17c90 <argp_error@@Base+0xb78>
   14044:	cmp	r0, #0
   14048:	popne	{r4, r5, r6, pc}
   1404c:	cmp	r6, #0
   14050:	beq	14060 <_obstack_memory_used@@Base+0x560>
   14054:	cmp	r5, #0
   14058:	cmpne	r4, #0
   1405c:	popeq	{r4, r5, r6, pc}
   14060:	bl	14448 <_obstack_memory_used@@Base+0x948>
   14064:	b	14030 <_obstack_memory_used@@Base+0x530>
   14068:	cmp	r2, #0
   1406c:	cmpne	r1, #0
   14070:	moveq	r2, #1
   14074:	moveq	r1, r2
   14078:	push	{r4, lr}
   1407c:	bl	17c90 <argp_error@@Base+0xb78>
   14080:	cmp	r0, #0
   14084:	popne	{r4, pc}
   14088:	bl	14448 <_obstack_memory_used@@Base+0x948>
   1408c:	mov	r2, r1
   14090:	mov	r1, r0
   14094:	mov	r0, #0
   14098:	b	14030 <_obstack_memory_used@@Base+0x530>
   1409c:	mov	r2, r1
   140a0:	mov	r1, r0
   140a4:	mov	r0, #0
   140a8:	b	14068 <_obstack_memory_used@@Base+0x568>
   140ac:	push	{r4, r5, r6, r7, r8, lr}
   140b0:	subs	r7, r0, #0
   140b4:	mov	r5, r1
   140b8:	mov	r6, r2
   140bc:	ldr	r4, [r1]
   140c0:	bne	140fc <_obstack_memory_used@@Base+0x5fc>
   140c4:	cmp	r4, #0
   140c8:	bne	140e4 <_obstack_memory_used@@Base+0x5e4>
   140cc:	mov	r1, r2
   140d0:	mov	r0, #64	; 0x40
   140d4:	bl	182fc <argp_error@@Base+0x11e4>
   140d8:	cmp	r0, #0
   140dc:	movne	r4, r0
   140e0:	addeq	r4, r0, #1
   140e4:	mov	r2, r6
   140e8:	mov	r1, r4
   140ec:	mov	r0, r7
   140f0:	bl	14030 <_obstack_memory_used@@Base+0x530>
   140f4:	str	r4, [r5]
   140f8:	pop	{r4, r5, r6, r7, r8, pc}
   140fc:	lsr	r2, r4, #1
   14100:	add	r3, r2, #1
   14104:	mvn	r3, r3
   14108:	cmp	r4, r3
   1410c:	addls	r4, r4, #1
   14110:	addls	r4, r4, r2
   14114:	bls	140e4 <_obstack_memory_used@@Base+0x5e4>
   14118:	bl	14448 <_obstack_memory_used@@Base+0x948>
   1411c:	mov	r2, #1
   14120:	b	140ac <_obstack_memory_used@@Base+0x5ac>
   14124:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14128:	mov	sl, r0
   1412c:	ldr	r8, [r1]
   14130:	mov	fp, r1
   14134:	mov	r5, r2
   14138:	asrs	r4, r8, #1
   1413c:	mov	r9, r3
   14140:	ldr	r7, [sp, #48]	; 0x30
   14144:	bpl	141e0 <_obstack_memory_used@@Base+0x6e0>
   14148:	rsb	r2, r4, #-2147483648	; 0x80000000
   1414c:	cmp	r8, r2
   14150:	movge	r2, #0
   14154:	movlt	r2, #1
   14158:	mvn	r3, r9
   1415c:	cmp	r2, #0
   14160:	lsr	r3, r3, #31
   14164:	addeq	r4, r4, r8
   14168:	mvnne	r4, #-2147483648	; 0x80000000
   1416c:	mov	r0, r3
   14170:	cmp	r9, r4
   14174:	movge	r0, #0
   14178:	andlt	r0, r0, #1
   1417c:	cmp	r0, #0
   14180:	str	r3, [sp, #4]
   14184:	bne	14354 <_obstack_memory_used@@Base+0x854>
   14188:	cmp	r7, #0
   1418c:	bge	142a0 <_obstack_memory_used@@Base+0x7a0>
   14190:	cmp	r4, #0
   14194:	bge	141f8 <_obstack_memory_used@@Base+0x6f8>
   14198:	mov	r1, r7
   1419c:	mvn	r0, #-2147483648	; 0x80000000
   141a0:	bl	18508 <argp_error@@Base+0x13f0>
   141a4:	cmp	r0, r4
   141a8:	movle	r0, #0
   141ac:	movgt	r0, #1
   141b0:	cmp	r0, #0
   141b4:	mvnne	r6, #-2147483648	; 0x80000000
   141b8:	beq	14208 <_obstack_memory_used@@Base+0x708>
   141bc:	mov	r1, r7
   141c0:	mov	r0, r6
   141c4:	bl	18508 <argp_error@@Base+0x13f0>
   141c8:	mov	r1, r7
   141cc:	mov	r4, r0
   141d0:	mov	r0, r6
   141d4:	bl	18728 <argp_error@@Base+0x1610>
   141d8:	sub	r1, r6, r1
   141dc:	b	14218 <_obstack_memory_used@@Base+0x718>
   141e0:	mvn	r2, #-2147483648	; 0x80000000
   141e4:	sub	r2, r2, r4
   141e8:	cmp	r8, r2
   141ec:	movle	r2, #0
   141f0:	movgt	r2, #1
   141f4:	b	14158 <_obstack_memory_used@@Base+0x658>
   141f8:	cmn	r7, #1
   141fc:	movne	r1, r7
   14200:	movne	r0, #-2147483648	; 0x80000000
   14204:	bne	1436c <_obstack_memory_used@@Base+0x86c>
   14208:	mul	r1, r7, r4
   1420c:	cmp	r1, #63	; 0x3f
   14210:	movle	r6, #64	; 0x40
   14214:	ble	141bc <_obstack_memory_used@@Base+0x6bc>
   14218:	cmp	sl, #0
   1421c:	sub	r2, r4, r8
   14220:	streq	sl, [fp]
   14224:	cmp	r2, r5
   14228:	bge	142fc <_obstack_memory_used@@Base+0x7fc>
   1422c:	cmp	r5, #0
   14230:	bge	142c8 <_obstack_memory_used@@Base+0x7c8>
   14234:	rsb	r2, r5, #-2147483648	; 0x80000000
   14238:	cmp	r8, r2
   1423c:	movge	r2, #0
   14240:	movlt	r2, #1
   14244:	cmp	r2, #0
   14248:	bne	1429c <_obstack_memory_used@@Base+0x79c>
   1424c:	ldr	r0, [sp, #4]
   14250:	add	r5, r8, r5
   14254:	cmp	r9, r5
   14258:	movge	r0, #0
   1425c:	andlt	r0, r0, #1
   14260:	cmp	r0, #0
   14264:	mov	r4, r5
   14268:	bne	1429c <_obstack_memory_used@@Base+0x79c>
   1426c:	cmp	r7, #0
   14270:	bge	14310 <_obstack_memory_used@@Base+0x810>
   14274:	cmp	r5, #0
   14278:	bge	142e8 <_obstack_memory_used@@Base+0x7e8>
   1427c:	mov	r1, r7
   14280:	mvn	r0, #-2147483648	; 0x80000000
   14284:	bl	18508 <argp_error@@Base+0x13f0>
   14288:	cmp	r5, r0
   1428c:	movge	r0, #0
   14290:	movlt	r0, #1
   14294:	cmp	r0, #0
   14298:	beq	142f8 <_obstack_memory_used@@Base+0x7f8>
   1429c:	bl	14448 <_obstack_memory_used@@Base+0x948>
   142a0:	beq	14208 <_obstack_memory_used@@Base+0x708>
   142a4:	cmp	r4, #0
   142a8:	bge	14364 <_obstack_memory_used@@Base+0x864>
   142ac:	cmn	r4, #1
   142b0:	beq	14208 <_obstack_memory_used@@Base+0x708>
   142b4:	mov	r1, r4
   142b8:	mov	r0, #-2147483648	; 0x80000000
   142bc:	bl	18508 <argp_error@@Base+0x13f0>
   142c0:	cmp	r7, r0
   142c4:	b	141a8 <_obstack_memory_used@@Base+0x6a8>
   142c8:	cmp	r8, #0
   142cc:	blt	1424c <_obstack_memory_used@@Base+0x74c>
   142d0:	mvn	r2, #-2147483648	; 0x80000000
   142d4:	sub	r2, r2, r5
   142d8:	cmp	r8, r2
   142dc:	movle	r2, #0
   142e0:	movgt	r2, #1
   142e4:	b	14244 <_obstack_memory_used@@Base+0x744>
   142e8:	cmn	r7, #1
   142ec:	movne	r1, r7
   142f0:	movne	r0, #-2147483648	; 0x80000000
   142f4:	bne	14348 <_obstack_memory_used@@Base+0x848>
   142f8:	mul	r1, r5, r7
   142fc:	mov	r0, sl
   14300:	bl	13fe0 <_obstack_memory_used@@Base+0x4e0>
   14304:	str	r4, [fp]
   14308:	add	sp, sp, #12
   1430c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14310:	beq	142f8 <_obstack_memory_used@@Base+0x7f8>
   14314:	cmp	r5, #0
   14318:	movge	r1, r7
   1431c:	mvnge	r0, #-2147483648	; 0x80000000
   14320:	bge	14348 <_obstack_memory_used@@Base+0x848>
   14324:	cmn	r5, #1
   14328:	beq	142f8 <_obstack_memory_used@@Base+0x7f8>
   1432c:	mov	r1, r5
   14330:	mov	r0, #-2147483648	; 0x80000000
   14334:	bl	18508 <argp_error@@Base+0x13f0>
   14338:	cmp	r7, r0
   1433c:	movle	r0, #0
   14340:	movgt	r0, #1
   14344:	b	14294 <_obstack_memory_used@@Base+0x794>
   14348:	bl	18508 <argp_error@@Base+0x13f0>
   1434c:	cmp	r5, r0
   14350:	b	1433c <_obstack_memory_used@@Base+0x83c>
   14354:	cmp	r7, #0
   14358:	mov	r4, r9
   1435c:	blt	141f8 <_obstack_memory_used@@Base+0x6f8>
   14360:	beq	14208 <_obstack_memory_used@@Base+0x708>
   14364:	mov	r1, r7
   14368:	mvn	r0, #-2147483648	; 0x80000000
   1436c:	bl	18508 <argp_error@@Base+0x13f0>
   14370:	cmp	r0, r4
   14374:	movge	r0, #0
   14378:	movlt	r0, #1
   1437c:	b	141b0 <_obstack_memory_used@@Base+0x6b0>
   14380:	push	{r4, lr}
   14384:	bl	14474 <_obstack_memory_used@@Base+0x974>
   14388:	cmp	r0, #0
   1438c:	popne	{r4, pc}
   14390:	bl	14448 <_obstack_memory_used@@Base+0x948>
   14394:	mov	r1, #1
   14398:	b	14380 <_obstack_memory_used@@Base+0x880>
   1439c:	push	{r4, lr}
   143a0:	bl	14474 <_obstack_memory_used@@Base+0x974>
   143a4:	cmp	r0, #0
   143a8:	popne	{r4, pc}
   143ac:	bl	14448 <_obstack_memory_used@@Base+0x948>
   143b0:	mov	r1, #1
   143b4:	b	1439c <_obstack_memory_used@@Base+0x89c>
   143b8:	push	{r4, r5, r6, lr}
   143bc:	mov	r4, r1
   143c0:	mov	r5, r0
   143c4:	mov	r0, r1
   143c8:	bl	13fb4 <_obstack_memory_used@@Base+0x4b4>
   143cc:	mov	r2, r4
   143d0:	mov	r1, r5
   143d4:	pop	{r4, r5, r6, lr}
   143d8:	b	11144 <memcpy@plt>
   143dc:	push	{r4, r5, r6, lr}
   143e0:	mov	r4, r1
   143e4:	mov	r5, r0
   143e8:	mov	r0, r1
   143ec:	bl	13fc8 <_obstack_memory_used@@Base+0x4c8>
   143f0:	mov	r2, r4
   143f4:	mov	r1, r5
   143f8:	pop	{r4, r5, r6, lr}
   143fc:	b	11144 <memcpy@plt>
   14400:	push	{r4, r5, r6, lr}
   14404:	mov	r5, r0
   14408:	add	r0, r1, #1
   1440c:	mov	r4, r1
   14410:	bl	13fc8 <_obstack_memory_used@@Base+0x4c8>
   14414:	mov	r2, #0
   14418:	mov	r1, r5
   1441c:	strb	r2, [r0, r4]
   14420:	mov	r2, r4
   14424:	pop	{r4, r5, r6, lr}
   14428:	b	11144 <memcpy@plt>
   1442c:	push	{r4, lr}
   14430:	mov	r4, r0
   14434:	bl	11234 <strlen@plt>
   14438:	add	r1, r0, #1
   1443c:	mov	r0, r4
   14440:	pop	{r4, lr}
   14444:	b	143b8 <_obstack_memory_used@@Base+0x8b8>
   14448:	ldr	r3, [pc, #24]	; 14468 <_obstack_memory_used@@Base+0x968>
   1444c:	push	{r4, lr}
   14450:	mov	r1, #0
   14454:	ldr	r0, [r3]
   14458:	ldr	r2, [pc, #12]	; 1446c <_obstack_memory_used@@Base+0x96c>
   1445c:	ldr	r3, [pc, #12]	; 14470 <_obstack_memory_used@@Base+0x970>
   14460:	bl	111b0 <error@plt>
   14464:	bl	11360 <abort@plt>
   14468:	muleq	r2, r8, r8
   1446c:	andeq	sl, r1, fp, lsr #18
   14470:	muleq	r1, r6, r3
   14474:	cmp	r1, #0
   14478:	cmpne	r0, #0
   1447c:	moveq	r1, #1
   14480:	moveq	r0, r1
   14484:	umull	r2, r3, r0, r1
   14488:	adds	r3, r3, #0
   1448c:	movne	r3, #1
   14490:	cmp	r2, #0
   14494:	blt	144a4 <_obstack_memory_used@@Base+0x9a4>
   14498:	cmp	r3, #0
   1449c:	bne	144a4 <_obstack_memory_used@@Base+0x9a4>
   144a0:	b	110a8 <calloc@plt>
   144a4:	push	{r4, lr}
   144a8:	bl	11258 <__errno_location@plt>
   144ac:	mov	r3, #12
   144b0:	str	r3, [r0]
   144b4:	mov	r0, #0
   144b8:	pop	{r4, pc}
   144bc:	cmp	r0, #0
   144c0:	mov	r3, #0
   144c4:	moveq	r0, #1
   144c8:	adds	r3, r3, #0
   144cc:	movne	r3, #1
   144d0:	cmp	r0, #0
   144d4:	blt	144e4 <_obstack_memory_used@@Base+0x9e4>
   144d8:	cmp	r3, #0
   144dc:	bne	144e4 <_obstack_memory_used@@Base+0x9e4>
   144e0:	b	111d4 <malloc@plt>
   144e4:	push	{r4, lr}
   144e8:	bl	11258 <__errno_location@plt>
   144ec:	mov	r3, #12
   144f0:	str	r3, [r0]
   144f4:	mov	r0, #0
   144f8:	pop	{r4, pc}
   144fc:	cmp	r0, #0
   14500:	push	{r4, lr}
   14504:	mov	r4, r1
   14508:	bne	14518 <_obstack_memory_used@@Base+0xa18>
   1450c:	mov	r0, r1
   14510:	pop	{r4, lr}
   14514:	b	144bc <_obstack_memory_used@@Base+0x9bc>
   14518:	cmp	r1, #0
   1451c:	bne	1452c <_obstack_memory_used@@Base+0xa2c>
   14520:	bl	13710 <argp_parse@@Base+0xa9c>
   14524:	mov	r0, #0
   14528:	pop	{r4, pc}
   1452c:	cmp	r1, #0
   14530:	blt	14540 <_obstack_memory_used@@Base+0xa40>
   14534:	mov	r3, #0
   14538:	cmp	r3, r3
   1453c:	beq	14550 <_obstack_memory_used@@Base+0xa50>
   14540:	bl	11258 <__errno_location@plt>
   14544:	mov	r3, #12
   14548:	str	r3, [r0]
   1454c:	b	14524 <_obstack_memory_used@@Base+0xa24>
   14550:	pop	{r4, lr}
   14554:	b	11174 <realloc@plt>
   14558:	ldr	r2, [r0, #4]
   1455c:	ldr	r3, [r0]
   14560:	cmp	r2, #0
   14564:	add	r3, r3, #24
   14568:	bne	14574 <_obstack_memory_used@@Base+0xa74>
   1456c:	mov	r0, r2
   14570:	bx	lr
   14574:	ldr	r0, [r3, #-24]	; 0xffffffe8
   14578:	cmp	r0, #0
   1457c:	beq	1458c <_obstack_memory_used@@Base+0xa8c>
   14580:	ldr	r1, [r3, #-12]
   14584:	tst	r1, #2
   14588:	bxeq	lr
   1458c:	sub	r2, r2, #1
   14590:	b	14560 <_obstack_memory_used@@Base+0xa60>
   14594:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14598:	mov	sl, r3
   1459c:	ldm	r0, {r5, r6, r7}
   145a0:	mov	r3, #0
   145a4:	sub	sp, sp, #20
   145a8:	mov	r8, r1
   145ac:	mov	r9, r2
   145b0:	mov	r4, r5
   145b4:	mov	fp, r3
   145b8:	adds	r2, r6, #0
   145bc:	movne	r2, #1
   145c0:	cmp	r3, #0
   145c4:	movne	r2, #0
   145c8:	cmp	r2, #0
   145cc:	bne	145dc <_obstack_memory_used@@Base+0xadc>
   145d0:	mov	r0, r3
   145d4:	add	sp, sp, #20
   145d8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   145dc:	ldr	r2, [r4, #12]
   145e0:	ands	r3, r2, #8
   145e4:	str	r2, [sp, #12]
   145e8:	movne	r3, fp
   145ec:	bne	1462c <_obstack_memory_used@@Base+0xb2c>
   145f0:	ldr	r1, [r4, #4]
   145f4:	sub	r0, r1, #1
   145f8:	cmp	r0, #254	; 0xfe
   145fc:	str	r1, [sp, #8]
   14600:	bhi	1462c <_obstack_memory_used@@Base+0xb2c>
   14604:	str	r3, [sp, #4]
   14608:	bl	1121c <__ctype_b_loc@plt>
   1460c:	ldr	r1, [sp, #8]
   14610:	ldr	r3, [sp, #4]
   14614:	ldr	r2, [sp, #12]
   14618:	ldr	ip, [r0]
   1461c:	lsl	r0, r1, #1
   14620:	ldrh	r0, [ip, r0]
   14624:	tst	r0, #16384	; 0x4000
   14628:	bne	14638 <_obstack_memory_used@@Base+0xb38>
   1462c:	add	r4, r4, #24
   14630:	sub	r6, r6, #1
   14634:	b	145b8 <_obstack_memory_used@@Base+0xab8>
   14638:	ldrb	r0, [r7]
   1463c:	cmp	r0, r1
   14640:	bne	1462c <_obstack_memory_used@@Base+0xb2c>
   14644:	tst	r2, #4
   14648:	moveq	r5, r4
   1464c:	tst	r2, #2
   14650:	bne	1466c <_obstack_memory_used@@Base+0xb6c>
   14654:	mov	r3, sl
   14658:	mov	r2, r9
   1465c:	mov	r1, r5
   14660:	mov	r0, r4
   14664:	blx	r8
   14668:	mov	r3, r0
   1466c:	add	r7, r7, #1
   14670:	b	1462c <_obstack_memory_used@@Base+0xb2c>
   14674:	ldr	r3, [r0, #12]
   14678:	ands	r3, r3, #8
   1467c:	bne	146b4 <_obstack_memory_used@@Base+0xbb4>
   14680:	push	{r4, lr}
   14684:	ldr	r4, [r0, #4]
   14688:	sub	r2, r4, #1
   1468c:	cmp	r2, #254	; 0xfe
   14690:	bhi	146ac <_obstack_memory_used@@Base+0xbac>
   14694:	bl	1121c <__ctype_b_loc@plt>
   14698:	lsl	r3, r4, #1
   1469c:	ldr	r2, [r0]
   146a0:	ldrh	r3, [r2, r3]
   146a4:	ands	r3, r3, #16384	; 0x4000
   146a8:	movne	r3, r4
   146ac:	mov	r0, r3
   146b0:	pop	{r4, pc}
   146b4:	mov	r3, #0
   146b8:	mov	r0, r3
   146bc:	bx	lr
   146c0:	push	{r4, lr}
   146c4:	mov	r4, r0
   146c8:	bl	1121c <__ctype_b_loc@plt>
   146cc:	ldr	r1, [r0]
   146d0:	ldr	r3, [r4]
   146d4:	ldrb	r0, [r3]
   146d8:	lsl	r2, r0, #1
   146dc:	ldrh	r2, [r1, r2]
   146e0:	tst	r2, #8192	; 0x2000
   146e4:	bne	14714 <_obstack_memory_used@@Base+0xc14>
   146e8:	subs	r0, r0, #45	; 0x2d
   146ec:	movne	r0, #1
   146f0:	ldr	r2, [r4]
   146f4:	ldrb	r3, [r2]
   146f8:	cmp	r3, #0
   146fc:	popeq	{r4, pc}
   14700:	lsl	r3, r3, #1
   14704:	ldrh	r3, [r1, r3]
   14708:	tst	r3, #8
   1470c:	beq	14720 <_obstack_memory_used@@Base+0xc20>
   14710:	pop	{r4, pc}
   14714:	add	r3, r3, #1
   14718:	str	r3, [r4]
   1471c:	b	146d0 <_obstack_memory_used@@Base+0xbd0>
   14720:	add	r2, r2, #1
   14724:	str	r2, [r4]
   14728:	b	146f0 <_obstack_memory_used@@Base+0xbf0>
   1472c:	push	{r4, r5, r6, lr}
   14730:	mov	r4, r0
   14734:	ldr	r0, [r0, #12]
   14738:	cmp	r0, #0
   1473c:	bne	14768 <_obstack_memory_used@@Base+0xc68>
   14740:	ldr	r3, [r4, #4]
   14744:	cmp	r3, #0
   14748:	beq	1475c <_obstack_memory_used@@Base+0xc5c>
   1474c:	ldr	r0, [r4]
   14750:	bl	13710 <argp_parse@@Base+0xa9c>
   14754:	ldr	r0, [r4, #8]
   14758:	bl	13710 <argp_parse@@Base+0xa9c>
   1475c:	mov	r0, r4
   14760:	pop	{r4, r5, r6, lr}
   14764:	b	13710 <argp_parse@@Base+0xa9c>
   14768:	ldr	r5, [r0, #24]
   1476c:	bl	13710 <argp_parse@@Base+0xa9c>
   14770:	mov	r0, r5
   14774:	b	14738 <_obstack_memory_used@@Base+0xc38>
   14778:	push	{r4, r5, r6, lr}
   1477c:	ldr	r5, [r0, #16]
   14780:	ldr	r0, [r0, #8]
   14784:	cmp	r0, #0
   14788:	beq	1479c <_obstack_memory_used@@Base+0xc9c>
   1478c:	mov	r1, #10
   14790:	bl	11240 <strchr@plt>
   14794:	adds	r0, r0, #0
   14798:	movne	r0, #1
   1479c:	cmp	r5, #0
   147a0:	mov	r4, r0
   147a4:	addne	r5, r5, #16
   147a8:	bne	147bc <_obstack_memory_used@@Base+0xcbc>
   147ac:	mov	r0, r4
   147b0:	pop	{r4, r5, r6, pc}
   147b4:	bl	14778 <_obstack_memory_used@@Base+0xc78>
   147b8:	add	r4, r4, r0
   147bc:	add	r5, r5, #16
   147c0:	ldr	r0, [r5, #-32]	; 0xffffffe0
   147c4:	cmp	r0, #0
   147c8:	bne	147b4 <_obstack_memory_used@@Base+0xcb4>
   147cc:	b	147ac <_obstack_memory_used@@Base+0xcac>
   147d0:	ldr	r2, [r0, #24]
   147d4:	ldr	r3, [r0, #28]
   147d8:	push	{r4, r5, r6, r7, r8, lr}
   147dc:	sub	r3, r3, r2
   147e0:	ldr	r2, [r0, #16]
   147e4:	mov	r4, r0
   147e8:	cmp	r3, r2
   147ec:	mov	r5, r1
   147f0:	bls	147f8 <_obstack_memory_used@@Base+0xcf8>
   147f4:	bl	17d54 <argp_error@@Base+0xc3c>
   147f8:	ldr	r1, [r4, #20]
   147fc:	mov	r6, #1
   14800:	cmp	r1, #0
   14804:	subge	r5, r5, r1
   14808:	mov	r7, #32
   1480c:	cmp	r5, #0
   14810:	bgt	14818 <_obstack_memory_used@@Base+0xd18>
   14814:	pop	{r4, r5, r6, r7, r8, pc}
   14818:	ldr	r2, [r4, #28]
   1481c:	ldr	r3, [r4, #32]
   14820:	cmp	r2, r3
   14824:	bcs	14840 <_obstack_memory_used@@Base+0xd40>
   14828:	ldr	r3, [r4, #28]
   1482c:	add	r2, r3, #1
   14830:	str	r2, [r4, #28]
   14834:	strb	r7, [r3]
   14838:	sub	r5, r5, #1
   1483c:	b	1480c <_obstack_memory_used@@Base+0xd0c>
   14840:	mov	r1, r6
   14844:	mov	r0, r4
   14848:	bl	181a4 <argp_error@@Base+0x108c>
   1484c:	cmp	r0, #0
   14850:	bne	14828 <_obstack_memory_used@@Base+0xd28>
   14854:	b	14838 <_obstack_memory_used@@Base+0xd38>
   14858:	push	{r4, r5, r6, lr}
   1485c:	subs	r4, r2, #0
   14860:	popeq	{r4, r5, r6, pc}
   14864:	ldr	r2, [r4, #20]
   14868:	cmp	r2, #0
   1486c:	popeq	{r4, r5, r6, pc}
   14870:	mov	r6, r1
   14874:	mov	r5, r0
   14878:	mov	r1, r3
   1487c:	mov	r0, r4
   14880:	bl	135ec <argp_parse@@Base+0x978>
   14884:	ldr	r3, [r4, #20]
   14888:	mov	r1, r5
   1488c:	mov	r2, r0
   14890:	mov	r0, r6
   14894:	pop	{r4, r5, r6, lr}
   14898:	bx	r3
   1489c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   148a0:	mov	r4, r2
   148a4:	ldr	r3, [r2, #16]
   148a8:	mov	r2, r1
   148ac:	ldr	r1, [pc, #440]	; 14a6c <_obstack_memory_used@@Base+0xf6c>
   148b0:	mov	r7, r0
   148b4:	bl	14858 <_obstack_memory_used@@Base+0xd58>
   148b8:	subs	r6, r0, #0
   148bc:	beq	14a10 <_obstack_memory_used@@Base+0xf10>
   148c0:	ldrb	r3, [r6]
   148c4:	cmp	r3, #0
   148c8:	beq	14a04 <_obstack_memory_used@@Base+0xf04>
   148cc:	ldr	r3, [r4, #8]
   148d0:	ldr	r3, [r3]
   148d4:	cmp	r3, #0
   148d8:	beq	14904 <_obstack_memory_used@@Base+0xe04>
   148dc:	ldr	r5, [r4, #4]
   148e0:	ldr	r2, [r5, #28]
   148e4:	ldr	r3, [r5, #32]
   148e8:	cmp	r2, r3
   148ec:	bcs	14a24 <_obstack_memory_used@@Base+0xf24>
   148f0:	ldr	r3, [r5, #28]
   148f4:	add	r2, r3, #1
   148f8:	str	r2, [r5, #28]
   148fc:	mov	r2, #10
   14900:	strb	r2, [r3]
   14904:	ldr	r8, [pc, #356]	; 14a70 <_obstack_memory_used@@Base+0xf70>
   14908:	ldr	r0, [r4, #4]
   1490c:	ldr	r1, [r8, #24]
   14910:	bl	147d0 <_obstack_memory_used@@Base+0xcd0>
   14914:	ldr	r9, [r4, #4]
   14918:	ldr	sl, [r8, #24]
   1491c:	ldr	r2, [r9, #24]
   14920:	ldr	r3, [r9, #28]
   14924:	sub	r3, r3, r2
   14928:	ldr	r2, [r9, #16]
   1492c:	cmp	r3, r2
   14930:	bls	1493c <_obstack_memory_used@@Base+0xe3c>
   14934:	mov	r0, r9
   14938:	bl	17d54 <argp_error@@Base+0xc3c>
   1493c:	ldr	r5, [r4, #4]
   14940:	str	sl, [r9, #4]
   14944:	ldr	r8, [r8, #24]
   14948:	ldr	r2, [r5, #24]
   1494c:	ldr	r3, [r5, #28]
   14950:	sub	r3, r3, r2
   14954:	ldr	r2, [r5, #16]
   14958:	cmp	r3, r2
   1495c:	bls	14968 <_obstack_memory_used@@Base+0xe68>
   14960:	mov	r0, r5
   14964:	bl	17d54 <argp_error@@Base+0xc3c>
   14968:	str	r8, [r5, #12]
   1496c:	mov	r0, r6
   14970:	bl	11234 <strlen@plt>
   14974:	subs	r8, r0, #0
   14978:	beq	149b0 <_obstack_memory_used@@Base+0xeb0>
   1497c:	ldr	r5, [r4, #4]
   14980:	ldr	r3, [r5, #28]
   14984:	ldr	r2, [r5, #32]
   14988:	add	r3, r3, r8
   1498c:	cmp	r2, r3
   14990:	bcc	14a3c <_obstack_memory_used@@Base+0xf3c>
   14994:	mov	r2, r8
   14998:	mov	r1, r6
   1499c:	ldr	r0, [r5, #28]
   149a0:	bl	11144 <memcpy@plt>
   149a4:	ldr	r3, [r5, #28]
   149a8:	add	r8, r3, r8
   149ac:	str	r8, [r5, #28]
   149b0:	ldr	r5, [r4, #4]
   149b4:	ldr	r2, [r5, #24]
   149b8:	ldr	r3, [r5, #28]
   149bc:	sub	r3, r3, r2
   149c0:	ldr	r2, [r5, #16]
   149c4:	cmp	r3, r2
   149c8:	bls	149d4 <_obstack_memory_used@@Base+0xed4>
   149cc:	mov	r0, r5
   149d0:	bl	17d54 <argp_error@@Base+0xc3c>
   149d4:	mov	r3, #0
   149d8:	str	r3, [r5, #4]
   149dc:	ldr	r5, [r4, #4]
   149e0:	ldr	r2, [r5, #28]
   149e4:	ldr	r3, [r5, #32]
   149e8:	cmp	r2, r3
   149ec:	bcs	14a54 <_obstack_memory_used@@Base+0xf54>
   149f0:	ldr	r3, [r5, #28]
   149f4:	add	r2, r3, #1
   149f8:	str	r2, [r5, #28]
   149fc:	mov	r2, #10
   14a00:	strb	r2, [r3]
   14a04:	ldr	r3, [r4, #8]
   14a08:	mov	r2, #1
   14a0c:	str	r2, [r3, #4]
   14a10:	cmp	r7, r6
   14a14:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   14a18:	mov	r0, r6
   14a1c:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   14a20:	b	13710 <argp_parse@@Base+0xa9c>
   14a24:	mov	r1, #1
   14a28:	mov	r0, r5
   14a2c:	bl	181a4 <argp_error@@Base+0x108c>
   14a30:	cmp	r0, #0
   14a34:	bne	148f0 <_obstack_memory_used@@Base+0xdf0>
   14a38:	b	14904 <_obstack_memory_used@@Base+0xe04>
   14a3c:	mov	r1, r8
   14a40:	mov	r0, r5
   14a44:	bl	181a4 <argp_error@@Base+0x108c>
   14a48:	cmp	r0, #0
   14a4c:	bne	14994 <_obstack_memory_used@@Base+0xe94>
   14a50:	b	149b0 <_obstack_memory_used@@Base+0xeb0>
   14a54:	mov	r1, #1
   14a58:	mov	r0, r5
   14a5c:	bl	181a4 <argp_error@@Base+0x108c>
   14a60:	cmp	r0, #0
   14a64:	bne	149f0 <_obstack_memory_used@@Base+0xef0>
   14a68:	b	14a04 <_obstack_memory_used@@Base+0xf04>
   14a6c:	andeq	r0, r0, #3
   14a70:	andeq	lr, r2, r0, ror r8
   14a74:	ldr	r3, [r1, #12]
   14a78:	push	{r4, r5, r6, r7, r8, lr}
   14a7c:	cmp	r3, #0
   14a80:	mov	r7, r0
   14a84:	mov	r4, r1
   14a88:	beq	14ba0 <_obstack_memory_used@@Base+0x10a0>
   14a8c:	ldr	r2, [r1, #8]
   14a90:	ldr	r3, [r1]
   14a94:	ldr	r8, [r2]
   14a98:	ldr	r2, [r2, #4]
   14a9c:	ldr	r5, [r3, #16]
   14aa0:	cmp	r2, #0
   14aa4:	cmpne	r8, #0
   14aa8:	beq	14ae4 <_obstack_memory_used@@Base+0xfe4>
   14aac:	ldr	r2, [r3, #12]
   14ab0:	ldr	r3, [r8, #12]
   14ab4:	cmp	r2, r3
   14ab8:	beq	14ae4 <_obstack_memory_used@@Base+0xfe4>
   14abc:	ldr	r6, [r1, #4]
   14ac0:	ldr	r2, [r6, #28]
   14ac4:	ldr	r3, [r6, #32]
   14ac8:	cmp	r2, r3
   14acc:	bcs	14b80 <_obstack_memory_used@@Base+0x1080>
   14ad0:	ldr	r3, [r6, #28]
   14ad4:	add	r2, r3, #1
   14ad8:	str	r2, [r6, #28]
   14adc:	mov	r2, #10
   14ae0:	strb	r2, [r3]
   14ae4:	cmp	r5, #0
   14ae8:	beq	14b68 <_obstack_memory_used@@Base+0x1068>
   14aec:	ldr	r0, [r5]
   14af0:	cmp	r0, #0
   14af4:	beq	14b68 <_obstack_memory_used@@Base+0x1068>
   14af8:	ldrb	r3, [r0]
   14afc:	cmp	r3, #0
   14b00:	beq	14b68 <_obstack_memory_used@@Base+0x1068>
   14b04:	cmp	r8, #0
   14b08:	beq	14b2c <_obstack_memory_used@@Base+0x102c>
   14b0c:	ldr	r3, [r8, #16]
   14b10:	cmp	r5, r3
   14b14:	beq	14b68 <_obstack_memory_used@@Base+0x1068>
   14b18:	cmp	r3, #0
   14b1c:	cmpne	r5, r3
   14b20:	bne	14b98 <_obstack_memory_used@@Base+0x1098>
   14b24:	cmp	r5, r3
   14b28:	beq	14b68 <_obstack_memory_used@@Base+0x1068>
   14b2c:	ldr	r3, [r4, #4]
   14b30:	mov	r2, r4
   14b34:	ldr	r1, [r5, #16]
   14b38:	ldr	r6, [r3, #12]
   14b3c:	bl	1489c <_obstack_memory_used@@Base+0xd9c>
   14b40:	ldr	r5, [r4, #4]
   14b44:	ldr	r2, [r5, #24]
   14b48:	ldr	r3, [r5, #28]
   14b4c:	sub	r3, r3, r2
   14b50:	ldr	r2, [r5, #16]
   14b54:	cmp	r3, r2
   14b58:	bls	14b64 <_obstack_memory_used@@Base+0x1064>
   14b5c:	mov	r0, r5
   14b60:	bl	17d54 <argp_error@@Base+0xc3c>
   14b64:	str	r6, [r5, #12]
   14b68:	mov	r3, #0
   14b6c:	str	r3, [r4, #12]
   14b70:	mov	r1, r7
   14b74:	ldr	r0, [r4, #4]
   14b78:	pop	{r4, r5, r6, r7, r8, lr}
   14b7c:	b	147d0 <_obstack_memory_used@@Base+0xcd0>
   14b80:	mov	r1, #1
   14b84:	mov	r0, r6
   14b88:	bl	181a4 <argp_error@@Base+0x108c>
   14b8c:	cmp	r0, #0
   14b90:	bne	14ad0 <_obstack_memory_used@@Base+0xfd0>
   14b94:	b	14ae4 <_obstack_memory_used@@Base+0xfe4>
   14b98:	ldr	r3, [r3, #12]
   14b9c:	b	14b18 <_obstack_memory_used@@Base+0x1018>
   14ba0:	ldr	r5, [r1, #4]
   14ba4:	ldr	r3, [r5, #28]
   14ba8:	ldr	r2, [r5, #32]
   14bac:	add	r3, r3, #2
   14bb0:	cmp	r2, r3
   14bb4:	bcc	14bd8 <_obstack_memory_used@@Base+0x10d8>
   14bb8:	ldr	r2, [pc, #48]	; 14bf0 <_obstack_memory_used@@Base+0x10f0>
   14bbc:	ldr	r3, [r5, #28]
   14bc0:	ldrh	r2, [r2]
   14bc4:	strh	r2, [r3]
   14bc8:	ldr	r3, [r5, #28]
   14bcc:	add	r3, r3, #2
   14bd0:	str	r3, [r5, #28]
   14bd4:	b	14b70 <_obstack_memory_used@@Base+0x1070>
   14bd8:	mov	r1, #2
   14bdc:	mov	r0, r5
   14be0:	bl	181a4 <argp_error@@Base+0x108c>
   14be4:	cmp	r0, #0
   14be8:	bne	14bb8 <_obstack_memory_used@@Base+0x10b8>
   14bec:	b	14b70 <_obstack_memory_used@@Base+0x1070>
   14bf0:	andeq	sl, r1, r6, asr #15
   14bf4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14bf8:	sub	sp, sp, #28
   14bfc:	ldr	r7, [r0, #12]
   14c00:	str	r3, [sp, #8]
   14c04:	cmp	r7, #0
   14c08:	ldr	r3, [r0, #16]
   14c0c:	moveq	r5, r7
   14c10:	mov	r8, r0
   14c14:	str	r1, [sp, #16]
   14c18:	mov	fp, r2
   14c1c:	ldr	r4, [sp, #68]	; 0x44
   14c20:	str	r3, [sp, #12]
   14c24:	moveq	r6, r5
   14c28:	beq	14c68 <_obstack_memory_used@@Base+0x1168>
   14c2c:	mov	r1, #11
   14c30:	mov	r0, r7
   14c34:	bl	11240 <strchr@plt>
   14c38:	cmp	fp, #0
   14c3c:	moveq	r5, r7
   14c40:	beq	14c50 <_obstack_memory_used@@Base+0x1150>
   14c44:	cmp	r0, #0
   14c48:	addne	r5, r0, #1
   14c4c:	moveq	r5, r0
   14c50:	cmp	r0, #0
   14c54:	clz	r6, fp
   14c58:	lsr	r6, r6, #5
   14c5c:	moveq	r6, #0
   14c60:	cmp	r6, #0
   14c64:	subne	r6, r0, r7
   14c68:	ldr	r9, [r8, #20]
   14c6c:	cmp	r9, #0
   14c70:	moveq	sl, r5
   14c74:	beq	14cc8 <_obstack_memory_used@@Base+0x11c8>
   14c78:	cmp	r6, #0
   14c7c:	beq	14c90 <_obstack_memory_used@@Base+0x1190>
   14c80:	mov	r0, r5
   14c84:	mov	r1, r6
   14c88:	bl	11138 <strndup@plt>
   14c8c:	mov	r5, r0
   14c90:	ldr	r1, [sp, #16]
   14c94:	mov	r0, r8
   14c98:	bl	135ec <argp_parse@@Base+0x978>
   14c9c:	ldr	ip, [pc, #928]	; 15044 <_obstack_memory_used@@Base+0x1544>
   14ca0:	cmp	fp, #0
   14ca4:	mov	r1, r5
   14ca8:	ldr	r3, [r8, #20]
   14cac:	mov	sl, r5
   14cb0:	mov	r2, r0
   14cb4:	mov	r9, r0
   14cb8:	ldr	r0, [pc, #904]	; 15048 <_obstack_memory_used@@Base+0x1548>
   14cbc:	movne	r0, ip
   14cc0:	blx	r3
   14cc4:	mov	r5, r0
   14cc8:	cmp	r5, #0
   14ccc:	moveq	r7, r5
   14cd0:	beq	14d88 <_obstack_memory_used@@Base+0x1288>
   14cd4:	ldr	r3, [sp, #8]
   14cd8:	cmp	r3, #0
   14cdc:	beq	14d04 <_obstack_memory_used@@Base+0x1204>
   14ce0:	ldr	r2, [r4, #28]
   14ce4:	ldr	r3, [r4, #32]
   14ce8:	cmp	r2, r3
   14cec:	bcs	14eb4 <_obstack_memory_used@@Base+0x13b4>
   14cf0:	ldr	r3, [r4, #28]
   14cf4:	add	r2, r3, #1
   14cf8:	str	r2, [r4, #28]
   14cfc:	mov	r2, #10
   14d00:	strb	r2, [r3]
   14d04:	cmp	r6, #0
   14d08:	sub	r3, r5, sl
   14d0c:	clz	r3, r3
   14d10:	lsr	r3, r3, #5
   14d14:	moveq	r3, #0
   14d18:	cmp	r3, #0
   14d1c:	ldr	r3, [r4, #28]
   14d20:	beq	14ee4 <_obstack_memory_used@@Base+0x13e4>
   14d24:	ldr	r2, [r4, #32]
   14d28:	add	r3, r3, r6
   14d2c:	cmp	r2, r3
   14d30:	bcc	14ecc <_obstack_memory_used@@Base+0x13cc>
   14d34:	mov	r2, r6
   14d38:	mov	r1, sl
   14d3c:	ldr	r0, [r4, #28]
   14d40:	bl	11144 <memcpy@plt>
   14d44:	ldr	r3, [r4, #28]
   14d48:	add	r3, r3, r6
   14d4c:	str	r3, [r4, #28]
   14d50:	ldr	r2, [r4, #24]
   14d54:	ldr	r3, [r4, #28]
   14d58:	sub	r3, r3, r2
   14d5c:	ldr	r2, [r4, #16]
   14d60:	cmp	r3, r2
   14d64:	bls	14d70 <_obstack_memory_used@@Base+0x1270>
   14d68:	mov	r0, r4
   14d6c:	bl	17d54 <argp_error@@Base+0xc3c>
   14d70:	ldr	r3, [r4, #20]
   14d74:	ldr	r2, [r4, #4]
   14d78:	bic	r3, r3, r3, asr #31
   14d7c:	cmp	r2, r3
   14d80:	bcc	14f44 <_obstack_memory_used@@Base+0x1444>
   14d84:	mov	r7, #1
   14d88:	cmp	r5, #0
   14d8c:	cmpne	r5, sl
   14d90:	beq	14d9c <_obstack_memory_used@@Base+0x129c>
   14d94:	mov	r0, r5
   14d98:	bl	13710 <argp_parse@@Base+0xa9c>
   14d9c:	cmp	sl, #0
   14da0:	cmpne	r6, #0
   14da4:	beq	14dbc <_obstack_memory_used@@Base+0x12bc>
   14da8:	ldr	r3, [r8, #20]
   14dac:	cmp	r3, #0
   14db0:	beq	14e98 <_obstack_memory_used@@Base+0x1398>
   14db4:	mov	r0, sl
   14db8:	bl	13710 <argp_parse@@Base+0xa9c>
   14dbc:	cmp	fp, #0
   14dc0:	beq	14e98 <_obstack_memory_used@@Base+0x1398>
   14dc4:	ldr	r3, [r8, #20]
   14dc8:	cmp	r3, #0
   14dcc:	beq	14e98 <_obstack_memory_used@@Base+0x1398>
   14dd0:	mov	r2, r9
   14dd4:	mov	r1, #0
   14dd8:	ldr	r0, [pc, #620]	; 1504c <_obstack_memory_used@@Base+0x154c>
   14ddc:	blx	r3
   14de0:	subs	r5, r0, #0
   14de4:	beq	14e98 <_obstack_memory_used@@Base+0x1398>
   14de8:	ldr	r3, [sp, #8]
   14dec:	orrs	r3, r7, r3
   14df0:	beq	14e18 <_obstack_memory_used@@Base+0x1318>
   14df4:	ldr	r2, [r4, #28]
   14df8:	ldr	r3, [r4, #32]
   14dfc:	cmp	r2, r3
   14e00:	bcs	14f84 <_obstack_memory_used@@Base+0x1484>
   14e04:	ldr	r3, [r4, #28]
   14e08:	add	r2, r3, #1
   14e0c:	str	r2, [r4, #28]
   14e10:	mov	r2, #10
   14e14:	strb	r2, [r3]
   14e18:	mov	r0, r5
   14e1c:	bl	11234 <strlen@plt>
   14e20:	subs	r6, r0, #0
   14e24:	beq	14e58 <_obstack_memory_used@@Base+0x1358>
   14e28:	ldr	r3, [r4, #28]
   14e2c:	ldr	r2, [r4, #32]
   14e30:	add	r3, r3, r6
   14e34:	cmp	r2, r3
   14e38:	bcc	14f9c <_obstack_memory_used@@Base+0x149c>
   14e3c:	mov	r2, r6
   14e40:	mov	r1, r5
   14e44:	ldr	r0, [r4, #28]
   14e48:	bl	11144 <memcpy@plt>
   14e4c:	ldr	r3, [r4, #28]
   14e50:	add	r6, r3, r6
   14e54:	str	r6, [r4, #28]
   14e58:	mov	r0, r5
   14e5c:	bl	13710 <argp_parse@@Base+0xa9c>
   14e60:	ldr	r2, [r4, #24]
   14e64:	ldr	r3, [r4, #28]
   14e68:	sub	r3, r3, r2
   14e6c:	ldr	r2, [r4, #16]
   14e70:	cmp	r3, r2
   14e74:	bls	14e80 <_obstack_memory_used@@Base+0x1380>
   14e78:	mov	r0, r4
   14e7c:	bl	17d54 <argp_error@@Base+0xc3c>
   14e80:	ldr	r3, [r4, #20]
   14e84:	ldr	r2, [r4, #4]
   14e88:	bic	r3, r3, r3, asr #31
   14e8c:	cmp	r2, r3
   14e90:	bcc	14fb4 <_obstack_memory_used@@Base+0x14b4>
   14e94:	mov	r7, #1
   14e98:	ldr	r3, [sp, #12]
   14e9c:	cmp	r3, #0
   14ea0:	addne	r5, r3, #16
   14ea4:	bne	15020 <_obstack_memory_used@@Base+0x1520>
   14ea8:	mov	r0, r7
   14eac:	add	sp, sp, #28
   14eb0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14eb4:	mov	r1, #1
   14eb8:	mov	r0, r4
   14ebc:	bl	181a4 <argp_error@@Base+0x108c>
   14ec0:	cmp	r0, #0
   14ec4:	bne	14cf0 <_obstack_memory_used@@Base+0x11f0>
   14ec8:	b	14d04 <_obstack_memory_used@@Base+0x1204>
   14ecc:	mov	r1, r6
   14ed0:	mov	r0, r4
   14ed4:	bl	181a4 <argp_error@@Base+0x108c>
   14ed8:	cmp	r0, #0
   14edc:	bne	14d34 <_obstack_memory_used@@Base+0x1234>
   14ee0:	b	14d50 <_obstack_memory_used@@Base+0x1250>
   14ee4:	mov	r0, r5
   14ee8:	str	r3, [sp, #20]
   14eec:	bl	11234 <strlen@plt>
   14ef0:	subs	r7, r0, #0
   14ef4:	beq	14d50 <_obstack_memory_used@@Base+0x1250>
   14ef8:	ldr	r3, [sp, #20]
   14efc:	ldr	r2, [r4, #32]
   14f00:	add	r3, r3, r7
   14f04:	cmp	r2, r3
   14f08:	bcc	14f2c <_obstack_memory_used@@Base+0x142c>
   14f0c:	mov	r2, r7
   14f10:	mov	r1, r5
   14f14:	ldr	r0, [r4, #28]
   14f18:	bl	11144 <memcpy@plt>
   14f1c:	ldr	r3, [r4, #28]
   14f20:	add	r7, r3, r7
   14f24:	str	r7, [r4, #28]
   14f28:	b	14d50 <_obstack_memory_used@@Base+0x1250>
   14f2c:	mov	r1, r7
   14f30:	mov	r0, r4
   14f34:	bl	181a4 <argp_error@@Base+0x108c>
   14f38:	cmp	r0, #0
   14f3c:	bne	14f0c <_obstack_memory_used@@Base+0x140c>
   14f40:	b	14d50 <_obstack_memory_used@@Base+0x1250>
   14f44:	ldr	r2, [r4, #28]
   14f48:	ldr	r3, [r4, #32]
   14f4c:	cmp	r2, r3
   14f50:	bcs	14f6c <_obstack_memory_used@@Base+0x146c>
   14f54:	ldr	r3, [r4, #28]
   14f58:	add	r2, r3, #1
   14f5c:	str	r2, [r4, #28]
   14f60:	mov	r2, #10
   14f64:	strb	r2, [r3]
   14f68:	b	14d84 <_obstack_memory_used@@Base+0x1284>
   14f6c:	mov	r1, #1
   14f70:	mov	r0, r4
   14f74:	bl	181a4 <argp_error@@Base+0x108c>
   14f78:	cmp	r0, #0
   14f7c:	bne	14f54 <_obstack_memory_used@@Base+0x1454>
   14f80:	b	14d84 <_obstack_memory_used@@Base+0x1284>
   14f84:	mov	r1, #1
   14f88:	mov	r0, r4
   14f8c:	bl	181a4 <argp_error@@Base+0x108c>
   14f90:	cmp	r0, #0
   14f94:	bne	14e04 <_obstack_memory_used@@Base+0x1304>
   14f98:	b	14e18 <_obstack_memory_used@@Base+0x1318>
   14f9c:	mov	r1, r6
   14fa0:	mov	r0, r4
   14fa4:	bl	181a4 <argp_error@@Base+0x108c>
   14fa8:	cmp	r0, #0
   14fac:	bne	14e3c <_obstack_memory_used@@Base+0x133c>
   14fb0:	b	14e58 <_obstack_memory_used@@Base+0x1358>
   14fb4:	ldr	r2, [r4, #28]
   14fb8:	ldr	r3, [r4, #32]
   14fbc:	cmp	r2, r3
   14fc0:	bcs	14fdc <_obstack_memory_used@@Base+0x14dc>
   14fc4:	ldr	r3, [r4, #28]
   14fc8:	add	r2, r3, #1
   14fcc:	str	r2, [r4, #28]
   14fd0:	mov	r2, #10
   14fd4:	strb	r2, [r3]
   14fd8:	b	14e94 <_obstack_memory_used@@Base+0x1394>
   14fdc:	mov	r1, #1
   14fe0:	mov	r0, r4
   14fe4:	bl	181a4 <argp_error@@Base+0x108c>
   14fe8:	cmp	r0, #0
   14fec:	bne	14fc4 <_obstack_memory_used@@Base+0x14c4>
   14ff0:	b	14e94 <_obstack_memory_used@@Base+0x1394>
   14ff4:	ldr	r3, [sp, #8]
   14ff8:	str	r4, [sp, #4]
   14ffc:	orrs	r3, r7, r3
   15000:	ldr	r3, [sp, #64]	; 0x40
   15004:	mov	r2, fp
   15008:	str	r3, [sp]
   1500c:	ldr	r1, [sp, #16]
   15010:	movne	r3, #1
   15014:	moveq	r3, #0
   15018:	bl	14bf4 <_obstack_memory_used@@Base+0x10f4>
   1501c:	orr	r7, r7, r0
   15020:	ldr	r0, [r5, #-16]
   15024:	cmp	r0, #0
   15028:	beq	14ea8 <_obstack_memory_used@@Base+0x13a8>
   1502c:	ldr	r3, [sp, #64]	; 0x40
   15030:	add	r5, r5, #16
   15034:	cmp	r7, #0
   15038:	cmpne	r3, #0
   1503c:	beq	14ff4 <_obstack_memory_used@@Base+0x14f4>
   15040:	b	14ea8 <_obstack_memory_used@@Base+0x13a8>
   15044:	andeq	r0, r0, #2
   15048:	andeq	r0, r0, #1
   1504c:	andeq	r0, r0, #4
   15050:	ldr	r2, [r0, #24]
   15054:	ldr	r3, [r0, #28]
   15058:	push	{r4, r5, r6, lr}
   1505c:	sub	r3, r3, r2
   15060:	ldr	r2, [r0, #16]
   15064:	mov	r4, r0
   15068:	cmp	r3, r2
   1506c:	mov	r5, r1
   15070:	bls	15078 <_obstack_memory_used@@Base+0x1578>
   15074:	bl	17d54 <argp_error@@Base+0xc3c>
   15078:	ldr	r1, [r4, #20]
   1507c:	ldr	r3, [r4, #8]
   15080:	cmp	r1, #0
   15084:	addge	r5, r5, r1
   15088:	cmp	r5, r3
   1508c:	ldr	r2, [r4, #28]
   15090:	ldr	r3, [r4, #32]
   15094:	bcc	150d0 <_obstack_memory_used@@Base+0x15d0>
   15098:	cmp	r2, r3
   1509c:	bcs	150b8 <_obstack_memory_used@@Base+0x15b8>
   150a0:	ldr	r3, [r4, #28]
   150a4:	add	r2, r3, #1
   150a8:	str	r2, [r4, #28]
   150ac:	mov	r2, #10
   150b0:	strb	r2, [r3]
   150b4:	pop	{r4, r5, r6, pc}
   150b8:	mov	r1, #1
   150bc:	mov	r0, r4
   150c0:	bl	181a4 <argp_error@@Base+0x108c>
   150c4:	cmp	r0, #0
   150c8:	bne	150a0 <_obstack_memory_used@@Base+0x15a0>
   150cc:	pop	{r4, r5, r6, pc}
   150d0:	cmp	r2, r3
   150d4:	bcs	150ec <_obstack_memory_used@@Base+0x15ec>
   150d8:	ldr	r3, [r4, #28]
   150dc:	add	r2, r3, #1
   150e0:	str	r2, [r4, #28]
   150e4:	mov	r2, #32
   150e8:	b	150b0 <_obstack_memory_used@@Base+0x15b0>
   150ec:	mov	r1, #1
   150f0:	mov	r0, r4
   150f4:	bl	181a4 <argp_error@@Base+0x108c>
   150f8:	cmp	r0, #0
   150fc:	bne	150d8 <_obstack_memory_used@@Base+0x15d8>
   15100:	pop	{r4, r5, r6, pc}
   15104:	push	{r4, r5, r6, lr}
   15108:	ldr	r5, [r0, #8]
   1510c:	ldr	r2, [r0, #12]
   15110:	ldr	ip, [r1, #12]
   15114:	cmp	r5, #0
   15118:	orr	r2, r2, ip
   1511c:	bne	1512c <_obstack_memory_used@@Base+0x162c>
   15120:	ldr	r5, [r1, #8]
   15124:	cmp	r5, #0
   15128:	beq	15158 <_obstack_memory_used@@Base+0x1658>
   1512c:	tst	r2, #16
   15130:	bne	15158 <_obstack_memory_used@@Base+0x1658>
   15134:	tst	r2, #1
   15138:	mov	r6, r3
   1513c:	mov	r4, r0
   15140:	beq	15160 <_obstack_memory_used@@Base+0x1660>
   15144:	ldr	r2, [r0, #4]
   15148:	ldr	r1, [pc, #52]	; 15184 <_obstack_memory_used@@Base+0x1684>
   1514c:	mov	r3, r5
   15150:	mov	r0, r6
   15154:	bl	18288 <argp_error@@Base+0x1170>
   15158:	mov	r0, #0
   1515c:	pop	{r4, r5, r6, pc}
   15160:	mov	r0, r5
   15164:	bl	11234 <strlen@plt>
   15168:	add	r1, r0, #6
   1516c:	mov	r0, r6
   15170:	bl	15050 <_obstack_memory_used@@Base+0x1550>
   15174:	mov	r3, r5
   15178:	ldr	r2, [r4, #4]
   1517c:	ldr	r1, [pc, #4]	; 15188 <_obstack_memory_used@@Base+0x1688>
   15180:	b	15150 <_obstack_memory_used@@Base+0x1650>
   15184:	andeq	sl, r1, r9, asr #15
   15188:	ldrdeq	sl, [r1], -r4
   1518c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15190:	mov	r6, r3
   15194:	sub	sp, sp, #36	; 0x24
   15198:	ldr	r3, [r0, #16]
   1519c:	str	r1, [sp, #20]
   151a0:	str	r3, [sp, #12]
   151a4:	ldr	r3, [r0, #8]
   151a8:	ldr	sl, [r2]
   151ac:	str	r3, [sp, #16]
   151b0:	mov	fp, r2
   151b4:	mov	r3, r1
   151b8:	mov	r2, r0
   151bc:	ldr	r1, [pc, #404]	; 15358 <_obstack_memory_used@@Base+0x1858>
   151c0:	ldr	r0, [sp, #16]
   151c4:	ldr	r5, [sp, #72]	; 0x48
   151c8:	bl	14858 <_obstack_memory_used@@Base+0xd58>
   151cc:	subs	r8, r0, #0
   151d0:	moveq	r7, r8
   151d4:	moveq	r4, r8
   151d8:	beq	1526c <_obstack_memory_used@@Base+0x176c>
   151dc:	mov	r1, #10
   151e0:	bl	110fc <strchrnul@plt>
   151e4:	ldrb	r4, [r0]
   151e8:	mov	r7, r0
   151ec:	cmp	r4, #0
   151f0:	moveq	r9, r8
   151f4:	beq	15220 <_obstack_memory_used@@Base+0x1720>
   151f8:	ldrb	r3, [sl]
   151fc:	mov	r9, r8
   15200:	mov	r4, #0
   15204:	mov	r2, #10
   15208:	cmp	r4, r3
   1520c:	blt	152dc <_obstack_memory_used@@Base+0x17dc>
   15210:	ldr	r3, [fp]
   15214:	mov	r4, #1
   15218:	add	r3, r3, #1
   1521c:	str	r3, [fp]
   15220:	add	r1, r7, #1
   15224:	sub	r1, r1, r9
   15228:	mov	r0, r5
   1522c:	bl	15050 <_obstack_memory_used@@Base+0x1550>
   15230:	ldr	r2, [r5, #28]
   15234:	sub	r3, r7, r9
   15238:	ldr	r1, [r5, #32]
   1523c:	add	r2, r2, r3
   15240:	cmp	r1, r2
   15244:	bcc	15308 <_obstack_memory_used@@Base+0x1808>
   15248:	mov	r2, r3
   1524c:	mov	r1, r9
   15250:	ldr	r0, [r5, #28]
   15254:	str	r3, [sp, #24]
   15258:	bl	11144 <memcpy@plt>
   1525c:	ldr	r2, [r5, #28]
   15260:	ldr	r3, [sp, #24]
   15264:	add	r3, r2, r3
   15268:	str	r3, [r5, #28]
   1526c:	ldr	r3, [sp, #16]
   15270:	cmp	r8, #0
   15274:	cmpne	r3, r8
   15278:	beq	15284 <_obstack_memory_used@@Base+0x1784>
   1527c:	mov	r0, r8
   15280:	bl	13710 <argp_parse@@Base+0xa9c>
   15284:	ldr	r3, [sp, #12]
   15288:	cmp	r3, #0
   1528c:	addne	r8, r3, #16
   15290:	bne	15344 <_obstack_memory_used@@Base+0x1844>
   15294:	cmp	r6, #0
   15298:	moveq	r4, #0
   1529c:	andne	r4, r4, #1
   152a0:	cmp	r4, #0
   152a4:	beq	152cc <_obstack_memory_used@@Base+0x17cc>
   152a8:	ldrb	r2, [r7]
   152ac:	ldrb	r3, [sl]
   152b0:	cmp	r2, #0
   152b4:	addne	r3, r3, #1
   152b8:	strbne	r3, [sl]
   152bc:	movne	r6, #0
   152c0:	bne	152cc <_obstack_memory_used@@Base+0x17cc>
   152c4:	cmp	r3, #0
   152c8:	strbne	r2, [sl]
   152cc:	clz	r0, r6
   152d0:	lsr	r0, r0, #5
   152d4:	add	sp, sp, #36	; 0x24
   152d8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   152dc:	add	r9, r7, #1
   152e0:	mov	r1, r2
   152e4:	mov	r0, r9
   152e8:	str	r3, [sp, #28]
   152ec:	str	r2, [sp, #24]
   152f0:	bl	110fc <strchrnul@plt>
   152f4:	add	r4, r4, #1
   152f8:	ldr	r3, [sp, #28]
   152fc:	ldr	r2, [sp, #24]
   15300:	mov	r7, r0
   15304:	b	15208 <_obstack_memory_used@@Base+0x1708>
   15308:	mov	r1, r3
   1530c:	mov	r0, r5
   15310:	str	r3, [sp, #24]
   15314:	bl	181a4 <argp_error@@Base+0x108c>
   15318:	ldr	r3, [sp, #24]
   1531c:	cmp	r0, #0
   15320:	bne	15248 <_obstack_memory_used@@Base+0x1748>
   15324:	b	1526c <_obstack_memory_used@@Base+0x176c>
   15328:	mov	r3, r6
   1532c:	str	r5, [sp]
   15330:	mov	r2, fp
   15334:	ldr	r1, [sp, #20]
   15338:	bl	1518c <_obstack_memory_used@@Base+0x168c>
   1533c:	clz	r6, r0
   15340:	lsr	r6, r6, #5
   15344:	add	r8, r8, #16
   15348:	ldr	r0, [r8, #-32]	; 0xffffffe0
   1534c:	cmp	r0, #0
   15350:	bne	15328 <_obstack_memory_used@@Base+0x1828>
   15354:	b	15294 <_obstack_memory_used@@Base+0x1794>
   15358:	andeq	r0, r0, #6
   1535c:	ldr	r2, [r0, #8]
   15360:	cmp	r2, #0
   15364:	bne	15398 <_obstack_memory_used@@Base+0x1898>
   15368:	ldr	r2, [r1, #8]
   1536c:	cmp	r2, #0
   15370:	bne	15398 <_obstack_memory_used@@Base+0x1898>
   15374:	ldr	r1, [r1, #12]
   15378:	ldr	r2, [r0, #12]
   1537c:	orr	r2, r2, r1
   15380:	tst	r2, #16
   15384:	ldreq	r2, [r3]
   15388:	addeq	r1, r2, #1
   1538c:	streq	r1, [r3]
   15390:	ldreq	r3, [r0, #4]
   15394:	strbeq	r3, [r2]
   15398:	mov	r0, #0
   1539c:	bx	lr
   153a0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   153a4:	add	fp, sp, #32
   153a8:	sub	sp, sp, #12
   153ac:	ldr	r6, [r0, #4]
   153b0:	cmp	r6, #0
   153b4:	beq	15458 <_obstack_memory_used@@Base+0x1958>
   153b8:	mov	r5, r0
   153bc:	ldr	r0, [r0, #8]
   153c0:	mov	r4, r1
   153c4:	bl	11234 <strlen@plt>
   153c8:	ldr	sl, [pc, #324]	; 15514 <_obstack_memory_used@@Base+0x1a14>
   153cc:	ldr	r7, [r5]
   153d0:	sub	r9, fp, #36	; 0x24
   153d4:	add	r0, r0, #15
   153d8:	bic	r0, r0, #7
   153dc:	sub	sp, sp, r0
   153e0:	mov	r8, sp
   153e4:	str	sp, [r9, #-4]!
   153e8:	ldr	r2, [r7, #20]
   153ec:	mov	r0, r7
   153f0:	mov	r3, r9
   153f4:	ldr	r2, [r2, #24]
   153f8:	mov	r1, sl
   153fc:	bl	14594 <_obstack_memory_used@@Base+0xa94>
   15400:	subs	r6, r6, #1
   15404:	add	r7, r7, #28
   15408:	bne	153e8 <_obstack_memory_used@@Base+0x18e8>
   1540c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   15410:	cmp	r8, r3
   15414:	bcs	15434 <_obstack_memory_used@@Base+0x1934>
   15418:	add	r2, r3, #1
   1541c:	str	r2, [fp, #-40]	; 0xffffffd8
   15420:	ldr	r1, [pc, #240]	; 15518 <_obstack_memory_used@@Base+0x1a18>
   15424:	strb	r6, [r3]
   15428:	mov	r2, r8
   1542c:	mov	r0, r4
   15430:	bl	18288 <argp_error@@Base+0x1170>
   15434:	ldm	r5, {r6, r7}
   15438:	ldr	r8, [pc, #220]	; 1551c <_obstack_memory_used@@Base+0x1a1c>
   1543c:	cmp	r7, #0
   15440:	bne	15460 <_obstack_memory_used@@Base+0x1960>
   15444:	ldm	r5, {r5, r8}
   15448:	ldr	sl, [pc, #208]	; 15520 <_obstack_memory_used@@Base+0x1a20>
   1544c:	add	r5, r5, #28
   15450:	cmp	r8, #0
   15454:	bne	15484 <_obstack_memory_used@@Base+0x1984>
   15458:	sub	sp, fp, #32
   1545c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15460:	ldr	r2, [r6, #20]
   15464:	mov	r0, r6
   15468:	mov	r3, r4
   1546c:	ldr	r2, [r2, #24]
   15470:	mov	r1, r8
   15474:	bl	14594 <_obstack_memory_used@@Base+0xa94>
   15478:	add	r6, r6, #28
   1547c:	sub	r7, r7, #1
   15480:	b	1543c <_obstack_memory_used@@Base+0x193c>
   15484:	ldr	r7, [r5, #-28]	; 0xffffffe4
   15488:	ldr	r9, [r5, #-24]	; 0xffffffe8
   1548c:	mov	r6, r7
   15490:	cmp	r9, #0
   15494:	subeq	r8, r8, #1
   15498:	addeq	r5, r5, #28
   1549c:	beq	15450 <_obstack_memory_used@@Base+0x1950>
   154a0:	ldr	r2, [r6]
   154a4:	cmp	r2, #0
   154a8:	beq	154f8 <_obstack_memory_used@@Base+0x19f8>
   154ac:	ldr	r1, [r6, #12]
   154b0:	tst	r1, #4
   154b4:	moveq	r7, r6
   154b8:	tst	r1, #2
   154bc:	bne	154f8 <_obstack_memory_used@@Base+0x19f8>
   154c0:	ldr	r3, [r6, #8]
   154c4:	ldr	r0, [r7, #12]
   154c8:	cmp	r3, #0
   154cc:	orr	r1, r1, r0
   154d0:	ldreq	r3, [r7, #8]
   154d4:	tst	r1, #16
   154d8:	bne	154f8 <_obstack_memory_used@@Base+0x19f8>
   154dc:	cmp	r3, #0
   154e0:	beq	15504 <_obstack_memory_used@@Base+0x1a04>
   154e4:	tst	r1, #1
   154e8:	movne	r1, sl
   154ec:	ldreq	r1, [pc, #48]	; 15524 <_obstack_memory_used@@Base+0x1a24>
   154f0:	mov	r0, r4
   154f4:	bl	18288 <argp_error@@Base+0x1170>
   154f8:	add	r6, r6, #24
   154fc:	sub	r9, r9, #1
   15500:	b	15490 <_obstack_memory_used@@Base+0x1990>
   15504:	ldr	r1, [pc, #28]	; 15528 <_obstack_memory_used@@Base+0x1a28>
   15508:	mov	r0, r4
   1550c:	bl	18288 <argp_error@@Base+0x1170>
   15510:	b	154f8 <_obstack_memory_used@@Base+0x19f8>
   15514:	andeq	r5, r1, ip, asr r3
   15518:	ldrdeq	sl, [r1], -sp
   1551c:	andeq	r5, r1, r4, lsl #2
   15520:	andeq	sl, r1, r4, ror #15
   15524:	strdeq	sl, [r1], -r1
   15528:	strdeq	sl, [r1], -ip
   1552c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   15530:	mov	r8, r1
   15534:	ldm	r0, {r5, r6}
   15538:	cmp	r6, #0
   1553c:	bne	15544 <_obstack_memory_used@@Base+0x1a44>
   15540:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   15544:	ldm	r5, {r4, r9}
   15548:	mov	r7, #0
   1554c:	add	r4, r4, #24
   15550:	cmp	r9, r7
   15554:	subeq	r6, r6, #1
   15558:	addeq	r5, r5, #28
   1555c:	beq	15538 <_obstack_memory_used@@Base+0x1a38>
   15560:	ldr	r0, [r4, #-24]	; 0xffffffe8
   15564:	cmp	r0, #0
   15568:	beq	15588 <_obstack_memory_used@@Base+0x1a88>
   1556c:	ldr	r3, [r4, #-12]
   15570:	tst	r3, #2
   15574:	bne	15588 <_obstack_memory_used@@Base+0x1a88>
   15578:	mov	r1, r8
   1557c:	bl	110d8 <strcmp@plt>
   15580:	cmp	r0, #0
   15584:	beq	15594 <_obstack_memory_used@@Base+0x1a94>
   15588:	add	r7, r7, #1
   1558c:	add	r4, r4, #24
   15590:	b	15550 <_obstack_memory_used@@Base+0x1a50>
   15594:	mvn	r3, #0
   15598:	str	r3, [r5, #12]
   1559c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   155a0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   155a4:	sub	sp, sp, #44	; 0x2c
   155a8:	ldr	r6, [r0, #16]
   155ac:	str	r0, [sp, #8]
   155b0:	ldr	r5, [r0]
   155b4:	mov	r0, #16
   155b8:	mov	r9, r1
   155bc:	bl	144bc <_obstack_memory_used@@Base+0x9bc>
   155c0:	subs	r4, r0, #0
   155c4:	bne	155dc <_obstack_memory_used@@Base+0x1adc>
   155c8:	ldr	r3, [pc, #1444]	; 15b74 <_obstack_memory_used@@Base+0x2074>
   155cc:	ldr	r2, [pc, #1444]	; 15b78 <_obstack_memory_used@@Base+0x2078>
   155d0:	ldr	r1, [pc, #1444]	; 15b7c <_obstack_memory_used@@Base+0x207c>
   155d4:	ldr	r0, [pc, #1444]	; 15b80 <_obstack_memory_used@@Base+0x2080>
   155d8:	bl	11384 <__assert_fail@plt>
   155dc:	mov	r3, #0
   155e0:	cmp	r5, r3
   155e4:	str	r3, [r4, #4]
   155e8:	str	r3, [r4, #12]
   155ec:	beq	15b40 <_obstack_memory_used@@Base+0x2040>
   155f0:	ldr	r8, [r5, #12]
   155f4:	ands	r8, r8, #4
   155f8:	addeq	r7, r5, #24
   155fc:	moveq	fp, r8
   15600:	beq	159a8 <_obstack_memory_used@@Base+0x1ea8>
   15604:	ldr	r3, [pc, #1384]	; 15b74 <_obstack_memory_used@@Base+0x2074>
   15608:	mov	r2, #460	; 0x1cc
   1560c:	ldr	r1, [pc, #1384]	; 15b7c <_obstack_memory_used@@Base+0x207c>
   15610:	ldr	r0, [pc, #1388]	; 15b84 <_obstack_memory_used@@Base+0x2084>
   15614:	b	155d8 <_obstack_memory_used@@Base+0x1ad8>
   15618:	ldr	r2, [pc, #1384]	; 15b88 <_obstack_memory_used@@Base+0x2088>
   1561c:	ldr	r0, [r4, #4]
   15620:	cmp	r0, r2
   15624:	addls	r7, r7, #28
   15628:	movls	sl, r3
   1562c:	movls	r2, r1
   15630:	bls	15b0c <_obstack_memory_used@@Base+0x200c>
   15634:	ldr	r3, [pc, #1336]	; 15b74 <_obstack_memory_used@@Base+0x2074>
   15638:	mov	r2, #476	; 0x1dc
   1563c:	ldr	r1, [pc, #1336]	; 15b7c <_obstack_memory_used@@Base+0x207c>
   15640:	ldr	r0, [pc, #1348]	; 15b8c <_obstack_memory_used@@Base+0x208c>
   15644:	b	155d8 <_obstack_memory_used@@Base+0x1ad8>
   15648:	ldrb	r0, [r0]
   1564c:	add	r1, r1, #1
   15650:	cmp	r0, r8
   15654:	beq	15ad0 <_obstack_memory_used@@Base+0x1fd0>
   15658:	cmp	sl, r1
   1565c:	mov	r0, r1
   15660:	bhi	15648 <_obstack_memory_used@@Base+0x1b48>
   15664:	strb	r8, [sl]
   15668:	add	sl, sl, #1
   1566c:	b	15ad0 <_obstack_memory_used@@Base+0x1fd0>
   15670:	ldr	r8, [r6, #-4]
   15674:	ldr	r7, [r6, #-8]
   15678:	cmp	r8, #0
   1567c:	bne	1568c <_obstack_memory_used@@Base+0x1b8c>
   15680:	cmp	r7, #0
   15684:	moveq	r1, r9
   15688:	beq	156e8 <_obstack_memory_used@@Base+0x1be8>
   1568c:	ldr	r3, [sp, #8]
   15690:	sub	r5, r6, #16
   15694:	mov	r0, #28
   15698:	ldr	r3, [r3, #16]
   1569c:	sub	r5, r5, r3
   156a0:	bl	144bc <_obstack_memory_used@@Base+0x9bc>
   156a4:	asr	r5, r5, #4
   156a8:	subs	r1, r0, #0
   156ac:	beq	156e8 <_obstack_memory_used@@Base+0x1be8>
   156b0:	ldr	r3, [sp, #8]
   156b4:	cmp	r9, #0
   156b8:	str	r3, [r1, #16]
   156bc:	ldrne	r3, [r9, #20]
   156c0:	moveq	r3, #0
   156c4:	addne	r3, r3, #1
   156c8:	str	r3, [r1, #20]
   156cc:	ldr	r3, [r4, #12]
   156d0:	str	r8, [r1, #8]
   156d4:	str	r7, [r1]
   156d8:	str	r5, [r1, #4]
   156dc:	str	r9, [r1, #12]
   156e0:	str	r3, [r1, #24]
   156e4:	str	r1, [r4, #12]
   156e8:	ldr	r0, [r6, #-16]
   156ec:	bl	155a0 <_obstack_memory_used@@Base+0x1aa0>
   156f0:	ldr	r2, [sp, #28]
   156f4:	ldr	r3, [r4, #12]
   156f8:	mov	r5, r0
   156fc:	cmp	r3, #0
   15700:	bne	1575c <_obstack_memory_used@@Base+0x1c5c>
   15704:	ldr	r1, [r5, #12]
   15708:	str	r1, [r2]
   1570c:	ldr	r2, [r5, #4]
   15710:	str	r3, [r5, #12]
   15714:	cmp	r2, #0
   15718:	beq	15740 <_obstack_memory_used@@Base+0x1c40>
   1571c:	ldr	r1, [r4, #4]
   15720:	cmp	r1, #0
   15724:	bne	15768 <_obstack_memory_used@@Base+0x1c68>
   15728:	str	r2, [r4, #4]
   1572c:	ldr	r2, [r5]
   15730:	str	r2, [r4]
   15734:	ldr	r2, [r5, #8]
   15738:	str	r2, [r4, #8]
   1573c:	str	r3, [r5, #4]
   15740:	mov	r0, r5
   15744:	bl	1472c <_obstack_memory_used@@Base+0xc2c>
   15748:	add	r6, r6, #16
   1574c:	ldr	r3, [r6, #-16]
   15750:	cmp	r3, #0
   15754:	bne	15670 <_obstack_memory_used@@Base+0x1b70>
   15758:	b	15b54 <_obstack_memory_used@@Base+0x2054>
   1575c:	add	r2, r3, #24
   15760:	ldr	r3, [r3, #24]
   15764:	b	156fc <_obstack_memory_used@@Base+0x1bfc>
   15768:	add	r3, r2, r1
   1576c:	mov	r7, #28
   15770:	str	r3, [sp, #12]
   15774:	mul	r0, r7, r3
   15778:	bl	144bc <_obstack_memory_used@@Base+0x9bc>
   1577c:	str	r0, [sp]
   15780:	ldr	r0, [r4, #8]
   15784:	bl	11234 <strlen@plt>
   15788:	mov	fp, r0
   1578c:	ldr	r0, [r5, #8]
   15790:	bl	11234 <strlen@plt>
   15794:	add	r0, fp, r0
   15798:	add	r0, r0, #1
   1579c:	bl	144bc <_obstack_memory_used@@Base+0x9bc>
   157a0:	ldr	r3, [sp]
   157a4:	cmp	r3, #0
   157a8:	cmpne	r0, #0
   157ac:	mov	r8, r0
   157b0:	ldreq	r3, [pc, #984]	; 15b90 <_obstack_memory_used@@Base+0x2090>
   157b4:	ldreq	r2, [pc, #984]	; 15b94 <_obstack_memory_used@@Base+0x2094>
   157b8:	ldreq	r1, [pc, #956]	; 15b7c <_obstack_memory_used@@Base+0x207c>
   157bc:	ldreq	r0, [pc, #980]	; 15b98 <_obstack_memory_used@@Base+0x2098>
   157c0:	beq	155d8 <_obstack_memory_used@@Base+0x1ad8>
   157c4:	ldr	r3, [sp, #12]
   157c8:	ldr	r2, [pc, #952]	; 15b88 <_obstack_memory_used@@Base+0x2088>
   157cc:	cmp	r3, r2
   157d0:	ldrhi	r3, [pc, #952]	; 15b90 <_obstack_memory_used@@Base+0x2090>
   157d4:	movhi	r2, #972	; 0x3cc
   157d8:	ldrhi	r1, [pc, #924]	; 15b7c <_obstack_memory_used@@Base+0x207c>
   157dc:	ldrhi	r0, [pc, #952]	; 15b9c <_obstack_memory_used@@Base+0x209c>
   157e0:	bhi	155d8 <_obstack_memory_used@@Base+0x1ad8>
   157e4:	ldr	sl, [r4, #4]
   157e8:	ldr	r3, [r4]
   157ec:	ldr	r0, [sp]
   157f0:	str	r3, [sp, #16]
   157f4:	mul	r3, r7, sl
   157f8:	ldr	r1, [sp, #16]
   157fc:	mov	r2, r3
   15800:	str	r3, [sp, #24]
   15804:	bl	11210 <mempcpy@plt>
   15808:	ldr	r3, [r5, #4]
   1580c:	ldr	r1, [r5]
   15810:	str	r3, [sp, #4]
   15814:	mul	r2, r7, r3
   15818:	bl	11144 <memcpy@plt>
   1581c:	ldr	r3, [r4, #8]
   15820:	mov	r2, fp
   15824:	mov	r1, r3
   15828:	mov	r0, r8
   1582c:	str	r3, [sp, #20]
   15830:	bl	11144 <memcpy@plt>
   15834:	ldr	r1, [sp]
   15838:	ldr	r3, [sp, #20]
   1583c:	cmp	sl, #0
   15840:	bne	1589c <_obstack_memory_used@@Base+0x1d9c>
   15844:	add	r3, r8, fp
   15848:	str	r3, [sp, #20]
   1584c:	ldr	r3, [sp, #24]
   15850:	ldr	r1, [r5, #8]
   15854:	add	r7, r3, #28
   15858:	ldr	r3, [sp]
   1585c:	ldr	sl, [sp, #20]
   15860:	add	r7, r3, r7
   15864:	ldr	r3, [sp, #4]
   15868:	cmp	r3, #0
   1586c:	bne	158b8 <_obstack_memory_used@@Base+0x1db8>
   15870:	ldrb	r3, [sp, #4]
   15874:	ldr	r0, [sp, #16]
   15878:	strb	r3, [sl]
   1587c:	bl	13710 <argp_parse@@Base+0xa9c>
   15880:	ldr	r0, [r4, #8]
   15884:	bl	13710 <argp_parse@@Base+0xa9c>
   15888:	ldr	r3, [sp]
   1588c:	str	r3, [r4]
   15890:	ldr	r3, [sp, #12]
   15894:	stmib	r4, {r3, r8}
   15898:	b	15740 <_obstack_memory_used@@Base+0x1c40>
   1589c:	ldr	r2, [r1, #8]
   158a0:	sub	sl, sl, #1
   158a4:	sub	r2, r2, r3
   158a8:	add	r2, r8, r2
   158ac:	str	r2, [r1, #8]
   158b0:	add	r1, r1, #28
   158b4:	b	1583c <_obstack_memory_used@@Base+0x1d3c>
   158b8:	ldr	r3, [r7, #-24]	; 0xffffffe8
   158bc:	ldr	fp, [r7, #-28]	; 0xffffffe4
   158c0:	str	sl, [r7, #-20]	; 0xffffffec
   158c4:	cmp	r3, #0
   158c8:	ldreq	r3, [sp, #4]
   158cc:	addeq	r7, r7, #28
   158d0:	subeq	r3, r3, #1
   158d4:	streq	r3, [sp, #4]
   158d8:	beq	15864 <_obstack_memory_used@@Base+0x1d64>
   158dc:	ldr	r2, [fp, #12]
   158e0:	tst	r2, #8
   158e4:	bne	15928 <_obstack_memory_used@@Base+0x1e28>
   158e8:	ldr	r2, [fp, #4]
   158ec:	sub	r0, r2, #1
   158f0:	cmp	r0, #254	; 0xfe
   158f4:	str	r2, [sp, #36]	; 0x24
   158f8:	bhi	15928 <_obstack_memory_used@@Base+0x1e28>
   158fc:	str	r3, [sp, #32]
   15900:	str	r1, [sp, #24]
   15904:	bl	1121c <__ctype_b_loc@plt>
   15908:	ldr	r2, [sp, #36]	; 0x24
   1590c:	ldr	r1, [sp, #24]
   15910:	ldr	r3, [sp, #32]
   15914:	ldr	ip, [r0]
   15918:	lsl	r0, r2, #1
   1591c:	ldrh	r0, [ip, r0]
   15920:	tst	r0, #16384	; 0x4000
   15924:	bne	15b60 <_obstack_memory_used@@Base+0x2060>
   15928:	add	fp, fp, #24
   1592c:	sub	r3, r3, #1
   15930:	b	158c4 <_obstack_memory_used@@Base+0x1dc4>
   15934:	ldrb	ip, [ip]
   15938:	add	r2, r2, #1
   1593c:	cmp	ip, r0
   15940:	beq	1595c <_obstack_memory_used@@Base+0x1e5c>
   15944:	ldr	lr, [sp, #20]
   15948:	mov	ip, r2
   1594c:	cmp	lr, r2
   15950:	bhi	15934 <_obstack_memory_used@@Base+0x1e34>
   15954:	strb	r0, [sl]
   15958:	add	sl, sl, #1
   1595c:	add	r1, r1, #1
   15960:	b	15928 <_obstack_memory_used@@Base+0x1e28>
   15964:	ldr	r1, [r7, #-12]
   15968:	tst	r1, #4
   1596c:	ldreq	r2, [r4, #4]
   15970:	addeq	r2, r2, #1
   15974:	streq	r2, [r4, #4]
   15978:	tst	r1, #8
   1597c:	bne	159a4 <_obstack_memory_used@@Base+0x1ea4>
   15980:	sub	r2, sl, #1
   15984:	cmp	r2, #254	; 0xfe
   15988:	bhi	159a4 <_obstack_memory_used@@Base+0x1ea4>
   1598c:	bl	1121c <__ctype_b_loc@plt>
   15990:	lsl	sl, sl, #1
   15994:	ldr	r2, [r0]
   15998:	ldrh	r2, [r2, sl]
   1599c:	tst	r2, #16384	; 0x4000
   159a0:	addne	fp, fp, #1
   159a4:	add	r7, r7, #24
   159a8:	ldr	sl, [r7, #-20]	; 0xffffffec
   159ac:	cmp	sl, #0
   159b0:	bne	15964 <_obstack_memory_used@@Base+0x1e64>
   159b4:	ldr	r2, [r7, #-24]	; 0xffffffe8
   159b8:	cmp	r2, #0
   159bc:	bne	15964 <_obstack_memory_used@@Base+0x1e64>
   159c0:	ldr	r2, [r7, #-8]
   159c4:	cmp	r2, #0
   159c8:	bne	15964 <_obstack_memory_used@@Base+0x1e64>
   159cc:	ldr	r1, [r7, #-4]
   159d0:	cmp	r1, #0
   159d4:	bne	15964 <_obstack_memory_used@@Base+0x1e64>
   159d8:	ldr	r2, [r4, #4]
   159dc:	mov	r0, #28
   159e0:	str	r1, [sp]
   159e4:	mul	r0, r0, r2
   159e8:	bl	144bc <_obstack_memory_used@@Base+0x9bc>
   159ec:	str	r0, [r4]
   159f0:	add	r0, fp, #1
   159f4:	bl	144bc <_obstack_memory_used@@Base+0x9bc>
   159f8:	ldr	r7, [r4]
   159fc:	ldr	r1, [sp]
   15a00:	cmp	r0, #0
   15a04:	cmpne	r7, #0
   15a08:	mov	r3, r0
   15a0c:	str	r0, [r4, #8]
   15a10:	bne	15618 <_obstack_memory_used@@Base+0x1b18>
   15a14:	ldr	r3, [pc, #344]	; 15b74 <_obstack_memory_used@@Base+0x2074>
   15a18:	ldr	r2, [pc, #384]	; 15ba0 <_obstack_memory_used@@Base+0x20a0>
   15a1c:	ldr	r1, [pc, #344]	; 15b7c <_obstack_memory_used@@Base+0x207c>
   15a20:	ldr	r0, [pc, #380]	; 15ba4 <_obstack_memory_used@@Base+0x20a4>
   15a24:	b	155d8 <_obstack_memory_used@@Base+0x1ad8>
   15a28:	uxtb	r8, r8
   15a2c:	mov	r1, r3
   15a30:	b	15658 <_obstack_memory_used@@Base+0x1b58>
   15a34:	ldr	r1, [r5, #12]
   15a38:	tst	r1, #4
   15a3c:	bne	15a80 <_obstack_memory_used@@Base+0x1f80>
   15a40:	b	15b04 <_obstack_memory_used@@Base+0x2004>
   15a44:	str	r2, [r7, #-24]	; 0xffffffe8
   15a48:	ldr	fp, [r5, #20]
   15a4c:	str	r5, [r7, #-28]	; 0xffffffe4
   15a50:	cmp	fp, #0
   15a54:	str	sl, [r7, #-20]	; 0xffffffec
   15a58:	bne	15a70 <_obstack_memory_used@@Base+0x1f70>
   15a5c:	ldr	r1, [r5]
   15a60:	cmp	r1, #0
   15a64:	cmpeq	r0, #0
   15a68:	addeq	fp, r8, #1
   15a6c:	movne	fp, r8
   15a70:	ldr	r1, [sp, #8]
   15a74:	str	fp, [r7, #-16]
   15a78:	str	r9, [r7, #-12]
   15a7c:	str	r1, [r7, #-8]
   15a80:	ldr	r1, [r7, #-24]	; 0xffffffe8
   15a84:	add	r1, r1, #1
   15a88:	str	r1, [r7, #-24]	; 0xffffffe8
   15a8c:	ldr	r1, [r5, #12]
   15a90:	tst	r1, #8
   15a94:	bne	15ad0 <_obstack_memory_used@@Base+0x1fd0>
   15a98:	ldr	r8, [r5, #4]
   15a9c:	sub	r1, r8, #1
   15aa0:	cmp	r1, #254	; 0xfe
   15aa4:	bhi	15ad0 <_obstack_memory_used@@Base+0x1fd0>
   15aa8:	str	r2, [sp, #4]
   15aac:	str	r3, [sp]
   15ab0:	bl	1121c <__ctype_b_loc@plt>
   15ab4:	lsl	r1, r8, #1
   15ab8:	ldr	r3, [sp]
   15abc:	ldr	r2, [sp, #4]
   15ac0:	ldr	r0, [r0]
   15ac4:	ldrh	r1, [r0, r1]
   15ac8:	tst	r1, #16384	; 0x4000
   15acc:	bne	15a28 <_obstack_memory_used@@Base+0x1f28>
   15ad0:	add	r5, r5, #24
   15ad4:	ldr	r1, [r5, #4]
   15ad8:	cmp	r1, #0
   15adc:	bne	15a34 <_obstack_memory_used@@Base+0x1f34>
   15ae0:	ldr	r1, [r5]
   15ae4:	cmp	r1, #0
   15ae8:	bne	15a34 <_obstack_memory_used@@Base+0x1f34>
   15aec:	ldr	r1, [r5, #16]
   15af0:	cmp	r1, #0
   15af4:	bne	15a34 <_obstack_memory_used@@Base+0x1f34>
   15af8:	ldr	r1, [r5, #20]
   15afc:	cmp	r1, #0
   15b00:	bne	15a34 <_obstack_memory_used@@Base+0x1f34>
   15b04:	add	r7, r7, #28
   15b08:	mov	r8, fp
   15b0c:	ldr	r0, [r5, #4]
   15b10:	cmp	r0, #0
   15b14:	bne	15a44 <_obstack_memory_used@@Base+0x1f44>
   15b18:	ldr	r1, [r5]
   15b1c:	cmp	r1, #0
   15b20:	bne	15a44 <_obstack_memory_used@@Base+0x1f44>
   15b24:	ldr	r1, [r5, #16]
   15b28:	cmp	r1, #0
   15b2c:	bne	15a44 <_obstack_memory_used@@Base+0x1f44>
   15b30:	ldr	r1, [r5, #20]
   15b34:	cmp	r1, #0
   15b38:	bne	15a44 <_obstack_memory_used@@Base+0x1f44>
   15b3c:	strb	r1, [sl]
   15b40:	cmp	r6, #0
   15b44:	addne	r3, r4, #12
   15b48:	addne	r6, r6, #16
   15b4c:	strne	r3, [sp, #28]
   15b50:	bne	1574c <_obstack_memory_used@@Base+0x1c4c>
   15b54:	mov	r0, r4
   15b58:	add	sp, sp, #44	; 0x2c
   15b5c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15b60:	ldrb	r0, [r1]
   15b64:	cmp	r0, r2
   15b68:	moveq	r2, r8
   15b6c:	bne	15928 <_obstack_memory_used@@Base+0x1e28>
   15b70:	b	15944 <_obstack_memory_used@@Base+0x1e44>
   15b74:	andeq	sl, r1, r2, lsr #14
   15b78:	andeq	r0, r0, r2, asr #3
   15b7c:	andeq	sl, r1, r4, lsl #16
   15b80:	andeq	sl, r1, r0, lsl r8
   15b84:	andeq	sl, r1, r4, lsl r8
   15b88:	stmdbeq	r4!, {r0, r3, r6, r9, ip, pc}
   15b8c:	andeq	sl, r1, r7, asr #16
   15b90:	andeq	sl, r1, fp, lsr #14
   15b94:	andeq	r0, r0, sl, asr #7
   15b98:	andeq	sl, r1, r0, lsl #17
   15b9c:	andeq	sl, r1, ip, asr #16
   15ba0:	ldrdeq	r0, [r0], -sl
   15ba4:	andeq	sl, r1, r4, lsr #16
   15ba8:	push	{r4, r5, r6, lr}
   15bac:	mov	r4, r0
   15bb0:	mov	r5, r1
   15bb4:	ldr	r0, [r0, #12]
   15bb8:	ldr	r1, [r1, #12]
   15bbc:	cmp	r0, r1
   15bc0:	bne	15bf8 <_obstack_memory_used@@Base+0x20f8>
   15bc4:	ldr	r0, [r5, #8]
   15bc8:	ldr	r3, [r4, #8]
   15bcc:	mvn	r2, r0
   15bd0:	lsr	r2, r2, #31
   15bd4:	cmp	r2, r3, lsr #31
   15bd8:	subne	r0, r3, r0
   15bdc:	subeq	r0, r0, r3
   15be0:	cmp	r0, #0
   15be4:	popne	{r4, r5, r6, pc}
   15be8:	ldr	r0, [r5, #4]
   15bec:	ldr	r3, [r4, #4]
   15bf0:	sub	r0, r0, r3
   15bf4:	pop	{r4, r5, r6, pc}
   15bf8:	bl	15ba8 <_obstack_memory_used@@Base+0x20a8>
   15bfc:	cmp	r0, #0
   15c00:	popne	{r4, r5, r6, pc}
   15c04:	ldr	r0, [r5, #8]
   15c08:	ldr	r3, [r4, #8]
   15c0c:	mvn	r2, r0
   15c10:	lsr	r2, r2, #31
   15c14:	cmp	r2, r3, lsr #31
   15c18:	subne	r0, r3, r0
   15c1c:	subeq	r0, r0, r3
   15c20:	cmp	r0, #0
   15c24:	beq	15be8 <_obstack_memory_used@@Base+0x20e8>
   15c28:	pop	{r4, r5, r6, pc}
   15c2c:	push	{r0, r1, r4, r5, r6, r7, r8, lr}
   15c30:	mov	r6, r0
   15c34:	ldr	r0, [r0, #16]
   15c38:	mov	r5, r1
   15c3c:	cmp	r0, #0
   15c40:	movne	r3, r0
   15c44:	bne	15c54 <_obstack_memory_used@@Base+0x2154>
   15c48:	ldr	r3, [r6, #12]
   15c4c:	b	15c64 <_obstack_memory_used@@Base+0x2164>
   15c50:	mov	r3, r2
   15c54:	ldr	r2, [r3, #12]
   15c58:	cmp	r2, #0
   15c5c:	bne	15c50 <_obstack_memory_used@@Base+0x2150>
   15c60:	ldr	r3, [r3, #8]
   15c64:	ldr	r1, [r5, #16]
   15c68:	cmp	r1, #0
   15c6c:	movne	r2, r1
   15c70:	bne	15c80 <_obstack_memory_used@@Base+0x2180>
   15c74:	ldr	r4, [r5, #12]
   15c78:	b	15c90 <_obstack_memory_used@@Base+0x2190>
   15c7c:	mov	r2, ip
   15c80:	ldr	ip, [r2, #12]
   15c84:	cmp	ip, #0
   15c88:	bne	15c7c <_obstack_memory_used@@Base+0x217c>
   15c8c:	ldr	r4, [r2, #8]
   15c90:	mvn	r2, r4
   15c94:	lsr	r2, r2, #31
   15c98:	cmp	r2, r3, lsr #31
   15c9c:	subne	r4, r3, r4
   15ca0:	subeq	r4, r4, r3
   15ca4:	cmp	r4, #0
   15ca8:	bne	15d00 <_obstack_memory_used@@Base+0x2200>
   15cac:	adds	r4, r1, #0
   15cb0:	movne	r4, #1
   15cb4:	cmp	r0, #0
   15cb8:	rsbeq	r4, r4, #0
   15cbc:	rsbne	r4, r4, #1
   15cc0:	cmp	r4, #0
   15cc4:	bne	15d00 <_obstack_memory_used@@Base+0x2200>
   15cc8:	cmp	r0, #0
   15ccc:	beq	15d3c <_obstack_memory_used@@Base+0x223c>
   15cd0:	ldr	r3, [r0, #20]
   15cd4:	ldr	r2, [r1, #20]
   15cd8:	cmp	r3, r2
   15cdc:	ble	15d0c <_obstack_memory_used@@Base+0x220c>
   15ce0:	ldr	r0, [r0, #12]
   15ce4:	ldr	r3, [r0, #20]
   15ce8:	cmp	r2, r3
   15cec:	blt	15ce0 <_obstack_memory_used@@Base+0x21e0>
   15cf0:	bl	15ba8 <_obstack_memory_used@@Base+0x20a8>
   15cf4:	cmp	r0, #0
   15cf8:	movne	r4, r0
   15cfc:	moveq	r4, #1
   15d00:	mov	r0, r4
   15d04:	add	sp, sp, #8
   15d08:	pop	{r4, r5, r6, r7, r8, pc}
   15d0c:	bge	15d30 <_obstack_memory_used@@Base+0x2230>
   15d10:	ldr	r1, [r1, #12]
   15d14:	ldr	r2, [r1, #20]
   15d18:	cmp	r3, r2
   15d1c:	blt	15d10 <_obstack_memory_used@@Base+0x2210>
   15d20:	bl	15ba8 <_obstack_memory_used@@Base+0x20a8>
   15d24:	subs	r4, r0, #0
   15d28:	mvneq	r4, #0
   15d2c:	b	15d00 <_obstack_memory_used@@Base+0x2200>
   15d30:	bl	15ba8 <_obstack_memory_used@@Base+0x20a8>
   15d34:	subs	r4, r0, #0
   15d38:	bne	15d00 <_obstack_memory_used@@Base+0x2200>
   15d3c:	ldr	r4, [r5, #12]
   15d40:	ldr	r3, [r6, #12]
   15d44:	mvn	r2, r4
   15d48:	lsr	r2, r2, #31
   15d4c:	cmp	r2, r3, lsr #31
   15d50:	subne	r4, r3, r4
   15d54:	subeq	r4, r4, r3
   15d58:	cmp	r4, #0
   15d5c:	bne	15d00 <_obstack_memory_used@@Base+0x2200>
   15d60:	mov	r0, r6
   15d64:	bl	14558 <_obstack_memory_used@@Base+0xa58>
   15d68:	mov	r7, r0
   15d6c:	str	r0, [sp]
   15d70:	mov	r0, r5
   15d74:	bl	14558 <_obstack_memory_used@@Base+0xa58>
   15d78:	ldr	r3, [r6]
   15d7c:	adds	r7, r7, #0
   15d80:	movne	r7, #1
   15d84:	ldr	r3, [r3, #12]
   15d88:	ands	r3, r7, r3, lsr #3
   15d8c:	moveq	r7, r4
   15d90:	str	r0, [sp, #4]
   15d94:	beq	15da8 <_obstack_memory_used@@Base+0x22a8>
   15d98:	mov	r0, sp
   15d9c:	bl	146c0 <_obstack_memory_used@@Base+0xbc0>
   15da0:	adds	r7, r0, #0
   15da4:	movne	r7, #1
   15da8:	ldr	r3, [r5]
   15dac:	ldr	r0, [r3, #12]
   15db0:	ands	r0, r0, #8
   15db4:	beq	15dd8 <_obstack_memory_used@@Base+0x22d8>
   15db8:	ldr	r3, [sp, #4]
   15dbc:	cmp	r3, #0
   15dc0:	moveq	r0, r4
   15dc4:	beq	15dd8 <_obstack_memory_used@@Base+0x22d8>
   15dc8:	add	r0, sp, #4
   15dcc:	bl	146c0 <_obstack_memory_used@@Base+0xbc0>
   15dd0:	adds	r0, r0, #0
   15dd4:	movne	r0, #1
   15dd8:	subs	r4, r7, r0
   15ddc:	bne	15d00 <_obstack_memory_used@@Base+0x2200>
   15de0:	ldr	r2, [r6, #20]
   15de4:	mov	r3, r4
   15de8:	ldr	r1, [pc, #224]	; 15ed0 <_obstack_memory_used@@Base+0x23d0>
   15dec:	ldr	r2, [r2, #24]
   15df0:	mov	r0, r6
   15df4:	bl	14594 <_obstack_memory_used@@Base+0xa94>
   15df8:	ldr	r2, [r5, #20]
   15dfc:	mov	r3, r4
   15e00:	ldr	r1, [pc, #200]	; 15ed0 <_obstack_memory_used@@Base+0x23d0>
   15e04:	ldr	r2, [r2, #24]
   15e08:	uxtb	r8, r0
   15e0c:	mov	r0, r5
   15e10:	bl	14594 <_obstack_memory_used@@Base+0xa94>
   15e14:	cmp	r8, #0
   15e18:	uxtb	r5, r0
   15e1c:	beq	15e28 <_obstack_memory_used@@Base+0x2328>
   15e20:	mov	r6, r8
   15e24:	b	15e38 <_obstack_memory_used@@Base+0x2338>
   15e28:	ldr	r3, [sp]
   15e2c:	cmp	r3, #0
   15e30:	ldrbne	r6, [r3]
   15e34:	beq	15e20 <_obstack_memory_used@@Base+0x2320>
   15e38:	cmp	r5, #0
   15e3c:	beq	15e48 <_obstack_memory_used@@Base+0x2348>
   15e40:	mov	r7, r5
   15e44:	b	15e58 <_obstack_memory_used@@Base+0x2358>
   15e48:	ldr	r3, [sp, #4]
   15e4c:	cmp	r3, #0
   15e50:	ldrbne	r7, [r3]
   15e54:	beq	15e40 <_obstack_memory_used@@Base+0x2340>
   15e58:	bl	111f8 <__ctype_tolower_loc@plt>
   15e5c:	ldr	r3, [r0]
   15e60:	ldr	r4, [r3, r6, lsl #2]
   15e64:	ldr	r3, [r3, r7, lsl #2]
   15e68:	subs	r4, r4, r3
   15e6c:	bne	15d00 <_obstack_memory_used@@Base+0x2200>
   15e70:	subs	r4, r7, r6
   15e74:	bne	15d00 <_obstack_memory_used@@Base+0x2200>
   15e78:	adds	r4, r5, #0
   15e7c:	movne	r4, #1
   15e80:	cmp	r8, #0
   15e84:	rsbeq	r4, r4, #0
   15e88:	rsbne	r4, r4, #1
   15e8c:	cmp	r4, #0
   15e90:	bne	15d00 <_obstack_memory_used@@Base+0x2200>
   15e94:	cmp	r8, #0
   15e98:	bne	15d00 <_obstack_memory_used@@Base+0x2200>
   15e9c:	ldm	sp, {r0, r1}
   15ea0:	adds	r4, r1, #0
   15ea4:	movne	r4, #1
   15ea8:	cmp	r0, #0
   15eac:	rsbeq	r4, r4, #0
   15eb0:	rsbne	r4, r4, #1
   15eb4:	cmp	r4, #0
   15eb8:	bne	15d00 <_obstack_memory_used@@Base+0x2200>
   15ebc:	cmp	r0, #0
   15ec0:	beq	15d00 <_obstack_memory_used@@Base+0x2200>
   15ec4:	bl	11180 <strcasecmp@plt>
   15ec8:	mov	r4, r0
   15ecc:	b	15d00 <_obstack_memory_used@@Base+0x2200>
   15ed0:	andeq	r4, r1, r4, ror r6

00015ed4 <argp_failure@@Base>:
   15ed4:	push	{r3}		; (str r3, [sp, #-4]!)
   15ed8:	push	{r4, r5, r6, r7, r8, lr}
   15edc:	sub	sp, sp, #204	; 0xcc
   15ee0:	subs	r5, r0, #0
   15ee4:	mov	r7, r1
   15ee8:	mov	r6, r2
   15eec:	ldr	r8, [sp, #228]	; 0xe4
   15ef0:	beq	15f1c <argp_failure@@Base+0x48>
   15ef4:	ldr	r3, [r5, #16]
   15ef8:	tst	r3, #2
   15efc:	bne	15f0c <argp_failure@@Base+0x38>
   15f00:	ldr	r4, [r5, #44]	; 0x2c
   15f04:	cmp	r4, #0
   15f08:	bne	15f40 <argp_failure@@Base+0x6c>
   15f0c:	add	sp, sp, #204	; 0xcc
   15f10:	pop	{r4, r5, r6, r7, r8, lr}
   15f14:	add	sp, sp, #4
   15f18:	bx	lr
   15f1c:	ldr	r3, [pc, #244]	; 16018 <argp_failure@@Base+0x144>
   15f20:	ldr	r4, [r3]
   15f24:	cmp	r4, #0
   15f28:	beq	15f0c <argp_failure@@Base+0x38>
   15f2c:	mov	r0, r4
   15f30:	bl	112dc <flockfile@plt>
   15f34:	ldr	r3, [pc, #224]	; 1601c <argp_failure@@Base+0x148>
   15f38:	ldr	r0, [r3]
   15f3c:	b	15f4c <argp_failure@@Base+0x78>
   15f40:	mov	r0, r4
   15f44:	bl	112dc <flockfile@plt>
   15f48:	ldr	r0, [r5, #40]	; 0x28
   15f4c:	mov	r1, r4
   15f50:	bl	110b4 <fputs_unlocked@plt>
   15f54:	cmp	r8, #0
   15f58:	beq	15f8c <argp_failure@@Base+0xb8>
   15f5c:	add	r3, sp, #232	; 0xe8
   15f60:	mov	r1, r4
   15f64:	mov	r0, #58	; 0x3a
   15f68:	str	r3, [sp]
   15f6c:	bl	11390 <putc_unlocked@plt>
   15f70:	mov	r1, r4
   15f74:	mov	r0, #32
   15f78:	bl	11390 <putc_unlocked@plt>
   15f7c:	ldr	r2, [sp]
   15f80:	mov	r1, r8
   15f84:	mov	r0, r4
   15f88:	bl	112ac <vfprintf@plt>
   15f8c:	cmp	r6, #0
   15f90:	beq	15fe0 <argp_failure@@Base+0x10c>
   15f94:	mov	r1, r4
   15f98:	mov	r0, #58	; 0x3a
   15f9c:	bl	11390 <putc_unlocked@plt>
   15fa0:	mov	r1, r4
   15fa4:	mov	r0, #32
   15fa8:	bl	11390 <putc_unlocked@plt>
   15fac:	mov	r2, #200	; 0xc8
   15fb0:	mov	r1, sp
   15fb4:	mov	r0, r6
   15fb8:	bl	11270 <strerror_r@plt>
   15fbc:	cmp	r0, #0
   15fc0:	bne	15fd8 <argp_failure@@Base+0x104>
   15fc4:	mov	r0, r6
   15fc8:	bl	111ec <strerror@plt>
   15fcc:	ldr	r3, [pc, #76]	; 16020 <argp_failure@@Base+0x14c>
   15fd0:	cmp	r0, #0
   15fd4:	moveq	r0, r3
   15fd8:	mov	r1, r4
   15fdc:	bl	110b4 <fputs_unlocked@plt>
   15fe0:	mov	r1, r4
   15fe4:	mov	r0, #10
   15fe8:	bl	11390 <putc_unlocked@plt>
   15fec:	mov	r0, r4
   15ff0:	bl	1118c <funlockfile@plt>
   15ff4:	cmp	r7, #0
   15ff8:	beq	15f0c <argp_failure@@Base+0x38>
   15ffc:	cmp	r5, #0
   16000:	beq	16010 <argp_failure@@Base+0x13c>
   16004:	ldr	r3, [r5, #16]
   16008:	tst	r3, #32
   1600c:	bne	15f0c <argp_failure@@Base+0x38>
   16010:	mov	r0, r7
   16014:	bl	11228 <exit@plt>
   16018:			; <UNDEFINED> instruction: 0x0002e8b8
   1601c:			; <UNDEFINED> instruction: 0x0002e8b0
   16020:	muleq	r1, r9, r8
   16024:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16028:	add	fp, sp, #32
   1602c:	sub	sp, sp, #116	; 0x74
   16030:	str	r3, [fp, #-104]	; 0xffffff98
   16034:	subs	r3, r2, #0
   16038:	str	r0, [fp, #-108]	; 0xffffff94
   1603c:	str	r1, [fp, #-96]	; 0xffffffa0
   16040:	str	r3, [fp, #-112]	; 0xffffff90
   16044:	beq	160c0 <argp_failure@@Base+0x1ec>
   16048:	ldr	r5, [pc, #3996]	; 16fec <argp_failure@@Base+0x1118>
   1604c:	mov	r0, r3
   16050:	bl	112dc <flockfile@plt>
   16054:	ldr	r9, [r5, #36]	; 0x24
   16058:	cmp	r9, #0
   1605c:	bne	16098 <argp_failure@@Base+0x1c4>
   16060:	ldr	r0, [pc, #3976]	; 16ff0 <argp_failure@@Base+0x111c>
   16064:	bl	111bc <getenv@plt>
   16068:	mov	ip, r5
   1606c:	sub	lr, fp, #76	; 0x4c
   16070:	mov	r4, r0
   16074:	ldm	ip!, {r0, r1, r2, r3}
   16078:	cmp	r4, #0
   1607c:	movne	r5, #1
   16080:	stmia	lr!, {r0, r1, r2, r3}
   16084:	ldm	ip!, {r0, r1, r2, r3}
   16088:	stmia	lr!, {r0, r1, r2, r3}
   1608c:	ldm	ip, {r0, r1}
   16090:	stm	lr, {r0, r1}
   16094:	bne	16314 <argp_failure@@Base+0x440>
   16098:	ldr	r5, [pc, #3916]	; 16fec <argp_failure@@Base+0x1118>
   1609c:	mov	r3, #0
   160a0:	mov	r1, r3
   160a4:	ldr	r2, [r5, #32]
   160a8:	ldr	r0, [fp, #-112]	; 0xffffff90
   160ac:	bl	17cdc <argp_error@@Base+0xbc4>
   160b0:	subs	r4, r0, #0
   160b4:	bne	163a8 <argp_failure@@Base+0x4d4>
   160b8:	ldr	r0, [fp, #-112]	; 0xffffff90
   160bc:	bl	1118c <funlockfile@plt>
   160c0:	sub	sp, fp, #32
   160c4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   160c8:	mov	r3, r1
   160cc:	mov	r1, r3
   160d0:	str	r3, [fp, #-100]	; 0xffffff9c
   160d4:	ldrb	r0, [r1], #1
   160d8:	lsl	r2, r0, #1
   160dc:	ldrh	r2, [r6, r2]
   160e0:	tst	r2, #8192	; 0x2000
   160e4:	bne	160c8 <argp_failure@@Base+0x1f4>
   160e8:	ands	r2, r2, #1024	; 0x400
   160ec:	movne	r2, r3
   160f0:	bne	1616c <argp_failure@@Base+0x298>
   160f4:	cmp	r0, #0
   160f8:	beq	16364 <argp_failure@@Base+0x490>
   160fc:	str	r3, [sp]
   16100:	mov	r1, r2
   16104:	ldr	r3, [pc, #3816]	; 16ff4 <argp_failure@@Base+0x1120>
   16108:	ldr	r0, [fp, #-96]	; 0xffffffa0
   1610c:	bl	15ed4 <argp_failure@@Base>
   16110:	ldr	ip, [fp, #-44]	; 0xffffffd4
   16114:	ldr	r3, [pc, #3804]	; 16ff8 <argp_failure@@Base+0x1124>
   16118:	mov	r0, #9
   1611c:	ldrb	r2, [r3, #14]
   16120:	cmp	r2, #0
   16124:	bne	1636c <argp_failure@@Base+0x498>
   16128:	ldrb	r1, [r3, #15]
   1612c:	cmp	r1, #32
   16130:	beq	1636c <argp_failure@@Base+0x498>
   16134:	sub	lr, fp, #36	; 0x24
   16138:	add	r1, lr, r1
   1613c:	ldr	r1, [r1, #-40]	; 0xffffffd8
   16140:	cmp	r1, ip
   16144:	blt	1636c <argp_failure@@Base+0x498>
   16148:	str	r3, [sp, #4]
   1614c:	ldr	r3, [pc, #3752]	; 16ffc <argp_failure@@Base+0x1128>
   16150:	mov	r1, r2
   16154:	str	r3, [sp]
   16158:	ldr	r0, [fp, #-96]	; 0xffffffa0
   1615c:	ldr	r3, [pc, #3740]	; 17000 <argp_failure@@Base+0x112c>
   16160:	bl	15ed4 <argp_failure@@Base>
   16164:	b	16098 <argp_failure@@Base+0x1c4>
   16168:	mov	r2, lr
   1616c:	mov	lr, r2
   16170:	ldrb	r1, [lr], #1
   16174:	cmp	r1, #95	; 0x5f
   16178:	cmpne	r1, #45	; 0x2d
   1617c:	lsl	ip, r1, #1
   16180:	moveq	r1, #1
   16184:	ldrh	ip, [r6, ip]
   16188:	movne	r1, #0
   1618c:	lsl	ip, ip, #28
   16190:	orrs	r1, r1, ip, lsr #31
   16194:	bne	16168 <argp_failure@@Base+0x294>
   16198:	sub	r8, r2, r3
   1619c:	mov	r4, r2
   161a0:	ldrb	r1, [r2], #1
   161a4:	lsl	ip, r1, #1
   161a8:	ldrh	ip, [r6, ip]
   161ac:	tst	ip, #8192	; 0x2000
   161b0:	bne	1619c <argp_failure@@Base+0x2c8>
   161b4:	cmp	r1, #44	; 0x2c
   161b8:	cmpne	r1, #0
   161bc:	beq	16f2c <argp_failure@@Base+0x1058>
   161c0:	cmp	r1, #61	; 0x3d
   161c4:	bne	161e4 <argp_failure@@Base+0x310>
   161c8:	mov	r4, r2
   161cc:	add	r2, r2, #1
   161d0:	ldrb	r3, [r4]
   161d4:	lsl	r3, r3, #1
   161d8:	ldrh	r3, [r6, r3]
   161dc:	tst	r3, #8192	; 0x2000
   161e0:	bne	161c8 <argp_failure@@Base+0x2f4>
   161e4:	ldrb	r3, [r4]
   161e8:	lsl	r3, r3, #1
   161ec:	ldrh	r3, [r6, r3]
   161f0:	tst	r3, #2048	; 0x800
   161f4:	moveq	sl, r9
   161f8:	moveq	r7, r9
   161fc:	beq	16278 <argp_failure@@Base+0x3a4>
   16200:	mov	r0, r4
   16204:	bl	112f4 <atoi@plt>
   16208:	mov	r3, r4
   1620c:	mov	r7, r0
   16210:	ldrb	r2, [r3]
   16214:	add	r1, r3, #1
   16218:	lsl	r2, r2, #1
   1621c:	ldrh	r2, [r6, r2]
   16220:	tst	r2, #2048	; 0x800
   16224:	bne	16330 <argp_failure@@Base+0x45c>
   16228:	mov	r4, r3
   1622c:	add	r3, r3, #1
   16230:	ldrb	r2, [r4]
   16234:	lsl	r2, r2, #1
   16238:	ldrh	r2, [r6, r2]
   1623c:	tst	r2, #8192	; 0x2000
   16240:	bne	16228 <argp_failure@@Base+0x354>
   16244:	mov	sl, r9
   16248:	b	16278 <argp_failure@@Base+0x3a4>
   1624c:	ldrb	r2, [r3, #1]
   16250:	cmp	r2, #111	; 0x6f
   16254:	bne	16f34 <argp_failure@@Base+0x1060>
   16258:	ldrb	r2, [r3, #2]
   1625c:	cmp	r2, #45	; 0x2d
   16260:	bne	16f34 <argp_failure@@Base+0x1060>
   16264:	sub	r8, r8, #3
   16268:	mov	r7, r9
   1626c:	mov	sl, r5
   16270:	add	r3, r3, #3
   16274:	str	r3, [fp, #-100]	; 0xffffff9c
   16278:	ldr	r6, [pc, #3448]	; 16ff8 <argp_failure@@Base+0x1124>
   1627c:	mov	r3, #9
   16280:	str	r3, [fp, #-116]	; 0xffffff8c
   16284:	mov	r0, r6
   16288:	bl	11234 <strlen@plt>
   1628c:	cmp	r0, r8
   16290:	bne	1634c <argp_failure@@Base+0x478>
   16294:	mov	r2, r8
   16298:	mov	r1, r6
   1629c:	ldr	r0, [fp, #-100]	; 0xffffff9c
   162a0:	bl	11354 <strncmp@plt>
   162a4:	cmp	r0, #0
   162a8:	bne	1634c <argp_failure@@Base+0x478>
   162ac:	cmp	sl, #0
   162b0:	beq	16338 <argp_failure@@Base+0x464>
   162b4:	ldrb	r2, [r6, #14]
   162b8:	cmp	r2, #0
   162bc:	bne	16338 <argp_failure@@Base+0x464>
   162c0:	ldr	r3, [fp, #-100]	; 0xffffff9c
   162c4:	str	r8, [sp]
   162c8:	str	r3, [sp, #4]
   162cc:	mov	r1, r2
   162d0:	ldr	r3, [pc, #3372]	; 17004 <argp_failure@@Base+0x1130>
   162d4:	ldr	r0, [fp, #-96]	; 0xffffffa0
   162d8:	bl	15ed4 <argp_failure@@Base>
   162dc:	ldr	r3, [pc, #3364]	; 17008 <argp_failure@@Base+0x1134>
   162e0:	cmp	r6, r3
   162e4:	bne	16308 <argp_failure@@Base+0x434>
   162e8:	ldr	r3, [fp, #-100]	; 0xffffff9c
   162ec:	mov	r2, #0
   162f0:	str	r3, [sp, #4]
   162f4:	str	r8, [sp]
   162f8:	ldr	r3, [pc, #3340]	; 1700c <argp_failure@@Base+0x1138>
   162fc:	mov	r1, r2
   16300:	ldr	r0, [fp, #-96]	; 0xffffffa0
   16304:	bl	15ed4 <argp_failure@@Base>
   16308:	ldrb	r3, [r4]
   1630c:	cmp	r3, #44	; 0x2c
   16310:	addeq	r4, r4, #1
   16314:	ldrb	r3, [r4]
   16318:	cmp	r3, #0
   1631c:	beq	16110 <argp_failure@@Base+0x23c>
   16320:	bl	1121c <__ctype_b_loc@plt>
   16324:	mov	r3, r4
   16328:	ldr	r6, [r0]
   1632c:	b	160cc <argp_failure@@Base+0x1f8>
   16330:	mov	r3, r1
   16334:	b	16210 <argp_failure@@Base+0x33c>
   16338:	ldrb	r3, [r6, #15]
   1633c:	sub	r2, fp, #36	; 0x24
   16340:	add	r3, r2, r3
   16344:	str	r7, [r3, #-40]	; 0xffffffd8
   16348:	b	162dc <argp_failure@@Base+0x408>
   1634c:	ldr	r3, [fp, #-116]	; 0xffffff8c
   16350:	add	r6, r6, #16
   16354:	subs	r3, r3, #1
   16358:	str	r3, [fp, #-116]	; 0xffffff8c
   1635c:	bne	16284 <argp_failure@@Base+0x3b0>
   16360:	b	162dc <argp_failure@@Base+0x408>
   16364:	mov	r4, r3
   16368:	b	16314 <argp_failure@@Base+0x440>
   1636c:	subs	r0, r0, #1
   16370:	add	r3, r3, #16
   16374:	bne	1611c <argp_failure@@Base+0x248>
   16378:	sub	lr, fp, #76	; 0x4c
   1637c:	ldr	r4, [pc, #3176]	; 16fec <argp_failure@@Base+0x1118>
   16380:	ldm	lr!, {r0, r1, r2, r3}
   16384:	mov	ip, r4
   16388:	stmia	ip!, {r0, r1, r2, r3}
   1638c:	ldm	lr!, {r0, r1, r2, r3}
   16390:	stmia	ip!, {r0, r1, r2, r3}
   16394:	mov	r3, #1
   16398:	ldm	lr, {r0, r1}
   1639c:	stm	ip, {r0, r1}
   163a0:	str	r3, [r4, #36]	; 0x24
   163a4:	b	16098 <argp_failure@@Base+0x1c4>
   163a8:	ldr	r3, [fp, #-104]	; 0xffffff98
   163ac:	ands	r3, r3, #11
   163b0:	moveq	sl, r3
   163b4:	beq	16414 <argp_failure@@Base+0x540>
   163b8:	mov	r1, #0
   163bc:	ldr	r0, [fp, #-108]	; 0xffffff94
   163c0:	bl	155a0 <_obstack_memory_used@@Base+0x1aa0>
   163c4:	ldr	r1, [pc, #3140]	; 17010 <argp_failure@@Base+0x113c>
   163c8:	mov	sl, r0
   163cc:	bl	1552c <_obstack_memory_used@@Base+0x1a2c>
   163d0:	ldr	r1, [pc, #3132]	; 17014 <argp_failure@@Base+0x1140>
   163d4:	mov	r0, sl
   163d8:	bl	1552c <_obstack_memory_used@@Base+0x1a2c>
   163dc:	ldr	r1, [sl, #4]
   163e0:	cmp	r1, #0
   163e4:	beq	16414 <argp_failure@@Base+0x540>
   163e8:	ldr	r0, [sl]
   163ec:	mov	r3, #0
   163f0:	mov	r2, r0
   163f4:	str	r3, [r2, #24]
   163f8:	add	r3, r3, #1
   163fc:	cmp	r1, r3
   16400:	add	r2, r2, #28
   16404:	bne	163f4 <argp_failure@@Base+0x520>
   16408:	ldr	r3, [pc, #3080]	; 17018 <argp_failure@@Base+0x1144>
   1640c:	mov	r2, #28
   16410:	bl	11300 <qsort@plt>
   16414:	ldr	r3, [fp, #-104]	; 0xffffff98
   16418:	ands	r3, r3, #3
   1641c:	moveq	r5, r3
   16420:	beq	165c0 <argp_failure@@Base+0x6ec>
   16424:	ldr	r0, [fp, #-108]	; 0xffffff94
   16428:	bl	14778 <_obstack_memory_used@@Base+0xc78>
   1642c:	mov	r1, #0
   16430:	ldr	r6, [pc, #3044]	; 1701c <argp_failure@@Base+0x1148>
   16434:	mov	r9, #1
   16438:	add	r3, r0, #14
   1643c:	bic	r3, r3, #7
   16440:	sub	sp, sp, r3
   16444:	add	r7, sp, #8
   16448:	mov	r2, r0
   1644c:	mov	r0, r7
   16450:	bl	1127c <memset@plt>
   16454:	ldr	r2, [r4, #24]
   16458:	ldr	r3, [r4, #28]
   1645c:	ldr	r8, [r5, #28]
   16460:	sub	r3, r3, r2
   16464:	ldr	r2, [r4, #16]
   16468:	cmp	r3, r2
   1646c:	bls	16478 <argp_failure@@Base+0x5a4>
   16470:	mov	r0, r4
   16474:	bl	17d54 <argp_error@@Base+0xc3c>
   16478:	ldr	r3, [r4, #12]
   1647c:	cmp	r9, #0
   16480:	str	r8, [r4, #12]
   16484:	ldrne	r2, [pc, #2964]	; 17020 <argp_failure@@Base+0x114c>
   16488:	ldreq	r2, [pc, #2964]	; 17024 <argp_failure@@Base+0x1150>
   1648c:	str	r3, [fp, #-100]	; 0xffffff9c
   16490:	ldr	r1, [pc, #2960]	; 17028 <argp_failure@@Base+0x1154>
   16494:	ldr	r3, [fp, #4]
   16498:	mov	r0, r4
   1649c:	str	r7, [fp, #-76]	; 0xffffffb4
   164a0:	bl	18288 <argp_error@@Base+0x1170>
   164a4:	ldr	r2, [r4, #24]
   164a8:	ldr	r3, [r4, #28]
   164ac:	ldr	r8, [r5, #28]
   164b0:	sub	r3, r3, r2
   164b4:	ldr	r2, [r4, #16]
   164b8:	cmp	r3, r2
   164bc:	bls	164c8 <argp_failure@@Base+0x5f4>
   164c0:	mov	r0, r4
   164c4:	bl	17d54 <argp_error@@Base+0xc3c>
   164c8:	ldr	r3, [fp, #-104]	; 0xffffff98
   164cc:	ldr	r9, [r4, #4]
   164d0:	tst	r3, #2
   164d4:	str	r8, [r4, #4]
   164d8:	beq	1683c <argp_failure@@Base+0x968>
   164dc:	ldr	r3, [sl, #4]
   164e0:	cmp	r3, #0
   164e4:	beq	16524 <argp_failure@@Base+0x650>
   164e8:	ldr	r3, [r4, #28]
   164ec:	ldr	r2, [r4, #32]
   164f0:	add	r3, r3, #12
   164f4:	cmp	r2, r3
   164f8:	bcc	16824 <argp_failure@@Base+0x950>
   164fc:	ldr	r2, [r4, #28]
   16500:	ldr	r3, [r6]
   16504:	str	r3, [r2]
   16508:	ldr	r3, [r6, #4]
   1650c:	str	r3, [r2, #4]
   16510:	ldr	r3, [r6, #8]
   16514:	str	r3, [r2, #8]
   16518:	ldr	r3, [r4, #28]
   1651c:	add	r3, r3, #12
   16520:	str	r3, [r4, #28]
   16524:	mov	r3, #1
   16528:	sub	r2, fp, #76	; 0x4c
   1652c:	str	r4, [sp]
   16530:	ldr	r1, [fp, #-96]	; 0xffffffa0
   16534:	ldr	r0, [fp, #-108]	; 0xffffff94
   16538:	bl	1518c <_obstack_memory_used@@Base+0x168c>
   1653c:	ldr	r2, [r4, #24]
   16540:	ldr	r3, [r4, #28]
   16544:	sub	r3, r3, r2
   16548:	ldr	r2, [r4, #16]
   1654c:	cmp	r3, r2
   16550:	mov	r8, r0
   16554:	bls	16560 <argp_failure@@Base+0x68c>
   16558:	mov	r0, r4
   1655c:	bl	17d54 <argp_error@@Base+0xc3c>
   16560:	ldr	r3, [fp, #-100]	; 0xffffff9c
   16564:	ldr	r2, [r4, #24]
   16568:	str	r3, [r4, #12]
   1656c:	ldr	r3, [r4, #28]
   16570:	sub	r3, r3, r2
   16574:	ldr	r2, [r4, #16]
   16578:	cmp	r3, r2
   1657c:	bls	16588 <argp_failure@@Base+0x6b4>
   16580:	mov	r0, r4
   16584:	bl	17d54 <argp_error@@Base+0xc3c>
   16588:	ldr	r2, [r4, #28]
   1658c:	ldr	r3, [r4, #32]
   16590:	str	r9, [r4, #4]
   16594:	cmp	r2, r3
   16598:	bcs	16858 <argp_failure@@Base+0x984>
   1659c:	ldr	r3, [r4, #28]
   165a0:	add	r2, r3, #1
   165a4:	str	r2, [r4, #28]
   165a8:	mov	r2, #10
   165ac:	strb	r2, [r3]
   165b0:	mov	r9, #0
   165b4:	cmp	r8, r9
   165b8:	bne	16454 <argp_failure@@Base+0x580>
   165bc:	mov	r5, #1
   165c0:	ldr	r3, [fp, #-104]	; 0xffffff98
   165c4:	tst	r3, #16
   165c8:	beq	165f0 <argp_failure@@Base+0x71c>
   165cc:	mov	r3, #1
   165d0:	str	r3, [sp]
   165d4:	mov	r3, #0
   165d8:	str	r4, [sp, #4]
   165dc:	mov	r2, r3
   165e0:	ldr	r1, [fp, #-96]	; 0xffffffa0
   165e4:	ldr	r0, [fp, #-108]	; 0xffffff94
   165e8:	bl	14bf4 <_obstack_memory_used@@Base+0x10f4>
   165ec:	orr	r5, r5, r0
   165f0:	ldr	r3, [fp, #-104]	; 0xffffff98
   165f4:	tst	r3, #4
   165f8:	beq	16614 <argp_failure@@Base+0x740>
   165fc:	ldr	r3, [fp, #4]
   16600:	ldr	r1, [pc, #2596]	; 1702c <argp_failure@@Base+0x1158>
   16604:	mov	r2, r3
   16608:	mov	r0, r4
   1660c:	bl	18288 <argp_error@@Base+0x1170>
   16610:	mov	r5, #1
   16614:	ldr	r3, [fp, #-104]	; 0xffffff98
   16618:	tst	r3, #8
   1661c:	beq	16774 <argp_failure@@Base+0x8a0>
   16620:	ldr	r3, [sl, #4]
   16624:	cmp	r3, #0
   16628:	beq	16774 <argp_failure@@Base+0x8a0>
   1662c:	cmp	r5, #0
   16630:	beq	16658 <argp_failure@@Base+0x784>
   16634:	ldr	r2, [r4, #28]
   16638:	ldr	r3, [r4, #32]
   1663c:	cmp	r2, r3
   16640:	bcs	16870 <argp_failure@@Base+0x99c>
   16644:	ldr	r3, [r4, #28]
   16648:	add	r2, r3, #1
   1664c:	str	r2, [r4, #28]
   16650:	mov	r2, #10
   16654:	strb	r2, [r3]
   16658:	mov	r3, #0
   1665c:	str	r3, [fp, #-88]	; 0xffffffa8
   16660:	str	r3, [fp, #-84]	; 0xffffffac
   16664:	str	r3, [fp, #-80]	; 0xffffffb0
   16668:	ldr	r3, [sl]
   1666c:	str	r3, [fp, #-100]	; 0xffffff9c
   16670:	ldr	r3, [sl, #4]
   16674:	str	r3, [fp, #-116]	; 0xffffff8c
   16678:	ldr	r3, [fp, #-116]	; 0xffffff8c
   1667c:	cmp	r3, #0
   16680:	bne	16888 <argp_failure@@Base+0x9b4>
   16684:	ldr	r3, [fp, #-80]	; 0xffffffb0
   16688:	cmp	r3, #0
   1668c:	beq	16770 <argp_failure@@Base+0x89c>
   16690:	ldr	r3, [pc, #2388]	; 16fec <argp_failure@@Base+0x1118>
   16694:	ldr	r3, [r3, #4]
   16698:	cmp	r3, #0
   1669c:	beq	16770 <argp_failure@@Base+0x89c>
   166a0:	ldr	r3, [fp, #-96]	; 0xffffffa0
   166a4:	ldr	r1, [pc, #2436]	; 17030 <argp_failure@@Base+0x115c>
   166a8:	cmp	r3, #0
   166ac:	ldr	r0, [pc, #2432]	; 17034 <argp_failure@@Base+0x1160>
   166b0:	ldrne	r2, [r3]
   166b4:	ldreq	r2, [fp, #-96]	; 0xffffffa0
   166b8:	ldr	r3, [fp, #-96]	; 0xffffffa0
   166bc:	bl	14858 <_obstack_memory_used@@Base+0xd58>
   166c0:	subs	r5, r0, #0
   166c4:	beq	16770 <argp_failure@@Base+0x89c>
   166c8:	ldrb	r3, [r5]
   166cc:	cmp	r3, #0
   166d0:	beq	1675c <argp_failure@@Base+0x888>
   166d4:	ldr	r2, [r4, #28]
   166d8:	ldr	r3, [r4, #32]
   166dc:	cmp	r2, r3
   166e0:	bcs	16ecc <argp_failure@@Base+0xff8>
   166e4:	ldr	r3, [r4, #28]
   166e8:	add	r2, r3, #1
   166ec:	str	r2, [r4, #28]
   166f0:	mov	r2, #10
   166f4:	strb	r2, [r3]
   166f8:	mov	r0, r5
   166fc:	bl	11234 <strlen@plt>
   16700:	subs	r6, r0, #0
   16704:	beq	16738 <argp_failure@@Base+0x864>
   16708:	ldr	r3, [r4, #28]
   1670c:	ldr	r2, [r4, #32]
   16710:	add	r3, r3, r6
   16714:	cmp	r2, r3
   16718:	bcc	16ee4 <argp_failure@@Base+0x1010>
   1671c:	mov	r2, r6
   16720:	mov	r1, r5
   16724:	ldr	r0, [r4, #28]
   16728:	bl	11144 <memcpy@plt>
   1672c:	ldr	r3, [r4, #28]
   16730:	add	r6, r3, r6
   16734:	str	r6, [r4, #28]
   16738:	ldr	r2, [r4, #28]
   1673c:	ldr	r3, [r4, #32]
   16740:	cmp	r2, r3
   16744:	bcs	16efc <argp_failure@@Base+0x1028>
   16748:	ldr	r3, [r4, #28]
   1674c:	add	r2, r3, #1
   16750:	str	r2, [r4, #28]
   16754:	mov	r2, #10
   16758:	strb	r2, [r3]
   1675c:	ldr	r3, [pc, #2256]	; 17034 <argp_failure@@Base+0x1160>
   16760:	cmp	r5, r3
   16764:	beq	16770 <argp_failure@@Base+0x89c>
   16768:	mov	r0, r5
   1676c:	bl	13710 <argp_parse@@Base+0xa9c>
   16770:	mov	r5, #1
   16774:	ldr	r3, [fp, #-104]	; 0xffffff98
   16778:	tst	r3, #32
   1677c:	beq	167a4 <argp_failure@@Base+0x8d0>
   16780:	mov	r3, #0
   16784:	str	r3, [sp]
   16788:	str	r4, [sp, #4]
   1678c:	mov	r3, r5
   16790:	mov	r2, #1
   16794:	ldr	r1, [fp, #-96]	; 0xffffffa0
   16798:	ldr	r0, [fp, #-108]	; 0xffffff94
   1679c:	bl	14bf4 <_obstack_memory_used@@Base+0x10f4>
   167a0:	orr	r5, r5, r0
   167a4:	ldr	r3, [fp, #-104]	; 0xffffff98
   167a8:	tst	r3, #64	; 0x40
   167ac:	beq	16800 <argp_failure@@Base+0x92c>
   167b0:	ldr	r3, [pc, #2176]	; 17038 <argp_failure@@Base+0x1164>
   167b4:	mov	r6, r3
   167b8:	ldr	r2, [r3]
   167bc:	cmp	r2, #0
   167c0:	beq	16800 <argp_failure@@Base+0x92c>
   167c4:	cmp	r5, #0
   167c8:	beq	167f0 <argp_failure@@Base+0x91c>
   167cc:	ldr	r2, [r4, #28]
   167d0:	ldr	r3, [r4, #32]
   167d4:	cmp	r2, r3
   167d8:	bcs	16f14 <argp_failure@@Base+0x1040>
   167dc:	ldr	r3, [r4, #28]
   167e0:	add	r2, r3, #1
   167e4:	str	r2, [r4, #28]
   167e8:	mov	r2, #10
   167ec:	strb	r2, [r3]
   167f0:	ldr	r2, [r6]
   167f4:	ldr	r1, [pc, #2112]	; 1703c <argp_failure@@Base+0x1168>
   167f8:	mov	r0, r4
   167fc:	bl	18288 <argp_error@@Base+0x1170>
   16800:	ldr	r0, [fp, #-112]	; 0xffffff90
   16804:	bl	1118c <funlockfile@plt>
   16808:	cmp	sl, #0
   1680c:	beq	16818 <argp_failure@@Base+0x944>
   16810:	mov	r0, sl
   16814:	bl	1472c <_obstack_memory_used@@Base+0xc2c>
   16818:	mov	r0, r4
   1681c:	bl	18164 <argp_error@@Base+0x104c>
   16820:	b	160c0 <argp_failure@@Base+0x1ec>
   16824:	mov	r1, #12
   16828:	mov	r0, r4
   1682c:	bl	181a4 <argp_error@@Base+0x108c>
   16830:	cmp	r0, #0
   16834:	bne	164fc <argp_failure@@Base+0x628>
   16838:	b	16524 <argp_failure@@Base+0x650>
   1683c:	mov	r1, r4
   16840:	mov	r0, sl
   16844:	bl	153a0 <_obstack_memory_used@@Base+0x18a0>
   16848:	ldr	r3, [fp, #-104]	; 0xffffff98
   1684c:	orr	r3, r3, #2
   16850:	str	r3, [fp, #-104]	; 0xffffff98
   16854:	b	16524 <argp_failure@@Base+0x650>
   16858:	mov	r1, #1
   1685c:	mov	r0, r4
   16860:	bl	181a4 <argp_error@@Base+0x108c>
   16864:	cmp	r0, #0
   16868:	bne	1659c <argp_failure@@Base+0x6c8>
   1686c:	b	165b0 <argp_failure@@Base+0x6dc>
   16870:	mov	r1, #1
   16874:	mov	r0, r4
   16878:	bl	181a4 <argp_error@@Base+0x108c>
   1687c:	cmp	r0, #0
   16880:	bne	16644 <argp_failure@@Base+0x770>
   16884:	b	16658 <argp_failure@@Base+0x784>
   16888:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1688c:	ldr	r2, [r4, #24]
   16890:	ldr	r5, [r3]
   16894:	ldr	r9, [r3, #8]
   16898:	ldr	r3, [r4, #28]
   1689c:	sub	r3, r3, r2
   168a0:	ldr	r2, [r4, #16]
   168a4:	cmp	r3, r2
   168a8:	bls	168b4 <argp_failure@@Base+0x9e0>
   168ac:	mov	r0, r4
   168b0:	bl	17d54 <argp_error@@Base+0xc3c>
   168b4:	ldr	r2, [r4, #12]
   168b8:	ldr	r3, [r4, #4]
   168bc:	str	r2, [fp, #-128]	; 0xffffff80
   168c0:	ldr	r2, [fp, #-100]	; 0xffffff9c
   168c4:	str	r3, [fp, #-124]	; 0xffffff84
   168c8:	mov	r3, #0
   168cc:	str	r3, [r4, #4]
   168d0:	str	r2, [fp, #-76]	; 0xffffffb4
   168d4:	sub	r2, fp, #88	; 0x58
   168d8:	str	r2, [fp, #-68]	; 0xffffffbc
   168dc:	mov	r2, #1
   168e0:	str	r2, [fp, #-64]	; 0xffffffc0
   168e4:	ldr	r2, [fp, #-96]	; 0xffffffa0
   168e8:	str	r4, [fp, #-72]	; 0xffffffb8
   168ec:	str	r2, [fp, #-60]	; 0xffffffc4
   168f0:	ldr	r2, [r5, #12]
   168f4:	ands	r2, r2, #8
   168f8:	str	r2, [fp, #-120]	; 0xffffff88
   168fc:	ldreq	r3, [fp, #-100]	; 0xffffff9c
   16900:	ldreq	r2, [r3, #4]
   16904:	addeq	r3, r5, #24
   16908:	beq	16934 <argp_failure@@Base+0xa60>
   1690c:	str	r3, [fp, #-120]	; 0xffffff88
   16910:	b	1693c <argp_failure@@Base+0xa68>
   16914:	ldr	r1, [r3, #-24]	; 0xffffffe8
   16918:	cmp	r1, #0
   1691c:	beq	1692c <argp_failure@@Base+0xa58>
   16920:	ldr	r1, [r3, #-12]
   16924:	tst	r1, #2
   16928:	beq	16ac4 <argp_failure@@Base+0xbf0>
   1692c:	sub	r2, r2, #1
   16930:	add	r3, r3, #24
   16934:	cmp	r2, #0
   16938:	bne	16914 <argp_failure@@Base+0xa40>
   1693c:	ldr	r3, [pc, #1704]	; 16fec <argp_failure@@Base+0x1118>
   16940:	ldr	r2, [r4, #24]
   16944:	ldr	r6, [r3, #8]
   16948:	ldr	r3, [r4, #28]
   1694c:	sub	r3, r3, r2
   16950:	ldr	r2, [r4, #16]
   16954:	cmp	r3, r2
   16958:	bls	16964 <argp_failure@@Base+0xa90>
   1695c:	mov	r0, r4
   16960:	bl	17d54 <argp_error@@Base+0xc3c>
   16964:	ldr	r3, [fp, #-100]	; 0xffffff9c
   16968:	str	r6, [r4, #12]
   1696c:	ldr	r7, [pc, #1656]	; 16fec <argp_failure@@Base+0x1118>
   16970:	ldr	r8, [r3, #4]
   16974:	mov	r6, r5
   16978:	cmp	r8, #0
   1697c:	bne	16acc <argp_failure@@Base+0xbf8>
   16980:	ldr	r3, [r5, #12]
   16984:	ldr	r1, [pc, #1632]	; 16fec <argp_failure@@Base+0x1118>
   16988:	tst	r3, #8
   1698c:	ldr	r2, [r4, #24]
   16990:	ldr	r3, [r4, #28]
   16994:	beq	16bf8 <argp_failure@@Base+0xd24>
   16998:	sub	r3, r3, r2
   1699c:	ldr	r2, [r4, #16]
   169a0:	ldr	r6, [r1, #16]
   169a4:	cmp	r3, r2
   169a8:	bls	169b4 <argp_failure@@Base+0xae0>
   169ac:	mov	r0, r4
   169b0:	bl	17d54 <argp_error@@Base+0xc3c>
   169b4:	ldr	r3, [fp, #-100]	; 0xffffff9c
   169b8:	str	r6, [r4, #12]
   169bc:	add	r6, r5, #24
   169c0:	ldr	r7, [r3, #4]
   169c4:	cmp	r7, #0
   169c8:	bne	16b68 <argp_failure@@Base+0xc94>
   169cc:	ldr	r2, [r4, #24]
   169d0:	ldr	r3, [r4, #28]
   169d4:	sub	r3, r3, r2
   169d8:	ldr	r2, [r4, #16]
   169dc:	cmp	r3, r2
   169e0:	bls	169ec <argp_failure@@Base+0xb18>
   169e4:	mov	r0, r4
   169e8:	bl	17d54 <argp_error@@Base+0xc3c>
   169ec:	mov	r3, #0
   169f0:	str	r3, [r4, #4]
   169f4:	ldr	r3, [fp, #-64]	; 0xffffffc0
   169f8:	cmp	r3, #0
   169fc:	beq	16c98 <argp_failure@@Base+0xdc4>
   16a00:	ldr	r3, [r5, #12]
   16a04:	tst	r3, #8
   16a08:	bne	16a34 <argp_failure@@Base+0xb60>
   16a0c:	ldr	r6, [r5, #4]
   16a10:	sub	r3, r6, #1
   16a14:	cmp	r3, #254	; 0xfe
   16a18:	bhi	16a34 <argp_failure@@Base+0xb60>
   16a1c:	bl	1121c <__ctype_b_loc@plt>
   16a20:	lsl	r6, r6, #1
   16a24:	ldr	r3, [r0]
   16a28:	ldrh	r3, [r3, r6]
   16a2c:	tst	r3, #16384	; 0x4000
   16a30:	bne	16a5c <argp_failure@@Base+0xb88>
   16a34:	ldr	r3, [r5]
   16a38:	cmp	r3, #0
   16a3c:	bne	16a5c <argp_failure@@Base+0xb88>
   16a40:	ldr	r3, [fp, #-100]	; 0xffffff9c
   16a44:	sub	r2, fp, #76	; 0x4c
   16a48:	ldr	r0, [r5, #16]
   16a4c:	ldr	r1, [r3, #20]
   16a50:	bl	1489c <_obstack_memory_used@@Base+0xd9c>
   16a54:	ldr	r3, [fp, #-100]	; 0xffffff9c
   16a58:	str	r3, [fp, #-88]	; 0xffffffa8
   16a5c:	ldr	r2, [r4, #24]
   16a60:	ldr	r3, [r4, #28]
   16a64:	sub	r3, r3, r2
   16a68:	ldr	r2, [r4, #16]
   16a6c:	cmp	r3, r2
   16a70:	bls	16a7c <argp_failure@@Base+0xba8>
   16a74:	mov	r0, r4
   16a78:	bl	17d54 <argp_error@@Base+0xc3c>
   16a7c:	ldr	r3, [fp, #-124]	; 0xffffff84
   16a80:	ldr	r2, [r4, #24]
   16a84:	str	r3, [r4, #4]
   16a88:	ldr	r3, [r4, #28]
   16a8c:	sub	r3, r3, r2
   16a90:	ldr	r2, [r4, #16]
   16a94:	cmp	r3, r2
   16a98:	bls	16aa4 <argp_failure@@Base+0xbd0>
   16a9c:	mov	r0, r4
   16aa0:	bl	17d54 <argp_error@@Base+0xc3c>
   16aa4:	ldr	r3, [fp, #-128]	; 0xffffff80
   16aa8:	str	r3, [r4, #12]
   16aac:	ldr	r3, [fp, #-100]	; 0xffffff9c
   16ab0:	add	r3, r3, #28
   16ab4:	str	r3, [fp, #-100]	; 0xffffff9c
   16ab8:	ldr	r3, [fp, #-116]	; 0xffffff8c
   16abc:	sub	r3, r3, #1
   16ac0:	b	16674 <argp_failure@@Base+0x7a0>
   16ac4:	mov	r3, #1
   16ac8:	b	1690c <argp_failure@@Base+0xa38>
   16acc:	ldr	r2, [r6, #12]
   16ad0:	tst	r2, #8
   16ad4:	str	r2, [fp, #-136]	; 0xffffff78
   16ad8:	bne	16b10 <argp_failure@@Base+0xc3c>
   16adc:	ldr	r3, [r6, #4]
   16ae0:	sub	r1, r3, #1
   16ae4:	cmp	r1, #254	; 0xfe
   16ae8:	str	r3, [fp, #-132]	; 0xffffff7c
   16aec:	bhi	16b10 <argp_failure@@Base+0xc3c>
   16af0:	bl	1121c <__ctype_b_loc@plt>
   16af4:	ldr	r3, [fp, #-132]	; 0xffffff7c
   16af8:	ldr	r2, [fp, #-136]	; 0xffffff78
   16afc:	lsl	r1, r3, #1
   16b00:	ldr	r0, [r0]
   16b04:	ldrh	r1, [r0, r1]
   16b08:	tst	r1, #16384	; 0x4000
   16b0c:	bne	16f40 <argp_failure@@Base+0x106c>
   16b10:	add	r6, r6, #24
   16b14:	sub	r8, r8, #1
   16b18:	b	16978 <argp_failure@@Base+0xaa4>
   16b1c:	mov	r1, #1
   16b20:	mov	r0, r4
   16b24:	bl	181a4 <argp_error@@Base+0x108c>
   16b28:	cmp	r0, #0
   16b2c:	bne	16f70 <argp_failure@@Base+0x109c>
   16b30:	b	16f84 <argp_failure@@Base+0x10b0>
   16b34:	mov	r1, #1
   16b38:	mov	r0, r4
   16b3c:	str	r2, [fp, #-132]	; 0xffffff7c
   16b40:	bl	181a4 <argp_error@@Base+0x108c>
   16b44:	ldr	r2, [fp, #-132]	; 0xffffff7c
   16b48:	cmp	r0, #0
   16b4c:	bne	16f98 <argp_failure@@Base+0x10c4>
   16b50:	b	16fa8 <argp_failure@@Base+0x10d4>
   16b54:	ldr	r3, [r5, #8]
   16b58:	cmp	r3, #0
   16b5c:	movne	r3, #1
   16b60:	strne	r3, [fp, #-80]	; 0xffffffb0
   16b64:	b	16fe4 <argp_failure@@Base+0x1110>
   16b68:	ldr	r3, [r6, #-24]	; 0xffffffe8
   16b6c:	cmp	r3, #0
   16b70:	beq	16bd4 <argp_failure@@Base+0xd00>
   16b74:	ldr	r3, [r6, #-12]
   16b78:	tst	r3, #2
   16b7c:	bne	16bd4 <argp_failure@@Base+0xd00>
   16b80:	ldr	r3, [pc, #1124]	; 16fec <argp_failure@@Base+0x1118>
   16b84:	sub	r1, fp, #76	; 0x4c
   16b88:	ldr	r0, [r3, #16]
   16b8c:	bl	14a74 <_obstack_memory_used@@Base+0xf74>
   16b90:	ldr	r8, [r6, #-24]	; 0xffffffe8
   16b94:	mov	r0, r8
   16b98:	bl	11234 <strlen@plt>
   16b9c:	subs	r9, r0, #0
   16ba0:	beq	16bd4 <argp_failure@@Base+0xd00>
   16ba4:	ldr	r3, [r4, #28]
   16ba8:	ldr	r2, [r4, #32]
   16bac:	add	r3, r3, r9
   16bb0:	cmp	r2, r3
   16bb4:	bcc	16be0 <argp_failure@@Base+0xd0c>
   16bb8:	mov	r2, r9
   16bbc:	mov	r1, r8
   16bc0:	ldr	r0, [r4, #28]
   16bc4:	bl	11144 <memcpy@plt>
   16bc8:	ldr	r3, [r4, #28]
   16bcc:	add	r9, r3, r9
   16bd0:	str	r9, [r4, #28]
   16bd4:	sub	r7, r7, #1
   16bd8:	add	r6, r6, #24
   16bdc:	b	169c4 <argp_failure@@Base+0xaf0>
   16be0:	mov	r1, r9
   16be4:	mov	r0, r4
   16be8:	bl	181a4 <argp_error@@Base+0x108c>
   16bec:	cmp	r0, #0
   16bf0:	bne	16bb8 <argp_failure@@Base+0xce4>
   16bf4:	b	16bd4 <argp_failure@@Base+0xd00>
   16bf8:	sub	r3, r3, r2
   16bfc:	ldr	r2, [r4, #16]
   16c00:	ldr	r6, [r1, #12]
   16c04:	cmp	r3, r2
   16c08:	bls	16c14 <argp_failure@@Base+0xd40>
   16c0c:	mov	r0, r4
   16c10:	bl	17d54 <argp_error@@Base+0xc3c>
   16c14:	ldr	r3, [fp, #-100]	; 0xffffff9c
   16c18:	str	r6, [r4, #12]
   16c1c:	ldr	r7, [pc, #968]	; 16fec <argp_failure@@Base+0x1118>
   16c20:	ldr	r6, [r3, #4]
   16c24:	ldr	r8, [pc, #1044]	; 17040 <argp_failure@@Base+0x116c>
   16c28:	add	r9, r5, #24
   16c2c:	cmp	r6, #0
   16c30:	beq	169cc <argp_failure@@Base+0xaf8>
   16c34:	ldr	r3, [r9, #-24]	; 0xffffffe8
   16c38:	cmp	r3, #0
   16c3c:	beq	16c8c <argp_failure@@Base+0xdb8>
   16c40:	ldr	r3, [r9, #-12]
   16c44:	tst	r3, #2
   16c48:	bne	16c8c <argp_failure@@Base+0xdb8>
   16c4c:	sub	r1, fp, #76	; 0x4c
   16c50:	ldr	r0, [r7, #12]
   16c54:	bl	14a74 <_obstack_memory_used@@Base+0xf74>
   16c58:	ldr	r2, [r9, #-24]	; 0xffffffe8
   16c5c:	mov	r1, r8
   16c60:	mov	r0, r4
   16c64:	bl	18288 <argp_error@@Base+0x1170>
   16c68:	ldr	r2, [r5, #8]
   16c6c:	cmp	r2, #0
   16c70:	beq	16c8c <argp_failure@@Base+0xdb8>
   16c74:	ldr	r3, [r5, #12]
   16c78:	mov	r0, r4
   16c7c:	tst	r3, #1
   16c80:	ldrne	r1, [pc, #956]	; 17044 <argp_failure@@Base+0x1170>
   16c84:	ldreq	r1, [pc, #956]	; 17048 <argp_failure@@Base+0x1174>
   16c88:	bl	18288 <argp_error@@Base+0x1170>
   16c8c:	sub	r6, r6, #1
   16c90:	add	r9, r9, #24
   16c94:	b	16c2c <argp_failure@@Base+0xd58>
   16c98:	ldr	r2, [fp, #-100]	; 0xffffff9c
   16c9c:	ldr	r6, [r5, #16]
   16ca0:	ldr	r1, [r5, #4]
   16ca4:	ldr	r3, [fp, #-96]	; 0xffffffa0
   16ca8:	ldr	r2, [r2, #20]
   16cac:	mov	r0, r6
   16cb0:	bl	14858 <_obstack_memory_used@@Base+0xd58>
   16cb4:	subs	r5, r0, #0
   16cb8:	beq	16dcc <argp_failure@@Base+0xef8>
   16cbc:	ldrb	r3, [r5]
   16cc0:	cmp	r3, #0
   16cc4:	beq	16dbc <argp_failure@@Base+0xee8>
   16cc8:	ldr	r2, [r4, #24]
   16ccc:	ldr	r3, [r4, #28]
   16cd0:	sub	r3, r3, r2
   16cd4:	ldr	r2, [r4, #16]
   16cd8:	cmp	r3, r2
   16cdc:	bls	16ce8 <argp_failure@@Base+0xe14>
   16ce0:	mov	r0, r4
   16ce4:	bl	17d54 <argp_error@@Base+0xc3c>
   16ce8:	ldr	r2, [r4, #24]
   16cec:	ldr	r3, [r4, #28]
   16cf0:	ldr	r7, [r4, #20]
   16cf4:	sub	r3, r3, r2
   16cf8:	ldr	r8, [pc, #748]	; 16fec <argp_failure@@Base+0x1118>
   16cfc:	ldr	r2, [r4, #16]
   16d00:	bic	r7, r7, r7, asr #31
   16d04:	cmp	r3, r2
   16d08:	ldr	r9, [r8, #20]
   16d0c:	bls	16d18 <argp_failure@@Base+0xe44>
   16d10:	mov	r0, r4
   16d14:	bl	17d54 <argp_error@@Base+0xc3c>
   16d18:	ldr	r2, [r4, #24]
   16d1c:	ldr	r3, [r4, #28]
   16d20:	str	r9, [r4, #4]
   16d24:	sub	r3, r3, r2
   16d28:	ldr	r2, [r4, #16]
   16d2c:	ldr	r8, [r8, #20]
   16d30:	cmp	r3, r2
   16d34:	bls	16d40 <argp_failure@@Base+0xe6c>
   16d38:	mov	r0, r4
   16d3c:	bl	17d54 <argp_error@@Base+0xc3c>
   16d40:	ldr	r3, [pc, #676]	; 16fec <argp_failure@@Base+0x1118>
   16d44:	str	r8, [r4, #12]
   16d48:	ldr	r1, [r3, #20]
   16d4c:	add	r3, r1, #3
   16d50:	cmp	r7, r3
   16d54:	bls	16e34 <argp_failure@@Base+0xf60>
   16d58:	ldr	r2, [r4, #28]
   16d5c:	ldr	r3, [r4, #32]
   16d60:	cmp	r2, r3
   16d64:	bcs	16e1c <argp_failure@@Base+0xf48>
   16d68:	ldr	r3, [r4, #28]
   16d6c:	add	r2, r3, #1
   16d70:	str	r2, [r4, #28]
   16d74:	mov	r2, #10
   16d78:	strb	r2, [r3]
   16d7c:	mov	r0, r5
   16d80:	bl	11234 <strlen@plt>
   16d84:	subs	r7, r0, #0
   16d88:	beq	16dbc <argp_failure@@Base+0xee8>
   16d8c:	ldr	r3, [r4, #28]
   16d90:	ldr	r2, [r4, #32]
   16d94:	add	r3, r3, r7
   16d98:	cmp	r2, r3
   16d9c:	bcc	16e9c <argp_failure@@Base+0xfc8>
   16da0:	mov	r2, r7
   16da4:	mov	r1, r5
   16da8:	ldr	r0, [r4, #28]
   16dac:	bl	11144 <memcpy@plt>
   16db0:	ldr	r3, [r4, #28]
   16db4:	add	r7, r3, r7
   16db8:	str	r7, [r4, #28]
   16dbc:	cmp	r6, r5
   16dc0:	beq	16dcc <argp_failure@@Base+0xef8>
   16dc4:	mov	r0, r5
   16dc8:	bl	13710 <argp_parse@@Base+0xa9c>
   16dcc:	ldr	r2, [r4, #24]
   16dd0:	ldr	r3, [r4, #28]
   16dd4:	sub	r3, r3, r2
   16dd8:	ldr	r2, [r4, #16]
   16ddc:	cmp	r3, r2
   16de0:	bls	16dec <argp_failure@@Base+0xf18>
   16de4:	mov	r0, r4
   16de8:	bl	17d54 <argp_error@@Base+0xc3c>
   16dec:	mov	r3, #0
   16df0:	str	r3, [r4, #4]
   16df4:	ldr	r2, [r4, #28]
   16df8:	ldr	r3, [r4, #32]
   16dfc:	cmp	r2, r3
   16e00:	bcs	16eb4 <argp_failure@@Base+0xfe0>
   16e04:	ldr	r3, [r4, #28]
   16e08:	add	r2, r3, #1
   16e0c:	str	r2, [r4, #28]
   16e10:	mov	r2, #10
   16e14:	strb	r2, [r3]
   16e18:	b	16a54 <argp_failure@@Base+0xb80>
   16e1c:	mov	r1, #1
   16e20:	mov	r0, r4
   16e24:	bl	181a4 <argp_error@@Base+0x108c>
   16e28:	cmp	r0, #0
   16e2c:	bne	16d68 <argp_failure@@Base+0xe94>
   16e30:	b	16d7c <argp_failure@@Base+0xea8>
   16e34:	cmp	r7, r1
   16e38:	bcc	16e90 <argp_failure@@Base+0xfbc>
   16e3c:	ldr	r3, [r4, #28]
   16e40:	ldr	r2, [r4, #32]
   16e44:	add	r3, r3, #3
   16e48:	cmp	r2, r3
   16e4c:	bcc	16e78 <argp_failure@@Base+0xfa4>
   16e50:	ldr	r2, [pc, #500]	; 1704c <argp_failure@@Base+0x1178>
   16e54:	ldr	r3, [r4, #28]
   16e58:	ldrh	r1, [r2]
   16e5c:	ldrb	r2, [r2, #2]
   16e60:	strh	r1, [r3]
   16e64:	strb	r2, [r3, #2]
   16e68:	ldr	r3, [r4, #28]
   16e6c:	add	r3, r3, #3
   16e70:	str	r3, [r4, #28]
   16e74:	b	16d7c <argp_failure@@Base+0xea8>
   16e78:	mov	r1, #3
   16e7c:	mov	r0, r4
   16e80:	bl	181a4 <argp_error@@Base+0x108c>
   16e84:	cmp	r0, #0
   16e88:	bne	16e50 <argp_failure@@Base+0xf7c>
   16e8c:	b	16d7c <argp_failure@@Base+0xea8>
   16e90:	mov	r0, r4
   16e94:	bl	147d0 <_obstack_memory_used@@Base+0xcd0>
   16e98:	b	16d7c <argp_failure@@Base+0xea8>
   16e9c:	mov	r1, r7
   16ea0:	mov	r0, r4
   16ea4:	bl	181a4 <argp_error@@Base+0x108c>
   16ea8:	cmp	r0, #0
   16eac:	bne	16da0 <argp_failure@@Base+0xecc>
   16eb0:	b	16dbc <argp_failure@@Base+0xee8>
   16eb4:	mov	r1, #1
   16eb8:	mov	r0, r4
   16ebc:	bl	181a4 <argp_error@@Base+0x108c>
   16ec0:	cmp	r0, #0
   16ec4:	bne	16e04 <argp_failure@@Base+0xf30>
   16ec8:	b	16a54 <argp_failure@@Base+0xb80>
   16ecc:	mov	r1, #1
   16ed0:	mov	r0, r4
   16ed4:	bl	181a4 <argp_error@@Base+0x108c>
   16ed8:	cmp	r0, #0
   16edc:	bne	166e4 <argp_failure@@Base+0x810>
   16ee0:	b	166f8 <argp_failure@@Base+0x824>
   16ee4:	mov	r1, r6
   16ee8:	mov	r0, r4
   16eec:	bl	181a4 <argp_error@@Base+0x108c>
   16ef0:	cmp	r0, #0
   16ef4:	bne	1671c <argp_failure@@Base+0x848>
   16ef8:	b	16738 <argp_failure@@Base+0x864>
   16efc:	mov	r1, #1
   16f00:	mov	r0, r4
   16f04:	bl	181a4 <argp_error@@Base+0x108c>
   16f08:	cmp	r0, #0
   16f0c:	bne	16748 <argp_failure@@Base+0x874>
   16f10:	b	1675c <argp_failure@@Base+0x888>
   16f14:	mov	r1, #1
   16f18:	mov	r0, r4
   16f1c:	bl	181a4 <argp_error@@Base+0x108c>
   16f20:	cmp	r0, #0
   16f24:	bne	167dc <argp_failure@@Base+0x908>
   16f28:	b	167f0 <argp_failure@@Base+0x91c>
   16f2c:	cmp	r0, #110	; 0x6e
   16f30:	beq	1624c <argp_failure@@Base+0x378>
   16f34:	mov	sl, r5
   16f38:	mov	r7, r5
   16f3c:	b	16278 <argp_failure@@Base+0x3a4>
   16f40:	ldrb	r1, [r9]
   16f44:	cmp	r3, r1
   16f48:	bne	16b10 <argp_failure@@Base+0xc3c>
   16f4c:	tst	r2, #2
   16f50:	bne	16fe4 <argp_failure@@Base+0x1110>
   16f54:	sub	r1, fp, #76	; 0x4c
   16f58:	ldr	r0, [r7, #8]
   16f5c:	bl	14a74 <_obstack_memory_used@@Base+0xf74>
   16f60:	ldr	r2, [r4, #28]
   16f64:	ldr	r3, [r4, #32]
   16f68:	cmp	r2, r3
   16f6c:	bcs	16b1c <argp_failure@@Base+0xc48>
   16f70:	ldr	r3, [r4, #28]
   16f74:	add	r2, r3, #1
   16f78:	str	r2, [r4, #28]
   16f7c:	mov	r2, #45	; 0x2d
   16f80:	strb	r2, [r3]
   16f84:	ldr	r1, [r4, #28]
   16f88:	ldr	r3, [r4, #32]
   16f8c:	ldrb	r2, [r9]
   16f90:	cmp	r1, r3
   16f94:	bcs	16b34 <argp_failure@@Base+0xc60>
   16f98:	ldr	r3, [r4, #28]
   16f9c:	add	r1, r3, #1
   16fa0:	str	r1, [r4, #28]
   16fa4:	strb	r2, [r3]
   16fa8:	ldr	r3, [fp, #-120]	; 0xffffff88
   16fac:	cmp	r3, #0
   16fb0:	beq	16fc0 <argp_failure@@Base+0x10ec>
   16fb4:	ldr	r3, [r7]
   16fb8:	cmp	r3, #0
   16fbc:	beq	16b54 <argp_failure@@Base+0xc80>
   16fc0:	ldr	r2, [r5, #8]
   16fc4:	cmp	r2, #0
   16fc8:	beq	16fe4 <argp_failure@@Base+0x1110>
   16fcc:	ldr	r3, [r5, #12]
   16fd0:	mov	r0, r4
   16fd4:	tst	r3, #1
   16fd8:	ldrne	r1, [pc, #112]	; 17050 <argp_failure@@Base+0x117c>
   16fdc:	ldreq	r1, [pc, #112]	; 17054 <argp_failure@@Base+0x1180>
   16fe0:	bl	18288 <argp_error@@Base+0x1170>
   16fe4:	add	r9, r9, #1
   16fe8:	b	16b10 <argp_failure@@Base+0xc3c>
   16fec:	andeq	lr, r2, r0, ror r8
   16ff0:	andeq	sl, r1, lr, lsr #17
   16ff4:	andeq	sl, r1, r1, lsl r9
   16ff8:	andeq	sl, r1, r6, lsr r7
   16ffc:	andeq	sl, r1, r2, ror #18
   17000:	andeq	sl, r1, lr, lsr #18
   17004:			; <UNDEFINED> instruction: 0x0001a8bc
   17008:	andeq	sl, r1, r6, asr #15
   1700c:	andeq	sl, r1, fp, ror #17
   17010:	andeq	sl, r1, fp, ror #5
   17014:	andeq	sl, r1, r3, ror #5
   17018:	andeq	r5, r1, ip, lsr #24
   1701c:	andeq	sl, r1, lr, ror r9
   17020:	andeq	sl, r1, sl, ror #18
   17024:	andeq	sl, r1, r7, ror r9
   17028:	andeq	sl, r1, r1, ror r9
   1702c:	andeq	sl, r1, fp, lsl #19
   17030:	andeq	r0, r0, #5
   17034:	ldrdeq	sl, [r1], -sl	; <UNPREDICTABLE>
   17038:	andeq	lr, r2, ip, lsr r9
   1703c:	andeq	sl, r1, lr, asr #20
   17040:	andeq	sl, r1, r7, asr #19
   17044:	andeq	sl, r1, ip, asr #19
   17048:	ldrdeq	sl, [r1], -r2
   1704c:	ldrdeq	sl, [r1], -r6
   17050:	andeq	sl, r1, r2, asr #19
   17054:	andeq	sl, r1, sl, lsr #18

00017058 <argp_help@@Base>:
   17058:	push	{r0, r1, r2, lr}
   1705c:	str	r3, [sp]
   17060:	mov	r3, r2
   17064:	mov	r2, r1
   17068:	mov	r1, #0
   1706c:	bl	16024 <argp_failure@@Base+0x150>
   17070:	add	sp, sp, #12
   17074:	pop	{pc}		; (ldr pc, [sp], #4)

00017078 <argp_state_help@@Base>:
   17078:	push	{r0, r1, r2, r4, r5, lr}
   1707c:	subs	r4, r0, #0
   17080:	mov	r5, r2
   17084:	beq	1709c <argp_state_help@@Base+0x24>
   17088:	ldr	r3, [r4, #16]
   1708c:	tst	r3, #2
   17090:	beq	170b4 <argp_state_help@@Base+0x3c>
   17094:	add	sp, sp, #12
   17098:	pop	{r4, r5, pc}
   1709c:	cmp	r1, #0
   170a0:	beq	17094 <argp_state_help@@Base+0x1c>
   170a4:	ldr	r3, [pc, #100]	; 17110 <argp_state_help@@Base+0x98>
   170a8:	mov	r0, r4
   170ac:	ldr	r3, [r3]
   170b0:	b	170cc <argp_state_help@@Base+0x54>
   170b4:	cmp	r1, #0
   170b8:	beq	17094 <argp_state_help@@Base+0x1c>
   170bc:	tst	r3, #64	; 0x40
   170c0:	ldr	r0, [r4]
   170c4:	ldr	r3, [r4, #40]	; 0x28
   170c8:	orrne	r5, r5, #128	; 0x80
   170cc:	str	r3, [sp]
   170d0:	mov	r2, r1
   170d4:	mov	r3, r5
   170d8:	mov	r1, r4
   170dc:	bl	16024 <argp_failure@@Base+0x150>
   170e0:	cmp	r4, #0
   170e4:	beq	170f4 <argp_state_help@@Base+0x7c>
   170e8:	ldr	r3, [r4, #16]
   170ec:	tst	r3, #32
   170f0:	bne	17094 <argp_state_help@@Base+0x1c>
   170f4:	ands	r0, r5, #256	; 0x100
   170f8:	ldrne	r3, [pc, #20]	; 17114 <argp_state_help@@Base+0x9c>
   170fc:	ldrne	r0, [r3]
   17100:	bne	1710c <argp_state_help@@Base+0x94>
   17104:	tst	r5, #512	; 0x200
   17108:	beq	17094 <argp_state_help@@Base+0x1c>
   1710c:	bl	11228 <exit@plt>
   17110:			; <UNDEFINED> instruction: 0x0002e8b0
   17114:	andeq	lr, r2, r8, lsr #17

00017118 <argp_error@@Base>:
   17118:	push	{r1, r2, r3}
   1711c:	push	{r0, r1, r4, r5, lr}
   17120:	subs	r5, r0, #0
   17124:	beq	17150 <argp_error@@Base+0x38>
   17128:	ldr	r3, [r5, #16]
   1712c:	tst	r3, #2
   17130:	bne	17140 <argp_error@@Base+0x28>
   17134:	ldr	r4, [r5, #44]	; 0x2c
   17138:	cmp	r4, #0
   1713c:	bne	1717c <argp_error@@Base+0x64>
   17140:	add	sp, sp, #8
   17144:	pop	{r4, r5, lr}
   17148:	add	sp, sp, #12
   1714c:	bx	lr
   17150:	ldr	r3, [pc, #144]	; 171e8 <argp_error@@Base+0xd0>
   17154:	ldr	r4, [r3]
   17158:	cmp	r4, #0
   1715c:	beq	17140 <argp_error@@Base+0x28>
   17160:	mov	r0, r4
   17164:	bl	112dc <flockfile@plt>
   17168:	add	r3, sp, #24
   1716c:	str	r3, [sp, #4]
   17170:	ldr	r3, [pc, #116]	; 171ec <argp_error@@Base+0xd4>
   17174:	ldr	r0, [r3]
   17178:	b	17190 <argp_error@@Base+0x78>
   1717c:	mov	r0, r4
   17180:	bl	112dc <flockfile@plt>
   17184:	ldr	r0, [r5, #40]	; 0x28
   17188:	add	r3, sp, #24
   1718c:	str	r3, [sp, #4]
   17190:	mov	r1, r4
   17194:	bl	110b4 <fputs_unlocked@plt>
   17198:	mov	r1, r4
   1719c:	mov	r0, #58	; 0x3a
   171a0:	bl	11390 <putc_unlocked@plt>
   171a4:	mov	r1, r4
   171a8:	mov	r0, #32
   171ac:	bl	11390 <putc_unlocked@plt>
   171b0:	ldr	r2, [sp, #4]
   171b4:	ldr	r1, [sp, #20]
   171b8:	mov	r0, r4
   171bc:	bl	112ac <vfprintf@plt>
   171c0:	mov	r1, r4
   171c4:	mov	r0, #10
   171c8:	bl	11390 <putc_unlocked@plt>
   171cc:	mov	r0, r5
   171d0:	mov	r2, #260	; 0x104
   171d4:	mov	r1, r4
   171d8:	bl	17078 <argp_state_help@@Base>
   171dc:	mov	r0, r4
   171e0:	bl	1118c <funlockfile@plt>
   171e4:	b	17140 <argp_error@@Base+0x28>
   171e8:			; <UNDEFINED> instruction: 0x0002e8b8
   171ec:			; <UNDEFINED> instruction: 0x0002e8b0
   171f0:	ldr	r3, [r1, #32]
   171f4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   171f8:	ldr	r7, [r1, #28]
   171fc:	ldr	r6, [r1]
   17200:	add	r8, r0, r3, lsl #2
   17204:	mov	lr, r6
   17208:	mov	r4, r7
   1720c:	cmp	lr, r3
   17210:	movle	r2, #0
   17214:	movgt	r2, #1
   17218:	cmp	r4, r3
   1721c:	movge	r2, #0
   17220:	cmp	r2, #0
   17224:	bne	1723c <argp_error@@Base+0x124>
   17228:	sub	r3, r6, r3
   1722c:	add	r3, r3, r7
   17230:	str	r3, [r1, #28]
   17234:	str	r6, [r1, #32]
   17238:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1723c:	sub	r2, r3, r4
   17240:	sub	r5, lr, r3
   17244:	cmp	r5, r2
   17248:	lsl	ip, r4, #2
   1724c:	addle	r2, r0, ip
   17250:	movle	r9, r8
   17254:	movle	ip, #0
   17258:	ble	1728c <argp_error@@Base+0x174>
   1725c:	sub	r2, lr, r2
   17260:	add	ip, r0, ip
   17264:	add	r5, r0, r2, lsl #2
   17268:	add	lr, r0, lr, lsl #2
   1726c:	ldr	r9, [ip]
   17270:	ldr	sl, [r5]
   17274:	str	sl, [ip], #4
   17278:	str	r9, [r5], #4
   1727c:	cmp	lr, r5
   17280:	bne	1726c <argp_error@@Base+0x154>
   17284:	mov	lr, r2
   17288:	b	1720c <argp_error@@Base+0xf4>
   1728c:	ldr	sl, [r2]
   17290:	ldr	fp, [r9]
   17294:	add	ip, ip, #1
   17298:	cmp	r5, ip
   1729c:	str	fp, [r2], #4
   172a0:	str	sl, [r9], #4
   172a4:	bgt	1728c <argp_error@@Base+0x174>
   172a8:	add	r4, r4, r5
   172ac:	mov	r2, lr
   172b0:	b	17284 <argp_error@@Base+0x16c>
   172b4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   172b8:	sub	sp, sp, #44	; 0x2c
   172bc:	mov	sl, r1
   172c0:	ldr	r4, [sp, #88]	; 0x58
   172c4:	str	r0, [sp, #36]	; 0x24
   172c8:	str	r2, [sp, #32]
   172cc:	ldr	r8, [r4, #20]
   172d0:	str	r3, [sp, #20]
   172d4:	mov	r9, r8
   172d8:	mov	r3, r9
   172dc:	ldrb	r6, [r3], #1
   172e0:	cmp	r6, #0
   172e4:	cmpne	r6, #61	; 0x3d
   172e8:	movne	r6, #1
   172ec:	moveq	r6, #0
   172f0:	bne	173b8 <argp_error@@Base+0x2a0>
   172f4:	sub	r3, r9, r8
   172f8:	str	r3, [sp, #24]
   172fc:	ldr	r3, [sp, #20]
   17300:	add	r7, r3, r6, lsl #4
   17304:	ldr	r5, [r3, r6, lsl #4]
   17308:	cmp	r5, #0
   1730c:	bne	173c0 <argp_error@@Base+0x2a8>
   17310:	mov	r8, r5
   17314:	mov	r7, r5
   17318:	mov	fp, r3
   1731c:	mvn	r3, #0
   17320:	str	r3, [sp, #16]
   17324:	str	r5, [sp, #28]
   17328:	str	r5, [sp, #12]
   1732c:	ldr	r0, [fp]
   17330:	cmp	r0, #0
   17334:	bne	173f4 <argp_error@@Base+0x2dc>
   17338:	cmp	r5, #0
   1733c:	cmpeq	r8, #0
   17340:	beq	1752c <argp_error@@Base+0x414>
   17344:	ldr	r3, [sp, #92]	; 0x5c
   17348:	cmp	r3, #0
   1734c:	beq	17378 <argp_error@@Base+0x260>
   17350:	cmp	r5, #0
   17354:	ldr	r7, [pc, #908]	; 176e8 <argp_error@@Base+0x5d0>
   17358:	beq	174b8 <argp_error@@Base+0x3a0>
   1735c:	ldr	r3, [r4, #20]
   17360:	ldr	r2, [sl]
   17364:	str	r3, [sp]
   17368:	ldr	r1, [pc, #892]	; 176ec <argp_error@@Base+0x5d4>
   1736c:	ldr	r3, [sp, #96]	; 0x60
   17370:	ldr	r0, [r7]
   17374:	bl	1124c <fprintf@plt>
   17378:	ldr	r3, [sp, #28]
   1737c:	cmp	r3, #0
   17380:	beq	1738c <argp_error@@Base+0x274>
   17384:	mov	r0, r8
   17388:	bl	13710 <argp_parse@@Base+0xa9c>
   1738c:	ldr	r5, [r4, #20]
   17390:	mov	r0, r5
   17394:	bl	11234 <strlen@plt>
   17398:	ldr	r3, [r4]
   1739c:	add	r3, r3, #1
   173a0:	str	r3, [r4]
   173a4:	mov	r3, #0
   173a8:	add	r0, r5, r0
   173ac:	str	r0, [r4, #20]
   173b0:	str	r3, [r4, #8]
   173b4:	b	175b4 <argp_error@@Base+0x49c>
   173b8:	mov	r9, r3
   173bc:	b	172d8 <argp_error@@Base+0x1c0>
   173c0:	ldr	r2, [sp, #24]
   173c4:	mov	r1, r8
   173c8:	mov	r0, r5
   173cc:	bl	11354 <strncmp@plt>
   173d0:	cmp	r0, #0
   173d4:	bne	173ec <argp_error@@Base+0x2d4>
   173d8:	mov	r0, r5
   173dc:	bl	11234 <strlen@plt>
   173e0:	ldr	r3, [sp, #24]
   173e4:	cmp	r3, r0
   173e8:	beq	175c0 <argp_error@@Base+0x4a8>
   173ec:	add	r6, r6, #1
   173f0:	b	172fc <argp_error@@Base+0x1e4>
   173f4:	ldr	r2, [sp, #24]
   173f8:	ldr	r1, [r4, #20]
   173fc:	bl	11354 <strncmp@plt>
   17400:	cmp	r0, #0
   17404:	bne	174a4 <argp_error@@Base+0x38c>
   17408:	cmp	r7, #0
   1740c:	moveq	r7, fp
   17410:	ldreq	r3, [sp, #12]
   17414:	streq	r3, [sp, #16]
   17418:	beq	174a4 <argp_error@@Base+0x38c>
   1741c:	ldr	r3, [sp, #84]	; 0x54
   17420:	cmp	r3, #0
   17424:	bne	17458 <argp_error@@Base+0x340>
   17428:	ldr	r1, [r7, #4]
   1742c:	ldr	r2, [fp, #4]
   17430:	cmp	r1, r2
   17434:	bne	17458 <argp_error@@Base+0x340>
   17438:	ldr	r1, [r7, #8]
   1743c:	ldr	r2, [fp, #8]
   17440:	cmp	r1, r2
   17444:	bne	17458 <argp_error@@Base+0x340>
   17448:	ldr	r1, [r7, #12]
   1744c:	ldr	r2, [fp, #12]
   17450:	cmp	r1, r2
   17454:	beq	174a4 <argp_error@@Base+0x38c>
   17458:	cmp	r5, #0
   1745c:	bne	174a4 <argp_error@@Base+0x38c>
   17460:	ldr	r3, [sp, #92]	; 0x5c
   17464:	cmp	r3, #0
   17468:	beq	1748c <argp_error@@Base+0x374>
   1746c:	cmp	r8, #0
   17470:	bne	17498 <argp_error@@Base+0x380>
   17474:	mov	r0, r6
   17478:	bl	144bc <_obstack_memory_used@@Base+0x9bc>
   1747c:	subs	r8, r0, #0
   17480:	bne	176c4 <argp_error@@Base+0x5ac>
   17484:	mov	r5, #1
   17488:	b	174a4 <argp_error@@Base+0x38c>
   1748c:	cmp	r8, #0
   17490:	mov	r5, #1
   17494:	beq	174a4 <argp_error@@Base+0x38c>
   17498:	ldr	r3, [sp, #12]
   1749c:	mov	r2, #1
   174a0:	strb	r2, [r8, r3]
   174a4:	ldr	r3, [sp, #12]
   174a8:	add	fp, fp, #16
   174ac:	add	r3, r3, #1
   174b0:	str	r3, [sp, #12]
   174b4:	b	1732c <argp_error@@Base+0x214>
   174b8:	ldr	r0, [r7]
   174bc:	bl	112dc <flockfile@plt>
   174c0:	ldr	r3, [r4, #20]
   174c4:	ldr	r2, [sl]
   174c8:	str	r3, [sp]
   174cc:	ldr	r1, [pc, #540]	; 176f0 <argp_error@@Base+0x5d8>
   174d0:	ldr	r3, [sp, #96]	; 0x60
   174d4:	ldr	r0, [r7]
   174d8:	bl	1124c <fprintf@plt>
   174dc:	ldr	r9, [pc, #528]	; 176f4 <argp_error@@Base+0x5dc>
   174e0:	cmp	r6, r5
   174e4:	bne	17500 <argp_error@@Base+0x3e8>
   174e8:	ldr	r1, [r7]
   174ec:	mov	r0, #10
   174f0:	bl	112b8 <fputc@plt>
   174f4:	ldr	r0, [r7]
   174f8:	bl	1118c <funlockfile@plt>
   174fc:	b	17378 <argp_error@@Base+0x260>
   17500:	ldrb	r3, [r8, r5]
   17504:	cmp	r3, #0
   17508:	beq	17524 <argp_error@@Base+0x40c>
   1750c:	ldr	r3, [sp, #20]
   17510:	ldr	r2, [sp, #96]	; 0x60
   17514:	mov	r1, r9
   17518:	ldr	r3, [r3, r5, lsl #4]
   1751c:	ldr	r0, [r7]
   17520:	bl	1124c <fprintf@plt>
   17524:	add	r5, r5, #1
   17528:	b	174e0 <argp_error@@Base+0x3c8>
   1752c:	cmp	r7, #0
   17530:	bne	175c4 <argp_error@@Base+0x4ac>
   17534:	ldr	r3, [sp, #84]	; 0x54
   17538:	cmp	r3, #0
   1753c:	beq	17570 <argp_error@@Base+0x458>
   17540:	ldr	r3, [r4]
   17544:	ldr	r3, [sl, r3, lsl #2]
   17548:	ldrb	r3, [r3, #1]
   1754c:	cmp	r3, #45	; 0x2d
   17550:	beq	17570 <argp_error@@Base+0x458>
   17554:	ldr	r3, [r4, #20]
   17558:	ldr	r0, [sp, #32]
   1755c:	ldrb	r1, [r3]
   17560:	bl	11240 <strchr@plt>
   17564:	cmp	r0, #0
   17568:	mvnne	r0, #0
   1756c:	bne	175b8 <argp_error@@Base+0x4a0>
   17570:	ldr	r3, [sp, #92]	; 0x5c
   17574:	cmp	r3, #0
   17578:	beq	1759c <argp_error@@Base+0x484>
   1757c:	ldr	r0, [pc, #356]	; 176e8 <argp_error@@Base+0x5d0>
   17580:	ldr	r3, [r4, #20]
   17584:	ldr	r2, [sl]
   17588:	str	r3, [sp]
   1758c:	ldr	r1, [pc, #356]	; 176f8 <argp_error@@Base+0x5e0>
   17590:	ldr	r3, [sp, #96]	; 0x60
   17594:	ldr	r0, [r0]
   17598:	bl	1124c <fprintf@plt>
   1759c:	ldr	r3, [r4]
   175a0:	mov	r2, #0
   175a4:	add	r3, r3, #1
   175a8:	str	r2, [r4, #20]
   175ac:	str	r3, [r4]
   175b0:	str	r2, [r4, #8]
   175b4:	mov	r0, #63	; 0x3f
   175b8:	add	sp, sp, #44	; 0x2c
   175bc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   175c0:	str	r6, [sp, #16]
   175c4:	ldr	r3, [r4]
   175c8:	mov	r1, #0
   175cc:	add	r2, r3, #1
   175d0:	str	r2, [r4]
   175d4:	str	r1, [r4, #20]
   175d8:	ldrb	r1, [r9]
   175dc:	cmp	r1, #0
   175e0:	ldr	r1, [r7, #4]
   175e4:	beq	1762c <argp_error@@Base+0x514>
   175e8:	cmp	r1, #0
   175ec:	addne	r9, r9, #1
   175f0:	strne	r9, [r4, #12]
   175f4:	bne	17650 <argp_error@@Base+0x538>
   175f8:	ldr	r3, [sp, #92]	; 0x5c
   175fc:	cmp	r3, #0
   17600:	beq	17624 <argp_error@@Base+0x50c>
   17604:	ldr	r0, [pc, #220]	; 176e8 <argp_error@@Base+0x5d0>
   17608:	ldr	r3, [r7]
   1760c:	ldr	r2, [sl]
   17610:	str	r3, [sp]
   17614:	ldr	r1, [pc, #224]	; 176fc <argp_error@@Base+0x5e4>
   17618:	ldr	r3, [sp, #96]	; 0x60
   1761c:	ldr	r0, [r0]
   17620:	bl	1124c <fprintf@plt>
   17624:	ldr	r3, [r7, #12]
   17628:	b	173b0 <argp_error@@Base+0x298>
   1762c:	cmp	r1, #1
   17630:	bne	17650 <argp_error@@Base+0x538>
   17634:	ldr	r1, [sp, #36]	; 0x24
   17638:	cmp	r2, r1
   1763c:	bge	17678 <argp_error@@Base+0x560>
   17640:	add	r3, r3, #2
   17644:	str	r3, [r4]
   17648:	ldr	r3, [sl, r2, lsl #2]
   1764c:	str	r3, [r4, #12]
   17650:	ldr	r3, [sp, #80]	; 0x50
   17654:	cmp	r3, #0
   17658:	ldrne	r2, [sp, #16]
   1765c:	strne	r2, [r3]
   17660:	ldr	r3, [r7, #8]
   17664:	ldr	r0, [r7, #12]
   17668:	cmp	r3, #0
   1766c:	strne	r0, [r3]
   17670:	movne	r0, #0
   17674:	b	175b8 <argp_error@@Base+0x4a0>
   17678:	ldr	r3, [sp, #92]	; 0x5c
   1767c:	cmp	r3, #0
   17680:	beq	176a4 <argp_error@@Base+0x58c>
   17684:	ldr	r0, [pc, #92]	; 176e8 <argp_error@@Base+0x5d0>
   17688:	ldr	r3, [r7]
   1768c:	ldr	r2, [sl]
   17690:	str	r3, [sp]
   17694:	ldr	r1, [pc, #100]	; 17700 <argp_error@@Base+0x5e8>
   17698:	ldr	r3, [sp, #96]	; 0x60
   1769c:	ldr	r0, [r0]
   176a0:	bl	1124c <fprintf@plt>
   176a4:	ldr	r3, [r7, #12]
   176a8:	str	r3, [r4, #8]
   176ac:	ldr	r3, [sp, #32]
   176b0:	ldrb	r0, [r3]
   176b4:	cmp	r0, #58	; 0x3a
   176b8:	moveq	r0, #58	; 0x3a
   176bc:	movne	r0, #63	; 0x3f
   176c0:	b	175b8 <argp_error@@Base+0x4a0>
   176c4:	mov	r2, r6
   176c8:	mov	r1, #0
   176cc:	bl	1127c <memset@plt>
   176d0:	ldr	r3, [sp, #16]
   176d4:	mov	r2, #1
   176d8:	strb	r2, [r8, r3]
   176dc:	mov	r3, #1
   176e0:	str	r3, [sp, #28]
   176e4:	b	17498 <argp_error@@Base+0x380>
   176e8:			; <UNDEFINED> instruction: 0x0002e8b8
   176ec:	andeq	sl, r1, r2, ror #20
   176f0:	andeq	sl, r1, r2, lsl #21
   176f4:			; <UNDEFINED> instruction: 0x0001aab1
   176f8:			; <UNDEFINED> instruction: 0x0001aab9
   176fc:	ldrdeq	sl, [r1], -r9
   17700:	andeq	sl, r1, r6, lsl #22
   17704:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17708:	sub	sp, sp, #36	; 0x24
   1770c:	subs	r8, r0, #0
   17710:	ldr	r4, [sp, #80]	; 0x50
   17714:	ldr	fp, [sp, #72]	; 0x48
   17718:	ldr	r5, [sp, #76]	; 0x4c
   1771c:	ldr	r9, [r4, #4]
   17720:	bgt	17730 <argp_error@@Base+0x618>
   17724:	mvn	r0, #0
   17728:	add	sp, sp, #36	; 0x24
   1772c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17730:	mov	sl, r3
   17734:	mov	r3, #0
   17738:	str	r3, [r4, #12]
   1773c:	ldr	r3, [r4]
   17740:	mov	r7, r1
   17744:	cmp	r3, #0
   17748:	mov	r6, r2
   1774c:	beq	17770 <argp_error@@Base+0x658>
   17750:	ldr	r3, [r4, #16]
   17754:	cmp	r3, #0
   17758:	beq	17778 <argp_error@@Base+0x660>
   1775c:	ldrb	r3, [r2]
   17760:	sub	r3, r3, #43	; 0x2b
   17764:	tst	r3, #253	; 0xfd
   17768:	addeq	r6, r2, #1
   1776c:	b	177b4 <argp_error@@Base+0x69c>
   17770:	mov	r3, #1
   17774:	str	r3, [r4]
   17778:	ldr	r3, [r4]
   1777c:	str	r3, [r4, #32]
   17780:	str	r3, [r4, #28]
   17784:	mov	r3, #0
   17788:	str	r3, [r4, #20]
   1778c:	ldrb	r2, [r6]
   17790:	cmp	r2, #45	; 0x2d
   17794:	moveq	r3, #2
   17798:	beq	177a4 <argp_error@@Base+0x68c>
   1779c:	cmp	r2, #43	; 0x2b
   177a0:	bne	178b4 <argp_error@@Base+0x79c>
   177a4:	add	r6, r6, #1
   177a8:	str	r3, [r4, #24]
   177ac:	mov	r3, #1
   177b0:	str	r3, [r4, #16]
   177b4:	ldrb	r3, [r6]
   177b8:	cmp	r3, #58	; 0x3a
   177bc:	ldr	r3, [r4, #20]
   177c0:	moveq	r9, #0
   177c4:	cmp	r3, #0
   177c8:	beq	177d8 <argp_error@@Base+0x6c0>
   177cc:	ldrb	r3, [r3]
   177d0:	cmp	r3, #0
   177d4:	bne	1796c <argp_error@@Base+0x854>
   177d8:	ldr	r3, [r4]
   177dc:	ldr	r2, [r4, #32]
   177e0:	cmp	r2, r3
   177e4:	ldr	r2, [r4, #28]
   177e8:	strgt	r3, [r4, #32]
   177ec:	cmp	r3, r2
   177f0:	ldr	r2, [r4, #24]
   177f4:	strlt	r3, [r4, #28]
   177f8:	cmp	r2, #1
   177fc:	bne	17834 <argp_error@@Base+0x71c>
   17800:	ldr	r1, [r4, #32]
   17804:	ldr	r2, [r4, #28]
   17808:	cmp	r2, r1
   1780c:	beq	178e4 <argp_error@@Base+0x7cc>
   17810:	cmp	r3, r1
   17814:	beq	17824 <argp_error@@Base+0x70c>
   17818:	mov	r1, r4
   1781c:	mov	r0, r7
   17820:	bl	171f0 <argp_error@@Base+0xd8>
   17824:	ldr	r3, [r4]
   17828:	cmp	r8, r3
   1782c:	bgt	178f0 <argp_error@@Base+0x7d8>
   17830:	str	r3, [r4, #32]
   17834:	ldr	r3, [r4]
   17838:	cmp	r8, r3
   1783c:	beq	17894 <argp_error@@Base+0x77c>
   17840:	ldr	r1, [pc, #920]	; 17be0 <argp_error@@Base+0xac8>
   17844:	ldr	r0, [r7, r3, lsl #2]
   17848:	str	r3, [sp, #24]
   1784c:	bl	110d8 <strcmp@plt>
   17850:	cmp	r0, #0
   17854:	bne	17894 <argp_error@@Base+0x77c>
   17858:	ldr	r1, [r4, #28]
   1785c:	ldr	r3, [sp, #24]
   17860:	ldr	r2, [r4, #32]
   17864:	add	r3, r3, #1
   17868:	cmp	r1, r2
   1786c:	str	r3, [r4]
   17870:	streq	r3, [r4, #28]
   17874:	beq	1788c <argp_error@@Base+0x774>
   17878:	cmp	r3, r2
   1787c:	beq	1788c <argp_error@@Base+0x774>
   17880:	mov	r1, r4
   17884:	mov	r0, r7
   17888:	bl	171f0 <argp_error@@Base+0xd8>
   1788c:	str	r8, [r4, #32]
   17890:	str	r8, [r4]
   17894:	ldr	r2, [r4]
   17898:	cmp	r8, r2
   1789c:	bne	17918 <argp_error@@Base+0x800>
   178a0:	ldr	r3, [r4, #28]
   178a4:	ldr	r2, [r4, #32]
   178a8:	cmp	r3, r2
   178ac:	strne	r3, [r4]
   178b0:	b	17724 <argp_error@@Base+0x60c>
   178b4:	ldr	r3, [sp, #84]	; 0x54
   178b8:	cmp	r3, #0
   178bc:	beq	178cc <argp_error@@Base+0x7b4>
   178c0:	mov	r3, #0
   178c4:	str	r3, [r4, #24]
   178c8:	b	177ac <argp_error@@Base+0x694>
   178cc:	ldr	r0, [pc, #784]	; 17be4 <argp_error@@Base+0xacc>
   178d0:	bl	111bc <getenv@plt>
   178d4:	cmp	r0, #0
   178d8:	bne	178c0 <argp_error@@Base+0x7a8>
   178dc:	mov	r3, #1
   178e0:	b	178c4 <argp_error@@Base+0x7ac>
   178e4:	cmp	r3, r2
   178e8:	strne	r3, [r4, #28]
   178ec:	b	17824 <argp_error@@Base+0x70c>
   178f0:	ldr	r2, [r7, r3, lsl #2]
   178f4:	ldrb	r1, [r2]
   178f8:	cmp	r1, #45	; 0x2d
   178fc:	bne	1790c <argp_error@@Base+0x7f4>
   17900:	ldrb	r2, [r2, #1]
   17904:	cmp	r2, #0
   17908:	bne	17830 <argp_error@@Base+0x718>
   1790c:	add	r3, r3, #1
   17910:	str	r3, [r4]
   17914:	b	17824 <argp_error@@Base+0x70c>
   17918:	ldr	r3, [r7, r2, lsl #2]
   1791c:	ldrb	r1, [r3]
   17920:	cmp	r1, #45	; 0x2d
   17924:	bne	17934 <argp_error@@Base+0x81c>
   17928:	ldrb	r1, [r3, #1]
   1792c:	cmp	r1, #0
   17930:	bne	17954 <argp_error@@Base+0x83c>
   17934:	ldr	r1, [r4, #24]
   17938:	cmp	r1, #0
   1793c:	beq	17724 <argp_error@@Base+0x60c>
   17940:	add	r2, r2, #1
   17944:	str	r2, [r4]
   17948:	str	r3, [r4, #12]
   1794c:	mov	r0, #1
   17950:	b	17728 <argp_error@@Base+0x610>
   17954:	cmp	sl, #0
   17958:	bne	179e8 <argp_error@@Base+0x8d0>
   1795c:	ldr	r3, [r4]
   17960:	ldr	r3, [r7, r3, lsl #2]
   17964:	add	r3, r3, #1
   17968:	str	r3, [r4, #20]
   1796c:	ldr	r3, [r4, #20]
   17970:	mov	r0, r6
   17974:	add	r2, r3, #1
   17978:	str	r2, [r4, #20]
   1797c:	ldrb	r5, [r3]
   17980:	str	r2, [sp, #28]
   17984:	str	r3, [sp, #24]
   17988:	mov	r1, r5
   1798c:	bl	11240 <strchr@plt>
   17990:	ldr	r3, [sp, #24]
   17994:	ldr	r2, [sp, #28]
   17998:	ldrb	r1, [r3, #1]
   1799c:	cmp	r1, #0
   179a0:	ldreq	r1, [r4]
   179a4:	addeq	r1, r1, #1
   179a8:	streq	r1, [r4]
   179ac:	sub	r1, r5, #58	; 0x3a
   179b0:	cmp	r0, #0
   179b4:	cmpne	r1, #1
   179b8:	bhi	17a94 <argp_error@@Base+0x97c>
   179bc:	cmp	r9, #0
   179c0:	beq	179dc <argp_error@@Base+0x8c4>
   179c4:	ldr	r0, [pc, #540]	; 17be8 <argp_error@@Base+0xad0>
   179c8:	mov	r3, r5
   179cc:	ldr	r2, [r7]
   179d0:	ldr	r1, [pc, #532]	; 17bec <argp_error@@Base+0xad4>
   179d4:	ldr	r0, [r0]
   179d8:	bl	1124c <fprintf@plt>
   179dc:	str	r5, [r4, #8]
   179e0:	mov	r0, #63	; 0x3f
   179e4:	b	17728 <argp_error@@Base+0x610>
   179e8:	cmp	r1, #45	; 0x2d
   179ec:	bne	17a28 <argp_error@@Base+0x910>
   179f0:	add	r3, r3, #2
   179f4:	str	r3, [r4, #20]
   179f8:	ldr	r3, [pc, #480]	; 17be0 <argp_error@@Base+0xac8>
   179fc:	str	r9, [sp, #12]
   17a00:	str	r3, [sp, #16]
   17a04:	str	r4, [sp, #8]
   17a08:	str	r5, [sp, #4]
   17a0c:	str	fp, [sp]
   17a10:	mov	r3, sl
   17a14:	mov	r2, r6
   17a18:	mov	r1, r7
   17a1c:	mov	r0, r8
   17a20:	bl	172b4 <argp_error@@Base+0x19c>
   17a24:	b	17728 <argp_error@@Base+0x610>
   17a28:	cmp	r5, #0
   17a2c:	beq	1795c <argp_error@@Base+0x844>
   17a30:	ldrb	r2, [r3, #2]
   17a34:	cmp	r2, #0
   17a38:	bne	17a54 <argp_error@@Base+0x93c>
   17a3c:	mov	r0, r6
   17a40:	str	r3, [sp, #24]
   17a44:	bl	11240 <strchr@plt>
   17a48:	ldr	r3, [sp, #24]
   17a4c:	cmp	r0, #0
   17a50:	bne	1795c <argp_error@@Base+0x844>
   17a54:	add	r3, r3, #1
   17a58:	str	r3, [r4, #20]
   17a5c:	ldr	r3, [pc, #396]	; 17bf0 <argp_error@@Base+0xad8>
   17a60:	str	r9, [sp, #12]
   17a64:	str	r3, [sp, #16]
   17a68:	str	r4, [sp, #8]
   17a6c:	str	r5, [sp, #4]
   17a70:	str	fp, [sp]
   17a74:	mov	r3, sl
   17a78:	mov	r2, r6
   17a7c:	mov	r1, r7
   17a80:	mov	r0, r8
   17a84:	bl	172b4 <argp_error@@Base+0x19c>
   17a88:	cmn	r0, #1
   17a8c:	bne	17728 <argp_error@@Base+0x610>
   17a90:	b	1795c <argp_error@@Base+0x844>
   17a94:	ldrb	r1, [r0]
   17a98:	cmp	r1, #87	; 0x57
   17a9c:	ldrb	r1, [r0, #1]
   17aa0:	bne	17b3c <argp_error@@Base+0xa24>
   17aa4:	cmp	sl, #0
   17aa8:	sub	ip, r1, #59	; 0x3b
   17aac:	clz	ip, ip
   17ab0:	lsr	ip, ip, #5
   17ab4:	moveq	ip, #0
   17ab8:	cmp	ip, #0
   17abc:	beq	17b3c <argp_error@@Base+0xa24>
   17ac0:	ldrb	r3, [r3, #1]
   17ac4:	cmp	r3, #0
   17ac8:	strne	r2, [r4, #12]
   17acc:	bne	17b1c <argp_error@@Base+0xa04>
   17ad0:	ldr	r3, [r4]
   17ad4:	cmp	r8, r3
   17ad8:	ldrne	r3, [r7, r3, lsl #2]
   17adc:	strne	r3, [r4, #12]
   17ae0:	bne	17b1c <argp_error@@Base+0xa04>
   17ae4:	cmp	r9, #0
   17ae8:	beq	17b04 <argp_error@@Base+0x9ec>
   17aec:	ldr	r0, [pc, #244]	; 17be8 <argp_error@@Base+0xad0>
   17af0:	mov	r3, r5
   17af4:	ldr	r2, [r7]
   17af8:	ldr	r1, [pc, #244]	; 17bf4 <argp_error@@Base+0xadc>
   17afc:	ldr	r0, [r0]
   17b00:	bl	1124c <fprintf@plt>
   17b04:	str	r5, [r4, #8]
   17b08:	ldrb	r0, [r6]
   17b0c:	cmp	r0, #58	; 0x3a
   17b10:	moveq	r0, #58	; 0x3a
   17b14:	movne	r0, #63	; 0x3f
   17b18:	b	17728 <argp_error@@Base+0x610>
   17b1c:	ldr	r3, [r4, #12]
   17b20:	ldr	r2, [pc, #208]	; 17bf8 <argp_error@@Base+0xae0>
   17b24:	str	r3, [r4, #20]
   17b28:	mov	r3, #0
   17b2c:	str	r3, [r4, #12]
   17b30:	str	r2, [sp, #16]
   17b34:	stmib	sp, {r3, r4, r9}
   17b38:	b	17a0c <argp_error@@Base+0x8f4>
   17b3c:	cmp	r1, #58	; 0x3a
   17b40:	bne	17b8c <argp_error@@Base+0xa74>
   17b44:	ldrb	r1, [r0, #2]
   17b48:	ldrb	r3, [r3, #1]
   17b4c:	cmp	r1, #58	; 0x3a
   17b50:	bne	17b6c <argp_error@@Base+0xa54>
   17b54:	cmp	r3, #0
   17b58:	strne	r2, [r4, #12]
   17b5c:	ldrne	r3, [r4]
   17b60:	bne	17b7c <argp_error@@Base+0xa64>
   17b64:	str	r3, [r4, #12]
   17b68:	b	17b84 <argp_error@@Base+0xa6c>
   17b6c:	cmp	r3, #0
   17b70:	ldr	r3, [r4]
   17b74:	beq	17b94 <argp_error@@Base+0xa7c>
   17b78:	str	r2, [r4, #12]
   17b7c:	add	r3, r3, #1
   17b80:	str	r3, [r4]
   17b84:	mov	r3, #0
   17b88:	str	r3, [r4, #20]
   17b8c:	mov	r0, r5
   17b90:	b	17728 <argp_error@@Base+0x610>
   17b94:	cmp	r8, r3
   17b98:	addne	r2, r3, #1
   17b9c:	strne	r2, [r4]
   17ba0:	ldrne	r3, [r7, r3, lsl #2]
   17ba4:	bne	17b64 <argp_error@@Base+0xa4c>
   17ba8:	cmp	r9, #0
   17bac:	beq	17bc8 <argp_error@@Base+0xab0>
   17bb0:	ldr	r0, [pc, #48]	; 17be8 <argp_error@@Base+0xad0>
   17bb4:	mov	r3, r5
   17bb8:	ldr	r2, [r7]
   17bbc:	ldr	r1, [pc, #48]	; 17bf4 <argp_error@@Base+0xadc>
   17bc0:	ldr	r0, [r0]
   17bc4:	bl	1124c <fprintf@plt>
   17bc8:	str	r5, [r4, #8]
   17bcc:	ldrb	r5, [r6]
   17bd0:	cmp	r5, #58	; 0x3a
   17bd4:	moveq	r5, #58	; 0x3a
   17bd8:	movne	r5, #63	; 0x3f
   17bdc:	b	17b84 <argp_error@@Base+0xa6c>
   17be0:	andeq	sl, r1, r4, lsr #5
   17be4:	andeq	sl, r1, lr, lsr #22
   17be8:			; <UNDEFINED> instruction: 0x0002e8b8
   17bec:	andeq	sl, r1, lr, lsr fp
   17bf0:	andeq	sl, r1, r5, lsr #5
   17bf4:	andeq	sl, r1, sl, asr fp
   17bf8:	andeq	sl, r1, r3, lsl #23
   17bfc:	push	{r4, r5, lr}
   17c00:	sub	sp, sp, #20
   17c04:	ldr	r5, [pc, #84]	; 17c60 <argp_error@@Base+0xb48>
   17c08:	ldr	r4, [pc, #84]	; 17c64 <argp_error@@Base+0xb4c>
   17c0c:	ldr	ip, [r5]
   17c10:	str	r4, [sp, #8]
   17c14:	str	ip, [r4]
   17c18:	ldr	ip, [r5, #4]
   17c1c:	str	ip, [r4, #4]
   17c20:	ldr	ip, [sp, #40]	; 0x28
   17c24:	str	ip, [sp, #12]
   17c28:	ldr	ip, [sp, #36]	; 0x24
   17c2c:	str	ip, [sp, #4]
   17c30:	ldr	ip, [sp, #32]
   17c34:	str	ip, [sp]
   17c38:	bl	17704 <argp_error@@Base+0x5ec>
   17c3c:	ldr	r3, [r4]
   17c40:	ldr	r2, [r4, #12]
   17c44:	str	r3, [r5]
   17c48:	ldr	r3, [pc, #24]	; 17c68 <argp_error@@Base+0xb50>
   17c4c:	str	r2, [r3]
   17c50:	ldr	r3, [r4, #8]
   17c54:	str	r3, [r5, #8]
   17c58:	add	sp, sp, #20
   17c5c:	pop	{r4, r5, pc}
   17c60:	muleq	r2, ip, r8
   17c64:	andeq	lr, r2, r8, ror #17
   17c68:	andeq	lr, r2, r4, asr #18
   17c6c:	push	{r0, r1, r2, r3, r4, lr}
   17c70:	mov	r3, #1
   17c74:	str	r3, [sp, #8]
   17c78:	mov	r3, #0
   17c7c:	str	r3, [sp, #4]
   17c80:	str	r3, [sp]
   17c84:	bl	17bfc <argp_error@@Base+0xae4>
   17c88:	add	sp, sp, #20
   17c8c:	pop	{pc}		; (ldr pc, [sp], #4)
   17c90:	push	{r4, r5, r6, lr}
   17c94:	subs	r4, r2, #0
   17c98:	mov	r6, r0
   17c9c:	mov	r5, r1
   17ca0:	beq	17cb8 <argp_error@@Base+0xba0>
   17ca4:	mov	r1, r4
   17ca8:	mvn	r0, #0
   17cac:	bl	182fc <argp_error@@Base+0x11e4>
   17cb0:	cmp	r0, r5
   17cb4:	bcc	17cc8 <argp_error@@Base+0xbb0>
   17cb8:	mul	r1, r5, r4
   17cbc:	mov	r0, r6
   17cc0:	pop	{r4, r5, r6, lr}
   17cc4:	b	144fc <_obstack_memory_used@@Base+0x9fc>
   17cc8:	bl	11258 <__errno_location@plt>
   17ccc:	mov	r3, #12
   17cd0:	str	r3, [r0]
   17cd4:	mov	r0, #0
   17cd8:	pop	{r4, r5, r6, pc}
   17cdc:	push	{r4, r5, r6, r7, r8, lr}
   17ce0:	mov	r8, r0
   17ce4:	mov	r0, #36	; 0x24
   17ce8:	mov	r7, r1
   17cec:	mov	r6, r2
   17cf0:	mov	r5, r3
   17cf4:	bl	144bc <_obstack_memory_used@@Base+0x9bc>
   17cf8:	subs	r4, r0, #0
   17cfc:	beq	17d4c <argp_error@@Base+0xc34>
   17d00:	mov	r3, #0
   17d04:	str	r5, [r4, #12]
   17d08:	str	r8, [r4]
   17d0c:	str	r7, [r4, #4]
   17d10:	str	r6, [r4, #8]
   17d14:	str	r3, [r4, #20]
   17d18:	str	r3, [r4, #16]
   17d1c:	mov	r0, #200	; 0xc8
   17d20:	bl	144bc <_obstack_memory_used@@Base+0x9bc>
   17d24:	cmp	r0, #0
   17d28:	mov	r5, r0
   17d2c:	addne	r5, r0, #200	; 0xc8
   17d30:	str	r0, [r4, #24]
   17d34:	strne	r0, [r4, #28]
   17d38:	strne	r5, [r4, #32]
   17d3c:	bne	17d4c <argp_error@@Base+0xc34>
   17d40:	mov	r0, r4
   17d44:	bl	13710 <argp_parse@@Base+0xa9c>
   17d48:	mov	r4, r5
   17d4c:	mov	r0, r4
   17d50:	pop	{r4, r5, r6, r7, r8, pc}
   17d54:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17d58:	mov	r4, r0
   17d5c:	ldr	r6, [r0, #24]
   17d60:	ldr	r3, [r0, #16]
   17d64:	add	r6, r6, r3
   17d68:	ldr	r2, [r4, #28]
   17d6c:	cmp	r6, r2
   17d70:	bcs	17e20 <argp_error@@Base+0xd08>
   17d74:	ldr	r7, [r4, #20]
   17d78:	cmp	r7, #0
   17d7c:	bne	17dd4 <argp_error@@Base+0xcbc>
   17d80:	ldr	r5, [r4, #4]
   17d84:	cmp	r5, #0
   17d88:	beq	17dd4 <argp_error@@Base+0xcbc>
   17d8c:	ldr	r1, [r4, #32]
   17d90:	add	r3, r2, r5
   17d94:	cmp	r1, r3
   17d98:	bls	17e38 <argp_error@@Base+0xd20>
   17d9c:	add	r7, r6, r5
   17da0:	sub	r2, r2, r6
   17da4:	mov	r1, r6
   17da8:	mov	r0, r7
   17dac:	bl	110f0 <memmove@plt>
   17db0:	ldr	r3, [r4, #28]
   17db4:	mov	r0, r6
   17db8:	add	r3, r3, r5
   17dbc:	str	r3, [r4, #28]
   17dc0:	mov	r2, r5
   17dc4:	mov	r1, #32
   17dc8:	bl	1127c <memset@plt>
   17dcc:	mov	r6, r7
   17dd0:	str	r5, [r4, #20]
   17dd4:	ldr	r9, [r4, #28]
   17dd8:	mov	r1, #10
   17ddc:	sub	r8, r9, r6
   17de0:	mov	r2, r8
   17de4:	mov	r0, r6
   17de8:	bl	11294 <memchr@plt>
   17dec:	ldr	r2, [r4, #20]
   17df0:	ldr	r5, [r4, #8]
   17df4:	cmp	r2, #0
   17df8:	movlt	r3, #0
   17dfc:	strlt	r3, [r4, #20]
   17e00:	cmp	r0, #0
   17e04:	mov	fp, r0
   17e08:	ldr	r0, [r4, #20]
   17e0c:	bne	17e54 <argp_error@@Base+0xd3c>
   17e10:	add	r3, r8, r0
   17e14:	cmp	r3, r5
   17e18:	bcs	17e74 <argp_error@@Base+0xd5c>
   17e1c:	str	r3, [r4, #20]
   17e20:	ldr	r3, [r4, #28]
   17e24:	ldr	r2, [r4, #24]
   17e28:	sub	r3, r3, r2
   17e2c:	str	r3, [r4, #16]
   17e30:	add	sp, sp, #12
   17e34:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17e38:	ldr	r1, [r4]
   17e3c:	mov	r0, #32
   17e40:	add	r7, r7, #1
   17e44:	bl	11390 <putc_unlocked@plt>
   17e48:	cmp	r5, r7
   17e4c:	bne	17e38 <argp_error@@Base+0xd20>
   17e50:	b	17dd0 <argp_error@@Base+0xcb8>
   17e54:	sub	r2, fp, r6
   17e58:	add	r2, r2, r0
   17e5c:	cmp	r2, r5
   17e60:	bge	17e78 <argp_error@@Base+0xd60>
   17e64:	mov	r3, #0
   17e68:	str	r3, [r4, #20]
   17e6c:	add	r3, fp, #1
   17e70:	b	17ed8 <argp_error@@Base+0xdc0>
   17e74:	mov	fp, r9
   17e78:	ldr	sl, [r4, #12]
   17e7c:	cmp	sl, #0
   17e80:	subge	r5, r5, r0
   17e84:	addge	r5, r6, r5
   17e88:	movge	r7, r5
   17e8c:	bge	17ef8 <argp_error@@Base+0xde0>
   17e90:	cmp	fp, r9
   17e94:	sub	sl, r5, #1
   17e98:	bcs	17ee0 <argp_error@@Base+0xdc8>
   17e9c:	sub	r0, sl, r0
   17ea0:	sub	r2, r9, fp
   17ea4:	mov	r1, fp
   17ea8:	add	r0, r6, r0
   17eac:	bl	110f0 <memmove@plt>
   17eb0:	ldr	r8, [r4, #20]
   17eb4:	sub	sl, sl, r8
   17eb8:	add	sl, r6, sl
   17ebc:	sub	r3, sl, fp
   17ec0:	ldr	sl, [r4, #28]
   17ec4:	sub	r3, sl, r3
   17ec8:	str	r3, [r4, #28]
   17ecc:	mov	r3, #0
   17ed0:	str	r3, [r4, #20]
   17ed4:	add	r3, r6, r5
   17ed8:	mov	r6, r3
   17edc:	b	17d68 <argp_error@@Base+0xc50>
   17ee0:	add	r0, r8, r0
   17ee4:	str	r0, [r4, #20]
   17ee8:	sub	r0, sl, r0
   17eec:	add	r9, r9, r0
   17ef0:	str	r9, [r4, #28]
   17ef4:	b	17e20 <argp_error@@Base+0xd08>
   17ef8:	cmp	r6, r7
   17efc:	mov	r2, r7
   17f00:	bhi	17f2c <argp_error@@Base+0xe14>
   17f04:	str	r7, [sp, #4]
   17f08:	bl	1121c <__ctype_b_loc@plt>
   17f0c:	ldr	r2, [sp, #4]
   17f10:	sub	r7, r7, #1
   17f14:	ldrb	r1, [r2]
   17f18:	lsl	r1, r1, #1
   17f1c:	ldr	r0, [r0]
   17f20:	ldrh	r1, [r0, r1]
   17f24:	tst	r1, #1
   17f28:	beq	17ef8 <argp_error@@Base+0xde0>
   17f2c:	add	r7, r2, #1
   17f30:	cmp	r6, r7
   17f34:	bcs	17fac <argp_error@@Base+0xe94>
   17f38:	cmp	r6, r2
   17f3c:	bhi	17f78 <argp_error@@Base+0xe60>
   17f40:	sub	r5, r2, #1
   17f44:	cmp	r6, r5
   17f48:	mov	r2, r5
   17f4c:	bhi	17f78 <argp_error@@Base+0xe60>
   17f50:	str	r5, [sp, #4]
   17f54:	bl	1121c <__ctype_b_loc@plt>
   17f58:	ldr	r2, [sp, #4]
   17f5c:	sub	r5, r5, #1
   17f60:	ldrb	r3, [r2]
   17f64:	lsl	r3, r3, #1
   17f68:	ldr	r1, [r0]
   17f6c:	ldrh	r3, [r1, r3]
   17f70:	tst	r3, #1
   17f74:	bne	17f44 <argp_error@@Base+0xe2c>
   17f78:	add	r5, r2, #1
   17f7c:	add	r3, r8, #1
   17f80:	add	r3, r6, r3
   17f84:	cmp	r7, r3
   17f88:	bne	18014 <argp_error@@Base+0xefc>
   17f8c:	ldr	r3, [r4, #32]
   17f90:	sub	r3, r3, r5
   17f94:	cmp	sl, r3
   17f98:	bge	18024 <argp_error@@Base+0xf0c>
   17f9c:	mov	r3, #10
   17fa0:	add	r9, r5, #1
   17fa4:	strb	r3, [r5]
   17fa8:	b	180a4 <argp_error@@Base+0xf8c>
   17fac:	cmp	fp, r5
   17fb0:	bls	18008 <argp_error@@Base+0xef0>
   17fb4:	add	r7, r5, #1
   17fb8:	cmp	fp, r7
   17fbc:	mov	r5, r7
   17fc0:	beq	18008 <argp_error@@Base+0xef0>
   17fc4:	bl	1121c <__ctype_b_loc@plt>
   17fc8:	ldrb	r2, [r5]
   17fcc:	add	r7, r7, #1
   17fd0:	lsl	r2, r2, #1
   17fd4:	ldr	r1, [r0]
   17fd8:	ldrh	r2, [r1, r2]
   17fdc:	tst	r2, #1
   17fe0:	beq	17fb8 <argp_error@@Base+0xea0>
   17fe4:	bl	1121c <__ctype_b_loc@plt>
   17fe8:	mov	r7, r5
   17fec:	ldr	r2, [r0]
   17ff0:	ldrb	r3, [r7, #1]!
   17ff4:	lsl	r3, r3, #1
   17ff8:	ldrh	r3, [r2, r3]
   17ffc:	tst	r3, #1
   18000:	bne	17ff0 <argp_error@@Base+0xed8>
   18004:	b	17f7c <argp_error@@Base+0xe64>
   18008:	cmp	fp, r5
   1800c:	bne	17fe4 <argp_error@@Base+0xecc>
   18010:	b	17e64 <argp_error@@Base+0xd4c>
   18014:	add	r3, r5, #1
   18018:	sub	r3, r7, r3
   1801c:	cmp	sl, r3
   18020:	ble	17f9c <argp_error@@Base+0xe84>
   18024:	cmp	r7, r9
   18028:	bcs	17f9c <argp_error@@Base+0xe84>
   1802c:	ldr	r3, [r4, #32]
   18030:	add	r0, sl, #1
   18034:	sub	r3, r3, r9
   18038:	cmp	r3, r0
   1803c:	ble	1806c <argp_error@@Base+0xf54>
   18040:	sub	r9, r9, r7
   18044:	mov	r2, r9
   18048:	mov	r1, r7
   1804c:	add	r0, r5, r0
   18050:	bl	110f0 <memmove@plt>
   18054:	ldr	r7, [r4, #12]
   18058:	add	r7, r7, #1
   1805c:	add	r7, r5, r7
   18060:	add	r9, r7, r9
   18064:	sub	r8, r9, r6
   18068:	b	17f9c <argp_error@@Base+0xe84>
   1806c:	ldr	r0, [r4, #24]
   18070:	cmp	r5, r0
   18074:	bls	18088 <argp_error@@Base+0xf70>
   18078:	ldr	r3, [r4]
   1807c:	sub	r2, r5, r0
   18080:	mov	r1, #1
   18084:	bl	1115c <fwrite_unlocked@plt>
   18088:	ldr	r1, [r4]
   1808c:	mov	r0, #10
   18090:	bl	11390 <putc_unlocked@plt>
   18094:	ldr	r9, [r4, #24]
   18098:	sub	r6, r6, r9
   1809c:	add	r8, r8, r6
   180a0:	mov	r6, r9
   180a4:	ldr	r2, [r4, #12]
   180a8:	sub	r3, r7, r9
   180ac:	cmp	r3, r2
   180b0:	bge	180ec <argp_error@@Base+0xfd4>
   180b4:	add	r3, r8, #1
   180b8:	add	r3, r6, r3
   180bc:	cmp	r7, r3
   180c0:	bne	180d4 <argp_error@@Base+0xfbc>
   180c4:	ldr	r3, [r4, #32]
   180c8:	sub	r3, r3, r7
   180cc:	cmp	r2, r3
   180d0:	ble	180ec <argp_error@@Base+0xfd4>
   180d4:	mov	r5, #0
   180d8:	ldr	r3, [r4, #12]
   180dc:	cmp	r5, r3
   180e0:	blt	18150 <argp_error@@Base+0x1038>
   180e4:	mov	r3, r9
   180e8:	b	18100 <argp_error@@Base+0xfe8>
   180ec:	mov	r3, r9
   180f0:	ldr	r1, [r4, #12]
   180f4:	sub	r2, r3, r9
   180f8:	cmp	r1, r2
   180fc:	bgt	18144 <argp_error@@Base+0x102c>
   18100:	cmp	r3, r7
   18104:	bcs	18120 <argp_error@@Base+0x1008>
   18108:	add	r2, r6, r8
   1810c:	mov	r0, r3
   18110:	sub	r2, r2, r7
   18114:	mov	r1, r7
   18118:	bl	110f0 <memmove@plt>
   1811c:	mov	r3, r0
   18120:	ldr	r2, [r4, #12]
   18124:	sub	r6, r7, r6
   18128:	sub	r6, r8, r6
   1812c:	cmp	r2, #0
   18130:	add	r6, r3, r6
   18134:	mvneq	r2, #0
   18138:	str	r6, [r4, #28]
   1813c:	str	r2, [r4, #20]
   18140:	b	17ed8 <argp_error@@Base+0xdc0>
   18144:	mov	r2, #32
   18148:	strb	r2, [r3], #1
   1814c:	b	180f0 <argp_error@@Base+0xfd8>
   18150:	ldr	r1, [r4]
   18154:	mov	r0, #32
   18158:	bl	11390 <putc_unlocked@plt>
   1815c:	add	r5, r5, #1
   18160:	b	180d8 <argp_error@@Base+0xfc0>
   18164:	push	{r4, lr}
   18168:	mov	r4, r0
   1816c:	bl	17d54 <argp_error@@Base+0xc3c>
   18170:	ldr	r2, [r4, #28]
   18174:	ldr	r0, [r4, #24]
   18178:	cmp	r2, r0
   1817c:	bls	18190 <argp_error@@Base+0x1078>
   18180:	ldr	r3, [r4]
   18184:	sub	r2, r2, r0
   18188:	mov	r1, #1
   1818c:	bl	1115c <fwrite_unlocked@plt>
   18190:	ldr	r0, [r4, #24]
   18194:	bl	13710 <argp_parse@@Base+0xa9c>
   18198:	mov	r0, r4
   1819c:	pop	{r4, lr}
   181a0:	b	13710 <argp_parse@@Base+0xa9c>
   181a4:	ldr	r3, [r0, #32]
   181a8:	ldr	r2, [r0, #28]
   181ac:	sub	r3, r3, r2
   181b0:	cmp	r3, r1
   181b4:	bcc	181c0 <argp_error@@Base+0x10a8>
   181b8:	mov	r0, #1
   181bc:	bx	lr
   181c0:	push	{r4, r5, r6, lr}
   181c4:	mov	r4, r0
   181c8:	mov	r5, r1
   181cc:	bl	17d54 <argp_error@@Base+0xc3c>
   181d0:	ldr	r0, [r4, #24]
   181d4:	ldr	r2, [r4, #28]
   181d8:	ldr	r3, [r4]
   181dc:	sub	r2, r2, r0
   181e0:	mov	r1, #1
   181e4:	bl	1115c <fwrite_unlocked@plt>
   181e8:	ldr	r2, [r4, #28]
   181ec:	mov	r1, r0
   181f0:	ldr	r0, [r4, #24]
   181f4:	sub	r3, r2, r0
   181f8:	cmp	r1, r3
   181fc:	bne	18224 <argp_error@@Base+0x110c>
   18200:	ldr	r1, [r4, #32]
   18204:	mov	r3, #0
   18208:	sub	r1, r1, r0
   1820c:	cmp	r5, r1
   18210:	str	r0, [r4, #28]
   18214:	str	r3, [r4, #16]
   18218:	bhi	1824c <argp_error@@Base+0x1134>
   1821c:	mov	r0, #1
   18220:	pop	{r4, r5, r6, pc}
   18224:	ldr	r3, [r4, #16]
   18228:	sub	r2, r2, r1
   1822c:	sub	r3, r3, r1
   18230:	str	r2, [r4, #28]
   18234:	str	r3, [r4, #16]
   18238:	sub	r2, r2, r0
   1823c:	add	r1, r0, r1
   18240:	bl	110f0 <memmove@plt>
   18244:	mov	r0, #0
   18248:	pop	{r4, r5, r6, pc}
   1824c:	adds	r5, r5, r1
   18250:	bcc	18264 <argp_error@@Base+0x114c>
   18254:	bl	11258 <__errno_location@plt>
   18258:	mov	r3, #12
   1825c:	str	r3, [r0]
   18260:	b	18244 <argp_error@@Base+0x112c>
   18264:	mov	r1, r5
   18268:	bl	144fc <_obstack_memory_used@@Base+0x9fc>
   1826c:	cmp	r0, #0
   18270:	beq	18254 <argp_error@@Base+0x113c>
   18274:	add	r5, r0, r5
   18278:	str	r0, [r4, #24]
   1827c:	str	r5, [r4, #32]
   18280:	str	r0, [r4, #28]
   18284:	b	1821c <argp_error@@Base+0x1104>
   18288:	push	{r1, r2, r3}
   1828c:	push	{r0, r1, r2, r4, r5, r6, lr}
   18290:	mov	r4, r0
   18294:	mov	r1, #150	; 0x96
   18298:	add	r6, sp, #32
   1829c:	mov	r0, r4
   182a0:	bl	181a4 <argp_error@@Base+0x108c>
   182a4:	cmp	r0, #0
   182a8:	bne	182c0 <argp_error@@Base+0x11a8>
   182ac:	mvn	r0, #0
   182b0:	add	sp, sp, #12
   182b4:	pop	{r4, r5, r6, lr}
   182b8:	add	sp, sp, #12
   182bc:	bx	lr
   182c0:	ldr	r0, [r4, #28]
   182c4:	ldr	r5, [r4, #32]
   182c8:	mov	r3, r6
   182cc:	sub	r5, r5, r0
   182d0:	ldr	r2, [sp, #28]
   182d4:	mov	r1, r5
   182d8:	str	r6, [sp, #4]
   182dc:	bl	112e8 <vsnprintf@plt>
   182e0:	cmp	r5, r0
   182e4:	addls	r1, r0, #1
   182e8:	bls	1829c <argp_error@@Base+0x1184>
   182ec:	ldr	r3, [r4, #28]
   182f0:	add	r3, r3, r0
   182f4:	str	r3, [r4, #28]
   182f8:	b	182b0 <argp_error@@Base+0x1198>
   182fc:	subs	r2, r1, #1
   18300:	bxeq	lr
   18304:	bcc	184dc <argp_error@@Base+0x13c4>
   18308:	cmp	r0, r1
   1830c:	bls	184c0 <argp_error@@Base+0x13a8>
   18310:	tst	r1, r2
   18314:	beq	184cc <argp_error@@Base+0x13b4>
   18318:	clz	r3, r0
   1831c:	clz	r2, r1
   18320:	sub	r3, r2, r3
   18324:	rsbs	r3, r3, #31
   18328:	addne	r3, r3, r3, lsl #1
   1832c:	mov	r2, #0
   18330:	addne	pc, pc, r3, lsl #2
   18334:	nop			; (mov r0, r0)
   18338:	cmp	r0, r1, lsl #31
   1833c:	adc	r2, r2, r2
   18340:	subcs	r0, r0, r1, lsl #31
   18344:	cmp	r0, r1, lsl #30
   18348:	adc	r2, r2, r2
   1834c:	subcs	r0, r0, r1, lsl #30
   18350:	cmp	r0, r1, lsl #29
   18354:	adc	r2, r2, r2
   18358:	subcs	r0, r0, r1, lsl #29
   1835c:	cmp	r0, r1, lsl #28
   18360:	adc	r2, r2, r2
   18364:	subcs	r0, r0, r1, lsl #28
   18368:	cmp	r0, r1, lsl #27
   1836c:	adc	r2, r2, r2
   18370:	subcs	r0, r0, r1, lsl #27
   18374:	cmp	r0, r1, lsl #26
   18378:	adc	r2, r2, r2
   1837c:	subcs	r0, r0, r1, lsl #26
   18380:	cmp	r0, r1, lsl #25
   18384:	adc	r2, r2, r2
   18388:	subcs	r0, r0, r1, lsl #25
   1838c:	cmp	r0, r1, lsl #24
   18390:	adc	r2, r2, r2
   18394:	subcs	r0, r0, r1, lsl #24
   18398:	cmp	r0, r1, lsl #23
   1839c:	adc	r2, r2, r2
   183a0:	subcs	r0, r0, r1, lsl #23
   183a4:	cmp	r0, r1, lsl #22
   183a8:	adc	r2, r2, r2
   183ac:	subcs	r0, r0, r1, lsl #22
   183b0:	cmp	r0, r1, lsl #21
   183b4:	adc	r2, r2, r2
   183b8:	subcs	r0, r0, r1, lsl #21
   183bc:	cmp	r0, r1, lsl #20
   183c0:	adc	r2, r2, r2
   183c4:	subcs	r0, r0, r1, lsl #20
   183c8:	cmp	r0, r1, lsl #19
   183cc:	adc	r2, r2, r2
   183d0:	subcs	r0, r0, r1, lsl #19
   183d4:	cmp	r0, r1, lsl #18
   183d8:	adc	r2, r2, r2
   183dc:	subcs	r0, r0, r1, lsl #18
   183e0:	cmp	r0, r1, lsl #17
   183e4:	adc	r2, r2, r2
   183e8:	subcs	r0, r0, r1, lsl #17
   183ec:	cmp	r0, r1, lsl #16
   183f0:	adc	r2, r2, r2
   183f4:	subcs	r0, r0, r1, lsl #16
   183f8:	cmp	r0, r1, lsl #15
   183fc:	adc	r2, r2, r2
   18400:	subcs	r0, r0, r1, lsl #15
   18404:	cmp	r0, r1, lsl #14
   18408:	adc	r2, r2, r2
   1840c:	subcs	r0, r0, r1, lsl #14
   18410:	cmp	r0, r1, lsl #13
   18414:	adc	r2, r2, r2
   18418:	subcs	r0, r0, r1, lsl #13
   1841c:	cmp	r0, r1, lsl #12
   18420:	adc	r2, r2, r2
   18424:	subcs	r0, r0, r1, lsl #12
   18428:	cmp	r0, r1, lsl #11
   1842c:	adc	r2, r2, r2
   18430:	subcs	r0, r0, r1, lsl #11
   18434:	cmp	r0, r1, lsl #10
   18438:	adc	r2, r2, r2
   1843c:	subcs	r0, r0, r1, lsl #10
   18440:	cmp	r0, r1, lsl #9
   18444:	adc	r2, r2, r2
   18448:	subcs	r0, r0, r1, lsl #9
   1844c:	cmp	r0, r1, lsl #8
   18450:	adc	r2, r2, r2
   18454:	subcs	r0, r0, r1, lsl #8
   18458:	cmp	r0, r1, lsl #7
   1845c:	adc	r2, r2, r2
   18460:	subcs	r0, r0, r1, lsl #7
   18464:	cmp	r0, r1, lsl #6
   18468:	adc	r2, r2, r2
   1846c:	subcs	r0, r0, r1, lsl #6
   18470:	cmp	r0, r1, lsl #5
   18474:	adc	r2, r2, r2
   18478:	subcs	r0, r0, r1, lsl #5
   1847c:	cmp	r0, r1, lsl #4
   18480:	adc	r2, r2, r2
   18484:	subcs	r0, r0, r1, lsl #4
   18488:	cmp	r0, r1, lsl #3
   1848c:	adc	r2, r2, r2
   18490:	subcs	r0, r0, r1, lsl #3
   18494:	cmp	r0, r1, lsl #2
   18498:	adc	r2, r2, r2
   1849c:	subcs	r0, r0, r1, lsl #2
   184a0:	cmp	r0, r1, lsl #1
   184a4:	adc	r2, r2, r2
   184a8:	subcs	r0, r0, r1, lsl #1
   184ac:	cmp	r0, r1
   184b0:	adc	r2, r2, r2
   184b4:	subcs	r0, r0, r1
   184b8:	mov	r0, r2
   184bc:	bx	lr
   184c0:	moveq	r0, #1
   184c4:	movne	r0, #0
   184c8:	bx	lr
   184cc:	clz	r2, r1
   184d0:	rsb	r2, r2, #31
   184d4:	lsr	r0, r0, r2
   184d8:	bx	lr
   184dc:	cmp	r0, #0
   184e0:	mvnne	r0, #0
   184e4:	b	18748 <argp_error@@Base+0x1630>
   184e8:	cmp	r1, #0
   184ec:	beq	184dc <argp_error@@Base+0x13c4>
   184f0:	push	{r0, r1, lr}
   184f4:	bl	182fc <argp_error@@Base+0x11e4>
   184f8:	pop	{r1, r2, lr}
   184fc:	mul	r3, r2, r0
   18500:	sub	r1, r1, r3
   18504:	bx	lr
   18508:	cmp	r1, #0
   1850c:	beq	18718 <argp_error@@Base+0x1600>
   18510:	eor	ip, r0, r1
   18514:	rsbmi	r1, r1, #0
   18518:	subs	r2, r1, #1
   1851c:	beq	186e4 <argp_error@@Base+0x15cc>
   18520:	movs	r3, r0
   18524:	rsbmi	r3, r0, #0
   18528:	cmp	r3, r1
   1852c:	bls	186f0 <argp_error@@Base+0x15d8>
   18530:	tst	r1, r2
   18534:	beq	18700 <argp_error@@Base+0x15e8>
   18538:	clz	r2, r3
   1853c:	clz	r0, r1
   18540:	sub	r2, r0, r2
   18544:	rsbs	r2, r2, #31
   18548:	addne	r2, r2, r2, lsl #1
   1854c:	mov	r0, #0
   18550:	addne	pc, pc, r2, lsl #2
   18554:	nop			; (mov r0, r0)
   18558:	cmp	r3, r1, lsl #31
   1855c:	adc	r0, r0, r0
   18560:	subcs	r3, r3, r1, lsl #31
   18564:	cmp	r3, r1, lsl #30
   18568:	adc	r0, r0, r0
   1856c:	subcs	r3, r3, r1, lsl #30
   18570:	cmp	r3, r1, lsl #29
   18574:	adc	r0, r0, r0
   18578:	subcs	r3, r3, r1, lsl #29
   1857c:	cmp	r3, r1, lsl #28
   18580:	adc	r0, r0, r0
   18584:	subcs	r3, r3, r1, lsl #28
   18588:	cmp	r3, r1, lsl #27
   1858c:	adc	r0, r0, r0
   18590:	subcs	r3, r3, r1, lsl #27
   18594:	cmp	r3, r1, lsl #26
   18598:	adc	r0, r0, r0
   1859c:	subcs	r3, r3, r1, lsl #26
   185a0:	cmp	r3, r1, lsl #25
   185a4:	adc	r0, r0, r0
   185a8:	subcs	r3, r3, r1, lsl #25
   185ac:	cmp	r3, r1, lsl #24
   185b0:	adc	r0, r0, r0
   185b4:	subcs	r3, r3, r1, lsl #24
   185b8:	cmp	r3, r1, lsl #23
   185bc:	adc	r0, r0, r0
   185c0:	subcs	r3, r3, r1, lsl #23
   185c4:	cmp	r3, r1, lsl #22
   185c8:	adc	r0, r0, r0
   185cc:	subcs	r3, r3, r1, lsl #22
   185d0:	cmp	r3, r1, lsl #21
   185d4:	adc	r0, r0, r0
   185d8:	subcs	r3, r3, r1, lsl #21
   185dc:	cmp	r3, r1, lsl #20
   185e0:	adc	r0, r0, r0
   185e4:	subcs	r3, r3, r1, lsl #20
   185e8:	cmp	r3, r1, lsl #19
   185ec:	adc	r0, r0, r0
   185f0:	subcs	r3, r3, r1, lsl #19
   185f4:	cmp	r3, r1, lsl #18
   185f8:	adc	r0, r0, r0
   185fc:	subcs	r3, r3, r1, lsl #18
   18600:	cmp	r3, r1, lsl #17
   18604:	adc	r0, r0, r0
   18608:	subcs	r3, r3, r1, lsl #17
   1860c:	cmp	r3, r1, lsl #16
   18610:	adc	r0, r0, r0
   18614:	subcs	r3, r3, r1, lsl #16
   18618:	cmp	r3, r1, lsl #15
   1861c:	adc	r0, r0, r0
   18620:	subcs	r3, r3, r1, lsl #15
   18624:	cmp	r3, r1, lsl #14
   18628:	adc	r0, r0, r0
   1862c:	subcs	r3, r3, r1, lsl #14
   18630:	cmp	r3, r1, lsl #13
   18634:	adc	r0, r0, r0
   18638:	subcs	r3, r3, r1, lsl #13
   1863c:	cmp	r3, r1, lsl #12
   18640:	adc	r0, r0, r0
   18644:	subcs	r3, r3, r1, lsl #12
   18648:	cmp	r3, r1, lsl #11
   1864c:	adc	r0, r0, r0
   18650:	subcs	r3, r3, r1, lsl #11
   18654:	cmp	r3, r1, lsl #10
   18658:	adc	r0, r0, r0
   1865c:	subcs	r3, r3, r1, lsl #10
   18660:	cmp	r3, r1, lsl #9
   18664:	adc	r0, r0, r0
   18668:	subcs	r3, r3, r1, lsl #9
   1866c:	cmp	r3, r1, lsl #8
   18670:	adc	r0, r0, r0
   18674:	subcs	r3, r3, r1, lsl #8
   18678:	cmp	r3, r1, lsl #7
   1867c:	adc	r0, r0, r0
   18680:	subcs	r3, r3, r1, lsl #7
   18684:	cmp	r3, r1, lsl #6
   18688:	adc	r0, r0, r0
   1868c:	subcs	r3, r3, r1, lsl #6
   18690:	cmp	r3, r1, lsl #5
   18694:	adc	r0, r0, r0
   18698:	subcs	r3, r3, r1, lsl #5
   1869c:	cmp	r3, r1, lsl #4
   186a0:	adc	r0, r0, r0
   186a4:	subcs	r3, r3, r1, lsl #4
   186a8:	cmp	r3, r1, lsl #3
   186ac:	adc	r0, r0, r0
   186b0:	subcs	r3, r3, r1, lsl #3
   186b4:	cmp	r3, r1, lsl #2
   186b8:	adc	r0, r0, r0
   186bc:	subcs	r3, r3, r1, lsl #2
   186c0:	cmp	r3, r1, lsl #1
   186c4:	adc	r0, r0, r0
   186c8:	subcs	r3, r3, r1, lsl #1
   186cc:	cmp	r3, r1
   186d0:	adc	r0, r0, r0
   186d4:	subcs	r3, r3, r1
   186d8:	cmp	ip, #0
   186dc:	rsbmi	r0, r0, #0
   186e0:	bx	lr
   186e4:	teq	ip, r0
   186e8:	rsbmi	r0, r0, #0
   186ec:	bx	lr
   186f0:	movcc	r0, #0
   186f4:	asreq	r0, ip, #31
   186f8:	orreq	r0, r0, #1
   186fc:	bx	lr
   18700:	clz	r2, r1
   18704:	rsb	r2, r2, #31
   18708:	cmp	ip, #0
   1870c:	lsr	r0, r3, r2
   18710:	rsbmi	r0, r0, #0
   18714:	bx	lr
   18718:	cmp	r0, #0
   1871c:	mvngt	r0, #-2147483648	; 0x80000000
   18720:	movlt	r0, #-2147483648	; 0x80000000
   18724:	b	18748 <argp_error@@Base+0x1630>
   18728:	cmp	r1, #0
   1872c:	beq	18718 <argp_error@@Base+0x1600>
   18730:	push	{r0, r1, lr}
   18734:	bl	18510 <argp_error@@Base+0x13f8>
   18738:	pop	{r1, r2, lr}
   1873c:	mul	r3, r2, r0
   18740:	sub	r1, r1, r3
   18744:	bx	lr
   18748:	push	{r1, lr}
   1874c:	mov	r0, #8
   18750:	bl	110c0 <raise@plt>
   18754:	pop	{r1, pc}
   18758:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1875c:	mov	r7, r0
   18760:	ldr	r6, [pc, #72]	; 187b0 <argp_error@@Base+0x1698>
   18764:	ldr	r5, [pc, #72]	; 187b4 <argp_error@@Base+0x169c>
   18768:	add	r6, pc, r6
   1876c:	add	r5, pc, r5
   18770:	sub	r6, r6, r5
   18774:	mov	r8, r1
   18778:	mov	r9, r2
   1877c:	bl	1107c <fdopen@plt-0x20>
   18780:	asrs	r6, r6, #2
   18784:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   18788:	mov	r4, #0
   1878c:	add	r4, r4, #1
   18790:	ldr	r3, [r5], #4
   18794:	mov	r2, r9
   18798:	mov	r1, r8
   1879c:	mov	r0, r7
   187a0:	blx	r3
   187a4:	cmp	r6, r4
   187a8:	bne	1878c <argp_error@@Base+0x1674>
   187ac:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   187b0:	andeq	r2, r1, r0, lsr #15
   187b4:	muleq	r1, r8, r7
   187b8:	bx	lr

Disassembly of section .fini:

000187bc <.fini>:
   187bc:	push	{r3, lr}
   187c0:	pop	{r3, pc}
