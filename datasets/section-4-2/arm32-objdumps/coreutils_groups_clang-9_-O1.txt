
../repos/coreutils/src/groups:     file format elf32-littlearm


Disassembly of section .init:

00010da4 <.init>:
   10da4:	push	{r3, lr}
   10da8:	bl	11070 <putchar_unlocked@plt+0x48>
   10dac:	pop	{r3, pc}

Disassembly of section .plt:

00010db0 <calloc@plt-0x14>:
   10db0:	push	{lr}		; (str lr, [sp, #-4]!)
   10db4:	ldr	lr, [pc, #4]	; 10dc0 <calloc@plt-0x4>
   10db8:	add	lr, pc, lr
   10dbc:	ldr	pc, [lr, #8]!
   10dc0:	andeq	r5, r1, r0, asr #4

00010dc4 <calloc@plt>:
   10dc4:	add	ip, pc, #0, 12
   10dc8:	add	ip, ip, #86016	; 0x15000
   10dcc:	ldr	pc, [ip, #576]!	; 0x240

00010dd0 <fputs_unlocked@plt>:
   10dd0:	add	ip, pc, #0, 12
   10dd4:	add	ip, ip, #86016	; 0x15000
   10dd8:	ldr	pc, [ip, #568]!	; 0x238

00010ddc <raise@plt>:
   10ddc:	add	ip, pc, #0, 12
   10de0:	add	ip, ip, #86016	; 0x15000
   10de4:	ldr	pc, [ip, #560]!	; 0x230

00010de8 <getpwnam@plt>:
   10de8:	add	ip, pc, #0, 12
   10dec:	add	ip, ip, #86016	; 0x15000
   10df0:	ldr	pc, [ip, #552]!	; 0x228

00010df4 <strcmp@plt>:
   10df4:	add	ip, pc, #0, 12
   10df8:	add	ip, ip, #86016	; 0x15000
   10dfc:	ldr	pc, [ip, #544]!	; 0x220

00010e00 <getpwuid@plt>:
   10e00:	add	ip, pc, #0, 12
   10e04:	add	ip, ip, #86016	; 0x15000
   10e08:	ldr	pc, [ip, #536]!	; 0x218

00010e0c <fflush@plt>:
   10e0c:	add	ip, pc, #0, 12
   10e10:	add	ip, ip, #86016	; 0x15000
   10e14:	ldr	pc, [ip, #528]!	; 0x210

00010e18 <getuid@plt>:
   10e18:	add	ip, pc, #0, 12
   10e1c:	add	ip, ip, #86016	; 0x15000
   10e20:	ldr	pc, [ip, #520]!	; 0x208

00010e24 <free@plt>:
   10e24:	add	ip, pc, #0, 12
   10e28:	add	ip, ip, #86016	; 0x15000
   10e2c:	ldr	pc, [ip, #512]!	; 0x200

00010e30 <_exit@plt>:
   10e30:	add	ip, pc, #0, 12
   10e34:	add	ip, ip, #86016	; 0x15000
   10e38:	ldr	pc, [ip, #504]!	; 0x1f8

00010e3c <memcpy@plt>:
   10e3c:	add	ip, pc, #0, 12
   10e40:	add	ip, ip, #86016	; 0x15000
   10e44:	ldr	pc, [ip, #496]!	; 0x1f0

00010e48 <mbsinit@plt>:
   10e48:	add	ip, pc, #0, 12
   10e4c:	add	ip, ip, #86016	; 0x15000
   10e50:	ldr	pc, [ip, #488]!	; 0x1e8

00010e54 <dcgettext@plt>:
   10e54:	add	ip, pc, #0, 12
   10e58:	add	ip, ip, #86016	; 0x15000
   10e5c:	ldr	pc, [ip, #480]!	; 0x1e0

00010e60 <realloc@plt>:
   10e60:	add	ip, pc, #0, 12
   10e64:	add	ip, ip, #86016	; 0x15000
   10e68:	ldr	pc, [ip, #472]!	; 0x1d8

00010e6c <textdomain@plt>:
   10e6c:	add	ip, pc, #0, 12
   10e70:	add	ip, ip, #86016	; 0x15000
   10e74:	ldr	pc, [ip, #464]!	; 0x1d0

00010e78 <iswprint@plt>:
   10e78:	add	ip, pc, #0, 12
   10e7c:	add	ip, ip, #86016	; 0x15000
   10e80:	ldr	pc, [ip, #456]!	; 0x1c8

00010e84 <getegid@plt>:
   10e84:	add	ip, pc, #0, 12
   10e88:	add	ip, ip, #86016	; 0x15000
   10e8c:	ldr	pc, [ip, #448]!	; 0x1c0

00010e90 <fwrite@plt>:
   10e90:	add	ip, pc, #0, 12
   10e94:	add	ip, ip, #86016	; 0x15000
   10e98:	ldr	pc, [ip, #440]!	; 0x1b8

00010e9c <lseek64@plt>:
   10e9c:	add	ip, pc, #0, 12
   10ea0:	add	ip, ip, #86016	; 0x15000
   10ea4:	ldr	pc, [ip, #432]!	; 0x1b0

00010ea8 <__ctype_get_mb_cur_max@plt>:
   10ea8:	add	ip, pc, #0, 12
   10eac:	add	ip, ip, #86016	; 0x15000
   10eb0:	ldr	pc, [ip, #424]!	; 0x1a8

00010eb4 <__fpending@plt>:
   10eb4:	add	ip, pc, #0, 12
   10eb8:	add	ip, ip, #86016	; 0x15000
   10ebc:	ldr	pc, [ip, #416]!	; 0x1a0

00010ec0 <ferror_unlocked@plt>:
   10ec0:	add	ip, pc, #0, 12
   10ec4:	add	ip, ip, #86016	; 0x15000
   10ec8:	ldr	pc, [ip, #408]!	; 0x198

00010ecc <mbrtowc@plt>:
   10ecc:	add	ip, pc, #0, 12
   10ed0:	add	ip, ip, #86016	; 0x15000
   10ed4:	ldr	pc, [ip, #400]!	; 0x190

00010ed8 <error@plt>:
   10ed8:	add	ip, pc, #0, 12
   10edc:	add	ip, ip, #86016	; 0x15000
   10ee0:	ldr	pc, [ip, #392]!	; 0x188

00010ee4 <malloc@plt>:
   10ee4:	add	ip, pc, #0, 12
   10ee8:	add	ip, ip, #86016	; 0x15000
   10eec:	ldr	pc, [ip, #384]!	; 0x180

00010ef0 <__libc_start_main@plt>:
   10ef0:	add	ip, pc, #0, 12
   10ef4:	add	ip, ip, #86016	; 0x15000
   10ef8:	ldr	pc, [ip, #376]!	; 0x178

00010efc <__freading@plt>:
   10efc:	add	ip, pc, #0, 12
   10f00:	add	ip, ip, #86016	; 0x15000
   10f04:	ldr	pc, [ip, #368]!	; 0x170

00010f08 <__gmon_start__@plt>:
   10f08:	add	ip, pc, #0, 12
   10f0c:	add	ip, ip, #86016	; 0x15000
   10f10:	ldr	pc, [ip, #360]!	; 0x168

00010f14 <getopt_long@plt>:
   10f14:	add	ip, pc, #0, 12
   10f18:	add	ip, ip, #86016	; 0x15000
   10f1c:	ldr	pc, [ip, #352]!	; 0x160

00010f20 <__ctype_b_loc@plt>:
   10f20:	add	ip, pc, #0, 12
   10f24:	add	ip, ip, #86016	; 0x15000
   10f28:	ldr	pc, [ip, #344]!	; 0x158

00010f2c <exit@plt>:
   10f2c:	add	ip, pc, #0, 12
   10f30:	add	ip, ip, #86016	; 0x15000
   10f34:	ldr	pc, [ip, #336]!	; 0x150

00010f38 <bcmp@plt>:
   10f38:	add	ip, pc, #0, 12
   10f3c:	add	ip, ip, #86016	; 0x15000
   10f40:	ldr	pc, [ip, #328]!	; 0x148

00010f44 <strlen@plt>:
   10f44:	add	ip, pc, #0, 12
   10f48:	add	ip, ip, #86016	; 0x15000
   10f4c:	ldr	pc, [ip, #320]!	; 0x140

00010f50 <__errno_location@plt>:
   10f50:	add	ip, pc, #0, 12
   10f54:	add	ip, ip, #86016	; 0x15000
   10f58:	ldr	pc, [ip, #312]!	; 0x138

00010f5c <__cxa_atexit@plt>:
   10f5c:	add	ip, pc, #0, 12
   10f60:	add	ip, ip, #86016	; 0x15000
   10f64:	ldr	pc, [ip, #304]!	; 0x130

00010f68 <getgid@plt>:
   10f68:	add	ip, pc, #0, 12
   10f6c:	add	ip, ip, #86016	; 0x15000
   10f70:	ldr	pc, [ip, #296]!	; 0x128

00010f74 <getgrouplist@plt>:
   10f74:	add	ip, pc, #0, 12
   10f78:	add	ip, ip, #86016	; 0x15000
   10f7c:	ldr	pc, [ip, #288]!	; 0x120

00010f80 <memset@plt>:
   10f80:	add	ip, pc, #0, 12
   10f84:	add	ip, ip, #86016	; 0x15000
   10f88:	ldr	pc, [ip, #280]!	; 0x118

00010f8c <__printf_chk@plt>:
   10f8c:	add	ip, pc, #0, 12
   10f90:	add	ip, ip, #86016	; 0x15000
   10f94:	ldr	pc, [ip, #272]!	; 0x110

00010f98 <fileno@plt>:
   10f98:	add	ip, pc, #0, 12
   10f9c:	add	ip, ip, #86016	; 0x15000
   10fa0:	ldr	pc, [ip, #264]!	; 0x108

00010fa4 <__fprintf_chk@plt>:
   10fa4:	add	ip, pc, #0, 12
   10fa8:	add	ip, ip, #86016	; 0x15000
   10fac:	ldr	pc, [ip, #256]!	; 0x100

00010fb0 <fclose@plt>:
   10fb0:	add	ip, pc, #0, 12
   10fb4:	add	ip, ip, #86016	; 0x15000
   10fb8:	ldr	pc, [ip, #248]!	; 0xf8

00010fbc <fseeko64@plt>:
   10fbc:	add	ip, pc, #0, 12
   10fc0:	add	ip, ip, #86016	; 0x15000
   10fc4:	ldr	pc, [ip, #240]!	; 0xf0

00010fc8 <setlocale@plt>:
   10fc8:	add	ip, pc, #0, 12
   10fcc:	add	ip, ip, #86016	; 0x15000
   10fd0:	ldr	pc, [ip, #232]!	; 0xe8

00010fd4 <strrchr@plt>:
   10fd4:	add	ip, pc, #0, 12
   10fd8:	add	ip, ip, #86016	; 0x15000
   10fdc:	ldr	pc, [ip, #224]!	; 0xe0

00010fe0 <nl_langinfo@plt>:
   10fe0:	add	ip, pc, #0, 12
   10fe4:	add	ip, ip, #86016	; 0x15000
   10fe8:	ldr	pc, [ip, #216]!	; 0xd8

00010fec <getgroups@plt>:
   10fec:	add	ip, pc, #0, 12
   10ff0:	add	ip, ip, #86016	; 0x15000
   10ff4:	ldr	pc, [ip, #208]!	; 0xd0

00010ff8 <bindtextdomain@plt>:
   10ff8:	add	ip, pc, #0, 12
   10ffc:	add	ip, ip, #86016	; 0x15000
   11000:	ldr	pc, [ip, #200]!	; 0xc8

00011004 <strncmp@plt>:
   11004:	add	ip, pc, #0, 12
   11008:	add	ip, ip, #86016	; 0x15000
   1100c:	ldr	pc, [ip, #192]!	; 0xc0

00011010 <abort@plt>:
   11010:	add	ip, pc, #0, 12
   11014:	add	ip, ip, #86016	; 0x15000
   11018:	ldr	pc, [ip, #184]!	; 0xb8

0001101c <getgrgid@plt>:
   1101c:	add	ip, pc, #0, 12
   11020:	add	ip, ip, #86016	; 0x15000
   11024:	ldr	pc, [ip, #176]!	; 0xb0

00011028 <putchar_unlocked@plt>:
   11028:	add	ip, pc, #0, 12
   1102c:	add	ip, ip, #86016	; 0x15000
   11030:	ldr	pc, [ip, #168]!	; 0xa8

Disassembly of section .text:

00011034 <.text>:
   11034:	mov	fp, #0
   11038:	mov	lr, #0
   1103c:	pop	{r1}		; (ldr r1, [sp], #4)
   11040:	mov	r2, sp
   11044:	push	{r2}		; (str r2, [sp, #-4]!)
   11048:	push	{r0}		; (str r0, [sp, #-4]!)
   1104c:	ldr	ip, [pc, #16]	; 11064 <putchar_unlocked@plt+0x3c>
   11050:	push	{ip}		; (str ip, [sp, #-4]!)
   11054:	ldr	r0, [pc, #12]	; 11068 <putchar_unlocked@plt+0x40>
   11058:	ldr	r3, [pc, #12]	; 1106c <putchar_unlocked@plt+0x44>
   1105c:	bl	10ef0 <__libc_start_main@plt>
   11060:	bl	11010 <abort@plt>
   11064:	andeq	r4, r1, r4, asr fp
   11068:	muleq	r1, r8, r3
   1106c:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   11070:	ldr	r3, [pc, #20]	; 1108c <putchar_unlocked@plt+0x64>
   11074:	ldr	r2, [pc, #20]	; 11090 <putchar_unlocked@plt+0x68>
   11078:	add	r3, pc, r3
   1107c:	ldr	r2, [r3, r2]
   11080:	cmp	r2, #0
   11084:	bxeq	lr
   11088:	b	10f08 <__gmon_start__@plt>
   1108c:	andeq	r4, r1, r0, lsl #31
   11090:	ldrdeq	r0, [r0], -ip
   11094:	ldr	r0, [pc, #24]	; 110b4 <putchar_unlocked@plt+0x8c>
   11098:	ldr	r3, [pc, #24]	; 110b8 <putchar_unlocked@plt+0x90>
   1109c:	cmp	r3, r0
   110a0:	bxeq	lr
   110a4:	ldr	r3, [pc, #16]	; 110bc <putchar_unlocked@plt+0x94>
   110a8:	cmp	r3, #0
   110ac:	bxeq	lr
   110b0:	bx	r3
   110b4:	andeq	r6, r2, r0, lsr r1
   110b8:	andeq	r6, r2, r0, lsr r1
   110bc:	andeq	r0, r0, r0
   110c0:	ldr	r0, [pc, #36]	; 110ec <putchar_unlocked@plt+0xc4>
   110c4:	ldr	r1, [pc, #36]	; 110f0 <putchar_unlocked@plt+0xc8>
   110c8:	sub	r1, r1, r0
   110cc:	asr	r1, r1, #2
   110d0:	add	r1, r1, r1, lsr #31
   110d4:	asrs	r1, r1, #1
   110d8:	bxeq	lr
   110dc:	ldr	r3, [pc, #16]	; 110f4 <putchar_unlocked@plt+0xcc>
   110e0:	cmp	r3, #0
   110e4:	bxeq	lr
   110e8:	bx	r3
   110ec:	andeq	r6, r2, r0, lsr r1
   110f0:	andeq	r6, r2, r0, lsr r1
   110f4:	andeq	r0, r0, r0
   110f8:	push	{r4, lr}
   110fc:	ldr	r4, [pc, #24]	; 1111c <putchar_unlocked@plt+0xf4>
   11100:	ldrb	r3, [r4]
   11104:	cmp	r3, #0
   11108:	popne	{r4, pc}
   1110c:	bl	11094 <putchar_unlocked@plt+0x6c>
   11110:	mov	r3, #1
   11114:	strb	r3, [r4]
   11118:	pop	{r4, pc}
   1111c:	andeq	r6, r2, r8, asr #2
   11120:	b	110c0 <putchar_unlocked@plt+0x98>
   11124:	push	{fp, lr}
   11128:	mov	fp, sp
   1112c:	mov	r4, r0
   11130:	cmp	r0, #0
   11134:	bne	111cc <putchar_unlocked@plt+0x1a4>
   11138:	movw	r1, #19363	; 0x4ba3
   1113c:	movt	r1, #1
   11140:	mov	r0, #0
   11144:	mov	r2, #5
   11148:	bl	10e54 <dcgettext@plt>
   1114c:	mov	r1, r0
   11150:	movw	r0, #24936	; 0x6168
   11154:	movt	r0, #2
   11158:	ldr	r2, [r0]
   1115c:	mov	r0, #1
   11160:	bl	10f8c <__printf_chk@plt>
   11164:	movw	r1, #19400	; 0x4bc8
   11168:	movt	r1, #1
   1116c:	mov	r0, #0
   11170:	mov	r2, #5
   11174:	bl	10e54 <dcgettext@plt>
   11178:	movw	r5, #24900	; 0x6144
   1117c:	movt	r5, #2
   11180:	ldr	r1, [r5]
   11184:	bl	10dd0 <fputs_unlocked@plt>
   11188:	movw	r1, #19555	; 0x4c63
   1118c:	movt	r1, #1
   11190:	mov	r0, #0
   11194:	mov	r2, #5
   11198:	bl	10e54 <dcgettext@plt>
   1119c:	ldr	r1, [r5]
   111a0:	bl	10dd0 <fputs_unlocked@plt>
   111a4:	movw	r1, #19600	; 0x4c90
   111a8:	movt	r1, #1
   111ac:	mov	r0, #0
   111b0:	mov	r2, #5
   111b4:	bl	10e54 <dcgettext@plt>
   111b8:	ldr	r1, [r5]
   111bc:	bl	10dd0 <fputs_unlocked@plt>
   111c0:	bl	11210 <putchar_unlocked@plt+0x1e8>
   111c4:	mov	r0, r4
   111c8:	bl	10f2c <exit@plt>
   111cc:	movw	r0, #24896	; 0x6140
   111d0:	movt	r0, #2
   111d4:	ldr	r5, [r0]
   111d8:	movw	r1, #19324	; 0x4b7c
   111dc:	movt	r1, #1
   111e0:	mov	r0, #0
   111e4:	mov	r2, #5
   111e8:	bl	10e54 <dcgettext@plt>
   111ec:	mov	r2, r0
   111f0:	movw	r0, #24936	; 0x6168
   111f4:	movt	r0, #2
   111f8:	ldr	r3, [r0]
   111fc:	mov	r0, r5
   11200:	mov	r1, #1
   11204:	bl	10fa4 <__fprintf_chk@plt>
   11208:	mov	r0, r4
   1120c:	bl	10f2c <exit@plt>
   11210:	push	{r4, r5, r6, sl, fp, lr}
   11214:	add	fp, sp, #16
   11218:	sub	sp, sp, #56	; 0x38
   1121c:	movw	r0, #20192	; 0x4ee0
   11220:	movt	r0, #1
   11224:	add	r1, r0, #32
   11228:	mov	r2, #48	; 0x30
   1122c:	vld1.64	{d16-d17}, [r1]
   11230:	mov	r6, sp
   11234:	add	r1, r6, #32
   11238:	add	r3, r0, #16
   1123c:	vld1.64	{d18-d19}, [r0], r2
   11240:	vld1.64	{d20-d21}, [r3]
   11244:	vldr	d22, [r0]
   11248:	vst1.64	{d16-d17}, [r1]
   1124c:	add	r0, r6, #16
   11250:	vst1.64	{d20-d21}, [r0]
   11254:	mov	r0, r6
   11258:	vst1.64	{d18-d19}, [r0], r2
   1125c:	vstr	d22, [r0]
   11260:	ldr	r1, [sp]
   11264:	cmp	r1, #0
   11268:	movw	r4, #19654	; 0x4cc6
   1126c:	movt	r4, #1
   11270:	beq	11298 <putchar_unlocked@plt+0x270>
   11274:	mov	r6, sp
   11278:	movw	r5, #19654	; 0x4cc6
   1127c:	movt	r5, #1
   11280:	mov	r0, r5
   11284:	bl	10df4 <strcmp@plt>
   11288:	cmp	r0, #0
   1128c:	ldrne	r1, [r6, #8]!
   11290:	cmpne	r1, #0
   11294:	bne	11280 <putchar_unlocked@plt+0x258>
   11298:	ldr	r5, [r6, #4]
   1129c:	movw	r1, #19913	; 0x4dc9
   112a0:	movt	r1, #1
   112a4:	mov	r0, #0
   112a8:	mov	r2, #5
   112ac:	bl	10e54 <dcgettext@plt>
   112b0:	mov	r1, r0
   112b4:	movw	r2, #19685	; 0x4ce5
   112b8:	movt	r2, #1
   112bc:	movw	r3, #19936	; 0x4de0
   112c0:	movt	r3, #1
   112c4:	mov	r0, #1
   112c8:	bl	10f8c <__printf_chk@plt>
   112cc:	cmp	r5, #0
   112d0:	moveq	r5, r4
   112d4:	mov	r0, #5
   112d8:	mov	r1, #0
   112dc:	bl	10fc8 <setlocale@plt>
   112e0:	cmp	r0, #0
   112e4:	beq	11324 <putchar_unlocked@plt+0x2fc>
   112e8:	movw	r1, #19976	; 0x4e08
   112ec:	movt	r1, #1
   112f0:	mov	r2, #3
   112f4:	bl	11004 <strncmp@plt>
   112f8:	cmp	r0, #0
   112fc:	beq	11324 <putchar_unlocked@plt+0x2fc>
   11300:	movw	r1, #19980	; 0x4e0c
   11304:	movt	r1, #1
   11308:	mov	r0, #0
   1130c:	mov	r2, #5
   11310:	bl	10e54 <dcgettext@plt>
   11314:	movw	r1, #24900	; 0x6144
   11318:	movt	r1, #2
   1131c:	ldr	r1, [r1]
   11320:	bl	10dd0 <fputs_unlocked@plt>
   11324:	movw	r1, #20051	; 0x4e53
   11328:	movt	r1, #1
   1132c:	mov	r0, #0
   11330:	mov	r2, #5
   11334:	bl	10e54 <dcgettext@plt>
   11338:	mov	r1, r0
   1133c:	movw	r2, #19936	; 0x4de0
   11340:	movt	r2, #1
   11344:	mov	r0, #1
   11348:	mov	r3, r4
   1134c:	bl	10f8c <__printf_chk@plt>
   11350:	movw	r0, #19846	; 0x4d86
   11354:	movt	r0, #1
   11358:	movw	r6, #20128	; 0x4ea0
   1135c:	movt	r6, #1
   11360:	cmp	r5, r4
   11364:	moveq	r6, r0
   11368:	movw	r1, #20078	; 0x4e6e
   1136c:	movt	r1, #1
   11370:	mov	r0, #0
   11374:	mov	r2, #5
   11378:	bl	10e54 <dcgettext@plt>
   1137c:	mov	r1, r0
   11380:	mov	r0, #1
   11384:	mov	r2, r5
   11388:	mov	r3, r6
   1138c:	sub	sp, fp, #16
   11390:	pop	{r4, r5, r6, sl, fp, lr}
   11394:	b	10f8c <__printf_chk@plt>
   11398:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1139c:	add	fp, sp, #28
   113a0:	sub	sp, sp, #12
   113a4:	mov	r4, r1
   113a8:	mov	sl, r0
   113ac:	ldr	r0, [r1]
   113b0:	bl	11a30 <putchar_unlocked@plt+0xa08>
   113b4:	movw	r6, #20128	; 0x4ea0
   113b8:	movt	r6, #1
   113bc:	mov	r0, #6
   113c0:	mov	r1, r6
   113c4:	bl	10fc8 <setlocale@plt>
   113c8:	movw	r7, #19689	; 0x4ce9
   113cc:	movt	r7, #1
   113d0:	movw	r1, #19661	; 0x4ccd
   113d4:	movt	r1, #1
   113d8:	mov	r0, r7
   113dc:	bl	10ff8 <bindtextdomain@plt>
   113e0:	mov	r0, r7
   113e4:	bl	10e6c <textdomain@plt>
   113e8:	movw	r0, #6340	; 0x18c4
   113ec:	movt	r0, #1
   113f0:	bl	14b58 <putchar_unlocked@plt+0x3b30>
   113f4:	mov	r0, #0
   113f8:	str	r0, [sp]
   113fc:	movw	r3, #20144	; 0x4eb0
   11400:	movt	r3, #1
   11404:	mov	r0, sl
   11408:	mov	r1, r4
   1140c:	mov	r2, r6
   11410:	bl	10f14 <getopt_long@plt>
   11414:	cmn	r0, #1
   11418:	bne	115b4 <putchar_unlocked@plt+0x58c>
   1141c:	movw	r8, #24888	; 0x6138
   11420:	movt	r8, #2
   11424:	ldr	r0, [r8]
   11428:	cmp	r0, sl
   1142c:	bne	114d0 <putchar_unlocked@plt+0x4a8>
   11430:	bl	10f50 <__errno_location@plt>
   11434:	mov	r5, r0
   11438:	mov	r7, #0
   1143c:	str	r7, [r0]
   11440:	bl	10e18 <getuid@plt>
   11444:	mov	r4, r0
   11448:	cmn	r0, #1
   1144c:	bne	1145c <putchar_unlocked@plt+0x434>
   11450:	ldr	r6, [r5]
   11454:	cmp	r6, #0
   11458:	bne	11628 <putchar_unlocked@plt+0x600>
   1145c:	str	r7, [r5]
   11460:	bl	10e84 <getegid@plt>
   11464:	mov	r6, r0
   11468:	cmn	r0, #1
   1146c:	bne	1147c <putchar_unlocked@plt+0x454>
   11470:	ldr	r7, [r5]
   11474:	cmp	r7, #0
   11478:	bne	1164c <putchar_unlocked@plt+0x624>
   1147c:	mov	r0, #0
   11480:	str	r0, [r5]
   11484:	bl	10f68 <getgid@plt>
   11488:	mov	r2, r0
   1148c:	cmn	r0, #1
   11490:	bne	114a0 <putchar_unlocked@plt+0x478>
   11494:	ldr	r5, [r5]
   11498:	cmp	r5, #0
   1149c:	bne	11670 <putchar_unlocked@plt+0x648>
   114a0:	mov	r0, #32
   114a4:	mov	r1, #1
   114a8:	str	r1, [sp]
   114ac:	str	r0, [sp, #4]
   114b0:	mov	r0, #0
   114b4:	mov	r1, r4
   114b8:	mov	r3, r6
   114bc:	bl	11694 <putchar_unlocked@plt+0x66c>
   114c0:	mov	r6, r0
   114c4:	mov	r0, #10
   114c8:	bl	11028 <putchar_unlocked@plt>
   114cc:	b	115a8 <putchar_unlocked@plt+0x580>
   114d0:	ldr	r0, [r8]
   114d4:	mov	r6, #1
   114d8:	cmp	r0, sl
   114dc:	bge	115a8 <putchar_unlocked@plt+0x580>
   114e0:	movw	r9, #19812	; 0x4d64
   114e4:	movt	r9, #1
   114e8:	mov	r6, #1
   114ec:	b	11558 <putchar_unlocked@plt+0x530>
   114f0:	ldr	r1, [r8]
   114f4:	ldr	r2, [r4, r1, lsl #2]
   114f8:	ldr	r7, [r0, #8]
   114fc:	ldr	r5, [r0, #12]
   11500:	mov	r0, #1
   11504:	mov	r1, r9
   11508:	bl	10f8c <__printf_chk@plt>
   1150c:	ldr	r0, [r8]
   11510:	ldr	r0, [r4, r0, lsl #2]
   11514:	mov	r1, #1
   11518:	str	r1, [sp]
   1151c:	mov	r1, #32
   11520:	str	r1, [sp, #4]
   11524:	mov	r1, r7
   11528:	mov	r2, r5
   1152c:	mov	r3, r5
   11530:	bl	11694 <putchar_unlocked@plt+0x66c>
   11534:	mov	r5, r0
   11538:	mov	r0, #10
   1153c:	bl	11028 <putchar_unlocked@plt>
   11540:	and	r6, r6, r5
   11544:	ldr	r0, [r8]
   11548:	add	r0, r0, #1
   1154c:	str	r0, [r8]
   11550:	cmp	r0, sl
   11554:	bge	115a8 <putchar_unlocked@plt+0x580>
   11558:	ldr	r0, [r4, r0, lsl #2]
   1155c:	bl	10de8 <getpwnam@plt>
   11560:	cmp	r0, #0
   11564:	bne	114f0 <putchar_unlocked@plt+0x4c8>
   11568:	mov	r6, #0
   1156c:	mov	r0, #0
   11570:	movw	r1, #19795	; 0x4d53
   11574:	movt	r1, #1
   11578:	mov	r2, #5
   1157c:	bl	10e54 <dcgettext@plt>
   11580:	mov	r7, r0
   11584:	ldr	r0, [r8]
   11588:	ldr	r0, [r4, r0, lsl #2]
   1158c:	bl	13224 <putchar_unlocked@plt+0x21fc>
   11590:	mov	r3, r0
   11594:	mov	r0, #0
   11598:	mov	r1, #0
   1159c:	mov	r2, r7
   115a0:	bl	10ed8 <error@plt>
   115a4:	b	11544 <putchar_unlocked@plt+0x51c>
   115a8:	eor	r0, r6, #1
   115ac:	sub	sp, fp, #28
   115b0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   115b4:	cmn	r0, #3
   115b8:	beq	115cc <putchar_unlocked@plt+0x5a4>
   115bc:	cmn	r0, #2
   115c0:	bne	11620 <putchar_unlocked@plt+0x5f8>
   115c4:	mov	r0, #0
   115c8:	bl	11124 <putchar_unlocked@plt+0xfc>
   115cc:	movw	r0, #24808	; 0x60e8
   115d0:	movt	r0, #2
   115d4:	ldr	r3, [r0]
   115d8:	movw	r0, #24900	; 0x6144
   115dc:	movt	r0, #2
   115e0:	ldr	r0, [r0]
   115e4:	mov	r1, #0
   115e8:	movw	r2, #19715	; 0x4d03
   115ec:	movt	r2, #1
   115f0:	movw	r7, #19699	; 0x4cf3
   115f4:	movt	r7, #1
   115f8:	str	r7, [sp]
   115fc:	str	r2, [sp, #4]
   11600:	str	r1, [sp, #8]
   11604:	movw	r1, #19654	; 0x4cc6
   11608:	movt	r1, #1
   1160c:	movw	r2, #19685	; 0x4ce5
   11610:	movt	r2, #1
   11614:	bl	139fc <putchar_unlocked@plt+0x29d4>
   11618:	mov	r0, #0
   1161c:	bl	10f2c <exit@plt>
   11620:	mov	r0, #1
   11624:	bl	11124 <putchar_unlocked@plt+0xfc>
   11628:	movw	r1, #19730	; 0x4d12
   1162c:	movt	r1, #1
   11630:	mov	r0, #0
   11634:	mov	r2, #5
   11638:	bl	10e54 <dcgettext@plt>
   1163c:	mov	r2, r0
   11640:	mov	r0, #1
   11644:	mov	r1, r6
   11648:	bl	10ed8 <error@plt>
   1164c:	movw	r1, #19750	; 0x4d26
   11650:	movt	r1, #1
   11654:	mov	r0, #0
   11658:	mov	r2, #5
   1165c:	bl	10e54 <dcgettext@plt>
   11660:	mov	r2, r0
   11664:	mov	r0, #1
   11668:	mov	r1, r7
   1166c:	bl	10ed8 <error@plt>
   11670:	movw	r1, #19775	; 0x4d3f
   11674:	movt	r1, #1
   11678:	mov	r0, #0
   1167c:	mov	r2, #5
   11680:	bl	10e54 <dcgettext@plt>
   11684:	mov	r2, r0
   11688:	mov	r0, #1
   1168c:	mov	r1, r5
   11690:	bl	10ed8 <error@plt>
   11694:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11698:	add	fp, sp, #28
   1169c:	sub	sp, sp, #4
   116a0:	mov	r8, r3
   116a4:	mov	r5, r2
   116a8:	mov	r4, r0
   116ac:	ldr	r9, [fp, #8]
   116b0:	cmp	r0, #0
   116b4:	beq	116d4 <putchar_unlocked@plt+0x6ac>
   116b8:	mov	r0, r1
   116bc:	bl	10e00 <getpwuid@plt>
   116c0:	mov	r6, r0
   116c4:	cmp	r0, #0
   116c8:	mov	r7, r0
   116cc:	movwne	r7, #1
   116d0:	b	116dc <putchar_unlocked@plt+0x6b4>
   116d4:	mov	r6, #0
   116d8:	mov	r7, #1
   116dc:	ldr	sl, [fp, #12]
   116e0:	mov	r0, r5
   116e4:	mov	r1, r9
   116e8:	bl	11808 <putchar_unlocked@plt+0x7e0>
   116ec:	and	r7, r7, r0
   116f0:	cmp	r8, r5
   116f4:	beq	11710 <putchar_unlocked@plt+0x6e8>
   116f8:	mov	r0, sl
   116fc:	bl	11028 <putchar_unlocked@plt>
   11700:	mov	r0, r8
   11704:	mov	r1, r9
   11708:	bl	11808 <putchar_unlocked@plt+0x7e0>
   1170c:	and	r7, r7, r0
   11710:	cmp	r6, #0
   11714:	mov	r1, r8
   11718:	ldrne	r1, [r6, #12]
   1171c:	mov	r2, sp
   11720:	mov	r0, r4
   11724:	bl	13ed0 <putchar_unlocked@plt+0x2ea8>
   11728:	cmp	r0, #0
   1172c:	bmi	1178c <putchar_unlocked@plt+0x764>
   11730:	beq	11780 <putchar_unlocked@plt+0x758>
   11734:	mov	r6, r0
   11738:	mov	r4, #0
   1173c:	b	1174c <putchar_unlocked@plt+0x724>
   11740:	add	r4, r4, #1
   11744:	cmp	r6, r4
   11748:	beq	11780 <putchar_unlocked@plt+0x758>
   1174c:	ldr	r0, [sp]
   11750:	ldr	r0, [r0, r4, lsl #2]
   11754:	cmp	r0, r5
   11758:	cmpne	r0, r8
   1175c:	beq	11740 <putchar_unlocked@plt+0x718>
   11760:	mov	r0, sl
   11764:	bl	11028 <putchar_unlocked@plt>
   11768:	ldr	r0, [sp]
   1176c:	ldr	r0, [r0, r4, lsl #2]
   11770:	mov	r1, r9
   11774:	bl	11808 <putchar_unlocked@plt+0x7e0>
   11778:	and	r7, r7, r0
   1177c:	b	11740 <putchar_unlocked@plt+0x718>
   11780:	ldr	r0, [sp]
   11784:	bl	119ac <putchar_unlocked@plt+0x984>
   11788:	b	117fc <putchar_unlocked@plt+0x7d4>
   1178c:	bl	10f50 <__errno_location@plt>
   11790:	ldr	r6, [r0]
   11794:	mov	r7, #0
   11798:	cmp	r4, #0
   1179c:	beq	117d8 <putchar_unlocked@plt+0x7b0>
   117a0:	movw	r1, #20248	; 0x4f18
   117a4:	movt	r1, #1
   117a8:	mov	r0, #0
   117ac:	mov	r2, #5
   117b0:	bl	10e54 <dcgettext@plt>
   117b4:	mov	r5, r0
   117b8:	mov	r0, r4
   117bc:	bl	13224 <putchar_unlocked@plt+0x21fc>
   117c0:	mov	r3, r0
   117c4:	mov	r0, #0
   117c8:	mov	r1, r6
   117cc:	mov	r2, r5
   117d0:	bl	10ed8 <error@plt>
   117d4:	b	117fc <putchar_unlocked@plt+0x7d4>
   117d8:	movw	r1, #20281	; 0x4f39
   117dc:	movt	r1, #1
   117e0:	mov	r0, #0
   117e4:	mov	r2, #5
   117e8:	bl	10e54 <dcgettext@plt>
   117ec:	mov	r2, r0
   117f0:	mov	r0, #0
   117f4:	mov	r1, r6
   117f8:	bl	10ed8 <error@plt>
   117fc:	and	r0, r7, #1
   11800:	sub	sp, fp, #28
   11804:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11808:	push	{r4, r5, fp, lr}
   1180c:	add	fp, sp, #8
   11810:	sub	sp, sp, #8
   11814:	str	r0, [sp, #4]
   11818:	mov	r4, #1
   1181c:	cmp	r1, #0
   11820:	beq	1186c <putchar_unlocked@plt+0x844>
   11824:	mov	r5, r0
   11828:	bl	1101c <getgrgid@plt>
   1182c:	cmp	r0, #0
   11830:	beq	11840 <putchar_unlocked@plt+0x818>
   11834:	ldr	r0, [r0]
   11838:	mov	r4, #1
   1183c:	b	11874 <putchar_unlocked@plt+0x84c>
   11840:	mov	r4, #0
   11844:	movw	r1, #20326	; 0x4f66
   11848:	movt	r1, #1
   1184c:	mov	r0, #0
   11850:	mov	r2, #5
   11854:	bl	10e54 <dcgettext@plt>
   11858:	mov	r2, r0
   1185c:	mov	r0, #0
   11860:	mov	r1, #0
   11864:	mov	r3, r5
   11868:	bl	10ed8 <error@plt>
   1186c:	add	r0, sp, #4
   11870:	bl	11890 <putchar_unlocked@plt+0x868>
   11874:	movw	r1, #24900	; 0x6144
   11878:	movt	r1, #2
   1187c:	ldr	r1, [r1]
   11880:	bl	10dd0 <fputs_unlocked@plt>
   11884:	mov	r0, r4
   11888:	sub	sp, fp, #8
   1188c:	pop	{r4, r5, fp, pc}
   11890:	ldr	r0, [r0]
   11894:	movw	r2, #24905	; 0x6149
   11898:	movt	r2, #2
   1189c:	mov	r1, #0
   118a0:	b	119d4 <putchar_unlocked@plt+0x9ac>
   118a4:	movw	r1, #24928	; 0x6160
   118a8:	movt	r1, #2
   118ac:	str	r0, [r1]
   118b0:	bx	lr
   118b4:	movw	r1, #24932	; 0x6164
   118b8:	movt	r1, #2
   118bc:	strb	r0, [r1]
   118c0:	bx	lr
   118c4:	push	{r4, r5, r6, sl, fp, lr}
   118c8:	add	fp, sp, #16
   118cc:	sub	sp, sp, #8
   118d0:	movw	r0, #24900	; 0x6144
   118d4:	movt	r0, #2
   118d8:	ldr	r0, [r0]
   118dc:	bl	14300 <putchar_unlocked@plt+0x32d8>
   118e0:	cmp	r0, #0
   118e4:	beq	1190c <putchar_unlocked@plt+0x8e4>
   118e8:	movw	r0, #24932	; 0x6164
   118ec:	movt	r0, #2
   118f0:	ldrb	r0, [r0]
   118f4:	cmp	r0, #0
   118f8:	beq	1192c <putchar_unlocked@plt+0x904>
   118fc:	bl	10f50 <__errno_location@plt>
   11900:	ldr	r0, [r0]
   11904:	cmp	r0, #32
   11908:	bne	1192c <putchar_unlocked@plt+0x904>
   1190c:	movw	r0, #24896	; 0x6140
   11910:	movt	r0, #2
   11914:	ldr	r0, [r0]
   11918:	bl	14300 <putchar_unlocked@plt+0x32d8>
   1191c:	cmp	r0, #0
   11920:	subeq	sp, fp, #16
   11924:	popeq	{r4, r5, r6, sl, fp, pc}
   11928:	b	1199c <putchar_unlocked@plt+0x974>
   1192c:	movw	r1, #20375	; 0x4f97
   11930:	movt	r1, #1
   11934:	mov	r0, #0
   11938:	mov	r2, #5
   1193c:	bl	10e54 <dcgettext@plt>
   11940:	mov	r4, r0
   11944:	movw	r0, #24928	; 0x6160
   11948:	movt	r0, #2
   1194c:	ldr	r6, [r0]
   11950:	bl	10f50 <__errno_location@plt>
   11954:	ldr	r5, [r0]
   11958:	cmp	r6, #0
   1195c:	bne	11978 <putchar_unlocked@plt+0x950>
   11960:	movw	r2, #20391	; 0x4fa7
   11964:	movt	r2, #1
   11968:	mov	r0, #0
   1196c:	mov	r1, r5
   11970:	mov	r3, r4
   11974:	b	11998 <putchar_unlocked@plt+0x970>
   11978:	mov	r0, r6
   1197c:	bl	130d4 <putchar_unlocked@plt+0x20ac>
   11980:	mov	r3, r0
   11984:	str	r4, [sp]
   11988:	movw	r2, #20387	; 0x4fa3
   1198c:	movt	r2, #1
   11990:	mov	r0, #0
   11994:	mov	r1, r5
   11998:	bl	10ed8 <error@plt>
   1199c:	movw	r0, #24812	; 0x60ec
   119a0:	movt	r0, #2
   119a4:	ldr	r0, [r0]
   119a8:	bl	10e30 <_exit@plt>
   119ac:	push	{r4, r5, r6, sl, fp, lr}
   119b0:	add	fp, sp, #16
   119b4:	mov	r4, r0
   119b8:	bl	10f50 <__errno_location@plt>
   119bc:	mov	r5, r0
   119c0:	ldr	r6, [r0]
   119c4:	mov	r0, r4
   119c8:	bl	10e24 <free@plt>
   119cc:	str	r6, [r5]
   119d0:	pop	{r4, r5, r6, sl, fp, pc}
   119d4:	push	{r4, r5, r6, sl, fp, lr}
   119d8:	add	fp, sp, #16
   119dc:	mov	r4, r1
   119e0:	mov	r5, r0
   119e4:	mov	r0, #0
   119e8:	strb	r0, [r2, #20]
   119ec:	add	r6, r2, #19
   119f0:	mov	r0, r5
   119f4:	mov	r1, r4
   119f8:	mov	r2, #10
   119fc:	mov	r3, #0
   11a00:	bl	14980 <putchar_unlocked@plt+0x3958>
   11a04:	add	r2, r0, r0, lsl #2
   11a08:	sub	r2, r5, r2, lsl #1
   11a0c:	orr	r2, r2, #48	; 0x30
   11a10:	strb	r2, [r6], #-1
   11a14:	rsbs	r2, r5, #9
   11a18:	rscs	r2, r4, #0
   11a1c:	mov	r5, r0
   11a20:	mov	r4, r1
   11a24:	bcc	119f0 <putchar_unlocked@plt+0x9c8>
   11a28:	add	r0, r6, #1
   11a2c:	pop	{r4, r5, r6, sl, fp, pc}
   11a30:	push	{r4, r5, fp, lr}
   11a34:	add	fp, sp, #8
   11a38:	cmp	r0, #0
   11a3c:	beq	11ad0 <putchar_unlocked@plt+0xaa8>
   11a40:	mov	r4, r0
   11a44:	mov	r1, #47	; 0x2f
   11a48:	bl	10fd4 <strrchr@plt>
   11a4c:	cmp	r0, #0
   11a50:	mov	r5, r4
   11a54:	addne	r5, r0, #1
   11a58:	sub	r0, r5, r4
   11a5c:	cmp	r0, #7
   11a60:	blt	11ab4 <putchar_unlocked@plt+0xa8c>
   11a64:	sub	r0, r5, #7
   11a68:	movw	r1, #20450	; 0x4fe2
   11a6c:	movt	r1, #1
   11a70:	mov	r2, #7
   11a74:	bl	11004 <strncmp@plt>
   11a78:	cmp	r0, #0
   11a7c:	bne	11ab4 <putchar_unlocked@plt+0xa8c>
   11a80:	movw	r1, #20458	; 0x4fea
   11a84:	movt	r1, #1
   11a88:	mov	r0, r5
   11a8c:	mov	r2, #3
   11a90:	bl	11004 <strncmp@plt>
   11a94:	cmp	r0, #0
   11a98:	beq	11aa4 <putchar_unlocked@plt+0xa7c>
   11a9c:	mov	r4, r5
   11aa0:	b	11ab4 <putchar_unlocked@plt+0xa8c>
   11aa4:	add	r4, r5, #3
   11aa8:	movw	r0, #24880	; 0x6130
   11aac:	movt	r0, #2
   11ab0:	str	r4, [r0]
   11ab4:	movw	r0, #24884	; 0x6134
   11ab8:	movt	r0, #2
   11abc:	str	r4, [r0]
   11ac0:	movw	r0, #24936	; 0x6168
   11ac4:	movt	r0, #2
   11ac8:	str	r4, [r0]
   11acc:	pop	{r4, r5, fp, pc}
   11ad0:	movw	r0, #24896	; 0x6140
   11ad4:	movt	r0, #2
   11ad8:	ldr	r3, [r0]
   11adc:	movw	r0, #20394	; 0x4faa
   11ae0:	movt	r0, #1
   11ae4:	mov	r1, #55	; 0x37
   11ae8:	mov	r2, #1
   11aec:	bl	10e90 <fwrite@plt>
   11af0:	bl	11010 <abort@plt>
   11af4:	push	{r4, r5, r6, sl, fp, lr}
   11af8:	add	fp, sp, #16
   11afc:	mov	r4, r0
   11b00:	movw	r0, #24944	; 0x6170
   11b04:	movt	r0, #2
   11b08:	cmp	r4, #0
   11b0c:	moveq	r4, r0
   11b10:	bl	10f50 <__errno_location@plt>
   11b14:	mov	r5, r0
   11b18:	ldr	r6, [r0]
   11b1c:	mov	r0, r4
   11b20:	mov	r1, #48	; 0x30
   11b24:	bl	13dec <putchar_unlocked@plt+0x2dc4>
   11b28:	str	r6, [r5]
   11b2c:	pop	{r4, r5, r6, sl, fp, pc}
   11b30:	movw	r1, #24944	; 0x6170
   11b34:	movt	r1, #2
   11b38:	cmp	r0, #0
   11b3c:	movne	r1, r0
   11b40:	ldr	r0, [r1]
   11b44:	bx	lr
   11b48:	movw	r2, #24944	; 0x6170
   11b4c:	movt	r2, #2
   11b50:	cmp	r0, #0
   11b54:	movne	r2, r0
   11b58:	str	r1, [r2]
   11b5c:	bx	lr
   11b60:	movw	r3, #24944	; 0x6170
   11b64:	movt	r3, #2
   11b68:	cmp	r0, #0
   11b6c:	movne	r3, r0
   11b70:	ubfx	r0, r1, #5, #3
   11b74:	add	ip, r3, r0, lsl #2
   11b78:	ldr	r3, [ip, #8]
   11b7c:	and	r1, r1, #31
   11b80:	mov	r0, #1
   11b84:	and	r0, r0, r3, lsr r1
   11b88:	and	r2, r2, #1
   11b8c:	eor	r2, r0, r2
   11b90:	eor	r1, r3, r2, lsl r1
   11b94:	str	r1, [ip, #8]
   11b98:	bx	lr
   11b9c:	movw	r2, #24944	; 0x6170
   11ba0:	movt	r2, #2
   11ba4:	cmp	r0, #0
   11ba8:	movne	r2, r0
   11bac:	ldr	r0, [r2, #4]
   11bb0:	str	r1, [r2, #4]
   11bb4:	bx	lr
   11bb8:	push	{fp, lr}
   11bbc:	mov	fp, sp
   11bc0:	movw	r3, #24944	; 0x6170
   11bc4:	movt	r3, #2
   11bc8:	cmp	r0, #0
   11bcc:	movne	r3, r0
   11bd0:	mov	r0, #10
   11bd4:	str	r0, [r3]
   11bd8:	cmp	r1, #0
   11bdc:	cmpne	r2, #0
   11be0:	bne	11be8 <putchar_unlocked@plt+0xbc0>
   11be4:	bl	11010 <abort@plt>
   11be8:	str	r1, [r3, #40]	; 0x28
   11bec:	str	r2, [r3, #44]	; 0x2c
   11bf0:	pop	{fp, pc}
   11bf4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11bf8:	add	fp, sp, #28
   11bfc:	sub	sp, sp, #20
   11c00:	mov	r8, r3
   11c04:	mov	r9, r2
   11c08:	mov	sl, r1
   11c0c:	mov	r7, r0
   11c10:	ldr	r0, [fp, #8]
   11c14:	movw	r5, #24944	; 0x6170
   11c18:	movt	r5, #2
   11c1c:	cmp	r0, #0
   11c20:	movne	r5, r0
   11c24:	bl	10f50 <__errno_location@plt>
   11c28:	mov	r4, r0
   11c2c:	ldm	r5, {r0, r1}
   11c30:	ldr	r2, [r5, #40]	; 0x28
   11c34:	ldr	r3, [r5, #44]	; 0x2c
   11c38:	ldr	r6, [r4]
   11c3c:	add	r5, r5, #8
   11c40:	stm	sp, {r0, r1, r5}
   11c44:	str	r2, [sp, #12]
   11c48:	str	r3, [sp, #16]
   11c4c:	mov	r0, r7
   11c50:	mov	r1, sl
   11c54:	mov	r2, r9
   11c58:	mov	r3, r8
   11c5c:	bl	11c6c <putchar_unlocked@plt+0xc44>
   11c60:	str	r6, [r4]
   11c64:	sub	sp, fp, #28
   11c68:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11c6c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11c70:	add	fp, sp, #28
   11c74:	sub	sp, sp, #156	; 0x9c
   11c78:	mov	r9, r3
   11c7c:	mov	r7, r1
   11c80:	mov	r6, r0
   11c84:	str	r2, [fp, #-80]	; 0xffffffb0
   11c88:	add	r0, r2, #1
   11c8c:	str	r0, [sp, #76]	; 0x4c
   11c90:	ldr	r0, [fp, #12]
   11c94:	and	r1, r0, #1
   11c98:	str	r1, [sp, #40]	; 0x28
   11c9c:	and	r1, r0, #4
   11ca0:	str	r1, [sp, #36]	; 0x24
   11ca4:	ubfx	r4, r0, #1, #1
   11ca8:	bl	10ea8 <__ctype_get_mb_cur_max@plt>
   11cac:	str	r0, [sp, #44]	; 0x2c
   11cb0:	ldr	r0, [fp, #24]
   11cb4:	str	r0, [sp, #88]	; 0x58
   11cb8:	ldr	r0, [fp, #20]
   11cbc:	str	r0, [sp, #80]	; 0x50
   11cc0:	ldr	r1, [fp, #8]
   11cc4:	mov	r0, #0
   11cc8:	str	r0, [sp, #84]	; 0x54
   11ccc:	mov	r0, #0
   11cd0:	str	r0, [fp, #-84]	; 0xffffffac
   11cd4:	mov	r0, #0
   11cd8:	str	r0, [fp, #-72]	; 0xffffffb8
   11cdc:	mov	r0, #0
   11ce0:	mov	r2, #0
   11ce4:	str	r2, [fp, #-56]	; 0xffffffc8
   11ce8:	mov	r2, #0
   11cec:	str	r2, [sp, #64]	; 0x40
   11cf0:	mov	r2, #1
   11cf4:	str	r2, [fp, #-48]	; 0xffffffd0
   11cf8:	cmp	r1, #10
   11cfc:	bhi	12c28 <putchar_unlocked@plt+0x1c00>
   11d00:	mov	sl, r7
   11d04:	mov	r7, r1
   11d08:	add	r1, pc, #24
   11d0c:	mov	r8, #0
   11d10:	mov	r2, #1
   11d14:	mov	r3, #0
   11d18:	ldr	ip, [fp, #-80]	; 0xffffffb0
   11d1c:	mov	lr, r9
   11d20:	mov	r5, r6
   11d24:	ldr	pc, [r1, r7, lsl #2]
   11d28:	strdeq	r1, [r1], -ip
   11d2c:	andeq	r1, r1, ip, lsr lr
   11d30:	andeq	r1, r1, ip, lsl #28
   11d34:	strdeq	r1, [r1], -r4
   11d38:	andeq	r1, r1, r0, lsr lr
   11d3c:	muleq	r1, r0, lr
   11d40:	andeq	r1, r1, ip, lsl lr
   11d44:	andeq	r1, r1, ip, ror #29
   11d48:	andeq	r1, r1, r4, asr sp
   11d4c:	andeq	r1, r1, r4, asr sp
   11d50:	andeq	r1, r1, r0, lsl #27
   11d54:	movw	r0, #20542	; 0x503e
   11d58:	movt	r0, #1
   11d5c:	mov	r1, r7
   11d60:	bl	13230 <putchar_unlocked@plt+0x2208>
   11d64:	str	r0, [sp, #80]	; 0x50
   11d68:	movw	r0, #20544	; 0x5040
   11d6c:	movt	r0, #1
   11d70:	mov	r1, r7
   11d74:	bl	13230 <putchar_unlocked@plt+0x2208>
   11d78:	mov	r5, r6
   11d7c:	str	r0, [sp, #88]	; 0x58
   11d80:	mov	r8, #0
   11d84:	tst	r4, #1
   11d88:	str	r7, [fp, #-64]	; 0xffffffc0
   11d8c:	bne	11dc4 <putchar_unlocked@plt+0xd9c>
   11d90:	ldr	r0, [sp, #80]	; 0x50
   11d94:	ldrb	r0, [r0]
   11d98:	cmp	r0, #0
   11d9c:	beq	11dc4 <putchar_unlocked@plt+0xd9c>
   11da0:	ldr	r1, [sp, #80]	; 0x50
   11da4:	add	r1, r1, #1
   11da8:	mov	r8, #0
   11dac:	cmp	r8, sl
   11db0:	strbcc	r0, [r5, r8]
   11db4:	ldrb	r0, [r1, r8]
   11db8:	add	r8, r8, #1
   11dbc:	cmp	r0, #0
   11dc0:	bne	11dac <putchar_unlocked@plt+0xd84>
   11dc4:	ldr	r7, [sp, #88]	; 0x58
   11dc8:	mov	r0, r7
   11dcc:	bl	10f44 <strlen@plt>
   11dd0:	mov	r5, r6
   11dd4:	str	r0, [fp, #-72]	; 0xffffffb8
   11dd8:	str	r7, [fp, #-84]	; 0xffffffac
   11ddc:	mov	r2, #1
   11de0:	mov	r3, r4
   11de4:	ldr	ip, [fp, #-80]	; 0xffffffb0
   11de8:	mov	lr, r9
   11dec:	ldr	r7, [fp, #-64]	; 0xffffffc0
   11df0:	b	11eec <putchar_unlocked@plt+0xec4>
   11df4:	mov	r0, #1
   11df8:	b	11e3c <putchar_unlocked@plt+0xe14>
   11dfc:	mov	r7, #0
   11e00:	mov	r8, #0
   11e04:	mov	r2, r0
   11e08:	b	11ee8 <putchar_unlocked@plt+0xec0>
   11e0c:	tst	r4, #1
   11e10:	bne	11e3c <putchar_unlocked@plt+0xe14>
   11e14:	mov	r2, r0
   11e18:	b	11e64 <putchar_unlocked@plt+0xe3c>
   11e1c:	mov	r0, #1
   11e20:	str	r0, [fp, #-72]	; 0xffffffb8
   11e24:	mov	r8, #0
   11e28:	mov	r7, #5
   11e2c:	b	11ea8 <putchar_unlocked@plt+0xe80>
   11e30:	mov	r2, #1
   11e34:	tst	r4, #1
   11e38:	beq	11e64 <putchar_unlocked@plt+0xe3c>
   11e3c:	mov	r1, #1
   11e40:	str	r1, [fp, #-72]	; 0xffffffb8
   11e44:	mov	r8, #0
   11e48:	mov	r7, #2
   11e4c:	movw	r1, #20544	; 0x5040
   11e50:	movt	r1, #1
   11e54:	str	r1, [fp, #-84]	; 0xffffffac
   11e58:	mov	r2, r0
   11e5c:	mov	r3, #1
   11e60:	b	11eec <putchar_unlocked@plt+0xec4>
   11e64:	mov	r8, #1
   11e68:	mov	r7, #2
   11e6c:	cmp	sl, #0
   11e70:	movne	r0, #39	; 0x27
   11e74:	strbne	r0, [r5]
   11e78:	movw	r0, #20544	; 0x5040
   11e7c:	movt	r0, #1
   11e80:	str	r0, [fp, #-84]	; 0xffffffac
   11e84:	mov	r0, #1
   11e88:	str	r0, [fp, #-72]	; 0xffffffb8
   11e8c:	b	11ee8 <putchar_unlocked@plt+0xec0>
   11e90:	mov	r7, #5
   11e94:	tst	r4, #1
   11e98:	beq	11ec0 <putchar_unlocked@plt+0xe98>
   11e9c:	mov	r0, #1
   11ea0:	str	r0, [fp, #-72]	; 0xffffffb8
   11ea4:	mov	r8, #0
   11ea8:	movw	r0, #20540	; 0x503c
   11eac:	movt	r0, #1
   11eb0:	str	r0, [fp, #-84]	; 0xffffffac
   11eb4:	mov	r2, #1
   11eb8:	mov	r3, #1
   11ebc:	b	11eec <putchar_unlocked@plt+0xec4>
   11ec0:	cmp	sl, #0
   11ec4:	movne	r0, #34	; 0x22
   11ec8:	strbne	r0, [r5]
   11ecc:	mov	r8, #1
   11ed0:	movw	r0, #20540	; 0x503c
   11ed4:	movt	r0, #1
   11ed8:	str	r0, [fp, #-84]	; 0xffffffac
   11edc:	mov	r0, #1
   11ee0:	str	r0, [fp, #-72]	; 0xffffffb8
   11ee4:	mov	r2, #1
   11ee8:	mov	r3, #0
   11eec:	ldr	r0, [fp, #-72]	; 0xffffffb8
   11ef0:	cmp	r0, #0
   11ef4:	movwne	r0, #1
   11ef8:	and	r1, r0, r3
   11efc:	and	r1, r2, r1
   11f00:	str	r1, [sp, #56]	; 0x38
   11f04:	sub	r1, r7, #2
   11f08:	clz	r1, r1
   11f0c:	lsr	r1, r1, #5
   11f10:	and	r1, r1, r3
   11f14:	str	r1, [sp, #68]	; 0x44
   11f18:	str	r7, [fp, #-64]	; 0xffffffc0
   11f1c:	subs	r1, r7, #2
   11f20:	movwne	r1, #1
   11f24:	eor	r4, r3, #1
   11f28:	str	r4, [fp, #-88]	; 0xffffffa8
   11f2c:	orr	r4, r1, r4
   11f30:	str	r4, [sp, #72]	; 0x48
   11f34:	and	r1, r1, r2
   11f38:	and	r0, r0, r1
   11f3c:	str	r0, [fp, #-60]	; 0xffffffc4
   11f40:	str	r3, [fp, #-76]	; 0xffffffb4
   11f44:	orr	r0, r1, r3
   11f48:	eor	r0, r0, #1
   11f4c:	ldr	r1, [fp, #16]
   11f50:	clz	r1, r1
   11f54:	lsr	r1, r1, #5
   11f58:	orr	r0, r1, r0
   11f5c:	str	r0, [fp, #-68]	; 0xffffffbc
   11f60:	str	r2, [sp, #92]	; 0x5c
   11f64:	eor	r0, r2, #1
   11f68:	str	r0, [sp, #60]	; 0x3c
   11f6c:	mov	r7, #0
   11f70:	cmn	lr, #1
   11f74:	beq	11f84 <putchar_unlocked@plt+0xf5c>
   11f78:	cmp	r7, lr
   11f7c:	bne	11f90 <putchar_unlocked@plt+0xf68>
   11f80:	b	12a9c <putchar_unlocked@plt+0x1a74>
   11f84:	ldrb	r0, [ip, r7]
   11f88:	cmp	r0, #0
   11f8c:	beq	12a9c <putchar_unlocked@plt+0x1a74>
   11f90:	mov	r9, #0
   11f94:	ldr	r0, [fp, #-60]	; 0xffffffc4
   11f98:	cmp	r0, #0
   11f9c:	beq	11fd0 <putchar_unlocked@plt+0xfa8>
   11fa0:	ldr	r0, [fp, #-72]	; 0xffffffb8
   11fa4:	add	r4, r7, r0
   11fa8:	cmp	r0, #2
   11fac:	bcc	11fc8 <putchar_unlocked@plt+0xfa0>
   11fb0:	cmn	lr, #1
   11fb4:	bne	11fc8 <putchar_unlocked@plt+0xfa0>
   11fb8:	mov	r0, ip
   11fbc:	bl	10f44 <strlen@plt>
   11fc0:	ldr	ip, [fp, #-80]	; 0xffffffb0
   11fc4:	mov	lr, r0
   11fc8:	cmp	r4, lr
   11fcc:	bls	11fdc <putchar_unlocked@plt+0xfb4>
   11fd0:	mov	r0, #0
   11fd4:	str	r0, [fp, #-52]	; 0xffffffcc
   11fd8:	b	12020 <putchar_unlocked@plt+0xff8>
   11fdc:	mov	r4, lr
   11fe0:	add	r0, ip, r7
   11fe4:	ldr	r1, [fp, #-84]	; 0xffffffac
   11fe8:	ldr	r2, [fp, #-72]	; 0xffffffb8
   11fec:	bl	10f38 <bcmp@plt>
   11ff0:	cmp	r0, #0
   11ff4:	mov	r1, r0
   11ff8:	movwne	r1, #1
   11ffc:	ldr	r2, [fp, #-88]	; 0xffffffa8
   12000:	orr	r1, r1, r2
   12004:	tst	r1, #1
   12008:	beq	12b70 <putchar_unlocked@plt+0x1b48>
   1200c:	clz	r0, r0
   12010:	lsr	r0, r0, #5
   12014:	str	r0, [fp, #-52]	; 0xffffffcc
   12018:	ldr	ip, [fp, #-80]	; 0xffffffb0
   1201c:	mov	lr, r4
   12020:	ldrb	r4, [ip, r7]
   12024:	cmp	r4, #126	; 0x7e
   12028:	bhi	12558 <putchar_unlocked@plt+0x1530>
   1202c:	mov	r6, #1
   12030:	mov	r2, #110	; 0x6e
   12034:	mov	r0, #97	; 0x61
   12038:	add	r3, pc, #4
   1203c:	mov	r1, #0
   12040:	ldr	pc, [r3, r4, lsl #2]
   12044:			; <UNDEFINED> instruction: 0x000123b8
   12048:	andeq	r2, r1, r8, asr r5
   1204c:	andeq	r2, r1, r8, asr r5
   12050:	andeq	r2, r1, r8, asr r5
   12054:	andeq	r2, r1, r8, asr r5
   12058:	andeq	r2, r1, r8, asr r5
   1205c:	andeq	r2, r1, r8, asr r5
   12060:	andeq	r2, r1, ip, lsr #12
   12064:	muleq	r1, r8, r3
   12068:	muleq	r1, r0, r3
   1206c:	andeq	r2, r1, r4, lsr #7
   12070:	andeq	r2, r1, r0, asr #9
   12074:	andeq	r2, r1, r8, lsl #7
   12078:	andeq	r2, r1, r0, lsr #7
   1207c:	andeq	r2, r1, r8, asr r5
   12080:	andeq	r2, r1, r8, asr r5
   12084:	andeq	r2, r1, r8, asr r5
   12088:	andeq	r2, r1, r8, asr r5
   1208c:	andeq	r2, r1, r8, asr r5
   12090:	andeq	r2, r1, r8, asr r5
   12094:	andeq	r2, r1, r8, asr r5
   12098:	andeq	r2, r1, r8, asr r5
   1209c:	andeq	r2, r1, r8, asr r5
   120a0:	andeq	r2, r1, r8, asr r5
   120a4:	andeq	r2, r1, r8, asr r5
   120a8:	andeq	r2, r1, r8, asr r5
   120ac:	andeq	r2, r1, r8, asr r5
   120b0:	andeq	r2, r1, r8, asr r5
   120b4:	andeq	r2, r1, r8, asr r5
   120b8:	andeq	r2, r1, r8, asr r5
   120bc:	andeq	r2, r1, r8, asr r5
   120c0:	andeq	r2, r1, r8, asr r5
   120c4:	andeq	r2, r1, ip, lsr r3
   120c8:	andeq	r2, r1, r0, asr #6
   120cc:	andeq	r2, r1, r0, asr #6
   120d0:	andeq	r2, r1, r8, lsr #6
   120d4:	andeq	r2, r1, r0, asr #6
   120d8:	andeq	r2, r1, r0, asr #4
   120dc:	andeq	r2, r1, r0, asr #6
   120e0:	andeq	r2, r1, r8, asr #9
   120e4:	andeq	r2, r1, r0, asr #6
   120e8:	andeq	r2, r1, r0, asr #6
   120ec:	andeq	r2, r1, r0, asr #6
   120f0:	andeq	r2, r1, r0, asr #4
   120f4:	andeq	r2, r1, r0, asr #4
   120f8:	andeq	r2, r1, r0, asr #4
   120fc:	andeq	r2, r1, r0, asr #4
   12100:	andeq	r2, r1, r0, asr #4
   12104:	andeq	r2, r1, r0, asr #4
   12108:	andeq	r2, r1, r0, asr #4
   1210c:	andeq	r2, r1, r0, asr #4
   12110:	andeq	r2, r1, r0, asr #4
   12114:	andeq	r2, r1, r0, asr #4
   12118:	andeq	r2, r1, r0, asr #4
   1211c:	andeq	r2, r1, r0, asr #4
   12120:	andeq	r2, r1, r0, asr #4
   12124:	andeq	r2, r1, r0, asr #4
   12128:	andeq	r2, r1, r0, asr #4
   1212c:	andeq	r2, r1, r0, asr #4
   12130:	andeq	r2, r1, r0, asr #6
   12134:	andeq	r2, r1, r0, asr #6
   12138:	andeq	r2, r1, r0, asr #6
   1213c:	andeq	r2, r1, r0, asr #6
   12140:	muleq	r1, r0, r4
   12144:	andeq	r2, r1, r8, asr r5
   12148:	andeq	r2, r1, r0, asr #4
   1214c:	andeq	r2, r1, r0, asr #4
   12150:	andeq	r2, r1, r0, asr #4
   12154:	andeq	r2, r1, r0, asr #4
   12158:	andeq	r2, r1, r0, asr #4
   1215c:	andeq	r2, r1, r0, asr #4
   12160:	andeq	r2, r1, r0, asr #4
   12164:	andeq	r2, r1, r0, asr #4
   12168:	andeq	r2, r1, r0, asr #4
   1216c:	andeq	r2, r1, r0, asr #4
   12170:	andeq	r2, r1, r0, asr #4
   12174:	andeq	r2, r1, r0, asr #4
   12178:	andeq	r2, r1, r0, asr #4
   1217c:	andeq	r2, r1, r0, asr #4
   12180:	andeq	r2, r1, r0, asr #4
   12184:	andeq	r2, r1, r0, asr #4
   12188:	andeq	r2, r1, r0, asr #4
   1218c:	andeq	r2, r1, r0, asr #4
   12190:	andeq	r2, r1, r0, asr #4
   12194:	andeq	r2, r1, r0, asr #4
   12198:	andeq	r2, r1, r0, asr #4
   1219c:	andeq	r2, r1, r0, asr #4
   121a0:	andeq	r2, r1, r0, asr #4
   121a4:	andeq	r2, r1, r0, asr #4
   121a8:	andeq	r2, r1, r0, asr #4
   121ac:	andeq	r2, r1, r0, asr #4
   121b0:	andeq	r2, r1, r0, asr #6
   121b4:	andeq	r2, r1, r8, ror #6
   121b8:	andeq	r2, r1, r0, asr #4
   121bc:	andeq	r2, r1, r0, asr #6
   121c0:	andeq	r2, r1, r0, asr #4
   121c4:	andeq	r2, r1, r0, asr #6
   121c8:	andeq	r2, r1, r0, asr #4
   121cc:	andeq	r2, r1, r0, asr #4
   121d0:	andeq	r2, r1, r0, asr #4
   121d4:	andeq	r2, r1, r0, asr #4
   121d8:	andeq	r2, r1, r0, asr #4
   121dc:	andeq	r2, r1, r0, asr #4
   121e0:	andeq	r2, r1, r0, asr #4
   121e4:	andeq	r2, r1, r0, asr #4
   121e8:	andeq	r2, r1, r0, asr #4
   121ec:	andeq	r2, r1, r0, asr #4
   121f0:	andeq	r2, r1, r0, asr #4
   121f4:	andeq	r2, r1, r0, asr #4
   121f8:	andeq	r2, r1, r0, asr #4
   121fc:	andeq	r2, r1, r0, asr #4
   12200:	andeq	r2, r1, r0, asr #4
   12204:	andeq	r2, r1, r0, asr #4
   12208:	andeq	r2, r1, r0, asr #4
   1220c:	andeq	r2, r1, r0, asr #4
   12210:	andeq	r2, r1, r0, asr #4
   12214:	andeq	r2, r1, r0, asr #4
   12218:	andeq	r2, r1, r0, asr #4
   1221c:	andeq	r2, r1, r0, asr #4
   12220:	andeq	r2, r1, r0, asr #4
   12224:	andeq	r2, r1, r0, asr #4
   12228:	andeq	r2, r1, r0, asr #4
   1222c:	andeq	r2, r1, r0, asr #4
   12230:	strdeq	r2, [r1], -ip
   12234:	andeq	r2, r1, r0, asr #6
   12238:	strdeq	r2, [r1], -ip
   1223c:	andeq	r2, r1, r8, lsr #6
   12240:	ldr	r0, [fp, #-68]	; 0xffffffbc
   12244:	tst	r0, #1
   12248:	bne	12274 <putchar_unlocked@plt+0x124c>
   1224c:	ubfx	r0, r4, #5, #3
   12250:	ldr	r1, [fp, #16]
   12254:	ldr	r0, [r1, r0, lsl #2]
   12258:	and	r1, r4, #31
   1225c:	mov	r2, #1
   12260:	tst	r0, r2, lsl r1
   12264:	beq	12274 <putchar_unlocked@plt+0x124c>
   12268:	mov	r0, r4
   1226c:	mov	r1, r6
   12270:	b	12288 <putchar_unlocked@plt+0x1260>
   12274:	ldr	r0, [fp, #-52]	; 0xffffffcc
   12278:	cmp	r0, #0
   1227c:	mov	r0, r4
   12280:	mov	r1, r6
   12284:	beq	125c0 <putchar_unlocked@plt+0x1598>
   12288:	ldr	r2, [fp, #-76]	; 0xffffffb4
   1228c:	tst	r2, #1
   12290:	bne	12b84 <putchar_unlocked@plt+0x1b5c>
   12294:	ldr	r2, [fp, #-64]	; 0xffffffc0
   12298:	subs	r2, r2, #2
   1229c:	movwne	r2, #1
   122a0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   122a4:	orr	r2, r2, r3
   122a8:	tst	r2, #1
   122ac:	bne	122e8 <putchar_unlocked@plt+0x12c0>
   122b0:	cmp	r8, sl
   122b4:	movcc	r2, #39	; 0x27
   122b8:	strbcc	r2, [r5, r8]
   122bc:	add	r2, r8, #1
   122c0:	cmp	r2, sl
   122c4:	movcc	r3, #36	; 0x24
   122c8:	strbcc	r3, [r5, r2]
   122cc:	add	r2, r8, #2
   122d0:	cmp	r2, sl
   122d4:	movcc	r3, #39	; 0x27
   122d8:	strbcc	r3, [r5, r2]
   122dc:	add	r8, r8, #3
   122e0:	mov	r2, #1
   122e4:	str	r2, [fp, #-56]	; 0xffffffc8
   122e8:	cmp	r8, sl
   122ec:	movcc	r2, #92	; 0x5c
   122f0:	strbcc	r2, [r5, r8]
   122f4:	add	r8, r8, #1
   122f8:	b	12604 <putchar_unlocked@plt+0x15dc>
   122fc:	cmp	lr, #1
   12300:	beq	12328 <putchar_unlocked@plt+0x1300>
   12304:	mov	r6, #0
   12308:	cmn	lr, #1
   1230c:	bne	12334 <putchar_unlocked@plt+0x130c>
   12310:	ldrb	r0, [ip, #1]
   12314:	cmp	r0, #0
   12318:	beq	12328 <putchar_unlocked@plt+0x1300>
   1231c:	mvn	lr, #0
   12320:	mov	r9, #0
   12324:	b	12240 <putchar_unlocked@plt+0x1218>
   12328:	mov	r6, #0
   1232c:	cmp	r7, #0
   12330:	beq	1233c <putchar_unlocked@plt+0x1314>
   12334:	mov	r9, #0
   12338:	b	12240 <putchar_unlocked@plt+0x1218>
   1233c:	mov	r1, #1
   12340:	ldr	r0, [fp, #-64]	; 0xffffffc0
   12344:	cmp	r0, #2
   12348:	bne	12360 <putchar_unlocked@plt+0x1338>
   1234c:	ldr	r0, [fp, #-76]	; 0xffffffb4
   12350:	tst	r0, #1
   12354:	mov	r6, r1
   12358:	beq	12240 <putchar_unlocked@plt+0x1218>
   1235c:	b	12b84 <putchar_unlocked@plt+0x1b5c>
   12360:	mov	r6, r1
   12364:	b	12240 <putchar_unlocked@plt+0x1218>
   12368:	ldr	r0, [fp, #-64]	; 0xffffffc0
   1236c:	cmp	r0, #2
   12370:	bne	125a4 <putchar_unlocked@plt+0x157c>
   12374:	ldr	r0, [fp, #-76]	; 0xffffffb4
   12378:	tst	r0, #1
   1237c:	bne	12b84 <putchar_unlocked@plt+0x1b5c>
   12380:	mov	r9, #0
   12384:	b	125b8 <putchar_unlocked@plt+0x1590>
   12388:	mov	r0, #102	; 0x66
   1238c:	b	1262c <putchar_unlocked@plt+0x1604>
   12390:	mov	r2, #116	; 0x74
   12394:	b	123a4 <putchar_unlocked@plt+0x137c>
   12398:	mov	r0, #98	; 0x62
   1239c:	b	1262c <putchar_unlocked@plt+0x1604>
   123a0:	mov	r2, #114	; 0x72
   123a4:	ldr	r0, [sp, #72]	; 0x48
   123a8:	tst	r0, #1
   123ac:	mov	r0, r2
   123b0:	bne	1262c <putchar_unlocked@plt+0x1604>
   123b4:	b	12b84 <putchar_unlocked@plt+0x1b5c>
   123b8:	ldr	r0, [sp, #92]	; 0x5c
   123bc:	tst	r0, #1
   123c0:	beq	12648 <putchar_unlocked@plt+0x1620>
   123c4:	ldr	r0, [fp, #-76]	; 0xffffffb4
   123c8:	tst	r0, #1
   123cc:	bne	12b84 <putchar_unlocked@plt+0x1b5c>
   123d0:	ldr	r0, [fp, #-64]	; 0xffffffc0
   123d4:	subs	r0, r0, #2
   123d8:	movwne	r0, #1
   123dc:	ldr	r1, [fp, #-56]	; 0xffffffc8
   123e0:	orr	r0, r0, r1
   123e4:	tst	r0, #1
   123e8:	bne	12424 <putchar_unlocked@plt+0x13fc>
   123ec:	cmp	r8, sl
   123f0:	movcc	r0, #39	; 0x27
   123f4:	strbcc	r0, [r5, r8]
   123f8:	add	r0, r8, #1
   123fc:	cmp	r0, sl
   12400:	movcc	r1, #36	; 0x24
   12404:	strbcc	r1, [r5, r0]
   12408:	add	r0, r8, #2
   1240c:	cmp	r0, sl
   12410:	movcc	r1, #39	; 0x27
   12414:	strbcc	r1, [r5, r0]
   12418:	add	r8, r8, #3
   1241c:	mov	r0, #1
   12420:	str	r0, [fp, #-56]	; 0xffffffc8
   12424:	cmp	r8, sl
   12428:	movcc	r0, #92	; 0x5c
   1242c:	strbcc	r0, [r5, r8]
   12430:	add	r0, r8, #1
   12434:	mov	r6, #0
   12438:	mov	r9, #1
   1243c:	mov	r4, #48	; 0x30
   12440:	ldr	r1, [fp, #-64]	; 0xffffffc0
   12444:	cmp	r1, #2
   12448:	beq	1280c <putchar_unlocked@plt+0x17e4>
   1244c:	add	r1, r7, #1
   12450:	cmp	r1, lr
   12454:	bcs	1280c <putchar_unlocked@plt+0x17e4>
   12458:	ldrb	r1, [ip, r1]
   1245c:	sub	r1, r1, #48	; 0x30
   12460:	uxtb	r1, r1
   12464:	cmp	r1, #9
   12468:	bhi	1280c <putchar_unlocked@plt+0x17e4>
   1246c:	cmp	r0, sl
   12470:	movcc	r1, #48	; 0x30
   12474:	strbcc	r1, [r5, r0]
   12478:	add	r0, r8, #2
   1247c:	cmp	r0, sl
   12480:	movcc	r1, #48	; 0x30
   12484:	strbcc	r1, [r5, r0]
   12488:	add	r8, r8, #3
   1248c:	b	12240 <putchar_unlocked@plt+0x1218>
   12490:	mov	r9, #0
   12494:	mov	r4, #63	; 0x3f
   12498:	ldr	r0, [fp, #-64]	; 0xffffffc0
   1249c:	cmp	r0, #5
   124a0:	beq	12814 <putchar_unlocked@plt+0x17ec>
   124a4:	cmp	r0, #2
   124a8:	bne	128bc <putchar_unlocked@plt+0x1894>
   124ac:	ldr	r0, [fp, #-76]	; 0xffffffb4
   124b0:	tst	r0, #1
   124b4:	mov	r6, #0
   124b8:	beq	12240 <putchar_unlocked@plt+0x1218>
   124bc:	b	12b84 <putchar_unlocked@plt+0x1b5c>
   124c0:	mov	r0, #118	; 0x76
   124c4:	b	1262c <putchar_unlocked@plt+0x1604>
   124c8:	mov	r4, #39	; 0x27
   124cc:	mov	r0, #1
   124d0:	str	r0, [sp, #64]	; 0x40
   124d4:	ldr	r0, [fp, #-64]	; 0xffffffc0
   124d8:	cmp	r0, #2
   124dc:	bne	12664 <putchar_unlocked@plt+0x163c>
   124e0:	ldr	r0, [fp, #-76]	; 0xffffffb4
   124e4:	tst	r0, #1
   124e8:	bne	12b84 <putchar_unlocked@plt+0x1b5c>
   124ec:	ldr	r2, [sp, #84]	; 0x54
   124f0:	cmp	r2, #0
   124f4:	mov	r0, r2
   124f8:	movwne	r0, #1
   124fc:	clz	r1, sl
   12500:	lsr	r1, r1, #5
   12504:	orrs	r0, r0, r1
   12508:	moveq	r2, sl
   1250c:	str	r2, [sp, #84]	; 0x54
   12510:	moveq	sl, r0
   12514:	cmp	r8, sl
   12518:	movcc	r0, #39	; 0x27
   1251c:	strbcc	r0, [r5, r8]
   12520:	add	r0, r8, #1
   12524:	cmp	r0, sl
   12528:	movcc	r1, #92	; 0x5c
   1252c:	strbcc	r1, [r5, r0]
   12530:	add	r0, r8, #2
   12534:	cmp	r0, sl
   12538:	movcc	r1, #39	; 0x27
   1253c:	strbcc	r1, [r5, r0]
   12540:	add	r8, r8, #3
   12544:	mov	r0, #0
   12548:	str	r0, [fp, #-56]	; 0xffffffc8
   1254c:	mov	r9, #0
   12550:	mov	r6, #1
   12554:	b	12240 <putchar_unlocked@plt+0x1218>
   12558:	ldr	r0, [sp, #44]	; 0x2c
   1255c:	cmp	r0, #1
   12560:	bne	1266c <putchar_unlocked@plt+0x1644>
   12564:	str	lr, [sp, #32]
   12568:	bl	10f20 <__ctype_b_loc@plt>
   1256c:	ldr	ip, [fp, #-80]	; 0xffffffb0
   12570:	ldr	r0, [r0]
   12574:	add	r0, r0, r4, lsl #1
   12578:	ldrb	r0, [r0, #1]
   1257c:	ubfx	r6, r0, #6, #1
   12580:	mov	r2, #1
   12584:	ldr	r0, [sp, #60]	; 0x3c
   12588:	orr	r1, r6, r0
   1258c:	cmp	r2, #1
   12590:	bhi	128c4 <putchar_unlocked@plt+0x189c>
   12594:	tst	r1, #1
   12598:	beq	128c4 <putchar_unlocked@plt+0x189c>
   1259c:	ldr	lr, [sp, #32]
   125a0:	b	12240 <putchar_unlocked@plt+0x1218>
   125a4:	mov	r9, #0
   125a8:	mov	r0, #92	; 0x5c
   125ac:	ldr	r1, [sp, #56]	; 0x38
   125b0:	cmp	r1, #0
   125b4:	beq	1262c <putchar_unlocked@plt+0x1604>
   125b8:	mov	r4, #92	; 0x5c
   125bc:	mov	r6, #0
   125c0:	cmp	r9, #0
   125c4:	bne	125fc <putchar_unlocked@plt+0x15d4>
   125c8:	ldr	r0, [fp, #-56]	; 0xffffffc8
   125cc:	tst	r0, #1
   125d0:	beq	125fc <putchar_unlocked@plt+0x15d4>
   125d4:	cmp	r8, sl
   125d8:	movcc	r0, #39	; 0x27
   125dc:	strbcc	r0, [r5, r8]
   125e0:	add	r0, r8, #1
   125e4:	cmp	r0, sl
   125e8:	movcc	r1, #39	; 0x27
   125ec:	strbcc	r1, [r5, r0]
   125f0:	add	r8, r8, #2
   125f4:	mov	r0, #0
   125f8:	str	r0, [fp, #-56]	; 0xffffffc8
   125fc:	mov	r1, r6
   12600:	mov	r0, r4
   12604:	cmp	r8, sl
   12608:	strbcc	r0, [r5, r8]
   1260c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   12610:	and	r0, r0, r1
   12614:	str	r0, [fp, #-48]	; 0xffffffd0
   12618:	add	r8, r8, #1
   1261c:	add	r7, r7, #1
   12620:	cmn	lr, #1
   12624:	bne	11f78 <putchar_unlocked@plt+0xf50>
   12628:	b	11f84 <putchar_unlocked@plt+0xf5c>
   1262c:	mov	r9, #0
   12630:	ldr	r1, [sp, #92]	; 0x5c
   12634:	tst	r1, #1
   12638:	mov	r6, #0
   1263c:	mov	r1, #0
   12640:	beq	12240 <putchar_unlocked@plt+0x1218>
   12644:	b	12288 <putchar_unlocked@plt+0x1260>
   12648:	mov	r4, #0
   1264c:	ldr	r0, [sp, #40]	; 0x28
   12650:	cmp	r0, #0
   12654:	mov	r9, #0
   12658:	mov	r6, #0
   1265c:	beq	12240 <putchar_unlocked@plt+0x1218>
   12660:	b	1261c <putchar_unlocked@plt+0x15f4>
   12664:	mov	r6, #1
   12668:	b	12240 <putchar_unlocked@plt+0x1218>
   1266c:	mov	r0, #0
   12670:	str	r0, [fp, #-36]	; 0xffffffdc
   12674:	str	r0, [fp, #-40]	; 0xffffffd8
   12678:	cmn	lr, #1
   1267c:	bne	12690 <putchar_unlocked@plt+0x1668>
   12680:	mov	r0, ip
   12684:	bl	10f44 <strlen@plt>
   12688:	ldr	ip, [fp, #-80]	; 0xffffffb0
   1268c:	mov	lr, r0
   12690:	ldr	r0, [sp, #76]	; 0x4c
   12694:	add	r0, r0, r7
   12698:	str	r0, [sp, #24]
   1269c:	mov	r6, #1
   126a0:	mov	r2, #0
   126a4:	sub	r0, fp, #40	; 0x28
   126a8:	mov	r3, r0
   126ac:	str	r5, [sp, #28]
   126b0:	str	lr, [sp, #32]
   126b4:	b	126f8 <putchar_unlocked@plt+0x16d0>
   126b8:	ldr	r5, [sp, #52]	; 0x34
   126bc:	add	r5, r0, r5
   126c0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   126c4:	bl	10e78 <iswprint@plt>
   126c8:	cmp	r0, #0
   126cc:	movwne	r0, #1
   126d0:	and	r6, r6, r0
   126d4:	sub	r0, fp, #40	; 0x28
   126d8:	bl	10e48 <mbsinit@plt>
   126dc:	sub	r3, fp, #40	; 0x28
   126e0:	mov	r2, r5
   126e4:	ldr	lr, [sp, #32]
   126e8:	cmp	r0, #0
   126ec:	ldr	r5, [sp, #28]
   126f0:	ldr	ip, [fp, #-80]	; 0xffffffb0
   126f4:	bne	12584 <putchar_unlocked@plt+0x155c>
   126f8:	str	r2, [sp, #52]	; 0x34
   126fc:	add	r0, r2, r7
   12700:	add	r1, ip, r0
   12704:	str	r0, [sp, #48]	; 0x30
   12708:	sub	r2, lr, r0
   1270c:	sub	r0, fp, #44	; 0x2c
   12710:	bl	145bc <putchar_unlocked@plt+0x3594>
   12714:	cmp	r0, #0
   12718:	beq	12a90 <putchar_unlocked@plt+0x1a68>
   1271c:	cmn	r0, #1
   12720:	beq	12a4c <putchar_unlocked@plt+0x1a24>
   12724:	cmn	r0, #2
   12728:	ldr	lr, [sp, #32]
   1272c:	beq	12a54 <putchar_unlocked@plt+0x1a2c>
   12730:	cmp	r0, #2
   12734:	mov	r1, #0
   12738:	movwcc	r1, #1
   1273c:	ldr	r2, [sp, #68]	; 0x44
   12740:	eor	r2, r2, #1
   12744:	orrs	r1, r2, r1
   12748:	bne	126b8 <putchar_unlocked@plt+0x1690>
   1274c:	ldr	r1, [sp, #52]	; 0x34
   12750:	ldr	r2, [sp, #24]
   12754:	add	r1, r2, r1
   12758:	sub	r2, r0, #1
   1275c:	b	1276c <putchar_unlocked@plt+0x1744>
   12760:	add	r1, r1, #1
   12764:	subs	r2, r2, #1
   12768:	beq	126b8 <putchar_unlocked@plt+0x1690>
   1276c:	ldrb	r3, [r1]
   12770:	sub	r3, r3, #91	; 0x5b
   12774:	cmp	r3, #33	; 0x21
   12778:	bhi	12760 <putchar_unlocked@plt+0x1738>
   1277c:	add	r5, pc, #0
   12780:	ldr	pc, [r5, r3, lsl #2]
   12784:	andeq	r2, r1, ip, ror fp
   12788:	andeq	r2, r1, ip, ror fp
   1278c:	andeq	r2, r1, r0, ror #14
   12790:	andeq	r2, r1, ip, ror fp
   12794:	andeq	r2, r1, r0, ror #14
   12798:	andeq	r2, r1, ip, ror fp
   1279c:	andeq	r2, r1, r0, ror #14
   127a0:	andeq	r2, r1, r0, ror #14
   127a4:	andeq	r2, r1, r0, ror #14
   127a8:	andeq	r2, r1, r0, ror #14
   127ac:	andeq	r2, r1, r0, ror #14
   127b0:	andeq	r2, r1, r0, ror #14
   127b4:	andeq	r2, r1, r0, ror #14
   127b8:	andeq	r2, r1, r0, ror #14
   127bc:	andeq	r2, r1, r0, ror #14
   127c0:	andeq	r2, r1, r0, ror #14
   127c4:	andeq	r2, r1, r0, ror #14
   127c8:	andeq	r2, r1, r0, ror #14
   127cc:	andeq	r2, r1, r0, ror #14
   127d0:	andeq	r2, r1, r0, ror #14
   127d4:	andeq	r2, r1, r0, ror #14
   127d8:	andeq	r2, r1, r0, ror #14
   127dc:	andeq	r2, r1, r0, ror #14
   127e0:	andeq	r2, r1, r0, ror #14
   127e4:	andeq	r2, r1, r0, ror #14
   127e8:	andeq	r2, r1, r0, ror #14
   127ec:	andeq	r2, r1, r0, ror #14
   127f0:	andeq	r2, r1, r0, ror #14
   127f4:	andeq	r2, r1, r0, ror #14
   127f8:	andeq	r2, r1, r0, ror #14
   127fc:	andeq	r2, r1, r0, ror #14
   12800:	andeq	r2, r1, r0, ror #14
   12804:	andeq	r2, r1, r0, ror #14
   12808:	andeq	r2, r1, ip, ror fp
   1280c:	mov	r8, r0
   12810:	b	12240 <putchar_unlocked@plt+0x1218>
   12814:	ldr	r0, [sp, #36]	; 0x24
   12818:	cmp	r0, #0
   1281c:	beq	128bc <putchar_unlocked@plt+0x1894>
   12820:	add	r0, r7, #2
   12824:	cmp	r0, lr
   12828:	bcs	128bc <putchar_unlocked@plt+0x1894>
   1282c:	add	r1, r7, ip
   12830:	ldrb	r1, [r1, #1]
   12834:	cmp	r1, #63	; 0x3f
   12838:	bne	128bc <putchar_unlocked@plt+0x1894>
   1283c:	ldrb	r1, [ip, r0]
   12840:	sub	r2, r1, #33	; 0x21
   12844:	cmp	r2, #29
   12848:	bhi	128bc <putchar_unlocked@plt+0x1894>
   1284c:	mov	r3, #1
   12850:	movw	r6, #20929	; 0x51c1
   12854:	movt	r6, #14336	; 0x3800
   12858:	tst	r6, r3, lsl r2
   1285c:	beq	128bc <putchar_unlocked@plt+0x1894>
   12860:	ldr	r2, [fp, #-76]	; 0xffffffb4
   12864:	tst	r2, #1
   12868:	bne	12b84 <putchar_unlocked@plt+0x1b5c>
   1286c:	cmp	r8, sl
   12870:	movcc	r2, #63	; 0x3f
   12874:	strbcc	r2, [r5, r8]
   12878:	add	r2, r8, #1
   1287c:	cmp	r2, sl
   12880:	movcc	r3, #34	; 0x22
   12884:	strbcc	r3, [r5, r2]
   12888:	add	r2, r8, #2
   1288c:	cmp	r2, sl
   12890:	movcc	r3, #34	; 0x22
   12894:	strbcc	r3, [r5, r2]
   12898:	add	r2, r8, #3
   1289c:	cmp	r2, sl
   128a0:	movcc	r3, #63	; 0x3f
   128a4:	strbcc	r3, [r5, r2]
   128a8:	add	r8, r8, #4
   128ac:	mov	r7, r0
   128b0:	mov	r4, r1
   128b4:	mov	r6, #0
   128b8:	b	12240 <putchar_unlocked@plt+0x1218>
   128bc:	mov	r6, #0
   128c0:	b	12240 <putchar_unlocked@plt+0x1218>
   128c4:	add	r0, r2, r7
   128c8:	str	r0, [sp, #52]	; 0x34
   128cc:	mov	r2, #0
   128d0:	ldr	lr, [sp, #32]
   128d4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   128d8:	str	r1, [sp, #48]	; 0x30
   128dc:	tst	r1, #1
   128e0:	bne	129bc <putchar_unlocked@plt+0x1994>
   128e4:	ldr	r1, [fp, #-76]	; 0xffffffb4
   128e8:	tst	r1, #1
   128ec:	bne	12b84 <putchar_unlocked@plt+0x1b5c>
   128f0:	mov	r3, r0
   128f4:	ldr	r0, [fp, #-64]	; 0xffffffc0
   128f8:	subs	r1, r0, #2
   128fc:	movwne	r1, #1
   12900:	orr	r1, r1, r3
   12904:	tst	r1, #1
   12908:	bne	12940 <putchar_unlocked@plt+0x1918>
   1290c:	cmp	r8, sl
   12910:	movcc	r0, #39	; 0x27
   12914:	strbcc	r0, [r5, r8]
   12918:	add	r2, r8, #1
   1291c:	cmp	r2, sl
   12920:	movcc	r0, #36	; 0x24
   12924:	strbcc	r0, [r5, r2]
   12928:	add	r2, r8, #2
   1292c:	cmp	r2, sl
   12930:	movcc	r0, #39	; 0x27
   12934:	strbcc	r0, [r5, r2]
   12938:	add	r8, r8, #3
   1293c:	mov	r3, #1
   12940:	cmp	r8, sl
   12944:	movcc	r1, #92	; 0x5c
   12948:	strbcc	r1, [r5, r8]
   1294c:	add	r2, r8, #1
   12950:	cmp	r2, sl
   12954:	bcs	12968 <putchar_unlocked@plt+0x1940>
   12958:	uxtb	r1, r4
   1295c:	mov	r0, #48	; 0x30
   12960:	orr	r1, r0, r1, lsr #6
   12964:	strb	r1, [r5, r2]
   12968:	add	r2, r8, #2
   1296c:	cmp	r2, sl
   12970:	lsrcc	r1, r4, #3
   12974:	movcc	r0, #6
   12978:	bficc	r1, r0, #3, #29
   1297c:	strbcc	r1, [r5, r2]
   12980:	mov	r0, #6
   12984:	bfi	r4, r0, #3, #29
   12988:	add	r8, r8, #3
   1298c:	mov	r2, #1
   12990:	mov	r0, r3
   12994:	b	129e0 <putchar_unlocked@plt+0x19b8>
   12998:	cmp	r8, sl
   1299c:	strbcc	r4, [r5, r8]
   129a0:	ldr	r1, [sp, #76]	; 0x4c
   129a4:	ldrb	r4, [r1, r7]
   129a8:	add	r8, r8, #1
   129ac:	mov	r7, r3
   129b0:	ldr	r1, [sp, #48]	; 0x30
   129b4:	tst	r1, #1
   129b8:	beq	128e4 <putchar_unlocked@plt+0x18bc>
   129bc:	ldr	r1, [fp, #-52]	; 0xffffffcc
   129c0:	tst	r1, #1
   129c4:	beq	129d8 <putchar_unlocked@plt+0x19b0>
   129c8:	cmp	r8, sl
   129cc:	movcc	r1, #92	; 0x5c
   129d0:	strbcc	r1, [r5, r8]
   129d4:	add	r8, r8, #1
   129d8:	mov	r1, #0
   129dc:	str	r1, [fp, #-52]	; 0xffffffcc
   129e0:	and	r9, r2, #1
   129e4:	add	r3, r7, #1
   129e8:	ldr	r1, [sp, #52]	; 0x34
   129ec:	cmp	r1, r3
   129f0:	bls	12a34 <putchar_unlocked@plt+0x1a0c>
   129f4:	cmp	r9, #0
   129f8:	movwne	r9, #1
   129fc:	mvn	r1, r0
   12a00:	orr	r1, r1, r9
   12a04:	tst	r1, #1
   12a08:	bne	12998 <putchar_unlocked@plt+0x1970>
   12a0c:	cmp	r8, sl
   12a10:	movcc	r1, #39	; 0x27
   12a14:	strbcc	r1, [r5, r8]
   12a18:	add	r1, r8, #1
   12a1c:	cmp	r1, sl
   12a20:	movcc	r0, #39	; 0x27
   12a24:	strbcc	r0, [r5, r1]
   12a28:	add	r8, r8, #2
   12a2c:	mov	r0, #0
   12a30:	b	12998 <putchar_unlocked@plt+0x1970>
   12a34:	str	r0, [fp, #-56]	; 0xffffffc8
   12a38:	cmp	r9, #0
   12a3c:	movwne	r9, #1
   12a40:	cmp	r9, #0
   12a44:	beq	125c8 <putchar_unlocked@plt+0x15a0>
   12a48:	b	125fc <putchar_unlocked@plt+0x15d4>
   12a4c:	mov	r6, #0
   12a50:	b	12a90 <putchar_unlocked@plt+0x1a68>
   12a54:	mov	r6, #0
   12a58:	ldr	r0, [sp, #48]	; 0x30
   12a5c:	cmp	r0, lr
   12a60:	bcs	12a90 <putchar_unlocked@plt+0x1a68>
   12a64:	ldr	ip, [fp, #-80]	; 0xffffffb0
   12a68:	add	r0, ip, r7
   12a6c:	ldr	r2, [sp, #52]	; 0x34
   12a70:	ldrb	r1, [r0, r2]
   12a74:	cmp	r1, #0
   12a78:	beq	12584 <putchar_unlocked@plt+0x155c>
   12a7c:	add	r2, r2, #1
   12a80:	add	r1, r7, r2
   12a84:	cmp	r1, lr
   12a88:	bcc	12a70 <putchar_unlocked@plt+0x1a48>
   12a8c:	b	12584 <putchar_unlocked@plt+0x155c>
   12a90:	ldr	ip, [fp, #-80]	; 0xffffffb0
   12a94:	ldr	r2, [sp, #52]	; 0x34
   12a98:	b	12584 <putchar_unlocked@plt+0x155c>
   12a9c:	ldr	r1, [fp, #-64]	; 0xffffffc0
   12aa0:	eor	r0, r1, #2
   12aa4:	orr	r0, r0, r8
   12aa8:	clz	r0, r0
   12aac:	lsr	r0, r0, #5
   12ab0:	ldr	r3, [fp, #-76]	; 0xffffffb4
   12ab4:	tst	r3, r0
   12ab8:	bne	12b84 <putchar_unlocked@plt+0x1b5c>
   12abc:	mov	r6, r5
   12ac0:	subs	r0, r1, #2
   12ac4:	movwne	r0, #1
   12ac8:	orr	r0, r3, r0
   12acc:	tst	r0, #1
   12ad0:	ldr	r2, [sp, #92]	; 0x5c
   12ad4:	ldreq	r0, [sp, #64]	; 0x40
   12ad8:	eoreq	r0, r0, #1
   12adc:	tsteq	r0, #1
   12ae0:	bne	12b20 <putchar_unlocked@plt+0x1af8>
   12ae4:	mov	r9, lr
   12ae8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   12aec:	tst	r0, #1
   12af0:	bne	12bec <putchar_unlocked@plt+0x1bc4>
   12af4:	ldr	r0, [sp, #84]	; 0x54
   12af8:	cmp	r0, #0
   12afc:	beq	12b20 <putchar_unlocked@plt+0x1af8>
   12b00:	mov	r0, #0
   12b04:	str	r0, [fp, #-48]	; 0xffffffd0
   12b08:	mov	r1, #2
   12b0c:	cmp	sl, #0
   12b10:	mov	r0, r2
   12b14:	mov	r4, r3
   12b18:	ldr	r7, [sp, #84]	; 0x54
   12b1c:	beq	11cf8 <putchar_unlocked@plt+0xcd0>
   12b20:	ldr	r1, [fp, #-84]	; 0xffffffac
   12b24:	clz	r0, r1
   12b28:	lsr	r0, r0, #5
   12b2c:	orr	r0, r0, r3
   12b30:	tst	r0, #1
   12b34:	bne	12b60 <putchar_unlocked@plt+0x1b38>
   12b38:	ldrb	r0, [r1]
   12b3c:	cmp	r0, #0
   12b40:	beq	12b60 <putchar_unlocked@plt+0x1b38>
   12b44:	add	r1, r1, #1
   12b48:	cmp	r8, sl
   12b4c:	strbcc	r0, [r6, r8]
   12b50:	add	r8, r8, #1
   12b54:	ldrb	r0, [r1], #1
   12b58:	cmp	r0, #0
   12b5c:	bne	12b48 <putchar_unlocked@plt+0x1b20>
   12b60:	cmp	r8, sl
   12b64:	movcc	r0, #0
   12b68:	strbcc	r0, [r6, r8]
   12b6c:	b	12be0 <putchar_unlocked@plt+0x1bb8>
   12b70:	ldr	ip, [fp, #-80]	; 0xffffffb0
   12b74:	mov	lr, r4
   12b78:	b	12b84 <putchar_unlocked@plt+0x1b5c>
   12b7c:	ldr	r5, [sp, #28]
   12b80:	ldr	ip, [fp, #-80]	; 0xffffffb0
   12b84:	mov	r0, #0
   12b88:	ldr	r1, [fp, #12]
   12b8c:	bic	r1, r1, #2
   12b90:	mov	r2, #2
   12b94:	ldr	r3, [sp, #92]	; 0x5c
   12b98:	tst	r3, #1
   12b9c:	movwne	r2, #4
   12ba0:	ldr	r3, [fp, #-64]	; 0xffffffc0
   12ba4:	cmp	r3, #2
   12ba8:	movne	r2, r3
   12bac:	str	r2, [sp]
   12bb0:	str	r1, [sp, #4]
   12bb4:	str	r0, [sp, #8]
   12bb8:	ldr	r0, [sp, #80]	; 0x50
   12bbc:	str	r0, [sp, #12]
   12bc0:	ldr	r0, [sp, #88]	; 0x58
   12bc4:	str	r0, [sp, #16]
   12bc8:	mov	r0, r5
   12bcc:	mov	r1, sl
   12bd0:	mov	r2, ip
   12bd4:	mov	r3, lr
   12bd8:	bl	11c6c <putchar_unlocked@plt+0xc44>
   12bdc:	mov	r8, r0
   12be0:	mov	r0, r8
   12be4:	sub	sp, fp, #28
   12be8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12bec:	mov	r0, #5
   12bf0:	str	r0, [sp]
   12bf4:	ldr	r0, [fp, #12]
   12bf8:	str	r0, [sp, #4]
   12bfc:	ldr	r0, [fp, #16]
   12c00:	str	r0, [sp, #8]
   12c04:	ldr	r0, [sp, #80]	; 0x50
   12c08:	str	r0, [sp, #12]
   12c0c:	ldr	r0, [sp, #88]	; 0x58
   12c10:	str	r0, [sp, #16]
   12c14:	mov	r0, r6
   12c18:	ldr	r1, [sp, #84]	; 0x54
   12c1c:	ldr	r2, [fp, #-80]	; 0xffffffb0
   12c20:	mov	r3, r9
   12c24:	b	12bd8 <putchar_unlocked@plt+0x1bb0>
   12c28:	bl	11010 <abort@plt>
   12c2c:	mov	r3, r2
   12c30:	mov	r2, #0
   12c34:	b	12c38 <putchar_unlocked@plt+0x1c10>
   12c38:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12c3c:	add	fp, sp, #28
   12c40:	sub	sp, sp, #36	; 0x24
   12c44:	mov	r4, r2
   12c48:	str	r2, [sp, #24]
   12c4c:	mov	r5, r1
   12c50:	mov	r6, r0
   12c54:	str	r0, [sp, #20]
   12c58:	movw	r8, #24944	; 0x6170
   12c5c:	movt	r8, #2
   12c60:	cmp	r3, #0
   12c64:	movne	r8, r3
   12c68:	bl	10f50 <__errno_location@plt>
   12c6c:	str	r0, [sp, #28]
   12c70:	ldm	r8, {r3, r9}
   12c74:	ldr	r1, [r8, #40]	; 0x28
   12c78:	ldr	r2, [r8, #44]	; 0x2c
   12c7c:	ldr	r7, [r0]
   12c80:	str	r7, [sp, #32]
   12c84:	add	sl, r8, #8
   12c88:	cmp	r4, #0
   12c8c:	orreq	r9, r9, #1
   12c90:	stm	sp, {r3, r9, sl}
   12c94:	str	r1, [sp, #12]
   12c98:	str	r2, [sp, #16]
   12c9c:	mov	r0, #0
   12ca0:	mov	r1, #0
   12ca4:	mov	r2, r6
   12ca8:	mov	r3, r5
   12cac:	mov	r7, r5
   12cb0:	bl	11c6c <putchar_unlocked@plt+0xc44>
   12cb4:	mov	r5, r0
   12cb8:	add	r4, r0, #1
   12cbc:	mov	r0, r4
   12cc0:	bl	13b40 <putchar_unlocked@plt+0x2b18>
   12cc4:	mov	r6, r0
   12cc8:	ldr	r0, [r8]
   12ccc:	ldr	r1, [r8, #40]	; 0x28
   12cd0:	ldr	r2, [r8, #44]	; 0x2c
   12cd4:	stm	sp, {r0, r9, sl}
   12cd8:	str	r1, [sp, #12]
   12cdc:	str	r2, [sp, #16]
   12ce0:	mov	r0, r6
   12ce4:	mov	r1, r4
   12ce8:	ldr	r2, [sp, #20]
   12cec:	mov	r3, r7
   12cf0:	bl	11c6c <putchar_unlocked@plt+0xc44>
   12cf4:	ldr	r0, [sp, #24]
   12cf8:	ldr	r1, [sp, #32]
   12cfc:	ldr	r2, [sp, #28]
   12d00:	str	r1, [r2]
   12d04:	cmp	r0, #0
   12d08:	strne	r5, [r0]
   12d0c:	mov	r0, r6
   12d10:	sub	sp, fp, #28
   12d14:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12d18:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   12d1c:	add	fp, sp, #24
   12d20:	movw	r8, #24816	; 0x60f0
   12d24:	movt	r8, #2
   12d28:	ldr	r4, [r8]
   12d2c:	movw	r5, #24820	; 0x60f4
   12d30:	movt	r5, #2
   12d34:	ldr	r0, [r5]
   12d38:	cmp	r0, #2
   12d3c:	blt	12d68 <putchar_unlocked@plt+0x1d40>
   12d40:	add	r7, r4, #12
   12d44:	mov	r6, #0
   12d48:	ldr	r0, [r7, r6, lsl #3]
   12d4c:	bl	119ac <putchar_unlocked@plt+0x984>
   12d50:	add	r0, r6, #1
   12d54:	ldr	r1, [r5]
   12d58:	add	r2, r6, #2
   12d5c:	cmp	r2, r1
   12d60:	mov	r6, r0
   12d64:	blt	12d48 <putchar_unlocked@plt+0x1d20>
   12d68:	ldr	r0, [r4, #4]
   12d6c:	movw	r9, #24992	; 0x61a0
   12d70:	movt	r9, #2
   12d74:	cmp	r0, r9
   12d78:	movw	r7, #24824	; 0x60f8
   12d7c:	movt	r7, #2
   12d80:	beq	12d90 <putchar_unlocked@plt+0x1d68>
   12d84:	bl	119ac <putchar_unlocked@plt+0x984>
   12d88:	mov	r0, #256	; 0x100
   12d8c:	stm	r7, {r0, r9}
   12d90:	cmp	r4, r7
   12d94:	beq	12da4 <putchar_unlocked@plt+0x1d7c>
   12d98:	mov	r0, r4
   12d9c:	bl	119ac <putchar_unlocked@plt+0x984>
   12da0:	str	r7, [r8]
   12da4:	mov	r0, #1
   12da8:	str	r0, [r5]
   12dac:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   12db0:	movw	r3, #24944	; 0x6170
   12db4:	movt	r3, #2
   12db8:	mvn	r2, #0
   12dbc:	b	12dc0 <putchar_unlocked@plt+0x1d98>
   12dc0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12dc4:	add	fp, sp, #28
   12dc8:	sub	sp, sp, #44	; 0x2c
   12dcc:	mov	r7, r3
   12dd0:	str	r2, [sp, #36]	; 0x24
   12dd4:	str	r1, [sp, #32]
   12dd8:	mov	r5, r0
   12ddc:	bl	10f50 <__errno_location@plt>
   12de0:	cmp	r5, #0
   12de4:	bmi	12f54 <putchar_unlocked@plt+0x1f2c>
   12de8:	cmn	r5, #-2147483647	; 0x80000001
   12dec:	beq	12f54 <putchar_unlocked@plt+0x1f2c>
   12df0:	movw	r4, #24816	; 0x60f0
   12df4:	movt	r4, #2
   12df8:	ldr	r6, [r4]
   12dfc:	str	r0, [sp, #28]
   12e00:	ldr	r0, [r0]
   12e04:	str	r0, [sp, #24]
   12e08:	movw	r8, #24820	; 0x60f4
   12e0c:	movt	r8, #2
   12e10:	ldr	r1, [r8]
   12e14:	cmp	r1, r5
   12e18:	ble	12e24 <putchar_unlocked@plt+0x1dfc>
   12e1c:	mov	sl, r6
   12e20:	b	12e90 <putchar_unlocked@plt+0x1e68>
   12e24:	str	r1, [fp, #-32]	; 0xffffffe0
   12e28:	mov	r0, #8
   12e2c:	str	r0, [sp]
   12e30:	movw	r9, #24824	; 0x60f8
   12e34:	movt	r9, #2
   12e38:	subs	r0, r6, r9
   12e3c:	movne	r0, r6
   12e40:	sub	r1, r5, r1
   12e44:	add	r2, r1, #1
   12e48:	sub	r1, fp, #32
   12e4c:	mvn	r3, #-2147483648	; 0x80000000
   12e50:	bl	13c1c <putchar_unlocked@plt+0x2bf4>
   12e54:	mov	sl, r0
   12e58:	str	r0, [r4]
   12e5c:	cmp	r6, r9
   12e60:	bne	12e6c <putchar_unlocked@plt+0x1e44>
   12e64:	ldrd	r0, [r9]
   12e68:	stm	sl, {r0, r1}
   12e6c:	ldr	r1, [r8]
   12e70:	add	r0, sl, r1, lsl #3
   12e74:	ldr	r2, [fp, #-32]	; 0xffffffe0
   12e78:	sub	r1, r2, r1
   12e7c:	lsl	r2, r1, #3
   12e80:	mov	r1, #0
   12e84:	bl	10f80 <memset@plt>
   12e88:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12e8c:	str	r0, [r8]
   12e90:	mov	r9, sl
   12e94:	ldr	r6, [r9, r5, lsl #3]!
   12e98:	ldr	r4, [r9, #4]!
   12e9c:	ldm	r7, {r0, r1}
   12ea0:	ldr	r2, [r7, #40]	; 0x28
   12ea4:	ldr	r3, [r7, #44]	; 0x2c
   12ea8:	orr	r8, r1, #1
   12eac:	add	r1, r7, #8
   12eb0:	stm	sp, {r0, r8}
   12eb4:	str	r1, [sp, #20]
   12eb8:	add	r0, sp, #8
   12ebc:	stm	r0, {r1, r2, r3}
   12ec0:	mov	r0, r4
   12ec4:	mov	r1, r6
   12ec8:	ldr	r2, [sp, #32]
   12ecc:	ldr	r3, [sp, #36]	; 0x24
   12ed0:	bl	11c6c <putchar_unlocked@plt+0xc44>
   12ed4:	cmp	r6, r0
   12ed8:	bhi	12f3c <putchar_unlocked@plt+0x1f14>
   12edc:	add	r6, r0, #1
   12ee0:	str	r6, [sl, r5, lsl #3]
   12ee4:	movw	r0, #24992	; 0x61a0
   12ee8:	movt	r0, #2
   12eec:	cmp	r4, r0
   12ef0:	beq	12efc <putchar_unlocked@plt+0x1ed4>
   12ef4:	mov	r0, r4
   12ef8:	bl	119ac <putchar_unlocked@plt+0x984>
   12efc:	mov	r0, r6
   12f00:	bl	13b40 <putchar_unlocked@plt+0x2b18>
   12f04:	mov	r4, r0
   12f08:	str	r0, [r9]
   12f0c:	ldr	r0, [r7]
   12f10:	ldr	r1, [r7, #40]	; 0x28
   12f14:	ldr	r2, [r7, #44]	; 0x2c
   12f18:	stm	sp, {r0, r8}
   12f1c:	ldr	r0, [sp, #20]
   12f20:	add	r3, sp, #8
   12f24:	stm	r3, {r0, r1, r2}
   12f28:	mov	r0, r4
   12f2c:	mov	r1, r6
   12f30:	ldr	r2, [sp, #32]
   12f34:	ldr	r3, [sp, #36]	; 0x24
   12f38:	bl	11c6c <putchar_unlocked@plt+0xc44>
   12f3c:	ldr	r0, [sp, #28]
   12f40:	ldr	r1, [sp, #24]
   12f44:	str	r1, [r0]
   12f48:	mov	r0, r4
   12f4c:	sub	sp, fp, #28
   12f50:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12f54:	bl	11010 <abort@plt>
   12f58:	movw	r3, #24944	; 0x6170
   12f5c:	movt	r3, #2
   12f60:	b	12dc0 <putchar_unlocked@plt+0x1d98>
   12f64:	mov	r1, r0
   12f68:	mov	r0, #0
   12f6c:	b	12db0 <putchar_unlocked@plt+0x1d88>
   12f70:	mov	r2, r1
   12f74:	mov	r1, r0
   12f78:	mov	r0, #0
   12f7c:	b	12f58 <putchar_unlocked@plt+0x1f30>
   12f80:	push	{r4, r5, r6, sl, fp, lr}
   12f84:	add	fp, sp, #16
   12f88:	sub	sp, sp, #48	; 0x30
   12f8c:	mov	r4, r2
   12f90:	mov	r5, r0
   12f94:	mov	r6, sp
   12f98:	mov	r0, r6
   12f9c:	bl	12fbc <putchar_unlocked@plt+0x1f94>
   12fa0:	mov	r0, r5
   12fa4:	mov	r1, r4
   12fa8:	mvn	r2, #0
   12fac:	mov	r3, r6
   12fb0:	bl	12dc0 <putchar_unlocked@plt+0x1d98>
   12fb4:	sub	sp, fp, #16
   12fb8:	pop	{r4, r5, r6, sl, fp, pc}
   12fbc:	push	{fp, lr}
   12fc0:	mov	fp, sp
   12fc4:	vmov.i32	q8, #0	; 0x00000000
   12fc8:	mov	r2, #32
   12fcc:	mov	r3, r0
   12fd0:	vst1.32	{d16-d17}, [r3], r2
   12fd4:	vst1.32	{d16-d17}, [r3]
   12fd8:	add	r2, r0, #16
   12fdc:	vst1.32	{d16-d17}, [r2]
   12fe0:	cmp	r1, #10
   12fe4:	strne	r1, [r0]
   12fe8:	popne	{fp, pc}
   12fec:	bl	11010 <abort@plt>
   12ff0:	push	{r4, r5, r6, r7, fp, lr}
   12ff4:	add	fp, sp, #16
   12ff8:	sub	sp, sp, #48	; 0x30
   12ffc:	mov	r4, r3
   13000:	mov	r5, r2
   13004:	mov	r6, r0
   13008:	mov	r7, sp
   1300c:	mov	r0, r7
   13010:	bl	12fbc <putchar_unlocked@plt+0x1f94>
   13014:	mov	r0, r6
   13018:	mov	r1, r5
   1301c:	mov	r2, r4
   13020:	mov	r3, r7
   13024:	bl	12dc0 <putchar_unlocked@plt+0x1d98>
   13028:	sub	sp, fp, #16
   1302c:	pop	{r4, r5, r6, r7, fp, pc}
   13030:	mov	r2, r1
   13034:	mov	r1, r0
   13038:	mov	r0, #0
   1303c:	b	12f80 <putchar_unlocked@plt+0x1f58>
   13040:	mov	r3, r2
   13044:	mov	r2, r1
   13048:	mov	r1, r0
   1304c:	mov	r0, #0
   13050:	b	12ff0 <putchar_unlocked@plt+0x1fc8>
   13054:	push	{r4, r5, r6, sl, fp, lr}
   13058:	add	fp, sp, #16
   1305c:	sub	sp, sp, #48	; 0x30
   13060:	mov	r4, r1
   13064:	mov	r5, r0
   13068:	movw	r0, #24944	; 0x6170
   1306c:	movt	r0, #2
   13070:	add	r1, r0, #16
   13074:	mov	r3, #32
   13078:	vld1.64	{d16-d17}, [r0], r3
   1307c:	vld1.64	{d18-d19}, [r1]
   13080:	mov	r6, sp
   13084:	add	r1, r6, #16
   13088:	vld1.64	{d20-d21}, [r0]
   1308c:	vst1.64	{d18-d19}, [r1]
   13090:	mov	r0, r6
   13094:	vst1.64	{d16-d17}, [r0], r3
   13098:	vst1.64	{d20-d21}, [r0]
   1309c:	mov	r0, r6
   130a0:	mov	r1, r2
   130a4:	mov	r2, #1
   130a8:	bl	11b60 <putchar_unlocked@plt+0xb38>
   130ac:	mov	r0, #0
   130b0:	mov	r1, r5
   130b4:	mov	r2, r4
   130b8:	mov	r3, r6
   130bc:	bl	12dc0 <putchar_unlocked@plt+0x1d98>
   130c0:	sub	sp, fp, #16
   130c4:	pop	{r4, r5, r6, sl, fp, pc}
   130c8:	mov	r2, r1
   130cc:	mvn	r1, #0
   130d0:	b	13054 <putchar_unlocked@plt+0x202c>
   130d4:	mov	r1, #58	; 0x3a
   130d8:	b	130c8 <putchar_unlocked@plt+0x20a0>
   130dc:	mov	r2, #58	; 0x3a
   130e0:	b	13054 <putchar_unlocked@plt+0x202c>
   130e4:	push	{r4, r5, r6, sl, fp, lr}
   130e8:	add	fp, sp, #16
   130ec:	sub	sp, sp, #48	; 0x30
   130f0:	mov	r4, r2
   130f4:	mov	r5, r0
   130f8:	mov	r6, sp
   130fc:	mov	r0, r6
   13100:	bl	12fbc <putchar_unlocked@plt+0x1f94>
   13104:	mov	r0, r6
   13108:	mov	r1, #58	; 0x3a
   1310c:	mov	r2, #1
   13110:	bl	11b60 <putchar_unlocked@plt+0xb38>
   13114:	mov	r0, r5
   13118:	mov	r1, r4
   1311c:	mvn	r2, #0
   13120:	mov	r3, r6
   13124:	bl	12dc0 <putchar_unlocked@plt+0x1d98>
   13128:	sub	sp, fp, #16
   1312c:	pop	{r4, r5, r6, sl, fp, pc}
   13130:	push	{fp, lr}
   13134:	mov	fp, sp
   13138:	sub	sp, sp, #8
   1313c:	mvn	ip, #0
   13140:	str	ip, [sp]
   13144:	bl	13150 <putchar_unlocked@plt+0x2128>
   13148:	mov	sp, fp
   1314c:	pop	{fp, pc}
   13150:	push	{r4, r5, r6, r7, fp, lr}
   13154:	add	fp, sp, #16
   13158:	sub	sp, sp, #48	; 0x30
   1315c:	mov	r7, r3
   13160:	mov	r5, r0
   13164:	movw	r0, #24944	; 0x6170
   13168:	movt	r0, #2
   1316c:	add	r3, r0, #16
   13170:	mov	r4, #32
   13174:	vld1.64	{d16-d17}, [r0], r4
   13178:	vld1.64	{d18-d19}, [r3]
   1317c:	mov	r6, sp
   13180:	add	r3, r6, #16
   13184:	vld1.64	{d20-d21}, [r0]
   13188:	vst1.64	{d18-d19}, [r3]
   1318c:	mov	r0, r6
   13190:	vst1.64	{d16-d17}, [r0], r4
   13194:	vst1.64	{d20-d21}, [r0]
   13198:	mov	r0, r6
   1319c:	bl	11bb8 <putchar_unlocked@plt+0xb90>
   131a0:	ldr	r2, [fp, #8]
   131a4:	mov	r0, r5
   131a8:	mov	r1, r7
   131ac:	mov	r3, r6
   131b0:	bl	12dc0 <putchar_unlocked@plt+0x1d98>
   131b4:	sub	sp, fp, #16
   131b8:	pop	{r4, r5, r6, r7, fp, pc}
   131bc:	mov	r3, r2
   131c0:	mov	r2, r1
   131c4:	mov	r1, r0
   131c8:	mov	r0, #0
   131cc:	b	13130 <putchar_unlocked@plt+0x2108>
   131d0:	push	{fp, lr}
   131d4:	mov	fp, sp
   131d8:	sub	sp, sp, #8
   131dc:	mov	ip, r2
   131e0:	mov	r2, r1
   131e4:	mov	r1, r0
   131e8:	str	r3, [sp]
   131ec:	mov	r0, #0
   131f0:	mov	r3, ip
   131f4:	bl	13150 <putchar_unlocked@plt+0x2128>
   131f8:	mov	sp, fp
   131fc:	pop	{fp, pc}
   13200:	movw	r3, #24832	; 0x6100
   13204:	movt	r3, #2
   13208:	b	12dc0 <putchar_unlocked@plt+0x1d98>
   1320c:	mov	r2, r1
   13210:	mov	r1, r0
   13214:	mov	r0, #0
   13218:	b	13200 <putchar_unlocked@plt+0x21d8>
   1321c:	mvn	r2, #0
   13220:	b	13200 <putchar_unlocked@plt+0x21d8>
   13224:	mov	r1, r0
   13228:	mov	r0, #0
   1322c:	b	1321c <putchar_unlocked@plt+0x21f4>
   13230:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   13234:	add	fp, sp, #24
   13238:	sub	sp, sp, #16
   1323c:	mov	r4, r1
   13240:	mov	r5, r0
   13244:	mov	r7, #0
   13248:	mov	r0, #0
   1324c:	mov	r1, r5
   13250:	mov	r2, #5
   13254:	bl	10e54 <dcgettext@plt>
   13258:	cmp	r0, r5
   1325c:	beq	13268 <putchar_unlocked@plt+0x2240>
   13260:	sub	sp, fp, #24
   13264:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   13268:	bl	14584 <putchar_unlocked@plt+0x355c>
   1326c:	mov	r6, r0
   13270:	mov	r8, #56	; 0x38
   13274:	mov	r0, #45	; 0x2d
   13278:	stm	sp, {r0, r8}
   1327c:	str	r7, [sp, #8]
   13280:	str	r7, [sp, #12]
   13284:	mov	r0, r6
   13288:	mov	r1, #85	; 0x55
   1328c:	mov	r2, #84	; 0x54
   13290:	mov	r3, #70	; 0x46
   13294:	bl	1332c <putchar_unlocked@plt+0x2304>
   13298:	cmp	r0, #0
   1329c:	beq	132b8 <putchar_unlocked@plt+0x2290>
   132a0:	ldrb	r1, [r5]
   132a4:	movw	r2, #20546	; 0x5042
   132a8:	movt	r2, #1
   132ac:	movw	r0, #20550	; 0x5046
   132b0:	movt	r0, #1
   132b4:	b	132fc <putchar_unlocked@plt+0x22d4>
   132b8:	mov	r0, #48	; 0x30
   132bc:	mov	r1, #51	; 0x33
   132c0:	str	r8, [sp]
   132c4:	stmib	sp, {r0, r1}
   132c8:	str	r0, [sp, #12]
   132cc:	mov	r0, r6
   132d0:	mov	r1, #71	; 0x47
   132d4:	mov	r2, #66	; 0x42
   132d8:	mov	r3, #49	; 0x31
   132dc:	bl	1332c <putchar_unlocked@plt+0x2304>
   132e0:	cmp	r0, #0
   132e4:	beq	1330c <putchar_unlocked@plt+0x22e4>
   132e8:	ldrb	r1, [r5]
   132ec:	movw	r2, #20554	; 0x504a
   132f0:	movt	r2, #1
   132f4:	movw	r0, #20558	; 0x504e
   132f8:	movt	r0, #1
   132fc:	cmp	r1, #96	; 0x60
   13300:	moveq	r0, r2
   13304:	sub	sp, fp, #24
   13308:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1330c:	movw	r1, #20540	; 0x503c
   13310:	movt	r1, #1
   13314:	movw	r0, #20544	; 0x5040
   13318:	movt	r0, #1
   1331c:	cmp	r4, #9
   13320:	moveq	r0, r1
   13324:	sub	sp, fp, #24
   13328:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1332c:	push	{r4, r5, r6, r7, fp, lr}
   13330:	add	fp, sp, #16
   13334:	sub	sp, sp, #16
   13338:	mov	r4, r3
   1333c:	mov	r5, r2
   13340:	mov	r7, r1
   13344:	mov	r6, r0
   13348:	mov	r0, r1
   1334c:	bl	14290 <putchar_unlocked@plt+0x3268>
   13350:	ldrb	r1, [r6]
   13354:	cmp	r0, #0
   13358:	andne	r1, r1, #223	; 0xdf
   1335c:	mov	r0, #0
   13360:	cmp	r1, r7
   13364:	bne	1339c <putchar_unlocked@plt+0x2374>
   13368:	cmp	r7, #0
   1336c:	beq	133a4 <putchar_unlocked@plt+0x237c>
   13370:	ldr	r0, [fp, #20]
   13374:	ldr	r1, [fp, #16]
   13378:	ldr	r2, [fp, #12]
   1337c:	ldr	r3, [fp, #8]
   13380:	str	r2, [sp]
   13384:	str	r1, [sp, #4]
   13388:	str	r0, [sp, #8]
   1338c:	mov	r0, r6
   13390:	mov	r1, r5
   13394:	mov	r2, r4
   13398:	bl	133b0 <putchar_unlocked@plt+0x2388>
   1339c:	sub	sp, fp, #16
   133a0:	pop	{r4, r5, r6, r7, fp, pc}
   133a4:	mov	r0, #1
   133a8:	sub	sp, fp, #16
   133ac:	pop	{r4, r5, r6, r7, fp, pc}
   133b0:	push	{r4, r5, r6, r7, fp, lr}
   133b4:	add	fp, sp, #16
   133b8:	sub	sp, sp, #8
   133bc:	mov	r4, r3
   133c0:	mov	r5, r2
   133c4:	mov	r7, r1
   133c8:	mov	r6, r0
   133cc:	mov	r0, r1
   133d0:	bl	14290 <putchar_unlocked@plt+0x3268>
   133d4:	ldrb	r1, [r6, #1]
   133d8:	cmp	r0, #0
   133dc:	andne	r1, r1, #223	; 0xdf
   133e0:	mov	r0, #0
   133e4:	cmp	r1, r7
   133e8:	bne	13418 <putchar_unlocked@plt+0x23f0>
   133ec:	cmp	r7, #0
   133f0:	beq	13420 <putchar_unlocked@plt+0x23f8>
   133f4:	ldr	r0, [fp, #16]
   133f8:	ldr	r1, [fp, #12]
   133fc:	ldr	r3, [fp, #8]
   13400:	str	r1, [sp]
   13404:	str	r0, [sp, #4]
   13408:	mov	r0, r6
   1340c:	mov	r1, r5
   13410:	mov	r2, r4
   13414:	bl	1342c <putchar_unlocked@plt+0x2404>
   13418:	sub	sp, fp, #16
   1341c:	pop	{r4, r5, r6, r7, fp, pc}
   13420:	mov	r0, #1
   13424:	sub	sp, fp, #16
   13428:	pop	{r4, r5, r6, r7, fp, pc}
   1342c:	push	{r4, r5, r6, r7, fp, lr}
   13430:	add	fp, sp, #16
   13434:	sub	sp, sp, #8
   13438:	mov	r4, r3
   1343c:	mov	r5, r2
   13440:	mov	r7, r1
   13444:	mov	r6, r0
   13448:	mov	r0, r1
   1344c:	bl	14290 <putchar_unlocked@plt+0x3268>
   13450:	ldrb	r1, [r6, #2]
   13454:	cmp	r0, #0
   13458:	andne	r1, r1, #223	; 0xdf
   1345c:	mov	r0, #0
   13460:	cmp	r1, r7
   13464:	bne	1348c <putchar_unlocked@plt+0x2464>
   13468:	cmp	r7, #0
   1346c:	beq	13494 <putchar_unlocked@plt+0x246c>
   13470:	ldr	r0, [fp, #12]
   13474:	ldr	r3, [fp, #8]
   13478:	str	r0, [sp]
   1347c:	mov	r0, r6
   13480:	mov	r1, r5
   13484:	mov	r2, r4
   13488:	bl	134a0 <putchar_unlocked@plt+0x2478>
   1348c:	sub	sp, fp, #16
   13490:	pop	{r4, r5, r6, r7, fp, pc}
   13494:	mov	r0, #1
   13498:	sub	sp, fp, #16
   1349c:	pop	{r4, r5, r6, r7, fp, pc}
   134a0:	push	{r4, r5, r6, r7, fp, lr}
   134a4:	add	fp, sp, #16
   134a8:	mov	r4, r3
   134ac:	mov	r5, r2
   134b0:	mov	r7, r1
   134b4:	mov	r6, r0
   134b8:	mov	r0, r1
   134bc:	bl	14290 <putchar_unlocked@plt+0x3268>
   134c0:	ldrb	r1, [r6, #3]
   134c4:	ldr	r3, [fp, #8]
   134c8:	cmp	r0, #0
   134cc:	andne	r1, r1, #223	; 0xdf
   134d0:	mov	r0, #0
   134d4:	cmp	r1, r7
   134d8:	bne	134fc <putchar_unlocked@plt+0x24d4>
   134dc:	cmp	r7, #0
   134e0:	beq	134f8 <putchar_unlocked@plt+0x24d0>
   134e4:	mov	r0, r6
   134e8:	mov	r1, r5
   134ec:	mov	r2, r4
   134f0:	pop	{r4, r5, r6, r7, fp, lr}
   134f4:	b	13500 <putchar_unlocked@plt+0x24d8>
   134f8:	mov	r0, #1
   134fc:	pop	{r4, r5, r6, r7, fp, pc}
   13500:	push	{r4, r5, r6, r7, fp, lr}
   13504:	add	fp, sp, #16
   13508:	mov	r4, r3
   1350c:	mov	r5, r2
   13510:	mov	r7, r1
   13514:	mov	r6, r0
   13518:	mov	r0, r1
   1351c:	bl	14290 <putchar_unlocked@plt+0x3268>
   13520:	ldrb	r1, [r6, #4]
   13524:	cmp	r0, #0
   13528:	andne	r1, r1, #223	; 0xdf
   1352c:	mov	r0, #0
   13530:	cmp	r1, r7
   13534:	bne	13558 <putchar_unlocked@plt+0x2530>
   13538:	cmp	r7, #0
   1353c:	beq	13554 <putchar_unlocked@plt+0x252c>
   13540:	mov	r0, r6
   13544:	mov	r1, r5
   13548:	mov	r2, r4
   1354c:	pop	{r4, r5, r6, r7, fp, lr}
   13550:	b	1355c <putchar_unlocked@plt+0x2534>
   13554:	mov	r0, #1
   13558:	pop	{r4, r5, r6, r7, fp, pc}
   1355c:	push	{r4, r5, r6, sl, fp, lr}
   13560:	add	fp, sp, #16
   13564:	mov	r4, r2
   13568:	mov	r6, r1
   1356c:	mov	r5, r0
   13570:	mov	r0, r1
   13574:	bl	14290 <putchar_unlocked@plt+0x3268>
   13578:	ldrb	r1, [r5, #5]
   1357c:	cmp	r0, #0
   13580:	andne	r1, r1, #223	; 0xdf
   13584:	mov	r0, #0
   13588:	cmp	r1, r6
   1358c:	bne	135ac <putchar_unlocked@plt+0x2584>
   13590:	cmp	r6, #0
   13594:	beq	135a8 <putchar_unlocked@plt+0x2580>
   13598:	mov	r0, r5
   1359c:	mov	r1, r4
   135a0:	pop	{r4, r5, r6, sl, fp, lr}
   135a4:	b	135b0 <putchar_unlocked@plt+0x2588>
   135a8:	mov	r0, #1
   135ac:	pop	{r4, r5, r6, sl, fp, pc}
   135b0:	push	{r4, r5, fp, lr}
   135b4:	add	fp, sp, #8
   135b8:	mov	r5, r1
   135bc:	mov	r4, r0
   135c0:	mov	r0, r1
   135c4:	bl	14290 <putchar_unlocked@plt+0x3268>
   135c8:	ldrb	r1, [r4, #6]
   135cc:	cmp	r0, #0
   135d0:	andne	r1, r1, #223	; 0xdf
   135d4:	mov	r0, #0
   135d8:	cmp	r1, r5
   135dc:	popne	{r4, r5, fp, pc}
   135e0:	cmp	r5, #0
   135e4:	beq	135f4 <putchar_unlocked@plt+0x25cc>
   135e8:	mov	r0, r4
   135ec:	pop	{r4, r5, fp, lr}
   135f0:	b	135fc <putchar_unlocked@plt+0x25d4>
   135f4:	mov	r0, #1
   135f8:	pop	{r4, r5, fp, pc}
   135fc:	push	{r4, sl, fp, lr}
   13600:	add	fp, sp, #8
   13604:	mov	r4, r0
   13608:	mov	r0, #0
   1360c:	bl	14290 <putchar_unlocked@plt+0x3268>
   13610:	ldrb	r1, [r4, #7]
   13614:	cmp	r0, #0
   13618:	beq	1362c <putchar_unlocked@plt+0x2604>
   1361c:	tst	r1, #223	; 0xdf
   13620:	bne	13634 <putchar_unlocked@plt+0x260c>
   13624:	mov	r0, #1
   13628:	pop	{r4, sl, fp, pc}
   1362c:	cmp	r1, #0
   13630:	beq	13624 <putchar_unlocked@plt+0x25fc>
   13634:	mov	r0, #0
   13638:	pop	{r4, sl, fp, pc}
   1363c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   13640:	add	fp, sp, #24
   13644:	sub	sp, sp, #32
   13648:	mov	r4, r2
   1364c:	mov	r8, r0
   13650:	ldr	r6, [fp, #12]
   13654:	ldr	r7, [fp, #8]
   13658:	cmp	r1, #0
   1365c:	beq	13684 <putchar_unlocked@plt+0x265c>
   13660:	mov	r5, r1
   13664:	str	r4, [sp]
   13668:	str	r3, [sp, #4]
   1366c:	movw	r2, #20648	; 0x50a8
   13670:	movt	r2, #1
   13674:	mov	r0, r8
   13678:	mov	r1, #1
   1367c:	mov	r3, r5
   13680:	b	1369c <putchar_unlocked@plt+0x2674>
   13684:	str	r3, [sp]
   13688:	movw	r2, #20660	; 0x50b4
   1368c:	movt	r2, #1
   13690:	mov	r0, r8
   13694:	mov	r1, #1
   13698:	mov	r3, r4
   1369c:	bl	10fa4 <__fprintf_chk@plt>
   136a0:	movw	r1, #20667	; 0x50bb
   136a4:	movt	r1, #1
   136a8:	mov	r0, #0
   136ac:	mov	r2, #5
   136b0:	bl	10e54 <dcgettext@plt>
   136b4:	mov	r3, r0
   136b8:	movw	r0, #2022	; 0x7e6
   136bc:	str	r0, [sp]
   136c0:	movw	r2, #21385	; 0x5389
   136c4:	movt	r2, #1
   136c8:	mov	r0, r8
   136cc:	mov	r1, #1
   136d0:	bl	10fa4 <__fprintf_chk@plt>
   136d4:	movw	r4, #20127	; 0x4e9f
   136d8:	movt	r4, #1
   136dc:	mov	r0, r4
   136e0:	mov	r1, r8
   136e4:	bl	10dd0 <fputs_unlocked@plt>
   136e8:	movw	r1, #20671	; 0x50bf
   136ec:	movt	r1, #1
   136f0:	mov	r0, #0
   136f4:	mov	r2, #5
   136f8:	bl	10e54 <dcgettext@plt>
   136fc:	mov	r2, r0
   13700:	movw	r3, #20842	; 0x516a
   13704:	movt	r3, #1
   13708:	mov	r0, r8
   1370c:	mov	r1, #1
   13710:	bl	10fa4 <__fprintf_chk@plt>
   13714:	mov	r0, r4
   13718:	mov	r1, r8
   1371c:	bl	10dd0 <fputs_unlocked@plt>
   13720:	cmp	r6, #9
   13724:	bhi	13760 <putchar_unlocked@plt+0x2738>
   13728:	add	r0, pc, #0
   1372c:	ldr	pc, [r0, r6, lsl #2]
   13730:	andeq	r3, r1, r8, asr r7
   13734:	andeq	r3, r1, ip, ror #14
   13738:	muleq	r1, ip, r7
   1373c:	andeq	r3, r1, r4, asr #15
   13740:	andeq	r3, r1, ip, ror #15
   13744:	andeq	r3, r1, r4, lsl r8
   13748:	andeq	r3, r1, ip, lsr r8
   1374c:	andeq	r3, r1, r4, ror r8
   13750:	andeq	r3, r1, r4, lsl r9
   13754:			; <UNDEFINED> instruction: 0x000138bc
   13758:	sub	sp, fp, #24
   1375c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   13760:	movw	r1, #21195	; 0x52cb
   13764:	movt	r1, #1
   13768:	b	138c4 <putchar_unlocked@plt+0x289c>
   1376c:	movw	r1, #20876	; 0x518c
   13770:	movt	r1, #1
   13774:	mov	r0, #0
   13778:	mov	r2, #5
   1377c:	bl	10e54 <dcgettext@plt>
   13780:	mov	r2, r0
   13784:	ldr	r3, [r7]
   13788:	mov	r0, r8
   1378c:	mov	r1, #1
   13790:	sub	sp, fp, #24
   13794:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   13798:	b	10fa4 <__fprintf_chk@plt>
   1379c:	movw	r1, #20892	; 0x519c
   137a0:	movt	r1, #1
   137a4:	mov	r0, #0
   137a8:	mov	r2, #5
   137ac:	bl	10e54 <dcgettext@plt>
   137b0:	mov	r2, r0
   137b4:	ldr	r3, [r7]
   137b8:	ldr	r0, [r7, #4]
   137bc:	str	r0, [sp]
   137c0:	b	138b0 <putchar_unlocked@plt+0x2888>
   137c4:	movw	r1, #20915	; 0x51b3
   137c8:	movt	r1, #1
   137cc:	mov	r0, #0
   137d0:	mov	r2, #5
   137d4:	bl	10e54 <dcgettext@plt>
   137d8:	mov	r2, r0
   137dc:	ldr	r3, [r7]
   137e0:	ldmib	r7, {r0, r1}
   137e4:	stm	sp, {r0, r1}
   137e8:	b	138b0 <putchar_unlocked@plt+0x2888>
   137ec:	movw	r1, #20943	; 0x51cf
   137f0:	movt	r1, #1
   137f4:	mov	r0, #0
   137f8:	mov	r2, #5
   137fc:	bl	10e54 <dcgettext@plt>
   13800:	mov	r2, r0
   13804:	ldr	r3, [r7]
   13808:	ldmib	r7, {r0, r1, r7}
   1380c:	stm	sp, {r0, r1, r7}
   13810:	b	138b0 <putchar_unlocked@plt+0x2888>
   13814:	movw	r1, #20975	; 0x51ef
   13818:	movt	r1, #1
   1381c:	mov	r0, #0
   13820:	mov	r2, #5
   13824:	bl	10e54 <dcgettext@plt>
   13828:	mov	r2, r0
   1382c:	ldr	r3, [r7]
   13830:	ldmib	r7, {r0, r1, r6, r7}
   13834:	stm	sp, {r0, r1, r6, r7}
   13838:	b	138b0 <putchar_unlocked@plt+0x2888>
   1383c:	movw	r1, #21011	; 0x5213
   13840:	movt	r1, #1
   13844:	mov	r0, #0
   13848:	mov	r2, #5
   1384c:	bl	10e54 <dcgettext@plt>
   13850:	mov	r2, r0
   13854:	ldr	r3, [r7]
   13858:	ldmib	r7, {r0, r1, r6}
   1385c:	ldr	r5, [r7, #16]
   13860:	ldr	r7, [r7, #20]
   13864:	stm	sp, {r0, r1, r6}
   13868:	str	r5, [sp, #12]
   1386c:	str	r7, [sp, #16]
   13870:	b	138b0 <putchar_unlocked@plt+0x2888>
   13874:	movw	r1, #21051	; 0x523b
   13878:	movt	r1, #1
   1387c:	mov	r0, #0
   13880:	mov	r2, #5
   13884:	bl	10e54 <dcgettext@plt>
   13888:	mov	r2, r0
   1388c:	ldr	r3, [r7]
   13890:	ldmib	r7, {r0, r1, r6}
   13894:	ldr	r5, [r7, #16]
   13898:	ldr	r4, [r7, #20]
   1389c:	ldr	r7, [r7, #24]
   138a0:	stm	sp, {r0, r1, r6}
   138a4:	str	r5, [sp, #12]
   138a8:	str	r4, [sp, #16]
   138ac:	str	r7, [sp, #20]
   138b0:	mov	r0, r8
   138b4:	mov	r1, #1
   138b8:	b	13964 <putchar_unlocked@plt+0x293c>
   138bc:	movw	r1, #21143	; 0x5297
   138c0:	movt	r1, #1
   138c4:	mov	r0, #0
   138c8:	mov	r2, #5
   138cc:	bl	10e54 <dcgettext@plt>
   138d0:	mov	ip, r0
   138d4:	ldr	r3, [r7]
   138d8:	ldr	r0, [r7, #4]
   138dc:	ldr	r1, [r7, #8]
   138e0:	ldr	r6, [r7, #12]
   138e4:	ldr	r5, [r7, #16]
   138e8:	ldr	r4, [r7, #20]
   138ec:	ldr	r2, [r7, #24]
   138f0:	ldr	lr, [r7, #28]
   138f4:	ldr	r7, [r7, #32]
   138f8:	stm	sp, {r0, r1, r6}
   138fc:	str	r5, [sp, #12]
   13900:	str	r4, [sp, #16]
   13904:	str	r2, [sp, #20]
   13908:	str	lr, [sp, #24]
   1390c:	str	r7, [sp, #28]
   13910:	b	13958 <putchar_unlocked@plt+0x2930>
   13914:	movw	r1, #21095	; 0x5267
   13918:	movt	r1, #1
   1391c:	mov	r0, #0
   13920:	mov	r2, #5
   13924:	bl	10e54 <dcgettext@plt>
   13928:	mov	ip, r0
   1392c:	ldr	r3, [r7]
   13930:	ldmib	r7, {r0, r1, r6}
   13934:	ldr	r5, [r7, #16]
   13938:	ldr	r4, [r7, #20]
   1393c:	ldr	r2, [r7, #24]
   13940:	ldr	r7, [r7, #28]
   13944:	stm	sp, {r0, r1, r6}
   13948:	str	r5, [sp, #12]
   1394c:	str	r4, [sp, #16]
   13950:	str	r2, [sp, #20]
   13954:	str	r7, [sp, #24]
   13958:	mov	r0, r8
   1395c:	mov	r1, #1
   13960:	mov	r2, ip
   13964:	bl	10fa4 <__fprintf_chk@plt>
   13968:	sub	sp, fp, #24
   1396c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   13970:	push	{r4, sl, fp, lr}
   13974:	add	fp, sp, #8
   13978:	sub	sp, sp, #8
   1397c:	mov	lr, #0
   13980:	ldr	ip, [fp, #8]
   13984:	ldr	r4, [ip, lr, lsl #2]
   13988:	add	lr, lr, #1
   1398c:	cmp	r4, #0
   13990:	bne	13984 <putchar_unlocked@plt+0x295c>
   13994:	sub	r4, lr, #1
   13998:	str	ip, [sp]
   1399c:	str	r4, [sp, #4]
   139a0:	bl	1363c <putchar_unlocked@plt+0x2614>
   139a4:	sub	sp, fp, #8
   139a8:	pop	{r4, sl, fp, pc}
   139ac:	push	{r4, r5, fp, lr}
   139b0:	add	fp, sp, #8
   139b4:	sub	sp, sp, #48	; 0x30
   139b8:	mov	ip, #0
   139bc:	ldr	r4, [fp, #8]
   139c0:	add	lr, sp, #8
   139c4:	ldr	r5, [r4]
   139c8:	str	r5, [lr, ip, lsl #2]
   139cc:	cmp	r5, #0
   139d0:	beq	139e8 <putchar_unlocked@plt+0x29c0>
   139d4:	add	ip, ip, #1
   139d8:	add	r4, r4, #4
   139dc:	cmp	ip, #10
   139e0:	bne	139c4 <putchar_unlocked@plt+0x299c>
   139e4:	mov	ip, #10
   139e8:	str	lr, [sp]
   139ec:	str	ip, [sp, #4]
   139f0:	bl	1363c <putchar_unlocked@plt+0x2614>
   139f4:	sub	sp, fp, #8
   139f8:	pop	{r4, r5, fp, pc}
   139fc:	push	{fp, lr}
   13a00:	mov	fp, sp
   13a04:	sub	sp, sp, #8
   13a08:	add	ip, fp, #8
   13a0c:	str	ip, [sp, #4]
   13a10:	str	ip, [sp]
   13a14:	bl	139ac <putchar_unlocked@plt+0x2984>
   13a18:	mov	sp, fp
   13a1c:	pop	{fp, pc}
   13a20:	push	{fp, lr}
   13a24:	mov	fp, sp
   13a28:	movw	r0, #24900	; 0x6144
   13a2c:	movt	r0, #2
   13a30:	ldr	r1, [r0]
   13a34:	movw	r0, #20127	; 0x4e9f
   13a38:	movt	r0, #1
   13a3c:	bl	10dd0 <fputs_unlocked@plt>
   13a40:	movw	r1, #21255	; 0x5307
   13a44:	movt	r1, #1
   13a48:	mov	r0, #0
   13a4c:	mov	r2, #5
   13a50:	bl	10e54 <dcgettext@plt>
   13a54:	mov	r1, r0
   13a58:	movw	r2, #21275	; 0x531b
   13a5c:	movt	r2, #1
   13a60:	mov	r0, #1
   13a64:	bl	10f8c <__printf_chk@plt>
   13a68:	movw	r1, #21297	; 0x5331
   13a6c:	movt	r1, #1
   13a70:	mov	r0, #0
   13a74:	mov	r2, #5
   13a78:	bl	10e54 <dcgettext@plt>
   13a7c:	mov	r1, r0
   13a80:	movw	r2, #19685	; 0x4ce5
   13a84:	movt	r2, #1
   13a88:	movw	r3, #19936	; 0x4de0
   13a8c:	movt	r3, #1
   13a90:	mov	r0, #1
   13a94:	bl	10f8c <__printf_chk@plt>
   13a98:	movw	r1, #21317	; 0x5345
   13a9c:	movt	r1, #1
   13aa0:	mov	r0, #0
   13aa4:	mov	r2, #5
   13aa8:	bl	10e54 <dcgettext@plt>
   13aac:	mov	r1, r0
   13ab0:	movw	r2, #21356	; 0x536c
   13ab4:	movt	r2, #1
   13ab8:	mov	r0, #1
   13abc:	pop	{fp, lr}
   13ac0:	b	10f8c <__printf_chk@plt>
   13ac4:	b	13ac8 <putchar_unlocked@plt+0x2aa0>
   13ac8:	push	{r4, r5, r6, sl, fp, lr}
   13acc:	add	fp, sp, #16
   13ad0:	mov	r4, r2
   13ad4:	mov	r5, r1
   13ad8:	mov	r6, r0
   13adc:	bl	14834 <putchar_unlocked@plt+0x380c>
   13ae0:	cmp	r0, #0
   13ae4:	popne	{r4, r5, r6, sl, fp, pc}
   13ae8:	cmp	r6, #0
   13aec:	beq	13b00 <putchar_unlocked@plt+0x2ad8>
   13af0:	cmp	r5, #0
   13af4:	cmpne	r4, #0
   13af8:	bne	13b00 <putchar_unlocked@plt+0x2ad8>
   13afc:	pop	{r4, r5, r6, sl, fp, pc}
   13b00:	bl	13e8c <putchar_unlocked@plt+0x2e64>
   13b04:	push	{fp, lr}
   13b08:	mov	fp, sp
   13b0c:	bl	13f58 <putchar_unlocked@plt+0x2f30>
   13b10:	pop	{fp, lr}
   13b14:	b	13b18 <putchar_unlocked@plt+0x2af0>
   13b18:	cmp	r0, #0
   13b1c:	bxne	lr
   13b20:	push	{fp, lr}
   13b24:	mov	fp, sp
   13b28:	bl	13e8c <putchar_unlocked@plt+0x2e64>
   13b2c:	push	{fp, lr}
   13b30:	mov	fp, sp
   13b34:	bl	14550 <putchar_unlocked@plt+0x3528>
   13b38:	pop	{fp, lr}
   13b3c:	b	13b18 <putchar_unlocked@plt+0x2af0>
   13b40:	b	13b04 <putchar_unlocked@plt+0x2adc>
   13b44:	push	{r4, r5, fp, lr}
   13b48:	add	fp, sp, #8
   13b4c:	mov	r4, r1
   13b50:	mov	r5, r0
   13b54:	bl	13f88 <putchar_unlocked@plt+0x2f60>
   13b58:	cmp	r0, #0
   13b5c:	popne	{r4, r5, fp, pc}
   13b60:	cmp	r5, #0
   13b64:	beq	13b74 <putchar_unlocked@plt+0x2b4c>
   13b68:	cmp	r4, #0
   13b6c:	bne	13b74 <putchar_unlocked@plt+0x2b4c>
   13b70:	pop	{r4, r5, fp, pc}
   13b74:	bl	13e8c <putchar_unlocked@plt+0x2e64>
   13b78:	push	{fp, lr}
   13b7c:	mov	fp, sp
   13b80:	bl	14554 <putchar_unlocked@plt+0x352c>
   13b84:	pop	{fp, lr}
   13b88:	b	13b18 <putchar_unlocked@plt+0x2af0>
   13b8c:	push	{fp, lr}
   13b90:	mov	fp, sp
   13b94:	bl	14564 <putchar_unlocked@plt+0x353c>
   13b98:	pop	{fp, lr}
   13b9c:	b	13b18 <putchar_unlocked@plt+0x2af0>
   13ba0:	mov	r2, r1
   13ba4:	mov	r1, r0
   13ba8:	mov	r0, #0
   13bac:	b	13ac8 <putchar_unlocked@plt+0x2aa0>
   13bb0:	mov	r2, r1
   13bb4:	mov	r1, r0
   13bb8:	mov	r0, #0
   13bbc:	b	13b8c <putchar_unlocked@plt+0x2b64>
   13bc0:	mov	r2, #1
   13bc4:	b	13bc8 <putchar_unlocked@plt+0x2ba0>
   13bc8:	push	{r4, r5, fp, lr}
   13bcc:	add	fp, sp, #8
   13bd0:	mov	r4, r1
   13bd4:	ldr	r5, [r1]
   13bd8:	cmp	r0, #0
   13bdc:	beq	13bf4 <putchar_unlocked@plt+0x2bcc>
   13be0:	mov	r1, #1
   13be4:	add	r1, r1, r5, lsr #1
   13be8:	adds	r5, r5, r1
   13bec:	bcc	13c0c <putchar_unlocked@plt+0x2be4>
   13bf0:	bl	13e8c <putchar_unlocked@plt+0x2e64>
   13bf4:	cmp	r5, #0
   13bf8:	bne	13c0c <putchar_unlocked@plt+0x2be4>
   13bfc:	mov	r1, #64	; 0x40
   13c00:	udiv	r5, r1, r2
   13c04:	cmp	r2, #64	; 0x40
   13c08:	addhi	r5, r5, #1
   13c0c:	mov	r1, r5
   13c10:	bl	13ac8 <putchar_unlocked@plt+0x2aa0>
   13c14:	str	r5, [r4]
   13c18:	pop	{r4, r5, fp, pc}
   13c1c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   13c20:	add	fp, sp, #24
   13c24:	mov	r8, r1
   13c28:	ldr	r6, [r1]
   13c2c:	add	r1, r6, r6, asr #1
   13c30:	cmp	r1, r6
   13c34:	mvnvs	r1, #-2147483648	; 0x80000000
   13c38:	cmp	r1, r3
   13c3c:	mov	r5, r1
   13c40:	movgt	r5, r3
   13c44:	cmn	r3, #1
   13c48:	movle	r5, r1
   13c4c:	ldr	r4, [fp, #8]
   13c50:	cmn	r4, #1
   13c54:	ble	13c7c <putchar_unlocked@plt+0x2c54>
   13c58:	cmp	r4, #0
   13c5c:	beq	13cd0 <putchar_unlocked@plt+0x2ca8>
   13c60:	cmn	r5, #1
   13c64:	ble	13ca4 <putchar_unlocked@plt+0x2c7c>
   13c68:	mvn	r7, #-2147483648	; 0x80000000
   13c6c:	udiv	r1, r7, r4
   13c70:	cmp	r1, r5
   13c74:	bge	13cd0 <putchar_unlocked@plt+0x2ca8>
   13c78:	b	13ce0 <putchar_unlocked@plt+0x2cb8>
   13c7c:	cmn	r5, #1
   13c80:	ble	13cc0 <putchar_unlocked@plt+0x2c98>
   13c84:	cmn	r4, #1
   13c88:	beq	13cd0 <putchar_unlocked@plt+0x2ca8>
   13c8c:	mov	r1, #-2147483648	; 0x80000000
   13c90:	sdiv	r1, r1, r4
   13c94:	mvn	r7, #-2147483648	; 0x80000000
   13c98:	cmp	r1, r5
   13c9c:	bge	13cd0 <putchar_unlocked@plt+0x2ca8>
   13ca0:	b	13ce0 <putchar_unlocked@plt+0x2cb8>
   13ca4:	beq	13cd0 <putchar_unlocked@plt+0x2ca8>
   13ca8:	mov	r1, #-2147483648	; 0x80000000
   13cac:	sdiv	r1, r1, r5
   13cb0:	mvn	r7, #-2147483648	; 0x80000000
   13cb4:	cmp	r1, r4
   13cb8:	bge	13cd0 <putchar_unlocked@plt+0x2ca8>
   13cbc:	b	13ce0 <putchar_unlocked@plt+0x2cb8>
   13cc0:	mvn	r7, #-2147483648	; 0x80000000
   13cc4:	sdiv	r1, r7, r4
   13cc8:	cmp	r5, r1
   13ccc:	blt	13ce0 <putchar_unlocked@plt+0x2cb8>
   13cd0:	mul	r1, r5, r4
   13cd4:	mov	r7, #64	; 0x40
   13cd8:	cmp	r1, #63	; 0x3f
   13cdc:	bgt	13ce8 <putchar_unlocked@plt+0x2cc0>
   13ce0:	sdiv	r5, r7, r4
   13ce4:	mul	r1, r5, r4
   13ce8:	cmp	r0, #0
   13cec:	moveq	r7, #0
   13cf0:	streq	r7, [r8]
   13cf4:	sub	r7, r5, r6
   13cf8:	cmp	r7, r2
   13cfc:	bge	13da8 <putchar_unlocked@plt+0x2d80>
   13d00:	add	r5, r6, r2
   13d04:	mov	r1, #0
   13d08:	cmp	r5, r3
   13d0c:	mov	r2, #0
   13d10:	movwgt	r2, #1
   13d14:	cmn	r3, #1
   13d18:	movwgt	r1, #1
   13d1c:	cmp	r5, r6
   13d20:	bvs	13d90 <putchar_unlocked@plt+0x2d68>
   13d24:	ands	r1, r1, r2
   13d28:	bne	13d90 <putchar_unlocked@plt+0x2d68>
   13d2c:	cmn	r4, #1
   13d30:	ble	13d58 <putchar_unlocked@plt+0x2d30>
   13d34:	cmp	r4, #0
   13d38:	beq	13da4 <putchar_unlocked@plt+0x2d7c>
   13d3c:	cmn	r5, #1
   13d40:	ble	13d7c <putchar_unlocked@plt+0x2d54>
   13d44:	mvn	r1, #-2147483648	; 0x80000000
   13d48:	udiv	r1, r1, r4
   13d4c:	cmp	r1, r5
   13d50:	bge	13da4 <putchar_unlocked@plt+0x2d7c>
   13d54:	b	13d90 <putchar_unlocked@plt+0x2d68>
   13d58:	cmn	r5, #1
   13d5c:	ble	13d94 <putchar_unlocked@plt+0x2d6c>
   13d60:	cmn	r4, #1
   13d64:	beq	13da4 <putchar_unlocked@plt+0x2d7c>
   13d68:	mov	r1, #-2147483648	; 0x80000000
   13d6c:	sdiv	r1, r1, r4
   13d70:	cmp	r1, r5
   13d74:	bge	13da4 <putchar_unlocked@plt+0x2d7c>
   13d78:	b	13d90 <putchar_unlocked@plt+0x2d68>
   13d7c:	beq	13da4 <putchar_unlocked@plt+0x2d7c>
   13d80:	mov	r1, #-2147483648	; 0x80000000
   13d84:	sdiv	r1, r1, r5
   13d88:	cmp	r1, r4
   13d8c:	bge	13da4 <putchar_unlocked@plt+0x2d7c>
   13d90:	bl	13e8c <putchar_unlocked@plt+0x2e64>
   13d94:	mvn	r1, #-2147483648	; 0x80000000
   13d98:	sdiv	r1, r1, r4
   13d9c:	cmp	r5, r1
   13da0:	blt	13d90 <putchar_unlocked@plt+0x2d68>
   13da4:	mul	r1, r5, r4
   13da8:	bl	13b44 <putchar_unlocked@plt+0x2b1c>
   13dac:	str	r5, [r8]
   13db0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   13db4:	mov	r1, #1
   13db8:	b	13dbc <putchar_unlocked@plt+0x2d94>
   13dbc:	push	{fp, lr}
   13dc0:	mov	fp, sp
   13dc4:	bl	13f04 <putchar_unlocked@plt+0x2edc>
   13dc8:	pop	{fp, lr}
   13dcc:	b	13b18 <putchar_unlocked@plt+0x2af0>
   13dd0:	mov	r1, #1
   13dd4:	b	13dd8 <putchar_unlocked@plt+0x2db0>
   13dd8:	push	{fp, lr}
   13ddc:	mov	fp, sp
   13de0:	bl	14560 <putchar_unlocked@plt+0x3538>
   13de4:	pop	{fp, lr}
   13de8:	b	13b18 <putchar_unlocked@plt+0x2af0>
   13dec:	push	{r4, r5, fp, lr}
   13df0:	add	fp, sp, #8
   13df4:	mov	r4, r1
   13df8:	mov	r5, r0
   13dfc:	mov	r0, r1
   13e00:	bl	13b04 <putchar_unlocked@plt+0x2adc>
   13e04:	mov	r1, r5
   13e08:	mov	r2, r4
   13e0c:	pop	{r4, r5, fp, lr}
   13e10:	b	10e3c <memcpy@plt>
   13e14:	push	{r4, r5, fp, lr}
   13e18:	add	fp, sp, #8
   13e1c:	mov	r4, r1
   13e20:	mov	r5, r0
   13e24:	mov	r0, r1
   13e28:	bl	13b2c <putchar_unlocked@plt+0x2b04>
   13e2c:	mov	r1, r5
   13e30:	mov	r2, r4
   13e34:	pop	{r4, r5, fp, lr}
   13e38:	b	10e3c <memcpy@plt>
   13e3c:	push	{r4, r5, fp, lr}
   13e40:	add	fp, sp, #8
   13e44:	mov	r4, r1
   13e48:	mov	r5, r0
   13e4c:	add	r0, r1, #1
   13e50:	bl	13b2c <putchar_unlocked@plt+0x2b04>
   13e54:	mov	r1, #0
   13e58:	strb	r1, [r0, r4]
   13e5c:	mov	r1, r5
   13e60:	mov	r2, r4
   13e64:	pop	{r4, r5, fp, lr}
   13e68:	b	10e3c <memcpy@plt>
   13e6c:	push	{r4, sl, fp, lr}
   13e70:	add	fp, sp, #8
   13e74:	mov	r4, r0
   13e78:	bl	10f44 <strlen@plt>
   13e7c:	add	r1, r0, #1
   13e80:	mov	r0, r4
   13e84:	pop	{r4, sl, fp, lr}
   13e88:	b	13dec <putchar_unlocked@plt+0x2dc4>
   13e8c:	push	{fp, lr}
   13e90:	mov	fp, sp
   13e94:	movw	r0, #24812	; 0x60ec
   13e98:	movt	r0, #2
   13e9c:	ldr	r4, [r0]
   13ea0:	movw	r1, #21432	; 0x53b8
   13ea4:	movt	r1, #1
   13ea8:	mov	r0, #0
   13eac:	mov	r2, #5
   13eb0:	bl	10e54 <dcgettext@plt>
   13eb4:	mov	r3, r0
   13eb8:	movw	r2, #20391	; 0x4fa7
   13ebc:	movt	r2, #1
   13ec0:	mov	r0, r4
   13ec4:	mov	r1, #0
   13ec8:	bl	10ed8 <error@plt>
   13ecc:	bl	11010 <abort@plt>
   13ed0:	push	{r4, sl, fp, lr}
   13ed4:	add	fp, sp, #8
   13ed8:	bl	14620 <putchar_unlocked@plt+0x35f8>
   13edc:	mov	r4, r0
   13ee0:	cmn	r0, #1
   13ee4:	bne	13ef8 <putchar_unlocked@plt+0x2ed0>
   13ee8:	bl	10f50 <__errno_location@plt>
   13eec:	ldr	r0, [r0]
   13ef0:	cmp	r0, #12
   13ef4:	beq	13f00 <putchar_unlocked@plt+0x2ed8>
   13ef8:	mov	r0, r4
   13efc:	pop	{r4, sl, fp, pc}
   13f00:	bl	13e8c <putchar_unlocked@plt+0x2e64>
   13f04:	clz	r2, r1
   13f08:	lsr	r2, r2, #5
   13f0c:	clz	r3, r0
   13f10:	lsr	r3, r3, #5
   13f14:	orrs	r2, r3, r2
   13f18:	movwne	r1, #1
   13f1c:	movwne	r0, #1
   13f20:	cmp	r1, #0
   13f24:	beq	13f54 <putchar_unlocked@plt+0x2f2c>
   13f28:	mvn	r2, #-2147483648	; 0x80000000
   13f2c:	udiv	r2, r2, r1
   13f30:	cmp	r2, r0
   13f34:	bcs	13f54 <putchar_unlocked@plt+0x2f2c>
   13f38:	push	{fp, lr}
   13f3c:	mov	fp, sp
   13f40:	bl	10f50 <__errno_location@plt>
   13f44:	mov	r1, #12
   13f48:	str	r1, [r0]
   13f4c:	mov	r0, #0
   13f50:	pop	{fp, pc}
   13f54:	b	10dc4 <calloc@plt>
   13f58:	cmp	r0, #0
   13f5c:	movweq	r0, #1
   13f60:	cmn	r0, #1
   13f64:	ble	13f6c <putchar_unlocked@plt+0x2f44>
   13f68:	b	10ee4 <malloc@plt>
   13f6c:	push	{fp, lr}
   13f70:	mov	fp, sp
   13f74:	bl	10f50 <__errno_location@plt>
   13f78:	mov	r1, #12
   13f7c:	str	r1, [r0]
   13f80:	mov	r0, #0
   13f84:	pop	{fp, pc}
   13f88:	push	{fp, lr}
   13f8c:	mov	fp, sp
   13f90:	cmp	r0, #0
   13f94:	beq	13fb0 <putchar_unlocked@plt+0x2f88>
   13f98:	cmp	r1, #0
   13f9c:	beq	13fbc <putchar_unlocked@plt+0x2f94>
   13fa0:	cmn	r1, #1
   13fa4:	ble	13fc8 <putchar_unlocked@plt+0x2fa0>
   13fa8:	pop	{fp, lr}
   13fac:	b	10e60 <realloc@plt>
   13fb0:	mov	r0, r1
   13fb4:	pop	{fp, lr}
   13fb8:	b	13f58 <putchar_unlocked@plt+0x2f30>
   13fbc:	bl	119ac <putchar_unlocked@plt+0x984>
   13fc0:	mov	r0, #0
   13fc4:	pop	{fp, pc}
   13fc8:	bl	10f50 <__errno_location@plt>
   13fcc:	mov	r1, #12
   13fd0:	str	r1, [r0]
   13fd4:	mov	r0, #0
   13fd8:	pop	{fp, pc}
   13fdc:	mov	r1, r0
   13fe0:	sub	r2, r0, #65	; 0x41
   13fe4:	mov	r0, #1
   13fe8:	cmp	r2, #26
   13fec:	subcs	r2, r1, #97	; 0x61
   13ff0:	cmpcs	r2, #26
   13ff4:	bcs	13ffc <putchar_unlocked@plt+0x2fd4>
   13ff8:	bx	lr
   13ffc:	sub	r1, r1, #48	; 0x30
   14000:	cmp	r1, #10
   14004:	movcs	r0, #0
   14008:	bx	lr
   1400c:	mov	r1, r0
   14010:	sub	r2, r0, #65	; 0x41
   14014:	mov	r0, #1
   14018:	cmp	r2, #26
   1401c:	subcs	r1, r1, #97	; 0x61
   14020:	cmpcs	r1, #26
   14024:	movcs	r0, #0
   14028:	bx	lr
   1402c:	mov	r1, #0
   14030:	cmp	r0, #128	; 0x80
   14034:	movwcc	r1, #1
   14038:	mov	r0, r1
   1403c:	bx	lr
   14040:	sub	r1, r0, #9
   14044:	clz	r1, r1
   14048:	lsr	r1, r1, #5
   1404c:	sub	r0, r0, #32
   14050:	clz	r0, r0
   14054:	lsr	r0, r0, #5
   14058:	orr	r0, r0, r1
   1405c:	bx	lr
   14060:	mov	r1, r0
   14064:	mov	r0, #1
   14068:	cmp	r1, #32
   1406c:	bxcc	lr
   14070:	cmp	r1, #127	; 0x7f
   14074:	movne	r0, #0
   14078:	bx	lr
   1407c:	sub	r1, r0, #48	; 0x30
   14080:	mov	r0, #0
   14084:	cmp	r1, #10
   14088:	movwcc	r0, #1
   1408c:	bx	lr
   14090:	sub	r1, r0, #33	; 0x21
   14094:	mov	r0, #0
   14098:	cmp	r1, #94	; 0x5e
   1409c:	movwcc	r0, #1
   140a0:	bx	lr
   140a4:	sub	r1, r0, #97	; 0x61
   140a8:	mov	r0, #0
   140ac:	cmp	r1, #26
   140b0:	movwcc	r0, #1
   140b4:	bx	lr
   140b8:	sub	r1, r0, #32
   140bc:	mov	r0, #0
   140c0:	cmp	r1, #95	; 0x5f
   140c4:	movwcc	r0, #1
   140c8:	bx	lr
   140cc:	sub	r1, r0, #33	; 0x21
   140d0:	cmp	r1, #93	; 0x5d
   140d4:	bhi	14260 <putchar_unlocked@plt+0x3238>
   140d8:	mov	r0, #1
   140dc:	add	r2, pc, #0
   140e0:	ldr	pc, [r2, r1, lsl #2]
   140e4:	andeq	r4, r1, ip, asr r2
   140e8:	andeq	r4, r1, ip, asr r2
   140ec:	andeq	r4, r1, ip, asr r2
   140f0:	andeq	r4, r1, ip, asr r2
   140f4:	andeq	r4, r1, ip, asr r2
   140f8:	andeq	r4, r1, ip, asr r2
   140fc:	andeq	r4, r1, ip, asr r2
   14100:	andeq	r4, r1, ip, asr r2
   14104:	andeq	r4, r1, ip, asr r2
   14108:	andeq	r4, r1, ip, asr r2
   1410c:	andeq	r4, r1, ip, asr r2
   14110:	andeq	r4, r1, ip, asr r2
   14114:	andeq	r4, r1, ip, asr r2
   14118:	andeq	r4, r1, ip, asr r2
   1411c:	andeq	r4, r1, ip, asr r2
   14120:	andeq	r4, r1, r0, ror #4
   14124:	andeq	r4, r1, r0, ror #4
   14128:	andeq	r4, r1, r0, ror #4
   1412c:	andeq	r4, r1, r0, ror #4
   14130:	andeq	r4, r1, r0, ror #4
   14134:	andeq	r4, r1, r0, ror #4
   14138:	andeq	r4, r1, r0, ror #4
   1413c:	andeq	r4, r1, r0, ror #4
   14140:	andeq	r4, r1, r0, ror #4
   14144:	andeq	r4, r1, r0, ror #4
   14148:	andeq	r4, r1, ip, asr r2
   1414c:	andeq	r4, r1, ip, asr r2
   14150:	andeq	r4, r1, ip, asr r2
   14154:	andeq	r4, r1, ip, asr r2
   14158:	andeq	r4, r1, ip, asr r2
   1415c:	andeq	r4, r1, ip, asr r2
   14160:	andeq	r4, r1, ip, asr r2
   14164:	andeq	r4, r1, r0, ror #4
   14168:	andeq	r4, r1, r0, ror #4
   1416c:	andeq	r4, r1, r0, ror #4
   14170:	andeq	r4, r1, r0, ror #4
   14174:	andeq	r4, r1, r0, ror #4
   14178:	andeq	r4, r1, r0, ror #4
   1417c:	andeq	r4, r1, r0, ror #4
   14180:	andeq	r4, r1, r0, ror #4
   14184:	andeq	r4, r1, r0, ror #4
   14188:	andeq	r4, r1, r0, ror #4
   1418c:	andeq	r4, r1, r0, ror #4
   14190:	andeq	r4, r1, r0, ror #4
   14194:	andeq	r4, r1, r0, ror #4
   14198:	andeq	r4, r1, r0, ror #4
   1419c:	andeq	r4, r1, r0, ror #4
   141a0:	andeq	r4, r1, r0, ror #4
   141a4:	andeq	r4, r1, r0, ror #4
   141a8:	andeq	r4, r1, r0, ror #4
   141ac:	andeq	r4, r1, r0, ror #4
   141b0:	andeq	r4, r1, r0, ror #4
   141b4:	andeq	r4, r1, r0, ror #4
   141b8:	andeq	r4, r1, r0, ror #4
   141bc:	andeq	r4, r1, r0, ror #4
   141c0:	andeq	r4, r1, r0, ror #4
   141c4:	andeq	r4, r1, r0, ror #4
   141c8:	andeq	r4, r1, r0, ror #4
   141cc:	andeq	r4, r1, ip, asr r2
   141d0:	andeq	r4, r1, ip, asr r2
   141d4:	andeq	r4, r1, ip, asr r2
   141d8:	andeq	r4, r1, ip, asr r2
   141dc:	andeq	r4, r1, ip, asr r2
   141e0:	andeq	r4, r1, ip, asr r2
   141e4:	andeq	r4, r1, r0, ror #4
   141e8:	andeq	r4, r1, r0, ror #4
   141ec:	andeq	r4, r1, r0, ror #4
   141f0:	andeq	r4, r1, r0, ror #4
   141f4:	andeq	r4, r1, r0, ror #4
   141f8:	andeq	r4, r1, r0, ror #4
   141fc:	andeq	r4, r1, r0, ror #4
   14200:	andeq	r4, r1, r0, ror #4
   14204:	andeq	r4, r1, r0, ror #4
   14208:	andeq	r4, r1, r0, ror #4
   1420c:	andeq	r4, r1, r0, ror #4
   14210:	andeq	r4, r1, r0, ror #4
   14214:	andeq	r4, r1, r0, ror #4
   14218:	andeq	r4, r1, r0, ror #4
   1421c:	andeq	r4, r1, r0, ror #4
   14220:	andeq	r4, r1, r0, ror #4
   14224:	andeq	r4, r1, r0, ror #4
   14228:	andeq	r4, r1, r0, ror #4
   1422c:	andeq	r4, r1, r0, ror #4
   14230:	andeq	r4, r1, r0, ror #4
   14234:	andeq	r4, r1, r0, ror #4
   14238:	andeq	r4, r1, r0, ror #4
   1423c:	andeq	r4, r1, r0, ror #4
   14240:	andeq	r4, r1, r0, ror #4
   14244:	andeq	r4, r1, r0, ror #4
   14248:	andeq	r4, r1, r0, ror #4
   1424c:	andeq	r4, r1, ip, asr r2
   14250:	andeq	r4, r1, ip, asr r2
   14254:	andeq	r4, r1, ip, asr r2
   14258:	andeq	r4, r1, ip, asr r2
   1425c:	bx	lr
   14260:	mov	r0, #0
   14264:	bx	lr
   14268:	sub	r0, r0, #9
   1426c:	cmp	r0, #23
   14270:	movhi	r0, #0
   14274:	bxhi	lr
   14278:	bic	r0, r0, #-16777216	; 0xff000000
   1427c:	movw	r1, #31
   14280:	movt	r1, #128	; 0x80
   14284:	mov	r2, #1
   14288:	and	r0, r2, r1, lsr r0
   1428c:	bx	lr
   14290:	sub	r1, r0, #65	; 0x41
   14294:	mov	r0, #0
   14298:	cmp	r1, #26
   1429c:	movwcc	r0, #1
   142a0:	bx	lr
   142a4:	mov	r1, r0
   142a8:	sub	r2, r0, #48	; 0x30
   142ac:	mov	r0, #1
   142b0:	cmp	r2, #22
   142b4:	bhi	142cc <putchar_unlocked@plt+0x32a4>
   142b8:	mov	ip, #1
   142bc:	movw	r3, #1023	; 0x3ff
   142c0:	movt	r3, #126	; 0x7e
   142c4:	tst	r3, ip, lsl r2
   142c8:	bxne	lr
   142cc:	sub	r1, r1, #97	; 0x61
   142d0:	cmp	r1, #6
   142d4:	movcs	r0, #0
   142d8:	bxcs	lr
   142dc:	bx	lr
   142e0:	sub	r1, r0, #65	; 0x41
   142e4:	cmp	r1, #26
   142e8:	addcc	r0, r0, #32
   142ec:	bx	lr
   142f0:	sub	r1, r0, #97	; 0x61
   142f4:	cmp	r1, #26
   142f8:	subcc	r0, r0, #32
   142fc:	bx	lr
   14300:	push	{r4, r5, r6, sl, fp, lr}
   14304:	add	fp, sp, #16
   14308:	mov	r4, r0
   1430c:	bl	10eb4 <__fpending@plt>
   14310:	mov	r5, r0
   14314:	mov	r0, r4
   14318:	bl	10ec0 <ferror_unlocked@plt>
   1431c:	mov	r6, r0
   14320:	mov	r0, r4
   14324:	bl	14384 <putchar_unlocked@plt+0x335c>
   14328:	cmp	r6, #0
   1432c:	beq	14350 <putchar_unlocked@plt+0x3328>
   14330:	mvn	r4, #0
   14334:	cmp	r0, #0
   14338:	bne	1437c <putchar_unlocked@plt+0x3354>
   1433c:	bl	10f50 <__errno_location@plt>
   14340:	mov	r1, #0
   14344:	str	r1, [r0]
   14348:	mov	r0, r4
   1434c:	pop	{r4, r5, r6, sl, fp, pc}
   14350:	cmp	r0, #0
   14354:	mov	r4, r0
   14358:	mvnne	r4, #0
   1435c:	cmp	r5, #0
   14360:	bne	1437c <putchar_unlocked@plt+0x3354>
   14364:	cmp	r0, #0
   14368:	beq	1437c <putchar_unlocked@plt+0x3354>
   1436c:	bl	10f50 <__errno_location@plt>
   14370:	ldr	r0, [r0]
   14374:	subs	r4, r0, #9
   14378:	mvnne	r4, #0
   1437c:	mov	r0, r4
   14380:	pop	{r4, r5, r6, sl, fp, pc}
   14384:	push	{r4, r5, fp, lr}
   14388:	add	fp, sp, #8
   1438c:	sub	sp, sp, #8
   14390:	mov	r4, r0
   14394:	bl	10f98 <fileno@plt>
   14398:	cmn	r0, #1
   1439c:	ble	14414 <putchar_unlocked@plt+0x33ec>
   143a0:	mov	r0, r4
   143a4:	bl	10efc <__freading@plt>
   143a8:	cmp	r0, #0
   143ac:	beq	143d8 <putchar_unlocked@plt+0x33b0>
   143b0:	mov	r0, r4
   143b4:	bl	10f98 <fileno@plt>
   143b8:	mov	r1, #1
   143bc:	str	r1, [sp]
   143c0:	mov	r2, #0
   143c4:	mov	r3, #0
   143c8:	bl	10e9c <lseek64@plt>
   143cc:	and	r0, r0, r1
   143d0:	cmn	r0, #1
   143d4:	beq	14414 <putchar_unlocked@plt+0x33ec>
   143d8:	mov	r0, r4
   143dc:	bl	14424 <putchar_unlocked@plt+0x33fc>
   143e0:	cmp	r0, #0
   143e4:	beq	14414 <putchar_unlocked@plt+0x33ec>
   143e8:	bl	10f50 <__errno_location@plt>
   143ec:	ldr	r5, [r0]
   143f0:	mov	r0, r4
   143f4:	bl	10fb0 <fclose@plt>
   143f8:	cmp	r5, #0
   143fc:	beq	1440c <putchar_unlocked@plt+0x33e4>
   14400:	bl	10f50 <__errno_location@plt>
   14404:	str	r5, [r0]
   14408:	mvn	r0, #0
   1440c:	sub	sp, fp, #8
   14410:	pop	{r4, r5, fp, pc}
   14414:	mov	r0, r4
   14418:	sub	sp, fp, #8
   1441c:	pop	{r4, r5, fp, lr}
   14420:	b	10fb0 <fclose@plt>
   14424:	push	{r4, sl, fp, lr}
   14428:	add	fp, sp, #8
   1442c:	mov	r4, r0
   14430:	cmp	r0, #0
   14434:	beq	1444c <putchar_unlocked@plt+0x3424>
   14438:	mov	r0, r4
   1443c:	bl	10efc <__freading@plt>
   14440:	cmp	r0, #0
   14444:	movne	r0, r4
   14448:	blne	14458 <putchar_unlocked@plt+0x3430>
   1444c:	mov	r0, r4
   14450:	pop	{r4, sl, fp, lr}
   14454:	b	10e0c <fflush@plt>
   14458:	push	{fp, lr}
   1445c:	mov	fp, sp
   14460:	sub	sp, sp, #8
   14464:	ldrb	r1, [r0, #1]
   14468:	tst	r1, #1
   1446c:	beq	14484 <putchar_unlocked@plt+0x345c>
   14470:	mov	r1, #1
   14474:	str	r1, [sp]
   14478:	mov	r2, #0
   1447c:	mov	r3, #0
   14480:	bl	1448c <putchar_unlocked@plt+0x3464>
   14484:	mov	sp, fp
   14488:	pop	{fp, pc}
   1448c:	push	{r4, r5, r6, r7, fp, lr}
   14490:	add	fp, sp, #16
   14494:	sub	sp, sp, #8
   14498:	mov	r5, r3
   1449c:	mov	r6, r2
   144a0:	mov	r4, r0
   144a4:	ldr	r0, [r0, #4]
   144a8:	ldr	r1, [r4, #8]
   144ac:	cmp	r1, r0
   144b0:	bne	144cc <putchar_unlocked@plt+0x34a4>
   144b4:	ldrd	r0, [r4, #16]
   144b8:	cmp	r1, r0
   144bc:	bne	144cc <putchar_unlocked@plt+0x34a4>
   144c0:	ldr	r0, [r4, #36]	; 0x24
   144c4:	cmp	r0, #0
   144c8:	beq	144e4 <putchar_unlocked@plt+0x34bc>
   144cc:	mov	r0, r4
   144d0:	mov	r2, r6
   144d4:	mov	r3, r5
   144d8:	sub	sp, fp, #16
   144dc:	pop	{r4, r5, r6, r7, fp, lr}
   144e0:	b	10fbc <fseeko64@plt>
   144e4:	ldr	r7, [fp, #8]
   144e8:	mov	r0, r4
   144ec:	bl	10f98 <fileno@plt>
   144f0:	str	r7, [sp]
   144f4:	mov	r2, r6
   144f8:	mov	r3, r5
   144fc:	bl	10e9c <lseek64@plt>
   14500:	and	r2, r0, r1
   14504:	cmn	r2, #1
   14508:	beq	14528 <putchar_unlocked@plt+0x3500>
   1450c:	strd	r0, [r4, #80]	; 0x50
   14510:	ldr	r0, [r4]
   14514:	bic	r0, r0, #16
   14518:	str	r0, [r4]
   1451c:	mov	r0, #0
   14520:	sub	sp, fp, #16
   14524:	pop	{r4, r5, r6, r7, fp, pc}
   14528:	mvn	r0, #0
   1452c:	sub	sp, fp, #16
   14530:	pop	{r4, r5, r6, r7, fp, pc}
   14534:	push	{fp, lr}
   14538:	mov	fp, sp
   1453c:	bl	10f50 <__errno_location@plt>
   14540:	mov	r1, #12
   14544:	str	r1, [r0]
   14548:	mov	r0, #0
   1454c:	pop	{fp, pc}
   14550:	b	13f58 <putchar_unlocked@plt+0x2f30>
   14554:	cmp	r1, #0
   14558:	orreq	r1, r1, #1
   1455c:	b	13f88 <putchar_unlocked@plt+0x2f60>
   14560:	b	13f04 <putchar_unlocked@plt+0x2edc>
   14564:	clz	r3, r2
   14568:	lsr	ip, r3, #5
   1456c:	clz	r3, r1
   14570:	lsr	r3, r3, #5
   14574:	orrs	r3, r3, ip
   14578:	movwne	r1, #1
   1457c:	movwne	r2, #1
   14580:	b	14834 <putchar_unlocked@plt+0x380c>
   14584:	push	{fp, lr}
   14588:	mov	fp, sp
   1458c:	mov	r0, #14
   14590:	bl	10fe0 <nl_langinfo@plt>
   14594:	movw	r1, #20128	; 0x4ea0
   14598:	movt	r1, #1
   1459c:	cmp	r0, #0
   145a0:	movne	r1, r0
   145a4:	ldrb	r2, [r1]
   145a8:	movw	r0, #21449	; 0x53c9
   145ac:	movt	r0, #1
   145b0:	cmp	r2, #0
   145b4:	movne	r0, r1
   145b8:	pop	{fp, pc}
   145bc:	push	{r4, r5, r6, r7, fp, lr}
   145c0:	add	fp, sp, #16
   145c4:	sub	sp, sp, #8
   145c8:	mov	r7, r2
   145cc:	mov	r4, r1
   145d0:	add	r5, sp, #4
   145d4:	cmp	r0, #0
   145d8:	movne	r5, r0
   145dc:	mov	r0, r5
   145e0:	bl	10ecc <mbrtowc@plt>
   145e4:	mov	r6, r0
   145e8:	cmp	r7, #0
   145ec:	beq	14614 <putchar_unlocked@plt+0x35ec>
   145f0:	cmn	r6, #2
   145f4:	bcc	14614 <putchar_unlocked@plt+0x35ec>
   145f8:	mov	r0, #0
   145fc:	bl	14870 <putchar_unlocked@plt+0x3848>
   14600:	cmp	r0, #0
   14604:	bne	14614 <putchar_unlocked@plt+0x35ec>
   14608:	ldrb	r0, [r4]
   1460c:	str	r0, [r5]
   14610:	mov	r6, #1
   14614:	mov	r0, r6
   14618:	sub	sp, fp, #16
   1461c:	pop	{r4, r5, r6, r7, fp, pc}
   14620:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14624:	add	fp, sp, #28
   14628:	sub	sp, sp, #12
   1462c:	mov	r5, r2
   14630:	mov	sl, r1
   14634:	cmp	r0, #0
   14638:	beq	146d0 <putchar_unlocked@plt+0x36a8>
   1463c:	mov	r7, r0
   14640:	mov	r0, #10
   14644:	str	r0, [sp, #8]
   14648:	mov	r0, #0
   1464c:	mov	r1, #10
   14650:	bl	14808 <putchar_unlocked@plt+0x37e0>
   14654:	mvn	r9, #0
   14658:	cmp	r0, #0
   1465c:	beq	147fc <putchar_unlocked@plt+0x37d4>
   14660:	mov	r4, r0
   14664:	str	r5, [sp, #4]
   14668:	add	r5, sp, #8
   1466c:	ldr	r8, [sp, #8]
   14670:	mov	r0, r7
   14674:	mov	r1, sl
   14678:	mov	r2, r4
   1467c:	mov	r3, r5
   14680:	bl	10f74 <getgrouplist@plt>
   14684:	mov	r6, r0
   14688:	cmn	r0, #1
   1468c:	bgt	146a0 <putchar_unlocked@plt+0x3678>
   14690:	ldr	r0, [sp, #8]
   14694:	cmp	r8, r0
   14698:	lsleq	r0, r0, #1
   1469c:	streq	r0, [sp, #8]
   146a0:	ldr	r1, [sp, #8]
   146a4:	mov	r0, r4
   146a8:	bl	14808 <putchar_unlocked@plt+0x37e0>
   146ac:	cmp	r0, #0
   146b0:	beq	14798 <putchar_unlocked@plt+0x3770>
   146b4:	cmp	r6, #0
   146b8:	mov	r4, r0
   146bc:	bmi	1466c <putchar_unlocked@plt+0x3644>
   146c0:	ldr	r1, [sp, #4]
   146c4:	str	r0, [r1]
   146c8:	ldr	r9, [sp, #8]
   146cc:	b	147fc <putchar_unlocked@plt+0x37d4>
   146d0:	mov	r0, #0
   146d4:	mov	r1, #0
   146d8:	bl	10fec <getgroups@plt>
   146dc:	str	r0, [sp, #8]
   146e0:	cmn	r0, #1
   146e4:	ble	147a4 <putchar_unlocked@plt+0x377c>
   146e8:	cmn	sl, #1
   146ec:	bne	146f8 <putchar_unlocked@plt+0x36d0>
   146f0:	cmp	r0, #0
   146f4:	bne	14700 <putchar_unlocked@plt+0x36d8>
   146f8:	add	r0, r0, #1
   146fc:	str	r0, [sp, #8]
   14700:	ldr	r1, [sp, #8]
   14704:	mov	r0, #0
   14708:	bl	14808 <putchar_unlocked@plt+0x37e0>
   1470c:	cmp	r0, #0
   14710:	beq	147e4 <putchar_unlocked@plt+0x37bc>
   14714:	mov	r7, r0
   14718:	mvn	r9, #0
   1471c:	subs	r1, sl, r9
   14720:	movwne	r1, #1
   14724:	ldr	r0, [sp, #8]
   14728:	sub	r0, r0, r1
   1472c:	add	r1, r7, r1, lsl #2
   14730:	bl	10fec <getgroups@plt>
   14734:	cmn	r0, #1
   14738:	ble	147ec <putchar_unlocked@plt+0x37c4>
   1473c:	cmn	sl, #1
   14740:	strne	sl, [r7]
   14744:	addne	r0, r0, #1
   14748:	str	r7, [r5]
   1474c:	cmp	r0, #2
   14750:	blt	147f8 <putchar_unlocked@plt+0x37d0>
   14754:	add	r1, r7, r0, lsl #2
   14758:	mov	r2, r7
   1475c:	ldr	r3, [r2], #4
   14760:	mov	r9, r0
   14764:	b	14778 <putchar_unlocked@plt+0x3750>
   14768:	sub	r9, r9, #1
   1476c:	add	r2, r2, #4
   14770:	cmp	r2, r1
   14774:	bcs	147fc <putchar_unlocked@plt+0x37d4>
   14778:	ldr	r0, [r2]
   1477c:	cmp	r0, r3
   14780:	beq	14768 <putchar_unlocked@plt+0x3740>
   14784:	ldr	r6, [r7]
   14788:	cmp	r0, r6
   1478c:	beq	14768 <putchar_unlocked@plt+0x3740>
   14790:	str	r0, [r7, #4]!
   14794:	b	1476c <putchar_unlocked@plt+0x3744>
   14798:	mov	r0, r4
   1479c:	bl	119ac <putchar_unlocked@plt+0x984>
   147a0:	b	147fc <putchar_unlocked@plt+0x37d4>
   147a4:	bl	10f50 <__errno_location@plt>
   147a8:	ldr	r0, [r0]
   147ac:	mvn	r9, #0
   147b0:	cmp	r0, #38	; 0x26
   147b4:	bne	147fc <putchar_unlocked@plt+0x37d4>
   147b8:	mov	r0, #0
   147bc:	mov	r1, #1
   147c0:	bl	14808 <putchar_unlocked@plt+0x37e0>
   147c4:	cmp	r0, #0
   147c8:	beq	147fc <putchar_unlocked@plt+0x37d4>
   147cc:	str	r0, [r5]
   147d0:	str	sl, [r0]
   147d4:	mvn	r0, #0
   147d8:	subs	r9, sl, r0
   147dc:	movwne	r9, #1
   147e0:	b	147fc <putchar_unlocked@plt+0x37d4>
   147e4:	mvn	r9, #0
   147e8:	b	147fc <putchar_unlocked@plt+0x37d4>
   147ec:	mov	r0, r7
   147f0:	bl	119ac <putchar_unlocked@plt+0x984>
   147f4:	b	147fc <putchar_unlocked@plt+0x37d4>
   147f8:	mov	r9, r0
   147fc:	mov	r0, r9
   14800:	sub	sp, fp, #28
   14804:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14808:	cmp	r1, #536870912	; 0x20000000
   1480c:	bcc	1482c <putchar_unlocked@plt+0x3804>
   14810:	push	{fp, lr}
   14814:	mov	fp, sp
   14818:	bl	10f50 <__errno_location@plt>
   1481c:	mov	r1, #12
   14820:	str	r1, [r0]
   14824:	mov	r0, #0
   14828:	pop	{fp, pc}
   1482c:	lsl	r1, r1, #2
   14830:	b	13f88 <putchar_unlocked@plt+0x2f60>
   14834:	cmp	r2, #0
   14838:	beq	14868 <putchar_unlocked@plt+0x3840>
   1483c:	mvn	r3, #0
   14840:	udiv	r3, r3, r2
   14844:	cmp	r3, r1
   14848:	bcs	14868 <putchar_unlocked@plt+0x3840>
   1484c:	push	{fp, lr}
   14850:	mov	fp, sp
   14854:	bl	10f50 <__errno_location@plt>
   14858:	mov	r1, #12
   1485c:	str	r1, [r0]
   14860:	mov	r0, #0
   14864:	pop	{fp, pc}
   14868:	mul	r1, r2, r1
   1486c:	b	13f88 <putchar_unlocked@plt+0x2f60>
   14870:	push	{r4, sl, fp, lr}
   14874:	add	fp, sp, #8
   14878:	sub	sp, sp, #264	; 0x108
   1487c:	add	r1, sp, #7
   14880:	movw	r2, #257	; 0x101
   14884:	bl	148dc <putchar_unlocked@plt+0x38b4>
   14888:	mov	r4, #0
   1488c:	cmp	r0, #0
   14890:	bne	148d0 <putchar_unlocked@plt+0x38a8>
   14894:	add	r0, sp, #7
   14898:	movw	r1, #21455	; 0x53cf
   1489c:	movt	r1, #1
   148a0:	mov	r2, #2
   148a4:	bl	10f38 <bcmp@plt>
   148a8:	cmp	r0, #0
   148ac:	beq	148d0 <putchar_unlocked@plt+0x38a8>
   148b0:	add	r0, sp, #7
   148b4:	movw	r1, #21457	; 0x53d1
   148b8:	movt	r1, #1
   148bc:	mov	r2, #6
   148c0:	bl	10f38 <bcmp@plt>
   148c4:	mov	r4, r0
   148c8:	cmp	r0, #0
   148cc:	movwne	r4, #1
   148d0:	mov	r0, r4
   148d4:	sub	sp, fp, #8
   148d8:	pop	{r4, sl, fp, pc}
   148dc:	b	148e0 <putchar_unlocked@plt+0x38b8>
   148e0:	push	{r4, r5, r6, r7, fp, lr}
   148e4:	add	fp, sp, #16
   148e8:	mov	r6, r2
   148ec:	mov	r4, r1
   148f0:	bl	14978 <putchar_unlocked@plt+0x3950>
   148f4:	cmp	r0, #0
   148f8:	beq	14928 <putchar_unlocked@plt+0x3900>
   148fc:	mov	r7, r0
   14900:	bl	10f44 <strlen@plt>
   14904:	cmp	r0, r6
   14908:	bcs	14944 <putchar_unlocked@plt+0x391c>
   1490c:	add	r2, r0, #1
   14910:	mov	r0, r4
   14914:	mov	r1, r7
   14918:	bl	10e3c <memcpy@plt>
   1491c:	mov	r5, #0
   14920:	mov	r0, r5
   14924:	pop	{r4, r5, r6, r7, fp, pc}
   14928:	mov	r5, #22
   1492c:	cmp	r6, #0
   14930:	beq	1496c <putchar_unlocked@plt+0x3944>
   14934:	mov	r0, #0
   14938:	strb	r0, [r4]
   1493c:	mov	r0, r5
   14940:	pop	{r4, r5, r6, r7, fp, pc}
   14944:	mov	r5, #34	; 0x22
   14948:	cmp	r6, #0
   1494c:	beq	1496c <putchar_unlocked@plt+0x3944>
   14950:	sub	r6, r6, #1
   14954:	mov	r0, r4
   14958:	mov	r1, r7
   1495c:	mov	r2, r6
   14960:	bl	10e3c <memcpy@plt>
   14964:	mov	r0, #0
   14968:	strb	r0, [r4, r6]
   1496c:	mov	r0, r5
   14970:	pop	{r4, r5, r6, r7, fp, pc}
   14974:	b	14978 <putchar_unlocked@plt+0x3950>
   14978:	mov	r1, #0
   1497c:	b	10fc8 <setlocale@plt>
   14980:	cmp	r3, #0
   14984:	cmpeq	r2, #0
   14988:	bne	149a0 <putchar_unlocked@plt+0x3978>
   1498c:	cmp	r1, #0
   14990:	cmpeq	r0, #0
   14994:	mvnne	r1, #0
   14998:	mvnne	r0, #0
   1499c:	b	149bc <putchar_unlocked@plt+0x3994>
   149a0:	sub	sp, sp, #8
   149a4:	push	{sp, lr}
   149a8:	bl	149cc <putchar_unlocked@plt+0x39a4>
   149ac:	ldr	lr, [sp, #4]
   149b0:	add	sp, sp, #8
   149b4:	pop	{r2, r3}
   149b8:	bx	lr
   149bc:	push	{r1, lr}
   149c0:	mov	r0, #8
   149c4:	bl	10ddc <raise@plt>
   149c8:	pop	{r1, pc}
   149cc:	cmp	r1, r3
   149d0:	cmpeq	r0, r2
   149d4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   149d8:	mov	r4, r0
   149dc:	movcc	r0, #0
   149e0:	mov	r5, r1
   149e4:	ldr	lr, [sp, #36]	; 0x24
   149e8:	movcc	r1, r0
   149ec:	bcc	14ae8 <putchar_unlocked@plt+0x3ac0>
   149f0:	cmp	r3, #0
   149f4:	clzeq	ip, r2
   149f8:	clzne	ip, r3
   149fc:	addeq	ip, ip, #32
   14a00:	cmp	r5, #0
   14a04:	clzeq	r1, r4
   14a08:	addeq	r1, r1, #32
   14a0c:	clzne	r1, r5
   14a10:	sub	ip, ip, r1
   14a14:	sub	sl, ip, #32
   14a18:	lsl	r9, r3, ip
   14a1c:	rsb	fp, ip, #32
   14a20:	orr	r9, r9, r2, lsl sl
   14a24:	orr	r9, r9, r2, lsr fp
   14a28:	lsl	r8, r2, ip
   14a2c:	cmp	r5, r9
   14a30:	cmpeq	r4, r8
   14a34:	movcc	r0, #0
   14a38:	movcc	r1, r0
   14a3c:	bcc	14a58 <putchar_unlocked@plt+0x3a30>
   14a40:	mov	r0, #1
   14a44:	subs	r4, r4, r8
   14a48:	lsl	r1, r0, sl
   14a4c:	orr	r1, r1, r0, lsr fp
   14a50:	lsl	r0, r0, ip
   14a54:	sbc	r5, r5, r9
   14a58:	cmp	ip, #0
   14a5c:	beq	14ae8 <putchar_unlocked@plt+0x3ac0>
   14a60:	lsr	r6, r8, #1
   14a64:	orr	r6, r6, r9, lsl #31
   14a68:	lsr	r7, r9, #1
   14a6c:	mov	r2, ip
   14a70:	b	14a94 <putchar_unlocked@plt+0x3a6c>
   14a74:	subs	r3, r4, r6
   14a78:	sbc	r8, r5, r7
   14a7c:	adds	r3, r3, r3
   14a80:	adc	r8, r8, r8
   14a84:	adds	r4, r3, #1
   14a88:	adc	r5, r8, #0
   14a8c:	subs	r2, r2, #1
   14a90:	beq	14ab0 <putchar_unlocked@plt+0x3a88>
   14a94:	cmp	r5, r7
   14a98:	cmpeq	r4, r6
   14a9c:	bcs	14a74 <putchar_unlocked@plt+0x3a4c>
   14aa0:	adds	r4, r4, r4
   14aa4:	adc	r5, r5, r5
   14aa8:	subs	r2, r2, #1
   14aac:	bne	14a94 <putchar_unlocked@plt+0x3a6c>
   14ab0:	lsr	r3, r4, ip
   14ab4:	orr	r3, r3, r5, lsl fp
   14ab8:	lsr	r2, r5, ip
   14abc:	orr	r3, r3, r5, lsr sl
   14ac0:	adds	r0, r0, r4
   14ac4:	mov	r4, r3
   14ac8:	lsl	r3, r2, ip
   14acc:	orr	r3, r3, r4, lsl sl
   14ad0:	lsl	ip, r4, ip
   14ad4:	orr	r3, r3, r4, lsr fp
   14ad8:	adc	r1, r1, r5
   14adc:	subs	r0, r0, ip
   14ae0:	mov	r5, r2
   14ae4:	sbc	r1, r1, r3
   14ae8:	cmp	lr, #0
   14aec:	strdne	r4, [lr]
   14af0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14af4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   14af8:	mov	r7, r0
   14afc:	ldr	r6, [pc, #72]	; 14b4c <putchar_unlocked@plt+0x3b24>
   14b00:	ldr	r5, [pc, #72]	; 14b50 <putchar_unlocked@plt+0x3b28>
   14b04:	add	r6, pc, r6
   14b08:	add	r5, pc, r5
   14b0c:	sub	r6, r6, r5
   14b10:	mov	r8, r1
   14b14:	mov	r9, r2
   14b18:	bl	10da4 <calloc@plt-0x20>
   14b1c:	asrs	r6, r6, #2
   14b20:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   14b24:	mov	r4, #0
   14b28:	add	r4, r4, #1
   14b2c:	ldr	r3, [r5], #4
   14b30:	mov	r2, r9
   14b34:	mov	r1, r8
   14b38:	mov	r0, r7
   14b3c:	blx	r3
   14b40:	cmp	r6, r4
   14b44:	bne	14b28 <putchar_unlocked@plt+0x3b00>
   14b48:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14b4c:	andeq	r1, r1, r0, lsl #8
   14b50:	strdeq	r1, [r1], -r8
   14b54:	bx	lr
   14b58:	ldr	r3, [pc, #12]	; 14b6c <putchar_unlocked@plt+0x3b44>
   14b5c:	mov	r1, #0
   14b60:	add	r3, pc, r3
   14b64:	ldr	r2, [r3]
   14b68:	b	10f5c <__cxa_atexit@plt>
   14b6c:	andeq	r1, r1, ip, ror r5

Disassembly of section .fini:

00014b70 <.fini>:
   14b70:	push	{r3, lr}
   14b74:	pop	{r3, pc}
