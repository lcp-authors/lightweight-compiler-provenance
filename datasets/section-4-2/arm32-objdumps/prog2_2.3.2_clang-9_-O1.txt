
../repos/prog2/2.3.2:     file format elf32-littlearm


Disassembly of section .init:

00010ad8 <.init>:
   10ad8:	push	{r3, lr}
   10adc:	bl	10c0c <_start@@Base+0x3c>
   10ae0:	pop	{r3, pc}

Disassembly of section .plt:

00010ae4 <calloc@plt-0x14>:
   10ae4:	push	{lr}		; (str lr, [sp, #-4]!)
   10ae8:	ldr	lr, [pc, #4]	; 10af4 <calloc@plt-0x4>
   10aec:	add	lr, pc, lr
   10af0:	ldr	pc, [lr, #8]!
   10af4:	andeq	r1, r1, ip, lsl #10

00010af8 <calloc@plt>:
   10af8:	add	ip, pc, #0, 12
   10afc:	add	ip, ip, #69632	; 0x11000
   10b00:	ldr	pc, [ip, #1292]!	; 0x50c

00010b04 <strcmp@plt>:
   10b04:	add	ip, pc, #0, 12
   10b08:	add	ip, ip, #69632	; 0x11000
   10b0c:	ldr	pc, [ip, #1284]!	; 0x504

00010b10 <printf@plt>:
   10b10:	add	ip, pc, #0, 12
   10b14:	add	ip, ip, #69632	; 0x11000
   10b18:	ldr	pc, [ip, #1276]!	; 0x4fc

00010b1c <free@plt>:
   10b1c:	add	ip, pc, #0, 12
   10b20:	add	ip, ip, #69632	; 0x11000
   10b24:	ldr	pc, [ip, #1268]!	; 0x4f4

00010b28 <fgets@plt>:
   10b28:	add	ip, pc, #0, 12
   10b2c:	add	ip, ip, #69632	; 0x11000
   10b30:	ldr	pc, [ip, #1260]!	; 0x4ec

00010b34 <time@plt>:
   10b34:	add	ip, pc, #0, 12
   10b38:	add	ip, ip, #69632	; 0x11000
   10b3c:	ldr	pc, [ip, #1252]!	; 0x4e4

00010b40 <realloc@plt>:
   10b40:	add	ip, pc, #0, 12
   10b44:	add	ip, ip, #69632	; 0x11000
   10b48:	ldr	pc, [ip, #1244]!	; 0x4dc

00010b4c <strcat@plt>:
   10b4c:	add	ip, pc, #0, 12
   10b50:	add	ip, ip, #69632	; 0x11000
   10b54:	ldr	pc, [ip, #1236]!	; 0x4d4

00010b58 <strcpy@plt>:
   10b58:	add	ip, pc, #0, 12
   10b5c:	add	ip, ip, #69632	; 0x11000
   10b60:	ldr	pc, [ip, #1228]!	; 0x4cc

00010b64 <puts@plt>:
   10b64:	add	ip, pc, #0, 12
   10b68:	add	ip, ip, #69632	; 0x11000
   10b6c:	ldr	pc, [ip, #1220]!	; 0x4c4

00010b70 <malloc@plt>:
   10b70:	add	ip, pc, #0, 12
   10b74:	add	ip, ip, #69632	; 0x11000
   10b78:	ldr	pc, [ip, #1212]!	; 0x4bc

00010b7c <__libc_start_main@plt>:
   10b7c:	add	ip, pc, #0, 12
   10b80:	add	ip, ip, #69632	; 0x11000
   10b84:	ldr	pc, [ip, #1204]!	; 0x4b4

00010b88 <__gmon_start__@plt>:
   10b88:	add	ip, pc, #0, 12
   10b8c:	add	ip, ip, #69632	; 0x11000
   10b90:	ldr	pc, [ip, #1196]!	; 0x4ac

00010b94 <strlen@plt>:
   10b94:	add	ip, pc, #0, 12
   10b98:	add	ip, ip, #69632	; 0x11000
   10b9c:	ldr	pc, [ip, #1188]!	; 0x4a4

00010ba0 <srand@plt>:
   10ba0:	add	ip, pc, #0, 12
   10ba4:	add	ip, ip, #69632	; 0x11000
   10ba8:	ldr	pc, [ip, #1180]!	; 0x49c

00010bac <rand@plt>:
   10bac:	add	ip, pc, #0, 12
   10bb0:	add	ip, ip, #69632	; 0x11000
   10bb4:	ldr	pc, [ip, #1172]!	; 0x494

00010bb8 <__isoc99_scanf@plt>:
   10bb8:	add	ip, pc, #0, 12
   10bbc:	add	ip, ip, #69632	; 0x11000
   10bc0:	ldr	pc, [ip, #1164]!	; 0x48c

00010bc4 <abort@plt>:
   10bc4:	add	ip, pc, #0, 12
   10bc8:	add	ip, ip, #69632	; 0x11000
   10bcc:	ldr	pc, [ip, #1156]!	; 0x484

Disassembly of section .text:

00010bd0 <_start@@Base>:
   10bd0:	mov	fp, #0
   10bd4:	mov	lr, #0
   10bd8:	pop	{r1}		; (ldr r1, [sp], #4)
   10bdc:	mov	r2, sp
   10be0:	push	{r2}		; (str r2, [sp, #-4]!)
   10be4:	push	{r0}		; (str r0, [sp, #-4]!)
   10be8:	ldr	ip, [pc, #16]	; 10c00 <_start@@Base+0x30>
   10bec:	push	{ip}		; (str ip, [sp, #-4]!)
   10bf0:	ldr	r0, [pc, #12]	; 10c04 <_start@@Base+0x34>
   10bf4:	ldr	r3, [pc, #12]	; 10c08 <_start@@Base+0x38>
   10bf8:	bl	10b7c <__libc_start_main@plt>
   10bfc:	bl	10bc4 <abort@plt>
   10c00:	andeq	r1, r1, r8, ror r3
   10c04:	andeq	r0, r1, r4, lsl #26
   10c08:	andeq	r1, r1, r8, lsl r3
   10c0c:	ldr	r3, [pc, #20]	; 10c28 <_start@@Base+0x58>
   10c10:	ldr	r2, [pc, #20]	; 10c2c <_start@@Base+0x5c>
   10c14:	add	r3, pc, r3
   10c18:	ldr	r2, [r3, r2]
   10c1c:	cmp	r2, #0
   10c20:	bxeq	lr
   10c24:	b	10b88 <__gmon_start__@plt>
   10c28:	andeq	r1, r1, r4, ror #7
   10c2c:	andeq	r0, r0, r4, asr r0
   10c30:	ldr	r0, [pc, #24]	; 10c50 <_start@@Base+0x80>
   10c34:	ldr	r3, [pc, #24]	; 10c54 <_start@@Base+0x84>
   10c38:	cmp	r3, r0
   10c3c:	bxeq	lr
   10c40:	ldr	r3, [pc, #16]	; 10c58 <_start@@Base+0x88>
   10c44:	cmp	r3, #0
   10c48:	bxeq	lr
   10c4c:	bx	r3
   10c50:	andeq	r2, r2, r0, rrx
   10c54:	andeq	r2, r2, r0, rrx
   10c58:	andeq	r0, r0, r0
   10c5c:	ldr	r0, [pc, #36]	; 10c88 <_start@@Base+0xb8>
   10c60:	ldr	r1, [pc, #36]	; 10c8c <_start@@Base+0xbc>
   10c64:	sub	r1, r1, r0
   10c68:	asr	r1, r1, #2
   10c6c:	add	r1, r1, r1, lsr #31
   10c70:	asrs	r1, r1, #1
   10c74:	bxeq	lr
   10c78:	ldr	r3, [pc, #16]	; 10c90 <_start@@Base+0xc0>
   10c7c:	cmp	r3, #0
   10c80:	bxeq	lr
   10c84:	bx	r3
   10c88:	andeq	r2, r2, r0, rrx
   10c8c:	andeq	r2, r2, r0, rrx
   10c90:	andeq	r0, r0, r0
   10c94:	push	{r4, lr}
   10c98:	ldr	r4, [pc, #24]	; 10cb8 <_start@@Base+0xe8>
   10c9c:	ldrb	r3, [r4]
   10ca0:	cmp	r3, #0
   10ca4:	popne	{r4, pc}
   10ca8:	bl	10c30 <_start@@Base+0x60>
   10cac:	mov	r3, #1
   10cb0:	strb	r3, [r4]
   10cb4:	pop	{r4, pc}
   10cb8:	andeq	r2, r2, r4, rrx
   10cbc:	b	10c5c <_start@@Base+0x8c>

00010cc0 <imprime@@Base>:
   10cc0:	push	{r4, r5, r6, sl, fp, lr}
   10cc4:	add	fp, sp, #16
   10cc8:	mov	r4, r0
   10ccc:	mov	r5, #0
   10cd0:	movw	r6, #5000	; 0x1388
   10cd4:	movt	r6, #1
   10cd8:	mov	r0, r4
   10cdc:	mov	r1, r5
   10ce0:	bl	10f44 <vetor_elemento@@Base>
   10ce4:	mov	r2, r0
   10ce8:	add	r5, r5, #1
   10cec:	mov	r0, r6
   10cf0:	mov	r1, r5
   10cf4:	bl	10b10 <printf@plt>
   10cf8:	cmp	r5, #5
   10cfc:	bne	10cd8 <imprime@@Base+0x18>
   10d00:	pop	{r4, r5, r6, sl, fp, pc}

00010d04 <main@@Base>:
   10d04:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10d08:	add	fp, sp, #28
   10d0c:	sub	sp, sp, #100	; 0x64
   10d10:	mov	r9, #0
   10d14:	bl	10e24 <vetor_novo@@Base>
   10d18:	mov	r4, r0
   10d1c:	movw	r8, #5029	; 0x13a5
   10d20:	movt	r8, #1
   10d24:	movw	sl, #8288	; 0x2060
   10d28:	movt	sl, #2
   10d2c:	mov	r6, sp
   10d30:	mov	r7, #0
   10d34:	add	r5, r7, #1
   10d38:	mov	r0, r8
   10d3c:	mov	r1, r5
   10d40:	bl	10b10 <printf@plt>
   10d44:	ldr	r2, [sl]
   10d48:	mov	r0, r6
   10d4c:	mov	r1, #100	; 0x64
   10d50:	bl	10b28 <fgets@plt>
   10d54:	mov	r0, r6
   10d58:	bl	10b94 <strlen@plt>
   10d5c:	add	r0, r0, r6
   10d60:	strb	r9, [r0, #-1]
   10d64:	mov	r0, r4
   10d68:	mov	r1, r6
   10d6c:	mov	r2, r7
   10d70:	bl	10f74 <vetor_insere@@Base>
   10d74:	cmp	r5, #5
   10d78:	mov	r7, r5
   10d7c:	bne	10d34 <main@@Base+0x30>
   10d80:	mov	r0, r4
   10d84:	bl	10cc0 <imprime@@Base>
   10d88:	movw	r0, #5048	; 0x13b8
   10d8c:	movt	r0, #1
   10d90:	bl	10b10 <printf@plt>
   10d94:	movw	r0, #5080	; 0x13d8
   10d98:	movt	r0, #1
   10d9c:	mov	r5, sp
   10da0:	mov	r1, r5
   10da4:	bl	10bb8 <__isoc99_scanf@plt>
   10da8:	mov	r0, r4
   10dac:	mov	r1, r5
   10db0:	bl	110cc <vetor_pesquisa@@Base>
   10db4:	mov	r1, r0
   10db8:	mov	r0, r4
   10dbc:	bl	11048 <vetor_remove@@Base>
   10dc0:	cmp	r0, #0
   10dc4:	beq	10dd8 <main@@Base+0xd4>
   10dc8:	movw	r0, #5133	; 0x140d
   10dcc:	movt	r0, #1
   10dd0:	bl	10b64 <puts@plt>
   10dd4:	b	10de0 <main@@Base+0xdc>
   10dd8:	mov	r0, r4
   10ddc:	bl	10cc0 <imprime@@Base>
   10de0:	mov	r0, r4
   10de4:	bl	11130 <vetor_ordena@@Base>
   10de8:	cmp	r0, #0
   10dec:	beq	10dfc <main@@Base+0xf8>
   10df0:	movw	r0, #5083	; 0x13db
   10df4:	movt	r0, #1
   10df8:	bl	10b10 <printf@plt>
   10dfc:	movw	r0, #5117	; 0x13fd
   10e00:	movt	r0, #1
   10e04:	bl	10b64 <puts@plt>
   10e08:	mov	r0, r4
   10e0c:	bl	10cc0 <imprime@@Base>
   10e10:	mov	r0, r4
   10e14:	bl	10e50 <vetor_apaga@@Base>
   10e18:	mov	r0, #0
   10e1c:	sub	sp, fp, #28
   10e20:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00010e24 <vetor_novo@@Base>:
   10e24:	push	{fp, lr}
   10e28:	mov	fp, sp
   10e2c:	mov	r0, #12
   10e30:	bl	10b70 <malloc@plt>
   10e34:	cmp	r0, #0
   10e38:	moveq	r0, #0
   10e3c:	movne	r1, #0
   10e40:	strne	r1, [r0]
   10e44:	strne	r1, [r0, #4]
   10e48:	strne	r1, [r0, #8]
   10e4c:	pop	{fp, pc}

00010e50 <vetor_apaga@@Base>:
   10e50:	cmp	r0, #0
   10e54:	bxeq	lr
   10e58:	push	{r4, r5, fp, lr}
   10e5c:	add	fp, sp, #8
   10e60:	mov	r4, r0
   10e64:	ldr	r1, [r0]
   10e68:	ldr	r0, [r0, #8]
   10e6c:	cmp	r1, #1
   10e70:	blt	10e94 <vetor_apaga@@Base+0x44>
   10e74:	mov	r5, #0
   10e78:	ldr	r0, [r0, r5, lsl #2]
   10e7c:	bl	10b1c <free@plt>
   10e80:	add	r5, r5, #1
   10e84:	ldr	r1, [r4]
   10e88:	ldr	r0, [r4, #8]
   10e8c:	cmp	r5, r1
   10e90:	blt	10e78 <vetor_apaga@@Base+0x28>
   10e94:	bl	10b1c <free@plt>
   10e98:	mov	r0, r4
   10e9c:	pop	{r4, r5, fp, lr}
   10ea0:	b	10b1c <free@plt>

00010ea4 <vetor_atribui@@Base>:
   10ea4:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   10ea8:	add	fp, sp, #24
   10eac:	mvn	r4, #0
   10eb0:	cmp	r0, #0
   10eb4:	beq	10f2c <vetor_atribui@@Base+0x88>
   10eb8:	mov	r5, r1
   10ebc:	cmp	r1, #0
   10ec0:	bmi	10f2c <vetor_atribui@@Base+0x88>
   10ec4:	mov	r7, r0
   10ec8:	ldr	r0, [r0]
   10ecc:	cmp	r0, r5
   10ed0:	ble	10f2c <vetor_atribui@@Base+0x88>
   10ed4:	mov	r6, r2
   10ed8:	mov	r0, r2
   10edc:	bl	10b94 <strlen@plt>
   10ee0:	mov	r8, r0
   10ee4:	ldr	r0, [r7, #8]
   10ee8:	ldr	r9, [r0, r5, lsl #2]
   10eec:	mov	r0, r9
   10ef0:	bl	10b94 <strlen@plt>
   10ef4:	cmp	r8, r0
   10ef8:	bls	10f18 <vetor_atribui@@Base+0x74>
   10efc:	add	r1, r8, #1
   10f00:	mov	r0, r9
   10f04:	bl	10b40 <realloc@plt>
   10f08:	ldr	r1, [r7, #8]
   10f0c:	str	r0, [r1, r5, lsl #2]
   10f10:	cmp	r0, #0
   10f14:	beq	10f2c <vetor_atribui@@Base+0x88>
   10f18:	ldr	r0, [r7, #8]
   10f1c:	ldr	r0, [r0, r5, lsl #2]
   10f20:	mov	r1, r6
   10f24:	bl	10b58 <strcpy@plt>
   10f28:	mov	r4, r5
   10f2c:	mov	r0, r4
   10f30:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00010f34 <vetor_tamanho@@Base>:
   10f34:	cmp	r0, #0
   10f38:	ldrne	r0, [r0]
   10f3c:	mvneq	r0, #0
   10f40:	bx	lr

00010f44 <vetor_elemento@@Base>:
   10f44:	mov	r2, r0
   10f48:	mov	r0, #0
   10f4c:	cmp	r2, #0
   10f50:	beq	10f70 <vetor_elemento@@Base+0x2c>
   10f54:	cmp	r1, #0
   10f58:	bmi	10f70 <vetor_elemento@@Base+0x2c>
   10f5c:	ldr	r3, [r2]
   10f60:	cmp	r3, r1
   10f64:	bxle	lr
   10f68:	ldr	r0, [r2, #8]
   10f6c:	ldr	r0, [r0, r1, lsl #2]
   10f70:	bx	lr

00010f74 <vetor_insere@@Base>:
   10f74:	push	{r4, r5, r6, r7, fp, lr}
   10f78:	add	fp, sp, #16
   10f7c:	mvn	r4, #0
   10f80:	cmp	r0, #0
   10f84:	beq	11040 <vetor_insere@@Base+0xcc>
   10f88:	mov	r5, r2
   10f8c:	cmp	r2, #0
   10f90:	bmi	11040 <vetor_insere@@Base+0xcc>
   10f94:	mov	r7, r1
   10f98:	mov	r6, r0
   10f9c:	ldr	r1, [r0]
   10fa0:	cmp	r1, r5
   10fa4:	blt	11040 <vetor_insere@@Base+0xcc>
   10fa8:	ldr	r0, [r6, #4]
   10fac:	cmp	r1, r0
   10fb0:	bne	10fdc <vetor_insere@@Base+0x68>
   10fb4:	lsl	r1, r0, #1
   10fb8:	cmp	r0, #0
   10fbc:	movweq	r1, #1
   10fc0:	str	r1, [r6, #4]
   10fc4:	lsl	r1, r1, #2
   10fc8:	ldr	r0, [r6, #8]
   10fcc:	bl	10b40 <realloc@plt>
   10fd0:	str	r0, [r6, #8]
   10fd4:	cmp	r0, #0
   10fd8:	beq	11040 <vetor_insere@@Base+0xcc>
   10fdc:	ldr	r0, [r6]
   10fe0:	cmp	r0, r5
   10fe4:	ble	11004 <vetor_insere@@Base+0x90>
   10fe8:	ldr	r1, [r6, #8]
   10fec:	add	r2, r1, r0, lsl #2
   10ff0:	ldr	r2, [r2, #-4]
   10ff4:	str	r2, [r1, r0, lsl #2]
   10ff8:	sub	r0, r0, #1
   10ffc:	cmp	r0, r5
   11000:	bgt	10fe8 <vetor_insere@@Base+0x74>
   11004:	mov	r0, r7
   11008:	bl	10b94 <strlen@plt>
   1100c:	add	r0, r0, #1
   11010:	mov	r1, #1
   11014:	bl	10af8 <calloc@plt>
   11018:	ldr	r1, [r6, #8]
   1101c:	str	r0, [r1, r5, lsl #2]
   11020:	cmp	r0, #0
   11024:	beq	11040 <vetor_insere@@Base+0xcc>
   11028:	mov	r1, r7
   1102c:	bl	10b58 <strcpy@plt>
   11030:	ldr	r0, [r6]
   11034:	add	r0, r0, #1
   11038:	str	r0, [r6]
   1103c:	mov	r4, r5
   11040:	mov	r0, r4
   11044:	pop	{r4, r5, r6, r7, fp, pc}

00011048 <vetor_remove@@Base>:
   11048:	push	{r4, r5, fp, lr}
   1104c:	add	fp, sp, #8
   11050:	mov	r4, r0
   11054:	mvn	r0, #0
   11058:	cmp	r4, #0
   1105c:	beq	110c8 <vetor_remove@@Base+0x80>
   11060:	mov	r5, r1
   11064:	cmp	r1, #0
   11068:	bmi	110c8 <vetor_remove@@Base+0x80>
   1106c:	ldr	r1, [r4]
   11070:	cmp	r1, r5
   11074:	pople	{r4, r5, fp, pc}
   11078:	ldr	r0, [r4, #8]
   1107c:	ldr	r0, [r0, r5, lsl #2]
   11080:	bl	10b1c <free@plt>
   11084:	ldr	r0, [r4]
   11088:	add	r1, r5, #1
   1108c:	cmp	r1, r0
   11090:	bge	110bc <vetor_remove@@Base+0x74>
   11094:	ldr	r0, [r4]
   11098:	ldr	r1, [r4, #8]
   1109c:	add	r2, r1, r5, lsl #2
   110a0:	ldr	r2, [r2, #4]
   110a4:	str	r2, [r1, r5, lsl #2]
   110a8:	add	r1, r5, #1
   110ac:	add	r2, r5, #2
   110b0:	cmp	r2, r0
   110b4:	mov	r5, r1
   110b8:	blt	11098 <vetor_remove@@Base+0x50>
   110bc:	sub	r0, r0, #1
   110c0:	str	r0, [r4]
   110c4:	mov	r0, #0
   110c8:	pop	{r4, r5, fp, pc}

000110cc <vetor_pesquisa@@Base>:
   110cc:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   110d0:	add	fp, sp, #24
   110d4:	mvn	r8, #0
   110d8:	cmp	r0, #0
   110dc:	beq	11120 <vetor_pesquisa@@Base+0x54>
   110e0:	mov	r6, r0
   110e4:	ldr	r0, [r0]
   110e8:	cmp	r0, #1
   110ec:	blt	11120 <vetor_pesquisa@@Base+0x54>
   110f0:	mov	r5, r1
   110f4:	ldr	r4, [r6, #8]
   110f8:	mov	r7, #0
   110fc:	ldr	r0, [r4, r7, lsl #2]
   11100:	mov	r1, r5
   11104:	bl	10b04 <strcmp@plt>
   11108:	cmp	r0, #0
   1110c:	beq	11128 <vetor_pesquisa@@Base+0x5c>
   11110:	add	r7, r7, #1
   11114:	ldr	r0, [r6]
   11118:	cmp	r7, r0
   1111c:	blt	110fc <vetor_pesquisa@@Base+0x30>
   11120:	mov	r0, r8
   11124:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   11128:	mov	r0, r7
   1112c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00011130 <vetor_ordena@@Base>:
   11130:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   11134:	add	fp, sp, #24
   11138:	cmp	r0, #0
   1113c:	beq	111c4 <vetor_ordena@@Base+0x94>
   11140:	mov	r4, r0
   11144:	ldr	r1, [r0]
   11148:	mov	r0, #0
   1114c:	cmp	r1, #2
   11150:	blt	111d0 <vetor_ordena@@Base+0xa0>
   11154:	mov	r9, #1
   11158:	mov	r8, #0
   1115c:	b	11180 <vetor_ordena@@Base+0x50>
   11160:	add	r0, r7, #1
   11164:	ldr	r1, [r4, #8]
   11168:	str	r5, [r1, r0, lsl #2]
   1116c:	add	r8, r8, #1
   11170:	add	r9, r9, #1
   11174:	ldr	r0, [r4]
   11178:	cmp	r9, r0
   1117c:	bge	111cc <vetor_ordena@@Base+0x9c>
   11180:	ldr	r0, [r4, #8]
   11184:	ldr	r5, [r0, r9, lsl #2]
   11188:	mov	r7, r8
   1118c:	ldr	r6, [r4, #8]
   11190:	ldr	r1, [r6, r7, lsl #2]
   11194:	mov	r0, r5
   11198:	bl	10b04 <strcmp@plt>
   1119c:	cmn	r0, #1
   111a0:	bgt	11160 <vetor_ordena@@Base+0x30>
   111a4:	ldr	r0, [r6, r7, lsl #2]!
   111a8:	str	r0, [r6, #4]
   111ac:	sub	r0, r7, #1
   111b0:	cmp	r7, #0
   111b4:	mov	r7, r0
   111b8:	bgt	1118c <vetor_ordena@@Base+0x5c>
   111bc:	add	r0, r0, #1
   111c0:	b	11164 <vetor_ordena@@Base+0x34>
   111c4:	mvn	r0, #0
   111c8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   111cc:	mov	r0, #0
   111d0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000111d4 <vetor_concatena@@Base>:
   111d4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   111d8:	add	fp, sp, #24
   111dc:	mov	r4, #0
   111e0:	cmp	r0, #0
   111e4:	movne	r5, r1
   111e8:	cmpne	r1, #0
   111ec:	bne	111f8 <vetor_concatena@@Base+0x24>
   111f0:	mov	r0, r4
   111f4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   111f8:	mov	r6, r0
   111fc:	bl	10e24 <vetor_novo@@Base>
   11200:	mov	r4, r0
   11204:	ldr	r8, [r5]
   11208:	ldr	r0, [r5, #4]
   1120c:	ldr	r7, [r6]
   11210:	ldmib	r6, {r1, r2}
   11214:	add	r3, r7, r8, lsl #2
   11218:	add	r0, r0, r1
   1121c:	stmib	r4, {r0, r3}
   11220:	ldr	r0, [r7, r8, lsl #2]
   11224:	ldr	r1, [r2]
   11228:	bl	10b58 <strcpy@plt>
   1122c:	ldr	r0, [r7, r8, lsl #2]
   11230:	ldr	r1, [r5, #8]
   11234:	ldr	r1, [r1]
   11238:	bl	10b4c <strcat@plt>
   1123c:	mov	r0, r4
   11240:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00011244 <vetor_inverte@@Base>:
   11244:	push	{r4, r5, r6, r7, fp, lr}
   11248:	add	fp, sp, #16
   1124c:	mov	r7, r0
   11250:	bl	10f34 <vetor_tamanho@@Base>
   11254:	cmp	r0, #1
   11258:	blt	112a4 <vetor_inverte@@Base+0x60>
   1125c:	lsl	r1, r0, #2
   11260:	sub	r2, r0, #1
   11264:	mov	r3, #0
   11268:	ldr	r4, [r7, #8]
   1126c:	ldr	r5, [r4, r3, lsl #2]
   11270:	add	r6, r4, r1
   11274:	ldr	r6, [r6, -r3, lsl #2]
   11278:	str	r6, [r4, r3, lsl #2]
   1127c:	ldr	r6, [r7, #8]
   11280:	add	r6, r6, r1
   11284:	str	r5, [r6, -r3, lsl #2]
   11288:	add	r3, r3, #1
   1128c:	cmp	r3, r0
   11290:	bge	112a4 <vetor_inverte@@Base+0x60>
   11294:	sub	r6, r2, #1
   11298:	cmp	r3, r2
   1129c:	mov	r2, r6
   112a0:	blt	11268 <vetor_inverte@@Base+0x24>
   112a4:	mov	r0, #0
   112a8:	pop	{r4, r5, r6, r7, fp, pc}

000112ac <vetor_baralha@@Base>:
   112ac:	push	{r4, r5, r6, r7, fp, lr}
   112b0:	add	fp, sp, #16
   112b4:	sub	sp, sp, #8
   112b8:	ldr	r5, [r0]
   112bc:	bl	10e24 <vetor_novo@@Base>
   112c0:	mov	r4, r0
   112c4:	add	r0, sp, #4
   112c8:	bl	10b34 <time@plt>
   112cc:	bl	10ba0 <srand@plt>
   112d0:	cmp	r5, #1
   112d4:	blt	1130c <vetor_baralha@@Base+0x60>
   112d8:	add	r6, r5, #1
   112dc:	mov	r7, #0
   112e0:	bl	10bac <rand@plt>
   112e4:	ldr	r1, [r4, #8]
   112e8:	ldr	r2, [r1, r7, lsl #2]
   112ec:	sdiv	r3, r0, r6
   112f0:	mls	r0, r3, r6, r0
   112f4:	ldr	r3, [r1, r0, lsl #2]
   112f8:	str	r3, [r1, r7, lsl #2]
   112fc:	str	r2, [r1, r0, lsl #2]
   11300:	add	r7, r7, #1
   11304:	cmp	r5, r7
   11308:	bne	112e0 <vetor_baralha@@Base+0x34>
   1130c:	mov	r0, r4
   11310:	sub	sp, fp, #16
   11314:	pop	{r4, r5, r6, r7, fp, pc}

00011318 <__libc_csu_init@@Base>:
   11318:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1131c:	mov	r7, r0
   11320:	ldr	r6, [pc, #72]	; 11370 <__libc_csu_init@@Base+0x58>
   11324:	ldr	r5, [pc, #72]	; 11374 <__libc_csu_init@@Base+0x5c>
   11328:	add	r6, pc, r6
   1132c:	add	r5, pc, r5
   11330:	sub	r6, r6, r5
   11334:	mov	r8, r1
   11338:	mov	r9, r2
   1133c:	bl	10ad8 <calloc@plt-0x20>
   11340:	asrs	r6, r6, #2
   11344:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   11348:	mov	r4, #0
   1134c:	add	r4, r4, #1
   11350:	ldr	r3, [r5], #4
   11354:	mov	r2, r9
   11358:	mov	r1, r8
   1135c:	mov	r0, r7
   11360:	blx	r3
   11364:	cmp	r6, r4
   11368:	bne	1134c <__libc_csu_init@@Base+0x34>
   1136c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11370:	ldrdeq	r0, [r1], -ip
   11374:	ldrdeq	r0, [r1], -r4

00011378 <__libc_csu_fini@@Base>:
   11378:	bx	lr

Disassembly of section .fini:

0001137c <.fini>:
   1137c:	push	{r3, lr}
   11380:	pop	{r3, pc}
