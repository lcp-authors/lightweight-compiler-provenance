
../repos/daq-2.0.7/os-daq-modules/.libs/daq_pcap.so:     file format elf32-littlearm


Disassembly of section .init:

000008a4 <_init>:
 8a4:	push	{r3, lr}
 8a8:	bl	a80 <call_weak_fn>
 8ac:	pop	{r3, pc}

Disassembly of section .plt:

000008b0 <.plt>:
 8b0:	push	{lr}		; (str lr, [sp, #-4]!)
 8b4:	ldr	lr, [pc, #4]	; 8c0 <.plt+0x10>
 8b8:	add	lr, pc, lr
 8bc:	ldr	pc, [lr, #8]!
 8c0:	.word	0x00012740

000008c4 <calloc@plt>:
 8c4:	add	ip, pc, #0, 12
 8c8:	add	ip, ip, #73728	; 0x12000
 8cc:	ldr	pc, [ip, #1856]!	; 0x740

000008d0 <raise@plt>:
 8d0:	add	ip, pc, #0, 12
 8d4:	add	ip, ip, #73728	; 0x12000
 8d8:	ldr	pc, [ip, #1848]!	; 0x738

000008dc <strcmp@plt>:
 8dc:	add	ip, pc, #0, 12
 8e0:	add	ip, ip, #73728	; 0x12000
 8e4:	ldr	pc, [ip, #1840]!	; 0x730

000008e8 <__cxa_finalize@plt>:
 8e8:	add	ip, pc, #0, 12
 8ec:	add	ip, ip, #73728	; 0x12000
 8f0:	ldr	pc, [ip, #1832]!	; 0x728

000008f4 <pcap_activate@plt>:
 8f4:	add	ip, pc, #0, 12
 8f8:	add	ip, ip, #73728	; 0x12000
 8fc:	ldr	pc, [ip, #1824]!	; 0x720

00000900 <strtol@plt>:
 900:	add	ip, pc, #0, 12
 904:	add	ip, ip, #73728	; 0x12000
 908:	ldr	pc, [ip, #1816]!	; 0x718

0000090c <pcap_setfilter@plt>:
 90c:	add	ip, pc, #0, 12
 910:	add	ip, ip, #73728	; 0x12000
 914:	ldr	pc, [ip, #1808]!	; 0x710

00000918 <printf@plt>:
 918:	add	ip, pc, #0, 12
 91c:	add	ip, ip, #73728	; 0x12000
 920:	ldr	pc, [ip, #1800]!	; 0x708

00000924 <free@plt>:
 924:	add	ip, pc, #0, 12
 928:	add	ip, ip, #73728	; 0x12000
 92c:	ldr	pc, [ip, #1792]!	; 0x700

00000930 <memcpy@plt>:
 930:	add	ip, pc, #0, 12
 934:	add	ip, ip, #73728	; 0x12000
 938:	ldr	pc, [ip, #1784]!	; 0x6f8

0000093c <pcap_set_timeout@plt>:
 93c:	add	ip, pc, #0, 12
 940:	add	ip, ip, #73728	; 0x12000
 944:	ldr	pc, [ip, #1776]!	; 0x6f0

00000948 <strdup@plt>:
 948:	add	ip, pc, #0, 12
 94c:	add	ip, ip, #73728	; 0x12000
 950:	ldr	pc, [ip, #1768]!	; 0x6e8

00000954 <pcap_create@plt>:
 954:	add	ip, pc, #0, 12
 958:	add	ip, ip, #73728	; 0x12000
 95c:	ldr	pc, [ip, #1760]!	; 0x6e0

00000960 <pcap_close@plt>:
 960:	add	ip, pc, #0, 12
 964:	add	ip, ip, #73728	; 0x12000
 968:	ldr	pc, [ip, #1752]!	; 0x6d8

0000096c <pcap_stats@plt>:
 96c:	add	ip, pc, #0, 12
 970:	add	ip, ip, #73728	; 0x12000
 974:	ldr	pc, [ip, #1744]!	; 0x6d0

00000978 <pcap_open_dead@plt>:
 978:	add	ip, pc, #0, 12
 97c:	add	ip, ip, #73728	; 0x12000
 980:	ldr	pc, [ip, #1736]!	; 0x6c8

00000984 <pcap_set_snaplen@plt>:
 984:	add	ip, pc, #0, 12
 988:	add	ip, ip, #73728	; 0x12000
 98c:	ldr	pc, [ip, #1728]!	; 0x6c0

00000990 <pcap_breakloop@plt>:
 990:	add	ip, pc, #0, 12
 994:	add	ip, ip, #73728	; 0x12000
 998:	ldr	pc, [ip, #1720]!	; 0x6b8

0000099c <getenv@plt>:
 99c:	add	ip, pc, #0, 12
 9a0:	add	ip, ip, #73728	; 0x12000
 9a4:	ldr	pc, [ip, #1712]!	; 0x6b0

000009a8 <pcap_geterr@plt>:
 9a8:	add	ip, pc, #0, 12
 9ac:	add	ip, ip, #73728	; 0x12000
 9b0:	ldr	pc, [ip, #1704]!	; 0x6a8

000009b4 <pcap_set_promisc@plt>:
 9b4:	add	ip, pc, #0, 12
 9b8:	add	ip, ip, #73728	; 0x12000
 9bc:	ldr	pc, [ip, #1696]!	; 0x6a0

000009c0 <pcap_open_offline@plt>:
 9c0:	add	ip, pc, #0, 12
 9c4:	add	ip, ip, #73728	; 0x12000
 9c8:	ldr	pc, [ip, #1688]!	; 0x698

000009cc <__gmon_start__@plt>:
 9cc:	add	ip, pc, #0, 12
 9d0:	add	ip, ip, #73728	; 0x12000
 9d4:	ldr	pc, [ip, #1680]!	; 0x690

000009d8 <getpagesize@plt>:
 9d8:	add	ip, pc, #0, 12
 9dc:	add	ip, ip, #73728	; 0x12000
 9e0:	ldr	pc, [ip, #1672]!	; 0x688

000009e4 <snprintf@plt>:
 9e4:	add	ip, pc, #0, 12
 9e8:	add	ip, ip, #73728	; 0x12000
 9ec:	ldr	pc, [ip, #1664]!	; 0x680

000009f0 <memset@plt>:
 9f0:	add	ip, pc, #0, 12
 9f4:	add	ip, ip, #73728	; 0x12000
 9f8:	ldr	pc, [ip, #1656]!	; 0x678

000009fc <pcap_inject@plt>:
 9fc:	add	ip, pc, #0, 12
 a00:	add	ip, ip, #73728	; 0x12000
 a04:	ldr	pc, [ip, #1648]!	; 0x670

00000a08 <pcap_compile@plt>:
 a08:	add	ip, pc, #0, 12
 a0c:	add	ip, ip, #73728	; 0x12000
 a10:	ldr	pc, [ip, #1640]!	; 0x668

00000a14 <pcap_snapshot@plt>:
 a14:	add	ip, pc, #0, 12
 a18:	add	ip, ip, #73728	; 0x12000
 a1c:	ldr	pc, [ip, #1632]!	; 0x660

00000a20 <pcap_freecode@plt>:
 a20:	add	ip, pc, #0, 12
 a24:	add	ip, ip, #73728	; 0x12000
 a28:	ldr	pc, [ip, #1624]!	; 0x658

00000a2c <htonl@plt>:
 a2c:	add	ip, pc, #0, 12
 a30:	add	ip, ip, #73728	; 0x12000
 a34:	ldr	pc, [ip, #1616]!	; 0x650

00000a38 <pcap_statustostr@plt>:
 a38:	add	ip, pc, #0, 12
 a3c:	add	ip, ip, #73728	; 0x12000
 a40:	ldr	pc, [ip, #1608]!	; 0x648

00000a44 <pcap_datalink@plt>:
 a44:	add	ip, pc, #0, 12
 a48:	add	ip, ip, #73728	; 0x12000
 a4c:	ldr	pc, [ip, #1600]!	; 0x640

00000a50 <pcap_lookupnet@plt>:
 a50:	add	ip, pc, #0, 12
 a54:	add	ip, ip, #73728	; 0x12000
 a58:	ldr	pc, [ip, #1592]!	; 0x638

00000a5c <strncmp@plt>:
 a5c:	add	ip, pc, #0, 12
 a60:	add	ip, ip, #73728	; 0x12000
 a64:	ldr	pc, [ip, #1584]!	; 0x630

00000a68 <pcap_dispatch@plt>:
 a68:	add	ip, pc, #0, 12
 a6c:	add	ip, ip, #73728	; 0x12000
 a70:	ldr	pc, [ip, #1576]!	; 0x628

00000a74 <pcap_set_buffer_size@plt>:
 a74:	add	ip, pc, #0, 12
 a78:	add	ip, ip, #73728	; 0x12000
 a7c:	ldr	pc, [ip, #1568]!	; 0x620

Disassembly of section .text:

00000a80 <call_weak_fn>:
     a80:	ldr	r3, [pc, #20]	; a9c <call_weak_fn+0x1c>
     a84:	ldr	r2, [pc, #20]	; aa0 <call_weak_fn+0x20>
     a88:	add	r3, pc, r3
     a8c:	ldr	r2, [r3, r2]
     a90:	cmp	r2, #0
     a94:	bxeq	lr
     a98:	b	9cc <__gmon_start__@plt>
     a9c:	.word	0x00012570
     aa0:	.word	0x000000a8

00000aa4 <deregister_tm_clones>:
     aa4:	ldr	r3, [pc, #52]	; ae0 <deregister_tm_clones+0x3c>
     aa8:	ldr	r0, [pc, #52]	; ae4 <deregister_tm_clones+0x40>
     aac:	add	r3, pc, r3
     ab0:	add	r0, pc, r0
     ab4:	add	r3, r3, #3
     ab8:	sub	r3, r3, r0
     abc:	cmp	r3, #6
     ac0:	ldr	r3, [pc, #32]	; ae8 <deregister_tm_clones+0x44>
     ac4:	add	r3, pc, r3
     ac8:	bxls	lr
     acc:	ldr	r2, [pc, #24]	; aec <deregister_tm_clones+0x48>
     ad0:	ldr	r3, [r3, r2]
     ad4:	cmp	r3, #0
     ad8:	bxeq	lr
     adc:	bx	r3
     ae0:	.word	0x00012604
     ae4:	.word	0x00012600
     ae8:	.word	0x00012534
     aec:	.word	0x000000a4

00000af0 <register_tm_clones>:
     af0:	ldr	r1, [pc, #56]	; b30 <register_tm_clones+0x40>
     af4:	ldr	r0, [pc, #56]	; b34 <register_tm_clones+0x44>
     af8:	add	r1, pc, r1
     afc:	add	r0, pc, r0
     b00:	sub	r1, r1, r0
     b04:	ldr	r3, [pc, #44]	; b38 <register_tm_clones+0x48>
     b08:	asr	r1, r1, #2
     b0c:	add	r3, pc, r3
     b10:	add	r1, r1, r1, lsr #31
     b14:	asrs	r1, r1, #1
     b18:	bxeq	lr
     b1c:	ldr	r2, [pc, #24]	; b3c <register_tm_clones+0x4c>
     b20:	ldr	r3, [r3, r2]
     b24:	cmp	r3, #0
     b28:	bxeq	lr
     b2c:	bx	r3
     b30:	.word	0x000125b8
     b34:	.word	0x000125b4
     b38:	.word	0x000124ec
     b3c:	.word	0x000000b0

00000b40 <__do_global_dtors_aux>:
     b40:	ldr	r3, [pc, #76]	; b94 <__do_global_dtors_aux+0x54>
     b44:	ldr	r2, [pc, #76]	; b98 <__do_global_dtors_aux+0x58>
     b48:	add	r3, pc, r3
     b4c:	add	r2, pc, r2
     b50:	ldrb	r3, [r3]
     b54:	cmp	r3, #0
     b58:	bxne	lr
     b5c:	ldr	r3, [pc, #56]	; b9c <__do_global_dtors_aux+0x5c>
     b60:	push	{r4, lr}
     b64:	ldr	r3, [r2, r3]
     b68:	cmp	r3, #0
     b6c:	beq	b7c <__do_global_dtors_aux+0x3c>
     b70:	ldr	r3, [pc, #40]	; ba0 <__do_global_dtors_aux+0x60>
     b74:	ldr	r0, [pc, r3]
     b78:	bl	8e8 <__cxa_finalize@plt>
     b7c:	bl	aa4 <deregister_tm_clones>
     b80:	ldr	r3, [pc, #28]	; ba4 <__do_global_dtors_aux+0x64>
     b84:	mov	r2, #1
     b88:	add	r3, pc, r3
     b8c:	strb	r2, [r3]
     b90:	pop	{r4, pc}
     b94:	.word	0x00012568
     b98:	.word	0x000124ac
     b9c:	.word	0x000000a0
     ba0:	.word	0x00012538
     ba4:	.word	0x00012528

00000ba8 <frame_dummy>:
     ba8:	ldr	r0, [pc, #56]	; be8 <frame_dummy+0x40>
     bac:	ldr	r3, [pc, #56]	; bec <frame_dummy+0x44>
     bb0:	add	r0, pc, r0
     bb4:	ldr	r2, [r0]
     bb8:	add	r3, pc, r3
     bbc:	cmp	r2, #0
     bc0:	bne	bc8 <frame_dummy+0x20>
     bc4:	b	af0 <register_tm_clones>
     bc8:	ldr	r2, [pc, #32]	; bf0 <frame_dummy+0x48>
     bcc:	ldr	r3, [r3, r2]
     bd0:	cmp	r3, #0
     bd4:	beq	bc4 <frame_dummy+0x1c>
     bd8:	push	{r4, lr}
     bdc:	blx	r3
     be0:	pop	{r4, lr}
     be4:	b	af0 <register_tm_clones>
     be8:	.word	0x000122ec
     bec:	.word	0x00012440
     bf0:	.word	0x000000ac

00000bf4 <translate_PCAP_FRAMES>:
     bf4:	push	{fp, lr}
     bf8:	add	fp, sp, #4
     bfc:	sub	sp, sp, #40	; 0x28
     c00:	str	r0, [fp, #-32]	; 0xffffffe0
     c04:	ldr	r3, [pc, #320]	; d4c <translate_PCAP_FRAMES+0x158>
     c08:	add	r3, pc, r3
     c0c:	mov	r0, r3
     c10:	bl	99c <getenv@plt>
     c14:	str	r0, [fp, #-16]
     c18:	ldr	r3, [fp, #-16]
     c1c:	cmp	r3, #0
     c20:	bne	c2c <translate_PCAP_FRAMES+0x38>
     c24:	mov	r3, #0
     c28:	b	d40 <translate_PCAP_FRAMES+0x14c>
     c2c:	ldr	r3, [fp, #-32]	; 0xffffffe0
     c30:	add	r3, r3, #99	; 0x63
     c34:	bic	r3, r3, #15
     c38:	str	r3, [fp, #-20]	; 0xffffffec
     c3c:	bl	9d8 <getpagesize@plt>
     c40:	str	r0, [fp, #-8]
     c44:	b	c54 <translate_PCAP_FRAMES+0x60>
     c48:	ldr	r3, [fp, #-8]
     c4c:	lsl	r3, r3, #1
     c50:	str	r3, [fp, #-8]
     c54:	ldr	r2, [fp, #-8]
     c58:	ldr	r3, [fp, #-20]	; 0xffffffec
     c5c:	cmp	r2, r3
     c60:	blt	c48 <translate_PCAP_FRAMES+0x54>
     c64:	ldr	r1, [fp, #-20]	; 0xffffffec
     c68:	ldr	r0, [fp, #-8]
     c6c:	bl	1fc0 <__divsi3>
     c70:	mov	r3, r0
     c74:	str	r3, [fp, #-24]	; 0xffffffe8
     c78:	mov	r2, #3
     c7c:	ldr	r3, [pc, #204]	; d50 <translate_PCAP_FRAMES+0x15c>
     c80:	add	r3, pc, r3
     c84:	mov	r1, r3
     c88:	ldr	r0, [fp, #-16]
     c8c:	bl	a5c <strncmp@plt>
     c90:	mov	r3, r0
     c94:	cmp	r3, #0
     c98:	beq	cd8 <translate_PCAP_FRAMES+0xe4>
     c9c:	mov	r2, #3
     ca0:	ldr	r3, [pc, #172]	; d54 <translate_PCAP_FRAMES+0x160>
     ca4:	add	r3, pc, r3
     ca8:	mov	r1, r3
     cac:	ldr	r0, [fp, #-16]
     cb0:	bl	a5c <strncmp@plt>
     cb4:	mov	r3, r0
     cb8:	cmp	r3, #0
     cbc:	beq	cd8 <translate_PCAP_FRAMES+0xe4>
     cc0:	mov	r2, #10
     cc4:	mov	r1, #0
     cc8:	ldr	r0, [fp, #-16]
     ccc:	bl	900 <strtol@plt>
     cd0:	str	r0, [fp, #-12]
     cd4:	b	ce0 <translate_PCAP_FRAMES+0xec>
     cd8:	mov	r3, #32768	; 0x8000
     cdc:	str	r3, [fp, #-12]
     ce0:	ldr	r3, [fp, #-12]
     ce4:	ldr	r2, [fp, #-8]
     ce8:	mul	r3, r2, r3
     cec:	ldr	r1, [fp, #-24]	; 0xffffffe8
     cf0:	mov	r0, r3
     cf4:	bl	1fc0 <__divsi3>
     cf8:	mov	r3, r0
     cfc:	mov	r2, r3
     d00:	ldr	r3, [fp, #-20]	; 0xffffffec
     d04:	str	r3, [sp, #4]
     d08:	str	r2, [sp]
     d0c:	ldr	r3, [fp, #-24]	; 0xffffffe8
     d10:	ldr	r2, [fp, #-8]
     d14:	ldr	r1, [fp, #-12]
     d18:	ldr	r0, [pc, #56]	; d58 <translate_PCAP_FRAMES+0x164>
     d1c:	add	r0, pc, r0
     d20:	bl	918 <printf@plt>
     d24:	ldr	r3, [fp, #-12]
     d28:	ldr	r2, [fp, #-8]
     d2c:	mul	r3, r2, r3
     d30:	ldr	r1, [fp, #-24]	; 0xffffffe8
     d34:	mov	r0, r3
     d38:	bl	1fc0 <__divsi3>
     d3c:	mov	r3, r0
     d40:	mov	r0, r3
     d44:	sub	sp, fp, #4
     d48:	pop	{fp, pc}
     d4c:	.word	0x00001608
     d50:	.word	0x0000159c
     d54:	.word	0x0000157c
     d58:	.word	0x00001508

00000d5c <pcap_daq_open>:
     d5c:	push	{r4, r5, fp, lr}
     d60:	add	fp, sp, #12
     d64:	sub	sp, sp, #32
     d68:	str	r0, [fp, #-32]	; 0xffffffe0
     d6c:	mvn	r3, #255	; 0xff
     d70:	str	r3, [fp, #-20]	; 0xffffffec
     d74:	ldr	r3, [fp, #-32]	; 0xffffffe0
     d78:	ldr	r3, [r3, #16]
     d7c:	cmp	r3, #0
     d80:	beq	d8c <pcap_daq_open+0x30>
     d84:	mov	r3, #0
     d88:	b	1038 <pcap_daq_open+0x2dc>
     d8c:	ldr	r3, [fp, #-32]	; 0xffffffe0
     d90:	ldr	r3, [r3]
     d94:	cmp	r3, #0
     d98:	beq	ef8 <pcap_daq_open+0x19c>
     d9c:	ldr	r3, [fp, #-32]	; 0xffffffe0
     da0:	ldr	r2, [r3]
     da4:	ldr	r3, [fp, #-32]	; 0xffffffe0
     da8:	add	r3, r3, #20
     dac:	mov	r1, r3
     db0:	mov	r0, r2
     db4:	bl	954 <pcap_create@plt>
     db8:	mov	r2, r0
     dbc:	ldr	r3, [fp, #-32]	; 0xffffffe0
     dc0:	str	r2, [r3, #16]
     dc4:	ldr	r3, [fp, #-32]	; 0xffffffe0
     dc8:	ldr	r3, [r3, #16]
     dcc:	cmp	r3, #0
     dd0:	bne	ddc <pcap_daq_open+0x80>
     dd4:	mvn	r3, #0
     dd8:	b	1038 <pcap_daq_open+0x2dc>
     ddc:	ldr	r3, [fp, #-32]	; 0xffffffe0
     de0:	ldr	r2, [r3, #16]
     de4:	ldr	r3, [fp, #-32]	; 0xffffffe0
     de8:	ldr	r3, [r3, #12]
     dec:	mov	r1, r3
     df0:	mov	r0, r2
     df4:	bl	984 <pcap_set_snaplen@plt>
     df8:	str	r0, [fp, #-16]
     dfc:	ldr	r3, [fp, #-16]
     e00:	cmp	r3, #0
     e04:	blt	f64 <pcap_daq_open+0x208>
     e08:	ldr	r3, [fp, #-32]	; 0xffffffe0
     e0c:	ldr	r2, [r3, #16]
     e10:	ldr	r3, [fp, #-32]	; 0xffffffe0
     e14:	ldr	r3, [r3, #276]	; 0x114
     e18:	cmp	r3, #0
     e1c:	movne	r3, #1
     e20:	moveq	r3, #0
     e24:	uxtb	r3, r3
     e28:	mov	r1, r3
     e2c:	mov	r0, r2
     e30:	bl	9b4 <pcap_set_promisc@plt>
     e34:	str	r0, [fp, #-16]
     e38:	ldr	r3, [fp, #-16]
     e3c:	cmp	r3, #0
     e40:	blt	f6c <pcap_daq_open+0x210>
     e44:	ldr	r3, [fp, #-32]	; 0xffffffe0
     e48:	ldr	r2, [r3, #16]
     e4c:	ldr	r3, [fp, #-32]	; 0xffffffe0
     e50:	ldr	r3, [r3, #280]	; 0x118
     e54:	mov	r1, r3
     e58:	mov	r0, r2
     e5c:	bl	93c <pcap_set_timeout@plt>
     e60:	str	r0, [fp, #-16]
     e64:	ldr	r3, [fp, #-16]
     e68:	cmp	r3, #0
     e6c:	blt	f74 <pcap_daq_open+0x218>
     e70:	ldr	r3, [fp, #-32]	; 0xffffffe0
     e74:	ldr	r2, [r3, #16]
     e78:	ldr	r3, [fp, #-32]	; 0xffffffe0
     e7c:	ldr	r3, [r3, #284]	; 0x11c
     e80:	mov	r1, r3
     e84:	mov	r0, r2
     e88:	bl	a74 <pcap_set_buffer_size@plt>
     e8c:	str	r0, [fp, #-16]
     e90:	ldr	r3, [fp, #-16]
     e94:	cmp	r3, #0
     e98:	blt	f7c <pcap_daq_open+0x220>
     e9c:	ldr	r3, [fp, #-32]	; 0xffffffe0
     ea0:	ldr	r3, [r3, #16]
     ea4:	mov	r0, r3
     ea8:	bl	8f4 <pcap_activate@plt>
     eac:	str	r0, [fp, #-16]
     eb0:	ldr	r3, [fp, #-16]
     eb4:	cmp	r3, #0
     eb8:	blt	f84 <pcap_daq_open+0x228>
     ebc:	ldr	r3, [fp, #-32]	; 0xffffffe0
     ec0:	ldr	r0, [r3]
     ec4:	ldr	r3, [fp, #-32]	; 0xffffffe0
     ec8:	add	r3, r3, #20
     ecc:	sub	r2, fp, #28
     ed0:	sub	r1, fp, #24
     ed4:	bl	a50 <pcap_lookupnet@plt>
     ed8:	mov	r3, r0
     edc:	cmp	r3, #0
     ee0:	bge	f48 <pcap_daq_open+0x1ec>
     ee4:	ldr	r0, [fp, #-20]	; 0xffffffec
     ee8:	bl	a2c <htonl@plt>
     eec:	mov	r3, r0
     ef0:	str	r3, [fp, #-28]	; 0xffffffe4
     ef4:	b	f48 <pcap_daq_open+0x1ec>
     ef8:	ldr	r3, [fp, #-32]	; 0xffffffe0
     efc:	ldr	r2, [r3, #4]
     f00:	ldr	r3, [fp, #-32]	; 0xffffffe0
     f04:	add	r3, r3, #20
     f08:	mov	r1, r3
     f0c:	mov	r0, r2
     f10:	bl	9c0 <pcap_open_offline@plt>
     f14:	mov	r2, r0
     f18:	ldr	r3, [fp, #-32]	; 0xffffffe0
     f1c:	str	r2, [r3, #16]
     f20:	ldr	r3, [fp, #-32]	; 0xffffffe0
     f24:	ldr	r3, [r3, #16]
     f28:	cmp	r3, #0
     f2c:	bne	f38 <pcap_daq_open+0x1dc>
     f30:	mvn	r3, #0
     f34:	b	1038 <pcap_daq_open+0x2dc>
     f38:	ldr	r0, [fp, #-20]	; 0xffffffec
     f3c:	bl	a2c <htonl@plt>
     f40:	mov	r3, r0
     f44:	str	r3, [fp, #-28]	; 0xffffffe4
     f48:	ldr	r0, [fp, #-20]	; 0xffffffec
     f4c:	bl	a2c <htonl@plt>
     f50:	mov	r2, r0
     f54:	ldr	r3, [fp, #-32]	; 0xffffffe0
     f58:	str	r2, [r3, #304]	; 0x130
     f5c:	mov	r3, #0
     f60:	b	1038 <pcap_daq_open+0x2dc>
     f64:	nop			; (mov r0, r0)
     f68:	b	f88 <pcap_daq_open+0x22c>
     f6c:	nop			; (mov r0, r0)
     f70:	b	f88 <pcap_daq_open+0x22c>
     f74:	nop			; (mov r0, r0)
     f78:	b	f88 <pcap_daq_open+0x22c>
     f7c:	nop			; (mov r0, r0)
     f80:	b	f88 <pcap_daq_open+0x22c>
     f84:	nop			; (mov r0, r0)
     f88:	ldr	r3, [fp, #-16]
     f8c:	cmn	r3, #1
     f90:	beq	fac <pcap_daq_open+0x250>
     f94:	ldr	r3, [fp, #-16]
     f98:	cmn	r3, #5
     f9c:	beq	fac <pcap_daq_open+0x250>
     fa0:	ldr	r3, [fp, #-16]
     fa4:	cmn	r3, #8
     fa8:	bne	fe0 <pcap_daq_open+0x284>
     fac:	ldr	r3, [fp, #-32]	; 0xffffffe0
     fb0:	add	r4, r3, #20
     fb4:	ldr	r3, [fp, #-32]	; 0xffffffe0
     fb8:	ldr	r3, [r3, #16]
     fbc:	mov	r0, r3
     fc0:	bl	9a8 <pcap_geterr@plt>
     fc4:	mov	r3, r0
     fc8:	ldr	r2, [pc, #116]	; 1044 <pcap_daq_open+0x2e8>
     fcc:	add	r2, pc, r2
     fd0:	mov	r1, #256	; 0x100
     fd4:	mov	r0, r4
     fd8:	bl	9e4 <snprintf@plt>
     fdc:	b	1018 <pcap_daq_open+0x2bc>
     fe0:	ldr	r3, [fp, #-32]	; 0xffffffe0
     fe4:	add	r4, r3, #20
     fe8:	ldr	r3, [fp, #-32]	; 0xffffffe0
     fec:	ldr	r5, [r3]
     ff0:	ldr	r0, [fp, #-16]
     ff4:	bl	a38 <pcap_statustostr@plt>
     ff8:	mov	r3, r0
     ffc:	str	r3, [sp]
    1000:	mov	r3, r5
    1004:	ldr	r2, [pc, #60]	; 1048 <pcap_daq_open+0x2ec>
    1008:	add	r2, pc, r2
    100c:	mov	r1, #256	; 0x100
    1010:	mov	r0, r4
    1014:	bl	9e4 <snprintf@plt>
    1018:	ldr	r3, [fp, #-32]	; 0xffffffe0
    101c:	ldr	r3, [r3, #16]
    1020:	mov	r0, r3
    1024:	bl	960 <pcap_close@plt>
    1028:	ldr	r3, [fp, #-32]	; 0xffffffe0
    102c:	mov	r2, #0
    1030:	str	r2, [r3, #16]
    1034:	mvn	r3, #0
    1038:	mov	r0, r3
    103c:	sub	sp, fp, #12
    1040:	pop	{r4, r5, fp, pc}
    1044:	.word	0x00001280
    1048:	.word	0x00001248

0000104c <update_hw_stats>:
    104c:	push	{r4, fp, lr}
    1050:	add	fp, sp, #8
    1054:	sub	sp, sp, #28
    1058:	str	r0, [fp, #-32]	; 0xffffffe0
    105c:	ldr	r3, [fp, #-32]	; 0xffffffe0
    1060:	ldr	r3, [r3, #16]
    1064:	cmp	r3, #0
    1068:	beq	11fc <update_hw_stats+0x1b0>
    106c:	ldr	r3, [fp, #-32]	; 0xffffffe0
    1070:	ldr	r3, [r3]
    1074:	cmp	r3, #0
    1078:	beq	11fc <update_hw_stats+0x1b0>
    107c:	sub	r3, fp, #24
    1080:	mov	r2, #12
    1084:	mov	r1, #0
    1088:	mov	r0, r3
    108c:	bl	9f0 <memset@plt>
    1090:	ldr	r3, [fp, #-32]	; 0xffffffe0
    1094:	ldr	r3, [r3, #16]
    1098:	sub	r2, fp, #24
    109c:	mov	r1, r2
    10a0:	mov	r0, r3
    10a4:	bl	96c <pcap_stats@plt>
    10a8:	mov	r3, r0
    10ac:	cmn	r3, #1
    10b0:	bne	10ec <update_hw_stats+0xa0>
    10b4:	ldr	r3, [fp, #-32]	; 0xffffffe0
    10b8:	add	r4, r3, #20
    10bc:	ldr	r3, [fp, #-32]	; 0xffffffe0
    10c0:	ldr	r3, [r3, #16]
    10c4:	mov	r0, r3
    10c8:	bl	9a8 <pcap_geterr@plt>
    10cc:	mov	r3, r0
    10d0:	ldr	r2, [pc, #308]	; 120c <update_hw_stats+0x1c0>
    10d4:	add	r2, pc, r2
    10d8:	mov	r1, #256	; 0x100
    10dc:	mov	r0, r4
    10e0:	bl	9e4 <snprintf@plt>
    10e4:	mvn	r3, #0
    10e8:	b	1200 <update_hw_stats+0x1b4>
    10ec:	ldr	r2, [fp, #-24]	; 0xffffffe8
    10f0:	ldr	r3, [fp, #-32]	; 0xffffffe0
    10f4:	ldr	r3, [r3, #432]	; 0x1b0
    10f8:	cmp	r2, r3
    10fc:	bcs	1120 <update_hw_stats+0xd4>
    1100:	ldr	r3, [fp, #-32]	; 0xffffffe0
    1104:	add	r3, r3, #416	; 0x1a0
    1108:	ldrd	r2, [r3]
    110c:	subs	r2, r2, #1
    1110:	adc	r3, r3, #0
    1114:	ldr	r1, [fp, #-32]	; 0xffffffe0
    1118:	add	r1, r1, #416	; 0x1a0
    111c:	strd	r2, [r1]
    1120:	ldr	r2, [fp, #-20]	; 0xffffffec
    1124:	ldr	r3, [fp, #-32]	; 0xffffffe0
    1128:	ldr	r3, [r3, #436]	; 0x1b4
    112c:	cmp	r2, r3
    1130:	bcs	1154 <update_hw_stats+0x108>
    1134:	ldr	r3, [fp, #-32]	; 0xffffffe0
    1138:	add	r3, r3, #432	; 0x1b0
    113c:	ldrd	r2, [r3, #-8]
    1140:	subs	r2, r2, #1
    1144:	adc	r3, r3, #0
    1148:	ldr	r1, [fp, #-32]	; 0xffffffe0
    114c:	add	r1, r1, #432	; 0x1b0
    1150:	strd	r2, [r1, #-8]
    1154:	ldr	r2, [fp, #-24]	; 0xffffffe8
    1158:	ldr	r3, [fp, #-32]	; 0xffffffe0
    115c:	str	r2, [r3, #432]	; 0x1b0
    1160:	ldr	r2, [fp, #-20]	; 0xffffffec
    1164:	ldr	r3, [fp, #-32]	; 0xffffffe0
    1168:	str	r2, [r3, #436]	; 0x1b4
    116c:	ldr	r3, [fp, #-32]	; 0xffffffe0
    1170:	add	r3, r3, #416	; 0x1a0
    1174:	ldrd	r0, [r3]
    1178:	ldr	r3, [fp, #-32]	; 0xffffffe0
    117c:	ldr	r3, [r3, #432]	; 0x1b0
    1180:	mov	r2, r3
    1184:	mov	r3, #0
    1188:	adds	r0, r0, r2
    118c:	adc	r1, r1, r3
    1190:	ldr	r3, [fp, #-32]	; 0xffffffe0
    1194:	ldr	r3, [r3, #408]	; 0x198
    1198:	mov	r2, r3
    119c:	mov	r3, #0
    11a0:	subs	r2, r0, r2
    11a4:	sbc	r3, r1, r3
    11a8:	ldr	r1, [fp, #-32]	; 0xffffffe0
    11ac:	add	r1, r1, #320	; 0x140
    11b0:	strd	r2, [r1, #-8]
    11b4:	ldr	r3, [fp, #-32]	; 0xffffffe0
    11b8:	add	r3, r3, #432	; 0x1b0
    11bc:	ldrd	r0, [r3, #-8]
    11c0:	ldr	r3, [fp, #-32]	; 0xffffffe0
    11c4:	ldr	r3, [r3, #436]	; 0x1b4
    11c8:	mov	r2, r3
    11cc:	mov	r3, #0
    11d0:	adds	r0, r0, r2
    11d4:	adc	r1, r1, r3
    11d8:	ldr	r3, [fp, #-32]	; 0xffffffe0
    11dc:	ldr	r3, [r3, #412]	; 0x19c
    11e0:	mov	r2, r3
    11e4:	mov	r3, #0
    11e8:	subs	r2, r0, r2
    11ec:	sbc	r3, r1, r3
    11f0:	ldr	r1, [fp, #-32]	; 0xffffffe0
    11f4:	add	r1, r1, #320	; 0x140
    11f8:	strd	r2, [r1]
    11fc:	mov	r3, #0
    1200:	mov	r0, r3
    1204:	sub	sp, fp, #8
    1208:	pop	{r4, fp, pc}
    120c:	.word	0x00001178

00001210 <pcap_daq_initialize>:
    1210:	push	{fp, lr}
    1214:	add	fp, sp, #4
    1218:	sub	sp, sp, #24
    121c:	str	r0, [fp, #-16]
    1220:	str	r1, [fp, #-20]	; 0xffffffec
    1224:	str	r2, [fp, #-24]	; 0xffffffe8
    1228:	str	r3, [fp, #-28]	; 0xffffffe4
    122c:	mov	r1, #448	; 0x1c0
    1230:	mov	r0, #1
    1234:	bl	8c4 <calloc@plt>
    1238:	mov	r3, r0
    123c:	str	r3, [fp, #-12]
    1240:	ldr	r3, [fp, #-12]
    1244:	cmp	r3, #0
    1248:	bne	1270 <pcap_daq_initialize+0x60>
    124c:	ldr	r3, [pc, #592]	; 14a4 <pcap_daq_initialize+0x294>
    1250:	add	r3, pc, r3
    1254:	ldr	r2, [pc, #588]	; 14a8 <pcap_daq_initialize+0x298>
    1258:	add	r2, pc, r2
    125c:	ldr	r1, [fp, #-28]	; 0xffffffe4
    1260:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1264:	bl	9e4 <snprintf@plt>
    1268:	mvn	r3, #1
    126c:	b	1498 <pcap_daq_initialize+0x288>
    1270:	ldr	r3, [fp, #-16]
    1274:	ldr	r2, [r3, #4]
    1278:	ldr	r3, [fp, #-12]
    127c:	str	r2, [r3, #12]
    1280:	ldr	r3, [fp, #-16]
    1284:	ldr	r3, [r3, #16]
    1288:	and	r2, r3, #1
    128c:	ldr	r3, [fp, #-12]
    1290:	str	r2, [r3, #276]	; 0x114
    1294:	ldr	r3, [fp, #-16]
    1298:	ldr	r3, [r3, #8]
    129c:	mov	r2, r3
    12a0:	ldr	r3, [fp, #-12]
    12a4:	str	r2, [r3, #280]	; 0x118
    12a8:	ldr	r3, [fp, #-16]
    12ac:	ldr	r3, [r3, #20]
    12b0:	str	r3, [fp, #-8]
    12b4:	b	1310 <pcap_daq_initialize+0x100>
    12b8:	ldr	r3, [fp, #-8]
    12bc:	ldr	r3, [r3]
    12c0:	ldr	r2, [pc, #484]	; 14ac <pcap_daq_initialize+0x29c>
    12c4:	add	r2, pc, r2
    12c8:	mov	r1, r2
    12cc:	mov	r0, r3
    12d0:	bl	8dc <strcmp@plt>
    12d4:	mov	r3, r0
    12d8:	cmp	r3, #0
    12dc:	bne	1304 <pcap_daq_initialize+0xf4>
    12e0:	ldr	r3, [fp, #-8]
    12e4:	ldr	r3, [r3, #4]
    12e8:	mov	r2, #10
    12ec:	mov	r1, #0
    12f0:	mov	r0, r3
    12f4:	bl	900 <strtol@plt>
    12f8:	mov	r2, r0
    12fc:	ldr	r3, [fp, #-12]
    1300:	str	r2, [r3, #284]	; 0x11c
    1304:	ldr	r3, [fp, #-8]
    1308:	ldr	r3, [r3, #8]
    130c:	str	r3, [fp, #-8]
    1310:	ldr	r3, [fp, #-8]
    1314:	cmp	r3, #0
    1318:	bne	12b8 <pcap_daq_initialize+0xa8>
    131c:	ldr	r3, [fp, #-12]
    1320:	ldr	r3, [r3, #284]	; 0x11c
    1324:	cmp	r3, #0
    1328:	bne	1348 <pcap_daq_initialize+0x138>
    132c:	ldr	r3, [fp, #-12]
    1330:	ldr	r3, [r3, #12]
    1334:	mov	r0, r3
    1338:	bl	bf4 <translate_PCAP_FRAMES>
    133c:	mov	r2, r0
    1340:	ldr	r3, [fp, #-12]
    1344:	str	r2, [r3, #284]	; 0x11c
    1348:	ldr	r3, [fp, #-16]
    134c:	ldr	r3, [r3, #12]
    1350:	cmp	r3, #2
    1354:	bne	13c4 <pcap_daq_initialize+0x1b4>
    1358:	ldr	r3, [fp, #-16]
    135c:	ldr	r3, [r3]
    1360:	mov	r0, r3
    1364:	bl	948 <strdup@plt>
    1368:	mov	r3, r0
    136c:	mov	r2, r3
    1370:	ldr	r3, [fp, #-12]
    1374:	str	r2, [r3, #4]
    1378:	ldr	r3, [fp, #-12]
    137c:	ldr	r3, [r3, #4]
    1380:	cmp	r3, #0
    1384:	bne	13b4 <pcap_daq_initialize+0x1a4>
    1388:	ldr	r3, [pc, #288]	; 14b0 <pcap_daq_initialize+0x2a0>
    138c:	add	r3, pc, r3
    1390:	ldr	r2, [pc, #284]	; 14b4 <pcap_daq_initialize+0x2a4>
    1394:	add	r2, pc, r2
    1398:	ldr	r1, [fp, #-28]	; 0xffffffe4
    139c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    13a0:	bl	9e4 <snprintf@plt>
    13a4:	ldr	r0, [fp, #-12]
    13a8:	bl	924 <free@plt>
    13ac:	mvn	r3, #1
    13b0:	b	1498 <pcap_daq_initialize+0x288>
    13b4:	ldr	r3, [fp, #-12]
    13b8:	mov	r2, #0
    13bc:	str	r2, [r3, #292]	; 0x124
    13c0:	b	142c <pcap_daq_initialize+0x21c>
    13c4:	ldr	r3, [fp, #-16]
    13c8:	ldr	r3, [r3]
    13cc:	mov	r0, r3
    13d0:	bl	948 <strdup@plt>
    13d4:	mov	r3, r0
    13d8:	mov	r2, r3
    13dc:	ldr	r3, [fp, #-12]
    13e0:	str	r2, [r3]
    13e4:	ldr	r3, [fp, #-12]
    13e8:	ldr	r3, [r3]
    13ec:	cmp	r3, #0
    13f0:	bne	1420 <pcap_daq_initialize+0x210>
    13f4:	ldr	r3, [pc, #188]	; 14b8 <pcap_daq_initialize+0x2a8>
    13f8:	add	r3, pc, r3
    13fc:	ldr	r2, [pc, #184]	; 14bc <pcap_daq_initialize+0x2ac>
    1400:	add	r2, pc, r2
    1404:	ldr	r1, [fp, #-28]	; 0xffffffe4
    1408:	ldr	r0, [fp, #-24]	; 0xffffffe8
    140c:	bl	9e4 <snprintf@plt>
    1410:	ldr	r0, [fp, #-12]
    1414:	bl	924 <free@plt>
    1418:	mvn	r3, #1
    141c:	b	1498 <pcap_daq_initialize+0x288>
    1420:	ldr	r3, [fp, #-12]
    1424:	mov	r2, #1
    1428:	str	r2, [r3, #292]	; 0x124
    142c:	ldr	r3, [fp, #-12]
    1430:	ldr	r3, [r3, #292]	; 0x124
    1434:	cmp	r3, #0
    1438:	bne	147c <pcap_daq_initialize+0x26c>
    143c:	ldr	r0, [fp, #-12]
    1440:	bl	d5c <pcap_daq_open>
    1444:	mov	r3, r0
    1448:	cmp	r3, #0
    144c:	beq	147c <pcap_daq_initialize+0x26c>
    1450:	ldr	r3, [fp, #-12]
    1454:	add	r3, r3, #20
    1458:	ldr	r2, [pc, #96]	; 14c0 <pcap_daq_initialize+0x2b0>
    145c:	add	r2, pc, r2
    1460:	ldr	r1, [fp, #-28]	; 0xffffffe4
    1464:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1468:	bl	9e4 <snprintf@plt>
    146c:	ldr	r0, [fp, #-12]
    1470:	bl	924 <free@plt>
    1474:	mvn	r3, #0
    1478:	b	1498 <pcap_daq_initialize+0x288>
    147c:	ldr	r3, [fp, #-12]
    1480:	mov	r2, #1
    1484:	str	r2, [r3, #440]	; 0x1b8
    1488:	ldr	r3, [fp, #-20]	; 0xffffffec
    148c:	ldr	r2, [fp, #-12]
    1490:	str	r2, [r3]
    1494:	mov	r3, #0
    1498:	mov	r0, r3
    149c:	sub	sp, fp, #4
    14a0:	pop	{fp, pc}
    14a4:	.word	0x00001160
    14a8:	.word	0x00001000
    14ac:	.word	0x00000fcc
    14b0:	.word	0x00001024
    14b4:	.word	0x00000f08
    14b8:	.word	0x00000fb8
    14bc:	.word	0x00000ed4
    14c0:	.word	0x00000df0

000014c4 <pcap_daq_set_filter>:
    14c4:	push	{r4, fp, lr}
    14c8:	add	fp, sp, #8
    14cc:	sub	sp, sp, #36	; 0x24
    14d0:	str	r0, [fp, #-32]	; 0xffffffe0
    14d4:	str	r1, [fp, #-36]	; 0xffffffdc
    14d8:	ldr	r3, [fp, #-32]	; 0xffffffe0
    14dc:	str	r3, [fp, #-16]
    14e0:	ldr	r3, [fp, #-16]
    14e4:	ldr	r3, [r3, #16]
    14e8:	cmp	r3, #0
    14ec:	beq	15e8 <pcap_daq_set_filter+0x124>
    14f0:	ldr	r3, [fp, #-16]
    14f4:	ldr	r0, [r3, #16]
    14f8:	ldr	r3, [fp, #-16]
    14fc:	ldr	r3, [r3, #304]	; 0x130
    1500:	sub	r1, fp, #28
    1504:	str	r3, [sp]
    1508:	mov	r3, #1
    150c:	ldr	r2, [fp, #-36]	; 0xffffffdc
    1510:	bl	a08 <pcap_compile@plt>
    1514:	mov	r3, r0
    1518:	cmp	r3, #0
    151c:	bge	1564 <pcap_daq_set_filter+0xa0>
    1520:	ldr	r3, [fp, #-16]
    1524:	add	r4, r3, #20
    1528:	ldr	r3, [fp, #-16]
    152c:	ldr	r3, [r3, #16]
    1530:	mov	r0, r3
    1534:	bl	9a8 <pcap_geterr@plt>
    1538:	mov	r3, r0
    153c:	str	r3, [sp]
    1540:	ldr	r3, [pc, #488]	; 1730 <pcap_daq_set_filter+0x26c>
    1544:	add	r3, pc, r3
    1548:	ldr	r2, [pc, #484]	; 1734 <pcap_daq_set_filter+0x270>
    154c:	add	r2, pc, r2
    1550:	mov	r1, #256	; 0x100
    1554:	mov	r0, r4
    1558:	bl	9e4 <snprintf@plt>
    155c:	mvn	r3, #0
    1560:	b	1724 <pcap_daq_set_filter+0x260>
    1564:	ldr	r3, [fp, #-16]
    1568:	ldr	r3, [r3, #16]
    156c:	sub	r2, fp, #28
    1570:	mov	r1, r2
    1574:	mov	r0, r3
    1578:	bl	90c <pcap_setfilter@plt>
    157c:	mov	r3, r0
    1580:	cmp	r3, #0
    1584:	bge	15d8 <pcap_daq_set_filter+0x114>
    1588:	sub	r3, fp, #28
    158c:	mov	r0, r3
    1590:	bl	a20 <pcap_freecode@plt>
    1594:	ldr	r3, [fp, #-16]
    1598:	add	r4, r3, #20
    159c:	ldr	r3, [fp, #-16]
    15a0:	ldr	r3, [r3, #16]
    15a4:	mov	r0, r3
    15a8:	bl	9a8 <pcap_geterr@plt>
    15ac:	mov	r3, r0
    15b0:	str	r3, [sp]
    15b4:	ldr	r3, [pc, #380]	; 1738 <pcap_daq_set_filter+0x274>
    15b8:	add	r3, pc, r3
    15bc:	ldr	r2, [pc, #376]	; 173c <pcap_daq_set_filter+0x278>
    15c0:	add	r2, pc, r2
    15c4:	mov	r1, #256	; 0x100
    15c8:	mov	r0, r4
    15cc:	bl	9e4 <snprintf@plt>
    15d0:	mvn	r3, #0
    15d4:	b	1724 <pcap_daq_set_filter+0x260>
    15d8:	sub	r3, fp, #28
    15dc:	mov	r0, r3
    15e0:	bl	a20 <pcap_freecode@plt>
    15e4:	b	1720 <pcap_daq_set_filter+0x25c>
    15e8:	ldr	r3, [fp, #-16]
    15ec:	ldr	r3, [r3, #12]
    15f0:	mov	r1, r3
    15f4:	mov	r0, #1
    15f8:	bl	978 <pcap_open_dead@plt>
    15fc:	str	r0, [fp, #-20]	; 0xffffffec
    1600:	ldr	r3, [fp, #-20]	; 0xffffffec
    1604:	cmp	r3, #0
    1608:	bne	1634 <pcap_daq_set_filter+0x170>
    160c:	ldr	r3, [fp, #-16]
    1610:	add	r0, r3, #20
    1614:	ldr	r3, [pc, #292]	; 1740 <pcap_daq_set_filter+0x27c>
    1618:	add	r3, pc, r3
    161c:	ldr	r2, [pc, #288]	; 1744 <pcap_daq_set_filter+0x280>
    1620:	add	r2, pc, r2
    1624:	mov	r1, #256	; 0x100
    1628:	bl	9e4 <snprintf@plt>
    162c:	mvn	r3, #1
    1630:	b	1724 <pcap_daq_set_filter+0x260>
    1634:	ldr	r3, [fp, #-16]
    1638:	ldr	r3, [r3, #304]	; 0x130
    163c:	sub	r1, fp, #28
    1640:	str	r3, [sp]
    1644:	mov	r3, #1
    1648:	ldr	r2, [fp, #-36]	; 0xffffffdc
    164c:	ldr	r0, [fp, #-20]	; 0xffffffec
    1650:	bl	a08 <pcap_compile@plt>
    1654:	mov	r3, r0
    1658:	cmp	r3, #0
    165c:	bge	169c <pcap_daq_set_filter+0x1d8>
    1660:	ldr	r3, [fp, #-16]
    1664:	add	r4, r3, #20
    1668:	ldr	r0, [fp, #-20]	; 0xffffffec
    166c:	bl	9a8 <pcap_geterr@plt>
    1670:	mov	r3, r0
    1674:	str	r3, [sp]
    1678:	ldr	r3, [pc, #200]	; 1748 <pcap_daq_set_filter+0x284>
    167c:	add	r3, pc, r3
    1680:	ldr	r2, [pc, #196]	; 174c <pcap_daq_set_filter+0x288>
    1684:	add	r2, pc, r2
    1688:	mov	r1, #256	; 0x100
    168c:	mov	r0, r4
    1690:	bl	9e4 <snprintf@plt>
    1694:	mvn	r3, #0
    1698:	b	1724 <pcap_daq_set_filter+0x260>
    169c:	sub	r3, fp, #28
    16a0:	mov	r0, r3
    16a4:	bl	a20 <pcap_freecode@plt>
    16a8:	ldr	r0, [fp, #-20]	; 0xffffffec
    16ac:	bl	960 <pcap_close@plt>
    16b0:	ldr	r3, [fp, #-16]
    16b4:	ldr	r3, [r3, #8]
    16b8:	cmp	r3, #0
    16bc:	beq	16d0 <pcap_daq_set_filter+0x20c>
    16c0:	ldr	r3, [fp, #-16]
    16c4:	ldr	r3, [r3, #8]
    16c8:	mov	r0, r3
    16cc:	bl	924 <free@plt>
    16d0:	ldr	r0, [fp, #-36]	; 0xffffffdc
    16d4:	bl	948 <strdup@plt>
    16d8:	mov	r3, r0
    16dc:	mov	r2, r3
    16e0:	ldr	r3, [fp, #-16]
    16e4:	str	r2, [r3, #8]
    16e8:	ldr	r3, [fp, #-16]
    16ec:	ldr	r3, [r3, #8]
    16f0:	cmp	r3, #0
    16f4:	bne	1720 <pcap_daq_set_filter+0x25c>
    16f8:	ldr	r3, [fp, #-16]
    16fc:	add	r0, r3, #20
    1700:	ldr	r3, [pc, #72]	; 1750 <pcap_daq_set_filter+0x28c>
    1704:	add	r3, pc, r3
    1708:	ldr	r2, [pc, #68]	; 1754 <pcap_daq_set_filter+0x290>
    170c:	add	r2, pc, r2
    1710:	mov	r1, #256	; 0x100
    1714:	bl	9e4 <snprintf@plt>
    1718:	mvn	r3, #1
    171c:	b	1724 <pcap_daq_set_filter+0x260>
    1720:	mov	r3, #0
    1724:	mov	r0, r3
    1728:	sub	sp, fp, #8
    172c:	pop	{r4, fp, pc}
    1730:	.word	0x00000e80
    1734:	.word	0x00000dbc
    1738:	.word	0x00000e0c
    173c:	.word	0x00000d60
    1740:	.word	0x00000dac
    1744:	.word	0x00000d18
    1748:	.word	0x00000d48
    174c:	.word	0x00000c84
    1750:	.word	0x00000cc0
    1754:	.word	0x00000c58

00001758 <pcap_daq_start>:
    1758:	push	{fp, lr}
    175c:	add	fp, sp, #4
    1760:	sub	sp, sp, #16
    1764:	str	r0, [fp, #-16]
    1768:	ldr	r3, [fp, #-16]
    176c:	str	r3, [fp, #-8]
    1770:	ldr	r0, [fp, #-8]
    1774:	bl	d5c <pcap_daq_open>
    1778:	mov	r3, r0
    177c:	cmp	r3, #0
    1780:	beq	178c <pcap_daq_start+0x34>
    1784:	mvn	r3, #0
    1788:	b	17f8 <pcap_daq_start+0xa0>
    178c:	ldr	r0, [fp, #-16]
    1790:	bl	1d14 <pcap_daq_reset_stats>
    1794:	ldr	r3, [fp, #-8]
    1798:	ldr	r3, [r3, #8]
    179c:	cmp	r3, #0
    17a0:	beq	17e8 <pcap_daq_start+0x90>
    17a4:	ldr	r3, [fp, #-8]
    17a8:	ldr	r3, [r3, #8]
    17ac:	mov	r1, r3
    17b0:	ldr	r0, [fp, #-16]
    17b4:	bl	14c4 <pcap_daq_set_filter>
    17b8:	mov	r3, r0
    17bc:	cmp	r3, #0
    17c0:	beq	17cc <pcap_daq_start+0x74>
    17c4:	mvn	r3, #0
    17c8:	b	17f8 <pcap_daq_start+0xa0>
    17cc:	ldr	r3, [fp, #-8]
    17d0:	ldr	r3, [r3, #8]
    17d4:	mov	r0, r3
    17d8:	bl	924 <free@plt>
    17dc:	ldr	r3, [fp, #-8]
    17e0:	mov	r2, #0
    17e4:	str	r2, [r3, #8]
    17e8:	ldr	r3, [fp, #-8]
    17ec:	mov	r2, #2
    17f0:	str	r2, [r3, #440]	; 0x1b8
    17f4:	mov	r3, #0
    17f8:	mov	r0, r3
    17fc:	sub	sp, fp, #4
    1800:	pop	{fp, pc}

00001804 <pcap_process_loop>:
    1804:	push	{fp, lr}
    1808:	add	fp, sp, #4
    180c:	sub	sp, sp, #80	; 0x50
    1810:	str	r0, [fp, #-72]	; 0xffffffb8
    1814:	str	r1, [fp, #-76]	; 0xffffffb4
    1818:	str	r2, [fp, #-80]	; 0xffffffb0
    181c:	ldr	r3, [fp, #-72]	; 0xffffffb8
    1820:	str	r3, [fp, #-12]
    1824:	ldr	r3, [fp, #-76]	; 0xffffffb4
    1828:	ldr	r3, [r3, #8]
    182c:	str	r3, [fp, #-56]	; 0xffffffc8
    1830:	ldr	r3, [fp, #-76]	; 0xffffffb4
    1834:	ldr	r3, [r3, #12]
    1838:	str	r3, [fp, #-52]	; 0xffffffcc
    183c:	ldr	r2, [fp, #-76]	; 0xffffffb4
    1840:	sub	r3, fp, #64	; 0x40
    1844:	ldm	r2, {r0, r1}
    1848:	stm	r3, {r0, r1}
    184c:	mvn	r3, #0
    1850:	str	r3, [fp, #-48]	; 0xffffffd0
    1854:	mvn	r3, #0
    1858:	str	r3, [fp, #-44]	; 0xffffffd4
    185c:	mvn	r3, #0
    1860:	str	r3, [fp, #-40]	; 0xffffffd8
    1864:	mvn	r3, #0
    1868:	str	r3, [fp, #-36]	; 0xffffffdc
    186c:	mov	r3, #0
    1870:	str	r3, [fp, #-32]	; 0xffffffe0
    1874:	mov	r3, #0
    1878:	strh	r3, [fp, #-16]
    187c:	ldr	r3, [fp, #-12]
    1880:	ldr	r3, [r3, #288]	; 0x120
    1884:	add	r2, r3, #1
    1888:	ldr	r3, [fp, #-12]
    188c:	str	r2, [r3, #288]	; 0x120
    1890:	ldr	r3, [fp, #-12]
    1894:	add	r3, r3, #336	; 0x150
    1898:	ldrd	r2, [r3, #-8]
    189c:	adds	r2, r2, #1
    18a0:	adc	r3, r3, #0
    18a4:	ldr	r1, [fp, #-12]
    18a8:	add	r1, r1, #336	; 0x150
    18ac:	strd	r2, [r1, #-8]
    18b0:	ldr	r3, [fp, #-12]
    18b4:	ldr	r3, [r3, #296]	; 0x128
    18b8:	ldr	r2, [fp, #-12]
    18bc:	ldr	r0, [r2, #300]	; 0x12c
    18c0:	sub	r1, fp, #64	; 0x40
    18c4:	ldr	r2, [fp, #-80]	; 0xffffffb0
    18c8:	blx	r3
    18cc:	str	r0, [fp, #-8]
    18d0:	ldr	r3, [fp, #-8]
    18d4:	cmp	r3, #6
    18d8:	bls	18e4 <pcap_process_loop+0xe0>
    18dc:	mov	r3, #0
    18e0:	str	r3, [fp, #-8]
    18e4:	ldr	r2, [fp, #-12]
    18e8:	ldr	r3, [fp, #-8]
    18ec:	add	r3, r3, #44	; 0x2c
    18f0:	lsl	r3, r3, #3
    18f4:	add	r3, r2, r3
    18f8:	ldrd	r2, [r3]
    18fc:	adds	r2, r2, #1
    1900:	adc	r3, r3, #0
    1904:	ldr	r0, [fp, #-12]
    1908:	ldr	r1, [fp, #-8]
    190c:	add	r1, r1, #44	; 0x2c
    1910:	lsl	r1, r1, #3
    1914:	add	r1, r0, r1
    1918:	strd	r2, [r1]
    191c:	nop			; (mov r0, r0)
    1920:	sub	sp, fp, #4
    1924:	pop	{fp, pc}

00001928 <pcap_daq_acquire>:
    1928:	push	{r4, fp, lr}
    192c:	add	fp, sp, #8
    1930:	sub	sp, sp, #28
    1934:	str	r0, [fp, #-24]	; 0xffffffe8
    1938:	str	r1, [fp, #-28]	; 0xffffffe4
    193c:	str	r2, [fp, #-32]	; 0xffffffe0
    1940:	str	r3, [fp, #-36]	; 0xffffffdc
    1944:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1948:	str	r3, [fp, #-16]
    194c:	ldr	r3, [fp, #-16]
    1950:	ldr	r2, [fp, #-32]	; 0xffffffe0
    1954:	str	r2, [r3, #296]	; 0x128
    1958:	ldr	r3, [fp, #-16]
    195c:	ldr	r2, [fp, #4]
    1960:	str	r2, [r3, #300]	; 0x12c
    1964:	ldr	r3, [fp, #-16]
    1968:	mov	r2, #0
    196c:	str	r2, [r3, #288]	; 0x120
    1970:	b	1a34 <pcap_daq_acquire+0x10c>
    1974:	ldr	r3, [fp, #-16]
    1978:	ldr	r0, [r3, #16]
    197c:	ldr	r3, [fp, #-28]	; 0xffffffe4
    1980:	cmp	r3, #0
    1984:	ble	199c <pcap_daq_acquire+0x74>
    1988:	ldr	r3, [fp, #-16]
    198c:	ldr	r3, [r3, #288]	; 0x120
    1990:	ldr	r2, [fp, #-28]	; 0xffffffe4
    1994:	sub	r1, r2, r3
    1998:	b	19a0 <pcap_daq_acquire+0x78>
    199c:	mvn	r1, #0
    19a0:	ldr	r3, [fp, #-16]
    19a4:	ldr	r2, [pc, #184]	; 1a64 <pcap_daq_acquire+0x13c>
    19a8:	add	r2, pc, r2
    19ac:	bl	a68 <pcap_dispatch@plt>
    19b0:	str	r0, [fp, #-20]	; 0xffffffec
    19b4:	ldr	r3, [fp, #-20]	; 0xffffffec
    19b8:	cmn	r3, #1
    19bc:	bne	19f8 <pcap_daq_acquire+0xd0>
    19c0:	ldr	r3, [fp, #-16]
    19c4:	add	r4, r3, #20
    19c8:	ldr	r3, [fp, #-16]
    19cc:	ldr	r3, [r3, #16]
    19d0:	mov	r0, r3
    19d4:	bl	9a8 <pcap_geterr@plt>
    19d8:	mov	r3, r0
    19dc:	ldr	r2, [pc, #132]	; 1a68 <pcap_daq_acquire+0x140>
    19e0:	add	r2, pc, r2
    19e4:	mov	r1, #256	; 0x100
    19e8:	mov	r0, r4
    19ec:	bl	9e4 <snprintf@plt>
    19f0:	ldr	r3, [fp, #-20]	; 0xffffffec
    19f4:	b	1a58 <pcap_daq_acquire+0x130>
    19f8:	ldr	r3, [fp, #-16]
    19fc:	ldr	r3, [r3, #4]
    1a00:	cmp	r3, #0
    1a04:	beq	1a1c <pcap_daq_acquire+0xf4>
    1a08:	ldr	r3, [fp, #-20]	; 0xffffffec
    1a0c:	cmp	r3, #0
    1a10:	bne	1a1c <pcap_daq_acquire+0xf4>
    1a14:	mvn	r3, #41	; 0x29
    1a18:	b	1a58 <pcap_daq_acquire+0x130>
    1a1c:	ldr	r3, [fp, #-20]	; 0xffffffec
    1a20:	cmn	r3, #2
    1a24:	beq	1a54 <pcap_daq_acquire+0x12c>
    1a28:	ldr	r3, [fp, #-20]	; 0xffffffec
    1a2c:	cmp	r3, #0
    1a30:	beq	1a54 <pcap_daq_acquire+0x12c>
    1a34:	ldr	r3, [fp, #-16]
    1a38:	ldr	r2, [r3, #288]	; 0x120
    1a3c:	ldr	r3, [fp, #-28]	; 0xffffffe4
    1a40:	cmp	r2, r3
    1a44:	blt	1974 <pcap_daq_acquire+0x4c>
    1a48:	ldr	r3, [fp, #-28]	; 0xffffffe4
    1a4c:	cmp	r3, #0
    1a50:	ble	1974 <pcap_daq_acquire+0x4c>
    1a54:	mov	r3, #0
    1a58:	mov	r0, r3
    1a5c:	sub	sp, fp, #8
    1a60:	pop	{r4, fp, pc}
    1a64:	.word	0xfffffe54
    1a68:	.word	0x0000086c

00001a6c <pcap_daq_inject>:
    1a6c:	push	{r4, fp, lr}
    1a70:	add	fp, sp, #8
    1a74:	sub	sp, sp, #28
    1a78:	str	r0, [fp, #-24]	; 0xffffffe8
    1a7c:	str	r1, [fp, #-28]	; 0xffffffe4
    1a80:	str	r2, [fp, #-32]	; 0xffffffe0
    1a84:	str	r3, [fp, #-36]	; 0xffffffdc
    1a88:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1a8c:	str	r3, [fp, #-16]
    1a90:	ldr	r3, [fp, #-16]
    1a94:	ldr	r3, [r3, #16]
    1a98:	ldr	r2, [fp, #-36]	; 0xffffffdc
    1a9c:	ldr	r1, [fp, #-32]	; 0xffffffe0
    1aa0:	mov	r0, r3
    1aa4:	bl	9fc <pcap_inject@plt>
    1aa8:	mov	r3, r0
    1aac:	cmp	r3, #0
    1ab0:	bge	1aec <pcap_daq_inject+0x80>
    1ab4:	ldr	r3, [fp, #-16]
    1ab8:	add	r4, r3, #20
    1abc:	ldr	r3, [fp, #-16]
    1ac0:	ldr	r3, [r3, #16]
    1ac4:	mov	r0, r3
    1ac8:	bl	9a8 <pcap_geterr@plt>
    1acc:	mov	r3, r0
    1ad0:	ldr	r2, [pc, #68]	; 1b1c <pcap_daq_inject+0xb0>
    1ad4:	add	r2, pc, r2
    1ad8:	mov	r1, #256	; 0x100
    1adc:	mov	r0, r4
    1ae0:	bl	9e4 <snprintf@plt>
    1ae4:	mvn	r3, #0
    1ae8:	b	1b10 <pcap_daq_inject+0xa4>
    1aec:	ldr	r3, [fp, #-16]
    1af0:	add	r3, r3, #352	; 0x160
    1af4:	ldrd	r2, [r3, #-8]
    1af8:	adds	r2, r2, #1
    1afc:	adc	r3, r3, #0
    1b00:	ldr	r1, [fp, #-16]
    1b04:	add	r1, r1, #352	; 0x160
    1b08:	strd	r2, [r1, #-8]
    1b0c:	mov	r3, #0
    1b10:	mov	r0, r3
    1b14:	sub	sp, fp, #8
    1b18:	pop	{r4, fp, pc}
    1b1c:	.word	0x00000778

00001b20 <pcap_daq_breakloop>:
    1b20:	push	{fp, lr}
    1b24:	add	fp, sp, #4
    1b28:	sub	sp, sp, #16
    1b2c:	str	r0, [fp, #-16]
    1b30:	ldr	r3, [fp, #-16]
    1b34:	str	r3, [fp, #-8]
    1b38:	ldr	r3, [fp, #-8]
    1b3c:	ldr	r3, [r3, #16]
    1b40:	cmp	r3, #0
    1b44:	bne	1b50 <pcap_daq_breakloop+0x30>
    1b48:	mvn	r3, #0
    1b4c:	b	1b64 <pcap_daq_breakloop+0x44>
    1b50:	ldr	r3, [fp, #-8]
    1b54:	ldr	r3, [r3, #16]
    1b58:	mov	r0, r3
    1b5c:	bl	990 <pcap_breakloop@plt>
    1b60:	mov	r3, #0
    1b64:	mov	r0, r3
    1b68:	sub	sp, fp, #4
    1b6c:	pop	{fp, pc}

00001b70 <pcap_daq_stop>:
    1b70:	push	{fp, lr}
    1b74:	add	fp, sp, #4
    1b78:	sub	sp, sp, #16
    1b7c:	str	r0, [fp, #-16]
    1b80:	ldr	r3, [fp, #-16]
    1b84:	str	r3, [fp, #-8]
    1b88:	ldr	r3, [fp, #-8]
    1b8c:	ldr	r3, [r3, #16]
    1b90:	cmp	r3, #0
    1b94:	beq	1bbc <pcap_daq_stop+0x4c>
    1b98:	ldr	r0, [fp, #-8]
    1b9c:	bl	104c <update_hw_stats>
    1ba0:	ldr	r3, [fp, #-8]
    1ba4:	ldr	r3, [r3, #16]
    1ba8:	mov	r0, r3
    1bac:	bl	960 <pcap_close@plt>
    1bb0:	ldr	r3, [fp, #-8]
    1bb4:	mov	r2, #0
    1bb8:	str	r2, [r3, #16]
    1bbc:	ldr	r3, [fp, #-8]
    1bc0:	mov	r2, #3
    1bc4:	str	r2, [r3, #440]	; 0x1b8
    1bc8:	mov	r3, #0
    1bcc:	mov	r0, r3
    1bd0:	sub	sp, fp, #4
    1bd4:	pop	{fp, pc}

00001bd8 <pcap_daq_shutdown>:
    1bd8:	push	{fp, lr}
    1bdc:	add	fp, sp, #4
    1be0:	sub	sp, sp, #16
    1be4:	str	r0, [fp, #-16]
    1be8:	ldr	r3, [fp, #-16]
    1bec:	str	r3, [fp, #-8]
    1bf0:	ldr	r3, [fp, #-8]
    1bf4:	ldr	r3, [r3, #16]
    1bf8:	cmp	r3, #0
    1bfc:	beq	1c10 <pcap_daq_shutdown+0x38>
    1c00:	ldr	r3, [fp, #-8]
    1c04:	ldr	r3, [r3, #16]
    1c08:	mov	r0, r3
    1c0c:	bl	960 <pcap_close@plt>
    1c10:	ldr	r3, [fp, #-8]
    1c14:	ldr	r3, [r3]
    1c18:	cmp	r3, #0
    1c1c:	beq	1c30 <pcap_daq_shutdown+0x58>
    1c20:	ldr	r3, [fp, #-8]
    1c24:	ldr	r3, [r3]
    1c28:	mov	r0, r3
    1c2c:	bl	924 <free@plt>
    1c30:	ldr	r3, [fp, #-8]
    1c34:	ldr	r3, [r3, #4]
    1c38:	cmp	r3, #0
    1c3c:	beq	1c50 <pcap_daq_shutdown+0x78>
    1c40:	ldr	r3, [fp, #-8]
    1c44:	ldr	r3, [r3, #4]
    1c48:	mov	r0, r3
    1c4c:	bl	924 <free@plt>
    1c50:	ldr	r3, [fp, #-8]
    1c54:	ldr	r3, [r3, #8]
    1c58:	cmp	r3, #0
    1c5c:	beq	1c70 <pcap_daq_shutdown+0x98>
    1c60:	ldr	r3, [fp, #-8]
    1c64:	ldr	r3, [r3, #8]
    1c68:	mov	r0, r3
    1c6c:	bl	924 <free@plt>
    1c70:	ldr	r0, [fp, #-8]
    1c74:	bl	924 <free@plt>
    1c78:	nop			; (mov r0, r0)
    1c7c:	sub	sp, fp, #4
    1c80:	pop	{fp, pc}

00001c84 <pcap_daq_check_status>:
    1c84:	push	{fp}		; (str fp, [sp, #-4]!)
    1c88:	add	fp, sp, #0
    1c8c:	sub	sp, sp, #20
    1c90:	str	r0, [fp, #-16]
    1c94:	ldr	r3, [fp, #-16]
    1c98:	str	r3, [fp, #-8]
    1c9c:	ldr	r3, [fp, #-8]
    1ca0:	ldr	r3, [r3, #440]	; 0x1b8
    1ca4:	mov	r0, r3
    1ca8:	add	sp, fp, #0
    1cac:	pop	{fp}		; (ldr fp, [sp], #4)
    1cb0:	bx	lr

00001cb4 <pcap_daq_get_stats>:
    1cb4:	push	{fp, lr}
    1cb8:	add	fp, sp, #4
    1cbc:	sub	sp, sp, #16
    1cc0:	str	r0, [fp, #-16]
    1cc4:	str	r1, [fp, #-20]	; 0xffffffec
    1cc8:	ldr	r3, [fp, #-16]
    1ccc:	str	r3, [fp, #-8]
    1cd0:	ldr	r0, [fp, #-8]
    1cd4:	bl	104c <update_hw_stats>
    1cd8:	mov	r3, r0
    1cdc:	cmp	r3, #0
    1ce0:	beq	1cec <pcap_daq_get_stats+0x38>
    1ce4:	mvn	r3, #0
    1ce8:	b	1d08 <pcap_daq_get_stats+0x54>
    1cec:	ldr	r3, [fp, #-8]
    1cf0:	add	r3, r3, #312	; 0x138
    1cf4:	mov	r2, #96	; 0x60
    1cf8:	mov	r1, r3
    1cfc:	ldr	r0, [fp, #-20]	; 0xffffffec
    1d00:	bl	930 <memcpy@plt>
    1d04:	mov	r3, #0
    1d08:	mov	r0, r3
    1d0c:	sub	sp, fp, #4
    1d10:	pop	{fp, pc}

00001d14 <pcap_daq_reset_stats>:
    1d14:	push	{fp, lr}
    1d18:	add	fp, sp, #4
    1d1c:	sub	sp, sp, #24
    1d20:	str	r0, [fp, #-24]	; 0xffffffe8
    1d24:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1d28:	str	r3, [fp, #-8]
    1d2c:	ldr	r3, [fp, #-8]
    1d30:	add	r3, r3, #312	; 0x138
    1d34:	mov	r2, #96	; 0x60
    1d38:	mov	r1, #0
    1d3c:	mov	r0, r3
    1d40:	bl	9f0 <memset@plt>
    1d44:	ldr	r3, [fp, #-8]
    1d48:	ldr	r3, [r3, #16]
    1d4c:	cmp	r3, #0
    1d50:	beq	1de8 <pcap_daq_reset_stats+0xd4>
    1d54:	sub	r3, fp, #20
    1d58:	mov	r2, #12
    1d5c:	mov	r1, #0
    1d60:	mov	r0, r3
    1d64:	bl	9f0 <memset@plt>
    1d68:	ldr	r3, [fp, #-8]
    1d6c:	ldr	r3, [r3, #16]
    1d70:	cmp	r3, #0
    1d74:	beq	1dec <pcap_daq_reset_stats+0xd8>
    1d78:	ldr	r3, [fp, #-8]
    1d7c:	ldr	r3, [r3]
    1d80:	cmp	r3, #0
    1d84:	beq	1dec <pcap_daq_reset_stats+0xd8>
    1d88:	ldr	r3, [fp, #-8]
    1d8c:	ldr	r3, [r3, #16]
    1d90:	sub	r2, fp, #20
    1d94:	mov	r1, r2
    1d98:	mov	r0, r3
    1d9c:	bl	96c <pcap_stats@plt>
    1da0:	mov	r3, r0
    1da4:	cmp	r3, #0
    1da8:	bne	1dec <pcap_daq_reset_stats+0xd8>
    1dac:	ldr	r2, [fp, #-20]	; 0xffffffec
    1db0:	ldr	r3, [fp, #-8]
    1db4:	str	r2, [r3, #432]	; 0x1b0
    1db8:	ldr	r3, [fp, #-8]
    1dbc:	ldr	r2, [r3, #432]	; 0x1b0
    1dc0:	ldr	r3, [fp, #-8]
    1dc4:	str	r2, [r3, #408]	; 0x198
    1dc8:	ldr	r2, [fp, #-16]
    1dcc:	ldr	r3, [fp, #-8]
    1dd0:	str	r2, [r3, #436]	; 0x1b4
    1dd4:	ldr	r3, [fp, #-8]
    1dd8:	ldr	r2, [r3, #436]	; 0x1b4
    1ddc:	ldr	r3, [fp, #-8]
    1de0:	str	r2, [r3, #412]	; 0x19c
    1de4:	b	1dec <pcap_daq_reset_stats+0xd8>
    1de8:	nop			; (mov r0, r0)
    1dec:	sub	sp, fp, #4
    1df0:	pop	{fp, pc}

00001df4 <pcap_daq_get_snaplen>:
    1df4:	push	{fp, lr}
    1df8:	add	fp, sp, #4
    1dfc:	sub	sp, sp, #16
    1e00:	str	r0, [fp, #-16]
    1e04:	ldr	r3, [fp, #-16]
    1e08:	str	r3, [fp, #-8]
    1e0c:	ldr	r3, [fp, #-8]
    1e10:	ldr	r3, [r3, #16]
    1e14:	cmp	r3, #0
    1e18:	beq	1e34 <pcap_daq_get_snaplen+0x40>
    1e1c:	ldr	r3, [fp, #-8]
    1e20:	ldr	r3, [r3, #16]
    1e24:	mov	r0, r3
    1e28:	bl	a14 <pcap_snapshot@plt>
    1e2c:	mov	r3, r0
    1e30:	b	1e3c <pcap_daq_get_snaplen+0x48>
    1e34:	ldr	r3, [fp, #-8]
    1e38:	ldr	r3, [r3, #12]
    1e3c:	mov	r0, r3
    1e40:	sub	sp, fp, #4
    1e44:	pop	{fp, pc}

00001e48 <pcap_daq_get_capabilities>:
    1e48:	push	{fp}		; (str fp, [sp, #-4]!)
    1e4c:	add	fp, sp, #0
    1e50:	sub	sp, sp, #20
    1e54:	str	r0, [fp, #-16]
    1e58:	ldr	r3, [fp, #-16]
    1e5c:	str	r3, [fp, #-12]
    1e60:	mov	r3, #128	; 0x80
    1e64:	str	r3, [fp, #-8]
    1e68:	ldr	r3, [fp, #-12]
    1e6c:	ldr	r3, [r3]
    1e70:	cmp	r3, #0
    1e74:	beq	1e84 <pcap_daq_get_capabilities+0x3c>
    1e78:	ldr	r3, [fp, #-8]
    1e7c:	orr	r3, r3, #4
    1e80:	str	r3, [fp, #-8]
    1e84:	ldr	r3, [fp, #-8]
    1e88:	orr	r3, r3, #64	; 0x40
    1e8c:	str	r3, [fp, #-8]
    1e90:	ldr	r3, [fp, #-12]
    1e94:	ldr	r3, [r3, #292]	; 0x124
    1e98:	cmp	r3, #0
    1e9c:	bne	1eac <pcap_daq_get_capabilities+0x64>
    1ea0:	ldr	r3, [fp, #-8]
    1ea4:	orr	r3, r3, #32
    1ea8:	str	r3, [fp, #-8]
    1eac:	ldr	r3, [fp, #-8]
    1eb0:	mov	r0, r3
    1eb4:	add	sp, fp, #0
    1eb8:	pop	{fp}		; (ldr fp, [sp], #4)
    1ebc:	bx	lr

00001ec0 <pcap_daq_get_datalink_type>:
    1ec0:	push	{fp, lr}
    1ec4:	add	fp, sp, #4
    1ec8:	sub	sp, sp, #16
    1ecc:	str	r0, [fp, #-16]
    1ed0:	ldr	r3, [fp, #-16]
    1ed4:	str	r3, [fp, #-8]
    1ed8:	ldr	r3, [fp, #-8]
    1edc:	ldr	r3, [r3, #16]
    1ee0:	cmp	r3, #0
    1ee4:	beq	1f00 <pcap_daq_get_datalink_type+0x40>
    1ee8:	ldr	r3, [fp, #-8]
    1eec:	ldr	r3, [r3, #16]
    1ef0:	mov	r0, r3
    1ef4:	bl	a44 <pcap_datalink@plt>
    1ef8:	mov	r3, r0
    1efc:	b	1f04 <pcap_daq_get_datalink_type+0x44>
    1f00:	mov	r3, #0
    1f04:	mov	r0, r3
    1f08:	sub	sp, fp, #4
    1f0c:	pop	{fp, pc}

00001f10 <pcap_daq_get_errbuf>:
    1f10:	push	{fp}		; (str fp, [sp, #-4]!)
    1f14:	add	fp, sp, #0
    1f18:	sub	sp, sp, #20
    1f1c:	str	r0, [fp, #-16]
    1f20:	ldr	r3, [fp, #-16]
    1f24:	str	r3, [fp, #-8]
    1f28:	ldr	r3, [fp, #-8]
    1f2c:	add	r3, r3, #20
    1f30:	mov	r0, r3
    1f34:	add	sp, fp, #0
    1f38:	pop	{fp}		; (ldr fp, [sp], #4)
    1f3c:	bx	lr

00001f40 <pcap_daq_set_errbuf>:
    1f40:	push	{fp, lr}
    1f44:	add	fp, sp, #4
    1f48:	sub	sp, sp, #16
    1f4c:	str	r0, [fp, #-16]
    1f50:	str	r1, [fp, #-20]	; 0xffffffec
    1f54:	ldr	r3, [fp, #-16]
    1f58:	str	r3, [fp, #-8]
    1f5c:	ldr	r3, [fp, #-20]	; 0xffffffec
    1f60:	cmp	r3, #0
    1f64:	beq	1f88 <pcap_daq_set_errbuf+0x48>
    1f68:	ldr	r3, [fp, #-8]
    1f6c:	add	r0, r3, #20
    1f70:	ldr	r3, [fp, #-20]	; 0xffffffec
    1f74:	ldr	r2, [pc, #24]	; 1f94 <pcap_daq_set_errbuf+0x54>
    1f78:	add	r2, pc, r2
    1f7c:	mov	r1, #256	; 0x100
    1f80:	bl	9e4 <snprintf@plt>
    1f84:	b	1f8c <pcap_daq_set_errbuf+0x4c>
    1f88:	nop			; (mov r0, r0)
    1f8c:	sub	sp, fp, #4
    1f90:	pop	{fp, pc}
    1f94:	.word	0x000002d4

00001f98 <pcap_daq_get_device_index>:
    1f98:	push	{fp}		; (str fp, [sp, #-4]!)
    1f9c:	add	fp, sp, #0
    1fa0:	sub	sp, sp, #12
    1fa4:	str	r0, [fp, #-8]
    1fa8:	str	r1, [fp, #-12]
    1fac:	mvn	r3, #3
    1fb0:	mov	r0, r3
    1fb4:	add	sp, fp, #0
    1fb8:	pop	{fp}		; (ldr fp, [sp], #4)
    1fbc:	bx	lr

00001fc0 <__divsi3>:
    1fc0:	cmp	r1, #0
    1fc4:	beq	21d0 <.divsi3_skip_div0_test+0x208>

00001fc8 <.divsi3_skip_div0_test>:
    1fc8:	eor	ip, r0, r1
    1fcc:	rsbmi	r1, r1, #0
    1fd0:	subs	r2, r1, #1
    1fd4:	beq	219c <.divsi3_skip_div0_test+0x1d4>
    1fd8:	movs	r3, r0
    1fdc:	rsbmi	r3, r0, #0
    1fe0:	cmp	r3, r1
    1fe4:	bls	21a8 <.divsi3_skip_div0_test+0x1e0>
    1fe8:	tst	r1, r2
    1fec:	beq	21b8 <.divsi3_skip_div0_test+0x1f0>
    1ff0:	clz	r2, r3
    1ff4:	clz	r0, r1
    1ff8:	sub	r2, r0, r2
    1ffc:	rsbs	r2, r2, #31
    2000:	addne	r2, r2, r2, lsl #1
    2004:	mov	r0, #0
    2008:	addne	pc, pc, r2, lsl #2
    200c:	nop			; (mov r0, r0)
    2010:	cmp	r3, r1, lsl #31
    2014:	adc	r0, r0, r0
    2018:	subcs	r3, r3, r1, lsl #31
    201c:	cmp	r3, r1, lsl #30
    2020:	adc	r0, r0, r0
    2024:	subcs	r3, r3, r1, lsl #30
    2028:	cmp	r3, r1, lsl #29
    202c:	adc	r0, r0, r0
    2030:	subcs	r3, r3, r1, lsl #29
    2034:	cmp	r3, r1, lsl #28
    2038:	adc	r0, r0, r0
    203c:	subcs	r3, r3, r1, lsl #28
    2040:	cmp	r3, r1, lsl #27
    2044:	adc	r0, r0, r0
    2048:	subcs	r3, r3, r1, lsl #27
    204c:	cmp	r3, r1, lsl #26
    2050:	adc	r0, r0, r0
    2054:	subcs	r3, r3, r1, lsl #26
    2058:	cmp	r3, r1, lsl #25
    205c:	adc	r0, r0, r0
    2060:	subcs	r3, r3, r1, lsl #25
    2064:	cmp	r3, r1, lsl #24
    2068:	adc	r0, r0, r0
    206c:	subcs	r3, r3, r1, lsl #24
    2070:	cmp	r3, r1, lsl #23
    2074:	adc	r0, r0, r0
    2078:	subcs	r3, r3, r1, lsl #23
    207c:	cmp	r3, r1, lsl #22
    2080:	adc	r0, r0, r0
    2084:	subcs	r3, r3, r1, lsl #22
    2088:	cmp	r3, r1, lsl #21
    208c:	adc	r0, r0, r0
    2090:	subcs	r3, r3, r1, lsl #21
    2094:	cmp	r3, r1, lsl #20
    2098:	adc	r0, r0, r0
    209c:	subcs	r3, r3, r1, lsl #20
    20a0:	cmp	r3, r1, lsl #19
    20a4:	adc	r0, r0, r0
    20a8:	subcs	r3, r3, r1, lsl #19
    20ac:	cmp	r3, r1, lsl #18
    20b0:	adc	r0, r0, r0
    20b4:	subcs	r3, r3, r1, lsl #18
    20b8:	cmp	r3, r1, lsl #17
    20bc:	adc	r0, r0, r0
    20c0:	subcs	r3, r3, r1, lsl #17
    20c4:	cmp	r3, r1, lsl #16
    20c8:	adc	r0, r0, r0
    20cc:	subcs	r3, r3, r1, lsl #16
    20d0:	cmp	r3, r1, lsl #15
    20d4:	adc	r0, r0, r0
    20d8:	subcs	r3, r3, r1, lsl #15
    20dc:	cmp	r3, r1, lsl #14
    20e0:	adc	r0, r0, r0
    20e4:	subcs	r3, r3, r1, lsl #14
    20e8:	cmp	r3, r1, lsl #13
    20ec:	adc	r0, r0, r0
    20f0:	subcs	r3, r3, r1, lsl #13
    20f4:	cmp	r3, r1, lsl #12
    20f8:	adc	r0, r0, r0
    20fc:	subcs	r3, r3, r1, lsl #12
    2100:	cmp	r3, r1, lsl #11
    2104:	adc	r0, r0, r0
    2108:	subcs	r3, r3, r1, lsl #11
    210c:	cmp	r3, r1, lsl #10
    2110:	adc	r0, r0, r0
    2114:	subcs	r3, r3, r1, lsl #10
    2118:	cmp	r3, r1, lsl #9
    211c:	adc	r0, r0, r0
    2120:	subcs	r3, r3, r1, lsl #9
    2124:	cmp	r3, r1, lsl #8
    2128:	adc	r0, r0, r0
    212c:	subcs	r3, r3, r1, lsl #8
    2130:	cmp	r3, r1, lsl #7
    2134:	adc	r0, r0, r0
    2138:	subcs	r3, r3, r1, lsl #7
    213c:	cmp	r3, r1, lsl #6
    2140:	adc	r0, r0, r0
    2144:	subcs	r3, r3, r1, lsl #6
    2148:	cmp	r3, r1, lsl #5
    214c:	adc	r0, r0, r0
    2150:	subcs	r3, r3, r1, lsl #5
    2154:	cmp	r3, r1, lsl #4
    2158:	adc	r0, r0, r0
    215c:	subcs	r3, r3, r1, lsl #4
    2160:	cmp	r3, r1, lsl #3
    2164:	adc	r0, r0, r0
    2168:	subcs	r3, r3, r1, lsl #3
    216c:	cmp	r3, r1, lsl #2
    2170:	adc	r0, r0, r0
    2174:	subcs	r3, r3, r1, lsl #2
    2178:	cmp	r3, r1, lsl #1
    217c:	adc	r0, r0, r0
    2180:	subcs	r3, r3, r1, lsl #1
    2184:	cmp	r3, r1
    2188:	adc	r0, r0, r0
    218c:	subcs	r3, r3, r1
    2190:	cmp	ip, #0
    2194:	rsbmi	r0, r0, #0
    2198:	bx	lr
    219c:	teq	ip, r0
    21a0:	rsbmi	r0, r0, #0
    21a4:	bx	lr
    21a8:	movcc	r0, #0
    21ac:	asreq	r0, ip, #31
    21b0:	orreq	r0, r0, #1
    21b4:	bx	lr
    21b8:	clz	r2, r1
    21bc:	rsb	r2, r2, #31
    21c0:	cmp	ip, #0
    21c4:	lsr	r0, r3, r2
    21c8:	rsbmi	r0, r0, #0
    21cc:	bx	lr
    21d0:	cmp	r0, #0
    21d4:	mvngt	r0, #-2147483648	; 0x80000000
    21d8:	movlt	r0, #-2147483648	; 0x80000000
    21dc:	b	2200 <__aeabi_idiv0>

000021e0 <__aeabi_idivmod>:
    21e0:	cmp	r1, #0
    21e4:	beq	21d0 <.divsi3_skip_div0_test+0x208>
    21e8:	push	{r0, r1, lr}
    21ec:	bl	1fc8 <.divsi3_skip_div0_test>
    21f0:	pop	{r1, r2, lr}
    21f4:	mul	r3, r2, r0
    21f8:	sub	r1, r1, r3
    21fc:	bx	lr

00002200 <__aeabi_idiv0>:
    2200:	push	{r1, lr}
    2204:	mov	r0, #8
    2208:	bl	8d0 <raise@plt>
    220c:	pop	{r1, pc}

Disassembly of section .fini:

00002210 <_fini>:
    2210:	push	{r3, lr}
    2214:	pop	{r3, pc}
