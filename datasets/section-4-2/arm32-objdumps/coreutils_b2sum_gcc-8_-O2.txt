
../repos/coreutils/src/b2sum:     file format elf32-littlearm


Disassembly of section .init:

00010e90 <.init>:
   10e90:	push	{r3, lr}
   10e94:	bl	12584 <__assert_fail@plt+0x13f8>
   10e98:	pop	{r3, pc}

Disassembly of section .plt:

00010e9c <fdopen@plt-0x14>:
   10e9c:	push	{lr}		; (str lr, [sp, #-4]!)
   10ea0:	ldr	lr, [pc, #4]	; 10eac <fdopen@plt-0x4>
   10ea4:	add	lr, pc, lr
   10ea8:	ldr	pc, [lr, #8]!
   10eac:	andeq	sp, r1, r4, asr r1

00010eb0 <fdopen@plt>:
   10eb0:	add	ip, pc, #0, 12
   10eb4:	add	ip, ip, #118784	; 0x1d000
   10eb8:	ldr	pc, [ip, #340]!	; 0x154

00010ebc <calloc@plt>:
   10ebc:	add	ip, pc, #0, 12
   10ec0:	add	ip, ip, #118784	; 0x1d000
   10ec4:	ldr	pc, [ip, #332]!	; 0x14c

00010ec8 <fputs_unlocked@plt>:
   10ec8:	add	ip, pc, #0, 12
   10ecc:	add	ip, ip, #118784	; 0x1d000
   10ed0:	ldr	pc, [ip, #324]!	; 0x144

00010ed4 <raise@plt>:
   10ed4:	add	ip, pc, #0, 12
   10ed8:	add	ip, ip, #118784	; 0x1d000
   10edc:	ldr	pc, [ip, #316]!	; 0x13c

00010ee0 <__getdelim@plt>:
   10ee0:	add	ip, pc, #0, 12
   10ee4:	add	ip, ip, #118784	; 0x1d000
   10ee8:	ldr	pc, [ip, #308]!	; 0x134

00010eec <strcmp@plt>:
   10eec:	add	ip, pc, #0, 12
   10ef0:	add	ip, ip, #118784	; 0x1d000
   10ef4:	ldr	pc, [ip, #300]!	; 0x12c

00010ef8 <posix_fadvise64@plt>:
   10ef8:	add	ip, pc, #0, 12
   10efc:	add	ip, ip, #118784	; 0x1d000
   10f00:	ldr	pc, [ip, #292]!	; 0x124

00010f04 <fflush@plt>:
   10f04:	add	ip, pc, #0, 12
   10f08:	add	ip, ip, #118784	; 0x1d000
   10f0c:	ldr	pc, [ip, #284]!	; 0x11c

00010f10 <free@plt>:
   10f10:	add	ip, pc, #0, 12
   10f14:	add	ip, ip, #118784	; 0x1d000
   10f18:	ldr	pc, [ip, #276]!	; 0x114

00010f1c <ferror@plt>:
   10f1c:	add	ip, pc, #0, 12
   10f20:	add	ip, ip, #118784	; 0x1d000
   10f24:	ldr	pc, [ip, #268]!	; 0x10c

00010f28 <_exit@plt>:
   10f28:	add	ip, pc, #0, 12
   10f2c:	add	ip, ip, #118784	; 0x1d000
   10f30:	ldr	pc, [ip, #260]!	; 0x104

00010f34 <memcpy@plt>:
   10f34:	add	ip, pc, #0, 12
   10f38:	add	ip, ip, #118784	; 0x1d000
   10f3c:	ldr	pc, [ip, #252]!	; 0xfc

00010f40 <__strtoull_internal@plt>:
   10f40:	add	ip, pc, #0, 12
   10f44:	add	ip, ip, #118784	; 0x1d000
   10f48:	ldr	pc, [ip, #244]!	; 0xf4

00010f4c <mbsinit@plt>:
   10f4c:	add	ip, pc, #0, 12
   10f50:	add	ip, ip, #118784	; 0x1d000
   10f54:	ldr	pc, [ip, #236]!	; 0xec

00010f58 <fwrite_unlocked@plt>:
   10f58:	add	ip, pc, #0, 12
   10f5c:	add	ip, ip, #118784	; 0x1d000
   10f60:	ldr	pc, [ip, #228]!	; 0xe4

00010f64 <memcmp@plt>:
   10f64:	add	ip, pc, #0, 12
   10f68:	add	ip, ip, #118784	; 0x1d000
   10f6c:	ldr	pc, [ip, #220]!	; 0xdc

00010f70 <fputc_unlocked@plt>:
   10f70:	add	ip, pc, #0, 12
   10f74:	add	ip, ip, #118784	; 0x1d000
   10f78:	ldr	pc, [ip, #212]!	; 0xd4

00010f7c <dcgettext@plt>:
   10f7c:	add	ip, pc, #0, 12
   10f80:	add	ip, ip, #118784	; 0x1d000
   10f84:	ldr	pc, [ip, #204]!	; 0xcc

00010f88 <realloc@plt>:
   10f88:	add	ip, pc, #0, 12
   10f8c:	add	ip, ip, #118784	; 0x1d000
   10f90:	ldr	pc, [ip, #196]!	; 0xc4

00010f94 <textdomain@plt>:
   10f94:	add	ip, pc, #0, 12
   10f98:	add	ip, ip, #118784	; 0x1d000
   10f9c:	ldr	pc, [ip, #188]!	; 0xbc

00010fa0 <iswprint@plt>:
   10fa0:	add	ip, pc, #0, 12
   10fa4:	add	ip, ip, #118784	; 0x1d000
   10fa8:	ldr	pc, [ip, #180]!	; 0xb4

00010fac <__memcpy_chk@plt>:
   10fac:	add	ip, pc, #0, 12
   10fb0:	add	ip, ip, #118784	; 0x1d000
   10fb4:	ldr	pc, [ip, #172]!	; 0xac

00010fb8 <fwrite@plt>:
   10fb8:	add	ip, pc, #0, 12
   10fbc:	add	ip, ip, #118784	; 0x1d000
   10fc0:	ldr	pc, [ip, #164]!	; 0xa4

00010fc4 <lseek64@plt>:
   10fc4:	add	ip, pc, #0, 12
   10fc8:	add	ip, ip, #118784	; 0x1d000
   10fcc:	ldr	pc, [ip, #156]!	; 0x9c

00010fd0 <__ctype_get_mb_cur_max@plt>:
   10fd0:	add	ip, pc, #0, 12
   10fd4:	add	ip, ip, #118784	; 0x1d000
   10fd8:	ldr	pc, [ip, #148]!	; 0x94

00010fdc <fread@plt>:
   10fdc:	add	ip, pc, #0, 12
   10fe0:	add	ip, ip, #118784	; 0x1d000
   10fe4:	ldr	pc, [ip, #140]!	; 0x8c

00010fe8 <__fpending@plt>:
   10fe8:	add	ip, pc, #0, 12
   10fec:	add	ip, ip, #118784	; 0x1d000
   10ff0:	ldr	pc, [ip, #132]!	; 0x84

00010ff4 <mbrtowc@plt>:
   10ff4:	add	ip, pc, #0, 12
   10ff8:	add	ip, ip, #118784	; 0x1d000
   10ffc:	ldr	pc, [ip, #124]!	; 0x7c

00011000 <error@plt>:
   11000:	add	ip, pc, #0, 12
   11004:	add	ip, ip, #118784	; 0x1d000
   11008:	ldr	pc, [ip, #116]!	; 0x74

0001100c <malloc@plt>:
   1100c:	add	ip, pc, #0, 12
   11010:	add	ip, ip, #118784	; 0x1d000
   11014:	ldr	pc, [ip, #108]!	; 0x6c

00011018 <__libc_start_main@plt>:
   11018:	add	ip, pc, #0, 12
   1101c:	add	ip, ip, #118784	; 0x1d000
   11020:	ldr	pc, [ip, #100]!	; 0x64

00011024 <__freading@plt>:
   11024:	add	ip, pc, #0, 12
   11028:	add	ip, ip, #118784	; 0x1d000
   1102c:	ldr	pc, [ip, #92]!	; 0x5c

00011030 <__ctype_tolower_loc@plt>:
   11030:	add	ip, pc, #0, 12
   11034:	add	ip, ip, #118784	; 0x1d000
   11038:	ldr	pc, [ip, #84]!	; 0x54

0001103c <__gmon_start__@plt>:
   1103c:	add	ip, pc, #0, 12
   11040:	add	ip, ip, #118784	; 0x1d000
   11044:	ldr	pc, [ip, #76]!	; 0x4c

00011048 <getopt_long@plt>:
   11048:	add	ip, pc, #0, 12
   1104c:	add	ip, ip, #118784	; 0x1d000
   11050:	ldr	pc, [ip, #68]!	; 0x44

00011054 <__ctype_b_loc@plt>:
   11054:	add	ip, pc, #0, 12
   11058:	add	ip, ip, #118784	; 0x1d000
   1105c:	ldr	pc, [ip, #60]!	; 0x3c

00011060 <exit@plt>:
   11060:	add	ip, pc, #0, 12
   11064:	add	ip, ip, #118784	; 0x1d000
   11068:	ldr	pc, [ip, #52]!	; 0x34

0001106c <feof@plt>:
   1106c:	add	ip, pc, #0, 12
   11070:	add	ip, ip, #118784	; 0x1d000
   11074:	ldr	pc, [ip, #44]!	; 0x2c

00011078 <strlen@plt>:
   11078:	add	ip, pc, #0, 12
   1107c:	add	ip, ip, #118784	; 0x1d000
   11080:	ldr	pc, [ip, #36]!	; 0x24

00011084 <strchr@plt>:
   11084:	add	ip, pc, #0, 12
   11088:	add	ip, ip, #118784	; 0x1d000
   1108c:	ldr	pc, [ip, #28]!

00011090 <__errno_location@plt>:
   11090:	add	ip, pc, #0, 12
   11094:	add	ip, ip, #118784	; 0x1d000
   11098:	ldr	pc, [ip, #20]!

0001109c <__cxa_atexit@plt>:
   1109c:	add	ip, pc, #0, 12
   110a0:	add	ip, ip, #118784	; 0x1d000
   110a4:	ldr	pc, [ip, #12]!

000110a8 <setvbuf@plt>:
   110a8:	add	ip, pc, #0, 12
   110ac:	add	ip, ip, #118784	; 0x1d000
   110b0:	ldr	pc, [ip, #4]!

000110b4 <memset@plt>:
   110b4:	add	ip, pc, #0, 12
   110b8:	add	ip, ip, #28, 20	; 0x1c000
   110bc:	ldr	pc, [ip, #4092]!	; 0xffc

000110c0 <__printf_chk@plt>:
   110c0:	add	ip, pc, #0, 12
   110c4:	add	ip, ip, #28, 20	; 0x1c000
   110c8:	ldr	pc, [ip, #4084]!	; 0xff4

000110cc <fileno@plt>:
   110cc:	add	ip, pc, #0, 12
   110d0:	add	ip, ip, #28, 20	; 0x1c000
   110d4:	ldr	pc, [ip, #4076]!	; 0xfec

000110d8 <__fprintf_chk@plt>:
   110d8:	add	ip, pc, #0, 12
   110dc:	add	ip, ip, #28, 20	; 0x1c000
   110e0:	ldr	pc, [ip, #4068]!	; 0xfe4

000110e4 <fclose@plt>:
   110e4:	add	ip, pc, #0, 12
   110e8:	add	ip, ip, #28, 20	; 0x1c000
   110ec:	ldr	pc, [ip, #4060]!	; 0xfdc

000110f0 <fseeko64@plt>:
   110f0:	add	ip, pc, #0, 12
   110f4:	add	ip, ip, #28, 20	; 0x1c000
   110f8:	ldr	pc, [ip, #4052]!	; 0xfd4

000110fc <fcntl64@plt>:
   110fc:	add	ip, pc, #0, 12
   11100:	add	ip, ip, #28, 20	; 0x1c000
   11104:	ldr	pc, [ip, #4044]!	; 0xfcc

00011108 <__overflow@plt>:
   11108:	add	ip, pc, #0, 12
   1110c:	add	ip, ip, #28, 20	; 0x1c000
   11110:	ldr	pc, [ip, #4036]!	; 0xfc4

00011114 <setlocale@plt>:
   11114:	add	ip, pc, #0, 12
   11118:	add	ip, ip, #28, 20	; 0x1c000
   1111c:	ldr	pc, [ip, #4028]!	; 0xfbc

00011120 <strrchr@plt>:
   11120:	add	ip, pc, #0, 12
   11124:	add	ip, ip, #28, 20	; 0x1c000
   11128:	ldr	pc, [ip, #4020]!	; 0xfb4

0001112c <nl_langinfo@plt>:
   1112c:	add	ip, pc, #0, 12
   11130:	add	ip, ip, #28, 20	; 0x1c000
   11134:	ldr	pc, [ip, #4012]!	; 0xfac

00011138 <clearerr_unlocked@plt>:
   11138:	add	ip, pc, #0, 12
   1113c:	add	ip, ip, #28, 20	; 0x1c000
   11140:	ldr	pc, [ip, #4004]!	; 0xfa4

00011144 <fopen64@plt>:
   11144:	add	ip, pc, #0, 12
   11148:	add	ip, ip, #28, 20	; 0x1c000
   1114c:	ldr	pc, [ip, #3996]!	; 0xf9c

00011150 <bindtextdomain@plt>:
   11150:	add	ip, pc, #0, 12
   11154:	add	ip, ip, #28, 20	; 0x1c000
   11158:	ldr	pc, [ip, #3988]!	; 0xf94

0001115c <strncmp@plt>:
   1115c:	add	ip, pc, #0, 12
   11160:	add	ip, ip, #28, 20	; 0x1c000
   11164:	ldr	pc, [ip, #3980]!	; 0xf8c

00011168 <abort@plt>:
   11168:	add	ip, pc, #0, 12
   1116c:	add	ip, ip, #28, 20	; 0x1c000
   11170:	ldr	pc, [ip, #3972]!	; 0xf84

00011174 <close@plt>:
   11174:	add	ip, pc, #0, 12
   11178:	add	ip, ip, #28, 20	; 0x1c000
   1117c:	ldr	pc, [ip, #3964]!	; 0xf7c

00011180 <dcngettext@plt>:
   11180:	add	ip, pc, #0, 12
   11184:	add	ip, ip, #28, 20	; 0x1c000
   11188:	ldr	pc, [ip, #3956]!	; 0xf74

0001118c <__assert_fail@plt>:
   1118c:	add	ip, pc, #0, 12
   11190:	add	ip, ip, #28, 20	; 0x1c000
   11194:	ldr	pc, [ip, #3948]!	; 0xf6c

Disassembly of section .text:

00011198 <.text>:
   11198:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1119c:	movw	r4, #57732	; 0xe184
   111a0:	movt	r4, #2
   111a4:	strd	r6, [sp, #8]
   111a8:	mov	r5, #0
   111ac:	movw	r7, #53496	; 0xd0f8
   111b0:	movt	r7, #1
   111b4:	strd	r8, [sp, #16]
   111b8:	mov	r9, r0
   111bc:	strd	sl, [sp, #24]
   111c0:	movw	sl, #52068	; 0xcb64
   111c4:	movt	sl, #1
   111c8:	str	lr, [sp, #32]
   111cc:	sub	sp, sp, #316	; 0x13c
   111d0:	mov	r8, r1
   111d4:	ldr	r0, [r1]
   111d8:	movw	r6, #57744	; 0xe190
   111dc:	movt	r6, #2
   111e0:	str	sl, [sp, #44]	; 0x2c
   111e4:	str	r4, [sp, #68]	; 0x44
   111e8:	bl	187c4 <__assert_fail@plt+0x7638>
   111ec:	mov	r1, sl
   111f0:	mov	r0, #6
   111f4:	str	r5, [sp, #40]	; 0x28
   111f8:	bl	11114 <setlocale@plt>
   111fc:	movw	r1, #53372	; 0xd07c
   11200:	movt	r1, #1
   11204:	movw	r0, #53204	; 0xcfd4
   11208:	movt	r0, #1
   1120c:	bl	11150 <bindtextdomain@plt>
   11210:	movw	r0, #53204	; 0xcfd4
   11214:	movt	r0, #1
   11218:	bl	10f94 <textdomain@plt>
   1121c:	movw	r0, #33684	; 0x8394
   11220:	movt	r0, #1
   11224:	bl	1c77c <__assert_fail@plt+0xb5f0>
   11228:	mov	r3, r5
   1122c:	mov	r1, r5
   11230:	ldr	r0, [r4]
   11234:	mov	r2, #1
   11238:	bl	110a8 <setvbuf@plt>
   1123c:	str	r5, [sp, #24]
   11240:	mvn	r5, #0
   11244:	mov	r4, #0
   11248:	ldr	r3, [pc, #4060]	; 1222c <__assert_fail@plt+0x10a0>
   1124c:	mov	r2, r7
   11250:	mov	r1, r8
   11254:	mov	r0, r9
   11258:	str	r4, [sp]
   1125c:	bl	11048 <getopt_long@plt>
   11260:	cmn	r0, #1
   11264:	beq	11480 <__assert_fail@plt+0x2f4>
   11268:	cmp	r0, #119	; 0x77
   1126c:	beq	11394 <__assert_fail@plt+0x208>
   11270:	ble	112a8 <__assert_fail@plt+0x11c>
   11274:	movw	r3, #257	; 0x101
   11278:	cmp	r0, r3
   1127c:	beq	113b4 <__assert_fail@plt+0x228>
   11280:	ble	112e4 <__assert_fail@plt+0x158>
   11284:	movw	r3, #259	; 0x103
   11288:	cmp	r0, r3
   1128c:	beq	113a8 <__assert_fail@plt+0x21c>
   11290:	bge	112cc <__assert_fail@plt+0x140>
   11294:	mov	r3, #1
   11298:	strb	r4, [r6, #17]
   1129c:	strb	r4, [r6, #18]
   112a0:	strb	r3, [r6, #19]
   112a4:	b	11244 <__assert_fail@plt+0xb8>
   112a8:	cmp	r0, #98	; 0x62
   112ac:	beq	1138c <__assert_fail@plt+0x200>
   112b0:	ble	1130c <__assert_fail@plt+0x180>
   112b4:	cmp	r0, #108	; 0x6c
   112b8:	beq	113c8 <__assert_fail@plt+0x23c>
   112bc:	cmp	r0, #116	; 0x74
   112c0:	bne	112fc <__assert_fail@plt+0x170>
   112c4:	mov	r5, r4
   112c8:	b	11244 <__assert_fail@plt+0xb8>
   112cc:	cmp	r0, #260	; 0x104
   112d0:	bne	11304 <__assert_fail@plt+0x178>
   112d4:	mov	r3, #1
   112d8:	mov	r5, r3
   112dc:	str	r3, [sp, #40]	; 0x28
   112e0:	b	11244 <__assert_fail@plt+0xb8>
   112e4:	cmp	r0, #122	; 0x7a
   112e8:	bne	1135c <__assert_fail@plt+0x1d0>
   112ec:	movw	r3, #57616	; 0xe110
   112f0:	movt	r3, #2
   112f4:	strb	r4, [r3]
   112f8:	b	11244 <__assert_fail@plt+0xb8>
   112fc:	cmp	r0, #99	; 0x63
   11300:	beq	11380 <__assert_fail@plt+0x1f4>
   11304:	mov	r0, #1
   11308:	bl	12a70 <__assert_fail@plt+0x18e4>
   1130c:	cmn	r0, #3
   11310:	bne	11370 <__assert_fail@plt+0x1e4>
   11314:	ldr	r3, [sp, #68]	; 0x44
   11318:	movw	r2, #53464	; 0xd0d8
   1131c:	movt	r2, #1
   11320:	movw	r1, #53480	; 0xd0e8
   11324:	movt	r1, #1
   11328:	str	r4, [sp, #8]
   1132c:	ldr	r0, [r3]
   11330:	movw	r3, #57628	; 0xe11c
   11334:	movt	r3, #2
   11338:	stm	sp, {r1, r2}
   1133c:	movw	r2, #53200	; 0xcfd0
   11340:	movt	r2, #1
   11344:	movw	r1, #51424	; 0xc8e0
   11348:	movt	r1, #1
   1134c:	ldr	r3, [r3]
   11350:	bl	1af5c <__assert_fail@plt+0x9dd0>
   11354:	mov	r0, r4
   11358:	bl	11060 <exit@plt>
   1135c:	cmp	r0, #256	; 0x100
   11360:	bne	11304 <__assert_fail@plt+0x178>
   11364:	mov	r3, #1
   11368:	strb	r3, [r6, #16]
   1136c:	b	11244 <__assert_fail@plt+0xb8>
   11370:	cmn	r0, #2
   11374:	bne	11304 <__assert_fail@plt+0x178>
   11378:	mov	r0, r4
   1137c:	bl	12a70 <__assert_fail@plt+0x18e4>
   11380:	mov	r3, #1
   11384:	str	r3, [sp, #24]
   11388:	b	11244 <__assert_fail@plt+0xb8>
   1138c:	mov	r5, #1
   11390:	b	11244 <__assert_fail@plt+0xb8>
   11394:	mov	r3, #1
   11398:	strb	r4, [r6, #17]
   1139c:	strb	r3, [r6, #18]
   113a0:	strb	r4, [r6, #19]
   113a4:	b	11244 <__assert_fail@plt+0xb8>
   113a8:	mov	r3, #1
   113ac:	strb	r3, [r6, #20]
   113b0:	b	11244 <__assert_fail@plt+0xb8>
   113b4:	mov	r3, #1
   113b8:	strb	r3, [r6, #17]
   113bc:	strb	r4, [r6, #18]
   113c0:	strb	r4, [r6, #19]
   113c4:	b	11244 <__assert_fail@plt+0xb8>
   113c8:	movw	r3, #57736	; 0xe188
   113cc:	movt	r3, #2
   113d0:	mov	r2, #5
   113d4:	movw	r1, #53396	; 0xd094
   113d8:	movt	r1, #1
   113dc:	str	r3, [sp, #48]	; 0x30
   113e0:	mov	r0, r4
   113e4:	ldr	r3, [r3]
   113e8:	mvn	fp, #0
   113ec:	mov	sl, r3
   113f0:	bl	10f7c <dcgettext@plt>
   113f4:	ldr	r3, [sp, #44]	; 0x2c
   113f8:	mov	r2, #0
   113fc:	str	r0, [sp, #12]
   11400:	mov	r0, sl
   11404:	mvn	sl, #0
   11408:	str	r4, [sp, #16]
   1140c:	strd	sl, [sp]
   11410:	str	r3, [sp, #8]
   11414:	mov	r3, #0
   11418:	bl	1b66c <__assert_fail@plt+0xa4e0>
   1141c:	and	r3, r0, #7
   11420:	strd	r0, [r6, #8]
   11424:	str	r3, [sp, #32]
   11428:	ldr	r3, [sp, #48]	; 0x30
   1142c:	str	r4, [sp, #36]	; 0x24
   11430:	ldr	sl, [r3]
   11434:	ldrd	r2, [sp, #32]
   11438:	orrs	r3, r2, r3
   1143c:	beq	11244 <__assert_fail@plt+0xb8>
   11440:	mov	r2, #5
   11444:	movw	r1, #53412	; 0xd0a4
   11448:	movt	r1, #1
   1144c:	mov	r0, r4
   11450:	bl	10f7c <dcgettext@plt>
   11454:	mov	r5, r0
   11458:	mov	r0, sl
   1145c:	bl	1aab4 <__assert_fail@plt+0x9928>
   11460:	mov	r3, r0
   11464:	mov	r1, r4
   11468:	mov	r2, r5
   1146c:	mov	r0, r4
   11470:	bl	11000 <error@plt>
   11474:	movw	r1, #53432	; 0xd0b8
   11478:	movt	r1, #1
   1147c:	b	123d0 <__assert_fail@plt+0x1244>
   11480:	movw	fp, #57744	; 0xe190
   11484:	movt	fp, #2
   11488:	ldrd	r2, [fp, #8]
   1148c:	mov	r1, #3
   11490:	str	r1, [fp, #24]
   11494:	cmp	r3, #0
   11498:	cmpeq	r2, #512	; 0x200
   1149c:	bhi	124bc <__assert_fail@plt+0x1330>
   114a0:	orrs	r3, r2, r3
   114a4:	beq	1155c <__assert_fail@plt+0x3d0>
   114a8:	ldr	r3, [fp, #8]
   114ac:	cmp	r5, #0
   114b0:	ldr	r2, [fp, #12]
   114b4:	ldr	r4, [sp, #40]	; 0x28
   114b8:	movne	r4, #0
   114bc:	lsr	r3, r3, #2
   114c0:	orr	r3, r3, r2, lsl #30
   114c4:	cmp	r4, #0
   114c8:	str	r3, [fp]
   114cc:	bne	1253c <__assert_fail@plt+0x13b0>
   114d0:	movw	r3, #57616	; 0xe110
   114d4:	movt	r3, #2
   114d8:	str	r3, [sp, #108]	; 0x6c
   114dc:	ldrb	r3, [r3]
   114e0:	cmp	r3, #10
   114e4:	ldr	r3, [sp, #24]
   114e8:	beq	1156c <__assert_fail@plt+0x3e0>
   114ec:	cmp	r3, #0
   114f0:	movwne	r1, #53580	; 0xd14c
   114f4:	movtne	r1, #1
   114f8:	bne	1153c <__assert_fail@plt+0x3b0>
   114fc:	ldrb	r3, [fp, #16]
   11500:	cmp	r3, #0
   11504:	bne	12530 <__assert_fail@plt+0x13a4>
   11508:	ldrb	r3, [fp, #17]
   1150c:	cmp	r3, #0
   11510:	bne	124b0 <__assert_fail@plt+0x1324>
   11514:	ldrb	r3, [fp, #18]
   11518:	cmp	r3, #0
   1151c:	bne	121fc <__assert_fail@plt+0x1070>
   11520:	ldrb	r3, [fp, #19]
   11524:	ldr	r2, [sp, #24]
   11528:	eor	r3, r3, #1
   1152c:	orrs	r4, r2, r3
   11530:	movweq	r1, #53976	; 0xd2d8
   11534:	movteq	r1, #1
   11538:	bne	115c4 <__assert_fail@plt+0x438>
   1153c:	mov	r2, #5
   11540:	mov	r0, #0
   11544:	bl	10f7c <dcgettext@plt>
   11548:	mov	r1, #0
   1154c:	mov	r2, r0
   11550:	mov	r0, r1
   11554:	bl	11000 <error@plt>
   11558:	b	11304 <__assert_fail@plt+0x178>
   1155c:	mov	r2, #512	; 0x200
   11560:	mov	r3, #0
   11564:	strd	r2, [fp, #8]
   11568:	b	114a8 <__assert_fail@plt+0x31c>
   1156c:	ldr	r2, [sp, #40]	; 0x28
   11570:	ands	r6, r3, r2
   11574:	movwne	r1, #53640	; 0xd188
   11578:	movtne	r1, #1
   1157c:	bne	1153c <__assert_fail@plt+0x3b0>
   11580:	ldr	r3, [sp, #24]
   11584:	cmp	r5, #0
   11588:	movlt	r3, #0
   1158c:	andge	r3, r3, #1
   11590:	cmp	r3, #0
   11594:	movwne	r1, #53700	; 0xd1c4
   11598:	movtne	r1, #1
   1159c:	bne	1153c <__assert_fail@plt+0x3b0>
   115a0:	ldrb	r3, [fp, #16]
   115a4:	cmp	r3, #0
   115a8:	beq	12498 <__assert_fail@plt+0x130c>
   115ac:	ldr	r3, [sp, #24]
   115b0:	cmp	r3, #0
   115b4:	beq	12530 <__assert_fail@plt+0x13a4>
   115b8:	ldrb	r3, [fp, #18]
   115bc:	cmp	r3, #0
   115c0:	bne	115e0 <__assert_fail@plt+0x454>
   115c4:	ldr	r3, [sp, #24]
   115c8:	ldrb	r2, [fp, #20]
   115cc:	eor	r3, r3, #1
   115d0:	tst	r2, r3
   115d4:	movwne	r1, #54040	; 0xd318
   115d8:	movtne	r1, #1
   115dc:	bne	1153c <__assert_fail@plt+0x3b0>
   115e0:	movw	r3, #57712	; 0xe170
   115e4:	movt	r3, #2
   115e8:	add	r2, r8, r9, lsl #2
   115ec:	ldr	r3, [r3]
   115f0:	cmn	r5, #1
   115f4:	moveq	r5, #0
   115f8:	str	r2, [sp, #84]	; 0x54
   115fc:	cmp	r3, r9
   11600:	bne	11618 <__assert_fail@plt+0x48c>
   11604:	add	r2, r2, #4
   11608:	str	r2, [sp, #84]	; 0x54
   1160c:	movw	r2, #51416	; 0xc8d8
   11610:	movt	r2, #1
   11614:	str	r2, [r8, r9, lsl #2]
   11618:	add	r8, r8, r3, lsl #2
   1161c:	ldr	r3, [sp, #84]	; 0x54
   11620:	cmp	r3, r8
   11624:	bls	12424 <__assert_fail@plt+0x1298>
   11628:	cmp	r5, #0
   1162c:	str	r8, [sp, #48]	; 0x30
   11630:	movw	r2, #54628	; 0xd564
   11634:	movt	r2, #1
   11638:	movne	r3, #42	; 0x2a
   1163c:	ldr	r8, [sp, #24]
   11640:	moveq	r3, #32
   11644:	mov	sl, fp
   11648:	str	r2, [sp, #124]	; 0x7c
   1164c:	str	r3, [sp, #132]	; 0x84
   11650:	uxtb	r3, r3
   11654:	str	r3, [sp, #128]	; 0x80
   11658:	movw	r3, #51548	; 0xc95c
   1165c:	movt	r3, #1
   11660:	str	r3, [sp, #44]	; 0x2c
   11664:	mov	r3, #1
   11668:	str	r3, [sp, #76]	; 0x4c
   1166c:	ldr	r3, [sp, #48]	; 0x30
   11670:	cmp	r8, #0
   11674:	ldr	r0, [r3], #4
   11678:	str	r3, [sp, #48]	; 0x30
   1167c:	str	r0, [sp, #52]	; 0x34
   11680:	beq	11d24 <__assert_fail@plt+0xb98>
   11684:	movw	r1, #51416	; 0xc8d8
   11688:	movt	r1, #1
   1168c:	bl	10eec <strcmp@plt>
   11690:	subs	r3, r0, #0
   11694:	str	r3, [sp, #72]	; 0x48
   11698:	bne	11dd4 <__assert_fail@plt+0xc48>
   1169c:	mov	r3, #1
   116a0:	movw	r1, #54104	; 0xd358
   116a4:	movt	r1, #1
   116a8:	mov	r2, #5
   116ac:	strb	r3, [sl, #4]
   116b0:	bl	10f7c <dcgettext@plt>
   116b4:	movw	r3, #57728	; 0xe180
   116b8:	movt	r3, #2
   116bc:	str	r0, [sp, #52]	; 0x34
   116c0:	ldr	fp, [r3]
   116c4:	mov	r3, #0
   116c8:	movw	r2, #54148	; 0xd384
   116cc:	movt	r2, #1
   116d0:	mov	r0, #0
   116d4:	str	r3, [sp, #80]	; 0x50
   116d8:	mov	r1, #0
   116dc:	str	r3, [sp, #104]	; 0x68
   116e0:	str	r3, [sp, #148]	; 0x94
   116e4:	str	r3, [sp, #152]	; 0x98
   116e8:	movw	r3, #54232	; 0xd3d8
   116ec:	movt	r3, #1
   116f0:	str	r2, [sp, #100]	; 0x64
   116f4:	mov	r2, #1
   116f8:	strd	r0, [sp, #32]
   116fc:	str	r3, [sp, #120]	; 0x78
   11700:	mov	r3, #0
   11704:	strd	r2, [sp, #24]
   11708:	strd	r0, [sp, #56]	; 0x38
   1170c:	strd	r0, [sp, #88]	; 0x58
   11710:	mov	r3, fp
   11714:	mov	r2, #10
   11718:	add	r1, sp, #152	; 0x98
   1171c:	add	r0, sp, #148	; 0x94
   11720:	bl	10ee0 <__getdelim@plt>
   11724:	subs	r5, r0, #0
   11728:	ble	11b10 <__assert_fail@plt+0x984>
   1172c:	ldr	r3, [sp, #148]	; 0x94
   11730:	ldrb	r2, [r3]
   11734:	cmp	r2, #35	; 0x23
   11738:	beq	11880 <__assert_fail@plt+0x6f4>
   1173c:	add	r2, r3, r5
   11740:	ldrb	r0, [r2, #-1]
   11744:	cmp	r0, #10
   11748:	subeq	r5, r5, #1
   1174c:	cmp	r5, #0
   11750:	movle	r2, r5
   11754:	subgt	r2, r5, #1
   11758:	ldrb	r0, [r3, r2]
   1175c:	cmp	r0, #13
   11760:	subeq	r5, r5, #1
   11764:	cmp	r5, #0
   11768:	beq	11880 <__assert_fail@plt+0x6f4>
   1176c:	mov	r2, #0
   11770:	strb	r2, [r3, r5]
   11774:	ldr	r7, [sp, #148]	; 0x94
   11778:	ldrb	r3, [r7]
   1177c:	cmp	r3, #9
   11780:	cmpne	r3, #32
   11784:	moveq	r9, #1
   11788:	movne	r9, #0
   1178c:	bne	117ac <__assert_fail@plt+0x620>
   11790:	mov	r2, r7
   11794:	rsb	r1, r7, #1
   11798:	add	r9, r1, r2
   1179c:	ldrb	r3, [r2, #1]!
   117a0:	cmp	r3, #9
   117a4:	cmpne	r3, #32
   117a8:	beq	11798 <__assert_fail@plt+0x60c>
   117ac:	cmp	r3, #92	; 0x5c
   117b0:	mov	r2, #7
   117b4:	ldr	r1, [sp, #44]	; 0x2c
   117b8:	addeq	r9, r9, #1
   117bc:	movne	r3, #0
   117c0:	add	r4, r7, r9
   117c4:	streq	r8, [sp, #64]	; 0x40
   117c8:	mov	r0, r4
   117cc:	strne	r3, [sp, #64]	; 0x40
   117d0:	bl	1115c <strncmp@plt>
   117d4:	subs	r2, r0, #0
   117d8:	bne	118f0 <__assert_fail@plt+0x764>
   117dc:	add	r6, r9, #7
   117e0:	mov	r0, r4
   117e4:	ldr	r1, [sp, #44]	; 0x2c
   117e8:	add	r3, r7, r6
   117ec:	ldrb	r4, [r7, r6]
   117f0:	strb	r2, [r7, r6]
   117f4:	str	r3, [sp, #96]	; 0x60
   117f8:	bl	10eec <strcmp@plt>
   117fc:	subs	ip, r0, #0
   11800:	bne	1185c <__assert_fail@plt+0x6d0>
   11804:	cmp	r4, #40	; 0x28
   11808:	mov	r0, #512	; 0x200
   1180c:	mov	r1, #0
   11810:	addeq	r3, r7, r6
   11814:	strdeq	r0, [sl, #8]
   11818:	strbeq	r4, [r3]
   1181c:	beq	11830 <__assert_fail@plt+0x6a4>
   11820:	cmp	r4, #45	; 0x2d
   11824:	add	r6, r9, #8
   11828:	strd	r0, [sl, #8]
   1182c:	beq	11f80 <__assert_fail@plt+0xdf4>
   11830:	ldr	r3, [sl, #8]
   11834:	ldr	r1, [sl, #12]
   11838:	ldrb	r2, [r7, r6]
   1183c:	lsr	r3, r3, #2
   11840:	orr	r3, r3, r1, lsl #30
   11844:	cmp	r2, #32
   11848:	addeq	r6, r6, #1
   1184c:	str	r3, [sl]
   11850:	ldrb	r3, [r7, r6]
   11854:	cmp	r3, #40	; 0x28
   11858:	beq	11ff4 <__assert_fail@plt+0xe68>
   1185c:	ldr	r2, [sp, #32]
   11860:	ldrb	r3, [sl, #18]
   11864:	adds	r2, r2, #1
   11868:	str	r2, [sp, #32]
   1186c:	ldr	r2, [sp, #36]	; 0x24
   11870:	adc	r2, r2, #0
   11874:	cmp	r3, #0
   11878:	str	r2, [sp, #36]	; 0x24
   1187c:	bne	11d88 <__assert_fail@plt+0xbfc>
   11880:	ldr	r3, [fp]
   11884:	ands	r3, r3, #48	; 0x30
   11888:	bne	11b10 <__assert_fail@plt+0x984>
   1188c:	ldr	r2, [sp, #24]
   11890:	adds	r2, r2, #1
   11894:	str	r2, [sp, #24]
   11898:	ldr	r2, [sp, #28]
   1189c:	adc	r2, r2, #0
   118a0:	str	r2, [sp, #28]
   118a4:	ldrd	r0, [sp, #24]
   118a8:	orrs	r2, r0, r1
   118ac:	bne	11710 <__assert_fail@plt+0x584>
   118b0:	mov	r0, r3
   118b4:	mov	r2, #5
   118b8:	movw	r1, #54120	; 0xd368
   118bc:	movt	r1, #1
   118c0:	mov	r4, r3
   118c4:	bl	10f7c <dcgettext@plt>
   118c8:	mov	r5, r0
   118cc:	mov	r1, #3
   118d0:	ldr	r2, [sp, #52]	; 0x34
   118d4:	mov	r0, r4
   118d8:	bl	1a8dc <__assert_fail@plt+0x9750>
   118dc:	mov	r3, r0
   118e0:	mov	r2, r5
   118e4:	mov	r1, r4
   118e8:	mov	r0, #1
   118ec:	bl	11000 <error@plt>
   118f0:	ldrb	r6, [r7, r9]
   118f4:	sub	r2, r5, r9
   118f8:	ldr	r3, [sl, #24]
   118fc:	cmp	r6, #92	; 0x5c
   11900:	addeq	r3, r3, #1
   11904:	cmp	r2, r3
   11908:	bcc	1185c <__assert_fail@plt+0x6d0>
   1190c:	mov	r1, #0
   11910:	str	r1, [sl]
   11914:	bl	11054 <__ctype_b_loc@plt>
   11918:	mov	r1, #0
   1191c:	add	r3, r4, #1
   11920:	ldr	ip, [r0]
   11924:	mvn	r0, r4
   11928:	b	11934 <__assert_fail@plt+0x7a8>
   1192c:	ldrb	r6, [r3], #1
   11930:	mov	r1, r8
   11934:	lsl	r6, r6, #1
   11938:	add	lr, r0, r3
   1193c:	ldrh	r2, [ip, r6]
   11940:	tst	r2, #4096	; 0x1000
   11944:	bne	1192c <__assert_fail@plt+0x7a0>
   11948:	cmp	r1, #0
   1194c:	beq	1185c <__assert_fail@plt+0x6d0>
   11950:	sub	r3, lr, #2
   11954:	str	lr, [sl]
   11958:	cmp	r3, #126	; 0x7e
   1195c:	bhi	1185c <__assert_fail@plt+0x6d0>
   11960:	ands	r3, lr, #1
   11964:	bne	1185c <__assert_fail@plt+0x6d0>
   11968:	add	r9, r9, lr
   1196c:	str	r3, [sl, #12]
   11970:	lsl	lr, lr, #2
   11974:	ldrb	r3, [r7, r9]
   11978:	str	lr, [sl, #8]
   1197c:	cmp	r3, #32
   11980:	cmpne	r3, #9
   11984:	movne	r3, #1
   11988:	moveq	r3, #0
   1198c:	bne	1185c <__assert_fail@plt+0x6d0>
   11990:	mov	r0, r4
   11994:	strb	r3, [r7, r9]
   11998:	bl	12704 <__assert_fail@plt+0x1578>
   1199c:	cmp	r0, #0
   119a0:	beq	1185c <__assert_fail@plt+0x6d0>
   119a4:	ldr	r3, [sp, #108]	; 0x6c
   119a8:	add	r1, r9, #1
   119ac:	ldr	r2, [r3, #4]
   119b0:	sub	r3, r5, r1
   119b4:	cmp	r3, #1
   119b8:	beq	119ec <__assert_fail@plt+0x860>
   119bc:	ldrb	r3, [r7, r1]
   119c0:	cmp	r3, #32
   119c4:	cmpne	r3, #42	; 0x2a
   119c8:	movne	r3, #1
   119cc:	moveq	r3, #0
   119d0:	bne	119ec <__assert_fail@plt+0x860>
   119d4:	cmp	r2, #1
   119d8:	beq	11a00 <__assert_fail@plt+0x874>
   119dc:	ldr	r2, [sp, #108]	; 0x6c
   119e0:	add	r1, r9, #2
   119e4:	str	r3, [r2, #4]
   119e8:	b	11a00 <__assert_fail@plt+0x874>
   119ec:	cmp	r2, #0
   119f0:	beq	1185c <__assert_fail@plt+0x6d0>
   119f4:	ldr	r2, [sp, #108]	; 0x6c
   119f8:	mov	r3, #1
   119fc:	str	r3, [r2, #4]
   11a00:	ldr	r3, [sp, #64]	; 0x40
   11a04:	add	r9, r7, r1
   11a08:	cmp	r3, #0
   11a0c:	bne	12430 <__assert_fail@plt+0x12a4>
   11a10:	ldr	r3, [sp, #72]	; 0x48
   11a14:	cmp	r3, #0
   11a18:	bne	11a34 <__assert_fail@plt+0x8a8>
   11a1c:	movw	r1, #51416	; 0xc8d8
   11a20:	movt	r1, #1
   11a24:	mov	r0, r9
   11a28:	bl	10eec <strcmp@plt>
   11a2c:	cmp	r0, #0
   11a30:	beq	1185c <__assert_fail@plt+0x6d0>
   11a34:	ldrb	r3, [sl, #17]
   11a38:	cmp	r3, #0
   11a3c:	movne	r6, #0
   11a40:	bne	11a58 <__assert_fail@plt+0x8cc>
   11a44:	mov	r1, #10
   11a48:	mov	r0, r9
   11a4c:	bl	11084 <strchr@plt>
   11a50:	adds	r6, r0, #0
   11a54:	movne	r6, #1
   11a58:	add	r2, sp, #160	; 0xa0
   11a5c:	add	r1, sp, #240	; 0xf0
   11a60:	str	r6, [sp, #64]	; 0x40
   11a64:	mov	r0, r9
   11a68:	bl	1288c <__assert_fail@plt+0x1700>
   11a6c:	subs	r3, r0, #0
   11a70:	str	r3, [sp, #80]	; 0x50
   11a74:	bne	1225c <__assert_fail@plt+0x10d0>
   11a78:	ldr	r2, [sp, #56]	; 0x38
   11a7c:	ldrb	r3, [sl, #17]
   11a80:	adds	r2, r2, #1
   11a84:	str	r2, [sp, #56]	; 0x38
   11a88:	ldr	r2, [sp, #60]	; 0x3c
   11a8c:	adc	r2, r2, #0
   11a90:	cmp	r3, #0
   11a94:	str	r2, [sp, #60]	; 0x3c
   11a98:	bne	11b00 <__assert_fail@plt+0x974>
   11a9c:	cmp	r6, #0
   11aa0:	beq	11acc <__assert_fail@plt+0x940>
   11aa4:	ldr	r3, [sp, #68]	; 0x44
   11aa8:	ldr	r0, [r3]
   11aac:	ldr	r3, [r0, #20]
   11ab0:	ldr	r2, [r0, #24]
   11ab4:	cmp	r3, r2
   11ab8:	addcc	r1, r3, #1
   11abc:	movcc	r2, #92	; 0x5c
   11ac0:	strcc	r1, [r0, #20]
   11ac4:	strbcc	r2, [r3]
   11ac8:	bcs	12460 <__assert_fail@plt+0x12d4>
   11acc:	mov	r0, r9
   11ad0:	ldr	r1, [sp, #64]	; 0x40
   11ad4:	bl	12788 <__assert_fail@plt+0x15fc>
   11ad8:	movw	r1, #54196	; 0xd3b4
   11adc:	movt	r1, #1
   11ae0:	mov	r2, #5
   11ae4:	mov	r0, #0
   11ae8:	bl	10f7c <dcgettext@plt>
   11aec:	mov	r2, r0
   11af0:	movw	r1, #54216	; 0xd3c8
   11af4:	movt	r1, #1
   11af8:	mov	r0, #1
   11afc:	bl	110c0 <__printf_chk@plt>
   11b00:	ldr	r3, [fp]
   11b04:	str	r8, [sp, #80]	; 0x50
   11b08:	ands	r3, r3, #48	; 0x30
   11b0c:	beq	1188c <__assert_fail@plt+0x700>
   11b10:	ldr	r0, [sp, #148]	; 0x94
   11b14:	bl	18694 <__assert_fail@plt+0x7508>
   11b18:	ldr	r3, [fp]
   11b1c:	mov	r0, fp
   11b20:	ands	r5, r3, #32
   11b24:	ldr	r3, [sp, #72]	; 0x48
   11b28:	mvneq	r4, #0
   11b2c:	movne	r4, #0
   11b30:	cmp	r3, #0
   11b34:	bne	11e24 <__assert_fail@plt+0xc98>
   11b38:	bl	11138 <clearerr_unlocked@plt>
   11b3c:	cmp	r4, #0
   11b40:	bge	11fe4 <__assert_fail@plt+0xe58>
   11b44:	ldr	r3, [sp, #80]	; 0x50
   11b48:	cmp	r3, #0
   11b4c:	beq	120bc <__assert_fail@plt+0xf30>
   11b50:	ldrb	r3, [sl, #17]
   11b54:	cmp	r3, #0
   11b58:	bne	11cc4 <__assert_fail@plt+0xb38>
   11b5c:	ldrd	r0, [sp, #32]
   11b60:	orrs	r3, r0, r1
   11b64:	beq	11bd0 <__assert_fail@plt+0xa44>
   11b68:	mov	r3, #0
   11b6c:	mvn	r2, #0
   11b70:	cmp	r1, r3
   11b74:	cmpeq	r0, r2
   11b78:	ldrls	r3, [sp, #32]
   11b7c:	bls	11b98 <__assert_fail@plt+0xa0c>
   11b80:	movw	r2, #16960	; 0x4240
   11b84:	movt	r2, #15
   11b88:	mov	r3, #0
   11b8c:	bl	1c5a4 <__assert_fail@plt+0xb418>
   11b90:	add	r3, r2, #999424	; 0xf4000
   11b94:	add	r3, r3, #576	; 0x240
   11b98:	mov	r0, #5
   11b9c:	movw	r2, #54300	; 0xd41c
   11ba0:	movt	r2, #1
   11ba4:	movw	r1, #54348	; 0xd44c
   11ba8:	movt	r1, #1
   11bac:	str	r0, [sp]
   11bb0:	mov	r0, #0
   11bb4:	bl	11180 <dcngettext@plt>
   11bb8:	ldrd	r4, [sp, #32]
   11bbc:	mov	r1, #0
   11bc0:	mov	r2, r0
   11bc4:	mov	r0, r1
   11bc8:	strd	r4, [sp]
   11bcc:	bl	11000 <error@plt>
   11bd0:	ldrd	r0, [sp, #56]	; 0x38
   11bd4:	orrs	r3, r0, r1
   11bd8:	beq	11c44 <__assert_fail@plt+0xab8>
   11bdc:	mov	r3, #0
   11be0:	mvn	r2, #0
   11be4:	cmp	r1, r3
   11be8:	cmpeq	r0, r2
   11bec:	ldrls	r3, [sp, #56]	; 0x38
   11bf0:	bls	11c0c <__assert_fail@plt+0xa80>
   11bf4:	movw	r2, #16960	; 0x4240
   11bf8:	movt	r2, #15
   11bfc:	mov	r3, #0
   11c00:	bl	1c5a4 <__assert_fail@plt+0xb418>
   11c04:	add	r3, r2, #999424	; 0xf4000
   11c08:	add	r3, r3, #576	; 0x240
   11c0c:	mov	r0, #5
   11c10:	movw	r2, #54392	; 0xd478
   11c14:	movt	r2, #1
   11c18:	movw	r1, #54440	; 0xd4a8
   11c1c:	movt	r1, #1
   11c20:	str	r0, [sp]
   11c24:	mov	r0, #0
   11c28:	bl	11180 <dcngettext@plt>
   11c2c:	ldrd	r4, [sp, #56]	; 0x38
   11c30:	mov	r1, #0
   11c34:	mov	r2, r0
   11c38:	mov	r0, r1
   11c3c:	strd	r4, [sp]
   11c40:	bl	11000 <error@plt>
   11c44:	ldrd	r0, [sp, #88]	; 0x58
   11c48:	orrs	r3, r0, r1
   11c4c:	beq	11cb8 <__assert_fail@plt+0xb2c>
   11c50:	mov	r3, #0
   11c54:	mvn	r2, #0
   11c58:	cmp	r1, r3
   11c5c:	cmpeq	r0, r2
   11c60:	ldrls	r3, [sp, #88]	; 0x58
   11c64:	bls	11c80 <__assert_fail@plt+0xaf4>
   11c68:	movw	r2, #16960	; 0x4240
   11c6c:	movt	r2, #15
   11c70:	mov	r3, #0
   11c74:	bl	1c5a4 <__assert_fail@plt+0xb418>
   11c78:	add	r3, r2, #999424	; 0xf4000
   11c7c:	add	r3, r3, #576	; 0x240
   11c80:	mov	r0, #5
   11c84:	movw	r2, #54484	; 0xd4d4
   11c88:	movt	r2, #1
   11c8c:	movw	r1, #54532	; 0xd504
   11c90:	movt	r1, #1
   11c94:	str	r0, [sp]
   11c98:	mov	r0, #0
   11c9c:	bl	11180 <dcngettext@plt>
   11ca0:	ldrd	r4, [sp, #88]	; 0x58
   11ca4:	mov	r1, #0
   11ca8:	mov	r2, r0
   11cac:	mov	r0, r1
   11cb0:	strd	r4, [sp]
   11cb4:	bl	11000 <error@plt>
   11cb8:	ldrb	r3, [sl, #16]
   11cbc:	cmp	r3, #0
   11cc0:	bne	121dc <__assert_fail@plt+0x1050>
   11cc4:	ldr	r3, [sp, #104]	; 0x68
   11cc8:	cmp	r3, #0
   11ccc:	beq	120b4 <__assert_fail@plt+0xf28>
   11cd0:	ldrd	r0, [sp, #56]	; 0x38
   11cd4:	ldrd	r2, [sp, #88]	; 0x58
   11cd8:	orr	ip, r0, r2
   11cdc:	orr	r3, r1, r3
   11ce0:	mov	lr, r2
   11ce4:	str	ip, [sp, #112]	; 0x70
   11ce8:	str	r3, [sp, #116]	; 0x74
   11cec:	ldrd	r2, [sp, #112]	; 0x70
   11cf0:	orrs	r3, r2, r3
   11cf4:	bne	120b4 <__assert_fail@plt+0xf28>
   11cf8:	ldrd	r0, [sp, #32]
   11cfc:	ldrb	r3, [sl, #20]
   11d00:	mov	r2, r0
   11d04:	orrs	r2, r2, r1
   11d08:	eor	r3, r3, #1
   11d0c:	orreq	r3, r3, #1
   11d10:	and	r3, r3, #1
   11d14:	ldr	r2, [sp, #76]	; 0x4c
   11d18:	and	r2, r2, r3
   11d1c:	str	r2, [sp, #76]	; 0x4c
   11d20:	b	11d40 <__assert_fail@plt+0xbb4>
   11d24:	add	r2, sp, #240	; 0xf0
   11d28:	add	r1, sp, #168	; 0xa8
   11d2c:	ldr	r0, [sp, #52]	; 0x34
   11d30:	bl	1288c <__assert_fail@plt+0x1700>
   11d34:	subs	r4, r0, #0
   11d38:	bne	11e80 <__assert_fail@plt+0xcf4>
   11d3c:	str	r4, [sp, #76]	; 0x4c
   11d40:	ldr	r2, [sp, #48]	; 0x30
   11d44:	ldr	r3, [sp, #84]	; 0x54
   11d48:	cmp	r3, r2
   11d4c:	bhi	1166c <__assert_fail@plt+0x4e0>
   11d50:	mov	fp, sl
   11d54:	ldrb	r3, [fp, #4]
   11d58:	cmp	r3, #0
   11d5c:	bne	123a8 <__assert_fail@plt+0x121c>
   11d60:	ldr	r3, [sp, #76]	; 0x4c
   11d64:	eor	r0, r3, #1
   11d68:	uxtb	r0, r0
   11d6c:	add	sp, sp, #316	; 0x13c
   11d70:	ldrd	r4, [sp]
   11d74:	ldrd	r6, [sp, #8]
   11d78:	ldrd	r8, [sp, #16]
   11d7c:	ldrd	sl, [sp, #24]
   11d80:	add	sp, sp, #32
   11d84:	pop	{pc}		; (ldr pc, [sp], #4)
   11d88:	mov	r2, #5
   11d8c:	mov	r0, #0
   11d90:	ldr	r1, [sp, #100]	; 0x64
   11d94:	bl	10f7c <dcgettext@plt>
   11d98:	mov	r4, r0
   11d9c:	mov	r1, #3
   11da0:	ldr	r2, [sp, #52]	; 0x34
   11da4:	mov	r0, #0
   11da8:	bl	1a8dc <__assert_fail@plt+0x9750>
   11dac:	ldrd	r6, [sp, #24]
   11db0:	mov	r1, #0
   11db4:	mov	r3, r0
   11db8:	mov	r2, r4
   11dbc:	mov	r0, r1
   11dc0:	ldr	ip, [sp, #44]	; 0x2c
   11dc4:	strd	r6, [sp]
   11dc8:	str	ip, [sp, #8]
   11dcc:	bl	11000 <error@plt>
   11dd0:	b	11880 <__assert_fail@plt+0x6f4>
   11dd4:	movw	r1, #51420	; 0xc8dc
   11dd8:	movt	r1, #1
   11ddc:	ldr	r0, [sp, #52]	; 0x34
   11de0:	bl	185e8 <__assert_fail@plt+0x745c>
   11de4:	subs	fp, r0, #0
   11de8:	bne	116c4 <__assert_fail@plt+0x538>
   11dec:	bl	11090 <__errno_location@plt>
   11df0:	ldr	r4, [r0]
   11df4:	mov	r1, #3
   11df8:	mov	r0, fp
   11dfc:	ldr	r2, [sp, #52]	; 0x34
   11e00:	bl	1a8dc <__assert_fail@plt+0x9750>
   11e04:	mov	r3, r0
   11e08:	movw	r2, #53428	; 0xd0b4
   11e0c:	movt	r2, #1
   11e10:	mov	r0, fp
   11e14:	mov	r1, r4
   11e18:	bl	11000 <error@plt>
   11e1c:	mov	r3, fp
   11e20:	b	11d14 <__assert_fail@plt+0xb88>
   11e24:	bl	184d4 <__assert_fail@plt+0x7348>
   11e28:	cmp	r0, #0
   11e2c:	beq	11b3c <__assert_fail@plt+0x9b0>
   11e30:	cmp	r5, #0
   11e34:	beq	121d0 <__assert_fail@plt+0x1044>
   11e38:	movw	r1, #54236	; 0xd3dc
   11e3c:	movt	r1, #1
   11e40:	mov	r2, #5
   11e44:	mov	r0, #0
   11e48:	bl	10f7c <dcgettext@plt>
   11e4c:	mov	r5, r0
   11e50:	mov	r4, #0
   11e54:	mov	r1, #3
   11e58:	mov	r0, #0
   11e5c:	ldr	r2, [sp, #52]	; 0x34
   11e60:	bl	1a8dc <__assert_fail@plt+0x9750>
   11e64:	mov	r3, r0
   11e68:	mov	r2, r5
   11e6c:	mov	r1, r4
   11e70:	mov	r0, #0
   11e74:	bl	11000 <error@plt>
   11e78:	mov	r3, #0
   11e7c:	b	11d14 <__assert_fail@plt+0xb88>
   11e80:	ldr	r3, [sp, #108]	; 0x6c
   11e84:	ldrb	r5, [r3]
   11e88:	cmp	r5, #10
   11e8c:	beq	12108 <__assert_fail@plt+0xf7c>
   11e90:	mov	r4, r8
   11e94:	ldr	r3, [sp, #40]	; 0x28
   11e98:	cmp	r3, #0
   11e9c:	bne	12150 <__assert_fail@plt+0xfc4>
   11ea0:	ldr	r3, [sl]
   11ea4:	lsrs	r3, r3, #1
   11ea8:	beq	11eec <__assert_fail@plt+0xd60>
   11eac:	ldr	r7, [sp, #124]	; 0x7c
   11eb0:	add	r6, sp, #167	; 0xa7
   11eb4:	mov	r1, r7
   11eb8:	mov	r0, #1
   11ebc:	ldrb	r2, [r6, #1]
   11ec0:	bl	110c0 <__printf_chk@plt>
   11ec4:	ldr	r2, [sl]
   11ec8:	add	r3, r6, #2
   11ecc:	add	r1, sp, #168	; 0xa8
   11ed0:	sub	r3, r3, r1
   11ed4:	add	r6, r6, #1
   11ed8:	cmp	r3, r2, lsr #1
   11edc:	bcc	11eb4 <__assert_fail@plt+0xd28>
   11ee0:	ldr	r3, [sp, #40]	; 0x28
   11ee4:	cmp	r3, #0
   11ee8:	bne	11f48 <__assert_fail@plt+0xdbc>
   11eec:	ldr	r3, [sp, #68]	; 0x44
   11ef0:	ldr	r0, [r3]
   11ef4:	ldr	r3, [r0, #20]
   11ef8:	ldr	r2, [r0, #24]
   11efc:	cmp	r3, r2
   11f00:	addcc	r1, r3, #1
   11f04:	movcc	r2, #32
   11f08:	strcc	r1, [r0, #20]
   11f0c:	strbcc	r2, [r3]
   11f10:	bcs	12478 <__assert_fail@plt+0x12ec>
   11f14:	ldr	r3, [sp, #68]	; 0x44
   11f18:	ldr	r0, [r3]
   11f1c:	ldr	r3, [r0, #20]
   11f20:	ldr	r2, [r0, #24]
   11f24:	cmp	r3, r2
   11f28:	addcc	r2, r3, #1
   11f2c:	strcc	r2, [r0, #20]
   11f30:	ldrcc	r2, [sp, #128]	; 0x80
   11f34:	strbcc	r2, [r3]
   11f38:	bcs	1246c <__assert_fail@plt+0x12e0>
   11f3c:	mov	r1, r4
   11f40:	ldr	r0, [sp, #52]	; 0x34
   11f44:	bl	12788 <__assert_fail@plt+0x15fc>
   11f48:	ldr	r3, [sp, #68]	; 0x44
   11f4c:	ldr	r0, [r3]
   11f50:	ldr	r3, [r0, #20]
   11f54:	ldr	r2, [r0, #24]
   11f58:	cmp	r3, r2
   11f5c:	addcc	r2, r3, #1
   11f60:	ldrcc	r4, [sp, #76]	; 0x4c
   11f64:	strcc	r2, [r0, #20]
   11f68:	strbcc	r5, [r3]
   11f6c:	bcc	11d3c <__assert_fail@plt+0xbb0>
   11f70:	mov	r1, r5
   11f74:	bl	11108 <__overflow@plt>
   11f78:	ldr	r4, [sp, #76]	; 0x4c
   11f7c:	b	11d3c <__assert_fail@plt+0xbb0>
   11f80:	mov	r2, ip
   11f84:	add	r0, r7, r6
   11f88:	str	ip, [sp]
   11f8c:	add	r3, sp, #160	; 0xa0
   11f90:	add	r1, sp, #156	; 0x9c
   11f94:	bl	1b674 <__assert_fail@plt+0xa4e8>
   11f98:	subs	ip, r0, #0
   11f9c:	bne	1185c <__assert_fail@plt+0x6d0>
   11fa0:	ldrd	r0, [sp, #160]	; 0xa0
   11fa4:	orrs	r3, r0, r1
   11fa8:	beq	1185c <__assert_fail@plt+0x6d0>
   11fac:	ldrd	r2, [sl, #8]
   11fb0:	cmp	r1, r3
   11fb4:	cmpeq	r0, r2
   11fb8:	bhi	1185c <__assert_fail@plt+0x6d0>
   11fbc:	and	r3, r0, #7
   11fc0:	str	r3, [sp, #136]	; 0x88
   11fc4:	str	ip, [sp, #140]	; 0x8c
   11fc8:	ldrd	r2, [sp, #136]	; 0x88
   11fcc:	orrs	r3, r2, r3
   11fd0:	bne	1185c <__assert_fail@plt+0x6d0>
   11fd4:	ldr	r6, [sp, #156]	; 0x9c
   11fd8:	strd	r0, [sl, #8]
   11fdc:	sub	r6, r6, r7
   11fe0:	b	11830 <__assert_fail@plt+0x6a4>
   11fe4:	movwne	r5, #53428	; 0xd0b4
   11fe8:	movtne	r5, #1
   11fec:	bne	11e54 <__assert_fail@plt+0xcc8>
   11ff0:	b	11e38 <__assert_fail@plt+0xcac>
   11ff4:	add	r6, r6, #1
   11ff8:	subs	r4, r5, r6
   11ffc:	beq	1185c <__assert_fail@plt+0x6d0>
   12000:	subs	r4, r4, #1
   12004:	add	r9, r7, r6
   12008:	beq	12034 <__assert_fail@plt+0xea8>
   1200c:	ldrb	r2, [r9, r4]
   12010:	add	r3, r9, r4
   12014:	cmp	r2, #41	; 0x29
   12018:	bne	1202c <__assert_fail@plt+0xea0>
   1201c:	b	123f0 <__assert_fail@plt+0x1264>
   12020:	ldrb	r2, [r3, #-1]!
   12024:	cmp	r2, #41	; 0x29
   12028:	beq	123ec <__assert_fail@plt+0x1260>
   1202c:	subs	r4, r4, #1
   12030:	bne	12020 <__assert_fail@plt+0xe94>
   12034:	ldrb	r3, [r7, r6]
   12038:	cmp	r3, #41	; 0x29
   1203c:	bne	1185c <__assert_fail@plt+0x6d0>
   12040:	mov	r5, r9
   12044:	mov	r4, #0
   12048:	ldr	r3, [sp, #64]	; 0x40
   1204c:	cmp	r3, #0
   12050:	bne	12448 <__assert_fail@plt+0x12bc>
   12054:	mov	r3, #0
   12058:	add	r4, r4, #1
   1205c:	strb	r3, [r5]
   12060:	b	12068 <__assert_fail@plt+0xedc>
   12064:	add	r4, r4, #1
   12068:	ldrb	r3, [r9, r4]
   1206c:	cmp	r3, #9
   12070:	cmpne	r3, #32
   12074:	beq	12064 <__assert_fail@plt+0xed8>
   12078:	cmp	r3, #61	; 0x3d
   1207c:	bne	1185c <__assert_fail@plt+0x6d0>
   12080:	add	r4, r4, #1
   12084:	add	r3, r9, r4
   12088:	ldrb	r2, [r3]
   1208c:	mov	r4, r3
   12090:	add	r3, r3, #1
   12094:	cmp	r2, #9
   12098:	cmpne	r2, #32
   1209c:	beq	12088 <__assert_fail@plt+0xefc>
   120a0:	mov	r0, r4
   120a4:	bl	12704 <__assert_fail@plt+0x1578>
   120a8:	cmp	r0, #0
   120ac:	bne	11a10 <__assert_fail@plt+0x884>
   120b0:	b	1185c <__assert_fail@plt+0x6d0>
   120b4:	mov	r3, #0
   120b8:	b	11d10 <__assert_fail@plt+0xb84>
   120bc:	movw	r1, #54252	; 0xd3ec
   120c0:	movt	r1, #1
   120c4:	mov	r2, #5
   120c8:	mov	r5, r3
   120cc:	mov	r0, r5
   120d0:	bl	10f7c <dcgettext@plt>
   120d4:	mov	r4, r0
   120d8:	mov	r1, #3
   120dc:	ldr	r2, [sp, #52]	; 0x34
   120e0:	mov	r0, r5
   120e4:	bl	1a8dc <__assert_fail@plt+0x9750>
   120e8:	mov	r3, r0
   120ec:	mov	r2, r4
   120f0:	mov	r1, r5
   120f4:	mov	r0, r5
   120f8:	bl	11000 <error@plt>
   120fc:	mov	r4, r5
   12100:	mov	r3, r5
   12104:	b	11d10 <__assert_fail@plt+0xb84>
   12108:	mov	r1, #92	; 0x5c
   1210c:	ldr	r0, [sp, #52]	; 0x34
   12110:	bl	11084 <strchr@plt>
   12114:	cmp	r0, #0
   12118:	beq	12230 <__assert_fail@plt+0x10a4>
   1211c:	ldr	r3, [sp, #68]	; 0x44
   12120:	ldr	r0, [r3]
   12124:	ldr	r3, [r0, #20]
   12128:	ldr	r2, [r0, #24]
   1212c:	cmp	r3, r2
   12130:	addcc	r1, r3, #1
   12134:	movcc	r2, #92	; 0x5c
   12138:	strcc	r1, [r0, #20]
   1213c:	strbcc	r2, [r3]
   12140:	bcc	11e94 <__assert_fail@plt+0xd08>
   12144:	mov	r1, #92	; 0x5c
   12148:	bl	11108 <__overflow@plt>
   1214c:	b	11e94 <__assert_fail@plt+0xd08>
   12150:	mov	r2, #7
   12154:	mov	r1, #1
   12158:	ldr	r0, [sp, #44]	; 0x2c
   1215c:	ldr	r3, [sp, #68]	; 0x44
   12160:	ldr	r3, [r3]
   12164:	bl	10f58 <fwrite_unlocked@plt>
   12168:	ldrd	r2, [sl, #8]
   1216c:	mov	r1, #0
   12170:	movw	r0, #511	; 0x1ff
   12174:	cmp	r3, r1
   12178:	cmpeq	r2, r0
   1217c:	bls	12218 <__assert_fail@plt+0x108c>
   12180:	ldr	r6, [sp, #68]	; 0x44
   12184:	mov	r2, #2
   12188:	mov	r1, #1
   1218c:	movw	r0, #54616	; 0xd558
   12190:	movt	r0, #1
   12194:	ldr	r3, [r6]
   12198:	bl	10f58 <fwrite_unlocked@plt>
   1219c:	mov	r1, r4
   121a0:	ldr	r0, [sp, #52]	; 0x34
   121a4:	bl	12788 <__assert_fail@plt+0x15fc>
   121a8:	movw	r0, #54620	; 0xd55c
   121ac:	movt	r0, #1
   121b0:	ldr	r3, [r6]
   121b4:	mov	r2, #4
   121b8:	mov	r1, #1
   121bc:	bl	10f58 <fwrite_unlocked@plt>
   121c0:	ldr	r3, [sl]
   121c4:	lsrs	r3, r3, #1
   121c8:	bne	11eac <__assert_fail@plt+0xd20>
   121cc:	b	11f48 <__assert_fail@plt+0xdbc>
   121d0:	bl	11090 <__errno_location@plt>
   121d4:	ldr	r4, [r0]
   121d8:	b	11b3c <__assert_fail@plt+0x9b0>
   121dc:	ldr	r3, [sp, #104]	; 0x68
   121e0:	cmp	r3, #0
   121e4:	bne	11cd0 <__assert_fail@plt+0xb44>
   121e8:	movw	r1, #54580	; 0xd534
   121ec:	movt	r1, #1
   121f0:	ldr	r5, [sp, #104]	; 0x68
   121f4:	mov	r2, #5
   121f8:	b	120cc <__assert_fail@plt+0xf40>
   121fc:	ldr	r3, [sp, #24]
   12200:	cmp	r3, #0
   12204:	movweq	r1, #53912	; 0xd298
   12208:	moveq	r2, #5
   1220c:	movteq	r1, #1
   12210:	bne	115e0 <__assert_fail@plt+0x454>
   12214:	b	11540 <__assert_fail@plt+0x3b4>
   12218:	movw	r1, #54608	; 0xd550
   1221c:	movt	r1, #1
   12220:	mov	r0, #1
   12224:	bl	110c0 <__printf_chk@plt>
   12228:	b	12180 <__assert_fail@plt+0xff4>
   1222c:	ldrdeq	ip, [r1], -ip	; <UNPREDICTABLE>
   12230:	mov	r1, r5
   12234:	ldr	r0, [sp, #52]	; 0x34
   12238:	bl	11084 <strchr@plt>
   1223c:	cmp	r0, #0
   12240:	bne	1211c <__assert_fail@plt+0xf90>
   12244:	mov	r1, #13
   12248:	ldr	r0, [sp, #52]	; 0x34
   1224c:	bl	11084 <strchr@plt>
   12250:	cmp	r0, #0
   12254:	bne	1211c <__assert_fail@plt+0xf90>
   12258:	b	11e90 <__assert_fail@plt+0xd04>
   1225c:	ldrb	r3, [sl, #16]
   12260:	cmp	r3, #0
   12264:	beq	12274 <__assert_fail@plt+0x10e8>
   12268:	ldrb	r3, [sp, #160]	; 0xa0
   1226c:	cmp	r3, #0
   12270:	bne	11b00 <__assert_fail@plt+0x974>
   12274:	ldr	r7, [sl]
   12278:	lsrs	r7, r7, #1
   1227c:	beq	12484 <__assert_fail@plt+0x12f8>
   12280:	bl	11030 <__ctype_tolower_loc@plt>
   12284:	add	r3, r4, #1
   12288:	movw	r2, #51108	; 0xc7a4
   1228c:	movt	r2, #1
   12290:	add	r1, sp, #239	; 0xef
   12294:	str	r8, [sp, #96]	; 0x60
   12298:	mov	r5, #0
   1229c:	mov	r8, r3
   122a0:	ldr	r0, [r0]
   122a4:	b	122d0 <__assert_fail@plt+0x1144>
   122a8:	ldrb	ip, [r8, r5, lsl #1]
   122ac:	and	r3, r3, #15
   122b0:	add	r3, r2, r3
   122b4:	ldrb	r3, [r3, #280]	; 0x118
   122b8:	ldr	ip, [r0, ip, lsl #2]
   122bc:	cmp	ip, r3
   122c0:	bne	122ec <__assert_fail@plt+0x1160>
   122c4:	add	r5, r5, #1
   122c8:	cmp	r7, r5
   122cc:	beq	1236c <__assert_fail@plt+0x11e0>
   122d0:	ldrb	r3, [r1, #1]!
   122d4:	ldrb	lr, [r4, r5, lsl #1]
   122d8:	add	ip, r2, r3, lsr #4
   122dc:	ldrb	ip, [ip, #280]	; 0x118
   122e0:	ldr	lr, [r0, lr, lsl #2]
   122e4:	cmp	lr, ip
   122e8:	beq	122a8 <__assert_fail@plt+0x111c>
   122ec:	ldr	r2, [sp, #88]	; 0x58
   122f0:	ldrb	r3, [sl, #17]
   122f4:	ldr	r8, [sp, #96]	; 0x60
   122f8:	adds	r2, r2, #1
   122fc:	str	r2, [sp, #88]	; 0x58
   12300:	ldr	r2, [sp, #92]	; 0x5c
   12304:	adc	r2, r2, #0
   12308:	cmp	r3, #0
   1230c:	str	r2, [sp, #92]	; 0x5c
   12310:	bne	11b00 <__assert_fail@plt+0x974>
   12314:	cmp	r6, #0
   12318:	beq	12344 <__assert_fail@plt+0x11b8>
   1231c:	ldr	r3, [sp, #68]	; 0x44
   12320:	ldr	r0, [r3]
   12324:	ldr	r3, [r0, #20]
   12328:	ldr	r2, [r0, #24]
   1232c:	cmp	r3, r2
   12330:	addcc	r1, r3, #1
   12334:	movcc	r2, #92	; 0x5c
   12338:	strcc	r1, [r0, #20]
   1233c:	strbcc	r2, [r3]
   12340:	bcs	1248c <__assert_fail@plt+0x1300>
   12344:	mov	r0, r9
   12348:	ldr	r1, [sp, #64]	; 0x40
   1234c:	bl	12788 <__assert_fail@plt+0x15fc>
   12350:	cmp	r7, r5
   12354:	beq	1240c <__assert_fail@plt+0x1280>
   12358:	movw	r1, #54224	; 0xd3d0
   1235c:	movt	r1, #1
   12360:	mov	r2, #5
   12364:	mov	r0, #0
   12368:	b	11ae8 <__assert_fail@plt+0x95c>
   1236c:	ldr	r8, [sp, #96]	; 0x60
   12370:	mov	r5, r7
   12374:	ldrb	r3, [sl, #17]
   12378:	cmp	r3, #0
   1237c:	str	r3, [sp, #104]	; 0x68
   12380:	bne	11b00 <__assert_fail@plt+0x974>
   12384:	ldrb	r3, [sl, #19]
   12388:	cmp	r3, #0
   1238c:	str	r3, [sp, #104]	; 0x68
   12390:	bne	11b00 <__assert_fail@plt+0x974>
   12394:	cmp	r6, #0
   12398:	beq	123f8 <__assert_fail@plt+0x126c>
   1239c:	ldr	r3, [sp, #80]	; 0x50
   123a0:	str	r3, [sp, #104]	; 0x68
   123a4:	b	1231c <__assert_fail@plt+0x1190>
   123a8:	movw	r3, #57728	; 0xe180
   123ac:	movt	r3, #2
   123b0:	ldr	r0, [r3]
   123b4:	bl	184d4 <__assert_fail@plt+0x7348>
   123b8:	cmn	r0, #1
   123bc:	bne	11d60 <__assert_fail@plt+0xbd4>
   123c0:	bl	11090 <__errno_location@plt>
   123c4:	ldr	r4, [r0]
   123c8:	movw	r1, #54104	; 0xd358
   123cc:	movt	r1, #1
   123d0:	mov	r2, #5
   123d4:	mov	r0, #0
   123d8:	bl	10f7c <dcgettext@plt>
   123dc:	mov	r2, r0
   123e0:	mov	r1, r4
   123e4:	mov	r0, #1
   123e8:	bl	11000 <error@plt>
   123ec:	add	r3, r9, r4
   123f0:	mov	r5, r3
   123f4:	b	12048 <__assert_fail@plt+0xebc>
   123f8:	mov	r0, r9
   123fc:	ldr	r1, [sp, #104]	; 0x68
   12400:	bl	12788 <__assert_fail@plt+0x15fc>
   12404:	ldr	r3, [sp, #80]	; 0x50
   12408:	str	r3, [sp, #104]	; 0x68
   1240c:	ldrb	r0, [sl, #19]
   12410:	cmp	r0, #0
   12414:	bne	11b00 <__assert_fail@plt+0x974>
   12418:	mov	r2, #5
   1241c:	ldr	r1, [sp, #120]	; 0x78
   12420:	b	11ae8 <__assert_fail@plt+0x95c>
   12424:	mov	r3, #1
   12428:	str	r3, [sp, #76]	; 0x4c
   1242c:	b	11d54 <__assert_fail@plt+0xbc8>
   12430:	sub	r1, r5, r1
   12434:	mov	r0, r9
   12438:	bl	12638 <__assert_fail@plt+0x14ac>
   1243c:	adds	r0, r0, #0
   12440:	movne	r0, #1
   12444:	b	120a8 <__assert_fail@plt+0xf1c>
   12448:	mov	r1, r4
   1244c:	mov	r0, r9
   12450:	bl	12638 <__assert_fail@plt+0x14ac>
   12454:	cmp	r0, #0
   12458:	bne	12054 <__assert_fail@plt+0xec8>
   1245c:	b	1185c <__assert_fail@plt+0x6d0>
   12460:	mov	r1, #92	; 0x5c
   12464:	bl	11108 <__overflow@plt>
   12468:	b	11acc <__assert_fail@plt+0x940>
   1246c:	ldr	r1, [sp, #132]	; 0x84
   12470:	bl	11108 <__overflow@plt>
   12474:	b	11f3c <__assert_fail@plt+0xdb0>
   12478:	mov	r1, #32
   1247c:	bl	11108 <__overflow@plt>
   12480:	b	11f14 <__assert_fail@plt+0xd88>
   12484:	mov	r5, r7
   12488:	b	12374 <__assert_fail@plt+0x11e8>
   1248c:	mov	r1, #92	; 0x5c
   12490:	bl	11108 <__overflow@plt>
   12494:	b	12344 <__assert_fail@plt+0x11b8>
   12498:	ldrb	r3, [fp, #17]
   1249c:	cmp	r3, #0
   124a0:	beq	11514 <__assert_fail@plt+0x388>
   124a4:	ldr	r3, [sp, #24]
   124a8:	cmp	r3, #0
   124ac:	bne	115b8 <__assert_fail@plt+0x42c>
   124b0:	movw	r1, #53848	; 0xd258
   124b4:	movt	r1, #1
   124b8:	b	1153c <__assert_fail@plt+0x3b0>
   124bc:	mov	r2, #5
   124c0:	movw	r1, #53412	; 0xd0a4
   124c4:	movt	r1, #1
   124c8:	mov	r0, r4
   124cc:	bl	10f7c <dcgettext@plt>
   124d0:	mov	r5, r0
   124d4:	mov	r0, sl
   124d8:	bl	1aab4 <__assert_fail@plt+0x9928>
   124dc:	mov	r3, r0
   124e0:	mov	r2, r5
   124e4:	mov	r1, r4
   124e8:	mov	r0, r4
   124ec:	bl	11000 <error@plt>
   124f0:	mov	r2, #5
   124f4:	movw	r1, #53504	; 0xd100
   124f8:	movt	r1, #1
   124fc:	mov	r0, r4
   12500:	bl	10f7c <dcgettext@plt>
   12504:	mov	r5, r0
   12508:	movw	r0, #51548	; 0xc95c
   1250c:	movt	r0, #1
   12510:	bl	1aab4 <__assert_fail@plt+0x9928>
   12514:	mov	ip, #512	; 0x200
   12518:	mov	r3, r0
   1251c:	mov	r2, r5
   12520:	mov	r1, r4
   12524:	mov	r0, #1
   12528:	str	ip, [sp]
   1252c:	bl	11000 <error@plt>
   12530:	movw	r1, #53776	; 0xd210
   12534:	movt	r1, #1
   12538:	b	1153c <__assert_fail@plt+0x3b0>
   1253c:	movw	r1, #53544	; 0xd128
   12540:	movt	r1, #1
   12544:	b	1153c <__assert_fail@plt+0x3b0>
   12548:	mov	fp, #0
   1254c:	mov	lr, #0
   12550:	pop	{r1}		; (ldr r1, [sp], #4)
   12554:	mov	r2, sp
   12558:	push	{r2}		; (str r2, [sp, #-4]!)
   1255c:	push	{r0}		; (str r0, [sp, #-4]!)
   12560:	ldr	ip, [pc, #16]	; 12578 <__assert_fail@plt+0x13ec>
   12564:	push	{ip}		; (str ip, [sp, #-4]!)
   12568:	ldr	r0, [pc, #12]	; 1257c <__assert_fail@plt+0x13f0>
   1256c:	ldr	r3, [pc, #12]	; 12580 <__assert_fail@plt+0x13f4>
   12570:	bl	11018 <__libc_start_main@plt>
   12574:	bl	11168 <abort@plt>
   12578:	andeq	ip, r1, r8, ror r7
   1257c:	muleq	r1, r8, r1
   12580:	andeq	ip, r1, r8, lsl r7
   12584:	ldr	r3, [pc, #20]	; 125a0 <__assert_fail@plt+0x1414>
   12588:	ldr	r2, [pc, #20]	; 125a4 <__assert_fail@plt+0x1418>
   1258c:	add	r3, pc, r3
   12590:	ldr	r2, [r3, r2]
   12594:	cmp	r2, #0
   12598:	bxeq	lr
   1259c:	b	1103c <__gmon_start__@plt>
   125a0:	andeq	fp, r1, ip, ror #20
   125a4:	andeq	r0, r0, r4, lsl #2
   125a8:	ldr	r0, [pc, #24]	; 125c8 <__assert_fail@plt+0x143c>
   125ac:	ldr	r3, [pc, #24]	; 125cc <__assert_fail@plt+0x1440>
   125b0:	cmp	r3, r0
   125b4:	bxeq	lr
   125b8:	ldr	r3, [pc, #16]	; 125d0 <__assert_fail@plt+0x1444>
   125bc:	cmp	r3, #0
   125c0:	bxeq	lr
   125c4:	bx	r3
   125c8:	andeq	lr, r2, r4, ror #2
   125cc:	andeq	lr, r2, r4, ror #2
   125d0:	andeq	r0, r0, r0
   125d4:	ldr	r0, [pc, #36]	; 12600 <__assert_fail@plt+0x1474>
   125d8:	ldr	r1, [pc, #36]	; 12604 <__assert_fail@plt+0x1478>
   125dc:	sub	r1, r1, r0
   125e0:	asr	r1, r1, #2
   125e4:	add	r1, r1, r1, lsr #31
   125e8:	asrs	r1, r1, #1
   125ec:	bxeq	lr
   125f0:	ldr	r3, [pc, #16]	; 12608 <__assert_fail@plt+0x147c>
   125f4:	cmp	r3, #0
   125f8:	bxeq	lr
   125fc:	bx	r3
   12600:	andeq	lr, r2, r4, ror #2
   12604:	andeq	lr, r2, r4, ror #2
   12608:	andeq	r0, r0, r0
   1260c:	push	{r4, lr}
   12610:	ldr	r4, [pc, #24]	; 12630 <__assert_fail@plt+0x14a4>
   12614:	ldrb	r3, [r4]
   12618:	cmp	r3, #0
   1261c:	popne	{r4, pc}
   12620:	bl	125a8 <__assert_fail@plt+0x141c>
   12624:	mov	r3, #1
   12628:	strb	r3, [r4]
   1262c:	pop	{r4, pc}
   12630:	andeq	lr, r2, ip, lsl #3
   12634:	b	125d4 <__assert_fail@plt+0x1448>
   12638:	cmp	r1, #0
   1263c:	bxeq	lr
   12640:	add	ip, r0, #1
   12644:	mov	r2, #0
   12648:	strd	r4, [sp, #-16]!
   1264c:	mov	r5, #13
   12650:	str	r6, [sp, #8]
   12654:	mov	r6, #10
   12658:	str	lr, [sp, #12]
   1265c:	sub	lr, r1, #1
   12660:	ldrb	r3, [r0, r2]
   12664:	cmp	r3, #0
   12668:	beq	1269c <__assert_fail@plt+0x1510>
   1266c:	cmp	r3, #92	; 0x5c
   12670:	bne	126b0 <__assert_fail@plt+0x1524>
   12674:	cmp	lr, r2
   12678:	beq	1269c <__assert_fail@plt+0x1510>
   1267c:	add	r2, r2, #1
   12680:	ldrb	r3, [r0, r2]
   12684:	cmp	r3, #110	; 0x6e
   12688:	beq	126f8 <__assert_fail@plt+0x156c>
   1268c:	cmp	r3, #114	; 0x72
   12690:	beq	126ec <__assert_fail@plt+0x1560>
   12694:	cmp	r3, #92	; 0x5c
   12698:	beq	126e0 <__assert_fail@plt+0x1554>
   1269c:	mov	r0, #0
   126a0:	ldrd	r4, [sp]
   126a4:	ldr	r6, [sp, #8]
   126a8:	add	sp, sp, #12
   126ac:	pop	{pc}		; (ldr pc, [sp], #4)
   126b0:	mov	r4, ip
   126b4:	strb	r3, [ip, #-1]
   126b8:	add	r2, r2, #1
   126bc:	add	ip, ip, #1
   126c0:	cmp	r1, r2
   126c4:	bhi	12660 <__assert_fail@plt+0x14d4>
   126c8:	add	r1, r0, r1
   126cc:	cmp	r4, r1
   126d0:	bcs	126a0 <__assert_fail@plt+0x1514>
   126d4:	mov	r3, #0
   126d8:	strb	r3, [r4]
   126dc:	b	126a0 <__assert_fail@plt+0x1514>
   126e0:	mov	r4, ip
   126e4:	strb	r3, [ip, #-1]
   126e8:	b	126b8 <__assert_fail@plt+0x152c>
   126ec:	mov	r4, ip
   126f0:	strb	r5, [ip, #-1]
   126f4:	b	126b8 <__assert_fail@plt+0x152c>
   126f8:	mov	r4, ip
   126fc:	strb	r6, [ip, #-1]
   12700:	b	126b8 <__assert_fail@plt+0x152c>
   12704:	movw	r3, #57744	; 0xe190
   12708:	movt	r3, #2
   1270c:	strd	r4, [sp, #-16]!
   12710:	ldr	r4, [r3]
   12714:	mov	r5, r0
   12718:	str	r6, [sp, #8]
   1271c:	str	lr, [sp, #12]
   12720:	cmp	r4, #0
   12724:	beq	1276c <__assert_fail@plt+0x15e0>
   12728:	bl	11054 <__ctype_b_loc@plt>
   1272c:	mov	r3, r5
   12730:	add	r1, r5, r4
   12734:	ldr	ip, [r0]
   12738:	b	12744 <__assert_fail@plt+0x15b8>
   1273c:	cmp	r1, r3
   12740:	beq	1276c <__assert_fail@plt+0x15e0>
   12744:	ldrb	r2, [r3], #1
   12748:	lsl	r2, r2, #1
   1274c:	mov	r5, r3
   12750:	ldrh	r0, [ip, r2]
   12754:	ands	r0, r0, #4096	; 0x1000
   12758:	bne	1273c <__assert_fail@plt+0x15b0>
   1275c:	ldrd	r4, [sp]
   12760:	ldr	r6, [sp, #8]
   12764:	add	sp, sp, #12
   12768:	pop	{pc}		; (ldr pc, [sp], #4)
   1276c:	ldrb	r0, [r5]
   12770:	ldrd	r4, [sp]
   12774:	ldr	r6, [sp, #8]
   12778:	add	sp, sp, #12
   1277c:	clz	r0, r0
   12780:	lsr	r0, r0, #5
   12784:	pop	{pc}		; (ldr pc, [sp], #4)
   12788:	cmp	r1, #0
   1278c:	beq	12870 <__assert_fail@plt+0x16e4>
   12790:	strd	r4, [sp, #-24]!	; 0xffffffe8
   12794:	mov	r4, r0
   12798:	strd	r6, [sp, #8]
   1279c:	str	r8, [sp, #16]
   127a0:	str	lr, [sp, #20]
   127a4:	ldrb	r1, [r0]
   127a8:	cmp	r1, #0
   127ac:	beq	12834 <__assert_fail@plt+0x16a8>
   127b0:	movw	r5, #57732	; 0xe184
   127b4:	movt	r5, #2
   127b8:	movw	r8, #51408	; 0xc8d0
   127bc:	movt	r8, #1
   127c0:	movw	r7, #51412	; 0xc8d4
   127c4:	movt	r7, #1
   127c8:	movw	r6, #51404	; 0xc8cc
   127cc:	movt	r6, #1
   127d0:	b	12804 <__assert_fail@plt+0x1678>
   127d4:	cmp	r1, #10
   127d8:	beq	1285c <__assert_fail@plt+0x16d0>
   127dc:	ldr	r2, [r3, #20]
   127e0:	ldr	r0, [r3, #24]
   127e4:	add	ip, r2, #1
   127e8:	cmp	r2, r0
   127ec:	strcc	ip, [r3, #20]
   127f0:	strbcc	r1, [r2]
   127f4:	bcs	12880 <__assert_fail@plt+0x16f4>
   127f8:	ldrb	r1, [r4, #1]!
   127fc:	cmp	r1, #0
   12800:	beq	12834 <__assert_fail@plt+0x16a8>
   12804:	cmp	r1, #13
   12808:	ldr	r3, [r5]
   1280c:	beq	12848 <__assert_fail@plt+0x16bc>
   12810:	cmp	r1, #92	; 0x5c
   12814:	bne	127d4 <__assert_fail@plt+0x1648>
   12818:	mov	r1, #1
   1281c:	mov	r2, #2
   12820:	mov	r0, r7
   12824:	bl	10f58 <fwrite_unlocked@plt>
   12828:	ldrb	r1, [r4, #1]!
   1282c:	cmp	r1, #0
   12830:	bne	12804 <__assert_fail@plt+0x1678>
   12834:	ldrd	r4, [sp]
   12838:	ldrd	r6, [sp, #8]
   1283c:	ldr	r8, [sp, #16]
   12840:	add	sp, sp, #20
   12844:	pop	{pc}		; (ldr pc, [sp], #4)
   12848:	mov	r2, #2
   1284c:	mov	r1, #1
   12850:	mov	r0, r8
   12854:	bl	10f58 <fwrite_unlocked@plt>
   12858:	b	127f8 <__assert_fail@plt+0x166c>
   1285c:	mov	r2, #2
   12860:	mov	r1, #1
   12864:	mov	r0, r6
   12868:	bl	10f58 <fwrite_unlocked@plt>
   1286c:	b	127f8 <__assert_fail@plt+0x166c>
   12870:	movw	r3, #57732	; 0xe184
   12874:	movt	r3, #2
   12878:	ldr	r1, [r3]
   1287c:	b	10ec8 <fputs_unlocked@plt>
   12880:	mov	r0, r3
   12884:	bl	11108 <__overflow@plt>
   12888:	b	127f8 <__assert_fail@plt+0x166c>
   1288c:	strd	r4, [sp, #-24]!	; 0xffffffe8
   12890:	mov	r5, r2
   12894:	strd	r6, [sp, #8]
   12898:	mov	r7, r0
   1289c:	str	r8, [sp, #16]
   128a0:	mov	r8, r1
   128a4:	movw	r1, #51416	; 0xc8d8
   128a8:	movt	r1, #1
   128ac:	str	lr, [sp, #20]
   128b0:	bl	10eec <strcmp@plt>
   128b4:	mov	r3, #0
   128b8:	cmp	r0, r3
   128bc:	strb	r3, [r5]
   128c0:	bne	12954 <__assert_fail@plt+0x17c8>
   128c4:	movw	r3, #57728	; 0xe180
   128c8:	movt	r3, #2
   128cc:	ldr	r6, [r3]
   128d0:	movw	r4, #57744	; 0xe190
   128d4:	movt	r4, #2
   128d8:	mov	r5, #1
   128dc:	mov	r1, #2
   128e0:	strb	r5, [r4, #4]
   128e4:	mov	r0, r6
   128e8:	bl	18484 <__assert_fail@plt+0x72f8>
   128ec:	ldr	r3, [r4, #8]
   128f0:	mov	r1, r8
   128f4:	mov	r0, r6
   128f8:	ldr	r2, [r4, #12]
   128fc:	lsr	r3, r3, #3
   12900:	orr	r2, r3, r2, lsl #29
   12904:	bl	18274 <__assert_fail@plt+0x70e8>
   12908:	cmp	r0, #0
   1290c:	bne	12934 <__assert_fail@plt+0x17a8>
   12910:	mov	r0, r6
   12914:	mov	r4, r5
   12918:	bl	11138 <clearerr_unlocked@plt>
   1291c:	mov	r0, r4
   12920:	ldrd	r4, [sp]
   12924:	ldrd	r6, [sp, #8]
   12928:	ldr	r8, [sp, #16]
   1292c:	add	sp, sp, #20
   12930:	pop	{pc}		; (ldr pc, [sp], #4)
   12934:	bl	11090 <__errno_location@plt>
   12938:	ldr	r5, [r0]
   1293c:	mov	r0, r6
   12940:	bl	11138 <clearerr_unlocked@plt>
   12944:	cmp	r5, #0
   12948:	bne	129c4 <__assert_fail@plt+0x1838>
   1294c:	mov	r4, #1
   12950:	b	1291c <__assert_fail@plt+0x1790>
   12954:	movw	r1, #51420	; 0xc8dc
   12958:	movt	r1, #1
   1295c:	mov	r0, r7
   12960:	bl	185e8 <__assert_fail@plt+0x745c>
   12964:	subs	r4, r0, #0
   12968:	beq	12a14 <__assert_fail@plt+0x1888>
   1296c:	mov	r1, #2
   12970:	bl	18484 <__assert_fail@plt+0x72f8>
   12974:	movw	r3, #57744	; 0xe190
   12978:	movt	r3, #2
   1297c:	ldr	ip, [r3, #8]
   12980:	mov	r1, r8
   12984:	mov	r0, r4
   12988:	ldr	r2, [r3, #12]
   1298c:	lsr	ip, ip, #3
   12990:	orr	r2, ip, r2, lsl #29
   12994:	bl	18274 <__assert_fail@plt+0x70e8>
   12998:	cmp	r0, #0
   1299c:	beq	129f4 <__assert_fail@plt+0x1868>
   129a0:	bl	11090 <__errno_location@plt>
   129a4:	mov	r6, r0
   129a8:	mov	r0, r4
   129ac:	ldr	r5, [r6]
   129b0:	bl	184d4 <__assert_fail@plt+0x7348>
   129b4:	cmp	r0, #0
   129b8:	beq	12944 <__assert_fail@plt+0x17b8>
   129bc:	cmp	r5, #0
   129c0:	beq	12a0c <__assert_fail@plt+0x1880>
   129c4:	mov	r2, r7
   129c8:	mov	r1, #3
   129cc:	mov	r0, #0
   129d0:	mov	r4, r0
   129d4:	bl	1a8dc <__assert_fail@plt+0x9750>
   129d8:	mov	r3, r0
   129dc:	mov	r1, r5
   129e0:	movw	r2, #53428	; 0xd0b4
   129e4:	movt	r2, #1
   129e8:	mov	r0, r4
   129ec:	bl	11000 <error@plt>
   129f0:	b	1291c <__assert_fail@plt+0x1790>
   129f4:	mov	r0, r4
   129f8:	bl	184d4 <__assert_fail@plt+0x7348>
   129fc:	cmp	r0, #0
   12a00:	beq	1294c <__assert_fail@plt+0x17c0>
   12a04:	bl	11090 <__errno_location@plt>
   12a08:	mov	r6, r0
   12a0c:	ldr	r5, [r6]
   12a10:	b	12944 <__assert_fail@plt+0x17b8>
   12a14:	movw	r3, #57744	; 0xe190
   12a18:	movt	r3, #2
   12a1c:	ldrb	r4, [r3, #16]
   12a20:	bl	11090 <__errno_location@plt>
   12a24:	ldr	r6, [r0]
   12a28:	cmp	r4, #0
   12a2c:	beq	12a40 <__assert_fail@plt+0x18b4>
   12a30:	cmp	r6, #2
   12a34:	moveq	r3, #1
   12a38:	strbeq	r3, [r5]
   12a3c:	beq	1291c <__assert_fail@plt+0x1790>
   12a40:	mov	r2, r7
   12a44:	mov	r1, #3
   12a48:	mov	r0, #0
   12a4c:	mov	r4, r0
   12a50:	bl	1a8dc <__assert_fail@plt+0x9750>
   12a54:	mov	r3, r0
   12a58:	mov	r1, r6
   12a5c:	movw	r2, #53428	; 0xd0b4
   12a60:	movt	r2, #1
   12a64:	mov	r0, r4
   12a68:	bl	11000 <error@plt>
   12a6c:	b	1291c <__assert_fail@plt+0x1790>
   12a70:	subs	r6, r0, #0
   12a74:	str	r7, [sp, #-8]!
   12a78:	str	lr, [sp, #4]
   12a7c:	sub	sp, sp, #56	; 0x38
   12a80:	beq	12ac8 <__assert_fail@plt+0x193c>
   12a84:	movw	r3, #57720	; 0xe178
   12a88:	movt	r3, #2
   12a8c:	ldr	r4, [r3]
   12a90:	mov	r2, #5
   12a94:	movw	r1, #51432	; 0xc8e8
   12a98:	movt	r1, #1
   12a9c:	mov	r0, #0
   12aa0:	bl	10f7c <dcgettext@plt>
   12aa4:	movw	r3, #57780	; 0xe1b4
   12aa8:	movt	r3, #2
   12aac:	mov	r2, r0
   12ab0:	mov	r1, #1
   12ab4:	ldr	r3, [r3]
   12ab8:	mov	r0, r4
   12abc:	bl	110d8 <__fprintf_chk@plt>
   12ac0:	mov	r0, r6
   12ac4:	bl	11060 <exit@plt>
   12ac8:	mov	r2, #5
   12acc:	movw	r1, #51472	; 0xc910
   12ad0:	movt	r1, #1
   12ad4:	movw	r7, #57732	; 0xe184
   12ad8:	movt	r7, #2
   12adc:	bl	10f7c <dcgettext@plt>
   12ae0:	movw	r3, #57780	; 0xe1b4
   12ae4:	movt	r3, #2
   12ae8:	mov	r1, r0
   12aec:	mov	r0, #1
   12af0:	ldr	r2, [r3]
   12af4:	bl	110c0 <__printf_chk@plt>
   12af8:	mov	r2, #5
   12afc:	movw	r1, #51508	; 0xc934
   12b00:	movt	r1, #1
   12b04:	mov	r0, r6
   12b08:	bl	10f7c <dcgettext@plt>
   12b0c:	mov	r1, r0
   12b10:	mov	r3, #512	; 0x200
   12b14:	movw	r2, #51548	; 0xc95c
   12b18:	movt	r2, #1
   12b1c:	mov	r0, #1
   12b20:	bl	110c0 <__printf_chk@plt>
   12b24:	mov	r2, #5
   12b28:	movw	r1, #51556	; 0xc964
   12b2c:	movt	r1, #1
   12b30:	mov	r0, r6
   12b34:	bl	10f7c <dcgettext@plt>
   12b38:	ldr	r1, [r7]
   12b3c:	bl	10ec8 <fputs_unlocked@plt>
   12b40:	mov	r2, #5
   12b44:	movw	r1, #51612	; 0xc99c
   12b48:	movt	r1, #1
   12b4c:	mov	r0, r6
   12b50:	bl	10f7c <dcgettext@plt>
   12b54:	ldr	r1, [r7]
   12b58:	bl	10ec8 <fputs_unlocked@plt>
   12b5c:	mov	r2, #5
   12b60:	movw	r1, #51688	; 0xc9e8
   12b64:	movt	r1, #1
   12b68:	mov	r0, r6
   12b6c:	bl	10f7c <dcgettext@plt>
   12b70:	ldr	r1, [r7]
   12b74:	bl	10ec8 <fputs_unlocked@plt>
   12b78:	mov	r2, #5
   12b7c:	movw	r1, #51736	; 0xca18
   12b80:	movt	r1, #1
   12b84:	mov	r0, r6
   12b88:	bl	10f7c <dcgettext@plt>
   12b8c:	ldr	r1, [r7]
   12b90:	bl	10ec8 <fputs_unlocked@plt>
   12b94:	mov	r2, #5
   12b98:	movw	r1, #51808	; 0xca60
   12b9c:	movt	r1, #1
   12ba0:	mov	r0, r6
   12ba4:	bl	10f7c <dcgettext@plt>
   12ba8:	ldr	r1, [r7]
   12bac:	bl	10ec8 <fputs_unlocked@plt>
   12bb0:	mov	r2, #5
   12bb4:	movw	r1, #51960	; 0xcaf8
   12bb8:	movt	r1, #1
   12bbc:	mov	r0, r6
   12bc0:	bl	10f7c <dcgettext@plt>
   12bc4:	ldr	r1, [r7]
   12bc8:	bl	10ec8 <fputs_unlocked@plt>
   12bcc:	mov	r2, #5
   12bd0:	movw	r1, #52016	; 0xcb30
   12bd4:	movt	r1, #1
   12bd8:	mov	r0, r6
   12bdc:	bl	10f7c <dcgettext@plt>
   12be0:	ldr	r1, [r7]
   12be4:	bl	10ec8 <fputs_unlocked@plt>
   12be8:	mov	r2, #5
   12bec:	movw	r1, #52072	; 0xcb68
   12bf0:	movt	r1, #1
   12bf4:	mov	r0, r6
   12bf8:	bl	10f7c <dcgettext@plt>
   12bfc:	ldr	r1, [r7]
   12c00:	bl	10ec8 <fputs_unlocked@plt>
   12c04:	mov	r2, #5
   12c08:	movw	r1, #52200	; 0xcbe8
   12c0c:	movt	r1, #1
   12c10:	mov	r0, r6
   12c14:	bl	10f7c <dcgettext@plt>
   12c18:	ldr	r1, [r7]
   12c1c:	bl	10ec8 <fputs_unlocked@plt>
   12c20:	mov	r2, #5
   12c24:	movw	r1, #52640	; 0xcda0
   12c28:	movt	r1, #1
   12c2c:	mov	r0, r6
   12c30:	bl	10f7c <dcgettext@plt>
   12c34:	ldr	r1, [r7]
   12c38:	bl	10ec8 <fputs_unlocked@plt>
   12c3c:	mov	r2, #5
   12c40:	movw	r1, #52688	; 0xcdd0
   12c44:	movt	r1, #1
   12c48:	mov	r0, r6
   12c4c:	bl	10f7c <dcgettext@plt>
   12c50:	ldr	r1, [r7]
   12c54:	bl	10ec8 <fputs_unlocked@plt>
   12c58:	mov	r2, #5
   12c5c:	movw	r1, #52744	; 0xce08
   12c60:	movt	r1, #1
   12c64:	mov	r0, r6
   12c68:	bl	10f7c <dcgettext@plt>
   12c6c:	mov	r1, r0
   12c70:	movw	r2, #52788	; 0xce34
   12c74:	movt	r2, #1
   12c78:	mov	r0, #1
   12c7c:	bl	110c0 <__printf_chk@plt>
   12c80:	mov	r2, #5
   12c84:	movw	r1, #52800	; 0xce40
   12c88:	movt	r1, #1
   12c8c:	mov	r0, r6
   12c90:	bl	10f7c <dcgettext@plt>
   12c94:	ldr	r1, [r7]
   12c98:	bl	10ec8 <fputs_unlocked@plt>
   12c9c:	movw	lr, #51108	; 0xc7a4
   12ca0:	movt	lr, #1
   12ca4:	ldr	ip, [lr]
   12ca8:	ldr	r4, [lr, #4]
   12cac:	ldrd	r8, [lr, #8]
   12cb0:	subs	r1, ip, #0
   12cb4:	str	ip, [sp]
   12cb8:	ldrd	r2, [lr, #16]
   12cbc:	str	r4, [sp, #4]
   12cc0:	ldrd	r4, [lr, #24]
   12cc4:	strd	r8, [sp, #8]
   12cc8:	ldrd	r8, [lr, #32]
   12ccc:	strd	r2, [sp, #16]
   12cd0:	ldrd	r2, [lr, #40]	; 0x28
   12cd4:	strd	r4, [sp, #24]
   12cd8:	ldrd	r4, [lr, #48]	; 0x30
   12cdc:	strd	r8, [sp, #32]
   12ce0:	strd	r2, [sp, #40]	; 0x28
   12ce4:	strd	r4, [sp, #48]	; 0x30
   12ce8:	movwne	r5, #51424	; 0xc8e0
   12cec:	mov	r4, sp
   12cf0:	movtne	r5, #1
   12cf4:	bne	12dec <__assert_fail@plt+0x1c60>
   12cf8:	ldr	r4, [r4, #4]
   12cfc:	movw	r1, #53136	; 0xcf90
   12d00:	movt	r1, #1
   12d04:	mov	r2, #5
   12d08:	cmp	r4, #0
   12d0c:	beq	12e00 <__assert_fail@plt+0x1c74>
   12d10:	mov	r0, #0
   12d14:	bl	10f7c <dcgettext@plt>
   12d18:	mov	r1, r0
   12d1c:	movw	r3, #53160	; 0xcfa8
   12d20:	movt	r3, #1
   12d24:	movw	r2, #53200	; 0xcfd0
   12d28:	movt	r2, #1
   12d2c:	mov	r0, #1
   12d30:	bl	110c0 <__printf_chk@plt>
   12d34:	mov	r1, #0
   12d38:	mov	r0, #5
   12d3c:	bl	11114 <setlocale@plt>
   12d40:	cmp	r0, #0
   12d44:	movweq	r5, #51424	; 0xc8e0
   12d48:	movteq	r5, #1
   12d4c:	beq	12d70 <__assert_fail@plt+0x1be4>
   12d50:	movw	r1, #53216	; 0xcfe0
   12d54:	movt	r1, #1
   12d58:	mov	r2, #3
   12d5c:	movw	r5, #51424	; 0xc8e0
   12d60:	movt	r5, #1
   12d64:	bl	1115c <strncmp@plt>
   12d68:	cmp	r0, #0
   12d6c:	bne	12eb8 <__assert_fail@plt+0x1d2c>
   12d70:	mov	r2, #5
   12d74:	movw	r1, #53292	; 0xd02c
   12d78:	movt	r1, #1
   12d7c:	mov	r0, #0
   12d80:	bl	10f7c <dcgettext@plt>
   12d84:	mov	r1, r0
   12d88:	movw	r3, #51424	; 0xc8e0
   12d8c:	movt	r3, #1
   12d90:	movw	r2, #53160	; 0xcfa8
   12d94:	movt	r2, #1
   12d98:	mov	r0, #1
   12d9c:	bl	110c0 <__printf_chk@plt>
   12da0:	mov	r2, #5
   12da4:	movw	r1, #53320	; 0xd048
   12da8:	movt	r1, #1
   12dac:	mov	r0, #0
   12db0:	bl	10f7c <dcgettext@plt>
   12db4:	movw	r2, #54644	; 0xd574
   12db8:	movt	r2, #1
   12dbc:	cmp	r4, r5
   12dc0:	movw	r3, #52068	; 0xcb64
   12dc4:	movt	r3, #1
   12dc8:	mov	r1, r0
   12dcc:	moveq	r3, r2
   12dd0:	mov	r2, r4
   12dd4:	mov	r0, #1
   12dd8:	bl	110c0 <__printf_chk@plt>
   12ddc:	b	12ac0 <__assert_fail@plt+0x1934>
   12de0:	ldr	r1, [r4, #8]!
   12de4:	cmp	r1, #0
   12de8:	beq	12cf8 <__assert_fail@plt+0x1b6c>
   12dec:	mov	r0, r5
   12df0:	bl	10eec <strcmp@plt>
   12df4:	cmp	r0, #0
   12df8:	bne	12de0 <__assert_fail@plt+0x1c54>
   12dfc:	b	12cf8 <__assert_fail@plt+0x1b6c>
   12e00:	mov	r0, r4
   12e04:	bl	10f7c <dcgettext@plt>
   12e08:	mov	r1, r0
   12e0c:	movw	r3, #53160	; 0xcfa8
   12e10:	movt	r3, #1
   12e14:	movw	r2, #53200	; 0xcfd0
   12e18:	movt	r2, #1
   12e1c:	mov	r0, #1
   12e20:	bl	110c0 <__printf_chk@plt>
   12e24:	mov	r1, r4
   12e28:	mov	r0, #5
   12e2c:	bl	11114 <setlocale@plt>
   12e30:	cmp	r0, #0
   12e34:	beq	12e50 <__assert_fail@plt+0x1cc4>
   12e38:	movw	r1, #53216	; 0xcfe0
   12e3c:	movt	r1, #1
   12e40:	mov	r2, #3
   12e44:	bl	1115c <strncmp@plt>
   12e48:	cmp	r0, #0
   12e4c:	bne	12eac <__assert_fail@plt+0x1d20>
   12e50:	mov	r2, #5
   12e54:	movw	r1, #53292	; 0xd02c
   12e58:	movt	r1, #1
   12e5c:	mov	r0, #0
   12e60:	bl	10f7c <dcgettext@plt>
   12e64:	mov	r1, r0
   12e68:	movw	r3, #51424	; 0xc8e0
   12e6c:	movt	r3, #1
   12e70:	movw	r2, #53160	; 0xcfa8
   12e74:	movt	r2, #1
   12e78:	mov	r0, #1
   12e7c:	bl	110c0 <__printf_chk@plt>
   12e80:	movw	r1, #53320	; 0xd048
   12e84:	movt	r1, #1
   12e88:	mov	r2, #5
   12e8c:	mov	r0, #0
   12e90:	bl	10f7c <dcgettext@plt>
   12e94:	movw	r4, #51424	; 0xc8e0
   12e98:	movt	r4, #1
   12e9c:	movw	r3, #54644	; 0xd574
   12ea0:	movt	r3, #1
   12ea4:	mov	r1, r0
   12ea8:	b	12dd0 <__assert_fail@plt+0x1c44>
   12eac:	movw	r5, #51424	; 0xc8e0
   12eb0:	movt	r5, #1
   12eb4:	mov	r4, r5
   12eb8:	mov	r2, #5
   12ebc:	movw	r1, #53220	; 0xcfe4
   12ec0:	movt	r1, #1
   12ec4:	mov	r0, #0
   12ec8:	bl	10f7c <dcgettext@plt>
   12ecc:	ldr	r1, [r7]
   12ed0:	bl	10ec8 <fputs_unlocked@plt>
   12ed4:	b	12d70 <__assert_fail@plt+0x1be4>
   12ed8:	strd	r4, [sp, #-36]!	; 0xffffffdc
   12edc:	strd	r6, [sp, #8]
   12ee0:	strd	r8, [sp, #16]
   12ee4:	strd	sl, [sp, #24]
   12ee8:	str	lr, [sp, #32]
   12eec:	sub	sp, sp, #532	; 0x214
   12ef0:	add	ip, sp, #264	; 0x108
   12ef4:	add	lr, sp, #392	; 0x188
   12ef8:	ldr	r3, [r1, #4]
   12efc:	add	r1, r1, #8
   12f00:	ldr	r2, [r1, #-8]
   12f04:	str	r3, [sp, #404]	; 0x194
   12f08:	add	r3, sp, #400	; 0x190
   12f0c:	str	r2, [sp, #400]	; 0x190
   12f10:	ldrd	r2, [r3]
   12f14:	strd	r2, [ip, #8]!
   12f18:	cmp	ip, lr
   12f1c:	bne	12ef8 <__assert_fail@plt+0x1d6c>
   12f20:	sub	r1, r0, #8
   12f24:	add	lr, r0, #56	; 0x38
   12f28:	str	r1, [sp, #164]	; 0xa4
   12f2c:	str	lr, [sp, #172]	; 0xac
   12f30:	ldrd	r2, [r1, #8]!
   12f34:	cmp	r1, lr
   12f38:	strd	r2, [ip, #8]!
   12f3c:	bne	12f30 <__assert_fail@plt+0x1da4>
   12f40:	add	r2, sp, #400	; 0x190
   12f44:	add	r1, sp, #272	; 0x110
   12f48:	ldr	r4, [sp, #432]	; 0x1b0
   12f4c:	ldm	r2, {r2, r5, r9}
   12f50:	add	r3, sp, #408	; 0x198
   12f54:	movw	lr, #58983	; 0xe667
   12f58:	movt	lr, #27145	; 0x6a09
   12f5c:	ldm	r1, {r1, r6, sl, fp}
   12f60:	adds	r2, r4, r2
   12f64:	ldr	r7, [sp, #436]	; 0x1b4
   12f68:	str	r3, [sp, #168]	; 0xa8
   12f6c:	ldr	ip, [r0, #64]	; 0x40
   12f70:	str	r1, [sp, #76]	; 0x4c
   12f74:	ldr	r3, [r0, #68]	; 0x44
   12f78:	adc	r5, r7, r5
   12f7c:	adds	r2, r2, r1
   12f80:	str	r6, [sp, #80]	; 0x50
   12f84:	adc	r5, r5, r6
   12f88:	movw	r1, #51464	; 0xc908
   12f8c:	movt	r1, #62396	; 0xf3bc
   12f90:	eor	ip, ip, r2
   12f94:	strd	sl, [sp, #84]	; 0x54
   12f98:	eor	ip, ip, #-1392508928	; 0xad000000
   12f9c:	eor	r3, r3, r5
   12fa0:	eor	ip, ip, #15073280	; 0xe60000
   12fa4:	eor	r3, r3, #1358954496	; 0x51000000
   12fa8:	eor	ip, ip, #33280	; 0x8200
   12fac:	eor	r3, r3, #937984	; 0xe5000
   12fb0:	eor	ip, ip, #209	; 0xd1
   12fb4:	eor	r3, r3, #636	; 0x27c
   12fb8:	eor	r3, r3, #3
   12fbc:	adds	r1, r3, r1
   12fc0:	adc	lr, ip, lr
   12fc4:	eor	r4, r4, r1
   12fc8:	lsr	r8, r4, #24
   12fcc:	eor	r7, r7, lr
   12fd0:	adds	r2, r2, sl
   12fd4:	lsr	r6, r7, #24
   12fd8:	adc	r5, r5, fp
   12fdc:	ldr	fp, [sp, #288]	; 0x120
   12fe0:	orr	r7, r8, r7, lsl #8
   12fe4:	orr	r4, r6, r4, lsl #8
   12fe8:	ldr	sl, [sp, #440]	; 0x1b8
   12fec:	adds	r2, r2, r7
   12ff0:	adc	r5, r5, r4
   12ff4:	eor	r3, r3, r2
   12ff8:	ldr	r8, [sp, #412]	; 0x19c
   12ffc:	eor	ip, ip, r5
   13000:	str	r2, [sp, #36]	; 0x24
   13004:	lsr	r2, ip, #16
   13008:	str	r5, [sp, #40]	; 0x28
   1300c:	lsr	r5, r3, #16
   13010:	ldr	r6, [sp, #444]	; 0x1bc
   13014:	orr	r3, r2, r3, lsl #16
   13018:	str	fp, [sp, #92]	; 0x5c
   1301c:	orr	ip, r5, ip, lsl #16
   13020:	mov	r2, r3
   13024:	adds	r3, r1, ip
   13028:	mov	r5, ip
   1302c:	ldr	ip, [sp, #292]	; 0x124
   13030:	adc	lr, lr, r2
   13034:	adds	r1, sl, r9
   13038:	str	r5, [sp, #160]	; 0xa0
   1303c:	adc	r5, r6, r8
   13040:	adds	r1, r1, fp
   13044:	str	r2, [sp, #176]	; 0xb0
   13048:	str	r3, [sp, #140]	; 0x8c
   1304c:	adc	r5, r5, ip
   13050:	str	lr, [sp, #144]	; 0x90
   13054:	ldrd	r8, [sp, #140]	; 0x8c
   13058:	str	ip, [sp, #96]	; 0x60
   1305c:	movw	ip, #42811	; 0xa73b
   13060:	movt	ip, #33994	; 0x84ca
   13064:	ldr	lr, [r0, #72]	; 0x48
   13068:	ldr	r3, [r0, #76]	; 0x4c
   1306c:	eor	r4, r4, r9
   13070:	eor	r7, r7, r8
   13074:	lsl	r2, r7, #1
   13078:	lsl	fp, r4, #1
   1307c:	orr	r8, r2, r4, lsr #31
   13080:	eor	r2, r1, lr
   13084:	movw	r4, #44677	; 0xae85
   13088:	movt	r4, #47975	; 0xbb67
   1308c:	orr	r7, fp, r7, lsr #31
   13090:	eor	r3, r3, r5
   13094:	eor	r3, r3, #-1694498816	; 0x9b000000
   13098:	eor	r2, r2, #721420288	; 0x2b000000
   1309c:	eor	r3, r3, #352256	; 0x56000
   130a0:	str	r8, [sp, #236]	; 0xec
   130a4:	eor	r2, r2, #4079616	; 0x3e4000
   130a8:	str	r7, [sp, #240]	; 0xf0
   130ac:	eor	r3, r3, #2176	; 0x880
   130b0:	eor	r2, r2, #11264	; 0x2c00
   130b4:	eor	r3, r3, #12
   130b8:	eor	r2, r2, #31
   130bc:	ldr	r7, [sp, #296]	; 0x128
   130c0:	adds	ip, r3, ip
   130c4:	ldr	r8, [sp, #300]	; 0x12c
   130c8:	eor	lr, sl, ip
   130cc:	adc	r4, r2, r4
   130d0:	eor	r6, r6, r4
   130d4:	lsr	sl, r6, #24
   130d8:	ldr	r9, [sp, #416]	; 0x1a0
   130dc:	adds	r1, r1, r7
   130e0:	orr	sl, sl, lr, lsl #8
   130e4:	str	r8, [sp, #4]
   130e8:	lsr	r8, lr, #24
   130ec:	str	r7, [sp, #100]	; 0x64
   130f0:	orr	fp, r8, r6, lsl #8
   130f4:	ldr	r8, [sp, #4]
   130f8:	ldr	r6, [sp, #420]	; 0x1a4
   130fc:	ldr	r7, [sp, #448]	; 0x1c0
   13100:	adc	r5, r5, r8
   13104:	adds	r1, r1, fp
   13108:	adc	lr, r5, sl
   1310c:	eor	r3, r3, r1
   13110:	ldr	r5, [sp, #452]	; 0x1c4
   13114:	eor	r2, r2, lr
   13118:	str	r1, [sp, #68]	; 0x44
   1311c:	lsr	r8, r3, #16
   13120:	lsr	r1, r2, #16
   13124:	str	lr, [sp, #72]	; 0x48
   13128:	orr	r8, r8, r2, lsl #16
   1312c:	ldr	lr, [sp, #304]	; 0x130
   13130:	orr	r3, r1, r3, lsl #16
   13134:	adds	ip, ip, r8
   13138:	ldr	r2, [sp, #308]	; 0x134
   1313c:	eor	fp, fp, ip
   13140:	ldr	r1, [r0, #84]	; 0x54
   13144:	str	r3, [sp, #152]	; 0x98
   13148:	ldr	r3, [sp, #152]	; 0x98
   1314c:	str	r8, [sp, #224]	; 0xe0
   13150:	str	lr, [sp, #104]	; 0x68
   13154:	str	ip, [sp, #184]	; 0xb8
   13158:	str	r2, [sp, #108]	; 0x6c
   1315c:	adc	r4, r4, r3
   13160:	adds	r3, r7, r9
   13164:	ldr	r9, [sp, #312]	; 0x138
   13168:	mov	r8, r4
   1316c:	eor	sl, sl, r4
   13170:	ldr	r4, [r0, #80]	; 0x50
   13174:	adc	r6, r5, r6
   13178:	adds	r3, r3, lr
   1317c:	adc	r6, r6, r2
   13180:	lsl	ip, sl, #1
   13184:	movw	r2, #63531	; 0xf82b
   13188:	movt	r2, #65172	; 0xfe94
   1318c:	eor	r1, r1, r6
   13190:	lsl	lr, fp, #1
   13194:	eor	r1, r1, #528482304	; 0x1f800000
   13198:	orr	fp, ip, fp, lsr #31
   1319c:	str	r9, [sp, #112]	; 0x70
   131a0:	eor	r1, r1, #251904	; 0x3d800
   131a4:	orr	sl, lr, sl, lsr #31
   131a8:	movw	lr, #62322	; 0xf372
   131ac:	movt	lr, #15470	; 0x3c6e
   131b0:	eor	ip, r3, r4
   131b4:	ldr	r4, [sp, #316]	; 0x13c
   131b8:	eor	ip, ip, #-83886080	; 0xfb000000
   131bc:	eor	r1, r1, #424	; 0x1a8
   131c0:	eor	ip, ip, #4259840	; 0x410000
   131c4:	eor	r1, r1, #3
   131c8:	eor	ip, ip, #48384	; 0xbd00
   131cc:	adds	r2, r1, r2
   131d0:	eor	ip, ip, #107	; 0x6b
   131d4:	adc	lr, ip, lr
   131d8:	str	r4, [sp, #8]
   131dc:	eor	r4, r7, r2
   131e0:	eor	r5, r5, lr
   131e4:	str	r8, [sp, #188]	; 0xbc
   131e8:	lsr	r8, r4, #24
   131ec:	lsr	r7, r5, #24
   131f0:	adds	r3, r3, r9
   131f4:	orr	r5, r8, r5, lsl #8
   131f8:	ldr	r8, [sp, #8]
   131fc:	orr	r7, r7, r4, lsl #8
   13200:	ldr	r4, [sp, #320]	; 0x140
   13204:	adc	r6, r6, r8
   13208:	mov	r8, r4
   1320c:	adds	r4, r3, r5
   13210:	adc	r6, r6, r7
   13214:	eor	r1, r1, r4
   13218:	mov	r3, r6
   1321c:	lsr	r9, r1, #16
   13220:	str	r8, [sp, #116]	; 0x74
   13224:	eor	ip, ip, r3
   13228:	str	r4, [sp, #180]	; 0xb4
   1322c:	str	r3, [sp, #192]	; 0xc0
   13230:	lsr	r3, ip, #16
   13234:	orr	ip, r9, ip, lsl #16
   13238:	ldr	r4, [sp, #424]	; 0x1a8
   1323c:	orr	r3, r3, r1, lsl #16
   13240:	ldrd	r0, [r0, #88]	; 0x58
   13244:	str	ip, [sp, #156]	; 0x9c
   13248:	ldr	ip, [sp, #324]	; 0x144
   1324c:	str	r3, [sp, #244]	; 0xf4
   13250:	ldr	r6, [sp, #428]	; 0x1ac
   13254:	mov	r9, ip
   13258:	ldr	ip, [sp, #156]	; 0x9c
   1325c:	str	r9, [sp, #120]	; 0x78
   13260:	adds	r2, r2, ip
   13264:	ldr	ip, [sp, #456]	; 0x1c8
   13268:	adc	lr, lr, r3
   1326c:	eor	r5, r5, r2
   13270:	eor	r7, r7, lr
   13274:	mov	r3, r8
   13278:	lsl	r8, r5, #1
   1327c:	adds	ip, ip, r4
   13280:	ldr	r4, [sp, #460]	; 0x1cc
   13284:	adc	r4, r4, r6
   13288:	lsl	r6, r7, #1
   1328c:	adds	ip, ip, r3
   13290:	adc	r4, r4, r9
   13294:	eor	r0, r0, ip
   13298:	orr	r7, r8, r7, lsr #31
   1329c:	orr	r5, r6, r5, lsr #31
   132a0:	eor	r1, r1, r4
   132a4:	eor	r0, r0, #322961408	; 0x13400000
   132a8:	eor	r1, r1, #1526726656	; 0x5b000000
   132ac:	eor	r0, r0, #4063232	; 0x3e0000
   132b0:	ldr	r6, [sp, #456]	; 0x1c8
   132b4:	eor	r1, r1, #14680064	; 0xe00000
   132b8:	movw	r3, #14065	; 0x36f1
   132bc:	movt	r3, #24349	; 0x5f1d
   132c0:	eor	r1, r1, #52480	; 0xcd00
   132c4:	str	r7, [sp, #216]	; 0xd8
   132c8:	str	r5, [sp, #220]	; 0xdc
   132cc:	eor	r1, r1, #25
   132d0:	eor	r0, r0, #8512	; 0x2140
   132d4:	ldr	r5, [sp, #328]	; 0x148
   132d8:	adds	r3, r1, r3
   132dc:	eor	r0, r0, #57	; 0x39
   132e0:	movw	r7, #62778	; 0xf53a
   132e4:	movt	r7, #42319	; 0xa54f
   132e8:	adc	r7, r0, r7
   132ec:	eor	r6, r6, r3
   132f0:	lsr	r9, r6, #24
   132f4:	adds	ip, ip, r5
   132f8:	mov	r8, r5
   132fc:	ldr	r5, [sp, #332]	; 0x14c
   13300:	str	r5, [sp, #12]
   13304:	ldr	r5, [sp, #336]	; 0x150
   13308:	str	ip, [sp, #24]
   1330c:	ldr	ip, [sp, #340]	; 0x154
   13310:	str	r5, [sp, #16]
   13314:	ldr	r5, [sp, #460]	; 0x1cc
   13318:	str	ip, [sp, #20]
   1331c:	str	r8, [sp, #124]	; 0x7c
   13320:	ldr	ip, [sp, #344]	; 0x158
   13324:	eor	r5, r5, r7
   13328:	lsr	r8, r5, #24
   1332c:	orr	r5, r9, r5, lsl #8
   13330:	ldr	r9, [sp, #12]
   13334:	orr	r6, r8, r6, lsl #8
   13338:	adc	r4, r4, r9
   1333c:	mov	r9, ip
   13340:	ldr	ip, [sp, #24]
   13344:	str	r9, [sp, #136]	; 0x88
   13348:	adds	ip, ip, r5
   1334c:	adc	r4, r4, r6
   13350:	eor	r1, r1, ip
   13354:	mov	r8, r4
   13358:	ldr	r4, [sp, #348]	; 0x15c
   1335c:	str	r4, [sp, #24]
   13360:	lsr	r4, r1, #16
   13364:	str	ip, [sp, #196]	; 0xc4
   13368:	eor	ip, r8, r0
   1336c:	lsr	r0, ip, #16
   13370:	str	r8, [sp, #200]	; 0xc8
   13374:	ldr	r8, [sp, #352]	; 0x160
   13378:	orr	ip, r4, ip, lsl #16
   1337c:	orr	r0, r0, r1, lsl #16
   13380:	adds	r3, r3, ip
   13384:	adc	r4, r7, r0
   13388:	eor	r5, r5, r3
   1338c:	str	r8, [sp, #28]
   13390:	mov	r8, r4
   13394:	ldr	r4, [sp, #16]
   13398:	eor	r6, r6, r8
   1339c:	str	r8, [sp, #204]	; 0xcc
   133a0:	ldr	r7, [sp, #36]	; 0x24
   133a4:	ldr	r1, [sp, #356]	; 0x164
   133a8:	str	r1, [sp, #32]
   133ac:	adds	r1, r7, r4
   133b0:	ldr	r4, [sp, #40]	; 0x28
   133b4:	ldr	r7, [sp, #360]	; 0x168
   133b8:	str	r7, [sp, #36]	; 0x24
   133bc:	ldr	r7, [sp, #20]
   133c0:	adc	r7, r4, r7
   133c4:	adds	r1, r1, sl
   133c8:	ldr	r4, [sp, #364]	; 0x16c
   133cc:	adc	r7, r7, fp
   133d0:	eor	ip, ip, r1
   133d4:	eor	r0, r0, r7
   133d8:	adds	r2, r2, r0
   133dc:	adc	lr, lr, ip
   133e0:	adds	r1, r1, r9
   133e4:	str	r0, [sp, #56]	; 0x38
   133e8:	eor	sl, sl, r2
   133ec:	eor	fp, fp, lr
   133f0:	ldr	r0, [sp, #368]	; 0x170
   133f4:	lsr	r8, sl, #24
   133f8:	lsr	r9, fp, #24
   133fc:	str	r4, [sp, #40]	; 0x28
   13400:	orr	r8, r8, fp, lsl #8
   13404:	ldr	fp, [sp, #376]	; 0x178
   13408:	lsl	r4, r5, #1
   1340c:	orr	r9, r9, sl, lsl #8
   13410:	str	r0, [sp, #44]	; 0x2c
   13414:	orr	r4, r4, r6, lsr #31
   13418:	ldr	r0, [sp, #24]
   1341c:	str	fp, [sp, #52]	; 0x34
   13420:	adc	r7, r7, r0
   13424:	ldr	r0, [sp, #372]	; 0x174
   13428:	adds	sl, r1, r8
   1342c:	lsl	r1, r6, #1
   13430:	adc	r7, r7, r9
   13434:	ldr	r6, [sp, #380]	; 0x17c
   13438:	eor	ip, ip, r7
   1343c:	orr	r5, r1, r5, lsr #31
   13440:	str	r0, [sp, #48]	; 0x30
   13444:	ldr	r0, [sp, #56]	; 0x38
   13448:	str	r7, [sp, #212]	; 0xd4
   1344c:	str	r6, [sp, #56]	; 0x38
   13450:	lsr	r6, ip, #16
   13454:	str	sl, [sp, #208]	; 0xd0
   13458:	eor	r0, r0, sl
   1345c:	lsr	r7, r0, #16
   13460:	orr	r0, r6, r0, lsl #16
   13464:	orr	sl, r7, ip, lsl #16
   13468:	ldr	ip, [sp, #384]	; 0x180
   1346c:	adds	r6, r2, sl
   13470:	ldr	r2, [sp, #388]	; 0x184
   13474:	mov	r7, r6
   13478:	adc	r6, lr, r0
   1347c:	str	ip, [sp, #60]	; 0x3c
   13480:	ldr	ip, [sp, #68]	; 0x44
   13484:	str	r2, [sp, #64]	; 0x40
   13488:	str	r6, [sp, #148]	; 0x94
   1348c:	str	sl, [sp, #248]	; 0xf8
   13490:	str	r0, [sp, #252]	; 0xfc
   13494:	ldr	r6, [sp, #32]
   13498:	ldr	r0, [sp, #28]
   1349c:	ldr	sl, [sp, #160]	; 0xa0
   134a0:	ldr	r2, [sp, #176]	; 0xb0
   134a4:	adds	r1, ip, r0
   134a8:	ldr	ip, [sp, #72]	; 0x48
   134ac:	ldr	fp, [sp, #220]	; 0xdc
   134b0:	adc	lr, ip, r6
   134b4:	ldr	r6, [sp, #216]	; 0xd8
   134b8:	str	r7, [sp, #216]	; 0xd8
   134bc:	ldr	ip, [sp, #392]	; 0x188
   134c0:	adds	r1, r1, r6
   134c4:	adc	lr, lr, fp
   134c8:	str	ip, [sp, #68]	; 0x44
   134cc:	eor	ip, r1, sl
   134d0:	eor	r0, lr, r2
   134d4:	ldr	sl, [sp, #396]	; 0x18c
   134d8:	adds	r3, r3, r0
   134dc:	eor	r6, r3, r6
   134e0:	str	sl, [sp, #72]	; 0x48
   134e4:	eor	sl, r7, r8
   134e8:	str	sl, [sp, #160]	; 0xa0
   134ec:	ldr	sl, [sp, #148]	; 0x94
   134f0:	eor	r2, sl, r9
   134f4:	ldr	sl, [sp, #204]	; 0xcc
   134f8:	lsr	r9, r6, #24
   134fc:	str	r2, [sp, #176]	; 0xb0
   13500:	adc	r7, sl, ip
   13504:	mov	sl, fp
   13508:	ldr	fp, [sp, #36]	; 0x24
   1350c:	eor	r2, r7, sl
   13510:	ldr	sl, [sp, #40]	; 0x28
   13514:	orr	r9, r9, r2, lsl #8
   13518:	lsr	r8, r2, #24
   1351c:	adds	r1, r1, fp
   13520:	orr	r6, r8, r6, lsl #8
   13524:	adc	lr, lr, sl
   13528:	adds	r1, r1, r9
   1352c:	eor	r0, r0, r1
   13530:	adc	fp, lr, r6
   13534:	ldr	lr, [sp, #48]	; 0x30
   13538:	str	r1, [sp, #204]	; 0xcc
   1353c:	lsr	r1, r0, #16
   13540:	eor	ip, ip, fp
   13544:	lsr	r2, ip, #16
   13548:	str	fp, [sp, #220]	; 0xdc
   1354c:	orr	ip, r1, ip, lsl #16
   13550:	ldr	r1, [sp, #224]	; 0xe0
   13554:	orr	r0, r2, r0, lsl #16
   13558:	adds	fp, r3, ip
   1355c:	ldr	r3, [sp, #44]	; 0x2c
   13560:	adc	r7, r7, r0
   13564:	ldr	r2, [sp, #180]	; 0xb4
   13568:	mov	sl, r7
   1356c:	eor	r6, sl, r6
   13570:	str	r6, [sp, #180]	; 0xb4
   13574:	str	sl, [sp, #224]	; 0xe0
   13578:	adds	r3, r2, r3
   1357c:	ldr	r2, [sp, #192]	; 0xc0
   13580:	str	fp, [sp, #192]	; 0xc0
   13584:	adc	r2, r2, lr
   13588:	adds	r3, r3, r4
   1358c:	eor	r8, r3, r1
   13590:	ldr	r1, [sp, #152]	; 0x98
   13594:	adc	r2, r2, r5
   13598:	eor	lr, fp, r9
   1359c:	str	lr, [sp, #152]	; 0x98
   135a0:	ldr	lr, [sp, #144]	; 0x90
   135a4:	eor	r7, r2, r1
   135a8:	ldr	r1, [sp, #140]	; 0x8c
   135ac:	ldr	fp, [sp, #56]	; 0x38
   135b0:	ldr	r6, [sp, #52]	; 0x34
   135b4:	adds	r1, r1, r7
   135b8:	adc	lr, lr, r8
   135bc:	eor	r4, r4, r1
   135c0:	lsr	r9, r4, #24
   135c4:	eor	r5, r5, lr
   135c8:	adds	r3, r3, r6
   135cc:	lsr	r6, r5, #24
   135d0:	orr	r5, r9, r5, lsl #8
   135d4:	adc	r2, r2, fp
   135d8:	ldr	fp, [sp, #240]	; 0xf0
   135dc:	orr	r6, r6, r4, lsl #8
   135e0:	adds	r4, r3, r5
   135e4:	adc	r3, r2, r6
   135e8:	eor	r7, r7, r4
   135ec:	eor	r8, r8, r3
   135f0:	lsr	r2, r7, #16
   135f4:	str	r4, [sp, #228]	; 0xe4
   135f8:	str	r3, [sp, #232]	; 0xe8
   135fc:	lsr	r3, r8, #16
   13600:	orr	r4, r2, r8, lsl #16
   13604:	ldr	r2, [sp, #64]	; 0x40
   13608:	orr	r7, r3, r7, lsl #16
   1360c:	adds	r1, r1, r4
   13610:	adc	sl, lr, r7
   13614:	ldr	lr, [sp, #196]	; 0xc4
   13618:	eor	r5, r1, r5
   1361c:	str	r4, [sp, #256]	; 0x100
   13620:	ldr	r4, [sp, #60]	; 0x3c
   13624:	str	r7, [sp, #260]	; 0x104
   13628:	str	r5, [sp, #144]	; 0x90
   1362c:	ldr	r5, [sp, #184]	; 0xb8
   13630:	str	sl, [sp, #140]	; 0x8c
   13634:	adds	r3, lr, r4
   13638:	ldr	lr, [sp, #200]	; 0xc8
   1363c:	adc	r8, lr, r2
   13640:	ldr	r2, [sp, #156]	; 0x9c
   13644:	ldr	lr, [sp, #236]	; 0xec
   13648:	adds	r3, r3, lr
   1364c:	eor	r9, r3, r2
   13650:	ldr	r2, [sp, #244]	; 0xf4
   13654:	adc	r8, r8, fp
   13658:	eor	r7, r8, r2
   1365c:	adds	r2, r5, r7
   13660:	eor	r5, sl, r6
   13664:	ldr	r6, [sp, #68]	; 0x44
   13668:	eor	sl, r2, lr
   1366c:	str	r5, [sp, #156]	; 0x9c
   13670:	ldr	r5, [sp, #188]	; 0xbc
   13674:	adc	lr, r5, r9
   13678:	ldr	r5, [sp, #72]	; 0x48
   1367c:	adds	r3, r3, r6
   13680:	eor	fp, lr, fp
   13684:	lsr	r6, fp, #24
   13688:	orr	r6, r6, sl, lsl #8
   1368c:	adc	r8, r8, r5
   13690:	lsr	r5, sl, #24
   13694:	orr	r5, r5, fp, lsl #8
   13698:	adds	r3, r3, r5
   1369c:	adc	r8, r8, r6
   136a0:	eor	r7, r7, r3
   136a4:	eor	r9, r9, r8
   136a8:	lsr	sl, r7, #16
   136ac:	str	r3, [sp, #184]	; 0xb8
   136b0:	ldr	r3, [sp, #208]	; 0xd0
   136b4:	lsr	fp, r9, #16
   136b8:	orr	sl, sl, r9, lsl #16
   136bc:	str	r8, [sp, #188]	; 0xbc
   136c0:	orr	fp, fp, r7, lsl #16
   136c4:	mov	r7, r4
   136c8:	ldr	r4, [sp, #212]	; 0xd4
   136cc:	adds	r2, r2, sl
   136d0:	adc	lr, lr, fp
   136d4:	eor	r5, r5, r2
   136d8:	adds	r3, r3, r7
   136dc:	ldr	r7, [sp, #64]	; 0x40
   136e0:	eor	r6, r6, lr
   136e4:	lsl	r9, r5, #1
   136e8:	lsl	r8, r6, #1
   136ec:	orr	r6, r9, r6, lsr #31
   136f0:	ldr	r9, [sp, #28]
   136f4:	orr	r5, r8, r5, lsr #31
   136f8:	adc	r7, r4, r7
   136fc:	ldr	r4, [sp, #140]	; 0x8c
   13700:	adds	r3, r3, r6
   13704:	adc	r7, r7, r5
   13708:	eor	ip, ip, r3
   1370c:	eor	r0, r0, r7
   13710:	adds	r1, r1, r0
   13714:	eor	r6, r6, r1
   13718:	str	r0, [sp, #200]	; 0xc8
   1371c:	adc	r4, r4, ip
   13720:	ldr	r0, [sp, #32]
   13724:	lsr	r8, r6, #24
   13728:	eor	r5, r5, r4
   1372c:	adds	r3, r9, r3
   13730:	lsr	r9, r5, #24
   13734:	orr	r5, r8, r5, lsl #8
   13738:	orr	r6, r9, r6, lsl #8
   1373c:	adc	r7, r0, r7
   13740:	adds	r0, r3, r5
   13744:	adc	r3, r7, r6
   13748:	ldr	r7, [sp, #200]	; 0xc8
   1374c:	str	r0, [sp, #196]	; 0xc4
   13750:	eor	ip, ip, r3
   13754:	ldr	r8, [sp, #176]	; 0xb0
   13758:	str	r3, [sp, #200]	; 0xc8
   1375c:	lsr	r3, ip, #16
   13760:	eor	r7, r7, r0
   13764:	mov	r0, r7
   13768:	lsr	r7, r7, #16
   1376c:	orr	r9, r3, r0, lsl #16
   13770:	orr	ip, r7, ip, lsl #16
   13774:	lsl	r3, r8, #1
   13778:	adds	r1, r1, ip
   1377c:	str	ip, [sp, #236]	; 0xec
   13780:	mov	r7, r1
   13784:	adc	r1, r4, r9
   13788:	ldr	r4, [sp, #108]	; 0x6c
   1378c:	str	r1, [sp, #140]	; 0x8c
   13790:	ldr	ip, [sp, #160]	; 0xa0
   13794:	str	r9, [sp, #240]	; 0xf0
   13798:	ldr	r9, [sp, #104]	; 0x68
   1379c:	ldr	r1, [sp, #204]	; 0xcc
   137a0:	orr	r3, r3, ip, lsr #31
   137a4:	str	r7, [sp, #204]	; 0xcc
   137a8:	lsl	r0, ip, #1
   137ac:	ldr	ip, [sp, #220]	; 0xdc
   137b0:	orr	r0, r0, r8, lsr #31
   137b4:	adds	r1, r9, r1
   137b8:	ldr	r9, [sp, #20]
   137bc:	adc	ip, r4, ip
   137c0:	eor	r4, r7, r5
   137c4:	ldr	r7, [sp, #16]
   137c8:	adds	r1, r1, r0
   137cc:	ldr	r5, [sp, #140]	; 0x8c
   137d0:	adc	ip, ip, r3
   137d4:	str	r4, [sp, #160]	; 0xa0
   137d8:	ldr	r4, [sp, #256]	; 0x100
   137dc:	eor	r6, r5, r6
   137e0:	ldr	r5, [sp, #260]	; 0x104
   137e4:	str	r6, [sp, #176]	; 0xb0
   137e8:	eor	r6, r1, r4
   137ec:	eor	r5, ip, r5
   137f0:	adds	r2, r2, r5
   137f4:	adc	lr, lr, r6
   137f8:	eor	r0, r0, r2
   137fc:	eor	r3, r3, lr
   13800:	lsr	r4, r0, #24
   13804:	adds	r1, r7, r1
   13808:	lsr	r7, r3, #24
   1380c:	adc	ip, r9, ip
   13810:	orr	r4, r4, r3, lsl #8
   13814:	orr	r0, r7, r0, lsl #8
   13818:	adds	r1, r1, r4
   1381c:	adc	ip, ip, r0
   13820:	eor	r5, r5, r1
   13824:	eor	r6, r6, ip
   13828:	lsr	r7, r5, #16
   1382c:	str	r1, [sp, #208]	; 0xd0
   13830:	lsr	r3, r6, #16
   13834:	str	ip, [sp, #212]	; 0xd4
   13838:	orr	r1, r7, r6, lsl #16
   1383c:	ldr	r6, [sp, #180]	; 0xb4
   13840:	orr	r5, r3, r5, lsl #16
   13844:	ldr	ip, [sp, #228]	; 0xe4
   13848:	str	r1, [sp, #244]	; 0xf4
   1384c:	adds	r1, r2, r1
   13850:	adc	lr, lr, r5
   13854:	ldr	r2, [sp, #152]	; 0x98
   13858:	eor	r4, r4, r1
   1385c:	lsl	r9, r6, #1
   13860:	mov	r7, lr
   13864:	str	r1, [sp, #220]	; 0xdc
   13868:	str	r5, [sp, #256]	; 0x100
   1386c:	eor	r1, r7, r0
   13870:	ldr	r5, [sp, #136]	; 0x88
   13874:	str	r7, [sp, #228]	; 0xe4
   13878:	orr	lr, r9, r2, lsr #31
   1387c:	lsl	r3, r2, #1
   13880:	ldr	r2, [sp, #232]	; 0xe8
   13884:	adds	ip, r5, ip
   13888:	ldr	r5, [sp, #24]
   1388c:	orr	r3, r3, r6, lsr #31
   13890:	adc	r2, r5, r2
   13894:	ldr	r5, [sp, #216]	; 0xd8
   13898:	adds	ip, ip, r3
   1389c:	adc	r2, r2, lr
   138a0:	eor	sl, sl, ip
   138a4:	eor	fp, fp, r2
   138a8:	adds	r0, r5, fp
   138ac:	ldr	r5, [sp, #148]	; 0x94
   138b0:	eor	r3, r3, r0
   138b4:	ldr	r8, [sp, #72]	; 0x48
   138b8:	lsr	r7, r3, #24
   138bc:	adc	r6, r5, sl
   138c0:	ldr	r5, [sp, #68]	; 0x44
   138c4:	eor	lr, lr, r6
   138c8:	adds	ip, r5, ip
   138cc:	lsr	r5, lr, #24
   138d0:	orr	lr, r7, lr, lsl #8
   138d4:	adc	r2, r8, r2
   138d8:	ldr	r8, [sp, #188]	; 0xbc
   138dc:	orr	r3, r5, r3, lsl #8
   138e0:	adds	ip, ip, lr
   138e4:	adc	r2, r2, r3
   138e8:	eor	fp, fp, ip
   138ec:	eor	sl, sl, r2
   138f0:	str	ip, [sp, #180]	; 0xb4
   138f4:	lsr	ip, fp, #16
   138f8:	str	r2, [sp, #216]	; 0xd8
   138fc:	lsr	r2, sl, #16
   13900:	orr	r7, ip, sl, lsl #16
   13904:	ldr	sl, [sp, #156]	; 0x9c
   13908:	orr	fp, r2, fp, lsl #16
   1390c:	adds	r0, r0, r7
   13910:	ldr	r2, [sp, #184]	; 0xb8
   13914:	mov	r5, fp
   13918:	adc	r6, r6, fp
   1391c:	str	r7, [sp, #232]	; 0xe8
   13920:	ldr	fp, [sp, #144]	; 0x90
   13924:	eor	r3, r6, r3
   13928:	eor	lr, r0, lr
   1392c:	lsl	r7, r1, #1
   13930:	str	r5, [sp, #260]	; 0x104
   13934:	ldr	r5, [sp, #52]	; 0x34
   13938:	orr	r7, r7, r4, lsr #31
   1393c:	str	lr, [sp, #148]	; 0x94
   13940:	lsl	lr, sl, #1
   13944:	lsl	ip, fp, #1
   13948:	str	r3, [sp, #152]	; 0x98
   1394c:	ldr	r3, [sp, #248]	; 0xf8
   13950:	orr	lr, lr, fp, lsr #31
   13954:	orr	ip, ip, sl, lsr #31
   13958:	adds	r2, r5, r2
   1395c:	ldr	r5, [sp, #56]	; 0x38
   13960:	ldr	sl, [sp, #224]	; 0xe0
   13964:	adc	r8, r5, r8
   13968:	adds	r2, r2, ip
   1396c:	eor	r9, r2, r3
   13970:	lsl	r3, r4, #1
   13974:	ldr	r4, [sp, #252]	; 0xfc
   13978:	adc	r8, r8, lr
   1397c:	orr	r3, r3, r1, lsr #31
   13980:	ldr	r1, [sp, #192]	; 0xc0
   13984:	eor	r4, r8, r4
   13988:	adds	r1, r1, r4
   1398c:	adc	r5, sl, r9
   13990:	ldr	sl, [sp, #116]	; 0x74
   13994:	eor	ip, ip, r1
   13998:	eor	lr, lr, r5
   1399c:	lsr	fp, ip, #24
   139a0:	str	r5, [sp, #144]	; 0x90
   139a4:	ldr	r5, [sp, #120]	; 0x78
   139a8:	adds	r2, sl, r2
   139ac:	lsr	sl, lr, #24
   139b0:	orr	lr, fp, lr, lsl #8
   139b4:	orr	ip, sl, ip, lsl #8
   139b8:	ldr	sl, [sp, #84]	; 0x54
   139bc:	adc	r8, r5, r8
   139c0:	adds	fp, r2, lr
   139c4:	mov	r2, fp
   139c8:	adc	fp, r8, ip
   139cc:	ldr	r5, [sp, #144]	; 0x90
   139d0:	eor	r9, r9, fp
   139d4:	eor	r4, r4, r2
   139d8:	str	r2, [sp, #188]	; 0xbc
   139dc:	lsr	r2, r9, #16
   139e0:	lsr	r8, r4, #16
   139e4:	orr	r4, r2, r4, lsl #16
   139e8:	ldr	r2, [sp, #196]	; 0xc4
   139ec:	orr	r8, r8, r9, lsl #16
   139f0:	ldr	r9, [sp, #88]	; 0x58
   139f4:	adds	r1, r1, r8
   139f8:	adc	r5, r5, r4
   139fc:	eor	lr, lr, r1
   13a00:	adds	r2, sl, r2
   13a04:	ldr	sl, [sp, #200]	; 0xc8
   13a08:	eor	ip, ip, r5
   13a0c:	adc	r9, r9, sl
   13a10:	adds	r2, r2, r3
   13a14:	adc	r9, r9, r7
   13a18:	eor	sl, r2, r8
   13a1c:	eor	r4, r4, r9
   13a20:	adds	r0, r0, r4
   13a24:	eor	r3, r3, r0
   13a28:	adc	r6, r6, sl
   13a2c:	lsr	r8, r3, #24
   13a30:	eor	r7, r7, r6
   13a34:	str	r3, [sp, #156]	; 0x9c
   13a38:	ldr	r3, [sp, #44]	; 0x2c
   13a3c:	adds	r2, r3, r2
   13a40:	lsr	r3, r7, #24
   13a44:	orr	r7, r8, r7, lsl #8
   13a48:	str	r3, [sp, #144]	; 0x90
   13a4c:	ldr	r3, [sp, #48]	; 0x30
   13a50:	adc	r9, r3, r9
   13a54:	ldr	r3, [sp, #144]	; 0x90
   13a58:	adds	r2, r2, r7
   13a5c:	eor	r4, r4, r2
   13a60:	ldr	r8, [sp, #156]	; 0x9c
   13a64:	str	r2, [sp, #192]	; 0xc0
   13a68:	orr	r3, r3, r8, lsl #8
   13a6c:	adc	r8, r9, r3
   13a70:	lsr	r9, r4, #16
   13a74:	str	r8, [sp, #196]	; 0xc4
   13a78:	eor	r8, r8, sl
   13a7c:	lsr	r2, r8, #16
   13a80:	orr	sl, r9, r8, lsl #16
   13a84:	ldr	r9, [sp, #152]	; 0x98
   13a88:	orr	r4, r2, r4, lsl #16
   13a8c:	adds	r0, r0, sl
   13a90:	mov	r8, r4
   13a94:	adc	r6, r6, r8
   13a98:	str	r0, [sp, #144]	; 0x90
   13a9c:	str	sl, [sp, #248]	; 0xf8
   13aa0:	lsl	r4, r9, #1
   13aa4:	ldr	r0, [sp, #76]	; 0x4c
   13aa8:	str	r8, [sp, #252]	; 0xfc
   13aac:	ldr	sl, [sp, #148]	; 0x94
   13ab0:	str	r6, [sp, #148]	; 0x94
   13ab4:	ldr	r6, [sp, #208]	; 0xd0
   13ab8:	lsl	r2, sl, #1
   13abc:	adds	r8, r0, r6
   13ac0:	orr	r6, r4, sl, lsr #31
   13ac4:	ldr	r4, [sp, #80]	; 0x50
   13ac8:	orr	r2, r2, r9, lsr #31
   13acc:	ldr	sl, [sp, #96]	; 0x60
   13ad0:	ldr	r0, [sp, #212]	; 0xd4
   13ad4:	adc	r0, r4, r0
   13ad8:	ldr	r4, [sp, #144]	; 0x90
   13adc:	adds	r8, r8, r2
   13ae0:	eor	r4, r4, r7
   13ae4:	ldr	r7, [sp, #92]	; 0x5c
   13ae8:	str	r4, [sp, #152]	; 0x98
   13aec:	ldr	r4, [sp, #148]	; 0x94
   13af0:	eor	r3, r4, r3
   13af4:	str	r3, [sp, #156]	; 0x9c
   13af8:	adc	r3, r0, r6
   13afc:	ldr	r0, [sp, #236]	; 0xec
   13b00:	eor	r4, r8, r0
   13b04:	ldr	r0, [sp, #240]	; 0xf0
   13b08:	eor	r0, r3, r0
   13b0c:	adds	r1, r1, r0
   13b10:	adc	r5, r5, r4
   13b14:	eor	r2, r2, r1
   13b18:	eor	r9, r5, r6
   13b1c:	lsr	r6, r2, #24
   13b20:	adds	r8, r7, r8
   13b24:	lsr	r7, r9, #24
   13b28:	adc	r3, sl, r3
   13b2c:	orr	r6, r6, r9, lsl #8
   13b30:	orr	r2, r7, r2, lsl #8
   13b34:	adds	r9, r8, r6
   13b38:	lsl	r8, ip, #1
   13b3c:	adc	r3, r3, r2
   13b40:	eor	r0, r0, r9
   13b44:	mov	sl, r3
   13b48:	lsr	r7, r0, #16
   13b4c:	str	r9, [sp, #200]	; 0xc8
   13b50:	eor	r4, r4, sl
   13b54:	lsr	r3, r4, #16
   13b58:	str	sl, [sp, #208]	; 0xd0
   13b5c:	orr	r4, r7, r4, lsl #16
   13b60:	orr	r0, r3, r0, lsl #16
   13b64:	ldr	r3, [sp, #180]	; 0xb4
   13b68:	adds	r1, r1, r4
   13b6c:	lsl	r7, lr, #1
   13b70:	mov	r9, r1
   13b74:	adc	r1, r5, r0
   13b78:	orr	lr, r8, lr, lsr #31
   13b7c:	mov	r5, r1
   13b80:	ldr	r1, [sp, #36]	; 0x24
   13b84:	eor	r6, r9, r6
   13b88:	orr	ip, r7, ip, lsr #31
   13b8c:	str	r6, [sp, #180]	; 0xb4
   13b90:	mov	r6, r5
   13b94:	ldr	r8, [sp, #216]	; 0xd8
   13b98:	eor	r6, r6, r2
   13b9c:	adds	r3, r1, r3
   13ba0:	ldr	r1, [sp, #40]	; 0x28
   13ba4:	str	r6, [sp, #184]	; 0xb8
   13ba8:	ldr	r2, [sp, #244]	; 0xf4
   13bac:	str	r9, [sp, #212]	; 0xd4
   13bb0:	str	r5, [sp, #216]	; 0xd8
   13bb4:	adc	r1, r1, r8
   13bb8:	adds	r3, r3, ip
   13bbc:	ldr	sl, [sp, #140]	; 0x8c
   13bc0:	adc	r1, r1, lr
   13bc4:	eor	r7, r3, r2
   13bc8:	ldr	r8, [sp, #124]	; 0x7c
   13bcc:	ldr	r2, [sp, #256]	; 0x100
   13bd0:	eor	r6, r1, r2
   13bd4:	ldr	r2, [sp, #204]	; 0xcc
   13bd8:	adds	r2, r2, r6
   13bdc:	adc	r5, sl, r7
   13be0:	eor	ip, ip, r2
   13be4:	ldr	sl, [sp, #12]
   13be8:	eor	lr, lr, r5
   13bec:	lsr	r9, ip, #24
   13bf0:	adds	r3, r8, r3
   13bf4:	lsr	r8, lr, #24
   13bf8:	orr	lr, r9, lr, lsl #8
   13bfc:	orr	ip, r8, ip, lsl #8
   13c00:	ldr	r8, [sp, #188]	; 0xbc
   13c04:	adc	r1, sl, r1
   13c08:	adds	r3, r3, lr
   13c0c:	adc	r1, r1, ip
   13c10:	eor	r6, r6, r3
   13c14:	ldr	sl, [sp, #176]	; 0xb0
   13c18:	eor	r7, r7, r1
   13c1c:	str	r3, [sp, #204]	; 0xcc
   13c20:	lsr	r3, r7, #16
   13c24:	str	r1, [sp, #224]	; 0xe0
   13c28:	lsr	r1, r6, #16
   13c2c:	orr	r3, r3, r6, lsl #16
   13c30:	ldr	r6, [sp, #160]	; 0xa0
   13c34:	orr	r1, r1, r7, lsl #16
   13c38:	lsl	r9, sl, #1
   13c3c:	adds	r2, r2, r1
   13c40:	adc	r5, r5, r3
   13c44:	str	r1, [sp, #236]	; 0xec
   13c48:	str	r3, [sp, #240]	; 0xf0
   13c4c:	orr	r9, r9, r6, lsr #31
   13c50:	eor	ip, r5, ip
   13c54:	ldr	r3, [sp, #112]	; 0x70
   13c58:	lsl	r7, r6, #1
   13c5c:	str	ip, [sp, #176]	; 0xb0
   13c60:	ldr	r6, [sp, #8]
   13c64:	orr	r7, r7, sl, lsr #31
   13c68:	adds	r1, r3, r8
   13c6c:	adc	r8, r6, fp
   13c70:	eor	fp, r2, lr
   13c74:	ldr	lr, [sp, #260]	; 0x104
   13c78:	adds	r1, r1, r7
   13c7c:	adc	ip, r8, r9
   13c80:	str	fp, [sp, #160]	; 0xa0
   13c84:	ldr	r8, [sp, #100]	; 0x64
   13c88:	eor	sl, ip, lr
   13c8c:	ldr	lr, [sp, #220]	; 0xdc
   13c90:	ldr	fp, [sp, #232]	; 0xe8
   13c94:	adds	r3, lr, sl
   13c98:	ldr	lr, [sp, #228]	; 0xe4
   13c9c:	eor	r7, r7, r3
   13ca0:	eor	fp, r1, fp
   13ca4:	lsr	r6, r7, #24
   13ca8:	adc	lr, lr, fp
   13cac:	adds	r1, r8, r1
   13cb0:	eor	r9, r9, lr
   13cb4:	lsr	r8, r9, #24
   13cb8:	orr	r6, r6, r9, lsl #8
   13cbc:	str	r8, [sp, #140]	; 0x8c
   13cc0:	ldr	r8, [sp, #4]
   13cc4:	adc	ip, r8, ip
   13cc8:	ldr	r8, [sp, #140]	; 0x8c
   13ccc:	adds	r1, r1, r6
   13cd0:	eor	sl, sl, r1
   13cd4:	str	r1, [sp, #188]	; 0xbc
   13cd8:	orr	r7, r8, r7, lsl #8
   13cdc:	adc	ip, ip, r7
   13ce0:	mov	r8, ip
   13ce4:	lsr	ip, sl, #16
   13ce8:	eor	fp, fp, r8
   13cec:	lsr	r1, fp, #16
   13cf0:	str	r8, [sp, #220]	; 0xdc
   13cf4:	orr	fp, ip, fp, lsl #16
   13cf8:	ldr	ip, [sp, #36]	; 0x24
   13cfc:	orr	sl, r1, sl, lsl #16
   13d00:	adds	r3, r3, fp
   13d04:	adc	r1, lr, sl
   13d08:	eor	r6, r6, r3
   13d0c:	ldr	lr, [sp, #196]	; 0xc4
   13d10:	eor	r7, r7, r1
   13d14:	lsl	r9, r6, #1
   13d18:	str	r1, [sp, #228]	; 0xe4
   13d1c:	lsl	r8, r7, #1
   13d20:	ldr	r1, [sp, #192]	; 0xc0
   13d24:	orr	r7, r9, r7, lsr #31
   13d28:	orr	r6, r8, r6, lsr #31
   13d2c:	ldr	r9, [sp, #16]
   13d30:	adds	r1, ip, r1
   13d34:	ldr	ip, [sp, #40]	; 0x28
   13d38:	adc	ip, ip, lr
   13d3c:	adds	r1, r1, r7
   13d40:	adc	ip, ip, r6
   13d44:	eor	r4, r4, r1
   13d48:	eor	r0, r0, ip
   13d4c:	adds	r2, r2, r0
   13d50:	adc	r5, r5, r4
   13d54:	eor	r7, r7, r2
   13d58:	adds	lr, r9, r1
   13d5c:	ldr	r1, [sp, #20]
   13d60:	eor	r6, r6, r5
   13d64:	lsr	r8, r7, #24
   13d68:	lsr	r9, r6, #24
   13d6c:	orr	r6, r8, r6, lsl #8
   13d70:	orr	r7, r9, r7, lsl #8
   13d74:	adc	ip, r1, ip
   13d78:	adds	lr, lr, r6
   13d7c:	adc	ip, ip, r7
   13d80:	eor	r0, r0, lr
   13d84:	eor	r4, r4, ip
   13d88:	str	lr, [sp, #192]	; 0xc0
   13d8c:	str	ip, [sp, #196]	; 0xc4
   13d90:	lsr	ip, r0, #16
   13d94:	lsr	r1, r4, #16
   13d98:	ldr	lr, [sp, #156]	; 0x9c
   13d9c:	orr	r4, ip, r4, lsl #16
   13da0:	orr	r0, r1, r0, lsl #16
   13da4:	ldr	ip, [sp, #152]	; 0x98
   13da8:	adds	r2, r2, r4
   13dac:	mov	r8, r0
   13db0:	str	r4, [sp, #232]	; 0xe8
   13db4:	mov	r9, r2
   13db8:	ldr	r0, [sp, #44]	; 0x2c
   13dbc:	lsl	r1, lr, #1
   13dc0:	adc	r5, r5, r8
   13dc4:	eor	r6, r9, r6
   13dc8:	ldr	r4, [sp, #200]	; 0xc8
   13dcc:	orr	r1, r1, ip, lsr #31
   13dd0:	lsl	r2, ip, #1
   13dd4:	str	r8, [sp, #244]	; 0xf4
   13dd8:	ldr	ip, [sp, #208]	; 0xd0
   13ddc:	str	r5, [sp, #140]	; 0x8c
   13de0:	orr	r2, r2, lr, lsr #31
   13de4:	ldr	r5, [sp, #76]	; 0x4c
   13de8:	adds	r8, r0, r4
   13dec:	str	r9, [sp, #200]	; 0xc8
   13df0:	ldr	r4, [sp, #48]	; 0x30
   13df4:	adc	r0, r4, ip
   13df8:	ldr	r4, [sp, #140]	; 0x8c
   13dfc:	adds	r8, r8, r2
   13e00:	adc	r0, r0, r1
   13e04:	ldr	ip, [sp, #236]	; 0xec
   13e08:	eor	r7, r4, r7
   13e0c:	ldr	r4, [sp, #228]	; 0xe4
   13e10:	strd	r6, [sp, #152]	; 0x98
   13e14:	eor	r6, r8, ip
   13e18:	ldr	r7, [sp, #80]	; 0x50
   13e1c:	ldr	ip, [sp, #240]	; 0xf0
   13e20:	eor	ip, r0, ip
   13e24:	adds	r3, r3, ip
   13e28:	adc	lr, r4, r6
   13e2c:	eor	r2, r2, r3
   13e30:	eor	r1, r1, lr
   13e34:	lsr	r4, r2, #24
   13e38:	adds	r8, r5, r8
   13e3c:	lsr	r5, r1, #24
   13e40:	adc	r0, r7, r0
   13e44:	orr	r4, r4, r1, lsl #8
   13e48:	orr	r5, r5, r2, lsl #8
   13e4c:	adds	r2, r8, r4
   13e50:	adc	r7, r0, r5
   13e54:	eor	ip, ip, r2
   13e58:	ldr	r0, [sp, #184]	; 0xb8
   13e5c:	eor	r6, r6, r7
   13e60:	str	r2, [sp, #208]	; 0xd0
   13e64:	str	r7, [sp, #228]	; 0xe4
   13e68:	lsr	r7, ip, #16
   13e6c:	lsr	r2, r6, #16
   13e70:	orr	r1, r7, r6, lsl #16
   13e74:	orr	r2, r2, ip, lsl #16
   13e78:	adds	r3, r3, r1
   13e7c:	lsl	ip, r0, #1
   13e80:	mov	r7, r3
   13e84:	mov	r6, r2
   13e88:	adc	r3, lr, r2
   13e8c:	ldr	r2, [sp, #180]	; 0xb4
   13e90:	eor	r4, r4, r7
   13e94:	mov	r9, r3
   13e98:	str	r7, [sp, #184]	; 0xb8
   13e9c:	ldr	r3, [sp, #112]	; 0x70
   13ea0:	eor	r5, r5, r9
   13ea4:	str	r1, [sp, #236]	; 0xec
   13ea8:	ldr	lr, [sp, #204]	; 0xcc
   13eac:	orr	ip, ip, r2, lsr #31
   13eb0:	str	r6, [sp, #240]	; 0xf0
   13eb4:	lsl	r1, r2, #1
   13eb8:	ldr	r6, [sp, #8]
   13ebc:	str	r9, [sp, #204]	; 0xcc
   13ec0:	ldr	r2, [sp, #224]	; 0xe0
   13ec4:	orr	r7, r1, r0, lsr #31
   13ec8:	adds	r3, r3, lr
   13ecc:	ldr	r8, [sp, #92]	; 0x5c
   13ed0:	ldr	lr, [sp, #144]	; 0x90
   13ed4:	adc	r2, r6, r2
   13ed8:	adds	r3, r3, r7
   13edc:	adc	r2, r2, ip
   13ee0:	eor	fp, fp, r3
   13ee4:	eor	sl, sl, r2
   13ee8:	adds	r0, lr, sl
   13eec:	ldr	lr, [sp, #148]	; 0x94
   13ef0:	eor	r1, r0, r7
   13ef4:	ldr	r7, [sp, #96]	; 0x60
   13ef8:	adc	r6, lr, fp
   13efc:	lsr	lr, r1, #24
   13f00:	adds	r3, r8, r3
   13f04:	eor	ip, ip, r6
   13f08:	ldr	r8, [sp, #220]	; 0xdc
   13f0c:	lsr	r9, ip, #24
   13f10:	adc	r2, r7, r2
   13f14:	orr	lr, lr, ip, lsl #8
   13f18:	orr	r9, r9, r1, lsl #8
   13f1c:	ldr	r1, [sp, #188]	; 0xbc
   13f20:	adds	r3, r3, lr
   13f24:	lsl	r7, r5, #1
   13f28:	adc	r2, r2, r9
   13f2c:	eor	sl, sl, r3
   13f30:	eor	fp, fp, r2
   13f34:	str	r3, [sp, #180]	; 0xb4
   13f38:	orr	r7, r7, r4, lsr #31
   13f3c:	str	r2, [sp, #224]	; 0xe0
   13f40:	lsr	r2, sl, #16
   13f44:	lsr	r3, fp, #16
   13f48:	orr	fp, r2, fp, lsl #16
   13f4c:	orr	sl, r3, sl, lsl #16
   13f50:	ldr	r3, [sp, #160]	; 0xa0
   13f54:	adds	r0, r0, fp
   13f58:	str	fp, [sp, #256]	; 0x100
   13f5c:	adc	r6, r6, sl
   13f60:	ldr	fp, [sp, #68]	; 0x44
   13f64:	str	sl, [sp, #260]	; 0x104
   13f68:	lsl	ip, r3, #1
   13f6c:	ldr	sl, [sp, #52]	; 0x34
   13f70:	adds	r2, fp, r1
   13f74:	ldr	r1, [sp, #72]	; 0x48
   13f78:	ldr	fp, [sp, #176]	; 0xb0
   13f7c:	adc	r8, r1, r8
   13f80:	eor	r1, r0, lr
   13f84:	orr	ip, ip, fp, lsr #31
   13f88:	str	r1, [sp, #148]	; 0x94
   13f8c:	eor	r1, r6, r9
   13f90:	lsl	lr, fp, #1
   13f94:	ldr	fp, [sp, #248]	; 0xf8
   13f98:	adds	r2, r2, ip
   13f9c:	str	r1, [sp, #160]	; 0xa0
   13fa0:	orr	lr, lr, r3, lsr #31
   13fa4:	lsl	r3, r4, #1
   13fa8:	ldr	r4, [sp, #252]	; 0xfc
   13fac:	adc	r8, r8, lr
   13fb0:	eor	r9, r2, fp
   13fb4:	ldr	fp, [sp, #212]	; 0xd4
   13fb8:	orr	r3, r3, r5, lsr #31
   13fbc:	eor	r4, r8, r4
   13fc0:	adds	r1, fp, r4
   13fc4:	ldr	fp, [sp, #216]	; 0xd8
   13fc8:	eor	ip, ip, r1
   13fcc:	adc	r5, fp, r9
   13fd0:	ldr	fp, [sp, #56]	; 0x38
   13fd4:	adds	r2, sl, r2
   13fd8:	eor	lr, lr, r5
   13fdc:	lsr	sl, lr, #24
   13fe0:	adc	r8, fp, r8
   13fe4:	lsr	fp, ip, #24
   13fe8:	orr	ip, sl, ip, lsl #8
   13fec:	orr	lr, fp, lr, lsl #8
   13ff0:	adds	fp, r2, lr
   13ff4:	mov	sl, fp
   13ff8:	adc	fp, r8, ip
   13ffc:	eor	r9, r9, fp
   14000:	eor	r4, r4, sl
   14004:	lsr	r2, r9, #16
   14008:	str	sl, [sp, #188]	; 0xbc
   1400c:	lsr	r8, r4, #16
   14010:	ldr	sl, [sp, #32]
   14014:	orr	r4, r2, r4, lsl #16
   14018:	orr	r8, r8, r9, lsl #16
   1401c:	ldr	r2, [sp, #28]
   14020:	ldr	r9, [sp, #192]	; 0xc0
   14024:	adds	r1, r1, r8
   14028:	adc	r5, r5, r4
   1402c:	eor	lr, lr, r1
   14030:	eor	ip, ip, r5
   14034:	str	ip, [sp, #176]	; 0xb0
   14038:	adds	r2, r2, r9
   1403c:	ldr	ip, [sp, #60]	; 0x3c
   14040:	ldr	r9, [sp, #196]	; 0xc4
   14044:	adc	r9, sl, r9
   14048:	adds	r2, r2, r3
   1404c:	adc	r9, r9, r7
   14050:	eor	sl, r2, r8
   14054:	eor	r4, r4, r9
   14058:	adds	r0, r0, r4
   1405c:	adc	r6, r6, sl
   14060:	adds	r2, ip, r2
   14064:	eor	r7, r7, r6
   14068:	eor	r3, r3, r0
   1406c:	lsr	ip, r7, #24
   14070:	lsr	r8, r3, #24
   14074:	str	ip, [sp, #144]	; 0x90
   14078:	orr	r7, r8, r7, lsl #8
   1407c:	ldr	ip, [sp, #64]	; 0x40
   14080:	adc	r9, ip, r9
   14084:	ldr	ip, [sp, #144]	; 0x90
   14088:	orr	r3, ip, r3, lsl #8
   1408c:	adds	ip, r2, r7
   14090:	eor	r4, r4, ip
   14094:	adc	r9, r9, r3
   14098:	str	ip, [sp, #192]	; 0xc0
   1409c:	eor	r8, r9, sl
   140a0:	str	r9, [sp, #196]	; 0xc4
   140a4:	lsr	r9, r4, #16
   140a8:	lsr	r2, r8, #16
   140ac:	orr	ip, r9, r8, lsl #16
   140b0:	ldr	r9, [sp, #160]	; 0xa0
   140b4:	orr	r4, r2, r4, lsl #16
   140b8:	adds	r0, r0, ip
   140bc:	adc	r6, r6, r4
   140c0:	mov	sl, r0
   140c4:	ldr	r0, [sp, #148]	; 0x94
   140c8:	eor	r7, sl, r7
   140cc:	mov	r8, r4
   140d0:	str	r6, [sp, #144]	; 0x90
   140d4:	lsl	r4, r9, #1
   140d8:	ldr	r6, [sp, #100]	; 0x64
   140dc:	str	ip, [sp, #248]	; 0xf8
   140e0:	ldr	ip, [sp, #208]	; 0xd0
   140e4:	lsl	r2, r0, #1
   140e8:	str	r7, [sp, #148]	; 0x94
   140ec:	ldr	r7, [sp, #144]	; 0x90
   140f0:	orr	r2, r2, r9, lsr #31
   140f4:	str	sl, [sp, #208]	; 0xd0
   140f8:	str	r8, [sp, #252]	; 0xfc
   140fc:	adds	r8, r6, ip
   14100:	orr	r6, r4, r0, lsr #31
   14104:	ldr	r4, [sp, #4]
   14108:	eor	r3, r7, r3
   1410c:	ldr	r7, [sp, #116]	; 0x74
   14110:	ldr	ip, [sp, #228]	; 0xe4
   14114:	str	r3, [sp, #160]	; 0xa0
   14118:	ldr	sl, [sp, #120]	; 0x78
   1411c:	adc	r0, r4, ip
   14120:	adds	r8, r8, r2
   14124:	ldr	ip, [sp, #176]	; 0xb0
   14128:	adc	r3, r0, r6
   1412c:	ldr	r4, [sp, #232]	; 0xe8
   14130:	ldr	r0, [sp, #244]	; 0xf4
   14134:	eor	r4, r8, r4
   14138:	eor	r0, r3, r0
   1413c:	adds	r1, r1, r0
   14140:	eor	r2, r2, r1
   14144:	adc	r5, r5, r4
   14148:	eor	r9, r5, r6
   1414c:	lsr	r6, r2, #24
   14150:	adds	r8, r7, r8
   14154:	lsr	r7, r9, #24
   14158:	adc	r3, sl, r3
   1415c:	ldr	sl, [sp, #84]	; 0x54
   14160:	orr	r6, r6, r9, lsl #8
   14164:	orr	r7, r7, r2, lsl #8
   14168:	adds	r2, r8, r6
   1416c:	lsl	r8, lr, #1
   14170:	adc	r3, r3, r7
   14174:	eor	r0, r0, r2
   14178:	eor	r4, r4, r3
   1417c:	strd	r2, [sp, #212]	; 0xd4
   14180:	lsr	r2, r0, #16
   14184:	lsr	r3, r4, #16
   14188:	orr	r4, r2, r4, lsl #16
   1418c:	orr	r0, r3, r0, lsl #16
   14190:	ldr	r3, [sp, #180]	; 0xb4
   14194:	adds	r9, r1, r4
   14198:	lsl	r2, ip, #1
   1419c:	ldr	r1, [sp, #124]	; 0x7c
   141a0:	adc	r5, r5, r0
   141a4:	orr	ip, r8, ip, lsr #31
   141a8:	orr	lr, r2, lr, lsr #31
   141ac:	eor	r8, r5, r7
   141b0:	ldr	r2, [sp, #224]	; 0xe0
   141b4:	str	r8, [sp, #180]	; 0xb4
   141b8:	ldr	r8, [sp, #200]	; 0xc8
   141bc:	adds	r3, r1, r3
   141c0:	str	r9, [sp, #220]	; 0xdc
   141c4:	ldr	r1, [sp, #12]
   141c8:	str	r5, [sp, #224]	; 0xe0
   141cc:	adc	r1, r1, r2
   141d0:	mov	r2, r9
   141d4:	eor	r2, r2, r6
   141d8:	adds	r3, r3, ip
   141dc:	adc	r1, r1, lr
   141e0:	str	r2, [sp, #176]	; 0xb0
   141e4:	ldr	r2, [sp, #236]	; 0xec
   141e8:	eor	r7, r3, r2
   141ec:	ldr	r2, [sp, #240]	; 0xf0
   141f0:	eor	r6, r1, r2
   141f4:	adds	r2, r8, r6
   141f8:	ldr	r8, [sp, #140]	; 0x8c
   141fc:	eor	ip, ip, r2
   14200:	lsr	r9, ip, #24
   14204:	adc	r5, r8, r7
   14208:	adds	r3, sl, r3
   1420c:	ldr	sl, [sp, #88]	; 0x58
   14210:	eor	lr, lr, r5
   14214:	lsr	r8, lr, #24
   14218:	orr	lr, r9, lr, lsl #8
   1421c:	orr	ip, r8, ip, lsl #8
   14220:	adc	r1, sl, r1
   14224:	adds	r3, r3, lr
   14228:	adc	r1, r1, ip
   1422c:	eor	r6, r6, r3
   14230:	eor	r7, r7, r1
   14234:	str	r3, [sp, #200]	; 0xc8
   14238:	str	r1, [sp, #228]	; 0xe4
   1423c:	lsr	r1, r6, #16
   14240:	lsr	r3, r7, #16
   14244:	orr	r8, r1, r7, lsl #16
   14248:	orr	r6, r3, r6, lsl #16
   1424c:	ldr	r3, [sp, #136]	; 0x88
   14250:	adds	r2, r2, r8
   14254:	adc	r5, r5, r6
   14258:	mov	r1, r6
   1425c:	ldr	r6, [sp, #156]	; 0x9c
   14260:	str	r8, [sp, #232]	; 0xe8
   14264:	eor	lr, r2, lr
   14268:	ldr	r8, [sp, #152]	; 0x98
   1426c:	str	lr, [sp, #152]	; 0x98
   14270:	str	r1, [sp, #236]	; 0xec
   14274:	lsl	r9, r6, #1
   14278:	ldr	lr, [sp, #184]	; 0xb8
   1427c:	ldr	r1, [sp, #188]	; 0xbc
   14280:	orr	r9, r9, r8, lsr #31
   14284:	lsl	r7, r8, #1
   14288:	ldr	r8, [sp, #24]
   1428c:	orr	r7, r7, r6, lsr #31
   14290:	eor	r6, r5, ip
   14294:	adds	r1, r3, r1
   14298:	str	r6, [sp, #156]	; 0x9c
   1429c:	adc	r8, r8, fp
   142a0:	adds	r1, r1, r7
   142a4:	ldr	fp, [sp, #256]	; 0x100
   142a8:	adc	ip, r8, r9
   142ac:	ldr	r8, [sp, #260]	; 0x104
   142b0:	eor	fp, r1, fp
   142b4:	eor	sl, ip, r8
   142b8:	ldr	r8, [sp, #104]	; 0x68
   142bc:	adds	r3, lr, sl
   142c0:	ldr	lr, [sp, #204]	; 0xcc
   142c4:	eor	r7, r7, r3
   142c8:	lsr	r6, r7, #24
   142cc:	adc	lr, lr, fp
   142d0:	adds	r1, r8, r1
   142d4:	eor	r9, r9, lr
   142d8:	str	r1, [sp, #140]	; 0x8c
   142dc:	lsr	r8, r9, #24
   142e0:	ldr	r1, [sp, #108]	; 0x6c
   142e4:	orr	r6, r6, r9, lsl #8
   142e8:	orr	r7, r8, r7, lsl #8
   142ec:	adc	ip, r1, ip
   142f0:	ldr	r1, [sp, #140]	; 0x8c
   142f4:	adds	r9, r1, r6
   142f8:	eor	sl, sl, r9
   142fc:	adc	r8, ip, r7
   14300:	lsr	ip, sl, #16
   14304:	eor	fp, fp, r8
   14308:	str	r9, [sp, #188]	; 0xbc
   1430c:	lsr	r1, fp, #16
   14310:	str	r8, [sp, #204]	; 0xcc
   14314:	orr	ip, ip, fp, lsl #16
   14318:	ldr	fp, [sp, #192]	; 0xc0
   1431c:	orr	sl, r1, sl, lsl #16
   14320:	adds	r3, r3, ip
   14324:	str	ip, [sp, #240]	; 0xf0
   14328:	adc	lr, lr, sl
   1432c:	eor	r6, r6, r3
   14330:	ldr	ip, [sp, #124]	; 0x7c
   14334:	eor	r7, r7, lr
   14338:	lsl	r9, r6, #1
   1433c:	lsl	r8, r7, #1
   14340:	orr	r7, r9, r7, lsr #31
   14344:	ldr	r9, [sp, #136]	; 0x88
   14348:	orr	r6, r8, r6, lsr #31
   1434c:	adds	r1, ip, fp
   14350:	ldr	ip, [sp, #12]
   14354:	ldr	fp, [sp, #196]	; 0xc4
   14358:	adc	ip, ip, fp
   1435c:	adds	r1, r1, r7
   14360:	ldr	fp, [sp, #24]
   14364:	adc	ip, ip, r6
   14368:	eor	r4, r4, r1
   1436c:	eor	r0, r0, ip
   14370:	adds	r2, r2, r0
   14374:	adc	r5, r5, r4
   14378:	eor	r7, r7, r2
   1437c:	eor	r6, r6, r5
   14380:	lsr	r8, r7, #24
   14384:	adds	r1, r9, r1
   14388:	lsr	r9, r6, #24
   1438c:	adc	ip, fp, ip
   14390:	orr	r6, r8, r6, lsl #8
   14394:	orr	r7, r9, r7, lsl #8
   14398:	adds	fp, r1, r6
   1439c:	adc	ip, ip, r7
   143a0:	eor	r0, r0, fp
   143a4:	eor	r4, r4, ip
   143a8:	str	fp, [sp, #192]	; 0xc0
   143ac:	lsr	r1, r4, #16
   143b0:	str	ip, [sp, #196]	; 0xc4
   143b4:	lsr	ip, r0, #16
   143b8:	orr	r0, r1, r0, lsl #16
   143bc:	orr	r4, ip, r4, lsl #16
   143c0:	ldr	ip, [sp, #100]	; 0x64
   143c4:	mov	r9, r0
   143c8:	adds	r0, r2, r4
   143cc:	ldr	fp, [sp, #160]	; 0xa0
   143d0:	adc	r5, r5, r9
   143d4:	str	r0, [sp, #140]	; 0x8c
   143d8:	str	r9, [sp, #256]	; 0x100
   143dc:	mov	r9, r5
   143e0:	str	r4, [sp, #244]	; 0xf4
   143e4:	eor	r7, r9, r7
   143e8:	ldr	r5, [sp, #212]	; 0xd4
   143ec:	lsl	r1, fp, #1
   143f0:	str	r7, [sp, #184]	; 0xb8
   143f4:	ldr	r4, [sp, #4]
   143f8:	str	r9, [sp, #212]	; 0xd4
   143fc:	ldr	r9, [sp, #84]	; 0x54
   14400:	adds	r8, ip, r5
   14404:	ldr	r0, [sp, #148]	; 0x94
   14408:	ldr	r5, [sp, #216]	; 0xd8
   1440c:	orr	r1, r1, r0, lsr #31
   14410:	lsl	r2, r0, #1
   14414:	adc	r0, r4, r5
   14418:	ldr	r5, [sp, #140]	; 0x8c
   1441c:	orr	r2, r2, fp, lsr #31
   14420:	ldr	fp, [sp, #232]	; 0xe8
   14424:	adds	r8, r8, r2
   14428:	adc	r0, r0, r1
   1442c:	eor	r6, r5, r6
   14430:	str	r6, [sp, #160]	; 0xa0
   14434:	eor	r6, r8, fp
   14438:	ldr	fp, [sp, #236]	; 0xec
   1443c:	eor	ip, r0, fp
   14440:	ldr	fp, [sp, #56]	; 0x38
   14444:	adds	r3, r3, ip
   14448:	eor	r2, r2, r3
   1444c:	adc	lr, lr, r6
   14450:	adds	r8, r9, r8
   14454:	ldr	r9, [sp, #88]	; 0x58
   14458:	eor	r1, r1, lr
   1445c:	lsr	r4, r2, #24
   14460:	lsr	r5, r1, #24
   14464:	orr	r4, r4, r1, lsl #8
   14468:	orr	r5, r5, r2, lsl #8
   1446c:	adc	r0, r9, r0
   14470:	adds	r2, r8, r4
   14474:	adc	r0, r0, r5
   14478:	eor	ip, ip, r2
   1447c:	eor	r6, r6, r0
   14480:	lsr	r7, ip, #16
   14484:	str	r2, [sp, #216]	; 0xd8
   14488:	lsr	r2, r6, #16
   1448c:	str	r0, [sp, #232]	; 0xe8
   14490:	orr	r7, r7, r6, lsl #16
   14494:	ldr	r0, [sp, #180]	; 0xb4
   14498:	orr	r6, r2, ip, lsl #16
   1449c:	adds	r8, r3, r7
   144a0:	ldr	r2, [sp, #176]	; 0xb0
   144a4:	adc	lr, lr, r6
   144a8:	str	r7, [sp, #236]	; 0xec
   144ac:	eor	r4, r4, r8
   144b0:	eor	r5, r5, lr
   144b4:	str	r6, [sp, #260]	; 0x104
   144b8:	mov	r6, lr
   144bc:	ldr	lr, [sp, #52]	; 0x34
   144c0:	lsl	ip, r0, #1
   144c4:	ldr	r3, [sp, #200]	; 0xc8
   144c8:	lsl	r1, r2, #1
   144cc:	orr	ip, ip, r2, lsr #31
   144d0:	str	r8, [sp, #200]	; 0xc8
   144d4:	orr	r7, r1, r0, lsr #31
   144d8:	ldr	r8, [sp, #44]	; 0x2c
   144dc:	adds	r3, lr, r3
   144e0:	ldr	lr, [sp, #228]	; 0xe4
   144e4:	str	r6, [sp, #228]	; 0xe4
   144e8:	adc	r2, fp, lr
   144ec:	ldr	lr, [sp, #208]	; 0xd0
   144f0:	adds	r3, r3, r7
   144f4:	adc	r2, r2, ip
   144f8:	eor	sl, sl, r2
   144fc:	ldr	fp, [sp, #240]	; 0xf0
   14500:	adds	r0, lr, sl
   14504:	ldr	lr, [sp, #144]	; 0x90
   14508:	eor	r1, r0, r7
   1450c:	eor	fp, fp, r3
   14510:	adc	r6, lr, fp
   14514:	adds	r3, r8, r3
   14518:	ldr	r8, [sp, #48]	; 0x30
   1451c:	eor	ip, ip, r6
   14520:	lsr	lr, r1, #24
   14524:	lsr	r9, ip, #24
   14528:	orr	lr, lr, ip, lsl #8
   1452c:	orr	r9, r9, r1, lsl #8
   14530:	ldr	r1, [sp, #152]	; 0x98
   14534:	adc	r2, r8, r2
   14538:	adds	r3, r3, lr
   1453c:	adc	r2, r2, r9
   14540:	eor	sl, sl, r3
   14544:	ldr	r8, [sp, #204]	; 0xcc
   14548:	eor	fp, fp, r2
   1454c:	str	r3, [sp, #176]	; 0xb0
   14550:	lsr	r3, fp, #16
   14554:	str	r2, [sp, #180]	; 0xb4
   14558:	lsr	r2, sl, #16
   1455c:	orr	sl, r3, sl, lsl #16
   14560:	ldr	r3, [sp, #188]	; 0xbc
   14564:	orr	r7, r2, fp, lsl #16
   14568:	mov	fp, sl
   1456c:	lsl	ip, r1, #1
   14570:	adds	r0, r0, r7
   14574:	adc	r6, r6, fp
   14578:	eor	lr, r0, lr
   1457c:	str	fp, [sp, #264]	; 0x108
   14580:	eor	sl, r6, r9
   14584:	ldr	fp, [sp, #36]	; 0x24
   14588:	str	r7, [sp, #240]	; 0xf0
   1458c:	lsl	r7, r5, #1
   14590:	str	lr, [sp, #152]	; 0x98
   14594:	orr	r7, r7, r4, lsr #31
   14598:	adds	r2, fp, r3
   1459c:	ldr	r3, [sp, #40]	; 0x28
   145a0:	ldr	fp, [sp, #156]	; 0x9c
   145a4:	str	sl, [sp, #156]	; 0x9c
   145a8:	ldr	sl, [sp, #60]	; 0x3c
   145ac:	adc	r8, r3, r8
   145b0:	ldr	r3, [sp, #248]	; 0xf8
   145b4:	orr	ip, ip, fp, lsr #31
   145b8:	lsl	lr, fp, #1
   145bc:	adds	r2, r2, ip
   145c0:	orr	lr, lr, r1, lsr #31
   145c4:	eor	r9, r2, r3
   145c8:	lsl	r3, r4, #1
   145cc:	ldr	r4, [sp, #252]	; 0xfc
   145d0:	adc	r8, r8, lr
   145d4:	orr	r3, r3, r5, lsr #31
   145d8:	ldr	r5, [sp, #220]	; 0xdc
   145dc:	eor	r4, r8, r4
   145e0:	adds	r1, r5, r4
   145e4:	ldr	r5, [sp, #224]	; 0xe0
   145e8:	eor	ip, ip, r1
   145ec:	lsr	fp, ip, #24
   145f0:	adc	r5, r5, r9
   145f4:	adds	r2, sl, r2
   145f8:	eor	lr, lr, r5
   145fc:	str	r5, [sp, #144]	; 0x90
   14600:	lsr	sl, lr, #24
   14604:	ldr	r5, [sp, #64]	; 0x40
   14608:	orr	lr, fp, lr, lsl #8
   1460c:	orr	ip, sl, ip, lsl #8
   14610:	ldr	sl, [sp, #96]	; 0x60
   14614:	ldr	fp, [sp, #192]	; 0xc0
   14618:	adc	r8, r5, r8
   1461c:	adds	r5, r2, lr
   14620:	adc	r2, r8, ip
   14624:	eor	r4, r4, r5
   14628:	eor	r9, r9, r2
   1462c:	lsr	r8, r4, #16
   14630:	str	r5, [sp, #188]	; 0xbc
   14634:	str	r2, [sp, #204]	; 0xcc
   14638:	lsr	r2, r9, #16
   1463c:	ldr	r5, [sp, #144]	; 0x90
   14640:	orr	r8, r8, r9, lsl #16
   14644:	orr	r4, r2, r4, lsl #16
   14648:	ldr	r2, [sp, #92]	; 0x5c
   1464c:	adds	r1, r1, r8
   14650:	eor	lr, lr, r1
   14654:	adc	r5, r5, r4
   14658:	eor	ip, ip, r5
   1465c:	adds	r2, r2, fp
   14660:	ldr	fp, [sp, #196]	; 0xc4
   14664:	adc	r9, sl, fp
   14668:	adds	r2, r2, r3
   1466c:	ldr	fp, [sp, #116]	; 0x74
   14670:	adc	r9, r9, r7
   14674:	eor	sl, r2, r8
   14678:	eor	r4, r4, r9
   1467c:	adds	r0, r0, r4
   14680:	adc	r6, r6, sl
   14684:	eor	r3, r3, r0
   14688:	eor	r7, r7, r6
   1468c:	adds	r2, fp, r2
   14690:	lsr	r8, r3, #24
   14694:	lsr	fp, r7, #24
   14698:	orr	r7, r8, r7, lsl #8
   1469c:	str	fp, [sp, #144]	; 0x90
   146a0:	ldr	fp, [sp, #120]	; 0x78
   146a4:	ldr	r8, [sp, #144]	; 0x90
   146a8:	adc	r9, fp, r9
   146ac:	orr	r3, r8, r3, lsl #8
   146b0:	adds	r8, r2, r7
   146b4:	eor	r4, r4, r8
   146b8:	adc	fp, r9, r3
   146bc:	str	r8, [sp, #192]	; 0xc0
   146c0:	lsr	r9, r4, #16
   146c4:	mov	r8, fp
   146c8:	eor	r8, r8, sl
   146cc:	str	fp, [sp, #196]	; 0xc4
   146d0:	lsr	r2, r8, #16
   146d4:	ldr	sl, [sp, #152]	; 0x98
   146d8:	orr	fp, r9, r8, lsl #16
   146dc:	orr	r4, r2, r4, lsl #16
   146e0:	ldr	r9, [sp, #156]	; 0x9c
   146e4:	adds	r0, r0, fp
   146e8:	ldr	r8, [sp, #216]	; 0xd8
   146ec:	str	r4, [sp, #148]	; 0x94
   146f0:	lsl	r2, sl, #1
   146f4:	str	fp, [sp, #248]	; 0xf8
   146f8:	mov	fp, r0
   146fc:	ldr	r0, [sp, #148]	; 0x94
   14700:	eor	r7, fp, r7
   14704:	lsl	r4, r9, #1
   14708:	orr	r2, r2, r9, lsr #31
   1470c:	str	r7, [sp, #152]	; 0x98
   14710:	str	fp, [sp, #208]	; 0xd0
   14714:	adc	r0, r6, r0
   14718:	orr	r6, r4, sl, lsr #31
   1471c:	ldr	sl, [sp, #32]
   14720:	str	r0, [sp, #144]	; 0x90
   14724:	ldr	r0, [sp, #112]	; 0x70
   14728:	ldr	r7, [sp, #144]	; 0x90
   1472c:	ldr	r4, [sp, #232]	; 0xe8
   14730:	adds	r8, r0, r8
   14734:	ldr	r0, [sp, #8]
   14738:	eor	r3, r7, r3
   1473c:	ldr	r7, [sp, #256]	; 0x100
   14740:	str	r3, [sp, #156]	; 0x9c
   14744:	adc	r0, r0, r4
   14748:	ldr	r4, [sp, #244]	; 0xf4
   1474c:	adds	r8, r8, r2
   14750:	adc	r3, r0, r6
   14754:	eor	r0, r3, r7
   14758:	ldr	r7, [sp, #28]
   1475c:	adds	r1, r1, r0
   14760:	eor	r2, r2, r1
   14764:	eor	r4, r8, r4
   14768:	adc	r5, r5, r4
   1476c:	eor	r9, r5, r6
   14770:	lsr	r6, r2, #24
   14774:	adds	r8, r7, r8
   14778:	lsr	r7, r9, #24
   1477c:	adc	r3, sl, r3
   14780:	orr	r6, r6, r9, lsl #8
   14784:	orr	r7, r7, r2, lsl #8
   14788:	adds	r9, r8, r6
   1478c:	lsl	r8, lr, #1
   14790:	adc	r2, r3, r7
   14794:	eor	r0, r0, r9
   14798:	eor	r4, r4, r2
   1479c:	str	r9, [sp, #216]	; 0xd8
   147a0:	str	r2, [sp, #220]	; 0xdc
   147a4:	lsr	r2, r0, #16
   147a8:	lsr	r3, r4, #16
   147ac:	orr	r4, r2, r4, lsl #16
   147b0:	orr	r0, r3, r0, lsl #16
   147b4:	ldr	r3, [sp, #104]	; 0x68
   147b8:	lsl	r2, ip, #1
   147bc:	str	r4, [sp, #244]	; 0xf4
   147c0:	adds	r4, r1, r4
   147c4:	orr	ip, r8, ip, lsr #31
   147c8:	adc	r1, r5, r0
   147cc:	orr	lr, r2, lr, lsr #31
   147d0:	ldr	r8, [sp, #76]	; 0x4c
   147d4:	mov	sl, r1
   147d8:	str	r4, [sp, #224]	; 0xe0
   147dc:	ldr	r1, [sp, #176]	; 0xb0
   147e0:	str	sl, [sp, #232]	; 0xe8
   147e4:	ldr	r2, [sp, #180]	; 0xb4
   147e8:	adds	r3, r3, r1
   147ec:	ldr	r1, [sp, #108]	; 0x6c
   147f0:	adc	r1, r1, r2
   147f4:	eor	r2, r4, r6
   147f8:	eor	r4, sl, r7
   147fc:	ldr	sl, [sp, #80]	; 0x50
   14800:	adds	r3, r3, ip
   14804:	str	r2, [sp, #176]	; 0xb0
   14808:	adc	r1, r1, lr
   1480c:	str	r4, [sp, #180]	; 0xb4
   14810:	ldr	r5, [sp, #140]	; 0x8c
   14814:	ldr	fp, [sp, #184]	; 0xb8
   14818:	ldr	r2, [sp, #236]	; 0xec
   1481c:	eor	r7, r3, r2
   14820:	ldr	r2, [sp, #260]	; 0x104
   14824:	eor	r6, r1, r2
   14828:	adds	r2, r5, r6
   1482c:	ldr	r5, [sp, #212]	; 0xd4
   14830:	eor	ip, ip, r2
   14834:	lsr	r9, ip, #24
   14838:	adc	r5, r5, r7
   1483c:	adds	r3, r8, r3
   14840:	eor	lr, lr, r5
   14844:	adc	r1, sl, r1
   14848:	lsr	r8, lr, #24
   1484c:	orr	lr, r9, lr, lsl #8
   14850:	orr	ip, r8, ip, lsl #8
   14854:	adds	r3, r3, lr
   14858:	lsl	r9, fp, #1
   1485c:	adc	r1, r1, ip
   14860:	eor	r6, r6, r3
   14864:	mov	r4, r1
   14868:	lsr	r1, r6, #16
   1486c:	str	r3, [sp, #212]	; 0xd4
   14870:	eor	r7, r7, r4
   14874:	lsr	r3, r7, #16
   14878:	str	r4, [sp, #236]	; 0xec
   1487c:	orr	r7, r1, r7, lsl #16
   14880:	orr	r6, r3, r6, lsl #16
   14884:	ldr	r3, [sp, #160]	; 0xa0
   14888:	mov	r1, r7
   1488c:	adds	r2, r2, r1
   14890:	mov	r4, r6
   14894:	ldr	r6, [sp, #68]	; 0x44
   14898:	str	r1, [sp, #252]	; 0xfc
   1489c:	eor	lr, r2, lr
   148a0:	adc	r5, r5, r4
   148a4:	ldr	r1, [sp, #188]	; 0xbc
   148a8:	eor	ip, r5, ip
   148ac:	orr	r9, r9, r3, lsr #31
   148b0:	str	lr, [sp, #160]	; 0xa0
   148b4:	lsl	r7, r3, #1
   148b8:	ldr	r3, [sp, #204]	; 0xcc
   148bc:	str	ip, [sp, #184]	; 0xb8
   148c0:	ldr	lr, [sp, #240]	; 0xf0
   148c4:	orr	r7, r7, fp, lsr #31
   148c8:	adds	r1, r6, r1
   148cc:	str	r4, [sp, #256]	; 0x100
   148d0:	ldr	r6, [sp, #72]	; 0x48
   148d4:	adc	r8, r6, r3
   148d8:	adds	r1, r1, r7
   148dc:	ldr	r6, [sp, #20]
   148e0:	eor	fp, r1, lr
   148e4:	adc	ip, r8, r9
   148e8:	ldr	r3, [sp, #264]	; 0x108
   148ec:	ldr	r8, [sp, #16]
   148f0:	ldr	lr, [sp, #200]	; 0xc8
   148f4:	eor	sl, ip, r3
   148f8:	adds	r3, lr, sl
   148fc:	ldr	lr, [sp, #228]	; 0xe4
   14900:	eor	r7, r7, r3
   14904:	lsr	r4, r7, #24
   14908:	adc	lr, lr, fp
   1490c:	adds	r1, r8, r1
   14910:	eor	r9, r9, lr
   14914:	adc	ip, r6, ip
   14918:	lsr	r8, r9, #24
   1491c:	orr	r6, r4, r9, lsl #8
   14920:	ldr	r4, [sp, #196]	; 0xc4
   14924:	orr	r7, r8, r7, lsl #8
   14928:	adds	r9, r1, r6
   1492c:	adc	ip, ip, r7
   14930:	eor	sl, sl, r9
   14934:	mov	r1, ip
   14938:	lsr	ip, sl, #16
   1493c:	str	r9, [sp, #188]	; 0xbc
   14940:	eor	fp, fp, r1
   14944:	str	r1, [sp, #200]	; 0xc8
   14948:	lsr	r1, fp, #16
   1494c:	orr	fp, ip, fp, lsl #16
   14950:	ldr	ip, [sp, #136]	; 0x88
   14954:	orr	sl, r1, sl, lsl #16
   14958:	ldr	r1, [sp, #192]	; 0xc0
   1495c:	adds	r3, r3, fp
   14960:	adc	lr, lr, sl
   14964:	eor	r6, r6, r3
   14968:	eor	r7, r7, lr
   1496c:	lsl	r9, r6, #1
   14970:	lsl	r8, r7, #1
   14974:	orr	r7, r9, r7, lsr #31
   14978:	ldr	r9, [sp, #76]	; 0x4c
   1497c:	adds	r1, ip, r1
   14980:	orr	r6, r8, r6, lsr #31
   14984:	ldr	ip, [sp, #24]
   14988:	adc	ip, ip, r4
   1498c:	ldr	r4, [sp, #244]	; 0xf4
   14990:	adds	r1, r1, r7
   14994:	adc	ip, ip, r6
   14998:	eor	r0, r0, ip
   1499c:	adds	r2, r2, r0
   149a0:	eor	r7, r7, r2
   149a4:	eor	r4, r4, r1
   149a8:	lsr	r8, r7, #24
   149ac:	adc	r5, r5, r4
   149b0:	adds	r1, r9, r1
   149b4:	eor	r6, r6, r5
   149b8:	str	r1, [sp, #140]	; 0x8c
   149bc:	lsr	r9, r6, #24
   149c0:	ldr	r1, [sp, #80]	; 0x50
   149c4:	orr	r6, r8, r6, lsl #8
   149c8:	orr	r7, r9, r7, lsl #8
   149cc:	ldr	r9, [sp, #152]	; 0x98
   149d0:	adc	ip, r1, ip
   149d4:	ldr	r1, [sp, #140]	; 0x8c
   149d8:	adds	r8, r1, r6
   149dc:	adc	ip, ip, r7
   149e0:	eor	r0, r0, r8
   149e4:	eor	r4, r4, ip
   149e8:	str	r8, [sp, #192]	; 0xc0
   149ec:	lsr	r1, r4, #16
   149f0:	str	ip, [sp, #196]	; 0xc4
   149f4:	lsr	ip, r0, #16
   149f8:	orr	r0, r1, r0, lsl #16
   149fc:	orr	r8, ip, r4, lsl #16
   14a00:	ldr	r4, [sp, #156]	; 0x9c
   14a04:	mov	ip, r0
   14a08:	adds	r2, r2, r8
   14a0c:	ldr	r0, [sp, #216]	; 0xd8
   14a10:	adc	r5, r5, ip
   14a14:	str	r2, [sp, #140]	; 0x8c
   14a18:	lsl	r2, r9, #1
   14a1c:	str	ip, [sp, #244]	; 0xf4
   14a20:	mov	ip, r5
   14a24:	lsl	r1, r4, #1
   14a28:	ldr	r5, [sp, #112]	; 0x70
   14a2c:	eor	r7, ip, r7
   14a30:	orr	r2, r2, r4, lsr #31
   14a34:	str	r8, [sp, #240]	; 0xf0
   14a38:	orr	r1, r1, r9, lsr #31
   14a3c:	str	r7, [sp, #156]	; 0x9c
   14a40:	str	ip, [sp, #204]	; 0xcc
   14a44:	ldr	r7, [sp, #252]	; 0xfc
   14a48:	adds	r8, r5, r0
   14a4c:	ldr	r0, [sp, #8]
   14a50:	ldr	r9, [sp, #180]	; 0xb4
   14a54:	ldr	r5, [sp, #220]	; 0xdc
   14a58:	adc	r0, r0, r5
   14a5c:	ldr	r5, [sp, #140]	; 0x8c
   14a60:	adds	r8, r8, r2
   14a64:	adc	r0, r0, r1
   14a68:	eor	r5, r5, r6
   14a6c:	eor	r6, r8, r7
   14a70:	ldr	r7, [sp, #256]	; 0x100
   14a74:	str	r5, [sp, #152]	; 0x98
   14a78:	eor	ip, r0, r7
   14a7c:	ldr	r7, [sp, #124]	; 0x7c
   14a80:	adds	r3, r3, ip
   14a84:	eor	r2, r2, r3
   14a88:	adc	lr, lr, r6
   14a8c:	eor	r1, r1, lr
   14a90:	lsr	r4, r2, #24
   14a94:	lsr	r5, r1, #24
   14a98:	adds	r8, r7, r8
   14a9c:	ldr	r7, [sp, #12]
   14aa0:	orr	r4, r4, r1, lsl #8
   14aa4:	orr	r5, r5, r2, lsl #8
   14aa8:	adc	r0, r7, r0
   14aac:	adds	r2, r8, r4
   14ab0:	adc	r7, r0, r5
   14ab4:	eor	ip, ip, r2
   14ab8:	ldr	r0, [sp, #176]	; 0xb0
   14abc:	eor	r6, r6, r7
   14ac0:	str	r2, [sp, #216]	; 0xd8
   14ac4:	lsr	r2, r6, #16
   14ac8:	str	r7, [sp, #220]	; 0xdc
   14acc:	lsr	r7, ip, #16
   14ad0:	orr	r2, r2, ip, lsl #16
   14ad4:	orr	r6, r7, r6, lsl #16
   14ad8:	ldr	r7, [sp, #96]	; 0x60
   14adc:	lsl	r1, r0, #1
   14ae0:	adds	r3, r3, r6
   14ae4:	lsl	ip, r9, #1
   14ae8:	adc	lr, lr, r2
   14aec:	str	r6, [sp, #252]	; 0xfc
   14af0:	mov	r6, r3
   14af4:	str	r2, [sp, #256]	; 0x100
   14af8:	mov	r8, lr
   14afc:	orr	ip, ip, r0, lsr #31
   14b00:	ldr	r2, [sp, #92]	; 0x5c
   14b04:	eor	r5, r5, r8
   14b08:	eor	r4, r4, r6
   14b0c:	str	r8, [sp, #228]	; 0xe4
   14b10:	ldr	r3, [sp, #212]	; 0xd4
   14b14:	str	r6, [sp, #212]	; 0xd4
   14b18:	ldr	lr, [sp, #236]	; 0xec
   14b1c:	ldr	r8, [sp, #104]	; 0x68
   14b20:	adds	r3, r2, r3
   14b24:	adc	r2, r7, lr
   14b28:	orr	r7, r1, r9, lsr #31
   14b2c:	ldr	lr, [sp, #208]	; 0xd0
   14b30:	adds	r3, r3, r7
   14b34:	adc	r2, r2, ip
   14b38:	eor	fp, fp, r3
   14b3c:	eor	sl, sl, r2
   14b40:	adds	r0, lr, sl
   14b44:	ldr	lr, [sp, #144]	; 0x90
   14b48:	eor	r1, r0, r7
   14b4c:	adc	r6, lr, fp
   14b50:	adds	r3, r8, r3
   14b54:	ldr	r8, [sp, #108]	; 0x6c
   14b58:	eor	ip, ip, r6
   14b5c:	lsr	lr, r1, #24
   14b60:	lsr	r9, ip, #24
   14b64:	orr	lr, lr, ip, lsl #8
   14b68:	orr	r9, r9, r1, lsl #8
   14b6c:	adc	r2, r8, r2
   14b70:	adds	r3, r3, lr
   14b74:	ldr	r8, [sp, #200]	; 0xc8
   14b78:	adc	r1, r2, r9
   14b7c:	eor	sl, sl, r3
   14b80:	eor	fp, fp, r1
   14b84:	str	r3, [sp, #180]	; 0xb4
   14b88:	lsr	r2, sl, #16
   14b8c:	lsr	r3, fp, #16
   14b90:	str	r1, [sp, #208]	; 0xd0
   14b94:	orr	r7, r2, fp, lsl #16
   14b98:	ldr	r1, [sp, #160]	; 0xa0
   14b9c:	orr	r3, r3, sl, lsl #16
   14ba0:	adds	r0, r0, r7
   14ba4:	ldr	sl, [sp, #68]	; 0x44
   14ba8:	mov	r2, r3
   14bac:	eor	lr, r0, lr
   14bb0:	adc	r6, r6, r2
   14bb4:	ldr	r3, [sp, #28]
   14bb8:	str	r7, [sp, #236]	; 0xec
   14bbc:	lsl	r7, r5, #1
   14bc0:	str	r2, [sp, #260]	; 0x104
   14bc4:	lsl	ip, r1, #1
   14bc8:	ldr	fp, [sp, #184]	; 0xb8
   14bcc:	orr	r7, r7, r4, lsr #31
   14bd0:	str	lr, [sp, #160]	; 0xa0
   14bd4:	ldr	r2, [sp, #188]	; 0xbc
   14bd8:	lsl	lr, fp, #1
   14bdc:	orr	ip, ip, fp, lsr #31
   14be0:	eor	fp, r6, r9
   14be4:	adds	r2, r3, r2
   14be8:	ldr	r3, [sp, #32]
   14bec:	orr	lr, lr, r1, lsr #31
   14bf0:	str	fp, [sp, #176]	; 0xb0
   14bf4:	ldr	r1, [sp, #248]	; 0xf8
   14bf8:	adc	r8, r3, r8
   14bfc:	lsl	r3, r4, #1
   14c00:	ldr	r4, [sp, #148]	; 0x94
   14c04:	adds	r2, r2, ip
   14c08:	orr	r3, r3, r5, lsr #31
   14c0c:	ldr	r5, [sp, #224]	; 0xe0
   14c10:	adc	r8, r8, lr
   14c14:	eor	r9, r2, r1
   14c18:	eor	r4, r8, r4
   14c1c:	adds	r1, r5, r4
   14c20:	ldr	r5, [sp, #232]	; 0xe8
   14c24:	eor	ip, ip, r1
   14c28:	lsr	fp, ip, #24
   14c2c:	adc	r5, r5, r9
   14c30:	adds	r2, sl, r2
   14c34:	eor	lr, lr, r5
   14c38:	str	r2, [sp, #144]	; 0x90
   14c3c:	lsr	sl, lr, #24
   14c40:	ldr	r2, [sp, #72]	; 0x48
   14c44:	orr	lr, fp, lr, lsl #8
   14c48:	orr	ip, sl, ip, lsl #8
   14c4c:	adc	r8, r2, r8
   14c50:	ldr	r2, [sp, #144]	; 0x90
   14c54:	adds	fp, r2, lr
   14c58:	mov	sl, fp
   14c5c:	adc	fp, r8, ip
   14c60:	eor	r9, r9, fp
   14c64:	eor	r4, r4, sl
   14c68:	lsr	r2, r9, #16
   14c6c:	str	sl, [sp, #188]	; 0xbc
   14c70:	lsr	r8, r4, #16
   14c74:	ldr	sl, [sp, #64]	; 0x40
   14c78:	orr	r4, r2, r4, lsl #16
   14c7c:	orr	r8, r8, r9, lsl #16
   14c80:	ldr	r2, [sp, #60]	; 0x3c
   14c84:	ldr	r9, [sp, #192]	; 0xc0
   14c88:	adds	r1, r1, r8
   14c8c:	adc	r5, r5, r4
   14c90:	eor	lr, lr, r1
   14c94:	eor	ip, ip, r5
   14c98:	adds	r2, r2, r9
   14c9c:	ldr	r9, [sp, #196]	; 0xc4
   14ca0:	adc	r9, sl, r9
   14ca4:	adds	r2, r2, r3
   14ca8:	eor	sl, r2, r8
   14cac:	adc	r9, r9, r7
   14cb0:	ldr	r8, [sp, #84]	; 0x54
   14cb4:	eor	r4, r4, r9
   14cb8:	adds	r0, r0, r4
   14cbc:	adc	r6, r6, sl
   14cc0:	eor	r3, r3, r0
   14cc4:	eor	r7, r7, r6
   14cc8:	adds	r2, r8, r2
   14ccc:	lsr	r8, r7, #24
   14cd0:	str	r8, [sp, #144]	; 0x90
   14cd4:	ldr	r8, [sp, #88]	; 0x58
   14cd8:	adc	r9, r8, r9
   14cdc:	lsr	r8, r3, #24
   14ce0:	orr	r7, r8, r7, lsl #8
   14ce4:	ldr	r8, [sp, #144]	; 0x90
   14ce8:	orr	r3, r8, r3, lsl #8
   14cec:	adds	r8, r2, r7
   14cf0:	eor	r4, r4, r8
   14cf4:	adc	r9, r9, r3
   14cf8:	str	r8, [sp, #192]	; 0xc0
   14cfc:	mov	r2, r9
   14d00:	lsr	r9, r4, #16
   14d04:	eor	r8, r2, sl
   14d08:	ldr	sl, [sp, #176]	; 0xb0
   14d0c:	str	r2, [sp, #196]	; 0xc4
   14d10:	lsr	r2, r8, #16
   14d14:	orr	r9, r9, r8, lsl #16
   14d18:	orr	r4, r2, r4, lsl #16
   14d1c:	adds	r0, r0, r9
   14d20:	adc	r6, r6, r4
   14d24:	mov	r8, r4
   14d28:	lsl	r4, sl, #1
   14d2c:	str	r0, [sp, #144]	; 0x90
   14d30:	str	r6, [sp, #148]	; 0x94
   14d34:	str	r9, [sp, #248]	; 0xf8
   14d38:	ldr	r6, [sp, #36]	; 0x24
   14d3c:	str	r8, [sp, #264]	; 0x108
   14d40:	ldr	r0, [sp, #160]	; 0xa0
   14d44:	ldr	r9, [sp, #216]	; 0xd8
   14d48:	lsl	r2, r0, #1
   14d4c:	adds	r8, r6, r9
   14d50:	orr	r6, r4, r0, lsr #31
   14d54:	ldr	r4, [sp, #40]	; 0x28
   14d58:	orr	r2, r2, sl, lsr #31
   14d5c:	ldr	sl, [sp, #44]	; 0x2c
   14d60:	ldr	r9, [sp, #220]	; 0xdc
   14d64:	adc	r0, r4, r9
   14d68:	ldr	r4, [sp, #144]	; 0x90
   14d6c:	adds	r8, r8, r2
   14d70:	eor	r4, r4, r7
   14d74:	str	r4, [sp, #160]	; 0xa0
   14d78:	ldr	r4, [sp, #148]	; 0x94
   14d7c:	eor	r7, r4, r3
   14d80:	adc	r3, r0, r6
   14d84:	ldr	r0, [sp, #240]	; 0xf0
   14d88:	str	r7, [sp, #176]	; 0xb0
   14d8c:	eor	r4, r8, r0
   14d90:	ldr	r0, [sp, #244]	; 0xf4
   14d94:	eor	r0, r3, r0
   14d98:	adds	r1, r1, r0
   14d9c:	eor	r2, r2, r1
   14da0:	adc	r5, r5, r4
   14da4:	adds	r8, sl, r8
   14da8:	ldr	sl, [sp, #48]	; 0x30
   14dac:	eor	r9, r5, r6
   14db0:	lsr	r6, r2, #24
   14db4:	lsr	r7, r9, #24
   14db8:	orr	r6, r6, r9, lsl #8
   14dbc:	orr	r7, r7, r2, lsl #8
   14dc0:	adc	r3, sl, r3
   14dc4:	adds	r9, r8, r6
   14dc8:	lsl	r8, lr, #1
   14dcc:	eor	r0, r0, r9
   14dd0:	adc	r3, r3, r7
   14dd4:	lsr	r2, r0, #16
   14dd8:	eor	r4, r4, r3
   14ddc:	str	r9, [sp, #200]	; 0xc8
   14de0:	str	r3, [sp, #216]	; 0xd8
   14de4:	lsr	r3, r4, #16
   14de8:	orr	r4, r2, r4, lsl #16
   14dec:	orr	r0, r3, r0, lsl #16
   14df0:	ldr	r3, [sp, #116]	; 0x74
   14df4:	adds	r9, r1, r4
   14df8:	lsl	r2, ip, #1
   14dfc:	ldr	r1, [sp, #180]	; 0xb4
   14e00:	adc	r5, r5, r0
   14e04:	eor	r6, r9, r6
   14e08:	mov	sl, r5
   14e0c:	orr	ip, r8, ip, lsr #31
   14e10:	ldr	r5, [sp, #120]	; 0x78
   14e14:	eor	r7, sl, r7
   14e18:	orr	lr, r2, lr, lsr #31
   14e1c:	str	r6, [sp, #180]	; 0xb4
   14e20:	str	r7, [sp, #184]	; 0xb8
   14e24:	adds	r3, r3, r1
   14e28:	ldr	r1, [sp, #208]	; 0xd0
   14e2c:	str	r9, [sp, #208]	; 0xd0
   14e30:	ldr	r9, [sp, #252]	; 0xfc
   14e34:	str	sl, [sp, #220]	; 0xdc
   14e38:	adc	r1, r5, r1
   14e3c:	adds	r3, r3, ip
   14e40:	adc	r1, r1, lr
   14e44:	eor	r7, r3, r9
   14e48:	ldr	r9, [sp, #256]	; 0x100
   14e4c:	ldr	sl, [sp, #16]
   14e50:	ldr	r5, [sp, #140]	; 0x8c
   14e54:	eor	r6, r1, r9
   14e58:	adds	r2, r5, r6
   14e5c:	ldr	r5, [sp, #204]	; 0xcc
   14e60:	eor	ip, ip, r2
   14e64:	lsr	r9, ip, #24
   14e68:	adc	r5, r5, r7
   14e6c:	adds	r3, sl, r3
   14e70:	ldr	sl, [sp, #20]
   14e74:	eor	lr, lr, r5
   14e78:	lsr	r8, lr, #24
   14e7c:	orr	lr, r9, lr, lsl #8
   14e80:	orr	ip, r8, ip, lsl #8
   14e84:	adc	r1, sl, r1
   14e88:	adds	r3, r3, lr
   14e8c:	ldr	sl, [sp, #156]	; 0x9c
   14e90:	adc	r1, r1, ip
   14e94:	eor	r6, r6, r3
   14e98:	eor	r7, r7, r1
   14e9c:	str	r3, [sp, #204]	; 0xcc
   14ea0:	lsr	r3, r7, #16
   14ea4:	str	r1, [sp, #224]	; 0xe0
   14ea8:	lsr	r1, r6, #16
   14eac:	orr	r6, r3, r6, lsl #16
   14eb0:	orr	r1, r1, r7, lsl #16
   14eb4:	mov	r3, r6
   14eb8:	ldr	r6, [sp, #152]	; 0x98
   14ebc:	lsl	r9, sl, #1
   14ec0:	mov	r7, r1
   14ec4:	adds	r8, r2, r7
   14ec8:	ldr	r2, [sp, #260]	; 0x104
   14ecc:	adc	r5, r5, r3
   14ed0:	str	r8, [sp, #140]	; 0x8c
   14ed4:	eor	ip, r5, ip
   14ed8:	mov	r1, r6
   14edc:	orr	r9, r9, r6, lsr #31
   14ee0:	ldr	r6, [sp, #4]
   14ee4:	str	r7, [sp, #232]	; 0xe8
   14ee8:	lsl	r7, r1, #1
   14eec:	str	r3, [sp, #240]	; 0xf0
   14ef0:	ldr	r3, [sp, #100]	; 0x64
   14ef4:	orr	r7, r7, sl, lsr #31
   14ef8:	str	ip, [sp, #156]	; 0x9c
   14efc:	ldr	r1, [sp, #188]	; 0xbc
   14f00:	adds	r1, r3, r1
   14f04:	ldr	r3, [sp, #140]	; 0x8c
   14f08:	adc	r8, r6, fp
   14f0c:	adds	r1, r1, r7
   14f10:	adc	ip, r8, r9
   14f14:	ldr	r8, [sp, #52]	; 0x34
   14f18:	eor	sl, ip, r2
   14f1c:	ldr	r2, [sp, #56]	; 0x38
   14f20:	eor	fp, r3, lr
   14f24:	ldr	lr, [sp, #212]	; 0xd4
   14f28:	str	fp, [sp, #152]	; 0x98
   14f2c:	ldr	fp, [sp, #236]	; 0xec
   14f30:	adds	r3, lr, sl
   14f34:	ldr	lr, [sp, #228]	; 0xe4
   14f38:	eor	r7, r7, r3
   14f3c:	eor	fp, r1, fp
   14f40:	lsr	r6, r7, #24
   14f44:	adc	lr, lr, fp
   14f48:	adds	r1, r8, r1
   14f4c:	eor	r9, r9, lr
   14f50:	adc	ip, r2, ip
   14f54:	lsr	r8, r9, #24
   14f58:	orr	r6, r6, r9, lsl #8
   14f5c:	orr	r7, r8, r7, lsl #8
   14f60:	adds	r1, r1, r6
   14f64:	adc	ip, ip, r7
   14f68:	eor	sl, sl, r1
   14f6c:	mov	r2, ip
   14f70:	lsr	ip, sl, #16
   14f74:	str	r1, [sp, #188]	; 0xbc
   14f78:	eor	fp, fp, r2
   14f7c:	lsr	r1, fp, #16
   14f80:	str	r2, [sp, #212]	; 0xd4
   14f84:	orr	fp, ip, fp, lsl #16
   14f88:	ldr	ip, [sp, #92]	; 0x5c
   14f8c:	orr	sl, r1, sl, lsl #16
   14f90:	adds	r3, r3, fp
   14f94:	adc	r2, lr, sl
   14f98:	ldr	lr, [sp, #192]	; 0xc0
   14f9c:	eor	r6, r6, r3
   14fa0:	eor	r7, r7, r2
   14fa4:	lsl	r9, r6, #1
   14fa8:	lsl	r8, r7, #1
   14fac:	str	r2, [sp, #228]	; 0xe4
   14fb0:	orr	r7, r9, r7, lsr #31
   14fb4:	orr	r6, r8, r6, lsr #31
   14fb8:	ldr	r8, [sp, #140]	; 0x8c
   14fbc:	adds	r1, ip, lr
   14fc0:	ldr	ip, [sp, #96]	; 0x60
   14fc4:	ldr	lr, [sp, #196]	; 0xc4
   14fc8:	ldr	r9, [sp, #44]	; 0x2c
   14fcc:	adc	ip, ip, lr
   14fd0:	adds	r1, r1, r7
   14fd4:	ldr	lr, [sp, #48]	; 0x30
   14fd8:	adc	ip, ip, r6
   14fdc:	eor	r4, r4, r1
   14fe0:	eor	r0, r0, ip
   14fe4:	adds	r2, r8, r0
   14fe8:	adc	r5, r5, r4
   14fec:	eor	r7, r7, r2
   14ff0:	eor	r6, r6, r5
   14ff4:	lsr	r8, r7, #24
   14ff8:	adds	r1, r9, r1
   14ffc:	lsr	r9, r6, #24
   15000:	adc	ip, lr, ip
   15004:	orr	r6, r8, r6, lsl #8
   15008:	orr	r7, r9, r7, lsl #8
   1500c:	adds	lr, r1, r6
   15010:	adc	r9, ip, r7
   15014:	eor	r0, r0, lr
   15018:	eor	r4, r4, r9
   1501c:	lsr	ip, r0, #16
   15020:	str	lr, [sp, #192]	; 0xc0
   15024:	lsr	r1, r4, #16
   15028:	ldr	lr, [sp, #176]	; 0xb0
   1502c:	orr	r4, ip, r4, lsl #16
   15030:	str	r9, [sp, #196]	; 0xc4
   15034:	orr	r0, r1, r0, lsl #16
   15038:	mov	r8, r0
   1503c:	adds	r0, r2, r4
   15040:	str	r4, [sp, #244]	; 0xf4
   15044:	adc	r5, r5, r8
   15048:	mov	ip, r0
   1504c:	ldr	r4, [sp, #116]	; 0x74
   15050:	mov	r9, r5
   15054:	lsl	r1, lr, #1
   15058:	str	r8, [sp, #252]	; 0xfc
   1505c:	ldr	r0, [sp, #160]	; 0xa0
   15060:	ldr	r5, [sp, #200]	; 0xc8
   15064:	str	ip, [sp, #200]	; 0xc8
   15068:	orr	r1, r1, r0, lsr #31
   1506c:	lsl	r2, r0, #1
   15070:	ldr	r0, [sp, #216]	; 0xd8
   15074:	adds	r8, r4, r5
   15078:	str	r9, [sp, #216]	; 0xd8
   1507c:	ldr	r5, [sp, #120]	; 0x78
   15080:	orr	r2, r2, lr, lsr #31
   15084:	ldr	r4, [sp, #228]	; 0xe4
   15088:	adc	r0, r5, r0
   1508c:	mov	r5, ip
   15090:	eor	r5, r5, r6
   15094:	eor	r6, r9, r7
   15098:	ldr	r9, [sp, #32]
   1509c:	adds	r8, r8, r2
   150a0:	str	r5, [sp, #160]	; 0xa0
   150a4:	adc	r0, r0, r1
   150a8:	ldr	r5, [sp, #232]	; 0xe8
   150ac:	str	r6, [sp, #176]	; 0xb0
   150b0:	eor	r6, r8, r5
   150b4:	ldr	r5, [sp, #240]	; 0xf0
   150b8:	eor	ip, r0, r5
   150bc:	ldr	r5, [sp, #28]
   150c0:	adds	r3, r3, ip
   150c4:	adc	lr, r4, r6
   150c8:	eor	r2, r2, r3
   150cc:	eor	r1, r1, lr
   150d0:	lsr	r4, r2, #24
   150d4:	adds	r8, r5, r8
   150d8:	lsr	r5, r1, #24
   150dc:	orr	r4, r4, r1, lsl #8
   150e0:	adc	r0, r9, r0
   150e4:	orr	r5, r5, r2, lsl #8
   150e8:	adds	r2, r8, r4
   150ec:	ldr	r8, [sp, #184]	; 0xb8
   150f0:	adc	r0, r0, r5
   150f4:	eor	ip, ip, r2
   150f8:	mov	r7, r0
   150fc:	str	r2, [sp, #228]	; 0xe4
   15100:	eor	r6, r6, r7
   15104:	str	r7, [sp, #232]	; 0xe8
   15108:	lsr	r7, ip, #16
   1510c:	lsr	r2, r6, #16
   15110:	orr	r0, r7, r6, lsl #16
   15114:	ldr	r6, [sp, #80]	; 0x50
   15118:	orr	r2, r2, ip, lsl #16
   1511c:	mov	r7, r0
   15120:	lsl	ip, r8, #1
   15124:	adds	r0, r3, r7
   15128:	ldr	r3, [sp, #204]	; 0xcc
   1512c:	str	r7, [sp, #240]	; 0xf0
   15130:	mov	r9, r0
   15134:	adc	r0, lr, r2
   15138:	ldr	r7, [sp, #180]	; 0xb4
   1513c:	mov	lr, r0
   15140:	eor	r4, r4, r9
   15144:	eor	r5, r5, lr
   15148:	str	r9, [sp, #204]	; 0xcc
   1514c:	ldr	r0, [sp, #76]	; 0x4c
   15150:	str	r2, [sp, #256]	; 0x100
   15154:	lsl	r1, r7, #1
   15158:	orr	ip, ip, r7, lsr #31
   1515c:	ldr	r7, [sp, #224]	; 0xe0
   15160:	adds	r3, r0, r3
   15164:	str	lr, [sp, #224]	; 0xe0
   15168:	ldr	lr, [sp, #144]	; 0x90
   1516c:	adc	r2, r6, r7
   15170:	orr	r7, r1, r8, lsr #31
   15174:	adds	r3, r3, r7
   15178:	adc	r2, r2, ip
   1517c:	eor	fp, fp, r3
   15180:	eor	sl, sl, r2
   15184:	adds	r0, lr, sl
   15188:	ldr	lr, [sp, #148]	; 0x94
   1518c:	eor	r1, r0, r7
   15190:	ldr	r7, [sp, #36]	; 0x24
   15194:	adc	r6, lr, fp
   15198:	lsr	lr, r1, #24
   1519c:	eor	ip, ip, r6
   151a0:	adds	r3, r7, r3
   151a4:	ldr	r7, [sp, #40]	; 0x28
   151a8:	orr	lr, lr, ip, lsl #8
   151ac:	lsr	r9, ip, #24
   151b0:	orr	r9, r9, r1, lsl #8
   151b4:	adc	r2, r7, r2
   151b8:	adds	r3, r3, lr
   151bc:	lsl	r7, r5, #1
   151c0:	eor	sl, sl, r3
   151c4:	adc	r1, r2, r9
   151c8:	lsr	r2, sl, #16
   151cc:	eor	fp, fp, r1
   151d0:	str	r3, [sp, #184]	; 0xb8
   151d4:	lsr	r3, fp, #16
   151d8:	str	r1, [sp, #236]	; 0xec
   151dc:	orr	fp, r2, fp, lsl #16
   151e0:	ldr	r1, [sp, #188]	; 0xbc
   151e4:	orr	sl, r3, sl, lsl #16
   151e8:	adds	r0, r0, fp
   151ec:	ldr	r3, [sp, #152]	; 0x98
   151f0:	orr	r7, r7, r4, lsr #31
   151f4:	str	fp, [sp, #260]	; 0x104
   151f8:	adc	r6, r6, sl
   151fc:	ldr	fp, [sp, #16]
   15200:	str	sl, [sp, #268]	; 0x10c
   15204:	ldr	sl, [sp, #212]	; 0xd4
   15208:	lsl	ip, r3, #1
   1520c:	adds	r2, fp, r1
   15210:	ldr	r1, [sp, #20]
   15214:	ldr	fp, [sp, #156]	; 0x9c
   15218:	adc	r8, r1, sl
   1521c:	ldr	r1, [sp, #248]	; 0xf8
   15220:	eor	sl, r0, lr
   15224:	orr	ip, ip, fp, lsr #31
   15228:	str	sl, [sp, #148]	; 0x94
   1522c:	lsl	lr, fp, #1
   15230:	eor	fp, r6, r9
   15234:	ldr	sl, [sp, #100]	; 0x64
   15238:	adds	r2, r2, ip
   1523c:	eor	r9, r2, r1
   15240:	ldr	r1, [sp, #264]	; 0x108
   15244:	orr	lr, lr, r3, lsr #31
   15248:	lsl	r3, r4, #1
   1524c:	str	fp, [sp, #156]	; 0x9c
   15250:	adc	r8, r8, lr
   15254:	ldr	fp, [sp, #220]	; 0xdc
   15258:	orr	r3, r3, r5, lsr #31
   1525c:	eor	r4, r8, r1
   15260:	ldr	r1, [sp, #208]	; 0xd0
   15264:	adds	r1, r1, r4
   15268:	adc	r5, fp, r9
   1526c:	ldr	fp, [sp, #4]
   15270:	eor	ip, ip, r1
   15274:	adds	r2, sl, r2
   15278:	eor	lr, lr, r5
   1527c:	lsr	sl, lr, #24
   15280:	adc	r8, fp, r8
   15284:	lsr	fp, ip, #24
   15288:	orr	ip, sl, ip, lsl #8
   1528c:	ldr	sl, [sp, #108]	; 0x6c
   15290:	orr	lr, fp, lr, lsl #8
   15294:	adds	r2, r2, lr
   15298:	eor	r4, r4, r2
   1529c:	adc	fp, r8, ip
   152a0:	lsr	r8, r4, #16
   152a4:	eor	r9, r9, fp
   152a8:	str	r2, [sp, #208]	; 0xd0
   152ac:	lsr	r2, r9, #16
   152b0:	orr	r8, r8, r9, lsl #16
   152b4:	ldr	r9, [sp, #104]	; 0x68
   152b8:	orr	r4, r2, r4, lsl #16
   152bc:	adds	r1, r1, r8
   152c0:	adc	r5, r5, r4
   152c4:	str	r1, [sp, #140]	; 0x8c
   152c8:	eor	ip, ip, r5
   152cc:	ldr	r1, [sp, #192]	; 0xc0
   152d0:	adds	r2, r9, r1
   152d4:	ldr	r1, [sp, #196]	; 0xc4
   152d8:	adc	r9, sl, r1
   152dc:	ldr	r1, [sp, #140]	; 0x8c
   152e0:	adds	r2, r2, r3
   152e4:	adc	r9, r9, r7
   152e8:	eor	sl, r2, r8
   152ec:	eor	r4, r4, r9
   152f0:	adds	r0, r0, r4
   152f4:	adc	r6, r6, sl
   152f8:	eor	r3, r3, r0
   152fc:	eor	lr, lr, r1
   15300:	ldr	r1, [sp, #52]	; 0x34
   15304:	eor	r7, r7, r6
   15308:	lsr	r8, r3, #24
   1530c:	adds	r2, r1, r2
   15310:	lsr	r1, r7, #24
   15314:	orr	r7, r8, r7, lsl #8
   15318:	str	r1, [sp, #144]	; 0x90
   1531c:	ldr	r1, [sp, #56]	; 0x38
   15320:	ldr	r8, [sp, #144]	; 0x90
   15324:	adc	r9, r1, r9
   15328:	orr	r3, r8, r3, lsl #8
   1532c:	adds	r8, r2, r7
   15330:	eor	r4, r4, r8
   15334:	adc	r9, r9, r3
   15338:	strd	r8, [sp, #192]	; 0xc0
   1533c:	eor	r8, r9, sl
   15340:	lsr	r9, r4, #16
   15344:	lsr	r2, r8, #16
   15348:	ldr	sl, [sp, #156]	; 0x9c
   1534c:	orr	r1, r9, r8, lsl #16
   15350:	orr	r4, r2, r4, lsl #16
   15354:	ldr	r9, [sp, #148]	; 0x94
   15358:	adds	r0, r0, r1
   1535c:	str	r0, [sp, #144]	; 0x90
   15360:	str	r4, [sp, #152]	; 0x98
   15364:	lsl	r4, sl, #1
   15368:	ldr	r0, [sp, #152]	; 0x98
   1536c:	lsl	r2, r9, #1
   15370:	str	r1, [sp, #248]	; 0xf8
   15374:	ldr	r1, [sp, #232]	; 0xe8
   15378:	orr	r2, r2, sl, lsr #31
   1537c:	ldr	sl, [sp, #8]
   15380:	adc	r6, r6, r0
   15384:	ldr	r0, [sp, #228]	; 0xe4
   15388:	str	r6, [sp, #148]	; 0x94
   1538c:	ldr	r6, [sp, #124]	; 0x7c
   15390:	adds	r8, r6, r0
   15394:	orr	r6, r4, r9, lsr #31
   15398:	ldr	r4, [sp, #12]
   1539c:	adc	r0, r4, r1
   153a0:	adds	r8, r8, r2
   153a4:	ldr	r1, [sp, #140]	; 0x8c
   153a8:	ldr	r4, [sp, #144]	; 0x90
   153ac:	eor	r7, r4, r7
   153b0:	ldr	r4, [sp, #244]	; 0xf4
   153b4:	str	r7, [sp, #156]	; 0x9c
   153b8:	ldr	r7, [sp, #148]	; 0x94
   153bc:	eor	r4, r8, r4
   153c0:	eor	r3, r7, r3
   153c4:	ldr	r7, [sp, #112]	; 0x70
   153c8:	str	r3, [sp, #180]	; 0xb4
   153cc:	adc	r3, r0, r6
   153d0:	ldr	r0, [sp, #252]	; 0xfc
   153d4:	eor	r0, r3, r0
   153d8:	adds	r1, r1, r0
   153dc:	eor	r2, r2, r1
   153e0:	adc	r5, r5, r4
   153e4:	eor	r9, r5, r6
   153e8:	lsr	r6, r2, #24
   153ec:	adds	r8, r7, r8
   153f0:	lsr	r7, r9, #24
   153f4:	adc	r3, sl, r3
   153f8:	orr	r6, r6, r9, lsl #8
   153fc:	orr	r7, r7, r2, lsl #8
   15400:	adds	r2, r8, r6
   15404:	lsl	r8, lr, #1
   15408:	eor	r0, r0, r2
   1540c:	adc	r9, r3, r7
   15410:	str	r2, [sp, #212]	; 0xd4
   15414:	lsr	r2, r0, #16
   15418:	eor	r4, r4, r9
   1541c:	lsr	r3, r4, #16
   15420:	str	r9, [sp, #220]	; 0xdc
   15424:	orr	r4, r2, r4, lsl #16
   15428:	orr	r0, r3, r0, lsl #16
   1542c:	ldr	r3, [sp, #68]	; 0x44
   15430:	adds	sl, r1, r4
   15434:	lsl	r2, ip, #1
   15438:	ldr	r1, [sp, #184]	; 0xb8
   1543c:	adc	r5, r5, r0
   15440:	eor	r6, sl, r6
   15444:	orr	lr, r2, lr, lsr #31
   15448:	ldr	r2, [sp, #72]	; 0x48
   1544c:	orr	ip, r8, ip, lsr #31
   15450:	str	r6, [sp, #184]	; 0xb8
   15454:	mov	r6, r5
   15458:	eor	r6, r6, r7
   1545c:	adds	r3, r3, r1
   15460:	ldr	r1, [sp, #236]	; 0xec
   15464:	str	r6, [sp, #188]	; 0xbc
   15468:	str	sl, [sp, #228]	; 0xe4
   1546c:	str	r5, [sp, #232]	; 0xe8
   15470:	ldr	sl, [sp, #64]	; 0x40
   15474:	adc	r1, r2, r1
   15478:	adds	r3, r3, ip
   1547c:	ldr	r5, [sp, #200]	; 0xc8
   15480:	adc	r1, r1, lr
   15484:	ldr	r2, [sp, #256]	; 0x100
   15488:	ldr	r8, [sp, #240]	; 0xf0
   1548c:	eor	r6, r1, r2
   15490:	adds	r2, r5, r6
   15494:	ldr	r5, [sp, #216]	; 0xd8
   15498:	eor	r7, r3, r8
   1549c:	eor	ip, ip, r2
   154a0:	ldr	r8, [sp, #60]	; 0x3c
   154a4:	lsr	r9, ip, #24
   154a8:	adc	r5, r5, r7
   154ac:	eor	lr, lr, r5
   154b0:	adds	r3, r8, r3
   154b4:	lsr	r8, lr, #24
   154b8:	orr	lr, r9, lr, lsl #8
   154bc:	adc	r1, sl, r1
   154c0:	orr	ip, r8, ip, lsl #8
   154c4:	ldr	r8, [sp, #208]	; 0xd0
   154c8:	adds	r3, r3, lr
   154cc:	adc	r1, r1, ip
   154d0:	eor	r6, r6, r3
   154d4:	mov	sl, r1
   154d8:	lsr	r1, r6, #16
   154dc:	str	r3, [sp, #200]	; 0xc8
   154e0:	eor	r7, r7, sl
   154e4:	lsr	r3, r7, #16
   154e8:	str	sl, [sp, #216]	; 0xd8
   154ec:	orr	r7, r1, r7, lsl #16
   154f0:	ldr	sl, [sp, #84]	; 0x54
   154f4:	orr	r1, r3, r6, lsl #16
   154f8:	ldr	r3, [sp, #160]	; 0xa0
   154fc:	adds	r2, r2, r7
   15500:	adc	r5, r5, r1
   15504:	str	r7, [sp, #236]	; 0xec
   15508:	ldr	r6, [sp, #176]	; 0xb0
   1550c:	eor	ip, r5, ip
   15510:	str	r1, [sp, #240]	; 0xf0
   15514:	adds	r1, sl, r8
   15518:	lsl	r7, r3, #1
   1551c:	ldr	r8, [sp, #88]	; 0x58
   15520:	str	ip, [sp, #176]	; 0xb0
   15524:	lsl	r9, r6, #1
   15528:	orr	r7, r7, r6, lsr #31
   1552c:	orr	r9, r9, r3, lsr #31
   15530:	eor	r3, r2, lr
   15534:	ldr	lr, [sp, #204]	; 0xcc
   15538:	adc	r8, r8, fp
   1553c:	adds	r1, r1, r7
   15540:	str	r3, [sp, #160]	; 0xa0
   15544:	adc	ip, r8, r9
   15548:	ldr	r8, [sp, #136]	; 0x88
   1554c:	ldr	r3, [sp, #268]	; 0x10c
   15550:	ldr	fp, [sp, #260]	; 0x104
   15554:	eor	sl, ip, r3
   15558:	adds	r3, lr, sl
   1555c:	ldr	lr, [sp, #224]	; 0xe0
   15560:	eor	fp, r1, fp
   15564:	eor	r7, r7, r3
   15568:	lsr	r6, r7, #24
   1556c:	adc	lr, lr, fp
   15570:	adds	r1, r8, r1
   15574:	eor	r9, r9, lr
   15578:	str	r1, [sp, #140]	; 0x8c
   1557c:	lsr	r8, r9, #24
   15580:	ldr	r1, [sp, #24]
   15584:	orr	r6, r6, r9, lsl #8
   15588:	orr	r7, r8, r7, lsl #8
   1558c:	adc	ip, r1, ip
   15590:	ldr	r1, [sp, #140]	; 0x8c
   15594:	adds	r9, r1, r6
   15598:	adc	ip, ip, r7
   1559c:	eor	sl, sl, r9
   155a0:	mov	r8, ip
   155a4:	lsr	ip, sl, #16
   155a8:	str	r9, [sp, #204]	; 0xcc
   155ac:	eor	fp, fp, r8
   155b0:	lsr	r1, fp, #16
   155b4:	str	r8, [sp, #208]	; 0xd0
   155b8:	orr	fp, ip, fp, lsl #16
   155bc:	ldr	ip, [sp, #44]	; 0x2c
   155c0:	orr	sl, r1, sl, lsl #16
   155c4:	ldr	r8, [sp, #192]	; 0xc0
   155c8:	adds	r3, r3, fp
   155cc:	adc	r1, lr, sl
   155d0:	eor	r6, r6, r3
   155d4:	eor	r7, r7, r1
   155d8:	ldr	lr, [sp, #196]	; 0xc4
   155dc:	lsl	r9, r6, #1
   155e0:	str	r1, [sp, #224]	; 0xe0
   155e4:	adds	r1, ip, r8
   155e8:	ldr	ip, [sp, #48]	; 0x30
   155ec:	lsl	r8, r7, #1
   155f0:	orr	r7, r9, r7, lsr #31
   155f4:	orr	r6, r8, r6, lsr #31
   155f8:	ldr	r9, [sp, #112]	; 0x70
   155fc:	adc	ip, ip, lr
   15600:	adds	r1, r1, r7
   15604:	adc	ip, ip, r6
   15608:	eor	r4, r4, r1
   1560c:	eor	r0, r0, ip
   15610:	adds	r2, r2, r0
   15614:	adc	r5, r5, r4
   15618:	eor	r7, r7, r2
   1561c:	adds	lr, r9, r1
   15620:	ldr	r1, [sp, #8]
   15624:	eor	r6, r6, r5
   15628:	lsr	r8, r7, #24
   1562c:	lsr	r9, r6, #24
   15630:	orr	r6, r8, r6, lsl #8
   15634:	orr	r7, r9, r7, lsl #8
   15638:	adc	ip, r1, ip
   1563c:	adds	lr, lr, r6
   15640:	adc	ip, ip, r7
   15644:	eor	r0, r0, lr
   15648:	eor	r4, r4, ip
   1564c:	str	lr, [sp, #192]	; 0xc0
   15650:	str	ip, [sp, #196]	; 0xc4
   15654:	lsr	ip, r0, #16
   15658:	lsr	r1, r4, #16
   1565c:	ldr	lr, [sp, #180]	; 0xb4
   15660:	orr	r4, ip, r4, lsl #16
   15664:	orr	r0, r1, r0, lsl #16
   15668:	ldr	ip, [sp, #84]	; 0x54
   1566c:	adds	r2, r2, r4
   15670:	adc	r5, r5, r0
   15674:	mov	r8, r0
   15678:	ldr	r0, [sp, #156]	; 0x9c
   1567c:	mov	r9, r2
   15680:	lsl	r1, lr, #1
   15684:	str	r5, [sp, #140]	; 0x8c
   15688:	eor	r6, r9, r6
   1568c:	ldr	r5, [sp, #212]	; 0xd4
   15690:	str	r6, [sp, #156]	; 0x9c
   15694:	str	r8, [sp, #252]	; 0xfc
   15698:	lsl	r2, r0, #1
   1569c:	orr	r1, r1, r0, lsr #31
   156a0:	str	r4, [sp, #244]	; 0xf4
   156a4:	orr	r2, r2, lr, lsr #31
   156a8:	ldr	r4, [sp, #88]	; 0x58
   156ac:	adds	r8, ip, r5
   156b0:	str	r9, [sp, #212]	; 0xd4
   156b4:	ldr	r9, [sp, #72]	; 0x48
   156b8:	ldr	r5, [sp, #140]	; 0x8c
   156bc:	ldr	r0, [sp, #220]	; 0xdc
   156c0:	eor	lr, r5, r7
   156c4:	ldr	r5, [sp, #68]	; 0x44
   156c8:	str	lr, [sp, #180]	; 0xb4
   156cc:	adc	r0, r4, r0
   156d0:	adds	r8, r8, r2
   156d4:	ldr	r4, [sp, #224]	; 0xe0
   156d8:	adc	r0, r0, r1
   156dc:	ldr	lr, [sp, #236]	; 0xec
   156e0:	eor	r6, r8, lr
   156e4:	ldr	lr, [sp, #240]	; 0xf0
   156e8:	eor	ip, r0, lr
   156ec:	adds	r3, r3, ip
   156f0:	eor	r2, r2, r3
   156f4:	adc	lr, r4, r6
   156f8:	lsr	r4, r2, #24
   156fc:	eor	r1, r1, lr
   15700:	adds	r8, r5, r8
   15704:	lsr	r5, r1, #24
   15708:	adc	r0, r9, r0
   1570c:	orr	r4, r4, r1, lsl #8
   15710:	orr	r5, r5, r2, lsl #8
   15714:	adds	r2, r8, r4
   15718:	ldr	r8, [sp, #188]	; 0xbc
   1571c:	eor	ip, ip, r2
   15720:	adc	r0, r0, r5
   15724:	lsr	r7, ip, #16
   15728:	eor	r6, r6, r0
   1572c:	str	r2, [sp, #220]	; 0xdc
   15730:	lsr	r2, r6, #16
   15734:	str	r0, [sp, #224]	; 0xe0
   15738:	orr	r7, r7, r6, lsl #16
   1573c:	orr	r2, r2, ip, lsl #16
   15740:	adds	r0, r3, r7
   15744:	lsl	ip, r8, #1
   15748:	ldr	r3, [sp, #200]	; 0xc8
   1574c:	str	r7, [sp, #236]	; 0xec
   15750:	mov	r7, r0
   15754:	mov	r9, r2
   15758:	ldr	r0, [sp, #184]	; 0xb8
   1575c:	adc	lr, lr, r9
   15760:	eor	r4, r4, r7
   15764:	mov	r6, lr
   15768:	str	r9, [sp, #240]	; 0xf0
   1576c:	ldr	lr, [sp, #60]	; 0x3c
   15770:	eor	r5, r5, r6
   15774:	ldr	r2, [sp, #216]	; 0xd8
   15778:	lsl	r1, r0, #1
   1577c:	orr	ip, ip, r0, lsr #31
   15780:	ldr	r0, [sp, #64]	; 0x40
   15784:	adds	r3, lr, r3
   15788:	str	r7, [sp, #188]	; 0xbc
   1578c:	orr	r7, r1, r8, lsr #31
   15790:	ldr	r8, [sp, #52]	; 0x34
   15794:	str	r6, [sp, #200]	; 0xc8
   15798:	ldr	lr, [sp, #144]	; 0x90
   1579c:	adc	r2, r0, r2
   157a0:	adds	r3, r3, r7
   157a4:	adc	r2, r2, ip
   157a8:	eor	fp, fp, r3
   157ac:	eor	sl, sl, r2
   157b0:	adds	r0, lr, sl
   157b4:	ldr	lr, [sp, #148]	; 0x94
   157b8:	eor	r1, r0, r7
   157bc:	adc	r6, lr, fp
   157c0:	adds	r3, r8, r3
   157c4:	ldr	r8, [sp, #56]	; 0x38
   157c8:	lsr	lr, r1, #24
   157cc:	eor	ip, ip, r6
   157d0:	lsr	r9, ip, #24
   157d4:	orr	lr, lr, ip, lsl #8
   157d8:	orr	r9, r9, r1, lsl #8
   157dc:	adc	r2, r8, r2
   157e0:	adds	r3, r3, lr
   157e4:	eor	sl, sl, r3
   157e8:	adc	r1, r2, r9
   157ec:	lsr	r2, sl, #16
   157f0:	eor	fp, fp, r1
   157f4:	str	r3, [sp, #184]	; 0xb8
   157f8:	lsr	r3, fp, #16
   157fc:	str	r1, [sp, #216]	; 0xd8
   15800:	orr	fp, r2, fp, lsl #16
   15804:	ldr	r1, [sp, #104]	; 0x68
   15808:	ldr	r2, [sp, #204]	; 0xcc
   1580c:	mov	r7, fp
   15810:	orr	fp, r3, sl, lsl #16
   15814:	adds	r0, r0, r7
   15818:	mov	r8, fp
   1581c:	eor	sl, r0, lr
   15820:	ldr	r3, [sp, #108]	; 0x6c
   15824:	adc	r6, r6, r8
   15828:	ldr	fp, [sp, #160]	; 0xa0
   1582c:	eor	r9, r6, r9
   15830:	adds	r2, r1, r2
   15834:	str	sl, [sp, #148]	; 0x94
   15838:	str	r8, [sp, #260]	; 0x104
   1583c:	ldr	r1, [sp, #176]	; 0xb0
   15840:	str	r9, [sp, #160]	; 0xa0
   15844:	lsl	ip, fp, #1
   15848:	str	r7, [sp, #256]	; 0x100
   1584c:	ldr	r8, [sp, #208]	; 0xd0
   15850:	lsl	r7, r5, #1
   15854:	lsl	lr, r1, #1
   15858:	ldr	sl, [sp, #28]
   1585c:	orr	ip, ip, r1, lsr #31
   15860:	orr	lr, lr, fp, lsr #31
   15864:	ldr	fp, [sp, #248]	; 0xf8
   15868:	adc	r8, r3, r8
   1586c:	adds	r2, r2, ip
   15870:	orr	r7, r7, r4, lsr #31
   15874:	adc	r8, r8, lr
   15878:	lsl	r3, r4, #1
   1587c:	orr	r3, r3, r5, lsr #31
   15880:	eor	r9, r2, fp
   15884:	ldr	fp, [sp, #152]	; 0x98
   15888:	eor	r4, r8, fp
   1588c:	ldr	fp, [sp, #228]	; 0xe4
   15890:	adds	r1, fp, r4
   15894:	ldr	fp, [sp, #232]	; 0xe8
   15898:	eor	ip, ip, r1
   1589c:	adc	r5, fp, r9
   158a0:	adds	r2, sl, r2
   158a4:	lsr	fp, ip, #24
   158a8:	eor	lr, lr, r5
   158ac:	str	r2, [sp, #144]	; 0x90
   158b0:	lsr	sl, lr, #24
   158b4:	ldr	r2, [sp, #32]
   158b8:	orr	lr, fp, lr, lsl #8
   158bc:	orr	ip, sl, ip, lsl #8
   158c0:	adc	r8, r2, r8
   158c4:	ldr	r2, [sp, #144]	; 0x90
   158c8:	adds	fp, r2, lr
   158cc:	mov	sl, fp
   158d0:	adc	fp, r8, ip
   158d4:	eor	r9, r9, fp
   158d8:	eor	r4, r4, sl
   158dc:	lsr	r2, r9, #16
   158e0:	str	sl, [sp, #204]	; 0xcc
   158e4:	lsr	r8, r4, #16
   158e8:	ldr	sl, [sp, #196]	; 0xc4
   158ec:	orr	r4, r2, r4, lsl #16
   158f0:	orr	r8, r8, r9, lsl #16
   158f4:	ldr	r2, [sp, #76]	; 0x4c
   158f8:	ldr	r9, [sp, #192]	; 0xc0
   158fc:	adds	r1, r1, r8
   15900:	adc	r5, r5, r4
   15904:	eor	lr, lr, r1
   15908:	eor	ip, ip, r5
   1590c:	adds	r2, r2, r9
   15910:	ldr	r9, [sp, #80]	; 0x50
   15914:	adc	r9, r9, sl
   15918:	adds	r2, r2, r3
   1591c:	adc	r9, r9, r7
   15920:	eor	sl, r2, r8
   15924:	eor	r4, r4, r9
   15928:	adds	r0, r0, r4
   1592c:	eor	r3, r3, r0
   15930:	adc	r6, r6, sl
   15934:	str	r0, [sp, #152]	; 0x98
   15938:	eor	r7, r7, r6
   1593c:	lsr	r8, r3, #24
   15940:	ldr	r0, [sp, #124]	; 0x7c
   15944:	adds	r2, r0, r2
   15948:	lsr	r0, r7, #24
   1594c:	orr	r7, r8, r7, lsl #8
   15950:	str	r0, [sp, #144]	; 0x90
   15954:	ldr	r0, [sp, #12]
   15958:	adc	r9, r0, r9
   1595c:	ldr	r0, [sp, #144]	; 0x90
   15960:	orr	r3, r0, r3, lsl #8
   15964:	adds	r0, r2, r7
   15968:	eor	r4, r4, r0
   1596c:	adc	r8, r9, r3
   15970:	lsr	r9, r4, #16
   15974:	str	r0, [sp, #192]	; 0xc0
   15978:	str	r8, [sp, #196]	; 0xc4
   1597c:	eor	r8, r8, sl
   15980:	lsr	r2, r8, #16
   15984:	orr	r0, r9, r8, lsl #16
   15988:	ldr	r9, [sp, #160]	; 0xa0
   1598c:	orr	r4, r2, r4, lsl #16
   15990:	ldr	r2, [sp, #152]	; 0x98
   15994:	mov	r8, r4
   15998:	str	r0, [sp, #232]	; 0xe8
   1599c:	lsl	r4, r9, #1
   159a0:	str	r8, [sp, #248]	; 0xf8
   159a4:	adds	sl, r2, r0
   159a8:	ldr	r0, [sp, #116]	; 0x74
   159ac:	adc	r6, r6, r8
   159b0:	str	sl, [sp, #144]	; 0x90
   159b4:	ldr	sl, [sp, #148]	; 0x94
   159b8:	str	r6, [sp, #148]	; 0x94
   159bc:	ldr	r6, [sp, #220]	; 0xdc
   159c0:	lsl	r2, sl, #1
   159c4:	adds	r8, r0, r6
   159c8:	orr	r6, r4, sl, lsr #31
   159cc:	ldr	r4, [sp, #120]	; 0x78
   159d0:	orr	r2, r2, r9, lsr #31
   159d4:	ldr	r0, [sp, #224]	; 0xe0
   159d8:	adc	r0, r4, r0
   159dc:	ldr	r4, [sp, #144]	; 0x90
   159e0:	adds	r8, r8, r2
   159e4:	eor	sl, r4, r7
   159e8:	ldr	r4, [sp, #148]	; 0x94
   159ec:	ldr	r7, [sp, #252]	; 0xfc
   159f0:	str	sl, [sp, #152]	; 0x98
   159f4:	ldr	sl, [sp, #4]
   159f8:	eor	r9, r4, r3
   159fc:	adc	r3, r0, r6
   15a00:	ldr	r4, [sp, #244]	; 0xf4
   15a04:	eor	r0, r3, r7
   15a08:	str	r9, [sp, #160]	; 0xa0
   15a0c:	ldr	r7, [sp, #100]	; 0x64
   15a10:	adds	r1, r1, r0
   15a14:	eor	r2, r2, r1
   15a18:	eor	r4, r8, r4
   15a1c:	adc	r5, r5, r4
   15a20:	eor	r9, r5, r6
   15a24:	lsr	r6, r2, #24
   15a28:	adds	r8, r7, r8
   15a2c:	lsr	r7, r9, #24
   15a30:	adc	r3, sl, r3
   15a34:	orr	r6, r6, r9, lsl #8
   15a38:	orr	r7, r7, r2, lsl #8
   15a3c:	adds	r2, r8, r6
   15a40:	lsl	r8, lr, #1
   15a44:	adc	r9, r3, r7
   15a48:	eor	r0, r0, r2
   15a4c:	eor	r4, r4, r9
   15a50:	str	r2, [sp, #208]	; 0xd0
   15a54:	lsr	r2, r0, #16
   15a58:	lsr	r3, r4, #16
   15a5c:	str	r9, [sp, #220]	; 0xdc
   15a60:	orr	r4, r2, r4, lsl #16
   15a64:	orr	r0, r3, r0, lsl #16
   15a68:	ldr	r3, [sp, #184]	; 0xb8
   15a6c:	adds	sl, r1, r4
   15a70:	lsl	r2, ip, #1
   15a74:	adc	r5, r5, r0
   15a78:	ldr	r1, [sp, #216]	; 0xd8
   15a7c:	eor	r6, sl, r6
   15a80:	mov	r9, r5
   15a84:	orr	lr, r2, lr, lsr #31
   15a88:	ldr	r5, [sp, #136]	; 0x88
   15a8c:	orr	ip, r8, ip, lsr #31
   15a90:	str	r6, [sp, #176]	; 0xb0
   15a94:	str	sl, [sp, #216]	; 0xd8
   15a98:	str	r9, [sp, #224]	; 0xe0
   15a9c:	adds	r3, r5, r3
   15aa0:	ldr	r5, [sp, #24]
   15aa4:	adc	r1, r5, r1
   15aa8:	eor	r5, r9, r7
   15aac:	adds	r3, r3, ip
   15ab0:	str	r5, [sp, #184]	; 0xb8
   15ab4:	adc	r1, r1, lr
   15ab8:	ldr	sl, [sp, #92]	; 0x5c
   15abc:	ldr	r2, [sp, #240]	; 0xf0
   15ac0:	ldr	r9, [sp, #212]	; 0xd4
   15ac4:	ldr	r7, [sp, #236]	; 0xec
   15ac8:	eor	r6, r1, r2
   15acc:	ldr	r5, [sp, #140]	; 0x8c
   15ad0:	adds	r2, r9, r6
   15ad4:	eor	ip, ip, r2
   15ad8:	eor	r7, r3, r7
   15adc:	lsr	r9, ip, #24
   15ae0:	adc	r5, r5, r7
   15ae4:	adds	r3, sl, r3
   15ae8:	ldr	sl, [sp, #96]	; 0x60
   15aec:	eor	lr, lr, r5
   15af0:	lsr	r8, lr, #24
   15af4:	orr	lr, r9, lr, lsl #8
   15af8:	orr	ip, r8, ip, lsl #8
   15afc:	ldr	r8, [sp, #20]
   15b00:	adc	r1, sl, r1
   15b04:	adds	r3, r3, lr
   15b08:	adc	r1, r1, ip
   15b0c:	eor	r6, r6, r3
   15b10:	ldr	sl, [sp, #180]	; 0xb4
   15b14:	eor	r7, r7, r1
   15b18:	str	r3, [sp, #212]	; 0xd4
   15b1c:	lsr	r3, r7, #16
   15b20:	str	r1, [sp, #228]	; 0xe4
   15b24:	lsr	r1, r6, #16
   15b28:	orr	r7, r1, r7, lsl #16
   15b2c:	orr	r1, r3, r6, lsl #16
   15b30:	ldr	r6, [sp, #16]
   15b34:	adds	r2, r2, r7
   15b38:	lsl	r9, sl, #1
   15b3c:	ldr	r3, [sp, #156]	; 0x9c
   15b40:	adc	r5, r5, r1
   15b44:	str	r7, [sp, #236]	; 0xec
   15b48:	str	r1, [sp, #240]	; 0xf0
   15b4c:	ldr	r1, [sp, #204]	; 0xcc
   15b50:	orr	r9, r9, r3, lsr #31
   15b54:	lsl	r7, r3, #1
   15b58:	ldr	r3, [sp, #256]	; 0x100
   15b5c:	adds	r1, r6, r1
   15b60:	orr	r7, r7, sl, lsr #31
   15b64:	adc	r8, r8, fp
   15b68:	eor	fp, r2, lr
   15b6c:	adds	r1, r1, r7
   15b70:	eor	lr, r5, ip
   15b74:	str	fp, [sp, #140]	; 0x8c
   15b78:	eor	fp, r1, r3
   15b7c:	adc	ip, r8, r9
   15b80:	str	lr, [sp, #156]	; 0x9c
   15b84:	ldr	r3, [sp, #260]	; 0x104
   15b88:	ldr	r8, [sp, #36]	; 0x24
   15b8c:	ldr	lr, [sp, #200]	; 0xc8
   15b90:	eor	sl, ip, r3
   15b94:	ldr	r3, [sp, #188]	; 0xbc
   15b98:	adds	r3, r3, sl
   15b9c:	adc	r6, lr, fp
   15ba0:	eor	r7, r7, r3
   15ba4:	ldr	lr, [sp, #40]	; 0x28
   15ba8:	eor	r9, r9, r6
   15bac:	adds	r1, r8, r1
   15bb0:	str	r6, [sp, #180]	; 0xb4
   15bb4:	lsr	r6, r7, #24
   15bb8:	lsr	r8, r9, #24
   15bbc:	orr	r6, r6, r9, lsl #8
   15bc0:	orr	r7, r8, r7, lsl #8
   15bc4:	adc	ip, lr, ip
   15bc8:	adds	lr, r1, r6
   15bcc:	adc	ip, ip, r7
   15bd0:	eor	sl, sl, lr
   15bd4:	eor	fp, fp, ip
   15bd8:	str	lr, [sp, #188]	; 0xbc
   15bdc:	lsr	r1, fp, #16
   15be0:	str	ip, [sp, #200]	; 0xc8
   15be4:	lsr	ip, sl, #16
   15be8:	ldr	lr, [sp, #52]	; 0x34
   15bec:	orr	sl, r1, sl, lsl #16
   15bf0:	ldr	r1, [sp, #180]	; 0xb4
   15bf4:	orr	fp, ip, fp, lsl #16
   15bf8:	adds	r3, r3, fp
   15bfc:	ldr	ip, [sp, #196]	; 0xc4
   15c00:	eor	r6, r6, r3
   15c04:	lsl	r9, r6, #1
   15c08:	adc	r1, r1, sl
   15c0c:	eor	r7, r7, r1
   15c10:	str	r1, [sp, #180]	; 0xb4
   15c14:	lsl	r8, r7, #1
   15c18:	ldr	r1, [sp, #192]	; 0xc0
   15c1c:	orr	r7, r9, r7, lsr #31
   15c20:	orr	r6, r8, r6, lsr #31
   15c24:	adds	r1, lr, r1
   15c28:	ldr	lr, [sp, #56]	; 0x38
   15c2c:	ldr	r9, [sp, #36]	; 0x24
   15c30:	adc	ip, lr, ip
   15c34:	adds	r1, r1, r7
   15c38:	ldr	lr, [sp, #40]	; 0x28
   15c3c:	adc	ip, ip, r6
   15c40:	eor	r4, r4, r1
   15c44:	eor	r0, r0, ip
   15c48:	adds	r2, r2, r0
   15c4c:	adc	r5, r5, r4
   15c50:	eor	r7, r7, r2
   15c54:	eor	r6, r6, r5
   15c58:	lsr	r8, r7, #24
   15c5c:	adds	r1, r9, r1
   15c60:	lsr	r9, r6, #24
   15c64:	adc	ip, lr, ip
   15c68:	orr	r6, r8, r6, lsl #8
   15c6c:	orr	r7, r9, r7, lsl #8
   15c70:	adds	r8, r1, r6
   15c74:	adc	ip, ip, r7
   15c78:	eor	r0, r0, r8
   15c7c:	eor	r4, r4, ip
   15c80:	str	r8, [sp, #192]	; 0xc0
   15c84:	str	ip, [sp, #196]	; 0xc4
   15c88:	lsr	ip, r0, #16
   15c8c:	lsr	r1, r4, #16
   15c90:	orr	r4, ip, r4, lsl #16
   15c94:	ldr	ip, [sp, #152]	; 0x98
   15c98:	mov	lr, r4
   15c9c:	orr	r4, r1, r0, lsl #16
   15ca0:	adds	r2, r2, lr
   15ca4:	adc	r5, r5, r4
   15ca8:	mov	r8, r4
   15cac:	ldr	r4, [sp, #160]	; 0xa0
   15cb0:	eor	r7, r5, r7
   15cb4:	mov	r9, r2
   15cb8:	eor	r6, r2, r6
   15cbc:	lsl	r2, ip, #1
   15cc0:	str	lr, [sp, #244]	; 0xf4
   15cc4:	mov	lr, r5
   15cc8:	str	r8, [sp, #252]	; 0xfc
   15ccc:	ldr	r5, [sp, #124]	; 0x7c
   15cd0:	lsl	r1, r4, #1
   15cd4:	orr	r2, r2, r4, lsr #31
   15cd8:	str	r6, [sp, #152]	; 0x98
   15cdc:	orr	r1, r1, ip, lsr #31
   15ce0:	str	r7, [sp, #160]	; 0xa0
   15ce4:	ldr	r8, [sp, #208]	; 0xd0
   15ce8:	str	r9, [sp, #204]	; 0xcc
   15cec:	ldr	ip, [sp, #220]	; 0xdc
   15cf0:	str	lr, [sp, #208]	; 0xd0
   15cf4:	ldr	r4, [sp, #180]	; 0xb4
   15cf8:	adds	r8, r5, r8
   15cfc:	ldr	r5, [sp, #12]
   15d00:	ldr	r7, [sp, #236]	; 0xec
   15d04:	adc	r0, r5, ip
   15d08:	adds	r8, r8, r2
   15d0c:	adc	r0, r0, r1
   15d10:	eor	r6, r8, r7
   15d14:	ldr	r7, [sp, #240]	; 0xf0
   15d18:	eor	ip, r0, r7
   15d1c:	ldr	r7, [sp, #60]	; 0x3c
   15d20:	adds	r3, r3, ip
   15d24:	adc	lr, r4, r6
   15d28:	eor	r2, r2, r3
   15d2c:	eor	r1, r1, lr
   15d30:	lsr	r4, r2, #24
   15d34:	lsr	r5, r1, #24
   15d38:	adds	r8, r7, r8
   15d3c:	ldr	r7, [sp, #64]	; 0x40
   15d40:	orr	r4, r4, r1, lsl #8
   15d44:	orr	r5, r5, r2, lsl #8
   15d48:	adc	r0, r7, r0
   15d4c:	adds	r7, r8, r4
   15d50:	ldr	r8, [sp, #184]	; 0xb8
   15d54:	adc	r1, r0, r5
   15d58:	eor	ip, ip, r7
   15d5c:	eor	r6, r6, r1
   15d60:	str	r7, [sp, #180]	; 0xb4
   15d64:	lsr	r7, ip, #16
   15d68:	lsr	r2, r6, #16
   15d6c:	str	r1, [sp, #220]	; 0xdc
   15d70:	orr	r6, r7, r6, lsl #16
   15d74:	orr	r7, r2, ip, lsl #16
   15d78:	ldr	r2, [sp, #176]	; 0xb0
   15d7c:	adds	r3, r3, r6
   15d80:	lsl	ip, r8, #1
   15d84:	eor	r4, r4, r3
   15d88:	mov	r0, r3
   15d8c:	adc	r3, lr, r7
   15d90:	strd	r6, [sp, #236]	; 0xec
   15d94:	mov	r9, r3
   15d98:	ldr	r7, [sp, #44]	; 0x2c
   15d9c:	lsl	r1, r2, #1
   15da0:	eor	r5, r5, r9
   15da4:	orr	ip, ip, r2, lsr #31
   15da8:	ldr	r6, [sp, #48]	; 0x30
   15dac:	ldr	r3, [sp, #212]	; 0xd4
   15db0:	str	r0, [sp, #212]	; 0xd4
   15db4:	ldr	r2, [sp, #228]	; 0xe4
   15db8:	str	r9, [sp, #228]	; 0xe4
   15dbc:	adds	r3, r7, r3
   15dc0:	orr	r7, r1, r8, lsr #31
   15dc4:	ldr	r8, [sp, #88]	; 0x58
   15dc8:	ldr	r1, [sp, #144]	; 0x90
   15dcc:	adc	r2, r6, r2
   15dd0:	adds	r3, r3, r7
   15dd4:	adc	r2, r2, ip
   15dd8:	eor	fp, fp, r3
   15ddc:	ldr	r6, [sp, #148]	; 0x94
   15de0:	eor	sl, sl, r2
   15de4:	adds	r0, r1, sl
   15de8:	eor	r1, r0, r7
   15dec:	ldr	r7, [sp, #84]	; 0x54
   15df0:	adc	r6, r6, fp
   15df4:	lsr	lr, r1, #24
   15df8:	eor	ip, ip, r6
   15dfc:	lsr	r9, ip, #24
   15e00:	orr	lr, lr, ip, lsl #8
   15e04:	orr	r9, r9, r1, lsl #8
   15e08:	adds	r3, r7, r3
   15e0c:	ldr	r1, [sp, #140]	; 0x8c
   15e10:	adc	r2, r8, r2
   15e14:	adds	r3, r3, lr
   15e18:	lsl	r7, r5, #1
   15e1c:	adc	r2, r2, r9
   15e20:	eor	sl, sl, r3
   15e24:	ldr	r8, [sp, #200]	; 0xc8
   15e28:	eor	fp, fp, r2
   15e2c:	str	r3, [sp, #176]	; 0xb0
   15e30:	orr	r7, r7, r4, lsr #31
   15e34:	lsr	r3, fp, #16
   15e38:	str	r2, [sp, #184]	; 0xb8
   15e3c:	lsr	r2, sl, #16
   15e40:	orr	ip, r3, sl, lsl #16
   15e44:	ldr	r3, [sp, #100]	; 0x64
   15e48:	orr	fp, r2, fp, lsl #16
   15e4c:	mov	r2, ip
   15e50:	lsl	ip, r1, #1
   15e54:	ldr	sl, [sp, #136]	; 0x88
   15e58:	adds	r0, r0, fp
   15e5c:	adc	r6, r6, r2
   15e60:	str	fp, [sp, #256]	; 0x100
   15e64:	eor	lr, r0, lr
   15e68:	str	r2, [sp, #260]	; 0x104
   15e6c:	ldr	fp, [sp, #4]
   15e70:	str	lr, [sp, #144]	; 0x90
   15e74:	ldr	r2, [sp, #188]	; 0xbc
   15e78:	adds	r2, r3, r2
   15e7c:	ldr	r3, [sp, #156]	; 0x9c
   15e80:	adc	r8, fp, r8
   15e84:	ldr	fp, [sp, #232]	; 0xe8
   15e88:	orr	ip, ip, r3, lsr #31
   15e8c:	lsl	lr, r3, #1
   15e90:	eor	r3, r6, r9
   15e94:	adds	r2, r2, ip
   15e98:	eor	r9, r2, fp
   15e9c:	ldr	fp, [sp, #248]	; 0xf8
   15ea0:	orr	lr, lr, r1, lsr #31
   15ea4:	str	r3, [sp, #148]	; 0x94
   15ea8:	lsl	r3, r4, #1
   15eac:	adc	r8, r8, lr
   15eb0:	orr	r3, r3, r5, lsr #31
   15eb4:	eor	r4, r8, fp
   15eb8:	ldr	fp, [sp, #216]	; 0xd8
   15ebc:	adds	r1, fp, r4
   15ec0:	ldr	fp, [sp, #224]	; 0xe0
   15ec4:	eor	ip, ip, r1
   15ec8:	adc	r5, fp, r9
   15ecc:	ldr	fp, [sp, #24]
   15ed0:	adds	r2, sl, r2
   15ed4:	eor	lr, lr, r5
   15ed8:	lsr	sl, lr, #24
   15edc:	adc	r8, fp, r8
   15ee0:	lsr	fp, ip, #24
   15ee4:	orr	ip, sl, ip, lsl #8
   15ee8:	ldr	sl, [sp, #196]	; 0xc4
   15eec:	orr	lr, fp, lr, lsl #8
   15ef0:	adds	fp, r2, lr
   15ef4:	mov	r2, fp
   15ef8:	adc	fp, r8, ip
   15efc:	eor	r9, r9, fp
   15f00:	eor	r4, r4, r2
   15f04:	lsr	r8, r4, #16
   15f08:	str	r2, [sp, #188]	; 0xbc
   15f0c:	lsr	r2, r9, #16
   15f10:	orr	r8, r8, r9, lsl #16
   15f14:	ldr	r9, [sp, #192]	; 0xc0
   15f18:	orr	r4, r2, r4, lsl #16
   15f1c:	ldr	r2, [sp, #112]	; 0x70
   15f20:	adds	r1, r1, r8
   15f24:	adc	r5, r5, r4
   15f28:	eor	lr, lr, r1
   15f2c:	eor	ip, ip, r5
   15f30:	adds	r2, r2, r9
   15f34:	ldr	r9, [sp, #8]
   15f38:	adc	r9, r9, sl
   15f3c:	adds	r2, r2, r3
   15f40:	eor	sl, r2, r8
   15f44:	adc	r9, r9, r7
   15f48:	ldr	r8, [sp, #76]	; 0x4c
   15f4c:	eor	r4, r4, r9
   15f50:	adds	r0, r0, r4
   15f54:	adc	r6, r6, sl
   15f58:	eor	r3, r3, r0
   15f5c:	eor	r7, r7, r6
   15f60:	adds	r2, r8, r2
   15f64:	lsr	r8, r7, #24
   15f68:	str	r8, [sp, #140]	; 0x8c
   15f6c:	ldr	r8, [sp, #80]	; 0x50
   15f70:	adc	r9, r8, r9
   15f74:	lsr	r8, r3, #24
   15f78:	orr	r7, r8, r7, lsl #8
   15f7c:	ldr	r8, [sp, #140]	; 0x8c
   15f80:	orr	r3, r8, r3, lsl #8
   15f84:	adds	r8, r2, r7
   15f88:	eor	r4, r4, r8
   15f8c:	adc	r9, r9, r3
   15f90:	strd	r8, [sp, #192]	; 0xc0
   15f94:	eor	r8, r9, sl
   15f98:	lsr	r9, r4, #16
   15f9c:	lsr	r2, r8, #16
   15fa0:	orr	sl, r9, r8, lsl #16
   15fa4:	ldr	r9, [sp, #148]	; 0x94
   15fa8:	orr	r4, r2, r4, lsl #16
   15fac:	adds	r0, r0, sl
   15fb0:	adc	r6, r6, r4
   15fb4:	mov	r8, r4
   15fb8:	str	r0, [sp, #140]	; 0x8c
   15fbc:	str	sl, [sp, #248]	; 0xf8
   15fc0:	lsl	r4, r9, #1
   15fc4:	ldr	sl, [sp, #144]	; 0x90
   15fc8:	str	r6, [sp, #144]	; 0x90
   15fcc:	ldr	r6, [sp, #68]	; 0x44
   15fd0:	str	r8, [sp, #264]	; 0x108
   15fd4:	ldr	r0, [sp, #180]	; 0xb4
   15fd8:	lsl	r2, sl, #1
   15fdc:	orr	r2, r2, r9, lsr #31
   15fe0:	adds	r8, r6, r0
   15fe4:	orr	r6, r4, sl, lsr #31
   15fe8:	ldr	r4, [sp, #72]	; 0x48
   15fec:	ldr	sl, [sp, #108]	; 0x6c
   15ff0:	ldr	r0, [sp, #220]	; 0xdc
   15ff4:	adc	r0, r4, r0
   15ff8:	ldr	r4, [sp, #140]	; 0x8c
   15ffc:	adds	r8, r8, r2
   16000:	eor	r7, r4, r7
   16004:	str	r7, [sp, #156]	; 0x9c
   16008:	ldr	r7, [sp, #144]	; 0x90
   1600c:	eor	r3, r7, r3
   16010:	ldr	r7, [sp, #104]	; 0x68
   16014:	str	r3, [sp, #148]	; 0x94
   16018:	adc	r3, r0, r6
   1601c:	ldr	r0, [sp, #244]	; 0xf4
   16020:	eor	r4, r8, r0
   16024:	ldr	r0, [sp, #252]	; 0xfc
   16028:	eor	r0, r3, r0
   1602c:	adds	r1, r1, r0
   16030:	adc	r5, r5, r4
   16034:	eor	r2, r2, r1
   16038:	eor	r9, r5, r6
   1603c:	lsr	r6, r2, #24
   16040:	adds	r8, r7, r8
   16044:	lsr	r7, r9, #24
   16048:	adc	r3, sl, r3
   1604c:	orr	r6, r6, r9, lsl #8
   16050:	ldr	r9, [sp, #16]
   16054:	orr	r7, r7, r2, lsl #8
   16058:	adds	r2, r8, r6
   1605c:	lsl	r8, lr, #1
   16060:	adc	r3, r3, r7
   16064:	eor	r0, r0, r2
   16068:	mov	sl, r3
   1606c:	str	r2, [sp, #200]	; 0xc8
   16070:	lsr	r2, r0, #16
   16074:	eor	r4, r4, sl
   16078:	lsr	r3, r4, #16
   1607c:	str	sl, [sp, #216]	; 0xd8
   16080:	orr	r4, r2, r4, lsl #16
   16084:	orr	r0, r3, r0, lsl #16
   16088:	ldr	r3, [sp, #176]	; 0xb0
   1608c:	lsl	r2, ip, #1
   16090:	adds	r1, r1, r4
   16094:	str	r4, [sp, #232]	; 0xe8
   16098:	mov	r4, r1
   1609c:	adc	r1, r5, r0
   160a0:	mov	sl, r1
   160a4:	orr	lr, r2, lr, lsr #31
   160a8:	mov	r5, r4
   160ac:	ldr	r1, [sp, #20]
   160b0:	eor	r5, r5, r6
   160b4:	eor	r6, sl, r7
   160b8:	orr	ip, r8, ip, lsr #31
   160bc:	adds	r3, r9, r3
   160c0:	ldr	r2, [sp, #184]	; 0xb8
   160c4:	str	r5, [sp, #176]	; 0xb0
   160c8:	str	r6, [sp, #180]	; 0xb4
   160cc:	ldr	r6, [sp, #236]	; 0xec
   160d0:	str	r4, [sp, #220]	; 0xdc
   160d4:	ldr	r8, [sp, #240]	; 0xf0
   160d8:	adc	r1, r1, r2
   160dc:	adds	r3, r3, ip
   160e0:	str	sl, [sp, #224]	; 0xe0
   160e4:	adc	r1, r1, lr
   160e8:	ldr	r2, [sp, #204]	; 0xcc
   160ec:	eor	r7, r3, r6
   160f0:	ldr	r4, [sp, #208]	; 0xd0
   160f4:	eor	r6, r1, r8
   160f8:	ldr	r8, [sp, #116]	; 0x74
   160fc:	adds	r2, r2, r6
   16100:	eor	ip, ip, r2
   16104:	ldr	sl, [sp, #120]	; 0x78
   16108:	adc	r5, r4, r7
   1610c:	lsr	r9, ip, #24
   16110:	eor	lr, lr, r5
   16114:	ldr	r4, [sp, #160]	; 0xa0
   16118:	adds	r3, r8, r3
   1611c:	lsr	r8, lr, #24
   16120:	orr	lr, r9, lr, lsl #8
   16124:	orr	ip, r8, ip, lsl #8
   16128:	adc	r1, sl, r1
   1612c:	adds	r3, r3, lr
   16130:	adc	r1, r1, ip
   16134:	eor	r6, r6, r3
   16138:	lsl	r9, r4, #1
   1613c:	eor	r7, r7, r1
   16140:	str	r3, [sp, #204]	; 0xcc
   16144:	lsr	r3, r7, #16
   16148:	str	r1, [sp, #208]	; 0xd0
   1614c:	lsr	r1, r6, #16
   16150:	orr	r6, r3, r6, lsl #16
   16154:	ldr	r3, [sp, #152]	; 0x98
   16158:	orr	r1, r1, r7, lsl #16
   1615c:	mov	r8, r6
   16160:	ldr	r6, [sp, #92]	; 0x5c
   16164:	adds	r2, r2, r1
   16168:	str	r1, [sp, #236]	; 0xec
   1616c:	adc	r5, r5, r8
   16170:	eor	lr, r2, lr
   16174:	ldr	r1, [sp, #188]	; 0xbc
   16178:	orr	r9, r9, r3, lsr #31
   1617c:	eor	ip, r5, ip
   16180:	lsl	r7, r3, #1
   16184:	str	lr, [sp, #160]	; 0xa0
   16188:	ldr	r3, [sp, #96]	; 0x60
   1618c:	str	r8, [sp, #240]	; 0xf0
   16190:	orr	r7, r7, r4, lsr #31
   16194:	ldr	r4, [sp, #212]	; 0xd4
   16198:	adds	r1, r6, r1
   1619c:	str	ip, [sp, #184]	; 0xb8
   161a0:	adc	r8, r3, fp
   161a4:	adds	r1, r1, r7
   161a8:	ldr	fp, [sp, #256]	; 0x100
   161ac:	adc	ip, r8, r9
   161b0:	ldr	r3, [sp, #260]	; 0x104
   161b4:	ldr	r8, [sp, #28]
   161b8:	eor	fp, r1, fp
   161bc:	eor	sl, ip, r3
   161c0:	adds	r3, r4, sl
   161c4:	ldr	r4, [sp, #228]	; 0xe4
   161c8:	eor	r7, r7, r3
   161cc:	lsr	r6, r7, #24
   161d0:	adc	lr, r4, fp
   161d4:	ldr	r4, [sp, #32]
   161d8:	adds	r1, r8, r1
   161dc:	eor	r9, r9, lr
   161e0:	lsr	r8, r9, #24
   161e4:	orr	r6, r6, r9, lsl #8
   161e8:	orr	r7, r8, r7, lsl #8
   161ec:	adc	ip, r4, ip
   161f0:	adds	r4, r1, r6
   161f4:	adc	ip, ip, r7
   161f8:	eor	sl, sl, r4
   161fc:	mov	r1, ip
   16200:	lsr	ip, sl, #16
   16204:	str	r4, [sp, #212]	; 0xd4
   16208:	eor	fp, fp, r1
   1620c:	ldr	r4, [sp, #196]	; 0xc4
   16210:	str	r1, [sp, #228]	; 0xe4
   16214:	lsr	r1, fp, #16
   16218:	orr	fp, ip, fp, lsl #16
   1621c:	ldr	ip, [sp, #116]	; 0x74
   16220:	orr	sl, r1, sl, lsl #16
   16224:	ldr	r1, [sp, #192]	; 0xc0
   16228:	adds	r3, r3, fp
   1622c:	adc	lr, lr, sl
   16230:	eor	r6, r6, r3
   16234:	eor	r7, r7, lr
   16238:	lsl	r9, r6, #1
   1623c:	lsl	r8, r7, #1
   16240:	orr	r7, r9, r7, lsr #31
   16244:	ldr	r9, [sp, #68]	; 0x44
   16248:	adds	r1, ip, r1
   1624c:	orr	r6, r8, r6, lsr #31
   16250:	ldr	ip, [sp, #120]	; 0x78
   16254:	adc	ip, ip, r4
   16258:	ldr	r4, [sp, #232]	; 0xe8
   1625c:	adds	r1, r1, r7
   16260:	adc	ip, ip, r6
   16264:	eor	r0, r0, ip
   16268:	adds	r2, r2, r0
   1626c:	eor	r7, r7, r2
   16270:	eor	r4, r4, r1
   16274:	lsr	r8, r7, #24
   16278:	adc	r5, r5, r4
   1627c:	adds	r1, r9, r1
   16280:	str	r4, [sp, #152]	; 0x98
   16284:	eor	r6, r6, r5
   16288:	ldr	r4, [sp, #72]	; 0x48
   1628c:	lsr	r9, r6, #24
   16290:	orr	r6, r8, r6, lsl #8
   16294:	orr	r7, r9, r7, lsl #8
   16298:	adc	ip, r4, ip
   1629c:	adds	r4, r1, r6
   162a0:	adc	r9, ip, r7
   162a4:	eor	r0, r0, r4
   162a8:	str	r4, [sp, #196]	; 0xc4
   162ac:	lsr	ip, r0, #16
   162b0:	str	r9, [sp, #232]	; 0xe8
   162b4:	ldr	r4, [sp, #152]	; 0x98
   162b8:	eor	r4, r4, r9
   162bc:	ldr	r9, [sp, #148]	; 0x94
   162c0:	lsr	r1, r4, #16
   162c4:	orr	r4, ip, r4, lsl #16
   162c8:	ldr	ip, [sp, #156]	; 0x9c
   162cc:	orr	r0, r1, r0, lsl #16
   162d0:	mov	r8, r0
   162d4:	adds	r0, r2, r4
   162d8:	lsl	r1, r9, #1
   162dc:	str	r0, [sp, #148]	; 0x94
   162e0:	adc	r0, r5, r8
   162e4:	orr	r1, r1, ip, lsr #31
   162e8:	ldr	r5, [sp, #200]	; 0xc8
   162ec:	lsl	r2, ip, #1
   162f0:	str	r0, [sp, #152]	; 0x98
   162f4:	ldr	r0, [sp, #60]	; 0x3c
   162f8:	orr	r2, r2, r9, lsr #31
   162fc:	str	r4, [sp, #244]	; 0xf4
   16300:	ldr	r4, [sp, #64]	; 0x40
   16304:	str	r8, [sp, #252]	; 0xfc
   16308:	ldr	ip, [sp, #216]	; 0xd8
   1630c:	adds	r8, r0, r5
   16310:	ldr	r5, [sp, #136]	; 0x88
   16314:	adc	r0, r4, ip
   16318:	ldr	ip, [sp, #148]	; 0x94
   1631c:	adds	r8, r8, r2
   16320:	adc	r0, r0, r1
   16324:	eor	ip, ip, r6
   16328:	str	ip, [sp, #188]	; 0xbc
   1632c:	ldr	ip, [sp, #152]	; 0x98
   16330:	eor	r7, ip, r7
   16334:	ldr	ip, [sp, #236]	; 0xec
   16338:	str	r7, [sp, #192]	; 0xc0
   1633c:	ldr	r7, [sp, #24]
   16340:	eor	r6, r8, ip
   16344:	ldr	ip, [sp, #240]	; 0xf0
   16348:	eor	ip, r0, ip
   1634c:	adds	r3, r3, ip
   16350:	eor	r2, r2, r3
   16354:	adc	lr, lr, r6
   16358:	eor	r1, r1, lr
   1635c:	lsr	r4, r2, #24
   16360:	adds	r8, r5, r8
   16364:	lsr	r5, r1, #24
   16368:	adc	r0, r7, r0
   1636c:	orr	r4, r4, r1, lsl #8
   16370:	orr	r5, r5, r2, lsl #8
   16374:	adds	r2, r8, r4
   16378:	adc	r0, r0, r5
   1637c:	eor	ip, ip, r2
   16380:	eor	r6, r6, r0
   16384:	lsr	r7, ip, #16
   16388:	str	r2, [sp, #200]	; 0xc8
   1638c:	lsr	r2, r6, #16
   16390:	str	r0, [sp, #216]	; 0xd8
   16394:	orr	r1, r7, r6, lsl #16
   16398:	orr	r6, r2, ip, lsl #16
   1639c:	ldr	r2, [sp, #176]	; 0xb0
   163a0:	adds	r3, r3, r1
   163a4:	adc	lr, lr, r6
   163a8:	mov	r0, r6
   163ac:	ldr	r6, [sp, #180]	; 0xb4
   163b0:	mov	r7, r3
   163b4:	mov	r9, lr
   163b8:	str	r1, [sp, #240]	; 0xf0
   163bc:	str	r0, [sp, #256]	; 0x100
   163c0:	eor	r4, r4, r7
   163c4:	eor	r5, r5, r9
   163c8:	ldr	r0, [sp, #36]	; 0x24
   163cc:	lsl	r1, r2, #1
   163d0:	lsl	ip, r6, #1
   163d4:	ldr	lr, [sp, #40]	; 0x28
   163d8:	ldr	r3, [sp, #204]	; 0xcc
   163dc:	orr	ip, ip, r2, lsr #31
   163e0:	str	r7, [sp, #204]	; 0xcc
   163e4:	orr	r7, r1, r6, lsr #31
   163e8:	ldr	r2, [sp, #208]	; 0xd0
   163ec:	str	r9, [sp, #208]	; 0xd0
   163f0:	adds	r3, r0, r3
   163f4:	ldr	r0, [sp, #140]	; 0x8c
   163f8:	ldr	r9, [sp, #144]	; 0x90
   163fc:	adc	r2, lr, r2
   16400:	adds	r3, r3, r7
   16404:	adc	r2, r2, ip
   16408:	eor	fp, fp, r3
   1640c:	eor	sl, sl, r2
   16410:	ldr	r8, [sp, #228]	; 0xe4
   16414:	adds	r0, r0, sl
   16418:	eor	r1, r0, r7
   1641c:	ldr	r7, [sp, #4]
   16420:	adc	r6, r9, fp
   16424:	lsr	lr, r1, #24
   16428:	ldr	r9, [sp, #100]	; 0x64
   1642c:	eor	ip, ip, r6
   16430:	orr	lr, lr, ip, lsl #8
   16434:	adds	r3, r9, r3
   16438:	lsr	r9, ip, #24
   1643c:	adc	r2, r7, r2
   16440:	adds	r3, r3, lr
   16444:	lsl	r7, r5, #1
   16448:	orr	r9, r9, r1, lsl #8
   1644c:	eor	sl, sl, r3
   16450:	str	r3, [sp, #180]	; 0xb4
   16454:	orr	r7, r7, r4, lsr #31
   16458:	adc	r2, r2, r9
   1645c:	eor	fp, fp, r2
   16460:	str	r2, [sp, #236]	; 0xec
   16464:	lsr	r2, sl, #16
   16468:	lsr	r3, fp, #16
   1646c:	orr	fp, r2, fp, lsl #16
   16470:	ldr	r2, [sp, #76]	; 0x4c
   16474:	mov	r1, fp
   16478:	orr	fp, r3, sl, lsl #16
   1647c:	ldr	sl, [sp, #16]
   16480:	adds	r0, r0, r1
   16484:	mov	r3, fp
   16488:	str	r1, [sp, #260]	; 0x104
   1648c:	adc	r6, r6, fp
   16490:	ldr	fp, [sp, #160]	; 0xa0
   16494:	eor	lr, r0, lr
   16498:	ldr	r1, [sp, #184]	; 0xb8
   1649c:	str	r3, [sp, #268]	; 0x10c
   164a0:	ldr	r3, [sp, #212]	; 0xd4
   164a4:	str	lr, [sp, #144]	; 0x90
   164a8:	lsl	ip, fp, #1
   164ac:	lsl	lr, r1, #1
   164b0:	orr	ip, ip, r1, lsr #31
   164b4:	eor	r1, r6, r9
   164b8:	adds	r2, r2, r3
   164bc:	ldr	r3, [sp, #80]	; 0x50
   164c0:	orr	lr, lr, fp, lsr #31
   164c4:	str	r1, [sp, #156]	; 0x9c
   164c8:	ldr	fp, [sp, #248]	; 0xf8
   164cc:	adc	r8, r3, r8
   164d0:	adds	r2, r2, ip
   164d4:	lsl	r3, r4, #1
   164d8:	adc	r8, r8, lr
   164dc:	eor	r9, r2, fp
   164e0:	ldr	fp, [sp, #264]	; 0x108
   164e4:	orr	r3, r3, r5, lsr #31
   164e8:	eor	r4, r8, fp
   164ec:	ldr	fp, [sp, #220]	; 0xdc
   164f0:	adds	r1, fp, r4
   164f4:	ldr	fp, [sp, #224]	; 0xe0
   164f8:	eor	ip, ip, r1
   164fc:	adc	r5, fp, r9
   16500:	ldr	fp, [sp, #20]
   16504:	adds	r2, sl, r2
   16508:	eor	lr, lr, r5
   1650c:	lsr	sl, lr, #24
   16510:	adc	r8, fp, r8
   16514:	lsr	fp, ip, #24
   16518:	orr	ip, sl, ip, lsl #8
   1651c:	ldr	sl, [sp, #232]	; 0xe8
   16520:	orr	lr, fp, lr, lsl #8
   16524:	adds	fp, r2, lr
   16528:	mov	r2, fp
   1652c:	adc	fp, r8, ip
   16530:	eor	r9, r9, fp
   16534:	eor	r4, r4, r2
   16538:	lsr	r8, r4, #16
   1653c:	str	r2, [sp, #212]	; 0xd4
   16540:	lsr	r2, r9, #16
   16544:	orr	r8, r8, r9, lsl #16
   16548:	ldr	r9, [sp, #196]	; 0xc4
   1654c:	orr	r4, r2, r4, lsl #16
   16550:	ldr	r2, [sp, #44]	; 0x2c
   16554:	adds	r1, r1, r8
   16558:	adc	r5, r5, r4
   1655c:	eor	lr, lr, r1
   16560:	eor	ip, ip, r5
   16564:	adds	r2, r2, r9
   16568:	ldr	r9, [sp, #48]	; 0x30
   1656c:	adc	r9, r9, sl
   16570:	adds	r2, r2, r3
   16574:	adc	r9, r9, r7
   16578:	eor	sl, r2, r8
   1657c:	eor	r4, r4, r9
   16580:	adds	r0, r0, r4
   16584:	eor	r3, r3, r0
   16588:	adc	r6, r6, sl
   1658c:	str	r0, [sp, #160]	; 0xa0
   16590:	eor	r7, r7, r6
   16594:	lsr	r8, r3, #24
   16598:	ldr	r0, [sp, #92]	; 0x5c
   1659c:	adds	r2, r0, r2
   165a0:	lsr	r0, r7, #24
   165a4:	orr	r7, r8, r7, lsl #8
   165a8:	str	r0, [sp, #140]	; 0x8c
   165ac:	ldr	r0, [sp, #96]	; 0x60
   165b0:	ldr	r8, [sp, #140]	; 0x8c
   165b4:	adc	r9, r0, r9
   165b8:	orr	r3, r8, r3, lsl #8
   165bc:	adds	r8, r2, r7
   165c0:	eor	r4, r4, r8
   165c4:	adc	r9, r9, r3
   165c8:	str	r8, [sp, #196]	; 0xc4
   165cc:	eor	r8, r9, sl
   165d0:	lsr	r2, r8, #16
   165d4:	str	r9, [sp, #220]	; 0xdc
   165d8:	lsr	r9, r4, #16
   165dc:	orr	r4, r2, r4, lsl #16
   165e0:	ldr	r2, [sp, #160]	; 0xa0
   165e4:	orr	sl, r9, r8, lsl #16
   165e8:	mov	r0, r4
   165ec:	ldr	r9, [sp, #156]	; 0x9c
   165f0:	str	sl, [sp, #248]	; 0xf8
   165f4:	adds	sl, r2, sl
   165f8:	ldr	r8, [sp, #200]	; 0xc8
   165fc:	adc	r6, r6, r0
   16600:	str	sl, [sp, #140]	; 0x8c
   16604:	lsl	r4, r9, #1
   16608:	ldr	sl, [sp, #144]	; 0x90
   1660c:	str	r6, [sp, #144]	; 0x90
   16610:	ldr	r6, [sp, #52]	; 0x34
   16614:	str	r0, [sp, #264]	; 0x108
   16618:	lsl	r2, sl, #1
   1661c:	adds	r8, r6, r8
   16620:	orr	r6, r4, sl, lsr #31
   16624:	ldr	r4, [sp, #56]	; 0x38
   16628:	orr	r2, r2, r9, lsr #31
   1662c:	ldr	sl, [sp, #216]	; 0xd8
   16630:	adc	r0, r4, sl
   16634:	ldr	r4, [sp, #140]	; 0x8c
   16638:	adds	r8, r8, r2
   1663c:	eor	sl, r4, r7
   16640:	ldr	r7, [sp, #124]	; 0x7c
   16644:	ldr	r4, [sp, #144]	; 0x90
   16648:	str	sl, [sp, #160]	; 0xa0
   1664c:	ldr	sl, [sp, #244]	; 0xf4
   16650:	eor	r4, r4, r3
   16654:	adc	r3, r0, r6
   16658:	str	r4, [sp, #176]	; 0xb0
   1665c:	eor	r4, r8, sl
   16660:	ldr	sl, [sp, #252]	; 0xfc
   16664:	eor	r0, r3, sl
   16668:	ldr	sl, [sp, #12]
   1666c:	adds	r1, r1, r0
   16670:	adc	r5, r5, r4
   16674:	eor	r2, r2, r1
   16678:	eor	r9, r5, r6
   1667c:	lsr	r6, r2, #24
   16680:	adds	r8, r7, r8
   16684:	lsr	r7, r9, #24
   16688:	orr	r6, r6, r9, lsl #8
   1668c:	adc	r3, sl, r3
   16690:	orr	r7, r7, r2, lsl #8
   16694:	adds	r2, r8, r6
   16698:	lsl	r8, lr, #1
   1669c:	adc	sl, r3, r7
   166a0:	eor	r0, r0, r2
   166a4:	eor	r4, r4, sl
   166a8:	str	r2, [sp, #200]	; 0xc8
   166ac:	lsr	r2, r0, #16
   166b0:	lsr	r3, r4, #16
   166b4:	str	sl, [sp, #216]	; 0xd8
   166b8:	orr	r4, r2, r4, lsl #16
   166bc:	ldr	sl, [sp, #84]	; 0x54
   166c0:	orr	r0, r3, r0, lsl #16
   166c4:	adds	r1, r1, r4
   166c8:	lsl	r2, ip, #1
   166cc:	mov	r9, r1
   166d0:	adc	r1, r5, r0
   166d4:	ldr	r5, [sp, #180]	; 0xb4
   166d8:	eor	r6, r9, r6
   166dc:	orr	ip, r8, ip, lsr #31
   166e0:	str	r1, [sp, #156]	; 0x9c
   166e4:	orr	lr, r2, lr, lsr #31
   166e8:	str	r6, [sp, #180]	; 0xb4
   166ec:	ldr	r1, [sp, #88]	; 0x58
   166f0:	adds	r3, sl, r5
   166f4:	str	r9, [sp, #224]	; 0xe0
   166f8:	ldr	r6, [sp, #156]	; 0x9c
   166fc:	ldr	r5, [sp, #236]	; 0xec
   16700:	ldr	r2, [sp, #240]	; 0xf0
   16704:	adc	r1, r1, r5
   16708:	eor	r5, r6, r7
   1670c:	adds	r3, r3, ip
   16710:	str	r5, [sp, #184]	; 0xb8
   16714:	adc	r1, r1, lr
   16718:	eor	r7, r3, r2
   1671c:	ldr	r5, [sp, #256]	; 0x100
   16720:	eor	r6, r1, r5
   16724:	ldr	r5, [sp, #148]	; 0x94
   16728:	ldr	sl, [sp, #104]	; 0x68
   1672c:	adds	r2, r5, r6
   16730:	ldr	r5, [sp, #152]	; 0x98
   16734:	eor	ip, ip, r2
   16738:	lsr	r9, ip, #24
   1673c:	adc	r5, r5, r7
   16740:	adds	r3, sl, r3
   16744:	ldr	sl, [sp, #108]	; 0x6c
   16748:	eor	lr, lr, r5
   1674c:	lsr	r8, lr, #24
   16750:	orr	lr, r9, lr, lsl #8
   16754:	orr	ip, r8, ip, lsl #8
   16758:	adc	r1, sl, r1
   1675c:	adds	r3, r3, lr
   16760:	ldr	sl, [sp, #192]	; 0xc0
   16764:	adc	r1, r1, ip
   16768:	eor	r6, r6, r3
   1676c:	eor	r7, r7, r1
   16770:	str	r3, [sp, #228]	; 0xe4
   16774:	lsr	r3, r7, #16
   16778:	str	r1, [sp, #232]	; 0xe8
   1677c:	lsr	r1, r6, #16
   16780:	orr	r6, r3, r6, lsl #16
   16784:	ldr	r3, [sp, #188]	; 0xbc
   16788:	orr	r1, r1, r7, lsl #16
   1678c:	mov	r8, r6
   16790:	ldr	r6, [sp, #28]
   16794:	lsl	r9, sl, #1
   16798:	adds	r2, r2, r1
   1679c:	adc	r5, r5, r8
   167a0:	eor	lr, r2, lr
   167a4:	str	r8, [sp, #240]	; 0xf0
   167a8:	lsl	r7, r3, #1
   167ac:	ldr	r8, [sp, #212]	; 0xd4
   167b0:	orr	r9, r9, r3, lsr #31
   167b4:	str	r1, [sp, #236]	; 0xec
   167b8:	orr	r7, r7, sl, lsr #31
   167bc:	ldr	r3, [sp, #268]	; 0x10c
   167c0:	str	r5, [sp, #148]	; 0x94
   167c4:	str	lr, [sp, #188]	; 0xbc
   167c8:	adds	r1, r6, r8
   167cc:	ldr	r6, [sp, #32]
   167d0:	adc	r8, r6, fp
   167d4:	adds	r1, r1, r7
   167d8:	ldr	r6, [sp, #8]
   167dc:	eor	fp, r5, ip
   167e0:	adc	ip, r8, r9
   167e4:	eor	sl, ip, r3
   167e8:	ldr	r3, [sp, #204]	; 0xcc
   167ec:	str	fp, [sp, #192]	; 0xc0
   167f0:	ldr	r8, [sp, #208]	; 0xd0
   167f4:	ldr	fp, [sp, #260]	; 0x104
   167f8:	adds	r3, r3, sl
   167fc:	eor	r7, r7, r3
   16800:	lsr	r5, r7, #24
   16804:	eor	fp, r1, fp
   16808:	adc	lr, r8, fp
   1680c:	ldr	r8, [sp, #112]	; 0x70
   16810:	eor	r9, r9, lr
   16814:	adds	r1, r8, r1
   16818:	lsr	r8, r9, #24
   1681c:	adc	ip, r6, ip
   16820:	orr	r6, r5, r9, lsl #8
   16824:	orr	r7, r8, r7, lsl #8
   16828:	ldr	r8, [sp, #196]	; 0xc4
   1682c:	adds	r5, r1, r6
   16830:	adc	ip, ip, r7
   16834:	eor	sl, sl, r5
   16838:	eor	fp, fp, ip
   1683c:	str	r5, [sp, #204]	; 0xcc
   16840:	str	ip, [sp, #208]	; 0xd0
   16844:	lsr	ip, sl, #16
   16848:	lsr	r1, fp, #16
   1684c:	ldr	r5, [sp, #220]	; 0xdc
   16850:	orr	fp, ip, fp, lsl #16
   16854:	ldr	ip, [sp, #28]
   16858:	orr	sl, r1, sl, lsl #16
   1685c:	adds	r3, r3, fp
   16860:	adc	lr, lr, sl
   16864:	eor	r6, r6, r3
   16868:	eor	r7, r7, lr
   1686c:	lsl	r9, r6, #1
   16870:	adds	r1, ip, r8
   16874:	ldr	ip, [sp, #32]
   16878:	lsl	r8, r7, #1
   1687c:	orr	r7, r9, r7, lsr #31
   16880:	orr	r6, r8, r6, lsr #31
   16884:	ldr	r9, [sp, #92]	; 0x5c
   16888:	adc	ip, ip, r5
   1688c:	adds	r1, r1, r7
   16890:	ldr	r5, [sp, #148]	; 0x94
   16894:	adc	ip, ip, r6
   16898:	eor	r4, r4, r1
   1689c:	eor	r0, r0, ip
   168a0:	adds	r2, r2, r0
   168a4:	eor	r7, r7, r2
   168a8:	str	r0, [sp, #152]	; 0x98
   168ac:	ldr	r0, [sp, #96]	; 0x60
   168b0:	adc	r5, r5, r4
   168b4:	lsr	r8, r7, #24
   168b8:	eor	r6, r6, r5
   168bc:	adds	r1, r9, r1
   168c0:	lsr	r9, r6, #24
   168c4:	orr	r6, r8, r6, lsl #8
   168c8:	orr	r7, r9, r7, lsl #8
   168cc:	adc	ip, r0, ip
   168d0:	adds	r0, r1, r6
   168d4:	adc	r8, ip, r7
   168d8:	str	r0, [sp, #196]	; 0xc4
   168dc:	eor	r4, r4, r8
   168e0:	ldr	r1, [sp, #152]	; 0x98
   168e4:	str	r8, [sp, #212]	; 0xd4
   168e8:	ldr	r9, [sp, #176]	; 0xb0
   168ec:	eor	r1, r1, r0
   168f0:	lsr	ip, r1, #16
   168f4:	mov	r0, r1
   168f8:	lsr	r1, r4, #16
   168fc:	orr	r4, ip, r4, lsl #16
   16900:	ldr	ip, [sp, #160]	; 0xa0
   16904:	orr	r0, r1, r0, lsl #16
   16908:	adds	r2, r2, r4
   1690c:	lsl	r1, r9, #1
   16910:	adc	r5, r5, r0
   16914:	str	r2, [sp, #148]	; 0x94
   16918:	str	r5, [sp, #152]	; 0x98
   1691c:	orr	r1, r1, ip, lsr #31
   16920:	str	r4, [sp, #244]	; 0xf4
   16924:	lsl	r2, ip, #1
   16928:	ldr	r4, [sp, #16]
   1692c:	str	r0, [sp, #252]	; 0xfc
   16930:	orr	r2, r2, r9, lsr #31
   16934:	ldr	r9, [sp, #152]	; 0x98
   16938:	ldr	r5, [sp, #200]	; 0xc8
   1693c:	ldr	ip, [sp, #216]	; 0xd8
   16940:	eor	r7, r9, r7
   16944:	adds	r8, r4, r5
   16948:	ldr	r5, [sp, #20]
   1694c:	str	r7, [sp, #176]	; 0xb0
   16950:	ldr	r7, [sp, #108]	; 0x6c
   16954:	adc	r0, r5, ip
   16958:	ldr	r5, [sp, #148]	; 0x94
   1695c:	adds	r8, r8, r2
   16960:	adc	r0, r0, r1
   16964:	eor	ip, r5, r6
   16968:	ldr	r5, [sp, #236]	; 0xec
   1696c:	str	ip, [sp, #160]	; 0xa0
   16970:	eor	r6, r8, r5
   16974:	ldr	r5, [sp, #240]	; 0xf0
   16978:	eor	ip, r0, r5
   1697c:	ldr	r5, [sp, #104]	; 0x68
   16980:	adds	r3, r3, ip
   16984:	eor	r2, r2, r3
   16988:	adc	lr, lr, r6
   1698c:	eor	r1, r1, lr
   16990:	lsr	r4, r2, #24
   16994:	adds	r8, r5, r8
   16998:	lsr	r5, r1, #24
   1699c:	orr	r4, r4, r1, lsl #8
   169a0:	adc	r0, r7, r0
   169a4:	orr	r5, r5, r2, lsl #8
   169a8:	adds	r2, r8, r4
   169ac:	ldr	r8, [sp, #184]	; 0xb8
   169b0:	adc	r1, r0, r5
   169b4:	eor	ip, ip, r2
   169b8:	eor	r6, r6, r1
   169bc:	str	r2, [sp, #200]	; 0xc8
   169c0:	lsr	r7, ip, #16
   169c4:	lsr	r2, r6, #16
   169c8:	ldr	r0, [sp, #124]	; 0x7c
   169cc:	orr	r7, r7, r6, lsl #16
   169d0:	str	r1, [sp, #216]	; 0xd8
   169d4:	orr	r9, r2, ip, lsl #16
   169d8:	ldr	r2, [sp, #180]	; 0xb4
   169dc:	adds	r3, r3, r7
   169e0:	lsl	ip, r8, #1
   169e4:	mov	r6, r3
   169e8:	adc	lr, lr, r9
   169ec:	ldr	r3, [sp, #228]	; 0xe4
   169f0:	eor	r5, r5, lr
   169f4:	eor	r4, r4, r6
   169f8:	str	r6, [sp, #220]	; 0xdc
   169fc:	lsl	r1, r2, #1
   16a00:	str	r9, [sp, #256]	; 0x100
   16a04:	mov	r9, lr
   16a08:	orr	ip, ip, r2, lsr #31
   16a0c:	ldr	lr, [sp, #12]
   16a10:	str	r9, [sp, #228]	; 0xe4
   16a14:	adds	r3, r0, r3
   16a18:	ldr	r2, [sp, #232]	; 0xe8
   16a1c:	str	r7, [sp, #240]	; 0xf0
   16a20:	orr	r7, r1, r8, lsr #31
   16a24:	ldr	r1, [sp, #140]	; 0x8c
   16a28:	ldr	r8, [sp, #144]	; 0x90
   16a2c:	adc	r2, lr, r2
   16a30:	adds	r3, r3, r7
   16a34:	adc	r2, r2, ip
   16a38:	eor	fp, fp, r3
   16a3c:	eor	sl, sl, r2
   16a40:	adds	r0, r1, sl
   16a44:	eor	r1, r0, r7
   16a48:	ldr	r7, [sp, #116]	; 0x74
   16a4c:	adc	r6, r8, fp
   16a50:	eor	ip, ip, r6
   16a54:	lsr	lr, r1, #24
   16a58:	ldr	r8, [sp, #120]	; 0x78
   16a5c:	lsr	r9, ip, #24
   16a60:	orr	lr, lr, ip, lsl #8
   16a64:	orr	r9, r9, r1, lsl #8
   16a68:	ldr	r1, [sp, #204]	; 0xcc
   16a6c:	adds	r3, r7, r3
   16a70:	lsl	r7, r5, #1
   16a74:	adc	r2, r8, r2
   16a78:	adds	r3, r3, lr
   16a7c:	ldr	r8, [sp, #208]	; 0xd0
   16a80:	adc	ip, r2, r9
   16a84:	eor	sl, sl, r3
   16a88:	orr	r7, r7, r4, lsr #31
   16a8c:	eor	fp, fp, ip
   16a90:	lsr	r2, sl, #16
   16a94:	str	r3, [sp, #232]	; 0xe8
   16a98:	lsr	r3, fp, #16
   16a9c:	str	ip, [sp, #236]	; 0xec
   16aa0:	orr	fp, r2, fp, lsl #16
   16aa4:	orr	r2, r3, sl, lsl #16
   16aa8:	ldr	sl, [sp, #84]	; 0x54
   16aac:	adds	r0, r0, fp
   16ab0:	ldr	r3, [sp, #188]	; 0xbc
   16ab4:	adc	r6, r6, r2
   16ab8:	str	fp, [sp, #260]	; 0x104
   16abc:	str	r2, [sp, #268]	; 0x10c
   16ac0:	adds	r2, sl, r1
   16ac4:	ldr	r1, [sp, #88]	; 0x58
   16ac8:	lsl	ip, r3, #1
   16acc:	ldr	sl, [sp, #112]	; 0x70
   16ad0:	ldr	fp, [sp, #192]	; 0xc0
   16ad4:	adc	r8, r1, r8
   16ad8:	eor	r1, r0, lr
   16adc:	str	r1, [sp, #180]	; 0xb4
   16ae0:	eor	r1, r6, r9
   16ae4:	orr	ip, ip, fp, lsr #31
   16ae8:	str	r1, [sp, #184]	; 0xb8
   16aec:	lsl	lr, fp, #1
   16af0:	ldr	fp, [sp, #248]	; 0xf8
   16af4:	adds	r2, r2, ip
   16af8:	orr	lr, lr, r3, lsr #31
   16afc:	lsl	r3, r4, #1
   16b00:	adc	r8, r8, lr
   16b04:	eor	r9, r2, fp
   16b08:	ldr	fp, [sp, #264]	; 0x108
   16b0c:	orr	r3, r3, r5, lsr #31
   16b10:	eor	r4, r8, fp
   16b14:	ldr	fp, [sp, #224]	; 0xe0
   16b18:	adds	r1, fp, r4
   16b1c:	ldr	fp, [sp, #156]	; 0x9c
   16b20:	eor	ip, ip, r1
   16b24:	adc	r5, fp, r9
   16b28:	ldr	fp, [sp, #8]
   16b2c:	adds	r2, sl, r2
   16b30:	eor	lr, lr, r5
   16b34:	lsr	sl, lr, #24
   16b38:	adc	r8, fp, r8
   16b3c:	lsr	fp, ip, #24
   16b40:	orr	ip, sl, ip, lsl #8
   16b44:	orr	lr, fp, lr, lsl #8
   16b48:	adds	fp, r2, lr
   16b4c:	mov	sl, fp
   16b50:	adc	fp, r8, ip
   16b54:	eor	r4, r4, sl
   16b58:	eor	r9, r9, fp
   16b5c:	lsr	r8, r4, #16
   16b60:	str	sl, [sp, #192]	; 0xc0
   16b64:	lsr	r2, r9, #16
   16b68:	ldr	sl, [sp, #212]	; 0xd4
   16b6c:	orr	r8, r8, r9, lsl #16
   16b70:	orr	r4, r2, r4, lsl #16
   16b74:	ldr	r2, [sp, #196]	; 0xc4
   16b78:	adds	r1, r1, r8
   16b7c:	adc	r5, r5, r4
   16b80:	str	r1, [sp, #140]	; 0x8c
   16b84:	eor	ip, ip, r5
   16b88:	ldr	r1, [sp, #68]	; 0x44
   16b8c:	adds	r2, r1, r2
   16b90:	ldr	r1, [sp, #72]	; 0x48
   16b94:	adc	r9, r1, sl
   16b98:	ldr	r1, [sp, #140]	; 0x8c
   16b9c:	adds	r2, r2, r3
   16ba0:	adc	r9, r9, r7
   16ba4:	eor	sl, r2, r8
   16ba8:	eor	r4, r4, r9
   16bac:	adds	r0, r0, r4
   16bb0:	adc	r6, r6, sl
   16bb4:	eor	r3, r3, r0
   16bb8:	eor	lr, lr, r1
   16bbc:	ldr	r1, [sp, #36]	; 0x24
   16bc0:	eor	r7, r7, r6
   16bc4:	lsr	r8, r3, #24
   16bc8:	adds	r2, r1, r2
   16bcc:	lsr	r1, r7, #24
   16bd0:	orr	r7, r8, r7, lsl #8
   16bd4:	str	r1, [sp, #144]	; 0x90
   16bd8:	ldr	r1, [sp, #40]	; 0x28
   16bdc:	ldr	r8, [sp, #144]	; 0x90
   16be0:	adc	r9, r1, r9
   16be4:	orr	r3, r8, r3, lsl #8
   16be8:	adds	r8, r2, r7
   16bec:	eor	r4, r4, r8
   16bf0:	adc	r2, r9, r3
   16bf4:	str	r8, [sp, #196]	; 0xc4
   16bf8:	lsr	r9, r4, #16
   16bfc:	eor	r8, r2, sl
   16c00:	str	r2, [sp, #204]	; 0xcc
   16c04:	lsr	r2, r8, #16
   16c08:	orr	sl, r9, r8, lsl #16
   16c0c:	ldr	r9, [sp, #184]	; 0xb8
   16c10:	orr	r4, r2, r4, lsl #16
   16c14:	adds	r8, r0, sl
   16c18:	mov	r1, r4
   16c1c:	adc	r6, r6, r1
   16c20:	str	r8, [sp, #144]	; 0x90
   16c24:	ldr	r8, [sp, #200]	; 0xc8
   16c28:	lsl	r4, r9, #1
   16c2c:	str	r6, [sp, #156]	; 0x9c
   16c30:	str	sl, [sp, #248]	; 0xf8
   16c34:	ldr	r6, [sp, #136]	; 0x88
   16c38:	str	r1, [sp, #264]	; 0x108
   16c3c:	ldr	sl, [sp, #180]	; 0xb4
   16c40:	ldr	r1, [sp, #216]	; 0xd8
   16c44:	adds	r8, r6, r8
   16c48:	orr	r6, r4, sl, lsr #31
   16c4c:	ldr	r4, [sp, #24]
   16c50:	lsl	r2, sl, #1
   16c54:	ldr	sl, [sp, #244]	; 0xf4
   16c58:	orr	r2, r2, r9, lsr #31
   16c5c:	ldr	r9, [sp, #156]	; 0x9c
   16c60:	adc	r0, r4, r1
   16c64:	adds	r8, r8, r2
   16c68:	ldr	r1, [sp, #140]	; 0x8c
   16c6c:	ldr	r4, [sp, #144]	; 0x90
   16c70:	eor	r3, r9, r3
   16c74:	str	r3, [sp, #184]	; 0xb8
   16c78:	adc	r3, r0, r6
   16c7c:	eor	r4, r4, r7
   16c80:	ldr	r7, [sp, #60]	; 0x3c
   16c84:	str	r4, [sp, #180]	; 0xb4
   16c88:	eor	r4, r8, sl
   16c8c:	ldr	sl, [sp, #252]	; 0xfc
   16c90:	eor	r0, r3, sl
   16c94:	ldr	sl, [sp, #64]	; 0x40
   16c98:	adds	r1, r1, r0
   16c9c:	eor	r2, r2, r1
   16ca0:	adc	r5, r5, r4
   16ca4:	eor	r9, r5, r6
   16ca8:	lsr	r6, r2, #24
   16cac:	adds	r8, r7, r8
   16cb0:	lsr	r7, r9, #24
   16cb4:	orr	r6, r6, r9, lsl #8
   16cb8:	adc	r3, sl, r3
   16cbc:	orr	r7, r7, r2, lsl #8
   16cc0:	adds	r2, r8, r6
   16cc4:	lsl	r8, lr, #1
   16cc8:	adc	r3, r3, r7
   16ccc:	eor	r0, r0, r2
   16cd0:	eor	r4, r4, r3
   16cd4:	str	r2, [sp, #200]	; 0xc8
   16cd8:	lsr	r2, r0, #16
   16cdc:	str	r3, [sp, #208]	; 0xd0
   16ce0:	lsr	r3, r4, #16
   16ce4:	orr	r4, r2, r4, lsl #16
   16ce8:	orr	r3, r3, r0, lsl #16
   16cec:	ldr	r0, [sp, #236]	; 0xec
   16cf0:	adds	sl, r1, r4
   16cf4:	lsl	r2, ip, #1
   16cf8:	adc	r5, r5, r3
   16cfc:	eor	r6, sl, r6
   16d00:	orr	ip, r8, ip, lsr #31
   16d04:	mov	r9, r5
   16d08:	ldr	r5, [sp, #100]	; 0x64
   16d0c:	orr	lr, r2, lr, lsr #31
   16d10:	str	r6, [sp, #140]	; 0x8c
   16d14:	str	r3, [sp, #244]	; 0xf4
   16d18:	ldr	r2, [sp, #4]
   16d1c:	str	sl, [sp, #212]	; 0xd4
   16d20:	ldr	r3, [sp, #232]	; 0xe8
   16d24:	str	r9, [sp, #216]	; 0xd8
   16d28:	adds	r3, r5, r3
   16d2c:	adc	r1, r2, r0
   16d30:	eor	r0, r9, r7
   16d34:	adds	r3, r3, ip
   16d38:	str	r0, [sp, #188]	; 0xbc
   16d3c:	adc	r1, r1, lr
   16d40:	ldr	sl, [sp, #48]	; 0x30
   16d44:	ldr	r2, [sp, #240]	; 0xf0
   16d48:	ldr	r8, [sp, #148]	; 0x94
   16d4c:	ldr	r0, [sp, #192]	; 0xc0
   16d50:	eor	r7, r3, r2
   16d54:	ldr	r2, [sp, #256]	; 0x100
   16d58:	eor	r6, r1, r2
   16d5c:	adds	r2, r8, r6
   16d60:	ldr	r8, [sp, #152]	; 0x98
   16d64:	eor	ip, ip, r2
   16d68:	lsr	r9, ip, #24
   16d6c:	adc	r5, r8, r7
   16d70:	ldr	r8, [sp, #44]	; 0x2c
   16d74:	eor	lr, lr, r5
   16d78:	adds	r3, r8, r3
   16d7c:	lsr	r8, lr, #24
   16d80:	orr	lr, r9, lr, lsl #8
   16d84:	adc	r1, sl, r1
   16d88:	orr	ip, r8, ip, lsl #8
   16d8c:	ldr	r8, [sp, #160]	; 0xa0
   16d90:	adds	r3, r3, lr
   16d94:	adc	r9, r1, ip
   16d98:	eor	r6, r6, r3
   16d9c:	eor	r7, r7, r9
   16da0:	lsr	r1, r6, #16
   16da4:	str	r3, [sp, #224]	; 0xe0
   16da8:	lsr	r3, r7, #16
   16dac:	str	r9, [sp, #232]	; 0xe8
   16db0:	orr	r7, r1, r7, lsl #16
   16db4:	orr	r1, r3, r6, lsl #16
   16db8:	ldr	r3, [sp, #52]	; 0x34
   16dbc:	adds	r2, r2, r7
   16dc0:	ldr	r6, [sp, #176]	; 0xb0
   16dc4:	adc	r5, r5, r1
   16dc8:	eor	lr, r2, lr
   16dcc:	eor	ip, r5, ip
   16dd0:	str	r1, [sp, #240]	; 0xf0
   16dd4:	adds	r1, r3, r0
   16dd8:	ldr	r3, [sp, #56]	; 0x38
   16ddc:	str	r7, [sp, #236]	; 0xec
   16de0:	lsl	r7, r8, #1
   16de4:	lsl	r9, r6, #1
   16de8:	str	lr, [sp, #148]	; 0x94
   16dec:	orr	r7, r7, r6, lsr #31
   16df0:	str	ip, [sp, #176]	; 0xb0
   16df4:	orr	r9, r9, r8, lsr #31
   16df8:	ldr	lr, [sp, #220]	; 0xdc
   16dfc:	adc	r8, r3, fp
   16e00:	adds	r1, r1, r7
   16e04:	adc	ip, r8, r9
   16e08:	ldr	r8, [sp, #76]	; 0x4c
   16e0c:	ldr	r3, [sp, #268]	; 0x10c
   16e10:	ldr	fp, [sp, #260]	; 0x104
   16e14:	ldr	r0, [sp, #80]	; 0x50
   16e18:	eor	sl, ip, r3
   16e1c:	adds	r3, lr, sl
   16e20:	ldr	lr, [sp, #228]	; 0xe4
   16e24:	eor	fp, r1, fp
   16e28:	eor	r7, r7, r3
   16e2c:	lsr	r6, r7, #24
   16e30:	adc	lr, lr, fp
   16e34:	adds	r1, r8, r1
   16e38:	eor	r9, r9, lr
   16e3c:	adc	ip, r0, ip
   16e40:	lsr	r8, r9, #24
   16e44:	orr	r6, r6, r9, lsl #8
   16e48:	orr	r7, r8, r7, lsl #8
   16e4c:	adds	r8, r1, r6
   16e50:	adc	ip, ip, r7
   16e54:	eor	sl, sl, r8
   16e58:	mov	r9, ip
   16e5c:	lsr	ip, sl, #16
   16e60:	str	r8, [sp, #192]	; 0xc0
   16e64:	eor	fp, fp, r9
   16e68:	ldr	r8, [sp, #196]	; 0xc4
   16e6c:	lsr	r1, fp, #16
   16e70:	str	r9, [sp, #220]	; 0xdc
   16e74:	orr	fp, ip, fp, lsl #16
   16e78:	mov	ip, r0
   16e7c:	ldr	r0, [sp, #204]	; 0xcc
   16e80:	orr	sl, r1, sl, lsl #16
   16e84:	ldr	r1, [sp, #76]	; 0x4c
   16e88:	adds	r3, r3, fp
   16e8c:	adc	lr, lr, sl
   16e90:	eor	r6, r6, r3
   16e94:	eor	r7, r7, lr
   16e98:	lsl	r9, r6, #1
   16e9c:	adds	r1, r1, r8
   16ea0:	lsl	r8, r7, #1
   16ea4:	adc	ip, ip, r0
   16ea8:	ldr	r0, [sp, #244]	; 0xf4
   16eac:	orr	r7, r9, r7, lsr #31
   16eb0:	orr	r6, r8, r6, lsr #31
   16eb4:	ldr	r9, [sp, #84]	; 0x54
   16eb8:	adds	r1, r1, r7
   16ebc:	adc	ip, ip, r6
   16ec0:	eor	r4, r4, r1
   16ec4:	ldr	r8, [sp, #88]	; 0x58
   16ec8:	eor	r0, r0, ip
   16ecc:	adds	r2, r2, r0
   16ed0:	adc	r5, r5, r4
   16ed4:	eor	r7, r7, r2
   16ed8:	adds	r1, r9, r1
   16edc:	eor	r6, r6, r5
   16ee0:	adc	ip, r8, ip
   16ee4:	lsr	r8, r7, #24
   16ee8:	lsr	r9, r6, #24
   16eec:	orr	r6, r8, r6, lsl #8
   16ef0:	orr	r7, r9, r7, lsl #8
   16ef4:	adds	r8, r1, r6
   16ef8:	adc	r1, ip, r7
   16efc:	eor	r0, r0, r8
   16f00:	lsr	ip, r0, #16
   16f04:	eor	r4, r4, r1
   16f08:	str	r8, [sp, #196]	; 0xc4
   16f0c:	str	r1, [sp, #204]	; 0xcc
   16f10:	lsr	r1, r4, #16
   16f14:	orr	r4, ip, r4, lsl #16
   16f18:	ldr	ip, [sp, #180]	; 0xb4
   16f1c:	orr	r8, r1, r0, lsl #16
   16f20:	adds	r2, r2, r4
   16f24:	ldr	r9, [sp, #184]	; 0xb8
   16f28:	adc	r5, r5, r8
   16f2c:	ldr	r0, [sp, #208]	; 0xd0
   16f30:	str	r4, [sp, #244]	; 0xf4
   16f34:	str	r5, [sp, #160]	; 0xa0
   16f38:	ldr	r4, [sp, #92]	; 0x5c
   16f3c:	lsl	r1, r9, #1
   16f40:	str	r8, [sp, #252]	; 0xfc
   16f44:	ldr	r5, [sp, #200]	; 0xc8
   16f48:	orr	r1, r1, ip, lsr #31
   16f4c:	str	r2, [sp, #152]	; 0x98
   16f50:	lsl	r2, ip, #1
   16f54:	ldr	ip, [sp, #240]	; 0xf0
   16f58:	orr	r2, r2, r9, lsr #31
   16f5c:	adds	r8, r4, r5
   16f60:	ldr	r5, [sp, #96]	; 0x60
   16f64:	adc	r0, r5, r0
   16f68:	ldr	r5, [sp, #152]	; 0x98
   16f6c:	adds	r8, r8, r2
   16f70:	adc	r0, r0, r1
   16f74:	eor	ip, r0, ip
   16f78:	adds	r3, r3, ip
   16f7c:	eor	r2, r2, r3
   16f80:	eor	r6, r5, r6
   16f84:	lsr	r4, r2, #24
   16f88:	str	r6, [sp, #180]	; 0xb4
   16f8c:	ldr	r6, [sp, #160]	; 0xa0
   16f90:	eor	r6, r6, r7
   16f94:	ldr	r7, [sp, #236]	; 0xec
   16f98:	str	r6, [sp, #184]	; 0xb8
   16f9c:	eor	r6, r8, r7
   16fa0:	ldr	r7, [sp, #100]	; 0x64
   16fa4:	adc	lr, lr, r6
   16fa8:	eor	r1, r1, lr
   16fac:	lsr	r5, r1, #24
   16fb0:	orr	r4, r4, r1, lsl #8
   16fb4:	adds	r8, r7, r8
   16fb8:	ldr	r7, [sp, #4]
   16fbc:	orr	r5, r5, r2, lsl #8
   16fc0:	adc	r0, r7, r0
   16fc4:	adds	r2, r8, r4
   16fc8:	adc	r7, r0, r5
   16fcc:	eor	ip, ip, r2
   16fd0:	ldr	r0, [sp, #188]	; 0xbc
   16fd4:	eor	r6, r6, r7
   16fd8:	str	r2, [sp, #200]	; 0xc8
   16fdc:	lsr	r2, r6, #16
   16fe0:	str	r7, [sp, #208]	; 0xd0
   16fe4:	lsr	r7, ip, #16
   16fe8:	orr	r2, r2, ip, lsl #16
   16fec:	orr	r6, r7, r6, lsl #16
   16ff0:	mov	r7, r2
   16ff4:	ldr	r2, [sp, #140]	; 0x8c
   16ff8:	lsl	ip, r0, #1
   16ffc:	adds	r3, r3, r6
   17000:	mov	r9, r3
   17004:	adc	lr, lr, r7
   17008:	ldr	r3, [sp, #224]	; 0xe0
   1700c:	mov	r8, lr
   17010:	eor	r4, r4, r9
   17014:	ldr	lr, [sp, #108]	; 0x6c
   17018:	eor	r5, r5, r8
   1701c:	strd	r6, [sp, #236]	; 0xec
   17020:	lsl	r1, r2, #1
   17024:	ldr	r6, [sp, #104]	; 0x68
   17028:	orr	ip, ip, r2, lsr #31
   1702c:	orr	r7, r1, r0, lsr #31
   17030:	str	r9, [sp, #188]	; 0xbc
   17034:	ldr	r2, [sp, #232]	; 0xe8
   17038:	str	r8, [sp, #224]	; 0xe0
   1703c:	ldr	r8, [sp, #144]	; 0x90
   17040:	adds	r3, r6, r3
   17044:	adc	r2, lr, r2
   17048:	adds	r3, r3, r7
   1704c:	adc	r2, r2, ip
   17050:	eor	fp, fp, r3
   17054:	eor	sl, sl, r2
   17058:	adds	r0, r8, sl
   1705c:	ldr	r8, [sp, #156]	; 0x9c
   17060:	eor	r1, r0, r7
   17064:	lsl	r7, r5, #1
   17068:	lsr	lr, r1, #24
   1706c:	orr	r7, r7, r4, lsr #31
   17070:	adc	r6, r8, fp
   17074:	ldr	r8, [sp, #112]	; 0x70
   17078:	eor	ip, ip, r6
   1707c:	lsr	r9, ip, #24
   17080:	orr	lr, lr, ip, lsl #8
   17084:	orr	r9, r9, r1, lsl #8
   17088:	adds	r3, r8, r3
   1708c:	ldr	r8, [sp, #8]
   17090:	adc	r2, r8, r2
   17094:	adds	r3, r3, lr
   17098:	adc	r2, r2, r9
   1709c:	eor	sl, sl, r3
   170a0:	eor	fp, fp, r2
   170a4:	lsr	r8, sl, #16
   170a8:	str	r3, [sp, #228]	; 0xe4
   170ac:	lsr	r3, fp, #16
   170b0:	str	r2, [sp, #232]	; 0xe8
   170b4:	orr	fp, r8, fp, lsl #16
   170b8:	ldr	r2, [sp, #192]	; 0xc0
   170bc:	orr	sl, r3, sl, lsl #16
   170c0:	adds	r0, r0, fp
   170c4:	ldr	r3, [sp, #148]	; 0x94
   170c8:	adc	r6, r6, sl
   170cc:	str	fp, [sp, #256]	; 0x100
   170d0:	eor	lr, r0, lr
   170d4:	ldr	fp, [sp, #176]	; 0xb0
   170d8:	eor	r9, r6, r9
   170dc:	str	sl, [sp, #260]	; 0x104
   170e0:	ldr	sl, [sp, #116]	; 0x74
   170e4:	lsl	ip, r3, #1
   170e8:	str	lr, [sp, #140]	; 0x8c
   170ec:	ldr	r8, [sp, #220]	; 0xdc
   170f0:	orr	ip, ip, fp, lsr #31
   170f4:	str	r9, [sp, #144]	; 0x90
   170f8:	lsl	lr, fp, #1
   170fc:	ldr	fp, [sp, #248]	; 0xf8
   17100:	adds	r2, sl, r2
   17104:	ldr	sl, [sp, #120]	; 0x78
   17108:	orr	lr, lr, r3, lsr #31
   1710c:	lsl	r3, r4, #1
   17110:	orr	r3, r3, r5, lsr #31
   17114:	adc	r8, sl, r8
   17118:	adds	r2, r2, ip
   1711c:	ldr	sl, [sp, #124]	; 0x7c
   17120:	eor	r9, r2, fp
   17124:	adc	r8, r8, lr
   17128:	ldr	fp, [sp, #264]	; 0x108
   1712c:	eor	r4, r8, fp
   17130:	ldr	fp, [sp, #212]	; 0xd4
   17134:	adds	r1, fp, r4
   17138:	ldr	fp, [sp, #216]	; 0xd8
   1713c:	eor	ip, ip, r1
   17140:	adc	r5, fp, r9
   17144:	ldr	fp, [sp, #12]
   17148:	adds	r2, sl, r2
   1714c:	eor	lr, lr, r5
   17150:	lsr	sl, lr, #24
   17154:	adc	r8, fp, r8
   17158:	lsr	fp, ip, #24
   1715c:	orr	ip, sl, ip, lsl #8
   17160:	orr	lr, fp, lr, lsl #8
   17164:	adds	fp, r2, lr
   17168:	adc	sl, r8, ip
   1716c:	eor	r4, r4, fp
   17170:	eor	r9, r9, sl
   17174:	lsr	r8, r4, #16
   17178:	str	fp, [sp, #192]	; 0xc0
   1717c:	lsr	r2, r9, #16
   17180:	ldr	fp, [sp, #196]	; 0xc4
   17184:	orr	r8, r8, r9, lsl #16
   17188:	str	sl, [sp, #212]	; 0xd4
   1718c:	orr	r4, r2, r4, lsl #16
   17190:	ldr	r2, [sp, #16]
   17194:	adds	r1, r1, r8
   17198:	adc	r5, r5, r4
   1719c:	ldr	r9, [sp, #204]	; 0xcc
   171a0:	eor	lr, lr, r1
   171a4:	eor	ip, ip, r5
   171a8:	adds	r2, r2, fp
   171ac:	ldr	fp, [sp, #20]
   171b0:	str	ip, [sp, #148]	; 0x94
   171b4:	ldr	ip, [sp, #24]
   171b8:	adc	r9, fp, r9
   171bc:	adds	r2, r2, r3
   171c0:	ldr	fp, [sp, #136]	; 0x88
   171c4:	adc	r9, r9, r7
   171c8:	eor	sl, r2, r8
   171cc:	eor	r4, r4, r9
   171d0:	adds	r0, r0, r4
   171d4:	adc	r6, r6, sl
   171d8:	eor	r3, r3, r0
   171dc:	eor	r7, r7, r6
   171e0:	lsr	r8, r3, #24
   171e4:	adds	r2, fp, r2
   171e8:	lsr	fp, r7, #24
   171ec:	adc	r9, ip, r9
   171f0:	orr	r7, r8, r7, lsl #8
   171f4:	orr	r3, fp, r3, lsl #8
   171f8:	adds	ip, r2, r7
   171fc:	adc	r9, r9, r3
   17200:	eor	r4, r4, ip
   17204:	eor	r8, r9, sl
   17208:	lsr	sl, r4, #16
   1720c:	str	ip, [sp, #196]	; 0xc4
   17210:	lsr	r2, r8, #16
   17214:	str	r9, [sp, #204]	; 0xcc
   17218:	orr	ip, sl, r8, lsl #16
   1721c:	ldr	sl, [sp, #144]	; 0x90
   17220:	orr	r4, r2, r4, lsl #16
   17224:	mov	r9, ip
   17228:	mov	r8, r4
   1722c:	adds	ip, r0, r9
   17230:	adc	r0, r6, r8
   17234:	str	r9, [sp, #248]	; 0xf8
   17238:	str	r8, [sp, #264]	; 0x108
   1723c:	mov	r8, r0
   17240:	lsl	r4, sl, #1
   17244:	str	ip, [sp, #156]	; 0x9c
   17248:	eor	r3, r8, r3
   1724c:	ldr	ip, [sp, #28]
   17250:	str	r3, [sp, #176]	; 0xb0
   17254:	ldr	fp, [sp, #140]	; 0x8c
   17258:	ldr	r0, [sp, #200]	; 0xc8
   1725c:	str	r8, [sp, #200]	; 0xc8
   17260:	ldr	r8, [sp, #252]	; 0xfc
   17264:	lsl	r2, fp, #1
   17268:	orr	r4, r4, fp, lsr #31
   1726c:	ldr	fp, [sp, #40]	; 0x28
   17270:	adds	r9, ip, r0
   17274:	orr	r2, r2, sl, lsr #31
   17278:	ldr	ip, [sp, #32]
   1727c:	ldr	sl, [sp, #36]	; 0x24
   17280:	ldr	r0, [sp, #208]	; 0xd0
   17284:	adc	r0, ip, r0
   17288:	ldr	ip, [sp, #156]	; 0x9c
   1728c:	adds	r9, r9, r2
   17290:	adc	r3, r0, r4
   17294:	eor	r0, r3, r8
   17298:	adds	r1, r1, r0
   1729c:	eor	r2, r2, r1
   172a0:	eor	r7, ip, r7
   172a4:	lsr	r8, r2, #24
   172a8:	ldr	ip, [sp, #148]	; 0x94
   172ac:	str	r7, [sp, #140]	; 0x8c
   172b0:	ldr	r7, [sp, #244]	; 0xf4
   172b4:	eor	r7, r9, r7
   172b8:	adc	r5, r5, r7
   172bc:	adds	r9, sl, r9
   172c0:	eor	r4, r4, r5
   172c4:	adc	r3, fp, r3
   172c8:	lsr	r6, r4, #24
   172cc:	orr	r8, r8, r4, lsl #8
   172d0:	orr	r6, r6, r2, lsl #8
   172d4:	ldr	r2, [sp, #228]	; 0xe4
   172d8:	adds	r4, r9, r8
   172dc:	adc	r9, r3, r6
   172e0:	eor	r0, r0, r4
   172e4:	eor	r7, r7, r9
   172e8:	lsr	sl, r0, #16
   172ec:	str	r4, [sp, #208]	; 0xd0
   172f0:	lsr	fp, r7, #16
   172f4:	str	r9, [sp, #216]	; 0xd8
   172f8:	orr	sl, sl, r7, lsl #16
   172fc:	orr	fp, fp, r0, lsl #16
   17300:	adds	r1, r1, sl
   17304:	lsl	r0, ip, #1
   17308:	mov	r7, r1
   1730c:	adc	r1, r5, fp
   17310:	lsl	r4, lr, #1
   17314:	mov	r3, r1
   17318:	orr	lr, r0, lr, lsr #31
   1731c:	mov	r0, r1
   17320:	ldr	r1, [sp, #44]	; 0x2c
   17324:	eor	r0, r0, r6
   17328:	orr	r5, r4, ip, lsr #31
   1732c:	ldr	r4, [sp, #48]	; 0x30
   17330:	str	r0, [sp, #148]	; 0x94
   17334:	ldr	r0, [sp, #236]	; 0xec
   17338:	adds	r2, r1, r2
   1733c:	str	r7, [sp, #220]	; 0xdc
   17340:	ldr	r1, [sp, #232]	; 0xe8
   17344:	str	r3, [sp, #228]	; 0xe4
   17348:	adc	r1, r4, r1
   1734c:	adds	r2, r2, r5
   17350:	mov	r4, r7
   17354:	eor	r7, r2, r0
   17358:	ldr	r0, [sp, #240]	; 0xf0
   1735c:	eor	r4, r4, r8
   17360:	adc	r1, r1, lr
   17364:	ldr	r8, [sp, #152]	; 0x98
   17368:	str	r4, [sp, #144]	; 0x90
   1736c:	eor	r6, r1, r0
   17370:	adds	r3, r8, r6
   17374:	ldr	r8, [sp, #160]	; 0xa0
   17378:	eor	r4, r3, r5
   1737c:	ldr	r5, [sp, #52]	; 0x34
   17380:	lsr	r0, r4, #24
   17384:	adc	ip, r8, r7
   17388:	ldr	r8, [sp, #56]	; 0x38
   1738c:	eor	lr, lr, ip
   17390:	adds	r2, r5, r2
   17394:	lsr	r5, lr, #24
   17398:	orr	r0, r0, lr, lsl #8
   1739c:	orr	r5, r5, r4, lsl #8
   173a0:	adc	r1, r8, r1
   173a4:	adds	r2, r2, r0
   173a8:	adc	r1, r1, r5
   173ac:	eor	r6, r6, r2
   173b0:	eor	lr, r1, r7
   173b4:	str	r2, [sp, #232]	; 0xe8
   173b8:	str	r1, [sp, #236]	; 0xec
   173bc:	lsr	r1, r6, #16
   173c0:	lsr	r2, lr, #16
   173c4:	ldr	r8, [sp, #180]	; 0xb4
   173c8:	orr	lr, r1, lr, lsl #16
   173cc:	orr	r1, r2, r6, lsl #16
   173d0:	ldr	r2, [sp, #192]	; 0xc0
   173d4:	adds	r3, r3, lr
   173d8:	str	lr, [sp, #240]	; 0xf0
   173dc:	mov	r7, r1
   173e0:	adc	ip, ip, r1
   173e4:	ldr	lr, [sp, #184]	; 0xb8
   173e8:	lsl	r1, r8, #1
   173ec:	eor	r0, r3, r0
   173f0:	str	r7, [sp, #244]	; 0xf4
   173f4:	ldr	r7, [sp, #60]	; 0x3c
   173f8:	str	r0, [sp, #152]	; 0x98
   173fc:	orr	r1, r1, lr, lsr #31
   17400:	ldr	r6, [sp, #212]	; 0xd4
   17404:	lsl	r4, lr, #1
   17408:	ldr	lr, [sp, #64]	; 0x40
   1740c:	adds	r2, r7, r2
   17410:	orr	r4, r4, r8, lsr #31
   17414:	eor	r8, ip, r5
   17418:	ldr	r0, [sp, #224]	; 0xe0
   1741c:	str	r8, [sp, #160]	; 0xa0
   17420:	adc	r6, lr, r6
   17424:	ldr	lr, [sp, #256]	; 0x100
   17428:	adds	r2, r2, r1
   1742c:	adc	r6, r6, r4
   17430:	eor	r8, r2, lr
   17434:	ldr	lr, [sp, #260]	; 0x104
   17438:	eor	r5, r6, lr
   1743c:	ldr	lr, [sp, #188]	; 0xbc
   17440:	adds	r9, lr, r5
   17444:	ldr	lr, [sp, #68]	; 0x44
   17448:	adc	r7, r0, r8
   1744c:	eor	r1, r1, r9
   17450:	eor	r0, r7, r4
   17454:	lsr	r4, r1, #24
   17458:	orr	r4, r4, r0, lsl #8
   1745c:	adds	r2, lr, r2
   17460:	lsr	lr, r0, #24
   17464:	str	r2, [sp, #180]	; 0xb4
   17468:	orr	r1, lr, r1, lsl #8
   1746c:	ldr	r2, [sp, #72]	; 0x48
   17470:	adc	r6, r2, r6
   17474:	ldr	r2, [sp, #180]	; 0xb4
   17478:	adds	r0, r2, r4
   1747c:	adc	r6, r6, r1
   17480:	eor	r5, r5, r0
   17484:	eor	r8, r8, r6
   17488:	lsr	r2, r5, #16
   1748c:	str	r0, [sp, #180]	; 0xb4
   17490:	lsr	lr, r8, #16
   17494:	str	r6, [sp, #184]	; 0xb8
   17498:	orr	r8, r2, r8, lsl #16
   1749c:	ldr	r0, [sp, #140]	; 0x8c
   174a0:	orr	r5, lr, r5, lsl #16
   174a4:	adds	r9, r9, r8
   174a8:	ldr	r2, [sp, #196]	; 0xc4
   174ac:	str	r8, [sp, #188]	; 0xbc
   174b0:	adc	r8, r7, r5
   174b4:	eor	r4, r4, r9
   174b8:	ldr	r7, [sp, #60]	; 0x3c
   174bc:	eor	r1, r1, r8
   174c0:	lsl	lr, r4, #1
   174c4:	str	r5, [sp, #192]	; 0xc0
   174c8:	lsl	r5, r1, #1
   174cc:	ldr	r6, [sp, #204]	; 0xcc
   174d0:	orr	lr, lr, r1, lsr #31
   174d4:	orr	r4, r5, r4, lsr #31
   174d8:	ldr	r5, [sp, #176]	; 0xb0
   174dc:	lsl	r0, r0, #1
   174e0:	adds	r2, r7, r2
   174e4:	ldr	r7, [sp, #64]	; 0x40
   174e8:	orr	r0, r0, r5, lsr #31
   174ec:	lsl	r1, r5, #1
   174f0:	adc	r6, r7, r6
   174f4:	adds	r2, r2, lr
   174f8:	adc	r6, r6, r4
   174fc:	eor	r7, r2, sl
   17500:	ldr	sl, [sp, #148]	; 0x94
   17504:	eor	r5, r6, fp
   17508:	ldr	fp, [sp, #140]	; 0x8c
   1750c:	adds	r3, r3, r5
   17510:	adc	ip, ip, r7
   17514:	eor	lr, lr, r3
   17518:	eor	r4, r4, ip
   1751c:	lsl	sl, sl, #1
   17520:	orr	r1, r1, fp, lsr #31
   17524:	ldr	fp, [sp, #144]	; 0x90
   17528:	lsl	fp, fp, #1
   1752c:	str	fp, [sp, #64]	; 0x40
   17530:	lsr	fp, lr, #24
   17534:	str	sl, [sp, #60]	; 0x3c
   17538:	ldr	sl, [sp, #28]
   1753c:	orr	fp, fp, r4, lsl #8
   17540:	str	ip, [sp, #140]	; 0x8c
   17544:	ldr	ip, [sp, #32]
   17548:	adds	r2, sl, r2
   1754c:	lsr	sl, r4, #24
   17550:	ldr	r4, [sp, #64]	; 0x40
   17554:	orr	sl, sl, lr, lsl #8
   17558:	ldr	lr, [sp, #148]	; 0x94
   1755c:	adc	r6, ip, r6
   17560:	adds	ip, r2, fp
   17564:	eor	r5, r5, ip
   17568:	ldr	r2, [sp, #144]	; 0x90
   1756c:	str	ip, [sp, #64]	; 0x40
   17570:	ldr	ip, [sp, #60]	; 0x3c
   17574:	orr	r4, r4, lr, lsr #31
   17578:	adc	lr, r6, sl
   1757c:	eor	r7, r7, lr
   17580:	ldr	r6, [sp, #104]	; 0x68
   17584:	str	lr, [sp, #144]	; 0x90
   17588:	lsr	lr, r5, #16
   1758c:	orr	ip, ip, r2, lsr #31
   17590:	lsr	r2, r7, #16
   17594:	orr	r7, lr, r7, lsl #16
   17598:	ldr	lr, [sp, #160]	; 0xa0
   1759c:	orr	r2, r2, r5, lsl #16
   175a0:	str	ip, [sp, #148]	; 0x94
   175a4:	adds	r3, r3, r7
   175a8:	ldr	ip, [sp, #140]	; 0x8c
   175ac:	str	r3, [sp, #28]
   175b0:	mov	r3, r2
   175b4:	str	r7, [sp, #176]	; 0xb0
   175b8:	str	r2, [sp, #196]	; 0xc4
   175bc:	adc	r3, ip, r3
   175c0:	ldr	r7, [sp, #152]	; 0x98
   175c4:	lsl	ip, lr, #1
   175c8:	ldr	r2, [sp, #208]	; 0xd0
   175cc:	str	r3, [sp, #32]
   175d0:	lsl	r5, r7, #1
   175d4:	adds	r3, r6, r2
   175d8:	ldr	r6, [sp, #108]	; 0x6c
   175dc:	orr	lr, r5, lr, lsr #31
   175e0:	ldr	r2, [sp, #216]	; 0xd8
   175e4:	str	lr, [sp, #140]	; 0x8c
   175e8:	ldr	lr, [sp, #240]	; 0xf0
   175ec:	adc	r2, r6, r2
   175f0:	orr	r6, ip, r7, lsr #31
   175f4:	ldr	r7, [sp, #28]
   175f8:	adds	r3, r3, r0
   175fc:	adc	r2, r2, r1
   17600:	eor	lr, r3, lr
   17604:	str	r6, [sp, #152]	; 0x98
   17608:	ldr	r6, [sp, #244]	; 0xf4
   1760c:	eor	fp, fp, r7
   17610:	eor	ip, r2, r6
   17614:	lsl	r6, fp, #1
   17618:	adds	r5, r9, ip
   1761c:	ldr	r9, [sp, #32]
   17620:	adc	r7, r8, lr
   17624:	eor	r0, r0, r5
   17628:	ldr	r8, [sp, #16]
   1762c:	eor	r1, r1, r7
   17630:	eor	sl, sl, r9
   17634:	lsl	r9, sl, #1
   17638:	adds	r3, r8, r3
   1763c:	lsr	r8, r1, #24
   17640:	orr	sl, r6, sl, lsr #31
   17644:	str	r3, [sp, #16]
   17648:	ldr	r3, [sp, #20]
   1764c:	str	r9, [sp, #60]	; 0x3c
   17650:	lsr	r9, r0, #24
   17654:	orr	r0, r8, r0, lsl #8
   17658:	ldr	r8, [sp, #60]	; 0x3c
   1765c:	orr	r1, r9, r1, lsl #8
   17660:	adc	r2, r3, r2
   17664:	ldr	r3, [sp, #16]
   17668:	str	sl, [sp, #160]	; 0xa0
   1766c:	orr	fp, r8, fp, lsr #31
   17670:	adds	r3, r3, r1
   17674:	eor	ip, ip, r3
   17678:	adc	r9, r2, r0
   1767c:	ldr	r2, [sp, #232]	; 0xe8
   17680:	eor	lr, lr, r9
   17684:	str	r3, [sp, #104]	; 0x68
   17688:	lsr	r3, ip, #16
   1768c:	str	r9, [sp, #60]	; 0x3c
   17690:	lsr	r6, lr, #16
   17694:	orr	r8, r3, lr, lsl #16
   17698:	ldr	lr, [sp, #188]	; 0xbc
   1769c:	orr	sl, r6, ip, lsl #16
   176a0:	str	fp, [sp, #204]	; 0xcc
   176a4:	adds	r9, r5, r8
   176a8:	ldr	r5, [sp, #136]	; 0x88
   176ac:	adc	r7, r7, sl
   176b0:	eor	r1, r1, r9
   176b4:	ldr	fp, [sp, #148]	; 0x94
   176b8:	eor	r0, r0, r7
   176bc:	str	r9, [sp, #108]	; 0x6c
   176c0:	lsl	r9, r1, #1
   176c4:	ldr	r6, [sp, #156]	; 0x9c
   176c8:	adds	r3, r5, r2
   176cc:	str	r7, [sp, #136]	; 0x88
   176d0:	orr	r9, r9, r0, lsr #31
   176d4:	ldr	r5, [sp, #24]
   176d8:	str	sl, [sp, #212]	; 0xd4
   176dc:	ldr	sl, [sp, #68]	; 0x44
   176e0:	str	r8, [sp, #208]	; 0xd0
   176e4:	lsl	r8, r0, #1
   176e8:	ldr	r2, [sp, #236]	; 0xec
   176ec:	orr	r8, r8, r1, lsr #31
   176f0:	ldr	r7, [sp, #200]	; 0xc8
   176f4:	adc	r2, r5, r2
   176f8:	adds	r3, r3, r4
   176fc:	eor	r5, r3, lr
   17700:	ldr	lr, [sp, #192]	; 0xc0
   17704:	adc	r2, r2, fp
   17708:	eor	ip, r2, lr
   1770c:	ldr	lr, [sp, #72]	; 0x48
   17710:	adds	r6, r6, ip
   17714:	adc	r7, r7, r5
   17718:	eor	r4, r4, r6
   1771c:	str	ip, [sp, #16]
   17720:	eor	ip, r7, fp
   17724:	lsr	fp, r4, #24
   17728:	adds	r3, sl, r3
   1772c:	lsr	sl, ip, #24
   17730:	orr	ip, fp, ip, lsl #8
   17734:	adc	r2, lr, r2
   17738:	orr	r4, sl, r4, lsl #8
   1773c:	adds	lr, r3, ip
   17740:	ldr	r3, [sp, #16]
   17744:	adc	r2, r2, r4
   17748:	mov	r0, r2
   1774c:	str	lr, [sp, #68]	; 0x44
   17750:	eor	r5, r5, r0
   17754:	str	r0, [sp, #72]	; 0x48
   17758:	eor	r3, r3, lr
   1775c:	mov	lr, r3
   17760:	lsr	r2, r3, #16
   17764:	lsr	r3, r5, #16
   17768:	orr	r1, r2, r5, lsl #16
   1776c:	ldr	r2, [sp, #180]	; 0xb4
   17770:	orr	r5, r3, lr, lsl #16
   17774:	adds	fp, r6, r1
   17778:	ldr	lr, [sp, #140]	; 0x8c
   1777c:	adc	sl, r7, r5
   17780:	str	r1, [sp, #148]	; 0x94
   17784:	eor	ip, ip, fp
   17788:	str	r5, [sp, #156]	; 0x9c
   1778c:	eor	r4, r4, sl
   17790:	ldr	r5, [sp, #52]	; 0x34
   17794:	ldr	r6, [sp, #184]	; 0xb8
   17798:	adds	r3, r5, r2
   1779c:	ldr	r5, [sp, #56]	; 0x38
   177a0:	adc	r2, r5, r6
   177a4:	ldr	r6, [sp, #152]	; 0x98
   177a8:	adds	r3, r3, lr
   177ac:	ldr	r5, [sp, #248]	; 0xf8
   177b0:	adc	r2, r2, r6
   177b4:	eor	r0, r3, r5
   177b8:	ldr	r5, [sp, #264]	; 0x108
   177bc:	eor	r1, r2, r5
   177c0:	ldr	r5, [sp, #220]	; 0xdc
   177c4:	adds	r5, r5, r1
   177c8:	str	r5, [sp, #16]
   177cc:	ldr	r5, [sp, #228]	; 0xe4
   177d0:	adc	r7, r5, r0
   177d4:	mov	r5, lr
   177d8:	ldr	lr, [sp, #16]
   177dc:	eor	r5, r5, lr
   177e0:	lsl	lr, r4, #1
   177e4:	str	lr, [sp, #20]
   177e8:	eor	lr, r7, r6
   177ec:	ldr	r6, [sp, #116]	; 0x74
   177f0:	adds	r3, r6, r3
   177f4:	lsr	r6, lr, #24
   177f8:	str	r6, [sp, #24]
   177fc:	ldr	r6, [sp, #120]	; 0x78
   17800:	adc	r2, r6, r2
   17804:	lsr	r6, r5, #24
   17808:	orr	lr, r6, lr, lsl #8
   1780c:	ldr	r6, [sp, #24]
   17810:	orr	r5, r6, r5, lsl #8
   17814:	adds	r6, r3, lr
   17818:	lsl	r3, ip, #1
   1781c:	eor	r1, r1, r6
   17820:	adc	r2, r2, r5
   17824:	str	r6, [sp, #24]
   17828:	orr	r4, r3, r4, lsr #31
   1782c:	mov	r3, r2
   17830:	ldr	r2, [sp, #20]
   17834:	eor	r0, r0, r3
   17838:	str	r3, [sp, #20]
   1783c:	ldr	r3, [sp, #16]
   17840:	orr	r2, r2, ip, lsr #31
   17844:	ldr	r6, [sp, #64]	; 0x40
   17848:	lsr	ip, r1, #16
   1784c:	str	r2, [sp, #116]	; 0x74
   17850:	lsr	r2, r0, #16
   17854:	orr	ip, ip, r0, lsl #16
   17858:	orr	r2, r2, r1, lsl #16
   1785c:	adds	r0, r3, ip
   17860:	mov	r1, r0
   17864:	adc	r0, r7, r2
   17868:	mov	r7, r0
   1786c:	ldr	r0, [sp, #84]	; 0x54
   17870:	eor	lr, lr, r1
   17874:	str	r1, [sp, #52]	; 0x34
   17878:	eor	r5, r5, r7
   1787c:	str	r7, [sp, #56]	; 0x38
   17880:	adds	r3, r0, r6
   17884:	ldr	r0, [sp, #88]	; 0x58
   17888:	ldr	r6, [sp, #144]	; 0x90
   1788c:	adc	r6, r0, r6
   17890:	adds	r3, r3, r9
   17894:	eor	r0, ip, r3
   17898:	adc	r6, r6, r8
   1789c:	eor	r2, r2, r6
   178a0:	str	r0, [sp, #16]
   178a4:	adds	r0, fp, r2
   178a8:	lsl	fp, lr, #1
   178ac:	ldr	r1, [sp, #16]
   178b0:	mov	ip, r0
   178b4:	eor	r0, ip, r9
   178b8:	ldr	r9, [sp, #44]	; 0x2c
   178bc:	str	ip, [sp, #64]	; 0x40
   178c0:	ldr	ip, [sp, #48]	; 0x30
   178c4:	adc	r7, sl, r1
   178c8:	lsl	sl, r5, #1
   178cc:	eor	r1, r7, r8
   178d0:	lsr	r8, r0, #24
   178d4:	adds	r3, r9, r3
   178d8:	lsr	r9, r1, #24
   178dc:	orr	r8, r8, r1, lsl #8
   178e0:	orr	r9, r9, r0, lsl #8
   178e4:	adc	r6, ip, r6
   178e8:	adds	r0, r3, r8
   178ec:	ldr	r3, [sp, #16]
   178f0:	str	r0, [sp, #128]	; 0x80
   178f4:	orr	r0, fp, r5, lsr #31
   178f8:	adc	r5, r6, r9
   178fc:	orr	fp, sl, lr, lsr #31
   17900:	str	r0, [sp, #44]	; 0x2c
   17904:	add	r0, sp, #400	; 0x190
   17908:	str	fp, [sp, #48]	; 0x30
   1790c:	str	r5, [sp, #132]	; 0x84
   17910:	ldr	r5, [sp, #64]	; 0x40
   17914:	ldrd	sl, [sp, #128]	; 0x80
   17918:	ldr	r6, [sp, #176]	; 0xb0
   1791c:	eor	r2, r2, sl
   17920:	eor	r3, r3, fp
   17924:	strd	sl, [r0]
   17928:	lsr	r1, r2, #16
   1792c:	ldr	fp, [sp, #116]	; 0x74
   17930:	lsr	ip, r3, #16
   17934:	orr	r3, r1, r3, lsl #16
   17938:	orr	ip, ip, r2, lsl #16
   1793c:	ldr	r2, [sp, #76]	; 0x4c
   17940:	adds	r1, r5, r3
   17944:	ldr	r5, [sp, #104]	; 0x68
   17948:	adc	r0, r7, ip
   1794c:	str	r1, [sp, #480]	; 0x1e0
   17950:	eor	r1, r1, r8
   17954:	str	r3, [sp, #520]	; 0x208
   17958:	ldr	r3, [sp, #80]	; 0x50
   1795c:	str	ip, [sp, #524]	; 0x20c
   17960:	adds	r2, r2, r5
   17964:	ldr	ip, [sp, #52]	; 0x34
   17968:	str	r0, [sp, #484]	; 0x1e4
   1796c:	eor	r0, r0, r9
   17970:	ldr	r5, [sp, #60]	; 0x3c
   17974:	ldr	r9, [sp, #92]	; 0x5c
   17978:	adc	r3, r3, r5
   1797c:	adds	r2, r2, r4
   17980:	eor	r7, r2, r6
   17984:	ldr	r6, [sp, #196]	; 0xc4
   17988:	adc	r3, r3, fp
   1798c:	eor	r5, r3, r6
   17990:	adds	lr, ip, r5
   17994:	lsl	ip, r0, #1
   17998:	eor	r4, r4, lr
   1799c:	mov	sl, ip
   179a0:	ldr	ip, [sp, #56]	; 0x38
   179a4:	lsr	r8, r4, #24
   179a8:	adc	r6, ip, r7
   179ac:	adds	r2, r9, r2
   179b0:	eor	ip, r6, fp
   179b4:	ldr	fp, [sp, #96]	; 0x60
   179b8:	lsr	r9, ip, #24
   179bc:	orr	r8, r8, ip, lsl #8
   179c0:	orr	r9, r9, r4, lsl #8
   179c4:	lsl	r4, r1, #1
   179c8:	adc	r3, fp, r3
   179cc:	adds	r2, r2, r8
   179d0:	orr	r1, sl, r1, lsr #31
   179d4:	adc	r3, r3, r9
   179d8:	eor	r5, r5, r2
   179dc:	orr	r0, r4, r0, lsr #31
   179e0:	eor	r7, r7, r3
   179e4:	str	r2, [sp, #408]	; 0x198
   179e8:	lsr	ip, r5, #16
   179ec:	lsr	r2, r7, #16
   179f0:	str	r3, [sp, #412]	; 0x19c
   179f4:	ldr	r3, [sp, #36]	; 0x24
   179f8:	orr	r7, ip, r7, lsl #16
   179fc:	orr	r5, r2, r5, lsl #16
   17a00:	str	r0, [sp, #440]	; 0x1b8
   17a04:	adds	lr, lr, r7
   17a08:	str	r1, [sp, #444]	; 0x1bc
   17a0c:	ldr	r2, [sp, #68]	; 0x44
   17a10:	adc	r4, r6, r5
   17a14:	eor	ip, lr, r8
   17a18:	str	lr, [sp, #488]	; 0x1e8
   17a1c:	ldr	sl, [sp, #44]	; 0x2c
   17a20:	str	r4, [sp, #492]	; 0x1ec
   17a24:	eor	r4, r4, r9
   17a28:	lsl	r9, ip, #1
   17a2c:	ldr	fp, [sp, #48]	; 0x30
   17a30:	lsl	r8, r4, #1
   17a34:	adds	r0, r3, r2
   17a38:	str	r7, [sp, #496]	; 0x1f0
   17a3c:	orr	r9, r9, r4, lsr #31
   17a40:	ldr	r3, [sp, #40]	; 0x28
   17a44:	orr	ip, r8, ip, lsr #31
   17a48:	ldr	r1, [sp, #72]	; 0x48
   17a4c:	ldr	r6, [sp, #208]	; 0xd0
   17a50:	str	r5, [sp, #500]	; 0x1f4
   17a54:	mov	r5, sl
   17a58:	ldr	r2, [sp, #32]
   17a5c:	adc	r1, r3, r1
   17a60:	adds	r0, r0, sl
   17a64:	str	r9, [sp, #448]	; 0x1c0
   17a68:	adc	r1, r1, fp
   17a6c:	str	ip, [sp, #452]	; 0x1c4
   17a70:	eor	r7, r0, r6
   17a74:	ldr	r3, [sp, #28]
   17a78:	ldr	r6, [sp, #212]	; 0xd4
   17a7c:	ldr	sl, [sp, #124]	; 0x7c
   17a80:	ldr	r9, [sp, #8]
   17a84:	eor	r6, r1, r6
   17a88:	adds	r3, r3, r6
   17a8c:	ldr	ip, [sp, #160]	; 0xa0
   17a90:	adc	r2, r2, r7
   17a94:	adds	r0, sl, r0
   17a98:	eor	fp, fp, r2
   17a9c:	eor	r5, r5, r3
   17aa0:	lsr	sl, fp, #24
   17aa4:	mov	lr, fp
   17aa8:	ldr	fp, [sp, #12]
   17aac:	adc	r1, fp, r1
   17ab0:	lsr	fp, r5, #24
   17ab4:	orr	r5, sl, r5, lsl #8
   17ab8:	orr	lr, fp, lr, lsl #8
   17abc:	ldr	fp, [sp, #204]	; 0xcc
   17ac0:	adds	r0, r0, lr
   17ac4:	adc	r1, r1, r5
   17ac8:	eor	r6, r6, r0
   17acc:	eor	r8, r1, r7
   17ad0:	lsr	r7, r6, #16
   17ad4:	str	r0, [sp, #416]	; 0x1a0
   17ad8:	lsr	r4, r8, #16
   17adc:	str	r1, [sp, #420]	; 0x1a4
   17ae0:	ldr	r0, [sp, #24]
   17ae4:	orr	r7, r7, r8, lsl #16
   17ae8:	orr	r4, r4, r6, lsl #16
   17aec:	ldr	r8, [sp, #20]
   17af0:	adds	r3, r3, r7
   17af4:	adc	r2, r2, r4
   17af8:	eor	lr, lr, r3
   17afc:	ldr	r1, [sp, #112]	; 0x70
   17b00:	eor	r5, r5, r2
   17b04:	str	r3, [sp, #464]	; 0x1d0
   17b08:	ldr	r6, [sp, #148]	; 0x94
   17b0c:	str	r4, [sp, #508]	; 0x1fc
   17b10:	ldr	r4, [sp, #100]	; 0x64
   17b14:	adds	r0, r1, r0
   17b18:	str	r7, [sp, #504]	; 0x1f8
   17b1c:	adc	r1, r9, r8
   17b20:	adds	r0, r0, ip
   17b24:	ldr	r8, [sp, #108]	; 0x6c
   17b28:	eor	r9, r0, r6
   17b2c:	adc	r1, r1, fp
   17b30:	str	r2, [sp, #468]	; 0x1d4
   17b34:	ldr	r6, [sp, #156]	; 0x9c
   17b38:	eor	r6, r1, r6
   17b3c:	adds	sl, r8, r6
   17b40:	lsl	r8, r5, #1
   17b44:	str	sl, [sp, #12]
   17b48:	eor	sl, sl, ip
   17b4c:	ldr	ip, [sp, #136]	; 0x88
   17b50:	adc	r7, ip, r9
   17b54:	lsl	ip, lr, #1
   17b58:	adds	r0, r4, r0
   17b5c:	orr	lr, r8, lr, lsr #31
   17b60:	eor	fp, r7, fp
   17b64:	lsr	r4, fp, #24
   17b68:	str	ip, [sp, #8]
   17b6c:	lsr	ip, sl, #24
   17b70:	str	r0, [sp, #16]
   17b74:	orr	r4, r4, sl, lsl #8
   17b78:	ldmib	sp, {r0, r8}
   17b7c:	orr	ip, ip, fp, lsl #8
   17b80:	adc	r1, r0, r1
   17b84:	ldr	r0, [sp, #16]
   17b88:	orr	r5, r8, r5, lsr #31
   17b8c:	adds	r0, r0, ip
   17b90:	adc	r1, r1, r4
   17b94:	eor	r6, r6, r0
   17b98:	eor	r9, r9, r1
   17b9c:	str	r0, [sp, #424]	; 0x1a8
   17ba0:	lsr	r8, r6, #16
   17ba4:	str	r1, [sp, #428]	; 0x1ac
   17ba8:	lsr	r0, r9, #16
   17bac:	str	r5, [sp, #456]	; 0x1c8
   17bb0:	orr	r8, r8, r9, lsl #16
   17bb4:	ldr	r1, [sp, #12]
   17bb8:	orr	r6, r0, r6, lsl #16
   17bbc:	str	lr, [sp, #460]	; 0x1cc
   17bc0:	str	r8, [sp, #512]	; 0x200
   17bc4:	str	r6, [sp, #516]	; 0x204
   17bc8:	ldr	lr, [sp, #168]	; 0xa8
   17bcc:	adds	r1, r1, r8
   17bd0:	adc	r7, r7, r6
   17bd4:	eor	ip, ip, r1
   17bd8:	ldr	r6, [sp, #172]	; 0xac
   17bdc:	eor	r4, r4, r7
   17be0:	lsl	r0, ip, #1
   17be4:	str	r1, [sp, #472]	; 0x1d8
   17be8:	lsl	r1, r4, #1
   17bec:	str	r7, [sp, #476]	; 0x1dc
   17bf0:	orr	r4, r0, r4, lsr #31
   17bf4:	orr	ip, r1, ip, lsr #31
   17bf8:	ldr	r1, [sp, #164]	; 0xa4
   17bfc:	str	r4, [sp, #432]	; 0x1b0
   17c00:	str	ip, [sp, #436]	; 0x1b4
   17c04:	mov	ip, r3
   17c08:	ldrd	r4, [sp, #128]	; 0x80
   17c0c:	b	17c1c <__assert_fail@plt+0x6a90>
   17c10:	ldrd	r4, [lr], #8
   17c14:	ldr	ip, [lr, #56]	; 0x38
   17c18:	ldr	r2, [lr, #60]	; 0x3c
   17c1c:	eor	ip, ip, r4
   17c20:	eor	r2, r2, r5
   17c24:	ldr	r0, [r1, #8]!
   17c28:	ldr	r3, [r1, #4]
   17c2c:	eor	r0, r0, ip
   17c30:	cmp	r1, r6
   17c34:	eor	r3, r3, r2
   17c38:	stm	r1, {r0, r3}
   17c3c:	bne	17c10 <__assert_fail@plt+0x6a84>
   17c40:	add	sp, sp, #532	; 0x214
   17c44:	ldrd	r4, [sp]
   17c48:	ldrd	r6, [sp, #8]
   17c4c:	ldrd	r8, [sp, #16]
   17c50:	ldrd	sl, [sp, #24]
   17c54:	add	sp, sp, #32
   17c58:	pop	{pc}		; (ldr pc, [sp], #4)
   17c5c:	strd	r4, [sp, #-36]!	; 0xffffffdc
   17c60:	mov	r4, r0
   17c64:	strd	r6, [sp, #8]
   17c68:	strd	sl, [sp, #24]
   17c6c:	add	fp, r0, #96	; 0x60
   17c70:	ldr	sl, [r0, #224]	; 0xe0
   17c74:	strd	r8, [sp, #16]
   17c78:	mov	r8, r2
   17c7c:	mov	r9, r1
   17c80:	str	lr, [sp, #32]
   17c84:	sub	sp, sp, #20
   17c88:	rsb	r2, sl, #128	; 0x80
   17c8c:	add	r0, fp, sl
   17c90:	cmp	r2, r8
   17c94:	bcc	17ccc <__assert_fail@plt+0x6b40>
   17c98:	mov	r2, r8
   17c9c:	mov	r1, r9
   17ca0:	bl	10f34 <memcpy@plt>
   17ca4:	ldr	r3, [r4, #224]	; 0xe0
   17ca8:	add	r8, r3, r8
   17cac:	str	r8, [r4, #224]	; 0xe0
   17cb0:	add	sp, sp, #20
   17cb4:	ldrd	r4, [sp]
   17cb8:	ldrd	r6, [sp, #8]
   17cbc:	ldrd	r8, [sp, #16]
   17cc0:	ldrd	sl, [sp, #24]
   17cc4:	add	sp, sp, #32
   17cc8:	pop	{pc}		; (ldr pc, [sp], #4)
   17ccc:	mov	r3, #0
   17cd0:	add	r5, r1, r2
   17cd4:	sub	r8, r8, #128	; 0x80
   17cd8:	str	r3, [r4, #224]	; 0xe0
   17cdc:	add	r8, sl, r8
   17ce0:	bl	10f34 <memcpy@plt>
   17ce4:	ldr	lr, [r4, #64]	; 0x40
   17ce8:	mov	r1, fp
   17cec:	mov	r0, r4
   17cf0:	ldr	ip, [r4, #68]	; 0x44
   17cf4:	ldrd	r2, [r4, #72]	; 0x48
   17cf8:	adds	lr, lr, #128	; 0x80
   17cfc:	mov	r6, lr
   17d00:	adc	ip, ip, #0
   17d04:	cmp	ip, #0
   17d08:	mov	r7, ip
   17d0c:	cmpeq	lr, #127	; 0x7f
   17d10:	movls	ip, #1
   17d14:	movhi	ip, #0
   17d18:	strd	r6, [r4, #64]	; 0x40
   17d1c:	adds	r6, r2, ip
   17d20:	adc	r7, r3, #0
   17d24:	strd	r6, [r4, #72]	; 0x48
   17d28:	bl	12ed8 <__assert_fail@plt+0x1d4c>
   17d2c:	cmp	r8, #128	; 0x80
   17d30:	bls	17db4 <__assert_fail@plt+0x6c28>
   17d34:	sub	sl, r8, #129	; 0x81
   17d38:	lsr	sl, sl, #7
   17d3c:	add	r9, sl, #1
   17d40:	add	r9, r5, r9, lsl #7
   17d44:	strd	sl, [sp, #4]
   17d48:	ldr	r0, [r4, #64]	; 0x40
   17d4c:	mov	r1, r5
   17d50:	add	r5, r5, #128	; 0x80
   17d54:	ldr	ip, [r4, #68]	; 0x44
   17d58:	ldrd	r2, [r4, #72]	; 0x48
   17d5c:	adds	r6, r0, #128	; 0x80
   17d60:	mov	r0, r4
   17d64:	adc	r7, ip, #0
   17d68:	cmp	r7, #0
   17d6c:	cmpeq	r6, #127	; 0x7f
   17d70:	strd	r6, [r4, #64]	; 0x40
   17d74:	movls	ip, #1
   17d78:	movhi	ip, #0
   17d7c:	adds	sl, r2, ip
   17d80:	adc	fp, r3, #0
   17d84:	mov	r2, sl
   17d88:	mov	r3, fp
   17d8c:	strd	r2, [r4, #72]	; 0x48
   17d90:	bl	12ed8 <__assert_fail@plt+0x1d4c>
   17d94:	cmp	r9, r5
   17d98:	bne	17d48 <__assert_fail@plt+0x6bbc>
   17d9c:	ldrd	sl, [sp, #4]
   17da0:	sub	r8, r8, #128	; 0x80
   17da4:	ldr	r0, [r4, #224]	; 0xe0
   17da8:	sub	r8, r8, sl, lsl #7
   17dac:	add	r0, fp, r0
   17db0:	b	17c98 <__assert_fail@plt+0x6b0c>
   17db4:	ldr	r0, [r4, #224]	; 0xe0
   17db8:	mov	r9, r5
   17dbc:	add	r0, fp, r0
   17dc0:	b	17c98 <__assert_fail@plt+0x6b0c>
   17dc4:	mov	r2, #240	; 0xf0
   17dc8:	strd	r4, [sp, #-16]!
   17dcc:	mov	r4, r0
   17dd0:	mov	r5, r1
   17dd4:	mov	r1, #0
   17dd8:	str	r6, [sp, #8]
   17ddc:	str	lr, [sp, #12]
   17de0:	sub	sp, sp, #8
   17de4:	add	r6, r4, #56	; 0x38
   17de8:	bl	110b4 <memset@plt>
   17dec:	sub	r3, r4, #8
   17df0:	ldr	ip, [pc, #120]	; 17e70 <__assert_fail@plt+0x6ce4>
   17df4:	mov	r2, r3
   17df8:	add	r1, pc, #104	; 0x68
   17dfc:	ldrd	r0, [r1]
   17e00:	b	17e08 <__assert_fail@plt+0x6c7c>
   17e04:	ldrd	r0, [ip], #8
   17e08:	strd	r0, [r2, #8]!
   17e0c:	cmp	r2, r6
   17e10:	bne	17e04 <__assert_fail@plt+0x6c78>
   17e14:	mov	r2, r5
   17e18:	ldr	r0, [r3, #8]!
   17e1c:	add	r2, r2, #8
   17e20:	ldr	lr, [r2, #-8]
   17e24:	ldr	ip, [r2, #-4]
   17e28:	cmp	r3, r6
   17e2c:	ldr	r1, [r3, #4]
   17e30:	eor	r0, r0, lr
   17e34:	str	lr, [sp]
   17e38:	str	ip, [sp, #4]
   17e3c:	eor	r1, r1, ip
   17e40:	strd	r0, [r3]
   17e44:	bne	17e18 <__assert_fail@plt+0x6c8c>
   17e48:	ldrb	r3, [r5]
   17e4c:	mov	r0, #0
   17e50:	str	r3, [r4, #228]	; 0xe4
   17e54:	add	sp, sp, #8
   17e58:	ldrd	r4, [sp]
   17e5c:	ldr	r6, [sp, #8]
   17e60:	add	sp, sp, #12
   17e64:	pop	{pc}		; (ldr pc, [sp], #4)
   17e68:	vtbl.8	d12, {d12-d13}, d8
   17e6c:	bvs	291810 <optarg@@GLIBC_2.4+0x263688>
   17e70:	andeq	sp, r1, r8, asr #12
   17e74:	sub	r3, r1, #1
   17e78:	cmp	r3, #63	; 0x3f
   17e7c:	bhi	17ef0 <__assert_fail@plt+0x6d64>
   17e80:	strd	r4, [sp, #-12]!
   17e84:	mov	r3, #0
   17e88:	mov	r4, #0
   17e8c:	str	lr, [sp, #8]
   17e90:	sub	sp, sp, #68	; 0x44
   17e94:	mov	r5, #0
   17e98:	movw	r2, #257	; 0x101
   17e9c:	strb	r1, [sp]
   17ea0:	mov	r1, sp
   17ea4:	strb	r3, [sp, #1]
   17ea8:	strh	r2, [sp, #2]
   17eac:	str	r3, [sp, #4]
   17eb0:	str	r3, [sp, #8]
   17eb4:	str	r3, [sp, #12]
   17eb8:	strh	r3, [sp, #16]
   17ebc:	str	r3, [sp, #18]
   17ec0:	str	r3, [sp, #22]
   17ec4:	str	r3, [sp, #26]
   17ec8:	strh	r3, [sp, #30]
   17ecc:	strd	r4, [sp, #32]
   17ed0:	strd	r4, [sp, #40]	; 0x28
   17ed4:	strd	r4, [sp, #48]	; 0x30
   17ed8:	strd	r4, [sp, #56]	; 0x38
   17edc:	bl	17dc4 <__assert_fail@plt+0x6c38>
   17ee0:	add	sp, sp, #68	; 0x44
   17ee4:	ldrd	r4, [sp]
   17ee8:	add	sp, sp, #8
   17eec:	pop	{pc}		; (ldr pc, [sp], #4)
   17ef0:	mvn	r0, #0
   17ef4:	bx	lr
   17ef8:	sub	ip, r1, #1
   17efc:	cmp	ip, #63	; 0x3f
   17f00:	bhi	18008 <__assert_fail@plt+0x6e7c>
   17f04:	clz	ip, r2
   17f08:	strd	r4, [sp, #-20]!	; 0xffffffec
   17f0c:	sub	r4, r3, #1
   17f10:	lsr	ip, ip, #5
   17f14:	strd	r6, [sp, #8]
   17f18:	str	lr, [sp, #16]
   17f1c:	sub	sp, sp, #196	; 0xc4
   17f20:	cmp	r4, #63	; 0x3f
   17f24:	movls	r4, ip
   17f28:	orrhi	r4, ip, #1
   17f2c:	cmp	r4, #0
   17f30:	bne	18000 <__assert_fail@plt+0x6e74>
   17f34:	mov	r5, r3
   17f38:	movw	ip, #257	; 0x101
   17f3c:	strb	r1, [sp]
   17f40:	mov	r3, #0
   17f44:	mov	r6, r2
   17f48:	mov	r2, #0
   17f4c:	mov	r1, sp
   17f50:	strb	r5, [sp, #1]
   17f54:	mov	r7, r0
   17f58:	strh	ip, [sp, #2]
   17f5c:	str	r4, [sp, #4]
   17f60:	str	r4, [sp, #8]
   17f64:	str	r4, [sp, #12]
   17f68:	strh	r4, [sp, #16]
   17f6c:	str	r4, [sp, #18]
   17f70:	str	r4, [sp, #22]
   17f74:	str	r4, [sp, #26]
   17f78:	strh	r4, [sp, #30]
   17f7c:	strd	r2, [sp, #32]
   17f80:	strd	r2, [sp, #40]	; 0x28
   17f84:	strd	r2, [sp, #48]	; 0x30
   17f88:	strd	r2, [sp, #56]	; 0x38
   17f8c:	bl	17dc4 <__assert_fail@plt+0x6c38>
   17f90:	cmp	r0, #0
   17f94:	blt	18000 <__assert_fail@plt+0x6e74>
   17f98:	mov	r2, #128	; 0x80
   17f9c:	mov	r1, r4
   17fa0:	add	r0, sp, #64	; 0x40
   17fa4:	bl	110b4 <memset@plt>
   17fa8:	mov	r3, #128	; 0x80
   17fac:	mov	r2, r5
   17fb0:	mov	r1, r6
   17fb4:	add	r0, sp, #64	; 0x40
   17fb8:	bl	10fac <__memcpy_chk@plt>
   17fbc:	mov	r0, r7
   17fc0:	add	r1, sp, #64	; 0x40
   17fc4:	mov	r2, #128	; 0x80
   17fc8:	bl	17c5c <__assert_fail@plt+0x6ad0>
   17fcc:	movw	r3, #57624	; 0xe118
   17fd0:	movt	r3, #2
   17fd4:	add	r0, sp, #64	; 0x40
   17fd8:	mov	r2, #128	; 0x80
   17fdc:	ldr	r3, [r3]
   17fe0:	mov	r1, r4
   17fe4:	blx	r3
   17fe8:	mov	r0, r4
   17fec:	add	sp, sp, #196	; 0xc4
   17ff0:	ldrd	r4, [sp]
   17ff4:	ldrd	r6, [sp, #8]
   17ff8:	add	sp, sp, #16
   17ffc:	pop	{pc}		; (ldr pc, [sp], #4)
   18000:	mvn	r0, #0
   18004:	b	17fec <__assert_fail@plt+0x6e60>
   18008:	mvn	r0, #0
   1800c:	bx	lr
   18010:	cmp	r2, #0
   18014:	beq	18034 <__assert_fail@plt+0x6ea8>
   18018:	str	r4, [sp, #-8]!
   1801c:	str	lr, [sp, #4]
   18020:	bl	17c5c <__assert_fail@plt+0x6ad0>
   18024:	ldr	r4, [sp]
   18028:	add	sp, sp, #4
   1802c:	mov	r0, #0
   18030:	pop	{pc}		; (ldr pc, [sp], #4)
   18034:	mov	r0, #0
   18038:	bx	lr
   1803c:	strd	r4, [sp, #-36]!	; 0xffffffdc
   18040:	mov	r5, r1
   18044:	mov	r4, r0
   18048:	strd	r6, [sp, #8]
   1804c:	mov	r1, #0
   18050:	mov	r6, r2
   18054:	strd	r8, [sp, #16]
   18058:	mov	r2, #64	; 0x40
   1805c:	strd	sl, [sp, #24]
   18060:	str	lr, [sp, #32]
   18064:	sub	sp, sp, #76	; 0x4c
   18068:	add	r0, sp, #8
   1806c:	bl	110b4 <memset@plt>
   18070:	cmp	r5, #0
   18074:	beq	18174 <__assert_fail@plt+0x6fe8>
   18078:	ldr	r3, [r4, #228]	; 0xe4
   1807c:	cmp	r3, r6
   18080:	bhi	18174 <__assert_fail@plt+0x6fe8>
   18084:	ldrd	r2, [r4, #80]	; 0x50
   18088:	orrs	r3, r2, r3
   1808c:	bne	18174 <__assert_fail@plt+0x6fe8>
   18090:	ldrd	r0, [r4, #64]	; 0x40
   18094:	mov	r7, #0
   18098:	ldrd	sl, [r4, #72]	; 0x48
   1809c:	ldr	r2, [r4, #224]	; 0xe0
   180a0:	ldrb	r3, [r4, #232]	; 0xe8
   180a4:	adds	r8, r2, r0
   180a8:	adcs	r9, r7, r1
   180ac:	movcs	r1, #1
   180b0:	movcc	r1, #0
   180b4:	adds	r6, sl, r1
   180b8:	strd	r8, [r4, #64]	; 0x40
   180bc:	adc	r7, fp, #0
   180c0:	cmp	r3, #0
   180c4:	strd	r6, [r4, #72]	; 0x48
   180c8:	bne	18164 <__assert_fail@plt+0x6fd8>
   180cc:	mvn	r8, #0
   180d0:	mvn	r9, #0
   180d4:	add	r6, r4, #96	; 0x60
   180d8:	mov	r1, #0
   180dc:	add	r0, r6, r2
   180e0:	rsb	r2, r2, #128	; 0x80
   180e4:	strd	r8, [r4, #80]	; 0x50
   180e8:	bl	110b4 <memset@plt>
   180ec:	mov	r1, r6
   180f0:	mov	r0, r4
   180f4:	bl	12ed8 <__assert_fail@plt+0x1d4c>
   180f8:	sub	r3, r4, #8
   180fc:	add	r2, sp, #8
   18100:	add	ip, r4, #56	; 0x38
   18104:	ldrd	r0, [r3, #8]!
   18108:	cmp	r3, ip
   1810c:	strd	r0, [r2], #8
   18110:	strd	r0, [sp]
   18114:	bne	18104 <__assert_fail@plt+0x6f78>
   18118:	add	r1, sp, #8
   1811c:	mov	r0, r5
   18120:	ldr	r2, [r4, #228]	; 0xe4
   18124:	bl	10f34 <memcpy@plt>
   18128:	movw	r3, #57624	; 0xe118
   1812c:	movt	r3, #2
   18130:	add	r0, sp, #8
   18134:	mov	r2, #64	; 0x40
   18138:	ldr	r3, [r3]
   1813c:	mov	r1, #0
   18140:	blx	r3
   18144:	mov	r0, #0
   18148:	add	sp, sp, #76	; 0x4c
   1814c:	ldrd	r4, [sp]
   18150:	ldrd	r6, [sp, #8]
   18154:	ldrd	r8, [sp, #16]
   18158:	ldrd	sl, [sp, #24]
   1815c:	add	sp, sp, #32
   18160:	pop	{pc}		; (ldr pc, [sp], #4)
   18164:	mvn	r0, #0
   18168:	mvn	r1, #0
   1816c:	strd	r0, [r4, #88]	; 0x58
   18170:	b	180cc <__assert_fail@plt+0x6f40>
   18174:	mvn	r0, #0
   18178:	b	18148 <__assert_fail@plt+0x6fbc>
   1817c:	adds	ip, r3, #0
   18180:	strd	r4, [sp, #-28]!	; 0xffffffe4
   18184:	movne	ip, #1
   18188:	cmp	r2, #0
   1818c:	strd	r6, [sp, #8]
   18190:	movne	ip, #0
   18194:	cmp	r0, #0
   18198:	strd	r8, [sp, #16]
   1819c:	moveq	ip, #1
   181a0:	str	lr, [sp, #24]
   181a4:	sub	sp, sp, #244	; 0xf4
   181a8:	cmp	ip, #0
   181ac:	ldr	r7, [sp, #272]	; 0x110
   181b0:	ldr	lr, [sp, #276]	; 0x114
   181b4:	bne	18268 <__assert_fail@plt+0x70dc>
   181b8:	adds	ip, lr, #0
   181bc:	movne	ip, #1
   181c0:	cmp	r7, #0
   181c4:	movne	ip, #0
   181c8:	cmp	ip, #0
   181cc:	bne	18268 <__assert_fail@plt+0x70dc>
   181d0:	sub	ip, r1, #1
   181d4:	mov	r4, r1
   181d8:	cmp	lr, #64	; 0x40
   181dc:	cmpls	ip, #63	; 0x3f
   181e0:	bhi	18268 <__assert_fail@plt+0x70dc>
   181e4:	cmp	lr, #0
   181e8:	mov	r8, r0
   181ec:	mov	r6, r3
   181f0:	mov	r5, r2
   181f4:	mov	r9, sp
   181f8:	bne	18250 <__assert_fail@plt+0x70c4>
   181fc:	mov	r0, r9
   18200:	bl	17e74 <__assert_fail@plt+0x6ce8>
   18204:	cmp	r0, #0
   18208:	blt	18268 <__assert_fail@plt+0x70dc>
   1820c:	cmp	r6, #0
   18210:	beq	18224 <__assert_fail@plt+0x7098>
   18214:	mov	r2, r6
   18218:	mov	r1, r5
   1821c:	mov	r0, r9
   18220:	bl	17c5c <__assert_fail@plt+0x6ad0>
   18224:	mov	r2, r4
   18228:	mov	r1, r8
   1822c:	mov	r0, r9
   18230:	bl	1803c <__assert_fail@plt+0x6eb0>
   18234:	mov	r0, #0
   18238:	add	sp, sp, #244	; 0xf4
   1823c:	ldrd	r4, [sp]
   18240:	ldrd	r6, [sp, #8]
   18244:	ldrd	r8, [sp, #16]
   18248:	add	sp, sp, #24
   1824c:	pop	{pc}		; (ldr pc, [sp], #4)
   18250:	mov	r3, lr
   18254:	mov	r2, r7
   18258:	mov	r0, r9
   1825c:	bl	17ef8 <__assert_fail@plt+0x6d6c>
   18260:	cmp	r0, #0
   18264:	bge	1820c <__assert_fail@plt+0x7080>
   18268:	mvn	r0, #0
   1826c:	b	18238 <__assert_fail@plt+0x70ac>
   18270:	b	1817c <__assert_fail@plt+0x6ff0>
   18274:	strd	r4, [sp, #-24]!	; 0xffffffe8
   18278:	mov	r5, r0
   1827c:	mov	r0, #32768	; 0x8000
   18280:	strd	r6, [sp, #8]
   18284:	mov	r7, r2
   18288:	str	r8, [sp, #16]
   1828c:	mov	r8, r1
   18290:	str	lr, [sp, #20]
   18294:	sub	sp, sp, #240	; 0xf0
   18298:	bl	1c090 <__assert_fail@plt+0xaf04>
   1829c:	subs	r6, r0, #0
   182a0:	beq	1836c <__assert_fail@plt+0x71e0>
   182a4:	mov	r1, r7
   182a8:	mov	r0, sp
   182ac:	bl	17e74 <__assert_fail@plt+0x6ce8>
   182b0:	mov	r4, #0
   182b4:	b	182cc <__assert_fail@plt+0x7140>
   182b8:	cmp	r3, #0
   182bc:	beq	18308 <__assert_fail@plt+0x717c>
   182c0:	bl	1106c <feof@plt>
   182c4:	cmp	r0, #0
   182c8:	bne	18318 <__assert_fail@plt+0x718c>
   182cc:	mov	r3, r5
   182d0:	rsb	r2, r4, #32768	; 0x8000
   182d4:	add	r0, r6, r4
   182d8:	mov	r1, #1
   182dc:	bl	10fdc <fread@plt>
   182e0:	mov	r3, r0
   182e4:	mov	r0, r5
   182e8:	add	r4, r4, r3
   182ec:	cmp	r4, #32768	; 0x8000
   182f0:	bne	182b8 <__assert_fail@plt+0x712c>
   182f4:	mov	r2, r4
   182f8:	mov	r1, r6
   182fc:	mov	r0, sp
   18300:	bl	18010 <__assert_fail@plt+0x6e84>
   18304:	b	182b0 <__assert_fail@plt+0x7124>
   18308:	bl	10f1c <ferror@plt>
   1830c:	cmp	r0, #0
   18310:	mvnne	r4, #0
   18314:	bne	18334 <__assert_fail@plt+0x71a8>
   18318:	cmp	r4, #0
   1831c:	bne	18358 <__assert_fail@plt+0x71cc>
   18320:	mov	r2, r7
   18324:	mov	r1, r8
   18328:	mov	r0, sp
   1832c:	mov	r4, #0
   18330:	bl	1803c <__assert_fail@plt+0x6eb0>
   18334:	mov	r0, r6
   18338:	bl	18694 <__assert_fail@plt+0x7508>
   1833c:	mov	r0, r4
   18340:	add	sp, sp, #240	; 0xf0
   18344:	ldrd	r4, [sp]
   18348:	ldrd	r6, [sp, #8]
   1834c:	ldr	r8, [sp, #16]
   18350:	add	sp, sp, #20
   18354:	pop	{pc}		; (ldr pc, [sp], #4)
   18358:	mov	r2, r4
   1835c:	mov	r1, r6
   18360:	mov	r0, sp
   18364:	bl	18010 <__assert_fail@plt+0x6e84>
   18368:	b	18320 <__assert_fail@plt+0x7194>
   1836c:	mvn	r4, #0
   18370:	b	1833c <__assert_fail@plt+0x71b0>
   18374:	movw	r3, #57772	; 0xe1ac
   18378:	movt	r3, #2
   1837c:	str	r0, [r3]
   18380:	bx	lr
   18384:	movw	r3, #57772	; 0xe1ac
   18388:	movt	r3, #2
   1838c:	strb	r0, [r3, #4]
   18390:	bx	lr
   18394:	movw	r3, #57732	; 0xe184
   18398:	movt	r3, #2
   1839c:	strd	r4, [sp, #-16]!
   183a0:	ldr	r0, [r3]
   183a4:	str	r6, [sp, #8]
   183a8:	str	lr, [sp, #12]
   183ac:	sub	sp, sp, #8
   183b0:	bl	1c124 <__assert_fail@plt+0xaf98>
   183b4:	cmp	r0, #0
   183b8:	beq	183e4 <__assert_fail@plt+0x7258>
   183bc:	movw	r4, #57772	; 0xe1ac
   183c0:	movt	r4, #2
   183c4:	ldrb	r6, [r4, #4]
   183c8:	bl	11090 <__errno_location@plt>
   183cc:	mov	r5, r0
   183d0:	cmp	r6, #0
   183d4:	beq	18410 <__assert_fail@plt+0x7284>
   183d8:	ldr	r3, [r0]
   183dc:	cmp	r3, #32
   183e0:	bne	18410 <__assert_fail@plt+0x7284>
   183e4:	movw	r3, #57720	; 0xe178
   183e8:	movt	r3, #2
   183ec:	ldr	r0, [r3]
   183f0:	bl	1c124 <__assert_fail@plt+0xaf98>
   183f4:	cmp	r0, #0
   183f8:	bne	18458 <__assert_fail@plt+0x72cc>
   183fc:	add	sp, sp, #8
   18400:	ldrd	r4, [sp]
   18404:	ldr	r6, [sp, #8]
   18408:	add	sp, sp, #12
   1840c:	pop	{pc}		; (ldr pc, [sp], #4)
   18410:	movw	r1, #54928	; 0xd690
   18414:	movt	r1, #1
   18418:	mov	r2, #5
   1841c:	mov	r0, #0
   18420:	bl	10f7c <dcgettext@plt>
   18424:	mov	r6, r0
   18428:	ldr	r0, [r4]
   1842c:	cmp	r0, #0
   18430:	beq	18468 <__assert_fail@plt+0x72dc>
   18434:	ldr	r4, [r5]
   18438:	bl	1a8c8 <__assert_fail@plt+0x973c>
   1843c:	mov	r3, r0
   18440:	movw	r2, #54940	; 0xd69c
   18444:	movt	r2, #1
   18448:	mov	r0, #0
   1844c:	str	r6, [sp]
   18450:	mov	r1, r4
   18454:	bl	11000 <error@plt>
   18458:	movw	r3, #57632	; 0xe120
   1845c:	movt	r3, #2
   18460:	ldr	r0, [r3]
   18464:	bl	10f28 <_exit@plt>
   18468:	mov	r3, r6
   1846c:	movw	r2, #53428	; 0xd0b4
   18470:	movt	r2, #1
   18474:	ldr	r1, [r5]
   18478:	bl	11000 <error@plt>
   1847c:	b	18458 <__assert_fail@plt+0x72cc>
   18480:	b	10ef8 <posix_fadvise64@plt>
   18484:	cmp	r0, #0
   18488:	bxeq	lr
   1848c:	str	r4, [sp, #-16]!
   18490:	mov	r4, r1
   18494:	strd	r6, [sp, #4]
   18498:	mov	r6, #0
   1849c:	mov	r7, #0
   184a0:	str	lr, [sp, #12]
   184a4:	sub	sp, sp, #16
   184a8:	bl	110cc <fileno@plt>
   184ac:	mov	r2, r6
   184b0:	mov	r3, r7
   184b4:	strd	r6, [sp]
   184b8:	str	r4, [sp, #8]
   184bc:	bl	10ef8 <posix_fadvise64@plt>
   184c0:	add	sp, sp, #16
   184c4:	ldr	r4, [sp]
   184c8:	ldrd	r6, [sp, #4]
   184cc:	add	sp, sp, #12
   184d0:	pop	{pc}		; (ldr pc, [sp], #4)
   184d4:	strd	r4, [sp, #-12]!
   184d8:	mov	r4, r0
   184dc:	str	lr, [sp, #8]
   184e0:	sub	sp, sp, #12
   184e4:	bl	110cc <fileno@plt>
   184e8:	cmp	r0, #0
   184ec:	mov	r0, r4
   184f0:	blt	18574 <__assert_fail@plt+0x73e8>
   184f4:	bl	11024 <__freading@plt>
   184f8:	cmp	r0, #0
   184fc:	bne	18540 <__assert_fail@plt+0x73b4>
   18500:	mov	r0, r4
   18504:	bl	18588 <__assert_fail@plt+0x73fc>
   18508:	cmp	r0, #0
   1850c:	beq	18570 <__assert_fail@plt+0x73e4>
   18510:	bl	11090 <__errno_location@plt>
   18514:	mov	r5, r0
   18518:	mov	r0, r4
   1851c:	ldr	r4, [r5]
   18520:	bl	110e4 <fclose@plt>
   18524:	cmp	r4, #0
   18528:	mvnne	r0, #0
   1852c:	strne	r4, [r5]
   18530:	add	sp, sp, #12
   18534:	ldrd	r4, [sp]
   18538:	add	sp, sp, #8
   1853c:	pop	{pc}		; (ldr pc, [sp], #4)
   18540:	mov	r0, r4
   18544:	bl	110cc <fileno@plt>
   18548:	mov	r1, #1
   1854c:	mov	r2, #0
   18550:	mov	r3, #0
   18554:	str	r1, [sp]
   18558:	bl	10fc4 <lseek64@plt>
   1855c:	mvn	r3, #0
   18560:	mvn	r2, #0
   18564:	cmp	r1, r3
   18568:	cmpeq	r0, r2
   1856c:	bne	18500 <__assert_fail@plt+0x7374>
   18570:	mov	r0, r4
   18574:	add	sp, sp, #12
   18578:	ldrd	r4, [sp]
   1857c:	ldr	lr, [sp, #8]
   18580:	add	sp, sp, #12
   18584:	b	110e4 <fclose@plt>
   18588:	str	r4, [sp, #-8]!
   1858c:	subs	r4, r0, #0
   18590:	str	lr, [sp, #4]
   18594:	sub	sp, sp, #8
   18598:	beq	185b4 <__assert_fail@plt+0x7428>
   1859c:	bl	11024 <__freading@plt>
   185a0:	cmp	r0, #0
   185a4:	beq	185b4 <__assert_fail@plt+0x7428>
   185a8:	ldr	r3, [r4]
   185ac:	tst	r3, #256	; 0x100
   185b0:	bne	185cc <__assert_fail@plt+0x7440>
   185b4:	mov	r0, r4
   185b8:	add	sp, sp, #8
   185bc:	ldr	r4, [sp]
   185c0:	ldr	lr, [sp, #4]
   185c4:	add	sp, sp, #8
   185c8:	b	10f04 <fflush@plt>
   185cc:	mov	r1, #1
   185d0:	mov	r2, #0
   185d4:	mov	r3, #0
   185d8:	mov	r0, r4
   185dc:	str	r1, [sp]
   185e0:	bl	186f4 <__assert_fail@plt+0x7568>
   185e4:	b	185b4 <__assert_fail@plt+0x7428>
   185e8:	strd	r4, [sp, #-16]!
   185ec:	mov	r5, r1
   185f0:	str	r6, [sp, #8]
   185f4:	str	lr, [sp, #12]
   185f8:	bl	11144 <fopen64@plt>
   185fc:	subs	r4, r0, #0
   18600:	beq	18610 <__assert_fail@plt+0x7484>
   18604:	bl	110cc <fileno@plt>
   18608:	cmp	r0, #2
   1860c:	bls	18624 <__assert_fail@plt+0x7498>
   18610:	mov	r0, r4
   18614:	ldrd	r4, [sp]
   18618:	ldr	r6, [sp, #8]
   1861c:	add	sp, sp, #12
   18620:	pop	{pc}		; (ldr pc, [sp], #4)
   18624:	bl	1aacc <__assert_fail@plt+0x9940>
   18628:	subs	r6, r0, #0
   1862c:	blt	18674 <__assert_fail@plt+0x74e8>
   18630:	mov	r0, r4
   18634:	bl	184d4 <__assert_fail@plt+0x7348>
   18638:	cmp	r0, #0
   1863c:	bne	18654 <__assert_fail@plt+0x74c8>
   18640:	mov	r1, r5
   18644:	mov	r0, r6
   18648:	bl	10eb0 <fdopen@plt>
   1864c:	subs	r4, r0, #0
   18650:	bne	18610 <__assert_fail@plt+0x7484>
   18654:	bl	11090 <__errno_location@plt>
   18658:	mov	r5, r0
   1865c:	mov	r0, r6
   18660:	ldr	r6, [r5]
   18664:	mov	r4, #0
   18668:	bl	11174 <close@plt>
   1866c:	str	r6, [r5]
   18670:	b	18610 <__assert_fail@plt+0x7484>
   18674:	bl	11090 <__errno_location@plt>
   18678:	mov	r5, r0
   1867c:	mov	r0, r4
   18680:	ldr	r6, [r5]
   18684:	mov	r4, #0
   18688:	bl	184d4 <__assert_fail@plt+0x7348>
   1868c:	str	r6, [r5]
   18690:	b	18610 <__assert_fail@plt+0x7484>
   18694:	strd	r4, [sp, #-12]!
   18698:	mov	r5, r0
   1869c:	str	lr, [sp, #8]
   186a0:	sub	sp, sp, #12
   186a4:	bl	11090 <__errno_location@plt>
   186a8:	mov	r4, r0
   186ac:	mov	r2, #0
   186b0:	ldr	r3, [r4]
   186b4:	mov	r0, r5
   186b8:	str	r2, [r4]
   186bc:	str	r3, [sp]
   186c0:	str	r3, [sp, #4]
   186c4:	bl	10f10 <free@plt>
   186c8:	ldr	r3, [r4]
   186cc:	add	r2, sp, #8
   186d0:	clz	r3, r3
   186d4:	lsr	r3, r3, #5
   186d8:	add	r3, r2, r3, lsl #2
   186dc:	ldr	r3, [r3, #-8]
   186e0:	str	r3, [r4]
   186e4:	add	sp, sp, #12
   186e8:	ldrd	r4, [sp]
   186ec:	add	sp, sp, #8
   186f0:	pop	{pc}		; (ldr pc, [sp], #4)
   186f4:	strd	r4, [sp, #-24]!	; 0xffffffe8
   186f8:	mov	r4, r0
   186fc:	ldr	ip, [r0, #4]
   18700:	strd	r6, [sp, #8]
   18704:	str	lr, [sp, #20]
   18708:	ldr	lr, [r0, #8]
   1870c:	str	r8, [sp, #16]
   18710:	sub	sp, sp, #8
   18714:	ldr	r5, [sp, #32]
   18718:	cmp	lr, ip
   1871c:	beq	18744 <__assert_fail@plt+0x75b8>
   18720:	mov	r0, r4
   18724:	str	r5, [sp, #32]
   18728:	add	sp, sp, #8
   1872c:	ldrd	r4, [sp]
   18730:	ldrd	r6, [sp, #8]
   18734:	ldr	r8, [sp, #16]
   18738:	ldr	lr, [sp, #20]
   1873c:	add	sp, sp, #24
   18740:	b	110f0 <fseeko64@plt>
   18744:	ldr	ip, [r0, #16]
   18748:	ldr	lr, [r0, #20]
   1874c:	cmp	lr, ip
   18750:	bne	18720 <__assert_fail@plt+0x7594>
   18754:	ldr	r8, [r0, #36]	; 0x24
   18758:	cmp	r8, #0
   1875c:	bne	18720 <__assert_fail@plt+0x7594>
   18760:	mov	r6, r2
   18764:	mov	r7, r3
   18768:	bl	110cc <fileno@plt>
   1876c:	mov	r2, r6
   18770:	mov	r3, r7
   18774:	str	r5, [sp]
   18778:	bl	10fc4 <lseek64@plt>
   1877c:	mvn	r3, #0
   18780:	mvn	r2, #0
   18784:	cmp	r1, r3
   18788:	cmpeq	r0, r2
   1878c:	beq	187bc <__assert_fail@plt+0x7630>
   18790:	ldr	r3, [r4]
   18794:	strd	r0, [r4, #80]	; 0x50
   18798:	bic	r3, r3, #16
   1879c:	str	r3, [r4]
   187a0:	mov	r0, r8
   187a4:	add	sp, sp, #8
   187a8:	ldrd	r4, [sp]
   187ac:	ldrd	r6, [sp, #8]
   187b0:	ldr	r8, [sp, #16]
   187b4:	add	sp, sp, #20
   187b8:	pop	{pc}		; (ldr pc, [sp], #4)
   187bc:	mvn	r8, #0
   187c0:	b	187a0 <__assert_fail@plt+0x7614>
   187c4:	strd	r4, [sp, #-16]!
   187c8:	subs	r4, r0, #0
   187cc:	str	r6, [sp, #8]
   187d0:	str	lr, [sp, #12]
   187d4:	beq	1886c <__assert_fail@plt+0x76e0>
   187d8:	mov	r1, #47	; 0x2f
   187dc:	bl	11120 <strrchr@plt>
   187e0:	subs	r5, r0, #0
   187e4:	beq	18844 <__assert_fail@plt+0x76b8>
   187e8:	add	r6, r5, #1
   187ec:	sub	r3, r6, r4
   187f0:	cmp	r3, #6
   187f4:	ble	18844 <__assert_fail@plt+0x76b8>
   187f8:	movw	r1, #55004	; 0xd6dc
   187fc:	movt	r1, #1
   18800:	mov	r2, #7
   18804:	sub	r0, r5, #6
   18808:	bl	1115c <strncmp@plt>
   1880c:	cmp	r0, #0
   18810:	bne	18844 <__assert_fail@plt+0x76b8>
   18814:	movw	r1, #55012	; 0xd6e4
   18818:	movt	r1, #1
   1881c:	mov	r2, #3
   18820:	mov	r0, r6
   18824:	bl	1115c <strncmp@plt>
   18828:	cmp	r0, #0
   1882c:	movne	r4, r6
   18830:	bne	18844 <__assert_fail@plt+0x76b8>
   18834:	add	r4, r5, #4
   18838:	movw	r3, #57704	; 0xe168
   1883c:	movt	r3, #2
   18840:	str	r4, [r3]
   18844:	movw	r2, #57780	; 0xe1b4
   18848:	movt	r2, #2
   1884c:	ldr	r6, [sp, #8]
   18850:	movw	r3, #57708	; 0xe16c
   18854:	movt	r3, #2
   18858:	str	r4, [r2]
   1885c:	str	r4, [r3]
   18860:	ldrd	r4, [sp]
   18864:	add	sp, sp, #12
   18868:	pop	{pc}		; (ldr pc, [sp], #4)
   1886c:	movw	r3, #57720	; 0xe178
   18870:	movt	r3, #2
   18874:	movw	r0, #54948	; 0xd6a4
   18878:	movt	r0, #1
   1887c:	ldr	r3, [r3]
   18880:	mov	r2, #55	; 0x37
   18884:	mov	r1, #1
   18888:	bl	10fb8 <fwrite@plt>
   1888c:	bl	11168 <abort@plt>
   18890:	strd	r4, [sp, #-16]!
   18894:	mov	r4, #0
   18898:	mov	r5, #0
   1889c:	cmp	r1, #10
   188a0:	str	r6, [sp, #8]
   188a4:	strd	r4, [r0]
   188a8:	strd	r4, [r0, #8]
   188ac:	str	lr, [sp, #12]
   188b0:	strd	r4, [r0, #16]
   188b4:	strd	r4, [r0, #24]
   188b8:	strd	r4, [r0, #32]
   188bc:	strd	r4, [r0, #40]	; 0x28
   188c0:	beq	188d8 <__assert_fail@plt+0x774c>
   188c4:	ldrd	r4, [sp]
   188c8:	str	r1, [r0]
   188cc:	ldr	r6, [sp, #8]
   188d0:	add	sp, sp, #12
   188d4:	pop	{pc}		; (ldr pc, [sp], #4)
   188d8:	bl	11168 <abort@plt>
   188dc:	mov	r2, #5
   188e0:	strd	r4, [sp, #-16]!
   188e4:	mov	r5, r0
   188e8:	str	r6, [sp, #8]
   188ec:	mov	r6, r1
   188f0:	mov	r1, r0
   188f4:	mov	r0, #0
   188f8:	str	lr, [sp, #12]
   188fc:	bl	10f7c <dcgettext@plt>
   18900:	cmp	r5, r0
   18904:	mov	r4, r0
   18908:	beq	18920 <__assert_fail@plt+0x7794>
   1890c:	mov	r0, r4
   18910:	ldrd	r4, [sp]
   18914:	ldr	r6, [sp, #8]
   18918:	add	sp, sp, #12
   1891c:	pop	{pc}		; (ldr pc, [sp], #4)
   18920:	bl	1c394 <__assert_fail@plt+0xb208>
   18924:	ldrb	r3, [r0]
   18928:	bic	r3, r3, #32
   1892c:	cmp	r3, #85	; 0x55
   18930:	bne	18998 <__assert_fail@plt+0x780c>
   18934:	ldrb	r3, [r0, #1]
   18938:	bic	r3, r3, #32
   1893c:	cmp	r3, #84	; 0x54
   18940:	bne	18a18 <__assert_fail@plt+0x788c>
   18944:	ldrb	r3, [r0, #2]
   18948:	bic	r3, r3, #32
   1894c:	cmp	r3, #70	; 0x46
   18950:	bne	18a18 <__assert_fail@plt+0x788c>
   18954:	ldrb	r3, [r0, #3]
   18958:	cmp	r3, #45	; 0x2d
   1895c:	bne	18a18 <__assert_fail@plt+0x788c>
   18960:	ldrb	r3, [r0, #4]
   18964:	cmp	r3, #56	; 0x38
   18968:	bne	18a18 <__assert_fail@plt+0x788c>
   1896c:	ldrb	r3, [r0, #5]
   18970:	cmp	r3, #0
   18974:	bne	18a18 <__assert_fail@plt+0x788c>
   18978:	ldrb	r2, [r4]
   1897c:	movw	r3, #55104	; 0xd740
   18980:	movt	r3, #1
   18984:	movw	r4, #55116	; 0xd74c
   18988:	movt	r4, #1
   1898c:	cmp	r2, #96	; 0x60
   18990:	movne	r4, r3
   18994:	b	1890c <__assert_fail@plt+0x7780>
   18998:	cmp	r3, #71	; 0x47
   1899c:	bne	18a18 <__assert_fail@plt+0x788c>
   189a0:	ldrb	r3, [r0, #1]
   189a4:	bic	r3, r3, #32
   189a8:	cmp	r3, #66	; 0x42
   189ac:	bne	18a18 <__assert_fail@plt+0x788c>
   189b0:	ldrb	r3, [r0, #2]
   189b4:	cmp	r3, #49	; 0x31
   189b8:	bne	18a18 <__assert_fail@plt+0x788c>
   189bc:	ldrb	r3, [r0, #3]
   189c0:	cmp	r3, #56	; 0x38
   189c4:	bne	18a18 <__assert_fail@plt+0x788c>
   189c8:	ldrb	r3, [r0, #4]
   189cc:	cmp	r3, #48	; 0x30
   189d0:	bne	18a18 <__assert_fail@plt+0x788c>
   189d4:	ldrb	r3, [r0, #5]
   189d8:	cmp	r3, #51	; 0x33
   189dc:	bne	18a18 <__assert_fail@plt+0x788c>
   189e0:	ldrb	r3, [r0, #6]
   189e4:	cmp	r3, #48	; 0x30
   189e8:	bne	18a18 <__assert_fail@plt+0x788c>
   189ec:	ldrb	r3, [r0, #7]
   189f0:	cmp	r3, #0
   189f4:	bne	18a18 <__assert_fail@plt+0x788c>
   189f8:	ldrb	r2, [r4]
   189fc:	movw	r3, #55108	; 0xd744
   18a00:	movt	r3, #1
   18a04:	movw	r4, #55112	; 0xd748
   18a08:	movt	r4, #1
   18a0c:	cmp	r2, #96	; 0x60
   18a10:	movne	r4, r3
   18a14:	b	1890c <__assert_fail@plt+0x7780>
   18a18:	movw	r3, #55120	; 0xd750
   18a1c:	movt	r3, #1
   18a20:	cmp	r6, #9
   18a24:	movw	r4, #55100	; 0xd73c
   18a28:	movt	r4, #1
   18a2c:	movne	r4, r3
   18a30:	b	1890c <__assert_fail@plt+0x7780>
   18a34:	strd	r4, [sp, #-36]!	; 0xffffffdc
   18a38:	strd	r6, [sp, #8]
   18a3c:	strd	r8, [sp, #16]
   18a40:	strd	sl, [sp, #24]
   18a44:	mov	fp, r0
   18a48:	mov	sl, r1
   18a4c:	str	lr, [sp, #32]
   18a50:	sub	sp, sp, #116	; 0x74
   18a54:	ldr	r8, [sp, #152]	; 0x98
   18a58:	str	r3, [sp, #28]
   18a5c:	ldr	r3, [sp, #156]	; 0x9c
   18a60:	str	r2, [sp, #32]
   18a64:	and	r4, r3, #2
   18a68:	ubfx	r3, r3, #1, #1
   18a6c:	str	r3, [sp, #44]	; 0x2c
   18a70:	bl	10fd0 <__ctype_get_mb_cur_max@plt>
   18a74:	str	r0, [sp, #64]	; 0x40
   18a78:	cmp	r8, #10
   18a7c:	ldrls	pc, [pc, r8, lsl #2]
   18a80:	b	1a1f0 <__assert_fail@plt+0x9064>
   18a84:	andeq	r8, r1, r8, lsl #29
   18a88:	andeq	r8, r1, r4, lsr #30
   18a8c:	andeq	r9, r1, r0, lsl #10
   18a90:	andeq	r8, r1, r4, asr #30
   18a94:	andeq	r8, r1, ip, ror #27
   18a98:	andeq	r8, r1, r8, lsr lr
   18a9c:			; <UNDEFINED> instruction: 0x00018eb8
   18aa0:	strdeq	r8, [r1], -r4
   18aa4:			; <UNDEFINED> instruction: 0x00018ab0
   18aa8:			; <UNDEFINED> instruction: 0x00018ab0
   18aac:			; <UNDEFINED> instruction: 0x00018ab0
   18ab0:	cmp	r8, #10
   18ab4:	beq	18ae0 <__assert_fail@plt+0x7954>
   18ab8:	mov	r1, r8
   18abc:	movw	r0, #55124	; 0xd754
   18ac0:	movt	r0, #1
   18ac4:	bl	188dc <__assert_fail@plt+0x7750>
   18ac8:	mov	r1, r8
   18acc:	str	r0, [sp, #164]	; 0xa4
   18ad0:	movw	r0, #55120	; 0xd750
   18ad4:	movt	r0, #1
   18ad8:	bl	188dc <__assert_fail@plt+0x7750>
   18adc:	str	r0, [sp, #168]	; 0xa8
   18ae0:	cmp	r4, #0
   18ae4:	movne	r4, #0
   18ae8:	beq	19ecc <__assert_fail@plt+0x8d40>
   18aec:	mov	r3, #1
   18af0:	mov	r5, #0
   18af4:	ldr	r0, [sp, #168]	; 0xa8
   18af8:	str	r3, [sp, #36]	; 0x24
   18afc:	str	r3, [sp, #40]	; 0x28
   18b00:	str	r5, [sp, #68]	; 0x44
   18b04:	bl	11078 <strlen@plt>
   18b08:	ldr	r3, [sp, #168]	; 0xa8
   18b0c:	str	r5, [sp, #48]	; 0x30
   18b10:	str	r0, [sp, #56]	; 0x38
   18b14:	str	r3, [sp, #60]	; 0x3c
   18b18:	str	r5, [sp, #72]	; 0x48
   18b1c:	str	r8, [sp, #152]	; 0x98
   18b20:	mov	r8, fp
   18b24:	mov	r9, #0
   18b28:	ldr	fp, [sp, #152]	; 0x98
   18b2c:	ldr	r3, [sp, #28]
   18b30:	cmn	r3, #1
   18b34:	beq	19094 <__assert_fail@plt+0x7f08>
   18b38:	ldr	r3, [sp, #28]
   18b3c:	subs	r6, r3, r9
   18b40:	movne	r6, #1
   18b44:	cmp	r6, #0
   18b48:	beq	190ac <__assert_fail@plt+0x7f20>
   18b4c:	ldr	r0, [sp, #32]
   18b50:	ldr	r7, [sp, #40]	; 0x28
   18b54:	add	r3, r0, r9
   18b58:	cmp	fp, #2
   18b5c:	moveq	r7, #0
   18b60:	andne	r7, r7, #1
   18b64:	str	r3, [sp, #52]	; 0x34
   18b68:	cmp	r7, #0
   18b6c:	beq	19548 <__assert_fail@plt+0x83bc>
   18b70:	ldr	r2, [sp, #56]	; 0x38
   18b74:	cmp	r2, #0
   18b78:	beq	197e4 <__assert_fail@plt+0x8658>
   18b7c:	ldr	r1, [sp, #28]
   18b80:	cmp	r2, #1
   18b84:	mov	r3, r2
   18b88:	movls	r3, #0
   18b8c:	movhi	r3, #1
   18b90:	add	r5, r9, r2
   18b94:	cmn	r1, #1
   18b98:	movne	r3, #0
   18b9c:	cmp	r3, #0
   18ba0:	beq	18bac <__assert_fail@plt+0x7a20>
   18ba4:	bl	11078 <strlen@plt>
   18ba8:	str	r0, [sp, #28]
   18bac:	ldr	r3, [sp, #28]
   18bb0:	cmp	r5, r3
   18bb4:	bhi	197e4 <__assert_fail@plt+0x8658>
   18bb8:	ldr	r0, [sp, #52]	; 0x34
   18bbc:	ldr	r2, [sp, #56]	; 0x38
   18bc0:	ldr	r1, [sp, #60]	; 0x3c
   18bc4:	bl	10f64 <memcmp@plt>
   18bc8:	cmp	r0, #0
   18bcc:	bne	197e4 <__assert_fail@plt+0x8658>
   18bd0:	ldr	r3, [sp, #44]	; 0x2c
   18bd4:	cmp	r3, #0
   18bd8:	bne	1a114 <__assert_fail@plt+0x8f88>
   18bdc:	ldr	r3, [sp, #52]	; 0x34
   18be0:	ldrb	r5, [r3]
   18be4:	cmp	r5, #126	; 0x7e
   18be8:	ldrls	pc, [pc, r5, lsl #2]
   18bec:	b	194a4 <__assert_fail@plt+0x8318>
   18bf0:	andeq	r9, r1, r8, lsr #7
   18bf4:	andeq	r9, r1, r4, lsr #9
   18bf8:	andeq	r9, r1, r4, lsr #9
   18bfc:	andeq	r9, r1, r4, lsr #9
   18c00:	andeq	r9, r1, r4, lsr #9
   18c04:	andeq	r9, r1, r4, lsr #9
   18c08:	andeq	r9, r1, r4, lsr #9
   18c0c:	andeq	r9, r1, ip, ror r3
   18c10:	andeq	r9, r1, r4, ror r3
   18c14:			; <UNDEFINED> instruction: 0x000192bc
   18c18:	andeq	r9, r1, r8, ror #6
   18c1c:			; <UNDEFINED> instruction: 0x000192b4
   18c20:	andeq	r9, r1, r4, asr #6
   18c24:	muleq	r1, r0, r3
   18c28:	andeq	r9, r1, r4, lsr #9
   18c2c:	andeq	r9, r1, r4, lsr #9
   18c30:	andeq	r9, r1, r4, lsr #9
   18c34:	andeq	r9, r1, r4, lsr #9
   18c38:	andeq	r9, r1, r4, lsr #9
   18c3c:	andeq	r9, r1, r4, lsr #9
   18c40:	andeq	r9, r1, r4, lsr #9
   18c44:	andeq	r9, r1, r4, lsr #9
   18c48:	andeq	r9, r1, r4, lsr #9
   18c4c:	andeq	r9, r1, r4, lsr #9
   18c50:	andeq	r9, r1, r4, lsr #9
   18c54:	andeq	r9, r1, r4, lsr #9
   18c58:	andeq	r9, r1, r4, lsr #9
   18c5c:	andeq	r9, r1, r4, lsr #9
   18c60:	andeq	r9, r1, r4, lsr #9
   18c64:	andeq	r9, r1, r4, lsr #9
   18c68:	andeq	r9, r1, r4, lsr #9
   18c6c:	andeq	r9, r1, r4, lsr #9
   18c70:	andeq	r9, r1, r0, lsl #9
   18c74:	andeq	r9, r1, r8, lsl #7
   18c78:	andeq	r9, r1, r8, lsl #7
   18c7c:	andeq	r9, r1, r4, ror #8
   18c80:	andeq	r9, r1, r8, lsl #7
   18c84:	muleq	r1, r8, r4
   18c88:	andeq	r9, r1, r8, lsl #7
   18c8c:	andeq	r9, r1, r4, ror #3
   18c90:	andeq	r9, r1, r8, lsl #7
   18c94:	andeq	r9, r1, r8, lsl #7
   18c98:	andeq	r9, r1, r8, lsl #7
   18c9c:	muleq	r1, r8, r4
   18ca0:	muleq	r1, r8, r4
   18ca4:	muleq	r1, r8, r4
   18ca8:	muleq	r1, r8, r4
   18cac:	muleq	r1, r8, r4
   18cb0:	muleq	r1, r8, r4
   18cb4:	muleq	r1, r8, r4
   18cb8:	muleq	r1, r8, r4
   18cbc:	muleq	r1, r8, r4
   18cc0:	muleq	r1, r8, r4
   18cc4:	muleq	r1, r8, r4
   18cc8:	muleq	r1, r8, r4
   18ccc:	muleq	r1, r8, r4
   18cd0:	muleq	r1, r8, r4
   18cd4:	muleq	r1, r8, r4
   18cd8:	muleq	r1, r8, r4
   18cdc:	andeq	r9, r1, r8, lsl #7
   18ce0:	andeq	r9, r1, r8, lsl #7
   18ce4:	andeq	r9, r1, r8, lsl #7
   18ce8:	andeq	r9, r1, r8, lsl #7
   18cec:			; <UNDEFINED> instruction: 0x000191b8
   18cf0:	andeq	r9, r1, r4, lsr #9
   18cf4:	muleq	r1, r8, r4
   18cf8:	muleq	r1, r8, r4
   18cfc:	muleq	r1, r8, r4
   18d00:	muleq	r1, r8, r4
   18d04:	muleq	r1, r8, r4
   18d08:	muleq	r1, r8, r4
   18d0c:	muleq	r1, r8, r4
   18d10:	muleq	r1, r8, r4
   18d14:	muleq	r1, r8, r4
   18d18:	muleq	r1, r8, r4
   18d1c:	muleq	r1, r8, r4
   18d20:	muleq	r1, r8, r4
   18d24:	muleq	r1, r8, r4
   18d28:	muleq	r1, r8, r4
   18d2c:	muleq	r1, r8, r4
   18d30:	muleq	r1, r8, r4
   18d34:	muleq	r1, r8, r4
   18d38:	muleq	r1, r8, r4
   18d3c:	muleq	r1, r8, r4
   18d40:	muleq	r1, r8, r4
   18d44:	muleq	r1, r8, r4
   18d48:	muleq	r1, r8, r4
   18d4c:	muleq	r1, r8, r4
   18d50:	muleq	r1, r8, r4
   18d54:	muleq	r1, r8, r4
   18d58:	muleq	r1, r8, r4
   18d5c:	andeq	r9, r1, r8, lsl #7
   18d60:	andeq	r9, r1, r0, ror #2
   18d64:	muleq	r1, r8, r4
   18d68:	andeq	r9, r1, r8, lsl #7
   18d6c:	muleq	r1, r8, r4
   18d70:	andeq	r9, r1, r8, lsl #7
   18d74:	muleq	r1, r8, r4
   18d78:	muleq	r1, r8, r4
   18d7c:	muleq	r1, r8, r4
   18d80:	muleq	r1, r8, r4
   18d84:	muleq	r1, r8, r4
   18d88:	muleq	r1, r8, r4
   18d8c:	muleq	r1, r8, r4
   18d90:	muleq	r1, r8, r4
   18d94:	muleq	r1, r8, r4
   18d98:	muleq	r1, r8, r4
   18d9c:	muleq	r1, r8, r4
   18da0:	muleq	r1, r8, r4
   18da4:	muleq	r1, r8, r4
   18da8:	muleq	r1, r8, r4
   18dac:	muleq	r1, r8, r4
   18db0:	muleq	r1, r8, r4
   18db4:	muleq	r1, r8, r4
   18db8:	muleq	r1, r8, r4
   18dbc:	muleq	r1, r8, r4
   18dc0:	muleq	r1, r8, r4
   18dc4:	muleq	r1, r8, r4
   18dc8:	muleq	r1, r8, r4
   18dcc:	muleq	r1, r8, r4
   18dd0:	muleq	r1, r8, r4
   18dd4:	muleq	r1, r8, r4
   18dd8:	muleq	r1, r8, r4
   18ddc:	andeq	r8, r1, r4, lsl #31
   18de0:	andeq	r9, r1, r8, lsl #7
   18de4:	andeq	r8, r1, r4, lsl #31
   18de8:	andeq	r9, r1, r4, ror #8
   18dec:	cmp	r4, #0
   18df0:	moveq	r3, #1
   18df4:	streq	r3, [sp, #40]	; 0x28
   18df8:	beq	1950c <__assert_fail@plt+0x8380>
   18dfc:	mov	r3, #0
   18e00:	mov	r2, #1
   18e04:	mov	r4, r3
   18e08:	str	r2, [sp, #36]	; 0x24
   18e0c:	str	r2, [sp, #44]	; 0x2c
   18e10:	str	r2, [sp, #56]	; 0x38
   18e14:	str	r3, [sp, #68]	; 0x44
   18e18:	movw	r3, #55120	; 0xd750
   18e1c:	movt	r3, #1
   18e20:	str	r4, [sp, #40]	; 0x28
   18e24:	mov	r8, #2
   18e28:	str	r4, [sp, #48]	; 0x30
   18e2c:	str	r3, [sp, #60]	; 0x3c
   18e30:	str	r4, [sp, #72]	; 0x48
   18e34:	b	18b1c <__assert_fail@plt+0x7990>
   18e38:	cmp	r4, #0
   18e3c:	bne	1a088 <__assert_fail@plt+0x8efc>
   18e40:	cmp	sl, #0
   18e44:	beq	19e48 <__assert_fail@plt+0x8cbc>
   18e48:	mov	r3, #34	; 0x22
   18e4c:	mov	r1, r4
   18e50:	mov	r2, #1
   18e54:	strb	r3, [fp]
   18e58:	movw	r3, #55100	; 0xd73c
   18e5c:	movt	r3, #1
   18e60:	mov	r4, r2
   18e64:	str	r2, [sp, #36]	; 0x24
   18e68:	str	r2, [sp, #40]	; 0x28
   18e6c:	str	r1, [sp, #44]	; 0x2c
   18e70:	str	r1, [sp, #48]	; 0x30
   18e74:	str	r2, [sp, #56]	; 0x38
   18e78:	str	r3, [sp, #60]	; 0x3c
   18e7c:	str	r1, [sp, #68]	; 0x44
   18e80:	str	r1, [sp, #72]	; 0x48
   18e84:	b	18b1c <__assert_fail@plt+0x7990>
   18e88:	mov	r3, #0
   18e8c:	mov	r4, r8
   18e90:	str	r3, [sp, #40]	; 0x28
   18e94:	str	r3, [sp, #44]	; 0x2c
   18e98:	str	r3, [sp, #48]	; 0x30
   18e9c:	str	r8, [sp, #56]	; 0x38
   18ea0:	str	r3, [sp, #60]	; 0x3c
   18ea4:	str	r3, [sp, #68]	; 0x44
   18ea8:	mov	r3, #1
   18eac:	str	r3, [sp, #36]	; 0x24
   18eb0:	str	r8, [sp, #72]	; 0x48
   18eb4:	b	18b1c <__assert_fail@plt+0x7990>
   18eb8:	mov	r3, #1
   18ebc:	mov	r2, #0
   18ec0:	mov	r4, r2
   18ec4:	mov	r8, #5
   18ec8:	str	r3, [sp, #36]	; 0x24
   18ecc:	str	r3, [sp, #40]	; 0x28
   18ed0:	str	r3, [sp, #44]	; 0x2c
   18ed4:	str	r2, [sp, #48]	; 0x30
   18ed8:	str	r3, [sp, #56]	; 0x38
   18edc:	movw	r3, #55100	; 0xd73c
   18ee0:	movt	r3, #1
   18ee4:	str	r3, [sp, #60]	; 0x3c
   18ee8:	str	r2, [sp, #68]	; 0x44
   18eec:	str	r2, [sp, #72]	; 0x48
   18ef0:	b	18b1c <__assert_fail@plt+0x7990>
   18ef4:	mov	r3, #0
   18ef8:	mov	r2, #1
   18efc:	mov	r4, r3
   18f00:	str	r2, [sp, #36]	; 0x24
   18f04:	str	r2, [sp, #40]	; 0x28
   18f08:	str	r3, [sp, #44]	; 0x2c
   18f0c:	str	r3, [sp, #48]	; 0x30
   18f10:	str	r3, [sp, #56]	; 0x38
   18f14:	str	r3, [sp, #60]	; 0x3c
   18f18:	str	r3, [sp, #68]	; 0x44
   18f1c:	str	r3, [sp, #72]	; 0x48
   18f20:	b	18b1c <__assert_fail@plt+0x7990>
   18f24:	mov	r2, #1
   18f28:	mov	r3, #0
   18f2c:	mov	r4, r3
   18f30:	str	r2, [sp, #36]	; 0x24
   18f34:	str	r2, [sp, #44]	; 0x2c
   18f38:	str	r8, [sp, #56]	; 0x38
   18f3c:	str	r3, [sp, #68]	; 0x44
   18f40:	b	18e18 <__assert_fail@plt+0x7c8c>
   18f44:	mov	r3, #1
   18f48:	mov	r2, #0
   18f4c:	mov	r4, r2
   18f50:	mov	r8, #2
   18f54:	str	r3, [sp, #36]	; 0x24
   18f58:	str	r3, [sp, #40]	; 0x28
   18f5c:	str	r3, [sp, #44]	; 0x2c
   18f60:	str	r2, [sp, #48]	; 0x30
   18f64:	str	r3, [sp, #56]	; 0x38
   18f68:	movw	r3, #55120	; 0xd750
   18f6c:	movt	r3, #1
   18f70:	str	r3, [sp, #60]	; 0x3c
   18f74:	str	r2, [sp, #68]	; 0x44
   18f78:	str	r2, [sp, #72]	; 0x48
   18f7c:	b	18b1c <__assert_fail@plt+0x7990>
   18f80:	mov	r7, #0
   18f84:	ldr	r3, [sp, #28]
   18f88:	cmn	r3, #1
   18f8c:	beq	19a64 <__assert_fail@plt+0x88d8>
   18f90:	ldr	r3, [sp, #28]
   18f94:	subs	r2, r3, #1
   18f98:	movne	r2, #1
   18f9c:	sub	r3, fp, #2
   18fa0:	cmp	r2, #0
   18fa4:	clz	r3, r3
   18fa8:	lsr	r3, r3, #5
   18fac:	bne	18fb8 <__assert_fail@plt+0x7e2c>
   18fb0:	cmp	r9, #0
   18fb4:	beq	197c4 <__assert_fail@plt+0x8638>
   18fb8:	mov	r6, #0
   18fbc:	ldr	r2, [sp, #40]	; 0x28
   18fc0:	eor	r2, r2, #1
   18fc4:	orrs	r3, r3, r2
   18fc8:	bne	191a0 <__assert_fail@plt+0x8014>
   18fcc:	ldr	r2, [sp, #160]	; 0xa0
   18fd0:	cmp	r2, #0
   18fd4:	beq	18ff4 <__assert_fail@plt+0x7e68>
   18fd8:	ldr	r0, [sp, #160]	; 0xa0
   18fdc:	ubfx	r1, r5, #5, #8
   18fe0:	and	r2, r5, #31
   18fe4:	ldr	r1, [r0, r1, lsl #2]
   18fe8:	lsr	r2, r1, r2
   18fec:	tst	r2, #1
   18ff0:	bne	18ffc <__assert_fail@plt+0x7e70>
   18ff4:	cmp	r7, #0
   18ff8:	beq	1926c <__assert_fail@plt+0x80e0>
   18ffc:	ldr	r2, [sp, #44]	; 0x2c
   19000:	sub	r3, fp, #2
   19004:	clz	r3, r3
   19008:	lsr	r3, r3, #5
   1900c:	cmp	r2, #0
   19010:	bne	19db8 <__assert_fail@plt+0x8c2c>
   19014:	ldr	r2, [sp, #48]	; 0x30
   19018:	eor	r2, r2, #1
   1901c:	ands	r3, r3, r2
   19020:	beq	19058 <__assert_fail@plt+0x7ecc>
   19024:	cmp	sl, r4
   19028:	str	r3, [sp, #48]	; 0x30
   1902c:	movhi	r2, #39	; 0x27
   19030:	strbhi	r2, [r8, r4]
   19034:	add	r2, r4, #1
   19038:	cmp	sl, r2
   1903c:	movhi	r1, #36	; 0x24
   19040:	strbhi	r1, [r8, r2]
   19044:	add	r2, r4, #2
   19048:	add	r4, r4, #3
   1904c:	cmp	sl, r2
   19050:	movhi	r1, #39	; 0x27
   19054:	strbhi	r1, [r8, r2]
   19058:	cmp	r4, sl
   1905c:	add	r9, r9, #1
   19060:	movcc	r3, #92	; 0x5c
   19064:	strbcc	r3, [r8, r4]
   19068:	add	r4, r4, #1
   1906c:	cmp	r4, sl
   19070:	ldr	r3, [sp, #36]	; 0x24
   19074:	strbcc	r5, [r8, r4]
   19078:	cmp	r6, #0
   1907c:	add	r4, r4, #1
   19080:	moveq	r3, #0
   19084:	str	r3, [sp, #36]	; 0x24
   19088:	ldr	r3, [sp, #28]
   1908c:	cmn	r3, #1
   19090:	bne	18b38 <__assert_fail@plt+0x79ac>
   19094:	ldr	r3, [sp, #32]
   19098:	ldrb	r6, [r3, r9]
   1909c:	adds	r6, r6, #0
   190a0:	movne	r6, #1
   190a4:	cmp	r6, #0
   190a8:	bne	18b4c <__assert_fail@plt+0x79c0>
   190ac:	str	fp, [sp, #152]	; 0x98
   190b0:	mov	fp, r8
   190b4:	cmp	r4, #0
   190b8:	ldr	r1, [sp, #44]	; 0x2c
   190bc:	movne	r3, #0
   190c0:	ldr	r8, [sp, #152]	; 0x98
   190c4:	sub	r2, r8, #2
   190c8:	clz	r2, r2
   190cc:	lsr	r2, r2, #5
   190d0:	andeq	r3, r2, r1
   190d4:	cmp	r3, #0
   190d8:	bne	1a194 <__assert_fail@plt+0x9008>
   190dc:	eor	r3, r1, #1
   190e0:	ands	r2, r2, r3
   190e4:	beq	1a0c0 <__assert_fail@plt+0x8f34>
   190e8:	ldr	r3, [sp, #68]	; 0x44
   190ec:	cmp	r3, #0
   190f0:	beq	1a0c4 <__assert_fail@plt+0x8f38>
   190f4:	ldr	r3, [sp, #36]	; 0x24
   190f8:	cmp	r3, #0
   190fc:	bne	1a150 <__assert_fail@plt+0x8fc4>
   19100:	ldr	r3, [sp, #72]	; 0x48
   19104:	adds	r3, r3, #0
   19108:	movne	r3, #1
   1910c:	cmp	sl, #0
   19110:	movne	r3, #0
   19114:	cmp	r3, #0
   19118:	ldreq	r2, [sp, #68]	; 0x44
   1911c:	beq	1a0c4 <__assert_fail@plt+0x8f38>
   19120:	ldr	r2, [sp, #72]	; 0x48
   19124:	str	r3, [sp, #68]	; 0x44
   19128:	movw	r3, #55120	; 0xd750
   1912c:	movt	r3, #1
   19130:	mov	r1, #39	; 0x27
   19134:	mov	r4, #1
   19138:	ldr	sl, [sp, #72]	; 0x48
   1913c:	mov	r8, #2
   19140:	str	r3, [sp, #60]	; 0x3c
   19144:	mov	r3, #0
   19148:	strb	r1, [fp]
   1914c:	str	r3, [sp, #44]	; 0x2c
   19150:	str	r4, [sp, #56]	; 0x38
   19154:	str	r2, [sp, #72]	; 0x48
   19158:	b	18b1c <__assert_fail@plt+0x7990>
   1915c:	mov	r7, #0
   19160:	cmp	fp, #2
   19164:	beq	19a44 <__assert_fail@plt+0x88b8>
   19168:	ldr	r2, [sp, #40]	; 0x28
   1916c:	ldr	r3, [sp, #56]	; 0x38
   19170:	ldr	r1, [sp, #44]	; 0x2c
   19174:	cmp	r3, #0
   19178:	moveq	r3, #0
   1917c:	andne	r3, r2, r1
   19180:	cmp	r3, #0
   19184:	moveq	r5, #92	; 0x5c
   19188:	moveq	r3, r5
   1918c:	bne	19a50 <__assert_fail@plt+0x88c4>
   19190:	ldr	r2, [sp, #40]	; 0x28
   19194:	cmp	r2, #0
   19198:	bne	19e8c <__assert_fail@plt+0x8d00>
   1919c:	mov	r6, #0
   191a0:	ldr	r3, [sp, #44]	; 0x2c
   191a4:	cmp	r3, #0
   191a8:	beq	19a3c <__assert_fail@plt+0x88b0>
   191ac:	mov	r3, #0
   191b0:	b	18fcc <__assert_fail@plt+0x7e40>
   191b4:	mov	r7, #0
   191b8:	cmp	fp, #2
   191bc:	beq	19ab4 <__assert_fail@plt+0x8928>
   191c0:	cmp	fp, #5
   191c4:	beq	19a78 <__assert_fail@plt+0x88ec>
   191c8:	sub	r3, fp, #2
   191cc:	mov	r6, #0
   191d0:	clz	r3, r3
   191d4:	mov	r5, #63	; 0x3f
   191d8:	lsr	r3, r3, #5
   191dc:	b	18fbc <__assert_fail@plt+0x7e30>
   191e0:	mov	r7, #0
   191e4:	cmp	fp, #2
   191e8:	movne	r3, #0
   191ec:	movne	r5, #39	; 0x27
   191f0:	strne	r6, [sp, #68]	; 0x44
   191f4:	bne	18fbc <__assert_fail@plt+0x7e30>
   191f8:	ldr	r3, [sp, #44]	; 0x2c
   191fc:	cmp	r3, #0
   19200:	bne	19ebc <__assert_fail@plt+0x8d30>
   19204:	ldr	r3, [sp, #72]	; 0x48
   19208:	cmp	sl, #0
   1920c:	clz	r3, r3
   19210:	lsr	r3, r3, #5
   19214:	moveq	r3, #0
   19218:	cmp	r3, #0
   1921c:	bne	19de8 <__assert_fail@plt+0x8c5c>
   19220:	cmp	sl, r4
   19224:	movhi	r3, #39	; 0x27
   19228:	strbhi	r3, [r8, r4]
   1922c:	add	r3, r4, #1
   19230:	cmp	sl, r3
   19234:	movhi	r2, #92	; 0x5c
   19238:	strbhi	r2, [r8, r3]
   1923c:	add	r3, r4, #2
   19240:	cmp	sl, r3
   19244:	bls	19250 <__assert_fail@plt+0x80c4>
   19248:	mov	r2, #39	; 0x27
   1924c:	strb	r2, [r8, r3]
   19250:	mov	r3, #0
   19254:	cmp	r7, #0
   19258:	add	r4, r4, #3
   1925c:	mov	r5, #39	; 0x27
   19260:	str	r3, [sp, #48]	; 0x30
   19264:	str	r6, [sp, #68]	; 0x44
   19268:	bne	18ffc <__assert_fail@plt+0x7e70>
   1926c:	ldr	r2, [sp, #48]	; 0x30
   19270:	eor	r3, r3, #1
   19274:	add	r9, r9, #1
   19278:	and	r3, r3, r2
   1927c:	uxtb	r3, r3
   19280:	cmp	r3, #0
   19284:	beq	1906c <__assert_fail@plt+0x7ee0>
   19288:	cmp	sl, r4
   1928c:	movhi	r3, #39	; 0x27
   19290:	strbhi	r3, [r8, r4]
   19294:	add	r3, r4, #1
   19298:	add	r4, r4, #2
   1929c:	cmp	sl, r3
   192a0:	movhi	r2, #39	; 0x27
   192a4:	strbhi	r2, [r8, r3]
   192a8:	mov	r3, #0
   192ac:	str	r3, [sp, #48]	; 0x30
   192b0:	b	1906c <__assert_fail@plt+0x7ee0>
   192b4:	mov	r3, #118	; 0x76
   192b8:	b	19190 <__assert_fail@plt+0x8004>
   192bc:	mov	r3, #116	; 0x74
   192c0:	ldr	r2, [sp, #44]	; 0x2c
   192c4:	cmp	fp, #2
   192c8:	movne	r2, #0
   192cc:	andeq	r2, r2, #1
   192d0:	cmp	r2, #0
   192d4:	beq	19190 <__assert_fail@plt+0x8004>
   192d8:	mov	fp, r8
   192dc:	mov	r8, #2
   192e0:	ldr	r3, [sp, #40]	; 0x28
   192e4:	cmp	r3, #0
   192e8:	movne	r8, #4
   192ec:	mov	lr, #0
   192f0:	mov	r0, fp
   192f4:	ldr	r2, [sp, #32]
   192f8:	ldr	r3, [sp, #156]	; 0x9c
   192fc:	ldr	r1, [sp, #164]	; 0xa4
   19300:	bic	ip, r3, #2
   19304:	ldr	r3, [sp, #28]
   19308:	stm	sp, {r8, ip, lr}
   1930c:	ldr	ip, [sp, #168]	; 0xa8
   19310:	str	r1, [sp, #12]
   19314:	mov	r1, sl
   19318:	str	ip, [sp, #16]
   1931c:	bl	18a34 <__assert_fail@plt+0x78a8>
   19320:	mov	r4, r0
   19324:	mov	r0, r4
   19328:	add	sp, sp, #116	; 0x74
   1932c:	ldrd	r4, [sp]
   19330:	ldrd	r6, [sp, #8]
   19334:	ldrd	r8, [sp, #16]
   19338:	ldrd	sl, [sp, #24]
   1933c:	add	sp, sp, #32
   19340:	pop	{pc}		; (ldr pc, [sp], #4)
   19344:	mov	r5, #102	; 0x66
   19348:	ldr	r2, [sp, #44]	; 0x2c
   1934c:	sub	r3, fp, #2
   19350:	clz	r3, r3
   19354:	lsr	r3, r3, #5
   19358:	cmp	r2, #0
   1935c:	bne	19db8 <__assert_fail@plt+0x8c2c>
   19360:	mov	r6, r2
   19364:	b	19058 <__assert_fail@plt+0x7ecc>
   19368:	mov	r5, #110	; 0x6e
   1936c:	mov	r6, #0
   19370:	b	18ffc <__assert_fail@plt+0x7e70>
   19374:	mov	r5, #98	; 0x62
   19378:	b	19348 <__assert_fail@plt+0x81bc>
   1937c:	mov	r5, #97	; 0x61
   19380:	b	19348 <__assert_fail@plt+0x81bc>
   19384:	mov	r7, #0
   19388:	mov	r6, #0
   1938c:	b	191ac <__assert_fail@plt+0x8020>
   19390:	mov	r5, #114	; 0x72
   19394:	b	1936c <__assert_fail@plt+0x81e0>
   19398:	ldr	r3, [sp, #44]	; 0x2c
   1939c:	cmp	r3, #0
   193a0:	bne	1a130 <__assert_fail@plt+0x8fa4>
   193a4:	mov	r7, r3
   193a8:	ldr	r3, [sp, #48]	; 0x30
   193ac:	sub	r2, fp, #2
   193b0:	clz	r2, r2
   193b4:	lsr	r2, r2, #5
   193b8:	eor	r3, r3, #1
   193bc:	ands	r3, r2, r3
   193c0:	beq	19dd4 <__assert_fail@plt+0x8c48>
   193c4:	cmp	sl, r4
   193c8:	movhi	r1, #39	; 0x27
   193cc:	strbhi	r1, [r8, r4]
   193d0:	add	r1, r4, #1
   193d4:	cmp	sl, r1
   193d8:	movhi	r0, #36	; 0x24
   193dc:	strbhi	r0, [r8, r1]
   193e0:	add	r1, r4, #2
   193e4:	cmp	sl, r1
   193e8:	movhi	r0, #39	; 0x27
   193ec:	strbhi	r0, [r8, r1]
   193f0:	add	r1, r4, #3
   193f4:	cmp	sl, r1
   193f8:	bls	19e2c <__assert_fail@plt+0x8ca0>
   193fc:	mov	r4, r1
   19400:	mov	r1, #92	; 0x5c
   19404:	mov	r0, r4
   19408:	str	r3, [sp, #48]	; 0x30
   1940c:	strb	r1, [r8, r4]
   19410:	cmp	fp, #2
   19414:	add	r4, r4, #1
   19418:	beq	19e7c <__assert_fail@plt+0x8cf0>
   1941c:	ldr	r1, [sp, #28]
   19420:	add	r3, r9, #1
   19424:	cmp	r3, r1
   19428:	bcs	19440 <__assert_fail@plt+0x82b4>
   1942c:	ldr	r1, [sp, #32]
   19430:	ldrb	r3, [r1, r3]
   19434:	sub	r3, r3, #48	; 0x30
   19438:	cmp	r3, #9
   1943c:	bls	19e94 <__assert_fail@plt+0x8d08>
   19440:	mov	r5, #48	; 0x30
   19444:	ldr	r3, [sp, #40]	; 0x28
   19448:	eor	r3, r3, #1
   1944c:	orrs	r2, r2, r3
   19450:	mov	r3, r6
   19454:	moveq	r6, r2
   19458:	beq	18fcc <__assert_fail@plt+0x7e40>
   1945c:	mov	r6, #0
   19460:	b	18ff4 <__assert_fail@plt+0x7e68>
   19464:	cmp	r9, #0
   19468:	mov	r2, r7
   1946c:	bne	19a0c <__assert_fail@plt+0x8880>
   19470:	mov	r6, r7
   19474:	mov	r3, r9
   19478:	mov	r7, r2
   1947c:	b	18fbc <__assert_fail@plt+0x7e30>
   19480:	mov	r2, r7
   19484:	mov	r6, r7
   19488:	mov	r3, #0
   1948c:	mov	r7, r2
   19490:	mov	r5, #32
   19494:	b	18fbc <__assert_fail@plt+0x7e30>
   19498:	mov	r6, r7
   1949c:	b	191ac <__assert_fail@plt+0x8020>
   194a0:	mov	r7, #0
   194a4:	ldr	r3, [sp, #64]	; 0x40
   194a8:	cmp	r3, #1
   194ac:	bne	19acc <__assert_fail@plt+0x8940>
   194b0:	bl	11054 <__ctype_b_loc@plt>
   194b4:	ldr	r2, [r0]
   194b8:	sxth	r3, r5
   194bc:	lsl	r3, r3, #1
   194c0:	ldr	r1, [sp, #64]	; 0x40
   194c4:	ldrh	r3, [r2, r3]
   194c8:	mov	ip, r1
   194cc:	and	r3, r3, #16384	; 0x4000
   194d0:	cmp	r3, #0
   194d4:	ldr	r3, [sp, #40]	; 0x28
   194d8:	movne	r6, #1
   194dc:	moveq	r6, #0
   194e0:	movne	r2, #0
   194e4:	andeq	r2, r3, #1
   194e8:	cmp	r2, #0
   194ec:	bne	19e14 <__assert_fail@plt+0x8c88>
   194f0:	sub	r3, fp, #2
   194f4:	clz	r3, r3
   194f8:	lsr	r3, r3, #5
   194fc:	b	18fbc <__assert_fail@plt+0x7e30>
   19500:	cmp	r4, #0
   19504:	bne	1a1a4 <__assert_fail@plt+0x9018>
   19508:	str	r4, [sp, #40]	; 0x28
   1950c:	cmp	sl, #0
   19510:	bne	1a1d4 <__assert_fail@plt+0x9048>
   19514:	mov	r3, #1
   19518:	movw	r2, #55120	; 0xd750
   1951c:	movt	r2, #1
   19520:	mov	r4, r3
   19524:	mov	r8, #2
   19528:	str	r3, [sp, #36]	; 0x24
   1952c:	str	sl, [sp, #44]	; 0x2c
   19530:	str	sl, [sp, #48]	; 0x30
   19534:	str	r3, [sp, #56]	; 0x38
   19538:	str	r2, [sp, #60]	; 0x3c
   1953c:	str	sl, [sp, #68]	; 0x44
   19540:	str	sl, [sp, #72]	; 0x48
   19544:	b	18b1c <__assert_fail@plt+0x7990>
   19548:	ldr	r3, [sp, #32]
   1954c:	ldrb	r5, [r3, r9]
   19550:	cmp	r5, #126	; 0x7e
   19554:	ldrls	pc, [pc, r5, lsl #2]
   19558:	b	194a4 <__assert_fail@plt+0x8318>
   1955c:	andeq	r9, r1, r0, lsl #15
   19560:	andeq	r9, r1, r4, lsr #9
   19564:	andeq	r9, r1, r4, lsr #9
   19568:	andeq	r9, r1, r4, lsr #9
   1956c:	andeq	r9, r1, r4, lsr #9
   19570:	andeq	r9, r1, r4, lsr #9
   19574:	andeq	r9, r1, r4, lsr #9
   19578:	andeq	r9, r1, r8, ror r7
   1957c:	andeq	r9, r1, r0, ror r7
   19580:			; <UNDEFINED> instruction: 0x000192bc
   19584:	andeq	r9, r1, r8, ror #14
   19588:			; <UNDEFINED> instruction: 0x000192b4
   1958c:	andeq	r9, r1, r0, ror #14
   19590:	andeq	r9, r1, r8, asr r7
   19594:	andeq	r9, r1, r4, lsr #9
   19598:	andeq	r9, r1, r4, lsr #9
   1959c:	andeq	r9, r1, r4, lsr #9
   195a0:	andeq	r9, r1, r4, lsr #9
   195a4:	andeq	r9, r1, r4, lsr #9
   195a8:	andeq	r9, r1, r4, lsr #9
   195ac:	andeq	r9, r1, r4, lsr #9
   195b0:	andeq	r9, r1, r4, lsr #9
   195b4:	andeq	r9, r1, r4, lsr #9
   195b8:	andeq	r9, r1, r4, lsr #9
   195bc:	andeq	r9, r1, r4, lsr #9
   195c0:	andeq	r9, r1, r4, lsr #9
   195c4:	andeq	r9, r1, r4, lsr #9
   195c8:	andeq	r9, r1, r4, lsr #9
   195cc:	andeq	r9, r1, r4, lsr #9
   195d0:	andeq	r9, r1, r4, lsr #9
   195d4:	andeq	r9, r1, r4, lsr #9
   195d8:	andeq	r9, r1, r4, lsr #9
   195dc:	ldrdeq	r9, [r1], -r4
   195e0:			; <UNDEFINED> instruction: 0x000197b4
   195e4:			; <UNDEFINED> instruction: 0x000197b4
   195e8:	andeq	r9, r1, r4, lsr #15
   195ec:			; <UNDEFINED> instruction: 0x000197b4
   195f0:	strdeq	r9, [r1], -r0
   195f4:			; <UNDEFINED> instruction: 0x000197b4
   195f8:	andeq	r9, r1, r4, ror #3
   195fc:			; <UNDEFINED> instruction: 0x000197b4
   19600:			; <UNDEFINED> instruction: 0x000197b4
   19604:			; <UNDEFINED> instruction: 0x000197b4
   19608:	strdeq	r9, [r1], -r0
   1960c:	strdeq	r9, [r1], -r0
   19610:	strdeq	r9, [r1], -r0
   19614:	strdeq	r9, [r1], -r0
   19618:	strdeq	r9, [r1], -r0
   1961c:	strdeq	r9, [r1], -r0
   19620:	strdeq	r9, [r1], -r0
   19624:	strdeq	r9, [r1], -r0
   19628:	strdeq	r9, [r1], -r0
   1962c:	strdeq	r9, [r1], -r0
   19630:	strdeq	r9, [r1], -r0
   19634:	strdeq	r9, [r1], -r0
   19638:	strdeq	r9, [r1], -r0
   1963c:	strdeq	r9, [r1], -r0
   19640:	strdeq	r9, [r1], -r0
   19644:	strdeq	r9, [r1], -r0
   19648:			; <UNDEFINED> instruction: 0x000197b4
   1964c:			; <UNDEFINED> instruction: 0x000197b4
   19650:			; <UNDEFINED> instruction: 0x000197b4
   19654:			; <UNDEFINED> instruction: 0x000197b4
   19658:			; <UNDEFINED> instruction: 0x000191b8
   1965c:	andeq	r9, r1, r4, lsr #9
   19660:	strdeq	r9, [r1], -r0
   19664:	strdeq	r9, [r1], -r0
   19668:	strdeq	r9, [r1], -r0
   1966c:	strdeq	r9, [r1], -r0
   19670:	strdeq	r9, [r1], -r0
   19674:	strdeq	r9, [r1], -r0
   19678:	strdeq	r9, [r1], -r0
   1967c:	strdeq	r9, [r1], -r0
   19680:	strdeq	r9, [r1], -r0
   19684:	strdeq	r9, [r1], -r0
   19688:	strdeq	r9, [r1], -r0
   1968c:	strdeq	r9, [r1], -r0
   19690:	strdeq	r9, [r1], -r0
   19694:	strdeq	r9, [r1], -r0
   19698:	strdeq	r9, [r1], -r0
   1969c:	strdeq	r9, [r1], -r0
   196a0:	strdeq	r9, [r1], -r0
   196a4:	strdeq	r9, [r1], -r0
   196a8:	strdeq	r9, [r1], -r0
   196ac:	strdeq	r9, [r1], -r0
   196b0:	strdeq	r9, [r1], -r0
   196b4:	strdeq	r9, [r1], -r0
   196b8:	strdeq	r9, [r1], -r0
   196bc:	strdeq	r9, [r1], -r0
   196c0:	strdeq	r9, [r1], -r0
   196c4:	strdeq	r9, [r1], -r0
   196c8:			; <UNDEFINED> instruction: 0x000197b4
   196cc:	andeq	r9, r1, r0, ror #2
   196d0:	strdeq	r9, [r1], -r0
   196d4:			; <UNDEFINED> instruction: 0x000197b4
   196d8:	strdeq	r9, [r1], -r0
   196dc:			; <UNDEFINED> instruction: 0x000197b4
   196e0:	strdeq	r9, [r1], -r0
   196e4:	strdeq	r9, [r1], -r0
   196e8:	strdeq	r9, [r1], -r0
   196ec:	strdeq	r9, [r1], -r0
   196f0:	strdeq	r9, [r1], -r0
   196f4:	strdeq	r9, [r1], -r0
   196f8:	strdeq	r9, [r1], -r0
   196fc:	strdeq	r9, [r1], -r0
   19700:	strdeq	r9, [r1], -r0
   19704:	strdeq	r9, [r1], -r0
   19708:	strdeq	r9, [r1], -r0
   1970c:	strdeq	r9, [r1], -r0
   19710:	strdeq	r9, [r1], -r0
   19714:	strdeq	r9, [r1], -r0
   19718:	strdeq	r9, [r1], -r0
   1971c:	strdeq	r9, [r1], -r0
   19720:	strdeq	r9, [r1], -r0
   19724:	strdeq	r9, [r1], -r0
   19728:	strdeq	r9, [r1], -r0
   1972c:	strdeq	r9, [r1], -r0
   19730:	strdeq	r9, [r1], -r0
   19734:	strdeq	r9, [r1], -r0
   19738:	strdeq	r9, [r1], -r0
   1973c:	strdeq	r9, [r1], -r0
   19740:	strdeq	r9, [r1], -r0
   19744:	strdeq	r9, [r1], -r0
   19748:	andeq	r8, r1, r4, lsl #31
   1974c:			; <UNDEFINED> instruction: 0x000197b4
   19750:	andeq	r8, r1, r4, lsl #31
   19754:	andeq	r9, r1, r4, lsr #15
   19758:	mov	r3, #114	; 0x72
   1975c:	b	192c0 <__assert_fail@plt+0x8134>
   19760:	mov	r3, #102	; 0x66
   19764:	b	19190 <__assert_fail@plt+0x8004>
   19768:	mov	r3, #110	; 0x6e
   1976c:	b	192c0 <__assert_fail@plt+0x8134>
   19770:	mov	r3, #98	; 0x62
   19774:	b	19190 <__assert_fail@plt+0x8004>
   19778:	mov	r3, #97	; 0x61
   1977c:	b	19190 <__assert_fail@plt+0x8004>
   19780:	ldr	r3, [sp, #40]	; 0x28
   19784:	cmp	r3, #0
   19788:	bne	19398 <__assert_fail@plt+0x820c>
   1978c:	ldr	r3, [sp, #156]	; 0x9c
   19790:	tst	r3, #1
   19794:	addne	r9, r9, #1
   19798:	bne	18b2c <__assert_fail@plt+0x79a0>
   1979c:	ldr	r7, [sp, #40]	; 0x28
   197a0:	b	1919c <__assert_fail@plt+0x8010>
   197a4:	sub	r3, fp, #2
   197a8:	clz	r3, r3
   197ac:	lsr	r3, r3, #5
   197b0:	b	18fb0 <__assert_fail@plt+0x7e24>
   197b4:	sub	r3, fp, #2
   197b8:	mov	r6, #0
   197bc:	clz	r3, r3
   197c0:	lsr	r3, r3, #5
   197c4:	ldr	r2, [sp, #44]	; 0x2c
   197c8:	tst	r2, r3
   197cc:	beq	18fbc <__assert_fail@plt+0x7e30>
   197d0:	b	192d8 <__assert_fail@plt+0x814c>
   197d4:	sub	r3, fp, #2
   197d8:	clz	r3, r3
   197dc:	lsr	r3, r3, #5
   197e0:	b	197c4 <__assert_fail@plt+0x8638>
   197e4:	ldr	r3, [sp, #52]	; 0x34
   197e8:	ldrb	r5, [r3]
   197ec:	cmp	r5, #126	; 0x7e
   197f0:	ldrls	pc, [pc, r5, lsl #2]
   197f4:	b	194a0 <__assert_fail@plt+0x8314>
   197f8:	muleq	r1, r8, r3
   197fc:	andeq	r9, r1, r0, lsr #9
   19800:	andeq	r9, r1, r0, lsr #9
   19804:	andeq	r9, r1, r0, lsr #9
   19808:	andeq	r9, r1, r0, lsr #9
   1980c:	andeq	r9, r1, r0, lsr #9
   19810:	andeq	r9, r1, r0, lsr #9
   19814:	andeq	r9, r1, ip, ror r3
   19818:	andeq	r9, r1, r4, ror r3
   1981c:	andeq	r9, r1, r0, lsr sl
   19820:	andeq	r9, r1, r8, ror #6
   19824:	andeq	r9, r1, r4, lsr #20
   19828:	andeq	r9, r1, r4, asr #6
   1982c:	muleq	r1, r0, r3
   19830:	andeq	r9, r1, r0, lsr #9
   19834:	andeq	r9, r1, r0, lsr #9
   19838:	andeq	r9, r1, r0, lsr #9
   1983c:	andeq	r9, r1, r0, lsr #9
   19840:	andeq	r9, r1, r0, lsr #9
   19844:	andeq	r9, r1, r0, lsr #9
   19848:	andeq	r9, r1, r0, lsr #9
   1984c:	andeq	r9, r1, r0, lsr #9
   19850:	andeq	r9, r1, r0, lsr #9
   19854:	andeq	r9, r1, r0, lsr #9
   19858:	andeq	r9, r1, r0, lsr #9
   1985c:	andeq	r9, r1, r0, lsr #9
   19860:	andeq	r9, r1, r0, lsr #9
   19864:	andeq	r9, r1, r0, lsr #9
   19868:	andeq	r9, r1, r0, lsr #9
   1986c:	andeq	r9, r1, r0, lsr #9
   19870:	andeq	r9, r1, r0, lsr #9
   19874:	andeq	r9, r1, r0, lsr #9
   19878:	andeq	r9, r1, ip, lsl sl
   1987c:	andeq	r9, r1, r4, lsl #7
   19880:	andeq	r9, r1, r4, lsl #7
   19884:	andeq	r9, r1, r0, lsl #20
   19888:	andeq	r9, r1, r4, lsl #7
   1988c:	strdeq	r9, [r1], -r4
   19890:	andeq	r9, r1, r4, lsl #7
   19894:	andeq	r9, r1, r0, ror #3
   19898:	andeq	r9, r1, r4, lsl #7
   1989c:	andeq	r9, r1, r4, lsl #7
   198a0:	andeq	r9, r1, r4, lsl #7
   198a4:	strdeq	r9, [r1], -r4
   198a8:	strdeq	r9, [r1], -r4
   198ac:	strdeq	r9, [r1], -r4
   198b0:	strdeq	r9, [r1], -r4
   198b4:	strdeq	r9, [r1], -r4
   198b8:	strdeq	r9, [r1], -r4
   198bc:	strdeq	r9, [r1], -r4
   198c0:	strdeq	r9, [r1], -r4
   198c4:	strdeq	r9, [r1], -r4
   198c8:	strdeq	r9, [r1], -r4
   198cc:	strdeq	r9, [r1], -r4
   198d0:	strdeq	r9, [r1], -r4
   198d4:	strdeq	r9, [r1], -r4
   198d8:	strdeq	r9, [r1], -r4
   198dc:	strdeq	r9, [r1], -r4
   198e0:	strdeq	r9, [r1], -r4
   198e4:	andeq	r9, r1, r4, lsl #7
   198e8:	andeq	r9, r1, r4, lsl #7
   198ec:	andeq	r9, r1, r4, lsl #7
   198f0:	andeq	r9, r1, r4, lsl #7
   198f4:			; <UNDEFINED> instruction: 0x000191b4
   198f8:	andeq	r9, r1, r0, lsr #9
   198fc:	strdeq	r9, [r1], -r4
   19900:	strdeq	r9, [r1], -r4
   19904:	strdeq	r9, [r1], -r4
   19908:	strdeq	r9, [r1], -r4
   1990c:	strdeq	r9, [r1], -r4
   19910:	strdeq	r9, [r1], -r4
   19914:	strdeq	r9, [r1], -r4
   19918:	strdeq	r9, [r1], -r4
   1991c:	strdeq	r9, [r1], -r4
   19920:	strdeq	r9, [r1], -r4
   19924:	strdeq	r9, [r1], -r4
   19928:	strdeq	r9, [r1], -r4
   1992c:	strdeq	r9, [r1], -r4
   19930:	strdeq	r9, [r1], -r4
   19934:	strdeq	r9, [r1], -r4
   19938:	strdeq	r9, [r1], -r4
   1993c:	strdeq	r9, [r1], -r4
   19940:	strdeq	r9, [r1], -r4
   19944:	strdeq	r9, [r1], -r4
   19948:	strdeq	r9, [r1], -r4
   1994c:	strdeq	r9, [r1], -r4
   19950:	strdeq	r9, [r1], -r4
   19954:	strdeq	r9, [r1], -r4
   19958:	strdeq	r9, [r1], -r4
   1995c:	strdeq	r9, [r1], -r4
   19960:	strdeq	r9, [r1], -r4
   19964:	andeq	r9, r1, r4, lsl #7
   19968:	andeq	r9, r1, ip, asr r1
   1996c:	strdeq	r9, [r1], -r4
   19970:	andeq	r9, r1, r4, lsl #7
   19974:	strdeq	r9, [r1], -r4
   19978:	andeq	r9, r1, r4, lsl #7
   1997c:	strdeq	r9, [r1], -r4
   19980:	strdeq	r9, [r1], -r4
   19984:	strdeq	r9, [r1], -r4
   19988:	strdeq	r9, [r1], -r4
   1998c:	strdeq	r9, [r1], -r4
   19990:	strdeq	r9, [r1], -r4
   19994:	strdeq	r9, [r1], -r4
   19998:	strdeq	r9, [r1], -r4
   1999c:	strdeq	r9, [r1], -r4
   199a0:	strdeq	r9, [r1], -r4
   199a4:	strdeq	r9, [r1], -r4
   199a8:	strdeq	r9, [r1], -r4
   199ac:	strdeq	r9, [r1], -r4
   199b0:	strdeq	r9, [r1], -r4
   199b4:	strdeq	r9, [r1], -r4
   199b8:	strdeq	r9, [r1], -r4
   199bc:	strdeq	r9, [r1], -r4
   199c0:	strdeq	r9, [r1], -r4
   199c4:	strdeq	r9, [r1], -r4
   199c8:	strdeq	r9, [r1], -r4
   199cc:	strdeq	r9, [r1], -r4
   199d0:	strdeq	r9, [r1], -r4
   199d4:	strdeq	r9, [r1], -r4
   199d8:	strdeq	r9, [r1], -r4
   199dc:	strdeq	r9, [r1], -r4
   199e0:	strdeq	r9, [r1], -r4
   199e4:	andeq	r8, r1, r0, lsl #31
   199e8:	andeq	r9, r1, r4, lsl #7
   199ec:	andeq	r8, r1, r0, lsl #31
   199f0:	andeq	r9, r1, r0, lsl #20
   199f4:	mov	r6, r7
   199f8:	mov	r7, #0
   199fc:	b	191ac <__assert_fail@plt+0x8020>
   19a00:	cmp	r9, #0
   19a04:	mov	r2, #0
   19a08:	beq	19470 <__assert_fail@plt+0x82e4>
   19a0c:	mov	r6, #0
   19a10:	mov	r7, r2
   19a14:	mov	r3, r6
   19a18:	b	18fcc <__assert_fail@plt+0x7e40>
   19a1c:	mov	r2, #0
   19a20:	b	19484 <__assert_fail@plt+0x82f8>
   19a24:	mov	r7, #0
   19a28:	mov	r3, #118	; 0x76
   19a2c:	b	19190 <__assert_fail@plt+0x8004>
   19a30:	mov	r7, #0
   19a34:	mov	r3, #116	; 0x74
   19a38:	b	192c0 <__assert_fail@plt+0x8134>
   19a3c:	ldr	r3, [sp, #44]	; 0x2c
   19a40:	b	18ff4 <__assert_fail@plt+0x7e68>
   19a44:	ldr	r3, [sp, #44]	; 0x2c
   19a48:	cmp	r3, #0
   19a4c:	bne	19ebc <__assert_fail@plt+0x8d30>
   19a50:	add	r9, r9, #1
   19a54:	mov	r6, #0
   19a58:	ldr	r3, [sp, #48]	; 0x30
   19a5c:	mov	r5, #92	; 0x5c
   19a60:	b	19280 <__assert_fail@plt+0x80f4>
   19a64:	ldr	r3, [sp, #32]
   19a68:	ldrb	r2, [r3, #1]
   19a6c:	adds	r2, r2, #0
   19a70:	movne	r2, #1
   19a74:	b	18f9c <__assert_fail@plt+0x7e10>
   19a78:	ldr	r3, [sp, #156]	; 0x9c
   19a7c:	ands	r3, r3, #4
   19a80:	beq	19aa8 <__assert_fail@plt+0x891c>
   19a84:	ldr	r2, [sp, #28]
   19a88:	add	r3, r9, #2
   19a8c:	cmp	r3, r2
   19a90:	bcs	19aa4 <__assert_fail@plt+0x8918>
   19a94:	ldr	r2, [sp, #52]	; 0x34
   19a98:	ldrb	r5, [r2, #1]
   19a9c:	cmp	r5, #63	; 0x3f
   19aa0:	beq	19f20 <__assert_fail@plt+0x8d94>
   19aa4:	mov	r3, #0
   19aa8:	mov	r5, #63	; 0x3f
   19aac:	mov	r6, r3
   19ab0:	b	18fbc <__assert_fail@plt+0x7e30>
   19ab4:	ldr	r3, [sp, #44]	; 0x2c
   19ab8:	cmp	r3, #0
   19abc:	bne	19ebc <__assert_fail@plt+0x8d30>
   19ac0:	mov	r6, r3
   19ac4:	mov	r5, #63	; 0x3f
   19ac8:	b	18ff4 <__assert_fail@plt+0x7e68>
   19acc:	ldr	r1, [sp, #28]
   19ad0:	mov	r2, #0
   19ad4:	mov	r3, #0
   19ad8:	strd	r2, [sp, #104]	; 0x68
   19adc:	cmn	r1, #1
   19ae0:	bne	19af0 <__assert_fail@plt+0x8964>
   19ae4:	ldr	r0, [sp, #32]
   19ae8:	bl	11078 <strlen@plt>
   19aec:	str	r0, [sp, #28]
   19af0:	str	r8, [sp, #76]	; 0x4c
   19af4:	mov	r3, #0
   19af8:	str	sl, [sp, #80]	; 0x50
   19afc:	ldr	sl, [sp, #32]
   19b00:	str	r5, [sp, #84]	; 0x54
   19b04:	mov	r5, r3
   19b08:	ldr	r8, [sp, #44]	; 0x2c
   19b0c:	str	r7, [sp, #88]	; 0x58
   19b10:	str	r4, [sp, #92]	; 0x5c
   19b14:	ldr	r2, [sp, #28]
   19b18:	add	r4, r9, r5
   19b1c:	add	r3, sp, #104	; 0x68
   19b20:	add	r7, sl, r4
   19b24:	add	r0, sp, #100	; 0x64
   19b28:	mov	r1, r7
   19b2c:	sub	r2, r2, r4
   19b30:	bl	1c3e0 <__assert_fail@plt+0xb254>
   19b34:	subs	r1, r0, #0
   19b38:	beq	19b84 <__assert_fail@plt+0x89f8>
   19b3c:	cmn	r1, #1
   19b40:	beq	19efc <__assert_fail@plt+0x8d70>
   19b44:	cmn	r1, #2
   19b48:	beq	1a01c <__assert_fail@plt+0x8e90>
   19b4c:	cmp	fp, #2
   19b50:	movne	r3, #0
   19b54:	andeq	r3, r8, #1
   19b58:	cmp	r3, #0
   19b5c:	bne	19ce8 <__assert_fail@plt+0x8b5c>
   19b60:	ldr	r0, [sp, #100]	; 0x64
   19b64:	add	r5, r5, r1
   19b68:	bl	10fa0 <iswprint@plt>
   19b6c:	cmp	r0, #0
   19b70:	add	r0, sp, #104	; 0x68
   19b74:	moveq	r6, #0
   19b78:	bl	10f4c <mbsinit@plt>
   19b7c:	cmp	r0, #0
   19b80:	beq	19b14 <__assert_fail@plt+0x8988>
   19b84:	ldr	r3, [sp, #40]	; 0x28
   19b88:	mov	ip, r5
   19b8c:	eor	r2, r6, #1
   19b90:	ldr	r8, [sp, #76]	; 0x4c
   19b94:	ldr	sl, [sp, #80]	; 0x50
   19b98:	and	r2, r2, r3
   19b9c:	ldr	r5, [sp, #84]	; 0x54
   19ba0:	ldr	r7, [sp, #88]	; 0x58
   19ba4:	ldr	r4, [sp, #92]	; 0x5c
   19ba8:	cmp	ip, #1
   19bac:	bls	194e8 <__assert_fail@plt+0x835c>
   19bb0:	add	r1, ip, r9
   19bb4:	mov	r0, #39	; 0x27
   19bb8:	ldr	lr, [sp, #52]	; 0x34
   19bbc:	mov	ip, #0
   19bc0:	str	r6, [sp, #52]	; 0x34
   19bc4:	ldr	r6, [sp, #48]	; 0x30
   19bc8:	b	19c84 <__assert_fail@plt+0x8af8>
   19bcc:	ldr	ip, [sp, #44]	; 0x2c
   19bd0:	sub	r3, fp, #2
   19bd4:	clz	r3, r3
   19bd8:	lsr	r3, r3, #5
   19bdc:	cmp	ip, #0
   19be0:	bne	19df4 <__assert_fail@plt+0x8c68>
   19be4:	eor	ip, r6, #1
   19be8:	ands	r3, r3, ip
   19bec:	beq	19c1c <__assert_fail@plt+0x8a90>
   19bf0:	cmp	sl, r4
   19bf4:	add	ip, r4, #1
   19bf8:	strbhi	r0, [r8, r4]
   19bfc:	cmp	sl, ip
   19c00:	movhi	r6, #36	; 0x24
   19c04:	strbhi	r6, [r8, ip]
   19c08:	add	ip, r4, #2
   19c0c:	mov	r6, r3
   19c10:	cmp	sl, ip
   19c14:	add	r4, r4, #3
   19c18:	strbhi	r0, [r8, ip]
   19c1c:	cmp	sl, r4
   19c20:	movhi	r3, #92	; 0x5c
   19c24:	strbhi	r3, [r8, r4]
   19c28:	add	r3, r4, #1
   19c2c:	cmp	sl, r3
   19c30:	bls	19c40 <__assert_fail@plt+0x8ab4>
   19c34:	lsr	ip, r5, #6
   19c38:	add	ip, ip, #48	; 0x30
   19c3c:	strb	ip, [r8, r3]
   19c40:	add	r3, r4, #2
   19c44:	cmp	sl, r3
   19c48:	bls	19c58 <__assert_fail@plt+0x8acc>
   19c4c:	ubfx	ip, r5, #3, #3
   19c50:	add	ip, ip, #48	; 0x30
   19c54:	strb	ip, [r8, r3]
   19c58:	add	r9, r9, #1
   19c5c:	and	r5, r5, #7
   19c60:	cmp	r9, r1
   19c64:	add	r5, r5, #48	; 0x30
   19c68:	add	r4, r4, #3
   19c6c:	bcs	19e20 <__assert_fail@plt+0x8c94>
   19c70:	mov	ip, r2
   19c74:	cmp	sl, r4
   19c78:	strbhi	r5, [r8, r4]
   19c7c:	add	r4, r4, #1
   19c80:	ldrb	r5, [lr, #1]!
   19c84:	cmp	r2, #0
   19c88:	bne	19bcc <__assert_fail@plt+0x8a40>
   19c8c:	eor	r3, ip, #1
   19c90:	cmp	r7, #0
   19c94:	and	r3, r3, r6
   19c98:	uxtb	r3, r3
   19c9c:	beq	19cb0 <__assert_fail@plt+0x8b24>
   19ca0:	cmp	sl, r4
   19ca4:	movhi	r7, #92	; 0x5c
   19ca8:	strbhi	r7, [r8, r4]
   19cac:	add	r4, r4, #1
   19cb0:	add	r9, r9, #1
   19cb4:	cmp	r9, r1
   19cb8:	bcs	19e08 <__assert_fail@plt+0x8c7c>
   19cbc:	cmp	r3, #0
   19cc0:	beq	19e40 <__assert_fail@plt+0x8cb4>
   19cc4:	cmp	sl, r4
   19cc8:	add	r3, r4, #1
   19ccc:	mov	r7, #0
   19cd0:	strbhi	r0, [r8, r4]
   19cd4:	cmp	sl, r3
   19cd8:	add	r4, r4, #2
   19cdc:	mov	r6, r7
   19ce0:	strbhi	r0, [r8, r3]
   19ce4:	b	19c74 <__assert_fail@plt+0x8ae8>
   19ce8:	cmp	r1, #1
   19cec:	beq	19b60 <__assert_fail@plt+0x89d4>
   19cf0:	add	r2, r4, #1
   19cf4:	add	r3, sl, r1
   19cf8:	add	r2, sl, r2
   19cfc:	add	r4, r3, r4
   19d00:	ldrb	r3, [r2], #1
   19d04:	sub	r3, r3, #91	; 0x5b
   19d08:	cmp	r3, #33	; 0x21
   19d0c:	ldrls	pc, [pc, r3, lsl #2]
   19d10:	b	19d9c <__assert_fail@plt+0x8c10>
   19d14:	andeq	r9, r1, r8, lsr #27
   19d18:	andeq	r9, r1, r8, lsr #27
   19d1c:	muleq	r1, ip, sp
   19d20:	andeq	r9, r1, r8, lsr #27
   19d24:	muleq	r1, ip, sp
   19d28:	andeq	r9, r1, r8, lsr #27
   19d2c:	muleq	r1, ip, sp
   19d30:	muleq	r1, ip, sp
   19d34:	muleq	r1, ip, sp
   19d38:	muleq	r1, ip, sp
   19d3c:	muleq	r1, ip, sp
   19d40:	muleq	r1, ip, sp
   19d44:	muleq	r1, ip, sp
   19d48:	muleq	r1, ip, sp
   19d4c:	muleq	r1, ip, sp
   19d50:	muleq	r1, ip, sp
   19d54:	muleq	r1, ip, sp
   19d58:	muleq	r1, ip, sp
   19d5c:	muleq	r1, ip, sp
   19d60:	muleq	r1, ip, sp
   19d64:	muleq	r1, ip, sp
   19d68:	muleq	r1, ip, sp
   19d6c:	muleq	r1, ip, sp
   19d70:	muleq	r1, ip, sp
   19d74:	muleq	r1, ip, sp
   19d78:	muleq	r1, ip, sp
   19d7c:	muleq	r1, ip, sp
   19d80:	muleq	r1, ip, sp
   19d84:	muleq	r1, ip, sp
   19d88:	muleq	r1, ip, sp
   19d8c:	muleq	r1, ip, sp
   19d90:	muleq	r1, ip, sp
   19d94:	muleq	r1, ip, sp
   19d98:	andeq	r9, r1, r8, lsr #27
   19d9c:	cmp	r4, r2
   19da0:	bne	19d00 <__assert_fail@plt+0x8b74>
   19da4:	b	19b60 <__assert_fail@plt+0x89d4>
   19da8:	mov	r8, #2
   19dac:	ldr	fp, [sp, #76]	; 0x4c
   19db0:	ldr	sl, [sp, #80]	; 0x50
   19db4:	b	192e0 <__assert_fail@plt+0x8154>
   19db8:	ldr	r2, [sp, #40]	; 0x28
   19dbc:	str	fp, [sp, #152]	; 0x98
   19dc0:	mov	fp, r8
   19dc4:	ldr	r8, [sp, #152]	; 0x98
   19dc8:	and	r2, r2, r3
   19dcc:	str	r2, [sp, #40]	; 0x28
   19dd0:	b	192e0 <__assert_fail@plt+0x8154>
   19dd4:	cmp	sl, r4
   19dd8:	movls	r0, r4
   19ddc:	bls	19410 <__assert_fail@plt+0x8284>
   19de0:	ldr	r3, [sp, #48]	; 0x30
   19de4:	b	19400 <__assert_fail@plt+0x8274>
   19de8:	str	sl, [sp, #72]	; 0x48
   19dec:	ldr	sl, [sp, #44]	; 0x2c
   19df0:	b	19250 <__assert_fail@plt+0x80c4>
   19df4:	str	r3, [sp, #40]	; 0x28
   19df8:	str	fp, [sp, #152]	; 0x98
   19dfc:	mov	fp, r8
   19e00:	ldr	r8, [sp, #152]	; 0x98
   19e04:	b	192e0 <__assert_fail@plt+0x8154>
   19e08:	str	r6, [sp, #48]	; 0x30
   19e0c:	ldr	r6, [sp, #52]	; 0x34
   19e10:	b	19280 <__assert_fail@plt+0x80f4>
   19e14:	mov	r6, #0
   19e18:	ldr	r2, [sp, #40]	; 0x28
   19e1c:	b	19bb0 <__assert_fail@plt+0x8a24>
   19e20:	str	r6, [sp, #48]	; 0x30
   19e24:	ldr	r6, [sp, #52]	; 0x34
   19e28:	b	1906c <__assert_fail@plt+0x7ee0>
   19e2c:	add	r4, r4, #4
   19e30:	mov	r6, #0
   19e34:	str	r3, [sp, #48]	; 0x30
   19e38:	mov	r5, #48	; 0x30
   19e3c:	b	18ff4 <__assert_fail@plt+0x7e68>
   19e40:	mov	r7, r3
   19e44:	b	19c74 <__assert_fail@plt+0x8ae8>
   19e48:	mov	r3, #1
   19e4c:	movw	r2, #55100	; 0xd73c
   19e50:	movt	r2, #1
   19e54:	mov	r4, r3
   19e58:	str	r3, [sp, #36]	; 0x24
   19e5c:	str	r3, [sp, #40]	; 0x28
   19e60:	str	sl, [sp, #44]	; 0x2c
   19e64:	str	sl, [sp, #48]	; 0x30
   19e68:	str	r3, [sp, #56]	; 0x38
   19e6c:	str	r2, [sp, #60]	; 0x3c
   19e70:	str	sl, [sp, #68]	; 0x44
   19e74:	str	sl, [sp, #72]	; 0x48
   19e78:	b	18b1c <__assert_fail@plt+0x7990>
   19e7c:	mov	r3, r6
   19e80:	mov	r5, #48	; 0x30
   19e84:	mov	r6, #0
   19e88:	b	18ff4 <__assert_fail@plt+0x7e68>
   19e8c:	mov	r5, r3
   19e90:	b	1936c <__assert_fail@plt+0x81e0>
   19e94:	cmp	sl, r4
   19e98:	mov	r5, #48	; 0x30
   19e9c:	movhi	r3, #48	; 0x30
   19ea0:	strbhi	r3, [r8, r4]
   19ea4:	add	r3, r0, #2
   19ea8:	add	r4, r0, #3
   19eac:	cmp	sl, r3
   19eb0:	movhi	r1, #48	; 0x30
   19eb4:	strbhi	r1, [r8, r3]
   19eb8:	b	19444 <__assert_fail@plt+0x82b8>
   19ebc:	str	fp, [sp, #152]	; 0x98
   19ec0:	mov	fp, r8
   19ec4:	ldr	r8, [sp, #152]	; 0x98
   19ec8:	b	192e0 <__assert_fail@plt+0x8154>
   19ecc:	ldr	r3, [sp, #164]	; 0xa4
   19ed0:	ldrb	r3, [r3]
   19ed4:	cmp	r3, #0
   19ed8:	beq	18aec <__assert_fail@plt+0x7960>
   19edc:	ldr	r2, [sp, #164]	; 0xa4
   19ee0:	cmp	sl, r4
   19ee4:	strbhi	r3, [fp, r4]
   19ee8:	add	r4, r4, #1
   19eec:	ldrb	r3, [r2, #1]!
   19ef0:	cmp	r3, #0
   19ef4:	bne	19ee0 <__assert_fail@plt+0x8d54>
   19ef8:	b	18aec <__assert_fail@plt+0x7960>
   19efc:	mov	ip, r5
   19f00:	mov	r6, #0
   19f04:	ldr	r2, [sp, #40]	; 0x28
   19f08:	ldr	r8, [sp, #76]	; 0x4c
   19f0c:	ldr	sl, [sp, #80]	; 0x50
   19f10:	ldr	r5, [sp, #84]	; 0x54
   19f14:	ldr	r7, [sp, #88]	; 0x58
   19f18:	ldr	r4, [sp, #92]	; 0x5c
   19f1c:	b	19ba8 <__assert_fail@plt+0x8a1c>
   19f20:	ldr	r2, [sp, #32]
   19f24:	ldrb	r1, [r2, r3]
   19f28:	sub	r2, r1, #33	; 0x21
   19f2c:	cmp	r2, #29
   19f30:	ldrls	pc, [pc, r2, lsl #2]
   19f34:	b	1a010 <__assert_fail@plt+0x8e84>
   19f38:			; <UNDEFINED> instruction: 0x00019fb0
   19f3c:	andeq	sl, r1, r0, lsl r0
   19f40:	andeq	sl, r1, r0, lsl r0
   19f44:	andeq	sl, r1, r0, lsl r0
   19f48:	andeq	sl, r1, r0, lsl r0
   19f4c:	andeq	sl, r1, r0, lsl r0
   19f50:			; <UNDEFINED> instruction: 0x00019fb0
   19f54:			; <UNDEFINED> instruction: 0x00019fb0
   19f58:			; <UNDEFINED> instruction: 0x00019fb0
   19f5c:	andeq	sl, r1, r0, lsl r0
   19f60:	andeq	sl, r1, r0, lsl r0
   19f64:	andeq	sl, r1, r0, lsl r0
   19f68:			; <UNDEFINED> instruction: 0x00019fb0
   19f6c:	andeq	sl, r1, r0, lsl r0
   19f70:			; <UNDEFINED> instruction: 0x00019fb0
   19f74:	andeq	sl, r1, r0, lsl r0
   19f78:	andeq	sl, r1, r0, lsl r0
   19f7c:	andeq	sl, r1, r0, lsl r0
   19f80:	andeq	sl, r1, r0, lsl r0
   19f84:	andeq	sl, r1, r0, lsl r0
   19f88:	andeq	sl, r1, r0, lsl r0
   19f8c:	andeq	sl, r1, r0, lsl r0
   19f90:	andeq	sl, r1, r0, lsl r0
   19f94:	andeq	sl, r1, r0, lsl r0
   19f98:	andeq	sl, r1, r0, lsl r0
   19f9c:	andeq	sl, r1, r0, lsl r0
   19fa0:	andeq	sl, r1, r0, lsl r0
   19fa4:			; <UNDEFINED> instruction: 0x00019fb0
   19fa8:			; <UNDEFINED> instruction: 0x00019fb0
   19fac:			; <UNDEFINED> instruction: 0x00019fb0
   19fb0:	ldr	r2, [sp, #44]	; 0x2c
   19fb4:	cmp	r2, #0
   19fb8:	bne	1a114 <__assert_fail@plt+0x8f88>
   19fbc:	cmp	sl, r4
   19fc0:	mov	r5, r1
   19fc4:	movhi	r2, #63	; 0x3f
   19fc8:	mov	r9, r3
   19fcc:	strbhi	r2, [r8, r4]
   19fd0:	add	r2, r4, #1
   19fd4:	cmp	sl, r2
   19fd8:	movhi	r0, #34	; 0x22
   19fdc:	strbhi	r0, [r8, r2]
   19fe0:	add	r2, r4, #2
   19fe4:	cmp	sl, r2
   19fe8:	movhi	r0, #34	; 0x22
   19fec:	strbhi	r0, [r8, r2]
   19ff0:	add	r2, r4, #3
   19ff4:	add	r4, r4, #4
   19ff8:	cmp	sl, r2
   19ffc:	movhi	r0, #63	; 0x3f
   1a000:	strbhi	r0, [r8, r2]
   1a004:	mov	r2, #0
   1a008:	mov	r6, r2
   1a00c:	b	19444 <__assert_fail@plt+0x82b8>
   1a010:	mov	r3, #0
   1a014:	mov	r6, r3
   1a018:	b	18fbc <__assert_fail@plt+0x7e30>
   1a01c:	ldr	r0, [sp, #28]
   1a020:	mov	r1, r4
   1a024:	mov	r2, r7
   1a028:	mov	r3, r5
   1a02c:	mov	ip, r5
   1a030:	ldr	r8, [sp, #76]	; 0x4c
   1a034:	ldr	sl, [sp, #80]	; 0x50
   1a038:	cmp	r1, r0
   1a03c:	ldr	r5, [sp, #84]	; 0x54
   1a040:	ldr	r7, [sp, #88]	; 0x58
   1a044:	ldr	r4, [sp, #92]	; 0x5c
   1a048:	bcs	1a07c <__assert_fail@plt+0x8ef0>
   1a04c:	ldrb	r6, [r2]
   1a050:	cmp	r6, #0
   1a054:	bne	1a068 <__assert_fail@plt+0x8edc>
   1a058:	b	1a19c <__assert_fail@plt+0x9010>
   1a05c:	ldrb	r6, [r2, #1]!
   1a060:	cmp	r6, #0
   1a064:	beq	1a124 <__assert_fail@plt+0x8f98>
   1a068:	add	r3, r3, #1
   1a06c:	add	r1, r9, r3
   1a070:	cmp	r1, r0
   1a074:	bcc	1a05c <__assert_fail@plt+0x8ed0>
   1a078:	mov	ip, r3
   1a07c:	mov	r6, #0
   1a080:	ldr	r2, [sp, #40]	; 0x28
   1a084:	b	19ba8 <__assert_fail@plt+0x8a1c>
   1a088:	mov	r3, #1
   1a08c:	mov	r2, #0
   1a090:	mov	r4, r2
   1a094:	str	r3, [sp, #36]	; 0x24
   1a098:	str	r3, [sp, #40]	; 0x28
   1a09c:	str	r3, [sp, #44]	; 0x2c
   1a0a0:	str	r2, [sp, #48]	; 0x30
   1a0a4:	str	r3, [sp, #56]	; 0x38
   1a0a8:	movw	r3, #55100	; 0xd73c
   1a0ac:	movt	r3, #1
   1a0b0:	str	r3, [sp, #60]	; 0x3c
   1a0b4:	str	r2, [sp, #68]	; 0x44
   1a0b8:	str	r2, [sp, #72]	; 0x48
   1a0bc:	b	18b1c <__assert_fail@plt+0x7990>
   1a0c0:	mov	r2, r3
   1a0c4:	ldr	r3, [sp, #60]	; 0x3c
   1a0c8:	cmp	r3, #0
   1a0cc:	moveq	r2, #0
   1a0d0:	andne	r2, r2, #1
   1a0d4:	cmp	r2, #0
   1a0d8:	beq	1a104 <__assert_fail@plt+0x8f78>
   1a0dc:	mov	r2, r3
   1a0e0:	ldrb	r3, [r3]
   1a0e4:	cmp	r3, #0
   1a0e8:	beq	1a104 <__assert_fail@plt+0x8f78>
   1a0ec:	cmp	sl, r4
   1a0f0:	strbhi	r3, [fp, r4]
   1a0f4:	add	r4, r4, #1
   1a0f8:	ldrb	r3, [r2, #1]!
   1a0fc:	cmp	r3, #0
   1a100:	bne	1a0ec <__assert_fail@plt+0x8f60>
   1a104:	cmp	sl, r4
   1a108:	movhi	r3, #0
   1a10c:	strbhi	r3, [fp, r4]
   1a110:	b	19324 <__assert_fail@plt+0x8198>
   1a114:	str	fp, [sp, #152]	; 0x98
   1a118:	mov	fp, r8
   1a11c:	ldr	r8, [sp, #152]	; 0x98
   1a120:	b	192ec <__assert_fail@plt+0x8160>
   1a124:	mov	ip, r3
   1a128:	ldr	r2, [sp, #40]	; 0x28
   1a12c:	b	19ba8 <__assert_fail@plt+0x8a1c>
   1a130:	str	fp, [sp, #152]	; 0x98
   1a134:	mov	fp, r8
   1a138:	ldr	r8, [sp, #152]	; 0x98
   1a13c:	sub	r3, r8, #2
   1a140:	clz	r3, r3
   1a144:	lsr	r3, r3, #5
   1a148:	str	r3, [sp, #40]	; 0x28
   1a14c:	b	192e0 <__assert_fail@plt+0x8154>
   1a150:	mov	ip, #5
   1a154:	ldr	r3, [sp, #28]
   1a158:	str	ip, [sp]
   1a15c:	ldr	r2, [sp, #156]	; 0x9c
   1a160:	ldr	ip, [sp, #164]	; 0xa4
   1a164:	ldr	r0, [sp, #160]	; 0xa0
   1a168:	str	r2, [sp, #4]
   1a16c:	ldr	r2, [sp, #32]
   1a170:	ldr	r1, [sp, #72]	; 0x48
   1a174:	str	ip, [sp, #12]
   1a178:	ldr	ip, [sp, #168]	; 0xa8
   1a17c:	str	r0, [sp, #8]
   1a180:	mov	r0, fp
   1a184:	str	ip, [sp, #16]
   1a188:	bl	18a34 <__assert_fail@plt+0x78a8>
   1a18c:	mov	r4, r0
   1a190:	b	19324 <__assert_fail@plt+0x8198>
   1a194:	mov	r8, #2
   1a198:	b	192e0 <__assert_fail@plt+0x8154>
   1a19c:	ldr	r2, [sp, #40]	; 0x28
   1a1a0:	b	19ba8 <__assert_fail@plt+0x8a1c>
   1a1a4:	mov	r3, #0
   1a1a8:	mov	r2, #1
   1a1ac:	mov	r4, r3
   1a1b0:	strd	r2, [sp, #36]	; 0x24
   1a1b4:	strd	r2, [sp, #44]	; 0x2c
   1a1b8:	str	r2, [sp, #56]	; 0x38
   1a1bc:	str	r3, [sp, #68]	; 0x44
   1a1c0:	str	r3, [sp, #72]	; 0x48
   1a1c4:	movw	r3, #55120	; 0xd750
   1a1c8:	movt	r3, #1
   1a1cc:	str	r3, [sp, #60]	; 0x3c
   1a1d0:	b	18b1c <__assert_fail@plt+0x7990>
   1a1d4:	mov	r3, #0
   1a1d8:	mov	r1, #1
   1a1dc:	mov	r2, r3
   1a1e0:	str	r1, [sp, #36]	; 0x24
   1a1e4:	str	r3, [sp, #48]	; 0x30
   1a1e8:	str	sl, [sp, #72]	; 0x48
   1a1ec:	b	19124 <__assert_fail@plt+0x7f98>
   1a1f0:	bl	11168 <abort@plt>
   1a1f4:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1a1f8:	mov	r4, r0
   1a1fc:	mov	r5, r3
   1a200:	strd	r6, [sp, #8]
   1a204:	movw	r7, #57636	; 0xe124
   1a208:	movt	r7, #2
   1a20c:	strd	r8, [sp, #16]
   1a210:	strd	sl, [sp, #24]
   1a214:	mov	sl, r1
   1a218:	mov	fp, r2
   1a21c:	str	lr, [sp, #32]
   1a220:	sub	sp, sp, #60	; 0x3c
   1a224:	bl	11090 <__errno_location@plt>
   1a228:	mov	r8, r0
   1a22c:	cmn	r4, #-2147483647	; 0x80000001
   1a230:	ldr	r6, [r7]
   1a234:	movne	r0, #0
   1a238:	moveq	r0, #1
   1a23c:	ldr	r3, [r8]
   1a240:	orrs	r0, r0, r4, lsr #31
   1a244:	str	r3, [sp, #28]
   1a248:	bne	1a3d8 <__assert_fail@plt+0x924c>
   1a24c:	ldr	r3, [r7, #4]
   1a250:	cmp	r3, r4
   1a254:	bgt	1a2b4 <__assert_fail@plt+0x9128>
   1a258:	add	r1, r7, #8
   1a25c:	sub	r2, r4, r3
   1a260:	str	r3, [sp, #52]	; 0x34
   1a264:	cmp	r6, r1
   1a268:	add	r2, r2, #1
   1a26c:	beq	1a3b0 <__assert_fail@plt+0x9224>
   1a270:	mov	r1, #8
   1a274:	mov	r0, r6
   1a278:	mvn	r3, #-2147483648	; 0x80000000
   1a27c:	str	r1, [sp]
   1a280:	add	r1, sp, #52	; 0x34
   1a284:	bl	1b264 <__assert_fail@plt+0xa0d8>
   1a288:	mov	r6, r0
   1a28c:	str	r0, [r7]
   1a290:	ldr	r0, [r7, #4]
   1a294:	mov	r1, #0
   1a298:	ldr	r2, [sp, #52]	; 0x34
   1a29c:	sub	r2, r2, r0
   1a2a0:	add	r0, r6, r0, lsl #3
   1a2a4:	lsl	r2, r2, #3
   1a2a8:	bl	110b4 <memset@plt>
   1a2ac:	ldr	r3, [sp, #52]	; 0x34
   1a2b0:	str	r3, [r7, #4]
   1a2b4:	ldr	r1, [r5, #4]
   1a2b8:	add	r0, r6, r4, lsl #3
   1a2bc:	add	ip, r5, #8
   1a2c0:	mov	r3, fp
   1a2c4:	mov	r2, sl
   1a2c8:	ldr	r7, [r0, #4]
   1a2cc:	str	r0, [sp, #36]	; 0x24
   1a2d0:	str	ip, [sp, #40]	; 0x28
   1a2d4:	orr	r0, r1, #1
   1a2d8:	ldr	r9, [r6, r4, lsl #3]
   1a2dc:	str	ip, [sp, #8]
   1a2e0:	ldr	lr, [r5, #44]	; 0x2c
   1a2e4:	str	r0, [sp, #4]
   1a2e8:	ldr	ip, [r5]
   1a2ec:	mov	r1, r9
   1a2f0:	str	ip, [sp, #32]
   1a2f4:	ldr	ip, [r5, #40]	; 0x28
   1a2f8:	str	ip, [sp, #12]
   1a2fc:	ldr	ip, [sp, #32]
   1a300:	str	lr, [sp, #16]
   1a304:	str	r0, [sp, #44]	; 0x2c
   1a308:	mov	r0, r7
   1a30c:	str	ip, [sp]
   1a310:	bl	18a34 <__assert_fail@plt+0x78a8>
   1a314:	cmp	r9, r0
   1a318:	bhi	1a388 <__assert_fail@plt+0x91fc>
   1a31c:	add	r9, r0, #1
   1a320:	movw	r3, #57784	; 0xe1b8
   1a324:	movt	r3, #2
   1a328:	cmp	r7, r3
   1a32c:	str	r9, [r6, r4, lsl #3]
   1a330:	beq	1a33c <__assert_fail@plt+0x91b0>
   1a334:	mov	r0, r7
   1a338:	bl	18694 <__assert_fail@plt+0x7508>
   1a33c:	mov	r0, r9
   1a340:	bl	1b0b4 <__assert_fail@plt+0x9f28>
   1a344:	ldr	ip, [r5]
   1a348:	mov	r3, fp
   1a34c:	mov	r2, sl
   1a350:	mov	r1, r9
   1a354:	mov	r7, r0
   1a358:	ldr	lr, [sp, #36]	; 0x24
   1a35c:	ldr	r4, [r5, #40]	; 0x28
   1a360:	str	r0, [lr, #4]
   1a364:	ldr	lr, [r5, #44]	; 0x2c
   1a368:	str	ip, [sp]
   1a36c:	ldr	ip, [sp, #44]	; 0x2c
   1a370:	str	ip, [sp, #4]
   1a374:	ldr	ip, [sp, #40]	; 0x28
   1a378:	str	r4, [sp, #12]
   1a37c:	str	lr, [sp, #16]
   1a380:	str	ip, [sp, #8]
   1a384:	bl	18a34 <__assert_fail@plt+0x78a8>
   1a388:	ldr	r3, [sp, #28]
   1a38c:	mov	r0, r7
   1a390:	str	r3, [r8]
   1a394:	add	sp, sp, #60	; 0x3c
   1a398:	ldrd	r4, [sp]
   1a39c:	ldrd	r6, [sp, #8]
   1a3a0:	ldrd	r8, [sp, #16]
   1a3a4:	ldrd	sl, [sp, #24]
   1a3a8:	add	sp, sp, #32
   1a3ac:	pop	{pc}		; (ldr pc, [sp], #4)
   1a3b0:	mov	r1, #8
   1a3b4:	mvn	r3, #-2147483648	; 0x80000000
   1a3b8:	str	r1, [sp]
   1a3bc:	add	r1, sp, #52	; 0x34
   1a3c0:	bl	1b264 <__assert_fail@plt+0xa0d8>
   1a3c4:	ldrd	r2, [r7, #8]
   1a3c8:	mov	r6, r0
   1a3cc:	str	r0, [r7]
   1a3d0:	strd	r2, [r0]
   1a3d4:	b	1a290 <__assert_fail@plt+0x9104>
   1a3d8:	bl	11168 <abort@plt>
   1a3dc:	strd	r4, [sp, #-16]!
   1a3e0:	mov	r5, r0
   1a3e4:	str	r6, [sp, #8]
   1a3e8:	str	lr, [sp, #12]
   1a3ec:	bl	11090 <__errno_location@plt>
   1a3f0:	mov	r4, r0
   1a3f4:	cmp	r5, #0
   1a3f8:	ldr	r0, [pc, #32]	; 1a420 <__assert_fail@plt+0x9294>
   1a3fc:	mov	r1, #48	; 0x30
   1a400:	movne	r0, r5
   1a404:	ldr	r6, [r4]
   1a408:	bl	1b3dc <__assert_fail@plt+0xa250>
   1a40c:	str	r6, [r4]
   1a410:	ldrd	r4, [sp]
   1a414:	ldr	r6, [sp, #8]
   1a418:	add	sp, sp, #12
   1a41c:	pop	{pc}		; (ldr pc, [sp], #4)
   1a420:			; <UNDEFINED> instruction: 0x0002e2b8
   1a424:	ldr	r3, [pc, #12]	; 1a438 <__assert_fail@plt+0x92ac>
   1a428:	cmp	r0, #0
   1a42c:	moveq	r0, r3
   1a430:	ldr	r0, [r0]
   1a434:	bx	lr
   1a438:			; <UNDEFINED> instruction: 0x0002e2b8
   1a43c:	ldr	r3, [pc, #12]	; 1a450 <__assert_fail@plt+0x92c4>
   1a440:	cmp	r0, #0
   1a444:	moveq	r0, r3
   1a448:	str	r1, [r0]
   1a44c:	bx	lr
   1a450:			; <UNDEFINED> instruction: 0x0002e2b8
   1a454:	ldr	r3, [pc, #52]	; 1a490 <__assert_fail@plt+0x9304>
   1a458:	cmp	r0, #0
   1a45c:	push	{lr}		; (str lr, [sp, #-4]!)
   1a460:	lsr	lr, r1, #5
   1a464:	and	r1, r1, #31
   1a468:	moveq	r0, r3
   1a46c:	add	r3, r0, #8
   1a470:	ldr	ip, [r3, lr, lsl #2]
   1a474:	lsr	r0, ip, r1
   1a478:	eor	r2, r2, r0
   1a47c:	and	r0, r0, #1
   1a480:	and	r2, r2, #1
   1a484:	eor	r1, ip, r2, lsl r1
   1a488:	str	r1, [r3, lr, lsl #2]
   1a48c:	pop	{pc}		; (ldr pc, [sp], #4)
   1a490:			; <UNDEFINED> instruction: 0x0002e2b8
   1a494:	ldr	r3, [pc, #16]	; 1a4ac <__assert_fail@plt+0x9320>
   1a498:	cmp	r0, #0
   1a49c:	movne	r3, r0
   1a4a0:	ldr	r0, [r3, #4]
   1a4a4:	str	r1, [r3, #4]
   1a4a8:	bx	lr
   1a4ac:			; <UNDEFINED> instruction: 0x0002e2b8
   1a4b0:	ldr	r3, [pc, #48]	; 1a4e8 <__assert_fail@plt+0x935c>
   1a4b4:	cmp	r0, #0
   1a4b8:	mov	ip, #10
   1a4bc:	moveq	r0, r3
   1a4c0:	cmp	r2, #0
   1a4c4:	cmpne	r1, #0
   1a4c8:	str	ip, [r0]
   1a4cc:	beq	1a4dc <__assert_fail@plt+0x9350>
   1a4d0:	str	r1, [r0, #40]	; 0x28
   1a4d4:	str	r2, [r0, #44]	; 0x2c
   1a4d8:	bx	lr
   1a4dc:	str	r4, [sp, #-8]!
   1a4e0:	str	lr, [sp, #4]
   1a4e4:	bl	11168 <abort@plt>
   1a4e8:			; <UNDEFINED> instruction: 0x0002e2b8
   1a4ec:	strd	r4, [sp, #-28]!	; 0xffffffe4
   1a4f0:	strd	r6, [sp, #8]
   1a4f4:	mov	r7, r0
   1a4f8:	mov	r6, r1
   1a4fc:	strd	r8, [sp, #16]
   1a500:	mov	r8, r2
   1a504:	mov	r9, r3
   1a508:	str	lr, [sp, #24]
   1a50c:	sub	sp, sp, #28
   1a510:	ldr	r4, [sp, #56]	; 0x38
   1a514:	ldr	ip, [pc, #104]	; 1a584 <__assert_fail@plt+0x93f8>
   1a518:	cmp	r4, #0
   1a51c:	moveq	r4, ip
   1a520:	bl	11090 <__errno_location@plt>
   1a524:	ldr	ip, [r4, #44]	; 0x2c
   1a528:	mov	r5, r0
   1a52c:	mov	r1, r6
   1a530:	add	lr, r4, #8
   1a534:	mov	r3, r9
   1a538:	ldr	r6, [r5]
   1a53c:	mov	r2, r8
   1a540:	mov	r0, r7
   1a544:	str	ip, [sp, #16]
   1a548:	ldr	ip, [r4, #40]	; 0x28
   1a54c:	str	lr, [sp, #8]
   1a550:	str	ip, [sp, #12]
   1a554:	ldr	ip, [r4, #4]
   1a558:	str	ip, [sp, #4]
   1a55c:	ldr	ip, [r4]
   1a560:	str	ip, [sp]
   1a564:	bl	18a34 <__assert_fail@plt+0x78a8>
   1a568:	str	r6, [r5]
   1a56c:	add	sp, sp, #28
   1a570:	ldrd	r4, [sp]
   1a574:	ldrd	r6, [sp, #8]
   1a578:	ldrd	r8, [sp, #16]
   1a57c:	add	sp, sp, #24
   1a580:	pop	{pc}		; (ldr pc, [sp], #4)
   1a584:			; <UNDEFINED> instruction: 0x0002e2b8
   1a588:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1a58c:	cmp	r3, #0
   1a590:	ldr	r4, [pc, #220]	; 1a674 <__assert_fail@plt+0x94e8>
   1a594:	movne	r4, r3
   1a598:	strd	r6, [sp, #8]
   1a59c:	mov	r6, r2
   1a5a0:	strd	r8, [sp, #16]
   1a5a4:	mov	r9, r0
   1a5a8:	strd	sl, [sp, #24]
   1a5ac:	mov	sl, r1
   1a5b0:	str	lr, [sp, #32]
   1a5b4:	sub	sp, sp, #44	; 0x2c
   1a5b8:	bl	11090 <__errno_location@plt>
   1a5bc:	ldr	r5, [r4, #4]
   1a5c0:	mov	r7, r0
   1a5c4:	mov	r1, #0
   1a5c8:	add	r8, r4, #8
   1a5cc:	mov	r3, sl
   1a5d0:	ldr	ip, [r4, #44]	; 0x2c
   1a5d4:	mov	r2, r9
   1a5d8:	mov	r0, r1
   1a5dc:	ldr	lr, [r7]
   1a5e0:	cmp	r6, r1
   1a5e4:	orreq	r5, r5, #1
   1a5e8:	str	ip, [sp, #16]
   1a5ec:	ldr	ip, [r4, #40]	; 0x28
   1a5f0:	stmib	sp, {r5, r8, ip}
   1a5f4:	ldr	ip, [r4]
   1a5f8:	str	lr, [sp, #28]
   1a5fc:	str	ip, [sp]
   1a600:	bl	18a34 <__assert_fail@plt+0x78a8>
   1a604:	add	r1, r0, #1
   1a608:	mov	fp, r0
   1a60c:	mov	r0, r1
   1a610:	str	r1, [sp, #36]	; 0x24
   1a614:	bl	1b0b4 <__assert_fail@plt+0x9f28>
   1a618:	ldr	ip, [r4, #44]	; 0x2c
   1a61c:	mov	r3, sl
   1a620:	mov	r2, r9
   1a624:	ldr	r1, [sp, #36]	; 0x24
   1a628:	str	ip, [sp, #16]
   1a62c:	ldr	ip, [r4, #40]	; 0x28
   1a630:	str	r0, [sp, #32]
   1a634:	stmib	sp, {r5, r8, ip}
   1a638:	ldr	ip, [r4]
   1a63c:	str	ip, [sp]
   1a640:	bl	18a34 <__assert_fail@plt+0x78a8>
   1a644:	ldr	lr, [sp, #28]
   1a648:	cmp	r6, #0
   1a64c:	ldr	r0, [sp, #32]
   1a650:	str	lr, [r7]
   1a654:	strne	fp, [r6]
   1a658:	add	sp, sp, #44	; 0x2c
   1a65c:	ldrd	r4, [sp]
   1a660:	ldrd	r6, [sp, #8]
   1a664:	ldrd	r8, [sp, #16]
   1a668:	ldrd	sl, [sp, #24]
   1a66c:	add	sp, sp, #32
   1a670:	pop	{pc}		; (ldr pc, [sp], #4)
   1a674:			; <UNDEFINED> instruction: 0x0002e2b8
   1a678:	mov	r3, r2
   1a67c:	mov	r2, #0
   1a680:	b	1a588 <__assert_fail@plt+0x93fc>
   1a684:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1a688:	movw	r5, #57636	; 0xe124
   1a68c:	movt	r5, #2
   1a690:	ldr	r3, [r5, #4]
   1a694:	strd	r6, [sp, #8]
   1a698:	str	r8, [sp, #16]
   1a69c:	str	lr, [sp, #20]
   1a6a0:	ldr	r7, [r5]
   1a6a4:	cmp	r3, #1
   1a6a8:	ble	1a6cc <__assert_fail@plt+0x9540>
   1a6ac:	mov	r4, #1
   1a6b0:	add	r6, r7, #4
   1a6b4:	ldr	r0, [r6, r4, lsl #3]
   1a6b8:	add	r4, r4, #1
   1a6bc:	bl	18694 <__assert_fail@plt+0x7508>
   1a6c0:	ldr	r3, [r5, #4]
   1a6c4:	cmp	r3, r4
   1a6c8:	bgt	1a6b4 <__assert_fail@plt+0x9528>
   1a6cc:	ldr	r0, [r7, #4]
   1a6d0:	movw	r4, #57784	; 0xe1b8
   1a6d4:	movt	r4, #2
   1a6d8:	cmp	r0, r4
   1a6dc:	beq	1a6f0 <__assert_fail@plt+0x9564>
   1a6e0:	bl	18694 <__assert_fail@plt+0x7508>
   1a6e4:	mov	r3, #256	; 0x100
   1a6e8:	str	r3, [r5, #8]
   1a6ec:	str	r4, [r5, #12]
   1a6f0:	ldr	r4, [pc, #44]	; 1a724 <__assert_fail@plt+0x9598>
   1a6f4:	cmp	r7, r4
   1a6f8:	beq	1a708 <__assert_fail@plt+0x957c>
   1a6fc:	mov	r0, r7
   1a700:	bl	18694 <__assert_fail@plt+0x7508>
   1a704:	str	r4, [r5]
   1a708:	mov	r3, #1
   1a70c:	ldrd	r6, [sp, #8]
   1a710:	str	r3, [r5, #4]
   1a714:	ldrd	r4, [sp]
   1a718:	ldr	r8, [sp, #16]
   1a71c:	add	sp, sp, #20
   1a720:	pop	{pc}		; (ldr pc, [sp], #4)
   1a724:	andeq	lr, r2, ip, lsr #2
   1a728:	ldr	r3, [pc, #4]	; 1a734 <__assert_fail@plt+0x95a8>
   1a72c:	mvn	r2, #0
   1a730:	b	1a1f4 <__assert_fail@plt+0x9068>
   1a734:			; <UNDEFINED> instruction: 0x0002e2b8
   1a738:	ldr	r3, [pc]	; 1a740 <__assert_fail@plt+0x95b4>
   1a73c:	b	1a1f4 <__assert_fail@plt+0x9068>
   1a740:			; <UNDEFINED> instruction: 0x0002e2b8
   1a744:	mov	r1, r0
   1a748:	ldr	r3, [pc, #8]	; 1a758 <__assert_fail@plt+0x95cc>
   1a74c:	mvn	r2, #0
   1a750:	mov	r0, #0
   1a754:	b	1a1f4 <__assert_fail@plt+0x9068>
   1a758:			; <UNDEFINED> instruction: 0x0002e2b8
   1a75c:	mov	r2, r1
   1a760:	ldr	r3, [pc, #8]	; 1a770 <__assert_fail@plt+0x95e4>
   1a764:	mov	r1, r0
   1a768:	mov	r0, #0
   1a76c:	b	1a1f4 <__assert_fail@plt+0x9068>
   1a770:			; <UNDEFINED> instruction: 0x0002e2b8
   1a774:	strd	r4, [sp, #-12]!
   1a778:	mov	r5, r2
   1a77c:	mov	r4, r0
   1a780:	str	lr, [sp, #8]
   1a784:	sub	sp, sp, #52	; 0x34
   1a788:	mov	r0, sp
   1a78c:	bl	18890 <__assert_fail@plt+0x7704>
   1a790:	mov	r3, sp
   1a794:	mov	r1, r5
   1a798:	mov	r0, r4
   1a79c:	mvn	r2, #0
   1a7a0:	bl	1a1f4 <__assert_fail@plt+0x9068>
   1a7a4:	add	sp, sp, #52	; 0x34
   1a7a8:	ldrd	r4, [sp]
   1a7ac:	add	sp, sp, #8
   1a7b0:	pop	{pc}		; (ldr pc, [sp], #4)
   1a7b4:	strd	r4, [sp, #-16]!
   1a7b8:	mov	r5, r2
   1a7bc:	mov	r4, r0
   1a7c0:	str	r6, [sp, #8]
   1a7c4:	mov	r6, r3
   1a7c8:	str	lr, [sp, #12]
   1a7cc:	sub	sp, sp, #48	; 0x30
   1a7d0:	mov	r0, sp
   1a7d4:	bl	18890 <__assert_fail@plt+0x7704>
   1a7d8:	mov	r3, sp
   1a7dc:	mov	r2, r6
   1a7e0:	mov	r1, r5
   1a7e4:	mov	r0, r4
   1a7e8:	bl	1a1f4 <__assert_fail@plt+0x9068>
   1a7ec:	add	sp, sp, #48	; 0x30
   1a7f0:	ldrd	r4, [sp]
   1a7f4:	ldr	r6, [sp, #8]
   1a7f8:	add	sp, sp, #12
   1a7fc:	pop	{pc}		; (ldr pc, [sp], #4)
   1a800:	mov	r2, r1
   1a804:	mov	r1, r0
   1a808:	mov	r0, #0
   1a80c:	b	1a774 <__assert_fail@plt+0x95e8>
   1a810:	mov	r3, r2
   1a814:	mov	r2, r1
   1a818:	mov	r1, r0
   1a81c:	mov	r0, #0
   1a820:	b	1a7b4 <__assert_fail@plt+0x9628>
   1a824:	ldr	ip, [pc, #140]	; 1a8b8 <__assert_fail@plt+0x972c>
   1a828:	strd	r4, [sp, #-28]!	; 0xffffffe4
   1a82c:	ldrd	r4, [ip]
   1a830:	strd	r6, [sp, #8]
   1a834:	ldrd	r6, [ip, #8]
   1a838:	strd	r8, [sp, #16]
   1a83c:	lsr	r9, r2, #5
   1a840:	str	lr, [sp, #24]
   1a844:	sub	sp, sp, #52	; 0x34
   1a848:	and	lr, r2, #31
   1a84c:	add	r8, sp, #8
   1a850:	mov	r2, r1
   1a854:	strd	r4, [sp]
   1a858:	mov	r1, r0
   1a85c:	mov	r3, sp
   1a860:	strd	r6, [sp, #8]
   1a864:	mov	r0, #0
   1a868:	ldrd	r4, [ip, #16]
   1a86c:	ldrd	r6, [ip, #24]
   1a870:	strd	r4, [sp, #16]
   1a874:	ldrd	r4, [ip, #32]
   1a878:	strd	r6, [sp, #24]
   1a87c:	ldrd	r6, [ip, #40]	; 0x28
   1a880:	strd	r4, [sp, #32]
   1a884:	strd	r6, [sp, #40]	; 0x28
   1a888:	ldr	ip, [r8, r9, lsl #2]
   1a88c:	mvn	r4, ip, lsr lr
   1a890:	and	r4, r4, #1
   1a894:	eor	lr, ip, r4, lsl lr
   1a898:	str	lr, [r8, r9, lsl #2]
   1a89c:	bl	1a1f4 <__assert_fail@plt+0x9068>
   1a8a0:	add	sp, sp, #52	; 0x34
   1a8a4:	ldrd	r4, [sp]
   1a8a8:	ldrd	r6, [sp, #8]
   1a8ac:	ldrd	r8, [sp, #16]
   1a8b0:	add	sp, sp, #24
   1a8b4:	pop	{pc}		; (ldr pc, [sp], #4)
   1a8b8:			; <UNDEFINED> instruction: 0x0002e2b8
   1a8bc:	mov	r2, r1
   1a8c0:	mvn	r1, #0
   1a8c4:	b	1a824 <__assert_fail@plt+0x9698>
   1a8c8:	mov	r2, #58	; 0x3a
   1a8cc:	mvn	r1, #0
   1a8d0:	b	1a824 <__assert_fail@plt+0x9698>
   1a8d4:	mov	r2, #58	; 0x3a
   1a8d8:	b	1a824 <__assert_fail@plt+0x9698>
   1a8dc:	strd	r4, [sp, #-20]!	; 0xffffffec
   1a8e0:	strd	r6, [sp, #8]
   1a8e4:	mov	r6, r0
   1a8e8:	mov	r7, r2
   1a8ec:	str	lr, [sp, #16]
   1a8f0:	sub	sp, sp, #100	; 0x64
   1a8f4:	mov	r0, sp
   1a8f8:	bl	18890 <__assert_fail@plt+0x7704>
   1a8fc:	ldrd	r4, [sp, #8]
   1a900:	mov	r1, r7
   1a904:	mov	r0, r6
   1a908:	add	r3, sp, #48	; 0x30
   1a90c:	mvn	r2, #0
   1a910:	ldrd	r6, [sp]
   1a914:	strd	r4, [sp, #56]	; 0x38
   1a918:	ldrd	r4, [sp, #16]
   1a91c:	strd	r6, [sp, #48]	; 0x30
   1a920:	ldrd	r6, [sp, #32]
   1a924:	ldr	lr, [sp, #60]	; 0x3c
   1a928:	strd	r4, [sp, #64]	; 0x40
   1a92c:	ldrd	r4, [sp, #24]
   1a930:	mvn	ip, lr
   1a934:	and	ip, ip, #67108864	; 0x4000000
   1a938:	strd	r4, [sp, #72]	; 0x48
   1a93c:	eor	ip, ip, lr
   1a940:	ldrd	r4, [sp, #40]	; 0x28
   1a944:	str	ip, [sp, #60]	; 0x3c
   1a948:	strd	r6, [sp, #80]	; 0x50
   1a94c:	strd	r4, [sp, #88]	; 0x58
   1a950:	bl	1a1f4 <__assert_fail@plt+0x9068>
   1a954:	add	sp, sp, #100	; 0x64
   1a958:	ldrd	r4, [sp]
   1a95c:	ldrd	r6, [sp, #8]
   1a960:	add	sp, sp, #16
   1a964:	pop	{pc}		; (ldr pc, [sp], #4)
   1a968:	ldr	ip, [pc, #156]	; 1aa0c <__assert_fail@plt+0x9880>
   1a96c:	cmp	r2, #0
   1a970:	cmpne	r1, #0
   1a974:	strd	r4, [sp, #-32]!	; 0xffffffe0
   1a978:	strd	r6, [sp, #8]
   1a97c:	mov	r6, r2
   1a980:	str	r8, [sp, #16]
   1a984:	mov	r8, r3
   1a988:	strd	sl, [sp, #20]
   1a98c:	ldrd	r4, [ip]
   1a990:	str	lr, [sp, #28]
   1a994:	sub	sp, sp, #48	; 0x30
   1a998:	mov	lr, #10
   1a99c:	ldrd	r2, [ip, #8]
   1a9a0:	ldrd	sl, [ip, #16]
   1a9a4:	strd	r4, [sp]
   1a9a8:	ldrd	r4, [ip, #32]
   1a9ac:	str	lr, [sp]
   1a9b0:	strd	r2, [sp, #8]
   1a9b4:	strd	sl, [sp, #16]
   1a9b8:	ldrd	r2, [ip, #24]
   1a9bc:	ldrd	sl, [ip, #40]	; 0x28
   1a9c0:	strd	r2, [sp, #24]
   1a9c4:	strd	r4, [sp, #32]
   1a9c8:	strd	sl, [sp, #40]	; 0x28
   1a9cc:	beq	1aa08 <__assert_fail@plt+0x987c>
   1a9d0:	ldr	r2, [sp, #80]	; 0x50
   1a9d4:	mov	r7, r1
   1a9d8:	mov	r3, sp
   1a9dc:	mov	r1, r8
   1a9e0:	str	r7, [sp, #40]	; 0x28
   1a9e4:	str	r6, [sp, #44]	; 0x2c
   1a9e8:	bl	1a1f4 <__assert_fail@plt+0x9068>
   1a9ec:	add	sp, sp, #48	; 0x30
   1a9f0:	ldrd	r4, [sp]
   1a9f4:	ldrd	r6, [sp, #8]
   1a9f8:	ldr	r8, [sp, #16]
   1a9fc:	ldrd	sl, [sp, #20]
   1aa00:	add	sp, sp, #28
   1aa04:	pop	{pc}		; (ldr pc, [sp], #4)
   1aa08:	bl	11168 <abort@plt>
   1aa0c:			; <UNDEFINED> instruction: 0x0002e2b8
   1aa10:	mvn	ip, #0
   1aa14:	push	{lr}		; (str lr, [sp, #-4]!)
   1aa18:	sub	sp, sp, #12
   1aa1c:	str	ip, [sp]
   1aa20:	bl	1a968 <__assert_fail@plt+0x97dc>
   1aa24:	add	sp, sp, #12
   1aa28:	pop	{pc}		; (ldr pc, [sp], #4)
   1aa2c:	mvn	ip, #0
   1aa30:	push	{lr}		; (str lr, [sp, #-4]!)
   1aa34:	sub	sp, sp, #12
   1aa38:	mov	r3, r2
   1aa3c:	mov	r2, r1
   1aa40:	mov	r1, r0
   1aa44:	mov	r0, #0
   1aa48:	str	ip, [sp]
   1aa4c:	bl	1a968 <__assert_fail@plt+0x97dc>
   1aa50:	add	sp, sp, #12
   1aa54:	pop	{pc}		; (ldr pc, [sp], #4)
   1aa58:	push	{lr}		; (str lr, [sp, #-4]!)
   1aa5c:	sub	sp, sp, #12
   1aa60:	str	r3, [sp]
   1aa64:	mov	r3, r2
   1aa68:	mov	r2, r1
   1aa6c:	mov	r1, r0
   1aa70:	mov	r0, #0
   1aa74:	bl	1a968 <__assert_fail@plt+0x97dc>
   1aa78:	add	sp, sp, #12
   1aa7c:	pop	{pc}		; (ldr pc, [sp], #4)
   1aa80:	ldr	r3, [pc]	; 1aa88 <__assert_fail@plt+0x98fc>
   1aa84:	b	1a1f4 <__assert_fail@plt+0x9068>
   1aa88:	andeq	lr, r2, r4, lsr r1
   1aa8c:	mov	r2, r1
   1aa90:	ldr	r3, [pc, #8]	; 1aaa0 <__assert_fail@plt+0x9914>
   1aa94:	mov	r1, r0
   1aa98:	mov	r0, #0
   1aa9c:	b	1a1f4 <__assert_fail@plt+0x9068>
   1aaa0:	andeq	lr, r2, r4, lsr r1
   1aaa4:	ldr	r3, [pc, #4]	; 1aab0 <__assert_fail@plt+0x9924>
   1aaa8:	mvn	r2, #0
   1aaac:	b	1a1f4 <__assert_fail@plt+0x9068>
   1aab0:	andeq	lr, r2, r4, lsr r1
   1aab4:	mov	r1, r0
   1aab8:	ldr	r3, [pc, #8]	; 1aac8 <__assert_fail@plt+0x993c>
   1aabc:	mvn	r2, #0
   1aac0:	mov	r0, #0
   1aac4:	b	1a1f4 <__assert_fail@plt+0x9068>
   1aac8:	andeq	lr, r2, r4, lsr r1
   1aacc:	mov	r2, #3
   1aad0:	mov	r1, #0
   1aad4:	b	1c1ac <__assert_fail@plt+0xb020>
   1aad8:	cmp	r1, #0
   1aadc:	strd	r4, [sp, #-16]!
   1aae0:	mov	ip, r3
   1aae4:	str	r6, [sp, #8]
   1aae8:	mov	r4, r0
   1aaec:	str	lr, [sp, #12]
   1aaf0:	sub	sp, sp, #32
   1aaf4:	ldr	r5, [sp, #48]	; 0x30
   1aaf8:	ldr	r6, [sp, #52]	; 0x34
   1aafc:	beq	1ac40 <__assert_fail@plt+0x9ab4>
   1ab00:	mov	r3, r1
   1ab04:	mov	r1, #1
   1ab08:	stm	sp, {r2, ip}
   1ab0c:	movw	r2, #55228	; 0xd7bc
   1ab10:	movt	r2, #1
   1ab14:	bl	110d8 <__fprintf_chk@plt>
   1ab18:	mov	r2, #5
   1ab1c:	movw	r1, #55248	; 0xd7d0
   1ab20:	movt	r1, #1
   1ab24:	mov	r0, #0
   1ab28:	bl	10f7c <dcgettext@plt>
   1ab2c:	movw	ip, #2022	; 0x7e6
   1ab30:	mov	r3, r0
   1ab34:	mov	r1, #1
   1ab38:	movw	r2, #55976	; 0xdaa8
   1ab3c:	movt	r2, #1
   1ab40:	mov	r0, r4
   1ab44:	str	ip, [sp]
   1ab48:	bl	110d8 <__fprintf_chk@plt>
   1ab4c:	mov	r1, r4
   1ab50:	mov	r0, #10
   1ab54:	bl	10f70 <fputc_unlocked@plt>
   1ab58:	mov	r2, #5
   1ab5c:	movw	r1, #55252	; 0xd7d4
   1ab60:	movt	r1, #1
   1ab64:	mov	r0, #0
   1ab68:	bl	10f7c <dcgettext@plt>
   1ab6c:	mov	r2, r0
   1ab70:	mov	r1, #1
   1ab74:	movw	r3, #55424	; 0xd880
   1ab78:	movt	r3, #1
   1ab7c:	mov	r0, r4
   1ab80:	bl	110d8 <__fprintf_chk@plt>
   1ab84:	mov	r1, r4
   1ab88:	mov	r0, #10
   1ab8c:	bl	10f70 <fputc_unlocked@plt>
   1ab90:	cmp	r6, #9
   1ab94:	ldrls	pc, [pc, r6, lsl #2]
   1ab98:	b	1aeac <__assert_fail@plt+0x9d20>
   1ab9c:	andeq	sl, r1, ip, lsr #24
   1aba0:	andeq	sl, r1, ip, asr ip
   1aba4:	muleq	r1, r8, ip
   1aba8:	ldrdeq	sl, [r1], -r8
   1abac:	andeq	sl, r1, r0, lsr #26
   1abb0:	andeq	sl, r1, r8, asr sp
   1abb4:	andeq	sl, r1, r0, lsr #27
   1abb8:	strdeq	sl, [r1], -r4
   1abbc:	andeq	sl, r1, ip, asr #28
   1abc0:	andeq	sl, r1, r4, asr #23
   1abc4:	movw	r1, #55728	; 0xd9b0
   1abc8:	movt	r1, #1
   1abcc:	mov	r2, #5
   1abd0:	mov	r0, #0
   1abd4:	bl	10f7c <dcgettext@plt>
   1abd8:	ldr	lr, [r5, #4]
   1abdc:	mov	r2, r0
   1abe0:	mov	r1, #1
   1abe4:	mov	r0, r4
   1abe8:	ldr	r3, [r5, #8]
   1abec:	ldr	ip, [r5, #32]
   1abf0:	str	lr, [sp]
   1abf4:	ldr	lr, [r5, #12]
   1abf8:	str	ip, [sp, #28]
   1abfc:	ldr	ip, [r5, #28]
   1ac00:	str	r3, [sp, #4]
   1ac04:	ldr	r3, [r5, #16]
   1ac08:	str	lr, [sp, #8]
   1ac0c:	ldr	lr, [r5, #20]
   1ac10:	str	ip, [sp, #24]
   1ac14:	ldr	ip, [r5, #24]
   1ac18:	str	r3, [sp, #12]
   1ac1c:	ldr	r3, [r5]
   1ac20:	str	lr, [sp, #16]
   1ac24:	str	ip, [sp, #20]
   1ac28:	bl	110d8 <__fprintf_chk@plt>
   1ac2c:	add	sp, sp, #32
   1ac30:	ldrd	r4, [sp]
   1ac34:	ldr	r6, [sp, #8]
   1ac38:	add	sp, sp, #12
   1ac3c:	pop	{pc}		; (ldr pc, [sp], #4)
   1ac40:	mov	r3, r2
   1ac44:	mov	r1, #1
   1ac48:	str	ip, [sp]
   1ac4c:	movw	r2, #55240	; 0xd7c8
   1ac50:	movt	r2, #1
   1ac54:	bl	110d8 <__fprintf_chk@plt>
   1ac58:	b	1ab18 <__assert_fail@plt+0x998c>
   1ac5c:	mov	r2, #5
   1ac60:	movw	r1, #55460	; 0xd8a4
   1ac64:	movt	r1, #1
   1ac68:	mov	r0, #0
   1ac6c:	bl	10f7c <dcgettext@plt>
   1ac70:	ldr	r3, [r5]
   1ac74:	mov	r2, r0
   1ac78:	mov	r1, #1
   1ac7c:	mov	r0, r4
   1ac80:	add	sp, sp, #32
   1ac84:	ldrd	r4, [sp]
   1ac88:	ldr	r6, [sp, #8]
   1ac8c:	ldr	lr, [sp, #12]
   1ac90:	add	sp, sp, #16
   1ac94:	b	110d8 <__fprintf_chk@plt>
   1ac98:	mov	r2, #5
   1ac9c:	movw	r1, #55476	; 0xd8b4
   1aca0:	movt	r1, #1
   1aca4:	mov	r0, #0
   1aca8:	bl	10f7c <dcgettext@plt>
   1acac:	ldm	r5, {r3, ip}
   1acb0:	mov	r2, r0
   1acb4:	mov	r1, #1
   1acb8:	mov	r0, r4
   1acbc:	str	ip, [sp, #48]	; 0x30
   1acc0:	add	sp, sp, #32
   1acc4:	ldrd	r4, [sp]
   1acc8:	ldr	r6, [sp, #8]
   1accc:	ldr	lr, [sp, #12]
   1acd0:	add	sp, sp, #16
   1acd4:	b	110d8 <__fprintf_chk@plt>
   1acd8:	mov	r2, #5
   1acdc:	movw	r1, #55500	; 0xd8cc
   1ace0:	movt	r1, #1
   1ace4:	mov	r0, #0
   1ace8:	bl	10f7c <dcgettext@plt>
   1acec:	ldm	r5, {r3, lr}
   1acf0:	mov	r2, r0
   1acf4:	mov	r1, #1
   1acf8:	mov	r0, r4
   1acfc:	ldr	ip, [r5, #8]
   1ad00:	str	lr, [sp, #48]	; 0x30
   1ad04:	str	ip, [sp, #52]	; 0x34
   1ad08:	add	sp, sp, #32
   1ad0c:	ldrd	r4, [sp]
   1ad10:	ldr	r6, [sp, #8]
   1ad14:	ldr	lr, [sp, #12]
   1ad18:	add	sp, sp, #16
   1ad1c:	b	110d8 <__fprintf_chk@plt>
   1ad20:	mov	r2, #5
   1ad24:	movw	r1, #55528	; 0xd8e8
   1ad28:	movt	r1, #1
   1ad2c:	mov	r0, #0
   1ad30:	bl	10f7c <dcgettext@plt>
   1ad34:	ldmib	r5, {r3, ip, lr}
   1ad38:	mov	r2, r0
   1ad3c:	mov	r1, #1
   1ad40:	mov	r0, r4
   1ad44:	str	r3, [sp]
   1ad48:	ldr	r3, [r5]
   1ad4c:	stmib	sp, {ip, lr}
   1ad50:	bl	110d8 <__fprintf_chk@plt>
   1ad54:	b	1ac2c <__assert_fail@plt+0x9aa0>
   1ad58:	mov	r2, #5
   1ad5c:	movw	r1, #55560	; 0xd908
   1ad60:	movt	r1, #1
   1ad64:	mov	r0, #0
   1ad68:	bl	10f7c <dcgettext@plt>
   1ad6c:	ldmib	r5, {ip, lr}
   1ad70:	mov	r2, r0
   1ad74:	mov	r1, #1
   1ad78:	mov	r0, r4
   1ad7c:	ldr	r3, [r5, #16]
   1ad80:	str	ip, [sp]
   1ad84:	ldr	ip, [r5, #12]
   1ad88:	str	r3, [sp, #12]
   1ad8c:	ldr	r3, [r5]
   1ad90:	str	lr, [sp, #4]
   1ad94:	str	ip, [sp, #8]
   1ad98:	bl	110d8 <__fprintf_chk@plt>
   1ad9c:	b	1ac2c <__assert_fail@plt+0x9aa0>
   1ada0:	mov	r2, #5
   1ada4:	movw	r1, #55596	; 0xd92c
   1ada8:	movt	r1, #1
   1adac:	mov	r0, #0
   1adb0:	bl	10f7c <dcgettext@plt>
   1adb4:	ldr	lr, [r5, #4]
   1adb8:	mov	r2, r0
   1adbc:	mov	r1, #1
   1adc0:	mov	r0, r4
   1adc4:	ldr	r3, [r5, #8]
   1adc8:	ldr	ip, [r5, #20]
   1adcc:	str	lr, [sp]
   1add0:	ldr	lr, [r5, #12]
   1add4:	str	ip, [sp, #16]
   1add8:	ldr	ip, [r5, #16]
   1addc:	str	r3, [sp, #4]
   1ade0:	ldr	r3, [r5]
   1ade4:	str	lr, [sp, #8]
   1ade8:	str	ip, [sp, #12]
   1adec:	bl	110d8 <__fprintf_chk@plt>
   1adf0:	b	1ac2c <__assert_fail@plt+0x9aa0>
   1adf4:	mov	r2, #5
   1adf8:	movw	r1, #55636	; 0xd954
   1adfc:	movt	r1, #1
   1ae00:	mov	r0, #0
   1ae04:	bl	10f7c <dcgettext@plt>
   1ae08:	ldmib	r5, {r3, ip}
   1ae0c:	mov	r2, r0
   1ae10:	mov	r1, #1
   1ae14:	mov	r0, r4
   1ae18:	ldr	lr, [r5, #24]
   1ae1c:	str	r3, [sp]
   1ae20:	ldr	r3, [r5, #12]
   1ae24:	str	lr, [sp, #20]
   1ae28:	ldr	lr, [r5, #20]
   1ae2c:	str	ip, [sp, #4]
   1ae30:	ldr	ip, [r5, #16]
   1ae34:	str	r3, [sp, #8]
   1ae38:	ldr	r3, [r5]
   1ae3c:	str	ip, [sp, #12]
   1ae40:	str	lr, [sp, #16]
   1ae44:	bl	110d8 <__fprintf_chk@plt>
   1ae48:	b	1ac2c <__assert_fail@plt+0x9aa0>
   1ae4c:	mov	r2, #5
   1ae50:	movw	r1, #55680	; 0xd980
   1ae54:	movt	r1, #1
   1ae58:	mov	r0, #0
   1ae5c:	bl	10f7c <dcgettext@plt>
   1ae60:	ldmib	r5, {ip, lr}
   1ae64:	mov	r2, r0
   1ae68:	mov	r1, #1
   1ae6c:	mov	r0, r4
   1ae70:	ldr	r3, [r5, #28]
   1ae74:	str	ip, [sp]
   1ae78:	ldr	ip, [r5, #12]
   1ae7c:	str	r3, [sp, #24]
   1ae80:	ldr	r3, [r5, #24]
   1ae84:	str	lr, [sp, #4]
   1ae88:	ldr	lr, [r5, #16]
   1ae8c:	str	ip, [sp, #8]
   1ae90:	ldr	ip, [r5, #20]
   1ae94:	str	r3, [sp, #20]
   1ae98:	ldr	r3, [r5]
   1ae9c:	str	lr, [sp, #12]
   1aea0:	str	ip, [sp, #16]
   1aea4:	bl	110d8 <__fprintf_chk@plt>
   1aea8:	b	1ac2c <__assert_fail@plt+0x9aa0>
   1aeac:	movw	r1, #55780	; 0xd9e4
   1aeb0:	movt	r1, #1
   1aeb4:	b	1abcc <__assert_fail@plt+0x9a40>
   1aeb8:	strd	r4, [sp, #-12]!
   1aebc:	str	lr, [sp, #8]
   1aec0:	sub	sp, sp, #12
   1aec4:	ldr	r5, [sp, #24]
   1aec8:	ldr	ip, [r5]
   1aecc:	cmp	ip, #0
   1aed0:	beq	1aeec <__assert_fail@plt+0x9d60>
   1aed4:	mov	lr, r5
   1aed8:	mov	ip, #0
   1aedc:	ldr	r4, [lr, #4]!
   1aee0:	add	ip, ip, #1
   1aee4:	cmp	r4, #0
   1aee8:	bne	1aedc <__assert_fail@plt+0x9d50>
   1aeec:	stm	sp, {r5, ip}
   1aef0:	bl	1aad8 <__assert_fail@plt+0x994c>
   1aef4:	add	sp, sp, #12
   1aef8:	ldrd	r4, [sp]
   1aefc:	add	sp, sp, #8
   1af00:	pop	{pc}		; (ldr pc, [sp], #4)
   1af04:	strd	r4, [sp, #-16]!
   1af08:	mov	ip, #0
   1af0c:	str	r6, [sp, #8]
   1af10:	str	lr, [sp, #12]
   1af14:	sub	sp, sp, #48	; 0x30
   1af18:	ldr	r5, [sp, #64]	; 0x40
   1af1c:	add	r6, sp, #8
   1af20:	mov	r4, r6
   1af24:	ldr	lr, [r5], #4
   1af28:	cmp	lr, #0
   1af2c:	str	lr, [r4], #4
   1af30:	beq	1af40 <__assert_fail@plt+0x9db4>
   1af34:	add	ip, ip, #1
   1af38:	cmp	ip, #10
   1af3c:	bne	1af24 <__assert_fail@plt+0x9d98>
   1af40:	stm	sp, {r6, ip}
   1af44:	bl	1aad8 <__assert_fail@plt+0x994c>
   1af48:	add	sp, sp, #48	; 0x30
   1af4c:	ldrd	r4, [sp]
   1af50:	ldr	r6, [sp, #8]
   1af54:	add	sp, sp, #12
   1af58:	pop	{pc}		; (ldr pc, [sp], #4)
   1af5c:	push	{r3}		; (str r3, [sp, #-4]!)
   1af60:	mov	ip, #0
   1af64:	strd	r4, [sp, #-12]!
   1af68:	str	lr, [sp, #8]
   1af6c:	sub	sp, sp, #56	; 0x38
   1af70:	add	r3, sp, #72	; 0x48
   1af74:	add	r5, sp, #16
   1af78:	mov	r4, r3
   1af7c:	mov	lr, r5
   1af80:	str	r3, [sp, #12]
   1af84:	ldr	r3, [r4], #4
   1af88:	cmp	r3, #0
   1af8c:	str	r3, [lr], #4
   1af90:	beq	1afa0 <__assert_fail@plt+0x9e14>
   1af94:	add	ip, ip, #1
   1af98:	cmp	ip, #10
   1af9c:	bne	1af84 <__assert_fail@plt+0x9df8>
   1afa0:	ldr	r3, [sp, #68]	; 0x44
   1afa4:	stm	sp, {r5, ip}
   1afa8:	bl	1aad8 <__assert_fail@plt+0x994c>
   1afac:	add	sp, sp, #56	; 0x38
   1afb0:	ldrd	r4, [sp]
   1afb4:	ldr	lr, [sp, #8]
   1afb8:	add	sp, sp, #12
   1afbc:	add	sp, sp, #4
   1afc0:	bx	lr
   1afc4:	movw	r3, #57732	; 0xe184
   1afc8:	movt	r3, #2
   1afcc:	str	r4, [sp, #-8]!
   1afd0:	mov	r0, #10
   1afd4:	ldr	r1, [r3]
   1afd8:	str	lr, [sp, #4]
   1afdc:	bl	10f70 <fputc_unlocked@plt>
   1afe0:	mov	r2, #5
   1afe4:	movw	r1, #55840	; 0xda20
   1afe8:	movt	r1, #1
   1afec:	mov	r0, #0
   1aff0:	bl	10f7c <dcgettext@plt>
   1aff4:	mov	r1, r0
   1aff8:	movw	r2, #55860	; 0xda34
   1affc:	movt	r2, #1
   1b000:	mov	r0, #1
   1b004:	bl	110c0 <__printf_chk@plt>
   1b008:	mov	r2, #5
   1b00c:	movw	r1, #55884	; 0xda4c
   1b010:	movt	r1, #1
   1b014:	mov	r0, #0
   1b018:	bl	10f7c <dcgettext@plt>
   1b01c:	mov	r1, r0
   1b020:	movw	r3, #53160	; 0xcfa8
   1b024:	movt	r3, #1
   1b028:	movw	r2, #53200	; 0xcfd0
   1b02c:	movt	r2, #1
   1b030:	mov	r0, #1
   1b034:	bl	110c0 <__printf_chk@plt>
   1b038:	mov	r2, #5
   1b03c:	movw	r1, #55904	; 0xda60
   1b040:	movt	r1, #1
   1b044:	mov	r0, #0
   1b048:	bl	10f7c <dcgettext@plt>
   1b04c:	mov	r1, r0
   1b050:	movw	r2, #55944	; 0xda88
   1b054:	movt	r2, #1
   1b058:	mov	r0, #1
   1b05c:	ldr	r4, [sp]
   1b060:	ldr	lr, [sp, #4]
   1b064:	add	sp, sp, #8
   1b068:	b	110c0 <__printf_chk@plt>
   1b06c:	str	r4, [sp, #-8]!
   1b070:	str	lr, [sp, #4]
   1b074:	bl	1c090 <__assert_fail@plt+0xaf04>
   1b078:	cmp	r0, #0
   1b07c:	beq	1b08c <__assert_fail@plt+0x9f00>
   1b080:	ldr	r4, [sp]
   1b084:	add	sp, sp, #4
   1b088:	pop	{pc}		; (ldr pc, [sp], #4)
   1b08c:	bl	1b4e4 <__assert_fail@plt+0xa358>
   1b090:	str	r4, [sp, #-8]!
   1b094:	str	lr, [sp, #4]
   1b098:	bl	1c090 <__assert_fail@plt+0xaf04>
   1b09c:	cmp	r0, #0
   1b0a0:	beq	1b0b0 <__assert_fail@plt+0x9f24>
   1b0a4:	ldr	r4, [sp]
   1b0a8:	add	sp, sp, #4
   1b0ac:	pop	{pc}		; (ldr pc, [sp], #4)
   1b0b0:	bl	1b4e4 <__assert_fail@plt+0xa358>
   1b0b4:	str	r4, [sp, #-8]!
   1b0b8:	str	lr, [sp, #4]
   1b0bc:	bl	1c090 <__assert_fail@plt+0xaf04>
   1b0c0:	cmp	r0, #0
   1b0c4:	beq	1b0d4 <__assert_fail@plt+0x9f48>
   1b0c8:	ldr	r4, [sp]
   1b0cc:	add	sp, sp, #4
   1b0d0:	pop	{pc}		; (ldr pc, [sp], #4)
   1b0d4:	bl	1b4e4 <__assert_fail@plt+0xa358>
   1b0d8:	strd	r4, [sp, #-16]!
   1b0dc:	mov	r5, r0
   1b0e0:	mov	r4, r1
   1b0e4:	str	r6, [sp, #8]
   1b0e8:	str	lr, [sp, #12]
   1b0ec:	bl	1c0cc <__assert_fail@plt+0xaf40>
   1b0f0:	cmp	r0, #0
   1b0f4:	beq	1b108 <__assert_fail@plt+0x9f7c>
   1b0f8:	ldrd	r4, [sp]
   1b0fc:	ldr	r6, [sp, #8]
   1b100:	add	sp, sp, #12
   1b104:	pop	{pc}		; (ldr pc, [sp], #4)
   1b108:	adds	r4, r4, #0
   1b10c:	movne	r4, #1
   1b110:	cmp	r5, #0
   1b114:	moveq	r4, #1
   1b118:	cmp	r4, #0
   1b11c:	beq	1b0f8 <__assert_fail@plt+0x9f6c>
   1b120:	bl	1b4e4 <__assert_fail@plt+0xa358>
   1b124:	cmp	r1, #0
   1b128:	orreq	r1, r1, #1
   1b12c:	str	r4, [sp, #-8]!
   1b130:	str	lr, [sp, #4]
   1b134:	bl	1c0cc <__assert_fail@plt+0xaf40>
   1b138:	cmp	r0, #0
   1b13c:	beq	1b14c <__assert_fail@plt+0x9fc0>
   1b140:	ldr	r4, [sp]
   1b144:	add	sp, sp, #4
   1b148:	pop	{pc}		; (ldr pc, [sp], #4)
   1b14c:	bl	1b4e4 <__assert_fail@plt+0xa358>
   1b150:	strd	r4, [sp, #-16]!
   1b154:	mov	r4, r0
   1b158:	mov	r5, r2
   1b15c:	str	r6, [sp, #8]
   1b160:	mov	r6, r1
   1b164:	str	lr, [sp, #12]
   1b168:	bl	1c450 <__assert_fail@plt+0xb2c4>
   1b16c:	cmp	r0, #0
   1b170:	beq	1b184 <__assert_fail@plt+0x9ff8>
   1b174:	ldrd	r4, [sp]
   1b178:	ldr	r6, [sp, #8]
   1b17c:	add	sp, sp, #12
   1b180:	pop	{pc}		; (ldr pc, [sp], #4)
   1b184:	cmp	r4, #0
   1b188:	beq	1b198 <__assert_fail@plt+0xa00c>
   1b18c:	cmp	r6, #0
   1b190:	cmpne	r5, #0
   1b194:	beq	1b174 <__assert_fail@plt+0x9fe8>
   1b198:	bl	1b4e4 <__assert_fail@plt+0xa358>
   1b19c:	b	1b150 <__assert_fail@plt+0x9fc4>
   1b1a0:	cmp	r2, #0
   1b1a4:	cmpne	r1, #0
   1b1a8:	str	r4, [sp, #-8]!
   1b1ac:	moveq	r2, #1
   1b1b0:	str	lr, [sp, #4]
   1b1b4:	moveq	r1, r2
   1b1b8:	bl	1c450 <__assert_fail@plt+0xb2c4>
   1b1bc:	cmp	r0, #0
   1b1c0:	beq	1b1d0 <__assert_fail@plt+0xa044>
   1b1c4:	ldr	r4, [sp]
   1b1c8:	add	sp, sp, #4
   1b1cc:	pop	{pc}		; (ldr pc, [sp], #4)
   1b1d0:	bl	1b4e4 <__assert_fail@plt+0xa358>
   1b1d4:	mov	r2, r1
   1b1d8:	mov	r1, r0
   1b1dc:	mov	r0, #0
   1b1e0:	b	1b150 <__assert_fail@plt+0x9fc4>
   1b1e4:	mov	r2, r1
   1b1e8:	mov	r1, r0
   1b1ec:	mov	r0, #0
   1b1f0:	b	1b1a0 <__assert_fail@plt+0xa014>
   1b1f4:	cmp	r0, #0
   1b1f8:	strd	r4, [sp, #-16]!
   1b1fc:	mov	r5, r1
   1b200:	ldr	r4, [r1]
   1b204:	str	r6, [sp, #8]
   1b208:	str	lr, [sp, #12]
   1b20c:	beq	1b23c <__assert_fail@plt+0xa0b0>
   1b210:	lsr	r3, r4, #1
   1b214:	add	r3, r3, #1
   1b218:	adds	r4, r4, r3
   1b21c:	bcs	1b258 <__assert_fail@plt+0xa0cc>
   1b220:	mov	r1, r4
   1b224:	bl	1b150 <__assert_fail@plt+0x9fc4>
   1b228:	ldr	r6, [sp, #8]
   1b22c:	str	r4, [r5]
   1b230:	ldrd	r4, [sp]
   1b234:	add	sp, sp, #12
   1b238:	pop	{pc}		; (ldr pc, [sp], #4)
   1b23c:	cmp	r4, #0
   1b240:	bne	1b220 <__assert_fail@plt+0xa094>
   1b244:	mov	r4, #64	; 0x40
   1b248:	udiv	r4, r4, r2
   1b24c:	cmp	r2, #64	; 0x40
   1b250:	addhi	r4, r4, #1
   1b254:	b	1b220 <__assert_fail@plt+0xa094>
   1b258:	bl	1b4e4 <__assert_fail@plt+0xa358>
   1b25c:	mov	r2, #1
   1b260:	b	1b1f4 <__assert_fail@plt+0xa068>
   1b264:	ldr	ip, [r1]
   1b268:	strd	r4, [sp, #-32]!	; 0xffffffe0
   1b26c:	mov	r5, r1
   1b270:	strd	r6, [sp, #8]
   1b274:	str	lr, [sp, #28]
   1b278:	strd	r8, [sp, #16]
   1b27c:	asr	lr, ip, #1
   1b280:	ldr	r8, [sp, #32]
   1b284:	str	sl, [sp, #24]
   1b288:	adds	r4, ip, lr
   1b28c:	mvn	lr, r3
   1b290:	lsr	lr, lr, #31
   1b294:	mvnvs	r4, #-2147483648	; 0x80000000
   1b298:	cmp	r3, r4
   1b29c:	movge	r1, #0
   1b2a0:	andlt	r1, lr, #1
   1b2a4:	cmp	r1, #0
   1b2a8:	movne	r4, r3
   1b2ac:	smull	r6, r7, r4, r8
   1b2b0:	cmp	r7, r6, asr #31
   1b2b4:	bne	1b33c <__assert_fail@plt+0xa1b0>
   1b2b8:	cmp	r6, #63	; 0x3f
   1b2bc:	mov	r1, r6
   1b2c0:	ble	1b324 <__assert_fail@plt+0xa198>
   1b2c4:	cmp	r0, #0
   1b2c8:	sub	r6, r4, ip
   1b2cc:	streq	r0, [r5]
   1b2d0:	cmp	r6, r2
   1b2d4:	bge	1b304 <__assert_fail@plt+0xa178>
   1b2d8:	adds	r4, ip, r2
   1b2dc:	bvs	1b338 <__assert_fail@plt+0xa1ac>
   1b2e0:	cmp	r4, r3
   1b2e4:	movle	r3, #0
   1b2e8:	andgt	r3, lr, #1
   1b2ec:	cmp	r3, #0
   1b2f0:	bne	1b338 <__assert_fail@plt+0xa1ac>
   1b2f4:	smull	r8, r9, r4, r8
   1b2f8:	cmp	r9, r8, asr #31
   1b2fc:	mov	r1, r8
   1b300:	bne	1b338 <__assert_fail@plt+0xa1ac>
   1b304:	bl	1b0d8 <__assert_fail@plt+0x9f4c>
   1b308:	ldrd	r6, [sp, #8]
   1b30c:	ldrd	r8, [sp, #16]
   1b310:	ldr	sl, [sp, #24]
   1b314:	str	r4, [r5]
   1b318:	ldrd	r4, [sp]
   1b31c:	add	sp, sp, #28
   1b320:	pop	{pc}		; (ldr pc, [sp], #4)
   1b324:	mov	r6, #64	; 0x40
   1b328:	sdiv	r4, r6, r8
   1b32c:	mls	r1, r8, r4, r6
   1b330:	sub	r1, r6, r1
   1b334:	b	1b2c4 <__assert_fail@plt+0xa138>
   1b338:	bl	1b4e4 <__assert_fail@plt+0xa358>
   1b33c:	mvn	r6, #-2147483648	; 0x80000000
   1b340:	b	1b328 <__assert_fail@plt+0xa19c>
   1b344:	mov	r1, #1
   1b348:	str	r4, [sp, #-8]!
   1b34c:	str	lr, [sp, #4]
   1b350:	bl	1c01c <__assert_fail@plt+0xae90>
   1b354:	cmp	r0, #0
   1b358:	beq	1b368 <__assert_fail@plt+0xa1dc>
   1b35c:	ldr	r4, [sp]
   1b360:	add	sp, sp, #4
   1b364:	pop	{pc}		; (ldr pc, [sp], #4)
   1b368:	bl	1b4e4 <__assert_fail@plt+0xa358>
   1b36c:	mov	r1, #1
   1b370:	str	r4, [sp, #-8]!
   1b374:	str	lr, [sp, #4]
   1b378:	bl	1c01c <__assert_fail@plt+0xae90>
   1b37c:	cmp	r0, #0
   1b380:	beq	1b390 <__assert_fail@plt+0xa204>
   1b384:	ldr	r4, [sp]
   1b388:	add	sp, sp, #4
   1b38c:	pop	{pc}		; (ldr pc, [sp], #4)
   1b390:	bl	1b4e4 <__assert_fail@plt+0xa358>
   1b394:	str	r4, [sp, #-8]!
   1b398:	str	lr, [sp, #4]
   1b39c:	bl	1c01c <__assert_fail@plt+0xae90>
   1b3a0:	cmp	r0, #0
   1b3a4:	beq	1b3b4 <__assert_fail@plt+0xa228>
   1b3a8:	ldr	r4, [sp]
   1b3ac:	add	sp, sp, #4
   1b3b0:	pop	{pc}		; (ldr pc, [sp], #4)
   1b3b4:	bl	1b4e4 <__assert_fail@plt+0xa358>
   1b3b8:	str	r4, [sp, #-8]!
   1b3bc:	str	lr, [sp, #4]
   1b3c0:	bl	1c01c <__assert_fail@plt+0xae90>
   1b3c4:	cmp	r0, #0
   1b3c8:	beq	1b3d8 <__assert_fail@plt+0xa24c>
   1b3cc:	ldr	r4, [sp]
   1b3d0:	add	sp, sp, #4
   1b3d4:	pop	{pc}		; (ldr pc, [sp], #4)
   1b3d8:	bl	1b4e4 <__assert_fail@plt+0xa358>
   1b3dc:	strd	r4, [sp, #-16]!
   1b3e0:	mov	r4, r1
   1b3e4:	str	r6, [sp, #8]
   1b3e8:	mov	r6, r0
   1b3ec:	mov	r0, r1
   1b3f0:	str	lr, [sp, #12]
   1b3f4:	bl	1c090 <__assert_fail@plt+0xaf04>
   1b3f8:	subs	r5, r0, #0
   1b3fc:	beq	1b420 <__assert_fail@plt+0xa294>
   1b400:	mov	r2, r4
   1b404:	mov	r1, r6
   1b408:	bl	10f34 <memcpy@plt>
   1b40c:	mov	r0, r5
   1b410:	ldrd	r4, [sp]
   1b414:	ldr	r6, [sp, #8]
   1b418:	add	sp, sp, #12
   1b41c:	pop	{pc}		; (ldr pc, [sp], #4)
   1b420:	bl	1b4e4 <__assert_fail@plt+0xa358>
   1b424:	strd	r4, [sp, #-16]!
   1b428:	mov	r4, r1
   1b42c:	str	r6, [sp, #8]
   1b430:	mov	r6, r0
   1b434:	mov	r0, r1
   1b438:	str	lr, [sp, #12]
   1b43c:	bl	1c090 <__assert_fail@plt+0xaf04>
   1b440:	subs	r5, r0, #0
   1b444:	beq	1b468 <__assert_fail@plt+0xa2dc>
   1b448:	mov	r2, r4
   1b44c:	mov	r1, r6
   1b450:	bl	10f34 <memcpy@plt>
   1b454:	mov	r0, r5
   1b458:	ldrd	r4, [sp]
   1b45c:	ldr	r6, [sp, #8]
   1b460:	add	sp, sp, #12
   1b464:	pop	{pc}		; (ldr pc, [sp], #4)
   1b468:	bl	1b4e4 <__assert_fail@plt+0xa358>
   1b46c:	strd	r4, [sp, #-16]!
   1b470:	mov	r4, r1
   1b474:	str	r6, [sp, #8]
   1b478:	mov	r6, r0
   1b47c:	add	r0, r1, #1
   1b480:	str	lr, [sp, #12]
   1b484:	bl	1c090 <__assert_fail@plt+0xaf04>
   1b488:	subs	r5, r0, #0
   1b48c:	beq	1b4b8 <__assert_fail@plt+0xa32c>
   1b490:	mov	r3, #0
   1b494:	mov	r1, r6
   1b498:	mov	r2, r4
   1b49c:	strb	r3, [r5, r4]
   1b4a0:	bl	10f34 <memcpy@plt>
   1b4a4:	mov	r0, r5
   1b4a8:	ldrd	r4, [sp]
   1b4ac:	ldr	r6, [sp, #8]
   1b4b0:	add	sp, sp, #12
   1b4b4:	pop	{pc}		; (ldr pc, [sp], #4)
   1b4b8:	bl	1b4e4 <__assert_fail@plt+0xa358>
   1b4bc:	str	r4, [sp, #-8]!
   1b4c0:	mov	r4, r0
   1b4c4:	str	lr, [sp, #4]
   1b4c8:	bl	11078 <strlen@plt>
   1b4cc:	add	r1, r0, #1
   1b4d0:	mov	r0, r4
   1b4d4:	ldr	r4, [sp]
   1b4d8:	ldr	lr, [sp, #4]
   1b4dc:	add	sp, sp, #8
   1b4e0:	b	1b3dc <__assert_fail@plt+0xa250>
   1b4e4:	movw	r3, #57632	; 0xe120
   1b4e8:	movt	r3, #2
   1b4ec:	str	r4, [sp, #-8]!
   1b4f0:	ldr	r4, [r3]
   1b4f4:	mov	r2, #5
   1b4f8:	movw	r1, #56024	; 0xdad8
   1b4fc:	movt	r1, #1
   1b500:	mov	r0, #0
   1b504:	str	lr, [sp, #4]
   1b508:	bl	10f7c <dcgettext@plt>
   1b50c:	mov	r3, r0
   1b510:	movw	r2, #53428	; 0xd0b4
   1b514:	movt	r2, #1
   1b518:	mov	r1, #0
   1b51c:	mov	r0, r4
   1b520:	bl	11000 <error@plt>
   1b524:	bl	11168 <abort@plt>
   1b528:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1b52c:	strd	r6, [sp, #8]
   1b530:	mov	r6, r2
   1b534:	mov	r7, r3
   1b538:	str	r8, [sp, #16]
   1b53c:	mov	r2, r1
   1b540:	mov	r1, #0
   1b544:	str	lr, [sp, #20]
   1b548:	sub	sp, sp, #16
   1b54c:	mov	r8, r0
   1b550:	ldr	ip, [sp, #48]	; 0x30
   1b554:	add	r3, sp, #8
   1b558:	str	ip, [sp]
   1b55c:	bl	1b674 <__assert_fail@plt+0xa4e8>
   1b560:	subs	r4, r0, #0
   1b564:	bne	1b5b4 <__assert_fail@plt+0xa428>
   1b568:	ldrd	r4, [sp, #8]
   1b56c:	ldrd	r0, [sp, #40]	; 0x28
   1b570:	cmp	r5, r7
   1b574:	cmpeq	r4, r6
   1b578:	movcc	r3, #1
   1b57c:	movcs	r3, #0
   1b580:	cmp	r5, r1
   1b584:	cmpeq	r4, r0
   1b588:	orrhi	r3, r3, #1
   1b58c:	cmp	r3, #0
   1b590:	bne	1b634 <__assert_fail@plt+0xa4a8>
   1b594:	mov	r0, r4
   1b598:	mov	r1, r5
   1b59c:	add	sp, sp, #16
   1b5a0:	ldrd	r4, [sp]
   1b5a4:	ldrd	r6, [sp, #8]
   1b5a8:	ldr	r8, [sp, #16]
   1b5ac:	add	sp, sp, #20
   1b5b0:	pop	{pc}		; (ldr pc, [sp], #4)
   1b5b4:	bl	11090 <__errno_location@plt>
   1b5b8:	cmp	r4, #1
   1b5bc:	moveq	r3, #75	; 0x4b
   1b5c0:	moveq	r4, r3
   1b5c4:	streq	r3, [r0]
   1b5c8:	beq	1b61c <__assert_fail@plt+0xa490>
   1b5cc:	cmp	r4, #3
   1b5d0:	beq	1b610 <__assert_fail@plt+0xa484>
   1b5d4:	ldr	r3, [sp, #56]	; 0x38
   1b5d8:	ldr	r4, [r0]
   1b5dc:	cmp	r3, #0
   1b5e0:	beq	1b628 <__assert_fail@plt+0xa49c>
   1b5e4:	cmp	r4, #22
   1b5e8:	moveq	r4, #0
   1b5ec:	mov	r0, r8
   1b5f0:	bl	1aab4 <__assert_fail@plt+0x9928>
   1b5f4:	movw	r2, #54940	; 0xd69c
   1b5f8:	movt	r2, #1
   1b5fc:	str	r0, [sp]
   1b600:	mov	r1, r4
   1b604:	ldr	r3, [sp, #52]	; 0x34
   1b608:	ldr	r0, [sp, #56]	; 0x38
   1b60c:	bl	11000 <error@plt>
   1b610:	mov	r3, #0
   1b614:	mov	r4, r3
   1b618:	str	r3, [r0]
   1b61c:	ldr	r3, [sp, #56]	; 0x38
   1b620:	cmp	r3, #0
   1b624:	bne	1b5ec <__assert_fail@plt+0xa460>
   1b628:	mov	r3, #1
   1b62c:	str	r3, [sp, #56]	; 0x38
   1b630:	b	1b5e4 <__assert_fail@plt+0xa458>
   1b634:	bl	11090 <__errno_location@plt>
   1b638:	mov	r3, #0
   1b63c:	mvn	r2, #-1073741824	; 0xc0000000
   1b640:	cmp	r5, r3
   1b644:	cmpeq	r4, r2
   1b648:	movhi	r3, #75	; 0x4b
   1b64c:	movls	r3, #34	; 0x22
   1b650:	mov	r4, r3
   1b654:	str	r3, [r0]
   1b658:	ldr	r3, [sp, #56]	; 0x38
   1b65c:	cmp	r3, #0
   1b660:	moveq	r3, #1
   1b664:	str	r3, [sp, #56]	; 0x38
   1b668:	b	1b5ec <__assert_fail@plt+0xa460>
   1b66c:	mov	r1, #10
   1b670:	b	1b528 <__assert_fail@plt+0xa39c>
   1b674:	cmp	r2, #36	; 0x24
   1b678:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1b67c:	strd	r6, [sp, #8]
   1b680:	strd	r8, [sp, #16]
   1b684:	strd	sl, [sp, #24]
   1b688:	str	lr, [sp, #32]
   1b68c:	sub	sp, sp, #36	; 0x24
   1b690:	bhi	1bf20 <__assert_fail@plt+0xad94>
   1b694:	cmp	r1, #0
   1b698:	mov	r8, r2
   1b69c:	mov	r6, r0
   1b6a0:	mov	r5, r1
   1b6a4:	mov	sl, r3
   1b6a8:	addeq	r5, sp, #28
   1b6ac:	bl	11090 <__errno_location@plt>
   1b6b0:	mov	r3, #0
   1b6b4:	mov	r7, r0
   1b6b8:	str	r3, [r0]
   1b6bc:	bl	11054 <__ctype_b_loc@plt>
   1b6c0:	ldrb	r3, [r6]
   1b6c4:	mov	r2, r6
   1b6c8:	ldr	r0, [r0]
   1b6cc:	b	1b6d4 <__assert_fail@plt+0xa548>
   1b6d0:	ldrb	r3, [r2, #1]!
   1b6d4:	lsl	r1, r3, #1
   1b6d8:	ldrh	r4, [r0, r1]
   1b6dc:	ands	r4, r4, #8192	; 0x2000
   1b6e0:	bne	1b6d0 <__assert_fail@plt+0xa544>
   1b6e4:	cmp	r3, #45	; 0x2d
   1b6e8:	beq	1b788 <__assert_fail@plt+0xa5fc>
   1b6ec:	mov	r2, r8
   1b6f0:	mov	r3, r4
   1b6f4:	mov	r1, r5
   1b6f8:	mov	r0, r6
   1b6fc:	bl	10f40 <__strtoull_internal@plt>
   1b700:	ldr	fp, [r5]
   1b704:	mov	r9, r0
   1b708:	mov	r8, r1
   1b70c:	cmp	fp, r6
   1b710:	beq	1b770 <__assert_fail@plt+0xa5e4>
   1b714:	ldr	r4, [r7]
   1b718:	cmp	r4, #0
   1b71c:	bne	1b760 <__assert_fail@plt+0xa5d4>
   1b720:	ldr	r3, [sp, #72]	; 0x48
   1b724:	cmp	r3, #0
   1b728:	beq	1b738 <__assert_fail@plt+0xa5ac>
   1b72c:	ldrb	r6, [fp]
   1b730:	cmp	r6, #0
   1b734:	bne	1ba78 <__assert_fail@plt+0xa8ec>
   1b738:	str	r9, [sl]
   1b73c:	str	r8, [sl, #4]
   1b740:	mov	r0, r4
   1b744:	add	sp, sp, #36	; 0x24
   1b748:	ldrd	r4, [sp]
   1b74c:	ldrd	r6, [sp, #8]
   1b750:	ldrd	r8, [sp, #16]
   1b754:	ldrd	sl, [sp, #24]
   1b758:	add	sp, sp, #32
   1b75c:	pop	{pc}		; (ldr pc, [sp], #4)
   1b760:	cmp	r4, #34	; 0x22
   1b764:	bne	1b788 <__assert_fail@plt+0xa5fc>
   1b768:	mov	r4, #1
   1b76c:	b	1b720 <__assert_fail@plt+0xa594>
   1b770:	ldr	r3, [sp, #72]	; 0x48
   1b774:	cmp	r3, #0
   1b778:	beq	1b788 <__assert_fail@plt+0xa5fc>
   1b77c:	ldrb	r6, [r6]
   1b780:	cmp	r6, #0
   1b784:	bne	1b790 <__assert_fail@plt+0xa604>
   1b788:	mov	r4, #4
   1b78c:	b	1b740 <__assert_fail@plt+0xa5b4>
   1b790:	mov	r1, r6
   1b794:	mov	r0, r3
   1b798:	bl	11084 <strchr@plt>
   1b79c:	cmp	r0, #0
   1b7a0:	movne	r9, #1
   1b7a4:	movne	r8, #0
   1b7a8:	beq	1b788 <__assert_fail@plt+0xa5fc>
   1b7ac:	sub	r3, r6, #69	; 0x45
   1b7b0:	cmp	r3, #47	; 0x2f
   1b7b4:	ldrls	pc, [pc, r3, lsl #2]
   1b7b8:	b	1b8c0 <__assert_fail@plt+0xa734>
   1b7bc:	andeq	fp, r1, ip, ror r8
   1b7c0:	andeq	fp, r1, r0, asr #17
   1b7c4:	andeq	fp, r1, ip, ror r8
   1b7c8:	andeq	fp, r1, r0, asr #17
   1b7cc:	andeq	fp, r1, r0, asr #17
   1b7d0:	andeq	fp, r1, r0, asr #17
   1b7d4:	andeq	fp, r1, ip, ror r8
   1b7d8:	andeq	fp, r1, r0, asr #17
   1b7dc:	andeq	fp, r1, ip, ror r8
   1b7e0:	andeq	fp, r1, r0, asr #17
   1b7e4:	andeq	fp, r1, r0, asr #17
   1b7e8:	andeq	fp, r1, ip, ror r8
   1b7ec:	andeq	fp, r1, r0, asr #17
   1b7f0:	andeq	fp, r1, r0, asr #17
   1b7f4:	andeq	fp, r1, r0, asr #17
   1b7f8:	andeq	fp, r1, ip, ror r8
   1b7fc:	andeq	fp, r1, r0, asr #17
   1b800:	andeq	fp, r1, r0, asr #17
   1b804:	andeq	fp, r1, r0, asr #17
   1b808:	andeq	fp, r1, r0, asr #17
   1b80c:	andeq	fp, r1, ip, ror r8
   1b810:	andeq	fp, r1, ip, ror r8
   1b814:	andeq	fp, r1, r0, asr #17
   1b818:	andeq	fp, r1, r0, asr #17
   1b81c:	andeq	fp, r1, r0, asr #17
   1b820:	andeq	fp, r1, r0, asr #17
   1b824:	andeq	fp, r1, r0, asr #17
   1b828:	andeq	fp, r1, r0, asr #17
   1b82c:	andeq	fp, r1, r0, asr #17
   1b830:	andeq	fp, r1, r0, asr #17
   1b834:	andeq	fp, r1, r0, asr #17
   1b838:	andeq	fp, r1, r0, asr #17
   1b83c:	andeq	fp, r1, r0, asr #17
   1b840:	andeq	fp, r1, r0, asr #17
   1b844:	andeq	fp, r1, ip, ror r8
   1b848:	andeq	fp, r1, r0, asr #17
   1b84c:	andeq	fp, r1, r0, asr #17
   1b850:	andeq	fp, r1, r0, asr #17
   1b854:	andeq	fp, r1, ip, ror r8
   1b858:	andeq	fp, r1, r0, asr #17
   1b85c:	andeq	fp, r1, ip, ror r8
   1b860:	andeq	fp, r1, r0, asr #17
   1b864:	andeq	fp, r1, r0, asr #17
   1b868:	andeq	fp, r1, r0, asr #17
   1b86c:	andeq	fp, r1, r0, asr #17
   1b870:	andeq	fp, r1, r0, asr #17
   1b874:	andeq	fp, r1, r0, asr #17
   1b878:	andeq	fp, r1, ip, ror r8
   1b87c:	mov	r1, #48	; 0x30
   1b880:	ldr	r0, [sp, #72]	; 0x48
   1b884:	bl	11084 <strchr@plt>
   1b888:	cmp	r0, #0
   1b88c:	beq	1b8c0 <__assert_fail@plt+0xa734>
   1b890:	ldrb	r3, [fp, #1]
   1b894:	cmp	r3, #68	; 0x44
   1b898:	beq	1bdec <__assert_fail@plt+0xac60>
   1b89c:	cmp	r3, #105	; 0x69
   1b8a0:	beq	1ba90 <__assert_fail@plt+0xa904>
   1b8a4:	cmp	r3, #66	; 0x42
   1b8a8:	moveq	r3, #2
   1b8ac:	movne	r3, #1
   1b8b0:	moveq	r7, #1000	; 0x3e8
   1b8b4:	movne	r7, #1024	; 0x400
   1b8b8:	str	r3, [sp, #4]
   1b8bc:	b	1b8cc <__assert_fail@plt+0xa740>
   1b8c0:	mov	r3, #1
   1b8c4:	mov	r7, #1024	; 0x400
   1b8c8:	str	r3, [sp, #4]
   1b8cc:	sub	r6, r6, #66	; 0x42
   1b8d0:	cmp	r6, #53	; 0x35
   1b8d4:	ldrls	pc, [pc, r6, lsl #2]
   1b8d8:	b	1ba3c <__assert_fail@plt+0xa8b0>
   1b8dc:	muleq	r1, r4, sp
   1b8e0:	andeq	fp, r1, ip, lsr sl
   1b8e4:	andeq	fp, r1, ip, lsr sl
   1b8e8:	andeq	fp, r1, r0, lsr #23
   1b8ec:	andeq	fp, r1, ip, lsr sl
   1b8f0:			; <UNDEFINED> instruction: 0x0001b9b4
   1b8f4:	andeq	fp, r1, ip, lsr sl
   1b8f8:	andeq	fp, r1, ip, lsr sl
   1b8fc:	andeq	fp, r1, ip, lsr sl
   1b900:	andeq	fp, r1, r4, asr #20
   1b904:	andeq	fp, r1, ip, lsr sl
   1b908:	andeq	fp, r1, r0, asr #26
   1b90c:	andeq	fp, r1, ip, lsr sl
   1b910:	andeq	fp, r1, ip, lsr sl
   1b914:	muleq	r1, r0, ip
   1b918:	andeq	fp, r1, ip, lsr sl
   1b91c:	andeq	fp, r1, ip, lsr sl
   1b920:	andeq	fp, r1, ip, lsr sl
   1b924:	andeq	fp, r1, r8, lsl ip
   1b928:	andeq	fp, r1, ip, lsr sl
   1b92c:	andeq	fp, r1, ip, lsr sl
   1b930:	andeq	fp, r1, ip, lsr sl
   1b934:	andeq	fp, r1, ip, lsr sl
   1b938:	andeq	fp, r1, r8, lsr #22
   1b93c:	andeq	fp, r1, ip, lsr #21
   1b940:	andeq	fp, r1, ip, lsr sl
   1b944:	andeq	fp, r1, ip, lsr sl
   1b948:	andeq	fp, r1, ip, lsr sl
   1b94c:	andeq	fp, r1, ip, lsr sl
   1b950:	andeq	fp, r1, ip, lsr sl
   1b954:	andeq	fp, r1, ip, lsr sl
   1b958:	andeq	fp, r1, ip, lsr sl
   1b95c:	andeq	fp, r1, r0, lsr #26
   1b960:	andeq	fp, r1, r4, lsr #20
   1b964:	andeq	fp, r1, ip, lsr sl
   1b968:	andeq	fp, r1, ip, lsr sl
   1b96c:	andeq	fp, r1, ip, lsr sl
   1b970:			; <UNDEFINED> instruction: 0x0001b9b4
   1b974:	andeq	fp, r1, ip, lsr sl
   1b978:	andeq	fp, r1, ip, lsr sl
   1b97c:	andeq	fp, r1, ip, lsr sl
   1b980:	andeq	fp, r1, r4, asr #20
   1b984:	andeq	fp, r1, ip, lsr sl
   1b988:	andeq	fp, r1, r0, asr #26
   1b98c:	andeq	fp, r1, ip, lsr sl
   1b990:	andeq	fp, r1, ip, lsr sl
   1b994:	andeq	fp, r1, ip, lsr sl
   1b998:	andeq	fp, r1, ip, lsr sl
   1b99c:	andeq	fp, r1, ip, lsr sl
   1b9a0:	andeq	fp, r1, ip, lsr sl
   1b9a4:	andeq	fp, r1, r8, lsl ip
   1b9a8:	andeq	fp, r1, ip, lsr sl
   1b9ac:	andeq	fp, r1, ip, lsr sl
   1b9b0:	andeq	fp, r1, r8, lsl #26
   1b9b4:	asr	r3, r7, #31
   1b9b8:	mov	r2, r7
   1b9bc:	cmp	r8, #0
   1b9c0:	umull	r0, r1, r9, r7
   1b9c4:	mov	ip, #0
   1b9c8:	strd	r2, [sp, #8]
   1b9cc:	bne	1be20 <__assert_fail@plt+0xac94>
   1b9d0:	mov	r2, r0
   1b9d4:	mov	r3, r1
   1b9d8:	cmp	ip, #0
   1b9dc:	bne	1ba68 <__assert_fail@plt+0xa8dc>
   1b9e0:	cmp	r3, #0
   1b9e4:	mov	lr, ip
   1b9e8:	bne	1be84 <__assert_fail@plt+0xacf8>
   1b9ec:	umull	r2, r3, r2, r7
   1b9f0:	mov	ip, r2
   1b9f4:	mov	r1, r3
   1b9f8:	subs	r0, lr, #0
   1b9fc:	bne	1ba68 <__assert_fail@plt+0xa8dc>
   1ba00:	cmp	r1, #0
   1ba04:	bne	1be64 <__assert_fail@plt+0xacd8>
   1ba08:	umull	r2, r3, ip, r7
   1ba0c:	mov	r6, r2
   1ba10:	mov	r2, r3
   1ba14:	cmp	r0, #0
   1ba18:	mov	r9, r6
   1ba1c:	mov	r8, r2
   1ba20:	bne	1ba68 <__assert_fail@plt+0xa8dc>
   1ba24:	ldr	r2, [sp, #4]
   1ba28:	add	r3, fp, r2
   1ba2c:	str	r3, [r5]
   1ba30:	ldrb	r3, [fp, r2]
   1ba34:	cmp	r3, #0
   1ba38:	beq	1b738 <__assert_fail@plt+0xa5ac>
   1ba3c:	orr	r4, r4, #2
   1ba40:	b	1b738 <__assert_fail@plt+0xa5ac>
   1ba44:	cmp	r8, #0
   1ba48:	umull	r2, r3, r9, r7
   1ba4c:	mov	ip, #0
   1ba50:	asr	r1, r7, #31
   1ba54:	bne	1bdbc <__assert_fail@plt+0xac30>
   1ba58:	mov	r9, r2
   1ba5c:	mov	r8, r3
   1ba60:	cmp	ip, #0
   1ba64:	beq	1ba24 <__assert_fail@plt+0xa898>
   1ba68:	mvn	r9, #0
   1ba6c:	mov	r4, #1
   1ba70:	mov	r8, r9
   1ba74:	b	1ba24 <__assert_fail@plt+0xa898>
   1ba78:	mov	r1, r6
   1ba7c:	ldr	r0, [sp, #72]	; 0x48
   1ba80:	bl	11084 <strchr@plt>
   1ba84:	cmp	r0, #0
   1ba88:	bne	1b7ac <__assert_fail@plt+0xa620>
   1ba8c:	b	1ba3c <__assert_fail@plt+0xa8b0>
   1ba90:	ldrb	r3, [fp, #2]
   1ba94:	mov	r7, #1024	; 0x400
   1ba98:	cmp	r3, #66	; 0x42
   1ba9c:	movne	r3, #1
   1baa0:	moveq	r3, #3
   1baa4:	str	r3, [sp, #4]
   1baa8:	b	1b8cc <__assert_fail@plt+0xa740>
   1baac:	asr	r3, r7, #31
   1bab0:	mov	r2, r7
   1bab4:	mov	ip, #0
   1bab8:	mov	r0, #7
   1babc:	mov	lr, ip
   1bac0:	mov	r6, r4
   1bac4:	strd	r2, [sp, #8]
   1bac8:	str	r5, [sp, #16]
   1bacc:	b	1baf8 <__assert_fail@plt+0xa96c>
   1bad0:	umull	r2, r3, r9, r7
   1bad4:	mov	r9, r2
   1bad8:	mov	r8, r3
   1badc:	cmp	r1, #0
   1bae0:	beq	1baf0 <__assert_fail@plt+0xa964>
   1bae4:	mvn	r9, #0
   1bae8:	mov	ip, #1
   1baec:	mov	r8, r9
   1baf0:	subs	r0, r0, #1
   1baf4:	beq	1bde0 <__assert_fail@plt+0xac54>
   1baf8:	cmp	r8, #0
   1bafc:	mov	r1, #0
   1bb00:	beq	1bad0 <__assert_fail@plt+0xa944>
   1bb04:	umull	r4, r5, r9, r7
   1bb08:	mov	r3, lr
   1bb0c:	mov	r2, r5
   1bb10:	umlal	r2, r3, r8, r7
   1bb14:	cmp	r3, #0
   1bb18:	bne	1bf40 <__assert_fail@plt+0xadb4>
   1bb1c:	mov	r9, r4
   1bb20:	mov	r8, r2
   1bb24:	b	1badc <__assert_fail@plt+0xa950>
   1bb28:	asr	r3, r7, #31
   1bb2c:	mov	r2, r7
   1bb30:	mov	r6, #0
   1bb34:	mov	lr, #8
   1bb38:	mov	r0, r4
   1bb3c:	mov	ip, r5
   1bb40:	strd	r2, [sp, #8]
   1bb44:	b	1bb70 <__assert_fail@plt+0xa9e4>
   1bb48:	umull	r2, r3, r9, r7
   1bb4c:	mov	r9, r2
   1bb50:	mov	r8, r3
   1bb54:	cmp	r1, #0
   1bb58:	beq	1bb68 <__assert_fail@plt+0xa9dc>
   1bb5c:	mvn	r9, #0
   1bb60:	mov	r6, #1
   1bb64:	mov	r8, r9
   1bb68:	subs	lr, lr, #1
   1bb6c:	beq	1bdb0 <__assert_fail@plt+0xac24>
   1bb70:	cmp	r8, #0
   1bb74:	mov	r1, #0
   1bb78:	beq	1bb48 <__assert_fail@plt+0xa9bc>
   1bb7c:	umull	r4, r5, r9, r7
   1bb80:	mov	r3, #0
   1bb84:	mov	r2, r5
   1bb88:	umlal	r2, r3, r8, r7
   1bb8c:	cmp	r3, #0
   1bb90:	bne	1bf98 <__assert_fail@plt+0xae0c>
   1bb94:	mov	r9, r4
   1bb98:	mov	r8, r2
   1bb9c:	b	1bb54 <__assert_fail@plt+0xa9c8>
   1bba0:	asr	r3, r7, #31
   1bba4:	mov	r2, r7
   1bba8:	mov	r6, #0
   1bbac:	mov	lr, #6
   1bbb0:	mov	r0, r4
   1bbb4:	mov	ip, r5
   1bbb8:	strd	r2, [sp, #8]
   1bbbc:	b	1bbe8 <__assert_fail@plt+0xaa5c>
   1bbc0:	umull	r2, r3, r9, r7
   1bbc4:	mov	r9, r2
   1bbc8:	mov	r8, r3
   1bbcc:	cmp	r1, #0
   1bbd0:	beq	1bbe0 <__assert_fail@plt+0xaa54>
   1bbd4:	mvn	r9, #0
   1bbd8:	mov	r6, #1
   1bbdc:	mov	r8, r9
   1bbe0:	subs	lr, lr, #1
   1bbe4:	beq	1bdb0 <__assert_fail@plt+0xac24>
   1bbe8:	cmp	r8, #0
   1bbec:	mov	r1, #0
   1bbf0:	beq	1bbc0 <__assert_fail@plt+0xaa34>
   1bbf4:	umull	r4, r5, r9, r7
   1bbf8:	mov	r3, #0
   1bbfc:	mov	r2, r5
   1bc00:	umlal	r2, r3, r8, r7
   1bc04:	cmp	r3, #0
   1bc08:	bne	1bf60 <__assert_fail@plt+0xadd4>
   1bc0c:	mov	r9, r4
   1bc10:	mov	r8, r2
   1bc14:	b	1bbcc <__assert_fail@plt+0xaa40>
   1bc18:	asr	r3, r7, #31
   1bc1c:	mov	r2, r7
   1bc20:	mov	r6, #0
   1bc24:	mov	lr, #4
   1bc28:	mov	r0, r4
   1bc2c:	mov	ip, r5
   1bc30:	strd	r2, [sp, #8]
   1bc34:	b	1bc60 <__assert_fail@plt+0xaad4>
   1bc38:	umull	r2, r3, r9, r7
   1bc3c:	mov	r9, r2
   1bc40:	mov	r8, r3
   1bc44:	cmp	r1, #0
   1bc48:	beq	1bc58 <__assert_fail@plt+0xaacc>
   1bc4c:	mvn	r9, #0
   1bc50:	mov	r6, #1
   1bc54:	mov	r8, r9
   1bc58:	subs	lr, lr, #1
   1bc5c:	beq	1bdb0 <__assert_fail@plt+0xac24>
   1bc60:	cmp	r8, #0
   1bc64:	mov	r1, #0
   1bc68:	beq	1bc38 <__assert_fail@plt+0xaaac>
   1bc6c:	umull	r4, r5, r9, r7
   1bc70:	mov	r3, #0
   1bc74:	mov	r2, r5
   1bc78:	umlal	r2, r3, r8, r7
   1bc7c:	cmp	r3, #0
   1bc80:	bne	1bf7c <__assert_fail@plt+0xadf0>
   1bc84:	mov	r9, r4
   1bc88:	mov	r8, r2
   1bc8c:	b	1bc44 <__assert_fail@plt+0xaab8>
   1bc90:	asr	r3, r7, #31
   1bc94:	mov	r2, r7
   1bc98:	mov	r6, #0
   1bc9c:	mov	lr, #5
   1bca0:	mov	r0, r4
   1bca4:	mov	ip, r5
   1bca8:	strd	r2, [sp, #8]
   1bcac:	b	1bcd8 <__assert_fail@plt+0xab4c>
   1bcb0:	umull	r2, r3, r9, r7
   1bcb4:	mov	r9, r2
   1bcb8:	mov	r8, r3
   1bcbc:	cmp	r1, #0
   1bcc0:	beq	1bcd0 <__assert_fail@plt+0xab44>
   1bcc4:	mvn	r9, #0
   1bcc8:	mov	r6, #1
   1bccc:	mov	r8, r9
   1bcd0:	subs	lr, lr, #1
   1bcd4:	beq	1bdb0 <__assert_fail@plt+0xac24>
   1bcd8:	cmp	r8, #0
   1bcdc:	mov	r1, #0
   1bce0:	beq	1bcb0 <__assert_fail@plt+0xab24>
   1bce4:	umull	r4, r5, r9, r7
   1bce8:	mov	r3, #0
   1bcec:	mov	r2, r5
   1bcf0:	umlal	r2, r3, r8, r7
   1bcf4:	cmp	r3, #0
   1bcf8:	bne	1bee8 <__assert_fail@plt+0xad5c>
   1bcfc:	mov	r9, r4
   1bd00:	mov	r8, r2
   1bd04:	b	1bcbc <__assert_fail@plt+0xab30>
   1bd08:	lsr	r3, r8, #31
   1bd0c:	adds	r9, r9, r9
   1bd10:	adc	r8, r8, r8
   1bd14:	cmp	r3, #0
   1bd18:	beq	1ba24 <__assert_fail@plt+0xa898>
   1bd1c:	b	1ba68 <__assert_fail@plt+0xa8dc>
   1bd20:	lsr	r3, r8, #23
   1bd24:	lsl	r8, r8, #9
   1bd28:	cmp	r3, #0
   1bd2c:	lsl	r3, r9, #9
   1bd30:	orr	r8, r8, r9, lsr #23
   1bd34:	bne	1ba68 <__assert_fail@plt+0xa8dc>
   1bd38:	mov	r9, r3
   1bd3c:	b	1ba24 <__assert_fail@plt+0xa898>
   1bd40:	asr	r3, r7, #31
   1bd44:	mov	r2, r7
   1bd48:	cmp	r8, #0
   1bd4c:	mov	r1, #0
   1bd50:	strd	r2, [sp, #8]
   1bd54:	umull	r2, r3, r9, r7
   1bd58:	bne	1bdfc <__assert_fail@plt+0xac70>
   1bd5c:	mov	r0, r2
   1bd60:	mov	ip, r3
   1bd64:	cmp	r1, #0
   1bd68:	bne	1ba68 <__assert_fail@plt+0xa8dc>
   1bd6c:	cmp	ip, #0
   1bd70:	bne	1be44 <__assert_fail@plt+0xacb8>
   1bd74:	umull	r2, r3, r0, r7
   1bd78:	mov	r6, r2
   1bd7c:	mov	r2, r3
   1bd80:	cmp	r1, #0
   1bd84:	mov	r9, r6
   1bd88:	mov	r8, r2
   1bd8c:	beq	1ba24 <__assert_fail@plt+0xa898>
   1bd90:	b	1ba68 <__assert_fail@plt+0xa8dc>
   1bd94:	lsr	r3, r8, #22
   1bd98:	lsl	r8, r8, #10
   1bd9c:	cmp	r3, #0
   1bda0:	lsl	r3, r9, #10
   1bda4:	orr	r8, r8, r9, lsr #22
   1bda8:	beq	1bd38 <__assert_fail@plt+0xabac>
   1bdac:	b	1ba68 <__assert_fail@plt+0xa8dc>
   1bdb0:	mov	r5, ip
   1bdb4:	orr	r4, r0, r6
   1bdb8:	b	1ba24 <__assert_fail@plt+0xa898>
   1bdbc:	strd	r2, [sp, #8]
   1bdc0:	mov	r3, ip
   1bdc4:	ldr	r2, [sp, #12]
   1bdc8:	umlal	r2, r3, r8, r7
   1bdcc:	cmp	r3, #0
   1bdd0:	bne	1bf04 <__assert_fail@plt+0xad78>
   1bdd4:	mov	r8, r2
   1bdd8:	ldr	r9, [sp, #8]
   1bddc:	b	1ba60 <__assert_fail@plt+0xa8d4>
   1bde0:	orr	r4, r6, ip
   1bde4:	ldr	r5, [sp, #16]
   1bde8:	b	1ba24 <__assert_fail@plt+0xa898>
   1bdec:	mov	r3, #2
   1bdf0:	mov	r7, #1000	; 0x3e8
   1bdf4:	str	r3, [sp, #4]
   1bdf8:	b	1b8cc <__assert_fail@plt+0xa740>
   1bdfc:	strd	r2, [sp, #16]
   1be00:	mov	r3, r1
   1be04:	ldr	r2, [sp, #20]
   1be08:	umlal	r2, r3, r8, r7
   1be0c:	cmp	r3, #0
   1be10:	bne	1bfd4 <__assert_fail@plt+0xae48>
   1be14:	mov	ip, r2
   1be18:	ldr	r0, [sp, #16]
   1be1c:	b	1bd64 <__assert_fail@plt+0xabd8>
   1be20:	mov	r2, r1
   1be24:	mov	r3, ip
   1be28:	umlal	r2, r3, r8, r7
   1be2c:	cmp	r3, #0
   1be30:	strd	r2, [sp, #16]
   1be34:	bne	1bea8 <__assert_fail@plt+0xad1c>
   1be38:	mov	r2, r0
   1be3c:	ldr	r3, [sp, #16]
   1be40:	b	1b9d8 <__assert_fail@plt+0xa84c>
   1be44:	umull	r8, r9, r0, r7
   1be48:	mov	r3, r1
   1be4c:	mov	r2, r9
   1be50:	umlal	r2, r3, ip, r7
   1be54:	cmp	r3, #0
   1be58:	bne	1bfb4 <__assert_fail@plt+0xae28>
   1be5c:	mov	r6, r8
   1be60:	b	1bd80 <__assert_fail@plt+0xabf4>
   1be64:	umull	r8, r9, ip, r7
   1be68:	mov	r3, r0
   1be6c:	mov	r2, r9
   1be70:	umlal	r2, r3, r1, r7
   1be74:	cmp	r3, #0
   1be78:	bne	1bffc <__assert_fail@plt+0xae70>
   1be7c:	mov	r6, r8
   1be80:	b	1ba14 <__assert_fail@plt+0xa888>
   1be84:	umull	r8, r9, r2, r7
   1be88:	mov	r1, ip
   1be8c:	mov	r0, r9
   1be90:	umlal	r0, r1, r3, r7
   1be94:	cmp	r1, #0
   1be98:	bne	1bec8 <__assert_fail@plt+0xad3c>
   1be9c:	mov	ip, r8
   1bea0:	mov	r1, r0
   1bea4:	b	1b9f8 <__assert_fail@plt+0xa86c>
   1bea8:	ldr	lr, [sp, #8]
   1beac:	mov	r2, r0
   1beb0:	mov	ip, #1
   1beb4:	ldr	r3, [sp, #12]
   1beb8:	mul	r3, r9, r3
   1bebc:	mla	r3, lr, r8, r3
   1bec0:	add	r3, r3, r1
   1bec4:	b	1b9d8 <__assert_fail@plt+0xa84c>
   1bec8:	ldr	r1, [sp, #12]
   1becc:	mov	lr, #1
   1bed0:	mov	ip, r8
   1bed4:	mul	r1, r2, r1
   1bed8:	ldr	r2, [sp, #8]
   1bedc:	mla	r1, r3, r2, r1
   1bee0:	add	r1, r1, r9
   1bee4:	b	1b9f8 <__assert_fail@plt+0xa86c>
   1bee8:	ldrd	r2, [sp, #8]
   1beec:	mov	r1, #1
   1bef0:	mul	r3, r9, r3
   1bef4:	mov	r9, r4
   1bef8:	mla	r8, r2, r8, r3
   1befc:	add	r8, r8, r5
   1bf00:	b	1bcbc <__assert_fail@plt+0xab30>
   1bf04:	mul	r3, r9, r1
   1bf08:	mov	ip, #1
   1bf0c:	mla	r8, r7, r8, r3
   1bf10:	ldrd	r6, [sp, #8]
   1bf14:	mov	r9, r6
   1bf18:	add	r8, r8, r7
   1bf1c:	b	1ba60 <__assert_fail@plt+0xa8d4>
   1bf20:	movw	r3, #56044	; 0xdaec
   1bf24:	movt	r3, #1
   1bf28:	movw	r1, #56056	; 0xdaf8
   1bf2c:	movt	r1, #1
   1bf30:	movw	r0, #56072	; 0xdb08
   1bf34:	movt	r0, #1
   1bf38:	mov	r2, #85	; 0x55
   1bf3c:	bl	1118c <__assert_fail@plt>
   1bf40:	ldr	r3, [sp, #12]
   1bf44:	mov	r1, #1
   1bf48:	mul	r2, r9, r3
   1bf4c:	ldr	r3, [sp, #8]
   1bf50:	mov	r9, r4
   1bf54:	mla	r8, r3, r8, r2
   1bf58:	add	r8, r8, r5
   1bf5c:	b	1badc <__assert_fail@plt+0xa950>
   1bf60:	ldrd	r2, [sp, #8]
   1bf64:	mov	r1, #1
   1bf68:	mul	r3, r9, r3
   1bf6c:	mov	r9, r4
   1bf70:	mla	r8, r2, r8, r3
   1bf74:	add	r8, r8, r5
   1bf78:	b	1bbcc <__assert_fail@plt+0xaa40>
   1bf7c:	ldrd	r2, [sp, #8]
   1bf80:	mov	r1, #1
   1bf84:	mul	r3, r9, r3
   1bf88:	mov	r9, r4
   1bf8c:	mla	r8, r2, r8, r3
   1bf90:	add	r8, r8, r5
   1bf94:	b	1bc44 <__assert_fail@plt+0xaab8>
   1bf98:	ldrd	r2, [sp, #8]
   1bf9c:	mov	r1, #1
   1bfa0:	mul	r3, r9, r3
   1bfa4:	mov	r9, r4
   1bfa8:	mla	r8, r2, r8, r3
   1bfac:	add	r8, r8, r5
   1bfb0:	b	1bb54 <__assert_fail@plt+0xa9c8>
   1bfb4:	ldr	r3, [sp, #12]
   1bfb8:	mov	r6, r8
   1bfbc:	mov	r1, #1
   1bfc0:	mul	r2, r0, r3
   1bfc4:	ldr	r3, [sp, #8]
   1bfc8:	mla	r2, ip, r3, r2
   1bfcc:	add	r2, r2, r9
   1bfd0:	b	1bd80 <__assert_fail@plt+0xabf4>
   1bfd4:	ldr	r3, [sp, #12]
   1bfd8:	mov	r1, #1
   1bfdc:	ldr	r2, [sp, #16]
   1bfe0:	mul	ip, r9, r3
   1bfe4:	ldr	r3, [sp, #8]
   1bfe8:	mov	r0, r2
   1bfec:	mla	ip, r3, r8, ip
   1bff0:	ldr	r3, [sp, #20]
   1bff4:	add	ip, ip, r3
   1bff8:	b	1bd64 <__assert_fail@plt+0xabd8>
   1bffc:	ldr	r3, [sp, #12]
   1c000:	mov	r6, r8
   1c004:	mov	r0, #1
   1c008:	mul	r2, ip, r3
   1c00c:	ldr	r3, [sp, #8]
   1c010:	mla	r2, r1, r3, r2
   1c014:	add	r2, r2, r9
   1c018:	b	1ba14 <__assert_fail@plt+0xa888>
   1c01c:	cmp	r1, #0
   1c020:	cmpne	r0, #0
   1c024:	beq	1c070 <__assert_fail@plt+0xaee4>
   1c028:	strd	r4, [sp, #-16]!
   1c02c:	umull	r4, r5, r0, r1
   1c030:	str	r6, [sp, #8]
   1c034:	str	lr, [sp, #12]
   1c038:	adds	r3, r5, #0
   1c03c:	movne	r3, #1
   1c040:	cmp	r4, #0
   1c044:	blt	1c050 <__assert_fail@plt+0xaec4>
   1c048:	cmp	r3, #0
   1c04c:	beq	1c07c <__assert_fail@plt+0xaef0>
   1c050:	bl	11090 <__errno_location@plt>
   1c054:	mov	r3, #12
   1c058:	ldrd	r4, [sp]
   1c05c:	ldr	r6, [sp, #8]
   1c060:	add	sp, sp, #12
   1c064:	str	r3, [r0]
   1c068:	mov	r0, #0
   1c06c:	pop	{pc}		; (ldr pc, [sp], #4)
   1c070:	mov	r1, #1
   1c074:	mov	r0, r1
   1c078:	b	10ebc <calloc@plt>
   1c07c:	ldrd	r4, [sp]
   1c080:	ldr	r6, [sp, #8]
   1c084:	ldr	lr, [sp, #12]
   1c088:	add	sp, sp, #16
   1c08c:	b	10ebc <calloc@plt>
   1c090:	cmp	r0, #0
   1c094:	beq	1c0a0 <__assert_fail@plt+0xaf14>
   1c098:	blt	1c0a8 <__assert_fail@plt+0xaf1c>
   1c09c:	b	1100c <malloc@plt>
   1c0a0:	mov	r0, #1
   1c0a4:	b	1100c <malloc@plt>
   1c0a8:	str	r4, [sp, #-8]!
   1c0ac:	str	lr, [sp, #4]
   1c0b0:	bl	11090 <__errno_location@plt>
   1c0b4:	mov	r3, #12
   1c0b8:	ldr	r4, [sp]
   1c0bc:	add	sp, sp, #4
   1c0c0:	str	r3, [r0]
   1c0c4:	mov	r0, #0
   1c0c8:	pop	{pc}		; (ldr pc, [sp], #4)
   1c0cc:	cmp	r0, #0
   1c0d0:	beq	1c0f8 <__assert_fail@plt+0xaf6c>
   1c0d4:	cmp	r1, #0
   1c0d8:	str	r4, [sp, #-8]!
   1c0dc:	str	lr, [sp, #4]
   1c0e0:	beq	1c100 <__assert_fail@plt+0xaf74>
   1c0e4:	blt	1c114 <__assert_fail@plt+0xaf88>
   1c0e8:	ldr	r4, [sp]
   1c0ec:	ldr	lr, [sp, #4]
   1c0f0:	add	sp, sp, #8
   1c0f4:	b	10f88 <realloc@plt>
   1c0f8:	mov	r0, r1
   1c0fc:	b	1c090 <__assert_fail@plt+0xaf04>
   1c100:	bl	18694 <__assert_fail@plt+0x7508>
   1c104:	ldr	r4, [sp]
   1c108:	add	sp, sp, #4
   1c10c:	mov	r0, #0
   1c110:	pop	{pc}		; (ldr pc, [sp], #4)
   1c114:	bl	11090 <__errno_location@plt>
   1c118:	mov	r3, #12
   1c11c:	str	r3, [r0]
   1c120:	b	1c104 <__assert_fail@plt+0xaf78>
   1c124:	strd	r4, [sp, #-16]!
   1c128:	mov	r4, r0
   1c12c:	str	r6, [sp, #8]
   1c130:	str	lr, [sp, #12]
   1c134:	bl	10fe8 <__fpending@plt>
   1c138:	ldr	r5, [r4]
   1c13c:	mov	r6, r0
   1c140:	mov	r0, r4
   1c144:	bl	184d4 <__assert_fail@plt+0x7348>
   1c148:	mov	r4, r0
   1c14c:	and	r5, r5, #32
   1c150:	cmp	r5, #0
   1c154:	bne	1c18c <__assert_fail@plt+0xb000>
   1c158:	cmp	r0, #0
   1c15c:	beq	1c178 <__assert_fail@plt+0xafec>
   1c160:	cmp	r6, #0
   1c164:	bne	1c1a4 <__assert_fail@plt+0xb018>
   1c168:	bl	11090 <__errno_location@plt>
   1c16c:	ldr	r4, [r0]
   1c170:	subs	r4, r4, #9
   1c174:	mvnne	r4, #0
   1c178:	mov	r0, r4
   1c17c:	ldrd	r4, [sp]
   1c180:	ldr	r6, [sp, #8]
   1c184:	add	sp, sp, #12
   1c188:	pop	{pc}		; (ldr pc, [sp], #4)
   1c18c:	cmp	r0, #0
   1c190:	bne	1c1a4 <__assert_fail@plt+0xb018>
   1c194:	bl	11090 <__errno_location@plt>
   1c198:	str	r4, [r0]
   1c19c:	mvn	r4, #0
   1c1a0:	b	1c178 <__assert_fail@plt+0xafec>
   1c1a4:	mvn	r4, #0
   1c1a8:	b	1c178 <__assert_fail@plt+0xafec>
   1c1ac:	push	{r1, r2, r3}
   1c1b0:	strd	r4, [sp, #-20]!	; 0xffffffec
   1c1b4:	strd	r6, [sp, #8]
   1c1b8:	str	lr, [sp, #16]
   1c1bc:	sub	sp, sp, #8
   1c1c0:	ldr	r1, [sp, #28]
   1c1c4:	add	r2, sp, #32
   1c1c8:	str	r2, [sp, #4]
   1c1cc:	cmp	r1, #0
   1c1d0:	beq	1c2ac <__assert_fail@plt+0xb120>
   1c1d4:	movw	r3, #1030	; 0x406
   1c1d8:	mov	r6, r0
   1c1dc:	cmp	r1, r3
   1c1e0:	beq	1c2bc <__assert_fail@plt+0xb130>
   1c1e4:	cmp	r1, #11
   1c1e8:	beq	1c264 <__assert_fail@plt+0xb0d8>
   1c1ec:	ble	1c244 <__assert_fail@plt+0xb0b8>
   1c1f0:	movw	r2, #1031	; 0x407
   1c1f4:	cmp	r1, r2
   1c1f8:	bgt	1c280 <__assert_fail@plt+0xb0f4>
   1c1fc:	cmp	r1, r3
   1c200:	bge	1c210 <__assert_fail@plt+0xb084>
   1c204:	movw	r3, #1025	; 0x401
   1c208:	cmp	r1, r3
   1c20c:	beq	1c264 <__assert_fail@plt+0xb0d8>
   1c210:	ldr	r3, [sp, #4]
   1c214:	mov	r0, r6
   1c218:	ldr	r2, [r3]
   1c21c:	bl	110fc <fcntl64@plt>
   1c220:	mov	r4, r0
   1c224:	mov	r0, r4
   1c228:	add	sp, sp, #8
   1c22c:	ldrd	r4, [sp]
   1c230:	ldrd	r6, [sp, #8]
   1c234:	ldr	lr, [sp, #16]
   1c238:	add	sp, sp, #20
   1c23c:	add	sp, sp, #12
   1c240:	bx	lr
   1c244:	cmp	r1, #4
   1c248:	beq	1c210 <__assert_fail@plt+0xb084>
   1c24c:	bgt	1c274 <__assert_fail@plt+0xb0e8>
   1c250:	cmp	r1, #2
   1c254:	beq	1c210 <__assert_fail@plt+0xb084>
   1c258:	bgt	1c264 <__assert_fail@plt+0xb0d8>
   1c25c:	cmp	r1, #1
   1c260:	bne	1c210 <__assert_fail@plt+0xb084>
   1c264:	mov	r0, r6
   1c268:	bl	110fc <fcntl64@plt>
   1c26c:	mov	r4, r0
   1c270:	b	1c224 <__assert_fail@plt+0xb098>
   1c274:	cmp	r1, #9
   1c278:	bne	1c210 <__assert_fail@plt+0xb084>
   1c27c:	b	1c264 <__assert_fail@plt+0xb0d8>
   1c280:	movw	r3, #1033	; 0x409
   1c284:	cmp	r1, r3
   1c288:	beq	1c210 <__assert_fail@plt+0xb084>
   1c28c:	blt	1c264 <__assert_fail@plt+0xb0d8>
   1c290:	movw	r3, #1034	; 0x40a
   1c294:	cmp	r1, r3
   1c298:	bne	1c210 <__assert_fail@plt+0xb084>
   1c29c:	mov	r0, r6
   1c2a0:	bl	110fc <fcntl64@plt>
   1c2a4:	mov	r4, r0
   1c2a8:	b	1c224 <__assert_fail@plt+0xb098>
   1c2ac:	ldr	r2, [sp, #32]
   1c2b0:	bl	110fc <fcntl64@plt>
   1c2b4:	mov	r4, r0
   1c2b8:	b	1c224 <__assert_fail@plt+0xb098>
   1c2bc:	movw	r5, #58088	; 0xe2e8
   1c2c0:	movt	r5, #2
   1c2c4:	ldr	r7, [r2]
   1c2c8:	add	r2, sp, #36	; 0x24
   1c2cc:	ldr	r3, [r5]
   1c2d0:	str	r2, [sp, #4]
   1c2d4:	mov	r2, r7
   1c2d8:	cmp	r3, #0
   1c2dc:	blt	1c2f8 <__assert_fail@plt+0xb16c>
   1c2e0:	bl	110fc <fcntl64@plt>
   1c2e4:	subs	r4, r0, #0
   1c2e8:	blt	1c360 <__assert_fail@plt+0xb1d4>
   1c2ec:	mov	r3, #1
   1c2f0:	str	r3, [r5]
   1c2f4:	b	1c224 <__assert_fail@plt+0xb098>
   1c2f8:	mov	r1, #0
   1c2fc:	bl	110fc <fcntl64@plt>
   1c300:	subs	r4, r0, #0
   1c304:	blt	1c224 <__assert_fail@plt+0xb098>
   1c308:	ldr	r3, [r5]
   1c30c:	cmn	r3, #1
   1c310:	bne	1c224 <__assert_fail@plt+0xb098>
   1c314:	mov	r1, #1
   1c318:	mov	r0, r4
   1c31c:	bl	110fc <fcntl64@plt>
   1c320:	subs	r2, r0, #0
   1c324:	blt	1c340 <__assert_fail@plt+0xb1b4>
   1c328:	orr	r2, r2, #1
   1c32c:	mov	r1, #2
   1c330:	mov	r0, r4
   1c334:	bl	110fc <fcntl64@plt>
   1c338:	cmn	r0, #1
   1c33c:	bne	1c224 <__assert_fail@plt+0xb098>
   1c340:	bl	11090 <__errno_location@plt>
   1c344:	mov	r5, r0
   1c348:	mov	r0, r4
   1c34c:	ldr	r6, [r5]
   1c350:	mvn	r4, #0
   1c354:	bl	11174 <close@plt>
   1c358:	str	r6, [r5]
   1c35c:	b	1c224 <__assert_fail@plt+0xb098>
   1c360:	bl	11090 <__errno_location@plt>
   1c364:	ldr	r3, [r0]
   1c368:	cmp	r3, #22
   1c36c:	bne	1c2ec <__assert_fail@plt+0xb160>
   1c370:	mov	r2, r7
   1c374:	mov	r0, r6
   1c378:	mov	r1, #0
   1c37c:	bl	110fc <fcntl64@plt>
   1c380:	subs	r4, r0, #0
   1c384:	mvnge	r3, #0
   1c388:	strge	r3, [r5]
   1c38c:	bge	1c314 <__assert_fail@plt+0xb188>
   1c390:	b	1c224 <__assert_fail@plt+0xb098>
   1c394:	mov	r0, #14
   1c398:	str	r4, [sp, #-8]!
   1c39c:	str	lr, [sp, #4]
   1c3a0:	bl	1112c <nl_langinfo@plt>
   1c3a4:	cmp	r0, #0
   1c3a8:	beq	1c3cc <__assert_fail@plt+0xb240>
   1c3ac:	ldrb	r2, [r0]
   1c3b0:	movw	r3, #56112	; 0xdb30
   1c3b4:	movt	r3, #1
   1c3b8:	ldr	r4, [sp]
   1c3bc:	add	sp, sp, #4
   1c3c0:	cmp	r2, #0
   1c3c4:	moveq	r0, r3
   1c3c8:	pop	{pc}		; (ldr pc, [sp], #4)
   1c3cc:	ldr	r4, [sp]
   1c3d0:	add	sp, sp, #4
   1c3d4:	movw	r0, #56112	; 0xdb30
   1c3d8:	movt	r0, #1
   1c3dc:	pop	{pc}		; (ldr pc, [sp], #4)
   1c3e0:	strd	r4, [sp, #-20]!	; 0xffffffec
   1c3e4:	mov	r5, r2
   1c3e8:	strd	r6, [sp, #8]
   1c3ec:	subs	r6, r0, #0
   1c3f0:	mov	r7, r1
   1c3f4:	str	lr, [sp, #16]
   1c3f8:	sub	sp, sp, #12
   1c3fc:	addeq	r6, sp, #4
   1c400:	mov	r0, r6
   1c404:	bl	10ff4 <mbrtowc@plt>
   1c408:	cmp	r5, #0
   1c40c:	cmnne	r0, #3
   1c410:	mov	r4, r0
   1c414:	bhi	1c430 <__assert_fail@plt+0xb2a4>
   1c418:	mov	r0, r4
   1c41c:	add	sp, sp, #12
   1c420:	ldrd	r4, [sp]
   1c424:	ldrd	r6, [sp, #8]
   1c428:	add	sp, sp, #16
   1c42c:	pop	{pc}		; (ldr pc, [sp], #4)
   1c430:	mov	r0, #0
   1c434:	bl	1c488 <__assert_fail@plt+0xb2fc>
   1c438:	cmp	r0, #0
   1c43c:	bne	1c418 <__assert_fail@plt+0xb28c>
   1c440:	ldrb	r3, [r7]
   1c444:	mov	r4, #1
   1c448:	str	r3, [r6]
   1c44c:	b	1c418 <__assert_fail@plt+0xb28c>
   1c450:	umull	r2, r3, r1, r2
   1c454:	cmp	r3, #0
   1c458:	bne	1c464 <__assert_fail@plt+0xb2d8>
   1c45c:	mov	r1, r2
   1c460:	b	1c0cc <__assert_fail@plt+0xaf40>
   1c464:	str	r4, [sp, #-8]!
   1c468:	str	lr, [sp, #4]
   1c46c:	bl	11090 <__errno_location@plt>
   1c470:	mov	r3, #12
   1c474:	ldr	r4, [sp]
   1c478:	add	sp, sp, #4
   1c47c:	str	r3, [r0]
   1c480:	mov	r0, #0
   1c484:	pop	{pc}		; (ldr pc, [sp], #4)
   1c488:	push	{lr}		; (str lr, [sp, #-4]!)
   1c48c:	sub	sp, sp, #268	; 0x10c
   1c490:	movw	r2, #257	; 0x101
   1c494:	add	r1, sp, #4
   1c498:	bl	1c4e0 <__assert_fail@plt+0xb354>
   1c49c:	cmp	r0, #0
   1c4a0:	movne	r0, #0
   1c4a4:	bne	1c4d8 <__assert_fail@plt+0xb34c>
   1c4a8:	movw	r1, #56120	; 0xdb38
   1c4ac:	movt	r1, #1
   1c4b0:	add	r0, sp, #4
   1c4b4:	bl	10eec <strcmp@plt>
   1c4b8:	cmp	r0, #0
   1c4bc:	beq	1c4d8 <__assert_fail@plt+0xb34c>
   1c4c0:	add	r0, sp, #4
   1c4c4:	movw	r1, #56124	; 0xdb3c
   1c4c8:	movt	r1, #1
   1c4cc:	bl	10eec <strcmp@plt>
   1c4d0:	adds	r0, r0, #0
   1c4d4:	movne	r0, #1
   1c4d8:	add	sp, sp, #268	; 0x10c
   1c4dc:	pop	{pc}		; (ldr pc, [sp], #4)
   1c4e0:	strd	r4, [sp, #-16]!
   1c4e4:	mov	r5, r1
   1c4e8:	mov	r1, #0
   1c4ec:	mov	r4, r2
   1c4f0:	str	r6, [sp, #8]
   1c4f4:	str	lr, [sp, #12]
   1c4f8:	bl	11114 <setlocale@plt>
   1c4fc:	subs	r6, r0, #0
   1c500:	beq	1c580 <__assert_fail@plt+0xb3f4>
   1c504:	bl	11078 <strlen@plt>
   1c508:	cmp	r4, r0
   1c50c:	bhi	1c52c <__assert_fail@plt+0xb3a0>
   1c510:	cmp	r4, #0
   1c514:	moveq	r0, #34	; 0x22
   1c518:	bne	1c550 <__assert_fail@plt+0xb3c4>
   1c51c:	ldrd	r4, [sp]
   1c520:	ldr	r6, [sp, #8]
   1c524:	add	sp, sp, #12
   1c528:	pop	{pc}		; (ldr pc, [sp], #4)
   1c52c:	add	r2, r0, #1
   1c530:	mov	r1, r6
   1c534:	mov	r0, r5
   1c538:	bl	10f34 <memcpy@plt>
   1c53c:	ldrd	r4, [sp]
   1c540:	mov	r0, #0
   1c544:	ldr	r6, [sp, #8]
   1c548:	add	sp, sp, #12
   1c54c:	pop	{pc}		; (ldr pc, [sp], #4)
   1c550:	sub	r4, r4, #1
   1c554:	mov	r1, r6
   1c558:	mov	r2, r4
   1c55c:	mov	r0, r5
   1c560:	bl	10f34 <memcpy@plt>
   1c564:	mov	r3, #0
   1c568:	mov	r0, #34	; 0x22
   1c56c:	strb	r3, [r5, r4]
   1c570:	ldrd	r4, [sp]
   1c574:	ldr	r6, [sp, #8]
   1c578:	add	sp, sp, #12
   1c57c:	pop	{pc}		; (ldr pc, [sp], #4)
   1c580:	cmp	r4, #0
   1c584:	mov	r0, #22
   1c588:	strbne	r6, [r5]
   1c58c:	ldrd	r4, [sp]
   1c590:	ldr	r6, [sp, #8]
   1c594:	add	sp, sp, #12
   1c598:	pop	{pc}		; (ldr pc, [sp], #4)
   1c59c:	mov	r1, #0
   1c5a0:	b	11114 <setlocale@plt>
   1c5a4:	cmp	r3, #0
   1c5a8:	cmpeq	r2, #0
   1c5ac:	bne	1c5c4 <__assert_fail@plt+0xb438>
   1c5b0:	cmp	r1, #0
   1c5b4:	cmpeq	r0, #0
   1c5b8:	mvnne	r1, #0
   1c5bc:	mvnne	r0, #0
   1c5c0:	b	1c5e0 <__assert_fail@plt+0xb454>
   1c5c4:	sub	sp, sp, #8
   1c5c8:	push	{sp, lr}
   1c5cc:	bl	1c5f0 <__assert_fail@plt+0xb464>
   1c5d0:	ldr	lr, [sp, #4]
   1c5d4:	add	sp, sp, #8
   1c5d8:	pop	{r2, r3}
   1c5dc:	bx	lr
   1c5e0:	push	{r1, lr}
   1c5e4:	mov	r0, #8
   1c5e8:	bl	10ed4 <raise@plt>
   1c5ec:	pop	{r1, pc}
   1c5f0:	cmp	r1, r3
   1c5f4:	cmpeq	r0, r2
   1c5f8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c5fc:	mov	r4, r0
   1c600:	movcc	r0, #0
   1c604:	mov	r5, r1
   1c608:	ldr	lr, [sp, #36]	; 0x24
   1c60c:	movcc	r1, r0
   1c610:	bcc	1c70c <__assert_fail@plt+0xb580>
   1c614:	cmp	r3, #0
   1c618:	clzeq	ip, r2
   1c61c:	clzne	ip, r3
   1c620:	addeq	ip, ip, #32
   1c624:	cmp	r5, #0
   1c628:	clzeq	r1, r4
   1c62c:	addeq	r1, r1, #32
   1c630:	clzne	r1, r5
   1c634:	sub	ip, ip, r1
   1c638:	sub	sl, ip, #32
   1c63c:	lsl	r9, r3, ip
   1c640:	rsb	fp, ip, #32
   1c644:	orr	r9, r9, r2, lsl sl
   1c648:	orr	r9, r9, r2, lsr fp
   1c64c:	lsl	r8, r2, ip
   1c650:	cmp	r5, r9
   1c654:	cmpeq	r4, r8
   1c658:	movcc	r0, #0
   1c65c:	movcc	r1, r0
   1c660:	bcc	1c67c <__assert_fail@plt+0xb4f0>
   1c664:	mov	r0, #1
   1c668:	subs	r4, r4, r8
   1c66c:	lsl	r1, r0, sl
   1c670:	orr	r1, r1, r0, lsr fp
   1c674:	lsl	r0, r0, ip
   1c678:	sbc	r5, r5, r9
   1c67c:	cmp	ip, #0
   1c680:	beq	1c70c <__assert_fail@plt+0xb580>
   1c684:	lsr	r6, r8, #1
   1c688:	orr	r6, r6, r9, lsl #31
   1c68c:	lsr	r7, r9, #1
   1c690:	mov	r2, ip
   1c694:	b	1c6b8 <__assert_fail@plt+0xb52c>
   1c698:	subs	r3, r4, r6
   1c69c:	sbc	r8, r5, r7
   1c6a0:	adds	r3, r3, r3
   1c6a4:	adc	r8, r8, r8
   1c6a8:	adds	r4, r3, #1
   1c6ac:	adc	r5, r8, #0
   1c6b0:	subs	r2, r2, #1
   1c6b4:	beq	1c6d4 <__assert_fail@plt+0xb548>
   1c6b8:	cmp	r5, r7
   1c6bc:	cmpeq	r4, r6
   1c6c0:	bcs	1c698 <__assert_fail@plt+0xb50c>
   1c6c4:	adds	r4, r4, r4
   1c6c8:	adc	r5, r5, r5
   1c6cc:	subs	r2, r2, #1
   1c6d0:	bne	1c6b8 <__assert_fail@plt+0xb52c>
   1c6d4:	lsr	r3, r4, ip
   1c6d8:	orr	r3, r3, r5, lsl fp
   1c6dc:	lsr	r2, r5, ip
   1c6e0:	orr	r3, r3, r5, lsr sl
   1c6e4:	adds	r0, r0, r4
   1c6e8:	mov	r4, r3
   1c6ec:	lsl	r3, r2, ip
   1c6f0:	orr	r3, r3, r4, lsl sl
   1c6f4:	lsl	ip, r4, ip
   1c6f8:	orr	r3, r3, r4, lsr fp
   1c6fc:	adc	r1, r1, r5
   1c700:	subs	r0, r0, ip
   1c704:	mov	r5, r2
   1c708:	sbc	r1, r1, r3
   1c70c:	cmp	lr, #0
   1c710:	strdne	r4, [lr]
   1c714:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c718:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1c71c:	mov	r7, r0
   1c720:	ldr	r6, [pc, #72]	; 1c770 <__assert_fail@plt+0xb5e4>
   1c724:	ldr	r5, [pc, #72]	; 1c774 <__assert_fail@plt+0xb5e8>
   1c728:	add	r6, pc, r6
   1c72c:	add	r5, pc, r5
   1c730:	sub	r6, r6, r5
   1c734:	mov	r8, r1
   1c738:	mov	r9, r2
   1c73c:	bl	10e90 <fdopen@plt-0x20>
   1c740:	asrs	r6, r6, #2
   1c744:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1c748:	mov	r4, #0
   1c74c:	add	r4, r4, #1
   1c750:	ldr	r3, [r5], #4
   1c754:	mov	r2, r9
   1c758:	mov	r1, r8
   1c75c:	mov	r0, r7
   1c760:	blx	r3
   1c764:	cmp	r6, r4
   1c768:	bne	1c74c <__assert_fail@plt+0xb5c0>
   1c76c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1c770:	andeq	r1, r1, r4, ror #15
   1c774:	ldrdeq	r1, [r1], -ip
   1c778:	bx	lr
   1c77c:	ldr	r3, [pc, #12]	; 1c790 <__assert_fail@plt+0xb604>
   1c780:	mov	r1, #0
   1c784:	add	r3, pc, r3
   1c788:	ldr	r2, [r3]
   1c78c:	b	1109c <__cxa_atexit@plt>
   1c790:	andeq	r1, r1, r0, lsl #19

Disassembly of section .fini:

0001c794 <.fini>:
   1c794:	push	{r3, lr}
   1c798:	pop	{r3, pc}
