
../repos/charybdis/modules/.libs/m_ison.so:     file format elf32-littlearm


Disassembly of section .init:

000004d8 <_init>:
 4d8:	push	{r3, lr}
 4dc:	bl	564 <call_weak_fn>
 4e0:	pop	{r3, pc}

Disassembly of section .plt:

000004e4 <.plt>:
 4e4:	push	{lr}		; (str lr, [sp, #-4]!)
 4e8:	ldr	lr, [pc, #4]	; 4f4 <.plt+0x10>
 4ec:	add	lr, pc, lr
 4f0:	ldr	pc, [lr, #8]!
 4f4:	.word	0x00010b0c

000004f8 <__cxa_finalize@plt>:
 4f8:	add	ip, pc, #0, 12
 4fc:	add	ip, ip, #16, 20	; 0x10000
 500:	ldr	pc, [ip, #2828]!	; 0xb0c

00000504 <sendto_one@plt>:
 504:	add	ip, pc, #0, 12
 508:	add	ip, ip, #16, 20	; 0x10000
 50c:	ldr	pc, [ip, #2820]!	; 0xb04

00000510 <memcpy@plt>:
 510:	add	ip, pc, #0, 12
 514:	add	ip, ip, #16, 20	; 0x10000
 518:	ldr	pc, [ip, #2812]!	; 0xafc

0000051c <strcpy@plt>:
 51c:	add	ip, pc, #0, 12
 520:	add	ip, ip, #16, 20	; 0x10000
 524:	ldr	pc, [ip, #2804]!	; 0xaf4

00000528 <__gmon_start__@plt>:
 528:	add	ip, pc, #0, 12
 52c:	add	ip, ip, #16, 20	; 0x10000
 530:	ldr	pc, [ip, #2796]!	; 0xaec

00000534 <strlen@plt>:
 534:	add	ip, pc, #0, 12
 538:	add	ip, ip, #16, 20	; 0x10000
 53c:	ldr	pc, [ip, #2788]!	; 0xae4

00000540 <rb_strtok_r@plt>:
 540:	add	ip, pc, #0, 12
 544:	add	ip, ip, #16, 20	; 0x10000
 548:	ldr	pc, [ip, #2780]!	; 0xadc

0000054c <sprintf@plt>:
 54c:	add	ip, pc, #0, 12
 550:	add	ip, ip, #16, 20	; 0x10000
 554:	ldr	pc, [ip, #2772]!	; 0xad4

00000558 <find_named_person@plt>:
 558:	add	ip, pc, #0, 12
 55c:	add	ip, ip, #16, 20	; 0x10000
 560:	ldr	pc, [ip, #2764]!	; 0xacc

Disassembly of section .text:

00000564 <call_weak_fn>:
 564:	ldr	r3, [pc, #20]	; 580 <call_weak_fn+0x1c>
 568:	ldr	r2, [pc, #20]	; 584 <call_weak_fn+0x20>
 56c:	add	r3, pc, r3
 570:	ldr	r2, [r3, r2]
 574:	cmp	r2, #0
 578:	bxeq	lr
 57c:	b	528 <__gmon_start__@plt>
 580:	.word	0x00010a8c
 584:	.word	0x00000038

00000588 <deregister_tm_clones>:
 588:	ldr	r3, [pc, #52]	; 5c4 <deregister_tm_clones+0x3c>
 58c:	ldr	r0, [pc, #52]	; 5c8 <deregister_tm_clones+0x40>
 590:	add	r3, pc, r3
 594:	add	r0, pc, r0
 598:	add	r3, r3, #3
 59c:	sub	r3, r3, r0
 5a0:	cmp	r3, #6
 5a4:	ldr	r3, [pc, #32]	; 5cc <deregister_tm_clones+0x44>
 5a8:	add	r3, pc, r3
 5ac:	bxls	lr
 5b0:	ldr	r2, [pc, #24]	; 5d0 <deregister_tm_clones+0x48>
 5b4:	ldr	r3, [r3, r2]
 5b8:	cmp	r3, #0
 5bc:	bxeq	lr
 5c0:	bx	r3
 5c4:	.word	0x00010b28
 5c8:	.word	0x00010b24
 5cc:	.word	0x00010a50
 5d0:	.word	0x00000034

000005d4 <register_tm_clones>:
 5d4:	ldr	r1, [pc, #56]	; 614 <register_tm_clones+0x40>
 5d8:	ldr	r0, [pc, #56]	; 618 <register_tm_clones+0x44>
 5dc:	add	r1, pc, r1
 5e0:	add	r0, pc, r0
 5e4:	sub	r1, r1, r0
 5e8:	ldr	r3, [pc, #44]	; 61c <register_tm_clones+0x48>
 5ec:	asr	r1, r1, #2
 5f0:	add	r3, pc, r3
 5f4:	add	r1, r1, r1, lsr #31
 5f8:	asrs	r1, r1, #1
 5fc:	bxeq	lr
 600:	ldr	r2, [pc, #24]	; 620 <register_tm_clones+0x4c>
 604:	ldr	r3, [r3, r2]
 608:	cmp	r3, #0
 60c:	bxeq	lr
 610:	bx	r3
 614:	.word	0x00010adc
 618:	.word	0x00010ad8
 61c:	.word	0x00010a08
 620:	.word	0x00000040

00000624 <__do_global_dtors_aux>:
 624:	ldr	r3, [pc, #76]	; 678 <__do_global_dtors_aux+0x54>
 628:	ldr	r2, [pc, #76]	; 67c <__do_global_dtors_aux+0x58>
 62c:	add	r3, pc, r3
 630:	add	r2, pc, r2
 634:	ldrb	r3, [r3]
 638:	cmp	r3, #0
 63c:	bxne	lr
 640:	ldr	r3, [pc, #56]	; 680 <__do_global_dtors_aux+0x5c>
 644:	push	{r4, lr}
 648:	ldr	r3, [r2, r3]
 64c:	cmp	r3, #0
 650:	beq	660 <__do_global_dtors_aux+0x3c>
 654:	ldr	r3, [pc, #40]	; 684 <__do_global_dtors_aux+0x60>
 658:	ldr	r0, [pc, r3]
 65c:	bl	4f8 <__cxa_finalize@plt>
 660:	bl	588 <deregister_tm_clones>
 664:	ldr	r3, [pc, #28]	; 688 <__do_global_dtors_aux+0x64>
 668:	mov	r2, #1
 66c:	add	r3, pc, r3
 670:	strb	r2, [r3]
 674:	pop	{r4, pc}
 678:	.word	0x00010a8c
 67c:	.word	0x000109c8
 680:	.word	0x00000030
 684:	.word	0x000109e8
 688:	.word	0x00010a4c

0000068c <frame_dummy>:
 68c:	ldr	r0, [pc, #56]	; 6cc <frame_dummy+0x40>
 690:	ldr	r3, [pc, #56]	; 6d0 <frame_dummy+0x44>
 694:	add	r0, pc, r0
 698:	ldr	r2, [r0]
 69c:	add	r3, pc, r3
 6a0:	cmp	r2, #0
 6a4:	bne	6ac <frame_dummy+0x20>
 6a8:	b	5d4 <register_tm_clones>
 6ac:	ldr	r2, [pc, #32]	; 6d4 <frame_dummy+0x48>
 6b0:	ldr	r3, [r3, r2]
 6b4:	cmp	r3, #0
 6b8:	beq	6a8 <frame_dummy+0x1c>
 6bc:	push	{r4, lr}
 6c0:	blx	r3
 6c4:	pop	{r4, lr}
 6c8:	b	5d4 <register_tm_clones>
 6cc:	.word	0x00010860
 6d0:	.word	0x0001095c
 6d4:	.word	0x0000003c

000006d8 <m_ison>:
 6d8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
 6dc:	add	fp, sp, #32
 6e0:	sub	sp, sp, #36	; 0x24
 6e4:	mov	r1, r2
 6e8:	str	r2, [fp, #-64]	; 0xffffffc0
 6ec:	mov	r4, r3
 6f0:	str	r3, [fp, #-60]	; 0xffffffc4
 6f4:	ldr	r3, [pc, #340]	; 850 <m_ison+0x178>
 6f8:	add	r3, pc, r3
 6fc:	ldr	r2, [pc, #336]	; 854 <m_ison+0x17c>
 700:	ldr	r2, [r3, r2]
 704:	ldr	r6, [pc, #332]	; 858 <m_ison+0x180>
 708:	add	r6, pc, r6
 70c:	add	r3, r1, #88	; 0x58
 710:	add	r2, r2, #88	; 0x58
 714:	ldr	r1, [pc, #320]	; 85c <m_ison+0x184>
 718:	add	r1, pc, r1
 71c:	mov	r0, r6
 720:	bl	54c <sprintf@plt>
 724:	mov	r0, r6
 728:	bl	534 <strlen@plt>
 72c:	add	r6, r6, r0
 730:	cmp	r4, #1
 734:	ble	828 <m_ison+0x150>
 738:	ldr	r7, [fp, #4]
 73c:	mov	sl, #1
 740:	sub	r3, fp, #40	; 0x28
 744:	str	r3, [fp, #-48]	; 0xffffffd0
 748:	ldr	r3, [pc, #272]	; 860 <m_ison+0x188>
 74c:	add	r3, pc, r3
 750:	str	r3, [fp, #-56]	; 0xffffffc8
 754:	ldr	r8, [pc, #264]	; 864 <m_ison+0x18c>
 758:	add	r8, pc, r8
 75c:	add	r8, r8, #512	; 0x200
 760:	mov	r9, #32
 764:	ldr	r3, [pc, #252]	; 868 <m_ison+0x190>
 768:	add	r3, pc, r3
 76c:	str	r3, [fp, #-52]	; 0xffffffcc
 770:	b	7e8 <m_ison+0x110>
 774:	ldr	r2, [fp, #-48]	; 0xffffffd0
 778:	ldr	r1, [fp, #-52]	; 0xffffffcc
 77c:	mov	r0, #0
 780:	bl	540 <rb_strtok_r@plt>
 784:	cmp	r0, #0
 788:	beq	7d8 <m_ison+0x100>
 78c:	bl	558 <find_named_person@plt>
 790:	cmp	r0, #0
 794:	beq	774 <m_ison+0x9c>
 798:	add	r5, r0, #88	; 0x58
 79c:	mov	r0, r5
 7a0:	bl	534 <strlen@plt>
 7a4:	mov	r4, r0
 7a8:	add	r3, r0, #5
 7ac:	add	r3, r6, r3
 7b0:	cmp	r3, r8
 7b4:	bcs	828 <m_ison+0x150>
 7b8:	mov	r2, r0
 7bc:	mov	r1, r5
 7c0:	mov	r0, r6
 7c4:	bl	510 <memcpy@plt>
 7c8:	add	r4, r6, r4
 7cc:	add	r6, r4, #1
 7d0:	strb	r9, [r4]
 7d4:	b	774 <m_ison+0x9c>
 7d8:	add	sl, sl, #1
 7dc:	ldr	r3, [fp, #-60]	; 0xffffffc4
 7e0:	cmp	r3, sl
 7e4:	beq	828 <m_ison+0x150>
 7e8:	ldr	r5, [r7, #4]!
 7ec:	mov	r0, r5
 7f0:	bl	534 <strlen@plt>
 7f4:	add	r0, r0, #15
 7f8:	bic	r0, r0, #7
 7fc:	sub	sp, sp, r0
 800:	mov	r1, r5
 804:	mov	r0, sp
 808:	bl	51c <strcpy@plt>
 80c:	ldr	r2, [fp, #-48]	; 0xffffffd0
 810:	ldr	r1, [fp, #-56]	; 0xffffffc8
 814:	mov	r0, sp
 818:	bl	540 <rb_strtok_r@plt>
 81c:	cmp	r0, #0
 820:	bne	78c <m_ison+0xb4>
 824:	b	7d8 <m_ison+0x100>
 828:	mov	r3, #0
 82c:	strb	r3, [r6]
 830:	ldr	r2, [pc, #52]	; 86c <m_ison+0x194>
 834:	add	r2, pc, r2
 838:	ldr	r1, [pc, #48]	; 870 <m_ison+0x198>
 83c:	add	r1, pc, r1
 840:	ldr	r0, [fp, #-64]	; 0xffffffc0
 844:	bl	504 <sendto_one@plt>
 848:	sub	sp, fp, #32
 84c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
 850:	.word	0x00010900
 854:	.word	0x00000044
 858:	.word	0x000109b4
 85c:	.word	0x0000019c
 860:	.word	0x00000178
 864:	.word	0x00010964
 868:	.word	0x0000015c
 86c:	.word	0x00010888
 870:	.word	0x0000008c

Disassembly of section .fini:

00000874 <_fini>:
 874:	push	{r3, lr}
 878:	pop	{r3, pc}
