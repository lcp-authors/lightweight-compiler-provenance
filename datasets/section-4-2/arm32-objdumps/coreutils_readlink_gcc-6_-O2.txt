
../repos/coreutils/src/readlink:     file format elf32-littlearm


Disassembly of section .init:

00010c10 <.init>:
   10c10:	push	{r3, lr}
   10c14:	bl	11218 <strspn@plt+0x384>
   10c18:	pop	{r3, pc}

Disassembly of section .plt:

00010c1c <calloc@plt-0x14>:
   10c1c:	push	{lr}		; (str lr, [sp, #-4]!)
   10c20:	ldr	lr, [pc, #4]	; 10c2c <calloc@plt-0x4>
   10c24:	add	lr, pc, lr
   10c28:	ldr	pc, [lr, #8]!
   10c2c:	ldrdeq	r7, [r1], -r4

00010c30 <calloc@plt>:
   10c30:	add	ip, pc, #0, 12
   10c34:	add	ip, ip, #94208	; 0x17000
   10c38:	ldr	pc, [ip, #980]!	; 0x3d4

00010c3c <fputs_unlocked@plt>:
   10c3c:	add	ip, pc, #0, 12
   10c40:	add	ip, ip, #94208	; 0x17000
   10c44:	ldr	pc, [ip, #972]!	; 0x3cc

00010c48 <raise@plt>:
   10c48:	add	ip, pc, #0, 12
   10c4c:	add	ip, ip, #94208	; 0x17000
   10c50:	ldr	pc, [ip, #964]!	; 0x3c4

00010c54 <strcmp@plt>:
   10c54:	add	ip, pc, #0, 12
   10c58:	add	ip, ip, #94208	; 0x17000
   10c5c:	ldr	pc, [ip, #956]!	; 0x3bc

00010c60 <fflush@plt>:
   10c60:	add	ip, pc, #0, 12
   10c64:	add	ip, ip, #94208	; 0x17000
   10c68:	ldr	pc, [ip, #948]!	; 0x3b4

00010c6c <memmove@plt>:
   10c6c:	add	ip, pc, #0, 12
   10c70:	add	ip, ip, #94208	; 0x17000
   10c74:	ldr	pc, [ip, #940]!	; 0x3ac

00010c78 <free@plt>:
   10c78:	add	ip, pc, #0, 12
   10c7c:	add	ip, ip, #94208	; 0x17000
   10c80:	ldr	pc, [ip, #932]!	; 0x3a4

00010c84 <faccessat@plt>:
   10c84:	add	ip, pc, #0, 12
   10c88:	add	ip, ip, #94208	; 0x17000
   10c8c:	ldr	pc, [ip, #924]!	; 0x39c

00010c90 <_exit@plt>:
   10c90:	add	ip, pc, #0, 12
   10c94:	add	ip, ip, #94208	; 0x17000
   10c98:	ldr	pc, [ip, #916]!	; 0x394

00010c9c <memcpy@plt>:
   10c9c:	add	ip, pc, #0, 12
   10ca0:	add	ip, ip, #94208	; 0x17000
   10ca4:	ldr	pc, [ip, #908]!	; 0x38c

00010ca8 <mbsinit@plt>:
   10ca8:	add	ip, pc, #0, 12
   10cac:	add	ip, ip, #94208	; 0x17000
   10cb0:	ldr	pc, [ip, #900]!	; 0x384

00010cb4 <memcmp@plt>:
   10cb4:	add	ip, pc, #0, 12
   10cb8:	add	ip, ip, #94208	; 0x17000
   10cbc:	ldr	pc, [ip, #892]!	; 0x37c

00010cc0 <fputc_unlocked@plt>:
   10cc0:	add	ip, pc, #0, 12
   10cc4:	add	ip, ip, #94208	; 0x17000
   10cc8:	ldr	pc, [ip, #884]!	; 0x374

00010ccc <dcgettext@plt>:
   10ccc:	add	ip, pc, #0, 12
   10cd0:	add	ip, ip, #94208	; 0x17000
   10cd4:	ldr	pc, [ip, #876]!	; 0x36c

00010cd8 <realloc@plt>:
   10cd8:	add	ip, pc, #0, 12
   10cdc:	add	ip, ip, #94208	; 0x17000
   10ce0:	ldr	pc, [ip, #868]!	; 0x364

00010ce4 <textdomain@plt>:
   10ce4:	add	ip, pc, #0, 12
   10ce8:	add	ip, ip, #94208	; 0x17000
   10cec:	ldr	pc, [ip, #860]!	; 0x35c

00010cf0 <rawmemchr@plt>:
   10cf0:	add	ip, pc, #0, 12
   10cf4:	add	ip, ip, #94208	; 0x17000
   10cf8:	ldr	pc, [ip, #852]!	; 0x354

00010cfc <iswprint@plt>:
   10cfc:	add	ip, pc, #0, 12
   10d00:	add	ip, ip, #94208	; 0x17000
   10d04:	ldr	pc, [ip, #844]!	; 0x34c

00010d08 <readlink@plt>:
   10d08:	add	ip, pc, #0, 12
   10d0c:	add	ip, ip, #94208	; 0x17000
   10d10:	ldr	pc, [ip, #836]!	; 0x344

00010d14 <fwrite@plt>:
   10d14:	add	ip, pc, #0, 12
   10d18:	add	ip, ip, #94208	; 0x17000
   10d1c:	ldr	pc, [ip, #828]!	; 0x33c

00010d20 <lseek64@plt>:
   10d20:	add	ip, pc, #0, 12
   10d24:	add	ip, ip, #94208	; 0x17000
   10d28:	ldr	pc, [ip, #820]!	; 0x334

00010d2c <__ctype_get_mb_cur_max@plt>:
   10d2c:	add	ip, pc, #0, 12
   10d30:	add	ip, ip, #94208	; 0x17000
   10d34:	ldr	pc, [ip, #812]!	; 0x32c

00010d38 <__fpending@plt>:
   10d38:	add	ip, pc, #0, 12
   10d3c:	add	ip, ip, #94208	; 0x17000
   10d40:	ldr	pc, [ip, #804]!	; 0x324

00010d44 <mbrtowc@plt>:
   10d44:	add	ip, pc, #0, 12
   10d48:	add	ip, ip, #94208	; 0x17000
   10d4c:	ldr	pc, [ip, #796]!	; 0x31c

00010d50 <error@plt>:
   10d50:	add	ip, pc, #0, 12
   10d54:	add	ip, ip, #94208	; 0x17000
   10d58:	ldr	pc, [ip, #788]!	; 0x314

00010d5c <malloc@plt>:
   10d5c:	add	ip, pc, #0, 12
   10d60:	add	ip, ip, #94208	; 0x17000
   10d64:	ldr	pc, [ip, #780]!	; 0x30c

00010d68 <__libc_start_main@plt>:
   10d68:	add	ip, pc, #0, 12
   10d6c:	add	ip, ip, #94208	; 0x17000
   10d70:	ldr	pc, [ip, #772]!	; 0x304

00010d74 <__freading@plt>:
   10d74:	add	ip, pc, #0, 12
   10d78:	add	ip, ip, #94208	; 0x17000
   10d7c:	ldr	pc, [ip, #764]!	; 0x2fc

00010d80 <__gmon_start__@plt>:
   10d80:	add	ip, pc, #0, 12
   10d84:	add	ip, ip, #94208	; 0x17000
   10d88:	ldr	pc, [ip, #756]!	; 0x2f4

00010d8c <mempcpy@plt>:
   10d8c:	add	ip, pc, #0, 12
   10d90:	add	ip, ip, #94208	; 0x17000
   10d94:	ldr	pc, [ip, #748]!	; 0x2ec

00010d98 <getopt_long@plt>:
   10d98:	add	ip, pc, #0, 12
   10d9c:	add	ip, ip, #94208	; 0x17000
   10da0:	ldr	pc, [ip, #740]!	; 0x2e4

00010da4 <__ctype_b_loc@plt>:
   10da4:	add	ip, pc, #0, 12
   10da8:	add	ip, ip, #94208	; 0x17000
   10dac:	ldr	pc, [ip, #732]!	; 0x2dc

00010db0 <getcwd@plt>:
   10db0:	add	ip, pc, #0, 12
   10db4:	add	ip, ip, #94208	; 0x17000
   10db8:	ldr	pc, [ip, #724]!	; 0x2d4

00010dbc <exit@plt>:
   10dbc:	add	ip, pc, #0, 12
   10dc0:	add	ip, ip, #94208	; 0x17000
   10dc4:	ldr	pc, [ip, #716]!	; 0x2cc

00010dc8 <strlen@plt>:
   10dc8:	add	ip, pc, #0, 12
   10dcc:	add	ip, ip, #94208	; 0x17000
   10dd0:	ldr	pc, [ip, #708]!	; 0x2c4

00010dd4 <__errno_location@plt>:
   10dd4:	add	ip, pc, #0, 12
   10dd8:	add	ip, ip, #94208	; 0x17000
   10ddc:	ldr	pc, [ip, #700]!	; 0x2bc

00010de0 <__cxa_atexit@plt>:
   10de0:	add	ip, pc, #0, 12
   10de4:	add	ip, ip, #94208	; 0x17000
   10de8:	ldr	pc, [ip, #692]!	; 0x2b4

00010dec <memset@plt>:
   10dec:	add	ip, pc, #0, 12
   10df0:	add	ip, ip, #94208	; 0x17000
   10df4:	ldr	pc, [ip, #684]!	; 0x2ac

00010df8 <__printf_chk@plt>:
   10df8:	add	ip, pc, #0, 12
   10dfc:	add	ip, ip, #94208	; 0x17000
   10e00:	ldr	pc, [ip, #676]!	; 0x2a4

00010e04 <fileno@plt>:
   10e04:	add	ip, pc, #0, 12
   10e08:	add	ip, ip, #94208	; 0x17000
   10e0c:	ldr	pc, [ip, #668]!	; 0x29c

00010e10 <__fprintf_chk@plt>:
   10e10:	add	ip, pc, #0, 12
   10e14:	add	ip, ip, #94208	; 0x17000
   10e18:	ldr	pc, [ip, #660]!	; 0x294

00010e1c <fclose@plt>:
   10e1c:	add	ip, pc, #0, 12
   10e20:	add	ip, ip, #94208	; 0x17000
   10e24:	ldr	pc, [ip, #652]!	; 0x28c

00010e28 <fseeko64@plt>:
   10e28:	add	ip, pc, #0, 12
   10e2c:	add	ip, ip, #94208	; 0x17000
   10e30:	ldr	pc, [ip, #644]!	; 0x284

00010e34 <__overflow@plt>:
   10e34:	add	ip, pc, #0, 12
   10e38:	add	ip, ip, #94208	; 0x17000
   10e3c:	ldr	pc, [ip, #636]!	; 0x27c

00010e40 <setlocale@plt>:
   10e40:	add	ip, pc, #0, 12
   10e44:	add	ip, ip, #94208	; 0x17000
   10e48:	ldr	pc, [ip, #628]!	; 0x274

00010e4c <strrchr@plt>:
   10e4c:	add	ip, pc, #0, 12
   10e50:	add	ip, ip, #94208	; 0x17000
   10e54:	ldr	pc, [ip, #620]!	; 0x26c

00010e58 <nl_langinfo@plt>:
   10e58:	add	ip, pc, #0, 12
   10e5c:	add	ip, ip, #94208	; 0x17000
   10e60:	ldr	pc, [ip, #612]!	; 0x264

00010e64 <bindtextdomain@plt>:
   10e64:	add	ip, pc, #0, 12
   10e68:	add	ip, ip, #94208	; 0x17000
   10e6c:	ldr	pc, [ip, #604]!	; 0x25c

00010e70 <__xstat64@plt>:
   10e70:	add	ip, pc, #0, 12
   10e74:	add	ip, ip, #94208	; 0x17000
   10e78:	ldr	pc, [ip, #596]!	; 0x254

00010e7c <strncmp@plt>:
   10e7c:	add	ip, pc, #0, 12
   10e80:	add	ip, ip, #94208	; 0x17000
   10e84:	ldr	pc, [ip, #588]!	; 0x24c

00010e88 <abort@plt>:
   10e88:	add	ip, pc, #0, 12
   10e8c:	add	ip, ip, #94208	; 0x17000
   10e90:	ldr	pc, [ip, #580]!	; 0x244

00010e94 <strspn@plt>:
   10e94:	add	ip, pc, #0, 12
   10e98:	add	ip, ip, #94208	; 0x17000
   10e9c:	ldr	pc, [ip, #572]!	; 0x23c

Disassembly of section .text:

00010ea0 <.text>:
   10ea0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10ea4:	mov	sl, r0
   10ea8:	sub	sp, sp, #28
   10eac:	ldr	r0, [r1]
   10eb0:	mov	r4, r1
   10eb4:	bl	13080 <strspn@plt+0x21ec>
   10eb8:	ldr	r1, [pc, #732]	; 1119c <strspn@plt+0x308>
   10ebc:	mov	r0, #6
   10ec0:	bl	10e40 <setlocale@plt>
   10ec4:	ldr	r1, [pc, #724]	; 111a0 <strspn@plt+0x30c>
   10ec8:	ldr	r0, [pc, #724]	; 111a4 <strspn@plt+0x310>
   10ecc:	bl	10e64 <bindtextdomain@plt>
   10ed0:	ldr	r0, [pc, #716]	; 111a4 <strspn@plt+0x310>
   10ed4:	bl	10ce4 <textdomain@plt>
   10ed8:	ldr	r0, [pc, #712]	; 111a8 <strspn@plt+0x314>
   10edc:	bl	16664 <strspn@plt+0x57d0>
   10ee0:	mov	r8, #0
   10ee4:	ldr	r7, [pc, #704]	; 111ac <strspn@plt+0x318>
   10ee8:	ldr	r6, [pc, #704]	; 111b0 <strspn@plt+0x31c>
   10eec:	mov	r5, r8
   10ef0:	mvn	fp, #0
   10ef4:	mov	r9, #1
   10ef8:	str	r5, [sp]
   10efc:	mov	r3, r7
   10f00:	mov	r2, r6
   10f04:	mov	r1, r4
   10f08:	mov	r0, sl
   10f0c:	bl	10d98 <getopt_long@plt>
   10f10:	cmn	r0, #1
   10f14:	beq	11018 <strspn@plt+0x184>
   10f18:	cmp	r0, #109	; 0x6d
   10f1c:	beq	11008 <strspn@plt+0x174>
   10f20:	bgt	10f48 <strspn@plt+0xb4>
   10f24:	cmn	r0, #2
   10f28:	beq	11010 <strspn@plt+0x17c>
   10f2c:	ble	10fd0 <strspn@plt+0x13c>
   10f30:	cmp	r0, #101	; 0x65
   10f34:	beq	10f80 <strspn@plt+0xec>
   10f38:	cmp	r0, #102	; 0x66
   10f3c:	bne	10fc8 <strspn@plt+0x134>
   10f40:	mov	fp, r9
   10f44:	b	10ef8 <strspn@plt+0x64>
   10f48:	cmp	r0, #115	; 0x73
   10f4c:	beq	10f9c <strspn@plt+0x108>
   10f50:	ble	10f6c <strspn@plt+0xd8>
   10f54:	cmp	r0, #118	; 0x76
   10f58:	beq	10f88 <strspn@plt+0xf4>
   10f5c:	cmp	r0, #122	; 0x7a
   10f60:	bne	10fc8 <strspn@plt+0x134>
   10f64:	mov	r8, r9
   10f68:	b	10ef8 <strspn@plt+0x64>
   10f6c:	cmp	r0, #110	; 0x6e
   10f70:	bne	10f94 <strspn@plt+0x100>
   10f74:	ldr	r3, [pc, #568]	; 111b4 <strspn@plt+0x320>
   10f78:	strb	r9, [r3]
   10f7c:	b	10ef8 <strspn@plt+0x64>
   10f80:	mov	fp, r5
   10f84:	b	10ef8 <strspn@plt+0x64>
   10f88:	ldr	r3, [pc, #548]	; 111b4 <strspn@plt+0x320>
   10f8c:	strb	r9, [r3, #1]
   10f90:	b	10ef8 <strspn@plt+0x64>
   10f94:	cmp	r0, #113	; 0x71
   10f98:	bne	10fc8 <strspn@plt+0x134>
   10f9c:	ldr	r3, [pc, #528]	; 111b4 <strspn@plt+0x320>
   10fa0:	strb	r5, [r3, #1]
   10fa4:	b	10ef8 <strspn@plt+0x64>
   10fa8:	mov	r2, #5
   10fac:	ldr	r1, [pc, #516]	; 111b8 <strspn@plt+0x324>
   10fb0:	mov	r0, #0
   10fb4:	bl	10ccc <dcgettext@plt>
   10fb8:	mov	r1, #0
   10fbc:	mov	r2, r0
   10fc0:	mov	r0, r1
   10fc4:	bl	10d50 <error@plt>
   10fc8:	mov	r0, #1
   10fcc:	bl	11304 <strspn@plt+0x470>
   10fd0:	cmn	r0, #3
   10fd4:	bne	10fc8 <strspn@plt+0x134>
   10fd8:	ldr	r1, [pc, #476]	; 111bc <strspn@plt+0x328>
   10fdc:	ldr	r3, [pc, #476]	; 111c0 <strspn@plt+0x32c>
   10fe0:	ldr	r2, [pc, #476]	; 111c4 <strspn@plt+0x330>
   10fe4:	str	r5, [sp, #4]
   10fe8:	ldr	r0, [r1]
   10fec:	ldr	r3, [r3]
   10ff0:	ldr	r1, [pc, #464]	; 111c8 <strspn@plt+0x334>
   10ff4:	str	r2, [sp]
   10ff8:	ldr	r2, [pc, #460]	; 111cc <strspn@plt+0x338>
   10ffc:	bl	154cc <strspn@plt+0x4638>
   11000:	mov	r0, #0
   11004:	bl	10dbc <exit@plt>
   11008:	mov	fp, #2
   1100c:	b	10ef8 <strspn@plt+0x64>
   11010:	mov	r0, #0
   11014:	bl	11304 <strspn@plt+0x470>
   11018:	ldr	r5, [pc, #432]	; 111d0 <strspn@plt+0x33c>
   1101c:	ldr	r3, [r5]
   11020:	cmp	sl, r3
   11024:	ble	10fa8 <strspn@plt+0x114>
   11028:	sub	r2, sl, r3
   1102c:	cmp	r2, #1
   11030:	ldr	r7, [pc, #380]	; 111b4 <strspn@plt+0x320>
   11034:	beq	11058 <strspn@plt+0x1c4>
   11038:	ldrb	r3, [r7]
   1103c:	cmp	r3, #0
   11040:	bne	1116c <strspn@plt+0x2d8>
   11044:	ldr	r3, [r5]
   11048:	mov	r9, #0
   1104c:	cmp	sl, r3
   11050:	strb	r9, [r7]
   11054:	ble	1115c <strspn@plt+0x2c8>
   11058:	cmp	r8, #0
   1105c:	moveq	r2, #10
   11060:	movne	r2, #0
   11064:	str	r2, [sp, #20]
   11068:	mov	r1, #0
   1106c:	uxtb	r2, r2
   11070:	str	r1, [sp, #12]
   11074:	ldr	r8, [pc, #320]	; 111bc <strspn@plt+0x328>
   11078:	str	r2, [sp, #16]
   1107c:	b	110d8 <strspn@plt+0x244>
   11080:	ldr	r1, [r8]
   11084:	mov	r0, r9
   11088:	bl	10c3c <fputs_unlocked@plt>
   1108c:	ldrb	r2, [r7]
   11090:	cmp	r2, #0
   11094:	bne	110bc <strspn@plt+0x228>
   11098:	ldr	r0, [r8]
   1109c:	ldr	r2, [r0, #20]
   110a0:	ldr	r1, [r0, #24]
   110a4:	cmp	r2, r1
   110a8:	addcc	r1, r2, #1
   110ac:	ldrbcc	r3, [sp, #16]
   110b0:	strcc	r1, [r0, #20]
   110b4:	strbcc	r3, [r2]
   110b8:	bcs	11190 <strspn@plt+0x2fc>
   110bc:	mov	r0, r9
   110c0:	bl	11fcc <strspn@plt+0x1138>
   110c4:	ldr	r3, [r5]
   110c8:	add	r3, r3, #1
   110cc:	cmp	sl, r3
   110d0:	str	r3, [r5]
   110d4:	ble	11160 <strspn@plt+0x2cc>
   110d8:	cmn	fp, #1
   110dc:	ldr	r6, [r4, r3, lsl #2]
   110e0:	beq	11148 <strspn@plt+0x2b4>
   110e4:	mov	r1, fp
   110e8:	mov	r0, r6
   110ec:	bl	1174c <strspn@plt+0x8b8>
   110f0:	mov	r9, r0
   110f4:	cmp	r9, #0
   110f8:	bne	11080 <strspn@plt+0x1ec>
   110fc:	ldrb	r3, [r7, #1]
   11100:	cmp	r3, #0
   11104:	moveq	r3, #1
   11108:	streq	r3, [sp, #12]
   1110c:	beq	110c4 <strspn@plt+0x230>
   11110:	bl	10dd4 <__errno_location@plt>
   11114:	mov	r2, r6
   11118:	mov	r3, #1
   1111c:	mov	r1, #3
   11120:	str	r3, [sp, #12]
   11124:	ldr	r6, [r0]
   11128:	mov	r0, #0
   1112c:	bl	14dbc <strspn@plt+0x3f28>
   11130:	ldr	r2, [pc, #156]	; 111d4 <strspn@plt+0x340>
   11134:	mov	r1, r6
   11138:	mov	r3, r0
   1113c:	mov	r0, #0
   11140:	bl	10d50 <error@plt>
   11144:	b	110c4 <strspn@plt+0x230>
   11148:	mov	r1, #63	; 0x3f
   1114c:	mov	r0, r6
   11150:	bl	11604 <strspn@plt+0x770>
   11154:	mov	r9, r0
   11158:	b	110f4 <strspn@plt+0x260>
   1115c:	str	r9, [sp, #12]
   11160:	ldr	r0, [sp, #12]
   11164:	add	sp, sp, #28
   11168:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1116c:	mov	r2, #5
   11170:	ldr	r1, [pc, #96]	; 111d8 <strspn@plt+0x344>
   11174:	mov	r0, #0
   11178:	bl	10ccc <dcgettext@plt>
   1117c:	mov	r1, #0
   11180:	mov	r2, r0
   11184:	mov	r0, r1
   11188:	bl	10d50 <error@plt>
   1118c:	b	11044 <strspn@plt+0x1b0>
   11190:	ldr	r1, [sp, #20]
   11194:	bl	10e34 <__overflow@plt>
   11198:	b	110bc <strspn@plt+0x228>
   1119c:	andeq	r6, r1, r0, lsl #30
   111a0:	andeq	r6, r1, r4, lsl sp
   111a4:	andeq	r6, r1, ip, ror #24
   111a8:	andeq	r1, r1, r8, lsr lr
   111ac:	andeq	r6, r1, r0, asr #13
   111b0:	andeq	r6, r1, ip, lsr sp
   111b4:	andeq	r8, r2, r9, asr #2
   111b8:	andeq	r6, r1, r8, asr #26
   111bc:	andeq	r8, r2, r4, asr #2
   111c0:	andeq	r8, r2, r8, ror #1
   111c4:	andeq	r6, r1, ip, lsr #26
   111c8:	andeq	r6, r1, r0, ror r7
   111cc:	andeq	r6, r1, r8, ror #24
   111d0:	andeq	r8, r2, r8, lsr r1
   111d4:	muleq	r1, r8, lr
   111d8:	andeq	r6, r1, r8, asr sp
   111dc:	mov	fp, #0
   111e0:	mov	lr, #0
   111e4:	pop	{r1}		; (ldr r1, [sp], #4)
   111e8:	mov	r2, sp
   111ec:	push	{r2}		; (str r2, [sp, #-4]!)
   111f0:	push	{r0}		; (str r0, [sp, #-4]!)
   111f4:	ldr	ip, [pc, #16]	; 1120c <strspn@plt+0x378>
   111f8:	push	{ip}		; (str ip, [sp, #-4]!)
   111fc:	ldr	r0, [pc, #12]	; 11210 <strspn@plt+0x37c>
   11200:	ldr	r3, [pc, #12]	; 11214 <strspn@plt+0x380>
   11204:	bl	10d68 <__libc_start_main@plt>
   11208:	bl	10e88 <abort@plt>
   1120c:	andeq	r6, r1, r0, ror #12
   11210:	andeq	r0, r1, r0, lsr #29
   11214:	andeq	r6, r1, r0, lsl #12
   11218:	ldr	r3, [pc, #20]	; 11234 <strspn@plt+0x3a0>
   1121c:	ldr	r2, [pc, #20]	; 11238 <strspn@plt+0x3a4>
   11220:	add	r3, pc, r3
   11224:	ldr	r2, [r3, r2]
   11228:	cmp	r2, #0
   1122c:	bxeq	lr
   11230:	b	10d80 <__gmon_start__@plt>
   11234:	ldrdeq	r6, [r1], -r8
   11238:	ldrdeq	r0, [r0], -ip
   1123c:	ldr	r3, [pc, #28]	; 11260 <strspn@plt+0x3cc>
   11240:	ldr	r0, [pc, #28]	; 11264 <strspn@plt+0x3d0>
   11244:	sub	r3, r3, r0
   11248:	cmp	r3, #6
   1124c:	bxls	lr
   11250:	ldr	r3, [pc, #16]	; 11268 <strspn@plt+0x3d4>
   11254:	cmp	r3, #0
   11258:	bxeq	lr
   1125c:	bx	r3
   11260:	andeq	r8, r2, r3, lsr r1
   11264:	andeq	r8, r2, r0, lsr r1
   11268:	andeq	r0, r0, r0
   1126c:	ldr	r1, [pc, #36]	; 11298 <strspn@plt+0x404>
   11270:	ldr	r0, [pc, #36]	; 1129c <strspn@plt+0x408>
   11274:	sub	r1, r1, r0
   11278:	asr	r1, r1, #2
   1127c:	add	r1, r1, r1, lsr #31
   11280:	asrs	r1, r1, #1
   11284:	bxeq	lr
   11288:	ldr	r3, [pc, #16]	; 112a0 <strspn@plt+0x40c>
   1128c:	cmp	r3, #0
   11290:	bxeq	lr
   11294:	bx	r3
   11298:	andeq	r8, r2, r0, lsr r1
   1129c:	andeq	r8, r2, r0, lsr r1
   112a0:	andeq	r0, r0, r0
   112a4:	push	{r4, lr}
   112a8:	ldr	r4, [pc, #24]	; 112c8 <strspn@plt+0x434>
   112ac:	ldrb	r3, [r4]
   112b0:	cmp	r3, #0
   112b4:	popne	{r4, pc}
   112b8:	bl	1123c <strspn@plt+0x3a8>
   112bc:	mov	r3, #1
   112c0:	strb	r3, [r4]
   112c4:	pop	{r4, pc}
   112c8:	andeq	r8, r2, r8, asr #2
   112cc:	ldr	r0, [pc, #40]	; 112fc <strspn@plt+0x468>
   112d0:	ldr	r3, [r0]
   112d4:	cmp	r3, #0
   112d8:	bne	112e0 <strspn@plt+0x44c>
   112dc:	b	1126c <strspn@plt+0x3d8>
   112e0:	ldr	r3, [pc, #24]	; 11300 <strspn@plt+0x46c>
   112e4:	cmp	r3, #0
   112e8:	beq	112dc <strspn@plt+0x448>
   112ec:	push	{r4, lr}
   112f0:	blx	r3
   112f4:	pop	{r4, lr}
   112f8:	b	1126c <strspn@plt+0x3d8>
   112fc:	andeq	r7, r2, r4, lsl pc
   11300:	andeq	r0, r0, r0
   11304:	subs	r6, r0, #0
   11308:	push	{r7, lr}
   1130c:	sub	sp, sp, #56	; 0x38
   11310:	beq	1134c <strspn@plt+0x4b8>
   11314:	ldr	r3, [pc, #660]	; 115b0 <strspn@plt+0x71c>
   11318:	mov	r2, #5
   1131c:	ldr	r1, [pc, #656]	; 115b4 <strspn@plt+0x720>
   11320:	mov	r0, #0
   11324:	ldr	r4, [r3]
   11328:	bl	10ccc <dcgettext@plt>
   1132c:	ldr	r3, [pc, #644]	; 115b8 <strspn@plt+0x724>
   11330:	mov	r1, #1
   11334:	ldr	r3, [r3]
   11338:	mov	r2, r0
   1133c:	mov	r0, r4
   11340:	bl	10e10 <__fprintf_chk@plt>
   11344:	mov	r0, r6
   11348:	bl	10dbc <exit@plt>
   1134c:	mov	r2, #5
   11350:	ldr	r1, [pc, #612]	; 115bc <strspn@plt+0x728>
   11354:	bl	10ccc <dcgettext@plt>
   11358:	ldr	r3, [pc, #600]	; 115b8 <strspn@plt+0x724>
   1135c:	ldr	r7, [pc, #604]	; 115c0 <strspn@plt+0x72c>
   11360:	ldr	r4, [pc, #604]	; 115c4 <strspn@plt+0x730>
   11364:	ldr	r2, [r3]
   11368:	mov	r1, r0
   1136c:	mov	r0, #1
   11370:	bl	10df8 <__printf_chk@plt>
   11374:	mov	r2, #5
   11378:	ldr	r1, [pc, #584]	; 115c8 <strspn@plt+0x734>
   1137c:	mov	r0, r6
   11380:	bl	10ccc <dcgettext@plt>
   11384:	ldr	r1, [r7]
   11388:	bl	10c3c <fputs_unlocked@plt>
   1138c:	mov	r2, #5
   11390:	ldr	r1, [pc, #564]	; 115cc <strspn@plt+0x738>
   11394:	mov	r0, r6
   11398:	bl	10ccc <dcgettext@plt>
   1139c:	ldr	r1, [r7]
   113a0:	bl	10c3c <fputs_unlocked@plt>
   113a4:	mov	r2, #5
   113a8:	ldr	r1, [pc, #544]	; 115d0 <strspn@plt+0x73c>
   113ac:	mov	r0, r6
   113b0:	bl	10ccc <dcgettext@plt>
   113b4:	ldr	r1, [r7]
   113b8:	bl	10c3c <fputs_unlocked@plt>
   113bc:	mov	r2, #5
   113c0:	ldr	r1, [pc, #524]	; 115d4 <strspn@plt+0x740>
   113c4:	mov	r0, r6
   113c8:	bl	10ccc <dcgettext@plt>
   113cc:	ldr	r1, [r7]
   113d0:	bl	10c3c <fputs_unlocked@plt>
   113d4:	mov	r2, #5
   113d8:	ldr	r1, [pc, #504]	; 115d8 <strspn@plt+0x744>
   113dc:	mov	r0, r6
   113e0:	bl	10ccc <dcgettext@plt>
   113e4:	ldr	r1, [r7]
   113e8:	bl	10c3c <fputs_unlocked@plt>
   113ec:	ldm	r4!, {r0, r1, r2, r3}
   113f0:	mov	lr, sp
   113f4:	stmia	lr!, {r0, r1, r2, r3}
   113f8:	ldm	r4!, {r0, r1, r2, r3}
   113fc:	ldr	ip, [sp]
   11400:	stmia	lr!, {r0, r1, r2, r3}
   11404:	cmp	ip, #0
   11408:	ldm	r4!, {r0, r1, r2, r3}
   1140c:	stmia	lr!, {r0, r1, r2, r3}
   11410:	ldm	r4, {r0, r1}
   11414:	moveq	r4, sp
   11418:	stm	lr, {r0, r1}
   1141c:	beq	1144c <strspn@plt+0x5b8>
   11420:	ldr	r5, [pc, #436]	; 115dc <strspn@plt+0x748>
   11424:	mov	r4, sp
   11428:	b	11438 <strspn@plt+0x5a4>
   1142c:	ldr	ip, [r4, #8]!
   11430:	cmp	ip, #0
   11434:	beq	1144c <strspn@plt+0x5b8>
   11438:	mov	r1, ip
   1143c:	mov	r0, r5
   11440:	bl	10c54 <strcmp@plt>
   11444:	cmp	r0, #0
   11448:	bne	1142c <strspn@plt+0x598>
   1144c:	ldr	r4, [r4, #4]
   11450:	mov	r2, #5
   11454:	cmp	r4, #0
   11458:	ldr	r1, [pc, #384]	; 115e0 <strspn@plt+0x74c>
   1145c:	beq	11504 <strspn@plt+0x670>
   11460:	mov	r0, #0
   11464:	bl	10ccc <dcgettext@plt>
   11468:	ldr	r3, [pc, #372]	; 115e4 <strspn@plt+0x750>
   1146c:	ldr	r2, [pc, #372]	; 115e8 <strspn@plt+0x754>
   11470:	mov	r1, r0
   11474:	mov	r0, #1
   11478:	bl	10df8 <__printf_chk@plt>
   1147c:	mov	r1, #0
   11480:	mov	r0, #5
   11484:	bl	10e40 <setlocale@plt>
   11488:	cmp	r0, #0
   1148c:	ldreq	r5, [pc, #328]	; 115dc <strspn@plt+0x748>
   11490:	beq	114ac <strspn@plt+0x618>
   11494:	mov	r2, #3
   11498:	ldr	r1, [pc, #332]	; 115ec <strspn@plt+0x758>
   1149c:	bl	10e7c <strncmp@plt>
   114a0:	ldr	r5, [pc, #308]	; 115dc <strspn@plt+0x748>
   114a4:	cmp	r0, #0
   114a8:	bne	11594 <strspn@plt+0x700>
   114ac:	mov	r2, #5
   114b0:	ldr	r1, [pc, #312]	; 115f0 <strspn@plt+0x75c>
   114b4:	mov	r0, #0
   114b8:	bl	10ccc <dcgettext@plt>
   114bc:	ldr	r3, [pc, #280]	; 115dc <strspn@plt+0x748>
   114c0:	ldr	r2, [pc, #284]	; 115e4 <strspn@plt+0x750>
   114c4:	mov	r1, r0
   114c8:	mov	r0, #1
   114cc:	bl	10df8 <__printf_chk@plt>
   114d0:	mov	r2, #5
   114d4:	ldr	r1, [pc, #280]	; 115f4 <strspn@plt+0x760>
   114d8:	mov	r0, #0
   114dc:	bl	10ccc <dcgettext@plt>
   114e0:	ldr	r2, [pc, #272]	; 115f8 <strspn@plt+0x764>
   114e4:	cmp	r4, r5
   114e8:	ldr	r3, [pc, #268]	; 115fc <strspn@plt+0x768>
   114ec:	movne	r3, r2
   114f0:	mov	r1, r0
   114f4:	mov	r2, r4
   114f8:	mov	r0, #1
   114fc:	bl	10df8 <__printf_chk@plt>
   11500:	b	11344 <strspn@plt+0x4b0>
   11504:	mov	r0, r4
   11508:	bl	10ccc <dcgettext@plt>
   1150c:	ldr	r3, [pc, #208]	; 115e4 <strspn@plt+0x750>
   11510:	ldr	r2, [pc, #208]	; 115e8 <strspn@plt+0x754>
   11514:	mov	r1, r0
   11518:	mov	r0, #1
   1151c:	bl	10df8 <__printf_chk@plt>
   11520:	mov	r1, r4
   11524:	mov	r0, #5
   11528:	bl	10e40 <setlocale@plt>
   1152c:	cmp	r0, #0
   11530:	beq	11548 <strspn@plt+0x6b4>
   11534:	mov	r2, #3
   11538:	ldr	r1, [pc, #172]	; 115ec <strspn@plt+0x758>
   1153c:	bl	10e7c <strncmp@plt>
   11540:	cmp	r0, #0
   11544:	bne	1158c <strspn@plt+0x6f8>
   11548:	mov	r2, #5
   1154c:	ldr	r1, [pc, #156]	; 115f0 <strspn@plt+0x75c>
   11550:	mov	r0, #0
   11554:	bl	10ccc <dcgettext@plt>
   11558:	ldr	r3, [pc, #124]	; 115dc <strspn@plt+0x748>
   1155c:	ldr	r2, [pc, #128]	; 115e4 <strspn@plt+0x750>
   11560:	mov	r4, r3
   11564:	mov	r1, r0
   11568:	mov	r0, #1
   1156c:	bl	10df8 <__printf_chk@plt>
   11570:	ldr	r1, [pc, #124]	; 115f4 <strspn@plt+0x760>
   11574:	mov	r2, #5
   11578:	mov	r0, #0
   1157c:	bl	10ccc <dcgettext@plt>
   11580:	ldr	r3, [pc, #116]	; 115fc <strspn@plt+0x768>
   11584:	mov	r1, r0
   11588:	b	114f4 <strspn@plt+0x660>
   1158c:	ldr	r5, [pc, #72]	; 115dc <strspn@plt+0x748>
   11590:	mov	r4, r5
   11594:	mov	r2, #5
   11598:	ldr	r1, [pc, #96]	; 11600 <strspn@plt+0x76c>
   1159c:	mov	r0, #0
   115a0:	bl	10ccc <dcgettext@plt>
   115a4:	ldr	r1, [r7]
   115a8:	bl	10c3c <fputs_unlocked@plt>
   115ac:	b	114ac <strspn@plt+0x618>
   115b0:	andeq	r8, r2, r0, asr #2
   115b4:	andeq	r6, r1, ip, ror r7
   115b8:	andeq	r8, r2, r4, asr r1
   115bc:	andeq	r6, r1, r4, lsr #15
   115c0:	andeq	r8, r2, r4, asr #2
   115c4:	andeq	r6, r1, r8, lsl #13
   115c8:	andeq	r6, r1, r4, asr #15
   115cc:	strdeq	r6, [r1], -ip
   115d0:			; <UNDEFINED> instruction: 0x000169b4
   115d4:	andeq	r6, r1, r0, asr #23
   115d8:	strdeq	r6, [r1], -r0
   115dc:	andeq	r6, r1, r0, ror r7
   115e0:	andeq	r6, r1, r8, lsr #24
   115e4:	andeq	r6, r1, r0, asr #24
   115e8:	andeq	r6, r1, r8, ror #24
   115ec:	andeq	r6, r1, r8, ror ip
   115f0:	andeq	r6, r1, r4, asr #25
   115f4:	andeq	r6, r1, r0, ror #25
   115f8:	andeq	r6, r1, r0, lsl #30
   115fc:	muleq	r1, r0, sp
   11600:	andeq	r6, r1, ip, ror ip
   11604:	push	{r4, r5, r6, r7, r8, lr}
   11608:	subs	r7, r1, #0
   1160c:	sub	sp, sp, #128	; 0x80
   11610:	mov	r8, r0
   11614:	moveq	r4, #128	; 0x80
   11618:	beq	1162c <strspn@plt+0x798>
   1161c:	cmp	r7, #1024	; 0x400
   11620:	addls	r4, r7, #1
   11624:	ldrhi	r4, [pc, #284]	; 11748 <strspn@plt+0x8b4>
   11628:	mov	r7, #1
   1162c:	cmp	r4, #128	; 0x80
   11630:	moveq	r0, r7
   11634:	orrne	r0, r7, #1
   11638:	cmp	r0, #0
   1163c:	moveq	r5, r0
   11640:	moveq	r6, sp
   11644:	bne	1168c <strspn@plt+0x7f8>
   11648:	mov	r1, r6
   1164c:	mov	r2, r4
   11650:	mov	r0, r8
   11654:	bl	10d08 <readlink@plt>
   11658:	subs	r1, r0, #0
   1165c:	mov	r0, r5
   11660:	blt	116b8 <strspn@plt+0x824>
   11664:	cmp	r4, r1
   11668:	bhi	116cc <strspn@plt+0x838>
   1166c:	bl	11fcc <strspn@plt+0x1138>
   11670:	cmn	r4, #-1073741823	; 0xc0000001
   11674:	lslls	r4, r4, #1
   11678:	bls	1162c <strspn@plt+0x798>
   1167c:	cmn	r4, #-2147483646	; 0x80000002
   11680:	bhi	11704 <strspn@plt+0x870>
   11684:	mvn	r4, #-2147483648	; 0x80000000
   11688:	b	1162c <strspn@plt+0x798>
   1168c:	mov	r0, r4
   11690:	bl	15b98 <strspn@plt+0x4d04>
   11694:	subs	r6, r0, #0
   11698:	mov	r5, r6
   1169c:	bne	11648 <strspn@plt+0x7b4>
   116a0:	bl	10dd4 <__errno_location@plt>
   116a4:	mov	r3, #12
   116a8:	str	r3, [r0]
   116ac:	mov	r0, r5
   116b0:	add	sp, sp, #128	; 0x80
   116b4:	pop	{r4, r5, r6, r7, r8, pc}
   116b8:	bl	11fcc <strspn@plt+0x1138>
   116bc:	mov	r5, #0
   116c0:	mov	r0, r5
   116c4:	add	sp, sp, #128	; 0x80
   116c8:	pop	{r4, r5, r6, r7, r8, pc}
   116cc:	mov	r3, #0
   116d0:	cmp	r5, #0
   116d4:	strb	r3, [r6, r1]
   116d8:	beq	11720 <strspn@plt+0x88c>
   116dc:	add	r1, r1, #1
   116e0:	cmp	r4, r1
   116e4:	bls	116c0 <strspn@plt+0x82c>
   116e8:	mov	r0, r5
   116ec:	bl	15bc4 <strspn@plt+0x4d30>
   116f0:	cmp	r0, #0
   116f4:	movne	r5, r0
   116f8:	mov	r0, r5
   116fc:	add	sp, sp, #128	; 0x80
   11700:	pop	{r4, r5, r6, r7, r8, pc}
   11704:	bl	10dd4 <__errno_location@plt>
   11708:	mov	r5, #0
   1170c:	mov	r3, #12
   11710:	str	r3, [r0]
   11714:	mov	r0, r5
   11718:	add	sp, sp, #128	; 0x80
   1171c:	pop	{r4, r5, r6, r7, r8, pc}
   11720:	add	r4, r1, #1
   11724:	mov	r0, r4
   11728:	bl	15b98 <strspn@plt+0x4d04>
   1172c:	subs	r5, r0, #0
   11730:	beq	116c0 <strspn@plt+0x82c>
   11734:	mov	r2, r4
   11738:	mov	r1, r6
   1173c:	bl	10c9c <memcpy@plt>
   11740:	mov	r5, r0
   11744:	b	116c0 <strspn@plt+0x82c>
   11748:	andeq	r0, r0, r1, lsl #8
   1174c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11750:	and	r9, r1, #3
   11754:	sub	r3, r9, #1
   11758:	sub	sp, sp, #3232	; 0xca0
   1175c:	tst	r3, r9
   11760:	sub	sp, sp, #12
   11764:	bne	11944 <strspn@plt+0xab0>
   11768:	cmp	r0, #0
   1176c:	mov	r8, r0
   11770:	beq	11944 <strspn@plt+0xab0>
   11774:	ldrb	r6, [r0]
   11778:	cmp	r6, #0
   1177c:	beq	11980 <strspn@plt+0xaec>
   11780:	add	fp, sp, #2208	; 0x8a0
   11784:	mov	r5, r1
   11788:	add	r3, sp, #1184	; 0x4a0
   1178c:	mov	r1, #1024	; 0x400
   11790:	add	fp, fp, #8
   11794:	add	sl, sp, #152	; 0x98
   11798:	cmp	r6, #47	; 0x2f
   1179c:	str	r3, [sp, #1176]	; 0x498
   117a0:	str	r1, [sp, #1180]	; 0x49c
   117a4:	str	r1, [sp, #2212]	; 0x8a4
   117a8:	str	r1, [sp, #148]	; 0x94
   117ac:	str	fp, [sp, #2208]	; 0x8a0
   117b0:	str	sl, [sp, #144]	; 0x90
   117b4:	beq	11860 <strspn@plt+0x9cc>
   117b8:	mov	r4, sl
   117bc:	sub	r6, sl, #8
   117c0:	mov	r0, r4
   117c4:	bl	10db0 <getcwd@plt>
   117c8:	cmp	r0, #0
   117cc:	bne	11b2c <strspn@plt+0xc98>
   117d0:	bl	10dd4 <__errno_location@plt>
   117d4:	ldr	r3, [r0]
   117d8:	cmp	r3, #12
   117dc:	beq	11940 <strspn@plt+0xaac>
   117e0:	cmp	r3, #34	; 0x22
   117e4:	beq	11844 <strspn@plt+0x9b0>
   117e8:	mov	r5, r4
   117ec:	mov	r6, #1
   117f0:	ldr	r0, [sp, #1176]	; 0x498
   117f4:	add	r3, sp, #1184	; 0x4a0
   117f8:	cmp	r0, r3
   117fc:	beq	11804 <strspn@plt+0x970>
   11800:	bl	11fcc <strspn@plt+0x1138>
   11804:	ldr	r0, [sp, #2208]	; 0x8a0
   11808:	cmp	r0, fp
   1180c:	beq	11814 <strspn@plt+0x980>
   11810:	bl	11fcc <strspn@plt+0x1138>
   11814:	cmp	r6, #0
   11818:	beq	11964 <strspn@plt+0xad0>
   1181c:	ldr	r0, [sp, #144]	; 0x90
   11820:	cmp	r0, sl
   11824:	moveq	r6, #0
   11828:	beq	11834 <strspn@plt+0x9a0>
   1182c:	bl	11fcc <strspn@plt+0x1138>
   11830:	mov	r6, #0
   11834:	mov	r0, r6
   11838:	add	sp, sp, #3232	; 0xca0
   1183c:	add	sp, sp, #12
   11840:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11844:	mov	r0, r6
   11848:	bl	14fa8 <strspn@plt+0x4114>
   1184c:	cmp	r0, #0
   11850:	beq	11940 <strspn@plt+0xaac>
   11854:	ldr	r4, [sp, #144]	; 0x90
   11858:	ldr	r1, [sp, #148]	; 0x94
   1185c:	b	117c0 <strspn@plt+0x92c>
   11860:	mov	r4, sl
   11864:	add	r0, sl, #1
   11868:	strb	r6, [sp, #152]	; 0x98
   1186c:	mov	r3, #0
   11870:	and	r2, r5, #4
   11874:	str	r3, [sp, #24]
   11878:	str	r2, [sp, #8]
   1187c:	str	r3, [sp, #12]
   11880:	str	r3, [sp, #16]
   11884:	str	r9, [sp, #20]
   11888:	cmp	r6, #0
   1188c:	beq	11c90 <strspn@plt+0xdfc>
   11890:	cmp	r6, #47	; 0x2f
   11894:	bne	118ac <strspn@plt+0xa18>
   11898:	ldrb	r6, [r8, #1]!
   1189c:	cmp	r6, #47	; 0x2f
   118a0:	beq	11898 <strspn@plt+0xa04>
   118a4:	cmp	r6, #0
   118a8:	beq	11c90 <strspn@plt+0xdfc>
   118ac:	mov	r5, r8
   118b0:	ldrb	r3, [r5, #1]!
   118b4:	cmp	r3, #0
   118b8:	cmpne	r3, #47	; 0x2f
   118bc:	bne	118b0 <strspn@plt+0xa1c>
   118c0:	subs	r7, r5, r8
   118c4:	beq	11c90 <strspn@plt+0xdfc>
   118c8:	cmp	r7, #1
   118cc:	beq	11a50 <strspn@plt+0xbbc>
   118d0:	cmp	r7, #2
   118d4:	cmpeq	r6, #46	; 0x2e
   118d8:	beq	11990 <strspn@plt+0xafc>
   118dc:	ldrb	r3, [r0, #-1]
   118e0:	add	r6, r7, #2
   118e4:	cmp	r3, #47	; 0x2f
   118e8:	movne	r3, #47	; 0x2f
   118ec:	strbne	r3, [r0]
   118f0:	ldr	r3, [sp, #148]	; 0x94
   118f4:	addne	r0, r0, #1
   118f8:	add	r3, r4, r3
   118fc:	sub	r3, r3, r0
   11900:	cmp	r3, r6
   11904:	bcs	119e8 <strspn@plt+0xb54>
   11908:	mov	r9, r0
   1190c:	b	1192c <strspn@plt+0xa98>
   11910:	ldr	r3, [sp, #148]	; 0x94
   11914:	ldr	r4, [sp, #144]	; 0x90
   11918:	sub	r3, r3, r9
   1191c:	cmp	r3, r6
   11920:	add	r9, r4, r9
   11924:	mov	r0, r9
   11928:	bcs	119e8 <strspn@plt+0xb54>
   1192c:	add	r0, sp, #144	; 0x90
   11930:	bl	15014 <strspn@plt+0x4180>
   11934:	sub	r9, r9, r4
   11938:	cmp	r0, #0
   1193c:	bne	11910 <strspn@plt+0xa7c>
   11940:	bl	15b10 <strspn@plt+0x4c7c>
   11944:	bl	10dd4 <__errno_location@plt>
   11948:	mov	r6, #0
   1194c:	mov	r3, #22
   11950:	str	r3, [r0]
   11954:	mov	r0, r6
   11958:	add	sp, sp, #3232	; 0xca0
   1195c:	add	sp, sp, #12
   11960:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11964:	strb	r6, [r4], #1
   11968:	sub	r0, sl, #8
   1196c:	sub	r1, r4, r5
   11970:	bl	14f58 <strspn@plt+0x40c4>
   11974:	subs	r6, r0, #0
   11978:	bne	11834 <strspn@plt+0x9a0>
   1197c:	b	11940 <strspn@plt+0xaac>
   11980:	bl	10dd4 <__errno_location@plt>
   11984:	mov	r3, #2
   11988:	str	r3, [r0]
   1198c:	b	11834 <strspn@plt+0x9a0>
   11990:	ldrb	r3, [r8, #1]
   11994:	cmp	r3, #46	; 0x2e
   11998:	bne	118dc <strspn@plt+0xa48>
   1199c:	add	r3, r4, #1
   119a0:	cmp	r0, r3
   119a4:	bls	119dc <strspn@plt+0xb48>
   119a8:	sub	r3, r0, #1
   119ac:	cmp	r4, r3
   119b0:	bcs	11df0 <strspn@plt+0xf5c>
   119b4:	ldrb	r2, [r0, #-2]
   119b8:	cmp	r2, #47	; 0x2f
   119bc:	beq	11df0 <strspn@plt+0xf5c>
   119c0:	sub	r3, r0, #2
   119c4:	cmp	r3, r4
   119c8:	mov	r0, r3
   119cc:	beq	119dc <strspn@plt+0xb48>
   119d0:	ldrb	r2, [r3, #-1]!
   119d4:	cmp	r2, #47	; 0x2f
   119d8:	bne	119c4 <strspn@plt+0xb30>
   119dc:	ldrb	r6, [r5]
   119e0:	mov	r8, r5
   119e4:	b	11888 <strspn@plt+0x9f4>
   119e8:	mov	r2, r7
   119ec:	mov	r1, r8
   119f0:	bl	10d8c <mempcpy@plt>
   119f4:	ldr	r3, [sp, #8]
   119f8:	cmp	r3, #0
   119fc:	mov	r3, #0
   11a00:	str	r0, [sp, #28]
   11a04:	strb	r3, [r0]
   11a08:	bne	11a5c <strspn@plt+0xbc8>
   11a0c:	sub	r3, fp, #8
   11a10:	mov	r9, r3
   11a14:	str	r5, [sp, #32]
   11a18:	ldr	r6, [sp, #2212]	; 0x8a4
   11a1c:	ldr	r5, [sp, #2208]	; 0x8a0
   11a20:	sub	r6, r6, #1
   11a24:	mov	r2, r6
   11a28:	mov	r1, r5
   11a2c:	mov	r0, r4
   11a30:	bl	10d08 <readlink@plt>
   11a34:	cmp	r6, r0
   11a38:	bgt	11b40 <strspn@plt+0xcac>
   11a3c:	mov	r0, r9
   11a40:	bl	14fa8 <strspn@plt+0x4114>
   11a44:	cmp	r0, #0
   11a48:	bne	11a18 <strspn@plt+0xb84>
   11a4c:	b	11940 <strspn@plt+0xaac>
   11a50:	cmp	r6, #46	; 0x2e
   11a54:	bne	118dc <strspn@plt+0xa48>
   11a58:	b	119dc <strspn@plt+0xb48>
   11a5c:	ldr	r3, [sp, #20]
   11a60:	cmp	r3, #2
   11a64:	beq	11b24 <strspn@plt+0xc90>
   11a68:	ldrb	r2, [r5]
   11a6c:	mov	r3, r5
   11a70:	mov	r1, r2
   11a74:	cmp	r1, #47	; 0x2f
   11a78:	beq	11a84 <strspn@plt+0xbf0>
   11a7c:	b	11acc <strspn@plt+0xc38>
   11a80:	mov	r3, r0
   11a84:	ldrb	r1, [r3, #1]
   11a88:	add	r0, r3, #1
   11a8c:	cmp	r1, #47	; 0x2f
   11a90:	beq	11a80 <strspn@plt+0xbec>
   11a94:	cmp	r1, #0
   11a98:	add	r3, r3, #2
   11a9c:	beq	11d64 <strspn@plt+0xed0>
   11aa0:	cmp	r1, #46	; 0x2e
   11aa4:	bne	11acc <strspn@plt+0xc38>
   11aa8:	ldrb	r1, [r0, #1]
   11aac:	cmp	r1, #0
   11ab0:	beq	11d64 <strspn@plt+0xed0>
   11ab4:	cmp	r1, #46	; 0x2e
   11ab8:	bne	11a74 <strspn@plt+0xbe0>
   11abc:	ldrb	r3, [r0, #2]
   11ac0:	cmp	r3, #47	; 0x2f
   11ac4:	cmpne	r3, #0
   11ac8:	beq	11d64 <strspn@plt+0xed0>
   11acc:	ldr	r3, [sp, #8]
   11ad0:	cmp	r3, #0
   11ad4:	bne	11da4 <strspn@plt+0xf10>
   11ad8:	bl	10dd4 <__errno_location@plt>
   11adc:	ldr	r6, [r0]
   11ae0:	subs	r6, r6, #22
   11ae4:	movne	r6, #1
   11ae8:	cmp	r6, #0
   11aec:	beq	11b24 <strspn@plt+0xc90>
   11af0:	ldr	r3, [sp, #20]
   11af4:	cmp	r3, #1
   11af8:	bne	11df8 <strspn@plt+0xf64>
   11afc:	bl	10dd4 <__errno_location@plt>
   11b00:	ldr	r3, [r0]
   11b04:	cmp	r3, #2
   11b08:	bne	11df8 <strspn@plt+0xf64>
   11b0c:	ldr	r1, [pc, #752]	; 11e04 <strspn@plt+0xf70>
   11b10:	mov	r0, r5
   11b14:	bl	10e94 <strspn@plt>
   11b18:	ldrb	r3, [r5, r0]
   11b1c:	cmp	r3, #0
   11b20:	bne	11df8 <strspn@plt+0xf64>
   11b24:	ldr	r0, [sp, #28]
   11b28:	b	119dc <strspn@plt+0xb48>
   11b2c:	mov	r1, #0
   11b30:	mov	r0, r4
   11b34:	bl	10cf0 <rawmemchr@plt>
   11b38:	ldrb	r6, [r8]
   11b3c:	b	1186c <strspn@plt+0x9d8>
   11b40:	cmp	r0, #0
   11b44:	mov	r9, r5
   11b48:	mov	r6, r0
   11b4c:	ldr	r5, [sp, #32]
   11b50:	blt	11a5c <strspn@plt+0xbc8>
   11b54:	ldr	r3, [sp, #16]
   11b58:	cmp	r3, #19
   11b5c:	addle	r3, r3, #1
   11b60:	strle	r3, [sp, #16]
   11b64:	ble	11c28 <strspn@plt+0xd94>
   11b68:	ldrb	r3, [r8]
   11b6c:	cmp	r3, #0
   11b70:	beq	11c28 <strspn@plt+0xd94>
   11b74:	ldr	r2, [sp, #28]
   11b78:	rsb	r7, r7, #0
   11b7c:	mov	r3, #0
   11b80:	strb	r3, [r2, r7]
   11b84:	ldrb	r1, [r4]
   11b88:	add	r3, sp, #40	; 0x28
   11b8c:	mov	r2, r3
   11b90:	cmp	r1, #0
   11b94:	ldr	r3, [pc, #620]	; 11e08 <strspn@plt+0xf74>
   11b98:	movne	r3, r4
   11b9c:	mov	r1, r3
   11ba0:	mov	r0, #3
   11ba4:	bl	10e70 <__xstat64@plt>
   11ba8:	cmp	r0, #0
   11bac:	bne	11bf8 <strspn@plt+0xd64>
   11bb0:	ldrb	r3, [r8]
   11bb4:	ldr	r1, [sp, #24]
   11bb8:	ldr	r2, [sp, #28]
   11bbc:	cmp	r1, #0
   11bc0:	strb	r3, [r2, r7]
   11bc4:	beq	11db4 <strspn@plt+0xf20>
   11bc8:	add	r2, sp, #40	; 0x28
   11bcc:	mov	r1, r8
   11bd0:	ldr	r0, [sp, #24]
   11bd4:	bl	11f84 <strspn@plt+0x10f0>
   11bd8:	cmp	r0, #0
   11bdc:	beq	11c18 <strspn@plt+0xd84>
   11be0:	ldr	r3, [sp, #20]
   11be4:	cmp	r3, #2
   11be8:	beq	11b24 <strspn@plt+0xc90>
   11bec:	bl	10dd4 <__errno_location@plt>
   11bf0:	mov	r3, #40	; 0x28
   11bf4:	str	r3, [r0]
   11bf8:	mov	r5, r4
   11bfc:	ldr	r4, [sp, #28]
   11c00:	mov	r6, #1
   11c04:	ldr	r0, [sp, #24]
   11c08:	cmp	r0, #0
   11c0c:	beq	117f0 <strspn@plt+0x95c>
   11c10:	bl	12aa4 <strspn@plt+0x1c10>
   11c14:	b	117f0 <strspn@plt+0x95c>
   11c18:	add	r2, sp, #40	; 0x28
   11c1c:	mov	r1, r8
   11c20:	ldr	r0, [sp, #24]
   11c24:	bl	11f1c <strspn@plt+0x1088>
   11c28:	ldr	r2, [sp, #12]
   11c2c:	mov	r3, #0
   11c30:	cmp	r2, r3
   11c34:	strb	r3, [r9, r6]
   11c38:	ldr	r8, [sp, #1176]	; 0x498
   11c3c:	ldreq	r3, [sp, #12]
   11c40:	subne	r3, r5, r8
   11c44:	mov	r0, r5
   11c48:	str	r3, [sp, #36]	; 0x24
   11c4c:	bl	10dc8 <strlen@plt>
   11c50:	adds	r7, r6, r0
   11c54:	str	r0, [sp, #32]
   11c58:	bcs	11940 <strspn@plt+0xaac>
   11c5c:	ldr	r3, [sp, #1180]	; 0x49c
   11c60:	cmp	r3, r7
   11c64:	bls	11c78 <strspn@plt+0xde4>
   11c68:	b	11cbc <strspn@plt+0xe28>
   11c6c:	ldr	r3, [sp, #1180]	; 0x49c
   11c70:	cmp	r7, r3
   11c74:	bcc	11cb8 <strspn@plt+0xe24>
   11c78:	add	r0, sp, #1168	; 0x490
   11c7c:	add	r0, r0, #8
   11c80:	bl	15014 <strspn@plt+0x4180>
   11c84:	cmp	r0, #0
   11c88:	bne	11c6c <strspn@plt+0xdd8>
   11c8c:	b	11940 <strspn@plt+0xaac>
   11c90:	add	r3, r4, #1
   11c94:	cmp	r0, r3
   11c98:	bls	11d54 <strspn@plt+0xec0>
   11c9c:	ldrb	r3, [r0, #-1]
   11ca0:	mov	r5, r4
   11ca4:	mov	r6, #0
   11ca8:	cmp	r3, #47	; 0x2f
   11cac:	subeq	r4, r0, #1
   11cb0:	movne	r4, r0
   11cb4:	b	11c04 <strspn@plt+0xd70>
   11cb8:	ldr	r8, [sp, #1176]	; 0x498
   11cbc:	ldr	r3, [sp, #12]
   11cc0:	add	r0, r8, r6
   11cc4:	cmp	r3, #0
   11cc8:	ldrne	r3, [sp, #36]	; 0x24
   11ccc:	addne	r5, r8, r3
   11cd0:	ldr	r3, [sp, #32]
   11cd4:	mov	r1, r5
   11cd8:	add	r2, r3, #1
   11cdc:	bl	10c6c <memmove@plt>
   11ce0:	mov	r2, r6
   11ce4:	mov	r1, r9
   11ce8:	mov	r0, r8
   11cec:	bl	10c9c <memcpy@plt>
   11cf0:	ldrb	r3, [r9]
   11cf4:	cmp	r3, #47	; 0x2f
   11cf8:	mov	r5, r0
   11cfc:	beq	11ddc <strspn@plt+0xf48>
   11d00:	ldr	r2, [sp, #28]
   11d04:	add	r3, r4, #1
   11d08:	cmp	r2, r3
   11d0c:	bls	11d94 <strspn@plt+0xf00>
   11d10:	sub	r0, r2, #1
   11d14:	cmp	r0, r4
   11d18:	bls	11d48 <strspn@plt+0xeb4>
   11d1c:	ldrb	r3, [r2, #-2]
   11d20:	cmp	r3, #47	; 0x2f
   11d24:	beq	11d48 <strspn@plt+0xeb4>
   11d28:	sub	r3, r2, #2
   11d2c:	cmp	r4, r3
   11d30:	mov	r0, r3
   11d34:	beq	11d48 <strspn@plt+0xeb4>
   11d38:	ldrb	r2, [r3, #-1]
   11d3c:	sub	r3, r3, #1
   11d40:	cmp	r2, #47	; 0x2f
   11d44:	bne	11d2c <strspn@plt+0xe98>
   11d48:	mov	r3, #1
   11d4c:	str	r3, [sp, #12]
   11d50:	b	119dc <strspn@plt+0xb48>
   11d54:	mov	r5, r4
   11d58:	mov	r6, #0
   11d5c:	mov	r4, r0
   11d60:	b	11c04 <strspn@plt+0xd70>
   11d64:	ldr	r3, [pc, #152]	; 11e04 <strspn@plt+0xf70>
   11d68:	ldr	r0, [sp, #28]
   11d6c:	mov	r2, #0
   11d70:	ldrh	r1, [r3]
   11d74:	mov	r3, #512	; 0x200
   11d78:	strh	r1, [r0]
   11d7c:	mov	r1, r4
   11d80:	mvn	r0, #99	; 0x63
   11d84:	bl	10c84 <faccessat@plt>
   11d88:	adds	r6, r0, #0
   11d8c:	movne	r6, #1
   11d90:	b	11ae8 <strspn@plt+0xc54>
   11d94:	mov	r3, #1
   11d98:	ldr	r0, [sp, #28]
   11d9c:	str	r3, [sp, #12]
   11da0:	b	119dc <strspn@plt+0xb48>
   11da4:	cmp	r2, #0
   11da8:	bne	11b24 <strspn@plt+0xc90>
   11dac:	mov	r3, #512	; 0x200
   11db0:	b	11d7c <strspn@plt+0xee8>
   11db4:	ldr	r3, [pc, #80]	; 11e0c <strspn@plt+0xf78>
   11db8:	ldr	r2, [pc, #80]	; 11e10 <strspn@plt+0xf7c>
   11dbc:	str	r3, [sp]
   11dc0:	mov	r0, #7
   11dc4:	ldr	r3, [pc, #72]	; 11e14 <strspn@plt+0xf80>
   11dc8:	bl	128a8 <strspn@plt+0x1a14>
   11dcc:	subs	r3, r0, #0
   11dd0:	str	r3, [sp, #24]
   11dd4:	bne	11bc8 <strspn@plt+0xd34>
   11dd8:	b	11940 <strspn@plt+0xaac>
   11ddc:	strb	r3, [r4]
   11de0:	mov	r3, #1
   11de4:	add	r0, r4, #1
   11de8:	str	r3, [sp, #12]
   11dec:	b	119dc <strspn@plt+0xb48>
   11df0:	mov	r0, r3
   11df4:	b	119dc <strspn@plt+0xb48>
   11df8:	mov	r5, r4
   11dfc:	ldr	r4, [sp, #28]
   11e00:	b	11c04 <strspn@plt+0xd70>
   11e04:	andeq	r6, r1, r4, lsl #29
   11e08:	andeq	r6, r1, r0, lsl #29
   11e0c:	andeq	r3, r1, r4, rrx
   11e10:	andeq	r2, r1, r0, ror #31
   11e14:	andeq	r3, r1, r8, lsl r0
   11e18:	ldr	r3, [pc, #4]	; 11e24 <strspn@plt+0xf90>
   11e1c:	str	r0, [r3]
   11e20:	bx	lr
   11e24:	andeq	r8, r2, ip, asr #2
   11e28:	ldr	r3, [pc, #4]	; 11e34 <strspn@plt+0xfa0>
   11e2c:	strb	r0, [r3, #4]
   11e30:	bx	lr
   11e34:	andeq	r8, r2, ip, asr #2
   11e38:	ldr	r3, [pc, #192]	; 11f00 <strspn@plt+0x106c>
   11e3c:	push	{r4, r5, r6, lr}
   11e40:	sub	sp, sp, #8
   11e44:	ldr	r0, [r3]
   11e48:	bl	15c20 <strspn@plt+0x4d8c>
   11e4c:	cmp	r0, #0
   11e50:	beq	11e74 <strspn@plt+0xfe0>
   11e54:	ldr	r4, [pc, #168]	; 11f04 <strspn@plt+0x1070>
   11e58:	ldrb	r3, [r4, #4]
   11e5c:	cmp	r3, #0
   11e60:	beq	11e90 <strspn@plt+0xffc>
   11e64:	bl	10dd4 <__errno_location@plt>
   11e68:	ldr	r3, [r0]
   11e6c:	cmp	r3, #32
   11e70:	bne	11e90 <strspn@plt+0xffc>
   11e74:	ldr	r3, [pc, #140]	; 11f08 <strspn@plt+0x1074>
   11e78:	ldr	r0, [r3]
   11e7c:	bl	15c20 <strspn@plt+0x4d8c>
   11e80:	cmp	r0, #0
   11e84:	bne	11ed8 <strspn@plt+0x1044>
   11e88:	add	sp, sp, #8
   11e8c:	pop	{r4, r5, r6, pc}
   11e90:	mov	r2, #5
   11e94:	ldr	r1, [pc, #112]	; 11f0c <strspn@plt+0x1078>
   11e98:	mov	r0, #0
   11e9c:	bl	10ccc <dcgettext@plt>
   11ea0:	ldr	r4, [r4]
   11ea4:	cmp	r4, #0
   11ea8:	mov	r5, r0
   11eac:	beq	11ee4 <strspn@plt+0x1050>
   11eb0:	bl	10dd4 <__errno_location@plt>
   11eb4:	ldr	r6, [r0]
   11eb8:	mov	r0, r4
   11ebc:	bl	14da8 <strspn@plt+0x3f14>
   11ec0:	mov	r1, r6
   11ec4:	str	r5, [sp]
   11ec8:	ldr	r2, [pc, #64]	; 11f10 <strspn@plt+0x107c>
   11ecc:	mov	r3, r0
   11ed0:	mov	r0, #0
   11ed4:	bl	10d50 <error@plt>
   11ed8:	ldr	r3, [pc, #52]	; 11f14 <strspn@plt+0x1080>
   11edc:	ldr	r0, [r3]
   11ee0:	bl	10c90 <_exit@plt>
   11ee4:	bl	10dd4 <__errno_location@plt>
   11ee8:	mov	r3, r5
   11eec:	ldr	r2, [pc, #36]	; 11f18 <strspn@plt+0x1084>
   11ef0:	ldr	r1, [r0]
   11ef4:	mov	r0, r4
   11ef8:	bl	10d50 <error@plt>
   11efc:	b	11ed8 <strspn@plt+0x1044>
   11f00:	andeq	r8, r2, r4, asr #2
   11f04:	andeq	r8, r2, ip, asr #2
   11f08:	andeq	r8, r2, r0, asr #2
   11f0c:	andeq	r6, r1, r8, lsl #29
   11f10:	muleq	r1, r4, lr
   11f14:	andeq	r8, r2, ip, ror #1
   11f18:	muleq	r1, r8, lr
   11f1c:	push	{r4, r5, r6, r7, r8, lr}
   11f20:	subs	r8, r0, #0
   11f24:	popeq	{r4, r5, r6, r7, r8, pc}
   11f28:	mov	r0, #24
   11f2c:	mov	r4, r1
   11f30:	mov	r7, r2
   11f34:	bl	155c8 <strspn@plt+0x4734>
   11f38:	mov	r6, r0
   11f3c:	mov	r0, r4
   11f40:	bl	15af4 <strspn@plt+0x4c60>
   11f44:	ldrd	r4, [r7, #96]	; 0x60
   11f48:	ldrd	r2, [r7]
   11f4c:	mov	r1, r6
   11f50:	strd	r4, [r6, #8]
   11f54:	strd	r2, [r6, #16]
   11f58:	str	r0, [r6]
   11f5c:	mov	r0, r8
   11f60:	bl	12e9c <strspn@plt+0x2008>
   11f64:	cmp	r0, #0
   11f68:	beq	11f80 <strspn@plt+0x10ec>
   11f6c:	cmp	r6, r0
   11f70:	popeq	{r4, r5, r6, r7, r8, pc}
   11f74:	mov	r0, r6
   11f78:	pop	{r4, r5, r6, r7, r8, lr}
   11f7c:	b	13064 <strspn@plt+0x21d0>
   11f80:	bl	15b10 <strspn@plt+0x4c7c>
   11f84:	subs	r3, r0, #0
   11f88:	beq	11fc4 <strspn@plt+0x1130>
   11f8c:	push	{r4, r5, lr}
   11f90:	sub	sp, sp, #28
   11f94:	ldrd	r4, [r2, #96]	; 0x60
   11f98:	ldrd	r2, [r2]
   11f9c:	mov	ip, r1
   11fa0:	mov	r1, sp
   11fa4:	str	ip, [sp]
   11fa8:	strd	r4, [sp, #8]
   11fac:	strd	r2, [sp, #16]
   11fb0:	bl	12608 <strspn@plt+0x1774>
   11fb4:	adds	r0, r0, #0
   11fb8:	movne	r0, #1
   11fbc:	add	sp, sp, #28
   11fc0:	pop	{r4, r5, pc}
   11fc4:	mov	r0, r3
   11fc8:	bx	lr
   11fcc:	push	{r4, r5, lr}
   11fd0:	sub	sp, sp, #12
   11fd4:	mov	r5, r0
   11fd8:	bl	10dd4 <__errno_location@plt>
   11fdc:	mov	r2, #0
   11fe0:	mov	r4, r0
   11fe4:	ldr	r3, [r0]
   11fe8:	str	r2, [r4]
   11fec:	mov	r0, r5
   11ff0:	str	r3, [sp]
   11ff4:	str	r3, [sp, #4]
   11ff8:	bl	10c78 <free@plt>
   11ffc:	ldr	r3, [r4]
   12000:	add	r2, sp, #8
   12004:	cmp	r3, #0
   12008:	moveq	r3, #4
   1200c:	movne	r3, #0
   12010:	add	r3, r2, r3
   12014:	ldr	r3, [r3, #-8]
   12018:	str	r3, [r4]
   1201c:	add	sp, sp, #12
   12020:	pop	{r4, r5, pc}
   12024:	andeq	r0, r0, r0
   12028:	cmp	r0, #10
   1202c:	movcc	r0, #10
   12030:	push	{r4, r5, r6, r7, r8, lr}
   12034:	orr	r7, r0, #1
   12038:	cmn	r7, #1
   1203c:	ldrne	r8, [pc, #132]	; 120c8 <strspn@plt+0x1234>
   12040:	beq	120b8 <strspn@plt+0x1224>
   12044:	cmp	r7, #9
   12048:	bls	120c0 <strspn@plt+0x122c>
   1204c:	umull	r2, r3, r8, r7
   12050:	lsr	r3, r3, #1
   12054:	add	r3, r3, r3, lsl #1
   12058:	cmp	r7, r3
   1205c:	beq	120ac <strspn@plt+0x1218>
   12060:	mov	r6, #16
   12064:	mov	r5, #9
   12068:	mov	r4, #3
   1206c:	b	12080 <strspn@plt+0x11ec>
   12070:	bl	1622c <strspn@plt+0x5398>
   12074:	add	r6, r6, #8
   12078:	cmp	r1, #0
   1207c:	beq	120ac <strspn@plt+0x1218>
   12080:	add	r5, r5, r6
   12084:	add	r4, r4, #2
   12088:	cmp	r5, r7
   1208c:	mov	r0, r7
   12090:	mov	r1, r4
   12094:	bcc	12070 <strspn@plt+0x11dc>
   12098:	mov	r1, r4
   1209c:	mov	r0, r7
   120a0:	bl	1622c <strspn@plt+0x5398>
   120a4:	cmp	r1, #0
   120a8:	bne	120b8 <strspn@plt+0x1224>
   120ac:	add	r7, r7, #2
   120b0:	cmn	r7, #1
   120b4:	bne	12044 <strspn@plt+0x11b0>
   120b8:	mov	r0, r7
   120bc:	pop	{r4, r5, r6, r7, r8, pc}
   120c0:	mov	r4, #3
   120c4:	b	12098 <strspn@plt+0x1204>
   120c8:	bge	feabcb7c <stdout@@GLIBC_2.4+0xfea94a38>
   120cc:	push	{r4, lr}
   120d0:	ror	r0, r0, #3
   120d4:	bl	1622c <strspn@plt+0x5398>
   120d8:	mov	r0, r1
   120dc:	pop	{r4, pc}
   120e0:	sub	r0, r1, r0
   120e4:	clz	r0, r0
   120e8:	lsr	r0, r0, #5
   120ec:	bx	lr
   120f0:	push	{r4, lr}
   120f4:	mov	r4, r0
   120f8:	mov	r0, r1
   120fc:	ldr	r3, [r4, #24]
   12100:	ldr	r1, [r4, #8]
   12104:	blx	r3
   12108:	ldr	r3, [r4, #8]
   1210c:	cmp	r0, r3
   12110:	bcs	12120 <strspn@plt+0x128c>
   12114:	ldr	r3, [r4]
   12118:	add	r0, r3, r0, lsl #3
   1211c:	pop	{r4, pc}
   12120:	bl	10e88 <abort@plt>
   12124:	push	{r4, r5, r6, r7, r8, lr}
   12128:	mov	r7, r2
   1212c:	mov	r8, r3
   12130:	mov	r6, r0
   12134:	mov	r5, r1
   12138:	bl	120f0 <strspn@plt+0x125c>
   1213c:	str	r0, [r7]
   12140:	ldr	r3, [r0]
   12144:	cmp	r3, #0
   12148:	beq	121e0 <strspn@plt+0x134c>
   1214c:	cmp	r5, r3
   12150:	mov	r4, r0
   12154:	beq	12174 <strspn@plt+0x12e0>
   12158:	mov	r1, r3
   1215c:	mov	r0, r5
   12160:	ldr	r3, [r6, #28]
   12164:	blx	r3
   12168:	cmp	r0, #0
   1216c:	beq	121d4 <strspn@plt+0x1340>
   12170:	ldr	r3, [r4]
   12174:	cmp	r8, #0
   12178:	beq	121a4 <strspn@plt+0x1310>
   1217c:	ldr	r2, [r4, #4]
   12180:	cmp	r2, #0
   12184:	movne	ip, #0
   12188:	ldmne	r2, {r0, r1}
   1218c:	streq	r2, [r4]
   12190:	stmne	r4, {r0, r1}
   12194:	strne	ip, [r2]
   12198:	ldrne	r1, [r6, #36]	; 0x24
   1219c:	strne	r1, [r2, #4]
   121a0:	strne	r2, [r6, #36]	; 0x24
   121a4:	mov	r0, r3
   121a8:	pop	{r4, r5, r6, r7, r8, pc}
   121ac:	ldr	r3, [r2]
   121b0:	cmp	r5, r3
   121b4:	beq	121f4 <strspn@plt+0x1360>
   121b8:	mov	r1, r3
   121bc:	mov	r0, r5
   121c0:	ldr	r3, [r6, #28]
   121c4:	blx	r3
   121c8:	cmp	r0, #0
   121cc:	bne	121ec <strspn@plt+0x1358>
   121d0:	ldr	r4, [r4, #4]
   121d4:	ldr	r2, [r4, #4]
   121d8:	cmp	r2, #0
   121dc:	bne	121ac <strspn@plt+0x1318>
   121e0:	mov	r3, #0
   121e4:	mov	r0, r3
   121e8:	pop	{r4, r5, r6, r7, r8, pc}
   121ec:	ldr	r2, [r4, #4]
   121f0:	ldr	r3, [r2]
   121f4:	cmp	r8, #0
   121f8:	beq	121a4 <strspn@plt+0x1310>
   121fc:	ldr	r0, [r2, #4]
   12200:	mov	r1, #0
   12204:	str	r0, [r4, #4]
   12208:	str	r1, [r2]
   1220c:	ldr	r1, [r6, #36]	; 0x24
   12210:	mov	r0, r3
   12214:	str	r1, [r2, #4]
   12218:	str	r2, [r6, #36]	; 0x24
   1221c:	pop	{r4, r5, r6, r7, r8, pc}
   12220:	ldr	r2, [pc, #164]	; 122cc <strspn@plt+0x1438>
   12224:	ldr	r3, [r0]
   12228:	cmp	r3, r2
   1222c:	beq	122b4 <strspn@plt+0x1420>
   12230:	vldr	s15, [r3, #8]
   12234:	vldr	s14, [pc, #128]	; 122bc <strspn@plt+0x1428>
   12238:	vcmpe.f32	s15, s14
   1223c:	vmrs	APSR_nzcv, fpscr
   12240:	ble	122a8 <strspn@plt+0x1414>
   12244:	vldr	s13, [pc, #116]	; 122c0 <strspn@plt+0x142c>
   12248:	vcmpe.f32	s15, s13
   1224c:	vmrs	APSR_nzcv, fpscr
   12250:	bpl	122a8 <strspn@plt+0x1414>
   12254:	vldr	s13, [pc, #104]	; 122c4 <strspn@plt+0x1430>
   12258:	vldr	s12, [r3, #12]
   1225c:	vcmpe.f32	s12, s13
   12260:	vmrs	APSR_nzcv, fpscr
   12264:	ble	122a8 <strspn@plt+0x1414>
   12268:	vldr	s13, [r3]
   1226c:	vcmpe.f32	s13, #0.0
   12270:	vmrs	APSR_nzcv, fpscr
   12274:	blt	122a8 <strspn@plt+0x1414>
   12278:	vadd.f32	s14, s13, s14
   1227c:	vldr	s13, [r3, #4]
   12280:	vcmpe.f32	s14, s13
   12284:	vmrs	APSR_nzcv, fpscr
   12288:	bpl	122a8 <strspn@plt+0x1414>
   1228c:	vldr	s12, [pc, #52]	; 122c8 <strspn@plt+0x1434>
   12290:	vcmpe.f32	s13, s12
   12294:	vmrs	APSR_nzcv, fpscr
   12298:	bhi	122a8 <strspn@plt+0x1414>
   1229c:	vcmpe.f32	s15, s14
   122a0:	vmrs	APSR_nzcv, fpscr
   122a4:	bgt	122b4 <strspn@plt+0x1420>
   122a8:	str	r2, [r0]
   122ac:	mov	r0, #0
   122b0:	bx	lr
   122b4:	mov	r0, #1
   122b8:	bx	lr
   122bc:	stclcc	12, cr12, [ip, #820]	; 0x334
   122c0:	svccc	0x00666666
   122c4:	svccc	0x008ccccd
   122c8:	svccc	0x00800000
   122cc:	muleq	r1, ip, lr
   122d0:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   122d4:	ldm	r1, {r6, ip}
   122d8:	cmp	r6, ip
   122dc:	bcs	12398 <strspn@plt+0x1504>
   122e0:	mov	sl, r2
   122e4:	mov	r5, r0
   122e8:	mov	r8, r1
   122ec:	add	r6, r6, #8
   122f0:	mov	r9, #0
   122f4:	ldr	fp, [r6, #-8]
   122f8:	mov	r7, r6
   122fc:	cmp	fp, #0
   12300:	beq	1238c <strspn@plt+0x14f8>
   12304:	ldr	r4, [r6, #-4]
   12308:	cmp	r4, #0
   1230c:	bne	1232c <strspn@plt+0x1498>
   12310:	b	1237c <strspn@plt+0x14e8>
   12314:	ldr	r3, [r0, #4]
   12318:	cmp	r2, #0
   1231c:	str	r3, [r4, #4]
   12320:	str	r4, [r0, #4]
   12324:	mov	r4, r2
   12328:	beq	12378 <strspn@plt+0x14e4>
   1232c:	ldr	fp, [r4]
   12330:	mov	r0, r5
   12334:	mov	r1, fp
   12338:	bl	120f0 <strspn@plt+0x125c>
   1233c:	ldr	r2, [r4, #4]
   12340:	ldr	r1, [r0]
   12344:	cmp	r1, #0
   12348:	bne	12314 <strspn@plt+0x1480>
   1234c:	ldr	ip, [r5, #12]
   12350:	str	fp, [r0]
   12354:	add	r3, ip, #1
   12358:	str	r3, [r5, #12]
   1235c:	str	r1, [r4]
   12360:	ldr	r3, [r5, #36]	; 0x24
   12364:	cmp	r2, #0
   12368:	str	r3, [r4, #4]
   1236c:	str	r4, [r5, #36]	; 0x24
   12370:	mov	r4, r2
   12374:	bne	1232c <strspn@plt+0x1498>
   12378:	ldr	fp, [r6, #-8]
   1237c:	cmp	sl, #0
   12380:	str	r9, [r6, #-4]
   12384:	beq	123a0 <strspn@plt+0x150c>
   12388:	ldr	ip, [r8, #4]
   1238c:	cmp	ip, r7
   12390:	add	r6, r6, #8
   12394:	bhi	122f4 <strspn@plt+0x1460>
   12398:	mov	r0, #1
   1239c:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   123a0:	mov	r1, fp
   123a4:	mov	r0, r5
   123a8:	bl	120f0 <strspn@plt+0x125c>
   123ac:	ldr	r2, [r0]
   123b0:	mov	r4, r0
   123b4:	cmp	r2, #0
   123b8:	beq	12404 <strspn@plt+0x1570>
   123bc:	ldr	r0, [r5, #36]	; 0x24
   123c0:	cmp	r0, #0
   123c4:	beq	12418 <strspn@plt+0x1584>
   123c8:	ldr	r2, [r0, #4]
   123cc:	str	r2, [r5, #36]	; 0x24
   123d0:	ldr	r2, [r4, #4]
   123d4:	str	fp, [r0]
   123d8:	str	r2, [r0, #4]
   123dc:	str	r0, [r4, #4]
   123e0:	str	r9, [r6, #-8]
   123e4:	ldr	r3, [r8, #12]
   123e8:	ldr	ip, [r8, #4]
   123ec:	sub	r3, r3, #1
   123f0:	cmp	ip, r7
   123f4:	str	r3, [r8, #12]
   123f8:	add	r6, r6, #8
   123fc:	bhi	122f4 <strspn@plt+0x1460>
   12400:	b	12398 <strspn@plt+0x1504>
   12404:	ldr	r2, [r5, #12]
   12408:	str	fp, [r0]
   1240c:	add	r3, r2, #1
   12410:	str	r3, [r5, #12]
   12414:	b	123e0 <strspn@plt+0x154c>
   12418:	mov	r0, #8
   1241c:	bl	15b98 <strspn@plt+0x4d04>
   12420:	cmp	r0, #0
   12424:	bne	123d0 <strspn@plt+0x153c>
   12428:	mov	r0, sl
   1242c:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12430:	ldr	r0, [r0, #8]
   12434:	bx	lr
   12438:	ldr	r0, [r0, #12]
   1243c:	bx	lr
   12440:	ldr	r0, [r0, #16]
   12444:	bx	lr
   12448:	ldm	r0, {r1, ip}
   1244c:	mov	r0, #0
   12450:	cmp	r1, ip
   12454:	bcs	1249c <strspn@plt+0x1608>
   12458:	ldr	r3, [r1]
   1245c:	cmp	r3, #0
   12460:	beq	1248c <strspn@plt+0x15f8>
   12464:	ldr	r3, [r1, #4]
   12468:	mov	r2, #1
   1246c:	cmp	r3, #0
   12470:	beq	12484 <strspn@plt+0x15f0>
   12474:	ldr	r3, [r3, #4]
   12478:	add	r2, r2, #1
   1247c:	cmp	r3, #0
   12480:	bne	12474 <strspn@plt+0x15e0>
   12484:	cmp	r0, r2
   12488:	movcc	r0, r2
   1248c:	add	r1, r1, #8
   12490:	cmp	r1, ip
   12494:	bcc	12458 <strspn@plt+0x15c4>
   12498:	bx	lr
   1249c:	bx	lr
   124a0:	push	{lr}		; (str lr, [sp, #-4]!)
   124a4:	mov	r2, #0
   124a8:	ldm	r0, {r1, lr}
   124ac:	mov	ip, r2
   124b0:	cmp	r1, lr
   124b4:	bcs	124f4 <strspn@plt+0x1660>
   124b8:	ldr	r3, [r1]
   124bc:	cmp	r3, #0
   124c0:	beq	124e8 <strspn@plt+0x1654>
   124c4:	ldr	r3, [r1, #4]
   124c8:	add	ip, ip, #1
   124cc:	cmp	r3, #0
   124d0:	add	r2, r2, #1
   124d4:	beq	124e8 <strspn@plt+0x1654>
   124d8:	ldr	r3, [r3, #4]
   124dc:	add	r2, r2, #1
   124e0:	cmp	r3, #0
   124e4:	bne	124d8 <strspn@plt+0x1644>
   124e8:	add	r1, r1, #8
   124ec:	cmp	r1, lr
   124f0:	bcc	124b8 <strspn@plt+0x1624>
   124f4:	ldr	r3, [r0, #12]
   124f8:	cmp	r3, ip
   124fc:	ldreq	r0, [r0, #16]
   12500:	subeq	r0, r0, r2
   12504:	clzeq	r0, r0
   12508:	lsreq	r0, r0, #5
   1250c:	movne	r0, #0
   12510:	pop	{pc}		; (ldr pc, [sp], #4)
   12514:	push	{r4, r5, r6, r7, lr}
   12518:	mov	r5, r1
   1251c:	ldm	r0, {ip, lr}
   12520:	sub	sp, sp, #12
   12524:	ldr	r3, [r0, #16]
   12528:	cmp	ip, lr
   1252c:	mov	r4, #0
   12530:	ldr	r6, [r0, #8]
   12534:	ldr	r7, [r0, #12]
   12538:	bcs	1257c <strspn@plt+0x16e8>
   1253c:	ldr	r2, [ip]
   12540:	cmp	r2, #0
   12544:	beq	12570 <strspn@plt+0x16dc>
   12548:	ldr	r2, [ip, #4]
   1254c:	mov	r1, #1
   12550:	cmp	r2, #0
   12554:	beq	12568 <strspn@plt+0x16d4>
   12558:	ldr	r2, [r2, #4]
   1255c:	add	r1, r1, #1
   12560:	cmp	r2, #0
   12564:	bne	12558 <strspn@plt+0x16c4>
   12568:	cmp	r4, r1
   1256c:	movcc	r4, r1
   12570:	add	ip, ip, #8
   12574:	cmp	ip, lr
   12578:	bcc	1253c <strspn@plt+0x16a8>
   1257c:	ldr	r2, [pc, #116]	; 125f8 <strspn@plt+0x1764>
   12580:	mov	r1, #1
   12584:	mov	r0, r5
   12588:	bl	10e10 <__fprintf_chk@plt>
   1258c:	mov	r3, r6
   12590:	ldr	r2, [pc, #100]	; 125fc <strspn@plt+0x1768>
   12594:	mov	r1, #1
   12598:	mov	r0, r5
   1259c:	bl	10e10 <__fprintf_chk@plt>
   125a0:	vmov	s15, r7
   125a4:	vldr	d5, [pc, #68]	; 125f0 <strspn@plt+0x175c>
   125a8:	mov	r3, r7
   125ac:	ldr	r2, [pc, #76]	; 12600 <strspn@plt+0x176c>
   125b0:	vcvt.f64.u32	d6, s15
   125b4:	vmov	s15, r6
   125b8:	mov	r1, #1
   125bc:	mov	r0, r5
   125c0:	vcvt.f64.u32	d7, s15
   125c4:	vmul.f64	d6, d6, d5
   125c8:	vdiv.f64	d5, d6, d7
   125cc:	vstr	d5, [sp]
   125d0:	bl	10e10 <__fprintf_chk@plt>
   125d4:	mov	r3, r4
   125d8:	mov	r0, r5
   125dc:	ldr	r2, [pc, #32]	; 12604 <strspn@plt+0x1770>
   125e0:	mov	r1, #1
   125e4:	add	sp, sp, #12
   125e8:	pop	{r4, r5, r6, r7, lr}
   125ec:	b	10e10 <__fprintf_chk@plt>
   125f0:	andeq	r0, r0, r0
   125f4:	subsmi	r0, r9, r0
   125f8:			; <UNDEFINED> instruction: 0x00016eb0
   125fc:	andeq	r6, r1, r8, asr #29
   12600:	andeq	r6, r1, r0, ror #29
   12604:	andeq	r6, r1, r4, lsl #30
   12608:	push	{r4, r5, r6, lr}
   1260c:	mov	r6, r0
   12610:	mov	r5, r1
   12614:	bl	120f0 <strspn@plt+0x125c>
   12618:	ldr	r3, [r0]
   1261c:	cmp	r3, #0
   12620:	movne	r4, r0
   12624:	bne	12630 <strspn@plt+0x179c>
   12628:	b	1265c <strspn@plt+0x17c8>
   1262c:	ldr	r3, [r4]
   12630:	cmp	r5, r3
   12634:	mov	r1, r3
   12638:	mov	r0, r5
   1263c:	beq	12664 <strspn@plt+0x17d0>
   12640:	ldr	r3, [r6, #28]
   12644:	blx	r3
   12648:	cmp	r0, #0
   1264c:	bne	1266c <strspn@plt+0x17d8>
   12650:	ldr	r4, [r4, #4]
   12654:	cmp	r4, #0
   12658:	bne	1262c <strspn@plt+0x1798>
   1265c:	mov	r0, #0
   12660:	pop	{r4, r5, r6, pc}
   12664:	mov	r0, r5
   12668:	pop	{r4, r5, r6, pc}
   1266c:	ldr	r0, [r4]
   12670:	pop	{r4, r5, r6, pc}
   12674:	ldr	r3, [r0, #16]
   12678:	cmp	r3, #0
   1267c:	beq	126b0 <strspn@plt+0x181c>
   12680:	ldr	r3, [r0]
   12684:	ldr	r2, [r0, #4]
   12688:	cmp	r3, r2
   1268c:	bcc	126a0 <strspn@plt+0x180c>
   12690:	b	126b8 <strspn@plt+0x1824>
   12694:	add	r3, r3, #8
   12698:	cmp	r3, r2
   1269c:	bcs	126b8 <strspn@plt+0x1824>
   126a0:	ldr	r0, [r3]
   126a4:	cmp	r0, #0
   126a8:	beq	12694 <strspn@plt+0x1800>
   126ac:	bx	lr
   126b0:	mov	r0, r3
   126b4:	bx	lr
   126b8:	push	{r4, lr}
   126bc:	bl	10e88 <abort@plt>
   126c0:	push	{r4, r5, r6, lr}
   126c4:	mov	r5, r0
   126c8:	mov	r4, r1
   126cc:	bl	120f0 <strspn@plt+0x125c>
   126d0:	mov	r2, r0
   126d4:	mov	r3, r0
   126d8:	b	126e4 <strspn@plt+0x1850>
   126dc:	cmp	r3, #0
   126e0:	beq	126f8 <strspn@plt+0x1864>
   126e4:	ldm	r3, {r1, r3}
   126e8:	cmp	r4, r1
   126ec:	bne	126dc <strspn@plt+0x1848>
   126f0:	cmp	r3, #0
   126f4:	bne	12720 <strspn@plt+0x188c>
   126f8:	ldr	r3, [r5, #4]
   126fc:	b	1270c <strspn@plt+0x1878>
   12700:	ldr	r0, [r2]
   12704:	cmp	r0, #0
   12708:	popne	{r4, r5, r6, pc}
   1270c:	add	r2, r2, #8
   12710:	cmp	r2, r3
   12714:	bcc	12700 <strspn@plt+0x186c>
   12718:	mov	r0, #0
   1271c:	pop	{r4, r5, r6, pc}
   12720:	ldr	r0, [r3]
   12724:	pop	{r4, r5, r6, pc}
   12728:	push	{r4, r5, r6, lr}
   1272c:	ldm	r0, {r5, lr}
   12730:	cmp	r5, lr
   12734:	bcs	127b8 <strspn@plt+0x1924>
   12738:	add	r5, r5, #8
   1273c:	mov	ip, #0
   12740:	ldr	r3, [r5, #-8]
   12744:	mov	r6, r5
   12748:	cmp	r3, #0
   1274c:	beq	12798 <strspn@plt+0x1904>
   12750:	cmp	r2, ip
   12754:	bls	127a4 <strspn@plt+0x1910>
   12758:	str	r3, [r1, ip, lsl #2]
   1275c:	ldr	r3, [r5, #-4]
   12760:	add	r4, ip, #1
   12764:	cmp	r3, #0
   12768:	add	lr, r1, ip, lsl #2
   1276c:	beq	127ac <strspn@plt+0x1918>
   12770:	mov	ip, r4
   12774:	cmp	r2, ip
   12778:	beq	127a4 <strspn@plt+0x1910>
   1277c:	ldr	r4, [r3]
   12780:	add	ip, ip, #1
   12784:	str	r4, [lr, #4]!
   12788:	ldr	r3, [r3, #4]
   1278c:	cmp	r3, #0
   12790:	bne	12774 <strspn@plt+0x18e0>
   12794:	ldr	lr, [r0, #4]
   12798:	cmp	lr, r6
   1279c:	add	r5, r5, #8
   127a0:	bhi	12740 <strspn@plt+0x18ac>
   127a4:	mov	r0, ip
   127a8:	pop	{r4, r5, r6, pc}
   127ac:	ldr	lr, [r0, #4]
   127b0:	mov	ip, r4
   127b4:	b	12798 <strspn@plt+0x1904>
   127b8:	mov	ip, #0
   127bc:	b	127a4 <strspn@plt+0x1910>
   127c0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   127c4:	ldr	r3, [r0, #4]
   127c8:	ldr	r8, [r0]
   127cc:	cmp	r8, r3
   127d0:	bcs	12834 <strspn@plt+0x19a0>
   127d4:	mov	r7, r2
   127d8:	mov	r6, r1
   127dc:	mov	r9, r0
   127e0:	mov	r5, #0
   127e4:	ldr	r0, [r8]
   127e8:	cmp	r0, #0
   127ec:	beq	12820 <strspn@plt+0x198c>
   127f0:	mov	r4, r8
   127f4:	b	127fc <strspn@plt+0x1968>
   127f8:	ldr	r0, [r4]
   127fc:	mov	r1, r7
   12800:	blx	r6
   12804:	cmp	r0, #0
   12808:	beq	1282c <strspn@plt+0x1998>
   1280c:	ldr	r4, [r4, #4]
   12810:	add	r5, r5, #1
   12814:	cmp	r4, #0
   12818:	bne	127f8 <strspn@plt+0x1964>
   1281c:	ldr	r3, [r9, #4]
   12820:	add	r8, r8, #8
   12824:	cmp	r3, r8
   12828:	bhi	127e4 <strspn@plt+0x1950>
   1282c:	mov	r0, r5
   12830:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12834:	mov	r5, #0
   12838:	b	1282c <strspn@plt+0x1998>
   1283c:	push	{r4, r5, r6, lr}
   12840:	mov	r4, r0
   12844:	ldrb	r0, [r0]
   12848:	cmp	r0, #0
   1284c:	beq	1287c <strspn@plt+0x19e8>
   12850:	mov	r5, r1
   12854:	mov	r1, #0
   12858:	rsb	r1, r1, r1, lsl #5
   1285c:	add	r0, r1, r0
   12860:	mov	r1, r5
   12864:	bl	1622c <strspn@plt+0x5398>
   12868:	ldrb	r0, [r4, #1]!
   1286c:	cmp	r0, #0
   12870:	bne	12858 <strspn@plt+0x19c4>
   12874:	mov	r0, r1
   12878:	pop	{r4, r5, r6, pc}
   1287c:	mov	r1, r0
   12880:	b	12874 <strspn@plt+0x19e0>
   12884:	push	{lr}		; (str lr, [sp, #-4]!)
   12888:	mov	ip, r0
   1288c:	ldr	lr, [pc, #16]	; 128a4 <strspn@plt+0x1a10>
   12890:	ldm	lr!, {r0, r1, r2, r3}
   12894:	ldr	lr, [lr]
   12898:	stmia	ip!, {r0, r1, r2, r3}
   1289c:	str	lr, [ip]
   128a0:	pop	{pc}		; (ldr pc, [sp], #4)
   128a4:	muleq	r1, ip, lr
   128a8:	push	{r4, r5, r6, r7, lr}
   128ac:	sub	sp, sp, #12
   128b0:	cmp	r2, #0
   128b4:	str	r0, [sp, #4]
   128b8:	ldr	r6, [pc, #304]	; 129f0 <strspn@plt+0x1b5c>
   128bc:	mov	r0, #40	; 0x28
   128c0:	movne	r6, r2
   128c4:	cmp	r3, #0
   128c8:	ldr	r7, [pc, #292]	; 129f4 <strspn@plt+0x1b60>
   128cc:	mov	r5, r1
   128d0:	movne	r7, r3
   128d4:	bl	15b98 <strspn@plt+0x4d04>
   128d8:	subs	r4, r0, #0
   128dc:	beq	12974 <strspn@plt+0x1ae0>
   128e0:	cmp	r5, #0
   128e4:	beq	129c8 <strspn@plt+0x1b34>
   128e8:	mov	r0, r4
   128ec:	str	r5, [r0, #20]!
   128f0:	bl	12220 <strspn@plt+0x138c>
   128f4:	cmp	r0, #0
   128f8:	beq	129b0 <strspn@plt+0x1b1c>
   128fc:	ldrb	r3, [r5, #16]
   12900:	cmp	r3, #0
   12904:	beq	12980 <strspn@plt+0x1aec>
   12908:	ldr	r0, [sp, #4]
   1290c:	bl	12028 <strspn@plt+0x1194>
   12910:	lsrs	r2, r0, #30
   12914:	movne	r5, #1
   12918:	moveq	r5, #0
   1291c:	tst	r0, #536870912	; 0x20000000
   12920:	bne	129a8 <strspn@plt+0x1b14>
   12924:	cmp	r5, #0
   12928:	bne	129a8 <strspn@plt+0x1b14>
   1292c:	cmp	r0, #0
   12930:	str	r0, [r4, #8]
   12934:	beq	129b0 <strspn@plt+0x1b1c>
   12938:	mov	r1, #8
   1293c:	bl	15b50 <strspn@plt+0x4cbc>
   12940:	cmp	r0, #0
   12944:	str	r0, [r4]
   12948:	beq	129b0 <strspn@plt+0x1b1c>
   1294c:	ldr	r3, [r4, #8]
   12950:	str	r5, [r4, #12]
   12954:	str	r5, [r4, #16]
   12958:	add	r0, r0, r3, lsl #3
   1295c:	ldr	r3, [sp, #32]
   12960:	str	r6, [r4, #24]
   12964:	str	r7, [r4, #28]
   12968:	str	r3, [r4, #32]
   1296c:	str	r5, [r4, #36]	; 0x24
   12970:	str	r0, [r4, #4]
   12974:	mov	r0, r4
   12978:	add	sp, sp, #12
   1297c:	pop	{r4, r5, r6, r7, pc}
   12980:	vldr	s12, [r5, #8]
   12984:	vldr	s15, [sp, #4]
   12988:	vldr	s14, [pc, #88]	; 129e8 <strspn@plt+0x1b54>
   1298c:	vcvt.f32.u32	s13, s15
   12990:	vdiv.f32	s15, s13, s12
   12994:	vcmpe.f32	s15, s14
   12998:	vmrs	APSR_nzcv, fpscr
   1299c:	vcvtlt.u32.f32	s15, s15
   129a0:	vstrlt	s15, [sp, #4]
   129a4:	blt	12908 <strspn@plt+0x1a74>
   129a8:	mov	r3, #0
   129ac:	str	r3, [r4, #8]
   129b0:	mov	r0, r4
   129b4:	bl	11fcc <strspn@plt+0x1138>
   129b8:	mov	r4, #0
   129bc:	mov	r0, r4
   129c0:	add	sp, sp, #12
   129c4:	pop	{r4, r5, r6, r7, pc}
   129c8:	ldr	r3, [pc, #40]	; 129f8 <strspn@plt+0x1b64>
   129cc:	mov	r0, r4
   129d0:	str	r3, [r0, #20]!
   129d4:	bl	12220 <strspn@plt+0x138c>
   129d8:	cmp	r0, #0
   129dc:	vldrne	s12, [pc, #8]	; 129ec <strspn@plt+0x1b58>
   129e0:	bne	12984 <strspn@plt+0x1af0>
   129e4:	b	129b0 <strspn@plt+0x1b1c>
   129e8:	svcmi	0x00800000
   129ec:	svccc	0x004ccccd
   129f0:	andeq	r2, r1, ip, asr #1
   129f4:	andeq	r2, r1, r0, ror #1
   129f8:	muleq	r1, ip, lr
   129fc:	push	{r4, r5, r6, r7, r8, lr}
   12a00:	mov	r5, r0
   12a04:	ldr	r7, [r0]
   12a08:	ldr	r3, [r0, #4]
   12a0c:	cmp	r7, r3
   12a10:	addcc	r7, r7, #8
   12a14:	movcc	r6, #0
   12a18:	bcs	12a94 <strspn@plt+0x1c00>
   12a1c:	ldr	r2, [r7, #-8]
   12a20:	mov	r8, r7
   12a24:	cmp	r2, #0
   12a28:	beq	12a88 <strspn@plt+0x1bf4>
   12a2c:	ldr	r4, [r7, #-4]
   12a30:	ldr	r2, [r5, #32]
   12a34:	cmp	r4, #0
   12a38:	beq	12a6c <strspn@plt+0x1bd8>
   12a3c:	cmp	r2, #0
   12a40:	beq	12a50 <strspn@plt+0x1bbc>
   12a44:	ldr	r0, [r4]
   12a48:	blx	r2
   12a4c:	ldr	r2, [r5, #32]
   12a50:	ldr	r3, [r4, #4]
   12a54:	ldr	r1, [r5, #36]	; 0x24
   12a58:	str	r6, [r4]
   12a5c:	str	r1, [r4, #4]
   12a60:	str	r4, [r5, #36]	; 0x24
   12a64:	subs	r4, r3, #0
   12a68:	bne	12a3c <strspn@plt+0x1ba8>
   12a6c:	cmp	r2, #0
   12a70:	beq	12a7c <strspn@plt+0x1be8>
   12a74:	ldr	r0, [r7, #-8]
   12a78:	blx	r2
   12a7c:	str	r6, [r7, #-8]
   12a80:	str	r6, [r7, #-4]
   12a84:	ldr	r3, [r5, #4]
   12a88:	cmp	r3, r8
   12a8c:	add	r7, r7, #8
   12a90:	bhi	12a1c <strspn@plt+0x1b88>
   12a94:	mov	r3, #0
   12a98:	str	r3, [r5, #12]
   12a9c:	str	r3, [r5, #16]
   12aa0:	pop	{r4, r5, r6, r7, r8, pc}
   12aa4:	ldr	r3, [r0, #32]
   12aa8:	push	{r4, r5, r6, lr}
   12aac:	cmp	r3, #0
   12ab0:	mov	r5, r0
   12ab4:	beq	12b14 <strspn@plt+0x1c80>
   12ab8:	ldr	r3, [r0, #16]
   12abc:	cmp	r3, #0
   12ac0:	beq	12b14 <strspn@plt+0x1c80>
   12ac4:	ldr	r6, [r0]
   12ac8:	ldr	r3, [r0, #4]
   12acc:	cmp	r6, r3
   12ad0:	bcs	12b50 <strspn@plt+0x1cbc>
   12ad4:	ldr	r0, [r6]
   12ad8:	cmp	r0, #0
   12adc:	movne	r4, r6
   12ae0:	bne	12aec <strspn@plt+0x1c58>
   12ae4:	b	12b04 <strspn@plt+0x1c70>
   12ae8:	ldr	r0, [r4]
   12aec:	ldr	r3, [r5, #32]
   12af0:	blx	r3
   12af4:	ldr	r4, [r4, #4]
   12af8:	cmp	r4, #0
   12afc:	bne	12ae8 <strspn@plt+0x1c54>
   12b00:	ldr	r3, [r5, #4]
   12b04:	add	r6, r6, #8
   12b08:	cmp	r3, r6
   12b0c:	bhi	12ad4 <strspn@plt+0x1c40>
   12b10:	b	12b18 <strspn@plt+0x1c84>
   12b14:	ldr	r3, [r5, #4]
   12b18:	ldr	r6, [r5]
   12b1c:	cmp	r3, r6
   12b20:	bls	12b50 <strspn@plt+0x1cbc>
   12b24:	ldr	r0, [r6, #4]
   12b28:	cmp	r0, #0
   12b2c:	beq	12b44 <strspn@plt+0x1cb0>
   12b30:	ldr	r4, [r0, #4]
   12b34:	bl	11fcc <strspn@plt+0x1138>
   12b38:	subs	r0, r4, #0
   12b3c:	bne	12b30 <strspn@plt+0x1c9c>
   12b40:	ldr	r3, [r5, #4]
   12b44:	add	r6, r6, #8
   12b48:	cmp	r3, r6
   12b4c:	bhi	12b24 <strspn@plt+0x1c90>
   12b50:	ldr	r0, [r5, #36]	; 0x24
   12b54:	cmp	r0, #0
   12b58:	beq	12b6c <strspn@plt+0x1cd8>
   12b5c:	ldr	r4, [r0, #4]
   12b60:	bl	11fcc <strspn@plt+0x1138>
   12b64:	subs	r0, r4, #0
   12b68:	bne	12b5c <strspn@plt+0x1cc8>
   12b6c:	ldr	r0, [r5]
   12b70:	bl	11fcc <strspn@plt+0x1138>
   12b74:	mov	r0, r5
   12b78:	pop	{r4, r5, r6, lr}
   12b7c:	b	11fcc <strspn@plt+0x1138>
   12b80:	ldr	r3, [r0, #20]
   12b84:	push	{r4, r5, r6, r7, lr}
   12b88:	sub	sp, sp, #52	; 0x34
   12b8c:	ldrb	r2, [r3, #16]
   12b90:	mov	r5, r0
   12b94:	str	r1, [sp, #4]
   12b98:	cmp	r2, #0
   12b9c:	bne	12bc8 <strspn@plt+0x1d34>
   12ba0:	vmov	s15, r1
   12ba4:	vldr	s13, [r3, #8]
   12ba8:	vldr	s14, [pc, #352]	; 12d10 <strspn@plt+0x1e7c>
   12bac:	vcvt.f32.u32	s12, s15
   12bb0:	vdiv.f32	s15, s12, s13
   12bb4:	vcmpe.f32	s15, s14
   12bb8:	vmrs	APSR_nzcv, fpscr
   12bbc:	bge	12ccc <strspn@plt+0x1e38>
   12bc0:	vcvt.u32.f32	s15, s15
   12bc4:	vstr	s15, [sp, #4]
   12bc8:	ldr	r0, [sp, #4]
   12bcc:	bl	12028 <strspn@plt+0x1194>
   12bd0:	lsrs	r3, r0, #30
   12bd4:	movne	r2, #1
   12bd8:	moveq	r2, #0
   12bdc:	tst	r0, #536870912	; 0x20000000
   12be0:	movne	r2, #1
   12be4:	cmp	r0, #0
   12be8:	movne	r4, r2
   12bec:	orreq	r4, r2, #1
   12bf0:	cmp	r4, #0
   12bf4:	mov	r6, r0
   12bf8:	bne	12ccc <strspn@plt+0x1e38>
   12bfc:	ldr	r3, [r5, #8]
   12c00:	cmp	r3, r0
   12c04:	beq	12cbc <strspn@plt+0x1e28>
   12c08:	mov	r1, #8
   12c0c:	bl	15b50 <strspn@plt+0x4cbc>
   12c10:	cmp	r0, #0
   12c14:	str	r0, [sp, #8]
   12c18:	beq	12ccc <strspn@plt+0x1e38>
   12c1c:	ldr	r1, [r5, #24]
   12c20:	ldr	r7, [r5, #20]
   12c24:	ldr	lr, [r5, #28]
   12c28:	ldr	ip, [r5, #32]
   12c2c:	add	r0, r0, r6, lsl #3
   12c30:	ldr	r3, [r5, #36]	; 0x24
   12c34:	str	r0, [sp, #12]
   12c38:	mov	r2, r4
   12c3c:	str	r1, [sp, #32]
   12c40:	add	r0, sp, #8
   12c44:	mov	r1, r5
   12c48:	str	r4, [sp, #20]
   12c4c:	str	r4, [sp, #24]
   12c50:	str	r6, [sp, #16]
   12c54:	str	r7, [sp, #28]
   12c58:	str	lr, [sp, #36]	; 0x24
   12c5c:	str	ip, [sp, #40]	; 0x28
   12c60:	str	r3, [sp, #44]	; 0x2c
   12c64:	bl	122d0 <strspn@plt+0x143c>
   12c68:	subs	r4, r0, #0
   12c6c:	bne	12cdc <strspn@plt+0x1e48>
   12c70:	ldr	r3, [sp, #44]	; 0x2c
   12c74:	mov	r2, #1
   12c78:	str	r3, [r5, #36]	; 0x24
   12c7c:	add	r1, sp, #8
   12c80:	mov	r0, r5
   12c84:	bl	122d0 <strspn@plt+0x143c>
   12c88:	cmp	r0, #0
   12c8c:	beq	12d0c <strspn@plt+0x1e78>
   12c90:	add	r1, sp, #8
   12c94:	mov	r0, r5
   12c98:	mov	r2, r4
   12c9c:	bl	122d0 <strspn@plt+0x143c>
   12ca0:	cmp	r0, #0
   12ca4:	beq	12d0c <strspn@plt+0x1e78>
   12ca8:	ldr	r0, [sp, #8]
   12cac:	bl	11fcc <strspn@plt+0x1138>
   12cb0:	mov	r0, r4
   12cb4:	add	sp, sp, #52	; 0x34
   12cb8:	pop	{r4, r5, r6, r7, pc}
   12cbc:	mov	r4, #1
   12cc0:	mov	r0, r4
   12cc4:	add	sp, sp, #52	; 0x34
   12cc8:	pop	{r4, r5, r6, r7, pc}
   12ccc:	mov	r4, #0
   12cd0:	mov	r0, r4
   12cd4:	add	sp, sp, #52	; 0x34
   12cd8:	pop	{r4, r5, r6, r7, pc}
   12cdc:	ldr	r0, [r5]
   12ce0:	bl	11fcc <strspn@plt+0x1138>
   12ce4:	add	r0, sp, #12
   12ce8:	ldr	ip, [sp, #8]
   12cec:	ldm	r0, {r0, r1, r2}
   12cf0:	ldr	r3, [sp, #44]	; 0x2c
   12cf4:	str	ip, [r5]
   12cf8:	stmib	r5, {r0, r1, r2}
   12cfc:	mov	r0, r4
   12d00:	str	r3, [r5, #36]	; 0x24
   12d04:	add	sp, sp, #52	; 0x34
   12d08:	pop	{r4, r5, r6, r7, pc}
   12d0c:	bl	10e88 <abort@plt>
   12d10:	svcmi	0x00800000
   12d14:	push	{r4, r5, r6, lr}
   12d18:	subs	r6, r1, #0
   12d1c:	sub	sp, sp, #8
   12d20:	beq	12e54 <strspn@plt+0x1fc0>
   12d24:	mov	r4, r2
   12d28:	mov	r3, #0
   12d2c:	add	r2, sp, #4
   12d30:	mov	r5, r0
   12d34:	bl	12124 <strspn@plt+0x1290>
   12d38:	cmp	r0, #0
   12d3c:	beq	12d58 <strspn@plt+0x1ec4>
   12d40:	cmp	r4, #0
   12d44:	moveq	r0, r4
   12d48:	strne	r0, [r4]
   12d4c:	movne	r0, #0
   12d50:	add	sp, sp, #8
   12d54:	pop	{r4, r5, r6, pc}
   12d58:	vldr	s15, [r5, #8]
   12d5c:	ldr	r3, [r5, #20]
   12d60:	vldr	s14, [r5, #12]
   12d64:	vcvt.f32.u32	s15, s15
   12d68:	vldr	s13, [r3, #8]
   12d6c:	vcvt.f32.u32	s14, s14
   12d70:	vmul.f32	s15, s15, s13
   12d74:	vcmpe.f32	s14, s15
   12d78:	vmrs	APSR_nzcv, fpscr
   12d7c:	bgt	12dcc <strspn@plt+0x1f38>
   12d80:	ldr	r2, [sp, #4]
   12d84:	ldr	r3, [r2]
   12d88:	cmp	r3, #0
   12d8c:	beq	12e58 <strspn@plt+0x1fc4>
   12d90:	ldr	r3, [r5, #36]	; 0x24
   12d94:	cmp	r3, #0
   12d98:	beq	12e7c <strspn@plt+0x1fe8>
   12d9c:	ldr	r1, [r3, #4]
   12da0:	str	r1, [r5, #36]	; 0x24
   12da4:	ldr	r1, [r5, #16]
   12da8:	ldr	r0, [r2, #4]
   12dac:	add	r1, r1, #1
   12db0:	str	r0, [r3, #4]
   12db4:	str	r6, [r3]
   12db8:	mov	r0, #1
   12dbc:	str	r3, [r2, #4]
   12dc0:	str	r1, [r5, #16]
   12dc4:	add	sp, sp, #8
   12dc8:	pop	{r4, r5, r6, pc}
   12dcc:	add	r0, r5, #20
   12dd0:	bl	12220 <strspn@plt+0x138c>
   12dd4:	vldr	s15, [r5, #8]
   12dd8:	ldr	r3, [r5, #20]
   12ddc:	vldr	s14, [r5, #12]
   12de0:	vcvt.f32.u32	s15, s15
   12de4:	vldr	s13, [r3, #8]
   12de8:	vcvt.f32.u32	s14, s14
   12dec:	vmul.f32	s12, s13, s15
   12df0:	vcmpe.f32	s14, s12
   12df4:	vmrs	APSR_nzcv, fpscr
   12df8:	ble	12d80 <strspn@plt+0x1eec>
   12dfc:	vldr	s14, [r3, #12]
   12e00:	ldrb	r2, [r3, #16]
   12e04:	vmul.f32	s15, s15, s14
   12e08:	cmp	r2, #0
   12e0c:	vldr	s14, [pc, #132]	; 12e98 <strspn@plt+0x2004>
   12e10:	vmuleq.f32	s15, s15, s13
   12e14:	vcmpe.f32	s15, s14
   12e18:	vmrs	APSR_nzcv, fpscr
   12e1c:	bge	12e90 <strspn@plt+0x1ffc>
   12e20:	vcvt.u32.f32	s15, s15
   12e24:	mov	r0, r5
   12e28:	vmov	r1, s15
   12e2c:	bl	12b80 <strspn@plt+0x1cec>
   12e30:	cmp	r0, #0
   12e34:	beq	12e90 <strspn@plt+0x1ffc>
   12e38:	add	r2, sp, #4
   12e3c:	mov	r3, #0
   12e40:	mov	r1, r6
   12e44:	mov	r0, r5
   12e48:	bl	12124 <strspn@plt+0x1290>
   12e4c:	cmp	r0, #0
   12e50:	beq	12d80 <strspn@plt+0x1eec>
   12e54:	bl	10e88 <abort@plt>
   12e58:	ldr	r1, [r5, #16]
   12e5c:	ldr	r3, [r5, #12]
   12e60:	add	r1, r1, #1
   12e64:	add	r3, r3, #1
   12e68:	str	r6, [r2]
   12e6c:	mov	r0, #1
   12e70:	str	r1, [r5, #16]
   12e74:	str	r3, [r5, #12]
   12e78:	b	12d50 <strspn@plt+0x1ebc>
   12e7c:	mov	r0, #8
   12e80:	bl	15b98 <strspn@plt+0x4d04>
   12e84:	subs	r3, r0, #0
   12e88:	ldrne	r2, [sp, #4]
   12e8c:	bne	12da4 <strspn@plt+0x1f10>
   12e90:	mvn	r0, #0
   12e94:	b	12d50 <strspn@plt+0x1ebc>
   12e98:	svcmi	0x00800000
   12e9c:	push	{r4, lr}
   12ea0:	sub	sp, sp, #8
   12ea4:	add	r2, sp, #4
   12ea8:	mov	r4, r1
   12eac:	bl	12d14 <strspn@plt+0x1e80>
   12eb0:	cmn	r0, #1
   12eb4:	beq	12ecc <strspn@plt+0x2038>
   12eb8:	cmp	r0, #0
   12ebc:	movne	r0, r4
   12ec0:	ldreq	r0, [sp, #4]
   12ec4:	add	sp, sp, #8
   12ec8:	pop	{r4, pc}
   12ecc:	mov	r0, #0
   12ed0:	b	12ec4 <strspn@plt+0x2030>
   12ed4:	push	{r4, r5, r6, lr}
   12ed8:	sub	sp, sp, #8
   12edc:	mov	r3, #1
   12ee0:	add	r2, sp, #4
   12ee4:	mov	r4, r0
   12ee8:	bl	12124 <strspn@plt+0x1290>
   12eec:	subs	r5, r0, #0
   12ef0:	beq	12f10 <strspn@plt+0x207c>
   12ef4:	ldr	r2, [sp, #4]
   12ef8:	ldr	r3, [r4, #16]
   12efc:	ldr	r2, [r2]
   12f00:	sub	r3, r3, #1
   12f04:	cmp	r2, #0
   12f08:	str	r3, [r4, #16]
   12f0c:	beq	12f1c <strspn@plt+0x2088>
   12f10:	mov	r0, r5
   12f14:	add	sp, sp, #8
   12f18:	pop	{r4, r5, r6, pc}
   12f1c:	vldr	s15, [r4, #8]
   12f20:	ldr	r3, [r4, #12]
   12f24:	ldr	r2, [r4, #20]
   12f28:	sub	r3, r3, #1
   12f2c:	vcvt.f32.u32	s14, s15
   12f30:	vldr	s13, [r2]
   12f34:	vmov	s15, r3
   12f38:	str	r3, [r4, #12]
   12f3c:	vcvt.f32.u32	s15, s15
   12f40:	vmul.f32	s14, s14, s13
   12f44:	vcmpe.f32	s15, s14
   12f48:	vmrs	APSR_nzcv, fpscr
   12f4c:	bpl	12f10 <strspn@plt+0x207c>
   12f50:	add	r0, r4, #20
   12f54:	bl	12220 <strspn@plt+0x138c>
   12f58:	vldr	s15, [r4, #8]
   12f5c:	ldr	r3, [r4, #20]
   12f60:	vldr	s13, [r4, #12]
   12f64:	vcvt.f32.u32	s15, s15
   12f68:	vldr	s14, [r3]
   12f6c:	vcvt.f32.u32	s13, s13
   12f70:	vmul.f32	s14, s15, s14
   12f74:	vcmpe.f32	s13, s14
   12f78:	vmrs	APSR_nzcv, fpscr
   12f7c:	bpl	12f10 <strspn@plt+0x207c>
   12f80:	ldrb	r2, [r3, #16]
   12f84:	mov	r0, r4
   12f88:	cmp	r2, #0
   12f8c:	vldreq	s13, [r3, #4]
   12f90:	vldrne	s14, [r3, #4]
   12f94:	vldreq	s14, [r3, #8]
   12f98:	vmuleq.f32	s15, s15, s13
   12f9c:	vmul.f32	s15, s15, s14
   12fa0:	vcvt.u32.f32	s15, s15
   12fa4:	vmov	r1, s15
   12fa8:	bl	12b80 <strspn@plt+0x1cec>
   12fac:	cmp	r0, #0
   12fb0:	bne	12f10 <strspn@plt+0x207c>
   12fb4:	ldr	r0, [r4, #36]	; 0x24
   12fb8:	cmp	r0, #0
   12fbc:	beq	12fd0 <strspn@plt+0x213c>
   12fc0:	ldr	r6, [r0, #4]
   12fc4:	bl	11fcc <strspn@plt+0x1138>
   12fc8:	subs	r0, r6, #0
   12fcc:	bne	12fc0 <strspn@plt+0x212c>
   12fd0:	mov	r3, #0
   12fd4:	str	r3, [r4, #36]	; 0x24
   12fd8:	b	12f10 <strspn@plt+0x207c>
   12fdc:	b	12ed4 <strspn@plt+0x2040>
   12fe0:	push	{r4, r5, r6, lr}
   12fe4:	mov	r4, r0
   12fe8:	ldr	r0, [r0]
   12fec:	mov	r6, r1
   12ff0:	bl	15e3c <strspn@plt+0x4fa8>
   12ff4:	ldrd	r4, [r4, #8]
   12ff8:	mov	r2, r6
   12ffc:	mov	r3, #0
   13000:	eor	r4, r4, r0
   13004:	mov	r0, r4
   13008:	mov	r1, r5
   1300c:	bl	1648c <strspn@plt+0x55f8>
   13010:	mov	r0, r2
   13014:	pop	{r4, r5, r6, pc}
   13018:	ldrd	r2, [r1, #8]
   1301c:	push	{r4, r5, r6, lr}
   13020:	ldrd	r4, [r0, #8]
   13024:	cmp	r5, r3
   13028:	cmpeq	r4, r2
   1302c:	beq	13038 <strspn@plt+0x21a4>
   13030:	mov	r0, #0
   13034:	pop	{r4, r5, r6, pc}
   13038:	ldrd	r4, [r0, #16]
   1303c:	ldrd	r2, [r1, #16]
   13040:	cmp	r5, r3
   13044:	cmpeq	r4, r2
   13048:	bne	13030 <strspn@plt+0x219c>
   1304c:	ldr	r1, [r1]
   13050:	ldr	r0, [r0]
   13054:	bl	10c54 <strcmp@plt>
   13058:	clz	r0, r0
   1305c:	lsr	r0, r0, #5
   13060:	pop	{r4, r5, r6, pc}
   13064:	push	{r4, lr}
   13068:	mov	r4, r0
   1306c:	ldr	r0, [r0]
   13070:	bl	11fcc <strspn@plt+0x1138>
   13074:	mov	r0, r4
   13078:	pop	{r4, lr}
   1307c:	b	11fcc <strspn@plt+0x1138>
   13080:	push	{r4, r5, r6, lr}
   13084:	subs	r4, r0, #0
   13088:	beq	130fc <strspn@plt+0x2268>
   1308c:	mov	r1, #47	; 0x2f
   13090:	bl	10e4c <strrchr@plt>
   13094:	subs	r5, r0, #0
   13098:	beq	130e8 <strspn@plt+0x2254>
   1309c:	add	r6, r5, #1
   130a0:	sub	r3, r6, r4
   130a4:	cmp	r3, #6
   130a8:	ble	130e8 <strspn@plt+0x2254>
   130ac:	mov	r2, #7
   130b0:	ldr	r1, [pc, #96]	; 13118 <strspn@plt+0x2284>
   130b4:	sub	r0, r5, #6
   130b8:	bl	10e7c <strncmp@plt>
   130bc:	cmp	r0, #0
   130c0:	bne	130e8 <strspn@plt+0x2254>
   130c4:	mov	r2, #3
   130c8:	ldr	r1, [pc, #76]	; 1311c <strspn@plt+0x2288>
   130cc:	mov	r0, r6
   130d0:	bl	10e7c <strncmp@plt>
   130d4:	cmp	r0, #0
   130d8:	movne	r4, r6
   130dc:	ldreq	r3, [pc, #60]	; 13120 <strspn@plt+0x228c>
   130e0:	addeq	r4, r5, #4
   130e4:	streq	r4, [r3]
   130e8:	ldr	r2, [pc, #52]	; 13124 <strspn@plt+0x2290>
   130ec:	ldr	r3, [pc, #52]	; 13128 <strspn@plt+0x2294>
   130f0:	str	r4, [r2]
   130f4:	str	r4, [r3]
   130f8:	pop	{r4, r5, r6, pc}
   130fc:	ldr	r3, [pc, #40]	; 1312c <strspn@plt+0x2298>
   13100:	mov	r2, #55	; 0x37
   13104:	mov	r1, #1
   13108:	ldr	r3, [r3]
   1310c:	ldr	r0, [pc, #28]	; 13130 <strspn@plt+0x229c>
   13110:	bl	10d14 <fwrite@plt>
   13114:	bl	10e88 <abort@plt>
   13118:	andeq	r6, r1, r4, asr pc
   1311c:	andeq	r6, r1, ip, asr pc
   13120:	andeq	r8, r2, r0, lsr r1
   13124:	andeq	r8, r2, r4, asr r1
   13128:	andeq	r8, r2, r4, lsr r1
   1312c:	andeq	r8, r2, r0, asr #2
   13130:	andeq	r6, r1, ip, lsl pc
   13134:	push	{r4, r5, r6, lr}
   13138:	mov	r2, #48	; 0x30
   1313c:	mov	r4, r1
   13140:	mov	r1, #0
   13144:	mov	r5, r0
   13148:	bl	10dec <memset@plt>
   1314c:	cmp	r4, #10
   13150:	beq	13160 <strspn@plt+0x22cc>
   13154:	str	r4, [r5]
   13158:	mov	r0, r5
   1315c:	pop	{r4, r5, r6, pc}
   13160:	bl	10e88 <abort@plt>
   13164:	push	{r4, r5, r6, lr}
   13168:	mov	r4, r0
   1316c:	mov	r5, r1
   13170:	bl	15e78 <strspn@plt+0x4fe4>
   13174:	ldrb	r3, [r0]
   13178:	bic	r3, r3, #32
   1317c:	cmp	r3, #85	; 0x55
   13180:	bne	131e0 <strspn@plt+0x234c>
   13184:	ldrb	r3, [r0, #1]
   13188:	bic	r3, r3, #32
   1318c:	cmp	r3, #84	; 0x54
   13190:	bne	1321c <strspn@plt+0x2388>
   13194:	ldrb	r3, [r0, #2]
   13198:	bic	r3, r3, #32
   1319c:	cmp	r3, #70	; 0x46
   131a0:	bne	1321c <strspn@plt+0x2388>
   131a4:	ldrb	r3, [r0, #3]
   131a8:	cmp	r3, #45	; 0x2d
   131ac:	bne	1321c <strspn@plt+0x2388>
   131b0:	ldrb	r3, [r0, #4]
   131b4:	cmp	r3, #56	; 0x38
   131b8:	bne	1321c <strspn@plt+0x2388>
   131bc:	ldrb	r3, [r0, #5]
   131c0:	cmp	r3, #0
   131c4:	bne	1321c <strspn@plt+0x2388>
   131c8:	ldrb	r2, [r4]
   131cc:	ldr	r3, [pc, #152]	; 1326c <strspn@plt+0x23d8>
   131d0:	ldr	r0, [pc, #152]	; 13270 <strspn@plt+0x23dc>
   131d4:	cmp	r2, #96	; 0x60
   131d8:	movne	r0, r3
   131dc:	pop	{r4, r5, r6, pc}
   131e0:	cmp	r3, #71	; 0x47
   131e4:	bne	1321c <strspn@plt+0x2388>
   131e8:	ldrb	r3, [r0, #1]
   131ec:	bic	r3, r3, #32
   131f0:	cmp	r3, #66	; 0x42
   131f4:	bne	1321c <strspn@plt+0x2388>
   131f8:	ldrb	r3, [r0, #2]
   131fc:	cmp	r3, #49	; 0x31
   13200:	bne	1321c <strspn@plt+0x2388>
   13204:	ldrb	r3, [r0, #3]
   13208:	cmp	r3, #56	; 0x38
   1320c:	bne	1321c <strspn@plt+0x2388>
   13210:	ldrb	r3, [r0, #4]
   13214:	cmp	r3, #48	; 0x30
   13218:	beq	13230 <strspn@plt+0x239c>
   1321c:	ldr	r3, [pc, #80]	; 13274 <strspn@plt+0x23e0>
   13220:	cmp	r5, #9
   13224:	ldr	r0, [pc, #76]	; 13278 <strspn@plt+0x23e4>
   13228:	movne	r0, r3
   1322c:	pop	{r4, r5, r6, pc}
   13230:	ldrb	r3, [r0, #5]
   13234:	cmp	r3, #51	; 0x33
   13238:	bne	1321c <strspn@plt+0x2388>
   1323c:	ldrb	r3, [r0, #6]
   13240:	cmp	r3, #48	; 0x30
   13244:	bne	1321c <strspn@plt+0x2388>
   13248:	ldrb	r3, [r0, #7]
   1324c:	cmp	r3, #0
   13250:	bne	1321c <strspn@plt+0x2388>
   13254:	ldrb	r2, [r4]
   13258:	ldr	r3, [pc, #28]	; 1327c <strspn@plt+0x23e8>
   1325c:	ldr	r0, [pc, #28]	; 13280 <strspn@plt+0x23ec>
   13260:	cmp	r2, #96	; 0x60
   13264:	movne	r0, r3
   13268:	pop	{r4, r5, r6, pc}
   1326c:			; <UNDEFINED> instruction: 0x00016fb8
   13270:			; <UNDEFINED> instruction: 0x00016fb4
   13274:	andeq	r6, r1, r8, asr #31
   13278:	andeq	r6, r1, r4, asr #31
   1327c:	andeq	r6, r1, r0, asr #31
   13280:			; <UNDEFINED> instruction: 0x00016fbc
   13284:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13288:	sub	sp, sp, #116	; 0x74
   1328c:	mov	sl, r0
   13290:	str	r3, [sp, #24]
   13294:	mov	r3, #1
   13298:	mov	r8, r1
   1329c:	str	r2, [sp, #56]	; 0x38
   132a0:	str	r3, [sp, #36]	; 0x24
   132a4:	bl	10d2c <__ctype_get_mb_cur_max@plt>
   132a8:	ldr	r3, [sp, #156]	; 0x9c
   132ac:	mov	fp, r8
   132b0:	mov	r2, #0
   132b4:	lsr	r3, r3, #1
   132b8:	and	r3, r3, #1
   132bc:	str	r2, [sp, #68]	; 0x44
   132c0:	str	r3, [sp, #28]
   132c4:	str	r2, [sp, #40]	; 0x28
   132c8:	str	r2, [sp, #44]	; 0x2c
   132cc:	str	r2, [sp, #52]	; 0x34
   132d0:	str	r2, [sp, #64]	; 0x40
   132d4:	str	r2, [sp, #72]	; 0x48
   132d8:	str	sl, [sp, #32]
   132dc:	str	r0, [sp, #76]	; 0x4c
   132e0:	ldr	r3, [sp, #152]	; 0x98
   132e4:	cmp	r3, #10
   132e8:	ldrls	pc, [pc, r3, lsl #2]
   132ec:	b	144ac <strspn@plt+0x3618>
   132f0:	andeq	r3, r1, ip, lsl r3
   132f4:	andeq	r3, r1, r4, lsl #12
   132f8:	andeq	r3, r1, r8, lsr #12
   132fc:	andeq	r3, r1, ip, asr #12
   13300:	andeq	r3, r1, r8, ror r7
   13304:	andeq	r3, r1, ip, asr #14
   13308:	andeq	r3, r1, r4, lsr #14
   1330c:	andeq	r3, r1, r0, ror #12
   13310:	andeq	r3, r1, r8, ror r6
   13314:	andeq	r3, r1, r8, ror r6
   13318:	andeq	r3, r1, r8, ror r6
   1331c:	mov	r3, #0
   13320:	mov	r7, r3
   13324:	str	r3, [sp, #28]
   13328:	ldr	r3, [sp, #44]	; 0x2c
   1332c:	mov	sl, #0
   13330:	eor	r3, r3, #1
   13334:	str	r3, [sp, #60]	; 0x3c
   13338:	ldr	r3, [sp, #24]
   1333c:	cmn	r3, #1
   13340:	beq	138a4 <strspn@plt+0x2a10>
   13344:	ldr	r3, [sp, #24]
   13348:	subs	r5, r3, sl
   1334c:	movne	r5, #1
   13350:	cmp	r5, #0
   13354:	beq	138bc <strspn@plt+0x2a28>
   13358:	ldr	r3, [sp, #152]	; 0x98
   1335c:	ldr	r8, [sp, #44]	; 0x2c
   13360:	cmp	r3, #2
   13364:	moveq	r8, #0
   13368:	andne	r8, r8, #1
   1336c:	ldr	r3, [sp, #52]	; 0x34
   13370:	adds	r9, r3, #0
   13374:	movne	r9, #1
   13378:	ands	r6, r9, r8
   1337c:	beq	13d24 <strspn@plt+0x2e90>
   13380:	ldr	r2, [sp, #52]	; 0x34
   13384:	ldr	r1, [sp, #24]
   13388:	cmp	r2, #1
   1338c:	mov	r3, r2
   13390:	movls	r3, #0
   13394:	movhi	r3, #1
   13398:	cmn	r1, #1
   1339c:	movne	r3, #0
   133a0:	cmp	r3, #0
   133a4:	add	r4, sl, r2
   133a8:	beq	133b8 <strspn@plt+0x2524>
   133ac:	ldr	r0, [sp, #56]	; 0x38
   133b0:	bl	10dc8 <strlen@plt>
   133b4:	str	r0, [sp, #24]
   133b8:	ldr	r3, [sp, #24]
   133bc:	cmp	r3, r4
   133c0:	ldr	r3, [sp, #56]	; 0x38
   133c4:	add	r3, r3, sl
   133c8:	str	r3, [sp, #48]	; 0x30
   133cc:	bcc	13d30 <strspn@plt+0x2e9c>
   133d0:	mov	r0, r3
   133d4:	ldr	r2, [sp, #52]	; 0x34
   133d8:	ldr	r1, [sp, #64]	; 0x40
   133dc:	bl	10cb4 <memcmp@plt>
   133e0:	cmp	r0, #0
   133e4:	bne	13d30 <strspn@plt+0x2e9c>
   133e8:	ldr	r3, [sp, #28]
   133ec:	cmp	r3, #0
   133f0:	bne	145ac <strspn@plt+0x3718>
   133f4:	ldr	r3, [sp, #48]	; 0x30
   133f8:	ldrb	r4, [r3]
   133fc:	cmp	r4, #126	; 0x7e
   13400:	ldrls	pc, [pc, r4, lsl #2]
   13404:	b	13cc4 <strspn@plt+0x2e30>
   13408:	andeq	r3, r1, r8, ror #21
   1340c:	andeq	r3, r1, r4, asr #25
   13410:	andeq	r3, r1, r4, asr #25
   13414:	andeq	r3, r1, r4, asr #25
   13418:	andeq	r3, r1, r4, asr #25
   1341c:	andeq	r3, r1, r4, asr #25
   13420:	andeq	r3, r1, r4, asr #25
   13424:	andeq	r3, r1, ip, asr #21
   13428:			; <UNDEFINED> instruction: 0x00013ab0
   1342c:	andeq	r3, r1, ip, lsr #25
   13430:	andeq	r3, r1, r0, lsl sl
   13434:	strdeq	r3, [r1], -r4
   13438:	andeq	r3, r1, r8, lsl #25
   1343c:	andeq	r3, r1, r4, ror #24
   13440:	andeq	r3, r1, r4, asr #25
   13444:	andeq	r3, r1, r4, asr #25
   13448:	andeq	r3, r1, r4, asr #25
   1344c:	andeq	r3, r1, r4, asr #25
   13450:	andeq	r3, r1, r4, asr #25
   13454:	andeq	r3, r1, r4, asr #25
   13458:	andeq	r3, r1, r4, asr #25
   1345c:	andeq	r3, r1, r4, asr #25
   13460:	andeq	r3, r1, r4, asr #25
   13464:	andeq	r3, r1, r4, asr #25
   13468:	andeq	r3, r1, r4, asr #25
   1346c:	andeq	r3, r1, r4, asr #25
   13470:	andeq	r3, r1, r4, asr #25
   13474:	andeq	r3, r1, r4, asr #25
   13478:	andeq	r3, r1, r4, asr #25
   1347c:	andeq	r3, r1, r4, asr #25
   13480:	andeq	r3, r1, r4, asr #25
   13484:	andeq	r3, r1, r4, asr #25
   13488:	andeq	r3, r1, r4, lsr #25
   1348c:	ldrdeq	r3, [r1], -r8
   13490:	ldrdeq	r3, [r1], -r8
   13494:	andeq	r3, r1, r8, ror #15
   13498:	ldrdeq	r3, [r1], -r8
   1349c:	andeq	r3, r1, r0, ror ip
   134a0:	ldrdeq	r3, [r1], -r8
   134a4:	andeq	r3, r1, r4, asr #24
   134a8:	ldrdeq	r3, [r1], -r8
   134ac:	ldrdeq	r3, [r1], -r8
   134b0:	ldrdeq	r3, [r1], -r8
   134b4:	andeq	r3, r1, r0, ror ip
   134b8:	andeq	r3, r1, r0, ror ip
   134bc:	andeq	r3, r1, r0, ror ip
   134c0:	andeq	r3, r1, r0, ror ip
   134c4:	andeq	r3, r1, r0, ror ip
   134c8:	andeq	r3, r1, r0, ror ip
   134cc:	andeq	r3, r1, r0, ror ip
   134d0:	andeq	r3, r1, r0, ror ip
   134d4:	andeq	r3, r1, r0, ror ip
   134d8:	andeq	r3, r1, r0, ror ip
   134dc:	andeq	r3, r1, r0, ror ip
   134e0:	andeq	r3, r1, r0, ror ip
   134e4:	andeq	r3, r1, r0, ror ip
   134e8:	andeq	r3, r1, r0, ror ip
   134ec:	andeq	r3, r1, r0, ror ip
   134f0:	andeq	r3, r1, r0, ror ip
   134f4:	ldrdeq	r3, [r1], -r8
   134f8:	ldrdeq	r3, [r1], -r8
   134fc:	ldrdeq	r3, [r1], -r8
   13500:	ldrdeq	r3, [r1], -r8
   13504:	andeq	r3, r1, r4, lsl ip
   13508:	andeq	r3, r1, r4, asr #25
   1350c:	andeq	r3, r1, r0, ror ip
   13510:	andeq	r3, r1, r0, ror ip
   13514:	andeq	r3, r1, r0, ror ip
   13518:	andeq	r3, r1, r0, ror ip
   1351c:	andeq	r3, r1, r0, ror ip
   13520:	andeq	r3, r1, r0, ror ip
   13524:	andeq	r3, r1, r0, ror ip
   13528:	andeq	r3, r1, r0, ror ip
   1352c:	andeq	r3, r1, r0, ror ip
   13530:	andeq	r3, r1, r0, ror ip
   13534:	andeq	r3, r1, r0, ror ip
   13538:	andeq	r3, r1, r0, ror ip
   1353c:	andeq	r3, r1, r0, ror ip
   13540:	andeq	r3, r1, r0, ror ip
   13544:	andeq	r3, r1, r0, ror ip
   13548:	andeq	r3, r1, r0, ror ip
   1354c:	andeq	r3, r1, r0, ror ip
   13550:	andeq	r3, r1, r0, ror ip
   13554:	andeq	r3, r1, r0, ror ip
   13558:	andeq	r3, r1, r0, ror ip
   1355c:	andeq	r3, r1, r0, ror ip
   13560:	andeq	r3, r1, r0, ror ip
   13564:	andeq	r3, r1, r0, ror ip
   13568:	andeq	r3, r1, r0, ror ip
   1356c:	andeq	r3, r1, r0, ror ip
   13570:	andeq	r3, r1, r0, ror ip
   13574:	ldrdeq	r3, [r1], -r8
   13578:	andeq	r3, r1, r4, lsr r9
   1357c:	andeq	r3, r1, r0, ror ip
   13580:	ldrdeq	r3, [r1], -r8
   13584:	andeq	r3, r1, r0, ror ip
   13588:	ldrdeq	r3, [r1], -r8
   1358c:	andeq	r3, r1, r0, ror ip
   13590:	andeq	r3, r1, r0, ror ip
   13594:	andeq	r3, r1, r0, ror ip
   13598:	andeq	r3, r1, r0, ror ip
   1359c:	andeq	r3, r1, r0, ror ip
   135a0:	andeq	r3, r1, r0, ror ip
   135a4:	andeq	r3, r1, r0, ror ip
   135a8:	andeq	r3, r1, r0, ror ip
   135ac:	andeq	r3, r1, r0, ror ip
   135b0:	andeq	r3, r1, r0, ror ip
   135b4:	andeq	r3, r1, r0, ror ip
   135b8:	andeq	r3, r1, r0, ror ip
   135bc:	andeq	r3, r1, r0, ror ip
   135c0:	andeq	r3, r1, r0, ror ip
   135c4:	andeq	r3, r1, r0, ror ip
   135c8:	andeq	r3, r1, r0, ror ip
   135cc:	andeq	r3, r1, r0, ror ip
   135d0:	andeq	r3, r1, r0, ror ip
   135d4:	andeq	r3, r1, r0, ror ip
   135d8:	andeq	r3, r1, r0, ror ip
   135dc:	andeq	r3, r1, r0, ror ip
   135e0:	andeq	r3, r1, r0, ror ip
   135e4:	andeq	r3, r1, r0, ror ip
   135e8:	andeq	r3, r1, r0, ror ip
   135ec:	andeq	r3, r1, r0, ror ip
   135f0:	andeq	r3, r1, r0, ror ip
   135f4:	andeq	r3, r1, r8, asr #15
   135f8:	ldrdeq	r3, [r1], -r8
   135fc:	andeq	r3, r1, r8, asr #15
   13600:	andeq	r3, r1, r8, ror #15
   13604:	mov	r3, #1
   13608:	str	r3, [sp, #28]
   1360c:	str	r3, [sp, #52]	; 0x34
   13610:	ldr	r3, [pc, #4000]	; 145b8 <strspn@plt+0x3724>
   13614:	mov	r7, #0
   13618:	str	r3, [sp, #64]	; 0x40
   1361c:	mov	r3, #2
   13620:	str	r3, [sp, #152]	; 0x98
   13624:	b	13328 <strspn@plt+0x2494>
   13628:	ldr	r3, [sp, #28]
   1362c:	cmp	r3, #0
   13630:	beq	1378c <strspn@plt+0x28f8>
   13634:	mov	r3, #1
   13638:	str	r3, [sp, #52]	; 0x34
   1363c:	ldr	r3, [pc, #3956]	; 145b8 <strspn@plt+0x3724>
   13640:	mov	r7, #0
   13644:	str	r3, [sp, #64]	; 0x40
   13648:	b	13328 <strspn@plt+0x2494>
   1364c:	mov	r3, #1
   13650:	str	r3, [sp, #44]	; 0x2c
   13654:	str	r3, [sp, #52]	; 0x34
   13658:	str	r3, [sp, #28]
   1365c:	b	13610 <strspn@plt+0x277c>
   13660:	mov	r3, #0
   13664:	str	r3, [sp, #28]
   13668:	mov	r3, #1
   1366c:	str	r3, [sp, #44]	; 0x2c
   13670:	mov	r7, #0
   13674:	b	13328 <strspn@plt+0x2494>
   13678:	ldr	r3, [sp, #152]	; 0x98
   1367c:	cmp	r3, #10
   13680:	beq	136c4 <strspn@plt+0x2830>
   13684:	mov	r2, #5
   13688:	ldr	r1, [pc, #3884]	; 145bc <strspn@plt+0x3728>
   1368c:	mov	r0, #0
   13690:	bl	10ccc <dcgettext@plt>
   13694:	ldr	r2, [pc, #3872]	; 145bc <strspn@plt+0x3728>
   13698:	cmp	r0, r2
   1369c:	str	r0, [sp, #164]	; 0xa4
   136a0:	beq	146a8 <strspn@plt+0x3814>
   136a4:	mov	r2, #5
   136a8:	ldr	r1, [pc, #3848]	; 145b8 <strspn@plt+0x3724>
   136ac:	mov	r0, #0
   136b0:	bl	10ccc <dcgettext@plt>
   136b4:	ldr	r2, [pc, #3836]	; 145b8 <strspn@plt+0x3724>
   136b8:	cmp	r0, r2
   136bc:	str	r0, [sp, #168]	; 0xa8
   136c0:	beq	14698 <strspn@plt+0x3804>
   136c4:	ldr	r7, [sp, #28]
   136c8:	cmp	r7, #0
   136cc:	movne	r7, #0
   136d0:	bne	13704 <strspn@plt+0x2870>
   136d4:	ldr	r3, [sp, #164]	; 0xa4
   136d8:	ldrb	r3, [r3]
   136dc:	cmp	r3, #0
   136e0:	beq	146b8 <strspn@plt+0x3824>
   136e4:	ldr	r2, [sp, #164]	; 0xa4
   136e8:	ldr	r1, [sp, #32]
   136ec:	cmp	fp, r7
   136f0:	strbhi	r3, [r1, r7]
   136f4:	ldrb	r3, [r2, #1]!
   136f8:	add	r7, r7, #1
   136fc:	cmp	r3, #0
   13700:	bne	136ec <strspn@plt+0x2858>
   13704:	ldr	r0, [sp, #168]	; 0xa8
   13708:	bl	10dc8 <strlen@plt>
   1370c:	ldr	r3, [sp, #168]	; 0xa8
   13710:	str	r3, [sp, #64]	; 0x40
   13714:	mov	r3, #1
   13718:	str	r3, [sp, #44]	; 0x2c
   1371c:	str	r0, [sp, #52]	; 0x34
   13720:	b	13328 <strspn@plt+0x2494>
   13724:	mov	r3, #1
   13728:	str	r3, [sp, #44]	; 0x2c
   1372c:	str	r3, [sp, #52]	; 0x34
   13730:	str	r3, [sp, #28]
   13734:	ldr	r3, [pc, #3716]	; 145c0 <strspn@plt+0x372c>
   13738:	mov	r7, #0
   1373c:	str	r3, [sp, #64]	; 0x40
   13740:	mov	r3, #5
   13744:	str	r3, [sp, #152]	; 0x98
   13748:	b	13328 <strspn@plt+0x2494>
   1374c:	ldr	r3, [sp, #28]
   13750:	cmp	r3, #0
   13754:	beq	14454 <strspn@plt+0x35c0>
   13758:	ldr	r3, [sp, #28]
   1375c:	mov	r7, #0
   13760:	str	r3, [sp, #44]	; 0x2c
   13764:	mov	r3, #1
   13768:	str	r3, [sp, #52]	; 0x34
   1376c:	ldr	r3, [pc, #3660]	; 145c0 <strspn@plt+0x372c>
   13770:	str	r3, [sp, #64]	; 0x40
   13774:	b	13328 <strspn@plt+0x2494>
   13778:	ldr	r3, [sp, #28]
   1377c:	cmp	r3, #0
   13780:	mov	r3, #1
   13784:	streq	r3, [sp, #44]	; 0x2c
   13788:	bne	1360c <strspn@plt+0x2778>
   1378c:	cmp	fp, #0
   13790:	beq	14484 <strspn@plt+0x35f0>
   13794:	ldr	r3, [sp, #32]
   13798:	mov	r2, #39	; 0x27
   1379c:	mov	r7, #1
   137a0:	strb	r2, [r3]
   137a4:	mov	r3, #0
   137a8:	str	r3, [sp, #28]
   137ac:	mov	r3, #1
   137b0:	str	r3, [sp, #52]	; 0x34
   137b4:	ldr	r3, [pc, #3580]	; 145b8 <strspn@plt+0x3724>
   137b8:	str	r3, [sp, #64]	; 0x40
   137bc:	mov	r3, #2
   137c0:	str	r3, [sp, #152]	; 0x98
   137c4:	b	13328 <strspn@plt+0x2494>
   137c8:	ldr	r3, [sp, #24]
   137cc:	cmn	r3, #1
   137d0:	beq	143e8 <strspn@plt+0x3554>
   137d4:	ldr	r3, [sp, #24]
   137d8:	subs	r3, r3, #1
   137dc:	movne	r3, #1
   137e0:	cmp	r3, #0
   137e4:	bne	137f0 <strspn@plt+0x295c>
   137e8:	cmp	sl, #0
   137ec:	beq	13bdc <strspn@plt+0x2d48>
   137f0:	ldr	r3, [sp, #152]	; 0x98
   137f4:	mov	r5, #0
   137f8:	sub	r2, r3, #2
   137fc:	mov	r8, r5
   13800:	clz	r2, r2
   13804:	lsr	r2, r2, #5
   13808:	ldr	r3, [sp, #60]	; 0x3c
   1380c:	ldr	r1, [sp, #28]
   13810:	orr	r3, r2, r3
   13814:	eor	r3, r3, #1
   13818:	orr	r3, r1, r3
   1381c:	tst	r3, #255	; 0xff
   13820:	bne	13f4c <strspn@plt+0x30b8>
   13824:	cmp	r6, #0
   13828:	bne	13978 <strspn@plt+0x2ae4>
   1382c:	ldr	r3, [sp, #40]	; 0x28
   13830:	eor	r8, r8, #1
   13834:	and	r8, r8, r3
   13838:	add	sl, sl, #1
   1383c:	uxtb	r6, r8
   13840:	cmp	r6, #0
   13844:	beq	13878 <strspn@plt+0x29e4>
   13848:	cmp	fp, r7
   1384c:	movhi	r2, #39	; 0x27
   13850:	ldrhi	r3, [sp, #32]
   13854:	strbhi	r2, [r3, r7]
   13858:	add	r3, r7, #1
   1385c:	cmp	fp, r3
   13860:	movhi	r1, #39	; 0x27
   13864:	ldrhi	r2, [sp, #32]
   13868:	add	r7, r7, #2
   1386c:	strbhi	r1, [r2, r3]
   13870:	mov	r3, #0
   13874:	str	r3, [sp, #40]	; 0x28
   13878:	cmp	r7, fp
   1387c:	ldrcc	r3, [sp, #32]
   13880:	strbcc	r4, [r3, r7]
   13884:	ldr	r3, [sp, #36]	; 0x24
   13888:	cmp	r5, #0
   1388c:	moveq	r3, #0
   13890:	str	r3, [sp, #36]	; 0x24
   13894:	ldr	r3, [sp, #24]
   13898:	add	r7, r7, #1
   1389c:	cmn	r3, #1
   138a0:	bne	13344 <strspn@plt+0x24b0>
   138a4:	ldr	r3, [sp, #56]	; 0x38
   138a8:	ldrb	r5, [r3, sl]
   138ac:	adds	r5, r5, #0
   138b0:	movne	r5, #1
   138b4:	cmp	r5, #0
   138b8:	bne	13358 <strspn@plt+0x24c4>
   138bc:	ldr	r3, [sp, #152]	; 0x98
   138c0:	ldr	r1, [sp, #28]
   138c4:	sub	r3, r3, #2
   138c8:	clz	r3, r3
   138cc:	lsr	r3, r3, #5
   138d0:	and	r9, r1, r3
   138d4:	cmp	r7, #0
   138d8:	movne	r2, #0
   138dc:	andeq	r2, r9, #1
   138e0:	cmp	r2, #0
   138e4:	bne	142c0 <strspn@plt+0x342c>
   138e8:	eor	r2, r1, #1
   138ec:	ands	r3, r3, r2
   138f0:	beq	1477c <strspn@plt+0x38e8>
   138f4:	ldr	r2, [sp, #68]	; 0x44
   138f8:	cmp	r2, #0
   138fc:	beq	14768 <strspn@plt+0x38d4>
   13900:	ldr	r3, [sp, #36]	; 0x24
   13904:	cmp	r3, #0
   13908:	bne	14720 <strspn@plt+0x388c>
   1390c:	ldr	r2, [sp, #72]	; 0x48
   13910:	clz	r3, fp
   13914:	cmp	r2, #0
   13918:	lsr	r3, r3, #5
   1391c:	moveq	r3, #0
   13920:	cmp	r3, #0
   13924:	beq	146c0 <strspn@plt+0x382c>
   13928:	str	r3, [sp, #68]	; 0x44
   1392c:	ldr	fp, [sp, #72]	; 0x48
   13930:	b	132e0 <strspn@plt+0x244c>
   13934:	ldr	r3, [sp, #152]	; 0x98
   13938:	cmp	r3, #2
   1393c:	beq	13f90 <strspn@plt+0x30fc>
   13940:	ldr	r3, [sp, #44]	; 0x2c
   13944:	ldr	r2, [sp, #28]
   13948:	and	r2, r3, r2
   1394c:	ands	r2, r9, r2
   13950:	bne	13f9c <strspn@plt+0x3108>
   13954:	mov	r4, #92	; 0x5c
   13958:	mov	r3, r4
   1395c:	ldr	r1, [sp, #44]	; 0x2c
   13960:	cmp	r1, #0
   13964:	moveq	r5, #0
   13968:	moveq	r8, r1
   1396c:	beq	13808 <strspn@plt+0x2974>
   13970:	mov	r4, r3
   13974:	mov	r5, #0
   13978:	ldr	r3, [sp, #28]
   1397c:	cmp	r3, #0
   13980:	bne	13f84 <strspn@plt+0x30f0>
   13984:	ldr	r3, [sp, #40]	; 0x28
   13988:	eor	r9, r3, #1
   1398c:	and	r9, r9, r2
   13990:	ands	r9, r9, #255	; 0xff
   13994:	beq	139d8 <strspn@plt+0x2b44>
   13998:	cmp	fp, r7
   1399c:	movhi	r2, #39	; 0x27
   139a0:	ldrhi	r3, [sp, #32]
   139a4:	str	r9, [sp, #40]	; 0x28
   139a8:	strbhi	r2, [r3, r7]
   139ac:	add	r3, r7, #1
   139b0:	cmp	fp, r3
   139b4:	movhi	r1, #36	; 0x24
   139b8:	ldrhi	r2, [sp, #32]
   139bc:	strbhi	r1, [r2, r3]
   139c0:	add	r3, r7, #2
   139c4:	cmp	fp, r3
   139c8:	add	r7, r7, #3
   139cc:	ldrhi	r2, [sp, #32]
   139d0:	movhi	r1, #39	; 0x27
   139d4:	strbhi	r1, [r2, r3]
   139d8:	cmp	fp, r7
   139dc:	movhi	r2, #92	; 0x5c
   139e0:	ldrhi	r3, [sp, #32]
   139e4:	add	sl, sl, #1
   139e8:	strbhi	r2, [r3, r7]
   139ec:	add	r7, r7, #1
   139f0:	b	13878 <strspn@plt+0x29e4>
   139f4:	ldr	r3, [sp, #152]	; 0x98
   139f8:	mov	r4, #11
   139fc:	sub	r2, r3, #2
   13a00:	mov	r3, #118	; 0x76
   13a04:	clz	r2, r2
   13a08:	lsr	r2, r2, #5
   13a0c:	b	1395c <strspn@plt+0x2ac8>
   13a10:	mov	r4, #10
   13a14:	mov	r3, #110	; 0x6e
   13a18:	ldr	r2, [sp, #152]	; 0x98
   13a1c:	ldr	r1, [sp, #28]
   13a20:	sub	r2, r2, #2
   13a24:	clz	r2, r2
   13a28:	lsr	r2, r2, #5
   13a2c:	ands	r1, r1, r2
   13a30:	beq	1395c <strspn@plt+0x2ac8>
   13a34:	ldr	sl, [sp, #32]
   13a38:	mov	r8, fp
   13a3c:	mov	r2, r1
   13a40:	mov	r3, #2
   13a44:	str	r3, [sp, #152]	; 0x98
   13a48:	ldr	r9, [sp, #44]	; 0x2c
   13a4c:	ldr	r3, [sp, #152]	; 0x98
   13a50:	and	r9, r9, r2
   13a54:	tst	r9, #255	; 0xff
   13a58:	movne	r3, #4
   13a5c:	str	r3, [sp, #152]	; 0x98
   13a60:	ldr	r3, [sp, #156]	; 0x9c
   13a64:	mov	ip, #0
   13a68:	bic	r3, r3, #2
   13a6c:	str	r3, [sp, #4]
   13a70:	ldr	r3, [sp, #168]	; 0xa8
   13a74:	ldr	r2, [sp, #56]	; 0x38
   13a78:	str	r3, [sp, #16]
   13a7c:	ldr	r3, [sp, #164]	; 0xa4
   13a80:	mov	r1, r8
   13a84:	str	r3, [sp, #12]
   13a88:	ldr	r3, [sp, #152]	; 0x98
   13a8c:	mov	r0, sl
   13a90:	str	r3, [sp]
   13a94:	str	ip, [sp, #8]
   13a98:	ldr	r3, [sp, #24]
   13a9c:	bl	13284 <strspn@plt+0x23f0>
   13aa0:	mov	fp, r0
   13aa4:	mov	r0, fp
   13aa8:	add	sp, sp, #116	; 0x74
   13aac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13ab0:	ldr	r3, [sp, #152]	; 0x98
   13ab4:	mov	r4, #8
   13ab8:	sub	r2, r3, #2
   13abc:	mov	r3, #98	; 0x62
   13ac0:	clz	r2, r2
   13ac4:	lsr	r2, r2, #5
   13ac8:	b	1395c <strspn@plt+0x2ac8>
   13acc:	ldr	r3, [sp, #152]	; 0x98
   13ad0:	mov	r4, #7
   13ad4:	sub	r2, r3, #2
   13ad8:	mov	r3, #97	; 0x61
   13adc:	clz	r2, r2
   13ae0:	lsr	r2, r2, #5
   13ae4:	b	1395c <strspn@plt+0x2ac8>
   13ae8:	ldr	r3, [sp, #44]	; 0x2c
   13aec:	cmp	r3, #0
   13af0:	beq	142d4 <strspn@plt+0x3440>
   13af4:	ldr	r3, [sp, #28]
   13af8:	cmp	r3, #0
   13afc:	bne	145ac <strspn@plt+0x3718>
   13b00:	ldr	r3, [sp, #152]	; 0x98
   13b04:	sub	r2, r3, #2
   13b08:	ldr	r3, [sp, #40]	; 0x28
   13b0c:	clz	r2, r2
   13b10:	eor	r3, r3, #1
   13b14:	lsr	r2, r2, #5
   13b18:	ands	r3, r2, r3
   13b1c:	moveq	r1, r7
   13b20:	beq	13b64 <strspn@plt+0x2cd0>
   13b24:	cmp	fp, r7
   13b28:	movhi	r0, #39	; 0x27
   13b2c:	ldrhi	r1, [sp, #32]
   13b30:	str	r3, [sp, #40]	; 0x28
   13b34:	strbhi	r0, [r1, r7]
   13b38:	add	r1, r7, #1
   13b3c:	cmp	fp, r1
   13b40:	movhi	ip, #36	; 0x24
   13b44:	ldrhi	r0, [sp, #32]
   13b48:	strbhi	ip, [r0, r1]
   13b4c:	add	r1, r7, #2
   13b50:	cmp	fp, r1
   13b54:	movhi	ip, #39	; 0x27
   13b58:	ldrhi	r0, [sp, #32]
   13b5c:	strbhi	ip, [r0, r1]
   13b60:	add	r1, r7, #3
   13b64:	cmp	fp, r1
   13b68:	movhi	r0, #92	; 0x5c
   13b6c:	ldrhi	r3, [sp, #32]
   13b70:	add	r7, r1, #1
   13b74:	strbhi	r0, [r3, r1]
   13b78:	cmp	r8, #0
   13b7c:	beq	144c0 <strspn@plt+0x362c>
   13b80:	ldr	r0, [sp, #24]
   13b84:	add	r3, sl, #1
   13b88:	cmp	r3, r0
   13b8c:	bcs	143fc <strspn@plt+0x3568>
   13b90:	ldr	r0, [sp, #56]	; 0x38
   13b94:	ldrb	r3, [r0, r3]
   13b98:	sub	r3, r3, #48	; 0x30
   13b9c:	cmp	r3, #9
   13ba0:	bhi	143fc <strspn@plt+0x3568>
   13ba4:	cmp	fp, r7
   13ba8:	movhi	r3, #48	; 0x30
   13bac:	ldrhi	r0, [sp, #32]
   13bb0:	ldr	r5, [sp, #28]
   13bb4:	mov	r4, #48	; 0x30
   13bb8:	strbhi	r3, [r0, r7]
   13bbc:	add	r3, r1, #2
   13bc0:	cmp	fp, r3
   13bc4:	movhi	r0, #48	; 0x30
   13bc8:	ldrhi	ip, [sp, #32]
   13bcc:	add	r7, r1, #3
   13bd0:	strbhi	r0, [ip, r3]
   13bd4:	b	13808 <strspn@plt+0x2974>
   13bd8:	mov	r5, #0
   13bdc:	ldr	r3, [sp, #152]	; 0x98
   13be0:	sub	r2, r3, #2
   13be4:	ldr	r3, [sp, #28]
   13be8:	clz	r2, r2
   13bec:	lsr	r2, r2, #5
   13bf0:	ands	r8, r3, r2
   13bf4:	beq	13808 <strspn@plt+0x2974>
   13bf8:	mov	r3, r8
   13bfc:	mov	r2, r3
   13c00:	mov	r3, #2
   13c04:	ldr	sl, [sp, #32]
   13c08:	mov	r8, fp
   13c0c:	str	r3, [sp, #152]	; 0x98
   13c10:	b	13a48 <strspn@plt+0x2bb4>
   13c14:	ldr	r3, [sp, #152]	; 0x98
   13c18:	cmp	r3, #2
   13c1c:	beq	14340 <strspn@plt+0x34ac>
   13c20:	cmp	r3, #5
   13c24:	beq	14300 <strspn@plt+0x346c>
   13c28:	mov	r5, #0
   13c2c:	sub	r2, r3, #2
   13c30:	mov	r8, r5
   13c34:	clz	r2, r2
   13c38:	mov	r4, #63	; 0x3f
   13c3c:	lsr	r2, r2, #5
   13c40:	b	13808 <strspn@plt+0x2974>
   13c44:	ldr	r3, [sp, #152]	; 0x98
   13c48:	cmp	r3, #2
   13c4c:	beq	14360 <strspn@plt+0x34cc>
   13c50:	mov	r2, #0
   13c54:	str	r5, [sp, #68]	; 0x44
   13c58:	mov	r8, r2
   13c5c:	mov	r4, #39	; 0x27
   13c60:	b	13808 <strspn@plt+0x2974>
   13c64:	mov	r4, #13
   13c68:	mov	r3, #114	; 0x72
   13c6c:	b	13a18 <strspn@plt+0x2b84>
   13c70:	ldr	r3, [sp, #152]	; 0x98
   13c74:	mov	r8, #0
   13c78:	sub	r2, r3, #2
   13c7c:	clz	r2, r2
   13c80:	lsr	r2, r2, #5
   13c84:	b	13808 <strspn@plt+0x2974>
   13c88:	ldr	r3, [sp, #152]	; 0x98
   13c8c:	mov	r4, #12
   13c90:	sub	r2, r3, #2
   13c94:	mov	r3, #102	; 0x66
   13c98:	clz	r2, r2
   13c9c:	lsr	r2, r2, #5
   13ca0:	b	1395c <strspn@plt+0x2ac8>
   13ca4:	mov	r5, r6
   13ca8:	b	13bdc <strspn@plt+0x2d48>
   13cac:	ldr	r3, [sp, #152]	; 0x98
   13cb0:	sub	r2, r3, #2
   13cb4:	mov	r3, #116	; 0x74
   13cb8:	clz	r2, r2
   13cbc:	lsr	r2, r2, #5
   13cc0:	b	1395c <strspn@plt+0x2ac8>
   13cc4:	ldr	r8, [sp, #76]	; 0x4c
   13cc8:	cmp	r8, #1
   13ccc:	bne	1417c <strspn@plt+0x32e8>
   13cd0:	bl	10da4 <__ctype_b_loc@plt>
   13cd4:	sxth	r3, r4
   13cd8:	mov	ip, r8
   13cdc:	lsl	r3, r3, #1
   13ce0:	ldr	r2, [r0]
   13ce4:	ldrh	r3, [r2, r3]
   13ce8:	and	r3, r3, #16384	; 0x4000
   13cec:	cmp	r3, #0
   13cf0:	movne	r5, #1
   13cf4:	moveq	r5, #0
   13cf8:	moveq	r3, #1
   13cfc:	movne	r3, #0
   13d00:	ldr	r2, [sp, #44]	; 0x2c
   13d04:	and	r3, r3, r2
   13d08:	ands	r8, r3, #255	; 0xff
   13d0c:	bne	14010 <strspn@plt+0x317c>
   13d10:	ldr	r3, [sp, #152]	; 0x98
   13d14:	sub	r2, r3, #2
   13d18:	clz	r2, r2
   13d1c:	lsr	r2, r2, #5
   13d20:	b	13808 <strspn@plt+0x2974>
   13d24:	ldr	r3, [sp, #56]	; 0x38
   13d28:	add	r3, r3, sl
   13d2c:	str	r3, [sp, #48]	; 0x30
   13d30:	ldr	r3, [sp, #48]	; 0x30
   13d34:	mov	r6, #0
   13d38:	ldrb	r4, [r3]
   13d3c:	cmp	r4, #126	; 0x7e
   13d40:	ldrls	pc, [pc, r4, lsl #2]
   13d44:	b	13cc4 <strspn@plt+0x2e30>
   13d48:	andeq	r3, r1, r8, ror #21
   13d4c:	andeq	r3, r1, r4, asr #25
   13d50:	andeq	r3, r1, r4, asr #25
   13d54:	andeq	r3, r1, r4, asr #25
   13d58:	andeq	r3, r1, r4, asr #25
   13d5c:	andeq	r3, r1, r4, asr #25
   13d60:	andeq	r3, r1, r4, asr #25
   13d64:	andeq	r3, r1, ip, asr #21
   13d68:			; <UNDEFINED> instruction: 0x00013ab0
   13d6c:	andeq	r3, r1, r4, asr #30
   13d70:	andeq	r3, r1, r0, lsl sl
   13d74:	strdeq	r3, [r1], -r4
   13d78:	andeq	r3, r1, r8, lsl #25
   13d7c:	andeq	r3, r1, r4, ror #24
   13d80:	andeq	r3, r1, r4, asr #25
   13d84:	andeq	r3, r1, r4, asr #25
   13d88:	andeq	r3, r1, r4, asr #25
   13d8c:	andeq	r3, r1, r4, asr #25
   13d90:	andeq	r3, r1, r4, asr #25
   13d94:	andeq	r3, r1, r4, asr #25
   13d98:	andeq	r3, r1, r4, asr #25
   13d9c:	andeq	r3, r1, r4, asr #25
   13da0:	andeq	r3, r1, r4, asr #25
   13da4:	andeq	r3, r1, r4, asr #25
   13da8:	andeq	r3, r1, r4, asr #25
   13dac:	andeq	r3, r1, r4, asr #25
   13db0:	andeq	r3, r1, r4, asr #25
   13db4:	andeq	r3, r1, r4, asr #25
   13db8:	andeq	r3, r1, r4, asr #25
   13dbc:	andeq	r3, r1, r4, asr #25
   13dc0:	andeq	r3, r1, r4, asr #25
   13dc4:	andeq	r3, r1, r4, asr #25
   13dc8:	ldrdeq	r3, [r1], -ip
   13dcc:	ldrdeq	r3, [r1], -r8
   13dd0:	ldrdeq	r3, [r1], -r8
   13dd4:	andeq	r3, r1, r8, ror #15
   13dd8:	ldrdeq	r3, [r1], -r8
   13ddc:	andeq	r3, r1, r0, ror ip
   13de0:	ldrdeq	r3, [r1], -r8
   13de4:	andeq	r3, r1, r4, asr #24
   13de8:	ldrdeq	r3, [r1], -r8
   13dec:	ldrdeq	r3, [r1], -r8
   13df0:	ldrdeq	r3, [r1], -r8
   13df4:	andeq	r3, r1, r0, ror ip
   13df8:	andeq	r3, r1, r0, ror ip
   13dfc:	andeq	r3, r1, r0, ror ip
   13e00:	andeq	r3, r1, r0, ror ip
   13e04:	andeq	r3, r1, r0, ror ip
   13e08:	andeq	r3, r1, r0, ror ip
   13e0c:	andeq	r3, r1, r0, ror ip
   13e10:	andeq	r3, r1, r0, ror ip
   13e14:	andeq	r3, r1, r0, ror ip
   13e18:	andeq	r3, r1, r0, ror ip
   13e1c:	andeq	r3, r1, r0, ror ip
   13e20:	andeq	r3, r1, r0, ror ip
   13e24:	andeq	r3, r1, r0, ror ip
   13e28:	andeq	r3, r1, r0, ror ip
   13e2c:	andeq	r3, r1, r0, ror ip
   13e30:	andeq	r3, r1, r0, ror ip
   13e34:	ldrdeq	r3, [r1], -r8
   13e38:	ldrdeq	r3, [r1], -r8
   13e3c:	ldrdeq	r3, [r1], -r8
   13e40:	ldrdeq	r3, [r1], -r8
   13e44:	andeq	r3, r1, r4, lsl ip
   13e48:	andeq	r3, r1, r4, asr #25
   13e4c:	andeq	r3, r1, r0, ror ip
   13e50:	andeq	r3, r1, r0, ror ip
   13e54:	andeq	r3, r1, r0, ror ip
   13e58:	andeq	r3, r1, r0, ror ip
   13e5c:	andeq	r3, r1, r0, ror ip
   13e60:	andeq	r3, r1, r0, ror ip
   13e64:	andeq	r3, r1, r0, ror ip
   13e68:	andeq	r3, r1, r0, ror ip
   13e6c:	andeq	r3, r1, r0, ror ip
   13e70:	andeq	r3, r1, r0, ror ip
   13e74:	andeq	r3, r1, r0, ror ip
   13e78:	andeq	r3, r1, r0, ror ip
   13e7c:	andeq	r3, r1, r0, ror ip
   13e80:	andeq	r3, r1, r0, ror ip
   13e84:	andeq	r3, r1, r0, ror ip
   13e88:	andeq	r3, r1, r0, ror ip
   13e8c:	andeq	r3, r1, r0, ror ip
   13e90:	andeq	r3, r1, r0, ror ip
   13e94:	andeq	r3, r1, r0, ror ip
   13e98:	andeq	r3, r1, r0, ror ip
   13e9c:	andeq	r3, r1, r0, ror ip
   13ea0:	andeq	r3, r1, r0, ror ip
   13ea4:	andeq	r3, r1, r0, ror ip
   13ea8:	andeq	r3, r1, r0, ror ip
   13eac:	andeq	r3, r1, r0, ror ip
   13eb0:	andeq	r3, r1, r0, ror ip
   13eb4:	ldrdeq	r3, [r1], -r8
   13eb8:	andeq	r3, r1, r4, lsr r9
   13ebc:	andeq	r3, r1, r0, ror ip
   13ec0:	ldrdeq	r3, [r1], -r8
   13ec4:	andeq	r3, r1, r0, ror ip
   13ec8:	ldrdeq	r3, [r1], -r8
   13ecc:	andeq	r3, r1, r0, ror ip
   13ed0:	andeq	r3, r1, r0, ror ip
   13ed4:	andeq	r3, r1, r0, ror ip
   13ed8:	andeq	r3, r1, r0, ror ip
   13edc:	andeq	r3, r1, r0, ror ip
   13ee0:	andeq	r3, r1, r0, ror ip
   13ee4:	andeq	r3, r1, r0, ror ip
   13ee8:	andeq	r3, r1, r0, ror ip
   13eec:	andeq	r3, r1, r0, ror ip
   13ef0:	andeq	r3, r1, r0, ror ip
   13ef4:	andeq	r3, r1, r0, ror ip
   13ef8:	andeq	r3, r1, r0, ror ip
   13efc:	andeq	r3, r1, r0, ror ip
   13f00:	andeq	r3, r1, r0, ror ip
   13f04:	andeq	r3, r1, r0, ror ip
   13f08:	andeq	r3, r1, r0, ror ip
   13f0c:	andeq	r3, r1, r0, ror ip
   13f10:	andeq	r3, r1, r0, ror ip
   13f14:	andeq	r3, r1, r0, ror ip
   13f18:	andeq	r3, r1, r0, ror ip
   13f1c:	andeq	r3, r1, r0, ror ip
   13f20:	andeq	r3, r1, r0, ror ip
   13f24:	andeq	r3, r1, r0, ror ip
   13f28:	andeq	r3, r1, r0, ror ip
   13f2c:	andeq	r3, r1, r0, ror ip
   13f30:	andeq	r3, r1, r0, ror ip
   13f34:	andeq	r3, r1, r8, asr #15
   13f38:	ldrdeq	r3, [r1], -r8
   13f3c:	andeq	r3, r1, r8, asr #15
   13f40:	andeq	r3, r1, r8, ror #15
   13f44:	mov	r3, #116	; 0x74
   13f48:	b	13a18 <strspn@plt+0x2b84>
   13f4c:	ldr	r3, [sp, #160]	; 0xa0
   13f50:	cmp	r3, #0
   13f54:	beq	13824 <strspn@plt+0x2990>
   13f58:	lsr	r3, r4, #5
   13f5c:	ldr	r0, [sp, #160]	; 0xa0
   13f60:	uxtb	r3, r3
   13f64:	and	r1, r4, #31
   13f68:	ldr	r0, [r0, r3, lsl #2]
   13f6c:	lsr	r3, r0, r1
   13f70:	tst	r3, #1
   13f74:	beq	13824 <strspn@plt+0x2990>
   13f78:	ldr	r3, [sp, #28]
   13f7c:	cmp	r3, #0
   13f80:	beq	13984 <strspn@plt+0x2af0>
   13f84:	ldr	sl, [sp, #32]
   13f88:	mov	r8, fp
   13f8c:	b	13a48 <strspn@plt+0x2bb4>
   13f90:	ldr	r3, [sp, #28]
   13f94:	cmp	r3, #0
   13f98:	bne	144ec <strspn@plt+0x3658>
   13f9c:	add	sl, sl, #1
   13fa0:	ldr	r6, [sp, #40]	; 0x28
   13fa4:	mov	r5, #0
   13fa8:	mov	r4, #92	; 0x5c
   13fac:	b	13840 <strspn@plt+0x29ac>
   13fb0:	cmp	r9, r8
   13fb4:	bne	14224 <strspn@plt+0x3390>
   13fb8:	ldr	r0, [sp, #100]	; 0x64
   13fbc:	bl	10cfc <iswprint@plt>
   13fc0:	add	r5, r5, r4
   13fc4:	cmp	r0, #0
   13fc8:	add	r0, sp, #104	; 0x68
   13fcc:	moveq	r6, #0
   13fd0:	bl	10ca8 <mbsinit@plt>
   13fd4:	cmp	r0, #0
   13fd8:	beq	141b8 <strspn@plt+0x3324>
   13fdc:	mov	r2, r6
   13fe0:	mov	ip, r5
   13fe4:	eor	r5, r2, #1
   13fe8:	ldr	r4, [sp, #80]	; 0x50
   13fec:	ldr	r6, [sp, #84]	; 0x54
   13ff0:	ldr	r7, [sp, #88]	; 0x58
   13ff4:	uxtb	r5, r5
   13ff8:	cmp	ip, #1
   13ffc:	bls	144fc <strspn@plt+0x3668>
   14000:	ldr	r3, [sp, #44]	; 0x2c
   14004:	and	r8, r3, r5
   14008:	mov	r5, r2
   1400c:	uxtb	r8, r8
   14010:	add	r2, sl, ip
   14014:	ldr	r0, [sp, #48]	; 0x30
   14018:	mov	r1, #0
   1401c:	str	r5, [sp, #48]	; 0x30
   14020:	ldr	r9, [sp, #28]
   14024:	ldr	ip, [sp, #40]	; 0x28
   14028:	ldr	r3, [sp, #32]
   1402c:	ldr	r5, [sp, #152]	; 0x98
   14030:	b	140ec <strspn@plt+0x3258>
   14034:	cmp	r9, #0
   14038:	bne	14410 <strspn@plt+0x357c>
   1403c:	eor	r1, ip, #1
   14040:	cmp	r5, #2
   14044:	movne	r1, #0
   14048:	andeq	r1, r1, #1
   1404c:	cmp	r1, #0
   14050:	beq	14088 <strspn@plt+0x31f4>
   14054:	cmp	fp, r7
   14058:	movhi	ip, #39	; 0x27
   1405c:	strbhi	ip, [r3, r7]
   14060:	add	ip, r7, #1
   14064:	cmp	fp, ip
   14068:	movhi	lr, #36	; 0x24
   1406c:	strbhi	lr, [r3, ip]
   14070:	add	ip, r7, #2
   14074:	cmp	fp, ip
   14078:	movhi	lr, #39	; 0x27
   1407c:	strbhi	lr, [r3, ip]
   14080:	add	r7, r7, #3
   14084:	mov	ip, r1
   14088:	cmp	fp, r7
   1408c:	movhi	r1, #92	; 0x5c
   14090:	strbhi	r1, [r3, r7]
   14094:	add	r1, r7, #1
   14098:	cmp	fp, r1
   1409c:	lsrhi	lr, r4, #6
   140a0:	addhi	lr, lr, #48	; 0x30
   140a4:	strbhi	lr, [r3, r1]
   140a8:	add	lr, r7, #2
   140ac:	cmp	fp, lr
   140b0:	lsrhi	r1, r4, #3
   140b4:	andhi	r1, r1, #7
   140b8:	addhi	r1, r1, #48	; 0x30
   140bc:	add	sl, sl, #1
   140c0:	strbhi	r1, [r3, lr]
   140c4:	and	r4, r4, #7
   140c8:	cmp	r2, sl
   140cc:	add	r4, r4, #48	; 0x30
   140d0:	add	r7, r7, #3
   140d4:	bls	14434 <strspn@plt+0x35a0>
   140d8:	mov	r1, r8
   140dc:	cmp	fp, r7
   140e0:	strbhi	r4, [r3, r7]
   140e4:	ldrb	r4, [r0, #1]!
   140e8:	add	r7, r7, #1
   140ec:	cmp	r8, #0
   140f0:	bne	14034 <strspn@plt+0x31a0>
   140f4:	cmp	r6, #0
   140f8:	bne	14148 <strspn@plt+0x32b4>
   140fc:	eor	r6, r1, #1
   14100:	and	r6, r6, ip
   14104:	add	sl, sl, #1
   14108:	cmp	r2, sl
   1410c:	uxtb	r6, r6
   14110:	bls	14170 <strspn@plt+0x32dc>
   14114:	cmp	r6, #0
   14118:	beq	140dc <strspn@plt+0x3248>
   1411c:	cmp	fp, r7
   14120:	movhi	ip, #39	; 0x27
   14124:	strbhi	ip, [r3, r7]
   14128:	add	ip, r7, #1
   1412c:	cmp	fp, ip
   14130:	movhi	lr, #39	; 0x27
   14134:	strbhi	lr, [r3, ip]
   14138:	add	r7, r7, #2
   1413c:	mov	r6, r8
   14140:	mov	ip, r8
   14144:	b	140dc <strspn@plt+0x3248>
   14148:	cmp	fp, r7
   1414c:	eor	r6, r1, #1
   14150:	movhi	lr, #92	; 0x5c
   14154:	and	r6, r6, ip
   14158:	add	sl, sl, #1
   1415c:	strbhi	lr, [r3, r7]
   14160:	cmp	r2, sl
   14164:	add	r7, r7, #1
   14168:	uxtb	r6, r6
   1416c:	bhi	14114 <strspn@plt+0x3280>
   14170:	str	ip, [sp, #40]	; 0x28
   14174:	ldr	r5, [sp, #48]	; 0x30
   14178:	b	13840 <strspn@plt+0x29ac>
   1417c:	ldr	r3, [sp, #24]
   14180:	cmn	r3, #1
   14184:	mov	r3, #0
   14188:	str	r3, [sp, #104]	; 0x68
   1418c:	str	r3, [sp, #108]	; 0x6c
   14190:	beq	144b0 <strspn@plt+0x361c>
   14194:	mov	r2, r5
   14198:	mov	r3, #0
   1419c:	str	r7, [sp, #88]	; 0x58
   141a0:	ldr	r7, [sp, #152]	; 0x98
   141a4:	str	r5, [sp, #92]	; 0x5c
   141a8:	str	r6, [sp, #84]	; 0x54
   141ac:	mov	r5, r3
   141b0:	mov	r6, r2
   141b4:	str	r4, [sp, #80]	; 0x50
   141b8:	ldr	r3, [sp, #56]	; 0x38
   141bc:	add	r9, sl, r5
   141c0:	add	r8, r3, r9
   141c4:	ldr	r3, [sp, #24]
   141c8:	mov	r1, r8
   141cc:	sub	r2, r3, r9
   141d0:	add	r0, sp, #100	; 0x64
   141d4:	add	r3, sp, #104	; 0x68
   141d8:	bl	15eac <strspn@plt+0x5018>
   141dc:	subs	r4, r0, #0
   141e0:	beq	14588 <strspn@plt+0x36f4>
   141e4:	cmn	r4, #1
   141e8:	beq	14568 <strspn@plt+0x36d4>
   141ec:	cmn	r4, #2
   141f0:	beq	14508 <strspn@plt+0x3674>
   141f4:	ldr	r2, [sp, #28]
   141f8:	cmp	r7, #2
   141fc:	movne	r2, #0
   14200:	andeq	r2, r2, #1
   14204:	cmp	r2, #0
   14208:	beq	13fb8 <strspn@plt+0x3124>
   1420c:	cmp	r4, #1
   14210:	beq	13fb8 <strspn@plt+0x3124>
   14214:	sub	r3, r4, #1
   14218:	add	r9, r3, r9
   1421c:	ldr	r3, [sp, #56]	; 0x38
   14220:	add	r9, r3, r9
   14224:	ldrb	r3, [r8, #1]!
   14228:	sub	r3, r3, #91	; 0x5b
   1422c:	cmp	r3, #33	; 0x21
   14230:	ldrls	pc, [pc, r3, lsl #2]
   14234:	b	13fb0 <strspn@plt+0x311c>
   14238:	andeq	r4, r1, r0, asr #5
   1423c:	andeq	r4, r1, r0, asr #5
   14240:			; <UNDEFINED> instruction: 0x00013fb0
   14244:	andeq	r4, r1, r0, asr #5
   14248:			; <UNDEFINED> instruction: 0x00013fb0
   1424c:	andeq	r4, r1, r0, asr #5
   14250:			; <UNDEFINED> instruction: 0x00013fb0
   14254:			; <UNDEFINED> instruction: 0x00013fb0
   14258:			; <UNDEFINED> instruction: 0x00013fb0
   1425c:			; <UNDEFINED> instruction: 0x00013fb0
   14260:			; <UNDEFINED> instruction: 0x00013fb0
   14264:			; <UNDEFINED> instruction: 0x00013fb0
   14268:			; <UNDEFINED> instruction: 0x00013fb0
   1426c:			; <UNDEFINED> instruction: 0x00013fb0
   14270:			; <UNDEFINED> instruction: 0x00013fb0
   14274:			; <UNDEFINED> instruction: 0x00013fb0
   14278:			; <UNDEFINED> instruction: 0x00013fb0
   1427c:			; <UNDEFINED> instruction: 0x00013fb0
   14280:			; <UNDEFINED> instruction: 0x00013fb0
   14284:			; <UNDEFINED> instruction: 0x00013fb0
   14288:			; <UNDEFINED> instruction: 0x00013fb0
   1428c:			; <UNDEFINED> instruction: 0x00013fb0
   14290:			; <UNDEFINED> instruction: 0x00013fb0
   14294:			; <UNDEFINED> instruction: 0x00013fb0
   14298:			; <UNDEFINED> instruction: 0x00013fb0
   1429c:			; <UNDEFINED> instruction: 0x00013fb0
   142a0:			; <UNDEFINED> instruction: 0x00013fb0
   142a4:			; <UNDEFINED> instruction: 0x00013fb0
   142a8:			; <UNDEFINED> instruction: 0x00013fb0
   142ac:			; <UNDEFINED> instruction: 0x00013fb0
   142b0:			; <UNDEFINED> instruction: 0x00013fb0
   142b4:			; <UNDEFINED> instruction: 0x00013fb0
   142b8:			; <UNDEFINED> instruction: 0x00013fb0
   142bc:	andeq	r4, r1, r0, asr #5
   142c0:	mov	r3, #2
   142c4:	ldr	sl, [sp, #32]
   142c8:	mov	r8, fp
   142cc:	str	r3, [sp, #152]	; 0x98
   142d0:	b	13a48 <strspn@plt+0x2bb4>
   142d4:	ldr	r3, [sp, #156]	; 0x9c
   142d8:	tst	r3, #1
   142dc:	bne	14408 <strspn@plt+0x3574>
   142e0:	ldr	r3, [sp, #152]	; 0x98
   142e4:	ldr	r4, [sp, #44]	; 0x2c
   142e8:	sub	r2, r3, #2
   142ec:	mov	r5, #0
   142f0:	clz	r2, r2
   142f4:	mov	r8, r4
   142f8:	lsr	r2, r2, #5
   142fc:	b	13808 <strspn@plt+0x2974>
   14300:	ldr	r3, [sp, #156]	; 0x9c
   14304:	ands	r9, r3, #4
   14308:	beq	14440 <strspn@plt+0x35ac>
   1430c:	ldr	r2, [sp, #24]
   14310:	add	r3, sl, #2
   14314:	cmp	r3, r2
   14318:	bcs	1432c <strspn@plt+0x3498>
   1431c:	ldr	r2, [sp, #48]	; 0x30
   14320:	ldrb	r4, [r2, #1]
   14324:	cmp	r4, #63	; 0x3f
   14328:	beq	145c8 <strspn@plt+0x3734>
   1432c:	mov	r2, #0
   14330:	mov	r8, r2
   14334:	mov	r5, r2
   14338:	mov	r4, #63	; 0x3f
   1433c:	b	13808 <strspn@plt+0x2974>
   14340:	ldr	r3, [sp, #28]
   14344:	cmp	r3, #0
   14348:	bne	1466c <strspn@plt+0x37d8>
   1434c:	mov	r2, r5
   14350:	mov	r8, r3
   14354:	mov	r5, #0
   14358:	mov	r4, #63	; 0x3f
   1435c:	b	13808 <strspn@plt+0x2974>
   14360:	ldr	r3, [sp, #28]
   14364:	cmp	r3, #0
   14368:	bne	1466c <strspn@plt+0x37d8>
   1436c:	ldr	r2, [sp, #72]	; 0x48
   14370:	adds	r3, fp, #0
   14374:	movne	r3, #1
   14378:	cmp	r2, #0
   1437c:	movne	r3, #0
   14380:	cmp	r3, #0
   14384:	strne	fp, [sp, #72]	; 0x48
   14388:	movne	fp, #0
   1438c:	bne	143c8 <strspn@plt+0x3534>
   14390:	cmp	fp, r7
   14394:	movhi	r2, #39	; 0x27
   14398:	ldrhi	r3, [sp, #32]
   1439c:	strbhi	r2, [r3, r7]
   143a0:	add	r3, r7, #1
   143a4:	cmp	fp, r3
   143a8:	movhi	r1, #92	; 0x5c
   143ac:	ldrhi	r2, [sp, #32]
   143b0:	strbhi	r1, [r2, r3]
   143b4:	add	r3, r7, #2
   143b8:	cmp	fp, r3
   143bc:	movhi	r1, #39	; 0x27
   143c0:	ldrhi	r2, [sp, #32]
   143c4:	strbhi	r1, [r2, r3]
   143c8:	ldr	r3, [sp, #28]
   143cc:	add	r7, r7, #3
   143d0:	mov	r2, r5
   143d4:	mov	r8, r3
   143d8:	str	r5, [sp, #68]	; 0x44
   143dc:	str	r3, [sp, #40]	; 0x28
   143e0:	mov	r4, #39	; 0x27
   143e4:	b	13808 <strspn@plt+0x2974>
   143e8:	ldr	r3, [sp, #56]	; 0x38
   143ec:	ldrb	r3, [r3, #1]
   143f0:	adds	r3, r3, #0
   143f4:	movne	r3, #1
   143f8:	b	137e0 <strspn@plt+0x294c>
   143fc:	ldr	r5, [sp, #28]
   14400:	mov	r4, #48	; 0x30
   14404:	b	13808 <strspn@plt+0x2974>
   14408:	add	sl, sl, #1
   1440c:	b	13338 <strspn@plt+0x24a4>
   14410:	mov	sl, r3
   14414:	ldr	r3, [sp, #28]
   14418:	mov	r8, fp
   1441c:	str	r3, [sp, #44]	; 0x2c
   14420:	ldr	r3, [sp, #152]	; 0x98
   14424:	sub	r2, r3, #2
   14428:	clz	r2, r2
   1442c:	lsr	r2, r2, #5
   14430:	b	13a48 <strspn@plt+0x2bb4>
   14434:	str	ip, [sp, #40]	; 0x28
   14438:	ldr	r5, [sp, #48]	; 0x30
   1443c:	b	13878 <strspn@plt+0x29e4>
   14440:	mov	r2, r9
   14444:	mov	r8, r9
   14448:	mov	r5, #0
   1444c:	mov	r4, #63	; 0x3f
   14450:	b	13808 <strspn@plt+0x2974>
   14454:	cmp	fp, #0
   14458:	beq	144d0 <strspn@plt+0x363c>
   1445c:	ldr	r1, [sp, #32]
   14460:	mov	r3, #34	; 0x22
   14464:	mov	r2, #1
   14468:	strb	r3, [r1]
   1446c:	ldr	r3, [pc, #332]	; 145c0 <strspn@plt+0x372c>
   14470:	str	r2, [sp, #52]	; 0x34
   14474:	mov	r7, r2
   14478:	str	r2, [sp, #44]	; 0x2c
   1447c:	str	r3, [sp, #64]	; 0x40
   14480:	b	13328 <strspn@plt+0x2494>
   14484:	ldr	r3, [pc, #300]	; 145b8 <strspn@plt+0x3724>
   14488:	str	r3, [sp, #64]	; 0x40
   1448c:	mov	r3, #0
   14490:	str	r3, [sp, #28]
   14494:	mov	r3, #1
   14498:	str	r3, [sp, #52]	; 0x34
   1449c:	mov	r7, r3
   144a0:	mov	r3, #2
   144a4:	str	r3, [sp, #152]	; 0x98
   144a8:	b	13328 <strspn@plt+0x2494>
   144ac:	bl	10e88 <abort@plt>
   144b0:	ldr	r0, [sp, #56]	; 0x38
   144b4:	bl	10dc8 <strlen@plt>
   144b8:	str	r0, [sp, #24]
   144bc:	b	14194 <strspn@plt+0x3300>
   144c0:	mov	r5, r8
   144c4:	mov	r4, #48	; 0x30
   144c8:	ldr	r8, [sp, #44]	; 0x2c
   144cc:	b	13808 <strspn@plt+0x2974>
   144d0:	mov	r3, #1
   144d4:	str	r3, [sp, #52]	; 0x34
   144d8:	mov	r7, r3
   144dc:	str	r3, [sp, #44]	; 0x2c
   144e0:	ldr	r3, [pc, #216]	; 145c0 <strspn@plt+0x372c>
   144e4:	str	r3, [sp, #64]	; 0x40
   144e8:	b	13328 <strspn@plt+0x2494>
   144ec:	ldr	sl, [sp, #32]
   144f0:	mov	r8, fp
   144f4:	mov	r2, r3
   144f8:	b	13a48 <strspn@plt+0x2bb4>
   144fc:	mov	r3, r5
   14500:	mov	r5, r2
   14504:	b	13d00 <strspn@plt+0x2e6c>
   14508:	ldr	r1, [sp, #24]
   1450c:	mov	r2, r5
   14510:	cmp	r1, r9
   14514:	mov	ip, r5
   14518:	ldr	r4, [sp, #80]	; 0x50
   1451c:	ldr	r5, [sp, #92]	; 0x5c
   14520:	ldr	r6, [sp, #84]	; 0x54
   14524:	ldr	r7, [sp, #88]	; 0x58
   14528:	bls	1455c <strspn@plt+0x36c8>
   1452c:	ldrb	r3, [r8]
   14530:	cmp	r3, #0
   14534:	bne	14548 <strspn@plt+0x36b4>
   14538:	b	14560 <strspn@plt+0x36cc>
   1453c:	ldrb	r3, [r8, #1]!
   14540:	cmp	r3, #0
   14544:	beq	14660 <strspn@plt+0x37cc>
   14548:	add	r2, r2, #1
   1454c:	add	r3, sl, r2
   14550:	cmp	r1, r3
   14554:	bhi	1453c <strspn@plt+0x36a8>
   14558:	mov	ip, r2
   1455c:	mov	r3, #0
   14560:	mov	r2, r3
   14564:	b	13ff8 <strspn@plt+0x3164>
   14568:	mov	r3, #0
   1456c:	mov	ip, r5
   14570:	ldr	r4, [sp, #80]	; 0x50
   14574:	ldr	r5, [sp, #92]	; 0x5c
   14578:	ldr	r6, [sp, #84]	; 0x54
   1457c:	ldr	r7, [sp, #88]	; 0x58
   14580:	mov	r2, r3
   14584:	b	13ff8 <strspn@plt+0x3164>
   14588:	mov	r3, r6
   1458c:	mov	ip, r5
   14590:	eor	r5, r3, #1
   14594:	mov	r2, r6
   14598:	ldr	r4, [sp, #80]	; 0x50
   1459c:	ldr	r6, [sp, #84]	; 0x54
   145a0:	ldr	r7, [sp, #88]	; 0x58
   145a4:	uxtb	r5, r5
   145a8:	b	13ff8 <strspn@plt+0x3164>
   145ac:	ldr	sl, [sp, #32]
   145b0:	mov	r8, fp
   145b4:	b	1441c <strspn@plt+0x3588>
   145b8:	andeq	r6, r1, r8, asr #31
   145bc:	andeq	r6, r1, ip, asr #31
   145c0:	andeq	r6, r1, r4, asr #31
   145c4:	stmdacc	r0, {r0, r6, r7, r8, ip, lr}
   145c8:	ldr	r2, [sp, #56]	; 0x38
   145cc:	ldrb	r1, [r2, r3]
   145d0:	sub	r2, r1, #33	; 0x21
   145d4:	uxtb	r2, r2
   145d8:	cmp	r2, #29
   145dc:	bhi	1467c <strspn@plt+0x37e8>
   145e0:	ldr	r0, [pc, #-36]	; 145c4 <strspn@plt+0x3730>
   145e4:	mov	ip, #1
   145e8:	ands	r2, r0, ip, lsl r2
   145ec:	beq	1468c <strspn@plt+0x37f8>
   145f0:	ldr	r2, [sp, #28]
   145f4:	cmp	r2, #0
   145f8:	bne	1478c <strspn@plt+0x38f8>
   145fc:	cmp	fp, r7
   14600:	ldr	r8, [sp, #28]
   14604:	ldrhi	r2, [sp, #32]
   14608:	mov	sl, r3
   1460c:	mov	r5, r8
   14610:	strbhi	r4, [r2, r7]
   14614:	add	r2, r7, #1
   14618:	cmp	fp, r2
   1461c:	movhi	r0, #34	; 0x22
   14620:	ldrhi	ip, [sp, #32]
   14624:	mov	r4, r1
   14628:	strbhi	r0, [ip, r2]
   1462c:	add	r2, r7, #2
   14630:	cmp	fp, r2
   14634:	movhi	r0, #34	; 0x22
   14638:	ldrhi	ip, [sp, #32]
   1463c:	strbhi	r0, [ip, r2]
   14640:	add	r2, r7, #3
   14644:	cmp	fp, r2
   14648:	movhi	r0, #63	; 0x3f
   1464c:	ldrhi	ip, [sp, #32]
   14650:	add	r7, r7, #4
   14654:	strbhi	r0, [ip, r2]
   14658:	mov	r2, r8
   1465c:	b	13808 <strspn@plt+0x2974>
   14660:	mov	ip, r2
   14664:	mov	r2, r3
   14668:	b	13ff8 <strspn@plt+0x3164>
   1466c:	ldr	sl, [sp, #32]
   14670:	mov	r8, fp
   14674:	ldr	r2, [sp, #28]
   14678:	b	13a48 <strspn@plt+0x2bb4>
   1467c:	mov	r2, #0
   14680:	mov	r8, r2
   14684:	mov	r5, r2
   14688:	b	13808 <strspn@plt+0x2974>
   1468c:	mov	r8, r2
   14690:	mov	r5, #0
   14694:	b	13808 <strspn@plt+0x2974>
   14698:	ldr	r1, [sp, #152]	; 0x98
   1469c:	bl	13164 <strspn@plt+0x22d0>
   146a0:	str	r0, [sp, #168]	; 0xa8
   146a4:	b	136c4 <strspn@plt+0x2830>
   146a8:	ldr	r1, [sp, #152]	; 0x98
   146ac:	bl	13164 <strspn@plt+0x22d0>
   146b0:	str	r0, [sp, #164]	; 0xa4
   146b4:	b	136a4 <strspn@plt+0x2810>
   146b8:	ldr	r7, [sp, #28]
   146bc:	b	13704 <strspn@plt+0x2870>
   146c0:	ldr	sl, [sp, #32]
   146c4:	ldr	r2, [sp, #68]	; 0x44
   146c8:	mov	r8, fp
   146cc:	mov	fp, r7
   146d0:	ldr	r3, [sp, #64]	; 0x40
   146d4:	cmp	r3, #0
   146d8:	moveq	r2, #0
   146dc:	andne	r2, r2, #1
   146e0:	cmp	r2, #0
   146e4:	beq	14710 <strspn@plt+0x387c>
   146e8:	mov	r2, r3
   146ec:	ldrb	r3, [r3]
   146f0:	cmp	r3, #0
   146f4:	beq	14710 <strspn@plt+0x387c>
   146f8:	cmp	r8, fp
   146fc:	strbhi	r3, [sl, fp]
   14700:	ldrb	r3, [r2, #1]!
   14704:	add	fp, fp, #1
   14708:	cmp	r3, #0
   1470c:	bne	146f8 <strspn@plt+0x3864>
   14710:	cmp	r8, fp
   14714:	movhi	r3, #0
   14718:	strbhi	r3, [sl, fp]
   1471c:	b	13aa4 <strspn@plt+0x2c10>
   14720:	ldr	r3, [sp, #168]	; 0xa8
   14724:	ldr	sl, [sp, #32]
   14728:	str	r3, [sp, #16]
   1472c:	ldr	r3, [sp, #164]	; 0xa4
   14730:	mov	ip, #5
   14734:	str	r3, [sp, #12]
   14738:	ldr	r3, [sp, #160]	; 0xa0
   1473c:	ldr	r2, [sp, #56]	; 0x38
   14740:	str	r3, [sp, #8]
   14744:	ldr	r3, [sp, #156]	; 0x9c
   14748:	ldr	r1, [sp, #72]	; 0x48
   1474c:	str	r3, [sp, #4]
   14750:	mov	r0, sl
   14754:	ldr	r3, [sp, #24]
   14758:	str	ip, [sp]
   1475c:	bl	13284 <strspn@plt+0x23f0>
   14760:	mov	fp, r0
   14764:	b	13aa4 <strspn@plt+0x2c10>
   14768:	mov	r8, fp
   1476c:	ldr	sl, [sp, #32]
   14770:	mov	fp, r7
   14774:	mov	r2, r3
   14778:	b	146d0 <strspn@plt+0x383c>
   1477c:	mov	r8, fp
   14780:	ldr	sl, [sp, #32]
   14784:	mov	fp, r7
   14788:	b	146d0 <strspn@plt+0x383c>
   1478c:	ldr	sl, [sp, #32]
   14790:	mov	r8, fp
   14794:	b	13a60 <strspn@plt+0x2bcc>
   14798:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1479c:	sub	sp, sp, #52	; 0x34
   147a0:	mov	r4, r0
   147a4:	mov	r5, r3
   147a8:	mov	sl, r1
   147ac:	mov	fp, r2
   147b0:	bl	10dd4 <__errno_location@plt>
   147b4:	ldr	r7, [pc, #412]	; 14958 <strspn@plt+0x3ac4>
   147b8:	cmn	r4, #-2147483647	; 0x80000001
   147bc:	ldr	r6, [r7]
   147c0:	mov	r8, r0
   147c4:	movne	r0, #0
   147c8:	moveq	r0, #1
   147cc:	ldr	r3, [r8]
   147d0:	orrs	r0, r0, r4, lsr #31
   147d4:	str	r3, [sp, #24]
   147d8:	bne	14954 <strspn@plt+0x3ac0>
   147dc:	ldr	r2, [r7, #4]
   147e0:	cmp	r4, r2
   147e4:	blt	14844 <strspn@plt+0x39b0>
   147e8:	add	r9, r7, #8
   147ec:	cmp	r6, r9
   147f0:	str	r2, [sp, #44]	; 0x2c
   147f4:	beq	14924 <strspn@plt+0x3a90>
   147f8:	mov	r3, #8
   147fc:	sub	r2, r4, r2
   14800:	mov	r0, r6
   14804:	str	r3, [sp]
   14808:	add	r2, r2, #1
   1480c:	mvn	r3, #-2147483648	; 0x80000000
   14810:	add	r1, sp, #44	; 0x2c
   14814:	bl	15754 <strspn@plt+0x48c0>
   14818:	mov	r6, r0
   1481c:	str	r0, [r7]
   14820:	ldr	r0, [r7, #4]
   14824:	ldr	r2, [sp, #44]	; 0x2c
   14828:	mov	r1, #0
   1482c:	sub	r2, r2, r0
   14830:	add	r0, r6, r0, lsl #3
   14834:	lsl	r2, r2, #3
   14838:	bl	10dec <memset@plt>
   1483c:	ldr	r3, [sp, #44]	; 0x2c
   14840:	str	r3, [r7, #4]
   14844:	add	r3, r6, r4, lsl #3
   14848:	ldr	r1, [r5, #4]
   1484c:	ldr	r7, [r3, #4]
   14850:	ldr	r9, [r6, r4, lsl #3]
   14854:	ldr	r2, [r5, #40]	; 0x28
   14858:	ldr	ip, [r5, #44]	; 0x2c
   1485c:	add	r0, r5, #8
   14860:	str	r3, [sp, #28]
   14864:	ldr	r3, [r5]
   14868:	orr	r1, r1, #1
   1486c:	mov	lr, r0
   14870:	str	r1, [sp, #32]
   14874:	str	r0, [sp, #36]	; 0x24
   14878:	str	r1, [sp, #4]
   1487c:	str	r2, [sp, #12]
   14880:	str	r3, [sp]
   14884:	mov	r0, r7
   14888:	mov	r1, r9
   1488c:	str	ip, [sp, #16]
   14890:	str	lr, [sp, #8]
   14894:	mov	r3, fp
   14898:	mov	r2, sl
   1489c:	bl	13284 <strspn@plt+0x23f0>
   148a0:	cmp	r9, r0
   148a4:	bhi	14910 <strspn@plt+0x3a7c>
   148a8:	ldr	r3, [pc, #172]	; 1495c <strspn@plt+0x3ac8>
   148ac:	add	r9, r0, #1
   148b0:	cmp	r7, r3
   148b4:	str	r9, [r6, r4, lsl #3]
   148b8:	beq	148c4 <strspn@plt+0x3a30>
   148bc:	mov	r0, r7
   148c0:	bl	11fcc <strspn@plt+0x1138>
   148c4:	mov	r0, r9
   148c8:	bl	155f0 <strspn@plt+0x475c>
   148cc:	ldr	lr, [sp, #28]
   148d0:	ldr	ip, [r5, #44]	; 0x2c
   148d4:	ldr	r4, [r5, #40]	; 0x28
   148d8:	mov	r3, fp
   148dc:	mov	r2, sl
   148e0:	mov	r1, r9
   148e4:	str	r0, [lr, #4]
   148e8:	ldr	lr, [r5]
   148ec:	ldr	r5, [sp, #36]	; 0x24
   148f0:	str	ip, [sp, #16]
   148f4:	str	r5, [sp, #8]
   148f8:	ldr	r5, [sp, #32]
   148fc:	str	r4, [sp, #12]
   14900:	str	r5, [sp, #4]
   14904:	str	lr, [sp]
   14908:	mov	r7, r0
   1490c:	bl	13284 <strspn@plt+0x23f0>
   14910:	ldr	r3, [sp, #24]
   14914:	mov	r0, r7
   14918:	str	r3, [r8]
   1491c:	add	sp, sp, #52	; 0x34
   14920:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14924:	mov	r3, #8
   14928:	sub	r2, r4, r2
   1492c:	str	r3, [sp]
   14930:	add	r1, sp, #44	; 0x2c
   14934:	add	r2, r2, #1
   14938:	mvn	r3, #-2147483648	; 0x80000000
   1493c:	bl	15754 <strspn@plt+0x48c0>
   14940:	mov	r6, r0
   14944:	ldm	r9, {r0, r1}
   14948:	str	r6, [r7]
   1494c:	stm	r6, {r0, r1}
   14950:	b	14820 <strspn@plt+0x398c>
   14954:	bl	10e88 <abort@plt>
   14958:	strdeq	r8, [r2], -r0
   1495c:	andeq	r8, r2, r8, asr r1
   14960:	push	{r4, r5, r6, lr}
   14964:	mov	r5, r0
   14968:	bl	10dd4 <__errno_location@plt>
   1496c:	cmp	r5, #0
   14970:	mov	r1, #48	; 0x30
   14974:	mov	r4, r0
   14978:	ldr	r0, [pc, #16]	; 14990 <strspn@plt+0x3afc>
   1497c:	ldr	r6, [r4]
   14980:	movne	r0, r5
   14984:	bl	15a50 <strspn@plt+0x4bbc>
   14988:	str	r6, [r4]
   1498c:	pop	{r4, r5, r6, pc}
   14990:	andeq	r8, r2, r8, asr r2
   14994:	ldr	r3, [pc, #12]	; 149a8 <strspn@plt+0x3b14>
   14998:	cmp	r0, #0
   1499c:	moveq	r0, r3
   149a0:	ldr	r0, [r0]
   149a4:	bx	lr
   149a8:	andeq	r8, r2, r8, asr r2
   149ac:	ldr	r3, [pc, #12]	; 149c0 <strspn@plt+0x3b2c>
   149b0:	cmp	r0, #0
   149b4:	moveq	r0, r3
   149b8:	str	r1, [r0]
   149bc:	bx	lr
   149c0:	andeq	r8, r2, r8, asr r2
   149c4:	ldr	r3, [pc, #52]	; 14a00 <strspn@plt+0x3b6c>
   149c8:	cmp	r0, #0
   149cc:	moveq	r0, r3
   149d0:	add	r3, r0, #8
   149d4:	push	{lr}		; (str lr, [sp, #-4]!)
   149d8:	lsr	lr, r1, #5
   149dc:	and	r1, r1, #31
   149e0:	ldr	ip, [r3, lr, lsl #2]
   149e4:	lsr	r0, ip, r1
   149e8:	eor	r2, r2, r0
   149ec:	and	r2, r2, #1
   149f0:	and	r0, r0, #1
   149f4:	eor	r1, ip, r2, lsl r1
   149f8:	str	r1, [r3, lr, lsl #2]
   149fc:	pop	{pc}		; (ldr pc, [sp], #4)
   14a00:	andeq	r8, r2, r8, asr r2
   14a04:	ldr	r3, [pc, #16]	; 14a1c <strspn@plt+0x3b88>
   14a08:	cmp	r0, #0
   14a0c:	movne	r3, r0
   14a10:	ldr	r0, [r3, #4]
   14a14:	str	r1, [r3, #4]
   14a18:	bx	lr
   14a1c:	andeq	r8, r2, r8, asr r2
   14a20:	ldr	r3, [pc, #44]	; 14a54 <strspn@plt+0x3bc0>
   14a24:	cmp	r0, #0
   14a28:	moveq	r0, r3
   14a2c:	mov	ip, #10
   14a30:	cmp	r2, #0
   14a34:	cmpne	r1, #0
   14a38:	str	ip, [r0]
   14a3c:	beq	14a4c <strspn@plt+0x3bb8>
   14a40:	str	r1, [r0, #40]	; 0x28
   14a44:	str	r2, [r0, #44]	; 0x2c
   14a48:	bx	lr
   14a4c:	push	{r4, lr}
   14a50:	bl	10e88 <abort@plt>
   14a54:	andeq	r8, r2, r8, asr r2
   14a58:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   14a5c:	sub	sp, sp, #24
   14a60:	ldr	ip, [pc, #108]	; 14ad4 <strspn@plt+0x3c40>
   14a64:	ldr	r4, [sp, #56]	; 0x38
   14a68:	mov	r9, r2
   14a6c:	cmp	r4, #0
   14a70:	moveq	r4, ip
   14a74:	mov	sl, r3
   14a78:	mov	r7, r0
   14a7c:	mov	r8, r1
   14a80:	bl	10dd4 <__errno_location@plt>
   14a84:	ldr	r3, [r4, #44]	; 0x2c
   14a88:	mov	r1, r8
   14a8c:	ldr	r6, [r0]
   14a90:	str	r3, [sp, #16]
   14a94:	ldr	r2, [r4, #40]	; 0x28
   14a98:	add	r3, r4, #8
   14a9c:	str	r3, [sp, #8]
   14aa0:	str	r2, [sp, #12]
   14aa4:	ldr	r2, [r4, #4]
   14aa8:	mov	r5, r0
   14aac:	str	r2, [sp, #4]
   14ab0:	ldr	ip, [r4]
   14ab4:	mov	r3, sl
   14ab8:	mov	r2, r9
   14abc:	mov	r0, r7
   14ac0:	str	ip, [sp]
   14ac4:	bl	13284 <strspn@plt+0x23f0>
   14ac8:	str	r6, [r5]
   14acc:	add	sp, sp, #24
   14ad0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14ad4:	andeq	r8, r2, r8, asr r2
   14ad8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14adc:	cmp	r3, #0
   14ae0:	sub	sp, sp, #44	; 0x2c
   14ae4:	ldr	r4, [pc, #192]	; 14bac <strspn@plt+0x3d18>
   14ae8:	mov	r6, r2
   14aec:	movne	r4, r3
   14af0:	mov	r9, r1
   14af4:	mov	r8, r0
   14af8:	bl	10dd4 <__errno_location@plt>
   14afc:	ldr	r3, [r4, #44]	; 0x2c
   14b00:	ldr	r5, [r4, #4]
   14b04:	add	sl, r4, #8
   14b08:	cmp	r6, #0
   14b0c:	orreq	r5, r5, #1
   14b10:	mov	r1, #0
   14b14:	ldr	r2, [r0]
   14b18:	str	r3, [sp, #16]
   14b1c:	ldr	r3, [r4, #40]	; 0x28
   14b20:	stmib	sp, {r5, sl}
   14b24:	str	r3, [sp, #12]
   14b28:	ldr	r3, [r4]
   14b2c:	mov	r7, r0
   14b30:	str	r2, [sp, #28]
   14b34:	str	r3, [sp]
   14b38:	mov	r2, r8
   14b3c:	mov	r3, r9
   14b40:	mov	r0, r1
   14b44:	bl	13284 <strspn@plt+0x23f0>
   14b48:	add	r1, r0, #1
   14b4c:	mov	fp, r0
   14b50:	mov	r0, r1
   14b54:	str	r1, [sp, #36]	; 0x24
   14b58:	bl	155f0 <strspn@plt+0x475c>
   14b5c:	ldr	r3, [r4, #44]	; 0x2c
   14b60:	mov	r2, r8
   14b64:	str	r3, [sp, #16]
   14b68:	ldr	r3, [r4, #40]	; 0x28
   14b6c:	str	r5, [sp, #4]
   14b70:	str	r3, [sp, #12]
   14b74:	str	sl, [sp, #8]
   14b78:	ldr	ip, [r4]
   14b7c:	ldr	r1, [sp, #36]	; 0x24
   14b80:	mov	r3, r9
   14b84:	str	ip, [sp]
   14b88:	str	r0, [sp, #32]
   14b8c:	bl	13284 <strspn@plt+0x23f0>
   14b90:	ldr	r2, [sp, #28]
   14b94:	cmp	r6, #0
   14b98:	str	r2, [r7]
   14b9c:	ldr	r0, [sp, #32]
   14ba0:	strne	fp, [r6]
   14ba4:	add	sp, sp, #44	; 0x2c
   14ba8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14bac:	andeq	r8, r2, r8, asr r2
   14bb0:	mov	r3, r2
   14bb4:	mov	r2, #0
   14bb8:	b	14ad8 <strspn@plt+0x3c44>
   14bbc:	push	{r4, r5, r6, r7, r8, lr}
   14bc0:	ldr	r6, [pc, #116]	; 14c3c <strspn@plt+0x3da8>
   14bc4:	ldr	r3, [r6, #4]
   14bc8:	ldr	r7, [r6]
   14bcc:	cmp	r3, #1
   14bd0:	movgt	r5, r7
   14bd4:	movgt	r4, #1
   14bd8:	ble	14bf8 <strspn@plt+0x3d64>
   14bdc:	ldr	r0, [r5, #12]
   14be0:	bl	11fcc <strspn@plt+0x1138>
   14be4:	ldr	r3, [r6, #4]
   14be8:	add	r4, r4, #1
   14bec:	cmp	r3, r4
   14bf0:	add	r5, r5, #8
   14bf4:	bgt	14bdc <strspn@plt+0x3d48>
   14bf8:	ldr	r0, [r7, #4]
   14bfc:	ldr	r4, [pc, #60]	; 14c40 <strspn@plt+0x3dac>
   14c00:	cmp	r0, r4
   14c04:	beq	14c18 <strspn@plt+0x3d84>
   14c08:	bl	11fcc <strspn@plt+0x1138>
   14c0c:	mov	r3, #256	; 0x100
   14c10:	str	r4, [r6, #12]
   14c14:	str	r3, [r6, #8]
   14c18:	ldr	r4, [pc, #36]	; 14c44 <strspn@plt+0x3db0>
   14c1c:	cmp	r7, r4
   14c20:	beq	14c30 <strspn@plt+0x3d9c>
   14c24:	mov	r0, r7
   14c28:	bl	11fcc <strspn@plt+0x1138>
   14c2c:	str	r4, [r6]
   14c30:	mov	r3, #1
   14c34:	str	r3, [r6, #4]
   14c38:	pop	{r4, r5, r6, r7, r8, pc}
   14c3c:	strdeq	r8, [r2], -r0
   14c40:	andeq	r8, r2, r8, asr r1
   14c44:	strdeq	r8, [r2], -r8	; <UNPREDICTABLE>
   14c48:	ldr	r3, [pc, #4]	; 14c54 <strspn@plt+0x3dc0>
   14c4c:	mvn	r2, #0
   14c50:	b	14798 <strspn@plt+0x3904>
   14c54:	andeq	r8, r2, r8, asr r2
   14c58:	ldr	r3, [pc]	; 14c60 <strspn@plt+0x3dcc>
   14c5c:	b	14798 <strspn@plt+0x3904>
   14c60:	andeq	r8, r2, r8, asr r2
   14c64:	mov	r1, r0
   14c68:	ldr	r3, [pc, #8]	; 14c78 <strspn@plt+0x3de4>
   14c6c:	mvn	r2, #0
   14c70:	mov	r0, #0
   14c74:	b	14798 <strspn@plt+0x3904>
   14c78:	andeq	r8, r2, r8, asr r2
   14c7c:	mov	r2, r1
   14c80:	ldr	r3, [pc, #8]	; 14c90 <strspn@plt+0x3dfc>
   14c84:	mov	r1, r0
   14c88:	mov	r0, #0
   14c8c:	b	14798 <strspn@plt+0x3904>
   14c90:	andeq	r8, r2, r8, asr r2
   14c94:	push	{r4, r5, lr}
   14c98:	sub	sp, sp, #52	; 0x34
   14c9c:	mov	r5, r2
   14ca0:	mov	r4, r0
   14ca4:	mov	r0, sp
   14ca8:	bl	13134 <strspn@plt+0x22a0>
   14cac:	mov	r3, sp
   14cb0:	mov	r1, r5
   14cb4:	mov	r0, r4
   14cb8:	mvn	r2, #0
   14cbc:	bl	14798 <strspn@plt+0x3904>
   14cc0:	add	sp, sp, #52	; 0x34
   14cc4:	pop	{r4, r5, pc}
   14cc8:	push	{r4, r5, r6, lr}
   14ccc:	sub	sp, sp, #48	; 0x30
   14cd0:	mov	r5, r2
   14cd4:	mov	r6, r3
   14cd8:	mov	r4, r0
   14cdc:	mov	r0, sp
   14ce0:	bl	13134 <strspn@plt+0x22a0>
   14ce4:	mov	r3, sp
   14ce8:	mov	r2, r6
   14cec:	mov	r1, r5
   14cf0:	mov	r0, r4
   14cf4:	bl	14798 <strspn@plt+0x3904>
   14cf8:	add	sp, sp, #48	; 0x30
   14cfc:	pop	{r4, r5, r6, pc}
   14d00:	mov	r2, r1
   14d04:	mov	r1, r0
   14d08:	mov	r0, #0
   14d0c:	b	14c94 <strspn@plt+0x3e00>
   14d10:	mov	r3, r2
   14d14:	mov	r2, r1
   14d18:	mov	r1, r0
   14d1c:	mov	r0, #0
   14d20:	b	14cc8 <strspn@plt+0x3e34>
   14d24:	push	{r4, r5, r6, r7, r8, lr}
   14d28:	mov	r7, r0
   14d2c:	ldr	lr, [pc, #100]	; 14d98 <strspn@plt+0x3f04>
   14d30:	mov	r8, r1
   14d34:	mov	r4, r2
   14d38:	ldm	lr!, {r0, r1, r2, r3}
   14d3c:	sub	sp, sp, #48	; 0x30
   14d40:	mov	ip, sp
   14d44:	lsr	r5, r4, #5
   14d48:	stmia	ip!, {r0, r1, r2, r3}
   14d4c:	add	r6, sp, #8
   14d50:	ldm	lr!, {r0, r1, r2, r3}
   14d54:	and	r4, r4, #31
   14d58:	stmia	ip!, {r0, r1, r2, r3}
   14d5c:	ldm	lr, {r0, r1, r2, r3}
   14d60:	stm	ip, {r0, r1, r2, r3}
   14d64:	mov	r2, r8
   14d68:	ldr	lr, [r6, r5, lsl #2]
   14d6c:	mov	r1, r7
   14d70:	mov	r3, sp
   14d74:	lsr	ip, lr, r4
   14d78:	eor	ip, ip, #1
   14d7c:	and	ip, ip, #1
   14d80:	mov	r0, #0
   14d84:	eor	r4, lr, ip, lsl r4
   14d88:	str	r4, [r6, r5, lsl #2]
   14d8c:	bl	14798 <strspn@plt+0x3904>
   14d90:	add	sp, sp, #48	; 0x30
   14d94:	pop	{r4, r5, r6, r7, r8, pc}
   14d98:	andeq	r8, r2, r8, asr r2
   14d9c:	mov	r2, r1
   14da0:	mvn	r1, #0
   14da4:	b	14d24 <strspn@plt+0x3e90>
   14da8:	mov	r2, #58	; 0x3a
   14dac:	mvn	r1, #0
   14db0:	b	14d24 <strspn@plt+0x3e90>
   14db4:	mov	r2, #58	; 0x3a
   14db8:	b	14d24 <strspn@plt+0x3e90>
   14dbc:	push	{r4, r5, r6, r7, lr}
   14dc0:	sub	sp, sp, #100	; 0x64
   14dc4:	mov	r6, r0
   14dc8:	mov	r0, sp
   14dcc:	mov	r7, r2
   14dd0:	bl	13134 <strspn@plt+0x22a0>
   14dd4:	mov	ip, sp
   14dd8:	add	lr, sp, #48	; 0x30
   14ddc:	ldm	ip!, {r0, r1, r2, r3}
   14de0:	stmia	lr!, {r0, r1, r2, r3}
   14de4:	ldm	ip!, {r0, r1, r2, r3}
   14de8:	ldr	r5, [sp, #60]	; 0x3c
   14dec:	stmia	lr!, {r0, r1, r2, r3}
   14df0:	mvn	r4, r5
   14df4:	ldm	ip, {r0, r1, r2, r3}
   14df8:	and	ip, r4, #67108864	; 0x4000000
   14dfc:	eor	ip, ip, r5
   14e00:	str	ip, [sp, #60]	; 0x3c
   14e04:	stm	lr, {r0, r1, r2, r3}
   14e08:	mov	r1, r7
   14e0c:	mov	r0, r6
   14e10:	add	r3, sp, #48	; 0x30
   14e14:	mvn	r2, #0
   14e18:	bl	14798 <strspn@plt+0x3904>
   14e1c:	add	sp, sp, #100	; 0x64
   14e20:	pop	{r4, r5, r6, r7, pc}
   14e24:	push	{r4, r5, r6, r7, r8, lr}
   14e28:	mov	r5, r1
   14e2c:	ldr	lr, [pc, #100]	; 14e98 <strspn@plt+0x4004>
   14e30:	mov	r4, r2
   14e34:	mov	r7, r0
   14e38:	mov	r8, r3
   14e3c:	ldm	lr!, {r0, r1, r2, r3}
   14e40:	sub	sp, sp, #48	; 0x30
   14e44:	mov	ip, sp
   14e48:	mov	r6, #10
   14e4c:	stmia	ip!, {r0, r1, r2, r3}
   14e50:	cmp	r4, #0
   14e54:	cmpne	r5, #0
   14e58:	ldm	lr!, {r0, r1, r2, r3}
   14e5c:	str	r6, [sp]
   14e60:	stmia	ip!, {r0, r1, r2, r3}
   14e64:	ldm	lr, {r0, r1, r2, r3}
   14e68:	stm	ip, {r0, r1, r2, r3}
   14e6c:	beq	14e94 <strspn@plt+0x4000>
   14e70:	mov	r3, sp
   14e74:	mov	r1, r8
   14e78:	mov	r0, r7
   14e7c:	ldr	r2, [sp, #72]	; 0x48
   14e80:	str	r5, [sp, #40]	; 0x28
   14e84:	str	r4, [sp, #44]	; 0x2c
   14e88:	bl	14798 <strspn@plt+0x3904>
   14e8c:	add	sp, sp, #48	; 0x30
   14e90:	pop	{r4, r5, r6, r7, r8, pc}
   14e94:	bl	10e88 <abort@plt>
   14e98:	andeq	r8, r2, r8, asr r2
   14e9c:	push	{lr}		; (str lr, [sp, #-4]!)
   14ea0:	sub	sp, sp, #12
   14ea4:	mvn	ip, #0
   14ea8:	str	ip, [sp]
   14eac:	bl	14e24 <strspn@plt+0x3f90>
   14eb0:	add	sp, sp, #12
   14eb4:	pop	{pc}		; (ldr pc, [sp], #4)
   14eb8:	push	{lr}		; (str lr, [sp, #-4]!)
   14ebc:	sub	sp, sp, #12
   14ec0:	mvn	ip, #0
   14ec4:	mov	r3, r2
   14ec8:	str	ip, [sp]
   14ecc:	mov	r2, r1
   14ed0:	mov	r1, r0
   14ed4:	mov	r0, #0
   14ed8:	bl	14e24 <strspn@plt+0x3f90>
   14edc:	add	sp, sp, #12
   14ee0:	pop	{pc}		; (ldr pc, [sp], #4)
   14ee4:	push	{lr}		; (str lr, [sp, #-4]!)
   14ee8:	sub	sp, sp, #12
   14eec:	str	r3, [sp]
   14ef0:	mov	r3, r2
   14ef4:	mov	r2, r1
   14ef8:	mov	r1, r0
   14efc:	mov	r0, #0
   14f00:	bl	14e24 <strspn@plt+0x3f90>
   14f04:	add	sp, sp, #12
   14f08:	pop	{pc}		; (ldr pc, [sp], #4)
   14f0c:	ldr	r3, [pc]	; 14f14 <strspn@plt+0x4080>
   14f10:	b	14798 <strspn@plt+0x3904>
   14f14:	andeq	r8, r2, r0, lsl #2
   14f18:	mov	r2, r1
   14f1c:	ldr	r3, [pc, #8]	; 14f2c <strspn@plt+0x4098>
   14f20:	mov	r1, r0
   14f24:	mov	r0, #0
   14f28:	b	14798 <strspn@plt+0x3904>
   14f2c:	andeq	r8, r2, r0, lsl #2
   14f30:	ldr	r3, [pc, #4]	; 14f3c <strspn@plt+0x40a8>
   14f34:	mvn	r2, #0
   14f38:	b	14798 <strspn@plt+0x3904>
   14f3c:	andeq	r8, r2, r0, lsl #2
   14f40:	mov	r1, r0
   14f44:	ldr	r3, [pc, #8]	; 14f54 <strspn@plt+0x40c0>
   14f48:	mvn	r2, #0
   14f4c:	mov	r0, #0
   14f50:	b	14798 <strspn@plt+0x3904>
   14f54:	andeq	r8, r2, r0, lsl #2
   14f58:	push	{r4, r5, r6, lr}
   14f5c:	ldr	r4, [r0], #8
   14f60:	cmp	r4, r0
   14f64:	beq	14f84 <strspn@plt+0x40f0>
   14f68:	mov	r0, r4
   14f6c:	bl	15bc4 <strspn@plt+0x4d30>
   14f70:	cmp	r0, #0
   14f74:	movne	r3, r0
   14f78:	moveq	r3, r4
   14f7c:	mov	r0, r3
   14f80:	pop	{r4, r5, r6, pc}
   14f84:	mov	r0, r1
   14f88:	mov	r5, r1
   14f8c:	bl	15b98 <strspn@plt+0x4d04>
   14f90:	subs	r3, r0, #0
   14f94:	beq	14f7c <strspn@plt+0x40e8>
   14f98:	mov	r2, r5
   14f9c:	mov	r1, r4
   14fa0:	pop	{r4, r5, r6, lr}
   14fa4:	b	10c9c <memcpy@plt>
   14fa8:	push	{r4, r5, r6, lr}
   14fac:	mov	r5, r0
   14fb0:	ldr	r3, [r0, #4]
   14fb4:	mov	r4, r0
   14fb8:	ldr	r0, [r5], #8
   14fbc:	lsl	r6, r3, #1
   14fc0:	cmp	r0, r5
   14fc4:	beq	14fd0 <strspn@plt+0x413c>
   14fc8:	bl	11fcc <strspn@plt+0x1138>
   14fcc:	ldr	r3, [r4, #4]
   14fd0:	cmp	r6, r3
   14fd4:	bcc	14ff4 <strspn@plt+0x4160>
   14fd8:	mov	r0, r6
   14fdc:	bl	15b98 <strspn@plt+0x4d04>
   14fe0:	subs	r3, r0, #0
   14fe4:	beq	15000 <strspn@plt+0x416c>
   14fe8:	mov	r0, #1
   14fec:	stm	r4, {r3, r6}
   14ff0:	pop	{r4, r5, r6, pc}
   14ff4:	bl	10dd4 <__errno_location@plt>
   14ff8:	mov	r3, #12
   14ffc:	str	r3, [r0]
   15000:	mov	r3, #1024	; 0x400
   15004:	str	r5, [r4]
   15008:	str	r3, [r4, #4]
   1500c:	mov	r0, #0
   15010:	pop	{r4, r5, r6, pc}
   15014:	push	{r4, r5, r6, r7, r8, lr}
   15018:	mov	r5, r0
   1501c:	ldr	r3, [r0, #4]
   15020:	ldr	r8, [r5], #8
   15024:	mov	r4, r0
   15028:	cmp	r8, r5
   1502c:	lsl	r7, r3, #1
   15030:	beq	15088 <strspn@plt+0x41f4>
   15034:	cmp	r3, r7
   15038:	bhi	15060 <strspn@plt+0x41cc>
   1503c:	mov	r0, r8
   15040:	mov	r1, r7
   15044:	bl	15bc4 <strspn@plt+0x4d30>
   15048:	subs	r6, r0, #0
   1504c:	ldreq	r8, [r4]
   15050:	beq	1506c <strspn@plt+0x41d8>
   15054:	stm	r4, {r6, r7}
   15058:	mov	r0, #1
   1505c:	pop	{r4, r5, r6, r7, r8, pc}
   15060:	bl	10dd4 <__errno_location@plt>
   15064:	mov	r3, #12
   15068:	str	r3, [r0]
   1506c:	mov	r0, r8
   15070:	bl	11fcc <strspn@plt+0x1138>
   15074:	mov	r3, #1024	; 0x400
   15078:	str	r5, [r4]
   1507c:	str	r3, [r4, #4]
   15080:	mov	r0, #0
   15084:	pop	{r4, r5, r6, r7, r8, pc}
   15088:	mov	r0, r7
   1508c:	bl	15b98 <strspn@plt+0x4d04>
   15090:	subs	r6, r0, #0
   15094:	beq	15080 <strspn@plt+0x41ec>
   15098:	mov	r1, r8
   1509c:	ldr	r2, [r4, #4]
   150a0:	bl	10c9c <memcpy@plt>
   150a4:	b	15054 <strspn@plt+0x41c0>
   150a8:	push	{r4, r5, r6, lr}
   150ac:	sub	sp, sp, #32
   150b0:	cmp	r1, #0
   150b4:	mov	r4, r0
   150b8:	ldr	r5, [sp, #48]	; 0x30
   150bc:	ldr	r6, [sp, #52]	; 0x34
   150c0:	beq	153d8 <strspn@plt+0x4544>
   150c4:	stm	sp, {r2, r3}
   150c8:	mov	r3, r1
   150cc:	ldr	r2, [pc, #808]	; 153fc <strspn@plt+0x4568>
   150d0:	mov	r1, #1
   150d4:	bl	10e10 <__fprintf_chk@plt>
   150d8:	mov	r2, #5
   150dc:	ldr	r1, [pc, #796]	; 15400 <strspn@plt+0x456c>
   150e0:	mov	r0, #0
   150e4:	bl	10ccc <dcgettext@plt>
   150e8:	ldr	r3, [pc, #788]	; 15404 <strspn@plt+0x4570>
   150ec:	ldr	r2, [pc, #788]	; 15408 <strspn@plt+0x4574>
   150f0:	str	r3, [sp]
   150f4:	mov	r1, #1
   150f8:	mov	r3, r0
   150fc:	mov	r0, r4
   15100:	bl	10e10 <__fprintf_chk@plt>
   15104:	mov	r1, r4
   15108:	mov	r0, #10
   1510c:	bl	10cc0 <fputc_unlocked@plt>
   15110:	mov	r2, #5
   15114:	ldr	r1, [pc, #752]	; 1540c <strspn@plt+0x4578>
   15118:	mov	r0, #0
   1511c:	bl	10ccc <dcgettext@plt>
   15120:	mov	r1, #1
   15124:	ldr	r3, [pc, #740]	; 15410 <strspn@plt+0x457c>
   15128:	mov	r2, r0
   1512c:	mov	r0, r4
   15130:	bl	10e10 <__fprintf_chk@plt>
   15134:	mov	r1, r4
   15138:	mov	r0, #10
   1513c:	bl	10cc0 <fputc_unlocked@plt>
   15140:	cmp	r6, #9
   15144:	ldrls	pc, [pc, r6, lsl #2]
   15148:	b	153f0 <strspn@plt+0x455c>
   1514c:	ldrdeq	r5, [r1], -r0
   15150:	ldrdeq	r5, [r1], -r8
   15154:	andeq	r5, r1, r4, lsl #4
   15158:	andeq	r5, r1, r8, lsr r2
   1515c:	andeq	r5, r1, r4, ror r2
   15160:			; <UNDEFINED> instruction: 0x000152b0
   15164:	andeq	r5, r1, ip, ror #5
   15168:	andeq	r5, r1, r0, lsr r3
   1516c:	andeq	r5, r1, r0, lsl #7
   15170:	andeq	r5, r1, r4, ror r1
   15174:	ldr	r1, [pc, #664]	; 15414 <strspn@plt+0x4580>
   15178:	mov	r2, #5
   1517c:	mov	r0, #0
   15180:	bl	10ccc <dcgettext@plt>
   15184:	ldr	ip, [r5, #32]
   15188:	ldr	r1, [r5, #28]
   1518c:	ldr	r2, [r5, #24]
   15190:	ldr	r3, [r5]
   15194:	ldr	r6, [r5, #20]
   15198:	str	ip, [sp, #28]
   1519c:	ldr	lr, [r5, #16]
   151a0:	str	r1, [sp, #24]
   151a4:	ldr	ip, [r5, #12]
   151a8:	str	r2, [sp, #20]
   151ac:	ldr	r1, [r5, #8]
   151b0:	ldr	r2, [r5, #4]
   151b4:	str	r6, [sp, #16]
   151b8:	stmib	sp, {r1, ip, lr}
   151bc:	mov	r1, #1
   151c0:	str	r2, [sp]
   151c4:	mov	r2, r0
   151c8:	mov	r0, r4
   151cc:	bl	10e10 <__fprintf_chk@plt>
   151d0:	add	sp, sp, #32
   151d4:	pop	{r4, r5, r6, pc}
   151d8:	mov	r2, #5
   151dc:	ldr	r1, [pc, #564]	; 15418 <strspn@plt+0x4584>
   151e0:	mov	r0, #0
   151e4:	bl	10ccc <dcgettext@plt>
   151e8:	ldr	r3, [r5]
   151ec:	mov	r1, #1
   151f0:	mov	r2, r0
   151f4:	mov	r0, r4
   151f8:	add	sp, sp, #32
   151fc:	pop	{r4, r5, r6, lr}
   15200:	b	10e10 <__fprintf_chk@plt>
   15204:	mov	r2, #5
   15208:	ldr	r1, [pc, #524]	; 1541c <strspn@plt+0x4588>
   1520c:	mov	r0, #0
   15210:	bl	10ccc <dcgettext@plt>
   15214:	ldr	r2, [r5, #4]
   15218:	ldr	r3, [r5]
   1521c:	mov	r1, #1
   15220:	str	r2, [sp, #48]	; 0x30
   15224:	mov	r2, r0
   15228:	mov	r0, r4
   1522c:	add	sp, sp, #32
   15230:	pop	{r4, r5, r6, lr}
   15234:	b	10e10 <__fprintf_chk@plt>
   15238:	mov	r2, #5
   1523c:	ldr	r1, [pc, #476]	; 15420 <strspn@plt+0x458c>
   15240:	mov	r0, #0
   15244:	bl	10ccc <dcgettext@plt>
   15248:	ldr	r1, [r5, #8]
   1524c:	ldr	r2, [r5, #4]
   15250:	ldr	r3, [r5]
   15254:	str	r1, [sp, #52]	; 0x34
   15258:	str	r2, [sp, #48]	; 0x30
   1525c:	mov	r1, #1
   15260:	mov	r2, r0
   15264:	mov	r0, r4
   15268:	add	sp, sp, #32
   1526c:	pop	{r4, r5, r6, lr}
   15270:	b	10e10 <__fprintf_chk@plt>
   15274:	mov	r2, #5
   15278:	ldr	r1, [pc, #420]	; 15424 <strspn@plt+0x4590>
   1527c:	mov	r0, #0
   15280:	bl	10ccc <dcgettext@plt>
   15284:	ldr	r1, [r5, #8]
   15288:	ldr	ip, [r5, #12]
   1528c:	ldr	r2, [r5, #4]
   15290:	ldr	r3, [r5]
   15294:	stmib	sp, {r1, ip}
   15298:	str	r2, [sp]
   1529c:	mov	r1, #1
   152a0:	mov	r2, r0
   152a4:	mov	r0, r4
   152a8:	bl	10e10 <__fprintf_chk@plt>
   152ac:	b	151d0 <strspn@plt+0x433c>
   152b0:	mov	r2, #5
   152b4:	ldr	r1, [pc, #364]	; 15428 <strspn@plt+0x4594>
   152b8:	mov	r0, #0
   152bc:	bl	10ccc <dcgettext@plt>
   152c0:	add	r1, r5, #8
   152c4:	ldr	r2, [r5, #4]
   152c8:	ldm	r1, {r1, ip, lr}
   152cc:	ldr	r3, [r5]
   152d0:	str	r2, [sp]
   152d4:	stmib	sp, {r1, ip, lr}
   152d8:	mov	r1, #1
   152dc:	mov	r2, r0
   152e0:	mov	r0, r4
   152e4:	bl	10e10 <__fprintf_chk@plt>
   152e8:	b	151d0 <strspn@plt+0x433c>
   152ec:	mov	r2, #5
   152f0:	ldr	r1, [pc, #308]	; 1542c <strspn@plt+0x4598>
   152f4:	mov	r0, #0
   152f8:	bl	10ccc <dcgettext@plt>
   152fc:	add	r1, r5, #8
   15300:	ldr	r2, [r5, #4]
   15304:	ldm	r1, {r1, ip, lr}
   15308:	ldr	r6, [r5, #20]
   1530c:	ldr	r3, [r5]
   15310:	stmib	sp, {r1, ip, lr}
   15314:	mov	r1, #1
   15318:	str	r2, [sp]
   1531c:	str	r6, [sp, #16]
   15320:	mov	r2, r0
   15324:	mov	r0, r4
   15328:	bl	10e10 <__fprintf_chk@plt>
   1532c:	b	151d0 <strspn@plt+0x433c>
   15330:	mov	r2, #5
   15334:	ldr	r1, [pc, #244]	; 15430 <strspn@plt+0x459c>
   15338:	mov	r0, #0
   1533c:	bl	10ccc <dcgettext@plt>
   15340:	ldr	r2, [r5, #24]
   15344:	ldr	r3, [r5]
   15348:	ldr	r6, [r5, #20]
   1534c:	ldr	lr, [r5, #16]
   15350:	ldr	ip, [r5, #12]
   15354:	str	r2, [sp, #20]
   15358:	ldr	r1, [r5, #8]
   1535c:	ldr	r2, [r5, #4]
   15360:	str	r6, [sp, #16]
   15364:	stmib	sp, {r1, ip, lr}
   15368:	mov	r1, #1
   1536c:	str	r2, [sp]
   15370:	mov	r2, r0
   15374:	mov	r0, r4
   15378:	bl	10e10 <__fprintf_chk@plt>
   1537c:	b	151d0 <strspn@plt+0x433c>
   15380:	mov	r2, #5
   15384:	ldr	r1, [pc, #168]	; 15434 <strspn@plt+0x45a0>
   15388:	mov	r0, #0
   1538c:	bl	10ccc <dcgettext@plt>
   15390:	ldr	r1, [r5, #28]
   15394:	ldr	r2, [r5, #24]
   15398:	ldr	r3, [r5]
   1539c:	ldr	r6, [r5, #20]
   153a0:	ldr	lr, [r5, #16]
   153a4:	str	r1, [sp, #24]
   153a8:	ldr	ip, [r5, #12]
   153ac:	str	r2, [sp, #20]
   153b0:	ldr	r1, [r5, #8]
   153b4:	ldr	r2, [r5, #4]
   153b8:	str	r6, [sp, #16]
   153bc:	stmib	sp, {r1, ip, lr}
   153c0:	mov	r1, #1
   153c4:	str	r2, [sp]
   153c8:	mov	r2, r0
   153cc:	mov	r0, r4
   153d0:	bl	10e10 <__fprintf_chk@plt>
   153d4:	b	151d0 <strspn@plt+0x433c>
   153d8:	str	r3, [sp]
   153dc:	mov	r1, #1
   153e0:	mov	r3, r2
   153e4:	ldr	r2, [pc, #76]	; 15438 <strspn@plt+0x45a4>
   153e8:	bl	10e10 <__fprintf_chk@plt>
   153ec:	b	150d8 <strspn@plt+0x4244>
   153f0:	mov	r2, #5
   153f4:	ldr	r1, [pc, #64]	; 1543c <strspn@plt+0x45a8>
   153f8:	b	1517c <strspn@plt+0x42e8>
   153fc:	andeq	r7, r1, r8, lsr r0
   15400:	andeq	r7, r1, ip, asr #32
   15404:	andeq	r0, r0, r6, ror #15
   15408:	andeq	r7, r1, r4, lsr #6
   1540c:	andeq	r7, r1, r0, asr r0
   15410:	strdeq	r7, [r1], -ip
   15414:	andeq	r7, r1, ip, lsr #4
   15418:	andeq	r7, r1, r0, lsr #2
   1541c:	andeq	r7, r1, r0, lsr r1
   15420:	andeq	r7, r1, r8, asr #2
   15424:	andeq	r7, r1, r4, ror #2
   15428:	andeq	r7, r1, r4, lsl #3
   1542c:	andeq	r7, r1, r8, lsr #3
   15430:	ldrdeq	r7, [r1], -r0
   15434:	strdeq	r7, [r1], -ip
   15438:	andeq	r7, r1, r4, asr #32
   1543c:	andeq	r7, r1, r0, ror #4
   15440:	push	{r4, r5, lr}
   15444:	sub	sp, sp, #12
   15448:	ldr	r5, [sp, #24]
   1544c:	ldr	ip, [r5]
   15450:	cmp	ip, #0
   15454:	beq	15470 <strspn@plt+0x45dc>
   15458:	mov	lr, r5
   1545c:	mov	ip, #0
   15460:	ldr	r4, [lr, #4]!
   15464:	add	ip, ip, #1
   15468:	cmp	r4, #0
   1546c:	bne	15460 <strspn@plt+0x45cc>
   15470:	stm	sp, {r5, ip}
   15474:	bl	150a8 <strspn@plt+0x4214>
   15478:	add	sp, sp, #12
   1547c:	pop	{r4, r5, pc}
   15480:	push	{r4, r5, lr}
   15484:	sub	sp, sp, #52	; 0x34
   15488:	add	r5, sp, #4
   1548c:	ldr	r4, [sp, #64]	; 0x40
   15490:	mov	ip, #0
   15494:	sub	r4, r4, #4
   15498:	ldr	lr, [r4, #4]!
   1549c:	cmp	lr, #0
   154a0:	str	lr, [r5, #4]!
   154a4:	beq	154b4 <strspn@plt+0x4620>
   154a8:	add	ip, ip, #1
   154ac:	cmp	ip, #10
   154b0:	bne	15498 <strspn@plt+0x4604>
   154b4:	add	lr, sp, #8
   154b8:	str	ip, [sp, #4]
   154bc:	str	lr, [sp]
   154c0:	bl	150a8 <strspn@plt+0x4214>
   154c4:	add	sp, sp, #52	; 0x34
   154c8:	pop	{r4, r5, pc}
   154cc:	push	{r3}		; (str r3, [sp, #-4]!)
   154d0:	push	{r4, lr}
   154d4:	sub	sp, sp, #60	; 0x3c
   154d8:	add	lr, sp, #56	; 0x38
   154dc:	add	r3, sp, #72	; 0x48
   154e0:	str	r3, [lr, #-44]!	; 0xffffffd4
   154e4:	add	r4, sp, #68	; 0x44
   154e8:	mov	r3, #0
   154ec:	ldr	ip, [r4, #4]!
   154f0:	cmp	ip, #0
   154f4:	str	ip, [lr, #4]!
   154f8:	beq	15508 <strspn@plt+0x4674>
   154fc:	add	r3, r3, #1
   15500:	cmp	r3, #10
   15504:	bne	154ec <strspn@plt+0x4658>
   15508:	add	ip, sp, #16
   1550c:	str	r3, [sp, #4]
   15510:	str	ip, [sp]
   15514:	ldr	r3, [sp, #68]	; 0x44
   15518:	bl	150a8 <strspn@plt+0x4214>
   1551c:	add	sp, sp, #60	; 0x3c
   15520:	pop	{r4, lr}
   15524:	add	sp, sp, #4
   15528:	bx	lr
   1552c:	ldr	r3, [pc, #116]	; 155a8 <strspn@plt+0x4714>
   15530:	push	{r4, lr}
   15534:	mov	r0, #10
   15538:	ldr	r1, [r3]
   1553c:	bl	10cc0 <fputc_unlocked@plt>
   15540:	mov	r2, #5
   15544:	ldr	r1, [pc, #96]	; 155ac <strspn@plt+0x4718>
   15548:	mov	r0, #0
   1554c:	bl	10ccc <dcgettext@plt>
   15550:	ldr	r2, [pc, #88]	; 155b0 <strspn@plt+0x471c>
   15554:	mov	r1, r0
   15558:	mov	r0, #1
   1555c:	bl	10df8 <__printf_chk@plt>
   15560:	mov	r2, #5
   15564:	ldr	r1, [pc, #72]	; 155b4 <strspn@plt+0x4720>
   15568:	mov	r0, #0
   1556c:	bl	10ccc <dcgettext@plt>
   15570:	ldr	r3, [pc, #64]	; 155b8 <strspn@plt+0x4724>
   15574:	ldr	r2, [pc, #64]	; 155bc <strspn@plt+0x4728>
   15578:	mov	r1, r0
   1557c:	mov	r0, #1
   15580:	bl	10df8 <__printf_chk@plt>
   15584:	mov	r2, #5
   15588:	ldr	r1, [pc, #48]	; 155c0 <strspn@plt+0x472c>
   1558c:	mov	r0, #0
   15590:	bl	10ccc <dcgettext@plt>
   15594:	ldr	r2, [pc, #40]	; 155c4 <strspn@plt+0x4730>
   15598:	pop	{r4, lr}
   1559c:	mov	r1, r0
   155a0:	mov	r0, #1
   155a4:	b	10df8 <__printf_chk@plt>
   155a8:	andeq	r8, r2, r4, asr #2
   155ac:	muleq	r1, ip, r2
   155b0:			; <UNDEFINED> instruction: 0x000172b0
   155b4:	andeq	r7, r1, r8, asr #5
   155b8:	andeq	r6, r1, r0, asr #24
   155bc:	andeq	r6, r1, r8, ror #24
   155c0:	ldrdeq	r7, [r1], -ip
   155c4:	andeq	r7, r1, r4, lsl #6
   155c8:	push	{r4, lr}
   155cc:	bl	15b98 <strspn@plt+0x4d04>
   155d0:	cmp	r0, #0
   155d4:	popne	{r4, pc}
   155d8:	bl	15b10 <strspn@plt+0x4c7c>
   155dc:	push	{r4, lr}
   155e0:	bl	15b98 <strspn@plt+0x4d04>
   155e4:	cmp	r0, #0
   155e8:	popne	{r4, pc}
   155ec:	bl	15b10 <strspn@plt+0x4c7c>
   155f0:	push	{r4, lr}
   155f4:	bl	15b98 <strspn@plt+0x4d04>
   155f8:	cmp	r0, #0
   155fc:	popne	{r4, pc}
   15600:	bl	15b10 <strspn@plt+0x4c7c>
   15604:	push	{r4, r5, r6, lr}
   15608:	mov	r5, r0
   1560c:	mov	r4, r1
   15610:	bl	15bc4 <strspn@plt+0x4d30>
   15614:	cmp	r0, #0
   15618:	popne	{r4, r5, r6, pc}
   1561c:	adds	r4, r4, #0
   15620:	movne	r4, #1
   15624:	cmp	r5, #0
   15628:	orreq	r4, r4, #1
   1562c:	cmp	r4, #0
   15630:	popeq	{r4, r5, r6, pc}
   15634:	bl	15b10 <strspn@plt+0x4c7c>
   15638:	push	{r4, lr}
   1563c:	cmp	r1, #0
   15640:	orreq	r1, r1, #1
   15644:	bl	15bc4 <strspn@plt+0x4d30>
   15648:	cmp	r0, #0
   1564c:	popne	{r4, pc}
   15650:	bl	15b10 <strspn@plt+0x4c7c>
   15654:	push	{r4, r5, r6, lr}
   15658:	mov	r6, r0
   1565c:	mov	r5, r1
   15660:	mov	r4, r2
   15664:	bl	15f00 <strspn@plt+0x506c>
   15668:	cmp	r0, #0
   1566c:	popne	{r4, r5, r6, pc}
   15670:	cmp	r6, #0
   15674:	beq	15684 <strspn@plt+0x47f0>
   15678:	cmp	r5, #0
   1567c:	cmpne	r4, #0
   15680:	popeq	{r4, r5, r6, pc}
   15684:	bl	15b10 <strspn@plt+0x4c7c>
   15688:	b	15654 <strspn@plt+0x47c0>
   1568c:	cmp	r2, #0
   15690:	cmpne	r1, #0
   15694:	moveq	r2, #1
   15698:	moveq	r1, r2
   1569c:	push	{r4, lr}
   156a0:	bl	15f00 <strspn@plt+0x506c>
   156a4:	cmp	r0, #0
   156a8:	popne	{r4, pc}
   156ac:	bl	15b10 <strspn@plt+0x4c7c>
   156b0:	mov	r2, r1
   156b4:	mov	r1, r0
   156b8:	mov	r0, #0
   156bc:	b	15654 <strspn@plt+0x47c0>
   156c0:	mov	r2, r1
   156c4:	mov	r1, r0
   156c8:	mov	r0, #0
   156cc:	b	1568c <strspn@plt+0x47f8>
   156d0:	push	{r4, r5, r6, lr}
   156d4:	subs	r6, r0, #0
   156d8:	sub	sp, sp, #8
   156dc:	mov	r5, r1
   156e0:	ldr	r4, [r1]
   156e4:	beq	15720 <strspn@plt+0x488c>
   156e8:	lsr	r1, r4, #1
   156ec:	add	r3, r1, #1
   156f0:	mvn	r3, r3
   156f4:	cmp	r4, r3
   156f8:	bhi	1571c <strspn@plt+0x4888>
   156fc:	add	r4, r4, #1
   15700:	add	r4, r4, r1
   15704:	mov	r0, r6
   15708:	mov	r1, r4
   1570c:	bl	15654 <strspn@plt+0x47c0>
   15710:	str	r4, [r5]
   15714:	add	sp, sp, #8
   15718:	pop	{r4, r5, r6, pc}
   1571c:	bl	15b10 <strspn@plt+0x4c7c>
   15720:	cmp	r4, #0
   15724:	bne	15704 <strspn@plt+0x4870>
   15728:	mov	r1, r2
   1572c:	mov	r0, #64	; 0x40
   15730:	str	r2, [sp, #4]
   15734:	bl	16040 <strspn@plt+0x51ac>
   15738:	ldr	r2, [sp, #4]
   1573c:	cmp	r0, #0
   15740:	movne	r4, r0
   15744:	addeq	r4, r0, #1
   15748:	b	15704 <strspn@plt+0x4870>
   1574c:	mov	r2, #1
   15750:	b	156d0 <strspn@plt+0x483c>
   15754:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15758:	sub	sp, sp, #12
   1575c:	ldr	r6, [r1]
   15760:	mov	sl, r1
   15764:	mov	r9, r0
   15768:	asrs	r4, r6, #1
   1576c:	mov	r5, r2
   15770:	mov	fp, r3
   15774:	ldr	r7, [sp, #48]	; 0x30
   15778:	bmi	158e4 <strspn@plt+0x4a50>
   1577c:	mvn	r3, #-2147483648	; 0x80000000
   15780:	sub	r3, r3, r4
   15784:	cmp	r6, r3
   15788:	movle	r3, #0
   1578c:	movgt	r3, #1
   15790:	mvn	r8, fp
   15794:	cmp	r3, #0
   15798:	addeq	r4, r4, r6
   1579c:	mvnne	r4, #-2147483648	; 0x80000000
   157a0:	lsr	r8, r8, #31
   157a4:	cmp	fp, r4
   157a8:	movge	r3, #0
   157ac:	andlt	r3, r8, #1
   157b0:	cmp	r3, #0
   157b4:	beq	1589c <strspn@plt+0x4a08>
   157b8:	cmp	r7, #0
   157bc:	blt	1596c <strspn@plt+0x4ad8>
   157c0:	bne	15964 <strspn@plt+0x4ad0>
   157c4:	mov	r2, #64	; 0x40
   157c8:	mov	r1, r7
   157cc:	mov	r0, r2
   157d0:	str	r2, [sp, #4]
   157d4:	bl	1624c <strspn@plt+0x53b8>
   157d8:	ldr	r2, [sp, #4]
   157dc:	mov	r1, r7
   157e0:	mov	r4, r0
   157e4:	mov	r0, r2
   157e8:	bl	1646c <strspn@plt+0x55d8>
   157ec:	ldr	r2, [sp, #4]
   157f0:	sub	r1, r2, r1
   157f4:	cmp	r9, #0
   157f8:	sub	r3, r4, r6
   157fc:	streq	r9, [sl]
   15800:	cmp	r3, r5
   15804:	bge	15888 <strspn@plt+0x49f4>
   15808:	cmp	r5, #0
   1580c:	blt	158f8 <strspn@plt+0x4a64>
   15810:	cmp	r6, #0
   15814:	blt	15834 <strspn@plt+0x49a0>
   15818:	mvn	r3, #-2147483648	; 0x80000000
   1581c:	sub	r3, r3, r5
   15820:	cmp	r6, r3
   15824:	movle	r3, #0
   15828:	movgt	r3, #1
   1582c:	cmp	r3, #0
   15830:	bne	159f4 <strspn@plt+0x4b60>
   15834:	add	r5, r6, r5
   15838:	cmp	fp, r5
   1583c:	movge	r8, #0
   15840:	andlt	r8, r8, #1
   15844:	cmp	r8, #0
   15848:	mov	r4, r5
   1584c:	bne	159f4 <strspn@plt+0x4b60>
   15850:	cmp	r7, #0
   15854:	blt	1590c <strspn@plt+0x4a78>
   15858:	beq	15884 <strspn@plt+0x49f0>
   1585c:	cmp	r5, #0
   15860:	blt	159b4 <strspn@plt+0x4b20>
   15864:	mov	r1, r7
   15868:	mvn	r0, #-2147483648	; 0x80000000
   1586c:	bl	1624c <strspn@plt+0x53b8>
   15870:	cmp	r5, r0
   15874:	movle	r0, #0
   15878:	movgt	r0, #1
   1587c:	cmp	r0, #0
   15880:	bne	159f4 <strspn@plt+0x4b60>
   15884:	mul	r1, r5, r7
   15888:	mov	r0, r9
   1588c:	bl	15604 <strspn@plt+0x4770>
   15890:	str	r4, [sl]
   15894:	add	sp, sp, #12
   15898:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1589c:	cmp	r7, #0
   158a0:	blt	15938 <strspn@plt+0x4aa4>
   158a4:	beq	157c4 <strspn@plt+0x4930>
   158a8:	cmp	r4, #0
   158ac:	blt	15974 <strspn@plt+0x4ae0>
   158b0:	mov	r1, r7
   158b4:	mvn	r0, #-2147483648	; 0x80000000
   158b8:	bl	1624c <strspn@plt+0x53b8>
   158bc:	cmp	r0, r4
   158c0:	movge	r0, #0
   158c4:	movlt	r0, #1
   158c8:	cmp	r0, #0
   158cc:	mvnne	r2, #-2147483648	; 0x80000000
   158d0:	bne	157c8 <strspn@plt+0x4934>
   158d4:	mul	r1, r7, r4
   158d8:	cmp	r1, #63	; 0x3f
   158dc:	bgt	157f4 <strspn@plt+0x4960>
   158e0:	b	157c4 <strspn@plt+0x4930>
   158e4:	rsb	r3, r4, #-2147483648	; 0x80000000
   158e8:	cmp	r6, r3
   158ec:	movge	r3, #0
   158f0:	movlt	r3, #1
   158f4:	b	15790 <strspn@plt+0x48fc>
   158f8:	rsb	r3, r5, #-2147483648	; 0x80000000
   158fc:	cmp	r6, r3
   15900:	movge	r3, #0
   15904:	movlt	r3, #1
   15908:	b	1582c <strspn@plt+0x4998>
   1590c:	cmp	r5, #0
   15910:	blt	15998 <strspn@plt+0x4b04>
   15914:	cmn	r7, #1
   15918:	beq	15884 <strspn@plt+0x49f0>
   1591c:	mov	r1, r7
   15920:	mov	r0, #-2147483648	; 0x80000000
   15924:	bl	1624c <strspn@plt+0x53b8>
   15928:	cmp	r5, r0
   1592c:	movle	r0, #0
   15930:	movgt	r0, #1
   15934:	b	1587c <strspn@plt+0x49e8>
   15938:	cmp	r4, #0
   1593c:	blt	159d8 <strspn@plt+0x4b44>
   15940:	cmn	r7, #1
   15944:	beq	158d4 <strspn@plt+0x4a40>
   15948:	mov	r1, r7
   1594c:	mov	r0, #-2147483648	; 0x80000000
   15950:	bl	1624c <strspn@plt+0x53b8>
   15954:	cmp	r0, r4
   15958:	movge	r0, #0
   1595c:	movlt	r0, #1
   15960:	b	158c8 <strspn@plt+0x4a34>
   15964:	mov	r4, fp
   15968:	b	158b0 <strspn@plt+0x4a1c>
   1596c:	mov	r4, fp
   15970:	b	15940 <strspn@plt+0x4aac>
   15974:	cmn	r4, #1
   15978:	beq	158d4 <strspn@plt+0x4a40>
   1597c:	mov	r1, r4
   15980:	mov	r0, #-2147483648	; 0x80000000
   15984:	bl	1624c <strspn@plt+0x53b8>
   15988:	cmp	r7, r0
   1598c:	movle	r0, #0
   15990:	movgt	r0, #1
   15994:	b	158c8 <strspn@plt+0x4a34>
   15998:	mov	r1, r7
   1599c:	mvn	r0, #-2147483648	; 0x80000000
   159a0:	bl	1624c <strspn@plt+0x53b8>
   159a4:	cmp	r5, r0
   159a8:	movge	r0, #0
   159ac:	movlt	r0, #1
   159b0:	b	1587c <strspn@plt+0x49e8>
   159b4:	cmn	r5, #1
   159b8:	beq	15884 <strspn@plt+0x49f0>
   159bc:	mov	r1, r5
   159c0:	mov	r0, #-2147483648	; 0x80000000
   159c4:	bl	1624c <strspn@plt+0x53b8>
   159c8:	cmp	r7, r0
   159cc:	movle	r0, #0
   159d0:	movgt	r0, #1
   159d4:	b	1587c <strspn@plt+0x49e8>
   159d8:	mov	r1, r7
   159dc:	mvn	r0, #-2147483648	; 0x80000000
   159e0:	bl	1624c <strspn@plt+0x53b8>
   159e4:	cmp	r0, r4
   159e8:	movle	r0, #0
   159ec:	movgt	r0, #1
   159f0:	b	158c8 <strspn@plt+0x4a34>
   159f4:	bl	15b10 <strspn@plt+0x4c7c>
   159f8:	push	{r4, lr}
   159fc:	mov	r1, #1
   15a00:	bl	15b50 <strspn@plt+0x4cbc>
   15a04:	cmp	r0, #0
   15a08:	popne	{r4, pc}
   15a0c:	bl	15b10 <strspn@plt+0x4c7c>
   15a10:	push	{r4, lr}
   15a14:	mov	r1, #1
   15a18:	bl	15b50 <strspn@plt+0x4cbc>
   15a1c:	cmp	r0, #0
   15a20:	popne	{r4, pc}
   15a24:	bl	15b10 <strspn@plt+0x4c7c>
   15a28:	push	{r4, lr}
   15a2c:	bl	15b50 <strspn@plt+0x4cbc>
   15a30:	cmp	r0, #0
   15a34:	popne	{r4, pc}
   15a38:	bl	15b10 <strspn@plt+0x4c7c>
   15a3c:	push	{r4, lr}
   15a40:	bl	15b50 <strspn@plt+0x4cbc>
   15a44:	cmp	r0, #0
   15a48:	popne	{r4, pc}
   15a4c:	bl	15b10 <strspn@plt+0x4c7c>
   15a50:	push	{r4, r5, r6, lr}
   15a54:	mov	r6, r0
   15a58:	mov	r0, r1
   15a5c:	mov	r4, r1
   15a60:	bl	15b98 <strspn@plt+0x4d04>
   15a64:	subs	r5, r0, #0
   15a68:	beq	15a80 <strspn@plt+0x4bec>
   15a6c:	mov	r2, r4
   15a70:	mov	r1, r6
   15a74:	bl	10c9c <memcpy@plt>
   15a78:	mov	r0, r5
   15a7c:	pop	{r4, r5, r6, pc}
   15a80:	bl	15b10 <strspn@plt+0x4c7c>
   15a84:	push	{r4, r5, r6, lr}
   15a88:	mov	r6, r0
   15a8c:	mov	r0, r1
   15a90:	mov	r4, r1
   15a94:	bl	15b98 <strspn@plt+0x4d04>
   15a98:	subs	r5, r0, #0
   15a9c:	beq	15ab4 <strspn@plt+0x4c20>
   15aa0:	mov	r2, r4
   15aa4:	mov	r1, r6
   15aa8:	bl	10c9c <memcpy@plt>
   15aac:	mov	r0, r5
   15ab0:	pop	{r4, r5, r6, pc}
   15ab4:	bl	15b10 <strspn@plt+0x4c7c>
   15ab8:	push	{r4, r5, r6, lr}
   15abc:	mov	r6, r0
   15ac0:	add	r0, r1, #1
   15ac4:	mov	r4, r1
   15ac8:	bl	15b98 <strspn@plt+0x4d04>
   15acc:	subs	r5, r0, #0
   15ad0:	beq	15af0 <strspn@plt+0x4c5c>
   15ad4:	mov	r3, #0
   15ad8:	mov	r1, r6
   15adc:	strb	r3, [r5, r4]
   15ae0:	mov	r2, r4
   15ae4:	bl	10c9c <memcpy@plt>
   15ae8:	mov	r0, r5
   15aec:	pop	{r4, r5, r6, pc}
   15af0:	bl	15b10 <strspn@plt+0x4c7c>
   15af4:	push	{r4, lr}
   15af8:	mov	r4, r0
   15afc:	bl	10dc8 <strlen@plt>
   15b00:	add	r1, r0, #1
   15b04:	mov	r0, r4
   15b08:	pop	{r4, lr}
   15b0c:	b	15a50 <strspn@plt+0x4bbc>
   15b10:	ldr	r3, [pc, #44]	; 15b44 <strspn@plt+0x4cb0>
   15b14:	push	{r4, lr}
   15b18:	mov	r2, #5
   15b1c:	ldr	r1, [pc, #36]	; 15b48 <strspn@plt+0x4cb4>
   15b20:	mov	r0, #0
   15b24:	ldr	r4, [r3]
   15b28:	bl	10ccc <dcgettext@plt>
   15b2c:	ldr	r2, [pc, #24]	; 15b4c <strspn@plt+0x4cb8>
   15b30:	mov	r1, #0
   15b34:	mov	r3, r0
   15b38:	mov	r0, r4
   15b3c:	bl	10d50 <error@plt>
   15b40:	bl	10e88 <abort@plt>
   15b44:	andeq	r8, r2, ip, ror #1
   15b48:	andeq	r7, r1, r4, asr r3
   15b4c:	muleq	r1, r8, lr
   15b50:	cmp	r1, #0
   15b54:	cmpne	r0, #0
   15b58:	moveq	r1, #1
   15b5c:	moveq	r0, r1
   15b60:	umull	r2, r3, r0, r1
   15b64:	adds	r3, r3, #0
   15b68:	movne	r3, #1
   15b6c:	cmp	r2, #0
   15b70:	blt	15b80 <strspn@plt+0x4cec>
   15b74:	cmp	r3, #0
   15b78:	bne	15b80 <strspn@plt+0x4cec>
   15b7c:	b	10c30 <calloc@plt>
   15b80:	push	{r4, lr}
   15b84:	bl	10dd4 <__errno_location@plt>
   15b88:	mov	r3, #12
   15b8c:	str	r3, [r0]
   15b90:	mov	r0, #0
   15b94:	pop	{r4, pc}
   15b98:	cmp	r0, #0
   15b9c:	moveq	r0, #1
   15ba0:	cmp	r0, #0
   15ba4:	blt	15bac <strspn@plt+0x4d18>
   15ba8:	b	10d5c <malloc@plt>
   15bac:	push	{r4, lr}
   15bb0:	bl	10dd4 <__errno_location@plt>
   15bb4:	mov	r3, #12
   15bb8:	str	r3, [r0]
   15bbc:	mov	r0, #0
   15bc0:	pop	{r4, pc}
   15bc4:	cmp	r0, #0
   15bc8:	beq	15bec <strspn@plt+0x4d58>
   15bcc:	cmp	r1, #0
   15bd0:	push	{lr}		; (str lr, [sp, #-4]!)
   15bd4:	sub	sp, sp, #12
   15bd8:	beq	15bf4 <strspn@plt+0x4d60>
   15bdc:	blt	15c0c <strspn@plt+0x4d78>
   15be0:	add	sp, sp, #12
   15be4:	pop	{lr}		; (ldr lr, [sp], #4)
   15be8:	b	10cd8 <realloc@plt>
   15bec:	mov	r0, r1
   15bf0:	b	15b98 <strspn@plt+0x4d04>
   15bf4:	str	r1, [sp, #4]
   15bf8:	bl	11fcc <strspn@plt+0x1138>
   15bfc:	ldr	r3, [sp, #4]
   15c00:	mov	r0, r3
   15c04:	add	sp, sp, #12
   15c08:	pop	{pc}		; (ldr pc, [sp], #4)
   15c0c:	bl	10dd4 <__errno_location@plt>
   15c10:	mov	r2, #12
   15c14:	mov	r3, #0
   15c18:	str	r2, [r0]
   15c1c:	b	15c00 <strspn@plt+0x4d6c>
   15c20:	push	{r4, r5, r6, lr}
   15c24:	mov	r4, r0
   15c28:	bl	10d38 <__fpending@plt>
   15c2c:	ldr	r5, [r4]
   15c30:	and	r5, r5, #32
   15c34:	mov	r6, r0
   15c38:	mov	r0, r4
   15c3c:	bl	15c9c <strspn@plt+0x4e08>
   15c40:	cmp	r5, #0
   15c44:	mov	r4, r0
   15c48:	bne	15c68 <strspn@plt+0x4dd4>
   15c4c:	cmp	r0, #0
   15c50:	beq	15c60 <strspn@plt+0x4dcc>
   15c54:	cmp	r6, #0
   15c58:	beq	15c84 <strspn@plt+0x4df0>
   15c5c:	mvn	r4, #0
   15c60:	mov	r0, r4
   15c64:	pop	{r4, r5, r6, pc}
   15c68:	cmp	r0, #0
   15c6c:	bne	15c5c <strspn@plt+0x4dc8>
   15c70:	bl	10dd4 <__errno_location@plt>
   15c74:	str	r4, [r0]
   15c78:	mvn	r4, #0
   15c7c:	mov	r0, r4
   15c80:	pop	{r4, r5, r6, pc}
   15c84:	bl	10dd4 <__errno_location@plt>
   15c88:	ldr	r4, [r0]
   15c8c:	subs	r4, r4, #9
   15c90:	mvnne	r4, #0
   15c94:	mov	r0, r4
   15c98:	pop	{r4, r5, r6, pc}
   15c9c:	push	{r4, r5, lr}
   15ca0:	sub	sp, sp, #12
   15ca4:	mov	r4, r0
   15ca8:	bl	10e04 <fileno@plt>
   15cac:	cmp	r0, #0
   15cb0:	mov	r0, r4
   15cb4:	blt	15d30 <strspn@plt+0x4e9c>
   15cb8:	bl	10d74 <__freading@plt>
   15cbc:	cmp	r0, #0
   15cc0:	bne	15cfc <strspn@plt+0x4e68>
   15cc4:	mov	r0, r4
   15cc8:	bl	15d3c <strspn@plt+0x4ea8>
   15ccc:	cmp	r0, #0
   15cd0:	beq	15d2c <strspn@plt+0x4e98>
   15cd4:	bl	10dd4 <__errno_location@plt>
   15cd8:	mov	r5, r0
   15cdc:	mov	r0, r4
   15ce0:	ldr	r4, [r5]
   15ce4:	bl	10e1c <fclose@plt>
   15ce8:	cmp	r4, #0
   15cec:	mvnne	r0, #0
   15cf0:	strne	r4, [r5]
   15cf4:	add	sp, sp, #12
   15cf8:	pop	{r4, r5, pc}
   15cfc:	mov	r0, r4
   15d00:	bl	10e04 <fileno@plt>
   15d04:	mov	r3, #1
   15d08:	str	r3, [sp]
   15d0c:	mov	r2, #0
   15d10:	mov	r3, #0
   15d14:	bl	10d20 <lseek64@plt>
   15d18:	mvn	r3, #0
   15d1c:	mvn	r2, #0
   15d20:	cmp	r1, r3
   15d24:	cmpeq	r0, r2
   15d28:	bne	15cc4 <strspn@plt+0x4e30>
   15d2c:	mov	r0, r4
   15d30:	add	sp, sp, #12
   15d34:	pop	{r4, r5, lr}
   15d38:	b	10e1c <fclose@plt>
   15d3c:	push	{r4, lr}
   15d40:	subs	r4, r0, #0
   15d44:	sub	sp, sp, #8
   15d48:	beq	15d64 <strspn@plt+0x4ed0>
   15d4c:	bl	10d74 <__freading@plt>
   15d50:	cmp	r0, #0
   15d54:	beq	15d64 <strspn@plt+0x4ed0>
   15d58:	ldr	r3, [r4]
   15d5c:	tst	r3, #256	; 0x100
   15d60:	bne	15d74 <strspn@plt+0x4ee0>
   15d64:	mov	r0, r4
   15d68:	add	sp, sp, #8
   15d6c:	pop	{r4, lr}
   15d70:	b	10c60 <fflush@plt>
   15d74:	mov	r3, #1
   15d78:	str	r3, [sp]
   15d7c:	mov	r2, #0
   15d80:	mov	r3, #0
   15d84:	mov	r0, r4
   15d88:	bl	15d9c <strspn@plt+0x4f08>
   15d8c:	mov	r0, r4
   15d90:	add	sp, sp, #8
   15d94:	pop	{r4, lr}
   15d98:	b	10c60 <fflush@plt>
   15d9c:	push	{r4, r5, r6, r7, r8, lr}
   15da0:	sub	sp, sp, #8
   15da4:	ldmib	r0, {ip, lr}
   15da8:	mov	r4, r0
   15dac:	ldr	r5, [sp, #32]
   15db0:	cmp	lr, ip
   15db4:	beq	15dcc <strspn@plt+0x4f38>
   15db8:	str	r5, [sp, #32]
   15dbc:	mov	r0, r4
   15dc0:	add	sp, sp, #8
   15dc4:	pop	{r4, r5, r6, r7, r8, lr}
   15dc8:	b	10e28 <fseeko64@plt>
   15dcc:	ldr	lr, [r0, #20]
   15dd0:	ldr	ip, [r0, #16]
   15dd4:	cmp	lr, ip
   15dd8:	bne	15db8 <strspn@plt+0x4f24>
   15ddc:	ldr	r8, [r0, #36]	; 0x24
   15de0:	cmp	r8, #0
   15de4:	bne	15db8 <strspn@plt+0x4f24>
   15de8:	mov	r6, r2
   15dec:	mov	r7, r3
   15df0:	bl	10e04 <fileno@plt>
   15df4:	mov	r2, r6
   15df8:	mov	r3, r7
   15dfc:	str	r5, [sp]
   15e00:	bl	10d20 <lseek64@plt>
   15e04:	mvn	r3, #0
   15e08:	mvn	r2, #0
   15e0c:	cmp	r1, r3
   15e10:	cmpeq	r0, r2
   15e14:	beq	15e34 <strspn@plt+0x4fa0>
   15e18:	ldr	r3, [r4]
   15e1c:	strd	r0, [r4, #80]	; 0x50
   15e20:	mov	r0, r8
   15e24:	bic	r3, r3, #16
   15e28:	str	r3, [r4]
   15e2c:	add	sp, sp, #8
   15e30:	pop	{r4, r5, r6, r7, r8, pc}
   15e34:	mvn	r0, #0
   15e38:	b	15e2c <strspn@plt+0x4f98>
   15e3c:	ldrb	r3, [r0]
   15e40:	cmp	r3, #0
   15e44:	beq	15e70 <strspn@plt+0x4fdc>
   15e48:	mov	r2, r0
   15e4c:	mov	r0, #0
   15e50:	push	{r4, lr}
   15e54:	add	r0, r3, r0, ror #23
   15e58:	ldrb	r3, [r2, #1]!
   15e5c:	cmp	r3, #0
   15e60:	bne	15e54 <strspn@plt+0x4fc0>
   15e64:	bl	1622c <strspn@plt+0x5398>
   15e68:	mov	r0, r1
   15e6c:	pop	{r4, pc}
   15e70:	mov	r0, r3
   15e74:	bx	lr
   15e78:	push	{r4, lr}
   15e7c:	mov	r0, #14
   15e80:	bl	10e58 <nl_langinfo@plt>
   15e84:	cmp	r0, #0
   15e88:	beq	15ea0 <strspn@plt+0x500c>
   15e8c:	ldrb	r2, [r0]
   15e90:	ldr	r3, [pc, #16]	; 15ea8 <strspn@plt+0x5014>
   15e94:	cmp	r2, #0
   15e98:	moveq	r0, r3
   15e9c:	pop	{r4, pc}
   15ea0:	ldr	r0, [pc]	; 15ea8 <strspn@plt+0x5014>
   15ea4:	pop	{r4, pc}
   15ea8:	andeq	r7, r1, r8, ror #6
   15eac:	push	{r4, r5, r6, r7, lr}
   15eb0:	subs	r6, r0, #0
   15eb4:	sub	sp, sp, #12
   15eb8:	addeq	r6, sp, #4
   15ebc:	mov	r0, r6
   15ec0:	mov	r5, r2
   15ec4:	mov	r7, r1
   15ec8:	bl	10d44 <mbrtowc@plt>
   15ecc:	cmp	r5, #0
   15ed0:	cmnne	r0, #3
   15ed4:	mov	r4, r0
   15ed8:	bls	15ef4 <strspn@plt+0x5060>
   15edc:	mov	r0, #0
   15ee0:	bl	15f4c <strspn@plt+0x50b8>
   15ee4:	cmp	r0, #0
   15ee8:	moveq	r4, #1
   15eec:	ldrbeq	r3, [r7]
   15ef0:	streq	r3, [r6]
   15ef4:	mov	r0, r4
   15ef8:	add	sp, sp, #12
   15efc:	pop	{r4, r5, r6, r7, pc}
   15f00:	push	{r4, r5, r6, lr}
   15f04:	subs	r4, r2, #0
   15f08:	mov	r6, r0
   15f0c:	mov	r5, r1
   15f10:	beq	15f3c <strspn@plt+0x50a8>
   15f14:	mov	r1, r4
   15f18:	mvn	r0, #0
   15f1c:	bl	16040 <strspn@plt+0x51ac>
   15f20:	cmp	r0, r5
   15f24:	bcs	15f3c <strspn@plt+0x50a8>
   15f28:	bl	10dd4 <__errno_location@plt>
   15f2c:	mov	r3, #12
   15f30:	str	r3, [r0]
   15f34:	mov	r0, #0
   15f38:	pop	{r4, r5, r6, pc}
   15f3c:	mul	r1, r5, r4
   15f40:	mov	r0, r6
   15f44:	pop	{r4, r5, r6, lr}
   15f48:	b	15bc4 <strspn@plt+0x4d30>
   15f4c:	push	{lr}		; (str lr, [sp, #-4]!)
   15f50:	sub	sp, sp, #268	; 0x10c
   15f54:	add	r1, sp, #4
   15f58:	ldr	r2, [pc, #60]	; 15f9c <strspn@plt+0x5108>
   15f5c:	bl	15fa8 <strspn@plt+0x5114>
   15f60:	cmp	r0, #0
   15f64:	movne	r0, #0
   15f68:	bne	15f94 <strspn@plt+0x5100>
   15f6c:	ldr	r1, [pc, #44]	; 15fa0 <strspn@plt+0x510c>
   15f70:	add	r0, sp, #4
   15f74:	bl	10c54 <strcmp@plt>
   15f78:	cmp	r0, #0
   15f7c:	beq	15f94 <strspn@plt+0x5100>
   15f80:	add	r0, sp, #4
   15f84:	ldr	r1, [pc, #24]	; 15fa4 <strspn@plt+0x5110>
   15f88:	bl	10c54 <strcmp@plt>
   15f8c:	adds	r0, r0, #0
   15f90:	movne	r0, #1
   15f94:	add	sp, sp, #268	; 0x10c
   15f98:	pop	{pc}		; (ldr pc, [sp], #4)
   15f9c:	andeq	r0, r0, r1, lsl #2
   15fa0:	andeq	r7, r1, r0, ror r3
   15fa4:	andeq	r7, r1, r4, ror r3
   15fa8:	push	{r4, r5, r6, lr}
   15fac:	mov	r5, r1
   15fb0:	mov	r1, #0
   15fb4:	mov	r4, r2
   15fb8:	bl	10e40 <setlocale@plt>
   15fbc:	subs	r6, r0, #0
   15fc0:	beq	1601c <strspn@plt+0x5188>
   15fc4:	bl	10dc8 <strlen@plt>
   15fc8:	cmp	r4, r0
   15fcc:	bhi	16004 <strspn@plt+0x5170>
   15fd0:	cmp	r4, #0
   15fd4:	bne	15fe0 <strspn@plt+0x514c>
   15fd8:	mov	r0, #34	; 0x22
   15fdc:	pop	{r4, r5, r6, pc}
   15fe0:	sub	r4, r4, #1
   15fe4:	mov	r1, r6
   15fe8:	mov	r2, r4
   15fec:	mov	r0, r5
   15ff0:	bl	10c9c <memcpy@plt>
   15ff4:	mov	r3, #0
   15ff8:	strb	r3, [r5, r4]
   15ffc:	mov	r0, #34	; 0x22
   16000:	pop	{r4, r5, r6, pc}
   16004:	add	r2, r0, #1
   16008:	mov	r1, r6
   1600c:	mov	r0, r5
   16010:	bl	10c9c <memcpy@plt>
   16014:	mov	r0, #0
   16018:	pop	{r4, r5, r6, pc}
   1601c:	cmp	r4, #0
   16020:	beq	16030 <strspn@plt+0x519c>
   16024:	strb	r6, [r5]
   16028:	mov	r0, #22
   1602c:	pop	{r4, r5, r6, pc}
   16030:	mov	r0, #22
   16034:	pop	{r4, r5, r6, pc}
   16038:	mov	r1, #0
   1603c:	b	10e40 <setlocale@plt>
   16040:	subs	r2, r1, #1
   16044:	bxeq	lr
   16048:	bcc	16220 <strspn@plt+0x538c>
   1604c:	cmp	r0, r1
   16050:	bls	16204 <strspn@plt+0x5370>
   16054:	tst	r1, r2
   16058:	beq	16210 <strspn@plt+0x537c>
   1605c:	clz	r3, r0
   16060:	clz	r2, r1
   16064:	sub	r3, r2, r3
   16068:	rsbs	r3, r3, #31
   1606c:	addne	r3, r3, r3, lsl #1
   16070:	mov	r2, #0
   16074:	addne	pc, pc, r3, lsl #2
   16078:	nop			; (mov r0, r0)
   1607c:	cmp	r0, r1, lsl #31
   16080:	adc	r2, r2, r2
   16084:	subcs	r0, r0, r1, lsl #31
   16088:	cmp	r0, r1, lsl #30
   1608c:	adc	r2, r2, r2
   16090:	subcs	r0, r0, r1, lsl #30
   16094:	cmp	r0, r1, lsl #29
   16098:	adc	r2, r2, r2
   1609c:	subcs	r0, r0, r1, lsl #29
   160a0:	cmp	r0, r1, lsl #28
   160a4:	adc	r2, r2, r2
   160a8:	subcs	r0, r0, r1, lsl #28
   160ac:	cmp	r0, r1, lsl #27
   160b0:	adc	r2, r2, r2
   160b4:	subcs	r0, r0, r1, lsl #27
   160b8:	cmp	r0, r1, lsl #26
   160bc:	adc	r2, r2, r2
   160c0:	subcs	r0, r0, r1, lsl #26
   160c4:	cmp	r0, r1, lsl #25
   160c8:	adc	r2, r2, r2
   160cc:	subcs	r0, r0, r1, lsl #25
   160d0:	cmp	r0, r1, lsl #24
   160d4:	adc	r2, r2, r2
   160d8:	subcs	r0, r0, r1, lsl #24
   160dc:	cmp	r0, r1, lsl #23
   160e0:	adc	r2, r2, r2
   160e4:	subcs	r0, r0, r1, lsl #23
   160e8:	cmp	r0, r1, lsl #22
   160ec:	adc	r2, r2, r2
   160f0:	subcs	r0, r0, r1, lsl #22
   160f4:	cmp	r0, r1, lsl #21
   160f8:	adc	r2, r2, r2
   160fc:	subcs	r0, r0, r1, lsl #21
   16100:	cmp	r0, r1, lsl #20
   16104:	adc	r2, r2, r2
   16108:	subcs	r0, r0, r1, lsl #20
   1610c:	cmp	r0, r1, lsl #19
   16110:	adc	r2, r2, r2
   16114:	subcs	r0, r0, r1, lsl #19
   16118:	cmp	r0, r1, lsl #18
   1611c:	adc	r2, r2, r2
   16120:	subcs	r0, r0, r1, lsl #18
   16124:	cmp	r0, r1, lsl #17
   16128:	adc	r2, r2, r2
   1612c:	subcs	r0, r0, r1, lsl #17
   16130:	cmp	r0, r1, lsl #16
   16134:	adc	r2, r2, r2
   16138:	subcs	r0, r0, r1, lsl #16
   1613c:	cmp	r0, r1, lsl #15
   16140:	adc	r2, r2, r2
   16144:	subcs	r0, r0, r1, lsl #15
   16148:	cmp	r0, r1, lsl #14
   1614c:	adc	r2, r2, r2
   16150:	subcs	r0, r0, r1, lsl #14
   16154:	cmp	r0, r1, lsl #13
   16158:	adc	r2, r2, r2
   1615c:	subcs	r0, r0, r1, lsl #13
   16160:	cmp	r0, r1, lsl #12
   16164:	adc	r2, r2, r2
   16168:	subcs	r0, r0, r1, lsl #12
   1616c:	cmp	r0, r1, lsl #11
   16170:	adc	r2, r2, r2
   16174:	subcs	r0, r0, r1, lsl #11
   16178:	cmp	r0, r1, lsl #10
   1617c:	adc	r2, r2, r2
   16180:	subcs	r0, r0, r1, lsl #10
   16184:	cmp	r0, r1, lsl #9
   16188:	adc	r2, r2, r2
   1618c:	subcs	r0, r0, r1, lsl #9
   16190:	cmp	r0, r1, lsl #8
   16194:	adc	r2, r2, r2
   16198:	subcs	r0, r0, r1, lsl #8
   1619c:	cmp	r0, r1, lsl #7
   161a0:	adc	r2, r2, r2
   161a4:	subcs	r0, r0, r1, lsl #7
   161a8:	cmp	r0, r1, lsl #6
   161ac:	adc	r2, r2, r2
   161b0:	subcs	r0, r0, r1, lsl #6
   161b4:	cmp	r0, r1, lsl #5
   161b8:	adc	r2, r2, r2
   161bc:	subcs	r0, r0, r1, lsl #5
   161c0:	cmp	r0, r1, lsl #4
   161c4:	adc	r2, r2, r2
   161c8:	subcs	r0, r0, r1, lsl #4
   161cc:	cmp	r0, r1, lsl #3
   161d0:	adc	r2, r2, r2
   161d4:	subcs	r0, r0, r1, lsl #3
   161d8:	cmp	r0, r1, lsl #2
   161dc:	adc	r2, r2, r2
   161e0:	subcs	r0, r0, r1, lsl #2
   161e4:	cmp	r0, r1, lsl #1
   161e8:	adc	r2, r2, r2
   161ec:	subcs	r0, r0, r1, lsl #1
   161f0:	cmp	r0, r1
   161f4:	adc	r2, r2, r2
   161f8:	subcs	r0, r0, r1
   161fc:	mov	r0, r2
   16200:	bx	lr
   16204:	moveq	r0, #1
   16208:	movne	r0, #0
   1620c:	bx	lr
   16210:	clz	r2, r1
   16214:	rsb	r2, r2, #31
   16218:	lsr	r0, r0, r2
   1621c:	bx	lr
   16220:	cmp	r0, #0
   16224:	mvnne	r0, #0
   16228:	b	164c8 <strspn@plt+0x5634>
   1622c:	cmp	r1, #0
   16230:	beq	16220 <strspn@plt+0x538c>
   16234:	push	{r0, r1, lr}
   16238:	bl	16040 <strspn@plt+0x51ac>
   1623c:	pop	{r1, r2, lr}
   16240:	mul	r3, r2, r0
   16244:	sub	r1, r1, r3
   16248:	bx	lr
   1624c:	cmp	r1, #0
   16250:	beq	1645c <strspn@plt+0x55c8>
   16254:	eor	ip, r0, r1
   16258:	rsbmi	r1, r1, #0
   1625c:	subs	r2, r1, #1
   16260:	beq	16428 <strspn@plt+0x5594>
   16264:	movs	r3, r0
   16268:	rsbmi	r3, r0, #0
   1626c:	cmp	r3, r1
   16270:	bls	16434 <strspn@plt+0x55a0>
   16274:	tst	r1, r2
   16278:	beq	16444 <strspn@plt+0x55b0>
   1627c:	clz	r2, r3
   16280:	clz	r0, r1
   16284:	sub	r2, r0, r2
   16288:	rsbs	r2, r2, #31
   1628c:	addne	r2, r2, r2, lsl #1
   16290:	mov	r0, #0
   16294:	addne	pc, pc, r2, lsl #2
   16298:	nop			; (mov r0, r0)
   1629c:	cmp	r3, r1, lsl #31
   162a0:	adc	r0, r0, r0
   162a4:	subcs	r3, r3, r1, lsl #31
   162a8:	cmp	r3, r1, lsl #30
   162ac:	adc	r0, r0, r0
   162b0:	subcs	r3, r3, r1, lsl #30
   162b4:	cmp	r3, r1, lsl #29
   162b8:	adc	r0, r0, r0
   162bc:	subcs	r3, r3, r1, lsl #29
   162c0:	cmp	r3, r1, lsl #28
   162c4:	adc	r0, r0, r0
   162c8:	subcs	r3, r3, r1, lsl #28
   162cc:	cmp	r3, r1, lsl #27
   162d0:	adc	r0, r0, r0
   162d4:	subcs	r3, r3, r1, lsl #27
   162d8:	cmp	r3, r1, lsl #26
   162dc:	adc	r0, r0, r0
   162e0:	subcs	r3, r3, r1, lsl #26
   162e4:	cmp	r3, r1, lsl #25
   162e8:	adc	r0, r0, r0
   162ec:	subcs	r3, r3, r1, lsl #25
   162f0:	cmp	r3, r1, lsl #24
   162f4:	adc	r0, r0, r0
   162f8:	subcs	r3, r3, r1, lsl #24
   162fc:	cmp	r3, r1, lsl #23
   16300:	adc	r0, r0, r0
   16304:	subcs	r3, r3, r1, lsl #23
   16308:	cmp	r3, r1, lsl #22
   1630c:	adc	r0, r0, r0
   16310:	subcs	r3, r3, r1, lsl #22
   16314:	cmp	r3, r1, lsl #21
   16318:	adc	r0, r0, r0
   1631c:	subcs	r3, r3, r1, lsl #21
   16320:	cmp	r3, r1, lsl #20
   16324:	adc	r0, r0, r0
   16328:	subcs	r3, r3, r1, lsl #20
   1632c:	cmp	r3, r1, lsl #19
   16330:	adc	r0, r0, r0
   16334:	subcs	r3, r3, r1, lsl #19
   16338:	cmp	r3, r1, lsl #18
   1633c:	adc	r0, r0, r0
   16340:	subcs	r3, r3, r1, lsl #18
   16344:	cmp	r3, r1, lsl #17
   16348:	adc	r0, r0, r0
   1634c:	subcs	r3, r3, r1, lsl #17
   16350:	cmp	r3, r1, lsl #16
   16354:	adc	r0, r0, r0
   16358:	subcs	r3, r3, r1, lsl #16
   1635c:	cmp	r3, r1, lsl #15
   16360:	adc	r0, r0, r0
   16364:	subcs	r3, r3, r1, lsl #15
   16368:	cmp	r3, r1, lsl #14
   1636c:	adc	r0, r0, r0
   16370:	subcs	r3, r3, r1, lsl #14
   16374:	cmp	r3, r1, lsl #13
   16378:	adc	r0, r0, r0
   1637c:	subcs	r3, r3, r1, lsl #13
   16380:	cmp	r3, r1, lsl #12
   16384:	adc	r0, r0, r0
   16388:	subcs	r3, r3, r1, lsl #12
   1638c:	cmp	r3, r1, lsl #11
   16390:	adc	r0, r0, r0
   16394:	subcs	r3, r3, r1, lsl #11
   16398:	cmp	r3, r1, lsl #10
   1639c:	adc	r0, r0, r0
   163a0:	subcs	r3, r3, r1, lsl #10
   163a4:	cmp	r3, r1, lsl #9
   163a8:	adc	r0, r0, r0
   163ac:	subcs	r3, r3, r1, lsl #9
   163b0:	cmp	r3, r1, lsl #8
   163b4:	adc	r0, r0, r0
   163b8:	subcs	r3, r3, r1, lsl #8
   163bc:	cmp	r3, r1, lsl #7
   163c0:	adc	r0, r0, r0
   163c4:	subcs	r3, r3, r1, lsl #7
   163c8:	cmp	r3, r1, lsl #6
   163cc:	adc	r0, r0, r0
   163d0:	subcs	r3, r3, r1, lsl #6
   163d4:	cmp	r3, r1, lsl #5
   163d8:	adc	r0, r0, r0
   163dc:	subcs	r3, r3, r1, lsl #5
   163e0:	cmp	r3, r1, lsl #4
   163e4:	adc	r0, r0, r0
   163e8:	subcs	r3, r3, r1, lsl #4
   163ec:	cmp	r3, r1, lsl #3
   163f0:	adc	r0, r0, r0
   163f4:	subcs	r3, r3, r1, lsl #3
   163f8:	cmp	r3, r1, lsl #2
   163fc:	adc	r0, r0, r0
   16400:	subcs	r3, r3, r1, lsl #2
   16404:	cmp	r3, r1, lsl #1
   16408:	adc	r0, r0, r0
   1640c:	subcs	r3, r3, r1, lsl #1
   16410:	cmp	r3, r1
   16414:	adc	r0, r0, r0
   16418:	subcs	r3, r3, r1
   1641c:	cmp	ip, #0
   16420:	rsbmi	r0, r0, #0
   16424:	bx	lr
   16428:	teq	ip, r0
   1642c:	rsbmi	r0, r0, #0
   16430:	bx	lr
   16434:	movcc	r0, #0
   16438:	asreq	r0, ip, #31
   1643c:	orreq	r0, r0, #1
   16440:	bx	lr
   16444:	clz	r2, r1
   16448:	rsb	r2, r2, #31
   1644c:	cmp	ip, #0
   16450:	lsr	r0, r3, r2
   16454:	rsbmi	r0, r0, #0
   16458:	bx	lr
   1645c:	cmp	r0, #0
   16460:	mvngt	r0, #-2147483648	; 0x80000000
   16464:	movlt	r0, #-2147483648	; 0x80000000
   16468:	b	164c8 <strspn@plt+0x5634>
   1646c:	cmp	r1, #0
   16470:	beq	1645c <strspn@plt+0x55c8>
   16474:	push	{r0, r1, lr}
   16478:	bl	16254 <strspn@plt+0x53c0>
   1647c:	pop	{r1, r2, lr}
   16480:	mul	r3, r2, r0
   16484:	sub	r1, r1, r3
   16488:	bx	lr
   1648c:	cmp	r3, #0
   16490:	cmpeq	r2, #0
   16494:	bne	164ac <strspn@plt+0x5618>
   16498:	cmp	r1, #0
   1649c:	cmpeq	r0, #0
   164a0:	mvnne	r1, #0
   164a4:	mvnne	r0, #0
   164a8:	b	164c8 <strspn@plt+0x5634>
   164ac:	sub	sp, sp, #8
   164b0:	push	{sp, lr}
   164b4:	bl	164d8 <strspn@plt+0x5644>
   164b8:	ldr	lr, [sp, #4]
   164bc:	add	sp, sp, #8
   164c0:	pop	{r2, r3}
   164c4:	bx	lr
   164c8:	push	{r1, lr}
   164cc:	mov	r0, #8
   164d0:	bl	10c48 <raise@plt>
   164d4:	pop	{r1, pc}
   164d8:	cmp	r1, r3
   164dc:	push	{r4, r5, r6, r7, r8, r9, lr}
   164e0:	cmpeq	r0, r2
   164e4:	mov	r4, r0
   164e8:	mov	r5, r1
   164ec:	ldr	r9, [sp, #28]
   164f0:	movcc	r0, #0
   164f4:	movcc	r1, #0
   164f8:	bcc	165f0 <strspn@plt+0x575c>
   164fc:	cmp	r3, #0
   16500:	clzeq	ip, r2
   16504:	clzne	ip, r3
   16508:	addeq	ip, ip, #32
   1650c:	cmp	r5, #0
   16510:	clzeq	r1, r4
   16514:	addeq	r1, r1, #32
   16518:	clzne	r1, r5
   1651c:	sub	ip, ip, r1
   16520:	sub	lr, ip, #32
   16524:	lsl	r7, r3, ip
   16528:	rsb	r8, ip, #32
   1652c:	orr	r7, r7, r2, lsl lr
   16530:	orr	r7, r7, r2, lsr r8
   16534:	lsl	r6, r2, ip
   16538:	cmp	r5, r7
   1653c:	cmpeq	r4, r6
   16540:	movcc	r0, #0
   16544:	movcc	r1, #0
   16548:	bcc	16564 <strspn@plt+0x56d0>
   1654c:	mov	r3, #1
   16550:	subs	r4, r4, r6
   16554:	lsl	r1, r3, lr
   16558:	lsl	r0, r3, ip
   1655c:	orr	r1, r1, r3, lsr r8
   16560:	sbc	r5, r5, r7
   16564:	cmp	ip, #0
   16568:	beq	165f0 <strspn@plt+0x575c>
   1656c:	lsrs	r3, r7, #1
   16570:	rrx	r2, r6
   16574:	mov	r6, ip
   16578:	b	1659c <strspn@plt+0x5708>
   1657c:	subs	r4, r4, r2
   16580:	sbc	r5, r5, r3
   16584:	adds	r4, r4, r4
   16588:	adc	r5, r5, r5
   1658c:	adds	r4, r4, #1
   16590:	adc	r5, r5, #0
   16594:	subs	r6, r6, #1
   16598:	beq	165b8 <strspn@plt+0x5724>
   1659c:	cmp	r5, r3
   165a0:	cmpeq	r4, r2
   165a4:	bcs	1657c <strspn@plt+0x56e8>
   165a8:	adds	r4, r4, r4
   165ac:	adc	r5, r5, r5
   165b0:	subs	r6, r6, #1
   165b4:	bne	1659c <strspn@plt+0x5708>
   165b8:	lsr	r6, r4, ip
   165bc:	lsr	r7, r5, ip
   165c0:	orr	r6, r6, r5, lsl r8
   165c4:	adds	r2, r0, r4
   165c8:	orr	r6, r6, r5, lsr lr
   165cc:	adc	r3, r1, r5
   165d0:	lsl	r1, r7, ip
   165d4:	orr	r1, r1, r6, lsl lr
   165d8:	lsl	r0, r6, ip
   165dc:	orr	r1, r1, r6, lsr r8
   165e0:	subs	r0, r2, r0
   165e4:	mov	r4, r6
   165e8:	mov	r5, r7
   165ec:	sbc	r1, r3, r1
   165f0:	cmp	r9, #0
   165f4:	popeq	{r4, r5, r6, r7, r8, r9, pc}
   165f8:	strd	r4, [r9]
   165fc:	pop	{r4, r5, r6, r7, r8, r9, pc}
   16600:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   16604:	mov	r7, r0
   16608:	ldr	r6, [pc, #72]	; 16658 <strspn@plt+0x57c4>
   1660c:	ldr	r5, [pc, #72]	; 1665c <strspn@plt+0x57c8>
   16610:	add	r6, pc, r6
   16614:	add	r5, pc, r5
   16618:	sub	r6, r6, r5
   1661c:	mov	r8, r1
   16620:	mov	r9, r2
   16624:	bl	10c10 <calloc@plt-0x20>
   16628:	asrs	r6, r6, #2
   1662c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   16630:	mov	r4, #0
   16634:	add	r4, r4, #1
   16638:	ldr	r3, [r5], #4
   1663c:	mov	r2, r9
   16640:	mov	r1, r8
   16644:	mov	r0, r7
   16648:	blx	r3
   1664c:	cmp	r6, r4
   16650:	bne	16634 <strspn@plt+0x57a0>
   16654:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   16658:	strdeq	r1, [r1], -r8
   1665c:	strdeq	r1, [r1], -r0
   16660:	bx	lr
   16664:	ldr	r3, [pc, #12]	; 16678 <strspn@plt+0x57e4>
   16668:	mov	r1, #0
   1666c:	add	r3, pc, r3
   16670:	ldr	r2, [r3]
   16674:	b	10de0 <__cxa_atexit@plt>
   16678:	andeq	r1, r1, r0, ror sl

Disassembly of section .fini:

0001667c <.fini>:
   1667c:	push	{r3, lr}
   16680:	pop	{r3, pc}
