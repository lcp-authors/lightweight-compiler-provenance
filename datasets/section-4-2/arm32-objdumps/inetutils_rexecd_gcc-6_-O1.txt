
../repos/inetutils/src/rexecd:     file format elf32-littlearm


Disassembly of section .init:

0001124c <.init>:
   1124c:	push	{r3, lr}
   11250:	bl	11650 <__assert_fail@plt+0x48>
   11254:	pop	{r3, pc}

Disassembly of section .plt:

00011258 <calloc@plt-0x14>:
   11258:	push	{lr}		; (str lr, [sp, #-4]!)
   1125c:	ldr	lr, [pc, #4]	; 11268 <calloc@plt-0x4>
   11260:	add	lr, pc, lr
   11264:	ldr	pc, [lr, #8]!
   11268:	muleq	r1, r8, sp

0001126c <calloc@plt>:
   1126c:	add	ip, pc, #0, 12
   11270:	add	ip, ip, #24, 20	; 0x18000
   11274:	ldr	pc, [ip, #3480]!	; 0xd98

00011278 <fputs_unlocked@plt>:
   11278:	add	ip, pc, #0, 12
   1127c:	add	ip, ip, #24, 20	; 0x18000
   11280:	ldr	pc, [ip, #3472]!	; 0xd90

00011284 <raise@plt>:
   11284:	add	ip, pc, #0, 12
   11288:	add	ip, ip, #24, 20	; 0x18000
   1128c:	ldr	pc, [ip, #3464]!	; 0xd88

00011290 <strcmp@plt>:
   11290:	add	ip, pc, #0, 12
   11294:	add	ip, ip, #24, 20	; 0x18000
   11298:	ldr	pc, [ip, #3456]!	; 0xd80

0001129c <strtol@plt>:
   1129c:	add	ip, pc, #0, 12
   112a0:	add	ip, ip, #24, 20	; 0x18000
   112a4:	ldr	pc, [ip, #3448]!	; 0xd78

000112a8 <setsockopt@plt>:
   112a8:	add	ip, pc, #0, 12
   112ac:	add	ip, ip, #24, 20	; 0x18000
   112b0:	ldr	pc, [ip, #3440]!	; 0xd70

000112b4 <printf@plt>:
   112b4:	add	ip, pc, #0, 12
   112b8:	add	ip, ip, #24, 20	; 0x18000
   112bc:	ldr	pc, [ip, #3432]!	; 0xd68

000112c0 <read@plt>:
   112c0:	add	ip, pc, #0, 12
   112c4:	add	ip, ip, #24, 20	; 0x18000
   112c8:	ldr	pc, [ip, #3424]!	; 0xd60

000112cc <getspnam@plt>:
   112cc:	add	ip, pc, #0, 12
   112d0:	add	ip, ip, #24, 20	; 0x18000
   112d4:	ldr	pc, [ip, #3416]!	; 0xd58

000112d8 <memmove@plt>:
   112d8:	add	ip, pc, #0, 12
   112dc:	add	ip, ip, #24, 20	; 0x18000
   112e0:	ldr	pc, [ip, #3408]!	; 0xd50

000112e4 <strchrnul@plt>:
   112e4:	add	ip, pc, #0, 12
   112e8:	add	ip, ip, #24, 20	; 0x18000
   112ec:	ldr	pc, [ip, #3400]!	; 0xd48

000112f0 <free@plt>:
   112f0:	add	ip, pc, #0, 12
   112f4:	add	ip, ip, #24, 20	; 0x18000
   112f8:	ldr	pc, [ip, #3392]!	; 0xd40

000112fc <strndup@plt>:
   112fc:	add	ip, pc, #0, 12
   11300:	add	ip, ip, #24, 20	; 0x18000
   11304:	ldr	pc, [ip, #3384]!	; 0xd38

00011308 <memcpy@plt>:
   11308:	add	ip, pc, #0, 12
   1130c:	add	ip, ip, #24, 20	; 0x18000
   11310:	ldr	pc, [ip, #3376]!	; 0xd30

00011314 <signal@plt>:
   11314:	add	ip, pc, #0, 12
   11318:	add	ip, ip, #24, 20	; 0x18000
   1131c:	ldr	pc, [ip, #3368]!	; 0xd28

00011320 <fwrite_unlocked@plt>:
   11320:	add	ip, pc, #0, 12
   11324:	add	ip, ip, #24, 20	; 0x18000
   11328:	ldr	pc, [ip, #3360]!	; 0xd20

0001132c <select@plt>:
   1132c:	add	ip, pc, #0, 12
   11330:	add	ip, ip, #24, 20	; 0x18000
   11334:	ldr	pc, [ip, #3352]!	; 0xd18

00011338 <sleep@plt>:
   11338:	add	ip, pc, #0, 12
   1133c:	add	ip, ip, #24, 20	; 0x18000
   11340:	ldr	pc, [ip, #3344]!	; 0xd10

00011344 <alarm@plt>:
   11344:	add	ip, pc, #0, 12
   11348:	add	ip, ip, #24, 20	; 0x18000
   1134c:	ldr	pc, [ip, #3336]!	; 0xd08

00011350 <sysconf@plt>:
   11350:	add	ip, pc, #0, 12
   11354:	add	ip, ip, #24, 20	; 0x18000
   11358:	ldr	pc, [ip, #3328]!	; 0xd00

0001135c <dup2@plt>:
   1135c:	add	ip, pc, #0, 12
   11360:	add	ip, ip, #24, 20	; 0x18000
   11364:	ldr	pc, [ip, #3320]!	; 0xcf8

00011368 <realloc@plt>:
   11368:	add	ip, pc, #0, 12
   1136c:	add	ip, ip, #24, 20	; 0x18000
   11370:	ldr	pc, [ip, #3312]!	; 0xcf0

00011374 <killpg@plt>:
   11374:	add	ip, pc, #0, 12
   11378:	add	ip, ip, #24, 20	; 0x18000
   1137c:	ldr	pc, [ip, #3304]!	; 0xce8

00011380 <initgroups@plt>:
   11380:	add	ip, pc, #0, 12
   11384:	add	ip, ip, #24, 20	; 0x18000
   11388:	ldr	pc, [ip, #3296]!	; 0xce0

0001138c <chdir@plt>:
   1138c:	add	ip, pc, #0, 12
   11390:	add	ip, ip, #24, 20	; 0x18000
   11394:	ldr	pc, [ip, #3288]!	; 0xcd8

00011398 <strcasecmp@plt>:
   11398:	add	ip, pc, #0, 12
   1139c:	add	ip, ip, #24, 20	; 0x18000
   113a0:	ldr	pc, [ip, #3280]!	; 0xcd0

000113a4 <funlockfile@plt>:
   113a4:	add	ip, pc, #0, 12
   113a8:	add	ip, ip, #24, 20	; 0x18000
   113ac:	ldr	pc, [ip, #3272]!	; 0xcc8

000113b0 <fwrite@plt>:
   113b0:	add	ip, pc, #0, 12
   113b4:	add	ip, ip, #24, 20	; 0x18000
   113b8:	ldr	pc, [ip, #3264]!	; 0xcc0

000113bc <ioctl@plt>:
   113bc:	add	ip, pc, #0, 12
   113c0:	add	ip, ip, #24, 20	; 0x18000
   113c4:	ldr	pc, [ip, #3256]!	; 0xcb8

000113c8 <error@plt>:
   113c8:	add	ip, pc, #0, 12
   113cc:	add	ip, ip, #24, 20	; 0x18000
   113d0:	ldr	pc, [ip, #3248]!	; 0xcb0

000113d4 <getenv@plt>:
   113d4:	add	ip, pc, #0, 12
   113d8:	add	ip, ip, #24, 20	; 0x18000
   113dc:	ldr	pc, [ip, #3240]!	; 0xca8

000113e0 <setgid@plt>:
   113e0:	add	ip, pc, #0, 12
   113e4:	add	ip, ip, #24, 20	; 0x18000
   113e8:	ldr	pc, [ip, #3232]!	; 0xca0

000113ec <malloc@plt>:
   113ec:	add	ip, pc, #0, 12
   113f0:	add	ip, ip, #24, 20	; 0x18000
   113f4:	ldr	pc, [ip, #3224]!	; 0xc98

000113f8 <__libc_start_main@plt>:
   113f8:	add	ip, pc, #0, 12
   113fc:	add	ip, ip, #24, 20	; 0x18000
   11400:	ldr	pc, [ip, #3216]!	; 0xc90

00011404 <strerror@plt>:
   11404:	add	ip, pc, #0, 12
   11408:	add	ip, ip, #24, 20	; 0x18000
   1140c:	ldr	pc, [ip, #3208]!	; 0xc88

00011410 <__ctype_tolower_loc@plt>:
   11410:	add	ip, pc, #0, 12
   11414:	add	ip, ip, #24, 20	; 0x18000
   11418:	ldr	pc, [ip, #3200]!	; 0xc80

0001141c <__gmon_start__@plt>:
   1141c:	add	ip, pc, #0, 12
   11420:	add	ip, ip, #24, 20	; 0x18000
   11424:	ldr	pc, [ip, #3192]!	; 0xc78

00011428 <mempcpy@plt>:
   11428:	add	ip, pc, #0, 12
   1142c:	add	ip, ip, #24, 20	; 0x18000
   11430:	ldr	pc, [ip, #3184]!	; 0xc70

00011434 <__ctype_b_loc@plt>:
   11434:	add	ip, pc, #0, 12
   11438:	add	ip, ip, #24, 20	; 0x18000
   1143c:	ldr	pc, [ip, #3176]!	; 0xc68

00011440 <getpid@plt>:
   11440:	add	ip, pc, #0, 12
   11444:	add	ip, ip, #24, 20	; 0x18000
   11448:	ldr	pc, [ip, #3168]!	; 0xc60

0001144c <exit@plt>:
   1144c:	add	ip, pc, #0, 12
   11450:	add	ip, ip, #24, 20	; 0x18000
   11454:	ldr	pc, [ip, #3160]!	; 0xc58

00011458 <strlen@plt>:
   11458:	add	ip, pc, #0, 12
   1145c:	add	ip, ip, #24, 20	; 0x18000
   11460:	ldr	pc, [ip, #3152]!	; 0xc50

00011464 <strchr@plt>:
   11464:	add	ip, pc, #0, 12
   11468:	add	ip, ip, #24, 20	; 0x18000
   1146c:	ldr	pc, [ip, #3144]!	; 0xc48

00011470 <getpwnam_r@plt>:
   11470:	add	ip, pc, #0, 12
   11474:	add	ip, ip, #24, 20	; 0x18000
   11478:	ldr	pc, [ip, #3136]!	; 0xc40

0001147c <fprintf@plt>:
   1147c:	add	ip, pc, #0, 12
   11480:	add	ip, ip, #24, 20	; 0x18000
   11484:	ldr	pc, [ip, #3128]!	; 0xc38

00011488 <setpwent@plt>:
   11488:	add	ip, pc, #0, 12
   1148c:	add	ip, ip, #24, 20	; 0x18000
   11490:	ldr	pc, [ip, #3120]!	; 0xc30

00011494 <__errno_location@plt>:
   11494:	add	ip, pc, #0, 12
   11498:	add	ip, ip, #24, 20	; 0x18000
   1149c:	ldr	pc, [ip, #3112]!	; 0xc28

000114a0 <strerror_r@plt>:
   114a0:	add	ip, pc, #0, 12
   114a4:	add	ip, ip, #24, 20	; 0x18000
   114a8:	ldr	pc, [ip, #3104]!	; 0xc20

000114ac <memset@plt>:
   114ac:	add	ip, pc, #0, 12
   114b0:	add	ip, ip, #24, 20	; 0x18000
   114b4:	ldr	pc, [ip, #3096]!	; 0xc18

000114b8 <strncpy@plt>:
   114b8:	add	ip, pc, #0, 12
   114bc:	add	ip, ip, #24, 20	; 0x18000
   114c0:	ldr	pc, [ip, #3088]!	; 0xc10

000114c4 <write@plt>:
   114c4:	add	ip, pc, #0, 12
   114c8:	add	ip, ip, #24, 20	; 0x18000
   114cc:	ldr	pc, [ip, #3080]!	; 0xc08

000114d0 <memchr@plt>:
   114d0:	add	ip, pc, #0, 12
   114d4:	add	ip, ip, #24, 20	; 0x18000
   114d8:	ldr	pc, [ip, #3072]!	; 0xc00

000114dc <pipe@plt>:
   114dc:	add	ip, pc, #0, 12
   114e0:	add	ip, ip, #24, 20	; 0x18000
   114e4:	ldr	pc, [ip, #3064]!	; 0xbf8

000114e8 <shutdown@plt>:
   114e8:	add	ip, pc, #0, 12
   114ec:	add	ip, ip, #24, 20	; 0x18000
   114f0:	ldr	pc, [ip, #3056]!	; 0xbf0

000114f4 <__overflow@plt>:
   114f4:	add	ip, pc, #0, 12
   114f8:	add	ip, ip, #24, 20	; 0x18000
   114fc:	ldr	pc, [ip, #3048]!	; 0xbe8

00011500 <fork@plt>:
   11500:	add	ip, pc, #0, 12
   11504:	add	ip, ip, #24, 20	; 0x18000
   11508:	ldr	pc, [ip, #3040]!	; 0xbe0

0001150c <getnameinfo@plt>:
   1150c:	add	ip, pc, #0, 12
   11510:	add	ip, ip, #24, 20	; 0x18000
   11514:	ldr	pc, [ip, #3032]!	; 0xbd8

00011518 <endpwent@plt>:
   11518:	add	ip, pc, #0, 12
   1151c:	add	ip, ip, #24, 20	; 0x18000
   11520:	ldr	pc, [ip, #3024]!	; 0xbd0

00011524 <execl@plt>:
   11524:	add	ip, pc, #0, 12
   11528:	add	ip, ip, #24, 20	; 0x18000
   1152c:	ldr	pc, [ip, #3016]!	; 0xbc8

00011530 <strrchr@plt>:
   11530:	add	ip, pc, #0, 12
   11534:	add	ip, ip, #24, 20	; 0x18000
   11538:	ldr	pc, [ip, #3008]!	; 0xbc0

0001153c <vfprintf@plt>:
   1153c:	add	ip, pc, #0, 12
   11540:	add	ip, ip, #24, 20	; 0x18000
   11544:	ldr	pc, [ip, #3000]!	; 0xbb8

00011548 <crypt@plt>:
   11548:	add	ip, pc, #0, 12
   1154c:	add	ip, ip, #24, 20	; 0x18000
   11550:	ldr	pc, [ip, #2992]!	; 0xbb0

00011554 <fputc@plt>:
   11554:	add	ip, pc, #0, 12
   11558:	add	ip, ip, #24, 20	; 0x18000
   1155c:	ldr	pc, [ip, #2984]!	; 0xba8

00011560 <syslog@plt>:
   11560:	add	ip, pc, #0, 12
   11564:	add	ip, ip, #24, 20	; 0x18000
   11568:	ldr	pc, [ip, #2976]!	; 0xba0

0001156c <setuid@plt>:
   1156c:	add	ip, pc, #0, 12
   11570:	add	ip, ip, #24, 20	; 0x18000
   11574:	ldr	pc, [ip, #2968]!	; 0xb98

00011578 <setpgid@plt>:
   11578:	add	ip, pc, #0, 12
   1157c:	add	ip, ip, #24, 20	; 0x18000
   11580:	ldr	pc, [ip, #2960]!	; 0xb90

00011584 <openlog@plt>:
   11584:	add	ip, pc, #0, 12
   11588:	add	ip, ip, #24, 20	; 0x18000
   1158c:	ldr	pc, [ip, #2952]!	; 0xb88

00011590 <flockfile@plt>:
   11590:	add	ip, pc, #0, 12
   11594:	add	ip, ip, #24, 20	; 0x18000
   11598:	ldr	pc, [ip, #2944]!	; 0xb80

0001159c <vsnprintf@plt>:
   1159c:	add	ip, pc, #0, 12
   115a0:	add	ip, ip, #24, 20	; 0x18000
   115a4:	ldr	pc, [ip, #2936]!	; 0xb78

000115a8 <qsort@plt>:
   115a8:	add	ip, pc, #0, 12
   115ac:	add	ip, ip, #24, 20	; 0x18000
   115b0:	ldr	pc, [ip, #2928]!	; 0xb70

000115b4 <getpeername@plt>:
   115b4:	add	ip, pc, #0, 12
   115b8:	add	ip, ip, #24, 20	; 0x18000
   115bc:	ldr	pc, [ip, #2920]!	; 0xb68

000115c0 <socket@plt>:
   115c0:	add	ip, pc, #0, 12
   115c4:	add	ip, ip, #24, 20	; 0x18000
   115c8:	ldr	pc, [ip, #2912]!	; 0xb60

000115cc <strncat@plt>:
   115cc:	add	ip, pc, #0, 12
   115d0:	add	ip, ip, #24, 20	; 0x18000
   115d4:	ldr	pc, [ip, #2904]!	; 0xb58

000115d8 <strncmp@plt>:
   115d8:	add	ip, pc, #0, 12
   115dc:	add	ip, ip, #24, 20	; 0x18000
   115e0:	ldr	pc, [ip, #2896]!	; 0xb50

000115e4 <abort@plt>:
   115e4:	add	ip, pc, #0, 12
   115e8:	add	ip, ip, #24, 20	; 0x18000
   115ec:	ldr	pc, [ip, #2888]!	; 0xb48

000115f0 <close@plt>:
   115f0:	add	ip, pc, #0, 12
   115f4:	add	ip, ip, #24, 20	; 0x18000
   115f8:	ldr	pc, [ip, #2880]!	; 0xb40

000115fc <connect@plt>:
   115fc:	add	ip, pc, #0, 12
   11600:	add	ip, ip, #24, 20	; 0x18000
   11604:	ldr	pc, [ip, #2872]!	; 0xb38

00011608 <__assert_fail@plt>:
   11608:	add	ip, pc, #0, 12
   1160c:	add	ip, ip, #24, 20	; 0x18000
   11610:	ldr	pc, [ip, #2864]!	; 0xb30

Disassembly of section .text:

00011614 <argp_parse@@Base-0x13b4>:
   11614:	mov	fp, #0
   11618:	mov	lr, #0
   1161c:	pop	{r1}		; (ldr r1, [sp], #4)
   11620:	mov	r2, sp
   11624:	push	{r2}		; (str r2, [sp, #-4]!)
   11628:	push	{r0}		; (str r0, [sp, #-4]!)
   1162c:	ldr	ip, [pc, #16]	; 11644 <__assert_fail@plt+0x3c>
   11630:	push	{ip}		; (str ip, [sp, #-4]!)
   11634:	ldr	r0, [pc, #12]	; 11648 <__assert_fail@plt+0x40>
   11638:	ldr	r3, [pc, #12]	; 1164c <__assert_fail@plt+0x44>
   1163c:	bl	113f8 <__libc_start_main@plt>
   11640:	bl	115e4 <abort@plt>
   11644:	muleq	r1, ip, ip
   11648:	andeq	r2, r1, r0, ror #5
   1164c:	andeq	r8, r1, ip, lsr ip
   11650:	ldr	r3, [pc, #20]	; 1166c <__assert_fail@plt+0x64>
   11654:	ldr	r2, [pc, #20]	; 11670 <__assert_fail@plt+0x68>
   11658:	add	r3, pc, r3
   1165c:	ldr	r2, [r3, r2]
   11660:	cmp	r2, #0
   11664:	bxeq	lr
   11668:	b	1141c <__gmon_start__@plt>
   1166c:	andeq	r8, r1, r0, lsr #19
   11670:	andeq	r0, r0, r4, asr #2
   11674:	ldr	r3, [pc, #28]	; 11698 <__assert_fail@plt+0x90>
   11678:	ldr	r0, [pc, #28]	; 1169c <__assert_fail@plt+0x94>
   1167c:	sub	r3, r3, r0
   11680:	cmp	r3, #6
   11684:	bxls	lr
   11688:	ldr	r3, [pc, #16]	; 116a0 <__assert_fail@plt+0x98>
   1168c:	cmp	r3, #0
   11690:	bxeq	lr
   11694:	bx	r3
   11698:	strdeq	sl, [r2], -pc	; <UNPREDICTABLE>
   1169c:	strdeq	sl, [r2], -ip
   116a0:	andeq	r0, r0, r0
   116a4:	ldr	r1, [pc, #36]	; 116d0 <__assert_fail@plt+0xc8>
   116a8:	ldr	r0, [pc, #36]	; 116d4 <__assert_fail@plt+0xcc>
   116ac:	sub	r1, r1, r0
   116b0:	asr	r1, r1, #2
   116b4:	add	r1, r1, r1, lsr #31
   116b8:	asrs	r1, r1, #1
   116bc:	bxeq	lr
   116c0:	ldr	r3, [pc, #16]	; 116d8 <__assert_fail@plt+0xd0>
   116c4:	cmp	r3, #0
   116c8:	bxeq	lr
   116cc:	bx	r3
   116d0:	strdeq	sl, [r2], -ip
   116d4:	strdeq	sl, [r2], -ip
   116d8:	andeq	r0, r0, r0
   116dc:	push	{r4, lr}
   116e0:	ldr	r4, [pc, #24]	; 11700 <__assert_fail@plt+0xf8>
   116e4:	ldrb	r3, [r4]
   116e8:	cmp	r3, #0
   116ec:	popne	{r4, pc}
   116f0:	bl	11674 <__assert_fail@plt+0x6c>
   116f4:	mov	r3, #1
   116f8:	strb	r3, [r4]
   116fc:	pop	{r4, pc}
   11700:	andeq	sl, r2, r8, lsl r5
   11704:	ldr	r0, [pc, #40]	; 11734 <__assert_fail@plt+0x12c>
   11708:	ldr	r3, [r0]
   1170c:	cmp	r3, #0
   11710:	bne	11718 <__assert_fail@plt+0x110>
   11714:	b	116a4 <__assert_fail@plt+0x9c>
   11718:	ldr	r3, [pc, #24]	; 11738 <__assert_fail@plt+0x130>
   1171c:	cmp	r3, #0
   11720:	beq	11714 <__assert_fail@plt+0x10c>
   11724:	push	{r4, lr}
   11728:	blx	r3
   1172c:	pop	{r4, lr}
   11730:	b	116a4 <__assert_fail@plt+0x9c>
   11734:	andeq	r9, r2, r4, lsl #30
   11738:	andeq	r0, r0, r0
   1173c:	cmp	r0, #108	; 0x6c
   11740:	ldreq	r2, [pc, #20]	; 1175c <__assert_fail@plt+0x154>
   11744:	ldreq	r3, [r2]
   11748:	addeq	r3, r3, #1
   1174c:	streq	r3, [r2]
   11750:	moveq	r0, #0
   11754:	movne	r0, #7
   11758:	bx	lr
   1175c:	andeq	sl, r2, ip, lsl r5
   11760:	push	{r1, r2, r3}
   11764:	push	{r4, lr}
   11768:	sub	sp, sp, #8192	; 0x2000
   1176c:	sub	sp, sp, #12
   11770:	mov	r4, r0
   11774:	add	r3, sp, #8192	; 0x2000
   11778:	add	r3, r3, #24
   1177c:	add	r2, sp, #8192	; 0x2000
   11780:	add	r2, r2, #4
   11784:	str	r3, [r2]
   11788:	mov	r2, #1
   1178c:	strb	r2, [sp, #4]
   11790:	add	r2, sp, #8192	; 0x2000
   11794:	add	r2, r2, #20
   11798:	ldr	r2, [r2]
   1179c:	ldr	r1, [pc, #60]	; 117e0 <__assert_fail@plt+0x1d8>
   117a0:	add	r0, sp, #5
   117a4:	bl	1159c <vsnprintf@plt>
   117a8:	add	r2, r0, #1
   117ac:	ldr	r3, [pc, #44]	; 117e0 <__assert_fail@plt+0x1d8>
   117b0:	cmp	r2, #8192	; 0x2000
   117b4:	movgt	r0, r3
   117b8:	add	r3, sp, #8
   117bc:	add	r3, r3, r0
   117c0:	mov	r2, #10
   117c4:	strb	r2, [r3, #-4]
   117c8:	add	r2, r0, #1
   117cc:	add	r1, sp, #4
   117d0:	mov	r0, #2
   117d4:	bl	114c4 <write@plt>
   117d8:	mov	r0, r4
   117dc:	bl	1144c <exit@plt>
   117e0:	strdeq	r1, [r0], -pc	; <UNPREDICTABLE>
   117e4:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   117e8:	mov	r9, r0
   117ec:	mov	r0, #100	; 0x64
   117f0:	bl	141f4 <argp_parse@@Base+0x182c>
   117f4:	subs	r6, r0, #0
   117f8:	beq	11814 <__assert_fail@plt+0x20c>
   117fc:	mov	r4, r6
   11800:	mov	r5, #100	; 0x64
   11804:	mov	r8, #1
   11808:	mov	r7, #0
   1180c:	ldr	sl, [pc, #176]	; 118c4 <__assert_fail@plt+0x2bc>
   11810:	b	1186c <__assert_fail@plt+0x264>
   11814:	mov	r2, r9
   11818:	ldr	r1, [pc, #168]	; 118c8 <__assert_fail@plt+0x2c0>
   1181c:	mov	r0, #1
   11820:	bl	11760 <__assert_fail@plt+0x158>
   11824:	beq	11840 <__assert_fail@plt+0x238>
   11828:	mov	r3, r9
   1182c:	mov	r2, sl
   11830:	mov	r1, r7
   11834:	mov	r0, r8
   11838:	bl	113c8 <error@plt>
   1183c:	b	11884 <__assert_fail@plt+0x27c>
   11840:	mov	r2, r9
   11844:	ldr	r1, [pc, #128]	; 118cc <__assert_fail@plt+0x2c4>
   11848:	mov	r0, #1
   1184c:	bl	11760 <__assert_fail@plt+0x158>
   11850:	mov	r2, r9
   11854:	ldr	r1, [pc, #108]	; 118c8 <__assert_fail@plt+0x2c0>
   11858:	mov	r0, #1
   1185c:	bl	11760 <__assert_fail@plt+0x158>
   11860:	ldrb	r3, [r4, #-1]
   11864:	cmp	r3, #0
   11868:	beq	118bc <__assert_fail@plt+0x2b4>
   1186c:	mov	r2, r8
   11870:	mov	r1, r4
   11874:	mov	r0, r7
   11878:	bl	112c0 <read@plt>
   1187c:	subs	fp, r0, #0
   11880:	ble	11824 <__assert_fail@plt+0x21c>
   11884:	add	r4, r4, fp
   11888:	add	r3, r6, r5
   1188c:	sub	r3, r3, r4
   11890:	cmp	r3, r5, lsr #3
   11894:	bge	11860 <__assert_fail@plt+0x258>
   11898:	sub	r4, r4, r6
   1189c:	lsl	r5, r5, #1
   118a0:	mov	r1, r5
   118a4:	mov	r0, r6
   118a8:	bl	14224 <argp_parse@@Base+0x185c>
   118ac:	subs	r6, r0, #0
   118b0:	beq	11850 <__assert_fail@plt+0x248>
   118b4:	add	r4, r6, r4
   118b8:	b	11860 <__assert_fail@plt+0x258>
   118bc:	mov	r0, r6
   118c0:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   118c4:	strdeq	r8, [r1], -r0
   118c8:	andeq	r8, r1, ip, asr #25
   118cc:	andeq	r8, r1, r4, ror #25
   118d0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   118d4:	sub	sp, sp, #8576	; 0x2180
   118d8:	sub	sp, sp, #4
   118dc:	mov	r5, r0
   118e0:	mov	r7, r1
   118e4:	mov	r8, r2
   118e8:	mov	r3, #1
   118ec:	str	r3, [sp, #32]
   118f0:	mov	r0, #70	; 0x46
   118f4:	bl	11350 <sysconf@plt>
   118f8:	cmp	r0, #0
   118fc:	movle	r0, #1024	; 0x400
   11900:	mov	sl, r0
   11904:	bl	13bd4 <argp_parse@@Base+0x120c>
   11908:	mov	r9, r0
   1190c:	mov	r1, #0
   11910:	mov	r0, #2
   11914:	bl	11314 <signal@plt>
   11918:	mov	r1, #0
   1191c:	mov	r0, #3
   11920:	bl	11314 <signal@plt>
   11924:	mov	r1, #0
   11928:	mov	r0, #15
   1192c:	bl	11314 <signal@plt>
   11930:	cmp	r5, #0
   11934:	bne	119e0 <__assert_fail@plt+0x3d8>
   11938:	mov	r3, #1
   1193c:	str	r3, [sp, #8]
   11940:	mov	r3, #0
   11944:	str	r3, [sp, #4]
   11948:	str	r3, [sp]
   1194c:	mov	r3, #46	; 0x2e
   11950:	add	r2, sp, #8448	; 0x2100
   11954:	add	r2, r2, #48	; 0x30
   11958:	mov	r1, r8
   1195c:	mov	r0, r7
   11960:	bl	1150c <getnameinfo@plt>
   11964:	cmp	r0, #0
   11968:	bne	11a08 <__assert_fail@plt+0x400>
   1196c:	ldr	r3, [pc, #2276]	; 12258 <__assert_fail@plt+0xc50>
   11970:	ldr	r3, [r3]
   11974:	cmp	r3, #1
   11978:	ble	11990 <__assert_fail@plt+0x388>
   1197c:	add	r2, sp, #8448	; 0x2100
   11980:	add	r2, r2, #48	; 0x30
   11984:	ldr	r1, [pc, #2256]	; 1225c <__assert_fail@plt+0xc54>
   11988:	mov	r0, #6
   1198c:	bl	11560 <syslog@plt>
   11990:	mov	r0, #60	; 0x3c
   11994:	bl	11344 <alarm@plt>
   11998:	mov	r4, #0
   1199c:	add	r3, sp, #31
   119a0:	str	r3, [sp, #20]
   119a4:	mov	r6, #1
   119a8:	mov	r2, r6
   119ac:	ldr	r1, [sp, #20]
   119b0:	mov	r0, r5
   119b4:	bl	112c0 <read@plt>
   119b8:	cmp	r0, #1
   119bc:	bne	11a2c <__assert_fail@plt+0x424>
   119c0:	ldrb	r3, [sp, #31]
   119c4:	cmp	r3, #0
   119c8:	beq	11a54 <__assert_fail@plt+0x44c>
   119cc:	add	r4, r4, r4, lsl #2
   119d0:	sub	r3, r3, #48	; 0x30
   119d4:	add	r4, r3, r4, lsl #1
   119d8:	uxth	r4, r4
   119dc:	b	119a8 <__assert_fail@plt+0x3a0>
   119e0:	mov	r1, #0
   119e4:	mov	r0, r5
   119e8:	bl	1135c <dup2@plt>
   119ec:	mov	r1, #1
   119f0:	mov	r0, r5
   119f4:	bl	1135c <dup2@plt>
   119f8:	mov	r1, #2
   119fc:	mov	r0, r5
   11a00:	bl	1135c <dup2@plt>
   11a04:	b	11938 <__assert_fail@plt+0x330>
   11a08:	ldr	r1, [pc, #2128]	; 12260 <__assert_fail@plt+0xc58>
   11a0c:	mov	r0, #4
   11a10:	bl	11560 <syslog@plt>
   11a14:	mov	r2, #46	; 0x2e
   11a18:	ldr	r1, [pc, #2116]	; 12264 <__assert_fail@plt+0xc5c>
   11a1c:	add	r0, sp, #8448	; 0x2100
   11a20:	add	r0, r0, #48	; 0x30
   11a24:	bl	114b8 <strncpy@plt>
   11a28:	b	1196c <__assert_fail@plt+0x364>
   11a2c:	ldr	r3, [pc, #2084]	; 12258 <__assert_fail@plt+0xc50>
   11a30:	ldr	r3, [r3]
   11a34:	cmp	r3, #0
   11a38:	bne	11a44 <__assert_fail@plt+0x43c>
   11a3c:	mov	r0, #1
   11a40:	bl	1144c <exit@plt>
   11a44:	ldr	r1, [pc, #2076]	; 12268 <__assert_fail@plt+0xc60>
   11a48:	mov	r0, #3
   11a4c:	bl	11560 <syslog@plt>
   11a50:	b	11a3c <__assert_fail@plt+0x434>
   11a54:	mov	r0, #0
   11a58:	bl	11344 <alarm@plt>
   11a5c:	cmp	r4, #0
   11a60:	beq	11b14 <__assert_fail@plt+0x50c>
   11a64:	mov	r2, #0
   11a68:	mov	r1, #1
   11a6c:	ldrh	r0, [r7]
   11a70:	bl	115c0 <socket@plt>
   11a74:	subs	fp, r0, #0
   11a78:	blt	11ac8 <__assert_fail@plt+0x4c0>
   11a7c:	mov	r3, #4
   11a80:	str	r3, [sp]
   11a84:	add	r3, sp, #32
   11a88:	mov	r2, #2
   11a8c:	mov	r1, #1
   11a90:	mov	r0, fp
   11a94:	bl	112a8 <setsockopt@plt>
   11a98:	mov	r0, #60	; 0x3c
   11a9c:	bl	11344 <alarm@plt>
   11aa0:	ldrh	r2, [r7]
   11aa4:	cmp	r2, #2
   11aa8:	beq	11aec <__assert_fail@plt+0x4e4>
   11aac:	cmp	r2, #10
   11ab0:	beq	11da0 <__assert_fail@plt+0x798>
   11ab4:	ldr	r1, [pc, #1968]	; 1226c <__assert_fail@plt+0xc64>
   11ab8:	mov	r0, #3
   11abc:	bl	11560 <syslog@plt>
   11ac0:	mov	r0, #1
   11ac4:	bl	1144c <exit@plt>
   11ac8:	ldr	r3, [pc, #1928]	; 12258 <__assert_fail@plt+0xc50>
   11acc:	ldr	r3, [r3]
   11ad0:	cmp	r3, #0
   11ad4:	beq	11ae4 <__assert_fail@plt+0x4dc>
   11ad8:	ldr	r1, [pc, #1936]	; 12270 <__assert_fail@plt+0xc68>
   11adc:	mov	r0, #3
   11ae0:	bl	11560 <syslog@plt>
   11ae4:	mov	r0, #1
   11ae8:	bl	1144c <exit@plt>
   11aec:	rev16	r3, r4
   11af0:	strh	r3, [r7, #2]
   11af4:	mov	r2, r8
   11af8:	mov	r1, r7
   11afc:	mov	r0, fp
   11b00:	bl	115fc <connect@plt>
   11b04:	cmp	r0, #0
   11b08:	blt	11dac <__assert_fail@plt+0x7a4>
   11b0c:	mov	r0, #0
   11b10:	bl	11344 <alarm@plt>
   11b14:	ldr	r0, [pc, #1880]	; 12274 <__assert_fail@plt+0xc6c>
   11b18:	bl	117e4 <__assert_fail@plt+0x1dc>
   11b1c:	mov	r6, r0
   11b20:	ldr	r0, [pc, #1872]	; 12278 <__assert_fail@plt+0xc70>
   11b24:	bl	117e4 <__assert_fail@plt+0x1dc>
   11b28:	mov	r8, r0
   11b2c:	ldr	r0, [pc, #1864]	; 1227c <__assert_fail@plt+0xc74>
   11b30:	bl	117e4 <__assert_fail@plt+0x1dc>
   11b34:	mov	r7, r0
   11b38:	bl	11488 <setpwent@plt>
   11b3c:	add	r3, sp, #8512	; 0x2140
   11b40:	add	r3, r3, #60	; 0x3c
   11b44:	str	r3, [sp]
   11b48:	mov	r3, sl
   11b4c:	mov	r2, r9
   11b50:	add	r1, sp, #8512	; 0x2140
   11b54:	add	r1, r1, #32
   11b58:	mov	r0, r6
   11b5c:	bl	11470 <getpwnam_r@plt>
   11b60:	cmp	r0, #0
   11b64:	bne	11dd0 <__assert_fail@plt+0x7c8>
   11b68:	add	r3, sp, #8512	; 0x2140
   11b6c:	add	r3, r3, #60	; 0x3c
   11b70:	ldr	r3, [r3]
   11b74:	cmp	r3, #0
   11b78:	beq	11dd0 <__assert_fail@plt+0x7c8>
   11b7c:	bl	11518 <endpwent@plt>
   11b80:	add	r3, sp, #8512	; 0x2140
   11b84:	add	r3, r3, #60	; 0x3c
   11b88:	ldr	r3, [r3]
   11b8c:	ldr	r9, [r3, #4]
   11b90:	ldr	r0, [r3]
   11b94:	bl	112cc <getspnam@plt>
   11b98:	cmp	r0, #0
   11b9c:	ldrne	r9, [r0, #4]
   11ba0:	ldrb	r3, [r9]
   11ba4:	cmp	r3, #0
   11ba8:	beq	11bc8 <__assert_fail@plt+0x5c0>
   11bac:	mov	r1, r9
   11bb0:	mov	r0, r8
   11bb4:	bl	11548 <crypt@plt>
   11bb8:	mov	r1, r9
   11bbc:	bl	11290 <strcmp@plt>
   11bc0:	cmp	r0, #0
   11bc4:	bne	11dfc <__assert_fail@plt+0x7f4>
   11bc8:	add	r3, sp, #8512	; 0x2140
   11bcc:	add	r3, r3, #60	; 0x3c
   11bd0:	ldr	r3, [r3]
   11bd4:	ldr	r0, [r3, #12]
   11bd8:	bl	113e0 <setgid@plt>
   11bdc:	cmp	r0, #0
   11be0:	blt	11e28 <__assert_fail@plt+0x820>
   11be4:	add	r3, sp, #8512	; 0x2140
   11be8:	add	r3, r3, #60	; 0x3c
   11bec:	ldr	r3, [r3]
   11bf0:	ldr	r1, [r3, #12]
   11bf4:	ldr	r0, [r3]
   11bf8:	bl	11380 <initgroups@plt>
   11bfc:	cmp	r0, #0
   11c00:	blt	11e50 <__assert_fail@plt+0x848>
   11c04:	add	r3, sp, #8512	; 0x2140
   11c08:	add	r3, r3, #60	; 0x3c
   11c0c:	ldr	r3, [r3]
   11c10:	ldr	r0, [r3, #8]
   11c14:	bl	1156c <setuid@plt>
   11c18:	cmp	r0, #0
   11c1c:	blt	11e7c <__assert_fail@plt+0x874>
   11c20:	cmp	r4, #0
   11c24:	bne	11ea4 <__assert_fail@plt+0x89c>
   11c28:	cmp	r5, #2
   11c2c:	bgt	121e0 <__assert_fail@plt+0xbd8>
   11c30:	add	r3, sp, #8512	; 0x2140
   11c34:	add	r3, r3, #60	; 0x3c
   11c38:	ldr	r3, [r3]
   11c3c:	ldr	r0, [r3, #20]
   11c40:	bl	1138c <chdir@plt>
   11c44:	cmp	r0, #0
   11c48:	blt	121ec <__assert_fail@plt+0xbe4>
   11c4c:	ldr	r4, [pc, #1580]	; 12280 <__assert_fail@plt+0xc78>
   11c50:	mov	r0, r4
   11c54:	bl	11458 <strlen@plt>
   11c58:	mov	lr, r0
   11c5c:	add	ip, r4, r0
   11c60:	ldr	r3, [pc, #1564]	; 12284 <__assert_fail@plt+0xc7c>
   11c64:	ldm	r3!, {r0, r1, r2}
   11c68:	str	r0, [r4, lr]
   11c6c:	str	r1, [ip, #4]
   11c70:	str	r2, [ip, #8]
   11c74:	ldrh	r3, [r3]
   11c78:	strh	r3, [ip, #12]
   11c7c:	add	r3, sp, #8512	; 0x2140
   11c80:	add	r3, r3, #60	; 0x3c
   11c84:	ldr	r5, [r3]
   11c88:	mov	r2, #255	; 0xff
   11c8c:	ldr	r1, [r5, #20]
   11c90:	add	r0, r4, #20
   11c94:	bl	115cc <strncat@plt>
   11c98:	mov	r2, #255	; 0xff
   11c9c:	ldr	r1, [r5, #24]
   11ca0:	add	r0, r4, #284	; 0x11c
   11ca4:	bl	115cc <strncat@plt>
   11ca8:	mov	r2, #31
   11cac:	ldr	r1, [r5]
   11cb0:	add	r0, r4, #548	; 0x224
   11cb4:	bl	115cc <strncat@plt>
   11cb8:	mov	r2, #31
   11cbc:	ldr	r1, [r5]
   11cc0:	add	r0, r4, #588	; 0x24c
   11cc4:	bl	115cc <strncat@plt>
   11cc8:	mov	r2, #127	; 0x7f
   11ccc:	add	r1, sp, #8448	; 0x2100
   11cd0:	add	r1, r1, #48	; 0x30
   11cd4:	add	r0, r4, #632	; 0x278
   11cd8:	bl	115cc <strncat@plt>
   11cdc:	add	r4, r4, #768	; 0x300
   11ce0:	ldr	r3, [pc, #1440]	; 12288 <__assert_fail@plt+0xc80>
   11ce4:	str	r4, [r3]
   11ce8:	ldr	r3, [r5, #24]
   11cec:	ldrb	r3, [r3]
   11cf0:	cmp	r3, #0
   11cf4:	ldreq	r3, [pc, #1424]	; 1228c <__assert_fail@plt+0xc84>
   11cf8:	streq	r3, [r5, #24]
   11cfc:	ldr	r4, [r5, #24]
   11d00:	mov	r1, #47	; 0x2f
   11d04:	mov	r0, r4
   11d08:	bl	11530 <strrchr@plt>
   11d0c:	cmp	r0, #0
   11d10:	addne	r4, r0, #1
   11d14:	mov	r2, #1
   11d18:	ldr	r1, [pc, #1392]	; 12290 <__assert_fail@plt+0xc88>
   11d1c:	mov	r0, #2
   11d20:	bl	114c4 <write@plt>
   11d24:	ldr	r3, [pc, #1324]	; 12258 <__assert_fail@plt+0xc50>
   11d28:	ldr	r3, [r3]
   11d2c:	cmp	r3, #0
   11d30:	bne	12228 <__assert_fail@plt+0xc20>
   11d34:	add	r3, sp, #8512	; 0x2140
   11d38:	add	r3, r3, #60	; 0x3c
   11d3c:	ldr	r3, [r3]
   11d40:	ldr	r0, [r3, #24]
   11d44:	mov	r3, #0
   11d48:	str	r3, [sp]
   11d4c:	mov	r3, r7
   11d50:	ldr	r2, [pc, #1340]	; 12294 <__assert_fail@plt+0xc8c>
   11d54:	mov	r1, r4
   11d58:	bl	11524 <execl@plt>
   11d5c:	ldr	r3, [pc, #1268]	; 12258 <__assert_fail@plt+0xc50>
   11d60:	ldr	r3, [r3]
   11d64:	cmp	r3, #0
   11d68:	bne	12244 <__assert_fail@plt+0xc3c>
   11d6c:	bl	11494 <__errno_location@plt>
   11d70:	add	r3, sp, #8512	; 0x2140
   11d74:	add	r3, r3, #60	; 0x3c
   11d78:	ldr	r3, [r3]
   11d7c:	ldr	r3, [r3, #24]
   11d80:	ldr	r2, [pc, #1296]	; 12298 <__assert_fail@plt+0xc90>
   11d84:	ldr	r1, [r0]
   11d88:	mov	r0, #1
   11d8c:	bl	113c8 <error@plt>
   11d90:	mvn	r0, #0
   11d94:	add	sp, sp, #8576	; 0x2180
   11d98:	add	sp, sp, #4
   11d9c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11da0:	rev16	r3, r4
   11da4:	strh	r3, [r7, #2]
   11da8:	b	11af4 <__assert_fail@plt+0x4ec>
   11dac:	ldr	r3, [pc, #1188]	; 12258 <__assert_fail@plt+0xc50>
   11db0:	ldr	r3, [r3]
   11db4:	cmp	r3, #0
   11db8:	beq	11dc8 <__assert_fail@plt+0x7c0>
   11dbc:	ldr	r1, [pc, #1240]	; 1229c <__assert_fail@plt+0xc94>
   11dc0:	mov	r0, #5
   11dc4:	bl	11560 <syslog@plt>
   11dc8:	mov	r0, #1
   11dcc:	bl	1144c <exit@plt>
   11dd0:	ldr	r3, [pc, #1152]	; 12258 <__assert_fail@plt+0xc50>
   11dd4:	ldr	r3, [r3]
   11dd8:	cmp	r3, #0
   11ddc:	beq	11df0 <__assert_fail@plt+0x7e8>
   11de0:	mov	r2, r6
   11de4:	ldr	r1, [pc, #1204]	; 122a0 <__assert_fail@plt+0xc98>
   11de8:	mov	r0, #36	; 0x24
   11dec:	bl	11560 <syslog@plt>
   11df0:	ldr	r1, [pc, #1196]	; 122a4 <__assert_fail@plt+0xc9c>
   11df4:	mov	r0, #1
   11df8:	bl	11760 <__assert_fail@plt+0x158>
   11dfc:	ldr	r3, [pc, #1108]	; 12258 <__assert_fail@plt+0xc50>
   11e00:	ldr	r3, [r3]
   11e04:	cmp	r3, #0
   11e08:	beq	11e1c <__assert_fail@plt+0x814>
   11e0c:	mov	r2, r6
   11e10:	ldr	r1, [pc, #1168]	; 122a8 <__assert_fail@plt+0xca0>
   11e14:	mov	r0, #36	; 0x24
   11e18:	bl	11560 <syslog@plt>
   11e1c:	ldr	r1, [pc, #1160]	; 122ac <__assert_fail@plt+0xca4>
   11e20:	mov	r0, #1
   11e24:	bl	11760 <__assert_fail@plt+0x158>
   11e28:	add	r3, sp, #8512	; 0x2140
   11e2c:	add	r3, r3, #60	; 0x3c
   11e30:	ldr	r3, [r3]
   11e34:	ldr	r2, [r3, #12]
   11e38:	ldr	r1, [pc, #1136]	; 122b0 <__assert_fail@plt+0xca8>
   11e3c:	mov	r0, #39	; 0x27
   11e40:	bl	11560 <syslog@plt>
   11e44:	ldr	r1, [pc, #1128]	; 122b4 <__assert_fail@plt+0xcac>
   11e48:	mov	r0, #1
   11e4c:	bl	11760 <__assert_fail@plt+0x158>
   11e50:	add	r3, sp, #8512	; 0x2140
   11e54:	add	r3, r3, #60	; 0x3c
   11e58:	ldr	r2, [r3]
   11e5c:	ldr	r3, [r2, #12]
   11e60:	ldr	r2, [r2]
   11e64:	ldr	r1, [pc, #1100]	; 122b8 <__assert_fail@plt+0xcb0>
   11e68:	mov	r0, #39	; 0x27
   11e6c:	bl	11560 <syslog@plt>
   11e70:	ldr	r1, [pc, #1084]	; 122b4 <__assert_fail@plt+0xcac>
   11e74:	mov	r0, #1
   11e78:	bl	11760 <__assert_fail@plt+0x158>
   11e7c:	add	r3, sp, #8512	; 0x2140
   11e80:	add	r3, r3, #60	; 0x3c
   11e84:	ldr	r3, [r3]
   11e88:	ldr	r2, [r3, #8]
   11e8c:	ldr	r1, [pc, #1064]	; 122bc <__assert_fail@plt+0xcb4>
   11e90:	mov	r0, #39	; 0x27
   11e94:	bl	11560 <syslog@plt>
   11e98:	ldr	r1, [pc, #1056]	; 122c0 <__assert_fail@plt+0xcb8>
   11e9c:	mov	r0, #1
   11ea0:	bl	11760 <__assert_fail@plt+0x158>
   11ea4:	add	r0, sp, #8448	; 0x2100
   11ea8:	add	r0, r0, #40	; 0x28
   11eac:	bl	114dc <pipe@plt>
   11eb0:	bl	11500 <fork@plt>
   11eb4:	mov	r4, r0
   11eb8:	cmn	r0, #1
   11ebc:	beq	11f18 <__assert_fail@plt+0x910>
   11ec0:	cmp	r0, #0
   11ec4:	bne	11f44 <__assert_fail@plt+0x93c>
   11ec8:	bl	11440 <getpid@plt>
   11ecc:	mov	r1, r0
   11ed0:	mov	r0, #0
   11ed4:	bl	11578 <setpgid@plt>
   11ed8:	mov	r0, fp
   11edc:	bl	115f0 <close@plt>
   11ee0:	add	r3, sp, #8448	; 0x2100
   11ee4:	add	r3, r3, #40	; 0x28
   11ee8:	ldr	r0, [r3]
   11eec:	bl	115f0 <close@plt>
   11ef0:	mov	r1, #2
   11ef4:	add	r3, sp, #8448	; 0x2100
   11ef8:	add	r3, r3, #44	; 0x2c
   11efc:	ldr	r0, [r3]
   11f00:	bl	1135c <dup2@plt>
   11f04:	add	r3, sp, #8448	; 0x2100
   11f08:	add	r3, r3, #44	; 0x2c
   11f0c:	ldr	r0, [r3]
   11f10:	bl	115f0 <close@plt>
   11f14:	b	11c28 <__assert_fail@plt+0x620>
   11f18:	ldr	r3, [pc, #824]	; 12258 <__assert_fail@plt+0xc50>
   11f1c:	ldr	r3, [r3]
   11f20:	cmp	r3, #0
   11f24:	beq	11f38 <__assert_fail@plt+0x930>
   11f28:	mov	r2, r6
   11f2c:	ldr	r1, [pc, #912]	; 122c4 <__assert_fail@plt+0xcbc>
   11f30:	mov	r0, #3
   11f34:	bl	11560 <syslog@plt>
   11f38:	ldr	r1, [pc, #904]	; 122c8 <__assert_fail@plt+0xcc0>
   11f3c:	mov	r0, #1
   11f40:	bl	11760 <__assert_fail@plt+0x158>
   11f44:	mov	r0, #0
   11f48:	bl	115f0 <close@plt>
   11f4c:	mov	r0, #1
   11f50:	bl	115f0 <close@plt>
   11f54:	mov	r0, #2
   11f58:	bl	115f0 <close@plt>
   11f5c:	mov	r0, r5
   11f60:	bl	115f0 <close@plt>
   11f64:	add	r3, sp, #8448	; 0x2100
   11f68:	add	r3, r3, #44	; 0x2c
   11f6c:	ldr	r0, [r3]
   11f70:	bl	115f0 <close@plt>
   11f74:	add	r3, sp, #8320	; 0x2080
   11f78:	add	r3, r3, #36	; 0x24
   11f7c:	add	r1, sp, #8448	; 0x2100
   11f80:	add	r1, r1, #36	; 0x24
   11f84:	mov	r2, #0
   11f88:	str	r2, [r3, #4]!
   11f8c:	cmp	r1, r3
   11f90:	bne	11f88 <__assert_fail@plt+0x980>
   11f94:	add	r5, fp, #31
   11f98:	cmp	fp, #0
   11f9c:	movge	r5, fp
   11fa0:	asr	r5, r5, #5
   11fa4:	asr	r3, fp, #31
   11fa8:	lsr	r3, r3, #27
   11fac:	add	r6, fp, r3
   11fb0:	and	r6, r6, #31
   11fb4:	sub	r6, r6, r3
   11fb8:	mov	r1, #1
   11fbc:	lsl	r6, r1, r6
   11fc0:	add	r3, sp, #8576	; 0x2180
   11fc4:	add	r2, r3, r5, lsl #2
   11fc8:	ldr	r3, [r2, #-216]	; 0xffffff28
   11fcc:	orr	r3, r3, r6
   11fd0:	str	r3, [r2, #-216]	; 0xffffff28
   11fd4:	add	r3, sp, #8448	; 0x2100
   11fd8:	add	r3, r3, #40	; 0x28
   11fdc:	ldr	r3, [r3]
   11fe0:	add	r2, r3, #31
   11fe4:	cmp	r3, #0
   11fe8:	movge	r2, r3
   11fec:	asr	r2, r2, #5
   11ff0:	add	r0, sp, #8576	; 0x2180
   11ff4:	add	r2, r0, r2, lsl #2
   11ff8:	asr	r0, r3, #31
   11ffc:	lsr	r0, r0, #27
   12000:	add	r3, r3, r0
   12004:	and	r3, r3, #31
   12008:	sub	r3, r3, r0
   1200c:	ldr	r0, [r2, #-216]	; 0xffffff28
   12010:	orr	r3, r0, r1, lsl r3
   12014:	str	r3, [r2, #-216]	; 0xffffff28
   12018:	add	r2, sp, #32
   1201c:	ldr	r1, [pc, #680]	; 122cc <__assert_fail@plt+0xcc4>
   12020:	add	r3, sp, #8448	; 0x2100
   12024:	add	r3, r3, #44	; 0x2c
   12028:	ldr	r0, [r3]
   1202c:	bl	136cc <argp_parse@@Base+0xd04>
   12030:	add	r3, sp, #8576	; 0x2180
   12034:	add	r5, r3, r5, lsl #2
   12038:	add	r8, sp, #39	; 0x27
   1203c:	mov	r7, #1
   12040:	mov	r2, #128	; 0x80
   12044:	add	r1, sp, #8320	; 0x2080
   12048:	add	r1, r1, #40	; 0x28
   1204c:	add	r0, sp, #8192	; 0x2000
   12050:	add	r0, r0, #40	; 0x28
   12054:	bl	11308 <memcpy@plt>
   12058:	add	r3, sp, #8448	; 0x2100
   1205c:	add	r3, r3, #40	; 0x28
   12060:	ldr	r3, [r3]
   12064:	cmp	fp, r3
   12068:	movge	r0, fp
   1206c:	movlt	r0, r3
   12070:	mov	r2, #0
   12074:	str	r2, [sp]
   12078:	mov	r3, r2
   1207c:	add	r1, sp, #8192	; 0x2000
   12080:	add	r1, r1, #40	; 0x28
   12084:	add	r0, r0, #1
   12088:	bl	1132c <select@plt>
   1208c:	ldr	r3, [r5, #-344]	; 0xfffffea8
   12090:	tst	r6, r3
   12094:	bne	12134 <__assert_fail@plt+0xb2c>
   12098:	add	r3, sp, #8448	; 0x2100
   1209c:	add	r3, r3, #40	; 0x28
   120a0:	ldr	r0, [r3]
   120a4:	add	r3, r0, #31
   120a8:	cmp	r0, #0
   120ac:	movge	r3, r0
   120b0:	asr	r3, r3, #5
   120b4:	add	r2, sp, #8576	; 0x2180
   120b8:	add	r3, r2, r3, lsl #2
   120bc:	asr	r2, r0, #31
   120c0:	lsr	r1, r2, #27
   120c4:	add	r2, r0, r1
   120c8:	and	r2, r2, #31
   120cc:	sub	r2, r2, r1
   120d0:	ldr	r3, [r3, #-344]	; 0xfffffea8
   120d4:	ands	r3, r3, r7, lsl r2
   120d8:	bne	12168 <__assert_fail@plt+0xb60>
   120dc:	add	r3, sp, #8448	; 0x2100
   120e0:	add	r3, r3, #40	; 0x28
   120e4:	ldr	r3, [r3]
   120e8:	add	r2, r3, #31
   120ec:	cmp	r3, #0
   120f0:	movge	r2, r3
   120f4:	asr	r2, r2, #5
   120f8:	add	r1, sp, #8576	; 0x2180
   120fc:	add	r2, r1, r2, lsl #2
   12100:	asr	r1, r3, #31
   12104:	lsr	r1, r1, #27
   12108:	add	r3, r3, r1
   1210c:	and	r3, r3, #31
   12110:	sub	r3, r3, r1
   12114:	ldr	r2, [r2, #-216]	; 0xffffff28
   12118:	ands	r3, r2, r7, lsl r3
   1211c:	bne	12040 <__assert_fail@plt+0xa38>
   12120:	ldr	r3, [r5, #-216]	; 0xffffff28
   12124:	tst	r6, r3
   12128:	bne	12040 <__assert_fail@plt+0xa38>
   1212c:	mov	r0, #0
   12130:	bl	1144c <exit@plt>
   12134:	mov	r2, r7
   12138:	mov	r1, r8
   1213c:	mov	r0, fp
   12140:	bl	112c0 <read@plt>
   12144:	cmp	r0, #0
   12148:	ldrle	r3, [r5, #-216]	; 0xffffff28
   1214c:	bicle	r3, r3, r6
   12150:	strle	r3, [r5, #-216]	; 0xffffff28
   12154:	ble	12098 <__assert_fail@plt+0xa90>
   12158:	ldrb	r1, [sp, #39]	; 0x27
   1215c:	mov	r0, r4
   12160:	bl	11374 <killpg@plt>
   12164:	b	12098 <__assert_fail@plt+0xa90>
   12168:	mov	r2, #8192	; 0x2000
   1216c:	add	r1, sp, #40	; 0x28
   12170:	bl	112c0 <read@plt>
   12174:	subs	r2, r0, #0
   12178:	bgt	121d0 <__assert_fail@plt+0xbc8>
   1217c:	mov	r1, #2
   12180:	mov	r0, fp
   12184:	bl	114e8 <shutdown@plt>
   12188:	add	r3, sp, #8448	; 0x2100
   1218c:	add	r3, r3, #40	; 0x28
   12190:	ldr	r3, [r3]
   12194:	add	r2, r3, #31
   12198:	cmp	r3, #0
   1219c:	movge	r2, r3
   121a0:	asr	r2, r2, #5
   121a4:	add	r1, sp, #8576	; 0x2180
   121a8:	add	r2, r1, r2, lsl #2
   121ac:	asr	r1, r3, #31
   121b0:	lsr	r1, r1, #27
   121b4:	add	r3, r3, r1
   121b8:	and	r3, r3, #31
   121bc:	sub	r3, r3, r1
   121c0:	ldr	r1, [r2, #-216]	; 0xffffff28
   121c4:	bic	r3, r1, r7, lsl r3
   121c8:	str	r3, [r2, #-216]	; 0xffffff28
   121cc:	b	120dc <__assert_fail@plt+0xad4>
   121d0:	add	r1, sp, #40	; 0x28
   121d4:	mov	r0, fp
   121d8:	bl	114c4 <write@plt>
   121dc:	b	120dc <__assert_fail@plt+0xad4>
   121e0:	mov	r0, r5
   121e4:	bl	115f0 <close@plt>
   121e8:	b	11c30 <__assert_fail@plt+0x628>
   121ec:	ldr	r3, [pc, #100]	; 12258 <__assert_fail@plt+0xc50>
   121f0:	ldr	r3, [r3]
   121f4:	cmp	r3, #0
   121f8:	beq	1221c <__assert_fail@plt+0xc14>
   121fc:	add	r3, sp, #8512	; 0x2140
   12200:	add	r3, r3, #60	; 0x3c
   12204:	ldr	r3, [r3]
   12208:	ldr	r3, [r3, #20]
   1220c:	mov	r2, r6
   12210:	ldr	r1, [pc, #184]	; 122d0 <__assert_fail@plt+0xcc8>
   12214:	mov	r0, #37	; 0x25
   12218:	bl	11560 <syslog@plt>
   1221c:	ldr	r1, [pc, #176]	; 122d4 <__assert_fail@plt+0xccc>
   12220:	mov	r0, #1
   12224:	bl	11760 <__assert_fail@plt+0x158>
   12228:	add	r3, sp, #8448	; 0x2100
   1222c:	add	r3, r3, #48	; 0x30
   12230:	mov	r2, r6
   12234:	ldr	r1, [pc, #156]	; 122d8 <__assert_fail@plt+0xcd0>
   12238:	mov	r0, #6
   1223c:	bl	11560 <syslog@plt>
   12240:	b	11d34 <__assert_fail@plt+0x72c>
   12244:	mov	r2, r6
   12248:	ldr	r1, [pc, #140]	; 122dc <__assert_fail@plt+0xcd4>
   1224c:	mov	r0, #3
   12250:	bl	11560 <syslog@plt>
   12254:	b	11d6c <__assert_fail@plt+0x764>
   12258:	andeq	sl, r2, ip, lsl r5
   1225c:	andeq	r8, r1, r0, lsl sp
   12260:	strdeq	r8, [r1], -r4
   12264:	andeq	r8, r1, r4, lsl #26
   12268:	andeq	r8, r1, r4, lsr #26
   1226c:	andeq	r8, r1, r8, asr #26
   12270:	andeq	r8, r1, r4, lsr sp
   12274:	andeq	r8, r1, r0, ror sp
   12278:	andeq	r8, r1, ip, ror sp
   1227c:	andeq	r8, r1, r8, lsl #27
   12280:	andeq	sl, r2, r0, asr r1
   12284:			; <UNDEFINED> instruction: 0x00018eb8
   12288:	andeq	sl, r2, r4, lsl #10
   1228c:	andeq	r8, r1, r8, asr #29
   12290:	andeq	r8, r1, ip, lsr #25
   12294:	andeq	r8, r1, ip, ror #29
   12298:	andeq	r8, r1, ip, lsl #30
   1229c:	andeq	r8, r1, r4, ror #26
   122a0:	muleq	r1, r0, sp
   122a4:	andeq	r8, r1, r4, lsr #27
   122a8:			; <UNDEFINED> instruction: 0x00018db8
   122ac:	ldrdeq	r8, [r1], -r4
   122b0:	andeq	r8, r1, r8, ror #27
   122b4:	andeq	r8, r1, r0, lsl #28
   122b8:	andeq	r8, r1, ip, lsl lr
   122bc:	andeq	r8, r1, r4, lsr lr
   122c0:	andeq	r8, r1, ip, asr #28
   122c4:	andeq	r8, r1, r4, ror #28
   122c8:	andeq	r8, r1, ip, ror lr
   122cc:	andeq	r5, r0, r1, lsr #8
   122d0:	andeq	r8, r1, r8, lsl #29
   122d4:	andeq	r8, r1, r0, lsr #29
   122d8:	ldrdeq	r8, [r1], -r0
   122dc:	strdeq	r8, [r1], -r0
   122e0:	push	{r4, r5, r6, lr}
   122e4:	sub	sp, sp, #144	; 0x90
   122e8:	mov	r4, r0
   122ec:	mov	r6, r1
   122f0:	ldr	r0, [r1]
   122f4:	bl	136fc <argp_parse@@Base+0xd34>
   122f8:	ldr	r2, [pc, #192]	; 123c0 <__assert_fail@plt+0xdb8>
   122fc:	ldr	r3, [pc, #192]	; 123c4 <__assert_fail@plt+0xdbc>
   12300:	str	r2, [r3]
   12304:	ldr	r5, [pc, #188]	; 123c8 <__assert_fail@plt+0xdc0>
   12308:	ldr	r1, [pc, #188]	; 123cc <__assert_fail@plt+0xdc4>
   1230c:	mov	r0, r5
   12310:	bl	134d4 <argp_parse@@Base+0xb0c>
   12314:	mov	r3, #0
   12318:	str	r3, [sp, #4]
   1231c:	add	r2, sp, #8
   12320:	str	r2, [sp]
   12324:	mov	r2, r6
   12328:	mov	r1, r4
   1232c:	ldr	r0, [pc, #156]	; 123d0 <__assert_fail@plt+0xdc8>
   12330:	bl	129c8 <argp_parse@@Base>
   12334:	mov	r2, #24
   12338:	mov	r1, #21
   1233c:	mov	r0, r5
   12340:	bl	11584 <openlog@plt>
   12344:	ldr	r2, [sp, #8]
   12348:	cmp	r4, r2
   1234c:	bgt	12388 <__assert_fail@plt+0xd80>
   12350:	mov	r3, #128	; 0x80
   12354:	str	r3, [sp, #12]
   12358:	add	r2, sp, #12
   1235c:	add	r1, sp, #16
   12360:	mov	r0, #0
   12364:	bl	115b4 <getpeername@plt>
   12368:	cmp	r0, #0
   1236c:	blt	1239c <__assert_fail@plt+0xd94>
   12370:	ldr	r2, [sp, #12]
   12374:	add	r1, sp, #16
   12378:	mov	r0, #0
   1237c:	bl	118d0 <__assert_fail@plt+0x2c8>
   12380:	mov	r0, #0
   12384:	bl	1144c <exit@plt>
   12388:	sub	r2, r4, r2
   1238c:	ldr	r1, [pc, #64]	; 123d4 <__assert_fail@plt+0xdcc>
   12390:	mov	r0, #5
   12394:	bl	11560 <syslog@plt>
   12398:	b	12350 <__assert_fail@plt+0xd48>
   1239c:	ldr	r1, [pc, #52]	; 123d8 <__assert_fail@plt+0xdd0>
   123a0:	mov	r0, #3
   123a4:	bl	11560 <syslog@plt>
   123a8:	bl	11494 <__errno_location@plt>
   123ac:	ldr	r2, [pc, #40]	; 123dc <__assert_fail@plt+0xdd4>
   123b0:	ldr	r1, [r0]
   123b4:	mov	r0, #1
   123b8:	bl	113c8 <error@plt>
   123bc:	b	12370 <__assert_fail@plt+0xd68>
   123c0:	andeq	r8, r1, ip, lsl pc
   123c4:	andeq	sl, r2, r8, asr r5
   123c8:	andeq	r8, r1, r4, lsr pc
   123cc:			; <UNDEFINED> instruction: 0x0002a4b8
   123d0:	andeq	sl, r2, ip, ror #8
   123d4:	andeq	r8, r1, ip, lsr pc
   123d8:	andeq	r8, r1, r0, asr pc
   123dc:	andeq	r8, r1, r0, ror #30
   123e0:	ldr	ip, [r0]
   123e4:	cmp	ip, #0
   123e8:	beq	1243c <__assert_fail@plt+0xe34>
   123ec:	push	{r4, r5, r6, lr}
   123f0:	mov	ip, r2
   123f4:	mov	r5, r1
   123f8:	mov	r4, r0
   123fc:	ldr	r2, [r0, #32]
   12400:	str	r2, [r1, #36]	; 0x24
   12404:	ldr	r2, [r0, #24]
   12408:	str	r2, [r1, #28]
   1240c:	ldr	r2, [r0, #28]
   12410:	str	r2, [r1, #32]
   12414:	ldr	r2, [r0, #12]
   12418:	str	r2, [r1, #20]
   1241c:	ldr	r6, [r0]
   12420:	mov	r2, r1
   12424:	mov	r1, r3
   12428:	mov	r0, ip
   1242c:	blx	r6
   12430:	ldr	r3, [r5, #36]	; 0x24
   12434:	str	r3, [r4, #32]
   12438:	pop	{r4, r5, r6, pc}
   1243c:	mov	r0, #7
   12440:	bx	lr
   12444:	push	{r4, r5, r6, lr}
   12448:	ldr	r5, [r0, #16]
   1244c:	ldr	r3, [r0]
   12450:	cmp	r3, #0
   12454:	beq	1246c <__assert_fail@plt+0xe64>
   12458:	ldr	r2, [r1, #8]
   1245c:	add	r2, r2, #1
   12460:	str	r2, [r1, #8]
   12464:	mov	r2, #0
   12468:	b	124c0 <__assert_fail@plt+0xeb8>
   1246c:	ldr	r3, [r0, #4]
   12470:	cmp	r3, #0
   12474:	ldrne	r3, [r1, #8]
   12478:	addne	r3, r3, #1
   1247c:	strne	r3, [r1, #8]
   12480:	cmp	r5, #0
   12484:	popeq	{r4, r5, r6, pc}
   12488:	ldr	r0, [r5]
   1248c:	cmp	r0, #0
   12490:	popeq	{r4, r5, r6, pc}
   12494:	mov	r4, r1
   12498:	mov	r1, r4
   1249c:	bl	12444 <__assert_fail@plt+0xe3c>
   124a0:	ldr	r3, [r4, #12]
   124a4:	add	r3, r3, #1
   124a8:	str	r3, [r4, #12]
   124ac:	ldr	r0, [r5, #16]!
   124b0:	cmp	r0, #0
   124b4:	bne	12498 <__assert_fail@plt+0xe90>
   124b8:	pop	{r4, r5, r6, pc}
   124bc:	add	r2, r2, #1
   124c0:	add	r3, r3, #24
   124c4:	ldr	r0, [r3, #-20]	; 0xffffffec
   124c8:	cmp	r0, #0
   124cc:	bne	124bc <__assert_fail@plt+0xeb4>
   124d0:	ldr	r0, [r3, #-24]	; 0xffffffe8
   124d4:	cmp	r0, #0
   124d8:	bne	124bc <__assert_fail@plt+0xeb4>
   124dc:	ldr	r0, [r3, #-8]
   124e0:	cmp	r0, #0
   124e4:	bne	124bc <__assert_fail@plt+0xeb4>
   124e8:	ldr	r0, [r3, #-4]
   124ec:	cmp	r0, #0
   124f0:	bne	124bc <__assert_fail@plt+0xeb4>
   124f4:	add	r0, r2, r2, lsl #1
   124f8:	ldr	r3, [r1]
   124fc:	add	r3, r3, r0
   12500:	str	r3, [r1]
   12504:	ldr	r3, [r1, #4]
   12508:	add	r2, r3, r2
   1250c:	str	r2, [r1, #4]
   12510:	b	12480 <__assert_fail@plt+0xe78>
   12514:	cmp	r0, #86	; 0x56
   12518:	beq	12524 <__assert_fail@plt+0xf1c>
   1251c:	mov	r0, #7
   12520:	bx	lr
   12524:	push	{r4, lr}
   12528:	mov	r4, r2
   1252c:	ldr	r3, [pc, #100]	; 12598 <__assert_fail@plt+0xf90>
   12530:	ldr	r3, [r3]
   12534:	cmp	r3, #0
   12538:	beq	1255c <__assert_fail@plt+0xf54>
   1253c:	mov	r1, r2
   12540:	ldr	r0, [r2, #48]	; 0x30
   12544:	blx	r3
   12548:	ldr	r3, [r4, #16]
   1254c:	tst	r3, #32
   12550:	beq	12590 <__assert_fail@plt+0xf88>
   12554:	mov	r0, #0
   12558:	pop	{r4, pc}
   1255c:	ldr	r3, [pc, #56]	; 1259c <__assert_fail@plt+0xf94>
   12560:	ldr	r2, [r3]
   12564:	cmp	r2, #0
   12568:	beq	1257c <__assert_fail@plt+0xf74>
   1256c:	ldr	r1, [pc, #44]	; 125a0 <__assert_fail@plt+0xf98>
   12570:	ldr	r0, [r4, #48]	; 0x30
   12574:	bl	1147c <fprintf@plt>
   12578:	b	12548 <__assert_fail@plt+0xf40>
   1257c:	ldr	r2, [pc, #32]	; 125a4 <__assert_fail@plt+0xf9c>
   12580:	ldr	r1, [pc, #32]	; 125a8 <__assert_fail@plt+0xfa0>
   12584:	mov	r0, r4
   12588:	bl	172f4 <argp_error@@Base>
   1258c:	b	12548 <__assert_fail@plt+0xf40>
   12590:	mov	r0, #0
   12594:	bl	1144c <exit@plt>
   12598:	andeq	sl, r2, r4, lsr #10
   1259c:	andeq	sl, r2, ip, asr r5
   125a0:	andeq	r9, r1, r8, asr r2
   125a4:	strheq	r9, [r1], -ip
   125a8:	strdeq	r8, [r1], -r0
   125ac:	push	{r4, r5, r6, lr}
   125b0:	mov	r4, r2
   125b4:	cmn	r0, #3
   125b8:	beq	12654 <__assert_fail@plt+0x104c>
   125bc:	mov	r5, r1
   125c0:	ble	125ec <__assert_fail@plt+0xfe4>
   125c4:	cmn	r0, #2
   125c8:	beq	1266c <__assert_fail@plt+0x1064>
   125cc:	cmp	r0, #63	; 0x3f
   125d0:	bne	126b0 <__assert_fail@plt+0x10a8>
   125d4:	ldr	r2, [pc, #228]	; 126c0 <__assert_fail@plt+0x10b8>
   125d8:	ldr	r1, [r4, #48]	; 0x30
   125dc:	mov	r0, r4
   125e0:	bl	17238 <argp_state_help@@Base>
   125e4:	mov	r0, #0
   125e8:	pop	{r4, r5, r6, pc}
   125ec:	cmn	r0, #4
   125f0:	bne	126b0 <__assert_fail@plt+0x10a8>
   125f4:	mov	r2, #10
   125f8:	mov	r1, #0
   125fc:	ldr	r0, [pc, #192]	; 126c4 <__assert_fail@plt+0x10bc>
   12600:	cmp	r5, r1
   12604:	movne	r0, r5
   12608:	bl	1129c <strtol@plt>
   1260c:	ldr	r3, [pc, #180]	; 126c8 <__assert_fail@plt+0x10c0>
   12610:	str	r0, [r3]
   12614:	ldr	r2, [r3]
   12618:	sub	r1, r2, #1
   1261c:	str	r1, [r3]
   12620:	cmp	r2, #0
   12624:	ble	126b8 <__assert_fail@plt+0x10b0>
   12628:	mov	r5, #1
   1262c:	mov	r4, r3
   12630:	mov	r0, r5
   12634:	bl	11338 <sleep@plt>
   12638:	ldr	r3, [r4]
   1263c:	sub	r2, r3, #1
   12640:	str	r2, [r4]
   12644:	cmp	r3, #0
   12648:	bgt	12630 <__assert_fail@plt+0x1028>
   1264c:	mov	r0, #0
   12650:	pop	{r4, r5, r6, pc}
   12654:	ldr	r2, [pc, #112]	; 126cc <__assert_fail@plt+0x10c4>
   12658:	ldr	r1, [r4, #48]	; 0x30
   1265c:	mov	r0, r4
   12660:	bl	17238 <argp_state_help@@Base>
   12664:	mov	r0, #0
   12668:	pop	{r4, r5, r6, pc}
   1266c:	ldr	r3, [pc, #92]	; 126d0 <__assert_fail@plt+0x10c8>
   12670:	str	r1, [r3]
   12674:	mov	r0, r1
   12678:	bl	134fc <argp_parse@@Base+0xb34>
   1267c:	str	r0, [r4, #40]	; 0x28
   12680:	ldr	r3, [pc, #76]	; 126d4 <__assert_fail@plt+0x10cc>
   12684:	str	r0, [r3]
   12688:	ldr	r3, [r4, #16]
   1268c:	and	r3, r3, #3
   12690:	cmp	r3, #1
   12694:	beq	126a0 <__assert_fail@plt+0x1098>
   12698:	mov	r0, #0
   1269c:	pop	{r4, r5, r6, pc}
   126a0:	ldr	r3, [r4, #8]
   126a4:	str	r5, [r3]
   126a8:	mov	r0, #0
   126ac:	pop	{r4, r5, r6, pc}
   126b0:	mov	r0, #7
   126b4:	pop	{r4, r5, r6, pc}
   126b8:	mov	r0, #0
   126bc:	pop	{r4, r5, r6, pc}
   126c0:	andeq	r0, r0, sl, ror r2
   126c4:	andeq	r9, r1, r0, ror #1
   126c8:	andeq	sl, r2, r0, lsr #10
   126cc:	andeq	r0, r0, r1, lsl #4
   126d0:	andeq	sl, r2, r8, lsl #10
   126d4:	andeq	sl, r2, r0, lsl #10
   126d8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   126dc:	sub	sp, sp, #36	; 0x24
   126e0:	str	r0, [sp, #12]
   126e4:	str	r1, [sp, #16]
   126e8:	str	r2, [sp, #20]
   126ec:	mov	r8, r3
   126f0:	ldr	sl, [sp, #72]	; 0x48
   126f4:	ldr	r9, [r0]
   126f8:	ldr	r5, [r0, #16]
   126fc:	cmp	r9, #0
   12700:	addne	r6, r9, #24
   12704:	strne	r5, [sp, #28]
   12708:	strne	r8, [sp, #24]
   1270c:	bne	12818 <__assert_fail@plt+0x1210>
   12710:	ldr	r3, [sp, #12]
   12714:	ldr	r3, [r3, #4]
   12718:	cmp	r3, #0
   1271c:	moveq	r0, r8
   12720:	moveq	r8, #0
   12724:	beq	127a4 <__assert_fail@plt+0x119c>
   12728:	ldr	r2, [sp, #12]
   1272c:	ldr	r3, [r2, #4]
   12730:	str	r3, [r8]
   12734:	str	r2, [r8, #4]
   12738:	ldr	r3, [sl, #4]
   1273c:	str	r3, [r8, #8]
   12740:	mov	r3, #0
   12744:	str	r3, [r8, #12]
   12748:	ldr	r2, [sp, #16]
   1274c:	str	r2, [r8, #16]
   12750:	ldr	r2, [sp, #20]
   12754:	str	r2, [r8, #20]
   12758:	str	r3, [r8, #24]
   1275c:	str	r3, [r8, #32]
   12760:	str	r3, [r8, #28]
   12764:	cmp	r5, r3
   12768:	beq	127a0 <__assert_fail@plt+0x1198>
   1276c:	ldr	r3, [r5]
   12770:	cmp	r3, #0
   12774:	beq	129c0 <__assert_fail@plt+0x13b8>
   12778:	mov	r3, #0
   1277c:	add	r3, r3, #1
   12780:	ldr	r2, [r5, r3, lsl #4]
   12784:	cmp	r2, #0
   12788:	bne	1277c <__assert_fail@plt+0x1174>
   1278c:	ldr	r2, [sl, #12]
   12790:	str	r2, [r8, #28]
   12794:	ldr	r2, [sl, #12]
   12798:	add	r3, r2, r3, lsl #2
   1279c:	str	r3, [sl, #12]
   127a0:	add	r0, r8, #36	; 0x24
   127a4:	cmp	r5, #0
   127a8:	beq	127e4 <__assert_fail@plt+0x11dc>
   127ac:	ldr	ip, [r5]
   127b0:	cmp	ip, #0
   127b4:	beq	127e4 <__assert_fail@plt+0x11dc>
   127b8:	mov	r2, #0
   127bc:	add	r4, r2, #1
   127c0:	str	sl, [sp]
   127c4:	mov	r3, r0
   127c8:	mov	r1, r8
   127cc:	mov	r0, ip
   127d0:	bl	126d8 <__assert_fail@plt+0x10d0>
   127d4:	ldr	ip, [r5, r4, lsl #4]
   127d8:	mov	r2, r4
   127dc:	cmp	ip, #0
   127e0:	bne	127bc <__assert_fail@plt+0x11b4>
   127e4:	add	sp, sp, #36	; 0x24
   127e8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   127ec:	ldr	r0, [r4, #16]!
   127f0:	cmp	r0, #0
   127f4:	beq	12900 <__assert_fail@plt+0x12f8>
   127f8:	mov	r1, r7
   127fc:	bl	11290 <strcmp@plt>
   12800:	cmp	r0, #0
   12804:	bne	127ec <__assert_fail@plt+0x11e4>
   12808:	sub	r4, r4, fp
   1280c:	cmn	r4, #15
   12810:	blt	12900 <__assert_fail@plt+0x12f8>
   12814:	add	r6, r6, #24
   12818:	sub	r2, r6, #24
   1281c:	mov	r8, r6
   12820:	ldr	r4, [r6, #-20]	; 0xffffffec
   12824:	cmp	r4, #0
   12828:	bne	12838 <__assert_fail@plt+0x1230>
   1282c:	ldr	r3, [r6, #-24]	; 0xffffffe8
   12830:	cmp	r3, #0
   12834:	beq	1299c <__assert_fail@plt+0x1394>
   12838:	ldr	r3, [r8, #-12]
   1283c:	and	r1, r3, #4
   12840:	cmp	r1, #0
   12844:	moveq	r9, r2
   12848:	ldr	r5, [r9, #12]
   1284c:	ands	r5, r5, #8
   12850:	bne	12814 <__assert_fail@plt+0x120c>
   12854:	tst	r3, #8
   12858:	bne	128dc <__assert_fail@plt+0x12d4>
   1285c:	sub	r3, r4, #1
   12860:	cmp	r3, #254	; 0xfe
   12864:	bhi	128dc <__assert_fail@plt+0x12d4>
   12868:	bl	11434 <__ctype_b_loc@plt>
   1286c:	ldr	r3, [r0]
   12870:	lsl	r4, r4, #1
   12874:	ldrh	r3, [r3, r4]
   12878:	tst	r3, #16384	; 0x4000
   1287c:	beq	128dc <__assert_fail@plt+0x12d4>
   12880:	ldr	r3, [sl, #4]
   12884:	add	r2, r3, #1
   12888:	str	r2, [sl, #4]
   1288c:	ldr	r2, [r8, #-20]	; 0xffffffec
   12890:	strb	r2, [r3]
   12894:	ldr	r3, [r9, #8]
   12898:	cmp	r3, #0
   1289c:	beq	128d0 <__assert_fail@plt+0x12c8>
   128a0:	ldr	r3, [sl, #4]
   128a4:	add	r2, r3, #1
   128a8:	str	r2, [sl, #4]
   128ac:	mov	r2, #58	; 0x3a
   128b0:	strb	r2, [r3]
   128b4:	ldr	r3, [r9, #12]
   128b8:	tst	r3, #1
   128bc:	ldrne	r3, [sl, #4]
   128c0:	addne	r2, r3, #1
   128c4:	strne	r2, [sl, #4]
   128c8:	movne	r2, #58	; 0x3a
   128cc:	strbne	r2, [r3]
   128d0:	ldr	r3, [sl, #4]
   128d4:	mov	r2, #0
   128d8:	strb	r2, [r3]
   128dc:	ldr	r7, [r8, #-24]	; 0xffffffe8
   128e0:	cmp	r7, #0
   128e4:	beq	12814 <__assert_fail@plt+0x120c>
   128e8:	ldr	r3, [sl]
   128ec:	ldr	fp, [r3, #8]
   128f0:	ldr	r0, [fp]
   128f4:	cmp	r0, #0
   128f8:	movne	r4, fp
   128fc:	bne	127f8 <__assert_fail@plt+0x11f0>
   12900:	ldr	r3, [sl, #8]
   12904:	str	r7, [r3]
   12908:	ldr	r3, [sl, #8]
   1290c:	ldr	r2, [r9, #8]
   12910:	cmp	r2, #0
   12914:	beq	1292c <__assert_fail@plt+0x1324>
   12918:	ldr	r5, [r9, #12]
   1291c:	and	r5, r5, #1
   12920:	cmp	r5, #0
   12924:	movne	r5, #2
   12928:	moveq	r5, #1
   1292c:	str	r5, [r3, #4]
   12930:	ldr	r3, [sl, #8]
   12934:	mov	r2, #0
   12938:	str	r2, [r3, #8]
   1293c:	ldr	r1, [sl, #8]
   12940:	ldr	r0, [r8, #-20]	; 0xffffffec
   12944:	cmp	r0, r2
   12948:	ldreq	r0, [r9, #4]
   1294c:	bic	r0, r0, #-16777216	; 0xff000000
   12950:	ldr	r3, [sl]
   12954:	ldr	r3, [r3, #48]	; 0x30
   12958:	ldr	r2, [sp, #24]
   1295c:	sub	r3, r2, r3
   12960:	asr	r3, r3, #2
   12964:	rsb	r2, r3, r3, lsl #3
   12968:	add	r2, r2, r2, lsl #6
   1296c:	add	r2, r3, r2, lsl #3
   12970:	rsb	r2, r2, r2, lsl #15
   12974:	add	r3, r3, r2, lsl #3
   12978:	add	r3, r3, #1
   1297c:	add	r3, r0, r3, lsl #24
   12980:	str	r3, [r1, #12]
   12984:	ldr	r3, [sl, #8]
   12988:	add	r2, r3, #16
   1298c:	str	r2, [sl, #8]
   12990:	mov	r2, #0
   12994:	str	r2, [r3, #16]
   12998:	b	12814 <__assert_fail@plt+0x120c>
   1299c:	ldr	r3, [r6, #-8]
   129a0:	cmp	r3, #0
   129a4:	bne	12838 <__assert_fail@plt+0x1230>
   129a8:	ldr	r3, [r6, #-4]
   129ac:	cmp	r3, #0
   129b0:	bne	12838 <__assert_fail@plt+0x1230>
   129b4:	ldr	r5, [sp, #28]
   129b8:	ldr	r8, [sp, #24]
   129bc:	b	12728 <__assert_fail@plt+0x1120>
   129c0:	mov	r3, #0
   129c4:	b	1278c <__assert_fail@plt+0x1184>

000129c8 <argp_parse@@Base>:
   129c8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   129cc:	add	fp, sp, #32
   129d0:	sub	sp, sp, #220	; 0xdc
   129d4:	mov	r8, r0
   129d8:	str	r1, [fp, #-236]	; 0xffffff14
   129dc:	str	r2, [fp, #-232]	; 0xffffff18
   129e0:	mov	r6, r3
   129e4:	tst	r3, #1
   129e8:	bne	12a18 <argp_parse@@Base+0x50>
   129ec:	ldr	r3, [pc, #2548]	; 133e8 <argp_parse@@Base+0xa20>
   129f0:	ldr	r3, [r3]
   129f4:	cmp	r3, #0
   129f8:	moveq	r3, r2
   129fc:	ldreq	r2, [r3]
   12a00:	ldreq	r3, [pc, #2528]	; 133e8 <argp_parse@@Base+0xa20>
   12a04:	streq	r2, [r3]
   12a08:	ldr	r3, [pc, #2524]	; 133ec <argp_parse@@Base+0xa24>
   12a0c:	ldr	r3, [r3]
   12a10:	cmp	r3, #0
   12a14:	beq	12c08 <argp_parse@@Base+0x240>
   12a18:	tst	r6, #16
   12a1c:	beq	12c20 <argp_parse@@Base+0x258>
   12a20:	mov	r2, #36	; 0x24
   12a24:	mov	r1, #0
   12a28:	sub	r0, fp, #196	; 0xc4
   12a2c:	bl	114ac <memset@plt>
   12a30:	ands	r3, r6, #4
   12a34:	str	r3, [fp, #-240]	; 0xffffff10
   12a38:	moveq	r3, #1
   12a3c:	movne	r3, #0
   12a40:	str	r3, [fp, #-228]	; 0xffffff1c
   12a44:	mov	r3, #0
   12a48:	str	r3, [fp, #-224]	; 0xffffff20
   12a4c:	str	r3, [fp, #-220]	; 0xffffff24
   12a50:	str	r3, [fp, #-216]	; 0xffffff28
   12a54:	cmp	r8, r3
   12a58:	beq	12a68 <argp_parse@@Base+0xa0>
   12a5c:	sub	r1, fp, #228	; 0xe4
   12a60:	mov	r0, r8
   12a64:	bl	12444 <__assert_fail@plt+0xe3c>
   12a68:	ldr	r4, [fp, #-220]	; 0xffffff24
   12a6c:	add	r4, r4, #1
   12a70:	add	r4, r4, r4, lsl #3
   12a74:	lsl	r4, r4, #2
   12a78:	ldr	r9, [fp, #-216]	; 0xffffff28
   12a7c:	lsl	r9, r9, #2
   12a80:	add	sl, r9, r4
   12a84:	ldr	r5, [fp, #-224]	; 0xffffff20
   12a88:	add	r5, r5, #1
   12a8c:	add	r5, sl, r5, lsl #4
   12a90:	ldr	r0, [fp, #-228]	; 0xffffff1c
   12a94:	add	r0, r0, #1
   12a98:	add	r0, r0, r5
   12a9c:	bl	141f4 <argp_parse@@Base+0x182c>
   12aa0:	mov	r7, r0
   12aa4:	str	r0, [fp, #-40]	; 0xffffffd8
   12aa8:	cmp	r0, #0
   12aac:	moveq	r4, #12
   12ab0:	beq	13238 <argp_parse@@Base+0x870>
   12ab4:	str	r0, [fp, #-112]	; 0xffffff90
   12ab8:	add	r4, r0, r4
   12abc:	str	r4, [fp, #-104]	; 0xffffff98
   12ac0:	add	r3, r0, sl
   12ac4:	str	r3, [fp, #-244]	; 0xffffff0c
   12ac8:	str	r3, [fp, #-152]	; 0xffffff68
   12acc:	add	sl, r0, r5
   12ad0:	str	sl, [fp, #-156]	; 0xffffff64
   12ad4:	mov	r3, #1
   12ad8:	str	r3, [fp, #-196]	; 0xffffff3c
   12adc:	str	r3, [fp, #-192]	; 0xffffff40
   12ae0:	sub	ip, fp, #148	; 0x94
   12ae4:	sub	lr, fp, #196	; 0xc4
   12ae8:	ldm	lr!, {r0, r1, r2, r3}
   12aec:	stmia	ip!, {r0, r1, r2, r3}
   12af0:	ldm	lr!, {r0, r1, r2, r3}
   12af4:	stmia	ip!, {r0, r1, r2, r3}
   12af8:	ldr	r3, [lr]
   12afc:	str	r3, [ip]
   12b00:	mov	r2, r9
   12b04:	mov	r1, #0
   12b08:	mov	r0, r4
   12b0c:	bl	114ac <memset@plt>
   12b10:	sub	r3, fp, #160	; 0xa0
   12b14:	str	r3, [fp, #-212]	; 0xffffff2c
   12b18:	str	sl, [fp, #-208]	; 0xffffff30
   12b1c:	ldr	r3, [fp, #-244]	; 0xffffff0c
   12b20:	str	r3, [fp, #-204]	; 0xffffff34
   12b24:	str	r4, [fp, #-200]	; 0xffffff38
   12b28:	tst	r6, #8
   12b2c:	beq	12cb8 <argp_parse@@Base+0x2f0>
   12b30:	add	sl, sl, #1
   12b34:	str	sl, [fp, #-208]	; 0xffffff30
   12b38:	mov	r3, #45	; 0x2d
   12b3c:	strb	r3, [r7, r5]
   12b40:	mov	r3, #0
   12b44:	ldr	r2, [fp, #-208]	; 0xffffff30
   12b48:	strb	r3, [r2]
   12b4c:	ldr	r2, [fp, #-204]	; 0xffffff34
   12b50:	str	r3, [r2]
   12b54:	str	r8, [fp, #-160]	; 0xffffff60
   12b58:	cmp	r8, r3
   12b5c:	beq	12cd4 <argp_parse@@Base+0x30c>
   12b60:	sub	r3, fp, #212	; 0xd4
   12b64:	str	r3, [sp]
   12b68:	ldr	r3, [fp, #-112]	; 0xffffff90
   12b6c:	mov	r2, #0
   12b70:	mov	r1, r2
   12b74:	mov	r0, r8
   12b78:	bl	126d8 <__assert_fail@plt+0x10d0>
   12b7c:	str	r0, [fp, #-108]	; 0xffffff94
   12b80:	mov	r2, #56	; 0x38
   12b84:	mov	r1, #0
   12b88:	sub	r0, fp, #96	; 0x60
   12b8c:	bl	114ac <memset@plt>
   12b90:	ldr	r3, [fp, #-160]	; 0xffffff60
   12b94:	str	r3, [fp, #-96]	; 0xffffffa0
   12b98:	ldr	r3, [fp, #-236]	; 0xffffff14
   12b9c:	str	r3, [fp, #-92]	; 0xffffffa4
   12ba0:	ldr	r3, [fp, #-232]	; 0xffffff18
   12ba4:	str	r3, [fp, #-88]	; 0xffffffa8
   12ba8:	str	r6, [fp, #-80]	; 0xffffffb0
   12bac:	ldr	r3, [pc, #2108]	; 133f0 <argp_parse@@Base+0xa28>
   12bb0:	ldr	r3, [r3]
   12bb4:	str	r3, [fp, #-52]	; 0xffffffcc
   12bb8:	ldr	r3, [pc, #2100]	; 133f4 <argp_parse@@Base+0xa2c>
   12bbc:	ldr	r3, [r3]
   12bc0:	str	r3, [fp, #-48]	; 0xffffffd0
   12bc4:	sub	r3, fp, #160	; 0xa0
   12bc8:	str	r3, [fp, #-44]	; 0xffffffd4
   12bcc:	mov	r3, #1
   12bd0:	str	r3, [fp, #-100]	; 0xffffff9c
   12bd4:	ldr	r3, [fp, #-112]	; 0xffffff90
   12bd8:	ldr	r2, [fp, #-108]	; 0xffffff94
   12bdc:	cmp	r3, r2
   12be0:	bcs	12d6c <argp_parse@@Base+0x3a4>
   12be4:	ldr	r2, [fp, #8]
   12be8:	str	r2, [r3, #24]
   12bec:	ldr	r5, [fp, #-112]	; 0xffffff90
   12bf0:	ldr	r3, [fp, #-108]	; 0xffffff94
   12bf4:	cmp	r5, r3
   12bf8:	bcs	12d78 <argp_parse@@Base+0x3b0>
   12bfc:	ldr	r7, [pc, #2036]	; 133f8 <argp_parse@@Base+0xa30>
   12c00:	mov	r6, #0
   12c04:	b	12d10 <argp_parse@@Base+0x348>
   12c08:	ldr	r3, [fp, #-232]	; 0xffffff18
   12c0c:	ldr	r0, [r3]
   12c10:	bl	134fc <argp_parse@@Base+0xb34>
   12c14:	ldr	r3, [pc, #2000]	; 133ec <argp_parse@@Base+0xa24>
   12c18:	str	r0, [r3]
   12c1c:	b	12a18 <argp_parse@@Base+0x50>
   12c20:	sub	sp, sp, #72	; 0x48
   12c24:	add	r5, sp, #8
   12c28:	sub	sp, sp, #40	; 0x28
   12c2c:	add	r4, sp, #8
   12c30:	mov	r1, #0
   12c34:	str	r1, [r4]
   12c38:	str	r1, [r4, #4]
   12c3c:	str	r1, [r4, #8]
   12c40:	str	r1, [r4, #12]
   12c44:	str	r1, [r4, #20]
   12c48:	str	r1, [r4, #24]
   12c4c:	str	r5, [r4, #16]
   12c50:	mov	r2, #64	; 0x40
   12c54:	mov	r0, r5
   12c58:	bl	114ac <memset@plt>
   12c5c:	cmp	r8, #0
   12c60:	addne	r3, r5, #16
   12c64:	strne	r8, [r5]
   12c68:	moveq	r3, r5
   12c6c:	ldr	r2, [pc, #1928]	; 133fc <argp_parse@@Base+0xa34>
   12c70:	str	r2, [r3]
   12c74:	ldr	r2, [pc, #1924]	; 13400 <argp_parse@@Base+0xa38>
   12c78:	ldr	r2, [r2]
   12c7c:	cmp	r2, #0
   12c80:	beq	12ca0 <argp_parse@@Base+0x2d8>
   12c84:	add	r2, r3, #32
   12c88:	ldr	r1, [pc, #1908]	; 13404 <argp_parse@@Base+0xa3c>
   12c8c:	str	r1, [r3, #16]
   12c90:	mov	r3, #0
   12c94:	str	r3, [r2]
   12c98:	mov	r8, r4
   12c9c:	b	12a20 <argp_parse@@Base+0x58>
   12ca0:	ldr	r2, [pc, #1888]	; 13408 <argp_parse@@Base+0xa40>
   12ca4:	ldr	r2, [r2]
   12ca8:	cmp	r2, #0
   12cac:	addeq	r2, r3, #16
   12cb0:	bne	12c84 <argp_parse@@Base+0x2bc>
   12cb4:	b	12c90 <argp_parse@@Base+0x2c8>
   12cb8:	ldr	r3, [fp, #-240]	; 0xffffff10
   12cbc:	cmp	r3, #0
   12cc0:	addne	sl, sl, #1
   12cc4:	strne	sl, [fp, #-208]	; 0xffffff30
   12cc8:	movne	r3, #43	; 0x2b
   12ccc:	strbne	r3, [r7, r5]
   12cd0:	b	12b40 <argp_parse@@Base+0x178>
   12cd4:	ldr	r3, [fp, #-112]	; 0xffffff90
   12cd8:	str	r3, [fp, #-108]	; 0xffffff94
   12cdc:	b	12b80 <argp_parse@@Base+0x1b8>
   12ce0:	mov	r3, r6
   12ce4:	mov	r2, r7
   12ce8:	sub	r1, fp, #96	; 0x60
   12cec:	mov	r0, r5
   12cf0:	bl	123e0 <__assert_fail@plt+0xdd8>
   12cf4:	add	r5, r5, #36	; 0x24
   12cf8:	ldr	r3, [fp, #-108]	; 0xffffff94
   12cfc:	cmp	r5, r3
   12d00:	bcs	12d5c <argp_parse@@Base+0x394>
   12d04:	cmp	r0, #7
   12d08:	cmpne	r0, #0
   12d0c:	bne	12d5c <argp_parse@@Base+0x394>
   12d10:	ldr	r3, [r5, #16]
   12d14:	cmp	r3, #0
   12d18:	ldrne	r2, [r5, #20]
   12d1c:	ldrne	r3, [r3, #28]
   12d20:	ldrne	r3, [r3, r2, lsl #2]
   12d24:	strne	r3, [r5, #24]
   12d28:	ldr	r3, [r5]
   12d2c:	cmp	r3, #0
   12d30:	bne	12ce0 <argp_parse@@Base+0x318>
   12d34:	ldr	r3, [r5, #4]
   12d38:	ldr	r3, [r3, #16]
   12d3c:	cmp	r3, #0
   12d40:	beq	12ce0 <argp_parse@@Base+0x318>
   12d44:	ldr	r3, [r3]
   12d48:	cmp	r3, #0
   12d4c:	ldrne	r3, [r5, #28]
   12d50:	ldrne	r2, [r5, #24]
   12d54:	strne	r2, [r3]
   12d58:	b	12ce0 <argp_parse@@Base+0x318>
   12d5c:	mov	r4, r0
   12d60:	cmp	r0, #7
   12d64:	beq	12d78 <argp_parse@@Base+0x3b0>
   12d68:	b	12d70 <argp_parse@@Base+0x3a8>
   12d6c:	mov	r4, #0
   12d70:	cmp	r4, #0
   12d74:	bne	13238 <argp_parse@@Base+0x870>
   12d78:	ldr	r3, [fp, #-80]	; 0xffffffb0
   12d7c:	tst	r3, #2
   12d80:	moveq	r3, #1
   12d84:	streq	r3, [fp, #-144]	; 0xffffff70
   12d88:	beq	12db4 <argp_parse@@Base+0x3ec>
   12d8c:	mov	r2, #0
   12d90:	str	r2, [fp, #-144]	; 0xffffff70
   12d94:	tst	r3, #1
   12d98:	beq	12db4 <argp_parse@@Base+0x3ec>
   12d9c:	ldr	r3, [fp, #-88]	; 0xffffffa8
   12da0:	sub	r3, r3, #4
   12da4:	str	r3, [fp, #-88]	; 0xffffffa8
   12da8:	ldr	r3, [fp, #-92]	; 0xffffffa4
   12dac:	add	r3, r3, #1
   12db0:	str	r3, [fp, #-92]	; 0xffffffa4
   12db4:	ldr	r3, [fp, #-88]	; 0xffffffa8
   12db8:	ldr	r2, [fp, #-232]	; 0xffffff18
   12dbc:	cmp	r2, r3
   12dc0:	beq	12de0 <argp_parse@@Base+0x418>
   12dc4:	ldr	r3, [pc, #1568]	; 133ec <argp_parse@@Base+0xa24>
   12dc8:	ldr	r3, [r3]
   12dcc:	str	r3, [fp, #-56]	; 0xffffffc8
   12dd0:	mov	r6, #0
   12dd4:	mov	sl, #1
   12dd8:	mvn	r9, #0
   12ddc:	b	13050 <argp_parse@@Base+0x688>
   12de0:	ldr	r0, [r2]
   12de4:	cmp	r0, #0
   12de8:	beq	12dc4 <argp_parse@@Base+0x3fc>
   12dec:	bl	134fc <argp_parse@@Base+0xb34>
   12df0:	str	r0, [fp, #-56]	; 0xffffffc8
   12df4:	b	12dd0 <argp_parse@@Base+0x408>
   12df8:	ldr	r3, [fp, #-84]	; 0xffffffac
   12dfc:	str	r3, [fp, #-148]	; 0xffffff6c
   12e00:	str	r9, [fp, #-140]	; 0xffffff74
   12e04:	ldr	r3, [fp, #-80]	; 0xffffffb0
   12e08:	tst	r3, #64	; 0x40
   12e0c:	beq	12ed8 <argp_parse@@Base+0x510>
   12e10:	sub	r3, fp, #148	; 0x94
   12e14:	str	r3, [sp, #4]
   12e18:	str	r6, [sp]
   12e1c:	ldr	r3, [fp, #-152]	; 0xffffff68
   12e20:	ldr	r2, [fp, #-156]	; 0xffffff64
   12e24:	ldr	r1, [fp, #-88]	; 0xffffffa8
   12e28:	ldr	r0, [fp, #-92]	; 0xffffffa4
   12e2c:	bl	13698 <argp_parse@@Base+0xcd0>
   12e30:	mov	r5, r0
   12e34:	ldr	r4, [fp, #-148]	; 0xffffff6c
   12e38:	str	r4, [fp, #-84]	; 0xffffffac
   12e3c:	cmn	r5, #1
   12e40:	beq	12f00 <argp_parse@@Base+0x538>
   12e44:	cmp	r5, #63	; 0x3f
   12e48:	beq	12f2c <argp_parse@@Base+0x564>
   12e4c:	cmp	r5, #1
   12e50:	beq	12f64 <argp_parse@@Base+0x59c>
   12e54:	ldr	r4, [fp, #-136]	; 0xffffff78
   12e58:	asrs	r3, r5, #24
   12e5c:	bne	13010 <argp_parse@@Base+0x648>
   12e60:	mov	r1, r5
   12e64:	ldr	r0, [fp, #-156]	; 0xffffff64
   12e68:	bl	11464 <strchr@plt>
   12e6c:	subs	r1, r0, #0
   12e70:	beq	12ec0 <argp_parse@@Base+0x4f8>
   12e74:	ldr	r0, [fp, #-112]	; 0xffffff90
   12e78:	ldr	r2, [fp, #-108]	; 0xffffff94
   12e7c:	cmp	r2, r0
   12e80:	bls	12ec0 <argp_parse@@Base+0x4f8>
   12e84:	ldr	r3, [r0, #8]
   12e88:	cmp	r1, r3
   12e8c:	bcc	12ea8 <argp_parse@@Base+0x4e0>
   12e90:	add	r0, r0, #36	; 0x24
   12e94:	cmp	r2, r0
   12e98:	bls	12ec0 <argp_parse@@Base+0x4f8>
   12e9c:	ldr	r3, [r0, #8]
   12ea0:	cmp	r1, r3
   12ea4:	bcs	12e90 <argp_parse@@Base+0x4c8>
   12ea8:	mov	r3, r4
   12eac:	mov	r2, r5
   12eb0:	sub	r1, fp, #96	; 0x60
   12eb4:	bl	123e0 <__assert_fail@plt+0xdd8>
   12eb8:	cmp	r0, #7
   12ebc:	bne	13048 <argp_parse@@Base+0x680>
   12ec0:	ldr	r3, [pc, #1348]	; 1340c <argp_parse@@Base+0xa44>
   12ec4:	mov	r2, r5
   12ec8:	ldr	r1, [pc, #1344]	; 13410 <argp_parse@@Base+0xa48>
   12ecc:	sub	r0, fp, #96	; 0x60
   12ed0:	bl	172f4 <argp_error@@Base>
   12ed4:	b	130f0 <argp_parse@@Base+0x728>
   12ed8:	sub	r3, fp, #148	; 0x94
   12edc:	str	r3, [sp, #4]
   12ee0:	str	r6, [sp]
   12ee4:	ldr	r3, [fp, #-152]	; 0xffffff68
   12ee8:	ldr	r2, [fp, #-156]	; 0xffffff64
   12eec:	ldr	r1, [fp, #-88]	; 0xffffffa8
   12ef0:	ldr	r0, [fp, #-92]	; 0xffffffa4
   12ef4:	bl	1363c <argp_parse@@Base+0xc74>
   12ef8:	mov	r5, r0
   12efc:	b	12e34 <argp_parse@@Base+0x46c>
   12f00:	str	r6, [fp, #-100]	; 0xffffff9c
   12f04:	cmp	r4, #1
   12f08:	ble	13078 <argp_parse@@Base+0x6b0>
   12f0c:	sub	r3, r4, #-1073741823	; 0xc0000001
   12f10:	ldr	r1, [pc, #1276]	; 13414 <argp_parse@@Base+0xa4c>
   12f14:	ldr	r2, [fp, #-88]	; 0xffffffa8
   12f18:	ldr	r0, [r2, r3, lsl #2]
   12f1c:	bl	11290 <strcmp@plt>
   12f20:	cmp	r0, #0
   12f24:	streq	r4, [fp, #-72]	; 0xffffffb8
   12f28:	b	13078 <argp_parse@@Base+0x6b0>
   12f2c:	ldr	r3, [fp, #-140]	; 0xffffff74
   12f30:	cmn	r3, #1
   12f34:	beq	12e54 <argp_parse@@Base+0x48c>
   12f38:	mov	r3, #0
   12f3c:	b	13100 <argp_parse@@Base+0x738>
   12f40:	ldr	r2, [fp, #-80]	; 0xffffffb0
   12f44:	tst	r2, #4
   12f48:	movne	r3, #1
   12f4c:	bne	13100 <argp_parse@@Base+0x738>
   12f50:	add	r2, r3, #1
   12f54:	str	r2, [fp, #-84]	; 0xffffffac
   12f58:	ldr	r2, [fp, #-88]	; 0xffffffa8
   12f5c:	ldr	r3, [r2, r3, lsl #2]
   12f60:	str	r3, [fp, #-136]	; 0xffffff78
   12f64:	ldr	r7, [fp, #-136]	; 0xffffff78
   12f68:	ldr	r8, [fp, #-84]	; 0xffffffac
   12f6c:	sub	r8, r8, #1
   12f70:	str	r8, [fp, #-84]	; 0xffffffac
   12f74:	ldr	r5, [fp, #-112]	; 0xffffff90
   12f78:	ldr	r3, [fp, #-108]	; 0xffffff94
   12f7c:	cmp	r3, r5
   12f80:	bhi	12fcc <argp_parse@@Base+0x604>
   12f84:	b	13008 <argp_parse@@Base+0x640>
   12f88:	ldr	r3, [fp, #-84]	; 0xffffffac
   12f8c:	sub	r3, r3, #1
   12f90:	str	r3, [fp, #-84]	; 0xffffffac
   12f94:	mov	r3, r6
   12f98:	ldr	r2, [pc, #1144]	; 13418 <argp_parse@@Base+0xa50>
   12f9c:	sub	r1, fp, #96	; 0x60
   12fa0:	mov	r0, r5
   12fa4:	bl	123e0 <__assert_fail@plt+0xdd8>
   12fa8:	add	r5, r5, #36	; 0x24
   12fac:	ldr	r3, [fp, #-108]	; 0xffffff94
   12fb0:	cmp	r5, r3
   12fb4:	movcs	r3, #0
   12fb8:	movcc	r3, #1
   12fbc:	cmp	r0, #7
   12fc0:	movne	r3, #0
   12fc4:	cmp	r3, #0
   12fc8:	beq	133ac <argp_parse@@Base+0x9e4>
   12fcc:	ldr	r3, [fp, #-84]	; 0xffffffac
   12fd0:	add	r3, r3, #1
   12fd4:	str	r3, [fp, #-84]	; 0xffffffac
   12fd8:	mov	r3, r7
   12fdc:	mov	r2, r6
   12fe0:	sub	r1, fp, #96	; 0x60
   12fe4:	mov	r0, r5
   12fe8:	bl	123e0 <__assert_fail@plt+0xdd8>
   12fec:	cmp	r0, #7
   12ff0:	beq	12f88 <argp_parse@@Base+0x5c0>
   12ff4:	add	r5, r5, #36	; 0x24
   12ff8:	cmp	r0, #0
   12ffc:	beq	133bc <argp_parse@@Base+0x9f4>
   13000:	cmp	r0, #7
   13004:	bne	13048 <argp_parse@@Base+0x680>
   13008:	mov	r5, #1
   1300c:	b	130f0 <argp_parse@@Base+0x728>
   13010:	ands	r1, r5, #8388608	; 0x800000
   13014:	movne	r1, #-16777216	; 0xff000000
   13018:	bic	r2, r5, #-16777216	; 0xff000000
   1301c:	add	r0, r3, r3, lsl #3
   13020:	lsl	r0, r0, #2
   13024:	sub	r0, r0, #36	; 0x24
   13028:	mov	r3, r4
   1302c:	orr	r2, r2, r1
   13030:	sub	r1, fp, #96	; 0x60
   13034:	ldr	ip, [fp, #-112]	; 0xffffff90
   13038:	add	r0, ip, r0
   1303c:	bl	123e0 <__assert_fail@plt+0xdd8>
   13040:	cmp	r0, #7
   13044:	beq	13090 <argp_parse@@Base+0x6c8>
   13048:	cmp	r0, #0
   1304c:	bne	131a0 <argp_parse@@Base+0x7d8>
   13050:	ldr	r3, [fp, #-72]	; 0xffffffb8
   13054:	cmp	r3, #0
   13058:	beq	1306c <argp_parse@@Base+0x6a4>
   1305c:	ldr	r2, [fp, #-84]	; 0xffffffac
   13060:	cmp	r3, r2
   13064:	strgt	r6, [fp, #-72]	; 0xffffffb8
   13068:	ble	13078 <argp_parse@@Base+0x6b0>
   1306c:	ldr	r3, [fp, #-100]	; 0xffffff9c
   13070:	cmp	r3, #0
   13074:	bne	12df8 <argp_parse@@Base+0x430>
   13078:	ldr	r3, [fp, #-84]	; 0xffffffac
   1307c:	ldr	r2, [fp, #-92]	; 0xffffffa4
   13080:	cmp	r3, r2
   13084:	blt	12f40 <argp_parse@@Base+0x578>
   13088:	mov	r3, #1
   1308c:	b	13100 <argp_parse@@Base+0x738>
   13090:	ldr	r3, [fp, #-152]	; 0xffffff68
   13094:	ldr	r2, [r3, #12]
   13098:	cmp	r2, r5
   1309c:	beq	130d0 <argp_parse@@Base+0x708>
   130a0:	ldr	r2, [r3]
   130a4:	cmp	r2, #0
   130a8:	beq	13198 <argp_parse@@Base+0x7d0>
   130ac:	add	r3, r3, #16
   130b0:	ldr	r2, [r3, #12]
   130b4:	cmp	r2, r5
   130b8:	beq	130d0 <argp_parse@@Base+0x708>
   130bc:	ldr	r2, [r3]
   130c0:	cmp	r2, #0
   130c4:	bne	130ac <argp_parse@@Base+0x6e4>
   130c8:	ldr	r2, [pc, #844]	; 1341c <argp_parse@@Base+0xa54>
   130cc:	b	130e0 <argp_parse@@Base+0x718>
   130d0:	ldr	r2, [r3]
   130d4:	ldr	r3, [pc, #832]	; 1341c <argp_parse@@Base+0xa54>
   130d8:	cmp	r2, #0
   130dc:	moveq	r2, r3
   130e0:	ldr	r3, [pc, #804]	; 1340c <argp_parse@@Base+0xa44>
   130e4:	ldr	r1, [pc, #820]	; 13420 <argp_parse@@Base+0xa58>
   130e8:	sub	r0, fp, #96	; 0x60
   130ec:	bl	172f4 <argp_error@@Base>
   130f0:	add	r5, r5, #1
   130f4:	bics	r3, r5, #2
   130f8:	moveq	r3, #1
   130fc:	movne	r3, #0
   13100:	cmp	r3, #0
   13104:	moveq	r4, #7
   13108:	beq	131a4 <argp_parse@@Base+0x7dc>
   1310c:	ldr	r3, [fp, #-84]	; 0xffffffac
   13110:	ldr	r2, [fp, #-92]	; 0xffffffa4
   13114:	cmp	r3, r2
   13118:	beq	13244 <argp_parse@@Base+0x87c>
   1311c:	ldr	r2, [fp, #4]
   13120:	cmp	r2, #0
   13124:	strne	r3, [r2]
   13128:	beq	13340 <argp_parse@@Base+0x978>
   1312c:	ldr	r5, [fp, #-108]	; 0xffffff94
   13130:	sub	r5, r5, #36	; 0x24
   13134:	ldr	r3, [fp, #-112]	; 0xffffff90
   13138:	cmp	r5, r3
   1313c:	bcc	1337c <argp_parse@@Base+0x9b4>
   13140:	ldr	r7, [pc, #732]	; 13424 <argp_parse@@Base+0xa5c>
   13144:	mov	r6, #0
   13148:	mov	r3, r6
   1314c:	mov	r2, r7
   13150:	sub	r1, fp, #96	; 0x60
   13154:	mov	r0, r5
   13158:	bl	123e0 <__assert_fail@plt+0xdd8>
   1315c:	sub	r5, r5, #36	; 0x24
   13160:	ldr	r3, [fp, #-112]	; 0xffffff90
   13164:	cmp	r5, r3
   13168:	bcc	13178 <argp_parse@@Base+0x7b0>
   1316c:	cmp	r0, #7
   13170:	cmpne	r0, #0
   13174:	beq	13148 <argp_parse@@Base+0x780>
   13178:	mov	r4, r0
   1317c:	cmp	r0, #7
   13180:	moveq	r4, #0
   13184:	ldr	r5, [fp, #-108]	; 0xffffff94
   13188:	sub	r5, r5, #36	; 0x24
   1318c:	cmp	r3, r5
   13190:	bls	131fc <argp_parse@@Base+0x834>
   13194:	b	13230 <argp_parse@@Base+0x868>
   13198:	ldr	r2, [pc, #636]	; 1341c <argp_parse@@Base+0xa54>
   1319c:	b	130e0 <argp_parse@@Base+0x718>
   131a0:	mov	r4, r0
   131a4:	cmp	r4, #7
   131a8:	beq	13364 <argp_parse@@Base+0x99c>
   131ac:	ldr	r5, [fp, #-112]	; 0xffffff90
   131b0:	ldr	r3, [fp, #-108]	; 0xffffff94
   131b4:	cmp	r3, r5
   131b8:	bls	131e8 <argp_parse@@Base+0x820>
   131bc:	ldr	r7, [pc, #612]	; 13428 <argp_parse@@Base+0xa60>
   131c0:	mov	r6, #0
   131c4:	mov	r3, r6
   131c8:	mov	r2, r7
   131cc:	sub	r1, fp, #96	; 0x60
   131d0:	mov	r0, r5
   131d4:	bl	123e0 <__assert_fail@plt+0xdd8>
   131d8:	add	r5, r5, #36	; 0x24
   131dc:	ldr	r3, [fp, #-108]	; 0xffffff94
   131e0:	cmp	r5, r3
   131e4:	bcc	131c4 <argp_parse@@Base+0x7fc>
   131e8:	ldr	r5, [fp, #-108]	; 0xffffff94
   131ec:	sub	r5, r5, #36	; 0x24
   131f0:	ldr	r3, [fp, #-112]	; 0xffffff90
   131f4:	cmp	r3, r5
   131f8:	bhi	13228 <argp_parse@@Base+0x860>
   131fc:	ldr	r7, [pc, #552]	; 1342c <argp_parse@@Base+0xa64>
   13200:	mov	r6, #0
   13204:	mov	r3, r6
   13208:	mov	r2, r7
   1320c:	sub	r1, fp, #96	; 0x60
   13210:	mov	r0, r5
   13214:	bl	123e0 <__assert_fail@plt+0xdd8>
   13218:	sub	r5, r5, #36	; 0x24
   1321c:	ldr	r3, [fp, #-112]	; 0xffffff90
   13220:	cmp	r5, r3
   13224:	bcs	13204 <argp_parse@@Base+0x83c>
   13228:	cmp	r4, #7
   1322c:	moveq	r4, #22
   13230:	ldr	r0, [fp, #-40]	; 0xffffffd8
   13234:	bl	135bc <argp_parse@@Base+0xbf4>
   13238:	mov	r0, r4
   1323c:	sub	sp, fp, #32
   13240:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13244:	ldr	r6, [fp, #-112]	; 0xffffff90
   13248:	ldr	r5, [fp, #-108]	; 0xffffff94
   1324c:	cmp	r6, r5
   13250:	bcs	13384 <argp_parse@@Base+0x9bc>
   13254:	mov	r4, #0
   13258:	ldr	r8, [pc, #464]	; 13430 <argp_parse@@Base+0xa68>
   1325c:	mov	r7, r4
   13260:	mov	r0, r4
   13264:	b	13284 <argp_parse@@Base+0x8bc>
   13268:	add	r6, r6, #36	; 0x24
   1326c:	ldr	r5, [fp, #-108]	; 0xffffff94
   13270:	cmp	r6, r5
   13274:	bcs	132b0 <argp_parse@@Base+0x8e8>
   13278:	cmp	r0, #7
   1327c:	cmpne	r0, #0
   13280:	bne	132a8 <argp_parse@@Base+0x8e0>
   13284:	ldr	r3, [r6, #12]
   13288:	cmp	r3, #0
   1328c:	bne	13268 <argp_parse@@Base+0x8a0>
   13290:	mov	r3, r7
   13294:	mov	r2, r8
   13298:	sub	r1, fp, #96	; 0x60
   1329c:	mov	r0, r6
   132a0:	bl	123e0 <__assert_fail@plt+0xdd8>
   132a4:	b	13268 <argp_parse@@Base+0x8a0>
   132a8:	mov	r4, r0
   132ac:	b	13314 <argp_parse@@Base+0x94c>
   132b0:	mov	r4, r0
   132b4:	sub	r5, r5, #36	; 0x24
   132b8:	ldr	r3, [fp, #-112]	; 0xffffff90
   132bc:	cmp	r3, r5
   132c0:	bhi	13314 <argp_parse@@Base+0x94c>
   132c4:	cmp	r0, #0
   132c8:	cmpne	r0, #7
   132cc:	bne	13314 <argp_parse@@Base+0x94c>
   132d0:	ldr	r7, [pc, #348]	; 13434 <argp_parse@@Base+0xa6c>
   132d4:	mov	r6, #0
   132d8:	mov	r3, r6
   132dc:	mov	r2, r7
   132e0:	sub	r1, fp, #96	; 0x60
   132e4:	mov	r0, r5
   132e8:	bl	123e0 <__assert_fail@plt+0xdd8>
   132ec:	sub	r5, r5, #36	; 0x24
   132f0:	ldr	r3, [fp, #-112]	; 0xffffff90
   132f4:	cmp	r5, r3
   132f8:	bcc	13310 <argp_parse@@Base+0x948>
   132fc:	cmp	r0, #7
   13300:	cmpne	r0, #0
   13304:	beq	132d8 <argp_parse@@Base+0x910>
   13308:	mov	r4, r0
   1330c:	b	13314 <argp_parse@@Base+0x94c>
   13310:	mov	r4, r0
   13314:	cmp	r4, #7
   13318:	beq	13398 <argp_parse@@Base+0x9d0>
   1331c:	ldr	r3, [fp, #4]
   13320:	cmp	r3, #0
   13324:	beq	133dc <argp_parse@@Base+0xa14>
   13328:	ldr	r3, [fp, #-84]	; 0xffffffac
   1332c:	ldr	r2, [fp, #4]
   13330:	str	r3, [r2]
   13334:	cmp	r4, #0
   13338:	beq	1312c <argp_parse@@Base+0x764>
   1333c:	b	131a4 <argp_parse@@Base+0x7dc>
   13340:	ldr	r3, [fp, #-80]	; 0xffffffb0
   13344:	tst	r3, #2
   13348:	bne	13364 <argp_parse@@Base+0x99c>
   1334c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   13350:	cmp	r0, #0
   13354:	beq	13364 <argp_parse@@Base+0x99c>
   13358:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1335c:	ldr	r1, [pc, #212]	; 13438 <argp_parse@@Base+0xa70>
   13360:	bl	1147c <fprintf@plt>
   13364:	mov	r2, #260	; 0x104
   13368:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1336c:	sub	r0, fp, #96	; 0x60
   13370:	bl	17238 <argp_state_help@@Base>
   13374:	mov	r4, #7
   13378:	b	131ac <argp_parse@@Base+0x7e4>
   1337c:	mov	r4, #0
   13380:	b	13228 <argp_parse@@Base+0x860>
   13384:	sub	r5, r5, #36	; 0x24
   13388:	cmp	r6, r5
   1338c:	movhi	r4, #0
   13390:	bls	132d0 <argp_parse@@Base+0x908>
   13394:	b	1331c <argp_parse@@Base+0x954>
   13398:	ldr	r3, [fp, #4]
   1339c:	cmp	r3, #0
   133a0:	movne	r4, #0
   133a4:	bne	13328 <argp_parse@@Base+0x960>
   133a8:	b	1312c <argp_parse@@Base+0x764>
   133ac:	cmp	r0, #0
   133b0:	bne	13000 <argp_parse@@Base+0x638>
   133b4:	ldr	r3, [fp, #-92]	; 0xffffffa4
   133b8:	str	r3, [fp, #-84]	; 0xffffffac
   133bc:	ldr	r3, [fp, #-84]	; 0xffffffac
   133c0:	cmp	r8, r3
   133c4:	sublt	r8, r3, r8
   133c8:	ldrlt	r3, [r5, #-24]	; 0xffffffe8
   133cc:	addlt	r8, r3, r8
   133d0:	strlt	r8, [r5, #-24]	; 0xffffffe8
   133d4:	strge	sl, [fp, #-100]	; 0xffffff9c
   133d8:	b	13050 <argp_parse@@Base+0x688>
   133dc:	cmp	r4, #0
   133e0:	beq	1312c <argp_parse@@Base+0x764>
   133e4:	b	131ac <argp_parse@@Base+0x7e4>
   133e8:	andeq	sl, r2, r8, lsl #10
   133ec:	andeq	sl, r2, r0, lsl #10
   133f0:	andeq	sl, r2, r0, lsl r5
   133f4:	andeq	sl, r2, r4, lsl r5
   133f8:	tsteq	r0, r3
   133fc:	andeq	r8, r1, r4, lsr #31
   13400:	andeq	sl, r2, ip, asr r5
   13404:	andeq	r8, r1, r0, asr #31
   13408:	andeq	sl, r2, r4, lsr #10
   1340c:	ldrdeq	r8, [r1], -ip
   13410:	strdeq	r9, [r1], -r0
   13414:	andeq	r9, r1, ip, ror #1
   13418:	tsteq	r0, r6
   1341c:	andeq	r9, r1, r8, ror #1
   13420:	strdeq	r9, [r1], -r8
   13424:	tsteq	r0, r4
   13428:	tsteq	r0, r5
   1342c:	tsteq	r0, r7
   13430:	tsteq	r0, r2
   13434:	tsteq	r0, r1
   13438:	andeq	r9, r1, r4, lsl #2
   1343c:	cmp	r1, #0
   13440:	beq	1348c <argp_parse@@Base+0xac4>
   13444:	ldr	r2, [r1, #52]	; 0x34
   13448:	ldr	r3, [r2, #48]	; 0x30
   1344c:	ldr	r1, [r2, #52]	; 0x34
   13450:	cmp	r3, r1
   13454:	bcs	13494 <argp_parse@@Base+0xacc>
   13458:	ldr	r2, [r3, #4]
   1345c:	cmp	r0, r2
   13460:	beq	1347c <argp_parse@@Base+0xab4>
   13464:	add	r3, r3, #36	; 0x24
   13468:	cmp	r3, r1
   1346c:	bcs	13484 <argp_parse@@Base+0xabc>
   13470:	ldr	r2, [r3, #4]
   13474:	cmp	r2, r0
   13478:	bne	13464 <argp_parse@@Base+0xa9c>
   1347c:	ldr	r0, [r3, #24]
   13480:	bx	lr
   13484:	mov	r0, #0
   13488:	bx	lr
   1348c:	mov	r0, #0
   13490:	bx	lr
   13494:	mov	r0, #0
   13498:	bx	lr
   1349c:	push	{lr}		; (str lr, [sp, #-4]!)
   134a0:	sub	sp, sp, #12
   134a4:	ldr	r3, [pc, #28]	; 134c8 <argp_parse@@Base+0xb00>
   134a8:	ldr	r1, [r3]
   134ac:	ldr	r3, [r3, #4]
   134b0:	str	r3, [sp]
   134b4:	ldr	r3, [pc, #16]	; 134cc <argp_parse@@Base+0xb04>
   134b8:	ldr	r2, [pc, #16]	; 134d0 <argp_parse@@Base+0xb08>
   134bc:	bl	13aac <argp_parse@@Base+0x10e4>
   134c0:	add	sp, sp, #12
   134c4:	pop	{pc}		; (ldr pc, [sp], #4)
   134c8:	andeq	sl, r2, r8, lsr #10
   134cc:	andeq	r9, r1, ip, ror #3
   134d0:	strdeq	r9, [r1], -ip
   134d4:	ldr	r2, [pc, #20]	; 134f0 <argp_parse@@Base+0xb28>
   134d8:	ldr	r3, [pc, #20]	; 134f4 <argp_parse@@Base+0xb2c>
   134dc:	str	r2, [r3]
   134e0:	ldr	r3, [pc, #16]	; 134f8 <argp_parse@@Base+0xb30>
   134e4:	str	r0, [r3]
   134e8:	str	r1, [r3, #4]
   134ec:	bx	lr
   134f0:	muleq	r1, ip, r4
   134f4:	andeq	sl, r2, r4, lsr #10
   134f8:	andeq	sl, r2, r8, lsr #10
   134fc:	ldrb	r3, [r0]
   13500:	cmp	r3, #47	; 0x2f
   13504:	bne	13514 <argp_parse@@Base+0xb4c>
   13508:	ldrb	r3, [r0, #1]!
   1350c:	cmp	r3, #47	; 0x2f
   13510:	beq	13508 <argp_parse@@Base+0xb40>
   13514:	ldrb	r2, [r0]
   13518:	cmp	r2, #0
   1351c:	bxeq	lr
   13520:	push	{lr}		; (str lr, [sp, #-4]!)
   13524:	mov	r1, r0
   13528:	mov	r3, #0
   1352c:	mov	lr, #1
   13530:	mov	ip, r3
   13534:	b	13544 <argp_parse@@Base+0xb7c>
   13538:	ldrb	r2, [r1, #1]!
   1353c:	cmp	r2, #0
   13540:	beq	13560 <argp_parse@@Base+0xb98>
   13544:	cmp	r2, #47	; 0x2f
   13548:	moveq	r3, lr
   1354c:	beq	13538 <argp_parse@@Base+0xb70>
   13550:	cmp	r3, #0
   13554:	movne	r0, r1
   13558:	movne	r3, ip
   1355c:	b	13538 <argp_parse@@Base+0xb70>
   13560:	pop	{pc}		; (ldr pc, [sp], #4)
   13564:	push	{r4, lr}
   13568:	mov	r4, r0
   1356c:	bl	11458 <strlen@plt>
   13570:	cmp	r0, #1
   13574:	popls	{r4, pc}
   13578:	sub	r3, r0, #1
   1357c:	add	r2, r4, r3
   13580:	ldrb	r1, [r4, r3]
   13584:	cmp	r1, #47	; 0x2f
   13588:	popne	{r4, pc}
   1358c:	cmp	r3, #1
   13590:	beq	135b4 <argp_parse@@Base+0xbec>
   13594:	sub	r0, r3, #1
   13598:	ldrb	r1, [r2, #-1]!
   1359c:	cmp	r1, #47	; 0x2f
   135a0:	beq	135ac <argp_parse@@Base+0xbe4>
   135a4:	mov	r0, r3
   135a8:	pop	{r4, pc}
   135ac:	mov	r3, r0
   135b0:	b	1358c <argp_parse@@Base+0xbc4>
   135b4:	mov	r0, #1
   135b8:	pop	{r4, pc}
   135bc:	push	{r4, r5, lr}
   135c0:	sub	sp, sp, #12
   135c4:	mov	r5, r0
   135c8:	bl	11494 <__errno_location@plt>
   135cc:	mov	r4, r0
   135d0:	ldr	r3, [r0]
   135d4:	str	r3, [sp]
   135d8:	str	r3, [sp, #4]
   135dc:	mov	r3, #0
   135e0:	str	r3, [r0]
   135e4:	mov	r0, r5
   135e8:	bl	112f0 <free@plt>
   135ec:	ldr	r3, [r4]
   135f0:	cmp	r3, #0
   135f4:	moveq	r3, #4
   135f8:	movne	r3, #0
   135fc:	add	r2, sp, #8
   13600:	add	r3, r2, r3
   13604:	ldr	r3, [r3, #-8]
   13608:	str	r3, [r4]
   1360c:	add	sp, sp, #12
   13610:	pop	{r4, r5, pc}
   13614:	push	{lr}		; (str lr, [sp, #-4]!)
   13618:	sub	sp, sp, #20
   1361c:	mov	ip, #0
   13620:	str	ip, [sp, #8]
   13624:	str	ip, [sp, #4]
   13628:	ldr	ip, [sp, #24]
   1362c:	str	ip, [sp]
   13630:	bl	17f70 <argp_error@@Base+0xc7c>
   13634:	add	sp, sp, #20
   13638:	pop	{pc}		; (ldr pc, [sp], #4)
   1363c:	push	{lr}		; (str lr, [sp, #-4]!)
   13640:	sub	sp, sp, #20
   13644:	mov	ip, #0
   13648:	str	ip, [sp, #12]
   1364c:	ldr	lr, [sp, #28]
   13650:	str	lr, [sp, #8]
   13654:	str	ip, [sp, #4]
   13658:	ldr	ip, [sp, #24]
   1365c:	str	ip, [sp]
   13660:	bl	179f4 <argp_error@@Base+0x700>
   13664:	add	sp, sp, #20
   13668:	pop	{pc}		; (ldr pc, [sp], #4)
   1366c:	push	{lr}		; (str lr, [sp, #-4]!)
   13670:	sub	sp, sp, #20
   13674:	mov	ip, #0
   13678:	str	ip, [sp, #8]
   1367c:	mov	ip, #1
   13680:	str	ip, [sp, #4]
   13684:	ldr	ip, [sp, #24]
   13688:	str	ip, [sp]
   1368c:	bl	17f70 <argp_error@@Base+0xc7c>
   13690:	add	sp, sp, #20
   13694:	pop	{pc}		; (ldr pc, [sp], #4)
   13698:	push	{lr}		; (str lr, [sp, #-4]!)
   1369c:	sub	sp, sp, #20
   136a0:	mov	ip, #0
   136a4:	str	ip, [sp, #12]
   136a8:	ldr	ip, [sp, #28]
   136ac:	str	ip, [sp, #8]
   136b0:	mov	ip, #1
   136b4:	str	ip, [sp, #4]
   136b8:	ldr	ip, [sp, #24]
   136bc:	str	ip, [sp]
   136c0:	bl	179f4 <argp_error@@Base+0x700>
   136c4:	add	sp, sp, #20
   136c8:	pop	{pc}		; (ldr pc, [sp], #4)
   136cc:	push	{r1, r2, r3}
   136d0:	push	{lr}		; (str lr, [sp, #-4]!)
   136d4:	sub	sp, sp, #8
   136d8:	add	r3, sp, #20
   136dc:	str	r3, [sp, #4]
   136e0:	ldr	r2, [sp, #16]
   136e4:	ldr	r1, [sp, #12]
   136e8:	bl	113bc <ioctl@plt>
   136ec:	add	sp, sp, #8
   136f0:	pop	{lr}		; (ldr lr, [sp], #4)
   136f4:	add	sp, sp, #12
   136f8:	bx	lr
   136fc:	push	{r4, r5, r6, lr}
   13700:	subs	r4, r0, #0
   13704:	beq	1377c <argp_parse@@Base+0xdb4>
   13708:	mov	r1, #47	; 0x2f
   1370c:	mov	r0, r4
   13710:	bl	11530 <strrchr@plt>
   13714:	cmp	r0, #0
   13718:	addne	r5, r0, #1
   1371c:	moveq	r5, r4
   13720:	sub	r3, r5, r4
   13724:	cmp	r3, #6
   13728:	ble	13768 <argp_parse@@Base+0xda0>
   1372c:	mov	r2, #7
   13730:	ldr	r1, [pc, #96]	; 13798 <argp_parse@@Base+0xdd0>
   13734:	sub	r0, r5, #7
   13738:	bl	115d8 <strncmp@plt>
   1373c:	cmp	r0, #0
   13740:	bne	13768 <argp_parse@@Base+0xda0>
   13744:	mov	r2, #3
   13748:	ldr	r1, [pc, #76]	; 1379c <argp_parse@@Base+0xdd4>
   1374c:	mov	r0, r5
   13750:	bl	115d8 <strncmp@plt>
   13754:	cmp	r0, #0
   13758:	addeq	r4, r5, #3
   1375c:	ldreq	r3, [pc, #60]	; 137a0 <argp_parse@@Base+0xdd8>
   13760:	streq	r4, [r3]
   13764:	movne	r4, r5
   13768:	ldr	r3, [pc, #52]	; 137a4 <argp_parse@@Base+0xddc>
   1376c:	str	r4, [r3]
   13770:	ldr	r3, [pc, #48]	; 137a8 <argp_parse@@Base+0xde0>
   13774:	str	r4, [r3]
   13778:	pop	{r4, r5, r6, pc}
   1377c:	ldr	r3, [pc, #40]	; 137ac <argp_parse@@Base+0xde4>
   13780:	ldr	r3, [r3]
   13784:	mov	r2, #55	; 0x37
   13788:	mov	r1, #1
   1378c:	ldr	r0, [pc, #28]	; 137b0 <argp_parse@@Base+0xde8>
   13790:	bl	113b0 <fwrite@plt>
   13794:	bl	115e4 <abort@plt>
   13798:	andeq	r9, r1, r4, asr #4
   1379c:	andeq	r9, r1, ip, asr #4
   137a0:	andeq	sl, r2, r0, lsl #10
   137a4:	andeq	sl, r2, r0, lsr r5
   137a8:	andeq	sl, r2, r8, lsl #10
   137ac:	andeq	sl, r2, r0, lsl r5
   137b0:	andeq	r9, r1, ip, lsl #4
   137b4:	push	{r4, r5, r6, lr}
   137b8:	sub	sp, sp, #32
   137bc:	mov	r4, r0
   137c0:	ldr	r5, [sp, #48]	; 0x30
   137c4:	ldr	r6, [sp, #52]	; 0x34
   137c8:	cmp	r1, #0
   137cc:	beq	13854 <argp_parse@@Base+0xe8c>
   137d0:	str	r3, [sp]
   137d4:	mov	r3, r2
   137d8:	mov	r2, r1
   137dc:	ldr	r1, [pc, #644]	; 13a68 <argp_parse@@Base+0x10a0>
   137e0:	bl	1147c <fprintf@plt>
   137e4:	ldr	r3, [pc, #640]	; 13a6c <argp_parse@@Base+0x10a4>
   137e8:	ldr	r2, [pc, #640]	; 13a70 <argp_parse@@Base+0x10a8>
   137ec:	ldr	r1, [pc, #640]	; 13a74 <argp_parse@@Base+0x10ac>
   137f0:	mov	r0, r4
   137f4:	bl	1147c <fprintf@plt>
   137f8:	mov	r1, r4
   137fc:	mov	r0, #10
   13800:	bl	11554 <fputc@plt>
   13804:	ldr	r2, [pc, #620]	; 13a78 <argp_parse@@Base+0x10b0>
   13808:	ldr	r1, [pc, #620]	; 13a7c <argp_parse@@Base+0x10b4>
   1380c:	mov	r0, r4
   13810:	bl	1147c <fprintf@plt>
   13814:	mov	r1, r4
   13818:	mov	r0, #10
   1381c:	bl	11554 <fputc@plt>
   13820:	cmp	r6, #9
   13824:	ldrls	pc, [pc, r6, lsl #2]
   13828:	b	13a18 <argp_parse@@Base+0x1050>
   1382c:	andeq	r3, r1, r0, ror r8
   13830:	andeq	r3, r1, r0, ror #16
   13834:	andeq	r3, r1, r8, ror r8
   13838:	muleq	r1, r0, r8
   1383c:			; <UNDEFINED> instruction: 0x000138b0
   13840:	ldrdeq	r3, [r1], -r8
   13844:	andeq	r3, r1, r8, lsl #18
   13848:	andeq	r3, r1, r0, asr #18
   1384c:	andeq	r3, r1, r0, lsl #19
   13850:	andeq	r3, r1, r8, asr #19
   13854:	ldr	r1, [pc, #548]	; 13a80 <argp_parse@@Base+0x10b8>
   13858:	bl	1147c <fprintf@plt>
   1385c:	b	137e4 <argp_parse@@Base+0xe1c>
   13860:	ldr	r2, [r5]
   13864:	ldr	r1, [pc, #536]	; 13a84 <argp_parse@@Base+0x10bc>
   13868:	mov	r0, r4
   1386c:	bl	1147c <fprintf@plt>
   13870:	add	sp, sp, #32
   13874:	pop	{r4, r5, r6, pc}
   13878:	ldr	r3, [r5, #4]
   1387c:	ldr	r2, [r5]
   13880:	ldr	r1, [pc, #512]	; 13a88 <argp_parse@@Base+0x10c0>
   13884:	mov	r0, r4
   13888:	bl	1147c <fprintf@plt>
   1388c:	b	13870 <argp_parse@@Base+0xea8>
   13890:	ldr	r3, [r5, #4]
   13894:	ldr	r2, [r5]
   13898:	ldr	r1, [r5, #8]
   1389c:	str	r1, [sp]
   138a0:	ldr	r1, [pc, #484]	; 13a8c <argp_parse@@Base+0x10c4>
   138a4:	mov	r0, r4
   138a8:	bl	1147c <fprintf@plt>
   138ac:	b	13870 <argp_parse@@Base+0xea8>
   138b0:	ldr	r3, [r5, #4]
   138b4:	ldr	r2, [r5]
   138b8:	ldr	r1, [r5, #12]
   138bc:	str	r1, [sp, #4]
   138c0:	ldr	r1, [r5, #8]
   138c4:	str	r1, [sp]
   138c8:	ldr	r1, [pc, #448]	; 13a90 <argp_parse@@Base+0x10c8>
   138cc:	mov	r0, r4
   138d0:	bl	1147c <fprintf@plt>
   138d4:	b	13870 <argp_parse@@Base+0xea8>
   138d8:	ldr	r3, [r5, #4]
   138dc:	ldr	r2, [r5]
   138e0:	ldr	r1, [r5, #16]
   138e4:	str	r1, [sp, #8]
   138e8:	ldr	r1, [r5, #12]
   138ec:	str	r1, [sp, #4]
   138f0:	ldr	r1, [r5, #8]
   138f4:	str	r1, [sp]
   138f8:	ldr	r1, [pc, #404]	; 13a94 <argp_parse@@Base+0x10cc>
   138fc:	mov	r0, r4
   13900:	bl	1147c <fprintf@plt>
   13904:	b	13870 <argp_parse@@Base+0xea8>
   13908:	ldr	r3, [r5, #4]
   1390c:	ldr	r2, [r5]
   13910:	ldr	r1, [r5, #20]
   13914:	str	r1, [sp, #12]
   13918:	ldr	r1, [r5, #16]
   1391c:	str	r1, [sp, #8]
   13920:	ldr	r1, [r5, #12]
   13924:	str	r1, [sp, #4]
   13928:	ldr	r1, [r5, #8]
   1392c:	str	r1, [sp]
   13930:	ldr	r1, [pc, #352]	; 13a98 <argp_parse@@Base+0x10d0>
   13934:	mov	r0, r4
   13938:	bl	1147c <fprintf@plt>
   1393c:	b	13870 <argp_parse@@Base+0xea8>
   13940:	ldr	r3, [r5, #4]
   13944:	ldr	r2, [r5]
   13948:	ldr	r1, [r5, #24]
   1394c:	str	r1, [sp, #16]
   13950:	ldr	r1, [r5, #20]
   13954:	str	r1, [sp, #12]
   13958:	ldr	r1, [r5, #16]
   1395c:	str	r1, [sp, #8]
   13960:	ldr	r1, [r5, #12]
   13964:	str	r1, [sp, #4]
   13968:	ldr	r1, [r5, #8]
   1396c:	str	r1, [sp]
   13970:	ldr	r1, [pc, #292]	; 13a9c <argp_parse@@Base+0x10d4>
   13974:	mov	r0, r4
   13978:	bl	1147c <fprintf@plt>
   1397c:	b	13870 <argp_parse@@Base+0xea8>
   13980:	ldr	r3, [r5, #4]
   13984:	ldr	r2, [r5]
   13988:	ldr	r1, [r5, #28]
   1398c:	str	r1, [sp, #20]
   13990:	ldr	r1, [r5, #24]
   13994:	str	r1, [sp, #16]
   13998:	ldr	r1, [r5, #20]
   1399c:	str	r1, [sp, #12]
   139a0:	ldr	r1, [r5, #16]
   139a4:	str	r1, [sp, #8]
   139a8:	ldr	r1, [r5, #12]
   139ac:	str	r1, [sp, #4]
   139b0:	ldr	r1, [r5, #8]
   139b4:	str	r1, [sp]
   139b8:	ldr	r1, [pc, #224]	; 13aa0 <argp_parse@@Base+0x10d8>
   139bc:	mov	r0, r4
   139c0:	bl	1147c <fprintf@plt>
   139c4:	b	13870 <argp_parse@@Base+0xea8>
   139c8:	ldr	r3, [r5, #4]
   139cc:	ldr	r2, [r5]
   139d0:	ldr	r1, [r5, #32]
   139d4:	str	r1, [sp, #24]
   139d8:	ldr	r1, [r5, #28]
   139dc:	str	r1, [sp, #20]
   139e0:	ldr	r1, [r5, #24]
   139e4:	str	r1, [sp, #16]
   139e8:	ldr	r1, [r5, #20]
   139ec:	str	r1, [sp, #12]
   139f0:	ldr	r1, [r5, #16]
   139f4:	str	r1, [sp, #8]
   139f8:	ldr	r1, [r5, #12]
   139fc:	str	r1, [sp, #4]
   13a00:	ldr	r1, [r5, #8]
   13a04:	str	r1, [sp]
   13a08:	ldr	r1, [pc, #148]	; 13aa4 <argp_parse@@Base+0x10dc>
   13a0c:	mov	r0, r4
   13a10:	bl	1147c <fprintf@plt>
   13a14:	b	13870 <argp_parse@@Base+0xea8>
   13a18:	ldr	r3, [r5, #4]
   13a1c:	ldr	r2, [r5]
   13a20:	ldr	r1, [r5, #32]
   13a24:	str	r1, [sp, #24]
   13a28:	ldr	r1, [r5, #28]
   13a2c:	str	r1, [sp, #20]
   13a30:	ldr	r1, [r5, #24]
   13a34:	str	r1, [sp, #16]
   13a38:	ldr	r1, [r5, #20]
   13a3c:	str	r1, [sp, #12]
   13a40:	ldr	r1, [r5, #16]
   13a44:	str	r1, [sp, #8]
   13a48:	ldr	r1, [r5, #12]
   13a4c:	str	r1, [sp, #4]
   13a50:	ldr	r1, [r5, #8]
   13a54:	str	r1, [sp]
   13a58:	ldr	r1, [pc, #72]	; 13aa8 <argp_parse@@Base+0x10e0>
   13a5c:	mov	r0, r4
   13a60:	bl	1147c <fprintf@plt>
   13a64:	b	13870 <argp_parse@@Base+0xea8>
   13a68:	andeq	r9, r1, r0, asr r2
   13a6c:	andeq	r0, r0, r6, ror #15
   13a70:	andeq	r9, r1, r4, ror #4
   13a74:	andeq	r9, r1, r4, ror #10
   13a78:	andeq	r9, r1, r8, ror #4
   13a7c:	andeq	r9, r1, ip, lsl #5
   13a80:	andeq	r9, r1, ip, asr r2
   13a84:	andeq	r9, r1, r8, lsr r3
   13a88:	andeq	r9, r1, r8, asr #6
   13a8c:	andeq	r9, r1, r0, ror #6
   13a90:	andeq	r9, r1, ip, ror r3
   13a94:	muleq	r1, ip, r3
   13a98:	andeq	r9, r1, r0, asr #7
   13a9c:	andeq	r9, r1, r8, ror #7
   13aa0:	andeq	r9, r1, r4, lsl r4
   13aa4:	andeq	r9, r1, r4, asr #8
   13aa8:	andeq	r9, r1, r8, ror r4
   13aac:	push	{r4, r5, lr}
   13ab0:	sub	sp, sp, #12
   13ab4:	ldr	r5, [sp, #24]
   13ab8:	ldr	ip, [r5]
   13abc:	cmp	ip, #0
   13ac0:	beq	13af0 <argp_parse@@Base+0x1128>
   13ac4:	mov	lr, r5
   13ac8:	mov	ip, #0
   13acc:	add	ip, ip, #1
   13ad0:	ldr	r4, [lr, #4]!
   13ad4:	cmp	r4, #0
   13ad8:	bne	13acc <argp_parse@@Base+0x1104>
   13adc:	str	ip, [sp, #4]
   13ae0:	str	r5, [sp]
   13ae4:	bl	137b4 <argp_parse@@Base+0xdec>
   13ae8:	add	sp, sp, #12
   13aec:	pop	{r4, r5, pc}
   13af0:	mov	ip, #0
   13af4:	b	13adc <argp_parse@@Base+0x1114>
   13af8:	push	{r4, r5, lr}
   13afc:	sub	sp, sp, #52	; 0x34
   13b00:	ldr	r4, [sp, #64]	; 0x40
   13b04:	sub	r4, r4, #4
   13b08:	add	r5, sp, #4
   13b0c:	mov	ip, #0
   13b10:	ldr	lr, [r4, #4]!
   13b14:	str	lr, [r5, #4]!
   13b18:	cmp	lr, #0
   13b1c:	beq	13b2c <argp_parse@@Base+0x1164>
   13b20:	add	ip, ip, #1
   13b24:	cmp	ip, #10
   13b28:	bne	13b10 <argp_parse@@Base+0x1148>
   13b2c:	str	ip, [sp, #4]
   13b30:	add	ip, sp, #8
   13b34:	str	ip, [sp]
   13b38:	bl	137b4 <argp_parse@@Base+0xdec>
   13b3c:	add	sp, sp, #52	; 0x34
   13b40:	pop	{r4, r5, pc}
   13b44:	push	{r3}		; (str r3, [sp, #-4]!)
   13b48:	push	{lr}		; (str lr, [sp, #-4]!)
   13b4c:	sub	sp, sp, #16
   13b50:	add	r3, sp, #24
   13b54:	str	r3, [sp, #12]
   13b58:	str	r3, [sp]
   13b5c:	ldr	r3, [sp, #20]
   13b60:	bl	13af8 <argp_parse@@Base+0x1130>
   13b64:	add	sp, sp, #16
   13b68:	pop	{lr}		; (ldr lr, [sp], #4)
   13b6c:	add	sp, sp, #4
   13b70:	bx	lr
   13b74:	push	{r4, lr}
   13b78:	ldr	r3, [pc, #52]	; 13bb4 <argp_parse@@Base+0x11ec>
   13b7c:	ldr	r1, [r3]
   13b80:	mov	r0, #10
   13b84:	bl	11554 <fputc@plt>
   13b88:	ldr	r1, [pc, #40]	; 13bb8 <argp_parse@@Base+0x11f0>
   13b8c:	ldr	r0, [pc, #40]	; 13bbc <argp_parse@@Base+0x11f4>
   13b90:	bl	112b4 <printf@plt>
   13b94:	ldr	r2, [pc, #36]	; 13bc0 <argp_parse@@Base+0x11f8>
   13b98:	ldr	r1, [pc, #36]	; 13bc4 <argp_parse@@Base+0x11fc>
   13b9c:	ldr	r0, [pc, #36]	; 13bc8 <argp_parse@@Base+0x1200>
   13ba0:	bl	112b4 <printf@plt>
   13ba4:	ldr	r1, [pc, #32]	; 13bcc <argp_parse@@Base+0x1204>
   13ba8:	ldr	r0, [pc, #32]	; 13bd0 <argp_parse@@Base+0x1208>
   13bac:	bl	112b4 <printf@plt>
   13bb0:	pop	{r4, pc}
   13bb4:	andeq	sl, r2, r4, lsl r5
   13bb8:			; <UNDEFINED> instruction: 0x000194b4
   13bbc:	andeq	r9, r1, ip, asr #9
   13bc0:	andeq	r9, r1, r0, ror #9
   13bc4:	strdeq	r9, [r1], -ip
   13bc8:	andeq	r9, r1, r8, lsl #10
   13bcc:	andeq	r9, r1, ip, lsl r5
   13bd0:	andeq	r9, r1, ip, lsr r5
   13bd4:	push	{r4, lr}
   13bd8:	bl	141f4 <argp_parse@@Base+0x182c>
   13bdc:	cmp	r0, #0
   13be0:	popne	{r4, pc}
   13be4:	bl	14178 <argp_parse@@Base+0x17b0>
   13be8:	push	{r4, lr}
   13bec:	bl	141f4 <argp_parse@@Base+0x182c>
   13bf0:	cmp	r0, #0
   13bf4:	popne	{r4, pc}
   13bf8:	bl	14178 <argp_parse@@Base+0x17b0>
   13bfc:	push	{r4, lr}
   13c00:	bl	13bd4 <argp_parse@@Base+0x120c>
   13c04:	pop	{r4, pc}
   13c08:	push	{r4, r5, r6, lr}
   13c0c:	mov	r5, r0
   13c10:	mov	r4, r1
   13c14:	bl	14224 <argp_parse@@Base+0x185c>
   13c18:	cmp	r0, #0
   13c1c:	popne	{r4, r5, r6, pc}
   13c20:	adds	r4, r4, #0
   13c24:	movne	r4, #1
   13c28:	cmp	r5, #0
   13c2c:	orreq	r4, r4, #1
   13c30:	cmp	r4, #0
   13c34:	popeq	{r4, r5, r6, pc}
   13c38:	bl	14178 <argp_parse@@Base+0x17b0>
   13c3c:	push	{r4, lr}
   13c40:	cmp	r1, #0
   13c44:	orreq	r1, r1, #1
   13c48:	bl	14224 <argp_parse@@Base+0x185c>
   13c4c:	cmp	r0, #0
   13c50:	popne	{r4, pc}
   13c54:	bl	14178 <argp_parse@@Base+0x17b0>
   13c58:	push	{r4, r5, r6, lr}
   13c5c:	mov	r6, r0
   13c60:	mov	r5, r1
   13c64:	mov	r4, r2
   13c68:	bl	18008 <argp_error@@Base+0xd14>
   13c6c:	cmp	r0, #0
   13c70:	popne	{r4, r5, r6, pc}
   13c74:	cmp	r6, #0
   13c78:	beq	13c88 <argp_parse@@Base+0x12c0>
   13c7c:	cmp	r5, #0
   13c80:	cmpne	r4, #0
   13c84:	popeq	{r4, r5, r6, pc}
   13c88:	bl	14178 <argp_parse@@Base+0x17b0>
   13c8c:	push	{r4, lr}
   13c90:	bl	13c58 <argp_parse@@Base+0x1290>
   13c94:	pop	{r4, pc}
   13c98:	push	{r4, lr}
   13c9c:	mov	ip, r1
   13ca0:	mov	r3, r2
   13ca4:	cmp	r2, #0
   13ca8:	cmpne	r1, #0
   13cac:	moveq	r3, #1
   13cb0:	moveq	ip, r3
   13cb4:	mov	r2, r3
   13cb8:	mov	r1, ip
   13cbc:	bl	18008 <argp_error@@Base+0xd14>
   13cc0:	cmp	r0, #0
   13cc4:	popne	{r4, pc}
   13cc8:	bl	14178 <argp_parse@@Base+0x17b0>
   13ccc:	push	{r4, lr}
   13cd0:	mov	r2, r1
   13cd4:	mov	r1, r0
   13cd8:	mov	r0, #0
   13cdc:	bl	13c58 <argp_parse@@Base+0x1290>
   13ce0:	pop	{r4, pc}
   13ce4:	push	{r4, lr}
   13ce8:	mov	r2, r1
   13cec:	mov	r1, r0
   13cf0:	mov	r0, #0
   13cf4:	bl	13c98 <argp_parse@@Base+0x12d0>
   13cf8:	pop	{r4, pc}
   13cfc:	push	{r4, r5, r6, r7, r8, lr}
   13d00:	mov	r5, r1
   13d04:	mov	r6, r2
   13d08:	ldr	r4, [r1]
   13d0c:	subs	r7, r0, #0
   13d10:	beq	13d2c <argp_parse@@Base+0x1364>
   13d14:	lsr	r2, r4, #1
   13d18:	add	r3, r2, #1
   13d1c:	mvn	r3, r3
   13d20:	cmp	r4, r3
   13d24:	bls	13d50 <argp_parse@@Base+0x1388>
   13d28:	bl	14178 <argp_parse@@Base+0x17b0>
   13d2c:	cmp	r4, #0
   13d30:	bne	13d58 <argp_parse@@Base+0x1390>
   13d34:	mov	r1, r2
   13d38:	mov	r0, #64	; 0x40
   13d3c:	bl	187e0 <argp_error@@Base+0x14ec>
   13d40:	cmp	r0, #0
   13d44:	movne	r4, r0
   13d48:	addeq	r4, r0, #1
   13d4c:	b	13d58 <argp_parse@@Base+0x1390>
   13d50:	add	r4, r4, #1
   13d54:	add	r4, r4, r2
   13d58:	mov	r2, r6
   13d5c:	mov	r1, r4
   13d60:	mov	r0, r7
   13d64:	bl	13c58 <argp_parse@@Base+0x1290>
   13d68:	str	r4, [r5]
   13d6c:	pop	{r4, r5, r6, r7, r8, pc}
   13d70:	push	{r4, lr}
   13d74:	mov	r2, #1
   13d78:	bl	13cfc <argp_parse@@Base+0x1334>
   13d7c:	pop	{r4, pc}
   13d80:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13d84:	sub	sp, sp, #12
   13d88:	mov	fp, r0
   13d8c:	mov	sl, r1
   13d90:	mov	r9, r2
   13d94:	mov	r7, r3
   13d98:	ldr	r6, [sp, #48]	; 0x30
   13d9c:	ldr	r5, [r1]
   13da0:	asrs	r4, r5, #1
   13da4:	bmi	13f00 <argp_parse@@Base+0x1538>
   13da8:	cmp	r5, #0
   13dac:	blt	13f14 <argp_parse@@Base+0x154c>
   13db0:	mvn	r3, #-2147483648	; 0x80000000
   13db4:	sub	r3, r3, r4
   13db8:	cmp	r5, r3
   13dbc:	movle	r3, #0
   13dc0:	movgt	r3, #1
   13dc4:	cmp	r3, #0
   13dc8:	addeq	r4, r4, r5
   13dcc:	mvnne	r4, #-2147483648	; 0x80000000
   13dd0:	mvn	r8, r7
   13dd4:	lsr	r8, r8, #31
   13dd8:	cmp	r7, r4
   13ddc:	movge	r3, #0
   13de0:	andlt	r3, r8, #1
   13de4:	cmp	r3, #0
   13de8:	movne	r4, r7
   13dec:	cmp	r6, #0
   13df0:	blt	13f28 <argp_parse@@Base+0x1560>
   13df4:	cmp	r6, #0
   13df8:	beq	13fd4 <argp_parse@@Base+0x160c>
   13dfc:	cmp	r4, #0
   13e00:	blt	13f84 <argp_parse@@Base+0x15bc>
   13e04:	mov	r1, r6
   13e08:	mvn	r0, #-2147483648	; 0x80000000
   13e0c:	bl	189ec <argp_error@@Base+0x16f8>
   13e10:	cmp	r0, r4
   13e14:	movge	r0, #0
   13e18:	movlt	r0, #1
   13e1c:	cmp	r0, #0
   13e20:	mvnne	r3, #-2147483648	; 0x80000000
   13e24:	strne	r3, [sp, #4]
   13e28:	beq	13fbc <argp_parse@@Base+0x15f4>
   13e2c:	mov	r1, r6
   13e30:	ldr	r0, [sp, #4]
   13e34:	bl	189ec <argp_error@@Base+0x16f8>
   13e38:	mov	r4, r0
   13e3c:	mov	r1, r6
   13e40:	ldr	r0, [sp, #4]
   13e44:	bl	18c0c <argp_error@@Base+0x1918>
   13e48:	ldr	r3, [sp, #4]
   13e4c:	sub	r1, r3, r1
   13e50:	cmp	fp, #0
   13e54:	moveq	r3, #0
   13e58:	streq	r3, [sl]
   13e5c:	sub	r3, r4, r5
   13e60:	cmp	r3, r9
   13e64:	bge	13eec <argp_parse@@Base+0x1524>
   13e68:	cmp	r9, #0
   13e6c:	blt	13fe0 <argp_parse@@Base+0x1618>
   13e70:	cmp	r5, #0
   13e74:	blt	13ff4 <argp_parse@@Base+0x162c>
   13e78:	mvn	r3, #-2147483648	; 0x80000000
   13e7c:	sub	r3, r3, r9
   13e80:	cmp	r5, r3
   13e84:	movle	r3, #0
   13e88:	movgt	r3, #1
   13e8c:	cmp	r3, #0
   13e90:	bne	1409c <argp_parse@@Base+0x16d4>
   13e94:	add	r5, r5, r9
   13e98:	mov	r4, r5
   13e9c:	cmp	r7, r5
   13ea0:	movge	r7, #0
   13ea4:	andlt	r7, r8, #1
   13ea8:	cmp	r7, #0
   13eac:	bne	1409c <argp_parse@@Base+0x16d4>
   13eb0:	cmp	r6, #0
   13eb4:	blt	14008 <argp_parse@@Base+0x1640>
   13eb8:	cmp	r6, #0
   13ebc:	beq	13ee8 <argp_parse@@Base+0x1520>
   13ec0:	cmp	r5, #0
   13ec4:	blt	14064 <argp_parse@@Base+0x169c>
   13ec8:	mov	r1, r6
   13ecc:	mvn	r0, #-2147483648	; 0x80000000
   13ed0:	bl	189ec <argp_error@@Base+0x16f8>
   13ed4:	cmp	r5, r0
   13ed8:	movle	r0, #0
   13edc:	movgt	r0, #1
   13ee0:	cmp	r0, #0
   13ee4:	bne	1409c <argp_parse@@Base+0x16d4>
   13ee8:	mul	r1, r5, r6
   13eec:	mov	r0, fp
   13ef0:	bl	13c08 <argp_parse@@Base+0x1240>
   13ef4:	str	r4, [sl]
   13ef8:	add	sp, sp, #12
   13efc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13f00:	rsb	r3, r4, #-2147483648	; 0x80000000
   13f04:	cmp	r5, r3
   13f08:	movge	r3, #0
   13f0c:	movlt	r3, #1
   13f10:	b	13dc4 <argp_parse@@Base+0x13fc>
   13f14:	rsb	r3, r5, #-2147483648	; 0x80000000
   13f18:	cmp	r4, r3
   13f1c:	movge	r3, #0
   13f20:	movlt	r3, #1
   13f24:	b	13dc4 <argp_parse@@Base+0x13fc>
   13f28:	cmp	r4, #0
   13f2c:	blt	13f54 <argp_parse@@Base+0x158c>
   13f30:	cmn	r6, #1
   13f34:	beq	13f70 <argp_parse@@Base+0x15a8>
   13f38:	mov	r1, r6
   13f3c:	mov	r0, #-2147483648	; 0x80000000
   13f40:	bl	189ec <argp_error@@Base+0x16f8>
   13f44:	cmp	r0, r4
   13f48:	movge	r0, #0
   13f4c:	movlt	r0, #1
   13f50:	b	13e1c <argp_parse@@Base+0x1454>
   13f54:	mov	r1, r6
   13f58:	mvn	r0, #-2147483648	; 0x80000000
   13f5c:	bl	189ec <argp_error@@Base+0x16f8>
   13f60:	cmp	r0, r4
   13f64:	movle	r0, #0
   13f68:	movgt	r0, #1
   13f6c:	b	13e1c <argp_parse@@Base+0x1454>
   13f70:	add	r0, r4, #-2147483648	; 0x80000000
   13f74:	cmp	r0, #0
   13f78:	movle	r0, #0
   13f7c:	movgt	r0, #1
   13f80:	b	13e1c <argp_parse@@Base+0x1454>
   13f84:	cmn	r4, #1
   13f88:	beq	13fa8 <argp_parse@@Base+0x15e0>
   13f8c:	mov	r1, r4
   13f90:	mov	r0, #-2147483648	; 0x80000000
   13f94:	bl	189ec <argp_error@@Base+0x16f8>
   13f98:	cmp	r6, r0
   13f9c:	movle	r0, #0
   13fa0:	movgt	r0, #1
   13fa4:	b	13e1c <argp_parse@@Base+0x1454>
   13fa8:	add	r0, r6, #-2147483648	; 0x80000000
   13fac:	cmp	r0, #0
   13fb0:	movle	r0, #0
   13fb4:	movgt	r0, #1
   13fb8:	b	13e1c <argp_parse@@Base+0x1454>
   13fbc:	mul	r1, r6, r4
   13fc0:	cmp	r1, #63	; 0x3f
   13fc4:	movle	r3, #64	; 0x40
   13fc8:	strle	r3, [sp, #4]
   13fcc:	bgt	13e50 <argp_parse@@Base+0x1488>
   13fd0:	b	13e2c <argp_parse@@Base+0x1464>
   13fd4:	mov	r3, #64	; 0x40
   13fd8:	str	r3, [sp, #4]
   13fdc:	b	13e2c <argp_parse@@Base+0x1464>
   13fe0:	rsb	r3, r9, #-2147483648	; 0x80000000
   13fe4:	cmp	r5, r3
   13fe8:	movge	r3, #0
   13fec:	movlt	r3, #1
   13ff0:	b	13e8c <argp_parse@@Base+0x14c4>
   13ff4:	rsb	r3, r5, #-2147483648	; 0x80000000
   13ff8:	cmp	r9, r3
   13ffc:	movge	r3, #0
   14000:	movlt	r3, #1
   14004:	b	13e8c <argp_parse@@Base+0x14c4>
   14008:	cmp	r5, #0
   1400c:	blt	14034 <argp_parse@@Base+0x166c>
   14010:	cmn	r6, #1
   14014:	beq	14050 <argp_parse@@Base+0x1688>
   14018:	mov	r1, r6
   1401c:	mov	r0, #-2147483648	; 0x80000000
   14020:	bl	189ec <argp_error@@Base+0x16f8>
   14024:	cmp	r5, r0
   14028:	movle	r0, #0
   1402c:	movgt	r0, #1
   14030:	b	13ee0 <argp_parse@@Base+0x1518>
   14034:	mov	r1, r6
   14038:	mvn	r0, #-2147483648	; 0x80000000
   1403c:	bl	189ec <argp_error@@Base+0x16f8>
   14040:	cmp	r5, r0
   14044:	movge	r0, #0
   14048:	movlt	r0, #1
   1404c:	b	13ee0 <argp_parse@@Base+0x1518>
   14050:	add	r0, r5, #-2147483648	; 0x80000000
   14054:	cmp	r0, #0
   14058:	movle	r0, #0
   1405c:	movgt	r0, #1
   14060:	b	13ee0 <argp_parse@@Base+0x1518>
   14064:	cmn	r5, #1
   14068:	beq	14088 <argp_parse@@Base+0x16c0>
   1406c:	mov	r1, r5
   14070:	mov	r0, #-2147483648	; 0x80000000
   14074:	bl	189ec <argp_error@@Base+0x16f8>
   14078:	cmp	r6, r0
   1407c:	movle	r0, #0
   14080:	movgt	r0, #1
   14084:	b	13ee0 <argp_parse@@Base+0x1518>
   14088:	add	r0, r6, #-2147483648	; 0x80000000
   1408c:	cmp	r0, #0
   14090:	movle	r0, #0
   14094:	movgt	r0, #1
   14098:	b	13ee0 <argp_parse@@Base+0x1518>
   1409c:	bl	14178 <argp_parse@@Base+0x17b0>
   140a0:	push	{r4, lr}
   140a4:	bl	141a4 <argp_parse@@Base+0x17dc>
   140a8:	cmp	r0, #0
   140ac:	popne	{r4, pc}
   140b0:	bl	14178 <argp_parse@@Base+0x17b0>
   140b4:	push	{r4, lr}
   140b8:	mov	r1, #1
   140bc:	bl	140a0 <argp_parse@@Base+0x16d8>
   140c0:	pop	{r4, pc}
   140c4:	push	{r4, lr}
   140c8:	bl	141a4 <argp_parse@@Base+0x17dc>
   140cc:	cmp	r0, #0
   140d0:	popne	{r4, pc}
   140d4:	bl	14178 <argp_parse@@Base+0x17b0>
   140d8:	push	{r4, lr}
   140dc:	mov	r1, #1
   140e0:	bl	140c4 <argp_parse@@Base+0x16fc>
   140e4:	pop	{r4, pc}
   140e8:	push	{r4, r5, r6, lr}
   140ec:	mov	r5, r0
   140f0:	mov	r4, r1
   140f4:	mov	r0, r1
   140f8:	bl	13bd4 <argp_parse@@Base+0x120c>
   140fc:	mov	r2, r4
   14100:	mov	r1, r5
   14104:	bl	11308 <memcpy@plt>
   14108:	pop	{r4, r5, r6, pc}
   1410c:	push	{r4, r5, r6, lr}
   14110:	mov	r5, r0
   14114:	mov	r4, r1
   14118:	mov	r0, r1
   1411c:	bl	13be8 <argp_parse@@Base+0x1220>
   14120:	mov	r2, r4
   14124:	mov	r1, r5
   14128:	bl	11308 <memcpy@plt>
   1412c:	pop	{r4, r5, r6, pc}
   14130:	push	{r4, r5, r6, lr}
   14134:	mov	r5, r0
   14138:	mov	r4, r1
   1413c:	add	r0, r1, #1
   14140:	bl	13be8 <argp_parse@@Base+0x1220>
   14144:	mov	r2, #0
   14148:	strb	r2, [r0, r4]
   1414c:	mov	r2, r4
   14150:	mov	r1, r5
   14154:	bl	11308 <memcpy@plt>
   14158:	pop	{r4, r5, r6, pc}
   1415c:	push	{r4, lr}
   14160:	mov	r4, r0
   14164:	bl	11458 <strlen@plt>
   14168:	add	r1, r0, #1
   1416c:	mov	r0, r4
   14170:	bl	140e8 <argp_parse@@Base+0x1720>
   14174:	pop	{r4, pc}
   14178:	push	{r4, lr}
   1417c:	ldr	r3, [pc, #20]	; 14198 <argp_parse@@Base+0x17d0>
   14180:	ldr	r0, [r3]
   14184:	ldr	r3, [pc, #16]	; 1419c <argp_parse@@Base+0x17d4>
   14188:	ldr	r2, [pc, #16]	; 141a0 <argp_parse@@Base+0x17d8>
   1418c:	mov	r1, #0
   14190:	bl	113c8 <error@plt>
   14194:	bl	115e4 <abort@plt>
   14198:	andeq	sl, r2, r8, ror #9
   1419c:	muleq	r1, r4, r5
   141a0:	strdeq	r8, [r1], -r0
   141a4:	push	{r4, lr}
   141a8:	mov	r2, r0
   141ac:	mov	r3, r1
   141b0:	cmp	r1, #0
   141b4:	cmpne	r0, #0
   141b8:	moveq	r3, #1
   141bc:	moveq	r2, r3
   141c0:	umull	r0, r1, r2, r3
   141c4:	cmp	r0, #0
   141c8:	cmpge	r1, #0
   141cc:	bne	141e0 <argp_parse@@Base+0x1818>
   141d0:	mov	r1, r3
   141d4:	mov	r0, r2
   141d8:	bl	1126c <calloc@plt>
   141dc:	pop	{r4, pc}
   141e0:	bl	11494 <__errno_location@plt>
   141e4:	mov	r3, #12
   141e8:	str	r3, [r0]
   141ec:	mov	r0, #0
   141f0:	pop	{r4, pc}
   141f4:	push	{r4, lr}
   141f8:	cmp	r0, #0
   141fc:	moveq	r0, #1
   14200:	cmp	r0, #0
   14204:	blt	14210 <argp_parse@@Base+0x1848>
   14208:	bl	113ec <malloc@plt>
   1420c:	pop	{r4, pc}
   14210:	bl	11494 <__errno_location@plt>
   14214:	mov	r3, #12
   14218:	str	r3, [r0]
   1421c:	mov	r0, #0
   14220:	pop	{r4, pc}
   14224:	push	{r4, lr}
   14228:	cmp	r0, #0
   1422c:	beq	14248 <argp_parse@@Base+0x1880>
   14230:	cmp	r1, #0
   14234:	beq	14254 <argp_parse@@Base+0x188c>
   14238:	cmp	r1, #0
   1423c:	blt	14260 <argp_parse@@Base+0x1898>
   14240:	bl	11368 <realloc@plt>
   14244:	pop	{r4, pc}
   14248:	mov	r0, r1
   1424c:	bl	141f4 <argp_parse@@Base+0x182c>
   14250:	pop	{r4, pc}
   14254:	bl	135bc <argp_parse@@Base+0xbf4>
   14258:	mov	r0, #0
   1425c:	pop	{r4, pc}
   14260:	bl	11494 <__errno_location@plt>
   14264:	mov	r3, #12
   14268:	str	r3, [r0]
   1426c:	mov	r0, #0
   14270:	pop	{r4, pc}
   14274:	ldr	r3, [r0]
   14278:	ldr	r2, [r0, #4]
   1427c:	cmp	r2, #0
   14280:	beq	142bc <argp_parse@@Base+0x18f4>
   14284:	add	r3, r3, #24
   14288:	b	14298 <argp_parse@@Base+0x18d0>
   1428c:	add	r3, r3, #24
   14290:	subs	r2, r2, #1
   14294:	beq	142b4 <argp_parse@@Base+0x18ec>
   14298:	ldr	r0, [r3, #-24]	; 0xffffffe8
   1429c:	cmp	r0, #0
   142a0:	beq	1428c <argp_parse@@Base+0x18c4>
   142a4:	ldr	r1, [r3, #-12]
   142a8:	tst	r1, #2
   142ac:	bne	1428c <argp_parse@@Base+0x18c4>
   142b0:	bx	lr
   142b4:	mov	r0, #0
   142b8:	bx	lr
   142bc:	mov	r0, #0
   142c0:	bx	lr
   142c4:	ldr	r2, [r0, #8]
   142c8:	cmp	r2, #0
   142cc:	beq	142d8 <argp_parse@@Base+0x1910>
   142d0:	mov	r0, #0
   142d4:	bx	lr
   142d8:	ldr	r2, [r1, #8]
   142dc:	cmp	r2, #0
   142e0:	bne	142d0 <argp_parse@@Base+0x1908>
   142e4:	ldr	r2, [r0, #12]
   142e8:	ldr	r1, [r1, #12]
   142ec:	orr	r2, r2, r1
   142f0:	tst	r2, #16
   142f4:	ldreq	r2, [r3]
   142f8:	addeq	r1, r2, #1
   142fc:	streq	r1, [r3]
   14300:	ldreq	r3, [r0, #4]
   14304:	strbeq	r3, [r2]
   14308:	b	142d0 <argp_parse@@Base+0x1908>
   1430c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14310:	sub	sp, sp, #12
   14314:	ldr	r4, [r0]
   14318:	ldr	r9, [r0, #8]
   1431c:	ldr	r5, [r0, #4]
   14320:	cmp	r5, #0
   14324:	beq	14378 <argp_parse@@Base+0x19b0>
   14328:	str	r3, [sp, #4]
   1432c:	str	r2, [sp]
   14330:	mov	fp, r1
   14334:	mov	sl, r4
   14338:	mov	r8, #0
   1433c:	b	143b8 <argp_parse@@Base+0x19f0>
   14340:	and	r3, r6, #4
   14344:	cmp	r3, #0
   14348:	moveq	sl, r4
   1434c:	tst	r6, #2
   14350:	beq	1435c <argp_parse@@Base+0x1994>
   14354:	add	r9, r9, #1
   14358:	b	14394 <argp_parse@@Base+0x19cc>
   1435c:	ldr	r3, [sp, #4]
   14360:	ldr	r2, [sp]
   14364:	mov	r1, sl
   14368:	mov	r0, r4
   1436c:	blx	fp
   14370:	mov	r8, r0
   14374:	b	14354 <argp_parse@@Base+0x198c>
   14378:	mov	r8, #0
   1437c:	mov	r0, r8
   14380:	add	sp, sp, #12
   14384:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14388:	ldrb	r3, [r9]
   1438c:	cmp	r3, r7
   14390:	beq	14340 <argp_parse@@Base+0x1978>
   14394:	add	r4, r4, #24
   14398:	subs	r5, r5, #1
   1439c:	movne	r3, #1
   143a0:	moveq	r3, #0
   143a4:	cmp	r8, #0
   143a8:	movne	r3, #0
   143ac:	andeq	r3, r3, #1
   143b0:	cmp	r3, #0
   143b4:	beq	1437c <argp_parse@@Base+0x19b4>
   143b8:	ldr	r6, [r4, #12]
   143bc:	tst	r6, #8
   143c0:	bne	14394 <argp_parse@@Base+0x19cc>
   143c4:	ldr	r7, [r4, #4]
   143c8:	sub	r3, r7, #1
   143cc:	cmp	r3, #254	; 0xfe
   143d0:	bhi	14394 <argp_parse@@Base+0x19cc>
   143d4:	bl	11434 <__ctype_b_loc@plt>
   143d8:	ldr	r2, [r0]
   143dc:	lsl	r3, r7, #1
   143e0:	ldrh	r3, [r2, r3]
   143e4:	tst	r3, #16384	; 0x4000
   143e8:	bne	14388 <argp_parse@@Base+0x19c0>
   143ec:	b	14394 <argp_parse@@Base+0x19cc>
   143f0:	push	{r4, r5, r6, lr}
   143f4:	ldr	r4, [r0, #12]
   143f8:	ands	r4, r4, #8
   143fc:	movne	r4, #0
   14400:	bne	14430 <argp_parse@@Base+0x1a68>
   14404:	ldr	r5, [r0, #4]
   14408:	sub	r3, r5, #1
   1440c:	cmp	r3, #254	; 0xfe
   14410:	bhi	14430 <argp_parse@@Base+0x1a68>
   14414:	bl	11434 <__ctype_b_loc@plt>
   14418:	ldr	r2, [r0]
   1441c:	lsl	r3, r5, #1
   14420:	ldrh	r3, [r2, r3]
   14424:	and	r3, r3, #16384	; 0x4000
   14428:	cmp	r3, #0
   1442c:	movne	r4, r5
   14430:	mov	r0, r4
   14434:	pop	{r4, r5, r6, pc}
   14438:	push	{r4, lr}
   1443c:	mov	r4, r0
   14440:	bl	11434 <__ctype_b_loc@plt>
   14444:	b	14450 <argp_parse@@Base+0x1a88>
   14448:	add	r3, r3, #1
   1444c:	str	r3, [r4]
   14450:	ldr	r3, [r4]
   14454:	ldrb	r2, [r3]
   14458:	ldr	ip, [r0]
   1445c:	lsl	r1, r2, #1
   14460:	ldrh	r1, [ip, r1]
   14464:	tst	r1, #8192	; 0x2000
   14468:	bne	14448 <argp_parse@@Base+0x1a80>
   1446c:	subs	ip, r2, #45	; 0x2d
   14470:	movne	ip, #1
   14474:	cmp	r2, #0
   14478:	beq	144ac <argp_parse@@Base+0x1ae4>
   1447c:	tst	r1, #8
   14480:	bne	144ac <argp_parse@@Base+0x1ae4>
   14484:	add	r3, r3, #1
   14488:	str	r3, [r4]
   1448c:	ldrb	r2, [r3]
   14490:	cmp	r2, #0
   14494:	beq	144ac <argp_parse@@Base+0x1ae4>
   14498:	ldr	r1, [r0]
   1449c:	lsl	r2, r2, #1
   144a0:	ldrh	r2, [r1, r2]
   144a4:	tst	r2, #8
   144a8:	beq	14484 <argp_parse@@Base+0x1abc>
   144ac:	mov	r0, ip
   144b0:	pop	{r4, pc}
   144b4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   144b8:	add	fp, sp, #32
   144bc:	sub	sp, sp, #12
   144c0:	ldr	r5, [r0, #4]
   144c4:	cmp	r5, #0
   144c8:	bne	144d4 <argp_parse@@Base+0x1b0c>
   144cc:	sub	sp, fp, #32
   144d0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   144d4:	mov	r9, r1
   144d8:	mov	r6, r0
   144dc:	ldr	r0, [r0, #8]
   144e0:	bl	11458 <strlen@plt>
   144e4:	add	r3, r0, #15
   144e8:	bic	r3, r3, #7
   144ec:	sub	sp, sp, r3
   144f0:	mov	sl, sp
   144f4:	sub	r7, fp, #36	; 0x24
   144f8:	str	sp, [r7, #-4]!
   144fc:	ldr	r4, [r6]
   14500:	ldr	r8, [pc, #336]	; 14658 <argp_parse@@Base+0x1c90>
   14504:	ldr	r2, [r4, #20]
   14508:	mov	r3, r7
   1450c:	ldr	r2, [r2, #24]
   14510:	mov	r1, r8
   14514:	mov	r0, r4
   14518:	bl	1430c <argp_parse@@Base+0x1944>
   1451c:	add	r4, r4, #28
   14520:	subs	r5, r5, #1
   14524:	bne	14504 <argp_parse@@Base+0x1b3c>
   14528:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1452c:	cmp	sl, r3
   14530:	bcc	14588 <argp_parse@@Base+0x1bc0>
   14534:	ldr	r4, [r6]
   14538:	ldr	r5, [r6, #4]
   1453c:	cmp	r5, #0
   14540:	beq	144cc <argp_parse@@Base+0x1b04>
   14544:	ldr	r7, [pc, #272]	; 1465c <argp_parse@@Base+0x1c94>
   14548:	ldr	r2, [r4, #20]
   1454c:	mov	r3, r9
   14550:	ldr	r2, [r2, #24]
   14554:	mov	r1, r7
   14558:	mov	r0, r4
   1455c:	bl	1430c <argp_parse@@Base+0x1944>
   14560:	add	r4, r4, #28
   14564:	subs	r5, r5, #1
   14568:	bne	14548 <argp_parse@@Base+0x1b80>
   1456c:	ldr	r7, [r6]
   14570:	ldr	r8, [r6, #4]
   14574:	cmp	r8, #0
   14578:	beq	144cc <argp_parse@@Base+0x1b04>
   1457c:	add	r7, r7, #28
   14580:	ldr	sl, [pc, #216]	; 14660 <argp_parse@@Base+0x1c98>
   14584:	b	14640 <argp_parse@@Base+0x1c78>
   14588:	add	r2, r3, #1
   1458c:	str	r2, [fp, #-40]	; 0xffffffd8
   14590:	mov	r2, #0
   14594:	strb	r2, [r3]
   14598:	mov	r2, sl
   1459c:	ldr	r1, [pc, #192]	; 14664 <argp_parse@@Base+0x1c9c>
   145a0:	mov	r0, r9
   145a4:	bl	18760 <argp_error@@Base+0x146c>
   145a8:	b	14534 <argp_parse@@Base+0x1b6c>
   145ac:	tst	r1, #16
   145b0:	bne	145d4 <argp_parse@@Base+0x1c0c>
   145b4:	ldr	r3, [r6, #8]
   145b8:	cmp	r3, #0
   145bc:	beq	14624 <argp_parse@@Base+0x1c5c>
   145c0:	tst	r1, #1
   145c4:	ldrne	r1, [pc, #156]	; 14668 <argp_parse@@Base+0x1ca0>
   145c8:	moveq	r1, sl
   145cc:	mov	r0, r9
   145d0:	bl	18760 <argp_error@@Base+0x146c>
   145d4:	add	r4, r4, #24
   145d8:	subs	r5, r5, #1
   145dc:	beq	14634 <argp_parse@@Base+0x1c6c>
   145e0:	ldr	r2, [r4]
   145e4:	cmp	r2, #0
   145e8:	beq	145d4 <argp_parse@@Base+0x1c0c>
   145ec:	ldr	r1, [r4, #12]
   145f0:	and	r3, r1, #4
   145f4:	cmp	r3, #0
   145f8:	moveq	r6, r4
   145fc:	tst	r1, #2
   14600:	bne	145d4 <argp_parse@@Base+0x1c0c>
   14604:	ldr	r3, [r4, #8]
   14608:	ldr	r0, [r6, #12]
   1460c:	orr	r1, r1, r0
   14610:	cmp	r3, #0
   14614:	beq	145ac <argp_parse@@Base+0x1be4>
   14618:	tst	r1, #16
   1461c:	beq	145c0 <argp_parse@@Base+0x1bf8>
   14620:	b	145d4 <argp_parse@@Base+0x1c0c>
   14624:	ldr	r1, [pc, #64]	; 1466c <argp_parse@@Base+0x1ca4>
   14628:	mov	r0, r9
   1462c:	bl	18760 <argp_error@@Base+0x146c>
   14630:	b	145d4 <argp_parse@@Base+0x1c0c>
   14634:	add	r7, r7, #28
   14638:	subs	r8, r8, #1
   1463c:	beq	144cc <argp_parse@@Base+0x1b04>
   14640:	ldr	r4, [r7, #-28]	; 0xffffffe4
   14644:	ldr	r5, [r7, #-24]	; 0xffffffe8
   14648:	cmp	r5, #0
   1464c:	beq	14634 <argp_parse@@Base+0x1c6c>
   14650:	mov	r6, r4
   14654:	b	145e0 <argp_parse@@Base+0x1c18>
   14658:	andeq	r4, r1, r4, asr #5
   1465c:	andeq	r4, r1, r4, lsl #18
   14660:	andeq	r9, r1, r8, ror #12
   14664:	andeq	r9, r1, r0, asr r6
   14668:	andeq	r9, r1, r8, asr r6
   1466c:	andeq	r9, r1, r4, ror r6
   14670:	push	{r4, r5, r6, lr}
   14674:	mov	r5, r0
   14678:	ldr	r0, [r0, #12]
   1467c:	cmp	r0, #0
   14680:	beq	14698 <argp_parse@@Base+0x1cd0>
   14684:	ldr	r4, [r0, #24]
   14688:	bl	135bc <argp_parse@@Base+0xbf4>
   1468c:	mov	r0, r4
   14690:	cmp	r4, #0
   14694:	bne	14684 <argp_parse@@Base+0x1cbc>
   14698:	ldr	r3, [r5, #4]
   1469c:	cmp	r3, #0
   146a0:	bne	146b0 <argp_parse@@Base+0x1ce8>
   146a4:	mov	r0, r5
   146a8:	bl	135bc <argp_parse@@Base+0xbf4>
   146ac:	pop	{r4, r5, r6, pc}
   146b0:	ldr	r0, [r5]
   146b4:	bl	135bc <argp_parse@@Base+0xbf4>
   146b8:	ldr	r0, [r5, #8]
   146bc:	bl	135bc <argp_parse@@Base+0xbf4>
   146c0:	b	146a4 <argp_parse@@Base+0x1cdc>
   146c4:	push	{r4, r5, r6, r7, r8, lr}
   146c8:	mov	r6, r1
   146cc:	ldr	r7, [r0]
   146d0:	ldr	r3, [r0, #4]
   146d4:	sub	r8, r3, #1
   146d8:	cmp	r3, #0
   146dc:	bne	14738 <argp_parse@@Base+0x1d70>
   146e0:	mov	r7, #0
   146e4:	b	14720 <argp_parse@@Base+0x1d58>
   146e8:	sub	r5, r5, #1
   146ec:	add	r4, r4, #24
   146f0:	cmn	r5, #1
   146f4:	beq	14728 <argp_parse@@Base+0x1d60>
   146f8:	ldr	r0, [r4, #-24]	; 0xffffffe8
   146fc:	cmp	r0, #0
   14700:	beq	146e8 <argp_parse@@Base+0x1d20>
   14704:	ldr	r3, [r4, #-12]
   14708:	tst	r3, #2
   1470c:	bne	146e8 <argp_parse@@Base+0x1d20>
   14710:	mov	r1, r6
   14714:	bl	11290 <strcmp@plt>
   14718:	cmp	r0, #0
   1471c:	bne	146e8 <argp_parse@@Base+0x1d20>
   14720:	mov	r0, r7
   14724:	pop	{r4, r5, r6, r7, r8, pc}
   14728:	add	r7, r7, #28
   1472c:	sub	r8, r8, #1
   14730:	cmn	r8, #1
   14734:	beq	14754 <argp_parse@@Base+0x1d8c>
   14738:	ldr	r4, [r7]
   1473c:	ldr	r3, [r7, #4]
   14740:	sub	r5, r3, #1
   14744:	cmp	r3, #0
   14748:	beq	14728 <argp_parse@@Base+0x1d60>
   1474c:	add	r4, r4, #24
   14750:	b	146f8 <argp_parse@@Base+0x1d30>
   14754:	mov	r7, #0
   14758:	b	14720 <argp_parse@@Base+0x1d58>
   1475c:	push	{r4, r5, r6, lr}
   14760:	ldr	r4, [r0, #16]
   14764:	ldr	r0, [r0, #8]
   14768:	cmp	r0, #0
   1476c:	moveq	r5, #0
   14770:	beq	14784 <argp_parse@@Base+0x1dbc>
   14774:	mov	r1, #10
   14778:	bl	11464 <strchr@plt>
   1477c:	adds	r5, r0, #0
   14780:	movne	r5, #1
   14784:	cmp	r4, #0
   14788:	beq	147ac <argp_parse@@Base+0x1de4>
   1478c:	ldr	r0, [r4]
   14790:	cmp	r0, #0
   14794:	beq	147ac <argp_parse@@Base+0x1de4>
   14798:	bl	1475c <argp_parse@@Base+0x1d94>
   1479c:	add	r5, r5, r0
   147a0:	ldr	r0, [r4, #16]!
   147a4:	cmp	r0, #0
   147a8:	bne	14798 <argp_parse@@Base+0x1dd0>
   147ac:	mov	r0, r5
   147b0:	pop	{r4, r5, r6, pc}
   147b4:	push	{r4, r5, r6, r7, r8, lr}
   147b8:	mov	r4, r0
   147bc:	mov	r5, r1
   147c0:	ldr	r3, [r0, #28]
   147c4:	ldr	r2, [r0, #24]
   147c8:	sub	r3, r3, r2
   147cc:	ldr	r2, [r0, #16]
   147d0:	cmp	r3, r2
   147d4:	bhi	147f0 <argp_parse@@Base+0x1e28>
   147d8:	ldr	r3, [r4, #20]
   147dc:	cmp	r3, #0
   147e0:	subge	r5, r5, r3
   147e4:	mov	r6, #32
   147e8:	mov	r7, #1
   147ec:	b	1480c <argp_parse@@Base+0x1e44>
   147f0:	bl	180cc <argp_error@@Base+0xdd8>
   147f4:	b	147d8 <argp_parse@@Base+0x1e10>
   147f8:	ldr	r3, [r4, #28]
   147fc:	add	r2, r3, #1
   14800:	str	r2, [r4, #28]
   14804:	strb	r6, [r3]
   14808:	sub	r5, r5, #1
   1480c:	cmp	r5, #0
   14810:	ble	1483c <argp_parse@@Base+0x1e74>
   14814:	ldr	r2, [r4, #28]
   14818:	ldr	r3, [r4, #32]
   1481c:	cmp	r2, r3
   14820:	bcc	147f8 <argp_parse@@Base+0x1e30>
   14824:	mov	r1, r7
   14828:	mov	r0, r4
   1482c:	bl	18670 <argp_error@@Base+0x137c>
   14830:	cmp	r0, #0
   14834:	beq	14808 <argp_parse@@Base+0x1e40>
   14838:	b	147f8 <argp_parse@@Base+0x1e30>
   1483c:	pop	{r4, r5, r6, r7, r8, pc}
   14840:	push	{r4, r5, r6, lr}
   14844:	mov	r4, r0
   14848:	mov	r5, r1
   1484c:	ldr	r3, [r0, #28]
   14850:	ldr	r2, [r0, #24]
   14854:	sub	r3, r3, r2
   14858:	ldr	r2, [r0, #16]
   1485c:	cmp	r3, r2
   14860:	bhi	148a4 <argp_parse@@Base+0x1edc>
   14864:	ldr	r3, [r4, #20]
   14868:	cmp	r3, #0
   1486c:	addge	r5, r5, r3
   14870:	ldr	r3, [r4, #8]
   14874:	cmp	r5, r3
   14878:	bcc	148c4 <argp_parse@@Base+0x1efc>
   1487c:	ldr	r2, [r4, #28]
   14880:	ldr	r3, [r4, #32]
   14884:	cmp	r2, r3
   14888:	bcs	148ac <argp_parse@@Base+0x1ee4>
   1488c:	ldr	r3, [r4, #28]
   14890:	add	r2, r3, #1
   14894:	str	r2, [r4, #28]
   14898:	mov	r2, #10
   1489c:	strb	r2, [r3]
   148a0:	pop	{r4, r5, r6, pc}
   148a4:	bl	180cc <argp_error@@Base+0xdd8>
   148a8:	b	14864 <argp_parse@@Base+0x1e9c>
   148ac:	mov	r1, #1
   148b0:	mov	r0, r4
   148b4:	bl	18670 <argp_error@@Base+0x137c>
   148b8:	cmp	r0, #0
   148bc:	popeq	{r4, r5, r6, pc}
   148c0:	b	1488c <argp_parse@@Base+0x1ec4>
   148c4:	ldr	r2, [r4, #28]
   148c8:	ldr	r3, [r4, #32]
   148cc:	cmp	r2, r3
   148d0:	bcs	148ec <argp_parse@@Base+0x1f24>
   148d4:	ldr	r3, [r4, #28]
   148d8:	add	r2, r3, #1
   148dc:	str	r2, [r4, #28]
   148e0:	mov	r2, #32
   148e4:	strb	r2, [r3]
   148e8:	pop	{r4, r5, r6, pc}
   148ec:	mov	r1, #1
   148f0:	mov	r0, r4
   148f4:	bl	18670 <argp_error@@Base+0x137c>
   148f8:	cmp	r0, #0
   148fc:	bne	148d4 <argp_parse@@Base+0x1f0c>
   14900:	pop	{r4, r5, r6, pc}
   14904:	push	{r4, r5, r6, lr}
   14908:	ldr	r5, [r0, #8]
   1490c:	ldr	r2, [r0, #12]
   14910:	ldr	ip, [r1, #12]
   14914:	orr	r2, r2, ip
   14918:	cmp	r5, #0
   1491c:	beq	14968 <argp_parse@@Base+0x1fa0>
   14920:	tst	r2, #16
   14924:	bne	14960 <argp_parse@@Base+0x1f98>
   14928:	mov	r6, r3
   1492c:	mov	r4, r0
   14930:	tst	r2, #1
   14934:	bne	14978 <argp_parse@@Base+0x1fb0>
   14938:	mov	r0, r5
   1493c:	bl	11458 <strlen@plt>
   14940:	add	r1, r0, #6
   14944:	mov	r0, r6
   14948:	bl	14840 <argp_parse@@Base+0x1e78>
   1494c:	mov	r3, r5
   14950:	ldr	r2, [r4, #4]
   14954:	ldr	r1, [pc, #52]	; 14990 <argp_parse@@Base+0x1fc8>
   14958:	mov	r0, r6
   1495c:	bl	18760 <argp_error@@Base+0x146c>
   14960:	mov	r0, #0
   14964:	pop	{r4, r5, r6, pc}
   14968:	ldr	r5, [r1, #8]
   1496c:	cmp	r5, #0
   14970:	beq	14960 <argp_parse@@Base+0x1f98>
   14974:	b	14920 <argp_parse@@Base+0x1f58>
   14978:	mov	r3, r5
   1497c:	ldr	r2, [r0, #4]
   14980:	ldr	r1, [pc, #12]	; 14994 <argp_parse@@Base+0x1fcc>
   14984:	mov	r0, r6
   14988:	bl	18760 <argp_error@@Base+0x146c>
   1498c:	b	14960 <argp_parse@@Base+0x1f98>
   14990:	andeq	r9, r1, r8, lsl #13
   14994:	andeq	r9, r1, ip, ror r6
   14998:	push	{r4, r5, r6, lr}
   1499c:	subs	r5, r2, #0
   149a0:	popeq	{r4, r5, r6, pc}
   149a4:	ldr	ip, [r5, #20]
   149a8:	cmp	ip, #0
   149ac:	popeq	{r4, r5, r6, pc}
   149b0:	mov	r6, r1
   149b4:	mov	r4, r0
   149b8:	mov	r1, r3
   149bc:	mov	r0, r5
   149c0:	bl	1343c <argp_parse@@Base+0xa74>
   149c4:	ldr	r3, [r5, #20]
   149c8:	mov	r2, r0
   149cc:	mov	r1, r4
   149d0:	mov	r0, r6
   149d4:	blx	r3
   149d8:	pop	{r4, r5, r6, pc}
   149dc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   149e0:	sub	sp, sp, #28
   149e4:	str	r1, [sp, #16]
   149e8:	mov	r8, r2
   149ec:	mov	r4, r3
   149f0:	ldr	r5, [sp, #64]	; 0x40
   149f4:	ldr	r3, [r2]
   149f8:	mov	r6, r3
   149fc:	str	r3, [sp, #20]
   14a00:	ldr	sl, [r0, #16]
   14a04:	ldr	r2, [r0, #8]
   14a08:	mov	ip, r2
   14a0c:	str	r2, [sp, #12]
   14a10:	mov	r3, r1
   14a14:	mov	r2, r0
   14a18:	ldr	r1, [pc, #424]	; 14bc8 <argp_parse@@Base+0x2200>
   14a1c:	mov	r0, ip
   14a20:	bl	14998 <argp_parse@@Base+0x1fd0>
   14a24:	subs	r3, r0, #0
   14a28:	str	r3, [sp, #8]
   14a2c:	beq	14bb4 <argp_parse@@Base+0x21ec>
   14a30:	mov	r1, #10
   14a34:	mov	r0, r3
   14a38:	bl	112e4 <strchrnul@plt>
   14a3c:	mov	r7, r0
   14a40:	ldrb	r3, [r0]
   14a44:	cmp	r3, #0
   14a48:	beq	14b84 <argp_parse@@Base+0x21bc>
   14a4c:	ldrb	fp, [r6]
   14a50:	cmp	fp, #0
   14a54:	ble	14b7c <argp_parse@@Base+0x21b4>
   14a58:	mov	r6, #0
   14a5c:	add	r9, r0, #1
   14a60:	mov	r1, #10
   14a64:	mov	r0, r9
   14a68:	bl	112e4 <strchrnul@plt>
   14a6c:	add	r6, r6, #1
   14a70:	cmp	r6, fp
   14a74:	bne	14a5c <argp_parse@@Base+0x2094>
   14a78:	mov	r7, r0
   14a7c:	ldr	r3, [r8]
   14a80:	add	r3, r3, #1
   14a84:	str	r3, [r8]
   14a88:	mov	fp, #1
   14a8c:	add	r1, r7, #1
   14a90:	sub	r1, r1, r9
   14a94:	mov	r0, r5
   14a98:	bl	14840 <argp_parse@@Base+0x1e78>
   14a9c:	sub	r6, r7, r9
   14aa0:	ldr	r3, [r5, #28]
   14aa4:	add	r3, r3, r6
   14aa8:	ldr	r2, [r5, #32]
   14aac:	cmp	r2, r3
   14ab0:	bcs	14ac8 <argp_parse@@Base+0x2100>
   14ab4:	mov	r1, r6
   14ab8:	mov	r0, r5
   14abc:	bl	18670 <argp_error@@Base+0x137c>
   14ac0:	cmp	r0, #0
   14ac4:	beq	14ae4 <argp_parse@@Base+0x211c>
   14ac8:	mov	r2, r6
   14acc:	mov	r1, r9
   14ad0:	ldr	r0, [r5, #28]
   14ad4:	bl	11308 <memcpy@plt>
   14ad8:	ldr	r3, [r5, #28]
   14adc:	add	r6, r3, r6
   14ae0:	str	r6, [r5, #28]
   14ae4:	ldr	r3, [sp, #12]
   14ae8:	ldr	r2, [sp, #8]
   14aec:	cmp	r3, r2
   14af0:	bne	14b90 <argp_parse@@Base+0x21c8>
   14af4:	cmp	sl, #0
   14af8:	beq	14b38 <argp_parse@@Base+0x2170>
   14afc:	ldr	r0, [sl]
   14b00:	cmp	r0, #0
   14b04:	beq	14b38 <argp_parse@@Base+0x2170>
   14b08:	mov	r3, r4
   14b0c:	ldr	r4, [sp, #16]
   14b10:	str	r5, [sp]
   14b14:	mov	r2, r8
   14b18:	mov	r1, r4
   14b1c:	bl	149dc <argp_parse@@Base+0x2014>
   14b20:	clz	r3, r0
   14b24:	lsr	r3, r3, #5
   14b28:	ldr	r0, [sl, #16]!
   14b2c:	cmp	r0, #0
   14b30:	bne	14b10 <argp_parse@@Base+0x2148>
   14b34:	mov	r4, r3
   14b38:	cmp	r4, #0
   14b3c:	moveq	fp, #0
   14b40:	andne	fp, fp, #1
   14b44:	cmp	fp, #0
   14b48:	beq	14b6c <argp_parse@@Base+0x21a4>
   14b4c:	ldrb	r3, [r7]
   14b50:	cmp	r3, #0
   14b54:	bne	14b9c <argp_parse@@Base+0x21d4>
   14b58:	ldr	r2, [sp, #20]
   14b5c:	ldrb	r3, [r2]
   14b60:	cmp	r3, #0
   14b64:	movne	r3, #0
   14b68:	strbne	r3, [r2]
   14b6c:	clz	r0, r4
   14b70:	lsr	r0, r0, #5
   14b74:	add	sp, sp, #28
   14b78:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14b7c:	ldr	r9, [sp, #8]
   14b80:	b	14a7c <argp_parse@@Base+0x20b4>
   14b84:	ldr	r9, [sp, #8]
   14b88:	mov	fp, #0
   14b8c:	b	14a8c <argp_parse@@Base+0x20c4>
   14b90:	mov	r0, r2
   14b94:	bl	135bc <argp_parse@@Base+0xbf4>
   14b98:	b	14af4 <argp_parse@@Base+0x212c>
   14b9c:	ldr	r2, [sp, #20]
   14ba0:	ldrb	r3, [r2]
   14ba4:	add	r3, r3, #1
   14ba8:	strb	r3, [r2]
   14bac:	mov	r4, #0
   14bb0:	b	14b6c <argp_parse@@Base+0x21a4>
   14bb4:	cmp	sl, #0
   14bb8:	beq	14b6c <argp_parse@@Base+0x21a4>
   14bbc:	ldr	r7, [sp, #8]
   14bc0:	mov	fp, #0
   14bc4:	b	14afc <argp_parse@@Base+0x2134>
   14bc8:	andeq	r0, r0, #6
   14bcc:	push	{r4, r5, r6, r7, r8, lr}
   14bd0:	mov	r7, r0
   14bd4:	mov	r4, r2
   14bd8:	ldr	r3, [r2, #16]
   14bdc:	mov	r2, r1
   14be0:	ldr	r1, [pc, #448]	; 14da8 <argp_parse@@Base+0x23e0>
   14be4:	bl	14998 <argp_parse@@Base+0x1fd0>
   14be8:	subs	r5, r0, #0
   14bec:	beq	14d40 <argp_parse@@Base+0x2378>
   14bf0:	ldrb	r3, [r5]
   14bf4:	cmp	r3, #0
   14bf8:	beq	14d34 <argp_parse@@Base+0x236c>
   14bfc:	ldr	r3, [r4, #8]
   14c00:	ldr	r3, [r3]
   14c04:	cmp	r3, #0
   14c08:	beq	14c34 <argp_parse@@Base+0x226c>
   14c0c:	ldr	r6, [r4, #4]
   14c10:	ldr	r2, [r6, #28]
   14c14:	ldr	r3, [r6, #32]
   14c18:	cmp	r2, r3
   14c1c:	bcs	14d54 <argp_parse@@Base+0x238c>
   14c20:	ldr	r3, [r6, #28]
   14c24:	add	r2, r3, #1
   14c28:	str	r2, [r6, #28]
   14c2c:	mov	r2, #10
   14c30:	strb	r2, [r3]
   14c34:	ldr	r8, [pc, #368]	; 14dac <argp_parse@@Base+0x23e4>
   14c38:	ldr	r1, [r8, #24]
   14c3c:	ldr	r0, [r4, #4]
   14c40:	bl	147b4 <argp_parse@@Base+0x1dec>
   14c44:	ldr	r6, [r4, #4]
   14c48:	ldr	r8, [r8, #24]
   14c4c:	ldr	r3, [r6, #28]
   14c50:	ldr	r2, [r6, #24]
   14c54:	sub	r3, r3, r2
   14c58:	ldr	r2, [r6, #16]
   14c5c:	cmp	r3, r2
   14c60:	bhi	14d6c <argp_parse@@Base+0x23a4>
   14c64:	str	r8, [r6, #4]
   14c68:	ldr	r6, [r4, #4]
   14c6c:	ldr	r3, [pc, #312]	; 14dac <argp_parse@@Base+0x23e4>
   14c70:	ldr	r8, [r3, #24]
   14c74:	ldr	r3, [r6, #28]
   14c78:	ldr	r2, [r6, #24]
   14c7c:	sub	r3, r3, r2
   14c80:	ldr	r2, [r6, #16]
   14c84:	cmp	r3, r2
   14c88:	bhi	14d78 <argp_parse@@Base+0x23b0>
   14c8c:	str	r8, [r6, #12]
   14c90:	mov	r0, r5
   14c94:	bl	11458 <strlen@plt>
   14c98:	subs	r8, r0, #0
   14c9c:	beq	14ce8 <argp_parse@@Base+0x2320>
   14ca0:	ldr	r6, [r4, #4]
   14ca4:	ldr	r3, [r6, #28]
   14ca8:	add	r3, r3, r8
   14cac:	ldr	r2, [r6, #32]
   14cb0:	cmp	r2, r3
   14cb4:	bcs	14ccc <argp_parse@@Base+0x2304>
   14cb8:	mov	r1, r8
   14cbc:	mov	r0, r6
   14cc0:	bl	18670 <argp_error@@Base+0x137c>
   14cc4:	cmp	r0, #0
   14cc8:	beq	14ce8 <argp_parse@@Base+0x2320>
   14ccc:	mov	r2, r8
   14cd0:	mov	r1, r5
   14cd4:	ldr	r0, [r6, #28]
   14cd8:	bl	11308 <memcpy@plt>
   14cdc:	ldr	r3, [r6, #28]
   14ce0:	add	r8, r3, r8
   14ce4:	str	r8, [r6, #28]
   14ce8:	ldr	r6, [r4, #4]
   14cec:	ldr	r3, [r6, #28]
   14cf0:	ldr	r2, [r6, #24]
   14cf4:	sub	r3, r3, r2
   14cf8:	ldr	r2, [r6, #16]
   14cfc:	cmp	r3, r2
   14d00:	bhi	14d84 <argp_parse@@Base+0x23bc>
   14d04:	mov	r3, #0
   14d08:	str	r3, [r6, #4]
   14d0c:	ldr	r6, [r4, #4]
   14d10:	ldr	r2, [r6, #28]
   14d14:	ldr	r3, [r6, #32]
   14d18:	cmp	r2, r3
   14d1c:	bcs	14d90 <argp_parse@@Base+0x23c8>
   14d20:	ldr	r3, [r6, #28]
   14d24:	add	r2, r3, #1
   14d28:	str	r2, [r6, #28]
   14d2c:	mov	r2, #10
   14d30:	strb	r2, [r3]
   14d34:	ldr	r3, [r4, #8]
   14d38:	mov	r2, #1
   14d3c:	str	r2, [r3, #4]
   14d40:	cmp	r7, r5
   14d44:	popeq	{r4, r5, r6, r7, r8, pc}
   14d48:	mov	r0, r5
   14d4c:	bl	135bc <argp_parse@@Base+0xbf4>
   14d50:	pop	{r4, r5, r6, r7, r8, pc}
   14d54:	mov	r1, #1
   14d58:	mov	r0, r6
   14d5c:	bl	18670 <argp_error@@Base+0x137c>
   14d60:	cmp	r0, #0
   14d64:	beq	14c34 <argp_parse@@Base+0x226c>
   14d68:	b	14c20 <argp_parse@@Base+0x2258>
   14d6c:	mov	r0, r6
   14d70:	bl	180cc <argp_error@@Base+0xdd8>
   14d74:	b	14c64 <argp_parse@@Base+0x229c>
   14d78:	mov	r0, r6
   14d7c:	bl	180cc <argp_error@@Base+0xdd8>
   14d80:	b	14c8c <argp_parse@@Base+0x22c4>
   14d84:	mov	r0, r6
   14d88:	bl	180cc <argp_error@@Base+0xdd8>
   14d8c:	b	14d04 <argp_parse@@Base+0x233c>
   14d90:	mov	r1, #1
   14d94:	mov	r0, r6
   14d98:	bl	18670 <argp_error@@Base+0x137c>
   14d9c:	cmp	r0, #0
   14da0:	beq	14d34 <argp_parse@@Base+0x236c>
   14da4:	b	14d20 <argp_parse@@Base+0x2358>
   14da8:	andeq	r0, r0, #3
   14dac:	andeq	sl, r2, r0, asr #9
   14db0:	push	{r4, r5, r6, r7, r8, lr}
   14db4:	mov	r6, r0
   14db8:	mov	r4, r1
   14dbc:	ldr	r3, [r1, #12]
   14dc0:	cmp	r3, #0
   14dc4:	beq	14ee4 <argp_parse@@Base+0x251c>
   14dc8:	ldr	r3, [r1, #8]
   14dcc:	ldr	r7, [r3]
   14dd0:	ldr	r2, [r1]
   14dd4:	ldr	r5, [r2, #16]
   14dd8:	ldr	r3, [r3, #4]
   14ddc:	cmp	r3, #0
   14de0:	cmpne	r7, #0
   14de4:	beq	14e20 <argp_parse@@Base+0x2458>
   14de8:	ldr	r2, [r2, #12]
   14dec:	ldr	r3, [r7, #12]
   14df0:	cmp	r2, r3
   14df4:	beq	14e20 <argp_parse@@Base+0x2458>
   14df8:	ldr	r8, [r1, #4]
   14dfc:	ldr	r2, [r8, #28]
   14e00:	ldr	r3, [r8, #32]
   14e04:	cmp	r2, r3
   14e08:	bcs	14ec0 <argp_parse@@Base+0x24f8>
   14e0c:	ldr	r3, [r8, #28]
   14e10:	add	r2, r3, #1
   14e14:	str	r2, [r8, #28]
   14e18:	mov	r2, #10
   14e1c:	strb	r2, [r3]
   14e20:	cmp	r5, #0
   14e24:	beq	14ea8 <argp_parse@@Base+0x24e0>
   14e28:	ldr	r0, [r5]
   14e2c:	cmp	r0, #0
   14e30:	beq	14ea8 <argp_parse@@Base+0x24e0>
   14e34:	ldrb	r3, [r0]
   14e38:	cmp	r3, #0
   14e3c:	beq	14ea8 <argp_parse@@Base+0x24e0>
   14e40:	cmp	r7, #0
   14e44:	beq	14e74 <argp_parse@@Base+0x24ac>
   14e48:	ldr	r3, [r7, #16]
   14e4c:	cmp	r5, r3
   14e50:	beq	14ea8 <argp_parse@@Base+0x24e0>
   14e54:	cmp	r3, #0
   14e58:	beq	14e74 <argp_parse@@Base+0x24ac>
   14e5c:	ldr	r3, [r3, #12]
   14e60:	cmp	r3, #0
   14e64:	cmpne	r5, r3
   14e68:	bne	14e5c <argp_parse@@Base+0x2494>
   14e6c:	cmp	r5, r3
   14e70:	beq	14ea8 <argp_parse@@Base+0x24e0>
   14e74:	ldr	r3, [r4, #4]
   14e78:	ldr	r7, [r3, #12]
   14e7c:	mov	r2, r4
   14e80:	ldr	r1, [r5, #16]
   14e84:	bl	14bcc <argp_parse@@Base+0x2204>
   14e88:	ldr	r5, [r4, #4]
   14e8c:	ldr	r3, [r5, #28]
   14e90:	ldr	r2, [r5, #24]
   14e94:	sub	r3, r3, r2
   14e98:	ldr	r2, [r5, #16]
   14e9c:	cmp	r3, r2
   14ea0:	bhi	14ed8 <argp_parse@@Base+0x2510>
   14ea4:	str	r7, [r5, #12]
   14ea8:	mov	r3, #0
   14eac:	str	r3, [r4, #12]
   14eb0:	mov	r1, r6
   14eb4:	ldr	r0, [r4, #4]
   14eb8:	bl	147b4 <argp_parse@@Base+0x1dec>
   14ebc:	pop	{r4, r5, r6, r7, r8, pc}
   14ec0:	mov	r1, #1
   14ec4:	mov	r0, r8
   14ec8:	bl	18670 <argp_error@@Base+0x137c>
   14ecc:	cmp	r0, #0
   14ed0:	beq	14e20 <argp_parse@@Base+0x2458>
   14ed4:	b	14e0c <argp_parse@@Base+0x2444>
   14ed8:	mov	r0, r5
   14edc:	bl	180cc <argp_error@@Base+0xdd8>
   14ee0:	b	14ea4 <argp_parse@@Base+0x24dc>
   14ee4:	ldr	r5, [r1, #4]
   14ee8:	ldr	r3, [r5, #28]
   14eec:	add	r3, r3, #2
   14ef0:	ldr	r2, [r5, #32]
   14ef4:	cmp	r2, r3
   14ef8:	bcs	14f10 <argp_parse@@Base+0x2548>
   14efc:	mov	r1, #2
   14f00:	mov	r0, r5
   14f04:	bl	18670 <argp_error@@Base+0x137c>
   14f08:	cmp	r0, #0
   14f0c:	beq	14eb0 <argp_parse@@Base+0x24e8>
   14f10:	ldr	r3, [r5, #28]
   14f14:	ldr	r2, [pc, #20]	; 14f30 <argp_parse@@Base+0x2568>
   14f18:	ldrh	r2, [r2]
   14f1c:	strh	r2, [r3]
   14f20:	ldr	r3, [r5, #28]
   14f24:	add	r3, r3, #2
   14f28:	str	r3, [r5, #28]
   14f2c:	b	14eb0 <argp_parse@@Base+0x24e8>
   14f30:	muleq	r1, r4, r6
   14f34:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14f38:	sub	sp, sp, #28
   14f3c:	mov	fp, r0
   14f40:	str	r1, [sp, #8]
   14f44:	mov	r6, r2
   14f48:	mov	r8, r3
   14f4c:	ldr	r7, [sp, #64]	; 0x40
   14f50:	ldr	r5, [sp, #68]	; 0x44
   14f54:	ldr	r9, [r0, #12]
   14f58:	ldr	r3, [r0, #16]
   14f5c:	str	r3, [sp, #16]
   14f60:	cmp	r9, #0
   14f64:	beq	153c0 <argp_parse@@Base+0x29f8>
   14f68:	mov	r1, #11
   14f6c:	mov	r0, r9
   14f70:	bl	11464 <strchr@plt>
   14f74:	cmp	r6, #0
   14f78:	beq	15270 <argp_parse@@Base+0x28a8>
   14f7c:	cmp	r0, #0
   14f80:	addne	r9, r0, #1
   14f84:	beq	153a8 <argp_parse@@Base+0x29e0>
   14f88:	ldr	r3, [fp, #20]
   14f8c:	cmp	r3, #0
   14f90:	movne	sl, #0
   14f94:	beq	153b0 <argp_parse@@Base+0x29e8>
   14f98:	ldr	r1, [sp, #8]
   14f9c:	mov	r0, fp
   14fa0:	bl	1343c <argp_parse@@Base+0xa74>
   14fa4:	str	r0, [sp, #12]
   14fa8:	ldr	r3, [fp, #20]
   14fac:	ldr	r2, [pc, #1140]	; 15428 <argp_parse@@Base+0x2a60>
   14fb0:	ldr	r0, [pc, #1140]	; 1542c <argp_parse@@Base+0x2a64>
   14fb4:	cmp	r6, #0
   14fb8:	moveq	r0, r2
   14fbc:	ldr	r2, [sp, #12]
   14fc0:	mov	r1, r9
   14fc4:	blx	r3
   14fc8:	mov	r4, r0
   14fcc:	cmp	r4, #0
   14fd0:	beq	15360 <argp_parse@@Base+0x2998>
   14fd4:	cmp	r8, #0
   14fd8:	beq	15000 <argp_parse@@Base+0x2638>
   14fdc:	ldr	r2, [r5, #28]
   14fe0:	ldr	r3, [r5, #32]
   14fe4:	cmp	r2, r3
   14fe8:	bcs	152b4 <argp_parse@@Base+0x28ec>
   14fec:	ldr	r3, [r5, #28]
   14ff0:	add	r2, r3, #1
   14ff4:	str	r2, [r5, #28]
   14ff8:	mov	r2, #10
   14ffc:	strb	r2, [r3]
   15000:	cmp	r4, r9
   15004:	movne	r3, #0
   15008:	moveq	r3, #1
   1500c:	cmp	sl, #0
   15010:	moveq	r3, #0
   15014:	cmp	r3, #0
   15018:	beq	152cc <argp_parse@@Base+0x2904>
   1501c:	ldr	r3, [r5, #28]
   15020:	add	r3, r3, sl
   15024:	ldr	r2, [r5, #32]
   15028:	cmp	r2, r3
   1502c:	bcs	15044 <argp_parse@@Base+0x267c>
   15030:	mov	r1, sl
   15034:	mov	r0, r5
   15038:	bl	18670 <argp_error@@Base+0x137c>
   1503c:	cmp	r0, #0
   15040:	beq	15060 <argp_parse@@Base+0x2698>
   15044:	mov	r2, sl
   15048:	mov	r1, r9
   1504c:	ldr	r0, [r5, #28]
   15050:	bl	11308 <memcpy@plt>
   15054:	ldr	r3, [r5, #28]
   15058:	add	r3, r3, sl
   1505c:	str	r3, [r5, #28]
   15060:	ldr	r3, [r5, #28]
   15064:	ldr	r2, [r5, #24]
   15068:	sub	r3, r3, r2
   1506c:	ldr	r2, [r5, #16]
   15070:	cmp	r3, r2
   15074:	bhi	1532c <argp_parse@@Base+0x2964>
   15078:	ldr	r3, [r5, #20]
   1507c:	bic	r3, r3, r3, asr #31
   15080:	ldr	r2, [r5, #4]
   15084:	cmp	r2, r3
   15088:	bcs	150b0 <argp_parse@@Base+0x26e8>
   1508c:	ldr	r2, [r5, #28]
   15090:	ldr	r3, [r5, #32]
   15094:	cmp	r2, r3
   15098:	bcs	15338 <argp_parse@@Base+0x2970>
   1509c:	ldr	r3, [r5, #28]
   150a0:	add	r2, r3, #1
   150a4:	str	r2, [r5, #28]
   150a8:	mov	r2, #10
   150ac:	strb	r2, [r3]
   150b0:	cmp	r4, r9
   150b4:	moveq	r4, #1
   150b8:	bne	15350 <argp_parse@@Base+0x2988>
   150bc:	cmp	r9, #0
   150c0:	cmpne	sl, #0
   150c4:	beq	150dc <argp_parse@@Base+0x2714>
   150c8:	ldr	r3, [fp, #20]
   150cc:	cmp	r3, #0
   150d0:	beq	151e8 <argp_parse@@Base+0x2820>
   150d4:	mov	r0, r9
   150d8:	bl	135bc <argp_parse@@Base+0xbf4>
   150dc:	cmp	r6, #0
   150e0:	beq	151e8 <argp_parse@@Base+0x2820>
   150e4:	ldr	r3, [fp, #20]
   150e8:	cmp	r3, #0
   150ec:	beq	151e8 <argp_parse@@Base+0x2820>
   150f0:	ldr	r2, [sp, #12]
   150f4:	mov	r1, #0
   150f8:	ldr	r0, [pc, #816]	; 15430 <argp_parse@@Base+0x2a68>
   150fc:	blx	r3
   15100:	subs	r9, r0, #0
   15104:	beq	151e8 <argp_parse@@Base+0x2820>
   15108:	orrs	r3, r8, r4
   1510c:	beq	15134 <argp_parse@@Base+0x276c>
   15110:	ldr	r2, [r5, #28]
   15114:	ldr	r3, [r5, #32]
   15118:	cmp	r2, r3
   1511c:	bcs	15368 <argp_parse@@Base+0x29a0>
   15120:	ldr	r3, [r5, #28]
   15124:	add	r2, r3, #1
   15128:	str	r2, [r5, #28]
   1512c:	mov	r2, #10
   15130:	strb	r2, [r3]
   15134:	mov	r0, r9
   15138:	bl	11458 <strlen@plt>
   1513c:	subs	r4, r0, #0
   15140:	beq	15188 <argp_parse@@Base+0x27c0>
   15144:	ldr	r3, [r5, #28]
   15148:	add	r3, r3, r4
   1514c:	ldr	r2, [r5, #32]
   15150:	cmp	r2, r3
   15154:	bcs	1516c <argp_parse@@Base+0x27a4>
   15158:	mov	r1, r4
   1515c:	mov	r0, r5
   15160:	bl	18670 <argp_error@@Base+0x137c>
   15164:	cmp	r0, #0
   15168:	beq	15188 <argp_parse@@Base+0x27c0>
   1516c:	mov	r2, r4
   15170:	mov	r1, r9
   15174:	ldr	r0, [r5, #28]
   15178:	bl	11308 <memcpy@plt>
   1517c:	ldr	r3, [r5, #28]
   15180:	add	r4, r3, r4
   15184:	str	r4, [r5, #28]
   15188:	mov	r0, r9
   1518c:	bl	135bc <argp_parse@@Base+0xbf4>
   15190:	ldr	r3, [r5, #28]
   15194:	ldr	r2, [r5, #24]
   15198:	sub	r3, r3, r2
   1519c:	ldr	r2, [r5, #16]
   151a0:	cmp	r3, r2
   151a4:	bhi	15380 <argp_parse@@Base+0x29b8>
   151a8:	ldr	r3, [r5, #20]
   151ac:	bic	r3, r3, r3, asr #31
   151b0:	ldr	r2, [r5, #4]
   151b4:	cmp	r2, r3
   151b8:	movcs	r4, #1
   151bc:	bcs	151e8 <argp_parse@@Base+0x2820>
   151c0:	ldr	r2, [r5, #28]
   151c4:	ldr	r3, [r5, #32]
   151c8:	cmp	r2, r3
   151cc:	bcs	1538c <argp_parse@@Base+0x29c4>
   151d0:	ldr	r3, [r5, #28]
   151d4:	add	r2, r3, #1
   151d8:	str	r2, [r5, #28]
   151dc:	mov	r2, #10
   151e0:	strb	r2, [r3]
   151e4:	mov	r4, #1
   151e8:	ldr	r3, [sp, #16]
   151ec:	cmp	r3, #0
   151f0:	beq	15264 <argp_parse@@Base+0x289c>
   151f4:	ldr	r0, [r3]
   151f8:	cmp	r0, #0
   151fc:	beq	15264 <argp_parse@@Base+0x289c>
   15200:	clz	r9, r7
   15204:	lsr	r9, r9, #5
   15208:	cmp	r7, #0
   1520c:	cmpne	r4, #0
   15210:	bne	15264 <argp_parse@@Base+0x289c>
   15214:	mov	sl, r3
   15218:	ldr	fp, [sp, #8]
   1521c:	orrs	r3, r8, r4
   15220:	str	r5, [sp, #4]
   15224:	str	r7, [sp]
   15228:	movne	r3, #1
   1522c:	moveq	r3, #0
   15230:	mov	r2, r6
   15234:	mov	r1, fp
   15238:	bl	14f34 <argp_parse@@Base+0x256c>
   1523c:	orr	r4, r4, r0
   15240:	ldr	r0, [sl, #16]
   15244:	cmp	r0, #0
   15248:	beq	15264 <argp_parse@@Base+0x289c>
   1524c:	add	sl, sl, #16
   15250:	cmp	r4, #0
   15254:	movne	r3, r9
   15258:	orreq	r3, r9, #1
   1525c:	cmp	r3, #0
   15260:	bne	1521c <argp_parse@@Base+0x2854>
   15264:	mov	r0, r4
   15268:	add	sp, sp, #28
   1526c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15270:	cmp	r0, #0
   15274:	beq	153f8 <argp_parse@@Base+0x2a30>
   15278:	sub	sl, r0, r9
   1527c:	ldr	r3, [fp, #20]
   15280:	cmp	r3, #0
   15284:	beq	152a4 <argp_parse@@Base+0x28dc>
   15288:	cmp	sl, #0
   1528c:	beq	14f98 <argp_parse@@Base+0x25d0>
   15290:	mov	r1, sl
   15294:	mov	r0, r9
   15298:	bl	112fc <strndup@plt>
   1529c:	mov	r9, r0
   152a0:	b	14f98 <argp_parse@@Base+0x25d0>
   152a4:	mov	r4, r9
   152a8:	mov	r3, #0
   152ac:	str	r3, [sp, #12]
   152b0:	b	14fd4 <argp_parse@@Base+0x260c>
   152b4:	mov	r1, #1
   152b8:	mov	r0, r5
   152bc:	bl	18670 <argp_error@@Base+0x137c>
   152c0:	cmp	r0, #0
   152c4:	beq	15000 <argp_parse@@Base+0x2638>
   152c8:	b	14fec <argp_parse@@Base+0x2624>
   152cc:	mov	r0, r4
   152d0:	bl	11458 <strlen@plt>
   152d4:	subs	r3, r0, #0
   152d8:	mov	r1, r3
   152dc:	str	r3, [sp, #20]
   152e0:	beq	15060 <argp_parse@@Base+0x2698>
   152e4:	ldr	r3, [r5, #28]
   152e8:	add	r3, r3, r1
   152ec:	ldr	r2, [r5, #32]
   152f0:	cmp	r2, r3
   152f4:	bcs	15308 <argp_parse@@Base+0x2940>
   152f8:	mov	r0, r5
   152fc:	bl	18670 <argp_error@@Base+0x137c>
   15300:	cmp	r0, #0
   15304:	beq	15060 <argp_parse@@Base+0x2698>
   15308:	ldr	r2, [sp, #20]
   1530c:	mov	r1, r4
   15310:	ldr	r0, [r5, #28]
   15314:	bl	11308 <memcpy@plt>
   15318:	ldr	r3, [r5, #28]
   1531c:	ldr	r2, [sp, #20]
   15320:	add	r3, r3, r2
   15324:	str	r3, [r5, #28]
   15328:	b	15060 <argp_parse@@Base+0x2698>
   1532c:	mov	r0, r5
   15330:	bl	180cc <argp_error@@Base+0xdd8>
   15334:	b	15078 <argp_parse@@Base+0x26b0>
   15338:	mov	r1, #1
   1533c:	mov	r0, r5
   15340:	bl	18670 <argp_error@@Base+0x137c>
   15344:	cmp	r0, #0
   15348:	beq	150b0 <argp_parse@@Base+0x26e8>
   1534c:	b	1509c <argp_parse@@Base+0x26d4>
   15350:	mov	r0, r4
   15354:	bl	135bc <argp_parse@@Base+0xbf4>
   15358:	mov	r4, #1
   1535c:	b	150bc <argp_parse@@Base+0x26f4>
   15360:	mov	r4, #0
   15364:	b	150bc <argp_parse@@Base+0x26f4>
   15368:	mov	r1, #1
   1536c:	mov	r0, r5
   15370:	bl	18670 <argp_error@@Base+0x137c>
   15374:	cmp	r0, #0
   15378:	beq	15134 <argp_parse@@Base+0x276c>
   1537c:	b	15120 <argp_parse@@Base+0x2758>
   15380:	mov	r0, r5
   15384:	bl	180cc <argp_error@@Base+0xdd8>
   15388:	b	151a8 <argp_parse@@Base+0x27e0>
   1538c:	mov	r1, #1
   15390:	mov	r0, r5
   15394:	bl	18670 <argp_error@@Base+0x137c>
   15398:	cmp	r0, #0
   1539c:	moveq	r4, #1
   153a0:	beq	151e8 <argp_parse@@Base+0x2820>
   153a4:	b	151d0 <argp_parse@@Base+0x2808>
   153a8:	mov	r9, #0
   153ac:	b	14f88 <argp_parse@@Base+0x25c0>
   153b0:	mov	r4, r9
   153b4:	mov	sl, #0
   153b8:	str	sl, [sp, #12]
   153bc:	b	14fcc <argp_parse@@Base+0x2604>
   153c0:	ldr	r3, [r0, #20]
   153c4:	cmp	r3, #0
   153c8:	movne	sl, #0
   153cc:	bne	14f98 <argp_parse@@Base+0x25d0>
   153d0:	mov	r3, r9
   153d4:	cmp	r9, #0
   153d8:	moveq	r4, #0
   153dc:	streq	r4, [sp, #12]
   153e0:	beq	150dc <argp_parse@@Base+0x2714>
   153e4:	mov	r4, r9
   153e8:	mov	r9, r3
   153ec:	mov	sl, #0
   153f0:	str	sl, [sp, #12]
   153f4:	b	14fd4 <argp_parse@@Base+0x260c>
   153f8:	ldr	r3, [fp, #20]
   153fc:	cmp	r3, #0
   15400:	moveq	r3, r9
   15404:	beq	153d4 <argp_parse@@Base+0x2a0c>
   15408:	ldr	r1, [sp, #8]
   1540c:	mov	r0, fp
   15410:	bl	1343c <argp_parse@@Base+0xa74>
   15414:	str	r0, [sp, #12]
   15418:	ldr	r3, [fp, #20]
   1541c:	mov	sl, #0
   15420:	ldr	r0, [pc]	; 15428 <argp_parse@@Base+0x2a60>
   15424:	b	14fbc <argp_parse@@Base+0x25f4>
   15428:	andeq	r0, r0, #1
   1542c:	andeq	r0, r0, #2
   15430:	andeq	r0, r0, #4
   15434:	ldr	r3, [r0, #12]
   15438:	ldr	r2, [r1, #12]
   1543c:	cmp	r3, r2
   15440:	beq	15498 <argp_parse@@Base+0x2ad0>
   15444:	push	{r4, r5, r6, lr}
   15448:	mov	r5, r1
   1544c:	mov	r4, r0
   15450:	mov	r1, r2
   15454:	mov	r0, r3
   15458:	bl	15434 <argp_parse@@Base+0x2a6c>
   1545c:	subs	r3, r0, #0
   15460:	bne	15490 <argp_parse@@Base+0x2ac8>
   15464:	ldr	r0, [r4, #8]
   15468:	ldr	r3, [r5, #8]
   1546c:	mvn	r2, r3
   15470:	lsr	r2, r2, #31
   15474:	cmp	r2, r0, lsr #31
   15478:	subne	r3, r0, r3
   1547c:	subeq	r3, r3, r0
   15480:	cmp	r3, #0
   15484:	ldreq	r3, [r5, #4]
   15488:	ldreq	r0, [r4, #4]
   1548c:	subeq	r3, r3, r0
   15490:	mov	r0, r3
   15494:	pop	{r4, r5, r6, pc}
   15498:	ldr	r2, [r0, #8]
   1549c:	ldr	r3, [r1, #8]
   154a0:	mvn	ip, r3
   154a4:	lsr	ip, ip, #31
   154a8:	cmp	ip, r2, lsr #31
   154ac:	subne	r3, r2, r3
   154b0:	subeq	r3, r3, r2
   154b4:	cmp	r3, #0
   154b8:	ldreq	r3, [r1, #4]
   154bc:	ldreq	r0, [r0, #4]
   154c0:	subeq	r3, r3, r0
   154c4:	mov	r0, r3
   154c8:	bx	lr
   154cc:	push	{r4, r5, r6, r7, r8, lr}
   154d0:	sub	sp, sp, #8
   154d4:	ldr	lr, [r0, #16]
   154d8:	cmp	lr, #0
   154dc:	movne	r2, lr
   154e0:	bne	154f0 <argp_parse@@Base+0x2b28>
   154e4:	ldr	ip, [r0, #12]
   154e8:	b	15500 <argp_parse@@Base+0x2b38>
   154ec:	mov	r2, r3
   154f0:	ldr	r3, [r2, #12]
   154f4:	cmp	r3, #0
   154f8:	bne	154ec <argp_parse@@Base+0x2b24>
   154fc:	ldr	ip, [r2, #8]
   15500:	ldr	r5, [r1, #16]
   15504:	cmp	r5, #0
   15508:	movne	r2, r5
   1550c:	bne	1551c <argp_parse@@Base+0x2b54>
   15510:	ldr	r4, [r1, #12]
   15514:	b	1552c <argp_parse@@Base+0x2b64>
   15518:	mov	r2, r3
   1551c:	ldr	r3, [r2, #12]
   15520:	cmp	r3, #0
   15524:	bne	15518 <argp_parse@@Base+0x2b50>
   15528:	ldr	r4, [r2, #8]
   1552c:	mvn	r3, r4
   15530:	lsr	r3, r3, #31
   15534:	cmp	r3, ip, lsr #31
   15538:	subne	r4, ip, r4
   1553c:	subeq	r4, r4, ip
   15540:	cmp	r4, #0
   15544:	bne	155ac <argp_parse@@Base+0x2be4>
   15548:	adds	r4, r5, #0
   1554c:	movne	r4, #1
   15550:	cmp	lr, #0
   15554:	rsbeq	r4, r4, #0
   15558:	rsbne	r4, r4, #1
   1555c:	cmp	r4, #0
   15560:	bne	155ac <argp_parse@@Base+0x2be4>
   15564:	mov	r6, r1
   15568:	mov	r7, r0
   1556c:	cmp	lr, #0
   15570:	beq	155fc <argp_parse@@Base+0x2c34>
   15574:	ldr	ip, [lr, #20]
   15578:	ldr	r2, [r5, #20]
   1557c:	cmp	ip, r2
   15580:	ble	155b8 <argp_parse@@Base+0x2bf0>
   15584:	mov	r0, lr
   15588:	ldr	r0, [r0, #12]
   1558c:	ldr	r3, [r0, #20]
   15590:	cmp	r2, r3
   15594:	blt	15588 <argp_parse@@Base+0x2bc0>
   15598:	mov	r1, r5
   1559c:	bl	15434 <argp_parse@@Base+0x2a6c>
   155a0:	subs	r4, r0, #0
   155a4:	cmp	r0, #0
   155a8:	moveq	r4, #1
   155ac:	mov	r0, r4
   155b0:	add	sp, sp, #8
   155b4:	pop	{r4, r5, r6, r7, r8, pc}
   155b8:	cmp	ip, r2
   155bc:	bge	155e8 <argp_parse@@Base+0x2c20>
   155c0:	mov	r1, r5
   155c4:	ldr	r1, [r1, #12]
   155c8:	ldr	r3, [r1, #20]
   155cc:	cmp	ip, r3
   155d0:	blt	155c4 <argp_parse@@Base+0x2bfc>
   155d4:	mov	r0, lr
   155d8:	bl	15434 <argp_parse@@Base+0x2a6c>
   155dc:	subs	r4, r0, #0
   155e0:	mvneq	r4, #0
   155e4:	b	155ac <argp_parse@@Base+0x2be4>
   155e8:	mov	r1, r5
   155ec:	mov	r0, lr
   155f0:	bl	15434 <argp_parse@@Base+0x2a6c>
   155f4:	subs	r4, r0, #0
   155f8:	bne	155ac <argp_parse@@Base+0x2be4>
   155fc:	ldr	r3, [r7, #12]
   15600:	ldr	r4, [r6, #12]
   15604:	mvn	r2, r4
   15608:	lsr	r2, r2, #31
   1560c:	cmp	r2, r3, lsr #31
   15610:	subne	r4, r3, r4
   15614:	subeq	r4, r4, r3
   15618:	cmp	r4, #0
   1561c:	bne	155ac <argp_parse@@Base+0x2be4>
   15620:	mov	r0, r7
   15624:	bl	14274 <argp_parse@@Base+0x18ac>
   15628:	mov	r5, r0
   1562c:	str	r0, [sp]
   15630:	mov	r0, r6
   15634:	bl	14274 <argp_parse@@Base+0x18ac>
   15638:	str	r0, [sp, #4]
   1563c:	ldr	r3, [r7]
   15640:	ldr	r3, [r3, #12]
   15644:	adds	r5, r5, #0
   15648:	movne	r5, #1
   1564c:	ands	r3, r5, r3, lsr #3
   15650:	beq	15794 <argp_parse@@Base+0x2dcc>
   15654:	mov	r0, sp
   15658:	bl	14438 <argp_parse@@Base+0x1a70>
   1565c:	adds	r5, r0, #0
   15660:	movne	r5, #1
   15664:	ldr	r3, [r6]
   15668:	ldr	r0, [r3, #12]
   1566c:	ands	r0, r0, #8
   15670:	beq	15690 <argp_parse@@Base+0x2cc8>
   15674:	ldr	r3, [sp, #4]
   15678:	cmp	r3, #0
   1567c:	beq	1578c <argp_parse@@Base+0x2dc4>
   15680:	add	r0, sp, #4
   15684:	bl	14438 <argp_parse@@Base+0x1a70>
   15688:	adds	r0, r0, #0
   1568c:	movne	r0, #1
   15690:	subs	r4, r5, r0
   15694:	bne	155ac <argp_parse@@Base+0x2be4>
   15698:	ldr	r2, [r7, #20]
   1569c:	ldr	r4, [pc, #276]	; 157b8 <argp_parse@@Base+0x2df0>
   156a0:	mov	r3, #0
   156a4:	ldr	r2, [r2, #24]
   156a8:	mov	r1, r4
   156ac:	mov	r0, r7
   156b0:	bl	1430c <argp_parse@@Base+0x1944>
   156b4:	mov	r5, r0
   156b8:	uxtb	r8, r0
   156bc:	ldr	r2, [r6, #20]
   156c0:	mov	r3, #0
   156c4:	ldr	r2, [r2, #24]
   156c8:	mov	r1, r4
   156cc:	mov	r0, r6
   156d0:	bl	1430c <argp_parse@@Base+0x1944>
   156d4:	uxtb	r7, r0
   156d8:	cmp	r8, #0
   156dc:	movne	r5, r8
   156e0:	bne	156f4 <argp_parse@@Base+0x2d2c>
   156e4:	ldr	r3, [sp]
   156e8:	cmp	r3, #0
   156ec:	ldrbne	r5, [r3]
   156f0:	moveq	r5, #0
   156f4:	cmp	r7, #0
   156f8:	uxtbne	r6, r0
   156fc:	bne	15710 <argp_parse@@Base+0x2d48>
   15700:	ldr	r3, [sp, #4]
   15704:	cmp	r3, #0
   15708:	ldrbne	r6, [r3]
   1570c:	moveq	r6, #0
   15710:	bl	11410 <__ctype_tolower_loc@plt>
   15714:	ldr	r3, [r0]
   15718:	ldr	r4, [r3, r5, lsl #2]
   1571c:	ldr	r3, [r3, r6, lsl #2]
   15720:	subs	r4, r4, r3
   15724:	bne	155ac <argp_parse@@Base+0x2be4>
   15728:	subs	r4, r6, r5
   1572c:	bne	155ac <argp_parse@@Base+0x2be4>
   15730:	adds	r4, r7, #0
   15734:	movne	r4, #1
   15738:	cmp	r8, #0
   1573c:	rsbeq	r4, r4, #0
   15740:	rsbne	r4, r4, #1
   15744:	cmp	r4, #0
   15748:	bne	155ac <argp_parse@@Base+0x2be4>
   1574c:	cmp	r8, #0
   15750:	bne	155ac <argp_parse@@Base+0x2be4>
   15754:	ldr	r0, [sp]
   15758:	ldr	r1, [sp, #4]
   1575c:	adds	r4, r1, #0
   15760:	movne	r4, #1
   15764:	cmp	r0, #0
   15768:	rsbeq	r4, r4, #0
   1576c:	rsbne	r4, r4, #1
   15770:	cmp	r4, #0
   15774:	bne	155ac <argp_parse@@Base+0x2be4>
   15778:	cmp	r0, #0
   1577c:	beq	155ac <argp_parse@@Base+0x2be4>
   15780:	bl	11398 <strcasecmp@plt>
   15784:	mov	r4, r0
   15788:	b	155ac <argp_parse@@Base+0x2be4>
   1578c:	mov	r0, r4
   15790:	b	15690 <argp_parse@@Base+0x2cc8>
   15794:	ldr	r3, [r6]
   15798:	ldr	r3, [r3, #12]
   1579c:	tst	r3, #8
   157a0:	beq	15698 <argp_parse@@Base+0x2cd0>
   157a4:	ldr	r3, [sp, #4]
   157a8:	cmp	r3, #0
   157ac:	movne	r5, r4
   157b0:	bne	15680 <argp_parse@@Base+0x2cb8>
   157b4:	b	15698 <argp_parse@@Base+0x2cd0>
   157b8:	strdeq	r4, [r1], -r0
   157bc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   157c0:	sub	sp, sp, #52	; 0x34
   157c4:	str	r0, [sp, #24]
   157c8:	str	r1, [sp, #28]
   157cc:	ldr	r2, [r0, #16]
   157d0:	str	r2, [sp, #8]
   157d4:	ldr	r5, [r0]
   157d8:	mov	r0, #16
   157dc:	bl	141f4 <argp_parse@@Base+0x182c>
   157e0:	subs	fp, r0, #0
   157e4:	beq	15814 <argp_parse@@Base+0x2e4c>
   157e8:	mov	r3, #0
   157ec:	str	r3, [fp, #4]
   157f0:	str	r3, [fp, #12]
   157f4:	cmp	r5, r3
   157f8:	beq	159ec <argp_parse@@Base+0x3024>
   157fc:	ldr	r4, [r5, #12]
   15800:	ands	r4, r4, #4
   15804:	bne	15828 <argp_parse@@Base+0x2e60>
   15808:	add	r6, r5, #24
   1580c:	mov	r8, r3
   15810:	b	15850 <argp_parse@@Base+0x2e88>
   15814:	ldr	r3, [pc, #1576]	; 15e44 <argp_parse@@Base+0x347c>
   15818:	ldr	r2, [pc, #1576]	; 15e48 <argp_parse@@Base+0x3480>
   1581c:	ldr	r1, [pc, #1576]	; 15e4c <argp_parse@@Base+0x3484>
   15820:	ldr	r0, [pc, #1576]	; 15e50 <argp_parse@@Base+0x3488>
   15824:	bl	11608 <__assert_fail@plt>
   15828:	ldr	r3, [pc, #1556]	; 15e44 <argp_parse@@Base+0x347c>
   1582c:	mov	r2, #460	; 0x1cc
   15830:	ldr	r1, [pc, #1556]	; 15e4c <argp_parse@@Base+0x3484>
   15834:	ldr	r0, [pc, #1560]	; 15e54 <argp_parse@@Base+0x348c>
   15838:	bl	11608 <__assert_fail@plt>
   1583c:	ldr	r2, [fp, #4]
   15840:	add	r2, r2, #1
   15844:	str	r2, [fp, #4]
   15848:	b	15878 <argp_parse@@Base+0x2eb0>
   1584c:	add	r6, r6, #24
   15850:	mov	r3, r6
   15854:	ldr	r2, [r6, #-20]	; 0xffffffec
   15858:	cmp	r2, #0
   1585c:	bne	1586c <argp_parse@@Base+0x2ea4>
   15860:	ldr	r2, [r6, #-24]	; 0xffffffe8
   15864:	cmp	r2, #0
   15868:	beq	158b0 <argp_parse@@Base+0x2ee8>
   1586c:	ldr	r2, [r3, #-12]
   15870:	tst	r2, #4
   15874:	beq	1583c <argp_parse@@Base+0x2e74>
   15878:	ldr	r2, [r3, #-12]
   1587c:	tst	r2, #8
   15880:	bne	1584c <argp_parse@@Base+0x2e84>
   15884:	ldr	r7, [r3, #-20]	; 0xffffffec
   15888:	sub	r3, r7, #1
   1588c:	cmp	r3, #254	; 0xfe
   15890:	bhi	1584c <argp_parse@@Base+0x2e84>
   15894:	bl	11434 <__ctype_b_loc@plt>
   15898:	ldr	r3, [r0]
   1589c:	lsl	r7, r7, #1
   158a0:	ldrh	r3, [r3, r7]
   158a4:	tst	r3, #16384	; 0x4000
   158a8:	addne	r8, r8, #1
   158ac:	b	1584c <argp_parse@@Base+0x2e84>
   158b0:	ldr	r2, [r6, #-8]
   158b4:	cmp	r2, #0
   158b8:	bne	1586c <argp_parse@@Base+0x2ea4>
   158bc:	ldr	r2, [r6, #-4]
   158c0:	cmp	r2, #0
   158c4:	bne	1586c <argp_parse@@Base+0x2ea4>
   158c8:	ldr	r0, [fp, #4]
   158cc:	rsb	r0, r0, r0, lsl #3
   158d0:	lsl	r0, r0, #2
   158d4:	bl	141f4 <argp_parse@@Base+0x182c>
   158d8:	str	r0, [fp]
   158dc:	add	r0, r8, #1
   158e0:	bl	141f4 <argp_parse@@Base+0x182c>
   158e4:	str	r0, [fp, #8]
   158e8:	ldr	r8, [fp]
   158ec:	cmp	r0, #0
   158f0:	cmpne	r8, #0
   158f4:	bne	1590c <argp_parse@@Base+0x2f44>
   158f8:	ldr	r3, [pc, #1348]	; 15e44 <argp_parse@@Base+0x347c>
   158fc:	ldr	r2, [pc, #1364]	; 15e58 <argp_parse@@Base+0x3490>
   15900:	ldr	r1, [pc, #1348]	; 15e4c <argp_parse@@Base+0x3484>
   15904:	ldr	r0, [pc, #1360]	; 15e5c <argp_parse@@Base+0x3494>
   15908:	bl	11608 <__assert_fail@plt>
   1590c:	ldr	r2, [fp, #4]
   15910:	ldr	r3, [pc, #1352]	; 15e60 <argp_parse@@Base+0x3498>
   15914:	cmp	r2, r3
   15918:	addls	r8, r8, #28
   1591c:	movls	r7, r0
   15920:	movls	sl, #0
   15924:	bls	15970 <argp_parse@@Base+0x2fa8>
   15928:	ldr	r3, [pc, #1300]	; 15e44 <argp_parse@@Base+0x347c>
   1592c:	mov	r2, #476	; 0x1dc
   15930:	ldr	r1, [pc, #1300]	; 15e4c <argp_parse@@Base+0x3484>
   15934:	ldr	r0, [pc, #1320]	; 15e64 <argp_parse@@Base+0x349c>
   15938:	bl	11608 <__assert_fail@plt>
   1593c:	ldr	r3, [r5, #4]
   15940:	cmp	r3, #0
   15944:	addeq	r9, r4, #1
   15948:	movne	r9, r4
   1594c:	b	159b4 <argp_parse@@Base+0x2fec>
   15950:	ldr	r3, [r5, #16]
   15954:	cmp	r3, #0
   15958:	bne	15d60 <argp_parse@@Base+0x3398>
   1595c:	ldr	r3, [r5, #20]
   15960:	cmp	r3, #0
   15964:	bne	15d60 <argp_parse@@Base+0x3398>
   15968:	add	r8, r8, #28
   1596c:	mov	r4, r9
   15970:	ldr	r3, [r5, #4]
   15974:	cmp	r3, #0
   15978:	bne	15988 <argp_parse@@Base+0x2fc0>
   1597c:	ldr	r3, [r5]
   15980:	cmp	r3, #0
   15984:	beq	159cc <argp_parse@@Base+0x3004>
   15988:	mov	r6, r8
   1598c:	str	r5, [r8, #-28]	; 0xffffffe4
   15990:	str	sl, [r8, #-24]	; 0xffffffe8
   15994:	str	r7, [r8, #-20]	; 0xffffffec
   15998:	ldr	r9, [r5, #20]
   1599c:	cmp	r9, #0
   159a0:	bne	159b4 <argp_parse@@Base+0x2fec>
   159a4:	ldr	r3, [r5]
   159a8:	cmp	r3, #0
   159ac:	movne	r9, r4
   159b0:	beq	1593c <argp_parse@@Base+0x2f74>
   159b4:	str	r9, [r6, #-16]
   159b8:	ldr	r3, [sp, #28]
   159bc:	str	r3, [r6, #-12]
   159c0:	ldr	r3, [sp, #24]
   159c4:	str	r3, [r6, #-8]
   159c8:	b	15d6c <argp_parse@@Base+0x33a4>
   159cc:	ldr	r3, [r5, #16]
   159d0:	cmp	r3, #0
   159d4:	bne	15988 <argp_parse@@Base+0x2fc0>
   159d8:	ldr	r3, [r5, #20]
   159dc:	cmp	r3, #0
   159e0:	bne	15988 <argp_parse@@Base+0x2fc0>
   159e4:	mov	r3, #0
   159e8:	strb	r3, [r7]
   159ec:	ldr	r3, [sp, #8]
   159f0:	cmp	r3, #0
   159f4:	beq	15d30 <argp_parse@@Base+0x3368>
   159f8:	ldr	r3, [r3]
   159fc:	cmp	r3, #0
   15a00:	beq	15d30 <argp_parse@@Base+0x3368>
   15a04:	add	r3, fp, #12
   15a08:	str	r3, [sp, #44]	; 0x2c
   15a0c:	str	fp, [sp, #20]
   15a10:	b	15aa0 <argp_parse@@Base+0x30d8>
   15a14:	ldr	r1, [sp, #28]
   15a18:	b	15b20 <argp_parse@@Base+0x3158>
   15a1c:	mov	r2, r3
   15a20:	ldr	r3, [r2, #24]
   15a24:	cmp	r3, #0
   15a28:	bne	15a1c <argp_parse@@Base+0x3054>
   15a2c:	add	r2, r2, #24
   15a30:	ldr	r1, [sp, #16]
   15a34:	ldr	r3, [r1, #12]
   15a38:	str	r3, [r2]
   15a3c:	mov	r2, #0
   15a40:	str	r2, [r1, #12]
   15a44:	ldr	r3, [r1, #4]
   15a48:	cmp	r3, r2
   15a4c:	beq	15a84 <argp_parse@@Base+0x30bc>
   15a50:	ldr	r0, [sp, #20]
   15a54:	ldr	r2, [r0, #4]
   15a58:	cmp	r2, #0
   15a5c:	bne	15b48 <argp_parse@@Base+0x3180>
   15a60:	str	r3, [r0, #4]
   15a64:	mov	r2, r1
   15a68:	ldr	r3, [r1]
   15a6c:	str	r3, [r0]
   15a70:	ldr	r3, [r2, #8]
   15a74:	str	r3, [r0, #8]
   15a78:	mov	r3, r2
   15a7c:	mov	r2, #0
   15a80:	str	r2, [r3, #4]
   15a84:	ldr	r0, [sp, #16]
   15a88:	bl	14670 <argp_parse@@Base+0x1ca8>
   15a8c:	ldr	r2, [sp, #8]
   15a90:	ldr	r3, [r2, #16]!
   15a94:	str	r2, [sp, #8]
   15a98:	cmp	r3, #0
   15a9c:	beq	15d2c <argp_parse@@Base+0x3364>
   15aa0:	ldr	r3, [sp, #8]
   15aa4:	ldr	r4, [r3, #12]
   15aa8:	cmp	r4, #0
   15aac:	bne	15abc <argp_parse@@Base+0x30f4>
   15ab0:	ldr	r3, [r3, #8]
   15ab4:	cmp	r3, #0
   15ab8:	beq	15a14 <argp_parse@@Base+0x304c>
   15abc:	ldr	r2, [sp, #8]
   15ac0:	ldr	r5, [r2, #8]
   15ac4:	ldr	r7, [sp, #24]
   15ac8:	ldr	r3, [r7, #16]
   15acc:	sub	r3, r2, r3
   15ad0:	asr	r6, r3, #4
   15ad4:	mov	r0, #28
   15ad8:	bl	141f4 <argp_parse@@Base+0x182c>
   15adc:	subs	r1, r0, #0
   15ae0:	beq	15b20 <argp_parse@@Base+0x3158>
   15ae4:	str	r4, [r1, #8]
   15ae8:	str	r5, [r1]
   15aec:	str	r6, [r1, #4]
   15af0:	ldr	r3, [sp, #28]
   15af4:	str	r3, [r1, #12]
   15af8:	str	r7, [r1, #16]
   15afc:	cmp	r3, #0
   15b00:	ldrne	r3, [r3, #20]
   15b04:	addne	r3, r3, #1
   15b08:	moveq	r3, #0
   15b0c:	str	r3, [r1, #20]
   15b10:	ldr	r2, [sp, #20]
   15b14:	ldr	r3, [r2, #12]
   15b18:	str	r3, [r1, #24]
   15b1c:	str	r1, [r2, #12]
   15b20:	ldr	r3, [sp, #8]
   15b24:	ldr	r0, [r3]
   15b28:	bl	157bc <argp_parse@@Base+0x2df4>
   15b2c:	str	r0, [sp, #16]
   15b30:	ldr	r3, [sp, #20]
   15b34:	ldr	r2, [r3, #12]
   15b38:	cmp	r2, #0
   15b3c:	ldreq	r2, [sp, #44]	; 0x2c
   15b40:	bne	15a20 <argp_parse@@Base+0x3058>
   15b44:	b	15a30 <argp_parse@@Base+0x3068>
   15b48:	add	r3, r3, r2
   15b4c:	str	r3, [sp, #36]	; 0x24
   15b50:	rsb	r0, r3, r3, lsl #3
   15b54:	lsl	r0, r0, #2
   15b58:	bl	141f4 <argp_parse@@Base+0x182c>
   15b5c:	mov	r4, r0
   15b60:	str	r0, [sp, #32]
   15b64:	ldr	r3, [sp, #20]
   15b68:	ldr	r0, [r3, #8]
   15b6c:	bl	11458 <strlen@plt>
   15b70:	mov	r6, r0
   15b74:	ldr	r3, [sp, #16]
   15b78:	ldr	r0, [r3, #8]
   15b7c:	bl	11458 <strlen@plt>
   15b80:	add	r0, r6, r0
   15b84:	add	r0, r0, #1
   15b88:	bl	141f4 <argp_parse@@Base+0x182c>
   15b8c:	mov	sl, r0
   15b90:	cmp	r4, #0
   15b94:	cmpne	r0, #0
   15b98:	beq	15c64 <argp_parse@@Base+0x329c>
   15b9c:	ldr	r3, [sp, #36]	; 0x24
   15ba0:	ldr	r2, [pc, #696]	; 15e60 <argp_parse@@Base+0x3498>
   15ba4:	cmp	r3, r2
   15ba8:	bhi	15c78 <argp_parse@@Base+0x32b0>
   15bac:	ldr	r5, [sp, #20]
   15bb0:	ldr	r2, [r5]
   15bb4:	mov	r1, r2
   15bb8:	str	r2, [sp, #40]	; 0x28
   15bbc:	ldr	r4, [r5, #4]
   15bc0:	rsb	r7, r4, r4, lsl #3
   15bc4:	lsl	r7, r7, #2
   15bc8:	mov	r2, r7
   15bcc:	ldr	r8, [sp, #32]
   15bd0:	mov	r0, r8
   15bd4:	bl	11428 <mempcpy@plt>
   15bd8:	ldr	r3, [sp, #16]
   15bdc:	ldr	r1, [r3, #4]
   15be0:	str	r1, [sp, #4]
   15be4:	rsb	r2, r1, r1, lsl #3
   15be8:	lsl	r2, r2, #2
   15bec:	ldr	r1, [r3]
   15bf0:	bl	11308 <memcpy@plt>
   15bf4:	ldr	r5, [r5, #8]
   15bf8:	mov	r2, r6
   15bfc:	mov	r1, r5
   15c00:	mov	r0, sl
   15c04:	bl	11308 <memcpy@plt>
   15c08:	cmp	r4, #0
   15c0c:	beq	15c8c <argp_parse@@Base+0x32c4>
   15c10:	mov	r2, r8
   15c14:	ldr	r3, [r2, #8]
   15c18:	sub	r3, r3, r5
   15c1c:	add	r3, sl, r3
   15c20:	str	r3, [r2, #8]
   15c24:	add	r2, r2, #28
   15c28:	subs	r4, r4, #1
   15c2c:	bne	15c14 <argp_parse@@Base+0x324c>
   15c30:	ldr	r3, [sp, #32]
   15c34:	add	r7, r3, r7
   15c38:	add	r3, sl, r6
   15c3c:	str	r3, [sp, #12]
   15c40:	ldr	r2, [sp, #16]
   15c44:	ldr	r8, [r2, #8]
   15c48:	ldr	r2, [sp, #4]
   15c4c:	cmp	r2, #0
   15c50:	beq	15cf4 <argp_parse@@Base+0x332c>
   15c54:	add	r9, r7, #28
   15c58:	mov	fp, r3
   15c5c:	sub	r7, r3, #1
   15c60:	b	15cdc <argp_parse@@Base+0x3314>
   15c64:	ldr	r3, [pc, #508]	; 15e68 <argp_parse@@Base+0x34a0>
   15c68:	ldr	r2, [pc, #508]	; 15e6c <argp_parse@@Base+0x34a4>
   15c6c:	ldr	r1, [pc, #472]	; 15e4c <argp_parse@@Base+0x3484>
   15c70:	ldr	r0, [pc, #504]	; 15e70 <argp_parse@@Base+0x34a8>
   15c74:	bl	11608 <__assert_fail@plt>
   15c78:	ldr	r3, [pc, #488]	; 15e68 <argp_parse@@Base+0x34a0>
   15c7c:	mov	r2, #972	; 0x3cc
   15c80:	ldr	r1, [pc, #452]	; 15e4c <argp_parse@@Base+0x3484>
   15c84:	ldr	r0, [pc, #488]	; 15e74 <argp_parse@@Base+0x34ac>
   15c88:	bl	11608 <__assert_fail@plt>
   15c8c:	ldr	r7, [sp, #32]
   15c90:	b	15c38 <argp_parse@@Base+0x3270>
   15c94:	ldr	r3, [sp, #12]
   15c98:	cmp	sl, r3
   15c9c:	bcs	15e34 <argp_parse@@Base+0x346c>
   15ca0:	ldrb	r3, [sl]
   15ca4:	cmp	r3, r1
   15ca8:	beq	15e3c <argp_parse@@Base+0x3474>
   15cac:	mov	r3, sl
   15cb0:	cmp	r7, r3
   15cb4:	beq	15e34 <argp_parse@@Base+0x346c>
   15cb8:	ldrb	r2, [r3, #1]!
   15cbc:	cmp	r2, r1
   15cc0:	bne	15cb0 <argp_parse@@Base+0x32e8>
   15cc4:	b	15e3c <argp_parse@@Base+0x3474>
   15cc8:	add	r9, r9, #28
   15ccc:	ldr	r3, [sp, #4]
   15cd0:	subs	r3, r3, #1
   15cd4:	str	r3, [sp, #4]
   15cd8:	beq	15cf8 <argp_parse@@Base+0x3330>
   15cdc:	str	fp, [r9, #-20]	; 0xffffffec
   15ce0:	ldr	r5, [r9, #-24]	; 0xffffffe8
   15ce4:	ldr	r4, [r9, #-28]	; 0xffffffe4
   15ce8:	cmp	r5, #0
   15cec:	bne	15dfc <argp_parse@@Base+0x3434>
   15cf0:	b	15cc8 <argp_parse@@Base+0x3300>
   15cf4:	ldr	fp, [sp, #12]
   15cf8:	mov	r3, #0
   15cfc:	strb	r3, [fp]
   15d00:	ldr	r0, [sp, #40]	; 0x28
   15d04:	bl	135bc <argp_parse@@Base+0xbf4>
   15d08:	ldr	r4, [sp, #20]
   15d0c:	ldr	r0, [r4, #8]
   15d10:	bl	135bc <argp_parse@@Base+0xbf4>
   15d14:	ldr	r2, [sp, #32]
   15d18:	str	r2, [r4]
   15d1c:	ldr	r2, [sp, #36]	; 0x24
   15d20:	str	r2, [r4, #4]
   15d24:	str	sl, [r4, #8]
   15d28:	b	15a84 <argp_parse@@Base+0x30bc>
   15d2c:	ldr	fp, [sp, #20]
   15d30:	mov	r0, fp
   15d34:	add	sp, sp, #52	; 0x34
   15d38:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15d3c:	strb	r4, [r7]
   15d40:	add	r7, r7, #1
   15d44:	add	r5, r5, #24
   15d48:	ldr	r3, [r5, #4]
   15d4c:	cmp	r3, #0
   15d50:	bne	15d60 <argp_parse@@Base+0x3398>
   15d54:	ldr	r3, [r5]
   15d58:	cmp	r3, #0
   15d5c:	beq	15950 <argp_parse@@Base+0x2f88>
   15d60:	ldr	r3, [r5, #12]
   15d64:	tst	r3, #4
   15d68:	beq	15968 <argp_parse@@Base+0x2fa0>
   15d6c:	ldr	r3, [r6, #-24]	; 0xffffffe8
   15d70:	add	r3, r3, #1
   15d74:	str	r3, [r6, #-24]	; 0xffffffe8
   15d78:	ldr	r3, [r5, #12]
   15d7c:	tst	r3, #8
   15d80:	bne	15d44 <argp_parse@@Base+0x337c>
   15d84:	ldr	r4, [r5, #4]
   15d88:	sub	r3, r4, #1
   15d8c:	cmp	r3, #254	; 0xfe
   15d90:	bhi	15d44 <argp_parse@@Base+0x337c>
   15d94:	bl	11434 <__ctype_b_loc@plt>
   15d98:	ldr	r2, [r0]
   15d9c:	lsl	r3, r4, #1
   15da0:	ldrh	r3, [r2, r3]
   15da4:	tst	r3, #16384	; 0x4000
   15da8:	beq	15d44 <argp_parse@@Base+0x337c>
   15dac:	uxtb	r4, r4
   15db0:	ldr	r3, [fp, #8]
   15db4:	cmp	r3, r7
   15db8:	bcs	15d3c <argp_parse@@Base+0x3374>
   15dbc:	ldrb	r2, [r3]
   15dc0:	cmp	r2, r4
   15dc4:	beq	15d44 <argp_parse@@Base+0x337c>
   15dc8:	sub	r1, r7, #1
   15dcc:	cmp	r3, r1
   15dd0:	beq	15d3c <argp_parse@@Base+0x3374>
   15dd4:	ldrb	r2, [r3, #1]!
   15dd8:	cmp	r2, r4
   15ddc:	bne	15dcc <argp_parse@@Base+0x3404>
   15de0:	b	15d44 <argp_parse@@Base+0x337c>
   15de4:	ldrb	r1, [r8]
   15de8:	cmp	r1, r6
   15dec:	beq	15c94 <argp_parse@@Base+0x32cc>
   15df0:	add	r4, r4, #24
   15df4:	subs	r5, r5, #1
   15df8:	beq	15cc8 <argp_parse@@Base+0x3300>
   15dfc:	ldr	r3, [r4, #12]
   15e00:	tst	r3, #8
   15e04:	bne	15df0 <argp_parse@@Base+0x3428>
   15e08:	ldr	r6, [r4, #4]
   15e0c:	sub	r3, r6, #1
   15e10:	cmp	r3, #254	; 0xfe
   15e14:	bhi	15df0 <argp_parse@@Base+0x3428>
   15e18:	bl	11434 <__ctype_b_loc@plt>
   15e1c:	ldr	r2, [r0]
   15e20:	lsl	r3, r6, #1
   15e24:	ldrh	r3, [r2, r3]
   15e28:	tst	r3, #16384	; 0x4000
   15e2c:	bne	15de4 <argp_parse@@Base+0x341c>
   15e30:	b	15df0 <argp_parse@@Base+0x3428>
   15e34:	strb	r1, [fp]
   15e38:	add	fp, fp, #1
   15e3c:	add	r8, r8, #1
   15e40:	b	15df0 <argp_parse@@Base+0x3428>
   15e44:	andeq	r9, r1, r8, lsr #11
   15e48:	andeq	r0, r0, r2, asr #3
   15e4c:	muleq	r1, r8, r6
   15e50:	andeq	r9, r1, r4, lsr #13
   15e54:	andeq	r9, r1, r8, lsr #13
   15e58:	ldrdeq	r0, [r0], -sl
   15e5c:			; <UNDEFINED> instruction: 0x000196b8
   15e60:	stmdbeq	r4!, {r0, r3, r6, r9, ip, pc}
   15e64:	ldrdeq	r9, [r1], -ip
   15e68:			; <UNDEFINED> instruction: 0x000195b4
   15e6c:	andeq	r0, r0, sl, asr #7
   15e70:	andeq	r9, r1, r8, lsl r7
   15e74:	andeq	r9, r1, r4, lsr r7

00015e78 <argp_failure@@Base>:
   15e78:	push	{r3}		; (str r3, [sp, #-4]!)
   15e7c:	push	{r4, r5, r6, r7, lr}
   15e80:	sub	sp, sp, #200	; 0xc8
   15e84:	mov	r7, r1
   15e88:	mov	r6, r2
   15e8c:	subs	r5, r0, #0
   15e90:	beq	15fe0 <argp_failure@@Base+0x168>
   15e94:	ldr	r3, [r5, #16]
   15e98:	tst	r3, #2
   15e9c:	bne	15fd0 <argp_failure@@Base+0x158>
   15ea0:	ldr	r4, [r5, #44]	; 0x2c
   15ea4:	cmp	r4, #0
   15ea8:	beq	15fd0 <argp_failure@@Base+0x158>
   15eac:	mov	r0, r4
   15eb0:	bl	11590 <flockfile@plt>
   15eb4:	ldr	r0, [r5, #40]	; 0x28
   15eb8:	mov	r1, r4
   15ebc:	bl	11278 <fputs_unlocked@plt>
   15ec0:	ldr	r3, [sp, #220]	; 0xdc
   15ec4:	cmp	r3, #0
   15ec8:	beq	15f24 <argp_failure@@Base+0xac>
   15ecc:	add	r3, sp, #224	; 0xe0
   15ed0:	str	r3, [sp]
   15ed4:	ldr	r3, [r4, #20]
   15ed8:	ldr	r2, [r4, #24]
   15edc:	cmp	r3, r2
   15ee0:	addcc	r2, r3, #1
   15ee4:	strcc	r2, [r4, #20]
   15ee8:	movcc	r2, #58	; 0x3a
   15eec:	strbcc	r2, [r3]
   15ef0:	bcs	16004 <argp_failure@@Base+0x18c>
   15ef4:	ldr	r3, [r4, #20]
   15ef8:	ldr	r2, [r4, #24]
   15efc:	cmp	r3, r2
   15f00:	addcc	r2, r3, #1
   15f04:	strcc	r2, [r4, #20]
   15f08:	movcc	r2, #32
   15f0c:	strbcc	r2, [r3]
   15f10:	bcs	16014 <argp_failure@@Base+0x19c>
   15f14:	ldr	r2, [sp]
   15f18:	ldr	r1, [sp, #220]	; 0xdc
   15f1c:	mov	r0, r4
   15f20:	bl	1153c <vfprintf@plt>
   15f24:	cmp	r6, #0
   15f28:	beq	15f8c <argp_failure@@Base+0x114>
   15f2c:	ldr	r3, [r4, #20]
   15f30:	ldr	r2, [r4, #24]
   15f34:	cmp	r3, r2
   15f38:	addcc	r2, r3, #1
   15f3c:	strcc	r2, [r4, #20]
   15f40:	movcc	r2, #58	; 0x3a
   15f44:	strbcc	r2, [r3]
   15f48:	bcs	16024 <argp_failure@@Base+0x1ac>
   15f4c:	ldr	r3, [r4, #20]
   15f50:	ldr	r2, [r4, #24]
   15f54:	cmp	r3, r2
   15f58:	addcc	r2, r3, #1
   15f5c:	strcc	r2, [r4, #20]
   15f60:	movcc	r2, #32
   15f64:	strbcc	r2, [r3]
   15f68:	bcs	16034 <argp_failure@@Base+0x1bc>
   15f6c:	mov	r2, #200	; 0xc8
   15f70:	mov	r1, sp
   15f74:	mov	r0, r6
   15f78:	bl	114a0 <strerror_r@plt>
   15f7c:	cmp	r0, #0
   15f80:	beq	16044 <argp_failure@@Base+0x1cc>
   15f84:	mov	r1, r4
   15f88:	bl	11278 <fputs_unlocked@plt>
   15f8c:	ldr	r3, [r4, #20]
   15f90:	ldr	r2, [r4, #24]
   15f94:	cmp	r3, r2
   15f98:	addcc	r2, r3, #1
   15f9c:	strcc	r2, [r4, #20]
   15fa0:	movcc	r2, #10
   15fa4:	strbcc	r2, [r3]
   15fa8:	bcs	1605c <argp_failure@@Base+0x1e4>
   15fac:	mov	r0, r4
   15fb0:	bl	113a4 <funlockfile@plt>
   15fb4:	cmp	r7, #0
   15fb8:	beq	15fd0 <argp_failure@@Base+0x158>
   15fbc:	cmp	r5, #0
   15fc0:	beq	1606c <argp_failure@@Base+0x1f4>
   15fc4:	ldr	r3, [r5, #16]
   15fc8:	tst	r3, #32
   15fcc:	beq	1606c <argp_failure@@Base+0x1f4>
   15fd0:	add	sp, sp, #200	; 0xc8
   15fd4:	pop	{r4, r5, r6, r7, lr}
   15fd8:	add	sp, sp, #4
   15fdc:	bx	lr
   15fe0:	ldr	r3, [pc, #140]	; 16074 <argp_failure@@Base+0x1fc>
   15fe4:	ldr	r4, [r3]
   15fe8:	cmp	r4, #0
   15fec:	beq	15fd0 <argp_failure@@Base+0x158>
   15ff0:	mov	r0, r4
   15ff4:	bl	11590 <flockfile@plt>
   15ff8:	ldr	r3, [pc, #120]	; 16078 <argp_failure@@Base+0x200>
   15ffc:	ldr	r0, [r3]
   16000:	b	15eb8 <argp_failure@@Base+0x40>
   16004:	mov	r1, #58	; 0x3a
   16008:	mov	r0, r4
   1600c:	bl	114f4 <__overflow@plt>
   16010:	b	15ef4 <argp_failure@@Base+0x7c>
   16014:	mov	r1, #32
   16018:	mov	r0, r4
   1601c:	bl	114f4 <__overflow@plt>
   16020:	b	15f14 <argp_failure@@Base+0x9c>
   16024:	mov	r1, #58	; 0x3a
   16028:	mov	r0, r4
   1602c:	bl	114f4 <__overflow@plt>
   16030:	b	15f4c <argp_failure@@Base+0xd4>
   16034:	mov	r1, #32
   16038:	mov	r0, r4
   1603c:	bl	114f4 <__overflow@plt>
   16040:	b	15f6c <argp_failure@@Base+0xf4>
   16044:	mov	r0, r6
   16048:	bl	11404 <strerror@plt>
   1604c:	ldr	r3, [pc, #40]	; 1607c <argp_failure@@Base+0x204>
   16050:	cmp	r0, #0
   16054:	moveq	r0, r3
   16058:	b	15f84 <argp_failure@@Base+0x10c>
   1605c:	mov	r1, #10
   16060:	mov	r0, r4
   16064:	bl	114f4 <__overflow@plt>
   16068:	b	15fac <argp_failure@@Base+0x134>
   1606c:	mov	r0, r7
   16070:	bl	1144c <exit@plt>
   16074:	andeq	sl, r2, r0, lsl r5
   16078:	andeq	sl, r2, r0, lsl #10
   1607c:	andeq	r9, r1, r8, ror #14
   16080:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16084:	add	fp, sp, #32
   16088:	sub	sp, sp, #108	; 0x6c
   1608c:	str	r0, [fp, #-112]	; 0xffffff90
   16090:	str	r1, [fp, #-100]	; 0xffffff9c
   16094:	str	r3, [fp, #-104]	; 0xffffff98
   16098:	subs	r3, r2, #0
   1609c:	str	r3, [fp, #-132]	; 0xffffff7c
   160a0:	beq	1710c <argp_failure@@Base+0x1294>
   160a4:	mov	r0, r3
   160a8:	bl	11590 <flockfile@plt>
   160ac:	ldr	r3, [pc, #3772]	; 16f70 <argp_failure@@Base+0x10f8>
   160b0:	ldr	r3, [r3, #36]	; 0x24
   160b4:	str	r3, [fp, #-108]	; 0xffffff94
   160b8:	cmp	r3, #0
   160bc:	beq	16194 <argp_failure@@Base+0x31c>
   160c0:	mov	r3, #0
   160c4:	ldr	r2, [pc, #3748]	; 16f70 <argp_failure@@Base+0x10f8>
   160c8:	ldr	r2, [r2, #32]
   160cc:	mov	r1, r3
   160d0:	ldr	r0, [fp, #-132]	; 0xffffff7c
   160d4:	bl	18054 <argp_error@@Base+0xd60>
   160d8:	subs	sl, r0, #0
   160dc:	beq	16540 <argp_failure@@Base+0x6c8>
   160e0:	ldr	r3, [fp, #-104]	; 0xffffff98
   160e4:	tst	r3, #11
   160e8:	moveq	r3, #0
   160ec:	streq	r3, [fp, #-108]	; 0xffffff94
   160f0:	bne	1654c <argp_failure@@Base+0x6d4>
   160f4:	ldr	r3, [fp, #-104]	; 0xffffff98
   160f8:	tst	r3, #3
   160fc:	moveq	r4, #0
   16100:	bne	165d0 <argp_failure@@Base+0x758>
   16104:	ldr	r3, [fp, #-104]	; 0xffffff98
   16108:	tst	r3, #16
   1610c:	bne	167cc <argp_failure@@Base+0x954>
   16110:	ldr	r3, [fp, #-104]	; 0xffffff98
   16114:	tst	r3, #4
   16118:	bne	167f4 <argp_failure@@Base+0x97c>
   1611c:	ldr	r3, [fp, #-104]	; 0xffffff98
   16120:	tst	r3, #8
   16124:	beq	17080 <argp_failure@@Base+0x1208>
   16128:	ldr	r3, [fp, #-108]	; 0xffffff94
   1612c:	ldr	r3, [r3, #4]
   16130:	cmp	r3, #0
   16134:	beq	17080 <argp_failure@@Base+0x1208>
   16138:	cmp	r4, #0
   1613c:	beq	16164 <argp_failure@@Base+0x2ec>
   16140:	ldr	r2, [sl, #28]
   16144:	ldr	r3, [sl, #32]
   16148:	cmp	r2, r3
   1614c:	bcs	16810 <argp_failure@@Base+0x998>
   16150:	ldr	r3, [sl, #28]
   16154:	add	r2, r3, #1
   16158:	str	r2, [sl, #28]
   1615c:	mov	r2, #10
   16160:	strb	r2, [r3]
   16164:	mov	r3, #0
   16168:	str	r3, [fp, #-88]	; 0xffffffa8
   1616c:	str	r3, [fp, #-84]	; 0xffffffac
   16170:	str	r3, [fp, #-80]	; 0xffffffb0
   16174:	ldr	r3, [fp, #-108]	; 0xffffff94
   16178:	ldr	r2, [r3]
   1617c:	str	r2, [fp, #-96]	; 0xffffffa0
   16180:	ldr	r3, [r3, #4]
   16184:	str	r3, [fp, #-120]	; 0xffffff88
   16188:	cmp	r3, #0
   1618c:	bne	16bf8 <argp_failure@@Base+0xd80>
   16190:	b	1707c <argp_failure@@Base+0x1204>
   16194:	ldr	r0, [pc, #3452]	; 16f18 <argp_failure@@Base+0x10a0>
   16198:	bl	113d4 <getenv@plt>
   1619c:	mov	r9, r0
   161a0:	sub	ip, fp, #76	; 0x4c
   161a4:	ldr	lr, [pc, #3524]	; 16f70 <argp_failure@@Base+0x10f8>
   161a8:	ldm	lr!, {r0, r1, r2, r3}
   161ac:	stmia	ip!, {r0, r1, r2, r3}
   161b0:	ldm	lr!, {r0, r1, r2, r3}
   161b4:	stmia	ip!, {r0, r1, r2, r3}
   161b8:	ldm	lr, {r0, r1}
   161bc:	stm	ip, {r0, r1}
   161c0:	cmp	r9, #0
   161c4:	ldrne	sl, [pc, #3408]	; 16f1c <argp_failure@@Base+0x10a4>
   161c8:	addne	r8, sl, #168	; 0xa8
   161cc:	bne	16470 <argp_failure@@Base+0x5f8>
   161d0:	b	160c0 <argp_failure@@Base+0x248>
   161d4:	mov	r5, r3
   161d8:	mov	r9, r5
   161dc:	mov	r3, r5
   161e0:	ldrb	r0, [r3], #1
   161e4:	lsl	r2, r0, #1
   161e8:	ldrh	r2, [r1, r2]
   161ec:	tst	r2, #8192	; 0x2000
   161f0:	bne	161d4 <argp_failure@@Base+0x35c>
   161f4:	tst	r2, #1024	; 0x400
   161f8:	beq	16468 <argp_failure@@Base+0x5f0>
   161fc:	cmp	r0, #95	; 0x5f
   16200:	cmpne	r0, #45	; 0x2d
   16204:	moveq	r3, #1
   16208:	movne	r3, #0
   1620c:	lsl	r2, r2, #28
   16210:	orrs	r3, r3, r2, lsr #31
   16214:	beq	17190 <argp_failure@@Base+0x1318>
   16218:	mov	r4, r5
   1621c:	ldrb	r3, [r4, #1]!
   16220:	lsl	r2, r3, #1
   16224:	ldrh	r2, [r1, r2]
   16228:	lsl	r2, r2, #28
   1622c:	cmp	r3, #95	; 0x5f
   16230:	cmpne	r3, #45	; 0x2d
   16234:	moveq	r3, #1
   16238:	movne	r3, #0
   1623c:	orrs	r3, r3, r2, lsr #31
   16240:	bne	1621c <argp_failure@@Base+0x3a4>
   16244:	sub	r5, r4, r5
   16248:	ldrb	r3, [r4]
   1624c:	lsl	r2, r3, #1
   16250:	ldrh	r2, [r1, r2]
   16254:	tst	r2, #8192	; 0x2000
   16258:	beq	16270 <argp_failure@@Base+0x3f8>
   1625c:	ldrb	r3, [r4, #1]!
   16260:	lsl	r2, r3, #1
   16264:	ldrh	r2, [r1, r2]
   16268:	tst	r2, #8192	; 0x2000
   1626c:	bne	1625c <argp_failure@@Base+0x3e4>
   16270:	cmp	r3, #44	; 0x2c
   16274:	cmpne	r3, #0
   16278:	beq	171a8 <argp_failure@@Base+0x1330>
   1627c:	cmp	r3, #61	; 0x3d
   16280:	beq	162a8 <argp_failure@@Base+0x430>
   16284:	ldrb	r3, [r4]
   16288:	lsl	r3, r3, #1
   1628c:	ldrh	r3, [r1, r3]
   16290:	tst	r3, #2048	; 0x800
   16294:	bne	16328 <argp_failure@@Base+0x4b0>
   16298:	ldr	r3, [fp, #-108]	; 0xffffff94
   1629c:	str	r3, [fp, #-96]	; 0xffffffa0
   162a0:	str	r3, [fp, #-116]	; 0xffffff8c
   162a4:	b	171bc <argp_failure@@Base+0x1344>
   162a8:	add	r2, r4, #1
   162ac:	ldrb	r3, [r4, #1]
   162b0:	lsl	r3, r3, #1
   162b4:	ldrh	r3, [r1, r3]
   162b8:	tst	r3, #8192	; 0x2000
   162bc:	beq	171a0 <argp_failure@@Base+0x1328>
   162c0:	ldrb	r3, [r2, #1]!
   162c4:	lsl	r3, r3, #1
   162c8:	ldrh	r3, [r1, r3]
   162cc:	tst	r3, #8192	; 0x2000
   162d0:	bne	162c0 <argp_failure@@Base+0x448>
   162d4:	mov	r4, r2
   162d8:	b	16284 <argp_failure@@Base+0x40c>
   162dc:	ldrb	r3, [r9, #1]
   162e0:	cmp	r3, #111	; 0x6f
   162e4:	movne	r3, #1
   162e8:	strne	r3, [fp, #-96]	; 0xffffffa0
   162ec:	strne	r3, [fp, #-116]	; 0xffffff8c
   162f0:	bne	171bc <argp_failure@@Base+0x1344>
   162f4:	ldrb	r3, [r9, #2]
   162f8:	cmp	r3, #45	; 0x2d
   162fc:	movne	r3, #1
   16300:	strne	r3, [fp, #-96]	; 0xffffffa0
   16304:	strne	r3, [fp, #-116]	; 0xffffff8c
   16308:	bne	171bc <argp_failure@@Base+0x1344>
   1630c:	add	r9, r9, #3
   16310:	sub	r5, r5, #3
   16314:	ldr	r3, [fp, #-108]	; 0xffffff94
   16318:	str	r3, [fp, #-116]	; 0xffffff8c
   1631c:	mov	r3, #1
   16320:	str	r3, [fp, #-96]	; 0xffffffa0
   16324:	b	171bc <argp_failure@@Base+0x1344>
   16328:	mov	r2, #10
   1632c:	mov	r1, #0
   16330:	mov	r0, r4
   16334:	bl	1129c <strtol@plt>
   16338:	str	r0, [fp, #-116]	; 0xffffff8c
   1633c:	ldr	r2, [r6]
   16340:	ldrb	r3, [r4]
   16344:	lsl	r3, r3, #1
   16348:	ldrh	r3, [r2, r3]
   1634c:	tst	r3, #2048	; 0x800
   16350:	beq	16368 <argp_failure@@Base+0x4f0>
   16354:	ldrb	r3, [r4, #1]!
   16358:	lsl	r3, r3, #1
   1635c:	ldrh	r3, [r2, r3]
   16360:	tst	r3, #2048	; 0x800
   16364:	bne	16354 <argp_failure@@Base+0x4dc>
   16368:	ldrb	r3, [r4]
   1636c:	lsl	r3, r3, #1
   16370:	ldrh	r3, [r2, r3]
   16374:	tst	r3, #8192	; 0x2000
   16378:	beq	1639c <argp_failure@@Base+0x524>
   1637c:	ldrb	r3, [r4, #1]!
   16380:	lsl	r3, r3, #1
   16384:	ldrh	r3, [r2, r3]
   16388:	tst	r3, #8192	; 0x2000
   1638c:	bne	1637c <argp_failure@@Base+0x504>
   16390:	ldr	r3, [fp, #-108]	; 0xffffff94
   16394:	str	r3, [fp, #-96]	; 0xffffffa0
   16398:	b	171bc <argp_failure@@Base+0x1344>
   1639c:	ldr	r3, [fp, #-108]	; 0xffffff94
   163a0:	str	r3, [fp, #-96]	; 0xffffffa0
   163a4:	b	171bc <argp_failure@@Base+0x1344>
   163a8:	str	r9, [sp, #4]
   163ac:	str	r7, [sp]
   163b0:	ldr	r3, [pc, #2920]	; 16f20 <argp_failure@@Base+0x10a8>
   163b4:	mov	r2, #0
   163b8:	mov	r1, r2
   163bc:	ldr	r0, [fp, #-100]	; 0xffffff9c
   163c0:	bl	15e78 <argp_failure@@Base>
   163c4:	b	1642c <argp_failure@@Base+0x5b4>
   163c8:	add	r6, r6, #16
   163cc:	cmp	r6, r8
   163d0:	beq	16448 <argp_failure@@Base+0x5d0>
   163d4:	mov	r0, r6
   163d8:	bl	11458 <strlen@plt>
   163dc:	mov	r7, r0
   163e0:	cmp	r0, r5
   163e4:	bne	163c8 <argp_failure@@Base+0x550>
   163e8:	mov	r2, r5
   163ec:	mov	r1, r6
   163f0:	mov	r0, r9
   163f4:	bl	115d8 <strncmp@plt>
   163f8:	cmp	r0, #0
   163fc:	bne	163c8 <argp_failure@@Base+0x550>
   16400:	ldr	r3, [fp, #-96]	; 0xffffffa0
   16404:	cmp	r3, #0
   16408:	beq	16418 <argp_failure@@Base+0x5a0>
   1640c:	ldrb	r3, [r6, #14]
   16410:	cmp	r3, #0
   16414:	beq	163a8 <argp_failure@@Base+0x530>
   16418:	ldrb	r3, [r6, #15]
   1641c:	sub	r2, fp, #36	; 0x24
   16420:	add	r3, r2, r3
   16424:	ldr	r2, [fp, #-116]	; 0xffffff8c
   16428:	str	r2, [r3, #-40]	; 0xffffffd8
   1642c:	cmp	r6, r8
   16430:	beq	16448 <argp_failure@@Base+0x5d0>
   16434:	ldrb	r3, [r4]
   16438:	cmp	r3, #44	; 0x2c
   1643c:	addeq	r9, r4, #1
   16440:	movne	r9, r4
   16444:	b	16470 <argp_failure@@Base+0x5f8>
   16448:	str	r9, [sp, #4]
   1644c:	str	r5, [sp]
   16450:	ldr	r3, [pc, #2764]	; 16f24 <argp_failure@@Base+0x10ac>
   16454:	mov	r2, #0
   16458:	mov	r1, r2
   1645c:	ldr	r0, [fp, #-100]	; 0xffffff9c
   16460:	bl	15e78 <argp_failure@@Base>
   16464:	b	16434 <argp_failure@@Base+0x5bc>
   16468:	cmp	r0, #0
   1646c:	bne	16490 <argp_failure@@Base+0x618>
   16470:	ldrb	r3, [r9]
   16474:	cmp	r3, #0
   16478:	beq	164a8 <argp_failure@@Base+0x630>
   1647c:	bl	11434 <__ctype_b_loc@plt>
   16480:	mov	r6, r0
   16484:	ldr	r1, [r0]
   16488:	mov	r5, r9
   1648c:	b	161d8 <argp_failure@@Base+0x360>
   16490:	str	r5, [sp]
   16494:	ldr	r3, [pc, #2700]	; 16f28 <argp_failure@@Base+0x10b0>
   16498:	mov	r2, #0
   1649c:	mov	r1, r2
   164a0:	ldr	r0, [fp, #-100]	; 0xffffff9c
   164a4:	bl	15e78 <argp_failure@@Base>
   164a8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   164ac:	ldr	r3, [pc, #2680]	; 16f2c <argp_failure@@Base+0x10b4>
   164b0:	add	r1, r3, #144	; 0x90
   164b4:	add	r3, r3, #16
   164b8:	cmp	r3, r1
   164bc:	beq	16510 <argp_failure@@Base+0x698>
   164c0:	ldrb	r2, [r3, #14]
   164c4:	cmp	r2, #0
   164c8:	bne	164b4 <argp_failure@@Base+0x63c>
   164cc:	ldrb	r2, [r3, #15]
   164d0:	cmp	r2, #32
   164d4:	beq	164b4 <argp_failure@@Base+0x63c>
   164d8:	sub	ip, fp, #36	; 0x24
   164dc:	add	r2, ip, r2
   164e0:	ldr	r2, [r2, #-40]	; 0xffffffd8
   164e4:	cmp	r2, r0
   164e8:	blt	164b4 <argp_failure@@Base+0x63c>
   164ec:	str	r3, [sp, #4]
   164f0:	ldr	r3, [pc, #2616]	; 16f30 <argp_failure@@Base+0x10b8>
   164f4:	str	r3, [sp]
   164f8:	ldr	r3, [pc, #2612]	; 16f34 <argp_failure@@Base+0x10bc>
   164fc:	mov	r2, #0
   16500:	mov	r1, r2
   16504:	ldr	r0, [fp, #-100]	; 0xffffff9c
   16508:	bl	15e78 <argp_failure@@Base>
   1650c:	b	160c0 <argp_failure@@Base+0x248>
   16510:	ldr	r4, [pc, #2648]	; 16f70 <argp_failure@@Base+0x10f8>
   16514:	mov	ip, r4
   16518:	sub	lr, fp, #76	; 0x4c
   1651c:	ldm	lr!, {r0, r1, r2, r3}
   16520:	stmia	ip!, {r0, r1, r2, r3}
   16524:	ldm	lr!, {r0, r1, r2, r3}
   16528:	stmia	ip!, {r0, r1, r2, r3}
   1652c:	ldm	lr, {r0, r1}
   16530:	stm	ip, {r0, r1}
   16534:	mov	r3, #1
   16538:	str	r3, [r4, #36]	; 0x24
   1653c:	b	160c0 <argp_failure@@Base+0x248>
   16540:	ldr	r0, [fp, #-132]	; 0xffffff7c
   16544:	bl	113a4 <funlockfile@plt>
   16548:	b	1710c <argp_failure@@Base+0x1294>
   1654c:	mov	r1, #0
   16550:	ldr	r0, [fp, #-112]	; 0xffffff90
   16554:	bl	157bc <argp_parse@@Base+0x2df4>
   16558:	str	r0, [fp, #-108]	; 0xffffff94
   1655c:	ldr	r1, [pc, #2516]	; 16f38 <argp_failure@@Base+0x10c0>
   16560:	bl	146c4 <argp_parse@@Base+0x1cfc>
   16564:	cmp	r0, #0
   16568:	mvnne	r3, #0
   1656c:	strne	r3, [r0, #12]
   16570:	ldr	r1, [pc, #2500]	; 16f3c <argp_failure@@Base+0x10c4>
   16574:	ldr	r0, [fp, #-108]	; 0xffffff94
   16578:	bl	146c4 <argp_parse@@Base+0x1cfc>
   1657c:	cmp	r0, #0
   16580:	mvnne	r3, #0
   16584:	strne	r3, [r0, #12]
   16588:	ldr	r0, [fp, #-108]	; 0xffffff94
   1658c:	ldr	r3, [r0, #4]
   16590:	cmp	r3, #0
   16594:	beq	160f4 <argp_failure@@Base+0x27c>
   16598:	ldr	r2, [r0]
   1659c:	mov	r3, #0
   165a0:	str	r3, [r2, #24]
   165a4:	add	r3, r3, #1
   165a8:	add	r2, r2, #28
   165ac:	ldr	r1, [r0, #4]
   165b0:	cmp	r3, r1
   165b4:	bcc	165a0 <argp_failure@@Base+0x728>
   165b8:	ldr	r3, [pc, #2432]	; 16f40 <argp_failure@@Base+0x10c8>
   165bc:	mov	r2, #28
   165c0:	ldr	r0, [fp, #-108]	; 0xffffff94
   165c4:	ldr	r0, [r0]
   165c8:	bl	115a8 <qsort@plt>
   165cc:	b	160f4 <argp_failure@@Base+0x27c>
   165d0:	ldr	r0, [fp, #-112]	; 0xffffff90
   165d4:	bl	1475c <argp_parse@@Base+0x1d94>
   165d8:	mov	r2, r0
   165dc:	add	r3, r0, #14
   165e0:	bic	r3, r3, #7
   165e4:	sub	sp, sp, r3
   165e8:	add	r8, sp, #8
   165ec:	mov	r1, #0
   165f0:	mov	r0, r8
   165f4:	bl	114ac <memset@plt>
   165f8:	mov	r5, #1
   165fc:	ldr	r4, [pc, #2412]	; 16f70 <argp_failure@@Base+0x10f8>
   16600:	ldr	r9, [pc, #2364]	; 16f44 <argp_failure@@Base+0x10cc>
   16604:	str	r8, [fp, #-96]	; 0xffffffa0
   16608:	ldr	r8, [fp, #-104]	; 0xffffff98
   1660c:	b	166bc <argp_failure@@Base+0x844>
   16610:	mov	r0, sl
   16614:	bl	180cc <argp_error@@Base+0xdd8>
   16618:	b	166d8 <argp_failure@@Base+0x860>
   1661c:	mov	r0, sl
   16620:	bl	180cc <argp_error@@Base+0xdd8>
   16624:	b	16720 <argp_failure@@Base+0x8a8>
   16628:	mov	r1, sl
   1662c:	ldr	r0, [fp, #-108]	; 0xffffff94
   16630:	bl	144b4 <argp_parse@@Base+0x1aec>
   16634:	orr	r8, r8, #2
   16638:	str	sl, [sp]
   1663c:	mov	r3, #1
   16640:	sub	r2, fp, #76	; 0x4c
   16644:	ldr	r1, [fp, #-100]	; 0xffffff9c
   16648:	ldr	r0, [fp, #-112]	; 0xffffff90
   1664c:	bl	149dc <argp_parse@@Base+0x2014>
   16650:	mov	r6, r0
   16654:	ldr	r3, [sl, #28]
   16658:	ldr	r2, [sl, #24]
   1665c:	sub	r3, r3, r2
   16660:	ldr	r2, [sl, #16]
   16664:	cmp	r3, r2
   16668:	bhi	16790 <argp_failure@@Base+0x918>
   1666c:	str	r7, [sl, #12]
   16670:	ldr	r3, [sl, #28]
   16674:	ldr	r2, [sl, #24]
   16678:	sub	r3, r3, r2
   1667c:	ldr	r2, [sl, #16]
   16680:	cmp	r3, r2
   16684:	bhi	1679c <argp_failure@@Base+0x924>
   16688:	str	r5, [sl, #4]
   1668c:	ldr	r2, [sl, #28]
   16690:	ldr	r3, [sl, #32]
   16694:	cmp	r2, r3
   16698:	bcs	167a8 <argp_failure@@Base+0x930>
   1669c:	ldr	r3, [sl, #28]
   166a0:	add	r2, r3, #1
   166a4:	str	r2, [sl, #28]
   166a8:	mov	r2, #10
   166ac:	strb	r2, [r3]
   166b0:	mov	r5, #0
   166b4:	cmp	r6, r5
   166b8:	beq	167c0 <argp_failure@@Base+0x948>
   166bc:	ldr	r6, [r4, #28]
   166c0:	ldr	r3, [sl, #28]
   166c4:	ldr	r2, [sl, #24]
   166c8:	sub	r3, r3, r2
   166cc:	ldr	r2, [sl, #16]
   166d0:	cmp	r3, r2
   166d4:	bhi	16610 <argp_failure@@Base+0x798>
   166d8:	ldr	r7, [sl, #12]
   166dc:	str	r6, [sl, #12]
   166e0:	ldr	r3, [fp, #-96]	; 0xffffffa0
   166e4:	str	r3, [fp, #-76]	; 0xffffffb4
   166e8:	cmp	r5, #0
   166ec:	ldr	r3, [fp, #4]
   166f0:	ldrne	r2, [pc, #2128]	; 16f48 <argp_failure@@Base+0x10d0>
   166f4:	ldreq	r2, [pc, #2128]	; 16f4c <argp_failure@@Base+0x10d4>
   166f8:	mov	r1, r9
   166fc:	mov	r0, sl
   16700:	bl	18760 <argp_error@@Base+0x146c>
   16704:	ldr	r6, [r4, #28]
   16708:	ldr	r3, [sl, #28]
   1670c:	ldr	r2, [sl, #24]
   16710:	sub	r3, r3, r2
   16714:	ldr	r2, [sl, #16]
   16718:	cmp	r3, r2
   1671c:	bhi	1661c <argp_failure@@Base+0x7a4>
   16720:	ldr	r5, [sl, #4]
   16724:	str	r6, [sl, #4]
   16728:	tst	r8, #2
   1672c:	beq	16628 <argp_failure@@Base+0x7b0>
   16730:	ldr	r3, [fp, #-108]	; 0xffffff94
   16734:	ldr	r3, [r3, #4]
   16738:	cmp	r3, #0
   1673c:	beq	16638 <argp_failure@@Base+0x7c0>
   16740:	ldr	r3, [sl, #28]
   16744:	add	r3, r3, #12
   16748:	ldr	r2, [sl, #32]
   1674c:	cmp	r2, r3
   16750:	bcs	16768 <argp_failure@@Base+0x8f0>
   16754:	mov	r1, #12
   16758:	mov	r0, sl
   1675c:	bl	18670 <argp_error@@Base+0x137c>
   16760:	cmp	r0, #0
   16764:	beq	16638 <argp_failure@@Base+0x7c0>
   16768:	ldr	ip, [sl, #28]
   1676c:	ldr	r3, [pc, #2012]	; 16f50 <argp_failure@@Base+0x10d8>
   16770:	ldm	r3!, {r0, r1, r2}
   16774:	str	r0, [ip]
   16778:	str	r1, [ip, #4]
   1677c:	str	r2, [ip, #8]
   16780:	ldr	r3, [sl, #28]
   16784:	add	r3, r3, #12
   16788:	str	r3, [sl, #28]
   1678c:	b	16638 <argp_failure@@Base+0x7c0>
   16790:	mov	r0, sl
   16794:	bl	180cc <argp_error@@Base+0xdd8>
   16798:	b	1666c <argp_failure@@Base+0x7f4>
   1679c:	mov	r0, sl
   167a0:	bl	180cc <argp_error@@Base+0xdd8>
   167a4:	b	16688 <argp_failure@@Base+0x810>
   167a8:	mov	r1, #1
   167ac:	mov	r0, sl
   167b0:	bl	18670 <argp_error@@Base+0x137c>
   167b4:	cmp	r0, #0
   167b8:	beq	166b0 <argp_failure@@Base+0x838>
   167bc:	b	1669c <argp_failure@@Base+0x824>
   167c0:	str	r8, [fp, #-104]	; 0xffffff98
   167c4:	mov	r4, #1
   167c8:	b	16104 <argp_failure@@Base+0x28c>
   167cc:	str	sl, [sp, #4]
   167d0:	mov	r3, #1
   167d4:	str	r3, [sp]
   167d8:	mov	r3, #0
   167dc:	mov	r2, r3
   167e0:	ldr	r1, [fp, #-100]	; 0xffffff9c
   167e4:	ldr	r0, [fp, #-112]	; 0xffffff90
   167e8:	bl	14f34 <argp_parse@@Base+0x256c>
   167ec:	orr	r4, r4, r0
   167f0:	b	16110 <argp_failure@@Base+0x298>
   167f4:	ldr	r3, [fp, #4]
   167f8:	mov	r2, r3
   167fc:	ldr	r1, [pc, #1872]	; 16f54 <argp_failure@@Base+0x10dc>
   16800:	mov	r0, sl
   16804:	bl	18760 <argp_error@@Base+0x146c>
   16808:	mov	r4, #1
   1680c:	b	1611c <argp_failure@@Base+0x2a4>
   16810:	mov	r1, #1
   16814:	mov	r0, sl
   16818:	bl	18670 <argp_error@@Base+0x137c>
   1681c:	cmp	r0, #0
   16820:	beq	16164 <argp_failure@@Base+0x2ec>
   16824:	b	16150 <argp_failure@@Base+0x2d8>
   16828:	mov	r0, sl
   1682c:	bl	180cc <argp_error@@Base+0xdd8>
   16830:	b	16c1c <argp_failure@@Base+0xda4>
   16834:	add	r3, r3, #24
   16838:	subs	r2, r2, #1
   1683c:	beq	16860 <argp_failure@@Base+0x9e8>
   16840:	ldr	r1, [r3, #-24]	; 0xffffffe8
   16844:	cmp	r1, #0
   16848:	beq	16834 <argp_failure@@Base+0x9bc>
   1684c:	ldr	r1, [r3, #-12]
   16850:	tst	r1, #2
   16854:	bne	16834 <argp_failure@@Base+0x9bc>
   16858:	mov	r3, #1
   1685c:	str	r3, [fp, #-116]	; 0xffffff8c
   16860:	ldr	r3, [pc, #1800]	; 16f70 <argp_failure@@Base+0x10f8>
   16864:	ldr	r4, [r3, #8]
   16868:	ldr	r3, [sl, #28]
   1686c:	ldr	r2, [sl, #24]
   16870:	sub	r3, r3, r2
   16874:	ldr	r2, [sl, #16]
   16878:	cmp	r3, r2
   1687c:	bhi	1689c <argp_failure@@Base+0xa24>
   16880:	str	r4, [sl, #12]
   16884:	ldr	r3, [fp, #-96]	; 0xffffffa0
   16888:	ldr	r5, [r3, #4]
   1688c:	cmp	r5, #0
   16890:	beq	16998 <argp_failure@@Base+0xb20>
   16894:	mov	r4, r8
   16898:	b	171dc <argp_failure@@Base+0x1364>
   1689c:	mov	r0, sl
   168a0:	bl	180cc <argp_error@@Base+0xdd8>
   168a4:	b	16880 <argp_failure@@Base+0xa08>
   168a8:	tst	r6, #2
   168ac:	beq	168b8 <argp_failure@@Base+0xa40>
   168b0:	add	r9, r9, #1
   168b4:	b	171d0 <argp_failure@@Base+0x1358>
   168b8:	sub	r1, fp, #76	; 0x4c
   168bc:	ldr	r3, [pc, #1708]	; 16f70 <argp_failure@@Base+0x10f8>
   168c0:	ldr	r0, [r3, #8]
   168c4:	bl	14db0 <argp_parse@@Base+0x23e8>
   168c8:	ldr	r2, [sl, #28]
   168cc:	ldr	r3, [sl, #32]
   168d0:	cmp	r2, r3
   168d4:	bcs	16954 <argp_failure@@Base+0xadc>
   168d8:	ldr	r3, [sl, #28]
   168dc:	add	r2, r3, #1
   168e0:	str	r2, [sl, #28]
   168e4:	mov	r2, #45	; 0x2d
   168e8:	strb	r2, [r3]
   168ec:	ldrb	r6, [r9]
   168f0:	ldr	r2, [sl, #28]
   168f4:	ldr	r3, [sl, #32]
   168f8:	cmp	r2, r3
   168fc:	bcs	1696c <argp_failure@@Base+0xaf4>
   16900:	ldr	r3, [sl, #28]
   16904:	add	r2, r3, #1
   16908:	str	r2, [sl, #28]
   1690c:	strb	r6, [r3]
   16910:	ldr	r3, [fp, #-116]	; 0xffffff8c
   16914:	cmp	r3, #0
   16918:	beq	1692c <argp_failure@@Base+0xab4>
   1691c:	ldr	r3, [pc, #1612]	; 16f70 <argp_failure@@Base+0x10f8>
   16920:	ldr	r3, [r3]
   16924:	cmp	r3, #0
   16928:	beq	16984 <argp_failure@@Base+0xb0c>
   1692c:	ldr	r2, [r8, #8]
   16930:	cmp	r2, #0
   16934:	beq	168b0 <argp_failure@@Base+0xa38>
   16938:	ldr	r3, [r8, #12]
   1693c:	tst	r3, #1
   16940:	ldrne	r1, [pc, #1552]	; 16f58 <argp_failure@@Base+0x10e0>
   16944:	ldreq	r1, [pc, #1552]	; 16f5c <argp_failure@@Base+0x10e4>
   16948:	mov	r0, sl
   1694c:	bl	18760 <argp_error@@Base+0x146c>
   16950:	b	168b0 <argp_failure@@Base+0xa38>
   16954:	mov	r1, #1
   16958:	mov	r0, sl
   1695c:	bl	18670 <argp_error@@Base+0x137c>
   16960:	cmp	r0, #0
   16964:	beq	168ec <argp_failure@@Base+0xa74>
   16968:	b	168d8 <argp_failure@@Base+0xa60>
   1696c:	mov	r1, #1
   16970:	mov	r0, sl
   16974:	bl	18670 <argp_error@@Base+0x137c>
   16978:	cmp	r0, #0
   1697c:	beq	16910 <argp_failure@@Base+0xa98>
   16980:	b	16900 <argp_failure@@Base+0xa88>
   16984:	ldr	r3, [r8, #8]
   16988:	cmp	r3, #0
   1698c:	movne	r3, #1
   16990:	strne	r3, [fp, #-80]	; 0xffffffb0
   16994:	b	168b0 <argp_failure@@Base+0xa38>
   16998:	ldr	r3, [r8, #12]
   1699c:	tst	r3, #8
   169a0:	beq	16a7c <argp_failure@@Base+0xc04>
   169a4:	ldr	r3, [pc, #1476]	; 16f70 <argp_failure@@Base+0x10f8>
   169a8:	ldr	r4, [r3, #16]
   169ac:	ldr	r3, [sl, #28]
   169b0:	ldr	r2, [sl, #24]
   169b4:	sub	r3, r3, r2
   169b8:	ldr	r2, [sl, #16]
   169bc:	cmp	r3, r2
   169c0:	bhi	169e0 <argp_failure@@Base+0xb68>
   169c4:	str	r4, [sl, #12]
   169c8:	ldr	r3, [fp, #-96]	; 0xffffffa0
   169cc:	ldr	r5, [r3, #4]
   169d0:	cmp	r5, #0
   169d4:	beq	16b30 <argp_failure@@Base+0xcb8>
   169d8:	add	r4, r8, #24
   169dc:	b	16a14 <argp_failure@@Base+0xb9c>
   169e0:	mov	r0, sl
   169e4:	bl	180cc <argp_error@@Base+0xdd8>
   169e8:	b	169c4 <argp_failure@@Base+0xb4c>
   169ec:	mov	r2, r6
   169f0:	mov	r1, r7
   169f4:	ldr	r0, [sl, #28]
   169f8:	bl	11308 <memcpy@plt>
   169fc:	ldr	r3, [sl, #28]
   16a00:	add	r6, r3, r6
   16a04:	str	r6, [sl, #28]
   16a08:	add	r4, r4, #24
   16a0c:	subs	r5, r5, #1
   16a10:	beq	16b30 <argp_failure@@Base+0xcb8>
   16a14:	ldr	r3, [r4, #-24]	; 0xffffffe8
   16a18:	cmp	r3, #0
   16a1c:	beq	16a08 <argp_failure@@Base+0xb90>
   16a20:	ldr	r3, [r4, #-12]
   16a24:	tst	r3, #2
   16a28:	bne	16a08 <argp_failure@@Base+0xb90>
   16a2c:	sub	r1, fp, #76	; 0x4c
   16a30:	ldr	r3, [pc, #1336]	; 16f70 <argp_failure@@Base+0x10f8>
   16a34:	ldr	r0, [r3, #16]
   16a38:	bl	14db0 <argp_parse@@Base+0x23e8>
   16a3c:	ldr	r7, [r4, #-24]	; 0xffffffe8
   16a40:	mov	r0, r7
   16a44:	bl	11458 <strlen@plt>
   16a48:	subs	r6, r0, #0
   16a4c:	beq	16a08 <argp_failure@@Base+0xb90>
   16a50:	ldr	r3, [sl, #28]
   16a54:	add	r3, r3, r6
   16a58:	ldr	r2, [sl, #32]
   16a5c:	cmp	r2, r3
   16a60:	bcs	169ec <argp_failure@@Base+0xb74>
   16a64:	mov	r1, r6
   16a68:	mov	r0, sl
   16a6c:	bl	18670 <argp_error@@Base+0x137c>
   16a70:	cmp	r0, #0
   16a74:	beq	16a08 <argp_failure@@Base+0xb90>
   16a78:	b	169ec <argp_failure@@Base+0xb74>
   16a7c:	ldr	r3, [pc, #1260]	; 16f70 <argp_failure@@Base+0x10f8>
   16a80:	ldr	r4, [r3, #12]
   16a84:	ldr	r3, [sl, #28]
   16a88:	ldr	r2, [sl, #24]
   16a8c:	sub	r3, r3, r2
   16a90:	ldr	r2, [sl, #16]
   16a94:	cmp	r3, r2
   16a98:	bhi	16ab8 <argp_failure@@Base+0xc40>
   16a9c:	str	r4, [sl, #12]
   16aa0:	ldr	r3, [fp, #-96]	; 0xffffffa0
   16aa4:	ldr	r5, [r3, #4]
   16aa8:	cmp	r5, #0
   16aac:	beq	16b30 <argp_failure@@Base+0xcb8>
   16ab0:	add	r4, r8, #24
   16ab4:	b	16ad0 <argp_failure@@Base+0xc58>
   16ab8:	mov	r0, sl
   16abc:	bl	180cc <argp_error@@Base+0xdd8>
   16ac0:	b	16a9c <argp_failure@@Base+0xc24>
   16ac4:	add	r4, r4, #24
   16ac8:	subs	r5, r5, #1
   16acc:	beq	16b30 <argp_failure@@Base+0xcb8>
   16ad0:	ldr	r3, [r4, #-24]	; 0xffffffe8
   16ad4:	cmp	r3, #0
   16ad8:	beq	16ac4 <argp_failure@@Base+0xc4c>
   16adc:	ldr	r3, [r4, #-12]
   16ae0:	tst	r3, #2
   16ae4:	bne	16ac4 <argp_failure@@Base+0xc4c>
   16ae8:	sub	r1, fp, #76	; 0x4c
   16aec:	ldr	r3, [pc, #1148]	; 16f70 <argp_failure@@Base+0x10f8>
   16af0:	ldr	r0, [r3, #12]
   16af4:	bl	14db0 <argp_parse@@Base+0x23e8>
   16af8:	ldr	r2, [r4, #-24]	; 0xffffffe8
   16afc:	ldr	r1, [pc, #1116]	; 16f60 <argp_failure@@Base+0x10e8>
   16b00:	mov	r0, sl
   16b04:	bl	18760 <argp_error@@Base+0x146c>
   16b08:	ldr	r2, [r8, #8]
   16b0c:	cmp	r2, #0
   16b10:	beq	16ac4 <argp_failure@@Base+0xc4c>
   16b14:	ldr	r3, [r8, #12]
   16b18:	tst	r3, #1
   16b1c:	ldrne	r1, [pc, #1088]	; 16f64 <argp_failure@@Base+0x10ec>
   16b20:	ldreq	r1, [pc, #1088]	; 16f68 <argp_failure@@Base+0x10f0>
   16b24:	mov	r0, sl
   16b28:	bl	18760 <argp_error@@Base+0x146c>
   16b2c:	b	16ac4 <argp_failure@@Base+0xc4c>
   16b30:	ldr	r3, [sl, #28]
   16b34:	ldr	r2, [sl, #24]
   16b38:	sub	r3, r3, r2
   16b3c:	ldr	r2, [sl, #16]
   16b40:	cmp	r3, r2
   16b44:	bhi	16c84 <argp_failure@@Base+0xe0c>
   16b48:	mov	r3, #0
   16b4c:	str	r3, [sl, #4]
   16b50:	ldr	r3, [fp, #-64]	; 0xffffffc0
   16b54:	cmp	r3, #0
   16b58:	beq	16ca8 <argp_failure@@Base+0xe30>
   16b5c:	ldr	r3, [r8, #12]
   16b60:	tst	r3, #8
   16b64:	bne	16b90 <argp_failure@@Base+0xd18>
   16b68:	ldr	r4, [r8, #4]
   16b6c:	sub	r3, r4, #1
   16b70:	cmp	r3, #254	; 0xfe
   16b74:	bhi	16b90 <argp_failure@@Base+0xd18>
   16b78:	bl	11434 <__ctype_b_loc@plt>
   16b7c:	ldr	r3, [r0]
   16b80:	lsl	r4, r4, #1
   16b84:	ldrh	r3, [r3, r4]
   16b88:	tst	r3, #16384	; 0x4000
   16b8c:	bne	16b9c <argp_failure@@Base+0xd24>
   16b90:	ldr	r3, [r8]
   16b94:	cmp	r3, #0
   16b98:	beq	16c90 <argp_failure@@Base+0xe18>
   16b9c:	ldr	r3, [sl, #28]
   16ba0:	ldr	r2, [sl, #24]
   16ba4:	sub	r3, r3, r2
   16ba8:	ldr	r2, [sl, #16]
   16bac:	cmp	r3, r2
   16bb0:	bhi	16f00 <argp_failure@@Base+0x1088>
   16bb4:	ldr	r3, [fp, #-124]	; 0xffffff84
   16bb8:	str	r3, [sl, #4]
   16bbc:	ldr	r3, [sl, #28]
   16bc0:	ldr	r2, [sl, #24]
   16bc4:	sub	r3, r3, r2
   16bc8:	ldr	r2, [sl, #16]
   16bcc:	cmp	r3, r2
   16bd0:	bhi	16f0c <argp_failure@@Base+0x1094>
   16bd4:	ldr	r3, [fp, #-128]	; 0xffffff80
   16bd8:	str	r3, [sl, #12]
   16bdc:	ldr	r3, [fp, #-96]	; 0xffffffa0
   16be0:	add	r3, r3, #28
   16be4:	str	r3, [fp, #-96]	; 0xffffffa0
   16be8:	ldr	r3, [fp, #-120]	; 0xffffff88
   16bec:	subs	r3, r3, #1
   16bf0:	str	r3, [fp, #-120]	; 0xffffff88
   16bf4:	beq	16f84 <argp_failure@@Base+0x110c>
   16bf8:	ldr	r3, [fp, #-96]	; 0xffffffa0
   16bfc:	ldr	r8, [r3]
   16c00:	ldr	r9, [r3, #8]
   16c04:	ldr	r3, [sl, #28]
   16c08:	ldr	r2, [sl, #24]
   16c0c:	sub	r3, r3, r2
   16c10:	ldr	r2, [sl, #16]
   16c14:	cmp	r3, r2
   16c18:	bhi	16828 <argp_failure@@Base+0x9b0>
   16c1c:	ldr	r3, [sl, #4]
   16c20:	str	r3, [fp, #-124]	; 0xffffff84
   16c24:	mov	r3, #0
   16c28:	str	r3, [sl, #4]
   16c2c:	ldr	r3, [sl, #12]
   16c30:	str	r3, [fp, #-128]	; 0xffffff80
   16c34:	ldr	r2, [fp, #-96]	; 0xffffffa0
   16c38:	str	r2, [fp, #-76]	; 0xffffffb4
   16c3c:	str	sl, [fp, #-72]	; 0xffffffb8
   16c40:	sub	r3, fp, #88	; 0x58
   16c44:	str	r3, [fp, #-68]	; 0xffffffbc
   16c48:	mov	r3, #1
   16c4c:	str	r3, [fp, #-64]	; 0xffffffc0
   16c50:	ldr	r3, [fp, #-100]	; 0xffffff9c
   16c54:	str	r3, [fp, #-60]	; 0xffffffc4
   16c58:	ldr	r3, [r8, #12]
   16c5c:	ands	r3, r3, #8
   16c60:	str	r3, [fp, #-116]	; 0xffffff8c
   16c64:	movne	r3, #0
   16c68:	strne	r3, [fp, #-116]	; 0xffffff8c
   16c6c:	bne	16860 <argp_failure@@Base+0x9e8>
   16c70:	ldr	r2, [r2, #4]
   16c74:	cmp	r2, #0
   16c78:	beq	16860 <argp_failure@@Base+0x9e8>
   16c7c:	add	r3, r8, #24
   16c80:	b	16840 <argp_failure@@Base+0x9c8>
   16c84:	mov	r0, sl
   16c88:	bl	180cc <argp_error@@Base+0xdd8>
   16c8c:	b	16b48 <argp_failure@@Base+0xcd0>
   16c90:	sub	r2, fp, #76	; 0x4c
   16c94:	ldr	r3, [fp, #-96]	; 0xffffffa0
   16c98:	ldr	r1, [r3, #20]
   16c9c:	ldr	r0, [r8, #16]
   16ca0:	bl	14bcc <argp_parse@@Base+0x2204>
   16ca4:	b	16e00 <argp_failure@@Base+0xf88>
   16ca8:	ldr	r7, [r8, #16]
   16cac:	ldr	r3, [fp, #-100]	; 0xffffff9c
   16cb0:	ldr	r2, [fp, #-96]	; 0xffffffa0
   16cb4:	ldr	r2, [r2, #20]
   16cb8:	ldr	r1, [r8, #4]
   16cbc:	mov	r0, r7
   16cc0:	bl	14998 <argp_parse@@Base+0x1fd0>
   16cc4:	subs	r4, r0, #0
   16cc8:	beq	16dbc <argp_failure@@Base+0xf44>
   16ccc:	ldrb	r3, [r4]
   16cd0:	cmp	r3, #0
   16cd4:	beq	16db4 <argp_failure@@Base+0xf3c>
   16cd8:	ldr	r3, [sl, #28]
   16cdc:	ldr	r2, [sl, #24]
   16ce0:	sub	r3, r3, r2
   16ce4:	ldr	r2, [sl, #16]
   16ce8:	cmp	r3, r2
   16cec:	bhi	16e0c <argp_failure@@Base+0xf94>
   16cf0:	ldr	r5, [sl, #20]
   16cf4:	bic	r5, r5, r5, asr #31
   16cf8:	ldr	r3, [pc, #624]	; 16f70 <argp_failure@@Base+0x10f8>
   16cfc:	ldr	r6, [r3, #20]
   16d00:	str	r6, [sl, #4]
   16d04:	ldr	r3, [pc, #612]	; 16f70 <argp_failure@@Base+0x10f8>
   16d08:	ldr	r6, [r3, #20]
   16d0c:	ldr	r3, [sl, #28]
   16d10:	ldr	r2, [sl, #24]
   16d14:	sub	r3, r3, r2
   16d18:	ldr	r2, [sl, #16]
   16d1c:	cmp	r3, r2
   16d20:	bhi	16e48 <argp_failure@@Base+0xfd0>
   16d24:	str	r6, [sl, #12]
   16d28:	ldr	r3, [pc, #576]	; 16f70 <argp_failure@@Base+0x10f8>
   16d2c:	ldr	r1, [r3, #20]
   16d30:	add	r3, r1, #3
   16d34:	cmp	r3, r5
   16d38:	bcs	16e6c <argp_failure@@Base+0xff4>
   16d3c:	ldr	r2, [sl, #28]
   16d40:	ldr	r3, [sl, #32]
   16d44:	cmp	r2, r3
   16d48:	bcs	16e54 <argp_failure@@Base+0xfdc>
   16d4c:	ldr	r3, [sl, #28]
   16d50:	add	r2, r3, #1
   16d54:	str	r2, [sl, #28]
   16d58:	mov	r2, #10
   16d5c:	strb	r2, [r3]
   16d60:	mov	r0, r4
   16d64:	bl	11458 <strlen@plt>
   16d68:	subs	r5, r0, #0
   16d6c:	beq	16db4 <argp_failure@@Base+0xf3c>
   16d70:	ldr	r3, [sl, #28]
   16d74:	add	r3, r3, r5
   16d78:	ldr	r2, [sl, #32]
   16d7c:	cmp	r2, r3
   16d80:	bcs	16d98 <argp_failure@@Base+0xf20>
   16d84:	mov	r1, r5
   16d88:	mov	r0, sl
   16d8c:	bl	18670 <argp_error@@Base+0x137c>
   16d90:	cmp	r0, #0
   16d94:	beq	16db4 <argp_failure@@Base+0xf3c>
   16d98:	mov	r2, r5
   16d9c:	mov	r1, r4
   16da0:	ldr	r0, [sl, #28]
   16da4:	bl	11308 <memcpy@plt>
   16da8:	ldr	r3, [sl, #28]
   16dac:	add	r5, r3, r5
   16db0:	str	r5, [sl, #28]
   16db4:	cmp	r7, r4
   16db8:	bne	16ed0 <argp_failure@@Base+0x1058>
   16dbc:	ldr	r3, [sl, #28]
   16dc0:	ldr	r2, [sl, #24]
   16dc4:	sub	r3, r3, r2
   16dc8:	ldr	r2, [sl, #16]
   16dcc:	cmp	r3, r2
   16dd0:	bhi	16edc <argp_failure@@Base+0x1064>
   16dd4:	mov	r3, #0
   16dd8:	str	r3, [sl, #4]
   16ddc:	ldr	r2, [sl, #28]
   16de0:	ldr	r3, [sl, #32]
   16de4:	cmp	r2, r3
   16de8:	bcs	16ee8 <argp_failure@@Base+0x1070>
   16dec:	ldr	r3, [sl, #28]
   16df0:	add	r2, r3, #1
   16df4:	str	r2, [sl, #28]
   16df8:	mov	r2, #10
   16dfc:	strb	r2, [r3]
   16e00:	ldr	r3, [fp, #-96]	; 0xffffffa0
   16e04:	str	r3, [fp, #-88]	; 0xffffffa8
   16e08:	b	16b9c <argp_failure@@Base+0xd24>
   16e0c:	mov	r0, sl
   16e10:	bl	180cc <argp_error@@Base+0xdd8>
   16e14:	ldr	r5, [sl, #20]
   16e18:	bic	r5, r5, r5, asr #31
   16e1c:	ldr	r3, [pc, #332]	; 16f70 <argp_failure@@Base+0x10f8>
   16e20:	ldr	r6, [r3, #20]
   16e24:	ldr	r3, [sl, #28]
   16e28:	ldr	r2, [sl, #24]
   16e2c:	sub	r3, r3, r2
   16e30:	ldr	r2, [sl, #16]
   16e34:	cmp	r3, r2
   16e38:	bls	16d00 <argp_failure@@Base+0xe88>
   16e3c:	mov	r0, sl
   16e40:	bl	180cc <argp_error@@Base+0xdd8>
   16e44:	b	16d00 <argp_failure@@Base+0xe88>
   16e48:	mov	r0, sl
   16e4c:	bl	180cc <argp_error@@Base+0xdd8>
   16e50:	b	16d24 <argp_failure@@Base+0xeac>
   16e54:	mov	r1, #1
   16e58:	mov	r0, sl
   16e5c:	bl	18670 <argp_error@@Base+0x137c>
   16e60:	cmp	r0, #0
   16e64:	beq	16d60 <argp_failure@@Base+0xee8>
   16e68:	b	16d4c <argp_failure@@Base+0xed4>
   16e6c:	cmp	r1, r5
   16e70:	bhi	16ec4 <argp_failure@@Base+0x104c>
   16e74:	ldr	r3, [sl, #28]
   16e78:	add	r3, r3, #3
   16e7c:	ldr	r2, [sl, #32]
   16e80:	cmp	r2, r3
   16e84:	bcs	16e9c <argp_failure@@Base+0x1024>
   16e88:	mov	r1, #3
   16e8c:	mov	r0, sl
   16e90:	bl	18670 <argp_error@@Base+0x137c>
   16e94:	cmp	r0, #0
   16e98:	beq	16d60 <argp_failure@@Base+0xee8>
   16e9c:	ldr	r3, [sl, #28]
   16ea0:	ldr	r2, [pc, #196]	; 16f6c <argp_failure@@Base+0x10f4>
   16ea4:	ldrh	r1, [r2]
   16ea8:	ldrb	r2, [r2, #2]
   16eac:	strh	r1, [r3]
   16eb0:	strb	r2, [r3, #2]
   16eb4:	ldr	r3, [sl, #28]
   16eb8:	add	r3, r3, #3
   16ebc:	str	r3, [sl, #28]
   16ec0:	b	16d60 <argp_failure@@Base+0xee8>
   16ec4:	mov	r0, sl
   16ec8:	bl	147b4 <argp_parse@@Base+0x1dec>
   16ecc:	b	16d60 <argp_failure@@Base+0xee8>
   16ed0:	mov	r0, r4
   16ed4:	bl	135bc <argp_parse@@Base+0xbf4>
   16ed8:	b	16dbc <argp_failure@@Base+0xf44>
   16edc:	mov	r0, sl
   16ee0:	bl	180cc <argp_error@@Base+0xdd8>
   16ee4:	b	16dd4 <argp_failure@@Base+0xf5c>
   16ee8:	mov	r1, #1
   16eec:	mov	r0, sl
   16ef0:	bl	18670 <argp_error@@Base+0x137c>
   16ef4:	cmp	r0, #0
   16ef8:	beq	16e00 <argp_failure@@Base+0xf88>
   16efc:	b	16dec <argp_failure@@Base+0xf74>
   16f00:	mov	r0, sl
   16f04:	bl	180cc <argp_error@@Base+0xdd8>
   16f08:	b	16bb4 <argp_failure@@Base+0xd3c>
   16f0c:	mov	r0, sl
   16f10:	bl	180cc <argp_error@@Base+0xdd8>
   16f14:	b	16bd4 <argp_failure@@Base+0xd5c>
   16f18:	andeq	r9, r1, r0, lsl #15
   16f1c:	andeq	r9, r1, r8, lsr #11
   16f20:	muleq	r1, r0, r7
   16f24:	andeq	r9, r1, r0, asr #15
   16f28:	andeq	r9, r1, r8, ror #15
   16f2c:	andeq	r9, r1, r0, asr #11
   16f30:	andeq	r9, r1, ip, lsr r8
   16f34:	andeq	r9, r1, r8, lsl #16
   16f38:	andeq	r9, r1, r4, asr #2
   16f3c:	andeq	r9, r1, r4, lsr #2
   16f40:	andeq	r5, r1, ip, asr #9
   16f44:	andeq	r9, r1, ip, asr #16
   16f48:	andeq	r9, r1, r4, asr #16
   16f4c:	andeq	r9, r1, r4, asr r8
   16f50:	andeq	r9, r1, ip, asr r8
   16f54:	andeq	r9, r1, ip, ror #16
   16f58:	andeq	r9, r1, r4, lsr #17
   16f5c:	strdeq	r9, [r1], -r4
   16f60:	andeq	r9, r1, ip, lsr #17
   16f64:			; <UNDEFINED> instruction: 0x000198b4
   16f68:			; <UNDEFINED> instruction: 0x000198bc
   16f6c:	andeq	r9, r1, r0, asr #17
   16f70:	andeq	sl, r2, r0, asr #9
   16f74:	andeq	r0, r0, #5
   16f78:	andeq	r9, r1, r4, asr #17
   16f7c:	andeq	sl, r2, r8, asr r5
   16f80:	andeq	r9, r1, r8, lsr r9
   16f84:	ldr	r3, [fp, #-80]	; 0xffffffb0
   16f88:	cmp	r3, #0
   16f8c:	beq	1707c <argp_failure@@Base+0x1204>
   16f90:	ldr	r3, [pc, #-40]	; 16f70 <argp_failure@@Base+0x10f8>
   16f94:	ldr	r3, [r3, #4]
   16f98:	cmp	r3, #0
   16f9c:	beq	1707c <argp_failure@@Base+0x1204>
   16fa0:	ldr	r3, [fp, #-100]	; 0xffffff9c
   16fa4:	cmp	r3, #0
   16fa8:	ldrne	r2, [r3]
   16fac:	moveq	r2, #0
   16fb0:	ldr	r3, [fp, #-100]	; 0xffffff9c
   16fb4:	ldr	r1, [pc, #-72]	; 16f74 <argp_failure@@Base+0x10fc>
   16fb8:	ldr	r0, [pc, #-72]	; 16f78 <argp_failure@@Base+0x1100>
   16fbc:	bl	14998 <argp_parse@@Base+0x1fd0>
   16fc0:	subs	r4, r0, #0
   16fc4:	beq	1707c <argp_failure@@Base+0x1204>
   16fc8:	ldrb	r3, [r4]
   16fcc:	cmp	r3, #0
   16fd0:	beq	17070 <argp_failure@@Base+0x11f8>
   16fd4:	ldr	r2, [sl, #28]
   16fd8:	ldr	r3, [sl, #32]
   16fdc:	cmp	r2, r3
   16fe0:	bcs	17114 <argp_failure@@Base+0x129c>
   16fe4:	ldr	r3, [sl, #28]
   16fe8:	add	r2, r3, #1
   16fec:	str	r2, [sl, #28]
   16ff0:	mov	r2, #10
   16ff4:	strb	r2, [r3]
   16ff8:	mov	r0, r4
   16ffc:	bl	11458 <strlen@plt>
   17000:	subs	r5, r0, #0
   17004:	beq	1704c <argp_failure@@Base+0x11d4>
   17008:	ldr	r3, [sl, #28]
   1700c:	add	r3, r3, r5
   17010:	ldr	r2, [sl, #32]
   17014:	cmp	r2, r3
   17018:	bcs	17030 <argp_failure@@Base+0x11b8>
   1701c:	mov	r1, r5
   17020:	mov	r0, sl
   17024:	bl	18670 <argp_error@@Base+0x137c>
   17028:	cmp	r0, #0
   1702c:	beq	1704c <argp_failure@@Base+0x11d4>
   17030:	mov	r2, r5
   17034:	mov	r1, r4
   17038:	ldr	r0, [sl, #28]
   1703c:	bl	11308 <memcpy@plt>
   17040:	ldr	r3, [sl, #28]
   17044:	add	r5, r3, r5
   17048:	str	r5, [sl, #28]
   1704c:	ldr	r2, [sl, #28]
   17050:	ldr	r3, [sl, #32]
   17054:	cmp	r2, r3
   17058:	bcs	1712c <argp_failure@@Base+0x12b4>
   1705c:	ldr	r3, [sl, #28]
   17060:	add	r2, r3, #1
   17064:	str	r2, [sl, #28]
   17068:	mov	r2, #10
   1706c:	strb	r2, [r3]
   17070:	ldr	r3, [pc, #-256]	; 16f78 <argp_failure@@Base+0x1100>
   17074:	cmp	r4, r3
   17078:	bne	17144 <argp_failure@@Base+0x12cc>
   1707c:	mov	r4, #1
   17080:	ldr	r3, [fp, #-104]	; 0xffffff98
   17084:	tst	r3, #32
   17088:	bne	17150 <argp_failure@@Base+0x12d8>
   1708c:	ldr	r3, [fp, #-104]	; 0xffffff98
   17090:	tst	r3, #64	; 0x40
   17094:	beq	170e8 <argp_failure@@Base+0x1270>
   17098:	ldr	r3, [pc, #-292]	; 16f7c <argp_failure@@Base+0x1104>
   1709c:	ldr	r3, [r3]
   170a0:	cmp	r3, #0
   170a4:	beq	170e8 <argp_failure@@Base+0x1270>
   170a8:	cmp	r4, #0
   170ac:	beq	170d4 <argp_failure@@Base+0x125c>
   170b0:	ldr	r2, [sl, #28]
   170b4:	ldr	r3, [sl, #32]
   170b8:	cmp	r2, r3
   170bc:	bcs	17178 <argp_failure@@Base+0x1300>
   170c0:	ldr	r3, [sl, #28]
   170c4:	add	r2, r3, #1
   170c8:	str	r2, [sl, #28]
   170cc:	mov	r2, #10
   170d0:	strb	r2, [r3]
   170d4:	ldr	r3, [pc, #-352]	; 16f7c <argp_failure@@Base+0x1104>
   170d8:	ldr	r2, [r3]
   170dc:	ldr	r1, [pc, #-356]	; 16f80 <argp_failure@@Base+0x1108>
   170e0:	mov	r0, sl
   170e4:	bl	18760 <argp_error@@Base+0x146c>
   170e8:	ldr	r0, [fp, #-132]	; 0xffffff7c
   170ec:	bl	113a4 <funlockfile@plt>
   170f0:	ldr	r3, [fp, #-108]	; 0xffffff94
   170f4:	cmp	r3, #0
   170f8:	beq	17104 <argp_failure@@Base+0x128c>
   170fc:	mov	r0, r3
   17100:	bl	14670 <argp_parse@@Base+0x1ca8>
   17104:	mov	r0, sl
   17108:	bl	18630 <argp_error@@Base+0x133c>
   1710c:	sub	sp, fp, #32
   17110:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17114:	mov	r1, #1
   17118:	mov	r0, sl
   1711c:	bl	18670 <argp_error@@Base+0x137c>
   17120:	cmp	r0, #0
   17124:	beq	16ff8 <argp_failure@@Base+0x1180>
   17128:	b	16fe4 <argp_failure@@Base+0x116c>
   1712c:	mov	r1, #1
   17130:	mov	r0, sl
   17134:	bl	18670 <argp_error@@Base+0x137c>
   17138:	cmp	r0, #0
   1713c:	beq	17070 <argp_failure@@Base+0x11f8>
   17140:	b	1705c <argp_failure@@Base+0x11e4>
   17144:	mov	r0, r4
   17148:	bl	135bc <argp_parse@@Base+0xbf4>
   1714c:	b	1707c <argp_failure@@Base+0x1204>
   17150:	str	sl, [sp, #4]
   17154:	mov	r3, #0
   17158:	str	r3, [sp]
   1715c:	mov	r3, r4
   17160:	mov	r2, #1
   17164:	ldr	r1, [fp, #-100]	; 0xffffff9c
   17168:	ldr	r0, [fp, #-112]	; 0xffffff90
   1716c:	bl	14f34 <argp_parse@@Base+0x256c>
   17170:	orr	r4, r4, r0
   17174:	b	1708c <argp_failure@@Base+0x1214>
   17178:	mov	r1, #1
   1717c:	mov	r0, sl
   17180:	bl	18670 <argp_error@@Base+0x137c>
   17184:	cmp	r0, #0
   17188:	beq	170d4 <argp_failure@@Base+0x125c>
   1718c:	b	170c0 <argp_failure@@Base+0x1248>
   17190:	ldrb	r3, [r5]
   17194:	mov	r4, r5
   17198:	mov	r5, #0
   1719c:	b	16270 <argp_failure@@Base+0x3f8>
   171a0:	mov	r4, r2
   171a4:	b	16284 <argp_failure@@Base+0x40c>
   171a8:	cmp	r0, #110	; 0x6e
   171ac:	beq	162dc <argp_failure@@Base+0x464>
   171b0:	mov	r3, #1
   171b4:	str	r3, [fp, #-96]	; 0xffffffa0
   171b8:	str	r3, [fp, #-116]	; 0xffffff8c
   171bc:	add	r6, sl, #24
   171c0:	b	163d4 <argp_failure@@Base+0x55c>
   171c4:	ldrb	r3, [r9]
   171c8:	cmp	r7, r3
   171cc:	beq	168a8 <argp_failure@@Base+0xa30>
   171d0:	add	r4, r4, #24
   171d4:	subs	r5, r5, #1
   171d8:	beq	16998 <argp_failure@@Base+0xb20>
   171dc:	ldr	r6, [r4, #12]
   171e0:	tst	r6, #8
   171e4:	bne	171d0 <argp_failure@@Base+0x1358>
   171e8:	ldr	r7, [r4, #4]
   171ec:	sub	r3, r7, #1
   171f0:	cmp	r3, #254	; 0xfe
   171f4:	bhi	171d0 <argp_failure@@Base+0x1358>
   171f8:	bl	11434 <__ctype_b_loc@plt>
   171fc:	ldr	r2, [r0]
   17200:	lsl	r3, r7, #1
   17204:	ldrh	r3, [r2, r3]
   17208:	tst	r3, #16384	; 0x4000
   1720c:	bne	171c4 <argp_failure@@Base+0x134c>
   17210:	b	171d0 <argp_failure@@Base+0x1358>

00017214 <argp_help@@Base>:
   17214:	push	{lr}		; (str lr, [sp, #-4]!)
   17218:	sub	sp, sp, #12
   1721c:	str	r3, [sp]
   17220:	mov	r3, r2
   17224:	mov	r2, r1
   17228:	mov	r1, #0
   1722c:	bl	16080 <argp_failure@@Base+0x208>
   17230:	add	sp, sp, #12
   17234:	pop	{pc}		; (ldr pc, [sp], #4)

00017238 <argp_state_help@@Base>:
   17238:	push	{r4, r5, lr}
   1723c:	sub	sp, sp, #12
   17240:	mov	r5, r2
   17244:	subs	r4, r0, #0
   17248:	beq	172ac <argp_state_help@@Base+0x74>
   1724c:	ldr	r3, [r4, #16]
   17250:	tst	r3, #2
   17254:	bne	172a4 <argp_state_help@@Base+0x6c>
   17258:	cmp	r1, #0
   1725c:	beq	172a4 <argp_state_help@@Base+0x6c>
   17260:	ldr	r3, [r4, #16]
   17264:	tst	r3, #64	; 0x40
   17268:	orrne	r5, r5, #128	; 0x80
   1726c:	ldr	r0, [r4]
   17270:	ldr	r3, [r4, #40]	; 0x28
   17274:	str	r3, [sp]
   17278:	mov	r3, r5
   1727c:	mov	r2, r1
   17280:	mov	r1, r4
   17284:	bl	16080 <argp_failure@@Base+0x208>
   17288:	ldr	r3, [r4, #16]
   1728c:	tst	r3, #32
   17290:	bne	172a4 <argp_state_help@@Base+0x6c>
   17294:	tst	r5, #256	; 0x100
   17298:	bne	172d8 <argp_state_help@@Base+0xa0>
   1729c:	tst	r5, #512	; 0x200
   172a0:	bne	172e4 <argp_state_help@@Base+0xac>
   172a4:	add	sp, sp, #12
   172a8:	pop	{r4, r5, pc}
   172ac:	cmp	r1, #0
   172b0:	beq	172a4 <argp_state_help@@Base+0x6c>
   172b4:	ldr	r3, [pc, #48]	; 172ec <argp_state_help@@Base+0xb4>
   172b8:	ldr	r3, [r3]
   172bc:	str	r3, [sp]
   172c0:	mov	r3, r2
   172c4:	mov	r2, r1
   172c8:	mov	r1, #0
   172cc:	mov	r0, r1
   172d0:	bl	16080 <argp_failure@@Base+0x208>
   172d4:	b	17294 <argp_state_help@@Base+0x5c>
   172d8:	ldr	r3, [pc, #16]	; 172f0 <argp_state_help@@Base+0xb8>
   172dc:	ldr	r0, [r3]
   172e0:	bl	1144c <exit@plt>
   172e4:	mov	r0, #0
   172e8:	bl	1144c <exit@plt>
   172ec:	andeq	sl, r2, r0, lsl #10
   172f0:	strdeq	sl, [r2], -r8

000172f4 <argp_error@@Base>:
   172f4:	push	{r1, r2, r3}
   172f8:	push	{r4, r5, lr}
   172fc:	sub	sp, sp, #8
   17300:	subs	r5, r0, #0
   17304:	beq	173d4 <argp_error@@Base+0xe0>
   17308:	ldr	r3, [r5, #16]
   1730c:	tst	r3, #2
   17310:	bne	173c4 <argp_error@@Base+0xd0>
   17314:	ldr	r4, [r5, #44]	; 0x2c
   17318:	cmp	r4, #0
   1731c:	beq	173c4 <argp_error@@Base+0xd0>
   17320:	mov	r0, r4
   17324:	bl	11590 <flockfile@plt>
   17328:	add	r3, sp, #24
   1732c:	str	r3, [sp, #4]
   17330:	ldr	r0, [r5, #40]	; 0x28
   17334:	mov	r1, r4
   17338:	bl	11278 <fputs_unlocked@plt>
   1733c:	ldr	r3, [r4, #20]
   17340:	ldr	r2, [r4, #24]
   17344:	cmp	r3, r2
   17348:	addcc	r2, r3, #1
   1734c:	strcc	r2, [r4, #20]
   17350:	movcc	r2, #58	; 0x3a
   17354:	strbcc	r2, [r3]
   17358:	bcs	17400 <argp_error@@Base+0x10c>
   1735c:	ldr	r3, [r4, #20]
   17360:	ldr	r2, [r4, #24]
   17364:	cmp	r3, r2
   17368:	addcc	r2, r3, #1
   1736c:	strcc	r2, [r4, #20]
   17370:	movcc	r2, #32
   17374:	strbcc	r2, [r3]
   17378:	bcs	17410 <argp_error@@Base+0x11c>
   1737c:	ldr	r2, [sp, #4]
   17380:	ldr	r1, [sp, #20]
   17384:	mov	r0, r4
   17388:	bl	1153c <vfprintf@plt>
   1738c:	ldr	r3, [r4, #20]
   17390:	ldr	r2, [r4, #24]
   17394:	cmp	r3, r2
   17398:	addcc	r2, r3, #1
   1739c:	strcc	r2, [r4, #20]
   173a0:	movcc	r2, #10
   173a4:	strbcc	r2, [r3]
   173a8:	bcs	17420 <argp_error@@Base+0x12c>
   173ac:	mov	r2, #260	; 0x104
   173b0:	mov	r1, r4
   173b4:	mov	r0, r5
   173b8:	bl	17238 <argp_state_help@@Base>
   173bc:	mov	r0, r4
   173c0:	bl	113a4 <funlockfile@plt>
   173c4:	add	sp, sp, #8
   173c8:	pop	{r4, r5, lr}
   173cc:	add	sp, sp, #12
   173d0:	bx	lr
   173d4:	ldr	r3, [pc, #84]	; 17430 <argp_error@@Base+0x13c>
   173d8:	ldr	r4, [r3]
   173dc:	cmp	r4, #0
   173e0:	beq	173c4 <argp_error@@Base+0xd0>
   173e4:	mov	r0, r4
   173e8:	bl	11590 <flockfile@plt>
   173ec:	add	r3, sp, #24
   173f0:	str	r3, [sp, #4]
   173f4:	ldr	r3, [pc, #56]	; 17434 <argp_error@@Base+0x140>
   173f8:	ldr	r0, [r3]
   173fc:	b	17334 <argp_error@@Base+0x40>
   17400:	mov	r1, #58	; 0x3a
   17404:	mov	r0, r4
   17408:	bl	114f4 <__overflow@plt>
   1740c:	b	1735c <argp_error@@Base+0x68>
   17410:	mov	r1, #32
   17414:	mov	r0, r4
   17418:	bl	114f4 <__overflow@plt>
   1741c:	b	1737c <argp_error@@Base+0x88>
   17420:	mov	r1, #10
   17424:	mov	r0, r4
   17428:	bl	114f4 <__overflow@plt>
   1742c:	b	173ac <argp_error@@Base+0xb8>
   17430:	andeq	sl, r2, r0, lsl r5
   17434:	andeq	sl, r2, r0, lsl #10
   17438:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1743c:	ldr	r4, [r1, #28]
   17440:	ldr	r5, [r1, #32]
   17444:	ldr	r6, [r1]
   17448:	add	r7, r0, r5, lsl #2
   1744c:	b	17484 <argp_error@@Base+0x190>
   17450:	cmp	sl, #0
   17454:	ble	17480 <argp_error@@Base+0x18c>
   17458:	add	r2, r0, r4, lsl #2
   1745c:	sub	r3, r6, sl
   17460:	add	r3, r0, r3, lsl #2
   17464:	add	r8, r0, r6, lsl #2
   17468:	ldr	ip, [r2]
   1746c:	ldr	lr, [r3]
   17470:	str	lr, [r2], #4
   17474:	str	ip, [r3], #4
   17478:	cmp	r3, r8
   1747c:	bne	17468 <argp_error@@Base+0x174>
   17480:	sub	r6, r6, sl
   17484:	cmp	r6, r5
   17488:	movle	r3, #0
   1748c:	movgt	r3, #1
   17490:	cmp	r4, r5
   17494:	movge	r3, #0
   17498:	cmp	r3, #0
   1749c:	beq	174e8 <argp_error@@Base+0x1f4>
   174a0:	sub	r9, r6, r5
   174a4:	sub	sl, r5, r4
   174a8:	cmp	r9, sl
   174ac:	bgt	17450 <argp_error@@Base+0x15c>
   174b0:	cmp	r9, #0
   174b4:	addgt	r3, r0, r4, lsl #2
   174b8:	addgt	r8, r9, r4
   174bc:	addgt	r8, r0, r8, lsl #2
   174c0:	movgt	r2, r7
   174c4:	ble	174e0 <argp_error@@Base+0x1ec>
   174c8:	ldr	ip, [r3]
   174cc:	ldr	lr, [r2]
   174d0:	str	lr, [r3], #4
   174d4:	str	ip, [r2], #4
   174d8:	cmp	r3, r8
   174dc:	bne	174c8 <argp_error@@Base+0x1d4>
   174e0:	add	r4, r4, r9
   174e4:	b	17484 <argp_error@@Base+0x190>
   174e8:	ldr	r0, [r1]
   174ec:	ldr	r3, [r1, #32]
   174f0:	sub	r2, r0, r3
   174f4:	ldr	r3, [r1, #28]
   174f8:	add	r3, r3, r2
   174fc:	str	r3, [r1, #28]
   17500:	str	r0, [r1, #32]
   17504:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   17508:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1750c:	sub	sp, sp, #44	; 0x2c
   17510:	str	r0, [sp, #20]
   17514:	str	r1, [sp, #12]
   17518:	str	r2, [sp, #24]
   1751c:	str	r3, [sp, #8]
   17520:	ldr	fp, [sp, #88]	; 0x58
   17524:	ldr	sl, [fp, #20]
   17528:	ldrb	r3, [sl]
   1752c:	cmp	r3, #0
   17530:	cmpne	r3, #61	; 0x3d
   17534:	beq	17570 <argp_error@@Base+0x27c>
   17538:	mov	r8, sl
   1753c:	ldrb	r3, [r8, #1]!
   17540:	cmp	r3, #0
   17544:	cmpne	r3, #61	; 0x3d
   17548:	bne	1753c <argp_error@@Base+0x248>
   1754c:	sub	r7, r8, sl
   17550:	ldr	r5, [sp, #8]
   17554:	ldr	r3, [r5]
   17558:	str	r3, [sp, #16]
   1755c:	cmp	r3, #0
   17560:	beq	17864 <argp_error@@Base+0x570>
   17564:	mov	r4, r3
   17568:	mov	r6, #0
   1756c:	b	17588 <argp_error@@Base+0x294>
   17570:	mov	r8, sl
   17574:	b	1754c <argp_error@@Base+0x258>
   17578:	add	r6, r6, #1
   1757c:	ldr	r4, [r5, #16]!
   17580:	cmp	r4, #0
   17584:	beq	175c0 <argp_error@@Base+0x2cc>
   17588:	mov	r9, r5
   1758c:	mov	r2, r7
   17590:	mov	r1, sl
   17594:	mov	r0, r4
   17598:	bl	115d8 <strncmp@plt>
   1759c:	cmp	r0, #0
   175a0:	bne	17578 <argp_error@@Base+0x284>
   175a4:	mov	r0, r4
   175a8:	bl	11458 <strlen@plt>
   175ac:	cmp	r7, r0
   175b0:	bne	17578 <argp_error@@Base+0x284>
   175b4:	cmp	r5, #0
   175b8:	strne	r6, [sp, #28]
   175bc:	bne	17814 <argp_error@@Base+0x520>
   175c0:	ldr	r4, [sp, #8]
   175c4:	mvn	r3, #0
   175c8:	str	r3, [sp, #28]
   175cc:	mov	sl, #0
   175d0:	str	sl, [sp, #36]	; 0x24
   175d4:	mov	r5, sl
   175d8:	mov	r9, sl
   175dc:	str	r8, [sp, #32]
   175e0:	mov	r8, sl
   175e4:	ldr	r0, [sp, #16]
   175e8:	b	17638 <argp_error@@Base+0x344>
   175ec:	ldr	r2, [r9, #8]
   175f0:	ldr	r3, [r4, #8]
   175f4:	cmp	r2, r3
   175f8:	bne	17670 <argp_error@@Base+0x37c>
   175fc:	ldr	r2, [r9, #12]
   17600:	ldr	r3, [r4, #12]
   17604:	cmp	r2, r3
   17608:	bne	17670 <argp_error@@Base+0x37c>
   1760c:	b	17628 <argp_error@@Base+0x334>
   17610:	cmp	r8, #0
   17614:	moveq	sl, #1
   17618:	beq	17628 <argp_error@@Base+0x334>
   1761c:	mov	sl, #1
   17620:	mov	r3, #1
   17624:	strb	r3, [r8, r5]
   17628:	add	r5, r5, #1
   1762c:	ldr	r0, [r4, #16]!
   17630:	cmp	r0, #0
   17634:	beq	176d8 <argp_error@@Base+0x3e4>
   17638:	mov	r2, r7
   1763c:	ldr	r1, [fp, #20]
   17640:	bl	115d8 <strncmp@plt>
   17644:	cmp	r0, #0
   17648:	bne	17628 <argp_error@@Base+0x334>
   1764c:	cmp	r9, #0
   17650:	beq	176c4 <argp_error@@Base+0x3d0>
   17654:	ldr	r3, [sp, #84]	; 0x54
   17658:	cmp	r3, #0
   1765c:	bne	17670 <argp_error@@Base+0x37c>
   17660:	ldr	r2, [r9, #4]
   17664:	ldr	r3, [r4, #4]
   17668:	cmp	r2, r3
   1766c:	beq	175ec <argp_error@@Base+0x2f8>
   17670:	cmp	sl, #0
   17674:	bne	17628 <argp_error@@Base+0x334>
   17678:	ldr	r3, [sp, #92]	; 0x5c
   1767c:	cmp	r3, #0
   17680:	beq	17610 <argp_error@@Base+0x31c>
   17684:	cmp	r8, #0
   17688:	bne	17620 <argp_error@@Base+0x32c>
   1768c:	mov	r0, r6
   17690:	bl	141f4 <argp_parse@@Base+0x182c>
   17694:	subs	r8, r0, #0
   17698:	beq	176d0 <argp_error@@Base+0x3dc>
   1769c:	mov	r2, r6
   176a0:	mov	r1, #0
   176a4:	mov	r0, r8
   176a8:	bl	114ac <memset@plt>
   176ac:	ldr	r3, [sp, #28]
   176b0:	mov	r2, #1
   176b4:	strb	r2, [r8, r3]
   176b8:	mov	r3, #1
   176bc:	str	r3, [sp, #36]	; 0x24
   176c0:	b	17620 <argp_error@@Base+0x32c>
   176c4:	str	r5, [sp, #28]
   176c8:	mov	r9, r4
   176cc:	b	17628 <argp_error@@Base+0x334>
   176d0:	mov	sl, #1
   176d4:	b	17628 <argp_error@@Base+0x334>
   176d8:	mov	r3, r8
   176dc:	str	r8, [sp, #16]
   176e0:	ldr	r8, [sp, #32]
   176e4:	cmp	sl, #0
   176e8:	cmpeq	r3, #0
   176ec:	beq	1780c <argp_error@@Base+0x518>
   176f0:	ldr	r3, [sp, #92]	; 0x5c
   176f4:	cmp	r3, #0
   176f8:	beq	17728 <argp_error@@Base+0x434>
   176fc:	cmp	sl, #0
   17700:	beq	17764 <argp_error@@Base+0x470>
   17704:	ldr	r3, [sp, #12]
   17708:	ldr	r2, [r3]
   1770c:	ldr	r3, [pc, #708]	; 179d8 <argp_error@@Base+0x6e4>
   17710:	ldr	r0, [r3]
   17714:	ldr	r3, [fp, #20]
   17718:	str	r3, [sp]
   1771c:	ldr	r3, [sp, #96]	; 0x60
   17720:	ldr	r1, [pc, #692]	; 179dc <argp_error@@Base+0x6e8>
   17724:	bl	1147c <fprintf@plt>
   17728:	ldr	r3, [sp, #36]	; 0x24
   1772c:	cmp	r3, #0
   17730:	bne	17800 <argp_error@@Base+0x50c>
   17734:	ldr	r4, [fp, #20]
   17738:	mov	r0, r4
   1773c:	bl	11458 <strlen@plt>
   17740:	add	r0, r4, r0
   17744:	str	r0, [fp, #20]
   17748:	ldr	r3, [fp]
   1774c:	add	r3, r3, #1
   17750:	str	r3, [fp]
   17754:	mov	r3, #0
   17758:	str	r3, [fp, #8]
   1775c:	mov	r0, #63	; 0x3f
   17760:	b	17958 <argp_error@@Base+0x664>
   17764:	ldr	r4, [pc, #620]	; 179d8 <argp_error@@Base+0x6e4>
   17768:	ldr	r0, [r4]
   1776c:	bl	11590 <flockfile@plt>
   17770:	ldr	r3, [sp, #12]
   17774:	ldr	r2, [r3]
   17778:	ldr	r0, [r4]
   1777c:	ldr	r3, [fp, #20]
   17780:	str	r3, [sp]
   17784:	ldr	r3, [sp, #96]	; 0x60
   17788:	ldr	r1, [pc, #592]	; 179e0 <argp_error@@Base+0x6ec>
   1778c:	bl	1147c <fprintf@plt>
   17790:	cmp	r6, #0
   17794:	ble	177e4 <argp_error@@Base+0x4f0>
   17798:	ldr	r3, [sp, #16]
   1779c:	mov	r4, r3
   177a0:	add	r6, r3, r6
   177a4:	ldr	r7, [pc, #568]	; 179e4 <argp_error@@Base+0x6f0>
   177a8:	ldr	r5, [pc, #552]	; 179d8 <argp_error@@Base+0x6e4>
   177ac:	ldr	r8, [sp, #8]
   177b0:	b	177c0 <argp_error@@Base+0x4cc>
   177b4:	add	sl, sl, #1
   177b8:	cmp	r4, r6
   177bc:	beq	177e4 <argp_error@@Base+0x4f0>
   177c0:	ldrb	r3, [r4], #1
   177c4:	cmp	r3, #0
   177c8:	beq	177b4 <argp_error@@Base+0x4c0>
   177cc:	ldr	r3, [r8, sl, lsl #4]
   177d0:	ldr	r2, [sp, #96]	; 0x60
   177d4:	mov	r1, r7
   177d8:	ldr	r0, [r5]
   177dc:	bl	1147c <fprintf@plt>
   177e0:	b	177b4 <argp_error@@Base+0x4c0>
   177e4:	ldr	r4, [pc, #492]	; 179d8 <argp_error@@Base+0x6e4>
   177e8:	ldr	r1, [r4]
   177ec:	mov	r0, #10
   177f0:	bl	11554 <fputc@plt>
   177f4:	ldr	r0, [r4]
   177f8:	bl	113a4 <funlockfile@plt>
   177fc:	b	17728 <argp_error@@Base+0x434>
   17800:	ldr	r0, [sp, #16]
   17804:	bl	135bc <argp_parse@@Base+0xbf4>
   17808:	b	17734 <argp_error@@Base+0x440>
   1780c:	cmp	r9, #0
   17810:	beq	17864 <argp_error@@Base+0x570>
   17814:	ldr	r2, [fp]
   17818:	add	r3, r2, #1
   1781c:	str	r3, [fp]
   17820:	mov	r1, #0
   17824:	str	r1, [fp, #20]
   17828:	ldrb	r1, [r8]
   1782c:	cmp	r1, #0
   17830:	beq	17924 <argp_error@@Base+0x630>
   17834:	ldr	r3, [r9, #4]
   17838:	cmp	r3, #0
   1783c:	addne	r8, r8, #1
   17840:	strne	r8, [fp, #12]
   17844:	bne	17930 <argp_error@@Base+0x63c>
   17848:	ldr	r3, [sp, #92]	; 0x5c
   1784c:	cmp	r3, #0
   17850:	bne	178fc <argp_error@@Base+0x608>
   17854:	ldr	r3, [r9, #12]
   17858:	str	r3, [fp, #8]
   1785c:	mov	r0, #63	; 0x3f
   17860:	b	17958 <argp_error@@Base+0x664>
   17864:	ldr	r3, [sp, #84]	; 0x54
   17868:	cmp	r3, #0
   1786c:	bne	1789c <argp_error@@Base+0x5a8>
   17870:	ldr	r3, [sp, #92]	; 0x5c
   17874:	cmp	r3, #0
   17878:	bne	178d4 <argp_error@@Base+0x5e0>
   1787c:	mov	r2, #0
   17880:	str	r2, [fp, #20]
   17884:	ldr	r3, [fp]
   17888:	add	r3, r3, #1
   1788c:	str	r3, [fp]
   17890:	str	r2, [fp, #8]
   17894:	mov	r0, #63	; 0x3f
   17898:	b	17958 <argp_error@@Base+0x664>
   1789c:	ldr	r3, [fp]
   178a0:	ldr	r2, [sp, #12]
   178a4:	ldr	r3, [r2, r3, lsl #2]
   178a8:	ldrb	r3, [r3, #1]
   178ac:	cmp	r3, #45	; 0x2d
   178b0:	beq	17870 <argp_error@@Base+0x57c>
   178b4:	ldr	r3, [fp, #20]
   178b8:	ldrb	r1, [r3]
   178bc:	ldr	r0, [sp, #24]
   178c0:	bl	11464 <strchr@plt>
   178c4:	cmp	r0, #0
   178c8:	beq	17870 <argp_error@@Base+0x57c>
   178cc:	mvn	r0, #0
   178d0:	b	17958 <argp_error@@Base+0x664>
   178d4:	ldr	r3, [sp, #12]
   178d8:	ldr	r2, [r3]
   178dc:	ldr	r3, [pc, #244]	; 179d8 <argp_error@@Base+0x6e4>
   178e0:	ldr	r0, [r3]
   178e4:	ldr	r3, [fp, #20]
   178e8:	str	r3, [sp]
   178ec:	ldr	r3, [sp, #96]	; 0x60
   178f0:	ldr	r1, [pc, #240]	; 179e8 <argp_error@@Base+0x6f4>
   178f4:	bl	1147c <fprintf@plt>
   178f8:	b	1787c <argp_error@@Base+0x588>
   178fc:	ldr	r3, [sp, #12]
   17900:	ldr	r2, [r3]
   17904:	ldr	r3, [pc, #204]	; 179d8 <argp_error@@Base+0x6e4>
   17908:	ldr	r0, [r3]
   1790c:	ldr	r3, [r9]
   17910:	str	r3, [sp]
   17914:	ldr	r3, [sp, #96]	; 0x60
   17918:	ldr	r1, [pc, #204]	; 179ec <argp_error@@Base+0x6f8>
   1791c:	bl	1147c <fprintf@plt>
   17920:	b	17854 <argp_error@@Base+0x560>
   17924:	ldr	r1, [r9, #4]
   17928:	cmp	r1, #1
   1792c:	beq	17960 <argp_error@@Base+0x66c>
   17930:	ldr	r3, [sp, #80]	; 0x50
   17934:	cmp	r3, #0
   17938:	ldrne	r2, [sp, #28]
   1793c:	strne	r2, [r3]
   17940:	ldr	r3, [r9, #8]
   17944:	cmp	r3, #0
   17948:	ldrne	r2, [r9, #12]
   1794c:	strne	r2, [r3]
   17950:	movne	r0, #0
   17954:	ldreq	r0, [r9, #12]
   17958:	add	sp, sp, #44	; 0x2c
   1795c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17960:	ldr	r1, [sp, #20]
   17964:	cmp	r3, r1
   17968:	bge	17984 <argp_error@@Base+0x690>
   1796c:	add	r2, r2, #2
   17970:	str	r2, [fp]
   17974:	ldr	r2, [sp, #12]
   17978:	ldr	r3, [r2, r3, lsl #2]
   1797c:	str	r3, [fp, #12]
   17980:	b	17930 <argp_error@@Base+0x63c>
   17984:	ldr	r3, [sp, #92]	; 0x5c
   17988:	cmp	r3, #0
   1798c:	bne	179b0 <argp_error@@Base+0x6bc>
   17990:	ldr	r3, [r9, #12]
   17994:	str	r3, [fp, #8]
   17998:	ldr	r3, [sp, #24]
   1799c:	ldrb	r0, [r3]
   179a0:	cmp	r0, #58	; 0x3a
   179a4:	moveq	r0, #58	; 0x3a
   179a8:	movne	r0, #63	; 0x3f
   179ac:	b	17958 <argp_error@@Base+0x664>
   179b0:	ldr	r3, [sp, #12]
   179b4:	ldr	r2, [r3]
   179b8:	ldr	r3, [pc, #24]	; 179d8 <argp_error@@Base+0x6e4>
   179bc:	ldr	r0, [r3]
   179c0:	ldr	r3, [r9]
   179c4:	str	r3, [sp]
   179c8:	ldr	r3, [sp, #96]	; 0x60
   179cc:	ldr	r1, [pc, #28]	; 179f0 <argp_error@@Base+0x6fc>
   179d0:	bl	1147c <fprintf@plt>
   179d4:	b	17990 <argp_error@@Base+0x69c>
   179d8:	andeq	sl, r2, r0, lsl r5
   179dc:	andeq	r9, r1, ip, asr #18
   179e0:	andeq	r9, r1, ip, ror #18
   179e4:	muleq	r1, ip, r9
   179e8:	andeq	r9, r1, r4, lsr #19
   179ec:	andeq	r9, r1, r4, asr #19
   179f0:	strdeq	r9, [r1], -r4
   179f4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   179f8:	sub	sp, sp, #36	; 0x24
   179fc:	str	r3, [sp, #24]
   17a00:	ldr	r4, [sp, #80]	; 0x50
   17a04:	ldr	r8, [r4, #4]
   17a08:	subs	r5, r0, #0
   17a0c:	ble	17f14 <argp_error@@Base+0xc20>
   17a10:	mov	r9, r1
   17a14:	mov	r6, r2
   17a18:	mov	r3, #0
   17a1c:	str	r3, [r4, #12]
   17a20:	ldr	r3, [r4]
   17a24:	cmp	r3, #0
   17a28:	beq	17a4c <argp_error@@Base+0x758>
   17a2c:	ldr	r3, [r4, #16]
   17a30:	cmp	r3, #0
   17a34:	beq	17a54 <argp_error@@Base+0x760>
   17a38:	ldrb	r3, [r2]
   17a3c:	sub	r3, r3, #43	; 0x2b
   17a40:	tst	r3, #253	; 0xfd
   17a44:	addeq	r6, r2, #1
   17a48:	b	17ab0 <argp_error@@Base+0x7bc>
   17a4c:	mov	r3, #1
   17a50:	str	r3, [r4]
   17a54:	ldr	r3, [r4]
   17a58:	str	r3, [r4, #32]
   17a5c:	str	r3, [r4, #28]
   17a60:	mov	r3, #0
   17a64:	str	r3, [r4, #20]
   17a68:	ldrb	r3, [r6]
   17a6c:	cmp	r3, #45	; 0x2d
   17a70:	moveq	r3, #2
   17a74:	streq	r3, [r4, #24]
   17a78:	addeq	r6, r6, #1
   17a7c:	beq	17aa8 <argp_error@@Base+0x7b4>
   17a80:	cmp	r3, #43	; 0x2b
   17a84:	moveq	r3, #0
   17a88:	streq	r3, [r4, #24]
   17a8c:	addeq	r6, r6, #1
   17a90:	beq	17aa8 <argp_error@@Base+0x7b4>
   17a94:	ldr	r3, [sp, #84]	; 0x54
   17a98:	cmp	r3, #0
   17a9c:	beq	17b4c <argp_error@@Base+0x858>
   17aa0:	mov	r3, #0
   17aa4:	str	r3, [r4, #24]
   17aa8:	mov	r3, #1
   17aac:	str	r3, [r4, #16]
   17ab0:	ldrb	r3, [r6]
   17ab4:	cmp	r3, #58	; 0x3a
   17ab8:	moveq	r8, #0
   17abc:	ldr	r3, [r4, #20]
   17ac0:	cmp	r3, #0
   17ac4:	beq	17ad4 <argp_error@@Base+0x7e0>
   17ac8:	ldrb	r3, [r3]
   17acc:	cmp	r3, #0
   17ad0:	bne	17c60 <argp_error@@Base+0x96c>
   17ad4:	ldr	r3, [r4]
   17ad8:	ldr	r2, [r4, #32]
   17adc:	cmp	r2, r3
   17ae0:	strgt	r3, [r4, #32]
   17ae4:	ldr	r2, [r4, #28]
   17ae8:	cmp	r3, r2
   17aec:	strlt	r3, [r4, #28]
   17af0:	ldr	r2, [r4, #24]
   17af4:	cmp	r2, #1
   17af8:	beq	17b68 <argp_error@@Base+0x874>
   17afc:	ldr	r7, [r4]
   17b00:	cmp	r5, r7
   17b04:	beq	17bec <argp_error@@Base+0x8f8>
   17b08:	ldr	sl, [r9, r7, lsl #2]
   17b0c:	ldr	r1, [pc, #1088]	; 17f54 <argp_error@@Base+0xc60>
   17b10:	mov	r0, sl
   17b14:	bl	11290 <strcmp@plt>
   17b18:	cmp	r0, #0
   17b1c:	bne	17f24 <argp_error@@Base+0xc30>
   17b20:	add	r7, r7, #1
   17b24:	str	r7, [r4]
   17b28:	ldr	r2, [r4, #28]
   17b2c:	ldr	r3, [r4, #32]
   17b30:	cmp	r7, r3
   17b34:	cmpne	r2, r3
   17b38:	beq	17bdc <argp_error@@Base+0x8e8>
   17b3c:	mov	r1, r4
   17b40:	mov	r0, r9
   17b44:	bl	17438 <argp_error@@Base+0x144>
   17b48:	b	17be4 <argp_error@@Base+0x8f0>
   17b4c:	ldr	r0, [pc, #1028]	; 17f58 <argp_error@@Base+0xc64>
   17b50:	bl	113d4 <getenv@plt>
   17b54:	cmp	r0, #0
   17b58:	bne	17aa0 <argp_error@@Base+0x7ac>
   17b5c:	mov	r3, #1
   17b60:	str	r3, [r4, #24]
   17b64:	b	17aa8 <argp_error@@Base+0x7b4>
   17b68:	ldr	r2, [r4, #32]
   17b6c:	ldr	r1, [r4, #28]
   17b70:	cmp	r1, r2
   17b74:	cmpne	r3, r2
   17b78:	beq	17b8c <argp_error@@Base+0x898>
   17b7c:	mov	r1, r4
   17b80:	mov	r0, r9
   17b84:	bl	17438 <argp_error@@Base+0x144>
   17b88:	b	17b94 <argp_error@@Base+0x8a0>
   17b8c:	cmp	r3, r2
   17b90:	strne	r3, [r4, #28]
   17b94:	ldr	r3, [r4]
   17b98:	cmp	r5, r3
   17b9c:	ble	17bd4 <argp_error@@Base+0x8e0>
   17ba0:	add	r1, r9, r3, lsl #2
   17ba4:	b	17bb8 <argp_error@@Base+0x8c4>
   17ba8:	add	r3, r3, #1
   17bac:	str	r3, [r4]
   17bb0:	cmp	r5, r3
   17bb4:	beq	17bd4 <argp_error@@Base+0x8e0>
   17bb8:	ldr	r2, [r1], #4
   17bbc:	ldrb	r0, [r2]
   17bc0:	cmp	r0, #45	; 0x2d
   17bc4:	bne	17ba8 <argp_error@@Base+0x8b4>
   17bc8:	ldrb	r2, [r2, #1]
   17bcc:	cmp	r2, #0
   17bd0:	beq	17ba8 <argp_error@@Base+0x8b4>
   17bd4:	str	r3, [r4, #32]
   17bd8:	b	17afc <argp_error@@Base+0x808>
   17bdc:	cmp	r2, r3
   17be0:	streq	r7, [r4, #28]
   17be4:	str	r5, [r4, #32]
   17be8:	str	r5, [r4]
   17bec:	ldr	r3, [r4, #28]
   17bf0:	ldr	r2, [r4, #32]
   17bf4:	cmp	r3, r2
   17bf8:	mvneq	r0, #0
   17bfc:	strne	r3, [r4]
   17c00:	mvnne	r0, #0
   17c04:	b	17d64 <argp_error@@Base+0xa70>
   17c08:	ldrb	r1, [sl, #1]
   17c0c:	cmp	r1, #0
   17c10:	beq	17f30 <argp_error@@Base+0xc3c>
   17c14:	ldr	r3, [sp, #24]
   17c18:	cmp	r3, #0
   17c1c:	beq	17c50 <argp_error@@Base+0x95c>
   17c20:	cmp	r1, #45	; 0x2d
   17c24:	beq	17cc8 <argp_error@@Base+0x9d4>
   17c28:	ldr	r3, [sp, #76]	; 0x4c
   17c2c:	cmp	r3, #0
   17c30:	beq	17c50 <argp_error@@Base+0x95c>
   17c34:	ldrb	r3, [sl, #2]
   17c38:	cmp	r3, #0
   17c3c:	bne	17d08 <argp_error@@Base+0xa14>
   17c40:	mov	r0, r6
   17c44:	bl	11464 <strchr@plt>
   17c48:	cmp	r0, #0
   17c4c:	beq	17d08 <argp_error@@Base+0xa14>
   17c50:	ldr	r3, [r4]
   17c54:	ldr	r3, [r9, r3, lsl #2]
   17c58:	add	r3, r3, #1
   17c5c:	str	r3, [r4, #20]
   17c60:	ldr	sl, [r4, #20]
   17c64:	add	fp, sl, #1
   17c68:	str	fp, [r4, #20]
   17c6c:	ldrb	r7, [sl]
   17c70:	str	r7, [sp, #28]
   17c74:	mov	r1, r7
   17c78:	mov	r0, r6
   17c7c:	bl	11464 <strchr@plt>
   17c80:	ldrb	r3, [sl, #1]
   17c84:	cmp	r3, #0
   17c88:	ldreq	r3, [r4]
   17c8c:	addeq	r3, r3, #1
   17c90:	streq	r3, [r4]
   17c94:	sub	r3, r7, #58	; 0x3a
   17c98:	uxtb	r3, r3
   17c9c:	cmp	r0, #0
   17ca0:	cmpne	r3, #1
   17ca4:	bls	17d50 <argp_error@@Base+0xa5c>
   17ca8:	ldrb	r3, [r0]
   17cac:	cmp	r3, #87	; 0x57
   17cb0:	beq	17d88 <argp_error@@Base+0xa94>
   17cb4:	ldrb	r3, [r0, #1]
   17cb8:	cmp	r3, #58	; 0x3a
   17cbc:	beq	17e54 <argp_error@@Base+0xb60>
   17cc0:	mov	r0, r7
   17cc4:	b	17d64 <argp_error@@Base+0xa70>
   17cc8:	add	sl, sl, #2
   17ccc:	str	sl, [r4, #20]
   17cd0:	ldr	r3, [pc, #636]	; 17f54 <argp_error@@Base+0xc60>
   17cd4:	str	r3, [sp, #16]
   17cd8:	str	r8, [sp, #12]
   17cdc:	str	r4, [sp, #8]
   17ce0:	ldr	r3, [sp, #76]	; 0x4c
   17ce4:	str	r3, [sp, #4]
   17ce8:	ldr	r3, [sp, #72]	; 0x48
   17cec:	str	r3, [sp]
   17cf0:	ldr	r3, [sp, #24]
   17cf4:	mov	r2, r6
   17cf8:	mov	r1, r9
   17cfc:	mov	r0, r5
   17d00:	bl	17508 <argp_error@@Base+0x214>
   17d04:	b	17d64 <argp_error@@Base+0xa70>
   17d08:	add	sl, sl, #1
   17d0c:	str	sl, [r4, #20]
   17d10:	ldr	r3, [pc, #580]	; 17f5c <argp_error@@Base+0xc68>
   17d14:	str	r3, [sp, #16]
   17d18:	str	r8, [sp, #12]
   17d1c:	str	r4, [sp, #8]
   17d20:	ldr	r3, [sp, #76]	; 0x4c
   17d24:	str	r3, [sp, #4]
   17d28:	ldr	r3, [sp, #72]	; 0x48
   17d2c:	str	r3, [sp]
   17d30:	ldr	r3, [sp, #24]
   17d34:	mov	r2, r6
   17d38:	mov	r1, r9
   17d3c:	mov	r0, r5
   17d40:	bl	17508 <argp_error@@Base+0x214>
   17d44:	cmn	r0, #1
   17d48:	bne	17d64 <argp_error@@Base+0xa70>
   17d4c:	b	17c50 <argp_error@@Base+0x95c>
   17d50:	cmp	r8, #0
   17d54:	bne	17d6c <argp_error@@Base+0xa78>
   17d58:	ldr	r3, [sp, #28]
   17d5c:	str	r3, [r4, #8]
   17d60:	mov	r0, #63	; 0x3f
   17d64:	add	sp, sp, #36	; 0x24
   17d68:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17d6c:	ldr	r3, [sp, #28]
   17d70:	ldr	r2, [r9]
   17d74:	ldr	r1, [pc, #484]	; 17f60 <argp_error@@Base+0xc6c>
   17d78:	ldr	r0, [pc, #484]	; 17f64 <argp_error@@Base+0xc70>
   17d7c:	ldr	r0, [r0]
   17d80:	bl	1147c <fprintf@plt>
   17d84:	b	17d58 <argp_error@@Base+0xa64>
   17d88:	ldrb	r3, [r0, #1]
   17d8c:	ldr	r2, [sp, #24]
   17d90:	cmp	r3, #59	; 0x3b
   17d94:	movne	r3, #0
   17d98:	moveq	r3, #1
   17d9c:	cmp	r2, #0
   17da0:	moveq	r3, #0
   17da4:	cmp	r3, #0
   17da8:	beq	17cb4 <argp_error@@Base+0x9c0>
   17dac:	ldrb	r3, [sl, #1]
   17db0:	cmp	r3, #0
   17db4:	strne	fp, [r4, #12]
   17db8:	bne	17dd0 <argp_error@@Base+0xadc>
   17dbc:	ldr	r3, [r4]
   17dc0:	cmp	r5, r3
   17dc4:	beq	17e14 <argp_error@@Base+0xb20>
   17dc8:	ldr	r3, [r9, r3, lsl #2]
   17dcc:	str	r3, [r4, #12]
   17dd0:	ldr	r3, [r4, #12]
   17dd4:	str	r3, [r4, #20]
   17dd8:	mov	r3, #0
   17ddc:	str	r3, [r4, #12]
   17de0:	ldr	r2, [pc, #384]	; 17f68 <argp_error@@Base+0xc74>
   17de4:	str	r2, [sp, #16]
   17de8:	str	r8, [sp, #12]
   17dec:	str	r4, [sp, #8]
   17df0:	str	r3, [sp, #4]
   17df4:	ldr	r3, [sp, #72]	; 0x48
   17df8:	str	r3, [sp]
   17dfc:	ldr	r3, [sp, #24]
   17e00:	mov	r2, r6
   17e04:	mov	r1, r9
   17e08:	mov	r0, r5
   17e0c:	bl	17508 <argp_error@@Base+0x214>
   17e10:	b	17d64 <argp_error@@Base+0xa70>
   17e14:	cmp	r8, #0
   17e18:	bne	17e38 <argp_error@@Base+0xb44>
   17e1c:	ldr	r3, [sp, #28]
   17e20:	str	r3, [r4, #8]
   17e24:	ldrb	r0, [r6]
   17e28:	cmp	r0, #58	; 0x3a
   17e2c:	moveq	r0, #58	; 0x3a
   17e30:	movne	r0, #63	; 0x3f
   17e34:	b	17d64 <argp_error@@Base+0xa70>
   17e38:	ldr	r3, [sp, #28]
   17e3c:	ldr	r2, [r9]
   17e40:	ldr	r1, [pc, #292]	; 17f6c <argp_error@@Base+0xc78>
   17e44:	ldr	r0, [pc, #280]	; 17f64 <argp_error@@Base+0xc70>
   17e48:	ldr	r0, [r0]
   17e4c:	bl	1147c <fprintf@plt>
   17e50:	b	17e1c <argp_error@@Base+0xb28>
   17e54:	ldrb	r3, [r0, #2]
   17e58:	cmp	r3, #58	; 0x3a
   17e5c:	beq	17e88 <argp_error@@Base+0xb94>
   17e60:	ldrb	r3, [sl, #1]
   17e64:	cmp	r3, #0
   17e68:	beq	17eb4 <argp_error@@Base+0xbc0>
   17e6c:	str	fp, [r4, #12]
   17e70:	ldr	r3, [r4]
   17e74:	add	r3, r3, #1
   17e78:	str	r3, [r4]
   17e7c:	mov	r3, #0
   17e80:	str	r3, [r4, #20]
   17e84:	b	17cc0 <argp_error@@Base+0x9cc>
   17e88:	ldrb	r3, [sl, #1]
   17e8c:	cmp	r3, #0
   17e90:	strne	fp, [r4, #12]
   17e94:	ldrne	r3, [r4]
   17e98:	addne	r3, r3, #1
   17e9c:	strne	r3, [r4]
   17ea0:	moveq	r3, #0
   17ea4:	streq	r3, [r4, #12]
   17ea8:	mov	r3, #0
   17eac:	str	r3, [r4, #20]
   17eb0:	b	17cc0 <argp_error@@Base+0x9cc>
   17eb4:	ldr	r3, [r4]
   17eb8:	cmp	r5, r3
   17ebc:	beq	17ed4 <argp_error@@Base+0xbe0>
   17ec0:	add	r2, r3, #1
   17ec4:	str	r2, [r4]
   17ec8:	ldr	r3, [r9, r3, lsl #2]
   17ecc:	str	r3, [r4, #12]
   17ed0:	b	17e7c <argp_error@@Base+0xb88>
   17ed4:	cmp	r8, #0
   17ed8:	bne	17ef8 <argp_error@@Base+0xc04>
   17edc:	ldr	r3, [sp, #28]
   17ee0:	str	r3, [r4, #8]
   17ee4:	ldrb	r7, [r6]
   17ee8:	cmp	r7, #58	; 0x3a
   17eec:	moveq	r7, #58	; 0x3a
   17ef0:	movne	r7, #63	; 0x3f
   17ef4:	b	17e7c <argp_error@@Base+0xb88>
   17ef8:	ldr	r3, [sp, #28]
   17efc:	ldr	r2, [r9]
   17f00:	ldr	r1, [pc, #100]	; 17f6c <argp_error@@Base+0xc78>
   17f04:	ldr	r0, [pc, #88]	; 17f64 <argp_error@@Base+0xc70>
   17f08:	ldr	r0, [r0]
   17f0c:	bl	1147c <fprintf@plt>
   17f10:	b	17edc <argp_error@@Base+0xbe8>
   17f14:	mvn	r0, #0
   17f18:	b	17d64 <argp_error@@Base+0xa70>
   17f1c:	mvn	r0, #0
   17f20:	b	17d64 <argp_error@@Base+0xa70>
   17f24:	ldrb	r3, [sl]
   17f28:	cmp	r3, #45	; 0x2d
   17f2c:	beq	17c08 <argp_error@@Base+0x914>
   17f30:	ldr	r3, [r4, #24]
   17f34:	cmp	r3, #0
   17f38:	beq	17f1c <argp_error@@Base+0xc28>
   17f3c:	add	r3, r7, #1
   17f40:	str	r3, [r4]
   17f44:	ldr	r3, [r9, r7, lsl #2]
   17f48:	str	r3, [r4, #12]
   17f4c:	mov	r0, #1
   17f50:	b	17d64 <argp_error@@Base+0xa70>
   17f54:	andeq	r9, r1, ip, ror #1
   17f58:	andeq	r9, r1, ip, lsl sl
   17f5c:	andeq	r9, r1, ip, lsr #20
   17f60:	andeq	r9, r1, r0, lsr sl
   17f64:	andeq	sl, r2, r0, lsl r5
   17f68:	andeq	r9, r1, r8, ror sl
   17f6c:	andeq	r9, r1, ip, asr #20
   17f70:	push	{r4, r5, lr}
   17f74:	sub	sp, sp, #20
   17f78:	ldr	r4, [pc, #84]	; 17fd4 <argp_error@@Base+0xce0>
   17f7c:	ldr	r5, [pc, #84]	; 17fd8 <argp_error@@Base+0xce4>
   17f80:	ldr	ip, [r5]
   17f84:	str	ip, [r4]
   17f88:	ldr	ip, [r5, #4]
   17f8c:	str	ip, [r4, #4]
   17f90:	ldr	ip, [sp, #40]	; 0x28
   17f94:	str	ip, [sp, #12]
   17f98:	str	r4, [sp, #8]
   17f9c:	ldr	ip, [sp, #36]	; 0x24
   17fa0:	str	ip, [sp, #4]
   17fa4:	ldr	ip, [sp, #32]
   17fa8:	str	ip, [sp]
   17fac:	bl	179f4 <argp_error@@Base+0x700>
   17fb0:	ldr	r3, [r4]
   17fb4:	str	r3, [r5]
   17fb8:	ldr	r2, [r4, #12]
   17fbc:	ldr	r3, [pc, #24]	; 17fdc <argp_error@@Base+0xce8>
   17fc0:	str	r2, [r3]
   17fc4:	ldr	r3, [r4, #8]
   17fc8:	str	r3, [r5, #8]
   17fcc:	add	sp, sp, #20
   17fd0:	pop	{r4, r5, pc}
   17fd4:	andeq	sl, r2, r4, lsr r5
   17fd8:	andeq	sl, r2, ip, ror #9
   17fdc:	andeq	sl, r2, r0, ror #10
   17fe0:	push	{lr}		; (str lr, [sp, #-4]!)
   17fe4:	sub	sp, sp, #20
   17fe8:	mov	r3, #1
   17fec:	str	r3, [sp, #8]
   17ff0:	mov	r3, #0
   17ff4:	str	r3, [sp, #4]
   17ff8:	str	r3, [sp]
   17ffc:	bl	17f70 <argp_error@@Base+0xc7c>
   18000:	add	sp, sp, #20
   18004:	pop	{pc}		; (ldr pc, [sp], #4)
   18008:	push	{r4, r5, r6, lr}
   1800c:	mov	r6, r0
   18010:	mov	r5, r1
   18014:	subs	r4, r2, #0
   18018:	beq	18044 <argp_error@@Base+0xd50>
   1801c:	mov	r1, r4
   18020:	mvn	r0, #0
   18024:	bl	187e0 <argp_error@@Base+0x14ec>
   18028:	cmp	r0, r5
   1802c:	bcs	18044 <argp_error@@Base+0xd50>
   18030:	bl	11494 <__errno_location@plt>
   18034:	mov	r3, #12
   18038:	str	r3, [r0]
   1803c:	mov	r0, #0
   18040:	pop	{r4, r5, r6, pc}
   18044:	mul	r1, r5, r4
   18048:	mov	r0, r6
   1804c:	bl	14224 <argp_parse@@Base+0x185c>
   18050:	pop	{r4, r5, r6, pc}
   18054:	push	{r4, r5, r6, r7, r8, lr}
   18058:	mov	r8, r0
   1805c:	mov	r7, r1
   18060:	mov	r6, r2
   18064:	mov	r5, r3
   18068:	mov	r0, #36	; 0x24
   1806c:	bl	141f4 <argp_parse@@Base+0x182c>
   18070:	subs	r4, r0, #0
   18074:	beq	180b4 <argp_error@@Base+0xdc0>
   18078:	str	r8, [r4]
   1807c:	str	r7, [r4, #4]
   18080:	str	r6, [r4, #8]
   18084:	str	r5, [r4, #12]
   18088:	mov	r3, #0
   1808c:	str	r3, [r4, #20]
   18090:	str	r3, [r4, #16]
   18094:	mov	r0, #200	; 0xc8
   18098:	bl	141f4 <argp_parse@@Base+0x182c>
   1809c:	str	r0, [r4, #24]
   180a0:	cmp	r0, #0
   180a4:	strne	r0, [r4, #28]
   180a8:	addne	r0, r0, #200	; 0xc8
   180ac:	strne	r0, [r4, #32]
   180b0:	beq	180bc <argp_error@@Base+0xdc8>
   180b4:	mov	r0, r4
   180b8:	pop	{r4, r5, r6, r7, r8, pc}
   180bc:	mov	r0, r4
   180c0:	bl	135bc <argp_parse@@Base+0xbf4>
   180c4:	mov	r4, #0
   180c8:	b	180b4 <argp_error@@Base+0xdc0>
   180cc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   180d0:	sub	sp, sp, #20
   180d4:	mov	r4, r0
   180d8:	ldr	r2, [r0, #24]
   180dc:	ldr	r3, [r0, #16]
   180e0:	add	r9, r2, r3
   180e4:	mov	sl, #32
   180e8:	b	18194 <argp_error@@Base+0xea0>
   180ec:	add	r5, r5, #1
   180f0:	cmp	r6, r5
   180f4:	beq	18124 <argp_error@@Base+0xe30>
   180f8:	ldr	r0, [r4]
   180fc:	ldr	r3, [r0, #20]
   18100:	ldr	r2, [r0, #24]
   18104:	cmp	r3, r2
   18108:	addcc	r2, r3, #1
   1810c:	strcc	r2, [r0, #20]
   18110:	strbcc	sl, [r3]
   18114:	bcc	180ec <argp_error@@Base+0xdf8>
   18118:	mov	r1, sl
   1811c:	bl	114f4 <__overflow@plt>
   18120:	b	180ec <argp_error@@Base+0xdf8>
   18124:	str	r6, [r4, #20]
   18128:	ldr	fp, [r4, #28]
   1812c:	str	fp, [sp, #8]
   18130:	str	r9, [sp, #4]
   18134:	sub	r3, fp, r9
   18138:	str	r3, [sp]
   1813c:	mov	r2, r3
   18140:	mov	r1, #10
   18144:	mov	r0, r9
   18148:	bl	114d0 <memchr@plt>
   1814c:	mov	r7, r0
   18150:	ldr	r3, [r4, #20]
   18154:	cmp	r3, #0
   18158:	movlt	r3, #0
   1815c:	strlt	r3, [r4, #20]
   18160:	cmp	r7, #0
   18164:	beq	18204 <argp_error@@Base+0xf10>
   18168:	ldr	r0, [r4, #20]
   1816c:	mov	r5, r7
   18170:	ldr	r8, [r4, #8]
   18174:	ldr	r3, [sp, #4]
   18178:	sub	r3, r7, r3
   1817c:	add	r3, r3, r0
   18180:	cmp	r3, r8
   18184:	bge	18254 <argp_error@@Base+0xf60>
   18188:	mov	r3, #0
   1818c:	str	r3, [r4, #20]
   18190:	add	r9, r7, #1
   18194:	ldr	fp, [r4, #28]
   18198:	cmp	r9, fp
   1819c:	bcs	1823c <argp_error@@Base+0xf48>
   181a0:	ldr	r3, [r4, #20]
   181a4:	cmp	r3, #0
   181a8:	bne	18128 <argp_error@@Base+0xe34>
   181ac:	ldr	r6, [r4, #4]
   181b0:	cmp	r6, #0
   181b4:	beq	18600 <argp_error@@Base+0x130c>
   181b8:	add	r3, fp, r6
   181bc:	ldr	r2, [r4, #32]
   181c0:	cmp	r2, r3
   181c4:	movls	r5, #0
   181c8:	bls	180f8 <argp_error@@Base+0xe04>
   181cc:	add	r5, r9, r6
   181d0:	sub	r2, fp, r9
   181d4:	mov	r1, r9
   181d8:	mov	r0, r5
   181dc:	bl	112d8 <memmove@plt>
   181e0:	ldr	r3, [r4, #28]
   181e4:	add	r3, r3, r6
   181e8:	str	r3, [r4, #28]
   181ec:	mov	r2, r6
   181f0:	mov	r1, sl
   181f4:	mov	r0, r9
   181f8:	bl	114ac <memset@plt>
   181fc:	mov	r9, r5
   18200:	b	18124 <argp_error@@Base+0xe30>
   18204:	ldr	r3, [r4, #20]
   18208:	ldr	r2, [sp]
   1820c:	add	r3, r2, r3
   18210:	ldr	r6, [r4, #8]
   18214:	cmp	r3, r6
   18218:	bcc	18238 <argp_error@@Base+0xf44>
   1821c:	sub	r6, r6, #1
   18220:	ldr	r3, [r4, #12]
   18224:	str	r3, [sp, #12]
   18228:	cmp	r3, #0
   1822c:	blt	18348 <argp_error@@Base+0x1054>
   18230:	mov	r7, fp
   18234:	b	18268 <argp_error@@Base+0xf74>
   18238:	str	r3, [r4, #20]
   1823c:	ldr	r3, [r4, #28]
   18240:	ldr	r2, [r4, #24]
   18244:	sub	r3, r3, r2
   18248:	str	r3, [r4, #16]
   1824c:	add	sp, sp, #20
   18250:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18254:	sub	r6, r8, #1
   18258:	ldr	r3, [r4, #12]
   1825c:	str	r3, [sp, #12]
   18260:	cmp	r3, #0
   18264:	blt	182fc <argp_error@@Base+0x1008>
   18268:	ldr	r5, [r4, #20]
   1826c:	rsb	r5, r5, #1
   18270:	add	r5, r5, r6
   18274:	adds	r5, r9, r5
   18278:	bcs	18628 <argp_error@@Base+0x1334>
   1827c:	bl	11434 <__ctype_b_loc@plt>
   18280:	ldr	r0, [r0]
   18284:	mov	r3, r5
   18288:	mov	r1, r3
   1828c:	sub	r3, r3, #1
   18290:	ldrb	r2, [r1]
   18294:	lsl	r2, r2, #1
   18298:	ldrh	r2, [r0, r2]
   1829c:	tst	r2, #1
   182a0:	bne	18368 <argp_error@@Base+0x1074>
   182a4:	mov	r1, r3
   182a8:	cmp	r3, r9
   182ac:	bcs	18288 <argp_error@@Base+0xf94>
   182b0:	add	r6, r1, #1
   182b4:	cmp	r6, r9
   182b8:	bhi	183a4 <argp_error@@Base+0x10b0>
   182bc:	cmp	r5, r7
   182c0:	bcs	18454 <argp_error@@Base+0x1160>
   182c4:	add	r6, r5, #1
   182c8:	mov	r8, r7
   182cc:	mov	r5, r6
   182d0:	cmp	r8, r6
   182d4:	beq	18454 <argp_error@@Base+0x1160>
   182d8:	bl	11434 <__ctype_b_loc@plt>
   182dc:	add	r6, r6, #1
   182e0:	ldrb	r3, [r5]
   182e4:	ldr	r2, [r0]
   182e8:	lsl	r3, r3, #1
   182ec:	ldrh	r3, [r2, r3]
   182f0:	tst	r3, #1
   182f4:	beq	182cc <argp_error@@Base+0xfd8>
   182f8:	b	18468 <argp_error@@Base+0x1174>
   182fc:	cmp	fp, r7
   18300:	bls	18348 <argp_error@@Base+0x1054>
   18304:	sub	r0, r6, r0
   18308:	ldr	r3, [sp, #8]
   1830c:	sub	r2, r3, r7
   18310:	mov	r1, r7
   18314:	add	r0, r9, r0
   18318:	bl	112d8 <memmove@plt>
   1831c:	ldr	r3, [r4, #20]
   18320:	sub	r6, r6, r3
   18324:	add	r6, r9, r6
   18328:	sub	r5, r6, r7
   1832c:	ldr	r3, [r4, #28]
   18330:	sub	r5, r3, r5
   18334:	str	r5, [r4, #28]
   18338:	mov	r3, #0
   1833c:	str	r3, [r4, #20]
   18340:	add	r9, r9, r8
   18344:	b	18194 <argp_error@@Base+0xea0>
   18348:	ldr	r3, [r4, #20]
   1834c:	ldr	r2, [sp]
   18350:	add	r3, r2, r3
   18354:	str	r3, [r4, #20]
   18358:	sub	r3, r6, r3
   1835c:	add	r3, fp, r3
   18360:	str	r3, [r4, #28]
   18364:	b	1823c <argp_error@@Base+0xf48>
   18368:	add	r6, r1, #1
   1836c:	cmp	r6, r9
   18370:	bls	182bc <argp_error@@Base+0xfc8>
   18374:	cmp	r1, r9
   18378:	bcc	183a4 <argp_error@@Base+0x10b0>
   1837c:	sub	ip, r9, #1
   18380:	mov	r1, r3
   18384:	cmp	ip, r3
   18388:	beq	183a4 <argp_error@@Base+0x10b0>
   1838c:	sub	r3, r3, #1
   18390:	ldrb	r2, [r1]
   18394:	lsl	r2, r2, #1
   18398:	ldrh	r2, [r0, r2]
   1839c:	tst	r2, #1
   183a0:	bne	18380 <argp_error@@Base+0x108c>
   183a4:	add	r5, r1, #1
   183a8:	ldr	r3, [sp]
   183ac:	add	r3, r3, #1
   183b0:	add	r3, r9, r3
   183b4:	cmp	r6, r3
   183b8:	beq	1848c <argp_error@@Base+0x1198>
   183bc:	add	r3, r5, #1
   183c0:	sub	r3, r6, r3
   183c4:	ldr	r2, [sp, #12]
   183c8:	cmp	r3, r2
   183cc:	bge	184a4 <argp_error@@Base+0x11b0>
   183d0:	cmp	r6, fp
   183d4:	bcs	184a4 <argp_error@@Base+0x11b0>
   183d8:	ldr	r3, [r4, #32]
   183dc:	ldr	r2, [sp, #8]
   183e0:	sub	r3, r3, r2
   183e4:	ldr	r2, [sp, #12]
   183e8:	add	r2, r2, #1
   183ec:	cmp	r3, r2
   183f0:	bgt	184ec <argp_error@@Base+0x11f8>
   183f4:	ldr	r0, [r4, #24]
   183f8:	cmp	r5, r0
   183fc:	bls	18410 <argp_error@@Base+0x111c>
   18400:	ldr	r3, [r4]
   18404:	sub	r2, r5, r0
   18408:	mov	r1, #1
   1840c:	bl	11320 <fwrite_unlocked@plt>
   18410:	ldr	r0, [r4]
   18414:	ldr	r3, [r0, #20]
   18418:	ldr	r2, [r0, #24]
   1841c:	cmp	r3, r2
   18420:	addcc	r2, r3, #1
   18424:	strcc	r2, [r0, #20]
   18428:	movcc	r2, #10
   1842c:	strbcc	r2, [r3]
   18430:	bcs	18538 <argp_error@@Base+0x1244>
   18434:	ldr	r7, [r4, #24]
   18438:	ldr	r3, [sp, #4]
   1843c:	sub	r3, r3, r7
   18440:	ldr	r2, [sp]
   18444:	add	r3, r2, r3
   18448:	str	r3, [sp]
   1844c:	mov	r9, r7
   18450:	b	184b4 <argp_error@@Base+0x11c0>
   18454:	cmp	r5, r7
   18458:	moveq	r3, #0
   1845c:	streq	r3, [r4, #20]
   18460:	addeq	r9, r7, #1
   18464:	beq	18194 <argp_error@@Base+0xea0>
   18468:	bl	11434 <__ctype_b_loc@plt>
   1846c:	ldr	r2, [r0]
   18470:	mov	r6, r5
   18474:	ldrb	r3, [r6, #1]!
   18478:	lsl	r3, r3, #1
   1847c:	ldrh	r3, [r2, r3]
   18480:	tst	r3, #1
   18484:	bne	18474 <argp_error@@Base+0x1180>
   18488:	b	183a8 <argp_error@@Base+0x10b4>
   1848c:	ldr	r3, [r4, #32]
   18490:	sub	r3, r3, r5
   18494:	ldr	r2, [sp, #12]
   18498:	add	r2, r2, #1
   1849c:	cmp	r3, r2
   184a0:	blt	183d0 <argp_error@@Base+0x10dc>
   184a4:	mov	r3, #10
   184a8:	strb	r3, [r5]
   184ac:	mov	r7, r9
   184b0:	add	r9, r5, #1
   184b4:	mov	r8, r6
   184b8:	ldr	r3, [r4, #12]
   184bc:	sub	r2, r6, r9
   184c0:	cmp	r2, r3
   184c4:	bge	18554 <argp_error@@Base+0x1260>
   184c8:	ldr	r2, [sp]
   184cc:	add	r2, r2, #1
   184d0:	add	r2, r7, r2
   184d4:	cmp	r6, r2
   184d8:	beq	18544 <argp_error@@Base+0x1250>
   184dc:	cmp	r3, #0
   184e0:	movgt	r5, #0
   184e4:	bgt	185b8 <argp_error@@Base+0x12c4>
   184e8:	b	18578 <argp_error@@Base+0x1284>
   184ec:	ldr	r3, [sp, #8]
   184f0:	sub	r7, r3, r6
   184f4:	mov	r0, r2
   184f8:	mov	r2, r7
   184fc:	mov	r1, r6
   18500:	add	r0, r5, r0
   18504:	bl	112d8 <memmove@plt>
   18508:	ldr	r6, [r4, #12]
   1850c:	add	r6, r6, #1
   18510:	add	r6, r5, r6
   18514:	add	r7, r6, r7
   18518:	ldr	r3, [sp, #4]
   1851c:	sub	r3, r7, r3
   18520:	str	r3, [sp]
   18524:	mov	r3, #10
   18528:	strb	r3, [r5]
   1852c:	mov	r7, r9
   18530:	add	r9, r5, #1
   18534:	b	184b4 <argp_error@@Base+0x11c0>
   18538:	mov	r1, #10
   1853c:	bl	114f4 <__overflow@plt>
   18540:	b	18434 <argp_error@@Base+0x1140>
   18544:	ldr	r2, [r4, #32]
   18548:	sub	r2, r2, r6
   1854c:	cmp	r3, r2
   18550:	bgt	184dc <argp_error@@Base+0x11e8>
   18554:	cmp	r3, #0
   18558:	ble	18578 <argp_error@@Base+0x1284>
   1855c:	mov	r3, r9
   18560:	strb	sl, [r3], #1
   18564:	sub	r1, r3, r9
   18568:	ldr	r2, [r4, #12]
   1856c:	cmp	r1, r2
   18570:	blt	18560 <argp_error@@Base+0x126c>
   18574:	mov	r9, r3
   18578:	cmp	r9, r6
   1857c:	bcc	185e4 <argp_error@@Base+0x12f0>
   18580:	sub	r7, r8, r7
   18584:	ldr	r3, [sp]
   18588:	sub	r7, r3, r7
   1858c:	add	r7, r9, r7
   18590:	str	r7, [r4, #28]
   18594:	ldr	r3, [r4, #12]
   18598:	cmp	r3, #0
   1859c:	mvneq	r3, #0
   185a0:	str	r3, [r4, #20]
   185a4:	b	18194 <argp_error@@Base+0xea0>
   185a8:	add	r5, r5, #1
   185ac:	ldr	r3, [r4, #12]
   185b0:	cmp	r3, r5
   185b4:	ble	18578 <argp_error@@Base+0x1284>
   185b8:	ldr	r0, [r4]
   185bc:	ldr	r3, [r0, #20]
   185c0:	ldr	r2, [r0, #24]
   185c4:	cmp	r3, r2
   185c8:	addcc	r2, r3, #1
   185cc:	strcc	r2, [r0, #20]
   185d0:	strbcc	sl, [r3]
   185d4:	bcc	185a8 <argp_error@@Base+0x12b4>
   185d8:	mov	r1, sl
   185dc:	bl	114f4 <__overflow@plt>
   185e0:	b	185a8 <argp_error@@Base+0x12b4>
   185e4:	ldr	r3, [sp]
   185e8:	add	r2, r7, r3
   185ec:	sub	r2, r2, r8
   185f0:	mov	r1, r6
   185f4:	mov	r0, r9
   185f8:	bl	112d8 <memmove@plt>
   185fc:	b	18580 <argp_error@@Base+0x128c>
   18600:	str	fp, [sp, #8]
   18604:	str	r9, [sp, #4]
   18608:	sub	r3, fp, r9
   1860c:	str	r3, [sp]
   18610:	mov	r2, r3
   18614:	mov	r1, #10
   18618:	mov	r0, r9
   1861c:	bl	114d0 <memchr@plt>
   18620:	mov	r7, r0
   18624:	b	18160 <argp_error@@Base+0xe6c>
   18628:	mov	r1, r5
   1862c:	b	182b0 <argp_error@@Base+0xfbc>
   18630:	push	{r4, lr}
   18634:	mov	r4, r0
   18638:	bl	180cc <argp_error@@Base+0xdd8>
   1863c:	ldr	r2, [r4, #28]
   18640:	ldr	r0, [r4, #24]
   18644:	cmp	r2, r0
   18648:	bls	1865c <argp_error@@Base+0x1368>
   1864c:	ldr	r3, [r4]
   18650:	sub	r2, r2, r0
   18654:	mov	r1, #1
   18658:	bl	11320 <fwrite_unlocked@plt>
   1865c:	ldr	r0, [r4, #24]
   18660:	bl	135bc <argp_parse@@Base+0xbf4>
   18664:	mov	r0, r4
   18668:	bl	135bc <argp_parse@@Base+0xbf4>
   1866c:	pop	{r4, pc}
   18670:	ldr	r3, [r0, #32]
   18674:	ldr	r2, [r0, #28]
   18678:	sub	r3, r3, r2
   1867c:	cmp	r3, r1
   18680:	bcc	1868c <argp_error@@Base+0x1398>
   18684:	mov	r0, #1
   18688:	bx	lr
   1868c:	push	{r4, r5, r6, lr}
   18690:	mov	r5, r1
   18694:	mov	r4, r0
   18698:	bl	180cc <argp_error@@Base+0xdd8>
   1869c:	ldr	r0, [r4, #24]
   186a0:	ldr	r2, [r4, #28]
   186a4:	ldr	r3, [r4]
   186a8:	sub	r2, r2, r0
   186ac:	mov	r1, #1
   186b0:	bl	11320 <fwrite_unlocked@plt>
   186b4:	ldr	r2, [r4, #28]
   186b8:	ldr	r3, [r4, #24]
   186bc:	sub	r1, r2, r3
   186c0:	cmp	r0, r1
   186c4:	bne	18708 <argp_error@@Base+0x1414>
   186c8:	str	r3, [r4, #28]
   186cc:	mov	r2, #0
   186d0:	str	r2, [r4, #16]
   186d4:	ldr	r1, [r4, #32]
   186d8:	sub	r1, r1, r3
   186dc:	cmp	r5, r1
   186e0:	bls	18700 <argp_error@@Base+0x140c>
   186e4:	adds	r5, r5, r1
   186e8:	bcc	18734 <argp_error@@Base+0x1440>
   186ec:	bl	11494 <__errno_location@plt>
   186f0:	mov	r3, #12
   186f4:	str	r3, [r0]
   186f8:	mov	r0, #0
   186fc:	pop	{r4, r5, r6, pc}
   18700:	mov	r0, #1
   18704:	pop	{r4, r5, r6, pc}
   18708:	sub	r2, r2, r0
   1870c:	str	r2, [r4, #28]
   18710:	ldr	r1, [r4, #16]
   18714:	sub	r1, r1, r0
   18718:	str	r1, [r4, #16]
   1871c:	sub	r2, r2, r3
   18720:	add	r1, r3, r0
   18724:	mov	r0, r3
   18728:	bl	112d8 <memmove@plt>
   1872c:	mov	r0, #0
   18730:	pop	{r4, r5, r6, pc}
   18734:	mov	r1, r5
   18738:	mov	r0, r3
   1873c:	bl	14224 <argp_parse@@Base+0x185c>
   18740:	cmp	r0, #0
   18744:	beq	186ec <argp_error@@Base+0x13f8>
   18748:	str	r0, [r4, #24]
   1874c:	add	r5, r0, r5
   18750:	str	r5, [r4, #32]
   18754:	str	r0, [r4, #28]
   18758:	mov	r0, #1
   1875c:	pop	{r4, r5, r6, pc}
   18760:	push	{r1, r2, r3}
   18764:	push	{r4, r5, r6, r7, lr}
   18768:	sub	sp, sp, #8
   1876c:	mov	r5, r0
   18770:	ldr	r7, [sp, #28]
   18774:	mov	r1, #150	; 0x96
   18778:	add	r6, sp, #32
   1877c:	mov	r0, r5
   18780:	bl	18670 <argp_error@@Base+0x137c>
   18784:	cmp	r0, #0
   18788:	beq	187bc <argp_error@@Base+0x14c8>
   1878c:	str	r6, [sp, #4]
   18790:	ldr	r0, [r5, #28]
   18794:	ldr	r4, [r5, #32]
   18798:	sub	r4, r4, r0
   1879c:	mov	r3, r6
   187a0:	mov	r2, r7
   187a4:	mov	r1, r4
   187a8:	bl	1159c <vsnprintf@plt>
   187ac:	cmp	r4, r0
   187b0:	bhi	187c4 <argp_error@@Base+0x14d0>
   187b4:	add	r1, r0, #1
   187b8:	b	1877c <argp_error@@Base+0x1488>
   187bc:	mvn	r0, #0
   187c0:	b	187d0 <argp_error@@Base+0x14dc>
   187c4:	ldr	r3, [r5, #28]
   187c8:	add	r3, r3, r0
   187cc:	str	r3, [r5, #28]
   187d0:	add	sp, sp, #8
   187d4:	pop	{r4, r5, r6, r7, lr}
   187d8:	add	sp, sp, #12
   187dc:	bx	lr
   187e0:	subs	r2, r1, #1
   187e4:	bxeq	lr
   187e8:	bcc	189c0 <argp_error@@Base+0x16cc>
   187ec:	cmp	r0, r1
   187f0:	bls	189a4 <argp_error@@Base+0x16b0>
   187f4:	tst	r1, r2
   187f8:	beq	189b0 <argp_error@@Base+0x16bc>
   187fc:	clz	r3, r0
   18800:	clz	r2, r1
   18804:	sub	r3, r2, r3
   18808:	rsbs	r3, r3, #31
   1880c:	addne	r3, r3, r3, lsl #1
   18810:	mov	r2, #0
   18814:	addne	pc, pc, r3, lsl #2
   18818:	nop			; (mov r0, r0)
   1881c:	cmp	r0, r1, lsl #31
   18820:	adc	r2, r2, r2
   18824:	subcs	r0, r0, r1, lsl #31
   18828:	cmp	r0, r1, lsl #30
   1882c:	adc	r2, r2, r2
   18830:	subcs	r0, r0, r1, lsl #30
   18834:	cmp	r0, r1, lsl #29
   18838:	adc	r2, r2, r2
   1883c:	subcs	r0, r0, r1, lsl #29
   18840:	cmp	r0, r1, lsl #28
   18844:	adc	r2, r2, r2
   18848:	subcs	r0, r0, r1, lsl #28
   1884c:	cmp	r0, r1, lsl #27
   18850:	adc	r2, r2, r2
   18854:	subcs	r0, r0, r1, lsl #27
   18858:	cmp	r0, r1, lsl #26
   1885c:	adc	r2, r2, r2
   18860:	subcs	r0, r0, r1, lsl #26
   18864:	cmp	r0, r1, lsl #25
   18868:	adc	r2, r2, r2
   1886c:	subcs	r0, r0, r1, lsl #25
   18870:	cmp	r0, r1, lsl #24
   18874:	adc	r2, r2, r2
   18878:	subcs	r0, r0, r1, lsl #24
   1887c:	cmp	r0, r1, lsl #23
   18880:	adc	r2, r2, r2
   18884:	subcs	r0, r0, r1, lsl #23
   18888:	cmp	r0, r1, lsl #22
   1888c:	adc	r2, r2, r2
   18890:	subcs	r0, r0, r1, lsl #22
   18894:	cmp	r0, r1, lsl #21
   18898:	adc	r2, r2, r2
   1889c:	subcs	r0, r0, r1, lsl #21
   188a0:	cmp	r0, r1, lsl #20
   188a4:	adc	r2, r2, r2
   188a8:	subcs	r0, r0, r1, lsl #20
   188ac:	cmp	r0, r1, lsl #19
   188b0:	adc	r2, r2, r2
   188b4:	subcs	r0, r0, r1, lsl #19
   188b8:	cmp	r0, r1, lsl #18
   188bc:	adc	r2, r2, r2
   188c0:	subcs	r0, r0, r1, lsl #18
   188c4:	cmp	r0, r1, lsl #17
   188c8:	adc	r2, r2, r2
   188cc:	subcs	r0, r0, r1, lsl #17
   188d0:	cmp	r0, r1, lsl #16
   188d4:	adc	r2, r2, r2
   188d8:	subcs	r0, r0, r1, lsl #16
   188dc:	cmp	r0, r1, lsl #15
   188e0:	adc	r2, r2, r2
   188e4:	subcs	r0, r0, r1, lsl #15
   188e8:	cmp	r0, r1, lsl #14
   188ec:	adc	r2, r2, r2
   188f0:	subcs	r0, r0, r1, lsl #14
   188f4:	cmp	r0, r1, lsl #13
   188f8:	adc	r2, r2, r2
   188fc:	subcs	r0, r0, r1, lsl #13
   18900:	cmp	r0, r1, lsl #12
   18904:	adc	r2, r2, r2
   18908:	subcs	r0, r0, r1, lsl #12
   1890c:	cmp	r0, r1, lsl #11
   18910:	adc	r2, r2, r2
   18914:	subcs	r0, r0, r1, lsl #11
   18918:	cmp	r0, r1, lsl #10
   1891c:	adc	r2, r2, r2
   18920:	subcs	r0, r0, r1, lsl #10
   18924:	cmp	r0, r1, lsl #9
   18928:	adc	r2, r2, r2
   1892c:	subcs	r0, r0, r1, lsl #9
   18930:	cmp	r0, r1, lsl #8
   18934:	adc	r2, r2, r2
   18938:	subcs	r0, r0, r1, lsl #8
   1893c:	cmp	r0, r1, lsl #7
   18940:	adc	r2, r2, r2
   18944:	subcs	r0, r0, r1, lsl #7
   18948:	cmp	r0, r1, lsl #6
   1894c:	adc	r2, r2, r2
   18950:	subcs	r0, r0, r1, lsl #6
   18954:	cmp	r0, r1, lsl #5
   18958:	adc	r2, r2, r2
   1895c:	subcs	r0, r0, r1, lsl #5
   18960:	cmp	r0, r1, lsl #4
   18964:	adc	r2, r2, r2
   18968:	subcs	r0, r0, r1, lsl #4
   1896c:	cmp	r0, r1, lsl #3
   18970:	adc	r2, r2, r2
   18974:	subcs	r0, r0, r1, lsl #3
   18978:	cmp	r0, r1, lsl #2
   1897c:	adc	r2, r2, r2
   18980:	subcs	r0, r0, r1, lsl #2
   18984:	cmp	r0, r1, lsl #1
   18988:	adc	r2, r2, r2
   1898c:	subcs	r0, r0, r1, lsl #1
   18990:	cmp	r0, r1
   18994:	adc	r2, r2, r2
   18998:	subcs	r0, r0, r1
   1899c:	mov	r0, r2
   189a0:	bx	lr
   189a4:	moveq	r0, #1
   189a8:	movne	r0, #0
   189ac:	bx	lr
   189b0:	clz	r2, r1
   189b4:	rsb	r2, r2, #31
   189b8:	lsr	r0, r0, r2
   189bc:	bx	lr
   189c0:	cmp	r0, #0
   189c4:	mvnne	r0, #0
   189c8:	b	18c2c <argp_error@@Base+0x1938>
   189cc:	cmp	r1, #0
   189d0:	beq	189c0 <argp_error@@Base+0x16cc>
   189d4:	push	{r0, r1, lr}
   189d8:	bl	187e0 <argp_error@@Base+0x14ec>
   189dc:	pop	{r1, r2, lr}
   189e0:	mul	r3, r2, r0
   189e4:	sub	r1, r1, r3
   189e8:	bx	lr
   189ec:	cmp	r1, #0
   189f0:	beq	18bfc <argp_error@@Base+0x1908>
   189f4:	eor	ip, r0, r1
   189f8:	rsbmi	r1, r1, #0
   189fc:	subs	r2, r1, #1
   18a00:	beq	18bc8 <argp_error@@Base+0x18d4>
   18a04:	movs	r3, r0
   18a08:	rsbmi	r3, r0, #0
   18a0c:	cmp	r3, r1
   18a10:	bls	18bd4 <argp_error@@Base+0x18e0>
   18a14:	tst	r1, r2
   18a18:	beq	18be4 <argp_error@@Base+0x18f0>
   18a1c:	clz	r2, r3
   18a20:	clz	r0, r1
   18a24:	sub	r2, r0, r2
   18a28:	rsbs	r2, r2, #31
   18a2c:	addne	r2, r2, r2, lsl #1
   18a30:	mov	r0, #0
   18a34:	addne	pc, pc, r2, lsl #2
   18a38:	nop			; (mov r0, r0)
   18a3c:	cmp	r3, r1, lsl #31
   18a40:	adc	r0, r0, r0
   18a44:	subcs	r3, r3, r1, lsl #31
   18a48:	cmp	r3, r1, lsl #30
   18a4c:	adc	r0, r0, r0
   18a50:	subcs	r3, r3, r1, lsl #30
   18a54:	cmp	r3, r1, lsl #29
   18a58:	adc	r0, r0, r0
   18a5c:	subcs	r3, r3, r1, lsl #29
   18a60:	cmp	r3, r1, lsl #28
   18a64:	adc	r0, r0, r0
   18a68:	subcs	r3, r3, r1, lsl #28
   18a6c:	cmp	r3, r1, lsl #27
   18a70:	adc	r0, r0, r0
   18a74:	subcs	r3, r3, r1, lsl #27
   18a78:	cmp	r3, r1, lsl #26
   18a7c:	adc	r0, r0, r0
   18a80:	subcs	r3, r3, r1, lsl #26
   18a84:	cmp	r3, r1, lsl #25
   18a88:	adc	r0, r0, r0
   18a8c:	subcs	r3, r3, r1, lsl #25
   18a90:	cmp	r3, r1, lsl #24
   18a94:	adc	r0, r0, r0
   18a98:	subcs	r3, r3, r1, lsl #24
   18a9c:	cmp	r3, r1, lsl #23
   18aa0:	adc	r0, r0, r0
   18aa4:	subcs	r3, r3, r1, lsl #23
   18aa8:	cmp	r3, r1, lsl #22
   18aac:	adc	r0, r0, r0
   18ab0:	subcs	r3, r3, r1, lsl #22
   18ab4:	cmp	r3, r1, lsl #21
   18ab8:	adc	r0, r0, r0
   18abc:	subcs	r3, r3, r1, lsl #21
   18ac0:	cmp	r3, r1, lsl #20
   18ac4:	adc	r0, r0, r0
   18ac8:	subcs	r3, r3, r1, lsl #20
   18acc:	cmp	r3, r1, lsl #19
   18ad0:	adc	r0, r0, r0
   18ad4:	subcs	r3, r3, r1, lsl #19
   18ad8:	cmp	r3, r1, lsl #18
   18adc:	adc	r0, r0, r0
   18ae0:	subcs	r3, r3, r1, lsl #18
   18ae4:	cmp	r3, r1, lsl #17
   18ae8:	adc	r0, r0, r0
   18aec:	subcs	r3, r3, r1, lsl #17
   18af0:	cmp	r3, r1, lsl #16
   18af4:	adc	r0, r0, r0
   18af8:	subcs	r3, r3, r1, lsl #16
   18afc:	cmp	r3, r1, lsl #15
   18b00:	adc	r0, r0, r0
   18b04:	subcs	r3, r3, r1, lsl #15
   18b08:	cmp	r3, r1, lsl #14
   18b0c:	adc	r0, r0, r0
   18b10:	subcs	r3, r3, r1, lsl #14
   18b14:	cmp	r3, r1, lsl #13
   18b18:	adc	r0, r0, r0
   18b1c:	subcs	r3, r3, r1, lsl #13
   18b20:	cmp	r3, r1, lsl #12
   18b24:	adc	r0, r0, r0
   18b28:	subcs	r3, r3, r1, lsl #12
   18b2c:	cmp	r3, r1, lsl #11
   18b30:	adc	r0, r0, r0
   18b34:	subcs	r3, r3, r1, lsl #11
   18b38:	cmp	r3, r1, lsl #10
   18b3c:	adc	r0, r0, r0
   18b40:	subcs	r3, r3, r1, lsl #10
   18b44:	cmp	r3, r1, lsl #9
   18b48:	adc	r0, r0, r0
   18b4c:	subcs	r3, r3, r1, lsl #9
   18b50:	cmp	r3, r1, lsl #8
   18b54:	adc	r0, r0, r0
   18b58:	subcs	r3, r3, r1, lsl #8
   18b5c:	cmp	r3, r1, lsl #7
   18b60:	adc	r0, r0, r0
   18b64:	subcs	r3, r3, r1, lsl #7
   18b68:	cmp	r3, r1, lsl #6
   18b6c:	adc	r0, r0, r0
   18b70:	subcs	r3, r3, r1, lsl #6
   18b74:	cmp	r3, r1, lsl #5
   18b78:	adc	r0, r0, r0
   18b7c:	subcs	r3, r3, r1, lsl #5
   18b80:	cmp	r3, r1, lsl #4
   18b84:	adc	r0, r0, r0
   18b88:	subcs	r3, r3, r1, lsl #4
   18b8c:	cmp	r3, r1, lsl #3
   18b90:	adc	r0, r0, r0
   18b94:	subcs	r3, r3, r1, lsl #3
   18b98:	cmp	r3, r1, lsl #2
   18b9c:	adc	r0, r0, r0
   18ba0:	subcs	r3, r3, r1, lsl #2
   18ba4:	cmp	r3, r1, lsl #1
   18ba8:	adc	r0, r0, r0
   18bac:	subcs	r3, r3, r1, lsl #1
   18bb0:	cmp	r3, r1
   18bb4:	adc	r0, r0, r0
   18bb8:	subcs	r3, r3, r1
   18bbc:	cmp	ip, #0
   18bc0:	rsbmi	r0, r0, #0
   18bc4:	bx	lr
   18bc8:	teq	ip, r0
   18bcc:	rsbmi	r0, r0, #0
   18bd0:	bx	lr
   18bd4:	movcc	r0, #0
   18bd8:	asreq	r0, ip, #31
   18bdc:	orreq	r0, r0, #1
   18be0:	bx	lr
   18be4:	clz	r2, r1
   18be8:	rsb	r2, r2, #31
   18bec:	cmp	ip, #0
   18bf0:	lsr	r0, r3, r2
   18bf4:	rsbmi	r0, r0, #0
   18bf8:	bx	lr
   18bfc:	cmp	r0, #0
   18c00:	mvngt	r0, #-2147483648	; 0x80000000
   18c04:	movlt	r0, #-2147483648	; 0x80000000
   18c08:	b	18c2c <argp_error@@Base+0x1938>
   18c0c:	cmp	r1, #0
   18c10:	beq	18bfc <argp_error@@Base+0x1908>
   18c14:	push	{r0, r1, lr}
   18c18:	bl	189f4 <argp_error@@Base+0x1700>
   18c1c:	pop	{r1, r2, lr}
   18c20:	mul	r3, r2, r0
   18c24:	sub	r1, r1, r3
   18c28:	bx	lr
   18c2c:	push	{r1, lr}
   18c30:	mov	r0, #8
   18c34:	bl	11284 <raise@plt>
   18c38:	pop	{r1, pc}
   18c3c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   18c40:	mov	r7, r0
   18c44:	ldr	r6, [pc, #72]	; 18c94 <argp_error@@Base+0x19a0>
   18c48:	ldr	r5, [pc, #72]	; 18c98 <argp_error@@Base+0x19a4>
   18c4c:	add	r6, pc, r6
   18c50:	add	r5, pc, r5
   18c54:	sub	r6, r6, r5
   18c58:	mov	r8, r1
   18c5c:	mov	r9, r2
   18c60:	bl	1124c <calloc@plt-0x20>
   18c64:	asrs	r6, r6, #2
   18c68:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   18c6c:	mov	r4, #0
   18c70:	add	r4, r4, #1
   18c74:	ldr	r3, [r5], #4
   18c78:	mov	r2, r9
   18c7c:	mov	r1, r8
   18c80:	mov	r0, r7
   18c84:	blx	r3
   18c88:	cmp	r6, r4
   18c8c:	bne	18c70 <argp_error@@Base+0x197c>
   18c90:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   18c94:	andeq	r1, r1, ip, lsr #5
   18c98:	andeq	r1, r1, r4, lsr #5
   18c9c:	bx	lr

Disassembly of section .fini:

00018ca0 <.fini>:
   18ca0:	push	{r3, lr}
   18ca4:	pop	{r3, pc}
