
../repos/charybdis/extensions/.libs/ip_cloaking_3.0.so:     file format elf32-littlearm


Disassembly of section .init:

000006c4 <_init>:
 6c4:	push	{r3, lr}
 6c8:	bl	7a4 <call_weak_fn>
 6cc:	pop	{r3, pc}

Disassembly of section .plt:

000006d0 <.plt>:
 6d0:	push	{lr}		; (str lr, [sp, #-4]!)
 6d4:	ldr	lr, [pc, #4]	; 6e0 <.plt+0x10>
 6d8:	add	lr, pc, lr
 6dc:	ldr	pc, [lr, #8]!
 6e0:	.word	0x00011920

000006e4 <calloc@plt>:
 6e4:	add	ip, pc, #0, 12
 6e8:	add	ip, ip, #69632	; 0x11000
 6ec:	ldr	pc, [ip, #2336]!	; 0x920

000006f0 <strcmp@plt>:
 6f0:	add	ip, pc, #0, 12
 6f4:	add	ip, ip, #69632	; 0x11000
 6f8:	ldr	pc, [ip, #2328]!	; 0x918

000006fc <__cxa_finalize@plt>:
 6fc:	add	ip, pc, #0, 12
 700:	add	ip, ip, #69632	; 0x11000
 704:	ldr	pc, [ip, #2320]!	; 0x910

00000708 <rb_outofmemory@plt>:
 708:	add	ip, pc, #0, 12
 70c:	add	ip, ip, #69632	; 0x11000
 710:	ldr	pc, [ip, #2312]!	; 0x908

00000714 <find_umode_slot@plt>:
 714:	add	ip, pc, #0, 12
 718:	add	ip, ip, #69632	; 0x11000
 71c:	ldr	pc, [ip, #2304]!	; 0x900

00000720 <sendto_server@plt>:
 720:	add	ip, pc, #0, 12
 724:	add	ip, ip, #69632	; 0x11000
 728:	ldr	pc, [ip, #2296]!	; 0x8f8

0000072c <__gmon_start__@plt>:
 72c:	add	ip, pc, #0, 12
 730:	add	ip, ip, #69632	; 0x11000
 734:	ldr	pc, [ip, #2288]!	; 0x8f0

00000738 <__ctype_b_loc@plt>:
 738:	add	ip, pc, #0, 12
 73c:	add	ip, ip, #69632	; 0x11000
 740:	ldr	pc, [ip, #2280]!	; 0x8e8

00000744 <sendto_one_numeric@plt>:
 744:	add	ip, pc, #0, 12
 748:	add	ip, ip, #69632	; 0x11000
 74c:	ldr	pc, [ip, #2272]!	; 0x8e0

00000750 <snprintf@plt>:
 750:	add	ip, pc, #0, 12
 754:	add	ip, ip, #69632	; 0x11000
 758:	ldr	pc, [ip, #2264]!	; 0x8d8

0000075c <strncpy@plt>:
 75c:	add	ip, pc, #0, 12
 760:	add	ip, ip, #69632	; 0x11000
 764:	ldr	pc, [ip, #2256]!	; 0x8d0

00000768 <strrchr@plt>:
 768:	add	ip, pc, #0, 12
 76c:	add	ip, ip, #69632	; 0x11000
 770:	ldr	pc, [ip, #2248]!	; 0x8c8

00000774 <change_nick_user_host@plt>:
 774:	add	ip, pc, #0, 12
 778:	add	ip, ip, #69632	; 0x11000
 77c:	ldr	pc, [ip, #2240]!	; 0x8c0

00000780 <rb_strlcpy@plt>:
 780:	add	ip, pc, #0, 12
 784:	add	ip, ip, #69632	; 0x11000
 788:	ldr	pc, [ip, #2232]!	; 0x8b8

0000078c <irccmp@plt>:
 78c:	add	ip, pc, #0, 12
 790:	add	ip, ip, #69632	; 0x11000
 794:	ldr	pc, [ip, #2224]!	; 0x8b0

00000798 <construct_umodebuf@plt>:
 798:	add	ip, pc, #0, 12
 79c:	add	ip, ip, #69632	; 0x11000
 7a0:	ldr	pc, [ip, #2216]!	; 0x8a8

Disassembly of section .text:

000007a4 <call_weak_fn>:
 7a4:	ldr	r3, [pc, #20]	; 7c0 <call_weak_fn+0x1c>
 7a8:	ldr	r2, [pc, #20]	; 7c4 <call_weak_fn+0x20>
 7ac:	add	r3, pc, r3
 7b0:	ldr	r2, [r3, r2]
 7b4:	cmp	r2, #0
 7b8:	bxeq	lr
 7bc:	b	72c <__gmon_start__@plt>
 7c0:	.word	0x0001184c
 7c4:	.word	0x0000005c

000007c8 <deregister_tm_clones>:
 7c8:	ldr	r0, [pc, #44]	; 7fc <deregister_tm_clones+0x34>
 7cc:	ldr	r3, [pc, #44]	; 800 <deregister_tm_clones+0x38>
 7d0:	add	r0, pc, r0
 7d4:	add	r3, pc, r3
 7d8:	cmp	r3, r0
 7dc:	ldr	r3, [pc, #32]	; 804 <deregister_tm_clones+0x3c>
 7e0:	add	r3, pc, r3
 7e4:	bxeq	lr
 7e8:	ldr	r2, [pc, #24]	; 808 <deregister_tm_clones+0x40>
 7ec:	ldr	r3, [r3, r2]
 7f0:	cmp	r3, #0
 7f4:	bxeq	lr
 7f8:	bx	r3
 7fc:	.word	0x000118e4
 800:	.word	0x000118e0
 804:	.word	0x00011818
 808:	.word	0x00000050

0000080c <register_tm_clones>:
 80c:	ldr	r0, [pc, #56]	; 84c <register_tm_clones+0x40>
 810:	ldr	r3, [pc, #56]	; 850 <register_tm_clones+0x44>
 814:	add	r0, pc, r0
 818:	add	r3, pc, r3
 81c:	sub	r1, r3, r0
 820:	ldr	r3, [pc, #44]	; 854 <register_tm_clones+0x48>
 824:	asr	r1, r1, #2
 828:	add	r3, pc, r3
 82c:	add	r1, r1, r1, lsr #31
 830:	asrs	r1, r1, #1
 834:	bxeq	lr
 838:	ldr	r2, [pc, #24]	; 858 <register_tm_clones+0x4c>
 83c:	ldr	r3, [r3, r2]
 840:	cmp	r3, #0
 844:	bxeq	lr
 848:	bx	r3
 84c:	.word	0x000118a0
 850:	.word	0x0001189c
 854:	.word	0x000117d0
 858:	.word	0x00000064

0000085c <__do_global_dtors_aux>:
 85c:	ldr	r3, [pc, #76]	; 8b0 <__do_global_dtors_aux+0x54>
 860:	ldr	r2, [pc, #76]	; 8b4 <__do_global_dtors_aux+0x58>
 864:	add	r3, pc, r3
 868:	add	r2, pc, r2
 86c:	ldrb	r3, [r3]
 870:	cmp	r3, #0
 874:	bxne	lr
 878:	ldr	r3, [pc, #56]	; 8b8 <__do_global_dtors_aux+0x5c>
 87c:	push	{r4, lr}
 880:	ldr	r3, [r2, r3]
 884:	cmp	r3, #0
 888:	beq	898 <__do_global_dtors_aux+0x3c>
 88c:	ldr	r3, [pc, #40]	; 8bc <__do_global_dtors_aux+0x60>
 890:	ldr	r0, [pc, r3]
 894:	bl	6fc <__cxa_finalize@plt>
 898:	bl	7c8 <deregister_tm_clones>
 89c:	ldr	r3, [pc, #28]	; 8c0 <__do_global_dtors_aux+0x64>
 8a0:	mov	r2, #1
 8a4:	add	r3, pc, r3
 8a8:	strb	r2, [r3]
 8ac:	pop	{r4, pc}
 8b0:	.word	0x00011850
 8b4:	.word	0x00011790
 8b8:	.word	0x0000004c
 8bc:	.word	0x000117d4
 8c0:	.word	0x00011810

000008c4 <frame_dummy>:
 8c4:	b	80c <register_tm_clones>

000008c8 <check_umode_change>:
 8c8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8cc:	add	fp, sp, #28
 8d0:	sub	sp, sp, #20
 8d4:	ldr	r4, [r0]
 8d8:	mov	r7, r4
 8dc:	ldr	r1, [r7, #64]!	; 0x40
 8e0:	tst	r1, #8192	; 0x2000
 8e4:	beq	a90 <check_umode_change+0x1c8>
 8e8:	ldrh	r2, [r4, #80]	; 0x50
 8ec:	cmp	r2, #64	; 0x40
 8f0:	bne	a90 <check_umode_change+0x1c8>
 8f4:	ldr	r0, [r0, #4]
 8f8:	ldr	r5, [r4, #56]	; 0x38
 8fc:	ldr	r2, [pc, #776]	; c0c <check_umode_change+0x344>
 900:	ldr	r2, [pc, r2]
 904:	eor	r0, r5, r0
 908:	ldr	r6, [r2, #416]	; 0x1a0
 90c:	tst	r0, r6
 910:	beq	a90 <check_umode_change+0x1c8>
 914:	tst	r6, r5
 918:	beq	964 <check_umode_change+0x9c>
 91c:	tst	r1, #16777216	; 0x1000000
 920:	bne	954 <check_umode_change+0x8c>
 924:	ldr	r0, [r4, #432]	; 0x1b0
 928:	ldr	sl, [r0, #432]	; 0x1b0
 92c:	cmp	sl, #0
 930:	beq	954 <check_umode_change+0x8c>
 934:	add	r8, r4, #163	; 0xa3
 938:	tst	r1, #131072	; 0x20000
 93c:	beq	a98 <check_umode_change+0x1d0>
 940:	mov	r0, r8
 944:	mov	r1, sl
 948:	bl	6f0 <strcmp@plt>
 94c:	cmp	r0, #0
 950:	beq	a98 <check_umode_change+0x1d0>
 954:	bic	r0, r5, r6
 958:	str	r0, [r4, #56]	; 0x38
 95c:	sub	sp, fp, #28
 960:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
 964:	ldr	r0, [r4, #432]	; 0x1b0
 968:	ldr	r1, [r0, #432]	; 0x1b0
 96c:	cmp	r1, #0
 970:	beq	a90 <check_umode_change+0x1c8>
 974:	add	r0, r4, #163	; 0xa3
 978:	bl	6f0 <strcmp@plt>
 97c:	cmp	r0, #0
 980:	bne	a90 <check_umode_change+0x1c8>
 984:	ldr	r2, [pc, #688]	; c3c <check_umode_change+0x374>
 988:	add	r8, r4, #227	; 0xe3
 98c:	mov	r0, r4
 990:	mov	r1, #396	; 0x18c
 994:	mov	r3, r8
 998:	add	r2, pc, r2
 99c:	bl	744 <sendto_one_numeric@plt>
 9a0:	ldr	r0, [pc, #664]	; c40 <check_umode_change+0x378>
 9a4:	mov	r6, r4
 9a8:	add	r9, r4, #88	; 0x58
 9ac:	ldr	r0, [pc, r0]
 9b0:	ldr	r0, [r0]
 9b4:	ldr	r1, [pc, #648]	; c44 <check_umode_change+0x37c>
 9b8:	ldr	r1, [pc, r1]
 9bc:	ldr	r1, [r1]
 9c0:	ldr	r5, [pc, #640]	; c48 <check_umode_change+0x380>
 9c4:	ldr	r5, [pc, r5]
 9c8:	ldrb	r3, [r6, #396]!	; 0x18c
 9cc:	ldrb	r2, [r5, #396]!	; 0x18c
 9d0:	ldr	ip, [pc, #628]	; c4c <check_umode_change+0x384>
 9d4:	cmp	r3, #0
 9d8:	mov	r3, r6
 9dc:	moveq	r3, r9
 9e0:	cmp	r2, #0
 9e4:	sub	sl, r5, #308	; 0x134
 9e8:	mov	r2, r5
 9ec:	add	ip, pc, ip
 9f0:	moveq	r2, sl
 9f4:	str	ip, [sp]
 9f8:	stmib	sp, {r2, r3, r8}
 9fc:	orr	r2, r0, r1
 a00:	mov	r0, #0
 a04:	mov	r1, #0
 a08:	mov	r3, #0
 a0c:	bl	720 <sendto_server@plt>
 a10:	ldr	r0, [pc, #568]	; c50 <check_umode_change+0x388>
 a14:	ldr	r0, [pc, r0]
 a18:	ldr	r3, [r0]
 a1c:	ldr	r0, [pc, #560]	; c54 <check_umode_change+0x38c>
 a20:	ldr	r0, [pc, r0]
 a24:	ldrb	r1, [r6]
 a28:	ldr	r2, [r0]
 a2c:	ldrb	r0, [r5]
 a30:	ldr	ip, [pc, #544]	; c58 <check_umode_change+0x390>
 a34:	cmp	r1, #0
 a38:	mov	r1, #0
 a3c:	moveq	r6, r9
 a40:	cmp	r0, #0
 a44:	add	ip, pc, ip
 a48:	mov	r0, #0
 a4c:	moveq	r5, sl
 a50:	str	ip, [sp]
 a54:	stmib	sp, {r5, r6, r8}
 a58:	bl	720 <sendto_server@plt>
 a5c:	ldr	r0, [pc, #504]	; c5c <check_umode_change+0x394>
 a60:	mov	r1, #0
 a64:	add	r2, r4, #152	; 0x98
 a68:	mov	r3, r8
 a6c:	str	r1, [sp]
 a70:	mov	r1, r9
 a74:	add	r0, pc, r0
 a78:	str	r0, [sp, #4]
 a7c:	mov	r0, r4
 a80:	bl	774 <change_nick_user_host@plt>
 a84:	ldr	r0, [r7]
 a88:	bic	r0, r0, #131072	; 0x20000
 a8c:	str	r0, [r7]
 a90:	sub	sp, fp, #28
 a94:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
 a98:	mov	r0, r8
 a9c:	mov	r1, sl
 aa0:	bl	6f0 <strcmp@plt>
 aa4:	cmp	r0, #0
 aa8:	beq	ac8 <check_umode_change+0x200>
 aac:	add	r0, r4, #227	; 0xe3
 ab0:	cmp	r0, sl
 ab4:	str	r0, [sp, #16]
 ab8:	beq	ae8 <check_umode_change+0x220>
 abc:	ldr	r2, [pc, #332]	; c10 <check_umode_change+0x348>
 ac0:	add	r2, pc, r2
 ac4:	b	af0 <check_umode_change+0x228>
 ac8:	ldr	r2, [pc, #360]	; c38 <check_umode_change+0x370>
 acc:	mov	r0, r4
 ad0:	mov	r1, #396	; 0x18c
 ad4:	mov	r3, r8
 ad8:	add	r2, pc, r2
 adc:	sub	sp, fp, #28
 ae0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
 ae4:	b	744 <sendto_one_numeric@plt>
 ae8:	ldr	r2, [pc, #292]	; c14 <check_umode_change+0x34c>
 aec:	add	r2, pc, r2
 af0:	mov	r0, r4
 af4:	mov	r1, #396	; 0x18c
 af8:	mov	r3, sl
 afc:	bl	744 <sendto_one_numeric@plt>
 b00:	mov	r6, r4
 b04:	add	r9, r4, #88	; 0x58
 b08:	ldrb	r0, [r6, #396]!	; 0x18c
 b0c:	ldr	r1, [pc, #260]	; c18 <check_umode_change+0x350>
 b10:	ldr	r1, [pc, r1]
 b14:	cmp	r0, #0
 b18:	mov	r0, r6
 b1c:	moveq	r0, r9
 b20:	ldr	lr, [r1]
 b24:	ldr	r5, [pc, #240]	; c1c <check_umode_change+0x354>
 b28:	ldr	r5, [pc, r5]
 b2c:	ldrb	r2, [r5, #396]!	; 0x18c
 b30:	ldr	r1, [pc, #232]	; c20 <check_umode_change+0x358>
 b34:	ldr	r1, [pc, r1]
 b38:	cmp	r2, #0
 b3c:	sub	r8, r5, #308	; 0x134
 b40:	mov	r2, r5
 b44:	moveq	r2, r8
 b48:	ldr	r3, [r1]
 b4c:	ldr	ip, [pc, #208]	; c24 <check_umode_change+0x35c>
 b50:	str	r2, [sp, #4]
 b54:	str	r0, [sp, #8]
 b58:	mov	r0, #0
 b5c:	mov	r1, #0
 b60:	str	sl, [sp, #12]
 b64:	add	ip, pc, ip
 b68:	orr	r2, lr, r3
 b6c:	mov	r3, #0
 b70:	str	ip, [sp]
 b74:	bl	720 <sendto_server@plt>
 b78:	ldr	r0, [pc, #168]	; c28 <check_umode_change+0x360>
 b7c:	ldr	r0, [pc, r0]
 b80:	ldr	r3, [r0]
 b84:	ldr	r0, [pc, #160]	; c2c <check_umode_change+0x364>
 b88:	ldr	r0, [pc, r0]
 b8c:	ldrb	r1, [r6]
 b90:	ldr	r2, [r0]
 b94:	ldrb	r0, [r5]
 b98:	ldr	ip, [pc, #144]	; c30 <check_umode_change+0x368>
 b9c:	cmp	r1, #0
 ba0:	mov	r1, #0
 ba4:	moveq	r6, r9
 ba8:	cmp	r0, #0
 bac:	add	ip, pc, ip
 bb0:	mov	r0, #0
 bb4:	moveq	r5, r8
 bb8:	str	ip, [sp]
 bbc:	stmib	sp, {r5, r6, sl}
 bc0:	bl	720 <sendto_server@plt>
 bc4:	ldr	r0, [pc, #104]	; c34 <check_umode_change+0x36c>
 bc8:	mov	r1, #0
 bcc:	add	r2, r4, #152	; 0x98
 bd0:	mov	r3, sl
 bd4:	str	r1, [sp]
 bd8:	mov	r1, r9
 bdc:	add	r0, pc, r0
 be0:	str	r0, [sp, #4]
 be4:	mov	r0, r4
 be8:	bl	774 <change_nick_user_host@plt>
 bec:	ldr	r0, [r7]
 bf0:	ldr	r2, [sp, #16]
 bf4:	bic	r1, r0, #131072	; 0x20000
 bf8:	cmp	r2, sl
 bfc:	orrne	r1, r0, #131072	; 0x20000
 c00:	str	r1, [r7]
 c04:	sub	sp, fp, #28
 c08:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
 c0c:	.word	0x00011750
 c10:	.word	0x00000559
 c14:	.word	0x00000549
 c18:	.word	0x0001153c
 c1c:	.word	0x00011538
 c20:	.word	0x00011524
 c24:	.word	0x000004e4
 c28:	.word	0x000114dc
 c2c:	.word	0x000114c4
 c30:	.word	0x000004af
 c34:	.word	0x0000049a
 c38:	.word	0x00000541
 c3c:	.word	0x0000069d
 c40:	.word	0x000116a0
 c44:	.word	0x000116a0
 c48:	.word	0x0001169c
 c4c:	.word	0x0000065c
 c50:	.word	0x00011644
 c54:	.word	0x0001162c
 c58:	.word	0x00000617
 c5c:	.word	0x00000602

00000c60 <check_new_user>:
 c60:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
 c64:	add	fp, sp, #28
 c68:	sub	sp, sp, #84	; 0x54
 c6c:	mov	r4, r0
 c70:	ldrb	r0, [r0, #67]	; 0x43
 c74:	tst	r0, #1
 c78:	bne	d48 <check_new_user+0xe8>
 c7c:	mov	r0, #1
 c80:	mov	r1, #64	; 0x40
 c84:	bl	6e4 <calloc@plt>
 c88:	cmp	r0, #0
 c8c:	beq	f98 <check_new_user+0x338>
 c90:	ldr	r1, [r4, #432]	; 0x1b0
 c94:	add	r9, r4, #227	; 0xe3
 c98:	add	r8, r4, #64	; 0x40
 c9c:	str	r0, [r1, #432]	; 0x1b0
 ca0:	movw	r0, #291	; 0x123
 ca4:	add	r1, r4, r0
 ca8:	mov	r0, r9
 cac:	bl	78c <irccmp@plt>
 cb0:	ldr	r2, [r4, #432]	; 0x1b0
 cb4:	ldrb	r1, [r4, #227]	; 0xe3
 cb8:	movw	r5, #18604	; 0x48ac
 cbc:	cmp	r0, #0
 cc0:	movt	r5, #35898	; 0x8c3a
 cc4:	ldr	sl, [r2, #432]	; 0x1b0
 cc8:	beq	e24 <check_new_user+0x1c4>
 ccc:	cmp	r1, #0
 cd0:	beq	cf0 <check_new_user+0x90>
 cd4:	add	r2, r4, #228	; 0xe4
 cd8:	mov	r0, #1
 cdc:	uxtab	r0, r0, r1
 ce0:	ldrb	r1, [r2], #1
 ce4:	cmp	r1, #0
 ce8:	bne	cdc <check_new_user+0x7c>
 cec:	mul	r5, r0, r5
 cf0:	str	r8, [sp, #12]
 cf4:	mov	r2, #63	; 0x3f
 cf8:	ldr	r0, [pc, #684]	; fac <check_new_user+0x34c>
 cfc:	str	r9, [sp, #8]
 d00:	add	r0, pc, r0
 d04:	ldrb	r6, [r0]
 d08:	cmp	r6, #0
 d0c:	moveq	r1, #1
 d10:	movwne	r6, #3376	; 0xd30
 d14:	strbeq	r1, [r0]
 d18:	mov	r0, sl
 d1c:	mov	r1, r9
 d20:	moveq	r6, #3376	; 0xd30
 d24:	bl	75c <strncpy@plt>
 d28:	ldr	r8, [pc, #640]	; fb0 <check_new_user+0x350>
 d2c:	eor	r7, r6, r5
 d30:	movw	r5, #60495	; 0xec4f
 d34:	mov	r6, #26
 d38:	str	sl, [sp, #4]
 d3c:	movt	r5, #20164	; 0x4ec4
 d40:	add	r8, pc, r8
 d44:	b	d6c <check_new_user+0x10c>
 d48:	ldr	r0, [r4, #56]	; 0x38
 d4c:	ldr	r1, [pc, #584]	; f9c <check_new_user+0x33c>
 d50:	ldr	r1, [pc, r1]
 d54:	ldr	r1, [r1, #416]	; 0x1a0
 d58:	bic	r0, r0, r1
 d5c:	str	r0, [r4, #56]	; 0x38
 d60:	sub	sp, fp, #28
 d64:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
 d68:	add	sl, sl, #1
 d6c:	ldrb	r9, [sl]
 d70:	cmp	r9, #0
 d74:	cmpne	r9, #46	; 0x2e
 d78:	beq	db8 <check_new_user+0x158>
 d7c:	bl	738 <__ctype_b_loc@plt>
 d80:	cmp	r9, #45	; 0x2d
 d84:	beq	d68 <check_new_user+0x108>
 d88:	ldr	r0, [r0]
 d8c:	add	r0, r0, r9, lsl #1
 d90:	ldrh	r0, [r0]
 d94:	ands	r0, r0, #2048	; 0x800
 d98:	bne	d68 <check_new_user+0x108>
 d9c:	mul	r0, r7, r9
 da0:	umull	r1, r2, r0, r5
 da4:	lsr	r1, r2, #3
 da8:	mls	r0, r1, r6, r0
 dac:	ldrb	r0, [r8, r0]
 db0:	strb	r0, [sl]
 db4:	b	d68 <check_new_user+0x108>
 db8:	ldr	r0, [sp, #4]
 dbc:	ldr	r8, [sp, #12]
 dc0:	ldr	r9, [sp, #8]
 dc4:	ldrb	r6, [r0]
 dc8:	cmp	r6, #0
 dcc:	beq	f08 <check_new_user+0x2a8>
 dd0:	add	r5, r0, #1
 dd4:	bl	738 <__ctype_b_loc@plt>
 dd8:	movw	r1, #52429	; 0xcccd
 ddc:	movt	r1, #52428	; 0xcccc
 de0:	ldr	r3, [r0]
 de4:	uxtb	r2, r6
 de8:	add	r3, r3, r2, lsl #1
 dec:	ldrb	r3, [r3, #1]
 df0:	tst	r3, #8
 df4:	beq	e14 <check_new_user+0x1b4>
 df8:	mul	r2, r7, r2
 dfc:	umull	r3, r6, r2, r1
 e00:	lsr	r3, r6, #3
 e04:	add	r3, r3, r3, lsl #2
 e08:	sub	r2, r2, r3, lsl #1
 e0c:	orr	r2, r2, #48	; 0x30
 e10:	strb	r2, [r5, #-1]
 e14:	ldrb	r6, [r5], #1
 e18:	cmp	r6, #0
 e1c:	bne	de0 <check_new_user+0x180>
 e20:	b	f08 <check_new_user+0x2a8>
 e24:	cmp	r1, #0
 e28:	beq	e48 <check_new_user+0x1e8>
 e2c:	add	r2, r4, #228	; 0xe4
 e30:	mov	r0, #1
 e34:	uxtab	r0, r0, r1
 e38:	ldrb	r1, [r2], #1
 e3c:	cmp	r1, #0
 e40:	bne	e34 <check_new_user+0x1d4>
 e44:	mul	r5, r0, r5
 e48:	ldr	r0, [pc, #336]	; fa0 <check_new_user+0x340>
 e4c:	add	r7, sp, #16
 e50:	vmov.i32	q8, #0	; 0x00000000
 e54:	mov	r2, #63	; 0x3f
 e58:	add	r0, pc, r0
 e5c:	ldrb	r6, [r0]
 e60:	cmp	r6, #0
 e64:	moveq	r1, #1
 e68:	movwne	r6, #3376	; 0xd30
 e6c:	strbeq	r1, [r0]
 e70:	mov	r0, #48	; 0x30
 e74:	mov	r1, r7
 e78:	moveq	r6, #3376	; 0xd30
 e7c:	vst1.64	{d16-d17}, [r1], r0
 e80:	add	r0, r7, #32
 e84:	vst1.64	{d16-d17}, [r0]
 e88:	add	r0, r7, #16
 e8c:	vst1.64	{d16-d17}, [r1]
 e90:	mov	r1, r9
 e94:	vst1.64	{d16-d17}, [r0]
 e98:	mov	r0, r7
 e9c:	bl	75c <strncpy@plt>
 ea0:	mov	r0, r7
 ea4:	mov	r1, #46	; 0x2e
 ea8:	eor	r5, r6, r5
 eac:	bl	768 <strrchr@plt>
 eb0:	cmp	r0, #0
 eb4:	beq	ed0 <check_new_user+0x270>
 eb8:	mov	r1, #0
 ebc:	strb	r1, [r0]
 ec0:	str	r5, [sp]
 ec4:	ldr	r2, [pc, #220]	; fa8 <check_new_user+0x348>
 ec8:	add	r2, pc, r2
 ecc:	b	ef8 <check_new_user+0x298>
 ed0:	add	r0, sp, #16
 ed4:	mov	r1, #58	; 0x3a
 ed8:	bl	768 <strrchr@plt>
 edc:	cmp	r0, #0
 ee0:	beq	f84 <check_new_user+0x324>
 ee4:	mov	r1, #0
 ee8:	strb	r1, [r0]
 eec:	str	r5, [sp]
 ef0:	ldr	r2, [pc, #172]	; fa4 <check_new_user+0x344>
 ef4:	add	r2, pc, r2
 ef8:	add	r3, sp, #16
 efc:	mov	r0, sl
 f00:	mov	r1, #63	; 0x3f
 f04:	bl	750 <snprintf@plt>
 f08:	ldrb	r0, [r8, #2]
 f0c:	tst	r0, #2
 f10:	bne	f1c <check_new_user+0x2bc>
 f14:	ldr	r0, [r4, #56]	; 0x38
 f18:	b	f34 <check_new_user+0x2d4>
 f1c:	ldr	r0, [r4, #56]	; 0x38
 f20:	ldr	r1, [pc, #140]	; fb4 <check_new_user+0x354>
 f24:	ldr	r1, [pc, r1]
 f28:	ldr	r1, [r1, #416]	; 0x1a0
 f2c:	bic	r0, r0, r1
 f30:	str	r0, [r4, #56]	; 0x38
 f34:	ldr	r1, [pc, #124]	; fb8 <check_new_user+0x358>
 f38:	ldr	r1, [pc, r1]
 f3c:	ldr	r1, [r1, #416]	; 0x1a0
 f40:	tst	r1, r0
 f44:	beq	f7c <check_new_user+0x31c>
 f48:	ldr	r0, [r4, #432]	; 0x1b0
 f4c:	add	r4, r4, #163	; 0xa3
 f50:	mov	r2, #64	; 0x40
 f54:	ldr	r1, [r0, #432]	; 0x1b0
 f58:	mov	r0, r4
 f5c:	bl	780 <rb_strlcpy@plt>
 f60:	mov	r0, r4
 f64:	mov	r1, r9
 f68:	bl	78c <irccmp@plt>
 f6c:	cmp	r0, #0
 f70:	ldrne	r0, [r8]
 f74:	orrne	r0, r0, #131072	; 0x20000
 f78:	strne	r0, [r8]
 f7c:	sub	sp, fp, #28
 f80:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
 f84:	mov	r0, sl
 f88:	mov	r1, r9
 f8c:	mov	r2, #63	; 0x3f
 f90:	bl	75c <strncpy@plt>
 f94:	b	f08 <check_new_user+0x2a8>
 f98:	bl	708 <rb_outofmemory@plt>
 f9c:	.word	0x00011300
 fa0:	.word	0x00011260
 fa4:	.word	0x00000190
 fa8:	.word	0x000001c5
 fac:	.word	0x000113b8
 fb0:	.word	0x00000356
 fb4:	.word	0x0001112c
 fb8:	.word	0x00011118

00000fbc <_modinit>:
 fbc:	push	{fp, lr}
 fc0:	mov	fp, sp
 fc4:	bl	714 <find_umode_slot@plt>
 fc8:	ldr	r1, [pc, #16]	; fe0 <_modinit+0x24>
 fcc:	ldr	r1, [pc, r1]
 fd0:	str	r0, [r1, #416]	; 0x1a0
 fd4:	bl	798 <construct_umodebuf@plt>
 fd8:	mov	r0, #0
 fdc:	pop	{fp, pc}
 fe0:	.word	0x00011084

00000fe4 <_moddeinit>:
 fe4:	ldr	r0, [pc, #12]	; ff8 <_moddeinit+0x14>
 fe8:	mov	r1, #0
 fec:	ldr	r0, [pc, r0]
 ff0:	str	r1, [r0, #416]	; 0x1a0
 ff4:	b	798 <construct_umodebuf@plt>
 ff8:	.word	0x00011064

Disassembly of section .fini:

00000ffc <_fini>:
     ffc:	push	{r3, lr}
    1000:	pop	{r3, pc}
