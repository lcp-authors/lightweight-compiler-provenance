
../repos/coreutils/src/sync:     file format elf32-littlearm


Disassembly of section .init:

00010bbc <.init>:
   10bbc:	push	{r3, lr}
   10bc0:	bl	111f8 <close@plt+0x3dc>
   10bc4:	pop	{r3, pc}

Disassembly of section .plt:

00010bc8 <calloc@plt-0x14>:
   10bc8:	push	{lr}		; (str lr, [sp, #-4]!)
   10bcc:	ldr	lr, [pc, #4]	; 10bd8 <calloc@plt-0x4>
   10bd0:	add	lr, pc, lr
   10bd4:	ldr	pc, [lr, #8]!
   10bd8:	andeq	r5, r1, r8, lsr #8

00010bdc <calloc@plt>:
   10bdc:	add	ip, pc, #0, 12
   10be0:	add	ip, ip, #86016	; 0x15000
   10be4:	ldr	pc, [ip, #1064]!	; 0x428

00010be8 <fputs_unlocked@plt>:
   10be8:	add	ip, pc, #0, 12
   10bec:	add	ip, ip, #86016	; 0x15000
   10bf0:	ldr	pc, [ip, #1056]!	; 0x420

00010bf4 <fsync@plt>:
   10bf4:	add	ip, pc, #0, 12
   10bf8:	add	ip, ip, #86016	; 0x15000
   10bfc:	ldr	pc, [ip, #1048]!	; 0x418

00010c00 <strcmp@plt>:
   10c00:	add	ip, pc, #0, 12
   10c04:	add	ip, ip, #86016	; 0x15000
   10c08:	ldr	pc, [ip, #1040]!	; 0x410

00010c0c <fflush@plt>:
   10c0c:	add	ip, pc, #0, 12
   10c10:	add	ip, ip, #86016	; 0x15000
   10c14:	ldr	pc, [ip, #1032]!	; 0x408

00010c18 <free@plt>:
   10c18:	add	ip, pc, #0, 12
   10c1c:	add	ip, ip, #86016	; 0x15000
   10c20:	ldr	pc, [ip, #1024]!	; 0x400

00010c24 <_exit@plt>:
   10c24:	add	ip, pc, #0, 12
   10c28:	add	ip, ip, #86016	; 0x15000
   10c2c:	ldr	pc, [ip, #1016]!	; 0x3f8

00010c30 <memcpy@plt>:
   10c30:	add	ip, pc, #0, 12
   10c34:	add	ip, ip, #86016	; 0x15000
   10c38:	ldr	pc, [ip, #1008]!	; 0x3f0

00010c3c <mbsinit@plt>:
   10c3c:	add	ip, pc, #0, 12
   10c40:	add	ip, ip, #86016	; 0x15000
   10c44:	ldr	pc, [ip, #1000]!	; 0x3e8

00010c48 <memcmp@plt>:
   10c48:	add	ip, pc, #0, 12
   10c4c:	add	ip, ip, #86016	; 0x15000
   10c50:	ldr	pc, [ip, #992]!	; 0x3e0

00010c54 <fputc_unlocked@plt>:
   10c54:	add	ip, pc, #0, 12
   10c58:	add	ip, ip, #86016	; 0x15000
   10c5c:	ldr	pc, [ip, #984]!	; 0x3d8

00010c60 <dcgettext@plt>:
   10c60:	add	ip, pc, #0, 12
   10c64:	add	ip, ip, #86016	; 0x15000
   10c68:	ldr	pc, [ip, #976]!	; 0x3d0

00010c6c <syncfs@plt>:
   10c6c:	add	ip, pc, #0, 12
   10c70:	add	ip, ip, #86016	; 0x15000
   10c74:	ldr	pc, [ip, #968]!	; 0x3c8

00010c78 <realloc@plt>:
   10c78:	add	ip, pc, #0, 12
   10c7c:	add	ip, ip, #86016	; 0x15000
   10c80:	ldr	pc, [ip, #960]!	; 0x3c0

00010c84 <textdomain@plt>:
   10c84:	add	ip, pc, #0, 12
   10c88:	add	ip, ip, #86016	; 0x15000
   10c8c:	ldr	pc, [ip, #952]!	; 0x3b8

00010c90 <iswprint@plt>:
   10c90:	add	ip, pc, #0, 12
   10c94:	add	ip, ip, #86016	; 0x15000
   10c98:	ldr	pc, [ip, #944]!	; 0x3b0

00010c9c <fwrite@plt>:
   10c9c:	add	ip, pc, #0, 12
   10ca0:	add	ip, ip, #86016	; 0x15000
   10ca4:	ldr	pc, [ip, #936]!	; 0x3a8

00010ca8 <lseek64@plt>:
   10ca8:	add	ip, pc, #0, 12
   10cac:	add	ip, ip, #86016	; 0x15000
   10cb0:	ldr	pc, [ip, #928]!	; 0x3a0

00010cb4 <__ctype_get_mb_cur_max@plt>:
   10cb4:	add	ip, pc, #0, 12
   10cb8:	add	ip, ip, #86016	; 0x15000
   10cbc:	ldr	pc, [ip, #920]!	; 0x398

00010cc0 <__fpending@plt>:
   10cc0:	add	ip, pc, #0, 12
   10cc4:	add	ip, ip, #86016	; 0x15000
   10cc8:	ldr	pc, [ip, #912]!	; 0x390

00010ccc <mbrtowc@plt>:
   10ccc:	add	ip, pc, #0, 12
   10cd0:	add	ip, ip, #86016	; 0x15000
   10cd4:	ldr	pc, [ip, #904]!	; 0x388

00010cd8 <error@plt>:
   10cd8:	add	ip, pc, #0, 12
   10cdc:	add	ip, ip, #86016	; 0x15000
   10ce0:	ldr	pc, [ip, #896]!	; 0x380

00010ce4 <open64@plt>:
   10ce4:	add	ip, pc, #0, 12
   10ce8:	add	ip, ip, #86016	; 0x15000
   10cec:	ldr	pc, [ip, #888]!	; 0x378

00010cf0 <malloc@plt>:
   10cf0:	add	ip, pc, #0, 12
   10cf4:	add	ip, ip, #86016	; 0x15000
   10cf8:	ldr	pc, [ip, #880]!	; 0x370

00010cfc <__libc_start_main@plt>:
   10cfc:	add	ip, pc, #0, 12
   10d00:	add	ip, ip, #86016	; 0x15000
   10d04:	ldr	pc, [ip, #872]!	; 0x368

00010d08 <__freading@plt>:
   10d08:	add	ip, pc, #0, 12
   10d0c:	add	ip, ip, #86016	; 0x15000
   10d10:	ldr	pc, [ip, #864]!	; 0x360

00010d14 <__gmon_start__@plt>:
   10d14:	add	ip, pc, #0, 12
   10d18:	add	ip, ip, #86016	; 0x15000
   10d1c:	ldr	pc, [ip, #856]!	; 0x358

00010d20 <getopt_long@plt>:
   10d20:	add	ip, pc, #0, 12
   10d24:	add	ip, ip, #86016	; 0x15000
   10d28:	ldr	pc, [ip, #848]!	; 0x350

00010d2c <__ctype_b_loc@plt>:
   10d2c:	add	ip, pc, #0, 12
   10d30:	add	ip, ip, #86016	; 0x15000
   10d34:	ldr	pc, [ip, #840]!	; 0x348

00010d38 <exit@plt>:
   10d38:	add	ip, pc, #0, 12
   10d3c:	add	ip, ip, #86016	; 0x15000
   10d40:	ldr	pc, [ip, #832]!	; 0x340

00010d44 <strlen@plt>:
   10d44:	add	ip, pc, #0, 12
   10d48:	add	ip, ip, #86016	; 0x15000
   10d4c:	ldr	pc, [ip, #824]!	; 0x338

00010d50 <__errno_location@plt>:
   10d50:	add	ip, pc, #0, 12
   10d54:	add	ip, ip, #86016	; 0x15000
   10d58:	ldr	pc, [ip, #816]!	; 0x330

00010d5c <__cxa_atexit@plt>:
   10d5c:	add	ip, pc, #0, 12
   10d60:	add	ip, ip, #86016	; 0x15000
   10d64:	ldr	pc, [ip, #808]!	; 0x328

00010d68 <memset@plt>:
   10d68:	add	ip, pc, #0, 12
   10d6c:	add	ip, ip, #86016	; 0x15000
   10d70:	ldr	pc, [ip, #800]!	; 0x320

00010d74 <__printf_chk@plt>:
   10d74:	add	ip, pc, #0, 12
   10d78:	add	ip, ip, #86016	; 0x15000
   10d7c:	ldr	pc, [ip, #792]!	; 0x318

00010d80 <fileno@plt>:
   10d80:	add	ip, pc, #0, 12
   10d84:	add	ip, ip, #86016	; 0x15000
   10d88:	ldr	pc, [ip, #784]!	; 0x310

00010d8c <__fprintf_chk@plt>:
   10d8c:	add	ip, pc, #0, 12
   10d90:	add	ip, ip, #86016	; 0x15000
   10d94:	ldr	pc, [ip, #776]!	; 0x308

00010d98 <fclose@plt>:
   10d98:	add	ip, pc, #0, 12
   10d9c:	add	ip, ip, #86016	; 0x15000
   10da0:	ldr	pc, [ip, #768]!	; 0x300

00010da4 <fseeko64@plt>:
   10da4:	add	ip, pc, #0, 12
   10da8:	add	ip, ip, #86016	; 0x15000
   10dac:	ldr	pc, [ip, #760]!	; 0x2f8

00010db0 <fcntl64@plt>:
   10db0:	add	ip, pc, #0, 12
   10db4:	add	ip, ip, #86016	; 0x15000
   10db8:	ldr	pc, [ip, #752]!	; 0x2f0

00010dbc <setlocale@plt>:
   10dbc:	add	ip, pc, #0, 12
   10dc0:	add	ip, ip, #86016	; 0x15000
   10dc4:	ldr	pc, [ip, #744]!	; 0x2e8

00010dc8 <strrchr@plt>:
   10dc8:	add	ip, pc, #0, 12
   10dcc:	add	ip, ip, #86016	; 0x15000
   10dd0:	ldr	pc, [ip, #736]!	; 0x2e0

00010dd4 <nl_langinfo@plt>:
   10dd4:	add	ip, pc, #0, 12
   10dd8:	add	ip, ip, #86016	; 0x15000
   10ddc:	ldr	pc, [ip, #728]!	; 0x2d8

00010de0 <bindtextdomain@plt>:
   10de0:	add	ip, pc, #0, 12
   10de4:	add	ip, ip, #86016	; 0x15000
   10de8:	ldr	pc, [ip, #720]!	; 0x2d0

00010dec <sync@plt>:
   10dec:	add	ip, pc, #0, 12
   10df0:	add	ip, ip, #86016	; 0x15000
   10df4:	ldr	pc, [ip, #712]!	; 0x2c8

00010df8 <strncmp@plt>:
   10df8:	add	ip, pc, #0, 12
   10dfc:	add	ip, ip, #86016	; 0x15000
   10e00:	ldr	pc, [ip, #704]!	; 0x2c0

00010e04 <fdatasync@plt>:
   10e04:	add	ip, pc, #0, 12
   10e08:	add	ip, ip, #86016	; 0x15000
   10e0c:	ldr	pc, [ip, #696]!	; 0x2b8

00010e10 <abort@plt>:
   10e10:	add	ip, pc, #0, 12
   10e14:	add	ip, ip, #86016	; 0x15000
   10e18:	ldr	pc, [ip, #688]!	; 0x2b0

00010e1c <close@plt>:
   10e1c:	add	ip, pc, #0, 12
   10e20:	add	ip, ip, #86016	; 0x15000
   10e24:	ldr	pc, [ip, #680]!	; 0x2a8

Disassembly of section .text:

00010e28 <.text>:
   10e28:	strd	r4, [sp, #-36]!	; 0xffffffdc
   10e2c:	mov	r5, r0
   10e30:	mov	r4, r1
   10e34:	ldr	r0, [r1]
   10e38:	strd	r6, [sp, #8]
   10e3c:	mov	r6, #0
   10e40:	movw	r7, #20532	; 0x5034
   10e44:	movt	r7, #1
   10e48:	strd	r8, [sp, #16]
   10e4c:	mov	r9, r6
   10e50:	strd	sl, [sp, #24]
   10e54:	mov	r8, r6
   10e58:	str	lr, [sp, #32]
   10e5c:	sub	sp, sp, #44	; 0x2c
   10e60:	bl	118f0 <close@plt+0xad4>
   10e64:	ldr	sl, [pc, #844]	; 111b8 <close@plt+0x39c>
   10e68:	movw	r1, #19988	; 0x4e14
   10e6c:	movt	r1, #1
   10e70:	mov	r0, #6
   10e74:	bl	10dbc <setlocale@plt>
   10e78:	movw	r1, #20472	; 0x4ff8
   10e7c:	movt	r1, #1
   10e80:	movw	r0, #20304	; 0x4f50
   10e84:	movt	r0, #1
   10e88:	bl	10de0 <bindtextdomain@plt>
   10e8c:	movw	r0, #20304	; 0x4f50
   10e90:	movt	r0, #1
   10e94:	bl	10c84 <textdomain@plt>
   10e98:	movw	r0, #5660	; 0x161c
   10e9c:	movt	r0, #1
   10ea0:	bl	14c90 <close@plt+0x3e74>
   10ea4:	mov	r3, sl
   10ea8:	mov	r2, r7
   10eac:	str	r8, [sp]
   10eb0:	mov	r1, r4
   10eb4:	mov	r0, r5
   10eb8:	bl	10d20 <getopt_long@plt>
   10ebc:	cmn	r0, #1
   10ec0:	beq	10f44 <close@plt+0x128>
   10ec4:	cmn	r0, #2
   10ec8:	beq	1118c <close@plt+0x370>
   10ecc:	ble	10ee0 <close@plt+0xc4>
   10ed0:	cmp	r0, #100	; 0x64
   10ed4:	bne	10f34 <close@plt+0x118>
   10ed8:	mov	r9, #1
   10edc:	b	10ea4 <close@plt+0x88>
   10ee0:	cmn	r0, #3
   10ee4:	bne	11184 <close@plt+0x368>
   10ee8:	movw	r1, #20496	; 0x5010
   10eec:	movt	r1, #1
   10ef0:	movw	r2, #20516	; 0x5024
   10ef4:	movt	r2, #1
   10ef8:	movw	r3, #24796	; 0x60dc
   10efc:	movt	r3, #2
   10f00:	movw	r0, #24892	; 0x613c
   10f04:	movt	r0, #2
   10f08:	str	r2, [sp]
   10f0c:	movw	r2, #20300	; 0x4f4c
   10f10:	movt	r2, #1
   10f14:	stmib	sp, {r1, r8}
   10f18:	movw	r1, #19772	; 0x4d3c
   10f1c:	movt	r1, #1
   10f20:	ldr	r0, [r0]
   10f24:	ldr	r3, [r3]
   10f28:	bl	1407c <close@plt+0x3260>
   10f2c:	mov	r0, #0
   10f30:	bl	10d38 <exit@plt>
   10f34:	cmp	r0, #102	; 0x66
   10f38:	bne	11184 <close@plt+0x368>
   10f3c:	mov	r6, #1
   10f40:	b	10ea4 <close@plt+0x88>
   10f44:	movw	r8, #24880	; 0x6130
   10f48:	movt	r8, #2
   10f4c:	ands	r7, r9, r6
   10f50:	ldr	r3, [r8]
   10f54:	bne	11194 <close@plt+0x378>
   10f58:	cmp	r3, r5
   10f5c:	movlt	r2, #0
   10f60:	andge	r2, r9, #1
   10f64:	cmp	r2, #0
   10f68:	movwne	r1, #20584	; 0x5068
   10f6c:	movtne	r1, #1
   10f70:	bne	1119c <close@plt+0x380>
   10f74:	cmp	r3, r5
   10f78:	bge	11144 <close@plt+0x328>
   10f7c:	movw	r2, #20696	; 0x50d8
   10f80:	movt	r2, #1
   10f84:	cmp	r6, #0
   10f88:	str	r2, [sp, #32]
   10f8c:	moveq	r2, r9
   10f90:	movne	r2, #2
   10f94:	mov	r9, #1
   10f98:	str	r2, [sp, #28]
   10f9c:	movw	r2, #20640	; 0x50a0
   10fa0:	movt	r2, #1
   10fa4:	str	r2, [sp, #24]
   10fa8:	movw	r2, #20676	; 0x50c4
   10fac:	movt	r2, #1
   10fb0:	str	r2, [sp, #36]	; 0x24
   10fb4:	b	11034 <close@plt+0x218>
   10fb8:	mov	r1, #3
   10fbc:	mov	r0, r6
   10fc0:	bl	11708 <close@plt+0x8ec>
   10fc4:	cmn	r0, #1
   10fc8:	beq	110a8 <close@plt+0x28c>
   10fcc:	bic	r2, r0, #2048	; 0x800
   10fd0:	mov	r1, #4
   10fd4:	mov	r0, r6
   10fd8:	bl	11708 <close@plt+0x8ec>
   10fdc:	cmp	r0, #0
   10fe0:	blt	110a8 <close@plt+0x28c>
   10fe4:	ldr	r3, [sp, #28]
   10fe8:	cmp	r3, #1
   10fec:	beq	1116c <close@plt+0x350>
   10ff0:	cmp	r3, #2
   10ff4:	beq	11178 <close@plt+0x35c>
   10ff8:	mov	r0, r6
   10ffc:	bl	10bf4 <fsync@plt>
   11000:	cmp	r0, #0
   11004:	movge	sl, #1
   11008:	blt	11134 <close@plt+0x318>
   1100c:	mov	r0, r6
   11010:	bl	10e1c <close@plt>
   11014:	cmp	r0, #0
   11018:	blt	110f0 <close@plt+0x2d4>
   1101c:	ldr	r3, [r8]
   11020:	and	r9, r9, sl
   11024:	add	r3, r3, #1
   11028:	cmp	r3, r5
   1102c:	str	r3, [r8]
   11030:	bge	1114c <close@plt+0x330>
   11034:	ldr	r7, [r4, r3, lsl #2]
   11038:	mov	r1, #2048	; 0x800
   1103c:	mov	r0, r7
   11040:	bl	10ce4 <open64@plt>
   11044:	subs	r6, r0, #0
   11048:	bge	10fb8 <close@plt+0x19c>
   1104c:	bl	10d50 <__errno_location@plt>
   11050:	movw	r1, #2049	; 0x801
   11054:	ldr	fp, [r0]
   11058:	mov	r0, r7
   1105c:	bl	10ce4 <open64@plt>
   11060:	subs	r6, r0, #0
   11064:	bge	10fb8 <close@plt+0x19c>
   11068:	mov	r2, #5
   1106c:	movw	r1, #20620	; 0x508c
   11070:	movt	r1, #1
   11074:	mov	r0, #0
   11078:	bl	10c60 <dcgettext@plt>
   1107c:	mov	r6, r0
   11080:	mov	r1, r7
   11084:	mov	r0, #4
   11088:	mov	sl, #0
   1108c:	bl	1392c <close@plt+0x2b10>
   11090:	mov	r3, r0
   11094:	mov	r2, r6
   11098:	mov	r1, fp
   1109c:	mov	r0, sl
   110a0:	bl	10cd8 <error@plt>
   110a4:	b	1101c <close@plt+0x200>
   110a8:	bl	10d50 <__errno_location@plt>
   110ac:	ldr	r1, [sp, #24]
   110b0:	mov	r2, #5
   110b4:	ldr	fp, [r0]
   110b8:	mov	r0, #0
   110bc:	mov	sl, r0
   110c0:	bl	10c60 <dcgettext@plt>
   110c4:	mov	r2, r0
   110c8:	mov	r1, r7
   110cc:	mov	r0, #4
   110d0:	str	r2, [sp, #20]
   110d4:	bl	1392c <close@plt+0x2b10>
   110d8:	mov	r3, r0
   110dc:	mov	r1, fp
   110e0:	ldr	r2, [sp, #20]
   110e4:	mov	r0, sl
   110e8:	bl	10cd8 <error@plt>
   110ec:	b	1100c <close@plt+0x1f0>
   110f0:	bl	10d50 <__errno_location@plt>
   110f4:	ldr	r6, [r0]
   110f8:	mov	r2, #5
   110fc:	mov	r0, #0
   11100:	mov	sl, r0
   11104:	ldr	r1, [sp, #32]
   11108:	bl	10c60 <dcgettext@plt>
   1110c:	mov	fp, r0
   11110:	mov	r1, r7
   11114:	mov	r0, #4
   11118:	bl	1392c <close@plt+0x2b10>
   1111c:	mov	r3, r0
   11120:	mov	r2, fp
   11124:	mov	r1, r6
   11128:	mov	r0, sl
   1112c:	bl	10cd8 <error@plt>
   11130:	b	1101c <close@plt+0x200>
   11134:	bl	10d50 <__errno_location@plt>
   11138:	mov	r2, #5
   1113c:	ldr	r1, [sp, #36]	; 0x24
   11140:	b	110b4 <close@plt+0x298>
   11144:	mov	r9, #1
   11148:	bl	10dec <sync@plt>
   1114c:	eor	r0, r9, #1
   11150:	add	sp, sp, #44	; 0x2c
   11154:	ldrd	r4, [sp]
   11158:	ldrd	r6, [sp, #8]
   1115c:	ldrd	r8, [sp, #16]
   11160:	ldrd	sl, [sp, #24]
   11164:	add	sp, sp, #32
   11168:	pop	{pc}		; (ldr pc, [sp], #4)
   1116c:	mov	r0, r6
   11170:	bl	10e04 <fdatasync@plt>
   11174:	b	11000 <close@plt+0x1e4>
   11178:	mov	r0, r6
   1117c:	bl	10c6c <syncfs@plt>
   11180:	b	11000 <close@plt+0x1e4>
   11184:	mov	r0, #1
   11188:	bl	112ac <close@plt+0x490>
   1118c:	mov	r0, #0
   11190:	bl	112ac <close@plt+0x490>
   11194:	movw	r1, #20536	; 0x5038
   11198:	movt	r1, #1
   1119c:	mov	r2, #5
   111a0:	mov	r0, #0
   111a4:	bl	10c60 <dcgettext@plt>
   111a8:	mov	r2, r0
   111ac:	mov	r1, #0
   111b0:	mov	r0, #1
   111b4:	bl	10cd8 <error@plt>
   111b8:	andeq	r4, r1, ip, ror #25
   111bc:	mov	fp, #0
   111c0:	mov	lr, #0
   111c4:	pop	{r1}		; (ldr r1, [sp], #4)
   111c8:	mov	r2, sp
   111cc:	push	{r2}		; (str r2, [sp, #-4]!)
   111d0:	push	{r0}		; (str r0, [sp, #-4]!)
   111d4:	ldr	ip, [pc, #16]	; 111ec <close@plt+0x3d0>
   111d8:	push	{ip}		; (str ip, [sp, #-4]!)
   111dc:	ldr	r0, [pc, #12]	; 111f0 <close@plt+0x3d4>
   111e0:	ldr	r3, [pc, #12]	; 111f4 <close@plt+0x3d8>
   111e4:	bl	10cfc <__libc_start_main@plt>
   111e8:	bl	10e10 <abort@plt>
   111ec:	andeq	r4, r1, ip, lsl #25
   111f0:	andeq	r0, r1, r8, lsr #28
   111f4:	andeq	r4, r1, ip, lsr #24
   111f8:	ldr	r3, [pc, #20]	; 11214 <close@plt+0x3f8>
   111fc:	ldr	r2, [pc, #20]	; 11218 <close@plt+0x3fc>
   11200:	add	r3, pc, r3
   11204:	ldr	r2, [r3, r2]
   11208:	cmp	r2, #0
   1120c:	bxeq	lr
   11210:	b	10d14 <__gmon_start__@plt>
   11214:	strdeq	r4, [r1], -r8
   11218:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   1121c:	ldr	r0, [pc, #24]	; 1123c <close@plt+0x420>
   11220:	ldr	r3, [pc, #24]	; 11240 <close@plt+0x424>
   11224:	cmp	r3, r0
   11228:	bxeq	lr
   1122c:	ldr	r3, [pc, #16]	; 11244 <close@plt+0x428>
   11230:	cmp	r3, #0
   11234:	bxeq	lr
   11238:	bx	r3
   1123c:	andeq	r6, r2, r4, lsr #2
   11240:	andeq	r6, r2, r4, lsr #2
   11244:	andeq	r0, r0, r0
   11248:	ldr	r0, [pc, #36]	; 11274 <close@plt+0x458>
   1124c:	ldr	r1, [pc, #36]	; 11278 <close@plt+0x45c>
   11250:	sub	r1, r1, r0
   11254:	asr	r1, r1, #2
   11258:	add	r1, r1, r1, lsr #31
   1125c:	asrs	r1, r1, #1
   11260:	bxeq	lr
   11264:	ldr	r3, [pc, #16]	; 1127c <close@plt+0x460>
   11268:	cmp	r3, #0
   1126c:	bxeq	lr
   11270:	bx	r3
   11274:	andeq	r6, r2, r4, lsr #2
   11278:	andeq	r6, r2, r4, lsr #2
   1127c:	andeq	r0, r0, r0
   11280:	push	{r4, lr}
   11284:	ldr	r4, [pc, #24]	; 112a4 <close@plt+0x488>
   11288:	ldrb	r3, [r4]
   1128c:	cmp	r3, #0
   11290:	popne	{r4, pc}
   11294:	bl	1121c <close@plt+0x400>
   11298:	mov	r3, #1
   1129c:	strb	r3, [r4]
   112a0:	pop	{r4, pc}
   112a4:	andeq	r6, r2, r0, asr #2
   112a8:	b	11248 <close@plt+0x42c>
   112ac:	subs	r6, r0, #0
   112b0:	str	r7, [sp, #-8]!
   112b4:	str	lr, [sp, #4]
   112b8:	sub	sp, sp, #56	; 0x38
   112bc:	beq	11304 <close@plt+0x4e8>
   112c0:	movw	r3, #24888	; 0x6138
   112c4:	movt	r3, #2
   112c8:	ldr	r4, [r3]
   112cc:	mov	r2, #5
   112d0:	movw	r1, #19780	; 0x4d44
   112d4:	movt	r1, #1
   112d8:	mov	r0, #0
   112dc:	bl	10c60 <dcgettext@plt>
   112e0:	movw	r3, #24912	; 0x6150
   112e4:	movt	r3, #2
   112e8:	mov	r2, r0
   112ec:	mov	r1, #1
   112f0:	ldr	r3, [r3]
   112f4:	mov	r0, r4
   112f8:	bl	10d8c <__fprintf_chk@plt>
   112fc:	mov	r0, r6
   11300:	bl	10d38 <exit@plt>
   11304:	mov	r2, #5
   11308:	movw	r1, #19820	; 0x4d6c
   1130c:	movt	r1, #1
   11310:	movw	r7, #24892	; 0x613c
   11314:	movt	r7, #2
   11318:	bl	10c60 <dcgettext@plt>
   1131c:	movw	r3, #24912	; 0x6150
   11320:	movt	r3, #2
   11324:	mov	r1, r0
   11328:	mov	r0, #1
   1132c:	ldr	r2, [r3]
   11330:	bl	10d74 <__printf_chk@plt>
   11334:	mov	r2, #5
   11338:	movw	r1, #19852	; 0x4d8c
   1133c:	movt	r1, #1
   11340:	mov	r0, r6
   11344:	bl	10c60 <dcgettext@plt>
   11348:	ldr	r1, [r7]
   1134c:	bl	10be8 <fputs_unlocked@plt>
   11350:	mov	r2, #5
   11354:	movw	r1, #19992	; 0x4e18
   11358:	movt	r1, #1
   1135c:	mov	r0, r6
   11360:	bl	10c60 <dcgettext@plt>
   11364:	ldr	r1, [r7]
   11368:	bl	10be8 <fputs_unlocked@plt>
   1136c:	mov	r2, #5
   11370:	movw	r1, #20060	; 0x4e5c
   11374:	movt	r1, #1
   11378:	mov	r0, r6
   1137c:	bl	10c60 <dcgettext@plt>
   11380:	ldr	r1, [r7]
   11384:	bl	10be8 <fputs_unlocked@plt>
   11388:	mov	r2, #5
   1138c:	movw	r1, #20132	; 0x4ea4
   11390:	movt	r1, #1
   11394:	mov	r0, r6
   11398:	bl	10c60 <dcgettext@plt>
   1139c:	ldr	r1, [r7]
   113a0:	bl	10be8 <fputs_unlocked@plt>
   113a4:	mov	r2, #5
   113a8:	movw	r1, #20180	; 0x4ed4
   113ac:	movt	r1, #1
   113b0:	mov	r0, r6
   113b4:	bl	10c60 <dcgettext@plt>
   113b8:	ldr	r1, [r7]
   113bc:	bl	10be8 <fputs_unlocked@plt>
   113c0:	movw	lr, #19636	; 0x4cb4
   113c4:	movt	lr, #1
   113c8:	ldr	ip, [lr]
   113cc:	ldr	r4, [lr, #4]
   113d0:	ldrd	r8, [lr, #8]
   113d4:	subs	r1, ip, #0
   113d8:	str	ip, [sp]
   113dc:	ldrd	r2, [lr, #16]
   113e0:	str	r4, [sp, #4]
   113e4:	ldrd	r4, [lr, #24]
   113e8:	strd	r8, [sp, #8]
   113ec:	ldrd	r8, [lr, #32]
   113f0:	strd	r2, [sp, #16]
   113f4:	ldrd	r2, [lr, #40]	; 0x28
   113f8:	strd	r4, [sp, #24]
   113fc:	ldrd	r4, [lr, #48]	; 0x30
   11400:	strd	r8, [sp, #32]
   11404:	strd	r2, [sp, #40]	; 0x28
   11408:	strd	r4, [sp, #48]	; 0x30
   1140c:	movwne	r5, #19772	; 0x4d3c
   11410:	mov	r4, sp
   11414:	movtne	r5, #1
   11418:	bne	11510 <close@plt+0x6f4>
   1141c:	ldr	r4, [r4, #4]
   11420:	movw	r1, #20236	; 0x4f0c
   11424:	movt	r1, #1
   11428:	mov	r2, #5
   1142c:	cmp	r4, #0
   11430:	beq	11524 <close@plt+0x708>
   11434:	mov	r0, #0
   11438:	bl	10c60 <dcgettext@plt>
   1143c:	mov	r1, r0
   11440:	movw	r3, #20260	; 0x4f24
   11444:	movt	r3, #1
   11448:	movw	r2, #20300	; 0x4f4c
   1144c:	movt	r2, #1
   11450:	mov	r0, #1
   11454:	bl	10d74 <__printf_chk@plt>
   11458:	mov	r1, #0
   1145c:	mov	r0, #5
   11460:	bl	10dbc <setlocale@plt>
   11464:	cmp	r0, #0
   11468:	movweq	r5, #19772	; 0x4d3c
   1146c:	movteq	r5, #1
   11470:	beq	11494 <close@plt+0x678>
   11474:	movw	r1, #20316	; 0x4f5c
   11478:	movt	r1, #1
   1147c:	mov	r2, #3
   11480:	movw	r5, #19772	; 0x4d3c
   11484:	movt	r5, #1
   11488:	bl	10df8 <strncmp@plt>
   1148c:	cmp	r0, #0
   11490:	bne	115dc <close@plt+0x7c0>
   11494:	mov	r2, #5
   11498:	movw	r1, #20392	; 0x4fa8
   1149c:	movt	r1, #1
   114a0:	mov	r0, #0
   114a4:	bl	10c60 <dcgettext@plt>
   114a8:	mov	r1, r0
   114ac:	movw	r3, #19772	; 0x4d3c
   114b0:	movt	r3, #1
   114b4:	movw	r2, #20260	; 0x4f24
   114b8:	movt	r2, #1
   114bc:	mov	r0, #1
   114c0:	bl	10d74 <__printf_chk@plt>
   114c4:	mov	r2, #5
   114c8:	movw	r1, #20420	; 0x4fc4
   114cc:	movt	r1, #1
   114d0:	mov	r0, #0
   114d4:	bl	10c60 <dcgettext@plt>
   114d8:	movw	r2, #20724	; 0x50f4
   114dc:	movt	r2, #1
   114e0:	cmp	r4, r5
   114e4:	movw	r3, #19988	; 0x4e14
   114e8:	movt	r3, #1
   114ec:	mov	r1, r0
   114f0:	moveq	r3, r2
   114f4:	mov	r2, r4
   114f8:	mov	r0, #1
   114fc:	bl	10d74 <__printf_chk@plt>
   11500:	b	112fc <close@plt+0x4e0>
   11504:	ldr	r1, [r4, #8]!
   11508:	cmp	r1, #0
   1150c:	beq	1141c <close@plt+0x600>
   11510:	mov	r0, r5
   11514:	bl	10c00 <strcmp@plt>
   11518:	cmp	r0, #0
   1151c:	bne	11504 <close@plt+0x6e8>
   11520:	b	1141c <close@plt+0x600>
   11524:	mov	r0, r4
   11528:	bl	10c60 <dcgettext@plt>
   1152c:	mov	r1, r0
   11530:	movw	r3, #20260	; 0x4f24
   11534:	movt	r3, #1
   11538:	movw	r2, #20300	; 0x4f4c
   1153c:	movt	r2, #1
   11540:	mov	r0, #1
   11544:	bl	10d74 <__printf_chk@plt>
   11548:	mov	r1, r4
   1154c:	mov	r0, #5
   11550:	bl	10dbc <setlocale@plt>
   11554:	cmp	r0, #0
   11558:	beq	11574 <close@plt+0x758>
   1155c:	movw	r1, #20316	; 0x4f5c
   11560:	movt	r1, #1
   11564:	mov	r2, #3
   11568:	bl	10df8 <strncmp@plt>
   1156c:	cmp	r0, #0
   11570:	bne	115d0 <close@plt+0x7b4>
   11574:	mov	r2, #5
   11578:	movw	r1, #20392	; 0x4fa8
   1157c:	movt	r1, #1
   11580:	mov	r0, #0
   11584:	bl	10c60 <dcgettext@plt>
   11588:	mov	r1, r0
   1158c:	movw	r3, #19772	; 0x4d3c
   11590:	movt	r3, #1
   11594:	movw	r2, #20260	; 0x4f24
   11598:	movt	r2, #1
   1159c:	mov	r0, #1
   115a0:	bl	10d74 <__printf_chk@plt>
   115a4:	movw	r1, #20420	; 0x4fc4
   115a8:	movt	r1, #1
   115ac:	mov	r2, #5
   115b0:	mov	r0, #0
   115b4:	bl	10c60 <dcgettext@plt>
   115b8:	movw	r4, #19772	; 0x4d3c
   115bc:	movt	r4, #1
   115c0:	movw	r3, #20724	; 0x50f4
   115c4:	movt	r3, #1
   115c8:	mov	r1, r0
   115cc:	b	114f4 <close@plt+0x6d8>
   115d0:	movw	r5, #19772	; 0x4d3c
   115d4:	movt	r5, #1
   115d8:	mov	r4, r5
   115dc:	mov	r2, #5
   115e0:	movw	r1, #20320	; 0x4f60
   115e4:	movt	r1, #1
   115e8:	mov	r0, #0
   115ec:	bl	10c60 <dcgettext@plt>
   115f0:	ldr	r1, [r7]
   115f4:	bl	10be8 <fputs_unlocked@plt>
   115f8:	b	11494 <close@plt+0x678>
   115fc:	movw	r3, #24900	; 0x6144
   11600:	movt	r3, #2
   11604:	str	r0, [r3]
   11608:	bx	lr
   1160c:	movw	r3, #24900	; 0x6144
   11610:	movt	r3, #2
   11614:	strb	r0, [r3, #4]
   11618:	bx	lr
   1161c:	movw	r3, #24892	; 0x613c
   11620:	movt	r3, #2
   11624:	strd	r4, [sp, #-16]!
   11628:	ldr	r0, [r3]
   1162c:	str	r6, [sp, #8]
   11630:	str	lr, [sp, #12]
   11634:	sub	sp, sp, #8
   11638:	bl	14750 <close@plt+0x3934>
   1163c:	cmp	r0, #0
   11640:	beq	1166c <close@plt+0x850>
   11644:	movw	r4, #24900	; 0x6144
   11648:	movt	r4, #2
   1164c:	ldrb	r6, [r4, #4]
   11650:	bl	10d50 <__errno_location@plt>
   11654:	mov	r5, r0
   11658:	cmp	r6, #0
   1165c:	beq	11698 <close@plt+0x87c>
   11660:	ldr	r3, [r0]
   11664:	cmp	r3, #32
   11668:	bne	11698 <close@plt+0x87c>
   1166c:	movw	r3, #24888	; 0x6138
   11670:	movt	r3, #2
   11674:	ldr	r0, [r3]
   11678:	bl	14750 <close@plt+0x3934>
   1167c:	cmp	r0, #0
   11680:	bne	116e0 <close@plt+0x8c4>
   11684:	add	sp, sp, #8
   11688:	ldrd	r4, [sp]
   1168c:	ldr	r6, [sp, #8]
   11690:	add	sp, sp, #12
   11694:	pop	{pc}		; (ldr pc, [sp], #4)
   11698:	movw	r1, #20876	; 0x518c
   1169c:	movt	r1, #1
   116a0:	mov	r2, #5
   116a4:	mov	r0, #0
   116a8:	bl	10c60 <dcgettext@plt>
   116ac:	mov	r6, r0
   116b0:	ldr	r0, [r4]
   116b4:	cmp	r0, #0
   116b8:	beq	116f0 <close@plt+0x8d4>
   116bc:	ldr	r4, [r5]
   116c0:	bl	139f4 <close@plt+0x2bd8>
   116c4:	mov	r3, r0
   116c8:	movw	r2, #20888	; 0x5198
   116cc:	movt	r2, #1
   116d0:	mov	r0, #0
   116d4:	str	r6, [sp]
   116d8:	mov	r1, r4
   116dc:	bl	10cd8 <error@plt>
   116e0:	movw	r3, #24800	; 0x60e0
   116e4:	movt	r3, #2
   116e8:	ldr	r0, [r3]
   116ec:	bl	10c24 <_exit@plt>
   116f0:	mov	r3, r6
   116f4:	movw	r2, #20892	; 0x519c
   116f8:	movt	r2, #1
   116fc:	ldr	r1, [r5]
   11700:	bl	10cd8 <error@plt>
   11704:	b	116e0 <close@plt+0x8c4>
   11708:	push	{r1, r2, r3}
   1170c:	strd	r4, [sp, #-20]!	; 0xffffffec
   11710:	strd	r6, [sp, #8]
   11714:	str	lr, [sp, #16]
   11718:	sub	sp, sp, #8
   1171c:	ldr	r1, [sp, #28]
   11720:	add	r2, sp, #32
   11724:	str	r2, [sp, #4]
   11728:	cmp	r1, #0
   1172c:	beq	11808 <close@plt+0x9ec>
   11730:	movw	r3, #1030	; 0x406
   11734:	mov	r6, r0
   11738:	cmp	r1, r3
   1173c:	beq	11818 <close@plt+0x9fc>
   11740:	cmp	r1, #11
   11744:	beq	117c0 <close@plt+0x9a4>
   11748:	ble	117a0 <close@plt+0x984>
   1174c:	movw	r2, #1031	; 0x407
   11750:	cmp	r1, r2
   11754:	bgt	117dc <close@plt+0x9c0>
   11758:	cmp	r1, r3
   1175c:	bge	1176c <close@plt+0x950>
   11760:	movw	r3, #1025	; 0x401
   11764:	cmp	r1, r3
   11768:	beq	117c0 <close@plt+0x9a4>
   1176c:	ldr	r3, [sp, #4]
   11770:	mov	r0, r6
   11774:	ldr	r2, [r3]
   11778:	bl	10db0 <fcntl64@plt>
   1177c:	mov	r4, r0
   11780:	mov	r0, r4
   11784:	add	sp, sp, #8
   11788:	ldrd	r4, [sp]
   1178c:	ldrd	r6, [sp, #8]
   11790:	ldr	lr, [sp, #16]
   11794:	add	sp, sp, #20
   11798:	add	sp, sp, #12
   1179c:	bx	lr
   117a0:	cmp	r1, #4
   117a4:	beq	1176c <close@plt+0x950>
   117a8:	bgt	117d0 <close@plt+0x9b4>
   117ac:	cmp	r1, #2
   117b0:	beq	1176c <close@plt+0x950>
   117b4:	bgt	117c0 <close@plt+0x9a4>
   117b8:	cmp	r1, #1
   117bc:	bne	1176c <close@plt+0x950>
   117c0:	mov	r0, r6
   117c4:	bl	10db0 <fcntl64@plt>
   117c8:	mov	r4, r0
   117cc:	b	11780 <close@plt+0x964>
   117d0:	cmp	r1, #9
   117d4:	bne	1176c <close@plt+0x950>
   117d8:	b	117c0 <close@plt+0x9a4>
   117dc:	movw	r3, #1033	; 0x409
   117e0:	cmp	r1, r3
   117e4:	beq	1176c <close@plt+0x950>
   117e8:	blt	117c0 <close@plt+0x9a4>
   117ec:	movw	r3, #1034	; 0x40a
   117f0:	cmp	r1, r3
   117f4:	bne	1176c <close@plt+0x950>
   117f8:	mov	r0, r6
   117fc:	bl	10db0 <fcntl64@plt>
   11800:	mov	r4, r0
   11804:	b	11780 <close@plt+0x964>
   11808:	ldr	r2, [sp, #32]
   1180c:	bl	10db0 <fcntl64@plt>
   11810:	mov	r4, r0
   11814:	b	11780 <close@plt+0x964>
   11818:	movw	r5, #24908	; 0x614c
   1181c:	movt	r5, #2
   11820:	ldr	r7, [r2]
   11824:	add	r2, sp, #36	; 0x24
   11828:	ldr	r3, [r5]
   1182c:	str	r2, [sp, #4]
   11830:	mov	r2, r7
   11834:	cmp	r3, #0
   11838:	blt	11854 <close@plt+0xa38>
   1183c:	bl	10db0 <fcntl64@plt>
   11840:	subs	r4, r0, #0
   11844:	blt	118bc <close@plt+0xaa0>
   11848:	mov	r3, #1
   1184c:	str	r3, [r5]
   11850:	b	11780 <close@plt+0x964>
   11854:	mov	r1, #0
   11858:	bl	10db0 <fcntl64@plt>
   1185c:	subs	r4, r0, #0
   11860:	blt	11780 <close@plt+0x964>
   11864:	ldr	r3, [r5]
   11868:	cmn	r3, #1
   1186c:	bne	11780 <close@plt+0x964>
   11870:	mov	r1, #1
   11874:	mov	r0, r4
   11878:	bl	10db0 <fcntl64@plt>
   1187c:	subs	r2, r0, #0
   11880:	blt	1189c <close@plt+0xa80>
   11884:	orr	r2, r2, #1
   11888:	mov	r1, #2
   1188c:	mov	r0, r4
   11890:	bl	10db0 <fcntl64@plt>
   11894:	cmn	r0, #1
   11898:	bne	11780 <close@plt+0x964>
   1189c:	bl	10d50 <__errno_location@plt>
   118a0:	mov	r5, r0
   118a4:	mov	r0, r4
   118a8:	ldr	r6, [r5]
   118ac:	mvn	r4, #0
   118b0:	bl	10e1c <close@plt>
   118b4:	str	r6, [r5]
   118b8:	b	11780 <close@plt+0x964>
   118bc:	bl	10d50 <__errno_location@plt>
   118c0:	ldr	r3, [r0]
   118c4:	cmp	r3, #22
   118c8:	bne	11848 <close@plt+0xa2c>
   118cc:	mov	r2, r7
   118d0:	mov	r0, r6
   118d4:	mov	r1, #0
   118d8:	bl	10db0 <fcntl64@plt>
   118dc:	subs	r4, r0, #0
   118e0:	mvnge	r3, #0
   118e4:	strge	r3, [r5]
   118e8:	bge	11870 <close@plt+0xa54>
   118ec:	b	11780 <close@plt+0x964>
   118f0:	strd	r4, [sp, #-16]!
   118f4:	subs	r4, r0, #0
   118f8:	str	r6, [sp, #8]
   118fc:	str	lr, [sp, #12]
   11900:	beq	11998 <close@plt+0xb7c>
   11904:	mov	r1, #47	; 0x2f
   11908:	bl	10dc8 <strrchr@plt>
   1190c:	subs	r5, r0, #0
   11910:	beq	11970 <close@plt+0xb54>
   11914:	add	r6, r5, #1
   11918:	sub	r3, r6, r4
   1191c:	cmp	r3, #6
   11920:	ble	11970 <close@plt+0xb54>
   11924:	movw	r1, #20952	; 0x51d8
   11928:	movt	r1, #1
   1192c:	mov	r2, #7
   11930:	sub	r0, r5, #6
   11934:	bl	10df8 <strncmp@plt>
   11938:	cmp	r0, #0
   1193c:	bne	11970 <close@plt+0xb54>
   11940:	movw	r1, #20960	; 0x51e0
   11944:	movt	r1, #1
   11948:	mov	r2, #3
   1194c:	mov	r0, r6
   11950:	bl	10df8 <strncmp@plt>
   11954:	cmp	r0, #0
   11958:	movne	r4, r6
   1195c:	bne	11970 <close@plt+0xb54>
   11960:	add	r4, r5, #4
   11964:	movw	r3, #24872	; 0x6128
   11968:	movt	r3, #2
   1196c:	str	r4, [r3]
   11970:	movw	r2, #24912	; 0x6150
   11974:	movt	r2, #2
   11978:	ldr	r6, [sp, #8]
   1197c:	movw	r3, #24876	; 0x612c
   11980:	movt	r3, #2
   11984:	str	r4, [r2]
   11988:	str	r4, [r3]
   1198c:	ldrd	r4, [sp]
   11990:	add	sp, sp, #12
   11994:	pop	{pc}		; (ldr pc, [sp], #4)
   11998:	movw	r3, #24888	; 0x6138
   1199c:	movt	r3, #2
   119a0:	movw	r0, #20896	; 0x51a0
   119a4:	movt	r0, #1
   119a8:	ldr	r3, [r3]
   119ac:	mov	r2, #55	; 0x37
   119b0:	mov	r1, #1
   119b4:	bl	10c9c <fwrite@plt>
   119b8:	bl	10e10 <abort@plt>
   119bc:	strd	r4, [sp, #-16]!
   119c0:	mov	r4, #0
   119c4:	mov	r5, #0
   119c8:	cmp	r1, #10
   119cc:	str	r6, [sp, #8]
   119d0:	strd	r4, [r0]
   119d4:	strd	r4, [r0, #8]
   119d8:	str	lr, [sp, #12]
   119dc:	strd	r4, [r0, #16]
   119e0:	strd	r4, [r0, #24]
   119e4:	strd	r4, [r0, #32]
   119e8:	strd	r4, [r0, #40]	; 0x28
   119ec:	beq	11a04 <close@plt+0xbe8>
   119f0:	ldrd	r4, [sp]
   119f4:	str	r1, [r0]
   119f8:	ldr	r6, [sp, #8]
   119fc:	add	sp, sp, #12
   11a00:	pop	{pc}		; (ldr pc, [sp], #4)
   11a04:	bl	10e10 <abort@plt>
   11a08:	mov	r2, #5
   11a0c:	strd	r4, [sp, #-16]!
   11a10:	mov	r5, r0
   11a14:	str	r6, [sp, #8]
   11a18:	mov	r6, r1
   11a1c:	mov	r1, r0
   11a20:	mov	r0, #0
   11a24:	str	lr, [sp, #12]
   11a28:	bl	10c60 <dcgettext@plt>
   11a2c:	cmp	r5, r0
   11a30:	mov	r4, r0
   11a34:	beq	11a4c <close@plt+0xc30>
   11a38:	mov	r0, r4
   11a3c:	ldrd	r4, [sp]
   11a40:	ldr	r6, [sp, #8]
   11a44:	add	sp, sp, #12
   11a48:	pop	{pc}		; (ldr pc, [sp], #4)
   11a4c:	bl	14a1c <close@plt+0x3c00>
   11a50:	ldrb	r3, [r0]
   11a54:	bic	r3, r3, #32
   11a58:	cmp	r3, #85	; 0x55
   11a5c:	bne	11ac4 <close@plt+0xca8>
   11a60:	ldrb	r3, [r0, #1]
   11a64:	bic	r3, r3, #32
   11a68:	cmp	r3, #84	; 0x54
   11a6c:	bne	11b44 <close@plt+0xd28>
   11a70:	ldrb	r3, [r0, #2]
   11a74:	bic	r3, r3, #32
   11a78:	cmp	r3, #70	; 0x46
   11a7c:	bne	11b44 <close@plt+0xd28>
   11a80:	ldrb	r3, [r0, #3]
   11a84:	cmp	r3, #45	; 0x2d
   11a88:	bne	11b44 <close@plt+0xd28>
   11a8c:	ldrb	r3, [r0, #4]
   11a90:	cmp	r3, #56	; 0x38
   11a94:	bne	11b44 <close@plt+0xd28>
   11a98:	ldrb	r3, [r0, #5]
   11a9c:	cmp	r3, #0
   11aa0:	bne	11b44 <close@plt+0xd28>
   11aa4:	ldrb	r2, [r4]
   11aa8:	movw	r3, #21052	; 0x523c
   11aac:	movt	r3, #1
   11ab0:	movw	r4, #21064	; 0x5248
   11ab4:	movt	r4, #1
   11ab8:	cmp	r2, #96	; 0x60
   11abc:	movne	r4, r3
   11ac0:	b	11a38 <close@plt+0xc1c>
   11ac4:	cmp	r3, #71	; 0x47
   11ac8:	bne	11b44 <close@plt+0xd28>
   11acc:	ldrb	r3, [r0, #1]
   11ad0:	bic	r3, r3, #32
   11ad4:	cmp	r3, #66	; 0x42
   11ad8:	bne	11b44 <close@plt+0xd28>
   11adc:	ldrb	r3, [r0, #2]
   11ae0:	cmp	r3, #49	; 0x31
   11ae4:	bne	11b44 <close@plt+0xd28>
   11ae8:	ldrb	r3, [r0, #3]
   11aec:	cmp	r3, #56	; 0x38
   11af0:	bne	11b44 <close@plt+0xd28>
   11af4:	ldrb	r3, [r0, #4]
   11af8:	cmp	r3, #48	; 0x30
   11afc:	bne	11b44 <close@plt+0xd28>
   11b00:	ldrb	r3, [r0, #5]
   11b04:	cmp	r3, #51	; 0x33
   11b08:	bne	11b44 <close@plt+0xd28>
   11b0c:	ldrb	r3, [r0, #6]
   11b10:	cmp	r3, #48	; 0x30
   11b14:	bne	11b44 <close@plt+0xd28>
   11b18:	ldrb	r3, [r0, #7]
   11b1c:	cmp	r3, #0
   11b20:	bne	11b44 <close@plt+0xd28>
   11b24:	ldrb	r2, [r4]
   11b28:	movw	r3, #21056	; 0x5240
   11b2c:	movt	r3, #1
   11b30:	movw	r4, #21060	; 0x5244
   11b34:	movt	r4, #1
   11b38:	cmp	r2, #96	; 0x60
   11b3c:	movne	r4, r3
   11b40:	b	11a38 <close@plt+0xc1c>
   11b44:	movw	r3, #21068	; 0x524c
   11b48:	movt	r3, #1
   11b4c:	cmp	r6, #9
   11b50:	movw	r4, #21048	; 0x5238
   11b54:	movt	r4, #1
   11b58:	movne	r4, r3
   11b5c:	b	11a38 <close@plt+0xc1c>
   11b60:	strd	r4, [sp, #-36]!	; 0xffffffdc
   11b64:	strd	r6, [sp, #8]
   11b68:	strd	r8, [sp, #16]
   11b6c:	strd	sl, [sp, #24]
   11b70:	mov	fp, r0
   11b74:	mov	sl, r1
   11b78:	str	lr, [sp, #32]
   11b7c:	sub	sp, sp, #116	; 0x74
   11b80:	ldr	r8, [sp, #152]	; 0x98
   11b84:	str	r3, [sp, #28]
   11b88:	ldr	r3, [sp, #156]	; 0x9c
   11b8c:	str	r2, [sp, #32]
   11b90:	and	r4, r3, #2
   11b94:	ubfx	r3, r3, #1, #1
   11b98:	str	r3, [sp, #44]	; 0x2c
   11b9c:	bl	10cb4 <__ctype_get_mb_cur_max@plt>
   11ba0:	str	r0, [sp, #64]	; 0x40
   11ba4:	cmp	r8, #10
   11ba8:	ldrls	pc, [pc, r8, lsl #2]
   11bac:	b	1331c <close@plt+0x2500>
   11bb0:			; <UNDEFINED> instruction: 0x00011fb4
   11bb4:	andeq	r2, r1, r0, asr r0
   11bb8:	andeq	r2, r1, ip, lsr #12
   11bbc:	andeq	r2, r1, r0, ror r0
   11bc0:	andeq	r1, r1, r8, lsl pc
   11bc4:	andeq	r1, r1, r4, ror #30
   11bc8:	andeq	r1, r1, r4, ror #31
   11bcc:	andeq	r2, r1, r0, lsr #32
   11bd0:	ldrdeq	r1, [r1], -ip
   11bd4:	ldrdeq	r1, [r1], -ip
   11bd8:	ldrdeq	r1, [r1], -ip
   11bdc:	cmp	r8, #10
   11be0:	beq	11c0c <close@plt+0xdf0>
   11be4:	mov	r1, r8
   11be8:	movw	r0, #21072	; 0x5250
   11bec:	movt	r0, #1
   11bf0:	bl	11a08 <close@plt+0xbec>
   11bf4:	mov	r1, r8
   11bf8:	str	r0, [sp, #164]	; 0xa4
   11bfc:	movw	r0, #21068	; 0x524c
   11c00:	movt	r0, #1
   11c04:	bl	11a08 <close@plt+0xbec>
   11c08:	str	r0, [sp, #168]	; 0xa8
   11c0c:	cmp	r4, #0
   11c10:	movne	r4, #0
   11c14:	beq	12ff8 <close@plt+0x21dc>
   11c18:	mov	r3, #1
   11c1c:	mov	r5, #0
   11c20:	ldr	r0, [sp, #168]	; 0xa8
   11c24:	str	r3, [sp, #36]	; 0x24
   11c28:	str	r3, [sp, #40]	; 0x28
   11c2c:	str	r5, [sp, #68]	; 0x44
   11c30:	bl	10d44 <strlen@plt>
   11c34:	ldr	r3, [sp, #168]	; 0xa8
   11c38:	str	r5, [sp, #48]	; 0x30
   11c3c:	str	r0, [sp, #56]	; 0x38
   11c40:	str	r3, [sp, #60]	; 0x3c
   11c44:	str	r5, [sp, #72]	; 0x48
   11c48:	str	r8, [sp, #152]	; 0x98
   11c4c:	mov	r8, fp
   11c50:	mov	r9, #0
   11c54:	ldr	fp, [sp, #152]	; 0x98
   11c58:	ldr	r3, [sp, #28]
   11c5c:	cmn	r3, #1
   11c60:	beq	121c0 <close@plt+0x13a4>
   11c64:	ldr	r3, [sp, #28]
   11c68:	subs	r6, r3, r9
   11c6c:	movne	r6, #1
   11c70:	cmp	r6, #0
   11c74:	beq	121d8 <close@plt+0x13bc>
   11c78:	ldr	r0, [sp, #32]
   11c7c:	ldr	r7, [sp, #40]	; 0x28
   11c80:	add	r3, r0, r9
   11c84:	cmp	fp, #2
   11c88:	moveq	r7, #0
   11c8c:	andne	r7, r7, #1
   11c90:	str	r3, [sp, #52]	; 0x34
   11c94:	cmp	r7, #0
   11c98:	beq	12674 <close@plt+0x1858>
   11c9c:	ldr	r2, [sp, #56]	; 0x38
   11ca0:	cmp	r2, #0
   11ca4:	beq	12910 <close@plt+0x1af4>
   11ca8:	ldr	r1, [sp, #28]
   11cac:	cmp	r2, #1
   11cb0:	mov	r3, r2
   11cb4:	movls	r3, #0
   11cb8:	movhi	r3, #1
   11cbc:	add	r5, r9, r2
   11cc0:	cmn	r1, #1
   11cc4:	movne	r3, #0
   11cc8:	cmp	r3, #0
   11ccc:	beq	11cd8 <close@plt+0xebc>
   11cd0:	bl	10d44 <strlen@plt>
   11cd4:	str	r0, [sp, #28]
   11cd8:	ldr	r3, [sp, #28]
   11cdc:	cmp	r5, r3
   11ce0:	bhi	12910 <close@plt+0x1af4>
   11ce4:	ldr	r0, [sp, #52]	; 0x34
   11ce8:	ldr	r2, [sp, #56]	; 0x38
   11cec:	ldr	r1, [sp, #60]	; 0x3c
   11cf0:	bl	10c48 <memcmp@plt>
   11cf4:	cmp	r0, #0
   11cf8:	bne	12910 <close@plt+0x1af4>
   11cfc:	ldr	r3, [sp, #44]	; 0x2c
   11d00:	cmp	r3, #0
   11d04:	bne	13240 <close@plt+0x2424>
   11d08:	ldr	r3, [sp, #52]	; 0x34
   11d0c:	ldrb	r5, [r3]
   11d10:	cmp	r5, #126	; 0x7e
   11d14:	ldrls	pc, [pc, r5, lsl #2]
   11d18:	b	125d0 <close@plt+0x17b4>
   11d1c:	ldrdeq	r2, [r1], -r4
   11d20:	ldrdeq	r2, [r1], -r0
   11d24:	ldrdeq	r2, [r1], -r0
   11d28:	ldrdeq	r2, [r1], -r0
   11d2c:	ldrdeq	r2, [r1], -r0
   11d30:	ldrdeq	r2, [r1], -r0
   11d34:	ldrdeq	r2, [r1], -r0
   11d38:	andeq	r2, r1, r8, lsr #9
   11d3c:	andeq	r2, r1, r0, lsr #9
   11d40:	andeq	r2, r1, r8, ror #7
   11d44:	muleq	r1, r4, r4
   11d48:	andeq	r2, r1, r0, ror #7
   11d4c:	andeq	r2, r1, r0, ror r4
   11d50:			; <UNDEFINED> instruction: 0x000124bc
   11d54:	ldrdeq	r2, [r1], -r0
   11d58:	ldrdeq	r2, [r1], -r0
   11d5c:	ldrdeq	r2, [r1], -r0
   11d60:	ldrdeq	r2, [r1], -r0
   11d64:	ldrdeq	r2, [r1], -r0
   11d68:	ldrdeq	r2, [r1], -r0
   11d6c:	ldrdeq	r2, [r1], -r0
   11d70:	ldrdeq	r2, [r1], -r0
   11d74:	ldrdeq	r2, [r1], -r0
   11d78:	ldrdeq	r2, [r1], -r0
   11d7c:	ldrdeq	r2, [r1], -r0
   11d80:	ldrdeq	r2, [r1], -r0
   11d84:	ldrdeq	r2, [r1], -r0
   11d88:	ldrdeq	r2, [r1], -r0
   11d8c:	ldrdeq	r2, [r1], -r0
   11d90:	ldrdeq	r2, [r1], -r0
   11d94:	ldrdeq	r2, [r1], -r0
   11d98:	ldrdeq	r2, [r1], -r0
   11d9c:	andeq	r2, r1, ip, lsr #11
   11da0:			; <UNDEFINED> instruction: 0x000124b4
   11da4:			; <UNDEFINED> instruction: 0x000124b4
   11da8:	muleq	r1, r0, r5
   11dac:			; <UNDEFINED> instruction: 0x000124b4
   11db0:	andeq	r2, r1, r4, asr #11
   11db4:			; <UNDEFINED> instruction: 0x000124b4
   11db8:	andeq	r2, r1, r0, lsl r3
   11dbc:			; <UNDEFINED> instruction: 0x000124b4
   11dc0:			; <UNDEFINED> instruction: 0x000124b4
   11dc4:			; <UNDEFINED> instruction: 0x000124b4
   11dc8:	andeq	r2, r1, r4, asr #11
   11dcc:	andeq	r2, r1, r4, asr #11
   11dd0:	andeq	r2, r1, r4, asr #11
   11dd4:	andeq	r2, r1, r4, asr #11
   11dd8:	andeq	r2, r1, r4, asr #11
   11ddc:	andeq	r2, r1, r4, asr #11
   11de0:	andeq	r2, r1, r4, asr #11
   11de4:	andeq	r2, r1, r4, asr #11
   11de8:	andeq	r2, r1, r4, asr #11
   11dec:	andeq	r2, r1, r4, asr #11
   11df0:	andeq	r2, r1, r4, asr #11
   11df4:	andeq	r2, r1, r4, asr #11
   11df8:	andeq	r2, r1, r4, asr #11
   11dfc:	andeq	r2, r1, r4, asr #11
   11e00:	andeq	r2, r1, r4, asr #11
   11e04:	andeq	r2, r1, r4, asr #11
   11e08:			; <UNDEFINED> instruction: 0x000124b4
   11e0c:			; <UNDEFINED> instruction: 0x000124b4
   11e10:			; <UNDEFINED> instruction: 0x000124b4
   11e14:			; <UNDEFINED> instruction: 0x000124b4
   11e18:	andeq	r2, r1, r4, ror #5
   11e1c:	ldrdeq	r2, [r1], -r0
   11e20:	andeq	r2, r1, r4, asr #11
   11e24:	andeq	r2, r1, r4, asr #11
   11e28:	andeq	r2, r1, r4, asr #11
   11e2c:	andeq	r2, r1, r4, asr #11
   11e30:	andeq	r2, r1, r4, asr #11
   11e34:	andeq	r2, r1, r4, asr #11
   11e38:	andeq	r2, r1, r4, asr #11
   11e3c:	andeq	r2, r1, r4, asr #11
   11e40:	andeq	r2, r1, r4, asr #11
   11e44:	andeq	r2, r1, r4, asr #11
   11e48:	andeq	r2, r1, r4, asr #11
   11e4c:	andeq	r2, r1, r4, asr #11
   11e50:	andeq	r2, r1, r4, asr #11
   11e54:	andeq	r2, r1, r4, asr #11
   11e58:	andeq	r2, r1, r4, asr #11
   11e5c:	andeq	r2, r1, r4, asr #11
   11e60:	andeq	r2, r1, r4, asr #11
   11e64:	andeq	r2, r1, r4, asr #11
   11e68:	andeq	r2, r1, r4, asr #11
   11e6c:	andeq	r2, r1, r4, asr #11
   11e70:	andeq	r2, r1, r4, asr #11
   11e74:	andeq	r2, r1, r4, asr #11
   11e78:	andeq	r2, r1, r4, asr #11
   11e7c:	andeq	r2, r1, r4, asr #11
   11e80:	andeq	r2, r1, r4, asr #11
   11e84:	andeq	r2, r1, r4, asr #11
   11e88:			; <UNDEFINED> instruction: 0x000124b4
   11e8c:	andeq	r2, r1, ip, lsl #5
   11e90:	andeq	r2, r1, r4, asr #11
   11e94:			; <UNDEFINED> instruction: 0x000124b4
   11e98:	andeq	r2, r1, r4, asr #11
   11e9c:			; <UNDEFINED> instruction: 0x000124b4
   11ea0:	andeq	r2, r1, r4, asr #11
   11ea4:	andeq	r2, r1, r4, asr #11
   11ea8:	andeq	r2, r1, r4, asr #11
   11eac:	andeq	r2, r1, r4, asr #11
   11eb0:	andeq	r2, r1, r4, asr #11
   11eb4:	andeq	r2, r1, r4, asr #11
   11eb8:	andeq	r2, r1, r4, asr #11
   11ebc:	andeq	r2, r1, r4, asr #11
   11ec0:	andeq	r2, r1, r4, asr #11
   11ec4:	andeq	r2, r1, r4, asr #11
   11ec8:	andeq	r2, r1, r4, asr #11
   11ecc:	andeq	r2, r1, r4, asr #11
   11ed0:	andeq	r2, r1, r4, asr #11
   11ed4:	andeq	r2, r1, r4, asr #11
   11ed8:	andeq	r2, r1, r4, asr #11
   11edc:	andeq	r2, r1, r4, asr #11
   11ee0:	andeq	r2, r1, r4, asr #11
   11ee4:	andeq	r2, r1, r4, asr #11
   11ee8:	andeq	r2, r1, r4, asr #11
   11eec:	andeq	r2, r1, r4, asr #11
   11ef0:	andeq	r2, r1, r4, asr #11
   11ef4:	andeq	r2, r1, r4, asr #11
   11ef8:	andeq	r2, r1, r4, asr #11
   11efc:	andeq	r2, r1, r4, asr #11
   11f00:	andeq	r2, r1, r4, asr #11
   11f04:	andeq	r2, r1, r4, asr #11
   11f08:	strheq	r2, [r1], -r0
   11f0c:			; <UNDEFINED> instruction: 0x000124b4
   11f10:	strheq	r2, [r1], -r0
   11f14:	muleq	r1, r0, r5
   11f18:	cmp	r4, #0
   11f1c:	moveq	r3, #1
   11f20:	streq	r3, [sp, #40]	; 0x28
   11f24:	beq	12638 <close@plt+0x181c>
   11f28:	mov	r3, #0
   11f2c:	mov	r2, #1
   11f30:	mov	r4, r3
   11f34:	str	r2, [sp, #36]	; 0x24
   11f38:	str	r2, [sp, #44]	; 0x2c
   11f3c:	str	r2, [sp, #56]	; 0x38
   11f40:	str	r3, [sp, #68]	; 0x44
   11f44:	movw	r3, #21068	; 0x524c
   11f48:	movt	r3, #1
   11f4c:	str	r4, [sp, #40]	; 0x28
   11f50:	mov	r8, #2
   11f54:	str	r4, [sp, #48]	; 0x30
   11f58:	str	r3, [sp, #60]	; 0x3c
   11f5c:	str	r4, [sp, #72]	; 0x48
   11f60:	b	11c48 <close@plt+0xe2c>
   11f64:	cmp	r4, #0
   11f68:	bne	131b4 <close@plt+0x2398>
   11f6c:	cmp	sl, #0
   11f70:	beq	12f74 <close@plt+0x2158>
   11f74:	mov	r3, #34	; 0x22
   11f78:	mov	r1, r4
   11f7c:	mov	r2, #1
   11f80:	strb	r3, [fp]
   11f84:	movw	r3, #21048	; 0x5238
   11f88:	movt	r3, #1
   11f8c:	mov	r4, r2
   11f90:	str	r2, [sp, #36]	; 0x24
   11f94:	str	r2, [sp, #40]	; 0x28
   11f98:	str	r1, [sp, #44]	; 0x2c
   11f9c:	str	r1, [sp, #48]	; 0x30
   11fa0:	str	r2, [sp, #56]	; 0x38
   11fa4:	str	r3, [sp, #60]	; 0x3c
   11fa8:	str	r1, [sp, #68]	; 0x44
   11fac:	str	r1, [sp, #72]	; 0x48
   11fb0:	b	11c48 <close@plt+0xe2c>
   11fb4:	mov	r3, #0
   11fb8:	mov	r4, r8
   11fbc:	str	r3, [sp, #40]	; 0x28
   11fc0:	str	r3, [sp, #44]	; 0x2c
   11fc4:	str	r3, [sp, #48]	; 0x30
   11fc8:	str	r8, [sp, #56]	; 0x38
   11fcc:	str	r3, [sp, #60]	; 0x3c
   11fd0:	str	r3, [sp, #68]	; 0x44
   11fd4:	mov	r3, #1
   11fd8:	str	r3, [sp, #36]	; 0x24
   11fdc:	str	r8, [sp, #72]	; 0x48
   11fe0:	b	11c48 <close@plt+0xe2c>
   11fe4:	mov	r3, #1
   11fe8:	mov	r2, #0
   11fec:	mov	r4, r2
   11ff0:	mov	r8, #5
   11ff4:	str	r3, [sp, #36]	; 0x24
   11ff8:	str	r3, [sp, #40]	; 0x28
   11ffc:	str	r3, [sp, #44]	; 0x2c
   12000:	str	r2, [sp, #48]	; 0x30
   12004:	str	r3, [sp, #56]	; 0x38
   12008:	movw	r3, #21048	; 0x5238
   1200c:	movt	r3, #1
   12010:	str	r3, [sp, #60]	; 0x3c
   12014:	str	r2, [sp, #68]	; 0x44
   12018:	str	r2, [sp, #72]	; 0x48
   1201c:	b	11c48 <close@plt+0xe2c>
   12020:	mov	r3, #0
   12024:	mov	r2, #1
   12028:	mov	r4, r3
   1202c:	str	r2, [sp, #36]	; 0x24
   12030:	str	r2, [sp, #40]	; 0x28
   12034:	str	r3, [sp, #44]	; 0x2c
   12038:	str	r3, [sp, #48]	; 0x30
   1203c:	str	r3, [sp, #56]	; 0x38
   12040:	str	r3, [sp, #60]	; 0x3c
   12044:	str	r3, [sp, #68]	; 0x44
   12048:	str	r3, [sp, #72]	; 0x48
   1204c:	b	11c48 <close@plt+0xe2c>
   12050:	mov	r2, #1
   12054:	mov	r3, #0
   12058:	mov	r4, r3
   1205c:	str	r2, [sp, #36]	; 0x24
   12060:	str	r2, [sp, #44]	; 0x2c
   12064:	str	r8, [sp, #56]	; 0x38
   12068:	str	r3, [sp, #68]	; 0x44
   1206c:	b	11f44 <close@plt+0x1128>
   12070:	mov	r3, #1
   12074:	mov	r2, #0
   12078:	mov	r4, r2
   1207c:	mov	r8, #2
   12080:	str	r3, [sp, #36]	; 0x24
   12084:	str	r3, [sp, #40]	; 0x28
   12088:	str	r3, [sp, #44]	; 0x2c
   1208c:	str	r2, [sp, #48]	; 0x30
   12090:	str	r3, [sp, #56]	; 0x38
   12094:	movw	r3, #21068	; 0x524c
   12098:	movt	r3, #1
   1209c:	str	r3, [sp, #60]	; 0x3c
   120a0:	str	r2, [sp, #68]	; 0x44
   120a4:	str	r2, [sp, #72]	; 0x48
   120a8:	b	11c48 <close@plt+0xe2c>
   120ac:	mov	r7, #0
   120b0:	ldr	r3, [sp, #28]
   120b4:	cmn	r3, #1
   120b8:	beq	12b90 <close@plt+0x1d74>
   120bc:	ldr	r3, [sp, #28]
   120c0:	subs	r2, r3, #1
   120c4:	movne	r2, #1
   120c8:	sub	r3, fp, #2
   120cc:	cmp	r2, #0
   120d0:	clz	r3, r3
   120d4:	lsr	r3, r3, #5
   120d8:	bne	120e4 <close@plt+0x12c8>
   120dc:	cmp	r9, #0
   120e0:	beq	128f0 <close@plt+0x1ad4>
   120e4:	mov	r6, #0
   120e8:	ldr	r2, [sp, #40]	; 0x28
   120ec:	eor	r2, r2, #1
   120f0:	orrs	r3, r3, r2
   120f4:	bne	122cc <close@plt+0x14b0>
   120f8:	ldr	r2, [sp, #160]	; 0xa0
   120fc:	cmp	r2, #0
   12100:	beq	12120 <close@plt+0x1304>
   12104:	ldr	r0, [sp, #160]	; 0xa0
   12108:	ubfx	r1, r5, #5, #8
   1210c:	and	r2, r5, #31
   12110:	ldr	r1, [r0, r1, lsl #2]
   12114:	lsr	r2, r1, r2
   12118:	tst	r2, #1
   1211c:	bne	12128 <close@plt+0x130c>
   12120:	cmp	r7, #0
   12124:	beq	12398 <close@plt+0x157c>
   12128:	ldr	r2, [sp, #44]	; 0x2c
   1212c:	sub	r3, fp, #2
   12130:	clz	r3, r3
   12134:	lsr	r3, r3, #5
   12138:	cmp	r2, #0
   1213c:	bne	12ee4 <close@plt+0x20c8>
   12140:	ldr	r2, [sp, #48]	; 0x30
   12144:	eor	r2, r2, #1
   12148:	ands	r3, r3, r2
   1214c:	beq	12184 <close@plt+0x1368>
   12150:	cmp	sl, r4
   12154:	str	r3, [sp, #48]	; 0x30
   12158:	movhi	r2, #39	; 0x27
   1215c:	strbhi	r2, [r8, r4]
   12160:	add	r2, r4, #1
   12164:	cmp	sl, r2
   12168:	movhi	r1, #36	; 0x24
   1216c:	strbhi	r1, [r8, r2]
   12170:	add	r2, r4, #2
   12174:	add	r4, r4, #3
   12178:	cmp	sl, r2
   1217c:	movhi	r1, #39	; 0x27
   12180:	strbhi	r1, [r8, r2]
   12184:	cmp	r4, sl
   12188:	add	r9, r9, #1
   1218c:	movcc	r3, #92	; 0x5c
   12190:	strbcc	r3, [r8, r4]
   12194:	add	r4, r4, #1
   12198:	cmp	r4, sl
   1219c:	ldr	r3, [sp, #36]	; 0x24
   121a0:	strbcc	r5, [r8, r4]
   121a4:	cmp	r6, #0
   121a8:	add	r4, r4, #1
   121ac:	moveq	r3, #0
   121b0:	str	r3, [sp, #36]	; 0x24
   121b4:	ldr	r3, [sp, #28]
   121b8:	cmn	r3, #1
   121bc:	bne	11c64 <close@plt+0xe48>
   121c0:	ldr	r3, [sp, #32]
   121c4:	ldrb	r6, [r3, r9]
   121c8:	adds	r6, r6, #0
   121cc:	movne	r6, #1
   121d0:	cmp	r6, #0
   121d4:	bne	11c78 <close@plt+0xe5c>
   121d8:	str	fp, [sp, #152]	; 0x98
   121dc:	mov	fp, r8
   121e0:	cmp	r4, #0
   121e4:	ldr	r1, [sp, #44]	; 0x2c
   121e8:	movne	r3, #0
   121ec:	ldr	r8, [sp, #152]	; 0x98
   121f0:	sub	r2, r8, #2
   121f4:	clz	r2, r2
   121f8:	lsr	r2, r2, #5
   121fc:	andeq	r3, r2, r1
   12200:	cmp	r3, #0
   12204:	bne	132c0 <close@plt+0x24a4>
   12208:	eor	r3, r1, #1
   1220c:	ands	r2, r2, r3
   12210:	beq	131ec <close@plt+0x23d0>
   12214:	ldr	r3, [sp, #68]	; 0x44
   12218:	cmp	r3, #0
   1221c:	beq	131f0 <close@plt+0x23d4>
   12220:	ldr	r3, [sp, #36]	; 0x24
   12224:	cmp	r3, #0
   12228:	bne	1327c <close@plt+0x2460>
   1222c:	ldr	r3, [sp, #72]	; 0x48
   12230:	adds	r3, r3, #0
   12234:	movne	r3, #1
   12238:	cmp	sl, #0
   1223c:	movne	r3, #0
   12240:	cmp	r3, #0
   12244:	ldreq	r2, [sp, #68]	; 0x44
   12248:	beq	131f0 <close@plt+0x23d4>
   1224c:	ldr	r2, [sp, #72]	; 0x48
   12250:	str	r3, [sp, #68]	; 0x44
   12254:	movw	r3, #21068	; 0x524c
   12258:	movt	r3, #1
   1225c:	mov	r1, #39	; 0x27
   12260:	mov	r4, #1
   12264:	ldr	sl, [sp, #72]	; 0x48
   12268:	mov	r8, #2
   1226c:	str	r3, [sp, #60]	; 0x3c
   12270:	mov	r3, #0
   12274:	strb	r1, [fp]
   12278:	str	r3, [sp, #44]	; 0x2c
   1227c:	str	r4, [sp, #56]	; 0x38
   12280:	str	r2, [sp, #72]	; 0x48
   12284:	b	11c48 <close@plt+0xe2c>
   12288:	mov	r7, #0
   1228c:	cmp	fp, #2
   12290:	beq	12b70 <close@plt+0x1d54>
   12294:	ldr	r2, [sp, #40]	; 0x28
   12298:	ldr	r3, [sp, #56]	; 0x38
   1229c:	ldr	r1, [sp, #44]	; 0x2c
   122a0:	cmp	r3, #0
   122a4:	moveq	r3, #0
   122a8:	andne	r3, r2, r1
   122ac:	cmp	r3, #0
   122b0:	moveq	r5, #92	; 0x5c
   122b4:	moveq	r3, r5
   122b8:	bne	12b7c <close@plt+0x1d60>
   122bc:	ldr	r2, [sp, #40]	; 0x28
   122c0:	cmp	r2, #0
   122c4:	bne	12fb8 <close@plt+0x219c>
   122c8:	mov	r6, #0
   122cc:	ldr	r3, [sp, #44]	; 0x2c
   122d0:	cmp	r3, #0
   122d4:	beq	12b68 <close@plt+0x1d4c>
   122d8:	mov	r3, #0
   122dc:	b	120f8 <close@plt+0x12dc>
   122e0:	mov	r7, #0
   122e4:	cmp	fp, #2
   122e8:	beq	12be0 <close@plt+0x1dc4>
   122ec:	cmp	fp, #5
   122f0:	beq	12ba4 <close@plt+0x1d88>
   122f4:	sub	r3, fp, #2
   122f8:	mov	r6, #0
   122fc:	clz	r3, r3
   12300:	mov	r5, #63	; 0x3f
   12304:	lsr	r3, r3, #5
   12308:	b	120e8 <close@plt+0x12cc>
   1230c:	mov	r7, #0
   12310:	cmp	fp, #2
   12314:	movne	r3, #0
   12318:	movne	r5, #39	; 0x27
   1231c:	strne	r6, [sp, #68]	; 0x44
   12320:	bne	120e8 <close@plt+0x12cc>
   12324:	ldr	r3, [sp, #44]	; 0x2c
   12328:	cmp	r3, #0
   1232c:	bne	12fe8 <close@plt+0x21cc>
   12330:	ldr	r3, [sp, #72]	; 0x48
   12334:	cmp	sl, #0
   12338:	clz	r3, r3
   1233c:	lsr	r3, r3, #5
   12340:	moveq	r3, #0
   12344:	cmp	r3, #0
   12348:	bne	12f14 <close@plt+0x20f8>
   1234c:	cmp	sl, r4
   12350:	movhi	r3, #39	; 0x27
   12354:	strbhi	r3, [r8, r4]
   12358:	add	r3, r4, #1
   1235c:	cmp	sl, r3
   12360:	movhi	r2, #92	; 0x5c
   12364:	strbhi	r2, [r8, r3]
   12368:	add	r3, r4, #2
   1236c:	cmp	sl, r3
   12370:	bls	1237c <close@plt+0x1560>
   12374:	mov	r2, #39	; 0x27
   12378:	strb	r2, [r8, r3]
   1237c:	mov	r3, #0
   12380:	cmp	r7, #0
   12384:	add	r4, r4, #3
   12388:	mov	r5, #39	; 0x27
   1238c:	str	r3, [sp, #48]	; 0x30
   12390:	str	r6, [sp, #68]	; 0x44
   12394:	bne	12128 <close@plt+0x130c>
   12398:	ldr	r2, [sp, #48]	; 0x30
   1239c:	eor	r3, r3, #1
   123a0:	add	r9, r9, #1
   123a4:	and	r3, r3, r2
   123a8:	uxtb	r3, r3
   123ac:	cmp	r3, #0
   123b0:	beq	12198 <close@plt+0x137c>
   123b4:	cmp	sl, r4
   123b8:	movhi	r3, #39	; 0x27
   123bc:	strbhi	r3, [r8, r4]
   123c0:	add	r3, r4, #1
   123c4:	add	r4, r4, #2
   123c8:	cmp	sl, r3
   123cc:	movhi	r2, #39	; 0x27
   123d0:	strbhi	r2, [r8, r3]
   123d4:	mov	r3, #0
   123d8:	str	r3, [sp, #48]	; 0x30
   123dc:	b	12198 <close@plt+0x137c>
   123e0:	mov	r3, #118	; 0x76
   123e4:	b	122bc <close@plt+0x14a0>
   123e8:	mov	r3, #116	; 0x74
   123ec:	ldr	r2, [sp, #44]	; 0x2c
   123f0:	cmp	fp, #2
   123f4:	movne	r2, #0
   123f8:	andeq	r2, r2, #1
   123fc:	cmp	r2, #0
   12400:	beq	122bc <close@plt+0x14a0>
   12404:	mov	fp, r8
   12408:	mov	r8, #2
   1240c:	ldr	r3, [sp, #40]	; 0x28
   12410:	cmp	r3, #0
   12414:	movne	r8, #4
   12418:	mov	lr, #0
   1241c:	mov	r0, fp
   12420:	ldr	r2, [sp, #32]
   12424:	ldr	r3, [sp, #156]	; 0x9c
   12428:	ldr	r1, [sp, #164]	; 0xa4
   1242c:	bic	ip, r3, #2
   12430:	ldr	r3, [sp, #28]
   12434:	stm	sp, {r8, ip, lr}
   12438:	ldr	ip, [sp, #168]	; 0xa8
   1243c:	str	r1, [sp, #12]
   12440:	mov	r1, sl
   12444:	str	ip, [sp, #16]
   12448:	bl	11b60 <close@plt+0xd44>
   1244c:	mov	r4, r0
   12450:	mov	r0, r4
   12454:	add	sp, sp, #116	; 0x74
   12458:	ldrd	r4, [sp]
   1245c:	ldrd	r6, [sp, #8]
   12460:	ldrd	r8, [sp, #16]
   12464:	ldrd	sl, [sp, #24]
   12468:	add	sp, sp, #32
   1246c:	pop	{pc}		; (ldr pc, [sp], #4)
   12470:	mov	r5, #102	; 0x66
   12474:	ldr	r2, [sp, #44]	; 0x2c
   12478:	sub	r3, fp, #2
   1247c:	clz	r3, r3
   12480:	lsr	r3, r3, #5
   12484:	cmp	r2, #0
   12488:	bne	12ee4 <close@plt+0x20c8>
   1248c:	mov	r6, r2
   12490:	b	12184 <close@plt+0x1368>
   12494:	mov	r5, #110	; 0x6e
   12498:	mov	r6, #0
   1249c:	b	12128 <close@plt+0x130c>
   124a0:	mov	r5, #98	; 0x62
   124a4:	b	12474 <close@plt+0x1658>
   124a8:	mov	r5, #97	; 0x61
   124ac:	b	12474 <close@plt+0x1658>
   124b0:	mov	r7, #0
   124b4:	mov	r6, #0
   124b8:	b	122d8 <close@plt+0x14bc>
   124bc:	mov	r5, #114	; 0x72
   124c0:	b	12498 <close@plt+0x167c>
   124c4:	ldr	r3, [sp, #44]	; 0x2c
   124c8:	cmp	r3, #0
   124cc:	bne	1325c <close@plt+0x2440>
   124d0:	mov	r7, r3
   124d4:	ldr	r3, [sp, #48]	; 0x30
   124d8:	sub	r2, fp, #2
   124dc:	clz	r2, r2
   124e0:	lsr	r2, r2, #5
   124e4:	eor	r3, r3, #1
   124e8:	ands	r3, r2, r3
   124ec:	beq	12f00 <close@plt+0x20e4>
   124f0:	cmp	sl, r4
   124f4:	movhi	r1, #39	; 0x27
   124f8:	strbhi	r1, [r8, r4]
   124fc:	add	r1, r4, #1
   12500:	cmp	sl, r1
   12504:	movhi	r0, #36	; 0x24
   12508:	strbhi	r0, [r8, r1]
   1250c:	add	r1, r4, #2
   12510:	cmp	sl, r1
   12514:	movhi	r0, #39	; 0x27
   12518:	strbhi	r0, [r8, r1]
   1251c:	add	r1, r4, #3
   12520:	cmp	sl, r1
   12524:	bls	12f58 <close@plt+0x213c>
   12528:	mov	r4, r1
   1252c:	mov	r1, #92	; 0x5c
   12530:	mov	r0, r4
   12534:	str	r3, [sp, #48]	; 0x30
   12538:	strb	r1, [r8, r4]
   1253c:	cmp	fp, #2
   12540:	add	r4, r4, #1
   12544:	beq	12fa8 <close@plt+0x218c>
   12548:	ldr	r1, [sp, #28]
   1254c:	add	r3, r9, #1
   12550:	cmp	r3, r1
   12554:	bcs	1256c <close@plt+0x1750>
   12558:	ldr	r1, [sp, #32]
   1255c:	ldrb	r3, [r1, r3]
   12560:	sub	r3, r3, #48	; 0x30
   12564:	cmp	r3, #9
   12568:	bls	12fc0 <close@plt+0x21a4>
   1256c:	mov	r5, #48	; 0x30
   12570:	ldr	r3, [sp, #40]	; 0x28
   12574:	eor	r3, r3, #1
   12578:	orrs	r2, r2, r3
   1257c:	mov	r3, r6
   12580:	moveq	r6, r2
   12584:	beq	120f8 <close@plt+0x12dc>
   12588:	mov	r6, #0
   1258c:	b	12120 <close@plt+0x1304>
   12590:	cmp	r9, #0
   12594:	mov	r2, r7
   12598:	bne	12b38 <close@plt+0x1d1c>
   1259c:	mov	r6, r7
   125a0:	mov	r3, r9
   125a4:	mov	r7, r2
   125a8:	b	120e8 <close@plt+0x12cc>
   125ac:	mov	r2, r7
   125b0:	mov	r6, r7
   125b4:	mov	r3, #0
   125b8:	mov	r7, r2
   125bc:	mov	r5, #32
   125c0:	b	120e8 <close@plt+0x12cc>
   125c4:	mov	r6, r7
   125c8:	b	122d8 <close@plt+0x14bc>
   125cc:	mov	r7, #0
   125d0:	ldr	r3, [sp, #64]	; 0x40
   125d4:	cmp	r3, #1
   125d8:	bne	12bf8 <close@plt+0x1ddc>
   125dc:	bl	10d2c <__ctype_b_loc@plt>
   125e0:	ldr	r2, [r0]
   125e4:	sxth	r3, r5
   125e8:	lsl	r3, r3, #1
   125ec:	ldr	r1, [sp, #64]	; 0x40
   125f0:	ldrh	r3, [r2, r3]
   125f4:	mov	ip, r1
   125f8:	and	r3, r3, #16384	; 0x4000
   125fc:	cmp	r3, #0
   12600:	ldr	r3, [sp, #40]	; 0x28
   12604:	movne	r6, #1
   12608:	moveq	r6, #0
   1260c:	movne	r2, #0
   12610:	andeq	r2, r3, #1
   12614:	cmp	r2, #0
   12618:	bne	12f40 <close@plt+0x2124>
   1261c:	sub	r3, fp, #2
   12620:	clz	r3, r3
   12624:	lsr	r3, r3, #5
   12628:	b	120e8 <close@plt+0x12cc>
   1262c:	cmp	r4, #0
   12630:	bne	132d0 <close@plt+0x24b4>
   12634:	str	r4, [sp, #40]	; 0x28
   12638:	cmp	sl, #0
   1263c:	bne	13300 <close@plt+0x24e4>
   12640:	mov	r3, #1
   12644:	movw	r2, #21068	; 0x524c
   12648:	movt	r2, #1
   1264c:	mov	r4, r3
   12650:	mov	r8, #2
   12654:	str	r3, [sp, #36]	; 0x24
   12658:	str	sl, [sp, #44]	; 0x2c
   1265c:	str	sl, [sp, #48]	; 0x30
   12660:	str	r3, [sp, #56]	; 0x38
   12664:	str	r2, [sp, #60]	; 0x3c
   12668:	str	sl, [sp, #68]	; 0x44
   1266c:	str	sl, [sp, #72]	; 0x48
   12670:	b	11c48 <close@plt+0xe2c>
   12674:	ldr	r3, [sp, #32]
   12678:	ldrb	r5, [r3, r9]
   1267c:	cmp	r5, #126	; 0x7e
   12680:	ldrls	pc, [pc, r5, lsl #2]
   12684:	b	125d0 <close@plt+0x17b4>
   12688:	andeq	r2, r1, ip, lsr #17
   1268c:	ldrdeq	r2, [r1], -r0
   12690:	ldrdeq	r2, [r1], -r0
   12694:	ldrdeq	r2, [r1], -r0
   12698:	ldrdeq	r2, [r1], -r0
   1269c:	ldrdeq	r2, [r1], -r0
   126a0:	ldrdeq	r2, [r1], -r0
   126a4:	andeq	r2, r1, r4, lsr #17
   126a8:	muleq	r1, ip, r8
   126ac:	andeq	r2, r1, r8, ror #7
   126b0:	muleq	r1, r4, r8
   126b4:	andeq	r2, r1, r0, ror #7
   126b8:	andeq	r2, r1, ip, lsl #17
   126bc:	andeq	r2, r1, r4, lsl #17
   126c0:	ldrdeq	r2, [r1], -r0
   126c4:	ldrdeq	r2, [r1], -r0
   126c8:	ldrdeq	r2, [r1], -r0
   126cc:	ldrdeq	r2, [r1], -r0
   126d0:	ldrdeq	r2, [r1], -r0
   126d4:	ldrdeq	r2, [r1], -r0
   126d8:	ldrdeq	r2, [r1], -r0
   126dc:	ldrdeq	r2, [r1], -r0
   126e0:	ldrdeq	r2, [r1], -r0
   126e4:	ldrdeq	r2, [r1], -r0
   126e8:	ldrdeq	r2, [r1], -r0
   126ec:	ldrdeq	r2, [r1], -r0
   126f0:	ldrdeq	r2, [r1], -r0
   126f4:	ldrdeq	r2, [r1], -r0
   126f8:	ldrdeq	r2, [r1], -r0
   126fc:	ldrdeq	r2, [r1], -r0
   12700:	ldrdeq	r2, [r1], -r0
   12704:	ldrdeq	r2, [r1], -r0
   12708:	andeq	r2, r1, r0, lsl #18
   1270c:	andeq	r2, r1, r0, ror #17
   12710:	andeq	r2, r1, r0, ror #17
   12714:	ldrdeq	r2, [r1], -r0
   12718:	andeq	r2, r1, r0, ror #17
   1271c:	andeq	r2, r1, ip, lsl r6
   12720:	andeq	r2, r1, r0, ror #17
   12724:	andeq	r2, r1, r0, lsl r3
   12728:	andeq	r2, r1, r0, ror #17
   1272c:	andeq	r2, r1, r0, ror #17
   12730:	andeq	r2, r1, r0, ror #17
   12734:	andeq	r2, r1, ip, lsl r6
   12738:	andeq	r2, r1, ip, lsl r6
   1273c:	andeq	r2, r1, ip, lsl r6
   12740:	andeq	r2, r1, ip, lsl r6
   12744:	andeq	r2, r1, ip, lsl r6
   12748:	andeq	r2, r1, ip, lsl r6
   1274c:	andeq	r2, r1, ip, lsl r6
   12750:	andeq	r2, r1, ip, lsl r6
   12754:	andeq	r2, r1, ip, lsl r6
   12758:	andeq	r2, r1, ip, lsl r6
   1275c:	andeq	r2, r1, ip, lsl r6
   12760:	andeq	r2, r1, ip, lsl r6
   12764:	andeq	r2, r1, ip, lsl r6
   12768:	andeq	r2, r1, ip, lsl r6
   1276c:	andeq	r2, r1, ip, lsl r6
   12770:	andeq	r2, r1, ip, lsl r6
   12774:	andeq	r2, r1, r0, ror #17
   12778:	andeq	r2, r1, r0, ror #17
   1277c:	andeq	r2, r1, r0, ror #17
   12780:	andeq	r2, r1, r0, ror #17
   12784:	andeq	r2, r1, r4, ror #5
   12788:	ldrdeq	r2, [r1], -r0
   1278c:	andeq	r2, r1, ip, lsl r6
   12790:	andeq	r2, r1, ip, lsl r6
   12794:	andeq	r2, r1, ip, lsl r6
   12798:	andeq	r2, r1, ip, lsl r6
   1279c:	andeq	r2, r1, ip, lsl r6
   127a0:	andeq	r2, r1, ip, lsl r6
   127a4:	andeq	r2, r1, ip, lsl r6
   127a8:	andeq	r2, r1, ip, lsl r6
   127ac:	andeq	r2, r1, ip, lsl r6
   127b0:	andeq	r2, r1, ip, lsl r6
   127b4:	andeq	r2, r1, ip, lsl r6
   127b8:	andeq	r2, r1, ip, lsl r6
   127bc:	andeq	r2, r1, ip, lsl r6
   127c0:	andeq	r2, r1, ip, lsl r6
   127c4:	andeq	r2, r1, ip, lsl r6
   127c8:	andeq	r2, r1, ip, lsl r6
   127cc:	andeq	r2, r1, ip, lsl r6
   127d0:	andeq	r2, r1, ip, lsl r6
   127d4:	andeq	r2, r1, ip, lsl r6
   127d8:	andeq	r2, r1, ip, lsl r6
   127dc:	andeq	r2, r1, ip, lsl r6
   127e0:	andeq	r2, r1, ip, lsl r6
   127e4:	andeq	r2, r1, ip, lsl r6
   127e8:	andeq	r2, r1, ip, lsl r6
   127ec:	andeq	r2, r1, ip, lsl r6
   127f0:	andeq	r2, r1, ip, lsl r6
   127f4:	andeq	r2, r1, r0, ror #17
   127f8:	andeq	r2, r1, ip, lsl #5
   127fc:	andeq	r2, r1, ip, lsl r6
   12800:	andeq	r2, r1, r0, ror #17
   12804:	andeq	r2, r1, ip, lsl r6
   12808:	andeq	r2, r1, r0, ror #17
   1280c:	andeq	r2, r1, ip, lsl r6
   12810:	andeq	r2, r1, ip, lsl r6
   12814:	andeq	r2, r1, ip, lsl r6
   12818:	andeq	r2, r1, ip, lsl r6
   1281c:	andeq	r2, r1, ip, lsl r6
   12820:	andeq	r2, r1, ip, lsl r6
   12824:	andeq	r2, r1, ip, lsl r6
   12828:	andeq	r2, r1, ip, lsl r6
   1282c:	andeq	r2, r1, ip, lsl r6
   12830:	andeq	r2, r1, ip, lsl r6
   12834:	andeq	r2, r1, ip, lsl r6
   12838:	andeq	r2, r1, ip, lsl r6
   1283c:	andeq	r2, r1, ip, lsl r6
   12840:	andeq	r2, r1, ip, lsl r6
   12844:	andeq	r2, r1, ip, lsl r6
   12848:	andeq	r2, r1, ip, lsl r6
   1284c:	andeq	r2, r1, ip, lsl r6
   12850:	andeq	r2, r1, ip, lsl r6
   12854:	andeq	r2, r1, ip, lsl r6
   12858:	andeq	r2, r1, ip, lsl r6
   1285c:	andeq	r2, r1, ip, lsl r6
   12860:	andeq	r2, r1, ip, lsl r6
   12864:	andeq	r2, r1, ip, lsl r6
   12868:	andeq	r2, r1, ip, lsl r6
   1286c:	andeq	r2, r1, ip, lsl r6
   12870:	andeq	r2, r1, ip, lsl r6
   12874:	strheq	r2, [r1], -r0
   12878:	andeq	r2, r1, r0, ror #17
   1287c:	strheq	r2, [r1], -r0
   12880:	ldrdeq	r2, [r1], -r0
   12884:	mov	r3, #114	; 0x72
   12888:	b	123ec <close@plt+0x15d0>
   1288c:	mov	r3, #102	; 0x66
   12890:	b	122bc <close@plt+0x14a0>
   12894:	mov	r3, #110	; 0x6e
   12898:	b	123ec <close@plt+0x15d0>
   1289c:	mov	r3, #98	; 0x62
   128a0:	b	122bc <close@plt+0x14a0>
   128a4:	mov	r3, #97	; 0x61
   128a8:	b	122bc <close@plt+0x14a0>
   128ac:	ldr	r3, [sp, #40]	; 0x28
   128b0:	cmp	r3, #0
   128b4:	bne	124c4 <close@plt+0x16a8>
   128b8:	ldr	r3, [sp, #156]	; 0x9c
   128bc:	tst	r3, #1
   128c0:	addne	r9, r9, #1
   128c4:	bne	11c58 <close@plt+0xe3c>
   128c8:	ldr	r7, [sp, #40]	; 0x28
   128cc:	b	122c8 <close@plt+0x14ac>
   128d0:	sub	r3, fp, #2
   128d4:	clz	r3, r3
   128d8:	lsr	r3, r3, #5
   128dc:	b	120dc <close@plt+0x12c0>
   128e0:	sub	r3, fp, #2
   128e4:	mov	r6, #0
   128e8:	clz	r3, r3
   128ec:	lsr	r3, r3, #5
   128f0:	ldr	r2, [sp, #44]	; 0x2c
   128f4:	tst	r2, r3
   128f8:	beq	120e8 <close@plt+0x12cc>
   128fc:	b	12404 <close@plt+0x15e8>
   12900:	sub	r3, fp, #2
   12904:	clz	r3, r3
   12908:	lsr	r3, r3, #5
   1290c:	b	128f0 <close@plt+0x1ad4>
   12910:	ldr	r3, [sp, #52]	; 0x34
   12914:	ldrb	r5, [r3]
   12918:	cmp	r5, #126	; 0x7e
   1291c:	ldrls	pc, [pc, r5, lsl #2]
   12920:	b	125cc <close@plt+0x17b0>
   12924:	andeq	r2, r1, r4, asr #9
   12928:	andeq	r2, r1, ip, asr #11
   1292c:	andeq	r2, r1, ip, asr #11
   12930:	andeq	r2, r1, ip, asr #11
   12934:	andeq	r2, r1, ip, asr #11
   12938:	andeq	r2, r1, ip, asr #11
   1293c:	andeq	r2, r1, ip, asr #11
   12940:	andeq	r2, r1, r8, lsr #9
   12944:	andeq	r2, r1, r0, lsr #9
   12948:	andeq	r2, r1, ip, asr fp
   1294c:	muleq	r1, r4, r4
   12950:	andeq	r2, r1, r0, asr fp
   12954:	andeq	r2, r1, r0, ror r4
   12958:			; <UNDEFINED> instruction: 0x000124bc
   1295c:	andeq	r2, r1, ip, asr #11
   12960:	andeq	r2, r1, ip, asr #11
   12964:	andeq	r2, r1, ip, asr #11
   12968:	andeq	r2, r1, ip, asr #11
   1296c:	andeq	r2, r1, ip, asr #11
   12970:	andeq	r2, r1, ip, asr #11
   12974:	andeq	r2, r1, ip, asr #11
   12978:	andeq	r2, r1, ip, asr #11
   1297c:	andeq	r2, r1, ip, asr #11
   12980:	andeq	r2, r1, ip, asr #11
   12984:	andeq	r2, r1, ip, asr #11
   12988:	andeq	r2, r1, ip, asr #11
   1298c:	andeq	r2, r1, ip, asr #11
   12990:	andeq	r2, r1, ip, asr #11
   12994:	andeq	r2, r1, ip, asr #11
   12998:	andeq	r2, r1, ip, asr #11
   1299c:	andeq	r2, r1, ip, asr #11
   129a0:	andeq	r2, r1, ip, asr #11
   129a4:	andeq	r2, r1, r8, asr #22
   129a8:			; <UNDEFINED> instruction: 0x000124b0
   129ac:			; <UNDEFINED> instruction: 0x000124b0
   129b0:	andeq	r2, r1, ip, lsr #22
   129b4:			; <UNDEFINED> instruction: 0x000124b0
   129b8:	andeq	r2, r1, r0, lsr #22
   129bc:			; <UNDEFINED> instruction: 0x000124b0
   129c0:	andeq	r2, r1, ip, lsl #6
   129c4:			; <UNDEFINED> instruction: 0x000124b0
   129c8:			; <UNDEFINED> instruction: 0x000124b0
   129cc:			; <UNDEFINED> instruction: 0x000124b0
   129d0:	andeq	r2, r1, r0, lsr #22
   129d4:	andeq	r2, r1, r0, lsr #22
   129d8:	andeq	r2, r1, r0, lsr #22
   129dc:	andeq	r2, r1, r0, lsr #22
   129e0:	andeq	r2, r1, r0, lsr #22
   129e4:	andeq	r2, r1, r0, lsr #22
   129e8:	andeq	r2, r1, r0, lsr #22
   129ec:	andeq	r2, r1, r0, lsr #22
   129f0:	andeq	r2, r1, r0, lsr #22
   129f4:	andeq	r2, r1, r0, lsr #22
   129f8:	andeq	r2, r1, r0, lsr #22
   129fc:	andeq	r2, r1, r0, lsr #22
   12a00:	andeq	r2, r1, r0, lsr #22
   12a04:	andeq	r2, r1, r0, lsr #22
   12a08:	andeq	r2, r1, r0, lsr #22
   12a0c:	andeq	r2, r1, r0, lsr #22
   12a10:			; <UNDEFINED> instruction: 0x000124b0
   12a14:			; <UNDEFINED> instruction: 0x000124b0
   12a18:			; <UNDEFINED> instruction: 0x000124b0
   12a1c:			; <UNDEFINED> instruction: 0x000124b0
   12a20:	andeq	r2, r1, r0, ror #5
   12a24:	andeq	r2, r1, ip, asr #11
   12a28:	andeq	r2, r1, r0, lsr #22
   12a2c:	andeq	r2, r1, r0, lsr #22
   12a30:	andeq	r2, r1, r0, lsr #22
   12a34:	andeq	r2, r1, r0, lsr #22
   12a38:	andeq	r2, r1, r0, lsr #22
   12a3c:	andeq	r2, r1, r0, lsr #22
   12a40:	andeq	r2, r1, r0, lsr #22
   12a44:	andeq	r2, r1, r0, lsr #22
   12a48:	andeq	r2, r1, r0, lsr #22
   12a4c:	andeq	r2, r1, r0, lsr #22
   12a50:	andeq	r2, r1, r0, lsr #22
   12a54:	andeq	r2, r1, r0, lsr #22
   12a58:	andeq	r2, r1, r0, lsr #22
   12a5c:	andeq	r2, r1, r0, lsr #22
   12a60:	andeq	r2, r1, r0, lsr #22
   12a64:	andeq	r2, r1, r0, lsr #22
   12a68:	andeq	r2, r1, r0, lsr #22
   12a6c:	andeq	r2, r1, r0, lsr #22
   12a70:	andeq	r2, r1, r0, lsr #22
   12a74:	andeq	r2, r1, r0, lsr #22
   12a78:	andeq	r2, r1, r0, lsr #22
   12a7c:	andeq	r2, r1, r0, lsr #22
   12a80:	andeq	r2, r1, r0, lsr #22
   12a84:	andeq	r2, r1, r0, lsr #22
   12a88:	andeq	r2, r1, r0, lsr #22
   12a8c:	andeq	r2, r1, r0, lsr #22
   12a90:			; <UNDEFINED> instruction: 0x000124b0
   12a94:	andeq	r2, r1, r8, lsl #5
   12a98:	andeq	r2, r1, r0, lsr #22
   12a9c:			; <UNDEFINED> instruction: 0x000124b0
   12aa0:	andeq	r2, r1, r0, lsr #22
   12aa4:			; <UNDEFINED> instruction: 0x000124b0
   12aa8:	andeq	r2, r1, r0, lsr #22
   12aac:	andeq	r2, r1, r0, lsr #22
   12ab0:	andeq	r2, r1, r0, lsr #22
   12ab4:	andeq	r2, r1, r0, lsr #22
   12ab8:	andeq	r2, r1, r0, lsr #22
   12abc:	andeq	r2, r1, r0, lsr #22
   12ac0:	andeq	r2, r1, r0, lsr #22
   12ac4:	andeq	r2, r1, r0, lsr #22
   12ac8:	andeq	r2, r1, r0, lsr #22
   12acc:	andeq	r2, r1, r0, lsr #22
   12ad0:	andeq	r2, r1, r0, lsr #22
   12ad4:	andeq	r2, r1, r0, lsr #22
   12ad8:	andeq	r2, r1, r0, lsr #22
   12adc:	andeq	r2, r1, r0, lsr #22
   12ae0:	andeq	r2, r1, r0, lsr #22
   12ae4:	andeq	r2, r1, r0, lsr #22
   12ae8:	andeq	r2, r1, r0, lsr #22
   12aec:	andeq	r2, r1, r0, lsr #22
   12af0:	andeq	r2, r1, r0, lsr #22
   12af4:	andeq	r2, r1, r0, lsr #22
   12af8:	andeq	r2, r1, r0, lsr #22
   12afc:	andeq	r2, r1, r0, lsr #22
   12b00:	andeq	r2, r1, r0, lsr #22
   12b04:	andeq	r2, r1, r0, lsr #22
   12b08:	andeq	r2, r1, r0, lsr #22
   12b0c:	andeq	r2, r1, r0, lsr #22
   12b10:	andeq	r2, r1, ip, lsr #1
   12b14:			; <UNDEFINED> instruction: 0x000124b0
   12b18:	andeq	r2, r1, ip, lsr #1
   12b1c:	andeq	r2, r1, ip, lsr #22
   12b20:	mov	r6, r7
   12b24:	mov	r7, #0
   12b28:	b	122d8 <close@plt+0x14bc>
   12b2c:	cmp	r9, #0
   12b30:	mov	r2, #0
   12b34:	beq	1259c <close@plt+0x1780>
   12b38:	mov	r6, #0
   12b3c:	mov	r7, r2
   12b40:	mov	r3, r6
   12b44:	b	120f8 <close@plt+0x12dc>
   12b48:	mov	r2, #0
   12b4c:	b	125b0 <close@plt+0x1794>
   12b50:	mov	r7, #0
   12b54:	mov	r3, #118	; 0x76
   12b58:	b	122bc <close@plt+0x14a0>
   12b5c:	mov	r7, #0
   12b60:	mov	r3, #116	; 0x74
   12b64:	b	123ec <close@plt+0x15d0>
   12b68:	ldr	r3, [sp, #44]	; 0x2c
   12b6c:	b	12120 <close@plt+0x1304>
   12b70:	ldr	r3, [sp, #44]	; 0x2c
   12b74:	cmp	r3, #0
   12b78:	bne	12fe8 <close@plt+0x21cc>
   12b7c:	add	r9, r9, #1
   12b80:	mov	r6, #0
   12b84:	ldr	r3, [sp, #48]	; 0x30
   12b88:	mov	r5, #92	; 0x5c
   12b8c:	b	123ac <close@plt+0x1590>
   12b90:	ldr	r3, [sp, #32]
   12b94:	ldrb	r2, [r3, #1]
   12b98:	adds	r2, r2, #0
   12b9c:	movne	r2, #1
   12ba0:	b	120c8 <close@plt+0x12ac>
   12ba4:	ldr	r3, [sp, #156]	; 0x9c
   12ba8:	ands	r3, r3, #4
   12bac:	beq	12bd4 <close@plt+0x1db8>
   12bb0:	ldr	r2, [sp, #28]
   12bb4:	add	r3, r9, #2
   12bb8:	cmp	r3, r2
   12bbc:	bcs	12bd0 <close@plt+0x1db4>
   12bc0:	ldr	r2, [sp, #52]	; 0x34
   12bc4:	ldrb	r5, [r2, #1]
   12bc8:	cmp	r5, #63	; 0x3f
   12bcc:	beq	1304c <close@plt+0x2230>
   12bd0:	mov	r3, #0
   12bd4:	mov	r5, #63	; 0x3f
   12bd8:	mov	r6, r3
   12bdc:	b	120e8 <close@plt+0x12cc>
   12be0:	ldr	r3, [sp, #44]	; 0x2c
   12be4:	cmp	r3, #0
   12be8:	bne	12fe8 <close@plt+0x21cc>
   12bec:	mov	r6, r3
   12bf0:	mov	r5, #63	; 0x3f
   12bf4:	b	12120 <close@plt+0x1304>
   12bf8:	ldr	r1, [sp, #28]
   12bfc:	mov	r2, #0
   12c00:	mov	r3, #0
   12c04:	strd	r2, [sp, #104]	; 0x68
   12c08:	cmn	r1, #1
   12c0c:	bne	12c1c <close@plt+0x1e00>
   12c10:	ldr	r0, [sp, #32]
   12c14:	bl	10d44 <strlen@plt>
   12c18:	str	r0, [sp, #28]
   12c1c:	str	r8, [sp, #76]	; 0x4c
   12c20:	mov	r3, #0
   12c24:	str	sl, [sp, #80]	; 0x50
   12c28:	ldr	sl, [sp, #32]
   12c2c:	str	r5, [sp, #84]	; 0x54
   12c30:	mov	r5, r3
   12c34:	ldr	r8, [sp, #44]	; 0x2c
   12c38:	str	r7, [sp, #88]	; 0x58
   12c3c:	str	r4, [sp, #92]	; 0x5c
   12c40:	ldr	r2, [sp, #28]
   12c44:	add	r4, r9, r5
   12c48:	add	r3, sp, #104	; 0x68
   12c4c:	add	r7, sl, r4
   12c50:	add	r0, sp, #100	; 0x64
   12c54:	mov	r1, r7
   12c58:	sub	r2, r2, r4
   12c5c:	bl	14a68 <close@plt+0x3c4c>
   12c60:	subs	r1, r0, #0
   12c64:	beq	12cb0 <close@plt+0x1e94>
   12c68:	cmn	r1, #1
   12c6c:	beq	13028 <close@plt+0x220c>
   12c70:	cmn	r1, #2
   12c74:	beq	13148 <close@plt+0x232c>
   12c78:	cmp	fp, #2
   12c7c:	movne	r3, #0
   12c80:	andeq	r3, r8, #1
   12c84:	cmp	r3, #0
   12c88:	bne	12e14 <close@plt+0x1ff8>
   12c8c:	ldr	r0, [sp, #100]	; 0x64
   12c90:	add	r5, r5, r1
   12c94:	bl	10c90 <iswprint@plt>
   12c98:	cmp	r0, #0
   12c9c:	add	r0, sp, #104	; 0x68
   12ca0:	moveq	r6, #0
   12ca4:	bl	10c3c <mbsinit@plt>
   12ca8:	cmp	r0, #0
   12cac:	beq	12c40 <close@plt+0x1e24>
   12cb0:	ldr	r3, [sp, #40]	; 0x28
   12cb4:	mov	ip, r5
   12cb8:	eor	r2, r6, #1
   12cbc:	ldr	r8, [sp, #76]	; 0x4c
   12cc0:	ldr	sl, [sp, #80]	; 0x50
   12cc4:	and	r2, r2, r3
   12cc8:	ldr	r5, [sp, #84]	; 0x54
   12ccc:	ldr	r7, [sp, #88]	; 0x58
   12cd0:	ldr	r4, [sp, #92]	; 0x5c
   12cd4:	cmp	ip, #1
   12cd8:	bls	12614 <close@plt+0x17f8>
   12cdc:	add	r1, ip, r9
   12ce0:	mov	r0, #39	; 0x27
   12ce4:	ldr	lr, [sp, #52]	; 0x34
   12ce8:	mov	ip, #0
   12cec:	str	r6, [sp, #52]	; 0x34
   12cf0:	ldr	r6, [sp, #48]	; 0x30
   12cf4:	b	12db0 <close@plt+0x1f94>
   12cf8:	ldr	ip, [sp, #44]	; 0x2c
   12cfc:	sub	r3, fp, #2
   12d00:	clz	r3, r3
   12d04:	lsr	r3, r3, #5
   12d08:	cmp	ip, #0
   12d0c:	bne	12f20 <close@plt+0x2104>
   12d10:	eor	ip, r6, #1
   12d14:	ands	r3, r3, ip
   12d18:	beq	12d48 <close@plt+0x1f2c>
   12d1c:	cmp	sl, r4
   12d20:	add	ip, r4, #1
   12d24:	strbhi	r0, [r8, r4]
   12d28:	cmp	sl, ip
   12d2c:	movhi	r6, #36	; 0x24
   12d30:	strbhi	r6, [r8, ip]
   12d34:	add	ip, r4, #2
   12d38:	mov	r6, r3
   12d3c:	cmp	sl, ip
   12d40:	add	r4, r4, #3
   12d44:	strbhi	r0, [r8, ip]
   12d48:	cmp	sl, r4
   12d4c:	movhi	r3, #92	; 0x5c
   12d50:	strbhi	r3, [r8, r4]
   12d54:	add	r3, r4, #1
   12d58:	cmp	sl, r3
   12d5c:	bls	12d6c <close@plt+0x1f50>
   12d60:	lsr	ip, r5, #6
   12d64:	add	ip, ip, #48	; 0x30
   12d68:	strb	ip, [r8, r3]
   12d6c:	add	r3, r4, #2
   12d70:	cmp	sl, r3
   12d74:	bls	12d84 <close@plt+0x1f68>
   12d78:	ubfx	ip, r5, #3, #3
   12d7c:	add	ip, ip, #48	; 0x30
   12d80:	strb	ip, [r8, r3]
   12d84:	add	r9, r9, #1
   12d88:	and	r5, r5, #7
   12d8c:	cmp	r9, r1
   12d90:	add	r5, r5, #48	; 0x30
   12d94:	add	r4, r4, #3
   12d98:	bcs	12f4c <close@plt+0x2130>
   12d9c:	mov	ip, r2
   12da0:	cmp	sl, r4
   12da4:	strbhi	r5, [r8, r4]
   12da8:	add	r4, r4, #1
   12dac:	ldrb	r5, [lr, #1]!
   12db0:	cmp	r2, #0
   12db4:	bne	12cf8 <close@plt+0x1edc>
   12db8:	eor	r3, ip, #1
   12dbc:	cmp	r7, #0
   12dc0:	and	r3, r3, r6
   12dc4:	uxtb	r3, r3
   12dc8:	beq	12ddc <close@plt+0x1fc0>
   12dcc:	cmp	sl, r4
   12dd0:	movhi	r7, #92	; 0x5c
   12dd4:	strbhi	r7, [r8, r4]
   12dd8:	add	r4, r4, #1
   12ddc:	add	r9, r9, #1
   12de0:	cmp	r9, r1
   12de4:	bcs	12f34 <close@plt+0x2118>
   12de8:	cmp	r3, #0
   12dec:	beq	12f6c <close@plt+0x2150>
   12df0:	cmp	sl, r4
   12df4:	add	r3, r4, #1
   12df8:	mov	r7, #0
   12dfc:	strbhi	r0, [r8, r4]
   12e00:	cmp	sl, r3
   12e04:	add	r4, r4, #2
   12e08:	mov	r6, r7
   12e0c:	strbhi	r0, [r8, r3]
   12e10:	b	12da0 <close@plt+0x1f84>
   12e14:	cmp	r1, #1
   12e18:	beq	12c8c <close@plt+0x1e70>
   12e1c:	add	r2, r4, #1
   12e20:	add	r3, sl, r1
   12e24:	add	r2, sl, r2
   12e28:	add	r4, r3, r4
   12e2c:	ldrb	r3, [r2], #1
   12e30:	sub	r3, r3, #91	; 0x5b
   12e34:	cmp	r3, #33	; 0x21
   12e38:	ldrls	pc, [pc, r3, lsl #2]
   12e3c:	b	12ec8 <close@plt+0x20ac>
   12e40:	ldrdeq	r2, [r1], -r4
   12e44:	ldrdeq	r2, [r1], -r4
   12e48:	andeq	r2, r1, r8, asr #29
   12e4c:	ldrdeq	r2, [r1], -r4
   12e50:	andeq	r2, r1, r8, asr #29
   12e54:	ldrdeq	r2, [r1], -r4
   12e58:	andeq	r2, r1, r8, asr #29
   12e5c:	andeq	r2, r1, r8, asr #29
   12e60:	andeq	r2, r1, r8, asr #29
   12e64:	andeq	r2, r1, r8, asr #29
   12e68:	andeq	r2, r1, r8, asr #29
   12e6c:	andeq	r2, r1, r8, asr #29
   12e70:	andeq	r2, r1, r8, asr #29
   12e74:	andeq	r2, r1, r8, asr #29
   12e78:	andeq	r2, r1, r8, asr #29
   12e7c:	andeq	r2, r1, r8, asr #29
   12e80:	andeq	r2, r1, r8, asr #29
   12e84:	andeq	r2, r1, r8, asr #29
   12e88:	andeq	r2, r1, r8, asr #29
   12e8c:	andeq	r2, r1, r8, asr #29
   12e90:	andeq	r2, r1, r8, asr #29
   12e94:	andeq	r2, r1, r8, asr #29
   12e98:	andeq	r2, r1, r8, asr #29
   12e9c:	andeq	r2, r1, r8, asr #29
   12ea0:	andeq	r2, r1, r8, asr #29
   12ea4:	andeq	r2, r1, r8, asr #29
   12ea8:	andeq	r2, r1, r8, asr #29
   12eac:	andeq	r2, r1, r8, asr #29
   12eb0:	andeq	r2, r1, r8, asr #29
   12eb4:	andeq	r2, r1, r8, asr #29
   12eb8:	andeq	r2, r1, r8, asr #29
   12ebc:	andeq	r2, r1, r8, asr #29
   12ec0:	andeq	r2, r1, r8, asr #29
   12ec4:	ldrdeq	r2, [r1], -r4
   12ec8:	cmp	r4, r2
   12ecc:	bne	12e2c <close@plt+0x2010>
   12ed0:	b	12c8c <close@plt+0x1e70>
   12ed4:	mov	r8, #2
   12ed8:	ldr	fp, [sp, #76]	; 0x4c
   12edc:	ldr	sl, [sp, #80]	; 0x50
   12ee0:	b	1240c <close@plt+0x15f0>
   12ee4:	ldr	r2, [sp, #40]	; 0x28
   12ee8:	str	fp, [sp, #152]	; 0x98
   12eec:	mov	fp, r8
   12ef0:	ldr	r8, [sp, #152]	; 0x98
   12ef4:	and	r2, r2, r3
   12ef8:	str	r2, [sp, #40]	; 0x28
   12efc:	b	1240c <close@plt+0x15f0>
   12f00:	cmp	sl, r4
   12f04:	movls	r0, r4
   12f08:	bls	1253c <close@plt+0x1720>
   12f0c:	ldr	r3, [sp, #48]	; 0x30
   12f10:	b	1252c <close@plt+0x1710>
   12f14:	str	sl, [sp, #72]	; 0x48
   12f18:	ldr	sl, [sp, #44]	; 0x2c
   12f1c:	b	1237c <close@plt+0x1560>
   12f20:	str	r3, [sp, #40]	; 0x28
   12f24:	str	fp, [sp, #152]	; 0x98
   12f28:	mov	fp, r8
   12f2c:	ldr	r8, [sp, #152]	; 0x98
   12f30:	b	1240c <close@plt+0x15f0>
   12f34:	str	r6, [sp, #48]	; 0x30
   12f38:	ldr	r6, [sp, #52]	; 0x34
   12f3c:	b	123ac <close@plt+0x1590>
   12f40:	mov	r6, #0
   12f44:	ldr	r2, [sp, #40]	; 0x28
   12f48:	b	12cdc <close@plt+0x1ec0>
   12f4c:	str	r6, [sp, #48]	; 0x30
   12f50:	ldr	r6, [sp, #52]	; 0x34
   12f54:	b	12198 <close@plt+0x137c>
   12f58:	add	r4, r4, #4
   12f5c:	mov	r6, #0
   12f60:	str	r3, [sp, #48]	; 0x30
   12f64:	mov	r5, #48	; 0x30
   12f68:	b	12120 <close@plt+0x1304>
   12f6c:	mov	r7, r3
   12f70:	b	12da0 <close@plt+0x1f84>
   12f74:	mov	r3, #1
   12f78:	movw	r2, #21048	; 0x5238
   12f7c:	movt	r2, #1
   12f80:	mov	r4, r3
   12f84:	str	r3, [sp, #36]	; 0x24
   12f88:	str	r3, [sp, #40]	; 0x28
   12f8c:	str	sl, [sp, #44]	; 0x2c
   12f90:	str	sl, [sp, #48]	; 0x30
   12f94:	str	r3, [sp, #56]	; 0x38
   12f98:	str	r2, [sp, #60]	; 0x3c
   12f9c:	str	sl, [sp, #68]	; 0x44
   12fa0:	str	sl, [sp, #72]	; 0x48
   12fa4:	b	11c48 <close@plt+0xe2c>
   12fa8:	mov	r3, r6
   12fac:	mov	r5, #48	; 0x30
   12fb0:	mov	r6, #0
   12fb4:	b	12120 <close@plt+0x1304>
   12fb8:	mov	r5, r3
   12fbc:	b	12498 <close@plt+0x167c>
   12fc0:	cmp	sl, r4
   12fc4:	mov	r5, #48	; 0x30
   12fc8:	movhi	r3, #48	; 0x30
   12fcc:	strbhi	r3, [r8, r4]
   12fd0:	add	r3, r0, #2
   12fd4:	add	r4, r0, #3
   12fd8:	cmp	sl, r3
   12fdc:	movhi	r1, #48	; 0x30
   12fe0:	strbhi	r1, [r8, r3]
   12fe4:	b	12570 <close@plt+0x1754>
   12fe8:	str	fp, [sp, #152]	; 0x98
   12fec:	mov	fp, r8
   12ff0:	ldr	r8, [sp, #152]	; 0x98
   12ff4:	b	1240c <close@plt+0x15f0>
   12ff8:	ldr	r3, [sp, #164]	; 0xa4
   12ffc:	ldrb	r3, [r3]
   13000:	cmp	r3, #0
   13004:	beq	11c18 <close@plt+0xdfc>
   13008:	ldr	r2, [sp, #164]	; 0xa4
   1300c:	cmp	sl, r4
   13010:	strbhi	r3, [fp, r4]
   13014:	add	r4, r4, #1
   13018:	ldrb	r3, [r2, #1]!
   1301c:	cmp	r3, #0
   13020:	bne	1300c <close@plt+0x21f0>
   13024:	b	11c18 <close@plt+0xdfc>
   13028:	mov	ip, r5
   1302c:	mov	r6, #0
   13030:	ldr	r2, [sp, #40]	; 0x28
   13034:	ldr	r8, [sp, #76]	; 0x4c
   13038:	ldr	sl, [sp, #80]	; 0x50
   1303c:	ldr	r5, [sp, #84]	; 0x54
   13040:	ldr	r7, [sp, #88]	; 0x58
   13044:	ldr	r4, [sp, #92]	; 0x5c
   13048:	b	12cd4 <close@plt+0x1eb8>
   1304c:	ldr	r2, [sp, #32]
   13050:	ldrb	r1, [r2, r3]
   13054:	sub	r2, r1, #33	; 0x21
   13058:	cmp	r2, #29
   1305c:	ldrls	pc, [pc, r2, lsl #2]
   13060:	b	1313c <close@plt+0x2320>
   13064:	ldrdeq	r3, [r1], -ip
   13068:	andeq	r3, r1, ip, lsr r1
   1306c:	andeq	r3, r1, ip, lsr r1
   13070:	andeq	r3, r1, ip, lsr r1
   13074:	andeq	r3, r1, ip, lsr r1
   13078:	andeq	r3, r1, ip, lsr r1
   1307c:	ldrdeq	r3, [r1], -ip
   13080:	ldrdeq	r3, [r1], -ip
   13084:	ldrdeq	r3, [r1], -ip
   13088:	andeq	r3, r1, ip, lsr r1
   1308c:	andeq	r3, r1, ip, lsr r1
   13090:	andeq	r3, r1, ip, lsr r1
   13094:	ldrdeq	r3, [r1], -ip
   13098:	andeq	r3, r1, ip, lsr r1
   1309c:	ldrdeq	r3, [r1], -ip
   130a0:	andeq	r3, r1, ip, lsr r1
   130a4:	andeq	r3, r1, ip, lsr r1
   130a8:	andeq	r3, r1, ip, lsr r1
   130ac:	andeq	r3, r1, ip, lsr r1
   130b0:	andeq	r3, r1, ip, lsr r1
   130b4:	andeq	r3, r1, ip, lsr r1
   130b8:	andeq	r3, r1, ip, lsr r1
   130bc:	andeq	r3, r1, ip, lsr r1
   130c0:	andeq	r3, r1, ip, lsr r1
   130c4:	andeq	r3, r1, ip, lsr r1
   130c8:	andeq	r3, r1, ip, lsr r1
   130cc:	andeq	r3, r1, ip, lsr r1
   130d0:	ldrdeq	r3, [r1], -ip
   130d4:	ldrdeq	r3, [r1], -ip
   130d8:	ldrdeq	r3, [r1], -ip
   130dc:	ldr	r2, [sp, #44]	; 0x2c
   130e0:	cmp	r2, #0
   130e4:	bne	13240 <close@plt+0x2424>
   130e8:	cmp	sl, r4
   130ec:	mov	r5, r1
   130f0:	movhi	r2, #63	; 0x3f
   130f4:	mov	r9, r3
   130f8:	strbhi	r2, [r8, r4]
   130fc:	add	r2, r4, #1
   13100:	cmp	sl, r2
   13104:	movhi	r0, #34	; 0x22
   13108:	strbhi	r0, [r8, r2]
   1310c:	add	r2, r4, #2
   13110:	cmp	sl, r2
   13114:	movhi	r0, #34	; 0x22
   13118:	strbhi	r0, [r8, r2]
   1311c:	add	r2, r4, #3
   13120:	add	r4, r4, #4
   13124:	cmp	sl, r2
   13128:	movhi	r0, #63	; 0x3f
   1312c:	strbhi	r0, [r8, r2]
   13130:	mov	r2, #0
   13134:	mov	r6, r2
   13138:	b	12570 <close@plt+0x1754>
   1313c:	mov	r3, #0
   13140:	mov	r6, r3
   13144:	b	120e8 <close@plt+0x12cc>
   13148:	ldr	r0, [sp, #28]
   1314c:	mov	r1, r4
   13150:	mov	r2, r7
   13154:	mov	r3, r5
   13158:	mov	ip, r5
   1315c:	ldr	r8, [sp, #76]	; 0x4c
   13160:	ldr	sl, [sp, #80]	; 0x50
   13164:	cmp	r1, r0
   13168:	ldr	r5, [sp, #84]	; 0x54
   1316c:	ldr	r7, [sp, #88]	; 0x58
   13170:	ldr	r4, [sp, #92]	; 0x5c
   13174:	bcs	131a8 <close@plt+0x238c>
   13178:	ldrb	r6, [r2]
   1317c:	cmp	r6, #0
   13180:	bne	13194 <close@plt+0x2378>
   13184:	b	132c8 <close@plt+0x24ac>
   13188:	ldrb	r6, [r2, #1]!
   1318c:	cmp	r6, #0
   13190:	beq	13250 <close@plt+0x2434>
   13194:	add	r3, r3, #1
   13198:	add	r1, r9, r3
   1319c:	cmp	r1, r0
   131a0:	bcc	13188 <close@plt+0x236c>
   131a4:	mov	ip, r3
   131a8:	mov	r6, #0
   131ac:	ldr	r2, [sp, #40]	; 0x28
   131b0:	b	12cd4 <close@plt+0x1eb8>
   131b4:	mov	r3, #1
   131b8:	mov	r2, #0
   131bc:	mov	r4, r2
   131c0:	str	r3, [sp, #36]	; 0x24
   131c4:	str	r3, [sp, #40]	; 0x28
   131c8:	str	r3, [sp, #44]	; 0x2c
   131cc:	str	r2, [sp, #48]	; 0x30
   131d0:	str	r3, [sp, #56]	; 0x38
   131d4:	movw	r3, #21048	; 0x5238
   131d8:	movt	r3, #1
   131dc:	str	r3, [sp, #60]	; 0x3c
   131e0:	str	r2, [sp, #68]	; 0x44
   131e4:	str	r2, [sp, #72]	; 0x48
   131e8:	b	11c48 <close@plt+0xe2c>
   131ec:	mov	r2, r3
   131f0:	ldr	r3, [sp, #60]	; 0x3c
   131f4:	cmp	r3, #0
   131f8:	moveq	r2, #0
   131fc:	andne	r2, r2, #1
   13200:	cmp	r2, #0
   13204:	beq	13230 <close@plt+0x2414>
   13208:	mov	r2, r3
   1320c:	ldrb	r3, [r3]
   13210:	cmp	r3, #0
   13214:	beq	13230 <close@plt+0x2414>
   13218:	cmp	sl, r4
   1321c:	strbhi	r3, [fp, r4]
   13220:	add	r4, r4, #1
   13224:	ldrb	r3, [r2, #1]!
   13228:	cmp	r3, #0
   1322c:	bne	13218 <close@plt+0x23fc>
   13230:	cmp	sl, r4
   13234:	movhi	r3, #0
   13238:	strbhi	r3, [fp, r4]
   1323c:	b	12450 <close@plt+0x1634>
   13240:	str	fp, [sp, #152]	; 0x98
   13244:	mov	fp, r8
   13248:	ldr	r8, [sp, #152]	; 0x98
   1324c:	b	12418 <close@plt+0x15fc>
   13250:	mov	ip, r3
   13254:	ldr	r2, [sp, #40]	; 0x28
   13258:	b	12cd4 <close@plt+0x1eb8>
   1325c:	str	fp, [sp, #152]	; 0x98
   13260:	mov	fp, r8
   13264:	ldr	r8, [sp, #152]	; 0x98
   13268:	sub	r3, r8, #2
   1326c:	clz	r3, r3
   13270:	lsr	r3, r3, #5
   13274:	str	r3, [sp, #40]	; 0x28
   13278:	b	1240c <close@plt+0x15f0>
   1327c:	mov	ip, #5
   13280:	ldr	r3, [sp, #28]
   13284:	str	ip, [sp]
   13288:	ldr	r2, [sp, #156]	; 0x9c
   1328c:	ldr	ip, [sp, #164]	; 0xa4
   13290:	ldr	r0, [sp, #160]	; 0xa0
   13294:	str	r2, [sp, #4]
   13298:	ldr	r2, [sp, #32]
   1329c:	ldr	r1, [sp, #72]	; 0x48
   132a0:	str	ip, [sp, #12]
   132a4:	ldr	ip, [sp, #168]	; 0xa8
   132a8:	str	r0, [sp, #8]
   132ac:	mov	r0, fp
   132b0:	str	ip, [sp, #16]
   132b4:	bl	11b60 <close@plt+0xd44>
   132b8:	mov	r4, r0
   132bc:	b	12450 <close@plt+0x1634>
   132c0:	mov	r8, #2
   132c4:	b	1240c <close@plt+0x15f0>
   132c8:	ldr	r2, [sp, #40]	; 0x28
   132cc:	b	12cd4 <close@plt+0x1eb8>
   132d0:	mov	r3, #0
   132d4:	mov	r2, #1
   132d8:	mov	r4, r3
   132dc:	strd	r2, [sp, #36]	; 0x24
   132e0:	strd	r2, [sp, #44]	; 0x2c
   132e4:	str	r2, [sp, #56]	; 0x38
   132e8:	str	r3, [sp, #68]	; 0x44
   132ec:	str	r3, [sp, #72]	; 0x48
   132f0:	movw	r3, #21068	; 0x524c
   132f4:	movt	r3, #1
   132f8:	str	r3, [sp, #60]	; 0x3c
   132fc:	b	11c48 <close@plt+0xe2c>
   13300:	mov	r3, #0
   13304:	mov	r1, #1
   13308:	mov	r2, r3
   1330c:	str	r1, [sp, #36]	; 0x24
   13310:	str	r3, [sp, #48]	; 0x30
   13314:	str	sl, [sp, #72]	; 0x48
   13318:	b	12250 <close@plt+0x1434>
   1331c:	bl	10e10 <abort@plt>
   13320:	strd	r4, [sp, #-36]!	; 0xffffffdc
   13324:	mov	r4, r0
   13328:	mov	r5, r3
   1332c:	strd	r6, [sp, #8]
   13330:	movw	r7, #24804	; 0x60e4
   13334:	movt	r7, #2
   13338:	strd	r8, [sp, #16]
   1333c:	strd	sl, [sp, #24]
   13340:	mov	sl, r1
   13344:	mov	fp, r2
   13348:	str	lr, [sp, #32]
   1334c:	sub	sp, sp, #60	; 0x3c
   13350:	bl	10d50 <__errno_location@plt>
   13354:	mov	r8, r0
   13358:	cmn	r4, #-2147483647	; 0x80000001
   1335c:	ldr	r6, [r7]
   13360:	movne	r0, #0
   13364:	moveq	r0, #1
   13368:	ldr	r3, [r8]
   1336c:	orrs	r0, r0, r4, lsr #31
   13370:	str	r3, [sp, #28]
   13374:	bne	13504 <close@plt+0x26e8>
   13378:	ldr	r3, [r7, #4]
   1337c:	cmp	r3, r4
   13380:	bgt	133e0 <close@plt+0x25c4>
   13384:	add	r1, r7, #8
   13388:	sub	r2, r4, r3
   1338c:	str	r3, [sp, #52]	; 0x34
   13390:	cmp	r6, r1
   13394:	add	r2, r2, #1
   13398:	beq	134dc <close@plt+0x26c0>
   1339c:	mov	r1, #8
   133a0:	mov	r0, r6
   133a4:	mvn	r3, #-2147483648	; 0x80000000
   133a8:	str	r1, [sp]
   133ac:	add	r1, sp, #52	; 0x34
   133b0:	bl	14384 <close@plt+0x3568>
   133b4:	mov	r6, r0
   133b8:	str	r0, [r7]
   133bc:	ldr	r0, [r7, #4]
   133c0:	mov	r1, #0
   133c4:	ldr	r2, [sp, #52]	; 0x34
   133c8:	sub	r2, r2, r0
   133cc:	add	r0, r6, r0, lsl #3
   133d0:	lsl	r2, r2, #3
   133d4:	bl	10d68 <memset@plt>
   133d8:	ldr	r3, [sp, #52]	; 0x34
   133dc:	str	r3, [r7, #4]
   133e0:	ldr	r1, [r5, #4]
   133e4:	add	r0, r6, r4, lsl #3
   133e8:	add	ip, r5, #8
   133ec:	mov	r3, fp
   133f0:	mov	r2, sl
   133f4:	ldr	r7, [r0, #4]
   133f8:	str	r0, [sp, #36]	; 0x24
   133fc:	str	ip, [sp, #40]	; 0x28
   13400:	orr	r0, r1, #1
   13404:	ldr	r9, [r6, r4, lsl #3]
   13408:	str	ip, [sp, #8]
   1340c:	ldr	lr, [r5, #44]	; 0x2c
   13410:	str	r0, [sp, #4]
   13414:	ldr	ip, [r5]
   13418:	mov	r1, r9
   1341c:	str	ip, [sp, #32]
   13420:	ldr	ip, [r5, #40]	; 0x28
   13424:	str	ip, [sp, #12]
   13428:	ldr	ip, [sp, #32]
   1342c:	str	lr, [sp, #16]
   13430:	str	r0, [sp, #44]	; 0x2c
   13434:	mov	r0, r7
   13438:	str	ip, [sp]
   1343c:	bl	11b60 <close@plt+0xd44>
   13440:	cmp	r9, r0
   13444:	bhi	134b4 <close@plt+0x2698>
   13448:	add	r9, r0, #1
   1344c:	movw	r3, #24916	; 0x6154
   13450:	movt	r3, #2
   13454:	cmp	r7, r3
   13458:	str	r9, [r6, r4, lsl #3]
   1345c:	beq	13468 <close@plt+0x264c>
   13460:	mov	r0, r7
   13464:	bl	148ec <close@plt+0x3ad0>
   13468:	mov	r0, r9
   1346c:	bl	141d4 <close@plt+0x33b8>
   13470:	ldr	ip, [r5]
   13474:	mov	r3, fp
   13478:	mov	r2, sl
   1347c:	mov	r1, r9
   13480:	mov	r7, r0
   13484:	ldr	lr, [sp, #36]	; 0x24
   13488:	ldr	r4, [r5, #40]	; 0x28
   1348c:	str	r0, [lr, #4]
   13490:	ldr	lr, [r5, #44]	; 0x2c
   13494:	str	ip, [sp]
   13498:	ldr	ip, [sp, #44]	; 0x2c
   1349c:	str	ip, [sp, #4]
   134a0:	ldr	ip, [sp, #40]	; 0x28
   134a4:	str	r4, [sp, #12]
   134a8:	str	lr, [sp, #16]
   134ac:	str	ip, [sp, #8]
   134b0:	bl	11b60 <close@plt+0xd44>
   134b4:	ldr	r3, [sp, #28]
   134b8:	mov	r0, r7
   134bc:	str	r3, [r8]
   134c0:	add	sp, sp, #60	; 0x3c
   134c4:	ldrd	r4, [sp]
   134c8:	ldrd	r6, [sp, #8]
   134cc:	ldrd	r8, [sp, #16]
   134d0:	ldrd	sl, [sp, #24]
   134d4:	add	sp, sp, #32
   134d8:	pop	{pc}		; (ldr pc, [sp], #4)
   134dc:	mov	r1, #8
   134e0:	mvn	r3, #-2147483648	; 0x80000000
   134e4:	str	r1, [sp]
   134e8:	add	r1, sp, #52	; 0x34
   134ec:	bl	14384 <close@plt+0x3568>
   134f0:	ldrd	r2, [r7, #8]
   134f4:	mov	r6, r0
   134f8:	str	r0, [r7]
   134fc:	strd	r2, [r0]
   13500:	b	133bc <close@plt+0x25a0>
   13504:	bl	10e10 <abort@plt>
   13508:	strd	r4, [sp, #-16]!
   1350c:	mov	r5, r0
   13510:	str	r6, [sp, #8]
   13514:	str	lr, [sp, #12]
   13518:	bl	10d50 <__errno_location@plt>
   1351c:	mov	r4, r0
   13520:	cmp	r5, #0
   13524:	ldr	r0, [pc, #32]	; 1354c <close@plt+0x2730>
   13528:	mov	r1, #48	; 0x30
   1352c:	movne	r0, r5
   13530:	ldr	r6, [r4]
   13534:	bl	144fc <close@plt+0x36e0>
   13538:	str	r6, [r4]
   1353c:	ldrd	r4, [sp]
   13540:	ldr	r6, [sp, #8]
   13544:	add	sp, sp, #12
   13548:	pop	{pc}		; (ldr pc, [sp], #4)
   1354c:	andeq	r6, r2, r4, asr r2
   13550:	ldr	r3, [pc, #12]	; 13564 <close@plt+0x2748>
   13554:	cmp	r0, #0
   13558:	moveq	r0, r3
   1355c:	ldr	r0, [r0]
   13560:	bx	lr
   13564:	andeq	r6, r2, r4, asr r2
   13568:	ldr	r3, [pc, #12]	; 1357c <close@plt+0x2760>
   1356c:	cmp	r0, #0
   13570:	moveq	r0, r3
   13574:	str	r1, [r0]
   13578:	bx	lr
   1357c:	andeq	r6, r2, r4, asr r2
   13580:	ldr	r3, [pc, #52]	; 135bc <close@plt+0x27a0>
   13584:	cmp	r0, #0
   13588:	push	{lr}		; (str lr, [sp, #-4]!)
   1358c:	lsr	lr, r1, #5
   13590:	and	r1, r1, #31
   13594:	moveq	r0, r3
   13598:	add	r3, r0, #8
   1359c:	ldr	ip, [r3, lr, lsl #2]
   135a0:	lsr	r0, ip, r1
   135a4:	eor	r2, r2, r0
   135a8:	and	r0, r0, #1
   135ac:	and	r2, r2, #1
   135b0:	eor	r1, ip, r2, lsl r1
   135b4:	str	r1, [r3, lr, lsl #2]
   135b8:	pop	{pc}		; (ldr pc, [sp], #4)
   135bc:	andeq	r6, r2, r4, asr r2
   135c0:	ldr	r3, [pc, #16]	; 135d8 <close@plt+0x27bc>
   135c4:	cmp	r0, #0
   135c8:	movne	r3, r0
   135cc:	ldr	r0, [r3, #4]
   135d0:	str	r1, [r3, #4]
   135d4:	bx	lr
   135d8:	andeq	r6, r2, r4, asr r2
   135dc:	ldr	r3, [pc, #48]	; 13614 <close@plt+0x27f8>
   135e0:	cmp	r0, #0
   135e4:	mov	ip, #10
   135e8:	moveq	r0, r3
   135ec:	cmp	r2, #0
   135f0:	cmpne	r1, #0
   135f4:	str	ip, [r0]
   135f8:	beq	13608 <close@plt+0x27ec>
   135fc:	str	r1, [r0, #40]	; 0x28
   13600:	str	r2, [r0, #44]	; 0x2c
   13604:	bx	lr
   13608:	str	r4, [sp, #-8]!
   1360c:	str	lr, [sp, #4]
   13610:	bl	10e10 <abort@plt>
   13614:	andeq	r6, r2, r4, asr r2
   13618:	strd	r4, [sp, #-28]!	; 0xffffffe4
   1361c:	strd	r6, [sp, #8]
   13620:	mov	r7, r0
   13624:	mov	r6, r1
   13628:	strd	r8, [sp, #16]
   1362c:	mov	r8, r2
   13630:	mov	r9, r3
   13634:	str	lr, [sp, #24]
   13638:	sub	sp, sp, #28
   1363c:	ldr	r4, [sp, #56]	; 0x38
   13640:	ldr	ip, [pc, #104]	; 136b0 <close@plt+0x2894>
   13644:	cmp	r4, #0
   13648:	moveq	r4, ip
   1364c:	bl	10d50 <__errno_location@plt>
   13650:	ldr	ip, [r4, #44]	; 0x2c
   13654:	mov	r5, r0
   13658:	mov	r1, r6
   1365c:	add	lr, r4, #8
   13660:	mov	r3, r9
   13664:	ldr	r6, [r5]
   13668:	mov	r2, r8
   1366c:	mov	r0, r7
   13670:	str	ip, [sp, #16]
   13674:	ldr	ip, [r4, #40]	; 0x28
   13678:	str	lr, [sp, #8]
   1367c:	str	ip, [sp, #12]
   13680:	ldr	ip, [r4, #4]
   13684:	str	ip, [sp, #4]
   13688:	ldr	ip, [r4]
   1368c:	str	ip, [sp]
   13690:	bl	11b60 <close@plt+0xd44>
   13694:	str	r6, [r5]
   13698:	add	sp, sp, #28
   1369c:	ldrd	r4, [sp]
   136a0:	ldrd	r6, [sp, #8]
   136a4:	ldrd	r8, [sp, #16]
   136a8:	add	sp, sp, #24
   136ac:	pop	{pc}		; (ldr pc, [sp], #4)
   136b0:	andeq	r6, r2, r4, asr r2
   136b4:	strd	r4, [sp, #-36]!	; 0xffffffdc
   136b8:	cmp	r3, #0
   136bc:	ldr	r4, [pc, #220]	; 137a0 <close@plt+0x2984>
   136c0:	movne	r4, r3
   136c4:	strd	r6, [sp, #8]
   136c8:	mov	r6, r2
   136cc:	strd	r8, [sp, #16]
   136d0:	mov	r9, r0
   136d4:	strd	sl, [sp, #24]
   136d8:	mov	sl, r1
   136dc:	str	lr, [sp, #32]
   136e0:	sub	sp, sp, #44	; 0x2c
   136e4:	bl	10d50 <__errno_location@plt>
   136e8:	ldr	r5, [r4, #4]
   136ec:	mov	r7, r0
   136f0:	mov	r1, #0
   136f4:	add	r8, r4, #8
   136f8:	mov	r3, sl
   136fc:	ldr	ip, [r4, #44]	; 0x2c
   13700:	mov	r2, r9
   13704:	mov	r0, r1
   13708:	ldr	lr, [r7]
   1370c:	cmp	r6, r1
   13710:	orreq	r5, r5, #1
   13714:	str	ip, [sp, #16]
   13718:	ldr	ip, [r4, #40]	; 0x28
   1371c:	stmib	sp, {r5, r8, ip}
   13720:	ldr	ip, [r4]
   13724:	str	lr, [sp, #28]
   13728:	str	ip, [sp]
   1372c:	bl	11b60 <close@plt+0xd44>
   13730:	add	r1, r0, #1
   13734:	mov	fp, r0
   13738:	mov	r0, r1
   1373c:	str	r1, [sp, #36]	; 0x24
   13740:	bl	141d4 <close@plt+0x33b8>
   13744:	ldr	ip, [r4, #44]	; 0x2c
   13748:	mov	r3, sl
   1374c:	mov	r2, r9
   13750:	ldr	r1, [sp, #36]	; 0x24
   13754:	str	ip, [sp, #16]
   13758:	ldr	ip, [r4, #40]	; 0x28
   1375c:	str	r0, [sp, #32]
   13760:	stmib	sp, {r5, r8, ip}
   13764:	ldr	ip, [r4]
   13768:	str	ip, [sp]
   1376c:	bl	11b60 <close@plt+0xd44>
   13770:	ldr	lr, [sp, #28]
   13774:	cmp	r6, #0
   13778:	ldr	r0, [sp, #32]
   1377c:	str	lr, [r7]
   13780:	strne	fp, [r6]
   13784:	add	sp, sp, #44	; 0x2c
   13788:	ldrd	r4, [sp]
   1378c:	ldrd	r6, [sp, #8]
   13790:	ldrd	r8, [sp, #16]
   13794:	ldrd	sl, [sp, #24]
   13798:	add	sp, sp, #32
   1379c:	pop	{pc}		; (ldr pc, [sp], #4)
   137a0:	andeq	r6, r2, r4, asr r2
   137a4:	mov	r3, r2
   137a8:	mov	r2, #0
   137ac:	b	136b4 <close@plt+0x2898>
   137b0:	strd	r4, [sp, #-24]!	; 0xffffffe8
   137b4:	movw	r5, #24804	; 0x60e4
   137b8:	movt	r5, #2
   137bc:	ldr	r3, [r5, #4]
   137c0:	strd	r6, [sp, #8]
   137c4:	str	r8, [sp, #16]
   137c8:	str	lr, [sp, #20]
   137cc:	ldr	r7, [r5]
   137d0:	cmp	r3, #1
   137d4:	ble	137f8 <close@plt+0x29dc>
   137d8:	mov	r4, #1
   137dc:	add	r6, r7, #4
   137e0:	ldr	r0, [r6, r4, lsl #3]
   137e4:	add	r4, r4, #1
   137e8:	bl	148ec <close@plt+0x3ad0>
   137ec:	ldr	r3, [r5, #4]
   137f0:	cmp	r3, r4
   137f4:	bgt	137e0 <close@plt+0x29c4>
   137f8:	ldr	r0, [r7, #4]
   137fc:	movw	r4, #24916	; 0x6154
   13800:	movt	r4, #2
   13804:	cmp	r0, r4
   13808:	beq	1381c <close@plt+0x2a00>
   1380c:	bl	148ec <close@plt+0x3ad0>
   13810:	mov	r3, #256	; 0x100
   13814:	str	r3, [r5, #8]
   13818:	str	r4, [r5, #12]
   1381c:	ldr	r4, [pc, #44]	; 13850 <close@plt+0x2a34>
   13820:	cmp	r7, r4
   13824:	beq	13834 <close@plt+0x2a18>
   13828:	mov	r0, r7
   1382c:	bl	148ec <close@plt+0x3ad0>
   13830:	str	r4, [r5]
   13834:	mov	r3, #1
   13838:	ldrd	r6, [sp, #8]
   1383c:	str	r3, [r5, #4]
   13840:	ldrd	r4, [sp]
   13844:	ldr	r8, [sp, #16]
   13848:	add	sp, sp, #20
   1384c:	pop	{pc}		; (ldr pc, [sp], #4)
   13850:	andeq	r6, r2, ip, ror #1
   13854:	ldr	r3, [pc, #4]	; 13860 <close@plt+0x2a44>
   13858:	mvn	r2, #0
   1385c:	b	13320 <close@plt+0x2504>
   13860:	andeq	r6, r2, r4, asr r2
   13864:	ldr	r3, [pc]	; 1386c <close@plt+0x2a50>
   13868:	b	13320 <close@plt+0x2504>
   1386c:	andeq	r6, r2, r4, asr r2
   13870:	mov	r1, r0
   13874:	ldr	r3, [pc, #8]	; 13884 <close@plt+0x2a68>
   13878:	mvn	r2, #0
   1387c:	mov	r0, #0
   13880:	b	13320 <close@plt+0x2504>
   13884:	andeq	r6, r2, r4, asr r2
   13888:	mov	r2, r1
   1388c:	ldr	r3, [pc, #8]	; 1389c <close@plt+0x2a80>
   13890:	mov	r1, r0
   13894:	mov	r0, #0
   13898:	b	13320 <close@plt+0x2504>
   1389c:	andeq	r6, r2, r4, asr r2
   138a0:	strd	r4, [sp, #-12]!
   138a4:	mov	r5, r2
   138a8:	mov	r4, r0
   138ac:	str	lr, [sp, #8]
   138b0:	sub	sp, sp, #52	; 0x34
   138b4:	mov	r0, sp
   138b8:	bl	119bc <close@plt+0xba0>
   138bc:	mov	r3, sp
   138c0:	mov	r1, r5
   138c4:	mov	r0, r4
   138c8:	mvn	r2, #0
   138cc:	bl	13320 <close@plt+0x2504>
   138d0:	add	sp, sp, #52	; 0x34
   138d4:	ldrd	r4, [sp]
   138d8:	add	sp, sp, #8
   138dc:	pop	{pc}		; (ldr pc, [sp], #4)
   138e0:	strd	r4, [sp, #-16]!
   138e4:	mov	r5, r2
   138e8:	mov	r4, r0
   138ec:	str	r6, [sp, #8]
   138f0:	mov	r6, r3
   138f4:	str	lr, [sp, #12]
   138f8:	sub	sp, sp, #48	; 0x30
   138fc:	mov	r0, sp
   13900:	bl	119bc <close@plt+0xba0>
   13904:	mov	r3, sp
   13908:	mov	r2, r6
   1390c:	mov	r1, r5
   13910:	mov	r0, r4
   13914:	bl	13320 <close@plt+0x2504>
   13918:	add	sp, sp, #48	; 0x30
   1391c:	ldrd	r4, [sp]
   13920:	ldr	r6, [sp, #8]
   13924:	add	sp, sp, #12
   13928:	pop	{pc}		; (ldr pc, [sp], #4)
   1392c:	mov	r2, r1
   13930:	mov	r1, r0
   13934:	mov	r0, #0
   13938:	b	138a0 <close@plt+0x2a84>
   1393c:	mov	r3, r2
   13940:	mov	r2, r1
   13944:	mov	r1, r0
   13948:	mov	r0, #0
   1394c:	b	138e0 <close@plt+0x2ac4>
   13950:	ldr	ip, [pc, #140]	; 139e4 <close@plt+0x2bc8>
   13954:	strd	r4, [sp, #-28]!	; 0xffffffe4
   13958:	ldrd	r4, [ip]
   1395c:	strd	r6, [sp, #8]
   13960:	ldrd	r6, [ip, #8]
   13964:	strd	r8, [sp, #16]
   13968:	lsr	r9, r2, #5
   1396c:	str	lr, [sp, #24]
   13970:	sub	sp, sp, #52	; 0x34
   13974:	and	lr, r2, #31
   13978:	add	r8, sp, #8
   1397c:	mov	r2, r1
   13980:	strd	r4, [sp]
   13984:	mov	r1, r0
   13988:	mov	r3, sp
   1398c:	strd	r6, [sp, #8]
   13990:	mov	r0, #0
   13994:	ldrd	r4, [ip, #16]
   13998:	ldrd	r6, [ip, #24]
   1399c:	strd	r4, [sp, #16]
   139a0:	ldrd	r4, [ip, #32]
   139a4:	strd	r6, [sp, #24]
   139a8:	ldrd	r6, [ip, #40]	; 0x28
   139ac:	strd	r4, [sp, #32]
   139b0:	strd	r6, [sp, #40]	; 0x28
   139b4:	ldr	ip, [r8, r9, lsl #2]
   139b8:	mvn	r4, ip, lsr lr
   139bc:	and	r4, r4, #1
   139c0:	eor	lr, ip, r4, lsl lr
   139c4:	str	lr, [r8, r9, lsl #2]
   139c8:	bl	13320 <close@plt+0x2504>
   139cc:	add	sp, sp, #52	; 0x34
   139d0:	ldrd	r4, [sp]
   139d4:	ldrd	r6, [sp, #8]
   139d8:	ldrd	r8, [sp, #16]
   139dc:	add	sp, sp, #24
   139e0:	pop	{pc}		; (ldr pc, [sp], #4)
   139e4:	andeq	r6, r2, r4, asr r2
   139e8:	mov	r2, r1
   139ec:	mvn	r1, #0
   139f0:	b	13950 <close@plt+0x2b34>
   139f4:	mov	r2, #58	; 0x3a
   139f8:	mvn	r1, #0
   139fc:	b	13950 <close@plt+0x2b34>
   13a00:	mov	r2, #58	; 0x3a
   13a04:	b	13950 <close@plt+0x2b34>
   13a08:	strd	r4, [sp, #-20]!	; 0xffffffec
   13a0c:	strd	r6, [sp, #8]
   13a10:	mov	r6, r0
   13a14:	mov	r7, r2
   13a18:	str	lr, [sp, #16]
   13a1c:	sub	sp, sp, #100	; 0x64
   13a20:	mov	r0, sp
   13a24:	bl	119bc <close@plt+0xba0>
   13a28:	ldrd	r4, [sp, #8]
   13a2c:	mov	r1, r7
   13a30:	mov	r0, r6
   13a34:	add	r3, sp, #48	; 0x30
   13a38:	mvn	r2, #0
   13a3c:	ldrd	r6, [sp]
   13a40:	strd	r4, [sp, #56]	; 0x38
   13a44:	ldrd	r4, [sp, #16]
   13a48:	strd	r6, [sp, #48]	; 0x30
   13a4c:	ldrd	r6, [sp, #32]
   13a50:	ldr	lr, [sp, #60]	; 0x3c
   13a54:	strd	r4, [sp, #64]	; 0x40
   13a58:	ldrd	r4, [sp, #24]
   13a5c:	mvn	ip, lr
   13a60:	and	ip, ip, #67108864	; 0x4000000
   13a64:	strd	r4, [sp, #72]	; 0x48
   13a68:	eor	ip, ip, lr
   13a6c:	ldrd	r4, [sp, #40]	; 0x28
   13a70:	str	ip, [sp, #60]	; 0x3c
   13a74:	strd	r6, [sp, #80]	; 0x50
   13a78:	strd	r4, [sp, #88]	; 0x58
   13a7c:	bl	13320 <close@plt+0x2504>
   13a80:	add	sp, sp, #100	; 0x64
   13a84:	ldrd	r4, [sp]
   13a88:	ldrd	r6, [sp, #8]
   13a8c:	add	sp, sp, #16
   13a90:	pop	{pc}		; (ldr pc, [sp], #4)
   13a94:	ldr	ip, [pc, #156]	; 13b38 <close@plt+0x2d1c>
   13a98:	cmp	r2, #0
   13a9c:	cmpne	r1, #0
   13aa0:	strd	r4, [sp, #-32]!	; 0xffffffe0
   13aa4:	strd	r6, [sp, #8]
   13aa8:	mov	r6, r2
   13aac:	str	r8, [sp, #16]
   13ab0:	mov	r8, r3
   13ab4:	strd	sl, [sp, #20]
   13ab8:	ldrd	r4, [ip]
   13abc:	str	lr, [sp, #28]
   13ac0:	sub	sp, sp, #48	; 0x30
   13ac4:	mov	lr, #10
   13ac8:	ldrd	r2, [ip, #8]
   13acc:	ldrd	sl, [ip, #16]
   13ad0:	strd	r4, [sp]
   13ad4:	ldrd	r4, [ip, #32]
   13ad8:	str	lr, [sp]
   13adc:	strd	r2, [sp, #8]
   13ae0:	strd	sl, [sp, #16]
   13ae4:	ldrd	r2, [ip, #24]
   13ae8:	ldrd	sl, [ip, #40]	; 0x28
   13aec:	strd	r2, [sp, #24]
   13af0:	strd	r4, [sp, #32]
   13af4:	strd	sl, [sp, #40]	; 0x28
   13af8:	beq	13b34 <close@plt+0x2d18>
   13afc:	ldr	r2, [sp, #80]	; 0x50
   13b00:	mov	r7, r1
   13b04:	mov	r3, sp
   13b08:	mov	r1, r8
   13b0c:	str	r7, [sp, #40]	; 0x28
   13b10:	str	r6, [sp, #44]	; 0x2c
   13b14:	bl	13320 <close@plt+0x2504>
   13b18:	add	sp, sp, #48	; 0x30
   13b1c:	ldrd	r4, [sp]
   13b20:	ldrd	r6, [sp, #8]
   13b24:	ldr	r8, [sp, #16]
   13b28:	ldrd	sl, [sp, #20]
   13b2c:	add	sp, sp, #28
   13b30:	pop	{pc}		; (ldr pc, [sp], #4)
   13b34:	bl	10e10 <abort@plt>
   13b38:	andeq	r6, r2, r4, asr r2
   13b3c:	mvn	ip, #0
   13b40:	push	{lr}		; (str lr, [sp, #-4]!)
   13b44:	sub	sp, sp, #12
   13b48:	str	ip, [sp]
   13b4c:	bl	13a94 <close@plt+0x2c78>
   13b50:	add	sp, sp, #12
   13b54:	pop	{pc}		; (ldr pc, [sp], #4)
   13b58:	mvn	ip, #0
   13b5c:	push	{lr}		; (str lr, [sp, #-4]!)
   13b60:	sub	sp, sp, #12
   13b64:	mov	r3, r2
   13b68:	mov	r2, r1
   13b6c:	mov	r1, r0
   13b70:	mov	r0, #0
   13b74:	str	ip, [sp]
   13b78:	bl	13a94 <close@plt+0x2c78>
   13b7c:	add	sp, sp, #12
   13b80:	pop	{pc}		; (ldr pc, [sp], #4)
   13b84:	push	{lr}		; (str lr, [sp, #-4]!)
   13b88:	sub	sp, sp, #12
   13b8c:	str	r3, [sp]
   13b90:	mov	r3, r2
   13b94:	mov	r2, r1
   13b98:	mov	r1, r0
   13b9c:	mov	r0, #0
   13ba0:	bl	13a94 <close@plt+0x2c78>
   13ba4:	add	sp, sp, #12
   13ba8:	pop	{pc}		; (ldr pc, [sp], #4)
   13bac:	ldr	r3, [pc]	; 13bb4 <close@plt+0x2d98>
   13bb0:	b	13320 <close@plt+0x2504>
   13bb4:	strdeq	r6, [r2], -r4
   13bb8:	mov	r2, r1
   13bbc:	ldr	r3, [pc, #8]	; 13bcc <close@plt+0x2db0>
   13bc0:	mov	r1, r0
   13bc4:	mov	r0, #0
   13bc8:	b	13320 <close@plt+0x2504>
   13bcc:	strdeq	r6, [r2], -r4
   13bd0:	ldr	r3, [pc, #4]	; 13bdc <close@plt+0x2dc0>
   13bd4:	mvn	r2, #0
   13bd8:	b	13320 <close@plt+0x2504>
   13bdc:	strdeq	r6, [r2], -r4
   13be0:	mov	r1, r0
   13be4:	ldr	r3, [pc, #8]	; 13bf4 <close@plt+0x2dd8>
   13be8:	mvn	r2, #0
   13bec:	mov	r0, #0
   13bf0:	b	13320 <close@plt+0x2504>
   13bf4:	strdeq	r6, [r2], -r4
   13bf8:	cmp	r1, #0
   13bfc:	strd	r4, [sp, #-16]!
   13c00:	mov	ip, r3
   13c04:	str	r6, [sp, #8]
   13c08:	mov	r4, r0
   13c0c:	str	lr, [sp, #12]
   13c10:	sub	sp, sp, #32
   13c14:	ldr	r5, [sp, #48]	; 0x30
   13c18:	ldr	r6, [sp, #52]	; 0x34
   13c1c:	beq	13d60 <close@plt+0x2f44>
   13c20:	mov	r3, r1
   13c24:	mov	r1, #1
   13c28:	stm	sp, {r2, ip}
   13c2c:	movw	r2, #21180	; 0x52bc
   13c30:	movt	r2, #1
   13c34:	bl	10d8c <__fprintf_chk@plt>
   13c38:	mov	r2, #5
   13c3c:	movw	r1, #21200	; 0x52d0
   13c40:	movt	r1, #1
   13c44:	mov	r0, #0
   13c48:	bl	10c60 <dcgettext@plt>
   13c4c:	movw	ip, #2022	; 0x7e6
   13c50:	mov	r3, r0
   13c54:	mov	r1, #1
   13c58:	movw	r2, #21928	; 0x55a8
   13c5c:	movt	r2, #1
   13c60:	mov	r0, r4
   13c64:	str	ip, [sp]
   13c68:	bl	10d8c <__fprintf_chk@plt>
   13c6c:	mov	r1, r4
   13c70:	mov	r0, #10
   13c74:	bl	10c54 <fputc_unlocked@plt>
   13c78:	mov	r2, #5
   13c7c:	movw	r1, #21204	; 0x52d4
   13c80:	movt	r1, #1
   13c84:	mov	r0, #0
   13c88:	bl	10c60 <dcgettext@plt>
   13c8c:	mov	r2, r0
   13c90:	mov	r1, #1
   13c94:	movw	r3, #21376	; 0x5380
   13c98:	movt	r3, #1
   13c9c:	mov	r0, r4
   13ca0:	bl	10d8c <__fprintf_chk@plt>
   13ca4:	mov	r1, r4
   13ca8:	mov	r0, #10
   13cac:	bl	10c54 <fputc_unlocked@plt>
   13cb0:	cmp	r6, #9
   13cb4:	ldrls	pc, [pc, r6, lsl #2]
   13cb8:	b	13fcc <close@plt+0x31b0>
   13cbc:	andeq	r3, r1, ip, asr #26
   13cc0:	andeq	r3, r1, ip, ror sp
   13cc4:			; <UNDEFINED> instruction: 0x00013db8
   13cc8:	strdeq	r3, [r1], -r8
   13ccc:	andeq	r3, r1, r0, asr #28
   13cd0:	andeq	r3, r1, r8, ror lr
   13cd4:	andeq	r3, r1, r0, asr #29
   13cd8:	andeq	r3, r1, r4, lsl pc
   13cdc:	andeq	r3, r1, ip, ror #30
   13ce0:	andeq	r3, r1, r4, ror #25
   13ce4:	movw	r1, #21680	; 0x54b0
   13ce8:	movt	r1, #1
   13cec:	mov	r2, #5
   13cf0:	mov	r0, #0
   13cf4:	bl	10c60 <dcgettext@plt>
   13cf8:	ldr	lr, [r5, #4]
   13cfc:	mov	r2, r0
   13d00:	mov	r1, #1
   13d04:	mov	r0, r4
   13d08:	ldr	r3, [r5, #8]
   13d0c:	ldr	ip, [r5, #32]
   13d10:	str	lr, [sp]
   13d14:	ldr	lr, [r5, #12]
   13d18:	str	ip, [sp, #28]
   13d1c:	ldr	ip, [r5, #28]
   13d20:	str	r3, [sp, #4]
   13d24:	ldr	r3, [r5, #16]
   13d28:	str	lr, [sp, #8]
   13d2c:	ldr	lr, [r5, #20]
   13d30:	str	ip, [sp, #24]
   13d34:	ldr	ip, [r5, #24]
   13d38:	str	r3, [sp, #12]
   13d3c:	ldr	r3, [r5]
   13d40:	str	lr, [sp, #16]
   13d44:	str	ip, [sp, #20]
   13d48:	bl	10d8c <__fprintf_chk@plt>
   13d4c:	add	sp, sp, #32
   13d50:	ldrd	r4, [sp]
   13d54:	ldr	r6, [sp, #8]
   13d58:	add	sp, sp, #12
   13d5c:	pop	{pc}		; (ldr pc, [sp], #4)
   13d60:	mov	r3, r2
   13d64:	mov	r1, #1
   13d68:	str	ip, [sp]
   13d6c:	movw	r2, #21192	; 0x52c8
   13d70:	movt	r2, #1
   13d74:	bl	10d8c <__fprintf_chk@plt>
   13d78:	b	13c38 <close@plt+0x2e1c>
   13d7c:	mov	r2, #5
   13d80:	movw	r1, #21412	; 0x53a4
   13d84:	movt	r1, #1
   13d88:	mov	r0, #0
   13d8c:	bl	10c60 <dcgettext@plt>
   13d90:	ldr	r3, [r5]
   13d94:	mov	r2, r0
   13d98:	mov	r1, #1
   13d9c:	mov	r0, r4
   13da0:	add	sp, sp, #32
   13da4:	ldrd	r4, [sp]
   13da8:	ldr	r6, [sp, #8]
   13dac:	ldr	lr, [sp, #12]
   13db0:	add	sp, sp, #16
   13db4:	b	10d8c <__fprintf_chk@plt>
   13db8:	mov	r2, #5
   13dbc:	movw	r1, #21428	; 0x53b4
   13dc0:	movt	r1, #1
   13dc4:	mov	r0, #0
   13dc8:	bl	10c60 <dcgettext@plt>
   13dcc:	ldm	r5, {r3, ip}
   13dd0:	mov	r2, r0
   13dd4:	mov	r1, #1
   13dd8:	mov	r0, r4
   13ddc:	str	ip, [sp, #48]	; 0x30
   13de0:	add	sp, sp, #32
   13de4:	ldrd	r4, [sp]
   13de8:	ldr	r6, [sp, #8]
   13dec:	ldr	lr, [sp, #12]
   13df0:	add	sp, sp, #16
   13df4:	b	10d8c <__fprintf_chk@plt>
   13df8:	mov	r2, #5
   13dfc:	movw	r1, #21452	; 0x53cc
   13e00:	movt	r1, #1
   13e04:	mov	r0, #0
   13e08:	bl	10c60 <dcgettext@plt>
   13e0c:	ldm	r5, {r3, lr}
   13e10:	mov	r2, r0
   13e14:	mov	r1, #1
   13e18:	mov	r0, r4
   13e1c:	ldr	ip, [r5, #8]
   13e20:	str	lr, [sp, #48]	; 0x30
   13e24:	str	ip, [sp, #52]	; 0x34
   13e28:	add	sp, sp, #32
   13e2c:	ldrd	r4, [sp]
   13e30:	ldr	r6, [sp, #8]
   13e34:	ldr	lr, [sp, #12]
   13e38:	add	sp, sp, #16
   13e3c:	b	10d8c <__fprintf_chk@plt>
   13e40:	mov	r2, #5
   13e44:	movw	r1, #21480	; 0x53e8
   13e48:	movt	r1, #1
   13e4c:	mov	r0, #0
   13e50:	bl	10c60 <dcgettext@plt>
   13e54:	ldmib	r5, {r3, ip, lr}
   13e58:	mov	r2, r0
   13e5c:	mov	r1, #1
   13e60:	mov	r0, r4
   13e64:	str	r3, [sp]
   13e68:	ldr	r3, [r5]
   13e6c:	stmib	sp, {ip, lr}
   13e70:	bl	10d8c <__fprintf_chk@plt>
   13e74:	b	13d4c <close@plt+0x2f30>
   13e78:	mov	r2, #5
   13e7c:	movw	r1, #21512	; 0x5408
   13e80:	movt	r1, #1
   13e84:	mov	r0, #0
   13e88:	bl	10c60 <dcgettext@plt>
   13e8c:	ldmib	r5, {ip, lr}
   13e90:	mov	r2, r0
   13e94:	mov	r1, #1
   13e98:	mov	r0, r4
   13e9c:	ldr	r3, [r5, #16]
   13ea0:	str	ip, [sp]
   13ea4:	ldr	ip, [r5, #12]
   13ea8:	str	r3, [sp, #12]
   13eac:	ldr	r3, [r5]
   13eb0:	str	lr, [sp, #4]
   13eb4:	str	ip, [sp, #8]
   13eb8:	bl	10d8c <__fprintf_chk@plt>
   13ebc:	b	13d4c <close@plt+0x2f30>
   13ec0:	mov	r2, #5
   13ec4:	movw	r1, #21548	; 0x542c
   13ec8:	movt	r1, #1
   13ecc:	mov	r0, #0
   13ed0:	bl	10c60 <dcgettext@plt>
   13ed4:	ldr	lr, [r5, #4]
   13ed8:	mov	r2, r0
   13edc:	mov	r1, #1
   13ee0:	mov	r0, r4
   13ee4:	ldr	r3, [r5, #8]
   13ee8:	ldr	ip, [r5, #20]
   13eec:	str	lr, [sp]
   13ef0:	ldr	lr, [r5, #12]
   13ef4:	str	ip, [sp, #16]
   13ef8:	ldr	ip, [r5, #16]
   13efc:	str	r3, [sp, #4]
   13f00:	ldr	r3, [r5]
   13f04:	str	lr, [sp, #8]
   13f08:	str	ip, [sp, #12]
   13f0c:	bl	10d8c <__fprintf_chk@plt>
   13f10:	b	13d4c <close@plt+0x2f30>
   13f14:	mov	r2, #5
   13f18:	movw	r1, #21588	; 0x5454
   13f1c:	movt	r1, #1
   13f20:	mov	r0, #0
   13f24:	bl	10c60 <dcgettext@plt>
   13f28:	ldmib	r5, {r3, ip}
   13f2c:	mov	r2, r0
   13f30:	mov	r1, #1
   13f34:	mov	r0, r4
   13f38:	ldr	lr, [r5, #24]
   13f3c:	str	r3, [sp]
   13f40:	ldr	r3, [r5, #12]
   13f44:	str	lr, [sp, #20]
   13f48:	ldr	lr, [r5, #20]
   13f4c:	str	ip, [sp, #4]
   13f50:	ldr	ip, [r5, #16]
   13f54:	str	r3, [sp, #8]
   13f58:	ldr	r3, [r5]
   13f5c:	str	ip, [sp, #12]
   13f60:	str	lr, [sp, #16]
   13f64:	bl	10d8c <__fprintf_chk@plt>
   13f68:	b	13d4c <close@plt+0x2f30>
   13f6c:	mov	r2, #5
   13f70:	movw	r1, #21632	; 0x5480
   13f74:	movt	r1, #1
   13f78:	mov	r0, #0
   13f7c:	bl	10c60 <dcgettext@plt>
   13f80:	ldmib	r5, {ip, lr}
   13f84:	mov	r2, r0
   13f88:	mov	r1, #1
   13f8c:	mov	r0, r4
   13f90:	ldr	r3, [r5, #28]
   13f94:	str	ip, [sp]
   13f98:	ldr	ip, [r5, #12]
   13f9c:	str	r3, [sp, #24]
   13fa0:	ldr	r3, [r5, #24]
   13fa4:	str	lr, [sp, #4]
   13fa8:	ldr	lr, [r5, #16]
   13fac:	str	ip, [sp, #8]
   13fb0:	ldr	ip, [r5, #20]
   13fb4:	str	r3, [sp, #20]
   13fb8:	ldr	r3, [r5]
   13fbc:	str	lr, [sp, #12]
   13fc0:	str	ip, [sp, #16]
   13fc4:	bl	10d8c <__fprintf_chk@plt>
   13fc8:	b	13d4c <close@plt+0x2f30>
   13fcc:	movw	r1, #21732	; 0x54e4
   13fd0:	movt	r1, #1
   13fd4:	b	13cec <close@plt+0x2ed0>
   13fd8:	strd	r4, [sp, #-12]!
   13fdc:	str	lr, [sp, #8]
   13fe0:	sub	sp, sp, #12
   13fe4:	ldr	r5, [sp, #24]
   13fe8:	ldr	ip, [r5]
   13fec:	cmp	ip, #0
   13ff0:	beq	1400c <close@plt+0x31f0>
   13ff4:	mov	lr, r5
   13ff8:	mov	ip, #0
   13ffc:	ldr	r4, [lr, #4]!
   14000:	add	ip, ip, #1
   14004:	cmp	r4, #0
   14008:	bne	13ffc <close@plt+0x31e0>
   1400c:	stm	sp, {r5, ip}
   14010:	bl	13bf8 <close@plt+0x2ddc>
   14014:	add	sp, sp, #12
   14018:	ldrd	r4, [sp]
   1401c:	add	sp, sp, #8
   14020:	pop	{pc}		; (ldr pc, [sp], #4)
   14024:	strd	r4, [sp, #-16]!
   14028:	mov	ip, #0
   1402c:	str	r6, [sp, #8]
   14030:	str	lr, [sp, #12]
   14034:	sub	sp, sp, #48	; 0x30
   14038:	ldr	r5, [sp, #64]	; 0x40
   1403c:	add	r6, sp, #8
   14040:	mov	r4, r6
   14044:	ldr	lr, [r5], #4
   14048:	cmp	lr, #0
   1404c:	str	lr, [r4], #4
   14050:	beq	14060 <close@plt+0x3244>
   14054:	add	ip, ip, #1
   14058:	cmp	ip, #10
   1405c:	bne	14044 <close@plt+0x3228>
   14060:	stm	sp, {r6, ip}
   14064:	bl	13bf8 <close@plt+0x2ddc>
   14068:	add	sp, sp, #48	; 0x30
   1406c:	ldrd	r4, [sp]
   14070:	ldr	r6, [sp, #8]
   14074:	add	sp, sp, #12
   14078:	pop	{pc}		; (ldr pc, [sp], #4)
   1407c:	push	{r3}		; (str r3, [sp, #-4]!)
   14080:	mov	ip, #0
   14084:	strd	r4, [sp, #-12]!
   14088:	str	lr, [sp, #8]
   1408c:	sub	sp, sp, #56	; 0x38
   14090:	add	r3, sp, #72	; 0x48
   14094:	add	r5, sp, #16
   14098:	mov	r4, r3
   1409c:	mov	lr, r5
   140a0:	str	r3, [sp, #12]
   140a4:	ldr	r3, [r4], #4
   140a8:	cmp	r3, #0
   140ac:	str	r3, [lr], #4
   140b0:	beq	140c0 <close@plt+0x32a4>
   140b4:	add	ip, ip, #1
   140b8:	cmp	ip, #10
   140bc:	bne	140a4 <close@plt+0x3288>
   140c0:	ldr	r3, [sp, #68]	; 0x44
   140c4:	stm	sp, {r5, ip}
   140c8:	bl	13bf8 <close@plt+0x2ddc>
   140cc:	add	sp, sp, #56	; 0x38
   140d0:	ldrd	r4, [sp]
   140d4:	ldr	lr, [sp, #8]
   140d8:	add	sp, sp, #12
   140dc:	add	sp, sp, #4
   140e0:	bx	lr
   140e4:	movw	r3, #24892	; 0x613c
   140e8:	movt	r3, #2
   140ec:	str	r4, [sp, #-8]!
   140f0:	mov	r0, #10
   140f4:	ldr	r1, [r3]
   140f8:	str	lr, [sp, #4]
   140fc:	bl	10c54 <fputc_unlocked@plt>
   14100:	mov	r2, #5
   14104:	movw	r1, #21792	; 0x5520
   14108:	movt	r1, #1
   1410c:	mov	r0, #0
   14110:	bl	10c60 <dcgettext@plt>
   14114:	mov	r1, r0
   14118:	movw	r2, #21812	; 0x5534
   1411c:	movt	r2, #1
   14120:	mov	r0, #1
   14124:	bl	10d74 <__printf_chk@plt>
   14128:	mov	r2, #5
   1412c:	movw	r1, #21836	; 0x554c
   14130:	movt	r1, #1
   14134:	mov	r0, #0
   14138:	bl	10c60 <dcgettext@plt>
   1413c:	mov	r1, r0
   14140:	movw	r3, #20260	; 0x4f24
   14144:	movt	r3, #1
   14148:	movw	r2, #20300	; 0x4f4c
   1414c:	movt	r2, #1
   14150:	mov	r0, #1
   14154:	bl	10d74 <__printf_chk@plt>
   14158:	mov	r2, #5
   1415c:	movw	r1, #21856	; 0x5560
   14160:	movt	r1, #1
   14164:	mov	r0, #0
   14168:	bl	10c60 <dcgettext@plt>
   1416c:	mov	r1, r0
   14170:	movw	r2, #21896	; 0x5588
   14174:	movt	r2, #1
   14178:	mov	r0, #1
   1417c:	ldr	r4, [sp]
   14180:	ldr	lr, [sp, #4]
   14184:	add	sp, sp, #8
   14188:	b	10d74 <__printf_chk@plt>
   1418c:	str	r4, [sp, #-8]!
   14190:	str	lr, [sp, #4]
   14194:	bl	146bc <close@plt+0x38a0>
   14198:	cmp	r0, #0
   1419c:	beq	141ac <close@plt+0x3390>
   141a0:	ldr	r4, [sp]
   141a4:	add	sp, sp, #4
   141a8:	pop	{pc}		; (ldr pc, [sp], #4)
   141ac:	bl	14604 <close@plt+0x37e8>
   141b0:	str	r4, [sp, #-8]!
   141b4:	str	lr, [sp, #4]
   141b8:	bl	146bc <close@plt+0x38a0>
   141bc:	cmp	r0, #0
   141c0:	beq	141d0 <close@plt+0x33b4>
   141c4:	ldr	r4, [sp]
   141c8:	add	sp, sp, #4
   141cc:	pop	{pc}		; (ldr pc, [sp], #4)
   141d0:	bl	14604 <close@plt+0x37e8>
   141d4:	str	r4, [sp, #-8]!
   141d8:	str	lr, [sp, #4]
   141dc:	bl	146bc <close@plt+0x38a0>
   141e0:	cmp	r0, #0
   141e4:	beq	141f4 <close@plt+0x33d8>
   141e8:	ldr	r4, [sp]
   141ec:	add	sp, sp, #4
   141f0:	pop	{pc}		; (ldr pc, [sp], #4)
   141f4:	bl	14604 <close@plt+0x37e8>
   141f8:	strd	r4, [sp, #-16]!
   141fc:	mov	r5, r0
   14200:	mov	r4, r1
   14204:	str	r6, [sp, #8]
   14208:	str	lr, [sp, #12]
   1420c:	bl	146f8 <close@plt+0x38dc>
   14210:	cmp	r0, #0
   14214:	beq	14228 <close@plt+0x340c>
   14218:	ldrd	r4, [sp]
   1421c:	ldr	r6, [sp, #8]
   14220:	add	sp, sp, #12
   14224:	pop	{pc}		; (ldr pc, [sp], #4)
   14228:	adds	r4, r4, #0
   1422c:	movne	r4, #1
   14230:	cmp	r5, #0
   14234:	moveq	r4, #1
   14238:	cmp	r4, #0
   1423c:	beq	14218 <close@plt+0x33fc>
   14240:	bl	14604 <close@plt+0x37e8>
   14244:	cmp	r1, #0
   14248:	orreq	r1, r1, #1
   1424c:	str	r4, [sp, #-8]!
   14250:	str	lr, [sp, #4]
   14254:	bl	146f8 <close@plt+0x38dc>
   14258:	cmp	r0, #0
   1425c:	beq	1426c <close@plt+0x3450>
   14260:	ldr	r4, [sp]
   14264:	add	sp, sp, #4
   14268:	pop	{pc}		; (ldr pc, [sp], #4)
   1426c:	bl	14604 <close@plt+0x37e8>
   14270:	strd	r4, [sp, #-16]!
   14274:	mov	r4, r0
   14278:	mov	r5, r2
   1427c:	str	r6, [sp, #8]
   14280:	mov	r6, r1
   14284:	str	lr, [sp, #12]
   14288:	bl	14ad8 <close@plt+0x3cbc>
   1428c:	cmp	r0, #0
   14290:	beq	142a4 <close@plt+0x3488>
   14294:	ldrd	r4, [sp]
   14298:	ldr	r6, [sp, #8]
   1429c:	add	sp, sp, #12
   142a0:	pop	{pc}		; (ldr pc, [sp], #4)
   142a4:	cmp	r4, #0
   142a8:	beq	142b8 <close@plt+0x349c>
   142ac:	cmp	r6, #0
   142b0:	cmpne	r5, #0
   142b4:	beq	14294 <close@plt+0x3478>
   142b8:	bl	14604 <close@plt+0x37e8>
   142bc:	b	14270 <close@plt+0x3454>
   142c0:	cmp	r2, #0
   142c4:	cmpne	r1, #0
   142c8:	str	r4, [sp, #-8]!
   142cc:	moveq	r2, #1
   142d0:	str	lr, [sp, #4]
   142d4:	moveq	r1, r2
   142d8:	bl	14ad8 <close@plt+0x3cbc>
   142dc:	cmp	r0, #0
   142e0:	beq	142f0 <close@plt+0x34d4>
   142e4:	ldr	r4, [sp]
   142e8:	add	sp, sp, #4
   142ec:	pop	{pc}		; (ldr pc, [sp], #4)
   142f0:	bl	14604 <close@plt+0x37e8>
   142f4:	mov	r2, r1
   142f8:	mov	r1, r0
   142fc:	mov	r0, #0
   14300:	b	14270 <close@plt+0x3454>
   14304:	mov	r2, r1
   14308:	mov	r1, r0
   1430c:	mov	r0, #0
   14310:	b	142c0 <close@plt+0x34a4>
   14314:	cmp	r0, #0
   14318:	strd	r4, [sp, #-16]!
   1431c:	mov	r5, r1
   14320:	ldr	r4, [r1]
   14324:	str	r6, [sp, #8]
   14328:	str	lr, [sp, #12]
   1432c:	beq	1435c <close@plt+0x3540>
   14330:	lsr	r3, r4, #1
   14334:	add	r3, r3, #1
   14338:	adds	r4, r4, r3
   1433c:	bcs	14378 <close@plt+0x355c>
   14340:	mov	r1, r4
   14344:	bl	14270 <close@plt+0x3454>
   14348:	ldr	r6, [sp, #8]
   1434c:	str	r4, [r5]
   14350:	ldrd	r4, [sp]
   14354:	add	sp, sp, #12
   14358:	pop	{pc}		; (ldr pc, [sp], #4)
   1435c:	cmp	r4, #0
   14360:	bne	14340 <close@plt+0x3524>
   14364:	mov	r4, #64	; 0x40
   14368:	udiv	r4, r4, r2
   1436c:	cmp	r2, #64	; 0x40
   14370:	addhi	r4, r4, #1
   14374:	b	14340 <close@plt+0x3524>
   14378:	bl	14604 <close@plt+0x37e8>
   1437c:	mov	r2, #1
   14380:	b	14314 <close@plt+0x34f8>
   14384:	ldr	ip, [r1]
   14388:	strd	r4, [sp, #-32]!	; 0xffffffe0
   1438c:	mov	r5, r1
   14390:	strd	r6, [sp, #8]
   14394:	str	lr, [sp, #28]
   14398:	strd	r8, [sp, #16]
   1439c:	asr	lr, ip, #1
   143a0:	ldr	r8, [sp, #32]
   143a4:	str	sl, [sp, #24]
   143a8:	adds	r4, ip, lr
   143ac:	mvn	lr, r3
   143b0:	lsr	lr, lr, #31
   143b4:	mvnvs	r4, #-2147483648	; 0x80000000
   143b8:	cmp	r3, r4
   143bc:	movge	r1, #0
   143c0:	andlt	r1, lr, #1
   143c4:	cmp	r1, #0
   143c8:	movne	r4, r3
   143cc:	smull	r6, r7, r4, r8
   143d0:	cmp	r7, r6, asr #31
   143d4:	bne	1445c <close@plt+0x3640>
   143d8:	cmp	r6, #63	; 0x3f
   143dc:	mov	r1, r6
   143e0:	ble	14444 <close@plt+0x3628>
   143e4:	cmp	r0, #0
   143e8:	sub	r6, r4, ip
   143ec:	streq	r0, [r5]
   143f0:	cmp	r6, r2
   143f4:	bge	14424 <close@plt+0x3608>
   143f8:	adds	r4, ip, r2
   143fc:	bvs	14458 <close@plt+0x363c>
   14400:	cmp	r4, r3
   14404:	movle	r3, #0
   14408:	andgt	r3, lr, #1
   1440c:	cmp	r3, #0
   14410:	bne	14458 <close@plt+0x363c>
   14414:	smull	r8, r9, r4, r8
   14418:	cmp	r9, r8, asr #31
   1441c:	mov	r1, r8
   14420:	bne	14458 <close@plt+0x363c>
   14424:	bl	141f8 <close@plt+0x33dc>
   14428:	ldrd	r6, [sp, #8]
   1442c:	ldrd	r8, [sp, #16]
   14430:	ldr	sl, [sp, #24]
   14434:	str	r4, [r5]
   14438:	ldrd	r4, [sp]
   1443c:	add	sp, sp, #28
   14440:	pop	{pc}		; (ldr pc, [sp], #4)
   14444:	mov	r6, #64	; 0x40
   14448:	sdiv	r4, r6, r8
   1444c:	mls	r1, r8, r4, r6
   14450:	sub	r1, r6, r1
   14454:	b	143e4 <close@plt+0x35c8>
   14458:	bl	14604 <close@plt+0x37e8>
   1445c:	mvn	r6, #-2147483648	; 0x80000000
   14460:	b	14448 <close@plt+0x362c>
   14464:	mov	r1, #1
   14468:	str	r4, [sp, #-8]!
   1446c:	str	lr, [sp, #4]
   14470:	bl	14648 <close@plt+0x382c>
   14474:	cmp	r0, #0
   14478:	beq	14488 <close@plt+0x366c>
   1447c:	ldr	r4, [sp]
   14480:	add	sp, sp, #4
   14484:	pop	{pc}		; (ldr pc, [sp], #4)
   14488:	bl	14604 <close@plt+0x37e8>
   1448c:	mov	r1, #1
   14490:	str	r4, [sp, #-8]!
   14494:	str	lr, [sp, #4]
   14498:	bl	14648 <close@plt+0x382c>
   1449c:	cmp	r0, #0
   144a0:	beq	144b0 <close@plt+0x3694>
   144a4:	ldr	r4, [sp]
   144a8:	add	sp, sp, #4
   144ac:	pop	{pc}		; (ldr pc, [sp], #4)
   144b0:	bl	14604 <close@plt+0x37e8>
   144b4:	str	r4, [sp, #-8]!
   144b8:	str	lr, [sp, #4]
   144bc:	bl	14648 <close@plt+0x382c>
   144c0:	cmp	r0, #0
   144c4:	beq	144d4 <close@plt+0x36b8>
   144c8:	ldr	r4, [sp]
   144cc:	add	sp, sp, #4
   144d0:	pop	{pc}		; (ldr pc, [sp], #4)
   144d4:	bl	14604 <close@plt+0x37e8>
   144d8:	str	r4, [sp, #-8]!
   144dc:	str	lr, [sp, #4]
   144e0:	bl	14648 <close@plt+0x382c>
   144e4:	cmp	r0, #0
   144e8:	beq	144f8 <close@plt+0x36dc>
   144ec:	ldr	r4, [sp]
   144f0:	add	sp, sp, #4
   144f4:	pop	{pc}		; (ldr pc, [sp], #4)
   144f8:	bl	14604 <close@plt+0x37e8>
   144fc:	strd	r4, [sp, #-16]!
   14500:	mov	r4, r1
   14504:	str	r6, [sp, #8]
   14508:	mov	r6, r0
   1450c:	mov	r0, r1
   14510:	str	lr, [sp, #12]
   14514:	bl	146bc <close@plt+0x38a0>
   14518:	subs	r5, r0, #0
   1451c:	beq	14540 <close@plt+0x3724>
   14520:	mov	r2, r4
   14524:	mov	r1, r6
   14528:	bl	10c30 <memcpy@plt>
   1452c:	mov	r0, r5
   14530:	ldrd	r4, [sp]
   14534:	ldr	r6, [sp, #8]
   14538:	add	sp, sp, #12
   1453c:	pop	{pc}		; (ldr pc, [sp], #4)
   14540:	bl	14604 <close@plt+0x37e8>
   14544:	strd	r4, [sp, #-16]!
   14548:	mov	r4, r1
   1454c:	str	r6, [sp, #8]
   14550:	mov	r6, r0
   14554:	mov	r0, r1
   14558:	str	lr, [sp, #12]
   1455c:	bl	146bc <close@plt+0x38a0>
   14560:	subs	r5, r0, #0
   14564:	beq	14588 <close@plt+0x376c>
   14568:	mov	r2, r4
   1456c:	mov	r1, r6
   14570:	bl	10c30 <memcpy@plt>
   14574:	mov	r0, r5
   14578:	ldrd	r4, [sp]
   1457c:	ldr	r6, [sp, #8]
   14580:	add	sp, sp, #12
   14584:	pop	{pc}		; (ldr pc, [sp], #4)
   14588:	bl	14604 <close@plt+0x37e8>
   1458c:	strd	r4, [sp, #-16]!
   14590:	mov	r4, r1
   14594:	str	r6, [sp, #8]
   14598:	mov	r6, r0
   1459c:	add	r0, r1, #1
   145a0:	str	lr, [sp, #12]
   145a4:	bl	146bc <close@plt+0x38a0>
   145a8:	subs	r5, r0, #0
   145ac:	beq	145d8 <close@plt+0x37bc>
   145b0:	mov	r3, #0
   145b4:	mov	r1, r6
   145b8:	mov	r2, r4
   145bc:	strb	r3, [r5, r4]
   145c0:	bl	10c30 <memcpy@plt>
   145c4:	mov	r0, r5
   145c8:	ldrd	r4, [sp]
   145cc:	ldr	r6, [sp, #8]
   145d0:	add	sp, sp, #12
   145d4:	pop	{pc}		; (ldr pc, [sp], #4)
   145d8:	bl	14604 <close@plt+0x37e8>
   145dc:	str	r4, [sp, #-8]!
   145e0:	mov	r4, r0
   145e4:	str	lr, [sp, #4]
   145e8:	bl	10d44 <strlen@plt>
   145ec:	add	r1, r0, #1
   145f0:	mov	r0, r4
   145f4:	ldr	r4, [sp]
   145f8:	ldr	lr, [sp, #4]
   145fc:	add	sp, sp, #8
   14600:	b	144fc <close@plt+0x36e0>
   14604:	movw	r3, #24800	; 0x60e0
   14608:	movt	r3, #2
   1460c:	str	r4, [sp, #-8]!
   14610:	ldr	r4, [r3]
   14614:	mov	r2, #5
   14618:	movw	r1, #21976	; 0x55d8
   1461c:	movt	r1, #1
   14620:	mov	r0, #0
   14624:	str	lr, [sp, #4]
   14628:	bl	10c60 <dcgettext@plt>
   1462c:	mov	r3, r0
   14630:	movw	r2, #20892	; 0x519c
   14634:	movt	r2, #1
   14638:	mov	r1, #0
   1463c:	mov	r0, r4
   14640:	bl	10cd8 <error@plt>
   14644:	bl	10e10 <abort@plt>
   14648:	cmp	r1, #0
   1464c:	cmpne	r0, #0
   14650:	beq	1469c <close@plt+0x3880>
   14654:	strd	r4, [sp, #-16]!
   14658:	umull	r4, r5, r0, r1
   1465c:	str	r6, [sp, #8]
   14660:	str	lr, [sp, #12]
   14664:	adds	r3, r5, #0
   14668:	movne	r3, #1
   1466c:	cmp	r4, #0
   14670:	blt	1467c <close@plt+0x3860>
   14674:	cmp	r3, #0
   14678:	beq	146a8 <close@plt+0x388c>
   1467c:	bl	10d50 <__errno_location@plt>
   14680:	mov	r3, #12
   14684:	ldrd	r4, [sp]
   14688:	ldr	r6, [sp, #8]
   1468c:	add	sp, sp, #12
   14690:	str	r3, [r0]
   14694:	mov	r0, #0
   14698:	pop	{pc}		; (ldr pc, [sp], #4)
   1469c:	mov	r1, #1
   146a0:	mov	r0, r1
   146a4:	b	10bdc <calloc@plt>
   146a8:	ldrd	r4, [sp]
   146ac:	ldr	r6, [sp, #8]
   146b0:	ldr	lr, [sp, #12]
   146b4:	add	sp, sp, #16
   146b8:	b	10bdc <calloc@plt>
   146bc:	cmp	r0, #0
   146c0:	beq	146cc <close@plt+0x38b0>
   146c4:	blt	146d4 <close@plt+0x38b8>
   146c8:	b	10cf0 <malloc@plt>
   146cc:	mov	r0, #1
   146d0:	b	10cf0 <malloc@plt>
   146d4:	str	r4, [sp, #-8]!
   146d8:	str	lr, [sp, #4]
   146dc:	bl	10d50 <__errno_location@plt>
   146e0:	mov	r3, #12
   146e4:	ldr	r4, [sp]
   146e8:	add	sp, sp, #4
   146ec:	str	r3, [r0]
   146f0:	mov	r0, #0
   146f4:	pop	{pc}		; (ldr pc, [sp], #4)
   146f8:	cmp	r0, #0
   146fc:	beq	14724 <close@plt+0x3908>
   14700:	cmp	r1, #0
   14704:	str	r4, [sp, #-8]!
   14708:	str	lr, [sp, #4]
   1470c:	beq	1472c <close@plt+0x3910>
   14710:	blt	14740 <close@plt+0x3924>
   14714:	ldr	r4, [sp]
   14718:	ldr	lr, [sp, #4]
   1471c:	add	sp, sp, #8
   14720:	b	10c78 <realloc@plt>
   14724:	mov	r0, r1
   14728:	b	146bc <close@plt+0x38a0>
   1472c:	bl	148ec <close@plt+0x3ad0>
   14730:	ldr	r4, [sp]
   14734:	add	sp, sp, #4
   14738:	mov	r0, #0
   1473c:	pop	{pc}		; (ldr pc, [sp], #4)
   14740:	bl	10d50 <__errno_location@plt>
   14744:	mov	r3, #12
   14748:	str	r3, [r0]
   1474c:	b	14730 <close@plt+0x3914>
   14750:	strd	r4, [sp, #-16]!
   14754:	mov	r4, r0
   14758:	str	r6, [sp, #8]
   1475c:	str	lr, [sp, #12]
   14760:	bl	10cc0 <__fpending@plt>
   14764:	ldr	r5, [r4]
   14768:	mov	r6, r0
   1476c:	mov	r0, r4
   14770:	bl	147d8 <close@plt+0x39bc>
   14774:	mov	r4, r0
   14778:	and	r5, r5, #32
   1477c:	cmp	r5, #0
   14780:	bne	147b8 <close@plt+0x399c>
   14784:	cmp	r0, #0
   14788:	beq	147a4 <close@plt+0x3988>
   1478c:	cmp	r6, #0
   14790:	bne	147d0 <close@plt+0x39b4>
   14794:	bl	10d50 <__errno_location@plt>
   14798:	ldr	r4, [r0]
   1479c:	subs	r4, r4, #9
   147a0:	mvnne	r4, #0
   147a4:	mov	r0, r4
   147a8:	ldrd	r4, [sp]
   147ac:	ldr	r6, [sp, #8]
   147b0:	add	sp, sp, #12
   147b4:	pop	{pc}		; (ldr pc, [sp], #4)
   147b8:	cmp	r0, #0
   147bc:	bne	147d0 <close@plt+0x39b4>
   147c0:	bl	10d50 <__errno_location@plt>
   147c4:	str	r4, [r0]
   147c8:	mvn	r4, #0
   147cc:	b	147a4 <close@plt+0x3988>
   147d0:	mvn	r4, #0
   147d4:	b	147a4 <close@plt+0x3988>
   147d8:	strd	r4, [sp, #-12]!
   147dc:	mov	r4, r0
   147e0:	str	lr, [sp, #8]
   147e4:	sub	sp, sp, #12
   147e8:	bl	10d80 <fileno@plt>
   147ec:	cmp	r0, #0
   147f0:	mov	r0, r4
   147f4:	blt	14878 <close@plt+0x3a5c>
   147f8:	bl	10d08 <__freading@plt>
   147fc:	cmp	r0, #0
   14800:	bne	14844 <close@plt+0x3a28>
   14804:	mov	r0, r4
   14808:	bl	1488c <close@plt+0x3a70>
   1480c:	cmp	r0, #0
   14810:	beq	14874 <close@plt+0x3a58>
   14814:	bl	10d50 <__errno_location@plt>
   14818:	mov	r5, r0
   1481c:	mov	r0, r4
   14820:	ldr	r4, [r5]
   14824:	bl	10d98 <fclose@plt>
   14828:	cmp	r4, #0
   1482c:	mvnne	r0, #0
   14830:	strne	r4, [r5]
   14834:	add	sp, sp, #12
   14838:	ldrd	r4, [sp]
   1483c:	add	sp, sp, #8
   14840:	pop	{pc}		; (ldr pc, [sp], #4)
   14844:	mov	r0, r4
   14848:	bl	10d80 <fileno@plt>
   1484c:	mov	r1, #1
   14850:	mov	r2, #0
   14854:	mov	r3, #0
   14858:	str	r1, [sp]
   1485c:	bl	10ca8 <lseek64@plt>
   14860:	mvn	r3, #0
   14864:	mvn	r2, #0
   14868:	cmp	r1, r3
   1486c:	cmpeq	r0, r2
   14870:	bne	14804 <close@plt+0x39e8>
   14874:	mov	r0, r4
   14878:	add	sp, sp, #12
   1487c:	ldrd	r4, [sp]
   14880:	ldr	lr, [sp, #8]
   14884:	add	sp, sp, #12
   14888:	b	10d98 <fclose@plt>
   1488c:	str	r4, [sp, #-8]!
   14890:	subs	r4, r0, #0
   14894:	str	lr, [sp, #4]
   14898:	sub	sp, sp, #8
   1489c:	beq	148b8 <close@plt+0x3a9c>
   148a0:	bl	10d08 <__freading@plt>
   148a4:	cmp	r0, #0
   148a8:	beq	148b8 <close@plt+0x3a9c>
   148ac:	ldr	r3, [r4]
   148b0:	tst	r3, #256	; 0x100
   148b4:	bne	148d0 <close@plt+0x3ab4>
   148b8:	mov	r0, r4
   148bc:	add	sp, sp, #8
   148c0:	ldr	r4, [sp]
   148c4:	ldr	lr, [sp, #4]
   148c8:	add	sp, sp, #8
   148cc:	b	10c0c <fflush@plt>
   148d0:	mov	r1, #1
   148d4:	mov	r2, #0
   148d8:	mov	r3, #0
   148dc:	mov	r0, r4
   148e0:	str	r1, [sp]
   148e4:	bl	1494c <close@plt+0x3b30>
   148e8:	b	148b8 <close@plt+0x3a9c>
   148ec:	strd	r4, [sp, #-12]!
   148f0:	mov	r5, r0
   148f4:	str	lr, [sp, #8]
   148f8:	sub	sp, sp, #12
   148fc:	bl	10d50 <__errno_location@plt>
   14900:	mov	r4, r0
   14904:	mov	r2, #0
   14908:	ldr	r3, [r4]
   1490c:	mov	r0, r5
   14910:	str	r2, [r4]
   14914:	str	r3, [sp]
   14918:	str	r3, [sp, #4]
   1491c:	bl	10c18 <free@plt>
   14920:	ldr	r3, [r4]
   14924:	add	r2, sp, #8
   14928:	clz	r3, r3
   1492c:	lsr	r3, r3, #5
   14930:	add	r3, r2, r3, lsl #2
   14934:	ldr	r3, [r3, #-8]
   14938:	str	r3, [r4]
   1493c:	add	sp, sp, #12
   14940:	ldrd	r4, [sp]
   14944:	add	sp, sp, #8
   14948:	pop	{pc}		; (ldr pc, [sp], #4)
   1494c:	strd	r4, [sp, #-24]!	; 0xffffffe8
   14950:	mov	r4, r0
   14954:	ldr	ip, [r0, #4]
   14958:	strd	r6, [sp, #8]
   1495c:	str	lr, [sp, #20]
   14960:	ldr	lr, [r0, #8]
   14964:	str	r8, [sp, #16]
   14968:	sub	sp, sp, #8
   1496c:	ldr	r5, [sp, #32]
   14970:	cmp	lr, ip
   14974:	beq	1499c <close@plt+0x3b80>
   14978:	mov	r0, r4
   1497c:	str	r5, [sp, #32]
   14980:	add	sp, sp, #8
   14984:	ldrd	r4, [sp]
   14988:	ldrd	r6, [sp, #8]
   1498c:	ldr	r8, [sp, #16]
   14990:	ldr	lr, [sp, #20]
   14994:	add	sp, sp, #24
   14998:	b	10da4 <fseeko64@plt>
   1499c:	ldr	ip, [r0, #16]
   149a0:	ldr	lr, [r0, #20]
   149a4:	cmp	lr, ip
   149a8:	bne	14978 <close@plt+0x3b5c>
   149ac:	ldr	r8, [r0, #36]	; 0x24
   149b0:	cmp	r8, #0
   149b4:	bne	14978 <close@plt+0x3b5c>
   149b8:	mov	r6, r2
   149bc:	mov	r7, r3
   149c0:	bl	10d80 <fileno@plt>
   149c4:	mov	r2, r6
   149c8:	mov	r3, r7
   149cc:	str	r5, [sp]
   149d0:	bl	10ca8 <lseek64@plt>
   149d4:	mvn	r3, #0
   149d8:	mvn	r2, #0
   149dc:	cmp	r1, r3
   149e0:	cmpeq	r0, r2
   149e4:	beq	14a14 <close@plt+0x3bf8>
   149e8:	ldr	r3, [r4]
   149ec:	strd	r0, [r4, #80]	; 0x50
   149f0:	bic	r3, r3, #16
   149f4:	str	r3, [r4]
   149f8:	mov	r0, r8
   149fc:	add	sp, sp, #8
   14a00:	ldrd	r4, [sp]
   14a04:	ldrd	r6, [sp, #8]
   14a08:	ldr	r8, [sp, #16]
   14a0c:	add	sp, sp, #20
   14a10:	pop	{pc}		; (ldr pc, [sp], #4)
   14a14:	mvn	r8, #0
   14a18:	b	149f8 <close@plt+0x3bdc>
   14a1c:	mov	r0, #14
   14a20:	str	r4, [sp, #-8]!
   14a24:	str	lr, [sp, #4]
   14a28:	bl	10dd4 <nl_langinfo@plt>
   14a2c:	cmp	r0, #0
   14a30:	beq	14a54 <close@plt+0x3c38>
   14a34:	ldrb	r2, [r0]
   14a38:	movw	r3, #21996	; 0x55ec
   14a3c:	movt	r3, #1
   14a40:	ldr	r4, [sp]
   14a44:	add	sp, sp, #4
   14a48:	cmp	r2, #0
   14a4c:	moveq	r0, r3
   14a50:	pop	{pc}		; (ldr pc, [sp], #4)
   14a54:	ldr	r4, [sp]
   14a58:	add	sp, sp, #4
   14a5c:	movw	r0, #21996	; 0x55ec
   14a60:	movt	r0, #1
   14a64:	pop	{pc}		; (ldr pc, [sp], #4)
   14a68:	strd	r4, [sp, #-20]!	; 0xffffffec
   14a6c:	mov	r5, r2
   14a70:	strd	r6, [sp, #8]
   14a74:	subs	r6, r0, #0
   14a78:	mov	r7, r1
   14a7c:	str	lr, [sp, #16]
   14a80:	sub	sp, sp, #12
   14a84:	addeq	r6, sp, #4
   14a88:	mov	r0, r6
   14a8c:	bl	10ccc <mbrtowc@plt>
   14a90:	cmp	r5, #0
   14a94:	cmnne	r0, #3
   14a98:	mov	r4, r0
   14a9c:	bhi	14ab8 <close@plt+0x3c9c>
   14aa0:	mov	r0, r4
   14aa4:	add	sp, sp, #12
   14aa8:	ldrd	r4, [sp]
   14aac:	ldrd	r6, [sp, #8]
   14ab0:	add	sp, sp, #16
   14ab4:	pop	{pc}		; (ldr pc, [sp], #4)
   14ab8:	mov	r0, #0
   14abc:	bl	14b10 <close@plt+0x3cf4>
   14ac0:	cmp	r0, #0
   14ac4:	bne	14aa0 <close@plt+0x3c84>
   14ac8:	ldrb	r3, [r7]
   14acc:	mov	r4, #1
   14ad0:	str	r3, [r6]
   14ad4:	b	14aa0 <close@plt+0x3c84>
   14ad8:	umull	r2, r3, r1, r2
   14adc:	cmp	r3, #0
   14ae0:	bne	14aec <close@plt+0x3cd0>
   14ae4:	mov	r1, r2
   14ae8:	b	146f8 <close@plt+0x38dc>
   14aec:	str	r4, [sp, #-8]!
   14af0:	str	lr, [sp, #4]
   14af4:	bl	10d50 <__errno_location@plt>
   14af8:	mov	r3, #12
   14afc:	ldr	r4, [sp]
   14b00:	add	sp, sp, #4
   14b04:	str	r3, [r0]
   14b08:	mov	r0, #0
   14b0c:	pop	{pc}		; (ldr pc, [sp], #4)
   14b10:	push	{lr}		; (str lr, [sp, #-4]!)
   14b14:	sub	sp, sp, #268	; 0x10c
   14b18:	movw	r2, #257	; 0x101
   14b1c:	add	r1, sp, #4
   14b20:	bl	14b68 <close@plt+0x3d4c>
   14b24:	cmp	r0, #0
   14b28:	movne	r0, #0
   14b2c:	bne	14b60 <close@plt+0x3d44>
   14b30:	movw	r1, #22004	; 0x55f4
   14b34:	movt	r1, #1
   14b38:	add	r0, sp, #4
   14b3c:	bl	10c00 <strcmp@plt>
   14b40:	cmp	r0, #0
   14b44:	beq	14b60 <close@plt+0x3d44>
   14b48:	add	r0, sp, #4
   14b4c:	movw	r1, #22008	; 0x55f8
   14b50:	movt	r1, #1
   14b54:	bl	10c00 <strcmp@plt>
   14b58:	adds	r0, r0, #0
   14b5c:	movne	r0, #1
   14b60:	add	sp, sp, #268	; 0x10c
   14b64:	pop	{pc}		; (ldr pc, [sp], #4)
   14b68:	strd	r4, [sp, #-16]!
   14b6c:	mov	r5, r1
   14b70:	mov	r1, #0
   14b74:	mov	r4, r2
   14b78:	str	r6, [sp, #8]
   14b7c:	str	lr, [sp, #12]
   14b80:	bl	10dbc <setlocale@plt>
   14b84:	subs	r6, r0, #0
   14b88:	beq	14c08 <close@plt+0x3dec>
   14b8c:	bl	10d44 <strlen@plt>
   14b90:	cmp	r4, r0
   14b94:	bhi	14bb4 <close@plt+0x3d98>
   14b98:	cmp	r4, #0
   14b9c:	moveq	r0, #34	; 0x22
   14ba0:	bne	14bd8 <close@plt+0x3dbc>
   14ba4:	ldrd	r4, [sp]
   14ba8:	ldr	r6, [sp, #8]
   14bac:	add	sp, sp, #12
   14bb0:	pop	{pc}		; (ldr pc, [sp], #4)
   14bb4:	add	r2, r0, #1
   14bb8:	mov	r1, r6
   14bbc:	mov	r0, r5
   14bc0:	bl	10c30 <memcpy@plt>
   14bc4:	ldrd	r4, [sp]
   14bc8:	mov	r0, #0
   14bcc:	ldr	r6, [sp, #8]
   14bd0:	add	sp, sp, #12
   14bd4:	pop	{pc}		; (ldr pc, [sp], #4)
   14bd8:	sub	r4, r4, #1
   14bdc:	mov	r1, r6
   14be0:	mov	r2, r4
   14be4:	mov	r0, r5
   14be8:	bl	10c30 <memcpy@plt>
   14bec:	mov	r3, #0
   14bf0:	mov	r0, #34	; 0x22
   14bf4:	strb	r3, [r5, r4]
   14bf8:	ldrd	r4, [sp]
   14bfc:	ldr	r6, [sp, #8]
   14c00:	add	sp, sp, #12
   14c04:	pop	{pc}		; (ldr pc, [sp], #4)
   14c08:	cmp	r4, #0
   14c0c:	mov	r0, #22
   14c10:	strbne	r6, [r5]
   14c14:	ldrd	r4, [sp]
   14c18:	ldr	r6, [sp, #8]
   14c1c:	add	sp, sp, #12
   14c20:	pop	{pc}		; (ldr pc, [sp], #4)
   14c24:	mov	r1, #0
   14c28:	b	10dbc <setlocale@plt>
   14c2c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   14c30:	mov	r7, r0
   14c34:	ldr	r6, [pc, #72]	; 14c84 <close@plt+0x3e68>
   14c38:	ldr	r5, [pc, #72]	; 14c88 <close@plt+0x3e6c>
   14c3c:	add	r6, pc, r6
   14c40:	add	r5, pc, r5
   14c44:	sub	r6, r6, r5
   14c48:	mov	r8, r1
   14c4c:	mov	r9, r2
   14c50:	bl	10bbc <calloc@plt-0x20>
   14c54:	asrs	r6, r6, #2
   14c58:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   14c5c:	mov	r4, #0
   14c60:	add	r4, r4, #1
   14c64:	ldr	r3, [r5], #4
   14c68:	mov	r2, r9
   14c6c:	mov	r1, r8
   14c70:	mov	r0, r7
   14c74:	blx	r3
   14c78:	cmp	r6, r4
   14c7c:	bne	14c60 <close@plt+0x3e44>
   14c80:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14c84:	ldrdeq	r1, [r1], -r0
   14c88:	andeq	r1, r1, r8, asr #5
   14c8c:	bx	lr
   14c90:	ldr	r3, [pc, #12]	; 14ca4 <close@plt+0x3e88>
   14c94:	mov	r1, #0
   14c98:	add	r3, pc, r3
   14c9c:	ldr	r2, [r3]
   14ca0:	b	10d5c <__cxa_atexit@plt>
   14ca4:	andeq	r1, r1, r8, lsr r4

Disassembly of section .fini:

00014ca8 <.fini>:
   14ca8:	push	{r3, lr}
   14cac:	pop	{r3, pc}
