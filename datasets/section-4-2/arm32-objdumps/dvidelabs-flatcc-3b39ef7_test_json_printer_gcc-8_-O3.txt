
../repos/dvidelabs-flatcc-3b39ef7/test/json_test/test_json_printer:     file format elf32-littlearm


Disassembly of section .init:

000123cc <.init>:
   123cc:	push	{r3, lr}
   123d0:	bl	125f4 <_start@@Base+0x3c>
   123d4:	pop	{r3, pc}

Disassembly of section .plt:

000123d8 <raise@plt-0x14>:
   123d8:	push	{lr}		; (str lr, [sp, #-4]!)
   123dc:	ldr	lr, [pc, #4]	; 123e8 <raise@plt-0x4>
   123e0:	add	lr, pc, lr
   123e4:	ldr	pc, [lr, #8]!
   123e8:	andeq	r1, r2, r8, lsl ip

000123ec <raise@plt>:
   123ec:	add	ip, pc, #0, 12
   123f0:	add	ip, ip, #135168	; 0x21000
   123f4:	ldr	pc, [ip, #3096]!	; 0xc18

000123f8 <strcmp@plt>:
   123f8:	add	ip, pc, #0, 12
   123fc:	add	ip, ip, #135168	; 0x21000
   12400:	ldr	pc, [ip, #3088]!	; 0xc10

00012404 <fopen@plt>:
   12404:	add	ip, pc, #0, 12
   12408:	add	ip, ip, #135168	; 0x21000
   1240c:	ldr	pc, [ip, #3080]!	; 0xc08

00012410 <memmove@plt>:
   12410:	add	ip, pc, #0, 12
   12414:	add	ip, ip, #135168	; 0x21000
   12418:	ldr	pc, [ip, #3072]!	; 0xc00

0001241c <free@plt>:
   1241c:	add	ip, pc, #0, 12
   12420:	add	ip, ip, #135168	; 0x21000
   12424:	ldr	pc, [ip, #3064]!	; 0xbf8

00012428 <memcpy@plt>:
   12428:	add	ip, pc, #0, 12
   1242c:	add	ip, ip, #135168	; 0x21000
   12430:	ldr	pc, [ip, #3056]!	; 0xbf0

00012434 <ftell@plt>:
   12434:	add	ip, pc, #0, 12
   12438:	add	ip, ip, #135168	; 0x21000
   1243c:	ldr	pc, [ip, #3048]!	; 0xbe8

00012440 <memcmp@plt>:
   12440:	add	ip, pc, #0, 12
   12444:	add	ip, ip, #135168	; 0x21000
   12448:	ldr	pc, [ip, #3040]!	; 0xbe0

0001244c <rewind@plt>:
   1244c:	add	ip, pc, #0, 12
   12450:	add	ip, ip, #135168	; 0x21000
   12454:	ldr	pc, [ip, #3032]!	; 0xbd8

00012458 <realloc@plt>:
   12458:	add	ip, pc, #0, 12
   1245c:	add	ip, ip, #135168	; 0x21000
   12460:	ldr	pc, [ip, #3024]!	; 0xbd0

00012464 <fwrite@plt>:
   12464:	add	ip, pc, #0, 12
   12468:	add	ip, ip, #135168	; 0x21000
   1246c:	ldr	pc, [ip, #3016]!	; 0xbc8

00012470 <fread@plt>:
   12470:	add	ip, pc, #0, 12
   12474:	add	ip, ip, #135168	; 0x21000
   12478:	ldr	pc, [ip, #3008]!	; 0xbc0

0001247c <puts@plt>:
   1247c:	add	ip, pc, #0, 12
   12480:	add	ip, ip, #135168	; 0x21000
   12484:	ldr	pc, [ip, #3000]!	; 0xbb8

00012488 <malloc@plt>:
   12488:	add	ip, pc, #0, 12
   1248c:	add	ip, ip, #135168	; 0x21000
   12490:	ldr	pc, [ip, #2992]!	; 0xbb0

00012494 <__libc_start_main@plt>:
   12494:	add	ip, pc, #0, 12
   12498:	add	ip, ip, #135168	; 0x21000
   1249c:	ldr	pc, [ip, #2984]!	; 0xba8

000124a0 <__gmon_start__@plt>:
   124a0:	add	ip, pc, #0, 12
   124a4:	add	ip, ip, #135168	; 0x21000
   124a8:	ldr	pc, [ip, #2976]!	; 0xba0

000124ac <exit@plt>:
   124ac:	add	ip, pc, #0, 12
   124b0:	add	ip, ip, #135168	; 0x21000
   124b4:	ldr	pc, [ip, #2968]!	; 0xb98

000124b8 <fprintf@plt>:
   124b8:	add	ip, pc, #0, 12
   124bc:	add	ip, ip, #135168	; 0x21000
   124c0:	ldr	pc, [ip, #2960]!	; 0xb90

000124c4 <memset@plt>:
   124c4:	add	ip, pc, #0, 12
   124c8:	add	ip, ip, #135168	; 0x21000
   124cc:	ldr	pc, [ip, #2952]!	; 0xb88

000124d0 <strncpy@plt>:
   124d0:	add	ip, pc, #0, 12
   124d4:	add	ip, ip, #135168	; 0x21000
   124d8:	ldr	pc, [ip, #2944]!	; 0xb80

000124dc <fclose@plt>:
   124dc:	add	ip, pc, #0, 12
   124e0:	add	ip, ip, #135168	; 0x21000
   124e4:	ldr	pc, [ip, #2936]!	; 0xb78

000124e8 <sprintf@plt>:
   124e8:	add	ip, pc, #0, 12
   124ec:	add	ip, ip, #135168	; 0x21000
   124f0:	ldr	pc, [ip, #2928]!	; 0xb70

000124f4 <fseek@plt>:
   124f4:	add	ip, pc, #0, 12
   124f8:	add	ip, ip, #135168	; 0x21000
   124fc:	ldr	pc, [ip, #2920]!	; 0xb68

00012500 <abort@plt>:
   12500:	add	ip, pc, #0, 12
   12504:	add	ip, ip, #135168	; 0x21000
   12508:	ldr	pc, [ip, #2912]!	; 0xb60

0001250c <__assert_fail@plt>:
   1250c:	add	ip, pc, #0, 12
   12510:	add	ip, ip, #135168	; 0x21000
   12514:	ldr	pc, [ip, #2904]!	; 0xb58

Disassembly of section .text:

00012518 <main@@Base>:
   12518:	strd	r4, [sp, #-16]!
   1251c:	movw	r4, #16520	; 0x4088
   12520:	movt	r4, #3
   12524:	mov	r5, r0
   12528:	mov	r2, #24
   1252c:	str	r6, [sp, #8]
   12530:	movw	r0, #10700	; 0x29cc
   12534:	movt	r0, #2
   12538:	ldr	r3, [r4]
   1253c:	mov	r6, r1
   12540:	mov	r1, #1
   12544:	str	lr, [sp, #12]
   12548:	bl	12464 <fwrite@plt>
   1254c:	cmp	r5, #1
   12550:	cmpne	r5, #4
   12554:	bne	12598 <main@@Base+0x80>
   12558:	cmp	r5, #4
   1255c:	bne	12584 <main@@Base+0x6c>
   12560:	ldr	ip, [r6, #4]
   12564:	movw	r2, #16532	; 0x4094
   12568:	movt	r2, #3
   1256c:	movw	r3, #16508	; 0x407c
   12570:	movt	r3, #3
   12574:	ldrd	r0, [r6, #8]
   12578:	str	ip, [r2]
   1257c:	str	r1, [r3]
   12580:	str	r0, [r3, #4]
   12584:	ldrd	r4, [sp]
   12588:	ldr	r6, [sp, #8]
   1258c:	ldr	lr, [sp, #12]
   12590:	add	sp, sp, #16
   12594:	b	13884 <test_print@@Base>
   12598:	movw	r0, #10728	; 0x29e8
   1259c:	movt	r0, #2
   125a0:	ldr	r3, [r4]
   125a4:	mov	r2, #191	; 0xbf
   125a8:	mov	r1, #1
   125ac:	bl	12464 <fwrite@plt>
   125b0:	mov	r0, #1
   125b4:	bl	124ac <exit@plt>

000125b8 <_start@@Base>:
   125b8:	mov	fp, #0
   125bc:	mov	lr, #0
   125c0:	pop	{r1}		; (ldr r1, [sp], #4)
   125c4:	mov	r2, sp
   125c8:	push	{r2}		; (str r2, [sp, #-4]!)
   125cc:	push	{r0}		; (str r0, [sp, #-4]!)
   125d0:	ldr	ip, [pc, #16]	; 125e8 <_start@@Base+0x30>
   125d4:	push	{ip}		; (str ip, [sp, #-4]!)
   125d8:	ldr	r0, [pc, #12]	; 125ec <_start@@Base+0x34>
   125dc:	ldr	r3, [pc, #12]	; 125f0 <_start@@Base+0x38>
   125e0:	bl	12494 <__libc_start_main@plt>
   125e4:	bl	12500 <abort@plt>
   125e8:	andeq	r2, r2, r4, asr #6
   125ec:	andeq	r2, r1, r8, lsl r5
   125f0:	andeq	r2, r2, r4, ror #5
   125f4:	ldr	r3, [pc, #20]	; 12610 <_start@@Base+0x58>
   125f8:	ldr	r2, [pc, #20]	; 12614 <_start@@Base+0x5c>
   125fc:	add	r3, pc, r3
   12600:	ldr	r2, [r3, r2]
   12604:	cmp	r2, #0
   12608:	bxeq	lr
   1260c:	b	124a0 <__gmon_start__@plt>
   12610:	strdeq	r1, [r2], -ip
   12614:	andeq	r0, r0, r0, ror r0
   12618:	ldr	r0, [pc, #24]	; 12638 <_start@@Base+0x80>
   1261c:	ldr	r3, [pc, #24]	; 1263c <_start@@Base+0x84>
   12620:	cmp	r3, r0
   12624:	bxeq	lr
   12628:	ldr	r3, [pc, #16]	; 12640 <_start@@Base+0x88>
   1262c:	cmp	r3, #0
   12630:	bxeq	lr
   12634:	bx	r3
   12638:	andeq	r4, r3, r4, lsl #1
   1263c:	andeq	r4, r3, r4, lsl #1
   12640:	andeq	r0, r0, r0
   12644:	ldr	r0, [pc, #36]	; 12670 <_start@@Base+0xb8>
   12648:	ldr	r1, [pc, #36]	; 12674 <_start@@Base+0xbc>
   1264c:	sub	r1, r1, r0
   12650:	asr	r1, r1, #2
   12654:	add	r1, r1, r1, lsr #31
   12658:	asrs	r1, r1, #1
   1265c:	bxeq	lr
   12660:	ldr	r3, [pc, #16]	; 12678 <_start@@Base+0xc0>
   12664:	cmp	r3, #0
   12668:	bxeq	lr
   1266c:	bx	r3
   12670:	andeq	r4, r3, r4, lsl #1
   12674:	andeq	r4, r3, r4, lsl #1
   12678:	andeq	r0, r0, r0
   1267c:	push	{r4, lr}
   12680:	ldr	r4, [pc, #24]	; 126a0 <_start@@Base+0xe8>
   12684:	ldrb	r3, [r4]
   12688:	cmp	r3, #0
   1268c:	popne	{r4, pc}
   12690:	bl	12618 <_start@@Base+0x60>
   12694:	mov	r3, #1
   12698:	strb	r3, [r4]
   1269c:	pop	{r4, pc}
   126a0:	muleq	r3, r0, r0
   126a4:	b	12644 <_start@@Base+0x8c>
   126a8:	bx	lr
   126ac:	movw	ip, #10344	; 0x2868
   126b0:	movt	ip, #1
   126b4:	strd	r4, [sp, #-16]!
   126b8:	str	r6, [sp, #8]
   126bc:	mov	r2, #0
   126c0:	movw	r3, #9332	; 0x2474
   126c4:	movt	r3, #2
   126c8:	str	lr, [sp, #12]
   126cc:	sub	sp, sp, #8
   126d0:	mov	lr, #21
   126d4:	mov	r4, r0
   126d8:	mov	r5, r1
   126dc:	mov	r6, #22
   126e0:	str	lr, [sp]
   126e4:	str	ip, [sp, #4]
   126e8:	bl	20944 <flatcc_json_printer_table_field@@Base>
   126ec:	movw	r2, #10228	; 0x27f4
   126f0:	movt	r2, #1
   126f4:	str	r6, [sp]
   126f8:	mov	r1, r5
   126fc:	mov	r0, r4
   12700:	movw	r3, #9356	; 0x248c
   12704:	movt	r3, #2
   12708:	str	r2, [sp, #4]
   1270c:	mov	r2, #1
   12710:	bl	20944 <flatcc_json_printer_table_field@@Base>
   12714:	movw	r2, #10112	; 0x2780
   12718:	movt	r2, #1
   1271c:	str	r6, [sp]
   12720:	mov	r1, r5
   12724:	mov	r0, r4
   12728:	movw	r3, #9380	; 0x24a4
   1272c:	movt	r3, #2
   12730:	str	r2, [sp, #4]
   12734:	mov	r2, #2
   12738:	bl	20944 <flatcc_json_printer_table_field@@Base>
   1273c:	add	sp, sp, #8
   12740:	ldrd	r4, [sp]
   12744:	ldr	r6, [sp, #8]
   12748:	add	sp, sp, #12
   1274c:	pop	{pc}		; (ldr pc, [sp], #4)
   12750:	mov	ip, #0
   12754:	push	{lr}		; (str lr, [sp, #-4]!)
   12758:	mov	lr, #19
   1275c:	sub	sp, sp, #12
   12760:	mov	r2, ip
   12764:	movw	r3, #9404	; 0x24bc
   12768:	movt	r3, #2
   1276c:	str	lr, [sp]
   12770:	str	ip, [sp, #4]
   12774:	bl	17b2c <flatcc_json_printer_int32_field@@Base>
   12778:	add	sp, sp, #12
   1277c:	pop	{pc}		; (ldr pc, [sp], #4)
   12780:	mov	r2, #15
   12784:	strd	r4, [sp, #-20]!	; 0xffffffec
   12788:	movw	r3, #9424	; 0x24d0
   1278c:	movt	r3, #2
   12790:	strd	r6, [sp, #8]
   12794:	mov	r6, #0
   12798:	mov	r7, #0
   1279c:	str	lr, [sp, #16]
   127a0:	sub	sp, sp, #20
   127a4:	mov	r4, r0
   127a8:	mov	r5, r1
   127ac:	str	r2, [sp]
   127b0:	mov	r2, #0
   127b4:	strd	r6, [sp, #8]
   127b8:	bl	17d50 <flatcc_json_printer_int64_field@@Base>
   127bc:	mov	ip, #0
   127c0:	mov	r2, #21
   127c4:	mov	r1, r5
   127c8:	mov	r0, r4
   127cc:	movw	r3, #9440	; 0x24e0
   127d0:	movt	r3, #2
   127d4:	stm	sp, {r2, ip}
   127d8:	mov	r2, #1
   127dc:	bl	17224 <flatcc_json_printer_uint32_field@@Base>
   127e0:	add	sp, sp, #20
   127e4:	ldrd	r4, [sp]
   127e8:	ldrd	r6, [sp, #8]
   127ec:	add	sp, sp, #16
   127f0:	pop	{pc}		; (ldr pc, [sp], #4)
   127f4:	mov	r2, #15
   127f8:	strd	r4, [sp, #-20]!	; 0xffffffec
   127fc:	movw	r3, #9424	; 0x24d0
   12800:	movt	r3, #2
   12804:	strd	r6, [sp, #8]
   12808:	mov	r6, #0
   1280c:	mov	r7, #0
   12810:	str	lr, [sp, #16]
   12814:	sub	sp, sp, #20
   12818:	mov	r4, r0
   1281c:	mov	r5, r1
   12820:	str	r2, [sp]
   12824:	mov	r2, #0
   12828:	strd	r6, [sp, #8]
   1282c:	bl	17d50 <flatcc_json_printer_int64_field@@Base>
   12830:	mov	ip, #0
   12834:	mov	r2, #16
   12838:	mov	r1, r5
   1283c:	mov	r0, r4
   12840:	movw	r3, #9464	; 0x24f8
   12844:	movt	r3, #2
   12848:	stm	sp, {r2, ip}
   1284c:	mov	r2, #1
   12850:	bl	17224 <flatcc_json_printer_uint32_field@@Base>
   12854:	add	sp, sp, #20
   12858:	ldrd	r4, [sp]
   1285c:	ldrd	r6, [sp, #8]
   12860:	add	sp, sp, #16
   12864:	pop	{pc}		; (ldr pc, [sp], #4)
   12868:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1286c:	movw	r3, #9484	; 0x250c
   12870:	movt	r3, #2
   12874:	strd	r6, [sp, #8]
   12878:	mov	r7, #4
   1287c:	mov	r4, r0
   12880:	strd	r8, [sp, #16]
   12884:	mov	r5, r1
   12888:	mov	r6, #8
   1288c:	strd	sl, [sp, #24]
   12890:	mov	sl, #0
   12894:	mov	fp, #9
   12898:	str	lr, [sp, #32]
   1289c:	sub	sp, sp, #20
   128a0:	mov	r2, sl
   128a4:	mov	r8, #0
   128a8:	mov	r9, #0
   128ac:	str	r7, [sp]
   128b0:	bl	1665c <flatcc_json_printer_string_field@@Base>
   128b4:	mov	r1, r5
   128b8:	mov	r0, r4
   128bc:	str	fp, [sp]
   128c0:	mov	r2, #1
   128c4:	movw	r3, #9492	; 0x2514
   128c8:	movt	r3, #2
   128cc:	str	sl, [sp, #4]
   128d0:	bl	17224 <flatcc_json_printer_uint32_field@@Base>
   128d4:	mov	r1, r5
   128d8:	mov	r0, r4
   128dc:	str	r7, [sp]
   128e0:	mov	r2, #2
   128e4:	movw	r3, #9504	; 0x2520
   128e8:	movt	r3, #2
   128ec:	bl	1665c <flatcc_json_printer_string_field@@Base>
   128f0:	mov	r1, r5
   128f4:	mov	r0, r4
   128f8:	str	r6, [sp]
   128fc:	mov	r2, #3
   12900:	movw	r3, #9512	; 0x2528
   12904:	movt	r3, #2
   12908:	strd	r8, [sp, #8]
   1290c:	bl	17d50 <flatcc_json_printer_int64_field@@Base>
   12910:	mov	r2, r7
   12914:	mov	r1, r5
   12918:	str	r7, [sp]
   1291c:	mov	r0, r4
   12920:	movw	r3, #9524	; 0x2534
   12924:	movt	r3, #2
   12928:	bl	1665c <flatcc_json_printer_string_field@@Base>
   1292c:	mov	r1, r5
   12930:	mov	r0, r4
   12934:	str	r6, [sp]
   12938:	mov	r2, #5
   1293c:	movw	r3, #9532	; 0x253c
   12940:	movt	r3, #2
   12944:	strd	r8, [sp, #8]
   12948:	bl	17d50 <flatcc_json_printer_int64_field@@Base>
   1294c:	mov	r1, r5
   12950:	mov	r0, r4
   12954:	str	fp, [sp]
   12958:	mov	r2, #6
   1295c:	movw	r3, #9544	; 0x2548
   12960:	movt	r3, #2
   12964:	str	sl, [sp, #4]
   12968:	bl	17224 <flatcc_json_printer_uint32_field@@Base>
   1296c:	mov	r1, r5
   12970:	mov	r0, r4
   12974:	str	r6, [sp]
   12978:	mov	r2, #7
   1297c:	movw	r3, #9556	; 0x2554
   12980:	movt	r3, #2
   12984:	strd	r8, [sp, #8]
   12988:	bl	17d50 <flatcc_json_printer_int64_field@@Base>
   1298c:	mov	r2, r6
   12990:	mov	r1, r5
   12994:	str	fp, [sp]
   12998:	mov	r0, r4
   1299c:	movw	r3, #9568	; 0x2560
   129a0:	movt	r3, #2
   129a4:	str	sl, [sp, #4]
   129a8:	bl	17224 <flatcc_json_printer_uint32_field@@Base>
   129ac:	add	sp, sp, #20
   129b0:	ldrd	r4, [sp]
   129b4:	ldrd	r6, [sp, #8]
   129b8:	ldrd	r8, [sp, #16]
   129bc:	ldrd	sl, [sp, #24]
   129c0:	add	sp, sp, #32
   129c4:	pop	{pc}		; (ldr pc, [sp], #4)
   129c8:	movw	ip, #13832	; 0x3608
   129cc:	movt	ip, #1
   129d0:	strd	r4, [sp, #-36]!	; 0xffffffdc
   129d4:	strd	r6, [sp, #8]
   129d8:	mov	r2, #0
   129dc:	movw	r3, #9580	; 0x256c
   129e0:	movt	r3, #2
   129e4:	strd	r8, [sp, #16]
   129e8:	mov	r8, #3
   129ec:	strd	sl, [sp, #24]
   129f0:	mov	r4, r0
   129f4:	mov	r5, r1
   129f8:	str	lr, [sp, #32]
   129fc:	sub	sp, sp, #28
   12a00:	mov	r7, #4
   12a04:	mov	fp, #9
   12a08:	mov	r6, #17
   12a0c:	stm	sp, {r8, ip}
   12a10:	movw	sl, #10696	; 0x29c8
   12a14:	movt	sl, #1
   12a18:	bl	2132c <flatcc_json_printer_struct_field@@Base>
   12a1c:	mov	ip, #150	; 0x96
   12a20:	mov	r1, r5
   12a24:	mov	r0, r4
   12a28:	mov	r2, #1
   12a2c:	movw	r3, #9584	; 0x2570
   12a30:	movt	r3, #2
   12a34:	stm	sp, {r7, ip}
   12a38:	bl	17904 <flatcc_json_printer_int16_field@@Base>
   12a3c:	mov	lr, #100	; 0x64
   12a40:	mov	ip, #2
   12a44:	mov	r2, ip
   12a48:	mov	r1, r5
   12a4c:	stm	sp, {ip, lr}
   12a50:	movw	ip, #12392	; 0x3068
   12a54:	movt	ip, #1
   12a58:	mov	r0, r4
   12a5c:	movw	r3, #9592	; 0x2578
   12a60:	movt	r3, #2
   12a64:	str	ip, [sp, #20]
   12a68:	mov	r9, #0
   12a6c:	bl	17904 <flatcc_json_printer_int16_field@@Base>
   12a70:	mov	r2, r8
   12a74:	mov	r1, r5
   12a78:	str	r7, [sp]
   12a7c:	mov	r0, r4
   12a80:	movw	r3, #9596	; 0x257c
   12a84:	movt	r3, #2
   12a88:	mov	r8, #16
   12a8c:	bl	1665c <flatcc_json_printer_string_field@@Base>
   12a90:	mov	r1, r5
   12a94:	mov	r0, r4
   12a98:	str	fp, [sp]
   12a9c:	mov	r2, #5
   12aa0:	movw	r3, #9604	; 0x2584
   12aa4:	movt	r3, #2
   12aa8:	bl	1c214 <flatcc_json_printer_uint8_vector_field@@Base>
   12aac:	mov	lr, #8
   12ab0:	mov	r3, #5
   12ab4:	movw	r2, #13576	; 0x3508
   12ab8:	movt	r2, #1
   12abc:	mov	r1, r5
   12ac0:	mov	r0, r4
   12ac4:	stm	sp, {r3, lr}
   12ac8:	movw	r3, #9616	; 0x2590
   12acc:	movt	r3, #2
   12ad0:	str	r2, [sp, #8]
   12ad4:	mov	r2, #6
   12ad8:	bl	18f04 <flatcc_json_printer_int8_enum_field@@Base>
   12adc:	movw	r0, #12508	; 0x30dc
   12ae0:	movt	r0, #1
   12ae4:	str	r7, [sp]
   12ae8:	movw	r3, #14108	; 0x371c
   12aec:	movt	r3, #1
   12af0:	mov	r1, r5
   12af4:	mov	r2, #8
   12af8:	str	r3, [sp, #4]
   12afc:	movw	r3, #9624	; 0x2598
   12b00:	movt	r3, #2
   12b04:	str	r0, [sp, #8]
   12b08:	mov	r0, r4
   12b0c:	bl	20c10 <flatcc_json_printer_union_field@@Base>
   12b10:	ldr	ip, [sp, #20]
   12b14:	mov	r3, #5
   12b18:	mov	r2, fp
   12b1c:	mov	r1, r5
   12b20:	mov	r0, r4
   12b24:	stm	sp, {r3, r7, ip}
   12b28:	movw	r3, #9632	; 0x25a0
   12b2c:	movt	r3, #2
   12b30:	bl	1fad8 <flatcc_json_printer_struct_vector_field@@Base>
   12b34:	mov	r1, r5
   12b38:	mov	r0, r4
   12b3c:	str	r6, [sp]
   12b40:	mov	r2, #10
   12b44:	movw	r3, #9640	; 0x25a8
   12b48:	movt	r3, #2
   12b4c:	bl	1fe64 <flatcc_json_printer_string_vector_field@@Base>
   12b50:	mov	r1, r5
   12b54:	mov	r0, r4
   12b58:	stm	sp, {r6, sl}
   12b5c:	mov	r2, #11
   12b60:	movw	r3, #9660	; 0x25bc
   12b64:	movt	r3, #2
   12b68:	bl	20134 <flatcc_json_printer_table_vector_field@@Base>
   12b6c:	mov	r3, #5
   12b70:	mov	r1, r5
   12b74:	mov	r0, r4
   12b78:	mov	r2, #12
   12b7c:	stm	sp, {r3, sl}
   12b80:	movw	r3, #9680	; 0x25d0
   12b84:	movt	r3, #2
   12b88:	bl	20944 <flatcc_json_printer_table_field@@Base>
   12b8c:	mov	r2, #20
   12b90:	mov	r1, r5
   12b94:	mov	r0, r4
   12b98:	movw	r3, #9688	; 0x25d8
   12b9c:	movt	r3, #2
   12ba0:	stm	sp, {r2, r9, sl}
   12ba4:	mov	r2, #13
   12ba8:	mov	sl, #0
   12bac:	bl	21b9c <flatcc_json_printer_table_as_nested_root@@Base>
   12bb0:	movw	r2, #12232	; 0x2fc8
   12bb4:	movt	r2, #1
   12bb8:	str	fp, [sp]
   12bbc:	mov	r1, r5
   12bc0:	mov	r0, r4
   12bc4:	movw	r3, #9712	; 0x25f0
   12bc8:	movt	r3, #2
   12bcc:	str	r2, [sp, #4]
   12bd0:	mov	r2, #14
   12bd4:	mov	fp, #0
   12bd8:	bl	20944 <flatcc_json_printer_table_field@@Base>
   12bdc:	mov	lr, #8
   12be0:	mov	r2, #1
   12be4:	mov	r1, r5
   12be8:	mov	r0, r4
   12bec:	movw	r3, #9724	; 0x25fc
   12bf0:	movt	r3, #2
   12bf4:	str	lr, [sp]
   12bf8:	str	r2, [sp, #4]
   12bfc:	mov	r2, #15
   12c00:	bl	17f8c <flatcc_json_printer_bool_field@@Base>
   12c04:	mov	r1, r5
   12c08:	mov	r0, r4
   12c0c:	strd	r8, [sp]
   12c10:	mov	r2, r8
   12c14:	movw	r3, #9736	; 0x2608
   12c18:	movt	r3, #2
   12c1c:	bl	17b2c <flatcc_json_printer_int32_field@@Base>
   12c20:	mov	r2, r6
   12c24:	mov	r1, r5
   12c28:	strd	r8, [sp]
   12c2c:	mov	r0, r4
   12c30:	movw	r3, #9756	; 0x261c
   12c34:	movt	r3, #2
   12c38:	bl	17224 <flatcc_json_printer_uint32_field@@Base>
   12c3c:	mov	r1, r5
   12c40:	mov	r0, r4
   12c44:	str	r8, [sp]
   12c48:	mov	r2, #18
   12c4c:	movw	r3, #9776	; 0x2630
   12c50:	movt	r3, #2
   12c54:	strd	sl, [sp, #8]
   12c58:	bl	17d50 <flatcc_json_printer_int64_field@@Base>
   12c5c:	mov	r1, r5
   12c60:	mov	r0, r4
   12c64:	str	r8, [sp]
   12c68:	mov	r2, #19
   12c6c:	movw	r3, #9796	; 0x2644
   12c70:	movt	r3, #2
   12c74:	strd	sl, [sp, #8]
   12c78:	bl	17428 <flatcc_json_printer_uint64_field@@Base>
   12c7c:	mov	r1, r5
   12c80:	mov	r0, r4
   12c84:	stm	sp, {r6, r9}
   12c88:	mov	r2, #20
   12c8c:	movw	r3, #9816	; 0x2658
   12c90:	movt	r3, #2
   12c94:	bl	17b2c <flatcc_json_printer_int32_field@@Base>
   12c98:	mov	r1, r5
   12c9c:	mov	r0, r4
   12ca0:	stm	sp, {r6, r9}
   12ca4:	mov	r2, #21
   12ca8:	movw	r3, #9836	; 0x266c
   12cac:	movt	r3, #2
   12cb0:	bl	17224 <flatcc_json_printer_uint32_field@@Base>
   12cb4:	mov	r1, r5
   12cb8:	mov	r0, r4
   12cbc:	str	r6, [sp]
   12cc0:	mov	r2, #22
   12cc4:	movw	r3, #9856	; 0x2680
   12cc8:	movt	r3, #2
   12ccc:	strd	sl, [sp, #8]
   12cd0:	bl	17d50 <flatcc_json_printer_int64_field@@Base>
   12cd4:	mov	r1, r5
   12cd8:	mov	r0, r4
   12cdc:	str	r6, [sp]
   12ce0:	mov	r2, #23
   12ce4:	movw	r3, #9876	; 0x2694
   12ce8:	movt	r3, #2
   12cec:	strd	sl, [sp, #8]
   12cf0:	bl	17428 <flatcc_json_printer_uint64_field@@Base>
   12cf4:	str	r8, [sp]
   12cf8:	mov	r8, #5
   12cfc:	mov	r1, r5
   12d00:	mov	r0, r4
   12d04:	mov	r2, #24
   12d08:	movw	r3, #9896	; 0x26a8
   12d0c:	movt	r3, #2
   12d10:	bl	1dab8 <flatcc_json_printer_bool_vector_field@@Base>
   12d14:	mov	r1, r5
   12d18:	mov	r0, r4
   12d1c:	vldr	s0, [pc, #412]	; 12ec0 <_start@@Base+0x908>
   12d20:	mov	r2, #25
   12d24:	movw	r3, #9916	; 0x26bc
   12d28:	movt	r3, #2
   12d2c:	str	r8, [sp]
   12d30:	bl	181d8 <flatcc_json_printer_float_field@@Base>
   12d34:	mov	r2, #6
   12d38:	mov	r1, r5
   12d3c:	vldr	s0, [pc, #384]	; 12ec4 <_start@@Base+0x90c>
   12d40:	mov	r9, r2
   12d44:	mov	r0, r4
   12d48:	movw	r3, #9924	; 0x26c4
   12d4c:	movt	r3, #2
   12d50:	str	r2, [sp]
   12d54:	mov	r2, #26
   12d58:	bl	181d8 <flatcc_json_printer_float_field@@Base>
   12d5c:	vldr	s0, [pc, #356]	; 12ec8 <_start@@Base+0x910>
   12d60:	mov	r1, r5
   12d64:	mov	r0, r4
   12d68:	mov	r2, #27
   12d6c:	movw	r3, #9932	; 0x26cc
   12d70:	movt	r3, #2
   12d74:	str	r9, [sp]
   12d78:	bl	181d8 <flatcc_json_printer_float_field@@Base>
   12d7c:	mov	ip, #18
   12d80:	mov	r1, r5
   12d84:	mov	r0, r4
   12d88:	mov	r2, #28
   12d8c:	movw	r3, #9940	; 0x26d4
   12d90:	movt	r3, #2
   12d94:	str	ip, [sp]
   12d98:	bl	1fe64 <flatcc_json_printer_string_vector_field@@Base>
   12d9c:	mov	lr, #8
   12da0:	movw	ip, #12128	; 0x2f60
   12da4:	movt	ip, #1
   12da8:	mov	r1, r5
   12dac:	str	lr, [sp, #4]
   12db0:	mov	lr, #23
   12db4:	mov	r0, r4
   12db8:	mov	r2, #29
   12dbc:	movw	r3, #9960	; 0x26e8
   12dc0:	movt	r3, #2
   12dc4:	str	lr, [sp]
   12dc8:	str	ip, [sp, #8]
   12dcc:	bl	1fad8 <flatcc_json_printer_struct_vector_field@@Base>
   12dd0:	mov	r1, r5
   12dd4:	mov	r0, r4
   12dd8:	str	r7, [sp]
   12ddc:	mov	r2, #30
   12de0:	movw	r3, #9984	; 0x2700
   12de4:	movt	r3, #2
   12de8:	bl	1c214 <flatcc_json_printer_uint8_vector_field@@Base>
   12dec:	ldr	ip, [sp, #20]
   12df0:	mov	r1, r5
   12df4:	mov	r0, r4
   12df8:	mov	r2, #31
   12dfc:	movw	r3, #9992	; 0x2708
   12e00:	movt	r3, #2
   12e04:	str	r8, [sp]
   12e08:	stmib	sp, {r7, ip}
   12e0c:	bl	1fad8 <flatcc_json_printer_struct_vector_field@@Base>
   12e10:	mov	ip, #15
   12e14:	mov	r1, r5
   12e18:	mov	r0, r4
   12e1c:	mov	r2, #32
   12e20:	movw	r3, #10000	; 0x2710
   12e24:	movt	r3, #2
   12e28:	str	ip, [sp]
   12e2c:	bl	1d7b4 <flatcc_json_printer_int64_vector_field@@Base>
   12e30:	mov	r1, r5
   12e34:	mov	r0, r4
   12e38:	str	r6, [sp]
   12e3c:	mov	r2, #33	; 0x21
   12e40:	movw	r3, #10016	; 0x2720
   12e44:	movt	r3, #2
   12e48:	bl	1e074 <flatcc_json_printer_double_vector_field@@Base>
   12e4c:	mov	lr, #21
   12e50:	movw	ip, #9896	; 0x26a8
   12e54:	movt	ip, #1
   12e58:	mov	r1, r5
   12e5c:	mov	r0, r4
   12e60:	mov	r2, #34	; 0x22
   12e64:	str	lr, [sp]
   12e68:	movw	r3, #10036	; 0x2734
   12e6c:	movt	r3, #2
   12e70:	str	ip, [sp, #4]
   12e74:	bl	20944 <flatcc_json_printer_table_field@@Base>
   12e78:	mov	lr, #10
   12e7c:	movw	ip, #11980	; 0x2ecc
   12e80:	movt	ip, #1
   12e84:	mov	r1, r5
   12e88:	mov	r0, r4
   12e8c:	mov	r2, #35	; 0x23
   12e90:	str	lr, [sp]
   12e94:	movw	r3, #10060	; 0x274c
   12e98:	movt	r3, #2
   12e9c:	str	ip, [sp, #4]
   12ea0:	bl	20944 <flatcc_json_printer_table_field@@Base>
   12ea4:	add	sp, sp, #28
   12ea8:	ldrd	r4, [sp]
   12eac:	ldrd	r6, [sp, #8]
   12eb0:	ldrd	r8, [sp, #16]
   12eb4:	ldrd	sl, [sp, #24]
   12eb8:	add	sp, sp, #32
   12ebc:	pop	{pc}		; (ldr pc, [sp], #4)
   12ec0:	ldmmi	r9, {r5, r6, r7, r8, sl, sp, lr}
   12ec4:	submi	r0, r0, r0
   12ec8:	andeq	r0, r0, r0
   12ecc:	mov	ip, #4
   12ed0:	strd	r4, [sp, #-16]!
   12ed4:	mov	r4, #0
   12ed8:	str	r6, [sp, #8]
   12edc:	mov	r2, r4
   12ee0:	movw	r3, #10568	; 0x2948
   12ee4:	movt	r3, #2
   12ee8:	str	lr, [sp, #12]
   12eec:	sub	sp, sp, #8
   12ef0:	mov	r5, r0
   12ef4:	mov	r6, r1
   12ef8:	str	ip, [sp]
   12efc:	str	r4, [sp, #4]
   12f00:	bl	16850 <flatcc_json_printer_uint8_vector_base64_field@@Base>
   12f04:	mov	ip, #1
   12f08:	mov	r3, #7
   12f0c:	mov	r1, r6
   12f10:	mov	r0, r5
   12f14:	mov	r2, ip
   12f18:	stm	sp, {r3, ip}
   12f1c:	movw	r3, #10072	; 0x2758
   12f20:	movt	r3, #2
   12f24:	bl	16850 <flatcc_json_printer_uint8_vector_base64_field@@Base>
   12f28:	mov	ip, #6
   12f2c:	mov	r1, r6
   12f30:	mov	r0, r5
   12f34:	mov	r2, #2
   12f38:	movw	r3, #10080	; 0x2760
   12f3c:	movt	r3, #2
   12f40:	str	ip, [sp]
   12f44:	str	r4, [sp, #4]
   12f48:	bl	16850 <flatcc_json_printer_uint8_vector_base64_field@@Base>
   12f4c:	add	sp, sp, #8
   12f50:	ldrd	r4, [sp]
   12f54:	ldr	r6, [sp, #8]
   12f58:	add	sp, sp, #12
   12f5c:	pop	{pc}		; (ldr pc, [sp], #4)
   12f60:	movw	ip, #10088	; 0x2768
   12f64:	movt	ip, #2
   12f68:	strd	r4, [sp, #-12]!
   12f6c:	str	lr, [sp, #8]
   12f70:	sub	sp, sp, #12
   12f74:	mov	lr, #2
   12f78:	mov	r3, #0
   12f7c:	mov	r4, r1
   12f80:	mov	r2, r1
   12f84:	mov	r1, r3
   12f88:	stm	sp, {ip, lr}
   12f8c:	mov	r5, r0
   12f90:	bl	19fa8 <flatcc_json_printer_uint32_struct_field@@Base>
   12f94:	mov	ip, #8
   12f98:	movw	r1, #10092	; 0x276c
   12f9c:	movt	r1, #2
   12fa0:	mov	r2, r4
   12fa4:	mov	r0, r5
   12fa8:	mov	r3, #4
   12fac:	stm	sp, {r1, ip}
   12fb0:	mov	r1, #1
   12fb4:	bl	19fa8 <flatcc_json_printer_uint32_struct_field@@Base>
   12fb8:	add	sp, sp, #12
   12fbc:	ldrd	r4, [sp]
   12fc0:	add	sp, sp, #8
   12fc4:	pop	{pc}		; (ldr pc, [sp], #4)
   12fc8:	strd	r4, [sp, #-24]!	; 0xffffffe8
   12fcc:	mov	r2, #0
   12fd0:	movw	r3, #10088	; 0x2768
   12fd4:	movt	r3, #2
   12fd8:	str	r6, [sp, #8]
   12fdc:	mov	r6, #2
   12fe0:	strd	r8, [sp, #12]
   12fe4:	mov	r4, r0
   12fe8:	mov	r5, r1
   12fec:	str	lr, [sp, #20]
   12ff0:	sub	sp, sp, #16
   12ff4:	mov	r8, #0
   12ff8:	mov	r9, #0
   12ffc:	str	r6, [sp]
   13000:	bl	1665c <flatcc_json_printer_string_field@@Base>
   13004:	mov	r3, #3
   13008:	mov	r1, r5
   1300c:	mov	r0, r4
   13010:	mov	r2, #1
   13014:	str	r3, [sp]
   13018:	movw	r3, #10104	; 0x2778
   1301c:	movt	r3, #2
   13020:	strd	r8, [sp, #8]
   13024:	bl	17d50 <flatcc_json_printer_int64_field@@Base>
   13028:	mov	ip, #0
   1302c:	mov	lr, #5
   13030:	mov	r2, r6
   13034:	mov	r1, r5
   13038:	mov	r0, r4
   1303c:	movw	r3, #10108	; 0x277c
   13040:	movt	r3, #2
   13044:	str	lr, [sp]
   13048:	str	ip, [sp, #4]
   1304c:	bl	17020 <flatcc_json_printer_uint16_field@@Base>
   13050:	add	sp, sp, #16
   13054:	ldrd	r4, [sp]
   13058:	ldr	r6, [sp, #8]
   1305c:	ldrd	r8, [sp, #12]
   13060:	add	sp, sp, #20
   13064:	pop	{pc}		; (ldr pc, [sp], #4)
   13068:	movw	ip, #9832	; 0x2668
   1306c:	movt	ip, #2
   13070:	strd	r4, [sp, #-16]!
   13074:	mov	r4, #1
   13078:	str	r6, [sp, #8]
   1307c:	mov	r3, #0
   13080:	str	lr, [sp, #12]
   13084:	sub	sp, sp, #8
   13088:	mov	r5, r1
   1308c:	mov	r2, r1
   13090:	mov	r1, r3
   13094:	str	ip, [sp]
   13098:	mov	r6, r0
   1309c:	str	r4, [sp, #4]
   130a0:	bl	1a520 <flatcc_json_printer_int16_struct_field@@Base>
   130a4:	movw	ip, #10116	; 0x2784
   130a8:	movt	ip, #2
   130ac:	mov	r2, r5
   130b0:	mov	r1, r4
   130b4:	mov	r0, r6
   130b8:	mov	r3, #2
   130bc:	str	ip, [sp]
   130c0:	str	r4, [sp, #4]
   130c4:	bl	1a2cc <flatcc_json_printer_int8_struct_field@@Base>
   130c8:	add	sp, sp, #8
   130cc:	ldrd	r4, [sp]
   130d0:	ldr	r6, [sp, #8]
   130d4:	add	sp, sp, #12
   130d8:	pop	{pc}		; (ldr pc, [sp], #4)
   130dc:	ldrb	r3, [r1, #8]
   130e0:	sub	r3, r3, #1
   130e4:	cmp	r3, #3
   130e8:	ldrls	pc, [pc, r3, lsl #2]
   130ec:	b	13130 <_start@@Base+0xb78>
   130f0:	andeq	r3, r1, r4, lsr #2
   130f4:	andeq	r3, r1, r8, lsl r1
   130f8:	andeq	r3, r1, ip, lsl #2
   130fc:	andeq	r3, r1, r0, lsl #2
   13100:	movw	r2, #12596	; 0x3134
   13104:	movt	r2, #1
   13108:	b	20ee0 <flatcc_json_printer_union_table@@Base>
   1310c:	movw	r2, #14464	; 0x3880
   13110:	movt	r2, #1
   13114:	b	20ee0 <flatcc_json_printer_union_table@@Base>
   13118:	movw	r2, #13392	; 0x3450
   1311c:	movt	r2, #1
   13120:	b	20ee0 <flatcc_json_printer_union_table@@Base>
   13124:	movw	r2, #10696	; 0x29c8
   13128:	movt	r2, #1
   1312c:	b	20ee0 <flatcc_json_printer_union_table@@Base>
   13130:	bx	lr
   13134:	movw	ip, #9900	; 0x26ac
   13138:	movt	ip, #1
   1313c:	strd	r4, [sp, #-12]!
   13140:	str	lr, [sp, #8]
   13144:	sub	sp, sp, #20
   13148:	mov	lr, #6
   1314c:	mov	r2, #0
   13150:	movw	r3, #10120	; 0x2788
   13154:	movt	r3, #2
   13158:	str	lr, [sp]
   1315c:	mov	r4, r0
   13160:	str	ip, [sp, #4]
   13164:	mov	r5, r1
   13168:	bl	20944 <flatcc_json_printer_table_field@@Base>
   1316c:	mov	r2, #5
   13170:	movw	r3, #12764	; 0x31dc
   13174:	movt	r3, #1
   13178:	mov	r1, r5
   1317c:	mov	r0, r4
   13180:	strd	r2, [sp]
   13184:	mov	r2, #1
   13188:	movw	r3, #10128	; 0x2790
   1318c:	movt	r3, #2
   13190:	bl	20944 <flatcc_json_printer_table_field@@Base>
   13194:	mov	lr, #7
   13198:	movw	r3, #12508	; 0x30dc
   1319c:	movt	r3, #1
   131a0:	movw	ip, #14108	; 0x371c
   131a4:	movt	ip, #1
   131a8:	mov	r1, r5
   131ac:	str	lr, [sp]
   131b0:	mov	r0, r4
   131b4:	mov	r2, #3
   131b8:	str	ip, [sp, #4]
   131bc:	str	r3, [sp, #8]
   131c0:	movw	r3, #10136	; 0x2798
   131c4:	movt	r3, #2
   131c8:	bl	205fc <flatcc_json_printer_union_vector_field@@Base>
   131cc:	add	sp, sp, #20
   131d0:	ldrd	r4, [sp]
   131d4:	add	sp, sp, #8
   131d8:	pop	{pc}		; (ldr pc, [sp], #4)
   131dc:	mov	r2, #14
   131e0:	strd	r4, [sp, #-28]!	; 0xffffffe4
   131e4:	movw	r4, #13012	; 0x32d4
   131e8:	movt	r4, #1
   131ec:	movw	r5, #13224	; 0x33a8
   131f0:	movt	r5, #1
   131f4:	strd	r6, [sp, #8]
   131f8:	movw	r3, #10144	; 0x27a0
   131fc:	movt	r3, #2
   13200:	strd	r8, [sp, #16]
   13204:	mov	r8, #10
   13208:	str	lr, [sp, #24]
   1320c:	sub	sp, sp, #20
   13210:	mov	r6, r0
   13214:	mov	r7, r1
   13218:	mov	r9, #9
   1321c:	stm	sp, {r2, r5}
   13220:	mov	r2, #1
   13224:	str	r4, [sp, #8]
   13228:	bl	20c10 <flatcc_json_printer_union_field@@Base>
   1322c:	mov	r1, r7
   13230:	mov	r0, r6
   13234:	str	r8, [sp]
   13238:	mov	r2, #3
   1323c:	movw	r3, #10160	; 0x27b0
   13240:	movt	r3, #2
   13244:	str	r5, [sp, #4]
   13248:	str	r4, [sp, #8]
   1324c:	bl	20c10 <flatcc_json_printer_union_field@@Base>
   13250:	mov	r1, r7
   13254:	mov	r0, r6
   13258:	str	r9, [sp]
   1325c:	mov	r2, #5
   13260:	movw	r3, #10172	; 0x27bc
   13264:	movt	r3, #2
   13268:	str	r5, [sp, #4]
   1326c:	str	r4, [sp, #8]
   13270:	bl	20c10 <flatcc_json_printer_union_field@@Base>
   13274:	mov	r2, #5
   13278:	mov	r1, r7
   1327c:	mov	r0, r6
   13280:	movw	r3, #10184	; 0x27c8
   13284:	movt	r3, #2
   13288:	stm	sp, {r2, r5}
   1328c:	mov	r2, #7
   13290:	str	r4, [sp, #8]
   13294:	bl	20c10 <flatcc_json_printer_union_field@@Base>
   13298:	mov	r2, r9
   1329c:	mov	r1, r7
   132a0:	str	r8, [sp]
   132a4:	mov	r0, r6
   132a8:	movw	r3, #10192	; 0x27d0
   132ac:	movt	r3, #2
   132b0:	str	r5, [sp, #4]
   132b4:	str	r4, [sp, #8]
   132b8:	bl	205fc <flatcc_json_printer_union_vector_field@@Base>
   132bc:	add	sp, sp, #20
   132c0:	ldrd	r4, [sp]
   132c4:	ldrd	r6, [sp, #8]
   132c8:	ldrd	r8, [sp, #16]
   132cc:	add	sp, sp, #24
   132d0:	pop	{pc}		; (ldr pc, [sp], #4)
   132d4:	ldrb	r3, [r1, #8]
   132d8:	mov	r2, r1
   132dc:	mov	ip, r0
   132e0:	cmp	r3, #10
   132e4:	bhi	1330c <_start@@Base+0xd54>
   132e8:	cmp	r3, #9
   132ec:	bcs	13330 <_start@@Base+0xd78>
   132f0:	cmp	r3, #2
   132f4:	beq	1333c <_start@@Base+0xd84>
   132f8:	cmp	r3, #8
   132fc:	bne	13328 <_start@@Base+0xd70>
   13300:	movw	r2, #13176	; 0x3378
   13304:	movt	r2, #1
   13308:	b	2100c <flatcc_json_printer_union_struct@@Base>
   1330c:	cmp	r3, #11
   13310:	beq	1331c <_start@@Base+0xd64>
   13314:	cmp	r3, #255	; 0xff
   13318:	bne	1332c <_start@@Base+0xd74>
   1331c:	mov	r1, r2
   13320:	mov	r0, ip
   13324:	b	210e0 <flatcc_json_printer_union_string@@Base>
   13328:	bx	lr
   1332c:	bx	lr
   13330:	movw	r2, #13128	; 0x3348
   13334:	movt	r2, #1
   13338:	b	2100c <flatcc_json_printer_union_struct@@Base>
   1333c:	movw	r2, #10064	; 0x2750
   13340:	movt	r2, #1
   13344:	b	20ee0 <flatcc_json_printer_union_table@@Base>
   13348:	movw	ip, #10204	; 0x27dc
   1334c:	movt	ip, #2
   13350:	push	{lr}		; (str lr, [sp, #-4]!)
   13354:	mov	lr, #10
   13358:	sub	sp, sp, #12
   1335c:	mov	r3, #0
   13360:	mov	r2, r1
   13364:	mov	r1, r3
   13368:	stm	sp, {ip, lr}
   1336c:	bl	1a6d4 <flatcc_json_printer_int32_struct_field@@Base>
   13370:	add	sp, sp, #12
   13374:	pop	{pc}		; (ldr pc, [sp], #4)
   13378:	movw	ip, #10216	; 0x27e8
   1337c:	movt	ip, #2
   13380:	push	{lr}		; (str lr, [sp, #-4]!)
   13384:	mov	lr, #11
   13388:	sub	sp, sp, #12
   1338c:	mov	r3, #0
   13390:	mov	r2, r1
   13394:	mov	r1, r3
   13398:	stm	sp, {ip, lr}
   1339c:	bl	19e18 <flatcc_json_printer_uint16_struct_field@@Base>
   133a0:	add	sp, sp, #12
   133a4:	pop	{pc}		; (ldr pc, [sp], #4)
   133a8:	cmp	r1, #9
   133ac:	mov	r3, r0
   133b0:	beq	133fc <_start@@Base+0xe44>
   133b4:	bls	133dc <_start@@Base+0xe24>
   133b8:	cmp	r1, #11
   133bc:	beq	1340c <_start@@Base+0xe54>
   133c0:	bcc	1341c <_start@@Base+0xe64>
   133c4:	cmp	r1, #255	; 0xff
   133c8:	bne	1342c <_start@@Base+0xe74>
   133cc:	movw	r1, #10272	; 0x2820
   133d0:	movt	r1, #2
   133d4:	mov	r2, #6
   133d8:	b	16510 <flatcc_json_printer_enum@@Base>
   133dc:	cmp	r1, #2
   133e0:	beq	13440 <_start@@Base+0xe88>
   133e4:	cmp	r1, #8
   133e8:	bne	1342c <_start@@Base+0xe74>
   133ec:	mov	r2, r1
   133f0:	movw	r1, #10236	; 0x27fc
   133f4:	movt	r1, #2
   133f8:	b	16510 <flatcc_json_printer_enum@@Base>
   133fc:	movw	r1, #10248	; 0x2808
   13400:	movt	r1, #2
   13404:	mov	r2, #5
   13408:	b	16510 <flatcc_json_printer_enum@@Base>
   1340c:	movw	r1, #10264	; 0x2818
   13410:	movt	r1, #2
   13414:	mov	r2, #5
   13418:	b	16510 <flatcc_json_printer_enum@@Base>
   1341c:	movw	r1, #10256	; 0x2810
   13420:	movt	r1, #2
   13424:	mov	r2, #7
   13428:	b	16510 <flatcc_json_printer_enum@@Base>
   1342c:	movw	r1, #10280	; 0x2828
   13430:	movt	r1, #2
   13434:	mov	r0, r3
   13438:	mov	r2, #4
   1343c:	b	16510 <flatcc_json_printer_enum@@Base>
   13440:	movw	r1, #10228	; 0x27f4
   13444:	movt	r1, #2
   13448:	mov	r2, #5
   1344c:	b	16510 <flatcc_json_printer_enum@@Base>
   13450:	mov	ip, #5
   13454:	strd	r4, [sp, #-20]!	; 0xffffffec
   13458:	mov	r4, #2
   1345c:	movw	r5, #13576	; 0x3508
   13460:	movt	r5, #1
   13464:	strd	r6, [sp, #8]
   13468:	str	lr, [sp, #16]
   1346c:	sub	sp, sp, #20
   13470:	mov	r2, #0
   13474:	movw	r3, #9616	; 0x2590
   13478:	movt	r3, #2
   1347c:	str	ip, [sp]
   13480:	mov	r6, r0
   13484:	mov	r7, r1
   13488:	strd	r4, [sp, #4]
   1348c:	bl	18f04 <flatcc_json_printer_int8_enum_field@@Base>
   13490:	mov	r2, #6
   13494:	mov	r1, r7
   13498:	mov	r0, r6
   1349c:	movw	r3, #10288	; 0x2830
   134a0:	movt	r3, #2
   134a4:	stm	sp, {r2, r4, r5}
   134a8:	mov	r2, #1
   134ac:	bl	18f04 <flatcc_json_printer_int8_enum_field@@Base>
   134b0:	mov	r2, r4
   134b4:	mov	r1, r7
   134b8:	str	r4, [sp]
   134bc:	mov	r0, r6
   134c0:	movw	r3, #10296	; 0x2838
   134c4:	movt	r3, #2
   134c8:	str	r4, [sp, #4]
   134cc:	bl	16d80 <flatcc_json_printer_uint8_field@@Base>
   134d0:	mov	ip, #3
   134d4:	mov	r1, r7
   134d8:	mov	r0, r6
   134dc:	mov	r2, ip
   134e0:	movw	r3, #10300	; 0x283c
   134e4:	movt	r3, #2
   134e8:	str	ip, [sp]
   134ec:	str	r4, [sp, #4]
   134f0:	bl	16d80 <flatcc_json_printer_uint8_field@@Base>
   134f4:	add	sp, sp, #20
   134f8:	ldrd	r4, [sp]
   134fc:	ldrd	r6, [sp, #8]
   13500:	add	sp, sp, #16
   13504:	pop	{pc}		; (ldr pc, [sp], #4)
   13508:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1350c:	uxtb	r4, r1
   13510:	tst	r4, #244	; 0xf4
   13514:	strd	r6, [sp, #8]
   13518:	movne	r5, #1
   1351c:	moveq	r5, #0
   13520:	str	r8, [sp, #16]
   13524:	cmp	r4, #0
   13528:	str	lr, [sp, #20]
   1352c:	moveq	r5, #1
   13530:	cmp	r5, #0
   13534:	beq	13550 <_start@@Base+0xf98>
   13538:	ldrd	r4, [sp]
   1353c:	ldrd	r6, [sp, #8]
   13540:	ldr	r8, [sp, #16]
   13544:	ldr	lr, [sp, #20]
   13548:	add	sp, sp, #24
   1354c:	b	16298 <flatcc_json_printer_int8@@Base>
   13550:	sub	r3, r4, #1
   13554:	mov	r6, r0
   13558:	tst	r3, r4
   1355c:	movne	r7, #1
   13560:	moveq	r7, #0
   13564:	mov	r1, r7
   13568:	bl	165a0 <flatcc_json_printer_delimit_enum_flags@@Base>
   1356c:	ands	r1, r4, #1
   13570:	moveq	r5, #1
   13574:	bne	135a8 <_start@@Base+0xff0>
   13578:	tst	r4, #2
   1357c:	bne	135d0 <_start@@Base+0x1018>
   13580:	tst	r4, #8
   13584:	bne	135f0 <_start@@Base+0x1038>
   13588:	mov	r1, r7
   1358c:	mov	r0, r6
   13590:	ldrd	r4, [sp]
   13594:	ldrd	r6, [sp, #8]
   13598:	ldr	r8, [sp, #16]
   1359c:	ldr	lr, [sp, #20]
   135a0:	add	sp, sp, #24
   135a4:	b	165a0 <flatcc_json_printer_delimit_enum_flags@@Base>
   135a8:	mov	r1, r5
   135ac:	movw	r2, #10304	; 0x2840
   135b0:	movt	r2, #2
   135b4:	mov	r3, #3
   135b8:	mov	r0, r6
   135bc:	mov	r5, #2
   135c0:	bl	165d0 <flatcc_json_printer_enum_flag@@Base>
   135c4:	tst	r4, #2
   135c8:	mov	r1, #1
   135cc:	beq	13580 <_start@@Base+0xfc8>
   135d0:	movw	r2, #10308	; 0x2844
   135d4:	movt	r2, #2
   135d8:	mov	r3, #5
   135dc:	mov	r0, r6
   135e0:	bl	165d0 <flatcc_json_printer_enum_flag@@Base>
   135e4:	tst	r4, #8
   135e8:	mov	r1, r5
   135ec:	beq	13588 <_start@@Base+0xfd0>
   135f0:	movw	r2, #10316	; 0x284c
   135f4:	movt	r2, #2
   135f8:	mov	r3, #4
   135fc:	mov	r0, r6
   13600:	bl	165d0 <flatcc_json_printer_enum_flag@@Base>
   13604:	b	13588 <_start@@Base+0xfd0>
   13608:	movw	ip, #10324	; 0x2854
   1360c:	movt	ip, #2
   13610:	strd	r4, [sp, #-16]!
   13614:	str	r6, [sp, #8]
   13618:	mov	r6, #1
   1361c:	mov	r3, #0
   13620:	str	lr, [sp, #12]
   13624:	sub	sp, sp, #16
   13628:	mov	r4, r1
   1362c:	mov	r2, r1
   13630:	mov	r1, r3
   13634:	str	ip, [sp]
   13638:	mov	r5, r0
   1363c:	str	r6, [sp, #4]
   13640:	bl	1ac18 <flatcc_json_printer_float_struct_field@@Base>
   13644:	movw	r3, #9684	; 0x25d4
   13648:	movt	r3, #2
   1364c:	mov	r2, r4
   13650:	mov	r1, r6
   13654:	mov	r0, r5
   13658:	stm	sp, {r3, r6}
   1365c:	mov	r3, #4
   13660:	bl	1ac18 <flatcc_json_printer_float_struct_field@@Base>
   13664:	movw	ip, #10328	; 0x2858
   13668:	movt	ip, #2
   1366c:	mov	r2, r4
   13670:	mov	r0, r5
   13674:	mov	r3, #8
   13678:	mov	r1, #2
   1367c:	str	ip, [sp]
   13680:	str	r6, [sp, #4]
   13684:	mov	r6, #5
   13688:	bl	1ac18 <flatcc_json_printer_float_struct_field@@Base>
   1368c:	movw	r1, #10332	; 0x285c
   13690:	movt	r1, #2
   13694:	mov	r2, r4
   13698:	mov	r0, r5
   1369c:	mov	r3, #16
   136a0:	stm	sp, {r1, r6}
   136a4:	mov	r1, #3
   136a8:	bl	1adac <flatcc_json_printer_double_struct_field@@Base>
   136ac:	movw	r3, #13576	; 0x3508
   136b0:	movt	r3, #1
   136b4:	movw	r1, #10340	; 0x2864
   136b8:	movt	r1, #2
   136bc:	mov	r2, r4
   136c0:	mov	r0, r5
   136c4:	stm	sp, {r1, r6}
   136c8:	mov	r1, #4
   136cc:	str	r3, [sp, #8]
   136d0:	mov	r3, #24
   136d4:	bl	1b748 <flatcc_json_printer_int8_enum_struct_field@@Base>
   136d8:	movw	r3, #12392	; 0x3068
   136dc:	movt	r3, #1
   136e0:	str	r6, [sp, #4]
   136e4:	movw	ip, #10348	; 0x286c
   136e8:	movt	ip, #2
   136ec:	mov	r2, r4
   136f0:	mov	r1, r6
   136f4:	mov	r0, r5
   136f8:	str	ip, [sp]
   136fc:	str	r3, [sp, #8]
   13700:	mov	r3, #26
   13704:	bl	210f8 <flatcc_json_printer_embedded_struct_field@@Base>
   13708:	add	sp, sp, #16
   1370c:	ldrd	r4, [sp]
   13710:	ldr	r6, [sp, #8]
   13714:	add	sp, sp, #12
   13718:	pop	{pc}		; (ldr pc, [sp], #4)
   1371c:	sub	r1, r1, #1
   13720:	cmp	r1, #3
   13724:	ldrls	pc, [pc, r1, lsl #2]
   13728:	b	1377c <_start@@Base+0x11c4>
   1372c:	andeq	r3, r1, ip, ror #14
   13730:	andeq	r3, r1, ip, asr r7
   13734:	andeq	r3, r1, ip, asr #14
   13738:	andeq	r3, r1, ip, lsr r7
   1373c:	movw	r1, #10400	; 0x28a0
   13740:	movt	r1, #2
   13744:	mov	r2, #3
   13748:	b	16510 <flatcc_json_printer_enum@@Base>
   1374c:	movw	r1, #10388	; 0x2894
   13750:	movt	r1, #2
   13754:	mov	r2, #8
   13758:	b	16510 <flatcc_json_printer_enum@@Base>
   1375c:	movw	r1, #10364	; 0x287c
   13760:	movt	r1, #2
   13764:	mov	r2, #23
   13768:	b	16510 <flatcc_json_printer_enum@@Base>
   1376c:	movw	r1, #10356	; 0x2874
   13770:	movt	r1, #2
   13774:	mov	r2, #7
   13778:	b	16510 <flatcc_json_printer_enum@@Base>
   1377c:	movw	r1, #10280	; 0x2828
   13780:	movt	r1, #2
   13784:	mov	r2, #4
   13788:	b	16510 <flatcc_json_printer_enum@@Base>
   1378c:	strd	r4, [sp, #-24]!	; 0xffffffe8
   13790:	strd	r6, [sp, #8]
   13794:	str	r8, [sp, #16]
   13798:	mov	r8, r1
   1379c:	movw	r1, #10404	; 0x28a4
   137a0:	movt	r1, #2
   137a4:	str	lr, [sp, #20]
   137a8:	bl	12404 <fopen@plt>
   137ac:	subs	r6, r0, #0
   137b0:	beq	1386c <_start@@Base+0x12b4>
   137b4:	mov	r2, #2
   137b8:	mov	r1, #0
   137bc:	bl	124f4 <fseek@plt>
   137c0:	mov	r0, r6
   137c4:	bl	12434 <ftell@plt>
   137c8:	mov	r5, r0
   137cc:	mov	r0, r6
   137d0:	cmp	r5, #10240	; 0x2800
   137d4:	str	r5, [r8]
   137d8:	bhi	13864 <_start@@Base+0x12ac>
   137dc:	bl	1244c <rewind@plt>
   137e0:	cmp	r5, #0
   137e4:	movne	r0, r5
   137e8:	moveq	r0, #1
   137ec:	bl	12488 <malloc@plt>
   137f0:	subs	r7, r0, #0
   137f4:	beq	13874 <_start@@Base+0x12bc>
   137f8:	mov	r4, #0
   137fc:	b	13804 <_start@@Base+0x124c>
   13800:	add	r4, r4, r0
   13804:	mov	r3, r6
   13808:	sub	r2, r5, r4
   1380c:	mov	r1, #1
   13810:	add	r0, r7, r4
   13814:	bl	12470 <fread@plt>
   13818:	cmp	r0, #0
   1381c:	bne	13800 <_start@@Base+0x1248>
   13820:	cmp	r5, r4
   13824:	mov	r0, r6
   13828:	bne	1384c <_start@@Base+0x1294>
   1382c:	bl	124dc <fclose@plt>
   13830:	str	r5, [r8]
   13834:	mov	r0, r7
   13838:	ldrd	r4, [sp]
   1383c:	ldrd	r6, [sp, #8]
   13840:	ldr	r8, [sp, #16]
   13844:	add	sp, sp, #20
   13848:	pop	{pc}		; (ldr pc, [sp], #4)
   1384c:	bl	124dc <fclose@plt>
   13850:	mov	r0, r7
   13854:	bl	1241c <free@plt>
   13858:	mov	r7, #0
   1385c:	str	r5, [r8]
   13860:	b	13834 <_start@@Base+0x127c>
   13864:	bl	124dc <fclose@plt>
   13868:	b	13858 <_start@@Base+0x12a0>
   1386c:	mov	r5, r6
   13870:	b	13858 <_start@@Base+0x12a0>
   13874:	mov	r0, r6
   13878:	bl	124dc <fclose@plt>
   1387c:	b	13858 <_start@@Base+0x12a0>
   13880:	bx	lr

00013884 <test_print@@Base>:
   13884:	strd	r4, [sp, #-28]!	; 0xffffffe4
   13888:	movw	r4, #16508	; 0x407c
   1388c:	movt	r4, #3
   13890:	mov	r3, #0
   13894:	ldr	r0, [r4]
   13898:	movw	r1, #10408	; 0x28a8
   1389c:	movt	r1, #2
   138a0:	strd	r6, [sp, #8]
   138a4:	strd	r8, [sp, #16]
   138a8:	str	lr, [sp, #24]
   138ac:	sub	sp, sp, #76	; 0x4c
   138b0:	str	r3, [sp, #12]
   138b4:	str	r3, [sp, #16]
   138b8:	str	r3, [sp, #20]
   138bc:	bl	12404 <fopen@plt>
   138c0:	subs	r7, r0, #0
   138c4:	beq	13b1c <test_print@@Base+0x298>
   138c8:	mov	r1, r7
   138cc:	add	r0, sp, #24
   138d0:	movw	r5, #16532	; 0x4094
   138d4:	movt	r5, #3
   138d8:	bl	21df4 <flatcc_json_printer_init@@Base>
   138dc:	ldr	r6, [r5]
   138e0:	mov	r2, #2
   138e4:	mov	r3, #1
   138e8:	strb	r2, [sp, #49]	; 0x31
   138ec:	strh	r3, [sp, #50]	; 0x32
   138f0:	cmp	r6, #0
   138f4:	beq	13910 <test_print@@Base+0x8c>
   138f8:	movw	r1, #10444	; 0x28cc
   138fc:	movt	r1, #2
   13900:	mov	r0, r6
   13904:	bl	123f8 <strcmp@plt>
   13908:	cmp	r0, #0
   1390c:	bne	13a28 <test_print@@Base+0x1a4>
   13910:	mov	r3, #288	; 0x120
   13914:	movw	r6, #9044	; 0x2354
   13918:	movt	r6, #2
   1391c:	str	r3, [sp, #12]
   13920:	add	r1, sp, #16
   13924:	ldr	r0, [r4, #4]
   13928:	bl	1378c <_start@@Base+0x11d4>
   1392c:	subs	r8, r0, #0
   13930:	beq	13aa8 <test_print@@Base+0x224>
   13934:	movw	r0, #10696	; 0x29c8
   13938:	movt	r0, #1
   1393c:	ldr	r2, [sp, #12]
   13940:	mov	r1, r6
   13944:	movw	r3, #10536	; 0x2928
   13948:	movt	r3, #2
   1394c:	str	r0, [sp]
   13950:	add	r0, sp, #24
   13954:	bl	21774 <flatcc_json_printer_table_as_root@@Base>
   13958:	mov	r1, #1
   1395c:	add	r0, sp, #24
   13960:	ldr	r3, [sp, #68]	; 0x44
   13964:	blx	r3
   13968:	ldr	r3, [sp, #60]	; 0x3c
   1396c:	cmp	r3, #0
   13970:	bne	13a70 <test_print@@Base+0x1ec>
   13974:	mov	r0, r7
   13978:	bl	124dc <fclose@plt>
   1397c:	add	r1, sp, #20
   13980:	ldr	r0, [r4]
   13984:	bl	1378c <_start@@Base+0x11d4>
   13988:	subs	r7, r0, #0
   1398c:	beq	13ae4 <test_print@@Base+0x260>
   13990:	ldr	r1, [sp, #16]
   13994:	movw	r3, #16520	; 0x4088
   13998:	movt	r3, #3
   1399c:	ldr	r2, [sp, #20]
   139a0:	ldr	r9, [r3]
   139a4:	cmp	r2, r1
   139a8:	bne	139bc <test_print@@Base+0x138>
   139ac:	mov	r1, r8
   139b0:	bl	12440 <memcmp@plt>
   139b4:	subs	r4, r0, #0
   139b8:	beq	13a8c <test_print@@Base+0x208>
   139bc:	movw	r0, #10616	; 0x2978
   139c0:	movt	r0, #2
   139c4:	mov	r3, r9
   139c8:	mov	r2, #54	; 0x36
   139cc:	mov	r1, #1
   139d0:	mvn	r4, #0
   139d4:	bl	12464 <fwrite@plt>
   139d8:	add	r0, sp, #24
   139dc:	bl	22058 <flatcc_json_printer_clear@@Base>
   139e0:	ldr	r3, [r5]
   139e4:	cmp	r3, #0
   139e8:	beq	13a80 <test_print@@Base+0x1fc>
   139ec:	mov	r0, r6
   139f0:	bl	1241c <free@plt>
   139f4:	mov	r0, r8
   139f8:	bl	1241c <free@plt>
   139fc:	cmp	r7, #0
   13a00:	beq	13a0c <test_print@@Base+0x188>
   13a04:	mov	r0, r7
   13a08:	bl	1241c <free@plt>
   13a0c:	mov	r0, r4
   13a10:	add	sp, sp, #76	; 0x4c
   13a14:	ldrd	r4, [sp]
   13a18:	ldrd	r6, [sp, #8]
   13a1c:	ldrd	r8, [sp, #16]
   13a20:	add	sp, sp, #24
   13a24:	pop	{pc}		; (ldr pc, [sp], #4)
   13a28:	mov	r0, r6
   13a2c:	add	r1, sp, #12
   13a30:	bl	1378c <_start@@Base+0x11d4>
   13a34:	subs	r6, r0, #0
   13a38:	bne	13920 <test_print@@Base+0x9c>
   13a3c:	movw	r3, #16520	; 0x4088
   13a40:	movt	r3, #3
   13a44:	ldr	r2, [r5]
   13a48:	movw	r1, #10448	; 0x28d0
   13a4c:	movt	r1, #2
   13a50:	ldr	r0, [r3]
   13a54:	bl	124b8 <fprintf@plt>
   13a58:	add	r0, sp, #24
   13a5c:	bl	22058 <flatcc_json_printer_clear@@Base>
   13a60:	mov	r0, r7
   13a64:	mvn	r4, #0
   13a68:	bl	124dc <fclose@plt>
   13a6c:	b	13a0c <test_print@@Base+0x188>
   13a70:	movw	r0, #10544	; 0x2930
   13a74:	movt	r0, #2
   13a78:	bl	1247c <puts@plt>
   13a7c:	b	13974 <test_print@@Base+0xf0>
   13a80:	mov	r0, r8
   13a84:	bl	1241c <free@plt>
   13a88:	b	13a04 <test_print@@Base+0x180>
   13a8c:	mov	r3, r9
   13a90:	movw	r0, #10672	; 0x29b0
   13a94:	movt	r0, #2
   13a98:	mov	r2, #26
   13a9c:	mov	r1, #1
   13aa0:	bl	12464 <fwrite@plt>
   13aa4:	b	139d8 <test_print@@Base+0x154>
   13aa8:	movw	r3, #16520	; 0x4088
   13aac:	movt	r3, #3
   13ab0:	ldr	r2, [r4, #4]
   13ab4:	movw	r1, #10492	; 0x28fc
   13ab8:	movt	r1, #2
   13abc:	ldr	r0, [r3]
   13ac0:	bl	124b8 <fprintf@plt>
   13ac4:	add	r0, sp, #24
   13ac8:	bl	22058 <flatcc_json_printer_clear@@Base>
   13acc:	ldr	r3, [r5]
   13ad0:	cmp	r3, #0
   13ad4:	beq	13a60 <test_print@@Base+0x1dc>
   13ad8:	mov	r0, r6
   13adc:	bl	1241c <free@plt>
   13ae0:	b	13a60 <test_print@@Base+0x1dc>
   13ae4:	movw	r3, #16520	; 0x4088
   13ae8:	movt	r3, #3
   13aec:	ldr	r2, [r4]
   13af0:	movw	r1, #10576	; 0x2950
   13af4:	movt	r1, #2
   13af8:	ldr	r0, [r3]
   13afc:	mvn	r4, #0
   13b00:	bl	124b8 <fprintf@plt>
   13b04:	add	r0, sp, #24
   13b08:	bl	22058 <flatcc_json_printer_clear@@Base>
   13b0c:	ldr	r3, [r5]
   13b10:	cmp	r3, #0
   13b14:	bne	139ec <test_print@@Base+0x168>
   13b18:	b	139f4 <test_print@@Base+0x170>
   13b1c:	movw	r3, #16520	; 0x4088
   13b20:	movt	r3, #3
   13b24:	ldr	r2, [r4]
   13b28:	movw	r1, #10412	; 0x28ac
   13b2c:	movt	r1, #2
   13b30:	ldr	r0, [r3]
   13b34:	mvn	r4, #0
   13b38:	bl	124b8 <fprintf@plt>
   13b3c:	b	13a0c <test_print@@Base+0x188>
   13b40:	cmp	r0, #1000	; 0x3e8
   13b44:	strd	r4, [sp, #-16]!
   13b48:	str	r6, [sp, #8]
   13b4c:	str	lr, [sp, #12]
   13b50:	bcc	13c38 <test_print@@Base+0x3b4>
   13b54:	movw	r3, #34079	; 0x851f
   13b58:	movt	r3, #20971	; 0x51eb
   13b5c:	mov	r2, #100	; 0x64
   13b60:	movw	lr, #9999	; 0x270f
   13b64:	umull	ip, r3, r3, r0
   13b68:	cmp	r0, lr
   13b6c:	movw	ip, #10976	; 0x2ae0
   13b70:	movt	ip, #2
   13b74:	lsr	r3, r3, #5
   13b78:	uxth	r6, r3
   13b7c:	mls	r3, r2, r3, r0
   13b80:	uxth	r3, r3
   13b84:	add	r0, ip, r3, lsl #1
   13b88:	bls	13bf0 <test_print@@Base+0x36c>
   13b8c:	mov	r2, #0
   13b90:	add	r4, r1, #3
   13b94:	mov	lr, #5
   13b98:	strb	r2, [r1, #5]
   13b9c:	ldrb	r3, [ip, r3, lsl #1]
   13ba0:	strb	r3, [r1, #3]
   13ba4:	ldrb	r3, [r0, #1]
   13ba8:	strb	r3, [r1, #4]
   13bac:	movw	r1, #34079	; 0x851f
   13bb0:	movt	r1, #20971	; 0x51eb
   13bb4:	mov	r2, #100	; 0x64
   13bb8:	sub	r5, r4, #2
   13bbc:	umull	r3, r1, r1, r6
   13bc0:	lsr	r1, r1, #5
   13bc4:	uxth	r0, r1
   13bc8:	mls	r2, r2, r1, r6
   13bcc:	uxth	r2, r2
   13bd0:	ldrb	r3, [ip, r2, lsl #1]
   13bd4:	add	r2, ip, r2, lsl #1
   13bd8:	strb	r3, [r4, #-2]
   13bdc:	ldrb	r3, [r2, #1]
   13be0:	strb	r3, [r4, #-1]
   13be4:	add	r3, r0, #48	; 0x30
   13be8:	strb	r3, [r5, #-1]
   13bec:	b	13c24 <test_print@@Base+0x3a0>
   13bf0:	mov	lr, #0
   13bf4:	add	r2, r1, #2
   13bf8:	strb	lr, [r1, #4]
   13bfc:	mov	lr, #4
   13c00:	ldrb	r3, [ip, r3, lsl #1]
   13c04:	strb	r3, [r1, #2]
   13c08:	ldrb	r3, [r0, #1]
   13c0c:	strb	r3, [r1, #3]
   13c10:	ldrb	r1, [ip, r6, lsl #1]
   13c14:	add	r3, ip, r6, lsl #1
   13c18:	strb	r1, [r2, #-2]
   13c1c:	ldrb	r3, [r3, #1]
   13c20:	strb	r3, [r2, #-1]
   13c24:	ldrd	r4, [sp]
   13c28:	mov	r0, lr
   13c2c:	ldr	r6, [sp, #8]
   13c30:	add	sp, sp, #12
   13c34:	pop	{pc}		; (ldr pc, [sp], #4)
   13c38:	cmp	r0, #99	; 0x63
   13c3c:	bhi	13c5c <test_print@@Base+0x3d8>
   13c40:	cmp	r0, #9
   13c44:	mov	r3, #0
   13c48:	bhi	13c7c <test_print@@Base+0x3f8>
   13c4c:	add	r5, r1, #1
   13c50:	mov	lr, #1
   13c54:	strb	r3, [r1, #1]
   13c58:	b	13be4 <test_print@@Base+0x360>
   13c5c:	mov	r3, #0
   13c60:	movw	ip, #10976	; 0x2ae0
   13c64:	movt	ip, #2
   13c68:	mov	r6, r0
   13c6c:	add	r4, r1, #3
   13c70:	mov	lr, #3
   13c74:	strb	r3, [r1, #3]
   13c78:	b	13bac <test_print@@Base+0x328>
   13c7c:	movw	ip, #10976	; 0x2ae0
   13c80:	movt	ip, #2
   13c84:	strb	r3, [r1, #2]
   13c88:	mov	r6, r0
   13c8c:	add	r2, r1, #2
   13c90:	mov	lr, #2
   13c94:	b	13c10 <test_print@@Base+0x38c>
   13c98:	movw	r2, #9999	; 0x270f
   13c9c:	mov	r3, r0
   13ca0:	strd	r4, [sp, #-32]!	; 0xffffffe0
   13ca4:	cmp	r0, r2
   13ca8:	strd	r6, [sp, #8]
   13cac:	strd	r8, [sp, #16]
   13cb0:	str	sl, [sp, #24]
   13cb4:	str	lr, [sp, #28]
   13cb8:	bls	13df0 <test_print@@Base+0x56c>
   13cbc:	movw	r2, #34079	; 0x851f
   13cc0:	movt	r2, #20971	; 0x51eb
   13cc4:	mov	r6, #100	; 0x64
   13cc8:	movw	r4, #5977	; 0x1759
   13ccc:	movt	r4, #53687	; 0xd1b7
   13cd0:	umull	ip, r0, r2, r0
   13cd4:	movw	ip, #38527	; 0x967f
   13cd8:	movt	ip, #152	; 0x98
   13cdc:	movw	lr, #10976	; 0x2ae0
   13ce0:	movt	lr, #2
   13ce4:	cmp	r3, ip
   13ce8:	umull	r5, r4, r4, r3
   13cec:	lsr	ip, r0, #5
   13cf0:	lsr	r4, r4, #13
   13cf4:	umull	r5, r0, r2, ip
   13cf8:	mls	r8, r6, ip, r3
   13cfc:	lsr	r0, r0, #5
   13d00:	add	r7, lr, r8, lsl #1
   13d04:	mls	r0, r6, r0, ip
   13d08:	add	r5, lr, r0, lsl #1
   13d0c:	bls	13e58 <test_print@@Base+0x5d4>
   13d10:	umull	r0, r9, r2, r4
   13d14:	movw	r0, #56963	; 0xde83
   13d18:	movt	r0, #17179	; 0x431b
   13d1c:	movw	ip, #51711	; 0xc9ff
   13d20:	movt	ip, #15258	; 0x3b9a
   13d24:	umull	sl, r0, r0, r3
   13d28:	cmp	r3, ip
   13d2c:	lsr	r9, r9, #5
   13d30:	mls	r9, r6, r9, r4
   13d34:	lsr	r4, r0, #18
   13d38:	add	r9, lr, r9, lsl #1
   13d3c:	bhi	13ee8 <test_print@@Base+0x664>
   13d40:	movw	r2, #57599	; 0xe0ff
   13d44:	movt	r2, #1525	; 0x5f5
   13d48:	cmp	r3, r2
   13d4c:	mov	r3, #0
   13d50:	bls	13f70 <test_print@@Base+0x6ec>
   13d54:	strb	r3, [r1, #9]
   13d58:	add	ip, r1, #7
   13d5c:	mov	r0, #9
   13d60:	ldrb	r3, [lr, r8, lsl #1]
   13d64:	strb	r3, [r1, #7]
   13d68:	ldrb	r3, [r7, #1]
   13d6c:	mov	r7, r5
   13d70:	mov	r5, r9
   13d74:	strb	r3, [r1, #8]
   13d78:	movw	r3, #34079	; 0x851f
   13d7c:	movt	r3, #20971	; 0x51eb
   13d80:	ldrb	r6, [r7]
   13d84:	mov	r2, #100	; 0x64
   13d88:	umull	r1, r3, r3, r4
   13d8c:	sub	r1, ip, #2
   13d90:	lsr	r3, r3, #5
   13d94:	strb	r6, [ip, #-2]
   13d98:	ldrb	r6, [r7, #1]
   13d9c:	mls	r2, r2, r3, r4
   13da0:	add	r2, lr, r2, lsl #1
   13da4:	strb	r6, [ip, #-1]
   13da8:	ldrb	lr, [r5]
   13dac:	sub	ip, r1, #2
   13db0:	strb	lr, [r1, #-2]
   13db4:	ldrb	lr, [r5, #1]
   13db8:	strb	lr, [r1, #-1]
   13dbc:	ldrb	r1, [r2]
   13dc0:	sub	lr, ip, #2
   13dc4:	strb	r1, [ip, #-2]
   13dc8:	ldrb	r2, [r2, #1]
   13dcc:	strb	r2, [ip, #-1]
   13dd0:	add	r3, r3, #48	; 0x30
   13dd4:	strb	r3, [lr, #-1]
   13dd8:	ldrd	r4, [sp]
   13ddc:	ldrd	r6, [sp, #8]
   13de0:	ldrd	r8, [sp, #16]
   13de4:	ldr	sl, [sp, #24]
   13de8:	add	sp, sp, #28
   13dec:	pop	{pc}		; (ldr pc, [sp], #4)
   13df0:	cmp	r0, #99	; 0x63
   13df4:	bls	13e3c <test_print@@Base+0x5b8>
   13df8:	movw	ip, #34079	; 0x851f
   13dfc:	movt	ip, #20971	; 0x51eb
   13e00:	cmp	r0, #1000	; 0x3e8
   13e04:	mov	r2, #100	; 0x64
   13e08:	umull	r0, ip, ip, r3
   13e0c:	movw	lr, #10976	; 0x2ae0
   13e10:	movt	lr, #2
   13e14:	lsr	ip, ip, #5
   13e18:	mov	r4, ip
   13e1c:	mls	r2, r2, ip, r3
   13e20:	add	r2, lr, r2, lsl #1
   13e24:	bcc	13ed0 <test_print@@Base+0x64c>
   13e28:	mov	r0, #0
   13e2c:	add	r3, r1, #4
   13e30:	strb	r0, [r1, #4]
   13e34:	mov	r0, #4
   13e38:	b	13ea4 <test_print@@Base+0x620>
   13e3c:	cmp	r0, #9
   13e40:	mov	r2, #0
   13e44:	bhi	13f54 <test_print@@Base+0x6d0>
   13e48:	add	lr, r1, #1
   13e4c:	mov	r0, #1
   13e50:	strb	r2, [r1, #1]
   13e54:	b	13dd0 <test_print@@Base+0x54c>
   13e58:	movw	r2, #16959	; 0x423f
   13e5c:	movt	r2, #15
   13e60:	cmp	r3, r2
   13e64:	bhi	13f40 <test_print@@Base+0x6bc>
   13e68:	movw	r2, #34463	; 0x869f
   13e6c:	movt	r2, #1
   13e70:	cmp	r3, r2
   13e74:	bls	13f8c <test_print@@Base+0x708>
   13e78:	mov	r3, #0
   13e7c:	mov	r2, r5
   13e80:	mov	r9, r7
   13e84:	add	ip, r1, #6
   13e88:	mov	r0, #6
   13e8c:	strb	r3, [r1, #6]
   13e90:	ldrb	r1, [r9]
   13e94:	sub	r3, ip, #2
   13e98:	strb	r1, [ip, #-2]
   13e9c:	ldrb	r1, [r9, #1]
   13ea0:	strb	r1, [ip, #-1]
   13ea4:	ldrb	r1, [r2]
   13ea8:	sub	ip, r3, #2
   13eac:	strb	r1, [r3, #-2]
   13eb0:	ldrb	r2, [r2, #1]
   13eb4:	strb	r2, [r3, #-1]
   13eb8:	ldrb	r3, [lr, r4, lsl #1]
   13ebc:	add	r2, lr, r4, lsl #1
   13ec0:	strb	r3, [ip, #-2]
   13ec4:	ldrb	r3, [r2, #1]
   13ec8:	strb	r3, [ip, #-1]
   13ecc:	b	13dd8 <test_print@@Base+0x554>
   13ed0:	mov	lr, #0
   13ed4:	mov	r3, ip
   13ed8:	mov	r0, #3
   13edc:	add	ip, r1, #3
   13ee0:	strb	lr, [r1, #3]
   13ee4:	b	13dbc <test_print@@Base+0x538>
   13ee8:	umull	r0, r2, r2, r4
   13eec:	mov	ip, #0
   13ef0:	movw	r0, #15241	; 0x3b89
   13ef4:	movt	r0, #21990	; 0x55e6
   13ef8:	strb	ip, [r1, #10]
   13efc:	ldrb	sl, [lr, r8, lsl #1]
   13f00:	lsr	ip, r2, #5
   13f04:	add	r8, r1, #8
   13f08:	umull	r2, r3, r0, r3
   13f0c:	mov	r0, #10
   13f10:	mls	ip, r6, ip, r4
   13f14:	lsr	r4, r3, #25
   13f18:	strb	sl, [r1, #8]
   13f1c:	ldrb	r3, [r7, #1]
   13f20:	add	r2, lr, ip, lsl #1
   13f24:	strb	r3, [r1, #9]
   13f28:	ldrb	r3, [r5]
   13f2c:	sub	ip, r8, #2
   13f30:	strb	r3, [r8, #-2]
   13f34:	ldrb	r3, [r5, #1]
   13f38:	strb	r3, [r8, #-1]
   13f3c:	b	13e90 <test_print@@Base+0x60c>
   13f40:	mov	r3, #0
   13f44:	add	ip, r1, #7
   13f48:	mov	r0, #7
   13f4c:	strb	r3, [r1, #7]
   13f50:	b	13d78 <test_print@@Base+0x4f4>
   13f54:	mov	r4, r0
   13f58:	movw	lr, #10976	; 0x2ae0
   13f5c:	movt	lr, #2
   13f60:	add	ip, r1, #2
   13f64:	strb	r2, [r1, #2]
   13f68:	mov	r0, #2
   13f6c:	b	13eb8 <test_print@@Base+0x634>
   13f70:	mov	r2, r9
   13f74:	add	r8, r1, #8
   13f78:	strb	r3, [r1, #8]
   13f7c:	mov	r9, r5
   13f80:	mov	r0, #8
   13f84:	mov	r5, r7
   13f88:	b	13f28 <test_print@@Base+0x6a4>
   13f8c:	mov	r0, #0
   13f90:	mov	r2, r5
   13f94:	mov	r3, r4
   13f98:	mov	r5, r7
   13f9c:	add	r1, r1, #5
   13fa0:	strb	r0, [r1]
   13fa4:	mov	r0, #5
   13fa8:	b	13da8 <test_print@@Base+0x524>
   13fac:	strd	r4, [sp, #-36]!	; 0xffffffdc
   13fb0:	strd	r6, [sp, #8]
   13fb4:	add	r7, pc, #916	; 0x394
   13fb8:	ldrd	r6, [r7]
   13fbc:	strd	r8, [sp, #16]
   13fc0:	strd	sl, [sp, #24]
   13fc4:	mov	sl, r0
   13fc8:	str	lr, [sp, #32]
   13fcc:	sub	sp, sp, #28
   13fd0:	cmp	r1, r7
   13fd4:	cmpeq	r0, r6
   13fd8:	bls	14328 <test_print@@Base+0xaa4>
   13fdc:	mov	r6, r2
   13fe0:	mov	r3, #0
   13fe4:	mov	r2, #100	; 0x64
   13fe8:	mov	fp, r1
   13fec:	bl	22170 <flatcc_json_printer_clear@@Base+0x118>
   13ff0:	mov	ip, r2
   13ff4:	mov	r3, #0
   13ff8:	mov	r2, #100	; 0x64
   13ffc:	movw	r4, #10976	; 0x2ae0
   14000:	movt	r4, #2
   14004:	mov	r0, sl
   14008:	str	ip, [sp, #16]
   1400c:	mov	r1, fp
   14010:	add	r5, r4, ip, lsl #1
   14014:	bl	22170 <flatcc_json_printer_clear@@Base+0x118>
   14018:	add	r3, pc, #824	; 0x338
   1401c:	ldrd	r2, [r3]
   14020:	mov	r9, r0
   14024:	str	r1, [sp]
   14028:	cmp	fp, r3
   1402c:	cmpeq	sl, r2
   14030:	bls	14258 <test_print@@Base+0x9d4>
   14034:	mov	r2, #100	; 0x64
   14038:	mov	r3, #0
   1403c:	bl	22170 <flatcc_json_printer_clear@@Base+0x118>
   14040:	add	r3, r4, r2, lsl #1
   14044:	mov	r0, sl
   14048:	movw	r2, #10000	; 0x2710
   1404c:	mov	r1, fp
   14050:	str	r3, [sp, #12]
   14054:	mov	r3, #0
   14058:	bl	22170 <flatcc_json_printer_clear@@Base+0x118>
   1405c:	mov	r2, #100	; 0x64
   14060:	mov	r3, #0
   14064:	str	r1, [sp]
   14068:	mov	r9, r0
   1406c:	bl	22170 <flatcc_json_printer_clear@@Base+0x118>
   14070:	add	r1, r4, r2, lsl #1
   14074:	mov	r3, #0
   14078:	mov	r0, sl
   1407c:	movw	r2, #16960	; 0x4240
   14080:	movt	r2, #15
   14084:	str	r1, [sp, #8]
   14088:	mov	r1, fp
   1408c:	bl	22170 <flatcc_json_printer_clear@@Base+0x118>
   14090:	add	r3, pc, #712	; 0x2c8
   14094:	ldrd	r2, [r3]
   14098:	mov	r8, r0
   1409c:	mov	r7, r1
   140a0:	cmp	fp, r3
   140a4:	cmpeq	sl, r2
   140a8:	bhi	143b8 <test_print@@Base+0xb34>
   140ac:	add	r3, pc, #692	; 0x2b4
   140b0:	ldrd	r2, [r3]
   140b4:	cmp	fp, r3
   140b8:	cmpeq	sl, r2
   140bc:	bls	1451c <test_print@@Base+0xc98>
   140c0:	ldr	r2, [sp, #8]
   140c4:	mov	r3, #0
   140c8:	add	ip, r6, #16
   140cc:	mov	sl, #16
   140d0:	str	r5, [sp, #8]
   140d4:	strb	r3, [r6, #16]
   140d8:	mov	r5, r2
   140dc:	ldr	r9, [sp, #8]
   140e0:	mov	r0, r8
   140e4:	mov	r1, r7
   140e8:	mov	r2, #100	; 0x64
   140ec:	mov	r3, #0
   140f0:	sub	r6, ip, #2
   140f4:	ldrb	lr, [r9]
   140f8:	strb	lr, [ip, #-2]
   140fc:	ldrb	lr, [r9, #1]
   14100:	strb	lr, [ip, #-1]
   14104:	bl	22170 <flatcc_json_printer_clear@@Base+0x118>
   14108:	add	r3, r4, r2, lsl #1
   1410c:	mov	r0, r8
   14110:	mov	r1, r7
   14114:	mov	r2, #100	; 0x64
   14118:	str	r3, [sp, #4]
   1411c:	mov	r3, #0
   14120:	bl	22170 <flatcc_json_printer_clear@@Base+0x118>
   14124:	mov	r8, r0
   14128:	mov	r7, r1
   1412c:	ldr	r1, [sp, #12]
   14130:	sub	r3, r6, #2
   14134:	ldrb	r2, [r1]
   14138:	strb	r2, [r6, #-2]
   1413c:	ldrb	r2, [r1, #1]
   14140:	strb	r2, [r6, #-1]
   14144:	ldrb	r2, [r5]
   14148:	sub	r6, r3, #2
   1414c:	strb	r2, [r3, #-2]
   14150:	ldrb	r2, [r5, #1]
   14154:	strb	r2, [r3, #-1]
   14158:	ldr	r2, [sp, #4]
   1415c:	sub	r5, r6, #2
   14160:	ldrb	r3, [r2]
   14164:	strb	r3, [r6, #-2]
   14168:	ldrb	r3, [r2, #1]
   1416c:	strb	r3, [r6, #-1]
   14170:	mov	r0, r8
   14174:	mov	r1, r7
   14178:	mov	r2, #100	; 0x64
   1417c:	mov	r3, #0
   14180:	bl	22170 <flatcc_json_printer_clear@@Base+0x118>
   14184:	ldrb	lr, [r4, r2, lsl #1]
   14188:	add	ip, r4, r2, lsl #1
   1418c:	mov	r0, r8
   14190:	mov	r1, r7
   14194:	mov	r2, #100	; 0x64
   14198:	mov	r3, #0
   1419c:	strb	lr, [r5, #-2]
   141a0:	ldrb	ip, [ip, #1]
   141a4:	strb	ip, [r5, #-1]
   141a8:	bl	22170 <flatcc_json_printer_clear@@Base+0x118>
   141ac:	mov	r2, #100	; 0x64
   141b0:	mov	r3, #0
   141b4:	bl	22170 <flatcc_json_printer_clear@@Base+0x118>
   141b8:	ldrb	lr, [r4, r2, lsl #1]
   141bc:	add	ip, r4, r2, lsl #1
   141c0:	mov	r0, r8
   141c4:	mov	r1, r7
   141c8:	movw	r2, #10000	; 0x2710
   141cc:	mov	r3, #0
   141d0:	strb	lr, [r5, #-4]
   141d4:	ldrb	ip, [ip, #1]
   141d8:	strb	ip, [r5, #-3]
   141dc:	bl	22170 <flatcc_json_printer_clear@@Base+0x118>
   141e0:	mov	r2, #100	; 0x64
   141e4:	mov	r3, #0
   141e8:	bl	22170 <flatcc_json_printer_clear@@Base+0x118>
   141ec:	ldrb	lr, [r4, r2, lsl #1]
   141f0:	add	ip, r4, r2, lsl #1
   141f4:	mov	r0, r8
   141f8:	mov	r1, r7
   141fc:	mov	r3, #0
   14200:	movw	r2, #16960	; 0x4240
   14204:	movt	r2, #15
   14208:	strb	lr, [r5, #-6]
   1420c:	ldrb	ip, [ip, #1]
   14210:	strb	ip, [r5, #-5]
   14214:	bl	22170 <flatcc_json_printer_clear@@Base+0x118>
   14218:	mov	r2, #100	; 0x64
   1421c:	mov	r3, #0
   14220:	bl	22170 <flatcc_json_printer_clear@@Base+0x118>
   14224:	ldrb	r3, [r4, r2, lsl #1]
   14228:	add	r4, r4, r2, lsl #1
   1422c:	mov	r0, sl
   14230:	strb	r3, [r5, #-8]
   14234:	ldrb	r3, [r4, #1]
   14238:	strb	r3, [r5, #-7]
   1423c:	add	sp, sp, #28
   14240:	ldrd	r4, [sp]
   14244:	ldrd	r6, [sp, #8]
   14248:	ldrd	r8, [sp, #16]
   1424c:	ldrd	sl, [sp, #24]
   14250:	add	sp, sp, #32
   14254:	pop	{pc}		; (ldr pc, [sp], #4)
   14258:	add	r3, pc, #272	; 0x110
   1425c:	ldrd	r2, [r3]
   14260:	cmp	fp, r3
   14264:	cmpeq	sl, r2
   14268:	bls	1449c <test_print@@Base+0xc18>
   1426c:	mov	r2, #100	; 0x64
   14270:	mov	r3, #0
   14274:	bl	22170 <flatcc_json_printer_clear@@Base+0x118>
   14278:	add	r3, r4, r2, lsl #1
   1427c:	mov	r0, sl
   14280:	movw	r2, #10000	; 0x2710
   14284:	mov	r1, fp
   14288:	str	r3, [sp, #4]
   1428c:	mov	r3, #0
   14290:	bl	22170 <flatcc_json_printer_clear@@Base+0x118>
   14294:	add	r3, pc, #220	; 0xdc
   14298:	ldrd	r2, [r3]
   1429c:	mov	r8, r0
   142a0:	mov	r7, r1
   142a4:	cmp	fp, r3
   142a8:	cmpeq	sl, r2
   142ac:	mov	r2, #0
   142b0:	bls	145ac <test_print@@Base+0xd28>
   142b4:	add	r3, r6, #13
   142b8:	mov	sl, #13
   142bc:	strb	r2, [r6, #13]
   142c0:	ldrb	r2, [r5]
   142c4:	sub	r6, r3, #2
   142c8:	strb	r2, [r3, #-2]
   142cc:	ldrb	r2, [r5, #1]
   142d0:	strb	r2, [r3, #-1]
   142d4:	ldr	lr, [sp, #4]
   142d8:	mov	r0, r8
   142dc:	mov	r1, r7
   142e0:	mov	r2, #10
   142e4:	mov	r3, #0
   142e8:	sub	r5, r6, #3
   142ec:	ldrb	ip, [lr]
   142f0:	strb	ip, [r6, #-2]
   142f4:	ldrb	ip, [lr, #1]
   142f8:	strb	ip, [r6, #-1]
   142fc:	bl	22170 <flatcc_json_printer_clear@@Base+0x118>
   14300:	add	r2, r2, #48	; 0x30
   14304:	mov	r0, r9
   14308:	ldr	r1, [sp]
   1430c:	mov	r3, #0
   14310:	strb	r2, [r6, #-3]
   14314:	mov	r2, #1000	; 0x3e8
   14318:	bl	22170 <flatcc_json_printer_clear@@Base+0x118>
   1431c:	mov	r8, r0
   14320:	mov	r7, r1
   14324:	b	14170 <test_print@@Base+0x8ec>
   14328:	mov	r1, r2
   1432c:	add	sp, sp, #28
   14330:	ldrd	r4, [sp]
   14334:	ldrd	r6, [sp, #8]
   14338:	ldrd	r8, [sp, #16]
   1433c:	ldrd	sl, [sp, #24]
   14340:	ldr	lr, [sp, #32]
   14344:	add	sp, sp, #36	; 0x24
   14348:	b	13c98 <test_print@@Base+0x414>
   1434c:	nop	{0}
   14350:	blcc	fe6c6b54 <__bss_end__@@Base+0xfe692abc>
   14354:	andeq	r0, r0, r0
   14358:	mrcmi	15, 3, r9, cr2, cr15, {7}
   1435c:	andeq	r0, r0, r8, lsl r9
   14360:	svcvs	0x00c0ffff
   14364:	strdeq	r8, [r3], -r2	; <UNPREDICTABLE>
   14368:	strbge	r7, [r6], #4095	; 0xfff
   1436c:	andeq	r8, r3, lr, ror sp
   14370:	ldmdami	r6!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, sp, lr, pc}^
   14374:	andeq	r0, r0, r7, lsl r0
   14378:	strtle	r0, [r5], #4095	; 0xfff
   1437c:	andeq	r0, r0, r8, ror #1
   14380:	ldrbeq	lr, [r5, #256]!	; 0x100
   14384:	andeq	r0, r0, r0
   14388:			; <UNDEFINED> instruction: 0xa763ffff
   1438c:	stcleq	6, cr11, [r0, #716]!	; 0x2cc
   14390:	strpl	lr, [fp], #-1024	; 0xfffffc00
   14394:	andeq	r0, r0, r2
   14398:	stmibhi	r7!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, sp, lr, pc}^
   1439c:	bhi	ff1dcfb4 <__bss_end__@@Base+0xff1a8f1c>
   143a0:	strpl	lr, [fp], #-1023	; 0xfffffc01
   143a4:	andeq	r0, r0, r2
   143a8:	ldrshtne	r3, [sl], #-255	; 0xffffff01
   143ac:	strdeq	r5, [r0], -r3
   143b0:	stcpl	15, cr15, [r9, #1020]	; 0x3fc
   143b4:	smceq	13400	; 0x3458
   143b8:	mov	r2, #100	; 0x64
   143bc:	mov	r3, #0
   143c0:	bl	22170 <flatcc_json_printer_clear@@Base+0x118>
   143c4:	add	r1, r4, r2, lsl #1
   143c8:	mov	r0, sl
   143cc:	sub	r3, pc, #84	; 0x54
   143d0:	ldrd	r2, [r3]
   143d4:	str	r1, [sp, #20]
   143d8:	mov	r1, fp
   143dc:	bl	22170 <flatcc_json_printer_clear@@Base+0x118>
   143e0:	sub	r3, pc, #96	; 0x60
   143e4:	ldrd	r2, [r3]
   143e8:	mov	r9, r0
   143ec:	str	r1, [sp]
   143f0:	cmp	fp, r3
   143f4:	cmpeq	sl, r2
   143f8:	bls	14550 <test_print@@Base+0xccc>
   143fc:	mov	r2, #100	; 0x64
   14400:	mov	r3, #0
   14404:	bl	22170 <flatcc_json_printer_clear@@Base+0x118>
   14408:	add	r0, r4, r2, lsl #1
   1440c:	mov	r1, fp
   14410:	sub	r3, pc, #136	; 0x88
   14414:	ldrd	r2, [r3]
   14418:	str	r0, [sp, #4]
   1441c:	mov	r0, sl
   14420:	bl	22170 <flatcc_json_printer_clear@@Base+0x118>
   14424:	sub	r3, pc, #148	; 0x94
   14428:	ldrd	r2, [r3]
   1442c:	mov	r8, r0
   14430:	mov	r7, r1
   14434:	cmp	fp, r3
   14438:	cmpeq	sl, r2
   1443c:	bhi	144d0 <test_print@@Base+0xc4c>
   14440:	mov	r2, #0
   14444:	add	r3, r6, #17
   14448:	mov	sl, #19
   1444c:	strb	r2, [r6, #19]
   14450:	ldr	r2, [sp, #16]
   14454:	ldrb	r2, [r4, r2, lsl #1]
   14458:	strb	r2, [r6, #17]
   1445c:	ldrb	r2, [r5, #1]
   14460:	ldr	r5, [sp, #20]
   14464:	strb	r2, [r6, #18]
   14468:	ldr	r1, [sp, #12]
   1446c:	sub	r6, r3, #2
   14470:	ldrb	r2, [r1]
   14474:	strb	r2, [r3, #-2]
   14478:	ldrb	r2, [r1, #1]
   1447c:	strb	r2, [r3, #-1]
   14480:	ldr	r1, [sp, #8]
   14484:	sub	r3, r6, #2
   14488:	ldrb	r2, [r1]
   1448c:	strb	r2, [r6, #-2]
   14490:	ldrb	r2, [r1, #1]
   14494:	strb	r2, [r6, #-1]
   14498:	b	142c0 <test_print@@Base+0xa3c>
   1449c:	sub	r3, pc, #260	; 0x104
   144a0:	ldrd	r2, [r3]
   144a4:	mov	r7, r1
   144a8:	mov	r8, r0
   144ac:	str	r5, [sp, #4]
   144b0:	cmp	fp, r3
   144b4:	mov	r3, #0
   144b8:	cmpeq	sl, r2
   144bc:	bhi	14594 <test_print@@Base+0xd10>
   144c0:	mov	sl, #10
   144c4:	add	r6, r6, #10
   144c8:	strb	r3, [r6]
   144cc:	b	14158 <test_print@@Base+0x8d4>
   144d0:	mov	r1, #0
   144d4:	mov	sl, #20
   144d8:	ldr	r2, [sp, #12]
   144dc:	ldr	ip, [sp, #16]
   144e0:	strb	r1, [r6, #20]
   144e4:	ldr	r3, [sp, #20]
   144e8:	ldrb	r1, [r4, ip, lsl #1]
   144ec:	str	r3, [sp, #12]
   144f0:	add	r3, r6, #18
   144f4:	strb	r1, [r6, #18]
   144f8:	ldrb	r1, [r5, #1]
   144fc:	ldr	r5, [sp, #4]
   14500:	strb	r1, [r6, #19]
   14504:	ldrb	r1, [r2]
   14508:	sub	ip, r3, #2
   1450c:	strb	r1, [r3, #-2]
   14510:	ldrb	r2, [r2, #1]
   14514:	strb	r2, [r3, #-1]
   14518:	b	140dc <test_print@@Base+0x858>
   1451c:	sub	r3, pc, #380	; 0x17c
   14520:	ldrd	r2, [r3]
   14524:	cmp	fp, r3
   14528:	mov	r3, #0
   1452c:	cmpeq	sl, r2
   14530:	bls	145f8 <test_print@@Base+0xd74>
   14534:	ldr	r2, [sp, #8]
   14538:	mov	sl, #15
   1453c:	add	r6, r6, #15
   14540:	strb	r3, [r6]
   14544:	stmib	sp, {r2, r5}
   14548:	ldr	r5, [sp, #12]
   1454c:	b	14480 <test_print@@Base+0xbfc>
   14550:	sub	r3, pc, #424	; 0x1a8
   14554:	ldrd	r2, [r3]
   14558:	cmp	fp, r3
   1455c:	cmpeq	sl, r2
   14560:	bls	145bc <test_print@@Base+0xd38>
   14564:	mov	r7, r1
   14568:	mov	r8, r0
   1456c:	ldr	r1, [sp, #8]
   14570:	mov	r3, #0
   14574:	mov	r2, r5
   14578:	ldr	r0, [sp, #12]
   1457c:	mov	sl, #18
   14580:	strb	r3, [r6, #18]
   14584:	add	r3, r6, #18
   14588:	ldr	r5, [sp, #20]
   1458c:	strd	r0, [sp, #8]
   14590:	b	14504 <test_print@@Base+0xc80>
   14594:	mov	r9, sl
   14598:	add	r6, r6, #11
   1459c:	strb	r3, [r6]
   145a0:	mov	sl, #11
   145a4:	str	fp, [sp]
   145a8:	b	142d4 <test_print@@Base+0xa50>
   145ac:	add	r3, r6, #12
   145b0:	mov	sl, #12
   145b4:	strb	r2, [r6, #12]
   145b8:	b	14144 <test_print@@Base+0x8c0>
   145bc:	ldr	r3, [sp, #12]
   145c0:	mov	r2, #0
   145c4:	mov	r9, r8
   145c8:	mov	sl, #17
   145cc:	mov	r8, r0
   145d0:	str	r7, [sp]
   145d4:	str	r5, [sp, #12]
   145d8:	mov	r7, r1
   145dc:	ldr	r5, [sp, #8]
   145e0:	strb	r2, [r6, #17]
   145e4:	str	r3, [sp, #8]
   145e8:	ldr	r3, [sp, #20]
   145ec:	str	r3, [sp, #4]
   145f0:	add	r3, r6, #17
   145f4:	b	14468 <test_print@@Base+0xbe4>
   145f8:	ldr	r1, [sp, #8]
   145fc:	mov	sl, #14
   14600:	add	r6, r6, #14
   14604:	strb	r3, [r6]
   14608:	ldr	r2, [sp, #12]
   1460c:	str	r1, [sp, #4]
   14610:	str	r5, [sp, #12]
   14614:	mov	r5, r2
   14618:	b	1412c <test_print@@Base+0x8a8>
   1461c:	ldrd	r2, [r0, #16]
   14620:	cmp	r3, r2
   14624:	bcc	14654 <test_print@@Base+0xdd0>
   14628:	ldr	r1, [r0]
   1462c:	ldr	r2, [r0, #36]	; 0x24
   14630:	sub	ip, r3, r1
   14634:	mov	r3, r1
   14638:	str	r1, [r0, #20]
   1463c:	cmp	r2, #0
   14640:	moveq	r2, #3
   14644:	streq	r2, [r0, #36]	; 0x24
   14648:	ldr	r2, [r0, #12]
   1464c:	add	r2, r2, ip
   14650:	str	r2, [r0, #12]
   14654:	mov	r2, #0
   14658:	strb	r2, [r3]
   1465c:	bx	lr
   14660:	strd	r4, [sp, #-24]!	; 0xffffffe8
   14664:	mov	r5, r0
   14668:	ldr	r4, [r0, #16]
   1466c:	ldr	r3, [r0, #20]
   14670:	strd	r6, [sp, #8]
   14674:	mov	r6, r1
   14678:	mov	r7, r2
   1467c:	str	r8, [sp, #16]
   14680:	str	lr, [sp, #20]
   14684:	cmp	r3, r4
   14688:	bcc	146a0 <test_print@@Base+0xe1c>
   1468c:	mov	r1, #0
   14690:	ldr	r3, [r0, #44]	; 0x2c
   14694:	blx	r3
   14698:	ldr	r4, [r5, #16]
   1469c:	ldr	r3, [r5, #20]
   146a0:	sub	r4, r4, r3
   146a4:	cmp	r4, r7
   146a8:	bcs	146f4 <test_print@@Base+0xe70>
   146ac:	mov	r2, r4
   146b0:	mov	r1, r6
   146b4:	mov	r0, r3
   146b8:	sub	r7, r7, r4
   146bc:	bl	12428 <memcpy@plt>
   146c0:	ldr	r3, [r5, #20]
   146c4:	add	r6, r6, r4
   146c8:	mov	r1, #0
   146cc:	mov	r0, r5
   146d0:	ldr	r2, [r5, #44]	; 0x2c
   146d4:	add	r4, r3, r4
   146d8:	str	r4, [r5, #20]
   146dc:	blx	r2
   146e0:	ldr	r4, [r5, #16]
   146e4:	ldr	r3, [r5, #20]
   146e8:	sub	r4, r4, r3
   146ec:	cmp	r7, r4
   146f0:	bhi	146ac <test_print@@Base+0xe28>
   146f4:	mov	r1, r6
   146f8:	mov	r0, r3
   146fc:	mov	r2, r7
   14700:	bl	12428 <memcpy@plt>
   14704:	ldr	r3, [r5, #20]
   14708:	ldr	r8, [sp, #16]
   1470c:	add	r7, r3, r7
   14710:	str	r7, [r5, #20]
   14714:	ldrd	r4, [sp]
   14718:	ldrd	r6, [sp, #8]
   1471c:	add	sp, sp, #20
   14720:	pop	{pc}		; (ldr pc, [sp], #4)
   14724:	strd	r4, [sp, #-16]!
   14728:	mov	r4, r0
   1472c:	ldr	r5, [r0, #16]
   14730:	ldr	r3, [r0, #20]
   14734:	str	r6, [sp, #8]
   14738:	mov	r6, r1
   1473c:	str	lr, [sp, #12]
   14740:	cmp	r3, r5
   14744:	bcc	1475c <test_print@@Base+0xed8>
   14748:	mov	r1, #0
   1474c:	ldr	r3, [r0, #44]	; 0x2c
   14750:	blx	r3
   14754:	ldr	r5, [r4, #16]
   14758:	ldr	r3, [r4, #20]
   1475c:	sub	r5, r5, r3
   14760:	cmp	r5, r6
   14764:	bcs	147ac <test_print@@Base+0xf28>
   14768:	mov	r2, r5
   1476c:	mov	r0, r3
   14770:	mov	r1, #32
   14774:	sub	r6, r6, r5
   14778:	bl	124c4 <memset@plt>
   1477c:	ldr	r3, [r4, #20]
   14780:	mov	r1, #0
   14784:	mov	r0, r4
   14788:	ldr	r2, [r4, #44]	; 0x2c
   1478c:	add	r5, r3, r5
   14790:	str	r5, [r4, #20]
   14794:	blx	r2
   14798:	ldr	r5, [r4, #16]
   1479c:	ldr	r3, [r4, #20]
   147a0:	sub	r5, r5, r3
   147a4:	cmp	r6, r5
   147a8:	bhi	14768 <test_print@@Base+0xee4>
   147ac:	mov	r0, r3
   147b0:	mov	r2, r6
   147b4:	mov	r1, #32
   147b8:	bl	124c4 <memset@plt>
   147bc:	ldr	r3, [r4, #20]
   147c0:	add	r6, r3, r6
   147c4:	str	r6, [r4, #20]
   147c8:	ldrd	r4, [sp]
   147cc:	ldr	r6, [sp, #8]
   147d0:	add	sp, sp, #12
   147d4:	pop	{pc}		; (ldr pc, [sp], #4)
   147d8:	strd	r4, [sp, #-16]!
   147dc:	ldr	ip, [r0, #16]
   147e0:	ldr	r2, [r0, #20]
   147e4:	ldr	r5, [r0, #32]
   147e8:	str	r6, [sp, #8]
   147ec:	str	lr, [sp, #12]
   147f0:	ldrb	r1, [r0, #25]
   147f4:	mul	r5, r5, r1
   147f8:	add	r1, r2, r5
   147fc:	cmp	ip, r1
   14800:	bcs	1481c <test_print@@Base+0xf98>
   14804:	mov	r1, r5
   14808:	ldrd	r4, [sp]
   1480c:	ldr	r6, [sp, #8]
   14810:	ldr	lr, [sp, #12]
   14814:	add	sp, sp, #16
   14818:	b	14724 <test_print@@Base+0xea0>
   1481c:	mov	r4, r0
   14820:	mov	r1, #32
   14824:	mov	r0, r2
   14828:	mov	r2, r5
   1482c:	bl	124c4 <memset@plt>
   14830:	ldr	r3, [r4, #20]
   14834:	ldr	r6, [sp, #8]
   14838:	add	r5, r3, r5
   1483c:	str	r5, [r4, #20]
   14840:	ldrd	r4, [sp]
   14844:	add	sp, sp, #12
   14848:	pop	{pc}		; (ldr pc, [sp], #4)
   1484c:	cmp	r1, #0
   14850:	strd	r4, [sp, #-16]!
   14854:	mov	r4, r0
   14858:	ldr	r0, [r0]
   1485c:	ldr	ip, [r4, #20]
   14860:	ldr	r3, [r4, #40]	; 0x28
   14864:	str	r6, [sp, #8]
   14868:	str	lr, [sp, #12]
   1486c:	bne	1487c <test_print@@Base+0xff8>
   14870:	ldr	r5, [r4, #16]
   14874:	cmp	r5, ip
   14878:	bls	148b8 <test_print@@Base+0x1034>
   1487c:	sub	r5, ip, r0
   14880:	mov	r2, #1
   14884:	mov	r1, r5
   14888:	bl	12464 <fwrite@plt>
   1488c:	ldr	r3, [r4]
   14890:	ldr	ip, [r4, #12]
   14894:	str	r3, [r4, #20]
   14898:	add	ip, ip, r5
   1489c:	str	ip, [r4, #12]
   148a0:	mov	r2, #0
   148a4:	strb	r2, [r3]
   148a8:	ldrd	r4, [sp]
   148ac:	ldr	r6, [sp, #8]
   148b0:	add	sp, sp, #12
   148b4:	pop	{pc}		; (ldr pc, [sp], #4)
   148b8:	mov	r2, #1
   148bc:	ldr	r1, [r4, #8]
   148c0:	sub	r5, ip, r5
   148c4:	bl	12464 <fwrite@plt>
   148c8:	ldr	r3, [r4]
   148cc:	mov	r2, r5
   148d0:	ldr	r1, [r4, #8]
   148d4:	mov	r0, r3
   148d8:	add	r1, r3, r1
   148dc:	bl	12428 <memcpy@plt>
   148e0:	ldr	r3, [r4]
   148e4:	ldr	r1, [r4, #8]
   148e8:	ldr	r2, [r4, #12]
   148ec:	add	r3, r3, r5
   148f0:	str	r3, [r4, #20]
   148f4:	add	r2, r2, r1
   148f8:	str	r2, [r4, #12]
   148fc:	b	148a0 <test_print@@Base+0x101c>
   14900:	ldr	r3, [r0, #20]
   14904:	mov	r2, #0
   14908:	strd	r4, [sp, #-16]!
   1490c:	ldr	r5, [r0]
   14910:	str	r6, [sp, #8]
   14914:	str	lr, [sp, #12]
   14918:	strb	r2, [r3]
   1491c:	ldr	r2, [r0, #16]
   14920:	ldr	r1, [r0, #20]
   14924:	cmp	r1, r2
   14928:	bcs	1493c <test_print@@Base+0x10b8>
   1492c:	ldrd	r4, [sp]
   14930:	ldr	r6, [sp, #8]
   14934:	add	sp, sp, #12
   14938:	pop	{pc}		; (ldr pc, [sp], #4)
   1493c:	mov	r4, r0
   14940:	ldrd	r0, [r0]
   14944:	sub	r5, r3, r5
   14948:	lsl	r1, r1, #1
   1494c:	bl	12458 <realloc@plt>
   14950:	cmp	r0, #0
   14954:	beq	14994 <test_print@@Base+0x1110>
   14958:	ldr	r3, [r4, #4]
   1495c:	add	r2, r0, r5
   14960:	str	r2, [r4, #20]
   14964:	lsl	r3, r3, #1
   14968:	sub	r1, r3, #64	; 0x40
   1496c:	stm	r4, {r0, r3}
   14970:	add	r0, r0, r1
   14974:	str	r1, [r4, #8]
   14978:	str	r0, [r4, #16]
   1497c:	mov	r3, #0
   14980:	strb	r3, [r2]
   14984:	ldrd	r4, [sp]
   14988:	ldr	r6, [sp, #8]
   1498c:	add	sp, sp, #12
   14990:	pop	{pc}		; (ldr pc, [sp], #4)
   14994:	ldr	r2, [r4]
   14998:	ldr	r3, [r4, #36]	; 0x24
   1499c:	str	r2, [r4, #20]
   149a0:	cmp	r3, #0
   149a4:	moveq	r3, #3
   149a8:	streq	r3, [r4, #36]	; 0x24
   149ac:	ldr	r3, [r4, #12]
   149b0:	add	r3, r3, r5
   149b4:	str	r3, [r4, #12]
   149b8:	b	1497c <test_print@@Base+0x10f8>
   149bc:	cmp	r0, #99	; 0x63
   149c0:	mov	r3, r0
   149c4:	bhi	149e8 <test_print@@Base+0x1164>
   149c8:	cmp	r0, #9
   149cc:	bhi	14a3c <test_print@@Base+0x11b8>
   149d0:	add	r3, r0, #48	; 0x30
   149d4:	mov	r2, #0
   149d8:	mov	r0, #1
   149dc:	strb	r3, [r1]
   149e0:	strb	r2, [r1, #1]
   149e4:	bx	lr
   149e8:	movw	r2, #34079	; 0x851f
   149ec:	movt	r2, #20971	; 0x51eb
   149f0:	push	{lr}		; (str lr, [sp, #-4]!)
   149f4:	mov	lr, #100	; 0x64
   149f8:	mov	r0, #0
   149fc:	umull	ip, r2, r2, r3
   14a00:	movw	ip, #10976	; 0x2ae0
   14a04:	movt	ip, #2
   14a08:	strb	r0, [r1, #3]
   14a0c:	mov	r0, #3
   14a10:	lsr	r2, r2, #5
   14a14:	mls	r3, lr, r2, r3
   14a18:	add	r2, r2, #48	; 0x30
   14a1c:	uxtb	r3, r3
   14a20:	ldrb	lr, [ip, r3, lsl #1]
   14a24:	add	ip, ip, r3, lsl #1
   14a28:	strb	lr, [r1, #1]
   14a2c:	ldrb	r3, [ip, #1]
   14a30:	strb	r2, [r1]
   14a34:	strb	r3, [r1, #2]
   14a38:	pop	{pc}		; (ldr pc, [sp], #4)
   14a3c:	mov	r0, #0
   14a40:	sxth	r3, r3
   14a44:	movw	r2, #10976	; 0x2ae0
   14a48:	movt	r2, #2
   14a4c:	add	ip, r2, r3, lsl #1
   14a50:	strb	r0, [r1, #2]
   14a54:	mov	r0, #2
   14a58:	ldrb	r3, [r2, r3, lsl #1]
   14a5c:	strb	r3, [r1]
   14a60:	ldrb	r3, [ip, #1]
   14a64:	strb	r3, [r1, #1]
   14a68:	bx	lr
   14a6c:	movw	r1, #12848	; 0x3230
   14a70:	movt	r1, #2
   14a74:	ldr	r3, [pc, #20]	; 14a90 <test_print@@Base+0x120c>
   14a78:	movw	r0, #12936	; 0x3288
   14a7c:	movt	r0, #2
   14a80:	str	r4, [sp, #-8]!
   14a84:	mov	r2, #260	; 0x104
   14a88:	str	lr, [sp, #4]
   14a8c:	bl	1250c <__assert_fail@plt>
   14a90:	andeq	r2, r2, ip, lsr #23
   14a94:	movw	r1, #12848	; 0x3230
   14a98:	movt	r1, #2
   14a9c:	ldr	r3, [pc, #20]	; 14ab8 <test_print@@Base+0x1234>
   14aa0:	movw	r0, #12948	; 0x3294
   14aa4:	movt	r0, #2
   14aa8:	str	r4, [sp, #-8]!
   14aac:	mov	r2, #239	; 0xef
   14ab0:	str	lr, [sp, #4]
   14ab4:	bl	1250c <__assert_fail@plt>
   14ab8:	andeq	r2, r2, r4, asr #23
   14abc:	ldr	r3, [r0, #20]
   14ac0:	strd	r4, [sp, #-32]!	; 0xffffffe0
   14ac4:	strd	r6, [sp, #8]
   14ac8:	mov	r6, r0
   14acc:	strd	r8, [sp, #16]
   14ad0:	mov	r8, r2
   14ad4:	mov	r9, #92	; 0x5c
   14ad8:	mov	r2, #34	; 0x22
   14adc:	str	sl, [sp, #24]
   14ae0:	mov	sl, #102	; 0x66
   14ae4:	add	r0, r3, #1
   14ae8:	str	lr, [sp, #28]
   14aec:	str	r0, [r6, #20]
   14af0:	strb	r2, [r3]
   14af4:	ldrb	r4, [r1]
   14af8:	mov	r5, r1
   14afc:	cmp	r4, #34	; 0x22
   14b00:	cmpne	r4, #31
   14b04:	movhi	r7, #1
   14b08:	movls	r7, #0
   14b0c:	bls	14b3c <test_print@@Base+0x12b8>
   14b10:	cmp	r4, #92	; 0x5c
   14b14:	bne	14b24 <test_print@@Base+0x12a0>
   14b18:	b	14d04 <test_print@@Base+0x1480>
   14b1c:	cmp	r4, #92	; 0x5c
   14b20:	beq	14b34 <test_print@@Base+0x12b0>
   14b24:	ldrb	r4, [r5, #1]!
   14b28:	cmp	r4, #34	; 0x22
   14b2c:	cmpne	r4, #31
   14b30:	bhi	14b1c <test_print@@Base+0x1298>
   14b34:	sub	r7, r5, r1
   14b38:	sub	r8, r8, r7
   14b3c:	ldr	r2, [r6, #16]
   14b40:	ldr	r0, [r6, #20]
   14b44:	add	r3, r0, r7
   14b48:	cmp	r2, r3
   14b4c:	mov	r2, r7
   14b50:	bhi	14c54 <test_print@@Base+0x13d0>
   14b54:	mov	r0, r6
   14b58:	bl	14660 <test_print@@Base+0xddc>
   14b5c:	ldr	r7, [r6, #20]
   14b60:	cmp	r8, #0
   14b64:	add	r3, r7, #1
   14b68:	beq	14c70 <test_print@@Base+0x13ec>
   14b6c:	cmp	r4, #12
   14b70:	str	r3, [r6, #20]
   14b74:	strb	r9, [r7]
   14b78:	beq	14cc0 <test_print@@Base+0x143c>
   14b7c:	bhi	14c24 <test_print@@Base+0x13a0>
   14b80:	cmp	r4, #9
   14b84:	beq	14cec <test_print@@Base+0x1468>
   14b88:	cmp	r4, #10
   14b8c:	beq	14cd4 <test_print@@Base+0x1450>
   14b90:	cmp	r4, #8
   14b94:	beq	14ca8 <test_print@@Base+0x1424>
   14b98:	ldr	r2, [r6, #20]
   14b9c:	mov	r1, #117	; 0x75
   14ba0:	mov	r0, #48	; 0x30
   14ba4:	lsr	r3, r4, #4
   14ba8:	and	r4, r4, #15
   14bac:	cmp	r3, #10
   14bb0:	add	ip, r2, #1
   14bb4:	str	ip, [r6, #20]
   14bb8:	strb	r1, [r2]
   14bbc:	movcc	r2, r0
   14bc0:	movcs	r2, #87	; 0x57
   14bc4:	ldr	r1, [r6, #20]
   14bc8:	cmp	r4, #10
   14bcc:	add	r2, r2, r3
   14bd0:	movcc	r3, r0
   14bd4:	movcs	r3, #87	; 0x57
   14bd8:	add	r3, r3, r4
   14bdc:	add	ip, r1, #1
   14be0:	str	ip, [r6, #20]
   14be4:	strb	r0, [r1]
   14be8:	ldr	r1, [r6, #20]
   14bec:	add	ip, r1, #1
   14bf0:	str	ip, [r6, #20]
   14bf4:	strb	r0, [r1]
   14bf8:	ldr	r1, [r6, #20]
   14bfc:	add	r0, r1, #1
   14c00:	str	r0, [r6, #20]
   14c04:	strb	r2, [r1]
   14c08:	ldr	r2, [r6, #20]
   14c0c:	add	r1, r2, #1
   14c10:	str	r1, [r6, #20]
   14c14:	strb	r3, [r2]
   14c18:	sub	r8, r8, #1
   14c1c:	add	r1, r5, #1
   14c20:	b	14af4 <test_print@@Base+0x1270>
   14c24:	cmp	r4, #34	; 0x22
   14c28:	beq	14c94 <test_print@@Base+0x1410>
   14c2c:	cmp	r4, #92	; 0x5c
   14c30:	beq	14c94 <test_print@@Base+0x1410>
   14c34:	cmp	r4, #13
   14c38:	bne	14b98 <test_print@@Base+0x1314>
   14c3c:	ldr	r3, [r6, #20]
   14c40:	mov	r2, #114	; 0x72
   14c44:	add	r1, r3, #1
   14c48:	str	r1, [r6, #20]
   14c4c:	strb	r2, [r3]
   14c50:	b	14c18 <test_print@@Base+0x1394>
   14c54:	bl	12428 <memcpy@plt>
   14c58:	ldr	r3, [r6, #20]
   14c5c:	cmp	r8, #0
   14c60:	add	r7, r3, r7
   14c64:	add	r3, r7, #1
   14c68:	str	r7, [r6, #20]
   14c6c:	bne	14b6c <test_print@@Base+0x12e8>
   14c70:	mov	r2, #34	; 0x22
   14c74:	str	r3, [r6, #20]
   14c78:	strb	r2, [r7]
   14c7c:	ldrd	r4, [sp]
   14c80:	ldrd	r6, [sp, #8]
   14c84:	ldrd	r8, [sp, #16]
   14c88:	ldr	sl, [sp, #24]
   14c8c:	add	sp, sp, #28
   14c90:	pop	{pc}		; (ldr pc, [sp], #4)
   14c94:	ldr	r3, [r6, #20]
   14c98:	add	r2, r3, #1
   14c9c:	str	r2, [r6, #20]
   14ca0:	strb	r4, [r3]
   14ca4:	b	14c18 <test_print@@Base+0x1394>
   14ca8:	ldr	r3, [r6, #20]
   14cac:	mov	r2, #98	; 0x62
   14cb0:	add	r1, r3, #1
   14cb4:	str	r1, [r6, #20]
   14cb8:	strb	r2, [r3]
   14cbc:	b	14c18 <test_print@@Base+0x1394>
   14cc0:	ldr	r3, [r6, #20]
   14cc4:	add	r2, r3, #1
   14cc8:	str	r2, [r6, #20]
   14ccc:	strb	sl, [r3]
   14cd0:	b	14c18 <test_print@@Base+0x1394>
   14cd4:	ldr	r3, [r6, #20]
   14cd8:	mov	r2, #110	; 0x6e
   14cdc:	add	r1, r3, #1
   14ce0:	str	r1, [r6, #20]
   14ce4:	strb	r2, [r3]
   14ce8:	b	14c18 <test_print@@Base+0x1394>
   14cec:	ldr	r3, [r6, #20]
   14cf0:	mov	r2, #116	; 0x74
   14cf4:	add	r1, r3, #1
   14cf8:	str	r1, [r6, #20]
   14cfc:	strb	r2, [r3]
   14d00:	b	14c18 <test_print@@Base+0x1394>
   14d04:	mov	r7, #0
   14d08:	b	14b3c <test_print@@Base+0x12b8>
   14d0c:	strd	r4, [sp, #-24]!	; 0xffffffe8
   14d10:	mov	r5, r2
   14d14:	mov	r4, r0
   14d18:	ldr	r2, [r0, #20]
   14d1c:	strd	r6, [sp, #8]
   14d20:	mov	r6, r1
   14d24:	str	r8, [sp, #16]
   14d28:	str	lr, [sp, #20]
   14d2c:	ldrb	r1, [r0, #25]
   14d30:	cmp	r1, #0
   14d34:	bne	14e10 <test_print@@Base+0x158c>
   14d38:	ldr	r3, [r0, #16]
   14d3c:	cmp	r3, r2
   14d40:	bls	14de8 <test_print@@Base+0x1564>
   14d44:	mov	r3, #34	; 0x22
   14d48:	strb	r3, [r2]
   14d4c:	ldrb	r3, [r4, #26]
   14d50:	ldr	r2, [r4, #16]
   14d54:	ldr	r0, [r4, #20]
   14d58:	cmp	r3, #0
   14d5c:	addeq	r0, r0, #1
   14d60:	add	r3, r0, r5
   14d64:	cmp	r2, r3
   14d68:	str	r0, [r4, #20]
   14d6c:	bls	14df8 <test_print@@Base+0x1574>
   14d70:	mov	r2, r5
   14d74:	mov	r1, r6
   14d78:	bl	12428 <memcpy@plt>
   14d7c:	ldr	r2, [r4, #20]
   14d80:	add	r2, r2, r5
   14d84:	str	r2, [r4, #20]
   14d88:	mov	r3, #34	; 0x22
   14d8c:	mov	ip, #58	; 0x3a
   14d90:	mov	r0, #32
   14d94:	strb	r3, [r2]
   14d98:	ldrb	r3, [r4, #26]
   14d9c:	ldr	r1, [r4, #20]
   14da0:	clz	r3, r3
   14da4:	lsr	r3, r3, #5
   14da8:	add	r2, r1, r3
   14dac:	add	r2, r2, #1
   14db0:	str	r2, [r4, #20]
   14db4:	strb	ip, [r1, r3]
   14db8:	ldr	r3, [r4, #20]
   14dbc:	strb	r0, [r3]
   14dc0:	ldrb	r2, [r4, #25]
   14dc4:	ldr	r3, [r4, #20]
   14dc8:	ldrd	r6, [sp, #8]
   14dcc:	ldr	r8, [sp, #16]
   14dd0:	cmp	r2, #0
   14dd4:	addne	r3, r3, #1
   14dd8:	str	r3, [r4, #20]
   14ddc:	ldrd	r4, [sp]
   14de0:	add	sp, sp, #20
   14de4:	pop	{pc}		; (ldr pc, [sp], #4)
   14de8:	ldr	r3, [r0, #44]	; 0x2c
   14dec:	blx	r3
   14df0:	ldr	r2, [r4, #20]
   14df4:	b	14d44 <test_print@@Base+0x14c0>
   14df8:	mov	r2, r5
   14dfc:	mov	r1, r6
   14e00:	mov	r0, r4
   14e04:	bl	14660 <test_print@@Base+0xddc>
   14e08:	ldr	r2, [r4, #20]
   14e0c:	b	14d88 <test_print@@Base+0x1504>
   14e10:	add	r1, r2, #1
   14e14:	mov	r3, #10
   14e18:	str	r1, [r0, #20]
   14e1c:	strb	r3, [r2]
   14e20:	ldrb	r7, [r0, #25]
   14e24:	ldr	r1, [r0, #16]
   14e28:	ldr	r2, [r0, #32]
   14e2c:	ldr	r3, [r0, #20]
   14e30:	mul	r7, r2, r7
   14e34:	add	r2, r3, r7
   14e38:	cmp	r1, r2
   14e3c:	bcs	14e50 <test_print@@Base+0x15cc>
   14e40:	mov	r1, r7
   14e44:	bl	14724 <test_print@@Base+0xea0>
   14e48:	ldr	r2, [r4, #20]
   14e4c:	b	14d44 <test_print@@Base+0x14c0>
   14e50:	mov	r2, r7
   14e54:	mov	r0, r3
   14e58:	mov	r1, #32
   14e5c:	bl	124c4 <memset@plt>
   14e60:	ldr	r2, [r4, #20]
   14e64:	add	r2, r2, r7
   14e68:	str	r2, [r4, #20]
   14e6c:	b	14d44 <test_print@@Base+0x14c0>
   14e70:	subs	r1, r0, #0
   14e74:	strd	r4, [sp, #-36]!	; 0xffffffdc
   14e78:	strd	r6, [sp, #8]
   14e7c:	strd	r8, [sp, #16]
   14e80:	strd	sl, [sp, #24]
   14e84:	str	lr, [sp, #32]
   14e88:	sub	sp, sp, #332	; 0x14c
   14e8c:	vstr	d0, [sp, #24]
   14e90:	str	r1, [sp, #176]	; 0xb0
   14e94:	beq	15f50 <test_print@@Base+0x26cc>
   14e98:	vmov	r4, r5, d0
   14e9c:	mov	r7, #0
   14ea0:	movt	r7, #65504	; 0xffe0
   14ea4:	mov	r6, #0
   14ea8:	adds	r2, r4, r4
   14eac:	adc	r3, r5, r5
   14eb0:	cmp	r3, r7
   14eb4:	cmpeq	r2, r6
   14eb8:	bhi	15958 <test_print@@Base+0x20d4>
   14ebc:	cmp	r4, #0
   14ec0:	sbcs	r3, r5, #0
   14ec4:	movge	r3, r1
   14ec8:	strge	r3, [sp, #44]	; 0x2c
   14ecc:	blt	158f0 <test_print@@Base+0x206c>
   14ed0:	orrs	r3, r4, r5
   14ed4:	beq	1591c <test_print@@Base+0x2098>
   14ed8:	mov	r3, #0
   14edc:	movt	r3, #32752	; 0x7ff0
   14ee0:	mov	r2, #0
   14ee4:	cmp	r5, r3
   14ee8:	cmpeq	r4, r2
   14eec:	beq	15974 <test_print@@Base+0x20f0>
   14ef0:	ldrd	r2, [sp, #24]
   14ef4:	mov	r1, #0
   14ef8:	mov	r0, #0
   14efc:	strd	r0, [sp, #48]	; 0x30
   14f00:	mov	r6, r3
   14f04:	str	r2, [sp, #80]	; 0x50
   14f08:	bic	r1, r6, #-2147483648	; 0x80000000
   14f0c:	lsr	r2, r1, #20
   14f10:	lsl	r3, r2, #20
   14f14:	str	r3, [sp, #52]	; 0x34
   14f18:	ubfx	r3, r6, #0, #20
   14f1c:	str	r3, [sp, #84]	; 0x54
   14f20:	ldrd	r2, [sp, #48]	; 0x30
   14f24:	orrs	r3, r2, r3
   14f28:	beq	15990 <test_print@@Base+0x210c>
   14f2c:	ldrd	r2, [sp, #80]	; 0x50
   14f30:	ubfx	r6, r6, #20, #11
   14f34:	sub	r6, r6, #1072	; 0x430
   14f38:	sub	lr, r6, #3
   14f3c:	sub	r6, r6, #4
   14f40:	adds	r0, r2, #0
   14f44:	adc	r5, r3, #1048576	; 0x100000
   14f48:	str	r0, [sp, #16]
   14f4c:	mov	r1, #0
   14f50:	movt	r1, #65472	; 0xffc0
   14f54:	str	r5, [sp, #20]
   14f58:	sub	r2, lr, #10
   14f5c:	mov	ip, #0
   14f60:	ldrd	r8, [sp, #16]
   14f64:	strd	sl, [sp, #160]	; 0xa0
   14f68:	mov	fp, r5
   14f6c:	lsl	r3, r9, #10
   14f70:	mov	r7, r2
   14f74:	mov	r4, ip
   14f78:	lsl	r2, r8, #10
   14f7c:	orr	r3, r3, r8, lsr #22
   14f80:	mov	r8, r2
   14f84:	sub	r2, r7, #10
   14f88:	and	r5, r3, r1
   14f8c:	mov	r9, r3
   14f90:	orrs	r3, r4, r5
   14f94:	beq	14f6c <test_print@@Base+0x16e8>
   14f98:	cmp	r8, #0
   14f9c:	mov	r5, fp
   14fa0:	strd	r8, [sp, #16]
   14fa4:	sbcs	r3, r9, #0
   14fa8:	str	r7, [sp, #120]	; 0x78
   14fac:	blt	14fd4 <test_print@@Base+0x1750>
   14fb0:	mov	r3, r7
   14fb4:	adds	r8, r8, r8
   14fb8:	sub	r3, r3, #1
   14fbc:	adc	r9, r9, r9
   14fc0:	cmp	r8, #0
   14fc4:	sbcs	r2, r9, #0
   14fc8:	bge	14fb4 <test_print@@Base+0x1730>
   14fcc:	strd	r8, [sp, #16]
   14fd0:	str	r3, [sp, #120]	; 0x78
   14fd4:	adds	r2, r0, r0
   14fd8:	mov	r7, #0
   14fdc:	str	r6, [sp, #160]	; 0xa0
   14fe0:	adc	r3, r5, r5
   14fe4:	adds	sl, r2, #1
   14fe8:	mov	r4, #0
   14fec:	movt	r4, #65472	; 0xffc0
   14ff0:	sub	r1, r6, #10
   14ff4:	adc	fp, r3, #0
   14ff8:	str	r3, [sp, #180]	; 0xb4
   14ffc:	mov	r8, r7
   15000:	mov	r9, r2
   15004:	lsl	r3, fp, #10
   15008:	mov	r6, r8
   1500c:	mov	r2, r1
   15010:	lsl	ip, sl, #10
   15014:	sub	r1, r1, #10
   15018:	orr	r3, r3, sl, lsr #22
   1501c:	mov	sl, ip
   15020:	and	r7, r3, r4
   15024:	mov	fp, r3
   15028:	orrs	r3, r6, r7
   1502c:	beq	15004 <test_print@@Base+0x1780>
   15030:	mov	r3, r2
   15034:	cmp	ip, #0
   15038:	ldr	r6, [sp, #160]	; 0xa0
   1503c:	sbcs	r1, fp, #0
   15040:	mov	r2, r9
   15044:	str	r3, [sp, #168]	; 0xa8
   15048:	blt	15078 <test_print@@Base+0x17f4>
   1504c:	ldrd	r8, [sp, #16]
   15050:	sub	r3, r3, #1
   15054:	adds	sl, sl, sl
   15058:	mov	r1, r3
   1505c:	adc	fp, fp, fp
   15060:	cmp	sl, #0
   15064:	sbcs	ip, fp, #0
   15068:	sub	r3, r3, #1
   1506c:	bge	15054 <test_print@@Base+0x17d0>
   15070:	strd	r8, [sp, #16]
   15074:	str	r1, [sp, #168]	; 0xa8
   15078:	vldr	d7, [sp, #24]
   1507c:	vcmpe.f64	d7, #0.0
   15080:	vmrs	APSR_nzcv, fpscr
   15084:	ble	15f6c <test_print@@Base+0x26e8>
   15088:	vmov.f64	d6, d7
   1508c:	vldr	d7, [pc, #924]	; 15430 <test_print@@Base+0x1bac>
   15090:	vcmpe.f64	d6, d7
   15094:	vmrs	APSR_nzcv, fpscr
   15098:	bhi	15f6c <test_print@@Base+0x26e8>
   1509c:	ldrd	r8, [sp, #80]	; 0x50
   150a0:	mov	r3, r8
   150a4:	orrs	r3, r3, r9
   150a8:	ldrd	r8, [sp, #48]	; 0x30
   150ac:	moveq	r3, #1
   150b0:	movne	r3, #0
   150b4:	mov	r1, r8
   150b8:	orrs	r1, r1, r9
   150bc:	moveq	r3, #0
   150c0:	cmp	r3, #0
   150c4:	bne	15c9c <test_print@@Base+0x2418>
   150c8:	ldr	r3, [sp, #180]	; 0xb4
   150cc:	subs	r2, r2, #1
   150d0:	sbc	lr, r3, #0
   150d4:	ldr	r1, [sp, #168]	; 0xa8
   150d8:	mvn	r3, #60	; 0x3c
   150dc:	vldr	d6, [pc, #852]	; 15438 <test_print@@Base+0x1bb4>
   150e0:	sub	r6, r6, r1
   150e4:	ldr	r1, [sp, #120]	; 0x78
   150e8:	lsl	r0, r2, r6
   150ec:	str	r0, [sp, #48]	; 0x30
   150f0:	sub	r3, r3, r1
   150f4:	sub	r1, r6, #32
   150f8:	vmov	s14, r3
   150fc:	lsl	r3, lr, r6
   15100:	orr	r1, r3, r2, lsl r1
   15104:	rsb	r3, r6, #32
   15108:	orr	r3, r1, r2, lsr r3
   1510c:	str	r3, [sp, #80]	; 0x50
   15110:	vcvt.f64.s32	d7, s14
   15114:	vmul.f64	d7, d7, d6
   15118:	vcmpe.f64	d7, #0.0
   1511c:	vcvt.s32.f64	s13, d7
   15120:	vmrs	APSR_nzcv, fpscr
   15124:	bmi	15148 <test_print@@Base+0x18c4>
   15128:	vcvt.f64.s32	d5, s13
   1512c:	vsub.f64	d7, d7, d5
   15130:	vcmp.f64	d7, #0.0
   15134:	vmrs	APSR_nzcv, fpscr
   15138:	beq	15148 <test_print@@Base+0x18c4>
   1513c:	vmov	r3, s13
   15140:	add	r3, r3, #1
   15144:	vmov	s13, r3
   15148:	vmov	r3, s13
   1514c:	movw	lr, #10976	; 0x2ae0
   15150:	movt	lr, #2
   15154:	ldrd	r6, [sp, #16]
   15158:	add	r2, lr, #288	; 0x120
   1515c:	str	lr, [sp, #180]	; 0xb4
   15160:	add	lr, lr, #280	; 0x118
   15164:	mov	r4, r7
   15168:	add	ip, r3, #344	; 0x158
   1516c:	mov	r3, #0
   15170:	add	r0, ip, #10
   15174:	add	ip, ip, #3
   15178:	cmp	ip, #0
   1517c:	str	r3, [sp, #196]	; 0xc4
   15180:	movlt	ip, r0
   15184:	asr	ip, ip, #3
   15188:	add	ip, ip, #1
   1518c:	lsl	r0, ip, #4
   15190:	add	r2, r2, r0
   15194:	add	ip, lr, r0
   15198:	ldmdb	r2, {r0, r2}
   1519c:	ldrsh	r8, [ip, #8]
   151a0:	umull	r4, r5, r4, r0
   151a4:	umull	r6, r7, r6, r0
   151a8:	strd	r6, [sp, #160]	; 0xa0
   151ac:	mov	r6, r4
   151b0:	ldr	r4, [sp, #16]
   151b4:	str	r5, [sp, #192]	; 0xc0
   151b8:	ldr	r7, [sp, #164]	; 0xa4
   151bc:	umull	r4, r5, r4, r2
   151c0:	adds	r6, r7, r6
   151c4:	mov	r7, r4
   151c8:	mov	r4, r5
   151cc:	ldr	r5, [sp, #192]	; 0xc0
   151d0:	adc	r1, r3, r3
   151d4:	adds	r6, r6, #-2147483648	; 0x80000000
   151d8:	adc	r1, r1, r3
   151dc:	adds	r6, r6, r7
   151e0:	adc	r1, r1, r3
   151e4:	adds	r4, r5, r4
   151e8:	adc	lr, r3, r3
   151ec:	str	r4, [sp, #152]	; 0x98
   151f0:	str	lr, [sp, #156]	; 0x9c
   151f4:	ldr	lr, [sp, #80]	; 0x50
   151f8:	ldrd	r4, [sp, #152]	; 0x98
   151fc:	umull	r6, r7, r0, lr
   15200:	mov	lr, r1
   15204:	ldrsh	r1, [ip, #10]
   15208:	ldr	ip, [sp, #120]	; 0x78
   1520c:	strd	r6, [sp, #160]	; 0xa0
   15210:	str	r1, [sp, #192]	; 0xc0
   15214:	ldr	r1, [sp, #48]	; 0x30
   15218:	add	r9, r8, ip
   1521c:	umull	r6, r7, r0, r1
   15220:	ldr	r1, [sp, #20]
   15224:	mov	ip, r7
   15228:	ldr	r7, [sp, #48]	; 0x30
   1522c:	umlal	r4, r5, r2, r1
   15230:	umull	r6, r7, r2, r7
   15234:	strd	r6, [sp, #16]
   15238:	adds	r7, lr, r4
   1523c:	ldr	lr, [sp, #80]	; 0x50
   15240:	adc	r1, r3, r5
   15244:	str	r7, [sp, #112]	; 0x70
   15248:	ldrd	r6, [sp, #160]	; 0xa0
   1524c:	str	r1, [sp, #116]	; 0x74
   15250:	umull	r4, r5, r2, lr
   15254:	adds	ip, ip, r6
   15258:	mov	lr, r7
   1525c:	ldrd	r6, [sp, #16]
   15260:	adc	r1, r3, r3
   15264:	adds	ip, ip, #-2147483648	; 0x80000000
   15268:	adc	r8, r1, r3
   1526c:	adds	ip, ip, r6
   15270:	str	r7, [sp, #48]	; 0x30
   15274:	umull	r6, r7, r0, fp
   15278:	umull	r0, r1, r0, sl
   1527c:	adc	r8, r8, r3
   15280:	subs	ip, r4, #1
   15284:	strd	r0, [sp, #16]
   15288:	sbc	r0, r5, #0
   1528c:	adds	lr, ip, lr
   15290:	ldr	r1, [sp, #48]	; 0x30
   15294:	adc	r0, r0, r3
   15298:	umull	r4, r5, r2, sl
   1529c:	umull	sl, fp, r2, fp
   152a0:	adds	lr, lr, r1
   152a4:	ldr	r1, [sp, #20]
   152a8:	adc	r0, r0, r3
   152ac:	adds	ip, r8, lr
   152b0:	adc	r2, r3, r0
   152b4:	str	ip, [sp, #104]	; 0x68
   152b8:	str	r2, [sp, #108]	; 0x6c
   152bc:	adds	r1, r1, r6
   152c0:	adc	r2, r3, r3
   152c4:	adds	r1, r1, #-2147483648	; 0x80000000
   152c8:	adc	r2, r2, r3
   152cc:	adds	r1, r1, r4
   152d0:	adc	r2, r2, r3
   152d4:	adds	ip, sl, #1
   152d8:	mov	r4, r5
   152dc:	adc	r5, fp, r3
   152e0:	adds	r1, ip, r7
   152e4:	adc	lr, r5, r3
   152e8:	adds	r1, r1, r4
   152ec:	adc	lr, lr, r3
   152f0:	adds	r2, r2, r1
   152f4:	ldrd	r0, [sp, #104]	; 0x68
   152f8:	str	r2, [sp, #32]
   152fc:	adc	r2, r3, lr
   15300:	str	r2, [sp, #36]	; 0x24
   15304:	ldrd	r4, [sp, #32]
   15308:	subs	r2, r4, r0
   1530c:	str	r2, [sp, #56]	; 0x38
   15310:	sbc	r2, r5, r1
   15314:	cmp	r1, r5
   15318:	cmpeq	r0, r4
   1531c:	str	r2, [sp, #60]	; 0x3c
   15320:	bhi	15f4c <test_print@@Base+0x26c8>
   15324:	add	r1, r9, #129	; 0x81
   15328:	movw	r0, #1233	; 0x4d1
   1532c:	ldrd	r4, [sp, #32]
   15330:	mvn	r2, #63	; 0x3f
   15334:	mov	r3, #1
   15338:	sub	r9, r2, r9
   1533c:	mul	r1, r0, r1
   15340:	sub	r6, r9, #32
   15344:	rsb	r8, r9, #32
   15348:	lsl	ip, r3, r9
   1534c:	lsl	r0, r3, r6
   15350:	asr	lr, r1, #12
   15354:	orr	r1, r0, r3, lsr r8
   15358:	lsr	r2, r4, r9
   1535c:	add	r0, lr, r3
   15360:	str	r6, [sp, #48]	; 0x30
   15364:	orr	r2, r2, r5, lsl r8
   15368:	str	ip, [sp, #80]	; 0x50
   1536c:	str	r1, [sp, #84]	; 0x54
   15370:	ldr	r1, [sp, #180]	; 0xb4
   15374:	orr	r2, r2, r5, lsr r6
   15378:	str	lr, [sp, #16]
   1537c:	ldrd	r6, [sp, #80]	; 0x50
   15380:	add	r1, r1, r0, lsl #2
   15384:	ldr	ip, [r1, #1672]	; 0x688
   15388:	subs	r3, r6, #1
   1538c:	sbc	r1, r7, #0
   15390:	and	sl, r4, r3
   15394:	and	fp, r5, r1
   15398:	str	r3, [sp, #152]	; 0x98
   1539c:	str	r1, [sp, #160]	; 0xa0
   153a0:	cmp	r2, ip
   153a4:	bcs	153c0 <test_print@@Base+0x1b3c>
   153a8:	ldr	r3, [sp, #180]	; 0xb4
   153ac:	mov	r0, lr
   153b0:	add	r3, r3, lr, lsl #2
   153b4:	ldr	ip, [r3, #1672]	; 0x688
   153b8:	sub	r3, lr, #1
   153bc:	str	r3, [sp, #16]
   153c0:	cmp	r0, #0
   153c4:	ble	15ecc <test_print@@Base+0x2648>
   153c8:	udiv	r3, r2, ip
   153cc:	ldrd	r0, [sp, #44]	; 0x2c
   153d0:	mls	r2, ip, r3, r2
   153d4:	add	r3, r3, #48	; 0x30
   153d8:	uxtb	r3, r3
   153dc:	lsl	r1, r2, r1
   153e0:	strb	r3, [r0]
   153e4:	lsl	r0, r2, r9
   153e8:	orr	r1, r1, r2, lsr r8
   153ec:	adds	r0, r0, sl
   153f0:	adc	r1, r1, fp
   153f4:	strd	r0, [sp]
   153f8:	ldrd	r4, [sp]
   153fc:	ldrd	r0, [sp, #56]	; 0x38
   15400:	cmp	r1, r5
   15404:	cmpeq	r0, r4
   15408:	bhi	15f20 <test_print@@Base+0x269c>
   1540c:	movw	r5, #52429	; 0xcccd
   15410:	movt	r5, #52428	; 0xcccc
   15414:	ldr	lr, [sp, #16]
   15418:	mov	r4, #1
   1541c:	ldr	r3, [sp, #44]	; 0x2c
   15420:	add	r0, r3, #1
   15424:	str	r0, [sp, #16]
   15428:	b	15498 <test_print@@Base+0x1c14>
   1542c:	nop	{0}
   15430:			; <UNDEFINED> instruction: 0xffffffff
   15434:	svcvc	0x00efffff
   15438:			; <UNDEFINED> instruction: 0x509f79fe
   1543c:	svccc	0x00d34413
   15440:	ldrdeq	r2, [r2], -r8
   15444:	andeq	r2, r2, ip, ror #23
   15448:	mov	r0, r3
   1544c:	udiv	r3, r2, ip
   15450:	ldr	r1, [sp, #48]	; 0x30
   15454:	mov	r4, r6
   15458:	mls	r2, ip, r3, r2
   1545c:	add	r3, r3, #48	; 0x30
   15460:	uxtb	r3, r3
   15464:	lsl	r1, r2, r1
   15468:	strb	r3, [r0], #1
   1546c:	lsl	r6, r2, r9
   15470:	str	r0, [sp, #16]
   15474:	orr	r1, r1, r2, lsr r8
   15478:	adds	r0, r6, sl
   1547c:	ldrd	r6, [sp, #56]	; 0x38
   15480:	adc	r1, r1, fp
   15484:	strd	r0, [sp]
   15488:	ldrd	r0, [sp]
   1548c:	cmp	r7, r1
   15490:	cmpeq	r6, r0
   15494:	bhi	15a5c <test_print@@Base+0x21d8>
   15498:	umull	r3, ip, r5, ip
   1549c:	ldr	r3, [sp, #16]
   154a0:	sub	lr, lr, #1
   154a4:	add	r6, r4, #1
   154a8:	cmn	lr, #1
   154ac:	lsr	ip, ip, #3
   154b0:	str	r6, [sp, #104]	; 0x68
   154b4:	str	r3, [sp, #180]	; 0xb4
   154b8:	bne	15448 <test_print@@Base+0x1bc4>
   154bc:	mov	r0, #0
   154c0:	add	r3, r0, r4
   154c4:	mov	r5, #1
   154c8:	mov	ip, #0
   154cc:	str	r3, [sp, #88]	; 0x58
   154d0:	ldr	r3, [sp, #44]	; 0x2c
   154d4:	str	r9, [sp, #96]	; 0x60
   154d8:	str	r8, [sp, #104]	; 0x68
   154dc:	ldrd	r8, [sp, #56]	; 0x38
   154e0:	add	r0, r3, r4
   154e4:	mov	r4, r0
   154e8:	b	154f8 <test_print@@Base+0x1c74>
   154ec:	mov	r5, r2
   154f0:	mov	ip, lr
   154f4:	add	r6, r6, #1
   154f8:	ldr	r3, [sp, #88]	; 0x58
   154fc:	mov	r7, r4
   15500:	lsl	r0, fp, #2
   15504:	lsl	r1, sl, #2
   15508:	str	r6, [sp, #56]	; 0x38
   1550c:	ldr	r4, [sp, #152]	; 0x98
   15510:	orr	r0, r0, sl, lsr #30
   15514:	adds	r1, r1, sl
   15518:	lsl	lr, ip, #2
   1551c:	adc	r0, r0, fp
   15520:	adds	r1, r1, r1
   15524:	lsl	r2, r5, #2
   15528:	sub	r3, r3, r6
   1552c:	adc	r0, r0, r0
   15530:	str	r3, [sp, #16]
   15534:	and	sl, r4, r1
   15538:	lsl	r4, r9, #2
   1553c:	ldr	r3, [sp, #96]	; 0x60
   15540:	str	lr, [sp, #144]	; 0x90
   15544:	orr	lr, lr, r5, lsr #30
   15548:	str	r2, [sp, #136]	; 0x88
   1554c:	adds	r2, r2, r5
   15550:	orr	r4, r4, r8, lsr #30
   15554:	adc	lr, lr, ip
   15558:	adds	r2, r2, r2
   1555c:	adc	lr, lr, lr
   15560:	lsr	r3, r1, r3
   15564:	ldr	r1, [sp, #160]	; 0xa0
   15568:	and	fp, r1, r0
   1556c:	ldr	r1, [sp, #104]	; 0x68
   15570:	orr	r3, r3, r0, lsl r1
   15574:	lsl	r1, r8, #2
   15578:	str	r1, [sp]
   1557c:	ldr	r1, [sp, #48]	; 0x30
   15580:	orr	r3, r3, r0, lsr r1
   15584:	ldr	r1, [sp]
   15588:	add	r3, r3, #48	; 0x30
   1558c:	uxtb	r3, r3
   15590:	adds	r1, r1, r8
   15594:	strb	r3, [r7]
   15598:	adc	r0, r4, r9
   1559c:	adds	r1, r1, r1
   155a0:	adc	r0, r0, r0
   155a4:	mov	r8, r1
   155a8:	cmp	r0, fp
   155ac:	mov	r9, r0
   155b0:	cmpeq	r1, sl
   155b4:	add	r4, r7, #1
   155b8:	bls	154ec <test_print@@Base+0x1c68>
   155bc:	mov	r4, r6
   155c0:	str	r7, [sp, #48]	; 0x30
   155c4:	strd	r8, [sp, #56]	; 0x38
   155c8:	ldrd	r8, [sp, #32]
   155cc:	str	ip, [sp, #96]	; 0x60
   155d0:	mov	ip, lr
   155d4:	mov	lr, r0
   155d8:	ldrd	r6, [sp, #112]	; 0x70
   155dc:	str	r1, [sp, #104]	; 0x68
   155e0:	mov	r0, r9
   155e4:	subs	r1, r8, r6
   155e8:	ldrd	r8, [sp, #32]
   155ec:	sbc	r0, r0, r7
   155f0:	cmp	r7, r9
   155f4:	ldr	r7, [sp, #120]	; 0x78
   155f8:	cmpeq	r6, r8
   155fc:	ldr	r9, [sp, #168]	; 0xa8
   15600:	movhi	r6, #1
   15604:	movls	r6, #0
   15608:	cmp	r7, r9
   1560c:	orrne	r6, r6, #1
   15610:	cmp	r6, #0
   15614:	bne	15f4c <test_print@@Base+0x26c8>
   15618:	mul	r0, r2, r0
   1561c:	umull	r6, r7, r2, r1
   15620:	mla	r0, r1, ip, r0
   15624:	strd	r6, [sp]
   15628:	add	r1, r0, r7
   1562c:	str	r1, [sp, #4]
   15630:	ldrd	r6, [sp]
   15634:	subs	r1, r6, r2
   15638:	str	r1, [sp, #128]	; 0x80
   1563c:	sbc	r1, r7, ip
   15640:	str	r1, [sp, #132]	; 0x84
   15644:	ldrd	r0, [sp, #128]	; 0x80
   15648:	cmp	fp, r1
   1564c:	cmpeq	sl, r0
   15650:	bcs	15e98 <test_print@@Base+0x2614>
   15654:	ldrd	r8, [sp, #56]	; 0x38
   15658:	ldrd	r6, [sp, #80]	; 0x50
   1565c:	subs	r1, r8, sl
   15660:	str	r1, [sp, #200]	; 0xc8
   15664:	sbc	r1, r9, fp
   15668:	str	r1, [sp, #204]	; 0xcc
   1566c:	ldrd	r0, [sp, #200]	; 0xc8
   15670:	cmp	r7, r1
   15674:	cmpeq	r6, r0
   15678:	bhi	15f2c <test_print@@Base+0x26a8>
   1567c:	subs	r1, r8, r6
   15680:	str	r4, [sp, #32]
   15684:	mov	r4, r6
   15688:	sbc	r0, r9, r7
   1568c:	subs	r1, r1, sl
   15690:	ldrd	r8, [sp, #128]	; 0x80
   15694:	str	r2, [sp, #56]	; 0x38
   15698:	str	ip, [sp, #88]	; 0x58
   1569c:	mov	ip, r5
   156a0:	mov	r5, r7
   156a4:	str	r1, [sp, #208]	; 0xd0
   156a8:	sbc	r1, r0, fp
   156ac:	str	r1, [sp, #212]	; 0xd4
   156b0:	ldrd	r0, [sp, #208]	; 0xd0
   156b4:	adds	r2, r4, sl
   156b8:	str	r2, [sp, #8]
   156bc:	adc	r2, r5, fp
   156c0:	str	r2, [sp, #12]
   156c4:	ldrd	r6, [sp, #8]
   156c8:	cmp	r9, r7
   156cc:	cmpeq	r8, r6
   156d0:	bhi	15a24 <test_print@@Base+0x21a0>
   156d4:	subs	r7, r8, sl
   156d8:	mov	r5, ip
   156dc:	ldr	r4, [sp, #32]
   156e0:	sbc	r1, r9, fp
   156e4:	str	r7, [sp, #64]	; 0x40
   156e8:	ldrd	r6, [sp]
   156ec:	str	r1, [sp, #68]	; 0x44
   156f0:	ldr	r2, [sp, #56]	; 0x38
   156f4:	ldrd	r8, [sp, #8]
   156f8:	ldr	ip, [sp, #88]	; 0x58
   156fc:	subs	r1, r2, r6
   15700:	sbc	r0, ip, r7
   15704:	adds	r1, r1, r8
   15708:	str	r1, [sp, #72]	; 0x48
   1570c:	adc	r1, r0, r9
   15710:	str	r1, [sp, #76]	; 0x4c
   15714:	ldrd	r0, [sp, #64]	; 0x40
   15718:	ldrd	r6, [sp, #72]	; 0x48
   1571c:	cmp	r1, r7
   15720:	cmpeq	r0, r6
   15724:	bcc	15e98 <test_print@@Base+0x2614>
   15728:	ldr	r1, [sp, #48]	; 0x30
   1572c:	sub	r3, r3, #1
   15730:	strb	r3, [r1]
   15734:	ldrd	r0, [sp]
   15738:	adds	r3, r2, r0
   1573c:	str	r3, [sp, #240]	; 0xf0
   15740:	adc	r3, ip, r1
   15744:	str	r3, [sp, #244]	; 0xf4
   15748:	ldrd	r2, [sp, #8]
   1574c:	ldrd	r0, [sp, #240]	; 0xf0
   15750:	cmp	r1, r3
   15754:	cmpeq	r0, r2
   15758:	bls	157ec <test_print@@Base+0x1f68>
   1575c:	ldrd	r6, [sp, #80]	; 0x50
   15760:	ldr	ip, [sp, #104]	; 0x68
   15764:	subs	ip, ip, r2
   15768:	str	ip, [sp, #264]	; 0x108
   1576c:	sbc	ip, lr, r3
   15770:	str	ip, [sp, #268]	; 0x10c
   15774:	add	ip, sp, #264	; 0x108
   15778:	ldrd	r8, [ip]
   1577c:	cmp	r7, r9
   15780:	cmpeq	r6, r8
   15784:	bhi	157ec <test_print@@Base+0x1f68>
   15788:	adds	ip, r6, r2
   1578c:	str	ip, [sp, #288]	; 0x120
   15790:	adc	ip, r7, r3
   15794:	str	ip, [sp, #292]	; 0x124
   15798:	add	ip, sp, #288	; 0x120
   1579c:	ldrd	r6, [ip]
   157a0:	cmp	r1, r7
   157a4:	cmpeq	r0, r6
   157a8:	bhi	159fc <test_print@@Base+0x2178>
   157ac:	subs	ip, r0, r2
   157b0:	sbc	r3, r1, r3
   157b4:	str	ip, [sp, #296]	; 0x128
   157b8:	mov	ip, r1
   157bc:	add	r1, sp, #304	; 0x130
   157c0:	str	r3, [sp, #300]	; 0x12c
   157c4:	subs	r3, r6, r0
   157c8:	str	r3, [sp, #304]	; 0x130
   157cc:	sbc	r3, r7, ip
   157d0:	str	r3, [sp, #308]	; 0x134
   157d4:	add	r3, sp, #296	; 0x128
   157d8:	ldrd	r0, [r1]
   157dc:	ldrd	r2, [r3]
   157e0:	cmp	r3, r1
   157e4:	cmpeq	r2, r0
   157e8:	bhi	159fc <test_print@@Base+0x2178>
   157ec:	ldr	ip, [sp, #96]	; 0x60
   157f0:	ldr	r8, [sp, #136]	; 0x88
   157f4:	ldr	r3, [sp, #144]	; 0x90
   157f8:	adds	r2, r8, r5
   157fc:	orr	r3, r3, r5, lsr #30
   15800:	str	r2, [sp, #184]	; 0xb8
   15804:	adc	r2, r3, ip
   15808:	str	r2, [sp, #188]	; 0xbc
   1580c:	ldrd	r6, [sp, #184]	; 0xb8
   15810:	lsl	r2, r7, #2
   15814:	lsl	r1, r6, #2
   15818:	orr	r2, r2, r6, lsr #30
   1581c:	str	r1, [sp, #184]	; 0xb8
   15820:	str	r2, [sp, #188]	; 0xbc
   15824:	ldrd	r0, [sp, #8]
   15828:	ldrd	r6, [sp, #184]	; 0xb8
   1582c:	cmp	r1, r7
   15830:	cmpeq	r0, r6
   15834:	bcc	159fc <test_print@@Base+0x2178>
   15838:	adds	r5, r8, r5
   1583c:	adc	r3, r3, ip
   15840:	lsl	r2, r5, #3
   15844:	lsl	r3, r3, #3
   15848:	orr	r3, r3, r5, lsr #29
   1584c:	mov	r5, r2
   15850:	ldr	r2, [sp, #104]	; 0x68
   15854:	subs	r2, r2, r5
   15858:	sbc	r3, lr, r3
   1585c:	strd	r2, [sp, #248]	; 0xf8
   15860:	ldrd	r2, [sp, #248]	; 0xf8
   15864:	cmp	r1, r3
   15868:	cmpeq	r0, r2
   1586c:	bhi	159fc <test_print@@Base+0x2178>
   15870:	ldr	r3, [sp, #16]
   15874:	ldr	r2, [sp, #192]	; 0xc0
   15878:	sub	r5, r3, r2
   1587c:	mov	r3, r2
   15880:	ldr	r2, [sp, #16]
   15884:	cmp	r4, #2
   15888:	sub	r1, r3, r2
   1588c:	movge	r3, r4
   15890:	movlt	r3, #2
   15894:	cmp	r3, r1
   15898:	suble	r7, r3, #1
   1589c:	movgt	r7, r1
   158a0:	cmp	r5, #0
   158a4:	blt	15ce8 <test_print@@Base+0x2464>
   158a8:	ldr	r3, [sp, #44]	; 0x2c
   158ac:	cmp	r5, #2
   158b0:	add	lr, r3, r4
   158b4:	bgt	15ea0 <test_print@@Base+0x261c>
   158b8:	cmp	r5, #0
   158bc:	ble	158dc <test_print@@Base+0x2058>
   158c0:	mov	r0, lr
   158c4:	mov	r2, r5
   158c8:	mov	r1, #48	; 0x30
   158cc:	bl	124c4 <memset@plt>
   158d0:	ldr	r3, [sp, #44]	; 0x2c
   158d4:	add	r4, r4, r5
   158d8:	add	lr, r3, r4
   158dc:	ldr	r2, [sp, #176]	; 0xb0
   158e0:	mov	r3, #0
   158e4:	strb	r3, [lr]
   158e8:	sub	r0, lr, r2
   158ec:	b	1593c <test_print@@Base+0x20b8>
   158f0:	vldr	d7, [sp, #24]
   158f4:	add	r3, r5, #-2147483648	; 0x80000000
   158f8:	mov	r0, r1
   158fc:	mov	r2, #45	; 0x2d
   15900:	mov	r5, r3
   15904:	orrs	r3, r4, r5
   15908:	strb	r2, [r0], #1
   1590c:	str	r0, [sp, #44]	; 0x2c
   15910:	vneg.f64	d7, d7
   15914:	vstr	d7, [sp, #24]
   15918:	bne	14ed8 <test_print@@Base+0x1654>
   1591c:	ldr	r1, [sp, #44]	; 0x2c
   15920:	mov	r3, #0
   15924:	mov	r2, #48	; 0x30
   15928:	mov	r0, r1
   1592c:	strb	r2, [r1]
   15930:	strb	r3, [r0, #1]!
   15934:	ldr	r3, [sp, #176]	; 0xb0
   15938:	sub	r0, r0, r3
   1593c:	add	sp, sp, #332	; 0x14c
   15940:	ldrd	r4, [sp]
   15944:	ldrd	r6, [sp, #8]
   15948:	ldrd	r8, [sp, #16]
   1594c:	ldrd	sl, [sp, #24]
   15950:	add	sp, sp, #32
   15954:	pop	{pc}		; (ldr pc, [sp], #4)
   15958:	movw	r1, #13068	; 0x330c
   1595c:	movt	r1, #2
   15960:	vmov	r3, s0
   15964:	mov	r2, r5
   15968:	bl	124e8 <sprintf@plt>
   1596c:	mov	r0, #21
   15970:	b	1593c <test_print@@Base+0x20b8>
   15974:	ldr	r0, [sp, #44]	; 0x2c
   15978:	movw	r3, #28265	; 0x6e69
   1597c:	movt	r3, #102	; 0x66
   15980:	str	r3, [r0], #3
   15984:	ldr	r3, [sp, #176]	; 0xb0
   15988:	sub	r0, r0, r3
   1598c:	b	1593c <test_print@@Base+0x20b8>
   15990:	ldrd	r2, [sp, #80]	; 0x50
   15994:	orrs	r1, r2, r3
   15998:	beq	15f88 <test_print@@Base+0x2704>
   1599c:	movw	r6, #64461	; 0xfbcd
   159a0:	movt	r6, #65535	; 0xffff
   159a4:	movw	lr, #64462	; 0xfbce
   159a8:	movt	lr, #65535	; 0xffff
   159ac:	mov	r0, r2
   159b0:	mov	r5, r3
   159b4:	b	14f48 <test_print@@Base+0x16c4>
   159b8:	mov	r2, sl
   159bc:	mov	r3, fp
   159c0:	strd	r2, [sp, #144]	; 0x90
   159c4:	ldrd	r2, [sp, #144]	; 0x90
   159c8:	cmp	r3, #0
   159cc:	cmpeq	r2, #1
   159d0:	bls	159fc <test_print@@Base+0x2178>
   159d4:	ldrd	r0, [sp, #56]	; 0x38
   159d8:	subs	ip, r0, #4
   159dc:	sbc	r1, r1, #0
   159e0:	str	ip, [sp, #256]	; 0x100
   159e4:	str	r1, [sp, #260]	; 0x104
   159e8:	add	r1, sp, #256	; 0x100
   159ec:	ldrd	r0, [r1]
   159f0:	cmp	r1, r3
   159f4:	cmpeq	r0, r2
   159f8:	bcs	15cd0 <test_print@@Base+0x244c>
   159fc:	movw	r1, #13124	; 0x3344
   15a00:	movt	r1, #2
   15a04:	ldrd	r2, [sp, #24]
   15a08:	ldr	r4, [sp, #44]	; 0x2c
   15a0c:	mov	r0, r4
   15a10:	bl	124e8 <sprintf@plt>
   15a14:	ldr	r2, [sp, #176]	; 0xb0
   15a18:	sub	r3, r4, r2
   15a1c:	add	r0, r3, r0
   15a20:	b	1593c <test_print@@Base+0x20b8>
   15a24:	subs	r2, r0, r4
   15a28:	mov	sl, r6
   15a2c:	sbc	r6, r1, r5
   15a30:	cmp	r5, r1
   15a34:	ldr	r1, [sp, #48]	; 0x30
   15a38:	sub	r3, r3, #1
   15a3c:	cmpeq	r4, r0
   15a40:	uxtb	r3, r3
   15a44:	mov	fp, r7
   15a48:	strb	r3, [r1]
   15a4c:	bhi	15cb8 <test_print@@Base+0x2434>
   15a50:	mov	r0, r2
   15a54:	mov	r1, r6
   15a58:	b	156b4 <test_print@@Base+0x1e30>
   15a5c:	str	lr, [sp, #16]
   15a60:	mov	r7, r4
   15a64:	ldr	lr, [sp, #180]	; 0xb4
   15a68:	ldrd	sl, [sp, #32]
   15a6c:	ldrd	r0, [sp, #112]	; 0x70
   15a70:	subs	r6, sl, r0
   15a74:	sbc	r2, fp, r1
   15a78:	cmp	r1, fp
   15a7c:	ldr	r1, [sp, #120]	; 0x78
   15a80:	cmpeq	r0, sl
   15a84:	str	r6, [sp, #64]	; 0x40
   15a88:	ldr	r0, [sp, #168]	; 0xa8
   15a8c:	movhi	r5, #1
   15a90:	movls	r5, #0
   15a94:	cmp	r1, r0
   15a98:	orrne	r5, r5, #1
   15a9c:	cmp	r5, #0
   15aa0:	bne	15f4c <test_print@@Base+0x26c8>
   15aa4:	subs	r4, r6, #1
   15aa8:	ldrd	sl, [sp]
   15aac:	lsl	r0, ip, r9
   15ab0:	str	r4, [sp, #136]	; 0x88
   15ab4:	sbc	r4, r2, #0
   15ab8:	str	r4, [sp, #140]	; 0x8c
   15abc:	ldr	r4, [sp, #48]	; 0x30
   15ac0:	lsl	r1, ip, r4
   15ac4:	ldrd	r4, [sp, #136]	; 0x88
   15ac8:	orr	r1, r1, ip, lsr r8
   15acc:	cmp	r5, fp
   15ad0:	cmpeq	r4, sl
   15ad4:	bls	15f34 <test_print@@Base+0x26b0>
   15ad8:	ldrd	r8, [sp, #56]	; 0x38
   15adc:	subs	ip, r8, sl
   15ae0:	str	ip, [sp, #216]	; 0xd8
   15ae4:	sbc	ip, r9, fp
   15ae8:	str	ip, [sp, #220]	; 0xdc
   15aec:	ldrd	r8, [sp, #216]	; 0xd8
   15af0:	cmp	r1, r9
   15af4:	cmpeq	r0, r8
   15af8:	bhi	159b8 <test_print@@Base+0x2134>
   15afc:	subs	ip, r8, r0
   15b00:	str	r7, [sp]
   15b04:	ldrd	r4, [sp, #136]	; 0x88
   15b08:	str	r2, [sp, #8]
   15b0c:	str	ip, [sp, #224]	; 0xe0
   15b10:	sbc	ip, r9, r1
   15b14:	str	ip, [sp, #228]	; 0xe4
   15b18:	ldrd	r6, [sp, #224]	; 0xe0
   15b1c:	adds	r8, r0, sl
   15b20:	adc	r9, r1, fp
   15b24:	cmp	r5, r9
   15b28:	cmpeq	r4, r8
   15b2c:	bhi	15c68 <test_print@@Base+0x23e4>
   15b30:	ldr	r7, [sp]
   15b34:	strd	sl, [sp]
   15b38:	mov	sl, r8
   15b3c:	mov	r8, r4
   15b40:	ldr	r4, [sp]
   15b44:	mov	fp, r9
   15b48:	strd	sl, [sp, #144]	; 0x90
   15b4c:	ldr	r2, [sp, #8]
   15b50:	subs	ip, r8, r4
   15b54:	ldr	r4, [sp, #4]
   15b58:	ldrd	r8, [sp, #112]	; 0x70
   15b5c:	str	ip, [sp, #88]	; 0x58
   15b60:	sbc	ip, r5, r4
   15b64:	str	ip, [sp, #92]	; 0x5c
   15b68:	adds	ip, r8, #1
   15b6c:	adc	r5, r9, #0
   15b70:	ldrd	r8, [sp, #32]
   15b74:	subs	ip, ip, r8
   15b78:	sbc	r5, r5, r9
   15b7c:	adds	ip, ip, sl
   15b80:	ldrd	r8, [sp, #88]	; 0x58
   15b84:	str	ip, [sp, #96]	; 0x60
   15b88:	adc	ip, r5, fp
   15b8c:	str	ip, [sp, #100]	; 0x64
   15b90:	ldrd	sl, [sp, #96]	; 0x60
   15b94:	cmp	r9, fp
   15b98:	cmpeq	r8, sl
   15b9c:	subcs	r3, r3, #1
   15ba0:	strbcs	r3, [lr]
   15ba4:	bcc	15ec0 <test_print@@Base+0x263c>
   15ba8:	ldr	r3, [sp, #64]	; 0x40
   15bac:	adds	r3, r3, #1
   15bb0:	str	r3, [sp, #232]	; 0xe8
   15bb4:	adc	r3, r2, #0
   15bb8:	str	r3, [sp, #236]	; 0xec
   15bbc:	ldrd	r2, [sp, #144]	; 0x90
   15bc0:	ldrd	r4, [sp, #232]	; 0xe8
   15bc4:	cmp	r5, r3
   15bc8:	cmpeq	r4, r2
   15bcc:	bls	159c4 <test_print@@Base+0x2140>
   15bd0:	ldrd	r8, [sp, #56]	; 0x38
   15bd4:	subs	ip, r8, r2
   15bd8:	str	ip, [sp, #280]	; 0x118
   15bdc:	sbc	ip, r9, r3
   15be0:	str	ip, [sp, #284]	; 0x11c
   15be4:	add	ip, sp, #280	; 0x118
   15be8:	ldrd	r8, [ip]
   15bec:	cmp	r1, r9
   15bf0:	cmpeq	r0, r8
   15bf4:	bhi	159c4 <test_print@@Base+0x2140>
   15bf8:	adds	ip, r0, r2
   15bfc:	adc	r3, r1, r3
   15c00:	str	ip, [sp, #272]	; 0x110
   15c04:	str	r3, [sp, #276]	; 0x114
   15c08:	add	r3, sp, #272	; 0x110
   15c0c:	ldrd	r2, [r3]
   15c10:	cmp	r5, r3
   15c14:	cmpeq	r4, r2
   15c18:	bhi	159fc <test_print@@Base+0x2178>
   15c1c:	ldrd	r0, [sp, #144]	; 0x90
   15c20:	subs	ip, r4, r0
   15c24:	sbc	r1, r5, r1
   15c28:	str	ip, [sp, #312]	; 0x138
   15c2c:	str	r1, [sp, #316]	; 0x13c
   15c30:	add	r1, sp, #272	; 0x110
   15c34:	ldrd	r0, [r1]
   15c38:	subs	ip, r0, r4
   15c3c:	sbc	r3, r1, r5
   15c40:	add	r1, sp, #320	; 0x140
   15c44:	str	ip, [sp, #320]	; 0x140
   15c48:	str	r3, [sp, #324]	; 0x144
   15c4c:	add	r3, sp, #312	; 0x138
   15c50:	ldrd	r0, [r1]
   15c54:	ldrd	r2, [r3]
   15c58:	cmp	r3, r1
   15c5c:	cmpeq	r2, r0
   15c60:	bls	159c4 <test_print@@Base+0x2140>
   15c64:	b	159fc <test_print@@Base+0x2178>
   15c68:	subs	ip, r6, r0
   15c6c:	sub	r3, r3, #1
   15c70:	uxtb	r3, r3
   15c74:	sbc	r2, r7, r1
   15c78:	cmp	r1, r7
   15c7c:	mov	sl, r8
   15c80:	cmpeq	r0, r6
   15c84:	mov	fp, r9
   15c88:	strb	r3, [lr]
   15c8c:	bhi	15cc4 <test_print@@Base+0x2440>
   15c90:	mov	r6, ip
   15c94:	mov	r7, r2
   15c98:	b	15b1c <test_print@@Base+0x2298>
   15c9c:	lsl	r3, r5, #2
   15ca0:	sub	r6, lr, #2
   15ca4:	lsl	r2, r0, #2
   15ca8:	orr	r3, r3, r0, lsr #30
   15cac:	subs	r2, r2, #1
   15cb0:	sbc	lr, r3, #0
   15cb4:	b	150d4 <test_print@@Base+0x1850>
   15cb8:	mov	r5, ip
   15cbc:	ldr	r4, [sp, #32]
   15cc0:	b	157ec <test_print@@Base+0x1f68>
   15cc4:	strd	r8, [sp, #144]	; 0x90
   15cc8:	ldr	r7, [sp]
   15ccc:	b	159c4 <test_print@@Base+0x2140>
   15cd0:	ldr	r3, [sp, #16]
   15cd4:	mov	r4, r7
   15cd8:	ldr	r2, [sp, #192]	; 0xc0
   15cdc:	sub	r5, r3, r2
   15ce0:	mov	r3, r2
   15ce4:	b	15880 <test_print@@Base+0x1ffc>
   15ce8:	add	r0, r5, r4
   15cec:	cmp	r1, r4
   15cf0:	cmnge	r0, #2
   15cf4:	bge	15ed8 <test_print@@Base+0x2654>
   15cf8:	cmp	r4, #1
   15cfc:	beq	15df0 <test_print@@Base+0x256c>
   15d00:	cmp	r7, #0
   15d04:	add	r6, r4, #1
   15d08:	sub	r8, r4, r7
   15d0c:	ble	15d28 <test_print@@Base+0x24a4>
   15d10:	ldr	r3, [sp, #44]	; 0x2c
   15d14:	sub	r0, r6, r7
   15d18:	mov	r2, r7
   15d1c:	add	r1, r3, r8
   15d20:	add	r0, r3, r0
   15d24:	bl	12410 <memmove@plt>
   15d28:	ldr	r2, [sp, #44]	; 0x2c
   15d2c:	add	r5, r7, r5
   15d30:	mov	r3, #46	; 0x2e
   15d34:	cmp	r5, #0
   15d38:	add	lr, r2, r6
   15d3c:	strb	r3, [r2, r8]
   15d40:	beq	158dc <test_print@@Base+0x2058>
   15d44:	mov	r3, #101	; 0x65
   15d48:	add	r4, r4, #2
   15d4c:	add	lr, r2, r4
   15d50:	movge	r0, lr
   15d54:	strb	r3, [r2, r6]
   15d58:	bge	15d6c <test_print@@Base+0x24e8>
   15d5c:	mov	r3, #45	; 0x2d
   15d60:	rsb	r5, r5, #0
   15d64:	add	r0, lr, #1
   15d68:	strb	r3, [r2, r4]
   15d6c:	movw	ip, #52429	; 0xcccd
   15d70:	movt	ip, #52428	; 0xcccc
   15d74:	mov	r3, r0
   15d78:	mvn	r6, #9
   15d7c:	umull	r1, r2, ip, r5
   15d80:	lsr	r2, r2, #3
   15d84:	mla	r1, r6, r2, r5
   15d88:	subs	r5, r2, #0
   15d8c:	add	r2, r1, #48	; 0x30
   15d90:	strb	r2, [r3], #1
   15d94:	bne	15d7c <test_print@@Base+0x24f8>
   15d98:	sub	r2, r3, r0
   15d9c:	strb	r5, [r3]
   15da0:	add	r7, r2, r2, lsr #31
   15da4:	cmp	r2, #1
   15da8:	subgt	r2, r0, #1
   15dac:	movgt	ip, r3
   15db0:	asr	r7, r7, #1
   15db4:	ble	15ddc <test_print@@Base+0x2558>
   15db8:	ldrb	r5, [r2, #1]
   15dbc:	add	r1, r2, #2
   15dc0:	add	r2, r2, #1
   15dc4:	sub	r1, r1, r0
   15dc8:	ldrb	r6, [ip, #-1]!
   15dcc:	cmp	r1, r7
   15dd0:	strb	r6, [r2]
   15dd4:	strb	r5, [ip]
   15dd8:	blt	15db8 <test_print@@Base+0x2534>
   15ddc:	sub	lr, r3, lr
   15de0:	ldr	r3, [sp, #44]	; 0x2c
   15de4:	add	lr, lr, r4
   15de8:	add	lr, r3, lr
   15dec:	b	158dc <test_print@@Base+0x2058>
   15df0:	ldr	r0, [sp, #44]	; 0x2c
   15df4:	mov	r2, #101	; 0x65
   15df8:	mov	r3, #45	; 0x2d
   15dfc:	mov	lr, #2
   15e00:	add	r5, r0, #2
   15e04:	add	ip, r0, #3
   15e08:	strb	r2, [r0, #1]
   15e0c:	strb	r3, [r0, #2]
   15e10:	movw	r4, #26215	; 0x6667
   15e14:	movt	r4, #26214	; 0x6666
   15e18:	mov	r3, ip
   15e1c:	mvn	r6, #9
   15e20:	smull	r2, r0, r4, r1
   15e24:	asr	r2, r1, #31
   15e28:	rsb	r2, r2, r0, asr #2
   15e2c:	mla	r0, r6, r2, r1
   15e30:	subs	r1, r2, #0
   15e34:	add	r2, r0, #48	; 0x30
   15e38:	strb	r2, [r3], #1
   15e3c:	bne	15e20 <test_print@@Base+0x259c>
   15e40:	sub	r2, r3, ip
   15e44:	strb	r1, [r3]
   15e48:	add	r7, r2, r2, lsr #31
   15e4c:	cmp	r2, #1
   15e50:	subgt	r2, ip, #1
   15e54:	movgt	r0, r3
   15e58:	asr	r7, r7, #1
   15e5c:	ble	15e84 <test_print@@Base+0x2600>
   15e60:	ldrb	r4, [r2, #1]
   15e64:	add	r1, r2, #2
   15e68:	add	r2, r2, #1
   15e6c:	sub	r1, r1, ip
   15e70:	ldrb	r6, [r0, #-1]!
   15e74:	cmp	r7, r1
   15e78:	strb	r6, [r2]
   15e7c:	strb	r4, [r0]
   15e80:	bgt	15e60 <test_print@@Base+0x25dc>
   15e84:	sub	r3, r3, r5
   15e88:	add	lr, r3, lr
   15e8c:	ldr	r3, [sp, #44]	; 0x2c
   15e90:	add	lr, r3, lr
   15e94:	b	158dc <test_print@@Base+0x2058>
   15e98:	strd	sl, [sp, #8]
   15e9c:	b	15734 <test_print@@Base+0x1eb0>
   15ea0:	mov	r2, r3
   15ea4:	add	lr, r4, #1
   15ea8:	mov	r3, #101	; 0x65
   15eac:	add	ip, r2, lr
   15eb0:	mov	r1, r5
   15eb4:	mov	r5, ip
   15eb8:	strb	r3, [r2, r4]
   15ebc:	b	15e10 <test_print@@Base+0x258c>
   15ec0:	ldrd	r4, [sp]
   15ec4:	strd	r4, [sp, #144]	; 0x90
   15ec8:	b	15ba8 <test_print@@Base+0x2324>
   15ecc:	mov	r4, #0
   15ed0:	mov	r6, #1
   15ed4:	b	154c0 <test_print@@Base+0x1c3c>
   15ed8:	ldr	r6, [sp, #44]	; 0x2c
   15edc:	rsb	r0, r0, #2
   15ee0:	mov	r2, r4
   15ee4:	rsb	r5, r5, #2
   15ee8:	sub	r5, r5, r4
   15eec:	mov	r1, r6
   15ef0:	add	r0, r6, r0
   15ef4:	bl	12410 <memmove@plt>
   15ef8:	mov	r1, #48	; 0x30
   15efc:	mov	r3, #46	; 0x2e
   15f00:	cmp	r5, #2
   15f04:	strb	r1, [r6]
   15f08:	strb	r3, [r6, #1]
   15f0c:	ble	15f44 <test_print@@Base+0x26c0>
   15f10:	sub	r2, r5, #2
   15f14:	add	r0, r6, #2
   15f18:	bl	124c4 <memset@plt>
   15f1c:	b	158d0 <test_print@@Base+0x204c>
   15f20:	mov	r7, #1
   15f24:	ldr	lr, [sp, #44]	; 0x2c
   15f28:	b	15a68 <test_print@@Base+0x21e4>
   15f2c:	strd	sl, [sp, #8]
   15f30:	b	157ec <test_print@@Base+0x1f68>
   15f34:	mov	r4, sl
   15f38:	mov	r5, fp
   15f3c:	strd	r4, [sp, #144]	; 0x90
   15f40:	b	15ba8 <test_print@@Base+0x2324>
   15f44:	mov	r5, #2
   15f48:	b	158d0 <test_print@@Base+0x204c>
   15f4c:	bl	14a94 <test_print@@Base+0x1210>
   15f50:	movw	r1, #12976	; 0x32b0
   15f54:	movt	r1, #2
   15f58:	ldr	r3, [pc, #-2848]	; 15440 <test_print@@Base+0x1bbc>
   15f5c:	movw	r0, #13064	; 0x3308
   15f60:	movt	r0, #2
   15f64:	mov	r2, #189	; 0xbd
   15f68:	bl	1250c <__assert_fail@plt>
   15f6c:	movw	r1, #12976	; 0x32b0
   15f70:	movt	r1, #2
   15f74:	ldr	r3, [pc, #-2872]	; 15444 <test_print@@Base+0x1bc0>
   15f78:	movw	r0, #13084	; 0x331c
   15f7c:	movt	r0, #2
   15f80:	mov	r2, #138	; 0x8a
   15f84:	bl	1250c <__assert_fail@plt>
   15f88:	bl	14a6c <test_print@@Base+0x11e8>

00015f8c <flatcc_json_printer_error_string@@Base>:
   15f8c:	cmp	r0, #3
   15f90:	bhi	15fa8 <flatcc_json_printer_error_string@@Base+0x1c>
   15f94:	movw	r3, #10976	; 0x2ae0
   15f98:	movt	r3, #2
   15f9c:	add	r3, r3, r0, lsl #2
   15fa0:	ldr	r0, [r3, #1716]	; 0x6b4
   15fa4:	bx	lr
   15fa8:	movw	r0, #13132	; 0x334c
   15fac:	movt	r0, #2
   15fb0:	bx	lr

00015fb4 <flatcc_json_printer_fmt_float@@Base>:
   15fb4:	vcvt.f64.f32	d0, s0
   15fb8:	b	14e70 <test_print@@Base+0x15ec>

00015fbc <flatcc_json_printer_fmt_double@@Base>:
   15fbc:	b	14e70 <test_print@@Base+0x15ec>

00015fc0 <flatcc_json_printer_fmt_bool@@Base>:
   15fc0:	cmp	r1, #0
   15fc4:	mov	r2, r0
   15fc8:	bne	15fec <flatcc_json_printer_fmt_bool@@Base+0x2c>
   15fcc:	movw	r3, #13148	; 0x335c
   15fd0:	movt	r3, #2
   15fd4:	ldrb	r1, [r3, #4]
   15fd8:	mov	r0, #5
   15fdc:	ldr	r3, [r3]
   15fe0:	str	r3, [r2]
   15fe4:	strb	r1, [r2, #4]
   15fe8:	bx	lr
   15fec:	movw	r3, #13140	; 0x3354
   15ff0:	movt	r3, #2
   15ff4:	ldr	r3, [r3]
   15ff8:	mov	r0, #4
   15ffc:	str	r3, [r2]
   16000:	bx	lr

00016004 <flatcc_json_printer_string@@Base>:
   16004:	b	14abc <test_print@@Base+0x1238>

00016008 <flatcc_json_printer_write@@Base>:
   16008:	strd	r4, [sp, #-16]!
   1600c:	ldr	ip, [r0, #16]
   16010:	str	r6, [sp, #8]
   16014:	str	lr, [sp, #12]
   16018:	ldr	lr, [r0, #20]
   1601c:	add	r4, lr, r2
   16020:	cmp	ip, r4
   16024:	bhi	1603c <flatcc_json_printer_write@@Base+0x34>
   16028:	ldrd	r4, [sp]
   1602c:	ldr	r6, [sp, #8]
   16030:	ldr	lr, [sp, #12]
   16034:	add	sp, sp, #16
   16038:	b	14660 <test_print@@Base+0xddc>
   1603c:	mov	r4, r0
   16040:	mov	r0, lr
   16044:	mov	r5, r2
   16048:	bl	12428 <memcpy@plt>
   1604c:	ldr	ip, [r4, #20]
   16050:	ldr	r6, [sp, #8]
   16054:	add	ip, ip, r5
   16058:	str	ip, [r4, #20]
   1605c:	ldrd	r4, [sp]
   16060:	add	sp, sp, #12
   16064:	pop	{pc}		; (ldr pc, [sp], #4)

00016068 <flatcc_json_printer_nl@@Base>:
   16068:	ldr	r2, [r0, #20]
   1606c:	mov	r1, #10
   16070:	add	ip, r2, #1
   16074:	str	ip, [r0, #20]
   16078:	strb	r1, [r2]
   1607c:	ldr	r2, [r0, #16]
   16080:	ldr	r1, [r0, #20]
   16084:	cmp	r1, r2
   16088:	bcc	16098 <flatcc_json_printer_nl@@Base+0x30>
   1608c:	mov	r1, #0
   16090:	ldr	r3, [r0, #44]	; 0x2c
   16094:	bx	r3
   16098:	bx	lr

0001609c <flatcc_json_printer_char@@Base>:
   1609c:	ldr	r3, [r0, #20]
   160a0:	add	r2, r3, #1
   160a4:	str	r2, [r0, #20]
   160a8:	strb	r1, [r3]
   160ac:	bx	lr

000160b0 <flatcc_json_printer_indent@@Base>:
   160b0:	strd	r4, [sp, #-16]!
   160b4:	ldr	ip, [r0, #16]
   160b8:	ldr	r2, [r0, #20]
   160bc:	ldr	r5, [r0, #32]
   160c0:	str	r6, [sp, #8]
   160c4:	str	lr, [sp, #12]
   160c8:	ldrb	r1, [r0, #25]
   160cc:	mul	r5, r5, r1
   160d0:	add	r1, r2, r5
   160d4:	cmp	ip, r1
   160d8:	bcs	160f4 <flatcc_json_printer_indent@@Base+0x44>
   160dc:	mov	r1, r5
   160e0:	ldrd	r4, [sp]
   160e4:	ldr	r6, [sp, #8]
   160e8:	ldr	lr, [sp, #12]
   160ec:	add	sp, sp, #16
   160f0:	b	14724 <test_print@@Base+0xea0>
   160f4:	mov	r4, r0
   160f8:	mov	r1, #32
   160fc:	mov	r0, r2
   16100:	mov	r2, r5
   16104:	bl	124c4 <memset@plt>
   16108:	ldr	r3, [r4, #20]
   1610c:	ldr	r6, [sp, #8]
   16110:	add	r5, r3, r5
   16114:	str	r5, [r4, #20]
   16118:	ldrd	r4, [sp]
   1611c:	add	sp, sp, #12
   16120:	pop	{pc}		; (ldr pc, [sp], #4)

00016124 <flatcc_json_printer_add_level@@Base>:
   16124:	ldr	r3, [r0, #32]
   16128:	add	r1, r3, r1
   1612c:	str	r1, [r0, #32]
   16130:	bx	lr

00016134 <flatcc_json_printer_get_level@@Base>:
   16134:	ldr	r0, [r0, #32]
   16138:	bx	lr

0001613c <flatcc_json_printer_uint8@@Base>:
   1613c:	cmp	r1, #99	; 0x63
   16140:	str	r4, [sp, #-8]!
   16144:	str	lr, [sp, #4]
   16148:	ldr	r2, [r0, #20]
   1614c:	bhi	16184 <flatcc_json_printer_uint8@@Base+0x48>
   16150:	cmp	r1, #9
   16154:	bhi	161d4 <flatcc_json_printer_uint8@@Base+0x98>
   16158:	add	r1, r1, #48	; 0x30
   1615c:	mov	r3, #0
   16160:	mov	lr, #1
   16164:	strb	r1, [r2]
   16168:	strb	r3, [r2, #1]
   1616c:	ldr	r3, [r0, #20]
   16170:	ldr	r4, [sp]
   16174:	add	sp, sp, #4
   16178:	add	r3, r3, lr
   1617c:	str	r3, [r0, #20]
   16180:	pop	{pc}		; (ldr pc, [sp], #4)
   16184:	movw	ip, #34079	; 0x851f
   16188:	movt	ip, #20971	; 0x51eb
   1618c:	mov	r4, #100	; 0x64
   16190:	mov	lr, #0
   16194:	umull	r3, ip, ip, r1
   16198:	movw	r3, #10976	; 0x2ae0
   1619c:	movt	r3, #2
   161a0:	strb	lr, [r2, #3]
   161a4:	mov	lr, #3
   161a8:	lsr	ip, ip, #5
   161ac:	mls	r1, r4, ip, r1
   161b0:	add	ip, ip, #48	; 0x30
   161b4:	uxtb	r1, r1
   161b8:	ldrb	r4, [r3, r1, lsl #1]
   161bc:	add	r3, r3, r1, lsl #1
   161c0:	strb	r4, [r2, #1]
   161c4:	ldrb	r3, [r3, #1]
   161c8:	strb	ip, [r2]
   161cc:	strb	r3, [r2, #2]
   161d0:	b	1616c <flatcc_json_printer_uint8@@Base+0x30>
   161d4:	mov	ip, #0
   161d8:	sxth	r1, r1
   161dc:	movw	r3, #10976	; 0x2ae0
   161e0:	movt	r3, #2
   161e4:	strb	ip, [r2, #2]
   161e8:	add	ip, r3, r1, lsl #1
   161ec:	mov	lr, #2
   161f0:	ldrb	r3, [r3, r1, lsl #1]
   161f4:	strb	r3, [r2]
   161f8:	ldrb	r3, [ip, #1]
   161fc:	strb	r3, [r2, #1]
   16200:	b	1616c <flatcc_json_printer_uint8@@Base+0x30>

00016204 <flatcc_json_printer_uint16@@Base>:
   16204:	str	r4, [sp, #-8]!
   16208:	mov	r4, r0
   1620c:	mov	r0, r1
   16210:	ldr	r1, [r4, #20]
   16214:	str	lr, [sp, #4]
   16218:	bl	13b40 <test_print@@Base+0x2bc>
   1621c:	ldr	r3, [r4, #20]
   16220:	add	r0, r3, r0
   16224:	str	r0, [r4, #20]
   16228:	ldr	r4, [sp]
   1622c:	add	sp, sp, #4
   16230:	pop	{pc}		; (ldr pc, [sp], #4)

00016234 <flatcc_json_printer_uint32@@Base>:
   16234:	str	r4, [sp, #-8]!
   16238:	mov	r4, r0
   1623c:	mov	r0, r1
   16240:	ldr	r1, [r4, #20]
   16244:	str	lr, [sp, #4]
   16248:	bl	13c98 <test_print@@Base+0x414>
   1624c:	ldr	r3, [r4, #20]
   16250:	add	r0, r3, r0
   16254:	str	r0, [r4, #20]
   16258:	ldr	r4, [sp]
   1625c:	add	sp, sp, #4
   16260:	pop	{pc}		; (ldr pc, [sp], #4)

00016264 <flatcc_json_printer_uint64@@Base>:
   16264:	str	r4, [sp, #-8]!
   16268:	mov	r4, r0
   1626c:	mov	r1, r3
   16270:	mov	r0, r2
   16274:	ldr	r2, [r4, #20]
   16278:	str	lr, [sp, #4]
   1627c:	bl	13fac <test_print@@Base+0x728>
   16280:	ldr	r3, [r4, #20]
   16284:	add	r0, r3, r0
   16288:	str	r0, [r4, #20]
   1628c:	ldr	r4, [sp]
   16290:	add	sp, sp, #4
   16294:	pop	{pc}		; (ldr pc, [sp], #4)

00016298 <flatcc_json_printer_int8@@Base>:
   16298:	cmp	r1, #0
   1629c:	lsr	r2, r1, #31
   162a0:	uxtb	r1, r1
   162a4:	strd	r4, [sp, #-16]!
   162a8:	str	r6, [sp, #8]
   162ac:	str	lr, [sp, #12]
   162b0:	ldr	r4, [r0, #20]
   162b4:	bge	162d0 <flatcc_json_printer_int8@@Base+0x38>
   162b8:	mov	ip, r4
   162bc:	mov	r3, #45	; 0x2d
   162c0:	rsb	r1, r1, #0
   162c4:	uxtb	r1, r1
   162c8:	strb	r3, [ip], #1
   162cc:	mov	r4, ip
   162d0:	cmp	r1, #99	; 0x63
   162d4:	bhi	16314 <flatcc_json_printer_int8@@Base+0x7c>
   162d8:	cmp	r1, #9
   162dc:	bhi	16364 <flatcc_json_printer_int8@@Base+0xcc>
   162e0:	add	r1, r1, #48	; 0x30
   162e4:	mov	lr, #0
   162e8:	mov	r5, #1
   162ec:	strb	r1, [r4]
   162f0:	strb	lr, [r4, #1]
   162f4:	ldr	r3, [r0, #20]
   162f8:	add	r2, r2, r5
   162fc:	ldrd	r4, [sp]
   16300:	ldr	r6, [sp, #8]
   16304:	add	sp, sp, #12
   16308:	add	r3, r3, r2
   1630c:	str	r3, [r0, #20]
   16310:	pop	{pc}		; (ldr pc, [sp], #4)
   16314:	movw	ip, #34079	; 0x851f
   16318:	movt	ip, #20971	; 0x51eb
   1631c:	mov	r3, #100	; 0x64
   16320:	mov	lr, #0
   16324:	umull	r5, ip, ip, r1
   16328:	mov	r6, #49	; 0x31
   1632c:	mov	r5, #3
   16330:	strb	lr, [r4, #3]
   16334:	movw	lr, #10976	; 0x2ae0
   16338:	movt	lr, #2
   1633c:	lsr	ip, ip, #5
   16340:	mls	r1, r3, ip, r1
   16344:	uxtb	r1, r1
   16348:	ldrb	r3, [lr, r1, lsl #1]
   1634c:	add	r1, lr, r1, lsl #1
   16350:	strb	r3, [r4, #1]
   16354:	ldrb	r3, [r1, #1]
   16358:	strb	r6, [r4]
   1635c:	strb	r3, [r4, #2]
   16360:	b	162f4 <flatcc_json_printer_int8@@Base+0x5c>
   16364:	mov	r3, #0
   16368:	sxth	r1, r1
   1636c:	movw	lr, #10976	; 0x2ae0
   16370:	movt	lr, #2
   16374:	strb	r3, [r4, #2]
   16378:	add	r3, lr, r1, lsl #1
   1637c:	mov	r5, #2
   16380:	ldrb	r1, [lr, r1, lsl #1]
   16384:	strb	r1, [r4]
   16388:	ldrb	r3, [r3, #1]
   1638c:	strb	r3, [r4, #1]
   16390:	b	162f4 <flatcc_json_printer_int8@@Base+0x5c>

00016394 <flatcc_json_printer_int16@@Base>:
   16394:	cmp	r1, #0
   16398:	strd	r4, [sp, #-16]!
   1639c:	mov	r4, r0
   163a0:	lsr	r5, r1, #31
   163a4:	uxth	r0, r1
   163a8:	ldr	r1, [r4, #20]
   163ac:	str	r6, [sp, #8]
   163b0:	str	lr, [sp, #12]
   163b4:	bge	163c8 <flatcc_json_printer_int16@@Base+0x34>
   163b8:	rsb	r0, r0, #0
   163bc:	mov	r3, #45	; 0x2d
   163c0:	uxth	r0, r0
   163c4:	strb	r3, [r1], #1
   163c8:	bl	13b40 <test_print@@Base+0x2bc>
   163cc:	ldr	r3, [r4, #20]
   163d0:	add	r0, r5, r0
   163d4:	ldr	r6, [sp, #8]
   163d8:	add	r3, r3, r0
   163dc:	str	r3, [r4, #20]
   163e0:	ldrd	r4, [sp]
   163e4:	add	sp, sp, #12
   163e8:	pop	{pc}		; (ldr pc, [sp], #4)

000163ec <flatcc_json_printer_int32@@Base>:
   163ec:	cmp	r1, #0
   163f0:	mov	r3, r1
   163f4:	strd	r4, [sp, #-16]!
   163f8:	lsr	r5, r1, #31
   163fc:	mov	r4, r0
   16400:	ldr	r1, [r0, #20]
   16404:	str	r6, [sp, #8]
   16408:	str	lr, [sp, #12]
   1640c:	bge	1641c <flatcc_json_printer_int32@@Base+0x30>
   16410:	mov	r2, #45	; 0x2d
   16414:	rsb	r3, r3, #0
   16418:	strb	r2, [r1], #1
   1641c:	mov	r0, r3
   16420:	bl	13c98 <test_print@@Base+0x414>
   16424:	ldr	r3, [r4, #20]
   16428:	add	r0, r5, r0
   1642c:	ldr	r6, [sp, #8]
   16430:	add	r3, r3, r0
   16434:	str	r3, [r4, #20]
   16438:	ldrd	r4, [sp]
   1643c:	add	sp, sp, #12
   16440:	pop	{pc}		; (ldr pc, [sp], #4)

00016444 <flatcc_json_printer_int64@@Base>:
   16444:	cmp	r2, #0
   16448:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1644c:	mov	r5, r3
   16450:	sbcs	r3, r3, #0
   16454:	mov	r4, r2
   16458:	ldr	r2, [r0, #20]
   1645c:	strd	r6, [sp, #8]
   16460:	mov	r6, r0
   16464:	lsr	r7, r5, #31
   16468:	str	r8, [sp, #16]
   1646c:	str	lr, [sp, #20]
   16470:	bge	16484 <flatcc_json_printer_int64@@Base+0x40>
   16474:	rsbs	r4, r4, #0
   16478:	mov	r3, #45	; 0x2d
   1647c:	rsc	r5, r5, #0
   16480:	strb	r3, [r2], #1
   16484:	mov	r0, r4
   16488:	mov	r1, r5
   1648c:	bl	13fac <test_print@@Base+0x728>
   16490:	ldr	r3, [r6, #20]
   16494:	add	r0, r7, r0
   16498:	ldrd	r4, [sp]
   1649c:	ldr	r8, [sp, #16]
   164a0:	add	r3, r3, r0
   164a4:	str	r3, [r6, #20]
   164a8:	ldrd	r6, [sp, #8]
   164ac:	add	sp, sp, #20
   164b0:	pop	{pc}		; (ldr pc, [sp], #4)

000164b4 <flatcc_json_printer_float@@Base>:
   164b4:	vcvt.f64.f32	d0, s0
   164b8:	str	r4, [sp, #-8]!
   164bc:	mov	r4, r0
   164c0:	ldr	r0, [r0, #20]
   164c4:	str	lr, [sp, #4]
   164c8:	bl	14e70 <test_print@@Base+0x15ec>
   164cc:	ldr	r3, [r4, #20]
   164d0:	add	r0, r3, r0
   164d4:	str	r0, [r4, #20]
   164d8:	ldr	r4, [sp]
   164dc:	add	sp, sp, #4
   164e0:	pop	{pc}		; (ldr pc, [sp], #4)

000164e4 <flatcc_json_printer_double@@Base>:
   164e4:	str	r4, [sp, #-8]!
   164e8:	mov	r4, r0
   164ec:	ldr	r0, [r0, #20]
   164f0:	str	lr, [sp, #4]
   164f4:	bl	14e70 <test_print@@Base+0x15ec>
   164f8:	ldr	r3, [r4, #20]
   164fc:	add	r0, r3, r0
   16500:	str	r0, [r4, #20]
   16504:	ldr	r4, [sp]
   16508:	add	sp, sp, #4
   1650c:	pop	{pc}		; (ldr pc, [sp], #4)

00016510 <flatcc_json_printer_enum@@Base>:
   16510:	ldr	r3, [r0, #20]
   16514:	mov	ip, #34	; 0x22
   16518:	strd	r4, [sp, #-16]!
   1651c:	mov	r4, r0
   16520:	str	r6, [sp, #8]
   16524:	str	lr, [sp, #12]
   16528:	strb	ip, [r3]
   1652c:	ldrb	ip, [r0, #26]
   16530:	ldr	lr, [r0, #16]
   16534:	ldr	r3, [r0, #20]
   16538:	cmp	ip, #0
   1653c:	addeq	r3, r3, #1
   16540:	add	ip, r3, r2
   16544:	cmp	lr, ip
   16548:	str	r3, [r0, #20]
   1654c:	bls	16594 <flatcc_json_printer_enum@@Base+0x84>
   16550:	mov	r0, r3
   16554:	mov	r5, r2
   16558:	bl	12428 <memcpy@plt>
   1655c:	ldr	r2, [r4, #20]
   16560:	add	r2, r2, r5
   16564:	str	r2, [r4, #20]
   16568:	mov	r3, #34	; 0x22
   1656c:	strb	r3, [r2]
   16570:	ldrb	r2, [r4, #26]
   16574:	ldr	r3, [r4, #20]
   16578:	ldr	r6, [sp, #8]
   1657c:	cmp	r2, #0
   16580:	addeq	r3, r3, #1
   16584:	str	r3, [r4, #20]
   16588:	ldrd	r4, [sp]
   1658c:	add	sp, sp, #12
   16590:	pop	{pc}		; (ldr pc, [sp], #4)
   16594:	bl	14660 <test_print@@Base+0xddc>
   16598:	ldr	r2, [r4, #20]
   1659c:	b	16568 <flatcc_json_printer_enum@@Base+0x58>

000165a0 <flatcc_json_printer_delimit_enum_flags@@Base>:
   165a0:	ldr	r3, [r0, #20]
   165a4:	mov	ip, #34	; 0x22
   165a8:	adds	r1, r1, #0
   165ac:	movne	r1, #1
   165b0:	ldrb	r2, [r0, #26]
   165b4:	strb	ip, [r3]
   165b8:	ldr	r3, [r0, #20]
   165bc:	cmp	r2, #0
   165c0:	moveq	r1, #1
   165c4:	add	r3, r3, r1
   165c8:	str	r3, [r0, #20]
   165cc:	bx	lr

000165d0 <flatcc_json_printer_enum_flag@@Base>:
   165d0:	strd	r4, [sp, #-16]!
   165d4:	mov	r5, #32
   165d8:	mov	r4, r2
   165dc:	str	r6, [sp, #8]
   165e0:	str	lr, [sp, #12]
   165e4:	ldr	lr, [r0, #20]
   165e8:	strb	r5, [lr]
   165ec:	ldr	r5, [r0, #16]
   165f0:	ldr	lr, [r0, #20]
   165f4:	cmp	r1, #0
   165f8:	addgt	lr, lr, #1
   165fc:	add	r2, lr, r3
   16600:	cmp	r5, r2
   16604:	str	lr, [r0, #20]
   16608:	bhi	16628 <flatcc_json_printer_enum_flag@@Base+0x58>
   1660c:	mov	r1, r4
   16610:	mov	r2, r3
   16614:	ldrd	r4, [sp]
   16618:	ldr	r6, [sp, #8]
   1661c:	ldr	lr, [sp, #12]
   16620:	add	sp, sp, #16
   16624:	b	14660 <test_print@@Base+0xddc>
   16628:	mov	r1, r4
   1662c:	mov	r2, r3
   16630:	mov	r4, r0
   16634:	mov	r0, lr
   16638:	mov	r5, r3
   1663c:	bl	12428 <memcpy@plt>
   16640:	ldr	r3, [r4, #20]
   16644:	ldr	r6, [sp, #8]
   16648:	add	r3, r3, r5
   1664c:	str	r3, [r4, #20]
   16650:	ldrd	r4, [sp]
   16654:	add	sp, sp, #12
   16658:	pop	{pc}		; (ldr pc, [sp], #4)

0001665c <flatcc_json_printer_string_field@@Base>:
   1665c:	ldr	ip, [r1, #8]
   16660:	add	r2, r2, #2
   16664:	lsl	r2, r2, #1
   16668:	strd	r4, [sp, #-32]!	; 0xffffffe0
   1666c:	strd	r6, [sp, #8]
   16670:	strd	r8, [sp, #16]
   16674:	str	sl, [sp, #24]
   16678:	cmp	r2, ip
   1667c:	str	lr, [sp, #28]
   16680:	ldr	r7, [sp, #32]
   16684:	bge	167b0 <flatcc_json_printer_string_field@@Base+0x154>
   16688:	ldr	ip, [r1, #4]
   1668c:	ldrh	r5, [ip, r2]
   16690:	cmp	r5, #0
   16694:	beq	167b0 <flatcc_json_printer_string_field@@Base+0x154>
   16698:	ldr	r6, [r1]
   1669c:	adds	r8, r6, r5
   166a0:	beq	167b0 <flatcc_json_printer_string_field@@Base+0x154>
   166a4:	ldr	ip, [r1, #16]
   166a8:	ldr	r2, [r0, #20]
   166ac:	cmp	ip, #0
   166b0:	add	ip, ip, #1
   166b4:	str	ip, [r1, #16]
   166b8:	beq	166d0 <flatcc_json_printer_string_field@@Base+0x74>
   166bc:	add	ip, r2, #1
   166c0:	mov	r1, #44	; 0x2c
   166c4:	str	ip, [r0, #20]
   166c8:	strb	r1, [r2]
   166cc:	ldr	r2, [r0, #20]
   166d0:	mov	r9, r3
   166d4:	mov	r4, r0
   166d8:	ldrb	r1, [r0, #25]
   166dc:	cmp	r1, #0
   166e0:	bne	167f0 <flatcc_json_printer_string_field@@Base+0x194>
   166e4:	ldr	r3, [r0, #16]
   166e8:	cmp	r3, r2
   166ec:	bls	167e0 <flatcc_json_printer_string_field@@Base+0x184>
   166f0:	mov	r3, #34	; 0x22
   166f4:	strb	r3, [r2]
   166f8:	ldrb	r3, [r4, #26]
   166fc:	ldr	r2, [r4, #16]
   16700:	ldr	r0, [r4, #20]
   16704:	cmp	r3, #0
   16708:	addeq	r0, r0, #1
   1670c:	add	r3, r0, r7
   16710:	cmp	r2, r3
   16714:	str	r0, [r4, #20]
   16718:	bls	167c8 <flatcc_json_printer_string_field@@Base+0x16c>
   1671c:	mov	r2, r7
   16720:	mov	r1, r9
   16724:	bl	12428 <memcpy@plt>
   16728:	ldr	r3, [r4, #20]
   1672c:	add	r7, r3, r7
   16730:	str	r7, [r4, #20]
   16734:	mov	r3, #34	; 0x22
   16738:	mov	lr, #58	; 0x3a
   1673c:	mov	ip, #32
   16740:	mov	r0, r4
   16744:	strb	r3, [r7]
   16748:	ldrb	r3, [r4, #26]
   1674c:	ldr	r1, [r4, #20]
   16750:	clz	r3, r3
   16754:	lsr	r3, r3, #5
   16758:	add	r2, r1, r3
   1675c:	add	r2, r2, #1
   16760:	str	r2, [r4, #20]
   16764:	strb	lr, [r1, r3]
   16768:	ldr	r3, [r4, #20]
   1676c:	strb	ip, [r3]
   16770:	ldrb	r1, [r4, #25]
   16774:	ldr	r3, [r4, #20]
   16778:	ldr	r2, [r6, r5]
   1677c:	ldrd	r6, [sp, #8]
   16780:	cmp	r1, #0
   16784:	addne	r3, r3, #1
   16788:	ldr	sl, [sp, #24]
   1678c:	add	r1, r8, r2
   16790:	add	r1, r1, #4
   16794:	ldr	r2, [r8, r2]
   16798:	ldrd	r8, [sp, #16]
   1679c:	ldr	lr, [sp, #28]
   167a0:	str	r3, [r4, #20]
   167a4:	ldrd	r4, [sp]
   167a8:	add	sp, sp, #32
   167ac:	b	14abc <test_print@@Base+0x1238>
   167b0:	ldrd	r4, [sp]
   167b4:	ldrd	r6, [sp, #8]
   167b8:	ldrd	r8, [sp, #16]
   167bc:	ldr	sl, [sp, #24]
   167c0:	add	sp, sp, #28
   167c4:	pop	{pc}		; (ldr pc, [sp], #4)
   167c8:	mov	r2, r7
   167cc:	mov	r1, r9
   167d0:	mov	r0, r4
   167d4:	bl	14660 <test_print@@Base+0xddc>
   167d8:	ldr	r7, [r4, #20]
   167dc:	b	16734 <flatcc_json_printer_string_field@@Base+0xd8>
   167e0:	ldr	r3, [r0, #44]	; 0x2c
   167e4:	blx	r3
   167e8:	ldr	r2, [r4, #20]
   167ec:	b	166f0 <flatcc_json_printer_string_field@@Base+0x94>
   167f0:	add	r1, r2, #1
   167f4:	mov	r3, #10
   167f8:	str	r1, [r0, #20]
   167fc:	strb	r3, [r2]
   16800:	ldrb	r3, [r0, #25]
   16804:	ldr	r2, [r4, #32]
   16808:	ldr	r1, [r0, #16]
   1680c:	ldr	r0, [r0, #20]
   16810:	mul	sl, r2, r3
   16814:	add	r3, r0, sl
   16818:	cmp	r1, r3
   1681c:	bcs	16834 <flatcc_json_printer_string_field@@Base+0x1d8>
   16820:	mov	r1, sl
   16824:	mov	r0, r4
   16828:	bl	14724 <test_print@@Base+0xea0>
   1682c:	ldr	r2, [r4, #20]
   16830:	b	166f0 <flatcc_json_printer_string_field@@Base+0x94>
   16834:	mov	r2, sl
   16838:	mov	r1, #32
   1683c:	bl	124c4 <memset@plt>
   16840:	ldr	r2, [r4, #20]
   16844:	add	r2, r2, sl
   16848:	str	r2, [r4, #20]
   1684c:	b	166f0 <flatcc_json_printer_string_field@@Base+0x94>

00016850 <flatcc_json_printer_uint8_vector_base64_field@@Base>:
   16850:	ldr	ip, [r1, #8]
   16854:	add	r2, r2, #2
   16858:	lsl	r2, r2, #1
   1685c:	strd	r4, [sp, #-36]!	; 0xffffffdc
   16860:	strd	r6, [sp, #8]
   16864:	strd	r8, [sp, #16]
   16868:	strd	sl, [sp, #24]
   1686c:	cmp	r2, ip
   16870:	str	lr, [sp, #32]
   16874:	sub	sp, sp, #4
   16878:	ldr	r5, [sp, #40]	; 0x28
   1687c:	bge	16c88 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x438>
   16880:	ldr	ip, [r1, #4]
   16884:	ldrh	r7, [ip, r2]
   16888:	cmp	r7, #0
   1688c:	beq	16c88 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x438>
   16890:	ldr	r6, [r1]
   16894:	adds	r8, r6, r7
   16898:	beq	16c88 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x438>
   1689c:	ldr	ip, [r1, #16]
   168a0:	ldr	r2, [r0, #20]
   168a4:	cmp	ip, #0
   168a8:	add	ip, ip, #1
   168ac:	str	ip, [r1, #16]
   168b0:	beq	168c8 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x78>
   168b4:	add	ip, r2, #1
   168b8:	mov	r1, #44	; 0x2c
   168bc:	str	ip, [r0, #20]
   168c0:	strb	r1, [r2]
   168c4:	ldr	r2, [r0, #20]
   168c8:	mov	r9, r3
   168cc:	mov	r4, r0
   168d0:	ldrb	r1, [r0, #25]
   168d4:	cmp	r1, #0
   168d8:	bne	16ca4 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x454>
   168dc:	ldr	r3, [r0, #16]
   168e0:	cmp	r2, r3
   168e4:	bcc	168f4 <flatcc_json_printer_uint8_vector_base64_field@@Base+0xa4>
   168e8:	ldr	r3, [r0, #44]	; 0x2c
   168ec:	blx	r3
   168f0:	ldr	r2, [r4, #20]
   168f4:	mov	r3, #34	; 0x22
   168f8:	strb	r3, [r2]
   168fc:	ldrb	r3, [r4, #26]
   16900:	ldr	r2, [r4, #16]
   16904:	ldr	r0, [r4, #20]
   16908:	cmp	r3, #0
   1690c:	addeq	r0, r0, #1
   16910:	add	r3, r0, r5
   16914:	cmp	r2, r3
   16918:	str	r0, [r4, #20]
   1691c:	bls	16d18 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x4c8>
   16920:	mov	r2, r5
   16924:	mov	r1, r9
   16928:	bl	12428 <memcpy@plt>
   1692c:	ldr	r3, [r4, #20]
   16930:	add	r5, r3, r5
   16934:	str	r5, [r4, #20]
   16938:	mov	r1, #34	; 0x22
   1693c:	mov	lr, #58	; 0x3a
   16940:	movw	r2, #43691	; 0xaaab
   16944:	movt	r2, #43690	; 0xaaaa
   16948:	strb	r1, [r5]
   1694c:	mov	r5, #32
   16950:	ldrb	r3, [r4, #26]
   16954:	ldr	ip, [r4, #20]
   16958:	clz	r3, r3
   1695c:	lsr	r3, r3, #5
   16960:	add	r0, ip, r3
   16964:	add	r0, r0, #1
   16968:	str	r0, [r4, #20]
   1696c:	strb	lr, [ip, r3]
   16970:	ldr	r3, [r4, #20]
   16974:	strb	r5, [r3]
   16978:	ldr	r0, [r6, r7]
   1697c:	ldrb	r3, [r4, #25]
   16980:	ldr	ip, [r4, #20]
   16984:	add	r7, r8, r0
   16988:	ldr	r6, [r8, r0]
   1698c:	add	r7, r7, #4
   16990:	adds	r3, r3, #0
   16994:	movne	r3, #1
   16998:	add	r0, ip, r3
   1699c:	add	r0, r0, #1
   169a0:	lsl	r9, r6, #2
   169a4:	str	r0, [r4, #20]
   169a8:	strb	r1, [ip, r3]
   169ac:	umull	r3, r9, r2, r9
   169b0:	ldr	r3, [r4, #16]
   169b4:	ldr	r2, [r4, #20]
   169b8:	lsr	r9, r9, #1
   169bc:	add	r9, r9, #3
   169c0:	bic	r9, r9, #3
   169c4:	add	r1, r2, r9
   169c8:	cmp	r1, r3
   169cc:	bcc	169ec <flatcc_json_printer_uint8_vector_base64_field@@Base+0x19c>
   169d0:	mov	r1, #0
   169d4:	mov	r0, r4
   169d8:	ldr	r3, [r4, #44]	; 0x2c
   169dc:	blx	r3
   169e0:	ldr	r3, [r4, #16]
   169e4:	ldr	r2, [r4, #20]
   169e8:	add	r1, r2, r9
   169ec:	cmp	r3, r1
   169f0:	bcs	16b80 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x330>
   169f4:	sub	r3, r3, r2
   169f8:	bic	r3, r3, #3
   169fc:	add	ip, r3, r3, lsl #1
   16a00:	cmp	ip, #3
   16a04:	lsr	ip, ip, #2
   16a08:	bls	16b64 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x314>
   16a0c:	ldr	r0, [sp, #44]	; 0x2c
   16a10:	movw	r1, #13156	; 0x3364
   16a14:	movt	r1, #2
   16a18:	movw	r5, #13224	; 0x33a8
   16a1c:	movt	r5, #2
   16a20:	movw	r8, #43691	; 0xaaab
   16a24:	movt	r8, #43690	; 0xaaaa
   16a28:	cmp	r0, #0
   16a2c:	moveq	r5, r1
   16a30:	cmp	ip, #2
   16a34:	bls	16d0c <flatcc_json_printer_uint8_vector_base64_field@@Base+0x4bc>
   16a38:	add	lr, r2, #4
   16a3c:	add	r1, r7, #3
   16a40:	mov	sl, ip
   16a44:	ldrb	r9, [r1, #-3]
   16a48:	sub	sl, sl, #3
   16a4c:	mov	r0, r1
   16a50:	cmp	sl, #2
   16a54:	mov	r2, lr
   16a58:	add	r1, r1, #3
   16a5c:	add	lr, lr, #4
   16a60:	ldrb	r9, [r5, r9, lsr #2]
   16a64:	strb	r9, [lr, #-8]
   16a68:	ldrb	r9, [r1, #-6]
   16a6c:	ldrb	fp, [r1, #-5]
   16a70:	lsl	r9, r9, #4
   16a74:	and	r9, r9, #48	; 0x30
   16a78:	orr	r9, r9, fp, lsr #4
   16a7c:	ldrb	r9, [r5, r9]
   16a80:	strb	r9, [lr, #-7]
   16a84:	ldrb	r9, [r1, #-5]
   16a88:	ldrb	fp, [r1, #-4]
   16a8c:	lsl	r9, r9, #2
   16a90:	and	r9, r9, #60	; 0x3c
   16a94:	orr	r9, r9, fp, lsr #6
   16a98:	ldrb	r9, [r5, r9]
   16a9c:	strb	r9, [lr, #-6]
   16aa0:	ldrb	r9, [r1, #-4]
   16aa4:	and	r9, r9, #63	; 0x3f
   16aa8:	ldrb	r9, [r5, r9]
   16aac:	strb	r9, [lr, #-5]
   16ab0:	bhi	16a44 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x1f4>
   16ab4:	cmp	sl, #1
   16ab8:	beq	16ce8 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x498>
   16abc:	cmp	sl, #2
   16ac0:	bne	16b00 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x2b0>
   16ac4:	ldrb	r1, [r0]
   16ac8:	ldrb	r1, [r5, r1, lsr #2]
   16acc:	strb	r1, [r2]
   16ad0:	ldrb	r1, [r0]
   16ad4:	ldrb	lr, [r0, #1]
   16ad8:	lsl	r1, r1, #4
   16adc:	and	r1, r1, #48	; 0x30
   16ae0:	orr	r1, r1, lr, lsr #4
   16ae4:	ldrb	r1, [r5, r1]
   16ae8:	strb	r1, [r2, #1]
   16aec:	ldrb	r1, [r0, #1]
   16af0:	lsl	r1, r1, #2
   16af4:	and	r1, r1, #60	; 0x3c
   16af8:	ldrb	r1, [r5, r1]
   16afc:	strb	r1, [r2, #2]
   16b00:	ldr	r2, [r4, #20]
   16b04:	mov	r1, #0
   16b08:	sub	r6, r6, ip
   16b0c:	mov	r0, r4
   16b10:	add	r7, r7, ip
   16b14:	ldr	r9, [r4, #44]	; 0x2c
   16b18:	add	r3, r2, r3
   16b1c:	str	r3, [r4, #20]
   16b20:	blx	r9
   16b24:	lsl	r9, r6, #2
   16b28:	ldr	r3, [r4, #16]
   16b2c:	ldr	r2, [r4, #20]
   16b30:	umull	r1, r9, r8, r9
   16b34:	lsr	r9, r9, #1
   16b38:	add	r9, r9, #3
   16b3c:	bic	r9, r9, #3
   16b40:	add	r1, r2, r9
   16b44:	cmp	r3, r1
   16b48:	bcs	16b80 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x330>
   16b4c:	sub	r3, r3, r2
   16b50:	bic	r3, r3, #3
   16b54:	add	ip, r3, r3, lsl #1
   16b58:	cmp	ip, #3
   16b5c:	lsr	ip, ip, #2
   16b60:	bhi	16a30 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x1e0>
   16b64:	movw	r1, #13292	; 0x33ec
   16b68:	movt	r1, #2
   16b6c:	ldr	r3, [pc, #520]	; 16d7c <flatcc_json_printer_uint8_vector_base64_field@@Base+0x52c>
   16b70:	movw	r0, #13368	; 0x3438
   16b74:	movt	r0, #2
   16b78:	movw	r2, #277	; 0x115
   16b7c:	bl	1250c <__assert_fail@plt>
   16b80:	ldr	r0, [sp, #44]	; 0x2c
   16b84:	movw	r3, #13224	; 0x33a8
   16b88:	movt	r3, #2
   16b8c:	movw	r1, #13156	; 0x3364
   16b90:	movt	r1, #2
   16b94:	cmp	r0, #0
   16b98:	movne	r1, r3
   16b9c:	cmp	r6, #2
   16ba0:	bls	16c1c <flatcc_json_printer_uint8_vector_base64_field@@Base+0x3cc>
   16ba4:	add	ip, r2, #4
   16ba8:	add	r3, r7, #3
   16bac:	ldrb	r0, [r3, #-3]
   16bb0:	sub	r6, r6, #3
   16bb4:	mov	r7, r3
   16bb8:	cmp	r6, #2
   16bbc:	mov	r2, ip
   16bc0:	add	r3, r3, #3
   16bc4:	add	ip, ip, #4
   16bc8:	ldrb	r0, [r1, r0, lsr #2]
   16bcc:	strb	r0, [ip, #-8]
   16bd0:	ldrb	r0, [r3, #-6]
   16bd4:	ldrb	lr, [r3, #-5]
   16bd8:	lsl	r0, r0, #4
   16bdc:	and	r0, r0, #48	; 0x30
   16be0:	orr	r0, r0, lr, lsr #4
   16be4:	ldrb	r0, [r1, r0]
   16be8:	strb	r0, [ip, #-7]
   16bec:	ldrb	r0, [r3, #-5]
   16bf0:	ldrb	lr, [r3, #-4]
   16bf4:	lsl	r0, r0, #2
   16bf8:	and	r0, r0, #60	; 0x3c
   16bfc:	orr	r0, r0, lr, lsr #6
   16c00:	ldrb	r0, [r1, r0]
   16c04:	strb	r0, [ip, #-6]
   16c08:	ldrb	r0, [r3, #-4]
   16c0c:	and	r0, r0, #63	; 0x3f
   16c10:	ldrb	r0, [r1, r0]
   16c14:	strb	r0, [ip, #-5]
   16c18:	bhi	16bac <flatcc_json_printer_uint8_vector_base64_field@@Base+0x35c>
   16c1c:	cmp	r6, #1
   16c20:	beq	16d4c <flatcc_json_printer_uint8_vector_base64_field@@Base+0x4fc>
   16c24:	cmp	r6, #2
   16c28:	bne	16c70 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x420>
   16c2c:	ldrb	r3, [r7]
   16c30:	mov	r0, #61	; 0x3d
   16c34:	ldrb	r3, [r1, r3, lsr #2]
   16c38:	strb	r3, [r2]
   16c3c:	ldrb	r3, [r7]
   16c40:	ldrb	ip, [r7, #1]
   16c44:	lsl	r3, r3, #4
   16c48:	and	r3, r3, #48	; 0x30
   16c4c:	orr	r3, r3, ip, lsr #4
   16c50:	ldrb	r3, [r1, r3]
   16c54:	strb	r3, [r2, #1]
   16c58:	ldrb	r3, [r7, #1]
   16c5c:	lsl	r3, r3, #2
   16c60:	and	r3, r3, #60	; 0x3c
   16c64:	ldrb	r3, [r1, r3]
   16c68:	strb	r3, [r2, #2]
   16c6c:	strb	r0, [r2, #3]
   16c70:	ldr	r2, [r4, #20]
   16c74:	mov	r1, #34	; 0x22
   16c78:	add	r3, r2, r9
   16c7c:	add	r3, r3, #1
   16c80:	str	r3, [r4, #20]
   16c84:	strb	r1, [r2, r9]
   16c88:	add	sp, sp, #4
   16c8c:	ldrd	r4, [sp]
   16c90:	ldrd	r6, [sp, #8]
   16c94:	ldrd	r8, [sp, #16]
   16c98:	ldrd	sl, [sp, #24]
   16c9c:	add	sp, sp, #32
   16ca0:	pop	{pc}		; (ldr pc, [sp], #4)
   16ca4:	add	r1, r2, #1
   16ca8:	mov	r3, #10
   16cac:	str	r1, [r0, #20]
   16cb0:	strb	r3, [r2]
   16cb4:	ldrb	r3, [r0, #25]
   16cb8:	ldr	r2, [r4, #32]
   16cbc:	ldr	r1, [r0, #16]
   16cc0:	ldr	r0, [r0, #20]
   16cc4:	mul	sl, r2, r3
   16cc8:	add	r3, r0, sl
   16ccc:	cmp	r1, r3
   16cd0:	bcs	16d30 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x4e0>
   16cd4:	mov	r1, sl
   16cd8:	mov	r0, r4
   16cdc:	bl	14724 <test_print@@Base+0xea0>
   16ce0:	ldr	r2, [r4, #20]
   16ce4:	b	168f4 <flatcc_json_printer_uint8_vector_base64_field@@Base+0xa4>
   16ce8:	ldrb	r1, [r0]
   16cec:	ldrb	r1, [r5, r1, lsr #2]
   16cf0:	strb	r1, [r2]
   16cf4:	ldrb	r1, [r0]
   16cf8:	lsl	r1, r1, #4
   16cfc:	and	r1, r1, #48	; 0x30
   16d00:	ldrb	r1, [r5, r1]
   16d04:	strb	r1, [r2, #1]
   16d08:	b	16b00 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x2b0>
   16d0c:	mov	sl, ip
   16d10:	mov	r0, r7
   16d14:	b	16ab4 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x264>
   16d18:	mov	r2, r5
   16d1c:	mov	r1, r9
   16d20:	mov	r0, r4
   16d24:	bl	14660 <test_print@@Base+0xddc>
   16d28:	ldr	r5, [r4, #20]
   16d2c:	b	16938 <flatcc_json_printer_uint8_vector_base64_field@@Base+0xe8>
   16d30:	mov	r2, sl
   16d34:	mov	r1, #32
   16d38:	bl	124c4 <memset@plt>
   16d3c:	ldr	r2, [r4, #20]
   16d40:	add	r2, r2, sl
   16d44:	str	r2, [r4, #20]
   16d48:	b	168f4 <flatcc_json_printer_uint8_vector_base64_field@@Base+0xa4>
   16d4c:	ldrb	r3, [r7]
   16d50:	mov	r0, #61	; 0x3d
   16d54:	ldrb	r3, [r1, r3, lsr #2]
   16d58:	strb	r3, [r2]
   16d5c:	ldrb	r3, [r7]
   16d60:	lsl	r3, r3, #4
   16d64:	and	r3, r3, #48	; 0x30
   16d68:	ldrb	r3, [r1, r3]
   16d6c:	strb	r3, [r2, #1]
   16d70:	strb	r0, [r2, #2]
   16d74:	strb	r0, [r2, #3]
   16d78:	b	16c70 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x420>
   16d7c:	andeq	r3, r2, r4, lsr #3

00016d80 <flatcc_json_printer_uint8_field@@Base>:
   16d80:	ldr	ip, [r1, #8]
   16d84:	add	r2, r2, #2
   16d88:	lsl	r2, r2, #1
   16d8c:	strd	r4, [sp, #-24]!	; 0xffffffe8
   16d90:	strd	r6, [sp, #8]
   16d94:	str	r8, [sp, #16]
   16d98:	str	lr, [sp, #20]
   16d9c:	cmp	r2, ip
   16da0:	ldrb	lr, [sp, #28]
   16da4:	ldr	r6, [sp, #24]
   16da8:	bge	16f04 <flatcc_json_printer_uint8_field@@Base+0x184>
   16dac:	ldr	ip, [r1, #4]
   16db0:	ldrh	r2, [ip, r2]
   16db4:	cmp	r2, #0
   16db8:	beq	16f04 <flatcc_json_printer_uint8_field@@Base+0x184>
   16dbc:	ldr	ip, [r1]
   16dc0:	cmn	ip, r2
   16dc4:	beq	16f04 <flatcc_json_printer_uint8_field@@Base+0x184>
   16dc8:	ldrb	r5, [ip, r2]
   16dcc:	cmp	lr, r5
   16dd0:	beq	16fe0 <flatcc_json_printer_uint8_field@@Base+0x260>
   16dd4:	ldr	ip, [r1, #16]
   16dd8:	ldr	r2, [r0, #20]
   16ddc:	cmp	ip, #0
   16de0:	add	ip, ip, #1
   16de4:	str	ip, [r1, #16]
   16de8:	beq	16e00 <flatcc_json_printer_uint8_field@@Base+0x80>
   16dec:	add	ip, r2, #1
   16df0:	mov	r1, #44	; 0x2c
   16df4:	str	ip, [r0, #20]
   16df8:	strb	r1, [r2]
   16dfc:	ldr	r2, [r0, #20]
   16e00:	mov	r7, r3
   16e04:	mov	r4, r0
   16e08:	ldrb	r1, [r0, #25]
   16e0c:	cmp	r1, #0
   16e10:	bne	16f30 <flatcc_json_printer_uint8_field@@Base+0x1b0>
   16e14:	ldr	r3, [r0, #16]
   16e18:	cmp	r3, r2
   16e1c:	bhi	16e2c <flatcc_json_printer_uint8_field@@Base+0xac>
   16e20:	ldr	r3, [r0, #44]	; 0x2c
   16e24:	blx	r3
   16e28:	ldr	r2, [r4, #20]
   16e2c:	mov	r3, #34	; 0x22
   16e30:	strb	r3, [r2]
   16e34:	ldrb	r3, [r4, #26]
   16e38:	ldr	r2, [r4, #16]
   16e3c:	ldr	r0, [r4, #20]
   16e40:	cmp	r3, #0
   16e44:	addeq	r0, r0, #1
   16e48:	add	r3, r0, r6
   16e4c:	cmp	r2, r3
   16e50:	str	r0, [r4, #20]
   16e54:	bls	16f18 <flatcc_json_printer_uint8_field@@Base+0x198>
   16e58:	mov	r2, r6
   16e5c:	mov	r1, r7
   16e60:	bl	12428 <memcpy@plt>
   16e64:	ldr	r3, [r4, #20]
   16e68:	add	r6, r3, r6
   16e6c:	str	r6, [r4, #20]
   16e70:	mov	r3, #34	; 0x22
   16e74:	mov	ip, #58	; 0x3a
   16e78:	mov	r0, #32
   16e7c:	strb	r3, [r6]
   16e80:	ldrb	r3, [r4, #26]
   16e84:	ldr	r1, [r4, #20]
   16e88:	clz	r3, r3
   16e8c:	lsr	r3, r3, #5
   16e90:	add	r2, r1, r3
   16e94:	add	r2, r2, #1
   16e98:	str	r2, [r4, #20]
   16e9c:	strb	ip, [r1, r3]
   16ea0:	ldr	r3, [r4, #20]
   16ea4:	strb	r0, [r3]
   16ea8:	ldrb	r3, [r4, #25]
   16eac:	ldr	r0, [r4, #20]
   16eb0:	adds	r3, r3, #0
   16eb4:	movne	r3, #1
   16eb8:	cmp	r5, #99	; 0x63
   16ebc:	add	r1, r0, r3
   16ec0:	str	r1, [r4, #20]
   16ec4:	bhi	16f90 <flatcc_json_printer_uint8_field@@Base+0x210>
   16ec8:	cmp	r5, #9
   16ecc:	bhi	16ff0 <flatcc_json_printer_uint8_field@@Base+0x270>
   16ed0:	add	r5, r5, #48	; 0x30
   16ed4:	mov	r2, #0
   16ed8:	mov	ip, #1
   16edc:	strb	r2, [r1, #1]
   16ee0:	strb	r5, [r0, r3]
   16ee4:	ldr	r3, [r4, #20]
   16ee8:	add	r3, r3, ip
   16eec:	str	r3, [r4, #20]
   16ef0:	ldrd	r4, [sp]
   16ef4:	ldrd	r6, [sp, #8]
   16ef8:	ldr	r8, [sp, #16]
   16efc:	add	sp, sp, #20
   16f00:	pop	{pc}		; (ldr pc, [sp], #4)
   16f04:	ldrb	r2, [r0, #29]
   16f08:	cmp	r2, #0
   16f0c:	beq	16ef0 <flatcc_json_printer_uint8_field@@Base+0x170>
   16f10:	mov	r5, lr
   16f14:	b	16dd4 <flatcc_json_printer_uint8_field@@Base+0x54>
   16f18:	mov	r2, r6
   16f1c:	mov	r1, r7
   16f20:	mov	r0, r4
   16f24:	bl	14660 <test_print@@Base+0xddc>
   16f28:	ldr	r6, [r4, #20]
   16f2c:	b	16e70 <flatcc_json_printer_uint8_field@@Base+0xf0>
   16f30:	add	r1, r2, #1
   16f34:	mov	r3, #10
   16f38:	str	r1, [r0, #20]
   16f3c:	strb	r3, [r2]
   16f40:	ldrb	r8, [r0, #25]
   16f44:	ldr	r2, [r4, #32]
   16f48:	ldr	r1, [r0, #16]
   16f4c:	ldr	r0, [r0, #20]
   16f50:	mul	r8, r2, r8
   16f54:	add	r3, r0, r8
   16f58:	cmp	r1, r3
   16f5c:	bcs	16f74 <flatcc_json_printer_uint8_field@@Base+0x1f4>
   16f60:	mov	r1, r8
   16f64:	mov	r0, r4
   16f68:	bl	14724 <test_print@@Base+0xea0>
   16f6c:	ldr	r2, [r4, #20]
   16f70:	b	16e2c <flatcc_json_printer_uint8_field@@Base+0xac>
   16f74:	mov	r2, r8
   16f78:	mov	r1, #32
   16f7c:	bl	124c4 <memset@plt>
   16f80:	ldr	r2, [r4, #20]
   16f84:	add	r2, r2, r8
   16f88:	str	r2, [r4, #20]
   16f8c:	b	16e2c <flatcc_json_printer_uint8_field@@Base+0xac>
   16f90:	movw	r2, #34079	; 0x851f
   16f94:	movt	r2, #20971	; 0x51eb
   16f98:	mov	r6, #100	; 0x64
   16f9c:	mov	ip, #0
   16fa0:	umull	lr, r2, r2, r5
   16fa4:	movw	lr, #10976	; 0x2ae0
   16fa8:	movt	lr, #2
   16fac:	strb	ip, [r1, #3]
   16fb0:	mov	ip, #3
   16fb4:	lsr	r2, r2, #5
   16fb8:	mls	r5, r6, r2, r5
   16fbc:	add	r2, r2, #48	; 0x30
   16fc0:	uxtb	r5, r5
   16fc4:	ldrb	r6, [lr, r5, lsl #1]
   16fc8:	add	lr, lr, r5, lsl #1
   16fcc:	strb	r6, [r1, #1]
   16fd0:	ldrb	lr, [lr, #1]
   16fd4:	strb	lr, [r1, #2]
   16fd8:	strb	r2, [r0, r3]
   16fdc:	b	16ee4 <flatcc_json_printer_uint8_field@@Base+0x164>
   16fe0:	ldrb	r2, [r0, #28]
   16fe4:	cmp	r2, #0
   16fe8:	beq	16dd4 <flatcc_json_printer_uint8_field@@Base+0x54>
   16fec:	b	16ef0 <flatcc_json_printer_uint8_field@@Base+0x170>
   16ff0:	mov	ip, #0
   16ff4:	sxth	r5, r5
   16ff8:	movw	r2, #10976	; 0x2ae0
   16ffc:	movt	r2, #2
   17000:	add	lr, r2, r5, lsl #1
   17004:	strb	ip, [r1, #2]
   17008:	mov	ip, #2
   1700c:	ldrb	r2, [r2, r5, lsl #1]
   17010:	strb	r2, [r0, r3]
   17014:	ldrb	r3, [lr, #1]
   17018:	strb	r3, [r1, #1]
   1701c:	b	16ee4 <flatcc_json_printer_uint8_field@@Base+0x164>

00017020 <flatcc_json_printer_uint16_field@@Base>:
   17020:	ldr	ip, [r1, #8]
   17024:	add	r2, r2, #2
   17028:	lsl	r2, r2, #1
   1702c:	strd	r4, [sp, #-24]!	; 0xffffffe8
   17030:	strd	r6, [sp, #8]
   17034:	str	r8, [sp, #16]
   17038:	str	lr, [sp, #20]
   1703c:	cmp	r2, ip
   17040:	ldrh	lr, [sp, #28]
   17044:	ldr	r5, [sp, #24]
   17048:	bge	17188 <flatcc_json_printer_uint16_field@@Base+0x168>
   1704c:	ldr	ip, [r1, #4]
   17050:	ldrh	r2, [ip, r2]
   17054:	cmp	r2, #0
   17058:	beq	17188 <flatcc_json_printer_uint16_field@@Base+0x168>
   1705c:	ldr	ip, [r1]
   17060:	cmn	ip, r2
   17064:	beq	17188 <flatcc_json_printer_uint16_field@@Base+0x168>
   17068:	ldrh	r6, [ip, r2]
   1706c:	cmp	lr, r6
   17070:	beq	17214 <flatcc_json_printer_uint16_field@@Base+0x1f4>
   17074:	ldr	ip, [r1, #16]
   17078:	ldr	r2, [r0, #20]
   1707c:	cmp	ip, #0
   17080:	add	ip, ip, #1
   17084:	str	ip, [r1, #16]
   17088:	beq	170a0 <flatcc_json_printer_uint16_field@@Base+0x80>
   1708c:	add	ip, r2, #1
   17090:	mov	r1, #44	; 0x2c
   17094:	str	ip, [r0, #20]
   17098:	strb	r1, [r2]
   1709c:	ldr	r2, [r0, #20]
   170a0:	mov	r7, r3
   170a4:	mov	r4, r0
   170a8:	ldrb	r1, [r0, #25]
   170ac:	cmp	r1, #0
   170b0:	bne	171b4 <flatcc_json_printer_uint16_field@@Base+0x194>
   170b4:	ldr	r3, [r0, #16]
   170b8:	cmp	r3, r2
   170bc:	bhi	170cc <flatcc_json_printer_uint16_field@@Base+0xac>
   170c0:	ldr	r3, [r0, #44]	; 0x2c
   170c4:	blx	r3
   170c8:	ldr	r2, [r4, #20]
   170cc:	mov	r3, #34	; 0x22
   170d0:	strb	r3, [r2]
   170d4:	ldrb	r3, [r4, #26]
   170d8:	ldr	r2, [r4, #16]
   170dc:	ldr	r0, [r4, #20]
   170e0:	cmp	r3, #0
   170e4:	addeq	r0, r0, #1
   170e8:	add	r3, r0, r5
   170ec:	cmp	r2, r3
   170f0:	str	r0, [r4, #20]
   170f4:	bls	1719c <flatcc_json_printer_uint16_field@@Base+0x17c>
   170f8:	mov	r2, r5
   170fc:	mov	r1, r7
   17100:	bl	12428 <memcpy@plt>
   17104:	ldr	r3, [r4, #20]
   17108:	add	r5, r3, r5
   1710c:	str	r5, [r4, #20]
   17110:	mov	r3, #34	; 0x22
   17114:	mov	lr, #58	; 0x3a
   17118:	mov	ip, #32
   1711c:	mov	r0, r6
   17120:	strb	r3, [r5]
   17124:	ldrb	r3, [r4, #26]
   17128:	ldr	r1, [r4, #20]
   1712c:	clz	r3, r3
   17130:	lsr	r3, r3, #5
   17134:	add	r2, r1, r3
   17138:	add	r2, r2, #1
   1713c:	str	r2, [r4, #20]
   17140:	strb	lr, [r1, r3]
   17144:	ldr	r3, [r4, #20]
   17148:	strb	ip, [r3]
   1714c:	ldrb	r2, [r4, #25]
   17150:	ldr	r3, [r4, #20]
   17154:	cmp	r2, #0
   17158:	addne	r3, r3, #1
   1715c:	mov	r1, r3
   17160:	str	r3, [r4, #20]
   17164:	bl	13b40 <test_print@@Base+0x2bc>
   17168:	ldr	r3, [r4, #20]
   1716c:	add	r0, r3, r0
   17170:	str	r0, [r4, #20]
   17174:	ldrd	r4, [sp]
   17178:	ldrd	r6, [sp, #8]
   1717c:	ldr	r8, [sp, #16]
   17180:	add	sp, sp, #20
   17184:	pop	{pc}		; (ldr pc, [sp], #4)
   17188:	ldrb	r2, [r0, #29]
   1718c:	cmp	r2, #0
   17190:	beq	17174 <flatcc_json_printer_uint16_field@@Base+0x154>
   17194:	mov	r6, lr
   17198:	b	17074 <flatcc_json_printer_uint16_field@@Base+0x54>
   1719c:	mov	r2, r5
   171a0:	mov	r1, r7
   171a4:	mov	r0, r4
   171a8:	bl	14660 <test_print@@Base+0xddc>
   171ac:	ldr	r5, [r4, #20]
   171b0:	b	17110 <flatcc_json_printer_uint16_field@@Base+0xf0>
   171b4:	add	r1, r2, #1
   171b8:	mov	r3, #10
   171bc:	str	r1, [r0, #20]
   171c0:	strb	r3, [r2]
   171c4:	ldrb	r8, [r0, #25]
   171c8:	ldr	r2, [r4, #32]
   171cc:	ldr	r1, [r0, #16]
   171d0:	ldr	r0, [r0, #20]
   171d4:	mul	r8, r2, r8
   171d8:	add	r3, r0, r8
   171dc:	cmp	r1, r3
   171e0:	bcs	171f8 <flatcc_json_printer_uint16_field@@Base+0x1d8>
   171e4:	mov	r1, r8
   171e8:	mov	r0, r4
   171ec:	bl	14724 <test_print@@Base+0xea0>
   171f0:	ldr	r2, [r4, #20]
   171f4:	b	170cc <flatcc_json_printer_uint16_field@@Base+0xac>
   171f8:	mov	r2, r8
   171fc:	mov	r1, #32
   17200:	bl	124c4 <memset@plt>
   17204:	ldr	r2, [r4, #20]
   17208:	add	r2, r2, r8
   1720c:	str	r2, [r4, #20]
   17210:	b	170cc <flatcc_json_printer_uint16_field@@Base+0xac>
   17214:	ldrb	r2, [r0, #28]
   17218:	cmp	r2, #0
   1721c:	beq	17074 <flatcc_json_printer_uint16_field@@Base+0x54>
   17220:	b	17174 <flatcc_json_printer_uint16_field@@Base+0x154>

00017224 <flatcc_json_printer_uint32_field@@Base>:
   17224:	ldr	ip, [r1, #8]
   17228:	add	r2, r2, #2
   1722c:	lsl	r2, r2, #1
   17230:	strd	r4, [sp, #-24]!	; 0xffffffe8
   17234:	strd	r6, [sp, #8]
   17238:	str	r8, [sp, #16]
   1723c:	str	lr, [sp, #20]
   17240:	cmp	r2, ip
   17244:	ldr	r5, [sp, #24]
   17248:	bge	1738c <flatcc_json_printer_uint32_field@@Base+0x168>
   1724c:	ldr	ip, [r1, #4]
   17250:	ldrh	r2, [ip, r2]
   17254:	cmp	r2, #0
   17258:	beq	1738c <flatcc_json_printer_uint32_field@@Base+0x168>
   1725c:	ldr	ip, [r1]
   17260:	cmn	ip, r2
   17264:	beq	1738c <flatcc_json_printer_uint32_field@@Base+0x168>
   17268:	ldr	r6, [ip, r2]
   1726c:	ldr	r2, [sp, #28]
   17270:	cmp	r2, r6
   17274:	beq	17418 <flatcc_json_printer_uint32_field@@Base+0x1f4>
   17278:	ldr	ip, [r1, #16]
   1727c:	ldr	r2, [r0, #20]
   17280:	cmp	ip, #0
   17284:	add	ip, ip, #1
   17288:	str	ip, [r1, #16]
   1728c:	beq	172a4 <flatcc_json_printer_uint32_field@@Base+0x80>
   17290:	add	ip, r2, #1
   17294:	mov	r1, #44	; 0x2c
   17298:	str	ip, [r0, #20]
   1729c:	strb	r1, [r2]
   172a0:	ldr	r2, [r0, #20]
   172a4:	mov	r7, r3
   172a8:	mov	r4, r0
   172ac:	ldrb	r1, [r0, #25]
   172b0:	cmp	r1, #0
   172b4:	bne	173b8 <flatcc_json_printer_uint32_field@@Base+0x194>
   172b8:	ldr	r3, [r0, #16]
   172bc:	cmp	r3, r2
   172c0:	bhi	172d0 <flatcc_json_printer_uint32_field@@Base+0xac>
   172c4:	ldr	r3, [r0, #44]	; 0x2c
   172c8:	blx	r3
   172cc:	ldr	r2, [r4, #20]
   172d0:	mov	r3, #34	; 0x22
   172d4:	strb	r3, [r2]
   172d8:	ldrb	r3, [r4, #26]
   172dc:	ldr	r2, [r4, #16]
   172e0:	ldr	r0, [r4, #20]
   172e4:	cmp	r3, #0
   172e8:	addeq	r0, r0, #1
   172ec:	add	r3, r0, r5
   172f0:	cmp	r2, r3
   172f4:	str	r0, [r4, #20]
   172f8:	bls	173a0 <flatcc_json_printer_uint32_field@@Base+0x17c>
   172fc:	mov	r2, r5
   17300:	mov	r1, r7
   17304:	bl	12428 <memcpy@plt>
   17308:	ldr	r3, [r4, #20]
   1730c:	add	r5, r3, r5
   17310:	str	r5, [r4, #20]
   17314:	mov	r3, #34	; 0x22
   17318:	mov	lr, #58	; 0x3a
   1731c:	mov	ip, #32
   17320:	mov	r0, r6
   17324:	strb	r3, [r5]
   17328:	ldrb	r3, [r4, #26]
   1732c:	ldr	r1, [r4, #20]
   17330:	clz	r3, r3
   17334:	lsr	r3, r3, #5
   17338:	add	r2, r1, r3
   1733c:	add	r2, r2, #1
   17340:	str	r2, [r4, #20]
   17344:	strb	lr, [r1, r3]
   17348:	ldr	r3, [r4, #20]
   1734c:	strb	ip, [r3]
   17350:	ldrb	r2, [r4, #25]
   17354:	ldr	r3, [r4, #20]
   17358:	cmp	r2, #0
   1735c:	addne	r3, r3, #1
   17360:	mov	r1, r3
   17364:	str	r3, [r4, #20]
   17368:	bl	13c98 <test_print@@Base+0x414>
   1736c:	ldr	r3, [r4, #20]
   17370:	add	r0, r3, r0
   17374:	str	r0, [r4, #20]
   17378:	ldrd	r4, [sp]
   1737c:	ldrd	r6, [sp, #8]
   17380:	ldr	r8, [sp, #16]
   17384:	add	sp, sp, #20
   17388:	pop	{pc}		; (ldr pc, [sp], #4)
   1738c:	ldrb	r2, [r0, #29]
   17390:	cmp	r2, #0
   17394:	beq	17378 <flatcc_json_printer_uint32_field@@Base+0x154>
   17398:	ldr	r6, [sp, #28]
   1739c:	b	17278 <flatcc_json_printer_uint32_field@@Base+0x54>
   173a0:	mov	r2, r5
   173a4:	mov	r1, r7
   173a8:	mov	r0, r4
   173ac:	bl	14660 <test_print@@Base+0xddc>
   173b0:	ldr	r5, [r4, #20]
   173b4:	b	17314 <flatcc_json_printer_uint32_field@@Base+0xf0>
   173b8:	add	r1, r2, #1
   173bc:	mov	r3, #10
   173c0:	str	r1, [r0, #20]
   173c4:	strb	r3, [r2]
   173c8:	ldrb	r8, [r0, #25]
   173cc:	ldr	r2, [r4, #32]
   173d0:	ldr	r1, [r0, #16]
   173d4:	ldr	r0, [r0, #20]
   173d8:	mul	r8, r2, r8
   173dc:	add	r3, r0, r8
   173e0:	cmp	r1, r3
   173e4:	bcs	173fc <flatcc_json_printer_uint32_field@@Base+0x1d8>
   173e8:	mov	r1, r8
   173ec:	mov	r0, r4
   173f0:	bl	14724 <test_print@@Base+0xea0>
   173f4:	ldr	r2, [r4, #20]
   173f8:	b	172d0 <flatcc_json_printer_uint32_field@@Base+0xac>
   173fc:	mov	r2, r8
   17400:	mov	r1, #32
   17404:	bl	124c4 <memset@plt>
   17408:	ldr	r2, [r4, #20]
   1740c:	add	r2, r2, r8
   17410:	str	r2, [r4, #20]
   17414:	b	172d0 <flatcc_json_printer_uint32_field@@Base+0xac>
   17418:	ldrb	r2, [r0, #28]
   1741c:	cmp	r2, #0
   17420:	beq	17278 <flatcc_json_printer_uint32_field@@Base+0x54>
   17424:	b	17378 <flatcc_json_printer_uint32_field@@Base+0x154>

00017428 <flatcc_json_printer_uint64_field@@Base>:
   17428:	ldr	ip, [r1, #8]
   1742c:	add	r2, r2, #2
   17430:	lsl	r2, r2, #1
   17434:	strd	r4, [sp, #-32]!	; 0xffffffe0
   17438:	strd	r6, [sp, #8]
   1743c:	strd	r8, [sp, #16]
   17440:	str	sl, [sp, #24]
   17444:	cmp	r2, ip
   17448:	str	lr, [sp, #28]
   1744c:	ldr	r5, [sp, #32]
   17450:	bge	175a0 <flatcc_json_printer_uint64_field@@Base+0x178>
   17454:	ldr	ip, [r1, #4]
   17458:	ldrh	r2, [ip, r2]
   1745c:	cmp	r2, #0
   17460:	beq	175a0 <flatcc_json_printer_uint64_field@@Base+0x178>
   17464:	ldr	ip, [r1]
   17468:	cmn	ip, r2
   1746c:	beq	175a0 <flatcc_json_printer_uint64_field@@Base+0x178>
   17470:	ldrd	r6, [ip, r2]
   17474:	ldrd	r8, [sp, #40]	; 0x28
   17478:	cmp	r9, r7
   1747c:	cmpeq	r8, r6
   17480:	beq	1762c <flatcc_json_printer_uint64_field@@Base+0x204>
   17484:	ldr	ip, [r1, #16]
   17488:	ldr	r2, [r0, #20]
   1748c:	cmp	ip, #0
   17490:	add	ip, ip, #1
   17494:	str	ip, [r1, #16]
   17498:	beq	174b0 <flatcc_json_printer_uint64_field@@Base+0x88>
   1749c:	add	ip, r2, #1
   174a0:	mov	r1, #44	; 0x2c
   174a4:	str	ip, [r0, #20]
   174a8:	strb	r1, [r2]
   174ac:	ldr	r2, [r0, #20]
   174b0:	mov	r8, r3
   174b4:	mov	r4, r0
   174b8:	ldrb	r1, [r0, #25]
   174bc:	cmp	r1, #0
   174c0:	bne	175cc <flatcc_json_printer_uint64_field@@Base+0x1a4>
   174c4:	ldr	r3, [r0, #16]
   174c8:	cmp	r3, r2
   174cc:	bhi	174dc <flatcc_json_printer_uint64_field@@Base+0xb4>
   174d0:	ldr	r3, [r0, #44]	; 0x2c
   174d4:	blx	r3
   174d8:	ldr	r2, [r4, #20]
   174dc:	mov	r3, #34	; 0x22
   174e0:	strb	r3, [r2]
   174e4:	ldrb	r3, [r4, #26]
   174e8:	ldr	r2, [r4, #16]
   174ec:	ldr	r0, [r4, #20]
   174f0:	cmp	r3, #0
   174f4:	addeq	r0, r0, #1
   174f8:	add	r3, r0, r5
   174fc:	cmp	r2, r3
   17500:	str	r0, [r4, #20]
   17504:	bls	175b4 <flatcc_json_printer_uint64_field@@Base+0x18c>
   17508:	mov	r2, r5
   1750c:	mov	r1, r8
   17510:	bl	12428 <memcpy@plt>
   17514:	ldr	r3, [r4, #20]
   17518:	add	r5, r3, r5
   1751c:	str	r5, [r4, #20]
   17520:	mov	r3, #34	; 0x22
   17524:	mov	r0, r6
   17528:	mov	r6, #58	; 0x3a
   1752c:	mov	lr, #32
   17530:	strb	r3, [r5]
   17534:	mov	r1, r7
   17538:	ldrb	r3, [r4, #26]
   1753c:	ldr	ip, [r4, #20]
   17540:	clz	r3, r3
   17544:	lsr	r3, r3, #5
   17548:	add	r2, ip, r3
   1754c:	add	r2, r2, #1
   17550:	str	r2, [r4, #20]
   17554:	strb	r6, [ip, r3]
   17558:	ldr	r3, [r4, #20]
   1755c:	strb	lr, [r3]
   17560:	ldrb	r2, [r4, #25]
   17564:	ldr	r3, [r4, #20]
   17568:	cmp	r2, #0
   1756c:	addne	r3, r3, #1
   17570:	mov	r2, r3
   17574:	str	r3, [r4, #20]
   17578:	bl	13fac <test_print@@Base+0x728>
   1757c:	ldr	r3, [r4, #20]
   17580:	add	r0, r3, r0
   17584:	str	r0, [r4, #20]
   17588:	ldrd	r4, [sp]
   1758c:	ldrd	r6, [sp, #8]
   17590:	ldrd	r8, [sp, #16]
   17594:	ldr	sl, [sp, #24]
   17598:	add	sp, sp, #28
   1759c:	pop	{pc}		; (ldr pc, [sp], #4)
   175a0:	ldrb	r2, [r0, #29]
   175a4:	cmp	r2, #0
   175a8:	beq	17588 <flatcc_json_printer_uint64_field@@Base+0x160>
   175ac:	ldrd	r6, [sp, #40]	; 0x28
   175b0:	b	17484 <flatcc_json_printer_uint64_field@@Base+0x5c>
   175b4:	mov	r2, r5
   175b8:	mov	r1, r8
   175bc:	mov	r0, r4
   175c0:	bl	14660 <test_print@@Base+0xddc>
   175c4:	ldr	r5, [r4, #20]
   175c8:	b	17520 <flatcc_json_printer_uint64_field@@Base+0xf8>
   175cc:	add	r1, r2, #1
   175d0:	mov	r3, #10
   175d4:	str	r1, [r0, #20]
   175d8:	strb	r3, [r2]
   175dc:	ldrb	r3, [r0, #25]
   175e0:	ldr	r2, [r4, #32]
   175e4:	ldr	r1, [r0, #16]
   175e8:	ldr	r0, [r0, #20]
   175ec:	mul	r9, r2, r3
   175f0:	add	r3, r0, r9
   175f4:	cmp	r1, r3
   175f8:	bcs	17610 <flatcc_json_printer_uint64_field@@Base+0x1e8>
   175fc:	mov	r1, r9
   17600:	mov	r0, r4
   17604:	bl	14724 <test_print@@Base+0xea0>
   17608:	ldr	r2, [r4, #20]
   1760c:	b	174dc <flatcc_json_printer_uint64_field@@Base+0xb4>
   17610:	mov	r2, r9
   17614:	mov	r1, #32
   17618:	bl	124c4 <memset@plt>
   1761c:	ldr	r2, [r4, #20]
   17620:	add	r2, r2, r9
   17624:	str	r2, [r4, #20]
   17628:	b	174dc <flatcc_json_printer_uint64_field@@Base+0xb4>
   1762c:	ldrb	r2, [r0, #28]
   17630:	cmp	r2, #0
   17634:	beq	17484 <flatcc_json_printer_uint64_field@@Base+0x5c>
   17638:	b	17588 <flatcc_json_printer_uint64_field@@Base+0x160>

0001763c <flatcc_json_printer_int8_field@@Base>:
   1763c:	ldr	ip, [r1, #8]
   17640:	add	r2, r2, #2
   17644:	lsl	r2, r2, #1
   17648:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1764c:	strd	r6, [sp, #8]
   17650:	str	r8, [sp, #16]
   17654:	str	lr, [sp, #20]
   17658:	cmp	r2, ip
   1765c:	ldrsb	lr, [sp, #28]
   17660:	ldr	r6, [sp, #24]
   17664:	bge	177e8 <flatcc_json_printer_int8_field@@Base+0x1ac>
   17668:	ldr	ip, [r1, #4]
   1766c:	ldrh	r2, [ip, r2]
   17670:	cmp	r2, #0
   17674:	beq	177e8 <flatcc_json_printer_int8_field@@Base+0x1ac>
   17678:	ldr	ip, [r1]
   1767c:	cmn	ip, r2
   17680:	beq	177e8 <flatcc_json_printer_int8_field@@Base+0x1ac>
   17684:	ldrsb	r5, [ip, r2]
   17688:	cmp	lr, r5
   1768c:	beq	178c4 <flatcc_json_printer_int8_field@@Base+0x288>
   17690:	ldr	ip, [r1, #16]
   17694:	ldr	r2, [r0, #20]
   17698:	cmp	ip, #0
   1769c:	add	ip, ip, #1
   176a0:	str	ip, [r1, #16]
   176a4:	beq	176bc <flatcc_json_printer_int8_field@@Base+0x80>
   176a8:	add	ip, r2, #1
   176ac:	mov	r1, #44	; 0x2c
   176b0:	str	ip, [r0, #20]
   176b4:	strb	r1, [r2]
   176b8:	ldr	r2, [r0, #20]
   176bc:	mov	r7, r3
   176c0:	mov	r4, r0
   176c4:	ldrb	r1, [r0, #25]
   176c8:	cmp	r1, #0
   176cc:	bne	17814 <flatcc_json_printer_int8_field@@Base+0x1d8>
   176d0:	ldr	r3, [r0, #16]
   176d4:	cmp	r3, r2
   176d8:	bhi	176e8 <flatcc_json_printer_int8_field@@Base+0xac>
   176dc:	ldr	r3, [r0, #44]	; 0x2c
   176e0:	blx	r3
   176e4:	ldr	r2, [r4, #20]
   176e8:	mov	r3, #34	; 0x22
   176ec:	strb	r3, [r2]
   176f0:	ldrb	r3, [r4, #26]
   176f4:	ldr	r2, [r4, #16]
   176f8:	ldr	r0, [r4, #20]
   176fc:	cmp	r3, #0
   17700:	addeq	r0, r0, #1
   17704:	add	r3, r0, r6
   17708:	cmp	r2, r3
   1770c:	str	r0, [r4, #20]
   17710:	bls	177fc <flatcc_json_printer_int8_field@@Base+0x1c0>
   17714:	mov	r2, r6
   17718:	mov	r1, r7
   1771c:	bl	12428 <memcpy@plt>
   17720:	ldr	r3, [r4, #20]
   17724:	add	r6, r3, r6
   17728:	str	r6, [r4, #20]
   1772c:	mov	r3, #34	; 0x22
   17730:	mov	r7, #58	; 0x3a
   17734:	lsr	r0, r5, #31
   17738:	mov	lr, #32
   1773c:	strb	r3, [r6]
   17740:	uxtb	r3, r5
   17744:	ldrb	r2, [r4, #26]
   17748:	ldr	ip, [r4, #20]
   1774c:	clz	r2, r2
   17750:	lsr	r2, r2, #5
   17754:	add	r1, ip, r2
   17758:	add	r1, r1, #1
   1775c:	str	r1, [r4, #20]
   17760:	strb	r7, [ip, r2]
   17764:	ldr	r2, [r4, #20]
   17768:	strb	lr, [r2]
   1776c:	ldrb	r1, [r4, #25]
   17770:	ldr	ip, [r4, #20]
   17774:	adds	r1, r1, #0
   17778:	movne	r1, #1
   1777c:	cmp	r5, #0
   17780:	add	r2, ip, r1
   17784:	str	r2, [r4, #20]
   17788:	bge	177a0 <flatcc_json_printer_int8_field@@Base+0x164>
   1778c:	rsb	r3, r3, #0
   17790:	mov	lr, #45	; 0x2d
   17794:	add	r2, r2, #1
   17798:	uxtb	r3, r3
   1779c:	strb	lr, [ip, r1]
   177a0:	cmp	r3, #99	; 0x63
   177a4:	bhi	17874 <flatcc_json_printer_int8_field@@Base+0x238>
   177a8:	cmp	r3, #9
   177ac:	bhi	178d4 <flatcc_json_printer_int8_field@@Base+0x298>
   177b0:	add	r3, r3, #48	; 0x30
   177b4:	mov	r1, #0
   177b8:	mov	ip, #1
   177bc:	strb	r3, [r2]
   177c0:	strb	r1, [r2, #1]
   177c4:	ldr	r3, [r4, #20]
   177c8:	add	r2, r0, ip
   177cc:	add	r3, r3, r2
   177d0:	str	r3, [r4, #20]
   177d4:	ldrd	r4, [sp]
   177d8:	ldrd	r6, [sp, #8]
   177dc:	ldr	r8, [sp, #16]
   177e0:	add	sp, sp, #20
   177e4:	pop	{pc}		; (ldr pc, [sp], #4)
   177e8:	ldrb	r2, [r0, #29]
   177ec:	cmp	r2, #0
   177f0:	beq	177d4 <flatcc_json_printer_int8_field@@Base+0x198>
   177f4:	mov	r5, lr
   177f8:	b	17690 <flatcc_json_printer_int8_field@@Base+0x54>
   177fc:	mov	r2, r6
   17800:	mov	r1, r7
   17804:	mov	r0, r4
   17808:	bl	14660 <test_print@@Base+0xddc>
   1780c:	ldr	r6, [r4, #20]
   17810:	b	1772c <flatcc_json_printer_int8_field@@Base+0xf0>
   17814:	add	r1, r2, #1
   17818:	mov	r3, #10
   1781c:	str	r1, [r0, #20]
   17820:	strb	r3, [r2]
   17824:	ldrb	r8, [r0, #25]
   17828:	ldr	r2, [r4, #32]
   1782c:	ldr	r1, [r0, #16]
   17830:	ldr	r0, [r0, #20]
   17834:	mul	r8, r2, r8
   17838:	add	r3, r0, r8
   1783c:	cmp	r1, r3
   17840:	bcs	17858 <flatcc_json_printer_int8_field@@Base+0x21c>
   17844:	mov	r1, r8
   17848:	mov	r0, r4
   1784c:	bl	14724 <test_print@@Base+0xea0>
   17850:	ldr	r2, [r4, #20]
   17854:	b	176e8 <flatcc_json_printer_int8_field@@Base+0xac>
   17858:	mov	r2, r8
   1785c:	mov	r1, #32
   17860:	bl	124c4 <memset@plt>
   17864:	ldr	r2, [r4, #20]
   17868:	add	r2, r2, r8
   1786c:	str	r2, [r4, #20]
   17870:	b	176e8 <flatcc_json_printer_int8_field@@Base+0xac>
   17874:	movw	ip, #34079	; 0x851f
   17878:	movt	ip, #20971	; 0x51eb
   1787c:	mov	r6, #100	; 0x64
   17880:	mov	lr, #0
   17884:	umull	ip, r1, ip, r3
   17888:	mov	r5, #49	; 0x31
   1788c:	mov	ip, #3
   17890:	strb	lr, [r2, #3]
   17894:	movw	lr, #10976	; 0x2ae0
   17898:	movt	lr, #2
   1789c:	lsr	r1, r1, #5
   178a0:	mls	r1, r6, r1, r3
   178a4:	uxtb	r1, r1
   178a8:	ldrb	r3, [lr, r1, lsl #1]
   178ac:	add	r1, lr, r1, lsl #1
   178b0:	strb	r3, [r2, #1]
   178b4:	ldrb	r3, [r1, #1]
   178b8:	strb	r5, [r2]
   178bc:	strb	r3, [r2, #2]
   178c0:	b	177c4 <flatcc_json_printer_int8_field@@Base+0x188>
   178c4:	ldrb	r2, [r0, #28]
   178c8:	cmp	r2, #0
   178cc:	beq	17690 <flatcc_json_printer_int8_field@@Base+0x54>
   178d0:	b	177d4 <flatcc_json_printer_int8_field@@Base+0x198>
   178d4:	mov	ip, #0
   178d8:	sxth	r3, r3
   178dc:	movw	r1, #10976	; 0x2ae0
   178e0:	movt	r1, #2
   178e4:	add	lr, r1, r3, lsl #1
   178e8:	strb	ip, [r2, #2]
   178ec:	mov	ip, #2
   178f0:	ldrb	r3, [r1, r3, lsl #1]
   178f4:	strb	r3, [r2]
   178f8:	ldrb	r3, [lr, #1]
   178fc:	strb	r3, [r2, #1]
   17900:	b	177c4 <flatcc_json_printer_int8_field@@Base+0x188>

00017904 <flatcc_json_printer_int16_field@@Base>:
   17904:	ldr	ip, [r1, #8]
   17908:	add	r2, r2, #2
   1790c:	lsl	r2, r2, #1
   17910:	strd	r4, [sp, #-24]!	; 0xffffffe8
   17914:	strd	r6, [sp, #8]
   17918:	str	r8, [sp, #16]
   1791c:	str	lr, [sp, #20]
   17920:	cmp	r2, ip
   17924:	ldrsh	lr, [sp, #28]
   17928:	ldr	r6, [sp, #24]
   1792c:	bge	17a90 <flatcc_json_printer_int16_field@@Base+0x18c>
   17930:	ldr	ip, [r1, #4]
   17934:	ldrh	r2, [ip, r2]
   17938:	cmp	r2, #0
   1793c:	beq	17a90 <flatcc_json_printer_int16_field@@Base+0x18c>
   17940:	ldr	ip, [r1]
   17944:	cmn	ip, r2
   17948:	beq	17a90 <flatcc_json_printer_int16_field@@Base+0x18c>
   1794c:	ldrsh	r5, [ip, r2]
   17950:	cmp	lr, r5
   17954:	beq	17b1c <flatcc_json_printer_int16_field@@Base+0x218>
   17958:	ldr	ip, [r1, #16]
   1795c:	ldr	r2, [r0, #20]
   17960:	cmp	ip, #0
   17964:	add	ip, ip, #1
   17968:	str	ip, [r1, #16]
   1796c:	beq	17984 <flatcc_json_printer_int16_field@@Base+0x80>
   17970:	add	ip, r2, #1
   17974:	mov	r1, #44	; 0x2c
   17978:	str	ip, [r0, #20]
   1797c:	strb	r1, [r2]
   17980:	ldr	r2, [r0, #20]
   17984:	mov	r7, r3
   17988:	mov	r4, r0
   1798c:	ldrb	r1, [r0, #25]
   17990:	cmp	r1, #0
   17994:	bne	17abc <flatcc_json_printer_int16_field@@Base+0x1b8>
   17998:	ldr	r3, [r0, #16]
   1799c:	cmp	r3, r2
   179a0:	bhi	179b0 <flatcc_json_printer_int16_field@@Base+0xac>
   179a4:	ldr	r3, [r0, #44]	; 0x2c
   179a8:	blx	r3
   179ac:	ldr	r2, [r4, #20]
   179b0:	mov	r3, #34	; 0x22
   179b4:	strb	r3, [r2]
   179b8:	ldrb	r3, [r4, #26]
   179bc:	ldr	r2, [r4, #16]
   179c0:	ldr	r0, [r4, #20]
   179c4:	cmp	r3, #0
   179c8:	addeq	r0, r0, #1
   179cc:	add	r3, r0, r6
   179d0:	cmp	r2, r3
   179d4:	str	r0, [r4, #20]
   179d8:	bls	17aa4 <flatcc_json_printer_int16_field@@Base+0x1a0>
   179dc:	mov	r2, r6
   179e0:	mov	r1, r7
   179e4:	bl	12428 <memcpy@plt>
   179e8:	ldr	r3, [r4, #20]
   179ec:	add	r6, r3, r6
   179f0:	str	r6, [r4, #20]
   179f4:	mov	r3, #34	; 0x22
   179f8:	mov	lr, #58	; 0x3a
   179fc:	lsr	r7, r5, #31
   17a00:	mov	ip, #32
   17a04:	uxth	r0, r5
   17a08:	strb	r3, [r6]
   17a0c:	ldrb	r3, [r4, #26]
   17a10:	ldr	r1, [r4, #20]
   17a14:	clz	r3, r3
   17a18:	lsr	r3, r3, #5
   17a1c:	add	r2, r1, r3
   17a20:	add	r2, r2, #1
   17a24:	str	r2, [r4, #20]
   17a28:	strb	lr, [r1, r3]
   17a2c:	ldr	r3, [r4, #20]
   17a30:	strb	ip, [r3]
   17a34:	ldrb	r3, [r4, #25]
   17a38:	ldr	r2, [r4, #20]
   17a3c:	adds	r3, r3, #0
   17a40:	movne	r3, #1
   17a44:	cmp	r5, #0
   17a48:	add	r1, r2, r3
   17a4c:	str	r1, [r4, #20]
   17a50:	bge	17a68 <flatcc_json_printer_int16_field@@Base+0x164>
   17a54:	rsb	r0, r0, #0
   17a58:	mov	ip, #45	; 0x2d
   17a5c:	add	r1, r1, #1
   17a60:	uxth	r0, r0
   17a64:	strb	ip, [r2, r3]
   17a68:	bl	13b40 <test_print@@Base+0x2bc>
   17a6c:	ldr	r3, [r4, #20]
   17a70:	add	r0, r7, r0
   17a74:	add	r3, r3, r0
   17a78:	str	r3, [r4, #20]
   17a7c:	ldrd	r4, [sp]
   17a80:	ldrd	r6, [sp, #8]
   17a84:	ldr	r8, [sp, #16]
   17a88:	add	sp, sp, #20
   17a8c:	pop	{pc}		; (ldr pc, [sp], #4)
   17a90:	ldrb	r2, [r0, #29]
   17a94:	cmp	r2, #0
   17a98:	beq	17a7c <flatcc_json_printer_int16_field@@Base+0x178>
   17a9c:	mov	r5, lr
   17aa0:	b	17958 <flatcc_json_printer_int16_field@@Base+0x54>
   17aa4:	mov	r2, r6
   17aa8:	mov	r1, r7
   17aac:	mov	r0, r4
   17ab0:	bl	14660 <test_print@@Base+0xddc>
   17ab4:	ldr	r6, [r4, #20]
   17ab8:	b	179f4 <flatcc_json_printer_int16_field@@Base+0xf0>
   17abc:	add	r1, r2, #1
   17ac0:	mov	r3, #10
   17ac4:	str	r1, [r0, #20]
   17ac8:	strb	r3, [r2]
   17acc:	ldrb	r8, [r0, #25]
   17ad0:	ldr	r2, [r4, #32]
   17ad4:	ldr	r1, [r0, #16]
   17ad8:	ldr	r0, [r0, #20]
   17adc:	mul	r8, r2, r8
   17ae0:	add	r3, r0, r8
   17ae4:	cmp	r1, r3
   17ae8:	bcs	17b00 <flatcc_json_printer_int16_field@@Base+0x1fc>
   17aec:	mov	r1, r8
   17af0:	mov	r0, r4
   17af4:	bl	14724 <test_print@@Base+0xea0>
   17af8:	ldr	r2, [r4, #20]
   17afc:	b	179b0 <flatcc_json_printer_int16_field@@Base+0xac>
   17b00:	mov	r2, r8
   17b04:	mov	r1, #32
   17b08:	bl	124c4 <memset@plt>
   17b0c:	ldr	r2, [r4, #20]
   17b10:	add	r2, r2, r8
   17b14:	str	r2, [r4, #20]
   17b18:	b	179b0 <flatcc_json_printer_int16_field@@Base+0xac>
   17b1c:	ldrb	r2, [r0, #28]
   17b20:	cmp	r2, #0
   17b24:	beq	17958 <flatcc_json_printer_int16_field@@Base+0x54>
   17b28:	b	17a7c <flatcc_json_printer_int16_field@@Base+0x178>

00017b2c <flatcc_json_printer_int32_field@@Base>:
   17b2c:	ldr	ip, [r1, #8]
   17b30:	add	r2, r2, #2
   17b34:	lsl	r2, r2, #1
   17b38:	strd	r4, [sp, #-24]!	; 0xffffffe8
   17b3c:	strd	r6, [sp, #8]
   17b40:	str	r8, [sp, #16]
   17b44:	str	lr, [sp, #20]
   17b48:	cmp	r2, ip
   17b4c:	ldr	r6, [sp, #24]
   17b50:	bge	17cb4 <flatcc_json_printer_int32_field@@Base+0x188>
   17b54:	ldr	ip, [r1, #4]
   17b58:	ldrh	r2, [ip, r2]
   17b5c:	cmp	r2, #0
   17b60:	beq	17cb4 <flatcc_json_printer_int32_field@@Base+0x188>
   17b64:	ldr	ip, [r1]
   17b68:	cmn	ip, r2
   17b6c:	beq	17cb4 <flatcc_json_printer_int32_field@@Base+0x188>
   17b70:	ldr	r5, [ip, r2]
   17b74:	ldr	r2, [sp, #28]
   17b78:	cmp	r2, r5
   17b7c:	beq	17d40 <flatcc_json_printer_int32_field@@Base+0x214>
   17b80:	ldr	ip, [r1, #16]
   17b84:	ldr	r2, [r0, #20]
   17b88:	cmp	ip, #0
   17b8c:	add	ip, ip, #1
   17b90:	str	ip, [r1, #16]
   17b94:	beq	17bac <flatcc_json_printer_int32_field@@Base+0x80>
   17b98:	add	ip, r2, #1
   17b9c:	mov	r1, #44	; 0x2c
   17ba0:	str	ip, [r0, #20]
   17ba4:	strb	r1, [r2]
   17ba8:	ldr	r2, [r0, #20]
   17bac:	mov	r7, r3
   17bb0:	mov	r4, r0
   17bb4:	ldrb	r1, [r0, #25]
   17bb8:	cmp	r1, #0
   17bbc:	bne	17ce0 <flatcc_json_printer_int32_field@@Base+0x1b4>
   17bc0:	ldr	r3, [r0, #16]
   17bc4:	cmp	r3, r2
   17bc8:	bhi	17bd8 <flatcc_json_printer_int32_field@@Base+0xac>
   17bcc:	ldr	r3, [r0, #44]	; 0x2c
   17bd0:	blx	r3
   17bd4:	ldr	r2, [r4, #20]
   17bd8:	mov	r3, #34	; 0x22
   17bdc:	strb	r3, [r2]
   17be0:	ldrb	r3, [r4, #26]
   17be4:	ldr	r2, [r4, #16]
   17be8:	ldr	r0, [r4, #20]
   17bec:	cmp	r3, #0
   17bf0:	addeq	r0, r0, #1
   17bf4:	add	r3, r0, r6
   17bf8:	cmp	r2, r3
   17bfc:	str	r0, [r4, #20]
   17c00:	bls	17cc8 <flatcc_json_printer_int32_field@@Base+0x19c>
   17c04:	mov	r2, r6
   17c08:	mov	r1, r7
   17c0c:	bl	12428 <memcpy@plt>
   17c10:	ldr	r3, [r4, #20]
   17c14:	add	r6, r3, r6
   17c18:	str	r6, [r4, #20]
   17c1c:	mov	r3, #34	; 0x22
   17c20:	mov	ip, #58	; 0x3a
   17c24:	lsr	r7, r5, #31
   17c28:	mov	r0, #32
   17c2c:	strb	r3, [r6]
   17c30:	ldrb	r3, [r4, #26]
   17c34:	ldr	r1, [r4, #20]
   17c38:	clz	r3, r3
   17c3c:	lsr	r3, r3, #5
   17c40:	add	r2, r1, r3
   17c44:	add	r2, r2, #1
   17c48:	str	r2, [r4, #20]
   17c4c:	strb	ip, [r1, r3]
   17c50:	ldr	r3, [r4, #20]
   17c54:	strb	r0, [r3]
   17c58:	ldrb	r3, [r4, #25]
   17c5c:	ldr	r2, [r4, #20]
   17c60:	adds	r3, r3, #0
   17c64:	movne	r3, #1
   17c68:	cmp	r5, #0
   17c6c:	add	r1, r2, r3
   17c70:	str	r1, [r4, #20]
   17c74:	bge	17c88 <flatcc_json_printer_int32_field@@Base+0x15c>
   17c78:	mov	r0, #45	; 0x2d
   17c7c:	rsb	r5, r5, #0
   17c80:	add	r1, r1, #1
   17c84:	strb	r0, [r2, r3]
   17c88:	mov	r0, r5
   17c8c:	bl	13c98 <test_print@@Base+0x414>
   17c90:	ldr	r3, [r4, #20]
   17c94:	add	r0, r7, r0
   17c98:	add	r3, r3, r0
   17c9c:	str	r3, [r4, #20]
   17ca0:	ldrd	r4, [sp]
   17ca4:	ldrd	r6, [sp, #8]
   17ca8:	ldr	r8, [sp, #16]
   17cac:	add	sp, sp, #20
   17cb0:	pop	{pc}		; (ldr pc, [sp], #4)
   17cb4:	ldrb	r2, [r0, #29]
   17cb8:	cmp	r2, #0
   17cbc:	beq	17ca0 <flatcc_json_printer_int32_field@@Base+0x174>
   17cc0:	ldr	r5, [sp, #28]
   17cc4:	b	17b80 <flatcc_json_printer_int32_field@@Base+0x54>
   17cc8:	mov	r2, r6
   17ccc:	mov	r1, r7
   17cd0:	mov	r0, r4
   17cd4:	bl	14660 <test_print@@Base+0xddc>
   17cd8:	ldr	r6, [r4, #20]
   17cdc:	b	17c1c <flatcc_json_printer_int32_field@@Base+0xf0>
   17ce0:	add	r1, r2, #1
   17ce4:	mov	r3, #10
   17ce8:	str	r1, [r0, #20]
   17cec:	strb	r3, [r2]
   17cf0:	ldrb	r8, [r0, #25]
   17cf4:	ldr	r2, [r4, #32]
   17cf8:	ldr	r1, [r0, #16]
   17cfc:	ldr	r0, [r0, #20]
   17d00:	mul	r8, r2, r8
   17d04:	add	r3, r0, r8
   17d08:	cmp	r1, r3
   17d0c:	bcs	17d24 <flatcc_json_printer_int32_field@@Base+0x1f8>
   17d10:	mov	r1, r8
   17d14:	mov	r0, r4
   17d18:	bl	14724 <test_print@@Base+0xea0>
   17d1c:	ldr	r2, [r4, #20]
   17d20:	b	17bd8 <flatcc_json_printer_int32_field@@Base+0xac>
   17d24:	mov	r2, r8
   17d28:	mov	r1, #32
   17d2c:	bl	124c4 <memset@plt>
   17d30:	ldr	r2, [r4, #20]
   17d34:	add	r2, r2, r8
   17d38:	str	r2, [r4, #20]
   17d3c:	b	17bd8 <flatcc_json_printer_int32_field@@Base+0xac>
   17d40:	ldrb	r2, [r0, #28]
   17d44:	cmp	r2, #0
   17d48:	beq	17b80 <flatcc_json_printer_int32_field@@Base+0x54>
   17d4c:	b	17ca0 <flatcc_json_printer_int32_field@@Base+0x174>

00017d50 <flatcc_json_printer_int64_field@@Base>:
   17d50:	ldr	ip, [r1, #8]
   17d54:	add	r2, r2, #2
   17d58:	lsl	r2, r2, #1
   17d5c:	strd	r4, [sp, #-32]!	; 0xffffffe0
   17d60:	strd	r6, [sp, #8]
   17d64:	strd	r8, [sp, #16]
   17d68:	str	sl, [sp, #24]
   17d6c:	cmp	r2, ip
   17d70:	str	lr, [sp, #28]
   17d74:	ldr	r5, [sp, #32]
   17d78:	bge	17ef0 <flatcc_json_printer_int64_field@@Base+0x1a0>
   17d7c:	ldr	ip, [r1, #4]
   17d80:	ldrh	r2, [ip, r2]
   17d84:	cmp	r2, #0
   17d88:	beq	17ef0 <flatcc_json_printer_int64_field@@Base+0x1a0>
   17d8c:	ldr	ip, [r1]
   17d90:	cmn	ip, r2
   17d94:	beq	17ef0 <flatcc_json_printer_int64_field@@Base+0x1a0>
   17d98:	ldrd	r6, [ip, r2]
   17d9c:	ldrd	r8, [sp, #40]	; 0x28
   17da0:	cmp	r9, r7
   17da4:	cmpeq	r8, r6
   17da8:	beq	17f7c <flatcc_json_printer_int64_field@@Base+0x22c>
   17dac:	ldr	ip, [r1, #16]
   17db0:	ldr	r2, [r0, #20]
   17db4:	cmp	ip, #0
   17db8:	add	ip, ip, #1
   17dbc:	str	ip, [r1, #16]
   17dc0:	beq	17dd8 <flatcc_json_printer_int64_field@@Base+0x88>
   17dc4:	add	ip, r2, #1
   17dc8:	mov	r1, #44	; 0x2c
   17dcc:	str	ip, [r0, #20]
   17dd0:	strb	r1, [r2]
   17dd4:	ldr	r2, [r0, #20]
   17dd8:	mov	r8, r3
   17ddc:	mov	r4, r0
   17de0:	ldrb	r1, [r0, #25]
   17de4:	cmp	r1, #0
   17de8:	bne	17f1c <flatcc_json_printer_int64_field@@Base+0x1cc>
   17dec:	ldr	r3, [r0, #16]
   17df0:	cmp	r3, r2
   17df4:	bhi	17e04 <flatcc_json_printer_int64_field@@Base+0xb4>
   17df8:	ldr	r3, [r0, #44]	; 0x2c
   17dfc:	blx	r3
   17e00:	ldr	r2, [r4, #20]
   17e04:	mov	r3, #34	; 0x22
   17e08:	strb	r3, [r2]
   17e0c:	ldrb	r3, [r4, #26]
   17e10:	ldr	r2, [r4, #16]
   17e14:	ldr	r0, [r4, #20]
   17e18:	cmp	r3, #0
   17e1c:	addeq	r0, r0, #1
   17e20:	add	r3, r0, r5
   17e24:	cmp	r2, r3
   17e28:	str	r0, [r4, #20]
   17e2c:	bls	17f04 <flatcc_json_printer_int64_field@@Base+0x1b4>
   17e30:	mov	r2, r5
   17e34:	mov	r1, r8
   17e38:	bl	12428 <memcpy@plt>
   17e3c:	ldr	r3, [r4, #20]
   17e40:	add	r5, r3, r5
   17e44:	str	r5, [r4, #20]
   17e48:	mov	r3, #34	; 0x22
   17e4c:	mov	ip, #58	; 0x3a
   17e50:	lsr	r8, r7, #31
   17e54:	mov	r0, #32
   17e58:	strb	r3, [r5]
   17e5c:	ldrb	r3, [r4, #26]
   17e60:	ldr	r1, [r4, #20]
   17e64:	clz	r3, r3
   17e68:	lsr	r3, r3, #5
   17e6c:	add	r2, r1, r3
   17e70:	add	r2, r2, #1
   17e74:	str	r2, [r4, #20]
   17e78:	strb	ip, [r1, r3]
   17e7c:	ldr	r3, [r4, #20]
   17e80:	strb	r0, [r3]
   17e84:	ldrb	r3, [r4, #25]
   17e88:	ldr	r1, [r4, #20]
   17e8c:	adds	r3, r3, #0
   17e90:	movne	r3, #1
   17e94:	cmp	r6, #0
   17e98:	sbcs	r2, r7, #0
   17e9c:	add	r2, r1, r3
   17ea0:	str	r2, [r4, #20]
   17ea4:	bge	17ebc <flatcc_json_printer_int64_field@@Base+0x16c>
   17ea8:	rsbs	r6, r6, #0
   17eac:	mov	r0, #45	; 0x2d
   17eb0:	rsc	r7, r7, #0
   17eb4:	add	r2, r2, #1
   17eb8:	strb	r0, [r1, r3]
   17ebc:	mov	r0, r6
   17ec0:	mov	r1, r7
   17ec4:	bl	13fac <test_print@@Base+0x728>
   17ec8:	ldr	r3, [r4, #20]
   17ecc:	add	r0, r8, r0
   17ed0:	add	r3, r3, r0
   17ed4:	str	r3, [r4, #20]
   17ed8:	ldrd	r4, [sp]
   17edc:	ldrd	r6, [sp, #8]
   17ee0:	ldrd	r8, [sp, #16]
   17ee4:	ldr	sl, [sp, #24]
   17ee8:	add	sp, sp, #28
   17eec:	pop	{pc}		; (ldr pc, [sp], #4)
   17ef0:	ldrb	r2, [r0, #29]
   17ef4:	cmp	r2, #0
   17ef8:	beq	17ed8 <flatcc_json_printer_int64_field@@Base+0x188>
   17efc:	ldrd	r6, [sp, #40]	; 0x28
   17f00:	b	17dac <flatcc_json_printer_int64_field@@Base+0x5c>
   17f04:	mov	r2, r5
   17f08:	mov	r1, r8
   17f0c:	mov	r0, r4
   17f10:	bl	14660 <test_print@@Base+0xddc>
   17f14:	ldr	r5, [r4, #20]
   17f18:	b	17e48 <flatcc_json_printer_int64_field@@Base+0xf8>
   17f1c:	add	r1, r2, #1
   17f20:	mov	r3, #10
   17f24:	str	r1, [r0, #20]
   17f28:	strb	r3, [r2]
   17f2c:	ldrb	r3, [r0, #25]
   17f30:	ldr	r2, [r4, #32]
   17f34:	ldr	r1, [r0, #16]
   17f38:	ldr	r0, [r0, #20]
   17f3c:	mul	r9, r2, r3
   17f40:	add	r3, r0, r9
   17f44:	cmp	r1, r3
   17f48:	bcs	17f60 <flatcc_json_printer_int64_field@@Base+0x210>
   17f4c:	mov	r1, r9
   17f50:	mov	r0, r4
   17f54:	bl	14724 <test_print@@Base+0xea0>
   17f58:	ldr	r2, [r4, #20]
   17f5c:	b	17e04 <flatcc_json_printer_int64_field@@Base+0xb4>
   17f60:	mov	r2, r9
   17f64:	mov	r1, #32
   17f68:	bl	124c4 <memset@plt>
   17f6c:	ldr	r2, [r4, #20]
   17f70:	add	r2, r2, r9
   17f74:	str	r2, [r4, #20]
   17f78:	b	17e04 <flatcc_json_printer_int64_field@@Base+0xb4>
   17f7c:	ldrb	r2, [r0, #28]
   17f80:	cmp	r2, #0
   17f84:	beq	17dac <flatcc_json_printer_int64_field@@Base+0x5c>
   17f88:	b	17ed8 <flatcc_json_printer_int64_field@@Base+0x188>

00017f8c <flatcc_json_printer_bool_field@@Base>:
   17f8c:	ldr	ip, [r1, #8]
   17f90:	add	r2, r2, #2
   17f94:	lsl	r2, r2, #1
   17f98:	strd	r4, [sp, #-24]!	; 0xffffffe8
   17f9c:	strd	r6, [sp, #8]
   17fa0:	str	r8, [sp, #16]
   17fa4:	str	lr, [sp, #20]
   17fa8:	cmp	r2, ip
   17fac:	ldrb	lr, [sp, #28]
   17fb0:	ldr	r6, [sp, #24]
   17fb4:	bge	18114 <flatcc_json_printer_bool_field@@Base+0x188>
   17fb8:	ldr	ip, [r1, #4]
   17fbc:	ldrh	r2, [ip, r2]
   17fc0:	cmp	r2, #0
   17fc4:	beq	18114 <flatcc_json_printer_bool_field@@Base+0x188>
   17fc8:	ldr	ip, [r1]
   17fcc:	cmn	ip, r2
   17fd0:	beq	18114 <flatcc_json_printer_bool_field@@Base+0x188>
   17fd4:	ldrb	r5, [ip, r2]
   17fd8:	cmp	lr, r5
   17fdc:	beq	181c4 <flatcc_json_printer_bool_field@@Base+0x238>
   17fe0:	ldr	ip, [r1, #16]
   17fe4:	ldr	r2, [r0, #20]
   17fe8:	cmp	ip, #0
   17fec:	add	ip, ip, #1
   17ff0:	str	ip, [r1, #16]
   17ff4:	beq	1800c <flatcc_json_printer_bool_field@@Base+0x80>
   17ff8:	add	ip, r2, #1
   17ffc:	mov	r1, #44	; 0x2c
   18000:	str	ip, [r0, #20]
   18004:	strb	r1, [r2]
   18008:	ldr	r2, [r0, #20]
   1800c:	mov	r7, r3
   18010:	mov	r4, r0
   18014:	ldrb	r1, [r0, #25]
   18018:	cmp	r1, #0
   1801c:	bne	18164 <flatcc_json_printer_bool_field@@Base+0x1d8>
   18020:	ldr	r3, [r0, #16]
   18024:	cmp	r3, r2
   18028:	bhi	18038 <flatcc_json_printer_bool_field@@Base+0xac>
   1802c:	ldr	r3, [r0, #44]	; 0x2c
   18030:	blx	r3
   18034:	ldr	r2, [r4, #20]
   18038:	mov	r3, #34	; 0x22
   1803c:	strb	r3, [r2]
   18040:	ldrb	r3, [r4, #26]
   18044:	ldr	r2, [r4, #16]
   18048:	ldr	r0, [r4, #20]
   1804c:	cmp	r3, #0
   18050:	addeq	r0, r0, #1
   18054:	add	r3, r0, r6
   18058:	cmp	r2, r3
   1805c:	str	r0, [r4, #20]
   18060:	bls	1814c <flatcc_json_printer_bool_field@@Base+0x1c0>
   18064:	mov	r2, r6
   18068:	mov	r1, r7
   1806c:	bl	12428 <memcpy@plt>
   18070:	ldr	r3, [r4, #20]
   18074:	add	r6, r3, r6
   18078:	str	r6, [r4, #20]
   1807c:	mov	r3, #34	; 0x22
   18080:	mov	ip, #58	; 0x3a
   18084:	mov	r0, #32
   18088:	strb	r3, [r6]
   1808c:	ldrb	r3, [r4, #26]
   18090:	ldr	r1, [r4, #20]
   18094:	clz	r3, r3
   18098:	lsr	r3, r3, #5
   1809c:	add	r2, r1, r3
   180a0:	add	r2, r2, #1
   180a4:	str	r2, [r4, #20]
   180a8:	strb	ip, [r1, r3]
   180ac:	ldr	r3, [r4, #20]
   180b0:	strb	r0, [r3]
   180b4:	ldrb	r3, [r4, #25]
   180b8:	ldr	r1, [r4, #20]
   180bc:	adds	r3, r3, #0
   180c0:	movne	r3, #1
   180c4:	cmp	r5, #0
   180c8:	add	r2, r1, r3
   180cc:	str	r2, [r4, #20]
   180d0:	beq	18128 <flatcc_json_printer_bool_field@@Base+0x19c>
   180d4:	ldr	ip, [pc, #248]	; 181d4 <flatcc_json_printer_bool_field@@Base+0x248>
   180d8:	movw	r0, #10976	; 0x2ae0
   180dc:	movt	r0, #2
   180e0:	ldr	lr, [r0, #1768]	; 0x6e8
   180e4:	mov	r0, #4
   180e8:	ldrb	ip, [ip, #4]
   180ec:	str	lr, [r1, r3]
   180f0:	strb	ip, [r2, #4]
   180f4:	ldr	r3, [r4, #20]
   180f8:	add	r3, r3, r0
   180fc:	str	r3, [r4, #20]
   18100:	ldrd	r4, [sp]
   18104:	ldrd	r6, [sp, #8]
   18108:	ldr	r8, [sp, #16]
   1810c:	add	sp, sp, #20
   18110:	pop	{pc}		; (ldr pc, [sp], #4)
   18114:	ldrb	r2, [r0, #29]
   18118:	cmp	r2, #0
   1811c:	beq	18100 <flatcc_json_printer_bool_field@@Base+0x174>
   18120:	mov	r5, lr
   18124:	b	17fe0 <flatcc_json_printer_bool_field@@Base+0x54>
   18128:	movw	r0, #10976	; 0x2ae0
   1812c:	movt	r0, #2
   18130:	add	ip, r0, #1776	; 0x6f0
   18134:	ldr	lr, [r0, #1776]	; 0x6f0
   18138:	mov	r0, #5
   1813c:	ldrh	ip, [ip, #4]
   18140:	str	lr, [r1, r3]
   18144:	strh	ip, [r2, #4]
   18148:	b	180f4 <flatcc_json_printer_bool_field@@Base+0x168>
   1814c:	mov	r2, r6
   18150:	mov	r1, r7
   18154:	mov	r0, r4
   18158:	bl	14660 <test_print@@Base+0xddc>
   1815c:	ldr	r6, [r4, #20]
   18160:	b	1807c <flatcc_json_printer_bool_field@@Base+0xf0>
   18164:	add	r1, r2, #1
   18168:	mov	r3, #10
   1816c:	str	r1, [r0, #20]
   18170:	strb	r3, [r2]
   18174:	ldrb	r8, [r0, #25]
   18178:	ldr	r2, [r4, #32]
   1817c:	ldr	r1, [r0, #16]
   18180:	ldr	r0, [r0, #20]
   18184:	mul	r8, r2, r8
   18188:	add	r3, r0, r8
   1818c:	cmp	r1, r3
   18190:	bcs	181a8 <flatcc_json_printer_bool_field@@Base+0x21c>
   18194:	mov	r1, r8
   18198:	mov	r0, r4
   1819c:	bl	14724 <test_print@@Base+0xea0>
   181a0:	ldr	r2, [r4, #20]
   181a4:	b	18038 <flatcc_json_printer_bool_field@@Base+0xac>
   181a8:	mov	r2, r8
   181ac:	mov	r1, #32
   181b0:	bl	124c4 <memset@plt>
   181b4:	ldr	r2, [r4, #20]
   181b8:	add	r2, r2, r8
   181bc:	str	r2, [r4, #20]
   181c0:	b	18038 <flatcc_json_printer_bool_field@@Base+0xac>
   181c4:	ldrb	r2, [r0, #28]
   181c8:	cmp	r2, #0
   181cc:	beq	17fe0 <flatcc_json_printer_bool_field@@Base+0x54>
   181d0:	b	18100 <flatcc_json_printer_bool_field@@Base+0x174>
   181d4:	andeq	r3, r2, r8, asr #3

000181d8 <flatcc_json_printer_float_field@@Base>:
   181d8:	ldr	ip, [r1, #8]
   181dc:	add	r2, r2, #2
   181e0:	lsl	r2, r2, #1
   181e4:	strd	r4, [sp, #-24]!	; 0xffffffe8
   181e8:	strd	r6, [sp, #8]
   181ec:	str	r8, [sp, #16]
   181f0:	str	lr, [sp, #20]
   181f4:	cmp	r2, ip
   181f8:	vpush	{d8}
   181fc:	ldr	r5, [sp, #32]
   18200:	bge	18254 <flatcc_json_printer_float_field@@Base+0x7c>
   18204:	ldr	ip, [r1, #4]
   18208:	ldrh	ip, [ip, r2]
   1820c:	cmp	ip, #0
   18210:	beq	18254 <flatcc_json_printer_float_field@@Base+0x7c>
   18214:	ldr	r2, [r1]
   18218:	adds	r2, r2, ip
   1821c:	beq	18254 <flatcc_json_printer_float_field@@Base+0x7c>
   18220:	vldr	s16, [r2]
   18224:	vcmp.f32	s0, s16
   18228:	vmrs	APSR_nzcv, fpscr
   1822c:	bne	18264 <flatcc_json_printer_float_field@@Base+0x8c>
   18230:	ldrb	r2, [r0, #28]
   18234:	cmp	r2, #0
   18238:	beq	18264 <flatcc_json_printer_float_field@@Base+0x8c>
   1823c:	vpop	{d8}
   18240:	ldrd	r4, [sp]
   18244:	ldrd	r6, [sp, #8]
   18248:	ldr	r8, [sp, #16]
   1824c:	add	sp, sp, #20
   18250:	pop	{pc}		; (ldr pc, [sp], #4)
   18254:	ldrb	r2, [r0, #29]
   18258:	cmp	r2, #0
   1825c:	beq	1823c <flatcc_json_printer_float_field@@Base+0x64>
   18260:	vmov.f32	s16, s0
   18264:	ldr	ip, [r1, #16]
   18268:	ldr	r2, [r0, #20]
   1826c:	cmp	ip, #0
   18270:	add	ip, ip, #1
   18274:	str	ip, [r1, #16]
   18278:	beq	18290 <flatcc_json_printer_float_field@@Base+0xb8>
   1827c:	add	ip, r2, #1
   18280:	mov	r1, #44	; 0x2c
   18284:	str	ip, [r0, #20]
   18288:	strb	r1, [r2]
   1828c:	ldr	r2, [r0, #20]
   18290:	mov	r6, r3
   18294:	mov	r4, r0
   18298:	ldrb	r1, [r0, #25]
   1829c:	cmp	r1, #0
   182a0:	bne	18380 <flatcc_json_printer_float_field@@Base+0x1a8>
   182a4:	ldr	r3, [r0, #16]
   182a8:	cmp	r3, r2
   182ac:	bhi	182bc <flatcc_json_printer_float_field@@Base+0xe4>
   182b0:	ldr	r3, [r0, #44]	; 0x2c
   182b4:	blx	r3
   182b8:	ldr	r2, [r4, #20]
   182bc:	mov	r3, #34	; 0x22
   182c0:	strb	r3, [r2]
   182c4:	ldrb	r3, [r4, #26]
   182c8:	ldr	r2, [r4, #16]
   182cc:	ldr	r0, [r4, #20]
   182d0:	cmp	r3, #0
   182d4:	addeq	r0, r0, #1
   182d8:	add	r3, r0, r5
   182dc:	cmp	r2, r3
   182e0:	str	r0, [r4, #20]
   182e4:	bls	18368 <flatcc_json_printer_float_field@@Base+0x190>
   182e8:	mov	r2, r5
   182ec:	mov	r1, r6
   182f0:	bl	12428 <memcpy@plt>
   182f4:	ldr	r3, [r4, #20]
   182f8:	add	r5, r3, r5
   182fc:	str	r5, [r4, #20]
   18300:	mov	r3, #34	; 0x22
   18304:	mov	ip, #58	; 0x3a
   18308:	vcvt.f64.f32	d0, s16
   1830c:	mov	r0, #32
   18310:	strb	r3, [r5]
   18314:	ldrb	r3, [r4, #26]
   18318:	ldr	r1, [r4, #20]
   1831c:	clz	r3, r3
   18320:	lsr	r3, r3, #5
   18324:	add	r2, r1, r3
   18328:	add	r2, r2, #1
   1832c:	str	r2, [r4, #20]
   18330:	strb	ip, [r1, r3]
   18334:	ldr	r3, [r4, #20]
   18338:	strb	r0, [r3]
   1833c:	ldrb	r2, [r4, #25]
   18340:	ldr	r3, [r4, #20]
   18344:	cmp	r2, #0
   18348:	addne	r3, r3, #1
   1834c:	mov	r0, r3
   18350:	str	r3, [r4, #20]
   18354:	bl	14e70 <test_print@@Base+0x15ec>
   18358:	ldr	r3, [r4, #20]
   1835c:	add	r0, r3, r0
   18360:	str	r0, [r4, #20]
   18364:	b	1823c <flatcc_json_printer_float_field@@Base+0x64>
   18368:	mov	r2, r5
   1836c:	mov	r1, r6
   18370:	mov	r0, r4
   18374:	bl	14660 <test_print@@Base+0xddc>
   18378:	ldr	r5, [r4, #20]
   1837c:	b	18300 <flatcc_json_printer_float_field@@Base+0x128>
   18380:	add	r1, r2, #1
   18384:	mov	r3, #10
   18388:	str	r1, [r0, #20]
   1838c:	strb	r3, [r2]
   18390:	ldrb	r7, [r0, #25]
   18394:	ldr	r2, [r4, #32]
   18398:	ldr	r1, [r0, #16]
   1839c:	ldr	r0, [r0, #20]
   183a0:	mul	r7, r2, r7
   183a4:	add	r3, r0, r7
   183a8:	cmp	r1, r3
   183ac:	bcs	183c4 <flatcc_json_printer_float_field@@Base+0x1ec>
   183b0:	mov	r1, r7
   183b4:	mov	r0, r4
   183b8:	bl	14724 <test_print@@Base+0xea0>
   183bc:	ldr	r2, [r4, #20]
   183c0:	b	182bc <flatcc_json_printer_float_field@@Base+0xe4>
   183c4:	mov	r2, r7
   183c8:	mov	r1, #32
   183cc:	bl	124c4 <memset@plt>
   183d0:	ldr	r2, [r4, #20]
   183d4:	add	r2, r2, r7
   183d8:	str	r2, [r4, #20]
   183dc:	b	182bc <flatcc_json_printer_float_field@@Base+0xe4>

000183e0 <flatcc_json_printer_double_field@@Base>:
   183e0:	ldr	ip, [r1, #8]
   183e4:	add	r2, r2, #2
   183e8:	lsl	r2, r2, #1
   183ec:	strd	r4, [sp, #-24]!	; 0xffffffe8
   183f0:	strd	r6, [sp, #8]
   183f4:	str	r8, [sp, #16]
   183f8:	str	lr, [sp, #20]
   183fc:	cmp	r2, ip
   18400:	vpush	{d8}
   18404:	ldr	r5, [sp, #32]
   18408:	bge	1845c <flatcc_json_printer_double_field@@Base+0x7c>
   1840c:	ldr	ip, [r1, #4]
   18410:	ldrh	ip, [ip, r2]
   18414:	cmp	ip, #0
   18418:	beq	1845c <flatcc_json_printer_double_field@@Base+0x7c>
   1841c:	ldr	r2, [r1]
   18420:	adds	r2, r2, ip
   18424:	beq	1845c <flatcc_json_printer_double_field@@Base+0x7c>
   18428:	vldr	d8, [r2]
   1842c:	vcmp.f64	d0, d8
   18430:	vmrs	APSR_nzcv, fpscr
   18434:	bne	1846c <flatcc_json_printer_double_field@@Base+0x8c>
   18438:	ldrb	r2, [r0, #28]
   1843c:	cmp	r2, #0
   18440:	beq	1846c <flatcc_json_printer_double_field@@Base+0x8c>
   18444:	vpop	{d8}
   18448:	ldrd	r4, [sp]
   1844c:	ldrd	r6, [sp, #8]
   18450:	ldr	r8, [sp, #16]
   18454:	add	sp, sp, #20
   18458:	pop	{pc}		; (ldr pc, [sp], #4)
   1845c:	ldrb	r2, [r0, #29]
   18460:	cmp	r2, #0
   18464:	beq	18444 <flatcc_json_printer_double_field@@Base+0x64>
   18468:	vmov.f64	d8, d0
   1846c:	ldr	ip, [r1, #16]
   18470:	ldr	r2, [r0, #20]
   18474:	cmp	ip, #0
   18478:	add	ip, ip, #1
   1847c:	str	ip, [r1, #16]
   18480:	beq	18498 <flatcc_json_printer_double_field@@Base+0xb8>
   18484:	add	ip, r2, #1
   18488:	mov	r1, #44	; 0x2c
   1848c:	str	ip, [r0, #20]
   18490:	strb	r1, [r2]
   18494:	ldr	r2, [r0, #20]
   18498:	mov	r6, r3
   1849c:	mov	r4, r0
   184a0:	ldrb	r1, [r0, #25]
   184a4:	cmp	r1, #0
   184a8:	bne	18588 <flatcc_json_printer_double_field@@Base+0x1a8>
   184ac:	ldr	r3, [r0, #16]
   184b0:	cmp	r3, r2
   184b4:	bhi	184c4 <flatcc_json_printer_double_field@@Base+0xe4>
   184b8:	ldr	r3, [r0, #44]	; 0x2c
   184bc:	blx	r3
   184c0:	ldr	r2, [r4, #20]
   184c4:	mov	r3, #34	; 0x22
   184c8:	strb	r3, [r2]
   184cc:	ldrb	r3, [r4, #26]
   184d0:	ldr	r2, [r4, #16]
   184d4:	ldr	r0, [r4, #20]
   184d8:	cmp	r3, #0
   184dc:	addeq	r0, r0, #1
   184e0:	add	r3, r0, r5
   184e4:	cmp	r2, r3
   184e8:	str	r0, [r4, #20]
   184ec:	bls	18570 <flatcc_json_printer_double_field@@Base+0x190>
   184f0:	mov	r2, r5
   184f4:	mov	r1, r6
   184f8:	bl	12428 <memcpy@plt>
   184fc:	ldr	r3, [r4, #20]
   18500:	add	r5, r3, r5
   18504:	str	r5, [r4, #20]
   18508:	mov	r3, #34	; 0x22
   1850c:	mov	ip, #58	; 0x3a
   18510:	vmov.f64	d0, d8
   18514:	mov	r0, #32
   18518:	strb	r3, [r5]
   1851c:	ldrb	r3, [r4, #26]
   18520:	ldr	r1, [r4, #20]
   18524:	clz	r3, r3
   18528:	lsr	r3, r3, #5
   1852c:	add	r2, r1, r3
   18530:	add	r2, r2, #1
   18534:	str	r2, [r4, #20]
   18538:	strb	ip, [r1, r3]
   1853c:	ldr	r3, [r4, #20]
   18540:	strb	r0, [r3]
   18544:	ldrb	r2, [r4, #25]
   18548:	ldr	r3, [r4, #20]
   1854c:	cmp	r2, #0
   18550:	addne	r3, r3, #1
   18554:	mov	r0, r3
   18558:	str	r3, [r4, #20]
   1855c:	bl	14e70 <test_print@@Base+0x15ec>
   18560:	ldr	r3, [r4, #20]
   18564:	add	r0, r3, r0
   18568:	str	r0, [r4, #20]
   1856c:	b	18444 <flatcc_json_printer_double_field@@Base+0x64>
   18570:	mov	r2, r5
   18574:	mov	r1, r6
   18578:	mov	r0, r4
   1857c:	bl	14660 <test_print@@Base+0xddc>
   18580:	ldr	r5, [r4, #20]
   18584:	b	18508 <flatcc_json_printer_double_field@@Base+0x128>
   18588:	add	r1, r2, #1
   1858c:	mov	r3, #10
   18590:	str	r1, [r0, #20]
   18594:	strb	r3, [r2]
   18598:	ldrb	r7, [r0, #25]
   1859c:	ldr	r2, [r4, #32]
   185a0:	ldr	r1, [r0, #16]
   185a4:	ldr	r0, [r0, #20]
   185a8:	mul	r7, r2, r7
   185ac:	add	r3, r0, r7
   185b0:	cmp	r1, r3
   185b4:	bcs	185cc <flatcc_json_printer_double_field@@Base+0x1ec>
   185b8:	mov	r1, r7
   185bc:	mov	r0, r4
   185c0:	bl	14724 <test_print@@Base+0xea0>
   185c4:	ldr	r2, [r4, #20]
   185c8:	b	184c4 <flatcc_json_printer_double_field@@Base+0xe4>
   185cc:	mov	r2, r7
   185d0:	mov	r1, #32
   185d4:	bl	124c4 <memset@plt>
   185d8:	ldr	r2, [r4, #20]
   185dc:	add	r2, r2, r7
   185e0:	str	r2, [r4, #20]
   185e4:	b	184c4 <flatcc_json_printer_double_field@@Base+0xe4>

000185e8 <flatcc_json_printer_uint8_enum_field@@Base>:
   185e8:	ldr	ip, [r1, #8]
   185ec:	add	r2, r2, #2
   185f0:	lsl	r2, r2, #1
   185f4:	strd	r4, [sp, #-32]!	; 0xffffffe0
   185f8:	strd	r6, [sp, #8]
   185fc:	strd	r8, [sp, #16]
   18600:	str	sl, [sp, #24]
   18604:	cmp	r2, ip
   18608:	str	lr, [sp, #28]
   1860c:	ldrb	lr, [sp, #36]	; 0x24
   18610:	ldr	r7, [sp, #32]
   18614:	ldr	r5, [sp, #40]	; 0x28
   18618:	bge	18760 <flatcc_json_printer_uint8_enum_field@@Base+0x178>
   1861c:	ldr	ip, [r1, #4]
   18620:	ldrh	r2, [ip, r2]
   18624:	cmp	r2, #0
   18628:	beq	18760 <flatcc_json_printer_uint8_enum_field@@Base+0x178>
   1862c:	ldr	ip, [r1]
   18630:	cmn	ip, r2
   18634:	beq	18760 <flatcc_json_printer_uint8_enum_field@@Base+0x178>
   18638:	ldrb	r6, [ip, r2]
   1863c:	cmp	lr, r6
   18640:	beq	18818 <flatcc_json_printer_uint8_enum_field@@Base+0x230>
   18644:	ldr	ip, [r1, #16]
   18648:	ldr	r2, [r0, #20]
   1864c:	cmp	ip, #0
   18650:	add	ip, ip, #1
   18654:	str	ip, [r1, #16]
   18658:	beq	18670 <flatcc_json_printer_uint8_enum_field@@Base+0x88>
   1865c:	add	ip, r2, #1
   18660:	mov	r1, #44	; 0x2c
   18664:	str	ip, [r0, #20]
   18668:	strb	r1, [r2]
   1866c:	ldr	r2, [r0, #20]
   18670:	mov	r8, r3
   18674:	mov	r4, r0
   18678:	ldrb	r1, [r0, #25]
   1867c:	cmp	r1, #0
   18680:	bne	187b8 <flatcc_json_printer_uint8_enum_field@@Base+0x1d0>
   18684:	ldr	r3, [r0, #16]
   18688:	cmp	r3, r2
   1868c:	bhi	1869c <flatcc_json_printer_uint8_enum_field@@Base+0xb4>
   18690:	ldr	r3, [r0, #44]	; 0x2c
   18694:	blx	r3
   18698:	ldr	r2, [r4, #20]
   1869c:	mov	r3, #34	; 0x22
   186a0:	strb	r3, [r2]
   186a4:	ldrb	r3, [r4, #26]
   186a8:	ldr	r2, [r4, #16]
   186ac:	ldr	r0, [r4, #20]
   186b0:	cmp	r3, #0
   186b4:	addeq	r0, r0, #1
   186b8:	add	r3, r0, r7
   186bc:	cmp	r2, r3
   186c0:	str	r0, [r4, #20]
   186c4:	bls	187a0 <flatcc_json_printer_uint8_enum_field@@Base+0x1b8>
   186c8:	mov	r2, r7
   186cc:	mov	r1, r8
   186d0:	bl	12428 <memcpy@plt>
   186d4:	ldr	r3, [r4, #20]
   186d8:	add	r7, r3, r7
   186dc:	str	r7, [r4, #20]
   186e0:	mov	r3, #34	; 0x22
   186e4:	mov	ip, #58	; 0x3a
   186e8:	mov	r0, #32
   186ec:	strb	r3, [r7]
   186f0:	ldrb	r3, [r4, #26]
   186f4:	ldr	r1, [r4, #20]
   186f8:	clz	r3, r3
   186fc:	lsr	r3, r3, #5
   18700:	add	r2, r1, r3
   18704:	add	r2, r2, #1
   18708:	str	r2, [r4, #20]
   1870c:	strb	ip, [r1, r3]
   18710:	ldr	r3, [r4, #20]
   18714:	strb	r0, [r3]
   18718:	ldrb	r2, [r4, #25]
   1871c:	ldr	r1, [r4, #20]
   18720:	ldrb	r3, [r4, #27]
   18724:	cmp	r2, #0
   18728:	addne	r1, r1, #1
   1872c:	cmp	r3, #0
   18730:	str	r1, [r4, #20]
   18734:	bne	18774 <flatcc_json_printer_uint8_enum_field@@Base+0x18c>
   18738:	mov	r1, r6
   1873c:	mov	r0, r4
   18740:	ldrd	r6, [sp, #8]
   18744:	mov	r3, r5
   18748:	ldrd	r4, [sp]
   1874c:	ldrd	r8, [sp, #16]
   18750:	ldr	sl, [sp, #24]
   18754:	ldr	lr, [sp, #28]
   18758:	add	sp, sp, #32
   1875c:	bx	r3
   18760:	ldrb	r2, [r0, #29]
   18764:	cmp	r2, #0
   18768:	beq	18788 <flatcc_json_printer_uint8_enum_field@@Base+0x1a0>
   1876c:	mov	r6, lr
   18770:	b	18644 <flatcc_json_printer_uint8_enum_field@@Base+0x5c>
   18774:	mov	r0, r6
   18778:	bl	149bc <test_print@@Base+0x1138>
   1877c:	ldr	r3, [r4, #20]
   18780:	add	r0, r3, r0
   18784:	str	r0, [r4, #20]
   18788:	ldrd	r4, [sp]
   1878c:	ldrd	r6, [sp, #8]
   18790:	ldrd	r8, [sp, #16]
   18794:	ldr	sl, [sp, #24]
   18798:	add	sp, sp, #28
   1879c:	pop	{pc}		; (ldr pc, [sp], #4)
   187a0:	mov	r2, r7
   187a4:	mov	r1, r8
   187a8:	mov	r0, r4
   187ac:	bl	14660 <test_print@@Base+0xddc>
   187b0:	ldr	r7, [r4, #20]
   187b4:	b	186e0 <flatcc_json_printer_uint8_enum_field@@Base+0xf8>
   187b8:	add	r1, r2, #1
   187bc:	mov	r3, #10
   187c0:	str	r1, [r0, #20]
   187c4:	strb	r3, [r2]
   187c8:	ldrb	r3, [r0, #25]
   187cc:	ldr	r2, [r4, #32]
   187d0:	ldr	r1, [r0, #16]
   187d4:	ldr	r0, [r0, #20]
   187d8:	mul	r9, r2, r3
   187dc:	add	r3, r0, r9
   187e0:	cmp	r1, r3
   187e4:	bcs	187fc <flatcc_json_printer_uint8_enum_field@@Base+0x214>
   187e8:	mov	r1, r9
   187ec:	mov	r0, r4
   187f0:	bl	14724 <test_print@@Base+0xea0>
   187f4:	ldr	r2, [r4, #20]
   187f8:	b	1869c <flatcc_json_printer_uint8_enum_field@@Base+0xb4>
   187fc:	mov	r2, r9
   18800:	mov	r1, #32
   18804:	bl	124c4 <memset@plt>
   18808:	ldr	r2, [r4, #20]
   1880c:	add	r2, r2, r9
   18810:	str	r2, [r4, #20]
   18814:	b	1869c <flatcc_json_printer_uint8_enum_field@@Base+0xb4>
   18818:	ldrb	r2, [r0, #28]
   1881c:	cmp	r2, #0
   18820:	beq	18644 <flatcc_json_printer_uint8_enum_field@@Base+0x5c>
   18824:	b	18788 <flatcc_json_printer_uint8_enum_field@@Base+0x1a0>

00018828 <flatcc_json_printer_uint16_enum_field@@Base>:
   18828:	ldr	ip, [r1, #8]
   1882c:	add	r2, r2, #2
   18830:	lsl	r2, r2, #1
   18834:	strd	r4, [sp, #-32]!	; 0xffffffe0
   18838:	strd	r6, [sp, #8]
   1883c:	strd	r8, [sp, #16]
   18840:	str	sl, [sp, #24]
   18844:	cmp	r2, ip
   18848:	str	lr, [sp, #28]
   1884c:	ldrh	lr, [sp, #36]	; 0x24
   18850:	ldr	r7, [sp, #32]
   18854:	ldr	r5, [sp, #40]	; 0x28
   18858:	bge	189a0 <flatcc_json_printer_uint16_enum_field@@Base+0x178>
   1885c:	ldr	ip, [r1, #4]
   18860:	ldrh	r2, [ip, r2]
   18864:	cmp	r2, #0
   18868:	beq	189a0 <flatcc_json_printer_uint16_enum_field@@Base+0x178>
   1886c:	ldr	ip, [r1]
   18870:	cmn	ip, r2
   18874:	beq	189a0 <flatcc_json_printer_uint16_enum_field@@Base+0x178>
   18878:	ldrh	r6, [ip, r2]
   1887c:	cmp	lr, r6
   18880:	beq	18a58 <flatcc_json_printer_uint16_enum_field@@Base+0x230>
   18884:	ldr	ip, [r1, #16]
   18888:	ldr	r2, [r0, #20]
   1888c:	cmp	ip, #0
   18890:	add	ip, ip, #1
   18894:	str	ip, [r1, #16]
   18898:	beq	188b0 <flatcc_json_printer_uint16_enum_field@@Base+0x88>
   1889c:	add	ip, r2, #1
   188a0:	mov	r1, #44	; 0x2c
   188a4:	str	ip, [r0, #20]
   188a8:	strb	r1, [r2]
   188ac:	ldr	r2, [r0, #20]
   188b0:	mov	r8, r3
   188b4:	mov	r4, r0
   188b8:	ldrb	r1, [r0, #25]
   188bc:	cmp	r1, #0
   188c0:	bne	189f8 <flatcc_json_printer_uint16_enum_field@@Base+0x1d0>
   188c4:	ldr	r3, [r0, #16]
   188c8:	cmp	r3, r2
   188cc:	bhi	188dc <flatcc_json_printer_uint16_enum_field@@Base+0xb4>
   188d0:	ldr	r3, [r0, #44]	; 0x2c
   188d4:	blx	r3
   188d8:	ldr	r2, [r4, #20]
   188dc:	mov	r3, #34	; 0x22
   188e0:	strb	r3, [r2]
   188e4:	ldrb	r3, [r4, #26]
   188e8:	ldr	r2, [r4, #16]
   188ec:	ldr	r0, [r4, #20]
   188f0:	cmp	r3, #0
   188f4:	addeq	r0, r0, #1
   188f8:	add	r3, r0, r7
   188fc:	cmp	r2, r3
   18900:	str	r0, [r4, #20]
   18904:	bls	189e0 <flatcc_json_printer_uint16_enum_field@@Base+0x1b8>
   18908:	mov	r2, r7
   1890c:	mov	r1, r8
   18910:	bl	12428 <memcpy@plt>
   18914:	ldr	r3, [r4, #20]
   18918:	add	r7, r3, r7
   1891c:	str	r7, [r4, #20]
   18920:	mov	r3, #34	; 0x22
   18924:	mov	ip, #58	; 0x3a
   18928:	mov	r0, #32
   1892c:	strb	r3, [r7]
   18930:	ldrb	r3, [r4, #26]
   18934:	ldr	r1, [r4, #20]
   18938:	clz	r3, r3
   1893c:	lsr	r3, r3, #5
   18940:	add	r2, r1, r3
   18944:	add	r2, r2, #1
   18948:	str	r2, [r4, #20]
   1894c:	strb	ip, [r1, r3]
   18950:	ldr	r3, [r4, #20]
   18954:	strb	r0, [r3]
   18958:	ldrb	r2, [r4, #25]
   1895c:	ldr	r1, [r4, #20]
   18960:	ldrb	r3, [r4, #27]
   18964:	cmp	r2, #0
   18968:	addne	r1, r1, #1
   1896c:	cmp	r3, #0
   18970:	str	r1, [r4, #20]
   18974:	bne	189b4 <flatcc_json_printer_uint16_enum_field@@Base+0x18c>
   18978:	mov	r1, r6
   1897c:	mov	r0, r4
   18980:	ldrd	r6, [sp, #8]
   18984:	mov	r3, r5
   18988:	ldrd	r4, [sp]
   1898c:	ldrd	r8, [sp, #16]
   18990:	ldr	sl, [sp, #24]
   18994:	ldr	lr, [sp, #28]
   18998:	add	sp, sp, #32
   1899c:	bx	r3
   189a0:	ldrb	r2, [r0, #29]
   189a4:	cmp	r2, #0
   189a8:	beq	189c8 <flatcc_json_printer_uint16_enum_field@@Base+0x1a0>
   189ac:	mov	r6, lr
   189b0:	b	18884 <flatcc_json_printer_uint16_enum_field@@Base+0x5c>
   189b4:	mov	r0, r6
   189b8:	bl	13b40 <test_print@@Base+0x2bc>
   189bc:	ldr	r3, [r4, #20]
   189c0:	add	r0, r3, r0
   189c4:	str	r0, [r4, #20]
   189c8:	ldrd	r4, [sp]
   189cc:	ldrd	r6, [sp, #8]
   189d0:	ldrd	r8, [sp, #16]
   189d4:	ldr	sl, [sp, #24]
   189d8:	add	sp, sp, #28
   189dc:	pop	{pc}		; (ldr pc, [sp], #4)
   189e0:	mov	r2, r7
   189e4:	mov	r1, r8
   189e8:	mov	r0, r4
   189ec:	bl	14660 <test_print@@Base+0xddc>
   189f0:	ldr	r7, [r4, #20]
   189f4:	b	18920 <flatcc_json_printer_uint16_enum_field@@Base+0xf8>
   189f8:	add	r1, r2, #1
   189fc:	mov	r3, #10
   18a00:	str	r1, [r0, #20]
   18a04:	strb	r3, [r2]
   18a08:	ldrb	r3, [r0, #25]
   18a0c:	ldr	r2, [r4, #32]
   18a10:	ldr	r1, [r0, #16]
   18a14:	ldr	r0, [r0, #20]
   18a18:	mul	r9, r2, r3
   18a1c:	add	r3, r0, r9
   18a20:	cmp	r1, r3
   18a24:	bcs	18a3c <flatcc_json_printer_uint16_enum_field@@Base+0x214>
   18a28:	mov	r1, r9
   18a2c:	mov	r0, r4
   18a30:	bl	14724 <test_print@@Base+0xea0>
   18a34:	ldr	r2, [r4, #20]
   18a38:	b	188dc <flatcc_json_printer_uint16_enum_field@@Base+0xb4>
   18a3c:	mov	r2, r9
   18a40:	mov	r1, #32
   18a44:	bl	124c4 <memset@plt>
   18a48:	ldr	r2, [r4, #20]
   18a4c:	add	r2, r2, r9
   18a50:	str	r2, [r4, #20]
   18a54:	b	188dc <flatcc_json_printer_uint16_enum_field@@Base+0xb4>
   18a58:	ldrb	r2, [r0, #28]
   18a5c:	cmp	r2, #0
   18a60:	beq	18884 <flatcc_json_printer_uint16_enum_field@@Base+0x5c>
   18a64:	b	189c8 <flatcc_json_printer_uint16_enum_field@@Base+0x1a0>

00018a68 <flatcc_json_printer_uint32_enum_field@@Base>:
   18a68:	ldr	ip, [r1, #8]
   18a6c:	add	r2, r2, #2
   18a70:	lsl	r2, r2, #1
   18a74:	strd	r4, [sp, #-32]!	; 0xffffffe0
   18a78:	strd	r6, [sp, #8]
   18a7c:	strd	r8, [sp, #16]
   18a80:	str	sl, [sp, #24]
   18a84:	cmp	r2, ip
   18a88:	str	lr, [sp, #28]
   18a8c:	ldr	r5, [sp, #32]
   18a90:	ldr	lr, [sp, #36]	; 0x24
   18a94:	ldr	r6, [sp, #40]	; 0x28
   18a98:	bge	18be0 <flatcc_json_printer_uint32_enum_field@@Base+0x178>
   18a9c:	ldr	ip, [r1, #4]
   18aa0:	ldrh	r2, [ip, r2]
   18aa4:	cmp	r2, #0
   18aa8:	beq	18be0 <flatcc_json_printer_uint32_enum_field@@Base+0x178>
   18aac:	ldr	ip, [r1]
   18ab0:	cmn	ip, r2
   18ab4:	beq	18be0 <flatcc_json_printer_uint32_enum_field@@Base+0x178>
   18ab8:	ldr	r7, [ip, r2]
   18abc:	cmp	lr, r7
   18ac0:	beq	18c98 <flatcc_json_printer_uint32_enum_field@@Base+0x230>
   18ac4:	ldr	ip, [r1, #16]
   18ac8:	ldr	r2, [r0, #20]
   18acc:	cmp	ip, #0
   18ad0:	add	ip, ip, #1
   18ad4:	str	ip, [r1, #16]
   18ad8:	beq	18af0 <flatcc_json_printer_uint32_enum_field@@Base+0x88>
   18adc:	add	ip, r2, #1
   18ae0:	mov	r1, #44	; 0x2c
   18ae4:	str	ip, [r0, #20]
   18ae8:	strb	r1, [r2]
   18aec:	ldr	r2, [r0, #20]
   18af0:	mov	r8, r3
   18af4:	mov	r4, r0
   18af8:	ldrb	r1, [r0, #25]
   18afc:	cmp	r1, #0
   18b00:	bne	18c38 <flatcc_json_printer_uint32_enum_field@@Base+0x1d0>
   18b04:	ldr	r3, [r0, #16]
   18b08:	cmp	r3, r2
   18b0c:	bhi	18b1c <flatcc_json_printer_uint32_enum_field@@Base+0xb4>
   18b10:	ldr	r3, [r0, #44]	; 0x2c
   18b14:	blx	r3
   18b18:	ldr	r2, [r4, #20]
   18b1c:	mov	r3, #34	; 0x22
   18b20:	strb	r3, [r2]
   18b24:	ldrb	r3, [r4, #26]
   18b28:	ldr	r2, [r4, #16]
   18b2c:	ldr	r0, [r4, #20]
   18b30:	cmp	r3, #0
   18b34:	addeq	r0, r0, #1
   18b38:	add	r3, r0, r5
   18b3c:	cmp	r2, r3
   18b40:	str	r0, [r4, #20]
   18b44:	bls	18c20 <flatcc_json_printer_uint32_enum_field@@Base+0x1b8>
   18b48:	mov	r2, r5
   18b4c:	mov	r1, r8
   18b50:	bl	12428 <memcpy@plt>
   18b54:	ldr	r3, [r4, #20]
   18b58:	add	r5, r3, r5
   18b5c:	str	r5, [r4, #20]
   18b60:	mov	r3, #34	; 0x22
   18b64:	mov	ip, #58	; 0x3a
   18b68:	mov	r0, #32
   18b6c:	strb	r3, [r5]
   18b70:	ldrb	r3, [r4, #26]
   18b74:	ldr	r1, [r4, #20]
   18b78:	clz	r3, r3
   18b7c:	lsr	r3, r3, #5
   18b80:	add	r2, r1, r3
   18b84:	add	r2, r2, #1
   18b88:	str	r2, [r4, #20]
   18b8c:	strb	ip, [r1, r3]
   18b90:	ldr	r3, [r4, #20]
   18b94:	strb	r0, [r3]
   18b98:	ldrb	r2, [r4, #25]
   18b9c:	ldr	r1, [r4, #20]
   18ba0:	ldrb	r3, [r4, #27]
   18ba4:	cmp	r2, #0
   18ba8:	addne	r1, r1, #1
   18bac:	cmp	r3, #0
   18bb0:	str	r1, [r4, #20]
   18bb4:	bne	18bf4 <flatcc_json_printer_uint32_enum_field@@Base+0x18c>
   18bb8:	mov	r1, r7
   18bbc:	mov	r0, r4
   18bc0:	ldrd	r4, [sp]
   18bc4:	mov	r3, r6
   18bc8:	ldrd	r6, [sp, #8]
   18bcc:	ldrd	r8, [sp, #16]
   18bd0:	ldr	sl, [sp, #24]
   18bd4:	ldr	lr, [sp, #28]
   18bd8:	add	sp, sp, #32
   18bdc:	bx	r3
   18be0:	ldrb	r2, [r0, #29]
   18be4:	cmp	r2, #0
   18be8:	beq	18c08 <flatcc_json_printer_uint32_enum_field@@Base+0x1a0>
   18bec:	mov	r7, lr
   18bf0:	b	18ac4 <flatcc_json_printer_uint32_enum_field@@Base+0x5c>
   18bf4:	mov	r0, r7
   18bf8:	bl	13c98 <test_print@@Base+0x414>
   18bfc:	ldr	r3, [r4, #20]
   18c00:	add	r0, r3, r0
   18c04:	str	r0, [r4, #20]
   18c08:	ldrd	r4, [sp]
   18c0c:	ldrd	r6, [sp, #8]
   18c10:	ldrd	r8, [sp, #16]
   18c14:	ldr	sl, [sp, #24]
   18c18:	add	sp, sp, #28
   18c1c:	pop	{pc}		; (ldr pc, [sp], #4)
   18c20:	mov	r2, r5
   18c24:	mov	r1, r8
   18c28:	mov	r0, r4
   18c2c:	bl	14660 <test_print@@Base+0xddc>
   18c30:	ldr	r5, [r4, #20]
   18c34:	b	18b60 <flatcc_json_printer_uint32_enum_field@@Base+0xf8>
   18c38:	add	r1, r2, #1
   18c3c:	mov	r3, #10
   18c40:	str	r1, [r0, #20]
   18c44:	strb	r3, [r2]
   18c48:	ldrb	r3, [r0, #25]
   18c4c:	ldr	r2, [r4, #32]
   18c50:	ldr	r1, [r0, #16]
   18c54:	ldr	r0, [r0, #20]
   18c58:	mul	r9, r2, r3
   18c5c:	add	r3, r0, r9
   18c60:	cmp	r1, r3
   18c64:	bcs	18c7c <flatcc_json_printer_uint32_enum_field@@Base+0x214>
   18c68:	mov	r1, r9
   18c6c:	mov	r0, r4
   18c70:	bl	14724 <test_print@@Base+0xea0>
   18c74:	ldr	r2, [r4, #20]
   18c78:	b	18b1c <flatcc_json_printer_uint32_enum_field@@Base+0xb4>
   18c7c:	mov	r2, r9
   18c80:	mov	r1, #32
   18c84:	bl	124c4 <memset@plt>
   18c88:	ldr	r2, [r4, #20]
   18c8c:	add	r2, r2, r9
   18c90:	str	r2, [r4, #20]
   18c94:	b	18b1c <flatcc_json_printer_uint32_enum_field@@Base+0xb4>
   18c98:	ldrb	r2, [r0, #28]
   18c9c:	cmp	r2, #0
   18ca0:	beq	18ac4 <flatcc_json_printer_uint32_enum_field@@Base+0x5c>
   18ca4:	b	18c08 <flatcc_json_printer_uint32_enum_field@@Base+0x1a0>

00018ca8 <flatcc_json_printer_uint64_enum_field@@Base>:
   18ca8:	ldr	ip, [r1, #8]
   18cac:	add	r2, r2, #2
   18cb0:	lsl	r2, r2, #1
   18cb4:	strd	r4, [sp, #-36]!	; 0xffffffdc
   18cb8:	strd	r6, [sp, #8]
   18cbc:	strd	r8, [sp, #16]
   18cc0:	strd	sl, [sp, #24]
   18cc4:	cmp	r2, ip
   18cc8:	str	lr, [sp, #32]
   18ccc:	sub	sp, sp, #4
   18cd0:	ldr	r8, [sp, #40]	; 0x28
   18cd4:	ldrd	sl, [sp, #48]	; 0x30
   18cd8:	ldr	r5, [sp, #56]	; 0x38
   18cdc:	bge	18e30 <flatcc_json_printer_uint64_enum_field@@Base+0x188>
   18ce0:	ldr	ip, [r1, #4]
   18ce4:	ldrh	r2, [ip, r2]
   18ce8:	cmp	r2, #0
   18cec:	beq	18e30 <flatcc_json_printer_uint64_enum_field@@Base+0x188>
   18cf0:	ldr	ip, [r1]
   18cf4:	cmn	ip, r2
   18cf8:	beq	18e30 <flatcc_json_printer_uint64_enum_field@@Base+0x188>
   18cfc:	ldrd	r6, [ip, r2]
   18d00:	cmp	fp, r7
   18d04:	cmpeq	sl, r6
   18d08:	beq	18ef4 <flatcc_json_printer_uint64_enum_field@@Base+0x24c>
   18d0c:	ldr	ip, [r1, #16]
   18d10:	ldr	r2, [r0, #20]
   18d14:	cmp	ip, #0
   18d18:	add	ip, ip, #1
   18d1c:	str	ip, [r1, #16]
   18d20:	beq	18d38 <flatcc_json_printer_uint64_enum_field@@Base+0x90>
   18d24:	add	ip, r2, #1
   18d28:	mov	r1, #44	; 0x2c
   18d2c:	str	ip, [r0, #20]
   18d30:	strb	r1, [r2]
   18d34:	ldr	r2, [r0, #20]
   18d38:	mov	r9, r3
   18d3c:	mov	r4, r0
   18d40:	ldrb	r1, [r0, #25]
   18d44:	cmp	r1, #0
   18d48:	bne	18e94 <flatcc_json_printer_uint64_enum_field@@Base+0x1ec>
   18d4c:	ldr	r3, [r0, #16]
   18d50:	cmp	r3, r2
   18d54:	bhi	18d64 <flatcc_json_printer_uint64_enum_field@@Base+0xbc>
   18d58:	ldr	r3, [r0, #44]	; 0x2c
   18d5c:	blx	r3
   18d60:	ldr	r2, [r4, #20]
   18d64:	mov	r3, #34	; 0x22
   18d68:	strb	r3, [r2]
   18d6c:	ldrb	r3, [r4, #26]
   18d70:	ldr	r2, [r4, #16]
   18d74:	ldr	r0, [r4, #20]
   18d78:	cmp	r3, #0
   18d7c:	addeq	r0, r0, #1
   18d80:	add	r3, r0, r8
   18d84:	cmp	r2, r3
   18d88:	str	r0, [r4, #20]
   18d8c:	bls	18e7c <flatcc_json_printer_uint64_enum_field@@Base+0x1d4>
   18d90:	mov	r2, r8
   18d94:	mov	r1, r9
   18d98:	bl	12428 <memcpy@plt>
   18d9c:	ldr	r3, [r4, #20]
   18da0:	add	r8, r3, r8
   18da4:	str	r8, [r4, #20]
   18da8:	mov	r3, #34	; 0x22
   18dac:	mov	ip, #58	; 0x3a
   18db0:	mov	r0, #32
   18db4:	strb	r3, [r8]
   18db8:	ldrb	r3, [r4, #26]
   18dbc:	ldr	r1, [r4, #20]
   18dc0:	clz	r3, r3
   18dc4:	lsr	r3, r3, #5
   18dc8:	add	r2, r1, r3
   18dcc:	add	r2, r2, #1
   18dd0:	str	r2, [r4, #20]
   18dd4:	strb	ip, [r1, r3]
   18dd8:	ldr	r3, [r4, #20]
   18ddc:	strb	r0, [r3]
   18de0:	ldrb	r1, [r4, #25]
   18de4:	ldr	r2, [r4, #20]
   18de8:	ldrb	r3, [r4, #27]
   18dec:	cmp	r1, #0
   18df0:	addne	r2, r2, #1
   18df4:	cmp	r3, #0
   18df8:	str	r2, [r4, #20]
   18dfc:	bne	18e48 <flatcc_json_printer_uint64_enum_field@@Base+0x1a0>
   18e00:	mov	r2, r6
   18e04:	mov	r3, r7
   18e08:	mov	r0, r4
   18e0c:	mov	r1, r5
   18e10:	add	sp, sp, #4
   18e14:	ldrd	r4, [sp]
   18e18:	ldrd	r6, [sp, #8]
   18e1c:	ldrd	r8, [sp, #16]
   18e20:	ldrd	sl, [sp, #24]
   18e24:	ldr	lr, [sp, #32]
   18e28:	add	sp, sp, #36	; 0x24
   18e2c:	bx	r1
   18e30:	ldrb	r2, [r0, #29]
   18e34:	cmp	r2, #0
   18e38:	beq	18e60 <flatcc_json_printer_uint64_enum_field@@Base+0x1b8>
   18e3c:	mov	r6, sl
   18e40:	mov	r7, fp
   18e44:	b	18d0c <flatcc_json_printer_uint64_enum_field@@Base+0x64>
   18e48:	mov	r0, r6
   18e4c:	mov	r1, r7
   18e50:	bl	13fac <test_print@@Base+0x728>
   18e54:	ldr	r3, [r4, #20]
   18e58:	add	r0, r3, r0
   18e5c:	str	r0, [r4, #20]
   18e60:	add	sp, sp, #4
   18e64:	ldrd	r4, [sp]
   18e68:	ldrd	r6, [sp, #8]
   18e6c:	ldrd	r8, [sp, #16]
   18e70:	ldrd	sl, [sp, #24]
   18e74:	add	sp, sp, #32
   18e78:	pop	{pc}		; (ldr pc, [sp], #4)
   18e7c:	mov	r2, r8
   18e80:	mov	r1, r9
   18e84:	mov	r0, r4
   18e88:	bl	14660 <test_print@@Base+0xddc>
   18e8c:	ldr	r8, [r4, #20]
   18e90:	b	18da8 <flatcc_json_printer_uint64_enum_field@@Base+0x100>
   18e94:	add	r1, r2, #1
   18e98:	mov	r3, #10
   18e9c:	str	r1, [r0, #20]
   18ea0:	strb	r3, [r2]
   18ea4:	ldrb	r3, [r0, #25]
   18ea8:	ldr	r2, [r4, #32]
   18eac:	ldr	r1, [r0, #16]
   18eb0:	ldr	r0, [r0, #20]
   18eb4:	mul	sl, r2, r3
   18eb8:	add	r3, r0, sl
   18ebc:	cmp	r1, r3
   18ec0:	bcs	18ed8 <flatcc_json_printer_uint64_enum_field@@Base+0x230>
   18ec4:	mov	r1, sl
   18ec8:	mov	r0, r4
   18ecc:	bl	14724 <test_print@@Base+0xea0>
   18ed0:	ldr	r2, [r4, #20]
   18ed4:	b	18d64 <flatcc_json_printer_uint64_enum_field@@Base+0xbc>
   18ed8:	mov	r2, sl
   18edc:	mov	r1, #32
   18ee0:	bl	124c4 <memset@plt>
   18ee4:	ldr	r2, [r4, #20]
   18ee8:	add	r2, r2, sl
   18eec:	str	r2, [r4, #20]
   18ef0:	b	18d64 <flatcc_json_printer_uint64_enum_field@@Base+0xbc>
   18ef4:	ldrb	r2, [r0, #28]
   18ef8:	cmp	r2, #0
   18efc:	beq	18d0c <flatcc_json_printer_uint64_enum_field@@Base+0x64>
   18f00:	b	18e60 <flatcc_json_printer_uint64_enum_field@@Base+0x1b8>

00018f04 <flatcc_json_printer_int8_enum_field@@Base>:
   18f04:	ldr	ip, [r1, #8]
   18f08:	add	r2, r2, #2
   18f0c:	lsl	r2, r2, #1
   18f10:	strd	r4, [sp, #-32]!	; 0xffffffe0
   18f14:	strd	r6, [sp, #8]
   18f18:	strd	r8, [sp, #16]
   18f1c:	str	sl, [sp, #24]
   18f20:	cmp	r2, ip
   18f24:	str	lr, [sp, #28]
   18f28:	ldrsb	lr, [sp, #36]	; 0x24
   18f2c:	ldr	r7, [sp, #32]
   18f30:	ldr	r6, [sp, #40]	; 0x28
   18f34:	bge	190c8 <flatcc_json_printer_int8_enum_field@@Base+0x1c4>
   18f38:	ldr	ip, [r1, #4]
   18f3c:	ldrh	r2, [ip, r2]
   18f40:	cmp	r2, #0
   18f44:	beq	190c8 <flatcc_json_printer_int8_enum_field@@Base+0x1c4>
   18f48:	ldr	ip, [r1]
   18f4c:	cmn	ip, r2
   18f50:	beq	190c8 <flatcc_json_printer_int8_enum_field@@Base+0x1c4>
   18f54:	ldrsb	r5, [ip, r2]
   18f58:	cmp	lr, r5
   18f5c:	beq	1917c <flatcc_json_printer_int8_enum_field@@Base+0x278>
   18f60:	ldr	ip, [r1, #16]
   18f64:	ldr	r2, [r0, #20]
   18f68:	cmp	ip, #0
   18f6c:	add	ip, ip, #1
   18f70:	str	ip, [r1, #16]
   18f74:	beq	18f8c <flatcc_json_printer_int8_enum_field@@Base+0x88>
   18f78:	add	ip, r2, #1
   18f7c:	mov	r1, #44	; 0x2c
   18f80:	str	ip, [r0, #20]
   18f84:	strb	r1, [r2]
   18f88:	ldr	r2, [r0, #20]
   18f8c:	mov	r8, r3
   18f90:	mov	r4, r0
   18f94:	ldrb	r1, [r0, #25]
   18f98:	cmp	r1, #0
   18f9c:	bne	1911c <flatcc_json_printer_int8_enum_field@@Base+0x218>
   18fa0:	ldr	r3, [r0, #16]
   18fa4:	cmp	r3, r2
   18fa8:	bhi	18fb8 <flatcc_json_printer_int8_enum_field@@Base+0xb4>
   18fac:	ldr	r3, [r0, #44]	; 0x2c
   18fb0:	blx	r3
   18fb4:	ldr	r2, [r4, #20]
   18fb8:	mov	r3, #34	; 0x22
   18fbc:	strb	r3, [r2]
   18fc0:	ldrb	r3, [r4, #26]
   18fc4:	ldr	r2, [r4, #16]
   18fc8:	ldr	r0, [r4, #20]
   18fcc:	cmp	r3, #0
   18fd0:	addeq	r0, r0, #1
   18fd4:	add	r3, r0, r7
   18fd8:	cmp	r2, r3
   18fdc:	str	r0, [r4, #20]
   18fe0:	bls	19104 <flatcc_json_printer_int8_enum_field@@Base+0x200>
   18fe4:	mov	r2, r7
   18fe8:	mov	r1, r8
   18fec:	bl	12428 <memcpy@plt>
   18ff0:	ldr	r3, [r4, #20]
   18ff4:	add	r7, r3, r7
   18ff8:	str	r7, [r4, #20]
   18ffc:	mov	r3, #34	; 0x22
   19000:	mov	ip, #58	; 0x3a
   19004:	mov	r0, #32
   19008:	strb	r3, [r7]
   1900c:	ldrb	r3, [r4, #26]
   19010:	ldr	r1, [r4, #20]
   19014:	clz	r3, r3
   19018:	lsr	r3, r3, #5
   1901c:	add	r2, r1, r3
   19020:	add	r2, r2, #1
   19024:	str	r2, [r4, #20]
   19028:	strb	ip, [r1, r3]
   1902c:	ldr	r3, [r4, #20]
   19030:	strb	r0, [r3]
   19034:	ldrb	r3, [r4, #25]
   19038:	ldr	r1, [r4, #20]
   1903c:	ldrb	r0, [r4, #27]
   19040:	adds	r3, r3, #0
   19044:	movne	r3, #1
   19048:	add	r2, r1, r3
   1904c:	cmp	r0, #0
   19050:	str	r2, [r4, #20]
   19054:	beq	190dc <flatcc_json_printer_int8_enum_field@@Base+0x1d8>
   19058:	cmp	r5, #0
   1905c:	lsr	r0, r5, #31
   19060:	uxtb	r5, r5
   19064:	bge	1907c <flatcc_json_printer_int8_enum_field@@Base+0x178>
   19068:	rsb	r5, r5, #0
   1906c:	mov	ip, #45	; 0x2d
   19070:	add	r2, r2, #1
   19074:	uxtb	r5, r5
   19078:	strb	ip, [r1, r3]
   1907c:	cmp	r5, #99	; 0x63
   19080:	bhi	1918c <flatcc_json_printer_int8_enum_field@@Base+0x288>
   19084:	cmp	r5, #9
   19088:	bhi	191dc <flatcc_json_printer_int8_enum_field@@Base+0x2d8>
   1908c:	add	r5, r5, #48	; 0x30
   19090:	mov	r1, #0
   19094:	mov	lr, #1
   19098:	strb	r5, [r2]
   1909c:	strb	r1, [r2, #1]
   190a0:	ldr	r3, [r4, #20]
   190a4:	add	r2, r0, lr
   190a8:	add	r3, r3, r2
   190ac:	str	r3, [r4, #20]
   190b0:	ldrd	r4, [sp]
   190b4:	ldrd	r6, [sp, #8]
   190b8:	ldrd	r8, [sp, #16]
   190bc:	ldr	sl, [sp, #24]
   190c0:	add	sp, sp, #28
   190c4:	pop	{pc}		; (ldr pc, [sp], #4)
   190c8:	ldrb	r2, [r0, #29]
   190cc:	cmp	r2, #0
   190d0:	beq	190b0 <flatcc_json_printer_int8_enum_field@@Base+0x1ac>
   190d4:	mov	r5, lr
   190d8:	b	18f60 <flatcc_json_printer_int8_enum_field@@Base+0x5c>
   190dc:	mov	r1, r5
   190e0:	mov	r0, r4
   190e4:	ldrd	r4, [sp]
   190e8:	mov	r3, r6
   190ec:	ldrd	r6, [sp, #8]
   190f0:	ldrd	r8, [sp, #16]
   190f4:	ldr	sl, [sp, #24]
   190f8:	ldr	lr, [sp, #28]
   190fc:	add	sp, sp, #32
   19100:	bx	r3
   19104:	mov	r2, r7
   19108:	mov	r1, r8
   1910c:	mov	r0, r4
   19110:	bl	14660 <test_print@@Base+0xddc>
   19114:	ldr	r7, [r4, #20]
   19118:	b	18ffc <flatcc_json_printer_int8_enum_field@@Base+0xf8>
   1911c:	add	r1, r2, #1
   19120:	mov	r3, #10
   19124:	str	r1, [r0, #20]
   19128:	strb	r3, [r2]
   1912c:	ldrb	r3, [r0, #25]
   19130:	ldr	r2, [r4, #32]
   19134:	ldr	ip, [r0, #16]
   19138:	ldr	r0, [r0, #20]
   1913c:	mul	r9, r2, r3
   19140:	add	r3, r0, r9
   19144:	cmp	ip, r3
   19148:	bcs	19160 <flatcc_json_printer_int8_enum_field@@Base+0x25c>
   1914c:	mov	r1, r9
   19150:	mov	r0, r4
   19154:	bl	14724 <test_print@@Base+0xea0>
   19158:	ldr	r2, [r4, #20]
   1915c:	b	18fb8 <flatcc_json_printer_int8_enum_field@@Base+0xb4>
   19160:	mov	r2, r9
   19164:	mov	r1, #32
   19168:	bl	124c4 <memset@plt>
   1916c:	ldr	r2, [r4, #20]
   19170:	add	r2, r2, r9
   19174:	str	r2, [r4, #20]
   19178:	b	18fb8 <flatcc_json_printer_int8_enum_field@@Base+0xb4>
   1917c:	ldrb	r2, [r0, #28]
   19180:	cmp	r2, #0
   19184:	beq	18f60 <flatcc_json_printer_int8_enum_field@@Base+0x5c>
   19188:	b	190b0 <flatcc_json_printer_int8_enum_field@@Base+0x1ac>
   1918c:	movw	r3, #34079	; 0x851f
   19190:	movt	r3, #20971	; 0x51eb
   19194:	mov	r1, #0
   19198:	mov	r7, #100	; 0x64
   1919c:	umull	ip, r3, r3, r5
   191a0:	movw	ip, #10976	; 0x2ae0
   191a4:	movt	ip, #2
   191a8:	strb	r1, [r2, #3]
   191ac:	mov	r6, #49	; 0x31
   191b0:	mov	lr, #3
   191b4:	lsr	r1, r3, #5
   191b8:	mls	r5, r7, r1, r5
   191bc:	uxtb	r5, r5
   191c0:	ldrb	r3, [ip, r5, lsl #1]
   191c4:	add	r5, ip, r5, lsl #1
   191c8:	strb	r3, [r2, #1]
   191cc:	ldrb	r3, [r5, #1]
   191d0:	strb	r6, [r2]
   191d4:	strb	r3, [r2, #2]
   191d8:	b	190a0 <flatcc_json_printer_int8_enum_field@@Base+0x19c>
   191dc:	mov	r3, #0
   191e0:	sxth	r5, r5
   191e4:	movw	r1, #10976	; 0x2ae0
   191e8:	movt	r1, #2
   191ec:	strb	r3, [r2, #2]
   191f0:	add	r3, r1, r5, lsl #1
   191f4:	mov	lr, #2
   191f8:	ldrb	r1, [r1, r5, lsl #1]
   191fc:	strb	r1, [r2]
   19200:	ldrb	r3, [r3, #1]
   19204:	strb	r3, [r2, #1]
   19208:	b	190a0 <flatcc_json_printer_int8_enum_field@@Base+0x19c>

0001920c <flatcc_json_printer_int16_enum_field@@Base>:
   1920c:	ldr	ip, [r1, #8]
   19210:	add	r2, r2, #2
   19214:	lsl	r2, r2, #1
   19218:	strd	r4, [sp, #-32]!	; 0xffffffe0
   1921c:	strd	r6, [sp, #8]
   19220:	strd	r8, [sp, #16]
   19224:	str	sl, [sp, #24]
   19228:	cmp	r2, ip
   1922c:	str	lr, [sp, #28]
   19230:	ldrsh	lr, [sp, #36]	; 0x24
   19234:	ldr	r7, [sp, #32]
   19238:	ldr	r6, [sp, #40]	; 0x28
   1923c:	bge	193b0 <flatcc_json_printer_int16_enum_field@@Base+0x1a4>
   19240:	ldr	ip, [r1, #4]
   19244:	ldrh	r2, [ip, r2]
   19248:	cmp	r2, #0
   1924c:	beq	193b0 <flatcc_json_printer_int16_enum_field@@Base+0x1a4>
   19250:	ldr	ip, [r1]
   19254:	cmn	ip, r2
   19258:	beq	193b0 <flatcc_json_printer_int16_enum_field@@Base+0x1a4>
   1925c:	ldrsh	r5, [ip, r2]
   19260:	cmp	lr, r5
   19264:	beq	19464 <flatcc_json_printer_int16_enum_field@@Base+0x258>
   19268:	ldr	ip, [r1, #16]
   1926c:	ldr	r2, [r0, #20]
   19270:	cmp	ip, #0
   19274:	add	ip, ip, #1
   19278:	str	ip, [r1, #16]
   1927c:	beq	19294 <flatcc_json_printer_int16_enum_field@@Base+0x88>
   19280:	add	ip, r2, #1
   19284:	mov	r1, #44	; 0x2c
   19288:	str	ip, [r0, #20]
   1928c:	strb	r1, [r2]
   19290:	ldr	r2, [r0, #20]
   19294:	mov	r8, r3
   19298:	mov	r4, r0
   1929c:	ldrb	r1, [r0, #25]
   192a0:	cmp	r1, #0
   192a4:	bne	19404 <flatcc_json_printer_int16_enum_field@@Base+0x1f8>
   192a8:	ldr	r3, [r0, #16]
   192ac:	cmp	r3, r2
   192b0:	bhi	192c0 <flatcc_json_printer_int16_enum_field@@Base+0xb4>
   192b4:	ldr	r3, [r0, #44]	; 0x2c
   192b8:	blx	r3
   192bc:	ldr	r2, [r4, #20]
   192c0:	mov	r3, #34	; 0x22
   192c4:	strb	r3, [r2]
   192c8:	ldrb	r3, [r4, #26]
   192cc:	ldr	r2, [r4, #16]
   192d0:	ldr	r0, [r4, #20]
   192d4:	cmp	r3, #0
   192d8:	addeq	r0, r0, #1
   192dc:	add	r3, r0, r7
   192e0:	cmp	r2, r3
   192e4:	str	r0, [r4, #20]
   192e8:	bls	193ec <flatcc_json_printer_int16_enum_field@@Base+0x1e0>
   192ec:	mov	r2, r7
   192f0:	mov	r1, r8
   192f4:	bl	12428 <memcpy@plt>
   192f8:	ldr	r3, [r4, #20]
   192fc:	add	r7, r3, r7
   19300:	str	r7, [r4, #20]
   19304:	mov	r3, #34	; 0x22
   19308:	mov	ip, #58	; 0x3a
   1930c:	mov	r0, #32
   19310:	strb	r3, [r7]
   19314:	ldrb	r3, [r4, #26]
   19318:	ldr	r1, [r4, #20]
   1931c:	clz	r3, r3
   19320:	lsr	r3, r3, #5
   19324:	add	r2, r1, r3
   19328:	add	r2, r2, #1
   1932c:	str	r2, [r4, #20]
   19330:	strb	ip, [r1, r3]
   19334:	ldr	r3, [r4, #20]
   19338:	strb	r0, [r3]
   1933c:	ldrb	r3, [r4, #25]
   19340:	ldr	r2, [r4, #20]
   19344:	ldrb	r0, [r4, #27]
   19348:	adds	r3, r3, #0
   1934c:	movne	r3, #1
   19350:	add	r1, r2, r3
   19354:	cmp	r0, #0
   19358:	str	r1, [r4, #20]
   1935c:	beq	193c4 <flatcc_json_printer_int16_enum_field@@Base+0x1b8>
   19360:	cmp	r5, #0
   19364:	lsr	r6, r5, #31
   19368:	uxth	r0, r5
   1936c:	bge	19384 <flatcc_json_printer_int16_enum_field@@Base+0x178>
   19370:	rsb	r0, r0, #0
   19374:	mov	ip, #45	; 0x2d
   19378:	add	r1, r1, #1
   1937c:	uxth	r0, r0
   19380:	strb	ip, [r2, r3]
   19384:	bl	13b40 <test_print@@Base+0x2bc>
   19388:	ldr	r3, [r4, #20]
   1938c:	add	r0, r6, r0
   19390:	add	r3, r3, r0
   19394:	str	r3, [r4, #20]
   19398:	ldrd	r4, [sp]
   1939c:	ldrd	r6, [sp, #8]
   193a0:	ldrd	r8, [sp, #16]
   193a4:	ldr	sl, [sp, #24]
   193a8:	add	sp, sp, #28
   193ac:	pop	{pc}		; (ldr pc, [sp], #4)
   193b0:	ldrb	r2, [r0, #29]
   193b4:	cmp	r2, #0
   193b8:	beq	19398 <flatcc_json_printer_int16_enum_field@@Base+0x18c>
   193bc:	mov	r5, lr
   193c0:	b	19268 <flatcc_json_printer_int16_enum_field@@Base+0x5c>
   193c4:	mov	r1, r5
   193c8:	mov	r0, r4
   193cc:	ldrd	r4, [sp]
   193d0:	mov	r3, r6
   193d4:	ldrd	r6, [sp, #8]
   193d8:	ldrd	r8, [sp, #16]
   193dc:	ldr	sl, [sp, #24]
   193e0:	ldr	lr, [sp, #28]
   193e4:	add	sp, sp, #32
   193e8:	bx	r3
   193ec:	mov	r2, r7
   193f0:	mov	r1, r8
   193f4:	mov	r0, r4
   193f8:	bl	14660 <test_print@@Base+0xddc>
   193fc:	ldr	r7, [r4, #20]
   19400:	b	19304 <flatcc_json_printer_int16_enum_field@@Base+0xf8>
   19404:	add	r1, r2, #1
   19408:	mov	r3, #10
   1940c:	str	r1, [r0, #20]
   19410:	strb	r3, [r2]
   19414:	ldrb	r3, [r0, #25]
   19418:	ldr	r2, [r4, #32]
   1941c:	ldr	r1, [r0, #16]
   19420:	ldr	r0, [r0, #20]
   19424:	mul	r9, r2, r3
   19428:	add	r3, r0, r9
   1942c:	cmp	r1, r3
   19430:	bcs	19448 <flatcc_json_printer_int16_enum_field@@Base+0x23c>
   19434:	mov	r1, r9
   19438:	mov	r0, r4
   1943c:	bl	14724 <test_print@@Base+0xea0>
   19440:	ldr	r2, [r4, #20]
   19444:	b	192c0 <flatcc_json_printer_int16_enum_field@@Base+0xb4>
   19448:	mov	r2, r9
   1944c:	mov	r1, #32
   19450:	bl	124c4 <memset@plt>
   19454:	ldr	r2, [r4, #20]
   19458:	add	r2, r2, r9
   1945c:	str	r2, [r4, #20]
   19460:	b	192c0 <flatcc_json_printer_int16_enum_field@@Base+0xb4>
   19464:	ldrb	r2, [r0, #28]
   19468:	cmp	r2, #0
   1946c:	beq	19268 <flatcc_json_printer_int16_enum_field@@Base+0x5c>
   19470:	b	19398 <flatcc_json_printer_int16_enum_field@@Base+0x18c>

00019474 <flatcc_json_printer_int32_enum_field@@Base>:
   19474:	ldr	ip, [r1, #8]
   19478:	add	r2, r2, #2
   1947c:	lsl	r2, r2, #1
   19480:	strd	r4, [sp, #-32]!	; 0xffffffe0
   19484:	strd	r6, [sp, #8]
   19488:	strd	r8, [sp, #16]
   1948c:	str	sl, [sp, #24]
   19490:	cmp	r2, ip
   19494:	str	lr, [sp, #28]
   19498:	ldr	r6, [sp, #32]
   1949c:	ldr	lr, [sp, #36]	; 0x24
   194a0:	ldr	r5, [sp, #40]	; 0x28
   194a4:	bge	19614 <flatcc_json_printer_int32_enum_field@@Base+0x1a0>
   194a8:	ldr	ip, [r1, #4]
   194ac:	ldrh	r2, [ip, r2]
   194b0:	cmp	r2, #0
   194b4:	beq	19614 <flatcc_json_printer_int32_enum_field@@Base+0x1a0>
   194b8:	ldr	ip, [r1]
   194bc:	cmn	ip, r2
   194c0:	beq	19614 <flatcc_json_printer_int32_enum_field@@Base+0x1a0>
   194c4:	ldr	r7, [ip, r2]
   194c8:	cmp	lr, r7
   194cc:	beq	196c8 <flatcc_json_printer_int32_enum_field@@Base+0x254>
   194d0:	ldr	ip, [r1, #16]
   194d4:	ldr	r2, [r0, #20]
   194d8:	cmp	ip, #0
   194dc:	add	ip, ip, #1
   194e0:	str	ip, [r1, #16]
   194e4:	beq	194fc <flatcc_json_printer_int32_enum_field@@Base+0x88>
   194e8:	add	ip, r2, #1
   194ec:	mov	r1, #44	; 0x2c
   194f0:	str	ip, [r0, #20]
   194f4:	strb	r1, [r2]
   194f8:	ldr	r2, [r0, #20]
   194fc:	mov	r8, r3
   19500:	mov	r4, r0
   19504:	ldrb	r1, [r0, #25]
   19508:	cmp	r1, #0
   1950c:	bne	19668 <flatcc_json_printer_int32_enum_field@@Base+0x1f4>
   19510:	ldr	r3, [r0, #16]
   19514:	cmp	r2, r3
   19518:	bcc	19528 <flatcc_json_printer_int32_enum_field@@Base+0xb4>
   1951c:	ldr	r3, [r0, #44]	; 0x2c
   19520:	blx	r3
   19524:	ldr	r2, [r4, #20]
   19528:	mov	r3, #34	; 0x22
   1952c:	strb	r3, [r2]
   19530:	ldrb	r3, [r4, #26]
   19534:	ldr	r2, [r4, #16]
   19538:	ldr	r0, [r4, #20]
   1953c:	cmp	r3, #0
   19540:	addeq	r0, r0, #1
   19544:	add	r3, r0, r6
   19548:	cmp	r2, r3
   1954c:	str	r0, [r4, #20]
   19550:	bls	19650 <flatcc_json_printer_int32_enum_field@@Base+0x1dc>
   19554:	mov	r2, r6
   19558:	mov	r1, r8
   1955c:	bl	12428 <memcpy@plt>
   19560:	ldr	r3, [r4, #20]
   19564:	add	r6, r3, r6
   19568:	str	r6, [r4, #20]
   1956c:	mov	r3, #34	; 0x22
   19570:	mov	ip, #58	; 0x3a
   19574:	mov	r0, #32
   19578:	strb	r3, [r6]
   1957c:	ldrb	r3, [r4, #26]
   19580:	ldr	r1, [r4, #20]
   19584:	clz	r3, r3
   19588:	lsr	r3, r3, #5
   1958c:	add	r2, r1, r3
   19590:	add	r2, r2, #1
   19594:	str	r2, [r4, #20]
   19598:	strb	ip, [r1, r3]
   1959c:	ldr	r3, [r4, #20]
   195a0:	strb	r0, [r3]
   195a4:	ldrb	r3, [r4, #25]
   195a8:	ldr	r2, [r4, #20]
   195ac:	ldrb	r0, [r4, #27]
   195b0:	adds	r3, r3, #0
   195b4:	movne	r3, #1
   195b8:	add	r1, r2, r3
   195bc:	cmp	r0, #0
   195c0:	str	r1, [r4, #20]
   195c4:	beq	19628 <flatcc_json_printer_int32_enum_field@@Base+0x1b4>
   195c8:	cmp	r7, #0
   195cc:	lsr	r5, r7, #31
   195d0:	bge	195e4 <flatcc_json_printer_int32_enum_field@@Base+0x170>
   195d4:	mov	r0, #45	; 0x2d
   195d8:	rsb	r7, r7, #0
   195dc:	add	r1, r1, #1
   195e0:	strb	r0, [r2, r3]
   195e4:	mov	r0, r7
   195e8:	bl	13c98 <test_print@@Base+0x414>
   195ec:	ldr	r3, [r4, #20]
   195f0:	add	r0, r5, r0
   195f4:	add	r3, r3, r0
   195f8:	str	r3, [r4, #20]
   195fc:	ldrd	r4, [sp]
   19600:	ldrd	r6, [sp, #8]
   19604:	ldrd	r8, [sp, #16]
   19608:	ldr	sl, [sp, #24]
   1960c:	add	sp, sp, #28
   19610:	pop	{pc}		; (ldr pc, [sp], #4)
   19614:	ldrb	r2, [r0, #29]
   19618:	cmp	r2, #0
   1961c:	beq	195fc <flatcc_json_printer_int32_enum_field@@Base+0x188>
   19620:	mov	r7, lr
   19624:	b	194d0 <flatcc_json_printer_int32_enum_field@@Base+0x5c>
   19628:	mov	r1, r7
   1962c:	mov	r0, r4
   19630:	ldrd	r6, [sp, #8]
   19634:	mov	r3, r5
   19638:	ldrd	r4, [sp]
   1963c:	ldrd	r8, [sp, #16]
   19640:	ldr	sl, [sp, #24]
   19644:	ldr	lr, [sp, #28]
   19648:	add	sp, sp, #32
   1964c:	bx	r3
   19650:	mov	r2, r6
   19654:	mov	r1, r8
   19658:	mov	r0, r4
   1965c:	bl	14660 <test_print@@Base+0xddc>
   19660:	ldr	r6, [r4, #20]
   19664:	b	1956c <flatcc_json_printer_int32_enum_field@@Base+0xf8>
   19668:	add	r1, r2, #1
   1966c:	mov	r3, #10
   19670:	str	r1, [r0, #20]
   19674:	strb	r3, [r2]
   19678:	ldrb	r3, [r0, #25]
   1967c:	ldr	r2, [r4, #32]
   19680:	ldr	r1, [r0, #16]
   19684:	ldr	r0, [r0, #20]
   19688:	mul	r9, r2, r3
   1968c:	add	r3, r0, r9
   19690:	cmp	r1, r3
   19694:	bcs	196ac <flatcc_json_printer_int32_enum_field@@Base+0x238>
   19698:	mov	r1, r9
   1969c:	mov	r0, r4
   196a0:	bl	14724 <test_print@@Base+0xea0>
   196a4:	ldr	r2, [r4, #20]
   196a8:	b	19528 <flatcc_json_printer_int32_enum_field@@Base+0xb4>
   196ac:	mov	r2, r9
   196b0:	mov	r1, #32
   196b4:	bl	124c4 <memset@plt>
   196b8:	ldr	r2, [r4, #20]
   196bc:	add	r2, r2, r9
   196c0:	str	r2, [r4, #20]
   196c4:	b	19528 <flatcc_json_printer_int32_enum_field@@Base+0xb4>
   196c8:	ldrb	r2, [r0, #28]
   196cc:	cmp	r2, #0
   196d0:	beq	194d0 <flatcc_json_printer_int32_enum_field@@Base+0x5c>
   196d4:	b	195fc <flatcc_json_printer_int32_enum_field@@Base+0x188>

000196d8 <flatcc_json_printer_int64_enum_field@@Base>:
   196d8:	ldr	ip, [r1, #8]
   196dc:	add	r2, r2, #2
   196e0:	lsl	r2, r2, #1
   196e4:	strd	r4, [sp, #-36]!	; 0xffffffdc
   196e8:	strd	r6, [sp, #8]
   196ec:	strd	r8, [sp, #16]
   196f0:	strd	sl, [sp, #24]
   196f4:	cmp	r2, ip
   196f8:	str	lr, [sp, #32]
   196fc:	sub	sp, sp, #4
   19700:	ldr	r8, [sp, #40]	; 0x28
   19704:	ldrd	sl, [sp, #48]	; 0x30
   19708:	ldr	r5, [sp, #56]	; 0x38
   1970c:	bge	19890 <flatcc_json_printer_int64_enum_field@@Base+0x1b8>
   19710:	ldr	ip, [r1, #4]
   19714:	ldrh	r2, [ip, r2]
   19718:	cmp	r2, #0
   1971c:	beq	19890 <flatcc_json_printer_int64_enum_field@@Base+0x1b8>
   19720:	ldr	ip, [r1]
   19724:	cmn	ip, r2
   19728:	beq	19890 <flatcc_json_printer_int64_enum_field@@Base+0x1b8>
   1972c:	ldrd	r6, [ip, r2]
   19730:	cmp	fp, r7
   19734:	cmpeq	sl, r6
   19738:	beq	19950 <flatcc_json_printer_int64_enum_field@@Base+0x278>
   1973c:	ldr	ip, [r1, #16]
   19740:	ldr	r2, [r0, #20]
   19744:	cmp	ip, #0
   19748:	add	ip, ip, #1
   1974c:	str	ip, [r1, #16]
   19750:	beq	19768 <flatcc_json_printer_int64_enum_field@@Base+0x90>
   19754:	add	ip, r2, #1
   19758:	mov	r1, #44	; 0x2c
   1975c:	str	ip, [r0, #20]
   19760:	strb	r1, [r2]
   19764:	ldr	r2, [r0, #20]
   19768:	mov	r9, r3
   1976c:	mov	r4, r0
   19770:	ldrb	r1, [r0, #25]
   19774:	cmp	r1, #0
   19778:	bne	198f0 <flatcc_json_printer_int64_enum_field@@Base+0x218>
   1977c:	ldr	r3, [r0, #16]
   19780:	cmp	r2, r3
   19784:	bcc	19794 <flatcc_json_printer_int64_enum_field@@Base+0xbc>
   19788:	ldr	r3, [r0, #44]	; 0x2c
   1978c:	blx	r3
   19790:	ldr	r2, [r4, #20]
   19794:	mov	r3, #34	; 0x22
   19798:	strb	r3, [r2]
   1979c:	ldrb	r3, [r4, #26]
   197a0:	ldr	r2, [r4, #16]
   197a4:	ldr	r0, [r4, #20]
   197a8:	cmp	r3, #0
   197ac:	addeq	r0, r0, #1
   197b0:	add	r3, r0, r8
   197b4:	cmp	r2, r3
   197b8:	str	r0, [r4, #20]
   197bc:	bls	198d8 <flatcc_json_printer_int64_enum_field@@Base+0x200>
   197c0:	mov	r2, r8
   197c4:	mov	r1, r9
   197c8:	bl	12428 <memcpy@plt>
   197cc:	ldr	r3, [r4, #20]
   197d0:	add	r8, r3, r8
   197d4:	str	r8, [r4, #20]
   197d8:	mov	r3, #34	; 0x22
   197dc:	mov	ip, #58	; 0x3a
   197e0:	mov	r0, #32
   197e4:	strb	r3, [r8]
   197e8:	ldrb	r3, [r4, #26]
   197ec:	ldr	r1, [r4, #20]
   197f0:	clz	r3, r3
   197f4:	lsr	r3, r3, #5
   197f8:	add	r2, r1, r3
   197fc:	add	r2, r2, #1
   19800:	str	r2, [r4, #20]
   19804:	strb	ip, [r1, r3]
   19808:	ldr	r3, [r4, #20]
   1980c:	strb	r0, [r3]
   19810:	ldrb	r3, [r4, #25]
   19814:	ldr	r1, [r4, #20]
   19818:	ldrb	r0, [r4, #27]
   1981c:	adds	r3, r3, #0
   19820:	movne	r3, #1
   19824:	add	r2, r1, r3
   19828:	cmp	r0, #0
   1982c:	str	r2, [r4, #20]
   19830:	beq	198a8 <flatcc_json_printer_int64_enum_field@@Base+0x1d0>
   19834:	cmp	r6, #0
   19838:	lsr	r5, r7, #31
   1983c:	sbcs	r0, r7, #0
   19840:	bge	19858 <flatcc_json_printer_int64_enum_field@@Base+0x180>
   19844:	rsbs	r6, r6, #0
   19848:	mov	r0, #45	; 0x2d
   1984c:	rsc	r7, r7, #0
   19850:	add	r2, r2, #1
   19854:	strb	r0, [r1, r3]
   19858:	mov	r0, r6
   1985c:	mov	r1, r7
   19860:	bl	13fac <test_print@@Base+0x728>
   19864:	ldr	r3, [r4, #20]
   19868:	add	r0, r5, r0
   1986c:	add	r3, r3, r0
   19870:	str	r3, [r4, #20]
   19874:	add	sp, sp, #4
   19878:	ldrd	r4, [sp]
   1987c:	ldrd	r6, [sp, #8]
   19880:	ldrd	r8, [sp, #16]
   19884:	ldrd	sl, [sp, #24]
   19888:	add	sp, sp, #32
   1988c:	pop	{pc}		; (ldr pc, [sp], #4)
   19890:	ldrb	r2, [r0, #29]
   19894:	cmp	r2, #0
   19898:	beq	19874 <flatcc_json_printer_int64_enum_field@@Base+0x19c>
   1989c:	mov	r6, sl
   198a0:	mov	r7, fp
   198a4:	b	1973c <flatcc_json_printer_int64_enum_field@@Base+0x64>
   198a8:	mov	r2, r6
   198ac:	mov	r3, r7
   198b0:	mov	r0, r4
   198b4:	mov	r1, r5
   198b8:	add	sp, sp, #4
   198bc:	ldrd	r4, [sp]
   198c0:	ldrd	r6, [sp, #8]
   198c4:	ldrd	r8, [sp, #16]
   198c8:	ldrd	sl, [sp, #24]
   198cc:	ldr	lr, [sp, #32]
   198d0:	add	sp, sp, #36	; 0x24
   198d4:	bx	r1
   198d8:	mov	r2, r8
   198dc:	mov	r1, r9
   198e0:	mov	r0, r4
   198e4:	bl	14660 <test_print@@Base+0xddc>
   198e8:	ldr	r8, [r4, #20]
   198ec:	b	197d8 <flatcc_json_printer_int64_enum_field@@Base+0x100>
   198f0:	add	r1, r2, #1
   198f4:	mov	r3, #10
   198f8:	str	r1, [r0, #20]
   198fc:	strb	r3, [r2]
   19900:	ldrb	r3, [r0, #25]
   19904:	ldr	r2, [r4, #32]
   19908:	ldr	r1, [r0, #16]
   1990c:	ldr	r0, [r0, #20]
   19910:	mul	sl, r2, r3
   19914:	add	r3, r0, sl
   19918:	cmp	r1, r3
   1991c:	bcs	19934 <flatcc_json_printer_int64_enum_field@@Base+0x25c>
   19920:	mov	r1, sl
   19924:	mov	r0, r4
   19928:	bl	14724 <test_print@@Base+0xea0>
   1992c:	ldr	r2, [r4, #20]
   19930:	b	19794 <flatcc_json_printer_int64_enum_field@@Base+0xbc>
   19934:	mov	r2, sl
   19938:	mov	r1, #32
   1993c:	bl	124c4 <memset@plt>
   19940:	ldr	r2, [r4, #20]
   19944:	add	r2, r2, sl
   19948:	str	r2, [r4, #20]
   1994c:	b	19794 <flatcc_json_printer_int64_enum_field@@Base+0xbc>
   19950:	ldrb	r2, [r0, #28]
   19954:	cmp	r2, #0
   19958:	beq	1973c <flatcc_json_printer_int64_enum_field@@Base+0x64>
   1995c:	b	19874 <flatcc_json_printer_int64_enum_field@@Base+0x19c>

00019960 <flatcc_json_printer_bool_enum_field@@Base>:
   19960:	ldr	ip, [r1, #8]
   19964:	add	r2, r2, #2
   19968:	lsl	r2, r2, #1
   1996c:	strd	r4, [sp, #-32]!	; 0xffffffe0
   19970:	strd	r6, [sp, #8]
   19974:	strd	r8, [sp, #16]
   19978:	str	sl, [sp, #24]
   1997c:	cmp	r2, ip
   19980:	str	lr, [sp, #28]
   19984:	ldrb	lr, [sp, #36]	; 0x24
   19988:	ldr	r7, [sp, #32]
   1998c:	ldr	r5, [sp, #40]	; 0x28
   19990:	bge	19adc <flatcc_json_printer_bool_enum_field@@Base+0x17c>
   19994:	ldr	ip, [r1, #4]
   19998:	ldrh	r2, [ip, r2]
   1999c:	cmp	r2, #0
   199a0:	beq	19adc <flatcc_json_printer_bool_enum_field@@Base+0x17c>
   199a4:	ldr	ip, [r1]
   199a8:	cmn	ip, r2
   199ac:	beq	19adc <flatcc_json_printer_bool_enum_field@@Base+0x17c>
   199b0:	ldrb	r6, [ip, r2]
   199b4:	cmp	lr, r6
   199b8:	beq	19bd8 <flatcc_json_printer_bool_enum_field@@Base+0x278>
   199bc:	ldr	ip, [r1, #16]
   199c0:	ldr	r2, [r0, #20]
   199c4:	cmp	ip, #0
   199c8:	add	ip, ip, #1
   199cc:	str	ip, [r1, #16]
   199d0:	beq	199e8 <flatcc_json_printer_bool_enum_field@@Base+0x88>
   199d4:	add	ip, r2, #1
   199d8:	mov	r1, #44	; 0x2c
   199dc:	str	ip, [r0, #20]
   199e0:	strb	r1, [r2]
   199e4:	ldr	r2, [r0, #20]
   199e8:	mov	r8, r3
   199ec:	mov	r4, r0
   199f0:	ldrb	r1, [r0, #25]
   199f4:	cmp	r1, #0
   199f8:	bne	19b54 <flatcc_json_printer_bool_enum_field@@Base+0x1f4>
   199fc:	ldr	r3, [r0, #16]
   19a00:	cmp	r3, r2
   19a04:	bhi	19a14 <flatcc_json_printer_bool_enum_field@@Base+0xb4>
   19a08:	ldr	r3, [r0, #44]	; 0x2c
   19a0c:	blx	r3
   19a10:	ldr	r2, [r4, #20]
   19a14:	mov	r3, #34	; 0x22
   19a18:	strb	r3, [r2]
   19a1c:	ldrb	r3, [r4, #26]
   19a20:	ldr	r2, [r4, #16]
   19a24:	ldr	r0, [r4, #20]
   19a28:	cmp	r3, #0
   19a2c:	addeq	r0, r0, #1
   19a30:	add	r3, r0, r7
   19a34:	cmp	r2, r3
   19a38:	str	r0, [r4, #20]
   19a3c:	bls	19b3c <flatcc_json_printer_bool_enum_field@@Base+0x1dc>
   19a40:	mov	r2, r7
   19a44:	mov	r1, r8
   19a48:	bl	12428 <memcpy@plt>
   19a4c:	ldr	r3, [r4, #20]
   19a50:	add	r7, r3, r7
   19a54:	str	r7, [r4, #20]
   19a58:	mov	r3, #34	; 0x22
   19a5c:	mov	ip, #58	; 0x3a
   19a60:	mov	r0, #32
   19a64:	strb	r3, [r7]
   19a68:	ldrb	r3, [r4, #26]
   19a6c:	ldr	r1, [r4, #20]
   19a70:	clz	r3, r3
   19a74:	lsr	r3, r3, #5
   19a78:	add	r2, r1, r3
   19a7c:	add	r2, r2, #1
   19a80:	str	r2, [r4, #20]
   19a84:	strb	ip, [r1, r3]
   19a88:	ldr	r3, [r4, #20]
   19a8c:	strb	r0, [r3]
   19a90:	ldrb	r3, [r4, #25]
   19a94:	ldr	r0, [r4, #20]
   19a98:	ldrb	r1, [r4, #27]
   19a9c:	adds	r3, r3, #0
   19aa0:	movne	r3, #1
   19aa4:	add	r2, r0, r3
   19aa8:	cmp	r1, #0
   19aac:	str	r2, [r4, #20]
   19ab0:	bne	19af0 <flatcc_json_printer_bool_enum_field@@Base+0x190>
   19ab4:	mov	r1, r6
   19ab8:	mov	r0, r4
   19abc:	ldrd	r6, [sp, #8]
   19ac0:	mov	r3, r5
   19ac4:	ldrd	r4, [sp]
   19ac8:	ldrd	r8, [sp, #16]
   19acc:	ldr	sl, [sp, #24]
   19ad0:	ldr	lr, [sp, #28]
   19ad4:	add	sp, sp, #32
   19ad8:	bx	r3
   19adc:	ldrb	r2, [r0, #29]
   19ae0:	cmp	r2, #0
   19ae4:	beq	19b24 <flatcc_json_printer_bool_enum_field@@Base+0x1c4>
   19ae8:	mov	r6, lr
   19aec:	b	199bc <flatcc_json_printer_bool_enum_field@@Base+0x5c>
   19af0:	cmp	r6, #0
   19af4:	bne	19b98 <flatcc_json_printer_bool_enum_field@@Base+0x238>
   19af8:	movw	r1, #10976	; 0x2ae0
   19afc:	movt	r1, #2
   19b00:	add	ip, r1, #1776	; 0x6f0
   19b04:	ldr	lr, [r1, #1776]	; 0x6f0
   19b08:	mov	r1, #5
   19b0c:	ldrh	ip, [ip, #4]
   19b10:	str	lr, [r0, r3]
   19b14:	strh	ip, [r2, #4]
   19b18:	ldr	r3, [r4, #20]
   19b1c:	add	r3, r3, r1
   19b20:	str	r3, [r4, #20]
   19b24:	ldrd	r4, [sp]
   19b28:	ldrd	r6, [sp, #8]
   19b2c:	ldrd	r8, [sp, #16]
   19b30:	ldr	sl, [sp, #24]
   19b34:	add	sp, sp, #28
   19b38:	pop	{pc}		; (ldr pc, [sp], #4)
   19b3c:	mov	r2, r7
   19b40:	mov	r1, r8
   19b44:	mov	r0, r4
   19b48:	bl	14660 <test_print@@Base+0xddc>
   19b4c:	ldr	r7, [r4, #20]
   19b50:	b	19a58 <flatcc_json_printer_bool_enum_field@@Base+0xf8>
   19b54:	add	r1, r2, #1
   19b58:	mov	r3, #10
   19b5c:	str	r1, [r0, #20]
   19b60:	strb	r3, [r2]
   19b64:	ldrb	r3, [r0, #25]
   19b68:	ldr	r2, [r4, #32]
   19b6c:	ldr	r1, [r0, #16]
   19b70:	ldr	r0, [r0, #20]
   19b74:	mul	r9, r2, r3
   19b78:	add	r3, r0, r9
   19b7c:	cmp	r1, r3
   19b80:	bcs	19bbc <flatcc_json_printer_bool_enum_field@@Base+0x25c>
   19b84:	mov	r1, r9
   19b88:	mov	r0, r4
   19b8c:	bl	14724 <test_print@@Base+0xea0>
   19b90:	ldr	r2, [r4, #20]
   19b94:	b	19a14 <flatcc_json_printer_bool_enum_field@@Base+0xb4>
   19b98:	ldr	ip, [pc, #72]	; 19be8 <flatcc_json_printer_bool_enum_field@@Base+0x288>
   19b9c:	movw	r1, #10976	; 0x2ae0
   19ba0:	movt	r1, #2
   19ba4:	ldr	lr, [r1, #1768]	; 0x6e8
   19ba8:	mov	r1, #4
   19bac:	ldrb	ip, [ip, #4]
   19bb0:	str	lr, [r0, r3]
   19bb4:	strb	ip, [r2, #4]
   19bb8:	b	19b18 <flatcc_json_printer_bool_enum_field@@Base+0x1b8>
   19bbc:	mov	r2, r9
   19bc0:	mov	r1, #32
   19bc4:	bl	124c4 <memset@plt>
   19bc8:	ldr	r2, [r4, #20]
   19bcc:	add	r2, r2, r9
   19bd0:	str	r2, [r4, #20]
   19bd4:	b	19a14 <flatcc_json_printer_bool_enum_field@@Base+0xb4>
   19bd8:	ldrb	r2, [r0, #28]
   19bdc:	cmp	r2, #0
   19be0:	beq	199bc <flatcc_json_printer_bool_enum_field@@Base+0x5c>
   19be4:	b	19b24 <flatcc_json_printer_bool_enum_field@@Base+0x1c4>
   19be8:	andeq	r3, r2, r8, asr #3

00019bec <flatcc_json_printer_uint8_struct_field@@Base>:
   19bec:	cmp	r1, #0
   19bf0:	strd	r4, [sp, #-24]!	; 0xffffffe8
   19bf4:	mov	r4, r0
   19bf8:	strd	r6, [sp, #8]
   19bfc:	str	r8, [sp, #16]
   19c00:	str	lr, [sp, #20]
   19c04:	ldrb	r5, [r2, r3]
   19c08:	ldr	r2, [r0, #20]
   19c0c:	ldr	r6, [sp, #28]
   19c10:	beq	19c28 <flatcc_json_printer_uint8_struct_field@@Base+0x3c>
   19c14:	add	r1, r2, #1
   19c18:	mov	r3, #44	; 0x2c
   19c1c:	str	r1, [r0, #20]
   19c20:	strb	r3, [r2]
   19c24:	ldr	r2, [r0, #20]
   19c28:	ldrb	r1, [r4, #25]
   19c2c:	cmp	r1, #0
   19c30:	bne	19d38 <flatcc_json_printer_uint8_struct_field@@Base+0x14c>
   19c34:	ldr	r3, [r4, #16]
   19c38:	cmp	r3, r2
   19c3c:	bhi	19c50 <flatcc_json_printer_uint8_struct_field@@Base+0x64>
   19c40:	mov	r0, r4
   19c44:	ldr	r3, [r4, #44]	; 0x2c
   19c48:	blx	r3
   19c4c:	ldr	r2, [r4, #20]
   19c50:	mov	r3, #34	; 0x22
   19c54:	ldr	r1, [sp, #24]
   19c58:	strb	r3, [r2]
   19c5c:	ldrb	r3, [r4, #26]
   19c60:	ldr	r2, [r4, #16]
   19c64:	ldr	r0, [r4, #20]
   19c68:	cmp	r3, #0
   19c6c:	addeq	r0, r0, #1
   19c70:	add	r3, r0, r6
   19c74:	cmp	r2, r3
   19c78:	mov	r2, r6
   19c7c:	str	r0, [r4, #20]
   19c80:	bhi	19d24 <flatcc_json_printer_uint8_struct_field@@Base+0x138>
   19c84:	mov	r0, r4
   19c88:	bl	14660 <test_print@@Base+0xddc>
   19c8c:	ldr	r2, [r4, #20]
   19c90:	mov	r3, #34	; 0x22
   19c94:	mov	ip, #58	; 0x3a
   19c98:	mov	r0, #32
   19c9c:	strb	r3, [r2]
   19ca0:	ldrb	r3, [r4, #26]
   19ca4:	ldr	r1, [r4, #20]
   19ca8:	clz	r3, r3
   19cac:	lsr	r3, r3, #5
   19cb0:	add	r2, r1, r3
   19cb4:	add	r2, r2, #1
   19cb8:	str	r2, [r4, #20]
   19cbc:	strb	ip, [r1, r3]
   19cc0:	ldr	r3, [r4, #20]
   19cc4:	strb	r0, [r3]
   19cc8:	ldrb	r3, [r4, #25]
   19ccc:	ldr	r0, [r4, #20]
   19cd0:	adds	r3, r3, #0
   19cd4:	movne	r3, #1
   19cd8:	cmp	r5, #99	; 0x63
   19cdc:	add	r1, r0, r3
   19ce0:	str	r1, [r4, #20]
   19ce4:	bhi	19d7c <flatcc_json_printer_uint8_struct_field@@Base+0x190>
   19ce8:	cmp	r5, #9
   19cec:	bhi	19de8 <flatcc_json_printer_uint8_struct_field@@Base+0x1fc>
   19cf0:	add	r5, r5, #48	; 0x30
   19cf4:	mov	r2, #0
   19cf8:	mov	ip, #1
   19cfc:	strb	r2, [r1, #1]
   19d00:	strb	r5, [r0, r3]
   19d04:	ldr	r3, [r4, #20]
   19d08:	ldrd	r6, [sp, #8]
   19d0c:	ldr	r8, [sp, #16]
   19d10:	add	r3, r3, ip
   19d14:	str	r3, [r4, #20]
   19d18:	ldrd	r4, [sp]
   19d1c:	add	sp, sp, #20
   19d20:	pop	{pc}		; (ldr pc, [sp], #4)
   19d24:	bl	12428 <memcpy@plt>
   19d28:	ldr	r2, [r4, #20]
   19d2c:	add	r2, r2, r6
   19d30:	str	r2, [r4, #20]
   19d34:	b	19c90 <flatcc_json_printer_uint8_struct_field@@Base+0xa4>
   19d38:	add	r1, r2, #1
   19d3c:	mov	r3, #10
   19d40:	str	r1, [r4, #20]
   19d44:	strb	r3, [r2]
   19d48:	ldrb	r7, [r4, #25]
   19d4c:	ldr	r1, [r4, #16]
   19d50:	ldr	r2, [r4, #32]
   19d54:	ldr	r0, [r4, #20]
   19d58:	mul	r7, r2, r7
   19d5c:	add	r3, r0, r7
   19d60:	cmp	r1, r3
   19d64:	bcs	19dcc <flatcc_json_printer_uint8_struct_field@@Base+0x1e0>
   19d68:	mov	r1, r7
   19d6c:	mov	r0, r4
   19d70:	bl	14724 <test_print@@Base+0xea0>
   19d74:	ldr	r2, [r4, #20]
   19d78:	b	19c50 <flatcc_json_printer_uint8_struct_field@@Base+0x64>
   19d7c:	movw	r2, #34079	; 0x851f
   19d80:	movt	r2, #20971	; 0x51eb
   19d84:	mov	r6, #100	; 0x64
   19d88:	mov	ip, #0
   19d8c:	umull	lr, r2, r2, r5
   19d90:	movw	lr, #10976	; 0x2ae0
   19d94:	movt	lr, #2
   19d98:	strb	ip, [r1, #3]
   19d9c:	mov	ip, #3
   19da0:	lsr	r2, r2, #5
   19da4:	mls	r5, r6, r2, r5
   19da8:	add	r2, r2, #48	; 0x30
   19dac:	uxtb	r5, r5
   19db0:	ldrb	r6, [lr, r5, lsl #1]
   19db4:	add	lr, lr, r5, lsl #1
   19db8:	strb	r6, [r1, #1]
   19dbc:	ldrb	lr, [lr, #1]
   19dc0:	strb	lr, [r1, #2]
   19dc4:	strb	r2, [r0, r3]
   19dc8:	b	19d04 <flatcc_json_printer_uint8_struct_field@@Base+0x118>
   19dcc:	mov	r2, r7
   19dd0:	mov	r1, #32
   19dd4:	bl	124c4 <memset@plt>
   19dd8:	ldr	r2, [r4, #20]
   19ddc:	add	r2, r2, r7
   19de0:	str	r2, [r4, #20]
   19de4:	b	19c50 <flatcc_json_printer_uint8_struct_field@@Base+0x64>
   19de8:	mov	ip, #0
   19dec:	sxth	r5, r5
   19df0:	movw	r2, #10976	; 0x2ae0
   19df4:	movt	r2, #2
   19df8:	add	lr, r2, r5, lsl #1
   19dfc:	strb	ip, [r1, #2]
   19e00:	mov	ip, #2
   19e04:	ldrb	r2, [r2, r5, lsl #1]
   19e08:	strb	r2, [r0, r3]
   19e0c:	ldrb	r3, [lr, #1]
   19e10:	strb	r3, [r1, #1]
   19e14:	b	19d04 <flatcc_json_printer_uint8_struct_field@@Base+0x118>

00019e18 <flatcc_json_printer_uint16_struct_field@@Base>:
   19e18:	cmp	r1, #0
   19e1c:	strd	r4, [sp, #-24]!	; 0xffffffe8
   19e20:	mov	r4, r0
   19e24:	ldrh	r5, [r2, r3]
   19e28:	ldr	r2, [r0, #20]
   19e2c:	strd	r6, [sp, #8]
   19e30:	str	r8, [sp, #16]
   19e34:	str	lr, [sp, #20]
   19e38:	ldr	r6, [sp, #28]
   19e3c:	beq	19e54 <flatcc_json_printer_uint16_struct_field@@Base+0x3c>
   19e40:	add	r1, r2, #1
   19e44:	mov	r3, #44	; 0x2c
   19e48:	str	r1, [r0, #20]
   19e4c:	strb	r3, [r2]
   19e50:	ldr	r2, [r0, #20]
   19e54:	ldrb	r1, [r4, #25]
   19e58:	cmp	r1, #0
   19e5c:	bne	19f48 <flatcc_json_printer_uint16_struct_field@@Base+0x130>
   19e60:	ldr	r3, [r4, #16]
   19e64:	cmp	r3, r2
   19e68:	bhi	19e7c <flatcc_json_printer_uint16_struct_field@@Base+0x64>
   19e6c:	mov	r0, r4
   19e70:	ldr	r3, [r4, #44]	; 0x2c
   19e74:	blx	r3
   19e78:	ldr	r2, [r4, #20]
   19e7c:	mov	r3, #34	; 0x22
   19e80:	ldr	r1, [sp, #24]
   19e84:	strb	r3, [r2]
   19e88:	ldrb	r3, [r4, #26]
   19e8c:	ldr	r2, [r4, #16]
   19e90:	ldr	r0, [r4, #20]
   19e94:	cmp	r3, #0
   19e98:	addeq	r0, r0, #1
   19e9c:	add	r3, r0, r6
   19ea0:	cmp	r2, r3
   19ea4:	mov	r2, r6
   19ea8:	str	r0, [r4, #20]
   19eac:	bhi	19f34 <flatcc_json_printer_uint16_struct_field@@Base+0x11c>
   19eb0:	mov	r0, r4
   19eb4:	bl	14660 <test_print@@Base+0xddc>
   19eb8:	ldr	r2, [r4, #20]
   19ebc:	mov	r3, #34	; 0x22
   19ec0:	mov	lr, #58	; 0x3a
   19ec4:	mov	ip, #32
   19ec8:	mov	r0, r5
   19ecc:	strb	r3, [r2]
   19ed0:	ldrb	r3, [r4, #26]
   19ed4:	ldr	r1, [r4, #20]
   19ed8:	clz	r3, r3
   19edc:	lsr	r3, r3, #5
   19ee0:	add	r2, r1, r3
   19ee4:	add	r2, r2, #1
   19ee8:	str	r2, [r4, #20]
   19eec:	strb	lr, [r1, r3]
   19ef0:	ldr	r3, [r4, #20]
   19ef4:	strb	ip, [r3]
   19ef8:	ldrb	r2, [r4, #25]
   19efc:	ldr	r3, [r4, #20]
   19f00:	cmp	r2, #0
   19f04:	addne	r3, r3, #1
   19f08:	mov	r1, r3
   19f0c:	str	r3, [r4, #20]
   19f10:	bl	13b40 <test_print@@Base+0x2bc>
   19f14:	ldr	r3, [r4, #20]
   19f18:	ldrd	r6, [sp, #8]
   19f1c:	ldr	r8, [sp, #16]
   19f20:	add	r0, r3, r0
   19f24:	str	r0, [r4, #20]
   19f28:	ldrd	r4, [sp]
   19f2c:	add	sp, sp, #20
   19f30:	pop	{pc}		; (ldr pc, [sp], #4)
   19f34:	bl	12428 <memcpy@plt>
   19f38:	ldr	r2, [r4, #20]
   19f3c:	add	r2, r2, r6
   19f40:	str	r2, [r4, #20]
   19f44:	b	19ebc <flatcc_json_printer_uint16_struct_field@@Base+0xa4>
   19f48:	add	r1, r2, #1
   19f4c:	mov	r3, #10
   19f50:	str	r1, [r4, #20]
   19f54:	strb	r3, [r2]
   19f58:	ldrb	r7, [r4, #25]
   19f5c:	ldr	r1, [r4, #16]
   19f60:	ldr	r2, [r4, #32]
   19f64:	ldr	r0, [r4, #20]
   19f68:	mul	r7, r2, r7
   19f6c:	add	r3, r0, r7
   19f70:	cmp	r1, r3
   19f74:	bcs	19f8c <flatcc_json_printer_uint16_struct_field@@Base+0x174>
   19f78:	mov	r1, r7
   19f7c:	mov	r0, r4
   19f80:	bl	14724 <test_print@@Base+0xea0>
   19f84:	ldr	r2, [r4, #20]
   19f88:	b	19e7c <flatcc_json_printer_uint16_struct_field@@Base+0x64>
   19f8c:	mov	r2, r7
   19f90:	mov	r1, #32
   19f94:	bl	124c4 <memset@plt>
   19f98:	ldr	r2, [r4, #20]
   19f9c:	add	r2, r2, r7
   19fa0:	str	r2, [r4, #20]
   19fa4:	b	19e7c <flatcc_json_printer_uint16_struct_field@@Base+0x64>

00019fa8 <flatcc_json_printer_uint32_struct_field@@Base>:
   19fa8:	cmp	r1, #0
   19fac:	strd	r4, [sp, #-24]!	; 0xffffffe8
   19fb0:	mov	r4, r0
   19fb4:	ldr	r5, [r2, r3]
   19fb8:	ldr	r2, [r0, #20]
   19fbc:	strd	r6, [sp, #8]
   19fc0:	str	r8, [sp, #16]
   19fc4:	str	lr, [sp, #20]
   19fc8:	ldr	r6, [sp, #28]
   19fcc:	beq	19fe4 <flatcc_json_printer_uint32_struct_field@@Base+0x3c>
   19fd0:	add	r1, r2, #1
   19fd4:	mov	r3, #44	; 0x2c
   19fd8:	str	r1, [r0, #20]
   19fdc:	strb	r3, [r2]
   19fe0:	ldr	r2, [r0, #20]
   19fe4:	ldrb	r1, [r4, #25]
   19fe8:	cmp	r1, #0
   19fec:	bne	1a0d8 <flatcc_json_printer_uint32_struct_field@@Base+0x130>
   19ff0:	ldr	r3, [r4, #16]
   19ff4:	cmp	r3, r2
   19ff8:	bhi	1a00c <flatcc_json_printer_uint32_struct_field@@Base+0x64>
   19ffc:	mov	r0, r4
   1a000:	ldr	r3, [r4, #44]	; 0x2c
   1a004:	blx	r3
   1a008:	ldr	r2, [r4, #20]
   1a00c:	mov	r3, #34	; 0x22
   1a010:	ldr	r1, [sp, #24]
   1a014:	strb	r3, [r2]
   1a018:	ldrb	r3, [r4, #26]
   1a01c:	ldr	r2, [r4, #16]
   1a020:	ldr	r0, [r4, #20]
   1a024:	cmp	r3, #0
   1a028:	addeq	r0, r0, #1
   1a02c:	add	r3, r0, r6
   1a030:	cmp	r2, r3
   1a034:	mov	r2, r6
   1a038:	str	r0, [r4, #20]
   1a03c:	bhi	1a0c4 <flatcc_json_printer_uint32_struct_field@@Base+0x11c>
   1a040:	mov	r0, r4
   1a044:	bl	14660 <test_print@@Base+0xddc>
   1a048:	ldr	r2, [r4, #20]
   1a04c:	mov	r3, #34	; 0x22
   1a050:	mov	lr, #58	; 0x3a
   1a054:	mov	ip, #32
   1a058:	mov	r0, r5
   1a05c:	strb	r3, [r2]
   1a060:	ldrb	r3, [r4, #26]
   1a064:	ldr	r1, [r4, #20]
   1a068:	clz	r3, r3
   1a06c:	lsr	r3, r3, #5
   1a070:	add	r2, r1, r3
   1a074:	add	r2, r2, #1
   1a078:	str	r2, [r4, #20]
   1a07c:	strb	lr, [r1, r3]
   1a080:	ldr	r3, [r4, #20]
   1a084:	strb	ip, [r3]
   1a088:	ldrb	r2, [r4, #25]
   1a08c:	ldr	r3, [r4, #20]
   1a090:	cmp	r2, #0
   1a094:	addne	r3, r3, #1
   1a098:	mov	r1, r3
   1a09c:	str	r3, [r4, #20]
   1a0a0:	bl	13c98 <test_print@@Base+0x414>
   1a0a4:	ldr	r3, [r4, #20]
   1a0a8:	ldrd	r6, [sp, #8]
   1a0ac:	ldr	r8, [sp, #16]
   1a0b0:	add	r0, r3, r0
   1a0b4:	str	r0, [r4, #20]
   1a0b8:	ldrd	r4, [sp]
   1a0bc:	add	sp, sp, #20
   1a0c0:	pop	{pc}		; (ldr pc, [sp], #4)
   1a0c4:	bl	12428 <memcpy@plt>
   1a0c8:	ldr	r2, [r4, #20]
   1a0cc:	add	r2, r2, r6
   1a0d0:	str	r2, [r4, #20]
   1a0d4:	b	1a04c <flatcc_json_printer_uint32_struct_field@@Base+0xa4>
   1a0d8:	add	r1, r2, #1
   1a0dc:	mov	r3, #10
   1a0e0:	str	r1, [r4, #20]
   1a0e4:	strb	r3, [r2]
   1a0e8:	ldrb	r7, [r4, #25]
   1a0ec:	ldr	r1, [r4, #16]
   1a0f0:	ldr	r2, [r4, #32]
   1a0f4:	ldr	r0, [r4, #20]
   1a0f8:	mul	r7, r2, r7
   1a0fc:	add	r3, r0, r7
   1a100:	cmp	r1, r3
   1a104:	bcs	1a11c <flatcc_json_printer_uint32_struct_field@@Base+0x174>
   1a108:	mov	r1, r7
   1a10c:	mov	r0, r4
   1a110:	bl	14724 <test_print@@Base+0xea0>
   1a114:	ldr	r2, [r4, #20]
   1a118:	b	1a00c <flatcc_json_printer_uint32_struct_field@@Base+0x64>
   1a11c:	mov	r2, r7
   1a120:	mov	r1, #32
   1a124:	bl	124c4 <memset@plt>
   1a128:	ldr	r2, [r4, #20]
   1a12c:	add	r2, r2, r7
   1a130:	str	r2, [r4, #20]
   1a134:	b	1a00c <flatcc_json_printer_uint32_struct_field@@Base+0x64>

0001a138 <flatcc_json_printer_uint64_struct_field@@Base>:
   1a138:	cmp	r1, #0
   1a13c:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1a140:	mov	r4, r0
   1a144:	strd	r6, [sp, #8]
   1a148:	str	r8, [sp, #16]
   1a14c:	str	lr, [sp, #20]
   1a150:	ldrd	r6, [r2, r3]
   1a154:	ldr	r2, [r0, #20]
   1a158:	ldr	r5, [sp, #28]
   1a15c:	beq	1a174 <flatcc_json_printer_uint64_struct_field@@Base+0x3c>
   1a160:	add	r1, r2, #1
   1a164:	mov	r3, #44	; 0x2c
   1a168:	str	r1, [r0, #20]
   1a16c:	strb	r3, [r2]
   1a170:	ldr	r2, [r0, #20]
   1a174:	ldrb	r1, [r4, #25]
   1a178:	cmp	r1, #0
   1a17c:	bne	1a26c <flatcc_json_printer_uint64_struct_field@@Base+0x134>
   1a180:	ldr	r3, [r4, #16]
   1a184:	cmp	r3, r2
   1a188:	bhi	1a19c <flatcc_json_printer_uint64_struct_field@@Base+0x64>
   1a18c:	mov	r0, r4
   1a190:	ldr	r3, [r4, #44]	; 0x2c
   1a194:	blx	r3
   1a198:	ldr	r2, [r4, #20]
   1a19c:	mov	r3, #34	; 0x22
   1a1a0:	ldr	r1, [sp, #24]
   1a1a4:	strb	r3, [r2]
   1a1a8:	ldrb	r3, [r4, #26]
   1a1ac:	ldr	r2, [r4, #16]
   1a1b0:	ldr	r0, [r4, #20]
   1a1b4:	cmp	r3, #0
   1a1b8:	addeq	r0, r0, #1
   1a1bc:	add	r3, r0, r5
   1a1c0:	cmp	r2, r3
   1a1c4:	mov	r2, r5
   1a1c8:	str	r0, [r4, #20]
   1a1cc:	bhi	1a258 <flatcc_json_printer_uint64_struct_field@@Base+0x120>
   1a1d0:	mov	r0, r4
   1a1d4:	bl	14660 <test_print@@Base+0xddc>
   1a1d8:	ldr	r2, [r4, #20]
   1a1dc:	mov	r3, #34	; 0x22
   1a1e0:	mov	r5, #58	; 0x3a
   1a1e4:	mov	lr, #32
   1a1e8:	mov	r0, r6
   1a1ec:	strb	r3, [r2]
   1a1f0:	mov	r1, r7
   1a1f4:	ldrb	r3, [r4, #26]
   1a1f8:	ldr	ip, [r4, #20]
   1a1fc:	clz	r3, r3
   1a200:	lsr	r3, r3, #5
   1a204:	add	r2, ip, r3
   1a208:	add	r2, r2, #1
   1a20c:	str	r2, [r4, #20]
   1a210:	strb	r5, [ip, r3]
   1a214:	ldr	r3, [r4, #20]
   1a218:	strb	lr, [r3]
   1a21c:	ldrb	r2, [r4, #25]
   1a220:	ldr	r3, [r4, #20]
   1a224:	cmp	r2, #0
   1a228:	addne	r3, r3, #1
   1a22c:	mov	r2, r3
   1a230:	str	r3, [r4, #20]
   1a234:	bl	13fac <test_print@@Base+0x728>
   1a238:	ldr	r3, [r4, #20]
   1a23c:	ldrd	r6, [sp, #8]
   1a240:	ldr	r8, [sp, #16]
   1a244:	add	r0, r3, r0
   1a248:	str	r0, [r4, #20]
   1a24c:	ldrd	r4, [sp]
   1a250:	add	sp, sp, #20
   1a254:	pop	{pc}		; (ldr pc, [sp], #4)
   1a258:	bl	12428 <memcpy@plt>
   1a25c:	ldr	r2, [r4, #20]
   1a260:	add	r2, r2, r5
   1a264:	str	r2, [r4, #20]
   1a268:	b	1a1dc <flatcc_json_printer_uint64_struct_field@@Base+0xa4>
   1a26c:	add	r1, r2, #1
   1a270:	mov	r3, #10
   1a274:	str	r1, [r4, #20]
   1a278:	strb	r3, [r2]
   1a27c:	ldrb	r8, [r4, #25]
   1a280:	ldr	r1, [r4, #16]
   1a284:	ldr	r2, [r4, #32]
   1a288:	ldr	r0, [r4, #20]
   1a28c:	mul	r8, r2, r8
   1a290:	add	r3, r0, r8
   1a294:	cmp	r1, r3
   1a298:	bcs	1a2b0 <flatcc_json_printer_uint64_struct_field@@Base+0x178>
   1a29c:	mov	r1, r8
   1a2a0:	mov	r0, r4
   1a2a4:	bl	14724 <test_print@@Base+0xea0>
   1a2a8:	ldr	r2, [r4, #20]
   1a2ac:	b	1a19c <flatcc_json_printer_uint64_struct_field@@Base+0x64>
   1a2b0:	mov	r2, r8
   1a2b4:	mov	r1, #32
   1a2b8:	bl	124c4 <memset@plt>
   1a2bc:	ldr	r2, [r4, #20]
   1a2c0:	add	r2, r2, r8
   1a2c4:	str	r2, [r4, #20]
   1a2c8:	b	1a19c <flatcc_json_printer_uint64_struct_field@@Base+0x64>

0001a2cc <flatcc_json_printer_int8_struct_field@@Base>:
   1a2cc:	cmp	r1, #0
   1a2d0:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1a2d4:	mov	r4, r0
   1a2d8:	strd	r6, [sp, #8]
   1a2dc:	str	r8, [sp, #16]
   1a2e0:	str	lr, [sp, #20]
   1a2e4:	ldrsb	r5, [r2, r3]
   1a2e8:	ldr	r2, [r0, #20]
   1a2ec:	ldr	r6, [sp, #28]
   1a2f0:	beq	1a308 <flatcc_json_printer_int8_struct_field@@Base+0x3c>
   1a2f4:	add	r1, r2, #1
   1a2f8:	mov	r3, #44	; 0x2c
   1a2fc:	str	r1, [r0, #20]
   1a300:	strb	r3, [r2]
   1a304:	ldr	r2, [r0, #20]
   1a308:	ldrb	r1, [r4, #25]
   1a30c:	cmp	r1, #0
   1a310:	bne	1a440 <flatcc_json_printer_int8_struct_field@@Base+0x174>
   1a314:	ldr	r3, [r4, #16]
   1a318:	cmp	r3, r2
   1a31c:	bhi	1a330 <flatcc_json_printer_int8_struct_field@@Base+0x64>
   1a320:	mov	r0, r4
   1a324:	ldr	r3, [r4, #44]	; 0x2c
   1a328:	blx	r3
   1a32c:	ldr	r2, [r4, #20]
   1a330:	mov	r3, #34	; 0x22
   1a334:	ldr	r1, [sp, #24]
   1a338:	strb	r3, [r2]
   1a33c:	ldrb	r3, [r4, #26]
   1a340:	ldr	r2, [r4, #16]
   1a344:	ldr	r0, [r4, #20]
   1a348:	cmp	r3, #0
   1a34c:	addeq	r0, r0, #1
   1a350:	add	r3, r0, r6
   1a354:	cmp	r2, r3
   1a358:	mov	r2, r6
   1a35c:	str	r0, [r4, #20]
   1a360:	bhi	1a42c <flatcc_json_printer_int8_struct_field@@Base+0x160>
   1a364:	mov	r0, r4
   1a368:	bl	14660 <test_print@@Base+0xddc>
   1a36c:	ldr	r2, [r4, #20]
   1a370:	mov	r3, #34	; 0x22
   1a374:	mov	r6, #58	; 0x3a
   1a378:	lsr	r0, r5, #31
   1a37c:	mov	lr, #32
   1a380:	strb	r3, [r2]
   1a384:	uxtb	r3, r5
   1a388:	ldrb	r2, [r4, #26]
   1a38c:	ldr	ip, [r4, #20]
   1a390:	clz	r2, r2
   1a394:	lsr	r2, r2, #5
   1a398:	add	r1, ip, r2
   1a39c:	add	r1, r1, #1
   1a3a0:	str	r1, [r4, #20]
   1a3a4:	strb	r6, [ip, r2]
   1a3a8:	ldr	r2, [r4, #20]
   1a3ac:	strb	lr, [r2]
   1a3b0:	ldrb	r1, [r4, #25]
   1a3b4:	ldr	ip, [r4, #20]
   1a3b8:	adds	r1, r1, #0
   1a3bc:	movne	r1, #1
   1a3c0:	cmp	r5, #0
   1a3c4:	add	r2, ip, r1
   1a3c8:	str	r2, [r4, #20]
   1a3cc:	bge	1a3e4 <flatcc_json_printer_int8_struct_field@@Base+0x118>
   1a3d0:	rsb	r3, r3, #0
   1a3d4:	mov	lr, #45	; 0x2d
   1a3d8:	add	r2, r2, #1
   1a3dc:	uxtb	r3, r3
   1a3e0:	strb	lr, [ip, r1]
   1a3e4:	cmp	r3, #99	; 0x63
   1a3e8:	bhi	1a484 <flatcc_json_printer_int8_struct_field@@Base+0x1b8>
   1a3ec:	cmp	r3, #9
   1a3f0:	bhi	1a4f0 <flatcc_json_printer_int8_struct_field@@Base+0x224>
   1a3f4:	add	r3, r3, #48	; 0x30
   1a3f8:	mov	r1, #0
   1a3fc:	mov	ip, #1
   1a400:	strb	r3, [r2]
   1a404:	strb	r1, [r2, #1]
   1a408:	ldr	r3, [r4, #20]
   1a40c:	add	r2, r0, ip
   1a410:	ldrd	r6, [sp, #8]
   1a414:	ldr	r8, [sp, #16]
   1a418:	add	r3, r3, r2
   1a41c:	str	r3, [r4, #20]
   1a420:	ldrd	r4, [sp]
   1a424:	add	sp, sp, #20
   1a428:	pop	{pc}		; (ldr pc, [sp], #4)
   1a42c:	bl	12428 <memcpy@plt>
   1a430:	ldr	r2, [r4, #20]
   1a434:	add	r2, r2, r6
   1a438:	str	r2, [r4, #20]
   1a43c:	b	1a370 <flatcc_json_printer_int8_struct_field@@Base+0xa4>
   1a440:	add	r1, r2, #1
   1a444:	mov	r3, #10
   1a448:	str	r1, [r4, #20]
   1a44c:	strb	r3, [r2]
   1a450:	ldrb	r7, [r4, #25]
   1a454:	ldr	r1, [r4, #16]
   1a458:	ldr	r2, [r4, #32]
   1a45c:	ldr	r0, [r4, #20]
   1a460:	mul	r7, r2, r7
   1a464:	add	r3, r0, r7
   1a468:	cmp	r1, r3
   1a46c:	bcs	1a4d4 <flatcc_json_printer_int8_struct_field@@Base+0x208>
   1a470:	mov	r1, r7
   1a474:	mov	r0, r4
   1a478:	bl	14724 <test_print@@Base+0xea0>
   1a47c:	ldr	r2, [r4, #20]
   1a480:	b	1a330 <flatcc_json_printer_int8_struct_field@@Base+0x64>
   1a484:	movw	ip, #34079	; 0x851f
   1a488:	movt	ip, #20971	; 0x51eb
   1a48c:	mov	r6, #100	; 0x64
   1a490:	mov	lr, #0
   1a494:	umull	ip, r1, ip, r3
   1a498:	mov	r5, #49	; 0x31
   1a49c:	mov	ip, #3
   1a4a0:	strb	lr, [r2, #3]
   1a4a4:	movw	lr, #10976	; 0x2ae0
   1a4a8:	movt	lr, #2
   1a4ac:	lsr	r1, r1, #5
   1a4b0:	mls	r1, r6, r1, r3
   1a4b4:	uxtb	r1, r1
   1a4b8:	ldrb	r3, [lr, r1, lsl #1]
   1a4bc:	add	r1, lr, r1, lsl #1
   1a4c0:	strb	r3, [r2, #1]
   1a4c4:	ldrb	r3, [r1, #1]
   1a4c8:	strb	r5, [r2]
   1a4cc:	strb	r3, [r2, #2]
   1a4d0:	b	1a408 <flatcc_json_printer_int8_struct_field@@Base+0x13c>
   1a4d4:	mov	r2, r7
   1a4d8:	mov	r1, #32
   1a4dc:	bl	124c4 <memset@plt>
   1a4e0:	ldr	r2, [r4, #20]
   1a4e4:	add	r2, r2, r7
   1a4e8:	str	r2, [r4, #20]
   1a4ec:	b	1a330 <flatcc_json_printer_int8_struct_field@@Base+0x64>
   1a4f0:	mov	ip, #0
   1a4f4:	sxth	r3, r3
   1a4f8:	movw	r1, #10976	; 0x2ae0
   1a4fc:	movt	r1, #2
   1a500:	add	lr, r1, r3, lsl #1
   1a504:	strb	ip, [r2, #2]
   1a508:	mov	ip, #2
   1a50c:	ldrb	r3, [r1, r3, lsl #1]
   1a510:	strb	r3, [r2]
   1a514:	ldrb	r3, [lr, #1]
   1a518:	strb	r3, [r2, #1]
   1a51c:	b	1a408 <flatcc_json_printer_int8_struct_field@@Base+0x13c>

0001a520 <flatcc_json_printer_int16_struct_field@@Base>:
   1a520:	cmp	r1, #0
   1a524:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1a528:	mov	r4, r0
   1a52c:	ldrsh	r5, [r2, r3]
   1a530:	ldr	r2, [r0, #20]
   1a534:	strd	r6, [sp, #8]
   1a538:	str	r8, [sp, #16]
   1a53c:	str	lr, [sp, #20]
   1a540:	ldr	r6, [sp, #28]
   1a544:	beq	1a55c <flatcc_json_printer_int16_struct_field@@Base+0x3c>
   1a548:	add	r1, r2, #1
   1a54c:	mov	r3, #44	; 0x2c
   1a550:	str	r1, [r0, #20]
   1a554:	strb	r3, [r2]
   1a558:	ldr	r2, [r0, #20]
   1a55c:	ldrb	r1, [r4, #25]
   1a560:	cmp	r1, #0
   1a564:	bne	1a674 <flatcc_json_printer_int16_struct_field@@Base+0x154>
   1a568:	ldr	r3, [r4, #16]
   1a56c:	cmp	r3, r2
   1a570:	bhi	1a584 <flatcc_json_printer_int16_struct_field@@Base+0x64>
   1a574:	mov	r0, r4
   1a578:	ldr	r3, [r4, #44]	; 0x2c
   1a57c:	blx	r3
   1a580:	ldr	r2, [r4, #20]
   1a584:	mov	r3, #34	; 0x22
   1a588:	ldr	r1, [sp, #24]
   1a58c:	strb	r3, [r2]
   1a590:	ldrb	r3, [r4, #26]
   1a594:	ldr	r2, [r4, #16]
   1a598:	ldr	r0, [r4, #20]
   1a59c:	cmp	r3, #0
   1a5a0:	addeq	r0, r0, #1
   1a5a4:	add	r3, r0, r6
   1a5a8:	cmp	r2, r3
   1a5ac:	mov	r2, r6
   1a5b0:	str	r0, [r4, #20]
   1a5b4:	bhi	1a660 <flatcc_json_printer_int16_struct_field@@Base+0x140>
   1a5b8:	mov	r0, r4
   1a5bc:	bl	14660 <test_print@@Base+0xddc>
   1a5c0:	ldr	r2, [r4, #20]
   1a5c4:	mov	r3, #34	; 0x22
   1a5c8:	mov	lr, #58	; 0x3a
   1a5cc:	lsr	r6, r5, #31
   1a5d0:	mov	ip, #32
   1a5d4:	uxth	r0, r5
   1a5d8:	strb	r3, [r2]
   1a5dc:	ldrb	r3, [r4, #26]
   1a5e0:	ldr	r1, [r4, #20]
   1a5e4:	clz	r3, r3
   1a5e8:	lsr	r3, r3, #5
   1a5ec:	add	r2, r1, r3
   1a5f0:	add	r2, r2, #1
   1a5f4:	str	r2, [r4, #20]
   1a5f8:	strb	lr, [r1, r3]
   1a5fc:	ldr	r3, [r4, #20]
   1a600:	strb	ip, [r3]
   1a604:	ldrb	r3, [r4, #25]
   1a608:	ldr	r2, [r4, #20]
   1a60c:	adds	r3, r3, #0
   1a610:	movne	r3, #1
   1a614:	cmp	r5, #0
   1a618:	add	r1, r2, r3
   1a61c:	str	r1, [r4, #20]
   1a620:	bge	1a638 <flatcc_json_printer_int16_struct_field@@Base+0x118>
   1a624:	rsb	r0, r0, #0
   1a628:	mov	ip, #45	; 0x2d
   1a62c:	add	r1, r1, #1
   1a630:	uxth	r0, r0
   1a634:	strb	ip, [r2, r3]
   1a638:	bl	13b40 <test_print@@Base+0x2bc>
   1a63c:	ldr	r3, [r4, #20]
   1a640:	add	r0, r6, r0
   1a644:	ldrd	r6, [sp, #8]
   1a648:	ldr	r8, [sp, #16]
   1a64c:	add	r3, r3, r0
   1a650:	str	r3, [r4, #20]
   1a654:	ldrd	r4, [sp]
   1a658:	add	sp, sp, #20
   1a65c:	pop	{pc}		; (ldr pc, [sp], #4)
   1a660:	bl	12428 <memcpy@plt>
   1a664:	ldr	r2, [r4, #20]
   1a668:	add	r2, r2, r6
   1a66c:	str	r2, [r4, #20]
   1a670:	b	1a5c4 <flatcc_json_printer_int16_struct_field@@Base+0xa4>
   1a674:	add	r1, r2, #1
   1a678:	mov	r3, #10
   1a67c:	str	r1, [r4, #20]
   1a680:	strb	r3, [r2]
   1a684:	ldrb	r7, [r4, #25]
   1a688:	ldr	r1, [r4, #16]
   1a68c:	ldr	r2, [r4, #32]
   1a690:	ldr	r0, [r4, #20]
   1a694:	mul	r7, r2, r7
   1a698:	add	r3, r0, r7
   1a69c:	cmp	r1, r3
   1a6a0:	bcs	1a6b8 <flatcc_json_printer_int16_struct_field@@Base+0x198>
   1a6a4:	mov	r1, r7
   1a6a8:	mov	r0, r4
   1a6ac:	bl	14724 <test_print@@Base+0xea0>
   1a6b0:	ldr	r2, [r4, #20]
   1a6b4:	b	1a584 <flatcc_json_printer_int16_struct_field@@Base+0x64>
   1a6b8:	mov	r2, r7
   1a6bc:	mov	r1, #32
   1a6c0:	bl	124c4 <memset@plt>
   1a6c4:	ldr	r2, [r4, #20]
   1a6c8:	add	r2, r2, r7
   1a6cc:	str	r2, [r4, #20]
   1a6d0:	b	1a584 <flatcc_json_printer_int16_struct_field@@Base+0x64>

0001a6d4 <flatcc_json_printer_int32_struct_field@@Base>:
   1a6d4:	cmp	r1, #0
   1a6d8:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1a6dc:	mov	r4, r0
   1a6e0:	ldr	r5, [r2, r3]
   1a6e4:	ldr	r2, [r0, #20]
   1a6e8:	strd	r6, [sp, #8]
   1a6ec:	str	r8, [sp, #16]
   1a6f0:	str	lr, [sp, #20]
   1a6f4:	ldr	r6, [sp, #28]
   1a6f8:	beq	1a710 <flatcc_json_printer_int32_struct_field@@Base+0x3c>
   1a6fc:	add	r1, r2, #1
   1a700:	mov	r3, #44	; 0x2c
   1a704:	str	r1, [r0, #20]
   1a708:	strb	r3, [r2]
   1a70c:	ldr	r2, [r0, #20]
   1a710:	ldrb	r1, [r4, #25]
   1a714:	cmp	r1, #0
   1a718:	bne	1a824 <flatcc_json_printer_int32_struct_field@@Base+0x150>
   1a71c:	ldr	r3, [r4, #16]
   1a720:	cmp	r3, r2
   1a724:	bhi	1a738 <flatcc_json_printer_int32_struct_field@@Base+0x64>
   1a728:	mov	r0, r4
   1a72c:	ldr	r3, [r4, #44]	; 0x2c
   1a730:	blx	r3
   1a734:	ldr	r2, [r4, #20]
   1a738:	mov	r3, #34	; 0x22
   1a73c:	ldr	r1, [sp, #24]
   1a740:	strb	r3, [r2]
   1a744:	ldrb	r3, [r4, #26]
   1a748:	ldr	r2, [r4, #16]
   1a74c:	ldr	r0, [r4, #20]
   1a750:	cmp	r3, #0
   1a754:	addeq	r0, r0, #1
   1a758:	add	r3, r0, r6
   1a75c:	cmp	r2, r3
   1a760:	mov	r2, r6
   1a764:	str	r0, [r4, #20]
   1a768:	bhi	1a810 <flatcc_json_printer_int32_struct_field@@Base+0x13c>
   1a76c:	mov	r0, r4
   1a770:	bl	14660 <test_print@@Base+0xddc>
   1a774:	ldr	r2, [r4, #20]
   1a778:	mov	r3, #34	; 0x22
   1a77c:	mov	ip, #58	; 0x3a
   1a780:	lsr	r6, r5, #31
   1a784:	mov	r0, #32
   1a788:	strb	r3, [r2]
   1a78c:	ldrb	r3, [r4, #26]
   1a790:	ldr	r1, [r4, #20]
   1a794:	clz	r3, r3
   1a798:	lsr	r3, r3, #5
   1a79c:	add	r2, r1, r3
   1a7a0:	add	r2, r2, #1
   1a7a4:	str	r2, [r4, #20]
   1a7a8:	strb	ip, [r1, r3]
   1a7ac:	ldr	r3, [r4, #20]
   1a7b0:	strb	r0, [r3]
   1a7b4:	ldrb	r3, [r4, #25]
   1a7b8:	ldr	r2, [r4, #20]
   1a7bc:	adds	r3, r3, #0
   1a7c0:	movne	r3, #1
   1a7c4:	cmp	r5, #0
   1a7c8:	add	r1, r2, r3
   1a7cc:	str	r1, [r4, #20]
   1a7d0:	bge	1a7e4 <flatcc_json_printer_int32_struct_field@@Base+0x110>
   1a7d4:	mov	r0, #45	; 0x2d
   1a7d8:	rsb	r5, r5, #0
   1a7dc:	add	r1, r1, #1
   1a7e0:	strb	r0, [r2, r3]
   1a7e4:	mov	r0, r5
   1a7e8:	bl	13c98 <test_print@@Base+0x414>
   1a7ec:	ldr	r3, [r4, #20]
   1a7f0:	add	r0, r6, r0
   1a7f4:	ldrd	r6, [sp, #8]
   1a7f8:	ldr	r8, [sp, #16]
   1a7fc:	add	r3, r3, r0
   1a800:	str	r3, [r4, #20]
   1a804:	ldrd	r4, [sp]
   1a808:	add	sp, sp, #20
   1a80c:	pop	{pc}		; (ldr pc, [sp], #4)
   1a810:	bl	12428 <memcpy@plt>
   1a814:	ldr	r2, [r4, #20]
   1a818:	add	r2, r2, r6
   1a81c:	str	r2, [r4, #20]
   1a820:	b	1a778 <flatcc_json_printer_int32_struct_field@@Base+0xa4>
   1a824:	add	r1, r2, #1
   1a828:	mov	r3, #10
   1a82c:	str	r1, [r4, #20]
   1a830:	strb	r3, [r2]
   1a834:	ldrb	r7, [r4, #25]
   1a838:	ldr	r1, [r4, #16]
   1a83c:	ldr	r2, [r4, #32]
   1a840:	ldr	r0, [r4, #20]
   1a844:	mul	r7, r2, r7
   1a848:	add	r3, r0, r7
   1a84c:	cmp	r1, r3
   1a850:	bcs	1a868 <flatcc_json_printer_int32_struct_field@@Base+0x194>
   1a854:	mov	r1, r7
   1a858:	mov	r0, r4
   1a85c:	bl	14724 <test_print@@Base+0xea0>
   1a860:	ldr	r2, [r4, #20]
   1a864:	b	1a738 <flatcc_json_printer_int32_struct_field@@Base+0x64>
   1a868:	mov	r2, r7
   1a86c:	mov	r1, #32
   1a870:	bl	124c4 <memset@plt>
   1a874:	ldr	r2, [r4, #20]
   1a878:	add	r2, r2, r7
   1a87c:	str	r2, [r4, #20]
   1a880:	b	1a738 <flatcc_json_printer_int32_struct_field@@Base+0x64>

0001a884 <flatcc_json_printer_int64_struct_field@@Base>:
   1a884:	cmp	r1, #0
   1a888:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1a88c:	mov	r4, r0
   1a890:	strd	r6, [sp, #8]
   1a894:	str	r8, [sp, #16]
   1a898:	str	lr, [sp, #20]
   1a89c:	ldrd	r6, [r2, r3]
   1a8a0:	ldr	r2, [r0, #20]
   1a8a4:	ldr	r5, [sp, #28]
   1a8a8:	beq	1a8c0 <flatcc_json_printer_int64_struct_field@@Base+0x3c>
   1a8ac:	add	r1, r2, #1
   1a8b0:	mov	r3, #44	; 0x2c
   1a8b4:	str	r1, [r0, #20]
   1a8b8:	strb	r3, [r2]
   1a8bc:	ldr	r2, [r0, #20]
   1a8c0:	ldrb	r1, [r4, #25]
   1a8c4:	cmp	r1, #0
   1a8c8:	bne	1a9e0 <flatcc_json_printer_int64_struct_field@@Base+0x15c>
   1a8cc:	ldr	r3, [r4, #16]
   1a8d0:	cmp	r3, r2
   1a8d4:	bhi	1a8e8 <flatcc_json_printer_int64_struct_field@@Base+0x64>
   1a8d8:	mov	r0, r4
   1a8dc:	ldr	r3, [r4, #44]	; 0x2c
   1a8e0:	blx	r3
   1a8e4:	ldr	r2, [r4, #20]
   1a8e8:	mov	r3, #34	; 0x22
   1a8ec:	ldr	r1, [sp, #24]
   1a8f0:	strb	r3, [r2]
   1a8f4:	ldrb	r3, [r4, #26]
   1a8f8:	ldr	r2, [r4, #16]
   1a8fc:	ldr	r0, [r4, #20]
   1a900:	cmp	r3, #0
   1a904:	addeq	r0, r0, #1
   1a908:	add	r3, r0, r5
   1a90c:	cmp	r2, r3
   1a910:	mov	r2, r5
   1a914:	str	r0, [r4, #20]
   1a918:	bhi	1a9cc <flatcc_json_printer_int64_struct_field@@Base+0x148>
   1a91c:	mov	r0, r4
   1a920:	bl	14660 <test_print@@Base+0xddc>
   1a924:	ldr	r2, [r4, #20]
   1a928:	mov	r3, #34	; 0x22
   1a92c:	mov	ip, #58	; 0x3a
   1a930:	lsr	r5, r7, #31
   1a934:	mov	r0, #32
   1a938:	strb	r3, [r2]
   1a93c:	ldrb	r3, [r4, #26]
   1a940:	ldr	r1, [r4, #20]
   1a944:	clz	r3, r3
   1a948:	lsr	r3, r3, #5
   1a94c:	add	r2, r1, r3
   1a950:	add	r2, r2, #1
   1a954:	str	r2, [r4, #20]
   1a958:	strb	ip, [r1, r3]
   1a95c:	ldr	r3, [r4, #20]
   1a960:	strb	r0, [r3]
   1a964:	ldrb	r3, [r4, #25]
   1a968:	ldr	r1, [r4, #20]
   1a96c:	adds	r3, r3, #0
   1a970:	movne	r3, #1
   1a974:	cmp	r6, #0
   1a978:	sbcs	r2, r7, #0
   1a97c:	add	r2, r1, r3
   1a980:	str	r2, [r4, #20]
   1a984:	bge	1a99c <flatcc_json_printer_int64_struct_field@@Base+0x118>
   1a988:	rsbs	r6, r6, #0
   1a98c:	mov	r0, #45	; 0x2d
   1a990:	rsc	r7, r7, #0
   1a994:	add	r2, r2, #1
   1a998:	strb	r0, [r1, r3]
   1a99c:	mov	r0, r6
   1a9a0:	mov	r1, r7
   1a9a4:	bl	13fac <test_print@@Base+0x728>
   1a9a8:	ldr	r3, [r4, #20]
   1a9ac:	add	r0, r5, r0
   1a9b0:	ldrd	r6, [sp, #8]
   1a9b4:	ldr	r8, [sp, #16]
   1a9b8:	add	r3, r3, r0
   1a9bc:	str	r3, [r4, #20]
   1a9c0:	ldrd	r4, [sp]
   1a9c4:	add	sp, sp, #20
   1a9c8:	pop	{pc}		; (ldr pc, [sp], #4)
   1a9cc:	bl	12428 <memcpy@plt>
   1a9d0:	ldr	r2, [r4, #20]
   1a9d4:	add	r2, r2, r5
   1a9d8:	str	r2, [r4, #20]
   1a9dc:	b	1a928 <flatcc_json_printer_int64_struct_field@@Base+0xa4>
   1a9e0:	add	r1, r2, #1
   1a9e4:	mov	r3, #10
   1a9e8:	str	r1, [r4, #20]
   1a9ec:	strb	r3, [r2]
   1a9f0:	ldrb	r8, [r4, #25]
   1a9f4:	ldr	r1, [r4, #16]
   1a9f8:	ldr	r2, [r4, #32]
   1a9fc:	ldr	r0, [r4, #20]
   1aa00:	mul	r8, r2, r8
   1aa04:	add	r3, r0, r8
   1aa08:	cmp	r1, r3
   1aa0c:	bcs	1aa24 <flatcc_json_printer_int64_struct_field@@Base+0x1a0>
   1aa10:	mov	r1, r8
   1aa14:	mov	r0, r4
   1aa18:	bl	14724 <test_print@@Base+0xea0>
   1aa1c:	ldr	r2, [r4, #20]
   1aa20:	b	1a8e8 <flatcc_json_printer_int64_struct_field@@Base+0x64>
   1aa24:	mov	r2, r8
   1aa28:	mov	r1, #32
   1aa2c:	bl	124c4 <memset@plt>
   1aa30:	ldr	r2, [r4, #20]
   1aa34:	add	r2, r2, r8
   1aa38:	str	r2, [r4, #20]
   1aa3c:	b	1a8e8 <flatcc_json_printer_int64_struct_field@@Base+0x64>

0001aa40 <flatcc_json_printer_bool_struct_field@@Base>:
   1aa40:	cmp	r1, #0
   1aa44:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1aa48:	mov	r4, r0
   1aa4c:	strd	r6, [sp, #8]
   1aa50:	str	r8, [sp, #16]
   1aa54:	str	lr, [sp, #20]
   1aa58:	ldrb	r5, [r2, r3]
   1aa5c:	ldr	r2, [r0, #20]
   1aa60:	ldr	r6, [sp, #28]
   1aa64:	beq	1aa7c <flatcc_json_printer_bool_struct_field@@Base+0x3c>
   1aa68:	add	r1, r2, #1
   1aa6c:	mov	r3, #44	; 0x2c
   1aa70:	str	r1, [r0, #20]
   1aa74:	strb	r3, [r2]
   1aa78:	ldr	r2, [r0, #20]
   1aa7c:	ldrb	r1, [r4, #25]
   1aa80:	cmp	r1, #0
   1aa84:	bne	1abb4 <flatcc_json_printer_bool_struct_field@@Base+0x174>
   1aa88:	ldr	r3, [r4, #16]
   1aa8c:	cmp	r3, r2
   1aa90:	bhi	1aaa4 <flatcc_json_printer_bool_struct_field@@Base+0x64>
   1aa94:	mov	r0, r4
   1aa98:	ldr	r3, [r4, #44]	; 0x2c
   1aa9c:	blx	r3
   1aaa0:	ldr	r2, [r4, #20]
   1aaa4:	mov	r3, #34	; 0x22
   1aaa8:	ldr	r1, [sp, #24]
   1aaac:	strb	r3, [r2]
   1aab0:	ldrb	r3, [r4, #26]
   1aab4:	ldr	r2, [r4, #16]
   1aab8:	ldr	r0, [r4, #20]
   1aabc:	cmp	r3, #0
   1aac0:	addeq	r0, r0, #1
   1aac4:	add	r3, r0, r6
   1aac8:	cmp	r2, r3
   1aacc:	mov	r2, r6
   1aad0:	str	r0, [r4, #20]
   1aad4:	bhi	1ab7c <flatcc_json_printer_bool_struct_field@@Base+0x13c>
   1aad8:	mov	r0, r4
   1aadc:	bl	14660 <test_print@@Base+0xddc>
   1aae0:	ldr	r2, [r4, #20]
   1aae4:	mov	r3, #34	; 0x22
   1aae8:	mov	ip, #58	; 0x3a
   1aaec:	mov	r0, #32
   1aaf0:	strb	r3, [r2]
   1aaf4:	ldrb	r3, [r4, #26]
   1aaf8:	ldr	r1, [r4, #20]
   1aafc:	clz	r3, r3
   1ab00:	lsr	r3, r3, #5
   1ab04:	add	r2, r1, r3
   1ab08:	add	r2, r2, #1
   1ab0c:	str	r2, [r4, #20]
   1ab10:	strb	ip, [r1, r3]
   1ab14:	ldr	r3, [r4, #20]
   1ab18:	strb	r0, [r3]
   1ab1c:	ldrb	r3, [r4, #25]
   1ab20:	ldr	r1, [r4, #20]
   1ab24:	adds	r3, r3, #0
   1ab28:	movne	r3, #1
   1ab2c:	cmp	r5, #0
   1ab30:	add	r2, r1, r3
   1ab34:	str	r2, [r4, #20]
   1ab38:	beq	1ab90 <flatcc_json_printer_bool_struct_field@@Base+0x150>
   1ab3c:	ldr	ip, [pc, #208]	; 1ac14 <flatcc_json_printer_bool_struct_field@@Base+0x1d4>
   1ab40:	movw	r0, #10976	; 0x2ae0
   1ab44:	movt	r0, #2
   1ab48:	ldr	lr, [r0, #1768]	; 0x6e8
   1ab4c:	mov	r0, #4
   1ab50:	ldrb	ip, [ip, #4]
   1ab54:	str	lr, [r1, r3]
   1ab58:	strb	ip, [r2, #4]
   1ab5c:	ldr	r3, [r4, #20]
   1ab60:	ldrd	r6, [sp, #8]
   1ab64:	ldr	r8, [sp, #16]
   1ab68:	add	r3, r3, r0
   1ab6c:	str	r3, [r4, #20]
   1ab70:	ldrd	r4, [sp]
   1ab74:	add	sp, sp, #20
   1ab78:	pop	{pc}		; (ldr pc, [sp], #4)
   1ab7c:	bl	12428 <memcpy@plt>
   1ab80:	ldr	r2, [r4, #20]
   1ab84:	add	r2, r2, r6
   1ab88:	str	r2, [r4, #20]
   1ab8c:	b	1aae4 <flatcc_json_printer_bool_struct_field@@Base+0xa4>
   1ab90:	movw	r0, #10976	; 0x2ae0
   1ab94:	movt	r0, #2
   1ab98:	add	ip, r0, #1776	; 0x6f0
   1ab9c:	ldr	lr, [r0, #1776]	; 0x6f0
   1aba0:	mov	r0, #5
   1aba4:	ldrh	ip, [ip, #4]
   1aba8:	str	lr, [r1, r3]
   1abac:	strh	ip, [r2, #4]
   1abb0:	b	1ab5c <flatcc_json_printer_bool_struct_field@@Base+0x11c>
   1abb4:	add	r1, r2, #1
   1abb8:	mov	r3, #10
   1abbc:	str	r1, [r4, #20]
   1abc0:	strb	r3, [r2]
   1abc4:	ldrb	r7, [r4, #25]
   1abc8:	ldr	r1, [r4, #16]
   1abcc:	ldr	r2, [r4, #32]
   1abd0:	ldr	r0, [r4, #20]
   1abd4:	mul	r7, r2, r7
   1abd8:	add	r3, r0, r7
   1abdc:	cmp	r1, r3
   1abe0:	bcs	1abf8 <flatcc_json_printer_bool_struct_field@@Base+0x1b8>
   1abe4:	mov	r1, r7
   1abe8:	mov	r0, r4
   1abec:	bl	14724 <test_print@@Base+0xea0>
   1abf0:	ldr	r2, [r4, #20]
   1abf4:	b	1aaa4 <flatcc_json_printer_bool_struct_field@@Base+0x64>
   1abf8:	mov	r2, r7
   1abfc:	mov	r1, #32
   1ac00:	bl	124c4 <memset@plt>
   1ac04:	ldr	r2, [r4, #20]
   1ac08:	add	r2, r2, r7
   1ac0c:	str	r2, [r4, #20]
   1ac10:	b	1aaa4 <flatcc_json_printer_bool_struct_field@@Base+0x64>
   1ac14:	andeq	r3, r2, r8, asr #3

0001ac18 <flatcc_json_printer_float_struct_field@@Base>:
   1ac18:	add	r3, r2, r3
   1ac1c:	cmp	r1, #0
   1ac20:	strd	r4, [sp, #-16]!
   1ac24:	ldr	r2, [r0, #20]
   1ac28:	mov	r4, r0
   1ac2c:	str	r6, [sp, #8]
   1ac30:	str	lr, [sp, #12]
   1ac34:	vpush	{d8}
   1ac38:	vldr	s16, [r3]
   1ac3c:	ldr	r5, [sp, #28]
   1ac40:	beq	1ac58 <flatcc_json_printer_float_struct_field@@Base+0x40>
   1ac44:	add	r1, r2, #1
   1ac48:	mov	r3, #44	; 0x2c
   1ac4c:	str	r1, [r0, #20]
   1ac50:	strb	r3, [r2]
   1ac54:	ldr	r2, [r0, #20]
   1ac58:	ldrb	r1, [r4, #25]
   1ac5c:	cmp	r1, #0
   1ac60:	bne	1ad4c <flatcc_json_printer_float_struct_field@@Base+0x134>
   1ac64:	ldr	r3, [r4, #16]
   1ac68:	cmp	r3, r2
   1ac6c:	bhi	1ac80 <flatcc_json_printer_float_struct_field@@Base+0x68>
   1ac70:	mov	r0, r4
   1ac74:	ldr	r3, [r4, #44]	; 0x2c
   1ac78:	blx	r3
   1ac7c:	ldr	r2, [r4, #20]
   1ac80:	mov	r3, #34	; 0x22
   1ac84:	ldr	r1, [sp, #24]
   1ac88:	strb	r3, [r2]
   1ac8c:	ldrb	r3, [r4, #26]
   1ac90:	ldr	r2, [r4, #16]
   1ac94:	ldr	r0, [r4, #20]
   1ac98:	cmp	r3, #0
   1ac9c:	addeq	r0, r0, #1
   1aca0:	add	r3, r0, r5
   1aca4:	cmp	r2, r3
   1aca8:	mov	r2, r5
   1acac:	str	r0, [r4, #20]
   1acb0:	bhi	1ad38 <flatcc_json_printer_float_struct_field@@Base+0x120>
   1acb4:	mov	r0, r4
   1acb8:	bl	14660 <test_print@@Base+0xddc>
   1acbc:	ldr	r2, [r4, #20]
   1acc0:	mov	r3, #34	; 0x22
   1acc4:	mov	ip, #58	; 0x3a
   1acc8:	vcvt.f64.f32	d0, s16
   1accc:	mov	r0, #32
   1acd0:	strb	r3, [r2]
   1acd4:	ldrb	r3, [r4, #26]
   1acd8:	ldr	r1, [r4, #20]
   1acdc:	clz	r3, r3
   1ace0:	lsr	r3, r3, #5
   1ace4:	add	r2, r1, r3
   1ace8:	add	r2, r2, #1
   1acec:	str	r2, [r4, #20]
   1acf0:	strb	ip, [r1, r3]
   1acf4:	ldr	r3, [r4, #20]
   1acf8:	strb	r0, [r3]
   1acfc:	ldrb	r2, [r4, #25]
   1ad00:	ldr	r3, [r4, #20]
   1ad04:	cmp	r2, #0
   1ad08:	addne	r3, r3, #1
   1ad0c:	mov	r0, r3
   1ad10:	str	r3, [r4, #20]
   1ad14:	bl	14e70 <test_print@@Base+0x15ec>
   1ad18:	ldr	r3, [r4, #20]
   1ad1c:	vpop	{d8}
   1ad20:	add	r0, r3, r0
   1ad24:	ldr	r6, [sp, #8]
   1ad28:	str	r0, [r4, #20]
   1ad2c:	ldrd	r4, [sp]
   1ad30:	add	sp, sp, #12
   1ad34:	pop	{pc}		; (ldr pc, [sp], #4)
   1ad38:	bl	12428 <memcpy@plt>
   1ad3c:	ldr	r2, [r4, #20]
   1ad40:	add	r2, r2, r5
   1ad44:	str	r2, [r4, #20]
   1ad48:	b	1acc0 <flatcc_json_printer_float_struct_field@@Base+0xa8>
   1ad4c:	add	r1, r2, #1
   1ad50:	mov	r3, #10
   1ad54:	str	r1, [r4, #20]
   1ad58:	strb	r3, [r2]
   1ad5c:	ldrb	r6, [r4, #25]
   1ad60:	ldr	r1, [r4, #16]
   1ad64:	ldr	r2, [r4, #32]
   1ad68:	ldr	r0, [r4, #20]
   1ad6c:	mul	r6, r2, r6
   1ad70:	add	r3, r0, r6
   1ad74:	cmp	r1, r3
   1ad78:	bcs	1ad90 <flatcc_json_printer_float_struct_field@@Base+0x178>
   1ad7c:	mov	r1, r6
   1ad80:	mov	r0, r4
   1ad84:	bl	14724 <test_print@@Base+0xea0>
   1ad88:	ldr	r2, [r4, #20]
   1ad8c:	b	1ac80 <flatcc_json_printer_float_struct_field@@Base+0x68>
   1ad90:	mov	r2, r6
   1ad94:	mov	r1, #32
   1ad98:	bl	124c4 <memset@plt>
   1ad9c:	ldr	r2, [r4, #20]
   1ada0:	add	r2, r2, r6
   1ada4:	str	r2, [r4, #20]
   1ada8:	b	1ac80 <flatcc_json_printer_float_struct_field@@Base+0x68>

0001adac <flatcc_json_printer_double_struct_field@@Base>:
   1adac:	add	r3, r2, r3
   1adb0:	cmp	r1, #0
   1adb4:	strd	r4, [sp, #-16]!
   1adb8:	ldr	r2, [r0, #20]
   1adbc:	mov	r4, r0
   1adc0:	str	r6, [sp, #8]
   1adc4:	str	lr, [sp, #12]
   1adc8:	vpush	{d8}
   1adcc:	vldr	d8, [r3]
   1add0:	ldr	r5, [sp, #28]
   1add4:	beq	1adec <flatcc_json_printer_double_struct_field@@Base+0x40>
   1add8:	add	r1, r2, #1
   1addc:	mov	r3, #44	; 0x2c
   1ade0:	str	r1, [r0, #20]
   1ade4:	strb	r3, [r2]
   1ade8:	ldr	r2, [r0, #20]
   1adec:	ldrb	r1, [r4, #25]
   1adf0:	cmp	r1, #0
   1adf4:	bne	1aee0 <flatcc_json_printer_double_struct_field@@Base+0x134>
   1adf8:	ldr	r3, [r4, #16]
   1adfc:	cmp	r3, r2
   1ae00:	bhi	1ae14 <flatcc_json_printer_double_struct_field@@Base+0x68>
   1ae04:	mov	r0, r4
   1ae08:	ldr	r3, [r4, #44]	; 0x2c
   1ae0c:	blx	r3
   1ae10:	ldr	r2, [r4, #20]
   1ae14:	mov	r3, #34	; 0x22
   1ae18:	ldr	r1, [sp, #24]
   1ae1c:	strb	r3, [r2]
   1ae20:	ldrb	r3, [r4, #26]
   1ae24:	ldr	r2, [r4, #16]
   1ae28:	ldr	r0, [r4, #20]
   1ae2c:	cmp	r3, #0
   1ae30:	addeq	r0, r0, #1
   1ae34:	add	r3, r0, r5
   1ae38:	cmp	r2, r3
   1ae3c:	mov	r2, r5
   1ae40:	str	r0, [r4, #20]
   1ae44:	bhi	1aecc <flatcc_json_printer_double_struct_field@@Base+0x120>
   1ae48:	mov	r0, r4
   1ae4c:	bl	14660 <test_print@@Base+0xddc>
   1ae50:	ldr	r2, [r4, #20]
   1ae54:	mov	r3, #34	; 0x22
   1ae58:	mov	ip, #58	; 0x3a
   1ae5c:	vmov.f64	d0, d8
   1ae60:	mov	r0, #32
   1ae64:	strb	r3, [r2]
   1ae68:	ldrb	r3, [r4, #26]
   1ae6c:	ldr	r1, [r4, #20]
   1ae70:	clz	r3, r3
   1ae74:	lsr	r3, r3, #5
   1ae78:	add	r2, r1, r3
   1ae7c:	add	r2, r2, #1
   1ae80:	str	r2, [r4, #20]
   1ae84:	strb	ip, [r1, r3]
   1ae88:	ldr	r3, [r4, #20]
   1ae8c:	strb	r0, [r3]
   1ae90:	ldrb	r2, [r4, #25]
   1ae94:	ldr	r3, [r4, #20]
   1ae98:	cmp	r2, #0
   1ae9c:	addne	r3, r3, #1
   1aea0:	mov	r0, r3
   1aea4:	str	r3, [r4, #20]
   1aea8:	bl	14e70 <test_print@@Base+0x15ec>
   1aeac:	ldr	r3, [r4, #20]
   1aeb0:	vpop	{d8}
   1aeb4:	add	r0, r3, r0
   1aeb8:	ldr	r6, [sp, #8]
   1aebc:	str	r0, [r4, #20]
   1aec0:	ldrd	r4, [sp]
   1aec4:	add	sp, sp, #12
   1aec8:	pop	{pc}		; (ldr pc, [sp], #4)
   1aecc:	bl	12428 <memcpy@plt>
   1aed0:	ldr	r2, [r4, #20]
   1aed4:	add	r2, r2, r5
   1aed8:	str	r2, [r4, #20]
   1aedc:	b	1ae54 <flatcc_json_printer_double_struct_field@@Base+0xa8>
   1aee0:	add	r1, r2, #1
   1aee4:	mov	r3, #10
   1aee8:	str	r1, [r4, #20]
   1aeec:	strb	r3, [r2]
   1aef0:	ldrb	r6, [r4, #25]
   1aef4:	ldr	r1, [r4, #16]
   1aef8:	ldr	r2, [r4, #32]
   1aefc:	ldr	r0, [r4, #20]
   1af00:	mul	r6, r2, r6
   1af04:	add	r3, r0, r6
   1af08:	cmp	r1, r3
   1af0c:	bcs	1af24 <flatcc_json_printer_double_struct_field@@Base+0x178>
   1af10:	mov	r1, r6
   1af14:	mov	r0, r4
   1af18:	bl	14724 <test_print@@Base+0xea0>
   1af1c:	ldr	r2, [r4, #20]
   1af20:	b	1ae14 <flatcc_json_printer_double_struct_field@@Base+0x68>
   1af24:	mov	r2, r6
   1af28:	mov	r1, #32
   1af2c:	bl	124c4 <memset@plt>
   1af30:	ldr	r2, [r4, #20]
   1af34:	add	r2, r2, r6
   1af38:	str	r2, [r4, #20]
   1af3c:	b	1ae14 <flatcc_json_printer_double_struct_field@@Base+0x68>

0001af40 <flatcc_json_printer_uint8_enum_struct_field@@Base>:
   1af40:	cmp	r1, #0
   1af44:	strd	r4, [sp, #-32]!	; 0xffffffe0
   1af48:	mov	r4, r0
   1af4c:	strd	r6, [sp, #8]
   1af50:	strd	r8, [sp, #16]
   1af54:	str	sl, [sp, #24]
   1af58:	str	lr, [sp, #28]
   1af5c:	ldrb	r5, [r2, r3]
   1af60:	ldr	r2, [r0, #20]
   1af64:	ldr	r8, [sp, #32]
   1af68:	ldr	r7, [sp, #36]	; 0x24
   1af6c:	ldr	r6, [sp, #40]	; 0x28
   1af70:	beq	1af88 <flatcc_json_printer_uint8_enum_struct_field@@Base+0x48>
   1af74:	add	r1, r2, #1
   1af78:	mov	r3, #44	; 0x2c
   1af7c:	str	r1, [r0, #20]
   1af80:	strb	r3, [r2]
   1af84:	ldr	r2, [r0, #20]
   1af88:	ldrb	r1, [r4, #25]
   1af8c:	cmp	r1, #0
   1af90:	bne	1b0d8 <flatcc_json_printer_uint8_enum_struct_field@@Base+0x198>
   1af94:	ldr	r3, [r4, #16]
   1af98:	cmp	r2, r3
   1af9c:	bcc	1afb0 <flatcc_json_printer_uint8_enum_struct_field@@Base+0x70>
   1afa0:	mov	r0, r4
   1afa4:	ldr	r3, [r4, #44]	; 0x2c
   1afa8:	blx	r3
   1afac:	ldr	r2, [r4, #20]
   1afb0:	mov	r3, #34	; 0x22
   1afb4:	strb	r3, [r2]
   1afb8:	ldrb	r3, [r4, #26]
   1afbc:	ldr	r2, [r4, #16]
   1afc0:	ldr	r0, [r4, #20]
   1afc4:	cmp	r3, #0
   1afc8:	addeq	r0, r0, #1
   1afcc:	add	r3, r0, r7
   1afd0:	cmp	r2, r3
   1afd4:	str	r0, [r4, #20]
   1afd8:	bhi	1b074 <flatcc_json_printer_uint8_enum_struct_field@@Base+0x134>
   1afdc:	mov	r2, r7
   1afe0:	mov	r1, r8
   1afe4:	mov	r0, r4
   1afe8:	bl	14660 <test_print@@Base+0xddc>
   1afec:	ldr	r2, [r4, #20]
   1aff0:	mov	r3, #34	; 0x22
   1aff4:	mov	ip, #58	; 0x3a
   1aff8:	mov	r0, #32
   1affc:	strb	r3, [r2]
   1b000:	ldrb	r3, [r4, #26]
   1b004:	ldr	r1, [r4, #20]
   1b008:	clz	r3, r3
   1b00c:	lsr	r3, r3, #5
   1b010:	add	r2, r1, r3
   1b014:	add	r2, r2, #1
   1b018:	str	r2, [r4, #20]
   1b01c:	strb	ip, [r1, r3]
   1b020:	ldr	r3, [r4, #20]
   1b024:	strb	r0, [r3]
   1b028:	ldrb	r3, [r4, #25]
   1b02c:	ldr	r0, [r4, #20]
   1b030:	ldrb	r2, [r4, #27]
   1b034:	adds	r3, r3, #0
   1b038:	movne	r3, #1
   1b03c:	add	r1, r0, r3
   1b040:	cmp	r2, #0
   1b044:	str	r1, [r4, #20]
   1b048:	bne	1b090 <flatcc_json_printer_uint8_enum_struct_field@@Base+0x150>
   1b04c:	mov	r1, r5
   1b050:	mov	r0, r4
   1b054:	ldrd	r4, [sp]
   1b058:	mov	r3, r6
   1b05c:	ldrd	r6, [sp, #8]
   1b060:	ldrd	r8, [sp, #16]
   1b064:	ldr	sl, [sp, #24]
   1b068:	ldr	lr, [sp, #28]
   1b06c:	add	sp, sp, #32
   1b070:	bx	r3
   1b074:	mov	r2, r7
   1b078:	mov	r1, r8
   1b07c:	bl	12428 <memcpy@plt>
   1b080:	ldr	r2, [r4, #20]
   1b084:	add	r2, r2, r7
   1b088:	str	r2, [r4, #20]
   1b08c:	b	1aff0 <flatcc_json_printer_uint8_enum_struct_field@@Base+0xb0>
   1b090:	cmp	r5, #99	; 0x63
   1b094:	bhi	1b138 <flatcc_json_printer_uint8_enum_struct_field@@Base+0x1f8>
   1b098:	cmp	r5, #9
   1b09c:	bhi	1b188 <flatcc_json_printer_uint8_enum_struct_field@@Base+0x248>
   1b0a0:	add	r5, r5, #48	; 0x30
   1b0a4:	mov	r2, #0
   1b0a8:	mov	ip, #1
   1b0ac:	strb	r2, [r1, #1]
   1b0b0:	strb	r5, [r0, r3]
   1b0b4:	ldr	r3, [r4, #20]
   1b0b8:	ldrd	r6, [sp, #8]
   1b0bc:	ldrd	r8, [sp, #16]
   1b0c0:	add	r3, r3, ip
   1b0c4:	ldr	sl, [sp, #24]
   1b0c8:	str	r3, [r4, #20]
   1b0cc:	ldrd	r4, [sp]
   1b0d0:	add	sp, sp, #28
   1b0d4:	pop	{pc}		; (ldr pc, [sp], #4)
   1b0d8:	add	r1, r2, #1
   1b0dc:	mov	r3, #10
   1b0e0:	str	r1, [r4, #20]
   1b0e4:	strb	r3, [r2]
   1b0e8:	ldrb	r3, [r4, #25]
   1b0ec:	ldr	r1, [r4, #16]
   1b0f0:	ldr	r2, [r4, #32]
   1b0f4:	ldr	r0, [r4, #20]
   1b0f8:	mul	r9, r2, r3
   1b0fc:	add	r3, r0, r9
   1b100:	cmp	r1, r3
   1b104:	bcs	1b11c <flatcc_json_printer_uint8_enum_struct_field@@Base+0x1dc>
   1b108:	mov	r1, r9
   1b10c:	mov	r0, r4
   1b110:	bl	14724 <test_print@@Base+0xea0>
   1b114:	ldr	r2, [r4, #20]
   1b118:	b	1afb0 <flatcc_json_printer_uint8_enum_struct_field@@Base+0x70>
   1b11c:	mov	r2, r9
   1b120:	mov	r1, #32
   1b124:	bl	124c4 <memset@plt>
   1b128:	ldr	r2, [r4, #20]
   1b12c:	add	r2, r2, r9
   1b130:	str	r2, [r4, #20]
   1b134:	b	1afb0 <flatcc_json_printer_uint8_enum_struct_field@@Base+0x70>
   1b138:	movw	r2, #34079	; 0x851f
   1b13c:	movt	r2, #20971	; 0x51eb
   1b140:	mov	r6, #100	; 0x64
   1b144:	mov	ip, #0
   1b148:	umull	lr, r2, r2, r5
   1b14c:	movw	lr, #10976	; 0x2ae0
   1b150:	movt	lr, #2
   1b154:	strb	ip, [r1, #3]
   1b158:	mov	ip, #3
   1b15c:	lsr	r2, r2, #5
   1b160:	mls	r5, r6, r2, r5
   1b164:	add	r2, r2, #48	; 0x30
   1b168:	uxtb	r5, r5
   1b16c:	ldrb	r6, [lr, r5, lsl #1]
   1b170:	add	lr, lr, r5, lsl #1
   1b174:	strb	r6, [r1, #1]
   1b178:	ldrb	lr, [lr, #1]
   1b17c:	strb	lr, [r1, #2]
   1b180:	strb	r2, [r0, r3]
   1b184:	b	1b0b4 <flatcc_json_printer_uint8_enum_struct_field@@Base+0x174>
   1b188:	mov	ip, #0
   1b18c:	sxth	r5, r5
   1b190:	movw	r2, #10976	; 0x2ae0
   1b194:	movt	r2, #2
   1b198:	add	lr, r2, r5, lsl #1
   1b19c:	strb	ip, [r1, #2]
   1b1a0:	mov	ip, #2
   1b1a4:	ldrb	r2, [r2, r5, lsl #1]
   1b1a8:	strb	r2, [r0, r3]
   1b1ac:	ldrb	r3, [lr, #1]
   1b1b0:	strb	r3, [r1, #1]
   1b1b4:	b	1b0b4 <flatcc_json_printer_uint8_enum_struct_field@@Base+0x174>

0001b1b8 <flatcc_json_printer_uint16_enum_struct_field@@Base>:
   1b1b8:	cmp	r1, #0
   1b1bc:	strd	r4, [sp, #-32]!	; 0xffffffe0
   1b1c0:	mov	r4, r0
   1b1c4:	ldrh	r5, [r2, r3]
   1b1c8:	ldr	r2, [r0, #20]
   1b1cc:	strd	r6, [sp, #8]
   1b1d0:	strd	r8, [sp, #16]
   1b1d4:	str	sl, [sp, #24]
   1b1d8:	str	lr, [sp, #28]
   1b1dc:	ldr	r8, [sp, #32]
   1b1e0:	ldr	r7, [sp, #36]	; 0x24
   1b1e4:	ldr	r6, [sp, #40]	; 0x28
   1b1e8:	beq	1b200 <flatcc_json_printer_uint16_enum_struct_field@@Base+0x48>
   1b1ec:	add	r1, r2, #1
   1b1f0:	mov	r3, #44	; 0x2c
   1b1f4:	str	r1, [r0, #20]
   1b1f8:	strb	r3, [r2]
   1b1fc:	ldr	r2, [r0, #20]
   1b200:	ldrb	r1, [r4, #25]
   1b204:	cmp	r1, #0
   1b208:	bne	1b330 <flatcc_json_printer_uint16_enum_struct_field@@Base+0x178>
   1b20c:	ldr	r3, [r4, #16]
   1b210:	cmp	r3, r2
   1b214:	bhi	1b228 <flatcc_json_printer_uint16_enum_struct_field@@Base+0x70>
   1b218:	mov	r0, r4
   1b21c:	ldr	r3, [r4, #44]	; 0x2c
   1b220:	blx	r3
   1b224:	ldr	r2, [r4, #20]
   1b228:	mov	r3, #34	; 0x22
   1b22c:	strb	r3, [r2]
   1b230:	ldrb	r3, [r4, #26]
   1b234:	ldr	r2, [r4, #16]
   1b238:	ldr	r0, [r4, #20]
   1b23c:	cmp	r3, #0
   1b240:	addeq	r0, r0, #1
   1b244:	add	r3, r0, r7
   1b248:	cmp	r2, r3
   1b24c:	str	r0, [r4, #20]
   1b250:	bhi	1b2e8 <flatcc_json_printer_uint16_enum_struct_field@@Base+0x130>
   1b254:	mov	r2, r7
   1b258:	mov	r1, r8
   1b25c:	mov	r0, r4
   1b260:	bl	14660 <test_print@@Base+0xddc>
   1b264:	ldr	r2, [r4, #20]
   1b268:	mov	r3, #34	; 0x22
   1b26c:	mov	ip, #58	; 0x3a
   1b270:	mov	r0, #32
   1b274:	strb	r3, [r2]
   1b278:	ldrb	r3, [r4, #26]
   1b27c:	ldr	r1, [r4, #20]
   1b280:	clz	r3, r3
   1b284:	lsr	r3, r3, #5
   1b288:	add	r2, r1, r3
   1b28c:	add	r2, r2, #1
   1b290:	str	r2, [r4, #20]
   1b294:	strb	ip, [r1, r3]
   1b298:	ldr	r3, [r4, #20]
   1b29c:	strb	r0, [r3]
   1b2a0:	ldrb	r2, [r4, #25]
   1b2a4:	ldr	r1, [r4, #20]
   1b2a8:	ldrb	r3, [r4, #27]
   1b2ac:	cmp	r2, #0
   1b2b0:	addne	r1, r1, #1
   1b2b4:	cmp	r3, #0
   1b2b8:	str	r1, [r4, #20]
   1b2bc:	bne	1b304 <flatcc_json_printer_uint16_enum_struct_field@@Base+0x14c>
   1b2c0:	mov	r1, r5
   1b2c4:	mov	r0, r4
   1b2c8:	ldrd	r4, [sp]
   1b2cc:	mov	r3, r6
   1b2d0:	ldrd	r6, [sp, #8]
   1b2d4:	ldrd	r8, [sp, #16]
   1b2d8:	ldr	sl, [sp, #24]
   1b2dc:	ldr	lr, [sp, #28]
   1b2e0:	add	sp, sp, #32
   1b2e4:	bx	r3
   1b2e8:	mov	r2, r7
   1b2ec:	mov	r1, r8
   1b2f0:	bl	12428 <memcpy@plt>
   1b2f4:	ldr	r2, [r4, #20]
   1b2f8:	add	r2, r2, r7
   1b2fc:	str	r2, [r4, #20]
   1b300:	b	1b268 <flatcc_json_printer_uint16_enum_struct_field@@Base+0xb0>
   1b304:	mov	r0, r5
   1b308:	bl	13b40 <test_print@@Base+0x2bc>
   1b30c:	ldr	r3, [r4, #20]
   1b310:	ldrd	r6, [sp, #8]
   1b314:	ldrd	r8, [sp, #16]
   1b318:	add	r0, r3, r0
   1b31c:	ldr	sl, [sp, #24]
   1b320:	str	r0, [r4, #20]
   1b324:	ldrd	r4, [sp]
   1b328:	add	sp, sp, #28
   1b32c:	pop	{pc}		; (ldr pc, [sp], #4)
   1b330:	add	r1, r2, #1
   1b334:	mov	r3, #10
   1b338:	str	r1, [r4, #20]
   1b33c:	strb	r3, [r2]
   1b340:	ldrb	r3, [r4, #25]
   1b344:	ldr	r1, [r4, #16]
   1b348:	ldr	r2, [r4, #32]
   1b34c:	ldr	r0, [r4, #20]
   1b350:	mul	r9, r2, r3
   1b354:	add	r3, r0, r9
   1b358:	cmp	r1, r3
   1b35c:	bcs	1b374 <flatcc_json_printer_uint16_enum_struct_field@@Base+0x1bc>
   1b360:	mov	r1, r9
   1b364:	mov	r0, r4
   1b368:	bl	14724 <test_print@@Base+0xea0>
   1b36c:	ldr	r2, [r4, #20]
   1b370:	b	1b228 <flatcc_json_printer_uint16_enum_struct_field@@Base+0x70>
   1b374:	mov	r2, r9
   1b378:	mov	r1, #32
   1b37c:	bl	124c4 <memset@plt>
   1b380:	ldr	r2, [r4, #20]
   1b384:	add	r2, r2, r9
   1b388:	str	r2, [r4, #20]
   1b38c:	b	1b228 <flatcc_json_printer_uint16_enum_struct_field@@Base+0x70>

0001b390 <flatcc_json_printer_uint32_enum_struct_field@@Base>:
   1b390:	cmp	r1, #0
   1b394:	strd	r4, [sp, #-32]!	; 0xffffffe0
   1b398:	mov	r4, r0
   1b39c:	ldr	r5, [r2, r3]
   1b3a0:	ldr	r2, [r0, #20]
   1b3a4:	strd	r6, [sp, #8]
   1b3a8:	strd	r8, [sp, #16]
   1b3ac:	str	sl, [sp, #24]
   1b3b0:	str	lr, [sp, #28]
   1b3b4:	ldr	r8, [sp, #32]
   1b3b8:	ldr	r7, [sp, #36]	; 0x24
   1b3bc:	ldr	r6, [sp, #40]	; 0x28
   1b3c0:	beq	1b3d8 <flatcc_json_printer_uint32_enum_struct_field@@Base+0x48>
   1b3c4:	add	r1, r2, #1
   1b3c8:	mov	r3, #44	; 0x2c
   1b3cc:	str	r1, [r0, #20]
   1b3d0:	strb	r3, [r2]
   1b3d4:	ldr	r2, [r0, #20]
   1b3d8:	ldrb	r1, [r4, #25]
   1b3dc:	cmp	r1, #0
   1b3e0:	bne	1b508 <flatcc_json_printer_uint32_enum_struct_field@@Base+0x178>
   1b3e4:	ldr	r3, [r4, #16]
   1b3e8:	cmp	r3, r2
   1b3ec:	bhi	1b400 <flatcc_json_printer_uint32_enum_struct_field@@Base+0x70>
   1b3f0:	mov	r0, r4
   1b3f4:	ldr	r3, [r4, #44]	; 0x2c
   1b3f8:	blx	r3
   1b3fc:	ldr	r2, [r4, #20]
   1b400:	mov	r3, #34	; 0x22
   1b404:	strb	r3, [r2]
   1b408:	ldrb	r3, [r4, #26]
   1b40c:	ldr	r2, [r4, #16]
   1b410:	ldr	r0, [r4, #20]
   1b414:	cmp	r3, #0
   1b418:	addeq	r0, r0, #1
   1b41c:	add	r3, r0, r7
   1b420:	cmp	r2, r3
   1b424:	str	r0, [r4, #20]
   1b428:	bhi	1b4c0 <flatcc_json_printer_uint32_enum_struct_field@@Base+0x130>
   1b42c:	mov	r2, r7
   1b430:	mov	r1, r8
   1b434:	mov	r0, r4
   1b438:	bl	14660 <test_print@@Base+0xddc>
   1b43c:	ldr	r2, [r4, #20]
   1b440:	mov	r3, #34	; 0x22
   1b444:	mov	ip, #58	; 0x3a
   1b448:	mov	r0, #32
   1b44c:	strb	r3, [r2]
   1b450:	ldrb	r3, [r4, #26]
   1b454:	ldr	r1, [r4, #20]
   1b458:	clz	r3, r3
   1b45c:	lsr	r3, r3, #5
   1b460:	add	r2, r1, r3
   1b464:	add	r2, r2, #1
   1b468:	str	r2, [r4, #20]
   1b46c:	strb	ip, [r1, r3]
   1b470:	ldr	r3, [r4, #20]
   1b474:	strb	r0, [r3]
   1b478:	ldrb	r2, [r4, #25]
   1b47c:	ldr	r1, [r4, #20]
   1b480:	ldrb	r3, [r4, #27]
   1b484:	cmp	r2, #0
   1b488:	addne	r1, r1, #1
   1b48c:	cmp	r3, #0
   1b490:	str	r1, [r4, #20]
   1b494:	bne	1b4dc <flatcc_json_printer_uint32_enum_struct_field@@Base+0x14c>
   1b498:	mov	r1, r5
   1b49c:	mov	r0, r4
   1b4a0:	ldrd	r4, [sp]
   1b4a4:	mov	r3, r6
   1b4a8:	ldrd	r6, [sp, #8]
   1b4ac:	ldrd	r8, [sp, #16]
   1b4b0:	ldr	sl, [sp, #24]
   1b4b4:	ldr	lr, [sp, #28]
   1b4b8:	add	sp, sp, #32
   1b4bc:	bx	r3
   1b4c0:	mov	r2, r7
   1b4c4:	mov	r1, r8
   1b4c8:	bl	12428 <memcpy@plt>
   1b4cc:	ldr	r2, [r4, #20]
   1b4d0:	add	r2, r2, r7
   1b4d4:	str	r2, [r4, #20]
   1b4d8:	b	1b440 <flatcc_json_printer_uint32_enum_struct_field@@Base+0xb0>
   1b4dc:	mov	r0, r5
   1b4e0:	bl	13c98 <test_print@@Base+0x414>
   1b4e4:	ldr	r3, [r4, #20]
   1b4e8:	ldrd	r6, [sp, #8]
   1b4ec:	ldrd	r8, [sp, #16]
   1b4f0:	add	r0, r3, r0
   1b4f4:	ldr	sl, [sp, #24]
   1b4f8:	str	r0, [r4, #20]
   1b4fc:	ldrd	r4, [sp]
   1b500:	add	sp, sp, #28
   1b504:	pop	{pc}		; (ldr pc, [sp], #4)
   1b508:	add	r1, r2, #1
   1b50c:	mov	r3, #10
   1b510:	str	r1, [r4, #20]
   1b514:	strb	r3, [r2]
   1b518:	ldrb	r3, [r4, #25]
   1b51c:	ldr	r1, [r4, #16]
   1b520:	ldr	r2, [r4, #32]
   1b524:	ldr	r0, [r4, #20]
   1b528:	mul	r9, r2, r3
   1b52c:	add	r3, r0, r9
   1b530:	cmp	r1, r3
   1b534:	bcs	1b54c <flatcc_json_printer_uint32_enum_struct_field@@Base+0x1bc>
   1b538:	mov	r1, r9
   1b53c:	mov	r0, r4
   1b540:	bl	14724 <test_print@@Base+0xea0>
   1b544:	ldr	r2, [r4, #20]
   1b548:	b	1b400 <flatcc_json_printer_uint32_enum_struct_field@@Base+0x70>
   1b54c:	mov	r2, r9
   1b550:	mov	r1, #32
   1b554:	bl	124c4 <memset@plt>
   1b558:	ldr	r2, [r4, #20]
   1b55c:	add	r2, r2, r9
   1b560:	str	r2, [r4, #20]
   1b564:	b	1b400 <flatcc_json_printer_uint32_enum_struct_field@@Base+0x70>

0001b568 <flatcc_json_printer_uint64_enum_struct_field@@Base>:
   1b568:	cmp	r1, #0
   1b56c:	strd	r4, [sp, #-32]!	; 0xffffffe0
   1b570:	mov	r4, r0
   1b574:	strd	r6, [sp, #8]
   1b578:	strd	r8, [sp, #16]
   1b57c:	str	sl, [sp, #24]
   1b580:	str	lr, [sp, #28]
   1b584:	ldrd	r6, [r2, r3]
   1b588:	ldr	r2, [r0, #20]
   1b58c:	ldr	r9, [sp, #32]
   1b590:	ldr	r8, [sp, #36]	; 0x24
   1b594:	ldr	r5, [sp, #40]	; 0x28
   1b598:	beq	1b5b0 <flatcc_json_printer_uint64_enum_struct_field@@Base+0x48>
   1b59c:	add	r1, r2, #1
   1b5a0:	mov	r3, #44	; 0x2c
   1b5a4:	str	r1, [r0, #20]
   1b5a8:	strb	r3, [r2]
   1b5ac:	ldr	r2, [r0, #20]
   1b5b0:	ldrb	r1, [r4, #25]
   1b5b4:	cmp	r1, #0
   1b5b8:	bne	1b6e8 <flatcc_json_printer_uint64_enum_struct_field@@Base+0x180>
   1b5bc:	ldr	r3, [r4, #16]
   1b5c0:	cmp	r3, r2
   1b5c4:	bhi	1b5d8 <flatcc_json_printer_uint64_enum_struct_field@@Base+0x70>
   1b5c8:	mov	r0, r4
   1b5cc:	ldr	r3, [r4, #44]	; 0x2c
   1b5d0:	blx	r3
   1b5d4:	ldr	r2, [r4, #20]
   1b5d8:	mov	r3, #34	; 0x22
   1b5dc:	strb	r3, [r2]
   1b5e0:	ldrb	r3, [r4, #26]
   1b5e4:	ldr	r2, [r4, #16]
   1b5e8:	ldr	r0, [r4, #20]
   1b5ec:	cmp	r3, #0
   1b5f0:	addeq	r0, r0, #1
   1b5f4:	add	r3, r0, r8
   1b5f8:	cmp	r2, r3
   1b5fc:	str	r0, [r4, #20]
   1b600:	bhi	1b69c <flatcc_json_printer_uint64_enum_struct_field@@Base+0x134>
   1b604:	mov	r2, r8
   1b608:	mov	r1, r9
   1b60c:	mov	r0, r4
   1b610:	bl	14660 <test_print@@Base+0xddc>
   1b614:	ldr	r8, [r4, #20]
   1b618:	mov	r3, #34	; 0x22
   1b61c:	mov	ip, #58	; 0x3a
   1b620:	mov	r0, #32
   1b624:	strb	r3, [r8]
   1b628:	ldrb	r3, [r4, #26]
   1b62c:	ldr	r1, [r4, #20]
   1b630:	clz	r3, r3
   1b634:	lsr	r3, r3, #5
   1b638:	add	r2, r1, r3
   1b63c:	add	r2, r2, #1
   1b640:	str	r2, [r4, #20]
   1b644:	strb	ip, [r1, r3]
   1b648:	ldr	r3, [r4, #20]
   1b64c:	strb	r0, [r3]
   1b650:	ldrb	r1, [r4, #25]
   1b654:	ldr	r2, [r4, #20]
   1b658:	ldrb	r3, [r4, #27]
   1b65c:	cmp	r1, #0
   1b660:	addne	r2, r2, #1
   1b664:	cmp	r3, #0
   1b668:	str	r2, [r4, #20]
   1b66c:	bne	1b6b8 <flatcc_json_printer_uint64_enum_struct_field@@Base+0x150>
   1b670:	mov	r2, r6
   1b674:	mov	r3, r7
   1b678:	ldrd	r6, [sp, #8]
   1b67c:	mov	r0, r4
   1b680:	mov	r1, r5
   1b684:	ldrd	r4, [sp]
   1b688:	ldrd	r8, [sp, #16]
   1b68c:	ldr	sl, [sp, #24]
   1b690:	ldr	lr, [sp, #28]
   1b694:	add	sp, sp, #32
   1b698:	bx	r1
   1b69c:	mov	r2, r8
   1b6a0:	mov	r1, r9
   1b6a4:	bl	12428 <memcpy@plt>
   1b6a8:	ldr	r3, [r4, #20]
   1b6ac:	add	r8, r3, r8
   1b6b0:	str	r8, [r4, #20]
   1b6b4:	b	1b618 <flatcc_json_printer_uint64_enum_struct_field@@Base+0xb0>
   1b6b8:	mov	r0, r6
   1b6bc:	mov	r1, r7
   1b6c0:	bl	13fac <test_print@@Base+0x728>
   1b6c4:	ldr	r3, [r4, #20]
   1b6c8:	ldrd	r6, [sp, #8]
   1b6cc:	ldrd	r8, [sp, #16]
   1b6d0:	add	r0, r3, r0
   1b6d4:	ldr	sl, [sp, #24]
   1b6d8:	str	r0, [r4, #20]
   1b6dc:	ldrd	r4, [sp]
   1b6e0:	add	sp, sp, #28
   1b6e4:	pop	{pc}		; (ldr pc, [sp], #4)
   1b6e8:	add	r1, r2, #1
   1b6ec:	mov	r3, #10
   1b6f0:	str	r1, [r4, #20]
   1b6f4:	strb	r3, [r2]
   1b6f8:	ldrb	r3, [r4, #25]
   1b6fc:	ldr	r1, [r4, #16]
   1b700:	ldr	r2, [r4, #32]
   1b704:	ldr	r0, [r4, #20]
   1b708:	mul	sl, r2, r3
   1b70c:	add	r3, r0, sl
   1b710:	cmp	r1, r3
   1b714:	bcs	1b72c <flatcc_json_printer_uint64_enum_struct_field@@Base+0x1c4>
   1b718:	mov	r1, sl
   1b71c:	mov	r0, r4
   1b720:	bl	14724 <test_print@@Base+0xea0>
   1b724:	ldr	r2, [r4, #20]
   1b728:	b	1b5d8 <flatcc_json_printer_uint64_enum_struct_field@@Base+0x70>
   1b72c:	mov	r2, sl
   1b730:	mov	r1, #32
   1b734:	bl	124c4 <memset@plt>
   1b738:	ldr	r2, [r4, #20]
   1b73c:	add	r2, r2, sl
   1b740:	str	r2, [r4, #20]
   1b744:	b	1b5d8 <flatcc_json_printer_uint64_enum_struct_field@@Base+0x70>

0001b748 <flatcc_json_printer_int8_enum_struct_field@@Base>:
   1b748:	cmp	r1, #0
   1b74c:	strd	r4, [sp, #-32]!	; 0xffffffe0
   1b750:	mov	r4, r0
   1b754:	strd	r6, [sp, #8]
   1b758:	strd	r8, [sp, #16]
   1b75c:	str	sl, [sp, #24]
   1b760:	str	lr, [sp, #28]
   1b764:	ldrsb	r5, [r2, r3]
   1b768:	ldr	r2, [r0, #20]
   1b76c:	ldr	r8, [sp, #32]
   1b770:	ldr	r7, [sp, #36]	; 0x24
   1b774:	ldr	r6, [sp, #40]	; 0x28
   1b778:	beq	1b790 <flatcc_json_printer_int8_enum_struct_field@@Base+0x48>
   1b77c:	add	r1, r2, #1
   1b780:	mov	r3, #44	; 0x2c
   1b784:	str	r1, [r0, #20]
   1b788:	strb	r3, [r2]
   1b78c:	ldr	r2, [r0, #20]
   1b790:	ldrb	r1, [r4, #25]
   1b794:	cmp	r1, #0
   1b798:	bne	1b908 <flatcc_json_printer_int8_enum_struct_field@@Base+0x1c0>
   1b79c:	ldr	r3, [r4, #16]
   1b7a0:	cmp	r3, r2
   1b7a4:	bhi	1b7b8 <flatcc_json_printer_int8_enum_struct_field@@Base+0x70>
   1b7a8:	mov	r0, r4
   1b7ac:	ldr	r3, [r4, #44]	; 0x2c
   1b7b0:	blx	r3
   1b7b4:	ldr	r2, [r4, #20]
   1b7b8:	mov	r3, #34	; 0x22
   1b7bc:	strb	r3, [r2]
   1b7c0:	ldrb	r3, [r4, #26]
   1b7c4:	ldr	r2, [r4, #16]
   1b7c8:	ldr	r0, [r4, #20]
   1b7cc:	cmp	r3, #0
   1b7d0:	addeq	r0, r0, #1
   1b7d4:	add	r3, r0, r7
   1b7d8:	cmp	r2, r3
   1b7dc:	str	r0, [r4, #20]
   1b7e0:	bhi	1b8c4 <flatcc_json_printer_int8_enum_struct_field@@Base+0x17c>
   1b7e4:	mov	r2, r7
   1b7e8:	mov	r1, r8
   1b7ec:	mov	r0, r4
   1b7f0:	bl	14660 <test_print@@Base+0xddc>
   1b7f4:	ldr	r2, [r4, #20]
   1b7f8:	mov	r3, #34	; 0x22
   1b7fc:	mov	ip, #58	; 0x3a
   1b800:	mov	r0, #32
   1b804:	strb	r3, [r2]
   1b808:	ldrb	r3, [r4, #26]
   1b80c:	ldr	r1, [r4, #20]
   1b810:	clz	r3, r3
   1b814:	lsr	r3, r3, #5
   1b818:	add	r2, r1, r3
   1b81c:	add	r2, r2, #1
   1b820:	str	r2, [r4, #20]
   1b824:	strb	ip, [r1, r3]
   1b828:	ldr	r3, [r4, #20]
   1b82c:	strb	r0, [r3]
   1b830:	ldrb	r3, [r4, #25]
   1b834:	ldr	r1, [r4, #20]
   1b838:	ldrb	r0, [r4, #27]
   1b83c:	adds	r3, r3, #0
   1b840:	movne	r3, #1
   1b844:	add	r2, r1, r3
   1b848:	cmp	r0, #0
   1b84c:	str	r2, [r4, #20]
   1b850:	beq	1b8e0 <flatcc_json_printer_int8_enum_struct_field@@Base+0x198>
   1b854:	cmp	r5, #0
   1b858:	lsr	r0, r5, #31
   1b85c:	uxtb	r5, r5
   1b860:	bge	1b878 <flatcc_json_printer_int8_enum_struct_field@@Base+0x130>
   1b864:	rsb	r5, r5, #0
   1b868:	mov	ip, #45	; 0x2d
   1b86c:	add	r2, r2, #1
   1b870:	uxtb	r5, r5
   1b874:	strb	ip, [r1, r3]
   1b878:	cmp	r5, #99	; 0x63
   1b87c:	bhi	1b968 <flatcc_json_printer_int8_enum_struct_field@@Base+0x220>
   1b880:	cmp	r5, #9
   1b884:	bhi	1b9b8 <flatcc_json_printer_int8_enum_struct_field@@Base+0x270>
   1b888:	add	r5, r5, #48	; 0x30
   1b88c:	mov	r1, #0
   1b890:	mov	lr, #1
   1b894:	strb	r5, [r2]
   1b898:	strb	r1, [r2, #1]
   1b89c:	ldr	r3, [r4, #20]
   1b8a0:	add	r2, r0, lr
   1b8a4:	ldrd	r6, [sp, #8]
   1b8a8:	ldrd	r8, [sp, #16]
   1b8ac:	add	r3, r3, r2
   1b8b0:	ldr	sl, [sp, #24]
   1b8b4:	str	r3, [r4, #20]
   1b8b8:	ldrd	r4, [sp]
   1b8bc:	add	sp, sp, #28
   1b8c0:	pop	{pc}		; (ldr pc, [sp], #4)
   1b8c4:	mov	r2, r7
   1b8c8:	mov	r1, r8
   1b8cc:	bl	12428 <memcpy@plt>
   1b8d0:	ldr	r2, [r4, #20]
   1b8d4:	add	r2, r2, r7
   1b8d8:	str	r2, [r4, #20]
   1b8dc:	b	1b7f8 <flatcc_json_printer_int8_enum_struct_field@@Base+0xb0>
   1b8e0:	mov	r1, r5
   1b8e4:	mov	r0, r4
   1b8e8:	ldrd	r4, [sp]
   1b8ec:	mov	r3, r6
   1b8f0:	ldrd	r6, [sp, #8]
   1b8f4:	ldrd	r8, [sp, #16]
   1b8f8:	ldr	sl, [sp, #24]
   1b8fc:	ldr	lr, [sp, #28]
   1b900:	add	sp, sp, #32
   1b904:	bx	r3
   1b908:	add	r1, r2, #1
   1b90c:	mov	r3, #10
   1b910:	str	r1, [r4, #20]
   1b914:	strb	r3, [r2]
   1b918:	ldrb	r3, [r4, #25]
   1b91c:	ldr	r1, [r4, #16]
   1b920:	ldr	r2, [r4, #32]
   1b924:	ldr	r0, [r4, #20]
   1b928:	mul	r9, r2, r3
   1b92c:	add	r3, r0, r9
   1b930:	cmp	r1, r3
   1b934:	bcs	1b94c <flatcc_json_printer_int8_enum_struct_field@@Base+0x204>
   1b938:	mov	r1, r9
   1b93c:	mov	r0, r4
   1b940:	bl	14724 <test_print@@Base+0xea0>
   1b944:	ldr	r2, [r4, #20]
   1b948:	b	1b7b8 <flatcc_json_printer_int8_enum_struct_field@@Base+0x70>
   1b94c:	mov	r2, r9
   1b950:	mov	r1, #32
   1b954:	bl	124c4 <memset@plt>
   1b958:	ldr	r2, [r4, #20]
   1b95c:	add	r2, r2, r9
   1b960:	str	r2, [r4, #20]
   1b964:	b	1b7b8 <flatcc_json_printer_int8_enum_struct_field@@Base+0x70>
   1b968:	movw	r3, #34079	; 0x851f
   1b96c:	movt	r3, #20971	; 0x51eb
   1b970:	mov	r1, #0
   1b974:	mov	r7, #100	; 0x64
   1b978:	umull	ip, r3, r3, r5
   1b97c:	movw	ip, #10976	; 0x2ae0
   1b980:	movt	ip, #2
   1b984:	strb	r1, [r2, #3]
   1b988:	mov	r6, #49	; 0x31
   1b98c:	mov	lr, #3
   1b990:	lsr	r1, r3, #5
   1b994:	mls	r5, r7, r1, r5
   1b998:	uxtb	r5, r5
   1b99c:	ldrb	r3, [ip, r5, lsl #1]
   1b9a0:	add	r5, ip, r5, lsl #1
   1b9a4:	strb	r3, [r2, #1]
   1b9a8:	ldrb	r3, [r5, #1]
   1b9ac:	strb	r6, [r2]
   1b9b0:	strb	r3, [r2, #2]
   1b9b4:	b	1b89c <flatcc_json_printer_int8_enum_struct_field@@Base+0x154>
   1b9b8:	mov	r3, #0
   1b9bc:	sxth	r5, r5
   1b9c0:	movw	r1, #10976	; 0x2ae0
   1b9c4:	movt	r1, #2
   1b9c8:	strb	r3, [r2, #2]
   1b9cc:	add	r3, r1, r5, lsl #1
   1b9d0:	mov	lr, #2
   1b9d4:	ldrb	r1, [r1, r5, lsl #1]
   1b9d8:	strb	r1, [r2]
   1b9dc:	ldrb	r3, [r3, #1]
   1b9e0:	strb	r3, [r2, #1]
   1b9e4:	b	1b89c <flatcc_json_printer_int8_enum_struct_field@@Base+0x154>

0001b9e8 <flatcc_json_printer_int16_enum_struct_field@@Base>:
   1b9e8:	cmp	r1, #0
   1b9ec:	strd	r4, [sp, #-32]!	; 0xffffffe0
   1b9f0:	mov	r4, r0
   1b9f4:	ldrsh	r5, [r2, r3]
   1b9f8:	ldr	r2, [r0, #20]
   1b9fc:	strd	r6, [sp, #8]
   1ba00:	strd	r8, [sp, #16]
   1ba04:	str	sl, [sp, #24]
   1ba08:	str	lr, [sp, #28]
   1ba0c:	ldr	r8, [sp, #32]
   1ba10:	ldr	r7, [sp, #36]	; 0x24
   1ba14:	ldr	r6, [sp, #40]	; 0x28
   1ba18:	beq	1ba30 <flatcc_json_printer_int16_enum_struct_field@@Base+0x48>
   1ba1c:	add	r1, r2, #1
   1ba20:	mov	r3, #44	; 0x2c
   1ba24:	str	r1, [r0, #20]
   1ba28:	strb	r3, [r2]
   1ba2c:	ldr	r2, [r0, #20]
   1ba30:	ldrb	r1, [r4, #25]
   1ba34:	cmp	r1, #0
   1ba38:	bne	1bb88 <flatcc_json_printer_int16_enum_struct_field@@Base+0x1a0>
   1ba3c:	ldr	r3, [r4, #16]
   1ba40:	cmp	r3, r2
   1ba44:	bhi	1ba58 <flatcc_json_printer_int16_enum_struct_field@@Base+0x70>
   1ba48:	mov	r0, r4
   1ba4c:	ldr	r3, [r4, #44]	; 0x2c
   1ba50:	blx	r3
   1ba54:	ldr	r2, [r4, #20]
   1ba58:	mov	r3, #34	; 0x22
   1ba5c:	strb	r3, [r2]
   1ba60:	ldrb	r3, [r4, #26]
   1ba64:	ldr	r2, [r4, #16]
   1ba68:	ldr	r0, [r4, #20]
   1ba6c:	cmp	r3, #0
   1ba70:	addeq	r0, r0, #1
   1ba74:	add	r3, r0, r7
   1ba78:	cmp	r2, r3
   1ba7c:	str	r0, [r4, #20]
   1ba80:	bhi	1bb44 <flatcc_json_printer_int16_enum_struct_field@@Base+0x15c>
   1ba84:	mov	r2, r7
   1ba88:	mov	r1, r8
   1ba8c:	mov	r0, r4
   1ba90:	bl	14660 <test_print@@Base+0xddc>
   1ba94:	ldr	r2, [r4, #20]
   1ba98:	mov	r3, #34	; 0x22
   1ba9c:	mov	ip, #58	; 0x3a
   1baa0:	mov	r0, #32
   1baa4:	strb	r3, [r2]
   1baa8:	ldrb	r3, [r4, #26]
   1baac:	ldr	r1, [r4, #20]
   1bab0:	clz	r3, r3
   1bab4:	lsr	r3, r3, #5
   1bab8:	add	r2, r1, r3
   1babc:	add	r2, r2, #1
   1bac0:	str	r2, [r4, #20]
   1bac4:	strb	ip, [r1, r3]
   1bac8:	ldr	r3, [r4, #20]
   1bacc:	strb	r0, [r3]
   1bad0:	ldrb	r3, [r4, #25]
   1bad4:	ldr	r2, [r4, #20]
   1bad8:	ldrb	r0, [r4, #27]
   1badc:	adds	r3, r3, #0
   1bae0:	movne	r3, #1
   1bae4:	add	r1, r2, r3
   1bae8:	cmp	r0, #0
   1baec:	str	r1, [r4, #20]
   1baf0:	beq	1bb60 <flatcc_json_printer_int16_enum_struct_field@@Base+0x178>
   1baf4:	cmp	r5, #0
   1baf8:	lsr	r6, r5, #31
   1bafc:	uxth	r0, r5
   1bb00:	bge	1bb18 <flatcc_json_printer_int16_enum_struct_field@@Base+0x130>
   1bb04:	rsb	r0, r0, #0
   1bb08:	mov	ip, #45	; 0x2d
   1bb0c:	add	r1, r1, #1
   1bb10:	uxth	r0, r0
   1bb14:	strb	ip, [r2, r3]
   1bb18:	bl	13b40 <test_print@@Base+0x2bc>
   1bb1c:	ldr	r3, [r4, #20]
   1bb20:	add	r0, r6, r0
   1bb24:	ldrd	r6, [sp, #8]
   1bb28:	ldrd	r8, [sp, #16]
   1bb2c:	add	r3, r3, r0
   1bb30:	ldr	sl, [sp, #24]
   1bb34:	str	r3, [r4, #20]
   1bb38:	ldrd	r4, [sp]
   1bb3c:	add	sp, sp, #28
   1bb40:	pop	{pc}		; (ldr pc, [sp], #4)
   1bb44:	mov	r2, r7
   1bb48:	mov	r1, r8
   1bb4c:	bl	12428 <memcpy@plt>
   1bb50:	ldr	r2, [r4, #20]
   1bb54:	add	r2, r2, r7
   1bb58:	str	r2, [r4, #20]
   1bb5c:	b	1ba98 <flatcc_json_printer_int16_enum_struct_field@@Base+0xb0>
   1bb60:	mov	r1, r5
   1bb64:	mov	r0, r4
   1bb68:	ldrd	r4, [sp]
   1bb6c:	mov	r3, r6
   1bb70:	ldrd	r6, [sp, #8]
   1bb74:	ldrd	r8, [sp, #16]
   1bb78:	ldr	sl, [sp, #24]
   1bb7c:	ldr	lr, [sp, #28]
   1bb80:	add	sp, sp, #32
   1bb84:	bx	r3
   1bb88:	add	r1, r2, #1
   1bb8c:	mov	r3, #10
   1bb90:	str	r1, [r4, #20]
   1bb94:	strb	r3, [r2]
   1bb98:	ldrb	r3, [r4, #25]
   1bb9c:	ldr	r1, [r4, #16]
   1bba0:	ldr	r2, [r4, #32]
   1bba4:	ldr	r0, [r4, #20]
   1bba8:	mul	r9, r2, r3
   1bbac:	add	r3, r0, r9
   1bbb0:	cmp	r1, r3
   1bbb4:	bcs	1bbcc <flatcc_json_printer_int16_enum_struct_field@@Base+0x1e4>
   1bbb8:	mov	r1, r9
   1bbbc:	mov	r0, r4
   1bbc0:	bl	14724 <test_print@@Base+0xea0>
   1bbc4:	ldr	r2, [r4, #20]
   1bbc8:	b	1ba58 <flatcc_json_printer_int16_enum_struct_field@@Base+0x70>
   1bbcc:	mov	r2, r9
   1bbd0:	mov	r1, #32
   1bbd4:	bl	124c4 <memset@plt>
   1bbd8:	ldr	r2, [r4, #20]
   1bbdc:	add	r2, r2, r9
   1bbe0:	str	r2, [r4, #20]
   1bbe4:	b	1ba58 <flatcc_json_printer_int16_enum_struct_field@@Base+0x70>

0001bbe8 <flatcc_json_printer_int32_enum_struct_field@@Base>:
   1bbe8:	cmp	r1, #0
   1bbec:	strd	r4, [sp, #-32]!	; 0xffffffe0
   1bbf0:	mov	r4, r0
   1bbf4:	strd	r6, [sp, #8]
   1bbf8:	strd	r8, [sp, #16]
   1bbfc:	str	sl, [sp, #24]
   1bc00:	str	lr, [sp, #28]
   1bc04:	ldr	r6, [r2, r3]
   1bc08:	ldr	r2, [r0, #20]
   1bc0c:	ldr	r8, [sp, #32]
   1bc10:	ldr	r7, [sp, #36]	; 0x24
   1bc14:	ldr	r5, [sp, #40]	; 0x28
   1bc18:	beq	1bc30 <flatcc_json_printer_int32_enum_struct_field@@Base+0x48>
   1bc1c:	add	r1, r2, #1
   1bc20:	mov	r3, #44	; 0x2c
   1bc24:	str	r1, [r0, #20]
   1bc28:	strb	r3, [r2]
   1bc2c:	ldr	r2, [r0, #20]
   1bc30:	ldrb	r1, [r4, #25]
   1bc34:	cmp	r1, #0
   1bc38:	bne	1bd84 <flatcc_json_printer_int32_enum_struct_field@@Base+0x19c>
   1bc3c:	ldr	r3, [r4, #16]
   1bc40:	cmp	r3, r2
   1bc44:	bhi	1bc58 <flatcc_json_printer_int32_enum_struct_field@@Base+0x70>
   1bc48:	mov	r0, r4
   1bc4c:	ldr	r3, [r4, #44]	; 0x2c
   1bc50:	blx	r3
   1bc54:	ldr	r2, [r4, #20]
   1bc58:	mov	r3, #34	; 0x22
   1bc5c:	strb	r3, [r2]
   1bc60:	ldrb	r3, [r4, #26]
   1bc64:	ldr	r2, [r4, #16]
   1bc68:	ldr	r0, [r4, #20]
   1bc6c:	cmp	r3, #0
   1bc70:	addeq	r0, r0, #1
   1bc74:	add	r3, r0, r7
   1bc78:	cmp	r2, r3
   1bc7c:	str	r0, [r4, #20]
   1bc80:	bhi	1bd40 <flatcc_json_printer_int32_enum_struct_field@@Base+0x158>
   1bc84:	mov	r2, r7
   1bc88:	mov	r1, r8
   1bc8c:	mov	r0, r4
   1bc90:	bl	14660 <test_print@@Base+0xddc>
   1bc94:	ldr	r2, [r4, #20]
   1bc98:	mov	r3, #34	; 0x22
   1bc9c:	mov	ip, #58	; 0x3a
   1bca0:	mov	r0, #32
   1bca4:	strb	r3, [r2]
   1bca8:	ldrb	r3, [r4, #26]
   1bcac:	ldr	r1, [r4, #20]
   1bcb0:	clz	r3, r3
   1bcb4:	lsr	r3, r3, #5
   1bcb8:	add	r2, r1, r3
   1bcbc:	add	r2, r2, #1
   1bcc0:	str	r2, [r4, #20]
   1bcc4:	strb	ip, [r1, r3]
   1bcc8:	ldr	r3, [r4, #20]
   1bccc:	strb	r0, [r3]
   1bcd0:	ldrb	r3, [r4, #25]
   1bcd4:	ldr	r2, [r4, #20]
   1bcd8:	ldrb	r0, [r4, #27]
   1bcdc:	adds	r3, r3, #0
   1bce0:	movne	r3, #1
   1bce4:	add	r1, r2, r3
   1bce8:	cmp	r0, #0
   1bcec:	str	r1, [r4, #20]
   1bcf0:	beq	1bd5c <flatcc_json_printer_int32_enum_struct_field@@Base+0x174>
   1bcf4:	cmp	r6, #0
   1bcf8:	lsr	r5, r6, #31
   1bcfc:	bge	1bd10 <flatcc_json_printer_int32_enum_struct_field@@Base+0x128>
   1bd00:	mov	r0, #45	; 0x2d
   1bd04:	rsb	r6, r6, #0
   1bd08:	add	r1, r1, #1
   1bd0c:	strb	r0, [r2, r3]
   1bd10:	mov	r0, r6
   1bd14:	bl	13c98 <test_print@@Base+0x414>
   1bd18:	ldr	r3, [r4, #20]
   1bd1c:	add	r0, r5, r0
   1bd20:	ldrd	r6, [sp, #8]
   1bd24:	ldrd	r8, [sp, #16]
   1bd28:	add	r3, r3, r0
   1bd2c:	ldr	sl, [sp, #24]
   1bd30:	str	r3, [r4, #20]
   1bd34:	ldrd	r4, [sp]
   1bd38:	add	sp, sp, #28
   1bd3c:	pop	{pc}		; (ldr pc, [sp], #4)
   1bd40:	mov	r2, r7
   1bd44:	mov	r1, r8
   1bd48:	bl	12428 <memcpy@plt>
   1bd4c:	ldr	r2, [r4, #20]
   1bd50:	add	r2, r2, r7
   1bd54:	str	r2, [r4, #20]
   1bd58:	b	1bc98 <flatcc_json_printer_int32_enum_struct_field@@Base+0xb0>
   1bd5c:	mov	r1, r6
   1bd60:	mov	r0, r4
   1bd64:	ldrd	r6, [sp, #8]
   1bd68:	mov	r3, r5
   1bd6c:	ldrd	r4, [sp]
   1bd70:	ldrd	r8, [sp, #16]
   1bd74:	ldr	sl, [sp, #24]
   1bd78:	ldr	lr, [sp, #28]
   1bd7c:	add	sp, sp, #32
   1bd80:	bx	r3
   1bd84:	add	r1, r2, #1
   1bd88:	mov	r3, #10
   1bd8c:	str	r1, [r4, #20]
   1bd90:	strb	r3, [r2]
   1bd94:	ldrb	r3, [r4, #25]
   1bd98:	ldr	r1, [r4, #16]
   1bd9c:	ldr	r2, [r4, #32]
   1bda0:	ldr	r0, [r4, #20]
   1bda4:	mul	r9, r2, r3
   1bda8:	add	r3, r0, r9
   1bdac:	cmp	r1, r3
   1bdb0:	bcs	1bdc8 <flatcc_json_printer_int32_enum_struct_field@@Base+0x1e0>
   1bdb4:	mov	r1, r9
   1bdb8:	mov	r0, r4
   1bdbc:	bl	14724 <test_print@@Base+0xea0>
   1bdc0:	ldr	r2, [r4, #20]
   1bdc4:	b	1bc58 <flatcc_json_printer_int32_enum_struct_field@@Base+0x70>
   1bdc8:	mov	r2, r9
   1bdcc:	mov	r1, #32
   1bdd0:	bl	124c4 <memset@plt>
   1bdd4:	ldr	r2, [r4, #20]
   1bdd8:	add	r2, r2, r9
   1bddc:	str	r2, [r4, #20]
   1bde0:	b	1bc58 <flatcc_json_printer_int32_enum_struct_field@@Base+0x70>

0001bde4 <flatcc_json_printer_int64_enum_struct_field@@Base>:
   1bde4:	cmp	r1, #0
   1bde8:	strd	r4, [sp, #-32]!	; 0xffffffe0
   1bdec:	mov	r4, r0
   1bdf0:	strd	r6, [sp, #8]
   1bdf4:	strd	r8, [sp, #16]
   1bdf8:	str	sl, [sp, #24]
   1bdfc:	str	lr, [sp, #28]
   1be00:	ldrd	r6, [r2, r3]
   1be04:	ldr	r2, [r0, #20]
   1be08:	ldr	r9, [sp, #32]
   1be0c:	ldr	r8, [sp, #36]	; 0x24
   1be10:	ldr	r5, [sp, #40]	; 0x28
   1be14:	beq	1be2c <flatcc_json_printer_int64_enum_struct_field@@Base+0x48>
   1be18:	add	r1, r2, #1
   1be1c:	mov	r3, #44	; 0x2c
   1be20:	str	r1, [r0, #20]
   1be24:	strb	r3, [r2]
   1be28:	ldr	r2, [r0, #20]
   1be2c:	ldrb	r1, [r4, #25]
   1be30:	cmp	r1, #0
   1be34:	bne	1bf90 <flatcc_json_printer_int64_enum_struct_field@@Base+0x1ac>
   1be38:	ldr	r3, [r4, #16]
   1be3c:	cmp	r3, r2
   1be40:	bhi	1be54 <flatcc_json_printer_int64_enum_struct_field@@Base+0x70>
   1be44:	mov	r0, r4
   1be48:	ldr	r3, [r4, #44]	; 0x2c
   1be4c:	blx	r3
   1be50:	ldr	r2, [r4, #20]
   1be54:	mov	r3, #34	; 0x22
   1be58:	strb	r3, [r2]
   1be5c:	ldrb	r3, [r4, #26]
   1be60:	ldr	r2, [r4, #16]
   1be64:	ldr	r0, [r4, #20]
   1be68:	cmp	r3, #0
   1be6c:	addeq	r0, r0, #1
   1be70:	add	r3, r0, r8
   1be74:	cmp	r2, r3
   1be78:	str	r0, [r4, #20]
   1be7c:	bhi	1bf48 <flatcc_json_printer_int64_enum_struct_field@@Base+0x164>
   1be80:	mov	r2, r8
   1be84:	mov	r1, r9
   1be88:	mov	r0, r4
   1be8c:	bl	14660 <test_print@@Base+0xddc>
   1be90:	ldr	r8, [r4, #20]
   1be94:	mov	r3, #34	; 0x22
   1be98:	mov	ip, #58	; 0x3a
   1be9c:	mov	r0, #32
   1bea0:	strb	r3, [r8]
   1bea4:	ldrb	r3, [r4, #26]
   1bea8:	ldr	r1, [r4, #20]
   1beac:	clz	r3, r3
   1beb0:	lsr	r3, r3, #5
   1beb4:	add	r2, r1, r3
   1beb8:	add	r2, r2, #1
   1bebc:	str	r2, [r4, #20]
   1bec0:	strb	ip, [r1, r3]
   1bec4:	ldr	r3, [r4, #20]
   1bec8:	strb	r0, [r3]
   1becc:	ldrb	r3, [r4, #25]
   1bed0:	ldr	r1, [r4, #20]
   1bed4:	ldrb	r0, [r4, #27]
   1bed8:	adds	r3, r3, #0
   1bedc:	movne	r3, #1
   1bee0:	add	r2, r1, r3
   1bee4:	cmp	r0, #0
   1bee8:	str	r2, [r4, #20]
   1beec:	beq	1bf64 <flatcc_json_printer_int64_enum_struct_field@@Base+0x180>
   1bef0:	cmp	r6, #0
   1bef4:	lsr	r5, r7, #31
   1bef8:	sbcs	r0, r7, #0
   1befc:	bge	1bf14 <flatcc_json_printer_int64_enum_struct_field@@Base+0x130>
   1bf00:	rsbs	r6, r6, #0
   1bf04:	mov	r0, #45	; 0x2d
   1bf08:	rsc	r7, r7, #0
   1bf0c:	add	r2, r2, #1
   1bf10:	strb	r0, [r1, r3]
   1bf14:	mov	r0, r6
   1bf18:	mov	r1, r7
   1bf1c:	bl	13fac <test_print@@Base+0x728>
   1bf20:	ldr	r3, [r4, #20]
   1bf24:	add	r0, r5, r0
   1bf28:	ldrd	r6, [sp, #8]
   1bf2c:	ldrd	r8, [sp, #16]
   1bf30:	add	r3, r3, r0
   1bf34:	ldr	sl, [sp, #24]
   1bf38:	str	r3, [r4, #20]
   1bf3c:	ldrd	r4, [sp]
   1bf40:	add	sp, sp, #28
   1bf44:	pop	{pc}		; (ldr pc, [sp], #4)
   1bf48:	mov	r2, r8
   1bf4c:	mov	r1, r9
   1bf50:	bl	12428 <memcpy@plt>
   1bf54:	ldr	r3, [r4, #20]
   1bf58:	add	r8, r3, r8
   1bf5c:	str	r8, [r4, #20]
   1bf60:	b	1be94 <flatcc_json_printer_int64_enum_struct_field@@Base+0xb0>
   1bf64:	mov	r2, r6
   1bf68:	mov	r3, r7
   1bf6c:	ldrd	r6, [sp, #8]
   1bf70:	mov	r0, r4
   1bf74:	mov	r1, r5
   1bf78:	ldrd	r4, [sp]
   1bf7c:	ldrd	r8, [sp, #16]
   1bf80:	ldr	sl, [sp, #24]
   1bf84:	ldr	lr, [sp, #28]
   1bf88:	add	sp, sp, #32
   1bf8c:	bx	r1
   1bf90:	add	r1, r2, #1
   1bf94:	mov	r3, #10
   1bf98:	str	r1, [r4, #20]
   1bf9c:	strb	r3, [r2]
   1bfa0:	ldrb	r3, [r4, #25]
   1bfa4:	ldr	r1, [r4, #16]
   1bfa8:	ldr	r2, [r4, #32]
   1bfac:	ldr	r0, [r4, #20]
   1bfb0:	mul	sl, r2, r3
   1bfb4:	add	r3, r0, sl
   1bfb8:	cmp	r1, r3
   1bfbc:	bcs	1bfd4 <flatcc_json_printer_int64_enum_struct_field@@Base+0x1f0>
   1bfc0:	mov	r1, sl
   1bfc4:	mov	r0, r4
   1bfc8:	bl	14724 <test_print@@Base+0xea0>
   1bfcc:	ldr	r2, [r4, #20]
   1bfd0:	b	1be54 <flatcc_json_printer_int64_enum_struct_field@@Base+0x70>
   1bfd4:	mov	r2, sl
   1bfd8:	mov	r1, #32
   1bfdc:	bl	124c4 <memset@plt>
   1bfe0:	ldr	r2, [r4, #20]
   1bfe4:	add	r2, r2, sl
   1bfe8:	str	r2, [r4, #20]
   1bfec:	b	1be54 <flatcc_json_printer_int64_enum_struct_field@@Base+0x70>

0001bff0 <flatcc_json_printer_bool_enum_struct_field@@Base>:
   1bff0:	cmp	r1, #0
   1bff4:	strd	r4, [sp, #-32]!	; 0xffffffe0
   1bff8:	mov	r4, r0
   1bffc:	strd	r6, [sp, #8]
   1c000:	strd	r8, [sp, #16]
   1c004:	str	sl, [sp, #24]
   1c008:	str	lr, [sp, #28]
   1c00c:	ldrb	r5, [r2, r3]
   1c010:	ldr	r2, [r0, #20]
   1c014:	ldr	r8, [sp, #32]
   1c018:	ldr	r7, [sp, #36]	; 0x24
   1c01c:	ldr	r6, [sp, #40]	; 0x28
   1c020:	beq	1c038 <flatcc_json_printer_bool_enum_struct_field@@Base+0x48>
   1c024:	add	r1, r2, #1
   1c028:	mov	r3, #44	; 0x2c
   1c02c:	str	r1, [r0, #20]
   1c030:	strb	r3, [r2]
   1c034:	ldr	r2, [r0, #20]
   1c038:	ldrb	r1, [r4, #25]
   1c03c:	cmp	r1, #0
   1c040:	bne	1c18c <flatcc_json_printer_bool_enum_struct_field@@Base+0x19c>
   1c044:	ldr	r3, [r4, #16]
   1c048:	cmp	r3, r2
   1c04c:	bhi	1c060 <flatcc_json_printer_bool_enum_struct_field@@Base+0x70>
   1c050:	mov	r0, r4
   1c054:	ldr	r3, [r4, #44]	; 0x2c
   1c058:	blx	r3
   1c05c:	ldr	r2, [r4, #20]
   1c060:	mov	r3, #34	; 0x22
   1c064:	strb	r3, [r2]
   1c068:	ldrb	r3, [r4, #26]
   1c06c:	ldr	r2, [r4, #16]
   1c070:	ldr	r0, [r4, #20]
   1c074:	cmp	r3, #0
   1c078:	addeq	r0, r0, #1
   1c07c:	add	r3, r0, r7
   1c080:	cmp	r2, r3
   1c084:	str	r0, [r4, #20]
   1c088:	bhi	1c124 <flatcc_json_printer_bool_enum_struct_field@@Base+0x134>
   1c08c:	mov	r2, r7
   1c090:	mov	r1, r8
   1c094:	mov	r0, r4
   1c098:	bl	14660 <test_print@@Base+0xddc>
   1c09c:	ldr	r2, [r4, #20]
   1c0a0:	mov	r3, #34	; 0x22
   1c0a4:	mov	ip, #58	; 0x3a
   1c0a8:	mov	r0, #32
   1c0ac:	strb	r3, [r2]
   1c0b0:	ldrb	r3, [r4, #26]
   1c0b4:	ldr	r1, [r4, #20]
   1c0b8:	clz	r3, r3
   1c0bc:	lsr	r3, r3, #5
   1c0c0:	add	r2, r1, r3
   1c0c4:	add	r2, r2, #1
   1c0c8:	str	r2, [r4, #20]
   1c0cc:	strb	ip, [r1, r3]
   1c0d0:	ldr	r3, [r4, #20]
   1c0d4:	strb	r0, [r3]
   1c0d8:	ldrb	r3, [r4, #25]
   1c0dc:	ldr	r0, [r4, #20]
   1c0e0:	ldrb	r1, [r4, #27]
   1c0e4:	adds	r3, r3, #0
   1c0e8:	movne	r3, #1
   1c0ec:	add	r2, r0, r3
   1c0f0:	cmp	r1, #0
   1c0f4:	str	r2, [r4, #20]
   1c0f8:	bne	1c140 <flatcc_json_printer_bool_enum_struct_field@@Base+0x150>
   1c0fc:	mov	r1, r5
   1c100:	mov	r0, r4
   1c104:	ldrd	r4, [sp]
   1c108:	mov	r3, r6
   1c10c:	ldrd	r6, [sp, #8]
   1c110:	ldrd	r8, [sp, #16]
   1c114:	ldr	sl, [sp, #24]
   1c118:	ldr	lr, [sp, #28]
   1c11c:	add	sp, sp, #32
   1c120:	bx	r3
   1c124:	mov	r2, r7
   1c128:	mov	r1, r8
   1c12c:	bl	12428 <memcpy@plt>
   1c130:	ldr	r2, [r4, #20]
   1c134:	add	r2, r2, r7
   1c138:	str	r2, [r4, #20]
   1c13c:	b	1c0a0 <flatcc_json_printer_bool_enum_struct_field@@Base+0xb0>
   1c140:	cmp	r5, #0
   1c144:	bne	1c1ec <flatcc_json_printer_bool_enum_struct_field@@Base+0x1fc>
   1c148:	movw	r1, #10976	; 0x2ae0
   1c14c:	movt	r1, #2
   1c150:	add	ip, r1, #1776	; 0x6f0
   1c154:	ldr	lr, [r1, #1776]	; 0x6f0
   1c158:	mov	r1, #5
   1c15c:	ldrh	ip, [ip, #4]
   1c160:	str	lr, [r0, r3]
   1c164:	strh	ip, [r2, #4]
   1c168:	ldr	r3, [r4, #20]
   1c16c:	ldrd	r6, [sp, #8]
   1c170:	ldrd	r8, [sp, #16]
   1c174:	add	r3, r3, r1
   1c178:	ldr	sl, [sp, #24]
   1c17c:	str	r3, [r4, #20]
   1c180:	ldrd	r4, [sp]
   1c184:	add	sp, sp, #28
   1c188:	pop	{pc}		; (ldr pc, [sp], #4)
   1c18c:	add	r1, r2, #1
   1c190:	mov	r3, #10
   1c194:	str	r1, [r4, #20]
   1c198:	strb	r3, [r2]
   1c19c:	ldrb	r3, [r4, #25]
   1c1a0:	ldr	r1, [r4, #16]
   1c1a4:	ldr	r2, [r4, #32]
   1c1a8:	ldr	r0, [r4, #20]
   1c1ac:	mul	r9, r2, r3
   1c1b0:	add	r3, r0, r9
   1c1b4:	cmp	r1, r3
   1c1b8:	bcs	1c1d0 <flatcc_json_printer_bool_enum_struct_field@@Base+0x1e0>
   1c1bc:	mov	r1, r9
   1c1c0:	mov	r0, r4
   1c1c4:	bl	14724 <test_print@@Base+0xea0>
   1c1c8:	ldr	r2, [r4, #20]
   1c1cc:	b	1c060 <flatcc_json_printer_bool_enum_struct_field@@Base+0x70>
   1c1d0:	mov	r2, r9
   1c1d4:	mov	r1, #32
   1c1d8:	bl	124c4 <memset@plt>
   1c1dc:	ldr	r2, [r4, #20]
   1c1e0:	add	r2, r2, r9
   1c1e4:	str	r2, [r4, #20]
   1c1e8:	b	1c060 <flatcc_json_printer_bool_enum_struct_field@@Base+0x70>
   1c1ec:	ldr	ip, [pc, #28]	; 1c210 <flatcc_json_printer_bool_enum_struct_field@@Base+0x220>
   1c1f0:	movw	r1, #10976	; 0x2ae0
   1c1f4:	movt	r1, #2
   1c1f8:	ldr	lr, [r1, #1768]	; 0x6e8
   1c1fc:	mov	r1, #4
   1c200:	ldrb	ip, [ip, #4]
   1c204:	str	lr, [r0, r3]
   1c208:	strb	ip, [r2, #4]
   1c20c:	b	1c168 <flatcc_json_printer_bool_enum_struct_field@@Base+0x178>
   1c210:	andeq	r3, r2, r8, asr #3

0001c214 <flatcc_json_printer_uint8_vector_field@@Base>:
   1c214:	ldr	ip, [r1, #8]
   1c218:	add	r2, r2, #2
   1c21c:	lsl	r2, r2, #1
   1c220:	cmp	ip, r2
   1c224:	bxle	lr
   1c228:	ldr	ip, [r1, #4]
   1c22c:	ldrh	r2, [ip, r2]
   1c230:	cmp	r2, #0
   1c234:	bxeq	lr
   1c238:	strd	r4, [sp, #-32]!	; 0xffffffe0
   1c23c:	ldr	ip, [r1]
   1c240:	strd	r6, [sp, #8]
   1c244:	strd	r8, [sp, #16]
   1c248:	str	sl, [sp, #24]
   1c24c:	str	lr, [sp, #28]
   1c250:	adds	r6, ip, r2
   1c254:	beq	1c45c <flatcc_json_printer_uint8_vector_field@@Base+0x248>
   1c258:	ldr	lr, [r1, #16]
   1c25c:	add	r5, lr, #1
   1c260:	cmp	lr, #0
   1c264:	str	r5, [r1, #16]
   1c268:	beq	1c280 <flatcc_json_printer_uint8_vector_field@@Base+0x6c>
   1c26c:	ldr	r1, [r0, #20]
   1c270:	mov	lr, #44	; 0x2c
   1c274:	add	r4, r1, #1
   1c278:	str	r4, [r0, #20]
   1c27c:	strb	lr, [r1]
   1c280:	mov	r1, r3
   1c284:	ldr	r3, [ip, r2]
   1c288:	mov	r4, r0
   1c28c:	ldr	r2, [sp, #32]
   1c290:	add	r5, r6, r3
   1c294:	ldr	r6, [r6, r3]
   1c298:	bl	14d0c <test_print@@Base+0x1488>
   1c29c:	ldr	r2, [r4, #20]
   1c2a0:	mov	r1, #91	; 0x5b
   1c2a4:	ldr	r3, [r4, #32]
   1c2a8:	cmp	r6, #0
   1c2ac:	add	r0, r2, #1
   1c2b0:	add	r3, r3, #1
   1c2b4:	str	r0, [r4, #20]
   1c2b8:	str	r3, [r4, #32]
   1c2bc:	strb	r1, [r2]
   1c2c0:	beq	1c43c <flatcc_json_printer_uint8_vector_field@@Base+0x228>
   1c2c4:	ldrb	r3, [r4, #25]
   1c2c8:	ldr	r1, [r4, #20]
   1c2cc:	cmp	r3, #0
   1c2d0:	bne	1c474 <flatcc_json_printer_uint8_vector_field@@Base+0x260>
   1c2d4:	ldr	r2, [r4, #16]
   1c2d8:	cmp	r2, r1
   1c2dc:	bhi	1c2f4 <flatcc_json_printer_uint8_vector_field@@Base+0xe0>
   1c2e0:	mov	r1, r3
   1c2e4:	mov	r0, r4
   1c2e8:	ldr	r3, [r4, #44]	; 0x2c
   1c2ec:	blx	r3
   1c2f0:	ldr	r1, [r4, #20]
   1c2f4:	add	r9, r5, #5
   1c2f8:	ldrb	r0, [r5, #4]
   1c2fc:	bl	149bc <test_print@@Base+0x1138>
   1c300:	ldr	r3, [r4, #20]
   1c304:	cmp	r6, #1
   1c308:	add	r0, r3, r0
   1c30c:	str	r0, [r4, #20]
   1c310:	beq	1c440 <flatcc_json_printer_uint8_vector_field@@Base+0x22c>
   1c314:	add	r6, r6, #4
   1c318:	movw	r7, #10976	; 0x2ae0
   1c31c:	movt	r7, #2
   1c320:	add	r5, r5, r6
   1c324:	movw	r8, #34079	; 0x851f
   1c328:	movt	r8, #20971	; 0x51eb
   1c32c:	mov	r6, #44	; 0x2c
   1c330:	b	1c394 <flatcc_json_printer_uint8_vector_field@@Base+0x180>
   1c334:	ldr	r3, [r4, #16]
   1c338:	ldr	r2, [r4, #20]
   1c33c:	cmp	r2, r3
   1c340:	bcc	1c354 <flatcc_json_printer_uint8_vector_field@@Base+0x140>
   1c344:	mov	r0, r4
   1c348:	ldr	r3, [r4, #44]	; 0x2c
   1c34c:	blx	r3
   1c350:	ldr	r2, [r4, #20]
   1c354:	ldrb	r3, [r9]
   1c358:	cmp	r3, #99	; 0x63
   1c35c:	bhi	1c3fc <flatcc_json_printer_uint8_vector_field@@Base+0x1e8>
   1c360:	cmp	r3, #9
   1c364:	bhi	1c494 <flatcc_json_printer_uint8_vector_field@@Base+0x280>
   1c368:	add	r3, r3, #48	; 0x30
   1c36c:	mov	r0, #0
   1c370:	mov	r1, #1
   1c374:	strb	r3, [r2]
   1c378:	strb	r0, [r2, #1]
   1c37c:	ldr	r0, [r4, #20]
   1c380:	add	r9, r9, #1
   1c384:	cmp	r5, r9
   1c388:	add	r0, r0, r1
   1c38c:	str	r0, [r4, #20]
   1c390:	beq	1c440 <flatcc_json_printer_uint8_vector_field@@Base+0x22c>
   1c394:	add	r3, r0, #1
   1c398:	str	r3, [r4, #20]
   1c39c:	strb	r6, [r0]
   1c3a0:	ldrb	r1, [r4, #25]
   1c3a4:	cmp	r1, #0
   1c3a8:	beq	1c334 <flatcc_json_printer_uint8_vector_field@@Base+0x120>
   1c3ac:	ldr	r3, [r4, #20]
   1c3b0:	mov	r2, #10
   1c3b4:	add	r1, r3, #1
   1c3b8:	str	r1, [r4, #20]
   1c3bc:	strb	r2, [r3]
   1c3c0:	ldrb	r3, [r4, #25]
   1c3c4:	ldr	r1, [r4, #16]
   1c3c8:	ldr	r2, [r4, #32]
   1c3cc:	ldr	r0, [r4, #20]
   1c3d0:	mul	sl, r2, r3
   1c3d4:	add	r3, r0, sl
   1c3d8:	cmp	r1, r3
   1c3dc:	bcs	1c4bc <flatcc_json_printer_uint8_vector_field@@Base+0x2a8>
   1c3e0:	mov	r1, sl
   1c3e4:	mov	r0, r4
   1c3e8:	bl	14724 <test_print@@Base+0xea0>
   1c3ec:	ldrb	r3, [r9]
   1c3f0:	ldr	r2, [r4, #20]
   1c3f4:	cmp	r3, #99	; 0x63
   1c3f8:	bls	1c360 <flatcc_json_printer_uint8_vector_field@@Base+0x14c>
   1c3fc:	umull	r1, ip, r8, r3
   1c400:	mov	r0, #100	; 0x64
   1c404:	mov	r1, #0
   1c408:	strb	r1, [r2, #3]
   1c40c:	mov	r1, #3
   1c410:	lsr	ip, ip, #5
   1c414:	mls	r3, r0, ip, r3
   1c418:	add	ip, ip, #48	; 0x30
   1c41c:	uxtb	r3, r3
   1c420:	ldrb	r0, [r7, r3, lsl #1]
   1c424:	add	r3, r7, r3, lsl #1
   1c428:	strb	r0, [r2, #1]
   1c42c:	ldrb	r3, [r3, #1]
   1c430:	strb	ip, [r2]
   1c434:	strb	r3, [r2, #2]
   1c438:	b	1c37c <flatcc_json_printer_uint8_vector_field@@Base+0x168>
   1c43c:	ldr	r0, [r4, #20]
   1c440:	add	r3, r0, #1
   1c444:	ldrb	r2, [r4, #25]
   1c448:	cmp	r2, #0
   1c44c:	bne	1c4d8 <flatcc_json_printer_uint8_vector_field@@Base+0x2c4>
   1c450:	mov	r2, #93	; 0x5d
   1c454:	str	r3, [r4, #20]
   1c458:	strb	r2, [r0]
   1c45c:	ldrd	r4, [sp]
   1c460:	ldrd	r6, [sp, #8]
   1c464:	ldrd	r8, [sp, #16]
   1c468:	ldr	sl, [sp, #24]
   1c46c:	add	sp, sp, #28
   1c470:	pop	{pc}		; (ldr pc, [sp], #4)
   1c474:	add	r2, r1, #1
   1c478:	mov	r3, #10
   1c47c:	mov	r0, r4
   1c480:	str	r2, [r4, #20]
   1c484:	strb	r3, [r1]
   1c488:	bl	147d8 <test_print@@Base+0xf54>
   1c48c:	ldr	r1, [r4, #20]
   1c490:	b	1c2f4 <flatcc_json_printer_uint8_vector_field@@Base+0xe0>
   1c494:	mov	r1, #0
   1c498:	sxth	r3, r3
   1c49c:	add	r0, r7, r3, lsl #1
   1c4a0:	strb	r1, [r2, #2]
   1c4a4:	mov	r1, #2
   1c4a8:	ldrb	r3, [r7, r3, lsl #1]
   1c4ac:	strb	r3, [r2]
   1c4b0:	ldrb	r3, [r0, #1]
   1c4b4:	strb	r3, [r2, #1]
   1c4b8:	b	1c37c <flatcc_json_printer_uint8_vector_field@@Base+0x168>
   1c4bc:	mov	r2, sl
   1c4c0:	mov	r1, #32
   1c4c4:	bl	124c4 <memset@plt>
   1c4c8:	ldr	r2, [r4, #20]
   1c4cc:	add	r2, r2, sl
   1c4d0:	str	r2, [r4, #20]
   1c4d4:	b	1c354 <flatcc_json_printer_uint8_vector_field@@Base+0x140>
   1c4d8:	mov	r2, #10
   1c4dc:	str	r3, [r4, #20]
   1c4e0:	strb	r2, [r0]
   1c4e4:	ldrb	r5, [r4, #25]
   1c4e8:	ldr	r3, [r4, #32]
   1c4ec:	ldr	r2, [r4, #16]
   1c4f0:	ldr	r0, [r4, #20]
   1c4f4:	sub	r3, r3, #1
   1c4f8:	mul	r5, r3, r5
   1c4fc:	str	r3, [r4, #32]
   1c500:	add	r3, r0, r5
   1c504:	cmp	r2, r3
   1c508:	bcs	1c524 <flatcc_json_printer_uint8_vector_field@@Base+0x310>
   1c50c:	mov	r0, r4
   1c510:	mov	r1, r5
   1c514:	bl	14724 <test_print@@Base+0xea0>
   1c518:	ldr	r0, [r4, #20]
   1c51c:	add	r3, r0, #1
   1c520:	b	1c450 <flatcc_json_printer_uint8_vector_field@@Base+0x23c>
   1c524:	mov	r2, r5
   1c528:	mov	r1, #32
   1c52c:	bl	124c4 <memset@plt>
   1c530:	ldr	r0, [r4, #20]
   1c534:	add	r0, r0, r5
   1c538:	add	r3, r0, #1
   1c53c:	b	1c450 <flatcc_json_printer_uint8_vector_field@@Base+0x23c>

0001c540 <flatcc_json_printer_utype_vector_field@@Base>:
   1c540:	b	1c214 <flatcc_json_printer_uint8_vector_field@@Base>

0001c544 <flatcc_json_printer_uint16_vector_field@@Base>:
   1c544:	ldr	ip, [r1, #8]
   1c548:	add	r2, r2, #2
   1c54c:	lsl	r2, r2, #1
   1c550:	cmp	ip, r2
   1c554:	bxle	lr
   1c558:	ldr	ip, [r1, #4]
   1c55c:	ldrh	r2, [ip, r2]
   1c560:	cmp	r2, #0
   1c564:	bxeq	lr
   1c568:	strd	r4, [sp, #-32]!	; 0xffffffe0
   1c56c:	ldr	ip, [r1]
   1c570:	strd	r6, [sp, #8]
   1c574:	str	lr, [sp, #28]
   1c578:	strd	r8, [sp, #16]
   1c57c:	str	sl, [sp, #24]
   1c580:	adds	lr, ip, r2
   1c584:	beq	1c784 <flatcc_json_printer_uint16_vector_field@@Base+0x240>
   1c588:	ldr	r4, [r1, #16]
   1c58c:	add	r5, r4, #1
   1c590:	cmp	r4, #0
   1c594:	str	r5, [r1, #16]
   1c598:	beq	1c5b0 <flatcc_json_printer_uint16_vector_field@@Base+0x6c>
   1c59c:	ldr	r1, [r0, #20]
   1c5a0:	mov	r4, #44	; 0x2c
   1c5a4:	add	r5, r1, #1
   1c5a8:	str	r5, [r0, #20]
   1c5ac:	strb	r4, [r1]
   1c5b0:	mov	r1, r3
   1c5b4:	ldr	r3, [ip, r2]
   1c5b8:	mov	r4, r0
   1c5bc:	ldr	r2, [sp, #32]
   1c5c0:	add	r5, lr, r3
   1c5c4:	ldr	r7, [lr, r3]
   1c5c8:	bl	14d0c <test_print@@Base+0x1488>
   1c5cc:	ldr	r2, [r4, #20]
   1c5d0:	mov	r1, #91	; 0x5b
   1c5d4:	ldr	r3, [r4, #32]
   1c5d8:	cmp	r7, #0
   1c5dc:	add	r0, r2, #1
   1c5e0:	add	r3, r3, #1
   1c5e4:	str	r0, [r4, #20]
   1c5e8:	str	r3, [r4, #32]
   1c5ec:	strb	r1, [r2]
   1c5f0:	beq	1c764 <flatcc_json_printer_uint16_vector_field@@Base+0x220>
   1c5f4:	ldrb	r3, [r4, #25]
   1c5f8:	ldr	r1, [r4, #20]
   1c5fc:	cmp	r3, #0
   1c600:	bne	1c79c <flatcc_json_printer_uint16_vector_field@@Base+0x258>
   1c604:	ldr	r2, [r4, #16]
   1c608:	cmp	r2, r1
   1c60c:	bhi	1c624 <flatcc_json_printer_uint16_vector_field@@Base+0xe0>
   1c610:	mov	r1, r3
   1c614:	mov	r0, r4
   1c618:	ldr	r3, [r4, #44]	; 0x2c
   1c61c:	blx	r3
   1c620:	ldr	r1, [r4, #20]
   1c624:	add	r6, r5, #6
   1c628:	ldrh	r0, [r5, #4]
   1c62c:	sub	r5, r7, #2
   1c630:	bl	13b40 <test_print@@Base+0x2bc>
   1c634:	ldr	r3, [r4, #20]
   1c638:	cmp	r7, #1
   1c63c:	add	r0, r3, r0
   1c640:	str	r0, [r4, #20]
   1c644:	beq	1c768 <flatcc_json_printer_uint16_vector_field@@Base+0x224>
   1c648:	movw	r9, #34079	; 0x851f
   1c64c:	movt	r9, #20971	; 0x51eb
   1c650:	movw	r7, #10976	; 0x2ae0
   1c654:	movt	r7, #2
   1c658:	mov	r8, #44	; 0x2c
   1c65c:	b	1c6fc <flatcc_json_printer_uint16_vector_field@@Base+0x1b8>
   1c660:	umull	r0, r1, r9, r3
   1c664:	mov	r0, #100	; 0x64
   1c668:	movw	ip, #9999	; 0x270f
   1c66c:	cmp	r3, ip
   1c670:	lsr	r1, r1, #5
   1c674:	uxth	ip, r1
   1c678:	mls	r3, r0, r1, r3
   1c67c:	mov	r1, #0
   1c680:	uxth	r3, r3
   1c684:	add	lr, r7, r3, lsl #1
   1c688:	bls	1c828 <flatcc_json_printer_uint16_vector_field@@Base+0x2e4>
   1c68c:	strb	r1, [r2, #5]
   1c690:	add	r0, r2, #3
   1c694:	mov	r1, #5
   1c698:	ldrb	r3, [r7, r3, lsl #1]
   1c69c:	strb	r3, [r2, #3]
   1c6a0:	ldrb	r3, [lr, #1]
   1c6a4:	strb	r3, [r2, #4]
   1c6a8:	umull	r2, r3, r9, ip
   1c6ac:	mov	r2, #100	; 0x64
   1c6b0:	sub	lr, r0, #2
   1c6b4:	lsr	r3, r3, #5
   1c6b8:	mls	ip, r2, r3, ip
   1c6bc:	uxth	r3, r3
   1c6c0:	uxth	ip, ip
   1c6c4:	ldrb	r2, [r7, ip, lsl #1]
   1c6c8:	add	ip, r7, ip, lsl #1
   1c6cc:	strb	r2, [r0, #-2]
   1c6d0:	ldrb	r2, [ip, #1]
   1c6d4:	strb	r2, [r0, #-1]
   1c6d8:	add	r3, r3, #48	; 0x30
   1c6dc:	strb	r3, [lr, #-1]
   1c6e0:	ldr	r0, [r4, #20]
   1c6e4:	sub	r5, r5, #1
   1c6e8:	add	r6, r6, #2
   1c6ec:	cmn	r5, #1
   1c6f0:	add	r0, r0, r1
   1c6f4:	str	r0, [r4, #20]
   1c6f8:	beq	1c768 <flatcc_json_printer_uint16_vector_field@@Base+0x224>
   1c6fc:	add	r3, r0, #1
   1c700:	str	r3, [r4, #20]
   1c704:	strb	r8, [r0]
   1c708:	ldrb	r1, [r4, #25]
   1c70c:	cmp	r1, #0
   1c710:	bne	1c7e0 <flatcc_json_printer_uint16_vector_field@@Base+0x29c>
   1c714:	ldr	r3, [r4, #16]
   1c718:	ldr	r2, [r4, #20]
   1c71c:	cmp	r2, r3
   1c720:	bcc	1c734 <flatcc_json_printer_uint16_vector_field@@Base+0x1f0>
   1c724:	mov	r0, r4
   1c728:	ldr	r3, [r4, #44]	; 0x2c
   1c72c:	blx	r3
   1c730:	ldr	r2, [r4, #20]
   1c734:	ldrh	r3, [r6]
   1c738:	cmp	r3, #1000	; 0x3e8
   1c73c:	bcs	1c660 <flatcc_json_printer_uint16_vector_field@@Base+0x11c>
   1c740:	cmp	r3, #99	; 0x63
   1c744:	mov	r1, #0
   1c748:	bhi	1c870 <flatcc_json_printer_uint16_vector_field@@Base+0x32c>
   1c74c:	cmp	r3, #9
   1c750:	bhi	1c8a0 <flatcc_json_printer_uint16_vector_field@@Base+0x35c>
   1c754:	add	lr, r2, #1
   1c758:	strb	r1, [r2, #1]
   1c75c:	mov	r1, #1
   1c760:	b	1c6d8 <flatcc_json_printer_uint16_vector_field@@Base+0x194>
   1c764:	ldr	r0, [r4, #20]
   1c768:	add	r3, r0, #1
   1c76c:	ldrb	r2, [r4, #25]
   1c770:	cmp	r2, #0
   1c774:	bne	1c8b4 <flatcc_json_printer_uint16_vector_field@@Base+0x370>
   1c778:	mov	r2, #93	; 0x5d
   1c77c:	str	r3, [r4, #20]
   1c780:	strb	r2, [r0]
   1c784:	ldrd	r4, [sp]
   1c788:	ldrd	r6, [sp, #8]
   1c78c:	ldrd	r8, [sp, #16]
   1c790:	ldr	sl, [sp, #24]
   1c794:	add	sp, sp, #28
   1c798:	pop	{pc}		; (ldr pc, [sp], #4)
   1c79c:	add	r2, r1, #1
   1c7a0:	mov	r3, #10
   1c7a4:	str	r2, [r4, #20]
   1c7a8:	strb	r3, [r1]
   1c7ac:	ldrb	r6, [r4, #25]
   1c7b0:	ldr	r2, [r4, #16]
   1c7b4:	ldr	r1, [r4, #32]
   1c7b8:	ldr	r0, [r4, #20]
   1c7bc:	mul	r6, r1, r6
   1c7c0:	add	r3, r0, r6
   1c7c4:	cmp	r2, r3
   1c7c8:	bcs	1c91c <flatcc_json_printer_uint16_vector_field@@Base+0x3d8>
   1c7cc:	mov	r1, r6
   1c7d0:	mov	r0, r4
   1c7d4:	bl	14724 <test_print@@Base+0xea0>
   1c7d8:	ldr	r1, [r4, #20]
   1c7dc:	b	1c624 <flatcc_json_printer_uint16_vector_field@@Base+0xe0>
   1c7e0:	ldr	r3, [r4, #20]
   1c7e4:	mov	r2, #10
   1c7e8:	add	r1, r3, #1
   1c7ec:	str	r1, [r4, #20]
   1c7f0:	strb	r2, [r3]
   1c7f4:	ldrb	r3, [r4, #25]
   1c7f8:	ldr	r1, [r4, #16]
   1c7fc:	ldr	r2, [r4, #32]
   1c800:	ldr	r0, [r4, #20]
   1c804:	mul	sl, r2, r3
   1c808:	add	r3, r0, sl
   1c80c:	cmp	r1, r3
   1c810:	bcs	1c884 <flatcc_json_printer_uint16_vector_field@@Base+0x340>
   1c814:	mov	r1, sl
   1c818:	mov	r0, r4
   1c81c:	bl	14724 <test_print@@Base+0xea0>
   1c820:	ldr	r2, [r4, #20]
   1c824:	b	1c734 <flatcc_json_printer_uint16_vector_field@@Base+0x1f0>
   1c828:	strb	r1, [r2, #4]
   1c82c:	add	r0, r2, #2
   1c830:	mov	r1, #4
   1c834:	ldrb	r3, [r7, r3, lsl #1]
   1c838:	strb	r3, [r2, #2]
   1c83c:	ldrb	r3, [lr, #1]
   1c840:	strb	r3, [r2, #3]
   1c844:	umull	r2, r3, r9, ip
   1c848:	mov	r2, #100	; 0x64
   1c84c:	lsr	r3, r3, #5
   1c850:	mls	r3, r2, r3, ip
   1c854:	uxth	r3, r3
   1c858:	ldrb	r2, [r7, r3, lsl #1]
   1c85c:	add	r3, r7, r3, lsl #1
   1c860:	strb	r2, [r0, #-2]
   1c864:	ldrb	r3, [r3, #1]
   1c868:	strb	r3, [r0, #-1]
   1c86c:	b	1c6e0 <flatcc_json_printer_uint16_vector_field@@Base+0x19c>
   1c870:	mov	ip, r3
   1c874:	add	r0, r2, #3
   1c878:	strb	r1, [r2, #3]
   1c87c:	mov	r1, #3
   1c880:	b	1c6a8 <flatcc_json_printer_uint16_vector_field@@Base+0x164>
   1c884:	mov	r2, sl
   1c888:	mov	r1, #32
   1c88c:	bl	124c4 <memset@plt>
   1c890:	ldr	r2, [r4, #20]
   1c894:	add	r2, r2, sl
   1c898:	str	r2, [r4, #20]
   1c89c:	b	1c734 <flatcc_json_printer_uint16_vector_field@@Base+0x1f0>
   1c8a0:	mov	ip, r3
   1c8a4:	add	r0, r2, #2
   1c8a8:	strb	r1, [r2, #2]
   1c8ac:	mov	r1, #2
   1c8b0:	b	1c844 <flatcc_json_printer_uint16_vector_field@@Base+0x300>
   1c8b4:	mov	r2, #10
   1c8b8:	str	r3, [r4, #20]
   1c8bc:	strb	r2, [r0]
   1c8c0:	ldrb	r5, [r4, #25]
   1c8c4:	ldr	r3, [r4, #32]
   1c8c8:	ldr	r2, [r4, #16]
   1c8cc:	ldr	r0, [r4, #20]
   1c8d0:	sub	r3, r3, #1
   1c8d4:	mul	r5, r3, r5
   1c8d8:	str	r3, [r4, #32]
   1c8dc:	add	r3, r0, r5
   1c8e0:	cmp	r2, r3
   1c8e4:	bcs	1c900 <flatcc_json_printer_uint16_vector_field@@Base+0x3bc>
   1c8e8:	mov	r0, r4
   1c8ec:	mov	r1, r5
   1c8f0:	bl	14724 <test_print@@Base+0xea0>
   1c8f4:	ldr	r0, [r4, #20]
   1c8f8:	add	r3, r0, #1
   1c8fc:	b	1c778 <flatcc_json_printer_uint16_vector_field@@Base+0x234>
   1c900:	mov	r2, r5
   1c904:	mov	r1, #32
   1c908:	bl	124c4 <memset@plt>
   1c90c:	ldr	r0, [r4, #20]
   1c910:	add	r0, r0, r5
   1c914:	add	r3, r0, #1
   1c918:	b	1c778 <flatcc_json_printer_uint16_vector_field@@Base+0x234>
   1c91c:	mov	r1, #32
   1c920:	mov	r2, r6
   1c924:	bl	124c4 <memset@plt>
   1c928:	ldr	r1, [r4, #20]
   1c92c:	add	r1, r1, r6
   1c930:	str	r1, [r4, #20]
   1c934:	b	1c624 <flatcc_json_printer_uint16_vector_field@@Base+0xe0>

0001c938 <flatcc_json_printer_uint32_vector_field@@Base>:
   1c938:	ldr	ip, [r1, #8]
   1c93c:	add	r2, r2, #2
   1c940:	lsl	r2, r2, #1
   1c944:	cmp	ip, r2
   1c948:	bxle	lr
   1c94c:	ldr	ip, [r1, #4]
   1c950:	ldrh	r2, [ip, r2]
   1c954:	cmp	r2, #0
   1c958:	bxeq	lr
   1c95c:	strd	r4, [sp, #-32]!	; 0xffffffe0
   1c960:	ldr	ip, [r1]
   1c964:	strd	r6, [sp, #8]
   1c968:	str	lr, [sp, #28]
   1c96c:	strd	r8, [sp, #16]
   1c970:	str	sl, [sp, #24]
   1c974:	adds	lr, ip, r2
   1c978:	beq	1cb10 <flatcc_json_printer_uint32_vector_field@@Base+0x1d8>
   1c97c:	ldr	r4, [r1, #16]
   1c980:	add	r5, r4, #1
   1c984:	cmp	r4, #0
   1c988:	str	r5, [r1, #16]
   1c98c:	beq	1c9a4 <flatcc_json_printer_uint32_vector_field@@Base+0x6c>
   1c990:	ldr	r1, [r0, #20]
   1c994:	mov	r4, #44	; 0x2c
   1c998:	add	r5, r1, #1
   1c99c:	str	r5, [r0, #20]
   1c9a0:	strb	r4, [r1]
   1c9a4:	mov	r1, r3
   1c9a8:	ldr	r3, [ip, r2]
   1c9ac:	mov	r4, r0
   1c9b0:	ldr	r2, [sp, #32]
   1c9b4:	add	r5, lr, r3
   1c9b8:	ldr	r7, [lr, r3]
   1c9bc:	bl	14d0c <test_print@@Base+0x1488>
   1c9c0:	ldr	r2, [r4, #20]
   1c9c4:	mov	r1, #91	; 0x5b
   1c9c8:	ldr	r3, [r4, #32]
   1c9cc:	cmp	r7, #0
   1c9d0:	add	r0, r2, #1
   1c9d4:	add	r3, r3, #1
   1c9d8:	str	r0, [r4, #20]
   1c9dc:	str	r3, [r4, #32]
   1c9e0:	strb	r1, [r2]
   1c9e4:	beq	1caf0 <flatcc_json_printer_uint32_vector_field@@Base+0x1b8>
   1c9e8:	ldrb	r3, [r4, #25]
   1c9ec:	ldr	r1, [r4, #20]
   1c9f0:	cmp	r3, #0
   1c9f4:	bne	1cb28 <flatcc_json_printer_uint32_vector_field@@Base+0x1f0>
   1c9f8:	ldr	r2, [r4, #16]
   1c9fc:	cmp	r2, r1
   1ca00:	bhi	1ca18 <flatcc_json_printer_uint32_vector_field@@Base+0xe0>
   1ca04:	mov	r1, r3
   1ca08:	mov	r0, r4
   1ca0c:	ldr	r3, [r4, #44]	; 0x2c
   1ca10:	blx	r3
   1ca14:	ldr	r1, [r4, #20]
   1ca18:	add	r6, r5, #8
   1ca1c:	ldr	r0, [r5, #4]
   1ca20:	sub	r5, r7, #2
   1ca24:	bl	13c98 <test_print@@Base+0x414>
   1ca28:	ldr	r3, [r4, #20]
   1ca2c:	cmp	r7, #1
   1ca30:	add	r0, r3, r0
   1ca34:	str	r0, [r4, #20]
   1ca38:	beq	1caf4 <flatcc_json_printer_uint32_vector_field@@Base+0x1bc>
   1ca3c:	mov	r7, #44	; 0x2c
   1ca40:	mov	r8, #10
   1ca44:	b	1ca8c <flatcc_json_printer_uint32_vector_field@@Base+0x154>
   1ca48:	ldr	r3, [r4, #16]
   1ca4c:	mov	r0, r4
   1ca50:	ldr	r2, [r4, #20]
   1ca54:	cmp	r2, r3
   1ca58:	bcc	1ca68 <flatcc_json_printer_uint32_vector_field@@Base+0x130>
   1ca5c:	ldr	r3, [r4, #44]	; 0x2c
   1ca60:	blx	r3
   1ca64:	ldr	r2, [r4, #20]
   1ca68:	mov	r1, r2
   1ca6c:	sub	r5, r5, #1
   1ca70:	ldr	r0, [r6], #4
   1ca74:	bl	13c98 <test_print@@Base+0x414>
   1ca78:	ldr	r3, [r4, #20]
   1ca7c:	cmn	r5, #1
   1ca80:	add	r0, r3, r0
   1ca84:	str	r0, [r4, #20]
   1ca88:	beq	1caf4 <flatcc_json_printer_uint32_vector_field@@Base+0x1bc>
   1ca8c:	add	r3, r0, #1
   1ca90:	str	r3, [r4, #20]
   1ca94:	strb	r7, [r0]
   1ca98:	ldrb	r1, [r4, #25]
   1ca9c:	cmp	r1, #0
   1caa0:	beq	1ca48 <flatcc_json_printer_uint32_vector_field@@Base+0x110>
   1caa4:	ldr	r3, [r4, #20]
   1caa8:	mov	r1, #32
   1caac:	mov	r0, r4
   1cab0:	add	r2, r3, #1
   1cab4:	str	r2, [r4, #20]
   1cab8:	strb	r8, [r3]
   1cabc:	ldrb	r2, [r4, #25]
   1cac0:	ldr	lr, [r4, #16]
   1cac4:	ldr	r9, [r4, #32]
   1cac8:	ldr	r3, [r4, #20]
   1cacc:	mul	r9, r9, r2
   1cad0:	add	ip, r3, r9
   1cad4:	mov	r2, r9
   1cad8:	cmp	lr, ip
   1cadc:	bcs	1cb48 <flatcc_json_printer_uint32_vector_field@@Base+0x210>
   1cae0:	mov	r1, r9
   1cae4:	bl	14724 <test_print@@Base+0xea0>
   1cae8:	ldr	r2, [r4, #20]
   1caec:	b	1ca68 <flatcc_json_printer_uint32_vector_field@@Base+0x130>
   1caf0:	ldr	r0, [r4, #20]
   1caf4:	add	r3, r0, #1
   1caf8:	ldrb	r2, [r4, #25]
   1cafc:	cmp	r2, #0
   1cb00:	bne	1cb60 <flatcc_json_printer_uint32_vector_field@@Base+0x228>
   1cb04:	mov	r2, #93	; 0x5d
   1cb08:	str	r3, [r4, #20]
   1cb0c:	strb	r2, [r0]
   1cb10:	ldrd	r4, [sp]
   1cb14:	ldrd	r6, [sp, #8]
   1cb18:	ldrd	r8, [sp, #16]
   1cb1c:	ldr	sl, [sp, #24]
   1cb20:	add	sp, sp, #28
   1cb24:	pop	{pc}		; (ldr pc, [sp], #4)
   1cb28:	add	r2, r1, #1
   1cb2c:	mov	r3, #10
   1cb30:	mov	r0, r4
   1cb34:	str	r2, [r4, #20]
   1cb38:	strb	r3, [r1]
   1cb3c:	bl	147d8 <test_print@@Base+0xf54>
   1cb40:	ldr	r1, [r4, #20]
   1cb44:	b	1ca18 <flatcc_json_printer_uint32_vector_field@@Base+0xe0>
   1cb48:	mov	r0, r3
   1cb4c:	bl	124c4 <memset@plt>
   1cb50:	ldr	r2, [r4, #20]
   1cb54:	add	r2, r2, r9
   1cb58:	str	r2, [r4, #20]
   1cb5c:	b	1ca68 <flatcc_json_printer_uint32_vector_field@@Base+0x130>
   1cb60:	mov	r2, #10
   1cb64:	str	r3, [r4, #20]
   1cb68:	strb	r2, [r0]
   1cb6c:	ldrb	r5, [r4, #25]
   1cb70:	ldr	r3, [r4, #32]
   1cb74:	ldr	r2, [r4, #16]
   1cb78:	ldr	r0, [r4, #20]
   1cb7c:	sub	r3, r3, #1
   1cb80:	mul	r5, r3, r5
   1cb84:	str	r3, [r4, #32]
   1cb88:	add	r3, r0, r5
   1cb8c:	cmp	r2, r3
   1cb90:	bcs	1cbac <flatcc_json_printer_uint32_vector_field@@Base+0x274>
   1cb94:	mov	r0, r4
   1cb98:	mov	r1, r5
   1cb9c:	bl	14724 <test_print@@Base+0xea0>
   1cba0:	ldr	r0, [r4, #20]
   1cba4:	add	r3, r0, #1
   1cba8:	b	1cb04 <flatcc_json_printer_uint32_vector_field@@Base+0x1cc>
   1cbac:	mov	r2, r5
   1cbb0:	mov	r1, #32
   1cbb4:	bl	124c4 <memset@plt>
   1cbb8:	ldr	r0, [r4, #20]
   1cbbc:	add	r0, r0, r5
   1cbc0:	add	r3, r0, #1
   1cbc4:	b	1cb04 <flatcc_json_printer_uint32_vector_field@@Base+0x1cc>

0001cbc8 <flatcc_json_printer_uint64_vector_field@@Base>:
   1cbc8:	ldr	ip, [r1, #8]
   1cbcc:	add	r2, r2, #2
   1cbd0:	lsl	r2, r2, #1
   1cbd4:	cmp	ip, r2
   1cbd8:	bxle	lr
   1cbdc:	ldr	ip, [r1, #4]
   1cbe0:	ldrh	r2, [ip, r2]
   1cbe4:	cmp	r2, #0
   1cbe8:	bxeq	lr
   1cbec:	strd	r4, [sp, #-32]!	; 0xffffffe0
   1cbf0:	ldr	ip, [r1]
   1cbf4:	strd	r6, [sp, #8]
   1cbf8:	str	lr, [sp, #28]
   1cbfc:	strd	r8, [sp, #16]
   1cc00:	str	sl, [sp, #24]
   1cc04:	adds	lr, ip, r2
   1cc08:	beq	1cd98 <flatcc_json_printer_uint64_vector_field@@Base+0x1d0>
   1cc0c:	ldr	r4, [r1, #16]
   1cc10:	add	r5, r4, #1
   1cc14:	cmp	r4, #0
   1cc18:	str	r5, [r1, #16]
   1cc1c:	beq	1cc34 <flatcc_json_printer_uint64_vector_field@@Base+0x6c>
   1cc20:	ldr	r1, [r0, #20]
   1cc24:	mov	r4, #44	; 0x2c
   1cc28:	add	r5, r1, #1
   1cc2c:	str	r5, [r0, #20]
   1cc30:	strb	r4, [r1]
   1cc34:	mov	r1, r3
   1cc38:	ldr	r3, [ip, r2]
   1cc3c:	mov	r4, r0
   1cc40:	ldr	r2, [sp, #32]
   1cc44:	add	r5, lr, r3
   1cc48:	ldr	r7, [lr, r3]
   1cc4c:	bl	14d0c <test_print@@Base+0x1488>
   1cc50:	ldr	r2, [r4, #20]
   1cc54:	mov	r1, #91	; 0x5b
   1cc58:	ldr	r3, [r4, #32]
   1cc5c:	cmp	r7, #0
   1cc60:	add	r0, r2, #1
   1cc64:	add	r3, r3, #1
   1cc68:	str	r0, [r4, #20]
   1cc6c:	str	r3, [r4, #32]
   1cc70:	strb	r1, [r2]
   1cc74:	beq	1cd78 <flatcc_json_printer_uint64_vector_field@@Base+0x1b0>
   1cc78:	ldrb	r1, [r4, #25]
   1cc7c:	ldr	r2, [r4, #20]
   1cc80:	cmp	r1, #0
   1cc84:	bne	1cdb0 <flatcc_json_printer_uint64_vector_field@@Base+0x1e8>
   1cc88:	ldr	r3, [r4, #16]
   1cc8c:	cmp	r3, r2
   1cc90:	bhi	1cca4 <flatcc_json_printer_uint64_vector_field@@Base+0xdc>
   1cc94:	mov	r0, r4
   1cc98:	ldr	r3, [r4, #44]	; 0x2c
   1cc9c:	blx	r3
   1cca0:	ldr	r2, [r4, #20]
   1cca4:	add	r6, r5, #12
   1cca8:	ldrd	r0, [r5, #4]
   1ccac:	sub	r5, r7, #2
   1ccb0:	bl	13fac <test_print@@Base+0x728>
   1ccb4:	ldr	r3, [r4, #20]
   1ccb8:	cmp	r7, #1
   1ccbc:	add	r0, r3, r0
   1ccc0:	str	r0, [r4, #20]
   1ccc4:	beq	1cd7c <flatcc_json_printer_uint64_vector_field@@Base+0x1b4>
   1ccc8:	mov	r7, #44	; 0x2c
   1cccc:	mov	r8, #10
   1ccd0:	b	1cd14 <flatcc_json_printer_uint64_vector_field@@Base+0x14c>
   1ccd4:	ldr	r3, [r4, #16]
   1ccd8:	mov	r0, r4
   1ccdc:	ldr	r2, [r4, #20]
   1cce0:	cmp	r2, r3
   1cce4:	bcc	1ccf4 <flatcc_json_printer_uint64_vector_field@@Base+0x12c>
   1cce8:	ldr	r3, [r4, #44]	; 0x2c
   1ccec:	blx	r3
   1ccf0:	ldr	r2, [r4, #20]
   1ccf4:	sub	r5, r5, #1
   1ccf8:	ldrd	r0, [r6], #8
   1ccfc:	bl	13fac <test_print@@Base+0x728>
   1cd00:	ldr	r3, [r4, #20]
   1cd04:	cmn	r5, #1
   1cd08:	add	r0, r3, r0
   1cd0c:	str	r0, [r4, #20]
   1cd10:	beq	1cd7c <flatcc_json_printer_uint64_vector_field@@Base+0x1b4>
   1cd14:	add	r3, r0, #1
   1cd18:	str	r3, [r4, #20]
   1cd1c:	strb	r7, [r0]
   1cd20:	ldrb	r1, [r4, #25]
   1cd24:	cmp	r1, #0
   1cd28:	beq	1ccd4 <flatcc_json_printer_uint64_vector_field@@Base+0x10c>
   1cd2c:	ldr	r3, [r4, #20]
   1cd30:	mov	r1, #32
   1cd34:	mov	r0, r4
   1cd38:	add	r2, r3, #1
   1cd3c:	str	r2, [r4, #20]
   1cd40:	strb	r8, [r3]
   1cd44:	ldrb	r2, [r4, #25]
   1cd48:	ldr	lr, [r4, #16]
   1cd4c:	ldr	r9, [r4, #32]
   1cd50:	ldr	r3, [r4, #20]
   1cd54:	mul	r9, r9, r2
   1cd58:	add	ip, r3, r9
   1cd5c:	mov	r2, r9
   1cd60:	cmp	lr, ip
   1cd64:	bcs	1cdd0 <flatcc_json_printer_uint64_vector_field@@Base+0x208>
   1cd68:	mov	r1, r9
   1cd6c:	bl	14724 <test_print@@Base+0xea0>
   1cd70:	ldr	r2, [r4, #20]
   1cd74:	b	1ccf4 <flatcc_json_printer_uint64_vector_field@@Base+0x12c>
   1cd78:	ldr	r0, [r4, #20]
   1cd7c:	add	r3, r0, #1
   1cd80:	ldrb	r2, [r4, #25]
   1cd84:	cmp	r2, #0
   1cd88:	bne	1cde8 <flatcc_json_printer_uint64_vector_field@@Base+0x220>
   1cd8c:	mov	r2, #93	; 0x5d
   1cd90:	str	r3, [r4, #20]
   1cd94:	strb	r2, [r0]
   1cd98:	ldrd	r4, [sp]
   1cd9c:	ldrd	r6, [sp, #8]
   1cda0:	ldrd	r8, [sp, #16]
   1cda4:	ldr	sl, [sp, #24]
   1cda8:	add	sp, sp, #28
   1cdac:	pop	{pc}		; (ldr pc, [sp], #4)
   1cdb0:	add	r1, r2, #1
   1cdb4:	mov	r3, #10
   1cdb8:	mov	r0, r4
   1cdbc:	str	r1, [r4, #20]
   1cdc0:	strb	r3, [r2]
   1cdc4:	bl	147d8 <test_print@@Base+0xf54>
   1cdc8:	ldr	r2, [r4, #20]
   1cdcc:	b	1cca4 <flatcc_json_printer_uint64_vector_field@@Base+0xdc>
   1cdd0:	mov	r0, r3
   1cdd4:	bl	124c4 <memset@plt>
   1cdd8:	ldr	r2, [r4, #20]
   1cddc:	add	r2, r2, r9
   1cde0:	str	r2, [r4, #20]
   1cde4:	b	1ccf4 <flatcc_json_printer_uint64_vector_field@@Base+0x12c>
   1cde8:	mov	r2, #10
   1cdec:	str	r3, [r4, #20]
   1cdf0:	strb	r2, [r0]
   1cdf4:	ldrb	r5, [r4, #25]
   1cdf8:	ldr	r3, [r4, #32]
   1cdfc:	ldr	r2, [r4, #16]
   1ce00:	ldr	r0, [r4, #20]
   1ce04:	sub	r3, r3, #1
   1ce08:	mul	r5, r3, r5
   1ce0c:	str	r3, [r4, #32]
   1ce10:	add	r3, r0, r5
   1ce14:	cmp	r2, r3
   1ce18:	bcs	1ce34 <flatcc_json_printer_uint64_vector_field@@Base+0x26c>
   1ce1c:	mov	r0, r4
   1ce20:	mov	r1, r5
   1ce24:	bl	14724 <test_print@@Base+0xea0>
   1ce28:	ldr	r0, [r4, #20]
   1ce2c:	add	r3, r0, #1
   1ce30:	b	1cd8c <flatcc_json_printer_uint64_vector_field@@Base+0x1c4>
   1ce34:	mov	r2, r5
   1ce38:	mov	r1, #32
   1ce3c:	bl	124c4 <memset@plt>
   1ce40:	ldr	r0, [r4, #20]
   1ce44:	add	r0, r0, r5
   1ce48:	add	r3, r0, #1
   1ce4c:	b	1cd8c <flatcc_json_printer_uint64_vector_field@@Base+0x1c4>

0001ce50 <flatcc_json_printer_int8_vector_field@@Base>:
   1ce50:	ldr	ip, [r1, #8]
   1ce54:	add	r2, r2, #2
   1ce58:	lsl	r2, r2, #1
   1ce5c:	cmp	ip, r2
   1ce60:	bxle	lr
   1ce64:	ldr	ip, [r1, #4]
   1ce68:	ldrh	r2, [ip, r2]
   1ce6c:	cmp	r2, #0
   1ce70:	bxeq	lr
   1ce74:	strd	r4, [sp, #-32]!	; 0xffffffe0
   1ce78:	ldr	ip, [r1]
   1ce7c:	strd	r6, [sp, #8]
   1ce80:	strd	r8, [sp, #16]
   1ce84:	str	sl, [sp, #24]
   1ce88:	str	lr, [sp, #28]
   1ce8c:	adds	r6, ip, r2
   1ce90:	beq	1d098 <flatcc_json_printer_int8_vector_field@@Base+0x248>
   1ce94:	ldr	lr, [r1, #16]
   1ce98:	add	r5, lr, #1
   1ce9c:	cmp	lr, #0
   1cea0:	str	r5, [r1, #16]
   1cea4:	beq	1cebc <flatcc_json_printer_int8_vector_field@@Base+0x6c>
   1cea8:	ldr	r1, [r0, #20]
   1ceac:	mov	lr, #44	; 0x2c
   1ceb0:	add	r4, r1, #1
   1ceb4:	str	r4, [r0, #20]
   1ceb8:	strb	lr, [r1]
   1cebc:	mov	r1, r3
   1cec0:	ldr	r3, [ip, r2]
   1cec4:	mov	r4, r0
   1cec8:	ldr	r2, [sp, #32]
   1cecc:	add	r5, r6, r3
   1ced0:	ldr	r6, [r6, r3]
   1ced4:	bl	14d0c <test_print@@Base+0x1488>
   1ced8:	ldr	r2, [r4, #20]
   1cedc:	mov	r1, #91	; 0x5b
   1cee0:	ldr	r3, [r4, #32]
   1cee4:	cmp	r6, #0
   1cee8:	add	r0, r2, #1
   1ceec:	add	r3, r3, #1
   1cef0:	str	r0, [r4, #20]
   1cef4:	str	r3, [r4, #32]
   1cef8:	strb	r1, [r2]
   1cefc:	beq	1d078 <flatcc_json_printer_int8_vector_field@@Base+0x228>
   1cf00:	ldrb	r3, [r4, #25]
   1cf04:	ldr	r1, [r4, #20]
   1cf08:	cmp	r3, #0
   1cf0c:	bne	1d0b0 <flatcc_json_printer_int8_vector_field@@Base+0x260>
   1cf10:	ldr	r2, [r4, #16]
   1cf14:	cmp	r2, r1
   1cf18:	bhi	1cf30 <flatcc_json_printer_int8_vector_field@@Base+0xe0>
   1cf1c:	mov	r1, r3
   1cf20:	mov	r0, r4
   1cf24:	ldr	r3, [r4, #44]	; 0x2c
   1cf28:	blx	r3
   1cf2c:	ldr	r1, [r4, #20]
   1cf30:	ldrsb	r0, [r5, #4]
   1cf34:	cmp	r0, #0
   1cf38:	lsr	r7, r0, #31
   1cf3c:	uxtb	r0, r0
   1cf40:	bge	1cf54 <flatcc_json_printer_int8_vector_field@@Base+0x104>
   1cf44:	rsb	r0, r0, #0
   1cf48:	mov	r3, #45	; 0x2d
   1cf4c:	uxtb	r0, r0
   1cf50:	strb	r3, [r1], #1
   1cf54:	bl	149bc <test_print@@Base+0x1138>
   1cf58:	ldr	r3, [r4, #20]
   1cf5c:	add	r0, r7, r0
   1cf60:	cmp	r6, #1
   1cf64:	add	r9, r5, #5
   1cf68:	add	r3, r3, r0
   1cf6c:	str	r3, [r4, #20]
   1cf70:	beq	1d07c <flatcc_json_printer_int8_vector_field@@Base+0x22c>
   1cf74:	add	r6, r6, #4
   1cf78:	movw	r7, #10976	; 0x2ae0
   1cf7c:	movt	r7, #2
   1cf80:	add	r5, r5, r6
   1cf84:	movw	r8, #34079	; 0x851f
   1cf88:	movt	r8, #20971	; 0x51eb
   1cf8c:	mov	r6, #44	; 0x2c
   1cf90:	b	1d018 <flatcc_json_printer_int8_vector_field@@Base+0x1c8>
   1cf94:	ldr	r3, [r4, #16]
   1cf98:	ldr	r2, [r4, #20]
   1cf9c:	cmp	r2, r3
   1cfa0:	bcc	1cfb4 <flatcc_json_printer_int8_vector_field@@Base+0x164>
   1cfa4:	mov	r0, r4
   1cfa8:	ldr	r3, [r4, #44]	; 0x2c
   1cfac:	blx	r3
   1cfb0:	ldr	r2, [r4, #20]
   1cfb4:	ldrsb	ip, [r9]
   1cfb8:	cmp	ip, #0
   1cfbc:	lsr	r0, ip, #31
   1cfc0:	uxtb	r3, ip
   1cfc4:	bge	1cfd8 <flatcc_json_printer_int8_vector_field@@Base+0x188>
   1cfc8:	rsb	r3, r3, #0
   1cfcc:	mov	r1, #45	; 0x2d
   1cfd0:	uxtb	r3, r3
   1cfd4:	strb	r1, [r2], #1
   1cfd8:	cmp	r3, #99	; 0x63
   1cfdc:	bhi	1d0d0 <flatcc_json_printer_int8_vector_field@@Base+0x280>
   1cfe0:	cmp	r3, #9
   1cfe4:	bhi	1d110 <flatcc_json_printer_int8_vector_field@@Base+0x2c0>
   1cfe8:	add	r3, r3, #48	; 0x30
   1cfec:	mov	r1, #0
   1cff0:	mov	ip, #1
   1cff4:	strb	r3, [r2]
   1cff8:	strb	r1, [r2, #1]
   1cffc:	ldr	r3, [r4, #20]
   1d000:	add	r0, r0, ip
   1d004:	add	r9, r9, #1
   1d008:	cmp	r5, r9
   1d00c:	add	r3, r3, r0
   1d010:	str	r3, [r4, #20]
   1d014:	beq	1d07c <flatcc_json_printer_int8_vector_field@@Base+0x22c>
   1d018:	add	r2, r3, #1
   1d01c:	str	r2, [r4, #20]
   1d020:	strb	r6, [r3]
   1d024:	ldrb	r1, [r4, #25]
   1d028:	cmp	r1, #0
   1d02c:	beq	1cf94 <flatcc_json_printer_int8_vector_field@@Base+0x144>
   1d030:	ldr	r3, [r4, #20]
   1d034:	mov	r2, #10
   1d038:	add	r1, r3, #1
   1d03c:	str	r1, [r4, #20]
   1d040:	strb	r2, [r3]
   1d044:	ldrb	r3, [r4, #25]
   1d048:	ldr	r1, [r4, #16]
   1d04c:	ldr	r2, [r4, #32]
   1d050:	ldr	r0, [r4, #20]
   1d054:	mul	sl, r2, r3
   1d058:	add	r3, r0, sl
   1d05c:	cmp	r1, r3
   1d060:	bcs	1d138 <flatcc_json_printer_int8_vector_field@@Base+0x2e8>
   1d064:	mov	r1, sl
   1d068:	mov	r0, r4
   1d06c:	bl	14724 <test_print@@Base+0xea0>
   1d070:	ldr	r2, [r4, #20]
   1d074:	b	1cfb4 <flatcc_json_printer_int8_vector_field@@Base+0x164>
   1d078:	ldr	r3, [r4, #20]
   1d07c:	add	r2, r3, #1
   1d080:	ldrb	r1, [r4, #25]
   1d084:	cmp	r1, #0
   1d088:	bne	1d154 <flatcc_json_printer_int8_vector_field@@Base+0x304>
   1d08c:	mov	r1, #93	; 0x5d
   1d090:	str	r2, [r4, #20]
   1d094:	strb	r1, [r3]
   1d098:	ldrd	r4, [sp]
   1d09c:	ldrd	r6, [sp, #8]
   1d0a0:	ldrd	r8, [sp, #16]
   1d0a4:	ldr	sl, [sp, #24]
   1d0a8:	add	sp, sp, #28
   1d0ac:	pop	{pc}		; (ldr pc, [sp], #4)
   1d0b0:	add	r2, r1, #1
   1d0b4:	mov	r3, #10
   1d0b8:	mov	r0, r4
   1d0bc:	str	r2, [r4, #20]
   1d0c0:	strb	r3, [r1]
   1d0c4:	bl	147d8 <test_print@@Base+0xf54>
   1d0c8:	ldr	r1, [r4, #20]
   1d0cc:	b	1cf30 <flatcc_json_printer_int8_vector_field@@Base+0xe0>
   1d0d0:	umull	ip, r1, r8, r3
   1d0d4:	mov	sl, #100	; 0x64
   1d0d8:	mov	ip, #0
   1d0dc:	mov	lr, #49	; 0x31
   1d0e0:	strb	ip, [r2, #3]
   1d0e4:	mov	ip, #3
   1d0e8:	lsr	r1, r1, #5
   1d0ec:	mls	r1, sl, r1, r3
   1d0f0:	uxtb	r1, r1
   1d0f4:	ldrb	r3, [r7, r1, lsl #1]
   1d0f8:	add	r1, r7, r1, lsl #1
   1d0fc:	strb	r3, [r2, #1]
   1d100:	ldrb	r3, [r1, #1]
   1d104:	strb	lr, [r2]
   1d108:	strb	r3, [r2, #2]
   1d10c:	b	1cffc <flatcc_json_printer_int8_vector_field@@Base+0x1ac>
   1d110:	mov	ip, #0
   1d114:	sxth	r3, r3
   1d118:	add	r1, r7, r3, lsl #1
   1d11c:	strb	ip, [r2, #2]
   1d120:	mov	ip, #2
   1d124:	ldrb	r3, [r7, r3, lsl #1]
   1d128:	strb	r3, [r2]
   1d12c:	ldrb	r3, [r1, #1]
   1d130:	strb	r3, [r2, #1]
   1d134:	b	1cffc <flatcc_json_printer_int8_vector_field@@Base+0x1ac>
   1d138:	mov	r2, sl
   1d13c:	mov	r1, #32
   1d140:	bl	124c4 <memset@plt>
   1d144:	ldr	r2, [r4, #20]
   1d148:	add	r2, r2, sl
   1d14c:	str	r2, [r4, #20]
   1d150:	b	1cfb4 <flatcc_json_printer_int8_vector_field@@Base+0x164>
   1d154:	mov	r1, #10
   1d158:	str	r2, [r4, #20]
   1d15c:	strb	r1, [r3]
   1d160:	ldrb	r3, [r4, #25]
   1d164:	ldr	r2, [r4, #32]
   1d168:	ldr	r1, [r4, #16]
   1d16c:	ldr	r0, [r4, #20]
   1d170:	sub	r2, r2, #1
   1d174:	mul	r5, r2, r3
   1d178:	str	r2, [r4, #32]
   1d17c:	add	r3, r0, r5
   1d180:	cmp	r1, r3
   1d184:	bcs	1d1a0 <flatcc_json_printer_int8_vector_field@@Base+0x350>
   1d188:	mov	r1, r5
   1d18c:	mov	r0, r4
   1d190:	bl	14724 <test_print@@Base+0xea0>
   1d194:	ldr	r3, [r4, #20]
   1d198:	add	r2, r3, #1
   1d19c:	b	1d08c <flatcc_json_printer_int8_vector_field@@Base+0x23c>
   1d1a0:	mov	r2, r5
   1d1a4:	mov	r1, #32
   1d1a8:	bl	124c4 <memset@plt>
   1d1ac:	ldr	r3, [r4, #20]
   1d1b0:	add	r3, r3, r5
   1d1b4:	add	r2, r3, #1
   1d1b8:	b	1d08c <flatcc_json_printer_int8_vector_field@@Base+0x23c>

0001d1bc <flatcc_json_printer_int16_vector_field@@Base>:
   1d1bc:	ldr	ip, [r1, #8]
   1d1c0:	add	r2, r2, #2
   1d1c4:	lsl	r2, r2, #1
   1d1c8:	cmp	ip, r2
   1d1cc:	bxle	lr
   1d1d0:	ldr	ip, [r1, #4]
   1d1d4:	ldrh	r2, [ip, r2]
   1d1d8:	cmp	r2, #0
   1d1dc:	bxeq	lr
   1d1e0:	strd	r4, [sp, #-32]!	; 0xffffffe0
   1d1e4:	ldr	ip, [r1]
   1d1e8:	strd	r6, [sp, #8]
   1d1ec:	str	lr, [sp, #28]
   1d1f0:	strd	r8, [sp, #16]
   1d1f4:	str	sl, [sp, #24]
   1d1f8:	adds	lr, ip, r2
   1d1fc:	beq	1d388 <flatcc_json_printer_int16_vector_field@@Base+0x1cc>
   1d200:	ldr	r4, [r1, #16]
   1d204:	add	r5, r4, #1
   1d208:	cmp	r4, #0
   1d20c:	str	r5, [r1, #16]
   1d210:	beq	1d228 <flatcc_json_printer_int16_vector_field@@Base+0x6c>
   1d214:	ldr	r1, [r0, #20]
   1d218:	mov	r4, #44	; 0x2c
   1d21c:	add	r5, r1, #1
   1d220:	str	r5, [r0, #20]
   1d224:	strb	r4, [r1]
   1d228:	mov	r1, r3
   1d22c:	ldr	r3, [ip, r2]
   1d230:	mov	r4, r0
   1d234:	ldr	r2, [sp, #32]
   1d238:	add	r6, lr, r3
   1d23c:	ldr	r5, [lr, r3]
   1d240:	bl	14d0c <test_print@@Base+0x1488>
   1d244:	ldr	r2, [r4, #20]
   1d248:	mov	r1, #91	; 0x5b
   1d24c:	ldr	r3, [r4, #32]
   1d250:	cmp	r5, #0
   1d254:	add	r0, r2, #1
   1d258:	add	r3, r3, #1
   1d25c:	str	r0, [r4, #20]
   1d260:	str	r3, [r4, #32]
   1d264:	strb	r1, [r2]
   1d268:	beq	1d368 <flatcc_json_printer_int16_vector_field@@Base+0x1ac>
   1d26c:	ldrb	r3, [r4, #25]
   1d270:	ldr	r1, [r4, #20]
   1d274:	cmp	r3, #0
   1d278:	bne	1d3a0 <flatcc_json_printer_int16_vector_field@@Base+0x1e4>
   1d27c:	ldr	r2, [r4, #16]
   1d280:	cmp	r2, r1
   1d284:	bhi	1d29c <flatcc_json_printer_int16_vector_field@@Base+0xe0>
   1d288:	mov	r1, r3
   1d28c:	mov	r0, r4
   1d290:	ldr	r3, [r4, #44]	; 0x2c
   1d294:	blx	r3
   1d298:	ldr	r1, [r4, #20]
   1d29c:	ldrsh	r0, [r6, #4]
   1d2a0:	cmp	r0, #0
   1d2a4:	lsr	r7, r0, #31
   1d2a8:	uxth	r0, r0
   1d2ac:	bge	1d2c0 <flatcc_json_printer_int16_vector_field@@Base+0x104>
   1d2b0:	rsb	r0, r0, #0
   1d2b4:	mov	r3, #45	; 0x2d
   1d2b8:	uxth	r0, r0
   1d2bc:	strb	r3, [r1], #1
   1d2c0:	bl	13b40 <test_print@@Base+0x2bc>
   1d2c4:	ldr	r3, [r4, #20]
   1d2c8:	add	r0, r7, r0
   1d2cc:	cmp	r5, #1
   1d2d0:	add	r6, r6, #6
   1d2d4:	sub	r5, r5, #2
   1d2d8:	add	r0, r3, r0
   1d2dc:	str	r0, [r4, #20]
   1d2e0:	beq	1d36c <flatcc_json_printer_int16_vector_field@@Base+0x1b0>
   1d2e4:	mov	r7, #44	; 0x2c
   1d2e8:	mov	r8, #10
   1d2ec:	add	r3, r0, #1
   1d2f0:	str	r3, [r4, #20]
   1d2f4:	strb	r7, [r0]
   1d2f8:	ldrb	r1, [r4, #25]
   1d2fc:	cmp	r1, #0
   1d300:	bne	1d3f4 <flatcc_json_printer_int16_vector_field@@Base+0x238>
   1d304:	ldr	r3, [r4, #16]
   1d308:	mov	r0, r4
   1d30c:	ldr	r2, [r4, #20]
   1d310:	cmp	r2, r3
   1d314:	bcc	1d324 <flatcc_json_printer_int16_vector_field@@Base+0x168>
   1d318:	ldr	r3, [r4, #44]	; 0x2c
   1d31c:	blx	r3
   1d320:	ldr	r2, [r4, #20]
   1d324:	mov	r3, r2
   1d328:	mov	r1, r2
   1d32c:	ldrsh	r0, [r6]
   1d330:	mov	ip, #45	; 0x2d
   1d334:	cmp	r0, #0
   1d338:	uxth	r0, r0
   1d33c:	rsb	r2, r0, #0
   1d340:	blt	1d3c0 <flatcc_json_printer_int16_vector_field@@Base+0x204>
   1d344:	bl	13b40 <test_print@@Base+0x2bc>
   1d348:	ldr	r3, [r4, #20]
   1d34c:	sub	r5, r5, #1
   1d350:	add	r6, r6, #2
   1d354:	cmn	r5, #1
   1d358:	add	r0, r3, r0
   1d35c:	str	r0, [r4, #20]
   1d360:	bne	1d2ec <flatcc_json_printer_int16_vector_field@@Base+0x130>
   1d364:	b	1d36c <flatcc_json_printer_int16_vector_field@@Base+0x1b0>
   1d368:	ldr	r0, [r4, #20]
   1d36c:	add	r3, r0, #1
   1d370:	ldrb	r2, [r4, #25]
   1d374:	cmp	r2, #0
   1d378:	bne	1d458 <flatcc_json_printer_int16_vector_field@@Base+0x29c>
   1d37c:	mov	r2, #93	; 0x5d
   1d380:	str	r3, [r4, #20]
   1d384:	strb	r2, [r0]
   1d388:	ldrd	r4, [sp]
   1d38c:	ldrd	r6, [sp, #8]
   1d390:	ldrd	r8, [sp, #16]
   1d394:	ldr	sl, [sp, #24]
   1d398:	add	sp, sp, #28
   1d39c:	pop	{pc}		; (ldr pc, [sp], #4)
   1d3a0:	add	r2, r1, #1
   1d3a4:	mov	r3, #10
   1d3a8:	mov	r0, r4
   1d3ac:	str	r2, [r4, #20]
   1d3b0:	strb	r3, [r1]
   1d3b4:	bl	147d8 <test_print@@Base+0xf54>
   1d3b8:	ldr	r1, [r4, #20]
   1d3bc:	b	1d29c <flatcc_json_printer_int16_vector_field@@Base+0xe0>
   1d3c0:	uxth	r0, r2
   1d3c4:	strb	ip, [r3], #1
   1d3c8:	mov	r1, r3
   1d3cc:	bl	13b40 <test_print@@Base+0x2bc>
   1d3d0:	ldr	r3, [r4, #20]
   1d3d4:	add	r0, r0, #1
   1d3d8:	sub	r5, r5, #1
   1d3dc:	cmn	r5, #1
   1d3e0:	add	r6, r6, #2
   1d3e4:	add	r0, r3, r0
   1d3e8:	str	r0, [r4, #20]
   1d3ec:	bne	1d2ec <flatcc_json_printer_int16_vector_field@@Base+0x130>
   1d3f0:	b	1d36c <flatcc_json_printer_int16_vector_field@@Base+0x1b0>
   1d3f4:	ldr	r3, [r4, #20]
   1d3f8:	mov	r1, #32
   1d3fc:	mov	r0, r4
   1d400:	add	r2, r3, #1
   1d404:	str	r2, [r4, #20]
   1d408:	strb	r8, [r3]
   1d40c:	ldrb	r2, [r4, #25]
   1d410:	ldr	lr, [r4, #16]
   1d414:	ldr	r9, [r4, #32]
   1d418:	ldr	r3, [r4, #20]
   1d41c:	mul	r9, r9, r2
   1d420:	add	ip, r3, r9
   1d424:	mov	r2, r9
   1d428:	cmp	lr, ip
   1d42c:	bcs	1d440 <flatcc_json_printer_int16_vector_field@@Base+0x284>
   1d430:	mov	r1, r9
   1d434:	bl	14724 <test_print@@Base+0xea0>
   1d438:	ldr	r2, [r4, #20]
   1d43c:	b	1d324 <flatcc_json_printer_int16_vector_field@@Base+0x168>
   1d440:	mov	r0, r3
   1d444:	bl	124c4 <memset@plt>
   1d448:	ldr	r2, [r4, #20]
   1d44c:	add	r2, r2, r9
   1d450:	str	r2, [r4, #20]
   1d454:	b	1d324 <flatcc_json_printer_int16_vector_field@@Base+0x168>
   1d458:	mov	r2, #10
   1d45c:	str	r3, [r4, #20]
   1d460:	strb	r2, [r0]
   1d464:	ldrb	r5, [r4, #25]
   1d468:	ldr	r3, [r4, #32]
   1d46c:	ldr	r2, [r4, #16]
   1d470:	ldr	r0, [r4, #20]
   1d474:	sub	r3, r3, #1
   1d478:	mul	r5, r3, r5
   1d47c:	str	r3, [r4, #32]
   1d480:	add	r3, r0, r5
   1d484:	cmp	r2, r3
   1d488:	bcs	1d4a4 <flatcc_json_printer_int16_vector_field@@Base+0x2e8>
   1d48c:	mov	r0, r4
   1d490:	mov	r1, r5
   1d494:	bl	14724 <test_print@@Base+0xea0>
   1d498:	ldr	r0, [r4, #20]
   1d49c:	add	r3, r0, #1
   1d4a0:	b	1d37c <flatcc_json_printer_int16_vector_field@@Base+0x1c0>
   1d4a4:	mov	r2, r5
   1d4a8:	mov	r1, #32
   1d4ac:	bl	124c4 <memset@plt>
   1d4b0:	ldr	r0, [r4, #20]
   1d4b4:	add	r0, r0, r5
   1d4b8:	add	r3, r0, #1
   1d4bc:	b	1d37c <flatcc_json_printer_int16_vector_field@@Base+0x1c0>

0001d4c0 <flatcc_json_printer_int32_vector_field@@Base>:
   1d4c0:	ldr	ip, [r1, #8]
   1d4c4:	add	r2, r2, #2
   1d4c8:	lsl	r2, r2, #1
   1d4cc:	cmp	ip, r2
   1d4d0:	bxle	lr
   1d4d4:	ldr	ip, [r1, #4]
   1d4d8:	ldrh	r2, [ip, r2]
   1d4dc:	cmp	r2, #0
   1d4e0:	bxeq	lr
   1d4e4:	strd	r4, [sp, #-32]!	; 0xffffffe0
   1d4e8:	ldr	ip, [r1]
   1d4ec:	strd	r6, [sp, #8]
   1d4f0:	str	lr, [sp, #28]
   1d4f4:	strd	r8, [sp, #16]
   1d4f8:	str	sl, [sp, #24]
   1d4fc:	adds	lr, ip, r2
   1d500:	beq	1d67c <flatcc_json_printer_int32_vector_field@@Base+0x1bc>
   1d504:	ldr	r4, [r1, #16]
   1d508:	add	r5, r4, #1
   1d50c:	cmp	r4, #0
   1d510:	str	r5, [r1, #16]
   1d514:	beq	1d52c <flatcc_json_printer_int32_vector_field@@Base+0x6c>
   1d518:	ldr	r1, [r0, #20]
   1d51c:	mov	r4, #44	; 0x2c
   1d520:	add	r5, r1, #1
   1d524:	str	r5, [r0, #20]
   1d528:	strb	r4, [r1]
   1d52c:	mov	r1, r3
   1d530:	ldr	r3, [ip, r2]
   1d534:	mov	r4, r0
   1d538:	ldr	r2, [sp, #32]
   1d53c:	add	r6, lr, r3
   1d540:	ldr	r5, [lr, r3]
   1d544:	bl	14d0c <test_print@@Base+0x1488>
   1d548:	ldr	r2, [r4, #20]
   1d54c:	mov	r1, #91	; 0x5b
   1d550:	ldr	r3, [r4, #32]
   1d554:	cmp	r5, #0
   1d558:	add	r0, r2, #1
   1d55c:	add	r3, r3, #1
   1d560:	str	r0, [r4, #20]
   1d564:	str	r3, [r4, #32]
   1d568:	strb	r1, [r2]
   1d56c:	beq	1d65c <flatcc_json_printer_int32_vector_field@@Base+0x19c>
   1d570:	ldrb	r3, [r4, #25]
   1d574:	ldr	r1, [r4, #20]
   1d578:	cmp	r3, #0
   1d57c:	bne	1d694 <flatcc_json_printer_int32_vector_field@@Base+0x1d4>
   1d580:	ldr	r2, [r4, #16]
   1d584:	cmp	r2, r1
   1d588:	bhi	1d5a0 <flatcc_json_printer_int32_vector_field@@Base+0xe0>
   1d58c:	mov	r1, r3
   1d590:	mov	r0, r4
   1d594:	ldr	r3, [r4, #44]	; 0x2c
   1d598:	blx	r3
   1d59c:	ldr	r1, [r4, #20]
   1d5a0:	ldr	r0, [r6, #4]
   1d5a4:	cmp	r0, #0
   1d5a8:	lsr	r7, r0, #31
   1d5ac:	bge	1d5bc <flatcc_json_printer_int32_vector_field@@Base+0xfc>
   1d5b0:	mov	r3, #45	; 0x2d
   1d5b4:	rsb	r0, r0, #0
   1d5b8:	strb	r3, [r1], #1
   1d5bc:	bl	13c98 <test_print@@Base+0x414>
   1d5c0:	ldr	r3, [r4, #20]
   1d5c4:	add	r0, r7, r0
   1d5c8:	cmp	r5, #1
   1d5cc:	add	r6, r6, #8
   1d5d0:	sub	r5, r5, #2
   1d5d4:	add	r0, r3, r0
   1d5d8:	str	r0, [r4, #20]
   1d5dc:	beq	1d660 <flatcc_json_printer_int32_vector_field@@Base+0x1a0>
   1d5e0:	mov	r7, #44	; 0x2c
   1d5e4:	mov	r8, #10
   1d5e8:	add	r3, r0, #1
   1d5ec:	str	r3, [r4, #20]
   1d5f0:	strb	r7, [r0]
   1d5f4:	ldrb	r1, [r4, #25]
   1d5f8:	cmp	r1, #0
   1d5fc:	bne	1d6e8 <flatcc_json_printer_int32_vector_field@@Base+0x228>
   1d600:	ldr	r3, [r4, #16]
   1d604:	mov	r0, r4
   1d608:	ldr	r2, [r4, #20]
   1d60c:	cmp	r2, r3
   1d610:	bcc	1d620 <flatcc_json_printer_int32_vector_field@@Base+0x160>
   1d614:	ldr	r3, [r4, #44]	; 0x2c
   1d618:	blx	r3
   1d61c:	ldr	r2, [r4, #20]
   1d620:	mov	lr, #45	; 0x2d
   1d624:	mov	ip, r2
   1d628:	ldr	r3, [r6]
   1d62c:	mov	r1, r2
   1d630:	subs	r0, r3, #0
   1d634:	blt	1d6b4 <flatcc_json_printer_int32_vector_field@@Base+0x1f4>
   1d638:	bl	13c98 <test_print@@Base+0x414>
   1d63c:	ldr	r3, [r4, #20]
   1d640:	sub	r5, r5, #1
   1d644:	add	r6, r6, #4
   1d648:	cmn	r5, #1
   1d64c:	add	r0, r3, r0
   1d650:	str	r0, [r4, #20]
   1d654:	bne	1d5e8 <flatcc_json_printer_int32_vector_field@@Base+0x128>
   1d658:	b	1d660 <flatcc_json_printer_int32_vector_field@@Base+0x1a0>
   1d65c:	ldr	r0, [r4, #20]
   1d660:	add	r3, r0, #1
   1d664:	ldrb	r2, [r4, #25]
   1d668:	cmp	r2, #0
   1d66c:	bne	1d74c <flatcc_json_printer_int32_vector_field@@Base+0x28c>
   1d670:	mov	r2, #93	; 0x5d
   1d674:	str	r3, [r4, #20]
   1d678:	strb	r2, [r0]
   1d67c:	ldrd	r4, [sp]
   1d680:	ldrd	r6, [sp, #8]
   1d684:	ldrd	r8, [sp, #16]
   1d688:	ldr	sl, [sp, #24]
   1d68c:	add	sp, sp, #28
   1d690:	pop	{pc}		; (ldr pc, [sp], #4)
   1d694:	add	r2, r1, #1
   1d698:	mov	r3, #10
   1d69c:	mov	r0, r4
   1d6a0:	str	r2, [r4, #20]
   1d6a4:	strb	r3, [r1]
   1d6a8:	bl	147d8 <test_print@@Base+0xf54>
   1d6ac:	ldr	r1, [r4, #20]
   1d6b0:	b	1d5a0 <flatcc_json_printer_int32_vector_field@@Base+0xe0>
   1d6b4:	rsb	r0, r3, #0
   1d6b8:	strb	lr, [ip], #1
   1d6bc:	mov	r1, ip
   1d6c0:	bl	13c98 <test_print@@Base+0x414>
   1d6c4:	ldr	r3, [r4, #20]
   1d6c8:	add	r0, r0, #1
   1d6cc:	sub	r5, r5, #1
   1d6d0:	cmn	r5, #1
   1d6d4:	add	r6, r6, #4
   1d6d8:	add	r0, r3, r0
   1d6dc:	str	r0, [r4, #20]
   1d6e0:	bne	1d5e8 <flatcc_json_printer_int32_vector_field@@Base+0x128>
   1d6e4:	b	1d660 <flatcc_json_printer_int32_vector_field@@Base+0x1a0>
   1d6e8:	ldr	r3, [r4, #20]
   1d6ec:	mov	r1, #32
   1d6f0:	mov	r0, r4
   1d6f4:	add	r2, r3, #1
   1d6f8:	str	r2, [r4, #20]
   1d6fc:	strb	r8, [r3]
   1d700:	ldrb	r2, [r4, #25]
   1d704:	ldr	lr, [r4, #16]
   1d708:	ldr	r9, [r4, #32]
   1d70c:	ldr	r3, [r4, #20]
   1d710:	mul	r9, r9, r2
   1d714:	add	ip, r3, r9
   1d718:	mov	r2, r9
   1d71c:	cmp	lr, ip
   1d720:	bcs	1d734 <flatcc_json_printer_int32_vector_field@@Base+0x274>
   1d724:	mov	r1, r9
   1d728:	bl	14724 <test_print@@Base+0xea0>
   1d72c:	ldr	r2, [r4, #20]
   1d730:	b	1d620 <flatcc_json_printer_int32_vector_field@@Base+0x160>
   1d734:	mov	r0, r3
   1d738:	bl	124c4 <memset@plt>
   1d73c:	ldr	r2, [r4, #20]
   1d740:	add	r2, r2, r9
   1d744:	str	r2, [r4, #20]
   1d748:	b	1d620 <flatcc_json_printer_int32_vector_field@@Base+0x160>
   1d74c:	mov	r2, #10
   1d750:	str	r3, [r4, #20]
   1d754:	strb	r2, [r0]
   1d758:	ldrb	r5, [r4, #25]
   1d75c:	ldr	r3, [r4, #32]
   1d760:	ldr	r2, [r4, #16]
   1d764:	ldr	r0, [r4, #20]
   1d768:	sub	r3, r3, #1
   1d76c:	mul	r5, r3, r5
   1d770:	str	r3, [r4, #32]
   1d774:	add	r3, r0, r5
   1d778:	cmp	r2, r3
   1d77c:	bcs	1d798 <flatcc_json_printer_int32_vector_field@@Base+0x2d8>
   1d780:	mov	r0, r4
   1d784:	mov	r1, r5
   1d788:	bl	14724 <test_print@@Base+0xea0>
   1d78c:	ldr	r0, [r4, #20]
   1d790:	add	r3, r0, #1
   1d794:	b	1d670 <flatcc_json_printer_int32_vector_field@@Base+0x1b0>
   1d798:	mov	r2, r5
   1d79c:	mov	r1, #32
   1d7a0:	bl	124c4 <memset@plt>
   1d7a4:	ldr	r0, [r4, #20]
   1d7a8:	add	r0, r0, r5
   1d7ac:	add	r3, r0, #1
   1d7b0:	b	1d670 <flatcc_json_printer_int32_vector_field@@Base+0x1b0>

0001d7b4 <flatcc_json_printer_int64_vector_field@@Base>:
   1d7b4:	ldr	ip, [r1, #8]
   1d7b8:	add	r2, r2, #2
   1d7bc:	lsl	r2, r2, #1
   1d7c0:	cmp	ip, r2
   1d7c4:	bxle	lr
   1d7c8:	ldr	ip, [r1, #4]
   1d7cc:	ldrh	r2, [ip, r2]
   1d7d0:	cmp	r2, #0
   1d7d4:	bxeq	lr
   1d7d8:	strd	r4, [sp, #-32]!	; 0xffffffe0
   1d7dc:	ldr	ip, [r1]
   1d7e0:	strd	r6, [sp, #8]
   1d7e4:	str	lr, [sp, #28]
   1d7e8:	strd	r8, [sp, #16]
   1d7ec:	str	sl, [sp, #24]
   1d7f0:	adds	lr, ip, r2
   1d7f4:	beq	1d97c <flatcc_json_printer_int64_vector_field@@Base+0x1c8>
   1d7f8:	ldr	r4, [r1, #16]
   1d7fc:	add	r5, r4, #1
   1d800:	cmp	r4, #0
   1d804:	str	r5, [r1, #16]
   1d808:	beq	1d820 <flatcc_json_printer_int64_vector_field@@Base+0x6c>
   1d80c:	ldr	r1, [r0, #20]
   1d810:	mov	r4, #44	; 0x2c
   1d814:	add	r5, r1, #1
   1d818:	str	r5, [r0, #20]
   1d81c:	strb	r4, [r1]
   1d820:	mov	r1, r3
   1d824:	ldr	r3, [ip, r2]
   1d828:	mov	r4, r0
   1d82c:	ldr	r2, [sp, #32]
   1d830:	add	r8, lr, r3
   1d834:	ldr	r5, [lr, r3]
   1d838:	bl	14d0c <test_print@@Base+0x1488>
   1d83c:	ldr	r2, [r4, #20]
   1d840:	mov	r1, #91	; 0x5b
   1d844:	ldr	r3, [r4, #32]
   1d848:	cmp	r5, #0
   1d84c:	add	r0, r2, #1
   1d850:	add	r3, r3, #1
   1d854:	str	r0, [r4, #20]
   1d858:	str	r3, [r4, #32]
   1d85c:	strb	r1, [r2]
   1d860:	beq	1d95c <flatcc_json_printer_int64_vector_field@@Base+0x1a8>
   1d864:	ldrb	r1, [r4, #25]
   1d868:	ldr	r2, [r4, #20]
   1d86c:	cmp	r1, #0
   1d870:	bne	1d994 <flatcc_json_printer_int64_vector_field@@Base+0x1e0>
   1d874:	ldr	r3, [r4, #16]
   1d878:	cmp	r3, r2
   1d87c:	bhi	1d890 <flatcc_json_printer_int64_vector_field@@Base+0xdc>
   1d880:	mov	r0, r4
   1d884:	ldr	r3, [r4, #44]	; 0x2c
   1d888:	blx	r3
   1d88c:	ldr	r2, [r4, #20]
   1d890:	ldrd	r0, [r8, #4]
   1d894:	cmp	r0, #0
   1d898:	lsr	r6, r1, #31
   1d89c:	sbcs	r3, r1, #0
   1d8a0:	bge	1d8b4 <flatcc_json_printer_int64_vector_field@@Base+0x100>
   1d8a4:	rsbs	r0, r0, #0
   1d8a8:	mov	r3, #45	; 0x2d
   1d8ac:	rsc	r1, r1, #0
   1d8b0:	strb	r3, [r2], #1
   1d8b4:	bl	13fac <test_print@@Base+0x728>
   1d8b8:	ldr	r3, [r4, #20]
   1d8bc:	add	r0, r6, r0
   1d8c0:	cmp	r5, #1
   1d8c4:	add	r8, r8, #12
   1d8c8:	sub	r5, r5, #2
   1d8cc:	add	r0, r3, r0
   1d8d0:	str	r0, [r4, #20]
   1d8d4:	beq	1d960 <flatcc_json_printer_int64_vector_field@@Base+0x1ac>
   1d8d8:	mov	r9, #44	; 0x2c
   1d8dc:	mov	sl, #10
   1d8e0:	add	r3, r0, #1
   1d8e4:	str	r3, [r4, #20]
   1d8e8:	strb	r9, [r0]
   1d8ec:	ldrb	r1, [r4, #25]
   1d8f0:	cmp	r1, #0
   1d8f4:	bne	1d9ec <flatcc_json_printer_int64_vector_field@@Base+0x238>
   1d8f8:	ldr	r3, [r4, #16]
   1d8fc:	mov	r0, r4
   1d900:	ldr	r2, [r4, #20]
   1d904:	cmp	r2, r3
   1d908:	bcc	1d918 <flatcc_json_printer_int64_vector_field@@Base+0x164>
   1d90c:	ldr	r3, [r4, #44]	; 0x2c
   1d910:	blx	r3
   1d914:	ldr	r2, [r4, #20]
   1d918:	mov	ip, #45	; 0x2d
   1d91c:	mov	r3, r2
   1d920:	ldrd	r6, [r8]
   1d924:	cmp	r6, #0
   1d928:	mov	r0, r6
   1d92c:	sbcs	lr, r7, #0
   1d930:	mov	r1, r7
   1d934:	blt	1d9b4 <flatcc_json_printer_int64_vector_field@@Base+0x200>
   1d938:	bl	13fac <test_print@@Base+0x728>
   1d93c:	ldr	r3, [r4, #20]
   1d940:	sub	r5, r5, #1
   1d944:	add	r8, r8, #8
   1d948:	cmn	r5, #1
   1d94c:	add	r0, r3, r0
   1d950:	str	r0, [r4, #20]
   1d954:	bne	1d8e0 <flatcc_json_printer_int64_vector_field@@Base+0x12c>
   1d958:	b	1d960 <flatcc_json_printer_int64_vector_field@@Base+0x1ac>
   1d95c:	ldr	r0, [r4, #20]
   1d960:	add	r3, r0, #1
   1d964:	ldrb	r2, [r4, #25]
   1d968:	cmp	r2, #0
   1d96c:	bne	1da50 <flatcc_json_printer_int64_vector_field@@Base+0x29c>
   1d970:	mov	r2, #93	; 0x5d
   1d974:	str	r3, [r4, #20]
   1d978:	strb	r2, [r0]
   1d97c:	ldrd	r4, [sp]
   1d980:	ldrd	r6, [sp, #8]
   1d984:	ldrd	r8, [sp, #16]
   1d988:	ldr	sl, [sp, #24]
   1d98c:	add	sp, sp, #28
   1d990:	pop	{pc}		; (ldr pc, [sp], #4)
   1d994:	add	r1, r2, #1
   1d998:	mov	r3, #10
   1d99c:	mov	r0, r4
   1d9a0:	str	r1, [r4, #20]
   1d9a4:	strb	r3, [r2]
   1d9a8:	bl	147d8 <test_print@@Base+0xf54>
   1d9ac:	ldr	r2, [r4, #20]
   1d9b0:	b	1d890 <flatcc_json_printer_int64_vector_field@@Base+0xdc>
   1d9b4:	rsbs	r0, r6, #0
   1d9b8:	strb	ip, [r3], #1
   1d9bc:	mov	r2, r3
   1d9c0:	rsc	r1, r7, #0
   1d9c4:	sub	r5, r5, #1
   1d9c8:	bl	13fac <test_print@@Base+0x728>
   1d9cc:	ldr	r3, [r4, #20]
   1d9d0:	add	r0, r0, #1
   1d9d4:	cmn	r5, #1
   1d9d8:	add	r8, r8, #8
   1d9dc:	add	r0, r3, r0
   1d9e0:	str	r0, [r4, #20]
   1d9e4:	bne	1d8e0 <flatcc_json_printer_int64_vector_field@@Base+0x12c>
   1d9e8:	b	1d960 <flatcc_json_printer_int64_vector_field@@Base+0x1ac>
   1d9ec:	ldr	r3, [r4, #20]
   1d9f0:	mov	r1, #32
   1d9f4:	mov	r0, r4
   1d9f8:	add	r2, r3, #1
   1d9fc:	str	r2, [r4, #20]
   1da00:	strb	sl, [r3]
   1da04:	ldrb	r2, [r4, #25]
   1da08:	ldr	lr, [r4, #16]
   1da0c:	ldr	r6, [r4, #32]
   1da10:	ldr	r3, [r4, #20]
   1da14:	mul	r6, r6, r2
   1da18:	add	ip, r3, r6
   1da1c:	mov	r2, r6
   1da20:	cmp	lr, ip
   1da24:	bcs	1da38 <flatcc_json_printer_int64_vector_field@@Base+0x284>
   1da28:	mov	r1, r6
   1da2c:	bl	14724 <test_print@@Base+0xea0>
   1da30:	ldr	r2, [r4, #20]
   1da34:	b	1d918 <flatcc_json_printer_int64_vector_field@@Base+0x164>
   1da38:	mov	r0, r3
   1da3c:	bl	124c4 <memset@plt>
   1da40:	ldr	r2, [r4, #20]
   1da44:	add	r2, r2, r6
   1da48:	str	r2, [r4, #20]
   1da4c:	b	1d918 <flatcc_json_printer_int64_vector_field@@Base+0x164>
   1da50:	mov	r2, #10
   1da54:	str	r3, [r4, #20]
   1da58:	strb	r2, [r0]
   1da5c:	ldrb	r5, [r4, #25]
   1da60:	ldr	r3, [r4, #32]
   1da64:	ldr	r2, [r4, #16]
   1da68:	ldr	r0, [r4, #20]
   1da6c:	sub	r3, r3, #1
   1da70:	mul	r5, r3, r5
   1da74:	str	r3, [r4, #32]
   1da78:	add	r3, r0, r5
   1da7c:	cmp	r2, r3
   1da80:	bcs	1da9c <flatcc_json_printer_int64_vector_field@@Base+0x2e8>
   1da84:	mov	r0, r4
   1da88:	mov	r1, r5
   1da8c:	bl	14724 <test_print@@Base+0xea0>
   1da90:	ldr	r0, [r4, #20]
   1da94:	add	r3, r0, #1
   1da98:	b	1d970 <flatcc_json_printer_int64_vector_field@@Base+0x1bc>
   1da9c:	mov	r2, r5
   1daa0:	mov	r1, #32
   1daa4:	bl	124c4 <memset@plt>
   1daa8:	ldr	r0, [r4, #20]
   1daac:	add	r0, r0, r5
   1dab0:	add	r3, r0, #1
   1dab4:	b	1d970 <flatcc_json_printer_int64_vector_field@@Base+0x1bc>

0001dab8 <flatcc_json_printer_bool_vector_field@@Base>:
   1dab8:	ldr	ip, [r1, #8]
   1dabc:	add	r2, r2, #2
   1dac0:	lsl	r2, r2, #1
   1dac4:	cmp	ip, r2
   1dac8:	bxle	lr
   1dacc:	ldr	ip, [r1, #4]
   1dad0:	ldrh	r2, [ip, r2]
   1dad4:	cmp	r2, #0
   1dad8:	bxeq	lr
   1dadc:	strd	r4, [sp, #-32]!	; 0xffffffe0
   1dae0:	ldr	ip, [r1]
   1dae4:	strd	r6, [sp, #8]
   1dae8:	strd	r8, [sp, #16]
   1daec:	str	sl, [sp, #24]
   1daf0:	str	lr, [sp, #28]
   1daf4:	adds	r7, ip, r2
   1daf8:	beq	1dc7c <flatcc_json_printer_bool_vector_field@@Base+0x1c4>
   1dafc:	ldr	lr, [r1, #16]
   1db00:	add	r5, lr, #1
   1db04:	cmp	lr, #0
   1db08:	str	r5, [r1, #16]
   1db0c:	beq	1db24 <flatcc_json_printer_bool_vector_field@@Base+0x6c>
   1db10:	ldr	r1, [r0, #20]
   1db14:	mov	lr, #44	; 0x2c
   1db18:	add	r4, r1, #1
   1db1c:	str	r4, [r0, #20]
   1db20:	strb	lr, [r1]
   1db24:	mov	r1, r3
   1db28:	ldr	r3, [ip, r2]
   1db2c:	mov	r4, r0
   1db30:	ldr	r2, [sp, #32]
   1db34:	add	r6, r7, r3
   1db38:	ldr	r8, [r7, r3]
   1db3c:	bl	14d0c <test_print@@Base+0x1488>
   1db40:	ldr	r2, [r4, #20]
   1db44:	mov	r1, #91	; 0x5b
   1db48:	ldr	r3, [r4, #32]
   1db4c:	cmp	r8, #0
   1db50:	add	r0, r2, #1
   1db54:	add	r3, r3, #1
   1db58:	str	r0, [r4, #20]
   1db5c:	str	r3, [r4, #32]
   1db60:	strb	r1, [r2]
   1db64:	beq	1dc5c <flatcc_json_printer_bool_vector_field@@Base+0x1a4>
   1db68:	ldrb	r1, [r4, #25]
   1db6c:	ldr	r2, [r4, #20]
   1db70:	cmp	r1, #0
   1db74:	bne	1dc94 <flatcc_json_printer_bool_vector_field@@Base+0x1dc>
   1db78:	ldr	r3, [r4, #16]
   1db7c:	cmp	r3, r2
   1db80:	bhi	1db94 <flatcc_json_printer_bool_vector_field@@Base+0xdc>
   1db84:	mov	r0, r4
   1db88:	ldr	r3, [r4, #44]	; 0x2c
   1db8c:	blx	r3
   1db90:	ldr	r2, [r4, #20]
   1db94:	ldrb	r3, [r6, #4]
   1db98:	cmp	r3, #0
   1db9c:	beq	1dd94 <flatcc_json_printer_bool_vector_field@@Base+0x2dc>
   1dba0:	ldr	ip, [pc, #556]	; 1ddd4 <flatcc_json_printer_bool_vector_field@@Base+0x31c>
   1dba4:	movw	r3, #10976	; 0x2ae0
   1dba8:	movt	r3, #2
   1dbac:	mov	r1, #4
   1dbb0:	ldr	r0, [r3, #1768]	; 0x6e8
   1dbb4:	ldrb	r3, [ip, #4]
   1dbb8:	str	r0, [r2]
   1dbbc:	strb	r3, [r2, #4]
   1dbc0:	ldr	r3, [r4, #20]
   1dbc4:	cmp	r8, #1
   1dbc8:	add	r5, r6, #5
   1dbcc:	add	r3, r3, r1
   1dbd0:	str	r3, [r4, #20]
   1dbd4:	beq	1dc60 <flatcc_json_printer_bool_vector_field@@Base+0x1a8>
   1dbd8:	ldr	r7, [pc, #504]	; 1ddd8 <flatcc_json_printer_bool_vector_field@@Base+0x320>
   1dbdc:	add	r2, r8, #4
   1dbe0:	mov	r8, #44	; 0x2c
   1dbe4:	add	r6, r6, r2
   1dbe8:	sub	r9, r7, #8
   1dbec:	add	r2, r3, #1
   1dbf0:	str	r2, [r4, #20]
   1dbf4:	strb	r8, [r3]
   1dbf8:	ldrb	r1, [r4, #25]
   1dbfc:	cmp	r1, #0
   1dc00:	bne	1dce0 <flatcc_json_printer_bool_vector_field@@Base+0x228>
   1dc04:	ldr	r3, [r4, #16]
   1dc08:	mov	r0, r4
   1dc0c:	ldr	r2, [r4, #20]
   1dc10:	cmp	r2, r3
   1dc14:	bcc	1dc24 <flatcc_json_printer_bool_vector_field@@Base+0x16c>
   1dc18:	ldr	r3, [r4, #44]	; 0x2c
   1dc1c:	blx	r3
   1dc20:	ldr	r2, [r4, #20]
   1dc24:	ldrb	r3, [r5]
   1dc28:	cmp	r3, #0
   1dc2c:	beq	1dcb4 <flatcc_json_printer_bool_vector_field@@Base+0x1fc>
   1dc30:	ldrb	r3, [r9, #4]
   1dc34:	add	r5, r5, #1
   1dc38:	cmp	r6, r5
   1dc3c:	ldr	r1, [r9]
   1dc40:	str	r1, [r2]
   1dc44:	strb	r3, [r2, #4]
   1dc48:	ldr	r3, [r4, #20]
   1dc4c:	add	r3, r3, #4
   1dc50:	str	r3, [r4, #20]
   1dc54:	bne	1dbec <flatcc_json_printer_bool_vector_field@@Base+0x134>
   1dc58:	b	1dc60 <flatcc_json_printer_bool_vector_field@@Base+0x1a8>
   1dc5c:	ldr	r3, [r4, #20]
   1dc60:	add	r2, r3, #1
   1dc64:	ldrb	r1, [r4, #25]
   1dc68:	cmp	r1, #0
   1dc6c:	bne	1dd48 <flatcc_json_printer_bool_vector_field@@Base+0x290>
   1dc70:	mov	r1, #93	; 0x5d
   1dc74:	str	r2, [r4, #20]
   1dc78:	strb	r1, [r3]
   1dc7c:	ldrd	r4, [sp]
   1dc80:	ldrd	r6, [sp, #8]
   1dc84:	ldrd	r8, [sp, #16]
   1dc88:	ldr	sl, [sp, #24]
   1dc8c:	add	sp, sp, #28
   1dc90:	pop	{pc}		; (ldr pc, [sp], #4)
   1dc94:	add	r1, r2, #1
   1dc98:	mov	r3, #10
   1dc9c:	mov	r0, r4
   1dca0:	str	r1, [r4, #20]
   1dca4:	strb	r3, [r2]
   1dca8:	bl	147d8 <test_print@@Base+0xf54>
   1dcac:	ldr	r2, [r4, #20]
   1dcb0:	b	1db94 <flatcc_json_printer_bool_vector_field@@Base+0xdc>
   1dcb4:	ldrh	r3, [r7, #4]
   1dcb8:	add	r5, r5, #1
   1dcbc:	cmp	r6, r5
   1dcc0:	ldr	r1, [r7]
   1dcc4:	str	r1, [r2]
   1dcc8:	strh	r3, [r2, #4]
   1dccc:	ldr	r3, [r4, #20]
   1dcd0:	add	r3, r3, #5
   1dcd4:	str	r3, [r4, #20]
   1dcd8:	bne	1dbec <flatcc_json_printer_bool_vector_field@@Base+0x134>
   1dcdc:	b	1dc60 <flatcc_json_printer_bool_vector_field@@Base+0x1a8>
   1dce0:	ldr	r3, [r4, #20]
   1dce4:	mov	r2, #10
   1dce8:	mov	r1, #32
   1dcec:	mov	r0, r4
   1dcf0:	add	ip, r3, #1
   1dcf4:	str	ip, [r4, #20]
   1dcf8:	strb	r2, [r3]
   1dcfc:	ldrb	r2, [r4, #25]
   1dd00:	ldr	lr, [r4, #16]
   1dd04:	ldr	sl, [r4, #32]
   1dd08:	ldr	r3, [r4, #20]
   1dd0c:	mul	sl, sl, r2
   1dd10:	add	ip, r3, sl
   1dd14:	mov	r2, sl
   1dd18:	cmp	lr, ip
   1dd1c:	bcs	1dd30 <flatcc_json_printer_bool_vector_field@@Base+0x278>
   1dd20:	mov	r1, sl
   1dd24:	bl	14724 <test_print@@Base+0xea0>
   1dd28:	ldr	r2, [r4, #20]
   1dd2c:	b	1dc24 <flatcc_json_printer_bool_vector_field@@Base+0x16c>
   1dd30:	mov	r0, r3
   1dd34:	bl	124c4 <memset@plt>
   1dd38:	ldr	r2, [r4, #20]
   1dd3c:	add	r2, r2, sl
   1dd40:	str	r2, [r4, #20]
   1dd44:	b	1dc24 <flatcc_json_printer_bool_vector_field@@Base+0x16c>
   1dd48:	mov	r1, #10
   1dd4c:	str	r2, [r4, #20]
   1dd50:	strb	r1, [r3]
   1dd54:	ldrb	r3, [r4, #25]
   1dd58:	ldr	r2, [r4, #32]
   1dd5c:	ldr	r1, [r4, #16]
   1dd60:	ldr	r0, [r4, #20]
   1dd64:	sub	r2, r2, #1
   1dd68:	mul	r5, r2, r3
   1dd6c:	str	r2, [r4, #32]
   1dd70:	add	r3, r0, r5
   1dd74:	cmp	r1, r3
   1dd78:	bcs	1ddb8 <flatcc_json_printer_bool_vector_field@@Base+0x300>
   1dd7c:	mov	r1, r5
   1dd80:	mov	r0, r4
   1dd84:	bl	14724 <test_print@@Base+0xea0>
   1dd88:	ldr	r3, [r4, #20]
   1dd8c:	add	r2, r3, #1
   1dd90:	b	1dc70 <flatcc_json_printer_bool_vector_field@@Base+0x1b8>
   1dd94:	movw	r3, #10976	; 0x2ae0
   1dd98:	movt	r3, #2
   1dd9c:	add	ip, r3, #1776	; 0x6f0
   1dda0:	ldr	r0, [r3, #1776]	; 0x6f0
   1dda4:	mov	r1, #5
   1dda8:	ldrh	r3, [ip, #4]
   1ddac:	str	r0, [r2]
   1ddb0:	strh	r3, [r2, #4]
   1ddb4:	b	1dbc0 <flatcc_json_printer_bool_vector_field@@Base+0x108>
   1ddb8:	mov	r2, r5
   1ddbc:	mov	r1, #32
   1ddc0:	bl	124c4 <memset@plt>
   1ddc4:	ldr	r3, [r4, #20]
   1ddc8:	add	r3, r3, r5
   1ddcc:	add	r2, r3, #1
   1ddd0:	b	1dc70 <flatcc_json_printer_bool_vector_field@@Base+0x1b8>
   1ddd4:	andeq	r3, r2, r8, asr #3
   1ddd8:	ldrdeq	r3, [r2], -r0

0001dddc <flatcc_json_printer_float_vector_field@@Base>:
   1dddc:	ldr	ip, [r1, #8]
   1dde0:	add	r2, r2, #2
   1dde4:	lsl	r2, r2, #1
   1dde8:	cmp	ip, r2
   1ddec:	bxle	lr
   1ddf0:	ldr	ip, [r1, #4]
   1ddf4:	ldrh	r2, [ip, r2]
   1ddf8:	cmp	r2, #0
   1ddfc:	bxeq	lr
   1de00:	strd	r4, [sp, #-32]!	; 0xffffffe0
   1de04:	ldr	ip, [r1]
   1de08:	strd	r6, [sp, #8]
   1de0c:	str	lr, [sp, #28]
   1de10:	strd	r8, [sp, #16]
   1de14:	str	sl, [sp, #24]
   1de18:	adds	lr, ip, r2
   1de1c:	beq	1dfbc <flatcc_json_printer_float_vector_field@@Base+0x1e0>
   1de20:	ldr	r4, [r1, #16]
   1de24:	add	r5, r4, #1
   1de28:	cmp	r4, #0
   1de2c:	str	r5, [r1, #16]
   1de30:	beq	1de48 <flatcc_json_printer_float_vector_field@@Base+0x6c>
   1de34:	ldr	r1, [r0, #20]
   1de38:	mov	r4, #44	; 0x2c
   1de3c:	add	r5, r1, #1
   1de40:	str	r5, [r0, #20]
   1de44:	strb	r4, [r1]
   1de48:	mov	r1, r3
   1de4c:	ldr	r3, [ip, r2]
   1de50:	mov	r4, r0
   1de54:	ldr	r2, [sp, #32]
   1de58:	add	r5, lr, r3
   1de5c:	ldr	r7, [lr, r3]
   1de60:	bl	14d0c <test_print@@Base+0x1488>
   1de64:	ldr	r2, [r4, #20]
   1de68:	mov	r1, #91	; 0x5b
   1de6c:	ldr	r3, [r4, #32]
   1de70:	cmp	r7, #0
   1de74:	add	r0, r2, #1
   1de78:	add	r3, r3, #1
   1de7c:	str	r0, [r4, #20]
   1de80:	str	r3, [r4, #32]
   1de84:	strb	r1, [r2]
   1de88:	beq	1df9c <flatcc_json_printer_float_vector_field@@Base+0x1c0>
   1de8c:	ldrb	r1, [r4, #25]
   1de90:	ldr	r3, [r4, #20]
   1de94:	cmp	r1, #0
   1de98:	bne	1dfd4 <flatcc_json_printer_float_vector_field@@Base+0x1f8>
   1de9c:	ldr	r2, [r4, #16]
   1dea0:	cmp	r2, r3
   1dea4:	bhi	1deb8 <flatcc_json_printer_float_vector_field@@Base+0xdc>
   1dea8:	mov	r0, r4
   1deac:	ldr	r3, [r4, #44]	; 0x2c
   1deb0:	blx	r3
   1deb4:	ldr	r3, [r4, #20]
   1deb8:	mov	r0, r3
   1debc:	add	r6, r5, #8
   1dec0:	vldr	s0, [r5, #4]
   1dec4:	sub	r5, r7, #2
   1dec8:	vcvt.f64.f32	d0, s0
   1decc:	bl	14e70 <test_print@@Base+0x15ec>
   1ded0:	ldr	r3, [r4, #20]
   1ded4:	cmp	r7, #1
   1ded8:	add	r0, r3, r0
   1dedc:	str	r0, [r4, #20]
   1dee0:	beq	1dfa0 <flatcc_json_printer_float_vector_field@@Base+0x1c4>
   1dee4:	mov	r7, #44	; 0x2c
   1dee8:	mov	r8, #10
   1deec:	b	1df38 <flatcc_json_printer_float_vector_field@@Base+0x15c>
   1def0:	ldr	r3, [r4, #16]
   1def4:	mov	r0, r4
   1def8:	ldr	r2, [r4, #20]
   1defc:	cmp	r2, r3
   1df00:	bcc	1df10 <flatcc_json_printer_float_vector_field@@Base+0x134>
   1df04:	ldr	r3, [r4, #44]	; 0x2c
   1df08:	blx	r3
   1df0c:	ldr	r2, [r4, #20]
   1df10:	mov	r0, r2
   1df14:	sub	r5, r5, #1
   1df18:	vldmia	r6!, {s0}
   1df1c:	vcvt.f64.f32	d0, s0
   1df20:	bl	14e70 <test_print@@Base+0x15ec>
   1df24:	ldr	r3, [r4, #20]
   1df28:	cmn	r5, #1
   1df2c:	add	r0, r3, r0
   1df30:	str	r0, [r4, #20]
   1df34:	beq	1dfa0 <flatcc_json_printer_float_vector_field@@Base+0x1c4>
   1df38:	add	r3, r0, #1
   1df3c:	str	r3, [r4, #20]
   1df40:	strb	r7, [r0]
   1df44:	ldrb	r1, [r4, #25]
   1df48:	cmp	r1, #0
   1df4c:	beq	1def0 <flatcc_json_printer_float_vector_field@@Base+0x114>
   1df50:	ldr	r3, [r4, #20]
   1df54:	mov	r1, #32
   1df58:	mov	r0, r4
   1df5c:	add	r2, r3, #1
   1df60:	str	r2, [r4, #20]
   1df64:	strb	r8, [r3]
   1df68:	ldrb	r2, [r4, #25]
   1df6c:	ldr	lr, [r4, #16]
   1df70:	ldr	r9, [r4, #32]
   1df74:	ldr	r3, [r4, #20]
   1df78:	mul	r9, r9, r2
   1df7c:	add	ip, r3, r9
   1df80:	mov	r2, r9
   1df84:	cmp	lr, ip
   1df88:	bcs	1dff4 <flatcc_json_printer_float_vector_field@@Base+0x218>
   1df8c:	mov	r1, r9
   1df90:	bl	14724 <test_print@@Base+0xea0>
   1df94:	ldr	r2, [r4, #20]
   1df98:	b	1df10 <flatcc_json_printer_float_vector_field@@Base+0x134>
   1df9c:	ldr	r0, [r4, #20]
   1dfa0:	add	r3, r0, #1
   1dfa4:	ldrb	r2, [r4, #25]
   1dfa8:	cmp	r2, #0
   1dfac:	bne	1e00c <flatcc_json_printer_float_vector_field@@Base+0x230>
   1dfb0:	mov	r2, #93	; 0x5d
   1dfb4:	str	r3, [r4, #20]
   1dfb8:	strb	r2, [r0]
   1dfbc:	ldrd	r4, [sp]
   1dfc0:	ldrd	r6, [sp, #8]
   1dfc4:	ldrd	r8, [sp, #16]
   1dfc8:	ldr	sl, [sp, #24]
   1dfcc:	add	sp, sp, #28
   1dfd0:	pop	{pc}		; (ldr pc, [sp], #4)
   1dfd4:	add	r1, r3, #1
   1dfd8:	mov	r2, #10
   1dfdc:	mov	r0, r4
   1dfe0:	str	r1, [r4, #20]
   1dfe4:	strb	r2, [r3]
   1dfe8:	bl	147d8 <test_print@@Base+0xf54>
   1dfec:	ldr	r3, [r4, #20]
   1dff0:	b	1deb8 <flatcc_json_printer_float_vector_field@@Base+0xdc>
   1dff4:	mov	r0, r3
   1dff8:	bl	124c4 <memset@plt>
   1dffc:	ldr	r2, [r4, #20]
   1e000:	add	r2, r2, r9
   1e004:	str	r2, [r4, #20]
   1e008:	b	1df10 <flatcc_json_printer_float_vector_field@@Base+0x134>
   1e00c:	mov	r2, #10
   1e010:	str	r3, [r4, #20]
   1e014:	strb	r2, [r0]
   1e018:	ldrb	r5, [r4, #25]
   1e01c:	ldr	r3, [r4, #32]
   1e020:	ldr	r2, [r4, #16]
   1e024:	ldr	r0, [r4, #20]
   1e028:	sub	r3, r3, #1
   1e02c:	mul	r5, r3, r5
   1e030:	str	r3, [r4, #32]
   1e034:	add	r3, r0, r5
   1e038:	cmp	r2, r3
   1e03c:	bcs	1e058 <flatcc_json_printer_float_vector_field@@Base+0x27c>
   1e040:	mov	r0, r4
   1e044:	mov	r1, r5
   1e048:	bl	14724 <test_print@@Base+0xea0>
   1e04c:	ldr	r0, [r4, #20]
   1e050:	add	r3, r0, #1
   1e054:	b	1dfb0 <flatcc_json_printer_float_vector_field@@Base+0x1d4>
   1e058:	mov	r2, r5
   1e05c:	mov	r1, #32
   1e060:	bl	124c4 <memset@plt>
   1e064:	ldr	r0, [r4, #20]
   1e068:	add	r0, r0, r5
   1e06c:	add	r3, r0, #1
   1e070:	b	1dfb0 <flatcc_json_printer_float_vector_field@@Base+0x1d4>

0001e074 <flatcc_json_printer_double_vector_field@@Base>:
   1e074:	ldr	ip, [r1, #8]
   1e078:	add	r2, r2, #2
   1e07c:	lsl	r2, r2, #1
   1e080:	cmp	ip, r2
   1e084:	bxle	lr
   1e088:	ldr	ip, [r1, #4]
   1e08c:	ldrh	r2, [ip, r2]
   1e090:	cmp	r2, #0
   1e094:	bxeq	lr
   1e098:	strd	r4, [sp, #-32]!	; 0xffffffe0
   1e09c:	ldr	ip, [r1]
   1e0a0:	strd	r6, [sp, #8]
   1e0a4:	str	lr, [sp, #28]
   1e0a8:	strd	r8, [sp, #16]
   1e0ac:	str	sl, [sp, #24]
   1e0b0:	adds	lr, ip, r2
   1e0b4:	beq	1e24c <flatcc_json_printer_double_vector_field@@Base+0x1d8>
   1e0b8:	ldr	r4, [r1, #16]
   1e0bc:	add	r5, r4, #1
   1e0c0:	cmp	r4, #0
   1e0c4:	str	r5, [r1, #16]
   1e0c8:	beq	1e0e0 <flatcc_json_printer_double_vector_field@@Base+0x6c>
   1e0cc:	ldr	r1, [r0, #20]
   1e0d0:	mov	r4, #44	; 0x2c
   1e0d4:	add	r5, r1, #1
   1e0d8:	str	r5, [r0, #20]
   1e0dc:	strb	r4, [r1]
   1e0e0:	mov	r1, r3
   1e0e4:	ldr	r3, [ip, r2]
   1e0e8:	mov	r4, r0
   1e0ec:	ldr	r2, [sp, #32]
   1e0f0:	add	r5, lr, r3
   1e0f4:	ldr	r7, [lr, r3]
   1e0f8:	bl	14d0c <test_print@@Base+0x1488>
   1e0fc:	ldr	r2, [r4, #20]
   1e100:	mov	r1, #91	; 0x5b
   1e104:	ldr	r3, [r4, #32]
   1e108:	cmp	r7, #0
   1e10c:	add	r0, r2, #1
   1e110:	add	r3, r3, #1
   1e114:	str	r0, [r4, #20]
   1e118:	str	r3, [r4, #32]
   1e11c:	strb	r1, [r2]
   1e120:	beq	1e22c <flatcc_json_printer_double_vector_field@@Base+0x1b8>
   1e124:	ldrb	r1, [r4, #25]
   1e128:	ldr	r3, [r4, #20]
   1e12c:	cmp	r1, #0
   1e130:	bne	1e264 <flatcc_json_printer_double_vector_field@@Base+0x1f0>
   1e134:	ldr	r2, [r4, #16]
   1e138:	cmp	r2, r3
   1e13c:	bhi	1e150 <flatcc_json_printer_double_vector_field@@Base+0xdc>
   1e140:	mov	r0, r4
   1e144:	ldr	r3, [r4, #44]	; 0x2c
   1e148:	blx	r3
   1e14c:	ldr	r3, [r4, #20]
   1e150:	mov	r0, r3
   1e154:	add	r6, r5, #12
   1e158:	vldr	d0, [r5, #4]
   1e15c:	sub	r5, r7, #2
   1e160:	bl	14e70 <test_print@@Base+0x15ec>
   1e164:	ldr	r3, [r4, #20]
   1e168:	cmp	r7, #1
   1e16c:	add	r0, r3, r0
   1e170:	str	r0, [r4, #20]
   1e174:	beq	1e230 <flatcc_json_printer_double_vector_field@@Base+0x1bc>
   1e178:	mov	r7, #44	; 0x2c
   1e17c:	mov	r8, #10
   1e180:	b	1e1c8 <flatcc_json_printer_double_vector_field@@Base+0x154>
   1e184:	ldr	r3, [r4, #16]
   1e188:	mov	r0, r4
   1e18c:	ldr	r2, [r4, #20]
   1e190:	cmp	r2, r3
   1e194:	bcc	1e1a4 <flatcc_json_printer_double_vector_field@@Base+0x130>
   1e198:	ldr	r3, [r4, #44]	; 0x2c
   1e19c:	blx	r3
   1e1a0:	ldr	r2, [r4, #20]
   1e1a4:	mov	r0, r2
   1e1a8:	sub	r5, r5, #1
   1e1ac:	vldmia	r6!, {d0}
   1e1b0:	bl	14e70 <test_print@@Base+0x15ec>
   1e1b4:	ldr	r3, [r4, #20]
   1e1b8:	cmn	r5, #1
   1e1bc:	add	r0, r3, r0
   1e1c0:	str	r0, [r4, #20]
   1e1c4:	beq	1e230 <flatcc_json_printer_double_vector_field@@Base+0x1bc>
   1e1c8:	add	r3, r0, #1
   1e1cc:	str	r3, [r4, #20]
   1e1d0:	strb	r7, [r0]
   1e1d4:	ldrb	r1, [r4, #25]
   1e1d8:	cmp	r1, #0
   1e1dc:	beq	1e184 <flatcc_json_printer_double_vector_field@@Base+0x110>
   1e1e0:	ldr	r3, [r4, #20]
   1e1e4:	mov	r1, #32
   1e1e8:	mov	r0, r4
   1e1ec:	add	r2, r3, #1
   1e1f0:	str	r2, [r4, #20]
   1e1f4:	strb	r8, [r3]
   1e1f8:	ldrb	r2, [r4, #25]
   1e1fc:	ldr	lr, [r4, #16]
   1e200:	ldr	r9, [r4, #32]
   1e204:	ldr	r3, [r4, #20]
   1e208:	mul	r9, r9, r2
   1e20c:	add	ip, r3, r9
   1e210:	mov	r2, r9
   1e214:	cmp	lr, ip
   1e218:	bcs	1e284 <flatcc_json_printer_double_vector_field@@Base+0x210>
   1e21c:	mov	r1, r9
   1e220:	bl	14724 <test_print@@Base+0xea0>
   1e224:	ldr	r2, [r4, #20]
   1e228:	b	1e1a4 <flatcc_json_printer_double_vector_field@@Base+0x130>
   1e22c:	ldr	r0, [r4, #20]
   1e230:	add	r3, r0, #1
   1e234:	ldrb	r2, [r4, #25]
   1e238:	cmp	r2, #0
   1e23c:	bne	1e29c <flatcc_json_printer_double_vector_field@@Base+0x228>
   1e240:	mov	r2, #93	; 0x5d
   1e244:	str	r3, [r4, #20]
   1e248:	strb	r2, [r0]
   1e24c:	ldrd	r4, [sp]
   1e250:	ldrd	r6, [sp, #8]
   1e254:	ldrd	r8, [sp, #16]
   1e258:	ldr	sl, [sp, #24]
   1e25c:	add	sp, sp, #28
   1e260:	pop	{pc}		; (ldr pc, [sp], #4)
   1e264:	add	r1, r3, #1
   1e268:	mov	r2, #10
   1e26c:	mov	r0, r4
   1e270:	str	r1, [r4, #20]
   1e274:	strb	r2, [r3]
   1e278:	bl	147d8 <test_print@@Base+0xf54>
   1e27c:	ldr	r3, [r4, #20]
   1e280:	b	1e150 <flatcc_json_printer_double_vector_field@@Base+0xdc>
   1e284:	mov	r0, r3
   1e288:	bl	124c4 <memset@plt>
   1e28c:	ldr	r2, [r4, #20]
   1e290:	add	r2, r2, r9
   1e294:	str	r2, [r4, #20]
   1e298:	b	1e1a4 <flatcc_json_printer_double_vector_field@@Base+0x130>
   1e29c:	mov	r2, #10
   1e2a0:	str	r3, [r4, #20]
   1e2a4:	strb	r2, [r0]
   1e2a8:	ldrb	r5, [r4, #25]
   1e2ac:	ldr	r3, [r4, #32]
   1e2b0:	ldr	r2, [r4, #16]
   1e2b4:	ldr	r0, [r4, #20]
   1e2b8:	sub	r3, r3, #1
   1e2bc:	mul	r5, r3, r5
   1e2c0:	str	r3, [r4, #32]
   1e2c4:	add	r3, r0, r5
   1e2c8:	cmp	r2, r3
   1e2cc:	bcs	1e2e8 <flatcc_json_printer_double_vector_field@@Base+0x274>
   1e2d0:	mov	r0, r4
   1e2d4:	mov	r1, r5
   1e2d8:	bl	14724 <test_print@@Base+0xea0>
   1e2dc:	ldr	r0, [r4, #20]
   1e2e0:	add	r3, r0, #1
   1e2e4:	b	1e240 <flatcc_json_printer_double_vector_field@@Base+0x1cc>
   1e2e8:	mov	r2, r5
   1e2ec:	mov	r1, #32
   1e2f0:	bl	124c4 <memset@plt>
   1e2f4:	ldr	r0, [r4, #20]
   1e2f8:	add	r0, r0, r5
   1e2fc:	add	r3, r0, #1
   1e300:	b	1e240 <flatcc_json_printer_double_vector_field@@Base+0x1cc>

0001e304 <flatcc_json_printer_uint8_enum_vector_field@@Base>:
   1e304:	strd	r4, [sp, #-32]!	; 0xffffffe0
   1e308:	strd	r6, [sp, #8]
   1e30c:	strd	r8, [sp, #16]
   1e310:	str	sl, [sp, #24]
   1e314:	str	lr, [sp, #28]
   1e318:	ldrb	r8, [r0, #27]
   1e31c:	ldr	r7, [sp, #32]
   1e320:	ldr	r6, [sp, #36]	; 0x24
   1e324:	cmp	r8, #0
   1e328:	bne	1e4f4 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x1f0>
   1e32c:	mov	r5, r3
   1e330:	ldr	r3, [r1, #8]
   1e334:	add	r2, r2, #2
   1e338:	lsl	r2, r2, #1
   1e33c:	mov	lr, r1
   1e340:	cmp	r3, r2
   1e344:	ble	1e4dc <flatcc_json_printer_uint8_enum_vector_field@@Base+0x1d8>
   1e348:	ldr	r3, [r1, #4]
   1e34c:	ldrh	r2, [r3, r2]
   1e350:	cmp	r2, #0
   1e354:	beq	1e4dc <flatcc_json_printer_uint8_enum_vector_field@@Base+0x1d8>
   1e358:	ldr	r3, [r1]
   1e35c:	adds	ip, r3, r2
   1e360:	beq	1e4dc <flatcc_json_printer_uint8_enum_vector_field@@Base+0x1d8>
   1e364:	ldr	r1, [r1, #16]
   1e368:	mov	r4, r0
   1e36c:	add	r0, r1, #1
   1e370:	cmp	r1, #0
   1e374:	str	r0, [lr, #16]
   1e378:	beq	1e390 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x8c>
   1e37c:	ldr	r1, [r4, #20]
   1e380:	mov	r0, #44	; 0x2c
   1e384:	add	lr, r1, #1
   1e388:	str	lr, [r4, #20]
   1e38c:	strb	r0, [r1]
   1e390:	ldr	r3, [r3, r2]
   1e394:	mov	r1, r5
   1e398:	mov	r2, r7
   1e39c:	mov	r0, r4
   1e3a0:	add	r7, ip, r3
   1e3a4:	ldr	r8, [ip, r3]
   1e3a8:	bl	14d0c <test_print@@Base+0x1488>
   1e3ac:	ldr	r2, [r4, #20]
   1e3b0:	mov	r1, #91	; 0x5b
   1e3b4:	ldr	r3, [r4, #32]
   1e3b8:	cmp	r8, #0
   1e3bc:	add	r0, r2, #1
   1e3c0:	add	r3, r3, #1
   1e3c4:	str	r0, [r4, #20]
   1e3c8:	str	r3, [r4, #32]
   1e3cc:	strb	r1, [r2]
   1e3d0:	beq	1e4bc <flatcc_json_printer_uint8_enum_vector_field@@Base+0x1b8>
   1e3d4:	ldrb	r1, [r4, #25]
   1e3d8:	ldr	r3, [r4, #20]
   1e3dc:	cmp	r1, #0
   1e3e0:	bne	1e574 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x270>
   1e3e4:	ldr	r2, [r4, #16]
   1e3e8:	cmp	r2, r3
   1e3ec:	bhi	1e3fc <flatcc_json_printer_uint8_enum_vector_field@@Base+0xf8>
   1e3f0:	mov	r0, r4
   1e3f4:	ldr	r3, [r4, #44]	; 0x2c
   1e3f8:	blx	r3
   1e3fc:	ldrb	r1, [r7, #4]
   1e400:	mov	r0, r4
   1e404:	add	r5, r7, #5
   1e408:	blx	r6
   1e40c:	cmp	r8, #1
   1e410:	beq	1e4bc <flatcc_json_printer_uint8_enum_vector_field@@Base+0x1b8>
   1e414:	add	r3, r8, #4
   1e418:	mov	r9, #10
   1e41c:	mov	r8, #44	; 0x2c
   1e420:	add	r7, r7, r3
   1e424:	b	1e458 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x154>
   1e428:	ldr	r3, [r4, #16]
   1e42c:	mov	r0, r4
   1e430:	ldr	r2, [r4, #20]
   1e434:	cmp	r2, r3
   1e438:	bcc	1e444 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x140>
   1e43c:	ldr	r3, [r4, #44]	; 0x2c
   1e440:	blx	r3
   1e444:	ldrb	r1, [r5], #1
   1e448:	mov	r0, r4
   1e44c:	blx	r6
   1e450:	cmp	r5, r7
   1e454:	beq	1e4bc <flatcc_json_printer_uint8_enum_vector_field@@Base+0x1b8>
   1e458:	ldr	r3, [r4, #20]
   1e45c:	add	r2, r3, #1
   1e460:	str	r2, [r4, #20]
   1e464:	strb	r8, [r3]
   1e468:	ldrb	r1, [r4, #25]
   1e46c:	cmp	r1, #0
   1e470:	beq	1e428 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x124>
   1e474:	ldr	r3, [r4, #20]
   1e478:	mov	r1, #32
   1e47c:	mov	r0, r4
   1e480:	add	r2, r3, #1
   1e484:	str	r2, [r4, #20]
   1e488:	strb	r9, [r3]
   1e48c:	ldrb	r2, [r4, #25]
   1e490:	ldr	lr, [r4, #16]
   1e494:	ldr	sl, [r4, #32]
   1e498:	ldr	r3, [r4, #20]
   1e49c:	mul	sl, sl, r2
   1e4a0:	add	ip, r3, sl
   1e4a4:	mov	r2, sl
   1e4a8:	cmp	lr, ip
   1e4ac:	bcs	1e510 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x20c>
   1e4b0:	mov	r1, sl
   1e4b4:	bl	14724 <test_print@@Base+0xea0>
   1e4b8:	b	1e444 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x140>
   1e4bc:	ldrb	r2, [r4, #25]
   1e4c0:	ldr	r3, [r4, #20]
   1e4c4:	cmp	r2, #0
   1e4c8:	add	r2, r3, #1
   1e4cc:	bne	1e528 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x224>
   1e4d0:	mov	r1, #93	; 0x5d
   1e4d4:	str	r2, [r4, #20]
   1e4d8:	strb	r1, [r3]
   1e4dc:	ldrd	r4, [sp]
   1e4e0:	ldrd	r6, [sp, #8]
   1e4e4:	ldrd	r8, [sp, #16]
   1e4e8:	ldr	sl, [sp, #24]
   1e4ec:	add	sp, sp, #28
   1e4f0:	pop	{pc}		; (ldr pc, [sp], #4)
   1e4f4:	ldrd	r4, [sp]
   1e4f8:	ldrd	r6, [sp, #8]
   1e4fc:	ldrd	r8, [sp, #16]
   1e500:	ldr	sl, [sp, #24]
   1e504:	ldr	lr, [sp, #28]
   1e508:	add	sp, sp, #32
   1e50c:	b	1c214 <flatcc_json_printer_uint8_vector_field@@Base>
   1e510:	mov	r0, r3
   1e514:	bl	124c4 <memset@plt>
   1e518:	ldr	r3, [r4, #20]
   1e51c:	add	sl, r3, sl
   1e520:	str	sl, [r4, #20]
   1e524:	b	1e444 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x140>
   1e528:	mov	r1, #10
   1e52c:	str	r2, [r4, #20]
   1e530:	strb	r1, [r3]
   1e534:	ldrb	r3, [r4, #25]
   1e538:	ldr	r2, [r4, #32]
   1e53c:	ldr	r1, [r4, #16]
   1e540:	ldr	r0, [r4, #20]
   1e544:	sub	r2, r2, #1
   1e548:	mul	r5, r2, r3
   1e54c:	str	r2, [r4, #32]
   1e550:	add	r3, r0, r5
   1e554:	cmp	r1, r3
   1e558:	bcs	1e590 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x28c>
   1e55c:	mov	r1, r5
   1e560:	mov	r0, r4
   1e564:	bl	14724 <test_print@@Base+0xea0>
   1e568:	ldr	r3, [r4, #20]
   1e56c:	add	r2, r3, #1
   1e570:	b	1e4d0 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x1cc>
   1e574:	add	r1, r3, #1
   1e578:	mov	r2, #10
   1e57c:	mov	r0, r4
   1e580:	str	r1, [r4, #20]
   1e584:	strb	r2, [r3]
   1e588:	bl	147d8 <test_print@@Base+0xf54>
   1e58c:	b	1e3fc <flatcc_json_printer_uint8_enum_vector_field@@Base+0xf8>
   1e590:	mov	r2, r5
   1e594:	mov	r1, #32
   1e598:	bl	124c4 <memset@plt>
   1e59c:	ldr	r3, [r4, #20]
   1e5a0:	add	r3, r3, r5
   1e5a4:	add	r2, r3, #1
   1e5a8:	b	1e4d0 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x1cc>

0001e5ac <flatcc_json_printer_utype_enum_vector_field@@Base>:
   1e5ac:	b	1e304 <flatcc_json_printer_uint8_enum_vector_field@@Base>

0001e5b0 <flatcc_json_printer_uint16_enum_vector_field@@Base>:
   1e5b0:	strd	r4, [sp, #-32]!	; 0xffffffe0
   1e5b4:	strd	r6, [sp, #8]
   1e5b8:	strd	r8, [sp, #16]
   1e5bc:	str	sl, [sp, #24]
   1e5c0:	str	lr, [sp, #28]
   1e5c4:	ldrb	r8, [r0, #27]
   1e5c8:	ldrd	r6, [sp, #32]
   1e5cc:	cmp	r8, #0
   1e5d0:	bne	1e79c <flatcc_json_printer_uint16_enum_vector_field@@Base+0x1ec>
   1e5d4:	mov	r5, r3
   1e5d8:	ldr	r3, [r1, #8]
   1e5dc:	add	r2, r2, #2
   1e5e0:	lsl	r2, r2, #1
   1e5e4:	mov	lr, r1
   1e5e8:	cmp	r3, r2
   1e5ec:	ble	1e784 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x1d4>
   1e5f0:	ldr	r3, [r1, #4]
   1e5f4:	ldrh	r2, [r3, r2]
   1e5f8:	cmp	r2, #0
   1e5fc:	beq	1e784 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x1d4>
   1e600:	ldr	r3, [r1]
   1e604:	adds	ip, r3, r2
   1e608:	beq	1e784 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x1d4>
   1e60c:	ldr	r1, [r1, #16]
   1e610:	mov	r4, r0
   1e614:	add	r0, r1, #1
   1e618:	cmp	r1, #0
   1e61c:	str	r0, [lr, #16]
   1e620:	beq	1e638 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x88>
   1e624:	ldr	r1, [r4, #20]
   1e628:	mov	r0, #44	; 0x2c
   1e62c:	add	lr, r1, #1
   1e630:	str	lr, [r4, #20]
   1e634:	strb	r0, [r1]
   1e638:	ldr	r3, [r3, r2]
   1e63c:	mov	r1, r5
   1e640:	mov	r2, r6
   1e644:	mov	r0, r4
   1e648:	add	r6, ip, r3
   1e64c:	ldr	r5, [ip, r3]
   1e650:	bl	14d0c <test_print@@Base+0x1488>
   1e654:	ldr	r2, [r4, #20]
   1e658:	mov	r1, #91	; 0x5b
   1e65c:	ldr	r3, [r4, #32]
   1e660:	cmp	r5, #0
   1e664:	add	r0, r2, #1
   1e668:	add	r3, r3, #1
   1e66c:	str	r0, [r4, #20]
   1e670:	str	r3, [r4, #32]
   1e674:	strb	r1, [r2]
   1e678:	beq	1e764 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x1b4>
   1e67c:	ldrb	r1, [r4, #25]
   1e680:	ldr	r3, [r4, #20]
   1e684:	cmp	r1, #0
   1e688:	bne	1e81c <flatcc_json_printer_uint16_enum_vector_field@@Base+0x26c>
   1e68c:	ldr	r2, [r4, #16]
   1e690:	cmp	r2, r3
   1e694:	bhi	1e6a4 <flatcc_json_printer_uint16_enum_vector_field@@Base+0xf4>
   1e698:	mov	r0, r4
   1e69c:	ldr	r3, [r4, #44]	; 0x2c
   1e6a0:	blx	r3
   1e6a4:	ldrh	r1, [r6, #4]
   1e6a8:	mov	r0, r4
   1e6ac:	add	r6, r6, #6
   1e6b0:	blx	r7
   1e6b4:	cmp	r5, #1
   1e6b8:	sub	r5, r5, #2
   1e6bc:	beq	1e764 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x1b4>
   1e6c0:	mov	r8, #44	; 0x2c
   1e6c4:	mov	r9, #10
   1e6c8:	b	1e700 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x150>
   1e6cc:	ldr	r3, [r4, #16]
   1e6d0:	mov	r0, r4
   1e6d4:	ldr	r2, [r4, #20]
   1e6d8:	cmp	r2, r3
   1e6dc:	bcc	1e6e8 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x138>
   1e6e0:	ldr	r3, [r4, #44]	; 0x2c
   1e6e4:	blx	r3
   1e6e8:	sub	r5, r5, #1
   1e6ec:	ldrh	r1, [r6], #2
   1e6f0:	mov	r0, r4
   1e6f4:	blx	r7
   1e6f8:	cmn	r5, #1
   1e6fc:	beq	1e764 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x1b4>
   1e700:	ldr	r3, [r4, #20]
   1e704:	add	r2, r3, #1
   1e708:	str	r2, [r4, #20]
   1e70c:	strb	r8, [r3]
   1e710:	ldrb	r1, [r4, #25]
   1e714:	cmp	r1, #0
   1e718:	beq	1e6cc <flatcc_json_printer_uint16_enum_vector_field@@Base+0x11c>
   1e71c:	ldr	r3, [r4, #20]
   1e720:	mov	r1, #32
   1e724:	mov	r0, r4
   1e728:	add	r2, r3, #1
   1e72c:	str	r2, [r4, #20]
   1e730:	strb	r9, [r3]
   1e734:	ldrb	r2, [r4, #25]
   1e738:	ldr	lr, [r4, #16]
   1e73c:	ldr	sl, [r4, #32]
   1e740:	ldr	r3, [r4, #20]
   1e744:	mul	sl, sl, r2
   1e748:	add	ip, r3, sl
   1e74c:	mov	r2, sl
   1e750:	cmp	lr, ip
   1e754:	bcs	1e7b8 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x208>
   1e758:	mov	r1, sl
   1e75c:	bl	14724 <test_print@@Base+0xea0>
   1e760:	b	1e6e8 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x138>
   1e764:	ldrb	r2, [r4, #25]
   1e768:	ldr	r3, [r4, #20]
   1e76c:	cmp	r2, #0
   1e770:	add	r2, r3, #1
   1e774:	bne	1e7d0 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x220>
   1e778:	mov	r1, #93	; 0x5d
   1e77c:	str	r2, [r4, #20]
   1e780:	strb	r1, [r3]
   1e784:	ldrd	r4, [sp]
   1e788:	ldrd	r6, [sp, #8]
   1e78c:	ldrd	r8, [sp, #16]
   1e790:	ldr	sl, [sp, #24]
   1e794:	add	sp, sp, #28
   1e798:	pop	{pc}		; (ldr pc, [sp], #4)
   1e79c:	ldrd	r4, [sp]
   1e7a0:	ldrd	r6, [sp, #8]
   1e7a4:	ldrd	r8, [sp, #16]
   1e7a8:	ldr	sl, [sp, #24]
   1e7ac:	ldr	lr, [sp, #28]
   1e7b0:	add	sp, sp, #32
   1e7b4:	b	1c544 <flatcc_json_printer_uint16_vector_field@@Base>
   1e7b8:	mov	r0, r3
   1e7bc:	bl	124c4 <memset@plt>
   1e7c0:	ldr	r3, [r4, #20]
   1e7c4:	add	sl, r3, sl
   1e7c8:	str	sl, [r4, #20]
   1e7cc:	b	1e6e8 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x138>
   1e7d0:	mov	r1, #10
   1e7d4:	str	r2, [r4, #20]
   1e7d8:	strb	r1, [r3]
   1e7dc:	ldrb	r3, [r4, #25]
   1e7e0:	ldr	r2, [r4, #32]
   1e7e4:	ldr	r1, [r4, #16]
   1e7e8:	ldr	r0, [r4, #20]
   1e7ec:	sub	r2, r2, #1
   1e7f0:	mul	r5, r2, r3
   1e7f4:	str	r2, [r4, #32]
   1e7f8:	add	r3, r0, r5
   1e7fc:	cmp	r1, r3
   1e800:	bcs	1e838 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x288>
   1e804:	mov	r1, r5
   1e808:	mov	r0, r4
   1e80c:	bl	14724 <test_print@@Base+0xea0>
   1e810:	ldr	r3, [r4, #20]
   1e814:	add	r2, r3, #1
   1e818:	b	1e778 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x1c8>
   1e81c:	add	r1, r3, #1
   1e820:	mov	r2, #10
   1e824:	mov	r0, r4
   1e828:	str	r1, [r4, #20]
   1e82c:	strb	r2, [r3]
   1e830:	bl	147d8 <test_print@@Base+0xf54>
   1e834:	b	1e6a4 <flatcc_json_printer_uint16_enum_vector_field@@Base+0xf4>
   1e838:	mov	r2, r5
   1e83c:	mov	r1, #32
   1e840:	bl	124c4 <memset@plt>
   1e844:	ldr	r3, [r4, #20]
   1e848:	add	r3, r3, r5
   1e84c:	add	r2, r3, #1
   1e850:	b	1e778 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x1c8>

0001e854 <flatcc_json_printer_uint32_enum_vector_field@@Base>:
   1e854:	strd	r4, [sp, #-32]!	; 0xffffffe0
   1e858:	strd	r6, [sp, #8]
   1e85c:	strd	r8, [sp, #16]
   1e860:	str	sl, [sp, #24]
   1e864:	str	lr, [sp, #28]
   1e868:	ldrb	r8, [r0, #27]
   1e86c:	ldrd	r6, [sp, #32]
   1e870:	cmp	r8, #0
   1e874:	bne	1ea40 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x1ec>
   1e878:	mov	r5, r3
   1e87c:	ldr	r3, [r1, #8]
   1e880:	add	r2, r2, #2
   1e884:	lsl	r2, r2, #1
   1e888:	mov	lr, r1
   1e88c:	cmp	r3, r2
   1e890:	ble	1ea28 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x1d4>
   1e894:	ldr	r3, [r1, #4]
   1e898:	ldrh	r2, [r3, r2]
   1e89c:	cmp	r2, #0
   1e8a0:	beq	1ea28 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x1d4>
   1e8a4:	ldr	r3, [r1]
   1e8a8:	adds	ip, r3, r2
   1e8ac:	beq	1ea28 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x1d4>
   1e8b0:	ldr	r1, [r1, #16]
   1e8b4:	mov	r4, r0
   1e8b8:	add	r0, r1, #1
   1e8bc:	cmp	r1, #0
   1e8c0:	str	r0, [lr, #16]
   1e8c4:	beq	1e8dc <flatcc_json_printer_uint32_enum_vector_field@@Base+0x88>
   1e8c8:	ldr	r1, [r4, #20]
   1e8cc:	mov	r0, #44	; 0x2c
   1e8d0:	add	lr, r1, #1
   1e8d4:	str	lr, [r4, #20]
   1e8d8:	strb	r0, [r1]
   1e8dc:	ldr	r3, [r3, r2]
   1e8e0:	mov	r1, r5
   1e8e4:	mov	r2, r6
   1e8e8:	mov	r0, r4
   1e8ec:	add	r6, ip, r3
   1e8f0:	ldr	r5, [ip, r3]
   1e8f4:	bl	14d0c <test_print@@Base+0x1488>
   1e8f8:	ldr	r2, [r4, #20]
   1e8fc:	mov	r1, #91	; 0x5b
   1e900:	ldr	r3, [r4, #32]
   1e904:	cmp	r5, #0
   1e908:	add	r0, r2, #1
   1e90c:	add	r3, r3, #1
   1e910:	str	r0, [r4, #20]
   1e914:	str	r3, [r4, #32]
   1e918:	strb	r1, [r2]
   1e91c:	beq	1ea08 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x1b4>
   1e920:	ldrb	r1, [r4, #25]
   1e924:	ldr	r3, [r4, #20]
   1e928:	cmp	r1, #0
   1e92c:	bne	1eac0 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x26c>
   1e930:	ldr	r2, [r4, #16]
   1e934:	cmp	r2, r3
   1e938:	bhi	1e948 <flatcc_json_printer_uint32_enum_vector_field@@Base+0xf4>
   1e93c:	mov	r0, r4
   1e940:	ldr	r3, [r4, #44]	; 0x2c
   1e944:	blx	r3
   1e948:	mov	r0, r4
   1e94c:	ldr	r1, [r6, #4]
   1e950:	add	r6, r6, #8
   1e954:	blx	r7
   1e958:	cmp	r5, #1
   1e95c:	sub	r5, r5, #2
   1e960:	beq	1ea08 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x1b4>
   1e964:	mov	r8, #44	; 0x2c
   1e968:	mov	r9, #10
   1e96c:	b	1e9a4 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x150>
   1e970:	ldr	r3, [r4, #16]
   1e974:	mov	r0, r4
   1e978:	ldr	r2, [r4, #20]
   1e97c:	cmp	r2, r3
   1e980:	bcc	1e98c <flatcc_json_printer_uint32_enum_vector_field@@Base+0x138>
   1e984:	ldr	r3, [r4, #44]	; 0x2c
   1e988:	blx	r3
   1e98c:	sub	r5, r5, #1
   1e990:	mov	r0, r4
   1e994:	ldr	r1, [r6], #4
   1e998:	blx	r7
   1e99c:	cmn	r5, #1
   1e9a0:	beq	1ea08 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x1b4>
   1e9a4:	ldr	r3, [r4, #20]
   1e9a8:	add	r2, r3, #1
   1e9ac:	str	r2, [r4, #20]
   1e9b0:	strb	r8, [r3]
   1e9b4:	ldrb	r1, [r4, #25]
   1e9b8:	cmp	r1, #0
   1e9bc:	beq	1e970 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x11c>
   1e9c0:	ldr	r3, [r4, #20]
   1e9c4:	mov	r1, #32
   1e9c8:	mov	r0, r4
   1e9cc:	add	r2, r3, #1
   1e9d0:	str	r2, [r4, #20]
   1e9d4:	strb	r9, [r3]
   1e9d8:	ldrb	r2, [r4, #25]
   1e9dc:	ldr	lr, [r4, #16]
   1e9e0:	ldr	sl, [r4, #32]
   1e9e4:	ldr	r3, [r4, #20]
   1e9e8:	mul	sl, sl, r2
   1e9ec:	add	ip, r3, sl
   1e9f0:	mov	r2, sl
   1e9f4:	cmp	lr, ip
   1e9f8:	bcs	1ea5c <flatcc_json_printer_uint32_enum_vector_field@@Base+0x208>
   1e9fc:	mov	r1, sl
   1ea00:	bl	14724 <test_print@@Base+0xea0>
   1ea04:	b	1e98c <flatcc_json_printer_uint32_enum_vector_field@@Base+0x138>
   1ea08:	ldrb	r2, [r4, #25]
   1ea0c:	ldr	r3, [r4, #20]
   1ea10:	cmp	r2, #0
   1ea14:	add	r2, r3, #1
   1ea18:	bne	1ea74 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x220>
   1ea1c:	mov	r1, #93	; 0x5d
   1ea20:	str	r2, [r4, #20]
   1ea24:	strb	r1, [r3]
   1ea28:	ldrd	r4, [sp]
   1ea2c:	ldrd	r6, [sp, #8]
   1ea30:	ldrd	r8, [sp, #16]
   1ea34:	ldr	sl, [sp, #24]
   1ea38:	add	sp, sp, #28
   1ea3c:	pop	{pc}		; (ldr pc, [sp], #4)
   1ea40:	ldrd	r4, [sp]
   1ea44:	ldrd	r6, [sp, #8]
   1ea48:	ldrd	r8, [sp, #16]
   1ea4c:	ldr	sl, [sp, #24]
   1ea50:	ldr	lr, [sp, #28]
   1ea54:	add	sp, sp, #32
   1ea58:	b	1c938 <flatcc_json_printer_uint32_vector_field@@Base>
   1ea5c:	mov	r0, r3
   1ea60:	bl	124c4 <memset@plt>
   1ea64:	ldr	r3, [r4, #20]
   1ea68:	add	sl, r3, sl
   1ea6c:	str	sl, [r4, #20]
   1ea70:	b	1e98c <flatcc_json_printer_uint32_enum_vector_field@@Base+0x138>
   1ea74:	mov	r1, #10
   1ea78:	str	r2, [r4, #20]
   1ea7c:	strb	r1, [r3]
   1ea80:	ldrb	r3, [r4, #25]
   1ea84:	ldr	r2, [r4, #32]
   1ea88:	ldr	r1, [r4, #16]
   1ea8c:	ldr	r0, [r4, #20]
   1ea90:	sub	r2, r2, #1
   1ea94:	mul	r5, r2, r3
   1ea98:	str	r2, [r4, #32]
   1ea9c:	add	r3, r0, r5
   1eaa0:	cmp	r1, r3
   1eaa4:	bcs	1eadc <flatcc_json_printer_uint32_enum_vector_field@@Base+0x288>
   1eaa8:	mov	r1, r5
   1eaac:	mov	r0, r4
   1eab0:	bl	14724 <test_print@@Base+0xea0>
   1eab4:	ldr	r3, [r4, #20]
   1eab8:	add	r2, r3, #1
   1eabc:	b	1ea1c <flatcc_json_printer_uint32_enum_vector_field@@Base+0x1c8>
   1eac0:	add	r1, r3, #1
   1eac4:	mov	r2, #10
   1eac8:	mov	r0, r4
   1eacc:	str	r1, [r4, #20]
   1ead0:	strb	r2, [r3]
   1ead4:	bl	147d8 <test_print@@Base+0xf54>
   1ead8:	b	1e948 <flatcc_json_printer_uint32_enum_vector_field@@Base+0xf4>
   1eadc:	mov	r2, r5
   1eae0:	mov	r1, #32
   1eae4:	bl	124c4 <memset@plt>
   1eae8:	ldr	r3, [r4, #20]
   1eaec:	add	r3, r3, r5
   1eaf0:	add	r2, r3, #1
   1eaf4:	b	1ea1c <flatcc_json_printer_uint32_enum_vector_field@@Base+0x1c8>

0001eaf8 <flatcc_json_printer_uint64_enum_vector_field@@Base>:
   1eaf8:	strd	r4, [sp, #-32]!	; 0xffffffe0
   1eafc:	strd	r6, [sp, #8]
   1eb00:	strd	r8, [sp, #16]
   1eb04:	str	sl, [sp, #24]
   1eb08:	str	lr, [sp, #28]
   1eb0c:	ldrb	r8, [r0, #27]
   1eb10:	ldrd	r6, [sp, #32]
   1eb14:	cmp	r8, #0
   1eb18:	bne	1ece4 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x1ec>
   1eb1c:	mov	r5, r3
   1eb20:	ldr	r3, [r1, #8]
   1eb24:	add	r2, r2, #2
   1eb28:	lsl	r2, r2, #1
   1eb2c:	mov	lr, r1
   1eb30:	cmp	r3, r2
   1eb34:	ble	1eccc <flatcc_json_printer_uint64_enum_vector_field@@Base+0x1d4>
   1eb38:	ldr	r3, [r1, #4]
   1eb3c:	ldrh	r2, [r3, r2]
   1eb40:	cmp	r2, #0
   1eb44:	beq	1eccc <flatcc_json_printer_uint64_enum_vector_field@@Base+0x1d4>
   1eb48:	ldr	r3, [r1]
   1eb4c:	adds	ip, r3, r2
   1eb50:	beq	1eccc <flatcc_json_printer_uint64_enum_vector_field@@Base+0x1d4>
   1eb54:	ldr	r1, [r1, #16]
   1eb58:	mov	r4, r0
   1eb5c:	add	r0, r1, #1
   1eb60:	cmp	r1, #0
   1eb64:	str	r0, [lr, #16]
   1eb68:	beq	1eb80 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x88>
   1eb6c:	ldr	r1, [r4, #20]
   1eb70:	mov	r0, #44	; 0x2c
   1eb74:	add	lr, r1, #1
   1eb78:	str	lr, [r4, #20]
   1eb7c:	strb	r0, [r1]
   1eb80:	ldr	r3, [r3, r2]
   1eb84:	mov	r1, r5
   1eb88:	mov	r2, r6
   1eb8c:	mov	r0, r4
   1eb90:	add	r6, ip, r3
   1eb94:	ldr	r5, [ip, r3]
   1eb98:	bl	14d0c <test_print@@Base+0x1488>
   1eb9c:	ldr	r2, [r4, #20]
   1eba0:	mov	r1, #91	; 0x5b
   1eba4:	ldr	r3, [r4, #32]
   1eba8:	cmp	r5, #0
   1ebac:	add	r0, r2, #1
   1ebb0:	add	r3, r3, #1
   1ebb4:	str	r0, [r4, #20]
   1ebb8:	str	r3, [r4, #32]
   1ebbc:	strb	r1, [r2]
   1ebc0:	beq	1ecac <flatcc_json_printer_uint64_enum_vector_field@@Base+0x1b4>
   1ebc4:	ldrb	r1, [r4, #25]
   1ebc8:	ldr	r3, [r4, #20]
   1ebcc:	cmp	r1, #0
   1ebd0:	bne	1ed64 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x26c>
   1ebd4:	ldr	r2, [r4, #16]
   1ebd8:	cmp	r2, r3
   1ebdc:	bhi	1ebec <flatcc_json_printer_uint64_enum_vector_field@@Base+0xf4>
   1ebe0:	mov	r0, r4
   1ebe4:	ldr	r3, [r4, #44]	; 0x2c
   1ebe8:	blx	r3
   1ebec:	mov	r0, r4
   1ebf0:	ldrd	r2, [r6, #4]
   1ebf4:	add	r6, r6, #12
   1ebf8:	blx	r7
   1ebfc:	cmp	r5, #1
   1ec00:	sub	r5, r5, #2
   1ec04:	beq	1ecac <flatcc_json_printer_uint64_enum_vector_field@@Base+0x1b4>
   1ec08:	mov	r8, #44	; 0x2c
   1ec0c:	mov	r9, #10
   1ec10:	b	1ec48 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x150>
   1ec14:	ldr	r3, [r4, #16]
   1ec18:	mov	r0, r4
   1ec1c:	ldr	r2, [r4, #20]
   1ec20:	cmp	r2, r3
   1ec24:	bcc	1ec30 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x138>
   1ec28:	ldr	r3, [r4, #44]	; 0x2c
   1ec2c:	blx	r3
   1ec30:	sub	r5, r5, #1
   1ec34:	mov	r0, r4
   1ec38:	ldrd	r2, [r6], #8
   1ec3c:	blx	r7
   1ec40:	cmn	r5, #1
   1ec44:	beq	1ecac <flatcc_json_printer_uint64_enum_vector_field@@Base+0x1b4>
   1ec48:	ldr	r3, [r4, #20]
   1ec4c:	add	r2, r3, #1
   1ec50:	str	r2, [r4, #20]
   1ec54:	strb	r8, [r3]
   1ec58:	ldrb	r1, [r4, #25]
   1ec5c:	cmp	r1, #0
   1ec60:	beq	1ec14 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x11c>
   1ec64:	ldr	r3, [r4, #20]
   1ec68:	mov	r1, #32
   1ec6c:	mov	r0, r4
   1ec70:	add	r2, r3, #1
   1ec74:	str	r2, [r4, #20]
   1ec78:	strb	r9, [r3]
   1ec7c:	ldrb	r2, [r4, #25]
   1ec80:	ldr	lr, [r4, #16]
   1ec84:	ldr	sl, [r4, #32]
   1ec88:	ldr	r3, [r4, #20]
   1ec8c:	mul	sl, sl, r2
   1ec90:	add	ip, r3, sl
   1ec94:	mov	r2, sl
   1ec98:	cmp	lr, ip
   1ec9c:	bcs	1ed00 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x208>
   1eca0:	mov	r1, sl
   1eca4:	bl	14724 <test_print@@Base+0xea0>
   1eca8:	b	1ec30 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x138>
   1ecac:	ldrb	r2, [r4, #25]
   1ecb0:	ldr	r3, [r4, #20]
   1ecb4:	cmp	r2, #0
   1ecb8:	add	r2, r3, #1
   1ecbc:	bne	1ed18 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x220>
   1ecc0:	mov	r1, #93	; 0x5d
   1ecc4:	str	r2, [r4, #20]
   1ecc8:	strb	r1, [r3]
   1eccc:	ldrd	r4, [sp]
   1ecd0:	ldrd	r6, [sp, #8]
   1ecd4:	ldrd	r8, [sp, #16]
   1ecd8:	ldr	sl, [sp, #24]
   1ecdc:	add	sp, sp, #28
   1ece0:	pop	{pc}		; (ldr pc, [sp], #4)
   1ece4:	ldrd	r4, [sp]
   1ece8:	ldrd	r6, [sp, #8]
   1ecec:	ldrd	r8, [sp, #16]
   1ecf0:	ldr	sl, [sp, #24]
   1ecf4:	ldr	lr, [sp, #28]
   1ecf8:	add	sp, sp, #32
   1ecfc:	b	1cbc8 <flatcc_json_printer_uint64_vector_field@@Base>
   1ed00:	mov	r0, r3
   1ed04:	bl	124c4 <memset@plt>
   1ed08:	ldr	r3, [r4, #20]
   1ed0c:	add	sl, r3, sl
   1ed10:	str	sl, [r4, #20]
   1ed14:	b	1ec30 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x138>
   1ed18:	mov	r1, #10
   1ed1c:	str	r2, [r4, #20]
   1ed20:	strb	r1, [r3]
   1ed24:	ldrb	r3, [r4, #25]
   1ed28:	ldr	r2, [r4, #32]
   1ed2c:	ldr	r1, [r4, #16]
   1ed30:	ldr	r0, [r4, #20]
   1ed34:	sub	r2, r2, #1
   1ed38:	mul	r5, r2, r3
   1ed3c:	str	r2, [r4, #32]
   1ed40:	add	r3, r0, r5
   1ed44:	cmp	r1, r3
   1ed48:	bcs	1ed80 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x288>
   1ed4c:	mov	r1, r5
   1ed50:	mov	r0, r4
   1ed54:	bl	14724 <test_print@@Base+0xea0>
   1ed58:	ldr	r3, [r4, #20]
   1ed5c:	add	r2, r3, #1
   1ed60:	b	1ecc0 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x1c8>
   1ed64:	add	r1, r3, #1
   1ed68:	mov	r2, #10
   1ed6c:	mov	r0, r4
   1ed70:	str	r1, [r4, #20]
   1ed74:	strb	r2, [r3]
   1ed78:	bl	147d8 <test_print@@Base+0xf54>
   1ed7c:	b	1ebec <flatcc_json_printer_uint64_enum_vector_field@@Base+0xf4>
   1ed80:	mov	r2, r5
   1ed84:	mov	r1, #32
   1ed88:	bl	124c4 <memset@plt>
   1ed8c:	ldr	r3, [r4, #20]
   1ed90:	add	r3, r3, r5
   1ed94:	add	r2, r3, #1
   1ed98:	b	1ecc0 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x1c8>

0001ed9c <flatcc_json_printer_int8_enum_vector_field@@Base>:
   1ed9c:	strd	r4, [sp, #-32]!	; 0xffffffe0
   1eda0:	strd	r6, [sp, #8]
   1eda4:	strd	r8, [sp, #16]
   1eda8:	str	sl, [sp, #24]
   1edac:	str	lr, [sp, #28]
   1edb0:	ldrb	r8, [r0, #27]
   1edb4:	ldr	r7, [sp, #32]
   1edb8:	ldr	r6, [sp, #36]	; 0x24
   1edbc:	cmp	r8, #0
   1edc0:	bne	1ef8c <flatcc_json_printer_int8_enum_vector_field@@Base+0x1f0>
   1edc4:	mov	r5, r3
   1edc8:	ldr	r3, [r1, #8]
   1edcc:	add	r2, r2, #2
   1edd0:	lsl	r2, r2, #1
   1edd4:	mov	lr, r1
   1edd8:	cmp	r3, r2
   1eddc:	ble	1ef74 <flatcc_json_printer_int8_enum_vector_field@@Base+0x1d8>
   1ede0:	ldr	r3, [r1, #4]
   1ede4:	ldrh	r2, [r3, r2]
   1ede8:	cmp	r2, #0
   1edec:	beq	1ef74 <flatcc_json_printer_int8_enum_vector_field@@Base+0x1d8>
   1edf0:	ldr	r3, [r1]
   1edf4:	adds	ip, r3, r2
   1edf8:	beq	1ef74 <flatcc_json_printer_int8_enum_vector_field@@Base+0x1d8>
   1edfc:	ldr	r1, [r1, #16]
   1ee00:	mov	r4, r0
   1ee04:	add	r0, r1, #1
   1ee08:	cmp	r1, #0
   1ee0c:	str	r0, [lr, #16]
   1ee10:	beq	1ee28 <flatcc_json_printer_int8_enum_vector_field@@Base+0x8c>
   1ee14:	ldr	r1, [r4, #20]
   1ee18:	mov	r0, #44	; 0x2c
   1ee1c:	add	lr, r1, #1
   1ee20:	str	lr, [r4, #20]
   1ee24:	strb	r0, [r1]
   1ee28:	ldr	r3, [r3, r2]
   1ee2c:	mov	r1, r5
   1ee30:	mov	r2, r7
   1ee34:	mov	r0, r4
   1ee38:	add	r7, ip, r3
   1ee3c:	ldr	r8, [ip, r3]
   1ee40:	bl	14d0c <test_print@@Base+0x1488>
   1ee44:	ldr	r2, [r4, #20]
   1ee48:	mov	r1, #91	; 0x5b
   1ee4c:	ldr	r3, [r4, #32]
   1ee50:	cmp	r8, #0
   1ee54:	add	r0, r2, #1
   1ee58:	add	r3, r3, #1
   1ee5c:	str	r0, [r4, #20]
   1ee60:	str	r3, [r4, #32]
   1ee64:	strb	r1, [r2]
   1ee68:	beq	1ef54 <flatcc_json_printer_int8_enum_vector_field@@Base+0x1b8>
   1ee6c:	ldrb	r1, [r4, #25]
   1ee70:	ldr	r3, [r4, #20]
   1ee74:	cmp	r1, #0
   1ee78:	bne	1f00c <flatcc_json_printer_int8_enum_vector_field@@Base+0x270>
   1ee7c:	ldr	r2, [r4, #16]
   1ee80:	cmp	r2, r3
   1ee84:	bhi	1ee94 <flatcc_json_printer_int8_enum_vector_field@@Base+0xf8>
   1ee88:	mov	r0, r4
   1ee8c:	ldr	r3, [r4, #44]	; 0x2c
   1ee90:	blx	r3
   1ee94:	ldrsb	r1, [r7, #4]
   1ee98:	mov	r0, r4
   1ee9c:	add	r5, r7, #5
   1eea0:	blx	r6
   1eea4:	cmp	r8, #1
   1eea8:	beq	1ef54 <flatcc_json_printer_int8_enum_vector_field@@Base+0x1b8>
   1eeac:	add	r3, r8, #4
   1eeb0:	mov	r9, #10
   1eeb4:	mov	r8, #44	; 0x2c
   1eeb8:	add	r7, r7, r3
   1eebc:	b	1eef0 <flatcc_json_printer_int8_enum_vector_field@@Base+0x154>
   1eec0:	ldr	r3, [r4, #16]
   1eec4:	mov	r0, r4
   1eec8:	ldr	r2, [r4, #20]
   1eecc:	cmp	r2, r3
   1eed0:	bcc	1eedc <flatcc_json_printer_int8_enum_vector_field@@Base+0x140>
   1eed4:	ldr	r3, [r4, #44]	; 0x2c
   1eed8:	blx	r3
   1eedc:	ldrsb	r1, [r5], #1
   1eee0:	mov	r0, r4
   1eee4:	blx	r6
   1eee8:	cmp	r5, r7
   1eeec:	beq	1ef54 <flatcc_json_printer_int8_enum_vector_field@@Base+0x1b8>
   1eef0:	ldr	r3, [r4, #20]
   1eef4:	add	r2, r3, #1
   1eef8:	str	r2, [r4, #20]
   1eefc:	strb	r8, [r3]
   1ef00:	ldrb	r1, [r4, #25]
   1ef04:	cmp	r1, #0
   1ef08:	beq	1eec0 <flatcc_json_printer_int8_enum_vector_field@@Base+0x124>
   1ef0c:	ldr	r3, [r4, #20]
   1ef10:	mov	r1, #32
   1ef14:	mov	r0, r4
   1ef18:	add	r2, r3, #1
   1ef1c:	str	r2, [r4, #20]
   1ef20:	strb	r9, [r3]
   1ef24:	ldrb	r2, [r4, #25]
   1ef28:	ldr	lr, [r4, #16]
   1ef2c:	ldr	sl, [r4, #32]
   1ef30:	ldr	r3, [r4, #20]
   1ef34:	mul	sl, sl, r2
   1ef38:	add	ip, r3, sl
   1ef3c:	mov	r2, sl
   1ef40:	cmp	lr, ip
   1ef44:	bcs	1efa8 <flatcc_json_printer_int8_enum_vector_field@@Base+0x20c>
   1ef48:	mov	r1, sl
   1ef4c:	bl	14724 <test_print@@Base+0xea0>
   1ef50:	b	1eedc <flatcc_json_printer_int8_enum_vector_field@@Base+0x140>
   1ef54:	ldrb	r2, [r4, #25]
   1ef58:	ldr	r3, [r4, #20]
   1ef5c:	cmp	r2, #0
   1ef60:	add	r2, r3, #1
   1ef64:	bne	1efc0 <flatcc_json_printer_int8_enum_vector_field@@Base+0x224>
   1ef68:	mov	r1, #93	; 0x5d
   1ef6c:	str	r2, [r4, #20]
   1ef70:	strb	r1, [r3]
   1ef74:	ldrd	r4, [sp]
   1ef78:	ldrd	r6, [sp, #8]
   1ef7c:	ldrd	r8, [sp, #16]
   1ef80:	ldr	sl, [sp, #24]
   1ef84:	add	sp, sp, #28
   1ef88:	pop	{pc}		; (ldr pc, [sp], #4)
   1ef8c:	ldrd	r4, [sp]
   1ef90:	ldrd	r6, [sp, #8]
   1ef94:	ldrd	r8, [sp, #16]
   1ef98:	ldr	sl, [sp, #24]
   1ef9c:	ldr	lr, [sp, #28]
   1efa0:	add	sp, sp, #32
   1efa4:	b	1ce50 <flatcc_json_printer_int8_vector_field@@Base>
   1efa8:	mov	r0, r3
   1efac:	bl	124c4 <memset@plt>
   1efb0:	ldr	r3, [r4, #20]
   1efb4:	add	sl, r3, sl
   1efb8:	str	sl, [r4, #20]
   1efbc:	b	1eedc <flatcc_json_printer_int8_enum_vector_field@@Base+0x140>
   1efc0:	mov	r1, #10
   1efc4:	str	r2, [r4, #20]
   1efc8:	strb	r1, [r3]
   1efcc:	ldrb	r3, [r4, #25]
   1efd0:	ldr	r2, [r4, #32]
   1efd4:	ldr	r1, [r4, #16]
   1efd8:	ldr	r0, [r4, #20]
   1efdc:	sub	r2, r2, #1
   1efe0:	mul	r5, r2, r3
   1efe4:	str	r2, [r4, #32]
   1efe8:	add	r3, r0, r5
   1efec:	cmp	r1, r3
   1eff0:	bcs	1f028 <flatcc_json_printer_int8_enum_vector_field@@Base+0x28c>
   1eff4:	mov	r1, r5
   1eff8:	mov	r0, r4
   1effc:	bl	14724 <test_print@@Base+0xea0>
   1f000:	ldr	r3, [r4, #20]
   1f004:	add	r2, r3, #1
   1f008:	b	1ef68 <flatcc_json_printer_int8_enum_vector_field@@Base+0x1cc>
   1f00c:	add	r1, r3, #1
   1f010:	mov	r2, #10
   1f014:	mov	r0, r4
   1f018:	str	r1, [r4, #20]
   1f01c:	strb	r2, [r3]
   1f020:	bl	147d8 <test_print@@Base+0xf54>
   1f024:	b	1ee94 <flatcc_json_printer_int8_enum_vector_field@@Base+0xf8>
   1f028:	mov	r2, r5
   1f02c:	mov	r1, #32
   1f030:	bl	124c4 <memset@plt>
   1f034:	ldr	r3, [r4, #20]
   1f038:	add	r3, r3, r5
   1f03c:	add	r2, r3, #1
   1f040:	b	1ef68 <flatcc_json_printer_int8_enum_vector_field@@Base+0x1cc>

0001f044 <flatcc_json_printer_int16_enum_vector_field@@Base>:
   1f044:	strd	r4, [sp, #-32]!	; 0xffffffe0
   1f048:	strd	r6, [sp, #8]
   1f04c:	strd	r8, [sp, #16]
   1f050:	str	sl, [sp, #24]
   1f054:	str	lr, [sp, #28]
   1f058:	ldrb	r8, [r0, #27]
   1f05c:	ldrd	r6, [sp, #32]
   1f060:	cmp	r8, #0
   1f064:	bne	1f230 <flatcc_json_printer_int16_enum_vector_field@@Base+0x1ec>
   1f068:	mov	r5, r3
   1f06c:	ldr	r3, [r1, #8]
   1f070:	add	r2, r2, #2
   1f074:	lsl	r2, r2, #1
   1f078:	mov	lr, r1
   1f07c:	cmp	r3, r2
   1f080:	ble	1f218 <flatcc_json_printer_int16_enum_vector_field@@Base+0x1d4>
   1f084:	ldr	r3, [r1, #4]
   1f088:	ldrh	r2, [r3, r2]
   1f08c:	cmp	r2, #0
   1f090:	beq	1f218 <flatcc_json_printer_int16_enum_vector_field@@Base+0x1d4>
   1f094:	ldr	r3, [r1]
   1f098:	adds	ip, r3, r2
   1f09c:	beq	1f218 <flatcc_json_printer_int16_enum_vector_field@@Base+0x1d4>
   1f0a0:	ldr	r1, [r1, #16]
   1f0a4:	mov	r4, r0
   1f0a8:	add	r0, r1, #1
   1f0ac:	cmp	r1, #0
   1f0b0:	str	r0, [lr, #16]
   1f0b4:	beq	1f0cc <flatcc_json_printer_int16_enum_vector_field@@Base+0x88>
   1f0b8:	ldr	r1, [r4, #20]
   1f0bc:	mov	r0, #44	; 0x2c
   1f0c0:	add	lr, r1, #1
   1f0c4:	str	lr, [r4, #20]
   1f0c8:	strb	r0, [r1]
   1f0cc:	ldr	r3, [r3, r2]
   1f0d0:	mov	r1, r5
   1f0d4:	mov	r2, r6
   1f0d8:	mov	r0, r4
   1f0dc:	add	r6, ip, r3
   1f0e0:	ldr	r5, [ip, r3]
   1f0e4:	bl	14d0c <test_print@@Base+0x1488>
   1f0e8:	ldr	r2, [r4, #20]
   1f0ec:	mov	r1, #91	; 0x5b
   1f0f0:	ldr	r3, [r4, #32]
   1f0f4:	cmp	r5, #0
   1f0f8:	add	r0, r2, #1
   1f0fc:	add	r3, r3, #1
   1f100:	str	r0, [r4, #20]
   1f104:	str	r3, [r4, #32]
   1f108:	strb	r1, [r2]
   1f10c:	beq	1f1f8 <flatcc_json_printer_int16_enum_vector_field@@Base+0x1b4>
   1f110:	ldrb	r1, [r4, #25]
   1f114:	ldr	r3, [r4, #20]
   1f118:	cmp	r1, #0
   1f11c:	bne	1f2b0 <flatcc_json_printer_int16_enum_vector_field@@Base+0x26c>
   1f120:	ldr	r2, [r4, #16]
   1f124:	cmp	r2, r3
   1f128:	bhi	1f138 <flatcc_json_printer_int16_enum_vector_field@@Base+0xf4>
   1f12c:	mov	r0, r4
   1f130:	ldr	r3, [r4, #44]	; 0x2c
   1f134:	blx	r3
   1f138:	ldrsh	r1, [r6, #4]
   1f13c:	mov	r0, r4
   1f140:	add	r6, r6, #6
   1f144:	blx	r7
   1f148:	cmp	r5, #1
   1f14c:	sub	r5, r5, #2
   1f150:	beq	1f1f8 <flatcc_json_printer_int16_enum_vector_field@@Base+0x1b4>
   1f154:	mov	r8, #44	; 0x2c
   1f158:	mov	r9, #10
   1f15c:	b	1f194 <flatcc_json_printer_int16_enum_vector_field@@Base+0x150>
   1f160:	ldr	r3, [r4, #16]
   1f164:	mov	r0, r4
   1f168:	ldr	r2, [r4, #20]
   1f16c:	cmp	r2, r3
   1f170:	bcc	1f17c <flatcc_json_printer_int16_enum_vector_field@@Base+0x138>
   1f174:	ldr	r3, [r4, #44]	; 0x2c
   1f178:	blx	r3
   1f17c:	sub	r5, r5, #1
   1f180:	ldrsh	r1, [r6], #2
   1f184:	mov	r0, r4
   1f188:	blx	r7
   1f18c:	cmn	r5, #1
   1f190:	beq	1f1f8 <flatcc_json_printer_int16_enum_vector_field@@Base+0x1b4>
   1f194:	ldr	r3, [r4, #20]
   1f198:	add	r2, r3, #1
   1f19c:	str	r2, [r4, #20]
   1f1a0:	strb	r8, [r3]
   1f1a4:	ldrb	r1, [r4, #25]
   1f1a8:	cmp	r1, #0
   1f1ac:	beq	1f160 <flatcc_json_printer_int16_enum_vector_field@@Base+0x11c>
   1f1b0:	ldr	r3, [r4, #20]
   1f1b4:	mov	r1, #32
   1f1b8:	mov	r0, r4
   1f1bc:	add	r2, r3, #1
   1f1c0:	str	r2, [r4, #20]
   1f1c4:	strb	r9, [r3]
   1f1c8:	ldrb	r2, [r4, #25]
   1f1cc:	ldr	lr, [r4, #16]
   1f1d0:	ldr	sl, [r4, #32]
   1f1d4:	ldr	r3, [r4, #20]
   1f1d8:	mul	sl, sl, r2
   1f1dc:	add	ip, r3, sl
   1f1e0:	mov	r2, sl
   1f1e4:	cmp	lr, ip
   1f1e8:	bcs	1f24c <flatcc_json_printer_int16_enum_vector_field@@Base+0x208>
   1f1ec:	mov	r1, sl
   1f1f0:	bl	14724 <test_print@@Base+0xea0>
   1f1f4:	b	1f17c <flatcc_json_printer_int16_enum_vector_field@@Base+0x138>
   1f1f8:	ldrb	r2, [r4, #25]
   1f1fc:	ldr	r3, [r4, #20]
   1f200:	cmp	r2, #0
   1f204:	add	r2, r3, #1
   1f208:	bne	1f264 <flatcc_json_printer_int16_enum_vector_field@@Base+0x220>
   1f20c:	mov	r1, #93	; 0x5d
   1f210:	str	r2, [r4, #20]
   1f214:	strb	r1, [r3]
   1f218:	ldrd	r4, [sp]
   1f21c:	ldrd	r6, [sp, #8]
   1f220:	ldrd	r8, [sp, #16]
   1f224:	ldr	sl, [sp, #24]
   1f228:	add	sp, sp, #28
   1f22c:	pop	{pc}		; (ldr pc, [sp], #4)
   1f230:	ldrd	r4, [sp]
   1f234:	ldrd	r6, [sp, #8]
   1f238:	ldrd	r8, [sp, #16]
   1f23c:	ldr	sl, [sp, #24]
   1f240:	ldr	lr, [sp, #28]
   1f244:	add	sp, sp, #32
   1f248:	b	1d1bc <flatcc_json_printer_int16_vector_field@@Base>
   1f24c:	mov	r0, r3
   1f250:	bl	124c4 <memset@plt>
   1f254:	ldr	r3, [r4, #20]
   1f258:	add	sl, r3, sl
   1f25c:	str	sl, [r4, #20]
   1f260:	b	1f17c <flatcc_json_printer_int16_enum_vector_field@@Base+0x138>
   1f264:	mov	r1, #10
   1f268:	str	r2, [r4, #20]
   1f26c:	strb	r1, [r3]
   1f270:	ldrb	r3, [r4, #25]
   1f274:	ldr	r2, [r4, #32]
   1f278:	ldr	r1, [r4, #16]
   1f27c:	ldr	r0, [r4, #20]
   1f280:	sub	r2, r2, #1
   1f284:	mul	r5, r2, r3
   1f288:	str	r2, [r4, #32]
   1f28c:	add	r3, r0, r5
   1f290:	cmp	r1, r3
   1f294:	bcs	1f2cc <flatcc_json_printer_int16_enum_vector_field@@Base+0x288>
   1f298:	mov	r1, r5
   1f29c:	mov	r0, r4
   1f2a0:	bl	14724 <test_print@@Base+0xea0>
   1f2a4:	ldr	r3, [r4, #20]
   1f2a8:	add	r2, r3, #1
   1f2ac:	b	1f20c <flatcc_json_printer_int16_enum_vector_field@@Base+0x1c8>
   1f2b0:	add	r1, r3, #1
   1f2b4:	mov	r2, #10
   1f2b8:	mov	r0, r4
   1f2bc:	str	r1, [r4, #20]
   1f2c0:	strb	r2, [r3]
   1f2c4:	bl	147d8 <test_print@@Base+0xf54>
   1f2c8:	b	1f138 <flatcc_json_printer_int16_enum_vector_field@@Base+0xf4>
   1f2cc:	mov	r2, r5
   1f2d0:	mov	r1, #32
   1f2d4:	bl	124c4 <memset@plt>
   1f2d8:	ldr	r3, [r4, #20]
   1f2dc:	add	r3, r3, r5
   1f2e0:	add	r2, r3, #1
   1f2e4:	b	1f20c <flatcc_json_printer_int16_enum_vector_field@@Base+0x1c8>

0001f2e8 <flatcc_json_printer_int32_enum_vector_field@@Base>:
   1f2e8:	strd	r4, [sp, #-32]!	; 0xffffffe0
   1f2ec:	strd	r6, [sp, #8]
   1f2f0:	strd	r8, [sp, #16]
   1f2f4:	str	sl, [sp, #24]
   1f2f8:	str	lr, [sp, #28]
   1f2fc:	ldrb	r8, [r0, #27]
   1f300:	ldrd	r6, [sp, #32]
   1f304:	cmp	r8, #0
   1f308:	bne	1f4d4 <flatcc_json_printer_int32_enum_vector_field@@Base+0x1ec>
   1f30c:	mov	r5, r3
   1f310:	ldr	r3, [r1, #8]
   1f314:	add	r2, r2, #2
   1f318:	lsl	r2, r2, #1
   1f31c:	mov	lr, r1
   1f320:	cmp	r3, r2
   1f324:	ble	1f4bc <flatcc_json_printer_int32_enum_vector_field@@Base+0x1d4>
   1f328:	ldr	r3, [r1, #4]
   1f32c:	ldrh	r2, [r3, r2]
   1f330:	cmp	r2, #0
   1f334:	beq	1f4bc <flatcc_json_printer_int32_enum_vector_field@@Base+0x1d4>
   1f338:	ldr	r3, [r1]
   1f33c:	adds	ip, r3, r2
   1f340:	beq	1f4bc <flatcc_json_printer_int32_enum_vector_field@@Base+0x1d4>
   1f344:	ldr	r1, [r1, #16]
   1f348:	mov	r4, r0
   1f34c:	add	r0, r1, #1
   1f350:	cmp	r1, #0
   1f354:	str	r0, [lr, #16]
   1f358:	beq	1f370 <flatcc_json_printer_int32_enum_vector_field@@Base+0x88>
   1f35c:	ldr	r1, [r4, #20]
   1f360:	mov	r0, #44	; 0x2c
   1f364:	add	lr, r1, #1
   1f368:	str	lr, [r4, #20]
   1f36c:	strb	r0, [r1]
   1f370:	ldr	r3, [r3, r2]
   1f374:	mov	r1, r5
   1f378:	mov	r2, r6
   1f37c:	mov	r0, r4
   1f380:	add	r6, ip, r3
   1f384:	ldr	r5, [ip, r3]
   1f388:	bl	14d0c <test_print@@Base+0x1488>
   1f38c:	ldr	r2, [r4, #20]
   1f390:	mov	r1, #91	; 0x5b
   1f394:	ldr	r3, [r4, #32]
   1f398:	cmp	r5, #0
   1f39c:	add	r0, r2, #1
   1f3a0:	add	r3, r3, #1
   1f3a4:	str	r0, [r4, #20]
   1f3a8:	str	r3, [r4, #32]
   1f3ac:	strb	r1, [r2]
   1f3b0:	beq	1f49c <flatcc_json_printer_int32_enum_vector_field@@Base+0x1b4>
   1f3b4:	ldrb	r1, [r4, #25]
   1f3b8:	ldr	r3, [r4, #20]
   1f3bc:	cmp	r1, #0
   1f3c0:	bne	1f554 <flatcc_json_printer_int32_enum_vector_field@@Base+0x26c>
   1f3c4:	ldr	r2, [r4, #16]
   1f3c8:	cmp	r2, r3
   1f3cc:	bhi	1f3dc <flatcc_json_printer_int32_enum_vector_field@@Base+0xf4>
   1f3d0:	mov	r0, r4
   1f3d4:	ldr	r3, [r4, #44]	; 0x2c
   1f3d8:	blx	r3
   1f3dc:	mov	r0, r4
   1f3e0:	ldr	r1, [r6, #4]
   1f3e4:	add	r6, r6, #8
   1f3e8:	blx	r7
   1f3ec:	cmp	r5, #1
   1f3f0:	sub	r5, r5, #2
   1f3f4:	beq	1f49c <flatcc_json_printer_int32_enum_vector_field@@Base+0x1b4>
   1f3f8:	mov	r8, #44	; 0x2c
   1f3fc:	mov	r9, #10
   1f400:	b	1f438 <flatcc_json_printer_int32_enum_vector_field@@Base+0x150>
   1f404:	ldr	r3, [r4, #16]
   1f408:	mov	r0, r4
   1f40c:	ldr	r2, [r4, #20]
   1f410:	cmp	r2, r3
   1f414:	bcc	1f420 <flatcc_json_printer_int32_enum_vector_field@@Base+0x138>
   1f418:	ldr	r3, [r4, #44]	; 0x2c
   1f41c:	blx	r3
   1f420:	sub	r5, r5, #1
   1f424:	mov	r0, r4
   1f428:	ldr	r1, [r6], #4
   1f42c:	blx	r7
   1f430:	cmn	r5, #1
   1f434:	beq	1f49c <flatcc_json_printer_int32_enum_vector_field@@Base+0x1b4>
   1f438:	ldr	r3, [r4, #20]
   1f43c:	add	r2, r3, #1
   1f440:	str	r2, [r4, #20]
   1f444:	strb	r8, [r3]
   1f448:	ldrb	r1, [r4, #25]
   1f44c:	cmp	r1, #0
   1f450:	beq	1f404 <flatcc_json_printer_int32_enum_vector_field@@Base+0x11c>
   1f454:	ldr	r3, [r4, #20]
   1f458:	mov	r1, #32
   1f45c:	mov	r0, r4
   1f460:	add	r2, r3, #1
   1f464:	str	r2, [r4, #20]
   1f468:	strb	r9, [r3]
   1f46c:	ldrb	r2, [r4, #25]
   1f470:	ldr	lr, [r4, #16]
   1f474:	ldr	sl, [r4, #32]
   1f478:	ldr	r3, [r4, #20]
   1f47c:	mul	sl, sl, r2
   1f480:	add	ip, r3, sl
   1f484:	mov	r2, sl
   1f488:	cmp	lr, ip
   1f48c:	bcs	1f4f0 <flatcc_json_printer_int32_enum_vector_field@@Base+0x208>
   1f490:	mov	r1, sl
   1f494:	bl	14724 <test_print@@Base+0xea0>
   1f498:	b	1f420 <flatcc_json_printer_int32_enum_vector_field@@Base+0x138>
   1f49c:	ldrb	r2, [r4, #25]
   1f4a0:	ldr	r3, [r4, #20]
   1f4a4:	cmp	r2, #0
   1f4a8:	add	r2, r3, #1
   1f4ac:	bne	1f508 <flatcc_json_printer_int32_enum_vector_field@@Base+0x220>
   1f4b0:	mov	r1, #93	; 0x5d
   1f4b4:	str	r2, [r4, #20]
   1f4b8:	strb	r1, [r3]
   1f4bc:	ldrd	r4, [sp]
   1f4c0:	ldrd	r6, [sp, #8]
   1f4c4:	ldrd	r8, [sp, #16]
   1f4c8:	ldr	sl, [sp, #24]
   1f4cc:	add	sp, sp, #28
   1f4d0:	pop	{pc}		; (ldr pc, [sp], #4)
   1f4d4:	ldrd	r4, [sp]
   1f4d8:	ldrd	r6, [sp, #8]
   1f4dc:	ldrd	r8, [sp, #16]
   1f4e0:	ldr	sl, [sp, #24]
   1f4e4:	ldr	lr, [sp, #28]
   1f4e8:	add	sp, sp, #32
   1f4ec:	b	1d4c0 <flatcc_json_printer_int32_vector_field@@Base>
   1f4f0:	mov	r0, r3
   1f4f4:	bl	124c4 <memset@plt>
   1f4f8:	ldr	r3, [r4, #20]
   1f4fc:	add	sl, r3, sl
   1f500:	str	sl, [r4, #20]
   1f504:	b	1f420 <flatcc_json_printer_int32_enum_vector_field@@Base+0x138>
   1f508:	mov	r1, #10
   1f50c:	str	r2, [r4, #20]
   1f510:	strb	r1, [r3]
   1f514:	ldrb	r3, [r4, #25]
   1f518:	ldr	r2, [r4, #32]
   1f51c:	ldr	r1, [r4, #16]
   1f520:	ldr	r0, [r4, #20]
   1f524:	sub	r2, r2, #1
   1f528:	mul	r5, r2, r3
   1f52c:	str	r2, [r4, #32]
   1f530:	add	r3, r0, r5
   1f534:	cmp	r1, r3
   1f538:	bcs	1f570 <flatcc_json_printer_int32_enum_vector_field@@Base+0x288>
   1f53c:	mov	r1, r5
   1f540:	mov	r0, r4
   1f544:	bl	14724 <test_print@@Base+0xea0>
   1f548:	ldr	r3, [r4, #20]
   1f54c:	add	r2, r3, #1
   1f550:	b	1f4b0 <flatcc_json_printer_int32_enum_vector_field@@Base+0x1c8>
   1f554:	add	r1, r3, #1
   1f558:	mov	r2, #10
   1f55c:	mov	r0, r4
   1f560:	str	r1, [r4, #20]
   1f564:	strb	r2, [r3]
   1f568:	bl	147d8 <test_print@@Base+0xf54>
   1f56c:	b	1f3dc <flatcc_json_printer_int32_enum_vector_field@@Base+0xf4>
   1f570:	mov	r2, r5
   1f574:	mov	r1, #32
   1f578:	bl	124c4 <memset@plt>
   1f57c:	ldr	r3, [r4, #20]
   1f580:	add	r3, r3, r5
   1f584:	add	r2, r3, #1
   1f588:	b	1f4b0 <flatcc_json_printer_int32_enum_vector_field@@Base+0x1c8>

0001f58c <flatcc_json_printer_int64_enum_vector_field@@Base>:
   1f58c:	strd	r4, [sp, #-32]!	; 0xffffffe0
   1f590:	strd	r6, [sp, #8]
   1f594:	strd	r8, [sp, #16]
   1f598:	str	sl, [sp, #24]
   1f59c:	str	lr, [sp, #28]
   1f5a0:	ldrb	r8, [r0, #27]
   1f5a4:	ldrd	r6, [sp, #32]
   1f5a8:	cmp	r8, #0
   1f5ac:	bne	1f778 <flatcc_json_printer_int64_enum_vector_field@@Base+0x1ec>
   1f5b0:	mov	r5, r3
   1f5b4:	ldr	r3, [r1, #8]
   1f5b8:	add	r2, r2, #2
   1f5bc:	lsl	r2, r2, #1
   1f5c0:	mov	lr, r1
   1f5c4:	cmp	r3, r2
   1f5c8:	ble	1f760 <flatcc_json_printer_int64_enum_vector_field@@Base+0x1d4>
   1f5cc:	ldr	r3, [r1, #4]
   1f5d0:	ldrh	r2, [r3, r2]
   1f5d4:	cmp	r2, #0
   1f5d8:	beq	1f760 <flatcc_json_printer_int64_enum_vector_field@@Base+0x1d4>
   1f5dc:	ldr	r3, [r1]
   1f5e0:	adds	ip, r3, r2
   1f5e4:	beq	1f760 <flatcc_json_printer_int64_enum_vector_field@@Base+0x1d4>
   1f5e8:	ldr	r1, [r1, #16]
   1f5ec:	mov	r4, r0
   1f5f0:	add	r0, r1, #1
   1f5f4:	cmp	r1, #0
   1f5f8:	str	r0, [lr, #16]
   1f5fc:	beq	1f614 <flatcc_json_printer_int64_enum_vector_field@@Base+0x88>
   1f600:	ldr	r1, [r4, #20]
   1f604:	mov	r0, #44	; 0x2c
   1f608:	add	lr, r1, #1
   1f60c:	str	lr, [r4, #20]
   1f610:	strb	r0, [r1]
   1f614:	ldr	r3, [r3, r2]
   1f618:	mov	r1, r5
   1f61c:	mov	r2, r6
   1f620:	mov	r0, r4
   1f624:	add	r6, ip, r3
   1f628:	ldr	r5, [ip, r3]
   1f62c:	bl	14d0c <test_print@@Base+0x1488>
   1f630:	ldr	r2, [r4, #20]
   1f634:	mov	r1, #91	; 0x5b
   1f638:	ldr	r3, [r4, #32]
   1f63c:	cmp	r5, #0
   1f640:	add	r0, r2, #1
   1f644:	add	r3, r3, #1
   1f648:	str	r0, [r4, #20]
   1f64c:	str	r3, [r4, #32]
   1f650:	strb	r1, [r2]
   1f654:	beq	1f740 <flatcc_json_printer_int64_enum_vector_field@@Base+0x1b4>
   1f658:	ldrb	r1, [r4, #25]
   1f65c:	ldr	r3, [r4, #20]
   1f660:	cmp	r1, #0
   1f664:	bne	1f7f8 <flatcc_json_printer_int64_enum_vector_field@@Base+0x26c>
   1f668:	ldr	r2, [r4, #16]
   1f66c:	cmp	r2, r3
   1f670:	bhi	1f680 <flatcc_json_printer_int64_enum_vector_field@@Base+0xf4>
   1f674:	mov	r0, r4
   1f678:	ldr	r3, [r4, #44]	; 0x2c
   1f67c:	blx	r3
   1f680:	mov	r0, r4
   1f684:	ldrd	r2, [r6, #4]
   1f688:	add	r6, r6, #12
   1f68c:	blx	r7
   1f690:	cmp	r5, #1
   1f694:	sub	r5, r5, #2
   1f698:	beq	1f740 <flatcc_json_printer_int64_enum_vector_field@@Base+0x1b4>
   1f69c:	mov	r8, #44	; 0x2c
   1f6a0:	mov	r9, #10
   1f6a4:	b	1f6dc <flatcc_json_printer_int64_enum_vector_field@@Base+0x150>
   1f6a8:	ldr	r3, [r4, #16]
   1f6ac:	mov	r0, r4
   1f6b0:	ldr	r2, [r4, #20]
   1f6b4:	cmp	r2, r3
   1f6b8:	bcc	1f6c4 <flatcc_json_printer_int64_enum_vector_field@@Base+0x138>
   1f6bc:	ldr	r3, [r4, #44]	; 0x2c
   1f6c0:	blx	r3
   1f6c4:	sub	r5, r5, #1
   1f6c8:	mov	r0, r4
   1f6cc:	ldrd	r2, [r6], #8
   1f6d0:	blx	r7
   1f6d4:	cmn	r5, #1
   1f6d8:	beq	1f740 <flatcc_json_printer_int64_enum_vector_field@@Base+0x1b4>
   1f6dc:	ldr	r3, [r4, #20]
   1f6e0:	add	r2, r3, #1
   1f6e4:	str	r2, [r4, #20]
   1f6e8:	strb	r8, [r3]
   1f6ec:	ldrb	r1, [r4, #25]
   1f6f0:	cmp	r1, #0
   1f6f4:	beq	1f6a8 <flatcc_json_printer_int64_enum_vector_field@@Base+0x11c>
   1f6f8:	ldr	r3, [r4, #20]
   1f6fc:	mov	r1, #32
   1f700:	mov	r0, r4
   1f704:	add	r2, r3, #1
   1f708:	str	r2, [r4, #20]
   1f70c:	strb	r9, [r3]
   1f710:	ldrb	r2, [r4, #25]
   1f714:	ldr	lr, [r4, #16]
   1f718:	ldr	sl, [r4, #32]
   1f71c:	ldr	r3, [r4, #20]
   1f720:	mul	sl, sl, r2
   1f724:	add	ip, r3, sl
   1f728:	mov	r2, sl
   1f72c:	cmp	lr, ip
   1f730:	bcs	1f794 <flatcc_json_printer_int64_enum_vector_field@@Base+0x208>
   1f734:	mov	r1, sl
   1f738:	bl	14724 <test_print@@Base+0xea0>
   1f73c:	b	1f6c4 <flatcc_json_printer_int64_enum_vector_field@@Base+0x138>
   1f740:	ldrb	r2, [r4, #25]
   1f744:	ldr	r3, [r4, #20]
   1f748:	cmp	r2, #0
   1f74c:	add	r2, r3, #1
   1f750:	bne	1f7ac <flatcc_json_printer_int64_enum_vector_field@@Base+0x220>
   1f754:	mov	r1, #93	; 0x5d
   1f758:	str	r2, [r4, #20]
   1f75c:	strb	r1, [r3]
   1f760:	ldrd	r4, [sp]
   1f764:	ldrd	r6, [sp, #8]
   1f768:	ldrd	r8, [sp, #16]
   1f76c:	ldr	sl, [sp, #24]
   1f770:	add	sp, sp, #28
   1f774:	pop	{pc}		; (ldr pc, [sp], #4)
   1f778:	ldrd	r4, [sp]
   1f77c:	ldrd	r6, [sp, #8]
   1f780:	ldrd	r8, [sp, #16]
   1f784:	ldr	sl, [sp, #24]
   1f788:	ldr	lr, [sp, #28]
   1f78c:	add	sp, sp, #32
   1f790:	b	1d7b4 <flatcc_json_printer_int64_vector_field@@Base>
   1f794:	mov	r0, r3
   1f798:	bl	124c4 <memset@plt>
   1f79c:	ldr	r3, [r4, #20]
   1f7a0:	add	sl, r3, sl
   1f7a4:	str	sl, [r4, #20]
   1f7a8:	b	1f6c4 <flatcc_json_printer_int64_enum_vector_field@@Base+0x138>
   1f7ac:	mov	r1, #10
   1f7b0:	str	r2, [r4, #20]
   1f7b4:	strb	r1, [r3]
   1f7b8:	ldrb	r3, [r4, #25]
   1f7bc:	ldr	r2, [r4, #32]
   1f7c0:	ldr	r1, [r4, #16]
   1f7c4:	ldr	r0, [r4, #20]
   1f7c8:	sub	r2, r2, #1
   1f7cc:	mul	r5, r2, r3
   1f7d0:	str	r2, [r4, #32]
   1f7d4:	add	r3, r0, r5
   1f7d8:	cmp	r1, r3
   1f7dc:	bcs	1f814 <flatcc_json_printer_int64_enum_vector_field@@Base+0x288>
   1f7e0:	mov	r1, r5
   1f7e4:	mov	r0, r4
   1f7e8:	bl	14724 <test_print@@Base+0xea0>
   1f7ec:	ldr	r3, [r4, #20]
   1f7f0:	add	r2, r3, #1
   1f7f4:	b	1f754 <flatcc_json_printer_int64_enum_vector_field@@Base+0x1c8>
   1f7f8:	add	r1, r3, #1
   1f7fc:	mov	r2, #10
   1f800:	mov	r0, r4
   1f804:	str	r1, [r4, #20]
   1f808:	strb	r2, [r3]
   1f80c:	bl	147d8 <test_print@@Base+0xf54>
   1f810:	b	1f680 <flatcc_json_printer_int64_enum_vector_field@@Base+0xf4>
   1f814:	mov	r2, r5
   1f818:	mov	r1, #32
   1f81c:	bl	124c4 <memset@plt>
   1f820:	ldr	r3, [r4, #20]
   1f824:	add	r3, r3, r5
   1f828:	add	r2, r3, #1
   1f82c:	b	1f754 <flatcc_json_printer_int64_enum_vector_field@@Base+0x1c8>

0001f830 <flatcc_json_printer_bool_enum_vector_field@@Base>:
   1f830:	strd	r4, [sp, #-32]!	; 0xffffffe0
   1f834:	strd	r6, [sp, #8]
   1f838:	strd	r8, [sp, #16]
   1f83c:	str	sl, [sp, #24]
   1f840:	str	lr, [sp, #28]
   1f844:	ldrb	r8, [r0, #27]
   1f848:	ldr	r7, [sp, #32]
   1f84c:	ldr	r6, [sp, #36]	; 0x24
   1f850:	cmp	r8, #0
   1f854:	bne	1fa20 <flatcc_json_printer_bool_enum_vector_field@@Base+0x1f0>
   1f858:	mov	r5, r3
   1f85c:	ldr	r3, [r1, #8]
   1f860:	add	r2, r2, #2
   1f864:	lsl	r2, r2, #1
   1f868:	mov	lr, r1
   1f86c:	cmp	r3, r2
   1f870:	ble	1fa08 <flatcc_json_printer_bool_enum_vector_field@@Base+0x1d8>
   1f874:	ldr	r3, [r1, #4]
   1f878:	ldrh	r2, [r3, r2]
   1f87c:	cmp	r2, #0
   1f880:	beq	1fa08 <flatcc_json_printer_bool_enum_vector_field@@Base+0x1d8>
   1f884:	ldr	r3, [r1]
   1f888:	adds	ip, r3, r2
   1f88c:	beq	1fa08 <flatcc_json_printer_bool_enum_vector_field@@Base+0x1d8>
   1f890:	ldr	r1, [r1, #16]
   1f894:	mov	r4, r0
   1f898:	add	r0, r1, #1
   1f89c:	cmp	r1, #0
   1f8a0:	str	r0, [lr, #16]
   1f8a4:	beq	1f8bc <flatcc_json_printer_bool_enum_vector_field@@Base+0x8c>
   1f8a8:	ldr	r1, [r4, #20]
   1f8ac:	mov	r0, #44	; 0x2c
   1f8b0:	add	lr, r1, #1
   1f8b4:	str	lr, [r4, #20]
   1f8b8:	strb	r0, [r1]
   1f8bc:	ldr	r3, [r3, r2]
   1f8c0:	mov	r1, r5
   1f8c4:	mov	r2, r7
   1f8c8:	mov	r0, r4
   1f8cc:	add	r7, ip, r3
   1f8d0:	ldr	r8, [ip, r3]
   1f8d4:	bl	14d0c <test_print@@Base+0x1488>
   1f8d8:	ldr	r2, [r4, #20]
   1f8dc:	mov	r1, #91	; 0x5b
   1f8e0:	ldr	r3, [r4, #32]
   1f8e4:	cmp	r8, #0
   1f8e8:	add	r0, r2, #1
   1f8ec:	add	r3, r3, #1
   1f8f0:	str	r0, [r4, #20]
   1f8f4:	str	r3, [r4, #32]
   1f8f8:	strb	r1, [r2]
   1f8fc:	beq	1f9e8 <flatcc_json_printer_bool_enum_vector_field@@Base+0x1b8>
   1f900:	ldrb	r1, [r4, #25]
   1f904:	ldr	r3, [r4, #20]
   1f908:	cmp	r1, #0
   1f90c:	bne	1faa0 <flatcc_json_printer_bool_enum_vector_field@@Base+0x270>
   1f910:	ldr	r2, [r4, #16]
   1f914:	cmp	r2, r3
   1f918:	bhi	1f928 <flatcc_json_printer_bool_enum_vector_field@@Base+0xf8>
   1f91c:	mov	r0, r4
   1f920:	ldr	r3, [r4, #44]	; 0x2c
   1f924:	blx	r3
   1f928:	ldrb	r1, [r7, #4]
   1f92c:	mov	r0, r4
   1f930:	add	r5, r7, #5
   1f934:	blx	r6
   1f938:	cmp	r8, #1
   1f93c:	beq	1f9e8 <flatcc_json_printer_bool_enum_vector_field@@Base+0x1b8>
   1f940:	add	r3, r8, #4
   1f944:	mov	r9, #10
   1f948:	mov	r8, #44	; 0x2c
   1f94c:	add	r7, r7, r3
   1f950:	b	1f984 <flatcc_json_printer_bool_enum_vector_field@@Base+0x154>
   1f954:	ldr	r3, [r4, #16]
   1f958:	mov	r0, r4
   1f95c:	ldr	r2, [r4, #20]
   1f960:	cmp	r2, r3
   1f964:	bcc	1f970 <flatcc_json_printer_bool_enum_vector_field@@Base+0x140>
   1f968:	ldr	r3, [r4, #44]	; 0x2c
   1f96c:	blx	r3
   1f970:	ldrb	r1, [r5], #1
   1f974:	mov	r0, r4
   1f978:	blx	r6
   1f97c:	cmp	r5, r7
   1f980:	beq	1f9e8 <flatcc_json_printer_bool_enum_vector_field@@Base+0x1b8>
   1f984:	ldr	r3, [r4, #20]
   1f988:	add	r2, r3, #1
   1f98c:	str	r2, [r4, #20]
   1f990:	strb	r8, [r3]
   1f994:	ldrb	r1, [r4, #25]
   1f998:	cmp	r1, #0
   1f99c:	beq	1f954 <flatcc_json_printer_bool_enum_vector_field@@Base+0x124>
   1f9a0:	ldr	r3, [r4, #20]
   1f9a4:	mov	r1, #32
   1f9a8:	mov	r0, r4
   1f9ac:	add	r2, r3, #1
   1f9b0:	str	r2, [r4, #20]
   1f9b4:	strb	r9, [r3]
   1f9b8:	ldrb	r2, [r4, #25]
   1f9bc:	ldr	lr, [r4, #16]
   1f9c0:	ldr	sl, [r4, #32]
   1f9c4:	ldr	r3, [r4, #20]
   1f9c8:	mul	sl, sl, r2
   1f9cc:	add	ip, r3, sl
   1f9d0:	mov	r2, sl
   1f9d4:	cmp	lr, ip
   1f9d8:	bcs	1fa3c <flatcc_json_printer_bool_enum_vector_field@@Base+0x20c>
   1f9dc:	mov	r1, sl
   1f9e0:	bl	14724 <test_print@@Base+0xea0>
   1f9e4:	b	1f970 <flatcc_json_printer_bool_enum_vector_field@@Base+0x140>
   1f9e8:	ldrb	r2, [r4, #25]
   1f9ec:	ldr	r3, [r4, #20]
   1f9f0:	cmp	r2, #0
   1f9f4:	add	r2, r3, #1
   1f9f8:	bne	1fa54 <flatcc_json_printer_bool_enum_vector_field@@Base+0x224>
   1f9fc:	mov	r1, #93	; 0x5d
   1fa00:	str	r2, [r4, #20]
   1fa04:	strb	r1, [r3]
   1fa08:	ldrd	r4, [sp]
   1fa0c:	ldrd	r6, [sp, #8]
   1fa10:	ldrd	r8, [sp, #16]
   1fa14:	ldr	sl, [sp, #24]
   1fa18:	add	sp, sp, #28
   1fa1c:	pop	{pc}		; (ldr pc, [sp], #4)
   1fa20:	ldrd	r4, [sp]
   1fa24:	ldrd	r6, [sp, #8]
   1fa28:	ldrd	r8, [sp, #16]
   1fa2c:	ldr	sl, [sp, #24]
   1fa30:	ldr	lr, [sp, #28]
   1fa34:	add	sp, sp, #32
   1fa38:	b	1dab8 <flatcc_json_printer_bool_vector_field@@Base>
   1fa3c:	mov	r0, r3
   1fa40:	bl	124c4 <memset@plt>
   1fa44:	ldr	r3, [r4, #20]
   1fa48:	add	sl, r3, sl
   1fa4c:	str	sl, [r4, #20]
   1fa50:	b	1f970 <flatcc_json_printer_bool_enum_vector_field@@Base+0x140>
   1fa54:	mov	r1, #10
   1fa58:	str	r2, [r4, #20]
   1fa5c:	strb	r1, [r3]
   1fa60:	ldrb	r3, [r4, #25]
   1fa64:	ldr	r2, [r4, #32]
   1fa68:	ldr	r1, [r4, #16]
   1fa6c:	ldr	r0, [r4, #20]
   1fa70:	sub	r2, r2, #1
   1fa74:	mul	r5, r2, r3
   1fa78:	str	r2, [r4, #32]
   1fa7c:	add	r3, r0, r5
   1fa80:	cmp	r1, r3
   1fa84:	bcs	1fabc <flatcc_json_printer_bool_enum_vector_field@@Base+0x28c>
   1fa88:	mov	r1, r5
   1fa8c:	mov	r0, r4
   1fa90:	bl	14724 <test_print@@Base+0xea0>
   1fa94:	ldr	r3, [r4, #20]
   1fa98:	add	r2, r3, #1
   1fa9c:	b	1f9fc <flatcc_json_printer_bool_enum_vector_field@@Base+0x1cc>
   1faa0:	add	r1, r3, #1
   1faa4:	mov	r2, #10
   1faa8:	mov	r0, r4
   1faac:	str	r1, [r4, #20]
   1fab0:	strb	r2, [r3]
   1fab4:	bl	147d8 <test_print@@Base+0xf54>
   1fab8:	b	1f928 <flatcc_json_printer_bool_enum_vector_field@@Base+0xf8>
   1fabc:	mov	r2, r5
   1fac0:	mov	r1, #32
   1fac4:	bl	124c4 <memset@plt>
   1fac8:	ldr	r3, [r4, #20]
   1facc:	add	r3, r3, r5
   1fad0:	add	r2, r3, #1
   1fad4:	b	1f9fc <flatcc_json_printer_bool_enum_vector_field@@Base+0x1cc>

0001fad8 <flatcc_json_printer_struct_vector_field@@Base>:
   1fad8:	ldr	ip, [r1, #8]
   1fadc:	add	r2, r2, #2
   1fae0:	lsl	r2, r2, #1
   1fae4:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1fae8:	strd	r6, [sp, #8]
   1faec:	strd	r8, [sp, #16]
   1faf0:	strd	sl, [sp, #24]
   1faf4:	cmp	r2, ip
   1faf8:	str	lr, [sp, #32]
   1fafc:	sub	sp, sp, #4
   1fb00:	ldr	r8, [sp, #44]	; 0x2c
   1fb04:	ldr	r7, [sp, #48]	; 0x30
   1fb08:	bge	1fd1c <flatcc_json_printer_struct_vector_field@@Base+0x244>
   1fb0c:	ldr	ip, [r1, #4]
   1fb10:	ldrh	r2, [ip, r2]
   1fb14:	cmp	r2, #0
   1fb18:	beq	1fd1c <flatcc_json_printer_struct_vector_field@@Base+0x244>
   1fb1c:	ldr	ip, [r1]
   1fb20:	adds	lr, ip, r2
   1fb24:	beq	1fd1c <flatcc_json_printer_struct_vector_field@@Base+0x244>
   1fb28:	ldr	r4, [r1, #16]
   1fb2c:	add	r5, r4, #1
   1fb30:	cmp	r4, #0
   1fb34:	str	r5, [r1, #16]
   1fb38:	beq	1fb50 <flatcc_json_printer_struct_vector_field@@Base+0x78>
   1fb3c:	ldr	r1, [r0, #20]
   1fb40:	mov	r4, #44	; 0x2c
   1fb44:	add	r5, r1, #1
   1fb48:	str	r5, [r0, #20]
   1fb4c:	strb	r4, [r1]
   1fb50:	mov	r1, r3
   1fb54:	ldr	r3, [ip, r2]
   1fb58:	mov	r4, r0
   1fb5c:	ldr	r2, [sp, #40]	; 0x28
   1fb60:	add	r6, lr, r3
   1fb64:	ldr	r5, [lr, r3]
   1fb68:	bl	14d0c <test_print@@Base+0x1488>
   1fb6c:	ldr	r2, [r4, #20]
   1fb70:	mov	r1, #91	; 0x5b
   1fb74:	ldr	r3, [r4, #32]
   1fb78:	cmp	r5, #0
   1fb7c:	add	r0, r2, #1
   1fb80:	add	r3, r3, #1
   1fb84:	str	r0, [r4, #20]
   1fb88:	str	r3, [r4, #32]
   1fb8c:	strb	r1, [r2]
   1fb90:	beq	1fcfc <flatcc_json_printer_struct_vector_field@@Base+0x224>
   1fb94:	ldrb	r1, [r4, #25]
   1fb98:	ldr	r3, [r4, #20]
   1fb9c:	cmp	r1, #0
   1fba0:	bne	1fd38 <flatcc_json_printer_struct_vector_field@@Base+0x260>
   1fba4:	ldr	r2, [r4, #16]
   1fba8:	cmp	r2, r3
   1fbac:	bhi	1fbc0 <flatcc_json_printer_struct_vector_field@@Base+0xe8>
   1fbb0:	mov	r0, r4
   1fbb4:	ldr	r3, [r4, #44]	; 0x2c
   1fbb8:	blx	r3
   1fbbc:	ldr	r3, [r4, #20]
   1fbc0:	add	r1, r3, #1
   1fbc4:	mov	ip, #123	; 0x7b
   1fbc8:	ldr	r2, [r4, #32]
   1fbcc:	add	r6, r6, #4
   1fbd0:	mov	r0, r4
   1fbd4:	str	r1, [r4, #20]
   1fbd8:	mov	r1, r6
   1fbdc:	add	r2, r2, #1
   1fbe0:	str	r2, [r4, #32]
   1fbe4:	strb	ip, [r3]
   1fbe8:	blx	r7
   1fbec:	ldrb	r3, [r4, #25]
   1fbf0:	cmp	r3, #0
   1fbf4:	bne	1fe1c <flatcc_json_printer_struct_vector_field@@Base+0x344>
   1fbf8:	ldr	r3, [r4, #20]
   1fbfc:	mov	r2, #125	; 0x7d
   1fc00:	cmp	r5, #1
   1fc04:	sub	r5, r5, #2
   1fc08:	add	r1, r3, #1
   1fc0c:	str	r1, [r4, #20]
   1fc10:	strb	r2, [r3]
   1fc14:	beq	1fcfc <flatcc_json_printer_struct_vector_field@@Base+0x224>
   1fc18:	mov	r9, #44	; 0x2c
   1fc1c:	mov	sl, #10
   1fc20:	b	1fc98 <flatcc_json_printer_struct_vector_field@@Base+0x1c0>
   1fc24:	ldr	r3, [r4, #16]
   1fc28:	ldr	r2, [r4, #20]
   1fc2c:	cmp	r2, r3
   1fc30:	bcc	1fc44 <flatcc_json_printer_struct_vector_field@@Base+0x16c>
   1fc34:	mov	r0, r4
   1fc38:	ldr	r3, [r4, #44]	; 0x2c
   1fc3c:	blx	r3
   1fc40:	ldr	r2, [r4, #20]
   1fc44:	add	r0, r2, #1
   1fc48:	mov	ip, #123	; 0x7b
   1fc4c:	ldr	r3, [r4, #32]
   1fc50:	mov	r1, r6
   1fc54:	str	r0, [r4, #20]
   1fc58:	mov	r0, r4
   1fc5c:	add	r3, r3, #1
   1fc60:	str	r3, [r4, #32]
   1fc64:	strb	ip, [r2]
   1fc68:	blx	r7
   1fc6c:	ldrb	r3, [r4, #25]
   1fc70:	cmp	r3, #0
   1fc74:	bne	1fd58 <flatcc_json_printer_struct_vector_field@@Base+0x280>
   1fc78:	ldr	r1, [r4, #20]
   1fc7c:	sub	r5, r5, #1
   1fc80:	add	r2, r1, #1
   1fc84:	mov	r3, #125	; 0x7d
   1fc88:	cmn	r5, #1
   1fc8c:	str	r2, [r4, #20]
   1fc90:	strb	r3, [r1]
   1fc94:	beq	1fcfc <flatcc_json_printer_struct_vector_field@@Base+0x224>
   1fc98:	ldr	r3, [r4, #20]
   1fc9c:	add	r6, r6, r8
   1fca0:	add	r2, r3, #1
   1fca4:	str	r2, [r4, #20]
   1fca8:	strb	r9, [r3]
   1fcac:	ldrb	r1, [r4, #25]
   1fcb0:	cmp	r1, #0
   1fcb4:	beq	1fc24 <flatcc_json_printer_struct_vector_field@@Base+0x14c>
   1fcb8:	ldr	r3, [r4, #20]
   1fcbc:	add	r2, r3, #1
   1fcc0:	str	r2, [r4, #20]
   1fcc4:	strb	sl, [r3]
   1fcc8:	ldrb	r3, [r4, #25]
   1fccc:	ldr	r1, [r4, #16]
   1fcd0:	ldr	r2, [r4, #32]
   1fcd4:	ldr	r0, [r4, #20]
   1fcd8:	mul	fp, r2, r3
   1fcdc:	add	r3, r0, fp
   1fce0:	cmp	r1, r3
   1fce4:	bcs	1fda0 <flatcc_json_printer_struct_vector_field@@Base+0x2c8>
   1fce8:	mov	r1, fp
   1fcec:	mov	r0, r4
   1fcf0:	bl	14724 <test_print@@Base+0xea0>
   1fcf4:	ldr	r2, [r4, #20]
   1fcf8:	b	1fc44 <flatcc_json_printer_struct_vector_field@@Base+0x16c>
   1fcfc:	ldrb	r2, [r4, #25]
   1fd00:	ldr	r3, [r4, #20]
   1fd04:	cmp	r2, #0
   1fd08:	add	r2, r3, #1
   1fd0c:	bne	1fdd0 <flatcc_json_printer_struct_vector_field@@Base+0x2f8>
   1fd10:	mov	r1, #93	; 0x5d
   1fd14:	str	r2, [r4, #20]
   1fd18:	strb	r1, [r3]
   1fd1c:	add	sp, sp, #4
   1fd20:	ldrd	r4, [sp]
   1fd24:	ldrd	r6, [sp, #8]
   1fd28:	ldrd	r8, [sp, #16]
   1fd2c:	ldrd	sl, [sp, #24]
   1fd30:	add	sp, sp, #32
   1fd34:	pop	{pc}		; (ldr pc, [sp], #4)
   1fd38:	add	r1, r3, #1
   1fd3c:	mov	r2, #10
   1fd40:	mov	r0, r4
   1fd44:	str	r1, [r4, #20]
   1fd48:	strb	r2, [r3]
   1fd4c:	bl	147d8 <test_print@@Base+0xf54>
   1fd50:	ldr	r3, [r4, #20]
   1fd54:	b	1fbc0 <flatcc_json_printer_struct_vector_field@@Base+0xe8>
   1fd58:	ldr	r3, [r4, #20]
   1fd5c:	add	r2, r3, #1
   1fd60:	str	r2, [r4, #20]
   1fd64:	strb	sl, [r3]
   1fd68:	ldrb	r1, [r4, #25]
   1fd6c:	ldr	r3, [r4, #32]
   1fd70:	ldr	r2, [r4, #16]
   1fd74:	ldr	r0, [r4, #20]
   1fd78:	sub	r3, r3, #1
   1fd7c:	mul	fp, r3, r1
   1fd80:	str	r3, [r4, #32]
   1fd84:	add	r3, r0, fp
   1fd88:	cmp	r2, r3
   1fd8c:	bcs	1fdb8 <flatcc_json_printer_struct_vector_field@@Base+0x2e0>
   1fd90:	mov	r1, fp
   1fd94:	mov	r0, r4
   1fd98:	bl	14724 <test_print@@Base+0xea0>
   1fd9c:	b	1fc78 <flatcc_json_printer_struct_vector_field@@Base+0x1a0>
   1fda0:	mov	r2, fp
   1fda4:	mov	r1, #32
   1fda8:	bl	124c4 <memset@plt>
   1fdac:	ldr	r2, [r4, #20]
   1fdb0:	add	r2, r2, fp
   1fdb4:	b	1fc44 <flatcc_json_printer_struct_vector_field@@Base+0x16c>
   1fdb8:	mov	r1, #32
   1fdbc:	mov	r2, fp
   1fdc0:	bl	124c4 <memset@plt>
   1fdc4:	ldr	r1, [r4, #20]
   1fdc8:	add	r1, r1, fp
   1fdcc:	b	1fc7c <flatcc_json_printer_struct_vector_field@@Base+0x1a4>
   1fdd0:	mov	r1, #10
   1fdd4:	str	r2, [r4, #20]
   1fdd8:	strb	r1, [r3]
   1fddc:	ldrb	r3, [r4, #25]
   1fde0:	ldr	r2, [r4, #32]
   1fde4:	ldr	r1, [r4, #16]
   1fde8:	ldr	r0, [r4, #20]
   1fdec:	sub	r2, r2, #1
   1fdf0:	mul	r5, r2, r3
   1fdf4:	str	r2, [r4, #32]
   1fdf8:	add	r3, r0, r5
   1fdfc:	cmp	r1, r3
   1fe00:	bcs	1fe48 <flatcc_json_printer_struct_vector_field@@Base+0x370>
   1fe04:	mov	r1, r5
   1fe08:	mov	r0, r4
   1fe0c:	bl	14724 <test_print@@Base+0xea0>
   1fe10:	ldr	r3, [r4, #20]
   1fe14:	add	r2, r3, #1
   1fe18:	b	1fd10 <flatcc_json_printer_struct_vector_field@@Base+0x238>
   1fe1c:	ldr	r3, [r4, #20]
   1fe20:	mov	r2, #10
   1fe24:	mov	r0, r4
   1fe28:	add	r1, r3, #1
   1fe2c:	str	r1, [r4, #20]
   1fe30:	strb	r2, [r3]
   1fe34:	ldr	r3, [r4, #32]
   1fe38:	sub	r3, r3, #1
   1fe3c:	str	r3, [r4, #32]
   1fe40:	bl	147d8 <test_print@@Base+0xf54>
   1fe44:	b	1fbf8 <flatcc_json_printer_struct_vector_field@@Base+0x120>
   1fe48:	mov	r2, r5
   1fe4c:	mov	r1, #32
   1fe50:	bl	124c4 <memset@plt>
   1fe54:	ldr	r3, [r4, #20]
   1fe58:	add	r3, r3, r5
   1fe5c:	add	r2, r3, #1
   1fe60:	b	1fd10 <flatcc_json_printer_struct_vector_field@@Base+0x238>

0001fe64 <flatcc_json_printer_string_vector_field@@Base>:
   1fe64:	ldr	ip, [r1, #8]
   1fe68:	add	r2, r2, #2
   1fe6c:	lsl	r2, r2, #1
   1fe70:	cmp	ip, r2
   1fe74:	bxle	lr
   1fe78:	ldr	ip, [r1, #4]
   1fe7c:	ldrh	r2, [ip, r2]
   1fe80:	cmp	r2, #0
   1fe84:	bxeq	lr
   1fe88:	strd	r4, [sp, #-32]!	; 0xffffffe0
   1fe8c:	ldr	ip, [r1]
   1fe90:	strd	r6, [sp, #8]
   1fe94:	str	lr, [sp, #28]
   1fe98:	strd	r8, [sp, #16]
   1fe9c:	str	sl, [sp, #24]
   1fea0:	adds	lr, ip, r2
   1fea4:	beq	20040 <flatcc_json_printer_string_vector_field@@Base+0x1dc>
   1fea8:	ldr	r4, [r1, #16]
   1feac:	add	r5, r4, #1
   1feb0:	cmp	r4, #0
   1feb4:	str	r5, [r1, #16]
   1feb8:	beq	1fed0 <flatcc_json_printer_string_vector_field@@Base+0x6c>
   1febc:	ldr	r1, [r0, #20]
   1fec0:	mov	r4, #44	; 0x2c
   1fec4:	add	r5, r1, #1
   1fec8:	str	r5, [r0, #20]
   1fecc:	strb	r4, [r1]
   1fed0:	mov	r1, r3
   1fed4:	ldr	r3, [ip, r2]
   1fed8:	mov	r4, r0
   1fedc:	ldr	r2, [sp, #32]
   1fee0:	add	r6, lr, r3
   1fee4:	ldr	r5, [lr, r3]
   1fee8:	bl	14d0c <test_print@@Base+0x1488>
   1feec:	ldr	r2, [r4, #20]
   1fef0:	mov	r1, #91	; 0x5b
   1fef4:	ldr	r3, [r4, #32]
   1fef8:	cmp	r5, #0
   1fefc:	add	r0, r2, #1
   1ff00:	add	r3, r3, #1
   1ff04:	str	r0, [r4, #20]
   1ff08:	str	r3, [r4, #32]
   1ff0c:	strb	r1, [r2]
   1ff10:	beq	20020 <flatcc_json_printer_string_vector_field@@Base+0x1bc>
   1ff14:	ldrb	r1, [r4, #25]
   1ff18:	ldr	r3, [r4, #20]
   1ff1c:	cmp	r1, #0
   1ff20:	bne	20058 <flatcc_json_printer_string_vector_field@@Base+0x1f4>
   1ff24:	ldr	r2, [r4, #16]
   1ff28:	cmp	r2, r3
   1ff2c:	bhi	1ff3c <flatcc_json_printer_string_vector_field@@Base+0xd8>
   1ff30:	mov	r0, r4
   1ff34:	ldr	r3, [r4, #44]	; 0x2c
   1ff38:	blx	r3
   1ff3c:	ldr	r3, [r6, #4]
   1ff40:	mov	r0, r4
   1ff44:	sub	r7, r5, #2
   1ff48:	add	r3, r3, #4
   1ff4c:	add	r1, r6, r3
   1ff50:	ldr	r2, [r6, r3]
   1ff54:	add	r1, r1, #4
   1ff58:	bl	14abc <test_print@@Base+0x1238>
   1ff5c:	cmp	r5, #1
   1ff60:	beq	20020 <flatcc_json_printer_string_vector_field@@Base+0x1bc>
   1ff64:	add	r6, r6, #8
   1ff68:	mov	r8, #44	; 0x2c
   1ff6c:	mov	r9, #10
   1ff70:	b	1ffb8 <flatcc_json_printer_string_vector_field@@Base+0x154>
   1ff74:	ldr	r3, [r4, #16]
   1ff78:	mov	r0, r4
   1ff7c:	ldr	r2, [r4, #20]
   1ff80:	cmp	r2, r3
   1ff84:	bcc	1ff90 <flatcc_json_printer_string_vector_field@@Base+0x12c>
   1ff88:	ldr	r3, [r4, #44]	; 0x2c
   1ff8c:	blx	r3
   1ff90:	ldr	r3, [r5]
   1ff94:	sub	r7, r7, #1
   1ff98:	mov	r0, r4
   1ff9c:	add	r6, r6, #4
   1ffa0:	add	r1, r5, r3
   1ffa4:	ldr	r2, [r5, r3]
   1ffa8:	add	r1, r1, #4
   1ffac:	bl	14abc <test_print@@Base+0x1238>
   1ffb0:	cmn	r7, #1
   1ffb4:	beq	20020 <flatcc_json_printer_string_vector_field@@Base+0x1bc>
   1ffb8:	ldr	r3, [r4, #20]
   1ffbc:	mov	r5, r6
   1ffc0:	add	r2, r3, #1
   1ffc4:	str	r2, [r4, #20]
   1ffc8:	strb	r8, [r3]
   1ffcc:	ldrb	r1, [r4, #25]
   1ffd0:	cmp	r1, #0
   1ffd4:	beq	1ff74 <flatcc_json_printer_string_vector_field@@Base+0x110>
   1ffd8:	ldr	r3, [r4, #20]
   1ffdc:	mov	r1, #32
   1ffe0:	mov	r0, r4
   1ffe4:	add	r2, r3, #1
   1ffe8:	str	r2, [r4, #20]
   1ffec:	strb	r9, [r3]
   1fff0:	ldrb	r2, [r4, #25]
   1fff4:	ldr	lr, [r4, #16]
   1fff8:	ldr	sl, [r4, #32]
   1fffc:	ldr	r3, [r4, #20]
   20000:	mul	sl, sl, r2
   20004:	add	ip, r3, sl
   20008:	mov	r2, sl
   2000c:	cmp	lr, ip
   20010:	bcs	20098 <flatcc_json_printer_string_vector_field@@Base+0x234>
   20014:	mov	r1, sl
   20018:	bl	14724 <test_print@@Base+0xea0>
   2001c:	b	1ff90 <flatcc_json_printer_string_vector_field@@Base+0x12c>
   20020:	ldrb	r2, [r4, #25]
   20024:	ldr	r3, [r4, #20]
   20028:	cmp	r2, #0
   2002c:	add	r2, r3, #1
   20030:	bne	200b0 <flatcc_json_printer_string_vector_field@@Base+0x24c>
   20034:	mov	r1, #93	; 0x5d
   20038:	str	r2, [r4, #20]
   2003c:	strb	r1, [r3]
   20040:	ldrd	r4, [sp]
   20044:	ldrd	r6, [sp, #8]
   20048:	ldrd	r8, [sp, #16]
   2004c:	ldr	sl, [sp, #24]
   20050:	add	sp, sp, #28
   20054:	pop	{pc}		; (ldr pc, [sp], #4)
   20058:	add	r1, r3, #1
   2005c:	mov	r2, #10
   20060:	str	r1, [r4, #20]
   20064:	strb	r2, [r3]
   20068:	ldrb	r3, [r4, #25]
   2006c:	ldr	r2, [r4, #16]
   20070:	ldr	r7, [r4, #32]
   20074:	ldr	r0, [r4, #20]
   20078:	mul	r7, r7, r3
   2007c:	add	r3, r0, r7
   20080:	cmp	r2, r3
   20084:	bcs	20118 <flatcc_json_printer_string_vector_field@@Base+0x2b4>
   20088:	mov	r1, r7
   2008c:	mov	r0, r4
   20090:	bl	14724 <test_print@@Base+0xea0>
   20094:	b	1ff3c <flatcc_json_printer_string_vector_field@@Base+0xd8>
   20098:	mov	r0, r3
   2009c:	bl	124c4 <memset@plt>
   200a0:	ldr	r3, [r4, #20]
   200a4:	add	sl, r3, sl
   200a8:	str	sl, [r4, #20]
   200ac:	b	1ff90 <flatcc_json_printer_string_vector_field@@Base+0x12c>
   200b0:	mov	r1, #10
   200b4:	str	r2, [r4, #20]
   200b8:	strb	r1, [r3]
   200bc:	ldrb	r3, [r4, #25]
   200c0:	ldr	r2, [r4, #32]
   200c4:	ldr	r1, [r4, #16]
   200c8:	ldr	r0, [r4, #20]
   200cc:	sub	r2, r2, #1
   200d0:	mul	r5, r2, r3
   200d4:	str	r2, [r4, #32]
   200d8:	add	r3, r0, r5
   200dc:	cmp	r1, r3
   200e0:	bcs	200fc <flatcc_json_printer_string_vector_field@@Base+0x298>
   200e4:	mov	r1, r5
   200e8:	mov	r0, r4
   200ec:	bl	14724 <test_print@@Base+0xea0>
   200f0:	ldr	r3, [r4, #20]
   200f4:	add	r2, r3, #1
   200f8:	b	20034 <flatcc_json_printer_string_vector_field@@Base+0x1d0>
   200fc:	mov	r2, r5
   20100:	mov	r1, #32
   20104:	bl	124c4 <memset@plt>
   20108:	ldr	r3, [r4, #20]
   2010c:	add	r3, r3, r5
   20110:	add	r2, r3, #1
   20114:	b	20034 <flatcc_json_printer_string_vector_field@@Base+0x1d0>
   20118:	mov	r2, r7
   2011c:	mov	r1, #32
   20120:	bl	124c4 <memset@plt>
   20124:	ldr	r3, [r4, #20]
   20128:	add	r7, r3, r7
   2012c:	str	r7, [r4, #20]
   20130:	b	1ff3c <flatcc_json_printer_string_vector_field@@Base+0xd8>

00020134 <flatcc_json_printer_table_vector_field@@Base>:
   20134:	ldr	ip, [r1, #8]
   20138:	add	r2, r2, #2
   2013c:	lsl	r2, r2, #1
   20140:	cmp	ip, r2
   20144:	bxle	lr
   20148:	ldr	ip, [r1, #4]
   2014c:	ldrh	r2, [ip, r2]
   20150:	cmp	r2, #0
   20154:	bxeq	lr
   20158:	strd	r4, [sp, #-36]!	; 0xffffffdc
   2015c:	strd	r6, [sp, #8]
   20160:	str	lr, [sp, #32]
   20164:	ldr	lr, [r1]
   20168:	strd	r8, [sp, #16]
   2016c:	strd	sl, [sp, #24]
   20170:	sub	sp, sp, #28
   20174:	adds	r6, lr, r2
   20178:	beq	202b4 <flatcc_json_printer_table_vector_field@@Base+0x180>
   2017c:	ldr	r4, [r1, #16]
   20180:	ldr	ip, [r0, #20]
   20184:	cmp	r4, #0
   20188:	add	r4, r4, #1
   2018c:	str	r4, [r1, #16]
   20190:	beq	201a8 <flatcc_json_printer_table_vector_field@@Base+0x74>
   20194:	add	r5, ip, #1
   20198:	mov	r4, #44	; 0x2c
   2019c:	str	r5, [r0, #20]
   201a0:	strb	r4, [ip]
   201a4:	ldr	ip, [r0, #20]
   201a8:	mov	r7, r1
   201ac:	mov	r5, r3
   201b0:	ldrb	r1, [r0, #25]
   201b4:	mov	r4, r0
   201b8:	ldr	r3, [lr, r2]
   201bc:	cmp	r1, #0
   201c0:	add	r8, r6, r3
   201c4:	ldr	r6, [r6, r3]
   201c8:	bne	202f0 <flatcc_json_printer_table_vector_field@@Base+0x1bc>
   201cc:	ldr	r3, [r0, #16]
   201d0:	cmp	r3, ip
   201d4:	bls	202e0 <flatcc_json_printer_table_vector_field@@Base+0x1ac>
   201d8:	mov	r3, #34	; 0x22
   201dc:	mov	r1, r5
   201e0:	strb	r3, [ip]
   201e4:	ldrb	r3, [r4, #26]
   201e8:	ldr	r2, [r4, #16]
   201ec:	ldr	r0, [r4, #20]
   201f0:	cmp	r3, #0
   201f4:	addeq	r0, r0, #1
   201f8:	ldr	r3, [sp, #64]	; 0x40
   201fc:	str	r0, [r4, #20]
   20200:	add	r3, r0, r3
   20204:	cmp	r2, r3
   20208:	ldr	r2, [sp, #64]	; 0x40
   2020c:	bls	202d0 <flatcc_json_printer_table_vector_field@@Base+0x19c>
   20210:	bl	12428 <memcpy@plt>
   20214:	ldr	r3, [r4, #20]
   20218:	ldr	r2, [sp, #64]	; 0x40
   2021c:	add	r3, r3, r2
   20220:	str	r3, [r4, #20]
   20224:	mov	r2, #34	; 0x22
   20228:	mov	ip, #58	; 0x3a
   2022c:	mov	r9, #32
   20230:	mov	r0, #91	; 0x5b
   20234:	strb	r2, [r3]
   20238:	ldrb	r3, [r4, #26]
   2023c:	ldr	r1, [r4, #20]
   20240:	clz	r3, r3
   20244:	lsr	r3, r3, #5
   20248:	add	r2, r1, r3
   2024c:	add	r2, r2, #1
   20250:	str	r2, [r4, #20]
   20254:	strb	ip, [r1, r3]
   20258:	ldr	r3, [r4, #20]
   2025c:	strb	r9, [r3]
   20260:	ldrb	r3, [r4, #25]
   20264:	ldr	ip, [r4, #20]
   20268:	ldr	r2, [r4, #32]
   2026c:	adds	r3, r3, #0
   20270:	movne	r3, #1
   20274:	cmp	r6, #0
   20278:	add	r1, ip, r3
   2027c:	add	r1, r1, #1
   20280:	add	r2, r2, #1
   20284:	str	r1, [r4, #20]
   20288:	str	r2, [r4, #32]
   2028c:	strb	r0, [ip, r3]
   20290:	bne	20380 <flatcc_json_printer_table_vector_field@@Base+0x24c>
   20294:	ldr	r3, [r4, #20]
   20298:	add	r2, r3, #1
   2029c:	ldrb	r1, [r4, #25]
   202a0:	cmp	r1, #0
   202a4:	bne	20334 <flatcc_json_printer_table_vector_field@@Base+0x200>
   202a8:	mov	r1, #93	; 0x5d
   202ac:	str	r2, [r4, #20]
   202b0:	strb	r1, [r3]
   202b4:	add	sp, sp, #28
   202b8:	ldrd	r4, [sp]
   202bc:	ldrd	r6, [sp, #8]
   202c0:	ldrd	r8, [sp, #16]
   202c4:	ldrd	sl, [sp, #24]
   202c8:	add	sp, sp, #32
   202cc:	pop	{pc}		; (ldr pc, [sp], #4)
   202d0:	mov	r0, r4
   202d4:	bl	14660 <test_print@@Base+0xddc>
   202d8:	ldr	r3, [r4, #20]
   202dc:	b	20224 <flatcc_json_printer_table_vector_field@@Base+0xf0>
   202e0:	ldr	r3, [r0, #44]	; 0x2c
   202e4:	blx	r3
   202e8:	ldr	ip, [r4, #20]
   202ec:	b	201d8 <flatcc_json_printer_table_vector_field@@Base+0xa4>
   202f0:	add	r2, ip, #1
   202f4:	mov	r3, #10
   202f8:	str	r2, [r0, #20]
   202fc:	strb	r3, [ip]
   20300:	ldrb	r3, [r0, #25]
   20304:	ldr	ip, [r4, #32]
   20308:	ldr	r2, [r0, #16]
   2030c:	ldr	r0, [r0, #20]
   20310:	mul	r9, ip, r3
   20314:	add	r3, r0, r9
   20318:	cmp	r2, r3
   2031c:	bcs	2054c <flatcc_json_printer_table_vector_field@@Base+0x418>
   20320:	mov	r1, r9
   20324:	mov	r0, r4
   20328:	bl	14724 <test_print@@Base+0xea0>
   2032c:	ldr	ip, [r4, #20]
   20330:	b	201d8 <flatcc_json_printer_table_vector_field@@Base+0xa4>
   20334:	mov	r1, #10
   20338:	str	r2, [r4, #20]
   2033c:	strb	r1, [r3]
   20340:	ldrb	r3, [r4, #25]
   20344:	ldr	r2, [r4, #32]
   20348:	ldr	r1, [r4, #16]
   2034c:	ldr	r0, [r4, #20]
   20350:	sub	r2, r2, #1
   20354:	mul	r5, r2, r3
   20358:	str	r2, [r4, #32]
   2035c:	add	r3, r0, r5
   20360:	cmp	r1, r3
   20364:	bcs	20568 <flatcc_json_printer_table_vector_field@@Base+0x434>
   20368:	mov	r1, r5
   2036c:	mov	r0, r4
   20370:	bl	14724 <test_print@@Base+0xea0>
   20374:	ldr	r3, [r4, #20]
   20378:	add	r2, r3, #1
   2037c:	b	202a8 <flatcc_json_printer_table_vector_field@@Base+0x174>
   20380:	ldr	r2, [r7, #12]
   20384:	add	r5, r8, #4
   20388:	ldr	r3, [r4, #20]
   2038c:	subs	r2, r2, #1
   20390:	beq	20584 <flatcc_json_printer_table_vector_field@@Base+0x450>
   20394:	ldr	r1, [r4, #32]
   20398:	add	sl, r3, #1
   2039c:	mov	r0, #123	; 0x7b
   203a0:	mov	lr, #0
   203a4:	ldr	ip, [r8, #4]
   203a8:	str	sl, [r4, #20]
   203ac:	add	r1, r1, #1
   203b0:	str	r1, [r4, #32]
   203b4:	add	r1, sp, #4
   203b8:	strb	r0, [r3]
   203bc:	add	r3, r5, ip
   203c0:	mov	r0, r4
   203c4:	str	r2, [sp, #16]
   203c8:	str	lr, [sp, #20]
   203cc:	ldr	r2, [r5, ip]
   203d0:	str	r3, [sp, #4]
   203d4:	sub	r3, r3, r2
   203d8:	ldrh	r2, [r3]
   203dc:	str	r3, [sp, #8]
   203e0:	ldr	r3, [sp, #68]	; 0x44
   203e4:	str	r2, [sp, #12]
   203e8:	blx	r3
   203ec:	ldrb	r3, [r4, #25]
   203f0:	cmp	r3, #0
   203f4:	ldr	r3, [r4, #20]
   203f8:	bne	20598 <flatcc_json_printer_table_vector_field@@Base+0x464>
   203fc:	add	r1, r3, #1
   20400:	mov	r2, #125	; 0x7d
   20404:	str	r1, [r4, #20]
   20408:	strb	r2, [r3]
   2040c:	ldr	r3, [r4, #20]
   20410:	cmp	r6, #1
   20414:	add	r2, r3, #1
   20418:	sub	r6, r6, #2
   2041c:	beq	2029c <flatcc_json_printer_table_vector_field@@Base+0x168>
   20420:	mov	r8, #44	; 0x2c
   20424:	mov	sl, #123	; 0x7b
   20428:	mov	r9, #0
   2042c:	b	204b0 <flatcc_json_printer_table_vector_field@@Base+0x37c>
   20430:	ldr	lr, [r4, #20]
   20434:	ldr	r2, [r4, #32]
   20438:	ldr	ip, [r5]
   2043c:	add	fp, lr, #1
   20440:	add	r2, r2, #1
   20444:	str	fp, [r4, #20]
   20448:	str	r2, [r4, #32]
   2044c:	add	r2, r5, ip
   20450:	strb	sl, [lr]
   20454:	str	r3, [sp, #16]
   20458:	str	r9, [sp, #20]
   2045c:	ldr	r3, [r5, ip]
   20460:	str	r2, [sp, #4]
   20464:	sub	r3, r2, r3
   20468:	ldrh	r2, [r3]
   2046c:	str	r3, [sp, #8]
   20470:	ldr	r3, [sp, #68]	; 0x44
   20474:	str	r2, [sp, #12]
   20478:	blx	r3
   2047c:	ldrb	r3, [r4, #25]
   20480:	cmp	r3, #0
   20484:	bne	204e4 <flatcc_json_printer_table_vector_field@@Base+0x3b0>
   20488:	ldr	fp, [r4, #20]
   2048c:	add	r2, fp, #1
   20490:	mov	r3, #125	; 0x7d
   20494:	str	r2, [r4, #20]
   20498:	strb	r3, [fp]
   2049c:	ldr	r3, [r4, #20]
   204a0:	sub	r6, r6, #1
   204a4:	cmn	r6, #1
   204a8:	add	r2, r3, #1
   204ac:	beq	2029c <flatcc_json_printer_table_vector_field@@Base+0x168>
   204b0:	str	r2, [r4, #20]
   204b4:	add	r1, sp, #4
   204b8:	mov	r0, r4
   204bc:	strb	r8, [r3]
   204c0:	add	r5, r5, #4
   204c4:	ldr	r3, [r7, #12]
   204c8:	subs	r3, r3, #1
   204cc:	bne	20430 <flatcc_json_printer_table_vector_field@@Base+0x2fc>
   204d0:	ldr	r3, [r4, #36]	; 0x24
   204d4:	mov	r2, #2
   204d8:	cmp	r3, #0
   204dc:	streq	r2, [r4, #36]	; 0x24
   204e0:	b	2049c <flatcc_json_printer_table_vector_field@@Base+0x368>
   204e4:	ldr	r3, [r4, #20]
   204e8:	mov	r2, #10
   204ec:	mov	r1, #32
   204f0:	mov	r0, r4
   204f4:	add	ip, r3, #1
   204f8:	str	ip, [r4, #20]
   204fc:	strb	r2, [r3]
   20500:	ldrb	fp, [r4, #25]
   20504:	ldr	r2, [r4, #32]
   20508:	ldr	lr, [r4, #16]
   2050c:	ldr	r3, [r4, #20]
   20510:	sub	r2, r2, #1
   20514:	mul	fp, r2, fp
   20518:	str	r2, [r4, #32]
   2051c:	add	ip, r3, fp
   20520:	mov	r2, fp
   20524:	cmp	lr, ip
   20528:	bcs	20538 <flatcc_json_printer_table_vector_field@@Base+0x404>
   2052c:	mov	r1, fp
   20530:	bl	14724 <test_print@@Base+0xea0>
   20534:	b	20488 <flatcc_json_printer_table_vector_field@@Base+0x354>
   20538:	mov	r0, r3
   2053c:	bl	124c4 <memset@plt>
   20540:	ldr	r3, [r4, #20]
   20544:	add	fp, r3, fp
   20548:	b	2048c <flatcc_json_printer_table_vector_field@@Base+0x358>
   2054c:	mov	r2, r9
   20550:	mov	r1, #32
   20554:	bl	124c4 <memset@plt>
   20558:	ldr	ip, [r4, #20]
   2055c:	add	ip, ip, r9
   20560:	str	ip, [r4, #20]
   20564:	b	201d8 <flatcc_json_printer_table_vector_field@@Base+0xa4>
   20568:	mov	r2, r5
   2056c:	mov	r1, #32
   20570:	bl	124c4 <memset@plt>
   20574:	ldr	r3, [r4, #20]
   20578:	add	r3, r3, r5
   2057c:	add	r2, r3, #1
   20580:	b	202a8 <flatcc_json_printer_table_vector_field@@Base+0x174>
   20584:	ldr	r2, [r4, #36]	; 0x24
   20588:	cmp	r2, #0
   2058c:	moveq	r2, #2
   20590:	streq	r2, [r4, #36]	; 0x24
   20594:	b	20410 <flatcc_json_printer_table_vector_field@@Base+0x2dc>
   20598:	add	r1, r3, #1
   2059c:	mov	r2, #10
   205a0:	str	r1, [r4, #20]
   205a4:	strb	r2, [r3]
   205a8:	ldrb	r3, [r4, #25]
   205ac:	ldr	r2, [r4, #32]
   205b0:	ldr	r1, [r4, #16]
   205b4:	ldr	r0, [r4, #20]
   205b8:	sub	r2, r2, #1
   205bc:	mul	r8, r2, r3
   205c0:	str	r2, [r4, #32]
   205c4:	add	r3, r0, r8
   205c8:	cmp	r1, r3
   205cc:	bcs	205e4 <flatcc_json_printer_table_vector_field@@Base+0x4b0>
   205d0:	mov	r1, r8
   205d4:	mov	r0, r4
   205d8:	bl	14724 <test_print@@Base+0xea0>
   205dc:	ldr	r3, [r4, #20]
   205e0:	b	203fc <flatcc_json_printer_table_vector_field@@Base+0x2c8>
   205e4:	mov	r1, r9
   205e8:	mov	r2, r8
   205ec:	bl	124c4 <memset@plt>
   205f0:	ldr	r3, [r4, #20]
   205f4:	add	r3, r3, r8
   205f8:	b	203fc <flatcc_json_printer_table_vector_field@@Base+0x2c8>

000205fc <flatcc_json_printer_union_vector_field@@Base>:
   205fc:	strd	r4, [sp, #-36]!	; 0xffffffdc
   20600:	mov	r5, r1
   20604:	mov	r4, r0
   20608:	ldr	r1, [r1, #8]
   2060c:	strd	r6, [sp, #8]
   20610:	strd	r8, [sp, #16]
   20614:	mov	r9, r2
   20618:	add	r2, r2, #1
   2061c:	lsl	r2, r2, #1
   20620:	strd	sl, [sp, #24]
   20624:	mov	fp, r3
   20628:	str	lr, [sp, #32]
   2062c:	sub	sp, sp, #140	; 0x8c
   20630:	cmp	r2, r1
   20634:	ldr	r6, [sp, #176]	; 0xb0
   20638:	movge	r7, #0
   2063c:	bge	20654 <flatcc_json_printer_union_vector_field@@Base+0x58>
   20640:	ldr	r3, [r5, #4]
   20644:	ldrh	r7, [r3, r2]
   20648:	cmp	r7, #0
   2064c:	ldrne	r3, [r5]
   20650:	addne	r7, r3, r7
   20654:	add	r2, r2, #2
   20658:	ldr	r3, [r5, #12]
   2065c:	cmp	r2, r1
   20660:	bge	20810 <flatcc_json_printer_union_vector_field@@Base+0x214>
   20664:	ldr	r1, [r5, #4]
   20668:	ldrh	r8, [r1, r2]
   2066c:	cmp	r8, #0
   20670:	beq	20810 <flatcc_json_printer_union_vector_field@@Base+0x214>
   20674:	ldr	r2, [r5]
   20678:	cmp	r6, #100	; 0x64
   2067c:	add	sl, r2, r8
   20680:	str	r2, [sp, #12]
   20684:	str	r3, [sp, #20]
   20688:	bgt	2081c <flatcc_json_printer_union_vector_field@@Base+0x220>
   2068c:	add	r3, sp, #28
   20690:	mov	r2, r6
   20694:	mov	r0, r3
   20698:	mov	r1, fp
   2069c:	bl	12428 <memcpy@plt>
   206a0:	movw	r2, #13404	; 0x345c
   206a4:	movt	r2, #2
   206a8:	mov	r3, r0
   206ac:	ldrb	r0, [r2, #4]
   206b0:	cmp	sl, #0
   206b4:	cmpne	r7, #0
   206b8:	add	r1, r3, r6
   206bc:	ldr	r2, [r2]
   206c0:	str	r2, [r3, r6]
   206c4:	strb	r0, [r1, #4]
   206c8:	bne	206e8 <flatcc_json_printer_union_vector_field@@Base+0xec>
   206cc:	add	sp, sp, #140	; 0x8c
   206d0:	ldrd	r4, [sp]
   206d4:	ldrd	r6, [sp, #8]
   206d8:	ldrd	r8, [sp, #16]
   206dc:	ldrd	sl, [sp, #24]
   206e0:	add	sp, sp, #32
   206e4:	pop	{pc}		; (ldr pc, [sp], #4)
   206e8:	ldr	r2, [sp, #180]	; 0xb4
   206ec:	add	r0, r6, #5
   206f0:	mov	r1, r5
   206f4:	stm	sp, {r0, r2}
   206f8:	sub	r2, r9, #1
   206fc:	mov	r0, r4
   20700:	bl	1e304 <flatcc_json_printer_uint8_enum_vector_field@@Base>
   20704:	ldr	r3, [r5, #16]
   20708:	add	r2, r3, #1
   2070c:	cmp	r3, #0
   20710:	str	r2, [r5, #16]
   20714:	beq	2072c <flatcc_json_printer_union_vector_field@@Base+0x130>
   20718:	ldr	r3, [r4, #20]
   2071c:	mov	r2, #44	; 0x2c
   20720:	add	r1, r3, #1
   20724:	str	r1, [r4, #20]
   20728:	strb	r2, [r3]
   2072c:	ldr	r3, [sp, #12]
   20730:	mov	r2, r6
   20734:	mov	r1, fp
   20738:	mov	r0, r4
   2073c:	ldr	r5, [r7]
   20740:	ldr	r3, [r3, r8]
   20744:	add	r6, sl, r3
   20748:	ldr	r8, [sl, r3]
   2074c:	bl	14d0c <test_print@@Base+0x1488>
   20750:	ldr	r2, [r4, #20]
   20754:	mov	r1, #91	; 0x5b
   20758:	ldr	r3, [r4, #32]
   2075c:	cmp	r8, #0
   20760:	add	r0, r2, #1
   20764:	add	r3, r3, #1
   20768:	str	r0, [r4, #20]
   2076c:	str	r3, [r4, #32]
   20770:	strb	r1, [r2]
   20774:	beq	20848 <flatcc_json_printer_union_vector_field@@Base+0x24c>
   20778:	add	r7, r7, r5
   2077c:	add	r6, r6, #4
   20780:	ldrb	r3, [r7, #4]
   20784:	cmp	r3, #0
   20788:	beq	208f0 <flatcc_json_printer_union_vector_field@@Base+0x2f4>
   2078c:	add	r1, sp, #16
   20790:	mov	r0, r4
   20794:	str	r6, [sp, #16]
   20798:	strb	r3, [sp, #24]
   2079c:	ldr	r3, [sp, #184]	; 0xb8
   207a0:	blx	r3
   207a4:	ldr	r3, [r4, #20]
   207a8:	cmp	r8, #1
   207ac:	add	r5, r7, #4
   207b0:	add	r1, r3, #1
   207b4:	beq	20850 <flatcc_json_printer_union_vector_field@@Base+0x254>
   207b8:	add	r8, r8, #3
   207bc:	mov	sl, #44	; 0x2c
   207c0:	add	r7, r7, r8
   207c4:	mov	r9, #110	; 0x6e
   207c8:	mov	r8, #117	; 0x75
   207cc:	ldrb	r2, [r5, #1]!
   207d0:	add	r6, r6, #4
   207d4:	str	r1, [r4, #20]
   207d8:	strb	sl, [r3]
   207dc:	cmp	r2, #0
   207e0:	beq	2086c <flatcc_json_printer_union_vector_field@@Base+0x270>
   207e4:	add	r1, sp, #16
   207e8:	mov	r0, r4
   207ec:	ldr	r3, [sp, #184]	; 0xb8
   207f0:	str	r6, [sp, #16]
   207f4:	strb	r2, [sp, #24]
   207f8:	blx	r3
   207fc:	ldr	r3, [r4, #20]
   20800:	cmp	r7, r5
   20804:	add	r1, r3, #1
   20808:	bne	207cc <flatcc_json_printer_union_vector_field@@Base+0x1d0>
   2080c:	b	20850 <flatcc_json_printer_union_vector_field@@Base+0x254>
   20810:	cmp	r6, #100	; 0x64
   20814:	str	r3, [sp, #20]
   20818:	ble	206cc <flatcc_json_printer_union_vector_field@@Base+0xd0>
   2081c:	ldr	r3, [r4, #36]	; 0x24
   20820:	movw	r1, #13292	; 0x33ec
   20824:	movt	r1, #2
   20828:	movw	r0, #13376	; 0x3440
   2082c:	movt	r0, #2
   20830:	movw	r2, #843	; 0x34b
   20834:	cmp	r3, #0
   20838:	moveq	r3, #1
   2083c:	streq	r3, [r4, #36]	; 0x24
   20840:	ldr	r3, [pc, #248]	; 20940 <flatcc_json_printer_union_vector_field@@Base+0x344>
   20844:	bl	1250c <__assert_fail@plt>
   20848:	ldr	r3, [r4, #20]
   2084c:	add	r1, r3, #1
   20850:	ldrb	r2, [r4, #25]
   20854:	cmp	r2, #0
   20858:	bne	208c4 <flatcc_json_printer_union_vector_field@@Base+0x2c8>
   2085c:	mov	r2, #93	; 0x5d
   20860:	str	r1, [r4, #20]
   20864:	strb	r2, [r3]
   20868:	b	206cc <flatcc_json_printer_union_vector_field@@Base+0xd0>
   2086c:	ldr	r3, [r4, #20]
   20870:	mov	r2, #108	; 0x6c
   20874:	cmp	r7, r5
   20878:	add	r1, r3, #1
   2087c:	str	r1, [r4, #20]
   20880:	strb	r9, [r3]
   20884:	ldr	r3, [r4, #20]
   20888:	add	r1, r3, #1
   2088c:	str	r1, [r4, #20]
   20890:	strb	r8, [r3]
   20894:	ldr	r3, [r4, #20]
   20898:	add	r1, r3, #1
   2089c:	str	r1, [r4, #20]
   208a0:	strb	r2, [r3]
   208a4:	ldr	r3, [r4, #20]
   208a8:	add	r1, r3, #1
   208ac:	str	r1, [r4, #20]
   208b0:	strb	r2, [r3]
   208b4:	ldr	r3, [r4, #20]
   208b8:	add	r1, r3, #1
   208bc:	bne	207cc <flatcc_json_printer_union_vector_field@@Base+0x1d0>
   208c0:	b	20850 <flatcc_json_printer_union_vector_field@@Base+0x254>
   208c4:	mov	r2, #10
   208c8:	str	r1, [r4, #20]
   208cc:	mov	r0, r4
   208d0:	strb	r2, [r3]
   208d4:	ldr	r3, [r4, #32]
   208d8:	sub	r3, r3, #1
   208dc:	str	r3, [r4, #32]
   208e0:	bl	147d8 <test_print@@Base+0xf54>
   208e4:	ldr	r3, [r4, #20]
   208e8:	add	r1, r3, #1
   208ec:	b	2085c <flatcc_json_printer_union_vector_field@@Base+0x260>
   208f0:	ldr	r3, [r4, #20]
   208f4:	mov	r0, #110	; 0x6e
   208f8:	mov	r1, #117	; 0x75
   208fc:	mov	r2, #108	; 0x6c
   20900:	add	ip, r3, #1
   20904:	str	ip, [r4, #20]
   20908:	strb	r0, [r3]
   2090c:	ldr	r3, [r4, #20]
   20910:	add	r0, r3, #1
   20914:	str	r0, [r4, #20]
   20918:	strb	r1, [r3]
   2091c:	ldr	r3, [r4, #20]
   20920:	add	r1, r3, #1
   20924:	str	r1, [r4, #20]
   20928:	strb	r2, [r3]
   2092c:	ldr	r3, [r4, #20]
   20930:	add	r1, r3, #1
   20934:	str	r1, [r4, #20]
   20938:	strb	r2, [r3]
   2093c:	b	207a4 <flatcc_json_printer_union_vector_field@@Base+0x1a8>
   20940:	ldrdeq	r3, [r2], -r8

00020944 <flatcc_json_printer_table_field@@Base>:
   20944:	ldr	ip, [r1, #8]
   20948:	add	r2, r2, #2
   2094c:	lsl	r2, r2, #1
   20950:	cmp	r2, ip
   20954:	bxge	lr
   20958:	strd	r4, [sp, #-32]!	; 0xffffffe0
   2095c:	ldr	ip, [r1, #4]
   20960:	strd	r6, [sp, #8]
   20964:	strd	r8, [sp, #16]
   20968:	str	sl, [sp, #24]
   2096c:	str	lr, [sp, #28]
   20970:	sub	sp, sp, #24
   20974:	ldrh	r6, [ip, r2]
   20978:	cmp	r6, #0
   2097c:	beq	20afc <flatcc_json_printer_table_field@@Base+0x1b8>
   20980:	ldr	r8, [r1]
   20984:	adds	r7, r8, r6
   20988:	beq	20afc <flatcc_json_printer_table_field@@Base+0x1b8>
   2098c:	ldr	ip, [r1, #16]
   20990:	ldr	r2, [r0, #20]
   20994:	cmp	ip, #0
   20998:	add	ip, ip, #1
   2099c:	str	ip, [r1, #16]
   209a0:	beq	209b8 <flatcc_json_printer_table_field@@Base+0x74>
   209a4:	add	lr, r2, #1
   209a8:	mov	ip, #44	; 0x2c
   209ac:	str	lr, [r0, #20]
   209b0:	strb	ip, [r2]
   209b4:	ldr	r2, [r0, #20]
   209b8:	mov	r5, r1
   209bc:	mov	r9, r3
   209c0:	ldrb	r1, [r0, #25]
   209c4:	mov	r4, r0
   209c8:	cmp	r1, #0
   209cc:	bne	20b4c <flatcc_json_printer_table_field@@Base+0x208>
   209d0:	ldr	r3, [r0, #16]
   209d4:	cmp	r3, r2
   209d8:	bls	20b28 <flatcc_json_printer_table_field@@Base+0x1e4>
   209dc:	mov	r3, #34	; 0x22
   209e0:	mov	r1, r9
   209e4:	strb	r3, [r2]
   209e8:	ldrb	r3, [r4, #26]
   209ec:	ldr	r2, [r4, #16]
   209f0:	ldr	r0, [r4, #20]
   209f4:	cmp	r3, #0
   209f8:	addeq	r0, r0, #1
   209fc:	ldr	r3, [sp, #56]	; 0x38
   20a00:	str	r0, [r4, #20]
   20a04:	add	r3, r0, r3
   20a08:	cmp	r2, r3
   20a0c:	ldr	r2, [sp, #56]	; 0x38
   20a10:	bls	20b18 <flatcc_json_printer_table_field@@Base+0x1d4>
   20a14:	bl	12428 <memcpy@plt>
   20a18:	ldr	r3, [r4, #20]
   20a1c:	ldr	r2, [sp, #56]	; 0x38
   20a20:	add	r3, r3, r2
   20a24:	str	r3, [r4, #20]
   20a28:	mov	r2, #34	; 0x22
   20a2c:	mov	r0, #58	; 0x3a
   20a30:	mov	r9, #32
   20a34:	strb	r2, [r3]
   20a38:	ldrb	r3, [r4, #26]
   20a3c:	ldr	r1, [r4, #20]
   20a40:	clz	r3, r3
   20a44:	lsr	r3, r3, #5
   20a48:	add	r2, r1, r3
   20a4c:	add	r2, r2, #1
   20a50:	str	r2, [r4, #20]
   20a54:	strb	r0, [r1, r3]
   20a58:	ldr	r3, [r4, #20]
   20a5c:	strb	r9, [r3]
   20a60:	ldrb	r3, [r4, #25]
   20a64:	ldr	r0, [r4, #20]
   20a68:	ldr	r1, [r5, #12]
   20a6c:	adds	r3, r3, #0
   20a70:	movne	r3, #1
   20a74:	add	r2, r0, r3
   20a78:	subs	ip, r1, #1
   20a7c:	str	r2, [r4, #20]
   20a80:	beq	20b38 <flatcc_json_printer_table_field@@Base+0x1f4>
   20a84:	ldr	lr, [r4, #32]
   20a88:	add	r2, r2, #1
   20a8c:	add	r1, sp, #4
   20a90:	ldr	r5, [r8, r6]
   20a94:	mov	r6, #0
   20a98:	mov	r8, #123	; 0x7b
   20a9c:	str	r2, [r4, #20]
   20aa0:	add	r2, lr, #1
   20aa4:	str	r2, [r4, #32]
   20aa8:	strb	r8, [r0, r3]
   20aac:	add	r3, r7, r5
   20ab0:	mov	r0, r4
   20ab4:	str	ip, [sp, #16]
   20ab8:	str	r6, [sp, #20]
   20abc:	ldr	r2, [r7, r5]
   20ac0:	str	r3, [sp, #4]
   20ac4:	sub	r3, r3, r2
   20ac8:	ldrh	r2, [r3]
   20acc:	str	r3, [sp, #8]
   20ad0:	ldr	r3, [sp, #60]	; 0x3c
   20ad4:	str	r2, [sp, #12]
   20ad8:	blx	r3
   20adc:	ldrb	r3, [r4, #25]
   20ae0:	cmp	r3, r6
   20ae4:	ldr	r3, [r4, #20]
   20ae8:	bne	20b90 <flatcc_json_printer_table_field@@Base+0x24c>
   20aec:	add	r1, r3, #1
   20af0:	mov	r2, #125	; 0x7d
   20af4:	str	r1, [r4, #20]
   20af8:	strb	r2, [r3]
   20afc:	add	sp, sp, #24
   20b00:	ldrd	r4, [sp]
   20b04:	ldrd	r6, [sp, #8]
   20b08:	ldrd	r8, [sp, #16]
   20b0c:	ldr	sl, [sp, #24]
   20b10:	add	sp, sp, #28
   20b14:	pop	{pc}		; (ldr pc, [sp], #4)
   20b18:	mov	r0, r4
   20b1c:	bl	14660 <test_print@@Base+0xddc>
   20b20:	ldr	r3, [r4, #20]
   20b24:	b	20a28 <flatcc_json_printer_table_field@@Base+0xe4>
   20b28:	ldr	r3, [r0, #44]	; 0x2c
   20b2c:	blx	r3
   20b30:	ldr	r2, [r4, #20]
   20b34:	b	209dc <flatcc_json_printer_table_field@@Base+0x98>
   20b38:	ldr	r3, [r4, #36]	; 0x24
   20b3c:	cmp	r3, #0
   20b40:	moveq	r3, #2
   20b44:	streq	r3, [r4, #36]	; 0x24
   20b48:	b	20afc <flatcc_json_printer_table_field@@Base+0x1b8>
   20b4c:	add	r1, r2, #1
   20b50:	mov	r3, #10
   20b54:	str	r1, [r0, #20]
   20b58:	strb	r3, [r2]
   20b5c:	ldrb	r3, [r0, #25]
   20b60:	ldr	r2, [r4, #32]
   20b64:	ldr	r1, [r0, #16]
   20b68:	ldr	r0, [r0, #20]
   20b6c:	mul	sl, r2, r3
   20b70:	add	r3, r0, sl
   20b74:	cmp	r1, r3
   20b78:	bcs	20bdc <flatcc_json_printer_table_field@@Base+0x298>
   20b7c:	mov	r1, sl
   20b80:	mov	r0, r4
   20b84:	bl	14724 <test_print@@Base+0xea0>
   20b88:	ldr	r2, [r4, #20]
   20b8c:	b	209dc <flatcc_json_printer_table_field@@Base+0x98>
   20b90:	add	r1, r3, #1
   20b94:	mov	r2, #10
   20b98:	str	r1, [r4, #20]
   20b9c:	strb	r2, [r3]
   20ba0:	ldrb	r3, [r4, #25]
   20ba4:	ldr	r2, [r4, #32]
   20ba8:	ldr	r1, [r4, #16]
   20bac:	ldr	r0, [r4, #20]
   20bb0:	sub	r2, r2, #1
   20bb4:	mul	r5, r2, r3
   20bb8:	str	r2, [r4, #32]
   20bbc:	add	r3, r0, r5
   20bc0:	cmp	r1, r3
   20bc4:	bcs	20bf8 <flatcc_json_printer_table_field@@Base+0x2b4>
   20bc8:	mov	r1, r5
   20bcc:	mov	r0, r4
   20bd0:	bl	14724 <test_print@@Base+0xea0>
   20bd4:	ldr	r3, [r4, #20]
   20bd8:	b	20aec <flatcc_json_printer_table_field@@Base+0x1a8>
   20bdc:	mov	r2, sl
   20be0:	mov	r1, #32
   20be4:	bl	124c4 <memset@plt>
   20be8:	ldr	r2, [r4, #20]
   20bec:	add	r2, r2, sl
   20bf0:	str	r2, [r4, #20]
   20bf4:	b	209dc <flatcc_json_printer_table_field@@Base+0x98>
   20bf8:	mov	r1, r9
   20bfc:	mov	r2, r5
   20c00:	bl	124c4 <memset@plt>
   20c04:	ldr	r3, [r4, #20]
   20c08:	add	r3, r3, r5
   20c0c:	b	20aec <flatcc_json_printer_table_field@@Base+0x1a8>

00020c10 <flatcc_json_printer_union_field@@Base>:
   20c10:	ldr	ip, [r1, #8]
   20c14:	add	r2, r2, #1
   20c18:	lsl	r2, r2, #1
   20c1c:	strd	r4, [sp, #-32]!	; 0xffffffe0
   20c20:	strd	r6, [sp, #8]
   20c24:	strd	r8, [sp, #16]
   20c28:	str	sl, [sp, #24]
   20c2c:	cmp	r2, ip
   20c30:	str	lr, [sp, #28]
   20c34:	sub	sp, sp, #16
   20c38:	movge	lr, #0
   20c3c:	ldr	r6, [sp, #48]	; 0x30
   20c40:	bge	20c58 <flatcc_json_printer_union_field@@Base+0x48>
   20c44:	ldr	lr, [r1, #4]
   20c48:	ldrh	lr, [lr, r2]
   20c4c:	cmp	lr, #0
   20c50:	ldrne	r4, [r1]
   20c54:	addne	lr, r4, lr
   20c58:	add	r2, r2, #2
   20c5c:	cmp	r2, ip
   20c60:	bge	20e14 <flatcc_json_printer_union_field@@Base+0x204>
   20c64:	ldr	ip, [r1, #4]
   20c68:	ldrh	r2, [ip, r2]
   20c6c:	cmp	r2, #0
   20c70:	beq	20e14 <flatcc_json_printer_union_field@@Base+0x204>
   20c74:	ldr	r8, [r1]
   20c78:	adds	r8, r8, r2
   20c7c:	moveq	r2, #1
   20c80:	movne	r2, #0
   20c84:	cmp	lr, #0
   20c88:	moveq	r2, #1
   20c8c:	cmp	r2, #0
   20c90:	bne	20e14 <flatcc_json_printer_union_field@@Base+0x204>
   20c94:	ldr	ip, [r1, #16]
   20c98:	ldrb	r9, [lr]
   20c9c:	ldr	r2, [r0, #20]
   20ca0:	cmp	ip, #0
   20ca4:	add	ip, ip, #1
   20ca8:	str	ip, [r1, #16]
   20cac:	beq	20cc4 <flatcc_json_printer_union_field@@Base+0xb4>
   20cb0:	add	lr, r2, #1
   20cb4:	mov	ip, #44	; 0x2c
   20cb8:	str	lr, [r0, #20]
   20cbc:	strb	ip, [r2]
   20cc0:	ldr	r2, [r0, #20]
   20cc4:	mov	r5, r1
   20cc8:	mov	r7, r3
   20ccc:	ldrb	r1, [r0, #25]
   20cd0:	mov	r4, r0
   20cd4:	cmp	r1, #0
   20cd8:	bne	20e30 <flatcc_json_printer_union_field@@Base+0x220>
   20cdc:	ldr	r3, [r0, #16]
   20ce0:	cmp	r3, r2
   20ce4:	bhi	20cf4 <flatcc_json_printer_union_field@@Base+0xe4>
   20ce8:	ldr	r3, [r0, #44]	; 0x2c
   20cec:	blx	r3
   20cf0:	ldr	r2, [r4, #20]
   20cf4:	mov	r3, #34	; 0x22
   20cf8:	mov	r1, r7
   20cfc:	strb	r3, [r2]
   20d00:	ldrb	r3, [r4, #26]
   20d04:	ldr	r2, [r4, #16]
   20d08:	ldr	r0, [r4, #20]
   20d0c:	cmp	r3, #0
   20d10:	addeq	r0, r0, #1
   20d14:	add	r3, r0, r6
   20d18:	cmp	r2, r3
   20d1c:	mov	r2, r6
   20d20:	str	r0, [r4, #20]
   20d24:	bls	20e9c <flatcc_json_printer_union_field@@Base+0x28c>
   20d28:	bl	12428 <memcpy@plt>
   20d2c:	ldr	r3, [r4, #20]
   20d30:	add	r3, r3, r6
   20d34:	str	r3, [r4, #20]
   20d38:	ldr	r1, [r4, #16]
   20d3c:	add	r2, r3, #5
   20d40:	cmp	r1, r2
   20d44:	bhi	20e74 <flatcc_json_printer_union_field@@Base+0x264>
   20d48:	movw	r1, #13404	; 0x345c
   20d4c:	movt	r1, #2
   20d50:	mov	r2, #5
   20d54:	mov	r0, r4
   20d58:	bl	14660 <test_print@@Base+0xddc>
   20d5c:	ldr	r3, [r4, #20]
   20d60:	mov	r2, #34	; 0x22
   20d64:	mov	ip, #58	; 0x3a
   20d68:	mov	r0, #32
   20d6c:	strb	r2, [r3]
   20d70:	ldrb	r2, [r4, #26]
   20d74:	ldr	r1, [r4, #20]
   20d78:	clz	r2, r2
   20d7c:	lsr	r2, r2, #5
   20d80:	add	r3, r1, r2
   20d84:	add	r3, r3, #1
   20d88:	str	r3, [r4, #20]
   20d8c:	strb	ip, [r1, r2]
   20d90:	ldr	r3, [r4, #20]
   20d94:	strb	r0, [r3]
   20d98:	ldrb	r2, [r4, #25]
   20d9c:	ldr	r1, [r4, #20]
   20da0:	ldrb	r3, [r4, #27]
   20da4:	cmp	r2, #0
   20da8:	addne	r1, r1, #1
   20dac:	cmp	r3, #0
   20db0:	str	r1, [r4, #20]
   20db4:	bne	20eac <flatcc_json_printer_union_field@@Base+0x29c>
   20db8:	mov	r1, r9
   20dbc:	mov	r0, r4
   20dc0:	ldr	r3, [sp, #52]	; 0x34
   20dc4:	blx	r3
   20dc8:	cmp	r9, #0
   20dcc:	beq	20e14 <flatcc_json_printer_union_field@@Base+0x204>
   20dd0:	ldr	r3, [r4, #20]
   20dd4:	mov	ip, #44	; 0x2c
   20dd8:	mov	r1, r7
   20ddc:	mov	r0, r4
   20de0:	mov	r2, r6
   20de4:	add	lr, r3, #1
   20de8:	str	lr, [r4, #20]
   20dec:	strb	ip, [r3]
   20df0:	bl	14d0c <test_print@@Base+0x1488>
   20df4:	ldr	r3, [r5, #12]
   20df8:	mov	r0, r4
   20dfc:	add	r1, sp, #4
   20e00:	str	r8, [sp, #4]
   20e04:	str	r3, [sp, #8]
   20e08:	ldr	r3, [sp, #56]	; 0x38
   20e0c:	strb	r9, [sp, #12]
   20e10:	blx	r3
   20e14:	add	sp, sp, #16
   20e18:	ldrd	r4, [sp]
   20e1c:	ldrd	r6, [sp, #8]
   20e20:	ldrd	r8, [sp, #16]
   20e24:	ldr	sl, [sp, #24]
   20e28:	add	sp, sp, #28
   20e2c:	pop	{pc}		; (ldr pc, [sp], #4)
   20e30:	add	r1, r2, #1
   20e34:	mov	r3, #10
   20e38:	str	r1, [r0, #20]
   20e3c:	strb	r3, [r2]
   20e40:	ldrb	r3, [r0, #25]
   20e44:	ldr	r2, [r4, #32]
   20e48:	ldr	r1, [r0, #16]
   20e4c:	ldr	r0, [r0, #20]
   20e50:	mul	sl, r2, r3
   20e54:	add	r3, r0, sl
   20e58:	cmp	r1, r3
   20e5c:	bcs	20ec4 <flatcc_json_printer_union_field@@Base+0x2b4>
   20e60:	mov	r1, sl
   20e64:	mov	r0, r4
   20e68:	bl	14724 <test_print@@Base+0xea0>
   20e6c:	ldr	r2, [r4, #20]
   20e70:	b	20cf4 <flatcc_json_printer_union_field@@Base+0xe4>
   20e74:	movw	r2, #13404	; 0x345c
   20e78:	movt	r2, #2
   20e7c:	ldr	r1, [r2]
   20e80:	ldrb	r2, [r2, #4]
   20e84:	str	r1, [r3]
   20e88:	strb	r2, [r3, #4]
   20e8c:	ldr	r3, [r4, #20]
   20e90:	add	r3, r3, #5
   20e94:	str	r3, [r4, #20]
   20e98:	b	20d60 <flatcc_json_printer_union_field@@Base+0x150>
   20e9c:	mov	r0, r4
   20ea0:	bl	14660 <test_print@@Base+0xddc>
   20ea4:	ldr	r3, [r4, #20]
   20ea8:	b	20d38 <flatcc_json_printer_union_field@@Base+0x128>
   20eac:	mov	r0, r9
   20eb0:	bl	149bc <test_print@@Base+0x1138>
   20eb4:	ldr	r3, [r4, #20]
   20eb8:	add	r0, r3, r0
   20ebc:	str	r0, [r4, #20]
   20ec0:	b	20dc8 <flatcc_json_printer_union_field@@Base+0x1b8>
   20ec4:	mov	r2, sl
   20ec8:	mov	r1, #32
   20ecc:	bl	124c4 <memset@plt>
   20ed0:	ldr	r2, [r4, #20]
   20ed4:	add	r2, r2, sl
   20ed8:	str	r2, [r4, #20]
   20edc:	b	20cf4 <flatcc_json_printer_union_field@@Base+0xe4>

00020ee0 <flatcc_json_printer_union_table@@Base>:
   20ee0:	ldr	r3, [r1, #4]
   20ee4:	strd	r4, [sp, #-24]!	; 0xffffffe8
   20ee8:	mov	r4, r0
   20eec:	strd	r6, [sp, #8]
   20ef0:	str	r8, [sp, #16]
   20ef4:	str	lr, [sp, #20]
   20ef8:	sub	sp, sp, #24
   20efc:	subs	ip, r3, #1
   20f00:	beq	20fe0 <flatcc_json_printer_union_table@@Base+0x100>
   20f04:	ldr	lr, [r1]
   20f08:	mov	r6, #0
   20f0c:	mov	r7, #123	; 0x7b
   20f10:	ldr	r1, [r0, #20]
   20f14:	ldr	r3, [r0, #32]
   20f18:	ldr	r5, [lr]
   20f1c:	add	r8, r1, #1
   20f20:	add	r3, r3, #1
   20f24:	str	r8, [r0, #20]
   20f28:	str	r3, [r0, #32]
   20f2c:	add	r3, lr, r5
   20f30:	strb	r7, [r1]
   20f34:	add	r1, sp, #4
   20f38:	str	ip, [sp, #16]
   20f3c:	str	r6, [sp, #20]
   20f40:	ldr	ip, [lr, r5]
   20f44:	str	r3, [sp, #4]
   20f48:	sub	r3, r3, ip
   20f4c:	ldrh	ip, [r3]
   20f50:	str	r3, [sp, #8]
   20f54:	str	ip, [sp, #12]
   20f58:	blx	r2
   20f5c:	ldrb	r3, [r4, #25]
   20f60:	cmp	r3, r6
   20f64:	bne	20f94 <flatcc_json_printer_union_table@@Base+0xb4>
   20f68:	ldr	r1, [r4, #20]
   20f6c:	add	r2, r1, #1
   20f70:	mov	r3, #125	; 0x7d
   20f74:	str	r2, [r4, #20]
   20f78:	strb	r3, [r1]
   20f7c:	add	sp, sp, #24
   20f80:	ldrd	r4, [sp]
   20f84:	ldrd	r6, [sp, #8]
   20f88:	ldr	r8, [sp, #16]
   20f8c:	add	sp, sp, #20
   20f90:	pop	{pc}		; (ldr pc, [sp], #4)
   20f94:	ldr	r3, [r4, #20]
   20f98:	mov	r2, #10
   20f9c:	add	r1, r3, #1
   20fa0:	str	r1, [r4, #20]
   20fa4:	strb	r2, [r3]
   20fa8:	ldrb	r1, [r4, #25]
   20fac:	ldr	r3, [r4, #32]
   20fb0:	ldr	r2, [r4, #16]
   20fb4:	ldr	r0, [r4, #20]
   20fb8:	sub	r3, r3, #1
   20fbc:	mul	r5, r3, r1
   20fc0:	str	r3, [r4, #32]
   20fc4:	add	r3, r0, r5
   20fc8:	cmp	r2, r3
   20fcc:	bcs	20ff4 <flatcc_json_printer_union_table@@Base+0x114>
   20fd0:	mov	r1, r5
   20fd4:	mov	r0, r4
   20fd8:	bl	14724 <test_print@@Base+0xea0>
   20fdc:	b	20f68 <flatcc_json_printer_union_table@@Base+0x88>
   20fe0:	ldr	r3, [r0, #36]	; 0x24
   20fe4:	cmp	r3, #0
   20fe8:	moveq	r3, #2
   20fec:	streq	r3, [r0, #36]	; 0x24
   20ff0:	b	20f7c <flatcc_json_printer_union_table@@Base+0x9c>
   20ff4:	mov	r1, #32
   20ff8:	mov	r2, r5
   20ffc:	bl	124c4 <memset@plt>
   21000:	ldr	r1, [r4, #20]
   21004:	add	r1, r1, r5
   21008:	b	20f6c <flatcc_json_printer_union_table@@Base+0x8c>

0002100c <flatcc_json_printer_union_struct@@Base>:
   2100c:	ldr	ip, [r0, #20]
   21010:	strd	r4, [sp, #-16]!
   21014:	mov	r4, r0
   21018:	ldr	r3, [r0, #32]
   2101c:	str	r6, [sp, #8]
   21020:	str	lr, [sp, #12]
   21024:	mov	lr, #123	; 0x7b
   21028:	add	r5, ip, #1
   2102c:	add	r3, r3, #1
   21030:	str	r5, [r0, #20]
   21034:	str	r3, [r0, #32]
   21038:	strb	lr, [ip]
   2103c:	ldr	r3, [r1]
   21040:	ldr	r1, [r3]
   21044:	add	r1, r3, r1
   21048:	blx	r2
   2104c:	ldrb	r3, [r4, #25]
   21050:	cmp	r3, #0
   21054:	bne	2107c <flatcc_json_printer_union_struct@@Base+0x70>
   21058:	ldr	r1, [r4, #20]
   2105c:	add	r2, r1, #1
   21060:	mov	r3, #125	; 0x7d
   21064:	str	r2, [r4, #20]
   21068:	strb	r3, [r1]
   2106c:	ldrd	r4, [sp]
   21070:	ldr	r6, [sp, #8]
   21074:	add	sp, sp, #12
   21078:	pop	{pc}		; (ldr pc, [sp], #4)
   2107c:	ldr	r3, [r4, #20]
   21080:	mov	r2, #10
   21084:	add	r1, r3, #1
   21088:	str	r1, [r4, #20]
   2108c:	strb	r2, [r3]
   21090:	ldrb	r1, [r4, #25]
   21094:	ldr	r3, [r4, #32]
   21098:	ldr	r2, [r4, #16]
   2109c:	ldr	r0, [r4, #20]
   210a0:	sub	r3, r3, #1
   210a4:	mul	r5, r3, r1
   210a8:	str	r3, [r4, #32]
   210ac:	add	r3, r0, r5
   210b0:	cmp	r2, r3
   210b4:	bcs	210c8 <flatcc_json_printer_union_struct@@Base+0xbc>
   210b8:	mov	r1, r5
   210bc:	mov	r0, r4
   210c0:	bl	14724 <test_print@@Base+0xea0>
   210c4:	b	21058 <flatcc_json_printer_union_struct@@Base+0x4c>
   210c8:	mov	r1, #32
   210cc:	mov	r2, r5
   210d0:	bl	124c4 <memset@plt>
   210d4:	ldr	r1, [r4, #20]
   210d8:	add	r1, r1, r5
   210dc:	b	2105c <flatcc_json_printer_union_struct@@Base+0x50>

000210e0 <flatcc_json_printer_union_string@@Base>:
   210e0:	ldr	r3, [r1]
   210e4:	ldr	r2, [r3]
   210e8:	add	r1, r3, r2
   210ec:	ldr	r2, [r3, r2]
   210f0:	add	r1, r1, #4
   210f4:	b	14abc <test_print@@Base+0x1238>

000210f8 <flatcc_json_printer_embedded_struct_field@@Base>:
   210f8:	cmp	r1, #0
   210fc:	strd	r4, [sp, #-32]!	; 0xffffffe0
   21100:	mov	r4, r0
   21104:	strd	r6, [sp, #8]
   21108:	mov	r7, r3
   2110c:	strd	r8, [sp, #16]
   21110:	mov	r8, r2
   21114:	str	sl, [sp, #24]
   21118:	str	lr, [sp, #28]
   2111c:	ldr	r2, [r0, #20]
   21120:	ldr	r5, [sp, #36]	; 0x24
   21124:	ldr	r6, [sp, #40]	; 0x28
   21128:	beq	21140 <flatcc_json_printer_embedded_struct_field@@Base+0x48>
   2112c:	add	r1, r2, #1
   21130:	mov	r3, #44	; 0x2c
   21134:	str	r1, [r0, #20]
   21138:	strb	r3, [r2]
   2113c:	ldr	r2, [r0, #20]
   21140:	ldrb	r1, [r4, #25]
   21144:	cmp	r1, #0
   21148:	bne	212b4 <flatcc_json_printer_embedded_struct_field@@Base+0x1bc>
   2114c:	ldr	r3, [r4, #16]
   21150:	cmp	r3, r2
   21154:	bhi	21168 <flatcc_json_printer_embedded_struct_field@@Base+0x70>
   21158:	mov	r0, r4
   2115c:	ldr	r3, [r4, #44]	; 0x2c
   21160:	blx	r3
   21164:	ldr	r2, [r4, #20]
   21168:	mov	r3, #34	; 0x22
   2116c:	ldr	r1, [sp, #32]
   21170:	strb	r3, [r2]
   21174:	ldrb	r3, [r4, #26]
   21178:	ldr	r2, [r4, #16]
   2117c:	ldr	r0, [r4, #20]
   21180:	cmp	r3, #0
   21184:	addeq	r0, r0, #1
   21188:	add	r3, r0, r5
   2118c:	cmp	r2, r3
   21190:	mov	r2, r5
   21194:	str	r0, [r4, #20]
   21198:	bhi	21254 <flatcc_json_printer_embedded_struct_field@@Base+0x15c>
   2119c:	mov	r0, r4
   211a0:	bl	14660 <test_print@@Base+0xddc>
   211a4:	ldr	r5, [r4, #20]
   211a8:	mov	r3, #34	; 0x22
   211ac:	mov	ip, #58	; 0x3a
   211b0:	add	r1, r8, r7
   211b4:	mov	r7, #32
   211b8:	strb	r3, [r5]
   211bc:	mov	lr, #123	; 0x7b
   211c0:	mov	r0, r4
   211c4:	ldrb	r3, [r4, #26]
   211c8:	ldr	r5, [r4, #20]
   211cc:	clz	r3, r3
   211d0:	lsr	r3, r3, #5
   211d4:	add	r2, r5, r3
   211d8:	add	r2, r2, #1
   211dc:	str	r2, [r4, #20]
   211e0:	strb	ip, [r5, r3]
   211e4:	ldr	r3, [r4, #20]
   211e8:	strb	r7, [r3]
   211ec:	ldrb	r3, [r4, #25]
   211f0:	ldr	r5, [r4, #20]
   211f4:	ldr	r2, [r4, #32]
   211f8:	adds	r3, r3, #0
   211fc:	movne	r3, #1
   21200:	add	ip, r5, r3
   21204:	add	ip, ip, #1
   21208:	add	r2, r2, #1
   2120c:	str	ip, [r4, #20]
   21210:	str	r2, [r4, #32]
   21214:	strb	lr, [r5, r3]
   21218:	blx	r6
   2121c:	ldrb	r3, [r4, #25]
   21220:	cmp	r3, #0
   21224:	bne	21268 <flatcc_json_printer_embedded_struct_field@@Base+0x170>
   21228:	ldr	r1, [r4, #20]
   2122c:	add	r2, r1, #1
   21230:	mov	r3, #125	; 0x7d
   21234:	str	r2, [r4, #20]
   21238:	strb	r3, [r1]
   2123c:	ldrd	r4, [sp]
   21240:	ldrd	r6, [sp, #8]
   21244:	ldrd	r8, [sp, #16]
   21248:	ldr	sl, [sp, #24]
   2124c:	add	sp, sp, #28
   21250:	pop	{pc}		; (ldr pc, [sp], #4)
   21254:	bl	12428 <memcpy@plt>
   21258:	ldr	r3, [r4, #20]
   2125c:	add	r5, r3, r5
   21260:	str	r5, [r4, #20]
   21264:	b	211a8 <flatcc_json_printer_embedded_struct_field@@Base+0xb0>
   21268:	ldr	r3, [r4, #20]
   2126c:	mov	r2, #10
   21270:	add	r1, r3, #1
   21274:	str	r1, [r4, #20]
   21278:	strb	r2, [r3]
   2127c:	ldrb	r1, [r4, #25]
   21280:	ldr	r3, [r4, #32]
   21284:	ldr	r2, [r4, #16]
   21288:	ldr	r0, [r4, #20]
   2128c:	sub	r3, r3, #1
   21290:	mul	r5, r3, r1
   21294:	str	r3, [r4, #32]
   21298:	add	r3, r0, r5
   2129c:	cmp	r2, r3
   212a0:	bcs	21314 <flatcc_json_printer_embedded_struct_field@@Base+0x21c>
   212a4:	mov	r1, r5
   212a8:	mov	r0, r4
   212ac:	bl	14724 <test_print@@Base+0xea0>
   212b0:	b	21228 <flatcc_json_printer_embedded_struct_field@@Base+0x130>
   212b4:	add	r1, r2, #1
   212b8:	mov	r3, #10
   212bc:	str	r1, [r4, #20]
   212c0:	strb	r3, [r2]
   212c4:	ldrb	r3, [r4, #25]
   212c8:	ldr	r1, [r4, #16]
   212cc:	ldr	r2, [r4, #32]
   212d0:	ldr	r0, [r4, #20]
   212d4:	mul	r9, r2, r3
   212d8:	add	r3, r0, r9
   212dc:	cmp	r1, r3
   212e0:	bcs	212f8 <flatcc_json_printer_embedded_struct_field@@Base+0x200>
   212e4:	mov	r1, r9
   212e8:	mov	r0, r4
   212ec:	bl	14724 <test_print@@Base+0xea0>
   212f0:	ldr	r2, [r4, #20]
   212f4:	b	21168 <flatcc_json_printer_embedded_struct_field@@Base+0x70>
   212f8:	mov	r2, r9
   212fc:	mov	r1, #32
   21300:	bl	124c4 <memset@plt>
   21304:	ldr	r2, [r4, #20]
   21308:	add	r2, r2, r9
   2130c:	str	r2, [r4, #20]
   21310:	b	21168 <flatcc_json_printer_embedded_struct_field@@Base+0x70>
   21314:	mov	r1, r7
   21318:	mov	r2, r5
   2131c:	bl	124c4 <memset@plt>
   21320:	ldr	r1, [r4, #20]
   21324:	add	r1, r1, r5
   21328:	b	2122c <flatcc_json_printer_embedded_struct_field@@Base+0x134>

0002132c <flatcc_json_printer_struct_field@@Base>:
   2132c:	ldr	ip, [r1, #8]
   21330:	add	r2, r2, #2
   21334:	lsl	r2, r2, #1
   21338:	cmp	r2, ip
   2133c:	bxge	lr
   21340:	ldr	ip, [r1, #4]
   21344:	ldrh	r2, [ip, r2]
   21348:	cmp	r2, #0
   2134c:	bxeq	lr
   21350:	strd	r4, [sp, #-24]!	; 0xffffffe8
   21354:	ldr	r5, [r1]
   21358:	strd	r6, [sp, #8]
   2135c:	str	r8, [sp, #16]
   21360:	str	lr, [sp, #20]
   21364:	adds	r5, r5, r2
   21368:	beq	2149c <flatcc_json_printer_struct_field@@Base+0x170>
   2136c:	ldr	ip, [r1, #16]
   21370:	ldr	r2, [r0, #20]
   21374:	cmp	ip, #0
   21378:	add	ip, ip, #1
   2137c:	str	ip, [r1, #16]
   21380:	beq	21398 <flatcc_json_printer_struct_field@@Base+0x6c>
   21384:	add	ip, r2, #1
   21388:	mov	r1, #44	; 0x2c
   2138c:	str	ip, [r0, #20]
   21390:	strb	r1, [r2]
   21394:	ldr	r2, [r0, #20]
   21398:	mov	r6, r3
   2139c:	mov	r4, r0
   213a0:	ldrb	r1, [r0, #25]
   213a4:	cmp	r1, #0
   213a8:	bne	214d0 <flatcc_json_printer_struct_field@@Base+0x1a4>
   213ac:	ldr	r3, [r0, #16]
   213b0:	cmp	r3, r2
   213b4:	bls	214c0 <flatcc_json_printer_struct_field@@Base+0x194>
   213b8:	mov	r3, #34	; 0x22
   213bc:	mov	r1, r6
   213c0:	strb	r3, [r2]
   213c4:	ldrb	r3, [r4, #26]
   213c8:	ldr	r2, [r4, #16]
   213cc:	ldr	r0, [r4, #20]
   213d0:	cmp	r3, #0
   213d4:	addeq	r0, r0, #1
   213d8:	ldr	r3, [sp, #24]
   213dc:	str	r0, [r4, #20]
   213e0:	add	r3, r0, r3
   213e4:	cmp	r2, r3
   213e8:	ldr	r2, [sp, #24]
   213ec:	bls	214b0 <flatcc_json_printer_struct_field@@Base+0x184>
   213f0:	bl	12428 <memcpy@plt>
   213f4:	ldr	r3, [r4, #20]
   213f8:	ldr	r2, [sp, #24]
   213fc:	add	r3, r3, r2
   21400:	str	r3, [r4, #20]
   21404:	mov	r2, #34	; 0x22
   21408:	mov	r6, #58	; 0x3a
   2140c:	mov	r1, r5
   21410:	mov	r5, #32
   21414:	strb	r2, [r3]
   21418:	mov	lr, #123	; 0x7b
   2141c:	mov	r0, r4
   21420:	ldrb	r3, [r4, #26]
   21424:	ldr	ip, [r4, #20]
   21428:	clz	r3, r3
   2142c:	lsr	r3, r3, #5
   21430:	add	r2, ip, r3
   21434:	add	r2, r2, #1
   21438:	str	r2, [r4, #20]
   2143c:	strb	r6, [ip, r3]
   21440:	ldr	r3, [r4, #20]
   21444:	strb	r5, [r3]
   21448:	ldrb	r3, [r4, #25]
   2144c:	ldr	r6, [r4, #20]
   21450:	ldr	r2, [r4, #32]
   21454:	adds	r3, r3, #0
   21458:	movne	r3, #1
   2145c:	add	ip, r6, r3
   21460:	add	ip, ip, #1
   21464:	add	r2, r2, #1
   21468:	str	ip, [r4, #20]
   2146c:	str	r2, [r4, #32]
   21470:	strb	lr, [r6, r3]
   21474:	ldr	r3, [sp, #28]
   21478:	blx	r3
   2147c:	ldrb	r3, [r4, #25]
   21480:	cmp	r3, #0
   21484:	bne	21514 <flatcc_json_printer_struct_field@@Base+0x1e8>
   21488:	ldr	r1, [r4, #20]
   2148c:	add	r2, r1, #1
   21490:	mov	r3, #125	; 0x7d
   21494:	str	r2, [r4, #20]
   21498:	strb	r3, [r1]
   2149c:	ldrd	r4, [sp]
   214a0:	ldrd	r6, [sp, #8]
   214a4:	ldr	r8, [sp, #16]
   214a8:	add	sp, sp, #20
   214ac:	pop	{pc}		; (ldr pc, [sp], #4)
   214b0:	mov	r0, r4
   214b4:	bl	14660 <test_print@@Base+0xddc>
   214b8:	ldr	r3, [r4, #20]
   214bc:	b	21404 <flatcc_json_printer_struct_field@@Base+0xd8>
   214c0:	ldr	r3, [r0, #44]	; 0x2c
   214c4:	blx	r3
   214c8:	ldr	r2, [r4, #20]
   214cc:	b	213b8 <flatcc_json_printer_struct_field@@Base+0x8c>
   214d0:	add	r1, r2, #1
   214d4:	mov	r3, #10
   214d8:	str	r1, [r0, #20]
   214dc:	strb	r3, [r2]
   214e0:	ldrb	r7, [r0, #25]
   214e4:	ldr	r2, [r4, #32]
   214e8:	ldr	r1, [r0, #16]
   214ec:	ldr	r0, [r0, #20]
   214f0:	mul	r7, r2, r7
   214f4:	add	r3, r0, r7
   214f8:	cmp	r1, r3
   214fc:	bcs	21560 <flatcc_json_printer_struct_field@@Base+0x234>
   21500:	mov	r1, r7
   21504:	mov	r0, r4
   21508:	bl	14724 <test_print@@Base+0xea0>
   2150c:	ldr	r2, [r4, #20]
   21510:	b	213b8 <flatcc_json_printer_struct_field@@Base+0x8c>
   21514:	ldr	r3, [r4, #20]
   21518:	mov	r2, #10
   2151c:	add	r1, r3, #1
   21520:	str	r1, [r4, #20]
   21524:	strb	r2, [r3]
   21528:	ldrb	r1, [r4, #25]
   2152c:	ldr	r3, [r4, #32]
   21530:	ldr	r2, [r4, #16]
   21534:	ldr	r0, [r4, #20]
   21538:	sub	r3, r3, #1
   2153c:	mul	r6, r3, r1
   21540:	str	r3, [r4, #32]
   21544:	add	r3, r0, r6
   21548:	cmp	r2, r3
   2154c:	bcs	2157c <flatcc_json_printer_struct_field@@Base+0x250>
   21550:	mov	r1, r6
   21554:	mov	r0, r4
   21558:	bl	14724 <test_print@@Base+0xea0>
   2155c:	b	21488 <flatcc_json_printer_struct_field@@Base+0x15c>
   21560:	mov	r2, r7
   21564:	mov	r1, #32
   21568:	bl	124c4 <memset@plt>
   2156c:	ldr	r2, [r4, #20]
   21570:	add	r2, r2, r7
   21574:	str	r2, [r4, #20]
   21578:	b	213b8 <flatcc_json_printer_struct_field@@Base+0x8c>
   2157c:	mov	r1, r5
   21580:	mov	r2, r6
   21584:	bl	124c4 <memset@plt>
   21588:	ldr	r1, [r4, #20]
   2158c:	add	r1, r1, r6
   21590:	b	2148c <flatcc_json_printer_struct_field@@Base+0x160>

00021594 <flatcc_json_printer_struct_as_root@@Base>:
   21594:	mov	ip, #0
   21598:	strd	r4, [sp, #-12]!
   2159c:	mov	r4, r0
   215a0:	str	lr, [sp, #8]
   215a4:	sub	sp, sp, #12
   215a8:	cmp	r1, ip
   215ac:	cmpne	r2, #7
   215b0:	str	ip, [sp, #4]
   215b4:	bls	21718 <flatcc_json_printer_struct_as_root@@Base+0x184>
   215b8:	cmp	r3, #0
   215bc:	mov	r5, r1
   215c0:	beq	215e8 <flatcc_json_printer_struct_as_root@@Base+0x54>
   215c4:	mov	r2, #4
   215c8:	mov	r1, r3
   215cc:	add	r0, sp, r2
   215d0:	bl	124d0 <strncpy@plt>
   215d4:	ldr	r2, [r5, #4]
   215d8:	ldr	r3, [sp, #4]
   215dc:	cmp	r2, r3
   215e0:	cmpne	r3, #0
   215e4:	bne	21744 <flatcc_json_printer_struct_as_root@@Base+0x1b0>
   215e8:	ldr	r2, [r4, #20]
   215ec:	mov	r1, #123	; 0x7b
   215f0:	mov	r0, r4
   215f4:	ldr	r3, [r4, #32]
   215f8:	add	ip, r2, #1
   215fc:	add	r3, r3, #1
   21600:	str	ip, [r4, #20]
   21604:	str	r3, [r4, #32]
   21608:	strb	r1, [r2]
   2160c:	ldr	r1, [r5]
   21610:	ldr	r3, [sp, #24]
   21614:	add	r1, r5, r1
   21618:	blx	r3
   2161c:	ldrb	r3, [r4, #25]
   21620:	cmp	r3, #0
   21624:	bne	216ac <flatcc_json_printer_struct_as_root@@Base+0x118>
   21628:	ldr	r1, [r4, #20]
   2162c:	mov	r3, #125	; 0x7d
   21630:	add	r2, r1, #1
   21634:	str	r2, [r4, #20]
   21638:	strb	r3, [r1]
   2163c:	ldrb	r3, [r4, #25]
   21640:	cmp	r3, #0
   21644:	bne	21688 <flatcc_json_printer_struct_as_root@@Base+0xf4>
   21648:	mov	r1, #1
   2164c:	mov	r0, r4
   21650:	ldr	r3, [r4, #44]	; 0x2c
   21654:	blx	r3
   21658:	ldr	r3, [r4, #36]	; 0x24
   2165c:	cmp	r3, #0
   21660:	bne	21710 <flatcc_json_printer_struct_as_root@@Base+0x17c>
   21664:	ldr	r2, [r4]
   21668:	ldr	r3, [r4, #12]
   2166c:	ldr	r0, [r4, #20]
   21670:	sub	r0, r0, r2
   21674:	add	r0, r0, r3
   21678:	add	sp, sp, #12
   2167c:	ldrd	r4, [sp]
   21680:	add	sp, sp, #8
   21684:	pop	{pc}		; (ldr pc, [sp], #4)
   21688:	ldr	r3, [r4, #32]
   2168c:	cmp	r3, #0
   21690:	bne	21648 <flatcc_json_printer_struct_as_root@@Base+0xb4>
   21694:	ldr	r3, [r4, #20]
   21698:	mov	r2, #10
   2169c:	add	r1, r3, #1
   216a0:	str	r1, [r4, #20]
   216a4:	strb	r2, [r3]
   216a8:	b	21648 <flatcc_json_printer_struct_as_root@@Base+0xb4>
   216ac:	ldr	r3, [r4, #20]
   216b0:	mov	r2, #10
   216b4:	add	r1, r3, #1
   216b8:	str	r1, [r4, #20]
   216bc:	strb	r2, [r3]
   216c0:	ldrb	r1, [r4, #25]
   216c4:	ldr	r3, [r4, #32]
   216c8:	ldr	r2, [r4, #16]
   216cc:	ldr	r0, [r4, #20]
   216d0:	sub	r3, r3, #1
   216d4:	mul	r5, r3, r1
   216d8:	str	r3, [r4, #32]
   216dc:	add	r3, r0, r5
   216e0:	cmp	r2, r3
   216e4:	bcs	216f8 <flatcc_json_printer_struct_as_root@@Base+0x164>
   216e8:	mov	r1, r5
   216ec:	mov	r0, r4
   216f0:	bl	14724 <test_print@@Base+0xea0>
   216f4:	b	21628 <flatcc_json_printer_struct_as_root@@Base+0x94>
   216f8:	mov	r1, #32
   216fc:	mov	r2, r5
   21700:	bl	124c4 <memset@plt>
   21704:	ldr	r1, [r4, #20]
   21708:	add	r1, r1, r5
   2170c:	b	2162c <flatcc_json_printer_struct_as_root@@Base+0x98>
   21710:	mvn	r0, #0
   21714:	b	21678 <flatcc_json_printer_struct_as_root@@Base+0xe4>
   21718:	ldr	r3, [r0, #36]	; 0x24
   2171c:	movw	r1, #13292	; 0x33ec
   21720:	movt	r1, #2
   21724:	movw	r2, #1019	; 0x3fb
   21728:	cmp	r3, ip
   2172c:	moveq	r3, #1
   21730:	streq	r3, [r0, #36]	; 0x24
   21734:	movw	r0, #13412	; 0x3464
   21738:	movt	r0, #2
   2173c:	ldr	r3, [pc, #44]	; 21770 <flatcc_json_printer_struct_as_root@@Base+0x1dc>
   21740:	bl	1250c <__assert_fail@plt>
   21744:	ldr	r3, [r4, #36]	; 0x24
   21748:	movw	r1, #13292	; 0x33ec
   2174c:	movt	r1, #2
   21750:	movw	r0, #13444	; 0x3484
   21754:	movt	r0, #2
   21758:	movw	r2, #1028	; 0x404
   2175c:	cmp	r3, #0
   21760:	moveq	r3, #1
   21764:	streq	r3, [r4, #36]	; 0x24
   21768:	ldr	r3, [pc]	; 21770 <flatcc_json_printer_struct_as_root@@Base+0x1dc>
   2176c:	bl	1250c <__assert_fail@plt>
   21770:	andeq	r3, r2, r0, lsl #4

00021774 <flatcc_json_printer_table_as_root@@Base>:
   21774:	mov	ip, #0
   21778:	strd	r4, [sp, #-20]!	; 0xffffffec
   2177c:	mov	r4, r0
   21780:	strd	r6, [sp, #8]
   21784:	cmp	r1, ip
   21788:	cmpne	r2, #7
   2178c:	str	lr, [sp, #16]
   21790:	sub	sp, sp, #28
   21794:	str	ip, [sp, #4]
   21798:	bls	21930 <flatcc_json_printer_table_as_root@@Base+0x1bc>
   2179c:	cmp	r3, #0
   217a0:	mov	r5, r1
   217a4:	add	r6, sp, #4
   217a8:	beq	217d0 <flatcc_json_printer_table_as_root@@Base+0x5c>
   217ac:	mov	r1, r3
   217b0:	mov	r2, #4
   217b4:	mov	r0, r6
   217b8:	bl	124d0 <strncpy@plt>
   217bc:	ldr	r2, [r5, #4]
   217c0:	ldr	r3, [sp, #4]
   217c4:	cmp	r2, r3
   217c8:	cmpne	r3, #0
   217cc:	bne	2195c <flatcc_json_printer_table_as_root@@Base+0x1e8>
   217d0:	ldr	r0, [r4, #20]
   217d4:	mov	r1, r6
   217d8:	mov	ip, #0
   217dc:	mov	lr, #99	; 0x63
   217e0:	mov	r6, #123	; 0x7b
   217e4:	ldr	r3, [r4, #32]
   217e8:	ldr	r2, [r5]
   217ec:	add	r7, r0, #1
   217f0:	add	r3, r3, #1
   217f4:	str	r7, [r4, #20]
   217f8:	str	r3, [r4, #32]
   217fc:	add	r3, r5, r2
   21800:	strb	r6, [r0]
   21804:	mov	r0, r4
   21808:	str	lr, [sp, #16]
   2180c:	str	ip, [sp, #20]
   21810:	ldr	r2, [r5, r2]
   21814:	str	r3, [sp, #4]
   21818:	sub	r3, r3, r2
   2181c:	ldrh	r2, [r3]
   21820:	str	r3, [sp, #8]
   21824:	ldr	r3, [sp, #48]	; 0x30
   21828:	str	r2, [sp, #12]
   2182c:	blx	r3
   21830:	ldrb	r3, [r4, #25]
   21834:	cmp	r3, #0
   21838:	bne	218c4 <flatcc_json_printer_table_as_root@@Base+0x150>
   2183c:	ldr	r1, [r4, #20]
   21840:	mov	r3, #125	; 0x7d
   21844:	add	r2, r1, #1
   21848:	str	r2, [r4, #20]
   2184c:	strb	r3, [r1]
   21850:	ldrb	r3, [r4, #25]
   21854:	cmp	r3, #0
   21858:	bne	218a0 <flatcc_json_printer_table_as_root@@Base+0x12c>
   2185c:	mov	r1, #1
   21860:	mov	r0, r4
   21864:	ldr	r3, [r4, #44]	; 0x2c
   21868:	blx	r3
   2186c:	ldr	r3, [r4, #36]	; 0x24
   21870:	cmp	r3, #0
   21874:	bne	21928 <flatcc_json_printer_table_as_root@@Base+0x1b4>
   21878:	ldr	r2, [r4]
   2187c:	ldr	r3, [r4, #12]
   21880:	ldr	r0, [r4, #20]
   21884:	sub	r0, r0, r2
   21888:	add	r0, r0, r3
   2188c:	add	sp, sp, #28
   21890:	ldrd	r4, [sp]
   21894:	ldrd	r6, [sp, #8]
   21898:	add	sp, sp, #16
   2189c:	pop	{pc}		; (ldr pc, [sp], #4)
   218a0:	ldr	r3, [r4, #32]
   218a4:	cmp	r3, #0
   218a8:	bne	2185c <flatcc_json_printer_table_as_root@@Base+0xe8>
   218ac:	ldr	r3, [r4, #20]
   218b0:	mov	r2, #10
   218b4:	add	r1, r3, #1
   218b8:	str	r1, [r4, #20]
   218bc:	strb	r2, [r3]
   218c0:	b	2185c <flatcc_json_printer_table_as_root@@Base+0xe8>
   218c4:	ldr	r3, [r4, #20]
   218c8:	mov	r2, #10
   218cc:	add	r1, r3, #1
   218d0:	str	r1, [r4, #20]
   218d4:	strb	r2, [r3]
   218d8:	ldrb	r1, [r4, #25]
   218dc:	ldr	r3, [r4, #32]
   218e0:	ldr	r2, [r4, #16]
   218e4:	ldr	r0, [r4, #20]
   218e8:	sub	r3, r3, #1
   218ec:	mul	r5, r3, r1
   218f0:	str	r3, [r4, #32]
   218f4:	add	r3, r0, r5
   218f8:	cmp	r2, r3
   218fc:	bcs	21910 <flatcc_json_printer_table_as_root@@Base+0x19c>
   21900:	mov	r1, r5
   21904:	mov	r0, r4
   21908:	bl	14724 <test_print@@Base+0xea0>
   2190c:	b	2183c <flatcc_json_printer_table_as_root@@Base+0xc8>
   21910:	mov	r1, #32
   21914:	mov	r2, r5
   21918:	bl	124c4 <memset@plt>
   2191c:	ldr	r1, [r4, #20]
   21920:	add	r1, r1, r5
   21924:	b	21840 <flatcc_json_printer_table_as_root@@Base+0xcc>
   21928:	mvn	r0, #0
   2192c:	b	2188c <flatcc_json_printer_table_as_root@@Base+0x118>
   21930:	ldr	r3, [r0, #36]	; 0x24
   21934:	movw	r1, #13292	; 0x33ec
   21938:	movt	r1, #2
   2193c:	movw	r2, #1019	; 0x3fb
   21940:	cmp	r3, ip
   21944:	moveq	r3, #1
   21948:	streq	r3, [r0, #36]	; 0x24
   2194c:	movw	r0, #13412	; 0x3464
   21950:	movt	r0, #2
   21954:	ldr	r3, [pc, #44]	; 21988 <flatcc_json_printer_table_as_root@@Base+0x214>
   21958:	bl	1250c <__assert_fail@plt>
   2195c:	ldr	r3, [r4, #36]	; 0x24
   21960:	movw	r1, #13292	; 0x33ec
   21964:	movt	r1, #2
   21968:	movw	r0, #13444	; 0x3484
   2196c:	movt	r0, #2
   21970:	movw	r2, #1028	; 0x404
   21974:	cmp	r3, #0
   21978:	moveq	r3, #1
   2197c:	streq	r3, [r4, #36]	; 0x24
   21980:	ldr	r3, [pc]	; 21988 <flatcc_json_printer_table_as_root@@Base+0x214>
   21984:	bl	1250c <__assert_fail@plt>
   21988:	andeq	r3, r2, r0, lsl #4

0002198c <flatcc_json_printer_struct_as_nested_root@@Base>:
   2198c:	ldr	ip, [r1, #8]
   21990:	add	r2, r2, #2
   21994:	lsl	r2, r2, #1
   21998:	cmp	r2, ip
   2199c:	bxge	lr
   219a0:	ldr	ip, [r1, #4]
   219a4:	ldrh	r2, [ip, r2]
   219a8:	cmp	r2, #0
   219ac:	bxeq	lr
   219b0:	strd	r4, [sp, #-28]!	; 0xffffffe4
   219b4:	ldr	ip, [r1]
   219b8:	strd	r6, [sp, #8]
   219bc:	strd	r8, [sp, #16]
   219c0:	str	lr, [sp, #24]
   219c4:	sub	sp, sp, #12
   219c8:	adds	r6, ip, r2
   219cc:	beq	21ac4 <flatcc_json_printer_struct_as_nested_root@@Base+0x138>
   219d0:	ldr	r5, [ip, r2]
   219d4:	mov	r7, r3
   219d8:	mov	r8, r1
   219dc:	mov	r1, #0
   219e0:	mov	r4, r0
   219e4:	ldr	r3, [r6, r5]
   219e8:	adds	r9, r6, r5
   219ec:	moveq	r2, #1
   219f0:	movne	r2, r1
   219f4:	str	r1, [sp, #4]
   219f8:	cmp	r3, #7
   219fc:	orrls	r2, r2, #1
   21a00:	cmp	r2, r1
   21a04:	bne	21b40 <flatcc_json_printer_struct_as_nested_root@@Base+0x1b4>
   21a08:	ldr	r3, [sp, #44]	; 0x2c
   21a0c:	cmp	r3, #0
   21a10:	beq	21a38 <flatcc_json_printer_struct_as_nested_root@@Base+0xac>
   21a14:	mov	r2, #4
   21a18:	mov	r1, r3
   21a1c:	add	r0, sp, r2
   21a20:	bl	124d0 <strncpy@plt>
   21a24:	ldr	r2, [r9, #4]
   21a28:	ldr	r3, [sp, #4]
   21a2c:	cmp	r2, r3
   21a30:	cmpne	r3, #0
   21a34:	bne	21b6c <flatcc_json_printer_struct_as_nested_root@@Base+0x1e0>
   21a38:	ldr	r3, [r8, #16]
   21a3c:	add	r2, r3, #1
   21a40:	cmp	r3, #0
   21a44:	str	r2, [r8, #16]
   21a48:	beq	21a60 <flatcc_json_printer_struct_as_nested_root@@Base+0xd4>
   21a4c:	ldr	r3, [r4, #20]
   21a50:	mov	r2, #44	; 0x2c
   21a54:	add	r1, r3, #1
   21a58:	str	r1, [r4, #20]
   21a5c:	strb	r2, [r3]
   21a60:	mov	r1, r7
   21a64:	mov	r0, r4
   21a68:	ldr	r2, [sp, #40]	; 0x28
   21a6c:	bl	14d0c <test_print@@Base+0x1488>
   21a70:	ldr	r2, [r4, #20]
   21a74:	mov	r1, #123	; 0x7b
   21a78:	mov	r0, r4
   21a7c:	ldr	r3, [r4, #32]
   21a80:	add	ip, r2, #1
   21a84:	add	r3, r3, #1
   21a88:	str	ip, [r4, #20]
   21a8c:	str	r3, [r4, #32]
   21a90:	strb	r1, [r2]
   21a94:	ldr	r1, [r6, r5]
   21a98:	ldr	r3, [sp, #48]	; 0x30
   21a9c:	add	r1, r9, r1
   21aa0:	blx	r3
   21aa4:	ldrb	r3, [r4, #25]
   21aa8:	cmp	r3, #0
   21aac:	ldr	r3, [r4, #20]
   21ab0:	bne	21adc <flatcc_json_printer_struct_as_nested_root@@Base+0x150>
   21ab4:	add	r1, r3, #1
   21ab8:	mov	r2, #125	; 0x7d
   21abc:	str	r1, [r4, #20]
   21ac0:	strb	r2, [r3]
   21ac4:	add	sp, sp, #12
   21ac8:	ldrd	r4, [sp]
   21acc:	ldrd	r6, [sp, #8]
   21ad0:	ldrd	r8, [sp, #16]
   21ad4:	add	sp, sp, #24
   21ad8:	pop	{pc}		; (ldr pc, [sp], #4)
   21adc:	add	r1, r3, #1
   21ae0:	mov	r2, #10
   21ae4:	str	r1, [r4, #20]
   21ae8:	strb	r2, [r3]
   21aec:	ldrb	r3, [r4, #25]
   21af0:	ldr	r2, [r4, #32]
   21af4:	ldr	r1, [r4, #16]
   21af8:	ldr	r0, [r4, #20]
   21afc:	sub	r2, r2, #1
   21b00:	mul	r5, r2, r3
   21b04:	str	r2, [r4, #32]
   21b08:	add	r3, r0, r5
   21b0c:	cmp	r1, r3
   21b10:	bcs	21b28 <flatcc_json_printer_struct_as_nested_root@@Base+0x19c>
   21b14:	mov	r1, r5
   21b18:	mov	r0, r4
   21b1c:	bl	14724 <test_print@@Base+0xea0>
   21b20:	ldr	r3, [r4, #20]
   21b24:	b	21ab4 <flatcc_json_printer_struct_as_nested_root@@Base+0x128>
   21b28:	mov	r2, r5
   21b2c:	mov	r1, #32
   21b30:	bl	124c4 <memset@plt>
   21b34:	ldr	r3, [r4, #20]
   21b38:	add	r3, r3, r5
   21b3c:	b	21ab4 <flatcc_json_printer_struct_as_nested_root@@Base+0x128>
   21b40:	ldr	r3, [r0, #36]	; 0x24
   21b44:	movw	r2, #1019	; 0x3fb
   21b48:	cmp	r3, r1
   21b4c:	movw	r1, #13292	; 0x33ec
   21b50:	movt	r1, #2
   21b54:	moveq	r3, #1
   21b58:	streq	r3, [r0, #36]	; 0x24
   21b5c:	movw	r0, #13412	; 0x3464
   21b60:	movt	r0, #2
   21b64:	ldr	r3, [pc, #44]	; 21b98 <flatcc_json_printer_struct_as_nested_root@@Base+0x20c>
   21b68:	bl	1250c <__assert_fail@plt>
   21b6c:	ldr	r3, [r4, #36]	; 0x24
   21b70:	movw	r1, #13292	; 0x33ec
   21b74:	movt	r1, #2
   21b78:	movw	r0, #13444	; 0x3484
   21b7c:	movt	r0, #2
   21b80:	movw	r2, #1028	; 0x404
   21b84:	cmp	r3, #0
   21b88:	moveq	r3, #1
   21b8c:	streq	r3, [r4, #36]	; 0x24
   21b90:	ldr	r3, [pc]	; 21b98 <flatcc_json_printer_struct_as_nested_root@@Base+0x20c>
   21b94:	bl	1250c <__assert_fail@plt>
   21b98:	andeq	r3, r2, r0, lsl #4

00021b9c <flatcc_json_printer_table_as_nested_root@@Base>:
   21b9c:	ldr	ip, [r1, #8]
   21ba0:	add	r2, r2, #2
   21ba4:	lsl	r2, r2, #1
   21ba8:	cmp	r2, ip
   21bac:	bxge	lr
   21bb0:	ldr	ip, [r1, #4]
   21bb4:	ldrh	r2, [ip, r2]
   21bb8:	cmp	r2, #0
   21bbc:	bxeq	lr
   21bc0:	strd	r4, [sp, #-24]!	; 0xffffffe8
   21bc4:	ldr	ip, [r1]
   21bc8:	strd	r6, [sp, #8]
   21bcc:	str	r8, [sp, #16]
   21bd0:	str	lr, [sp, #20]
   21bd4:	sub	sp, sp, #24
   21bd8:	adds	r5, ip, r2
   21bdc:	beq	21d08 <flatcc_json_printer_table_as_nested_root@@Base+0x16c>
   21be0:	mov	r6, r3
   21be4:	ldr	r3, [ip, r2]
   21be8:	mov	r7, r1
   21bec:	mov	r2, #0
   21bf0:	mov	r4, r0
   21bf4:	ldr	r1, [r5, r3]
   21bf8:	add	r5, r5, r3
   21bfc:	adds	r8, r5, #4
   21c00:	str	r2, [sp, #4]
   21c04:	moveq	r2, #1
   21c08:	cmp	r1, #7
   21c0c:	orrls	r2, r2, #1
   21c10:	cmp	r2, #0
   21c14:	bne	21d98 <flatcc_json_printer_table_as_nested_root@@Base+0x1fc>
   21c18:	ldr	r3, [sp, #52]	; 0x34
   21c1c:	cmp	r3, #0
   21c20:	beq	21c48 <flatcc_json_printer_table_as_nested_root@@Base+0xac>
   21c24:	mov	r2, #4
   21c28:	mov	r1, r3
   21c2c:	add	r0, sp, r2
   21c30:	bl	124d0 <strncpy@plt>
   21c34:	ldr	r3, [sp, #4]
   21c38:	ldr	r2, [r5, #8]
   21c3c:	cmp	r2, r3
   21c40:	cmpne	r3, #0
   21c44:	bne	21dc4 <flatcc_json_printer_table_as_nested_root@@Base+0x228>
   21c48:	ldr	r3, [r7, #16]
   21c4c:	add	r2, r3, #1
   21c50:	cmp	r3, #0
   21c54:	str	r2, [r7, #16]
   21c58:	beq	21c70 <flatcc_json_printer_table_as_nested_root@@Base+0xd4>
   21c5c:	ldr	r3, [r4, #20]
   21c60:	mov	r2, #44	; 0x2c
   21c64:	add	r1, r3, #1
   21c68:	str	r1, [r4, #20]
   21c6c:	strb	r2, [r3]
   21c70:	mov	r1, r6
   21c74:	mov	r0, r4
   21c78:	ldr	r2, [sp, #48]	; 0x30
   21c7c:	bl	14d0c <test_print@@Base+0x1488>
   21c80:	ldr	r3, [r7, #12]
   21c84:	subs	r3, r3, #1
   21c88:	beq	21d6c <flatcc_json_printer_table_as_nested_root@@Base+0x1d0>
   21c8c:	ldr	r1, [r4, #20]
   21c90:	mov	r0, #123	; 0x7b
   21c94:	mov	lr, #0
   21c98:	ldr	r2, [r4, #32]
   21c9c:	ldr	ip, [r5, #4]
   21ca0:	add	r5, r1, #1
   21ca4:	add	r2, r2, #1
   21ca8:	str	r5, [r4, #20]
   21cac:	str	r2, [r4, #32]
   21cb0:	add	r2, r8, ip
   21cb4:	strb	r0, [r1]
   21cb8:	add	r1, sp, #4
   21cbc:	mov	r0, r4
   21cc0:	str	r3, [sp, #16]
   21cc4:	str	lr, [sp, #20]
   21cc8:	ldr	r3, [r8, ip]
   21ccc:	str	r2, [sp, #4]
   21cd0:	sub	r3, r2, r3
   21cd4:	ldrh	r2, [r3]
   21cd8:	str	r3, [sp, #8]
   21cdc:	ldr	r3, [sp, #56]	; 0x38
   21ce0:	str	r2, [sp, #12]
   21ce4:	blx	r3
   21ce8:	ldrb	r3, [r4, #25]
   21cec:	cmp	r3, #0
   21cf0:	ldr	r3, [r4, #20]
   21cf4:	bne	21d20 <flatcc_json_printer_table_as_nested_root@@Base+0x184>
   21cf8:	add	r1, r3, #1
   21cfc:	mov	r2, #125	; 0x7d
   21d00:	str	r1, [r4, #20]
   21d04:	strb	r2, [r3]
   21d08:	add	sp, sp, #24
   21d0c:	ldrd	r4, [sp]
   21d10:	ldrd	r6, [sp, #8]
   21d14:	ldr	r8, [sp, #16]
   21d18:	add	sp, sp, #20
   21d1c:	pop	{pc}		; (ldr pc, [sp], #4)
   21d20:	add	r1, r3, #1
   21d24:	mov	r2, #10
   21d28:	str	r1, [r4, #20]
   21d2c:	strb	r2, [r3]
   21d30:	ldrb	r3, [r4, #25]
   21d34:	ldr	r2, [r4, #32]
   21d38:	ldr	r1, [r4, #16]
   21d3c:	ldr	r0, [r4, #20]
   21d40:	sub	r2, r2, #1
   21d44:	mul	r5, r2, r3
   21d48:	str	r2, [r4, #32]
   21d4c:	add	r3, r0, r5
   21d50:	cmp	r1, r3
   21d54:	bcs	21d80 <flatcc_json_printer_table_as_nested_root@@Base+0x1e4>
   21d58:	mov	r1, r5
   21d5c:	mov	r0, r4
   21d60:	bl	14724 <test_print@@Base+0xea0>
   21d64:	ldr	r3, [r4, #20]
   21d68:	b	21cf8 <flatcc_json_printer_table_as_nested_root@@Base+0x15c>
   21d6c:	ldr	r3, [r4, #36]	; 0x24
   21d70:	cmp	r3, #0
   21d74:	moveq	r3, #2
   21d78:	streq	r3, [r4, #36]	; 0x24
   21d7c:	b	21d08 <flatcc_json_printer_table_as_nested_root@@Base+0x16c>
   21d80:	mov	r2, r5
   21d84:	mov	r1, #32
   21d88:	bl	124c4 <memset@plt>
   21d8c:	ldr	r3, [r4, #20]
   21d90:	add	r3, r3, r5
   21d94:	b	21cf8 <flatcc_json_printer_table_as_nested_root@@Base+0x15c>
   21d98:	ldr	r3, [r0, #36]	; 0x24
   21d9c:	movw	r1, #13292	; 0x33ec
   21da0:	movt	r1, #2
   21da4:	movw	r2, #1019	; 0x3fb
   21da8:	cmp	r3, #0
   21dac:	moveq	r3, #1
   21db0:	streq	r3, [r0, #36]	; 0x24
   21db4:	movw	r0, #13412	; 0x3464
   21db8:	movt	r0, #2
   21dbc:	ldr	r3, [pc, #44]	; 21df0 <flatcc_json_printer_table_as_nested_root@@Base+0x254>
   21dc0:	bl	1250c <__assert_fail@plt>
   21dc4:	ldr	r3, [r4, #36]	; 0x24
   21dc8:	movw	r1, #13292	; 0x33ec
   21dcc:	movt	r1, #2
   21dd0:	movw	r0, #13444	; 0x3484
   21dd4:	movt	r0, #2
   21dd8:	movw	r2, #1028	; 0x404
   21ddc:	cmp	r3, #0
   21de0:	moveq	r3, #1
   21de4:	streq	r3, [r4, #36]	; 0x24
   21de8:	ldr	r3, [pc]	; 21df0 <flatcc_json_printer_table_as_nested_root@@Base+0x254>
   21dec:	bl	1250c <__assert_fail@plt>
   21df0:	andeq	r3, r2, r0, lsl #4

00021df4 <flatcc_json_printer_init@@Base>:
   21df4:	mov	r2, #48	; 0x30
   21df8:	strd	r4, [sp, #-16]!
   21dfc:	mov	r5, r1
   21e00:	mov	r1, #0
   21e04:	mov	r4, r0
   21e08:	str	r6, [sp, #8]
   21e0c:	str	lr, [sp, #12]
   21e10:	bl	124c4 <memset@plt>
   21e14:	cmp	r5, #0
   21e18:	beq	21e74 <flatcc_json_printer_init@@Base+0x80>
   21e1c:	movw	r3, #18508	; 0x484c
   21e20:	movt	r3, #1
   21e24:	str	r5, [r4, #40]	; 0x28
   21e28:	movw	r0, #16448	; 0x4040
   21e2c:	str	r3, [r4, #44]	; 0x2c
   21e30:	bl	12488 <malloc@plt>
   21e34:	cmp	r0, #0
   21e38:	str	r0, [r4]
   21e3c:	beq	21e84 <flatcc_json_printer_init@@Base+0x90>
   21e40:	add	ip, r0, #16384	; 0x4000
   21e44:	mov	r3, #1
   21e48:	movw	r1, #16448	; 0x4040
   21e4c:	mov	r2, #16384	; 0x4000
   21e50:	str	r0, [r4, #20]
   21e54:	mov	r0, #0
   21e58:	stmib	r4, {r1, r2}
   21e5c:	str	ip, [r4, #16]
   21e60:	strb	r3, [r4, #24]
   21e64:	ldrd	r4, [sp]
   21e68:	ldr	r6, [sp, #8]
   21e6c:	add	sp, sp, #12
   21e70:	pop	{pc}		; (ldr pc, [sp], #4)
   21e74:	movw	r3, #16524	; 0x408c
   21e78:	movt	r3, #3
   21e7c:	ldr	r5, [r3]
   21e80:	b	21e1c <flatcc_json_printer_init@@Base+0x28>
   21e84:	mvn	r0, #0
   21e88:	b	21e64 <flatcc_json_printer_init@@Base+0x70>

00021e8c <flatcc_json_printer_init_buffer@@Base>:
   21e8c:	cmp	r2, #63	; 0x3f
   21e90:	strd	r4, [sp, #-16]!
   21e94:	str	r6, [sp, #8]
   21e98:	str	lr, [sp, #12]
   21e9c:	bls	21ef8 <flatcc_json_printer_init_buffer@@Base+0x6c>
   21ea0:	mov	r4, r0
   21ea4:	mov	r6, r1
   21ea8:	mov	r5, r2
   21eac:	mov	r1, #0
   21eb0:	mov	r2, #32
   21eb4:	add	r0, r0, #12
   21eb8:	bl	124c4 <memset@plt>
   21ebc:	sub	r2, r5, #64	; 0x40
   21ec0:	movw	r3, #17948	; 0x461c
   21ec4:	movt	r3, #1
   21ec8:	add	r1, r6, r2
   21ecc:	str	r6, [r4]
   21ed0:	str	r5, [r4, #4]
   21ed4:	mov	r0, #0
   21ed8:	str	r2, [r4, #8]
   21edc:	str	r1, [r4, #16]
   21ee0:	str	r6, [r4, #20]
   21ee4:	str	r3, [r4, #44]	; 0x2c
   21ee8:	ldrd	r4, [sp]
   21eec:	ldr	r6, [sp, #8]
   21ef0:	add	sp, sp, #12
   21ef4:	pop	{pc}		; (ldr pc, [sp], #4)
   21ef8:	movw	r1, #13292	; 0x33ec
   21efc:	movt	r1, #2
   21f00:	ldr	r3, [pc, #12]	; 21f14 <flatcc_json_printer_init_buffer@@Base+0x88>
   21f04:	movw	r0, #13472	; 0x34a0
   21f08:	movt	r0, #2
   21f0c:	movw	r2, #1165	; 0x48d
   21f10:	bl	1250c <__assert_fail@plt>
   21f14:	andeq	r3, r2, r0, lsl r2

00021f18 <flatcc_json_printer_init_dynamic_buffer@@Base>:
   21f18:	cmp	r1, #0
   21f1c:	strd	r4, [sp, #-16]!
   21f20:	mov	r4, r0
   21f24:	moveq	r5, #4096	; 0x1000
   21f28:	str	r6, [sp, #8]
   21f2c:	moveq	r6, #4032	; 0xfc0
   21f30:	str	lr, [sp, #12]
   21f34:	beq	21f48 <flatcc_json_printer_init_dynamic_buffer@@Base+0x30>
   21f38:	cmp	r1, #64	; 0x40
   21f3c:	movcs	r5, r1
   21f40:	movcc	r5, #64	; 0x40
   21f44:	sub	r6, r5, #64	; 0x40
   21f48:	mov	r2, #32
   21f4c:	mov	r1, #0
   21f50:	add	r0, r4, #12
   21f54:	bl	124c4 <memset@plt>
   21f58:	mov	r0, r5
   21f5c:	bl	12488 <malloc@plt>
   21f60:	add	r1, r0, r6
   21f64:	movw	r3, #18688	; 0x4900
   21f68:	movt	r3, #1
   21f6c:	mov	r2, #1
   21f70:	stm	r4, {r0, r5, r6}
   21f74:	cmp	r0, #0
   21f78:	str	r1, [r4, #16]
   21f7c:	str	r0, [r4, #20]
   21f80:	movne	r0, #0
   21f84:	strb	r2, [r4, #24]
   21f88:	str	r3, [r4, #44]	; 0x2c
   21f8c:	beq	21fa0 <flatcc_json_printer_init_dynamic_buffer@@Base+0x88>
   21f90:	ldrd	r4, [sp]
   21f94:	ldr	r6, [sp, #8]
   21f98:	add	sp, sp, #12
   21f9c:	pop	{pc}		; (ldr pc, [sp], #4)
   21fa0:	ldr	r3, [r4, #36]	; 0x24
   21fa4:	cmp	r3, #0
   21fa8:	moveq	r3, #3
   21fac:	mvneq	r0, #0
   21fb0:	mvnne	r0, #0
   21fb4:	streq	r3, [r4, #36]	; 0x24
   21fb8:	b	21f90 <flatcc_json_printer_init_dynamic_buffer@@Base+0x78>

00021fbc <flatcc_json_printer_get_buffer@@Base>:
   21fbc:	strd	r4, [sp, #-16]!
   21fc0:	mov	r5, r1
   21fc4:	mov	r1, #0
   21fc8:	ldr	r3, [r0, #44]	; 0x2c
   21fcc:	mov	r4, r0
   21fd0:	str	r6, [sp, #8]
   21fd4:	str	lr, [sp, #12]
   21fd8:	blx	r3
   21fdc:	cmp	r5, #0
   21fe0:	ldr	r0, [r4]
   21fe4:	ldrne	r3, [r4, #20]
   21fe8:	ldr	r6, [sp, #8]
   21fec:	subne	r3, r3, r0
   21ff0:	strne	r3, [r5]
   21ff4:	ldrd	r4, [sp]
   21ff8:	add	sp, sp, #12
   21ffc:	pop	{pc}		; (ldr pc, [sp], #4)

00022000 <flatcc_json_printer_finalize_dynamic_buffer@@Base>:
   22000:	strd	r4, [sp, #-16]!
   22004:	mov	r4, r0
   22008:	ldr	r3, [r0, #44]	; 0x2c
   2200c:	str	r6, [sp, #8]
   22010:	mov	r6, r1
   22014:	mov	r1, #0
   22018:	str	lr, [sp, #12]
   2201c:	blx	r3
   22020:	cmp	r6, #0
   22024:	ldr	r5, [r4]
   22028:	mov	r0, r4
   2202c:	mov	r2, #48	; 0x30
   22030:	mov	r1, #0
   22034:	ldrne	r3, [r4, #20]
   22038:	subne	r3, r3, r5
   2203c:	strne	r3, [r6]
   22040:	bl	124c4 <memset@plt>
   22044:	mov	r0, r5
   22048:	ldrd	r4, [sp]
   2204c:	ldr	r6, [sp, #8]
   22050:	add	sp, sp, #12
   22054:	pop	{pc}		; (ldr pc, [sp], #4)

00022058 <flatcc_json_printer_clear@@Base>:
   22058:	str	r4, [sp, #-8]!
   2205c:	mov	r4, r0
   22060:	str	lr, [sp, #4]
   22064:	ldrb	r3, [r0, #24]
   22068:	cmp	r3, #0
   2206c:	beq	22080 <flatcc_json_printer_clear@@Base+0x28>
   22070:	ldr	r0, [r0]
   22074:	cmp	r0, #0
   22078:	beq	22080 <flatcc_json_printer_clear@@Base+0x28>
   2207c:	bl	1241c <free@plt>
   22080:	mov	r0, r4
   22084:	mov	r2, #48	; 0x30
   22088:	ldr	r4, [sp]
   2208c:	mov	r1, #0
   22090:	ldr	lr, [sp, #4]
   22094:	add	sp, sp, #8
   22098:	b	124c4 <memset@plt>
   2209c:	cmp	r3, #0
   220a0:	cmpeq	r2, #0
   220a4:	bne	220c8 <flatcc_json_printer_clear@@Base+0x70>
   220a8:	cmp	r1, #0
   220ac:	movlt	r1, #-2147483648	; 0x80000000
   220b0:	movlt	r0, #0
   220b4:	blt	220c4 <flatcc_json_printer_clear@@Base+0x6c>
   220b8:	cmpeq	r0, #0
   220bc:	mvnne	r1, #-2147483648	; 0x80000000
   220c0:	mvnne	r0, #0
   220c4:	b	221ac <flatcc_json_printer_clear@@Base+0x154>
   220c8:	sub	sp, sp, #8
   220cc:	push	{sp, lr}
   220d0:	cmp	r1, #0
   220d4:	blt	220f4 <flatcc_json_printer_clear@@Base+0x9c>
   220d8:	cmp	r3, #0
   220dc:	blt	22128 <flatcc_json_printer_clear@@Base+0xd0>
   220e0:	bl	221bc <flatcc_json_printer_clear@@Base+0x164>
   220e4:	ldr	lr, [sp, #4]
   220e8:	add	sp, sp, #8
   220ec:	pop	{r2, r3}
   220f0:	bx	lr
   220f4:	rsbs	r0, r0, #0
   220f8:	sbc	r1, r1, r1, lsl #1
   220fc:	cmp	r3, #0
   22100:	blt	2214c <flatcc_json_printer_clear@@Base+0xf4>
   22104:	bl	221bc <flatcc_json_printer_clear@@Base+0x164>
   22108:	ldr	lr, [sp, #4]
   2210c:	add	sp, sp, #8
   22110:	pop	{r2, r3}
   22114:	rsbs	r0, r0, #0
   22118:	sbc	r1, r1, r1, lsl #1
   2211c:	rsbs	r2, r2, #0
   22120:	sbc	r3, r3, r3, lsl #1
   22124:	bx	lr
   22128:	rsbs	r2, r2, #0
   2212c:	sbc	r3, r3, r3, lsl #1
   22130:	bl	221bc <flatcc_json_printer_clear@@Base+0x164>
   22134:	ldr	lr, [sp, #4]
   22138:	add	sp, sp, #8
   2213c:	pop	{r2, r3}
   22140:	rsbs	r0, r0, #0
   22144:	sbc	r1, r1, r1, lsl #1
   22148:	bx	lr
   2214c:	rsbs	r2, r2, #0
   22150:	sbc	r3, r3, r3, lsl #1
   22154:	bl	221bc <flatcc_json_printer_clear@@Base+0x164>
   22158:	ldr	lr, [sp, #4]
   2215c:	add	sp, sp, #8
   22160:	pop	{r2, r3}
   22164:	rsbs	r2, r2, #0
   22168:	sbc	r3, r3, r3, lsl #1
   2216c:	bx	lr
   22170:	cmp	r3, #0
   22174:	cmpeq	r2, #0
   22178:	bne	22190 <flatcc_json_printer_clear@@Base+0x138>
   2217c:	cmp	r1, #0
   22180:	cmpeq	r0, #0
   22184:	mvnne	r1, #0
   22188:	mvnne	r0, #0
   2218c:	b	221ac <flatcc_json_printer_clear@@Base+0x154>
   22190:	sub	sp, sp, #8
   22194:	push	{sp, lr}
   22198:	bl	221bc <flatcc_json_printer_clear@@Base+0x164>
   2219c:	ldr	lr, [sp, #4]
   221a0:	add	sp, sp, #8
   221a4:	pop	{r2, r3}
   221a8:	bx	lr
   221ac:	push	{r1, lr}
   221b0:	mov	r0, #8
   221b4:	bl	123ec <raise@plt>
   221b8:	pop	{r1, pc}
   221bc:	cmp	r1, r3
   221c0:	cmpeq	r0, r2
   221c4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   221c8:	mov	r4, r0
   221cc:	movcc	r0, #0
   221d0:	mov	r5, r1
   221d4:	ldr	lr, [sp, #36]	; 0x24
   221d8:	movcc	r1, r0
   221dc:	bcc	222d8 <flatcc_json_printer_clear@@Base+0x280>
   221e0:	cmp	r3, #0
   221e4:	clzeq	ip, r2
   221e8:	clzne	ip, r3
   221ec:	addeq	ip, ip, #32
   221f0:	cmp	r5, #0
   221f4:	clzeq	r1, r4
   221f8:	addeq	r1, r1, #32
   221fc:	clzne	r1, r5
   22200:	sub	ip, ip, r1
   22204:	sub	sl, ip, #32
   22208:	lsl	r9, r3, ip
   2220c:	rsb	fp, ip, #32
   22210:	orr	r9, r9, r2, lsl sl
   22214:	orr	r9, r9, r2, lsr fp
   22218:	lsl	r8, r2, ip
   2221c:	cmp	r5, r9
   22220:	cmpeq	r4, r8
   22224:	movcc	r0, #0
   22228:	movcc	r1, r0
   2222c:	bcc	22248 <flatcc_json_printer_clear@@Base+0x1f0>
   22230:	mov	r0, #1
   22234:	subs	r4, r4, r8
   22238:	lsl	r1, r0, sl
   2223c:	orr	r1, r1, r0, lsr fp
   22240:	lsl	r0, r0, ip
   22244:	sbc	r5, r5, r9
   22248:	cmp	ip, #0
   2224c:	beq	222d8 <flatcc_json_printer_clear@@Base+0x280>
   22250:	lsr	r6, r8, #1
   22254:	orr	r6, r6, r9, lsl #31
   22258:	lsr	r7, r9, #1
   2225c:	mov	r2, ip
   22260:	b	22284 <flatcc_json_printer_clear@@Base+0x22c>
   22264:	subs	r3, r4, r6
   22268:	sbc	r8, r5, r7
   2226c:	adds	r3, r3, r3
   22270:	adc	r8, r8, r8
   22274:	adds	r4, r3, #1
   22278:	adc	r5, r8, #0
   2227c:	subs	r2, r2, #1
   22280:	beq	222a0 <flatcc_json_printer_clear@@Base+0x248>
   22284:	cmp	r5, r7
   22288:	cmpeq	r4, r6
   2228c:	bcs	22264 <flatcc_json_printer_clear@@Base+0x20c>
   22290:	adds	r4, r4, r4
   22294:	adc	r5, r5, r5
   22298:	subs	r2, r2, #1
   2229c:	bne	22284 <flatcc_json_printer_clear@@Base+0x22c>
   222a0:	lsr	r3, r4, ip
   222a4:	orr	r3, r3, r5, lsl fp
   222a8:	lsr	r2, r5, ip
   222ac:	orr	r3, r3, r5, lsr sl
   222b0:	adds	r0, r0, r4
   222b4:	mov	r4, r3
   222b8:	lsl	r3, r2, ip
   222bc:	orr	r3, r3, r4, lsl sl
   222c0:	lsl	ip, r4, ip
   222c4:	orr	r3, r3, r4, lsr fp
   222c8:	adc	r1, r1, r5
   222cc:	subs	r0, r0, ip
   222d0:	mov	r5, r2
   222d4:	sbc	r1, r1, r3
   222d8:	cmp	lr, #0
   222dc:	strdne	r4, [lr]
   222e0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000222e4 <__libc_csu_init@@Base>:
   222e4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   222e8:	mov	r7, r0
   222ec:	ldr	r6, [pc, #72]	; 2233c <__libc_csu_init@@Base+0x58>
   222f0:	ldr	r5, [pc, #72]	; 22340 <__libc_csu_init@@Base+0x5c>
   222f4:	add	r6, pc, r6
   222f8:	add	r5, pc, r5
   222fc:	sub	r6, r6, r5
   22300:	mov	r8, r1
   22304:	mov	r9, r2
   22308:	bl	123cc <raise@plt-0x20>
   2230c:	asrs	r6, r6, #2
   22310:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   22314:	mov	r4, #0
   22318:	add	r4, r4, #1
   2231c:	ldr	r3, [r5], #4
   22320:	mov	r2, r9
   22324:	mov	r1, r8
   22328:	mov	r0, r7
   2232c:	blx	r3
   22330:	cmp	r6, r4
   22334:	bne	22318 <__libc_csu_init@@Base+0x34>
   22338:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   2233c:	andeq	r1, r1, r8, lsl ip
   22340:	andeq	r1, r1, r0, lsl ip

00022344 <__libc_csu_fini@@Base>:
   22344:	bx	lr

Disassembly of section .fini:

00022348 <.fini>:
   22348:	push	{r3, lr}
   2234c:	pop	{r3, pc}
