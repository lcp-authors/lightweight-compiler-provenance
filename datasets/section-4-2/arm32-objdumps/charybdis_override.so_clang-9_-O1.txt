
../repos/charybdis/extensions/.libs/override.so:     file format elf32-littlearm


Disassembly of section .init:

00000718 <_init>:
 718:	push	{r3, lr}
 71c:	bl	804 <call_weak_fn>
 720:	pop	{r3, pc}

Disassembly of section .plt:

00000724 <.plt>:
 724:	push	{lr}		; (str lr, [sp, #-4]!)
 728:	ldr	lr, [pc, #4]	; 734 <.plt+0x10>
 72c:	add	lr, pc, lr
 730:	ldr	pc, [lr, #8]!
 734:	.word	0x000118cc

00000738 <calloc@plt>:
 738:	add	ip, pc, #0, 12
 73c:	add	ip, ip, #69632	; 0x11000
 740:	ldr	pc, [ip, #2252]!	; 0x8cc

00000744 <rb_current_time@plt>:
 744:	add	ip, pc, #0, 12
 748:	add	ip, ip, #69632	; 0x11000
 74c:	ldr	pc, [ip, #2244]!	; 0x8c4

00000750 <rb_event_add@plt>:
 750:	add	ip, pc, #0, 12
 754:	add	ip, ip, #69632	; 0x11000
 758:	ldr	pc, [ip, #2236]!	; 0x8bc

0000075c <__cxa_finalize@plt>:
 75c:	add	ip, pc, #0, 12
 760:	add	ip, ip, #69632	; 0x11000
 764:	ldr	pc, [ip, #2228]!	; 0x8b4

00000768 <rb_event_delete@plt>:
 768:	add	ip, pc, #0, 12
 76c:	add	ip, ip, #69632	; 0x11000
 770:	ldr	pc, [ip, #2220]!	; 0x8ac

00000774 <free@plt>:
 774:	add	ip, pc, #0, 12
 778:	add	ip, ip, #69632	; 0x11000
 77c:	ldr	pc, [ip, #2212]!	; 0x8a4

00000780 <rb_outofmemory@plt>:
 780:	add	ip, pc, #0, 12
 784:	add	ip, ip, #69632	; 0x11000
 788:	ldr	pc, [ip, #2204]!	; 0x89c

0000078c <user_mode@plt>:
 78c:	add	ip, pc, #0, 12
 790:	add	ip, ip, #69632	; 0x11000
 794:	ldr	pc, [ip, #2196]!	; 0x894

00000798 <sendto_realops_snomask@plt>:
 798:	add	ip, pc, #0, 12
 79c:	add	ip, ip, #69632	; 0x11000
 7a0:	ldr	pc, [ip, #2188]!	; 0x88c

000007a4 <find_umode_slot@plt>:
 7a4:	add	ip, pc, #0, 12
 7a8:	add	ip, ip, #69632	; 0x11000
 7ac:	ldr	pc, [ip, #2180]!	; 0x884

000007b0 <get_oper_name@plt>:
 7b0:	add	ip, pc, #0, 12
 7b4:	add	ip, ip, #69632	; 0x11000
 7b8:	ldr	pc, [ip, #2172]!	; 0x87c

000007bc <__gmon_start__@plt>:
 7bc:	add	ip, pc, #0, 12
 7c0:	add	ip, ip, #69632	; 0x11000
 7c4:	ldr	pc, [ip, #2164]!	; 0x874

000007c8 <get_channel_access@plt>:
 7c8:	add	ip, pc, #0, 12
 7cc:	add	ip, ip, #69632	; 0x11000
 7d0:	ldr	pc, [ip, #2156]!	; 0x86c

000007d4 <sendto_one_notice@plt>:
 7d4:	add	ip, pc, #0, 12
 7d8:	add	ip, ip, #69632	; 0x11000
 7dc:	ldr	pc, [ip, #2148]!	; 0x864

000007e0 <privilegeset_in_set@plt>:
 7e0:	add	ip, pc, #0, 12
 7e4:	add	ip, ip, #69632	; 0x11000
 7e8:	ldr	pc, [ip, #2140]!	; 0x85c

000007ec <__assert_fail@plt>:
 7ec:	add	ip, pc, #0, 12
 7f0:	add	ip, ip, #69632	; 0x11000
 7f4:	ldr	pc, [ip, #2132]!	; 0x854

000007f8 <construct_umodebuf@plt>:
 7f8:	add	ip, pc, #0, 12
 7fc:	add	ip, ip, #69632	; 0x11000
 800:	ldr	pc, [ip, #2124]!	; 0x84c

Disassembly of section .text:

00000804 <call_weak_fn>:
     804:	ldr	r3, [pc, #20]	; 820 <call_weak_fn+0x1c>
     808:	ldr	r2, [pc, #20]	; 824 <call_weak_fn+0x20>
     80c:	add	r3, pc, r3
     810:	ldr	r2, [r3, r2]
     814:	cmp	r2, #0
     818:	bxeq	lr
     81c:	b	7bc <__gmon_start__@plt>
     820:	.word	0x000117ec
     824:	.word	0x00000064

00000828 <deregister_tm_clones>:
     828:	ldr	r0, [pc, #44]	; 85c <deregister_tm_clones+0x34>
     82c:	ldr	r3, [pc, #44]	; 860 <deregister_tm_clones+0x38>
     830:	add	r0, pc, r0
     834:	add	r3, pc, r3
     838:	cmp	r3, r0
     83c:	ldr	r3, [pc, #32]	; 864 <deregister_tm_clones+0x3c>
     840:	add	r3, pc, r3
     844:	bxeq	lr
     848:	ldr	r2, [pc, #24]	; 868 <deregister_tm_clones+0x40>
     84c:	ldr	r3, [r3, r2]
     850:	cmp	r3, #0
     854:	bxeq	lr
     858:	bx	r3
     85c:	.word	0x000118b8
     860:	.word	0x000118b4
     864:	.word	0x000117b8
     868:	.word	0x00000058

0000086c <register_tm_clones>:
     86c:	ldr	r0, [pc, #56]	; 8ac <register_tm_clones+0x40>
     870:	ldr	r3, [pc, #56]	; 8b0 <register_tm_clones+0x44>
     874:	add	r0, pc, r0
     878:	add	r3, pc, r3
     87c:	sub	r1, r3, r0
     880:	ldr	r3, [pc, #44]	; 8b4 <register_tm_clones+0x48>
     884:	asr	r1, r1, #2
     888:	add	r3, pc, r3
     88c:	add	r1, r1, r1, lsr #31
     890:	asrs	r1, r1, #1
     894:	bxeq	lr
     898:	ldr	r2, [pc, #24]	; 8b8 <register_tm_clones+0x4c>
     89c:	ldr	r3, [r3, r2]
     8a0:	cmp	r3, #0
     8a4:	bxeq	lr
     8a8:	bx	r3
     8ac:	.word	0x00011874
     8b0:	.word	0x00011870
     8b4:	.word	0x00011770
     8b8:	.word	0x0000006c

000008bc <__do_global_dtors_aux>:
     8bc:	ldr	r3, [pc, #76]	; 910 <__do_global_dtors_aux+0x54>
     8c0:	ldr	r2, [pc, #76]	; 914 <__do_global_dtors_aux+0x58>
     8c4:	add	r3, pc, r3
     8c8:	add	r2, pc, r2
     8cc:	ldrb	r3, [r3]
     8d0:	cmp	r3, #0
     8d4:	bxne	lr
     8d8:	ldr	r3, [pc, #56]	; 918 <__do_global_dtors_aux+0x5c>
     8dc:	push	{r4, lr}
     8e0:	ldr	r3, [r2, r3]
     8e4:	cmp	r3, #0
     8e8:	beq	8f8 <__do_global_dtors_aux+0x3c>
     8ec:	ldr	r3, [pc, #40]	; 91c <__do_global_dtors_aux+0x60>
     8f0:	ldr	r0, [pc, r3]
     8f4:	bl	75c <__cxa_finalize@plt>
     8f8:	bl	828 <deregister_tm_clones>
     8fc:	ldr	r3, [pc, #28]	; 920 <__do_global_dtors_aux+0x64>
     900:	mov	r2, #1
     904:	add	r3, pc, r3
     908:	strb	r2, [r3]
     90c:	pop	{r4, pc}
     910:	.word	0x00011824
     914:	.word	0x00011730
     918:	.word	0x00000050
     91c:	.word	0x00011778
     920:	.word	0x000117e4

00000924 <frame_dummy>:
     924:	b	86c <register_tm_clones>

00000928 <check_umode_change>:
     928:	push	{r4, r5, r6, sl, fp, lr}
     92c:	add	fp, sp, #16
     930:	ldr	r4, [r0]
     934:	ldrb	r1, [r4, #65]	; 0x41
     938:	tst	r1, #32
     93c:	bne	944 <check_umode_change+0x1c>
     940:	pop	{r4, r5, r6, sl, fp, pc}
     944:	ldrh	r1, [r4, #80]	; 0x50
     948:	cmp	r1, #64	; 0x40
     94c:	popne	{r4, r5, r6, sl, fp, pc}
     950:	ldr	r0, [r0, #4]
     954:	tst	r0, #4096	; 0x1000
     958:	beq	97c <check_umode_change+0x54>
     95c:	ldr	r1, [r4, #56]	; 0x38
     960:	tst	r1, #4096	; 0x1000
     964:	bne	97c <check_umode_change+0x54>
     968:	ldr	r2, [pc, #224]	; a50 <check_umode_change+0x128>
     96c:	ldr	r2, [pc, r2]
     970:	ldr	r2, [r2, #448]	; 0x1c0
     974:	bic	r1, r1, r2
     978:	str	r1, [r4, #56]	; 0x38
     97c:	ldr	r1, [r4, #56]	; 0x38
     980:	eor	r0, r1, r0
     984:	ldr	r5, [pc, #200]	; a54 <check_umode_change+0x12c>
     988:	ldr	r5, [pc, r5]
     98c:	ldr	r2, [r5, #448]	; 0x1c0
     990:	and	r6, r0, r2
     994:	tst	r2, r1
     998:	beq	a00 <check_umode_change+0xd8>
     99c:	ldr	r0, [r4, #24]
     9a0:	cmp	r0, #0
     9a4:	beq	9dc <check_umode_change+0xb4>
     9a8:	ldr	r0, [r0, #36]	; 0x24
     9ac:	cmp	r0, #0
     9b0:	beq	9dc <check_umode_change+0xb4>
     9b4:	ldr	r1, [pc, #156]	; a58 <check_umode_change+0x130>
     9b8:	add	r1, pc, r1
     9bc:	bl	7e0 <privilegeset_in_set@plt>
     9c0:	cmp	r0, #0
     9c4:	beq	9dc <check_umode_change+0xb4>
     9c8:	cmp	r6, #0
     9cc:	beq	940 <check_umode_change+0x18>
     9d0:	mov	r0, r4
     9d4:	pop	{r4, r5, r6, sl, fp, lr}
     9d8:	b	e40 <update_session_deadline>
     9dc:	ldr	r1, [pc, #120]	; a5c <check_umode_change+0x134>
     9e0:	add	r1, pc, r1
     9e4:	mov	r0, r4
     9e8:	bl	7d4 <sendto_one_notice@plt>
     9ec:	ldr	r0, [r4, #56]	; 0x38
     9f0:	ldr	r1, [r5, #448]	; 0x1c0
     9f4:	bic	r0, r0, r1
     9f8:	str	r0, [r4, #56]	; 0x38
     9fc:	pop	{r4, r5, r6, sl, fp, pc}
     a00:	cmp	r6, #0
     a04:	beq	940 <check_umode_change+0x18>
     a08:	ldr	r0, [pc, #80]	; a60 <check_umode_change+0x138>
     a0c:	ldr	r0, [pc, r0]
     a10:	ldr	r0, [r0]
     a14:	cmp	r0, #0
     a18:	bne	a2c <check_umode_change+0x104>
     a1c:	b	940 <check_umode_change+0x18>
     a20:	cmp	r6, #0
     a24:	mov	r0, r6
     a28:	beq	940 <check_umode_change+0x18>
     a2c:	ldr	r5, [r0]
     a30:	ldr	r6, [r0, #8]
     a34:	ldr	r1, [r5, #12]
     a38:	cmp	r1, r4
     a3c:	bne	a20 <check_umode_change+0xf8>
     a40:	bl	ec0 <rb_dlinkDelete>
     a44:	mov	r0, r5
     a48:	bl	f4c <rb_free>
     a4c:	b	a20 <check_umode_change+0xf8>
     a50:	.word	0x000116ec
     a54:	.word	0x000116d0
     a58:	.word	0x00000780
     a5c:	.word	0x00000766
     a60:	.word	0x00011640

00000a64 <hack_channel_access>:
     a64:	push	{r4, sl, fp, lr}
     a68:	add	fp, sp, #8
     a6c:	sub	sp, sp, #8
     a70:	mov	r4, r0
     a74:	ldr	r0, [r0, #20]
     a78:	cmp	r0, #0
     a7c:	beq	af0 <hack_channel_access+0x8c>
     a80:	ldr	r0, [r4, #16]
     a84:	cmp	r0, #2
     a88:	beq	af0 <hack_channel_access+0x8c>
     a8c:	ldr	r0, [pc, #100]	; af8 <hack_channel_access+0x94>
     a90:	ldr	r0, [pc, r0]
     a94:	ldr	r1, [r0, #448]	; 0x1c0
     a98:	ldr	r0, [r4]
     a9c:	ldr	r2, [r0, #56]	; 0x38
     aa0:	tst	r1, r2
     aa4:	beq	af0 <hack_channel_access+0x8c>
     aa8:	bl	e40 <update_session_deadline>
     aac:	mov	r0, #4
     ab0:	str	r0, [r4, #16]
     ab4:	ldr	r0, [r4, #24]
     ab8:	cmp	r0, #0
     abc:	beq	af0 <hack_channel_access+0x8c>
     ac0:	ldr	r0, [r4]
     ac4:	bl	7b0 <get_oper_name@plt>
     ac8:	mov	r3, r0
     acc:	ldr	r0, [r4, #4]
     ad0:	ldr	r1, [r4, #24]
     ad4:	ldr	r0, [r0, #236]	; 0xec
     ad8:	stm	sp, {r0, r1}
     adc:	ldr	r2, [pc, #24]	; afc <hack_channel_access+0x98>
     ae0:	add	r2, pc, r2
     ae4:	mov	r0, #256	; 0x100
     ae8:	mov	r1, #256	; 0x100
     aec:	bl	798 <sendto_realops_snomask@plt>
     af0:	sub	sp, fp, #8
     af4:	pop	{r4, sl, fp, pc}
     af8:	.word	0x000115c8
     afc:	.word	0x00000737

00000b00 <hack_can_join>:
     b00:	push	{r4, sl, fp, lr}
     b04:	add	fp, sp, #8
     b08:	sub	sp, sp, #8
     b0c:	mov	r4, r0
     b10:	ldr	r0, [r0, #8]
     b14:	cmp	r0, #0
     b18:	beq	b70 <hack_can_join+0x70>
     b1c:	ldr	r0, [pc, #84]	; b78 <hack_can_join+0x78>
     b20:	ldr	r0, [pc, r0]
     b24:	ldr	r1, [r0, #448]	; 0x1c0
     b28:	ldr	r0, [r4]
     b2c:	ldr	r2, [r0, #56]	; 0x38
     b30:	tst	r1, r2
     b34:	beq	b70 <hack_can_join+0x70>
     b38:	bl	e40 <update_session_deadline>
     b3c:	mov	r0, #0
     b40:	str	r0, [r4, #8]
     b44:	ldr	r0, [r4]
     b48:	bl	7b0 <get_oper_name@plt>
     b4c:	mov	r3, r0
     b50:	ldr	r0, [r4, #4]
     b54:	ldr	r0, [r0, #236]	; 0xec
     b58:	str	r0, [sp]
     b5c:	ldr	r2, [pc, #24]	; b7c <hack_can_join+0x7c>
     b60:	add	r2, pc, r2
     b64:	mov	r0, #256	; 0x100
     b68:	mov	r1, #256	; 0x100
     b6c:	bl	798 <sendto_realops_snomask@plt>
     b70:	sub	sp, fp, #8
     b74:	pop	{r4, sl, fp, pc}
     b78:	.word	0x00011538
     b7c:	.word	0x000006e9

00000b80 <hack_can_kick>:
     b80:	push	{r4, r5, fp, lr}
     b84:	add	fp, sp, #8
     b88:	sub	sp, sp, #8
     b8c:	mov	r5, r0
     b90:	ldr	r0, [r0]
     b94:	ldmib	r5, {r1, r2}
     b98:	ldr	r3, [r5, #20]
     b9c:	mov	r4, #0
     ba0:	str	r4, [sp]
     ba4:	bl	7c8 <get_channel_access@plt>
     ba8:	cmp	r0, #4
     bac:	bne	c04 <hack_can_kick+0x84>
     bb0:	ldr	r0, [pc, #84]	; c0c <hack_can_kick+0x8c>
     bb4:	ldr	r0, [pc, r0]
     bb8:	ldr	r1, [r0, #448]	; 0x1c0
     bbc:	ldr	r0, [r5]
     bc0:	ldr	r2, [r0, #56]	; 0x38
     bc4:	tst	r1, r2
     bc8:	beq	c04 <hack_can_kick+0x84>
     bcc:	bl	e40 <update_session_deadline>
     bd0:	ldr	r0, [r5]
     bd4:	bl	7b0 <get_oper_name@plt>
     bd8:	mov	r3, r0
     bdc:	ldr	r0, [r5, #4]
     be0:	ldr	r1, [r5, #12]
     be4:	ldr	r0, [r0, #236]	; 0xec
     be8:	add	r1, r1, #88	; 0x58
     bec:	stm	sp, {r0, r1}
     bf0:	ldr	r2, [pc, #24]	; c10 <hack_can_kick+0x90>
     bf4:	add	r2, pc, r2
     bf8:	mov	r0, #256	; 0x100
     bfc:	mov	r1, #256	; 0x100
     c00:	bl	798 <sendto_realops_snomask@plt>
     c04:	sub	sp, fp, #8
     c08:	pop	{r4, r5, fp, pc}
     c0c:	.word	0x000114a4
     c10:	.word	0x00000682

00000c14 <hack_can_send>:
     c14:	push	{r4, sl, fp, lr}
     c18:	add	fp, sp, #8
     c1c:	sub	sp, sp, #8
     c20:	mov	r4, r0
     c24:	ldr	r0, [r0, #20]
     c28:	cmp	r0, #0
     c2c:	beq	cac <hack_can_send+0x98>
     c30:	ldr	r0, [r4, #16]
     c34:	sub	r0, r0, #1
     c38:	cmp	r0, #2
     c3c:	bcc	cac <hack_can_send+0x98>
     c40:	ldr	r0, [pc, #108]	; cb4 <hack_can_send+0xa0>
     c44:	ldr	r0, [pc, r0]
     c48:	ldr	r1, [r0, #448]	; 0x1c0
     c4c:	ldr	r0, [r4]
     c50:	ldr	r2, [r0, #56]	; 0x38
     c54:	tst	r1, r2
     c58:	beq	cac <hack_can_send+0x98>
     c5c:	mov	r1, #1
     c60:	str	r1, [r4, #16]
     c64:	ldrb	r1, [r0, #65]	; 0x41
     c68:	tst	r1, #32
     c6c:	beq	cac <hack_can_send+0x98>
     c70:	ldrh	r1, [r0, #80]	; 0x50
     c74:	cmp	r1, #64	; 0x40
     c78:	bne	cac <hack_can_send+0x98>
     c7c:	bl	e40 <update_session_deadline>
     c80:	ldr	r0, [r4]
     c84:	bl	7b0 <get_oper_name@plt>
     c88:	mov	r3, r0
     c8c:	ldr	r0, [r4, #4]
     c90:	ldr	r0, [r0, #236]	; 0xec
     c94:	str	r0, [sp]
     c98:	ldr	r2, [pc, #24]	; cb8 <hack_can_send+0xa4>
     c9c:	add	r2, pc, r2
     ca0:	mov	r0, #256	; 0x100
     ca4:	mov	r1, #256	; 0x100
     ca8:	bl	798 <sendto_realops_snomask@plt>
     cac:	sub	sp, fp, #8
     cb0:	pop	{r4, sl, fp, pc}
     cb4:	.word	0x00011414
     cb8:	.word	0x00000604

00000cbc <handle_client_exit>:
     cbc:	push	{r4, r5, r6, sl, fp, lr}
     cc0:	add	fp, sp, #16
     cc4:	mov	r1, r0
     cc8:	ldr	r0, [pc, #72]	; d18 <handle_client_exit+0x5c>
     ccc:	ldr	r0, [pc, r0]
     cd0:	ldr	r0, [r0]
     cd4:	cmp	r0, #0
     cd8:	beq	d14 <handle_client_exit+0x58>
     cdc:	ldr	r5, [r1, #4]
     ce0:	b	cf0 <handle_client_exit+0x34>
     ce4:	cmp	r6, #0
     ce8:	mov	r0, r6
     cec:	beq	d14 <handle_client_exit+0x58>
     cf0:	ldr	r4, [r0]
     cf4:	ldr	r6, [r0, #8]
     cf8:	ldr	r1, [r4, #12]
     cfc:	cmp	r1, r5
     d00:	bne	ce4 <handle_client_exit+0x28>
     d04:	bl	ec0 <rb_dlinkDelete>
     d08:	mov	r0, r4
     d0c:	bl	f4c <rb_free>
     d10:	b	ce4 <handle_client_exit+0x28>
     d14:	pop	{r4, r5, r6, sl, fp, pc}
     d18:	.word	0x00011380

00000d1c <_modinit>:
     d1c:	push	{r4, r5, fp, lr}
     d20:	add	fp, sp, #8
     d24:	bl	7a4 <find_umode_slot@plt>
     d28:	ldr	r4, [pc, #140]	; dbc <_modinit+0xa0>
     d2c:	ldr	r4, [pc, r4]
     d30:	str	r0, [r4, #448]	; 0x1c0
     d34:	bl	7f8 <construct_umodebuf@plt>
     d38:	ldr	r0, [pc, #128]	; dc0 <_modinit+0xa4>
     d3c:	ldr	r0, [pc, r0]
     d40:	ldr	r5, [r0]
     d44:	cmp	r5, #0
     d48:	bne	d5c <_modinit+0x40>
     d4c:	b	d8c <_modinit+0x70>
     d50:	ldr	r5, [r5, #8]
     d54:	cmp	r5, #0
     d58:	beq	d8c <_modinit+0x70>
     d5c:	ldr	r0, [r5]
     d60:	ldrh	r1, [r0, #80]	; 0x50
     d64:	cmp	r1, #64	; 0x40
     d68:	bne	d50 <_modinit+0x34>
     d6c:	ldr	r1, [r0, #24]
     d70:	cmp	r1, #0
     d74:	beq	d50 <_modinit+0x34>
     d78:	ldr	r1, [r0, #56]	; 0x38
     d7c:	ldr	r2, [r4, #448]	; 0x1c0
     d80:	tst	r2, r1
     d84:	blne	e40 <update_session_deadline>
     d88:	b	d50 <_modinit+0x34>
     d8c:	ldr	r0, [pc, #48]	; dc4 <_modinit+0xa8>
     d90:	add	r0, pc, r0
     d94:	ldr	r1, [pc, #44]	; dc8 <_modinit+0xac>
     d98:	add	r1, pc, r1
     d9c:	mov	r2, #0
     da0:	mov	r3, #60	; 0x3c
     da4:	bl	750 <rb_event_add@plt>
     da8:	ldr	r1, [pc, #28]	; dcc <_modinit+0xb0>
     dac:	ldr	r1, [pc, r1]
     db0:	str	r0, [r1]
     db4:	mov	r0, #0
     db8:	pop	{r4, r5, fp, pc}
     dbc:	.word	0x0001132c
     dc0:	.word	0x00011324
     dc4:	.word	0x00000542
     dc8:	.word	0x0000029c
     dcc:	.word	0x000112a8

00000dd0 <_moddeinit>:
     dd0:	push	{r4, r5, fp, lr}
     dd4:	add	fp, sp, #8
     dd8:	ldr	r0, [pc, #84]	; e34 <_moddeinit+0x64>
     ddc:	ldr	r0, [pc, r0]
     de0:	mov	r1, #0
     de4:	str	r1, [r0, #448]	; 0x1c0
     de8:	bl	7f8 <construct_umodebuf@plt>
     dec:	ldr	r0, [pc, #68]	; e38 <_moddeinit+0x68>
     df0:	ldr	r0, [pc, r0]
     df4:	ldr	r4, [r0]
     df8:	cmp	r4, #0
     dfc:	beq	e20 <_moddeinit+0x50>
     e00:	ldr	r5, [r4, #8]
     e04:	mov	r0, r4
     e08:	bl	ec0 <rb_dlinkDelete>
     e0c:	ldr	r0, [r4]
     e10:	bl	f4c <rb_free>
     e14:	cmp	r5, #0
     e18:	mov	r4, r5
     e1c:	bne	e00 <_moddeinit+0x30>
     e20:	ldr	r0, [pc, #20]	; e3c <_moddeinit+0x6c>
     e24:	ldr	r0, [pc, r0]
     e28:	ldr	r0, [r0]
     e2c:	pop	{r4, r5, fp, lr}
     e30:	b	768 <rb_event_delete@plt>
     e34:	.word	0x0001127c
     e38:	.word	0x0001125c
     e3c:	.word	0x00011230

00000e40 <update_session_deadline>:
     e40:	push	{r4, r5, fp, lr}
     e44:	add	fp, sp, #8
     e48:	mov	r4, r0
     e4c:	ldr	r0, [pc, #104]	; ebc <update_session_deadline+0x7c>
     e50:	ldr	r0, [pc, r0]
     e54:	ldr	r0, [r0]
     e58:	cmp	r0, #0
     e5c:	beq	e88 <update_session_deadline+0x48>
     e60:	ldr	r5, [r0]
     e64:	ldr	r1, [r5, #12]
     e68:	cmp	r1, r4
     e6c:	beq	e80 <update_session_deadline+0x40>
     e70:	ldr	r0, [r0, #8]
     e74:	cmp	r0, #0
     e78:	bne	e60 <update_session_deadline+0x20>
     e7c:	mov	r5, #0
     e80:	cmp	r5, #0
     e84:	bne	e94 <update_session_deadline+0x54>
     e88:	bl	f58 <rb_malloc>
     e8c:	mov	r5, r0
     e90:	str	r4, [r0, #12]
     e94:	bl	744 <rb_current_time@plt>
     e98:	movw	r1, #1800	; 0x708
     e9c:	add	r0, r0, r1
     ea0:	str	r0, [r5, #16]
     ea4:	mov	r0, r5
     ea8:	bl	ec0 <rb_dlinkDelete>
     eac:	mov	r0, r5
     eb0:	mov	r1, r5
     eb4:	pop	{r4, r5, fp, lr}
     eb8:	b	f78 <rb_dlinkAdd>
     ebc:	.word	0x000111fc

00000ec0 <rb_dlinkDelete>:
     ec0:	push	{fp, lr}
     ec4:	mov	fp, sp
     ec8:	cmp	r0, #0
     ecc:	beq	f1c <rb_dlinkDelete+0x5c>
     ed0:	ldr	ip, [pc, #100]	; f3c <rb_dlinkDelete+0x7c>
     ed4:	ldr	ip, [pc, ip]
     ed8:	ldmib	r0, {r2, r3}
     edc:	add	r1, r3, #4
     ee0:	cmp	r3, #0
     ee4:	addeq	r1, ip, #4
     ee8:	str	r2, [r1]
     eec:	ldmib	r0, {r1, r2}
     ef0:	cmp	r1, #0
     ef4:	mov	r3, ip
     ef8:	addne	r3, r1, #8
     efc:	str	r2, [r3]
     f00:	mov	r1, #0
     f04:	str	r1, [r0, #4]
     f08:	str	r1, [r0, #8]
     f0c:	ldr	r0, [ip, #8]
     f10:	sub	r0, r0, #1
     f14:	str	r0, [ip, #8]
     f18:	pop	{fp, pc}
     f1c:	ldr	r0, [pc, #28]	; f40 <rb_dlinkDelete+0x80>
     f20:	add	r0, pc, r0
     f24:	ldr	r1, [pc, #24]	; f44 <rb_dlinkDelete+0x84>
     f28:	add	r1, pc, r1
     f2c:	ldr	r3, [pc, #20]	; f48 <rb_dlinkDelete+0x88>
     f30:	add	r3, pc, r3
     f34:	mov	r2, #235	; 0xeb
     f38:	bl	7ec <__assert_fail@plt>
     f3c:	.word	0x00011178
     f40:	.word	0x000002b7
     f44:	.word	0x00000258
     f48:	.word	0x000002b1

00000f4c <rb_free>:
     f4c:	cmp	r0, #0
     f50:	bxeq	lr
     f54:	b	774 <free@plt>

00000f58 <rb_malloc>:
     f58:	push	{fp, lr}
     f5c:	mov	fp, sp
     f60:	mov	r0, #1
     f64:	mov	r1, #20
     f68:	bl	738 <calloc@plt>
     f6c:	cmp	r0, #0
     f70:	popne	{fp, pc}
     f74:	bl	780 <rb_outofmemory@plt>

00000f78 <rb_dlinkAdd>:
     f78:	push	{fp, lr}
     f7c:	mov	fp, sp
     f80:	cmp	r0, #0
     f84:	beq	fe0 <rb_dlinkAdd+0x68>
     f88:	cmp	r1, #0
     f8c:	beq	1000 <rb_dlinkAdd+0x88>
     f90:	mov	r2, #0
     f94:	stm	r1, {r0, r2}
     f98:	ldr	r0, [pc, #128]	; 1020 <rb_dlinkAdd+0xa8>
     f9c:	ldr	r0, [pc, r0]
     fa0:	ldr	r2, [r0]
     fa4:	str	r2, [r1, #8]
     fa8:	cmp	r2, #0
     fac:	beq	fbc <rb_dlinkAdd+0x44>
     fb0:	add	r2, r2, #4
     fb4:	str	r1, [r2]
     fb8:	b	fcc <rb_dlinkAdd+0x54>
     fbc:	mov	r2, r0
     fc0:	ldr	r3, [r2, #4]!
     fc4:	cmp	r3, #0
     fc8:	streq	r1, [r2]
     fcc:	str	r1, [r0]
     fd0:	ldr	r1, [r0, #8]
     fd4:	add	r1, r1, #1
     fd8:	str	r1, [r0, #8]
     fdc:	pop	{fp, pc}
     fe0:	ldr	r0, [pc, #60]	; 1024 <rb_dlinkAdd+0xac>
     fe4:	add	r0, pc, r0
     fe8:	ldr	r1, [pc, #56]	; 1028 <rb_dlinkAdd+0xb0>
     fec:	add	r1, pc, r1
     ff0:	ldr	r3, [pc, #52]	; 102c <rb_dlinkAdd+0xb4>
     ff4:	add	r3, pc, r3
     ff8:	mov	r2, #143	; 0x8f
     ffc:	bl	7ec <__assert_fail@plt>
    1000:	ldr	r0, [pc, #40]	; 1030 <rb_dlinkAdd+0xb8>
    1004:	add	r0, pc, r0
    1008:	ldr	r1, [pc, #36]	; 1034 <rb_dlinkAdd+0xbc>
    100c:	add	r1, pc, r1
    1010:	ldr	r3, [pc, #32]	; 1038 <rb_dlinkAdd+0xc0>
    1014:	add	r3, pc, r3
    1018:	mov	r2, #144	; 0x90
    101c:	bl	7ec <__assert_fail@plt>
    1020:	.word	0x000110b0
    1024:	.word	0x0000018f
    1028:	.word	0x00000194
    102c:	.word	0x000001a8
    1030:	.word	0x000001d3
    1034:	.word	0x00000174
    1038:	.word	0x00000188

0000103c <expire_override_deadlines>:
    103c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
    1040:	add	fp, sp, #24
    1044:	sub	sp, sp, #16
    1048:	ldr	r0, [pc, #152]	; 10e8 <expire_override_deadlines+0xac>
    104c:	ldr	r0, [pc, r0]
    1050:	ldr	r0, [r0]
    1054:	cmp	r0, #0
    1058:	beq	10e0 <expire_override_deadlines+0xa4>
    105c:	ldr	r6, [r0]
    1060:	ldr	r5, [r0, #8]
    1064:	ldr	r4, [r6, #16]
    1068:	bl	744 <rb_current_time@plt>
    106c:	cmp	r4, r0
    1070:	bgt	10e0 <expire_override_deadlines+0xa4>
    1074:	mov	r8, #0
    1078:	ldr	r9, [pc, #108]	; 10ec <expire_override_deadlines+0xb0>
    107c:	add	r9, pc, r9
    1080:	mov	r4, sp
    1084:	ldr	r7, [r6, #16]
    1088:	bl	744 <rb_current_time@plt>
    108c:	cmp	r7, r0
    1090:	bge	10c0 <expire_override_deadlines+0x84>
    1094:	ldr	r0, [r6, #12]
    1098:	str	r8, [sp, #12]
    109c:	str	r9, [sp, #8]
    10a0:	add	r0, r0, #88	; 0x58
    10a4:	str	r0, [sp, #4]
    10a8:	str	r0, [sp]
    10ac:	ldr	r0, [r6, #12]
    10b0:	mov	r1, r0
    10b4:	mov	r2, #3
    10b8:	mov	r3, r4
    10bc:	bl	78c <user_mode@plt>
    10c0:	cmp	r5, #0
    10c4:	beq	10e0 <expire_override_deadlines+0xa4>
    10c8:	ldr	r6, [r5]
    10cc:	ldr	r5, [r5, #8]
    10d0:	ldr	r7, [r6, #16]
    10d4:	bl	744 <rb_current_time@plt>
    10d8:	cmp	r7, r0
    10dc:	ble	1084 <expire_override_deadlines+0x48>
    10e0:	sub	sp, fp, #24
    10e4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    10e8:	.word	0x00011000
    10ec:	.word	0x00000270

Disassembly of section .fini:

000010f0 <_fini>:
    10f0:	push	{r3, lr}
    10f4:	pop	{r3, pc}
