
../repos/charybdis/modules/.libs/m_pass.so:     file format elf32-littlearm


Disassembly of section .init:

00000518 <_init>:
 518:	push	{r3, lr}
 51c:	bl	5b0 <call_weak_fn>
 520:	pop	{r3, pc}

Disassembly of section .plt:

00000524 <.plt>:
 524:	push	{lr}		; (str lr, [sp, #-4]!)
 528:	ldr	lr, [pc, #4]	; 534 <.plt+0x10>
 52c:	add	lr, pc, lr
 530:	ldr	pc, [lr, #8]!
 534:	.word	0x00010acc

00000538 <__cxa_finalize@plt>:
 538:	add	ip, pc, #0, 12
 53c:	add	ip, ip, #16, 20	; 0x10000
 540:	ldr	pc, [ip, #2764]!	; 0xacc

00000544 <strtol@plt>:
 544:	add	ip, pc, #0, 12
 548:	add	ip, ip, #16, 20	; 0x10000
 54c:	ldr	pc, [ip, #2756]!	; 0xac4

00000550 <rb_outofmemory@plt>:
 550:	add	ip, pc, #0, 12
 554:	add	ip, ip, #16, 20	; 0x10000
 558:	ldr	pc, [ip, #2748]!	; 0xabc

0000055c <strcpy@plt>:
 55c:	add	ip, pc, #0, 12
 560:	add	ip, ip, #16, 20	; 0x10000
 564:	ldr	pc, [ip, #2740]!	; 0xab4

00000568 <malloc@plt>:
 568:	add	ip, pc, #0, 12
 56c:	add	ip, ip, #16, 20	; 0x10000
 570:	ldr	pc, [ip, #2732]!	; 0xaac

00000574 <__gmon_start__@plt>:
 574:	add	ip, pc, #0, 12
 578:	add	ip, ip, #16, 20	; 0x10000
 57c:	ldr	pc, [ip, #2724]!	; 0xaa4

00000580 <strlen@plt>:
 580:	add	ip, pc, #0, 12
 584:	add	ip, ip, #16, 20	; 0x10000
 588:	ldr	pc, [ip, #2716]!	; 0xa9c

0000058c <strchr@plt>:
 58c:	add	ip, pc, #0, 12
 590:	add	ip, ip, #16, 20	; 0x10000
 594:	ldr	pc, [ip, #2708]!	; 0xa94

00000598 <rb_strlcpy@plt>:
 598:	add	ip, pc, #0, 12
 59c:	add	ip, ip, #16, 20	; 0x10000
 5a0:	ldr	pc, [ip, #2700]!	; 0xa8c

000005a4 <irccmp@plt>:
 5a4:	add	ip, pc, #0, 12
 5a8:	add	ip, ip, #16, 20	; 0x10000
 5ac:	ldr	pc, [ip, #2692]!	; 0xa84

Disassembly of section .text:

000005b0 <call_weak_fn>:
 5b0:	ldr	r3, [pc, #20]	; 5cc <call_weak_fn+0x1c>
 5b4:	ldr	r2, [pc, #20]	; 5d0 <call_weak_fn+0x20>
 5b8:	add	r3, pc, r3
 5bc:	ldr	r2, [r3, r2]
 5c0:	cmp	r2, #0
 5c4:	bxeq	lr
 5c8:	b	574 <__gmon_start__@plt>
 5cc:	.word	0x00010a40
 5d0:	.word	0x00000040

000005d4 <deregister_tm_clones>:
 5d4:	ldr	r3, [pc, #52]	; 610 <deregister_tm_clones+0x3c>
 5d8:	ldr	r0, [pc, #52]	; 614 <deregister_tm_clones+0x40>
 5dc:	add	r3, pc, r3
 5e0:	add	r0, pc, r0
 5e4:	add	r3, r3, #3
 5e8:	sub	r3, r3, r0
 5ec:	cmp	r3, #6
 5f0:	ldr	r3, [pc, #32]	; 618 <deregister_tm_clones+0x44>
 5f4:	add	r3, pc, r3
 5f8:	bxls	lr
 5fc:	ldr	r2, [pc, #24]	; 61c <deregister_tm_clones+0x48>
 600:	ldr	r3, [r3, r2]
 604:	cmp	r3, #0
 608:	bxeq	lr
 60c:	bx	r3
 610:	.word	0x00010ae4
 614:	.word	0x00010ae0
 618:	.word	0x00010a04
 61c:	.word	0x00000038

00000620 <register_tm_clones>:
 620:	ldr	r1, [pc, #56]	; 660 <register_tm_clones+0x40>
 624:	ldr	r0, [pc, #56]	; 664 <register_tm_clones+0x44>
 628:	add	r1, pc, r1
 62c:	add	r0, pc, r0
 630:	sub	r1, r1, r0
 634:	ldr	r3, [pc, #44]	; 668 <register_tm_clones+0x48>
 638:	asr	r1, r1, #2
 63c:	add	r3, pc, r3
 640:	add	r1, r1, r1, lsr #31
 644:	asrs	r1, r1, #1
 648:	bxeq	lr
 64c:	ldr	r2, [pc, #24]	; 66c <register_tm_clones+0x4c>
 650:	ldr	r3, [r3, r2]
 654:	cmp	r3, #0
 658:	bxeq	lr
 65c:	bx	r3
 660:	.word	0x00010a98
 664:	.word	0x00010a94
 668:	.word	0x000109bc
 66c:	.word	0x0000004c

00000670 <__do_global_dtors_aux>:
 670:	ldr	r3, [pc, #76]	; 6c4 <__do_global_dtors_aux+0x54>
 674:	ldr	r2, [pc, #76]	; 6c8 <__do_global_dtors_aux+0x58>
 678:	add	r3, pc, r3
 67c:	add	r2, pc, r2
 680:	ldrb	r3, [r3]
 684:	cmp	r3, #0
 688:	bxne	lr
 68c:	ldr	r3, [pc, #56]	; 6cc <__do_global_dtors_aux+0x5c>
 690:	push	{r4, lr}
 694:	ldr	r3, [r2, r3]
 698:	cmp	r3, #0
 69c:	beq	6ac <__do_global_dtors_aux+0x3c>
 6a0:	ldr	r3, [pc, #40]	; 6d0 <__do_global_dtors_aux+0x60>
 6a4:	ldr	r0, [pc, r3]
 6a8:	bl	538 <__cxa_finalize@plt>
 6ac:	bl	5d4 <deregister_tm_clones>
 6b0:	ldr	r3, [pc, #28]	; 6d4 <__do_global_dtors_aux+0x64>
 6b4:	mov	r2, #1
 6b8:	add	r3, pc, r3
 6bc:	strb	r2, [r3]
 6c0:	pop	{r4, pc}
 6c4:	.word	0x00010a48
 6c8:	.word	0x0001097c
 6cc:	.word	0x00000034
 6d0:	.word	0x000109a4
 6d4:	.word	0x00010a08

000006d8 <frame_dummy>:
 6d8:	ldr	r0, [pc, #56]	; 718 <frame_dummy+0x40>
 6dc:	ldr	r3, [pc, #56]	; 71c <frame_dummy+0x44>
 6e0:	add	r0, pc, r0
 6e4:	ldr	r2, [r0]
 6e8:	add	r3, pc, r3
 6ec:	cmp	r2, #0
 6f0:	bne	6f8 <frame_dummy+0x20>
 6f4:	b	620 <register_tm_clones>
 6f8:	ldr	r2, [pc, #32]	; 720 <frame_dummy+0x48>
 6fc:	ldr	r3, [r3, r2]
 700:	cmp	r3, #0
 704:	beq	6f4 <frame_dummy+0x1c>
 708:	push	{r4, lr}
 70c:	blx	r3
 710:	pop	{r4, lr}
 714:	b	620 <register_tm_clones>
 718:	.word	0x00010814
 71c:	.word	0x00010910
 720:	.word	0x00000048

00000724 <mr_pass>:
 724:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 728:	add	fp, sp, #36	; 0x24
 72c:	mov	r6, r1
 730:	mov	r8, r3
 734:	ldr	r7, [pc, #556]	; 968 <mr_pass+0x244>
 738:	add	r7, pc, r7
 73c:	ldr	r3, [fp, #4]
 740:	ldr	r4, [r3, #4]
 744:	mov	r0, r4
 748:	bl	580 <strlen@plt>
 74c:	add	r0, r0, #15
 750:	bic	r0, r0, #7
 754:	sub	sp, sp, r0
 758:	mov	r1, r4
 75c:	mov	r0, sp
 760:	bl	55c <strcpy@plt>
 764:	ldr	r4, [r6, #432]	; 0x1b0
 768:	ldr	r3, [r4, #276]	; 0x114
 76c:	cmp	r3, #0
 770:	beq	77c <mr_pass+0x58>
 774:	sub	sp, fp, #36	; 0x24
 778:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 77c:	mov	r5, sp
 780:	ldr	r9, [r4, #280]	; 0x118
 784:	cmp	r9, #0
 788:	bne	774 <mr_pass+0x50>
 78c:	mov	r1, #58	; 0x3a
 790:	mov	r0, sp
 794:	bl	58c <strchr@plt>
 798:	cmp	r0, #0
 79c:	beq	930 <mr_pass+0x20c>
 7a0:	mov	r3, #0
 7a4:	strb	r3, [r0]
 7a8:	ldrb	r3, [r0, #1]
 7ac:	cmp	r3, #0
 7b0:	addne	sl, r0, #1
 7b4:	bne	944 <mr_pass+0x220>
 7b8:	str	r9, [r4, #276]	; 0x114
 7bc:	cmp	r5, #0
 7c0:	beq	7d0 <mr_pass+0xac>
 7c4:	ldrb	r3, [r5]
 7c8:	cmp	r3, #0
 7cc:	bne	900 <mr_pass+0x1dc>
 7d0:	cmp	r8, #2
 7d4:	ble	774 <mr_pass+0x50>
 7d8:	ldr	r3, [r6, #24]
 7dc:	cmp	r3, #0
 7e0:	bne	774 <mr_pass+0x50>
 7e4:	ldr	r3, [r6, #436]	; 0x1b4
 7e8:	cmp	r3, #0
 7ec:	beq	774 <mr_pass+0x50>
 7f0:	ldr	r1, [pc, #372]	; 96c <mr_pass+0x248>
 7f4:	add	r1, pc, r1
 7f8:	ldr	r3, [fp, #4]
 7fc:	ldr	r0, [r3, #8]
 800:	bl	5a4 <irccmp@plt>
 804:	cmp	r0, #0
 808:	bne	81c <mr_pass+0xf8>
 80c:	ldr	r3, [r6, #52]	; 0x34
 810:	cmp	r3, #0
 814:	moveq	r3, #268435456	; 0x10000000
 818:	streq	r3, [r6, #52]	; 0x34
 81c:	cmp	r8, #5
 820:	bne	774 <mr_pass+0x50>
 824:	mov	r2, #10
 828:	mov	r1, #0
 82c:	ldr	r3, [fp, #4]
 830:	ldr	r0, [r3, #12]
 834:	bl	544 <strtol@plt>
 838:	cmp	r0, #5
 83c:	ble	774 <mr_pass+0x50>
 840:	ldr	r3, [fp, #4]
 844:	ldr	r3, [r3, #16]
 848:	ldr	r2, [pc, #288]	; 970 <mr_pass+0x24c>
 84c:	ldr	r2, [r7, r2]
 850:	ldrb	r1, [r3]
 854:	ldr	r2, [r2, r1, lsl #2]
 858:	tst	r2, #16
 85c:	beq	774 <mr_pass+0x50>
 860:	ldr	r2, [pc, #264]	; 970 <mr_pass+0x24c>
 864:	ldr	r2, [r7, r2]
 868:	ldrb	r1, [r3, #1]
 86c:	ldr	r1, [r2, r1, lsl #2]
 870:	ldr	r2, [pc, #252]	; 974 <mr_pass+0x250>
 874:	and	r2, r2, r1
 878:	cmp	r2, #0
 87c:	beq	774 <mr_pass+0x50>
 880:	ldr	r2, [pc, #232]	; 970 <mr_pass+0x24c>
 884:	ldr	r2, [r7, r2]
 888:	ldrb	r1, [r3, #2]
 88c:	ldr	r1, [r2, r1, lsl #2]
 890:	ldr	r2, [pc, #220]	; 974 <mr_pass+0x250>
 894:	and	r2, r2, r1
 898:	cmp	r2, #0
 89c:	beq	774 <mr_pass+0x50>
 8a0:	ldrb	r3, [r3, #3]
 8a4:	cmp	r3, #0
 8a8:	bne	774 <mr_pass+0x50>
 8ac:	ldr	r3, [r6, #436]	; 0x1b4
 8b0:	cmn	r3, #260	; 0x104
 8b4:	beq	8c4 <mr_pass+0x1a0>
 8b8:	ldrb	r3, [r3, #260]	; 0x104
 8bc:	cmp	r3, #0
 8c0:	bne	774 <mr_pass+0x50>
 8c4:	ldr	r2, [r6, #432]	; 0x1b0
 8c8:	ldr	r3, [pc, #168]	; 978 <mr_pass+0x254>
 8cc:	ldr	r1, [r7, r3]
 8d0:	ldr	r3, [r2, #296]	; 0x128
 8d4:	ldr	r1, [r1]
 8d8:	orr	r3, r3, r1
 8dc:	str	r3, [r2, #296]	; 0x128
 8e0:	ldr	r0, [r6, #436]	; 0x1b4
 8e4:	mov	r2, #10
 8e8:	ldr	r3, [fp, #4]
 8ec:	ldr	r1, [r3, #16]
 8f0:	add	r0, r0, #260	; 0x104
 8f4:	bl	598 <rb_strlcpy@plt>
 8f8:	b	774 <mr_pass+0x50>
 8fc:	bl	550 <rb_outofmemory@plt>
 900:	ldr	r9, [r6, #432]	; 0x1b0
 904:	mov	r0, #128	; 0x80
 908:	bl	568 <malloc@plt>
 90c:	subs	r4, r0, #0
 910:	beq	92c <mr_pass+0x208>
 914:	mov	r2, #128	; 0x80
 918:	mov	r1, r5
 91c:	mov	r0, r4
 920:	bl	598 <rb_strlcpy@plt>
 924:	str	r4, [r9, #280]	; 0x118
 928:	b	7d0 <mr_pass+0xac>
 92c:	bl	550 <rb_outofmemory@plt>
 930:	ldrb	r3, [sp]
 934:	cmp	r3, #0
 938:	beq	7d0 <mr_pass+0xac>
 93c:	mov	sl, r5
 940:	mov	r5, r0
 944:	mov	r0, #128	; 0x80
 948:	bl	568 <malloc@plt>
 94c:	subs	r9, r0, #0
 950:	beq	8fc <mr_pass+0x1d8>
 954:	mov	r2, #128	; 0x80
 958:	mov	r1, sl
 95c:	mov	r0, r9
 960:	bl	598 <rb_strlcpy@plt>
 964:	b	7b8 <mr_pass+0x94>
 968:	.word	0x000108c0
 96c:	.word	0x000001c8
 970:	.word	0x00000044
 974:	.word	0x00010010
 978:	.word	0x0000003c

Disassembly of section .fini:

0000097c <_fini>:
 97c:	push	{r3, lr}
 980:	pop	{r3, pc}
