
../repos/coreutils/src/basenc:     file format elf32-littlearm


Disassembly of section .init:

00010e4c <.init>:
   10e4c:	push	{r3, lr}
   10e50:	bl	11130 <__assert_fail@plt+0x48>
   10e54:	pop	{r3, pc}

Disassembly of section .plt:

00010e58 <calloc@plt-0x14>:
   10e58:	push	{lr}		; (str lr, [sp, #-4]!)
   10e5c:	ldr	lr, [pc, #4]	; 10e68 <calloc@plt-0x4>
   10e60:	add	lr, pc, lr
   10e64:	ldr	pc, [lr, #8]!
   10e68:	muleq	r2, r8, r1

00010e6c <calloc@plt>:
   10e6c:	add	ip, pc, #0, 12
   10e70:	add	ip, ip, #143360	; 0x23000
   10e74:	ldr	pc, [ip, #408]!	; 0x198

00010e78 <fputs_unlocked@plt>:
   10e78:	add	ip, pc, #0, 12
   10e7c:	add	ip, ip, #143360	; 0x23000
   10e80:	ldr	pc, [ip, #400]!	; 0x190

00010e84 <raise@plt>:
   10e84:	add	ip, pc, #0, 12
   10e88:	add	ip, ip, #143360	; 0x23000
   10e8c:	ldr	pc, [ip, #392]!	; 0x188

00010e90 <strcmp@plt>:
   10e90:	add	ip, pc, #0, 12
   10e94:	add	ip, ip, #143360	; 0x23000
   10e98:	ldr	pc, [ip, #384]!	; 0x180

00010e9c <posix_fadvise64@plt>:
   10e9c:	add	ip, pc, #0, 12
   10ea0:	add	ip, ip, #143360	; 0x23000
   10ea4:	ldr	pc, [ip, #376]!	; 0x178

00010ea8 <printf@plt>:
   10ea8:	add	ip, pc, #0, 12
   10eac:	add	ip, ip, #143360	; 0x23000
   10eb0:	ldr	pc, [ip, #368]!	; 0x170

00010eb4 <fflush@plt>:
   10eb4:	add	ip, pc, #0, 12
   10eb8:	add	ip, ip, #143360	; 0x23000
   10ebc:	ldr	pc, [ip, #360]!	; 0x168

00010ec0 <memmove@plt>:
   10ec0:	add	ip, pc, #0, 12
   10ec4:	add	ip, ip, #143360	; 0x23000
   10ec8:	ldr	pc, [ip, #352]!	; 0x160

00010ecc <free@plt>:
   10ecc:	add	ip, pc, #0, 12
   10ed0:	add	ip, ip, #143360	; 0x23000
   10ed4:	ldr	pc, [ip, #344]!	; 0x158

00010ed8 <_exit@plt>:
   10ed8:	add	ip, pc, #0, 12
   10edc:	add	ip, ip, #143360	; 0x23000
   10ee0:	ldr	pc, [ip, #336]!	; 0x150

00010ee4 <memcpy@plt>:
   10ee4:	add	ip, pc, #0, 12
   10ee8:	add	ip, ip, #143360	; 0x23000
   10eec:	ldr	pc, [ip, #328]!	; 0x148

00010ef0 <mbsinit@plt>:
   10ef0:	add	ip, pc, #0, 12
   10ef4:	add	ip, ip, #143360	; 0x23000
   10ef8:	ldr	pc, [ip, #320]!	; 0x140

00010efc <fwrite_unlocked@plt>:
   10efc:	add	ip, pc, #0, 12
   10f00:	add	ip, ip, #143360	; 0x23000
   10f04:	ldr	pc, [ip, #312]!	; 0x138

00010f08 <memcmp@plt>:
   10f08:	add	ip, pc, #0, 12
   10f0c:	add	ip, ip, #143360	; 0x23000
   10f10:	ldr	pc, [ip, #304]!	; 0x130

00010f14 <fputc_unlocked@plt>:
   10f14:	add	ip, pc, #0, 12
   10f18:	add	ip, ip, #143360	; 0x23000
   10f1c:	ldr	pc, [ip, #296]!	; 0x128

00010f20 <realloc@plt>:
   10f20:	add	ip, pc, #0, 12
   10f24:	add	ip, ip, #143360	; 0x23000
   10f28:	ldr	pc, [ip, #288]!	; 0x120

00010f2c <textdomain@plt>:
   10f2c:	add	ip, pc, #0, 12
   10f30:	add	ip, ip, #143360	; 0x23000
   10f34:	ldr	pc, [ip, #280]!	; 0x118

00010f38 <iswprint@plt>:
   10f38:	add	ip, pc, #0, 12
   10f3c:	add	ip, ip, #143360	; 0x23000
   10f40:	ldr	pc, [ip, #272]!	; 0x110

00010f44 <lseek64@plt>:
   10f44:	add	ip, pc, #0, 12
   10f48:	add	ip, ip, #143360	; 0x23000
   10f4c:	ldr	pc, [ip, #264]!	; 0x108

00010f50 <__ctype_get_mb_cur_max@plt>:
   10f50:	add	ip, pc, #0, 12
   10f54:	add	ip, ip, #143360	; 0x23000
   10f58:	ldr	pc, [ip, #256]!	; 0x100

00010f5c <__fpending@plt>:
   10f5c:	add	ip, pc, #0, 12
   10f60:	add	ip, ip, #143360	; 0x23000
   10f64:	ldr	pc, [ip, #248]!	; 0xf8

00010f68 <ferror_unlocked@plt>:
   10f68:	add	ip, pc, #0, 12
   10f6c:	add	ip, ip, #143360	; 0x23000
   10f70:	ldr	pc, [ip, #240]!	; 0xf0

00010f74 <mbrtowc@plt>:
   10f74:	add	ip, pc, #0, 12
   10f78:	add	ip, ip, #143360	; 0x23000
   10f7c:	ldr	pc, [ip, #232]!	; 0xe8

00010f80 <error@plt>:
   10f80:	add	ip, pc, #0, 12
   10f84:	add	ip, ip, #143360	; 0x23000
   10f88:	ldr	pc, [ip, #224]!	; 0xe0

00010f8c <malloc@plt>:
   10f8c:	add	ip, pc, #0, 12
   10f90:	add	ip, ip, #143360	; 0x23000
   10f94:	ldr	pc, [ip, #216]!	; 0xd8

00010f98 <__libc_start_main@plt>:
   10f98:	add	ip, pc, #0, 12
   10f9c:	add	ip, ip, #143360	; 0x23000
   10fa0:	ldr	pc, [ip, #208]!	; 0xd0

00010fa4 <__freading@plt>:
   10fa4:	add	ip, pc, #0, 12
   10fa8:	add	ip, ip, #143360	; 0x23000
   10fac:	ldr	pc, [ip, #200]!	; 0xc8

00010fb0 <__gmon_start__@plt>:
   10fb0:	add	ip, pc, #0, 12
   10fb4:	add	ip, ip, #143360	; 0x23000
   10fb8:	ldr	pc, [ip, #192]!	; 0xc0

00010fbc <getopt_long@plt>:
   10fbc:	add	ip, pc, #0, 12
   10fc0:	add	ip, ip, #143360	; 0x23000
   10fc4:	ldr	pc, [ip, #184]!	; 0xb8

00010fc8 <__ctype_b_loc@plt>:
   10fc8:	add	ip, pc, #0, 12
   10fcc:	add	ip, ip, #143360	; 0x23000
   10fd0:	ldr	pc, [ip, #176]!	; 0xb0

00010fd4 <exit@plt>:
   10fd4:	add	ip, pc, #0, 12
   10fd8:	add	ip, ip, #143360	; 0x23000
   10fdc:	ldr	pc, [ip, #168]!	; 0xa8

00010fe0 <gettext@plt>:
   10fe0:	add	ip, pc, #0, 12
   10fe4:	add	ip, ip, #143360	; 0x23000
   10fe8:	ldr	pc, [ip, #160]!	; 0xa0

00010fec <strlen@plt>:
   10fec:	add	ip, pc, #0, 12
   10ff0:	add	ip, ip, #143360	; 0x23000
   10ff4:	ldr	pc, [ip, #152]!	; 0x98

00010ff8 <strchr@plt>:
   10ff8:	add	ip, pc, #0, 12
   10ffc:	add	ip, ip, #143360	; 0x23000
   11000:	ldr	pc, [ip, #144]!	; 0x90

00011004 <fprintf@plt>:
   11004:	add	ip, pc, #0, 12
   11008:	add	ip, ip, #143360	; 0x23000
   1100c:	ldr	pc, [ip, #136]!	; 0x88

00011010 <__errno_location@plt>:
   11010:	add	ip, pc, #0, 12
   11014:	add	ip, ip, #143360	; 0x23000
   11018:	ldr	pc, [ip, #128]!	; 0x80

0001101c <__cxa_atexit@plt>:
   1101c:	add	ip, pc, #0, 12
   11020:	add	ip, ip, #143360	; 0x23000
   11024:	ldr	pc, [ip, #120]!	; 0x78

00011028 <memset@plt>:
   11028:	add	ip, pc, #0, 12
   1102c:	add	ip, ip, #143360	; 0x23000
   11030:	ldr	pc, [ip, #112]!	; 0x70

00011034 <fileno@plt>:
   11034:	add	ip, pc, #0, 12
   11038:	add	ip, ip, #143360	; 0x23000
   1103c:	ldr	pc, [ip, #104]!	; 0x68

00011040 <memchr@plt>:
   11040:	add	ip, pc, #0, 12
   11044:	add	ip, ip, #143360	; 0x23000
   11048:	ldr	pc, [ip, #96]!	; 0x60

0001104c <strtoimax@plt>:
   1104c:	add	ip, pc, #0, 12
   11050:	add	ip, ip, #143360	; 0x23000
   11054:	ldr	pc, [ip, #88]!	; 0x58

00011058 <fclose@plt>:
   11058:	add	ip, pc, #0, 12
   1105c:	add	ip, ip, #143360	; 0x23000
   11060:	ldr	pc, [ip, #80]!	; 0x50

00011064 <fseeko64@plt>:
   11064:	add	ip, pc, #0, 12
   11068:	add	ip, ip, #143360	; 0x23000
   1106c:	ldr	pc, [ip, #72]!	; 0x48

00011070 <setlocale@plt>:
   11070:	add	ip, pc, #0, 12
   11074:	add	ip, ip, #143360	; 0x23000
   11078:	ldr	pc, [ip, #64]!	; 0x40

0001107c <strrchr@plt>:
   1107c:	add	ip, pc, #0, 12
   11080:	add	ip, ip, #143360	; 0x23000
   11084:	ldr	pc, [ip, #56]!	; 0x38

00011088 <nl_langinfo@plt>:
   11088:	add	ip, pc, #0, 12
   1108c:	add	ip, ip, #143360	; 0x23000
   11090:	ldr	pc, [ip, #48]!	; 0x30

00011094 <fopen64@plt>:
   11094:	add	ip, pc, #0, 12
   11098:	add	ip, ip, #143360	; 0x23000
   1109c:	ldr	pc, [ip, #40]!	; 0x28

000110a0 <bindtextdomain@plt>:
   110a0:	add	ip, pc, #0, 12
   110a4:	add	ip, ip, #143360	; 0x23000
   110a8:	ldr	pc, [ip, #32]!

000110ac <fread_unlocked@plt>:
   110ac:	add	ip, pc, #0, 12
   110b0:	add	ip, ip, #143360	; 0x23000
   110b4:	ldr	pc, [ip, #24]!

000110b8 <fputs@plt>:
   110b8:	add	ip, pc, #0, 12
   110bc:	add	ip, ip, #143360	; 0x23000
   110c0:	ldr	pc, [ip, #16]!

000110c4 <strncmp@plt>:
   110c4:	add	ip, pc, #0, 12
   110c8:	add	ip, ip, #143360	; 0x23000
   110cc:	ldr	pc, [ip, #8]!

000110d0 <abort@plt>:
   110d0:	add	ip, pc, #0, 12
   110d4:	add	ip, ip, #143360	; 0x23000
   110d8:	ldr	pc, [ip, #0]!

000110dc <feof_unlocked@plt>:
   110dc:	add	ip, pc, #0, 12
   110e0:	add	ip, ip, #139264	; 0x22000
   110e4:	ldr	pc, [ip, #4088]!	; 0xff8

000110e8 <__assert_fail@plt>:
   110e8:	add	ip, pc, #0, 12
   110ec:	add	ip, ip, #139264	; 0x22000
   110f0:	ldr	pc, [ip, #4080]!	; 0xff0

Disassembly of section .text:

000110f4 <.text>:
   110f4:	mov	fp, #0
   110f8:	mov	lr, #0
   110fc:	pop	{r1}		; (ldr r1, [sp], #4)
   11100:	mov	r2, sp
   11104:	push	{r2}		; (str r2, [sp, #-4]!)
   11108:	push	{r0}		; (str r0, [sp, #-4]!)
   1110c:	ldr	ip, [pc, #16]	; 11124 <__assert_fail@plt+0x3c>
   11110:	push	{ip}		; (str ip, [sp, #-4]!)
   11114:	ldr	r0, [pc, #12]	; 11128 <__assert_fail@plt+0x40>
   11118:	ldr	r3, [pc, #12]	; 1112c <__assert_fail@plt+0x44>
   1111c:	bl	10f98 <__libc_start_main@plt>
   11120:	bl	110d0 <abort@plt>
   11124:	andeq	r2, r2, ip, asr r1
   11128:	andeq	r1, r1, r8, ror r6
   1112c:	strdeq	r2, [r2], -ip
   11130:	ldr	r3, [pc, #20]	; 1114c <__assert_fail@plt+0x64>
   11134:	ldr	r2, [pc, #20]	; 11150 <__assert_fail@plt+0x68>
   11138:	add	r3, pc, r3
   1113c:	ldr	r2, [r3, r2]
   11140:	cmp	r2, #0
   11144:	bxeq	lr
   11148:	b	10fb0 <__gmon_start__@plt>
   1114c:	andeq	r2, r2, r0, asr #29
   11150:	andeq	r0, r0, r4, ror #1
   11154:	ldr	r0, [pc, #24]	; 11174 <__assert_fail@plt+0x8c>
   11158:	ldr	r3, [pc, #24]	; 11178 <__assert_fail@plt+0x90>
   1115c:	cmp	r3, r0
   11160:	bxeq	lr
   11164:	ldr	r3, [pc, #16]	; 1117c <__assert_fail@plt+0x94>
   11168:	cmp	r3, #0
   1116c:	bxeq	lr
   11170:	bx	r3
   11174:	andeq	r4, r3, r8, lsr r1
   11178:	andeq	r4, r3, r8, lsr r1
   1117c:	andeq	r0, r0, r0
   11180:	ldr	r0, [pc, #36]	; 111ac <__assert_fail@plt+0xc4>
   11184:	ldr	r1, [pc, #36]	; 111b0 <__assert_fail@plt+0xc8>
   11188:	sub	r1, r1, r0
   1118c:	asr	r1, r1, #2
   11190:	add	r1, r1, r1, lsr #31
   11194:	asrs	r1, r1, #1
   11198:	bxeq	lr
   1119c:	ldr	r3, [pc, #16]	; 111b4 <__assert_fail@plt+0xcc>
   111a0:	cmp	r3, #0
   111a4:	bxeq	lr
   111a8:	bx	r3
   111ac:	andeq	r4, r3, r8, lsr r1
   111b0:	andeq	r4, r3, r8, lsr r1
   111b4:	andeq	r0, r0, r0
   111b8:	push	{r4, lr}
   111bc:	ldr	r4, [pc, #24]	; 111dc <__assert_fail@plt+0xf4>
   111c0:	ldrb	r3, [r4]
   111c4:	cmp	r3, #0
   111c8:	popne	{r4, pc}
   111cc:	bl	11154 <__assert_fail@plt+0x6c>
   111d0:	mov	r3, #1
   111d4:	strb	r3, [r4]
   111d8:	pop	{r4, pc}
   111dc:	andeq	r4, r3, ip, asr r1
   111e0:	b	11180 <__assert_fail@plt+0x98>
   111e4:	push	{fp, lr}
   111e8:	mov	fp, sp
   111ec:	sub	sp, sp, #72	; 0x48
   111f0:	str	r0, [fp, #-4]
   111f4:	ldr	r0, [fp, #-4]
   111f8:	cmp	r0, #0
   111fc:	beq	1124c <__assert_fail@plt+0x164>
   11200:	b	11204 <__assert_fail@plt+0x11c>
   11204:	movw	r0, #16712	; 0x4148
   11208:	movt	r0, #3
   1120c:	ldr	r0, [r0]
   11210:	movw	r1, #8580	; 0x2184
   11214:	movt	r1, #2
   11218:	str	r0, [fp, #-8]
   1121c:	mov	r0, r1
   11220:	bl	10fe0 <gettext@plt>
   11224:	movw	r1, #16764	; 0x417c
   11228:	movt	r1, #3
   1122c:	ldr	r2, [r1]
   11230:	ldr	r1, [fp, #-8]
   11234:	str	r0, [fp, #-12]
   11238:	mov	r0, r1
   1123c:	ldr	r1, [fp, #-12]
   11240:	bl	11004 <fprintf@plt>
   11244:	str	r0, [fp, #-16]
   11248:	b	11454 <__assert_fail@plt+0x36c>
   1124c:	movw	r0, #8619	; 0x21ab
   11250:	movt	r0, #2
   11254:	bl	10fe0 <gettext@plt>
   11258:	movw	lr, #16764	; 0x417c
   1125c:	movt	lr, #3
   11260:	ldr	r1, [lr]
   11264:	bl	10ea8 <printf@plt>
   11268:	movw	r1, #8649	; 0x21c9
   1126c:	movt	r1, #2
   11270:	str	r0, [fp, #-20]	; 0xffffffec
   11274:	mov	r0, r1
   11278:	bl	10fe0 <gettext@plt>
   1127c:	movw	r1, #16724	; 0x4154
   11280:	movt	r1, #3
   11284:	ldr	r1, [r1]
   11288:	bl	10e78 <fputs_unlocked@plt>
   1128c:	str	r0, [fp, #-24]	; 0xffffffe8
   11290:	bl	1145c <__assert_fail@plt+0x374>
   11294:	bl	11490 <__assert_fail@plt+0x3a8>
   11298:	movw	r0, #8719	; 0x220f
   1129c:	movt	r0, #2
   112a0:	bl	10fe0 <gettext@plt>
   112a4:	movw	r1, #16724	; 0x4154
   112a8:	movt	r1, #3
   112ac:	ldr	r1, [r1]
   112b0:	bl	10e78 <fputs_unlocked@plt>
   112b4:	movw	r1, #8789	; 0x2255
   112b8:	movt	r1, #2
   112bc:	str	r0, [fp, #-28]	; 0xffffffe4
   112c0:	mov	r0, r1
   112c4:	bl	10fe0 <gettext@plt>
   112c8:	movw	r1, #16724	; 0x4154
   112cc:	movt	r1, #3
   112d0:	ldr	r1, [r1]
   112d4:	bl	10e78 <fputs_unlocked@plt>
   112d8:	movw	r1, #8860	; 0x229c
   112dc:	movt	r1, #2
   112e0:	str	r0, [fp, #-32]	; 0xffffffe0
   112e4:	mov	r0, r1
   112e8:	bl	10fe0 <gettext@plt>
   112ec:	movw	r1, #16724	; 0x4154
   112f0:	movt	r1, #3
   112f4:	ldr	r1, [r1]
   112f8:	bl	10e78 <fputs_unlocked@plt>
   112fc:	movw	r1, #8930	; 0x22e2
   11300:	movt	r1, #2
   11304:	str	r0, [sp, #36]	; 0x24
   11308:	mov	r0, r1
   1130c:	bl	10fe0 <gettext@plt>
   11310:	movw	r1, #16724	; 0x4154
   11314:	movt	r1, #3
   11318:	ldr	r1, [r1]
   1131c:	bl	10e78 <fputs_unlocked@plt>
   11320:	movw	r1, #9004	; 0x232c
   11324:	movt	r1, #2
   11328:	str	r0, [sp, #32]
   1132c:	mov	r0, r1
   11330:	bl	10fe0 <gettext@plt>
   11334:	movw	r1, #16724	; 0x4154
   11338:	movt	r1, #3
   1133c:	ldr	r1, [r1]
   11340:	bl	10e78 <fputs_unlocked@plt>
   11344:	movw	r1, #9062	; 0x2366
   11348:	movt	r1, #2
   1134c:	str	r0, [sp, #28]
   11350:	mov	r0, r1
   11354:	bl	10fe0 <gettext@plt>
   11358:	movw	r1, #16724	; 0x4154
   1135c:	movt	r1, #3
   11360:	ldr	r1, [r1]
   11364:	bl	10e78 <fputs_unlocked@plt>
   11368:	movw	r1, #9136	; 0x23b0
   1136c:	movt	r1, #2
   11370:	str	r0, [sp, #24]
   11374:	mov	r0, r1
   11378:	bl	10fe0 <gettext@plt>
   1137c:	movw	r1, #16724	; 0x4154
   11380:	movt	r1, #3
   11384:	ldr	r1, [r1]
   11388:	bl	10e78 <fputs_unlocked@plt>
   1138c:	movw	r1, #9211	; 0x23fb
   11390:	movt	r1, #2
   11394:	str	r0, [sp, #20]
   11398:	mov	r0, r1
   1139c:	bl	10fe0 <gettext@plt>
   113a0:	movw	r1, #16724	; 0x4154
   113a4:	movt	r1, #3
   113a8:	ldr	r1, [r1]
   113ac:	bl	10e78 <fputs_unlocked@plt>
   113b0:	movw	r1, #9453	; 0x24ed
   113b4:	movt	r1, #2
   113b8:	str	r0, [sp, #16]
   113bc:	mov	r0, r1
   113c0:	bl	10fe0 <gettext@plt>
   113c4:	movw	r1, #16724	; 0x4154
   113c8:	movt	r1, #3
   113cc:	ldr	r1, [r1]
   113d0:	bl	10e78 <fputs_unlocked@plt>
   113d4:	movw	r1, #9675	; 0x25cb
   113d8:	movt	r1, #2
   113dc:	str	r0, [sp, #12]
   113e0:	mov	r0, r1
   113e4:	bl	10fe0 <gettext@plt>
   113e8:	movw	r1, #16724	; 0x4154
   113ec:	movt	r1, #3
   113f0:	ldr	r1, [r1]
   113f4:	bl	10e78 <fputs_unlocked@plt>
   113f8:	movw	r1, #9720	; 0x25f8
   113fc:	movt	r1, #2
   11400:	str	r0, [sp, #8]
   11404:	mov	r0, r1
   11408:	bl	10fe0 <gettext@plt>
   1140c:	movw	r1, #16724	; 0x4154
   11410:	movt	r1, #3
   11414:	ldr	r1, [r1]
   11418:	bl	10e78 <fputs_unlocked@plt>
   1141c:	movw	r1, #9774	; 0x262e
   11420:	movt	r1, #2
   11424:	str	r0, [sp, #4]
   11428:	mov	r0, r1
   1142c:	bl	10fe0 <gettext@plt>
   11430:	movw	r1, #16724	; 0x4154
   11434:	movt	r1, #3
   11438:	ldr	r1, [r1]
   1143c:	bl	10e78 <fputs_unlocked@plt>
   11440:	movw	r1, #9972	; 0x26f4
   11444:	movt	r1, #2
   11448:	str	r0, [sp]
   1144c:	mov	r0, r1
   11450:	bl	114c4 <__assert_fail@plt+0x3dc>
   11454:	ldr	r0, [fp, #-4]
   11458:	bl	10fd4 <exit@plt>
   1145c:	push	{fp, lr}
   11460:	mov	fp, sp
   11464:	sub	sp, sp, #8
   11468:	movw	r0, #10118	; 0x2786
   1146c:	movt	r0, #2
   11470:	bl	10fe0 <gettext@plt>
   11474:	movw	lr, #16724	; 0x4154
   11478:	movt	lr, #3
   1147c:	ldr	r1, [lr]
   11480:	bl	10e78 <fputs_unlocked@plt>
   11484:	str	r0, [sp, #4]
   11488:	mov	sp, fp
   1148c:	pop	{fp, pc}
   11490:	push	{fp, lr}
   11494:	mov	fp, sp
   11498:	sub	sp, sp, #8
   1149c:	movw	r0, #10174	; 0x27be
   114a0:	movt	r0, #2
   114a4:	bl	10fe0 <gettext@plt>
   114a8:	movw	lr, #16724	; 0x4154
   114ac:	movt	lr, #3
   114b0:	ldr	r1, [lr]
   114b4:	bl	10e78 <fputs_unlocked@plt>
   114b8:	str	r0, [sp, #4]
   114bc:	mov	sp, fp
   114c0:	pop	{fp, pc}
   114c4:	push	{fp, lr}
   114c8:	mov	fp, sp
   114cc:	sub	sp, sp, #96	; 0x60
   114d0:	add	r1, sp, #36	; 0x24
   114d4:	movw	r2, #11144	; 0x2b88
   114d8:	movt	r2, #2
   114dc:	str	r0, [fp, #-4]
   114e0:	mov	r0, r1
   114e4:	str	r1, [sp, #20]
   114e8:	mov	r1, r2
   114ec:	movw	r2, #56	; 0x38
   114f0:	bl	10ee4 <memcpy@plt>
   114f4:	ldr	r0, [fp, #-4]
   114f8:	str	r0, [sp, #32]
   114fc:	ldr	r0, [sp, #20]
   11500:	str	r0, [sp, #28]
   11504:	ldr	r0, [sp, #28]
   11508:	ldr	r0, [r0]
   1150c:	movw	r1, #0
   11510:	cmp	r0, r1
   11514:	movw	r0, #0
   11518:	str	r0, [sp, #16]
   1151c:	beq	11548 <__assert_fail@plt+0x460>
   11520:	ldr	r0, [fp, #-4]
   11524:	ldr	r1, [sp, #28]
   11528:	ldr	r1, [r1]
   1152c:	bl	10e90 <strcmp@plt>
   11530:	cmp	r0, #0
   11534:	movw	r0, #0
   11538:	moveq	r0, #1
   1153c:	mvn	r1, #0
   11540:	eor	r0, r0, r1
   11544:	str	r0, [sp, #16]
   11548:	ldr	r0, [sp, #16]
   1154c:	tst	r0, #1
   11550:	beq	11564 <__assert_fail@plt+0x47c>
   11554:	ldr	r0, [sp, #28]
   11558:	add	r0, r0, #8
   1155c:	str	r0, [sp, #28]
   11560:	b	11504 <__assert_fail@plt+0x41c>
   11564:	ldr	r0, [sp, #28]
   11568:	ldr	r0, [r0, #4]
   1156c:	movw	r1, #0
   11570:	cmp	r0, r1
   11574:	beq	11584 <__assert_fail@plt+0x49c>
   11578:	ldr	r0, [sp, #28]
   1157c:	ldr	r0, [r0, #4]
   11580:	str	r0, [sp, #32]
   11584:	movw	r0, #10344	; 0x2868
   11588:	movt	r0, #2
   1158c:	bl	10fe0 <gettext@plt>
   11590:	movw	r1, #10033	; 0x2731
   11594:	movt	r1, #2
   11598:	movw	r2, #10367	; 0x287f
   1159c:	movt	r2, #2
   115a0:	bl	10ea8 <printf@plt>
   115a4:	movw	r1, #5
   115a8:	str	r0, [sp, #12]
   115ac:	mov	r0, r1
   115b0:	movw	r1, #0
   115b4:	bl	11070 <setlocale@plt>
   115b8:	str	r0, [sp, #24]
   115bc:	ldr	r0, [sp, #24]
   115c0:	movw	r1, #0
   115c4:	cmp	r0, r1
   115c8:	beq	11608 <__assert_fail@plt+0x520>
   115cc:	ldr	r0, [sp, #24]
   115d0:	movw	r1, #10407	; 0x28a7
   115d4:	movt	r1, #2
   115d8:	movw	r2, #3
   115dc:	bl	110c4 <strncmp@plt>
   115e0:	cmp	r0, #0
   115e4:	beq	11608 <__assert_fail@plt+0x520>
   115e8:	movw	r0, #10411	; 0x28ab
   115ec:	movt	r0, #2
   115f0:	bl	10fe0 <gettext@plt>
   115f4:	movw	lr, #16724	; 0x4154
   115f8:	movt	lr, #3
   115fc:	ldr	r1, [lr]
   11600:	bl	10e78 <fputs_unlocked@plt>
   11604:	str	r0, [sp, #8]
   11608:	movw	r0, #10482	; 0x28f2
   1160c:	movt	r0, #2
   11610:	bl	10fe0 <gettext@plt>
   11614:	ldr	r2, [fp, #-4]
   11618:	movw	r1, #10367	; 0x287f
   1161c:	movt	r1, #2
   11620:	bl	10ea8 <printf@plt>
   11624:	movw	r1, #10509	; 0x290d
   11628:	movt	r1, #2
   1162c:	str	r0, [sp, #4]
   11630:	mov	r0, r1
   11634:	bl	10fe0 <gettext@plt>
   11638:	ldr	r1, [sp, #32]
   1163c:	ldr	r2, [sp, #32]
   11640:	ldr	lr, [fp, #-4]
   11644:	cmp	r2, lr
   11648:	movw	r2, #0
   1164c:	moveq	r2, #1
   11650:	tst	r2, #1
   11654:	movw	r2, #10559	; 0x293f
   11658:	movt	r2, #2
   1165c:	movw	lr, #10277	; 0x2825
   11660:	movt	lr, #2
   11664:	movne	r2, lr
   11668:	bl	10ea8 <printf@plt>
   1166c:	str	r0, [sp]
   11670:	mov	sp, fp
   11674:	pop	{fp, pc}
   11678:	push	{fp, lr}
   1167c:	mov	fp, sp
   11680:	sub	sp, sp, #144	; 0x90
   11684:	movw	r2, #0
   11688:	str	r2, [fp, #-4]
   1168c:	str	r0, [fp, #-8]
   11690:	str	r1, [fp, #-12]
   11694:	movw	r0, #0
   11698:	strb	r0, [fp, #-25]	; 0xffffffe7
   1169c:	strb	r0, [fp, #-26]	; 0xffffffe6
   116a0:	movw	r0, #76	; 0x4c
   116a4:	str	r0, [fp, #-32]	; 0xffffffe0
   116a8:	str	r2, [fp, #-36]	; 0xffffffdc
   116ac:	ldr	r0, [fp, #-12]
   116b0:	ldr	r0, [r0]
   116b4:	bl	18268 <__assert_fail@plt+0x7180>
   116b8:	movw	r0, #6
   116bc:	movw	r1, #10559	; 0x293f
   116c0:	movt	r1, #2
   116c4:	bl	11070 <setlocale@plt>
   116c8:	movw	r1, #10037	; 0x2735
   116cc:	movt	r1, #2
   116d0:	str	r0, [fp, #-56]	; 0xffffffc8
   116d4:	mov	r0, r1
   116d8:	movw	r1, #9979	; 0x26fb
   116dc:	movt	r1, #2
   116e0:	bl	110a0 <bindtextdomain@plt>
   116e4:	movw	r1, #10037	; 0x2735
   116e8:	movt	r1, #2
   116ec:	str	r0, [fp, #-60]	; 0xffffffc4
   116f0:	mov	r0, r1
   116f4:	bl	10f2c <textdomain@plt>
   116f8:	movw	r1, #31692	; 0x7bcc
   116fc:	movt	r1, #1
   11700:	str	r0, [fp, #-64]	; 0xffffffc0
   11704:	mov	r0, r1
   11708:	bl	22160 <__assert_fail@plt+0x11078>
   1170c:	str	r0, [fp, #-68]	; 0xffffffbc
   11710:	ldr	r0, [fp, #-8]
   11714:	ldr	r1, [fp, #-12]
   11718:	movw	r2, #10003	; 0x2713
   1171c:	movt	r2, #2
   11720:	movw	r3, #10920	; 0x2aa8
   11724:	movt	r3, #2
   11728:	movw	ip, #0
   1172c:	str	ip, [sp]
   11730:	bl	10fbc <getopt_long@plt>
   11734:	str	r0, [fp, #-16]
   11738:	cmn	r0, #1
   1173c:	beq	11934 <__assert_fail@plt+0x84c>
   11740:	ldr	r0, [fp, #-16]
   11744:	cmn	r0, #3
   11748:	str	r0, [sp, #72]	; 0x48
   1174c:	beq	118d4 <__assert_fail@plt+0x7ec>
   11750:	b	11754 <__assert_fail@plt+0x66c>
   11754:	ldr	r0, [sp, #72]	; 0x48
   11758:	cmn	r0, #2
   1175c:	beq	118cc <__assert_fail@plt+0x7e4>
   11760:	b	11764 <__assert_fail@plt+0x67c>
   11764:	ldr	r0, [sp, #72]	; 0x48
   11768:	cmp	r0, #100	; 0x64
   1176c:	beq	117a8 <__assert_fail@plt+0x6c0>
   11770:	b	11774 <__assert_fail@plt+0x68c>
   11774:	ldr	r0, [sp, #72]	; 0x48
   11778:	cmp	r0, #105	; 0x69
   1177c:	beq	118b4 <__assert_fail@plt+0x7cc>
   11780:	b	11784 <__assert_fail@plt+0x69c>
   11784:	ldr	r0, [sp, #72]	; 0x48
   11788:	cmp	r0, #119	; 0x77
   1178c:	beq	117b4 <__assert_fail@plt+0x6cc>
   11790:	b	11794 <__assert_fail@plt+0x6ac>
   11794:	ldr	r0, [sp, #72]	; 0x48
   11798:	sub	r1, r0, #256	; 0x100
   1179c:	cmp	r1, #8
   117a0:	bcc	118c0 <__assert_fail@plt+0x7d8>
   117a4:	b	11928 <__assert_fail@plt+0x840>
   117a8:	movw	r0, #1
   117ac:	strb	r0, [fp, #-25]	; 0xffffffe7
   117b0:	b	11930 <__assert_fail@plt+0x848>
   117b4:	movw	r0, #16728	; 0x4158
   117b8:	movt	r0, #3
   117bc:	ldr	r0, [r0]
   117c0:	movw	r1, #0
   117c4:	movw	r2, #10
   117c8:	sub	r3, fp, #48	; 0x30
   117cc:	movw	ip, #10559	; 0x293f
   117d0:	movt	ip, #2
   117d4:	str	ip, [sp]
   117d8:	bl	1f504 <__assert_fail@plt+0xe41c>
   117dc:	str	r0, [fp, #-52]	; 0xffffffcc
   117e0:	ldr	r0, [fp, #-52]	; 0xffffffcc
   117e4:	movw	r1, #1
   117e8:	cmp	r1, r0
   117ec:	bcc	11800 <__assert_fail@plt+0x718>
   117f0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   117f4:	cmn	r0, #1
   117f8:	bgt	1184c <__assert_fail@plt+0x764>
   117fc:	b	11800 <__assert_fail@plt+0x718>
   11800:	movw	r0, #10015	; 0x271f
   11804:	movt	r0, #2
   11808:	bl	10fe0 <gettext@plt>
   1180c:	movw	lr, #16728	; 0x4158
   11810:	movt	lr, #3
   11814:	ldr	lr, [lr]
   11818:	str	r0, [sp, #68]	; 0x44
   1181c:	mov	r0, lr
   11820:	bl	1a8c4 <__assert_fail@plt+0x97dc>
   11824:	movw	lr, #1
   11828:	str	r0, [sp, #64]	; 0x40
   1182c:	mov	r0, lr
   11830:	movw	r1, #0
   11834:	movw	r2, #10008	; 0x2718
   11838:	movt	r2, #2
   1183c:	ldr	r3, [sp, #68]	; 0x44
   11840:	ldr	lr, [sp, #64]	; 0x40
   11844:	str	lr, [sp]
   11848:	bl	10f80 <error@plt>
   1184c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   11850:	cmp	r0, #1
   11854:	beq	11878 <__assert_fail@plt+0x790>
   11858:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1185c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   11860:	subs	r0, r0, #-2147483648	; 0x80000000
   11864:	sbcs	r1, r1, #0
   11868:	str	r0, [sp, #60]	; 0x3c
   1186c:	str	r1, [sp, #56]	; 0x38
   11870:	blt	1188c <__assert_fail@plt+0x7a4>
   11874:	b	11878 <__assert_fail@plt+0x790>
   11878:	mov	r0, #0
   1187c:	mov	r1, r0
   11880:	str	r1, [sp, #52]	; 0x34
   11884:	str	r0, [sp, #48]	; 0x30
   11888:	b	118a0 <__assert_fail@plt+0x7b8>
   1188c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   11890:	ldr	r1, [fp, #-44]	; 0xffffffd4
   11894:	str	r0, [sp, #52]	; 0x34
   11898:	str	r1, [sp, #48]	; 0x30
   1189c:	b	118a0 <__assert_fail@plt+0x7b8>
   118a0:	ldr	r0, [sp, #48]	; 0x30
   118a4:	ldr	r1, [sp, #52]	; 0x34
   118a8:	str	r1, [fp, #-32]	; 0xffffffe0
   118ac:	str	r0, [sp, #44]	; 0x2c
   118b0:	b	11930 <__assert_fail@plt+0x848>
   118b4:	movw	r0, #1
   118b8:	strb	r0, [fp, #-26]	; 0xffffffe6
   118bc:	b	11930 <__assert_fail@plt+0x848>
   118c0:	ldr	r0, [fp, #-16]
   118c4:	str	r0, [fp, #-36]	; 0xffffffdc
   118c8:	b	11930 <__assert_fail@plt+0x848>
   118cc:	movw	r0, #0
   118d0:	bl	111e4 <__assert_fail@plt+0xfc>
   118d4:	movw	r0, #16724	; 0x4154
   118d8:	movt	r0, #3
   118dc:	ldr	r0, [r0]
   118e0:	movw	r1, #16624	; 0x40f0
   118e4:	movt	r1, #3
   118e8:	ldr	r3, [r1]
   118ec:	movw	r1, #9972	; 0x26f4
   118f0:	movt	r1, #2
   118f4:	movw	r2, #10033	; 0x2731
   118f8:	movt	r2, #2
   118fc:	movw	ip, #10047	; 0x273f
   11900:	movt	ip, #2
   11904:	str	ip, [sp]
   11908:	movw	ip, #10063	; 0x274f
   1190c:	movt	ip, #2
   11910:	str	ip, [sp, #4]
   11914:	movw	ip, #0
   11918:	str	ip, [sp, #8]
   1191c:	bl	1c510 <__assert_fail@plt+0xb428>
   11920:	movw	r0, #0
   11924:	bl	10fd4 <exit@plt>
   11928:	movw	r0, #1
   1192c:	bl	111e4 <__assert_fail@plt+0xfc>
   11930:	b	11710 <__assert_fail@plt+0x628>
   11934:	ldr	r0, [fp, #-36]	; 0xffffffdc
   11938:	sub	r0, r0, #256	; 0x100
   1193c:	cmp	r0, #7
   11940:	str	r0, [sp, #40]	; 0x28
   11944:	bhi	11cb8 <__assert_fail@plt+0xbd0>
   11948:	add	r0, pc, #8
   1194c:	ldr	r1, [sp, #40]	; 0x28
   11950:	ldr	r0, [r0, r1, lsl #2]
   11954:	mov	pc, r0
   11958:	andeq	r1, r1, r8, ror r9
   1195c:	andeq	r1, r1, r0, ror #19
   11960:	andeq	r1, r1, r8, asr #20
   11964:			; <UNDEFINED> instruction: 0x00011ab0
   11968:	andeq	r1, r1, r8, lsl fp
   1196c:	andeq	r1, r1, r0, lsl #23
   11970:	andeq	r1, r1, r8, ror #23
   11974:	andeq	r1, r1, r0, asr ip
   11978:	movw	r0, #16736	; 0x4160
   1197c:	movt	r0, #3
   11980:	movw	r1, #7840	; 0x1ea0
   11984:	movt	r1, #1
   11988:	str	r1, [r0]
   1198c:	movw	r0, #16740	; 0x4164
   11990:	movt	r0, #3
   11994:	movw	r1, #27736	; 0x6c58
   11998:	movt	r1, #1
   1199c:	str	r1, [r0]
   119a0:	movw	r0, #16744	; 0x4168
   119a4:	movt	r0, #3
   119a8:	movw	r1, #23204	; 0x5aa4
   119ac:	movt	r1, #1
   119b0:	str	r1, [r0]
   119b4:	movw	r0, #16748	; 0x416c
   119b8:	movt	r0, #3
   119bc:	movw	r1, #7884	; 0x1ecc
   119c0:	movt	r1, #1
   119c4:	str	r1, [r0]
   119c8:	movw	r0, #16752	; 0x4170
   119cc:	movt	r0, #3
   119d0:	movw	r1, #7920	; 0x1ef0
   119d4:	movt	r1, #1
   119d8:	str	r1, [r0]
   119dc:	b	11ce4 <__assert_fail@plt+0xbfc>
   119e0:	movw	r0, #16736	; 0x4160
   119e4:	movt	r0, #3
   119e8:	movw	r1, #7840	; 0x1ea0
   119ec:	movt	r1, #1
   119f0:	str	r1, [r0]
   119f4:	movw	r0, #16740	; 0x4164
   119f8:	movt	r0, #3
   119fc:	movw	r1, #8028	; 0x1f5c
   11a00:	movt	r1, #1
   11a04:	str	r1, [r0]
   11a08:	movw	r0, #16744	; 0x4168
   11a0c:	movt	r0, #3
   11a10:	movw	r1, #8160	; 0x1fe0
   11a14:	movt	r1, #1
   11a18:	str	r1, [r0]
   11a1c:	movw	r0, #16748	; 0x416c
   11a20:	movt	r0, #3
   11a24:	movw	r1, #8328	; 0x2088
   11a28:	movt	r1, #1
   11a2c:	str	r1, [r0]
   11a30:	movw	r0, #16752	; 0x4170
   11a34:	movt	r0, #3
   11a38:	movw	r1, #8372	; 0x20b4
   11a3c:	movt	r1, #1
   11a40:	str	r1, [r0]
   11a44:	b	11ce4 <__assert_fail@plt+0xbfc>
   11a48:	movw	r0, #16736	; 0x4160
   11a4c:	movt	r0, #3
   11a50:	movw	r1, #8716	; 0x220c
   11a54:	movt	r1, #1
   11a58:	str	r1, [r0]
   11a5c:	movw	r0, #16740	; 0x4164
   11a60:	movt	r0, #3
   11a64:	movw	r1, #20324	; 0x4f64
   11a68:	movt	r1, #1
   11a6c:	str	r1, [r0]
   11a70:	movw	r0, #16744	; 0x4168
   11a74:	movt	r0, #3
   11a78:	movw	r1, #15592	; 0x3ce8
   11a7c:	movt	r1, #1
   11a80:	str	r1, [r0]
   11a84:	movw	r0, #16748	; 0x416c
   11a88:	movt	r0, #3
   11a8c:	movw	r1, #8764	; 0x223c
   11a90:	movt	r1, #1
   11a94:	str	r1, [r0]
   11a98:	movw	r0, #16752	; 0x4170
   11a9c:	movt	r0, #3
   11aa0:	movw	r1, #8800	; 0x2260
   11aa4:	movt	r1, #1
   11aa8:	str	r1, [r0]
   11aac:	b	11ce4 <__assert_fail@plt+0xbfc>
   11ab0:	movw	r0, #16736	; 0x4160
   11ab4:	movt	r0, #3
   11ab8:	movw	r1, #8716	; 0x220c
   11abc:	movt	r1, #1
   11ac0:	str	r1, [r0]
   11ac4:	movw	r0, #16740	; 0x4164
   11ac8:	movt	r0, #3
   11acc:	movw	r1, #8908	; 0x22cc
   11ad0:	movt	r1, #1
   11ad4:	str	r1, [r0]
   11ad8:	movw	r0, #16744	; 0x4168
   11adc:	movt	r0, #3
   11ae0:	movw	r1, #9020	; 0x233c
   11ae4:	movt	r1, #1
   11ae8:	str	r1, [r0]
   11aec:	movw	r0, #16748	; 0x416c
   11af0:	movt	r0, #3
   11af4:	movw	r1, #9232	; 0x2410
   11af8:	movt	r1, #1
   11afc:	str	r1, [r0]
   11b00:	movw	r0, #16752	; 0x4170
   11b04:	movt	r0, #3
   11b08:	movw	r1, #9276	; 0x243c
   11b0c:	movt	r1, #1
   11b10:	str	r1, [r0]
   11b14:	b	11ce4 <__assert_fail@plt+0xbfc>
   11b18:	movw	r0, #16736	; 0x4160
   11b1c:	movt	r0, #3
   11b20:	movw	r1, #9548	; 0x254c
   11b24:	movt	r1, #1
   11b28:	str	r1, [r0]
   11b2c:	movw	r0, #16740	; 0x4164
   11b30:	movt	r0, #3
   11b34:	movw	r1, #9572	; 0x2564
   11b38:	movt	r1, #1
   11b3c:	str	r1, [r0]
   11b40:	movw	r0, #16744	; 0x4168
   11b44:	movt	r0, #3
   11b48:	movw	r1, #9684	; 0x25d4
   11b4c:	movt	r1, #1
   11b50:	str	r1, [r0]
   11b54:	movw	r0, #16748	; 0x416c
   11b58:	movt	r0, #3
   11b5c:	movw	r1, #9836	; 0x266c
   11b60:	movt	r1, #1
   11b64:	str	r1, [r0]
   11b68:	movw	r0, #16752	; 0x4170
   11b6c:	movt	r0, #3
   11b70:	movw	r1, #9892	; 0x26a4
   11b74:	movt	r1, #1
   11b78:	str	r1, [r0]
   11b7c:	b	11ce4 <__assert_fail@plt+0xbfc>
   11b80:	movw	r0, #16736	; 0x4160
   11b84:	movt	r0, #3
   11b88:	movw	r1, #10324	; 0x2854
   11b8c:	movt	r1, #1
   11b90:	str	r1, [r0]
   11b94:	movw	r0, #16740	; 0x4164
   11b98:	movt	r0, #3
   11b9c:	movw	r1, #10348	; 0x286c
   11ba0:	movt	r1, #1
   11ba4:	str	r1, [r0]
   11ba8:	movw	r0, #16744	; 0x4168
   11bac:	movt	r0, #3
   11bb0:	movw	r1, #10412	; 0x28ac
   11bb4:	movt	r1, #1
   11bb8:	str	r1, [r0]
   11bbc:	movw	r0, #16748	; 0x416c
   11bc0:	movt	r0, #3
   11bc4:	movw	r1, #10600	; 0x2968
   11bc8:	movt	r1, #1
   11bcc:	str	r1, [r0]
   11bd0:	movw	r0, #16752	; 0x4170
   11bd4:	movt	r0, #3
   11bd8:	movw	r1, #10656	; 0x29a0
   11bdc:	movt	r1, #1
   11be0:	str	r1, [r0]
   11be4:	b	11ce4 <__assert_fail@plt+0xbfc>
   11be8:	movw	r0, #16736	; 0x4160
   11bec:	movt	r0, #3
   11bf0:	movw	r1, #10324	; 0x2854
   11bf4:	movt	r1, #1
   11bf8:	str	r1, [r0]
   11bfc:	movw	r0, #16740	; 0x4164
   11c00:	movt	r0, #3
   11c04:	movw	r1, #10348	; 0x286c
   11c08:	movt	r1, #1
   11c0c:	str	r1, [r0]
   11c10:	movw	r0, #16744	; 0x4168
   11c14:	movt	r0, #3
   11c18:	movw	r1, #11100	; 0x2b5c
   11c1c:	movt	r1, #1
   11c20:	str	r1, [r0]
   11c24:	movw	r0, #16748	; 0x416c
   11c28:	movt	r0, #3
   11c2c:	movw	r1, #10600	; 0x2968
   11c30:	movt	r1, #1
   11c34:	str	r1, [r0]
   11c38:	movw	r0, #16752	; 0x4170
   11c3c:	movt	r0, #3
   11c40:	movw	r1, #11288	; 0x2c18
   11c44:	movt	r1, #1
   11c48:	str	r1, [r0]
   11c4c:	b	11ce4 <__assert_fail@plt+0xbfc>
   11c50:	movw	r0, #16736	; 0x4160
   11c54:	movt	r0, #3
   11c58:	movw	r1, #11700	; 0x2db4
   11c5c:	movt	r1, #1
   11c60:	str	r1, [r0]
   11c64:	movw	r0, #16740	; 0x4164
   11c68:	movt	r0, #3
   11c6c:	movw	r1, #11744	; 0x2de0
   11c70:	movt	r1, #1
   11c74:	str	r1, [r0]
   11c78:	movw	r0, #16744	; 0x4168
   11c7c:	movt	r0, #3
   11c80:	movw	r1, #11836	; 0x2e3c
   11c84:	movt	r1, #1
   11c88:	str	r1, [r0]
   11c8c:	movw	r0, #16748	; 0x416c
   11c90:	movt	r0, #3
   11c94:	movw	r1, #12296	; 0x3008
   11c98:	movt	r1, #1
   11c9c:	str	r1, [r0]
   11ca0:	movw	r0, #16752	; 0x4170
   11ca4:	movt	r0, #3
   11ca8:	movw	r1, #12352	; 0x3040
   11cac:	movt	r1, #1
   11cb0:	str	r1, [r0]
   11cb4:	b	11ce4 <__assert_fail@plt+0xbfc>
   11cb8:	movw	r0, #10076	; 0x275c
   11cbc:	movt	r0, #2
   11cc0:	bl	10fe0 <gettext@plt>
   11cc4:	movw	lr, #0
   11cc8:	str	r0, [sp, #36]	; 0x24
   11ccc:	mov	r0, lr
   11cd0:	mov	r1, lr
   11cd4:	ldr	r2, [sp, #36]	; 0x24
   11cd8:	bl	10f80 <error@plt>
   11cdc:	movw	r0, #1
   11ce0:	bl	111e4 <__assert_fail@plt+0xfc>
   11ce4:	ldr	r0, [fp, #-8]
   11ce8:	movw	r1, #16704	; 0x4140
   11cec:	movt	r1, #3
   11cf0:	ldr	r1, [r1]
   11cf4:	sub	r0, r0, r1
   11cf8:	cmp	r0, #1
   11cfc:	ble	11d54 <__assert_fail@plt+0xc6c>
   11d00:	movw	r0, #10098	; 0x2772
   11d04:	movt	r0, #2
   11d08:	bl	10fe0 <gettext@plt>
   11d0c:	ldr	lr, [fp, #-12]
   11d10:	movw	r1, #16704	; 0x4140
   11d14:	movt	r1, #3
   11d18:	ldr	r1, [r1]
   11d1c:	add	r1, r1, #1
   11d20:	add	r1, lr, r1, lsl #2
   11d24:	ldr	r1, [r1]
   11d28:	str	r0, [sp, #32]
   11d2c:	mov	r0, r1
   11d30:	bl	1a8c4 <__assert_fail@plt+0x97dc>
   11d34:	movw	r1, #0
   11d38:	str	r0, [sp, #28]
   11d3c:	mov	r0, r1
   11d40:	ldr	r2, [sp, #32]
   11d44:	ldr	r3, [sp, #28]
   11d48:	bl	10f80 <error@plt>
   11d4c:	movw	r0, #1
   11d50:	bl	111e4 <__assert_fail@plt+0xfc>
   11d54:	movw	r0, #16704	; 0x4140
   11d58:	movt	r0, #3
   11d5c:	ldr	r0, [r0]
   11d60:	ldr	r1, [fp, #-8]
   11d64:	cmp	r0, r1
   11d68:	bge	11d8c <__assert_fail@plt+0xca4>
   11d6c:	ldr	r0, [fp, #-12]
   11d70:	movw	r1, #16704	; 0x4140
   11d74:	movt	r1, #3
   11d78:	ldr	r1, [r1]
   11d7c:	add	r0, r0, r1, lsl #2
   11d80:	ldr	r0, [r0]
   11d84:	str	r0, [fp, #-24]	; 0xffffffe8
   11d88:	b	11d98 <__assert_fail@plt+0xcb0>
   11d8c:	movw	r0, #12165	; 0x2f85
   11d90:	movt	r0, #2
   11d94:	str	r0, [fp, #-24]	; 0xffffffe8
   11d98:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11d9c:	movw	r1, #12165	; 0x2f85
   11da0:	movt	r1, #2
   11da4:	bl	10e90 <strcmp@plt>
   11da8:	cmp	r0, #0
   11dac:	bne	11dd4 <__assert_fail@plt+0xcec>
   11db0:	movw	r0, #0
   11db4:	str	r0, [sp, #24]
   11db8:	ldr	r1, [sp, #24]
   11dbc:	bl	1f4d0 <__assert_fail@plt+0xe3e8>
   11dc0:	movw	r0, #16720	; 0x4150
   11dc4:	movt	r0, #3
   11dc8:	ldr	r0, [r0]
   11dcc:	str	r0, [fp, #-20]	; 0xffffffec
   11dd0:	b	11e3c <__assert_fail@plt+0xd54>
   11dd4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11dd8:	movw	r1, #10115	; 0x2783
   11ddc:	movt	r1, #2
   11de0:	bl	11094 <fopen64@plt>
   11de4:	str	r0, [fp, #-20]	; 0xffffffec
   11de8:	ldr	r0, [fp, #-20]	; 0xffffffec
   11dec:	movw	r1, #0
   11df0:	cmp	r0, r1
   11df4:	bne	11e38 <__assert_fail@plt+0xd50>
   11df8:	bl	11010 <__errno_location@plt>
   11dfc:	ldr	r1, [r0]
   11e00:	ldr	r2, [fp, #-24]	; 0xffffffe8
   11e04:	movw	r0, #0
   11e08:	movw	lr, #3
   11e0c:	str	r1, [sp, #20]
   11e10:	mov	r1, lr
   11e14:	bl	1a680 <__assert_fail@plt+0x9598>
   11e18:	movw	r1, #1
   11e1c:	str	r0, [sp, #16]
   11e20:	mov	r0, r1
   11e24:	ldr	r1, [sp, #20]
   11e28:	movw	r2, #10012	; 0x271c
   11e2c:	movt	r2, #2
   11e30:	ldr	r3, [sp, #16]
   11e34:	bl	10f80 <error@plt>
   11e38:	b	11e3c <__assert_fail@plt+0xd54>
   11e3c:	ldr	r0, [fp, #-20]	; 0xffffffec
   11e40:	movw	r1, #2
   11e44:	bl	17d54 <__assert_fail@plt+0x6c6c>
   11e48:	ldrb	r0, [fp, #-25]	; 0xffffffe7
   11e4c:	tst	r0, #1
   11e50:	beq	11e78 <__assert_fail@plt+0xd90>
   11e54:	ldr	r0, [fp, #-20]	; 0xffffffec
   11e58:	ldr	r1, [fp, #-24]	; 0xffffffe8
   11e5c:	movw	r2, #16724	; 0x4154
   11e60:	movt	r2, #3
   11e64:	ldr	r2, [r2]
   11e68:	ldrb	r3, [fp, #-26]	; 0xffffffe6
   11e6c:	and	r3, r3, #1
   11e70:	bl	132d8 <__assert_fail@plt+0x21f0>
   11e74:	b	11e94 <__assert_fail@plt+0xdac>
   11e78:	ldr	r0, [fp, #-20]	; 0xffffffec
   11e7c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   11e80:	movw	r2, #16724	; 0x4154
   11e84:	movt	r2, #3
   11e88:	ldr	r2, [r2]
   11e8c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11e90:	bl	13708 <__assert_fail@plt+0x2620>
   11e94:	ldr	r0, [fp, #-4]
   11e98:	mov	sp, fp
   11e9c:	pop	{fp, pc}
   11ea0:	sub	sp, sp, #4
   11ea4:	str	r0, [sp]
   11ea8:	ldr	r0, [sp]
   11eac:	add	r0, r0, #2
   11eb0:	movw	r1, #21846	; 0x5556
   11eb4:	movt	r1, #21845	; 0x5555
   11eb8:	smmul	r0, r0, r1
   11ebc:	add	r0, r0, r0, lsr #31
   11ec0:	lsl	r0, r0, #2
   11ec4:	add	sp, sp, #4
   11ec8:	bx	lr
   11ecc:	push	{fp, lr}
   11ed0:	mov	fp, sp
   11ed4:	sub	sp, sp, #8
   11ed8:	str	r0, [sp, #4]
   11edc:	ldr	r0, [sp, #4]
   11ee0:	add	r0, r0, #4
   11ee4:	bl	16ca0 <__assert_fail@plt+0x5bb8>
   11ee8:	mov	sp, fp
   11eec:	pop	{fp, pc}
   11ef0:	push	{fp, lr}
   11ef4:	mov	fp, sp
   11ef8:	sub	sp, sp, #32
   11efc:	ldr	ip, [fp, #8]
   11f00:	str	r0, [fp, #-4]
   11f04:	str	r1, [fp, #-8]
   11f08:	str	r2, [fp, #-12]
   11f0c:	str	r3, [sp, #16]
   11f10:	ldr	r0, [fp, #-4]
   11f14:	add	r0, r0, #4
   11f18:	ldr	r1, [fp, #-8]
   11f1c:	ldr	r2, [fp, #-12]
   11f20:	ldr	r3, [sp, #16]
   11f24:	ldr	lr, [fp, #8]
   11f28:	str	lr, [sp]
   11f2c:	str	ip, [sp, #8]
   11f30:	bl	16cbc <__assert_fail@plt+0x5bd4>
   11f34:	and	r0, r0, #1
   11f38:	strb	r0, [sp, #15]
   11f3c:	ldr	r0, [fp, #-4]
   11f40:	ldr	r0, [r0, #4]
   11f44:	ldr	r1, [fp, #-4]
   11f48:	str	r0, [r1]
   11f4c:	ldrb	r0, [sp, #15]
   11f50:	and	r0, r0, #1
   11f54:	mov	sp, fp
   11f58:	pop	{fp, pc}
   11f5c:	push	{fp, lr}
   11f60:	mov	fp, sp
   11f64:	sub	sp, sp, #16
   11f68:	strb	r0, [fp, #-1]
   11f6c:	ldrb	r0, [fp, #-1]
   11f70:	cmp	r0, #45	; 0x2d
   11f74:	movw	r0, #1
   11f78:	str	r0, [sp, #8]
   11f7c:	beq	11fd0 <__assert_fail@plt+0xee8>
   11f80:	ldrb	r0, [fp, #-1]
   11f84:	cmp	r0, #95	; 0x5f
   11f88:	movw	r0, #1
   11f8c:	str	r0, [sp, #8]
   11f90:	beq	11fd0 <__assert_fail@plt+0xee8>
   11f94:	ldrb	r0, [fp, #-1]
   11f98:	cmp	r0, #43	; 0x2b
   11f9c:	movw	r0, #0
   11fa0:	str	r0, [sp, #4]
   11fa4:	beq	11fc8 <__assert_fail@plt+0xee0>
   11fa8:	ldrb	r0, [fp, #-1]
   11fac:	cmp	r0, #47	; 0x2f
   11fb0:	movw	r0, #0
   11fb4:	str	r0, [sp, #4]
   11fb8:	beq	11fc8 <__assert_fail@plt+0xee0>
   11fbc:	ldrb	r0, [fp, #-1]
   11fc0:	bl	16c58 <__assert_fail@plt+0x5b70>
   11fc4:	str	r0, [sp, #4]
   11fc8:	ldr	r0, [sp, #4]
   11fcc:	str	r0, [sp, #8]
   11fd0:	ldr	r0, [sp, #8]
   11fd4:	and	r0, r0, #1
   11fd8:	mov	sp, fp
   11fdc:	pop	{fp, pc}
   11fe0:	push	{fp, lr}
   11fe4:	mov	fp, sp
   11fe8:	sub	sp, sp, #24
   11fec:	str	r0, [fp, #-4]
   11ff0:	str	r1, [fp, #-8]
   11ff4:	str	r2, [sp, #12]
   11ff8:	str	r3, [sp, #8]
   11ffc:	ldr	r0, [fp, #-4]
   12000:	ldr	r1, [fp, #-8]
   12004:	ldr	r2, [sp, #12]
   12008:	ldr	r3, [sp, #8]
   1200c:	bl	15aa4 <__assert_fail@plt+0x49bc>
   12010:	ldr	r0, [sp, #12]
   12014:	str	r0, [sp, #4]
   12018:	ldr	r0, [sp, #8]
   1201c:	mvn	r1, #0
   12020:	add	r1, r0, r1
   12024:	str	r1, [sp, #8]
   12028:	cmp	r0, #0
   1202c:	beq	12080 <__assert_fail@plt+0xf98>
   12030:	ldr	r0, [sp, #4]
   12034:	ldrb	r0, [r0]
   12038:	cmp	r0, #43	; 0x2b
   1203c:	bne	12050 <__assert_fail@plt+0xf68>
   12040:	ldr	r0, [sp, #4]
   12044:	movw	r1, #45	; 0x2d
   12048:	strb	r1, [r0]
   1204c:	b	12070 <__assert_fail@plt+0xf88>
   12050:	ldr	r0, [sp, #4]
   12054:	ldrb	r0, [r0]
   12058:	cmp	r0, #47	; 0x2f
   1205c:	bne	1206c <__assert_fail@plt+0xf84>
   12060:	ldr	r0, [sp, #4]
   12064:	movw	r1, #95	; 0x5f
   12068:	strb	r1, [r0]
   1206c:	b	12070 <__assert_fail@plt+0xf88>
   12070:	ldr	r0, [sp, #4]
   12074:	add	r0, r0, #1
   12078:	str	r0, [sp, #4]
   1207c:	b	12018 <__assert_fail@plt+0xf30>
   12080:	mov	sp, fp
   12084:	pop	{fp, pc}
   12088:	push	{fp, lr}
   1208c:	mov	fp, sp
   12090:	sub	sp, sp, #8
   12094:	str	r0, [sp, #4]
   12098:	ldr	r0, [sp, #4]
   1209c:	add	r0, r0, #4
   120a0:	bl	16ca0 <__assert_fail@plt+0x5bb8>
   120a4:	ldr	r0, [sp, #4]
   120a8:	bl	139b0 <__assert_fail@plt+0x28c8>
   120ac:	mov	sp, fp
   120b0:	pop	{fp, pc}
   120b4:	push	{fp, lr}
   120b8:	mov	fp, sp
   120bc:	sub	sp, sp, #40	; 0x28
   120c0:	ldr	ip, [fp, #8]
   120c4:	str	r0, [fp, #-8]
   120c8:	str	r1, [fp, #-12]
   120cc:	str	r2, [fp, #-16]
   120d0:	str	r3, [sp, #20]
   120d4:	ldr	r0, [fp, #-8]
   120d8:	ldr	r1, [fp, #-16]
   120dc:	str	ip, [sp, #4]
   120e0:	bl	139e8 <__assert_fail@plt+0x2900>
   120e4:	ldr	r0, [fp, #-8]
   120e8:	ldr	r0, [r0, #16]
   120ec:	ldr	r1, [fp, #-12]
   120f0:	ldr	r2, [fp, #-16]
   120f4:	bl	10ee4 <memcpy@plt>
   120f8:	ldr	r0, [fp, #-16]
   120fc:	str	r0, [sp, #16]
   12100:	ldr	r0, [fp, #-8]
   12104:	ldr	r0, [r0, #16]
   12108:	str	r0, [sp, #12]
   1210c:	ldr	r0, [sp, #16]
   12110:	mvn	r1, #0
   12114:	add	r1, r0, r1
   12118:	str	r1, [sp, #16]
   1211c:	cmp	r0, #0
   12120:	beq	121b4 <__assert_fail@plt+0x10cc>
   12124:	ldr	r0, [sp, #12]
   12128:	ldrb	r0, [r0]
   1212c:	cmp	r0, #43	; 0x2b
   12130:	beq	12144 <__assert_fail@plt+0x105c>
   12134:	ldr	r0, [sp, #12]
   12138:	ldrb	r0, [r0]
   1213c:	cmp	r0, #47	; 0x2f
   12140:	bne	12160 <__assert_fail@plt+0x1078>
   12144:	ldr	r0, [fp, #8]
   12148:	movw	r1, #0
   1214c:	str	r1, [r0]
   12150:	movw	r0, #0
   12154:	and	r0, r0, #1
   12158:	strb	r0, [fp, #-1]
   1215c:	b	121fc <__assert_fail@plt+0x1114>
   12160:	ldr	r0, [sp, #12]
   12164:	ldrb	r0, [r0]
   12168:	cmp	r0, #45	; 0x2d
   1216c:	bne	12180 <__assert_fail@plt+0x1098>
   12170:	ldr	r0, [sp, #12]
   12174:	movw	r1, #43	; 0x2b
   12178:	strb	r1, [r0]
   1217c:	b	121a0 <__assert_fail@plt+0x10b8>
   12180:	ldr	r0, [sp, #12]
   12184:	ldrb	r0, [r0]
   12188:	cmp	r0, #95	; 0x5f
   1218c:	bne	1219c <__assert_fail@plt+0x10b4>
   12190:	ldr	r0, [sp, #12]
   12194:	movw	r1, #47	; 0x2f
   12198:	strb	r1, [r0]
   1219c:	b	121a0 <__assert_fail@plt+0x10b8>
   121a0:	b	121a4 <__assert_fail@plt+0x10bc>
   121a4:	ldr	r0, [sp, #12]
   121a8:	add	r0, r0, #1
   121ac:	str	r0, [sp, #12]
   121b0:	b	1210c <__assert_fail@plt+0x1024>
   121b4:	ldr	r0, [fp, #-8]
   121b8:	add	r0, r0, #4
   121bc:	ldr	r1, [fp, #-8]
   121c0:	ldr	r1, [r1, #16]
   121c4:	ldr	r2, [fp, #-16]
   121c8:	ldr	r3, [sp, #20]
   121cc:	ldr	ip, [fp, #8]
   121d0:	str	ip, [sp]
   121d4:	bl	16cbc <__assert_fail@plt+0x5bd4>
   121d8:	and	r0, r0, #1
   121dc:	strb	r0, [sp, #11]
   121e0:	ldr	r0, [fp, #-8]
   121e4:	ldr	r0, [r0, #4]
   121e8:	ldr	r1, [fp, #-8]
   121ec:	str	r0, [r1]
   121f0:	ldrb	r0, [sp, #11]
   121f4:	and	r0, r0, #1
   121f8:	strb	r0, [fp, #-1]
   121fc:	ldrb	r0, [fp, #-1]
   12200:	and	r0, r0, #1
   12204:	mov	sp, fp
   12208:	pop	{fp, pc}
   1220c:	sub	sp, sp, #4
   12210:	str	r0, [sp]
   12214:	ldr	r0, [sp]
   12218:	add	r0, r0, #4
   1221c:	movw	r1, #26215	; 0x6667
   12220:	movt	r1, #26214	; 0x6666
   12224:	smmul	r0, r0, r1
   12228:	asr	r1, r0, #1
   1222c:	add	r0, r1, r0, lsr #31
   12230:	lsl	r0, r0, #3
   12234:	add	sp, sp, #4
   12238:	bx	lr
   1223c:	push	{fp, lr}
   12240:	mov	fp, sp
   12244:	sub	sp, sp, #8
   12248:	str	r0, [sp, #4]
   1224c:	ldr	r0, [sp, #4]
   12250:	add	r0, r0, #4
   12254:	bl	14fac <__assert_fail@plt+0x3ec4>
   12258:	mov	sp, fp
   1225c:	pop	{fp, pc}
   12260:	push	{fp, lr}
   12264:	mov	fp, sp
   12268:	sub	sp, sp, #32
   1226c:	ldr	ip, [fp, #8]
   12270:	str	r0, [fp, #-4]
   12274:	str	r1, [fp, #-8]
   12278:	str	r2, [fp, #-12]
   1227c:	str	r3, [sp, #16]
   12280:	ldr	r0, [fp, #-4]
   12284:	add	r0, r0, #4
   12288:	ldr	r1, [fp, #-8]
   1228c:	ldr	r2, [fp, #-12]
   12290:	ldr	r3, [sp, #16]
   12294:	ldr	lr, [fp, #8]
   12298:	str	lr, [sp]
   1229c:	str	ip, [sp, #8]
   122a0:	bl	14fc8 <__assert_fail@plt+0x3ee0>
   122a4:	and	r0, r0, #1
   122a8:	strb	r0, [sp, #15]
   122ac:	ldr	r0, [fp, #-4]
   122b0:	ldr	r0, [r0, #4]
   122b4:	ldr	r1, [fp, #-4]
   122b8:	str	r0, [r1]
   122bc:	ldrb	r0, [sp, #15]
   122c0:	and	r0, r0, #1
   122c4:	mov	sp, fp
   122c8:	pop	{fp, pc}
   122cc:	sub	sp, sp, #12
   122d0:	strb	r0, [sp, #11]
   122d4:	ldrb	r0, [sp, #11]
   122d8:	movw	r1, #48	; 0x30
   122dc:	cmp	r1, r0
   122e0:	bgt	122f8 <__assert_fail@plt+0x1210>
   122e4:	ldrb	r0, [sp, #11]
   122e8:	cmp	r0, #57	; 0x39
   122ec:	movw	r0, #1
   122f0:	str	r0, [sp, #4]
   122f4:	ble	1232c <__assert_fail@plt+0x1244>
   122f8:	ldrb	r0, [sp, #11]
   122fc:	movw	r1, #65	; 0x41
   12300:	cmp	r1, r0
   12304:	movw	r0, #0
   12308:	str	r0, [sp]
   1230c:	bgt	12324 <__assert_fail@plt+0x123c>
   12310:	ldrb	r0, [sp, #11]
   12314:	cmp	r0, #86	; 0x56
   12318:	movw	r0, #0
   1231c:	movle	r0, #1
   12320:	str	r0, [sp]
   12324:	ldr	r0, [sp]
   12328:	str	r0, [sp, #4]
   1232c:	ldr	r0, [sp, #4]
   12330:	and	r0, r0, #1
   12334:	add	sp, sp, #12
   12338:	bx	lr
   1233c:	push	{fp, lr}
   12340:	mov	fp, sp
   12344:	sub	sp, sp, #24
   12348:	str	r0, [fp, #-4]
   1234c:	str	r1, [fp, #-8]
   12350:	str	r2, [sp, #12]
   12354:	str	r3, [sp, #8]
   12358:	ldr	r0, [fp, #-4]
   1235c:	ldr	r1, [fp, #-8]
   12360:	ldr	r2, [sp, #12]
   12364:	ldr	r3, [sp, #8]
   12368:	bl	13ce8 <__assert_fail@plt+0x2c00>
   1236c:	ldr	r0, [sp, #12]
   12370:	str	r0, [sp, #4]
   12374:	ldr	r0, [sp, #8]
   12378:	mvn	r1, #0
   1237c:	add	r1, r0, r1
   12380:	str	r1, [sp, #8]
   12384:	cmp	r0, #0
   12388:	beq	12408 <__assert_fail@plt+0x1320>
   1238c:	ldr	r0, [sp, #4]
   12390:	ldrb	r0, [r0]
   12394:	movw	r1, #50	; 0x32
   12398:	cmp	r1, r0
   1239c:	bgt	123b4 <__assert_fail@plt+0x12cc>
   123a0:	ldr	r0, [sp, #4]
   123a4:	ldrb	r0, [r0]
   123a8:	cmp	r0, #90	; 0x5a
   123ac:	bgt	123b4 <__assert_fail@plt+0x12cc>
   123b0:	b	123d4 <__assert_fail@plt+0x12ec>
   123b4:	movw	r0, #10665	; 0x29a9
   123b8:	movt	r0, #2
   123bc:	movw	r1, #10690	; 0x29c2
   123c0:	movt	r1, #2
   123c4:	movw	r2, #452	; 0x1c4
   123c8:	movw	r3, #10703	; 0x29cf
   123cc:	movt	r3, #2
   123d0:	bl	110e8 <__assert_fail@plt>
   123d4:	ldr	r0, [sp, #4]
   123d8:	ldrb	r0, [r0]
   123dc:	sub	r0, r0, #50	; 0x32
   123e0:	movw	r1, #11200	; 0x2bc0
   123e4:	movt	r1, #2
   123e8:	add	r0, r1, r0
   123ec:	ldrb	r0, [r0]
   123f0:	ldr	r1, [sp, #4]
   123f4:	strb	r0, [r1]
   123f8:	ldr	r0, [sp, #4]
   123fc:	add	r0, r0, #1
   12400:	str	r0, [sp, #4]
   12404:	b	12374 <__assert_fail@plt+0x128c>
   12408:	mov	sp, fp
   1240c:	pop	{fp, pc}
   12410:	push	{fp, lr}
   12414:	mov	fp, sp
   12418:	sub	sp, sp, #8
   1241c:	str	r0, [sp, #4]
   12420:	ldr	r0, [sp, #4]
   12424:	add	r0, r0, #4
   12428:	bl	14fac <__assert_fail@plt+0x3ec4>
   1242c:	ldr	r0, [sp, #4]
   12430:	bl	139b0 <__assert_fail@plt+0x28c8>
   12434:	mov	sp, fp
   12438:	pop	{fp, pc}
   1243c:	push	{fp, lr}
   12440:	mov	fp, sp
   12444:	sub	sp, sp, #40	; 0x28
   12448:	ldr	ip, [fp, #8]
   1244c:	str	r0, [fp, #-4]
   12450:	str	r1, [fp, #-8]
   12454:	str	r2, [fp, #-12]
   12458:	str	r3, [fp, #-16]
   1245c:	ldr	r0, [fp, #-4]
   12460:	ldr	r1, [fp, #-12]
   12464:	str	ip, [sp, #8]
   12468:	bl	139e8 <__assert_fail@plt+0x2900>
   1246c:	ldr	r0, [fp, #-12]
   12470:	str	r0, [sp, #20]
   12474:	ldr	r0, [fp, #-4]
   12478:	ldr	r0, [r0, #16]
   1247c:	str	r0, [sp, #16]
   12480:	ldr	r0, [sp, #20]
   12484:	mvn	r1, #0
   12488:	add	r1, r0, r1
   1248c:	str	r1, [sp, #20]
   12490:	cmp	r0, #0
   12494:	beq	12500 <__assert_fail@plt+0x1418>
   12498:	ldr	r0, [fp, #-8]
   1249c:	ldrb	r0, [r0]
   124a0:	bl	122cc <__assert_fail@plt+0x11e4>
   124a4:	tst	r0, #1
   124a8:	beq	124d4 <__assert_fail@plt+0x13ec>
   124ac:	ldr	r0, [fp, #-8]
   124b0:	ldrb	r0, [r0]
   124b4:	sub	r0, r0, #48	; 0x30
   124b8:	movw	r1, #11241	; 0x2be9
   124bc:	movt	r1, #2
   124c0:	add	r0, r1, r0
   124c4:	ldrb	r0, [r0]
   124c8:	ldr	r1, [sp, #16]
   124cc:	strb	r0, [r1]
   124d0:	b	124e4 <__assert_fail@plt+0x13fc>
   124d4:	ldr	r0, [fp, #-8]
   124d8:	ldrb	r0, [r0]
   124dc:	ldr	r1, [sp, #16]
   124e0:	strb	r0, [r1]
   124e4:	ldr	r0, [sp, #16]
   124e8:	add	r0, r0, #1
   124ec:	str	r0, [sp, #16]
   124f0:	ldr	r0, [fp, #-8]
   124f4:	add	r0, r0, #1
   124f8:	str	r0, [fp, #-8]
   124fc:	b	12480 <__assert_fail@plt+0x1398>
   12500:	ldr	r0, [fp, #-4]
   12504:	add	r0, r0, #4
   12508:	ldr	r1, [fp, #-4]
   1250c:	ldr	r1, [r1, #16]
   12510:	ldr	r2, [fp, #-12]
   12514:	ldr	r3, [fp, #-16]
   12518:	ldr	ip, [fp, #8]
   1251c:	str	ip, [sp]
   12520:	bl	14fc8 <__assert_fail@plt+0x3ee0>
   12524:	and	r0, r0, #1
   12528:	strb	r0, [sp, #15]
   1252c:	ldr	r0, [fp, #-4]
   12530:	ldr	r0, [r0, #4]
   12534:	ldr	r1, [fp, #-4]
   12538:	str	r0, [r1]
   1253c:	ldrb	r0, [sp, #15]
   12540:	and	r0, r0, #1
   12544:	mov	sp, fp
   12548:	pop	{fp, pc}
   1254c:	sub	sp, sp, #4
   12550:	str	r0, [sp]
   12554:	ldr	r0, [sp]
   12558:	lsl	r0, r0, #1
   1255c:	add	sp, sp, #4
   12560:	bx	lr
   12564:	sub	sp, sp, #12
   12568:	strb	r0, [sp, #11]
   1256c:	ldrb	r0, [sp, #11]
   12570:	movw	r1, #48	; 0x30
   12574:	cmp	r1, r0
   12578:	bgt	12590 <__assert_fail@plt+0x14a8>
   1257c:	ldrb	r0, [sp, #11]
   12580:	cmp	r0, #57	; 0x39
   12584:	movw	r0, #1
   12588:	str	r0, [sp, #4]
   1258c:	ble	125c4 <__assert_fail@plt+0x14dc>
   12590:	ldrb	r0, [sp, #11]
   12594:	movw	r1, #65	; 0x41
   12598:	cmp	r1, r0
   1259c:	movw	r0, #0
   125a0:	str	r0, [sp]
   125a4:	bgt	125bc <__assert_fail@plt+0x14d4>
   125a8:	ldrb	r0, [sp, #11]
   125ac:	cmp	r0, #70	; 0x46
   125b0:	movw	r0, #0
   125b4:	movle	r0, #1
   125b8:	str	r0, [sp]
   125bc:	ldr	r0, [sp]
   125c0:	str	r0, [sp, #4]
   125c4:	ldr	r0, [sp, #4]
   125c8:	and	r0, r0, #1
   125cc:	add	sp, sp, #12
   125d0:	bx	lr
   125d4:	sub	sp, sp, #20
   125d8:	str	r0, [sp, #16]
   125dc:	str	r1, [sp, #12]
   125e0:	str	r2, [sp, #8]
   125e4:	str	r3, [sp, #4]
   125e8:	ldr	r0, [sp, #12]
   125ec:	mvn	r1, #0
   125f0:	add	r1, r0, r1
   125f4:	str	r1, [sp, #12]
   125f8:	cmp	r0, #0
   125fc:	beq	12664 <__assert_fail@plt+0x157c>
   12600:	ldr	r0, [sp, #16]
   12604:	ldrb	r0, [r0]
   12608:	strb	r0, [sp, #3]
   1260c:	ldrb	r0, [sp, #3]
   12610:	asr	r0, r0, #4
   12614:	movw	r1, #11282	; 0x2c12
   12618:	movt	r1, #2
   1261c:	add	r0, r1, r0
   12620:	ldrb	r0, [r0]
   12624:	ldr	r2, [sp, #8]
   12628:	add	r3, r2, #1
   1262c:	str	r3, [sp, #8]
   12630:	strb	r0, [r2]
   12634:	ldrb	r0, [sp, #3]
   12638:	and	r0, r0, #15
   1263c:	add	r0, r1, r0
   12640:	ldrb	r0, [r0]
   12644:	ldr	r1, [sp, #8]
   12648:	add	r2, r1, #1
   1264c:	str	r2, [sp, #8]
   12650:	strb	r0, [r1]
   12654:	ldr	r0, [sp, #16]
   12658:	add	r0, r0, #1
   1265c:	str	r0, [sp, #16]
   12660:	b	125e8 <__assert_fail@plt+0x1500>
   12664:	add	sp, sp, #20
   12668:	bx	lr
   1266c:	push	{fp, lr}
   12670:	mov	fp, sp
   12674:	sub	sp, sp, #8
   12678:	str	r0, [sp, #4]
   1267c:	ldr	r0, [sp, #4]
   12680:	bl	139b0 <__assert_fail@plt+0x28c8>
   12684:	ldr	r0, [sp, #4]
   12688:	movw	lr, #0
   1268c:	strb	lr, [r0, #5]
   12690:	ldr	r0, [sp, #4]
   12694:	movw	lr, #1
   12698:	str	lr, [r0]
   1269c:	mov	sp, fp
   126a0:	pop	{fp, pc}
   126a4:	sub	sp, sp, #32
   126a8:	ldr	ip, [sp, #32]
   126ac:	str	r0, [sp, #24]
   126b0:	str	r1, [sp, #20]
   126b4:	str	r2, [sp, #16]
   126b8:	str	r3, [sp, #12]
   126bc:	movw	r0, #1
   126c0:	strb	r0, [sp, #11]
   126c4:	ldr	r0, [sp, #32]
   126c8:	movw	r1, #0
   126cc:	str	r1, [r0]
   126d0:	ldr	r0, [sp, #16]
   126d4:	cmp	r0, #0
   126d8:	str	ip, [sp]
   126dc:	bne	126fc <__assert_fail@plt+0x1614>
   126e0:	ldr	r0, [sp, #24]
   126e4:	ldrb	r0, [r0, #5]
   126e8:	mvn	r1, #0
   126ec:	eor	r0, r0, r1
   126f0:	and	r0, r0, #1
   126f4:	strb	r0, [sp, #31]
   126f8:	b	12844 <__assert_fail@plt+0x175c>
   126fc:	b	12700 <__assert_fail@plt+0x1618>
   12700:	ldr	r0, [sp, #16]
   12704:	mvn	r1, #0
   12708:	add	r1, r0, r1
   1270c:	str	r1, [sp, #16]
   12710:	cmp	r0, #0
   12714:	beq	12838 <__assert_fail@plt+0x1750>
   12718:	ldrb	r0, [sp, #11]
   1271c:	tst	r0, #1
   12720:	beq	12744 <__assert_fail@plt+0x165c>
   12724:	ldr	r0, [sp, #20]
   12728:	ldrb	r0, [r0]
   1272c:	cmp	r0, #10
   12730:	bne	12744 <__assert_fail@plt+0x165c>
   12734:	ldr	r0, [sp, #20]
   12738:	add	r0, r0, #1
   1273c:	str	r0, [sp, #20]
   12740:	b	12700 <__assert_fail@plt+0x1618>
   12744:	ldr	r0, [sp, #20]
   12748:	add	r1, r0, #1
   1274c:	str	r1, [sp, #20]
   12750:	ldrb	r0, [r0]
   12754:	str	r0, [sp, #4]
   12758:	ldr	r0, [sp, #4]
   1275c:	movw	r1, #48	; 0x30
   12760:	cmp	r1, r0
   12764:	bgt	12784 <__assert_fail@plt+0x169c>
   12768:	ldr	r0, [sp, #4]
   1276c:	cmp	r0, #57	; 0x39
   12770:	bgt	12784 <__assert_fail@plt+0x169c>
   12774:	ldr	r0, [sp, #4]
   12778:	sub	r0, r0, #48	; 0x30
   1277c:	str	r0, [sp, #4]
   12780:	b	127c4 <__assert_fail@plt+0x16dc>
   12784:	ldr	r0, [sp, #4]
   12788:	movw	r1, #65	; 0x41
   1278c:	cmp	r1, r0
   12790:	bgt	127b0 <__assert_fail@plt+0x16c8>
   12794:	ldr	r0, [sp, #4]
   12798:	cmp	r0, #70	; 0x46
   1279c:	bgt	127b0 <__assert_fail@plt+0x16c8>
   127a0:	ldr	r0, [sp, #4]
   127a4:	sub	r0, r0, #55	; 0x37
   127a8:	str	r0, [sp, #4]
   127ac:	b	127c0 <__assert_fail@plt+0x16d8>
   127b0:	movw	r0, #0
   127b4:	and	r0, r0, #1
   127b8:	strb	r0, [sp, #31]
   127bc:	b	12844 <__assert_fail@plt+0x175c>
   127c0:	b	127c4 <__assert_fail@plt+0x16dc>
   127c4:	ldr	r0, [sp, #24]
   127c8:	ldrb	r0, [r0, #5]
   127cc:	tst	r0, #1
   127d0:	beq	1280c <__assert_fail@plt+0x1724>
   127d4:	ldr	r0, [sp, #24]
   127d8:	ldrb	r0, [r0, #4]
   127dc:	lsl	r0, r0, #4
   127e0:	ldr	r1, [sp, #4]
   127e4:	add	r0, r0, r1
   127e8:	ldr	r1, [sp, #12]
   127ec:	add	r2, r1, #1
   127f0:	str	r2, [sp, #12]
   127f4:	strb	r0, [r1]
   127f8:	ldr	r0, [sp, #32]
   127fc:	ldr	r1, [r0]
   12800:	add	r1, r1, #1
   12804:	str	r1, [r0]
   12808:	b	12818 <__assert_fail@plt+0x1730>
   1280c:	ldr	r0, [sp, #4]
   12810:	ldr	r1, [sp, #24]
   12814:	strb	r0, [r1, #4]
   12818:	ldr	r0, [sp, #24]
   1281c:	ldrb	r0, [r0, #5]
   12820:	mvn	r1, #0
   12824:	eor	r0, r0, r1
   12828:	ldr	r1, [sp, #24]
   1282c:	and	r0, r0, #1
   12830:	strb	r0, [r1, #5]
   12834:	b	12700 <__assert_fail@plt+0x1618>
   12838:	movw	r0, #1
   1283c:	and	r0, r0, #1
   12840:	strb	r0, [sp, #31]
   12844:	ldrb	r0, [sp, #31]
   12848:	and	r0, r0, #1
   1284c:	add	sp, sp, #32
   12850:	bx	lr
   12854:	sub	sp, sp, #4
   12858:	str	r0, [sp]
   1285c:	ldr	r0, [sp]
   12860:	lsl	r0, r0, #3
   12864:	add	sp, sp, #4
   12868:	bx	lr
   1286c:	sub	sp, sp, #8
   12870:	strb	r0, [sp, #7]
   12874:	ldrb	r0, [sp, #7]
   12878:	cmp	r0, #48	; 0x30
   1287c:	movw	r0, #1
   12880:	str	r0, [sp]
   12884:	beq	1289c <__assert_fail@plt+0x17b4>
   12888:	ldrb	r0, [sp, #7]
   1288c:	cmp	r0, #49	; 0x31
   12890:	movw	r0, #0
   12894:	moveq	r0, #1
   12898:	str	r0, [sp]
   1289c:	ldr	r0, [sp]
   128a0:	and	r0, r0, #1
   128a4:	add	sp, sp, #8
   128a8:	bx	lr
   128ac:	sub	sp, sp, #24
   128b0:	str	r0, [sp, #20]
   128b4:	str	r1, [sp, #16]
   128b8:	str	r2, [sp, #12]
   128bc:	str	r3, [sp, #8]
   128c0:	ldr	r0, [sp, #16]
   128c4:	mvn	r1, #0
   128c8:	add	r1, r0, r1
   128cc:	str	r1, [sp, #16]
   128d0:	cmp	r0, #0
   128d4:	beq	12960 <__assert_fail@plt+0x1878>
   128d8:	ldr	r0, [sp, #20]
   128dc:	ldrb	r0, [r0]
   128e0:	strb	r0, [sp, #7]
   128e4:	movw	r0, #0
   128e8:	str	r0, [sp]
   128ec:	ldr	r0, [sp]
   128f0:	cmp	r0, #8
   128f4:	bge	12944 <__assert_fail@plt+0x185c>
   128f8:	ldrb	r0, [sp, #7]
   128fc:	and	r0, r0, #128	; 0x80
   12900:	cmp	r0, #0
   12904:	movw	r0, #0
   12908:	movne	r0, #1
   1290c:	tst	r0, #1
   12910:	movw	r0, #49	; 0x31
   12914:	moveq	r0, #48	; 0x30
   12918:	ldr	r1, [sp, #12]
   1291c:	add	r2, r1, #1
   12920:	str	r2, [sp, #12]
   12924:	strb	r0, [r1]
   12928:	ldrb	r0, [sp, #7]
   1292c:	lsl	r0, r0, #1
   12930:	strb	r0, [sp, #7]
   12934:	ldr	r0, [sp]
   12938:	add	r0, r0, #1
   1293c:	str	r0, [sp]
   12940:	b	128ec <__assert_fail@plt+0x1804>
   12944:	ldr	r0, [sp, #8]
   12948:	sub	r0, r0, #8
   1294c:	str	r0, [sp, #8]
   12950:	ldr	r0, [sp, #20]
   12954:	add	r0, r0, #1
   12958:	str	r0, [sp, #20]
   1295c:	b	128c0 <__assert_fail@plt+0x17d8>
   12960:	add	sp, sp, #24
   12964:	bx	lr
   12968:	push	{fp, lr}
   1296c:	mov	fp, sp
   12970:	sub	sp, sp, #8
   12974:	str	r0, [sp, #4]
   12978:	ldr	r0, [sp, #4]
   1297c:	bl	139b0 <__assert_fail@plt+0x28c8>
   12980:	ldr	r0, [sp, #4]
   12984:	movw	lr, #0
   12988:	strb	lr, [r0, #4]
   1298c:	ldr	r0, [sp, #4]
   12990:	movw	lr, #0
   12994:	str	lr, [r0]
   12998:	mov	sp, fp
   1299c:	pop	{fp, pc}
   129a0:	push	{fp, lr}
   129a4:	mov	fp, sp
   129a8:	sub	sp, sp, #32
   129ac:	ldr	ip, [fp, #8]
   129b0:	str	r0, [fp, #-8]
   129b4:	str	r1, [fp, #-12]
   129b8:	str	r2, [sp, #16]
   129bc:	str	r3, [sp, #12]
   129c0:	movw	r0, #1
   129c4:	strb	r0, [sp, #11]
   129c8:	ldr	r0, [fp, #8]
   129cc:	movw	r1, #0
   129d0:	str	r1, [r0]
   129d4:	ldr	r0, [sp, #16]
   129d8:	cmp	r0, #0
   129dc:	str	ip, [sp, #4]
   129e0:	bne	12a04 <__assert_fail@plt+0x191c>
   129e4:	ldr	r0, [fp, #-8]
   129e8:	ldr	r0, [r0]
   129ec:	cmp	r0, #0
   129f0:	movw	r0, #0
   129f4:	moveq	r0, #1
   129f8:	and	r0, r0, #1
   129fc:	strb	r0, [fp, #-1]
   12a00:	b	12b4c <__assert_fail@plt+0x1a64>
   12a04:	b	12a08 <__assert_fail@plt+0x1920>
   12a08:	ldr	r0, [sp, #16]
   12a0c:	mvn	r1, #0
   12a10:	add	r1, r0, r1
   12a14:	str	r1, [sp, #16]
   12a18:	cmp	r0, #0
   12a1c:	beq	12b40 <__assert_fail@plt+0x1a58>
   12a20:	ldrb	r0, [sp, #11]
   12a24:	tst	r0, #1
   12a28:	beq	12a4c <__assert_fail@plt+0x1964>
   12a2c:	ldr	r0, [fp, #-12]
   12a30:	ldrb	r0, [r0]
   12a34:	cmp	r0, #10
   12a38:	bne	12a4c <__assert_fail@plt+0x1964>
   12a3c:	ldr	r0, [fp, #-12]
   12a40:	add	r0, r0, #1
   12a44:	str	r0, [fp, #-12]
   12a48:	b	12a08 <__assert_fail@plt+0x1920>
   12a4c:	ldr	r0, [fp, #-12]
   12a50:	ldrb	r0, [r0]
   12a54:	bl	1286c <__assert_fail@plt+0x1784>
   12a58:	tst	r0, #1
   12a5c:	bne	12a70 <__assert_fail@plt+0x1988>
   12a60:	movw	r0, #0
   12a64:	and	r0, r0, #1
   12a68:	strb	r0, [fp, #-1]
   12a6c:	b	12b4c <__assert_fail@plt+0x1a64>
   12a70:	ldr	r0, [fp, #-12]
   12a74:	ldrb	r0, [r0]
   12a78:	cmp	r0, #49	; 0x31
   12a7c:	movw	r0, #0
   12a80:	moveq	r0, #1
   12a84:	and	r0, r0, #1
   12a88:	strb	r0, [sp, #10]
   12a8c:	ldr	r0, [fp, #-8]
   12a90:	ldr	r0, [r0]
   12a94:	cmp	r0, #0
   12a98:	bne	12aa8 <__assert_fail@plt+0x19c0>
   12a9c:	ldr	r0, [fp, #-8]
   12aa0:	movw	r1, #8
   12aa4:	str	r1, [r0]
   12aa8:	ldr	r0, [fp, #-8]
   12aac:	ldr	r1, [r0]
   12ab0:	mvn	r2, #0
   12ab4:	add	r1, r1, r2
   12ab8:	str	r1, [r0]
   12abc:	ldrb	r0, [sp, #10]
   12ac0:	and	r0, r0, #1
   12ac4:	ldr	r1, [fp, #-8]
   12ac8:	ldr	r1, [r1]
   12acc:	lsl	r0, r0, r1
   12ad0:	ldr	r1, [fp, #-8]
   12ad4:	ldrb	r2, [r1, #4]
   12ad8:	orr	r0, r2, r0
   12adc:	strb	r0, [r1, #4]
   12ae0:	ldr	r0, [fp, #-8]
   12ae4:	ldr	r0, [r0]
   12ae8:	cmp	r0, #0
   12aec:	bne	12b30 <__assert_fail@plt+0x1a48>
   12af0:	ldr	r0, [fp, #-8]
   12af4:	ldrb	r0, [r0, #4]
   12af8:	ldr	r1, [sp, #12]
   12afc:	add	r2, r1, #1
   12b00:	str	r2, [sp, #12]
   12b04:	strb	r0, [r1]
   12b08:	ldr	r0, [fp, #-8]
   12b0c:	movw	r1, #0
   12b10:	strb	r1, [r0, #4]
   12b14:	ldr	r0, [fp, #8]
   12b18:	ldr	r1, [r0]
   12b1c:	add	r1, r1, #1
   12b20:	str	r1, [r0]
   12b24:	ldr	r0, [fp, #-8]
   12b28:	movw	r1, #0
   12b2c:	str	r1, [r0]
   12b30:	ldr	r0, [fp, #-12]
   12b34:	add	r0, r0, #1
   12b38:	str	r0, [fp, #-12]
   12b3c:	b	12a08 <__assert_fail@plt+0x1920>
   12b40:	movw	r0, #1
   12b44:	and	r0, r0, #1
   12b48:	strb	r0, [fp, #-1]
   12b4c:	ldrb	r0, [fp, #-1]
   12b50:	and	r0, r0, #1
   12b54:	mov	sp, fp
   12b58:	pop	{fp, pc}
   12b5c:	sub	sp, sp, #24
   12b60:	str	r0, [sp, #20]
   12b64:	str	r1, [sp, #16]
   12b68:	str	r2, [sp, #12]
   12b6c:	str	r3, [sp, #8]
   12b70:	ldr	r0, [sp, #16]
   12b74:	mvn	r1, #0
   12b78:	add	r1, r0, r1
   12b7c:	str	r1, [sp, #16]
   12b80:	cmp	r0, #0
   12b84:	beq	12c10 <__assert_fail@plt+0x1b28>
   12b88:	ldr	r0, [sp, #20]
   12b8c:	ldrb	r0, [r0]
   12b90:	strb	r0, [sp, #7]
   12b94:	movw	r0, #0
   12b98:	str	r0, [sp]
   12b9c:	ldr	r0, [sp]
   12ba0:	cmp	r0, #8
   12ba4:	bge	12bf4 <__assert_fail@plt+0x1b0c>
   12ba8:	ldrb	r0, [sp, #7]
   12bac:	and	r0, r0, #1
   12bb0:	cmp	r0, #0
   12bb4:	movw	r0, #0
   12bb8:	movne	r0, #1
   12bbc:	tst	r0, #1
   12bc0:	movw	r0, #49	; 0x31
   12bc4:	moveq	r0, #48	; 0x30
   12bc8:	ldr	r1, [sp, #12]
   12bcc:	add	r2, r1, #1
   12bd0:	str	r2, [sp, #12]
   12bd4:	strb	r0, [r1]
   12bd8:	ldrb	r0, [sp, #7]
   12bdc:	asr	r0, r0, #1
   12be0:	strb	r0, [sp, #7]
   12be4:	ldr	r0, [sp]
   12be8:	add	r0, r0, #1
   12bec:	str	r0, [sp]
   12bf0:	b	12b9c <__assert_fail@plt+0x1ab4>
   12bf4:	ldr	r0, [sp, #8]
   12bf8:	sub	r0, r0, #8
   12bfc:	str	r0, [sp, #8]
   12c00:	ldr	r0, [sp, #20]
   12c04:	add	r0, r0, #1
   12c08:	str	r0, [sp, #20]
   12c0c:	b	12b70 <__assert_fail@plt+0x1a88>
   12c10:	add	sp, sp, #24
   12c14:	bx	lr
   12c18:	push	{fp, lr}
   12c1c:	mov	fp, sp
   12c20:	sub	sp, sp, #32
   12c24:	ldr	ip, [fp, #8]
   12c28:	str	r0, [fp, #-8]
   12c2c:	str	r1, [fp, #-12]
   12c30:	str	r2, [sp, #16]
   12c34:	str	r3, [sp, #12]
   12c38:	movw	r0, #1
   12c3c:	strb	r0, [sp, #11]
   12c40:	ldr	r0, [fp, #8]
   12c44:	movw	r1, #0
   12c48:	str	r1, [r0]
   12c4c:	ldr	r0, [sp, #16]
   12c50:	cmp	r0, #0
   12c54:	str	ip, [sp, #4]
   12c58:	bne	12c7c <__assert_fail@plt+0x1b94>
   12c5c:	ldr	r0, [fp, #-8]
   12c60:	ldr	r0, [r0]
   12c64:	cmp	r0, #0
   12c68:	movw	r0, #0
   12c6c:	moveq	r0, #1
   12c70:	and	r0, r0, #1
   12c74:	strb	r0, [fp, #-1]
   12c78:	b	12da4 <__assert_fail@plt+0x1cbc>
   12c7c:	b	12c80 <__assert_fail@plt+0x1b98>
   12c80:	ldr	r0, [sp, #16]
   12c84:	mvn	r1, #0
   12c88:	add	r1, r0, r1
   12c8c:	str	r1, [sp, #16]
   12c90:	cmp	r0, #0
   12c94:	beq	12d98 <__assert_fail@plt+0x1cb0>
   12c98:	ldrb	r0, [sp, #11]
   12c9c:	tst	r0, #1
   12ca0:	beq	12cc4 <__assert_fail@plt+0x1bdc>
   12ca4:	ldr	r0, [fp, #-12]
   12ca8:	ldrb	r0, [r0]
   12cac:	cmp	r0, #10
   12cb0:	bne	12cc4 <__assert_fail@plt+0x1bdc>
   12cb4:	ldr	r0, [fp, #-12]
   12cb8:	add	r0, r0, #1
   12cbc:	str	r0, [fp, #-12]
   12cc0:	b	12c80 <__assert_fail@plt+0x1b98>
   12cc4:	ldr	r0, [fp, #-12]
   12cc8:	ldrb	r0, [r0]
   12ccc:	bl	1286c <__assert_fail@plt+0x1784>
   12cd0:	tst	r0, #1
   12cd4:	bne	12ce8 <__assert_fail@plt+0x1c00>
   12cd8:	movw	r0, #0
   12cdc:	and	r0, r0, #1
   12ce0:	strb	r0, [fp, #-1]
   12ce4:	b	12da4 <__assert_fail@plt+0x1cbc>
   12ce8:	ldr	r0, [fp, #-12]
   12cec:	ldrb	r0, [r0]
   12cf0:	cmp	r0, #49	; 0x31
   12cf4:	movw	r0, #0
   12cf8:	moveq	r0, #1
   12cfc:	and	r0, r0, #1
   12d00:	strb	r0, [sp, #10]
   12d04:	ldrb	r0, [sp, #10]
   12d08:	and	r0, r0, #1
   12d0c:	ldr	r1, [fp, #-8]
   12d10:	ldr	r1, [r1]
   12d14:	lsl	r0, r0, r1
   12d18:	ldr	r1, [fp, #-8]
   12d1c:	ldrb	r2, [r1, #4]
   12d20:	orr	r0, r2, r0
   12d24:	strb	r0, [r1, #4]
   12d28:	ldr	r0, [fp, #-8]
   12d2c:	ldr	r1, [r0]
   12d30:	add	r1, r1, #1
   12d34:	str	r1, [r0]
   12d38:	ldr	r0, [fp, #-8]
   12d3c:	ldr	r0, [r0]
   12d40:	cmp	r0, #8
   12d44:	bne	12d88 <__assert_fail@plt+0x1ca0>
   12d48:	ldr	r0, [fp, #-8]
   12d4c:	ldrb	r0, [r0, #4]
   12d50:	ldr	r1, [sp, #12]
   12d54:	add	r2, r1, #1
   12d58:	str	r2, [sp, #12]
   12d5c:	strb	r0, [r1]
   12d60:	ldr	r0, [fp, #-8]
   12d64:	movw	r1, #0
   12d68:	strb	r1, [r0, #4]
   12d6c:	ldr	r0, [fp, #8]
   12d70:	ldr	r1, [r0]
   12d74:	add	r1, r1, #1
   12d78:	str	r1, [r0]
   12d7c:	ldr	r0, [fp, #-8]
   12d80:	movw	r1, #0
   12d84:	str	r1, [r0]
   12d88:	ldr	r0, [fp, #-12]
   12d8c:	add	r0, r0, #1
   12d90:	str	r0, [fp, #-12]
   12d94:	b	12c80 <__assert_fail@plt+0x1b98>
   12d98:	movw	r0, #1
   12d9c:	and	r0, r0, #1
   12da0:	strb	r0, [fp, #-1]
   12da4:	ldrb	r0, [fp, #-1]
   12da8:	and	r0, r0, #1
   12dac:	mov	sp, fp
   12db0:	pop	{fp, pc}
   12db4:	sub	sp, sp, #8
   12db8:	str	r0, [sp, #4]
   12dbc:	ldr	r0, [sp, #4]
   12dc0:	movw	r1, #5
   12dc4:	mul	r0, r0, r1
   12dc8:	movw	r1, #4
   12dcc:	sdiv	r0, r0, r1
   12dd0:	str	r0, [sp]
   12dd4:	ldr	r0, [sp]
   12dd8:	add	sp, sp, #8
   12ddc:	bx	lr
   12de0:	push	{fp, lr}
   12de4:	mov	fp, sp
   12de8:	sub	sp, sp, #8
   12dec:	strb	r0, [fp, #-1]
   12df0:	ldrb	r0, [fp, #-1]
   12df4:	bl	17544 <__assert_fail@plt+0x645c>
   12df8:	tst	r0, #1
   12dfc:	movw	r0, #1
   12e00:	str	r0, [sp]
   12e04:	bne	12e2c <__assert_fail@plt+0x1d44>
   12e08:	ldrb	r1, [fp, #-1]
   12e0c:	movw	r0, #10777	; 0x2a19
   12e10:	movt	r0, #2
   12e14:	bl	10ff8 <strchr@plt>
   12e18:	movw	r1, #0
   12e1c:	cmp	r0, r1
   12e20:	movw	r0, #0
   12e24:	movne	r0, #1
   12e28:	str	r0, [sp]
   12e2c:	ldr	r0, [sp]
   12e30:	and	r0, r0, #1
   12e34:	mov	sp, fp
   12e38:	pop	{fp, pc}
   12e3c:	push	{fp, lr}
   12e40:	mov	fp, sp
   12e44:	sub	sp, sp, #72	; 0x48
   12e48:	str	r0, [fp, #-4]
   12e4c:	str	r1, [fp, #-8]
   12e50:	str	r2, [fp, #-12]
   12e54:	str	r3, [fp, #-16]
   12e58:	movw	r0, #0
   12e5c:	str	r0, [fp, #-20]	; 0xffffffec
   12e60:	str	r0, [fp, #-28]	; 0xffffffe4
   12e64:	ldr	r0, [fp, #-8]
   12e68:	cmp	r0, #0
   12e6c:	bne	12ea8 <__assert_fail@plt+0x1dc0>
   12e70:	ldr	r0, [fp, #-20]	; 0xffffffec
   12e74:	cmp	r0, #0
   12e78:	bne	12e84 <__assert_fail@plt+0x1d9c>
   12e7c:	mov	sp, fp
   12e80:	pop	{fp, pc}
   12e84:	movw	r0, #10801	; 0x2a31
   12e88:	movt	r0, #2
   12e8c:	bl	10fe0 <gettext@plt>
   12e90:	movw	lr, #1
   12e94:	str	r0, [sp, #20]
   12e98:	mov	r0, lr
   12e9c:	movw	r1, #0
   12ea0:	ldr	r2, [sp, #20]
   12ea4:	bl	10f80 <error@plt>
   12ea8:	ldr	r0, [fp, #-4]
   12eac:	add	r1, r0, #1
   12eb0:	str	r1, [fp, #-4]
   12eb4:	ldrb	r0, [r0]
   12eb8:	ldr	r1, [fp, #-20]	; 0xffffffec
   12ebc:	add	r2, r1, #1
   12ec0:	str	r2, [fp, #-20]	; 0xffffffec
   12ec4:	sub	r2, fp, #24
   12ec8:	add	r1, r2, r1
   12ecc:	strb	r0, [r1]
   12ed0:	ldr	r0, [fp, #-8]
   12ed4:	mvn	r1, #0
   12ed8:	add	r0, r0, r1
   12edc:	str	r0, [fp, #-8]
   12ee0:	ldr	r0, [fp, #-20]	; 0xffffffec
   12ee4:	cmp	r0, #4
   12ee8:	bne	13004 <__assert_fail@plt+0x1f1c>
   12eec:	ldrb	r0, [fp, #-24]	; 0xffffffe8
   12ef0:	mov	r1, #0
   12ef4:	str	r1, [sp, #36]	; 0x24
   12ef8:	str	r0, [sp, #32]
   12efc:	ldr	r0, [sp, #32]
   12f00:	ldr	r1, [sp, #36]	; 0x24
   12f04:	lsl	r1, r1, #24
   12f08:	orr	r1, r1, r0, lsr #8
   12f0c:	lsl	r0, r0, #24
   12f10:	ldrb	r2, [fp, #-23]	; 0xffffffe9
   12f14:	ldrb	r3, [fp, #-22]	; 0xffffffea
   12f18:	ldrb	ip, [fp, #-21]	; 0xffffffeb
   12f1c:	orr	r0, r0, r2, lsl #16
   12f20:	orr	r0, r0, r3, lsl #8
   12f24:	orr	r0, r0, ip
   12f28:	str	r1, [sp, #36]	; 0x24
   12f2c:	str	r0, [sp, #32]
   12f30:	movw	r0, #4
   12f34:	str	r0, [sp, #28]
   12f38:	ldr	r0, [sp, #28]
   12f3c:	cmp	r0, #0
   12f40:	blt	12fe4 <__assert_fail@plt+0x1efc>
   12f44:	ldr	r0, [sp, #32]
   12f48:	ldr	r1, [sp, #36]	; 0x24
   12f4c:	mov	r2, #85	; 0x55
   12f50:	mov	r3, #0
   12f54:	str	r2, [sp, #16]
   12f58:	str	r3, [sp, #12]
   12f5c:	bl	21eb4 <__assert_fail@plt+0x10dcc>
   12f60:	str	r2, [sp, #24]
   12f64:	ldr	r2, [sp, #32]
   12f68:	ldr	r3, [sp, #36]	; 0x24
   12f6c:	str	r0, [sp, #8]
   12f70:	mov	r0, r2
   12f74:	str	r1, [sp, #4]
   12f78:	mov	r1, r3
   12f7c:	ldr	r2, [sp, #16]
   12f80:	ldr	r3, [sp, #12]
   12f84:	bl	21eb4 <__assert_fail@plt+0x10dcc>
   12f88:	str	r1, [sp, #36]	; 0x24
   12f8c:	str	r0, [sp, #32]
   12f90:	ldr	r0, [fp, #-28]	; 0xffffffe4
   12f94:	ldr	r1, [sp, #28]
   12f98:	add	r0, r0, r1
   12f9c:	ldr	r1, [fp, #-16]
   12fa0:	cmp	r0, r1
   12fa4:	bge	12fcc <__assert_fail@plt+0x1ee4>
   12fa8:	ldr	r0, [sp, #24]
   12fac:	movw	r1, #11298	; 0x2c22
   12fb0:	movt	r1, #2
   12fb4:	add	r0, r1, r0
   12fb8:	ldrb	r0, [r0]
   12fbc:	ldr	r1, [fp, #-12]
   12fc0:	ldr	r2, [sp, #28]
   12fc4:	add	r1, r1, r2
   12fc8:	strb	r0, [r1]
   12fcc:	b	12fd0 <__assert_fail@plt+0x1ee8>
   12fd0:	ldr	r0, [sp, #28]
   12fd4:	mvn	r1, #0
   12fd8:	add	r0, r0, r1
   12fdc:	str	r0, [sp, #28]
   12fe0:	b	12f38 <__assert_fail@plt+0x1e50>
   12fe4:	ldr	r0, [fp, #-12]
   12fe8:	add	r0, r0, #5
   12fec:	str	r0, [fp, #-12]
   12ff0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   12ff4:	add	r0, r0, #5
   12ff8:	str	r0, [fp, #-28]	; 0xffffffe4
   12ffc:	movw	r0, #0
   13000:	str	r0, [fp, #-20]	; 0xffffffec
   13004:	b	12e64 <__assert_fail@plt+0x1d7c>
   13008:	push	{fp, lr}
   1300c:	mov	fp, sp
   13010:	sub	sp, sp, #8
   13014:	str	r0, [sp, #4]
   13018:	ldr	r0, [sp, #4]
   1301c:	bl	139b0 <__assert_fail@plt+0x28c8>
   13020:	ldr	r0, [sp, #4]
   13024:	movw	lr, #0
   13028:	str	lr, [r0, #4]
   1302c:	ldr	r0, [sp, #4]
   13030:	movw	lr, #1
   13034:	str	lr, [r0]
   13038:	mov	sp, fp
   1303c:	pop	{fp, pc}
   13040:	sub	sp, sp, #40	; 0x28
   13044:	ldr	ip, [sp, #40]	; 0x28
   13048:	str	r0, [sp, #32]
   1304c:	str	r1, [sp, #28]
   13050:	str	r2, [sp, #24]
   13054:	str	r3, [sp, #20]
   13058:	movw	r0, #1
   1305c:	strb	r0, [sp, #19]
   13060:	ldr	r0, [sp, #40]	; 0x28
   13064:	movw	r1, #0
   13068:	str	r1, [r0]
   1306c:	ldr	r0, [sp, #24]
   13070:	cmp	r0, #0
   13074:	str	ip, [sp, #4]
   13078:	bne	130ac <__assert_fail@plt+0x1fc4>
   1307c:	ldr	r0, [sp, #32]
   13080:	ldr	r0, [r0, #4]
   13084:	cmp	r0, #0
   13088:	ble	1309c <__assert_fail@plt+0x1fb4>
   1308c:	movw	r0, #0
   13090:	and	r0, r0, #1
   13094:	strb	r0, [sp, #39]	; 0x27
   13098:	b	132c8 <__assert_fail@plt+0x21e0>
   1309c:	movw	r0, #1
   130a0:	and	r0, r0, #1
   130a4:	strb	r0, [sp, #39]	; 0x27
   130a8:	b	132c8 <__assert_fail@plt+0x21e0>
   130ac:	b	130b0 <__assert_fail@plt+0x1fc8>
   130b0:	ldr	r0, [sp, #24]
   130b4:	mvn	r1, #0
   130b8:	add	r1, r0, r1
   130bc:	str	r1, [sp, #24]
   130c0:	cmp	r0, #0
   130c4:	beq	132ac <__assert_fail@plt+0x21c4>
   130c8:	ldrb	r0, [sp, #19]
   130cc:	tst	r0, #1
   130d0:	beq	130f4 <__assert_fail@plt+0x200c>
   130d4:	ldr	r0, [sp, #28]
   130d8:	ldrb	r0, [r0]
   130dc:	cmp	r0, #10
   130e0:	bne	130f4 <__assert_fail@plt+0x200c>
   130e4:	ldr	r0, [sp, #28]
   130e8:	add	r0, r0, #1
   130ec:	str	r0, [sp, #28]
   130f0:	b	130b0 <__assert_fail@plt+0x1fc8>
   130f4:	ldr	r0, [sp, #28]
   130f8:	ldrb	r0, [r0]
   130fc:	strb	r0, [sp, #18]
   13100:	ldrb	r0, [sp, #18]
   13104:	cmp	r0, #33	; 0x21
   13108:	blt	1315c <__assert_fail@plt+0x2074>
   1310c:	ldrb	r0, [sp, #18]
   13110:	cmp	r0, #125	; 0x7d
   13114:	bgt	1315c <__assert_fail@plt+0x2074>
   13118:	ldrb	r0, [sp, #18]
   1311c:	sub	r0, r0, #33	; 0x21
   13120:	movw	r1, #11383	; 0x2c77
   13124:	movt	r1, #2
   13128:	add	r0, r1, r0
   1312c:	ldrb	r0, [r0]
   13130:	strb	r0, [sp, #17]
   13134:	ldrsb	r0, [sp, #17]
   13138:	cmp	r0, #0
   1313c:	bge	13150 <__assert_fail@plt+0x2068>
   13140:	movw	r0, #0
   13144:	and	r0, r0, #1
   13148:	strb	r0, [sp, #39]	; 0x27
   1314c:	b	132c8 <__assert_fail@plt+0x21e0>
   13150:	ldrb	r0, [sp, #17]
   13154:	strb	r0, [sp, #18]
   13158:	b	1316c <__assert_fail@plt+0x2084>
   1315c:	movw	r0, #0
   13160:	and	r0, r0, #1
   13164:	strb	r0, [sp, #39]	; 0x27
   13168:	b	132c8 <__assert_fail@plt+0x21e0>
   1316c:	ldr	r0, [sp, #28]
   13170:	add	r0, r0, #1
   13174:	str	r0, [sp, #28]
   13178:	ldrb	r0, [sp, #18]
   1317c:	ldr	r1, [sp, #32]
   13180:	add	r1, r1, #4
   13184:	add	r1, r1, #4
   13188:	ldr	r2, [sp, #32]
   1318c:	ldr	r3, [r2, #4]
   13190:	add	ip, r3, #1
   13194:	str	ip, [r2, #4]
   13198:	add	r1, r1, r3
   1319c:	strb	r0, [r1]
   131a0:	ldr	r0, [sp, #32]
   131a4:	ldr	r0, [r0, #4]
   131a8:	cmp	r0, #5
   131ac:	bne	132a8 <__assert_fail@plt+0x21c0>
   131b0:	ldr	r0, [sp, #32]
   131b4:	ldrb	r1, [r0, #9]
   131b8:	ldrb	r2, [r0, #10]
   131bc:	ldrb	r3, [r0, #11]
   131c0:	ldrb	r0, [r0, #12]
   131c4:	movw	ip, #24301	; 0x5eed
   131c8:	movt	ip, #9
   131cc:	mul	r1, r1, ip
   131d0:	movw	ip, #7225	; 0x1c39
   131d4:	smlabb	r1, r2, ip, r1
   131d8:	mov	r2, #85	; 0x55
   131dc:	smlabb	r1, r3, r2, r1
   131e0:	add	r0, r1, r0
   131e4:	mov	r1, #0
   131e8:	str	r1, [sp, #12]
   131ec:	str	r0, [sp, #8]
   131f0:	ldr	r0, [sp, #32]
   131f4:	ldrb	r0, [r0, #8]
   131f8:	ldr	r1, [sp, #8]
   131fc:	ldr	r2, [sp, #12]
   13200:	movw	r3, #33969	; 0x84b1
   13204:	movt	r3, #796	; 0x31c
   13208:	umlal	r1, r2, r0, r3
   1320c:	str	r2, [sp, #12]
   13210:	str	r1, [sp, #8]
   13214:	ldr	r0, [sp, #12]
   13218:	lsl	r1, r0, #8
   1321c:	orr	r0, r1, r0, asr #24
   13220:	cmp	r0, #0
   13224:	beq	1323c <__assert_fail@plt+0x2154>
   13228:	b	1322c <__assert_fail@plt+0x2144>
   1322c:	movw	r0, #0
   13230:	and	r0, r0, #1
   13234:	strb	r0, [sp, #39]	; 0x27
   13238:	b	132c8 <__assert_fail@plt+0x21e0>
   1323c:	ldrb	r0, [sp, #11]
   13240:	ldr	r1, [sp, #20]
   13244:	add	r2, r1, #1
   13248:	str	r2, [sp, #20]
   1324c:	strb	r0, [r1]
   13250:	ldrb	r0, [sp, #10]
   13254:	ldr	r1, [sp, #20]
   13258:	add	r2, r1, #1
   1325c:	str	r2, [sp, #20]
   13260:	strb	r0, [r1]
   13264:	ldrb	r0, [sp, #9]
   13268:	ldr	r1, [sp, #20]
   1326c:	add	r2, r1, #1
   13270:	str	r2, [sp, #20]
   13274:	strb	r0, [r1]
   13278:	ldrb	r0, [sp, #8]
   1327c:	ldr	r1, [sp, #20]
   13280:	add	r2, r1, #1
   13284:	str	r2, [sp, #20]
   13288:	strb	r0, [r1]
   1328c:	ldr	r0, [sp, #40]	; 0x28
   13290:	ldr	r1, [r0]
   13294:	add	r1, r1, #4
   13298:	str	r1, [r0]
   1329c:	ldr	r0, [sp, #32]
   132a0:	movw	r1, #0
   132a4:	str	r1, [r0, #4]
   132a8:	b	130b0 <__assert_fail@plt+0x1fc8>
   132ac:	ldr	r0, [sp, #32]
   132b0:	ldr	r0, [r0, #4]
   132b4:	ldr	r1, [sp, #32]
   132b8:	str	r0, [r1]
   132bc:	movw	r0, #1
   132c0:	and	r0, r0, #1
   132c4:	strb	r0, [sp, #39]	; 0x27
   132c8:	ldrb	r0, [sp, #39]	; 0x27
   132cc:	and	r0, r0, #1
   132d0:	add	sp, sp, #40	; 0x28
   132d4:	bx	lr
   132d8:	push	{fp, lr}
   132dc:	mov	fp, sp
   132e0:	sub	sp, sp, #144	; 0x90
   132e4:	str	r0, [fp, #-4]
   132e8:	str	r1, [fp, #-8]
   132ec:	str	r2, [fp, #-12]
   132f0:	and	r0, r3, #1
   132f4:	strb	r0, [fp, #-13]
   132f8:	movw	r0, #16736	; 0x4160
   132fc:	movt	r0, #3
   13300:	ldr	r0, [r0]
   13304:	movw	r1, #4200	; 0x1068
   13308:	str	r0, [sp, #68]	; 0x44
   1330c:	mov	r0, r1
   13310:	ldr	r1, [sp, #68]	; 0x44
   13314:	blx	r1
   13318:	bl	1c6a0 <__assert_fail@plt+0xb5b8>
   1331c:	str	r0, [fp, #-20]	; 0xffffffec
   13320:	movw	r0, #4200	; 0x1068
   13324:	bl	1c6a0 <__assert_fail@plt+0xb5b8>
   13328:	str	r0, [fp, #-24]	; 0xffffffe8
   1332c:	movw	r0, #0
   13330:	str	r0, [fp, #-36]	; 0xffffffdc
   13334:	movw	r0, #16748	; 0x416c
   13338:	movt	r0, #3
   1333c:	ldr	r0, [r0]
   13340:	sub	r1, fp, #52	; 0x34
   13344:	str	r0, [sp, #64]	; 0x40
   13348:	mov	r0, r1
   1334c:	ldr	r1, [sp, #64]	; 0x40
   13350:	blx	r1
   13354:	movw	r0, #0
   13358:	str	r0, [fp, #-28]	; 0xffffffe4
   1335c:	ldr	r0, [fp, #-20]	; 0xffffffec
   13360:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13364:	add	r0, r0, r1
   13368:	movw	r1, #16736	; 0x4160
   1336c:	movt	r1, #3
   13370:	ldr	r1, [r1]
   13374:	movw	r2, #4200	; 0x1068
   13378:	str	r0, [sp, #60]	; 0x3c
   1337c:	mov	r0, r2
   13380:	blx	r1
   13384:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13388:	sub	r2, r0, r1
   1338c:	ldr	r3, [fp, #-4]
   13390:	ldr	r0, [sp, #60]	; 0x3c
   13394:	movw	r1, #1
   13398:	bl	110ac <fread_unlocked@plt>
   1339c:	str	r0, [fp, #-60]	; 0xffffffc4
   133a0:	ldrb	r0, [fp, #-13]
   133a4:	tst	r0, #1
   133a8:	beq	134a8 <__assert_fail@plt+0x23c0>
   133ac:	movw	r0, #0
   133b0:	str	r0, [fp, #-64]	; 0xffffffc0
   133b4:	ldr	r0, [fp, #-60]	; 0xffffffc4
   133b8:	cmp	r0, #0
   133bc:	movw	r0, #0
   133c0:	str	r0, [sp, #56]	; 0x38
   133c4:	ble	133e0 <__assert_fail@plt+0x22f8>
   133c8:	ldr	r0, [fp, #-64]	; 0xffffffc0
   133cc:	ldr	r1, [fp, #-60]	; 0xffffffc4
   133d0:	cmp	r0, r1
   133d4:	movw	r0, #0
   133d8:	movlt	r0, #1
   133dc:	str	r0, [sp, #56]	; 0x38
   133e0:	ldr	r0, [sp, #56]	; 0x38
   133e4:	tst	r0, #1
   133e8:	beq	134a4 <__assert_fail@plt+0x23bc>
   133ec:	movw	r0, #16740	; 0x4164
   133f0:	movt	r0, #3
   133f4:	ldr	r0, [r0]
   133f8:	ldr	r1, [fp, #-20]	; 0xffffffec
   133fc:	ldr	r2, [fp, #-28]	; 0xffffffe4
   13400:	ldr	r3, [fp, #-64]	; 0xffffffc0
   13404:	add	r2, r2, r3
   13408:	add	r1, r1, r2
   1340c:	ldrb	r1, [r1]
   13410:	str	r0, [sp, #52]	; 0x34
   13414:	mov	r0, r1
   13418:	ldr	r1, [sp, #52]	; 0x34
   1341c:	blx	r1
   13420:	tst	r0, #1
   13424:	bne	13448 <__assert_fail@plt+0x2360>
   13428:	ldr	r0, [fp, #-20]	; 0xffffffec
   1342c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13430:	ldr	r2, [fp, #-64]	; 0xffffffc0
   13434:	add	r1, r1, r2
   13438:	add	r0, r0, r1
   1343c:	ldrb	r0, [r0]
   13440:	cmp	r0, #61	; 0x3d
   13444:	bne	13458 <__assert_fail@plt+0x2370>
   13448:	ldr	r0, [fp, #-64]	; 0xffffffc0
   1344c:	add	r0, r0, #1
   13450:	str	r0, [fp, #-64]	; 0xffffffc0
   13454:	b	134a0 <__assert_fail@plt+0x23b8>
   13458:	ldr	r0, [fp, #-20]	; 0xffffffec
   1345c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13460:	add	r0, r0, r1
   13464:	ldr	r1, [fp, #-64]	; 0xffffffc0
   13468:	add	r0, r0, r1
   1346c:	ldr	r1, [fp, #-20]	; 0xffffffec
   13470:	ldr	r2, [fp, #-28]	; 0xffffffe4
   13474:	add	r1, r1, r2
   13478:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1347c:	add	r1, r1, r2
   13480:	add	r1, r1, #1
   13484:	ldr	r2, [fp, #-60]	; 0xffffffc4
   13488:	mvn	r3, #0
   1348c:	add	r2, r2, r3
   13490:	str	r2, [fp, #-60]	; 0xffffffc4
   13494:	ldr	r3, [fp, #-64]	; 0xffffffc0
   13498:	sub	r2, r2, r3
   1349c:	bl	10ec0 <memmove@plt>
   134a0:	b	133b4 <__assert_fail@plt+0x22cc>
   134a4:	b	134a8 <__assert_fail@plt+0x23c0>
   134a8:	ldr	r0, [fp, #-60]	; 0xffffffc4
   134ac:	ldr	r1, [fp, #-28]	; 0xffffffe4
   134b0:	add	r0, r1, r0
   134b4:	str	r0, [fp, #-28]	; 0xffffffe4
   134b8:	ldr	r0, [fp, #-4]
   134bc:	bl	10f68 <ferror_unlocked@plt>
   134c0:	cmp	r0, #0
   134c4:	beq	134f8 <__assert_fail@plt+0x2410>
   134c8:	bl	11010 <__errno_location@plt>
   134cc:	ldr	r1, [r0]
   134d0:	movw	r0, #10857	; 0x2a69
   134d4:	movt	r0, #2
   134d8:	str	r1, [sp, #48]	; 0x30
   134dc:	bl	10fe0 <gettext@plt>
   134e0:	movw	r1, #1
   134e4:	str	r0, [sp, #44]	; 0x2c
   134e8:	mov	r0, r1
   134ec:	ldr	r1, [sp, #48]	; 0x30
   134f0:	ldr	r2, [sp, #44]	; 0x2c
   134f4:	bl	10f80 <error@plt>
   134f8:	b	134fc <__assert_fail@plt+0x2414>
   134fc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   13500:	movw	r1, #16736	; 0x4160
   13504:	movt	r1, #3
   13508:	ldr	r1, [r1]
   1350c:	movw	r2, #4200	; 0x1068
   13510:	str	r0, [sp, #40]	; 0x28
   13514:	mov	r0, r2
   13518:	blx	r1
   1351c:	ldr	r1, [sp, #40]	; 0x28
   13520:	cmp	r1, r0
   13524:	movw	r0, #0
   13528:	str	r0, [sp, #36]	; 0x24
   1352c:	bge	13550 <__assert_fail@plt+0x2468>
   13530:	ldr	r0, [fp, #-4]
   13534:	bl	110dc <feof_unlocked@plt>
   13538:	cmp	r0, #0
   1353c:	movw	r0, #0
   13540:	movne	r0, #1
   13544:	mvn	lr, #0
   13548:	eor	r0, r0, lr
   1354c:	str	r0, [sp, #36]	; 0x24
   13550:	ldr	r0, [sp, #36]	; 0x24
   13554:	tst	r0, #1
   13558:	bne	1335c <__assert_fail@plt+0x2274>
   1355c:	movw	r0, #0
   13560:	str	r0, [fp, #-68]	; 0xffffffbc
   13564:	ldr	r0, [fp, #-68]	; 0xffffffbc
   13568:	ldr	r1, [fp, #-4]
   1356c:	str	r0, [sp, #32]
   13570:	mov	r0, r1
   13574:	bl	110dc <feof_unlocked@plt>
   13578:	cmp	r0, #0
   1357c:	movw	r0, #0
   13580:	movne	r0, #1
   13584:	mvn	r1, #0
   13588:	eor	r0, r0, r1
   1358c:	eor	r0, r0, r1
   13590:	and	r0, r0, #1
   13594:	add	r0, r0, #1
   13598:	ldr	r1, [sp, #32]
   1359c:	cmp	r1, r0
   135a0:	bge	136cc <__assert_fail@plt+0x25e4>
   135a4:	ldr	r0, [fp, #-68]	; 0xffffffbc
   135a8:	cmp	r0, #1
   135ac:	bne	135c0 <__assert_fail@plt+0x24d8>
   135b0:	ldr	r0, [fp, #-52]	; 0xffffffcc
   135b4:	cmp	r0, #0
   135b8:	bne	135c0 <__assert_fail@plt+0x24d8>
   135bc:	b	136cc <__assert_fail@plt+0x25e4>
   135c0:	movw	r0, #4200	; 0x1068
   135c4:	str	r0, [sp, #72]	; 0x48
   135c8:	movw	r0, #16752	; 0x4170
   135cc:	movt	r0, #3
   135d0:	ldr	r0, [r0]
   135d4:	ldr	r1, [fp, #-20]	; 0xffffffec
   135d8:	ldr	r2, [fp, #-68]	; 0xffffffbc
   135dc:	cmp	r2, #0
   135e0:	str	r0, [sp, #28]
   135e4:	str	r1, [sp, #24]
   135e8:	bne	135f8 <__assert_fail@plt+0x2510>
   135ec:	ldr	r0, [fp, #-28]	; 0xffffffe4
   135f0:	str	r0, [sp, #20]
   135f4:	b	13604 <__assert_fail@plt+0x251c>
   135f8:	movw	r0, #0
   135fc:	str	r0, [sp, #20]
   13600:	b	13604 <__assert_fail@plt+0x251c>
   13604:	ldr	r0, [sp, #20]
   13608:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1360c:	sub	r1, fp, #52	; 0x34
   13610:	str	r0, [sp, #16]
   13614:	mov	r0, r1
   13618:	ldr	r1, [sp, #24]
   1361c:	ldr	r2, [sp, #16]
   13620:	add	ip, sp, #72	; 0x48
   13624:	str	ip, [sp]
   13628:	ldr	ip, [sp, #28]
   1362c:	blx	ip
   13630:	and	r0, r0, #1
   13634:	strb	r0, [fp, #-53]	; 0xffffffcb
   13638:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1363c:	ldr	r2, [sp, #72]	; 0x48
   13640:	ldr	r3, [fp, #-12]
   13644:	movw	r1, #1
   13648:	bl	10efc <fwrite_unlocked@plt>
   1364c:	ldr	r1, [sp, #72]	; 0x48
   13650:	cmp	r0, r1
   13654:	bcs	13688 <__assert_fail@plt+0x25a0>
   13658:	bl	11010 <__errno_location@plt>
   1365c:	ldr	r1, [r0]
   13660:	movw	r0, #10868	; 0x2a74
   13664:	movt	r0, #2
   13668:	str	r1, [sp, #12]
   1366c:	bl	10fe0 <gettext@plt>
   13670:	movw	r1, #1
   13674:	str	r0, [sp, #8]
   13678:	mov	r0, r1
   1367c:	ldr	r1, [sp, #12]
   13680:	ldr	r2, [sp, #8]
   13684:	bl	10f80 <error@plt>
   13688:	ldrb	r0, [fp, #-53]	; 0xffffffcb
   1368c:	tst	r0, #1
   13690:	bne	136b8 <__assert_fail@plt+0x25d0>
   13694:	movw	r0, #10880	; 0x2a80
   13698:	movt	r0, #2
   1369c:	bl	10fe0 <gettext@plt>
   136a0:	movw	lr, #1
   136a4:	str	r0, [sp, #4]
   136a8:	mov	r0, lr
   136ac:	movw	r1, #0
   136b0:	ldr	r2, [sp, #4]
   136b4:	bl	10f80 <error@plt>
   136b8:	b	136bc <__assert_fail@plt+0x25d4>
   136bc:	ldr	r0, [fp, #-68]	; 0xffffffbc
   136c0:	add	r0, r0, #1
   136c4:	str	r0, [fp, #-68]	; 0xffffffbc
   136c8:	b	13564 <__assert_fail@plt+0x247c>
   136cc:	b	136d0 <__assert_fail@plt+0x25e8>
   136d0:	ldr	r0, [fp, #-4]
   136d4:	bl	110dc <feof_unlocked@plt>
   136d8:	cmp	r0, #0
   136dc:	movw	r0, #0
   136e0:	movne	r0, #1
   136e4:	mvn	lr, #0
   136e8:	eor	r0, r0, lr
   136ec:	tst	r0, #1
   136f0:	bne	13354 <__assert_fail@plt+0x226c>
   136f4:	ldr	r0, [fp, #-4]
   136f8:	ldr	r1, [fp, #-8]
   136fc:	bl	13a48 <__assert_fail@plt+0x2960>
   13700:	mov	sp, fp
   13704:	pop	{fp, pc}
   13708:	push	{fp, lr}
   1370c:	mov	fp, sp
   13710:	sub	sp, sp, #104	; 0x68
   13714:	str	r0, [fp, #-4]
   13718:	str	r1, [fp, #-8]
   1371c:	str	r2, [fp, #-12]
   13720:	str	r3, [fp, #-16]
   13724:	movw	r0, #0
   13728:	str	r0, [fp, #-20]	; 0xffffffec
   1372c:	movw	r0, #30720	; 0x7800
   13730:	bl	1c6a0 <__assert_fail@plt+0xb5b8>
   13734:	str	r0, [fp, #-24]	; 0xffffffe8
   13738:	movw	r0, #16736	; 0x4160
   1373c:	movt	r0, #3
   13740:	ldr	r0, [r0]
   13744:	movw	r1, #30720	; 0x7800
   13748:	str	r0, [fp, #-40]	; 0xffffffd8
   1374c:	mov	r0, r1
   13750:	ldr	r1, [fp, #-40]	; 0xffffffd8
   13754:	blx	r1
   13758:	bl	1c6a0 <__assert_fail@plt+0xb5b8>
   1375c:	str	r0, [fp, #-28]	; 0xffffffe4
   13760:	movw	r0, #0
   13764:	str	r0, [fp, #-32]	; 0xffffffe0
   13768:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1376c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   13770:	add	r0, r0, r1
   13774:	ldr	r1, [fp, #-32]	; 0xffffffe0
   13778:	movw	r2, #30720	; 0x7800
   1377c:	sub	r2, r2, r1
   13780:	ldr	r3, [fp, #-4]
   13784:	movw	r1, #1
   13788:	bl	110ac <fread_unlocked@plt>
   1378c:	str	r0, [fp, #-36]	; 0xffffffdc
   13790:	ldr	r0, [fp, #-36]	; 0xffffffdc
   13794:	ldr	r1, [fp, #-32]	; 0xffffffe0
   13798:	add	r0, r1, r0
   1379c:	str	r0, [fp, #-32]	; 0xffffffe0
   137a0:	ldr	r0, [fp, #-4]
   137a4:	bl	110dc <feof_unlocked@plt>
   137a8:	cmp	r0, #0
   137ac:	movw	r0, #0
   137b0:	str	r0, [fp, #-44]	; 0xffffffd4
   137b4:	bne	137e4 <__assert_fail@plt+0x26fc>
   137b8:	ldr	r0, [fp, #-4]
   137bc:	bl	10f68 <ferror_unlocked@plt>
   137c0:	cmp	r0, #0
   137c4:	movw	r0, #0
   137c8:	str	r0, [fp, #-44]	; 0xffffffd4
   137cc:	bne	137e4 <__assert_fail@plt+0x26fc>
   137d0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   137d4:	cmp	r0, #30720	; 0x7800
   137d8:	movw	r0, #0
   137dc:	movlt	r0, #1
   137e0:	str	r0, [fp, #-44]	; 0xffffffd4
   137e4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   137e8:	tst	r0, #1
   137ec:	bne	13768 <__assert_fail@plt+0x2680>
   137f0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   137f4:	cmp	r0, #0
   137f8:	ble	138ac <__assert_fail@plt+0x27c4>
   137fc:	movw	r0, #16744	; 0x4168
   13800:	movt	r0, #3
   13804:	ldr	r0, [r0]
   13808:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1380c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   13810:	ldr	r3, [fp, #-28]	; 0xffffffe4
   13814:	movw	ip, #16736	; 0x4160
   13818:	movt	ip, #3
   1381c:	ldr	ip, [ip]
   13820:	ldr	lr, [fp, #-32]	; 0xffffffe0
   13824:	str	r0, [fp, #-48]	; 0xffffffd0
   13828:	mov	r0, lr
   1382c:	str	r3, [sp, #52]	; 0x34
   13830:	str	r1, [sp, #48]	; 0x30
   13834:	str	r2, [sp, #44]	; 0x2c
   13838:	blx	ip
   1383c:	ldr	r1, [sp, #48]	; 0x30
   13840:	str	r0, [sp, #40]	; 0x28
   13844:	mov	r0, r1
   13848:	ldr	r1, [sp, #44]	; 0x2c
   1384c:	ldr	r2, [sp, #52]	; 0x34
   13850:	ldr	r3, [sp, #40]	; 0x28
   13854:	ldr	ip, [fp, #-48]	; 0xffffffd0
   13858:	blx	ip
   1385c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   13860:	movw	r1, #16736	; 0x4160
   13864:	movt	r1, #3
   13868:	ldr	r1, [r1]
   1386c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   13870:	str	r0, [sp, #36]	; 0x24
   13874:	mov	r0, r2
   13878:	blx	r1
   1387c:	ldr	r2, [fp, #-16]
   13880:	ldr	r1, [fp, #-12]
   13884:	ldr	r3, [sp, #36]	; 0x24
   13888:	str	r0, [sp, #32]
   1388c:	mov	r0, r3
   13890:	ldr	ip, [sp, #32]
   13894:	str	r1, [sp, #28]
   13898:	mov	r1, ip
   1389c:	sub	r3, fp, #20
   138a0:	ldr	lr, [sp, #28]
   138a4:	str	lr, [sp]
   138a8:	bl	13afc <__assert_fail@plt+0x2a14>
   138ac:	b	138b0 <__assert_fail@plt+0x27c8>
   138b0:	ldr	r0, [fp, #-4]
   138b4:	bl	110dc <feof_unlocked@plt>
   138b8:	cmp	r0, #0
   138bc:	movw	r0, #0
   138c0:	str	r0, [sp, #24]
   138c4:	bne	138f4 <__assert_fail@plt+0x280c>
   138c8:	ldr	r0, [fp, #-4]
   138cc:	bl	10f68 <ferror_unlocked@plt>
   138d0:	cmp	r0, #0
   138d4:	movw	r0, #0
   138d8:	str	r0, [sp, #24]
   138dc:	bne	138f4 <__assert_fail@plt+0x280c>
   138e0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   138e4:	cmp	r0, #30720	; 0x7800
   138e8:	movw	r0, #0
   138ec:	moveq	r0, #1
   138f0:	str	r0, [sp, #24]
   138f4:	ldr	r0, [sp, #24]
   138f8:	tst	r0, #1
   138fc:	bne	13760 <__assert_fail@plt+0x2678>
   13900:	ldr	r0, [fp, #-16]
   13904:	cmp	r0, #0
   13908:	beq	1395c <__assert_fail@plt+0x2874>
   1390c:	ldr	r0, [fp, #-20]	; 0xffffffec
   13910:	cmp	r0, #0
   13914:	ble	1395c <__assert_fail@plt+0x2874>
   13918:	ldr	r1, [fp, #-12]
   1391c:	movw	r0, #10
   13920:	bl	10f14 <fputc_unlocked@plt>
   13924:	cmn	r0, #1
   13928:	bne	1395c <__assert_fail@plt+0x2874>
   1392c:	bl	11010 <__errno_location@plt>
   13930:	ldr	r1, [r0]
   13934:	movw	r0, #10868	; 0x2a74
   13938:	movt	r0, #2
   1393c:	str	r1, [sp, #20]
   13940:	bl	10fe0 <gettext@plt>
   13944:	movw	r1, #1
   13948:	str	r0, [sp, #16]
   1394c:	mov	r0, r1
   13950:	ldr	r1, [sp, #20]
   13954:	ldr	r2, [sp, #16]
   13958:	bl	10f80 <error@plt>
   1395c:	ldr	r0, [fp, #-4]
   13960:	bl	10f68 <ferror_unlocked@plt>
   13964:	cmp	r0, #0
   13968:	beq	1399c <__assert_fail@plt+0x28b4>
   1396c:	bl	11010 <__errno_location@plt>
   13970:	ldr	r1, [r0]
   13974:	movw	r0, #10857	; 0x2a69
   13978:	movt	r0, #2
   1397c:	str	r1, [sp, #12]
   13980:	bl	10fe0 <gettext@plt>
   13984:	movw	r1, #1
   13988:	str	r0, [sp, #8]
   1398c:	mov	r0, r1
   13990:	ldr	r1, [sp, #12]
   13994:	ldr	r2, [sp, #8]
   13998:	bl	10f80 <error@plt>
   1399c:	ldr	r0, [fp, #-4]
   139a0:	ldr	r1, [fp, #-8]
   139a4:	bl	13a48 <__assert_fail@plt+0x2960>
   139a8:	mov	sp, fp
   139ac:	pop	{fp, pc}
   139b0:	push	{fp, lr}
   139b4:	mov	fp, sp
   139b8:	sub	sp, sp, #8
   139bc:	str	r0, [sp, #4]
   139c0:	ldr	r0, [sp, #4]
   139c4:	movw	r1, #4200	; 0x1068
   139c8:	str	r1, [r0, #20]
   139cc:	ldr	r0, [sp, #4]
   139d0:	ldr	r0, [r0, #20]
   139d4:	bl	1c718 <__assert_fail@plt+0xb630>
   139d8:	ldr	r1, [sp, #4]
   139dc:	str	r0, [r1, #16]
   139e0:	mov	sp, fp
   139e4:	pop	{fp, pc}
   139e8:	push	{fp, lr}
   139ec:	mov	fp, sp
   139f0:	sub	sp, sp, #8
   139f4:	str	r0, [sp, #4]
   139f8:	str	r1, [sp]
   139fc:	ldr	r0, [sp, #4]
   13a00:	ldr	r0, [r0, #20]
   13a04:	ldr	r1, [sp]
   13a08:	cmp	r0, r1
   13a0c:	bge	13a40 <__assert_fail@plt+0x2958>
   13a10:	ldr	r0, [sp]
   13a14:	lsl	r0, r0, #1
   13a18:	ldr	r1, [sp, #4]
   13a1c:	str	r0, [r1, #20]
   13a20:	ldr	r0, [sp, #4]
   13a24:	ldr	r0, [r0, #16]
   13a28:	ldr	r1, [sp, #4]
   13a2c:	ldr	r1, [r1, #20]
   13a30:	movw	r2, #1
   13a34:	bl	1c5fc <__assert_fail@plt+0xb514>
   13a38:	ldr	r1, [sp, #4]
   13a3c:	str	r0, [r1, #16]
   13a40:	mov	sp, fp
   13a44:	pop	{fp, pc}
   13a48:	push	{fp, lr}
   13a4c:	mov	fp, sp
   13a50:	sub	sp, sp, #24
   13a54:	str	r0, [fp, #-4]
   13a58:	str	r1, [fp, #-8]
   13a5c:	ldr	r0, [fp, #-4]
   13a60:	bl	17dac <__assert_fail@plt+0x6cc4>
   13a64:	cmp	r0, #0
   13a68:	beq	13af4 <__assert_fail@plt+0x2a0c>
   13a6c:	ldr	r0, [fp, #-8]
   13a70:	movw	r1, #12165	; 0x2f85
   13a74:	movt	r1, #2
   13a78:	bl	10e90 <strcmp@plt>
   13a7c:	cmp	r0, #0
   13a80:	bne	13ab4 <__assert_fail@plt+0x29cc>
   13a84:	bl	11010 <__errno_location@plt>
   13a88:	ldr	r1, [r0]
   13a8c:	movw	r0, #10894	; 0x2a8e
   13a90:	movt	r0, #2
   13a94:	str	r1, [sp, #12]
   13a98:	bl	10fe0 <gettext@plt>
   13a9c:	movw	r1, #1
   13aa0:	str	r0, [sp, #8]
   13aa4:	mov	r0, r1
   13aa8:	ldr	r1, [sp, #12]
   13aac:	ldr	r2, [sp, #8]
   13ab0:	bl	10f80 <error@plt>
   13ab4:	bl	11010 <__errno_location@plt>
   13ab8:	ldr	r1, [r0]
   13abc:	ldr	r2, [fp, #-8]
   13ac0:	movw	r0, #0
   13ac4:	movw	lr, #3
   13ac8:	str	r1, [sp, #4]
   13acc:	mov	r1, lr
   13ad0:	bl	1a680 <__assert_fail@plt+0x9598>
   13ad4:	movw	r1, #1
   13ad8:	str	r0, [sp]
   13adc:	mov	r0, r1
   13ae0:	ldr	r1, [sp, #4]
   13ae4:	movw	r2, #10012	; 0x271c
   13ae8:	movt	r2, #2
   13aec:	ldr	r3, [sp]
   13af0:	bl	10f80 <error@plt>
   13af4:	movw	r0, #0
   13af8:	bl	10fd4 <exit@plt>
   13afc:	push	{fp, lr}
   13b00:	mov	fp, sp
   13b04:	sub	sp, sp, #56	; 0x38
   13b08:	ldr	ip, [fp, #8]
   13b0c:	str	r0, [fp, #-4]
   13b10:	str	r1, [fp, #-8]
   13b14:	str	r2, [fp, #-12]
   13b18:	str	r3, [fp, #-16]
   13b1c:	ldr	r0, [fp, #-12]
   13b20:	cmp	r0, #0
   13b24:	str	ip, [sp, #28]
   13b28:	bne	13b88 <__assert_fail@plt+0x2aa0>
   13b2c:	ldr	r0, [fp, #-4]
   13b30:	ldr	r2, [fp, #-8]
   13b34:	movw	r1, #16724	; 0x4154
   13b38:	movt	r1, #3
   13b3c:	ldr	r3, [r1]
   13b40:	movw	r1, #1
   13b44:	bl	10efc <fwrite_unlocked@plt>
   13b48:	ldr	r1, [fp, #-8]
   13b4c:	cmp	r0, r1
   13b50:	bcs	13b84 <__assert_fail@plt+0x2a9c>
   13b54:	bl	11010 <__errno_location@plt>
   13b58:	ldr	r1, [r0]
   13b5c:	movw	r0, #10868	; 0x2a74
   13b60:	movt	r0, #2
   13b64:	str	r1, [sp, #24]
   13b68:	bl	10fe0 <gettext@plt>
   13b6c:	movw	r1, #1
   13b70:	str	r0, [sp, #20]
   13b74:	mov	r0, r1
   13b78:	ldr	r1, [sp, #24]
   13b7c:	ldr	r2, [sp, #20]
   13b80:	bl	10f80 <error@plt>
   13b84:	b	13ce0 <__assert_fail@plt+0x2bf8>
   13b88:	movw	r0, #0
   13b8c:	str	r0, [fp, #-20]	; 0xffffffec
   13b90:	ldr	r0, [fp, #-20]	; 0xffffffec
   13b94:	ldr	r1, [fp, #-8]
   13b98:	cmp	r0, r1
   13b9c:	bge	13cdc <__assert_fail@plt+0x2bf4>
   13ba0:	ldr	r0, [fp, #-12]
   13ba4:	ldr	r1, [fp, #-16]
   13ba8:	ldr	r1, [r1]
   13bac:	sub	r0, r0, r1
   13bb0:	ldr	r1, [fp, #-8]
   13bb4:	ldr	r2, [fp, #-20]	; 0xffffffec
   13bb8:	sub	r1, r1, r2
   13bbc:	cmp	r0, r1
   13bc0:	bge	13bdc <__assert_fail@plt+0x2af4>
   13bc4:	ldr	r0, [fp, #-12]
   13bc8:	ldr	r1, [fp, #-16]
   13bcc:	ldr	r1, [r1]
   13bd0:	sub	r0, r0, r1
   13bd4:	str	r0, [sp, #16]
   13bd8:	b	13bec <__assert_fail@plt+0x2b04>
   13bdc:	ldr	r0, [fp, #-8]
   13be0:	ldr	r1, [fp, #-20]	; 0xffffffec
   13be4:	sub	r0, r0, r1
   13be8:	str	r0, [sp, #16]
   13bec:	ldr	r0, [sp, #16]
   13bf0:	str	r0, [fp, #-24]	; 0xffffffe8
   13bf4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13bf8:	cmp	r0, #0
   13bfc:	bne	13c54 <__assert_fail@plt+0x2b6c>
   13c00:	ldr	r1, [fp, #8]
   13c04:	movw	r0, #10
   13c08:	bl	10f14 <fputc_unlocked@plt>
   13c0c:	cmn	r0, #1
   13c10:	bne	13c44 <__assert_fail@plt+0x2b5c>
   13c14:	bl	11010 <__errno_location@plt>
   13c18:	ldr	r1, [r0]
   13c1c:	movw	r0, #10868	; 0x2a74
   13c20:	movt	r0, #2
   13c24:	str	r1, [sp, #12]
   13c28:	bl	10fe0 <gettext@plt>
   13c2c:	movw	r1, #1
   13c30:	str	r0, [sp, #8]
   13c34:	mov	r0, r1
   13c38:	ldr	r1, [sp, #12]
   13c3c:	ldr	r2, [sp, #8]
   13c40:	bl	10f80 <error@plt>
   13c44:	ldr	r0, [fp, #-16]
   13c48:	movw	r1, #0
   13c4c:	str	r1, [r0]
   13c50:	b	13cd8 <__assert_fail@plt+0x2bf0>
   13c54:	ldr	r0, [fp, #-4]
   13c58:	ldr	r1, [fp, #-20]	; 0xffffffec
   13c5c:	add	r0, r0, r1
   13c60:	ldr	r2, [fp, #-24]	; 0xffffffe8
   13c64:	movw	r1, #16724	; 0x4154
   13c68:	movt	r1, #3
   13c6c:	ldr	r3, [r1]
   13c70:	movw	r1, #1
   13c74:	bl	10efc <fwrite_unlocked@plt>
   13c78:	ldr	r1, [fp, #-24]	; 0xffffffe8
   13c7c:	cmp	r0, r1
   13c80:	bcs	13cb4 <__assert_fail@plt+0x2bcc>
   13c84:	bl	11010 <__errno_location@plt>
   13c88:	ldr	r1, [r0]
   13c8c:	movw	r0, #10868	; 0x2a74
   13c90:	movt	r0, #2
   13c94:	str	r1, [sp, #4]
   13c98:	bl	10fe0 <gettext@plt>
   13c9c:	movw	r1, #1
   13ca0:	str	r0, [sp]
   13ca4:	mov	r0, r1
   13ca8:	ldr	r1, [sp, #4]
   13cac:	ldr	r2, [sp]
   13cb0:	bl	10f80 <error@plt>
   13cb4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13cb8:	ldr	r1, [fp, #-16]
   13cbc:	ldr	r2, [r1]
   13cc0:	add	r0, r2, r0
   13cc4:	str	r0, [r1]
   13cc8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13ccc:	ldr	r1, [fp, #-20]	; 0xffffffec
   13cd0:	add	r0, r1, r0
   13cd4:	str	r0, [fp, #-20]	; 0xffffffec
   13cd8:	b	13b90 <__assert_fail@plt+0x2aa8>
   13cdc:	b	13ce0 <__assert_fail@plt+0x2bf8>
   13ce0:	mov	sp, fp
   13ce4:	pop	{fp, pc}
   13ce8:	push	{fp, lr}
   13cec:	mov	fp, sp
   13cf0:	sub	sp, sp, #80	; 0x50
   13cf4:	str	r0, [fp, #-4]
   13cf8:	str	r1, [fp, #-8]
   13cfc:	str	r2, [fp, #-12]
   13d00:	str	r3, [fp, #-16]
   13d04:	ldr	r0, [fp, #-8]
   13d08:	cmp	r0, #0
   13d0c:	movw	r0, #0
   13d10:	str	r0, [fp, #-20]	; 0xffffffec
   13d14:	beq	13d2c <__assert_fail@plt+0x2c44>
   13d18:	ldr	r0, [fp, #-16]
   13d1c:	cmp	r0, #0
   13d20:	movw	r0, #0
   13d24:	movne	r0, #1
   13d28:	str	r0, [fp, #-20]	; 0xffffffec
   13d2c:	ldr	r0, [fp, #-20]	; 0xffffffec
   13d30:	tst	r0, #1
   13d34:	beq	14224 <__assert_fail@plt+0x313c>
   13d38:	ldr	r0, [fp, #-4]
   13d3c:	ldrb	r0, [r0]
   13d40:	bl	14244 <__assert_fail@plt+0x315c>
   13d44:	and	r0, r0, #255	; 0xff
   13d48:	asr	r0, r0, #3
   13d4c:	and	r0, r0, #31
   13d50:	movw	lr, #11491	; 0x2ce3
   13d54:	movt	lr, #2
   13d58:	add	r0, lr, r0
   13d5c:	ldrb	r0, [r0]
   13d60:	ldr	lr, [fp, #-12]
   13d64:	add	r1, lr, #1
   13d68:	str	r1, [fp, #-12]
   13d6c:	strb	r0, [lr]
   13d70:	ldr	r0, [fp, #-16]
   13d74:	mvn	r1, #0
   13d78:	add	r0, r0, r1
   13d7c:	str	r0, [fp, #-16]
   13d80:	cmp	r0, #0
   13d84:	bne	13d8c <__assert_fail@plt+0x2ca4>
   13d88:	b	14224 <__assert_fail@plt+0x313c>
   13d8c:	ldr	r0, [fp, #-4]
   13d90:	ldrb	r0, [r0]
   13d94:	bl	14244 <__assert_fail@plt+0x315c>
   13d98:	and	r0, r0, #255	; 0xff
   13d9c:	lsl	r0, r0, #2
   13da0:	ldr	lr, [fp, #-8]
   13da4:	mvn	r1, #0
   13da8:	add	r1, lr, r1
   13dac:	str	r1, [fp, #-8]
   13db0:	cmp	r1, #0
   13db4:	str	r0, [fp, #-24]	; 0xffffffe8
   13db8:	beq	13dd8 <__assert_fail@plt+0x2cf0>
   13dbc:	ldr	r0, [fp, #-4]
   13dc0:	ldrb	r0, [r0, #1]
   13dc4:	bl	14244 <__assert_fail@plt+0x315c>
   13dc8:	and	r0, r0, #255	; 0xff
   13dcc:	asr	r0, r0, #6
   13dd0:	str	r0, [fp, #-28]	; 0xffffffe4
   13dd4:	b	13de4 <__assert_fail@plt+0x2cfc>
   13dd8:	movw	r0, #0
   13ddc:	str	r0, [fp, #-28]	; 0xffffffe4
   13de0:	b	13de4 <__assert_fail@plt+0x2cfc>
   13de4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   13de8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   13dec:	add	r0, r1, r0
   13df0:	and	r0, r0, #31
   13df4:	movw	r2, #11491	; 0x2ce3
   13df8:	movt	r2, #2
   13dfc:	add	r0, r2, r0
   13e00:	ldrb	r0, [r0]
   13e04:	ldr	r2, [fp, #-12]
   13e08:	add	r3, r2, #1
   13e0c:	str	r3, [fp, #-12]
   13e10:	strb	r0, [r2]
   13e14:	ldr	r0, [fp, #-16]
   13e18:	mvn	r2, #0
   13e1c:	add	r0, r0, r2
   13e20:	str	r0, [fp, #-16]
   13e24:	cmp	r0, #0
   13e28:	bne	13e30 <__assert_fail@plt+0x2d48>
   13e2c:	b	14224 <__assert_fail@plt+0x313c>
   13e30:	ldr	r0, [fp, #-8]
   13e34:	cmp	r0, #0
   13e38:	beq	13e6c <__assert_fail@plt+0x2d84>
   13e3c:	ldr	r0, [fp, #-4]
   13e40:	ldrb	r0, [r0, #1]
   13e44:	bl	14244 <__assert_fail@plt+0x315c>
   13e48:	and	r0, r0, #255	; 0xff
   13e4c:	asr	r0, r0, #1
   13e50:	and	r0, r0, #31
   13e54:	movw	lr, #11491	; 0x2ce3
   13e58:	movt	lr, #2
   13e5c:	add	r0, lr, r0
   13e60:	ldrb	r0, [r0]
   13e64:	str	r0, [fp, #-32]	; 0xffffffe0
   13e68:	b	13e78 <__assert_fail@plt+0x2d90>
   13e6c:	movw	r0, #61	; 0x3d
   13e70:	str	r0, [fp, #-32]	; 0xffffffe0
   13e74:	b	13e78 <__assert_fail@plt+0x2d90>
   13e78:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13e7c:	ldr	r1, [fp, #-12]
   13e80:	add	r2, r1, #1
   13e84:	str	r2, [fp, #-12]
   13e88:	strb	r0, [r1]
   13e8c:	ldr	r0, [fp, #-16]
   13e90:	mvn	r1, #0
   13e94:	add	r0, r0, r1
   13e98:	str	r0, [fp, #-16]
   13e9c:	cmp	r0, #0
   13ea0:	bne	13ea8 <__assert_fail@plt+0x2dc0>
   13ea4:	b	14224 <__assert_fail@plt+0x313c>
   13ea8:	ldr	r0, [fp, #-8]
   13eac:	cmp	r0, #0
   13eb0:	beq	13f34 <__assert_fail@plt+0x2e4c>
   13eb4:	ldr	r0, [fp, #-4]
   13eb8:	ldrb	r0, [r0, #1]
   13ebc:	bl	14244 <__assert_fail@plt+0x315c>
   13ec0:	and	r0, r0, #255	; 0xff
   13ec4:	lsl	r0, r0, #4
   13ec8:	ldr	lr, [fp, #-8]
   13ecc:	mvn	r1, #0
   13ed0:	add	r1, lr, r1
   13ed4:	str	r1, [fp, #-8]
   13ed8:	cmp	r1, #0
   13edc:	str	r0, [fp, #-36]	; 0xffffffdc
   13ee0:	beq	13f00 <__assert_fail@plt+0x2e18>
   13ee4:	ldr	r0, [fp, #-4]
   13ee8:	ldrb	r0, [r0, #2]
   13eec:	bl	14244 <__assert_fail@plt+0x315c>
   13ef0:	and	r0, r0, #255	; 0xff
   13ef4:	asr	r0, r0, #4
   13ef8:	str	r0, [sp, #40]	; 0x28
   13efc:	b	13f0c <__assert_fail@plt+0x2e24>
   13f00:	movw	r0, #0
   13f04:	str	r0, [sp, #40]	; 0x28
   13f08:	b	13f0c <__assert_fail@plt+0x2e24>
   13f0c:	ldr	r0, [sp, #40]	; 0x28
   13f10:	ldr	r1, [fp, #-36]	; 0xffffffdc
   13f14:	add	r0, r1, r0
   13f18:	and	r0, r0, #31
   13f1c:	movw	r2, #11491	; 0x2ce3
   13f20:	movt	r2, #2
   13f24:	add	r0, r2, r0
   13f28:	ldrb	r0, [r0]
   13f2c:	str	r0, [sp, #36]	; 0x24
   13f30:	b	13f40 <__assert_fail@plt+0x2e58>
   13f34:	movw	r0, #61	; 0x3d
   13f38:	str	r0, [sp, #36]	; 0x24
   13f3c:	b	13f40 <__assert_fail@plt+0x2e58>
   13f40:	ldr	r0, [sp, #36]	; 0x24
   13f44:	ldr	r1, [fp, #-12]
   13f48:	add	r2, r1, #1
   13f4c:	str	r2, [fp, #-12]
   13f50:	strb	r0, [r1]
   13f54:	ldr	r0, [fp, #-16]
   13f58:	mvn	r1, #0
   13f5c:	add	r0, r0, r1
   13f60:	str	r0, [fp, #-16]
   13f64:	cmp	r0, #0
   13f68:	bne	13f70 <__assert_fail@plt+0x2e88>
   13f6c:	b	14224 <__assert_fail@plt+0x313c>
   13f70:	ldr	r0, [fp, #-8]
   13f74:	cmp	r0, #0
   13f78:	beq	13ffc <__assert_fail@plt+0x2f14>
   13f7c:	ldr	r0, [fp, #-4]
   13f80:	ldrb	r0, [r0, #2]
   13f84:	bl	14244 <__assert_fail@plt+0x315c>
   13f88:	and	r0, r0, #255	; 0xff
   13f8c:	lsl	r0, r0, #1
   13f90:	ldr	lr, [fp, #-8]
   13f94:	mvn	r1, #0
   13f98:	add	r1, lr, r1
   13f9c:	str	r1, [fp, #-8]
   13fa0:	cmp	r1, #0
   13fa4:	str	r0, [sp, #32]
   13fa8:	beq	13fc8 <__assert_fail@plt+0x2ee0>
   13fac:	ldr	r0, [fp, #-4]
   13fb0:	ldrb	r0, [r0, #3]
   13fb4:	bl	14244 <__assert_fail@plt+0x315c>
   13fb8:	and	r0, r0, #255	; 0xff
   13fbc:	asr	r0, r0, #7
   13fc0:	str	r0, [sp, #28]
   13fc4:	b	13fd4 <__assert_fail@plt+0x2eec>
   13fc8:	movw	r0, #0
   13fcc:	str	r0, [sp, #28]
   13fd0:	b	13fd4 <__assert_fail@plt+0x2eec>
   13fd4:	ldr	r0, [sp, #28]
   13fd8:	ldr	r1, [sp, #32]
   13fdc:	add	r0, r1, r0
   13fe0:	and	r0, r0, #31
   13fe4:	movw	r2, #11491	; 0x2ce3
   13fe8:	movt	r2, #2
   13fec:	add	r0, r2, r0
   13ff0:	ldrb	r0, [r0]
   13ff4:	str	r0, [sp, #24]
   13ff8:	b	14008 <__assert_fail@plt+0x2f20>
   13ffc:	movw	r0, #61	; 0x3d
   14000:	str	r0, [sp, #24]
   14004:	b	14008 <__assert_fail@plt+0x2f20>
   14008:	ldr	r0, [sp, #24]
   1400c:	ldr	r1, [fp, #-12]
   14010:	add	r2, r1, #1
   14014:	str	r2, [fp, #-12]
   14018:	strb	r0, [r1]
   1401c:	ldr	r0, [fp, #-16]
   14020:	mvn	r1, #0
   14024:	add	r0, r0, r1
   14028:	str	r0, [fp, #-16]
   1402c:	cmp	r0, #0
   14030:	bne	14038 <__assert_fail@plt+0x2f50>
   14034:	b	14224 <__assert_fail@plt+0x313c>
   14038:	ldr	r0, [fp, #-8]
   1403c:	cmp	r0, #0
   14040:	beq	14074 <__assert_fail@plt+0x2f8c>
   14044:	ldr	r0, [fp, #-4]
   14048:	ldrb	r0, [r0, #3]
   1404c:	bl	14244 <__assert_fail@plt+0x315c>
   14050:	and	r0, r0, #255	; 0xff
   14054:	asr	r0, r0, #2
   14058:	and	r0, r0, #31
   1405c:	movw	lr, #11491	; 0x2ce3
   14060:	movt	lr, #2
   14064:	add	r0, lr, r0
   14068:	ldrb	r0, [r0]
   1406c:	str	r0, [sp, #20]
   14070:	b	14080 <__assert_fail@plt+0x2f98>
   14074:	movw	r0, #61	; 0x3d
   14078:	str	r0, [sp, #20]
   1407c:	b	14080 <__assert_fail@plt+0x2f98>
   14080:	ldr	r0, [sp, #20]
   14084:	ldr	r1, [fp, #-12]
   14088:	add	r2, r1, #1
   1408c:	str	r2, [fp, #-12]
   14090:	strb	r0, [r1]
   14094:	ldr	r0, [fp, #-16]
   14098:	mvn	r1, #0
   1409c:	add	r0, r0, r1
   140a0:	str	r0, [fp, #-16]
   140a4:	cmp	r0, #0
   140a8:	bne	140b0 <__assert_fail@plt+0x2fc8>
   140ac:	b	14224 <__assert_fail@plt+0x313c>
   140b0:	ldr	r0, [fp, #-8]
   140b4:	cmp	r0, #0
   140b8:	beq	1413c <__assert_fail@plt+0x3054>
   140bc:	ldr	r0, [fp, #-4]
   140c0:	ldrb	r0, [r0, #3]
   140c4:	bl	14244 <__assert_fail@plt+0x315c>
   140c8:	and	r0, r0, #255	; 0xff
   140cc:	lsl	r0, r0, #3
   140d0:	ldr	lr, [fp, #-8]
   140d4:	mvn	r1, #0
   140d8:	add	r1, lr, r1
   140dc:	str	r1, [fp, #-8]
   140e0:	cmp	r1, #0
   140e4:	str	r0, [sp, #16]
   140e8:	beq	14108 <__assert_fail@plt+0x3020>
   140ec:	ldr	r0, [fp, #-4]
   140f0:	ldrb	r0, [r0, #4]
   140f4:	bl	14244 <__assert_fail@plt+0x315c>
   140f8:	and	r0, r0, #255	; 0xff
   140fc:	asr	r0, r0, #5
   14100:	str	r0, [sp, #12]
   14104:	b	14114 <__assert_fail@plt+0x302c>
   14108:	movw	r0, #0
   1410c:	str	r0, [sp, #12]
   14110:	b	14114 <__assert_fail@plt+0x302c>
   14114:	ldr	r0, [sp, #12]
   14118:	ldr	r1, [sp, #16]
   1411c:	add	r0, r1, r0
   14120:	and	r0, r0, #31
   14124:	movw	r2, #11491	; 0x2ce3
   14128:	movt	r2, #2
   1412c:	add	r0, r2, r0
   14130:	ldrb	r0, [r0]
   14134:	str	r0, [sp, #8]
   14138:	b	14148 <__assert_fail@plt+0x3060>
   1413c:	movw	r0, #61	; 0x3d
   14140:	str	r0, [sp, #8]
   14144:	b	14148 <__assert_fail@plt+0x3060>
   14148:	ldr	r0, [sp, #8]
   1414c:	ldr	r1, [fp, #-12]
   14150:	add	r2, r1, #1
   14154:	str	r2, [fp, #-12]
   14158:	strb	r0, [r1]
   1415c:	ldr	r0, [fp, #-16]
   14160:	mvn	r1, #0
   14164:	add	r0, r0, r1
   14168:	str	r0, [fp, #-16]
   1416c:	cmp	r0, #0
   14170:	bne	14178 <__assert_fail@plt+0x3090>
   14174:	b	14224 <__assert_fail@plt+0x313c>
   14178:	ldr	r0, [fp, #-8]
   1417c:	cmp	r0, #0
   14180:	beq	141b0 <__assert_fail@plt+0x30c8>
   14184:	ldr	r0, [fp, #-4]
   14188:	ldrb	r0, [r0, #4]
   1418c:	bl	14244 <__assert_fail@plt+0x315c>
   14190:	and	r0, r0, #255	; 0xff
   14194:	and	r0, r0, #31
   14198:	movw	lr, #11491	; 0x2ce3
   1419c:	movt	lr, #2
   141a0:	add	r0, lr, r0
   141a4:	ldrb	r0, [r0]
   141a8:	str	r0, [sp, #4]
   141ac:	b	141bc <__assert_fail@plt+0x30d4>
   141b0:	movw	r0, #61	; 0x3d
   141b4:	str	r0, [sp, #4]
   141b8:	b	141bc <__assert_fail@plt+0x30d4>
   141bc:	ldr	r0, [sp, #4]
   141c0:	ldr	r1, [fp, #-12]
   141c4:	add	r2, r1, #1
   141c8:	str	r2, [fp, #-12]
   141cc:	strb	r0, [r1]
   141d0:	ldr	r0, [fp, #-16]
   141d4:	mvn	r1, #0
   141d8:	add	r0, r0, r1
   141dc:	str	r0, [fp, #-16]
   141e0:	cmp	r0, #0
   141e4:	bne	141ec <__assert_fail@plt+0x3104>
   141e8:	b	14224 <__assert_fail@plt+0x313c>
   141ec:	ldr	r0, [fp, #-8]
   141f0:	cmp	r0, #0
   141f4:	beq	14208 <__assert_fail@plt+0x3120>
   141f8:	ldr	r0, [fp, #-8]
   141fc:	mvn	r1, #0
   14200:	add	r0, r0, r1
   14204:	str	r0, [fp, #-8]
   14208:	ldr	r0, [fp, #-8]
   1420c:	cmp	r0, #0
   14210:	beq	14220 <__assert_fail@plt+0x3138>
   14214:	ldr	r0, [fp, #-4]
   14218:	add	r0, r0, #5
   1421c:	str	r0, [fp, #-4]
   14220:	b	13d04 <__assert_fail@plt+0x2c1c>
   14224:	ldr	r0, [fp, #-16]
   14228:	cmp	r0, #0
   1422c:	beq	1423c <__assert_fail@plt+0x3154>
   14230:	ldr	r0, [fp, #-12]
   14234:	movw	r1, #0
   14238:	strb	r1, [r0]
   1423c:	mov	sp, fp
   14240:	pop	{fp, pc}
   14244:	sub	sp, sp, #4
   14248:	strb	r0, [sp, #3]
   1424c:	ldrb	r0, [sp, #3]
   14250:	add	sp, sp, #4
   14254:	bx	lr
   14258:	push	{fp, lr}
   1425c:	mov	fp, sp
   14260:	sub	sp, sp, #80	; 0x50
   14264:	str	r0, [fp, #-8]
   14268:	str	r1, [fp, #-12]
   1426c:	str	r2, [fp, #-16]
   14270:	ldr	r0, [fp, #-12]
   14274:	movw	r1, #26215	; 0x6667
   14278:	movt	r1, #26214	; 0x6666
   1427c:	smmul	r1, r0, r1
   14280:	asr	r2, r1, #1
   14284:	add	r1, r2, r1, lsr #31
   14288:	add	r2, r1, r1, lsl #2
   1428c:	sub	r0, r0, r2
   14290:	cmp	r0, #0
   14294:	movw	r0, #0
   14298:	movne	r0, #1
   1429c:	and	r0, r0, #1
   142a0:	add	r0, r1, r0
   142a4:	str	r0, [fp, #-20]	; 0xffffffec
   142a8:	b	14514 <__assert_fail@plt+0x342c>
   142ac:	b	142b0 <__assert_fail@plt+0x31c8>
   142b0:	b	1435c <__assert_fail@plt+0x3274>
   142b4:	ldr	r0, [fp, #-20]	; 0xffffffec
   142b8:	cmp	r0, #0
   142bc:	bge	142f0 <__assert_fail@plt+0x3208>
   142c0:	b	142c4 <__assert_fail@plt+0x31dc>
   142c4:	ldr	r0, [fp, #-20]	; 0xffffffec
   142c8:	cmp	r0, #15
   142cc:	blt	143bc <__assert_fail@plt+0x32d4>
   142d0:	b	143d0 <__assert_fail@plt+0x32e8>
   142d4:	ldr	r0, [fp, #-20]	; 0xffffffec
   142d8:	mvn	r1, #0
   142dc:	sub	r0, r1, r0
   142e0:	mvn	r1, #14
   142e4:	cmp	r1, r0
   142e8:	ble	143bc <__assert_fail@plt+0x32d4>
   142ec:	b	143d0 <__assert_fail@plt+0x32e8>
   142f0:	b	142f4 <__assert_fail@plt+0x320c>
   142f4:	b	14348 <__assert_fail@plt+0x3260>
   142f8:	b	14348 <__assert_fail@plt+0x3260>
   142fc:	b	14348 <__assert_fail@plt+0x3260>
   14300:	b	14304 <__assert_fail@plt+0x321c>
   14304:	ldr	r0, [fp, #-20]	; 0xffffffec
   14308:	mvn	r1, #127	; 0x7f
   1430c:	add	r0, r0, r1
   14310:	movw	r1, #0
   14314:	cmp	r1, r0
   14318:	blt	143bc <__assert_fail@plt+0x32d4>
   1431c:	b	143d0 <__assert_fail@plt+0x32e8>
   14320:	ldr	r0, [fp, #-20]	; 0xffffffec
   14324:	movw	r1, #0
   14328:	cmp	r1, r0
   1432c:	bge	143d0 <__assert_fail@plt+0x32e8>
   14330:	ldr	r0, [fp, #-20]	; 0xffffffec
   14334:	sub	r0, r0, #1
   14338:	movw	r1, #127	; 0x7f
   1433c:	cmp	r1, r0
   14340:	blt	143bc <__assert_fail@plt+0x32d4>
   14344:	b	143d0 <__assert_fail@plt+0x32e8>
   14348:	ldr	r0, [fp, #-20]	; 0xffffffec
   1434c:	mvn	r1, #15
   14350:	cmp	r1, r0
   14354:	blt	143bc <__assert_fail@plt+0x32d4>
   14358:	b	143d0 <__assert_fail@plt+0x32e8>
   1435c:	b	14364 <__assert_fail@plt+0x327c>
   14360:	b	143d0 <__assert_fail@plt+0x32e8>
   14364:	ldr	r0, [fp, #-20]	; 0xffffffec
   14368:	cmp	r0, #0
   1436c:	bge	143ac <__assert_fail@plt+0x32c4>
   14370:	b	14374 <__assert_fail@plt+0x328c>
   14374:	b	14394 <__assert_fail@plt+0x32ac>
   14378:	b	14394 <__assert_fail@plt+0x32ac>
   1437c:	ldr	r0, [fp, #-20]	; 0xffffffec
   14380:	cmn	r0, #1
   14384:	bne	14394 <__assert_fail@plt+0x32ac>
   14388:	b	1438c <__assert_fail@plt+0x32a4>
   1438c:	b	143d0 <__assert_fail@plt+0x32e8>
   14390:	b	143d0 <__assert_fail@plt+0x32e8>
   14394:	ldr	r0, [fp, #-20]	; 0xffffffec
   14398:	mvn	r1, #127	; 0x7f
   1439c:	sdiv	r0, r1, r0
   143a0:	cmp	r0, #8
   143a4:	blt	143bc <__assert_fail@plt+0x32d4>
   143a8:	b	143d0 <__assert_fail@plt+0x32e8>
   143ac:	ldr	r0, [fp, #-20]	; 0xffffffec
   143b0:	movw	r1, #15
   143b4:	cmp	r1, r0
   143b8:	bge	143d0 <__assert_fail@plt+0x32e8>
   143bc:	ldr	r0, [fp, #-20]	; 0xffffffec
   143c0:	lsl	r0, r0, #3
   143c4:	sxtb	r0, r0
   143c8:	str	r0, [fp, #-24]	; 0xffffffe8
   143cc:	b	14ebc <__assert_fail@plt+0x3dd4>
   143d0:	ldr	r0, [fp, #-20]	; 0xffffffec
   143d4:	lsl	r0, r0, #3
   143d8:	sxtb	r0, r0
   143dc:	str	r0, [fp, #-24]	; 0xffffffe8
   143e0:	b	14eb0 <__assert_fail@plt+0x3dc8>
   143e4:	b	1448c <__assert_fail@plt+0x33a4>
   143e8:	ldr	r0, [fp, #-20]	; 0xffffffec
   143ec:	cmp	r0, #0
   143f0:	bge	14424 <__assert_fail@plt+0x333c>
   143f4:	b	143f8 <__assert_fail@plt+0x3310>
   143f8:	ldr	r0, [fp, #-20]	; 0xffffffec
   143fc:	cmp	r0, #31
   14400:	blt	144ec <__assert_fail@plt+0x3404>
   14404:	b	14500 <__assert_fail@plt+0x3418>
   14408:	ldr	r0, [fp, #-20]	; 0xffffffec
   1440c:	mvn	r1, #0
   14410:	sub	r0, r1, r0
   14414:	mvn	r1, #30
   14418:	cmp	r1, r0
   1441c:	ble	144ec <__assert_fail@plt+0x3404>
   14420:	b	14500 <__assert_fail@plt+0x3418>
   14424:	b	14428 <__assert_fail@plt+0x3340>
   14428:	b	14478 <__assert_fail@plt+0x3390>
   1442c:	b	14478 <__assert_fail@plt+0x3390>
   14430:	b	14478 <__assert_fail@plt+0x3390>
   14434:	b	14438 <__assert_fail@plt+0x3350>
   14438:	ldr	r0, [fp, #-20]	; 0xffffffec
   1443c:	add	r0, r0, #0
   14440:	movw	r1, #0
   14444:	cmp	r1, r0
   14448:	blt	144ec <__assert_fail@plt+0x3404>
   1444c:	b	14500 <__assert_fail@plt+0x3418>
   14450:	ldr	r0, [fp, #-20]	; 0xffffffec
   14454:	movw	r1, #0
   14458:	cmp	r1, r0
   1445c:	bge	14500 <__assert_fail@plt+0x3418>
   14460:	ldr	r0, [fp, #-20]	; 0xffffffec
   14464:	sub	r0, r0, #1
   14468:	mvn	r1, #0
   1446c:	cmp	r1, r0
   14470:	blt	144ec <__assert_fail@plt+0x3404>
   14474:	b	14500 <__assert_fail@plt+0x3418>
   14478:	ldr	r0, [fp, #-20]	; 0xffffffec
   1447c:	movw	r1, #0
   14480:	cmp	r1, r0
   14484:	blt	144ec <__assert_fail@plt+0x3404>
   14488:	b	14500 <__assert_fail@plt+0x3418>
   1448c:	b	14494 <__assert_fail@plt+0x33ac>
   14490:	b	14500 <__assert_fail@plt+0x3418>
   14494:	ldr	r0, [fp, #-20]	; 0xffffffec
   14498:	cmp	r0, #0
   1449c:	bge	144dc <__assert_fail@plt+0x33f4>
   144a0:	b	144a4 <__assert_fail@plt+0x33bc>
   144a4:	b	144c4 <__assert_fail@plt+0x33dc>
   144a8:	b	144c4 <__assert_fail@plt+0x33dc>
   144ac:	ldr	r0, [fp, #-20]	; 0xffffffec
   144b0:	cmn	r0, #1
   144b4:	bne	144c4 <__assert_fail@plt+0x33dc>
   144b8:	b	144bc <__assert_fail@plt+0x33d4>
   144bc:	b	144ec <__assert_fail@plt+0x3404>
   144c0:	b	144ec <__assert_fail@plt+0x3404>
   144c4:	ldr	r0, [fp, #-20]	; 0xffffffec
   144c8:	movw	r1, #0
   144cc:	sdiv	r0, r1, r0
   144d0:	cmp	r0, #8
   144d4:	blt	144ec <__assert_fail@plt+0x3404>
   144d8:	b	14500 <__assert_fail@plt+0x3418>
   144dc:	ldr	r0, [fp, #-20]	; 0xffffffec
   144e0:	movw	r1, #31
   144e4:	cmp	r1, r0
   144e8:	bge	14500 <__assert_fail@plt+0x3418>
   144ec:	ldr	r0, [fp, #-20]	; 0xffffffec
   144f0:	lsl	r0, r0, #3
   144f4:	and	r0, r0, #255	; 0xff
   144f8:	str	r0, [fp, #-24]	; 0xffffffe8
   144fc:	b	14ebc <__assert_fail@plt+0x3dd4>
   14500:	ldr	r0, [fp, #-20]	; 0xffffffec
   14504:	lsl	r0, r0, #3
   14508:	and	r0, r0, #255	; 0xff
   1450c:	str	r0, [fp, #-24]	; 0xffffffe8
   14510:	b	14eb0 <__assert_fail@plt+0x3dc8>
   14514:	b	14788 <__assert_fail@plt+0x36a0>
   14518:	b	1451c <__assert_fail@plt+0x3434>
   1451c:	b	145cc <__assert_fail@plt+0x34e4>
   14520:	ldr	r0, [fp, #-20]	; 0xffffffec
   14524:	cmp	r0, #0
   14528:	bge	14560 <__assert_fail@plt+0x3478>
   1452c:	b	14530 <__assert_fail@plt+0x3448>
   14530:	ldr	r0, [fp, #-20]	; 0xffffffec
   14534:	movw	r1, #4095	; 0xfff
   14538:	cmp	r0, r1
   1453c:	blt	1462c <__assert_fail@plt+0x3544>
   14540:	b	14640 <__assert_fail@plt+0x3558>
   14544:	ldr	r0, [pc, #2576]	; 14f5c <__assert_fail@plt+0x3e74>
   14548:	ldr	r1, [fp, #-20]	; 0xffffffec
   1454c:	mvn	r2, #0
   14550:	sub	r1, r2, r1
   14554:	cmp	r0, r1
   14558:	ble	1462c <__assert_fail@plt+0x3544>
   1455c:	b	14640 <__assert_fail@plt+0x3558>
   14560:	b	14564 <__assert_fail@plt+0x347c>
   14564:	b	145b8 <__assert_fail@plt+0x34d0>
   14568:	b	145b8 <__assert_fail@plt+0x34d0>
   1456c:	b	145b8 <__assert_fail@plt+0x34d0>
   14570:	b	14574 <__assert_fail@plt+0x348c>
   14574:	ldr	r0, [pc, #2520]	; 14f54 <__assert_fail@plt+0x3e6c>
   14578:	ldr	r1, [fp, #-20]	; 0xffffffec
   1457c:	add	r0, r1, r0
   14580:	movw	r1, #0
   14584:	cmp	r1, r0
   14588:	blt	1462c <__assert_fail@plt+0x3544>
   1458c:	b	14640 <__assert_fail@plt+0x3558>
   14590:	ldr	r0, [fp, #-20]	; 0xffffffec
   14594:	movw	r1, #0
   14598:	cmp	r1, r0
   1459c:	bge	14640 <__assert_fail@plt+0x3558>
   145a0:	ldr	r0, [fp, #-20]	; 0xffffffec
   145a4:	sub	r0, r0, #1
   145a8:	movw	r1, #32767	; 0x7fff
   145ac:	cmp	r1, r0
   145b0:	blt	1462c <__assert_fail@plt+0x3544>
   145b4:	b	14640 <__assert_fail@plt+0x3558>
   145b8:	ldr	r0, [pc, #2456]	; 14f58 <__assert_fail@plt+0x3e70>
   145bc:	ldr	r1, [fp, #-20]	; 0xffffffec
   145c0:	cmp	r0, r1
   145c4:	blt	1462c <__assert_fail@plt+0x3544>
   145c8:	b	14640 <__assert_fail@plt+0x3558>
   145cc:	b	145d4 <__assert_fail@plt+0x34ec>
   145d0:	b	14640 <__assert_fail@plt+0x3558>
   145d4:	ldr	r0, [fp, #-20]	; 0xffffffec
   145d8:	cmp	r0, #0
   145dc:	bge	1461c <__assert_fail@plt+0x3534>
   145e0:	b	145e4 <__assert_fail@plt+0x34fc>
   145e4:	b	14604 <__assert_fail@plt+0x351c>
   145e8:	b	14604 <__assert_fail@plt+0x351c>
   145ec:	ldr	r0, [fp, #-20]	; 0xffffffec
   145f0:	cmn	r0, #1
   145f4:	bne	14604 <__assert_fail@plt+0x351c>
   145f8:	b	145fc <__assert_fail@plt+0x3514>
   145fc:	b	14640 <__assert_fail@plt+0x3558>
   14600:	b	14640 <__assert_fail@plt+0x3558>
   14604:	ldr	r0, [pc, #2376]	; 14f54 <__assert_fail@plt+0x3e6c>
   14608:	ldr	r1, [fp, #-20]	; 0xffffffec
   1460c:	sdiv	r0, r0, r1
   14610:	cmp	r0, #8
   14614:	blt	1462c <__assert_fail@plt+0x3544>
   14618:	b	14640 <__assert_fail@plt+0x3558>
   1461c:	ldr	r0, [fp, #-20]	; 0xffffffec
   14620:	movw	r1, #4095	; 0xfff
   14624:	cmp	r1, r0
   14628:	bge	14640 <__assert_fail@plt+0x3558>
   1462c:	ldr	r0, [fp, #-20]	; 0xffffffec
   14630:	lsl	r0, r0, #3
   14634:	sxth	r0, r0
   14638:	str	r0, [fp, #-24]	; 0xffffffe8
   1463c:	b	14ebc <__assert_fail@plt+0x3dd4>
   14640:	ldr	r0, [fp, #-20]	; 0xffffffec
   14644:	lsl	r0, r0, #3
   14648:	sxth	r0, r0
   1464c:	str	r0, [fp, #-24]	; 0xffffffe8
   14650:	b	14eb0 <__assert_fail@plt+0x3dc8>
   14654:	b	14700 <__assert_fail@plt+0x3618>
   14658:	ldr	r0, [fp, #-20]	; 0xffffffec
   1465c:	cmp	r0, #0
   14660:	bge	14698 <__assert_fail@plt+0x35b0>
   14664:	b	14668 <__assert_fail@plt+0x3580>
   14668:	ldr	r0, [fp, #-20]	; 0xffffffec
   1466c:	movw	r1, #8191	; 0x1fff
   14670:	cmp	r0, r1
   14674:	blt	14760 <__assert_fail@plt+0x3678>
   14678:	b	14774 <__assert_fail@plt+0x368c>
   1467c:	ldr	r0, [pc, #2268]	; 14f60 <__assert_fail@plt+0x3e78>
   14680:	ldr	r1, [fp, #-20]	; 0xffffffec
   14684:	mvn	r2, #0
   14688:	sub	r1, r2, r1
   1468c:	cmp	r0, r1
   14690:	ble	14760 <__assert_fail@plt+0x3678>
   14694:	b	14774 <__assert_fail@plt+0x368c>
   14698:	b	1469c <__assert_fail@plt+0x35b4>
   1469c:	b	146ec <__assert_fail@plt+0x3604>
   146a0:	b	146ec <__assert_fail@plt+0x3604>
   146a4:	b	146ec <__assert_fail@plt+0x3604>
   146a8:	b	146ac <__assert_fail@plt+0x35c4>
   146ac:	ldr	r0, [fp, #-20]	; 0xffffffec
   146b0:	add	r0, r0, #0
   146b4:	movw	r1, #0
   146b8:	cmp	r1, r0
   146bc:	blt	14760 <__assert_fail@plt+0x3678>
   146c0:	b	14774 <__assert_fail@plt+0x368c>
   146c4:	ldr	r0, [fp, #-20]	; 0xffffffec
   146c8:	movw	r1, #0
   146cc:	cmp	r1, r0
   146d0:	bge	14774 <__assert_fail@plt+0x368c>
   146d4:	ldr	r0, [fp, #-20]	; 0xffffffec
   146d8:	sub	r0, r0, #1
   146dc:	mvn	r1, #0
   146e0:	cmp	r1, r0
   146e4:	blt	14760 <__assert_fail@plt+0x3678>
   146e8:	b	14774 <__assert_fail@plt+0x368c>
   146ec:	ldr	r0, [fp, #-20]	; 0xffffffec
   146f0:	movw	r1, #0
   146f4:	cmp	r1, r0
   146f8:	blt	14760 <__assert_fail@plt+0x3678>
   146fc:	b	14774 <__assert_fail@plt+0x368c>
   14700:	b	14708 <__assert_fail@plt+0x3620>
   14704:	b	14774 <__assert_fail@plt+0x368c>
   14708:	ldr	r0, [fp, #-20]	; 0xffffffec
   1470c:	cmp	r0, #0
   14710:	bge	14750 <__assert_fail@plt+0x3668>
   14714:	b	14718 <__assert_fail@plt+0x3630>
   14718:	b	14738 <__assert_fail@plt+0x3650>
   1471c:	b	14738 <__assert_fail@plt+0x3650>
   14720:	ldr	r0, [fp, #-20]	; 0xffffffec
   14724:	cmn	r0, #1
   14728:	bne	14738 <__assert_fail@plt+0x3650>
   1472c:	b	14730 <__assert_fail@plt+0x3648>
   14730:	b	14760 <__assert_fail@plt+0x3678>
   14734:	b	14760 <__assert_fail@plt+0x3678>
   14738:	ldr	r0, [fp, #-20]	; 0xffffffec
   1473c:	movw	r1, #0
   14740:	sdiv	r0, r1, r0
   14744:	cmp	r0, #8
   14748:	blt	14760 <__assert_fail@plt+0x3678>
   1474c:	b	14774 <__assert_fail@plt+0x368c>
   14750:	ldr	r0, [fp, #-20]	; 0xffffffec
   14754:	movw	r1, #8191	; 0x1fff
   14758:	cmp	r1, r0
   1475c:	bge	14774 <__assert_fail@plt+0x368c>
   14760:	ldr	r0, [fp, #-20]	; 0xffffffec
   14764:	lsl	r0, r0, #3
   14768:	uxth	r0, r0
   1476c:	str	r0, [fp, #-24]	; 0xffffffe8
   14770:	b	14ebc <__assert_fail@plt+0x3dd4>
   14774:	ldr	r0, [fp, #-20]	; 0xffffffec
   14778:	lsl	r0, r0, #3
   1477c:	uxth	r0, r0
   14780:	str	r0, [fp, #-24]	; 0xffffffe8
   14784:	b	14eb0 <__assert_fail@plt+0x3dc8>
   14788:	b	1478c <__assert_fail@plt+0x36a4>
   1478c:	b	14790 <__assert_fail@plt+0x36a8>
   14790:	b	14830 <__assert_fail@plt+0x3748>
   14794:	ldr	r0, [fp, #-20]	; 0xffffffec
   14798:	cmp	r0, #0
   1479c:	bge	147d4 <__assert_fail@plt+0x36ec>
   147a0:	b	147a4 <__assert_fail@plt+0x36bc>
   147a4:	ldr	r0, [pc, #1940]	; 14f40 <__assert_fail@plt+0x3e58>
   147a8:	ldr	r1, [fp, #-20]	; 0xffffffec
   147ac:	cmp	r1, r0
   147b0:	blt	14884 <__assert_fail@plt+0x379c>
   147b4:	b	14894 <__assert_fail@plt+0x37ac>
   147b8:	ldr	r0, [pc, #1936]	; 14f50 <__assert_fail@plt+0x3e68>
   147bc:	ldr	r1, [fp, #-20]	; 0xffffffec
   147c0:	mvn	r2, #0
   147c4:	sub	r1, r2, r1
   147c8:	cmp	r0, r1
   147cc:	ble	14884 <__assert_fail@plt+0x379c>
   147d0:	b	14894 <__assert_fail@plt+0x37ac>
   147d4:	b	1481c <__assert_fail@plt+0x3734>
   147d8:	b	147dc <__assert_fail@plt+0x36f4>
   147dc:	ldr	r0, [fp, #-20]	; 0xffffffec
   147e0:	add	r0, r0, #-2147483648	; 0x80000000
   147e4:	movw	r1, #0
   147e8:	cmp	r1, r0
   147ec:	blt	14884 <__assert_fail@plt+0x379c>
   147f0:	b	14894 <__assert_fail@plt+0x37ac>
   147f4:	ldr	r0, [fp, #-20]	; 0xffffffec
   147f8:	movw	r1, #0
   147fc:	cmp	r1, r0
   14800:	bge	14894 <__assert_fail@plt+0x37ac>
   14804:	ldr	r0, [pc, #1856]	; 14f4c <__assert_fail@plt+0x3e64>
   14808:	ldr	r1, [fp, #-20]	; 0xffffffec
   1480c:	sub	r1, r1, #1
   14810:	cmp	r0, r1
   14814:	blt	14884 <__assert_fail@plt+0x379c>
   14818:	b	14894 <__assert_fail@plt+0x37ac>
   1481c:	ldr	r0, [pc, #1828]	; 14f48 <__assert_fail@plt+0x3e60>
   14820:	ldr	r1, [fp, #-20]	; 0xffffffec
   14824:	cmp	r0, r1
   14828:	blt	14884 <__assert_fail@plt+0x379c>
   1482c:	b	14894 <__assert_fail@plt+0x37ac>
   14830:	b	14838 <__assert_fail@plt+0x3750>
   14834:	b	14894 <__assert_fail@plt+0x37ac>
   14838:	ldr	r0, [fp, #-20]	; 0xffffffec
   1483c:	cmp	r0, #0
   14840:	bge	14874 <__assert_fail@plt+0x378c>
   14844:	ldr	r0, [fp, #-20]	; 0xffffffec
   14848:	cmn	r0, #1
   1484c:	bne	1485c <__assert_fail@plt+0x3774>
   14850:	b	14854 <__assert_fail@plt+0x376c>
   14854:	b	14894 <__assert_fail@plt+0x37ac>
   14858:	b	14894 <__assert_fail@plt+0x37ac>
   1485c:	ldr	r0, [pc, #1760]	; 14f44 <__assert_fail@plt+0x3e5c>
   14860:	ldr	r1, [fp, #-20]	; 0xffffffec
   14864:	sdiv	r0, r0, r1
   14868:	cmp	r0, #8
   1486c:	blt	14884 <__assert_fail@plt+0x379c>
   14870:	b	14894 <__assert_fail@plt+0x37ac>
   14874:	ldr	r0, [pc, #1732]	; 14f40 <__assert_fail@plt+0x3e58>
   14878:	ldr	r1, [fp, #-20]	; 0xffffffec
   1487c:	cmp	r0, r1
   14880:	bge	14894 <__assert_fail@plt+0x37ac>
   14884:	ldr	r0, [fp, #-20]	; 0xffffffec
   14888:	lsl	r0, r0, #3
   1488c:	str	r0, [fp, #-24]	; 0xffffffe8
   14890:	b	14ebc <__assert_fail@plt+0x3dd4>
   14894:	ldr	r0, [fp, #-20]	; 0xffffffec
   14898:	lsl	r0, r0, #3
   1489c:	str	r0, [fp, #-24]	; 0xffffffe8
   148a0:	b	14eb0 <__assert_fail@plt+0x3dc8>
   148a4:	b	14950 <__assert_fail@plt+0x3868>
   148a8:	ldr	r0, [fp, #-20]	; 0xffffffec
   148ac:	cmp	r0, #0
   148b0:	bge	148e8 <__assert_fail@plt+0x3800>
   148b4:	b	148cc <__assert_fail@plt+0x37e4>
   148b8:	ldr	r0, [pc, #1660]	; 14f3c <__assert_fail@plt+0x3e54>
   148bc:	ldr	r1, [fp, #-20]	; 0xffffffec
   148c0:	cmp	r1, r0
   148c4:	bcc	149b0 <__assert_fail@plt+0x38c8>
   148c8:	b	149c0 <__assert_fail@plt+0x38d8>
   148cc:	ldr	r0, [fp, #-20]	; 0xffffffec
   148d0:	mvn	r1, #0
   148d4:	sub	r0, r1, r0
   148d8:	movw	r1, #1
   148dc:	cmp	r1, r0
   148e0:	bls	149b0 <__assert_fail@plt+0x38c8>
   148e4:	b	149c0 <__assert_fail@plt+0x38d8>
   148e8:	b	148ec <__assert_fail@plt+0x3804>
   148ec:	b	1493c <__assert_fail@plt+0x3854>
   148f0:	b	1493c <__assert_fail@plt+0x3854>
   148f4:	b	1493c <__assert_fail@plt+0x3854>
   148f8:	b	148fc <__assert_fail@plt+0x3814>
   148fc:	ldr	r0, [fp, #-20]	; 0xffffffec
   14900:	add	r0, r0, #0
   14904:	movw	r1, #0
   14908:	cmp	r1, r0
   1490c:	blt	149b0 <__assert_fail@plt+0x38c8>
   14910:	b	149c0 <__assert_fail@plt+0x38d8>
   14914:	ldr	r0, [fp, #-20]	; 0xffffffec
   14918:	movw	r1, #0
   1491c:	cmp	r1, r0
   14920:	bge	149c0 <__assert_fail@plt+0x38d8>
   14924:	ldr	r0, [fp, #-20]	; 0xffffffec
   14928:	sub	r0, r0, #1
   1492c:	mvn	r1, #0
   14930:	cmp	r1, r0
   14934:	blt	149b0 <__assert_fail@plt+0x38c8>
   14938:	b	149c0 <__assert_fail@plt+0x38d8>
   1493c:	ldr	r0, [fp, #-20]	; 0xffffffec
   14940:	movw	r1, #0
   14944:	cmp	r1, r0
   14948:	blt	149b0 <__assert_fail@plt+0x38c8>
   1494c:	b	149c0 <__assert_fail@plt+0x38d8>
   14950:	b	14958 <__assert_fail@plt+0x3870>
   14954:	b	149c0 <__assert_fail@plt+0x38d8>
   14958:	ldr	r0, [fp, #-20]	; 0xffffffec
   1495c:	cmp	r0, #0
   14960:	bge	149a0 <__assert_fail@plt+0x38b8>
   14964:	b	14968 <__assert_fail@plt+0x3880>
   14968:	b	14988 <__assert_fail@plt+0x38a0>
   1496c:	b	14988 <__assert_fail@plt+0x38a0>
   14970:	ldr	r0, [fp, #-20]	; 0xffffffec
   14974:	cmn	r0, #1
   14978:	bne	14988 <__assert_fail@plt+0x38a0>
   1497c:	b	14980 <__assert_fail@plt+0x3898>
   14980:	b	149b0 <__assert_fail@plt+0x38c8>
   14984:	b	149b0 <__assert_fail@plt+0x38c8>
   14988:	ldr	r0, [fp, #-20]	; 0xffffffec
   1498c:	movw	r1, #0
   14990:	sdiv	r0, r1, r0
   14994:	cmp	r0, #8
   14998:	blt	149b0 <__assert_fail@plt+0x38c8>
   1499c:	b	149c0 <__assert_fail@plt+0x38d8>
   149a0:	ldr	r0, [pc, #1428]	; 14f3c <__assert_fail@plt+0x3e54>
   149a4:	ldr	r1, [fp, #-20]	; 0xffffffec
   149a8:	cmp	r0, r1
   149ac:	bcs	149c0 <__assert_fail@plt+0x38d8>
   149b0:	ldr	r0, [fp, #-20]	; 0xffffffec
   149b4:	lsl	r0, r0, #3
   149b8:	str	r0, [fp, #-24]	; 0xffffffe8
   149bc:	b	14ebc <__assert_fail@plt+0x3dd4>
   149c0:	ldr	r0, [fp, #-20]	; 0xffffffec
   149c4:	lsl	r0, r0, #3
   149c8:	str	r0, [fp, #-24]	; 0xffffffe8
   149cc:	b	14eb0 <__assert_fail@plt+0x3dc8>
   149d0:	b	149d4 <__assert_fail@plt+0x38ec>
   149d4:	b	149d8 <__assert_fail@plt+0x38f0>
   149d8:	b	14a78 <__assert_fail@plt+0x3990>
   149dc:	ldr	r0, [fp, #-20]	; 0xffffffec
   149e0:	cmp	r0, #0
   149e4:	bge	14a1c <__assert_fail@plt+0x3934>
   149e8:	b	149ec <__assert_fail@plt+0x3904>
   149ec:	ldr	r0, [pc, #1356]	; 14f40 <__assert_fail@plt+0x3e58>
   149f0:	ldr	r1, [fp, #-20]	; 0xffffffec
   149f4:	cmp	r1, r0
   149f8:	blt	14acc <__assert_fail@plt+0x39e4>
   149fc:	b	14adc <__assert_fail@plt+0x39f4>
   14a00:	ldr	r0, [pc, #1352]	; 14f50 <__assert_fail@plt+0x3e68>
   14a04:	ldr	r1, [fp, #-20]	; 0xffffffec
   14a08:	mvn	r2, #0
   14a0c:	sub	r1, r2, r1
   14a10:	cmp	r0, r1
   14a14:	ble	14acc <__assert_fail@plt+0x39e4>
   14a18:	b	14adc <__assert_fail@plt+0x39f4>
   14a1c:	b	14a64 <__assert_fail@plt+0x397c>
   14a20:	b	14a24 <__assert_fail@plt+0x393c>
   14a24:	ldr	r0, [fp, #-20]	; 0xffffffec
   14a28:	add	r0, r0, #-2147483648	; 0x80000000
   14a2c:	movw	r1, #0
   14a30:	cmp	r1, r0
   14a34:	blt	14acc <__assert_fail@plt+0x39e4>
   14a38:	b	14adc <__assert_fail@plt+0x39f4>
   14a3c:	ldr	r0, [fp, #-20]	; 0xffffffec
   14a40:	movw	r1, #0
   14a44:	cmp	r1, r0
   14a48:	bge	14adc <__assert_fail@plt+0x39f4>
   14a4c:	ldr	r0, [pc, #1272]	; 14f4c <__assert_fail@plt+0x3e64>
   14a50:	ldr	r1, [fp, #-20]	; 0xffffffec
   14a54:	sub	r1, r1, #1
   14a58:	cmp	r0, r1
   14a5c:	blt	14acc <__assert_fail@plt+0x39e4>
   14a60:	b	14adc <__assert_fail@plt+0x39f4>
   14a64:	ldr	r0, [pc, #1244]	; 14f48 <__assert_fail@plt+0x3e60>
   14a68:	ldr	r1, [fp, #-20]	; 0xffffffec
   14a6c:	cmp	r0, r1
   14a70:	blt	14acc <__assert_fail@plt+0x39e4>
   14a74:	b	14adc <__assert_fail@plt+0x39f4>
   14a78:	b	14a80 <__assert_fail@plt+0x3998>
   14a7c:	b	14adc <__assert_fail@plt+0x39f4>
   14a80:	ldr	r0, [fp, #-20]	; 0xffffffec
   14a84:	cmp	r0, #0
   14a88:	bge	14abc <__assert_fail@plt+0x39d4>
   14a8c:	ldr	r0, [fp, #-20]	; 0xffffffec
   14a90:	cmn	r0, #1
   14a94:	bne	14aa4 <__assert_fail@plt+0x39bc>
   14a98:	b	14a9c <__assert_fail@plt+0x39b4>
   14a9c:	b	14adc <__assert_fail@plt+0x39f4>
   14aa0:	b	14adc <__assert_fail@plt+0x39f4>
   14aa4:	ldr	r0, [pc, #1176]	; 14f44 <__assert_fail@plt+0x3e5c>
   14aa8:	ldr	r1, [fp, #-20]	; 0xffffffec
   14aac:	sdiv	r0, r0, r1
   14ab0:	cmp	r0, #8
   14ab4:	blt	14acc <__assert_fail@plt+0x39e4>
   14ab8:	b	14adc <__assert_fail@plt+0x39f4>
   14abc:	ldr	r0, [pc, #1148]	; 14f40 <__assert_fail@plt+0x3e58>
   14ac0:	ldr	r1, [fp, #-20]	; 0xffffffec
   14ac4:	cmp	r0, r1
   14ac8:	bge	14adc <__assert_fail@plt+0x39f4>
   14acc:	ldr	r0, [fp, #-20]	; 0xffffffec
   14ad0:	lsl	r0, r0, #3
   14ad4:	str	r0, [fp, #-24]	; 0xffffffe8
   14ad8:	b	14ebc <__assert_fail@plt+0x3dd4>
   14adc:	ldr	r0, [fp, #-20]	; 0xffffffec
   14ae0:	lsl	r0, r0, #3
   14ae4:	str	r0, [fp, #-24]	; 0xffffffe8
   14ae8:	b	14eb0 <__assert_fail@plt+0x3dc8>
   14aec:	b	14b98 <__assert_fail@plt+0x3ab0>
   14af0:	ldr	r0, [fp, #-20]	; 0xffffffec
   14af4:	cmp	r0, #0
   14af8:	bge	14b30 <__assert_fail@plt+0x3a48>
   14afc:	b	14b14 <__assert_fail@plt+0x3a2c>
   14b00:	ldr	r0, [pc, #1076]	; 14f3c <__assert_fail@plt+0x3e54>
   14b04:	ldr	r1, [fp, #-20]	; 0xffffffec
   14b08:	cmp	r1, r0
   14b0c:	bcc	14bf8 <__assert_fail@plt+0x3b10>
   14b10:	b	14c08 <__assert_fail@plt+0x3b20>
   14b14:	ldr	r0, [fp, #-20]	; 0xffffffec
   14b18:	mvn	r1, #0
   14b1c:	sub	r0, r1, r0
   14b20:	movw	r1, #1
   14b24:	cmp	r1, r0
   14b28:	bls	14bf8 <__assert_fail@plt+0x3b10>
   14b2c:	b	14c08 <__assert_fail@plt+0x3b20>
   14b30:	b	14b34 <__assert_fail@plt+0x3a4c>
   14b34:	b	14b84 <__assert_fail@plt+0x3a9c>
   14b38:	b	14b84 <__assert_fail@plt+0x3a9c>
   14b3c:	b	14b84 <__assert_fail@plt+0x3a9c>
   14b40:	b	14b44 <__assert_fail@plt+0x3a5c>
   14b44:	ldr	r0, [fp, #-20]	; 0xffffffec
   14b48:	add	r0, r0, #0
   14b4c:	movw	r1, #0
   14b50:	cmp	r1, r0
   14b54:	blt	14bf8 <__assert_fail@plt+0x3b10>
   14b58:	b	14c08 <__assert_fail@plt+0x3b20>
   14b5c:	ldr	r0, [fp, #-20]	; 0xffffffec
   14b60:	movw	r1, #0
   14b64:	cmp	r1, r0
   14b68:	bge	14c08 <__assert_fail@plt+0x3b20>
   14b6c:	ldr	r0, [fp, #-20]	; 0xffffffec
   14b70:	sub	r0, r0, #1
   14b74:	mvn	r1, #0
   14b78:	cmp	r1, r0
   14b7c:	blt	14bf8 <__assert_fail@plt+0x3b10>
   14b80:	b	14c08 <__assert_fail@plt+0x3b20>
   14b84:	ldr	r0, [fp, #-20]	; 0xffffffec
   14b88:	movw	r1, #0
   14b8c:	cmp	r1, r0
   14b90:	blt	14bf8 <__assert_fail@plt+0x3b10>
   14b94:	b	14c08 <__assert_fail@plt+0x3b20>
   14b98:	b	14ba0 <__assert_fail@plt+0x3ab8>
   14b9c:	b	14c08 <__assert_fail@plt+0x3b20>
   14ba0:	ldr	r0, [fp, #-20]	; 0xffffffec
   14ba4:	cmp	r0, #0
   14ba8:	bge	14be8 <__assert_fail@plt+0x3b00>
   14bac:	b	14bb0 <__assert_fail@plt+0x3ac8>
   14bb0:	b	14bd0 <__assert_fail@plt+0x3ae8>
   14bb4:	b	14bd0 <__assert_fail@plt+0x3ae8>
   14bb8:	ldr	r0, [fp, #-20]	; 0xffffffec
   14bbc:	cmn	r0, #1
   14bc0:	bne	14bd0 <__assert_fail@plt+0x3ae8>
   14bc4:	b	14bc8 <__assert_fail@plt+0x3ae0>
   14bc8:	b	14bf8 <__assert_fail@plt+0x3b10>
   14bcc:	b	14bf8 <__assert_fail@plt+0x3b10>
   14bd0:	ldr	r0, [fp, #-20]	; 0xffffffec
   14bd4:	movw	r1, #0
   14bd8:	sdiv	r0, r1, r0
   14bdc:	cmp	r0, #8
   14be0:	blt	14bf8 <__assert_fail@plt+0x3b10>
   14be4:	b	14c08 <__assert_fail@plt+0x3b20>
   14be8:	ldr	r0, [pc, #844]	; 14f3c <__assert_fail@plt+0x3e54>
   14bec:	ldr	r1, [fp, #-20]	; 0xffffffec
   14bf0:	cmp	r0, r1
   14bf4:	bcs	14c08 <__assert_fail@plt+0x3b20>
   14bf8:	ldr	r0, [fp, #-20]	; 0xffffffec
   14bfc:	lsl	r0, r0, #3
   14c00:	str	r0, [fp, #-24]	; 0xffffffe8
   14c04:	b	14ebc <__assert_fail@plt+0x3dd4>
   14c08:	ldr	r0, [fp, #-20]	; 0xffffffec
   14c0c:	lsl	r0, r0, #3
   14c10:	str	r0, [fp, #-24]	; 0xffffffe8
   14c14:	b	14eb0 <__assert_fail@plt+0x3dc8>
   14c18:	b	14c1c <__assert_fail@plt+0x3b34>
   14c1c:	b	14ce4 <__assert_fail@plt+0x3bfc>
   14c20:	ldr	r0, [fp, #-20]	; 0xffffffec
   14c24:	cmp	r0, #0
   14c28:	bge	14c78 <__assert_fail@plt+0x3b90>
   14c2c:	b	14c30 <__assert_fail@plt+0x3b48>
   14c30:	ldr	r0, [fp, #-20]	; 0xffffffec
   14c34:	mvn	r1, #0
   14c38:	subs	r1, r0, r1
   14c3c:	mvn	r2, #-268435456	; 0xf0000000
   14c40:	rscs	r0, r2, r0, asr #31
   14c44:	str	r1, [fp, #-28]	; 0xffffffe4
   14c48:	str	r0, [fp, #-32]	; 0xffffffe0
   14c4c:	blt	14d60 <__assert_fail@plt+0x3c78>
   14c50:	b	14d70 <__assert_fail@plt+0x3c88>
   14c54:	ldr	r0, [fp, #-20]	; 0xffffffec
   14c58:	mvn	r0, r0
   14c5c:	rsbs	r1, r0, #0
   14c60:	mov	r2, #-268435456	; 0xf0000000
   14c64:	sbcs	r0, r2, r0, asr #31
   14c68:	str	r1, [fp, #-36]	; 0xffffffdc
   14c6c:	str	r0, [sp, #40]	; 0x28
   14c70:	blt	14d60 <__assert_fail@plt+0x3c78>
   14c74:	b	14d70 <__assert_fail@plt+0x3c88>
   14c78:	b	14cc4 <__assert_fail@plt+0x3bdc>
   14c7c:	b	14c80 <__assert_fail@plt+0x3b98>
   14c80:	ldr	r0, [fp, #-20]	; 0xffffffec
   14c84:	mov	r1, #-2147483648	; 0x80000000
   14c88:	add	r1, r1, r0, asr #31
   14c8c:	rsbs	r0, r0, #0
   14c90:	rscs	r1, r1, #0
   14c94:	str	r0, [sp, #36]	; 0x24
   14c98:	str	r1, [sp, #32]
   14c9c:	blt	14d60 <__assert_fail@plt+0x3c78>
   14ca0:	b	14d70 <__assert_fail@plt+0x3c88>
   14ca4:	ldr	r0, [fp, #-20]	; 0xffffffec
   14ca8:	movw	r1, #0
   14cac:	cmp	r1, r0
   14cb0:	bge	14d70 <__assert_fail@plt+0x3c88>
   14cb4:	mov	r0, #0
   14cb8:	cmp	r0, #0
   14cbc:	bne	14d60 <__assert_fail@plt+0x3c78>
   14cc0:	b	14d70 <__assert_fail@plt+0x3c88>
   14cc4:	ldr	r0, [fp, #-20]	; 0xffffffec
   14cc8:	rsbs	r1, r0, #0
   14ccc:	mov	r2, #-268435456	; 0xf0000000
   14cd0:	sbcs	r0, r2, r0, asr #31
   14cd4:	str	r1, [sp, #28]
   14cd8:	str	r0, [sp, #24]
   14cdc:	blt	14d60 <__assert_fail@plt+0x3c78>
   14ce0:	b	14d70 <__assert_fail@plt+0x3c88>
   14ce4:	b	14cec <__assert_fail@plt+0x3c04>
   14ce8:	b	14d70 <__assert_fail@plt+0x3c88>
   14cec:	ldr	r0, [fp, #-20]	; 0xffffffec
   14cf0:	cmp	r0, #0
   14cf4:	bge	14d4c <__assert_fail@plt+0x3c64>
   14cf8:	ldr	r0, [fp, #-20]	; 0xffffffec
   14cfc:	cmn	r0, #1
   14d00:	bne	14d10 <__assert_fail@plt+0x3c28>
   14d04:	b	14d08 <__assert_fail@plt+0x3c20>
   14d08:	b	14d70 <__assert_fail@plt+0x3c88>
   14d0c:	b	14d70 <__assert_fail@plt+0x3c88>
   14d10:	ldr	r0, [fp, #-20]	; 0xffffffec
   14d14:	asr	r3, r0, #31
   14d18:	mov	r1, #0
   14d1c:	mov	r2, #-2147483648	; 0x80000000
   14d20:	str	r0, [sp, #20]
   14d24:	mov	r0, r1
   14d28:	mov	r1, r2
   14d2c:	ldr	r2, [sp, #20]
   14d30:	bl	21eb4 <__assert_fail@plt+0x10dcc>
   14d34:	subs	r0, r0, #8
   14d38:	sbcs	r1, r1, #0
   14d3c:	str	r0, [sp, #16]
   14d40:	str	r1, [sp, #12]
   14d44:	blt	14d60 <__assert_fail@plt+0x3c78>
   14d48:	b	14d70 <__assert_fail@plt+0x3c88>
   14d4c:	ldr	r0, [fp, #-20]	; 0xffffffec
   14d50:	asr	r0, r0, #31
   14d54:	cmp	r0, #268435456	; 0x10000000
   14d58:	blt	14d70 <__assert_fail@plt+0x3c88>
   14d5c:	b	14d60 <__assert_fail@plt+0x3c78>
   14d60:	ldr	r0, [fp, #-20]	; 0xffffffec
   14d64:	lsl	r0, r0, #3
   14d68:	str	r0, [fp, #-24]	; 0xffffffe8
   14d6c:	b	14ebc <__assert_fail@plt+0x3dd4>
   14d70:	ldr	r0, [fp, #-20]	; 0xffffffec
   14d74:	lsl	r0, r0, #3
   14d78:	str	r0, [fp, #-24]	; 0xffffffe8
   14d7c:	b	14eb0 <__assert_fail@plt+0x3dc8>
   14d80:	b	14e30 <__assert_fail@plt+0x3d48>
   14d84:	ldr	r0, [fp, #-20]	; 0xffffffec
   14d88:	cmp	r0, #0
   14d8c:	bge	14dc8 <__assert_fail@plt+0x3ce0>
   14d90:	b	14db8 <__assert_fail@plt+0x3cd0>
   14d94:	ldr	r0, [fp, #-20]	; 0xffffffec
   14d98:	mvn	r1, #0
   14d9c:	subs	r1, r0, r1
   14da0:	mvn	r2, #-536870912	; 0xe0000000
   14da4:	rscs	r0, r2, r0, asr #31
   14da8:	str	r1, [sp, #8]
   14dac:	str	r0, [sp, #4]
   14db0:	bcc	14e94 <__assert_fail@plt+0x3dac>
   14db4:	b	14ea4 <__assert_fail@plt+0x3dbc>
   14db8:	ldr	r0, [fp, #-20]	; 0xffffffec
   14dbc:	cmn	r0, #1
   14dc0:	bne	14e94 <__assert_fail@plt+0x3dac>
   14dc4:	b	14ea4 <__assert_fail@plt+0x3dbc>
   14dc8:	b	14dcc <__assert_fail@plt+0x3ce4>
   14dcc:	b	14e1c <__assert_fail@plt+0x3d34>
   14dd0:	b	14e1c <__assert_fail@plt+0x3d34>
   14dd4:	b	14e1c <__assert_fail@plt+0x3d34>
   14dd8:	b	14ddc <__assert_fail@plt+0x3cf4>
   14ddc:	ldr	r0, [fp, #-20]	; 0xffffffec
   14de0:	add	r0, r0, #0
   14de4:	movw	r1, #0
   14de8:	cmp	r1, r0
   14dec:	blt	14e94 <__assert_fail@plt+0x3dac>
   14df0:	b	14ea4 <__assert_fail@plt+0x3dbc>
   14df4:	ldr	r0, [fp, #-20]	; 0xffffffec
   14df8:	movw	r1, #0
   14dfc:	cmp	r1, r0
   14e00:	bge	14ea4 <__assert_fail@plt+0x3dbc>
   14e04:	ldr	r0, [fp, #-20]	; 0xffffffec
   14e08:	sub	r0, r0, #1
   14e0c:	mvn	r1, #0
   14e10:	cmp	r1, r0
   14e14:	blt	14e94 <__assert_fail@plt+0x3dac>
   14e18:	b	14ea4 <__assert_fail@plt+0x3dbc>
   14e1c:	ldr	r0, [fp, #-20]	; 0xffffffec
   14e20:	movw	r1, #0
   14e24:	cmp	r1, r0
   14e28:	blt	14e94 <__assert_fail@plt+0x3dac>
   14e2c:	b	14ea4 <__assert_fail@plt+0x3dbc>
   14e30:	b	14e38 <__assert_fail@plt+0x3d50>
   14e34:	b	14ea4 <__assert_fail@plt+0x3dbc>
   14e38:	ldr	r0, [fp, #-20]	; 0xffffffec
   14e3c:	cmp	r0, #0
   14e40:	bge	14e80 <__assert_fail@plt+0x3d98>
   14e44:	b	14e48 <__assert_fail@plt+0x3d60>
   14e48:	b	14e68 <__assert_fail@plt+0x3d80>
   14e4c:	b	14e68 <__assert_fail@plt+0x3d80>
   14e50:	ldr	r0, [fp, #-20]	; 0xffffffec
   14e54:	cmn	r0, #1
   14e58:	bne	14e68 <__assert_fail@plt+0x3d80>
   14e5c:	b	14e60 <__assert_fail@plt+0x3d78>
   14e60:	b	14e94 <__assert_fail@plt+0x3dac>
   14e64:	b	14e94 <__assert_fail@plt+0x3dac>
   14e68:	ldr	r0, [fp, #-20]	; 0xffffffec
   14e6c:	movw	r1, #0
   14e70:	sdiv	r0, r1, r0
   14e74:	cmp	r0, #8
   14e78:	blt	14e94 <__assert_fail@plt+0x3dac>
   14e7c:	b	14ea4 <__assert_fail@plt+0x3dbc>
   14e80:	ldr	r0, [fp, #-20]	; 0xffffffec
   14e84:	asr	r0, r0, #31
   14e88:	cmp	r0, #536870912	; 0x20000000
   14e8c:	bcc	14ea4 <__assert_fail@plt+0x3dbc>
   14e90:	b	14e94 <__assert_fail@plt+0x3dac>
   14e94:	ldr	r0, [fp, #-20]	; 0xffffffec
   14e98:	lsl	r0, r0, #3
   14e9c:	str	r0, [fp, #-24]	; 0xffffffe8
   14ea0:	b	14ebc <__assert_fail@plt+0x3dd4>
   14ea4:	ldr	r0, [fp, #-20]	; 0xffffffec
   14ea8:	lsl	r0, r0, #3
   14eac:	str	r0, [fp, #-24]	; 0xffffffe8
   14eb0:	ldr	r0, [fp, #-12]
   14eb4:	cmp	r0, #0
   14eb8:	bge	14ed0 <__assert_fail@plt+0x3de8>
   14ebc:	ldr	r0, [fp, #-16]
   14ec0:	movw	r1, #0
   14ec4:	str	r1, [r0]
   14ec8:	str	r1, [fp, #-4]
   14ecc:	b	14f30 <__assert_fail@plt+0x3e48>
   14ed0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14ed4:	add	r0, r0, #1
   14ed8:	str	r0, [fp, #-24]	; 0xffffffe8
   14edc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14ee0:	bl	180b0 <__assert_fail@plt+0x6fc8>
   14ee4:	ldr	lr, [fp, #-16]
   14ee8:	str	r0, [lr]
   14eec:	ldr	r0, [fp, #-16]
   14ef0:	ldr	r0, [r0]
   14ef4:	movw	lr, #0
   14ef8:	cmp	r0, lr
   14efc:	bne	14f0c <__assert_fail@plt+0x3e24>
   14f00:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14f04:	str	r0, [fp, #-4]
   14f08:	b	14f30 <__assert_fail@plt+0x3e48>
   14f0c:	ldr	r0, [fp, #-8]
   14f10:	ldr	r1, [fp, #-12]
   14f14:	ldr	r2, [fp, #-16]
   14f18:	ldr	r2, [r2]
   14f1c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14f20:	bl	13ce8 <__assert_fail@plt+0x2c00>
   14f24:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14f28:	sub	r0, r0, #1
   14f2c:	str	r0, [fp, #-4]
   14f30:	ldr	r0, [fp, #-4]
   14f34:	mov	sp, fp
   14f38:	pop	{fp, pc}
   14f3c:	svcne	0x00ffffff
   14f40:	svceq	0x00ffffff
   14f44:	andhi	r0, r0, r0
   14f48:			; <UNDEFINED> instruction: 0xf0000000
   14f4c:	svcvc	0x00ffffff
   14f50:			; <UNDEFINED> instruction: 0xf0000001
   14f54:			; <UNDEFINED> instruction: 0xffff8000
   14f58:			; <UNDEFINED> instruction: 0xfffff000
   14f5c:			; <UNDEFINED> instruction: 0xfffff001
   14f60:			; <UNDEFINED> instruction: 0xffffe001
   14f64:	push	{fp, lr}
   14f68:	mov	fp, sp
   14f6c:	sub	sp, sp, #8
   14f70:	strb	r0, [fp, #-1]
   14f74:	ldrb	r0, [fp, #-1]
   14f78:	bl	14244 <__assert_fail@plt+0x315c>
   14f7c:	and	r0, r0, #255	; 0xff
   14f80:	movw	lr, #11523	; 0x2d03
   14f84:	movt	lr, #2
   14f88:	add	r0, lr, r0
   14f8c:	ldrsb	r0, [r0]
   14f90:	movw	lr, #0
   14f94:	cmp	lr, r0
   14f98:	movw	r0, #0
   14f9c:	movle	r0, #1
   14fa0:	and	r0, r0, #1
   14fa4:	mov	sp, fp
   14fa8:	pop	{fp, pc}
   14fac:	sub	sp, sp, #4
   14fb0:	str	r0, [sp]
   14fb4:	ldr	r0, [sp]
   14fb8:	movw	r1, #0
   14fbc:	str	r1, [r0]
   14fc0:	add	sp, sp, #4
   14fc4:	bx	lr
   14fc8:	push	{fp, lr}
   14fcc:	mov	fp, sp
   14fd0:	sub	sp, sp, #48	; 0x30
   14fd4:	ldr	ip, [fp, #8]
   14fd8:	str	r0, [fp, #-4]
   14fdc:	str	r1, [fp, #-8]
   14fe0:	str	r2, [fp, #-12]
   14fe4:	str	r3, [fp, #-16]
   14fe8:	ldr	r0, [fp, #8]
   14fec:	ldr	r0, [r0]
   14ff0:	str	r0, [fp, #-20]	; 0xffffffec
   14ff4:	ldr	r0, [fp, #-4]
   14ff8:	movw	r1, #0
   14ffc:	cmp	r0, r1
   15000:	movw	r0, #0
   15004:	movne	r0, #1
   15008:	and	r0, r0, #1
   1500c:	strb	r0, [fp, #-21]	; 0xffffffeb
   15010:	movw	r0, #0
   15014:	strb	r0, [fp, #-22]	; 0xffffffea
   15018:	str	r1, [sp, #20]
   1501c:	ldrb	r0, [fp, #-21]	; 0xffffffeb
   15020:	tst	r0, #1
   15024:	str	ip, [sp, #4]
   15028:	beq	15050 <__assert_fail@plt+0x3f68>
   1502c:	ldr	r0, [fp, #-4]
   15030:	ldr	r0, [r0]
   15034:	str	r0, [sp, #20]
   15038:	ldr	r0, [fp, #-12]
   1503c:	cmp	r0, #0
   15040:	movw	r0, #0
   15044:	moveq	r0, #1
   15048:	and	r0, r0, #1
   1504c:	strb	r0, [fp, #-22]	; 0xffffffea
   15050:	b	15054 <__assert_fail@plt+0x3f6c>
   15054:	ldr	r0, [fp, #-20]	; 0xffffffec
   15058:	str	r0, [sp, #16]
   1505c:	ldr	r0, [sp, #20]
   15060:	cmp	r0, #0
   15064:	bne	150c0 <__assert_fail@plt+0x3fd8>
   15068:	ldrb	r0, [fp, #-22]	; 0xffffffea
   1506c:	tst	r0, #1
   15070:	bne	150c0 <__assert_fail@plt+0x3fd8>
   15074:	b	15078 <__assert_fail@plt+0x3f90>
   15078:	ldr	r0, [fp, #-20]	; 0xffffffec
   1507c:	str	r0, [sp, #16]
   15080:	ldr	r0, [fp, #-8]
   15084:	ldr	r1, [fp, #-12]
   15088:	sub	r2, fp, #16
   1508c:	sub	r3, fp, #20
   15090:	bl	1522c <__assert_fail@plt+0x4144>
   15094:	tst	r0, #1
   15098:	bne	150a0 <__assert_fail@plt+0x3fb8>
   1509c:	b	150bc <__assert_fail@plt+0x3fd4>
   150a0:	ldr	r0, [fp, #-8]
   150a4:	add	r0, r0, #8
   150a8:	str	r0, [fp, #-8]
   150ac:	ldr	r0, [fp, #-12]
   150b0:	sub	r0, r0, #8
   150b4:	str	r0, [fp, #-12]
   150b8:	b	15078 <__assert_fail@plt+0x3f90>
   150bc:	b	150c0 <__assert_fail@plt+0x3fd8>
   150c0:	ldr	r0, [fp, #-12]
   150c4:	cmp	r0, #0
   150c8:	bne	150dc <__assert_fail@plt+0x3ff4>
   150cc:	ldrb	r0, [fp, #-22]	; 0xffffffea
   150d0:	tst	r0, #1
   150d4:	bne	150dc <__assert_fail@plt+0x3ff4>
   150d8:	b	151fc <__assert_fail@plt+0x4114>
   150dc:	ldr	r0, [fp, #-12]
   150e0:	cmp	r0, #0
   150e4:	beq	15124 <__assert_fail@plt+0x403c>
   150e8:	ldr	r0, [fp, #-8]
   150ec:	ldrb	r0, [r0]
   150f0:	cmp	r0, #10
   150f4:	bne	15124 <__assert_fail@plt+0x403c>
   150f8:	ldrb	r0, [fp, #-21]	; 0xffffffeb
   150fc:	tst	r0, #1
   15100:	beq	15124 <__assert_fail@plt+0x403c>
   15104:	ldr	r0, [fp, #-8]
   15108:	add	r0, r0, #1
   1510c:	str	r0, [fp, #-8]
   15110:	ldr	r0, [fp, #-12]
   15114:	mvn	r1, #0
   15118:	add	r0, r0, r1
   1511c:	str	r0, [fp, #-12]
   15120:	b	15054 <__assert_fail@plt+0x3f6c>
   15124:	ldr	r0, [sp, #16]
   15128:	ldr	r1, [fp, #-20]	; 0xffffffec
   1512c:	sub	r0, r0, r1
   15130:	ldr	r1, [fp, #-16]
   15134:	movw	r2, #0
   15138:	sub	r0, r2, r0
   1513c:	add	r0, r1, r0
   15140:	str	r0, [fp, #-16]
   15144:	ldr	r0, [sp, #16]
   15148:	str	r0, [fp, #-20]	; 0xffffffec
   1514c:	ldr	r0, [fp, #-8]
   15150:	ldr	r1, [fp, #-12]
   15154:	add	r0, r0, r1
   15158:	str	r0, [sp, #12]
   1515c:	ldrb	r0, [fp, #-21]	; 0xffffffeb
   15160:	tst	r0, #1
   15164:	beq	15184 <__assert_fail@plt+0x409c>
   15168:	ldr	r0, [fp, #-4]
   1516c:	ldr	r2, [sp, #12]
   15170:	sub	r1, fp, #8
   15174:	sub	r3, fp, #12
   15178:	bl	15844 <__assert_fail@plt+0x475c>
   1517c:	str	r0, [sp, #8]
   15180:	b	1518c <__assert_fail@plt+0x40a4>
   15184:	ldr	r0, [fp, #-8]
   15188:	str	r0, [sp, #8]
   1518c:	ldr	r0, [fp, #-12]
   15190:	cmp	r0, #0
   15194:	beq	151bc <__assert_fail@plt+0x40d4>
   15198:	ldr	r0, [fp, #-12]
   1519c:	cmp	r0, #8
   151a0:	bge	151c8 <__assert_fail@plt+0x40e0>
   151a4:	ldrb	r0, [fp, #-22]	; 0xffffffea
   151a8:	tst	r0, #1
   151ac:	bne	151c8 <__assert_fail@plt+0x40e0>
   151b0:	ldrb	r0, [fp, #-21]	; 0xffffffeb
   151b4:	tst	r0, #1
   151b8:	beq	151c8 <__assert_fail@plt+0x40e0>
   151bc:	movw	r0, #0
   151c0:	str	r0, [fp, #-12]
   151c4:	b	151fc <__assert_fail@plt+0x4114>
   151c8:	ldr	r0, [sp, #8]
   151cc:	ldr	r1, [fp, #-12]
   151d0:	sub	r2, fp, #16
   151d4:	sub	r3, fp, #20
   151d8:	bl	1522c <__assert_fail@plt+0x4144>
   151dc:	tst	r0, #1
   151e0:	bne	151e8 <__assert_fail@plt+0x4100>
   151e4:	b	151fc <__assert_fail@plt+0x4114>
   151e8:	ldr	r0, [sp, #12]
   151ec:	ldr	r1, [fp, #-8]
   151f0:	sub	r0, r0, r1
   151f4:	str	r0, [fp, #-12]
   151f8:	b	15054 <__assert_fail@plt+0x3f6c>
   151fc:	ldr	r0, [fp, #-20]	; 0xffffffec
   15200:	ldr	r1, [fp, #8]
   15204:	ldr	r2, [r1]
   15208:	sub	r0, r2, r0
   1520c:	str	r0, [r1]
   15210:	ldr	r0, [fp, #-12]
   15214:	cmp	r0, #0
   15218:	movw	r0, #0
   1521c:	moveq	r0, #1
   15220:	and	r0, r0, #1
   15224:	mov	sp, fp
   15228:	pop	{fp, pc}
   1522c:	push	{fp, lr}
   15230:	mov	fp, sp
   15234:	sub	sp, sp, #56	; 0x38
   15238:	str	r0, [fp, #-8]
   1523c:	str	r1, [fp, #-12]
   15240:	str	r2, [fp, #-16]
   15244:	str	r3, [fp, #-20]	; 0xffffffec
   15248:	ldr	r0, [fp, #-16]
   1524c:	ldr	r0, [r0]
   15250:	str	r0, [fp, #-24]	; 0xffffffe8
   15254:	ldr	r0, [fp, #-12]
   15258:	cmp	r0, #8
   1525c:	bge	15270 <__assert_fail@plt+0x4188>
   15260:	movw	r0, #0
   15264:	and	r0, r0, #1
   15268:	strb	r0, [fp, #-1]
   1526c:	b	15834 <__assert_fail@plt+0x474c>
   15270:	ldr	r0, [fp, #-8]
   15274:	ldrb	r0, [r0]
   15278:	bl	14f64 <__assert_fail@plt+0x3e7c>
   1527c:	tst	r0, #1
   15280:	beq	15298 <__assert_fail@plt+0x41b0>
   15284:	ldr	r0, [fp, #-8]
   15288:	ldrb	r0, [r0, #1]
   1528c:	bl	14f64 <__assert_fail@plt+0x3e7c>
   15290:	tst	r0, #1
   15294:	bne	152a8 <__assert_fail@plt+0x41c0>
   15298:	movw	r0, #0
   1529c:	and	r0, r0, #1
   152a0:	strb	r0, [fp, #-1]
   152a4:	b	15834 <__assert_fail@plt+0x474c>
   152a8:	ldr	r0, [fp, #-20]	; 0xffffffec
   152ac:	ldr	r0, [r0]
   152b0:	cmp	r0, #0
   152b4:	beq	15334 <__assert_fail@plt+0x424c>
   152b8:	ldr	r0, [fp, #-8]
   152bc:	ldrb	r0, [r0]
   152c0:	bl	14244 <__assert_fail@plt+0x315c>
   152c4:	and	r0, r0, #255	; 0xff
   152c8:	movw	lr, #11523	; 0x2d03
   152cc:	movt	lr, #2
   152d0:	add	r0, lr, r0
   152d4:	ldrsb	r0, [r0]
   152d8:	lsl	r0, r0, #3
   152dc:	ldr	lr, [fp, #-8]
   152e0:	ldrb	lr, [lr, #1]
   152e4:	str	r0, [sp, #28]
   152e8:	mov	r0, lr
   152ec:	bl	14244 <__assert_fail@plt+0x315c>
   152f0:	and	r0, r0, #255	; 0xff
   152f4:	movw	lr, #11523	; 0x2d03
   152f8:	movt	lr, #2
   152fc:	add	r0, lr, r0
   15300:	ldrsb	r0, [r0]
   15304:	asr	r0, r0, #2
   15308:	ldr	lr, [sp, #28]
   1530c:	orr	r0, lr, r0
   15310:	ldr	lr, [fp, #-24]	; 0xffffffe8
   15314:	add	r1, lr, #1
   15318:	str	r1, [fp, #-24]	; 0xffffffe8
   1531c:	strb	r0, [lr]
   15320:	ldr	r0, [fp, #-20]	; 0xffffffec
   15324:	ldr	r1, [r0]
   15328:	mvn	lr, #0
   1532c:	add	r1, r1, lr
   15330:	str	r1, [r0]
   15334:	ldr	r0, [fp, #-8]
   15338:	ldrb	r0, [r0, #2]
   1533c:	cmp	r0, #61	; 0x3d
   15340:	bne	153b8 <__assert_fail@plt+0x42d0>
   15344:	ldr	r0, [fp, #-8]
   15348:	ldrb	r0, [r0, #3]
   1534c:	cmp	r0, #61	; 0x3d
   15350:	bne	15394 <__assert_fail@plt+0x42ac>
   15354:	ldr	r0, [fp, #-8]
   15358:	ldrb	r0, [r0, #4]
   1535c:	cmp	r0, #61	; 0x3d
   15360:	bne	15394 <__assert_fail@plt+0x42ac>
   15364:	ldr	r0, [fp, #-8]
   15368:	ldrb	r0, [r0, #5]
   1536c:	cmp	r0, #61	; 0x3d
   15370:	bne	15394 <__assert_fail@plt+0x42ac>
   15374:	ldr	r0, [fp, #-8]
   15378:	ldrb	r0, [r0, #6]
   1537c:	cmp	r0, #61	; 0x3d
   15380:	bne	15394 <__assert_fail@plt+0x42ac>
   15384:	ldr	r0, [fp, #-8]
   15388:	ldrb	r0, [r0, #7]
   1538c:	cmp	r0, #61	; 0x3d
   15390:	beq	153b4 <__assert_fail@plt+0x42cc>
   15394:	b	15398 <__assert_fail@plt+0x42b0>
   15398:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1539c:	ldr	r1, [fp, #-16]
   153a0:	str	r0, [r1]
   153a4:	movw	r0, #0
   153a8:	and	r0, r0, #1
   153ac:	strb	r0, [fp, #-1]
   153b0:	b	15834 <__assert_fail@plt+0x474c>
   153b4:	b	1581c <__assert_fail@plt+0x4734>
   153b8:	ldr	r0, [fp, #-8]
   153bc:	ldrb	r0, [r0, #2]
   153c0:	bl	14f64 <__assert_fail@plt+0x3e7c>
   153c4:	tst	r0, #1
   153c8:	beq	153e0 <__assert_fail@plt+0x42f8>
   153cc:	ldr	r0, [fp, #-8]
   153d0:	ldrb	r0, [r0, #3]
   153d4:	bl	14f64 <__assert_fail@plt+0x3e7c>
   153d8:	tst	r0, #1
   153dc:	bne	15400 <__assert_fail@plt+0x4318>
   153e0:	b	153e4 <__assert_fail@plt+0x42fc>
   153e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   153e8:	ldr	r1, [fp, #-16]
   153ec:	str	r0, [r1]
   153f0:	movw	r0, #0
   153f4:	and	r0, r0, #1
   153f8:	strb	r0, [fp, #-1]
   153fc:	b	15834 <__assert_fail@plt+0x474c>
   15400:	ldr	r0, [fp, #-20]	; 0xffffffec
   15404:	ldr	r0, [r0]
   15408:	cmp	r0, #0
   1540c:	beq	154c0 <__assert_fail@plt+0x43d8>
   15410:	ldr	r0, [fp, #-8]
   15414:	ldrb	r0, [r0, #1]
   15418:	bl	14244 <__assert_fail@plt+0x315c>
   1541c:	and	r0, r0, #255	; 0xff
   15420:	movw	lr, #11523	; 0x2d03
   15424:	movt	lr, #2
   15428:	add	r0, lr, r0
   1542c:	ldrsb	r0, [r0]
   15430:	lsl	r0, r0, #6
   15434:	ldr	lr, [fp, #-8]
   15438:	ldrb	lr, [lr, #2]
   1543c:	str	r0, [sp, #24]
   15440:	mov	r0, lr
   15444:	bl	14244 <__assert_fail@plt+0x315c>
   15448:	and	r0, r0, #255	; 0xff
   1544c:	movw	lr, #11523	; 0x2d03
   15450:	movt	lr, #2
   15454:	add	r0, lr, r0
   15458:	ldrsb	r0, [r0]
   1545c:	lsl	r0, r0, #1
   15460:	ldr	lr, [sp, #24]
   15464:	orr	r0, lr, r0
   15468:	ldr	lr, [fp, #-8]
   1546c:	ldrb	lr, [lr, #3]
   15470:	str	r0, [sp, #20]
   15474:	mov	r0, lr
   15478:	bl	14244 <__assert_fail@plt+0x315c>
   1547c:	and	r0, r0, #255	; 0xff
   15480:	movw	lr, #11523	; 0x2d03
   15484:	movt	lr, #2
   15488:	add	r0, lr, r0
   1548c:	ldrsb	r0, [r0]
   15490:	asr	r0, r0, #4
   15494:	ldr	lr, [sp, #20]
   15498:	orr	r0, lr, r0
   1549c:	ldr	lr, [fp, #-24]	; 0xffffffe8
   154a0:	add	r1, lr, #1
   154a4:	str	r1, [fp, #-24]	; 0xffffffe8
   154a8:	strb	r0, [lr]
   154ac:	ldr	r0, [fp, #-20]	; 0xffffffec
   154b0:	ldr	r1, [r0]
   154b4:	mvn	lr, #0
   154b8:	add	r1, r1, lr
   154bc:	str	r1, [r0]
   154c0:	ldr	r0, [fp, #-8]
   154c4:	ldrb	r0, [r0, #4]
   154c8:	cmp	r0, #61	; 0x3d
   154cc:	bne	15524 <__assert_fail@plt+0x443c>
   154d0:	ldr	r0, [fp, #-8]
   154d4:	ldrb	r0, [r0, #5]
   154d8:	cmp	r0, #61	; 0x3d
   154dc:	bne	15500 <__assert_fail@plt+0x4418>
   154e0:	ldr	r0, [fp, #-8]
   154e4:	ldrb	r0, [r0, #6]
   154e8:	cmp	r0, #61	; 0x3d
   154ec:	bne	15500 <__assert_fail@plt+0x4418>
   154f0:	ldr	r0, [fp, #-8]
   154f4:	ldrb	r0, [r0, #7]
   154f8:	cmp	r0, #61	; 0x3d
   154fc:	beq	15520 <__assert_fail@plt+0x4438>
   15500:	b	15504 <__assert_fail@plt+0x441c>
   15504:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15508:	ldr	r1, [fp, #-16]
   1550c:	str	r0, [r1]
   15510:	movw	r0, #0
   15514:	and	r0, r0, #1
   15518:	strb	r0, [fp, #-1]
   1551c:	b	15834 <__assert_fail@plt+0x474c>
   15520:	b	15818 <__assert_fail@plt+0x4730>
   15524:	ldr	r0, [fp, #-8]
   15528:	ldrb	r0, [r0, #4]
   1552c:	bl	14f64 <__assert_fail@plt+0x3e7c>
   15530:	tst	r0, #1
   15534:	bne	15558 <__assert_fail@plt+0x4470>
   15538:	b	1553c <__assert_fail@plt+0x4454>
   1553c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15540:	ldr	r1, [fp, #-16]
   15544:	str	r0, [r1]
   15548:	movw	r0, #0
   1554c:	and	r0, r0, #1
   15550:	strb	r0, [fp, #-1]
   15554:	b	15834 <__assert_fail@plt+0x474c>
   15558:	ldr	r0, [fp, #-20]	; 0xffffffec
   1555c:	ldr	r0, [r0]
   15560:	cmp	r0, #0
   15564:	beq	155e4 <__assert_fail@plt+0x44fc>
   15568:	ldr	r0, [fp, #-8]
   1556c:	ldrb	r0, [r0, #3]
   15570:	bl	14244 <__assert_fail@plt+0x315c>
   15574:	and	r0, r0, #255	; 0xff
   15578:	movw	lr, #11523	; 0x2d03
   1557c:	movt	lr, #2
   15580:	add	r0, lr, r0
   15584:	ldrsb	r0, [r0]
   15588:	lsl	r0, r0, #4
   1558c:	ldr	lr, [fp, #-8]
   15590:	ldrb	lr, [lr, #4]
   15594:	str	r0, [sp, #16]
   15598:	mov	r0, lr
   1559c:	bl	14244 <__assert_fail@plt+0x315c>
   155a0:	and	r0, r0, #255	; 0xff
   155a4:	movw	lr, #11523	; 0x2d03
   155a8:	movt	lr, #2
   155ac:	add	r0, lr, r0
   155b0:	ldrsb	r0, [r0]
   155b4:	asr	r0, r0, #1
   155b8:	ldr	lr, [sp, #16]
   155bc:	orr	r0, lr, r0
   155c0:	ldr	lr, [fp, #-24]	; 0xffffffe8
   155c4:	add	r1, lr, #1
   155c8:	str	r1, [fp, #-24]	; 0xffffffe8
   155cc:	strb	r0, [lr]
   155d0:	ldr	r0, [fp, #-20]	; 0xffffffec
   155d4:	ldr	r1, [r0]
   155d8:	mvn	lr, #0
   155dc:	add	r1, r1, lr
   155e0:	str	r1, [r0]
   155e4:	ldr	r0, [fp, #-8]
   155e8:	ldrb	r0, [r0, #5]
   155ec:	cmp	r0, #61	; 0x3d
   155f0:	bne	15638 <__assert_fail@plt+0x4550>
   155f4:	ldr	r0, [fp, #-8]
   155f8:	ldrb	r0, [r0, #6]
   155fc:	cmp	r0, #61	; 0x3d
   15600:	bne	15614 <__assert_fail@plt+0x452c>
   15604:	ldr	r0, [fp, #-8]
   15608:	ldrb	r0, [r0, #7]
   1560c:	cmp	r0, #61	; 0x3d
   15610:	beq	15634 <__assert_fail@plt+0x454c>
   15614:	b	15618 <__assert_fail@plt+0x4530>
   15618:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1561c:	ldr	r1, [fp, #-16]
   15620:	str	r0, [r1]
   15624:	movw	r0, #0
   15628:	and	r0, r0, #1
   1562c:	strb	r0, [fp, #-1]
   15630:	b	15834 <__assert_fail@plt+0x474c>
   15634:	b	15814 <__assert_fail@plt+0x472c>
   15638:	ldr	r0, [fp, #-8]
   1563c:	ldrb	r0, [r0, #5]
   15640:	bl	14f64 <__assert_fail@plt+0x3e7c>
   15644:	tst	r0, #1
   15648:	beq	15660 <__assert_fail@plt+0x4578>
   1564c:	ldr	r0, [fp, #-8]
   15650:	ldrb	r0, [r0, #6]
   15654:	bl	14f64 <__assert_fail@plt+0x3e7c>
   15658:	tst	r0, #1
   1565c:	bne	15680 <__assert_fail@plt+0x4598>
   15660:	b	15664 <__assert_fail@plt+0x457c>
   15664:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15668:	ldr	r1, [fp, #-16]
   1566c:	str	r0, [r1]
   15670:	movw	r0, #0
   15674:	and	r0, r0, #1
   15678:	strb	r0, [fp, #-1]
   1567c:	b	15834 <__assert_fail@plt+0x474c>
   15680:	ldr	r0, [fp, #-20]	; 0xffffffec
   15684:	ldr	r0, [r0]
   15688:	cmp	r0, #0
   1568c:	beq	15740 <__assert_fail@plt+0x4658>
   15690:	ldr	r0, [fp, #-8]
   15694:	ldrb	r0, [r0, #4]
   15698:	bl	14244 <__assert_fail@plt+0x315c>
   1569c:	and	r0, r0, #255	; 0xff
   156a0:	movw	lr, #11523	; 0x2d03
   156a4:	movt	lr, #2
   156a8:	add	r0, lr, r0
   156ac:	ldrsb	r0, [r0]
   156b0:	lsl	r0, r0, #7
   156b4:	ldr	lr, [fp, #-8]
   156b8:	ldrb	lr, [lr, #5]
   156bc:	str	r0, [sp, #12]
   156c0:	mov	r0, lr
   156c4:	bl	14244 <__assert_fail@plt+0x315c>
   156c8:	and	r0, r0, #255	; 0xff
   156cc:	movw	lr, #11523	; 0x2d03
   156d0:	movt	lr, #2
   156d4:	add	r0, lr, r0
   156d8:	ldrsb	r0, [r0]
   156dc:	lsl	r0, r0, #2
   156e0:	ldr	lr, [sp, #12]
   156e4:	orr	r0, lr, r0
   156e8:	ldr	lr, [fp, #-8]
   156ec:	ldrb	lr, [lr, #6]
   156f0:	str	r0, [sp, #8]
   156f4:	mov	r0, lr
   156f8:	bl	14244 <__assert_fail@plt+0x315c>
   156fc:	and	r0, r0, #255	; 0xff
   15700:	movw	lr, #11523	; 0x2d03
   15704:	movt	lr, #2
   15708:	add	r0, lr, r0
   1570c:	ldrsb	r0, [r0]
   15710:	asr	r0, r0, #3
   15714:	ldr	lr, [sp, #8]
   15718:	orr	r0, lr, r0
   1571c:	ldr	lr, [fp, #-24]	; 0xffffffe8
   15720:	add	r1, lr, #1
   15724:	str	r1, [fp, #-24]	; 0xffffffe8
   15728:	strb	r0, [lr]
   1572c:	ldr	r0, [fp, #-20]	; 0xffffffec
   15730:	ldr	r1, [r0]
   15734:	mvn	lr, #0
   15738:	add	r1, r1, lr
   1573c:	str	r1, [r0]
   15740:	ldr	r0, [fp, #-8]
   15744:	ldrb	r0, [r0, #7]
   15748:	cmp	r0, #61	; 0x3d
   1574c:	beq	15810 <__assert_fail@plt+0x4728>
   15750:	ldr	r0, [fp, #-8]
   15754:	ldrb	r0, [r0, #7]
   15758:	bl	14f64 <__assert_fail@plt+0x3e7c>
   1575c:	tst	r0, #1
   15760:	bne	15784 <__assert_fail@plt+0x469c>
   15764:	b	15768 <__assert_fail@plt+0x4680>
   15768:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1576c:	ldr	r1, [fp, #-16]
   15770:	str	r0, [r1]
   15774:	movw	r0, #0
   15778:	and	r0, r0, #1
   1577c:	strb	r0, [fp, #-1]
   15780:	b	15834 <__assert_fail@plt+0x474c>
   15784:	ldr	r0, [fp, #-20]	; 0xffffffec
   15788:	ldr	r0, [r0]
   1578c:	cmp	r0, #0
   15790:	beq	1580c <__assert_fail@plt+0x4724>
   15794:	ldr	r0, [fp, #-8]
   15798:	ldrb	r0, [r0, #6]
   1579c:	bl	14244 <__assert_fail@plt+0x315c>
   157a0:	and	r0, r0, #255	; 0xff
   157a4:	movw	lr, #11523	; 0x2d03
   157a8:	movt	lr, #2
   157ac:	add	r0, lr, r0
   157b0:	ldrsb	r0, [r0]
   157b4:	lsl	r0, r0, #5
   157b8:	ldr	lr, [fp, #-8]
   157bc:	ldrb	lr, [lr, #7]
   157c0:	str	r0, [sp, #4]
   157c4:	mov	r0, lr
   157c8:	bl	14244 <__assert_fail@plt+0x315c>
   157cc:	and	r0, r0, #255	; 0xff
   157d0:	movw	lr, #11523	; 0x2d03
   157d4:	movt	lr, #2
   157d8:	add	r0, lr, r0
   157dc:	ldrsb	r0, [r0]
   157e0:	ldr	lr, [sp, #4]
   157e4:	orr	r0, lr, r0
   157e8:	ldr	lr, [fp, #-24]	; 0xffffffe8
   157ec:	add	r1, lr, #1
   157f0:	str	r1, [fp, #-24]	; 0xffffffe8
   157f4:	strb	r0, [lr]
   157f8:	ldr	r0, [fp, #-20]	; 0xffffffec
   157fc:	ldr	r1, [r0]
   15800:	mvn	lr, #0
   15804:	add	r1, r1, lr
   15808:	str	r1, [r0]
   1580c:	b	15810 <__assert_fail@plt+0x4728>
   15810:	b	15814 <__assert_fail@plt+0x472c>
   15814:	b	15818 <__assert_fail@plt+0x4730>
   15818:	b	1581c <__assert_fail@plt+0x4734>
   1581c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15820:	ldr	r1, [fp, #-16]
   15824:	str	r0, [r1]
   15828:	movw	r0, #1
   1582c:	and	r0, r0, #1
   15830:	strb	r0, [fp, #-1]
   15834:	ldrb	r0, [fp, #-1]
   15838:	and	r0, r0, #1
   1583c:	mov	sp, fp
   15840:	pop	{fp, pc}
   15844:	push	{fp, lr}
   15848:	mov	fp, sp
   1584c:	sub	sp, sp, #32
   15850:	str	r0, [fp, #-8]
   15854:	str	r1, [fp, #-12]
   15858:	str	r2, [sp, #16]
   1585c:	str	r3, [sp, #12]
   15860:	ldr	r0, [fp, #-8]
   15864:	ldr	r0, [r0]
   15868:	cmp	r0, #8
   1586c:	bne	1587c <__assert_fail@plt+0x4794>
   15870:	ldr	r0, [fp, #-8]
   15874:	movw	r1, #0
   15878:	str	r1, [r0]
   1587c:	ldr	r0, [fp, #-8]
   15880:	ldr	r0, [r0]
   15884:	cmp	r0, #0
   15888:	bne	158fc <__assert_fail@plt+0x4814>
   1588c:	ldr	r0, [fp, #-12]
   15890:	ldr	r0, [r0]
   15894:	str	r0, [sp, #8]
   15898:	ldr	r0, [sp, #16]
   1589c:	ldr	r1, [fp, #-12]
   158a0:	ldr	r1, [r1]
   158a4:	sub	r0, r0, r1
   158a8:	movw	r1, #8
   158ac:	cmp	r1, r0
   158b0:	bgt	158f8 <__assert_fail@plt+0x4810>
   158b4:	ldr	r0, [sp, #8]
   158b8:	mov	r1, #10
   158bc:	mov	r2, #8
   158c0:	bl	11040 <memchr@plt>
   158c4:	movw	r1, #0
   158c8:	cmp	r0, r1
   158cc:	bne	158f8 <__assert_fail@plt+0x4810>
   158d0:	ldr	r0, [fp, #-12]
   158d4:	ldr	r1, [r0]
   158d8:	add	r1, r1, #8
   158dc:	str	r1, [r0]
   158e0:	ldr	r0, [sp, #12]
   158e4:	movw	r1, #8
   158e8:	str	r1, [r0]
   158ec:	ldr	r0, [sp, #8]
   158f0:	str	r0, [fp, #-4]
   158f4:	b	159a0 <__assert_fail@plt+0x48b8>
   158f8:	b	158fc <__assert_fail@plt+0x4814>
   158fc:	ldr	r0, [fp, #-12]
   15900:	ldr	r0, [r0]
   15904:	str	r0, [sp, #4]
   15908:	ldr	r0, [sp, #4]
   1590c:	ldr	r1, [sp, #16]
   15910:	cmp	r0, r1
   15914:	bcs	15978 <__assert_fail@plt+0x4890>
   15918:	ldr	r0, [sp, #4]
   1591c:	add	r1, r0, #1
   15920:	str	r1, [sp, #4]
   15924:	ldrb	r0, [r0]
   15928:	strb	r0, [sp, #3]
   1592c:	ldrb	r0, [sp, #3]
   15930:	cmp	r0, #10
   15934:	beq	15974 <__assert_fail@plt+0x488c>
   15938:	ldrb	r0, [sp, #3]
   1593c:	ldr	r1, [fp, #-8]
   15940:	add	r1, r1, #4
   15944:	ldr	r2, [fp, #-8]
   15948:	ldr	r3, [r2]
   1594c:	add	ip, r3, #1
   15950:	str	ip, [r2]
   15954:	add	r1, r1, r3
   15958:	strb	r0, [r1]
   1595c:	ldr	r0, [fp, #-8]
   15960:	ldr	r0, [r0]
   15964:	cmp	r0, #8
   15968:	bne	15970 <__assert_fail@plt+0x4888>
   1596c:	b	15978 <__assert_fail@plt+0x4890>
   15970:	b	15974 <__assert_fail@plt+0x488c>
   15974:	b	15908 <__assert_fail@plt+0x4820>
   15978:	ldr	r0, [sp, #4]
   1597c:	ldr	r1, [fp, #-12]
   15980:	str	r0, [r1]
   15984:	ldr	r0, [fp, #-8]
   15988:	ldr	r0, [r0]
   1598c:	ldr	r1, [sp, #12]
   15990:	str	r0, [r1]
   15994:	ldr	r0, [fp, #-8]
   15998:	add	r0, r0, #4
   1599c:	str	r0, [fp, #-4]
   159a0:	ldr	r0, [fp, #-4]
   159a4:	mov	sp, fp
   159a8:	pop	{fp, pc}
   159ac:	push	{fp, lr}
   159b0:	mov	fp, sp
   159b4:	sub	sp, sp, #32
   159b8:	ldr	ip, [fp, #8]
   159bc:	str	r0, [fp, #-8]
   159c0:	str	r1, [fp, #-12]
   159c4:	str	r2, [sp, #16]
   159c8:	str	r3, [sp, #12]
   159cc:	ldr	r0, [sp, #16]
   159d0:	asr	r0, r0, #3
   159d4:	add	r0, r0, #1
   159d8:	movw	r1, #5
   159dc:	mul	r0, r0, r1
   159e0:	str	r0, [sp, #8]
   159e4:	ldr	r0, [sp, #8]
   159e8:	str	ip, [sp, #4]
   159ec:	bl	180b0 <__assert_fail@plt+0x6fc8>
   159f0:	ldr	r1, [sp, #12]
   159f4:	str	r0, [r1]
   159f8:	ldr	r0, [sp, #12]
   159fc:	ldr	r0, [r0]
   15a00:	movw	r1, #0
   15a04:	cmp	r0, r1
   15a08:	bne	15a1c <__assert_fail@plt+0x4934>
   15a0c:	movw	r0, #1
   15a10:	and	r0, r0, #1
   15a14:	strb	r0, [fp, #-1]
   15a18:	b	15a94 <__assert_fail@plt+0x49ac>
   15a1c:	ldr	r0, [fp, #-8]
   15a20:	ldr	r1, [fp, #-12]
   15a24:	ldr	r2, [sp, #16]
   15a28:	ldr	r3, [sp, #12]
   15a2c:	ldr	r3, [r3]
   15a30:	add	ip, sp, #8
   15a34:	str	ip, [sp]
   15a38:	bl	14fc8 <__assert_fail@plt+0x3ee0>
   15a3c:	tst	r0, #1
   15a40:	bne	15a6c <__assert_fail@plt+0x4984>
   15a44:	ldr	r0, [sp, #12]
   15a48:	ldr	r0, [r0]
   15a4c:	bl	17f48 <__assert_fail@plt+0x6e60>
   15a50:	ldr	r0, [sp, #12]
   15a54:	movw	lr, #0
   15a58:	str	lr, [r0]
   15a5c:	movw	r0, #0
   15a60:	and	r0, r0, #1
   15a64:	strb	r0, [fp, #-1]
   15a68:	b	15a94 <__assert_fail@plt+0x49ac>
   15a6c:	ldr	r0, [fp, #8]
   15a70:	movw	r1, #0
   15a74:	cmp	r0, r1
   15a78:	beq	15a88 <__assert_fail@plt+0x49a0>
   15a7c:	ldr	r0, [sp, #8]
   15a80:	ldr	r1, [fp, #8]
   15a84:	str	r0, [r1]
   15a88:	movw	r0, #1
   15a8c:	and	r0, r0, #1
   15a90:	strb	r0, [fp, #-1]
   15a94:	ldrb	r0, [fp, #-1]
   15a98:	and	r0, r0, #1
   15a9c:	mov	sp, fp
   15aa0:	pop	{fp, pc}
   15aa4:	push	{fp, lr}
   15aa8:	mov	fp, sp
   15aac:	sub	sp, sp, #48	; 0x30
   15ab0:	str	r0, [fp, #-4]
   15ab4:	str	r1, [fp, #-8]
   15ab8:	str	r2, [fp, #-12]
   15abc:	str	r3, [fp, #-16]
   15ac0:	ldr	r0, [fp, #-16]
   15ac4:	asr	r1, r0, #31
   15ac8:	add	r1, r0, r1, lsr #30
   15acc:	bic	r1, r1, #3
   15ad0:	sub	r0, r0, r1
   15ad4:	cmp	r0, #0
   15ad8:	bne	15b0c <__assert_fail@plt+0x4a24>
   15adc:	ldr	r0, [fp, #-8]
   15ae0:	ldr	r1, [fp, #-16]
   15ae4:	asr	r1, r1, #2
   15ae8:	movw	r2, #3
   15aec:	mul	r1, r1, r2
   15af0:	cmp	r0, r1
   15af4:	bne	15b0c <__assert_fail@plt+0x4a24>
   15af8:	ldr	r0, [fp, #-4]
   15afc:	ldr	r1, [fp, #-8]
   15b00:	ldr	r2, [fp, #-12]
   15b04:	bl	15dd0 <__assert_fail@plt+0x4ce8>
   15b08:	b	15dc8 <__assert_fail@plt+0x4ce0>
   15b0c:	b	15b10 <__assert_fail@plt+0x4a28>
   15b10:	ldr	r0, [fp, #-8]
   15b14:	cmp	r0, #0
   15b18:	movw	r0, #0
   15b1c:	str	r0, [fp, #-20]	; 0xffffffec
   15b20:	beq	15b38 <__assert_fail@plt+0x4a50>
   15b24:	ldr	r0, [fp, #-16]
   15b28:	cmp	r0, #0
   15b2c:	movw	r0, #0
   15b30:	movne	r0, #1
   15b34:	str	r0, [fp, #-20]	; 0xffffffec
   15b38:	ldr	r0, [fp, #-20]	; 0xffffffec
   15b3c:	tst	r0, #1
   15b40:	beq	15db0 <__assert_fail@plt+0x4cc8>
   15b44:	ldr	r0, [fp, #-4]
   15b48:	ldrb	r0, [r0]
   15b4c:	bl	15f3c <__assert_fail@plt+0x4e54>
   15b50:	and	r0, r0, #255	; 0xff
   15b54:	asr	r0, r0, #2
   15b58:	and	r0, r0, #63	; 0x3f
   15b5c:	movw	lr, #11779	; 0x2e03
   15b60:	movt	lr, #2
   15b64:	add	r0, lr, r0
   15b68:	ldrb	r0, [r0]
   15b6c:	ldr	lr, [fp, #-12]
   15b70:	add	r1, lr, #1
   15b74:	str	r1, [fp, #-12]
   15b78:	strb	r0, [lr]
   15b7c:	ldr	r0, [fp, #-16]
   15b80:	mvn	r1, #0
   15b84:	add	r0, r0, r1
   15b88:	str	r0, [fp, #-16]
   15b8c:	cmp	r0, #0
   15b90:	bne	15b98 <__assert_fail@plt+0x4ab0>
   15b94:	b	15db0 <__assert_fail@plt+0x4cc8>
   15b98:	ldr	r0, [fp, #-4]
   15b9c:	ldrb	r0, [r0]
   15ba0:	bl	15f3c <__assert_fail@plt+0x4e54>
   15ba4:	and	r0, r0, #255	; 0xff
   15ba8:	lsl	r0, r0, #4
   15bac:	ldr	lr, [fp, #-8]
   15bb0:	mvn	r1, #0
   15bb4:	add	r1, lr, r1
   15bb8:	str	r1, [fp, #-8]
   15bbc:	cmp	r1, #0
   15bc0:	str	r0, [sp, #24]
   15bc4:	beq	15be4 <__assert_fail@plt+0x4afc>
   15bc8:	ldr	r0, [fp, #-4]
   15bcc:	ldrb	r0, [r0, #1]
   15bd0:	bl	15f3c <__assert_fail@plt+0x4e54>
   15bd4:	and	r0, r0, #255	; 0xff
   15bd8:	asr	r0, r0, #4
   15bdc:	str	r0, [sp, #20]
   15be0:	b	15bf0 <__assert_fail@plt+0x4b08>
   15be4:	movw	r0, #0
   15be8:	str	r0, [sp, #20]
   15bec:	b	15bf0 <__assert_fail@plt+0x4b08>
   15bf0:	ldr	r0, [sp, #20]
   15bf4:	ldr	r1, [sp, #24]
   15bf8:	add	r0, r1, r0
   15bfc:	and	r0, r0, #63	; 0x3f
   15c00:	movw	r2, #11779	; 0x2e03
   15c04:	movt	r2, #2
   15c08:	add	r0, r2, r0
   15c0c:	ldrb	r0, [r0]
   15c10:	ldr	r2, [fp, #-12]
   15c14:	add	r3, r2, #1
   15c18:	str	r3, [fp, #-12]
   15c1c:	strb	r0, [r2]
   15c20:	ldr	r0, [fp, #-16]
   15c24:	mvn	r2, #0
   15c28:	add	r0, r0, r2
   15c2c:	str	r0, [fp, #-16]
   15c30:	cmp	r0, #0
   15c34:	bne	15c3c <__assert_fail@plt+0x4b54>
   15c38:	b	15db0 <__assert_fail@plt+0x4cc8>
   15c3c:	ldr	r0, [fp, #-8]
   15c40:	cmp	r0, #0
   15c44:	beq	15cc8 <__assert_fail@plt+0x4be0>
   15c48:	ldr	r0, [fp, #-4]
   15c4c:	ldrb	r0, [r0, #1]
   15c50:	bl	15f3c <__assert_fail@plt+0x4e54>
   15c54:	and	r0, r0, #255	; 0xff
   15c58:	lsl	r0, r0, #2
   15c5c:	ldr	lr, [fp, #-8]
   15c60:	mvn	r1, #0
   15c64:	add	r1, lr, r1
   15c68:	str	r1, [fp, #-8]
   15c6c:	cmp	r1, #0
   15c70:	str	r0, [sp, #16]
   15c74:	beq	15c94 <__assert_fail@plt+0x4bac>
   15c78:	ldr	r0, [fp, #-4]
   15c7c:	ldrb	r0, [r0, #2]
   15c80:	bl	15f3c <__assert_fail@plt+0x4e54>
   15c84:	and	r0, r0, #255	; 0xff
   15c88:	asr	r0, r0, #6
   15c8c:	str	r0, [sp, #12]
   15c90:	b	15ca0 <__assert_fail@plt+0x4bb8>
   15c94:	movw	r0, #0
   15c98:	str	r0, [sp, #12]
   15c9c:	b	15ca0 <__assert_fail@plt+0x4bb8>
   15ca0:	ldr	r0, [sp, #12]
   15ca4:	ldr	r1, [sp, #16]
   15ca8:	add	r0, r1, r0
   15cac:	and	r0, r0, #63	; 0x3f
   15cb0:	movw	r2, #11779	; 0x2e03
   15cb4:	movt	r2, #2
   15cb8:	add	r0, r2, r0
   15cbc:	ldrb	r0, [r0]
   15cc0:	str	r0, [sp, #8]
   15cc4:	b	15cd4 <__assert_fail@plt+0x4bec>
   15cc8:	movw	r0, #61	; 0x3d
   15ccc:	str	r0, [sp, #8]
   15cd0:	b	15cd4 <__assert_fail@plt+0x4bec>
   15cd4:	ldr	r0, [sp, #8]
   15cd8:	ldr	r1, [fp, #-12]
   15cdc:	add	r2, r1, #1
   15ce0:	str	r2, [fp, #-12]
   15ce4:	strb	r0, [r1]
   15ce8:	ldr	r0, [fp, #-16]
   15cec:	mvn	r1, #0
   15cf0:	add	r0, r0, r1
   15cf4:	str	r0, [fp, #-16]
   15cf8:	cmp	r0, #0
   15cfc:	bne	15d04 <__assert_fail@plt+0x4c1c>
   15d00:	b	15db0 <__assert_fail@plt+0x4cc8>
   15d04:	ldr	r0, [fp, #-8]
   15d08:	cmp	r0, #0
   15d0c:	beq	15d3c <__assert_fail@plt+0x4c54>
   15d10:	ldr	r0, [fp, #-4]
   15d14:	ldrb	r0, [r0, #2]
   15d18:	bl	15f3c <__assert_fail@plt+0x4e54>
   15d1c:	and	r0, r0, #255	; 0xff
   15d20:	and	r0, r0, #63	; 0x3f
   15d24:	movw	lr, #11779	; 0x2e03
   15d28:	movt	lr, #2
   15d2c:	add	r0, lr, r0
   15d30:	ldrb	r0, [r0]
   15d34:	str	r0, [sp, #4]
   15d38:	b	15d48 <__assert_fail@plt+0x4c60>
   15d3c:	movw	r0, #61	; 0x3d
   15d40:	str	r0, [sp, #4]
   15d44:	b	15d48 <__assert_fail@plt+0x4c60>
   15d48:	ldr	r0, [sp, #4]
   15d4c:	ldr	r1, [fp, #-12]
   15d50:	add	r2, r1, #1
   15d54:	str	r2, [fp, #-12]
   15d58:	strb	r0, [r1]
   15d5c:	ldr	r0, [fp, #-16]
   15d60:	mvn	r1, #0
   15d64:	add	r0, r0, r1
   15d68:	str	r0, [fp, #-16]
   15d6c:	cmp	r0, #0
   15d70:	bne	15d78 <__assert_fail@plt+0x4c90>
   15d74:	b	15db0 <__assert_fail@plt+0x4cc8>
   15d78:	ldr	r0, [fp, #-8]
   15d7c:	cmp	r0, #0
   15d80:	beq	15d94 <__assert_fail@plt+0x4cac>
   15d84:	ldr	r0, [fp, #-8]
   15d88:	mvn	r1, #0
   15d8c:	add	r0, r0, r1
   15d90:	str	r0, [fp, #-8]
   15d94:	ldr	r0, [fp, #-8]
   15d98:	cmp	r0, #0
   15d9c:	beq	15dac <__assert_fail@plt+0x4cc4>
   15da0:	ldr	r0, [fp, #-4]
   15da4:	add	r0, r0, #3
   15da8:	str	r0, [fp, #-4]
   15dac:	b	15b10 <__assert_fail@plt+0x4a28>
   15db0:	ldr	r0, [fp, #-16]
   15db4:	cmp	r0, #0
   15db8:	beq	15dc8 <__assert_fail@plt+0x4ce0>
   15dbc:	ldr	r0, [fp, #-12]
   15dc0:	movw	r1, #0
   15dc4:	strb	r1, [r0]
   15dc8:	mov	sp, fp
   15dcc:	pop	{fp, pc}
   15dd0:	push	{fp, lr}
   15dd4:	mov	fp, sp
   15dd8:	sub	sp, sp, #24
   15ddc:	str	r0, [fp, #-4]
   15de0:	str	r1, [fp, #-8]
   15de4:	str	r2, [sp, #12]
   15de8:	ldr	r0, [fp, #-8]
   15dec:	cmp	r0, #0
   15df0:	beq	15f34 <__assert_fail@plt+0x4e4c>
   15df4:	ldr	r0, [fp, #-4]
   15df8:	ldrb	r0, [r0]
   15dfc:	bl	15f3c <__assert_fail@plt+0x4e54>
   15e00:	and	r0, r0, #255	; 0xff
   15e04:	asr	r0, r0, #2
   15e08:	and	r0, r0, #63	; 0x3f
   15e0c:	movw	lr, #11779	; 0x2e03
   15e10:	movt	lr, #2
   15e14:	add	r0, lr, r0
   15e18:	ldrb	r0, [r0]
   15e1c:	ldr	lr, [sp, #12]
   15e20:	add	r1, lr, #1
   15e24:	str	r1, [sp, #12]
   15e28:	strb	r0, [lr]
   15e2c:	ldr	r0, [fp, #-4]
   15e30:	ldrb	r0, [r0]
   15e34:	bl	15f3c <__assert_fail@plt+0x4e54>
   15e38:	and	r0, r0, #255	; 0xff
   15e3c:	lsl	r0, r0, #4
   15e40:	ldr	r1, [fp, #-4]
   15e44:	ldrb	r1, [r1, #1]
   15e48:	str	r0, [sp, #8]
   15e4c:	mov	r0, r1
   15e50:	bl	15f3c <__assert_fail@plt+0x4e54>
   15e54:	and	r0, r0, #255	; 0xff
   15e58:	asr	r0, r0, #4
   15e5c:	ldr	r1, [sp, #8]
   15e60:	add	r0, r1, r0
   15e64:	and	r0, r0, #63	; 0x3f
   15e68:	movw	r1, #11779	; 0x2e03
   15e6c:	movt	r1, #2
   15e70:	add	r0, r1, r0
   15e74:	ldrb	r0, [r0]
   15e78:	ldr	r1, [sp, #12]
   15e7c:	add	lr, r1, #1
   15e80:	str	lr, [sp, #12]
   15e84:	strb	r0, [r1]
   15e88:	ldr	r0, [fp, #-4]
   15e8c:	ldrb	r0, [r0, #1]
   15e90:	bl	15f3c <__assert_fail@plt+0x4e54>
   15e94:	and	r0, r0, #255	; 0xff
   15e98:	lsl	r0, r0, #2
   15e9c:	ldr	r1, [fp, #-4]
   15ea0:	ldrb	r1, [r1, #2]
   15ea4:	str	r0, [sp, #4]
   15ea8:	mov	r0, r1
   15eac:	bl	15f3c <__assert_fail@plt+0x4e54>
   15eb0:	and	r0, r0, #255	; 0xff
   15eb4:	asr	r0, r0, #6
   15eb8:	ldr	r1, [sp, #4]
   15ebc:	add	r0, r1, r0
   15ec0:	and	r0, r0, #63	; 0x3f
   15ec4:	movw	r1, #11779	; 0x2e03
   15ec8:	movt	r1, #2
   15ecc:	add	r0, r1, r0
   15ed0:	ldrb	r0, [r0]
   15ed4:	ldr	r1, [sp, #12]
   15ed8:	add	lr, r1, #1
   15edc:	str	lr, [sp, #12]
   15ee0:	strb	r0, [r1]
   15ee4:	ldr	r0, [fp, #-4]
   15ee8:	ldrb	r0, [r0, #2]
   15eec:	bl	15f3c <__assert_fail@plt+0x4e54>
   15ef0:	and	r0, r0, #255	; 0xff
   15ef4:	and	r0, r0, #63	; 0x3f
   15ef8:	movw	r1, #11779	; 0x2e03
   15efc:	movt	r1, #2
   15f00:	add	r0, r1, r0
   15f04:	ldrb	r0, [r0]
   15f08:	ldr	r1, [sp, #12]
   15f0c:	add	lr, r1, #1
   15f10:	str	lr, [sp, #12]
   15f14:	strb	r0, [r1]
   15f18:	ldr	r0, [fp, #-8]
   15f1c:	sub	r0, r0, #3
   15f20:	str	r0, [fp, #-8]
   15f24:	ldr	r0, [fp, #-4]
   15f28:	add	r0, r0, #3
   15f2c:	str	r0, [fp, #-4]
   15f30:	b	15de8 <__assert_fail@plt+0x4d00>
   15f34:	mov	sp, fp
   15f38:	pop	{fp, pc}
   15f3c:	sub	sp, sp, #4
   15f40:	strb	r0, [sp, #3]
   15f44:	ldrb	r0, [sp, #3]
   15f48:	add	sp, sp, #4
   15f4c:	bx	lr
   15f50:	push	{fp, lr}
   15f54:	mov	fp, sp
   15f58:	sub	sp, sp, #80	; 0x50
   15f5c:	str	r0, [fp, #-8]
   15f60:	str	r1, [fp, #-12]
   15f64:	str	r2, [fp, #-16]
   15f68:	ldr	r0, [fp, #-12]
   15f6c:	movw	r1, #21846	; 0x5556
   15f70:	movt	r1, #21845	; 0x5555
   15f74:	smmul	r1, r0, r1
   15f78:	add	r1, r1, r1, lsr #31
   15f7c:	add	r2, r1, r1, lsl #1
   15f80:	sub	r0, r0, r2
   15f84:	cmp	r0, #0
   15f88:	movw	r0, #0
   15f8c:	movne	r0, #1
   15f90:	and	r0, r0, #1
   15f94:	add	r0, r1, r0
   15f98:	str	r0, [fp, #-20]	; 0xffffffec
   15f9c:	b	16208 <__assert_fail@plt+0x5120>
   15fa0:	b	15fa4 <__assert_fail@plt+0x4ebc>
   15fa4:	b	16050 <__assert_fail@plt+0x4f68>
   15fa8:	ldr	r0, [fp, #-20]	; 0xffffffec
   15fac:	cmp	r0, #0
   15fb0:	bge	15fe4 <__assert_fail@plt+0x4efc>
   15fb4:	b	15fb8 <__assert_fail@plt+0x4ed0>
   15fb8:	ldr	r0, [fp, #-20]	; 0xffffffec
   15fbc:	cmp	r0, #31
   15fc0:	blt	160b0 <__assert_fail@plt+0x4fc8>
   15fc4:	b	160c4 <__assert_fail@plt+0x4fdc>
   15fc8:	ldr	r0, [fp, #-20]	; 0xffffffec
   15fcc:	mvn	r1, #0
   15fd0:	sub	r0, r1, r0
   15fd4:	mvn	r1, #30
   15fd8:	cmp	r1, r0
   15fdc:	ble	160b0 <__assert_fail@plt+0x4fc8>
   15fe0:	b	160c4 <__assert_fail@plt+0x4fdc>
   15fe4:	b	15fe8 <__assert_fail@plt+0x4f00>
   15fe8:	b	1603c <__assert_fail@plt+0x4f54>
   15fec:	b	1603c <__assert_fail@plt+0x4f54>
   15ff0:	b	1603c <__assert_fail@plt+0x4f54>
   15ff4:	b	15ff8 <__assert_fail@plt+0x4f10>
   15ff8:	ldr	r0, [fp, #-20]	; 0xffffffec
   15ffc:	mvn	r1, #127	; 0x7f
   16000:	add	r0, r0, r1
   16004:	movw	r1, #0
   16008:	cmp	r1, r0
   1600c:	blt	160b0 <__assert_fail@plt+0x4fc8>
   16010:	b	160c4 <__assert_fail@plt+0x4fdc>
   16014:	ldr	r0, [fp, #-20]	; 0xffffffec
   16018:	movw	r1, #0
   1601c:	cmp	r1, r0
   16020:	bge	160c4 <__assert_fail@plt+0x4fdc>
   16024:	ldr	r0, [fp, #-20]	; 0xffffffec
   16028:	sub	r0, r0, #1
   1602c:	movw	r1, #127	; 0x7f
   16030:	cmp	r1, r0
   16034:	blt	160b0 <__assert_fail@plt+0x4fc8>
   16038:	b	160c4 <__assert_fail@plt+0x4fdc>
   1603c:	ldr	r0, [fp, #-20]	; 0xffffffec
   16040:	mvn	r1, #31
   16044:	cmp	r1, r0
   16048:	blt	160b0 <__assert_fail@plt+0x4fc8>
   1604c:	b	160c4 <__assert_fail@plt+0x4fdc>
   16050:	b	16058 <__assert_fail@plt+0x4f70>
   16054:	b	160c4 <__assert_fail@plt+0x4fdc>
   16058:	ldr	r0, [fp, #-20]	; 0xffffffec
   1605c:	cmp	r0, #0
   16060:	bge	160a0 <__assert_fail@plt+0x4fb8>
   16064:	b	16068 <__assert_fail@plt+0x4f80>
   16068:	b	16088 <__assert_fail@plt+0x4fa0>
   1606c:	b	16088 <__assert_fail@plt+0x4fa0>
   16070:	ldr	r0, [fp, #-20]	; 0xffffffec
   16074:	cmn	r0, #1
   16078:	bne	16088 <__assert_fail@plt+0x4fa0>
   1607c:	b	16080 <__assert_fail@plt+0x4f98>
   16080:	b	160c4 <__assert_fail@plt+0x4fdc>
   16084:	b	160c4 <__assert_fail@plt+0x4fdc>
   16088:	ldr	r0, [fp, #-20]	; 0xffffffec
   1608c:	mvn	r1, #127	; 0x7f
   16090:	sdiv	r0, r1, r0
   16094:	cmp	r0, #4
   16098:	blt	160b0 <__assert_fail@plt+0x4fc8>
   1609c:	b	160c4 <__assert_fail@plt+0x4fdc>
   160a0:	ldr	r0, [fp, #-20]	; 0xffffffec
   160a4:	movw	r1, #31
   160a8:	cmp	r1, r0
   160ac:	bge	160c4 <__assert_fail@plt+0x4fdc>
   160b0:	ldr	r0, [fp, #-20]	; 0xffffffec
   160b4:	lsl	r0, r0, #2
   160b8:	sxtb	r0, r0
   160bc:	str	r0, [fp, #-24]	; 0xffffffe8
   160c0:	b	16bb0 <__assert_fail@plt+0x5ac8>
   160c4:	ldr	r0, [fp, #-20]	; 0xffffffec
   160c8:	lsl	r0, r0, #2
   160cc:	sxtb	r0, r0
   160d0:	str	r0, [fp, #-24]	; 0xffffffe8
   160d4:	b	16ba4 <__assert_fail@plt+0x5abc>
   160d8:	b	16180 <__assert_fail@plt+0x5098>
   160dc:	ldr	r0, [fp, #-20]	; 0xffffffec
   160e0:	cmp	r0, #0
   160e4:	bge	16118 <__assert_fail@plt+0x5030>
   160e8:	b	160ec <__assert_fail@plt+0x5004>
   160ec:	ldr	r0, [fp, #-20]	; 0xffffffec
   160f0:	cmp	r0, #63	; 0x3f
   160f4:	blt	161e0 <__assert_fail@plt+0x50f8>
   160f8:	b	161f4 <__assert_fail@plt+0x510c>
   160fc:	ldr	r0, [fp, #-20]	; 0xffffffec
   16100:	mvn	r1, #0
   16104:	sub	r0, r1, r0
   16108:	mvn	r1, #62	; 0x3e
   1610c:	cmp	r1, r0
   16110:	ble	161e0 <__assert_fail@plt+0x50f8>
   16114:	b	161f4 <__assert_fail@plt+0x510c>
   16118:	b	1611c <__assert_fail@plt+0x5034>
   1611c:	b	1616c <__assert_fail@plt+0x5084>
   16120:	b	1616c <__assert_fail@plt+0x5084>
   16124:	b	1616c <__assert_fail@plt+0x5084>
   16128:	b	1612c <__assert_fail@plt+0x5044>
   1612c:	ldr	r0, [fp, #-20]	; 0xffffffec
   16130:	add	r0, r0, #0
   16134:	movw	r1, #0
   16138:	cmp	r1, r0
   1613c:	blt	161e0 <__assert_fail@plt+0x50f8>
   16140:	b	161f4 <__assert_fail@plt+0x510c>
   16144:	ldr	r0, [fp, #-20]	; 0xffffffec
   16148:	movw	r1, #0
   1614c:	cmp	r1, r0
   16150:	bge	161f4 <__assert_fail@plt+0x510c>
   16154:	ldr	r0, [fp, #-20]	; 0xffffffec
   16158:	sub	r0, r0, #1
   1615c:	mvn	r1, #0
   16160:	cmp	r1, r0
   16164:	blt	161e0 <__assert_fail@plt+0x50f8>
   16168:	b	161f4 <__assert_fail@plt+0x510c>
   1616c:	ldr	r0, [fp, #-20]	; 0xffffffec
   16170:	movw	r1, #0
   16174:	cmp	r1, r0
   16178:	blt	161e0 <__assert_fail@plt+0x50f8>
   1617c:	b	161f4 <__assert_fail@plt+0x510c>
   16180:	b	16188 <__assert_fail@plt+0x50a0>
   16184:	b	161f4 <__assert_fail@plt+0x510c>
   16188:	ldr	r0, [fp, #-20]	; 0xffffffec
   1618c:	cmp	r0, #0
   16190:	bge	161d0 <__assert_fail@plt+0x50e8>
   16194:	b	16198 <__assert_fail@plt+0x50b0>
   16198:	b	161b8 <__assert_fail@plt+0x50d0>
   1619c:	b	161b8 <__assert_fail@plt+0x50d0>
   161a0:	ldr	r0, [fp, #-20]	; 0xffffffec
   161a4:	cmn	r0, #1
   161a8:	bne	161b8 <__assert_fail@plt+0x50d0>
   161ac:	b	161b0 <__assert_fail@plt+0x50c8>
   161b0:	b	161e0 <__assert_fail@plt+0x50f8>
   161b4:	b	161e0 <__assert_fail@plt+0x50f8>
   161b8:	ldr	r0, [fp, #-20]	; 0xffffffec
   161bc:	movw	r1, #0
   161c0:	sdiv	r0, r1, r0
   161c4:	cmp	r0, #4
   161c8:	blt	161e0 <__assert_fail@plt+0x50f8>
   161cc:	b	161f4 <__assert_fail@plt+0x510c>
   161d0:	ldr	r0, [fp, #-20]	; 0xffffffec
   161d4:	movw	r1, #63	; 0x3f
   161d8:	cmp	r1, r0
   161dc:	bge	161f4 <__assert_fail@plt+0x510c>
   161e0:	ldr	r0, [fp, #-20]	; 0xffffffec
   161e4:	lsl	r0, r0, #2
   161e8:	and	r0, r0, #255	; 0xff
   161ec:	str	r0, [fp, #-24]	; 0xffffffe8
   161f0:	b	16bb0 <__assert_fail@plt+0x5ac8>
   161f4:	ldr	r0, [fp, #-20]	; 0xffffffec
   161f8:	lsl	r0, r0, #2
   161fc:	and	r0, r0, #255	; 0xff
   16200:	str	r0, [fp, #-24]	; 0xffffffe8
   16204:	b	16ba4 <__assert_fail@plt+0x5abc>
   16208:	b	1647c <__assert_fail@plt+0x5394>
   1620c:	b	16210 <__assert_fail@plt+0x5128>
   16210:	b	162c0 <__assert_fail@plt+0x51d8>
   16214:	ldr	r0, [fp, #-20]	; 0xffffffec
   16218:	cmp	r0, #0
   1621c:	bge	16254 <__assert_fail@plt+0x516c>
   16220:	b	16224 <__assert_fail@plt+0x513c>
   16224:	ldr	r0, [fp, #-20]	; 0xffffffec
   16228:	movw	r1, #8191	; 0x1fff
   1622c:	cmp	r0, r1
   16230:	blt	16320 <__assert_fail@plt+0x5238>
   16234:	b	16334 <__assert_fail@plt+0x524c>
   16238:	ldr	r0, [pc, #2576]	; 16c50 <__assert_fail@plt+0x5b68>
   1623c:	ldr	r1, [fp, #-20]	; 0xffffffec
   16240:	mvn	r2, #0
   16244:	sub	r1, r2, r1
   16248:	cmp	r0, r1
   1624c:	ble	16320 <__assert_fail@plt+0x5238>
   16250:	b	16334 <__assert_fail@plt+0x524c>
   16254:	b	16258 <__assert_fail@plt+0x5170>
   16258:	b	162ac <__assert_fail@plt+0x51c4>
   1625c:	b	162ac <__assert_fail@plt+0x51c4>
   16260:	b	162ac <__assert_fail@plt+0x51c4>
   16264:	b	16268 <__assert_fail@plt+0x5180>
   16268:	ldr	r0, [pc, #2520]	; 16c48 <__assert_fail@plt+0x5b60>
   1626c:	ldr	r1, [fp, #-20]	; 0xffffffec
   16270:	add	r0, r1, r0
   16274:	movw	r1, #0
   16278:	cmp	r1, r0
   1627c:	blt	16320 <__assert_fail@plt+0x5238>
   16280:	b	16334 <__assert_fail@plt+0x524c>
   16284:	ldr	r0, [fp, #-20]	; 0xffffffec
   16288:	movw	r1, #0
   1628c:	cmp	r1, r0
   16290:	bge	16334 <__assert_fail@plt+0x524c>
   16294:	ldr	r0, [fp, #-20]	; 0xffffffec
   16298:	sub	r0, r0, #1
   1629c:	movw	r1, #32767	; 0x7fff
   162a0:	cmp	r1, r0
   162a4:	blt	16320 <__assert_fail@plt+0x5238>
   162a8:	b	16334 <__assert_fail@plt+0x524c>
   162ac:	ldr	r0, [pc, #2456]	; 16c4c <__assert_fail@plt+0x5b64>
   162b0:	ldr	r1, [fp, #-20]	; 0xffffffec
   162b4:	cmp	r0, r1
   162b8:	blt	16320 <__assert_fail@plt+0x5238>
   162bc:	b	16334 <__assert_fail@plt+0x524c>
   162c0:	b	162c8 <__assert_fail@plt+0x51e0>
   162c4:	b	16334 <__assert_fail@plt+0x524c>
   162c8:	ldr	r0, [fp, #-20]	; 0xffffffec
   162cc:	cmp	r0, #0
   162d0:	bge	16310 <__assert_fail@plt+0x5228>
   162d4:	b	162d8 <__assert_fail@plt+0x51f0>
   162d8:	b	162f8 <__assert_fail@plt+0x5210>
   162dc:	b	162f8 <__assert_fail@plt+0x5210>
   162e0:	ldr	r0, [fp, #-20]	; 0xffffffec
   162e4:	cmn	r0, #1
   162e8:	bne	162f8 <__assert_fail@plt+0x5210>
   162ec:	b	162f0 <__assert_fail@plt+0x5208>
   162f0:	b	16334 <__assert_fail@plt+0x524c>
   162f4:	b	16334 <__assert_fail@plt+0x524c>
   162f8:	ldr	r0, [pc, #2376]	; 16c48 <__assert_fail@plt+0x5b60>
   162fc:	ldr	r1, [fp, #-20]	; 0xffffffec
   16300:	sdiv	r0, r0, r1
   16304:	cmp	r0, #4
   16308:	blt	16320 <__assert_fail@plt+0x5238>
   1630c:	b	16334 <__assert_fail@plt+0x524c>
   16310:	ldr	r0, [fp, #-20]	; 0xffffffec
   16314:	movw	r1, #8191	; 0x1fff
   16318:	cmp	r1, r0
   1631c:	bge	16334 <__assert_fail@plt+0x524c>
   16320:	ldr	r0, [fp, #-20]	; 0xffffffec
   16324:	lsl	r0, r0, #2
   16328:	sxth	r0, r0
   1632c:	str	r0, [fp, #-24]	; 0xffffffe8
   16330:	b	16bb0 <__assert_fail@plt+0x5ac8>
   16334:	ldr	r0, [fp, #-20]	; 0xffffffec
   16338:	lsl	r0, r0, #2
   1633c:	sxth	r0, r0
   16340:	str	r0, [fp, #-24]	; 0xffffffe8
   16344:	b	16ba4 <__assert_fail@plt+0x5abc>
   16348:	b	163f4 <__assert_fail@plt+0x530c>
   1634c:	ldr	r0, [fp, #-20]	; 0xffffffec
   16350:	cmp	r0, #0
   16354:	bge	1638c <__assert_fail@plt+0x52a4>
   16358:	b	1635c <__assert_fail@plt+0x5274>
   1635c:	ldr	r0, [fp, #-20]	; 0xffffffec
   16360:	movw	r1, #16383	; 0x3fff
   16364:	cmp	r0, r1
   16368:	blt	16454 <__assert_fail@plt+0x536c>
   1636c:	b	16468 <__assert_fail@plt+0x5380>
   16370:	ldr	r0, [pc, #2268]	; 16c54 <__assert_fail@plt+0x5b6c>
   16374:	ldr	r1, [fp, #-20]	; 0xffffffec
   16378:	mvn	r2, #0
   1637c:	sub	r1, r2, r1
   16380:	cmp	r0, r1
   16384:	ble	16454 <__assert_fail@plt+0x536c>
   16388:	b	16468 <__assert_fail@plt+0x5380>
   1638c:	b	16390 <__assert_fail@plt+0x52a8>
   16390:	b	163e0 <__assert_fail@plt+0x52f8>
   16394:	b	163e0 <__assert_fail@plt+0x52f8>
   16398:	b	163e0 <__assert_fail@plt+0x52f8>
   1639c:	b	163a0 <__assert_fail@plt+0x52b8>
   163a0:	ldr	r0, [fp, #-20]	; 0xffffffec
   163a4:	add	r0, r0, #0
   163a8:	movw	r1, #0
   163ac:	cmp	r1, r0
   163b0:	blt	16454 <__assert_fail@plt+0x536c>
   163b4:	b	16468 <__assert_fail@plt+0x5380>
   163b8:	ldr	r0, [fp, #-20]	; 0xffffffec
   163bc:	movw	r1, #0
   163c0:	cmp	r1, r0
   163c4:	bge	16468 <__assert_fail@plt+0x5380>
   163c8:	ldr	r0, [fp, #-20]	; 0xffffffec
   163cc:	sub	r0, r0, #1
   163d0:	mvn	r1, #0
   163d4:	cmp	r1, r0
   163d8:	blt	16454 <__assert_fail@plt+0x536c>
   163dc:	b	16468 <__assert_fail@plt+0x5380>
   163e0:	ldr	r0, [fp, #-20]	; 0xffffffec
   163e4:	movw	r1, #0
   163e8:	cmp	r1, r0
   163ec:	blt	16454 <__assert_fail@plt+0x536c>
   163f0:	b	16468 <__assert_fail@plt+0x5380>
   163f4:	b	163fc <__assert_fail@plt+0x5314>
   163f8:	b	16468 <__assert_fail@plt+0x5380>
   163fc:	ldr	r0, [fp, #-20]	; 0xffffffec
   16400:	cmp	r0, #0
   16404:	bge	16444 <__assert_fail@plt+0x535c>
   16408:	b	1640c <__assert_fail@plt+0x5324>
   1640c:	b	1642c <__assert_fail@plt+0x5344>
   16410:	b	1642c <__assert_fail@plt+0x5344>
   16414:	ldr	r0, [fp, #-20]	; 0xffffffec
   16418:	cmn	r0, #1
   1641c:	bne	1642c <__assert_fail@plt+0x5344>
   16420:	b	16424 <__assert_fail@plt+0x533c>
   16424:	b	16454 <__assert_fail@plt+0x536c>
   16428:	b	16454 <__assert_fail@plt+0x536c>
   1642c:	ldr	r0, [fp, #-20]	; 0xffffffec
   16430:	movw	r1, #0
   16434:	sdiv	r0, r1, r0
   16438:	cmp	r0, #4
   1643c:	blt	16454 <__assert_fail@plt+0x536c>
   16440:	b	16468 <__assert_fail@plt+0x5380>
   16444:	ldr	r0, [fp, #-20]	; 0xffffffec
   16448:	movw	r1, #16383	; 0x3fff
   1644c:	cmp	r1, r0
   16450:	bge	16468 <__assert_fail@plt+0x5380>
   16454:	ldr	r0, [fp, #-20]	; 0xffffffec
   16458:	lsl	r0, r0, #2
   1645c:	uxth	r0, r0
   16460:	str	r0, [fp, #-24]	; 0xffffffe8
   16464:	b	16bb0 <__assert_fail@plt+0x5ac8>
   16468:	ldr	r0, [fp, #-20]	; 0xffffffec
   1646c:	lsl	r0, r0, #2
   16470:	uxth	r0, r0
   16474:	str	r0, [fp, #-24]	; 0xffffffe8
   16478:	b	16ba4 <__assert_fail@plt+0x5abc>
   1647c:	b	16480 <__assert_fail@plt+0x5398>
   16480:	b	16484 <__assert_fail@plt+0x539c>
   16484:	b	16524 <__assert_fail@plt+0x543c>
   16488:	ldr	r0, [fp, #-20]	; 0xffffffec
   1648c:	cmp	r0, #0
   16490:	bge	164c8 <__assert_fail@plt+0x53e0>
   16494:	b	16498 <__assert_fail@plt+0x53b0>
   16498:	ldr	r0, [pc, #1940]	; 16c34 <__assert_fail@plt+0x5b4c>
   1649c:	ldr	r1, [fp, #-20]	; 0xffffffec
   164a0:	cmp	r1, r0
   164a4:	blt	16578 <__assert_fail@plt+0x5490>
   164a8:	b	16588 <__assert_fail@plt+0x54a0>
   164ac:	ldr	r0, [pc, #1936]	; 16c44 <__assert_fail@plt+0x5b5c>
   164b0:	ldr	r1, [fp, #-20]	; 0xffffffec
   164b4:	mvn	r2, #0
   164b8:	sub	r1, r2, r1
   164bc:	cmp	r0, r1
   164c0:	ble	16578 <__assert_fail@plt+0x5490>
   164c4:	b	16588 <__assert_fail@plt+0x54a0>
   164c8:	b	16510 <__assert_fail@plt+0x5428>
   164cc:	b	164d0 <__assert_fail@plt+0x53e8>
   164d0:	ldr	r0, [fp, #-20]	; 0xffffffec
   164d4:	add	r0, r0, #-2147483648	; 0x80000000
   164d8:	movw	r1, #0
   164dc:	cmp	r1, r0
   164e0:	blt	16578 <__assert_fail@plt+0x5490>
   164e4:	b	16588 <__assert_fail@plt+0x54a0>
   164e8:	ldr	r0, [fp, #-20]	; 0xffffffec
   164ec:	movw	r1, #0
   164f0:	cmp	r1, r0
   164f4:	bge	16588 <__assert_fail@plt+0x54a0>
   164f8:	ldr	r0, [pc, #1856]	; 16c40 <__assert_fail@plt+0x5b58>
   164fc:	ldr	r1, [fp, #-20]	; 0xffffffec
   16500:	sub	r1, r1, #1
   16504:	cmp	r0, r1
   16508:	blt	16578 <__assert_fail@plt+0x5490>
   1650c:	b	16588 <__assert_fail@plt+0x54a0>
   16510:	ldr	r0, [pc, #1828]	; 16c3c <__assert_fail@plt+0x5b54>
   16514:	ldr	r1, [fp, #-20]	; 0xffffffec
   16518:	cmp	r0, r1
   1651c:	blt	16578 <__assert_fail@plt+0x5490>
   16520:	b	16588 <__assert_fail@plt+0x54a0>
   16524:	b	1652c <__assert_fail@plt+0x5444>
   16528:	b	16588 <__assert_fail@plt+0x54a0>
   1652c:	ldr	r0, [fp, #-20]	; 0xffffffec
   16530:	cmp	r0, #0
   16534:	bge	16568 <__assert_fail@plt+0x5480>
   16538:	ldr	r0, [fp, #-20]	; 0xffffffec
   1653c:	cmn	r0, #1
   16540:	bne	16550 <__assert_fail@plt+0x5468>
   16544:	b	16548 <__assert_fail@plt+0x5460>
   16548:	b	16588 <__assert_fail@plt+0x54a0>
   1654c:	b	16588 <__assert_fail@plt+0x54a0>
   16550:	ldr	r0, [pc, #1760]	; 16c38 <__assert_fail@plt+0x5b50>
   16554:	ldr	r1, [fp, #-20]	; 0xffffffec
   16558:	sdiv	r0, r0, r1
   1655c:	cmp	r0, #4
   16560:	blt	16578 <__assert_fail@plt+0x5490>
   16564:	b	16588 <__assert_fail@plt+0x54a0>
   16568:	ldr	r0, [pc, #1732]	; 16c34 <__assert_fail@plt+0x5b4c>
   1656c:	ldr	r1, [fp, #-20]	; 0xffffffec
   16570:	cmp	r0, r1
   16574:	bge	16588 <__assert_fail@plt+0x54a0>
   16578:	ldr	r0, [fp, #-20]	; 0xffffffec
   1657c:	lsl	r0, r0, #2
   16580:	str	r0, [fp, #-24]	; 0xffffffe8
   16584:	b	16bb0 <__assert_fail@plt+0x5ac8>
   16588:	ldr	r0, [fp, #-20]	; 0xffffffec
   1658c:	lsl	r0, r0, #2
   16590:	str	r0, [fp, #-24]	; 0xffffffe8
   16594:	b	16ba4 <__assert_fail@plt+0x5abc>
   16598:	b	16644 <__assert_fail@plt+0x555c>
   1659c:	ldr	r0, [fp, #-20]	; 0xffffffec
   165a0:	cmp	r0, #0
   165a4:	bge	165dc <__assert_fail@plt+0x54f4>
   165a8:	b	165c0 <__assert_fail@plt+0x54d8>
   165ac:	ldr	r0, [pc, #1660]	; 16c30 <__assert_fail@plt+0x5b48>
   165b0:	ldr	r1, [fp, #-20]	; 0xffffffec
   165b4:	cmp	r1, r0
   165b8:	bcc	166a4 <__assert_fail@plt+0x55bc>
   165bc:	b	166b4 <__assert_fail@plt+0x55cc>
   165c0:	ldr	r0, [fp, #-20]	; 0xffffffec
   165c4:	mvn	r1, #0
   165c8:	sub	r0, r1, r0
   165cc:	movw	r1, #1
   165d0:	cmp	r1, r0
   165d4:	bls	166a4 <__assert_fail@plt+0x55bc>
   165d8:	b	166b4 <__assert_fail@plt+0x55cc>
   165dc:	b	165e0 <__assert_fail@plt+0x54f8>
   165e0:	b	16630 <__assert_fail@plt+0x5548>
   165e4:	b	16630 <__assert_fail@plt+0x5548>
   165e8:	b	16630 <__assert_fail@plt+0x5548>
   165ec:	b	165f0 <__assert_fail@plt+0x5508>
   165f0:	ldr	r0, [fp, #-20]	; 0xffffffec
   165f4:	add	r0, r0, #0
   165f8:	movw	r1, #0
   165fc:	cmp	r1, r0
   16600:	blt	166a4 <__assert_fail@plt+0x55bc>
   16604:	b	166b4 <__assert_fail@plt+0x55cc>
   16608:	ldr	r0, [fp, #-20]	; 0xffffffec
   1660c:	movw	r1, #0
   16610:	cmp	r1, r0
   16614:	bge	166b4 <__assert_fail@plt+0x55cc>
   16618:	ldr	r0, [fp, #-20]	; 0xffffffec
   1661c:	sub	r0, r0, #1
   16620:	mvn	r1, #0
   16624:	cmp	r1, r0
   16628:	blt	166a4 <__assert_fail@plt+0x55bc>
   1662c:	b	166b4 <__assert_fail@plt+0x55cc>
   16630:	ldr	r0, [fp, #-20]	; 0xffffffec
   16634:	movw	r1, #0
   16638:	cmp	r1, r0
   1663c:	blt	166a4 <__assert_fail@plt+0x55bc>
   16640:	b	166b4 <__assert_fail@plt+0x55cc>
   16644:	b	1664c <__assert_fail@plt+0x5564>
   16648:	b	166b4 <__assert_fail@plt+0x55cc>
   1664c:	ldr	r0, [fp, #-20]	; 0xffffffec
   16650:	cmp	r0, #0
   16654:	bge	16694 <__assert_fail@plt+0x55ac>
   16658:	b	1665c <__assert_fail@plt+0x5574>
   1665c:	b	1667c <__assert_fail@plt+0x5594>
   16660:	b	1667c <__assert_fail@plt+0x5594>
   16664:	ldr	r0, [fp, #-20]	; 0xffffffec
   16668:	cmn	r0, #1
   1666c:	bne	1667c <__assert_fail@plt+0x5594>
   16670:	b	16674 <__assert_fail@plt+0x558c>
   16674:	b	166a4 <__assert_fail@plt+0x55bc>
   16678:	b	166a4 <__assert_fail@plt+0x55bc>
   1667c:	ldr	r0, [fp, #-20]	; 0xffffffec
   16680:	movw	r1, #0
   16684:	sdiv	r0, r1, r0
   16688:	cmp	r0, #4
   1668c:	blt	166a4 <__assert_fail@plt+0x55bc>
   16690:	b	166b4 <__assert_fail@plt+0x55cc>
   16694:	ldr	r0, [pc, #1428]	; 16c30 <__assert_fail@plt+0x5b48>
   16698:	ldr	r1, [fp, #-20]	; 0xffffffec
   1669c:	cmp	r0, r1
   166a0:	bcs	166b4 <__assert_fail@plt+0x55cc>
   166a4:	ldr	r0, [fp, #-20]	; 0xffffffec
   166a8:	lsl	r0, r0, #2
   166ac:	str	r0, [fp, #-24]	; 0xffffffe8
   166b0:	b	16bb0 <__assert_fail@plt+0x5ac8>
   166b4:	ldr	r0, [fp, #-20]	; 0xffffffec
   166b8:	lsl	r0, r0, #2
   166bc:	str	r0, [fp, #-24]	; 0xffffffe8
   166c0:	b	16ba4 <__assert_fail@plt+0x5abc>
   166c4:	b	166c8 <__assert_fail@plt+0x55e0>
   166c8:	b	166cc <__assert_fail@plt+0x55e4>
   166cc:	b	1676c <__assert_fail@plt+0x5684>
   166d0:	ldr	r0, [fp, #-20]	; 0xffffffec
   166d4:	cmp	r0, #0
   166d8:	bge	16710 <__assert_fail@plt+0x5628>
   166dc:	b	166e0 <__assert_fail@plt+0x55f8>
   166e0:	ldr	r0, [pc, #1356]	; 16c34 <__assert_fail@plt+0x5b4c>
   166e4:	ldr	r1, [fp, #-20]	; 0xffffffec
   166e8:	cmp	r1, r0
   166ec:	blt	167c0 <__assert_fail@plt+0x56d8>
   166f0:	b	167d0 <__assert_fail@plt+0x56e8>
   166f4:	ldr	r0, [pc, #1352]	; 16c44 <__assert_fail@plt+0x5b5c>
   166f8:	ldr	r1, [fp, #-20]	; 0xffffffec
   166fc:	mvn	r2, #0
   16700:	sub	r1, r2, r1
   16704:	cmp	r0, r1
   16708:	ble	167c0 <__assert_fail@plt+0x56d8>
   1670c:	b	167d0 <__assert_fail@plt+0x56e8>
   16710:	b	16758 <__assert_fail@plt+0x5670>
   16714:	b	16718 <__assert_fail@plt+0x5630>
   16718:	ldr	r0, [fp, #-20]	; 0xffffffec
   1671c:	add	r0, r0, #-2147483648	; 0x80000000
   16720:	movw	r1, #0
   16724:	cmp	r1, r0
   16728:	blt	167c0 <__assert_fail@plt+0x56d8>
   1672c:	b	167d0 <__assert_fail@plt+0x56e8>
   16730:	ldr	r0, [fp, #-20]	; 0xffffffec
   16734:	movw	r1, #0
   16738:	cmp	r1, r0
   1673c:	bge	167d0 <__assert_fail@plt+0x56e8>
   16740:	ldr	r0, [pc, #1272]	; 16c40 <__assert_fail@plt+0x5b58>
   16744:	ldr	r1, [fp, #-20]	; 0xffffffec
   16748:	sub	r1, r1, #1
   1674c:	cmp	r0, r1
   16750:	blt	167c0 <__assert_fail@plt+0x56d8>
   16754:	b	167d0 <__assert_fail@plt+0x56e8>
   16758:	ldr	r0, [pc, #1244]	; 16c3c <__assert_fail@plt+0x5b54>
   1675c:	ldr	r1, [fp, #-20]	; 0xffffffec
   16760:	cmp	r0, r1
   16764:	blt	167c0 <__assert_fail@plt+0x56d8>
   16768:	b	167d0 <__assert_fail@plt+0x56e8>
   1676c:	b	16774 <__assert_fail@plt+0x568c>
   16770:	b	167d0 <__assert_fail@plt+0x56e8>
   16774:	ldr	r0, [fp, #-20]	; 0xffffffec
   16778:	cmp	r0, #0
   1677c:	bge	167b0 <__assert_fail@plt+0x56c8>
   16780:	ldr	r0, [fp, #-20]	; 0xffffffec
   16784:	cmn	r0, #1
   16788:	bne	16798 <__assert_fail@plt+0x56b0>
   1678c:	b	16790 <__assert_fail@plt+0x56a8>
   16790:	b	167d0 <__assert_fail@plt+0x56e8>
   16794:	b	167d0 <__assert_fail@plt+0x56e8>
   16798:	ldr	r0, [pc, #1176]	; 16c38 <__assert_fail@plt+0x5b50>
   1679c:	ldr	r1, [fp, #-20]	; 0xffffffec
   167a0:	sdiv	r0, r0, r1
   167a4:	cmp	r0, #4
   167a8:	blt	167c0 <__assert_fail@plt+0x56d8>
   167ac:	b	167d0 <__assert_fail@plt+0x56e8>
   167b0:	ldr	r0, [pc, #1148]	; 16c34 <__assert_fail@plt+0x5b4c>
   167b4:	ldr	r1, [fp, #-20]	; 0xffffffec
   167b8:	cmp	r0, r1
   167bc:	bge	167d0 <__assert_fail@plt+0x56e8>
   167c0:	ldr	r0, [fp, #-20]	; 0xffffffec
   167c4:	lsl	r0, r0, #2
   167c8:	str	r0, [fp, #-24]	; 0xffffffe8
   167cc:	b	16bb0 <__assert_fail@plt+0x5ac8>
   167d0:	ldr	r0, [fp, #-20]	; 0xffffffec
   167d4:	lsl	r0, r0, #2
   167d8:	str	r0, [fp, #-24]	; 0xffffffe8
   167dc:	b	16ba4 <__assert_fail@plt+0x5abc>
   167e0:	b	1688c <__assert_fail@plt+0x57a4>
   167e4:	ldr	r0, [fp, #-20]	; 0xffffffec
   167e8:	cmp	r0, #0
   167ec:	bge	16824 <__assert_fail@plt+0x573c>
   167f0:	b	16808 <__assert_fail@plt+0x5720>
   167f4:	ldr	r0, [pc, #1076]	; 16c30 <__assert_fail@plt+0x5b48>
   167f8:	ldr	r1, [fp, #-20]	; 0xffffffec
   167fc:	cmp	r1, r0
   16800:	bcc	168ec <__assert_fail@plt+0x5804>
   16804:	b	168fc <__assert_fail@plt+0x5814>
   16808:	ldr	r0, [fp, #-20]	; 0xffffffec
   1680c:	mvn	r1, #0
   16810:	sub	r0, r1, r0
   16814:	movw	r1, #1
   16818:	cmp	r1, r0
   1681c:	bls	168ec <__assert_fail@plt+0x5804>
   16820:	b	168fc <__assert_fail@plt+0x5814>
   16824:	b	16828 <__assert_fail@plt+0x5740>
   16828:	b	16878 <__assert_fail@plt+0x5790>
   1682c:	b	16878 <__assert_fail@plt+0x5790>
   16830:	b	16878 <__assert_fail@plt+0x5790>
   16834:	b	16838 <__assert_fail@plt+0x5750>
   16838:	ldr	r0, [fp, #-20]	; 0xffffffec
   1683c:	add	r0, r0, #0
   16840:	movw	r1, #0
   16844:	cmp	r1, r0
   16848:	blt	168ec <__assert_fail@plt+0x5804>
   1684c:	b	168fc <__assert_fail@plt+0x5814>
   16850:	ldr	r0, [fp, #-20]	; 0xffffffec
   16854:	movw	r1, #0
   16858:	cmp	r1, r0
   1685c:	bge	168fc <__assert_fail@plt+0x5814>
   16860:	ldr	r0, [fp, #-20]	; 0xffffffec
   16864:	sub	r0, r0, #1
   16868:	mvn	r1, #0
   1686c:	cmp	r1, r0
   16870:	blt	168ec <__assert_fail@plt+0x5804>
   16874:	b	168fc <__assert_fail@plt+0x5814>
   16878:	ldr	r0, [fp, #-20]	; 0xffffffec
   1687c:	movw	r1, #0
   16880:	cmp	r1, r0
   16884:	blt	168ec <__assert_fail@plt+0x5804>
   16888:	b	168fc <__assert_fail@plt+0x5814>
   1688c:	b	16894 <__assert_fail@plt+0x57ac>
   16890:	b	168fc <__assert_fail@plt+0x5814>
   16894:	ldr	r0, [fp, #-20]	; 0xffffffec
   16898:	cmp	r0, #0
   1689c:	bge	168dc <__assert_fail@plt+0x57f4>
   168a0:	b	168a4 <__assert_fail@plt+0x57bc>
   168a4:	b	168c4 <__assert_fail@plt+0x57dc>
   168a8:	b	168c4 <__assert_fail@plt+0x57dc>
   168ac:	ldr	r0, [fp, #-20]	; 0xffffffec
   168b0:	cmn	r0, #1
   168b4:	bne	168c4 <__assert_fail@plt+0x57dc>
   168b8:	b	168bc <__assert_fail@plt+0x57d4>
   168bc:	b	168ec <__assert_fail@plt+0x5804>
   168c0:	b	168ec <__assert_fail@plt+0x5804>
   168c4:	ldr	r0, [fp, #-20]	; 0xffffffec
   168c8:	movw	r1, #0
   168cc:	sdiv	r0, r1, r0
   168d0:	cmp	r0, #4
   168d4:	blt	168ec <__assert_fail@plt+0x5804>
   168d8:	b	168fc <__assert_fail@plt+0x5814>
   168dc:	ldr	r0, [pc, #844]	; 16c30 <__assert_fail@plt+0x5b48>
   168e0:	ldr	r1, [fp, #-20]	; 0xffffffec
   168e4:	cmp	r0, r1
   168e8:	bcs	168fc <__assert_fail@plt+0x5814>
   168ec:	ldr	r0, [fp, #-20]	; 0xffffffec
   168f0:	lsl	r0, r0, #2
   168f4:	str	r0, [fp, #-24]	; 0xffffffe8
   168f8:	b	16bb0 <__assert_fail@plt+0x5ac8>
   168fc:	ldr	r0, [fp, #-20]	; 0xffffffec
   16900:	lsl	r0, r0, #2
   16904:	str	r0, [fp, #-24]	; 0xffffffe8
   16908:	b	16ba4 <__assert_fail@plt+0x5abc>
   1690c:	b	16910 <__assert_fail@plt+0x5828>
   16910:	b	169d8 <__assert_fail@plt+0x58f0>
   16914:	ldr	r0, [fp, #-20]	; 0xffffffec
   16918:	cmp	r0, #0
   1691c:	bge	1696c <__assert_fail@plt+0x5884>
   16920:	b	16924 <__assert_fail@plt+0x583c>
   16924:	ldr	r0, [fp, #-20]	; 0xffffffec
   16928:	mvn	r1, #0
   1692c:	subs	r1, r0, r1
   16930:	mvn	r2, #-536870912	; 0xe0000000
   16934:	rscs	r0, r2, r0, asr #31
   16938:	str	r1, [fp, #-28]	; 0xffffffe4
   1693c:	str	r0, [fp, #-32]	; 0xffffffe0
   16940:	blt	16a54 <__assert_fail@plt+0x596c>
   16944:	b	16a64 <__assert_fail@plt+0x597c>
   16948:	ldr	r0, [fp, #-20]	; 0xffffffec
   1694c:	mvn	r0, r0
   16950:	rsbs	r1, r0, #0
   16954:	mov	r2, #-536870912	; 0xe0000000
   16958:	sbcs	r0, r2, r0, asr #31
   1695c:	str	r1, [fp, #-36]	; 0xffffffdc
   16960:	str	r0, [sp, #40]	; 0x28
   16964:	blt	16a54 <__assert_fail@plt+0x596c>
   16968:	b	16a64 <__assert_fail@plt+0x597c>
   1696c:	b	169b8 <__assert_fail@plt+0x58d0>
   16970:	b	16974 <__assert_fail@plt+0x588c>
   16974:	ldr	r0, [fp, #-20]	; 0xffffffec
   16978:	mov	r1, #-2147483648	; 0x80000000
   1697c:	add	r1, r1, r0, asr #31
   16980:	rsbs	r0, r0, #0
   16984:	rscs	r1, r1, #0
   16988:	str	r0, [sp, #36]	; 0x24
   1698c:	str	r1, [sp, #32]
   16990:	blt	16a54 <__assert_fail@plt+0x596c>
   16994:	b	16a64 <__assert_fail@plt+0x597c>
   16998:	ldr	r0, [fp, #-20]	; 0xffffffec
   1699c:	movw	r1, #0
   169a0:	cmp	r1, r0
   169a4:	bge	16a64 <__assert_fail@plt+0x597c>
   169a8:	mov	r0, #0
   169ac:	cmp	r0, #0
   169b0:	bne	16a54 <__assert_fail@plt+0x596c>
   169b4:	b	16a64 <__assert_fail@plt+0x597c>
   169b8:	ldr	r0, [fp, #-20]	; 0xffffffec
   169bc:	rsbs	r1, r0, #0
   169c0:	mov	r2, #-536870912	; 0xe0000000
   169c4:	sbcs	r0, r2, r0, asr #31
   169c8:	str	r1, [sp, #28]
   169cc:	str	r0, [sp, #24]
   169d0:	blt	16a54 <__assert_fail@plt+0x596c>
   169d4:	b	16a64 <__assert_fail@plt+0x597c>
   169d8:	b	169e0 <__assert_fail@plt+0x58f8>
   169dc:	b	16a64 <__assert_fail@plt+0x597c>
   169e0:	ldr	r0, [fp, #-20]	; 0xffffffec
   169e4:	cmp	r0, #0
   169e8:	bge	16a40 <__assert_fail@plt+0x5958>
   169ec:	ldr	r0, [fp, #-20]	; 0xffffffec
   169f0:	cmn	r0, #1
   169f4:	bne	16a04 <__assert_fail@plt+0x591c>
   169f8:	b	169fc <__assert_fail@plt+0x5914>
   169fc:	b	16a64 <__assert_fail@plt+0x597c>
   16a00:	b	16a64 <__assert_fail@plt+0x597c>
   16a04:	ldr	r0, [fp, #-20]	; 0xffffffec
   16a08:	asr	r3, r0, #31
   16a0c:	mov	r1, #0
   16a10:	mov	r2, #-2147483648	; 0x80000000
   16a14:	str	r0, [sp, #20]
   16a18:	mov	r0, r1
   16a1c:	mov	r1, r2
   16a20:	ldr	r2, [sp, #20]
   16a24:	bl	21eb4 <__assert_fail@plt+0x10dcc>
   16a28:	subs	r0, r0, #4
   16a2c:	sbcs	r1, r1, #0
   16a30:	str	r0, [sp, #16]
   16a34:	str	r1, [sp, #12]
   16a38:	blt	16a54 <__assert_fail@plt+0x596c>
   16a3c:	b	16a64 <__assert_fail@plt+0x597c>
   16a40:	ldr	r0, [fp, #-20]	; 0xffffffec
   16a44:	asr	r0, r0, #31
   16a48:	cmp	r0, #536870912	; 0x20000000
   16a4c:	blt	16a64 <__assert_fail@plt+0x597c>
   16a50:	b	16a54 <__assert_fail@plt+0x596c>
   16a54:	ldr	r0, [fp, #-20]	; 0xffffffec
   16a58:	lsl	r0, r0, #2
   16a5c:	str	r0, [fp, #-24]	; 0xffffffe8
   16a60:	b	16bb0 <__assert_fail@plt+0x5ac8>
   16a64:	ldr	r0, [fp, #-20]	; 0xffffffec
   16a68:	lsl	r0, r0, #2
   16a6c:	str	r0, [fp, #-24]	; 0xffffffe8
   16a70:	b	16ba4 <__assert_fail@plt+0x5abc>
   16a74:	b	16b24 <__assert_fail@plt+0x5a3c>
   16a78:	ldr	r0, [fp, #-20]	; 0xffffffec
   16a7c:	cmp	r0, #0
   16a80:	bge	16abc <__assert_fail@plt+0x59d4>
   16a84:	b	16aac <__assert_fail@plt+0x59c4>
   16a88:	ldr	r0, [fp, #-20]	; 0xffffffec
   16a8c:	mvn	r1, #0
   16a90:	subs	r1, r0, r1
   16a94:	mvn	r2, #-1073741824	; 0xc0000000
   16a98:	rscs	r0, r2, r0, asr #31
   16a9c:	str	r1, [sp, #8]
   16aa0:	str	r0, [sp, #4]
   16aa4:	bcc	16b88 <__assert_fail@plt+0x5aa0>
   16aa8:	b	16b98 <__assert_fail@plt+0x5ab0>
   16aac:	ldr	r0, [fp, #-20]	; 0xffffffec
   16ab0:	cmn	r0, #1
   16ab4:	bne	16b88 <__assert_fail@plt+0x5aa0>
   16ab8:	b	16b98 <__assert_fail@plt+0x5ab0>
   16abc:	b	16ac0 <__assert_fail@plt+0x59d8>
   16ac0:	b	16b10 <__assert_fail@plt+0x5a28>
   16ac4:	b	16b10 <__assert_fail@plt+0x5a28>
   16ac8:	b	16b10 <__assert_fail@plt+0x5a28>
   16acc:	b	16ad0 <__assert_fail@plt+0x59e8>
   16ad0:	ldr	r0, [fp, #-20]	; 0xffffffec
   16ad4:	add	r0, r0, #0
   16ad8:	movw	r1, #0
   16adc:	cmp	r1, r0
   16ae0:	blt	16b88 <__assert_fail@plt+0x5aa0>
   16ae4:	b	16b98 <__assert_fail@plt+0x5ab0>
   16ae8:	ldr	r0, [fp, #-20]	; 0xffffffec
   16aec:	movw	r1, #0
   16af0:	cmp	r1, r0
   16af4:	bge	16b98 <__assert_fail@plt+0x5ab0>
   16af8:	ldr	r0, [fp, #-20]	; 0xffffffec
   16afc:	sub	r0, r0, #1
   16b00:	mvn	r1, #0
   16b04:	cmp	r1, r0
   16b08:	blt	16b88 <__assert_fail@plt+0x5aa0>
   16b0c:	b	16b98 <__assert_fail@plt+0x5ab0>
   16b10:	ldr	r0, [fp, #-20]	; 0xffffffec
   16b14:	movw	r1, #0
   16b18:	cmp	r1, r0
   16b1c:	blt	16b88 <__assert_fail@plt+0x5aa0>
   16b20:	b	16b98 <__assert_fail@plt+0x5ab0>
   16b24:	b	16b2c <__assert_fail@plt+0x5a44>
   16b28:	b	16b98 <__assert_fail@plt+0x5ab0>
   16b2c:	ldr	r0, [fp, #-20]	; 0xffffffec
   16b30:	cmp	r0, #0
   16b34:	bge	16b74 <__assert_fail@plt+0x5a8c>
   16b38:	b	16b3c <__assert_fail@plt+0x5a54>
   16b3c:	b	16b5c <__assert_fail@plt+0x5a74>
   16b40:	b	16b5c <__assert_fail@plt+0x5a74>
   16b44:	ldr	r0, [fp, #-20]	; 0xffffffec
   16b48:	cmn	r0, #1
   16b4c:	bne	16b5c <__assert_fail@plt+0x5a74>
   16b50:	b	16b54 <__assert_fail@plt+0x5a6c>
   16b54:	b	16b88 <__assert_fail@plt+0x5aa0>
   16b58:	b	16b88 <__assert_fail@plt+0x5aa0>
   16b5c:	ldr	r0, [fp, #-20]	; 0xffffffec
   16b60:	movw	r1, #0
   16b64:	sdiv	r0, r1, r0
   16b68:	cmp	r0, #4
   16b6c:	blt	16b88 <__assert_fail@plt+0x5aa0>
   16b70:	b	16b98 <__assert_fail@plt+0x5ab0>
   16b74:	ldr	r0, [fp, #-20]	; 0xffffffec
   16b78:	asr	r0, r0, #31
   16b7c:	cmp	r0, #1073741824	; 0x40000000
   16b80:	bcc	16b98 <__assert_fail@plt+0x5ab0>
   16b84:	b	16b88 <__assert_fail@plt+0x5aa0>
   16b88:	ldr	r0, [fp, #-20]	; 0xffffffec
   16b8c:	lsl	r0, r0, #2
   16b90:	str	r0, [fp, #-24]	; 0xffffffe8
   16b94:	b	16bb0 <__assert_fail@plt+0x5ac8>
   16b98:	ldr	r0, [fp, #-20]	; 0xffffffec
   16b9c:	lsl	r0, r0, #2
   16ba0:	str	r0, [fp, #-24]	; 0xffffffe8
   16ba4:	ldr	r0, [fp, #-12]
   16ba8:	cmp	r0, #0
   16bac:	bge	16bc4 <__assert_fail@plt+0x5adc>
   16bb0:	ldr	r0, [fp, #-16]
   16bb4:	movw	r1, #0
   16bb8:	str	r1, [r0]
   16bbc:	str	r1, [fp, #-4]
   16bc0:	b	16c24 <__assert_fail@plt+0x5b3c>
   16bc4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16bc8:	add	r0, r0, #1
   16bcc:	str	r0, [fp, #-24]	; 0xffffffe8
   16bd0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16bd4:	bl	180b0 <__assert_fail@plt+0x6fc8>
   16bd8:	ldr	lr, [fp, #-16]
   16bdc:	str	r0, [lr]
   16be0:	ldr	r0, [fp, #-16]
   16be4:	ldr	r0, [r0]
   16be8:	movw	lr, #0
   16bec:	cmp	r0, lr
   16bf0:	bne	16c00 <__assert_fail@plt+0x5b18>
   16bf4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16bf8:	str	r0, [fp, #-4]
   16bfc:	b	16c24 <__assert_fail@plt+0x5b3c>
   16c00:	ldr	r0, [fp, #-8]
   16c04:	ldr	r1, [fp, #-12]
   16c08:	ldr	r2, [fp, #-16]
   16c0c:	ldr	r2, [r2]
   16c10:	ldr	r3, [fp, #-24]	; 0xffffffe8
   16c14:	bl	15aa4 <__assert_fail@plt+0x49bc>
   16c18:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16c1c:	sub	r0, r0, #1
   16c20:	str	r0, [fp, #-4]
   16c24:	ldr	r0, [fp, #-4]
   16c28:	mov	sp, fp
   16c2c:	pop	{fp, pc}
   16c30:	svccc	0x00ffffff
   16c34:	svcne	0x00ffffff
   16c38:	andhi	r0, r0, r0
   16c3c:	and	r0, r0, r0
   16c40:	svcvc	0x00ffffff
   16c44:	and	r0, r0, r1
   16c48:			; <UNDEFINED> instruction: 0xffff8000
   16c4c:			; <UNDEFINED> instruction: 0xffffe000
   16c50:			; <UNDEFINED> instruction: 0xffffe001
   16c54:			; <UNDEFINED> instruction: 0xffffc001
   16c58:	push	{fp, lr}
   16c5c:	mov	fp, sp
   16c60:	sub	sp, sp, #8
   16c64:	strb	r0, [fp, #-1]
   16c68:	ldrb	r0, [fp, #-1]
   16c6c:	bl	15f3c <__assert_fail@plt+0x4e54>
   16c70:	and	r0, r0, #255	; 0xff
   16c74:	movw	lr, #11843	; 0x2e43
   16c78:	movt	lr, #2
   16c7c:	add	r0, lr, r0
   16c80:	ldrsb	r0, [r0]
   16c84:	movw	lr, #0
   16c88:	cmp	lr, r0
   16c8c:	movw	r0, #0
   16c90:	movle	r0, #1
   16c94:	and	r0, r0, #1
   16c98:	mov	sp, fp
   16c9c:	pop	{fp, pc}
   16ca0:	sub	sp, sp, #4
   16ca4:	str	r0, [sp]
   16ca8:	ldr	r0, [sp]
   16cac:	movw	r1, #0
   16cb0:	str	r1, [r0]
   16cb4:	add	sp, sp, #4
   16cb8:	bx	lr
   16cbc:	push	{fp, lr}
   16cc0:	mov	fp, sp
   16cc4:	sub	sp, sp, #48	; 0x30
   16cc8:	ldr	ip, [fp, #8]
   16ccc:	str	r0, [fp, #-4]
   16cd0:	str	r1, [fp, #-8]
   16cd4:	str	r2, [fp, #-12]
   16cd8:	str	r3, [fp, #-16]
   16cdc:	ldr	r0, [fp, #8]
   16ce0:	ldr	r0, [r0]
   16ce4:	str	r0, [fp, #-20]	; 0xffffffec
   16ce8:	ldr	r0, [fp, #-4]
   16cec:	movw	r1, #0
   16cf0:	cmp	r0, r1
   16cf4:	movw	r0, #0
   16cf8:	movne	r0, #1
   16cfc:	and	r0, r0, #1
   16d00:	strb	r0, [fp, #-21]	; 0xffffffeb
   16d04:	movw	r0, #0
   16d08:	strb	r0, [fp, #-22]	; 0xffffffea
   16d0c:	str	r1, [sp, #20]
   16d10:	ldrb	r0, [fp, #-21]	; 0xffffffeb
   16d14:	tst	r0, #1
   16d18:	str	ip, [sp, #4]
   16d1c:	beq	16d44 <__assert_fail@plt+0x5c5c>
   16d20:	ldr	r0, [fp, #-4]
   16d24:	ldr	r0, [r0]
   16d28:	str	r0, [sp, #20]
   16d2c:	ldr	r0, [fp, #-12]
   16d30:	cmp	r0, #0
   16d34:	movw	r0, #0
   16d38:	moveq	r0, #1
   16d3c:	and	r0, r0, #1
   16d40:	strb	r0, [fp, #-22]	; 0xffffffea
   16d44:	b	16d48 <__assert_fail@plt+0x5c60>
   16d48:	ldr	r0, [fp, #-20]	; 0xffffffec
   16d4c:	str	r0, [sp, #16]
   16d50:	ldr	r0, [sp, #20]
   16d54:	cmp	r0, #0
   16d58:	bne	16db4 <__assert_fail@plt+0x5ccc>
   16d5c:	ldrb	r0, [fp, #-22]	; 0xffffffea
   16d60:	tst	r0, #1
   16d64:	bne	16db4 <__assert_fail@plt+0x5ccc>
   16d68:	b	16d6c <__assert_fail@plt+0x5c84>
   16d6c:	ldr	r0, [fp, #-20]	; 0xffffffec
   16d70:	str	r0, [sp, #16]
   16d74:	ldr	r0, [fp, #-8]
   16d78:	ldr	r1, [fp, #-12]
   16d7c:	sub	r2, fp, #16
   16d80:	sub	r3, fp, #20
   16d84:	bl	16f20 <__assert_fail@plt+0x5e38>
   16d88:	tst	r0, #1
   16d8c:	bne	16d94 <__assert_fail@plt+0x5cac>
   16d90:	b	16db0 <__assert_fail@plt+0x5cc8>
   16d94:	ldr	r0, [fp, #-8]
   16d98:	add	r0, r0, #4
   16d9c:	str	r0, [fp, #-8]
   16da0:	ldr	r0, [fp, #-12]
   16da4:	sub	r0, r0, #4
   16da8:	str	r0, [fp, #-12]
   16dac:	b	16d6c <__assert_fail@plt+0x5c84>
   16db0:	b	16db4 <__assert_fail@plt+0x5ccc>
   16db4:	ldr	r0, [fp, #-12]
   16db8:	cmp	r0, #0
   16dbc:	bne	16dd0 <__assert_fail@plt+0x5ce8>
   16dc0:	ldrb	r0, [fp, #-22]	; 0xffffffea
   16dc4:	tst	r0, #1
   16dc8:	bne	16dd0 <__assert_fail@plt+0x5ce8>
   16dcc:	b	16ef0 <__assert_fail@plt+0x5e08>
   16dd0:	ldr	r0, [fp, #-12]
   16dd4:	cmp	r0, #0
   16dd8:	beq	16e18 <__assert_fail@plt+0x5d30>
   16ddc:	ldr	r0, [fp, #-8]
   16de0:	ldrb	r0, [r0]
   16de4:	cmp	r0, #10
   16de8:	bne	16e18 <__assert_fail@plt+0x5d30>
   16dec:	ldrb	r0, [fp, #-21]	; 0xffffffeb
   16df0:	tst	r0, #1
   16df4:	beq	16e18 <__assert_fail@plt+0x5d30>
   16df8:	ldr	r0, [fp, #-8]
   16dfc:	add	r0, r0, #1
   16e00:	str	r0, [fp, #-8]
   16e04:	ldr	r0, [fp, #-12]
   16e08:	mvn	r1, #0
   16e0c:	add	r0, r0, r1
   16e10:	str	r0, [fp, #-12]
   16e14:	b	16d48 <__assert_fail@plt+0x5c60>
   16e18:	ldr	r0, [sp, #16]
   16e1c:	ldr	r1, [fp, #-20]	; 0xffffffec
   16e20:	sub	r0, r0, r1
   16e24:	ldr	r1, [fp, #-16]
   16e28:	movw	r2, #0
   16e2c:	sub	r0, r2, r0
   16e30:	add	r0, r1, r0
   16e34:	str	r0, [fp, #-16]
   16e38:	ldr	r0, [sp, #16]
   16e3c:	str	r0, [fp, #-20]	; 0xffffffec
   16e40:	ldr	r0, [fp, #-8]
   16e44:	ldr	r1, [fp, #-12]
   16e48:	add	r0, r0, r1
   16e4c:	str	r0, [sp, #12]
   16e50:	ldrb	r0, [fp, #-21]	; 0xffffffeb
   16e54:	tst	r0, #1
   16e58:	beq	16e78 <__assert_fail@plt+0x5d90>
   16e5c:	ldr	r0, [fp, #-4]
   16e60:	ldr	r2, [sp, #12]
   16e64:	sub	r1, fp, #8
   16e68:	sub	r3, fp, #12
   16e6c:	bl	172e4 <__assert_fail@plt+0x61fc>
   16e70:	str	r0, [sp, #8]
   16e74:	b	16e80 <__assert_fail@plt+0x5d98>
   16e78:	ldr	r0, [fp, #-8]
   16e7c:	str	r0, [sp, #8]
   16e80:	ldr	r0, [fp, #-12]
   16e84:	cmp	r0, #0
   16e88:	beq	16eb0 <__assert_fail@plt+0x5dc8>
   16e8c:	ldr	r0, [fp, #-12]
   16e90:	cmp	r0, #4
   16e94:	bge	16ebc <__assert_fail@plt+0x5dd4>
   16e98:	ldrb	r0, [fp, #-22]	; 0xffffffea
   16e9c:	tst	r0, #1
   16ea0:	bne	16ebc <__assert_fail@plt+0x5dd4>
   16ea4:	ldrb	r0, [fp, #-21]	; 0xffffffeb
   16ea8:	tst	r0, #1
   16eac:	beq	16ebc <__assert_fail@plt+0x5dd4>
   16eb0:	movw	r0, #0
   16eb4:	str	r0, [fp, #-12]
   16eb8:	b	16ef0 <__assert_fail@plt+0x5e08>
   16ebc:	ldr	r0, [sp, #8]
   16ec0:	ldr	r1, [fp, #-12]
   16ec4:	sub	r2, fp, #16
   16ec8:	sub	r3, fp, #20
   16ecc:	bl	16f20 <__assert_fail@plt+0x5e38>
   16ed0:	tst	r0, #1
   16ed4:	bne	16edc <__assert_fail@plt+0x5df4>
   16ed8:	b	16ef0 <__assert_fail@plt+0x5e08>
   16edc:	ldr	r0, [sp, #12]
   16ee0:	ldr	r1, [fp, #-8]
   16ee4:	sub	r0, r0, r1
   16ee8:	str	r0, [fp, #-12]
   16eec:	b	16d48 <__assert_fail@plt+0x5c60>
   16ef0:	ldr	r0, [fp, #-20]	; 0xffffffec
   16ef4:	ldr	r1, [fp, #8]
   16ef8:	ldr	r2, [r1]
   16efc:	sub	r0, r2, r0
   16f00:	str	r0, [r1]
   16f04:	ldr	r0, [fp, #-12]
   16f08:	cmp	r0, #0
   16f0c:	movw	r0, #0
   16f10:	moveq	r0, #1
   16f14:	and	r0, r0, #1
   16f18:	mov	sp, fp
   16f1c:	pop	{fp, pc}
   16f20:	push	{fp, lr}
   16f24:	mov	fp, sp
   16f28:	sub	sp, sp, #40	; 0x28
   16f2c:	str	r0, [fp, #-8]
   16f30:	str	r1, [fp, #-12]
   16f34:	str	r2, [fp, #-16]
   16f38:	str	r3, [sp, #20]
   16f3c:	ldr	r0, [fp, #-16]
   16f40:	ldr	r0, [r0]
   16f44:	str	r0, [sp, #16]
   16f48:	ldr	r0, [fp, #-12]
   16f4c:	cmp	r0, #2
   16f50:	bge	16f64 <__assert_fail@plt+0x5e7c>
   16f54:	movw	r0, #0
   16f58:	and	r0, r0, #1
   16f5c:	strb	r0, [fp, #-1]
   16f60:	b	172d4 <__assert_fail@plt+0x61ec>
   16f64:	ldr	r0, [fp, #-8]
   16f68:	ldrb	r0, [r0]
   16f6c:	bl	16c58 <__assert_fail@plt+0x5b70>
   16f70:	tst	r0, #1
   16f74:	beq	16f8c <__assert_fail@plt+0x5ea4>
   16f78:	ldr	r0, [fp, #-8]
   16f7c:	ldrb	r0, [r0, #1]
   16f80:	bl	16c58 <__assert_fail@plt+0x5b70>
   16f84:	tst	r0, #1
   16f88:	bne	16f9c <__assert_fail@plt+0x5eb4>
   16f8c:	movw	r0, #0
   16f90:	and	r0, r0, #1
   16f94:	strb	r0, [fp, #-1]
   16f98:	b	172d4 <__assert_fail@plt+0x61ec>
   16f9c:	ldr	r0, [sp, #20]
   16fa0:	ldr	r0, [r0]
   16fa4:	cmp	r0, #0
   16fa8:	beq	17028 <__assert_fail@plt+0x5f40>
   16fac:	ldr	r0, [fp, #-8]
   16fb0:	ldrb	r0, [r0]
   16fb4:	bl	15f3c <__assert_fail@plt+0x4e54>
   16fb8:	and	r0, r0, #255	; 0xff
   16fbc:	movw	lr, #11843	; 0x2e43
   16fc0:	movt	lr, #2
   16fc4:	add	r0, lr, r0
   16fc8:	ldrsb	r0, [r0]
   16fcc:	lsl	r0, r0, #2
   16fd0:	ldr	lr, [fp, #-8]
   16fd4:	ldrb	lr, [lr, #1]
   16fd8:	str	r0, [sp, #12]
   16fdc:	mov	r0, lr
   16fe0:	bl	15f3c <__assert_fail@plt+0x4e54>
   16fe4:	and	r0, r0, #255	; 0xff
   16fe8:	movw	lr, #11843	; 0x2e43
   16fec:	movt	lr, #2
   16ff0:	add	r0, lr, r0
   16ff4:	ldrsb	r0, [r0]
   16ff8:	asr	r0, r0, #4
   16ffc:	ldr	lr, [sp, #12]
   17000:	orr	r0, lr, r0
   17004:	ldr	lr, [sp, #16]
   17008:	add	r1, lr, #1
   1700c:	str	r1, [sp, #16]
   17010:	strb	r0, [lr]
   17014:	ldr	r0, [sp, #20]
   17018:	ldr	r1, [r0]
   1701c:	mvn	lr, #0
   17020:	add	r1, r1, lr
   17024:	str	r1, [r0]
   17028:	ldr	r0, [fp, #-12]
   1702c:	cmp	r0, #2
   17030:	bne	17054 <__assert_fail@plt+0x5f6c>
   17034:	b	17038 <__assert_fail@plt+0x5f50>
   17038:	ldr	r0, [sp, #16]
   1703c:	ldr	r1, [fp, #-16]
   17040:	str	r0, [r1]
   17044:	movw	r0, #0
   17048:	and	r0, r0, #1
   1704c:	strb	r0, [fp, #-1]
   17050:	b	172d4 <__assert_fail@plt+0x61ec>
   17054:	ldr	r0, [fp, #-8]
   17058:	ldrb	r0, [r0, #2]
   1705c:	cmp	r0, #61	; 0x3d
   17060:	bne	170c4 <__assert_fail@plt+0x5fdc>
   17064:	ldr	r0, [fp, #-12]
   17068:	cmp	r0, #4
   1706c:	beq	17090 <__assert_fail@plt+0x5fa8>
   17070:	b	17074 <__assert_fail@plt+0x5f8c>
   17074:	ldr	r0, [sp, #16]
   17078:	ldr	r1, [fp, #-16]
   1707c:	str	r0, [r1]
   17080:	movw	r0, #0
   17084:	and	r0, r0, #1
   17088:	strb	r0, [fp, #-1]
   1708c:	b	172d4 <__assert_fail@plt+0x61ec>
   17090:	ldr	r0, [fp, #-8]
   17094:	ldrb	r0, [r0, #3]
   17098:	cmp	r0, #61	; 0x3d
   1709c:	beq	170c0 <__assert_fail@plt+0x5fd8>
   170a0:	b	170a4 <__assert_fail@plt+0x5fbc>
   170a4:	ldr	r0, [sp, #16]
   170a8:	ldr	r1, [fp, #-16]
   170ac:	str	r0, [r1]
   170b0:	movw	r0, #0
   170b4:	and	r0, r0, #1
   170b8:	strb	r0, [fp, #-1]
   170bc:	b	172d4 <__assert_fail@plt+0x61ec>
   170c0:	b	172bc <__assert_fail@plt+0x61d4>
   170c4:	ldr	r0, [fp, #-8]
   170c8:	ldrb	r0, [r0, #2]
   170cc:	bl	16c58 <__assert_fail@plt+0x5b70>
   170d0:	tst	r0, #1
   170d4:	bne	170f8 <__assert_fail@plt+0x6010>
   170d8:	b	170dc <__assert_fail@plt+0x5ff4>
   170dc:	ldr	r0, [sp, #16]
   170e0:	ldr	r1, [fp, #-16]
   170e4:	str	r0, [r1]
   170e8:	movw	r0, #0
   170ec:	and	r0, r0, #1
   170f0:	strb	r0, [fp, #-1]
   170f4:	b	172d4 <__assert_fail@plt+0x61ec>
   170f8:	ldr	r0, [sp, #20]
   170fc:	ldr	r0, [r0]
   17100:	cmp	r0, #0
   17104:	beq	17188 <__assert_fail@plt+0x60a0>
   17108:	ldr	r0, [fp, #-8]
   1710c:	ldrb	r0, [r0, #1]
   17110:	bl	15f3c <__assert_fail@plt+0x4e54>
   17114:	and	r0, r0, #255	; 0xff
   17118:	movw	lr, #11843	; 0x2e43
   1711c:	movt	lr, #2
   17120:	add	r0, lr, r0
   17124:	ldrsb	r0, [r0]
   17128:	lsl	r0, r0, #4
   1712c:	and	r0, r0, #240	; 0xf0
   17130:	ldr	lr, [fp, #-8]
   17134:	ldrb	lr, [lr, #2]
   17138:	str	r0, [sp, #8]
   1713c:	mov	r0, lr
   17140:	bl	15f3c <__assert_fail@plt+0x4e54>
   17144:	and	r0, r0, #255	; 0xff
   17148:	movw	lr, #11843	; 0x2e43
   1714c:	movt	lr, #2
   17150:	add	r0, lr, r0
   17154:	ldrsb	r0, [r0]
   17158:	asr	r0, r0, #2
   1715c:	ldr	lr, [sp, #8]
   17160:	orr	r0, lr, r0
   17164:	ldr	lr, [sp, #16]
   17168:	add	r1, lr, #1
   1716c:	str	r1, [sp, #16]
   17170:	strb	r0, [lr]
   17174:	ldr	r0, [sp, #20]
   17178:	ldr	r1, [r0]
   1717c:	mvn	lr, #0
   17180:	add	r1, r1, lr
   17184:	str	r1, [r0]
   17188:	ldr	r0, [fp, #-12]
   1718c:	cmp	r0, #3
   17190:	bne	171b4 <__assert_fail@plt+0x60cc>
   17194:	b	17198 <__assert_fail@plt+0x60b0>
   17198:	ldr	r0, [sp, #16]
   1719c:	ldr	r1, [fp, #-16]
   171a0:	str	r0, [r1]
   171a4:	movw	r0, #0
   171a8:	and	r0, r0, #1
   171ac:	strb	r0, [fp, #-1]
   171b0:	b	172d4 <__assert_fail@plt+0x61ec>
   171b4:	ldr	r0, [fp, #-8]
   171b8:	ldrb	r0, [r0, #3]
   171bc:	cmp	r0, #61	; 0x3d
   171c0:	bne	171f4 <__assert_fail@plt+0x610c>
   171c4:	ldr	r0, [fp, #-12]
   171c8:	cmp	r0, #4
   171cc:	beq	171f0 <__assert_fail@plt+0x6108>
   171d0:	b	171d4 <__assert_fail@plt+0x60ec>
   171d4:	ldr	r0, [sp, #16]
   171d8:	ldr	r1, [fp, #-16]
   171dc:	str	r0, [r1]
   171e0:	movw	r0, #0
   171e4:	and	r0, r0, #1
   171e8:	strb	r0, [fp, #-1]
   171ec:	b	172d4 <__assert_fail@plt+0x61ec>
   171f0:	b	172b8 <__assert_fail@plt+0x61d0>
   171f4:	ldr	r0, [fp, #-8]
   171f8:	ldrb	r0, [r0, #3]
   171fc:	bl	16c58 <__assert_fail@plt+0x5b70>
   17200:	tst	r0, #1
   17204:	bne	17228 <__assert_fail@plt+0x6140>
   17208:	b	1720c <__assert_fail@plt+0x6124>
   1720c:	ldr	r0, [sp, #16]
   17210:	ldr	r1, [fp, #-16]
   17214:	str	r0, [r1]
   17218:	movw	r0, #0
   1721c:	and	r0, r0, #1
   17220:	strb	r0, [fp, #-1]
   17224:	b	172d4 <__assert_fail@plt+0x61ec>
   17228:	ldr	r0, [sp, #20]
   1722c:	ldr	r0, [r0]
   17230:	cmp	r0, #0
   17234:	beq	172b4 <__assert_fail@plt+0x61cc>
   17238:	ldr	r0, [fp, #-8]
   1723c:	ldrb	r0, [r0, #2]
   17240:	bl	15f3c <__assert_fail@plt+0x4e54>
   17244:	and	r0, r0, #255	; 0xff
   17248:	movw	lr, #11843	; 0x2e43
   1724c:	movt	lr, #2
   17250:	add	r0, lr, r0
   17254:	ldrsb	r0, [r0]
   17258:	lsl	r0, r0, #6
   1725c:	and	r0, r0, #192	; 0xc0
   17260:	ldr	lr, [fp, #-8]
   17264:	ldrb	lr, [lr, #3]
   17268:	str	r0, [sp, #4]
   1726c:	mov	r0, lr
   17270:	bl	15f3c <__assert_fail@plt+0x4e54>
   17274:	and	r0, r0, #255	; 0xff
   17278:	movw	lr, #11843	; 0x2e43
   1727c:	movt	lr, #2
   17280:	add	r0, lr, r0
   17284:	ldrsb	r0, [r0]
   17288:	ldr	lr, [sp, #4]
   1728c:	orr	r0, lr, r0
   17290:	ldr	lr, [sp, #16]
   17294:	add	r1, lr, #1
   17298:	str	r1, [sp, #16]
   1729c:	strb	r0, [lr]
   172a0:	ldr	r0, [sp, #20]
   172a4:	ldr	r1, [r0]
   172a8:	mvn	lr, #0
   172ac:	add	r1, r1, lr
   172b0:	str	r1, [r0]
   172b4:	b	172b8 <__assert_fail@plt+0x61d0>
   172b8:	b	172bc <__assert_fail@plt+0x61d4>
   172bc:	ldr	r0, [sp, #16]
   172c0:	ldr	r1, [fp, #-16]
   172c4:	str	r0, [r1]
   172c8:	movw	r0, #1
   172cc:	and	r0, r0, #1
   172d0:	strb	r0, [fp, #-1]
   172d4:	ldrb	r0, [fp, #-1]
   172d8:	and	r0, r0, #1
   172dc:	mov	sp, fp
   172e0:	pop	{fp, pc}
   172e4:	push	{fp, lr}
   172e8:	mov	fp, sp
   172ec:	sub	sp, sp, #32
   172f0:	str	r0, [fp, #-8]
   172f4:	str	r1, [fp, #-12]
   172f8:	str	r2, [sp, #16]
   172fc:	str	r3, [sp, #12]
   17300:	ldr	r0, [fp, #-8]
   17304:	ldr	r0, [r0]
   17308:	cmp	r0, #4
   1730c:	bne	1731c <__assert_fail@plt+0x6234>
   17310:	ldr	r0, [fp, #-8]
   17314:	movw	r1, #0
   17318:	str	r1, [r0]
   1731c:	ldr	r0, [fp, #-8]
   17320:	ldr	r0, [r0]
   17324:	cmp	r0, #0
   17328:	bne	1739c <__assert_fail@plt+0x62b4>
   1732c:	ldr	r0, [fp, #-12]
   17330:	ldr	r0, [r0]
   17334:	str	r0, [sp, #8]
   17338:	ldr	r0, [sp, #16]
   1733c:	ldr	r1, [fp, #-12]
   17340:	ldr	r1, [r1]
   17344:	sub	r0, r0, r1
   17348:	movw	r1, #4
   1734c:	cmp	r1, r0
   17350:	bgt	17398 <__assert_fail@plt+0x62b0>
   17354:	ldr	r0, [sp, #8]
   17358:	mov	r1, #10
   1735c:	mov	r2, #4
   17360:	bl	11040 <memchr@plt>
   17364:	movw	r1, #0
   17368:	cmp	r0, r1
   1736c:	bne	17398 <__assert_fail@plt+0x62b0>
   17370:	ldr	r0, [fp, #-12]
   17374:	ldr	r1, [r0]
   17378:	add	r1, r1, #4
   1737c:	str	r1, [r0]
   17380:	ldr	r0, [sp, #12]
   17384:	movw	r1, #4
   17388:	str	r1, [r0]
   1738c:	ldr	r0, [sp, #8]
   17390:	str	r0, [fp, #-4]
   17394:	b	17440 <__assert_fail@plt+0x6358>
   17398:	b	1739c <__assert_fail@plt+0x62b4>
   1739c:	ldr	r0, [fp, #-12]
   173a0:	ldr	r0, [r0]
   173a4:	str	r0, [sp, #4]
   173a8:	ldr	r0, [sp, #4]
   173ac:	ldr	r1, [sp, #16]
   173b0:	cmp	r0, r1
   173b4:	bcs	17418 <__assert_fail@plt+0x6330>
   173b8:	ldr	r0, [sp, #4]
   173bc:	add	r1, r0, #1
   173c0:	str	r1, [sp, #4]
   173c4:	ldrb	r0, [r0]
   173c8:	strb	r0, [sp, #3]
   173cc:	ldrb	r0, [sp, #3]
   173d0:	cmp	r0, #10
   173d4:	beq	17414 <__assert_fail@plt+0x632c>
   173d8:	ldrb	r0, [sp, #3]
   173dc:	ldr	r1, [fp, #-8]
   173e0:	add	r1, r1, #4
   173e4:	ldr	r2, [fp, #-8]
   173e8:	ldr	r3, [r2]
   173ec:	add	ip, r3, #1
   173f0:	str	ip, [r2]
   173f4:	add	r1, r1, r3
   173f8:	strb	r0, [r1]
   173fc:	ldr	r0, [fp, #-8]
   17400:	ldr	r0, [r0]
   17404:	cmp	r0, #4
   17408:	bne	17410 <__assert_fail@plt+0x6328>
   1740c:	b	17418 <__assert_fail@plt+0x6330>
   17410:	b	17414 <__assert_fail@plt+0x632c>
   17414:	b	173a8 <__assert_fail@plt+0x62c0>
   17418:	ldr	r0, [sp, #4]
   1741c:	ldr	r1, [fp, #-12]
   17420:	str	r0, [r1]
   17424:	ldr	r0, [fp, #-8]
   17428:	ldr	r0, [r0]
   1742c:	ldr	r1, [sp, #12]
   17430:	str	r0, [r1]
   17434:	ldr	r0, [fp, #-8]
   17438:	add	r0, r0, #4
   1743c:	str	r0, [fp, #-4]
   17440:	ldr	r0, [fp, #-4]
   17444:	mov	sp, fp
   17448:	pop	{fp, pc}
   1744c:	push	{fp, lr}
   17450:	mov	fp, sp
   17454:	sub	sp, sp, #32
   17458:	ldr	ip, [fp, #8]
   1745c:	str	r0, [fp, #-8]
   17460:	str	r1, [fp, #-12]
   17464:	str	r2, [sp, #16]
   17468:	str	r3, [sp, #12]
   1746c:	ldr	r0, [sp, #16]
   17470:	asr	r0, r0, #2
   17474:	add	r0, r0, #1
   17478:	movw	r1, #3
   1747c:	mul	r0, r0, r1
   17480:	str	r0, [sp, #8]
   17484:	ldr	r0, [sp, #8]
   17488:	str	ip, [sp, #4]
   1748c:	bl	180b0 <__assert_fail@plt+0x6fc8>
   17490:	ldr	r1, [sp, #12]
   17494:	str	r0, [r1]
   17498:	ldr	r0, [sp, #12]
   1749c:	ldr	r0, [r0]
   174a0:	movw	r1, #0
   174a4:	cmp	r0, r1
   174a8:	bne	174bc <__assert_fail@plt+0x63d4>
   174ac:	movw	r0, #1
   174b0:	and	r0, r0, #1
   174b4:	strb	r0, [fp, #-1]
   174b8:	b	17534 <__assert_fail@plt+0x644c>
   174bc:	ldr	r0, [fp, #-8]
   174c0:	ldr	r1, [fp, #-12]
   174c4:	ldr	r2, [sp, #16]
   174c8:	ldr	r3, [sp, #12]
   174cc:	ldr	r3, [r3]
   174d0:	add	ip, sp, #8
   174d4:	str	ip, [sp]
   174d8:	bl	16cbc <__assert_fail@plt+0x5bd4>
   174dc:	tst	r0, #1
   174e0:	bne	1750c <__assert_fail@plt+0x6424>
   174e4:	ldr	r0, [sp, #12]
   174e8:	ldr	r0, [r0]
   174ec:	bl	17f48 <__assert_fail@plt+0x6e60>
   174f0:	ldr	r0, [sp, #12]
   174f4:	movw	lr, #0
   174f8:	str	lr, [r0]
   174fc:	movw	r0, #0
   17500:	and	r0, r0, #1
   17504:	strb	r0, [fp, #-1]
   17508:	b	17534 <__assert_fail@plt+0x644c>
   1750c:	ldr	r0, [fp, #8]
   17510:	movw	r1, #0
   17514:	cmp	r0, r1
   17518:	beq	17528 <__assert_fail@plt+0x6440>
   1751c:	ldr	r0, [sp, #8]
   17520:	ldr	r1, [fp, #8]
   17524:	str	r0, [r1]
   17528:	movw	r0, #1
   1752c:	and	r0, r0, #1
   17530:	strb	r0, [fp, #-1]
   17534:	ldrb	r0, [fp, #-1]
   17538:	and	r0, r0, #1
   1753c:	mov	sp, fp
   17540:	pop	{fp, pc}
   17544:	sub	sp, sp, #12
   17548:	str	r0, [sp, #4]
   1754c:	ldr	r0, [sp, #4]
   17550:	sub	r1, r0, #48	; 0x30
   17554:	cmp	r1, #10
   17558:	str	r0, [sp]
   1755c:	bcc	1758c <__assert_fail@plt+0x64a4>
   17560:	b	17564 <__assert_fail@plt+0x647c>
   17564:	ldr	r0, [sp]
   17568:	sub	r1, r0, #65	; 0x41
   1756c:	cmp	r1, #26
   17570:	bcc	1758c <__assert_fail@plt+0x64a4>
   17574:	b	17578 <__assert_fail@plt+0x6490>
   17578:	ldr	r0, [sp]
   1757c:	sub	r1, r0, #97	; 0x61
   17580:	cmp	r1, #25
   17584:	bhi	1759c <__assert_fail@plt+0x64b4>
   17588:	b	1758c <__assert_fail@plt+0x64a4>
   1758c:	movw	r0, #1
   17590:	and	r0, r0, #1
   17594:	strb	r0, [sp, #11]
   17598:	b	175a8 <__assert_fail@plt+0x64c0>
   1759c:	movw	r0, #0
   175a0:	and	r0, r0, #1
   175a4:	strb	r0, [sp, #11]
   175a8:	ldrb	r0, [sp, #11]
   175ac:	and	r0, r0, #1
   175b0:	add	sp, sp, #12
   175b4:	bx	lr
   175b8:	sub	sp, sp, #12
   175bc:	str	r0, [sp, #4]
   175c0:	ldr	r0, [sp, #4]
   175c4:	sub	r1, r0, #65	; 0x41
   175c8:	cmp	r1, #26
   175cc:	str	r0, [sp]
   175d0:	bcc	175ec <__assert_fail@plt+0x6504>
   175d4:	b	175d8 <__assert_fail@plt+0x64f0>
   175d8:	ldr	r0, [sp]
   175dc:	sub	r1, r0, #97	; 0x61
   175e0:	cmp	r1, #25
   175e4:	bhi	175fc <__assert_fail@plt+0x6514>
   175e8:	b	175ec <__assert_fail@plt+0x6504>
   175ec:	movw	r0, #1
   175f0:	and	r0, r0, #1
   175f4:	strb	r0, [sp, #11]
   175f8:	b	17608 <__assert_fail@plt+0x6520>
   175fc:	movw	r0, #0
   17600:	and	r0, r0, #1
   17604:	strb	r0, [sp, #11]
   17608:	ldrb	r0, [sp, #11]
   1760c:	and	r0, r0, #1
   17610:	add	sp, sp, #12
   17614:	bx	lr
   17618:	sub	sp, sp, #8
   1761c:	str	r0, [sp]
   17620:	ldr	r0, [sp]
   17624:	cmp	r0, #127	; 0x7f
   17628:	bhi	17640 <__assert_fail@plt+0x6558>
   1762c:	b	17630 <__assert_fail@plt+0x6548>
   17630:	movw	r0, #1
   17634:	and	r0, r0, #1
   17638:	strb	r0, [sp, #7]
   1763c:	b	1764c <__assert_fail@plt+0x6564>
   17640:	movw	r0, #0
   17644:	and	r0, r0, #1
   17648:	strb	r0, [sp, #7]
   1764c:	ldrb	r0, [sp, #7]
   17650:	and	r0, r0, #1
   17654:	add	sp, sp, #8
   17658:	bx	lr
   1765c:	sub	sp, sp, #8
   17660:	str	r0, [sp, #4]
   17664:	ldr	r0, [sp, #4]
   17668:	cmp	r0, #32
   1766c:	movw	r0, #1
   17670:	str	r0, [sp]
   17674:	beq	1768c <__assert_fail@plt+0x65a4>
   17678:	ldr	r0, [sp, #4]
   1767c:	cmp	r0, #9
   17680:	movw	r0, #0
   17684:	moveq	r0, #1
   17688:	str	r0, [sp]
   1768c:	ldr	r0, [sp]
   17690:	and	r0, r0, #1
   17694:	add	sp, sp, #8
   17698:	bx	lr
   1769c:	sub	sp, sp, #12
   176a0:	str	r0, [sp, #4]
   176a4:	ldr	r0, [sp, #4]
   176a8:	cmp	r0, #32
   176ac:	str	r0, [sp]
   176b0:	bcc	176c8 <__assert_fail@plt+0x65e0>
   176b4:	b	176b8 <__assert_fail@plt+0x65d0>
   176b8:	ldr	r0, [sp]
   176bc:	cmp	r0, #127	; 0x7f
   176c0:	bne	176d8 <__assert_fail@plt+0x65f0>
   176c4:	b	176c8 <__assert_fail@plt+0x65e0>
   176c8:	movw	r0, #1
   176cc:	and	r0, r0, #1
   176d0:	strb	r0, [sp, #11]
   176d4:	b	176e4 <__assert_fail@plt+0x65fc>
   176d8:	movw	r0, #0
   176dc:	and	r0, r0, #1
   176e0:	strb	r0, [sp, #11]
   176e4:	ldrb	r0, [sp, #11]
   176e8:	and	r0, r0, #1
   176ec:	add	sp, sp, #12
   176f0:	bx	lr
   176f4:	sub	sp, sp, #8
   176f8:	str	r0, [sp]
   176fc:	ldr	r0, [sp]
   17700:	sub	r0, r0, #48	; 0x30
   17704:	cmp	r0, #9
   17708:	bhi	17720 <__assert_fail@plt+0x6638>
   1770c:	b	17710 <__assert_fail@plt+0x6628>
   17710:	movw	r0, #1
   17714:	and	r0, r0, #1
   17718:	strb	r0, [sp, #7]
   1771c:	b	1772c <__assert_fail@plt+0x6644>
   17720:	movw	r0, #0
   17724:	and	r0, r0, #1
   17728:	strb	r0, [sp, #7]
   1772c:	ldrb	r0, [sp, #7]
   17730:	and	r0, r0, #1
   17734:	add	sp, sp, #8
   17738:	bx	lr
   1773c:	sub	sp, sp, #8
   17740:	str	r0, [sp]
   17744:	ldr	r0, [sp]
   17748:	sub	r0, r0, #33	; 0x21
   1774c:	cmp	r0, #93	; 0x5d
   17750:	bhi	17768 <__assert_fail@plt+0x6680>
   17754:	b	17758 <__assert_fail@plt+0x6670>
   17758:	movw	r0, #1
   1775c:	and	r0, r0, #1
   17760:	strb	r0, [sp, #7]
   17764:	b	17774 <__assert_fail@plt+0x668c>
   17768:	movw	r0, #0
   1776c:	and	r0, r0, #1
   17770:	strb	r0, [sp, #7]
   17774:	ldrb	r0, [sp, #7]
   17778:	and	r0, r0, #1
   1777c:	add	sp, sp, #8
   17780:	bx	lr
   17784:	sub	sp, sp, #8
   17788:	str	r0, [sp]
   1778c:	ldr	r0, [sp]
   17790:	sub	r0, r0, #97	; 0x61
   17794:	cmp	r0, #25
   17798:	bhi	177b0 <__assert_fail@plt+0x66c8>
   1779c:	b	177a0 <__assert_fail@plt+0x66b8>
   177a0:	movw	r0, #1
   177a4:	and	r0, r0, #1
   177a8:	strb	r0, [sp, #7]
   177ac:	b	177bc <__assert_fail@plt+0x66d4>
   177b0:	movw	r0, #0
   177b4:	and	r0, r0, #1
   177b8:	strb	r0, [sp, #7]
   177bc:	ldrb	r0, [sp, #7]
   177c0:	and	r0, r0, #1
   177c4:	add	sp, sp, #8
   177c8:	bx	lr
   177cc:	sub	sp, sp, #8
   177d0:	str	r0, [sp]
   177d4:	ldr	r0, [sp]
   177d8:	sub	r0, r0, #32
   177dc:	cmp	r0, #94	; 0x5e
   177e0:	bhi	177f8 <__assert_fail@plt+0x6710>
   177e4:	b	177e8 <__assert_fail@plt+0x6700>
   177e8:	movw	r0, #1
   177ec:	and	r0, r0, #1
   177f0:	strb	r0, [sp, #7]
   177f4:	b	17804 <__assert_fail@plt+0x671c>
   177f8:	movw	r0, #0
   177fc:	and	r0, r0, #1
   17800:	strb	r0, [sp, #7]
   17804:	ldrb	r0, [sp, #7]
   17808:	and	r0, r0, #1
   1780c:	add	sp, sp, #8
   17810:	bx	lr
   17814:	sub	sp, sp, #12
   17818:	str	r0, [sp, #4]
   1781c:	ldr	r0, [sp, #4]
   17820:	sub	r0, r0, #33	; 0x21
   17824:	cmp	r0, #93	; 0x5d
   17828:	str	r0, [sp]
   1782c:	bhi	179c8 <__assert_fail@plt+0x68e0>
   17830:	add	r0, pc, #8
   17834:	ldr	r1, [sp]
   17838:	ldr	r0, [r0, r1, lsl #2]
   1783c:	mov	pc, r0
   17840:			; <UNDEFINED> instruction: 0x000179b8
   17844:			; <UNDEFINED> instruction: 0x000179b8
   17848:			; <UNDEFINED> instruction: 0x000179b8
   1784c:			; <UNDEFINED> instruction: 0x000179b8
   17850:			; <UNDEFINED> instruction: 0x000179b8
   17854:			; <UNDEFINED> instruction: 0x000179b8
   17858:			; <UNDEFINED> instruction: 0x000179b8
   1785c:			; <UNDEFINED> instruction: 0x000179b8
   17860:			; <UNDEFINED> instruction: 0x000179b8
   17864:			; <UNDEFINED> instruction: 0x000179b8
   17868:			; <UNDEFINED> instruction: 0x000179b8
   1786c:			; <UNDEFINED> instruction: 0x000179b8
   17870:			; <UNDEFINED> instruction: 0x000179b8
   17874:			; <UNDEFINED> instruction: 0x000179b8
   17878:			; <UNDEFINED> instruction: 0x000179b8
   1787c:	andeq	r7, r1, r8, asr #19
   17880:	andeq	r7, r1, r8, asr #19
   17884:	andeq	r7, r1, r8, asr #19
   17888:	andeq	r7, r1, r8, asr #19
   1788c:	andeq	r7, r1, r8, asr #19
   17890:	andeq	r7, r1, r8, asr #19
   17894:	andeq	r7, r1, r8, asr #19
   17898:	andeq	r7, r1, r8, asr #19
   1789c:	andeq	r7, r1, r8, asr #19
   178a0:	andeq	r7, r1, r8, asr #19
   178a4:			; <UNDEFINED> instruction: 0x000179b8
   178a8:			; <UNDEFINED> instruction: 0x000179b8
   178ac:			; <UNDEFINED> instruction: 0x000179b8
   178b0:			; <UNDEFINED> instruction: 0x000179b8
   178b4:			; <UNDEFINED> instruction: 0x000179b8
   178b8:			; <UNDEFINED> instruction: 0x000179b8
   178bc:			; <UNDEFINED> instruction: 0x000179b8
   178c0:	andeq	r7, r1, r8, asr #19
   178c4:	andeq	r7, r1, r8, asr #19
   178c8:	andeq	r7, r1, r8, asr #19
   178cc:	andeq	r7, r1, r8, asr #19
   178d0:	andeq	r7, r1, r8, asr #19
   178d4:	andeq	r7, r1, r8, asr #19
   178d8:	andeq	r7, r1, r8, asr #19
   178dc:	andeq	r7, r1, r8, asr #19
   178e0:	andeq	r7, r1, r8, asr #19
   178e4:	andeq	r7, r1, r8, asr #19
   178e8:	andeq	r7, r1, r8, asr #19
   178ec:	andeq	r7, r1, r8, asr #19
   178f0:	andeq	r7, r1, r8, asr #19
   178f4:	andeq	r7, r1, r8, asr #19
   178f8:	andeq	r7, r1, r8, asr #19
   178fc:	andeq	r7, r1, r8, asr #19
   17900:	andeq	r7, r1, r8, asr #19
   17904:	andeq	r7, r1, r8, asr #19
   17908:	andeq	r7, r1, r8, asr #19
   1790c:	andeq	r7, r1, r8, asr #19
   17910:	andeq	r7, r1, r8, asr #19
   17914:	andeq	r7, r1, r8, asr #19
   17918:	andeq	r7, r1, r8, asr #19
   1791c:	andeq	r7, r1, r8, asr #19
   17920:	andeq	r7, r1, r8, asr #19
   17924:	andeq	r7, r1, r8, asr #19
   17928:			; <UNDEFINED> instruction: 0x000179b8
   1792c:			; <UNDEFINED> instruction: 0x000179b8
   17930:			; <UNDEFINED> instruction: 0x000179b8
   17934:			; <UNDEFINED> instruction: 0x000179b8
   17938:			; <UNDEFINED> instruction: 0x000179b8
   1793c:			; <UNDEFINED> instruction: 0x000179b8
   17940:	andeq	r7, r1, r8, asr #19
   17944:	andeq	r7, r1, r8, asr #19
   17948:	andeq	r7, r1, r8, asr #19
   1794c:	andeq	r7, r1, r8, asr #19
   17950:	andeq	r7, r1, r8, asr #19
   17954:	andeq	r7, r1, r8, asr #19
   17958:	andeq	r7, r1, r8, asr #19
   1795c:	andeq	r7, r1, r8, asr #19
   17960:	andeq	r7, r1, r8, asr #19
   17964:	andeq	r7, r1, r8, asr #19
   17968:	andeq	r7, r1, r8, asr #19
   1796c:	andeq	r7, r1, r8, asr #19
   17970:	andeq	r7, r1, r8, asr #19
   17974:	andeq	r7, r1, r8, asr #19
   17978:	andeq	r7, r1, r8, asr #19
   1797c:	andeq	r7, r1, r8, asr #19
   17980:	andeq	r7, r1, r8, asr #19
   17984:	andeq	r7, r1, r8, asr #19
   17988:	andeq	r7, r1, r8, asr #19
   1798c:	andeq	r7, r1, r8, asr #19
   17990:	andeq	r7, r1, r8, asr #19
   17994:	andeq	r7, r1, r8, asr #19
   17998:	andeq	r7, r1, r8, asr #19
   1799c:	andeq	r7, r1, r8, asr #19
   179a0:	andeq	r7, r1, r8, asr #19
   179a4:	andeq	r7, r1, r8, asr #19
   179a8:			; <UNDEFINED> instruction: 0x000179b8
   179ac:			; <UNDEFINED> instruction: 0x000179b8
   179b0:			; <UNDEFINED> instruction: 0x000179b8
   179b4:			; <UNDEFINED> instruction: 0x000179b8
   179b8:	movw	r0, #1
   179bc:	and	r0, r0, #1
   179c0:	strb	r0, [sp, #11]
   179c4:	b	179d4 <__assert_fail@plt+0x68ec>
   179c8:	movw	r0, #0
   179cc:	and	r0, r0, #1
   179d0:	strb	r0, [sp, #11]
   179d4:	ldrb	r0, [sp, #11]
   179d8:	and	r0, r0, #1
   179dc:	add	sp, sp, #12
   179e0:	bx	lr
   179e4:	sub	sp, sp, #12
   179e8:	str	r0, [sp, #4]
   179ec:	ldr	r0, [sp, #4]
   179f0:	sub	r1, r0, #9
   179f4:	cmp	r1, #5
   179f8:	str	r0, [sp]
   179fc:	bcc	17a14 <__assert_fail@plt+0x692c>
   17a00:	b	17a04 <__assert_fail@plt+0x691c>
   17a04:	ldr	r0, [sp]
   17a08:	cmp	r0, #32
   17a0c:	bne	17a24 <__assert_fail@plt+0x693c>
   17a10:	b	17a14 <__assert_fail@plt+0x692c>
   17a14:	movw	r0, #1
   17a18:	and	r0, r0, #1
   17a1c:	strb	r0, [sp, #11]
   17a20:	b	17a30 <__assert_fail@plt+0x6948>
   17a24:	movw	r0, #0
   17a28:	and	r0, r0, #1
   17a2c:	strb	r0, [sp, #11]
   17a30:	ldrb	r0, [sp, #11]
   17a34:	and	r0, r0, #1
   17a38:	add	sp, sp, #12
   17a3c:	bx	lr
   17a40:	sub	sp, sp, #8
   17a44:	str	r0, [sp]
   17a48:	ldr	r0, [sp]
   17a4c:	sub	r0, r0, #65	; 0x41
   17a50:	cmp	r0, #25
   17a54:	bhi	17a6c <__assert_fail@plt+0x6984>
   17a58:	b	17a5c <__assert_fail@plt+0x6974>
   17a5c:	movw	r0, #1
   17a60:	and	r0, r0, #1
   17a64:	strb	r0, [sp, #7]
   17a68:	b	17a78 <__assert_fail@plt+0x6990>
   17a6c:	movw	r0, #0
   17a70:	and	r0, r0, #1
   17a74:	strb	r0, [sp, #7]
   17a78:	ldrb	r0, [sp, #7]
   17a7c:	and	r0, r0, #1
   17a80:	add	sp, sp, #8
   17a84:	bx	lr
   17a88:	sub	sp, sp, #12
   17a8c:	str	r0, [sp, #4]
   17a90:	ldr	r0, [sp, #4]
   17a94:	sub	r1, r0, #48	; 0x30
   17a98:	cmp	r1, #10
   17a9c:	str	r0, [sp]
   17aa0:	bcc	17ad0 <__assert_fail@plt+0x69e8>
   17aa4:	b	17aa8 <__assert_fail@plt+0x69c0>
   17aa8:	ldr	r0, [sp]
   17aac:	sub	r1, r0, #65	; 0x41
   17ab0:	cmp	r1, #6
   17ab4:	bcc	17ad0 <__assert_fail@plt+0x69e8>
   17ab8:	b	17abc <__assert_fail@plt+0x69d4>
   17abc:	ldr	r0, [sp]
   17ac0:	sub	r1, r0, #97	; 0x61
   17ac4:	cmp	r1, #5
   17ac8:	bhi	17ae0 <__assert_fail@plt+0x69f8>
   17acc:	b	17ad0 <__assert_fail@plt+0x69e8>
   17ad0:	movw	r0, #1
   17ad4:	and	r0, r0, #1
   17ad8:	strb	r0, [sp, #11]
   17adc:	b	17aec <__assert_fail@plt+0x6a04>
   17ae0:	movw	r0, #0
   17ae4:	and	r0, r0, #1
   17ae8:	strb	r0, [sp, #11]
   17aec:	ldrb	r0, [sp, #11]
   17af0:	and	r0, r0, #1
   17af4:	add	sp, sp, #12
   17af8:	bx	lr
   17afc:	sub	sp, sp, #8
   17b00:	str	r0, [sp]
   17b04:	ldr	r0, [sp]
   17b08:	sub	r0, r0, #65	; 0x41
   17b0c:	cmp	r0, #25
   17b10:	bhi	17b2c <__assert_fail@plt+0x6a44>
   17b14:	b	17b18 <__assert_fail@plt+0x6a30>
   17b18:	ldr	r0, [sp]
   17b1c:	sub	r0, r0, #65	; 0x41
   17b20:	add	r0, r0, #97	; 0x61
   17b24:	str	r0, [sp, #4]
   17b28:	b	17b34 <__assert_fail@plt+0x6a4c>
   17b2c:	ldr	r0, [sp]
   17b30:	str	r0, [sp, #4]
   17b34:	ldr	r0, [sp, #4]
   17b38:	add	sp, sp, #8
   17b3c:	bx	lr
   17b40:	sub	sp, sp, #8
   17b44:	str	r0, [sp]
   17b48:	ldr	r0, [sp]
   17b4c:	sub	r0, r0, #97	; 0x61
   17b50:	cmp	r0, #25
   17b54:	bhi	17b70 <__assert_fail@plt+0x6a88>
   17b58:	b	17b5c <__assert_fail@plt+0x6a74>
   17b5c:	ldr	r0, [sp]
   17b60:	sub	r0, r0, #97	; 0x61
   17b64:	add	r0, r0, #65	; 0x41
   17b68:	str	r0, [sp, #4]
   17b6c:	b	17b78 <__assert_fail@plt+0x6a90>
   17b70:	ldr	r0, [sp]
   17b74:	str	r0, [sp, #4]
   17b78:	ldr	r0, [sp, #4]
   17b7c:	add	sp, sp, #8
   17b80:	bx	lr
   17b84:	sub	sp, sp, #4
   17b88:	str	r0, [sp]
   17b8c:	ldr	r0, [sp]
   17b90:	movw	r1, #16756	; 0x4174
   17b94:	movt	r1, #3
   17b98:	str	r0, [r1]
   17b9c:	add	sp, sp, #4
   17ba0:	bx	lr
   17ba4:	sub	sp, sp, #4
   17ba8:	and	r0, r0, #1
   17bac:	strb	r0, [sp, #3]
   17bb0:	ldrb	r0, [sp, #3]
   17bb4:	and	r0, r0, #1
   17bb8:	movw	r1, #16760	; 0x4178
   17bbc:	movt	r1, #3
   17bc0:	strb	r0, [r1]
   17bc4:	add	sp, sp, #4
   17bc8:	bx	lr
   17bcc:	push	{fp, lr}
   17bd0:	mov	fp, sp
   17bd4:	sub	sp, sp, #24
   17bd8:	movw	r0, #16724	; 0x4154
   17bdc:	movt	r0, #3
   17be0:	ldr	r0, [r0]
   17be4:	bl	21ae0 <__assert_fail@plt+0x109f8>
   17be8:	cmp	r0, #0
   17bec:	beq	17cbc <__assert_fail@plt+0x6bd4>
   17bf0:	movw	r0, #16760	; 0x4178
   17bf4:	movt	r0, #3
   17bf8:	ldrb	r0, [r0]
   17bfc:	tst	r0, #1
   17c00:	beq	17c14 <__assert_fail@plt+0x6b2c>
   17c04:	bl	11010 <__errno_location@plt>
   17c08:	ldr	r0, [r0]
   17c0c:	cmp	r0, #32
   17c10:	beq	17cbc <__assert_fail@plt+0x6bd4>
   17c14:	movw	r0, #10868	; 0x2a74
   17c18:	movt	r0, #2
   17c1c:	bl	10fe0 <gettext@plt>
   17c20:	str	r0, [fp, #-4]
   17c24:	movw	r0, #16756	; 0x4174
   17c28:	movt	r0, #3
   17c2c:	ldr	r0, [r0]
   17c30:	movw	lr, #0
   17c34:	cmp	r0, lr
   17c38:	beq	17c90 <__assert_fail@plt+0x6ba8>
   17c3c:	bl	11010 <__errno_location@plt>
   17c40:	ldr	r1, [r0]
   17c44:	movw	r0, #16756	; 0x4174
   17c48:	movt	r0, #3
   17c4c:	ldr	r0, [r0]
   17c50:	str	r1, [fp, #-8]
   17c54:	bl	1a628 <__assert_fail@plt+0x9540>
   17c58:	ldr	r1, [fp, #-4]
   17c5c:	movw	lr, #0
   17c60:	str	r0, [sp, #12]
   17c64:	mov	r0, lr
   17c68:	ldr	lr, [fp, #-8]
   17c6c:	str	r1, [sp, #8]
   17c70:	mov	r1, lr
   17c74:	movw	r2, #10008	; 0x2718
   17c78:	movt	r2, #2
   17c7c:	ldr	r3, [sp, #12]
   17c80:	ldr	ip, [sp, #8]
   17c84:	str	ip, [sp]
   17c88:	bl	10f80 <error@plt>
   17c8c:	b	17cac <__assert_fail@plt+0x6bc4>
   17c90:	bl	11010 <__errno_location@plt>
   17c94:	ldr	r1, [r0]
   17c98:	ldr	r3, [fp, #-4]
   17c9c:	movw	r0, #0
   17ca0:	movw	r2, #10012	; 0x271c
   17ca4:	movt	r2, #2
   17ca8:	bl	10f80 <error@plt>
   17cac:	movw	r0, #16628	; 0x40f4
   17cb0:	movt	r0, #3
   17cb4:	ldr	r0, [r0]
   17cb8:	bl	10ed8 <_exit@plt>
   17cbc:	movw	r0, #16712	; 0x4148
   17cc0:	movt	r0, #3
   17cc4:	ldr	r0, [r0]
   17cc8:	bl	21ae0 <__assert_fail@plt+0x109f8>
   17ccc:	cmp	r0, #0
   17cd0:	beq	17ce4 <__assert_fail@plt+0x6bfc>
   17cd4:	movw	r0, #16628	; 0x40f4
   17cd8:	movt	r0, #3
   17cdc:	ldr	r0, [r0]
   17ce0:	bl	10ed8 <_exit@plt>
   17ce4:	mov	sp, fp
   17ce8:	pop	{fp, pc}
   17cec:	push	{r4, r5, fp, lr}
   17cf0:	add	fp, sp, #8
   17cf4:	sub	sp, sp, #48	; 0x30
   17cf8:	ldr	r1, [fp, #12]
   17cfc:	ldr	ip, [fp, #8]
   17d00:	ldr	lr, [fp, #16]
   17d04:	str	r0, [fp, #-12]
   17d08:	str	r3, [fp, #-20]	; 0xffffffec
   17d0c:	str	r2, [fp, #-24]	; 0xffffffe8
   17d10:	str	r1, [sp, #28]
   17d14:	str	ip, [sp, #24]
   17d18:	ldr	r0, [fp, #-12]
   17d1c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   17d20:	ldr	r3, [fp, #-20]	; 0xffffffec
   17d24:	ldr	r1, [sp, #24]
   17d28:	ldr	ip, [sp, #28]
   17d2c:	ldr	r4, [fp, #16]
   17d30:	mov	r5, sp
   17d34:	str	r4, [r5, #8]
   17d38:	str	ip, [r5, #4]
   17d3c:	str	r1, [r5]
   17d40:	str	lr, [sp, #20]
   17d44:	bl	10e9c <posix_fadvise64@plt>
   17d48:	str	r0, [sp, #16]
   17d4c:	sub	sp, fp, #8
   17d50:	pop	{r4, r5, fp, pc}
   17d54:	push	{fp, lr}
   17d58:	mov	fp, sp
   17d5c:	sub	sp, sp, #24
   17d60:	str	r0, [fp, #-4]
   17d64:	str	r1, [fp, #-8]
   17d68:	ldr	r0, [fp, #-4]
   17d6c:	movw	r1, #0
   17d70:	cmp	r0, r1
   17d74:	beq	17da4 <__assert_fail@plt+0x6cbc>
   17d78:	ldr	r0, [fp, #-4]
   17d7c:	bl	11034 <fileno@plt>
   17d80:	ldr	lr, [fp, #-8]
   17d84:	mov	r1, sp
   17d88:	str	lr, [r1, #8]
   17d8c:	mov	lr, #0
   17d90:	str	lr, [r1, #4]
   17d94:	str	lr, [r1]
   17d98:	mov	r2, lr
   17d9c:	mov	r3, lr
   17da0:	bl	17cec <__assert_fail@plt+0x6c04>
   17da4:	mov	sp, fp
   17da8:	pop	{fp, pc}
   17dac:	push	{fp, lr}
   17db0:	mov	fp, sp
   17db4:	sub	sp, sp, #32
   17db8:	str	r0, [fp, #-8]
   17dbc:	movw	r0, #0
   17dc0:	str	r0, [fp, #-12]
   17dc4:	str	r0, [sp, #12]
   17dc8:	ldr	r0, [fp, #-8]
   17dcc:	bl	11034 <fileno@plt>
   17dd0:	str	r0, [sp, #16]
   17dd4:	ldr	r0, [sp, #16]
   17dd8:	cmp	r0, #0
   17ddc:	bge	17df0 <__assert_fail@plt+0x6d08>
   17de0:	ldr	r0, [fp, #-8]
   17de4:	bl	11058 <fclose@plt>
   17de8:	str	r0, [fp, #-4]
   17dec:	b	17e8c <__assert_fail@plt+0x6da4>
   17df0:	ldr	r0, [fp, #-8]
   17df4:	bl	10fa4 <__freading@plt>
   17df8:	cmp	r0, #0
   17dfc:	beq	17e34 <__assert_fail@plt+0x6d4c>
   17e00:	ldr	r0, [fp, #-8]
   17e04:	bl	11034 <fileno@plt>
   17e08:	mov	lr, sp
   17e0c:	mov	r1, #1
   17e10:	str	r1, [lr]
   17e14:	mov	r1, #0
   17e18:	mov	r2, r1
   17e1c:	mov	r3, r1
   17e20:	bl	10f44 <lseek64@plt>
   17e24:	and	r0, r0, r1
   17e28:	cmn	r0, #1
   17e2c:	beq	17e50 <__assert_fail@plt+0x6d68>
   17e30:	b	17e34 <__assert_fail@plt+0x6d4c>
   17e34:	ldr	r0, [fp, #-8]
   17e38:	bl	17e98 <__assert_fail@plt+0x6db0>
   17e3c:	cmp	r0, #0
   17e40:	beq	17e50 <__assert_fail@plt+0x6d68>
   17e44:	bl	11010 <__errno_location@plt>
   17e48:	ldr	r0, [r0]
   17e4c:	str	r0, [fp, #-12]
   17e50:	ldr	r0, [fp, #-8]
   17e54:	bl	11058 <fclose@plt>
   17e58:	str	r0, [sp, #12]
   17e5c:	ldr	r0, [fp, #-12]
   17e60:	cmp	r0, #0
   17e64:	beq	17e84 <__assert_fail@plt+0x6d9c>
   17e68:	ldr	r0, [fp, #-12]
   17e6c:	str	r0, [sp, #8]
   17e70:	bl	11010 <__errno_location@plt>
   17e74:	ldr	lr, [sp, #8]
   17e78:	str	lr, [r0]
   17e7c:	mvn	r0, #0
   17e80:	str	r0, [sp, #12]
   17e84:	ldr	r0, [sp, #12]
   17e88:	str	r0, [fp, #-4]
   17e8c:	ldr	r0, [fp, #-4]
   17e90:	mov	sp, fp
   17e94:	pop	{fp, pc}
   17e98:	push	{fp, lr}
   17e9c:	mov	fp, sp
   17ea0:	sub	sp, sp, #8
   17ea4:	str	r0, [sp]
   17ea8:	ldr	r0, [sp]
   17eac:	movw	r1, #0
   17eb0:	cmp	r0, r1
   17eb4:	beq	17ec8 <__assert_fail@plt+0x6de0>
   17eb8:	ldr	r0, [sp]
   17ebc:	bl	10fa4 <__freading@plt>
   17ec0:	cmp	r0, #0
   17ec4:	bne	17ed8 <__assert_fail@plt+0x6df0>
   17ec8:	ldr	r0, [sp]
   17ecc:	bl	10eb4 <fflush@plt>
   17ed0:	str	r0, [sp, #4]
   17ed4:	b	17eec <__assert_fail@plt+0x6e04>
   17ed8:	ldr	r0, [sp]
   17edc:	bl	17ef8 <__assert_fail@plt+0x6e10>
   17ee0:	ldr	r0, [sp]
   17ee4:	bl	10eb4 <fflush@plt>
   17ee8:	str	r0, [sp, #4]
   17eec:	ldr	r0, [sp, #4]
   17ef0:	mov	sp, fp
   17ef4:	pop	{fp, pc}
   17ef8:	push	{fp, lr}
   17efc:	mov	fp, sp
   17f00:	sub	sp, sp, #16
   17f04:	str	r0, [fp, #-4]
   17f08:	ldr	r0, [fp, #-4]
   17f0c:	ldr	r0, [r0]
   17f10:	and	r0, r0, #256	; 0x100
   17f14:	cmp	r0, #0
   17f18:	beq	17f40 <__assert_fail@plt+0x6e58>
   17f1c:	ldr	r0, [fp, #-4]
   17f20:	mov	r1, sp
   17f24:	mov	r2, #1
   17f28:	str	r2, [r1]
   17f2c:	mov	r1, #0
   17f30:	mov	r2, r1
   17f34:	mov	r3, r1
   17f38:	bl	17f88 <__assert_fail@plt+0x6ea0>
   17f3c:	str	r0, [sp, #8]
   17f40:	mov	sp, fp
   17f44:	pop	{fp, pc}
   17f48:	push	{fp, lr}
   17f4c:	mov	fp, sp
   17f50:	sub	sp, sp, #16
   17f54:	str	r0, [fp, #-4]
   17f58:	bl	11010 <__errno_location@plt>
   17f5c:	ldr	r0, [r0]
   17f60:	str	r0, [sp, #8]
   17f64:	ldr	r0, [fp, #-4]
   17f68:	bl	10ecc <free@plt>
   17f6c:	ldr	r0, [sp, #8]
   17f70:	str	r0, [sp, #4]
   17f74:	bl	11010 <__errno_location@plt>
   17f78:	ldr	lr, [sp, #4]
   17f7c:	str	lr, [r0]
   17f80:	mov	sp, fp
   17f84:	pop	{fp, pc}
   17f88:	push	{fp, lr}
   17f8c:	mov	fp, sp
   17f90:	sub	sp, sp, #32
   17f94:	ldr	r1, [fp, #8]
   17f98:	str	r0, [fp, #-8]
   17f9c:	str	r3, [sp, #20]
   17fa0:	str	r2, [sp, #16]
   17fa4:	ldr	r0, [fp, #-8]
   17fa8:	ldr	r0, [r0, #8]
   17fac:	ldr	r2, [fp, #-8]
   17fb0:	ldr	r2, [r2, #4]
   17fb4:	cmp	r0, r2
   17fb8:	str	r1, [sp, #4]
   17fbc:	bne	18068 <__assert_fail@plt+0x6f80>
   17fc0:	ldr	r0, [fp, #-8]
   17fc4:	ldr	r0, [r0, #20]
   17fc8:	ldr	r1, [fp, #-8]
   17fcc:	ldr	r1, [r1, #16]
   17fd0:	cmp	r0, r1
   17fd4:	bne	18068 <__assert_fail@plt+0x6f80>
   17fd8:	ldr	r0, [fp, #-8]
   17fdc:	ldr	r0, [r0, #36]	; 0x24
   17fe0:	movw	r1, #0
   17fe4:	cmp	r0, r1
   17fe8:	bne	18068 <__assert_fail@plt+0x6f80>
   17fec:	ldr	r0, [fp, #-8]
   17ff0:	bl	11034 <fileno@plt>
   17ff4:	ldr	r2, [sp, #16]
   17ff8:	ldr	r3, [sp, #20]
   17ffc:	ldr	lr, [fp, #8]
   18000:	mov	r1, sp
   18004:	str	lr, [r1]
   18008:	bl	10f44 <lseek64@plt>
   1800c:	str	r1, [sp, #12]
   18010:	str	r0, [sp, #8]
   18014:	ldr	r0, [sp, #8]
   18018:	ldr	r1, [sp, #12]
   1801c:	and	r0, r0, r1
   18020:	cmn	r0, #1
   18024:	bne	18038 <__assert_fail@plt+0x6f50>
   18028:	b	1802c <__assert_fail@plt+0x6f44>
   1802c:	mvn	r0, #0
   18030:	str	r0, [fp, #-4]
   18034:	b	18088 <__assert_fail@plt+0x6fa0>
   18038:	ldr	r0, [fp, #-8]
   1803c:	ldr	r1, [r0]
   18040:	bic	r1, r1, #16
   18044:	str	r1, [r0]
   18048:	ldr	r0, [sp, #8]
   1804c:	ldr	r1, [sp, #12]
   18050:	ldr	r2, [fp, #-8]
   18054:	str	r1, [r2, #84]	; 0x54
   18058:	str	r0, [r2, #80]	; 0x50
   1805c:	movw	r0, #0
   18060:	str	r0, [fp, #-4]
   18064:	b	18088 <__assert_fail@plt+0x6fa0>
   18068:	ldr	r0, [fp, #-8]
   1806c:	ldr	r2, [sp, #16]
   18070:	ldr	r3, [sp, #20]
   18074:	ldr	r1, [fp, #8]
   18078:	mov	ip, sp
   1807c:	str	r1, [ip]
   18080:	bl	11064 <fseeko64@plt>
   18084:	str	r0, [fp, #-4]
   18088:	ldr	r0, [fp, #-4]
   1808c:	mov	sp, fp
   18090:	pop	{fp, pc}
   18094:	push	{fp, lr}
   18098:	mov	fp, sp
   1809c:	bl	11010 <__errno_location@plt>
   180a0:	movw	lr, #12
   180a4:	str	lr, [r0]
   180a8:	movw	r0, #0
   180ac:	pop	{fp, pc}
   180b0:	push	{fp, lr}
   180b4:	mov	fp, sp
   180b8:	sub	sp, sp, #8
   180bc:	str	r0, [sp, #4]
   180c0:	ldr	r0, [sp, #4]
   180c4:	cmn	r0, #1
   180c8:	bhi	180dc <__assert_fail@plt+0x6ff4>
   180cc:	ldr	r0, [sp, #4]
   180d0:	bl	218d4 <__assert_fail@plt+0x107ec>
   180d4:	str	r0, [sp]
   180d8:	b	180e4 <__assert_fail@plt+0x6ffc>
   180dc:	bl	18094 <__assert_fail@plt+0x6fac>
   180e0:	str	r0, [sp]
   180e4:	ldr	r0, [sp]
   180e8:	mov	sp, fp
   180ec:	pop	{fp, pc}
   180f0:	push	{fp, lr}
   180f4:	mov	fp, sp
   180f8:	sub	sp, sp, #16
   180fc:	str	r0, [fp, #-4]
   18100:	str	r1, [sp, #8]
   18104:	ldr	r0, [sp, #8]
   18108:	cmn	r0, #1
   1810c:	bhi	18144 <__assert_fail@plt+0x705c>
   18110:	ldr	r0, [fp, #-4]
   18114:	ldr	r1, [sp, #8]
   18118:	ldr	r2, [sp, #8]
   1811c:	cmp	r2, #0
   18120:	movw	r2, #0
   18124:	movne	r2, #1
   18128:	mvn	r3, #0
   1812c:	eor	r2, r2, r3
   18130:	and	r2, r2, #1
   18134:	orr	r1, r1, r2
   18138:	bl	21944 <__assert_fail@plt+0x1085c>
   1813c:	str	r0, [sp, #4]
   18140:	b	1814c <__assert_fail@plt+0x7064>
   18144:	bl	18094 <__assert_fail@plt+0x6fac>
   18148:	str	r0, [sp, #4]
   1814c:	ldr	r0, [sp, #4]
   18150:	mov	sp, fp
   18154:	pop	{fp, pc}
   18158:	push	{fp, lr}
   1815c:	mov	fp, sp
   18160:	sub	sp, sp, #16
   18164:	str	r0, [sp, #8]
   18168:	str	r1, [sp, #4]
   1816c:	ldr	r0, [sp, #8]
   18170:	mvn	r1, #0
   18174:	cmp	r1, r0
   18178:	bcs	1819c <__assert_fail@plt+0x70b4>
   1817c:	ldr	r0, [sp, #4]
   18180:	cmp	r0, #0
   18184:	beq	18194 <__assert_fail@plt+0x70ac>
   18188:	bl	18094 <__assert_fail@plt+0x6fac>
   1818c:	str	r0, [fp, #-4]
   18190:	b	181dc <__assert_fail@plt+0x70f4>
   18194:	movw	r0, #0
   18198:	str	r0, [sp, #8]
   1819c:	ldr	r0, [sp, #4]
   181a0:	mvn	r1, #0
   181a4:	cmp	r1, r0
   181a8:	bcs	181cc <__assert_fail@plt+0x70e4>
   181ac:	ldr	r0, [sp, #8]
   181b0:	cmp	r0, #0
   181b4:	beq	181c4 <__assert_fail@plt+0x70dc>
   181b8:	bl	18094 <__assert_fail@plt+0x6fac>
   181bc:	str	r0, [fp, #-4]
   181c0:	b	181dc <__assert_fail@plt+0x70f4>
   181c4:	movw	r0, #0
   181c8:	str	r0, [sp, #4]
   181cc:	ldr	r0, [sp, #8]
   181d0:	ldr	r1, [sp, #4]
   181d4:	bl	21838 <__assert_fail@plt+0x10750>
   181d8:	str	r0, [fp, #-4]
   181dc:	ldr	r0, [fp, #-4]
   181e0:	mov	sp, fp
   181e4:	pop	{fp, pc}
   181e8:	push	{fp, lr}
   181ec:	mov	fp, sp
   181f0:	sub	sp, sp, #16
   181f4:	str	r0, [fp, #-4]
   181f8:	str	r1, [sp, #8]
   181fc:	str	r2, [sp, #4]
   18200:	ldr	r0, [sp, #8]
   18204:	cmp	r0, #0
   18208:	beq	18218 <__assert_fail@plt+0x7130>
   1820c:	ldr	r0, [sp, #4]
   18210:	cmp	r0, #0
   18214:	bne	18224 <__assert_fail@plt+0x713c>
   18218:	movw	r0, #1
   1821c:	str	r0, [sp, #4]
   18220:	str	r0, [sp, #8]
   18224:	ldr	r0, [sp, #8]
   18228:	cmn	r0, #1
   1822c:	bhi	18254 <__assert_fail@plt+0x716c>
   18230:	ldr	r0, [sp, #4]
   18234:	cmn	r0, #1
   18238:	bhi	18254 <__assert_fail@plt+0x716c>
   1823c:	ldr	r0, [fp, #-4]
   18240:	ldr	r1, [sp, #8]
   18244:	ldr	r2, [sp, #4]
   18248:	bl	1a9fc <__assert_fail@plt+0x9914>
   1824c:	str	r0, [sp]
   18250:	b	1825c <__assert_fail@plt+0x7174>
   18254:	bl	18094 <__assert_fail@plt+0x6fac>
   18258:	str	r0, [sp]
   1825c:	ldr	r0, [sp]
   18260:	mov	sp, fp
   18264:	pop	{fp, pc}
   18268:	push	{fp, lr}
   1826c:	mov	fp, sp
   18270:	sub	sp, sp, #24
   18274:	str	r0, [fp, #-4]
   18278:	ldr	r0, [fp, #-4]
   1827c:	movw	r1, #0
   18280:	cmp	r0, r1
   18284:	bne	182a8 <__assert_fail@plt+0x71c0>
   18288:	movw	r0, #16712	; 0x4148
   1828c:	movt	r0, #3
   18290:	ldr	r1, [r0]
   18294:	movw	r0, #12099	; 0x2f43
   18298:	movt	r0, #2
   1829c:	bl	110b8 <fputs@plt>
   182a0:	str	r0, [sp, #8]
   182a4:	bl	110d0 <abort@plt>
   182a8:	ldr	r0, [fp, #-4]
   182ac:	movw	r1, #47	; 0x2f
   182b0:	bl	1107c <strrchr@plt>
   182b4:	str	r0, [fp, #-8]
   182b8:	ldr	r0, [fp, #-8]
   182bc:	movw	r1, #0
   182c0:	cmp	r0, r1
   182c4:	beq	182d8 <__assert_fail@plt+0x71f0>
   182c8:	ldr	r0, [fp, #-8]
   182cc:	add	r0, r0, #1
   182d0:	str	r0, [sp, #4]
   182d4:	b	182e0 <__assert_fail@plt+0x71f8>
   182d8:	ldr	r0, [fp, #-4]
   182dc:	str	r0, [sp, #4]
   182e0:	ldr	r0, [sp, #4]
   182e4:	str	r0, [sp, #12]
   182e8:	ldr	r0, [sp, #12]
   182ec:	ldr	r1, [fp, #-4]
   182f0:	sub	r0, r0, r1
   182f4:	cmp	r0, #7
   182f8:	blt	18364 <__assert_fail@plt+0x727c>
   182fc:	ldr	r0, [sp, #12]
   18300:	mvn	r1, #6
   18304:	add	r0, r0, r1
   18308:	movw	r1, #12155	; 0x2f7b
   1830c:	movt	r1, #2
   18310:	movw	r2, #7
   18314:	bl	110c4 <strncmp@plt>
   18318:	cmp	r0, #0
   1831c:	bne	18364 <__assert_fail@plt+0x727c>
   18320:	ldr	r0, [sp, #12]
   18324:	str	r0, [fp, #-4]
   18328:	ldr	r0, [sp, #12]
   1832c:	movw	r1, #12163	; 0x2f83
   18330:	movt	r1, #2
   18334:	movw	r2, #3
   18338:	bl	110c4 <strncmp@plt>
   1833c:	cmp	r0, #0
   18340:	bne	18360 <__assert_fail@plt+0x7278>
   18344:	ldr	r0, [sp, #12]
   18348:	add	r0, r0, #3
   1834c:	str	r0, [fp, #-4]
   18350:	ldr	r0, [fp, #-4]
   18354:	movw	r1, #16696	; 0x4138
   18358:	movt	r1, #3
   1835c:	str	r0, [r1]
   18360:	b	18364 <__assert_fail@plt+0x727c>
   18364:	ldr	r0, [fp, #-4]
   18368:	movw	r1, #16764	; 0x417c
   1836c:	movt	r1, #3
   18370:	str	r0, [r1]
   18374:	ldr	r0, [fp, #-4]
   18378:	movw	r1, #16700	; 0x413c
   1837c:	movt	r1, #3
   18380:	str	r0, [r1]
   18384:	mov	sp, fp
   18388:	pop	{fp, pc}
   1838c:	push	{fp, lr}
   18390:	mov	fp, sp
   18394:	sub	sp, sp, #24
   18398:	str	r0, [fp, #-4]
   1839c:	bl	11010 <__errno_location@plt>
   183a0:	ldr	r0, [r0]
   183a4:	str	r0, [fp, #-8]
   183a8:	ldr	r0, [fp, #-4]
   183ac:	movw	lr, #0
   183b0:	cmp	r0, lr
   183b4:	beq	183c4 <__assert_fail@plt+0x72dc>
   183b8:	ldr	r0, [fp, #-4]
   183bc:	str	r0, [sp, #8]
   183c0:	b	183d4 <__assert_fail@plt+0x72ec>
   183c4:	movw	r0, #16768	; 0x4180
   183c8:	movt	r0, #3
   183cc:	str	r0, [sp, #8]
   183d0:	b	183d4 <__assert_fail@plt+0x72ec>
   183d4:	ldr	r0, [sp, #8]
   183d8:	movw	r1, #48	; 0x30
   183dc:	bl	1f37c <__assert_fail@plt+0xe294>
   183e0:	str	r0, [sp, #12]
   183e4:	ldr	r0, [fp, #-8]
   183e8:	str	r0, [sp, #4]
   183ec:	bl	11010 <__errno_location@plt>
   183f0:	ldr	r1, [sp, #4]
   183f4:	str	r1, [r0]
   183f8:	ldr	r0, [sp, #12]
   183fc:	mov	sp, fp
   18400:	pop	{fp, pc}
   18404:	sub	sp, sp, #8
   18408:	str	r0, [sp, #4]
   1840c:	ldr	r0, [sp, #4]
   18410:	movw	r1, #0
   18414:	cmp	r0, r1
   18418:	beq	18428 <__assert_fail@plt+0x7340>
   1841c:	ldr	r0, [sp, #4]
   18420:	str	r0, [sp]
   18424:	b	18438 <__assert_fail@plt+0x7350>
   18428:	movw	r0, #16768	; 0x4180
   1842c:	movt	r0, #3
   18430:	str	r0, [sp]
   18434:	b	18438 <__assert_fail@plt+0x7350>
   18438:	ldr	r0, [sp]
   1843c:	ldr	r0, [r0]
   18440:	add	sp, sp, #8
   18444:	bx	lr
   18448:	sub	sp, sp, #16
   1844c:	str	r0, [sp, #12]
   18450:	str	r1, [sp, #8]
   18454:	ldr	r0, [sp, #8]
   18458:	ldr	r1, [sp, #12]
   1845c:	movw	r2, #0
   18460:	cmp	r1, r2
   18464:	str	r0, [sp, #4]
   18468:	beq	18478 <__assert_fail@plt+0x7390>
   1846c:	ldr	r0, [sp, #12]
   18470:	str	r0, [sp]
   18474:	b	18488 <__assert_fail@plt+0x73a0>
   18478:	movw	r0, #16768	; 0x4180
   1847c:	movt	r0, #3
   18480:	str	r0, [sp]
   18484:	b	18488 <__assert_fail@plt+0x73a0>
   18488:	ldr	r0, [sp]
   1848c:	ldr	r1, [sp, #4]
   18490:	str	r1, [r0]
   18494:	add	sp, sp, #16
   18498:	bx	lr
   1849c:	sub	sp, sp, #32
   184a0:	str	r0, [sp, #28]
   184a4:	strb	r1, [sp, #27]
   184a8:	str	r2, [sp, #20]
   184ac:	ldrb	r0, [sp, #27]
   184b0:	strb	r0, [sp, #19]
   184b4:	ldr	r0, [sp, #28]
   184b8:	movw	r1, #0
   184bc:	cmp	r0, r1
   184c0:	beq	184d0 <__assert_fail@plt+0x73e8>
   184c4:	ldr	r0, [sp, #28]
   184c8:	str	r0, [sp]
   184cc:	b	184e0 <__assert_fail@plt+0x73f8>
   184d0:	movw	r0, #16768	; 0x4180
   184d4:	movt	r0, #3
   184d8:	str	r0, [sp]
   184dc:	b	184e0 <__assert_fail@plt+0x73f8>
   184e0:	ldr	r0, [sp]
   184e4:	add	r0, r0, #8
   184e8:	ldrb	r1, [sp, #19]
   184ec:	lsr	r1, r1, #5
   184f0:	add	r0, r0, r1, lsl #2
   184f4:	str	r0, [sp, #12]
   184f8:	ldrb	r0, [sp, #19]
   184fc:	and	r0, r0, #31
   18500:	str	r0, [sp, #8]
   18504:	ldr	r0, [sp, #12]
   18508:	ldr	r0, [r0]
   1850c:	ldr	r1, [sp, #8]
   18510:	lsr	r0, r0, r1
   18514:	and	r0, r0, #1
   18518:	str	r0, [sp, #4]
   1851c:	ldr	r0, [sp, #20]
   18520:	and	r0, r0, #1
   18524:	ldr	r1, [sp, #4]
   18528:	eor	r0, r0, r1
   1852c:	ldr	r1, [sp, #8]
   18530:	lsl	r0, r0, r1
   18534:	ldr	r1, [sp, #12]
   18538:	ldr	r2, [r1]
   1853c:	eor	r0, r2, r0
   18540:	str	r0, [r1]
   18544:	ldr	r0, [sp, #4]
   18548:	add	sp, sp, #32
   1854c:	bx	lr
   18550:	sub	sp, sp, #12
   18554:	str	r0, [sp, #8]
   18558:	str	r1, [sp, #4]
   1855c:	ldr	r0, [sp, #8]
   18560:	movw	r1, #0
   18564:	cmp	r0, r1
   18568:	bne	18578 <__assert_fail@plt+0x7490>
   1856c:	movw	r0, #16768	; 0x4180
   18570:	movt	r0, #3
   18574:	str	r0, [sp, #8]
   18578:	ldr	r0, [sp, #8]
   1857c:	ldr	r0, [r0, #4]
   18580:	str	r0, [sp]
   18584:	ldr	r0, [sp, #4]
   18588:	ldr	r1, [sp, #8]
   1858c:	str	r0, [r1, #4]
   18590:	ldr	r0, [sp]
   18594:	add	sp, sp, #12
   18598:	bx	lr
   1859c:	push	{fp, lr}
   185a0:	mov	fp, sp
   185a4:	sub	sp, sp, #16
   185a8:	str	r0, [fp, #-4]
   185ac:	str	r1, [sp, #8]
   185b0:	str	r2, [sp, #4]
   185b4:	ldr	r0, [fp, #-4]
   185b8:	movw	r1, #0
   185bc:	cmp	r0, r1
   185c0:	bne	185d0 <__assert_fail@plt+0x74e8>
   185c4:	movw	r0, #16768	; 0x4180
   185c8:	movt	r0, #3
   185cc:	str	r0, [fp, #-4]
   185d0:	ldr	r0, [fp, #-4]
   185d4:	movw	r1, #10
   185d8:	str	r1, [r0]
   185dc:	ldr	r0, [sp, #8]
   185e0:	movw	r1, #0
   185e4:	cmp	r0, r1
   185e8:	beq	185fc <__assert_fail@plt+0x7514>
   185ec:	ldr	r0, [sp, #4]
   185f0:	movw	r1, #0
   185f4:	cmp	r0, r1
   185f8:	bne	18600 <__assert_fail@plt+0x7518>
   185fc:	bl	110d0 <abort@plt>
   18600:	ldr	r0, [sp, #8]
   18604:	ldr	r1, [fp, #-4]
   18608:	str	r0, [r1, #40]	; 0x28
   1860c:	ldr	r0, [sp, #4]
   18610:	ldr	r1, [fp, #-4]
   18614:	str	r0, [r1, #44]	; 0x2c
   18618:	mov	sp, fp
   1861c:	pop	{fp, pc}
   18620:	push	{r4, r5, r6, sl, fp, lr}
   18624:	add	fp, sp, #16
   18628:	sub	sp, sp, #64	; 0x40
   1862c:	ldr	ip, [fp, #8]
   18630:	str	r0, [fp, #-20]	; 0xffffffec
   18634:	str	r1, [fp, #-24]	; 0xffffffe8
   18638:	str	r2, [fp, #-28]	; 0xffffffe4
   1863c:	str	r3, [fp, #-32]	; 0xffffffe0
   18640:	ldr	r0, [fp, #8]
   18644:	movw	r1, #0
   18648:	cmp	r0, r1
   1864c:	str	ip, [sp, #32]
   18650:	beq	18660 <__assert_fail@plt+0x7578>
   18654:	ldr	r0, [fp, #8]
   18658:	str	r0, [sp, #28]
   1865c:	b	18670 <__assert_fail@plt+0x7588>
   18660:	movw	r0, #16768	; 0x4180
   18664:	movt	r0, #3
   18668:	str	r0, [sp, #28]
   1866c:	b	18670 <__assert_fail@plt+0x7588>
   18670:	ldr	r0, [sp, #28]
   18674:	str	r0, [fp, #-36]	; 0xffffffdc
   18678:	bl	11010 <__errno_location@plt>
   1867c:	ldr	r0, [r0]
   18680:	str	r0, [sp, #40]	; 0x28
   18684:	ldr	r0, [fp, #-20]	; 0xffffffec
   18688:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1868c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   18690:	ldr	r3, [fp, #-32]	; 0xffffffe0
   18694:	ldr	lr, [fp, #-36]	; 0xffffffdc
   18698:	ldr	lr, [lr]
   1869c:	ldr	ip, [fp, #-36]	; 0xffffffdc
   186a0:	ldr	ip, [ip, #4]
   186a4:	ldr	r4, [fp, #-36]	; 0xffffffdc
   186a8:	add	r4, r4, #8
   186ac:	ldr	r5, [fp, #-36]	; 0xffffffdc
   186b0:	ldr	r5, [r5, #40]	; 0x28
   186b4:	ldr	r6, [fp, #-36]	; 0xffffffdc
   186b8:	ldr	r6, [r6, #44]	; 0x2c
   186bc:	str	lr, [sp]
   186c0:	str	ip, [sp, #4]
   186c4:	str	r4, [sp, #8]
   186c8:	str	r5, [sp, #12]
   186cc:	str	r6, [sp, #16]
   186d0:	bl	186f8 <__assert_fail@plt+0x7610>
   186d4:	str	r0, [sp, #36]	; 0x24
   186d8:	ldr	r0, [sp, #40]	; 0x28
   186dc:	str	r0, [sp, #24]
   186e0:	bl	11010 <__errno_location@plt>
   186e4:	ldr	r1, [sp, #24]
   186e8:	str	r1, [r0]
   186ec:	ldr	r0, [sp, #36]	; 0x24
   186f0:	sub	sp, fp, #16
   186f4:	pop	{r4, r5, r6, sl, fp, pc}
   186f8:	push	{r4, r5, r6, sl, fp, lr}
   186fc:	add	fp, sp, #16
   18700:	sub	sp, sp, #168	; 0xa8
   18704:	ldr	ip, [fp, #24]
   18708:	ldr	lr, [fp, #20]
   1870c:	ldr	r4, [fp, #16]
   18710:	ldr	r5, [fp, #12]
   18714:	ldr	r6, [fp, #8]
   18718:	str	r0, [fp, #-24]	; 0xffffffe8
   1871c:	str	r1, [fp, #-28]	; 0xffffffe4
   18720:	str	r2, [fp, #-32]	; 0xffffffe0
   18724:	str	r3, [fp, #-36]	; 0xffffffdc
   18728:	movw	r0, #0
   1872c:	str	r0, [fp, #-44]	; 0xffffffd4
   18730:	str	r0, [fp, #-48]	; 0xffffffd0
   18734:	str	r0, [fp, #-52]	; 0xffffffcc
   18738:	str	r0, [fp, #-56]	; 0xffffffc8
   1873c:	movw	r0, #0
   18740:	strb	r0, [fp, #-57]	; 0xffffffc7
   18744:	str	r6, [sp, #80]	; 0x50
   18748:	str	lr, [sp, #76]	; 0x4c
   1874c:	str	r4, [sp, #72]	; 0x48
   18750:	str	r5, [sp, #68]	; 0x44
   18754:	str	ip, [sp, #64]	; 0x40
   18758:	bl	10f50 <__ctype_get_mb_cur_max@plt>
   1875c:	cmp	r0, #1
   18760:	movw	r0, #0
   18764:	moveq	r0, #1
   18768:	and	r0, r0, #1
   1876c:	strb	r0, [fp, #-58]	; 0xffffffc6
   18770:	ldr	r0, [fp, #12]
   18774:	and	r0, r0, #2
   18778:	cmp	r0, #0
   1877c:	movw	r0, #0
   18780:	movne	r0, #1
   18784:	and	r0, r0, #1
   18788:	strb	r0, [fp, #-59]	; 0xffffffc5
   1878c:	movw	r0, #0
   18790:	strb	r0, [fp, #-60]	; 0xffffffc4
   18794:	strb	r0, [fp, #-61]	; 0xffffffc3
   18798:	movw	r0, #1
   1879c:	strb	r0, [fp, #-62]	; 0xffffffc2
   187a0:	ldr	r0, [fp, #8]
   187a4:	cmp	r0, #10
   187a8:	str	r0, [sp, #60]	; 0x3c
   187ac:	bhi	189d4 <__assert_fail@plt+0x78ec>
   187b0:	add	r0, pc, #8
   187b4:	ldr	r1, [sp, #60]	; 0x3c
   187b8:	ldr	r0, [r0, r1, lsl #2]
   187bc:	mov	pc, r0
   187c0:	andeq	r8, r1, r8, asr #19
   187c4:	andeq	r8, r1, r4, asr #18
   187c8:	andeq	r8, r1, r4, ror #18
   187cc:	andeq	r8, r1, ip, lsr r9
   187d0:	andeq	r8, r1, ip, asr #18
   187d4:	strdeq	r8, [r1], -ip
   187d8:	andeq	r8, r1, ip, ror #15
   187dc:	andeq	r8, r1, r0, ror #16
   187e0:	andeq	r8, r1, r4, ror r8
   187e4:	andeq	r8, r1, r4, ror r8
   187e8:	andeq	r8, r1, r4, ror r8
   187ec:	movw	r0, #5
   187f0:	str	r0, [fp, #8]
   187f4:	movw	r0, #1
   187f8:	strb	r0, [fp, #-59]	; 0xffffffc5
   187fc:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   18800:	tst	r0, #1
   18804:	bne	18840 <__assert_fail@plt+0x7758>
   18808:	b	1880c <__assert_fail@plt+0x7724>
   1880c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   18810:	ldr	r1, [fp, #-28]	; 0xffffffe4
   18814:	cmp	r0, r1
   18818:	bcs	18830 <__assert_fail@plt+0x7748>
   1881c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18820:	ldr	r1, [fp, #-44]	; 0xffffffd4
   18824:	add	r0, r0, r1
   18828:	movw	r1, #34	; 0x22
   1882c:	strb	r1, [r0]
   18830:	ldr	r0, [fp, #-44]	; 0xffffffd4
   18834:	add	r0, r0, #1
   18838:	str	r0, [fp, #-44]	; 0xffffffd4
   1883c:	b	18840 <__assert_fail@plt+0x7758>
   18840:	movw	r0, #1
   18844:	strb	r0, [fp, #-57]	; 0xffffffc7
   18848:	movw	r0, #12243	; 0x2fd3
   1884c:	movt	r0, #2
   18850:	str	r0, [fp, #-52]	; 0xffffffcc
   18854:	movw	r0, #1
   18858:	str	r0, [fp, #-56]	; 0xffffffc8
   1885c:	b	189d8 <__assert_fail@plt+0x78f0>
   18860:	movw	r0, #1
   18864:	strb	r0, [fp, #-57]	; 0xffffffc7
   18868:	movw	r0, #0
   1886c:	strb	r0, [fp, #-59]	; 0xffffffc5
   18870:	b	189d8 <__assert_fail@plt+0x78f0>
   18874:	ldr	r0, [fp, #8]
   18878:	cmp	r0, #10
   1887c:	beq	188a8 <__assert_fail@plt+0x77c0>
   18880:	ldr	r1, [fp, #8]
   18884:	movw	r0, #12245	; 0x2fd5
   18888:	movt	r0, #2
   1888c:	bl	1a8e8 <__assert_fail@plt+0x9800>
   18890:	str	r0, [fp, #20]
   18894:	ldr	r1, [fp, #8]
   18898:	movw	r0, #12247	; 0x2fd7
   1889c:	movt	r0, #2
   188a0:	bl	1a8e8 <__assert_fail@plt+0x9800>
   188a4:	str	r0, [fp, #24]
   188a8:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   188ac:	tst	r0, #1
   188b0:	bne	1891c <__assert_fail@plt+0x7834>
   188b4:	ldr	r0, [fp, #20]
   188b8:	str	r0, [fp, #-52]	; 0xffffffcc
   188bc:	ldr	r0, [fp, #-52]	; 0xffffffcc
   188c0:	ldrsb	r0, [r0]
   188c4:	cmp	r0, #0
   188c8:	beq	18918 <__assert_fail@plt+0x7830>
   188cc:	b	188d0 <__assert_fail@plt+0x77e8>
   188d0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   188d4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   188d8:	cmp	r0, r1
   188dc:	bcs	188f8 <__assert_fail@plt+0x7810>
   188e0:	ldr	r0, [fp, #-52]	; 0xffffffcc
   188e4:	ldrb	r0, [r0]
   188e8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   188ec:	ldr	r2, [fp, #-44]	; 0xffffffd4
   188f0:	add	r1, r1, r2
   188f4:	strb	r0, [r1]
   188f8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   188fc:	add	r0, r0, #1
   18900:	str	r0, [fp, #-44]	; 0xffffffd4
   18904:	b	18908 <__assert_fail@plt+0x7820>
   18908:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1890c:	add	r0, r0, #1
   18910:	str	r0, [fp, #-52]	; 0xffffffcc
   18914:	b	188bc <__assert_fail@plt+0x77d4>
   18918:	b	1891c <__assert_fail@plt+0x7834>
   1891c:	movw	r0, #1
   18920:	strb	r0, [fp, #-57]	; 0xffffffc7
   18924:	ldr	r0, [fp, #24]
   18928:	str	r0, [fp, #-52]	; 0xffffffcc
   1892c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   18930:	bl	10fec <strlen@plt>
   18934:	str	r0, [fp, #-56]	; 0xffffffc8
   18938:	b	189d8 <__assert_fail@plt+0x78f0>
   1893c:	movw	r0, #1
   18940:	strb	r0, [fp, #-57]	; 0xffffffc7
   18944:	movw	r0, #1
   18948:	strb	r0, [fp, #-59]	; 0xffffffc5
   1894c:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   18950:	tst	r0, #1
   18954:	bne	18960 <__assert_fail@plt+0x7878>
   18958:	movw	r0, #1
   1895c:	strb	r0, [fp, #-57]	; 0xffffffc7
   18960:	b	18964 <__assert_fail@plt+0x787c>
   18964:	movw	r0, #2
   18968:	str	r0, [fp, #8]
   1896c:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   18970:	tst	r0, #1
   18974:	bne	189b0 <__assert_fail@plt+0x78c8>
   18978:	b	1897c <__assert_fail@plt+0x7894>
   1897c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   18980:	ldr	r1, [fp, #-28]	; 0xffffffe4
   18984:	cmp	r0, r1
   18988:	bcs	189a0 <__assert_fail@plt+0x78b8>
   1898c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18990:	ldr	r1, [fp, #-44]	; 0xffffffd4
   18994:	add	r0, r0, r1
   18998:	movw	r1, #39	; 0x27
   1899c:	strb	r1, [r0]
   189a0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   189a4:	add	r0, r0, #1
   189a8:	str	r0, [fp, #-44]	; 0xffffffd4
   189ac:	b	189b0 <__assert_fail@plt+0x78c8>
   189b0:	movw	r0, #12247	; 0x2fd7
   189b4:	movt	r0, #2
   189b8:	str	r0, [fp, #-52]	; 0xffffffcc
   189bc:	movw	r0, #1
   189c0:	str	r0, [fp, #-56]	; 0xffffffc8
   189c4:	b	189d8 <__assert_fail@plt+0x78f0>
   189c8:	movw	r0, #0
   189cc:	strb	r0, [fp, #-59]	; 0xffffffc5
   189d0:	b	189d8 <__assert_fail@plt+0x78f0>
   189d4:	bl	110d0 <abort@plt>
   189d8:	movw	r0, #0
   189dc:	str	r0, [fp, #-40]	; 0xffffffd8
   189e0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   189e4:	cmn	r0, #1
   189e8:	bne	18a14 <__assert_fail@plt+0x792c>
   189ec:	ldr	r0, [fp, #-32]	; 0xffffffe0
   189f0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   189f4:	add	r0, r0, r1
   189f8:	ldrb	r0, [r0]
   189fc:	cmp	r0, #0
   18a00:	movw	r0, #0
   18a04:	moveq	r0, #1
   18a08:	and	r0, r0, #1
   18a0c:	str	r0, [sp, #56]	; 0x38
   18a10:	b	18a30 <__assert_fail@plt+0x7948>
   18a14:	ldr	r0, [fp, #-40]	; 0xffffffd8
   18a18:	ldr	r1, [fp, #-36]	; 0xffffffdc
   18a1c:	cmp	r0, r1
   18a20:	movw	r0, #0
   18a24:	moveq	r0, #1
   18a28:	and	r0, r0, #1
   18a2c:	str	r0, [sp, #56]	; 0x38
   18a30:	ldr	r0, [sp, #56]	; 0x38
   18a34:	cmp	r0, #0
   18a38:	movw	r0, #0
   18a3c:	movne	r0, #1
   18a40:	mvn	r1, #0
   18a44:	eor	r0, r0, r1
   18a48:	tst	r0, #1
   18a4c:	beq	19c3c <__assert_fail@plt+0x8b54>
   18a50:	movw	r0, #0
   18a54:	strb	r0, [fp, #-65]	; 0xffffffbf
   18a58:	strb	r0, [fp, #-66]	; 0xffffffbe
   18a5c:	strb	r0, [fp, #-67]	; 0xffffffbd
   18a60:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   18a64:	tst	r0, #1
   18a68:	beq	18b14 <__assert_fail@plt+0x7a2c>
   18a6c:	ldr	r0, [fp, #8]
   18a70:	cmp	r0, #2
   18a74:	beq	18b14 <__assert_fail@plt+0x7a2c>
   18a78:	ldr	r0, [fp, #-56]	; 0xffffffc8
   18a7c:	cmp	r0, #0
   18a80:	beq	18b14 <__assert_fail@plt+0x7a2c>
   18a84:	ldr	r0, [fp, #-40]	; 0xffffffd8
   18a88:	ldr	r1, [fp, #-56]	; 0xffffffc8
   18a8c:	add	r0, r0, r1
   18a90:	ldr	r1, [fp, #-36]	; 0xffffffdc
   18a94:	cmn	r1, #1
   18a98:	str	r0, [sp, #52]	; 0x34
   18a9c:	bne	18ac4 <__assert_fail@plt+0x79dc>
   18aa0:	ldr	r0, [fp, #-56]	; 0xffffffc8
   18aa4:	movw	r1, #1
   18aa8:	cmp	r1, r0
   18aac:	bcs	18ac4 <__assert_fail@plt+0x79dc>
   18ab0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18ab4:	bl	10fec <strlen@plt>
   18ab8:	str	r0, [fp, #-36]	; 0xffffffdc
   18abc:	str	r0, [sp, #48]	; 0x30
   18ac0:	b	18acc <__assert_fail@plt+0x79e4>
   18ac4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   18ac8:	str	r0, [sp, #48]	; 0x30
   18acc:	ldr	r0, [sp, #48]	; 0x30
   18ad0:	ldr	r1, [sp, #52]	; 0x34
   18ad4:	cmp	r1, r0
   18ad8:	bhi	18b14 <__assert_fail@plt+0x7a2c>
   18adc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18ae0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   18ae4:	add	r0, r0, r1
   18ae8:	ldr	r1, [fp, #-52]	; 0xffffffcc
   18aec:	ldr	r2, [fp, #-56]	; 0xffffffc8
   18af0:	bl	10f08 <memcmp@plt>
   18af4:	cmp	r0, #0
   18af8:	bne	18b14 <__assert_fail@plt+0x7a2c>
   18afc:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   18b00:	tst	r0, #1
   18b04:	beq	18b0c <__assert_fail@plt+0x7a24>
   18b08:	b	19dbc <__assert_fail@plt+0x8cd4>
   18b0c:	movw	r0, #1
   18b10:	strb	r0, [fp, #-65]	; 0xffffffbf
   18b14:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18b18:	ldr	r1, [fp, #-40]	; 0xffffffd8
   18b1c:	ldrb	r0, [r0, r1]
   18b20:	strb	r0, [fp, #-63]	; 0xffffffc1
   18b24:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   18b28:	mov	r1, r0
   18b2c:	cmp	r0, #126	; 0x7e
   18b30:	str	r1, [sp, #44]	; 0x2c
   18b34:	bhi	193a4 <__assert_fail@plt+0x82bc>
   18b38:	add	r0, pc, #8
   18b3c:	ldr	r1, [sp, #44]	; 0x2c
   18b40:	ldr	r0, [r0, r1, lsl #2]
   18b44:	mov	pc, r0
   18b48:	andeq	r8, r1, r4, asr #26
   18b4c:	andeq	r9, r1, r4, lsr #7
   18b50:	andeq	r9, r1, r4, lsr #7
   18b54:	andeq	r9, r1, r4, lsr #7
   18b58:	andeq	r9, r1, r4, lsr #7
   18b5c:	andeq	r9, r1, r4, lsr #7
   18b60:	andeq	r9, r1, r4, lsr #7
   18b64:	andeq	r9, r1, ip, asr #2
   18b68:	andeq	r9, r1, r8, asr r1
   18b6c:	andeq	r9, r1, r8, lsl #3
   18b70:	andeq	r9, r1, r0, ror r1
   18b74:	muleq	r1, r4, r1
   18b78:	andeq	r9, r1, r4, ror #2
   18b7c:	andeq	r9, r1, ip, ror r1
   18b80:	andeq	r9, r1, r4, lsr #7
   18b84:	andeq	r9, r1, r4, lsr #7
   18b88:	andeq	r9, r1, r4, lsr #7
   18b8c:	andeq	r9, r1, r4, lsr #7
   18b90:	andeq	r9, r1, r4, lsr #7
   18b94:	andeq	r9, r1, r4, lsr #7
   18b98:	andeq	r9, r1, r4, lsr #7
   18b9c:	andeq	r9, r1, r4, lsr #7
   18ba0:	andeq	r9, r1, r4, lsr #7
   18ba4:	andeq	r9, r1, r4, lsr #7
   18ba8:	andeq	r9, r1, r4, lsr #7
   18bac:	andeq	r9, r1, r4, lsr #7
   18bb0:	andeq	r9, r1, r4, lsr #7
   18bb4:	andeq	r9, r1, r4, lsr #7
   18bb8:	andeq	r9, r1, r4, lsr #7
   18bbc:	andeq	r9, r1, r4, lsr #7
   18bc0:	andeq	r9, r1, r4, lsr #7
   18bc4:	andeq	r9, r1, r4, lsr #7
   18bc8:	andeq	r9, r1, r8, ror r2
   18bcc:	andeq	r9, r1, r0, lsl #5
   18bd0:	andeq	r9, r1, r0, lsl #5
   18bd4:	andeq	r9, r1, r4, ror #4
   18bd8:	andeq	r9, r1, r0, lsl #5
   18bdc:	muleq	r1, r8, r3
   18be0:	andeq	r9, r1, r0, lsl #5
   18be4:	andeq	r9, r1, r0, lsr #5
   18be8:	andeq	r9, r1, r0, lsl #5
   18bec:	andeq	r9, r1, r0, lsl #5
   18bf0:	andeq	r9, r1, r0, lsl #5
   18bf4:	muleq	r1, r8, r3
   18bf8:	muleq	r1, r8, r3
   18bfc:	muleq	r1, r8, r3
   18c00:	muleq	r1, r8, r3
   18c04:	muleq	r1, r8, r3
   18c08:	muleq	r1, r8, r3
   18c0c:	muleq	r1, r8, r3
   18c10:	muleq	r1, r8, r3
   18c14:	muleq	r1, r8, r3
   18c18:	muleq	r1, r8, r3
   18c1c:	muleq	r1, r8, r3
   18c20:	muleq	r1, r8, r3
   18c24:	muleq	r1, r8, r3
   18c28:	muleq	r1, r8, r3
   18c2c:	muleq	r1, r8, r3
   18c30:	muleq	r1, r8, r3
   18c34:	andeq	r9, r1, r0, lsl #5
   18c38:	andeq	r9, r1, r0, lsl #5
   18c3c:	andeq	r9, r1, r0, lsl #5
   18c40:	andeq	r9, r1, r0, lsl #5
   18c44:	andeq	r8, r1, r0, asr pc
   18c48:	andeq	r9, r1, r4, lsr #7
   18c4c:	muleq	r1, r8, r3
   18c50:	muleq	r1, r8, r3
   18c54:	muleq	r1, r8, r3
   18c58:	muleq	r1, r8, r3
   18c5c:	muleq	r1, r8, r3
   18c60:	muleq	r1, r8, r3
   18c64:	muleq	r1, r8, r3
   18c68:	muleq	r1, r8, r3
   18c6c:	muleq	r1, r8, r3
   18c70:	muleq	r1, r8, r3
   18c74:	muleq	r1, r8, r3
   18c78:	muleq	r1, r8, r3
   18c7c:	muleq	r1, r8, r3
   18c80:	muleq	r1, r8, r3
   18c84:	muleq	r1, r8, r3
   18c88:	muleq	r1, r8, r3
   18c8c:	muleq	r1, r8, r3
   18c90:	muleq	r1, r8, r3
   18c94:	muleq	r1, r8, r3
   18c98:	muleq	r1, r8, r3
   18c9c:	muleq	r1, r8, r3
   18ca0:	muleq	r1, r8, r3
   18ca4:	muleq	r1, r8, r3
   18ca8:	muleq	r1, r8, r3
   18cac:	muleq	r1, r8, r3
   18cb0:	muleq	r1, r8, r3
   18cb4:	andeq	r9, r1, r0, lsl #5
   18cb8:	andeq	r9, r1, r0, lsr #3
   18cbc:	muleq	r1, r8, r3
   18cc0:	andeq	r9, r1, r0, lsl #5
   18cc4:	muleq	r1, r8, r3
   18cc8:	andeq	r9, r1, r0, lsl #5
   18ccc:	muleq	r1, r8, r3
   18cd0:	muleq	r1, r8, r3
   18cd4:	muleq	r1, r8, r3
   18cd8:	muleq	r1, r8, r3
   18cdc:	muleq	r1, r8, r3
   18ce0:	muleq	r1, r8, r3
   18ce4:	muleq	r1, r8, r3
   18ce8:	muleq	r1, r8, r3
   18cec:	muleq	r1, r8, r3
   18cf0:	muleq	r1, r8, r3
   18cf4:	muleq	r1, r8, r3
   18cf8:	muleq	r1, r8, r3
   18cfc:	muleq	r1, r8, r3
   18d00:	muleq	r1, r8, r3
   18d04:	muleq	r1, r8, r3
   18d08:	muleq	r1, r8, r3
   18d0c:	muleq	r1, r8, r3
   18d10:	muleq	r1, r8, r3
   18d14:	muleq	r1, r8, r3
   18d18:	muleq	r1, r8, r3
   18d1c:	muleq	r1, r8, r3
   18d20:	muleq	r1, r8, r3
   18d24:	muleq	r1, r8, r3
   18d28:	muleq	r1, r8, r3
   18d2c:	muleq	r1, r8, r3
   18d30:	muleq	r1, r8, r3
   18d34:	andeq	r9, r1, r0, lsr r2
   18d38:	andeq	r9, r1, r0, lsl #5
   18d3c:	andeq	r9, r1, r0, lsr r2
   18d40:	andeq	r9, r1, r4, ror #4
   18d44:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   18d48:	tst	r0, #1
   18d4c:	beq	18f34 <__assert_fail@plt+0x7e4c>
   18d50:	b	18d54 <__assert_fail@plt+0x7c6c>
   18d54:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   18d58:	tst	r0, #1
   18d5c:	beq	18d64 <__assert_fail@plt+0x7c7c>
   18d60:	b	19dbc <__assert_fail@plt+0x8cd4>
   18d64:	movw	r0, #1
   18d68:	strb	r0, [fp, #-66]	; 0xffffffbe
   18d6c:	ldr	r0, [fp, #8]
   18d70:	cmp	r0, #2
   18d74:	bne	18e28 <__assert_fail@plt+0x7d40>
   18d78:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   18d7c:	tst	r0, #1
   18d80:	bne	18e28 <__assert_fail@plt+0x7d40>
   18d84:	b	18d88 <__assert_fail@plt+0x7ca0>
   18d88:	ldr	r0, [fp, #-44]	; 0xffffffd4
   18d8c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   18d90:	cmp	r0, r1
   18d94:	bcs	18dac <__assert_fail@plt+0x7cc4>
   18d98:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18d9c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   18da0:	add	r0, r0, r1
   18da4:	movw	r1, #39	; 0x27
   18da8:	strb	r1, [r0]
   18dac:	ldr	r0, [fp, #-44]	; 0xffffffd4
   18db0:	add	r0, r0, #1
   18db4:	str	r0, [fp, #-44]	; 0xffffffd4
   18db8:	b	18dbc <__assert_fail@plt+0x7cd4>
   18dbc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   18dc0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   18dc4:	cmp	r0, r1
   18dc8:	bcs	18de0 <__assert_fail@plt+0x7cf8>
   18dcc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18dd0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   18dd4:	add	r0, r0, r1
   18dd8:	movw	r1, #36	; 0x24
   18ddc:	strb	r1, [r0]
   18de0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   18de4:	add	r0, r0, #1
   18de8:	str	r0, [fp, #-44]	; 0xffffffd4
   18dec:	b	18df0 <__assert_fail@plt+0x7d08>
   18df0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   18df4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   18df8:	cmp	r0, r1
   18dfc:	bcs	18e14 <__assert_fail@plt+0x7d2c>
   18e00:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18e04:	ldr	r1, [fp, #-44]	; 0xffffffd4
   18e08:	add	r0, r0, r1
   18e0c:	movw	r1, #39	; 0x27
   18e10:	strb	r1, [r0]
   18e14:	ldr	r0, [fp, #-44]	; 0xffffffd4
   18e18:	add	r0, r0, #1
   18e1c:	str	r0, [fp, #-44]	; 0xffffffd4
   18e20:	movw	r0, #1
   18e24:	strb	r0, [fp, #-60]	; 0xffffffc4
   18e28:	b	18e2c <__assert_fail@plt+0x7d44>
   18e2c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   18e30:	ldr	r1, [fp, #-28]	; 0xffffffe4
   18e34:	cmp	r0, r1
   18e38:	bcs	18e50 <__assert_fail@plt+0x7d68>
   18e3c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18e40:	ldr	r1, [fp, #-44]	; 0xffffffd4
   18e44:	add	r0, r0, r1
   18e48:	movw	r1, #92	; 0x5c
   18e4c:	strb	r1, [r0]
   18e50:	ldr	r0, [fp, #-44]	; 0xffffffd4
   18e54:	add	r0, r0, #1
   18e58:	str	r0, [fp, #-44]	; 0xffffffd4
   18e5c:	b	18e60 <__assert_fail@plt+0x7d78>
   18e60:	ldr	r0, [fp, #8]
   18e64:	cmp	r0, #2
   18e68:	beq	18f28 <__assert_fail@plt+0x7e40>
   18e6c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   18e70:	add	r0, r0, #1
   18e74:	ldr	r1, [fp, #-36]	; 0xffffffdc
   18e78:	cmp	r0, r1
   18e7c:	bcs	18f28 <__assert_fail@plt+0x7e40>
   18e80:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18e84:	ldr	r1, [fp, #-40]	; 0xffffffd8
   18e88:	add	r1, r1, #1
   18e8c:	add	r0, r0, r1
   18e90:	ldrb	r0, [r0]
   18e94:	movw	r1, #48	; 0x30
   18e98:	cmp	r1, r0
   18e9c:	bgt	18f28 <__assert_fail@plt+0x7e40>
   18ea0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18ea4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   18ea8:	add	r1, r1, #1
   18eac:	add	r0, r0, r1
   18eb0:	ldrb	r0, [r0]
   18eb4:	cmp	r0, #57	; 0x39
   18eb8:	bgt	18f28 <__assert_fail@plt+0x7e40>
   18ebc:	b	18ec0 <__assert_fail@plt+0x7dd8>
   18ec0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   18ec4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   18ec8:	cmp	r0, r1
   18ecc:	bcs	18ee4 <__assert_fail@plt+0x7dfc>
   18ed0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18ed4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   18ed8:	add	r0, r0, r1
   18edc:	movw	r1, #48	; 0x30
   18ee0:	strb	r1, [r0]
   18ee4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   18ee8:	add	r0, r0, #1
   18eec:	str	r0, [fp, #-44]	; 0xffffffd4
   18ef0:	b	18ef4 <__assert_fail@plt+0x7e0c>
   18ef4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   18ef8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   18efc:	cmp	r0, r1
   18f00:	bcs	18f18 <__assert_fail@plt+0x7e30>
   18f04:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18f08:	ldr	r1, [fp, #-44]	; 0xffffffd4
   18f0c:	add	r0, r0, r1
   18f10:	movw	r1, #48	; 0x30
   18f14:	strb	r1, [r0]
   18f18:	ldr	r0, [fp, #-44]	; 0xffffffd4
   18f1c:	add	r0, r0, #1
   18f20:	str	r0, [fp, #-44]	; 0xffffffd4
   18f24:	b	18f28 <__assert_fail@plt+0x7e40>
   18f28:	movw	r0, #48	; 0x30
   18f2c:	strb	r0, [fp, #-63]	; 0xffffffc1
   18f30:	b	18f4c <__assert_fail@plt+0x7e64>
   18f34:	ldr	r0, [fp, #12]
   18f38:	and	r0, r0, #1
   18f3c:	cmp	r0, #0
   18f40:	beq	18f48 <__assert_fail@plt+0x7e60>
   18f44:	b	19c2c <__assert_fail@plt+0x8b44>
   18f48:	b	18f4c <__assert_fail@plt+0x7e64>
   18f4c:	b	199c8 <__assert_fail@plt+0x88e0>
   18f50:	ldr	r0, [fp, #8]
   18f54:	cmp	r0, #2
   18f58:	str	r0, [sp, #40]	; 0x28
   18f5c:	beq	18f74 <__assert_fail@plt+0x7e8c>
   18f60:	b	18f64 <__assert_fail@plt+0x7e7c>
   18f64:	ldr	r0, [sp, #40]	; 0x28
   18f68:	cmp	r0, #5
   18f6c:	beq	18f88 <__assert_fail@plt+0x7ea0>
   18f70:	b	19144 <__assert_fail@plt+0x805c>
   18f74:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   18f78:	tst	r0, #1
   18f7c:	beq	18f84 <__assert_fail@plt+0x7e9c>
   18f80:	b	19dbc <__assert_fail@plt+0x8cd4>
   18f84:	b	19148 <__assert_fail@plt+0x8060>
   18f88:	ldr	r0, [fp, #12]
   18f8c:	and	r0, r0, #4
   18f90:	cmp	r0, #0
   18f94:	beq	19140 <__assert_fail@plt+0x8058>
   18f98:	ldr	r0, [fp, #-40]	; 0xffffffd8
   18f9c:	add	r0, r0, #2
   18fa0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   18fa4:	cmp	r0, r1
   18fa8:	bcs	19140 <__assert_fail@plt+0x8058>
   18fac:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18fb0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   18fb4:	add	r1, r1, #1
   18fb8:	add	r0, r0, r1
   18fbc:	ldrb	r0, [r0]
   18fc0:	cmp	r0, #63	; 0x3f
   18fc4:	bne	19140 <__assert_fail@plt+0x8058>
   18fc8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18fcc:	ldr	r1, [fp, #-40]	; 0xffffffd8
   18fd0:	add	r0, r0, r1
   18fd4:	ldrb	r0, [r0, #2]
   18fd8:	mov	r1, r0
   18fdc:	cmp	r0, #33	; 0x21
   18fe0:	str	r1, [sp, #36]	; 0x24
   18fe4:	beq	19034 <__assert_fail@plt+0x7f4c>
   18fe8:	b	18fec <__assert_fail@plt+0x7f04>
   18fec:	ldr	r0, [sp, #36]	; 0x24
   18ff0:	sub	r1, r0, #39	; 0x27
   18ff4:	cmp	r1, #3
   18ff8:	bcc	19034 <__assert_fail@plt+0x7f4c>
   18ffc:	b	19000 <__assert_fail@plt+0x7f18>
   19000:	ldr	r0, [sp, #36]	; 0x24
   19004:	cmp	r0, #45	; 0x2d
   19008:	beq	19034 <__assert_fail@plt+0x7f4c>
   1900c:	b	19010 <__assert_fail@plt+0x7f28>
   19010:	ldr	r0, [sp, #36]	; 0x24
   19014:	cmp	r0, #47	; 0x2f
   19018:	beq	19034 <__assert_fail@plt+0x7f4c>
   1901c:	b	19020 <__assert_fail@plt+0x7f38>
   19020:	ldr	r0, [sp, #36]	; 0x24
   19024:	sub	r1, r0, #60	; 0x3c
   19028:	cmp	r1, #2
   1902c:	bhi	19138 <__assert_fail@plt+0x8050>
   19030:	b	19034 <__assert_fail@plt+0x7f4c>
   19034:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   19038:	tst	r0, #1
   1903c:	beq	19044 <__assert_fail@plt+0x7f5c>
   19040:	b	19dbc <__assert_fail@plt+0x8cd4>
   19044:	ldr	r0, [fp, #-32]	; 0xffffffe0
   19048:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1904c:	add	r1, r1, #2
   19050:	add	r0, r0, r1
   19054:	ldrb	r0, [r0]
   19058:	strb	r0, [fp, #-63]	; 0xffffffc1
   1905c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   19060:	add	r0, r0, #2
   19064:	str	r0, [fp, #-40]	; 0xffffffd8
   19068:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1906c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   19070:	cmp	r0, r1
   19074:	bcs	1908c <__assert_fail@plt+0x7fa4>
   19078:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1907c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   19080:	add	r0, r0, r1
   19084:	movw	r1, #63	; 0x3f
   19088:	strb	r1, [r0]
   1908c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19090:	add	r0, r0, #1
   19094:	str	r0, [fp, #-44]	; 0xffffffd4
   19098:	b	1909c <__assert_fail@plt+0x7fb4>
   1909c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   190a0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   190a4:	cmp	r0, r1
   190a8:	bcs	190c0 <__assert_fail@plt+0x7fd8>
   190ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   190b0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   190b4:	add	r0, r0, r1
   190b8:	movw	r1, #34	; 0x22
   190bc:	strb	r1, [r0]
   190c0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   190c4:	add	r0, r0, #1
   190c8:	str	r0, [fp, #-44]	; 0xffffffd4
   190cc:	b	190d0 <__assert_fail@plt+0x7fe8>
   190d0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   190d4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   190d8:	cmp	r0, r1
   190dc:	bcs	190f4 <__assert_fail@plt+0x800c>
   190e0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   190e4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   190e8:	add	r0, r0, r1
   190ec:	movw	r1, #34	; 0x22
   190f0:	strb	r1, [r0]
   190f4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   190f8:	add	r0, r0, #1
   190fc:	str	r0, [fp, #-44]	; 0xffffffd4
   19100:	b	19104 <__assert_fail@plt+0x801c>
   19104:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19108:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1910c:	cmp	r0, r1
   19110:	bcs	19128 <__assert_fail@plt+0x8040>
   19114:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19118:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1911c:	add	r0, r0, r1
   19120:	movw	r1, #63	; 0x3f
   19124:	strb	r1, [r0]
   19128:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1912c:	add	r0, r0, #1
   19130:	str	r0, [fp, #-44]	; 0xffffffd4
   19134:	b	1913c <__assert_fail@plt+0x8054>
   19138:	b	1913c <__assert_fail@plt+0x8054>
   1913c:	b	19140 <__assert_fail@plt+0x8058>
   19140:	b	19148 <__assert_fail@plt+0x8060>
   19144:	b	19148 <__assert_fail@plt+0x8060>
   19148:	b	199c8 <__assert_fail@plt+0x88e0>
   1914c:	movw	r0, #97	; 0x61
   19150:	strb	r0, [fp, #-64]	; 0xffffffc0
   19154:	b	19214 <__assert_fail@plt+0x812c>
   19158:	movw	r0, #98	; 0x62
   1915c:	strb	r0, [fp, #-64]	; 0xffffffc0
   19160:	b	19214 <__assert_fail@plt+0x812c>
   19164:	movw	r0, #102	; 0x66
   19168:	strb	r0, [fp, #-64]	; 0xffffffc0
   1916c:	b	19214 <__assert_fail@plt+0x812c>
   19170:	movw	r0, #110	; 0x6e
   19174:	strb	r0, [fp, #-64]	; 0xffffffc0
   19178:	b	191f4 <__assert_fail@plt+0x810c>
   1917c:	movw	r0, #114	; 0x72
   19180:	strb	r0, [fp, #-64]	; 0xffffffc0
   19184:	b	191f4 <__assert_fail@plt+0x810c>
   19188:	movw	r0, #116	; 0x74
   1918c:	strb	r0, [fp, #-64]	; 0xffffffc0
   19190:	b	191f4 <__assert_fail@plt+0x810c>
   19194:	movw	r0, #118	; 0x76
   19198:	strb	r0, [fp, #-64]	; 0xffffffc0
   1919c:	b	19214 <__assert_fail@plt+0x812c>
   191a0:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   191a4:	strb	r0, [fp, #-64]	; 0xffffffc0
   191a8:	ldr	r0, [fp, #8]
   191ac:	cmp	r0, #2
   191b0:	bne	191c8 <__assert_fail@plt+0x80e0>
   191b4:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   191b8:	tst	r0, #1
   191bc:	beq	191c4 <__assert_fail@plt+0x80dc>
   191c0:	b	19dbc <__assert_fail@plt+0x8cd4>
   191c4:	b	19b50 <__assert_fail@plt+0x8a68>
   191c8:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   191cc:	tst	r0, #1
   191d0:	beq	191f0 <__assert_fail@plt+0x8108>
   191d4:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   191d8:	tst	r0, #1
   191dc:	beq	191f0 <__assert_fail@plt+0x8108>
   191e0:	ldr	r0, [fp, #-56]	; 0xffffffc8
   191e4:	cmp	r0, #0
   191e8:	beq	191f0 <__assert_fail@plt+0x8108>
   191ec:	b	19b50 <__assert_fail@plt+0x8a68>
   191f0:	b	191f4 <__assert_fail@plt+0x810c>
   191f4:	ldr	r0, [fp, #8]
   191f8:	cmp	r0, #2
   191fc:	bne	19210 <__assert_fail@plt+0x8128>
   19200:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   19204:	tst	r0, #1
   19208:	beq	19210 <__assert_fail@plt+0x8128>
   1920c:	b	19dbc <__assert_fail@plt+0x8cd4>
   19210:	b	19214 <__assert_fail@plt+0x812c>
   19214:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   19218:	tst	r0, #1
   1921c:	beq	1922c <__assert_fail@plt+0x8144>
   19220:	ldrb	r0, [fp, #-64]	; 0xffffffc0
   19224:	strb	r0, [fp, #-63]	; 0xffffffc1
   19228:	b	19a3c <__assert_fail@plt+0x8954>
   1922c:	b	199c8 <__assert_fail@plt+0x88e0>
   19230:	ldr	r0, [fp, #-36]	; 0xffffffdc
   19234:	cmn	r0, #1
   19238:	bne	19250 <__assert_fail@plt+0x8168>
   1923c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   19240:	ldrb	r0, [r0, #1]
   19244:	cmp	r0, #0
   19248:	beq	19260 <__assert_fail@plt+0x8178>
   1924c:	b	1925c <__assert_fail@plt+0x8174>
   19250:	ldr	r0, [fp, #-36]	; 0xffffffdc
   19254:	cmp	r0, #1
   19258:	beq	19260 <__assert_fail@plt+0x8178>
   1925c:	b	199c8 <__assert_fail@plt+0x88e0>
   19260:	b	19264 <__assert_fail@plt+0x817c>
   19264:	ldr	r0, [fp, #-40]	; 0xffffffd8
   19268:	cmp	r0, #0
   1926c:	beq	19274 <__assert_fail@plt+0x818c>
   19270:	b	199c8 <__assert_fail@plt+0x88e0>
   19274:	b	19278 <__assert_fail@plt+0x8190>
   19278:	movw	r0, #1
   1927c:	strb	r0, [fp, #-67]	; 0xffffffbd
   19280:	ldr	r0, [fp, #8]
   19284:	cmp	r0, #2
   19288:	bne	1929c <__assert_fail@plt+0x81b4>
   1928c:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   19290:	tst	r0, #1
   19294:	beq	1929c <__assert_fail@plt+0x81b4>
   19298:	b	19dbc <__assert_fail@plt+0x8cd4>
   1929c:	b	199c8 <__assert_fail@plt+0x88e0>
   192a0:	movw	r0, #1
   192a4:	strb	r0, [fp, #-61]	; 0xffffffc3
   192a8:	strb	r0, [fp, #-67]	; 0xffffffbd
   192ac:	ldr	r0, [fp, #8]
   192b0:	cmp	r0, #2
   192b4:	bne	19394 <__assert_fail@plt+0x82ac>
   192b8:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   192bc:	tst	r0, #1
   192c0:	beq	192c8 <__assert_fail@plt+0x81e0>
   192c4:	b	19dbc <__assert_fail@plt+0x8cd4>
   192c8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   192cc:	cmp	r0, #0
   192d0:	beq	192f0 <__assert_fail@plt+0x8208>
   192d4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   192d8:	cmp	r0, #0
   192dc:	bne	192f0 <__assert_fail@plt+0x8208>
   192e0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   192e4:	str	r0, [fp, #-48]	; 0xffffffd0
   192e8:	movw	r0, #0
   192ec:	str	r0, [fp, #-28]	; 0xffffffe4
   192f0:	b	192f4 <__assert_fail@plt+0x820c>
   192f4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   192f8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   192fc:	cmp	r0, r1
   19300:	bcs	19318 <__assert_fail@plt+0x8230>
   19304:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19308:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1930c:	add	r0, r0, r1
   19310:	movw	r1, #39	; 0x27
   19314:	strb	r1, [r0]
   19318:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1931c:	add	r0, r0, #1
   19320:	str	r0, [fp, #-44]	; 0xffffffd4
   19324:	b	19328 <__assert_fail@plt+0x8240>
   19328:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1932c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   19330:	cmp	r0, r1
   19334:	bcs	1934c <__assert_fail@plt+0x8264>
   19338:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1933c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   19340:	add	r0, r0, r1
   19344:	movw	r1, #92	; 0x5c
   19348:	strb	r1, [r0]
   1934c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19350:	add	r0, r0, #1
   19354:	str	r0, [fp, #-44]	; 0xffffffd4
   19358:	b	1935c <__assert_fail@plt+0x8274>
   1935c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19360:	ldr	r1, [fp, #-28]	; 0xffffffe4
   19364:	cmp	r0, r1
   19368:	bcs	19380 <__assert_fail@plt+0x8298>
   1936c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19370:	ldr	r1, [fp, #-44]	; 0xffffffd4
   19374:	add	r0, r0, r1
   19378:	movw	r1, #39	; 0x27
   1937c:	strb	r1, [r0]
   19380:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19384:	add	r0, r0, #1
   19388:	str	r0, [fp, #-44]	; 0xffffffd4
   1938c:	movw	r0, #0
   19390:	strb	r0, [fp, #-60]	; 0xffffffc4
   19394:	b	199c8 <__assert_fail@plt+0x88e0>
   19398:	movw	r0, #1
   1939c:	strb	r0, [fp, #-67]	; 0xffffffbd
   193a0:	b	199c8 <__assert_fail@plt+0x88e0>
   193a4:	ldrb	r0, [fp, #-58]	; 0xffffffc6
   193a8:	tst	r0, #1
   193ac:	beq	193f0 <__assert_fail@plt+0x8308>
   193b0:	mov	r0, #1
   193b4:	str	r0, [fp, #-72]	; 0xffffffb8
   193b8:	bl	10fc8 <__ctype_b_loc@plt>
   193bc:	ldr	r0, [r0]
   193c0:	ldrb	lr, [fp, #-63]	; 0xffffffc1
   193c4:	mov	r1, lr
   193c8:	add	r0, r0, lr, lsl #1
   193cc:	ldrh	r0, [r0]
   193d0:	and	r0, r0, #16384	; 0x4000
   193d4:	cmp	r0, #0
   193d8:	movw	r0, #0
   193dc:	movne	r0, #1
   193e0:	and	r0, r0, #1
   193e4:	strb	r0, [fp, #-73]	; 0xffffffb7
   193e8:	str	r1, [sp, #32]
   193ec:	b	1967c <__assert_fail@plt+0x8594>
   193f0:	sub	r0, fp, #84	; 0x54
   193f4:	movw	r1, #0
   193f8:	and	r1, r1, #255	; 0xff
   193fc:	movw	r2, #8
   19400:	bl	11028 <memset@plt>
   19404:	movw	r0, #0
   19408:	str	r0, [fp, #-72]	; 0xffffffb8
   1940c:	movw	r0, #1
   19410:	strb	r0, [fp, #-73]	; 0xffffffb7
   19414:	ldr	r0, [fp, #-36]	; 0xffffffdc
   19418:	cmn	r0, #1
   1941c:	bne	1942c <__assert_fail@plt+0x8344>
   19420:	ldr	r0, [fp, #-32]	; 0xffffffe0
   19424:	bl	10fec <strlen@plt>
   19428:	str	r0, [fp, #-36]	; 0xffffffdc
   1942c:	b	19430 <__assert_fail@plt+0x8348>
   19430:	ldr	r0, [fp, #-32]	; 0xffffffe0
   19434:	ldr	r1, [fp, #-40]	; 0xffffffd8
   19438:	ldr	r2, [fp, #-72]	; 0xffffffb8
   1943c:	add	r1, r1, r2
   19440:	add	r1, r0, r1
   19444:	ldr	r0, [fp, #-36]	; 0xffffffdc
   19448:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1944c:	ldr	r3, [fp, #-72]	; 0xffffffb8
   19450:	add	r2, r2, r3
   19454:	sub	r2, r0, r2
   19458:	sub	r0, fp, #88	; 0x58
   1945c:	sub	r3, fp, #84	; 0x54
   19460:	bl	21c0c <__assert_fail@plt+0x10b24>
   19464:	str	r0, [sp, #92]	; 0x5c
   19468:	ldr	r0, [sp, #92]	; 0x5c
   1946c:	cmp	r0, #0
   19470:	bne	19478 <__assert_fail@plt+0x8390>
   19474:	b	19678 <__assert_fail@plt+0x8590>
   19478:	ldr	r0, [sp, #92]	; 0x5c
   1947c:	cmn	r0, #1
   19480:	bne	19490 <__assert_fail@plt+0x83a8>
   19484:	movw	r0, #0
   19488:	strb	r0, [fp, #-73]	; 0xffffffb7
   1948c:	b	19678 <__assert_fail@plt+0x8590>
   19490:	ldr	r0, [sp, #92]	; 0x5c
   19494:	cmn	r0, #2
   19498:	bne	1950c <__assert_fail@plt+0x8424>
   1949c:	movw	r0, #0
   194a0:	strb	r0, [fp, #-73]	; 0xffffffb7
   194a4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   194a8:	ldr	r1, [fp, #-72]	; 0xffffffb8
   194ac:	add	r0, r0, r1
   194b0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   194b4:	cmp	r0, r1
   194b8:	movw	r0, #0
   194bc:	str	r0, [sp, #28]
   194c0:	bcs	194ec <__assert_fail@plt+0x8404>
   194c4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   194c8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   194cc:	ldr	r2, [fp, #-72]	; 0xffffffb8
   194d0:	add	r1, r1, r2
   194d4:	add	r0, r0, r1
   194d8:	ldrb	r0, [r0]
   194dc:	cmp	r0, #0
   194e0:	movw	r0, #0
   194e4:	movne	r0, #1
   194e8:	str	r0, [sp, #28]
   194ec:	ldr	r0, [sp, #28]
   194f0:	tst	r0, #1
   194f4:	beq	19508 <__assert_fail@plt+0x8420>
   194f8:	ldr	r0, [fp, #-72]	; 0xffffffb8
   194fc:	add	r0, r0, #1
   19500:	str	r0, [fp, #-72]	; 0xffffffb8
   19504:	b	194a4 <__assert_fail@plt+0x83bc>
   19508:	b	19678 <__assert_fail@plt+0x8590>
   1950c:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   19510:	tst	r0, #1
   19514:	beq	19620 <__assert_fail@plt+0x8538>
   19518:	ldr	r0, [fp, #8]
   1951c:	cmp	r0, #2
   19520:	bne	19620 <__assert_fail@plt+0x8538>
   19524:	movw	r0, #1
   19528:	str	r0, [sp, #88]	; 0x58
   1952c:	ldr	r0, [sp, #88]	; 0x58
   19530:	ldr	r1, [sp, #92]	; 0x5c
   19534:	cmp	r0, r1
   19538:	bcs	1961c <__assert_fail@plt+0x8534>
   1953c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   19540:	ldr	r1, [fp, #-40]	; 0xffffffd8
   19544:	ldr	r2, [fp, #-72]	; 0xffffffb8
   19548:	add	r1, r1, r2
   1954c:	ldr	r2, [sp, #88]	; 0x58
   19550:	add	r1, r1, r2
   19554:	ldrb	r0, [r0, r1]
   19558:	sub	r0, r0, #91	; 0x5b
   1955c:	cmp	r0, #33	; 0x21
   19560:	str	r0, [sp, #24]
   19564:	bhi	19604 <__assert_fail@plt+0x851c>
   19568:	add	r0, pc, #8
   1956c:	ldr	r1, [sp, #24]
   19570:	ldr	r0, [r0, r1, lsl #2]
   19574:	mov	pc, r0
   19578:	andeq	r9, r1, r0, lsl #12
   1957c:	andeq	r9, r1, r0, lsl #12
   19580:	andeq	r9, r1, r4, lsl #12
   19584:	andeq	r9, r1, r0, lsl #12
   19588:	andeq	r9, r1, r4, lsl #12
   1958c:	andeq	r9, r1, r0, lsl #12
   19590:	andeq	r9, r1, r4, lsl #12
   19594:	andeq	r9, r1, r4, lsl #12
   19598:	andeq	r9, r1, r4, lsl #12
   1959c:	andeq	r9, r1, r4, lsl #12
   195a0:	andeq	r9, r1, r4, lsl #12
   195a4:	andeq	r9, r1, r4, lsl #12
   195a8:	andeq	r9, r1, r4, lsl #12
   195ac:	andeq	r9, r1, r4, lsl #12
   195b0:	andeq	r9, r1, r4, lsl #12
   195b4:	andeq	r9, r1, r4, lsl #12
   195b8:	andeq	r9, r1, r4, lsl #12
   195bc:	andeq	r9, r1, r4, lsl #12
   195c0:	andeq	r9, r1, r4, lsl #12
   195c4:	andeq	r9, r1, r4, lsl #12
   195c8:	andeq	r9, r1, r4, lsl #12
   195cc:	andeq	r9, r1, r4, lsl #12
   195d0:	andeq	r9, r1, r4, lsl #12
   195d4:	andeq	r9, r1, r4, lsl #12
   195d8:	andeq	r9, r1, r4, lsl #12
   195dc:	andeq	r9, r1, r4, lsl #12
   195e0:	andeq	r9, r1, r4, lsl #12
   195e4:	andeq	r9, r1, r4, lsl #12
   195e8:	andeq	r9, r1, r4, lsl #12
   195ec:	andeq	r9, r1, r4, lsl #12
   195f0:	andeq	r9, r1, r4, lsl #12
   195f4:	andeq	r9, r1, r4, lsl #12
   195f8:	andeq	r9, r1, r4, lsl #12
   195fc:	andeq	r9, r1, r0, lsl #12
   19600:	b	19dbc <__assert_fail@plt+0x8cd4>
   19604:	b	19608 <__assert_fail@plt+0x8520>
   19608:	b	1960c <__assert_fail@plt+0x8524>
   1960c:	ldr	r0, [sp, #88]	; 0x58
   19610:	add	r0, r0, #1
   19614:	str	r0, [sp, #88]	; 0x58
   19618:	b	1952c <__assert_fail@plt+0x8444>
   1961c:	b	19620 <__assert_fail@plt+0x8538>
   19620:	ldr	r0, [fp, #-88]	; 0xffffffa8
   19624:	bl	10f38 <iswprint@plt>
   19628:	cmp	r0, #0
   1962c:	bne	19638 <__assert_fail@plt+0x8550>
   19630:	movw	r0, #0
   19634:	strb	r0, [fp, #-73]	; 0xffffffb7
   19638:	ldr	r0, [sp, #92]	; 0x5c
   1963c:	ldr	r1, [fp, #-72]	; 0xffffffb8
   19640:	add	r0, r1, r0
   19644:	str	r0, [fp, #-72]	; 0xffffffb8
   19648:	b	1964c <__assert_fail@plt+0x8564>
   1964c:	b	19650 <__assert_fail@plt+0x8568>
   19650:	b	19654 <__assert_fail@plt+0x856c>
   19654:	sub	r0, fp, #84	; 0x54
   19658:	bl	10ef0 <mbsinit@plt>
   1965c:	cmp	r0, #0
   19660:	movw	r0, #0
   19664:	movne	r0, #1
   19668:	mvn	lr, #0
   1966c:	eor	r0, r0, lr
   19670:	tst	r0, #1
   19674:	bne	19430 <__assert_fail@plt+0x8348>
   19678:	b	1967c <__assert_fail@plt+0x8594>
   1967c:	ldrb	r0, [fp, #-73]	; 0xffffffb7
   19680:	and	r0, r0, #1
   19684:	strb	r0, [fp, #-67]	; 0xffffffbd
   19688:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1968c:	movw	r1, #1
   19690:	cmp	r1, r0
   19694:	bcc	196b0 <__assert_fail@plt+0x85c8>
   19698:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   1969c:	tst	r0, #1
   196a0:	beq	199c4 <__assert_fail@plt+0x88dc>
   196a4:	ldrb	r0, [fp, #-73]	; 0xffffffb7
   196a8:	tst	r0, #1
   196ac:	bne	199c4 <__assert_fail@plt+0x88dc>
   196b0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   196b4:	ldr	r1, [fp, #-72]	; 0xffffffb8
   196b8:	add	r0, r0, r1
   196bc:	str	r0, [sp, #84]	; 0x54
   196c0:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   196c4:	tst	r0, #1
   196c8:	beq	19878 <__assert_fail@plt+0x8790>
   196cc:	ldrb	r0, [fp, #-73]	; 0xffffffb7
   196d0:	tst	r0, #1
   196d4:	bne	19878 <__assert_fail@plt+0x8790>
   196d8:	b	196dc <__assert_fail@plt+0x85f4>
   196dc:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   196e0:	tst	r0, #1
   196e4:	beq	196ec <__assert_fail@plt+0x8604>
   196e8:	b	19dbc <__assert_fail@plt+0x8cd4>
   196ec:	movw	r0, #1
   196f0:	strb	r0, [fp, #-66]	; 0xffffffbe
   196f4:	ldr	r0, [fp, #8]
   196f8:	cmp	r0, #2
   196fc:	bne	197b0 <__assert_fail@plt+0x86c8>
   19700:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   19704:	tst	r0, #1
   19708:	bne	197b0 <__assert_fail@plt+0x86c8>
   1970c:	b	19710 <__assert_fail@plt+0x8628>
   19710:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19714:	ldr	r1, [fp, #-28]	; 0xffffffe4
   19718:	cmp	r0, r1
   1971c:	bcs	19734 <__assert_fail@plt+0x864c>
   19720:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19724:	ldr	r1, [fp, #-44]	; 0xffffffd4
   19728:	add	r0, r0, r1
   1972c:	movw	r1, #39	; 0x27
   19730:	strb	r1, [r0]
   19734:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19738:	add	r0, r0, #1
   1973c:	str	r0, [fp, #-44]	; 0xffffffd4
   19740:	b	19744 <__assert_fail@plt+0x865c>
   19744:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19748:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1974c:	cmp	r0, r1
   19750:	bcs	19768 <__assert_fail@plt+0x8680>
   19754:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19758:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1975c:	add	r0, r0, r1
   19760:	movw	r1, #36	; 0x24
   19764:	strb	r1, [r0]
   19768:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1976c:	add	r0, r0, #1
   19770:	str	r0, [fp, #-44]	; 0xffffffd4
   19774:	b	19778 <__assert_fail@plt+0x8690>
   19778:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1977c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   19780:	cmp	r0, r1
   19784:	bcs	1979c <__assert_fail@plt+0x86b4>
   19788:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1978c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   19790:	add	r0, r0, r1
   19794:	movw	r1, #39	; 0x27
   19798:	strb	r1, [r0]
   1979c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   197a0:	add	r0, r0, #1
   197a4:	str	r0, [fp, #-44]	; 0xffffffd4
   197a8:	movw	r0, #1
   197ac:	strb	r0, [fp, #-60]	; 0xffffffc4
   197b0:	b	197b4 <__assert_fail@plt+0x86cc>
   197b4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   197b8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   197bc:	cmp	r0, r1
   197c0:	bcs	197d8 <__assert_fail@plt+0x86f0>
   197c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   197c8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   197cc:	add	r0, r0, r1
   197d0:	movw	r1, #92	; 0x5c
   197d4:	strb	r1, [r0]
   197d8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   197dc:	add	r0, r0, #1
   197e0:	str	r0, [fp, #-44]	; 0xffffffd4
   197e4:	b	197e8 <__assert_fail@plt+0x8700>
   197e8:	b	197ec <__assert_fail@plt+0x8704>
   197ec:	ldr	r0, [fp, #-44]	; 0xffffffd4
   197f0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   197f4:	cmp	r0, r1
   197f8:	bcs	19818 <__assert_fail@plt+0x8730>
   197fc:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   19800:	asr	r0, r0, #6
   19804:	add	r0, r0, #48	; 0x30
   19808:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1980c:	ldr	r2, [fp, #-44]	; 0xffffffd4
   19810:	add	r1, r1, r2
   19814:	strb	r0, [r1]
   19818:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1981c:	add	r0, r0, #1
   19820:	str	r0, [fp, #-44]	; 0xffffffd4
   19824:	b	19828 <__assert_fail@plt+0x8740>
   19828:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1982c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   19830:	cmp	r0, r1
   19834:	bcs	19858 <__assert_fail@plt+0x8770>
   19838:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   1983c:	asr	r0, r0, #3
   19840:	and	r0, r0, #7
   19844:	add	r0, r0, #48	; 0x30
   19848:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1984c:	ldr	r2, [fp, #-44]	; 0xffffffd4
   19850:	add	r1, r1, r2
   19854:	strb	r0, [r1]
   19858:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1985c:	add	r0, r0, #1
   19860:	str	r0, [fp, #-44]	; 0xffffffd4
   19864:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   19868:	and	r0, r0, #7
   1986c:	add	r0, r0, #48	; 0x30
   19870:	strb	r0, [fp, #-63]	; 0xffffffc1
   19874:	b	198c4 <__assert_fail@plt+0x87dc>
   19878:	ldrb	r0, [fp, #-65]	; 0xffffffbf
   1987c:	tst	r0, #1
   19880:	beq	198c0 <__assert_fail@plt+0x87d8>
   19884:	b	19888 <__assert_fail@plt+0x87a0>
   19888:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1988c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   19890:	cmp	r0, r1
   19894:	bcs	198ac <__assert_fail@plt+0x87c4>
   19898:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1989c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   198a0:	add	r0, r0, r1
   198a4:	movw	r1, #92	; 0x5c
   198a8:	strb	r1, [r0]
   198ac:	ldr	r0, [fp, #-44]	; 0xffffffd4
   198b0:	add	r0, r0, #1
   198b4:	str	r0, [fp, #-44]	; 0xffffffd4
   198b8:	movw	r0, #0
   198bc:	strb	r0, [fp, #-65]	; 0xffffffbf
   198c0:	b	198c4 <__assert_fail@plt+0x87dc>
   198c4:	ldr	r0, [sp, #84]	; 0x54
   198c8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   198cc:	add	r1, r1, #1
   198d0:	cmp	r0, r1
   198d4:	bhi	198dc <__assert_fail@plt+0x87f4>
   198d8:	b	199c0 <__assert_fail@plt+0x88d8>
   198dc:	b	198e0 <__assert_fail@plt+0x87f8>
   198e0:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   198e4:	tst	r0, #1
   198e8:	beq	19968 <__assert_fail@plt+0x8880>
   198ec:	ldrb	r0, [fp, #-66]	; 0xffffffbe
   198f0:	tst	r0, #1
   198f4:	bne	19968 <__assert_fail@plt+0x8880>
   198f8:	b	198fc <__assert_fail@plt+0x8814>
   198fc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19900:	ldr	r1, [fp, #-28]	; 0xffffffe4
   19904:	cmp	r0, r1
   19908:	bcs	19920 <__assert_fail@plt+0x8838>
   1990c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19910:	ldr	r1, [fp, #-44]	; 0xffffffd4
   19914:	add	r0, r0, r1
   19918:	movw	r1, #39	; 0x27
   1991c:	strb	r1, [r0]
   19920:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19924:	add	r0, r0, #1
   19928:	str	r0, [fp, #-44]	; 0xffffffd4
   1992c:	b	19930 <__assert_fail@plt+0x8848>
   19930:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19934:	ldr	r1, [fp, #-28]	; 0xffffffe4
   19938:	cmp	r0, r1
   1993c:	bcs	19954 <__assert_fail@plt+0x886c>
   19940:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19944:	ldr	r1, [fp, #-44]	; 0xffffffd4
   19948:	add	r0, r0, r1
   1994c:	movw	r1, #39	; 0x27
   19950:	strb	r1, [r0]
   19954:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19958:	add	r0, r0, #1
   1995c:	str	r0, [fp, #-44]	; 0xffffffd4
   19960:	movw	r0, #0
   19964:	strb	r0, [fp, #-60]	; 0xffffffc4
   19968:	b	1996c <__assert_fail@plt+0x8884>
   1996c:	b	19970 <__assert_fail@plt+0x8888>
   19970:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19974:	ldr	r1, [fp, #-28]	; 0xffffffe4
   19978:	cmp	r0, r1
   1997c:	bcs	19994 <__assert_fail@plt+0x88ac>
   19980:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   19984:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19988:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1998c:	add	r1, r1, r2
   19990:	strb	r0, [r1]
   19994:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19998:	add	r0, r0, #1
   1999c:	str	r0, [fp, #-44]	; 0xffffffd4
   199a0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   199a4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   199a8:	add	r1, r1, #1
   199ac:	str	r1, [fp, #-40]	; 0xffffffd8
   199b0:	add	r0, r0, r1
   199b4:	ldrb	r0, [r0]
   199b8:	strb	r0, [fp, #-63]	; 0xffffffc1
   199bc:	b	196c0 <__assert_fail@plt+0x85d8>
   199c0:	b	19b50 <__assert_fail@plt+0x8a68>
   199c4:	b	199c8 <__assert_fail@plt+0x88e0>
   199c8:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   199cc:	tst	r0, #1
   199d0:	beq	199e0 <__assert_fail@plt+0x88f8>
   199d4:	ldr	r0, [fp, #8]
   199d8:	cmp	r0, #2
   199dc:	bne	199ec <__assert_fail@plt+0x8904>
   199e0:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   199e4:	tst	r0, #1
   199e8:	beq	19a28 <__assert_fail@plt+0x8940>
   199ec:	ldr	r0, [fp, #16]
   199f0:	movw	r1, #0
   199f4:	cmp	r0, r1
   199f8:	beq	19a28 <__assert_fail@plt+0x8940>
   199fc:	ldr	r0, [fp, #16]
   19a00:	ldrb	r1, [fp, #-63]	; 0xffffffc1
   19a04:	lsr	r1, r1, #5
   19a08:	add	r0, r0, r1, lsl #2
   19a0c:	ldr	r0, [r0]
   19a10:	ldrb	r1, [fp, #-63]	; 0xffffffc1
   19a14:	and	r1, r1, #31
   19a18:	lsr	r0, r0, r1
   19a1c:	and	r0, r0, #1
   19a20:	cmp	r0, #0
   19a24:	bne	19a38 <__assert_fail@plt+0x8950>
   19a28:	ldrb	r0, [fp, #-65]	; 0xffffffbf
   19a2c:	tst	r0, #1
   19a30:	bne	19a38 <__assert_fail@plt+0x8950>
   19a34:	b	19b50 <__assert_fail@plt+0x8a68>
   19a38:	b	19a3c <__assert_fail@plt+0x8954>
   19a3c:	b	19a40 <__assert_fail@plt+0x8958>
   19a40:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   19a44:	tst	r0, #1
   19a48:	beq	19a50 <__assert_fail@plt+0x8968>
   19a4c:	b	19dbc <__assert_fail@plt+0x8cd4>
   19a50:	movw	r0, #1
   19a54:	strb	r0, [fp, #-66]	; 0xffffffbe
   19a58:	ldr	r0, [fp, #8]
   19a5c:	cmp	r0, #2
   19a60:	bne	19b14 <__assert_fail@plt+0x8a2c>
   19a64:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   19a68:	tst	r0, #1
   19a6c:	bne	19b14 <__assert_fail@plt+0x8a2c>
   19a70:	b	19a74 <__assert_fail@plt+0x898c>
   19a74:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19a78:	ldr	r1, [fp, #-28]	; 0xffffffe4
   19a7c:	cmp	r0, r1
   19a80:	bcs	19a98 <__assert_fail@plt+0x89b0>
   19a84:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19a88:	ldr	r1, [fp, #-44]	; 0xffffffd4
   19a8c:	add	r0, r0, r1
   19a90:	movw	r1, #39	; 0x27
   19a94:	strb	r1, [r0]
   19a98:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19a9c:	add	r0, r0, #1
   19aa0:	str	r0, [fp, #-44]	; 0xffffffd4
   19aa4:	b	19aa8 <__assert_fail@plt+0x89c0>
   19aa8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19aac:	ldr	r1, [fp, #-28]	; 0xffffffe4
   19ab0:	cmp	r0, r1
   19ab4:	bcs	19acc <__assert_fail@plt+0x89e4>
   19ab8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19abc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   19ac0:	add	r0, r0, r1
   19ac4:	movw	r1, #36	; 0x24
   19ac8:	strb	r1, [r0]
   19acc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19ad0:	add	r0, r0, #1
   19ad4:	str	r0, [fp, #-44]	; 0xffffffd4
   19ad8:	b	19adc <__assert_fail@plt+0x89f4>
   19adc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19ae0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   19ae4:	cmp	r0, r1
   19ae8:	bcs	19b00 <__assert_fail@plt+0x8a18>
   19aec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19af0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   19af4:	add	r0, r0, r1
   19af8:	movw	r1, #39	; 0x27
   19afc:	strb	r1, [r0]
   19b00:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19b04:	add	r0, r0, #1
   19b08:	str	r0, [fp, #-44]	; 0xffffffd4
   19b0c:	movw	r0, #1
   19b10:	strb	r0, [fp, #-60]	; 0xffffffc4
   19b14:	b	19b18 <__assert_fail@plt+0x8a30>
   19b18:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19b1c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   19b20:	cmp	r0, r1
   19b24:	bcs	19b3c <__assert_fail@plt+0x8a54>
   19b28:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19b2c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   19b30:	add	r0, r0, r1
   19b34:	movw	r1, #92	; 0x5c
   19b38:	strb	r1, [r0]
   19b3c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19b40:	add	r0, r0, #1
   19b44:	str	r0, [fp, #-44]	; 0xffffffd4
   19b48:	b	19b4c <__assert_fail@plt+0x8a64>
   19b4c:	b	19b50 <__assert_fail@plt+0x8a68>
   19b50:	b	19b54 <__assert_fail@plt+0x8a6c>
   19b54:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   19b58:	tst	r0, #1
   19b5c:	beq	19bdc <__assert_fail@plt+0x8af4>
   19b60:	ldrb	r0, [fp, #-66]	; 0xffffffbe
   19b64:	tst	r0, #1
   19b68:	bne	19bdc <__assert_fail@plt+0x8af4>
   19b6c:	b	19b70 <__assert_fail@plt+0x8a88>
   19b70:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19b74:	ldr	r1, [fp, #-28]	; 0xffffffe4
   19b78:	cmp	r0, r1
   19b7c:	bcs	19b94 <__assert_fail@plt+0x8aac>
   19b80:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19b84:	ldr	r1, [fp, #-44]	; 0xffffffd4
   19b88:	add	r0, r0, r1
   19b8c:	movw	r1, #39	; 0x27
   19b90:	strb	r1, [r0]
   19b94:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19b98:	add	r0, r0, #1
   19b9c:	str	r0, [fp, #-44]	; 0xffffffd4
   19ba0:	b	19ba4 <__assert_fail@plt+0x8abc>
   19ba4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19ba8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   19bac:	cmp	r0, r1
   19bb0:	bcs	19bc8 <__assert_fail@plt+0x8ae0>
   19bb4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19bb8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   19bbc:	add	r0, r0, r1
   19bc0:	movw	r1, #39	; 0x27
   19bc4:	strb	r1, [r0]
   19bc8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19bcc:	add	r0, r0, #1
   19bd0:	str	r0, [fp, #-44]	; 0xffffffd4
   19bd4:	movw	r0, #0
   19bd8:	strb	r0, [fp, #-60]	; 0xffffffc4
   19bdc:	b	19be0 <__assert_fail@plt+0x8af8>
   19be0:	b	19be4 <__assert_fail@plt+0x8afc>
   19be4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19be8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   19bec:	cmp	r0, r1
   19bf0:	bcs	19c08 <__assert_fail@plt+0x8b20>
   19bf4:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   19bf8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19bfc:	ldr	r2, [fp, #-44]	; 0xffffffd4
   19c00:	add	r1, r1, r2
   19c04:	strb	r0, [r1]
   19c08:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19c0c:	add	r0, r0, #1
   19c10:	str	r0, [fp, #-44]	; 0xffffffd4
   19c14:	ldrb	r0, [fp, #-67]	; 0xffffffbd
   19c18:	tst	r0, #1
   19c1c:	bne	19c28 <__assert_fail@plt+0x8b40>
   19c20:	movw	r0, #0
   19c24:	strb	r0, [fp, #-62]	; 0xffffffc2
   19c28:	b	19c2c <__assert_fail@plt+0x8b44>
   19c2c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   19c30:	add	r0, r0, #1
   19c34:	str	r0, [fp, #-40]	; 0xffffffd8
   19c38:	b	189e0 <__assert_fail@plt+0x78f8>
   19c3c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19c40:	cmp	r0, #0
   19c44:	bne	19c64 <__assert_fail@plt+0x8b7c>
   19c48:	ldr	r0, [fp, #8]
   19c4c:	cmp	r0, #2
   19c50:	bne	19c64 <__assert_fail@plt+0x8b7c>
   19c54:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   19c58:	tst	r0, #1
   19c5c:	beq	19c64 <__assert_fail@plt+0x8b7c>
   19c60:	b	19dbc <__assert_fail@plt+0x8cd4>
   19c64:	ldr	r0, [fp, #8]
   19c68:	cmp	r0, #2
   19c6c:	bne	19d0c <__assert_fail@plt+0x8c24>
   19c70:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   19c74:	tst	r0, #1
   19c78:	bne	19d0c <__assert_fail@plt+0x8c24>
   19c7c:	ldrb	r0, [fp, #-61]	; 0xffffffc3
   19c80:	tst	r0, #1
   19c84:	beq	19d0c <__assert_fail@plt+0x8c24>
   19c88:	ldrb	r0, [fp, #-62]	; 0xffffffc2
   19c8c:	tst	r0, #1
   19c90:	beq	19cd8 <__assert_fail@plt+0x8bf0>
   19c94:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19c98:	ldr	r1, [fp, #-48]	; 0xffffffd0
   19c9c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   19ca0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   19ca4:	ldr	ip, [fp, #12]
   19ca8:	ldr	lr, [fp, #16]
   19cac:	ldr	r4, [fp, #20]
   19cb0:	ldr	r5, [fp, #24]
   19cb4:	movw	r6, #5
   19cb8:	str	r6, [sp]
   19cbc:	str	ip, [sp, #4]
   19cc0:	str	lr, [sp, #8]
   19cc4:	str	r4, [sp, #12]
   19cc8:	str	r5, [sp, #16]
   19ccc:	bl	186f8 <__assert_fail@plt+0x7610>
   19cd0:	str	r0, [fp, #-20]	; 0xffffffec
   19cd4:	b	19e24 <__assert_fail@plt+0x8d3c>
   19cd8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   19cdc:	cmp	r0, #0
   19ce0:	bne	19d04 <__assert_fail@plt+0x8c1c>
   19ce4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   19ce8:	cmp	r0, #0
   19cec:	beq	19d04 <__assert_fail@plt+0x8c1c>
   19cf0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   19cf4:	str	r0, [fp, #-28]	; 0xffffffe4
   19cf8:	movw	r0, #0
   19cfc:	str	r0, [fp, #-44]	; 0xffffffd4
   19d00:	b	187a0 <__assert_fail@plt+0x76b8>
   19d04:	b	19d08 <__assert_fail@plt+0x8c20>
   19d08:	b	19d0c <__assert_fail@plt+0x8c24>
   19d0c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   19d10:	movw	r1, #0
   19d14:	cmp	r0, r1
   19d18:	beq	19d8c <__assert_fail@plt+0x8ca4>
   19d1c:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   19d20:	tst	r0, #1
   19d24:	bne	19d8c <__assert_fail@plt+0x8ca4>
   19d28:	b	19d2c <__assert_fail@plt+0x8c44>
   19d2c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   19d30:	ldrsb	r0, [r0]
   19d34:	cmp	r0, #0
   19d38:	beq	19d88 <__assert_fail@plt+0x8ca0>
   19d3c:	b	19d40 <__assert_fail@plt+0x8c58>
   19d40:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19d44:	ldr	r1, [fp, #-28]	; 0xffffffe4
   19d48:	cmp	r0, r1
   19d4c:	bcs	19d68 <__assert_fail@plt+0x8c80>
   19d50:	ldr	r0, [fp, #-52]	; 0xffffffcc
   19d54:	ldrb	r0, [r0]
   19d58:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19d5c:	ldr	r2, [fp, #-44]	; 0xffffffd4
   19d60:	add	r1, r1, r2
   19d64:	strb	r0, [r1]
   19d68:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19d6c:	add	r0, r0, #1
   19d70:	str	r0, [fp, #-44]	; 0xffffffd4
   19d74:	b	19d78 <__assert_fail@plt+0x8c90>
   19d78:	ldr	r0, [fp, #-52]	; 0xffffffcc
   19d7c:	add	r0, r0, #1
   19d80:	str	r0, [fp, #-52]	; 0xffffffcc
   19d84:	b	19d2c <__assert_fail@plt+0x8c44>
   19d88:	b	19d8c <__assert_fail@plt+0x8ca4>
   19d8c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19d90:	ldr	r1, [fp, #-28]	; 0xffffffe4
   19d94:	cmp	r0, r1
   19d98:	bcs	19db0 <__assert_fail@plt+0x8cc8>
   19d9c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19da0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   19da4:	add	r0, r0, r1
   19da8:	movw	r1, #0
   19dac:	strb	r1, [r0]
   19db0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19db4:	str	r0, [fp, #-20]	; 0xffffffec
   19db8:	b	19e24 <__assert_fail@plt+0x8d3c>
   19dbc:	ldr	r0, [fp, #8]
   19dc0:	cmp	r0, #2
   19dc4:	bne	19ddc <__assert_fail@plt+0x8cf4>
   19dc8:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   19dcc:	tst	r0, #1
   19dd0:	beq	19ddc <__assert_fail@plt+0x8cf4>
   19dd4:	movw	r0, #4
   19dd8:	str	r0, [fp, #8]
   19ddc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19de0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   19de4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   19de8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   19dec:	ldr	ip, [fp, #8]
   19df0:	ldr	lr, [fp, #12]
   19df4:	mvn	r4, #2
   19df8:	and	lr, lr, r4
   19dfc:	ldr	r4, [fp, #20]
   19e00:	ldr	r5, [fp, #24]
   19e04:	str	ip, [sp]
   19e08:	str	lr, [sp, #4]
   19e0c:	movw	ip, #0
   19e10:	str	ip, [sp, #8]
   19e14:	str	r4, [sp, #12]
   19e18:	str	r5, [sp, #16]
   19e1c:	bl	186f8 <__assert_fail@plt+0x7610>
   19e20:	str	r0, [fp, #-20]	; 0xffffffec
   19e24:	ldr	r0, [fp, #-20]	; 0xffffffec
   19e28:	sub	sp, fp, #16
   19e2c:	pop	{r4, r5, r6, sl, fp, pc}
   19e30:	push	{fp, lr}
   19e34:	mov	fp, sp
   19e38:	sub	sp, sp, #16
   19e3c:	str	r0, [fp, #-4]
   19e40:	str	r1, [sp, #8]
   19e44:	str	r2, [sp, #4]
   19e48:	ldr	r0, [fp, #-4]
   19e4c:	ldr	r1, [sp, #8]
   19e50:	ldr	r3, [sp, #4]
   19e54:	movw	r2, #0
   19e58:	bl	19e64 <__assert_fail@plt+0x8d7c>
   19e5c:	mov	sp, fp
   19e60:	pop	{fp, pc}
   19e64:	push	{r4, r5, r6, sl, fp, lr}
   19e68:	add	fp, sp, #16
   19e6c:	sub	sp, sp, #72	; 0x48
   19e70:	str	r0, [fp, #-20]	; 0xffffffec
   19e74:	str	r1, [fp, #-24]	; 0xffffffe8
   19e78:	str	r2, [fp, #-28]	; 0xffffffe4
   19e7c:	str	r3, [fp, #-32]	; 0xffffffe0
   19e80:	ldr	r0, [fp, #-32]	; 0xffffffe0
   19e84:	movw	r1, #0
   19e88:	cmp	r0, r1
   19e8c:	beq	19e9c <__assert_fail@plt+0x8db4>
   19e90:	ldr	r0, [fp, #-32]	; 0xffffffe0
   19e94:	str	r0, [sp, #32]
   19e98:	b	19eac <__assert_fail@plt+0x8dc4>
   19e9c:	movw	r0, #16768	; 0x4180
   19ea0:	movt	r0, #3
   19ea4:	str	r0, [sp, #32]
   19ea8:	b	19eac <__assert_fail@plt+0x8dc4>
   19eac:	ldr	r0, [sp, #32]
   19eb0:	str	r0, [fp, #-36]	; 0xffffffdc
   19eb4:	bl	11010 <__errno_location@plt>
   19eb8:	ldr	r0, [r0]
   19ebc:	str	r0, [fp, #-40]	; 0xffffffd8
   19ec0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   19ec4:	ldr	r0, [r0, #4]
   19ec8:	ldr	lr, [fp, #-28]	; 0xffffffe4
   19ecc:	movw	r1, #0
   19ed0:	cmp	lr, r1
   19ed4:	movw	lr, #0
   19ed8:	movne	lr, #1
   19edc:	tst	lr, #1
   19ee0:	mov	lr, r1
   19ee4:	moveq	lr, #1
   19ee8:	orr	r0, r0, lr
   19eec:	str	r0, [sp, #44]	; 0x2c
   19ef0:	ldr	r2, [fp, #-20]	; 0xffffffec
   19ef4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19ef8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   19efc:	ldr	r0, [r0]
   19f00:	ldr	lr, [sp, #44]	; 0x2c
   19f04:	ldr	ip, [fp, #-36]	; 0xffffffdc
   19f08:	add	ip, ip, #8
   19f0c:	ldr	r4, [fp, #-36]	; 0xffffffdc
   19f10:	ldr	r4, [r4, #40]	; 0x28
   19f14:	ldr	r5, [fp, #-36]	; 0xffffffdc
   19f18:	ldr	r5, [r5, #44]	; 0x2c
   19f1c:	str	r0, [sp, #28]
   19f20:	mov	r0, r1
   19f24:	ldr	r6, [sp, #28]
   19f28:	str	r6, [sp]
   19f2c:	str	lr, [sp, #4]
   19f30:	str	ip, [sp, #8]
   19f34:	str	r4, [sp, #12]
   19f38:	str	r5, [sp, #16]
   19f3c:	bl	186f8 <__assert_fail@plt+0x7610>
   19f40:	add	r0, r0, #1
   19f44:	str	r0, [sp, #40]	; 0x28
   19f48:	ldr	r0, [sp, #40]	; 0x28
   19f4c:	bl	1c718 <__assert_fail@plt+0xb630>
   19f50:	str	r0, [sp, #36]	; 0x24
   19f54:	ldr	r0, [sp, #36]	; 0x24
   19f58:	ldr	r1, [sp, #40]	; 0x28
   19f5c:	ldr	r2, [fp, #-20]	; 0xffffffec
   19f60:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19f64:	ldr	ip, [fp, #-36]	; 0xffffffdc
   19f68:	ldr	ip, [ip]
   19f6c:	ldr	lr, [sp, #44]	; 0x2c
   19f70:	ldr	r4, [fp, #-36]	; 0xffffffdc
   19f74:	add	r4, r4, #8
   19f78:	ldr	r5, [fp, #-36]	; 0xffffffdc
   19f7c:	ldr	r5, [r5, #40]	; 0x28
   19f80:	ldr	r6, [fp, #-36]	; 0xffffffdc
   19f84:	ldr	r6, [r6, #44]	; 0x2c
   19f88:	str	ip, [sp]
   19f8c:	str	lr, [sp, #4]
   19f90:	str	r4, [sp, #8]
   19f94:	str	r5, [sp, #12]
   19f98:	str	r6, [sp, #16]
   19f9c:	bl	186f8 <__assert_fail@plt+0x7610>
   19fa0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   19fa4:	str	r0, [sp, #24]
   19fa8:	str	r1, [sp, #20]
   19fac:	bl	11010 <__errno_location@plt>
   19fb0:	ldr	r1, [sp, #20]
   19fb4:	str	r1, [r0]
   19fb8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   19fbc:	movw	r2, #0
   19fc0:	cmp	r0, r2
   19fc4:	beq	19fd8 <__assert_fail@plt+0x8ef0>
   19fc8:	ldr	r0, [sp, #40]	; 0x28
   19fcc:	sub	r0, r0, #1
   19fd0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   19fd4:	str	r0, [r1]
   19fd8:	ldr	r0, [sp, #36]	; 0x24
   19fdc:	sub	sp, fp, #16
   19fe0:	pop	{r4, r5, r6, sl, fp, pc}
   19fe4:	push	{fp, lr}
   19fe8:	mov	fp, sp
   19fec:	sub	sp, sp, #8
   19ff0:	movw	r0, #16632	; 0x40f8
   19ff4:	movt	r0, #3
   19ff8:	ldr	r0, [r0]
   19ffc:	str	r0, [sp, #4]
   1a000:	movw	r0, #1
   1a004:	str	r0, [sp]
   1a008:	ldr	r0, [sp]
   1a00c:	movw	r1, #16636	; 0x40fc
   1a010:	movt	r1, #3
   1a014:	ldr	r1, [r1]
   1a018:	cmp	r0, r1
   1a01c:	bge	1a044 <__assert_fail@plt+0x8f5c>
   1a020:	ldr	r0, [sp, #4]
   1a024:	ldr	r1, [sp]
   1a028:	add	r0, r0, r1, lsl #3
   1a02c:	ldr	r0, [r0, #4]
   1a030:	bl	17f48 <__assert_fail@plt+0x6e60>
   1a034:	ldr	r0, [sp]
   1a038:	add	r0, r0, #1
   1a03c:	str	r0, [sp]
   1a040:	b	1a008 <__assert_fail@plt+0x8f20>
   1a044:	ldr	r0, [sp, #4]
   1a048:	ldr	r0, [r0, #4]
   1a04c:	movw	r1, #16816	; 0x41b0
   1a050:	movt	r1, #3
   1a054:	cmp	r0, r1
   1a058:	beq	1a084 <__assert_fail@plt+0x8f9c>
   1a05c:	ldr	r0, [sp, #4]
   1a060:	ldr	r0, [r0, #4]
   1a064:	bl	17f48 <__assert_fail@plt+0x6e60>
   1a068:	movw	r0, #256	; 0x100
   1a06c:	movw	lr, #16640	; 0x4100
   1a070:	movt	lr, #3
   1a074:	str	r0, [lr]
   1a078:	movw	r0, #16816	; 0x41b0
   1a07c:	movt	r0, #3
   1a080:	str	r0, [lr, #4]
   1a084:	ldr	r0, [sp, #4]
   1a088:	movw	r1, #16640	; 0x4100
   1a08c:	movt	r1, #3
   1a090:	cmp	r0, r1
   1a094:	beq	1a0b4 <__assert_fail@plt+0x8fcc>
   1a098:	ldr	r0, [sp, #4]
   1a09c:	bl	17f48 <__assert_fail@plt+0x6e60>
   1a0a0:	movw	r0, #16632	; 0x40f8
   1a0a4:	movt	r0, #3
   1a0a8:	movw	lr, #16640	; 0x4100
   1a0ac:	movt	lr, #3
   1a0b0:	str	lr, [r0]
   1a0b4:	movw	r0, #16636	; 0x40fc
   1a0b8:	movt	r0, #3
   1a0bc:	movw	r1, #1
   1a0c0:	str	r1, [r0]
   1a0c4:	mov	sp, fp
   1a0c8:	pop	{fp, pc}
   1a0cc:	push	{fp, lr}
   1a0d0:	mov	fp, sp
   1a0d4:	sub	sp, sp, #8
   1a0d8:	str	r0, [sp, #4]
   1a0dc:	str	r1, [sp]
   1a0e0:	ldr	r0, [sp, #4]
   1a0e4:	ldr	r1, [sp]
   1a0e8:	mvn	r2, #0
   1a0ec:	movw	r3, #16768	; 0x4180
   1a0f0:	movt	r3, #3
   1a0f4:	bl	1a100 <__assert_fail@plt+0x9018>
   1a0f8:	mov	sp, fp
   1a0fc:	pop	{fp, pc}
   1a100:	push	{r4, r5, r6, sl, fp, lr}
   1a104:	add	fp, sp, #16
   1a108:	sub	sp, sp, #88	; 0x58
   1a10c:	str	r0, [fp, #-20]	; 0xffffffec
   1a110:	str	r1, [fp, #-24]	; 0xffffffe8
   1a114:	str	r2, [fp, #-28]	; 0xffffffe4
   1a118:	str	r3, [fp, #-32]	; 0xffffffe0
   1a11c:	bl	11010 <__errno_location@plt>
   1a120:	ldr	r1, [pc, #676]	; 1a3cc <__assert_fail@plt+0x92e4>
   1a124:	ldr	r0, [r0]
   1a128:	str	r0, [fp, #-36]	; 0xffffffdc
   1a12c:	movw	r0, #16632	; 0x40f8
   1a130:	movt	r0, #3
   1a134:	ldr	r0, [r0]
   1a138:	str	r0, [fp, #-40]	; 0xffffffd8
   1a13c:	str	r1, [fp, #-44]	; 0xffffffd4
   1a140:	ldr	r0, [fp, #-20]	; 0xffffffec
   1a144:	movw	r1, #0
   1a148:	cmp	r1, r0
   1a14c:	bgt	1a160 <__assert_fail@plt+0x9078>
   1a150:	ldr	r0, [fp, #-20]	; 0xffffffec
   1a154:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1a158:	cmp	r0, r1
   1a15c:	blt	1a164 <__assert_fail@plt+0x907c>
   1a160:	bl	110d0 <abort@plt>
   1a164:	movw	r0, #16636	; 0x40fc
   1a168:	movt	r0, #3
   1a16c:	ldr	r0, [r0]
   1a170:	ldr	r1, [fp, #-20]	; 0xffffffec
   1a174:	cmp	r0, r1
   1a178:	bgt	1a270 <__assert_fail@plt+0x9188>
   1a17c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1a180:	movw	r1, #16640	; 0x4100
   1a184:	movt	r1, #3
   1a188:	cmp	r0, r1
   1a18c:	movw	r0, #0
   1a190:	moveq	r0, #1
   1a194:	and	r0, r0, #1
   1a198:	strb	r0, [fp, #-45]	; 0xffffffd3
   1a19c:	movw	r0, #16636	; 0x40fc
   1a1a0:	movt	r0, #3
   1a1a4:	ldr	r0, [r0]
   1a1a8:	str	r0, [sp, #52]	; 0x34
   1a1ac:	ldrb	r0, [fp, #-45]	; 0xffffffd3
   1a1b0:	tst	r0, #1
   1a1b4:	beq	1a1c4 <__assert_fail@plt+0x90dc>
   1a1b8:	movw	r0, #0
   1a1bc:	str	r0, [sp, #32]
   1a1c0:	b	1a1cc <__assert_fail@plt+0x90e4>
   1a1c4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1a1c8:	str	r0, [sp, #32]
   1a1cc:	ldr	r0, [sp, #32]
   1a1d0:	ldr	r1, [fp, #-20]	; 0xffffffec
   1a1d4:	movw	r2, #16636	; 0x40fc
   1a1d8:	movt	r2, #3
   1a1dc:	ldr	r2, [r2]
   1a1e0:	sub	r1, r1, r2
   1a1e4:	add	r2, r1, #1
   1a1e8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1a1ec:	add	r1, sp, #52	; 0x34
   1a1f0:	movw	ip, #8
   1a1f4:	str	ip, [sp]
   1a1f8:	bl	1c954 <__assert_fail@plt+0xb86c>
   1a1fc:	str	r0, [fp, #-40]	; 0xffffffd8
   1a200:	movw	r1, #16632	; 0x40f8
   1a204:	movt	r1, #3
   1a208:	str	r0, [r1]
   1a20c:	ldrb	r0, [fp, #-45]	; 0xffffffd3
   1a210:	tst	r0, #1
   1a214:	beq	1a234 <__assert_fail@plt+0x914c>
   1a218:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1a21c:	movw	r1, #16640	; 0x4100
   1a220:	movt	r1, #3
   1a224:	ldr	r2, [r1]
   1a228:	str	r2, [r0]
   1a22c:	ldr	r1, [r1, #4]
   1a230:	str	r1, [r0, #4]
   1a234:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1a238:	movw	r1, #16636	; 0x40fc
   1a23c:	movt	r1, #3
   1a240:	ldr	r1, [r1]
   1a244:	add	r0, r0, r1, lsl #3
   1a248:	ldr	r2, [sp, #52]	; 0x34
   1a24c:	sub	r1, r2, r1
   1a250:	lsl	r2, r1, #3
   1a254:	movw	r1, #0
   1a258:	and	r1, r1, #255	; 0xff
   1a25c:	bl	11028 <memset@plt>
   1a260:	ldr	r0, [sp, #52]	; 0x34
   1a264:	movw	r1, #16636	; 0x40fc
   1a268:	movt	r1, #3
   1a26c:	str	r0, [r1]
   1a270:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1a274:	ldr	r1, [fp, #-20]	; 0xffffffec
   1a278:	ldr	r0, [r0, r1, lsl #3]
   1a27c:	str	r0, [sp, #48]	; 0x30
   1a280:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1a284:	ldr	r1, [fp, #-20]	; 0xffffffec
   1a288:	add	r0, r0, r1, lsl #3
   1a28c:	ldr	r0, [r0, #4]
   1a290:	str	r0, [sp, #44]	; 0x2c
   1a294:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1a298:	ldr	r0, [r0, #4]
   1a29c:	orr	r0, r0, #1
   1a2a0:	str	r0, [sp, #40]	; 0x28
   1a2a4:	ldr	r0, [sp, #44]	; 0x2c
   1a2a8:	ldr	r1, [sp, #48]	; 0x30
   1a2ac:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1a2b0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1a2b4:	ldr	ip, [fp, #-32]	; 0xffffffe0
   1a2b8:	ldr	ip, [ip]
   1a2bc:	ldr	lr, [sp, #40]	; 0x28
   1a2c0:	ldr	r4, [fp, #-32]	; 0xffffffe0
   1a2c4:	add	r4, r4, #8
   1a2c8:	ldr	r5, [fp, #-32]	; 0xffffffe0
   1a2cc:	ldr	r5, [r5, #40]	; 0x28
   1a2d0:	ldr	r6, [fp, #-32]	; 0xffffffe0
   1a2d4:	ldr	r6, [r6, #44]	; 0x2c
   1a2d8:	str	ip, [sp]
   1a2dc:	str	lr, [sp, #4]
   1a2e0:	str	r4, [sp, #8]
   1a2e4:	str	r5, [sp, #12]
   1a2e8:	str	r6, [sp, #16]
   1a2ec:	bl	186f8 <__assert_fail@plt+0x7610>
   1a2f0:	str	r0, [sp, #36]	; 0x24
   1a2f4:	ldr	r0, [sp, #48]	; 0x30
   1a2f8:	ldr	r1, [sp, #36]	; 0x24
   1a2fc:	cmp	r0, r1
   1a300:	bhi	1a3ac <__assert_fail@plt+0x92c4>
   1a304:	ldr	r0, [sp, #36]	; 0x24
   1a308:	add	r0, r0, #1
   1a30c:	str	r0, [sp, #48]	; 0x30
   1a310:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1a314:	ldr	r2, [fp, #-20]	; 0xffffffec
   1a318:	add	r1, r1, r2, lsl #3
   1a31c:	str	r0, [r1]
   1a320:	ldr	r0, [sp, #44]	; 0x2c
   1a324:	movw	r1, #16816	; 0x41b0
   1a328:	movt	r1, #3
   1a32c:	cmp	r0, r1
   1a330:	beq	1a33c <__assert_fail@plt+0x9254>
   1a334:	ldr	r0, [sp, #44]	; 0x2c
   1a338:	bl	17f48 <__assert_fail@plt+0x6e60>
   1a33c:	ldr	r0, [sp, #48]	; 0x30
   1a340:	bl	1c718 <__assert_fail@plt+0xb630>
   1a344:	mov	lr, r0
   1a348:	str	r0, [sp, #44]	; 0x2c
   1a34c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1a350:	ldr	r1, [fp, #-20]	; 0xffffffec
   1a354:	add	r0, r0, r1, lsl #3
   1a358:	str	lr, [r0, #4]
   1a35c:	ldr	r0, [sp, #44]	; 0x2c
   1a360:	ldr	r1, [sp, #48]	; 0x30
   1a364:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1a368:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1a36c:	ldr	lr, [fp, #-32]	; 0xffffffe0
   1a370:	ldr	lr, [lr]
   1a374:	ldr	ip, [sp, #40]	; 0x28
   1a378:	ldr	r4, [fp, #-32]	; 0xffffffe0
   1a37c:	add	r4, r4, #8
   1a380:	ldr	r5, [fp, #-32]	; 0xffffffe0
   1a384:	ldr	r5, [r5, #40]	; 0x28
   1a388:	ldr	r6, [fp, #-32]	; 0xffffffe0
   1a38c:	ldr	r6, [r6, #44]	; 0x2c
   1a390:	str	lr, [sp]
   1a394:	str	ip, [sp, #4]
   1a398:	str	r4, [sp, #8]
   1a39c:	str	r5, [sp, #12]
   1a3a0:	str	r6, [sp, #16]
   1a3a4:	bl	186f8 <__assert_fail@plt+0x7610>
   1a3a8:	str	r0, [sp, #28]
   1a3ac:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1a3b0:	str	r0, [sp, #24]
   1a3b4:	bl	11010 <__errno_location@plt>
   1a3b8:	ldr	lr, [sp, #24]
   1a3bc:	str	lr, [r0]
   1a3c0:	ldr	r0, [sp, #44]	; 0x2c
   1a3c4:	sub	sp, fp, #16
   1a3c8:	pop	{r4, r5, r6, sl, fp, pc}
   1a3cc:	svcvc	0x00ffffff
   1a3d0:	push	{fp, lr}
   1a3d4:	mov	fp, sp
   1a3d8:	sub	sp, sp, #16
   1a3dc:	str	r0, [fp, #-4]
   1a3e0:	str	r1, [sp, #8]
   1a3e4:	str	r2, [sp, #4]
   1a3e8:	ldr	r0, [fp, #-4]
   1a3ec:	ldr	r1, [sp, #8]
   1a3f0:	ldr	r2, [sp, #4]
   1a3f4:	movw	r3, #16768	; 0x4180
   1a3f8:	movt	r3, #3
   1a3fc:	bl	1a100 <__assert_fail@plt+0x9018>
   1a400:	mov	sp, fp
   1a404:	pop	{fp, pc}
   1a408:	push	{fp, lr}
   1a40c:	mov	fp, sp
   1a410:	sub	sp, sp, #8
   1a414:	str	r0, [sp, #4]
   1a418:	ldr	r1, [sp, #4]
   1a41c:	movw	r0, #0
   1a420:	bl	1a0cc <__assert_fail@plt+0x8fe4>
   1a424:	mov	sp, fp
   1a428:	pop	{fp, pc}
   1a42c:	push	{fp, lr}
   1a430:	mov	fp, sp
   1a434:	sub	sp, sp, #8
   1a438:	str	r0, [sp, #4]
   1a43c:	str	r1, [sp]
   1a440:	ldr	r1, [sp, #4]
   1a444:	ldr	r2, [sp]
   1a448:	movw	r0, #0
   1a44c:	bl	1a3d0 <__assert_fail@plt+0x92e8>
   1a450:	mov	sp, fp
   1a454:	pop	{fp, pc}
   1a458:	push	{fp, lr}
   1a45c:	mov	fp, sp
   1a460:	sub	sp, sp, #64	; 0x40
   1a464:	str	r0, [fp, #-4]
   1a468:	str	r1, [fp, #-8]
   1a46c:	str	r2, [fp, #-12]
   1a470:	ldr	r1, [fp, #-8]
   1a474:	add	r0, sp, #4
   1a478:	bl	1a498 <__assert_fail@plt+0x93b0>
   1a47c:	ldr	r0, [fp, #-4]
   1a480:	ldr	r1, [fp, #-12]
   1a484:	mvn	r2, #0
   1a488:	add	r3, sp, #4
   1a48c:	bl	1a100 <__assert_fail@plt+0x9018>
   1a490:	mov	sp, fp
   1a494:	pop	{fp, pc}
   1a498:	push	{fp, lr}
   1a49c:	mov	fp, sp
   1a4a0:	sub	sp, sp, #8
   1a4a4:	str	r1, [sp, #4]
   1a4a8:	mov	r1, r0
   1a4ac:	str	r0, [sp]
   1a4b0:	mov	r0, r1
   1a4b4:	movw	r1, #0
   1a4b8:	and	r1, r1, #255	; 0xff
   1a4bc:	movw	r2, #48	; 0x30
   1a4c0:	bl	11028 <memset@plt>
   1a4c4:	ldr	r0, [sp, #4]
   1a4c8:	cmp	r0, #10
   1a4cc:	bne	1a4d4 <__assert_fail@plt+0x93ec>
   1a4d0:	bl	110d0 <abort@plt>
   1a4d4:	ldr	r0, [sp, #4]
   1a4d8:	ldr	r1, [sp]
   1a4dc:	str	r0, [r1]
   1a4e0:	mov	sp, fp
   1a4e4:	pop	{fp, pc}
   1a4e8:	push	{fp, lr}
   1a4ec:	mov	fp, sp
   1a4f0:	sub	sp, sp, #64	; 0x40
   1a4f4:	str	r0, [fp, #-4]
   1a4f8:	str	r1, [fp, #-8]
   1a4fc:	str	r2, [fp, #-12]
   1a500:	str	r3, [fp, #-16]
   1a504:	ldr	r1, [fp, #-8]
   1a508:	mov	r0, sp
   1a50c:	bl	1a498 <__assert_fail@plt+0x93b0>
   1a510:	ldr	r0, [fp, #-4]
   1a514:	ldr	r1, [fp, #-12]
   1a518:	ldr	r2, [fp, #-16]
   1a51c:	mov	r3, sp
   1a520:	bl	1a100 <__assert_fail@plt+0x9018>
   1a524:	mov	sp, fp
   1a528:	pop	{fp, pc}
   1a52c:	push	{fp, lr}
   1a530:	mov	fp, sp
   1a534:	sub	sp, sp, #8
   1a538:	str	r0, [sp, #4]
   1a53c:	str	r1, [sp]
   1a540:	ldr	r1, [sp, #4]
   1a544:	ldr	r2, [sp]
   1a548:	movw	r0, #0
   1a54c:	bl	1a458 <__assert_fail@plt+0x9370>
   1a550:	mov	sp, fp
   1a554:	pop	{fp, pc}
   1a558:	push	{fp, lr}
   1a55c:	mov	fp, sp
   1a560:	sub	sp, sp, #16
   1a564:	str	r0, [fp, #-4]
   1a568:	str	r1, [sp, #8]
   1a56c:	str	r2, [sp, #4]
   1a570:	ldr	r1, [fp, #-4]
   1a574:	ldr	r2, [sp, #8]
   1a578:	ldr	r3, [sp, #4]
   1a57c:	movw	r0, #0
   1a580:	bl	1a4e8 <__assert_fail@plt+0x9400>
   1a584:	mov	sp, fp
   1a588:	pop	{fp, pc}
   1a58c:	push	{fp, lr}
   1a590:	mov	fp, sp
   1a594:	sub	sp, sp, #72	; 0x48
   1a598:	movw	r3, #16768	; 0x4180
   1a59c:	movt	r3, #3
   1a5a0:	str	r0, [fp, #-4]
   1a5a4:	str	r1, [fp, #-8]
   1a5a8:	strb	r2, [fp, #-9]
   1a5ac:	add	r0, sp, #12
   1a5b0:	mov	r1, r0
   1a5b4:	str	r0, [sp, #8]
   1a5b8:	mov	r0, r1
   1a5bc:	mov	r1, r3
   1a5c0:	movw	r2, #48	; 0x30
   1a5c4:	bl	10ee4 <memcpy@plt>
   1a5c8:	ldr	r0, [sp, #8]
   1a5cc:	ldrb	r1, [fp, #-9]
   1a5d0:	movw	r2, #1
   1a5d4:	bl	1849c <__assert_fail@plt+0x73b4>
   1a5d8:	ldr	r1, [fp, #-4]
   1a5dc:	ldr	r2, [fp, #-8]
   1a5e0:	movw	r3, #0
   1a5e4:	str	r0, [sp, #4]
   1a5e8:	mov	r0, r3
   1a5ec:	add	r3, sp, #12
   1a5f0:	bl	1a100 <__assert_fail@plt+0x9018>
   1a5f4:	mov	sp, fp
   1a5f8:	pop	{fp, pc}
   1a5fc:	push	{fp, lr}
   1a600:	mov	fp, sp
   1a604:	sub	sp, sp, #8
   1a608:	str	r0, [sp, #4]
   1a60c:	strb	r1, [sp, #3]
   1a610:	ldr	r0, [sp, #4]
   1a614:	mvn	r1, #0
   1a618:	ldrb	r2, [sp, #3]
   1a61c:	bl	1a58c <__assert_fail@plt+0x94a4>
   1a620:	mov	sp, fp
   1a624:	pop	{fp, pc}
   1a628:	push	{fp, lr}
   1a62c:	mov	fp, sp
   1a630:	sub	sp, sp, #8
   1a634:	str	r0, [sp, #4]
   1a638:	ldr	r0, [sp, #4]
   1a63c:	movw	r1, #58	; 0x3a
   1a640:	and	r1, r1, #255	; 0xff
   1a644:	bl	1a5fc <__assert_fail@plt+0x9514>
   1a648:	mov	sp, fp
   1a64c:	pop	{fp, pc}
   1a650:	push	{fp, lr}
   1a654:	mov	fp, sp
   1a658:	sub	sp, sp, #8
   1a65c:	str	r0, [sp, #4]
   1a660:	str	r1, [sp]
   1a664:	ldr	r0, [sp, #4]
   1a668:	ldr	r1, [sp]
   1a66c:	movw	r2, #58	; 0x3a
   1a670:	and	r2, r2, #255	; 0xff
   1a674:	bl	1a58c <__assert_fail@plt+0x94a4>
   1a678:	mov	sp, fp
   1a67c:	pop	{fp, pc}
   1a680:	push	{fp, lr}
   1a684:	mov	fp, sp
   1a688:	sub	sp, sp, #120	; 0x78
   1a68c:	str	r0, [fp, #-4]
   1a690:	str	r1, [fp, #-8]
   1a694:	str	r2, [fp, #-12]
   1a698:	ldr	r1, [fp, #-8]
   1a69c:	add	r0, sp, #12
   1a6a0:	bl	1a498 <__assert_fail@plt+0x93b0>
   1a6a4:	add	r0, sp, #60	; 0x3c
   1a6a8:	mov	r1, r0
   1a6ac:	add	r2, sp, #12
   1a6b0:	str	r0, [sp, #8]
   1a6b4:	mov	r0, r1
   1a6b8:	mov	r1, r2
   1a6bc:	movw	r2, #48	; 0x30
   1a6c0:	bl	10ee4 <memcpy@plt>
   1a6c4:	ldr	r0, [sp, #8]
   1a6c8:	movw	r1, #58	; 0x3a
   1a6cc:	and	r1, r1, #255	; 0xff
   1a6d0:	movw	r2, #1
   1a6d4:	bl	1849c <__assert_fail@plt+0x73b4>
   1a6d8:	ldr	r1, [fp, #-4]
   1a6dc:	ldr	r2, [fp, #-12]
   1a6e0:	str	r0, [sp, #4]
   1a6e4:	mov	r0, r1
   1a6e8:	mov	r1, r2
   1a6ec:	mvn	r2, #0
   1a6f0:	add	r3, sp, #60	; 0x3c
   1a6f4:	bl	1a100 <__assert_fail@plt+0x9018>
   1a6f8:	mov	sp, fp
   1a6fc:	pop	{fp, pc}
   1a700:	push	{fp, lr}
   1a704:	mov	fp, sp
   1a708:	sub	sp, sp, #24
   1a70c:	str	r0, [fp, #-4]
   1a710:	str	r1, [fp, #-8]
   1a714:	str	r2, [sp, #12]
   1a718:	str	r3, [sp, #8]
   1a71c:	ldr	r0, [fp, #-4]
   1a720:	ldr	r1, [fp, #-8]
   1a724:	ldr	r2, [sp, #12]
   1a728:	ldr	r3, [sp, #8]
   1a72c:	mvn	ip, #0
   1a730:	str	ip, [sp]
   1a734:	bl	1a740 <__assert_fail@plt+0x9658>
   1a738:	mov	sp, fp
   1a73c:	pop	{fp, pc}
   1a740:	push	{fp, lr}
   1a744:	mov	fp, sp
   1a748:	sub	sp, sp, #72	; 0x48
   1a74c:	ldr	ip, [fp, #8]
   1a750:	movw	lr, #16768	; 0x4180
   1a754:	movt	lr, #3
   1a758:	str	r0, [fp, #-4]
   1a75c:	str	r1, [fp, #-8]
   1a760:	str	r2, [fp, #-12]
   1a764:	str	r3, [fp, #-16]
   1a768:	add	r0, sp, #8
   1a76c:	mov	r1, r0
   1a770:	str	r0, [sp, #4]
   1a774:	mov	r0, r1
   1a778:	mov	r1, lr
   1a77c:	movw	r2, #48	; 0x30
   1a780:	str	ip, [sp]
   1a784:	bl	10ee4 <memcpy@plt>
   1a788:	ldr	r1, [fp, #-8]
   1a78c:	ldr	r2, [fp, #-12]
   1a790:	ldr	r0, [sp, #4]
   1a794:	bl	1859c <__assert_fail@plt+0x74b4>
   1a798:	ldr	r0, [fp, #-4]
   1a79c:	ldr	r1, [fp, #-16]
   1a7a0:	ldr	r2, [fp, #8]
   1a7a4:	add	r3, sp, #8
   1a7a8:	bl	1a100 <__assert_fail@plt+0x9018>
   1a7ac:	mov	sp, fp
   1a7b0:	pop	{fp, pc}
   1a7b4:	push	{fp, lr}
   1a7b8:	mov	fp, sp
   1a7bc:	sub	sp, sp, #16
   1a7c0:	str	r0, [fp, #-4]
   1a7c4:	str	r1, [sp, #8]
   1a7c8:	str	r2, [sp, #4]
   1a7cc:	ldr	r1, [fp, #-4]
   1a7d0:	ldr	r2, [sp, #8]
   1a7d4:	ldr	r3, [sp, #4]
   1a7d8:	movw	r0, #0
   1a7dc:	bl	1a700 <__assert_fail@plt+0x9618>
   1a7e0:	mov	sp, fp
   1a7e4:	pop	{fp, pc}
   1a7e8:	push	{fp, lr}
   1a7ec:	mov	fp, sp
   1a7f0:	sub	sp, sp, #24
   1a7f4:	str	r0, [fp, #-4]
   1a7f8:	str	r1, [fp, #-8]
   1a7fc:	str	r2, [sp, #12]
   1a800:	str	r3, [sp, #8]
   1a804:	ldr	r1, [fp, #-4]
   1a808:	ldr	r2, [fp, #-8]
   1a80c:	ldr	r3, [sp, #12]
   1a810:	ldr	r0, [sp, #8]
   1a814:	movw	ip, #0
   1a818:	str	r0, [sp, #4]
   1a81c:	mov	r0, ip
   1a820:	ldr	ip, [sp, #4]
   1a824:	str	ip, [sp]
   1a828:	bl	1a740 <__assert_fail@plt+0x9658>
   1a82c:	mov	sp, fp
   1a830:	pop	{fp, pc}
   1a834:	push	{fp, lr}
   1a838:	mov	fp, sp
   1a83c:	sub	sp, sp, #16
   1a840:	str	r0, [fp, #-4]
   1a844:	str	r1, [sp, #8]
   1a848:	str	r2, [sp, #4]
   1a84c:	ldr	r0, [fp, #-4]
   1a850:	ldr	r1, [sp, #8]
   1a854:	ldr	r2, [sp, #4]
   1a858:	movw	r3, #16648	; 0x4108
   1a85c:	movt	r3, #3
   1a860:	bl	1a100 <__assert_fail@plt+0x9018>
   1a864:	mov	sp, fp
   1a868:	pop	{fp, pc}
   1a86c:	push	{fp, lr}
   1a870:	mov	fp, sp
   1a874:	sub	sp, sp, #8
   1a878:	str	r0, [sp, #4]
   1a87c:	str	r1, [sp]
   1a880:	ldr	r1, [sp, #4]
   1a884:	ldr	r2, [sp]
   1a888:	movw	r0, #0
   1a88c:	bl	1a834 <__assert_fail@plt+0x974c>
   1a890:	mov	sp, fp
   1a894:	pop	{fp, pc}
   1a898:	push	{fp, lr}
   1a89c:	mov	fp, sp
   1a8a0:	sub	sp, sp, #8
   1a8a4:	str	r0, [sp, #4]
   1a8a8:	str	r1, [sp]
   1a8ac:	ldr	r0, [sp, #4]
   1a8b0:	ldr	r1, [sp]
   1a8b4:	mvn	r2, #0
   1a8b8:	bl	1a834 <__assert_fail@plt+0x974c>
   1a8bc:	mov	sp, fp
   1a8c0:	pop	{fp, pc}
   1a8c4:	push	{fp, lr}
   1a8c8:	mov	fp, sp
   1a8cc:	sub	sp, sp, #8
   1a8d0:	str	r0, [sp, #4]
   1a8d4:	ldr	r1, [sp, #4]
   1a8d8:	movw	r0, #0
   1a8dc:	bl	1a898 <__assert_fail@plt+0x97b0>
   1a8e0:	mov	sp, fp
   1a8e4:	pop	{fp, pc}
   1a8e8:	push	{fp, lr}
   1a8ec:	mov	fp, sp
   1a8f0:	sub	sp, sp, #24
   1a8f4:	str	r0, [fp, #-8]
   1a8f8:	str	r1, [sp, #12]
   1a8fc:	ldr	r0, [fp, #-8]
   1a900:	bl	10fe0 <gettext@plt>
   1a904:	str	r0, [sp, #8]
   1a908:	ldr	r0, [sp, #8]
   1a90c:	ldr	r1, [fp, #-8]
   1a910:	cmp	r0, r1
   1a914:	beq	1a924 <__assert_fail@plt+0x983c>
   1a918:	ldr	r0, [sp, #8]
   1a91c:	str	r0, [fp, #-4]
   1a920:	b	1a9f0 <__assert_fail@plt+0x9908>
   1a924:	bl	21bb0 <__assert_fail@plt+0x10ac8>
   1a928:	str	r0, [sp, #4]
   1a92c:	ldr	r0, [sp, #4]
   1a930:	movw	r1, #12249	; 0x2fd9
   1a934:	movt	r1, #2
   1a938:	bl	21a28 <__assert_fail@plt+0x10940>
   1a93c:	cmp	r0, #0
   1a940:	bne	1a978 <__assert_fail@plt+0x9890>
   1a944:	ldr	r0, [fp, #-8]
   1a948:	ldrb	r0, [r0]
   1a94c:	cmp	r0, #96	; 0x60
   1a950:	movw	r0, #0
   1a954:	moveq	r0, #1
   1a958:	tst	r0, #1
   1a95c:	movw	r0, #12259	; 0x2fe3
   1a960:	movt	r0, #2
   1a964:	movw	r1, #12255	; 0x2fdf
   1a968:	movt	r1, #2
   1a96c:	movne	r0, r1
   1a970:	str	r0, [fp, #-4]
   1a974:	b	1a9f0 <__assert_fail@plt+0x9908>
   1a978:	ldr	r0, [sp, #4]
   1a97c:	movw	r1, #12263	; 0x2fe7
   1a980:	movt	r1, #2
   1a984:	bl	21a28 <__assert_fail@plt+0x10940>
   1a988:	cmp	r0, #0
   1a98c:	bne	1a9c4 <__assert_fail@plt+0x98dc>
   1a990:	ldr	r0, [fp, #-8]
   1a994:	ldrb	r0, [r0]
   1a998:	cmp	r0, #96	; 0x60
   1a99c:	movw	r0, #0
   1a9a0:	moveq	r0, #1
   1a9a4:	tst	r0, #1
   1a9a8:	movw	r0, #12275	; 0x2ff3
   1a9ac:	movt	r0, #2
   1a9b0:	movw	r1, #12271	; 0x2fef
   1a9b4:	movt	r1, #2
   1a9b8:	movne	r0, r1
   1a9bc:	str	r0, [fp, #-4]
   1a9c0:	b	1a9f0 <__assert_fail@plt+0x9908>
   1a9c4:	ldr	r0, [sp, #12]
   1a9c8:	cmp	r0, #9
   1a9cc:	movw	r0, #0
   1a9d0:	moveq	r0, #1
   1a9d4:	tst	r0, #1
   1a9d8:	movw	r0, #12247	; 0x2fd7
   1a9dc:	movt	r0, #2
   1a9e0:	movw	r1, #12243	; 0x2fd3
   1a9e4:	movt	r1, #2
   1a9e8:	movne	r0, r1
   1a9ec:	str	r0, [fp, #-4]
   1a9f0:	ldr	r0, [fp, #-4]
   1a9f4:	mov	sp, fp
   1a9f8:	pop	{fp, pc}
   1a9fc:	push	{fp, lr}
   1aa00:	mov	fp, sp
   1aa04:	sub	sp, sp, #176	; 0xb0
   1aa08:	str	r0, [fp, #-8]
   1aa0c:	str	r1, [fp, #-12]
   1aa10:	str	r2, [fp, #-16]
   1aa14:	b	1adcc <__assert_fail@plt+0x9ce4>
   1aa18:	b	1abec <__assert_fail@plt+0x9b04>
   1aa1c:	ldr	r0, [fp, #-16]
   1aa20:	cmp	r0, #0
   1aa24:	bcs	1ab28 <__assert_fail@plt+0x9a40>
   1aa28:	ldr	r0, [fp, #-12]
   1aa2c:	cmp	r0, #0
   1aa30:	bcs	1aab8 <__assert_fail@plt+0x99d0>
   1aa34:	b	1aa54 <__assert_fail@plt+0x996c>
   1aa38:	ldr	r0, [fp, #-12]
   1aa3c:	ldr	r1, [fp, #-16]
   1aa40:	movw	r2, #127	; 0x7f
   1aa44:	udiv	r1, r2, r1
   1aa48:	cmp	r0, r1
   1aa4c:	bcc	1abbc <__assert_fail@plt+0x9ad4>
   1aa50:	b	1abd4 <__assert_fail@plt+0x9aec>
   1aa54:	b	1aa68 <__assert_fail@plt+0x9980>
   1aa58:	ldr	r0, [fp, #-16]
   1aa5c:	cmp	r0, #1
   1aa60:	bcc	1aa78 <__assert_fail@plt+0x9990>
   1aa64:	b	1aa84 <__assert_fail@plt+0x999c>
   1aa68:	ldr	r0, [fp, #-16]
   1aa6c:	movw	r1, #0
   1aa70:	cmp	r1, r0
   1aa74:	bcs	1aa84 <__assert_fail@plt+0x999c>
   1aa78:	movw	r0, #0
   1aa7c:	str	r0, [fp, #-24]	; 0xffffffe8
   1aa80:	b	1aa9c <__assert_fail@plt+0x99b4>
   1aa84:	ldr	r0, [fp, #-16]
   1aa88:	movw	r1, #0
   1aa8c:	sub	r0, r1, r0
   1aa90:	movw	r1, #127	; 0x7f
   1aa94:	udiv	r0, r1, r0
   1aa98:	str	r0, [fp, #-24]	; 0xffffffe8
   1aa9c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1aaa0:	ldr	r1, [fp, #-12]
   1aaa4:	mvn	r2, #0
   1aaa8:	sub	r1, r2, r1
   1aaac:	cmp	r0, r1
   1aab0:	bls	1abbc <__assert_fail@plt+0x9ad4>
   1aab4:	b	1abd4 <__assert_fail@plt+0x9aec>
   1aab8:	ldr	r0, [fp, #-16]
   1aabc:	cmn	r0, #1
   1aac0:	bne	1ab0c <__assert_fail@plt+0x9a24>
   1aac4:	b	1aae4 <__assert_fail@plt+0x99fc>
   1aac8:	ldr	r0, [fp, #-12]
   1aacc:	mvn	r1, #127	; 0x7f
   1aad0:	add	r0, r0, r1
   1aad4:	movw	r1, #0
   1aad8:	cmp	r1, r0
   1aadc:	bcc	1abbc <__assert_fail@plt+0x9ad4>
   1aae0:	b	1abd4 <__assert_fail@plt+0x9aec>
   1aae4:	ldr	r0, [fp, #-12]
   1aae8:	movw	r1, #0
   1aaec:	cmp	r1, r0
   1aaf0:	bcs	1abd4 <__assert_fail@plt+0x9aec>
   1aaf4:	ldr	r0, [fp, #-12]
   1aaf8:	sub	r0, r0, #1
   1aafc:	movw	r1, #127	; 0x7f
   1ab00:	cmp	r1, r0
   1ab04:	bcc	1abbc <__assert_fail@plt+0x9ad4>
   1ab08:	b	1abd4 <__assert_fail@plt+0x9aec>
   1ab0c:	ldr	r0, [fp, #-16]
   1ab10:	mvn	r1, #127	; 0x7f
   1ab14:	udiv	r0, r1, r0
   1ab18:	ldr	r1, [fp, #-12]
   1ab1c:	cmp	r0, r1
   1ab20:	bcc	1abbc <__assert_fail@plt+0x9ad4>
   1ab24:	b	1abd4 <__assert_fail@plt+0x9aec>
   1ab28:	ldr	r0, [fp, #-16]
   1ab2c:	cmp	r0, #0
   1ab30:	bne	1ab38 <__assert_fail@plt+0x9a50>
   1ab34:	b	1abd4 <__assert_fail@plt+0x9aec>
   1ab38:	ldr	r0, [fp, #-12]
   1ab3c:	cmp	r0, #0
   1ab40:	bcs	1aba4 <__assert_fail@plt+0x9abc>
   1ab44:	ldr	r0, [fp, #-12]
   1ab48:	cmn	r0, #1
   1ab4c:	bne	1ab88 <__assert_fail@plt+0x9aa0>
   1ab50:	b	1ab70 <__assert_fail@plt+0x9a88>
   1ab54:	ldr	r0, [fp, #-16]
   1ab58:	mvn	r1, #127	; 0x7f
   1ab5c:	add	r0, r0, r1
   1ab60:	movw	r1, #0
   1ab64:	cmp	r1, r0
   1ab68:	bcc	1abbc <__assert_fail@plt+0x9ad4>
   1ab6c:	b	1abd4 <__assert_fail@plt+0x9aec>
   1ab70:	ldr	r0, [fp, #-16]
   1ab74:	sub	r0, r0, #1
   1ab78:	movw	r1, #127	; 0x7f
   1ab7c:	cmp	r1, r0
   1ab80:	bcc	1abbc <__assert_fail@plt+0x9ad4>
   1ab84:	b	1abd4 <__assert_fail@plt+0x9aec>
   1ab88:	ldr	r0, [fp, #-12]
   1ab8c:	mvn	r1, #127	; 0x7f
   1ab90:	udiv	r0, r1, r0
   1ab94:	ldr	r1, [fp, #-16]
   1ab98:	cmp	r0, r1
   1ab9c:	bcc	1abbc <__assert_fail@plt+0x9ad4>
   1aba0:	b	1abd4 <__assert_fail@plt+0x9aec>
   1aba4:	ldr	r0, [fp, #-16]
   1aba8:	movw	r1, #127	; 0x7f
   1abac:	udiv	r0, r1, r0
   1abb0:	ldr	r1, [fp, #-12]
   1abb4:	cmp	r0, r1
   1abb8:	bcs	1abd4 <__assert_fail@plt+0x9aec>
   1abbc:	ldr	r0, [fp, #-12]
   1abc0:	ldr	r1, [fp, #-16]
   1abc4:	mul	r0, r0, r1
   1abc8:	sxtb	r0, r0
   1abcc:	str	r0, [fp, #-20]	; 0xffffffec
   1abd0:	b	1bd4c <__assert_fail@plt+0xac64>
   1abd4:	ldr	r0, [fp, #-12]
   1abd8:	ldr	r1, [fp, #-16]
   1abdc:	mul	r0, r0, r1
   1abe0:	sxtb	r0, r0
   1abe4:	str	r0, [fp, #-20]	; 0xffffffec
   1abe8:	b	1bd64 <__assert_fail@plt+0xac7c>
   1abec:	ldr	r0, [fp, #-16]
   1abf0:	cmp	r0, #0
   1abf4:	bcs	1ad00 <__assert_fail@plt+0x9c18>
   1abf8:	ldr	r0, [fp, #-12]
   1abfc:	cmp	r0, #0
   1ac00:	bcs	1ac88 <__assert_fail@plt+0x9ba0>
   1ac04:	b	1ac24 <__assert_fail@plt+0x9b3c>
   1ac08:	ldr	r0, [fp, #-12]
   1ac0c:	ldr	r1, [fp, #-16]
   1ac10:	movw	r2, #255	; 0xff
   1ac14:	udiv	r1, r2, r1
   1ac18:	cmp	r0, r1
   1ac1c:	bcc	1ad9c <__assert_fail@plt+0x9cb4>
   1ac20:	b	1adb4 <__assert_fail@plt+0x9ccc>
   1ac24:	b	1ac38 <__assert_fail@plt+0x9b50>
   1ac28:	ldr	r0, [fp, #-16]
   1ac2c:	cmp	r0, #1
   1ac30:	bcc	1ac48 <__assert_fail@plt+0x9b60>
   1ac34:	b	1ac54 <__assert_fail@plt+0x9b6c>
   1ac38:	ldr	r0, [fp, #-16]
   1ac3c:	movw	r1, #0
   1ac40:	cmp	r1, r0
   1ac44:	bcs	1ac54 <__assert_fail@plt+0x9b6c>
   1ac48:	movw	r0, #0
   1ac4c:	str	r0, [fp, #-28]	; 0xffffffe4
   1ac50:	b	1ac6c <__assert_fail@plt+0x9b84>
   1ac54:	ldr	r0, [fp, #-16]
   1ac58:	movw	r1, #0
   1ac5c:	sub	r0, r1, r0
   1ac60:	movw	r1, #255	; 0xff
   1ac64:	udiv	r0, r1, r0
   1ac68:	str	r0, [fp, #-28]	; 0xffffffe4
   1ac6c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1ac70:	ldr	r1, [fp, #-12]
   1ac74:	mvn	r2, #0
   1ac78:	sub	r1, r2, r1
   1ac7c:	cmp	r0, r1
   1ac80:	bls	1ad9c <__assert_fail@plt+0x9cb4>
   1ac84:	b	1adb4 <__assert_fail@plt+0x9ccc>
   1ac88:	b	1ac90 <__assert_fail@plt+0x9ba8>
   1ac8c:	b	1ac94 <__assert_fail@plt+0x9bac>
   1ac90:	b	1ace4 <__assert_fail@plt+0x9bfc>
   1ac94:	ldr	r0, [fp, #-16]
   1ac98:	cmn	r0, #1
   1ac9c:	bne	1ace4 <__assert_fail@plt+0x9bfc>
   1aca0:	b	1acbc <__assert_fail@plt+0x9bd4>
   1aca4:	ldr	r0, [fp, #-12]
   1aca8:	add	r0, r0, #0
   1acac:	movw	r1, #0
   1acb0:	cmp	r1, r0
   1acb4:	bcc	1ad9c <__assert_fail@plt+0x9cb4>
   1acb8:	b	1adb4 <__assert_fail@plt+0x9ccc>
   1acbc:	ldr	r0, [fp, #-12]
   1acc0:	movw	r1, #0
   1acc4:	cmp	r1, r0
   1acc8:	bcs	1adb4 <__assert_fail@plt+0x9ccc>
   1accc:	ldr	r0, [fp, #-12]
   1acd0:	sub	r0, r0, #1
   1acd4:	mvn	r1, #0
   1acd8:	cmp	r1, r0
   1acdc:	bcc	1ad9c <__assert_fail@plt+0x9cb4>
   1ace0:	b	1adb4 <__assert_fail@plt+0x9ccc>
   1ace4:	ldr	r0, [fp, #-16]
   1ace8:	movw	r1, #0
   1acec:	udiv	r0, r1, r0
   1acf0:	ldr	r1, [fp, #-12]
   1acf4:	cmp	r0, r1
   1acf8:	bcc	1ad9c <__assert_fail@plt+0x9cb4>
   1acfc:	b	1adb4 <__assert_fail@plt+0x9ccc>
   1ad00:	ldr	r0, [fp, #-16]
   1ad04:	cmp	r0, #0
   1ad08:	bne	1ad10 <__assert_fail@plt+0x9c28>
   1ad0c:	b	1adb4 <__assert_fail@plt+0x9ccc>
   1ad10:	ldr	r0, [fp, #-12]
   1ad14:	cmp	r0, #0
   1ad18:	bcs	1ad84 <__assert_fail@plt+0x9c9c>
   1ad1c:	b	1ad24 <__assert_fail@plt+0x9c3c>
   1ad20:	b	1ad28 <__assert_fail@plt+0x9c40>
   1ad24:	b	1ad68 <__assert_fail@plt+0x9c80>
   1ad28:	ldr	r0, [fp, #-12]
   1ad2c:	cmn	r0, #1
   1ad30:	bne	1ad68 <__assert_fail@plt+0x9c80>
   1ad34:	b	1ad50 <__assert_fail@plt+0x9c68>
   1ad38:	ldr	r0, [fp, #-16]
   1ad3c:	add	r0, r0, #0
   1ad40:	movw	r1, #0
   1ad44:	cmp	r1, r0
   1ad48:	bcc	1ad9c <__assert_fail@plt+0x9cb4>
   1ad4c:	b	1adb4 <__assert_fail@plt+0x9ccc>
   1ad50:	ldr	r0, [fp, #-16]
   1ad54:	sub	r0, r0, #1
   1ad58:	mvn	r1, #0
   1ad5c:	cmp	r1, r0
   1ad60:	bcc	1ad9c <__assert_fail@plt+0x9cb4>
   1ad64:	b	1adb4 <__assert_fail@plt+0x9ccc>
   1ad68:	ldr	r0, [fp, #-12]
   1ad6c:	movw	r1, #0
   1ad70:	udiv	r0, r1, r0
   1ad74:	ldr	r1, [fp, #-16]
   1ad78:	cmp	r0, r1
   1ad7c:	bcc	1ad9c <__assert_fail@plt+0x9cb4>
   1ad80:	b	1adb4 <__assert_fail@plt+0x9ccc>
   1ad84:	ldr	r0, [fp, #-16]
   1ad88:	movw	r1, #255	; 0xff
   1ad8c:	udiv	r0, r1, r0
   1ad90:	ldr	r1, [fp, #-12]
   1ad94:	cmp	r0, r1
   1ad98:	bcs	1adb4 <__assert_fail@plt+0x9ccc>
   1ad9c:	ldr	r0, [fp, #-12]
   1ada0:	ldr	r1, [fp, #-16]
   1ada4:	mul	r0, r0, r1
   1ada8:	and	r0, r0, #255	; 0xff
   1adac:	str	r0, [fp, #-20]	; 0xffffffec
   1adb0:	b	1bd4c <__assert_fail@plt+0xac64>
   1adb4:	ldr	r0, [fp, #-12]
   1adb8:	ldr	r1, [fp, #-16]
   1adbc:	mul	r0, r0, r1
   1adc0:	and	r0, r0, #255	; 0xff
   1adc4:	str	r0, [fp, #-20]	; 0xffffffec
   1adc8:	b	1bd64 <__assert_fail@plt+0xac7c>
   1adcc:	b	1b184 <__assert_fail@plt+0xa09c>
   1add0:	b	1afa4 <__assert_fail@plt+0x9ebc>
   1add4:	ldr	r0, [fp, #-16]
   1add8:	cmp	r0, #0
   1addc:	bcs	1aee0 <__assert_fail@plt+0x9df8>
   1ade0:	ldr	r0, [fp, #-12]
   1ade4:	cmp	r0, #0
   1ade8:	bcs	1ae70 <__assert_fail@plt+0x9d88>
   1adec:	b	1ae0c <__assert_fail@plt+0x9d24>
   1adf0:	ldr	r0, [fp, #-12]
   1adf4:	ldr	r1, [fp, #-16]
   1adf8:	movw	r2, #32767	; 0x7fff
   1adfc:	udiv	r1, r2, r1
   1ae00:	cmp	r0, r1
   1ae04:	bcc	1af74 <__assert_fail@plt+0x9e8c>
   1ae08:	b	1af8c <__assert_fail@plt+0x9ea4>
   1ae0c:	b	1ae20 <__assert_fail@plt+0x9d38>
   1ae10:	ldr	r0, [fp, #-16]
   1ae14:	cmp	r0, #1
   1ae18:	bcc	1ae30 <__assert_fail@plt+0x9d48>
   1ae1c:	b	1ae3c <__assert_fail@plt+0x9d54>
   1ae20:	ldr	r0, [fp, #-16]
   1ae24:	movw	r1, #0
   1ae28:	cmp	r1, r0
   1ae2c:	bcs	1ae3c <__assert_fail@plt+0x9d54>
   1ae30:	movw	r0, #0
   1ae34:	str	r0, [fp, #-32]	; 0xffffffe0
   1ae38:	b	1ae54 <__assert_fail@plt+0x9d6c>
   1ae3c:	ldr	r0, [fp, #-16]
   1ae40:	movw	r1, #0
   1ae44:	sub	r0, r1, r0
   1ae48:	movw	r1, #32767	; 0x7fff
   1ae4c:	udiv	r0, r1, r0
   1ae50:	str	r0, [fp, #-32]	; 0xffffffe0
   1ae54:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1ae58:	ldr	r1, [fp, #-12]
   1ae5c:	mvn	r2, #0
   1ae60:	sub	r1, r2, r1
   1ae64:	cmp	r0, r1
   1ae68:	bls	1af74 <__assert_fail@plt+0x9e8c>
   1ae6c:	b	1af8c <__assert_fail@plt+0x9ea4>
   1ae70:	ldr	r0, [fp, #-16]
   1ae74:	cmn	r0, #1
   1ae78:	bne	1aec4 <__assert_fail@plt+0x9ddc>
   1ae7c:	b	1ae9c <__assert_fail@plt+0x9db4>
   1ae80:	ldr	r0, [pc, #3840]	; 1bd88 <__assert_fail@plt+0xaca0>
   1ae84:	ldr	r1, [fp, #-12]
   1ae88:	add	r0, r1, r0
   1ae8c:	movw	r1, #0
   1ae90:	cmp	r1, r0
   1ae94:	bcc	1af74 <__assert_fail@plt+0x9e8c>
   1ae98:	b	1af8c <__assert_fail@plt+0x9ea4>
   1ae9c:	ldr	r0, [fp, #-12]
   1aea0:	movw	r1, #0
   1aea4:	cmp	r1, r0
   1aea8:	bcs	1af8c <__assert_fail@plt+0x9ea4>
   1aeac:	ldr	r0, [fp, #-12]
   1aeb0:	sub	r0, r0, #1
   1aeb4:	movw	r1, #32767	; 0x7fff
   1aeb8:	cmp	r1, r0
   1aebc:	bcc	1af74 <__assert_fail@plt+0x9e8c>
   1aec0:	b	1af8c <__assert_fail@plt+0x9ea4>
   1aec4:	ldr	r0, [pc, #3772]	; 1bd88 <__assert_fail@plt+0xaca0>
   1aec8:	ldr	r1, [fp, #-16]
   1aecc:	udiv	r0, r0, r1
   1aed0:	ldr	r1, [fp, #-12]
   1aed4:	cmp	r0, r1
   1aed8:	bcc	1af74 <__assert_fail@plt+0x9e8c>
   1aedc:	b	1af8c <__assert_fail@plt+0x9ea4>
   1aee0:	ldr	r0, [fp, #-16]
   1aee4:	cmp	r0, #0
   1aee8:	bne	1aef0 <__assert_fail@plt+0x9e08>
   1aeec:	b	1af8c <__assert_fail@plt+0x9ea4>
   1aef0:	ldr	r0, [fp, #-12]
   1aef4:	cmp	r0, #0
   1aef8:	bcs	1af5c <__assert_fail@plt+0x9e74>
   1aefc:	ldr	r0, [fp, #-12]
   1af00:	cmn	r0, #1
   1af04:	bne	1af40 <__assert_fail@plt+0x9e58>
   1af08:	b	1af28 <__assert_fail@plt+0x9e40>
   1af0c:	ldr	r0, [pc, #3700]	; 1bd88 <__assert_fail@plt+0xaca0>
   1af10:	ldr	r1, [fp, #-16]
   1af14:	add	r0, r1, r0
   1af18:	movw	r1, #0
   1af1c:	cmp	r1, r0
   1af20:	bcc	1af74 <__assert_fail@plt+0x9e8c>
   1af24:	b	1af8c <__assert_fail@plt+0x9ea4>
   1af28:	ldr	r0, [fp, #-16]
   1af2c:	sub	r0, r0, #1
   1af30:	movw	r1, #32767	; 0x7fff
   1af34:	cmp	r1, r0
   1af38:	bcc	1af74 <__assert_fail@plt+0x9e8c>
   1af3c:	b	1af8c <__assert_fail@plt+0x9ea4>
   1af40:	ldr	r0, [pc, #3648]	; 1bd88 <__assert_fail@plt+0xaca0>
   1af44:	ldr	r1, [fp, #-12]
   1af48:	udiv	r0, r0, r1
   1af4c:	ldr	r1, [fp, #-16]
   1af50:	cmp	r0, r1
   1af54:	bcc	1af74 <__assert_fail@plt+0x9e8c>
   1af58:	b	1af8c <__assert_fail@plt+0x9ea4>
   1af5c:	ldr	r0, [fp, #-16]
   1af60:	movw	r1, #32767	; 0x7fff
   1af64:	udiv	r0, r1, r0
   1af68:	ldr	r1, [fp, #-12]
   1af6c:	cmp	r0, r1
   1af70:	bcs	1af8c <__assert_fail@plt+0x9ea4>
   1af74:	ldr	r0, [fp, #-12]
   1af78:	ldr	r1, [fp, #-16]
   1af7c:	mul	r0, r0, r1
   1af80:	sxth	r0, r0
   1af84:	str	r0, [fp, #-20]	; 0xffffffec
   1af88:	b	1bd4c <__assert_fail@plt+0xac64>
   1af8c:	ldr	r0, [fp, #-12]
   1af90:	ldr	r1, [fp, #-16]
   1af94:	mul	r0, r0, r1
   1af98:	sxth	r0, r0
   1af9c:	str	r0, [fp, #-20]	; 0xffffffec
   1afa0:	b	1bd64 <__assert_fail@plt+0xac7c>
   1afa4:	ldr	r0, [fp, #-16]
   1afa8:	cmp	r0, #0
   1afac:	bcs	1b0b8 <__assert_fail@plt+0x9fd0>
   1afb0:	ldr	r0, [fp, #-12]
   1afb4:	cmp	r0, #0
   1afb8:	bcs	1b040 <__assert_fail@plt+0x9f58>
   1afbc:	b	1afdc <__assert_fail@plt+0x9ef4>
   1afc0:	ldr	r0, [fp, #-12]
   1afc4:	ldr	r1, [fp, #-16]
   1afc8:	movw	r2, #65535	; 0xffff
   1afcc:	udiv	r1, r2, r1
   1afd0:	cmp	r0, r1
   1afd4:	bcc	1b154 <__assert_fail@plt+0xa06c>
   1afd8:	b	1b16c <__assert_fail@plt+0xa084>
   1afdc:	b	1aff0 <__assert_fail@plt+0x9f08>
   1afe0:	ldr	r0, [fp, #-16]
   1afe4:	cmp	r0, #1
   1afe8:	bcc	1b000 <__assert_fail@plt+0x9f18>
   1afec:	b	1b00c <__assert_fail@plt+0x9f24>
   1aff0:	ldr	r0, [fp, #-16]
   1aff4:	movw	r1, #0
   1aff8:	cmp	r1, r0
   1affc:	bcs	1b00c <__assert_fail@plt+0x9f24>
   1b000:	movw	r0, #0
   1b004:	str	r0, [fp, #-36]	; 0xffffffdc
   1b008:	b	1b024 <__assert_fail@plt+0x9f3c>
   1b00c:	ldr	r0, [fp, #-16]
   1b010:	movw	r1, #0
   1b014:	sub	r0, r1, r0
   1b018:	movw	r1, #65535	; 0xffff
   1b01c:	udiv	r0, r1, r0
   1b020:	str	r0, [fp, #-36]	; 0xffffffdc
   1b024:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1b028:	ldr	r1, [fp, #-12]
   1b02c:	mvn	r2, #0
   1b030:	sub	r1, r2, r1
   1b034:	cmp	r0, r1
   1b038:	bls	1b154 <__assert_fail@plt+0xa06c>
   1b03c:	b	1b16c <__assert_fail@plt+0xa084>
   1b040:	b	1b048 <__assert_fail@plt+0x9f60>
   1b044:	b	1b04c <__assert_fail@plt+0x9f64>
   1b048:	b	1b09c <__assert_fail@plt+0x9fb4>
   1b04c:	ldr	r0, [fp, #-16]
   1b050:	cmn	r0, #1
   1b054:	bne	1b09c <__assert_fail@plt+0x9fb4>
   1b058:	b	1b074 <__assert_fail@plt+0x9f8c>
   1b05c:	ldr	r0, [fp, #-12]
   1b060:	add	r0, r0, #0
   1b064:	movw	r1, #0
   1b068:	cmp	r1, r0
   1b06c:	bcc	1b154 <__assert_fail@plt+0xa06c>
   1b070:	b	1b16c <__assert_fail@plt+0xa084>
   1b074:	ldr	r0, [fp, #-12]
   1b078:	movw	r1, #0
   1b07c:	cmp	r1, r0
   1b080:	bcs	1b16c <__assert_fail@plt+0xa084>
   1b084:	ldr	r0, [fp, #-12]
   1b088:	sub	r0, r0, #1
   1b08c:	mvn	r1, #0
   1b090:	cmp	r1, r0
   1b094:	bcc	1b154 <__assert_fail@plt+0xa06c>
   1b098:	b	1b16c <__assert_fail@plt+0xa084>
   1b09c:	ldr	r0, [fp, #-16]
   1b0a0:	movw	r1, #0
   1b0a4:	udiv	r0, r1, r0
   1b0a8:	ldr	r1, [fp, #-12]
   1b0ac:	cmp	r0, r1
   1b0b0:	bcc	1b154 <__assert_fail@plt+0xa06c>
   1b0b4:	b	1b16c <__assert_fail@plt+0xa084>
   1b0b8:	ldr	r0, [fp, #-16]
   1b0bc:	cmp	r0, #0
   1b0c0:	bne	1b0c8 <__assert_fail@plt+0x9fe0>
   1b0c4:	b	1b16c <__assert_fail@plt+0xa084>
   1b0c8:	ldr	r0, [fp, #-12]
   1b0cc:	cmp	r0, #0
   1b0d0:	bcs	1b13c <__assert_fail@plt+0xa054>
   1b0d4:	b	1b0dc <__assert_fail@plt+0x9ff4>
   1b0d8:	b	1b0e0 <__assert_fail@plt+0x9ff8>
   1b0dc:	b	1b120 <__assert_fail@plt+0xa038>
   1b0e0:	ldr	r0, [fp, #-12]
   1b0e4:	cmn	r0, #1
   1b0e8:	bne	1b120 <__assert_fail@plt+0xa038>
   1b0ec:	b	1b108 <__assert_fail@plt+0xa020>
   1b0f0:	ldr	r0, [fp, #-16]
   1b0f4:	add	r0, r0, #0
   1b0f8:	movw	r1, #0
   1b0fc:	cmp	r1, r0
   1b100:	bcc	1b154 <__assert_fail@plt+0xa06c>
   1b104:	b	1b16c <__assert_fail@plt+0xa084>
   1b108:	ldr	r0, [fp, #-16]
   1b10c:	sub	r0, r0, #1
   1b110:	mvn	r1, #0
   1b114:	cmp	r1, r0
   1b118:	bcc	1b154 <__assert_fail@plt+0xa06c>
   1b11c:	b	1b16c <__assert_fail@plt+0xa084>
   1b120:	ldr	r0, [fp, #-12]
   1b124:	movw	r1, #0
   1b128:	udiv	r0, r1, r0
   1b12c:	ldr	r1, [fp, #-16]
   1b130:	cmp	r0, r1
   1b134:	bcc	1b154 <__assert_fail@plt+0xa06c>
   1b138:	b	1b16c <__assert_fail@plt+0xa084>
   1b13c:	ldr	r0, [fp, #-16]
   1b140:	movw	r1, #65535	; 0xffff
   1b144:	udiv	r0, r1, r0
   1b148:	ldr	r1, [fp, #-12]
   1b14c:	cmp	r0, r1
   1b150:	bcs	1b16c <__assert_fail@plt+0xa084>
   1b154:	ldr	r0, [fp, #-12]
   1b158:	ldr	r1, [fp, #-16]
   1b15c:	mul	r0, r0, r1
   1b160:	uxth	r0, r0
   1b164:	str	r0, [fp, #-20]	; 0xffffffec
   1b168:	b	1bd4c <__assert_fail@plt+0xac64>
   1b16c:	ldr	r0, [fp, #-12]
   1b170:	ldr	r1, [fp, #-16]
   1b174:	mul	r0, r0, r1
   1b178:	uxth	r0, r0
   1b17c:	str	r0, [fp, #-20]	; 0xffffffec
   1b180:	b	1bd64 <__assert_fail@plt+0xac7c>
   1b184:	b	1b188 <__assert_fail@plt+0xa0a0>
   1b188:	b	1b34c <__assert_fail@plt+0xa264>
   1b18c:	ldr	r0, [fp, #-16]
   1b190:	cmp	r0, #0
   1b194:	bcs	1b294 <__assert_fail@plt+0xa1ac>
   1b198:	ldr	r0, [fp, #-12]
   1b19c:	cmp	r0, #0
   1b1a0:	bcs	1b228 <__assert_fail@plt+0xa140>
   1b1a4:	b	1b1c4 <__assert_fail@plt+0xa0dc>
   1b1a8:	ldr	r0, [pc, #3024]	; 1bd80 <__assert_fail@plt+0xac98>
   1b1ac:	ldr	r1, [fp, #-12]
   1b1b0:	ldr	r2, [fp, #-16]
   1b1b4:	udiv	r0, r0, r2
   1b1b8:	cmp	r1, r0
   1b1bc:	bcc	1b324 <__assert_fail@plt+0xa23c>
   1b1c0:	b	1b338 <__assert_fail@plt+0xa250>
   1b1c4:	b	1b1d8 <__assert_fail@plt+0xa0f0>
   1b1c8:	ldr	r0, [fp, #-16]
   1b1cc:	cmp	r0, #1
   1b1d0:	bcc	1b1e8 <__assert_fail@plt+0xa100>
   1b1d4:	b	1b1f4 <__assert_fail@plt+0xa10c>
   1b1d8:	ldr	r0, [fp, #-16]
   1b1dc:	movw	r1, #0
   1b1e0:	cmp	r1, r0
   1b1e4:	bcs	1b1f4 <__assert_fail@plt+0xa10c>
   1b1e8:	movw	r0, #0
   1b1ec:	str	r0, [fp, #-40]	; 0xffffffd8
   1b1f0:	b	1b20c <__assert_fail@plt+0xa124>
   1b1f4:	ldr	r0, [pc, #2948]	; 1bd80 <__assert_fail@plt+0xac98>
   1b1f8:	ldr	r1, [fp, #-16]
   1b1fc:	movw	r2, #0
   1b200:	sub	r1, r2, r1
   1b204:	udiv	r0, r0, r1
   1b208:	str	r0, [fp, #-40]	; 0xffffffd8
   1b20c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1b210:	ldr	r1, [fp, #-12]
   1b214:	mvn	r2, #0
   1b218:	sub	r1, r2, r1
   1b21c:	cmp	r0, r1
   1b220:	bls	1b324 <__assert_fail@plt+0xa23c>
   1b224:	b	1b338 <__assert_fail@plt+0xa250>
   1b228:	ldr	r0, [fp, #-16]
   1b22c:	cmn	r0, #1
   1b230:	bne	1b278 <__assert_fail@plt+0xa190>
   1b234:	b	1b250 <__assert_fail@plt+0xa168>
   1b238:	ldr	r0, [fp, #-12]
   1b23c:	add	r0, r0, #-2147483648	; 0x80000000
   1b240:	movw	r1, #0
   1b244:	cmp	r1, r0
   1b248:	bcc	1b324 <__assert_fail@plt+0xa23c>
   1b24c:	b	1b338 <__assert_fail@plt+0xa250>
   1b250:	ldr	r0, [fp, #-12]
   1b254:	movw	r1, #0
   1b258:	cmp	r1, r0
   1b25c:	bcs	1b338 <__assert_fail@plt+0xa250>
   1b260:	ldr	r0, [pc, #2840]	; 1bd80 <__assert_fail@plt+0xac98>
   1b264:	ldr	r1, [fp, #-12]
   1b268:	sub	r1, r1, #1
   1b26c:	cmp	r0, r1
   1b270:	bcc	1b324 <__assert_fail@plt+0xa23c>
   1b274:	b	1b338 <__assert_fail@plt+0xa250>
   1b278:	ldr	r0, [pc, #2820]	; 1bd84 <__assert_fail@plt+0xac9c>
   1b27c:	ldr	r1, [fp, #-16]
   1b280:	udiv	r0, r0, r1
   1b284:	ldr	r1, [fp, #-12]
   1b288:	cmp	r0, r1
   1b28c:	bcc	1b324 <__assert_fail@plt+0xa23c>
   1b290:	b	1b338 <__assert_fail@plt+0xa250>
   1b294:	ldr	r0, [fp, #-16]
   1b298:	cmp	r0, #0
   1b29c:	bne	1b2a4 <__assert_fail@plt+0xa1bc>
   1b2a0:	b	1b338 <__assert_fail@plt+0xa250>
   1b2a4:	ldr	r0, [fp, #-12]
   1b2a8:	cmp	r0, #0
   1b2ac:	bcs	1b30c <__assert_fail@plt+0xa224>
   1b2b0:	ldr	r0, [fp, #-12]
   1b2b4:	cmn	r0, #1
   1b2b8:	bne	1b2f0 <__assert_fail@plt+0xa208>
   1b2bc:	b	1b2d8 <__assert_fail@plt+0xa1f0>
   1b2c0:	ldr	r0, [fp, #-16]
   1b2c4:	add	r0, r0, #-2147483648	; 0x80000000
   1b2c8:	movw	r1, #0
   1b2cc:	cmp	r1, r0
   1b2d0:	bcc	1b324 <__assert_fail@plt+0xa23c>
   1b2d4:	b	1b338 <__assert_fail@plt+0xa250>
   1b2d8:	ldr	r0, [pc, #2720]	; 1bd80 <__assert_fail@plt+0xac98>
   1b2dc:	ldr	r1, [fp, #-16]
   1b2e0:	sub	r1, r1, #1
   1b2e4:	cmp	r0, r1
   1b2e8:	bcc	1b324 <__assert_fail@plt+0xa23c>
   1b2ec:	b	1b338 <__assert_fail@plt+0xa250>
   1b2f0:	ldr	r0, [pc, #2700]	; 1bd84 <__assert_fail@plt+0xac9c>
   1b2f4:	ldr	r1, [fp, #-12]
   1b2f8:	udiv	r0, r0, r1
   1b2fc:	ldr	r1, [fp, #-16]
   1b300:	cmp	r0, r1
   1b304:	bcc	1b324 <__assert_fail@plt+0xa23c>
   1b308:	b	1b338 <__assert_fail@plt+0xa250>
   1b30c:	ldr	r0, [pc, #2668]	; 1bd80 <__assert_fail@plt+0xac98>
   1b310:	ldr	r1, [fp, #-16]
   1b314:	udiv	r0, r0, r1
   1b318:	ldr	r1, [fp, #-12]
   1b31c:	cmp	r0, r1
   1b320:	bcs	1b338 <__assert_fail@plt+0xa250>
   1b324:	ldr	r0, [fp, #-12]
   1b328:	ldr	r1, [fp, #-16]
   1b32c:	mul	r0, r0, r1
   1b330:	str	r0, [fp, #-20]	; 0xffffffec
   1b334:	b	1bd4c <__assert_fail@plt+0xac64>
   1b338:	ldr	r0, [fp, #-12]
   1b33c:	ldr	r1, [fp, #-16]
   1b340:	mul	r0, r0, r1
   1b344:	str	r0, [fp, #-20]	; 0xffffffec
   1b348:	b	1bd64 <__assert_fail@plt+0xac7c>
   1b34c:	ldr	r0, [fp, #-16]
   1b350:	cmp	r0, #0
   1b354:	bcs	1b460 <__assert_fail@plt+0xa378>
   1b358:	ldr	r0, [fp, #-12]
   1b35c:	cmp	r0, #0
   1b360:	bcs	1b3e8 <__assert_fail@plt+0xa300>
   1b364:	b	1b384 <__assert_fail@plt+0xa29c>
   1b368:	ldr	r0, [fp, #-12]
   1b36c:	ldr	r1, [fp, #-16]
   1b370:	mvn	r2, #0
   1b374:	udiv	r1, r2, r1
   1b378:	cmp	r0, r1
   1b37c:	bcc	1b4fc <__assert_fail@plt+0xa414>
   1b380:	b	1b510 <__assert_fail@plt+0xa428>
   1b384:	b	1b398 <__assert_fail@plt+0xa2b0>
   1b388:	ldr	r0, [fp, #-16]
   1b38c:	cmp	r0, #1
   1b390:	bcc	1b3a8 <__assert_fail@plt+0xa2c0>
   1b394:	b	1b3b4 <__assert_fail@plt+0xa2cc>
   1b398:	ldr	r0, [fp, #-16]
   1b39c:	movw	r1, #0
   1b3a0:	cmp	r1, r0
   1b3a4:	bcs	1b3b4 <__assert_fail@plt+0xa2cc>
   1b3a8:	movw	r0, #1
   1b3ac:	str	r0, [fp, #-44]	; 0xffffffd4
   1b3b0:	b	1b3cc <__assert_fail@plt+0xa2e4>
   1b3b4:	ldr	r0, [fp, #-16]
   1b3b8:	movw	r1, #0
   1b3bc:	sub	r0, r1, r0
   1b3c0:	mvn	r1, #0
   1b3c4:	udiv	r0, r1, r0
   1b3c8:	str	r0, [fp, #-44]	; 0xffffffd4
   1b3cc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1b3d0:	ldr	r1, [fp, #-12]
   1b3d4:	mvn	r2, #0
   1b3d8:	sub	r1, r2, r1
   1b3dc:	cmp	r0, r1
   1b3e0:	bls	1b4fc <__assert_fail@plt+0xa414>
   1b3e4:	b	1b510 <__assert_fail@plt+0xa428>
   1b3e8:	b	1b3f0 <__assert_fail@plt+0xa308>
   1b3ec:	b	1b3f4 <__assert_fail@plt+0xa30c>
   1b3f0:	b	1b444 <__assert_fail@plt+0xa35c>
   1b3f4:	ldr	r0, [fp, #-16]
   1b3f8:	cmn	r0, #1
   1b3fc:	bne	1b444 <__assert_fail@plt+0xa35c>
   1b400:	b	1b41c <__assert_fail@plt+0xa334>
   1b404:	ldr	r0, [fp, #-12]
   1b408:	add	r0, r0, #0
   1b40c:	movw	r1, #0
   1b410:	cmp	r1, r0
   1b414:	bcc	1b4fc <__assert_fail@plt+0xa414>
   1b418:	b	1b510 <__assert_fail@plt+0xa428>
   1b41c:	ldr	r0, [fp, #-12]
   1b420:	movw	r1, #0
   1b424:	cmp	r1, r0
   1b428:	bcs	1b510 <__assert_fail@plt+0xa428>
   1b42c:	ldr	r0, [fp, #-12]
   1b430:	sub	r0, r0, #1
   1b434:	mvn	r1, #0
   1b438:	cmp	r1, r0
   1b43c:	bcc	1b4fc <__assert_fail@plt+0xa414>
   1b440:	b	1b510 <__assert_fail@plt+0xa428>
   1b444:	ldr	r0, [fp, #-16]
   1b448:	movw	r1, #0
   1b44c:	udiv	r0, r1, r0
   1b450:	ldr	r1, [fp, #-12]
   1b454:	cmp	r0, r1
   1b458:	bcc	1b4fc <__assert_fail@plt+0xa414>
   1b45c:	b	1b510 <__assert_fail@plt+0xa428>
   1b460:	ldr	r0, [fp, #-16]
   1b464:	cmp	r0, #0
   1b468:	bne	1b470 <__assert_fail@plt+0xa388>
   1b46c:	b	1b510 <__assert_fail@plt+0xa428>
   1b470:	ldr	r0, [fp, #-12]
   1b474:	cmp	r0, #0
   1b478:	bcs	1b4e4 <__assert_fail@plt+0xa3fc>
   1b47c:	b	1b484 <__assert_fail@plt+0xa39c>
   1b480:	b	1b488 <__assert_fail@plt+0xa3a0>
   1b484:	b	1b4c8 <__assert_fail@plt+0xa3e0>
   1b488:	ldr	r0, [fp, #-12]
   1b48c:	cmn	r0, #1
   1b490:	bne	1b4c8 <__assert_fail@plt+0xa3e0>
   1b494:	b	1b4b0 <__assert_fail@plt+0xa3c8>
   1b498:	ldr	r0, [fp, #-16]
   1b49c:	add	r0, r0, #0
   1b4a0:	movw	r1, #0
   1b4a4:	cmp	r1, r0
   1b4a8:	bcc	1b4fc <__assert_fail@plt+0xa414>
   1b4ac:	b	1b510 <__assert_fail@plt+0xa428>
   1b4b0:	ldr	r0, [fp, #-16]
   1b4b4:	sub	r0, r0, #1
   1b4b8:	mvn	r1, #0
   1b4bc:	cmp	r1, r0
   1b4c0:	bcc	1b4fc <__assert_fail@plt+0xa414>
   1b4c4:	b	1b510 <__assert_fail@plt+0xa428>
   1b4c8:	ldr	r0, [fp, #-12]
   1b4cc:	movw	r1, #0
   1b4d0:	udiv	r0, r1, r0
   1b4d4:	ldr	r1, [fp, #-16]
   1b4d8:	cmp	r0, r1
   1b4dc:	bcc	1b4fc <__assert_fail@plt+0xa414>
   1b4e0:	b	1b510 <__assert_fail@plt+0xa428>
   1b4e4:	ldr	r0, [fp, #-16]
   1b4e8:	mvn	r1, #0
   1b4ec:	udiv	r0, r1, r0
   1b4f0:	ldr	r1, [fp, #-12]
   1b4f4:	cmp	r0, r1
   1b4f8:	bcs	1b510 <__assert_fail@plt+0xa428>
   1b4fc:	ldr	r0, [fp, #-12]
   1b500:	ldr	r1, [fp, #-16]
   1b504:	mul	r0, r0, r1
   1b508:	str	r0, [fp, #-20]	; 0xffffffec
   1b50c:	b	1bd4c <__assert_fail@plt+0xac64>
   1b510:	ldr	r0, [fp, #-12]
   1b514:	ldr	r1, [fp, #-16]
   1b518:	mul	r0, r0, r1
   1b51c:	str	r0, [fp, #-20]	; 0xffffffec
   1b520:	b	1bd64 <__assert_fail@plt+0xac7c>
   1b524:	b	1b528 <__assert_fail@plt+0xa440>
   1b528:	b	1b6ec <__assert_fail@plt+0xa604>
   1b52c:	ldr	r0, [fp, #-16]
   1b530:	cmp	r0, #0
   1b534:	bcs	1b634 <__assert_fail@plt+0xa54c>
   1b538:	ldr	r0, [fp, #-12]
   1b53c:	cmp	r0, #0
   1b540:	bcs	1b5c8 <__assert_fail@plt+0xa4e0>
   1b544:	b	1b564 <__assert_fail@plt+0xa47c>
   1b548:	ldr	r0, [pc, #2096]	; 1bd80 <__assert_fail@plt+0xac98>
   1b54c:	ldr	r1, [fp, #-12]
   1b550:	ldr	r2, [fp, #-16]
   1b554:	udiv	r0, r0, r2
   1b558:	cmp	r1, r0
   1b55c:	bcc	1b6c4 <__assert_fail@plt+0xa5dc>
   1b560:	b	1b6d8 <__assert_fail@plt+0xa5f0>
   1b564:	b	1b578 <__assert_fail@plt+0xa490>
   1b568:	ldr	r0, [fp, #-16]
   1b56c:	cmp	r0, #1
   1b570:	bcc	1b588 <__assert_fail@plt+0xa4a0>
   1b574:	b	1b594 <__assert_fail@plt+0xa4ac>
   1b578:	ldr	r0, [fp, #-16]
   1b57c:	movw	r1, #0
   1b580:	cmp	r1, r0
   1b584:	bcs	1b594 <__assert_fail@plt+0xa4ac>
   1b588:	movw	r0, #0
   1b58c:	str	r0, [fp, #-48]	; 0xffffffd0
   1b590:	b	1b5ac <__assert_fail@plt+0xa4c4>
   1b594:	ldr	r0, [pc, #2020]	; 1bd80 <__assert_fail@plt+0xac98>
   1b598:	ldr	r1, [fp, #-16]
   1b59c:	movw	r2, #0
   1b5a0:	sub	r1, r2, r1
   1b5a4:	udiv	r0, r0, r1
   1b5a8:	str	r0, [fp, #-48]	; 0xffffffd0
   1b5ac:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1b5b0:	ldr	r1, [fp, #-12]
   1b5b4:	mvn	r2, #0
   1b5b8:	sub	r1, r2, r1
   1b5bc:	cmp	r0, r1
   1b5c0:	bls	1b6c4 <__assert_fail@plt+0xa5dc>
   1b5c4:	b	1b6d8 <__assert_fail@plt+0xa5f0>
   1b5c8:	ldr	r0, [fp, #-16]
   1b5cc:	cmn	r0, #1
   1b5d0:	bne	1b618 <__assert_fail@plt+0xa530>
   1b5d4:	b	1b5f0 <__assert_fail@plt+0xa508>
   1b5d8:	ldr	r0, [fp, #-12]
   1b5dc:	add	r0, r0, #-2147483648	; 0x80000000
   1b5e0:	movw	r1, #0
   1b5e4:	cmp	r1, r0
   1b5e8:	bcc	1b6c4 <__assert_fail@plt+0xa5dc>
   1b5ec:	b	1b6d8 <__assert_fail@plt+0xa5f0>
   1b5f0:	ldr	r0, [fp, #-12]
   1b5f4:	movw	r1, #0
   1b5f8:	cmp	r1, r0
   1b5fc:	bcs	1b6d8 <__assert_fail@plt+0xa5f0>
   1b600:	ldr	r0, [pc, #1912]	; 1bd80 <__assert_fail@plt+0xac98>
   1b604:	ldr	r1, [fp, #-12]
   1b608:	sub	r1, r1, #1
   1b60c:	cmp	r0, r1
   1b610:	bcc	1b6c4 <__assert_fail@plt+0xa5dc>
   1b614:	b	1b6d8 <__assert_fail@plt+0xa5f0>
   1b618:	ldr	r0, [pc, #1892]	; 1bd84 <__assert_fail@plt+0xac9c>
   1b61c:	ldr	r1, [fp, #-16]
   1b620:	udiv	r0, r0, r1
   1b624:	ldr	r1, [fp, #-12]
   1b628:	cmp	r0, r1
   1b62c:	bcc	1b6c4 <__assert_fail@plt+0xa5dc>
   1b630:	b	1b6d8 <__assert_fail@plt+0xa5f0>
   1b634:	ldr	r0, [fp, #-16]
   1b638:	cmp	r0, #0
   1b63c:	bne	1b644 <__assert_fail@plt+0xa55c>
   1b640:	b	1b6d8 <__assert_fail@plt+0xa5f0>
   1b644:	ldr	r0, [fp, #-12]
   1b648:	cmp	r0, #0
   1b64c:	bcs	1b6ac <__assert_fail@plt+0xa5c4>
   1b650:	ldr	r0, [fp, #-12]
   1b654:	cmn	r0, #1
   1b658:	bne	1b690 <__assert_fail@plt+0xa5a8>
   1b65c:	b	1b678 <__assert_fail@plt+0xa590>
   1b660:	ldr	r0, [fp, #-16]
   1b664:	add	r0, r0, #-2147483648	; 0x80000000
   1b668:	movw	r1, #0
   1b66c:	cmp	r1, r0
   1b670:	bcc	1b6c4 <__assert_fail@plt+0xa5dc>
   1b674:	b	1b6d8 <__assert_fail@plt+0xa5f0>
   1b678:	ldr	r0, [pc, #1792]	; 1bd80 <__assert_fail@plt+0xac98>
   1b67c:	ldr	r1, [fp, #-16]
   1b680:	sub	r1, r1, #1
   1b684:	cmp	r0, r1
   1b688:	bcc	1b6c4 <__assert_fail@plt+0xa5dc>
   1b68c:	b	1b6d8 <__assert_fail@plt+0xa5f0>
   1b690:	ldr	r0, [pc, #1772]	; 1bd84 <__assert_fail@plt+0xac9c>
   1b694:	ldr	r1, [fp, #-12]
   1b698:	udiv	r0, r0, r1
   1b69c:	ldr	r1, [fp, #-16]
   1b6a0:	cmp	r0, r1
   1b6a4:	bcc	1b6c4 <__assert_fail@plt+0xa5dc>
   1b6a8:	b	1b6d8 <__assert_fail@plt+0xa5f0>
   1b6ac:	ldr	r0, [pc, #1740]	; 1bd80 <__assert_fail@plt+0xac98>
   1b6b0:	ldr	r1, [fp, #-16]
   1b6b4:	udiv	r0, r0, r1
   1b6b8:	ldr	r1, [fp, #-12]
   1b6bc:	cmp	r0, r1
   1b6c0:	bcs	1b6d8 <__assert_fail@plt+0xa5f0>
   1b6c4:	ldr	r0, [fp, #-12]
   1b6c8:	ldr	r1, [fp, #-16]
   1b6cc:	mul	r0, r0, r1
   1b6d0:	str	r0, [fp, #-20]	; 0xffffffec
   1b6d4:	b	1bd4c <__assert_fail@plt+0xac64>
   1b6d8:	ldr	r0, [fp, #-12]
   1b6dc:	ldr	r1, [fp, #-16]
   1b6e0:	mul	r0, r0, r1
   1b6e4:	str	r0, [fp, #-20]	; 0xffffffec
   1b6e8:	b	1bd64 <__assert_fail@plt+0xac7c>
   1b6ec:	ldr	r0, [fp, #-16]
   1b6f0:	cmp	r0, #0
   1b6f4:	bcs	1b800 <__assert_fail@plt+0xa718>
   1b6f8:	ldr	r0, [fp, #-12]
   1b6fc:	cmp	r0, #0
   1b700:	bcs	1b788 <__assert_fail@plt+0xa6a0>
   1b704:	b	1b724 <__assert_fail@plt+0xa63c>
   1b708:	ldr	r0, [fp, #-12]
   1b70c:	ldr	r1, [fp, #-16]
   1b710:	mvn	r2, #0
   1b714:	udiv	r1, r2, r1
   1b718:	cmp	r0, r1
   1b71c:	bcc	1b89c <__assert_fail@plt+0xa7b4>
   1b720:	b	1b8b0 <__assert_fail@plt+0xa7c8>
   1b724:	b	1b738 <__assert_fail@plt+0xa650>
   1b728:	ldr	r0, [fp, #-16]
   1b72c:	cmp	r0, #1
   1b730:	bcc	1b748 <__assert_fail@plt+0xa660>
   1b734:	b	1b754 <__assert_fail@plt+0xa66c>
   1b738:	ldr	r0, [fp, #-16]
   1b73c:	movw	r1, #0
   1b740:	cmp	r1, r0
   1b744:	bcs	1b754 <__assert_fail@plt+0xa66c>
   1b748:	movw	r0, #1
   1b74c:	str	r0, [fp, #-52]	; 0xffffffcc
   1b750:	b	1b76c <__assert_fail@plt+0xa684>
   1b754:	ldr	r0, [fp, #-16]
   1b758:	movw	r1, #0
   1b75c:	sub	r0, r1, r0
   1b760:	mvn	r1, #0
   1b764:	udiv	r0, r1, r0
   1b768:	str	r0, [fp, #-52]	; 0xffffffcc
   1b76c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1b770:	ldr	r1, [fp, #-12]
   1b774:	mvn	r2, #0
   1b778:	sub	r1, r2, r1
   1b77c:	cmp	r0, r1
   1b780:	bls	1b89c <__assert_fail@plt+0xa7b4>
   1b784:	b	1b8b0 <__assert_fail@plt+0xa7c8>
   1b788:	b	1b790 <__assert_fail@plt+0xa6a8>
   1b78c:	b	1b794 <__assert_fail@plt+0xa6ac>
   1b790:	b	1b7e4 <__assert_fail@plt+0xa6fc>
   1b794:	ldr	r0, [fp, #-16]
   1b798:	cmn	r0, #1
   1b79c:	bne	1b7e4 <__assert_fail@plt+0xa6fc>
   1b7a0:	b	1b7bc <__assert_fail@plt+0xa6d4>
   1b7a4:	ldr	r0, [fp, #-12]
   1b7a8:	add	r0, r0, #0
   1b7ac:	movw	r1, #0
   1b7b0:	cmp	r1, r0
   1b7b4:	bcc	1b89c <__assert_fail@plt+0xa7b4>
   1b7b8:	b	1b8b0 <__assert_fail@plt+0xa7c8>
   1b7bc:	ldr	r0, [fp, #-12]
   1b7c0:	movw	r1, #0
   1b7c4:	cmp	r1, r0
   1b7c8:	bcs	1b8b0 <__assert_fail@plt+0xa7c8>
   1b7cc:	ldr	r0, [fp, #-12]
   1b7d0:	sub	r0, r0, #1
   1b7d4:	mvn	r1, #0
   1b7d8:	cmp	r1, r0
   1b7dc:	bcc	1b89c <__assert_fail@plt+0xa7b4>
   1b7e0:	b	1b8b0 <__assert_fail@plt+0xa7c8>
   1b7e4:	ldr	r0, [fp, #-16]
   1b7e8:	movw	r1, #0
   1b7ec:	udiv	r0, r1, r0
   1b7f0:	ldr	r1, [fp, #-12]
   1b7f4:	cmp	r0, r1
   1b7f8:	bcc	1b89c <__assert_fail@plt+0xa7b4>
   1b7fc:	b	1b8b0 <__assert_fail@plt+0xa7c8>
   1b800:	ldr	r0, [fp, #-16]
   1b804:	cmp	r0, #0
   1b808:	bne	1b810 <__assert_fail@plt+0xa728>
   1b80c:	b	1b8b0 <__assert_fail@plt+0xa7c8>
   1b810:	ldr	r0, [fp, #-12]
   1b814:	cmp	r0, #0
   1b818:	bcs	1b884 <__assert_fail@plt+0xa79c>
   1b81c:	b	1b824 <__assert_fail@plt+0xa73c>
   1b820:	b	1b828 <__assert_fail@plt+0xa740>
   1b824:	b	1b868 <__assert_fail@plt+0xa780>
   1b828:	ldr	r0, [fp, #-12]
   1b82c:	cmn	r0, #1
   1b830:	bne	1b868 <__assert_fail@plt+0xa780>
   1b834:	b	1b850 <__assert_fail@plt+0xa768>
   1b838:	ldr	r0, [fp, #-16]
   1b83c:	add	r0, r0, #0
   1b840:	movw	r1, #0
   1b844:	cmp	r1, r0
   1b848:	bcc	1b89c <__assert_fail@plt+0xa7b4>
   1b84c:	b	1b8b0 <__assert_fail@plt+0xa7c8>
   1b850:	ldr	r0, [fp, #-16]
   1b854:	sub	r0, r0, #1
   1b858:	mvn	r1, #0
   1b85c:	cmp	r1, r0
   1b860:	bcc	1b89c <__assert_fail@plt+0xa7b4>
   1b864:	b	1b8b0 <__assert_fail@plt+0xa7c8>
   1b868:	ldr	r0, [fp, #-12]
   1b86c:	movw	r1, #0
   1b870:	udiv	r0, r1, r0
   1b874:	ldr	r1, [fp, #-16]
   1b878:	cmp	r0, r1
   1b87c:	bcc	1b89c <__assert_fail@plt+0xa7b4>
   1b880:	b	1b8b0 <__assert_fail@plt+0xa7c8>
   1b884:	ldr	r0, [fp, #-16]
   1b888:	mvn	r1, #0
   1b88c:	udiv	r0, r1, r0
   1b890:	ldr	r1, [fp, #-12]
   1b894:	cmp	r0, r1
   1b898:	bcs	1b8b0 <__assert_fail@plt+0xa7c8>
   1b89c:	ldr	r0, [fp, #-12]
   1b8a0:	ldr	r1, [fp, #-16]
   1b8a4:	mul	r0, r0, r1
   1b8a8:	str	r0, [fp, #-20]	; 0xffffffec
   1b8ac:	b	1bd4c <__assert_fail@plt+0xac64>
   1b8b0:	ldr	r0, [fp, #-12]
   1b8b4:	ldr	r1, [fp, #-16]
   1b8b8:	mul	r0, r0, r1
   1b8bc:	str	r0, [fp, #-20]	; 0xffffffec
   1b8c0:	b	1bd64 <__assert_fail@plt+0xac7c>
   1b8c4:	b	1bb18 <__assert_fail@plt+0xaa30>
   1b8c8:	ldr	r0, [fp, #-16]
   1b8cc:	cmp	r0, #0
   1b8d0:	bcs	1ba30 <__assert_fail@plt+0xa948>
   1b8d4:	ldr	r0, [fp, #-12]
   1b8d8:	cmp	r0, #0
   1b8dc:	bcs	1b9ac <__assert_fail@plt+0xa8c4>
   1b8e0:	b	1b8e4 <__assert_fail@plt+0xa7fc>
   1b8e4:	ldr	r0, [fp, #-12]
   1b8e8:	ldr	r2, [fp, #-16]
   1b8ec:	mvn	r1, #0
   1b8f0:	mvn	r3, #-2147483648	; 0x80000000
   1b8f4:	mov	ip, #0
   1b8f8:	str	r0, [fp, #-56]	; 0xffffffc8
   1b8fc:	mov	r0, r1
   1b900:	mov	r1, r3
   1b904:	mov	r3, ip
   1b908:	bl	21f88 <__assert_fail@plt+0x10ea0>
   1b90c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1b910:	subs	r0, r2, r0
   1b914:	rscs	r1, r1, #0
   1b918:	str	r0, [fp, #-60]	; 0xffffffc4
   1b91c:	str	r1, [fp, #-64]	; 0xffffffc0
   1b920:	blt	1baf0 <__assert_fail@plt+0xaa08>
   1b924:	b	1bb04 <__assert_fail@plt+0xaa1c>
   1b928:	b	1b93c <__assert_fail@plt+0xa854>
   1b92c:	ldr	r0, [fp, #-16]
   1b930:	cmp	r0, #1
   1b934:	bcc	1b94c <__assert_fail@plt+0xa864>
   1b938:	b	1b960 <__assert_fail@plt+0xa878>
   1b93c:	ldr	r0, [fp, #-16]
   1b940:	movw	r1, #0
   1b944:	cmp	r1, r0
   1b948:	bcs	1b960 <__assert_fail@plt+0xa878>
   1b94c:	mov	r0, #0
   1b950:	mvn	r1, #0
   1b954:	str	r1, [fp, #-68]	; 0xffffffbc
   1b958:	str	r0, [fp, #-72]	; 0xffffffb8
   1b95c:	b	1b984 <__assert_fail@plt+0xa89c>
   1b960:	ldr	r0, [fp, #-16]
   1b964:	rsb	r2, r0, #0
   1b968:	mvn	r0, #0
   1b96c:	mvn	r1, #-2147483648	; 0x80000000
   1b970:	mov	r3, #0
   1b974:	bl	21f88 <__assert_fail@plt+0x10ea0>
   1b978:	str	r0, [fp, #-68]	; 0xffffffbc
   1b97c:	str	r1, [fp, #-72]	; 0xffffffb8
   1b980:	b	1b984 <__assert_fail@plt+0xa89c>
   1b984:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1b988:	ldr	r1, [fp, #-68]	; 0xffffffbc
   1b98c:	ldr	r2, [fp, #-12]
   1b990:	mvn	r2, r2
   1b994:	subs	r1, r2, r1
   1b998:	rscs	r0, r0, #0
   1b99c:	str	r1, [fp, #-76]	; 0xffffffb4
   1b9a0:	str	r0, [fp, #-80]	; 0xffffffb0
   1b9a4:	bge	1baf0 <__assert_fail@plt+0xaa08>
   1b9a8:	b	1bb04 <__assert_fail@plt+0xaa1c>
   1b9ac:	ldr	r0, [fp, #-16]
   1b9b0:	cmn	r0, #1
   1b9b4:	bne	1b9fc <__assert_fail@plt+0xa914>
   1b9b8:	b	1b9dc <__assert_fail@plt+0xa8f4>
   1b9bc:	ldr	r0, [fp, #-12]
   1b9c0:	rsbs	r0, r0, #0
   1b9c4:	mov	r1, #0
   1b9c8:	sbcs	r1, r1, #-2147483648	; 0x80000000
   1b9cc:	str	r0, [fp, #-84]	; 0xffffffac
   1b9d0:	str	r1, [sp, #88]	; 0x58
   1b9d4:	blt	1baf0 <__assert_fail@plt+0xaa08>
   1b9d8:	b	1bb04 <__assert_fail@plt+0xaa1c>
   1b9dc:	ldr	r0, [fp, #-12]
   1b9e0:	movw	r1, #0
   1b9e4:	cmp	r1, r0
   1b9e8:	bcs	1bb04 <__assert_fail@plt+0xaa1c>
   1b9ec:	mov	r0, #0
   1b9f0:	cmp	r0, #0
   1b9f4:	bne	1baf0 <__assert_fail@plt+0xaa08>
   1b9f8:	b	1bb04 <__assert_fail@plt+0xaa1c>
   1b9fc:	ldr	r2, [fp, #-16]
   1ba00:	mov	r1, #-2147483648	; 0x80000000
   1ba04:	mov	r0, #0
   1ba08:	str	r0, [sp, #84]	; 0x54
   1ba0c:	ldr	r3, [sp, #84]	; 0x54
   1ba10:	bl	21eb4 <__assert_fail@plt+0x10dcc>
   1ba14:	ldr	r2, [fp, #-12]
   1ba18:	subs	r0, r0, r2
   1ba1c:	sbcs	r1, r1, #0
   1ba20:	str	r0, [sp, #80]	; 0x50
   1ba24:	str	r1, [sp, #76]	; 0x4c
   1ba28:	blt	1baf0 <__assert_fail@plt+0xaa08>
   1ba2c:	b	1bb04 <__assert_fail@plt+0xaa1c>
   1ba30:	ldr	r0, [fp, #-16]
   1ba34:	cmp	r0, #0
   1ba38:	bne	1ba40 <__assert_fail@plt+0xa958>
   1ba3c:	b	1bb04 <__assert_fail@plt+0xaa1c>
   1ba40:	ldr	r0, [fp, #-12]
   1ba44:	cmp	r0, #0
   1ba48:	bcs	1bac0 <__assert_fail@plt+0xa9d8>
   1ba4c:	ldr	r0, [fp, #-12]
   1ba50:	cmn	r0, #1
   1ba54:	bne	1ba8c <__assert_fail@plt+0xa9a4>
   1ba58:	b	1ba7c <__assert_fail@plt+0xa994>
   1ba5c:	ldr	r0, [fp, #-16]
   1ba60:	rsbs	r0, r0, #0
   1ba64:	mov	r1, #0
   1ba68:	sbcs	r1, r1, #-2147483648	; 0x80000000
   1ba6c:	str	r0, [sp, #72]	; 0x48
   1ba70:	str	r1, [sp, #68]	; 0x44
   1ba74:	blt	1baf0 <__assert_fail@plt+0xaa08>
   1ba78:	b	1bb04 <__assert_fail@plt+0xaa1c>
   1ba7c:	mov	r0, #0
   1ba80:	cmp	r0, #0
   1ba84:	bne	1baf0 <__assert_fail@plt+0xaa08>
   1ba88:	b	1bb04 <__assert_fail@plt+0xaa1c>
   1ba8c:	ldr	r2, [fp, #-12]
   1ba90:	mov	r1, #-2147483648	; 0x80000000
   1ba94:	mov	r0, #0
   1ba98:	str	r0, [sp, #64]	; 0x40
   1ba9c:	ldr	r3, [sp, #64]	; 0x40
   1baa0:	bl	21eb4 <__assert_fail@plt+0x10dcc>
   1baa4:	ldr	r2, [fp, #-16]
   1baa8:	subs	r0, r0, r2
   1baac:	sbcs	r1, r1, #0
   1bab0:	str	r0, [sp, #60]	; 0x3c
   1bab4:	str	r1, [sp, #56]	; 0x38
   1bab8:	blt	1baf0 <__assert_fail@plt+0xaa08>
   1babc:	b	1bb04 <__assert_fail@plt+0xaa1c>
   1bac0:	ldr	r2, [fp, #-16]
   1bac4:	mvn	r0, #0
   1bac8:	mvn	r1, #-2147483648	; 0x80000000
   1bacc:	mov	r3, #0
   1bad0:	bl	21f88 <__assert_fail@plt+0x10ea0>
   1bad4:	ldr	r2, [fp, #-12]
   1bad8:	subs	r0, r0, r2
   1badc:	sbcs	r1, r1, #0
   1bae0:	str	r0, [sp, #52]	; 0x34
   1bae4:	str	r1, [sp, #48]	; 0x30
   1bae8:	bge	1bb04 <__assert_fail@plt+0xaa1c>
   1baec:	b	1baf0 <__assert_fail@plt+0xaa08>
   1baf0:	ldr	r0, [fp, #-12]
   1baf4:	ldr	r1, [fp, #-16]
   1baf8:	mul	r0, r0, r1
   1bafc:	str	r0, [fp, #-20]	; 0xffffffec
   1bb00:	b	1bd4c <__assert_fail@plt+0xac64>
   1bb04:	ldr	r0, [fp, #-12]
   1bb08:	ldr	r1, [fp, #-16]
   1bb0c:	mul	r0, r0, r1
   1bb10:	str	r0, [fp, #-20]	; 0xffffffec
   1bb14:	b	1bd64 <__assert_fail@plt+0xac7c>
   1bb18:	ldr	r0, [fp, #-16]
   1bb1c:	cmp	r0, #0
   1bb20:	bcs	1bc6c <__assert_fail@plt+0xab84>
   1bb24:	ldr	r0, [fp, #-12]
   1bb28:	cmp	r0, #0
   1bb2c:	bcs	1bbf4 <__assert_fail@plt+0xab0c>
   1bb30:	b	1bb6c <__assert_fail@plt+0xaa84>
   1bb34:	ldr	r0, [fp, #-12]
   1bb38:	ldr	r2, [fp, #-16]
   1bb3c:	mvn	r1, #0
   1bb40:	mov	r3, #0
   1bb44:	str	r0, [sp, #44]	; 0x2c
   1bb48:	mov	r0, r1
   1bb4c:	bl	21f88 <__assert_fail@plt+0x10ea0>
   1bb50:	ldr	r2, [sp, #44]	; 0x2c
   1bb54:	subs	r0, r2, r0
   1bb58:	rscs	r1, r1, #0
   1bb5c:	str	r0, [sp, #40]	; 0x28
   1bb60:	str	r1, [sp, #36]	; 0x24
   1bb64:	bcc	1bd24 <__assert_fail@plt+0xac3c>
   1bb68:	b	1bd38 <__assert_fail@plt+0xac50>
   1bb6c:	b	1bb80 <__assert_fail@plt+0xaa98>
   1bb70:	ldr	r0, [fp, #-16]
   1bb74:	cmp	r0, #1
   1bb78:	bcc	1bb90 <__assert_fail@plt+0xaaa8>
   1bb7c:	b	1bba4 <__assert_fail@plt+0xaabc>
   1bb80:	ldr	r0, [fp, #-16]
   1bb84:	movw	r1, #0
   1bb88:	cmp	r1, r0
   1bb8c:	bcs	1bba4 <__assert_fail@plt+0xaabc>
   1bb90:	mov	r0, #1
   1bb94:	mvn	r1, #0
   1bb98:	str	r1, [sp, #32]
   1bb9c:	str	r0, [sp, #28]
   1bba0:	b	1bbcc <__assert_fail@plt+0xaae4>
   1bba4:	ldr	r0, [fp, #-16]
   1bba8:	rsb	r2, r0, #0
   1bbac:	mvn	r0, #0
   1bbb0:	mov	r3, #0
   1bbb4:	str	r0, [sp, #24]
   1bbb8:	ldr	r1, [sp, #24]
   1bbbc:	bl	21f88 <__assert_fail@plt+0x10ea0>
   1bbc0:	str	r0, [sp, #32]
   1bbc4:	str	r1, [sp, #28]
   1bbc8:	b	1bbcc <__assert_fail@plt+0xaae4>
   1bbcc:	ldr	r0, [sp, #28]
   1bbd0:	ldr	r1, [sp, #32]
   1bbd4:	ldr	r2, [fp, #-12]
   1bbd8:	mvn	r2, r2
   1bbdc:	subs	r1, r2, r1
   1bbe0:	rscs	r0, r0, #0
   1bbe4:	str	r1, [sp, #20]
   1bbe8:	str	r0, [sp, #16]
   1bbec:	bcs	1bd24 <__assert_fail@plt+0xac3c>
   1bbf0:	b	1bd38 <__assert_fail@plt+0xac50>
   1bbf4:	b	1bbfc <__assert_fail@plt+0xab14>
   1bbf8:	b	1bc00 <__assert_fail@plt+0xab18>
   1bbfc:	b	1bc50 <__assert_fail@plt+0xab68>
   1bc00:	ldr	r0, [fp, #-16]
   1bc04:	cmn	r0, #1
   1bc08:	bne	1bc50 <__assert_fail@plt+0xab68>
   1bc0c:	b	1bc28 <__assert_fail@plt+0xab40>
   1bc10:	ldr	r0, [fp, #-12]
   1bc14:	add	r0, r0, #0
   1bc18:	movw	r1, #0
   1bc1c:	cmp	r1, r0
   1bc20:	bcc	1bd24 <__assert_fail@plt+0xac3c>
   1bc24:	b	1bd38 <__assert_fail@plt+0xac50>
   1bc28:	ldr	r0, [fp, #-12]
   1bc2c:	movw	r1, #0
   1bc30:	cmp	r1, r0
   1bc34:	bcs	1bd38 <__assert_fail@plt+0xac50>
   1bc38:	ldr	r0, [fp, #-12]
   1bc3c:	sub	r0, r0, #1
   1bc40:	mvn	r1, #0
   1bc44:	cmp	r1, r0
   1bc48:	bcc	1bd24 <__assert_fail@plt+0xac3c>
   1bc4c:	b	1bd38 <__assert_fail@plt+0xac50>
   1bc50:	ldr	r0, [fp, #-16]
   1bc54:	movw	r1, #0
   1bc58:	udiv	r0, r1, r0
   1bc5c:	ldr	r1, [fp, #-12]
   1bc60:	cmp	r0, r1
   1bc64:	bcc	1bd24 <__assert_fail@plt+0xac3c>
   1bc68:	b	1bd38 <__assert_fail@plt+0xac50>
   1bc6c:	ldr	r0, [fp, #-16]
   1bc70:	cmp	r0, #0
   1bc74:	bne	1bc7c <__assert_fail@plt+0xab94>
   1bc78:	b	1bd38 <__assert_fail@plt+0xac50>
   1bc7c:	ldr	r0, [fp, #-12]
   1bc80:	cmp	r0, #0
   1bc84:	bcs	1bcf0 <__assert_fail@plt+0xac08>
   1bc88:	b	1bc90 <__assert_fail@plt+0xaba8>
   1bc8c:	b	1bc94 <__assert_fail@plt+0xabac>
   1bc90:	b	1bcd4 <__assert_fail@plt+0xabec>
   1bc94:	ldr	r0, [fp, #-12]
   1bc98:	cmn	r0, #1
   1bc9c:	bne	1bcd4 <__assert_fail@plt+0xabec>
   1bca0:	b	1bcbc <__assert_fail@plt+0xabd4>
   1bca4:	ldr	r0, [fp, #-16]
   1bca8:	add	r0, r0, #0
   1bcac:	movw	r1, #0
   1bcb0:	cmp	r1, r0
   1bcb4:	bcc	1bd24 <__assert_fail@plt+0xac3c>
   1bcb8:	b	1bd38 <__assert_fail@plt+0xac50>
   1bcbc:	ldr	r0, [fp, #-16]
   1bcc0:	sub	r0, r0, #1
   1bcc4:	mvn	r1, #0
   1bcc8:	cmp	r1, r0
   1bccc:	bcc	1bd24 <__assert_fail@plt+0xac3c>
   1bcd0:	b	1bd38 <__assert_fail@plt+0xac50>
   1bcd4:	ldr	r0, [fp, #-12]
   1bcd8:	movw	r1, #0
   1bcdc:	udiv	r0, r1, r0
   1bce0:	ldr	r1, [fp, #-16]
   1bce4:	cmp	r0, r1
   1bce8:	bcc	1bd24 <__assert_fail@plt+0xac3c>
   1bcec:	b	1bd38 <__assert_fail@plt+0xac50>
   1bcf0:	ldr	r2, [fp, #-16]
   1bcf4:	mvn	r0, #0
   1bcf8:	mov	r3, #0
   1bcfc:	str	r0, [sp, #12]
   1bd00:	ldr	r1, [sp, #12]
   1bd04:	bl	21f88 <__assert_fail@plt+0x10ea0>
   1bd08:	ldr	r2, [fp, #-12]
   1bd0c:	subs	r0, r0, r2
   1bd10:	sbcs	r1, r1, #0
   1bd14:	str	r0, [sp, #8]
   1bd18:	str	r1, [sp, #4]
   1bd1c:	bcs	1bd38 <__assert_fail@plt+0xac50>
   1bd20:	b	1bd24 <__assert_fail@plt+0xac3c>
   1bd24:	ldr	r0, [fp, #-12]
   1bd28:	ldr	r1, [fp, #-16]
   1bd2c:	mul	r0, r0, r1
   1bd30:	str	r0, [fp, #-20]	; 0xffffffec
   1bd34:	b	1bd4c <__assert_fail@plt+0xac64>
   1bd38:	ldr	r0, [fp, #-12]
   1bd3c:	ldr	r1, [fp, #-16]
   1bd40:	mul	r0, r0, r1
   1bd44:	str	r0, [fp, #-20]	; 0xffffffec
   1bd48:	b	1bd64 <__assert_fail@plt+0xac7c>
   1bd4c:	bl	11010 <__errno_location@plt>
   1bd50:	movw	lr, #12
   1bd54:	str	lr, [r0]
   1bd58:	movw	r0, #0
   1bd5c:	str	r0, [fp, #-4]
   1bd60:	b	1bd74 <__assert_fail@plt+0xac8c>
   1bd64:	ldr	r0, [fp, #-8]
   1bd68:	ldr	r1, [fp, #-20]	; 0xffffffec
   1bd6c:	bl	21944 <__assert_fail@plt+0x1085c>
   1bd70:	str	r0, [fp, #-4]
   1bd74:	ldr	r0, [fp, #-4]
   1bd78:	mov	sp, fp
   1bd7c:	pop	{fp, pc}
   1bd80:	svcvc	0x00ffffff
   1bd84:	andhi	r0, r0, r0
   1bd88:			; <UNDEFINED> instruction: 0xffff8000
   1bd8c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1bd90:	add	fp, sp, #28
   1bd94:	sub	sp, sp, #260	; 0x104
   1bd98:	ldr	ip, [fp, #12]
   1bd9c:	ldr	lr, [fp, #8]
   1bda0:	str	r0, [fp, #-32]	; 0xffffffe0
   1bda4:	str	r1, [fp, #-36]	; 0xffffffdc
   1bda8:	str	r2, [fp, #-40]	; 0xffffffd8
   1bdac:	str	r3, [fp, #-44]	; 0xffffffd4
   1bdb0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1bdb4:	movw	r1, #0
   1bdb8:	cmp	r0, r1
   1bdbc:	str	lr, [fp, #-48]	; 0xffffffd0
   1bdc0:	str	ip, [fp, #-52]	; 0xffffffcc
   1bdc4:	beq	1bdfc <__assert_fail@plt+0xad14>
   1bdc8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1bdcc:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1bdd0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1bdd4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1bdd8:	movw	ip, #12364	; 0x304c
   1bddc:	movt	ip, #2
   1bde0:	str	r1, [fp, #-56]	; 0xffffffc8
   1bde4:	mov	r1, ip
   1bde8:	ldr	ip, [fp, #-56]	; 0xffffffc8
   1bdec:	str	ip, [sp]
   1bdf0:	bl	11004 <fprintf@plt>
   1bdf4:	str	r0, [fp, #-60]	; 0xffffffc4
   1bdf8:	b	1be18 <__assert_fail@plt+0xad30>
   1bdfc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1be00:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1be04:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1be08:	movw	r1, #12376	; 0x3058
   1be0c:	movt	r1, #2
   1be10:	bl	11004 <fprintf@plt>
   1be14:	str	r0, [fp, #-64]	; 0xffffffc0
   1be18:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1be1c:	movw	r1, #12383	; 0x305f
   1be20:	movt	r1, #2
   1be24:	str	r0, [fp, #-68]	; 0xffffffbc
   1be28:	mov	r0, r1
   1be2c:	bl	10fe0 <gettext@plt>
   1be30:	movw	r1, #13101	; 0x332d
   1be34:	movt	r1, #2
   1be38:	movw	r3, #2022	; 0x7e6
   1be3c:	ldr	lr, [fp, #-68]	; 0xffffffbc
   1be40:	str	r0, [fp, #-72]	; 0xffffffb8
   1be44:	mov	r0, lr
   1be48:	ldr	r2, [fp, #-72]	; 0xffffffb8
   1be4c:	bl	11004 <fprintf@plt>
   1be50:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1be54:	movw	r2, #10558	; 0x293e
   1be58:	movt	r2, #2
   1be5c:	str	r0, [fp, #-76]	; 0xffffffb4
   1be60:	mov	r0, r2
   1be64:	str	r2, [fp, #-80]	; 0xffffffb0
   1be68:	bl	10e78 <fputs_unlocked@plt>
   1be6c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1be70:	movw	r2, #12387	; 0x3063
   1be74:	movt	r2, #2
   1be78:	str	r0, [fp, #-84]	; 0xffffffac
   1be7c:	mov	r0, r2
   1be80:	str	r1, [fp, #-88]	; 0xffffffa8
   1be84:	bl	10fe0 <gettext@plt>
   1be88:	movw	r2, #12558	; 0x310e
   1be8c:	movt	r2, #2
   1be90:	ldr	r1, [fp, #-88]	; 0xffffffa8
   1be94:	str	r0, [fp, #-92]	; 0xffffffa4
   1be98:	mov	r0, r1
   1be9c:	ldr	r1, [fp, #-92]	; 0xffffffa4
   1bea0:	bl	11004 <fprintf@plt>
   1bea4:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1bea8:	ldr	r2, [fp, #-80]	; 0xffffffb0
   1beac:	str	r0, [fp, #-96]	; 0xffffffa0
   1beb0:	mov	r0, r2
   1beb4:	bl	10e78 <fputs_unlocked@plt>
   1beb8:	ldr	r1, [fp, #12]
   1bebc:	cmp	r1, #9
   1bec0:	str	r0, [fp, #-100]	; 0xffffff9c
   1bec4:	str	r1, [fp, #-104]	; 0xffffff98
   1bec8:	bhi	1c308 <__assert_fail@plt+0xb220>
   1becc:	add	r0, pc, #8
   1bed0:	ldr	r1, [fp, #-104]	; 0xffffff98
   1bed4:	ldr	r0, [r0, r1, lsl #2]
   1bed8:	mov	pc, r0
   1bedc:	andeq	fp, r1, r4, lsl #30
   1bee0:	andeq	fp, r1, r8, lsl #30
   1bee4:	andeq	fp, r1, r4, asr #30
   1bee8:	andeq	fp, r1, r8, lsl #31
   1beec:	andeq	fp, r1, r4, ror #31
   1bef0:	andeq	ip, r1, ip, asr #32
   1bef4:	andeq	ip, r1, r0, asr #1
   1bef8:	andeq	ip, r1, r0, asr #2
   1befc:	andeq	ip, r1, ip, asr #3
   1bf00:	andeq	ip, r1, r4, ror #4
   1bf04:	b	1c3a8 <__assert_fail@plt+0xb2c0>
   1bf08:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1bf0c:	movw	r1, #12592	; 0x3130
   1bf10:	movt	r1, #2
   1bf14:	str	r0, [fp, #-108]	; 0xffffff94
   1bf18:	mov	r0, r1
   1bf1c:	bl	10fe0 <gettext@plt>
   1bf20:	ldr	r1, [fp, #8]
   1bf24:	ldr	r2, [r1]
   1bf28:	ldr	r1, [fp, #-108]	; 0xffffff94
   1bf2c:	str	r0, [fp, #-112]	; 0xffffff90
   1bf30:	mov	r0, r1
   1bf34:	ldr	r1, [fp, #-112]	; 0xffffff90
   1bf38:	bl	11004 <fprintf@plt>
   1bf3c:	str	r0, [fp, #-116]	; 0xffffff8c
   1bf40:	b	1c3a8 <__assert_fail@plt+0xb2c0>
   1bf44:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1bf48:	movw	r1, #12608	; 0x3140
   1bf4c:	movt	r1, #2
   1bf50:	str	r0, [fp, #-120]	; 0xffffff88
   1bf54:	mov	r0, r1
   1bf58:	bl	10fe0 <gettext@plt>
   1bf5c:	ldr	r1, [fp, #8]
   1bf60:	ldr	r2, [r1]
   1bf64:	ldr	r1, [fp, #8]
   1bf68:	ldr	r3, [r1, #4]
   1bf6c:	ldr	r1, [fp, #-120]	; 0xffffff88
   1bf70:	str	r0, [fp, #-124]	; 0xffffff84
   1bf74:	mov	r0, r1
   1bf78:	ldr	r1, [fp, #-124]	; 0xffffff84
   1bf7c:	bl	11004 <fprintf@plt>
   1bf80:	str	r0, [fp, #-128]	; 0xffffff80
   1bf84:	b	1c3a8 <__assert_fail@plt+0xb2c0>
   1bf88:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1bf8c:	movw	r1, #12631	; 0x3157
   1bf90:	movt	r1, #2
   1bf94:	str	r0, [fp, #-132]	; 0xffffff7c
   1bf98:	mov	r0, r1
   1bf9c:	bl	10fe0 <gettext@plt>
   1bfa0:	ldr	r1, [fp, #8]
   1bfa4:	ldr	r2, [r1]
   1bfa8:	ldr	r1, [fp, #8]
   1bfac:	ldr	r3, [r1, #4]
   1bfb0:	ldr	r1, [fp, #8]
   1bfb4:	ldr	r1, [r1, #8]
   1bfb8:	ldr	lr, [fp, #-132]	; 0xffffff7c
   1bfbc:	str	r0, [fp, #-136]	; 0xffffff78
   1bfc0:	mov	r0, lr
   1bfc4:	ldr	ip, [fp, #-136]	; 0xffffff78
   1bfc8:	str	r1, [fp, #-140]	; 0xffffff74
   1bfcc:	mov	r1, ip
   1bfd0:	ldr	r4, [fp, #-140]	; 0xffffff74
   1bfd4:	str	r4, [sp]
   1bfd8:	bl	11004 <fprintf@plt>
   1bfdc:	str	r0, [sp, #144]	; 0x90
   1bfe0:	b	1c3a8 <__assert_fail@plt+0xb2c0>
   1bfe4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1bfe8:	movw	r1, #12659	; 0x3173
   1bfec:	movt	r1, #2
   1bff0:	str	r0, [sp, #140]	; 0x8c
   1bff4:	mov	r0, r1
   1bff8:	bl	10fe0 <gettext@plt>
   1bffc:	ldr	r1, [fp, #8]
   1c000:	ldr	r2, [r1]
   1c004:	ldr	r1, [fp, #8]
   1c008:	ldr	r3, [r1, #4]
   1c00c:	ldr	r1, [fp, #8]
   1c010:	ldr	r1, [r1, #8]
   1c014:	ldr	lr, [fp, #8]
   1c018:	ldr	lr, [lr, #12]
   1c01c:	ldr	ip, [sp, #140]	; 0x8c
   1c020:	str	r0, [sp, #136]	; 0x88
   1c024:	mov	r0, ip
   1c028:	ldr	r4, [sp, #136]	; 0x88
   1c02c:	str	r1, [sp, #132]	; 0x84
   1c030:	mov	r1, r4
   1c034:	ldr	r5, [sp, #132]	; 0x84
   1c038:	str	r5, [sp]
   1c03c:	str	lr, [sp, #4]
   1c040:	bl	11004 <fprintf@plt>
   1c044:	str	r0, [sp, #128]	; 0x80
   1c048:	b	1c3a8 <__assert_fail@plt+0xb2c0>
   1c04c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1c050:	movw	r1, #12691	; 0x3193
   1c054:	movt	r1, #2
   1c058:	str	r0, [sp, #124]	; 0x7c
   1c05c:	mov	r0, r1
   1c060:	bl	10fe0 <gettext@plt>
   1c064:	ldr	r1, [fp, #8]
   1c068:	ldr	r2, [r1]
   1c06c:	ldr	r1, [fp, #8]
   1c070:	ldr	r3, [r1, #4]
   1c074:	ldr	r1, [fp, #8]
   1c078:	ldr	r1, [r1, #8]
   1c07c:	ldr	lr, [fp, #8]
   1c080:	ldr	lr, [lr, #12]
   1c084:	ldr	ip, [fp, #8]
   1c088:	ldr	ip, [ip, #16]
   1c08c:	ldr	r4, [sp, #124]	; 0x7c
   1c090:	str	r0, [sp, #120]	; 0x78
   1c094:	mov	r0, r4
   1c098:	ldr	r5, [sp, #120]	; 0x78
   1c09c:	str	r1, [sp, #116]	; 0x74
   1c0a0:	mov	r1, r5
   1c0a4:	ldr	r6, [sp, #116]	; 0x74
   1c0a8:	str	r6, [sp]
   1c0ac:	str	lr, [sp, #4]
   1c0b0:	str	ip, [sp, #8]
   1c0b4:	bl	11004 <fprintf@plt>
   1c0b8:	str	r0, [sp, #112]	; 0x70
   1c0bc:	b	1c3a8 <__assert_fail@plt+0xb2c0>
   1c0c0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1c0c4:	movw	r1, #12727	; 0x31b7
   1c0c8:	movt	r1, #2
   1c0cc:	str	r0, [sp, #108]	; 0x6c
   1c0d0:	mov	r0, r1
   1c0d4:	bl	10fe0 <gettext@plt>
   1c0d8:	ldr	r1, [fp, #8]
   1c0dc:	ldr	r2, [r1]
   1c0e0:	ldr	r1, [fp, #8]
   1c0e4:	ldr	r3, [r1, #4]
   1c0e8:	ldr	r1, [fp, #8]
   1c0ec:	ldr	r1, [r1, #8]
   1c0f0:	ldr	lr, [fp, #8]
   1c0f4:	ldr	lr, [lr, #12]
   1c0f8:	ldr	ip, [fp, #8]
   1c0fc:	ldr	ip, [ip, #16]
   1c100:	ldr	r4, [fp, #8]
   1c104:	ldr	r4, [r4, #20]
   1c108:	ldr	r5, [sp, #108]	; 0x6c
   1c10c:	str	r0, [sp, #104]	; 0x68
   1c110:	mov	r0, r5
   1c114:	ldr	r6, [sp, #104]	; 0x68
   1c118:	str	r1, [sp, #100]	; 0x64
   1c11c:	mov	r1, r6
   1c120:	ldr	r7, [sp, #100]	; 0x64
   1c124:	str	r7, [sp]
   1c128:	str	lr, [sp, #4]
   1c12c:	str	ip, [sp, #8]
   1c130:	str	r4, [sp, #12]
   1c134:	bl	11004 <fprintf@plt>
   1c138:	str	r0, [sp, #96]	; 0x60
   1c13c:	b	1c3a8 <__assert_fail@plt+0xb2c0>
   1c140:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1c144:	movw	r1, #12767	; 0x31df
   1c148:	movt	r1, #2
   1c14c:	str	r0, [sp, #92]	; 0x5c
   1c150:	mov	r0, r1
   1c154:	bl	10fe0 <gettext@plt>
   1c158:	ldr	r1, [fp, #8]
   1c15c:	ldr	r2, [r1]
   1c160:	ldr	r1, [fp, #8]
   1c164:	ldr	r3, [r1, #4]
   1c168:	ldr	r1, [fp, #8]
   1c16c:	ldr	r1, [r1, #8]
   1c170:	ldr	lr, [fp, #8]
   1c174:	ldr	lr, [lr, #12]
   1c178:	ldr	ip, [fp, #8]
   1c17c:	ldr	ip, [ip, #16]
   1c180:	ldr	r4, [fp, #8]
   1c184:	ldr	r4, [r4, #20]
   1c188:	ldr	r5, [fp, #8]
   1c18c:	ldr	r5, [r5, #24]
   1c190:	ldr	r6, [sp, #92]	; 0x5c
   1c194:	str	r0, [sp, #88]	; 0x58
   1c198:	mov	r0, r6
   1c19c:	ldr	r7, [sp, #88]	; 0x58
   1c1a0:	str	r1, [sp, #84]	; 0x54
   1c1a4:	mov	r1, r7
   1c1a8:	ldr	r8, [sp, #84]	; 0x54
   1c1ac:	str	r8, [sp]
   1c1b0:	str	lr, [sp, #4]
   1c1b4:	str	ip, [sp, #8]
   1c1b8:	str	r4, [sp, #12]
   1c1bc:	str	r5, [sp, #16]
   1c1c0:	bl	11004 <fprintf@plt>
   1c1c4:	str	r0, [sp, #80]	; 0x50
   1c1c8:	b	1c3a8 <__assert_fail@plt+0xb2c0>
   1c1cc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1c1d0:	movw	r1, #12811	; 0x320b
   1c1d4:	movt	r1, #2
   1c1d8:	str	r0, [sp, #76]	; 0x4c
   1c1dc:	mov	r0, r1
   1c1e0:	bl	10fe0 <gettext@plt>
   1c1e4:	ldr	r1, [fp, #8]
   1c1e8:	ldr	r2, [r1]
   1c1ec:	ldr	r1, [fp, #8]
   1c1f0:	ldr	r3, [r1, #4]
   1c1f4:	ldr	r1, [fp, #8]
   1c1f8:	ldr	r1, [r1, #8]
   1c1fc:	ldr	lr, [fp, #8]
   1c200:	ldr	lr, [lr, #12]
   1c204:	ldr	ip, [fp, #8]
   1c208:	ldr	ip, [ip, #16]
   1c20c:	ldr	r4, [fp, #8]
   1c210:	ldr	r4, [r4, #20]
   1c214:	ldr	r5, [fp, #8]
   1c218:	ldr	r5, [r5, #24]
   1c21c:	ldr	r6, [fp, #8]
   1c220:	ldr	r6, [r6, #28]
   1c224:	ldr	r7, [sp, #76]	; 0x4c
   1c228:	str	r0, [sp, #72]	; 0x48
   1c22c:	mov	r0, r7
   1c230:	ldr	r8, [sp, #72]	; 0x48
   1c234:	str	r1, [sp, #68]	; 0x44
   1c238:	mov	r1, r8
   1c23c:	ldr	r9, [sp, #68]	; 0x44
   1c240:	str	r9, [sp]
   1c244:	str	lr, [sp, #4]
   1c248:	str	ip, [sp, #8]
   1c24c:	str	r4, [sp, #12]
   1c250:	str	r5, [sp, #16]
   1c254:	str	r6, [sp, #20]
   1c258:	bl	11004 <fprintf@plt>
   1c25c:	str	r0, [sp, #64]	; 0x40
   1c260:	b	1c3a8 <__assert_fail@plt+0xb2c0>
   1c264:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1c268:	movw	r1, #12859	; 0x323b
   1c26c:	movt	r1, #2
   1c270:	str	r0, [sp, #60]	; 0x3c
   1c274:	mov	r0, r1
   1c278:	bl	10fe0 <gettext@plt>
   1c27c:	ldr	r1, [fp, #8]
   1c280:	ldr	r2, [r1]
   1c284:	ldr	r1, [fp, #8]
   1c288:	ldr	r3, [r1, #4]
   1c28c:	ldr	r1, [fp, #8]
   1c290:	ldr	r1, [r1, #8]
   1c294:	ldr	lr, [fp, #8]
   1c298:	ldr	lr, [lr, #12]
   1c29c:	ldr	ip, [fp, #8]
   1c2a0:	ldr	ip, [ip, #16]
   1c2a4:	ldr	r4, [fp, #8]
   1c2a8:	ldr	r4, [r4, #20]
   1c2ac:	ldr	r5, [fp, #8]
   1c2b0:	ldr	r5, [r5, #24]
   1c2b4:	ldr	r6, [fp, #8]
   1c2b8:	ldr	r6, [r6, #28]
   1c2bc:	ldr	r7, [fp, #8]
   1c2c0:	ldr	r7, [r7, #32]
   1c2c4:	ldr	r8, [sp, #60]	; 0x3c
   1c2c8:	str	r0, [sp, #56]	; 0x38
   1c2cc:	mov	r0, r8
   1c2d0:	ldr	r9, [sp, #56]	; 0x38
   1c2d4:	str	r1, [sp, #52]	; 0x34
   1c2d8:	mov	r1, r9
   1c2dc:	ldr	sl, [sp, #52]	; 0x34
   1c2e0:	str	sl, [sp]
   1c2e4:	str	lr, [sp, #4]
   1c2e8:	str	ip, [sp, #8]
   1c2ec:	str	r4, [sp, #12]
   1c2f0:	str	r5, [sp, #16]
   1c2f4:	str	r6, [sp, #20]
   1c2f8:	str	r7, [sp, #24]
   1c2fc:	bl	11004 <fprintf@plt>
   1c300:	str	r0, [sp, #48]	; 0x30
   1c304:	b	1c3a8 <__assert_fail@plt+0xb2c0>
   1c308:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1c30c:	movw	r1, #12911	; 0x326f
   1c310:	movt	r1, #2
   1c314:	str	r0, [sp, #44]	; 0x2c
   1c318:	mov	r0, r1
   1c31c:	bl	10fe0 <gettext@plt>
   1c320:	ldr	r1, [fp, #8]
   1c324:	ldr	r2, [r1]
   1c328:	ldr	r1, [fp, #8]
   1c32c:	ldr	r3, [r1, #4]
   1c330:	ldr	r1, [fp, #8]
   1c334:	ldr	r1, [r1, #8]
   1c338:	ldr	lr, [fp, #8]
   1c33c:	ldr	lr, [lr, #12]
   1c340:	ldr	ip, [fp, #8]
   1c344:	ldr	ip, [ip, #16]
   1c348:	ldr	r4, [fp, #8]
   1c34c:	ldr	r4, [r4, #20]
   1c350:	ldr	r5, [fp, #8]
   1c354:	ldr	r5, [r5, #24]
   1c358:	ldr	r6, [fp, #8]
   1c35c:	ldr	r6, [r6, #28]
   1c360:	ldr	r7, [fp, #8]
   1c364:	ldr	r7, [r7, #32]
   1c368:	ldr	r8, [sp, #44]	; 0x2c
   1c36c:	str	r0, [sp, #40]	; 0x28
   1c370:	mov	r0, r8
   1c374:	ldr	r9, [sp, #40]	; 0x28
   1c378:	str	r1, [sp, #36]	; 0x24
   1c37c:	mov	r1, r9
   1c380:	ldr	sl, [sp, #36]	; 0x24
   1c384:	str	sl, [sp]
   1c388:	str	lr, [sp, #4]
   1c38c:	str	ip, [sp, #8]
   1c390:	str	r4, [sp, #12]
   1c394:	str	r5, [sp, #16]
   1c398:	str	r6, [sp, #20]
   1c39c:	str	r7, [sp, #24]
   1c3a0:	bl	11004 <fprintf@plt>
   1c3a4:	str	r0, [sp, #32]
   1c3a8:	sub	sp, fp, #28
   1c3ac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c3b0:	push	{fp, lr}
   1c3b4:	mov	fp, sp
   1c3b8:	sub	sp, sp, #32
   1c3bc:	ldr	ip, [fp, #8]
   1c3c0:	str	r0, [fp, #-4]
   1c3c4:	str	r1, [fp, #-8]
   1c3c8:	str	r2, [fp, #-12]
   1c3cc:	str	r3, [sp, #16]
   1c3d0:	movw	r0, #0
   1c3d4:	str	r0, [sp, #12]
   1c3d8:	str	ip, [sp, #8]
   1c3dc:	ldr	r0, [fp, #8]
   1c3e0:	ldr	r1, [sp, #12]
   1c3e4:	add	r0, r0, r1, lsl #2
   1c3e8:	ldr	r0, [r0]
   1c3ec:	movw	r1, #0
   1c3f0:	cmp	r0, r1
   1c3f4:	beq	1c40c <__assert_fail@plt+0xb324>
   1c3f8:	b	1c3fc <__assert_fail@plt+0xb314>
   1c3fc:	ldr	r0, [sp, #12]
   1c400:	add	r0, r0, #1
   1c404:	str	r0, [sp, #12]
   1c408:	b	1c3dc <__assert_fail@plt+0xb2f4>
   1c40c:	ldr	r0, [fp, #-4]
   1c410:	ldr	r1, [fp, #-8]
   1c414:	ldr	r2, [fp, #-12]
   1c418:	ldr	r3, [sp, #16]
   1c41c:	ldr	ip, [fp, #8]
   1c420:	ldr	lr, [sp, #12]
   1c424:	str	ip, [sp]
   1c428:	str	lr, [sp, #4]
   1c42c:	bl	1bd8c <__assert_fail@plt+0xaca4>
   1c430:	mov	sp, fp
   1c434:	pop	{fp, pc}
   1c438:	push	{fp, lr}
   1c43c:	mov	fp, sp
   1c440:	sub	sp, sp, #80	; 0x50
   1c444:	ldr	ip, [fp, #8]
   1c448:	str	ip, [fp, #-4]
   1c44c:	str	r0, [fp, #-8]
   1c450:	str	r1, [fp, #-12]
   1c454:	str	r2, [fp, #-16]
   1c458:	str	r3, [fp, #-20]	; 0xffffffec
   1c45c:	movw	r0, #0
   1c460:	str	r0, [fp, #-24]	; 0xffffffe8
   1c464:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c468:	cmp	r0, #10
   1c46c:	movw	r0, #0
   1c470:	str	r0, [sp, #12]
   1c474:	bcs	1c4ac <__assert_fail@plt+0xb3c4>
   1c478:	ldr	r0, [fp, #-4]
   1c47c:	add	r1, r0, #4
   1c480:	str	r1, [fp, #-4]
   1c484:	ldr	r0, [r0]
   1c488:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1c48c:	add	r2, sp, #16
   1c490:	add	r1, r2, r1, lsl #2
   1c494:	str	r0, [r1]
   1c498:	movw	r1, #0
   1c49c:	cmp	r0, r1
   1c4a0:	movw	r0, #0
   1c4a4:	movne	r0, #1
   1c4a8:	str	r0, [sp, #12]
   1c4ac:	ldr	r0, [sp, #12]
   1c4b0:	tst	r0, #1
   1c4b4:	beq	1c4cc <__assert_fail@plt+0xb3e4>
   1c4b8:	b	1c4bc <__assert_fail@plt+0xb3d4>
   1c4bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c4c0:	add	r0, r0, #1
   1c4c4:	str	r0, [fp, #-24]	; 0xffffffe8
   1c4c8:	b	1c464 <__assert_fail@plt+0xb37c>
   1c4cc:	add	r0, sp, #16
   1c4d0:	ldr	r1, [fp, #-8]
   1c4d4:	ldr	r2, [fp, #-12]
   1c4d8:	ldr	r3, [fp, #-16]
   1c4dc:	ldr	ip, [fp, #-20]	; 0xffffffec
   1c4e0:	ldr	lr, [fp, #-24]	; 0xffffffe8
   1c4e4:	str	r0, [sp, #8]
   1c4e8:	mov	r0, r1
   1c4ec:	mov	r1, r2
   1c4f0:	mov	r2, r3
   1c4f4:	mov	r3, ip
   1c4f8:	ldr	ip, [sp, #8]
   1c4fc:	str	ip, [sp]
   1c500:	str	lr, [sp, #4]
   1c504:	bl	1bd8c <__assert_fail@plt+0xaca4>
   1c508:	mov	sp, fp
   1c50c:	pop	{fp, pc}
   1c510:	push	{fp, lr}
   1c514:	mov	fp, sp
   1c518:	sub	sp, sp, #32
   1c51c:	str	r0, [fp, #-4]
   1c520:	str	r1, [fp, #-8]
   1c524:	str	r2, [fp, #-12]
   1c528:	str	r3, [sp, #16]
   1c52c:	add	r0, fp, #8
   1c530:	str	r0, [sp, #12]
   1c534:	ldr	r0, [fp, #-4]
   1c538:	ldr	r1, [fp, #-8]
   1c53c:	ldr	r2, [fp, #-12]
   1c540:	ldr	r3, [sp, #16]
   1c544:	ldr	ip, [sp, #12]
   1c548:	mov	lr, sp
   1c54c:	str	ip, [lr]
   1c550:	bl	1c438 <__assert_fail@plt+0xb350>
   1c554:	add	r0, sp, #12
   1c558:	str	r0, [sp, #8]
   1c55c:	mov	sp, fp
   1c560:	pop	{fp, pc}
   1c564:	push	{fp, lr}
   1c568:	mov	fp, sp
   1c56c:	sub	sp, sp, #16
   1c570:	movw	r0, #16724	; 0x4154
   1c574:	movt	r0, #3
   1c578:	ldr	r1, [r0]
   1c57c:	movw	r0, #10558	; 0x293e
   1c580:	movt	r0, #2
   1c584:	bl	10e78 <fputs_unlocked@plt>
   1c588:	movw	r1, #12971	; 0x32ab
   1c58c:	movt	r1, #2
   1c590:	str	r0, [fp, #-4]
   1c594:	mov	r0, r1
   1c598:	bl	10fe0 <gettext@plt>
   1c59c:	movw	r1, #12991	; 0x32bf
   1c5a0:	movt	r1, #2
   1c5a4:	bl	10ea8 <printf@plt>
   1c5a8:	movw	r1, #13013	; 0x32d5
   1c5ac:	movt	r1, #2
   1c5b0:	str	r0, [sp, #8]
   1c5b4:	mov	r0, r1
   1c5b8:	bl	10fe0 <gettext@plt>
   1c5bc:	movw	r1, #10033	; 0x2731
   1c5c0:	movt	r1, #2
   1c5c4:	movw	r2, #10367	; 0x287f
   1c5c8:	movt	r2, #2
   1c5cc:	bl	10ea8 <printf@plt>
   1c5d0:	movw	r1, #13033	; 0x32e9
   1c5d4:	movt	r1, #2
   1c5d8:	str	r0, [sp, #4]
   1c5dc:	mov	r0, r1
   1c5e0:	bl	10fe0 <gettext@plt>
   1c5e4:	movw	r1, #13072	; 0x3310
   1c5e8:	movt	r1, #2
   1c5ec:	bl	10ea8 <printf@plt>
   1c5f0:	str	r0, [sp]
   1c5f4:	mov	sp, fp
   1c5f8:	pop	{fp, pc}
   1c5fc:	push	{fp, lr}
   1c600:	mov	fp, sp
   1c604:	sub	sp, sp, #16
   1c608:	str	r0, [fp, #-4]
   1c60c:	str	r1, [sp, #8]
   1c610:	str	r2, [sp, #4]
   1c614:	ldr	r0, [fp, #-4]
   1c618:	ldr	r1, [sp, #8]
   1c61c:	ldr	r2, [sp, #4]
   1c620:	bl	1c62c <__assert_fail@plt+0xb544>
   1c624:	mov	sp, fp
   1c628:	pop	{fp, pc}
   1c62c:	push	{fp, lr}
   1c630:	mov	fp, sp
   1c634:	sub	sp, sp, #16
   1c638:	str	r0, [fp, #-4]
   1c63c:	str	r1, [sp, #8]
   1c640:	str	r2, [sp, #4]
   1c644:	ldr	r0, [fp, #-4]
   1c648:	ldr	r1, [sp, #8]
   1c64c:	ldr	r2, [sp, #4]
   1c650:	bl	1a9fc <__assert_fail@plt+0x9914>
   1c654:	str	r0, [sp]
   1c658:	ldr	r0, [sp]
   1c65c:	movw	r1, #0
   1c660:	cmp	r0, r1
   1c664:	bne	1c694 <__assert_fail@plt+0xb5ac>
   1c668:	ldr	r0, [fp, #-4]
   1c66c:	movw	r1, #0
   1c670:	cmp	r0, r1
   1c674:	beq	1c690 <__assert_fail@plt+0xb5a8>
   1c678:	ldr	r0, [sp, #8]
   1c67c:	cmp	r0, #0
   1c680:	beq	1c694 <__assert_fail@plt+0xb5ac>
   1c684:	ldr	r0, [sp, #4]
   1c688:	cmp	r0, #0
   1c68c:	beq	1c694 <__assert_fail@plt+0xb5ac>
   1c690:	bl	1f47c <__assert_fail@plt+0xe394>
   1c694:	ldr	r0, [sp]
   1c698:	mov	sp, fp
   1c69c:	pop	{fp, pc}
   1c6a0:	push	{fp, lr}
   1c6a4:	mov	fp, sp
   1c6a8:	sub	sp, sp, #8
   1c6ac:	str	r0, [sp, #4]
   1c6b0:	ldr	r0, [sp, #4]
   1c6b4:	bl	218d4 <__assert_fail@plt+0x107ec>
   1c6b8:	bl	1c6c4 <__assert_fail@plt+0xb5dc>
   1c6bc:	mov	sp, fp
   1c6c0:	pop	{fp, pc}
   1c6c4:	push	{fp, lr}
   1c6c8:	mov	fp, sp
   1c6cc:	sub	sp, sp, #8
   1c6d0:	str	r0, [sp, #4]
   1c6d4:	ldr	r0, [sp, #4]
   1c6d8:	movw	r1, #0
   1c6dc:	cmp	r0, r1
   1c6e0:	bne	1c6e8 <__assert_fail@plt+0xb600>
   1c6e4:	bl	1f47c <__assert_fail@plt+0xe394>
   1c6e8:	ldr	r0, [sp, #4]
   1c6ec:	mov	sp, fp
   1c6f0:	pop	{fp, pc}
   1c6f4:	push	{fp, lr}
   1c6f8:	mov	fp, sp
   1c6fc:	sub	sp, sp, #8
   1c700:	str	r0, [sp, #4]
   1c704:	ldr	r0, [sp, #4]
   1c708:	bl	180b0 <__assert_fail@plt+0x6fc8>
   1c70c:	bl	1c6c4 <__assert_fail@plt+0xb5dc>
   1c710:	mov	sp, fp
   1c714:	pop	{fp, pc}
   1c718:	push	{fp, lr}
   1c71c:	mov	fp, sp
   1c720:	sub	sp, sp, #8
   1c724:	str	r0, [sp, #4]
   1c728:	ldr	r0, [sp, #4]
   1c72c:	bl	1c6a0 <__assert_fail@plt+0xb5b8>
   1c730:	mov	sp, fp
   1c734:	pop	{fp, pc}
   1c738:	push	{fp, lr}
   1c73c:	mov	fp, sp
   1c740:	sub	sp, sp, #16
   1c744:	str	r0, [fp, #-4]
   1c748:	str	r1, [sp, #8]
   1c74c:	ldr	r0, [fp, #-4]
   1c750:	ldr	r1, [sp, #8]
   1c754:	bl	21944 <__assert_fail@plt+0x1085c>
   1c758:	str	r0, [sp, #4]
   1c75c:	ldr	r0, [sp, #4]
   1c760:	movw	r1, #0
   1c764:	cmp	r0, r1
   1c768:	bne	1c78c <__assert_fail@plt+0xb6a4>
   1c76c:	ldr	r0, [fp, #-4]
   1c770:	movw	r1, #0
   1c774:	cmp	r0, r1
   1c778:	beq	1c788 <__assert_fail@plt+0xb6a0>
   1c77c:	ldr	r0, [sp, #8]
   1c780:	cmp	r0, #0
   1c784:	beq	1c78c <__assert_fail@plt+0xb6a4>
   1c788:	bl	1f47c <__assert_fail@plt+0xe394>
   1c78c:	ldr	r0, [sp, #4]
   1c790:	mov	sp, fp
   1c794:	pop	{fp, pc}
   1c798:	push	{fp, lr}
   1c79c:	mov	fp, sp
   1c7a0:	sub	sp, sp, #8
   1c7a4:	str	r0, [sp, #4]
   1c7a8:	str	r1, [sp]
   1c7ac:	ldr	r0, [sp, #4]
   1c7b0:	ldr	r1, [sp]
   1c7b4:	bl	180f0 <__assert_fail@plt+0x7008>
   1c7b8:	bl	1c6c4 <__assert_fail@plt+0xb5dc>
   1c7bc:	mov	sp, fp
   1c7c0:	pop	{fp, pc}
   1c7c4:	push	{fp, lr}
   1c7c8:	mov	fp, sp
   1c7cc:	sub	sp, sp, #16
   1c7d0:	str	r0, [fp, #-4]
   1c7d4:	str	r1, [sp, #8]
   1c7d8:	str	r2, [sp, #4]
   1c7dc:	ldr	r0, [fp, #-4]
   1c7e0:	ldr	r1, [sp, #8]
   1c7e4:	ldr	r2, [sp, #4]
   1c7e8:	bl	181e8 <__assert_fail@plt+0x7100>
   1c7ec:	bl	1c6c4 <__assert_fail@plt+0xb5dc>
   1c7f0:	mov	sp, fp
   1c7f4:	pop	{fp, pc}
   1c7f8:	push	{fp, lr}
   1c7fc:	mov	fp, sp
   1c800:	sub	sp, sp, #8
   1c804:	str	r0, [sp, #4]
   1c808:	str	r1, [sp]
   1c80c:	ldr	r1, [sp, #4]
   1c810:	ldr	r2, [sp]
   1c814:	movw	r0, #0
   1c818:	bl	1c62c <__assert_fail@plt+0xb544>
   1c81c:	mov	sp, fp
   1c820:	pop	{fp, pc}
   1c824:	push	{fp, lr}
   1c828:	mov	fp, sp
   1c82c:	sub	sp, sp, #8
   1c830:	str	r0, [sp, #4]
   1c834:	str	r1, [sp]
   1c838:	ldr	r1, [sp, #4]
   1c83c:	ldr	r2, [sp]
   1c840:	movw	r0, #0
   1c844:	bl	1c7c4 <__assert_fail@plt+0xb6dc>
   1c848:	mov	sp, fp
   1c84c:	pop	{fp, pc}
   1c850:	push	{fp, lr}
   1c854:	mov	fp, sp
   1c858:	sub	sp, sp, #8
   1c85c:	str	r0, [sp, #4]
   1c860:	str	r1, [sp]
   1c864:	ldr	r0, [sp, #4]
   1c868:	ldr	r1, [sp]
   1c86c:	movw	r2, #1
   1c870:	bl	1c87c <__assert_fail@plt+0xb794>
   1c874:	mov	sp, fp
   1c878:	pop	{fp, pc}
   1c87c:	push	{fp, lr}
   1c880:	mov	fp, sp
   1c884:	sub	sp, sp, #16
   1c888:	str	r0, [fp, #-4]
   1c88c:	str	r1, [sp, #8]
   1c890:	str	r2, [sp, #4]
   1c894:	ldr	r0, [sp, #8]
   1c898:	ldr	r0, [r0]
   1c89c:	str	r0, [sp]
   1c8a0:	ldr	r0, [fp, #-4]
   1c8a4:	movw	r1, #0
   1c8a8:	cmp	r0, r1
   1c8ac:	bne	1c8f8 <__assert_fail@plt+0xb810>
   1c8b0:	ldr	r0, [sp]
   1c8b4:	cmp	r0, #0
   1c8b8:	bne	1c8f4 <__assert_fail@plt+0xb80c>
   1c8bc:	ldr	r0, [sp, #4]
   1c8c0:	movw	r1, #64	; 0x40
   1c8c4:	udiv	r0, r1, r0
   1c8c8:	str	r0, [sp]
   1c8cc:	ldr	r0, [sp]
   1c8d0:	cmp	r0, #0
   1c8d4:	movw	r0, #0
   1c8d8:	movne	r0, #1
   1c8dc:	mvn	r1, #0
   1c8e0:	eor	r0, r0, r1
   1c8e4:	and	r0, r0, #1
   1c8e8:	ldr	r1, [sp]
   1c8ec:	add	r0, r1, r0
   1c8f0:	str	r0, [sp]
   1c8f4:	b	1c928 <__assert_fail@plt+0xb840>
   1c8f8:	ldr	r0, [sp]
   1c8fc:	ldr	r1, [sp]
   1c900:	lsr	r1, r1, #1
   1c904:	add	r1, r1, #1
   1c908:	adds	r0, r0, r1
   1c90c:	mov	r1, #0
   1c910:	adc	r1, r1, #0
   1c914:	str	r0, [sp]
   1c918:	tst	r1, #1
   1c91c:	beq	1c924 <__assert_fail@plt+0xb83c>
   1c920:	bl	1f47c <__assert_fail@plt+0xe394>
   1c924:	b	1c928 <__assert_fail@plt+0xb840>
   1c928:	ldr	r0, [fp, #-4]
   1c92c:	ldr	r1, [sp]
   1c930:	ldr	r2, [sp, #4]
   1c934:	bl	1c62c <__assert_fail@plt+0xb544>
   1c938:	str	r0, [fp, #-4]
   1c93c:	ldr	r0, [sp]
   1c940:	ldr	r1, [sp, #8]
   1c944:	str	r0, [r1]
   1c948:	ldr	r0, [fp, #-4]
   1c94c:	mov	sp, fp
   1c950:	pop	{fp, pc}
   1c954:	push	{fp, lr}
   1c958:	mov	fp, sp
   1c95c:	sub	sp, sp, #376	; 0x178
   1c960:	ldr	ip, [fp, #8]
   1c964:	str	r0, [fp, #-4]
   1c968:	str	r1, [fp, #-8]
   1c96c:	str	r2, [fp, #-12]
   1c970:	str	r3, [fp, #-16]
   1c974:	ldr	r0, [fp, #-8]
   1c978:	ldr	r0, [r0]
   1c97c:	str	r0, [fp, #-20]	; 0xffffffec
   1c980:	ldr	r0, [fp, #-20]	; 0xffffffec
   1c984:	ldr	r1, [fp, #-20]	; 0xffffffec
   1c988:	asr	r1, r1, #1
   1c98c:	add	r1, r0, r1
   1c990:	mov	r2, #1
   1c994:	cmp	r1, r0
   1c998:	movwvc	r2, #0
   1c99c:	str	r1, [fp, #-24]	; 0xffffffe8
   1c9a0:	tst	r2, #1
   1c9a4:	str	ip, [fp, #-36]	; 0xffffffdc
   1c9a8:	beq	1c9b4 <__assert_fail@plt+0xb8cc>
   1c9ac:	ldr	r0, [pc, #4044]	; 1d980 <__assert_fail@plt+0xc898>
   1c9b0:	str	r0, [fp, #-24]	; 0xffffffe8
   1c9b4:	ldr	r0, [fp, #-16]
   1c9b8:	movw	r1, #0
   1c9bc:	cmp	r1, r0
   1c9c0:	bgt	1c9dc <__assert_fail@plt+0xb8f4>
   1c9c4:	ldr	r0, [fp, #-16]
   1c9c8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1c9cc:	cmp	r0, r1
   1c9d0:	bge	1c9dc <__assert_fail@plt+0xb8f4>
   1c9d4:	ldr	r0, [fp, #-16]
   1c9d8:	str	r0, [fp, #-24]	; 0xffffffe8
   1c9dc:	b	1cdb4 <__assert_fail@plt+0xbccc>
   1c9e0:	b	1c9e4 <__assert_fail@plt+0xb8fc>
   1c9e4:	ldr	r0, [fp, #8]
   1c9e8:	cmp	r0, #0
   1c9ec:	bge	1cb00 <__assert_fail@plt+0xba18>
   1c9f0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c9f4:	cmp	r0, #0
   1c9f8:	bge	1ca84 <__assert_fail@plt+0xb99c>
   1c9fc:	b	1ca00 <__assert_fail@plt+0xb918>
   1ca00:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ca04:	ldr	r1, [fp, #8]
   1ca08:	movw	r2, #127	; 0x7f
   1ca0c:	sdiv	r1, r2, r1
   1ca10:	cmp	r0, r1
   1ca14:	blt	1cba0 <__assert_fail@plt+0xbab8>
   1ca18:	b	1cbb8 <__assert_fail@plt+0xbad0>
   1ca1c:	b	1ca20 <__assert_fail@plt+0xb938>
   1ca20:	ldr	r0, [pc, #4076]	; 1da14 <__assert_fail@plt+0xc92c>
   1ca24:	ldr	r1, [fp, #8]
   1ca28:	cmp	r1, r0
   1ca2c:	blt	1ca44 <__assert_fail@plt+0xb95c>
   1ca30:	b	1ca50 <__assert_fail@plt+0xb968>
   1ca34:	ldr	r0, [fp, #8]
   1ca38:	movw	r1, #0
   1ca3c:	cmp	r1, r0
   1ca40:	bge	1ca50 <__assert_fail@plt+0xb968>
   1ca44:	movw	r0, #0
   1ca48:	str	r0, [fp, #-40]	; 0xffffffd8
   1ca4c:	b	1ca68 <__assert_fail@plt+0xb980>
   1ca50:	ldr	r0, [fp, #8]
   1ca54:	movw	r1, #0
   1ca58:	sub	r0, r1, r0
   1ca5c:	movw	r1, #127	; 0x7f
   1ca60:	sdiv	r0, r1, r0
   1ca64:	str	r0, [fp, #-40]	; 0xffffffd8
   1ca68:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1ca6c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1ca70:	mvn	r2, #0
   1ca74:	sub	r1, r2, r1
   1ca78:	cmp	r0, r1
   1ca7c:	ble	1cba0 <__assert_fail@plt+0xbab8>
   1ca80:	b	1cbb8 <__assert_fail@plt+0xbad0>
   1ca84:	b	1ca88 <__assert_fail@plt+0xb9a0>
   1ca88:	b	1cae4 <__assert_fail@plt+0xb9fc>
   1ca8c:	b	1cae4 <__assert_fail@plt+0xb9fc>
   1ca90:	ldr	r0, [fp, #8]
   1ca94:	cmn	r0, #1
   1ca98:	bne	1cae4 <__assert_fail@plt+0xb9fc>
   1ca9c:	b	1caa0 <__assert_fail@plt+0xb9b8>
   1caa0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1caa4:	mvn	r1, #127	; 0x7f
   1caa8:	add	r0, r0, r1
   1caac:	movw	r1, #0
   1cab0:	cmp	r1, r0
   1cab4:	blt	1cba0 <__assert_fail@plt+0xbab8>
   1cab8:	b	1cbb8 <__assert_fail@plt+0xbad0>
   1cabc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cac0:	movw	r1, #0
   1cac4:	cmp	r1, r0
   1cac8:	bge	1cbb8 <__assert_fail@plt+0xbad0>
   1cacc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cad0:	sub	r0, r0, #1
   1cad4:	movw	r1, #127	; 0x7f
   1cad8:	cmp	r1, r0
   1cadc:	blt	1cba0 <__assert_fail@plt+0xbab8>
   1cae0:	b	1cbb8 <__assert_fail@plt+0xbad0>
   1cae4:	ldr	r0, [fp, #8]
   1cae8:	mvn	r1, #127	; 0x7f
   1caec:	sdiv	r0, r1, r0
   1caf0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1caf4:	cmp	r0, r1
   1caf8:	blt	1cba0 <__assert_fail@plt+0xbab8>
   1cafc:	b	1cbb8 <__assert_fail@plt+0xbad0>
   1cb00:	ldr	r0, [fp, #8]
   1cb04:	cmp	r0, #0
   1cb08:	bne	1cb10 <__assert_fail@plt+0xba28>
   1cb0c:	b	1cbb8 <__assert_fail@plt+0xbad0>
   1cb10:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cb14:	cmp	r0, #0
   1cb18:	bge	1cb88 <__assert_fail@plt+0xbaa0>
   1cb1c:	b	1cb20 <__assert_fail@plt+0xba38>
   1cb20:	b	1cb6c <__assert_fail@plt+0xba84>
   1cb24:	b	1cb6c <__assert_fail@plt+0xba84>
   1cb28:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cb2c:	cmn	r0, #1
   1cb30:	bne	1cb6c <__assert_fail@plt+0xba84>
   1cb34:	b	1cb38 <__assert_fail@plt+0xba50>
   1cb38:	ldr	r0, [fp, #8]
   1cb3c:	mvn	r1, #127	; 0x7f
   1cb40:	add	r0, r0, r1
   1cb44:	movw	r1, #0
   1cb48:	cmp	r1, r0
   1cb4c:	blt	1cba0 <__assert_fail@plt+0xbab8>
   1cb50:	b	1cbb8 <__assert_fail@plt+0xbad0>
   1cb54:	ldr	r0, [fp, #8]
   1cb58:	sub	r0, r0, #1
   1cb5c:	movw	r1, #127	; 0x7f
   1cb60:	cmp	r1, r0
   1cb64:	blt	1cba0 <__assert_fail@plt+0xbab8>
   1cb68:	b	1cbb8 <__assert_fail@plt+0xbad0>
   1cb6c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cb70:	mvn	r1, #127	; 0x7f
   1cb74:	sdiv	r0, r1, r0
   1cb78:	ldr	r1, [fp, #8]
   1cb7c:	cmp	r0, r1
   1cb80:	blt	1cba0 <__assert_fail@plt+0xbab8>
   1cb84:	b	1cbb8 <__assert_fail@plt+0xbad0>
   1cb88:	ldr	r0, [fp, #8]
   1cb8c:	movw	r1, #127	; 0x7f
   1cb90:	sdiv	r0, r1, r0
   1cb94:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1cb98:	cmp	r0, r1
   1cb9c:	bge	1cbb8 <__assert_fail@plt+0xbad0>
   1cba0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cba4:	ldr	r1, [fp, #8]
   1cba8:	mul	r0, r0, r1
   1cbac:	sxtb	r0, r0
   1cbb0:	str	r0, [fp, #-28]	; 0xffffffe4
   1cbb4:	b	1ddcc <__assert_fail@plt+0xcce4>
   1cbb8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cbbc:	ldr	r1, [fp, #8]
   1cbc0:	mul	r0, r0, r1
   1cbc4:	sxtb	r0, r0
   1cbc8:	str	r0, [fp, #-28]	; 0xffffffe4
   1cbcc:	b	1dddc <__assert_fail@plt+0xccf4>
   1cbd0:	ldr	r0, [fp, #8]
   1cbd4:	cmp	r0, #0
   1cbd8:	bge	1cce8 <__assert_fail@plt+0xbc00>
   1cbdc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cbe0:	cmp	r0, #0
   1cbe4:	bge	1cc70 <__assert_fail@plt+0xbb88>
   1cbe8:	b	1cbec <__assert_fail@plt+0xbb04>
   1cbec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cbf0:	ldr	r1, [fp, #8]
   1cbf4:	movw	r2, #255	; 0xff
   1cbf8:	sdiv	r1, r2, r1
   1cbfc:	cmp	r0, r1
   1cc00:	blt	1cd84 <__assert_fail@plt+0xbc9c>
   1cc04:	b	1cd9c <__assert_fail@plt+0xbcb4>
   1cc08:	b	1cc0c <__assert_fail@plt+0xbb24>
   1cc0c:	ldr	r0, [pc, #3584]	; 1da14 <__assert_fail@plt+0xc92c>
   1cc10:	ldr	r1, [fp, #8]
   1cc14:	cmp	r1, r0
   1cc18:	blt	1cc30 <__assert_fail@plt+0xbb48>
   1cc1c:	b	1cc3c <__assert_fail@plt+0xbb54>
   1cc20:	ldr	r0, [fp, #8]
   1cc24:	movw	r1, #0
   1cc28:	cmp	r1, r0
   1cc2c:	bge	1cc3c <__assert_fail@plt+0xbb54>
   1cc30:	movw	r0, #0
   1cc34:	str	r0, [fp, #-44]	; 0xffffffd4
   1cc38:	b	1cc54 <__assert_fail@plt+0xbb6c>
   1cc3c:	ldr	r0, [fp, #8]
   1cc40:	movw	r1, #0
   1cc44:	sub	r0, r1, r0
   1cc48:	movw	r1, #255	; 0xff
   1cc4c:	sdiv	r0, r1, r0
   1cc50:	str	r0, [fp, #-44]	; 0xffffffd4
   1cc54:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1cc58:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1cc5c:	mvn	r2, #0
   1cc60:	sub	r1, r2, r1
   1cc64:	cmp	r0, r1
   1cc68:	ble	1cd84 <__assert_fail@plt+0xbc9c>
   1cc6c:	b	1cd9c <__assert_fail@plt+0xbcb4>
   1cc70:	b	1cc74 <__assert_fail@plt+0xbb8c>
   1cc74:	b	1cccc <__assert_fail@plt+0xbbe4>
   1cc78:	b	1cccc <__assert_fail@plt+0xbbe4>
   1cc7c:	ldr	r0, [fp, #8]
   1cc80:	cmn	r0, #1
   1cc84:	bne	1cccc <__assert_fail@plt+0xbbe4>
   1cc88:	b	1cc8c <__assert_fail@plt+0xbba4>
   1cc8c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cc90:	add	r0, r0, #0
   1cc94:	movw	r1, #0
   1cc98:	cmp	r1, r0
   1cc9c:	blt	1cd84 <__assert_fail@plt+0xbc9c>
   1cca0:	b	1cd9c <__assert_fail@plt+0xbcb4>
   1cca4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cca8:	movw	r1, #0
   1ccac:	cmp	r1, r0
   1ccb0:	bge	1cd9c <__assert_fail@plt+0xbcb4>
   1ccb4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ccb8:	sub	r0, r0, #1
   1ccbc:	mvn	r1, #0
   1ccc0:	cmp	r1, r0
   1ccc4:	blt	1cd84 <__assert_fail@plt+0xbc9c>
   1ccc8:	b	1cd9c <__assert_fail@plt+0xbcb4>
   1cccc:	ldr	r0, [fp, #8]
   1ccd0:	movw	r1, #0
   1ccd4:	sdiv	r0, r1, r0
   1ccd8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1ccdc:	cmp	r0, r1
   1cce0:	blt	1cd84 <__assert_fail@plt+0xbc9c>
   1cce4:	b	1cd9c <__assert_fail@plt+0xbcb4>
   1cce8:	ldr	r0, [fp, #8]
   1ccec:	cmp	r0, #0
   1ccf0:	bne	1ccf8 <__assert_fail@plt+0xbc10>
   1ccf4:	b	1cd9c <__assert_fail@plt+0xbcb4>
   1ccf8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ccfc:	cmp	r0, #0
   1cd00:	bge	1cd6c <__assert_fail@plt+0xbc84>
   1cd04:	b	1cd08 <__assert_fail@plt+0xbc20>
   1cd08:	b	1cd50 <__assert_fail@plt+0xbc68>
   1cd0c:	b	1cd50 <__assert_fail@plt+0xbc68>
   1cd10:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cd14:	cmn	r0, #1
   1cd18:	bne	1cd50 <__assert_fail@plt+0xbc68>
   1cd1c:	b	1cd20 <__assert_fail@plt+0xbc38>
   1cd20:	ldr	r0, [fp, #8]
   1cd24:	add	r0, r0, #0
   1cd28:	movw	r1, #0
   1cd2c:	cmp	r1, r0
   1cd30:	blt	1cd84 <__assert_fail@plt+0xbc9c>
   1cd34:	b	1cd9c <__assert_fail@plt+0xbcb4>
   1cd38:	ldr	r0, [fp, #8]
   1cd3c:	sub	r0, r0, #1
   1cd40:	mvn	r1, #0
   1cd44:	cmp	r1, r0
   1cd48:	blt	1cd84 <__assert_fail@plt+0xbc9c>
   1cd4c:	b	1cd9c <__assert_fail@plt+0xbcb4>
   1cd50:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cd54:	movw	r1, #0
   1cd58:	sdiv	r0, r1, r0
   1cd5c:	ldr	r1, [fp, #8]
   1cd60:	cmp	r0, r1
   1cd64:	blt	1cd84 <__assert_fail@plt+0xbc9c>
   1cd68:	b	1cd9c <__assert_fail@plt+0xbcb4>
   1cd6c:	ldr	r0, [fp, #8]
   1cd70:	movw	r1, #255	; 0xff
   1cd74:	sdiv	r0, r1, r0
   1cd78:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1cd7c:	cmp	r0, r1
   1cd80:	bge	1cd9c <__assert_fail@plt+0xbcb4>
   1cd84:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cd88:	ldr	r1, [fp, #8]
   1cd8c:	mul	r0, r0, r1
   1cd90:	and	r0, r0, #255	; 0xff
   1cd94:	str	r0, [fp, #-28]	; 0xffffffe4
   1cd98:	b	1ddcc <__assert_fail@plt+0xcce4>
   1cd9c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cda0:	ldr	r1, [fp, #8]
   1cda4:	mul	r0, r0, r1
   1cda8:	and	r0, r0, #255	; 0xff
   1cdac:	str	r0, [fp, #-28]	; 0xffffffe4
   1cdb0:	b	1dddc <__assert_fail@plt+0xccf4>
   1cdb4:	b	1d18c <__assert_fail@plt+0xc0a4>
   1cdb8:	b	1cdbc <__assert_fail@plt+0xbcd4>
   1cdbc:	ldr	r0, [fp, #8]
   1cdc0:	cmp	r0, #0
   1cdc4:	bge	1ced8 <__assert_fail@plt+0xbdf0>
   1cdc8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cdcc:	cmp	r0, #0
   1cdd0:	bge	1ce5c <__assert_fail@plt+0xbd74>
   1cdd4:	b	1cdd8 <__assert_fail@plt+0xbcf0>
   1cdd8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cddc:	ldr	r1, [fp, #8]
   1cde0:	movw	r2, #32767	; 0x7fff
   1cde4:	sdiv	r1, r2, r1
   1cde8:	cmp	r0, r1
   1cdec:	blt	1cf78 <__assert_fail@plt+0xbe90>
   1cdf0:	b	1cf90 <__assert_fail@plt+0xbea8>
   1cdf4:	b	1cdf8 <__assert_fail@plt+0xbd10>
   1cdf8:	ldr	r0, [pc, #3092]	; 1da14 <__assert_fail@plt+0xc92c>
   1cdfc:	ldr	r1, [fp, #8]
   1ce00:	cmp	r1, r0
   1ce04:	blt	1ce1c <__assert_fail@plt+0xbd34>
   1ce08:	b	1ce28 <__assert_fail@plt+0xbd40>
   1ce0c:	ldr	r0, [fp, #8]
   1ce10:	movw	r1, #0
   1ce14:	cmp	r1, r0
   1ce18:	bge	1ce28 <__assert_fail@plt+0xbd40>
   1ce1c:	movw	r0, #0
   1ce20:	str	r0, [fp, #-48]	; 0xffffffd0
   1ce24:	b	1ce40 <__assert_fail@plt+0xbd58>
   1ce28:	ldr	r0, [fp, #8]
   1ce2c:	movw	r1, #0
   1ce30:	sub	r0, r1, r0
   1ce34:	movw	r1, #32767	; 0x7fff
   1ce38:	sdiv	r0, r1, r0
   1ce3c:	str	r0, [fp, #-48]	; 0xffffffd0
   1ce40:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1ce44:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1ce48:	mvn	r2, #0
   1ce4c:	sub	r1, r2, r1
   1ce50:	cmp	r0, r1
   1ce54:	ble	1cf78 <__assert_fail@plt+0xbe90>
   1ce58:	b	1cf90 <__assert_fail@plt+0xbea8>
   1ce5c:	b	1ce60 <__assert_fail@plt+0xbd78>
   1ce60:	b	1cebc <__assert_fail@plt+0xbdd4>
   1ce64:	b	1cebc <__assert_fail@plt+0xbdd4>
   1ce68:	ldr	r0, [fp, #8]
   1ce6c:	cmn	r0, #1
   1ce70:	bne	1cebc <__assert_fail@plt+0xbdd4>
   1ce74:	b	1ce78 <__assert_fail@plt+0xbd90>
   1ce78:	ldr	r0, [pc, #3928]	; 1ddd8 <__assert_fail@plt+0xccf0>
   1ce7c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1ce80:	add	r0, r1, r0
   1ce84:	movw	r1, #0
   1ce88:	cmp	r1, r0
   1ce8c:	blt	1cf78 <__assert_fail@plt+0xbe90>
   1ce90:	b	1cf90 <__assert_fail@plt+0xbea8>
   1ce94:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ce98:	movw	r1, #0
   1ce9c:	cmp	r1, r0
   1cea0:	bge	1cf90 <__assert_fail@plt+0xbea8>
   1cea4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cea8:	sub	r0, r0, #1
   1ceac:	movw	r1, #32767	; 0x7fff
   1ceb0:	cmp	r1, r0
   1ceb4:	blt	1cf78 <__assert_fail@plt+0xbe90>
   1ceb8:	b	1cf90 <__assert_fail@plt+0xbea8>
   1cebc:	ldr	r0, [pc, #3860]	; 1ddd8 <__assert_fail@plt+0xccf0>
   1cec0:	ldr	r1, [fp, #8]
   1cec4:	sdiv	r0, r0, r1
   1cec8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1cecc:	cmp	r0, r1
   1ced0:	blt	1cf78 <__assert_fail@plt+0xbe90>
   1ced4:	b	1cf90 <__assert_fail@plt+0xbea8>
   1ced8:	ldr	r0, [fp, #8]
   1cedc:	cmp	r0, #0
   1cee0:	bne	1cee8 <__assert_fail@plt+0xbe00>
   1cee4:	b	1cf90 <__assert_fail@plt+0xbea8>
   1cee8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ceec:	cmp	r0, #0
   1cef0:	bge	1cf60 <__assert_fail@plt+0xbe78>
   1cef4:	b	1cef8 <__assert_fail@plt+0xbe10>
   1cef8:	b	1cf44 <__assert_fail@plt+0xbe5c>
   1cefc:	b	1cf44 <__assert_fail@plt+0xbe5c>
   1cf00:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cf04:	cmn	r0, #1
   1cf08:	bne	1cf44 <__assert_fail@plt+0xbe5c>
   1cf0c:	b	1cf10 <__assert_fail@plt+0xbe28>
   1cf10:	ldr	r0, [pc, #3776]	; 1ddd8 <__assert_fail@plt+0xccf0>
   1cf14:	ldr	r1, [fp, #8]
   1cf18:	add	r0, r1, r0
   1cf1c:	movw	r1, #0
   1cf20:	cmp	r1, r0
   1cf24:	blt	1cf78 <__assert_fail@plt+0xbe90>
   1cf28:	b	1cf90 <__assert_fail@plt+0xbea8>
   1cf2c:	ldr	r0, [fp, #8]
   1cf30:	sub	r0, r0, #1
   1cf34:	movw	r1, #32767	; 0x7fff
   1cf38:	cmp	r1, r0
   1cf3c:	blt	1cf78 <__assert_fail@plt+0xbe90>
   1cf40:	b	1cf90 <__assert_fail@plt+0xbea8>
   1cf44:	ldr	r0, [pc, #3724]	; 1ddd8 <__assert_fail@plt+0xccf0>
   1cf48:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1cf4c:	sdiv	r0, r0, r1
   1cf50:	ldr	r1, [fp, #8]
   1cf54:	cmp	r0, r1
   1cf58:	blt	1cf78 <__assert_fail@plt+0xbe90>
   1cf5c:	b	1cf90 <__assert_fail@plt+0xbea8>
   1cf60:	ldr	r0, [fp, #8]
   1cf64:	movw	r1, #32767	; 0x7fff
   1cf68:	sdiv	r0, r1, r0
   1cf6c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1cf70:	cmp	r0, r1
   1cf74:	bge	1cf90 <__assert_fail@plt+0xbea8>
   1cf78:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cf7c:	ldr	r1, [fp, #8]
   1cf80:	mul	r0, r0, r1
   1cf84:	sxth	r0, r0
   1cf88:	str	r0, [fp, #-28]	; 0xffffffe4
   1cf8c:	b	1ddcc <__assert_fail@plt+0xcce4>
   1cf90:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cf94:	ldr	r1, [fp, #8]
   1cf98:	mul	r0, r0, r1
   1cf9c:	sxth	r0, r0
   1cfa0:	str	r0, [fp, #-28]	; 0xffffffe4
   1cfa4:	b	1dddc <__assert_fail@plt+0xccf4>
   1cfa8:	ldr	r0, [fp, #8]
   1cfac:	cmp	r0, #0
   1cfb0:	bge	1d0c0 <__assert_fail@plt+0xbfd8>
   1cfb4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cfb8:	cmp	r0, #0
   1cfbc:	bge	1d048 <__assert_fail@plt+0xbf60>
   1cfc0:	b	1cfc4 <__assert_fail@plt+0xbedc>
   1cfc4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cfc8:	ldr	r1, [fp, #8]
   1cfcc:	movw	r2, #65535	; 0xffff
   1cfd0:	sdiv	r1, r2, r1
   1cfd4:	cmp	r0, r1
   1cfd8:	blt	1d15c <__assert_fail@plt+0xc074>
   1cfdc:	b	1d174 <__assert_fail@plt+0xc08c>
   1cfe0:	b	1cfe4 <__assert_fail@plt+0xbefc>
   1cfe4:	ldr	r0, [pc, #2600]	; 1da14 <__assert_fail@plt+0xc92c>
   1cfe8:	ldr	r1, [fp, #8]
   1cfec:	cmp	r1, r0
   1cff0:	blt	1d008 <__assert_fail@plt+0xbf20>
   1cff4:	b	1d014 <__assert_fail@plt+0xbf2c>
   1cff8:	ldr	r0, [fp, #8]
   1cffc:	movw	r1, #0
   1d000:	cmp	r1, r0
   1d004:	bge	1d014 <__assert_fail@plt+0xbf2c>
   1d008:	movw	r0, #0
   1d00c:	str	r0, [fp, #-52]	; 0xffffffcc
   1d010:	b	1d02c <__assert_fail@plt+0xbf44>
   1d014:	ldr	r0, [fp, #8]
   1d018:	movw	r1, #0
   1d01c:	sub	r0, r1, r0
   1d020:	movw	r1, #65535	; 0xffff
   1d024:	sdiv	r0, r1, r0
   1d028:	str	r0, [fp, #-52]	; 0xffffffcc
   1d02c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1d030:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d034:	mvn	r2, #0
   1d038:	sub	r1, r2, r1
   1d03c:	cmp	r0, r1
   1d040:	ble	1d15c <__assert_fail@plt+0xc074>
   1d044:	b	1d174 <__assert_fail@plt+0xc08c>
   1d048:	b	1d04c <__assert_fail@plt+0xbf64>
   1d04c:	b	1d0a4 <__assert_fail@plt+0xbfbc>
   1d050:	b	1d0a4 <__assert_fail@plt+0xbfbc>
   1d054:	ldr	r0, [fp, #8]
   1d058:	cmn	r0, #1
   1d05c:	bne	1d0a4 <__assert_fail@plt+0xbfbc>
   1d060:	b	1d064 <__assert_fail@plt+0xbf7c>
   1d064:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d068:	add	r0, r0, #0
   1d06c:	movw	r1, #0
   1d070:	cmp	r1, r0
   1d074:	blt	1d15c <__assert_fail@plt+0xc074>
   1d078:	b	1d174 <__assert_fail@plt+0xc08c>
   1d07c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d080:	movw	r1, #0
   1d084:	cmp	r1, r0
   1d088:	bge	1d174 <__assert_fail@plt+0xc08c>
   1d08c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d090:	sub	r0, r0, #1
   1d094:	mvn	r1, #0
   1d098:	cmp	r1, r0
   1d09c:	blt	1d15c <__assert_fail@plt+0xc074>
   1d0a0:	b	1d174 <__assert_fail@plt+0xc08c>
   1d0a4:	ldr	r0, [fp, #8]
   1d0a8:	movw	r1, #0
   1d0ac:	sdiv	r0, r1, r0
   1d0b0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d0b4:	cmp	r0, r1
   1d0b8:	blt	1d15c <__assert_fail@plt+0xc074>
   1d0bc:	b	1d174 <__assert_fail@plt+0xc08c>
   1d0c0:	ldr	r0, [fp, #8]
   1d0c4:	cmp	r0, #0
   1d0c8:	bne	1d0d0 <__assert_fail@plt+0xbfe8>
   1d0cc:	b	1d174 <__assert_fail@plt+0xc08c>
   1d0d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d0d4:	cmp	r0, #0
   1d0d8:	bge	1d144 <__assert_fail@plt+0xc05c>
   1d0dc:	b	1d0e0 <__assert_fail@plt+0xbff8>
   1d0e0:	b	1d128 <__assert_fail@plt+0xc040>
   1d0e4:	b	1d128 <__assert_fail@plt+0xc040>
   1d0e8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d0ec:	cmn	r0, #1
   1d0f0:	bne	1d128 <__assert_fail@plt+0xc040>
   1d0f4:	b	1d0f8 <__assert_fail@plt+0xc010>
   1d0f8:	ldr	r0, [fp, #8]
   1d0fc:	add	r0, r0, #0
   1d100:	movw	r1, #0
   1d104:	cmp	r1, r0
   1d108:	blt	1d15c <__assert_fail@plt+0xc074>
   1d10c:	b	1d174 <__assert_fail@plt+0xc08c>
   1d110:	ldr	r0, [fp, #8]
   1d114:	sub	r0, r0, #1
   1d118:	mvn	r1, #0
   1d11c:	cmp	r1, r0
   1d120:	blt	1d15c <__assert_fail@plt+0xc074>
   1d124:	b	1d174 <__assert_fail@plt+0xc08c>
   1d128:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d12c:	movw	r1, #0
   1d130:	sdiv	r0, r1, r0
   1d134:	ldr	r1, [fp, #8]
   1d138:	cmp	r0, r1
   1d13c:	blt	1d15c <__assert_fail@plt+0xc074>
   1d140:	b	1d174 <__assert_fail@plt+0xc08c>
   1d144:	ldr	r0, [fp, #8]
   1d148:	movw	r1, #65535	; 0xffff
   1d14c:	sdiv	r0, r1, r0
   1d150:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d154:	cmp	r0, r1
   1d158:	bge	1d174 <__assert_fail@plt+0xc08c>
   1d15c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d160:	ldr	r1, [fp, #8]
   1d164:	mul	r0, r0, r1
   1d168:	uxth	r0, r0
   1d16c:	str	r0, [fp, #-28]	; 0xffffffe4
   1d170:	b	1ddcc <__assert_fail@plt+0xcce4>
   1d174:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d178:	ldr	r1, [fp, #8]
   1d17c:	mul	r0, r0, r1
   1d180:	uxth	r0, r0
   1d184:	str	r0, [fp, #-28]	; 0xffffffe4
   1d188:	b	1dddc <__assert_fail@plt+0xccf4>
   1d18c:	b	1d190 <__assert_fail@plt+0xc0a8>
   1d190:	b	1d194 <__assert_fail@plt+0xc0ac>
   1d194:	ldr	r0, [fp, #8]
   1d198:	cmp	r0, #0
   1d19c:	bge	1d2a0 <__assert_fail@plt+0xc1b8>
   1d1a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d1a4:	cmp	r0, #0
   1d1a8:	bge	1d234 <__assert_fail@plt+0xc14c>
   1d1ac:	b	1d1b0 <__assert_fail@plt+0xc0c8>
   1d1b0:	ldr	r0, [pc, #1992]	; 1d980 <__assert_fail@plt+0xc898>
   1d1b4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d1b8:	ldr	r2, [fp, #8]
   1d1bc:	sdiv	r0, r0, r2
   1d1c0:	cmp	r1, r0
   1d1c4:	blt	1d330 <__assert_fail@plt+0xc248>
   1d1c8:	b	1d344 <__assert_fail@plt+0xc25c>
   1d1cc:	b	1d1d0 <__assert_fail@plt+0xc0e8>
   1d1d0:	ldr	r0, [pc, #2108]	; 1da14 <__assert_fail@plt+0xc92c>
   1d1d4:	ldr	r1, [fp, #8]
   1d1d8:	cmp	r1, r0
   1d1dc:	blt	1d1f4 <__assert_fail@plt+0xc10c>
   1d1e0:	b	1d200 <__assert_fail@plt+0xc118>
   1d1e4:	ldr	r0, [fp, #8]
   1d1e8:	movw	r1, #0
   1d1ec:	cmp	r1, r0
   1d1f0:	bge	1d200 <__assert_fail@plt+0xc118>
   1d1f4:	movw	r0, #0
   1d1f8:	str	r0, [fp, #-56]	; 0xffffffc8
   1d1fc:	b	1d218 <__assert_fail@plt+0xc130>
   1d200:	ldr	r0, [pc, #1912]	; 1d980 <__assert_fail@plt+0xc898>
   1d204:	ldr	r1, [fp, #8]
   1d208:	movw	r2, #0
   1d20c:	sub	r1, r2, r1
   1d210:	sdiv	r0, r0, r1
   1d214:	str	r0, [fp, #-56]	; 0xffffffc8
   1d218:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1d21c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d220:	mvn	r2, #0
   1d224:	sub	r1, r2, r1
   1d228:	cmp	r0, r1
   1d22c:	ble	1d330 <__assert_fail@plt+0xc248>
   1d230:	b	1d344 <__assert_fail@plt+0xc25c>
   1d234:	ldr	r0, [fp, #8]
   1d238:	cmn	r0, #1
   1d23c:	bne	1d284 <__assert_fail@plt+0xc19c>
   1d240:	b	1d244 <__assert_fail@plt+0xc15c>
   1d244:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d248:	add	r0, r0, #-2147483648	; 0x80000000
   1d24c:	movw	r1, #0
   1d250:	cmp	r1, r0
   1d254:	blt	1d330 <__assert_fail@plt+0xc248>
   1d258:	b	1d344 <__assert_fail@plt+0xc25c>
   1d25c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d260:	movw	r1, #0
   1d264:	cmp	r1, r0
   1d268:	bge	1d344 <__assert_fail@plt+0xc25c>
   1d26c:	ldr	r0, [pc, #1804]	; 1d980 <__assert_fail@plt+0xc898>
   1d270:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d274:	sub	r1, r1, #1
   1d278:	cmp	r0, r1
   1d27c:	blt	1d330 <__assert_fail@plt+0xc248>
   1d280:	b	1d344 <__assert_fail@plt+0xc25c>
   1d284:	ldr	r0, [pc, #4072]	; 1e274 <__assert_fail@plt+0xd18c>
   1d288:	ldr	r1, [fp, #8]
   1d28c:	sdiv	r0, r0, r1
   1d290:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d294:	cmp	r0, r1
   1d298:	blt	1d330 <__assert_fail@plt+0xc248>
   1d29c:	b	1d344 <__assert_fail@plt+0xc25c>
   1d2a0:	ldr	r0, [fp, #8]
   1d2a4:	cmp	r0, #0
   1d2a8:	bne	1d2b0 <__assert_fail@plt+0xc1c8>
   1d2ac:	b	1d344 <__assert_fail@plt+0xc25c>
   1d2b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d2b4:	cmp	r0, #0
   1d2b8:	bge	1d318 <__assert_fail@plt+0xc230>
   1d2bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d2c0:	cmn	r0, #1
   1d2c4:	bne	1d2fc <__assert_fail@plt+0xc214>
   1d2c8:	b	1d2cc <__assert_fail@plt+0xc1e4>
   1d2cc:	ldr	r0, [fp, #8]
   1d2d0:	add	r0, r0, #-2147483648	; 0x80000000
   1d2d4:	movw	r1, #0
   1d2d8:	cmp	r1, r0
   1d2dc:	blt	1d330 <__assert_fail@plt+0xc248>
   1d2e0:	b	1d344 <__assert_fail@plt+0xc25c>
   1d2e4:	ldr	r0, [pc, #1684]	; 1d980 <__assert_fail@plt+0xc898>
   1d2e8:	ldr	r1, [fp, #8]
   1d2ec:	sub	r1, r1, #1
   1d2f0:	cmp	r0, r1
   1d2f4:	blt	1d330 <__assert_fail@plt+0xc248>
   1d2f8:	b	1d344 <__assert_fail@plt+0xc25c>
   1d2fc:	ldr	r0, [pc, #3952]	; 1e274 <__assert_fail@plt+0xd18c>
   1d300:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d304:	sdiv	r0, r0, r1
   1d308:	ldr	r1, [fp, #8]
   1d30c:	cmp	r0, r1
   1d310:	blt	1d330 <__assert_fail@plt+0xc248>
   1d314:	b	1d344 <__assert_fail@plt+0xc25c>
   1d318:	ldr	r0, [pc, #1632]	; 1d980 <__assert_fail@plt+0xc898>
   1d31c:	ldr	r1, [fp, #8]
   1d320:	sdiv	r0, r0, r1
   1d324:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d328:	cmp	r0, r1
   1d32c:	bge	1d344 <__assert_fail@plt+0xc25c>
   1d330:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d334:	ldr	r1, [fp, #8]
   1d338:	mul	r0, r0, r1
   1d33c:	str	r0, [fp, #-28]	; 0xffffffe4
   1d340:	b	1ddcc <__assert_fail@plt+0xcce4>
   1d344:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d348:	ldr	r1, [fp, #8]
   1d34c:	mul	r0, r0, r1
   1d350:	str	r0, [fp, #-28]	; 0xffffffe4
   1d354:	b	1dddc <__assert_fail@plt+0xccf4>
   1d358:	ldr	r0, [fp, #8]
   1d35c:	cmp	r0, #0
   1d360:	bge	1d470 <__assert_fail@plt+0xc388>
   1d364:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d368:	cmp	r0, #0
   1d36c:	bge	1d3f8 <__assert_fail@plt+0xc310>
   1d370:	b	1d390 <__assert_fail@plt+0xc2a8>
   1d374:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d378:	ldr	r1, [fp, #8]
   1d37c:	mvn	r2, #0
   1d380:	udiv	r1, r2, r1
   1d384:	cmp	r0, r1
   1d388:	bcc	1d50c <__assert_fail@plt+0xc424>
   1d38c:	b	1d520 <__assert_fail@plt+0xc438>
   1d390:	b	1d394 <__assert_fail@plt+0xc2ac>
   1d394:	ldr	r0, [pc, #1656]	; 1da14 <__assert_fail@plt+0xc92c>
   1d398:	ldr	r1, [fp, #8]
   1d39c:	cmp	r1, r0
   1d3a0:	blt	1d3b8 <__assert_fail@plt+0xc2d0>
   1d3a4:	b	1d3c4 <__assert_fail@plt+0xc2dc>
   1d3a8:	ldr	r0, [fp, #8]
   1d3ac:	movw	r1, #0
   1d3b0:	cmp	r1, r0
   1d3b4:	bge	1d3c4 <__assert_fail@plt+0xc2dc>
   1d3b8:	movw	r0, #1
   1d3bc:	str	r0, [fp, #-60]	; 0xffffffc4
   1d3c0:	b	1d3dc <__assert_fail@plt+0xc2f4>
   1d3c4:	ldr	r0, [fp, #8]
   1d3c8:	movw	r1, #0
   1d3cc:	sub	r0, r1, r0
   1d3d0:	mvn	r1, #0
   1d3d4:	udiv	r0, r1, r0
   1d3d8:	str	r0, [fp, #-60]	; 0xffffffc4
   1d3dc:	ldr	r0, [fp, #-60]	; 0xffffffc4
   1d3e0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d3e4:	mvn	r2, #0
   1d3e8:	sub	r1, r2, r1
   1d3ec:	cmp	r0, r1
   1d3f0:	bls	1d50c <__assert_fail@plt+0xc424>
   1d3f4:	b	1d520 <__assert_fail@plt+0xc438>
   1d3f8:	b	1d3fc <__assert_fail@plt+0xc314>
   1d3fc:	b	1d454 <__assert_fail@plt+0xc36c>
   1d400:	b	1d454 <__assert_fail@plt+0xc36c>
   1d404:	ldr	r0, [fp, #8]
   1d408:	cmn	r0, #1
   1d40c:	bne	1d454 <__assert_fail@plt+0xc36c>
   1d410:	b	1d414 <__assert_fail@plt+0xc32c>
   1d414:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d418:	add	r0, r0, #0
   1d41c:	movw	r1, #0
   1d420:	cmp	r1, r0
   1d424:	blt	1d50c <__assert_fail@plt+0xc424>
   1d428:	b	1d520 <__assert_fail@plt+0xc438>
   1d42c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d430:	movw	r1, #0
   1d434:	cmp	r1, r0
   1d438:	bge	1d520 <__assert_fail@plt+0xc438>
   1d43c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d440:	sub	r0, r0, #1
   1d444:	mvn	r1, #0
   1d448:	cmp	r1, r0
   1d44c:	blt	1d50c <__assert_fail@plt+0xc424>
   1d450:	b	1d520 <__assert_fail@plt+0xc438>
   1d454:	ldr	r0, [fp, #8]
   1d458:	movw	r1, #0
   1d45c:	sdiv	r0, r1, r0
   1d460:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d464:	cmp	r0, r1
   1d468:	blt	1d50c <__assert_fail@plt+0xc424>
   1d46c:	b	1d520 <__assert_fail@plt+0xc438>
   1d470:	ldr	r0, [fp, #8]
   1d474:	cmp	r0, #0
   1d478:	bne	1d480 <__assert_fail@plt+0xc398>
   1d47c:	b	1d520 <__assert_fail@plt+0xc438>
   1d480:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d484:	cmp	r0, #0
   1d488:	bge	1d4f4 <__assert_fail@plt+0xc40c>
   1d48c:	b	1d490 <__assert_fail@plt+0xc3a8>
   1d490:	b	1d4d8 <__assert_fail@plt+0xc3f0>
   1d494:	b	1d4d8 <__assert_fail@plt+0xc3f0>
   1d498:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d49c:	cmn	r0, #1
   1d4a0:	bne	1d4d8 <__assert_fail@plt+0xc3f0>
   1d4a4:	b	1d4a8 <__assert_fail@plt+0xc3c0>
   1d4a8:	ldr	r0, [fp, #8]
   1d4ac:	add	r0, r0, #0
   1d4b0:	movw	r1, #0
   1d4b4:	cmp	r1, r0
   1d4b8:	blt	1d50c <__assert_fail@plt+0xc424>
   1d4bc:	b	1d520 <__assert_fail@plt+0xc438>
   1d4c0:	ldr	r0, [fp, #8]
   1d4c4:	sub	r0, r0, #1
   1d4c8:	mvn	r1, #0
   1d4cc:	cmp	r1, r0
   1d4d0:	blt	1d50c <__assert_fail@plt+0xc424>
   1d4d4:	b	1d520 <__assert_fail@plt+0xc438>
   1d4d8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d4dc:	movw	r1, #0
   1d4e0:	sdiv	r0, r1, r0
   1d4e4:	ldr	r1, [fp, #8]
   1d4e8:	cmp	r0, r1
   1d4ec:	blt	1d50c <__assert_fail@plt+0xc424>
   1d4f0:	b	1d520 <__assert_fail@plt+0xc438>
   1d4f4:	ldr	r0, [fp, #8]
   1d4f8:	mvn	r1, #0
   1d4fc:	udiv	r0, r1, r0
   1d500:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d504:	cmp	r0, r1
   1d508:	bcs	1d520 <__assert_fail@plt+0xc438>
   1d50c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d510:	ldr	r1, [fp, #8]
   1d514:	mul	r0, r0, r1
   1d518:	str	r0, [fp, #-28]	; 0xffffffe4
   1d51c:	b	1ddcc <__assert_fail@plt+0xcce4>
   1d520:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d524:	ldr	r1, [fp, #8]
   1d528:	mul	r0, r0, r1
   1d52c:	str	r0, [fp, #-28]	; 0xffffffe4
   1d530:	b	1dddc <__assert_fail@plt+0xccf4>
   1d534:	b	1d538 <__assert_fail@plt+0xc450>
   1d538:	b	1d53c <__assert_fail@plt+0xc454>
   1d53c:	ldr	r0, [fp, #8]
   1d540:	cmp	r0, #0
   1d544:	bge	1d648 <__assert_fail@plt+0xc560>
   1d548:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d54c:	cmp	r0, #0
   1d550:	bge	1d5dc <__assert_fail@plt+0xc4f4>
   1d554:	b	1d558 <__assert_fail@plt+0xc470>
   1d558:	ldr	r0, [pc, #1056]	; 1d980 <__assert_fail@plt+0xc898>
   1d55c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d560:	ldr	r2, [fp, #8]
   1d564:	sdiv	r0, r0, r2
   1d568:	cmp	r1, r0
   1d56c:	blt	1d6d8 <__assert_fail@plt+0xc5f0>
   1d570:	b	1d6ec <__assert_fail@plt+0xc604>
   1d574:	b	1d578 <__assert_fail@plt+0xc490>
   1d578:	ldr	r0, [pc, #1172]	; 1da14 <__assert_fail@plt+0xc92c>
   1d57c:	ldr	r1, [fp, #8]
   1d580:	cmp	r1, r0
   1d584:	blt	1d59c <__assert_fail@plt+0xc4b4>
   1d588:	b	1d5a8 <__assert_fail@plt+0xc4c0>
   1d58c:	ldr	r0, [fp, #8]
   1d590:	movw	r1, #0
   1d594:	cmp	r1, r0
   1d598:	bge	1d5a8 <__assert_fail@plt+0xc4c0>
   1d59c:	movw	r0, #0
   1d5a0:	str	r0, [fp, #-64]	; 0xffffffc0
   1d5a4:	b	1d5c0 <__assert_fail@plt+0xc4d8>
   1d5a8:	ldr	r0, [pc, #976]	; 1d980 <__assert_fail@plt+0xc898>
   1d5ac:	ldr	r1, [fp, #8]
   1d5b0:	movw	r2, #0
   1d5b4:	sub	r1, r2, r1
   1d5b8:	sdiv	r0, r0, r1
   1d5bc:	str	r0, [fp, #-64]	; 0xffffffc0
   1d5c0:	ldr	r0, [fp, #-64]	; 0xffffffc0
   1d5c4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d5c8:	mvn	r2, #0
   1d5cc:	sub	r1, r2, r1
   1d5d0:	cmp	r0, r1
   1d5d4:	ble	1d6d8 <__assert_fail@plt+0xc5f0>
   1d5d8:	b	1d6ec <__assert_fail@plt+0xc604>
   1d5dc:	ldr	r0, [fp, #8]
   1d5e0:	cmn	r0, #1
   1d5e4:	bne	1d62c <__assert_fail@plt+0xc544>
   1d5e8:	b	1d5ec <__assert_fail@plt+0xc504>
   1d5ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d5f0:	add	r0, r0, #-2147483648	; 0x80000000
   1d5f4:	movw	r1, #0
   1d5f8:	cmp	r1, r0
   1d5fc:	blt	1d6d8 <__assert_fail@plt+0xc5f0>
   1d600:	b	1d6ec <__assert_fail@plt+0xc604>
   1d604:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d608:	movw	r1, #0
   1d60c:	cmp	r1, r0
   1d610:	bge	1d6ec <__assert_fail@plt+0xc604>
   1d614:	ldr	r0, [pc, #868]	; 1d980 <__assert_fail@plt+0xc898>
   1d618:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d61c:	sub	r1, r1, #1
   1d620:	cmp	r0, r1
   1d624:	blt	1d6d8 <__assert_fail@plt+0xc5f0>
   1d628:	b	1d6ec <__assert_fail@plt+0xc604>
   1d62c:	ldr	r0, [pc, #3136]	; 1e274 <__assert_fail@plt+0xd18c>
   1d630:	ldr	r1, [fp, #8]
   1d634:	sdiv	r0, r0, r1
   1d638:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d63c:	cmp	r0, r1
   1d640:	blt	1d6d8 <__assert_fail@plt+0xc5f0>
   1d644:	b	1d6ec <__assert_fail@plt+0xc604>
   1d648:	ldr	r0, [fp, #8]
   1d64c:	cmp	r0, #0
   1d650:	bne	1d658 <__assert_fail@plt+0xc570>
   1d654:	b	1d6ec <__assert_fail@plt+0xc604>
   1d658:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d65c:	cmp	r0, #0
   1d660:	bge	1d6c0 <__assert_fail@plt+0xc5d8>
   1d664:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d668:	cmn	r0, #1
   1d66c:	bne	1d6a4 <__assert_fail@plt+0xc5bc>
   1d670:	b	1d674 <__assert_fail@plt+0xc58c>
   1d674:	ldr	r0, [fp, #8]
   1d678:	add	r0, r0, #-2147483648	; 0x80000000
   1d67c:	movw	r1, #0
   1d680:	cmp	r1, r0
   1d684:	blt	1d6d8 <__assert_fail@plt+0xc5f0>
   1d688:	b	1d6ec <__assert_fail@plt+0xc604>
   1d68c:	ldr	r0, [pc, #748]	; 1d980 <__assert_fail@plt+0xc898>
   1d690:	ldr	r1, [fp, #8]
   1d694:	sub	r1, r1, #1
   1d698:	cmp	r0, r1
   1d69c:	blt	1d6d8 <__assert_fail@plt+0xc5f0>
   1d6a0:	b	1d6ec <__assert_fail@plt+0xc604>
   1d6a4:	ldr	r0, [pc, #3016]	; 1e274 <__assert_fail@plt+0xd18c>
   1d6a8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d6ac:	sdiv	r0, r0, r1
   1d6b0:	ldr	r1, [fp, #8]
   1d6b4:	cmp	r0, r1
   1d6b8:	blt	1d6d8 <__assert_fail@plt+0xc5f0>
   1d6bc:	b	1d6ec <__assert_fail@plt+0xc604>
   1d6c0:	ldr	r0, [pc, #696]	; 1d980 <__assert_fail@plt+0xc898>
   1d6c4:	ldr	r1, [fp, #8]
   1d6c8:	sdiv	r0, r0, r1
   1d6cc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d6d0:	cmp	r0, r1
   1d6d4:	bge	1d6ec <__assert_fail@plt+0xc604>
   1d6d8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d6dc:	ldr	r1, [fp, #8]
   1d6e0:	mul	r0, r0, r1
   1d6e4:	str	r0, [fp, #-28]	; 0xffffffe4
   1d6e8:	b	1ddcc <__assert_fail@plt+0xcce4>
   1d6ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d6f0:	ldr	r1, [fp, #8]
   1d6f4:	mul	r0, r0, r1
   1d6f8:	str	r0, [fp, #-28]	; 0xffffffe4
   1d6fc:	b	1dddc <__assert_fail@plt+0xccf4>
   1d700:	ldr	r0, [fp, #8]
   1d704:	cmp	r0, #0
   1d708:	bge	1d818 <__assert_fail@plt+0xc730>
   1d70c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d710:	cmp	r0, #0
   1d714:	bge	1d7a0 <__assert_fail@plt+0xc6b8>
   1d718:	b	1d738 <__assert_fail@plt+0xc650>
   1d71c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d720:	ldr	r1, [fp, #8]
   1d724:	mvn	r2, #0
   1d728:	udiv	r1, r2, r1
   1d72c:	cmp	r0, r1
   1d730:	bcc	1d8b4 <__assert_fail@plt+0xc7cc>
   1d734:	b	1d8c8 <__assert_fail@plt+0xc7e0>
   1d738:	b	1d73c <__assert_fail@plt+0xc654>
   1d73c:	ldr	r0, [pc, #720]	; 1da14 <__assert_fail@plt+0xc92c>
   1d740:	ldr	r1, [fp, #8]
   1d744:	cmp	r1, r0
   1d748:	blt	1d760 <__assert_fail@plt+0xc678>
   1d74c:	b	1d76c <__assert_fail@plt+0xc684>
   1d750:	ldr	r0, [fp, #8]
   1d754:	movw	r1, #0
   1d758:	cmp	r1, r0
   1d75c:	bge	1d76c <__assert_fail@plt+0xc684>
   1d760:	movw	r0, #1
   1d764:	str	r0, [fp, #-68]	; 0xffffffbc
   1d768:	b	1d784 <__assert_fail@plt+0xc69c>
   1d76c:	ldr	r0, [fp, #8]
   1d770:	movw	r1, #0
   1d774:	sub	r0, r1, r0
   1d778:	mvn	r1, #0
   1d77c:	udiv	r0, r1, r0
   1d780:	str	r0, [fp, #-68]	; 0xffffffbc
   1d784:	ldr	r0, [fp, #-68]	; 0xffffffbc
   1d788:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d78c:	mvn	r2, #0
   1d790:	sub	r1, r2, r1
   1d794:	cmp	r0, r1
   1d798:	bls	1d8b4 <__assert_fail@plt+0xc7cc>
   1d79c:	b	1d8c8 <__assert_fail@plt+0xc7e0>
   1d7a0:	b	1d7a4 <__assert_fail@plt+0xc6bc>
   1d7a4:	b	1d7fc <__assert_fail@plt+0xc714>
   1d7a8:	b	1d7fc <__assert_fail@plt+0xc714>
   1d7ac:	ldr	r0, [fp, #8]
   1d7b0:	cmn	r0, #1
   1d7b4:	bne	1d7fc <__assert_fail@plt+0xc714>
   1d7b8:	b	1d7bc <__assert_fail@plt+0xc6d4>
   1d7bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d7c0:	add	r0, r0, #0
   1d7c4:	movw	r1, #0
   1d7c8:	cmp	r1, r0
   1d7cc:	blt	1d8b4 <__assert_fail@plt+0xc7cc>
   1d7d0:	b	1d8c8 <__assert_fail@plt+0xc7e0>
   1d7d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d7d8:	movw	r1, #0
   1d7dc:	cmp	r1, r0
   1d7e0:	bge	1d8c8 <__assert_fail@plt+0xc7e0>
   1d7e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d7e8:	sub	r0, r0, #1
   1d7ec:	mvn	r1, #0
   1d7f0:	cmp	r1, r0
   1d7f4:	blt	1d8b4 <__assert_fail@plt+0xc7cc>
   1d7f8:	b	1d8c8 <__assert_fail@plt+0xc7e0>
   1d7fc:	ldr	r0, [fp, #8]
   1d800:	movw	r1, #0
   1d804:	sdiv	r0, r1, r0
   1d808:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d80c:	cmp	r0, r1
   1d810:	blt	1d8b4 <__assert_fail@plt+0xc7cc>
   1d814:	b	1d8c8 <__assert_fail@plt+0xc7e0>
   1d818:	ldr	r0, [fp, #8]
   1d81c:	cmp	r0, #0
   1d820:	bne	1d828 <__assert_fail@plt+0xc740>
   1d824:	b	1d8c8 <__assert_fail@plt+0xc7e0>
   1d828:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d82c:	cmp	r0, #0
   1d830:	bge	1d89c <__assert_fail@plt+0xc7b4>
   1d834:	b	1d838 <__assert_fail@plt+0xc750>
   1d838:	b	1d880 <__assert_fail@plt+0xc798>
   1d83c:	b	1d880 <__assert_fail@plt+0xc798>
   1d840:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d844:	cmn	r0, #1
   1d848:	bne	1d880 <__assert_fail@plt+0xc798>
   1d84c:	b	1d850 <__assert_fail@plt+0xc768>
   1d850:	ldr	r0, [fp, #8]
   1d854:	add	r0, r0, #0
   1d858:	movw	r1, #0
   1d85c:	cmp	r1, r0
   1d860:	blt	1d8b4 <__assert_fail@plt+0xc7cc>
   1d864:	b	1d8c8 <__assert_fail@plt+0xc7e0>
   1d868:	ldr	r0, [fp, #8]
   1d86c:	sub	r0, r0, #1
   1d870:	mvn	r1, #0
   1d874:	cmp	r1, r0
   1d878:	blt	1d8b4 <__assert_fail@plt+0xc7cc>
   1d87c:	b	1d8c8 <__assert_fail@plt+0xc7e0>
   1d880:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d884:	movw	r1, #0
   1d888:	sdiv	r0, r1, r0
   1d88c:	ldr	r1, [fp, #8]
   1d890:	cmp	r0, r1
   1d894:	blt	1d8b4 <__assert_fail@plt+0xc7cc>
   1d898:	b	1d8c8 <__assert_fail@plt+0xc7e0>
   1d89c:	ldr	r0, [fp, #8]
   1d8a0:	mvn	r1, #0
   1d8a4:	udiv	r0, r1, r0
   1d8a8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d8ac:	cmp	r0, r1
   1d8b0:	bcs	1d8c8 <__assert_fail@plt+0xc7e0>
   1d8b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d8b8:	ldr	r1, [fp, #8]
   1d8bc:	mul	r0, r0, r1
   1d8c0:	str	r0, [fp, #-28]	; 0xffffffe4
   1d8c4:	b	1ddcc <__assert_fail@plt+0xcce4>
   1d8c8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d8cc:	ldr	r1, [fp, #8]
   1d8d0:	mul	r0, r0, r1
   1d8d4:	str	r0, [fp, #-28]	; 0xffffffe4
   1d8d8:	b	1dddc <__assert_fail@plt+0xccf4>
   1d8dc:	b	1d8e0 <__assert_fail@plt+0xc7f8>
   1d8e0:	ldr	r0, [fp, #8]
   1d8e4:	cmp	r0, #0
   1d8e8:	bge	1da78 <__assert_fail@plt+0xc990>
   1d8ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d8f0:	cmp	r0, #0
   1d8f4:	bge	1d9e0 <__assert_fail@plt+0xc8f8>
   1d8f8:	b	1d8fc <__assert_fail@plt+0xc814>
   1d8fc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d900:	ldr	r1, [fp, #8]
   1d904:	asr	r3, r1, #31
   1d908:	mvn	r2, #0
   1d90c:	mvn	ip, #-2147483648	; 0x80000000
   1d910:	str	r0, [fp, #-72]	; 0xffffffb8
   1d914:	mov	r0, r2
   1d918:	str	r1, [fp, #-76]	; 0xffffffb4
   1d91c:	mov	r1, ip
   1d920:	ldr	r2, [fp, #-76]	; 0xffffffb4
   1d924:	bl	21eb4 <__assert_fail@plt+0x10dcc>
   1d928:	ldr	r2, [fp, #-72]	; 0xffffffb8
   1d92c:	subs	r0, r2, r0
   1d930:	rscs	r1, r1, r2, asr #31
   1d934:	str	r0, [fp, #-80]	; 0xffffffb0
   1d938:	str	r1, [fp, #-84]	; 0xffffffac
   1d93c:	blt	1db58 <__assert_fail@plt+0xca70>
   1d940:	b	1db6c <__assert_fail@plt+0xca84>
   1d944:	b	1d948 <__assert_fail@plt+0xc860>
   1d948:	ldr	r0, [pc, #196]	; 1da14 <__assert_fail@plt+0xc92c>
   1d94c:	ldr	r1, [fp, #8]
   1d950:	cmp	r1, r0
   1d954:	blt	1d96c <__assert_fail@plt+0xc884>
   1d958:	b	1d984 <__assert_fail@plt+0xc89c>
   1d95c:	ldr	r0, [fp, #8]
   1d960:	movw	r1, #0
   1d964:	cmp	r1, r0
   1d968:	bge	1d984 <__assert_fail@plt+0xc89c>
   1d96c:	mov	r0, #0
   1d970:	mvn	r1, #0
   1d974:	str	r1, [fp, #-88]	; 0xffffffa8
   1d978:	str	r0, [fp, #-92]	; 0xffffffa4
   1d97c:	b	1d9b8 <__assert_fail@plt+0xc8d0>
   1d980:	svcvc	0x00ffffff
   1d984:	ldr	r0, [fp, #8]
   1d988:	rsb	r0, r0, #0
   1d98c:	asr	r3, r0, #31
   1d990:	mvn	r1, #0
   1d994:	mvn	r2, #-2147483648	; 0x80000000
   1d998:	str	r0, [fp, #-96]	; 0xffffffa0
   1d99c:	mov	r0, r1
   1d9a0:	mov	r1, r2
   1d9a4:	ldr	r2, [fp, #-96]	; 0xffffffa0
   1d9a8:	bl	21eb4 <__assert_fail@plt+0x10dcc>
   1d9ac:	str	r0, [fp, #-88]	; 0xffffffa8
   1d9b0:	str	r1, [fp, #-92]	; 0xffffffa4
   1d9b4:	b	1d9b8 <__assert_fail@plt+0xc8d0>
   1d9b8:	ldr	r0, [fp, #-92]	; 0xffffffa4
   1d9bc:	ldr	r1, [fp, #-88]	; 0xffffffa8
   1d9c0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1d9c4:	mvn	r2, r2
   1d9c8:	subs	r1, r2, r1
   1d9cc:	rscs	r0, r0, r2, asr #31
   1d9d0:	str	r1, [fp, #-100]	; 0xffffff9c
   1d9d4:	str	r0, [fp, #-104]	; 0xffffff98
   1d9d8:	bge	1db58 <__assert_fail@plt+0xca70>
   1d9dc:	b	1db6c <__assert_fail@plt+0xca84>
   1d9e0:	ldr	r0, [fp, #8]
   1d9e4:	cmn	r0, #1
   1d9e8:	bne	1da38 <__assert_fail@plt+0xc950>
   1d9ec:	b	1d9f0 <__assert_fail@plt+0xc908>
   1d9f0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d9f4:	mov	r1, #-2147483648	; 0x80000000
   1d9f8:	add	r1, r1, r0, asr #31
   1d9fc:	rsbs	r0, r0, #0
   1da00:	rscs	r1, r1, #0
   1da04:	str	r0, [fp, #-108]	; 0xffffff94
   1da08:	str	r1, [fp, #-112]	; 0xffffff90
   1da0c:	blt	1db58 <__assert_fail@plt+0xca70>
   1da10:	b	1db6c <__assert_fail@plt+0xca84>
   1da14:	andhi	r0, r0, r1
   1da18:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1da1c:	movw	r1, #0
   1da20:	cmp	r1, r0
   1da24:	bge	1db6c <__assert_fail@plt+0xca84>
   1da28:	mov	r0, #0
   1da2c:	cmp	r0, #0
   1da30:	bne	1db58 <__assert_fail@plt+0xca70>
   1da34:	b	1db6c <__assert_fail@plt+0xca84>
   1da38:	ldr	r0, [fp, #8]
   1da3c:	asr	r3, r0, #31
   1da40:	mov	r1, #0
   1da44:	mov	r2, #-2147483648	; 0x80000000
   1da48:	str	r0, [fp, #-116]	; 0xffffff8c
   1da4c:	mov	r0, r1
   1da50:	mov	r1, r2
   1da54:	ldr	r2, [fp, #-116]	; 0xffffff8c
   1da58:	bl	21eb4 <__assert_fail@plt+0x10dcc>
   1da5c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1da60:	subs	r0, r0, r2
   1da64:	sbcs	r1, r1, r2, asr #31
   1da68:	str	r0, [fp, #-120]	; 0xffffff88
   1da6c:	str	r1, [fp, #-124]	; 0xffffff84
   1da70:	blt	1db58 <__assert_fail@plt+0xca70>
   1da74:	b	1db6c <__assert_fail@plt+0xca84>
   1da78:	ldr	r0, [fp, #8]
   1da7c:	cmp	r0, #0
   1da80:	bne	1da88 <__assert_fail@plt+0xc9a0>
   1da84:	b	1db6c <__assert_fail@plt+0xca84>
   1da88:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1da8c:	cmp	r0, #0
   1da90:	bge	1db18 <__assert_fail@plt+0xca30>
   1da94:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1da98:	cmn	r0, #1
   1da9c:	bne	1dad8 <__assert_fail@plt+0xc9f0>
   1daa0:	b	1daa4 <__assert_fail@plt+0xc9bc>
   1daa4:	ldr	r0, [fp, #8]
   1daa8:	mov	r1, #-2147483648	; 0x80000000
   1daac:	add	r1, r1, r0, asr #31
   1dab0:	rsbs	r0, r0, #0
   1dab4:	rscs	r1, r1, #0
   1dab8:	str	r0, [fp, #-128]	; 0xffffff80
   1dabc:	str	r1, [fp, #-132]	; 0xffffff7c
   1dac0:	blt	1db58 <__assert_fail@plt+0xca70>
   1dac4:	b	1db6c <__assert_fail@plt+0xca84>
   1dac8:	mov	r0, #0
   1dacc:	cmp	r0, #0
   1dad0:	bne	1db58 <__assert_fail@plt+0xca70>
   1dad4:	b	1db6c <__assert_fail@plt+0xca84>
   1dad8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1dadc:	asr	r3, r0, #31
   1dae0:	mov	r1, #0
   1dae4:	mov	r2, #-2147483648	; 0x80000000
   1dae8:	str	r0, [fp, #-136]	; 0xffffff78
   1daec:	mov	r0, r1
   1daf0:	mov	r1, r2
   1daf4:	ldr	r2, [fp, #-136]	; 0xffffff78
   1daf8:	bl	21eb4 <__assert_fail@plt+0x10dcc>
   1dafc:	ldr	r2, [fp, #8]
   1db00:	subs	r0, r0, r2
   1db04:	sbcs	r1, r1, r2, asr #31
   1db08:	str	r0, [fp, #-140]	; 0xffffff74
   1db0c:	str	r1, [fp, #-144]	; 0xffffff70
   1db10:	blt	1db58 <__assert_fail@plt+0xca70>
   1db14:	b	1db6c <__assert_fail@plt+0xca84>
   1db18:	ldr	r0, [fp, #8]
   1db1c:	asr	r3, r0, #31
   1db20:	mvn	r1, #0
   1db24:	mvn	r2, #-2147483648	; 0x80000000
   1db28:	str	r0, [fp, #-148]	; 0xffffff6c
   1db2c:	mov	r0, r1
   1db30:	mov	r1, r2
   1db34:	ldr	r2, [fp, #-148]	; 0xffffff6c
   1db38:	bl	21eb4 <__assert_fail@plt+0x10dcc>
   1db3c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1db40:	subs	r0, r0, r2
   1db44:	sbcs	r1, r1, r2, asr #31
   1db48:	str	r0, [fp, #-152]	; 0xffffff68
   1db4c:	str	r1, [fp, #-156]	; 0xffffff64
   1db50:	bge	1db6c <__assert_fail@plt+0xca84>
   1db54:	b	1db58 <__assert_fail@plt+0xca70>
   1db58:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1db5c:	ldr	r1, [fp, #8]
   1db60:	mul	r0, r0, r1
   1db64:	str	r0, [fp, #-28]	; 0xffffffe4
   1db68:	b	1ddcc <__assert_fail@plt+0xcce4>
   1db6c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1db70:	ldr	r1, [fp, #8]
   1db74:	mul	r0, r0, r1
   1db78:	str	r0, [fp, #-28]	; 0xffffffe4
   1db7c:	b	1dddc <__assert_fail@plt+0xccf4>
   1db80:	ldr	r0, [fp, #8]
   1db84:	cmp	r0, #0
   1db88:	bge	1dce8 <__assert_fail@plt+0xcc00>
   1db8c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1db90:	cmp	r0, #0
   1db94:	bge	1dc70 <__assert_fail@plt+0xcb88>
   1db98:	b	1dbe0 <__assert_fail@plt+0xcaf8>
   1db9c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1dba0:	ldr	r1, [fp, #8]
   1dba4:	asr	r3, r1, #31
   1dba8:	mvn	r2, #0
   1dbac:	str	r0, [fp, #-160]	; 0xffffff60
   1dbb0:	mov	r0, r2
   1dbb4:	str	r1, [fp, #-164]	; 0xffffff5c
   1dbb8:	mov	r1, r2
   1dbbc:	ldr	r2, [fp, #-164]	; 0xffffff5c
   1dbc0:	bl	21f88 <__assert_fail@plt+0x10ea0>
   1dbc4:	ldr	r2, [fp, #-160]	; 0xffffff60
   1dbc8:	subs	r0, r2, r0
   1dbcc:	rscs	r1, r1, r2, asr #31
   1dbd0:	str	r0, [fp, #-168]	; 0xffffff58
   1dbd4:	str	r1, [fp, #-172]	; 0xffffff54
   1dbd8:	bcc	1dda4 <__assert_fail@plt+0xccbc>
   1dbdc:	b	1ddb8 <__assert_fail@plt+0xccd0>
   1dbe0:	b	1dbe4 <__assert_fail@plt+0xcafc>
   1dbe4:	ldr	r0, [pc, #-472]	; 1da14 <__assert_fail@plt+0xc92c>
   1dbe8:	ldr	r1, [fp, #8]
   1dbec:	cmp	r1, r0
   1dbf0:	blt	1dc08 <__assert_fail@plt+0xcb20>
   1dbf4:	b	1dc1c <__assert_fail@plt+0xcb34>
   1dbf8:	ldr	r0, [fp, #8]
   1dbfc:	movw	r1, #0
   1dc00:	cmp	r1, r0
   1dc04:	bge	1dc1c <__assert_fail@plt+0xcb34>
   1dc08:	mov	r0, #1
   1dc0c:	mvn	r1, #0
   1dc10:	str	r1, [fp, #-176]	; 0xffffff50
   1dc14:	str	r0, [fp, #-180]	; 0xffffff4c
   1dc18:	b	1dc48 <__assert_fail@plt+0xcb60>
   1dc1c:	ldr	r0, [fp, #8]
   1dc20:	rsb	r0, r0, #0
   1dc24:	asr	r3, r0, #31
   1dc28:	mvn	r1, #0
   1dc2c:	str	r0, [fp, #-184]	; 0xffffff48
   1dc30:	mov	r0, r1
   1dc34:	ldr	r2, [fp, #-184]	; 0xffffff48
   1dc38:	bl	21f88 <__assert_fail@plt+0x10ea0>
   1dc3c:	str	r0, [fp, #-176]	; 0xffffff50
   1dc40:	str	r1, [fp, #-180]	; 0xffffff4c
   1dc44:	b	1dc48 <__assert_fail@plt+0xcb60>
   1dc48:	ldr	r0, [fp, #-180]	; 0xffffff4c
   1dc4c:	ldr	r1, [fp, #-176]	; 0xffffff50
   1dc50:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1dc54:	mvn	r2, r2
   1dc58:	subs	r1, r2, r1
   1dc5c:	rscs	r0, r0, r2, asr #31
   1dc60:	str	r1, [sp, #188]	; 0xbc
   1dc64:	str	r0, [sp, #184]	; 0xb8
   1dc68:	bcs	1dda4 <__assert_fail@plt+0xccbc>
   1dc6c:	b	1ddb8 <__assert_fail@plt+0xccd0>
   1dc70:	b	1dc74 <__assert_fail@plt+0xcb8c>
   1dc74:	b	1dccc <__assert_fail@plt+0xcbe4>
   1dc78:	b	1dccc <__assert_fail@plt+0xcbe4>
   1dc7c:	ldr	r0, [fp, #8]
   1dc80:	cmn	r0, #1
   1dc84:	bne	1dccc <__assert_fail@plt+0xcbe4>
   1dc88:	b	1dc8c <__assert_fail@plt+0xcba4>
   1dc8c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1dc90:	add	r0, r0, #0
   1dc94:	movw	r1, #0
   1dc98:	cmp	r1, r0
   1dc9c:	blt	1dda4 <__assert_fail@plt+0xccbc>
   1dca0:	b	1ddb8 <__assert_fail@plt+0xccd0>
   1dca4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1dca8:	movw	r1, #0
   1dcac:	cmp	r1, r0
   1dcb0:	bge	1ddb8 <__assert_fail@plt+0xccd0>
   1dcb4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1dcb8:	sub	r0, r0, #1
   1dcbc:	mvn	r1, #0
   1dcc0:	cmp	r1, r0
   1dcc4:	blt	1dda4 <__assert_fail@plt+0xccbc>
   1dcc8:	b	1ddb8 <__assert_fail@plt+0xccd0>
   1dccc:	ldr	r0, [fp, #8]
   1dcd0:	movw	r1, #0
   1dcd4:	sdiv	r0, r1, r0
   1dcd8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1dcdc:	cmp	r0, r1
   1dce0:	blt	1dda4 <__assert_fail@plt+0xccbc>
   1dce4:	b	1ddb8 <__assert_fail@plt+0xccd0>
   1dce8:	ldr	r0, [fp, #8]
   1dcec:	cmp	r0, #0
   1dcf0:	bne	1dcf8 <__assert_fail@plt+0xcc10>
   1dcf4:	b	1ddb8 <__assert_fail@plt+0xccd0>
   1dcf8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1dcfc:	cmp	r0, #0
   1dd00:	bge	1dd6c <__assert_fail@plt+0xcc84>
   1dd04:	b	1dd08 <__assert_fail@plt+0xcc20>
   1dd08:	b	1dd50 <__assert_fail@plt+0xcc68>
   1dd0c:	b	1dd50 <__assert_fail@plt+0xcc68>
   1dd10:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1dd14:	cmn	r0, #1
   1dd18:	bne	1dd50 <__assert_fail@plt+0xcc68>
   1dd1c:	b	1dd20 <__assert_fail@plt+0xcc38>
   1dd20:	ldr	r0, [fp, #8]
   1dd24:	add	r0, r0, #0
   1dd28:	movw	r1, #0
   1dd2c:	cmp	r1, r0
   1dd30:	blt	1dda4 <__assert_fail@plt+0xccbc>
   1dd34:	b	1ddb8 <__assert_fail@plt+0xccd0>
   1dd38:	ldr	r0, [fp, #8]
   1dd3c:	sub	r0, r0, #1
   1dd40:	mvn	r1, #0
   1dd44:	cmp	r1, r0
   1dd48:	blt	1dda4 <__assert_fail@plt+0xccbc>
   1dd4c:	b	1ddb8 <__assert_fail@plt+0xccd0>
   1dd50:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1dd54:	movw	r1, #0
   1dd58:	sdiv	r0, r1, r0
   1dd5c:	ldr	r1, [fp, #8]
   1dd60:	cmp	r0, r1
   1dd64:	blt	1dda4 <__assert_fail@plt+0xccbc>
   1dd68:	b	1ddb8 <__assert_fail@plt+0xccd0>
   1dd6c:	ldr	r0, [fp, #8]
   1dd70:	asr	r3, r0, #31
   1dd74:	mvn	r1, #0
   1dd78:	str	r0, [sp, #180]	; 0xb4
   1dd7c:	mov	r0, r1
   1dd80:	ldr	r2, [sp, #180]	; 0xb4
   1dd84:	bl	21f88 <__assert_fail@plt+0x10ea0>
   1dd88:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1dd8c:	subs	r0, r0, r2
   1dd90:	sbcs	r1, r1, r2, asr #31
   1dd94:	str	r0, [sp, #176]	; 0xb0
   1dd98:	str	r1, [sp, #172]	; 0xac
   1dd9c:	bcs	1ddb8 <__assert_fail@plt+0xccd0>
   1dda0:	b	1dda4 <__assert_fail@plt+0xccbc>
   1dda4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1dda8:	ldr	r1, [fp, #8]
   1ddac:	mul	r0, r0, r1
   1ddb0:	str	r0, [fp, #-28]	; 0xffffffe4
   1ddb4:	b	1ddcc <__assert_fail@plt+0xcce4>
   1ddb8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ddbc:	ldr	r1, [fp, #8]
   1ddc0:	mul	r0, r0, r1
   1ddc4:	str	r0, [fp, #-28]	; 0xffffffe4
   1ddc8:	b	1dddc <__assert_fail@plt+0xccf4>
   1ddcc:	ldr	r0, [pc, #-1108]	; 1d980 <__assert_fail@plt+0xc898>
   1ddd0:	str	r0, [sp, #168]	; 0xa8
   1ddd4:	b	1ddfc <__assert_fail@plt+0xcd14>
   1ddd8:			; <UNDEFINED> instruction: 0xffff8000
   1dddc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1dde0:	cmp	r0, #64	; 0x40
   1dde4:	movw	r0, #0
   1dde8:	movlt	r0, #1
   1ddec:	tst	r0, #1
   1ddf0:	movw	r0, #64	; 0x40
   1ddf4:	moveq	r0, #0
   1ddf8:	str	r0, [sp, #168]	; 0xa8
   1ddfc:	ldr	r0, [sp, #168]	; 0xa8
   1de00:	str	r0, [fp, #-32]	; 0xffffffe0
   1de04:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1de08:	cmp	r0, #0
   1de0c:	beq	1de3c <__assert_fail@plt+0xcd54>
   1de10:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1de14:	ldr	r1, [fp, #8]
   1de18:	sdiv	r0, r0, r1
   1de1c:	str	r0, [fp, #-24]	; 0xffffffe8
   1de20:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1de24:	mov	r1, r0
   1de28:	ldr	r2, [fp, #8]
   1de2c:	sdiv	r3, r0, r2
   1de30:	mls	r0, r3, r2, r0
   1de34:	sub	r0, r1, r0
   1de38:	str	r0, [fp, #-28]	; 0xffffffe4
   1de3c:	ldr	r0, [fp, #-4]
   1de40:	movw	r1, #0
   1de44:	cmp	r0, r1
   1de48:	bne	1de58 <__assert_fail@plt+0xcd70>
   1de4c:	ldr	r0, [fp, #-8]
   1de50:	movw	r1, #0
   1de54:	str	r1, [r0]
   1de58:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1de5c:	ldr	r1, [fp, #-20]	; 0xffffffec
   1de60:	sub	r0, r0, r1
   1de64:	ldr	r1, [fp, #-12]
   1de68:	cmp	r0, r1
   1de6c:	bge	1f2a4 <__assert_fail@plt+0xe1bc>
   1de70:	ldr	r0, [fp, #-20]	; 0xffffffec
   1de74:	ldr	r1, [fp, #-12]
   1de78:	add	r1, r0, r1
   1de7c:	mov	r2, #1
   1de80:	cmp	r1, r0
   1de84:	movwvc	r2, #0
   1de88:	str	r1, [fp, #-24]	; 0xffffffe8
   1de8c:	tst	r2, #1
   1de90:	bne	1f2a0 <__assert_fail@plt+0xe1b8>
   1de94:	ldr	r0, [fp, #-16]
   1de98:	movw	r1, #0
   1de9c:	cmp	r1, r0
   1dea0:	bgt	1deb4 <__assert_fail@plt+0xcdcc>
   1dea4:	ldr	r0, [fp, #-16]
   1dea8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1deac:	cmp	r0, r1
   1deb0:	blt	1f2a0 <__assert_fail@plt+0xe1b8>
   1deb4:	b	1e290 <__assert_fail@plt+0xd1a8>
   1deb8:	b	1debc <__assert_fail@plt+0xcdd4>
   1debc:	ldr	r0, [fp, #8]
   1dec0:	cmp	r0, #0
   1dec4:	bge	1dfd8 <__assert_fail@plt+0xcef0>
   1dec8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1decc:	cmp	r0, #0
   1ded0:	bge	1df5c <__assert_fail@plt+0xce74>
   1ded4:	b	1ded8 <__assert_fail@plt+0xcdf0>
   1ded8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1dedc:	ldr	r1, [fp, #8]
   1dee0:	movw	r2, #127	; 0x7f
   1dee4:	sdiv	r1, r2, r1
   1dee8:	cmp	r0, r1
   1deec:	blt	1e078 <__assert_fail@plt+0xcf90>
   1def0:	b	1e090 <__assert_fail@plt+0xcfa8>
   1def4:	b	1def8 <__assert_fail@plt+0xce10>
   1def8:	ldr	r0, [pc, #-1260]	; 1da14 <__assert_fail@plt+0xc92c>
   1defc:	ldr	r1, [fp, #8]
   1df00:	cmp	r1, r0
   1df04:	blt	1df1c <__assert_fail@plt+0xce34>
   1df08:	b	1df28 <__assert_fail@plt+0xce40>
   1df0c:	ldr	r0, [fp, #8]
   1df10:	movw	r1, #0
   1df14:	cmp	r1, r0
   1df18:	bge	1df28 <__assert_fail@plt+0xce40>
   1df1c:	movw	r0, #0
   1df20:	str	r0, [sp, #164]	; 0xa4
   1df24:	b	1df40 <__assert_fail@plt+0xce58>
   1df28:	ldr	r0, [fp, #8]
   1df2c:	movw	r1, #0
   1df30:	sub	r0, r1, r0
   1df34:	movw	r1, #127	; 0x7f
   1df38:	sdiv	r0, r1, r0
   1df3c:	str	r0, [sp, #164]	; 0xa4
   1df40:	ldr	r0, [sp, #164]	; 0xa4
   1df44:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1df48:	mvn	r2, #0
   1df4c:	sub	r1, r2, r1
   1df50:	cmp	r0, r1
   1df54:	ble	1e078 <__assert_fail@plt+0xcf90>
   1df58:	b	1e090 <__assert_fail@plt+0xcfa8>
   1df5c:	b	1df60 <__assert_fail@plt+0xce78>
   1df60:	b	1dfbc <__assert_fail@plt+0xced4>
   1df64:	b	1dfbc <__assert_fail@plt+0xced4>
   1df68:	ldr	r0, [fp, #8]
   1df6c:	cmn	r0, #1
   1df70:	bne	1dfbc <__assert_fail@plt+0xced4>
   1df74:	b	1df78 <__assert_fail@plt+0xce90>
   1df78:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1df7c:	mvn	r1, #127	; 0x7f
   1df80:	add	r0, r0, r1
   1df84:	movw	r1, #0
   1df88:	cmp	r1, r0
   1df8c:	blt	1e078 <__assert_fail@plt+0xcf90>
   1df90:	b	1e090 <__assert_fail@plt+0xcfa8>
   1df94:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1df98:	movw	r1, #0
   1df9c:	cmp	r1, r0
   1dfa0:	bge	1e090 <__assert_fail@plt+0xcfa8>
   1dfa4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1dfa8:	sub	r0, r0, #1
   1dfac:	movw	r1, #127	; 0x7f
   1dfb0:	cmp	r1, r0
   1dfb4:	blt	1e078 <__assert_fail@plt+0xcf90>
   1dfb8:	b	1e090 <__assert_fail@plt+0xcfa8>
   1dfbc:	ldr	r0, [fp, #8]
   1dfc0:	mvn	r1, #127	; 0x7f
   1dfc4:	sdiv	r0, r1, r0
   1dfc8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1dfcc:	cmp	r0, r1
   1dfd0:	blt	1e078 <__assert_fail@plt+0xcf90>
   1dfd4:	b	1e090 <__assert_fail@plt+0xcfa8>
   1dfd8:	ldr	r0, [fp, #8]
   1dfdc:	cmp	r0, #0
   1dfe0:	bne	1dfe8 <__assert_fail@plt+0xcf00>
   1dfe4:	b	1e090 <__assert_fail@plt+0xcfa8>
   1dfe8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1dfec:	cmp	r0, #0
   1dff0:	bge	1e060 <__assert_fail@plt+0xcf78>
   1dff4:	b	1dff8 <__assert_fail@plt+0xcf10>
   1dff8:	b	1e044 <__assert_fail@plt+0xcf5c>
   1dffc:	b	1e044 <__assert_fail@plt+0xcf5c>
   1e000:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e004:	cmn	r0, #1
   1e008:	bne	1e044 <__assert_fail@plt+0xcf5c>
   1e00c:	b	1e010 <__assert_fail@plt+0xcf28>
   1e010:	ldr	r0, [fp, #8]
   1e014:	mvn	r1, #127	; 0x7f
   1e018:	add	r0, r0, r1
   1e01c:	movw	r1, #0
   1e020:	cmp	r1, r0
   1e024:	blt	1e078 <__assert_fail@plt+0xcf90>
   1e028:	b	1e090 <__assert_fail@plt+0xcfa8>
   1e02c:	ldr	r0, [fp, #8]
   1e030:	sub	r0, r0, #1
   1e034:	movw	r1, #127	; 0x7f
   1e038:	cmp	r1, r0
   1e03c:	blt	1e078 <__assert_fail@plt+0xcf90>
   1e040:	b	1e090 <__assert_fail@plt+0xcfa8>
   1e044:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e048:	mvn	r1, #127	; 0x7f
   1e04c:	sdiv	r0, r1, r0
   1e050:	ldr	r1, [fp, #8]
   1e054:	cmp	r0, r1
   1e058:	blt	1e078 <__assert_fail@plt+0xcf90>
   1e05c:	b	1e090 <__assert_fail@plt+0xcfa8>
   1e060:	ldr	r0, [fp, #8]
   1e064:	movw	r1, #127	; 0x7f
   1e068:	sdiv	r0, r1, r0
   1e06c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e070:	cmp	r0, r1
   1e074:	bge	1e090 <__assert_fail@plt+0xcfa8>
   1e078:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e07c:	ldr	r1, [fp, #8]
   1e080:	mul	r0, r0, r1
   1e084:	sxtb	r0, r0
   1e088:	str	r0, [fp, #-28]	; 0xffffffe4
   1e08c:	b	1f2a0 <__assert_fail@plt+0xe1b8>
   1e090:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e094:	ldr	r1, [fp, #8]
   1e098:	mul	r0, r0, r1
   1e09c:	sxtb	r0, r0
   1e0a0:	str	r0, [fp, #-28]	; 0xffffffe4
   1e0a4:	b	1f2a4 <__assert_fail@plt+0xe1bc>
   1e0a8:	ldr	r0, [fp, #8]
   1e0ac:	cmp	r0, #0
   1e0b0:	bge	1e1c0 <__assert_fail@plt+0xd0d8>
   1e0b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e0b8:	cmp	r0, #0
   1e0bc:	bge	1e148 <__assert_fail@plt+0xd060>
   1e0c0:	b	1e0c4 <__assert_fail@plt+0xcfdc>
   1e0c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e0c8:	ldr	r1, [fp, #8]
   1e0cc:	movw	r2, #255	; 0xff
   1e0d0:	sdiv	r1, r2, r1
   1e0d4:	cmp	r0, r1
   1e0d8:	blt	1e25c <__assert_fail@plt+0xd174>
   1e0dc:	b	1e278 <__assert_fail@plt+0xd190>
   1e0e0:	b	1e0e4 <__assert_fail@plt+0xcffc>
   1e0e4:	ldr	r0, [pc, #-1752]	; 1da14 <__assert_fail@plt+0xc92c>
   1e0e8:	ldr	r1, [fp, #8]
   1e0ec:	cmp	r1, r0
   1e0f0:	blt	1e108 <__assert_fail@plt+0xd020>
   1e0f4:	b	1e114 <__assert_fail@plt+0xd02c>
   1e0f8:	ldr	r0, [fp, #8]
   1e0fc:	movw	r1, #0
   1e100:	cmp	r1, r0
   1e104:	bge	1e114 <__assert_fail@plt+0xd02c>
   1e108:	movw	r0, #0
   1e10c:	str	r0, [sp, #160]	; 0xa0
   1e110:	b	1e12c <__assert_fail@plt+0xd044>
   1e114:	ldr	r0, [fp, #8]
   1e118:	movw	r1, #0
   1e11c:	sub	r0, r1, r0
   1e120:	movw	r1, #255	; 0xff
   1e124:	sdiv	r0, r1, r0
   1e128:	str	r0, [sp, #160]	; 0xa0
   1e12c:	ldr	r0, [sp, #160]	; 0xa0
   1e130:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e134:	mvn	r2, #0
   1e138:	sub	r1, r2, r1
   1e13c:	cmp	r0, r1
   1e140:	ble	1e25c <__assert_fail@plt+0xd174>
   1e144:	b	1e278 <__assert_fail@plt+0xd190>
   1e148:	b	1e14c <__assert_fail@plt+0xd064>
   1e14c:	b	1e1a4 <__assert_fail@plt+0xd0bc>
   1e150:	b	1e1a4 <__assert_fail@plt+0xd0bc>
   1e154:	ldr	r0, [fp, #8]
   1e158:	cmn	r0, #1
   1e15c:	bne	1e1a4 <__assert_fail@plt+0xd0bc>
   1e160:	b	1e164 <__assert_fail@plt+0xd07c>
   1e164:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e168:	add	r0, r0, #0
   1e16c:	movw	r1, #0
   1e170:	cmp	r1, r0
   1e174:	blt	1e25c <__assert_fail@plt+0xd174>
   1e178:	b	1e278 <__assert_fail@plt+0xd190>
   1e17c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e180:	movw	r1, #0
   1e184:	cmp	r1, r0
   1e188:	bge	1e278 <__assert_fail@plt+0xd190>
   1e18c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e190:	sub	r0, r0, #1
   1e194:	mvn	r1, #0
   1e198:	cmp	r1, r0
   1e19c:	blt	1e25c <__assert_fail@plt+0xd174>
   1e1a0:	b	1e278 <__assert_fail@plt+0xd190>
   1e1a4:	ldr	r0, [fp, #8]
   1e1a8:	movw	r1, #0
   1e1ac:	sdiv	r0, r1, r0
   1e1b0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e1b4:	cmp	r0, r1
   1e1b8:	blt	1e25c <__assert_fail@plt+0xd174>
   1e1bc:	b	1e278 <__assert_fail@plt+0xd190>
   1e1c0:	ldr	r0, [fp, #8]
   1e1c4:	cmp	r0, #0
   1e1c8:	bne	1e1d0 <__assert_fail@plt+0xd0e8>
   1e1cc:	b	1e278 <__assert_fail@plt+0xd190>
   1e1d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e1d4:	cmp	r0, #0
   1e1d8:	bge	1e244 <__assert_fail@plt+0xd15c>
   1e1dc:	b	1e1e0 <__assert_fail@plt+0xd0f8>
   1e1e0:	b	1e228 <__assert_fail@plt+0xd140>
   1e1e4:	b	1e228 <__assert_fail@plt+0xd140>
   1e1e8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e1ec:	cmn	r0, #1
   1e1f0:	bne	1e228 <__assert_fail@plt+0xd140>
   1e1f4:	b	1e1f8 <__assert_fail@plt+0xd110>
   1e1f8:	ldr	r0, [fp, #8]
   1e1fc:	add	r0, r0, #0
   1e200:	movw	r1, #0
   1e204:	cmp	r1, r0
   1e208:	blt	1e25c <__assert_fail@plt+0xd174>
   1e20c:	b	1e278 <__assert_fail@plt+0xd190>
   1e210:	ldr	r0, [fp, #8]
   1e214:	sub	r0, r0, #1
   1e218:	mvn	r1, #0
   1e21c:	cmp	r1, r0
   1e220:	blt	1e25c <__assert_fail@plt+0xd174>
   1e224:	b	1e278 <__assert_fail@plt+0xd190>
   1e228:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e22c:	movw	r1, #0
   1e230:	sdiv	r0, r1, r0
   1e234:	ldr	r1, [fp, #8]
   1e238:	cmp	r0, r1
   1e23c:	blt	1e25c <__assert_fail@plt+0xd174>
   1e240:	b	1e278 <__assert_fail@plt+0xd190>
   1e244:	ldr	r0, [fp, #8]
   1e248:	movw	r1, #255	; 0xff
   1e24c:	sdiv	r0, r1, r0
   1e250:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e254:	cmp	r0, r1
   1e258:	bge	1e278 <__assert_fail@plt+0xd190>
   1e25c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e260:	ldr	r1, [fp, #8]
   1e264:	mul	r0, r0, r1
   1e268:	and	r0, r0, #255	; 0xff
   1e26c:	str	r0, [fp, #-28]	; 0xffffffe4
   1e270:	b	1f2a0 <__assert_fail@plt+0xe1b8>
   1e274:	andhi	r0, r0, r0
   1e278:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e27c:	ldr	r1, [fp, #8]
   1e280:	mul	r0, r0, r1
   1e284:	and	r0, r0, #255	; 0xff
   1e288:	str	r0, [fp, #-28]	; 0xffffffe4
   1e28c:	b	1f2a4 <__assert_fail@plt+0xe1bc>
   1e290:	b	1e668 <__assert_fail@plt+0xd580>
   1e294:	b	1e298 <__assert_fail@plt+0xd1b0>
   1e298:	ldr	r0, [fp, #8]
   1e29c:	cmp	r0, #0
   1e2a0:	bge	1e3b4 <__assert_fail@plt+0xd2cc>
   1e2a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e2a8:	cmp	r0, #0
   1e2ac:	bge	1e338 <__assert_fail@plt+0xd250>
   1e2b0:	b	1e2b4 <__assert_fail@plt+0xd1cc>
   1e2b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e2b8:	ldr	r1, [fp, #8]
   1e2bc:	movw	r2, #32767	; 0x7fff
   1e2c0:	sdiv	r1, r2, r1
   1e2c4:	cmp	r0, r1
   1e2c8:	blt	1e454 <__assert_fail@plt+0xd36c>
   1e2cc:	b	1e46c <__assert_fail@plt+0xd384>
   1e2d0:	b	1e2d4 <__assert_fail@plt+0xd1ec>
   1e2d4:	ldr	r0, [pc, #4084]	; 1f2d0 <__assert_fail@plt+0xe1e8>
   1e2d8:	ldr	r1, [fp, #8]
   1e2dc:	cmp	r1, r0
   1e2e0:	blt	1e2f8 <__assert_fail@plt+0xd210>
   1e2e4:	b	1e304 <__assert_fail@plt+0xd21c>
   1e2e8:	ldr	r0, [fp, #8]
   1e2ec:	movw	r1, #0
   1e2f0:	cmp	r1, r0
   1e2f4:	bge	1e304 <__assert_fail@plt+0xd21c>
   1e2f8:	movw	r0, #0
   1e2fc:	str	r0, [sp, #156]	; 0x9c
   1e300:	b	1e31c <__assert_fail@plt+0xd234>
   1e304:	ldr	r0, [fp, #8]
   1e308:	movw	r1, #0
   1e30c:	sub	r0, r1, r0
   1e310:	movw	r1, #32767	; 0x7fff
   1e314:	sdiv	r0, r1, r0
   1e318:	str	r0, [sp, #156]	; 0x9c
   1e31c:	ldr	r0, [sp, #156]	; 0x9c
   1e320:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e324:	mvn	r2, #0
   1e328:	sub	r1, r2, r1
   1e32c:	cmp	r0, r1
   1e330:	ble	1e454 <__assert_fail@plt+0xd36c>
   1e334:	b	1e46c <__assert_fail@plt+0xd384>
   1e338:	b	1e33c <__assert_fail@plt+0xd254>
   1e33c:	b	1e398 <__assert_fail@plt+0xd2b0>
   1e340:	b	1e398 <__assert_fail@plt+0xd2b0>
   1e344:	ldr	r0, [fp, #8]
   1e348:	cmn	r0, #1
   1e34c:	bne	1e398 <__assert_fail@plt+0xd2b0>
   1e350:	b	1e354 <__assert_fail@plt+0xd26c>
   1e354:	ldr	r0, [pc, #3964]	; 1f2d8 <__assert_fail@plt+0xe1f0>
   1e358:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e35c:	add	r0, r1, r0
   1e360:	movw	r1, #0
   1e364:	cmp	r1, r0
   1e368:	blt	1e454 <__assert_fail@plt+0xd36c>
   1e36c:	b	1e46c <__assert_fail@plt+0xd384>
   1e370:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e374:	movw	r1, #0
   1e378:	cmp	r1, r0
   1e37c:	bge	1e46c <__assert_fail@plt+0xd384>
   1e380:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e384:	sub	r0, r0, #1
   1e388:	movw	r1, #32767	; 0x7fff
   1e38c:	cmp	r1, r0
   1e390:	blt	1e454 <__assert_fail@plt+0xd36c>
   1e394:	b	1e46c <__assert_fail@plt+0xd384>
   1e398:	ldr	r0, [pc, #3896]	; 1f2d8 <__assert_fail@plt+0xe1f0>
   1e39c:	ldr	r1, [fp, #8]
   1e3a0:	sdiv	r0, r0, r1
   1e3a4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e3a8:	cmp	r0, r1
   1e3ac:	blt	1e454 <__assert_fail@plt+0xd36c>
   1e3b0:	b	1e46c <__assert_fail@plt+0xd384>
   1e3b4:	ldr	r0, [fp, #8]
   1e3b8:	cmp	r0, #0
   1e3bc:	bne	1e3c4 <__assert_fail@plt+0xd2dc>
   1e3c0:	b	1e46c <__assert_fail@plt+0xd384>
   1e3c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e3c8:	cmp	r0, #0
   1e3cc:	bge	1e43c <__assert_fail@plt+0xd354>
   1e3d0:	b	1e3d4 <__assert_fail@plt+0xd2ec>
   1e3d4:	b	1e420 <__assert_fail@plt+0xd338>
   1e3d8:	b	1e420 <__assert_fail@plt+0xd338>
   1e3dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e3e0:	cmn	r0, #1
   1e3e4:	bne	1e420 <__assert_fail@plt+0xd338>
   1e3e8:	b	1e3ec <__assert_fail@plt+0xd304>
   1e3ec:	ldr	r0, [pc, #3812]	; 1f2d8 <__assert_fail@plt+0xe1f0>
   1e3f0:	ldr	r1, [fp, #8]
   1e3f4:	add	r0, r1, r0
   1e3f8:	movw	r1, #0
   1e3fc:	cmp	r1, r0
   1e400:	blt	1e454 <__assert_fail@plt+0xd36c>
   1e404:	b	1e46c <__assert_fail@plt+0xd384>
   1e408:	ldr	r0, [fp, #8]
   1e40c:	sub	r0, r0, #1
   1e410:	movw	r1, #32767	; 0x7fff
   1e414:	cmp	r1, r0
   1e418:	blt	1e454 <__assert_fail@plt+0xd36c>
   1e41c:	b	1e46c <__assert_fail@plt+0xd384>
   1e420:	ldr	r0, [pc, #3760]	; 1f2d8 <__assert_fail@plt+0xe1f0>
   1e424:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e428:	sdiv	r0, r0, r1
   1e42c:	ldr	r1, [fp, #8]
   1e430:	cmp	r0, r1
   1e434:	blt	1e454 <__assert_fail@plt+0xd36c>
   1e438:	b	1e46c <__assert_fail@plt+0xd384>
   1e43c:	ldr	r0, [fp, #8]
   1e440:	movw	r1, #32767	; 0x7fff
   1e444:	sdiv	r0, r1, r0
   1e448:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e44c:	cmp	r0, r1
   1e450:	bge	1e46c <__assert_fail@plt+0xd384>
   1e454:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e458:	ldr	r1, [fp, #8]
   1e45c:	mul	r0, r0, r1
   1e460:	sxth	r0, r0
   1e464:	str	r0, [fp, #-28]	; 0xffffffe4
   1e468:	b	1f2a0 <__assert_fail@plt+0xe1b8>
   1e46c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e470:	ldr	r1, [fp, #8]
   1e474:	mul	r0, r0, r1
   1e478:	sxth	r0, r0
   1e47c:	str	r0, [fp, #-28]	; 0xffffffe4
   1e480:	b	1f2a4 <__assert_fail@plt+0xe1bc>
   1e484:	ldr	r0, [fp, #8]
   1e488:	cmp	r0, #0
   1e48c:	bge	1e59c <__assert_fail@plt+0xd4b4>
   1e490:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e494:	cmp	r0, #0
   1e498:	bge	1e524 <__assert_fail@plt+0xd43c>
   1e49c:	b	1e4a0 <__assert_fail@plt+0xd3b8>
   1e4a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e4a4:	ldr	r1, [fp, #8]
   1e4a8:	movw	r2, #65535	; 0xffff
   1e4ac:	sdiv	r1, r2, r1
   1e4b0:	cmp	r0, r1
   1e4b4:	blt	1e638 <__assert_fail@plt+0xd550>
   1e4b8:	b	1e650 <__assert_fail@plt+0xd568>
   1e4bc:	b	1e4c0 <__assert_fail@plt+0xd3d8>
   1e4c0:	ldr	r0, [pc, #3592]	; 1f2d0 <__assert_fail@plt+0xe1e8>
   1e4c4:	ldr	r1, [fp, #8]
   1e4c8:	cmp	r1, r0
   1e4cc:	blt	1e4e4 <__assert_fail@plt+0xd3fc>
   1e4d0:	b	1e4f0 <__assert_fail@plt+0xd408>
   1e4d4:	ldr	r0, [fp, #8]
   1e4d8:	movw	r1, #0
   1e4dc:	cmp	r1, r0
   1e4e0:	bge	1e4f0 <__assert_fail@plt+0xd408>
   1e4e4:	movw	r0, #0
   1e4e8:	str	r0, [sp, #152]	; 0x98
   1e4ec:	b	1e508 <__assert_fail@plt+0xd420>
   1e4f0:	ldr	r0, [fp, #8]
   1e4f4:	movw	r1, #0
   1e4f8:	sub	r0, r1, r0
   1e4fc:	movw	r1, #65535	; 0xffff
   1e500:	sdiv	r0, r1, r0
   1e504:	str	r0, [sp, #152]	; 0x98
   1e508:	ldr	r0, [sp, #152]	; 0x98
   1e50c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e510:	mvn	r2, #0
   1e514:	sub	r1, r2, r1
   1e518:	cmp	r0, r1
   1e51c:	ble	1e638 <__assert_fail@plt+0xd550>
   1e520:	b	1e650 <__assert_fail@plt+0xd568>
   1e524:	b	1e528 <__assert_fail@plt+0xd440>
   1e528:	b	1e580 <__assert_fail@plt+0xd498>
   1e52c:	b	1e580 <__assert_fail@plt+0xd498>
   1e530:	ldr	r0, [fp, #8]
   1e534:	cmn	r0, #1
   1e538:	bne	1e580 <__assert_fail@plt+0xd498>
   1e53c:	b	1e540 <__assert_fail@plt+0xd458>
   1e540:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e544:	add	r0, r0, #0
   1e548:	movw	r1, #0
   1e54c:	cmp	r1, r0
   1e550:	blt	1e638 <__assert_fail@plt+0xd550>
   1e554:	b	1e650 <__assert_fail@plt+0xd568>
   1e558:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e55c:	movw	r1, #0
   1e560:	cmp	r1, r0
   1e564:	bge	1e650 <__assert_fail@plt+0xd568>
   1e568:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e56c:	sub	r0, r0, #1
   1e570:	mvn	r1, #0
   1e574:	cmp	r1, r0
   1e578:	blt	1e638 <__assert_fail@plt+0xd550>
   1e57c:	b	1e650 <__assert_fail@plt+0xd568>
   1e580:	ldr	r0, [fp, #8]
   1e584:	movw	r1, #0
   1e588:	sdiv	r0, r1, r0
   1e58c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e590:	cmp	r0, r1
   1e594:	blt	1e638 <__assert_fail@plt+0xd550>
   1e598:	b	1e650 <__assert_fail@plt+0xd568>
   1e59c:	ldr	r0, [fp, #8]
   1e5a0:	cmp	r0, #0
   1e5a4:	bne	1e5ac <__assert_fail@plt+0xd4c4>
   1e5a8:	b	1e650 <__assert_fail@plt+0xd568>
   1e5ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e5b0:	cmp	r0, #0
   1e5b4:	bge	1e620 <__assert_fail@plt+0xd538>
   1e5b8:	b	1e5bc <__assert_fail@plt+0xd4d4>
   1e5bc:	b	1e604 <__assert_fail@plt+0xd51c>
   1e5c0:	b	1e604 <__assert_fail@plt+0xd51c>
   1e5c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e5c8:	cmn	r0, #1
   1e5cc:	bne	1e604 <__assert_fail@plt+0xd51c>
   1e5d0:	b	1e5d4 <__assert_fail@plt+0xd4ec>
   1e5d4:	ldr	r0, [fp, #8]
   1e5d8:	add	r0, r0, #0
   1e5dc:	movw	r1, #0
   1e5e0:	cmp	r1, r0
   1e5e4:	blt	1e638 <__assert_fail@plt+0xd550>
   1e5e8:	b	1e650 <__assert_fail@plt+0xd568>
   1e5ec:	ldr	r0, [fp, #8]
   1e5f0:	sub	r0, r0, #1
   1e5f4:	mvn	r1, #0
   1e5f8:	cmp	r1, r0
   1e5fc:	blt	1e638 <__assert_fail@plt+0xd550>
   1e600:	b	1e650 <__assert_fail@plt+0xd568>
   1e604:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e608:	movw	r1, #0
   1e60c:	sdiv	r0, r1, r0
   1e610:	ldr	r1, [fp, #8]
   1e614:	cmp	r0, r1
   1e618:	blt	1e638 <__assert_fail@plt+0xd550>
   1e61c:	b	1e650 <__assert_fail@plt+0xd568>
   1e620:	ldr	r0, [fp, #8]
   1e624:	movw	r1, #65535	; 0xffff
   1e628:	sdiv	r0, r1, r0
   1e62c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e630:	cmp	r0, r1
   1e634:	bge	1e650 <__assert_fail@plt+0xd568>
   1e638:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e63c:	ldr	r1, [fp, #8]
   1e640:	mul	r0, r0, r1
   1e644:	uxth	r0, r0
   1e648:	str	r0, [fp, #-28]	; 0xffffffe4
   1e64c:	b	1f2a0 <__assert_fail@plt+0xe1b8>
   1e650:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e654:	ldr	r1, [fp, #8]
   1e658:	mul	r0, r0, r1
   1e65c:	uxth	r0, r0
   1e660:	str	r0, [fp, #-28]	; 0xffffffe4
   1e664:	b	1f2a4 <__assert_fail@plt+0xe1bc>
   1e668:	b	1e66c <__assert_fail@plt+0xd584>
   1e66c:	b	1e670 <__assert_fail@plt+0xd588>
   1e670:	ldr	r0, [fp, #8]
   1e674:	cmp	r0, #0
   1e678:	bge	1e77c <__assert_fail@plt+0xd694>
   1e67c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e680:	cmp	r0, #0
   1e684:	bge	1e710 <__assert_fail@plt+0xd628>
   1e688:	b	1e68c <__assert_fail@plt+0xd5a4>
   1e68c:	ldr	r0, [pc, #3128]	; 1f2cc <__assert_fail@plt+0xe1e4>
   1e690:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e694:	ldr	r2, [fp, #8]
   1e698:	sdiv	r0, r0, r2
   1e69c:	cmp	r1, r0
   1e6a0:	blt	1e80c <__assert_fail@plt+0xd724>
   1e6a4:	b	1e820 <__assert_fail@plt+0xd738>
   1e6a8:	b	1e6ac <__assert_fail@plt+0xd5c4>
   1e6ac:	ldr	r0, [pc, #3100]	; 1f2d0 <__assert_fail@plt+0xe1e8>
   1e6b0:	ldr	r1, [fp, #8]
   1e6b4:	cmp	r1, r0
   1e6b8:	blt	1e6d0 <__assert_fail@plt+0xd5e8>
   1e6bc:	b	1e6dc <__assert_fail@plt+0xd5f4>
   1e6c0:	ldr	r0, [fp, #8]
   1e6c4:	movw	r1, #0
   1e6c8:	cmp	r1, r0
   1e6cc:	bge	1e6dc <__assert_fail@plt+0xd5f4>
   1e6d0:	movw	r0, #0
   1e6d4:	str	r0, [sp, #148]	; 0x94
   1e6d8:	b	1e6f4 <__assert_fail@plt+0xd60c>
   1e6dc:	ldr	r0, [pc, #3048]	; 1f2cc <__assert_fail@plt+0xe1e4>
   1e6e0:	ldr	r1, [fp, #8]
   1e6e4:	movw	r2, #0
   1e6e8:	sub	r1, r2, r1
   1e6ec:	sdiv	r0, r0, r1
   1e6f0:	str	r0, [sp, #148]	; 0x94
   1e6f4:	ldr	r0, [sp, #148]	; 0x94
   1e6f8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e6fc:	mvn	r2, #0
   1e700:	sub	r1, r2, r1
   1e704:	cmp	r0, r1
   1e708:	ble	1e80c <__assert_fail@plt+0xd724>
   1e70c:	b	1e820 <__assert_fail@plt+0xd738>
   1e710:	ldr	r0, [fp, #8]
   1e714:	cmn	r0, #1
   1e718:	bne	1e760 <__assert_fail@plt+0xd678>
   1e71c:	b	1e720 <__assert_fail@plt+0xd638>
   1e720:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e724:	add	r0, r0, #-2147483648	; 0x80000000
   1e728:	movw	r1, #0
   1e72c:	cmp	r1, r0
   1e730:	blt	1e80c <__assert_fail@plt+0xd724>
   1e734:	b	1e820 <__assert_fail@plt+0xd738>
   1e738:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e73c:	movw	r1, #0
   1e740:	cmp	r1, r0
   1e744:	bge	1e820 <__assert_fail@plt+0xd738>
   1e748:	ldr	r0, [pc, #2940]	; 1f2cc <__assert_fail@plt+0xe1e4>
   1e74c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e750:	sub	r1, r1, #1
   1e754:	cmp	r0, r1
   1e758:	blt	1e80c <__assert_fail@plt+0xd724>
   1e75c:	b	1e820 <__assert_fail@plt+0xd738>
   1e760:	ldr	r0, [pc, #2924]	; 1f2d4 <__assert_fail@plt+0xe1ec>
   1e764:	ldr	r1, [fp, #8]
   1e768:	sdiv	r0, r0, r1
   1e76c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e770:	cmp	r0, r1
   1e774:	blt	1e80c <__assert_fail@plt+0xd724>
   1e778:	b	1e820 <__assert_fail@plt+0xd738>
   1e77c:	ldr	r0, [fp, #8]
   1e780:	cmp	r0, #0
   1e784:	bne	1e78c <__assert_fail@plt+0xd6a4>
   1e788:	b	1e820 <__assert_fail@plt+0xd738>
   1e78c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e790:	cmp	r0, #0
   1e794:	bge	1e7f4 <__assert_fail@plt+0xd70c>
   1e798:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e79c:	cmn	r0, #1
   1e7a0:	bne	1e7d8 <__assert_fail@plt+0xd6f0>
   1e7a4:	b	1e7a8 <__assert_fail@plt+0xd6c0>
   1e7a8:	ldr	r0, [fp, #8]
   1e7ac:	add	r0, r0, #-2147483648	; 0x80000000
   1e7b0:	movw	r1, #0
   1e7b4:	cmp	r1, r0
   1e7b8:	blt	1e80c <__assert_fail@plt+0xd724>
   1e7bc:	b	1e820 <__assert_fail@plt+0xd738>
   1e7c0:	ldr	r0, [pc, #2820]	; 1f2cc <__assert_fail@plt+0xe1e4>
   1e7c4:	ldr	r1, [fp, #8]
   1e7c8:	sub	r1, r1, #1
   1e7cc:	cmp	r0, r1
   1e7d0:	blt	1e80c <__assert_fail@plt+0xd724>
   1e7d4:	b	1e820 <__assert_fail@plt+0xd738>
   1e7d8:	ldr	r0, [pc, #2804]	; 1f2d4 <__assert_fail@plt+0xe1ec>
   1e7dc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e7e0:	sdiv	r0, r0, r1
   1e7e4:	ldr	r1, [fp, #8]
   1e7e8:	cmp	r0, r1
   1e7ec:	blt	1e80c <__assert_fail@plt+0xd724>
   1e7f0:	b	1e820 <__assert_fail@plt+0xd738>
   1e7f4:	ldr	r0, [pc, #2768]	; 1f2cc <__assert_fail@plt+0xe1e4>
   1e7f8:	ldr	r1, [fp, #8]
   1e7fc:	sdiv	r0, r0, r1
   1e800:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e804:	cmp	r0, r1
   1e808:	bge	1e820 <__assert_fail@plt+0xd738>
   1e80c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e810:	ldr	r1, [fp, #8]
   1e814:	mul	r0, r0, r1
   1e818:	str	r0, [fp, #-28]	; 0xffffffe4
   1e81c:	b	1f2a0 <__assert_fail@plt+0xe1b8>
   1e820:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e824:	ldr	r1, [fp, #8]
   1e828:	mul	r0, r0, r1
   1e82c:	str	r0, [fp, #-28]	; 0xffffffe4
   1e830:	b	1f2a4 <__assert_fail@plt+0xe1bc>
   1e834:	ldr	r0, [fp, #8]
   1e838:	cmp	r0, #0
   1e83c:	bge	1e94c <__assert_fail@plt+0xd864>
   1e840:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e844:	cmp	r0, #0
   1e848:	bge	1e8d4 <__assert_fail@plt+0xd7ec>
   1e84c:	b	1e86c <__assert_fail@plt+0xd784>
   1e850:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e854:	ldr	r1, [fp, #8]
   1e858:	mvn	r2, #0
   1e85c:	udiv	r1, r2, r1
   1e860:	cmp	r0, r1
   1e864:	bcc	1e9e8 <__assert_fail@plt+0xd900>
   1e868:	b	1e9fc <__assert_fail@plt+0xd914>
   1e86c:	b	1e870 <__assert_fail@plt+0xd788>
   1e870:	ldr	r0, [pc, #2648]	; 1f2d0 <__assert_fail@plt+0xe1e8>
   1e874:	ldr	r1, [fp, #8]
   1e878:	cmp	r1, r0
   1e87c:	blt	1e894 <__assert_fail@plt+0xd7ac>
   1e880:	b	1e8a0 <__assert_fail@plt+0xd7b8>
   1e884:	ldr	r0, [fp, #8]
   1e888:	movw	r1, #0
   1e88c:	cmp	r1, r0
   1e890:	bge	1e8a0 <__assert_fail@plt+0xd7b8>
   1e894:	movw	r0, #1
   1e898:	str	r0, [sp, #144]	; 0x90
   1e89c:	b	1e8b8 <__assert_fail@plt+0xd7d0>
   1e8a0:	ldr	r0, [fp, #8]
   1e8a4:	movw	r1, #0
   1e8a8:	sub	r0, r1, r0
   1e8ac:	mvn	r1, #0
   1e8b0:	udiv	r0, r1, r0
   1e8b4:	str	r0, [sp, #144]	; 0x90
   1e8b8:	ldr	r0, [sp, #144]	; 0x90
   1e8bc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e8c0:	mvn	r2, #0
   1e8c4:	sub	r1, r2, r1
   1e8c8:	cmp	r0, r1
   1e8cc:	bls	1e9e8 <__assert_fail@plt+0xd900>
   1e8d0:	b	1e9fc <__assert_fail@plt+0xd914>
   1e8d4:	b	1e8d8 <__assert_fail@plt+0xd7f0>
   1e8d8:	b	1e930 <__assert_fail@plt+0xd848>
   1e8dc:	b	1e930 <__assert_fail@plt+0xd848>
   1e8e0:	ldr	r0, [fp, #8]
   1e8e4:	cmn	r0, #1
   1e8e8:	bne	1e930 <__assert_fail@plt+0xd848>
   1e8ec:	b	1e8f0 <__assert_fail@plt+0xd808>
   1e8f0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e8f4:	add	r0, r0, #0
   1e8f8:	movw	r1, #0
   1e8fc:	cmp	r1, r0
   1e900:	blt	1e9e8 <__assert_fail@plt+0xd900>
   1e904:	b	1e9fc <__assert_fail@plt+0xd914>
   1e908:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e90c:	movw	r1, #0
   1e910:	cmp	r1, r0
   1e914:	bge	1e9fc <__assert_fail@plt+0xd914>
   1e918:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e91c:	sub	r0, r0, #1
   1e920:	mvn	r1, #0
   1e924:	cmp	r1, r0
   1e928:	blt	1e9e8 <__assert_fail@plt+0xd900>
   1e92c:	b	1e9fc <__assert_fail@plt+0xd914>
   1e930:	ldr	r0, [fp, #8]
   1e934:	movw	r1, #0
   1e938:	sdiv	r0, r1, r0
   1e93c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e940:	cmp	r0, r1
   1e944:	blt	1e9e8 <__assert_fail@plt+0xd900>
   1e948:	b	1e9fc <__assert_fail@plt+0xd914>
   1e94c:	ldr	r0, [fp, #8]
   1e950:	cmp	r0, #0
   1e954:	bne	1e95c <__assert_fail@plt+0xd874>
   1e958:	b	1e9fc <__assert_fail@plt+0xd914>
   1e95c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e960:	cmp	r0, #0
   1e964:	bge	1e9d0 <__assert_fail@plt+0xd8e8>
   1e968:	b	1e96c <__assert_fail@plt+0xd884>
   1e96c:	b	1e9b4 <__assert_fail@plt+0xd8cc>
   1e970:	b	1e9b4 <__assert_fail@plt+0xd8cc>
   1e974:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e978:	cmn	r0, #1
   1e97c:	bne	1e9b4 <__assert_fail@plt+0xd8cc>
   1e980:	b	1e984 <__assert_fail@plt+0xd89c>
   1e984:	ldr	r0, [fp, #8]
   1e988:	add	r0, r0, #0
   1e98c:	movw	r1, #0
   1e990:	cmp	r1, r0
   1e994:	blt	1e9e8 <__assert_fail@plt+0xd900>
   1e998:	b	1e9fc <__assert_fail@plt+0xd914>
   1e99c:	ldr	r0, [fp, #8]
   1e9a0:	sub	r0, r0, #1
   1e9a4:	mvn	r1, #0
   1e9a8:	cmp	r1, r0
   1e9ac:	blt	1e9e8 <__assert_fail@plt+0xd900>
   1e9b0:	b	1e9fc <__assert_fail@plt+0xd914>
   1e9b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e9b8:	movw	r1, #0
   1e9bc:	sdiv	r0, r1, r0
   1e9c0:	ldr	r1, [fp, #8]
   1e9c4:	cmp	r0, r1
   1e9c8:	blt	1e9e8 <__assert_fail@plt+0xd900>
   1e9cc:	b	1e9fc <__assert_fail@plt+0xd914>
   1e9d0:	ldr	r0, [fp, #8]
   1e9d4:	mvn	r1, #0
   1e9d8:	udiv	r0, r1, r0
   1e9dc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e9e0:	cmp	r0, r1
   1e9e4:	bcs	1e9fc <__assert_fail@plt+0xd914>
   1e9e8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e9ec:	ldr	r1, [fp, #8]
   1e9f0:	mul	r0, r0, r1
   1e9f4:	str	r0, [fp, #-28]	; 0xffffffe4
   1e9f8:	b	1f2a0 <__assert_fail@plt+0xe1b8>
   1e9fc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ea00:	ldr	r1, [fp, #8]
   1ea04:	mul	r0, r0, r1
   1ea08:	str	r0, [fp, #-28]	; 0xffffffe4
   1ea0c:	b	1f2a4 <__assert_fail@plt+0xe1bc>
   1ea10:	b	1ea14 <__assert_fail@plt+0xd92c>
   1ea14:	b	1ea18 <__assert_fail@plt+0xd930>
   1ea18:	ldr	r0, [fp, #8]
   1ea1c:	cmp	r0, #0
   1ea20:	bge	1eb24 <__assert_fail@plt+0xda3c>
   1ea24:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ea28:	cmp	r0, #0
   1ea2c:	bge	1eab8 <__assert_fail@plt+0xd9d0>
   1ea30:	b	1ea34 <__assert_fail@plt+0xd94c>
   1ea34:	ldr	r0, [pc, #2192]	; 1f2cc <__assert_fail@plt+0xe1e4>
   1ea38:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1ea3c:	ldr	r2, [fp, #8]
   1ea40:	sdiv	r0, r0, r2
   1ea44:	cmp	r1, r0
   1ea48:	blt	1ebb4 <__assert_fail@plt+0xdacc>
   1ea4c:	b	1ebc8 <__assert_fail@plt+0xdae0>
   1ea50:	b	1ea54 <__assert_fail@plt+0xd96c>
   1ea54:	ldr	r0, [pc, #2164]	; 1f2d0 <__assert_fail@plt+0xe1e8>
   1ea58:	ldr	r1, [fp, #8]
   1ea5c:	cmp	r1, r0
   1ea60:	blt	1ea78 <__assert_fail@plt+0xd990>
   1ea64:	b	1ea84 <__assert_fail@plt+0xd99c>
   1ea68:	ldr	r0, [fp, #8]
   1ea6c:	movw	r1, #0
   1ea70:	cmp	r1, r0
   1ea74:	bge	1ea84 <__assert_fail@plt+0xd99c>
   1ea78:	movw	r0, #0
   1ea7c:	str	r0, [sp, #140]	; 0x8c
   1ea80:	b	1ea9c <__assert_fail@plt+0xd9b4>
   1ea84:	ldr	r0, [pc, #2112]	; 1f2cc <__assert_fail@plt+0xe1e4>
   1ea88:	ldr	r1, [fp, #8]
   1ea8c:	movw	r2, #0
   1ea90:	sub	r1, r2, r1
   1ea94:	sdiv	r0, r0, r1
   1ea98:	str	r0, [sp, #140]	; 0x8c
   1ea9c:	ldr	r0, [sp, #140]	; 0x8c
   1eaa0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1eaa4:	mvn	r2, #0
   1eaa8:	sub	r1, r2, r1
   1eaac:	cmp	r0, r1
   1eab0:	ble	1ebb4 <__assert_fail@plt+0xdacc>
   1eab4:	b	1ebc8 <__assert_fail@plt+0xdae0>
   1eab8:	ldr	r0, [fp, #8]
   1eabc:	cmn	r0, #1
   1eac0:	bne	1eb08 <__assert_fail@plt+0xda20>
   1eac4:	b	1eac8 <__assert_fail@plt+0xd9e0>
   1eac8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1eacc:	add	r0, r0, #-2147483648	; 0x80000000
   1ead0:	movw	r1, #0
   1ead4:	cmp	r1, r0
   1ead8:	blt	1ebb4 <__assert_fail@plt+0xdacc>
   1eadc:	b	1ebc8 <__assert_fail@plt+0xdae0>
   1eae0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1eae4:	movw	r1, #0
   1eae8:	cmp	r1, r0
   1eaec:	bge	1ebc8 <__assert_fail@plt+0xdae0>
   1eaf0:	ldr	r0, [pc, #2004]	; 1f2cc <__assert_fail@plt+0xe1e4>
   1eaf4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1eaf8:	sub	r1, r1, #1
   1eafc:	cmp	r0, r1
   1eb00:	blt	1ebb4 <__assert_fail@plt+0xdacc>
   1eb04:	b	1ebc8 <__assert_fail@plt+0xdae0>
   1eb08:	ldr	r0, [pc, #1988]	; 1f2d4 <__assert_fail@plt+0xe1ec>
   1eb0c:	ldr	r1, [fp, #8]
   1eb10:	sdiv	r0, r0, r1
   1eb14:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1eb18:	cmp	r0, r1
   1eb1c:	blt	1ebb4 <__assert_fail@plt+0xdacc>
   1eb20:	b	1ebc8 <__assert_fail@plt+0xdae0>
   1eb24:	ldr	r0, [fp, #8]
   1eb28:	cmp	r0, #0
   1eb2c:	bne	1eb34 <__assert_fail@plt+0xda4c>
   1eb30:	b	1ebc8 <__assert_fail@plt+0xdae0>
   1eb34:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1eb38:	cmp	r0, #0
   1eb3c:	bge	1eb9c <__assert_fail@plt+0xdab4>
   1eb40:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1eb44:	cmn	r0, #1
   1eb48:	bne	1eb80 <__assert_fail@plt+0xda98>
   1eb4c:	b	1eb50 <__assert_fail@plt+0xda68>
   1eb50:	ldr	r0, [fp, #8]
   1eb54:	add	r0, r0, #-2147483648	; 0x80000000
   1eb58:	movw	r1, #0
   1eb5c:	cmp	r1, r0
   1eb60:	blt	1ebb4 <__assert_fail@plt+0xdacc>
   1eb64:	b	1ebc8 <__assert_fail@plt+0xdae0>
   1eb68:	ldr	r0, [pc, #1884]	; 1f2cc <__assert_fail@plt+0xe1e4>
   1eb6c:	ldr	r1, [fp, #8]
   1eb70:	sub	r1, r1, #1
   1eb74:	cmp	r0, r1
   1eb78:	blt	1ebb4 <__assert_fail@plt+0xdacc>
   1eb7c:	b	1ebc8 <__assert_fail@plt+0xdae0>
   1eb80:	ldr	r0, [pc, #1868]	; 1f2d4 <__assert_fail@plt+0xe1ec>
   1eb84:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1eb88:	sdiv	r0, r0, r1
   1eb8c:	ldr	r1, [fp, #8]
   1eb90:	cmp	r0, r1
   1eb94:	blt	1ebb4 <__assert_fail@plt+0xdacc>
   1eb98:	b	1ebc8 <__assert_fail@plt+0xdae0>
   1eb9c:	ldr	r0, [pc, #1832]	; 1f2cc <__assert_fail@plt+0xe1e4>
   1eba0:	ldr	r1, [fp, #8]
   1eba4:	sdiv	r0, r0, r1
   1eba8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1ebac:	cmp	r0, r1
   1ebb0:	bge	1ebc8 <__assert_fail@plt+0xdae0>
   1ebb4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ebb8:	ldr	r1, [fp, #8]
   1ebbc:	mul	r0, r0, r1
   1ebc0:	str	r0, [fp, #-28]	; 0xffffffe4
   1ebc4:	b	1f2a0 <__assert_fail@plt+0xe1b8>
   1ebc8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ebcc:	ldr	r1, [fp, #8]
   1ebd0:	mul	r0, r0, r1
   1ebd4:	str	r0, [fp, #-28]	; 0xffffffe4
   1ebd8:	b	1f2a4 <__assert_fail@plt+0xe1bc>
   1ebdc:	ldr	r0, [fp, #8]
   1ebe0:	cmp	r0, #0
   1ebe4:	bge	1ecf4 <__assert_fail@plt+0xdc0c>
   1ebe8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ebec:	cmp	r0, #0
   1ebf0:	bge	1ec7c <__assert_fail@plt+0xdb94>
   1ebf4:	b	1ec14 <__assert_fail@plt+0xdb2c>
   1ebf8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ebfc:	ldr	r1, [fp, #8]
   1ec00:	mvn	r2, #0
   1ec04:	udiv	r1, r2, r1
   1ec08:	cmp	r0, r1
   1ec0c:	bcc	1ed90 <__assert_fail@plt+0xdca8>
   1ec10:	b	1eda4 <__assert_fail@plt+0xdcbc>
   1ec14:	b	1ec18 <__assert_fail@plt+0xdb30>
   1ec18:	ldr	r0, [pc, #1712]	; 1f2d0 <__assert_fail@plt+0xe1e8>
   1ec1c:	ldr	r1, [fp, #8]
   1ec20:	cmp	r1, r0
   1ec24:	blt	1ec3c <__assert_fail@plt+0xdb54>
   1ec28:	b	1ec48 <__assert_fail@plt+0xdb60>
   1ec2c:	ldr	r0, [fp, #8]
   1ec30:	movw	r1, #0
   1ec34:	cmp	r1, r0
   1ec38:	bge	1ec48 <__assert_fail@plt+0xdb60>
   1ec3c:	movw	r0, #1
   1ec40:	str	r0, [sp, #136]	; 0x88
   1ec44:	b	1ec60 <__assert_fail@plt+0xdb78>
   1ec48:	ldr	r0, [fp, #8]
   1ec4c:	movw	r1, #0
   1ec50:	sub	r0, r1, r0
   1ec54:	mvn	r1, #0
   1ec58:	udiv	r0, r1, r0
   1ec5c:	str	r0, [sp, #136]	; 0x88
   1ec60:	ldr	r0, [sp, #136]	; 0x88
   1ec64:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1ec68:	mvn	r2, #0
   1ec6c:	sub	r1, r2, r1
   1ec70:	cmp	r0, r1
   1ec74:	bls	1ed90 <__assert_fail@plt+0xdca8>
   1ec78:	b	1eda4 <__assert_fail@plt+0xdcbc>
   1ec7c:	b	1ec80 <__assert_fail@plt+0xdb98>
   1ec80:	b	1ecd8 <__assert_fail@plt+0xdbf0>
   1ec84:	b	1ecd8 <__assert_fail@plt+0xdbf0>
   1ec88:	ldr	r0, [fp, #8]
   1ec8c:	cmn	r0, #1
   1ec90:	bne	1ecd8 <__assert_fail@plt+0xdbf0>
   1ec94:	b	1ec98 <__assert_fail@plt+0xdbb0>
   1ec98:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ec9c:	add	r0, r0, #0
   1eca0:	movw	r1, #0
   1eca4:	cmp	r1, r0
   1eca8:	blt	1ed90 <__assert_fail@plt+0xdca8>
   1ecac:	b	1eda4 <__assert_fail@plt+0xdcbc>
   1ecb0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ecb4:	movw	r1, #0
   1ecb8:	cmp	r1, r0
   1ecbc:	bge	1eda4 <__assert_fail@plt+0xdcbc>
   1ecc0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ecc4:	sub	r0, r0, #1
   1ecc8:	mvn	r1, #0
   1eccc:	cmp	r1, r0
   1ecd0:	blt	1ed90 <__assert_fail@plt+0xdca8>
   1ecd4:	b	1eda4 <__assert_fail@plt+0xdcbc>
   1ecd8:	ldr	r0, [fp, #8]
   1ecdc:	movw	r1, #0
   1ece0:	sdiv	r0, r1, r0
   1ece4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1ece8:	cmp	r0, r1
   1ecec:	blt	1ed90 <__assert_fail@plt+0xdca8>
   1ecf0:	b	1eda4 <__assert_fail@plt+0xdcbc>
   1ecf4:	ldr	r0, [fp, #8]
   1ecf8:	cmp	r0, #0
   1ecfc:	bne	1ed04 <__assert_fail@plt+0xdc1c>
   1ed00:	b	1eda4 <__assert_fail@plt+0xdcbc>
   1ed04:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ed08:	cmp	r0, #0
   1ed0c:	bge	1ed78 <__assert_fail@plt+0xdc90>
   1ed10:	b	1ed14 <__assert_fail@plt+0xdc2c>
   1ed14:	b	1ed5c <__assert_fail@plt+0xdc74>
   1ed18:	b	1ed5c <__assert_fail@plt+0xdc74>
   1ed1c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ed20:	cmn	r0, #1
   1ed24:	bne	1ed5c <__assert_fail@plt+0xdc74>
   1ed28:	b	1ed2c <__assert_fail@plt+0xdc44>
   1ed2c:	ldr	r0, [fp, #8]
   1ed30:	add	r0, r0, #0
   1ed34:	movw	r1, #0
   1ed38:	cmp	r1, r0
   1ed3c:	blt	1ed90 <__assert_fail@plt+0xdca8>
   1ed40:	b	1eda4 <__assert_fail@plt+0xdcbc>
   1ed44:	ldr	r0, [fp, #8]
   1ed48:	sub	r0, r0, #1
   1ed4c:	mvn	r1, #0
   1ed50:	cmp	r1, r0
   1ed54:	blt	1ed90 <__assert_fail@plt+0xdca8>
   1ed58:	b	1eda4 <__assert_fail@plt+0xdcbc>
   1ed5c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ed60:	movw	r1, #0
   1ed64:	sdiv	r0, r1, r0
   1ed68:	ldr	r1, [fp, #8]
   1ed6c:	cmp	r0, r1
   1ed70:	blt	1ed90 <__assert_fail@plt+0xdca8>
   1ed74:	b	1eda4 <__assert_fail@plt+0xdcbc>
   1ed78:	ldr	r0, [fp, #8]
   1ed7c:	mvn	r1, #0
   1ed80:	udiv	r0, r1, r0
   1ed84:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1ed88:	cmp	r0, r1
   1ed8c:	bcs	1eda4 <__assert_fail@plt+0xdcbc>
   1ed90:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ed94:	ldr	r1, [fp, #8]
   1ed98:	mul	r0, r0, r1
   1ed9c:	str	r0, [fp, #-28]	; 0xffffffe4
   1eda0:	b	1f2a0 <__assert_fail@plt+0xe1b8>
   1eda4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1eda8:	ldr	r1, [fp, #8]
   1edac:	mul	r0, r0, r1
   1edb0:	str	r0, [fp, #-28]	; 0xffffffe4
   1edb4:	b	1f2a4 <__assert_fail@plt+0xe1bc>
   1edb8:	b	1edbc <__assert_fail@plt+0xdcd4>
   1edbc:	ldr	r0, [fp, #8]
   1edc0:	cmp	r0, #0
   1edc4:	bge	1ef4c <__assert_fail@plt+0xde64>
   1edc8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1edcc:	cmp	r0, #0
   1edd0:	bge	1eeb8 <__assert_fail@plt+0xddd0>
   1edd4:	b	1edd8 <__assert_fail@plt+0xdcf0>
   1edd8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1eddc:	ldr	r1, [fp, #8]
   1ede0:	asr	r3, r1, #31
   1ede4:	mvn	r2, #0
   1ede8:	mvn	ip, #-2147483648	; 0x80000000
   1edec:	str	r0, [sp, #132]	; 0x84
   1edf0:	mov	r0, r2
   1edf4:	str	r1, [sp, #128]	; 0x80
   1edf8:	mov	r1, ip
   1edfc:	ldr	r2, [sp, #128]	; 0x80
   1ee00:	bl	21eb4 <__assert_fail@plt+0x10dcc>
   1ee04:	ldr	r2, [sp, #132]	; 0x84
   1ee08:	subs	r0, r2, r0
   1ee0c:	rscs	r1, r1, r2, asr #31
   1ee10:	str	r0, [sp, #124]	; 0x7c
   1ee14:	str	r1, [sp, #120]	; 0x78
   1ee18:	blt	1f02c <__assert_fail@plt+0xdf44>
   1ee1c:	b	1f040 <__assert_fail@plt+0xdf58>
   1ee20:	b	1ee24 <__assert_fail@plt+0xdd3c>
   1ee24:	ldr	r0, [pc, #1188]	; 1f2d0 <__assert_fail@plt+0xe1e8>
   1ee28:	ldr	r1, [fp, #8]
   1ee2c:	cmp	r1, r0
   1ee30:	blt	1ee48 <__assert_fail@plt+0xdd60>
   1ee34:	b	1ee5c <__assert_fail@plt+0xdd74>
   1ee38:	ldr	r0, [fp, #8]
   1ee3c:	movw	r1, #0
   1ee40:	cmp	r1, r0
   1ee44:	bge	1ee5c <__assert_fail@plt+0xdd74>
   1ee48:	mov	r0, #0
   1ee4c:	mvn	r1, #0
   1ee50:	str	r1, [sp, #116]	; 0x74
   1ee54:	str	r0, [sp, #112]	; 0x70
   1ee58:	b	1ee90 <__assert_fail@plt+0xdda8>
   1ee5c:	ldr	r0, [fp, #8]
   1ee60:	rsb	r0, r0, #0
   1ee64:	asr	r3, r0, #31
   1ee68:	mvn	r1, #0
   1ee6c:	mvn	r2, #-2147483648	; 0x80000000
   1ee70:	str	r0, [sp, #108]	; 0x6c
   1ee74:	mov	r0, r1
   1ee78:	mov	r1, r2
   1ee7c:	ldr	r2, [sp, #108]	; 0x6c
   1ee80:	bl	21eb4 <__assert_fail@plt+0x10dcc>
   1ee84:	str	r0, [sp, #116]	; 0x74
   1ee88:	str	r1, [sp, #112]	; 0x70
   1ee8c:	b	1ee90 <__assert_fail@plt+0xdda8>
   1ee90:	ldr	r0, [sp, #112]	; 0x70
   1ee94:	ldr	r1, [sp, #116]	; 0x74
   1ee98:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1ee9c:	mvn	r2, r2
   1eea0:	subs	r1, r2, r1
   1eea4:	rscs	r0, r0, r2, asr #31
   1eea8:	str	r1, [sp, #104]	; 0x68
   1eeac:	str	r0, [sp, #100]	; 0x64
   1eeb0:	bge	1f02c <__assert_fail@plt+0xdf44>
   1eeb4:	b	1f040 <__assert_fail@plt+0xdf58>
   1eeb8:	ldr	r0, [fp, #8]
   1eebc:	cmn	r0, #1
   1eec0:	bne	1ef0c <__assert_fail@plt+0xde24>
   1eec4:	b	1eec8 <__assert_fail@plt+0xdde0>
   1eec8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1eecc:	mov	r1, #-2147483648	; 0x80000000
   1eed0:	add	r1, r1, r0, asr #31
   1eed4:	rsbs	r0, r0, #0
   1eed8:	rscs	r1, r1, #0
   1eedc:	str	r0, [sp, #96]	; 0x60
   1eee0:	str	r1, [sp, #92]	; 0x5c
   1eee4:	blt	1f02c <__assert_fail@plt+0xdf44>
   1eee8:	b	1f040 <__assert_fail@plt+0xdf58>
   1eeec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1eef0:	movw	r1, #0
   1eef4:	cmp	r1, r0
   1eef8:	bge	1f040 <__assert_fail@plt+0xdf58>
   1eefc:	mov	r0, #0
   1ef00:	cmp	r0, #0
   1ef04:	bne	1f02c <__assert_fail@plt+0xdf44>
   1ef08:	b	1f040 <__assert_fail@plt+0xdf58>
   1ef0c:	ldr	r0, [fp, #8]
   1ef10:	asr	r3, r0, #31
   1ef14:	mov	r1, #0
   1ef18:	mov	r2, #-2147483648	; 0x80000000
   1ef1c:	str	r0, [sp, #88]	; 0x58
   1ef20:	mov	r0, r1
   1ef24:	mov	r1, r2
   1ef28:	ldr	r2, [sp, #88]	; 0x58
   1ef2c:	bl	21eb4 <__assert_fail@plt+0x10dcc>
   1ef30:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1ef34:	subs	r0, r0, r2
   1ef38:	sbcs	r1, r1, r2, asr #31
   1ef3c:	str	r0, [sp, #84]	; 0x54
   1ef40:	str	r1, [sp, #80]	; 0x50
   1ef44:	blt	1f02c <__assert_fail@plt+0xdf44>
   1ef48:	b	1f040 <__assert_fail@plt+0xdf58>
   1ef4c:	ldr	r0, [fp, #8]
   1ef50:	cmp	r0, #0
   1ef54:	bne	1ef5c <__assert_fail@plt+0xde74>
   1ef58:	b	1f040 <__assert_fail@plt+0xdf58>
   1ef5c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ef60:	cmp	r0, #0
   1ef64:	bge	1efec <__assert_fail@plt+0xdf04>
   1ef68:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ef6c:	cmn	r0, #1
   1ef70:	bne	1efac <__assert_fail@plt+0xdec4>
   1ef74:	b	1ef78 <__assert_fail@plt+0xde90>
   1ef78:	ldr	r0, [fp, #8]
   1ef7c:	mov	r1, #-2147483648	; 0x80000000
   1ef80:	add	r1, r1, r0, asr #31
   1ef84:	rsbs	r0, r0, #0
   1ef88:	rscs	r1, r1, #0
   1ef8c:	str	r0, [sp, #76]	; 0x4c
   1ef90:	str	r1, [sp, #72]	; 0x48
   1ef94:	blt	1f02c <__assert_fail@plt+0xdf44>
   1ef98:	b	1f040 <__assert_fail@plt+0xdf58>
   1ef9c:	mov	r0, #0
   1efa0:	cmp	r0, #0
   1efa4:	bne	1f02c <__assert_fail@plt+0xdf44>
   1efa8:	b	1f040 <__assert_fail@plt+0xdf58>
   1efac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1efb0:	asr	r3, r0, #31
   1efb4:	mov	r1, #0
   1efb8:	mov	r2, #-2147483648	; 0x80000000
   1efbc:	str	r0, [sp, #68]	; 0x44
   1efc0:	mov	r0, r1
   1efc4:	mov	r1, r2
   1efc8:	ldr	r2, [sp, #68]	; 0x44
   1efcc:	bl	21eb4 <__assert_fail@plt+0x10dcc>
   1efd0:	ldr	r2, [fp, #8]
   1efd4:	subs	r0, r0, r2
   1efd8:	sbcs	r1, r1, r2, asr #31
   1efdc:	str	r0, [sp, #64]	; 0x40
   1efe0:	str	r1, [sp, #60]	; 0x3c
   1efe4:	blt	1f02c <__assert_fail@plt+0xdf44>
   1efe8:	b	1f040 <__assert_fail@plt+0xdf58>
   1efec:	ldr	r0, [fp, #8]
   1eff0:	asr	r3, r0, #31
   1eff4:	mvn	r1, #0
   1eff8:	mvn	r2, #-2147483648	; 0x80000000
   1effc:	str	r0, [sp, #56]	; 0x38
   1f000:	mov	r0, r1
   1f004:	mov	r1, r2
   1f008:	ldr	r2, [sp, #56]	; 0x38
   1f00c:	bl	21eb4 <__assert_fail@plt+0x10dcc>
   1f010:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1f014:	subs	r0, r0, r2
   1f018:	sbcs	r1, r1, r2, asr #31
   1f01c:	str	r0, [sp, #52]	; 0x34
   1f020:	str	r1, [sp, #48]	; 0x30
   1f024:	bge	1f040 <__assert_fail@plt+0xdf58>
   1f028:	b	1f02c <__assert_fail@plt+0xdf44>
   1f02c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f030:	ldr	r1, [fp, #8]
   1f034:	mul	r0, r0, r1
   1f038:	str	r0, [fp, #-28]	; 0xffffffe4
   1f03c:	b	1f2a0 <__assert_fail@plt+0xe1b8>
   1f040:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f044:	ldr	r1, [fp, #8]
   1f048:	mul	r0, r0, r1
   1f04c:	str	r0, [fp, #-28]	; 0xffffffe4
   1f050:	b	1f2a4 <__assert_fail@plt+0xe1bc>
   1f054:	ldr	r0, [fp, #8]
   1f058:	cmp	r0, #0
   1f05c:	bge	1f1bc <__assert_fail@plt+0xe0d4>
   1f060:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f064:	cmp	r0, #0
   1f068:	bge	1f144 <__assert_fail@plt+0xe05c>
   1f06c:	b	1f0b4 <__assert_fail@plt+0xdfcc>
   1f070:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f074:	ldr	r1, [fp, #8]
   1f078:	asr	r3, r1, #31
   1f07c:	mvn	r2, #0
   1f080:	str	r0, [sp, #44]	; 0x2c
   1f084:	mov	r0, r2
   1f088:	str	r1, [sp, #40]	; 0x28
   1f08c:	mov	r1, r2
   1f090:	ldr	r2, [sp, #40]	; 0x28
   1f094:	bl	21f88 <__assert_fail@plt+0x10ea0>
   1f098:	ldr	r2, [sp, #44]	; 0x2c
   1f09c:	subs	r0, r2, r0
   1f0a0:	rscs	r1, r1, r2, asr #31
   1f0a4:	str	r0, [sp, #36]	; 0x24
   1f0a8:	str	r1, [sp, #32]
   1f0ac:	bcc	1f278 <__assert_fail@plt+0xe190>
   1f0b0:	b	1f28c <__assert_fail@plt+0xe1a4>
   1f0b4:	b	1f0b8 <__assert_fail@plt+0xdfd0>
   1f0b8:	ldr	r0, [pc, #528]	; 1f2d0 <__assert_fail@plt+0xe1e8>
   1f0bc:	ldr	r1, [fp, #8]
   1f0c0:	cmp	r1, r0
   1f0c4:	blt	1f0dc <__assert_fail@plt+0xdff4>
   1f0c8:	b	1f0f0 <__assert_fail@plt+0xe008>
   1f0cc:	ldr	r0, [fp, #8]
   1f0d0:	movw	r1, #0
   1f0d4:	cmp	r1, r0
   1f0d8:	bge	1f0f0 <__assert_fail@plt+0xe008>
   1f0dc:	mov	r0, #1
   1f0e0:	mvn	r1, #0
   1f0e4:	str	r1, [sp, #28]
   1f0e8:	str	r0, [sp, #24]
   1f0ec:	b	1f11c <__assert_fail@plt+0xe034>
   1f0f0:	ldr	r0, [fp, #8]
   1f0f4:	rsb	r0, r0, #0
   1f0f8:	asr	r3, r0, #31
   1f0fc:	mvn	r1, #0
   1f100:	str	r0, [sp, #20]
   1f104:	mov	r0, r1
   1f108:	ldr	r2, [sp, #20]
   1f10c:	bl	21f88 <__assert_fail@plt+0x10ea0>
   1f110:	str	r0, [sp, #28]
   1f114:	str	r1, [sp, #24]
   1f118:	b	1f11c <__assert_fail@plt+0xe034>
   1f11c:	ldr	r0, [sp, #24]
   1f120:	ldr	r1, [sp, #28]
   1f124:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1f128:	mvn	r2, r2
   1f12c:	subs	r1, r2, r1
   1f130:	rscs	r0, r0, r2, asr #31
   1f134:	str	r1, [sp, #16]
   1f138:	str	r0, [sp, #12]
   1f13c:	bcs	1f278 <__assert_fail@plt+0xe190>
   1f140:	b	1f28c <__assert_fail@plt+0xe1a4>
   1f144:	b	1f148 <__assert_fail@plt+0xe060>
   1f148:	b	1f1a0 <__assert_fail@plt+0xe0b8>
   1f14c:	b	1f1a0 <__assert_fail@plt+0xe0b8>
   1f150:	ldr	r0, [fp, #8]
   1f154:	cmn	r0, #1
   1f158:	bne	1f1a0 <__assert_fail@plt+0xe0b8>
   1f15c:	b	1f160 <__assert_fail@plt+0xe078>
   1f160:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f164:	add	r0, r0, #0
   1f168:	movw	r1, #0
   1f16c:	cmp	r1, r0
   1f170:	blt	1f278 <__assert_fail@plt+0xe190>
   1f174:	b	1f28c <__assert_fail@plt+0xe1a4>
   1f178:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f17c:	movw	r1, #0
   1f180:	cmp	r1, r0
   1f184:	bge	1f28c <__assert_fail@plt+0xe1a4>
   1f188:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f18c:	sub	r0, r0, #1
   1f190:	mvn	r1, #0
   1f194:	cmp	r1, r0
   1f198:	blt	1f278 <__assert_fail@plt+0xe190>
   1f19c:	b	1f28c <__assert_fail@plt+0xe1a4>
   1f1a0:	ldr	r0, [fp, #8]
   1f1a4:	movw	r1, #0
   1f1a8:	sdiv	r0, r1, r0
   1f1ac:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1f1b0:	cmp	r0, r1
   1f1b4:	blt	1f278 <__assert_fail@plt+0xe190>
   1f1b8:	b	1f28c <__assert_fail@plt+0xe1a4>
   1f1bc:	ldr	r0, [fp, #8]
   1f1c0:	cmp	r0, #0
   1f1c4:	bne	1f1cc <__assert_fail@plt+0xe0e4>
   1f1c8:	b	1f28c <__assert_fail@plt+0xe1a4>
   1f1cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f1d0:	cmp	r0, #0
   1f1d4:	bge	1f240 <__assert_fail@plt+0xe158>
   1f1d8:	b	1f1dc <__assert_fail@plt+0xe0f4>
   1f1dc:	b	1f224 <__assert_fail@plt+0xe13c>
   1f1e0:	b	1f224 <__assert_fail@plt+0xe13c>
   1f1e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f1e8:	cmn	r0, #1
   1f1ec:	bne	1f224 <__assert_fail@plt+0xe13c>
   1f1f0:	b	1f1f4 <__assert_fail@plt+0xe10c>
   1f1f4:	ldr	r0, [fp, #8]
   1f1f8:	add	r0, r0, #0
   1f1fc:	movw	r1, #0
   1f200:	cmp	r1, r0
   1f204:	blt	1f278 <__assert_fail@plt+0xe190>
   1f208:	b	1f28c <__assert_fail@plt+0xe1a4>
   1f20c:	ldr	r0, [fp, #8]
   1f210:	sub	r0, r0, #1
   1f214:	mvn	r1, #0
   1f218:	cmp	r1, r0
   1f21c:	blt	1f278 <__assert_fail@plt+0xe190>
   1f220:	b	1f28c <__assert_fail@plt+0xe1a4>
   1f224:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f228:	movw	r1, #0
   1f22c:	sdiv	r0, r1, r0
   1f230:	ldr	r1, [fp, #8]
   1f234:	cmp	r0, r1
   1f238:	blt	1f278 <__assert_fail@plt+0xe190>
   1f23c:	b	1f28c <__assert_fail@plt+0xe1a4>
   1f240:	ldr	r0, [fp, #8]
   1f244:	asr	r3, r0, #31
   1f248:	mvn	r1, #0
   1f24c:	str	r0, [sp, #8]
   1f250:	mov	r0, r1
   1f254:	ldr	r2, [sp, #8]
   1f258:	bl	21f88 <__assert_fail@plt+0x10ea0>
   1f25c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1f260:	subs	r0, r0, r2
   1f264:	sbcs	r1, r1, r2, asr #31
   1f268:	str	r0, [sp, #4]
   1f26c:	str	r1, [sp]
   1f270:	bcs	1f28c <__assert_fail@plt+0xe1a4>
   1f274:	b	1f278 <__assert_fail@plt+0xe190>
   1f278:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f27c:	ldr	r1, [fp, #8]
   1f280:	mul	r0, r0, r1
   1f284:	str	r0, [fp, #-28]	; 0xffffffe4
   1f288:	b	1f2a0 <__assert_fail@plt+0xe1b8>
   1f28c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f290:	ldr	r1, [fp, #8]
   1f294:	mul	r0, r0, r1
   1f298:	str	r0, [fp, #-28]	; 0xffffffe4
   1f29c:	b	1f2a4 <__assert_fail@plt+0xe1bc>
   1f2a0:	bl	1f47c <__assert_fail@plt+0xe394>
   1f2a4:	ldr	r0, [fp, #-4]
   1f2a8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1f2ac:	bl	1c738 <__assert_fail@plt+0xb650>
   1f2b0:	str	r0, [fp, #-4]
   1f2b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f2b8:	ldr	r1, [fp, #-8]
   1f2bc:	str	r0, [r1]
   1f2c0:	ldr	r0, [fp, #-4]
   1f2c4:	mov	sp, fp
   1f2c8:	pop	{fp, pc}
   1f2cc:	svcvc	0x00ffffff
   1f2d0:	andhi	r0, r0, r1
   1f2d4:	andhi	r0, r0, r0
   1f2d8:			; <UNDEFINED> instruction: 0xffff8000
   1f2dc:	push	{fp, lr}
   1f2e0:	mov	fp, sp
   1f2e4:	sub	sp, sp, #8
   1f2e8:	str	r0, [sp, #4]
   1f2ec:	ldr	r0, [sp, #4]
   1f2f0:	movw	r1, #1
   1f2f4:	bl	1f300 <__assert_fail@plt+0xe218>
   1f2f8:	mov	sp, fp
   1f2fc:	pop	{fp, pc}
   1f300:	push	{fp, lr}
   1f304:	mov	fp, sp
   1f308:	sub	sp, sp, #8
   1f30c:	str	r0, [sp, #4]
   1f310:	str	r1, [sp]
   1f314:	ldr	r0, [sp, #4]
   1f318:	ldr	r1, [sp]
   1f31c:	bl	21838 <__assert_fail@plt+0x10750>
   1f320:	bl	1c6c4 <__assert_fail@plt+0xb5dc>
   1f324:	mov	sp, fp
   1f328:	pop	{fp, pc}
   1f32c:	push	{fp, lr}
   1f330:	mov	fp, sp
   1f334:	sub	sp, sp, #8
   1f338:	str	r0, [sp, #4]
   1f33c:	ldr	r0, [sp, #4]
   1f340:	movw	r1, #1
   1f344:	bl	1f350 <__assert_fail@plt+0xe268>
   1f348:	mov	sp, fp
   1f34c:	pop	{fp, pc}
   1f350:	push	{fp, lr}
   1f354:	mov	fp, sp
   1f358:	sub	sp, sp, #8
   1f35c:	str	r0, [sp, #4]
   1f360:	str	r1, [sp]
   1f364:	ldr	r0, [sp, #4]
   1f368:	ldr	r1, [sp]
   1f36c:	bl	18158 <__assert_fail@plt+0x7070>
   1f370:	bl	1c6c4 <__assert_fail@plt+0xb5dc>
   1f374:	mov	sp, fp
   1f378:	pop	{fp, pc}
   1f37c:	push	{fp, lr}
   1f380:	mov	fp, sp
   1f384:	sub	sp, sp, #16
   1f388:	str	r0, [fp, #-4]
   1f38c:	str	r1, [sp, #8]
   1f390:	ldr	r0, [sp, #8]
   1f394:	bl	1c6a0 <__assert_fail@plt+0xb5b8>
   1f398:	ldr	r1, [fp, #-4]
   1f39c:	ldr	r2, [sp, #8]
   1f3a0:	str	r0, [sp, #4]
   1f3a4:	bl	10ee4 <memcpy@plt>
   1f3a8:	ldr	r0, [sp, #4]
   1f3ac:	mov	sp, fp
   1f3b0:	pop	{fp, pc}
   1f3b4:	push	{fp, lr}
   1f3b8:	mov	fp, sp
   1f3bc:	sub	sp, sp, #16
   1f3c0:	str	r0, [fp, #-4]
   1f3c4:	str	r1, [sp, #8]
   1f3c8:	ldr	r0, [sp, #8]
   1f3cc:	bl	1c6f4 <__assert_fail@plt+0xb60c>
   1f3d0:	ldr	r1, [fp, #-4]
   1f3d4:	ldr	r2, [sp, #8]
   1f3d8:	str	r0, [sp, #4]
   1f3dc:	bl	10ee4 <memcpy@plt>
   1f3e0:	ldr	r0, [sp, #4]
   1f3e4:	mov	sp, fp
   1f3e8:	pop	{fp, pc}
   1f3ec:	push	{fp, lr}
   1f3f0:	mov	fp, sp
   1f3f4:	sub	sp, sp, #16
   1f3f8:	str	r0, [fp, #-4]
   1f3fc:	str	r1, [sp, #8]
   1f400:	ldr	r0, [sp, #8]
   1f404:	add	r0, r0, #1
   1f408:	bl	1c6f4 <__assert_fail@plt+0xb60c>
   1f40c:	str	r0, [sp, #4]
   1f410:	ldr	r0, [sp, #4]
   1f414:	ldr	r1, [sp, #8]
   1f418:	add	r0, r0, r1
   1f41c:	movw	r1, #0
   1f420:	strb	r1, [r0]
   1f424:	ldr	r0, [sp, #4]
   1f428:	ldr	r1, [fp, #-4]
   1f42c:	ldr	r2, [sp, #8]
   1f430:	str	r0, [sp]
   1f434:	bl	10ee4 <memcpy@plt>
   1f438:	ldr	r0, [sp]
   1f43c:	mov	sp, fp
   1f440:	pop	{fp, pc}
   1f444:	push	{fp, lr}
   1f448:	mov	fp, sp
   1f44c:	sub	sp, sp, #8
   1f450:	str	r0, [sp, #4]
   1f454:	ldr	r0, [sp, #4]
   1f458:	ldr	r1, [sp, #4]
   1f45c:	str	r0, [sp]
   1f460:	mov	r0, r1
   1f464:	bl	10fec <strlen@plt>
   1f468:	add	r1, r0, #1
   1f46c:	ldr	r0, [sp]
   1f470:	bl	1f37c <__assert_fail@plt+0xe294>
   1f474:	mov	sp, fp
   1f478:	pop	{fp, pc}
   1f47c:	push	{fp, lr}
   1f480:	mov	fp, sp
   1f484:	sub	sp, sp, #8
   1f488:	movw	r0, #16628	; 0x40f4
   1f48c:	movt	r0, #3
   1f490:	ldr	r0, [r0]
   1f494:	movw	r1, #13148	; 0x335c
   1f498:	movt	r1, #2
   1f49c:	str	r0, [sp, #4]
   1f4a0:	mov	r0, r1
   1f4a4:	bl	10fe0 <gettext@plt>
   1f4a8:	ldr	r1, [sp, #4]
   1f4ac:	str	r0, [sp]
   1f4b0:	mov	r0, r1
   1f4b4:	movw	r1, #0
   1f4b8:	movw	r2, #10012	; 0x271c
   1f4bc:	movt	r2, #2
   1f4c0:	ldr	r3, [sp]
   1f4c4:	bl	10f80 <error@plt>
   1f4c8:	bl	110d0 <abort@plt>
   1f4cc:	bx	lr
   1f4d0:	push	{fp, lr}
   1f4d4:	mov	fp, sp
   1f4d8:	sub	sp, sp, #8
   1f4dc:	str	r0, [sp, #4]
   1f4e0:	str	r1, [sp]
   1f4e4:	ldr	r0, [sp, #4]
   1f4e8:	ldr	r1, [sp]
   1f4ec:	bl	21a00 <__assert_fail@plt+0x10918>
   1f4f0:	cmp	r0, #0
   1f4f4:	bge	1f4fc <__assert_fail@plt+0xe414>
   1f4f8:	bl	1f4cc <__assert_fail@plt+0xe3e4>
   1f4fc:	mov	sp, fp
   1f500:	pop	{fp, pc}
   1f504:	push	{fp, lr}
   1f508:	mov	fp, sp
   1f50c:	sub	sp, sp, #80	; 0x50
   1f510:	ldr	ip, [fp, #8]
   1f514:	str	r0, [fp, #-8]
   1f518:	str	r1, [fp, #-12]
   1f51c:	str	r2, [fp, #-16]
   1f520:	str	r3, [fp, #-20]	; 0xffffffec
   1f524:	movw	r0, #0
   1f528:	str	r0, [sp, #36]	; 0x24
   1f52c:	ldr	r1, [fp, #-16]
   1f530:	cmp	r0, r1
   1f534:	str	ip, [sp, #20]
   1f538:	bgt	1f54c <__assert_fail@plt+0xe464>
   1f53c:	ldr	r0, [fp, #-16]
   1f540:	cmp	r0, #36	; 0x24
   1f544:	bgt	1f54c <__assert_fail@plt+0xe464>
   1f548:	b	1f56c <__assert_fail@plt+0xe484>
   1f54c:	movw	r0, #13165	; 0x336d
   1f550:	movt	r0, #2
   1f554:	movw	r1, #13203	; 0x3393
   1f558:	movt	r1, #2
   1f55c:	movw	r2, #85	; 0x55
   1f560:	movw	r3, #13219	; 0x33a3
   1f564:	movt	r3, #2
   1f568:	bl	110e8 <__assert_fail@plt>
   1f56c:	ldr	r0, [fp, #-12]
   1f570:	movw	r1, #0
   1f574:	cmp	r0, r1
   1f578:	beq	1f588 <__assert_fail@plt+0xe4a0>
   1f57c:	ldr	r0, [fp, #-12]
   1f580:	str	r0, [sp, #16]
   1f584:	b	1f594 <__assert_fail@plt+0xe4ac>
   1f588:	sub	r0, fp, #24
   1f58c:	str	r0, [sp, #16]
   1f590:	b	1f594 <__assert_fail@plt+0xe4ac>
   1f594:	ldr	r0, [sp, #16]
   1f598:	str	r0, [fp, #-28]	; 0xffffffe4
   1f59c:	bl	11010 <__errno_location@plt>
   1f5a0:	mov	lr, #0
   1f5a4:	str	lr, [r0]
   1f5a8:	ldr	r0, [fp, #-8]
   1f5ac:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1f5b0:	ldr	r2, [fp, #-16]
   1f5b4:	bl	1104c <strtoimax@plt>
   1f5b8:	str	r1, [sp, #44]	; 0x2c
   1f5bc:	str	r0, [sp, #40]	; 0x28
   1f5c0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1f5c4:	ldr	r0, [r0]
   1f5c8:	ldr	r1, [fp, #-8]
   1f5cc:	cmp	r0, r1
   1f5d0:	bne	1f63c <__assert_fail@plt+0xe554>
   1f5d4:	ldr	r0, [fp, #8]
   1f5d8:	movw	r1, #0
   1f5dc:	cmp	r0, r1
   1f5e0:	beq	1f62c <__assert_fail@plt+0xe544>
   1f5e4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1f5e8:	ldr	r0, [r0]
   1f5ec:	ldrb	r0, [r0]
   1f5f0:	cmp	r0, #0
   1f5f4:	beq	1f62c <__assert_fail@plt+0xe544>
   1f5f8:	ldr	r0, [fp, #8]
   1f5fc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1f600:	ldr	r1, [r1]
   1f604:	ldrb	r1, [r1]
   1f608:	bl	10ff8 <strchr@plt>
   1f60c:	movw	r1, #0
   1f610:	cmp	r0, r1
   1f614:	beq	1f62c <__assert_fail@plt+0xe544>
   1f618:	mov	r0, #0
   1f61c:	str	r0, [sp, #44]	; 0x2c
   1f620:	mov	r0, #1
   1f624:	str	r0, [sp, #40]	; 0x28
   1f628:	b	1f638 <__assert_fail@plt+0xe550>
   1f62c:	movw	r0, #4
   1f630:	str	r0, [fp, #-4]
   1f634:	b	1fb24 <__assert_fail@plt+0xea3c>
   1f638:	b	1f674 <__assert_fail@plt+0xe58c>
   1f63c:	bl	11010 <__errno_location@plt>
   1f640:	ldr	r0, [r0]
   1f644:	cmp	r0, #0
   1f648:	beq	1f670 <__assert_fail@plt+0xe588>
   1f64c:	bl	11010 <__errno_location@plt>
   1f650:	ldr	r0, [r0]
   1f654:	cmp	r0, #34	; 0x22
   1f658:	beq	1f668 <__assert_fail@plt+0xe580>
   1f65c:	movw	r0, #4
   1f660:	str	r0, [fp, #-4]
   1f664:	b	1fb24 <__assert_fail@plt+0xea3c>
   1f668:	movw	r0, #1
   1f66c:	str	r0, [sp, #36]	; 0x24
   1f670:	b	1f674 <__assert_fail@plt+0xe58c>
   1f674:	ldr	r0, [fp, #8]
   1f678:	movw	r1, #0
   1f67c:	cmp	r0, r1
   1f680:	bne	1f6a4 <__assert_fail@plt+0xe5bc>
   1f684:	ldr	r0, [sp, #40]	; 0x28
   1f688:	ldr	r1, [sp, #44]	; 0x2c
   1f68c:	ldr	r2, [fp, #-20]	; 0xffffffec
   1f690:	str	r1, [r2, #4]
   1f694:	str	r0, [r2]
   1f698:	ldr	r0, [sp, #36]	; 0x24
   1f69c:	str	r0, [fp, #-4]
   1f6a0:	b	1fb24 <__assert_fail@plt+0xea3c>
   1f6a4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1f6a8:	ldr	r0, [r0]
   1f6ac:	ldrb	r0, [r0]
   1f6b0:	cmp	r0, #0
   1f6b4:	beq	1fb08 <__assert_fail@plt+0xea20>
   1f6b8:	movw	r0, #1024	; 0x400
   1f6bc:	str	r0, [sp, #32]
   1f6c0:	movw	r0, #1
   1f6c4:	str	r0, [sp, #28]
   1f6c8:	ldr	r0, [fp, #8]
   1f6cc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1f6d0:	ldr	r1, [r1]
   1f6d4:	ldrb	r1, [r1]
   1f6d8:	bl	10ff8 <strchr@plt>
   1f6dc:	movw	r1, #0
   1f6e0:	cmp	r0, r1
   1f6e4:	bne	1f70c <__assert_fail@plt+0xe624>
   1f6e8:	ldr	r0, [sp, #40]	; 0x28
   1f6ec:	ldr	r1, [sp, #44]	; 0x2c
   1f6f0:	ldr	r2, [fp, #-20]	; 0xffffffec
   1f6f4:	str	r1, [r2, #4]
   1f6f8:	str	r0, [r2]
   1f6fc:	ldr	r0, [sp, #36]	; 0x24
   1f700:	orr	r0, r0, #2
   1f704:	str	r0, [fp, #-4]
   1f708:	b	1fb24 <__assert_fail@plt+0xea3c>
   1f70c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1f710:	ldr	r0, [r0]
   1f714:	ldrb	r0, [r0]
   1f718:	sub	r0, r0, #69	; 0x45
   1f71c:	cmp	r0, #47	; 0x2f
   1f720:	str	r0, [sp, #12]
   1f724:	bhi	1f890 <__assert_fail@plt+0xe7a8>
   1f728:	add	r0, pc, #8
   1f72c:	ldr	r1, [sp, #12]
   1f730:	ldr	r0, [r0, r1, lsl #2]
   1f734:	mov	pc, r0
   1f738:	strdeq	pc, [r1], -r8
   1f73c:	muleq	r1, r0, r8
   1f740:	strdeq	pc, [r1], -r8
   1f744:	muleq	r1, r0, r8
   1f748:	muleq	r1, r0, r8
   1f74c:	muleq	r1, r0, r8
   1f750:	strdeq	pc, [r1], -r8
   1f754:	muleq	r1, r0, r8
   1f758:	strdeq	pc, [r1], -r8
   1f75c:	muleq	r1, r0, r8
   1f760:	muleq	r1, r0, r8
   1f764:	strdeq	pc, [r1], -r8
   1f768:	muleq	r1, r0, r8
   1f76c:	muleq	r1, r0, r8
   1f770:	muleq	r1, r0, r8
   1f774:	strdeq	pc, [r1], -r8
   1f778:	muleq	r1, r0, r8
   1f77c:	muleq	r1, r0, r8
   1f780:	muleq	r1, r0, r8
   1f784:	muleq	r1, r0, r8
   1f788:	strdeq	pc, [r1], -r8
   1f78c:	strdeq	pc, [r1], -r8
   1f790:	muleq	r1, r0, r8
   1f794:	muleq	r1, r0, r8
   1f798:	muleq	r1, r0, r8
   1f79c:	muleq	r1, r0, r8
   1f7a0:	muleq	r1, r0, r8
   1f7a4:	muleq	r1, r0, r8
   1f7a8:	muleq	r1, r0, r8
   1f7ac:	muleq	r1, r0, r8
   1f7b0:	muleq	r1, r0, r8
   1f7b4:	muleq	r1, r0, r8
   1f7b8:	muleq	r1, r0, r8
   1f7bc:	muleq	r1, r0, r8
   1f7c0:	strdeq	pc, [r1], -r8
   1f7c4:	muleq	r1, r0, r8
   1f7c8:	muleq	r1, r0, r8
   1f7cc:	muleq	r1, r0, r8
   1f7d0:	strdeq	pc, [r1], -r8
   1f7d4:	muleq	r1, r0, r8
   1f7d8:	strdeq	pc, [r1], -r8
   1f7dc:	muleq	r1, r0, r8
   1f7e0:	muleq	r1, r0, r8
   1f7e4:	muleq	r1, r0, r8
   1f7e8:	muleq	r1, r0, r8
   1f7ec:	muleq	r1, r0, r8
   1f7f0:	muleq	r1, r0, r8
   1f7f4:	strdeq	pc, [r1], -r8
   1f7f8:	ldr	r0, [fp, #8]
   1f7fc:	movw	r1, #48	; 0x30
   1f800:	bl	10ff8 <strchr@plt>
   1f804:	movw	r1, #0
   1f808:	cmp	r0, r1
   1f80c:	beq	1f88c <__assert_fail@plt+0xe7a4>
   1f810:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1f814:	ldr	r0, [r0]
   1f818:	ldrb	r0, [r0, #1]
   1f81c:	mov	r1, r0
   1f820:	cmp	r0, #66	; 0x42
   1f824:	str	r1, [sp, #8]
   1f828:	beq	1f874 <__assert_fail@plt+0xe78c>
   1f82c:	b	1f830 <__assert_fail@plt+0xe748>
   1f830:	ldr	r0, [sp, #8]
   1f834:	cmp	r0, #68	; 0x44
   1f838:	beq	1f874 <__assert_fail@plt+0xe78c>
   1f83c:	b	1f840 <__assert_fail@plt+0xe758>
   1f840:	ldr	r0, [sp, #8]
   1f844:	cmp	r0, #105	; 0x69
   1f848:	bne	1f888 <__assert_fail@plt+0xe7a0>
   1f84c:	b	1f850 <__assert_fail@plt+0xe768>
   1f850:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1f854:	ldr	r0, [r0]
   1f858:	ldrb	r0, [r0, #2]
   1f85c:	cmp	r0, #66	; 0x42
   1f860:	bne	1f870 <__assert_fail@plt+0xe788>
   1f864:	ldr	r0, [sp, #28]
   1f868:	add	r0, r0, #2
   1f86c:	str	r0, [sp, #28]
   1f870:	b	1f888 <__assert_fail@plt+0xe7a0>
   1f874:	movw	r0, #1000	; 0x3e8
   1f878:	str	r0, [sp, #32]
   1f87c:	ldr	r0, [sp, #28]
   1f880:	add	r0, r0, #1
   1f884:	str	r0, [sp, #28]
   1f888:	b	1f88c <__assert_fail@plt+0xe7a4>
   1f88c:	b	1f890 <__assert_fail@plt+0xe7a8>
   1f890:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1f894:	ldr	r0, [r0]
   1f898:	ldrb	r0, [r0]
   1f89c:	sub	r0, r0, #66	; 0x42
   1f8a0:	cmp	r0, #53	; 0x35
   1f8a4:	str	r0, [sp, #4]
   1f8a8:	bhi	1fa9c <__assert_fail@plt+0xe9b4>
   1f8ac:	add	r0, pc, #8
   1f8b0:	ldr	r1, [sp, #4]
   1f8b4:	ldr	r0, [r0, r1, lsl #2]
   1f8b8:	mov	pc, r0
   1f8bc:	andeq	pc, r1, r8, lsr #19
   1f8c0:	muleq	r1, ip, sl
   1f8c4:	muleq	r1, ip, sl
   1f8c8:	andeq	pc, r1, r8, asr #19
   1f8cc:	muleq	r1, ip, sl
   1f8d0:	andeq	pc, r1, r0, ror #19
   1f8d4:	muleq	r1, ip, sl
   1f8d8:	muleq	r1, ip, sl
   1f8dc:	muleq	r1, ip, sl
   1f8e0:	strdeq	pc, [r1], -r8
   1f8e4:	muleq	r1, ip, sl
   1f8e8:	andeq	pc, r1, r0, lsl sl	; <UNPREDICTABLE>
   1f8ec:	muleq	r1, ip, sl
   1f8f0:	muleq	r1, ip, sl
   1f8f4:	andeq	pc, r1, r8, lsr #20
   1f8f8:	muleq	r1, ip, sl
   1f8fc:	muleq	r1, ip, sl
   1f900:	muleq	r1, ip, sl
   1f904:	andeq	pc, r1, r0, asr #20
   1f908:	muleq	r1, ip, sl
   1f90c:	muleq	r1, ip, sl
   1f910:	muleq	r1, ip, sl
   1f914:	muleq	r1, ip, sl
   1f918:	andeq	pc, r1, ip, ror #20
   1f91c:	andeq	pc, r1, r4, lsl #21
   1f920:	muleq	r1, ip, sl
   1f924:	muleq	r1, ip, sl
   1f928:	muleq	r1, ip, sl
   1f92c:	muleq	r1, ip, sl
   1f930:	muleq	r1, ip, sl
   1f934:	muleq	r1, ip, sl
   1f938:	muleq	r1, ip, sl
   1f93c:	muleq	r1, r4, r9
   1f940:			; <UNDEFINED> instruction: 0x0001f9bc
   1f944:	muleq	r1, ip, sl
   1f948:	muleq	r1, ip, sl
   1f94c:	muleq	r1, ip, sl
   1f950:	andeq	pc, r1, r0, ror #19
   1f954:	muleq	r1, ip, sl
   1f958:	muleq	r1, ip, sl
   1f95c:	muleq	r1, ip, sl
   1f960:	strdeq	pc, [r1], -r8
   1f964:	muleq	r1, ip, sl
   1f968:	andeq	pc, r1, r0, lsl sl	; <UNPREDICTABLE>
   1f96c:	muleq	r1, ip, sl
   1f970:	muleq	r1, ip, sl
   1f974:	muleq	r1, ip, sl
   1f978:	muleq	r1, ip, sl
   1f97c:	muleq	r1, ip, sl
   1f980:	muleq	r1, ip, sl
   1f984:	andeq	pc, r1, r0, asr #20
   1f988:	muleq	r1, ip, sl
   1f98c:	muleq	r1, ip, sl
   1f990:	andeq	pc, r1, r8, asr sl	; <UNPREDICTABLE>
   1f994:	add	r0, sp, #40	; 0x28
   1f998:	movw	r1, #512	; 0x200
   1f99c:	bl	1fb30 <__assert_fail@plt+0xea48>
   1f9a0:	str	r0, [sp, #24]
   1f9a4:	b	1fac0 <__assert_fail@plt+0xe9d8>
   1f9a8:	add	r0, sp, #40	; 0x28
   1f9ac:	movw	r1, #1024	; 0x400
   1f9b0:	bl	1fb30 <__assert_fail@plt+0xea48>
   1f9b4:	str	r0, [sp, #24]
   1f9b8:	b	1fac0 <__assert_fail@plt+0xe9d8>
   1f9bc:	movw	r0, #0
   1f9c0:	str	r0, [sp, #24]
   1f9c4:	b	1fac0 <__assert_fail@plt+0xe9d8>
   1f9c8:	ldr	r1, [sp, #32]
   1f9cc:	add	r0, sp, #40	; 0x28
   1f9d0:	movw	r2, #6
   1f9d4:	bl	217d8 <__assert_fail@plt+0x106f0>
   1f9d8:	str	r0, [sp, #24]
   1f9dc:	b	1fac0 <__assert_fail@plt+0xe9d8>
   1f9e0:	ldr	r1, [sp, #32]
   1f9e4:	add	r0, sp, #40	; 0x28
   1f9e8:	movw	r2, #3
   1f9ec:	bl	217d8 <__assert_fail@plt+0x106f0>
   1f9f0:	str	r0, [sp, #24]
   1f9f4:	b	1fac0 <__assert_fail@plt+0xe9d8>
   1f9f8:	ldr	r1, [sp, #32]
   1f9fc:	add	r0, sp, #40	; 0x28
   1fa00:	movw	r2, #1
   1fa04:	bl	217d8 <__assert_fail@plt+0x106f0>
   1fa08:	str	r0, [sp, #24]
   1fa0c:	b	1fac0 <__assert_fail@plt+0xe9d8>
   1fa10:	ldr	r1, [sp, #32]
   1fa14:	add	r0, sp, #40	; 0x28
   1fa18:	movw	r2, #2
   1fa1c:	bl	217d8 <__assert_fail@plt+0x106f0>
   1fa20:	str	r0, [sp, #24]
   1fa24:	b	1fac0 <__assert_fail@plt+0xe9d8>
   1fa28:	ldr	r1, [sp, #32]
   1fa2c:	add	r0, sp, #40	; 0x28
   1fa30:	movw	r2, #5
   1fa34:	bl	217d8 <__assert_fail@plt+0x106f0>
   1fa38:	str	r0, [sp, #24]
   1fa3c:	b	1fac0 <__assert_fail@plt+0xe9d8>
   1fa40:	ldr	r1, [sp, #32]
   1fa44:	add	r0, sp, #40	; 0x28
   1fa48:	movw	r2, #4
   1fa4c:	bl	217d8 <__assert_fail@plt+0x106f0>
   1fa50:	str	r0, [sp, #24]
   1fa54:	b	1fac0 <__assert_fail@plt+0xe9d8>
   1fa58:	add	r0, sp, #40	; 0x28
   1fa5c:	movw	r1, #2
   1fa60:	bl	1fb30 <__assert_fail@plt+0xea48>
   1fa64:	str	r0, [sp, #24]
   1fa68:	b	1fac0 <__assert_fail@plt+0xe9d8>
   1fa6c:	ldr	r1, [sp, #32]
   1fa70:	add	r0, sp, #40	; 0x28
   1fa74:	movw	r2, #8
   1fa78:	bl	217d8 <__assert_fail@plt+0x106f0>
   1fa7c:	str	r0, [sp, #24]
   1fa80:	b	1fac0 <__assert_fail@plt+0xe9d8>
   1fa84:	ldr	r1, [sp, #32]
   1fa88:	add	r0, sp, #40	; 0x28
   1fa8c:	movw	r2, #7
   1fa90:	bl	217d8 <__assert_fail@plt+0x106f0>
   1fa94:	str	r0, [sp, #24]
   1fa98:	b	1fac0 <__assert_fail@plt+0xe9d8>
   1fa9c:	ldr	r0, [sp, #40]	; 0x28
   1faa0:	ldr	r1, [sp, #44]	; 0x2c
   1faa4:	ldr	r2, [fp, #-20]	; 0xffffffec
   1faa8:	str	r1, [r2, #4]
   1faac:	str	r0, [r2]
   1fab0:	ldr	r0, [sp, #36]	; 0x24
   1fab4:	orr	r0, r0, #2
   1fab8:	str	r0, [fp, #-4]
   1fabc:	b	1fb24 <__assert_fail@plt+0xea3c>
   1fac0:	ldr	r0, [sp, #24]
   1fac4:	ldr	r1, [sp, #36]	; 0x24
   1fac8:	orr	r0, r1, r0
   1facc:	str	r0, [sp, #36]	; 0x24
   1fad0:	ldr	r0, [sp, #28]
   1fad4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1fad8:	ldr	r2, [r1]
   1fadc:	add	r0, r2, r0
   1fae0:	str	r0, [r1]
   1fae4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1fae8:	ldr	r0, [r0]
   1faec:	ldrsb	r0, [r0]
   1faf0:	cmp	r0, #0
   1faf4:	beq	1fb04 <__assert_fail@plt+0xea1c>
   1faf8:	ldr	r0, [sp, #36]	; 0x24
   1fafc:	orr	r0, r0, #2
   1fb00:	str	r0, [sp, #36]	; 0x24
   1fb04:	b	1fb08 <__assert_fail@plt+0xea20>
   1fb08:	ldr	r0, [sp, #40]	; 0x28
   1fb0c:	ldr	r1, [sp, #44]	; 0x2c
   1fb10:	ldr	r2, [fp, #-20]	; 0xffffffec
   1fb14:	str	r1, [r2, #4]
   1fb18:	str	r0, [r2]
   1fb1c:	ldr	r0, [sp, #36]	; 0x24
   1fb20:	str	r0, [fp, #-4]
   1fb24:	ldr	r0, [fp, #-4]
   1fb28:	mov	sp, fp
   1fb2c:	pop	{fp, pc}
   1fb30:	push	{fp, lr}
   1fb34:	mov	fp, sp
   1fb38:	sub	sp, sp, #752	; 0x2f0
   1fb3c:	str	r0, [fp, #-8]
   1fb40:	str	r1, [fp, #-12]
   1fb44:	b	200cc <__assert_fail@plt+0xefe4>
   1fb48:	b	1fb4c <__assert_fail@plt+0xea64>
   1fb4c:	ldr	r0, [fp, #-12]
   1fb50:	cmp	r0, #0
   1fb54:	bge	1fce4 <__assert_fail@plt+0xebfc>
   1fb58:	ldr	r0, [fp, #-8]
   1fb5c:	ldr	r0, [r0, #4]
   1fb60:	cmn	r0, #1
   1fb64:	bgt	1fc1c <__assert_fail@plt+0xeb34>
   1fb68:	b	1fb6c <__assert_fail@plt+0xea84>
   1fb6c:	b	1fb70 <__assert_fail@plt+0xea88>
   1fb70:	ldr	r0, [fp, #-8]
   1fb74:	ldr	r1, [r0]
   1fb78:	ldr	r0, [r0, #4]
   1fb7c:	ldr	r2, [fp, #-12]
   1fb80:	mov	r3, #127	; 0x7f
   1fb84:	sdiv	r2, r3, r2
   1fb88:	subs	r1, r1, r2
   1fb8c:	sbcs	r0, r0, r2, asr #31
   1fb90:	str	r1, [fp, #-28]	; 0xffffffe4
   1fb94:	str	r0, [fp, #-32]	; 0xffffffe0
   1fb98:	blt	1fdcc <__assert_fail@plt+0xece4>
   1fb9c:	b	1fdf0 <__assert_fail@plt+0xed08>
   1fba0:	b	1fba4 <__assert_fail@plt+0xeabc>
   1fba4:	ldr	r0, [pc, #4064]	; 20b8c <__assert_fail@plt+0xfaa4>
   1fba8:	ldr	r1, [fp, #-12]
   1fbac:	cmp	r1, r0
   1fbb0:	blt	1fbc8 <__assert_fail@plt+0xeae0>
   1fbb4:	b	1fbd4 <__assert_fail@plt+0xeaec>
   1fbb8:	ldr	r0, [fp, #-12]
   1fbbc:	movw	r1, #0
   1fbc0:	cmp	r1, r0
   1fbc4:	bge	1fbd4 <__assert_fail@plt+0xeaec>
   1fbc8:	movw	r0, #0
   1fbcc:	str	r0, [fp, #-36]	; 0xffffffdc
   1fbd0:	b	1fbec <__assert_fail@plt+0xeb04>
   1fbd4:	ldr	r0, [fp, #-12]
   1fbd8:	movw	r1, #0
   1fbdc:	sub	r0, r1, r0
   1fbe0:	movw	r1, #127	; 0x7f
   1fbe4:	sdiv	r0, r1, r0
   1fbe8:	str	r0, [fp, #-36]	; 0xffffffdc
   1fbec:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1fbf0:	ldr	r1, [fp, #-8]
   1fbf4:	ldr	r2, [r1]
   1fbf8:	ldr	r1, [r1, #4]
   1fbfc:	mvn	r1, r1
   1fc00:	mvn	r2, r2
   1fc04:	subs	r2, r2, r0
   1fc08:	sbcs	r0, r1, r0, asr #31
   1fc0c:	str	r2, [fp, #-40]	; 0xffffffd8
   1fc10:	str	r0, [fp, #-44]	; 0xffffffd4
   1fc14:	bge	1fdcc <__assert_fail@plt+0xece4>
   1fc18:	b	1fdf0 <__assert_fail@plt+0xed08>
   1fc1c:	b	1fc20 <__assert_fail@plt+0xeb38>
   1fc20:	b	1fcb4 <__assert_fail@plt+0xebcc>
   1fc24:	b	1fcb4 <__assert_fail@plt+0xebcc>
   1fc28:	ldr	r0, [fp, #-12]
   1fc2c:	cmn	r0, #1
   1fc30:	bne	1fcb4 <__assert_fail@plt+0xebcc>
   1fc34:	b	1fc38 <__assert_fail@plt+0xeb50>
   1fc38:	ldr	r0, [fp, #-8]
   1fc3c:	ldr	r1, [r0]
   1fc40:	ldr	r0, [r0, #4]
   1fc44:	subs	r1, r1, #128	; 0x80
   1fc48:	sbc	r0, r0, #0
   1fc4c:	rsbs	r1, r1, #0
   1fc50:	rscs	r0, r0, #0
   1fc54:	str	r1, [fp, #-48]	; 0xffffffd0
   1fc58:	str	r0, [fp, #-52]	; 0xffffffcc
   1fc5c:	blt	1fdcc <__assert_fail@plt+0xece4>
   1fc60:	b	1fdf0 <__assert_fail@plt+0xed08>
   1fc64:	ldr	r0, [fp, #-8]
   1fc68:	ldr	r1, [r0]
   1fc6c:	ldr	r0, [r0, #4]
   1fc70:	subs	r1, r1, #1
   1fc74:	sbcs	r0, r0, #0
   1fc78:	str	r1, [fp, #-56]	; 0xffffffc8
   1fc7c:	str	r0, [fp, #-60]	; 0xffffffc4
   1fc80:	blt	1fdf0 <__assert_fail@plt+0xed08>
   1fc84:	b	1fc88 <__assert_fail@plt+0xeba0>
   1fc88:	ldr	r0, [fp, #-8]
   1fc8c:	ldr	r1, [r0]
   1fc90:	ldr	r0, [r0, #4]
   1fc94:	subs	r1, r1, #1
   1fc98:	sbc	r0, r0, #0
   1fc9c:	rsbs	r1, r1, #127	; 0x7f
   1fca0:	rscs	r0, r0, #0
   1fca4:	str	r1, [fp, #-64]	; 0xffffffc0
   1fca8:	str	r0, [fp, #-68]	; 0xffffffbc
   1fcac:	blt	1fdcc <__assert_fail@plt+0xece4>
   1fcb0:	b	1fdf0 <__assert_fail@plt+0xed08>
   1fcb4:	ldr	r0, [fp, #-12]
   1fcb8:	mvn	r1, #127	; 0x7f
   1fcbc:	sdiv	r0, r1, r0
   1fcc0:	ldr	r1, [fp, #-8]
   1fcc4:	ldr	r2, [r1]
   1fcc8:	ldr	r1, [r1, #4]
   1fccc:	subs	r2, r0, r2
   1fcd0:	rscs	r0, r1, r0, asr #31
   1fcd4:	str	r2, [fp, #-72]	; 0xffffffb8
   1fcd8:	str	r0, [fp, #-76]	; 0xffffffb4
   1fcdc:	blt	1fdcc <__assert_fail@plt+0xece4>
   1fce0:	b	1fdf0 <__assert_fail@plt+0xed08>
   1fce4:	ldr	r0, [fp, #-12]
   1fce8:	cmp	r0, #0
   1fcec:	bne	1fcf4 <__assert_fail@plt+0xec0c>
   1fcf0:	b	1fdf0 <__assert_fail@plt+0xed08>
   1fcf4:	ldr	r0, [fp, #-8]
   1fcf8:	ldr	r0, [r0, #4]
   1fcfc:	cmn	r0, #1
   1fd00:	bgt	1fd9c <__assert_fail@plt+0xecb4>
   1fd04:	b	1fd08 <__assert_fail@plt+0xec20>
   1fd08:	b	1fd0c <__assert_fail@plt+0xec24>
   1fd0c:	b	1fd68 <__assert_fail@plt+0xec80>
   1fd10:	b	1fd68 <__assert_fail@plt+0xec80>
   1fd14:	ldr	r0, [fp, #-8]
   1fd18:	ldr	r1, [r0]
   1fd1c:	ldr	r0, [r0, #4]
   1fd20:	and	r0, r1, r0
   1fd24:	cmn	r0, #1
   1fd28:	bne	1fd68 <__assert_fail@plt+0xec80>
   1fd2c:	b	1fd30 <__assert_fail@plt+0xec48>
   1fd30:	b	1fd34 <__assert_fail@plt+0xec4c>
   1fd34:	ldr	r0, [fp, #-12]
   1fd38:	mvn	r1, #127	; 0x7f
   1fd3c:	add	r0, r0, r1
   1fd40:	movw	r1, #0
   1fd44:	cmp	r1, r0
   1fd48:	blt	1fdcc <__assert_fail@plt+0xece4>
   1fd4c:	b	1fdf0 <__assert_fail@plt+0xed08>
   1fd50:	ldr	r0, [fp, #-12]
   1fd54:	sub	r0, r0, #1
   1fd58:	movw	r1, #127	; 0x7f
   1fd5c:	cmp	r1, r0
   1fd60:	blt	1fdcc <__assert_fail@plt+0xece4>
   1fd64:	b	1fdf0 <__assert_fail@plt+0xed08>
   1fd68:	ldr	r0, [fp, #-8]
   1fd6c:	ldr	r2, [r0]
   1fd70:	ldr	r3, [r0, #4]
   1fd74:	mvn	r0, #127	; 0x7f
   1fd78:	mvn	r1, #0
   1fd7c:	bl	21eb4 <__assert_fail@plt+0x10dcc>
   1fd80:	ldr	r2, [fp, #-12]
   1fd84:	subs	r0, r0, r2
   1fd88:	sbcs	r1, r1, r2, asr #31
   1fd8c:	str	r0, [fp, #-80]	; 0xffffffb0
   1fd90:	str	r1, [fp, #-84]	; 0xffffffac
   1fd94:	blt	1fdcc <__assert_fail@plt+0xece4>
   1fd98:	b	1fdf0 <__assert_fail@plt+0xed08>
   1fd9c:	ldr	r0, [fp, #-12]
   1fda0:	mov	r1, #127	; 0x7f
   1fda4:	sdiv	r0, r1, r0
   1fda8:	ldr	r1, [fp, #-8]
   1fdac:	ldr	r2, [r1]
   1fdb0:	ldr	r1, [r1, #4]
   1fdb4:	subs	r2, r0, r2
   1fdb8:	rscs	r0, r1, r0, asr #31
   1fdbc:	str	r2, [fp, #-88]	; 0xffffffa8
   1fdc0:	str	r0, [fp, #-92]	; 0xffffffa4
   1fdc4:	bge	1fdf0 <__assert_fail@plt+0xed08>
   1fdc8:	b	1fdcc <__assert_fail@plt+0xece4>
   1fdcc:	ldr	r0, [fp, #-8]
   1fdd0:	ldr	r0, [r0]
   1fdd4:	ldr	r1, [fp, #-12]
   1fdd8:	mul	r0, r0, r1
   1fddc:	sxtb	r0, r0
   1fde0:	asr	r1, r0, #31
   1fde4:	str	r0, [fp, #-24]	; 0xffffffe8
   1fde8:	str	r1, [fp, #-20]	; 0xffffffec
   1fdec:	b	21774 <__assert_fail@plt+0x1068c>
   1fdf0:	ldr	r0, [fp, #-8]
   1fdf4:	ldr	r0, [r0]
   1fdf8:	ldr	r1, [fp, #-12]
   1fdfc:	mul	r0, r0, r1
   1fe00:	sxtb	r0, r0
   1fe04:	asr	r1, r0, #31
   1fe08:	str	r0, [fp, #-24]	; 0xffffffe8
   1fe0c:	str	r1, [fp, #-20]	; 0xffffffec
   1fe10:	b	217a8 <__assert_fail@plt+0x106c0>
   1fe14:	ldr	r0, [fp, #-12]
   1fe18:	cmp	r0, #0
   1fe1c:	bge	1ff9c <__assert_fail@plt+0xeeb4>
   1fe20:	ldr	r0, [fp, #-8]
   1fe24:	ldr	r0, [r0, #4]
   1fe28:	cmn	r0, #1
   1fe2c:	bgt	1fee4 <__assert_fail@plt+0xedfc>
   1fe30:	b	1fe34 <__assert_fail@plt+0xed4c>
   1fe34:	b	1fe38 <__assert_fail@plt+0xed50>
   1fe38:	ldr	r0, [fp, #-8]
   1fe3c:	ldr	r1, [r0]
   1fe40:	ldr	r0, [r0, #4]
   1fe44:	ldr	r2, [fp, #-12]
   1fe48:	mov	r3, #255	; 0xff
   1fe4c:	sdiv	r2, r3, r2
   1fe50:	subs	r1, r1, r2
   1fe54:	sbcs	r0, r0, r2, asr #31
   1fe58:	str	r1, [fp, #-96]	; 0xffffffa0
   1fe5c:	str	r0, [fp, #-100]	; 0xffffff9c
   1fe60:	blt	20084 <__assert_fail@plt+0xef9c>
   1fe64:	b	200a8 <__assert_fail@plt+0xefc0>
   1fe68:	b	1fe6c <__assert_fail@plt+0xed84>
   1fe6c:	ldr	r0, [pc, #3352]	; 20b8c <__assert_fail@plt+0xfaa4>
   1fe70:	ldr	r1, [fp, #-12]
   1fe74:	cmp	r1, r0
   1fe78:	blt	1fe90 <__assert_fail@plt+0xeda8>
   1fe7c:	b	1fe9c <__assert_fail@plt+0xedb4>
   1fe80:	ldr	r0, [fp, #-12]
   1fe84:	movw	r1, #0
   1fe88:	cmp	r1, r0
   1fe8c:	bge	1fe9c <__assert_fail@plt+0xedb4>
   1fe90:	movw	r0, #0
   1fe94:	str	r0, [fp, #-104]	; 0xffffff98
   1fe98:	b	1feb4 <__assert_fail@plt+0xedcc>
   1fe9c:	ldr	r0, [fp, #-12]
   1fea0:	movw	r1, #0
   1fea4:	sub	r0, r1, r0
   1fea8:	movw	r1, #255	; 0xff
   1feac:	sdiv	r0, r1, r0
   1feb0:	str	r0, [fp, #-104]	; 0xffffff98
   1feb4:	ldr	r0, [fp, #-104]	; 0xffffff98
   1feb8:	ldr	r1, [fp, #-8]
   1febc:	ldr	r2, [r1]
   1fec0:	ldr	r1, [r1, #4]
   1fec4:	mvn	r1, r1
   1fec8:	mvn	r2, r2
   1fecc:	subs	r2, r2, r0
   1fed0:	sbcs	r0, r1, r0, asr #31
   1fed4:	str	r2, [fp, #-108]	; 0xffffff94
   1fed8:	str	r0, [fp, #-112]	; 0xffffff90
   1fedc:	bge	20084 <__assert_fail@plt+0xef9c>
   1fee0:	b	200a8 <__assert_fail@plt+0xefc0>
   1fee4:	b	1fee8 <__assert_fail@plt+0xee00>
   1fee8:	b	1ff6c <__assert_fail@plt+0xee84>
   1feec:	b	1ff6c <__assert_fail@plt+0xee84>
   1fef0:	ldr	r0, [fp, #-12]
   1fef4:	cmn	r0, #1
   1fef8:	bne	1ff6c <__assert_fail@plt+0xee84>
   1fefc:	b	1ff00 <__assert_fail@plt+0xee18>
   1ff00:	ldr	r0, [fp, #-8]
   1ff04:	ldr	r1, [r0]
   1ff08:	ldr	r0, [r0, #4]
   1ff0c:	rsbs	r1, r1, #0
   1ff10:	rscs	r0, r0, #0
   1ff14:	str	r1, [fp, #-116]	; 0xffffff8c
   1ff18:	str	r0, [fp, #-120]	; 0xffffff88
   1ff1c:	blt	20084 <__assert_fail@plt+0xef9c>
   1ff20:	b	200a8 <__assert_fail@plt+0xefc0>
   1ff24:	ldr	r0, [fp, #-8]
   1ff28:	ldr	r1, [r0]
   1ff2c:	ldr	r0, [r0, #4]
   1ff30:	subs	r1, r1, #1
   1ff34:	sbcs	r0, r0, #0
   1ff38:	str	r1, [fp, #-124]	; 0xffffff84
   1ff3c:	str	r0, [fp, #-128]	; 0xffffff80
   1ff40:	blt	200a8 <__assert_fail@plt+0xefc0>
   1ff44:	b	1ff48 <__assert_fail@plt+0xee60>
   1ff48:	ldr	r0, [fp, #-8]
   1ff4c:	ldr	r1, [r0]
   1ff50:	ldr	r0, [r0, #4]
   1ff54:	subs	r1, r1, #1
   1ff58:	sbc	r0, r0, #0
   1ff5c:	cmn	r0, #1
   1ff60:	str	r1, [fp, #-132]	; 0xffffff7c
   1ff64:	bgt	20084 <__assert_fail@plt+0xef9c>
   1ff68:	b	200a8 <__assert_fail@plt+0xefc0>
   1ff6c:	ldr	r0, [fp, #-12]
   1ff70:	mov	r1, #0
   1ff74:	sdiv	r0, r1, r0
   1ff78:	ldr	r1, [fp, #-8]
   1ff7c:	ldr	r2, [r1]
   1ff80:	ldr	r1, [r1, #4]
   1ff84:	subs	r2, r0, r2
   1ff88:	rscs	r0, r1, r0, asr #31
   1ff8c:	str	r2, [fp, #-136]	; 0xffffff78
   1ff90:	str	r0, [fp, #-140]	; 0xffffff74
   1ff94:	blt	20084 <__assert_fail@plt+0xef9c>
   1ff98:	b	200a8 <__assert_fail@plt+0xefc0>
   1ff9c:	ldr	r0, [fp, #-12]
   1ffa0:	cmp	r0, #0
   1ffa4:	bne	1ffac <__assert_fail@plt+0xeec4>
   1ffa8:	b	200a8 <__assert_fail@plt+0xefc0>
   1ffac:	ldr	r0, [fp, #-8]
   1ffb0:	ldr	r0, [r0, #4]
   1ffb4:	cmn	r0, #1
   1ffb8:	bgt	20054 <__assert_fail@plt+0xef6c>
   1ffbc:	b	1ffc0 <__assert_fail@plt+0xeed8>
   1ffc0:	b	1ffc4 <__assert_fail@plt+0xeedc>
   1ffc4:	b	2001c <__assert_fail@plt+0xef34>
   1ffc8:	b	2001c <__assert_fail@plt+0xef34>
   1ffcc:	ldr	r0, [fp, #-8]
   1ffd0:	ldr	r1, [r0]
   1ffd4:	ldr	r0, [r0, #4]
   1ffd8:	and	r0, r1, r0
   1ffdc:	cmn	r0, #1
   1ffe0:	bne	2001c <__assert_fail@plt+0xef34>
   1ffe4:	b	1ffe8 <__assert_fail@plt+0xef00>
   1ffe8:	b	1ffec <__assert_fail@plt+0xef04>
   1ffec:	ldr	r0, [fp, #-12]
   1fff0:	add	r0, r0, #0
   1fff4:	movw	r1, #0
   1fff8:	cmp	r1, r0
   1fffc:	blt	20084 <__assert_fail@plt+0xef9c>
   20000:	b	200a8 <__assert_fail@plt+0xefc0>
   20004:	ldr	r0, [fp, #-12]
   20008:	sub	r0, r0, #1
   2000c:	mvn	r1, #0
   20010:	cmp	r1, r0
   20014:	blt	20084 <__assert_fail@plt+0xef9c>
   20018:	b	200a8 <__assert_fail@plt+0xefc0>
   2001c:	ldr	r0, [fp, #-8]
   20020:	ldr	r2, [r0]
   20024:	ldr	r3, [r0, #4]
   20028:	mov	r0, #0
   2002c:	str	r0, [fp, #-144]	; 0xffffff70
   20030:	ldr	r1, [fp, #-144]	; 0xffffff70
   20034:	bl	21eb4 <__assert_fail@plt+0x10dcc>
   20038:	ldr	r2, [fp, #-12]
   2003c:	subs	r0, r0, r2
   20040:	sbcs	r1, r1, r2, asr #31
   20044:	str	r0, [fp, #-148]	; 0xffffff6c
   20048:	str	r1, [fp, #-152]	; 0xffffff68
   2004c:	blt	20084 <__assert_fail@plt+0xef9c>
   20050:	b	200a8 <__assert_fail@plt+0xefc0>
   20054:	ldr	r0, [fp, #-12]
   20058:	mov	r1, #255	; 0xff
   2005c:	sdiv	r0, r1, r0
   20060:	ldr	r1, [fp, #-8]
   20064:	ldr	r2, [r1]
   20068:	ldr	r1, [r1, #4]
   2006c:	subs	r2, r0, r2
   20070:	rscs	r0, r1, r0, asr #31
   20074:	str	r2, [fp, #-156]	; 0xffffff64
   20078:	str	r0, [fp, #-160]	; 0xffffff60
   2007c:	bge	200a8 <__assert_fail@plt+0xefc0>
   20080:	b	20084 <__assert_fail@plt+0xef9c>
   20084:	ldr	r0, [fp, #-8]
   20088:	ldr	r0, [r0]
   2008c:	ldr	r1, [fp, #-12]
   20090:	mul	r0, r0, r1
   20094:	uxtb	r0, r0
   20098:	mov	r1, #0
   2009c:	str	r1, [fp, #-20]	; 0xffffffec
   200a0:	str	r0, [fp, #-24]	; 0xffffffe8
   200a4:	b	21774 <__assert_fail@plt+0x1068c>
   200a8:	ldr	r0, [fp, #-8]
   200ac:	ldr	r0, [r0]
   200b0:	ldr	r1, [fp, #-12]
   200b4:	mul	r0, r0, r1
   200b8:	uxtb	r0, r0
   200bc:	mov	r1, #0
   200c0:	str	r1, [fp, #-20]	; 0xffffffec
   200c4:	str	r0, [fp, #-24]	; 0xffffffe8
   200c8:	b	217a8 <__assert_fail@plt+0x106c0>
   200cc:	b	20660 <__assert_fail@plt+0xf578>
   200d0:	b	200d4 <__assert_fail@plt+0xefec>
   200d4:	ldr	r0, [fp, #-12]
   200d8:	cmp	r0, #0
   200dc:	bge	20274 <__assert_fail@plt+0xf18c>
   200e0:	ldr	r0, [fp, #-8]
   200e4:	ldr	r0, [r0, #4]
   200e8:	cmn	r0, #1
   200ec:	bgt	201a4 <__assert_fail@plt+0xf0bc>
   200f0:	b	200f4 <__assert_fail@plt+0xf00c>
   200f4:	b	200f8 <__assert_fail@plt+0xf010>
   200f8:	ldr	r0, [fp, #-8]
   200fc:	ldr	r1, [r0]
   20100:	ldr	r0, [r0, #4]
   20104:	ldr	r2, [fp, #-12]
   20108:	movw	r3, #32767	; 0x7fff
   2010c:	sdiv	r2, r3, r2
   20110:	subs	r1, r1, r2
   20114:	sbcs	r0, r0, r2, asr #31
   20118:	str	r1, [fp, #-164]	; 0xffffff5c
   2011c:	str	r0, [fp, #-168]	; 0xffffff58
   20120:	blt	20360 <__assert_fail@plt+0xf278>
   20124:	b	20384 <__assert_fail@plt+0xf29c>
   20128:	b	2012c <__assert_fail@plt+0xf044>
   2012c:	ldr	r0, [pc, #2648]	; 20b8c <__assert_fail@plt+0xfaa4>
   20130:	ldr	r1, [fp, #-12]
   20134:	cmp	r1, r0
   20138:	blt	20150 <__assert_fail@plt+0xf068>
   2013c:	b	2015c <__assert_fail@plt+0xf074>
   20140:	ldr	r0, [fp, #-12]
   20144:	movw	r1, #0
   20148:	cmp	r1, r0
   2014c:	bge	2015c <__assert_fail@plt+0xf074>
   20150:	movw	r0, #0
   20154:	str	r0, [fp, #-172]	; 0xffffff54
   20158:	b	20174 <__assert_fail@plt+0xf08c>
   2015c:	ldr	r0, [fp, #-12]
   20160:	movw	r1, #0
   20164:	sub	r0, r1, r0
   20168:	movw	r1, #32767	; 0x7fff
   2016c:	sdiv	r0, r1, r0
   20170:	str	r0, [fp, #-172]	; 0xffffff54
   20174:	ldr	r0, [fp, #-172]	; 0xffffff54
   20178:	ldr	r1, [fp, #-8]
   2017c:	ldr	r2, [r1]
   20180:	ldr	r1, [r1, #4]
   20184:	mvn	r1, r1
   20188:	mvn	r2, r2
   2018c:	subs	r2, r2, r0
   20190:	sbcs	r0, r1, r0, asr #31
   20194:	str	r2, [fp, #-176]	; 0xffffff50
   20198:	str	r0, [fp, #-180]	; 0xffffff4c
   2019c:	bge	20360 <__assert_fail@plt+0xf278>
   201a0:	b	20384 <__assert_fail@plt+0xf29c>
   201a4:	b	201a8 <__assert_fail@plt+0xf0c0>
   201a8:	b	20240 <__assert_fail@plt+0xf158>
   201ac:	b	20240 <__assert_fail@plt+0xf158>
   201b0:	ldr	r0, [fp, #-12]
   201b4:	cmn	r0, #1
   201b8:	bne	20240 <__assert_fail@plt+0xf158>
   201bc:	b	201c0 <__assert_fail@plt+0xf0d8>
   201c0:	ldr	r0, [fp, #-8]
   201c4:	ldr	r1, [r0]
   201c8:	ldr	r0, [r0, #4]
   201cc:	subs	r1, r1, #32768	; 0x8000
   201d0:	sbc	r0, r0, #0
   201d4:	rsbs	r1, r1, #0
   201d8:	rscs	r0, r0, #0
   201dc:	str	r1, [fp, #-184]	; 0xffffff48
   201e0:	str	r0, [fp, #-188]	; 0xffffff44
   201e4:	blt	20360 <__assert_fail@plt+0xf278>
   201e8:	b	20384 <__assert_fail@plt+0xf29c>
   201ec:	ldr	r0, [fp, #-8]
   201f0:	ldr	r1, [r0]
   201f4:	ldr	r0, [r0, #4]
   201f8:	subs	r1, r1, #1
   201fc:	sbcs	r0, r0, #0
   20200:	str	r1, [fp, #-192]	; 0xffffff40
   20204:	str	r0, [fp, #-196]	; 0xffffff3c
   20208:	blt	20384 <__assert_fail@plt+0xf29c>
   2020c:	b	20210 <__assert_fail@plt+0xf128>
   20210:	ldr	r0, [fp, #-8]
   20214:	ldr	r1, [r0]
   20218:	ldr	r0, [r0, #4]
   2021c:	subs	r1, r1, #1
   20220:	sbc	r0, r0, #0
   20224:	movw	r2, #32767	; 0x7fff
   20228:	subs	r1, r2, r1
   2022c:	rscs	r0, r0, #0
   20230:	str	r1, [fp, #-200]	; 0xffffff38
   20234:	str	r0, [fp, #-204]	; 0xffffff34
   20238:	blt	20360 <__assert_fail@plt+0xf278>
   2023c:	b	20384 <__assert_fail@plt+0xf29c>
   20240:	ldr	r0, [fp, #-12]
   20244:	movw	r1, #32768	; 0x8000
   20248:	movt	r1, #65535	; 0xffff
   2024c:	sdiv	r0, r1, r0
   20250:	ldr	r1, [fp, #-8]
   20254:	ldr	r2, [r1]
   20258:	ldr	r1, [r1, #4]
   2025c:	subs	r2, r0, r2
   20260:	rscs	r0, r1, r0, asr #31
   20264:	str	r2, [fp, #-208]	; 0xffffff30
   20268:	str	r0, [fp, #-212]	; 0xffffff2c
   2026c:	blt	20360 <__assert_fail@plt+0xf278>
   20270:	b	20384 <__assert_fail@plt+0xf29c>
   20274:	ldr	r0, [fp, #-12]
   20278:	cmp	r0, #0
   2027c:	bne	20284 <__assert_fail@plt+0xf19c>
   20280:	b	20384 <__assert_fail@plt+0xf29c>
   20284:	ldr	r0, [fp, #-8]
   20288:	ldr	r0, [r0, #4]
   2028c:	cmn	r0, #1
   20290:	bgt	20330 <__assert_fail@plt+0xf248>
   20294:	b	20298 <__assert_fail@plt+0xf1b0>
   20298:	b	2029c <__assert_fail@plt+0xf1b4>
   2029c:	b	202f8 <__assert_fail@plt+0xf210>
   202a0:	b	202f8 <__assert_fail@plt+0xf210>
   202a4:	ldr	r0, [fp, #-8]
   202a8:	ldr	r1, [r0]
   202ac:	ldr	r0, [r0, #4]
   202b0:	and	r0, r1, r0
   202b4:	cmn	r0, #1
   202b8:	bne	202f8 <__assert_fail@plt+0xf210>
   202bc:	b	202c0 <__assert_fail@plt+0xf1d8>
   202c0:	b	202c4 <__assert_fail@plt+0xf1dc>
   202c4:	ldr	r0, [pc, #4088]	; 212c4 <__assert_fail@plt+0x101dc>
   202c8:	ldr	r1, [fp, #-12]
   202cc:	add	r0, r1, r0
   202d0:	movw	r1, #0
   202d4:	cmp	r1, r0
   202d8:	blt	20360 <__assert_fail@plt+0xf278>
   202dc:	b	20384 <__assert_fail@plt+0xf29c>
   202e0:	ldr	r0, [fp, #-12]
   202e4:	sub	r0, r0, #1
   202e8:	movw	r1, #32767	; 0x7fff
   202ec:	cmp	r1, r0
   202f0:	blt	20360 <__assert_fail@plt+0xf278>
   202f4:	b	20384 <__assert_fail@plt+0xf29c>
   202f8:	ldr	r0, [fp, #-8]
   202fc:	ldr	r2, [r0]
   20300:	ldr	r3, [r0, #4]
   20304:	movw	r0, #32768	; 0x8000
   20308:	movt	r0, #65535	; 0xffff
   2030c:	mvn	r1, #0
   20310:	bl	21eb4 <__assert_fail@plt+0x10dcc>
   20314:	ldr	r2, [fp, #-12]
   20318:	subs	r0, r0, r2
   2031c:	sbcs	r1, r1, r2, asr #31
   20320:	str	r0, [fp, #-216]	; 0xffffff28
   20324:	str	r1, [fp, #-220]	; 0xffffff24
   20328:	blt	20360 <__assert_fail@plt+0xf278>
   2032c:	b	20384 <__assert_fail@plt+0xf29c>
   20330:	ldr	r0, [fp, #-12]
   20334:	movw	r1, #32767	; 0x7fff
   20338:	sdiv	r0, r1, r0
   2033c:	ldr	r1, [fp, #-8]
   20340:	ldr	r2, [r1]
   20344:	ldr	r1, [r1, #4]
   20348:	subs	r2, r0, r2
   2034c:	rscs	r0, r1, r0, asr #31
   20350:	str	r2, [fp, #-224]	; 0xffffff20
   20354:	str	r0, [fp, #-228]	; 0xffffff1c
   20358:	bge	20384 <__assert_fail@plt+0xf29c>
   2035c:	b	20360 <__assert_fail@plt+0xf278>
   20360:	ldr	r0, [fp, #-8]
   20364:	ldr	r0, [r0]
   20368:	ldr	r1, [fp, #-12]
   2036c:	mul	r0, r0, r1
   20370:	sxth	r0, r0
   20374:	asr	r1, r0, #31
   20378:	str	r0, [fp, #-24]	; 0xffffffe8
   2037c:	str	r1, [fp, #-20]	; 0xffffffec
   20380:	b	21774 <__assert_fail@plt+0x1068c>
   20384:	ldr	r0, [fp, #-8]
   20388:	ldr	r0, [r0]
   2038c:	ldr	r1, [fp, #-12]
   20390:	mul	r0, r0, r1
   20394:	sxth	r0, r0
   20398:	asr	r1, r0, #31
   2039c:	str	r0, [fp, #-24]	; 0xffffffe8
   203a0:	str	r1, [fp, #-20]	; 0xffffffec
   203a4:	b	217a8 <__assert_fail@plt+0x106c0>
   203a8:	ldr	r0, [fp, #-12]
   203ac:	cmp	r0, #0
   203b0:	bge	20530 <__assert_fail@plt+0xf448>
   203b4:	ldr	r0, [fp, #-8]
   203b8:	ldr	r0, [r0, #4]
   203bc:	cmn	r0, #1
   203c0:	bgt	20478 <__assert_fail@plt+0xf390>
   203c4:	b	203c8 <__assert_fail@plt+0xf2e0>
   203c8:	b	203cc <__assert_fail@plt+0xf2e4>
   203cc:	ldr	r0, [fp, #-8]
   203d0:	ldr	r1, [r0]
   203d4:	ldr	r0, [r0, #4]
   203d8:	ldr	r2, [fp, #-12]
   203dc:	movw	r3, #65535	; 0xffff
   203e0:	sdiv	r2, r3, r2
   203e4:	subs	r1, r1, r2
   203e8:	sbcs	r0, r0, r2, asr #31
   203ec:	str	r1, [fp, #-232]	; 0xffffff18
   203f0:	str	r0, [fp, #-236]	; 0xffffff14
   203f4:	blt	20618 <__assert_fail@plt+0xf530>
   203f8:	b	2063c <__assert_fail@plt+0xf554>
   203fc:	b	20400 <__assert_fail@plt+0xf318>
   20400:	ldr	r0, [pc, #1924]	; 20b8c <__assert_fail@plt+0xfaa4>
   20404:	ldr	r1, [fp, #-12]
   20408:	cmp	r1, r0
   2040c:	blt	20424 <__assert_fail@plt+0xf33c>
   20410:	b	20430 <__assert_fail@plt+0xf348>
   20414:	ldr	r0, [fp, #-12]
   20418:	movw	r1, #0
   2041c:	cmp	r1, r0
   20420:	bge	20430 <__assert_fail@plt+0xf348>
   20424:	movw	r0, #0
   20428:	str	r0, [fp, #-240]	; 0xffffff10
   2042c:	b	20448 <__assert_fail@plt+0xf360>
   20430:	ldr	r0, [fp, #-12]
   20434:	movw	r1, #0
   20438:	sub	r0, r1, r0
   2043c:	movw	r1, #65535	; 0xffff
   20440:	sdiv	r0, r1, r0
   20444:	str	r0, [fp, #-240]	; 0xffffff10
   20448:	ldr	r0, [fp, #-240]	; 0xffffff10
   2044c:	ldr	r1, [fp, #-8]
   20450:	ldr	r2, [r1]
   20454:	ldr	r1, [r1, #4]
   20458:	mvn	r1, r1
   2045c:	mvn	r2, r2
   20460:	subs	r2, r2, r0
   20464:	sbcs	r0, r1, r0, asr #31
   20468:	str	r2, [fp, #-244]	; 0xffffff0c
   2046c:	str	r0, [fp, #-248]	; 0xffffff08
   20470:	bge	20618 <__assert_fail@plt+0xf530>
   20474:	b	2063c <__assert_fail@plt+0xf554>
   20478:	b	2047c <__assert_fail@plt+0xf394>
   2047c:	b	20500 <__assert_fail@plt+0xf418>
   20480:	b	20500 <__assert_fail@plt+0xf418>
   20484:	ldr	r0, [fp, #-12]
   20488:	cmn	r0, #1
   2048c:	bne	20500 <__assert_fail@plt+0xf418>
   20490:	b	20494 <__assert_fail@plt+0xf3ac>
   20494:	ldr	r0, [fp, #-8]
   20498:	ldr	r1, [r0]
   2049c:	ldr	r0, [r0, #4]
   204a0:	rsbs	r1, r1, #0
   204a4:	rscs	r0, r0, #0
   204a8:	str	r1, [fp, #-252]	; 0xffffff04
   204ac:	str	r0, [fp, #-256]	; 0xffffff00
   204b0:	blt	20618 <__assert_fail@plt+0xf530>
   204b4:	b	2063c <__assert_fail@plt+0xf554>
   204b8:	ldr	r0, [fp, #-8]
   204bc:	ldr	r1, [r0]
   204c0:	ldr	r0, [r0, #4]
   204c4:	subs	r1, r1, #1
   204c8:	sbcs	r0, r0, #0
   204cc:	str	r1, [fp, #-260]	; 0xfffffefc
   204d0:	str	r0, [fp, #-264]	; 0xfffffef8
   204d4:	blt	2063c <__assert_fail@plt+0xf554>
   204d8:	b	204dc <__assert_fail@plt+0xf3f4>
   204dc:	ldr	r0, [fp, #-8]
   204e0:	ldr	r1, [r0]
   204e4:	ldr	r0, [r0, #4]
   204e8:	subs	r1, r1, #1
   204ec:	sbc	r0, r0, #0
   204f0:	cmn	r0, #1
   204f4:	str	r1, [fp, #-268]	; 0xfffffef4
   204f8:	bgt	20618 <__assert_fail@plt+0xf530>
   204fc:	b	2063c <__assert_fail@plt+0xf554>
   20500:	ldr	r0, [fp, #-12]
   20504:	mov	r1, #0
   20508:	sdiv	r0, r1, r0
   2050c:	ldr	r1, [fp, #-8]
   20510:	ldr	r2, [r1]
   20514:	ldr	r1, [r1, #4]
   20518:	subs	r2, r0, r2
   2051c:	rscs	r0, r1, r0, asr #31
   20520:	str	r2, [fp, #-272]	; 0xfffffef0
   20524:	str	r0, [fp, #-276]	; 0xfffffeec
   20528:	blt	20618 <__assert_fail@plt+0xf530>
   2052c:	b	2063c <__assert_fail@plt+0xf554>
   20530:	ldr	r0, [fp, #-12]
   20534:	cmp	r0, #0
   20538:	bne	20540 <__assert_fail@plt+0xf458>
   2053c:	b	2063c <__assert_fail@plt+0xf554>
   20540:	ldr	r0, [fp, #-8]
   20544:	ldr	r0, [r0, #4]
   20548:	cmn	r0, #1
   2054c:	bgt	205e8 <__assert_fail@plt+0xf500>
   20550:	b	20554 <__assert_fail@plt+0xf46c>
   20554:	b	20558 <__assert_fail@plt+0xf470>
   20558:	b	205b0 <__assert_fail@plt+0xf4c8>
   2055c:	b	205b0 <__assert_fail@plt+0xf4c8>
   20560:	ldr	r0, [fp, #-8]
   20564:	ldr	r1, [r0]
   20568:	ldr	r0, [r0, #4]
   2056c:	and	r0, r1, r0
   20570:	cmn	r0, #1
   20574:	bne	205b0 <__assert_fail@plt+0xf4c8>
   20578:	b	2057c <__assert_fail@plt+0xf494>
   2057c:	b	20580 <__assert_fail@plt+0xf498>
   20580:	ldr	r0, [fp, #-12]
   20584:	add	r0, r0, #0
   20588:	movw	r1, #0
   2058c:	cmp	r1, r0
   20590:	blt	20618 <__assert_fail@plt+0xf530>
   20594:	b	2063c <__assert_fail@plt+0xf554>
   20598:	ldr	r0, [fp, #-12]
   2059c:	sub	r0, r0, #1
   205a0:	mvn	r1, #0
   205a4:	cmp	r1, r0
   205a8:	blt	20618 <__assert_fail@plt+0xf530>
   205ac:	b	2063c <__assert_fail@plt+0xf554>
   205b0:	ldr	r0, [fp, #-8]
   205b4:	ldr	r2, [r0]
   205b8:	ldr	r3, [r0, #4]
   205bc:	mov	r0, #0
   205c0:	str	r0, [fp, #-280]	; 0xfffffee8
   205c4:	ldr	r1, [fp, #-280]	; 0xfffffee8
   205c8:	bl	21eb4 <__assert_fail@plt+0x10dcc>
   205cc:	ldr	r2, [fp, #-12]
   205d0:	subs	r0, r0, r2
   205d4:	sbcs	r1, r1, r2, asr #31
   205d8:	str	r0, [fp, #-284]	; 0xfffffee4
   205dc:	str	r1, [fp, #-288]	; 0xfffffee0
   205e0:	blt	20618 <__assert_fail@plt+0xf530>
   205e4:	b	2063c <__assert_fail@plt+0xf554>
   205e8:	ldr	r0, [fp, #-12]
   205ec:	movw	r1, #65535	; 0xffff
   205f0:	sdiv	r0, r1, r0
   205f4:	ldr	r1, [fp, #-8]
   205f8:	ldr	r2, [r1]
   205fc:	ldr	r1, [r1, #4]
   20600:	subs	r2, r0, r2
   20604:	rscs	r0, r1, r0, asr #31
   20608:	str	r2, [fp, #-292]	; 0xfffffedc
   2060c:	str	r0, [fp, #-296]	; 0xfffffed8
   20610:	bge	2063c <__assert_fail@plt+0xf554>
   20614:	b	20618 <__assert_fail@plt+0xf530>
   20618:	ldr	r0, [fp, #-8]
   2061c:	ldr	r0, [r0]
   20620:	ldr	r1, [fp, #-12]
   20624:	mul	r0, r0, r1
   20628:	uxth	r0, r0
   2062c:	mov	r1, #0
   20630:	str	r1, [fp, #-20]	; 0xffffffec
   20634:	str	r0, [fp, #-24]	; 0xffffffe8
   20638:	b	21774 <__assert_fail@plt+0x1068c>
   2063c:	ldr	r0, [fp, #-8]
   20640:	ldr	r0, [r0]
   20644:	ldr	r1, [fp, #-12]
   20648:	mul	r0, r0, r1
   2064c:	uxth	r0, r0
   20650:	mov	r1, #0
   20654:	str	r1, [fp, #-20]	; 0xffffffec
   20658:	str	r0, [fp, #-24]	; 0xffffffe8
   2065c:	b	217a8 <__assert_fail@plt+0x106c0>
   20660:	b	20bd0 <__assert_fail@plt+0xfae8>
   20664:	b	20668 <__assert_fail@plt+0xf580>
   20668:	ldr	r0, [fp, #-12]
   2066c:	cmp	r0, #0
   20670:	bge	207f8 <__assert_fail@plt+0xf710>
   20674:	ldr	r0, [fp, #-8]
   20678:	ldr	r0, [r0, #4]
   2067c:	cmn	r0, #1
   20680:	bgt	20738 <__assert_fail@plt+0xf650>
   20684:	b	20688 <__assert_fail@plt+0xf5a0>
   20688:	b	2068c <__assert_fail@plt+0xf5a4>
   2068c:	ldr	r0, [fp, #-8]
   20690:	ldr	r1, [r0]
   20694:	ldr	r0, [r0, #4]
   20698:	ldr	r2, [fp, #-12]
   2069c:	mvn	r3, #-2147483648	; 0x80000000
   206a0:	sdiv	r2, r3, r2
   206a4:	subs	r1, r1, r2
   206a8:	sbcs	r0, r0, r2, asr #31
   206ac:	str	r1, [fp, #-300]	; 0xfffffed4
   206b0:	str	r0, [fp, #-304]	; 0xfffffed0
   206b4:	blt	208dc <__assert_fail@plt+0xf7f4>
   206b8:	b	208fc <__assert_fail@plt+0xf814>
   206bc:	b	206c0 <__assert_fail@plt+0xf5d8>
   206c0:	ldr	r0, [pc, #1220]	; 20b8c <__assert_fail@plt+0xfaa4>
   206c4:	ldr	r1, [fp, #-12]
   206c8:	cmp	r1, r0
   206cc:	blt	206e4 <__assert_fail@plt+0xf5fc>
   206d0:	b	206f0 <__assert_fail@plt+0xf608>
   206d4:	ldr	r0, [fp, #-12]
   206d8:	movw	r1, #0
   206dc:	cmp	r1, r0
   206e0:	bge	206f0 <__assert_fail@plt+0xf608>
   206e4:	movw	r0, #0
   206e8:	str	r0, [fp, #-308]	; 0xfffffecc
   206ec:	b	20708 <__assert_fail@plt+0xf620>
   206f0:	ldr	r0, [pc, #4064]	; 216d8 <__assert_fail@plt+0x105f0>
   206f4:	ldr	r1, [fp, #-12]
   206f8:	movw	r2, #0
   206fc:	sub	r1, r2, r1
   20700:	sdiv	r0, r0, r1
   20704:	str	r0, [fp, #-308]	; 0xfffffecc
   20708:	ldr	r0, [fp, #-308]	; 0xfffffecc
   2070c:	ldr	r1, [fp, #-8]
   20710:	ldr	r2, [r1]
   20714:	ldr	r1, [r1, #4]
   20718:	mvn	r1, r1
   2071c:	mvn	r2, r2
   20720:	subs	r2, r2, r0
   20724:	sbcs	r0, r1, r0, asr #31
   20728:	str	r2, [fp, #-312]	; 0xfffffec8
   2072c:	str	r0, [fp, #-316]	; 0xfffffec4
   20730:	bge	208dc <__assert_fail@plt+0xf7f4>
   20734:	b	208fc <__assert_fail@plt+0xf814>
   20738:	ldr	r0, [fp, #-12]
   2073c:	cmn	r0, #1
   20740:	bne	207c8 <__assert_fail@plt+0xf6e0>
   20744:	b	20748 <__assert_fail@plt+0xf660>
   20748:	ldr	r0, [fp, #-8]
   2074c:	ldr	r1, [r0]
   20750:	ldr	r0, [r0, #4]
   20754:	adds	r1, r1, #-2147483648	; 0x80000000
   20758:	sbc	r0, r0, #0
   2075c:	rsbs	r1, r1, #0
   20760:	rscs	r0, r0, #0
   20764:	str	r1, [fp, #-320]	; 0xfffffec0
   20768:	str	r0, [fp, #-324]	; 0xfffffebc
   2076c:	blt	208dc <__assert_fail@plt+0xf7f4>
   20770:	b	208fc <__assert_fail@plt+0xf814>
   20774:	ldr	r0, [fp, #-8]
   20778:	ldr	r1, [r0]
   2077c:	ldr	r0, [r0, #4]
   20780:	subs	r1, r1, #1
   20784:	sbcs	r0, r0, #0
   20788:	str	r1, [fp, #-328]	; 0xfffffeb8
   2078c:	str	r0, [fp, #-332]	; 0xfffffeb4
   20790:	blt	208fc <__assert_fail@plt+0xf814>
   20794:	b	20798 <__assert_fail@plt+0xf6b0>
   20798:	ldr	r0, [fp, #-8]
   2079c:	ldr	r1, [r0]
   207a0:	ldr	r0, [r0, #4]
   207a4:	subs	r1, r1, #1
   207a8:	sbc	r0, r0, #0
   207ac:	mvn	r2, #-2147483648	; 0x80000000
   207b0:	subs	r1, r2, r1
   207b4:	rscs	r0, r0, #0
   207b8:	str	r1, [fp, #-336]	; 0xfffffeb0
   207bc:	str	r0, [fp, #-340]	; 0xfffffeac
   207c0:	blt	208dc <__assert_fail@plt+0xf7f4>
   207c4:	b	208fc <__assert_fail@plt+0xf814>
   207c8:	ldr	r0, [fp, #-12]
   207cc:	mov	r1, #-2147483648	; 0x80000000
   207d0:	sdiv	r0, r1, r0
   207d4:	ldr	r1, [fp, #-8]
   207d8:	ldr	r2, [r1]
   207dc:	ldr	r1, [r1, #4]
   207e0:	subs	r2, r0, r2
   207e4:	rscs	r0, r1, r0, asr #31
   207e8:	str	r2, [fp, #-344]	; 0xfffffea8
   207ec:	str	r0, [fp, #-348]	; 0xfffffea4
   207f0:	blt	208dc <__assert_fail@plt+0xf7f4>
   207f4:	b	208fc <__assert_fail@plt+0xf814>
   207f8:	ldr	r0, [fp, #-12]
   207fc:	cmp	r0, #0
   20800:	bne	20808 <__assert_fail@plt+0xf720>
   20804:	b	208fc <__assert_fail@plt+0xf814>
   20808:	ldr	r0, [fp, #-8]
   2080c:	ldr	r0, [r0, #4]
   20810:	cmn	r0, #1
   20814:	bgt	208ac <__assert_fail@plt+0xf7c4>
   20818:	b	2081c <__assert_fail@plt+0xf734>
   2081c:	b	20820 <__assert_fail@plt+0xf738>
   20820:	b	20878 <__assert_fail@plt+0xf790>
   20824:	b	20878 <__assert_fail@plt+0xf790>
   20828:	ldr	r0, [fp, #-8]
   2082c:	ldr	r1, [r0]
   20830:	ldr	r0, [r0, #4]
   20834:	and	r0, r1, r0
   20838:	cmn	r0, #1
   2083c:	bne	20878 <__assert_fail@plt+0xf790>
   20840:	b	20844 <__assert_fail@plt+0xf75c>
   20844:	b	20848 <__assert_fail@plt+0xf760>
   20848:	ldr	r0, [fp, #-12]
   2084c:	add	r0, r0, #-2147483648	; 0x80000000
   20850:	movw	r1, #0
   20854:	cmp	r1, r0
   20858:	blt	208dc <__assert_fail@plt+0xf7f4>
   2085c:	b	208fc <__assert_fail@plt+0xf814>
   20860:	ldr	r0, [pc, #3948]	; 217d4 <__assert_fail@plt+0x106ec>
   20864:	ldr	r1, [fp, #-12]
   20868:	sub	r1, r1, #1
   2086c:	cmp	r0, r1
   20870:	blt	208dc <__assert_fail@plt+0xf7f4>
   20874:	b	208fc <__assert_fail@plt+0xf814>
   20878:	ldr	r0, [fp, #-8]
   2087c:	ldr	r2, [r0]
   20880:	ldr	r3, [r0, #4]
   20884:	mov	r0, #-2147483648	; 0x80000000
   20888:	mvn	r1, #0
   2088c:	bl	21eb4 <__assert_fail@plt+0x10dcc>
   20890:	ldr	r2, [fp, #-12]
   20894:	subs	r0, r0, r2
   20898:	sbcs	r1, r1, r2, asr #31
   2089c:	str	r0, [fp, #-352]	; 0xfffffea0
   208a0:	str	r1, [fp, #-356]	; 0xfffffe9c
   208a4:	blt	208dc <__assert_fail@plt+0xf7f4>
   208a8:	b	208fc <__assert_fail@plt+0xf814>
   208ac:	ldr	r0, [fp, #-12]
   208b0:	mvn	r1, #-2147483648	; 0x80000000
   208b4:	sdiv	r0, r1, r0
   208b8:	ldr	r1, [fp, #-8]
   208bc:	ldr	r2, [r1]
   208c0:	ldr	r1, [r1, #4]
   208c4:	subs	r2, r0, r2
   208c8:	rscs	r0, r1, r0, asr #31
   208cc:	str	r2, [fp, #-360]	; 0xfffffe98
   208d0:	str	r0, [fp, #-364]	; 0xfffffe94
   208d4:	bge	208fc <__assert_fail@plt+0xf814>
   208d8:	b	208dc <__assert_fail@plt+0xf7f4>
   208dc:	ldr	r0, [fp, #-8]
   208e0:	ldr	r0, [r0]
   208e4:	ldr	r1, [fp, #-12]
   208e8:	mul	r0, r0, r1
   208ec:	asr	r1, r0, #31
   208f0:	str	r0, [fp, #-24]	; 0xffffffe8
   208f4:	str	r1, [fp, #-20]	; 0xffffffec
   208f8:	b	21774 <__assert_fail@plt+0x1068c>
   208fc:	ldr	r0, [fp, #-8]
   20900:	ldr	r0, [r0]
   20904:	ldr	r1, [fp, #-12]
   20908:	mul	r0, r0, r1
   2090c:	asr	r1, r0, #31
   20910:	str	r0, [fp, #-24]	; 0xffffffe8
   20914:	str	r1, [fp, #-20]	; 0xffffffec
   20918:	b	217a8 <__assert_fail@plt+0x106c0>
   2091c:	ldr	r0, [fp, #-12]
   20920:	cmp	r0, #0
   20924:	bge	20aa4 <__assert_fail@plt+0xf9bc>
   20928:	ldr	r0, [fp, #-8]
   2092c:	ldr	r0, [r0, #4]
   20930:	cmn	r0, #1
   20934:	bgt	209ec <__assert_fail@plt+0xf904>
   20938:	b	2093c <__assert_fail@plt+0xf854>
   2093c:	b	20970 <__assert_fail@plt+0xf888>
   20940:	ldr	r0, [fp, #-8]
   20944:	ldr	r1, [r0]
   20948:	ldr	r0, [r0, #4]
   2094c:	ldr	r2, [fp, #-12]
   20950:	mvn	r3, #0
   20954:	udiv	r2, r3, r2
   20958:	subs	r1, r1, r2
   2095c:	sbcs	r0, r0, #0
   20960:	str	r1, [fp, #-368]	; 0xfffffe90
   20964:	str	r0, [fp, #-372]	; 0xfffffe8c
   20968:	blt	20b90 <__assert_fail@plt+0xfaa8>
   2096c:	b	20bb0 <__assert_fail@plt+0xfac8>
   20970:	b	20974 <__assert_fail@plt+0xf88c>
   20974:	ldr	r0, [pc, #3668]	; 217d0 <__assert_fail@plt+0x106e8>
   20978:	ldr	r1, [fp, #-12]
   2097c:	cmp	r1, r0
   20980:	blt	20998 <__assert_fail@plt+0xf8b0>
   20984:	b	209a4 <__assert_fail@plt+0xf8bc>
   20988:	ldr	r0, [fp, #-12]
   2098c:	movw	r1, #0
   20990:	cmp	r1, r0
   20994:	bge	209a4 <__assert_fail@plt+0xf8bc>
   20998:	movw	r0, #1
   2099c:	str	r0, [sp, #376]	; 0x178
   209a0:	b	209bc <__assert_fail@plt+0xf8d4>
   209a4:	ldr	r0, [fp, #-12]
   209a8:	movw	r1, #0
   209ac:	sub	r0, r1, r0
   209b0:	mvn	r1, #0
   209b4:	udiv	r0, r1, r0
   209b8:	str	r0, [sp, #376]	; 0x178
   209bc:	ldr	r0, [sp, #376]	; 0x178
   209c0:	ldr	r1, [fp, #-8]
   209c4:	ldr	r2, [r1]
   209c8:	ldr	r1, [r1, #4]
   209cc:	mvn	r1, r1
   209d0:	mvn	r2, r2
   209d4:	subs	r0, r2, r0
   209d8:	sbcs	r1, r1, #0
   209dc:	str	r0, [sp, #372]	; 0x174
   209e0:	str	r1, [sp, #368]	; 0x170
   209e4:	bge	20b90 <__assert_fail@plt+0xfaa8>
   209e8:	b	20bb0 <__assert_fail@plt+0xfac8>
   209ec:	b	209f0 <__assert_fail@plt+0xf908>
   209f0:	b	20a74 <__assert_fail@plt+0xf98c>
   209f4:	b	20a74 <__assert_fail@plt+0xf98c>
   209f8:	ldr	r0, [fp, #-12]
   209fc:	cmn	r0, #1
   20a00:	bne	20a74 <__assert_fail@plt+0xf98c>
   20a04:	b	20a08 <__assert_fail@plt+0xf920>
   20a08:	ldr	r0, [fp, #-8]
   20a0c:	ldr	r1, [r0]
   20a10:	ldr	r0, [r0, #4]
   20a14:	rsbs	r1, r1, #0
   20a18:	rscs	r0, r0, #0
   20a1c:	str	r1, [sp, #364]	; 0x16c
   20a20:	str	r0, [sp, #360]	; 0x168
   20a24:	blt	20b90 <__assert_fail@plt+0xfaa8>
   20a28:	b	20bb0 <__assert_fail@plt+0xfac8>
   20a2c:	ldr	r0, [fp, #-8]
   20a30:	ldr	r1, [r0]
   20a34:	ldr	r0, [r0, #4]
   20a38:	subs	r1, r1, #1
   20a3c:	sbcs	r0, r0, #0
   20a40:	str	r1, [sp, #356]	; 0x164
   20a44:	str	r0, [sp, #352]	; 0x160
   20a48:	blt	20bb0 <__assert_fail@plt+0xfac8>
   20a4c:	b	20a50 <__assert_fail@plt+0xf968>
   20a50:	ldr	r0, [fp, #-8]
   20a54:	ldr	r1, [r0]
   20a58:	ldr	r0, [r0, #4]
   20a5c:	subs	r1, r1, #1
   20a60:	sbc	r0, r0, #0
   20a64:	cmn	r0, #1
   20a68:	str	r1, [sp, #348]	; 0x15c
   20a6c:	bgt	20b90 <__assert_fail@plt+0xfaa8>
   20a70:	b	20bb0 <__assert_fail@plt+0xfac8>
   20a74:	ldr	r0, [fp, #-12]
   20a78:	mov	r1, #0
   20a7c:	sdiv	r0, r1, r0
   20a80:	ldr	r1, [fp, #-8]
   20a84:	ldr	r2, [r1]
   20a88:	ldr	r1, [r1, #4]
   20a8c:	subs	r2, r0, r2
   20a90:	rscs	r0, r1, r0, asr #31
   20a94:	str	r2, [sp, #344]	; 0x158
   20a98:	str	r0, [sp, #340]	; 0x154
   20a9c:	blt	20b90 <__assert_fail@plt+0xfaa8>
   20aa0:	b	20bb0 <__assert_fail@plt+0xfac8>
   20aa4:	ldr	r0, [fp, #-12]
   20aa8:	cmp	r0, #0
   20aac:	bne	20ab4 <__assert_fail@plt+0xf9cc>
   20ab0:	b	20bb0 <__assert_fail@plt+0xfac8>
   20ab4:	ldr	r0, [fp, #-8]
   20ab8:	ldr	r0, [r0, #4]
   20abc:	cmn	r0, #1
   20ac0:	bgt	20b5c <__assert_fail@plt+0xfa74>
   20ac4:	b	20ac8 <__assert_fail@plt+0xf9e0>
   20ac8:	b	20acc <__assert_fail@plt+0xf9e4>
   20acc:	b	20b24 <__assert_fail@plt+0xfa3c>
   20ad0:	b	20b24 <__assert_fail@plt+0xfa3c>
   20ad4:	ldr	r0, [fp, #-8]
   20ad8:	ldr	r1, [r0]
   20adc:	ldr	r0, [r0, #4]
   20ae0:	and	r0, r1, r0
   20ae4:	cmn	r0, #1
   20ae8:	bne	20b24 <__assert_fail@plt+0xfa3c>
   20aec:	b	20af0 <__assert_fail@plt+0xfa08>
   20af0:	b	20af4 <__assert_fail@plt+0xfa0c>
   20af4:	ldr	r0, [fp, #-12]
   20af8:	add	r0, r0, #0
   20afc:	movw	r1, #0
   20b00:	cmp	r1, r0
   20b04:	blt	20b90 <__assert_fail@plt+0xfaa8>
   20b08:	b	20bb0 <__assert_fail@plt+0xfac8>
   20b0c:	ldr	r0, [fp, #-12]
   20b10:	sub	r0, r0, #1
   20b14:	mvn	r1, #0
   20b18:	cmp	r1, r0
   20b1c:	blt	20b90 <__assert_fail@plt+0xfaa8>
   20b20:	b	20bb0 <__assert_fail@plt+0xfac8>
   20b24:	ldr	r0, [fp, #-8]
   20b28:	ldr	r2, [r0]
   20b2c:	ldr	r3, [r0, #4]
   20b30:	mov	r0, #0
   20b34:	str	r0, [sp, #336]	; 0x150
   20b38:	ldr	r1, [sp, #336]	; 0x150
   20b3c:	bl	21eb4 <__assert_fail@plt+0x10dcc>
   20b40:	ldr	r2, [fp, #-12]
   20b44:	subs	r0, r0, r2
   20b48:	sbcs	r1, r1, r2, asr #31
   20b4c:	str	r0, [sp, #332]	; 0x14c
   20b50:	str	r1, [sp, #328]	; 0x148
   20b54:	blt	20b90 <__assert_fail@plt+0xfaa8>
   20b58:	b	20bb0 <__assert_fail@plt+0xfac8>
   20b5c:	ldr	r0, [fp, #-12]
   20b60:	mvn	r1, #0
   20b64:	udiv	r0, r1, r0
   20b68:	ldr	r1, [fp, #-8]
   20b6c:	ldr	r2, [r1]
   20b70:	ldr	r1, [r1, #4]
   20b74:	subs	r0, r0, r2
   20b78:	rscs	r1, r1, #0
   20b7c:	str	r0, [sp, #324]	; 0x144
   20b80:	str	r1, [sp, #320]	; 0x140
   20b84:	bge	20bb0 <__assert_fail@plt+0xfac8>
   20b88:	b	20b90 <__assert_fail@plt+0xfaa8>
   20b8c:	andhi	r0, r0, r1
   20b90:	ldr	r0, [fp, #-8]
   20b94:	ldr	r0, [r0]
   20b98:	ldr	r1, [fp, #-12]
   20b9c:	mul	r0, r0, r1
   20ba0:	mov	r1, #0
   20ba4:	str	r1, [fp, #-20]	; 0xffffffec
   20ba8:	str	r0, [fp, #-24]	; 0xffffffe8
   20bac:	b	21774 <__assert_fail@plt+0x1068c>
   20bb0:	ldr	r0, [fp, #-8]
   20bb4:	ldr	r0, [r0]
   20bb8:	ldr	r1, [fp, #-12]
   20bbc:	mul	r0, r0, r1
   20bc0:	mov	r1, #0
   20bc4:	str	r1, [fp, #-20]	; 0xffffffec
   20bc8:	str	r0, [fp, #-24]	; 0xffffffe8
   20bcc:	b	217a8 <__assert_fail@plt+0x106c0>
   20bd0:	b	2113c <__assert_fail@plt+0x10054>
   20bd4:	b	20bd8 <__assert_fail@plt+0xfaf0>
   20bd8:	ldr	r0, [fp, #-12]
   20bdc:	cmp	r0, #0
   20be0:	bge	20d68 <__assert_fail@plt+0xfc80>
   20be4:	ldr	r0, [fp, #-8]
   20be8:	ldr	r0, [r0, #4]
   20bec:	cmn	r0, #1
   20bf0:	bgt	20ca8 <__assert_fail@plt+0xfbc0>
   20bf4:	b	20bf8 <__assert_fail@plt+0xfb10>
   20bf8:	b	20bfc <__assert_fail@plt+0xfb14>
   20bfc:	ldr	r0, [fp, #-8]
   20c00:	ldr	r1, [r0]
   20c04:	ldr	r0, [r0, #4]
   20c08:	ldr	r2, [fp, #-12]
   20c0c:	mvn	r3, #-2147483648	; 0x80000000
   20c10:	sdiv	r2, r3, r2
   20c14:	subs	r1, r1, r2
   20c18:	sbcs	r0, r0, r2, asr #31
   20c1c:	str	r1, [sp, #316]	; 0x13c
   20c20:	str	r0, [sp, #312]	; 0x138
   20c24:	blt	20e4c <__assert_fail@plt+0xfd64>
   20c28:	b	20e6c <__assert_fail@plt+0xfd84>
   20c2c:	b	20c30 <__assert_fail@plt+0xfb48>
   20c30:	ldr	r0, [pc, #2968]	; 217d0 <__assert_fail@plt+0x106e8>
   20c34:	ldr	r1, [fp, #-12]
   20c38:	cmp	r1, r0
   20c3c:	blt	20c54 <__assert_fail@plt+0xfb6c>
   20c40:	b	20c60 <__assert_fail@plt+0xfb78>
   20c44:	ldr	r0, [fp, #-12]
   20c48:	movw	r1, #0
   20c4c:	cmp	r1, r0
   20c50:	bge	20c60 <__assert_fail@plt+0xfb78>
   20c54:	movw	r0, #0
   20c58:	str	r0, [sp, #308]	; 0x134
   20c5c:	b	20c78 <__assert_fail@plt+0xfb90>
   20c60:	ldr	r0, [pc, #2924]	; 217d4 <__assert_fail@plt+0x106ec>
   20c64:	ldr	r1, [fp, #-12]
   20c68:	movw	r2, #0
   20c6c:	sub	r1, r2, r1
   20c70:	sdiv	r0, r0, r1
   20c74:	str	r0, [sp, #308]	; 0x134
   20c78:	ldr	r0, [sp, #308]	; 0x134
   20c7c:	ldr	r1, [fp, #-8]
   20c80:	ldr	r2, [r1]
   20c84:	ldr	r1, [r1, #4]
   20c88:	mvn	r1, r1
   20c8c:	mvn	r2, r2
   20c90:	subs	r2, r2, r0
   20c94:	sbcs	r0, r1, r0, asr #31
   20c98:	str	r2, [sp, #304]	; 0x130
   20c9c:	str	r0, [sp, #300]	; 0x12c
   20ca0:	bge	20e4c <__assert_fail@plt+0xfd64>
   20ca4:	b	20e6c <__assert_fail@plt+0xfd84>
   20ca8:	ldr	r0, [fp, #-12]
   20cac:	cmn	r0, #1
   20cb0:	bne	20d38 <__assert_fail@plt+0xfc50>
   20cb4:	b	20cb8 <__assert_fail@plt+0xfbd0>
   20cb8:	ldr	r0, [fp, #-8]
   20cbc:	ldr	r1, [r0]
   20cc0:	ldr	r0, [r0, #4]
   20cc4:	adds	r1, r1, #-2147483648	; 0x80000000
   20cc8:	sbc	r0, r0, #0
   20ccc:	rsbs	r1, r1, #0
   20cd0:	rscs	r0, r0, #0
   20cd4:	str	r1, [sp, #296]	; 0x128
   20cd8:	str	r0, [sp, #292]	; 0x124
   20cdc:	blt	20e4c <__assert_fail@plt+0xfd64>
   20ce0:	b	20e6c <__assert_fail@plt+0xfd84>
   20ce4:	ldr	r0, [fp, #-8]
   20ce8:	ldr	r1, [r0]
   20cec:	ldr	r0, [r0, #4]
   20cf0:	subs	r1, r1, #1
   20cf4:	sbcs	r0, r0, #0
   20cf8:	str	r1, [sp, #288]	; 0x120
   20cfc:	str	r0, [sp, #284]	; 0x11c
   20d00:	blt	20e6c <__assert_fail@plt+0xfd84>
   20d04:	b	20d08 <__assert_fail@plt+0xfc20>
   20d08:	ldr	r0, [fp, #-8]
   20d0c:	ldr	r1, [r0]
   20d10:	ldr	r0, [r0, #4]
   20d14:	subs	r1, r1, #1
   20d18:	sbc	r0, r0, #0
   20d1c:	mvn	r2, #-2147483648	; 0x80000000
   20d20:	subs	r1, r2, r1
   20d24:	rscs	r0, r0, #0
   20d28:	str	r1, [sp, #280]	; 0x118
   20d2c:	str	r0, [sp, #276]	; 0x114
   20d30:	blt	20e4c <__assert_fail@plt+0xfd64>
   20d34:	b	20e6c <__assert_fail@plt+0xfd84>
   20d38:	ldr	r0, [fp, #-12]
   20d3c:	mov	r1, #-2147483648	; 0x80000000
   20d40:	sdiv	r0, r1, r0
   20d44:	ldr	r1, [fp, #-8]
   20d48:	ldr	r2, [r1]
   20d4c:	ldr	r1, [r1, #4]
   20d50:	subs	r2, r0, r2
   20d54:	rscs	r0, r1, r0, asr #31
   20d58:	str	r2, [sp, #272]	; 0x110
   20d5c:	str	r0, [sp, #268]	; 0x10c
   20d60:	blt	20e4c <__assert_fail@plt+0xfd64>
   20d64:	b	20e6c <__assert_fail@plt+0xfd84>
   20d68:	ldr	r0, [fp, #-12]
   20d6c:	cmp	r0, #0
   20d70:	bne	20d78 <__assert_fail@plt+0xfc90>
   20d74:	b	20e6c <__assert_fail@plt+0xfd84>
   20d78:	ldr	r0, [fp, #-8]
   20d7c:	ldr	r0, [r0, #4]
   20d80:	cmn	r0, #1
   20d84:	bgt	20e1c <__assert_fail@plt+0xfd34>
   20d88:	b	20d8c <__assert_fail@plt+0xfca4>
   20d8c:	b	20d90 <__assert_fail@plt+0xfca8>
   20d90:	b	20de8 <__assert_fail@plt+0xfd00>
   20d94:	b	20de8 <__assert_fail@plt+0xfd00>
   20d98:	ldr	r0, [fp, #-8]
   20d9c:	ldr	r1, [r0]
   20da0:	ldr	r0, [r0, #4]
   20da4:	and	r0, r1, r0
   20da8:	cmn	r0, #1
   20dac:	bne	20de8 <__assert_fail@plt+0xfd00>
   20db0:	b	20db4 <__assert_fail@plt+0xfccc>
   20db4:	b	20db8 <__assert_fail@plt+0xfcd0>
   20db8:	ldr	r0, [fp, #-12]
   20dbc:	add	r0, r0, #-2147483648	; 0x80000000
   20dc0:	movw	r1, #0
   20dc4:	cmp	r1, r0
   20dc8:	blt	20e4c <__assert_fail@plt+0xfd64>
   20dcc:	b	20e6c <__assert_fail@plt+0xfd84>
   20dd0:	ldr	r0, [pc, #2556]	; 217d4 <__assert_fail@plt+0x106ec>
   20dd4:	ldr	r1, [fp, #-12]
   20dd8:	sub	r1, r1, #1
   20ddc:	cmp	r0, r1
   20de0:	blt	20e4c <__assert_fail@plt+0xfd64>
   20de4:	b	20e6c <__assert_fail@plt+0xfd84>
   20de8:	ldr	r0, [fp, #-8]
   20dec:	ldr	r2, [r0]
   20df0:	ldr	r3, [r0, #4]
   20df4:	mov	r0, #-2147483648	; 0x80000000
   20df8:	mvn	r1, #0
   20dfc:	bl	21eb4 <__assert_fail@plt+0x10dcc>
   20e00:	ldr	r2, [fp, #-12]
   20e04:	subs	r0, r0, r2
   20e08:	sbcs	r1, r1, r2, asr #31
   20e0c:	str	r0, [sp, #264]	; 0x108
   20e10:	str	r1, [sp, #260]	; 0x104
   20e14:	blt	20e4c <__assert_fail@plt+0xfd64>
   20e18:	b	20e6c <__assert_fail@plt+0xfd84>
   20e1c:	ldr	r0, [fp, #-12]
   20e20:	mvn	r1, #-2147483648	; 0x80000000
   20e24:	sdiv	r0, r1, r0
   20e28:	ldr	r1, [fp, #-8]
   20e2c:	ldr	r2, [r1]
   20e30:	ldr	r1, [r1, #4]
   20e34:	subs	r2, r0, r2
   20e38:	rscs	r0, r1, r0, asr #31
   20e3c:	str	r2, [sp, #256]	; 0x100
   20e40:	str	r0, [sp, #252]	; 0xfc
   20e44:	bge	20e6c <__assert_fail@plt+0xfd84>
   20e48:	b	20e4c <__assert_fail@plt+0xfd64>
   20e4c:	ldr	r0, [fp, #-8]
   20e50:	ldr	r0, [r0]
   20e54:	ldr	r1, [fp, #-12]
   20e58:	mul	r0, r0, r1
   20e5c:	asr	r1, r0, #31
   20e60:	str	r0, [fp, #-24]	; 0xffffffe8
   20e64:	str	r1, [fp, #-20]	; 0xffffffec
   20e68:	b	21774 <__assert_fail@plt+0x1068c>
   20e6c:	ldr	r0, [fp, #-8]
   20e70:	ldr	r0, [r0]
   20e74:	ldr	r1, [fp, #-12]
   20e78:	mul	r0, r0, r1
   20e7c:	asr	r1, r0, #31
   20e80:	str	r0, [fp, #-24]	; 0xffffffe8
   20e84:	str	r1, [fp, #-20]	; 0xffffffec
   20e88:	b	217a8 <__assert_fail@plt+0x106c0>
   20e8c:	ldr	r0, [fp, #-12]
   20e90:	cmp	r0, #0
   20e94:	bge	21014 <__assert_fail@plt+0xff2c>
   20e98:	ldr	r0, [fp, #-8]
   20e9c:	ldr	r0, [r0, #4]
   20ea0:	cmn	r0, #1
   20ea4:	bgt	20f5c <__assert_fail@plt+0xfe74>
   20ea8:	b	20eac <__assert_fail@plt+0xfdc4>
   20eac:	b	20ee0 <__assert_fail@plt+0xfdf8>
   20eb0:	ldr	r0, [fp, #-8]
   20eb4:	ldr	r1, [r0]
   20eb8:	ldr	r0, [r0, #4]
   20ebc:	ldr	r2, [fp, #-12]
   20ec0:	mvn	r3, #0
   20ec4:	udiv	r2, r3, r2
   20ec8:	subs	r1, r1, r2
   20ecc:	sbcs	r0, r0, #0
   20ed0:	str	r1, [sp, #248]	; 0xf8
   20ed4:	str	r0, [sp, #244]	; 0xf4
   20ed8:	blt	210fc <__assert_fail@plt+0x10014>
   20edc:	b	2111c <__assert_fail@plt+0x10034>
   20ee0:	b	20ee4 <__assert_fail@plt+0xfdfc>
   20ee4:	ldr	r0, [pc, #2276]	; 217d0 <__assert_fail@plt+0x106e8>
   20ee8:	ldr	r1, [fp, #-12]
   20eec:	cmp	r1, r0
   20ef0:	blt	20f08 <__assert_fail@plt+0xfe20>
   20ef4:	b	20f14 <__assert_fail@plt+0xfe2c>
   20ef8:	ldr	r0, [fp, #-12]
   20efc:	movw	r1, #0
   20f00:	cmp	r1, r0
   20f04:	bge	20f14 <__assert_fail@plt+0xfe2c>
   20f08:	movw	r0, #1
   20f0c:	str	r0, [sp, #240]	; 0xf0
   20f10:	b	20f2c <__assert_fail@plt+0xfe44>
   20f14:	ldr	r0, [fp, #-12]
   20f18:	movw	r1, #0
   20f1c:	sub	r0, r1, r0
   20f20:	mvn	r1, #0
   20f24:	udiv	r0, r1, r0
   20f28:	str	r0, [sp, #240]	; 0xf0
   20f2c:	ldr	r0, [sp, #240]	; 0xf0
   20f30:	ldr	r1, [fp, #-8]
   20f34:	ldr	r2, [r1]
   20f38:	ldr	r1, [r1, #4]
   20f3c:	mvn	r1, r1
   20f40:	mvn	r2, r2
   20f44:	subs	r0, r2, r0
   20f48:	sbcs	r1, r1, #0
   20f4c:	str	r0, [sp, #236]	; 0xec
   20f50:	str	r1, [sp, #232]	; 0xe8
   20f54:	bge	210fc <__assert_fail@plt+0x10014>
   20f58:	b	2111c <__assert_fail@plt+0x10034>
   20f5c:	b	20f60 <__assert_fail@plt+0xfe78>
   20f60:	b	20fe4 <__assert_fail@plt+0xfefc>
   20f64:	b	20fe4 <__assert_fail@plt+0xfefc>
   20f68:	ldr	r0, [fp, #-12]
   20f6c:	cmn	r0, #1
   20f70:	bne	20fe4 <__assert_fail@plt+0xfefc>
   20f74:	b	20f78 <__assert_fail@plt+0xfe90>
   20f78:	ldr	r0, [fp, #-8]
   20f7c:	ldr	r1, [r0]
   20f80:	ldr	r0, [r0, #4]
   20f84:	rsbs	r1, r1, #0
   20f88:	rscs	r0, r0, #0
   20f8c:	str	r1, [sp, #228]	; 0xe4
   20f90:	str	r0, [sp, #224]	; 0xe0
   20f94:	blt	210fc <__assert_fail@plt+0x10014>
   20f98:	b	2111c <__assert_fail@plt+0x10034>
   20f9c:	ldr	r0, [fp, #-8]
   20fa0:	ldr	r1, [r0]
   20fa4:	ldr	r0, [r0, #4]
   20fa8:	subs	r1, r1, #1
   20fac:	sbcs	r0, r0, #0
   20fb0:	str	r1, [sp, #220]	; 0xdc
   20fb4:	str	r0, [sp, #216]	; 0xd8
   20fb8:	blt	2111c <__assert_fail@plt+0x10034>
   20fbc:	b	20fc0 <__assert_fail@plt+0xfed8>
   20fc0:	ldr	r0, [fp, #-8]
   20fc4:	ldr	r1, [r0]
   20fc8:	ldr	r0, [r0, #4]
   20fcc:	subs	r1, r1, #1
   20fd0:	sbc	r0, r0, #0
   20fd4:	cmn	r0, #1
   20fd8:	str	r1, [sp, #212]	; 0xd4
   20fdc:	bgt	210fc <__assert_fail@plt+0x10014>
   20fe0:	b	2111c <__assert_fail@plt+0x10034>
   20fe4:	ldr	r0, [fp, #-12]
   20fe8:	mov	r1, #0
   20fec:	sdiv	r0, r1, r0
   20ff0:	ldr	r1, [fp, #-8]
   20ff4:	ldr	r2, [r1]
   20ff8:	ldr	r1, [r1, #4]
   20ffc:	subs	r2, r0, r2
   21000:	rscs	r0, r1, r0, asr #31
   21004:	str	r2, [sp, #208]	; 0xd0
   21008:	str	r0, [sp, #204]	; 0xcc
   2100c:	blt	210fc <__assert_fail@plt+0x10014>
   21010:	b	2111c <__assert_fail@plt+0x10034>
   21014:	ldr	r0, [fp, #-12]
   21018:	cmp	r0, #0
   2101c:	bne	21024 <__assert_fail@plt+0xff3c>
   21020:	b	2111c <__assert_fail@plt+0x10034>
   21024:	ldr	r0, [fp, #-8]
   21028:	ldr	r0, [r0, #4]
   2102c:	cmn	r0, #1
   21030:	bgt	210cc <__assert_fail@plt+0xffe4>
   21034:	b	21038 <__assert_fail@plt+0xff50>
   21038:	b	2103c <__assert_fail@plt+0xff54>
   2103c:	b	21094 <__assert_fail@plt+0xffac>
   21040:	b	21094 <__assert_fail@plt+0xffac>
   21044:	ldr	r0, [fp, #-8]
   21048:	ldr	r1, [r0]
   2104c:	ldr	r0, [r0, #4]
   21050:	and	r0, r1, r0
   21054:	cmn	r0, #1
   21058:	bne	21094 <__assert_fail@plt+0xffac>
   2105c:	b	21060 <__assert_fail@plt+0xff78>
   21060:	b	21064 <__assert_fail@plt+0xff7c>
   21064:	ldr	r0, [fp, #-12]
   21068:	add	r0, r0, #0
   2106c:	movw	r1, #0
   21070:	cmp	r1, r0
   21074:	blt	210fc <__assert_fail@plt+0x10014>
   21078:	b	2111c <__assert_fail@plt+0x10034>
   2107c:	ldr	r0, [fp, #-12]
   21080:	sub	r0, r0, #1
   21084:	mvn	r1, #0
   21088:	cmp	r1, r0
   2108c:	blt	210fc <__assert_fail@plt+0x10014>
   21090:	b	2111c <__assert_fail@plt+0x10034>
   21094:	ldr	r0, [fp, #-8]
   21098:	ldr	r2, [r0]
   2109c:	ldr	r3, [r0, #4]
   210a0:	mov	r0, #0
   210a4:	str	r0, [sp, #200]	; 0xc8
   210a8:	ldr	r1, [sp, #200]	; 0xc8
   210ac:	bl	21eb4 <__assert_fail@plt+0x10dcc>
   210b0:	ldr	r2, [fp, #-12]
   210b4:	subs	r0, r0, r2
   210b8:	sbcs	r1, r1, r2, asr #31
   210bc:	str	r0, [sp, #196]	; 0xc4
   210c0:	str	r1, [sp, #192]	; 0xc0
   210c4:	blt	210fc <__assert_fail@plt+0x10014>
   210c8:	b	2111c <__assert_fail@plt+0x10034>
   210cc:	ldr	r0, [fp, #-12]
   210d0:	mvn	r1, #0
   210d4:	udiv	r0, r1, r0
   210d8:	ldr	r1, [fp, #-8]
   210dc:	ldr	r2, [r1]
   210e0:	ldr	r1, [r1, #4]
   210e4:	subs	r0, r0, r2
   210e8:	rscs	r1, r1, #0
   210ec:	str	r0, [sp, #188]	; 0xbc
   210f0:	str	r1, [sp, #184]	; 0xb8
   210f4:	bge	2111c <__assert_fail@plt+0x10034>
   210f8:	b	210fc <__assert_fail@plt+0x10014>
   210fc:	ldr	r0, [fp, #-8]
   21100:	ldr	r0, [r0]
   21104:	ldr	r1, [fp, #-12]
   21108:	mul	r0, r0, r1
   2110c:	mov	r1, #0
   21110:	str	r1, [fp, #-20]	; 0xffffffec
   21114:	str	r0, [fp, #-24]	; 0xffffffe8
   21118:	b	21774 <__assert_fail@plt+0x1068c>
   2111c:	ldr	r0, [fp, #-8]
   21120:	ldr	r0, [r0]
   21124:	ldr	r1, [fp, #-12]
   21128:	mul	r0, r0, r1
   2112c:	mov	r1, #0
   21130:	str	r1, [fp, #-20]	; 0xffffffec
   21134:	str	r0, [fp, #-24]	; 0xffffffe8
   21138:	b	217a8 <__assert_fail@plt+0x106c0>
   2113c:	b	21140 <__assert_fail@plt+0x10058>
   21140:	ldr	r0, [fp, #-12]
   21144:	cmp	r0, #0
   21148:	bge	21310 <__assert_fail@plt+0x10228>
   2114c:	ldr	r0, [fp, #-8]
   21150:	ldr	r0, [r0, #4]
   21154:	cmn	r0, #1
   21158:	bgt	21258 <__assert_fail@plt+0x10170>
   2115c:	b	21160 <__assert_fail@plt+0x10078>
   21160:	b	21164 <__assert_fail@plt+0x1007c>
   21164:	ldr	r0, [fp, #-8]
   21168:	ldr	r1, [r0]
   2116c:	ldr	r0, [r0, #4]
   21170:	ldr	r2, [fp, #-12]
   21174:	asr	r3, r2, #31
   21178:	mvn	ip, #0
   2117c:	mvn	lr, #-2147483648	; 0x80000000
   21180:	str	r0, [sp, #180]	; 0xb4
   21184:	mov	r0, ip
   21188:	str	r1, [sp, #176]	; 0xb0
   2118c:	mov	r1, lr
   21190:	bl	21eb4 <__assert_fail@plt+0x10dcc>
   21194:	ldr	r2, [sp, #176]	; 0xb0
   21198:	subs	r0, r2, r0
   2119c:	ldr	r2, [sp, #180]	; 0xb4
   211a0:	sbcs	r1, r2, r1
   211a4:	str	r0, [sp, #172]	; 0xac
   211a8:	str	r1, [sp, #168]	; 0xa8
   211ac:	blt	21404 <__assert_fail@plt+0x1031c>
   211b0:	b	21430 <__assert_fail@plt+0x10348>
   211b4:	b	211b8 <__assert_fail@plt+0x100d0>
   211b8:	ldr	r0, [pc, #1552]	; 217d0 <__assert_fail@plt+0x106e8>
   211bc:	ldr	r1, [fp, #-12]
   211c0:	cmp	r1, r0
   211c4:	blt	211dc <__assert_fail@plt+0x100f4>
   211c8:	b	211f0 <__assert_fail@plt+0x10108>
   211cc:	ldr	r0, [fp, #-12]
   211d0:	movw	r1, #0
   211d4:	cmp	r1, r0
   211d8:	bge	211f0 <__assert_fail@plt+0x10108>
   211dc:	mov	r0, #0
   211e0:	mvn	r1, #0
   211e4:	str	r1, [sp, #164]	; 0xa4
   211e8:	str	r0, [sp, #160]	; 0xa0
   211ec:	b	21224 <__assert_fail@plt+0x1013c>
   211f0:	ldr	r0, [fp, #-12]
   211f4:	rsb	r0, r0, #0
   211f8:	asr	r3, r0, #31
   211fc:	mvn	r1, #0
   21200:	mvn	r2, #-2147483648	; 0x80000000
   21204:	str	r0, [sp, #156]	; 0x9c
   21208:	mov	r0, r1
   2120c:	mov	r1, r2
   21210:	ldr	r2, [sp, #156]	; 0x9c
   21214:	bl	21eb4 <__assert_fail@plt+0x10dcc>
   21218:	str	r0, [sp, #164]	; 0xa4
   2121c:	str	r1, [sp, #160]	; 0xa0
   21220:	b	21224 <__assert_fail@plt+0x1013c>
   21224:	ldr	r0, [sp, #160]	; 0xa0
   21228:	ldr	r1, [sp, #164]	; 0xa4
   2122c:	ldr	r2, [fp, #-8]
   21230:	ldr	r3, [r2]
   21234:	ldr	r2, [r2, #4]
   21238:	mvn	r2, r2
   2123c:	mvn	r3, r3
   21240:	subs	r1, r3, r1
   21244:	sbcs	r0, r2, r0
   21248:	str	r1, [sp, #152]	; 0x98
   2124c:	str	r0, [sp, #148]	; 0x94
   21250:	bge	21404 <__assert_fail@plt+0x1031c>
   21254:	b	21430 <__assert_fail@plt+0x10348>
   21258:	ldr	r0, [fp, #-12]
   2125c:	cmn	r0, #1
   21260:	bne	212c8 <__assert_fail@plt+0x101e0>
   21264:	b	21268 <__assert_fail@plt+0x10180>
   21268:	ldr	r0, [fp, #-8]
   2126c:	ldr	r1, [r0]
   21270:	ldr	r0, [r0, #4]
   21274:	add	r0, r0, #-2147483648	; 0x80000000
   21278:	rsbs	r1, r1, #0
   2127c:	rscs	r0, r0, #0
   21280:	str	r1, [sp, #144]	; 0x90
   21284:	str	r0, [sp, #140]	; 0x8c
   21288:	blt	21404 <__assert_fail@plt+0x1031c>
   2128c:	b	21430 <__assert_fail@plt+0x10348>
   21290:	ldr	r0, [fp, #-8]
   21294:	ldr	r1, [r0]
   21298:	ldr	r0, [r0, #4]
   2129c:	subs	r1, r1, #1
   212a0:	sbcs	r0, r0, #0
   212a4:	str	r1, [sp, #136]	; 0x88
   212a8:	str	r0, [sp, #132]	; 0x84
   212ac:	blt	21430 <__assert_fail@plt+0x10348>
   212b0:	b	212b4 <__assert_fail@plt+0x101cc>
   212b4:	mov	r0, #0
   212b8:	cmp	r0, #0
   212bc:	bne	21404 <__assert_fail@plt+0x1031c>
   212c0:	b	21430 <__assert_fail@plt+0x10348>
   212c4:			; <UNDEFINED> instruction: 0xffff8000
   212c8:	ldr	r0, [fp, #-12]
   212cc:	asr	r3, r0, #31
   212d0:	mov	r1, #0
   212d4:	mov	r2, #-2147483648	; 0x80000000
   212d8:	str	r0, [sp, #128]	; 0x80
   212dc:	mov	r0, r1
   212e0:	mov	r1, r2
   212e4:	ldr	r2, [sp, #128]	; 0x80
   212e8:	bl	21eb4 <__assert_fail@plt+0x10dcc>
   212ec:	ldr	r2, [fp, #-8]
   212f0:	ldr	r3, [r2]
   212f4:	ldr	r2, [r2, #4]
   212f8:	subs	r0, r0, r3
   212fc:	sbcs	r1, r1, r2
   21300:	str	r0, [sp, #124]	; 0x7c
   21304:	str	r1, [sp, #120]	; 0x78
   21308:	blt	21404 <__assert_fail@plt+0x1031c>
   2130c:	b	21430 <__assert_fail@plt+0x10348>
   21310:	ldr	r0, [fp, #-12]
   21314:	cmp	r0, #0
   21318:	bne	21320 <__assert_fail@plt+0x10238>
   2131c:	b	21430 <__assert_fail@plt+0x10348>
   21320:	ldr	r0, [fp, #-8]
   21324:	ldr	r0, [r0, #4]
   21328:	cmn	r0, #1
   2132c:	bgt	213bc <__assert_fail@plt+0x102d4>
   21330:	b	21334 <__assert_fail@plt+0x1024c>
   21334:	ldr	r0, [fp, #-8]
   21338:	ldr	r1, [r0]
   2133c:	ldr	r0, [r0, #4]
   21340:	and	r0, r1, r0
   21344:	cmn	r0, #1
   21348:	bne	21388 <__assert_fail@plt+0x102a0>
   2134c:	b	21350 <__assert_fail@plt+0x10268>
   21350:	b	21354 <__assert_fail@plt+0x1026c>
   21354:	ldr	r0, [fp, #-12]
   21358:	mov	r1, #-2147483648	; 0x80000000
   2135c:	add	r1, r1, r0, asr #31
   21360:	rsbs	r0, r0, #0
   21364:	rscs	r1, r1, #0
   21368:	str	r0, [sp, #116]	; 0x74
   2136c:	str	r1, [sp, #112]	; 0x70
   21370:	blt	21404 <__assert_fail@plt+0x1031c>
   21374:	b	21430 <__assert_fail@plt+0x10348>
   21378:	mov	r0, #0
   2137c:	cmp	r0, #0
   21380:	bne	21404 <__assert_fail@plt+0x1031c>
   21384:	b	21430 <__assert_fail@plt+0x10348>
   21388:	ldr	r0, [fp, #-8]
   2138c:	ldr	r2, [r0]
   21390:	ldr	r3, [r0, #4]
   21394:	mov	r0, #0
   21398:	mov	r1, #-2147483648	; 0x80000000
   2139c:	bl	21eb4 <__assert_fail@plt+0x10dcc>
   213a0:	ldr	r2, [fp, #-12]
   213a4:	subs	r0, r0, r2
   213a8:	sbcs	r1, r1, r2, asr #31
   213ac:	str	r0, [sp, #108]	; 0x6c
   213b0:	str	r1, [sp, #104]	; 0x68
   213b4:	blt	21404 <__assert_fail@plt+0x1031c>
   213b8:	b	21430 <__assert_fail@plt+0x10348>
   213bc:	ldr	r0, [fp, #-12]
   213c0:	asr	r3, r0, #31
   213c4:	mvn	r1, #0
   213c8:	mvn	r2, #-2147483648	; 0x80000000
   213cc:	str	r0, [sp, #100]	; 0x64
   213d0:	mov	r0, r1
   213d4:	mov	r1, r2
   213d8:	ldr	r2, [sp, #100]	; 0x64
   213dc:	bl	21eb4 <__assert_fail@plt+0x10dcc>
   213e0:	ldr	r2, [fp, #-8]
   213e4:	ldr	r3, [r2]
   213e8:	ldr	r2, [r2, #4]
   213ec:	subs	r0, r0, r3
   213f0:	sbcs	r1, r1, r2
   213f4:	str	r0, [sp, #96]	; 0x60
   213f8:	str	r1, [sp, #92]	; 0x5c
   213fc:	bge	21430 <__assert_fail@plt+0x10348>
   21400:	b	21404 <__assert_fail@plt+0x1031c>
   21404:	ldr	r0, [fp, #-8]
   21408:	ldr	r1, [r0]
   2140c:	ldr	r0, [r0, #4]
   21410:	ldr	r2, [fp, #-12]
   21414:	asr	r3, r2, #31
   21418:	umull	ip, lr, r1, r2
   2141c:	mla	r1, r1, r3, lr
   21420:	mla	r0, r0, r2, r1
   21424:	str	ip, [fp, #-24]	; 0xffffffe8
   21428:	str	r0, [fp, #-20]	; 0xffffffec
   2142c:	b	21774 <__assert_fail@plt+0x1068c>
   21430:	ldr	r0, [fp, #-8]
   21434:	ldr	r1, [r0]
   21438:	ldr	r0, [r0, #4]
   2143c:	ldr	r2, [fp, #-12]
   21440:	asr	r3, r2, #31
   21444:	umull	ip, lr, r1, r2
   21448:	mla	r1, r1, r3, lr
   2144c:	mla	r0, r0, r2, r1
   21450:	str	ip, [fp, #-24]	; 0xffffffe8
   21454:	str	r0, [fp, #-20]	; 0xffffffec
   21458:	b	217a8 <__assert_fail@plt+0x106c0>
   2145c:	ldr	r0, [fp, #-12]
   21460:	cmp	r0, #0
   21464:	bge	21620 <__assert_fail@plt+0x10538>
   21468:	ldr	r0, [fp, #-8]
   2146c:	ldr	r0, [r0, #4]
   21470:	cmn	r0, #1
   21474:	bgt	21568 <__assert_fail@plt+0x10480>
   21478:	b	2147c <__assert_fail@plt+0x10394>
   2147c:	b	214cc <__assert_fail@plt+0x103e4>
   21480:	ldr	r0, [fp, #-8]
   21484:	ldr	r1, [r0]
   21488:	ldr	r0, [r0, #4]
   2148c:	ldr	r2, [fp, #-12]
   21490:	asr	r3, r2, #31
   21494:	mvn	ip, #0
   21498:	str	r0, [sp, #88]	; 0x58
   2149c:	mov	r0, ip
   214a0:	str	r1, [sp, #84]	; 0x54
   214a4:	mov	r1, ip
   214a8:	bl	21f88 <__assert_fail@plt+0x10ea0>
   214ac:	ldr	r2, [sp, #84]	; 0x54
   214b0:	subs	r0, r2, r0
   214b4:	ldr	r2, [sp, #88]	; 0x58
   214b8:	sbcs	r1, r2, r1
   214bc:	str	r0, [sp, #80]	; 0x50
   214c0:	str	r1, [sp, #76]	; 0x4c
   214c4:	bcc	2171c <__assert_fail@plt+0x10634>
   214c8:	b	21748 <__assert_fail@plt+0x10660>
   214cc:	b	214d0 <__assert_fail@plt+0x103e8>
   214d0:	ldr	r0, [pc, #760]	; 217d0 <__assert_fail@plt+0x106e8>
   214d4:	ldr	r1, [fp, #-12]
   214d8:	cmp	r1, r0
   214dc:	blt	214f4 <__assert_fail@plt+0x1040c>
   214e0:	b	21508 <__assert_fail@plt+0x10420>
   214e4:	ldr	r0, [fp, #-12]
   214e8:	movw	r1, #0
   214ec:	cmp	r1, r0
   214f0:	bge	21508 <__assert_fail@plt+0x10420>
   214f4:	mov	r0, #1
   214f8:	mvn	r1, #0
   214fc:	str	r1, [sp, #72]	; 0x48
   21500:	str	r0, [sp, #68]	; 0x44
   21504:	b	21534 <__assert_fail@plt+0x1044c>
   21508:	ldr	r0, [fp, #-12]
   2150c:	rsb	r0, r0, #0
   21510:	asr	r3, r0, #31
   21514:	mvn	r1, #0
   21518:	str	r0, [sp, #64]	; 0x40
   2151c:	mov	r0, r1
   21520:	ldr	r2, [sp, #64]	; 0x40
   21524:	bl	21f88 <__assert_fail@plt+0x10ea0>
   21528:	str	r0, [sp, #72]	; 0x48
   2152c:	str	r1, [sp, #68]	; 0x44
   21530:	b	21534 <__assert_fail@plt+0x1044c>
   21534:	ldr	r0, [sp, #68]	; 0x44
   21538:	ldr	r1, [sp, #72]	; 0x48
   2153c:	ldr	r2, [fp, #-8]
   21540:	ldr	r3, [r2]
   21544:	ldr	r2, [r2, #4]
   21548:	mvn	r2, r2
   2154c:	mvn	r3, r3
   21550:	subs	r1, r3, r1
   21554:	sbcs	r0, r2, r0
   21558:	str	r1, [sp, #60]	; 0x3c
   2155c:	str	r0, [sp, #56]	; 0x38
   21560:	bcs	2171c <__assert_fail@plt+0x10634>
   21564:	b	21748 <__assert_fail@plt+0x10660>
   21568:	b	2156c <__assert_fail@plt+0x10484>
   2156c:	b	215f0 <__assert_fail@plt+0x10508>
   21570:	b	215f0 <__assert_fail@plt+0x10508>
   21574:	ldr	r0, [fp, #-12]
   21578:	cmn	r0, #1
   2157c:	bne	215f0 <__assert_fail@plt+0x10508>
   21580:	b	21584 <__assert_fail@plt+0x1049c>
   21584:	ldr	r0, [fp, #-8]
   21588:	ldr	r1, [r0]
   2158c:	ldr	r0, [r0, #4]
   21590:	rsbs	r1, r1, #0
   21594:	rscs	r0, r0, #0
   21598:	str	r1, [sp, #52]	; 0x34
   2159c:	str	r0, [sp, #48]	; 0x30
   215a0:	blt	2171c <__assert_fail@plt+0x10634>
   215a4:	b	21748 <__assert_fail@plt+0x10660>
   215a8:	ldr	r0, [fp, #-8]
   215ac:	ldr	r1, [r0]
   215b0:	ldr	r0, [r0, #4]
   215b4:	subs	r1, r1, #1
   215b8:	sbcs	r0, r0, #0
   215bc:	str	r1, [sp, #44]	; 0x2c
   215c0:	str	r0, [sp, #40]	; 0x28
   215c4:	blt	21748 <__assert_fail@plt+0x10660>
   215c8:	b	215cc <__assert_fail@plt+0x104e4>
   215cc:	ldr	r0, [fp, #-8]
   215d0:	ldr	r1, [r0]
   215d4:	ldr	r0, [r0, #4]
   215d8:	subs	r1, r1, #1
   215dc:	sbc	r0, r0, #0
   215e0:	cmn	r0, #1
   215e4:	str	r1, [sp, #36]	; 0x24
   215e8:	bgt	2171c <__assert_fail@plt+0x10634>
   215ec:	b	21748 <__assert_fail@plt+0x10660>
   215f0:	ldr	r0, [fp, #-12]
   215f4:	mov	r1, #0
   215f8:	sdiv	r0, r1, r0
   215fc:	ldr	r1, [fp, #-8]
   21600:	ldr	r2, [r1]
   21604:	ldr	r1, [r1, #4]
   21608:	subs	r2, r0, r2
   2160c:	rscs	r0, r1, r0, asr #31
   21610:	str	r2, [sp, #32]
   21614:	str	r0, [sp, #28]
   21618:	blt	2171c <__assert_fail@plt+0x10634>
   2161c:	b	21748 <__assert_fail@plt+0x10660>
   21620:	ldr	r0, [fp, #-12]
   21624:	cmp	r0, #0
   21628:	bne	21630 <__assert_fail@plt+0x10548>
   2162c:	b	21748 <__assert_fail@plt+0x10660>
   21630:	ldr	r0, [fp, #-8]
   21634:	ldr	r0, [r0, #4]
   21638:	cmn	r0, #1
   2163c:	bgt	216dc <__assert_fail@plt+0x105f4>
   21640:	b	21644 <__assert_fail@plt+0x1055c>
   21644:	b	21648 <__assert_fail@plt+0x10560>
   21648:	b	216a0 <__assert_fail@plt+0x105b8>
   2164c:	b	216a0 <__assert_fail@plt+0x105b8>
   21650:	ldr	r0, [fp, #-8]
   21654:	ldr	r1, [r0]
   21658:	ldr	r0, [r0, #4]
   2165c:	and	r0, r1, r0
   21660:	cmn	r0, #1
   21664:	bne	216a0 <__assert_fail@plt+0x105b8>
   21668:	b	2166c <__assert_fail@plt+0x10584>
   2166c:	b	21670 <__assert_fail@plt+0x10588>
   21670:	ldr	r0, [fp, #-12]
   21674:	add	r0, r0, #0
   21678:	movw	r1, #0
   2167c:	cmp	r1, r0
   21680:	blt	2171c <__assert_fail@plt+0x10634>
   21684:	b	21748 <__assert_fail@plt+0x10660>
   21688:	ldr	r0, [fp, #-12]
   2168c:	sub	r0, r0, #1
   21690:	mvn	r1, #0
   21694:	cmp	r1, r0
   21698:	blt	2171c <__assert_fail@plt+0x10634>
   2169c:	b	21748 <__assert_fail@plt+0x10660>
   216a0:	ldr	r0, [fp, #-8]
   216a4:	ldr	r2, [r0]
   216a8:	ldr	r3, [r0, #4]
   216ac:	mov	r0, #0
   216b0:	str	r0, [sp, #24]
   216b4:	ldr	r1, [sp, #24]
   216b8:	bl	21eb4 <__assert_fail@plt+0x10dcc>
   216bc:	ldr	r2, [fp, #-12]
   216c0:	subs	r0, r0, r2
   216c4:	sbcs	r1, r1, r2, asr #31
   216c8:	str	r0, [sp, #20]
   216cc:	str	r1, [sp, #16]
   216d0:	blt	2171c <__assert_fail@plt+0x10634>
   216d4:	b	21748 <__assert_fail@plt+0x10660>
   216d8:	svcvc	0x00ffffff
   216dc:	ldr	r0, [fp, #-12]
   216e0:	asr	r3, r0, #31
   216e4:	mvn	r1, #0
   216e8:	str	r0, [sp, #12]
   216ec:	mov	r0, r1
   216f0:	ldr	r2, [sp, #12]
   216f4:	bl	21f88 <__assert_fail@plt+0x10ea0>
   216f8:	ldr	r2, [fp, #-8]
   216fc:	ldr	r3, [r2]
   21700:	ldr	r2, [r2, #4]
   21704:	subs	r0, r0, r3
   21708:	sbcs	r1, r1, r2
   2170c:	str	r0, [sp, #8]
   21710:	str	r1, [sp, #4]
   21714:	bcs	21748 <__assert_fail@plt+0x10660>
   21718:	b	2171c <__assert_fail@plt+0x10634>
   2171c:	ldr	r0, [fp, #-8]
   21720:	ldr	r1, [r0]
   21724:	ldr	r0, [r0, #4]
   21728:	ldr	r2, [fp, #-12]
   2172c:	asr	r3, r2, #31
   21730:	umull	ip, lr, r1, r2
   21734:	mla	r1, r1, r3, lr
   21738:	mla	r0, r0, r2, r1
   2173c:	str	ip, [fp, #-24]	; 0xffffffe8
   21740:	str	r0, [fp, #-20]	; 0xffffffec
   21744:	b	21774 <__assert_fail@plt+0x1068c>
   21748:	ldr	r0, [fp, #-8]
   2174c:	ldr	r1, [r0]
   21750:	ldr	r0, [r0, #4]
   21754:	ldr	r2, [fp, #-12]
   21758:	asr	r3, r2, #31
   2175c:	umull	ip, lr, r1, r2
   21760:	mla	r1, r1, r3, lr
   21764:	mla	r0, r0, r2, r1
   21768:	str	ip, [fp, #-24]	; 0xffffffe8
   2176c:	str	r0, [fp, #-20]	; 0xffffffec
   21770:	b	217a8 <__assert_fail@plt+0x106c0>
   21774:	ldr	r0, [fp, #-8]
   21778:	ldr	r1, [r0, #4]
   2177c:	mvn	r2, #0
   21780:	cmp	r1, #0
   21784:	movwlt	r2, #0
   21788:	mvn	r3, #-2147483648	; 0x80000000
   2178c:	cmp	r1, #0
   21790:	movlt	r3, #-2147483648	; 0x80000000
   21794:	str	r3, [r0, #4]
   21798:	str	r2, [r0]
   2179c:	movw	r0, #1
   217a0:	str	r0, [fp, #-4]
   217a4:	b	217c4 <__assert_fail@plt+0x106dc>
   217a8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   217ac:	ldr	r1, [fp, #-20]	; 0xffffffec
   217b0:	ldr	r2, [fp, #-8]
   217b4:	str	r1, [r2, #4]
   217b8:	str	r0, [r2]
   217bc:	movw	r0, #0
   217c0:	str	r0, [fp, #-4]
   217c4:	ldr	r0, [fp, #-4]
   217c8:	mov	sp, fp
   217cc:	pop	{fp, pc}
   217d0:	andhi	r0, r0, r1
   217d4:	svcvc	0x00ffffff
   217d8:	push	{fp, lr}
   217dc:	mov	fp, sp
   217e0:	sub	sp, sp, #16
   217e4:	str	r0, [fp, #-4]
   217e8:	str	r1, [sp, #8]
   217ec:	str	r2, [sp, #4]
   217f0:	movw	r0, #0
   217f4:	str	r0, [sp]
   217f8:	ldr	r0, [sp, #4]
   217fc:	mvn	r1, #0
   21800:	add	r1, r0, r1
   21804:	str	r1, [sp, #4]
   21808:	cmp	r0, #0
   2180c:	beq	2182c <__assert_fail@plt+0x10744>
   21810:	ldr	r0, [fp, #-4]
   21814:	ldr	r1, [sp, #8]
   21818:	bl	1fb30 <__assert_fail@plt+0xea48>
   2181c:	ldr	r1, [sp]
   21820:	orr	r0, r1, r0
   21824:	str	r0, [sp]
   21828:	b	217f8 <__assert_fail@plt+0x10710>
   2182c:	ldr	r0, [sp]
   21830:	mov	sp, fp
   21834:	pop	{fp, pc}
   21838:	push	{fp, lr}
   2183c:	mov	fp, sp
   21840:	sub	sp, sp, #16
   21844:	str	r0, [sp, #8]
   21848:	str	r1, [sp, #4]
   2184c:	ldr	r0, [sp, #8]
   21850:	cmp	r0, #0
   21854:	beq	21864 <__assert_fail@plt+0x1077c>
   21858:	ldr	r0, [sp, #4]
   2185c:	cmp	r0, #0
   21860:	bne	21870 <__assert_fail@plt+0x10788>
   21864:	movw	r0, #1
   21868:	str	r0, [sp, #4]
   2186c:	str	r0, [sp, #8]
   21870:	ldr	r0, [sp, #4]
   21874:	cmp	r0, #0
   21878:	beq	218ac <__assert_fail@plt+0x107c4>
   2187c:	ldr	r0, [pc, #76]	; 218d0 <__assert_fail@plt+0x107e8>
   21880:	ldr	r1, [sp, #4]
   21884:	udiv	r0, r0, r1
   21888:	ldr	r1, [sp, #8]
   2188c:	cmp	r0, r1
   21890:	bcs	218ac <__assert_fail@plt+0x107c4>
   21894:	bl	11010 <__errno_location@plt>
   21898:	movw	lr, #12
   2189c:	str	lr, [r0]
   218a0:	movw	r0, #0
   218a4:	str	r0, [fp, #-4]
   218a8:	b	218c4 <__assert_fail@plt+0x107dc>
   218ac:	ldr	r0, [sp, #8]
   218b0:	ldr	r1, [sp, #4]
   218b4:	bl	10e6c <calloc@plt>
   218b8:	str	r0, [sp]
   218bc:	ldr	r0, [sp]
   218c0:	str	r0, [fp, #-4]
   218c4:	ldr	r0, [fp, #-4]
   218c8:	mov	sp, fp
   218cc:	pop	{fp, pc}
   218d0:	svcvc	0x00ffffff
   218d4:	push	{fp, lr}
   218d8:	mov	fp, sp
   218dc:	sub	sp, sp, #16
   218e0:	str	r0, [sp, #8]
   218e4:	ldr	r0, [sp, #8]
   218e8:	cmp	r0, #0
   218ec:	bne	218f8 <__assert_fail@plt+0x10810>
   218f0:	movw	r0, #1
   218f4:	str	r0, [sp, #8]
   218f8:	ldr	r0, [pc, #64]	; 21940 <__assert_fail@plt+0x10858>
   218fc:	ldr	r1, [sp, #8]
   21900:	cmp	r0, r1
   21904:	bcs	21920 <__assert_fail@plt+0x10838>
   21908:	bl	11010 <__errno_location@plt>
   2190c:	movw	lr, #12
   21910:	str	lr, [r0]
   21914:	movw	r0, #0
   21918:	str	r0, [fp, #-4]
   2191c:	b	21934 <__assert_fail@plt+0x1084c>
   21920:	ldr	r0, [sp, #8]
   21924:	bl	10f8c <malloc@plt>
   21928:	str	r0, [sp, #4]
   2192c:	ldr	r0, [sp, #4]
   21930:	str	r0, [fp, #-4]
   21934:	ldr	r0, [fp, #-4]
   21938:	mov	sp, fp
   2193c:	pop	{fp, pc}
   21940:	svcvc	0x00ffffff
   21944:	push	{fp, lr}
   21948:	mov	fp, sp
   2194c:	sub	sp, sp, #16
   21950:	str	r0, [sp, #8]
   21954:	str	r1, [sp, #4]
   21958:	ldr	r0, [sp, #8]
   2195c:	movw	r1, #0
   21960:	cmp	r0, r1
   21964:	bne	21978 <__assert_fail@plt+0x10890>
   21968:	ldr	r0, [sp, #4]
   2196c:	bl	218d4 <__assert_fail@plt+0x107ec>
   21970:	str	r0, [fp, #-4]
   21974:	b	219d8 <__assert_fail@plt+0x108f0>
   21978:	ldr	r0, [sp, #4]
   2197c:	cmp	r0, #0
   21980:	bne	21998 <__assert_fail@plt+0x108b0>
   21984:	ldr	r0, [sp, #8]
   21988:	bl	17f48 <__assert_fail@plt+0x6e60>
   2198c:	movw	r0, #0
   21990:	str	r0, [fp, #-4]
   21994:	b	219d8 <__assert_fail@plt+0x108f0>
   21998:	ldr	r0, [pc, #68]	; 219e4 <__assert_fail@plt+0x108fc>
   2199c:	ldr	r1, [sp, #4]
   219a0:	cmp	r0, r1
   219a4:	bcs	219c0 <__assert_fail@plt+0x108d8>
   219a8:	bl	11010 <__errno_location@plt>
   219ac:	movw	lr, #12
   219b0:	str	lr, [r0]
   219b4:	movw	r0, #0
   219b8:	str	r0, [fp, #-4]
   219bc:	b	219d8 <__assert_fail@plt+0x108f0>
   219c0:	ldr	r0, [sp, #8]
   219c4:	ldr	r1, [sp, #4]
   219c8:	bl	10f20 <realloc@plt>
   219cc:	str	r0, [sp]
   219d0:	ldr	r0, [sp]
   219d4:	str	r0, [fp, #-4]
   219d8:	ldr	r0, [fp, #-4]
   219dc:	mov	sp, fp
   219e0:	pop	{fp, pc}
   219e4:	svcvc	0x00ffffff
   219e8:	sub	sp, sp, #8
   219ec:	str	r0, [sp, #4]
   219f0:	str	r1, [sp]
   219f4:	movw	r0, #0
   219f8:	add	sp, sp, #8
   219fc:	bx	lr
   21a00:	push	{fp, lr}
   21a04:	mov	fp, sp
   21a08:	sub	sp, sp, #8
   21a0c:	str	r0, [sp, #4]
   21a10:	str	r1, [sp]
   21a14:	ldr	r0, [sp, #4]
   21a18:	ldr	r1, [sp]
   21a1c:	bl	219e8 <__assert_fail@plt+0x10900>
   21a20:	mov	sp, fp
   21a24:	pop	{fp, pc}
   21a28:	push	{fp, lr}
   21a2c:	mov	fp, sp
   21a30:	sub	sp, sp, #24
   21a34:	str	r0, [fp, #-8]
   21a38:	str	r1, [sp, #12]
   21a3c:	ldr	r0, [fp, #-8]
   21a40:	str	r0, [sp, #8]
   21a44:	ldr	r0, [sp, #12]
   21a48:	str	r0, [sp, #4]
   21a4c:	ldr	r0, [sp, #8]
   21a50:	ldr	r1, [sp, #4]
   21a54:	cmp	r0, r1
   21a58:	bne	21a68 <__assert_fail@plt+0x10980>
   21a5c:	movw	r0, #0
   21a60:	str	r0, [fp, #-4]
   21a64:	b	21ad4 <__assert_fail@plt+0x109ec>
   21a68:	b	21a6c <__assert_fail@plt+0x10984>
   21a6c:	ldr	r0, [sp, #8]
   21a70:	ldrb	r0, [r0]
   21a74:	bl	17afc <__assert_fail@plt+0x6a14>
   21a78:	strb	r0, [sp, #3]
   21a7c:	ldr	r0, [sp, #4]
   21a80:	ldrb	r0, [r0]
   21a84:	bl	17afc <__assert_fail@plt+0x6a14>
   21a88:	strb	r0, [sp, #2]
   21a8c:	ldrb	r0, [sp, #3]
   21a90:	cmp	r0, #0
   21a94:	bne	21a9c <__assert_fail@plt+0x109b4>
   21a98:	b	21ac4 <__assert_fail@plt+0x109dc>
   21a9c:	ldr	r0, [sp, #8]
   21aa0:	add	r0, r0, #1
   21aa4:	str	r0, [sp, #8]
   21aa8:	ldr	r0, [sp, #4]
   21aac:	add	r0, r0, #1
   21ab0:	str	r0, [sp, #4]
   21ab4:	ldrb	r0, [sp, #3]
   21ab8:	ldrb	r1, [sp, #2]
   21abc:	cmp	r0, r1
   21ac0:	beq	21a6c <__assert_fail@plt+0x10984>
   21ac4:	ldrb	r0, [sp, #3]
   21ac8:	ldrb	r1, [sp, #2]
   21acc:	sub	r0, r0, r1
   21ad0:	str	r0, [fp, #-4]
   21ad4:	ldr	r0, [fp, #-4]
   21ad8:	mov	sp, fp
   21adc:	pop	{fp, pc}
   21ae0:	push	{fp, lr}
   21ae4:	mov	fp, sp
   21ae8:	sub	sp, sp, #16
   21aec:	str	r0, [sp, #8]
   21af0:	ldr	r0, [sp, #8]
   21af4:	bl	10f5c <__fpending@plt>
   21af8:	cmp	r0, #0
   21afc:	movw	r0, #0
   21b00:	movne	r0, #1
   21b04:	and	r0, r0, #1
   21b08:	strb	r0, [sp, #7]
   21b0c:	ldr	r0, [sp, #8]
   21b10:	bl	10f68 <ferror_unlocked@plt>
   21b14:	cmp	r0, #0
   21b18:	movw	r0, #0
   21b1c:	movne	r0, #1
   21b20:	and	r0, r0, #1
   21b24:	strb	r0, [sp, #6]
   21b28:	ldr	r0, [sp, #8]
   21b2c:	bl	17dac <__assert_fail@plt+0x6cc4>
   21b30:	cmp	r0, #0
   21b34:	movw	r0, #0
   21b38:	movne	r0, #1
   21b3c:	and	r0, r0, #1
   21b40:	strb	r0, [sp, #5]
   21b44:	ldrb	r0, [sp, #6]
   21b48:	tst	r0, #1
   21b4c:	bne	21b78 <__assert_fail@plt+0x10a90>
   21b50:	ldrb	r0, [sp, #5]
   21b54:	tst	r0, #1
   21b58:	beq	21b9c <__assert_fail@plt+0x10ab4>
   21b5c:	ldrb	r0, [sp, #7]
   21b60:	tst	r0, #1
   21b64:	bne	21b78 <__assert_fail@plt+0x10a90>
   21b68:	bl	11010 <__errno_location@plt>
   21b6c:	ldr	r0, [r0]
   21b70:	cmp	r0, #9
   21b74:	beq	21b9c <__assert_fail@plt+0x10ab4>
   21b78:	ldrb	r0, [sp, #5]
   21b7c:	tst	r0, #1
   21b80:	bne	21b90 <__assert_fail@plt+0x10aa8>
   21b84:	bl	11010 <__errno_location@plt>
   21b88:	movw	lr, #0
   21b8c:	str	lr, [r0]
   21b90:	mvn	r0, #0
   21b94:	str	r0, [fp, #-4]
   21b98:	b	21ba4 <__assert_fail@plt+0x10abc>
   21b9c:	movw	r0, #0
   21ba0:	str	r0, [fp, #-4]
   21ba4:	ldr	r0, [fp, #-4]
   21ba8:	mov	sp, fp
   21bac:	pop	{fp, pc}
   21bb0:	push	{fp, lr}
   21bb4:	mov	fp, sp
   21bb8:	sub	sp, sp, #8
   21bbc:	movw	r0, #14
   21bc0:	bl	11088 <nl_langinfo@plt>
   21bc4:	str	r0, [sp, #4]
   21bc8:	ldr	r0, [sp, #4]
   21bcc:	movw	lr, #0
   21bd0:	cmp	r0, lr
   21bd4:	bne	21be4 <__assert_fail@plt+0x10afc>
   21bd8:	movw	r0, #10559	; 0x293f
   21bdc:	movt	r0, #2
   21be0:	str	r0, [sp, #4]
   21be4:	ldr	r0, [sp, #4]
   21be8:	ldrb	r0, [r0]
   21bec:	cmp	r0, #0
   21bf0:	bne	21c00 <__assert_fail@plt+0x10b18>
   21bf4:	movw	r0, #13297	; 0x33f1
   21bf8:	movt	r0, #2
   21bfc:	str	r0, [sp, #4]
   21c00:	ldr	r0, [sp, #4]
   21c04:	mov	sp, fp
   21c08:	pop	{fp, pc}
   21c0c:	push	{fp, lr}
   21c10:	mov	fp, sp
   21c14:	sub	sp, sp, #32
   21c18:	str	r0, [fp, #-8]
   21c1c:	str	r1, [fp, #-12]
   21c20:	str	r2, [sp, #16]
   21c24:	str	r3, [sp, #12]
   21c28:	ldr	r0, [fp, #-8]
   21c2c:	movw	r1, #0
   21c30:	cmp	r0, r1
   21c34:	bne	21c40 <__assert_fail@plt+0x10b58>
   21c38:	add	r0, sp, #4
   21c3c:	str	r0, [fp, #-8]
   21c40:	ldr	r0, [fp, #-8]
   21c44:	ldr	r1, [fp, #-12]
   21c48:	ldr	r2, [sp, #16]
   21c4c:	ldr	r3, [sp, #12]
   21c50:	bl	10f74 <mbrtowc@plt>
   21c54:	str	r0, [sp, #8]
   21c58:	ldr	r0, [sp, #8]
   21c5c:	mvn	r1, #1
   21c60:	cmp	r1, r0
   21c64:	bhi	21ca8 <__assert_fail@plt+0x10bc0>
   21c68:	ldr	r0, [sp, #16]
   21c6c:	cmp	r0, #0
   21c70:	beq	21ca8 <__assert_fail@plt+0x10bc0>
   21c74:	movw	r0, #0
   21c78:	bl	21cbc <__assert_fail@plt+0x10bd4>
   21c7c:	tst	r0, #1
   21c80:	bne	21ca8 <__assert_fail@plt+0x10bc0>
   21c84:	ldr	r0, [fp, #-12]
   21c88:	ldrb	r0, [r0]
   21c8c:	strb	r0, [sp, #3]
   21c90:	ldrb	r0, [sp, #3]
   21c94:	ldr	r1, [fp, #-8]
   21c98:	str	r0, [r1]
   21c9c:	movw	r0, #1
   21ca0:	str	r0, [fp, #-4]
   21ca4:	b	21cb0 <__assert_fail@plt+0x10bc8>
   21ca8:	ldr	r0, [sp, #8]
   21cac:	str	r0, [fp, #-4]
   21cb0:	ldr	r0, [fp, #-4]
   21cb4:	mov	sp, fp
   21cb8:	pop	{fp, pc}
   21cbc:	push	{r4, r5, fp, lr}
   21cc0:	add	fp, sp, #8
   21cc4:	sub	sp, sp, #272	; 0x110
   21cc8:	add	r1, sp, #7
   21ccc:	str	r0, [fp, #-16]
   21cd0:	ldr	r0, [fp, #-16]
   21cd4:	movw	r2, #257	; 0x101
   21cd8:	bl	21d58 <__assert_fail@plt+0x10c70>
   21cdc:	cmp	r0, #0
   21ce0:	beq	21cf4 <__assert_fail@plt+0x10c0c>
   21ce4:	movw	r0, #0
   21ce8:	and	r0, r0, #1
   21cec:	strb	r0, [fp, #-9]
   21cf0:	b	21d48 <__assert_fail@plt+0x10c60>
   21cf4:	add	r0, sp, #7
   21cf8:	movw	r1, #13303	; 0x33f7
   21cfc:	movt	r1, #2
   21d00:	bl	10e90 <strcmp@plt>
   21d04:	cmp	r0, #0
   21d08:	movw	r0, #1
   21d0c:	str	r0, [sp]
   21d10:	beq	21d34 <__assert_fail@plt+0x10c4c>
   21d14:	add	r0, sp, #7
   21d18:	movw	r1, #13305	; 0x33f9
   21d1c:	movt	r1, #2
   21d20:	bl	10e90 <strcmp@plt>
   21d24:	cmp	r0, #0
   21d28:	movw	r0, #0
   21d2c:	moveq	r0, #1
   21d30:	str	r0, [sp]
   21d34:	ldr	r0, [sp]
   21d38:	mvn	r1, #0
   21d3c:	eor	r0, r0, r1
   21d40:	and	r0, r0, #1
   21d44:	strb	r0, [fp, #-9]
   21d48:	ldrb	r0, [fp, #-9]
   21d4c:	and	r0, r0, #1
   21d50:	sub	sp, fp, #8
   21d54:	pop	{r4, r5, fp, pc}
   21d58:	push	{fp, lr}
   21d5c:	mov	fp, sp
   21d60:	sub	sp, sp, #16
   21d64:	str	r0, [fp, #-4]
   21d68:	str	r1, [sp, #8]
   21d6c:	str	r2, [sp, #4]
   21d70:	ldr	r0, [fp, #-4]
   21d74:	ldr	r1, [sp, #8]
   21d78:	ldr	r2, [sp, #4]
   21d7c:	bl	21d88 <__assert_fail@plt+0x10ca0>
   21d80:	mov	sp, fp
   21d84:	pop	{fp, pc}
   21d88:	push	{fp, lr}
   21d8c:	mov	fp, sp
   21d90:	sub	sp, sp, #24
   21d94:	str	r0, [fp, #-8]
   21d98:	str	r1, [sp, #12]
   21d9c:	str	r2, [sp, #8]
   21da0:	ldr	r0, [fp, #-8]
   21da4:	bl	21e88 <__assert_fail@plt+0x10da0>
   21da8:	str	r0, [sp, #4]
   21dac:	ldr	r0, [sp, #4]
   21db0:	movw	r1, #0
   21db4:	cmp	r0, r1
   21db8:	bne	21de0 <__assert_fail@plt+0x10cf8>
   21dbc:	ldr	r0, [sp, #8]
   21dc0:	cmp	r0, #0
   21dc4:	bls	21dd4 <__assert_fail@plt+0x10cec>
   21dc8:	ldr	r0, [sp, #12]
   21dcc:	movw	r1, #0
   21dd0:	strb	r1, [r0]
   21dd4:	movw	r0, #22
   21dd8:	str	r0, [fp, #-4]
   21ddc:	b	21e5c <__assert_fail@plt+0x10d74>
   21de0:	ldr	r0, [sp, #4]
   21de4:	bl	10fec <strlen@plt>
   21de8:	str	r0, [sp]
   21dec:	ldr	r0, [sp]
   21df0:	ldr	lr, [sp, #8]
   21df4:	cmp	r0, lr
   21df8:	bcs	21e1c <__assert_fail@plt+0x10d34>
   21dfc:	ldr	r0, [sp, #12]
   21e00:	ldr	r1, [sp, #4]
   21e04:	ldr	r2, [sp]
   21e08:	add	r2, r2, #1
   21e0c:	bl	10ee4 <memcpy@plt>
   21e10:	movw	r0, #0
   21e14:	str	r0, [fp, #-4]
   21e18:	b	21e5c <__assert_fail@plt+0x10d74>
   21e1c:	ldr	r0, [sp, #8]
   21e20:	cmp	r0, #0
   21e24:	bls	21e54 <__assert_fail@plt+0x10d6c>
   21e28:	ldr	r0, [sp, #12]
   21e2c:	ldr	r1, [sp, #4]
   21e30:	ldr	r2, [sp, #8]
   21e34:	sub	r2, r2, #1
   21e38:	bl	10ee4 <memcpy@plt>
   21e3c:	ldr	r0, [sp, #12]
   21e40:	ldr	r1, [sp, #8]
   21e44:	sub	r1, r1, #1
   21e48:	add	r0, r0, r1
   21e4c:	movw	r1, #0
   21e50:	strb	r1, [r0]
   21e54:	movw	r0, #34	; 0x22
   21e58:	str	r0, [fp, #-4]
   21e5c:	ldr	r0, [fp, #-4]
   21e60:	mov	sp, fp
   21e64:	pop	{fp, pc}
   21e68:	push	{fp, lr}
   21e6c:	mov	fp, sp
   21e70:	sub	sp, sp, #8
   21e74:	str	r0, [sp, #4]
   21e78:	ldr	r0, [sp, #4]
   21e7c:	bl	21e88 <__assert_fail@plt+0x10da0>
   21e80:	mov	sp, fp
   21e84:	pop	{fp, pc}
   21e88:	push	{fp, lr}
   21e8c:	mov	fp, sp
   21e90:	sub	sp, sp, #8
   21e94:	str	r0, [sp, #4]
   21e98:	ldr	r0, [sp, #4]
   21e9c:	movw	r1, #0
   21ea0:	bl	11070 <setlocale@plt>
   21ea4:	str	r0, [sp]
   21ea8:	ldr	r0, [sp]
   21eac:	mov	sp, fp
   21eb0:	pop	{fp, pc}
   21eb4:	cmp	r3, #0
   21eb8:	cmpeq	r2, #0
   21ebc:	bne	21ee0 <__assert_fail@plt+0x10df8>
   21ec0:	cmp	r1, #0
   21ec4:	movlt	r1, #-2147483648	; 0x80000000
   21ec8:	movlt	r0, #0
   21ecc:	blt	21edc <__assert_fail@plt+0x10df4>
   21ed0:	cmpeq	r0, #0
   21ed4:	mvnne	r1, #-2147483648	; 0x80000000
   21ed8:	mvnne	r0, #0
   21edc:	b	21fc4 <__assert_fail@plt+0x10edc>
   21ee0:	sub	sp, sp, #8
   21ee4:	push	{sp, lr}
   21ee8:	cmp	r1, #0
   21eec:	blt	21f0c <__assert_fail@plt+0x10e24>
   21ef0:	cmp	r3, #0
   21ef4:	blt	21f40 <__assert_fail@plt+0x10e58>
   21ef8:	bl	21fd4 <__assert_fail@plt+0x10eec>
   21efc:	ldr	lr, [sp, #4]
   21f00:	add	sp, sp, #8
   21f04:	pop	{r2, r3}
   21f08:	bx	lr
   21f0c:	rsbs	r0, r0, #0
   21f10:	sbc	r1, r1, r1, lsl #1
   21f14:	cmp	r3, #0
   21f18:	blt	21f64 <__assert_fail@plt+0x10e7c>
   21f1c:	bl	21fd4 <__assert_fail@plt+0x10eec>
   21f20:	ldr	lr, [sp, #4]
   21f24:	add	sp, sp, #8
   21f28:	pop	{r2, r3}
   21f2c:	rsbs	r0, r0, #0
   21f30:	sbc	r1, r1, r1, lsl #1
   21f34:	rsbs	r2, r2, #0
   21f38:	sbc	r3, r3, r3, lsl #1
   21f3c:	bx	lr
   21f40:	rsbs	r2, r2, #0
   21f44:	sbc	r3, r3, r3, lsl #1
   21f48:	bl	21fd4 <__assert_fail@plt+0x10eec>
   21f4c:	ldr	lr, [sp, #4]
   21f50:	add	sp, sp, #8
   21f54:	pop	{r2, r3}
   21f58:	rsbs	r0, r0, #0
   21f5c:	sbc	r1, r1, r1, lsl #1
   21f60:	bx	lr
   21f64:	rsbs	r2, r2, #0
   21f68:	sbc	r3, r3, r3, lsl #1
   21f6c:	bl	21fd4 <__assert_fail@plt+0x10eec>
   21f70:	ldr	lr, [sp, #4]
   21f74:	add	sp, sp, #8
   21f78:	pop	{r2, r3}
   21f7c:	rsbs	r2, r2, #0
   21f80:	sbc	r3, r3, r3, lsl #1
   21f84:	bx	lr
   21f88:	cmp	r3, #0
   21f8c:	cmpeq	r2, #0
   21f90:	bne	21fa8 <__assert_fail@plt+0x10ec0>
   21f94:	cmp	r1, #0
   21f98:	cmpeq	r0, #0
   21f9c:	mvnne	r1, #0
   21fa0:	mvnne	r0, #0
   21fa4:	b	21fc4 <__assert_fail@plt+0x10edc>
   21fa8:	sub	sp, sp, #8
   21fac:	push	{sp, lr}
   21fb0:	bl	21fd4 <__assert_fail@plt+0x10eec>
   21fb4:	ldr	lr, [sp, #4]
   21fb8:	add	sp, sp, #8
   21fbc:	pop	{r2, r3}
   21fc0:	bx	lr
   21fc4:	push	{r1, lr}
   21fc8:	mov	r0, #8
   21fcc:	bl	10e84 <raise@plt>
   21fd0:	pop	{r1, pc}
   21fd4:	cmp	r1, r3
   21fd8:	cmpeq	r0, r2
   21fdc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   21fe0:	mov	r4, r0
   21fe4:	movcc	r0, #0
   21fe8:	mov	r5, r1
   21fec:	ldr	lr, [sp, #36]	; 0x24
   21ff0:	movcc	r1, r0
   21ff4:	bcc	220f0 <__assert_fail@plt+0x11008>
   21ff8:	cmp	r3, #0
   21ffc:	clzeq	ip, r2
   22000:	clzne	ip, r3
   22004:	addeq	ip, ip, #32
   22008:	cmp	r5, #0
   2200c:	clzeq	r1, r4
   22010:	addeq	r1, r1, #32
   22014:	clzne	r1, r5
   22018:	sub	ip, ip, r1
   2201c:	sub	sl, ip, #32
   22020:	lsl	r9, r3, ip
   22024:	rsb	fp, ip, #32
   22028:	orr	r9, r9, r2, lsl sl
   2202c:	orr	r9, r9, r2, lsr fp
   22030:	lsl	r8, r2, ip
   22034:	cmp	r5, r9
   22038:	cmpeq	r4, r8
   2203c:	movcc	r0, #0
   22040:	movcc	r1, r0
   22044:	bcc	22060 <__assert_fail@plt+0x10f78>
   22048:	mov	r0, #1
   2204c:	subs	r4, r4, r8
   22050:	lsl	r1, r0, sl
   22054:	orr	r1, r1, r0, lsr fp
   22058:	lsl	r0, r0, ip
   2205c:	sbc	r5, r5, r9
   22060:	cmp	ip, #0
   22064:	beq	220f0 <__assert_fail@plt+0x11008>
   22068:	lsr	r6, r8, #1
   2206c:	orr	r6, r6, r9, lsl #31
   22070:	lsr	r7, r9, #1
   22074:	mov	r2, ip
   22078:	b	2209c <__assert_fail@plt+0x10fb4>
   2207c:	subs	r3, r4, r6
   22080:	sbc	r8, r5, r7
   22084:	adds	r3, r3, r3
   22088:	adc	r8, r8, r8
   2208c:	adds	r4, r3, #1
   22090:	adc	r5, r8, #0
   22094:	subs	r2, r2, #1
   22098:	beq	220b8 <__assert_fail@plt+0x10fd0>
   2209c:	cmp	r5, r7
   220a0:	cmpeq	r4, r6
   220a4:	bcs	2207c <__assert_fail@plt+0x10f94>
   220a8:	adds	r4, r4, r4
   220ac:	adc	r5, r5, r5
   220b0:	subs	r2, r2, #1
   220b4:	bne	2209c <__assert_fail@plt+0x10fb4>
   220b8:	lsr	r3, r4, ip
   220bc:	orr	r3, r3, r5, lsl fp
   220c0:	lsr	r2, r5, ip
   220c4:	orr	r3, r3, r5, lsr sl
   220c8:	adds	r0, r0, r4
   220cc:	mov	r4, r3
   220d0:	lsl	r3, r2, ip
   220d4:	orr	r3, r3, r4, lsl sl
   220d8:	lsl	ip, r4, ip
   220dc:	orr	r3, r3, r4, lsr fp
   220e0:	adc	r1, r1, r5
   220e4:	subs	r0, r0, ip
   220e8:	mov	r5, r2
   220ec:	sbc	r1, r1, r3
   220f0:	cmp	lr, #0
   220f4:	strdne	r4, [lr]
   220f8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   220fc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   22100:	mov	r7, r0
   22104:	ldr	r6, [pc, #72]	; 22154 <__assert_fail@plt+0x1106c>
   22108:	ldr	r5, [pc, #72]	; 22158 <__assert_fail@plt+0x11070>
   2210c:	add	r6, pc, r6
   22110:	add	r5, pc, r5
   22114:	sub	r6, r6, r5
   22118:	mov	r8, r1
   2211c:	mov	r9, r2
   22120:	bl	10e4c <calloc@plt-0x20>
   22124:	asrs	r6, r6, #2
   22128:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   2212c:	mov	r4, #0
   22130:	add	r4, r4, #1
   22134:	ldr	r3, [r5], #4
   22138:	mov	r2, r9
   2213c:	mov	r1, r8
   22140:	mov	r0, r7
   22144:	blx	r3
   22148:	cmp	r6, r4
   2214c:	bne	22130 <__assert_fail@plt+0x11048>
   22150:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   22154:	strdeq	r1, [r1], -r8
   22158:	strdeq	r1, [r1], -r0
   2215c:	bx	lr
   22160:	ldr	r3, [pc, #12]	; 22174 <__assert_fail@plt+0x1108c>
   22164:	mov	r1, #0
   22168:	add	r3, pc, r3
   2216c:	ldr	r2, [r3]
   22170:	b	1101c <__cxa_atexit@plt>
   22174:	andeq	r1, r1, ip, ror pc

Disassembly of section .fini:

00022178 <.fini>:
   22178:	push	{r3, lr}
   2217c:	pop	{r3, pc}
