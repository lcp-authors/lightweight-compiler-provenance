
../repos/charybdis/modules/.libs/m_help.so:     file format elf32-littlearm


Disassembly of section .init:

00000504 <_init>:
 504:	push	{r3, lr}
 508:	bl	554 <call_weak_fn>
 50c:	pop	{r3, pc}

Disassembly of section .plt:

00000510 <.plt>:
 510:	push	{lr}		; (str lr, [sp, #-4]!)
 514:	ldr	lr, [pc, #4]	; 520 <.plt+0x10>
 518:	add	lr, pc, lr
 51c:	ldr	pc, [lr, #8]!
 520:	.word	0x00010ae0

00000524 <__cxa_finalize@plt>:
 524:	add	ip, pc, #0, 12
 528:	add	ip, ip, #16, 20	; 0x10000
 52c:	ldr	pc, [ip, #2784]!	; 0xae0

00000530 <sendto_one@plt>:
 530:	add	ip, pc, #0, 12
 534:	add	ip, ip, #16, 20	; 0x10000
 538:	ldr	pc, [ip, #2776]!	; 0xad8

0000053c <__gmon_start__@plt>:
 53c:	add	ip, pc, #0, 12
 540:	add	ip, ip, #16, 20	; 0x10000
 544:	ldr	pc, [ip, #2768]!	; 0xad0

00000548 <rb_dictionary_retrieve@plt>:
 548:	add	ip, pc, #0, 12
 54c:	add	ip, ip, #16, 20	; 0x10000
 550:	ldr	pc, [ip, #2760]!	; 0xac8

Disassembly of section .text:

00000554 <call_weak_fn>:
 554:	ldr	r3, [pc, #20]	; 570 <call_weak_fn+0x1c>
 558:	ldr	r2, [pc, #20]	; 574 <call_weak_fn+0x20>
 55c:	add	r3, pc, r3
 560:	ldr	r2, [r3, r2]
 564:	cmp	r2, #0
 568:	bxeq	lr
 56c:	b	53c <__gmon_start__@plt>
 570:	.word	0x00010a9c
 574:	.word	0x00000028

00000578 <deregister_tm_clones>:
 578:	ldr	r0, [pc, #44]	; 5ac <deregister_tm_clones+0x34>
 57c:	ldr	r3, [pc, #44]	; 5b0 <deregister_tm_clones+0x38>
 580:	add	r0, pc, r0
 584:	add	r3, pc, r3
 588:	cmp	r3, r0
 58c:	ldr	r3, [pc, #32]	; 5b4 <deregister_tm_clones+0x3c>
 590:	add	r3, pc, r3
 594:	bxeq	lr
 598:	ldr	r2, [pc, #24]	; 5b8 <deregister_tm_clones+0x40>
 59c:	ldr	r3, [r3, r2]
 5a0:	cmp	r3, #0
 5a4:	bxeq	lr
 5a8:	bx	r3
 5ac:	.word	0x00010b70
 5b0:	.word	0x00010b6c
 5b4:	.word	0x00010a68
 5b8:	.word	0x00000024

000005bc <register_tm_clones>:
 5bc:	ldr	r0, [pc, #56]	; 5fc <register_tm_clones+0x40>
 5c0:	ldr	r3, [pc, #56]	; 600 <register_tm_clones+0x44>
 5c4:	add	r0, pc, r0
 5c8:	add	r3, pc, r3
 5cc:	sub	r1, r3, r0
 5d0:	ldr	r3, [pc, #44]	; 604 <register_tm_clones+0x48>
 5d4:	asr	r1, r1, #2
 5d8:	add	r3, pc, r3
 5dc:	add	r1, r1, r1, lsr #31
 5e0:	asrs	r1, r1, #1
 5e4:	bxeq	lr
 5e8:	ldr	r2, [pc, #24]	; 608 <register_tm_clones+0x4c>
 5ec:	ldr	r3, [r3, r2]
 5f0:	cmp	r3, #0
 5f4:	bxeq	lr
 5f8:	bx	r3
 5fc:	.word	0x00010b2c
 600:	.word	0x00010b28
 604:	.word	0x00010a20
 608:	.word	0x0000002c

0000060c <__do_global_dtors_aux>:
 60c:	ldr	r3, [pc, #76]	; 660 <__do_global_dtors_aux+0x54>
 610:	ldr	r2, [pc, #76]	; 664 <__do_global_dtors_aux+0x58>
 614:	add	r3, pc, r3
 618:	add	r2, pc, r2
 61c:	ldrb	r3, [r3]
 620:	cmp	r3, #0
 624:	bxne	lr
 628:	ldr	r3, [pc, #56]	; 668 <__do_global_dtors_aux+0x5c>
 62c:	push	{r4, lr}
 630:	ldr	r3, [r2, r3]
 634:	cmp	r3, #0
 638:	beq	648 <__do_global_dtors_aux+0x3c>
 63c:	ldr	r3, [pc, #40]	; 66c <__do_global_dtors_aux+0x60>
 640:	ldr	r0, [pc, r3]
 644:	bl	524 <__cxa_finalize@plt>
 648:	bl	578 <deregister_tm_clones>
 64c:	ldr	r3, [pc, #28]	; 670 <__do_global_dtors_aux+0x64>
 650:	mov	r2, #1
 654:	add	r3, pc, r3
 658:	strb	r2, [r3]
 65c:	pop	{r4, pc}
 660:	.word	0x00010adc
 664:	.word	0x000109e0
 668:	.word	0x00000020
 66c:	.word	0x000109f0
 670:	.word	0x00010a9c

00000674 <frame_dummy>:
 674:	b	5bc <register_tm_clones>

00000678 <m_help>:
 678:	push	{fp, lr}
 67c:	mov	fp, sp
 680:	sub	sp, sp, #32
 684:	ldr	ip, [fp, #8]
 688:	str	r0, [fp, #-4]
 68c:	str	r1, [fp, #-8]
 690:	str	r2, [fp, #-12]
 694:	str	r3, [sp, #16]
 698:	ldr	r0, [fp, #-12]
 69c:	ldr	r1, [sp, #16]
 6a0:	cmp	r1, #1
 6a4:	str	ip, [sp, #12]
 6a8:	str	r0, [sp, #8]
 6ac:	ble	6c0 <m_help+0x48>
 6b0:	ldr	r0, [fp, #8]
 6b4:	ldr	r0, [r0, #4]
 6b8:	str	r0, [sp, #4]
 6bc:	b	6cc <m_help+0x54>
 6c0:	movw	r0, #0
 6c4:	str	r0, [sp, #4]
 6c8:	b	6cc <m_help+0x54>
 6cc:	ldr	r0, [sp, #4]
 6d0:	ldr	r1, [sp, #8]
 6d4:	str	r0, [sp]
 6d8:	mov	r0, r1
 6dc:	movw	r1, #1
 6e0:	ldr	r2, [sp]
 6e4:	bl	7e0 <dohelp>
 6e8:	mov	sp, fp
 6ec:	pop	{fp, pc}

000006f0 <mo_help>:
 6f0:	push	{fp, lr}
 6f4:	mov	fp, sp
 6f8:	sub	sp, sp, #32
 6fc:	ldr	ip, [fp, #8]
 700:	str	r0, [fp, #-4]
 704:	str	r1, [fp, #-8]
 708:	str	r2, [fp, #-12]
 70c:	str	r3, [sp, #16]
 710:	ldr	r0, [fp, #-12]
 714:	ldr	r1, [sp, #16]
 718:	cmp	r1, #1
 71c:	str	ip, [sp, #12]
 720:	str	r0, [sp, #8]
 724:	ble	738 <mo_help+0x48>
 728:	ldr	r0, [fp, #8]
 72c:	ldr	r0, [r0, #4]
 730:	str	r0, [sp, #4]
 734:	b	744 <mo_help+0x54>
 738:	movw	r0, #0
 73c:	str	r0, [sp, #4]
 740:	b	744 <mo_help+0x54>
 744:	ldr	r0, [sp, #4]
 748:	ldr	r1, [sp, #8]
 74c:	str	r0, [sp]
 750:	mov	r0, r1
 754:	movw	r1, #2
 758:	ldr	r2, [sp]
 75c:	bl	7e0 <dohelp>
 760:	mov	sp, fp
 764:	pop	{fp, pc}

00000768 <mo_uhelp>:
 768:	push	{fp, lr}
 76c:	mov	fp, sp
 770:	sub	sp, sp, #32
 774:	ldr	ip, [fp, #8]
 778:	str	r0, [fp, #-4]
 77c:	str	r1, [fp, #-8]
 780:	str	r2, [fp, #-12]
 784:	str	r3, [sp, #16]
 788:	ldr	r0, [fp, #-12]
 78c:	ldr	r1, [sp, #16]
 790:	cmp	r1, #1
 794:	str	ip, [sp, #12]
 798:	str	r0, [sp, #8]
 79c:	ble	7b0 <mo_uhelp+0x48>
 7a0:	ldr	r0, [fp, #8]
 7a4:	ldr	r0, [r0, #4]
 7a8:	str	r0, [sp, #4]
 7ac:	b	7bc <mo_uhelp+0x54>
 7b0:	movw	r0, #0
 7b4:	str	r0, [sp, #4]
 7b8:	b	7bc <mo_uhelp+0x54>
 7bc:	ldr	r0, [sp, #4]
 7c0:	ldr	r1, [sp, #8]
 7c4:	str	r0, [sp]
 7c8:	mov	r0, r1
 7cc:	movw	r1, #1
 7d0:	ldr	r2, [sp]
 7d4:	bl	7e0 <dohelp>
 7d8:	mov	sp, fp
 7dc:	pop	{fp, pc}

000007e0 <dohelp>:
 7e0:	push	{fp, lr}
 7e4:	mov	fp, sp
 7e8:	sub	sp, sp, #40	; 0x28
 7ec:	str	r0, [fp, #-4]
 7f0:	str	r1, [fp, #-8]
 7f4:	str	r2, [fp, #-12]
 7f8:	ldr	r0, [fp, #-12]
 7fc:	movw	r1, #0
 800:	cmp	r0, r1
 804:	beq	818 <dohelp+0x38>
 808:	ldr	r0, [fp, #-12]
 80c:	ldrb	r0, [r0]
 810:	cmp	r0, #0
 814:	bne	824 <dohelp+0x44>
 818:	ldr	r0, [pc, #404]	; 9b4 <dohelp+0x1d4>
 81c:	add	r0, pc, r0
 820:	str	r0, [fp, #-12]
 824:	ldr	r0, [fp, #-8]
 828:	and	r0, r0, #2
 82c:	cmp	r0, #0
 830:	beq	848 <dohelp+0x68>
 834:	ldr	r0, [pc, #384]	; 9bc <dohelp+0x1dc>
 838:	ldr	r0, [pc, r0]
 83c:	ldr	r0, [r0]
 840:	str	r0, [sp, #8]
 844:	b	858 <dohelp+0x78>
 848:	ldr	r0, [pc, #360]	; 9b8 <dohelp+0x1d8>
 84c:	ldr	r0, [pc, r0]
 850:	ldr	r0, [r0]
 854:	str	r0, [sp, #8]
 858:	ldr	r0, [sp, #8]
 85c:	ldr	r1, [fp, #-12]
 860:	bl	548 <rb_dictionary_retrieve@plt>
 864:	str	r0, [fp, #-16]
 868:	ldr	r0, [fp, #-16]
 86c:	movw	r1, #0
 870:	cmp	r0, r1
 874:	beq	890 <dohelp+0xb0>
 878:	ldr	r0, [fp, #-16]
 87c:	ldr	r0, [r0, #44]	; 0x2c
 880:	ldr	r1, [fp, #-8]
 884:	and	r0, r0, r1
 888:	cmp	r0, #0
 88c:	bne	8c0 <dohelp+0xe0>
 890:	ldr	r0, [pc, #320]	; 9d8 <dohelp+0x1f8>
 894:	add	r1, pc, r0
 898:	ldr	r0, [pc, #316]	; 9dc <dohelp+0x1fc>
 89c:	ldr	r0, [pc, r0]
 8a0:	add	r2, r0, #88	; 0x58
 8a4:	ldr	r0, [fp, #-4]
 8a8:	ldr	r3, [fp, #-4]
 8ac:	add	r3, r3, #88	; 0x58
 8b0:	ldr	ip, [fp, #-12]
 8b4:	str	ip, [sp]
 8b8:	bl	530 <sendto_one@plt>
 8bc:	b	9ac <dohelp+0x1cc>
 8c0:	ldr	r0, [pc, #248]	; 9c0 <dohelp+0x1e0>
 8c4:	add	r1, pc, r0
 8c8:	ldr	r0, [pc, #244]	; 9c4 <dohelp+0x1e4>
 8cc:	ldr	r0, [pc, r0]
 8d0:	add	r2, r0, #88	; 0x58
 8d4:	ldr	r0, [fp, #-16]
 8d8:	ldr	r0, [r0, #32]
 8dc:	str	r0, [sp, #12]
 8e0:	ldr	r0, [sp, #12]
 8e4:	ldr	r0, [r0]
 8e8:	str	r0, [sp, #20]
 8ec:	ldr	r0, [fp, #-4]
 8f0:	ldr	r3, [fp, #-4]
 8f4:	add	r3, r3, #88	; 0x58
 8f8:	ldr	ip, [fp, #-12]
 8fc:	ldr	lr, [sp, #20]
 900:	ldr	lr, [lr]
 904:	str	ip, [sp]
 908:	str	lr, [sp, #4]
 90c:	bl	530 <sendto_one@plt>
 910:	ldr	r0, [sp, #12]
 914:	ldr	r0, [r0, #8]
 918:	str	r0, [sp, #16]
 91c:	ldr	r0, [sp, #16]
 920:	movw	r1, #0
 924:	cmp	r0, r1
 928:	beq	980 <dohelp+0x1a0>
 92c:	ldr	r0, [pc, #156]	; 9d0 <dohelp+0x1f0>
 930:	add	r1, pc, r0
 934:	ldr	r0, [pc, #152]	; 9d4 <dohelp+0x1f4>
 938:	ldr	r0, [pc, r0]
 93c:	add	r2, r0, #88	; 0x58
 940:	ldr	r0, [sp, #16]
 944:	ldr	r0, [r0]
 948:	str	r0, [sp, #20]
 94c:	ldr	r0, [fp, #-4]
 950:	ldr	r3, [fp, #-4]
 954:	add	r3, r3, #88	; 0x58
 958:	ldr	ip, [fp, #-12]
 95c:	ldr	lr, [sp, #20]
 960:	ldr	lr, [lr]
 964:	str	ip, [sp]
 968:	str	lr, [sp, #4]
 96c:	bl	530 <sendto_one@plt>
 970:	ldr	r0, [sp, #16]
 974:	ldr	r0, [r0, #8]
 978:	str	r0, [sp, #16]
 97c:	b	91c <dohelp+0x13c>
 980:	ldr	r0, [pc, #64]	; 9c8 <dohelp+0x1e8>
 984:	add	r1, pc, r0
 988:	ldr	r0, [pc, #60]	; 9cc <dohelp+0x1ec>
 98c:	ldr	r0, [pc, r0]
 990:	add	r2, r0, #88	; 0x58
 994:	ldr	r0, [fp, #-4]
 998:	ldr	r3, [fp, #-4]
 99c:	add	r3, r3, #88	; 0x58
 9a0:	ldr	ip, [fp, #-12]
 9a4:	str	ip, [sp]
 9a8:	bl	530 <sendto_one@plt>
 9ac:	mov	sp, fp
 9b0:	pop	{fp, pc}
 9b4:	.word	0x0000026d
 9b8:	.word	0x000107c8
 9bc:	.word	0x000107f0
 9c0:	.word	0x00000140
 9c4:	.word	0x00010760
 9c8:	.word	0x000000a4
 9cc:	.word	0x000106a0
 9d0:	.word	0x000000e6
 9d4:	.word	0x000106f4
 9d8:	.word	0x00000152
 9dc:	.word	0x00010790

Disassembly of section .fini:

000009e0 <_fini>:
 9e0:	push	{r3, lr}
 9e4:	pop	{r3, pc}
