
../repos/charybdis/extensions/.libs/m_roleplay.so:     file format elf32-littlearm


Disassembly of section .init:

00000818 <_init>:
 818:	push	{r3, lr}
 81c:	bl	8f8 <call_weak_fn>
 820:	pop	{r3, pc}

Disassembly of section .plt:

00000824 <.plt>:
 824:	push	{lr}		; (str lr, [sp, #-4]!)
 828:	ldr	lr, [pc, #4]	; 834 <.plt+0x10>
 82c:	add	lr, pc, lr
 830:	ldr	pc, [lr, #8]!
 834:	.word	0x000117cc

00000838 <sendto_channel_local@plt>:
 838:	add	ip, pc, #0, 12
 83c:	add	ip, ip, #69632	; 0x11000
 840:	ldr	pc, [ip, #1996]!	; 0x7cc

00000844 <can_send@plt>:
 844:	add	ip, pc, #0, 12
 848:	add	ip, ip, #69632	; 0x11000
 84c:	ldr	pc, [ip, #1988]!	; 0x7c4

00000850 <cflag_add@plt>:
 850:	add	ip, pc, #0, 12
 854:	add	ip, ip, #69632	; 0x11000
 858:	ldr	pc, [ip, #1980]!	; 0x7bc

0000085c <sendto_match_servs@plt>:
 85c:	add	ip, pc, #0, 12
 860:	add	ip, ip, #69632	; 0x11000
 864:	ldr	pc, [ip, #1972]!	; 0x7b4

00000868 <__cxa_finalize@plt>:
 868:	add	ip, pc, #0, 12
 86c:	add	ip, ip, #69632	; 0x11000
 870:	ldr	pc, [ip, #1964]!	; 0x7ac

00000874 <sendto_one@plt>:
 874:	add	ip, pc, #0, 12
 878:	add	ip, ip, #69632	; 0x11000
 87c:	ldr	pc, [ip, #1956]!	; 0x7a4

00000880 <find_channel@plt>:
 880:	add	ip, pc, #0, 12
 884:	add	ip, ip, #69632	; 0x11000
 888:	ldr	pc, [ip, #1948]!	; 0x79c

0000088c <find_channel_membership@plt>:
 88c:	add	ip, pc, #0, 12
 890:	add	ip, ip, #69632	; 0x11000
 894:	ldr	pc, [ip, #1940]!	; 0x794

00000898 <__gmon_start__@plt>:
 898:	add	ip, pc, #0, 12
 89c:	add	ip, ip, #69632	; 0x11000
 8a0:	ldr	pc, [ip, #1932]!	; 0x78c

000008a4 <sendto_one_numeric@plt>:
 8a4:	add	ip, pc, #0, 12
 8a8:	add	ip, ip, #69632	; 0x11000
 8ac:	ldr	pc, [ip, #1924]!	; 0x784

000008b0 <add_channel_target@plt>:
 8b0:	add	ip, pc, #0, 12
 8b4:	add	ip, ip, #69632	; 0x11000
 8b8:	ldr	pc, [ip, #1916]!	; 0x77c

000008bc <snprintf@plt>:
 8bc:	add	ip, pc, #0, 12
 8c0:	add	ip, ip, #69632	; 0x11000
 8c4:	ldr	pc, [ip, #1908]!	; 0x774

000008c8 <flood_endgrace@plt>:
 8c8:	add	ip, pc, #0, 12
 8cc:	add	ip, ip, #69632	; 0x11000
 8d0:	ldr	pc, [ip, #1900]!	; 0x76c

000008d4 <rb_strlcpy@plt>:
 8d4:	add	ip, pc, #0, 12
 8d8:	add	ip, ip, #69632	; 0x11000
 8dc:	ldr	pc, [ip, #1892]!	; 0x764

000008e0 <flood_attack_channel@plt>:
 8e0:	add	ip, pc, #0, 12
 8e4:	add	ip, ip, #69632	; 0x11000
 8e8:	ldr	pc, [ip, #1884]!	; 0x75c

000008ec <cflag_orphan@plt>:
 8ec:	add	ip, pc, #0, 12
 8f0:	add	ip, ip, #69632	; 0x11000
 8f4:	ldr	pc, [ip, #1876]!	; 0x754

Disassembly of section .text:

000008f8 <call_weak_fn>:
 8f8:	ldr	r3, [pc, #20]	; 914 <call_weak_fn+0x1c>
 8fc:	ldr	r2, [pc, #20]	; 918 <call_weak_fn+0x20>
 900:	add	r3, pc, r3
 904:	ldr	r2, [r3, r2]
 908:	cmp	r2, #0
 90c:	bxeq	lr
 910:	b	898 <__gmon_start__@plt>
 914:	.word	0x000116f8
 918:	.word	0x00000058

0000091c <deregister_tm_clones>:
 91c:	ldr	r0, [pc, #44]	; 950 <deregister_tm_clones+0x34>
 920:	ldr	r3, [pc, #44]	; 954 <deregister_tm_clones+0x38>
 924:	add	r0, pc, r0
 928:	add	r3, pc, r3
 92c:	cmp	r3, r0
 930:	ldr	r3, [pc, #32]	; 958 <deregister_tm_clones+0x3c>
 934:	add	r3, pc, r3
 938:	bxeq	lr
 93c:	ldr	r2, [pc, #24]	; 95c <deregister_tm_clones+0x40>
 940:	ldr	r3, [r3, r2]
 944:	cmp	r3, #0
 948:	bxeq	lr
 94c:	bx	r3
 950:	.word	0x0001196c
 954:	.word	0x00011968
 958:	.word	0x000116c4
 95c:	.word	0x00000050

00000960 <register_tm_clones>:
 960:	ldr	r0, [pc, #56]	; 9a0 <register_tm_clones+0x40>
 964:	ldr	r3, [pc, #56]	; 9a4 <register_tm_clones+0x44>
 968:	add	r0, pc, r0
 96c:	add	r3, pc, r3
 970:	sub	r1, r3, r0
 974:	ldr	r3, [pc, #44]	; 9a8 <register_tm_clones+0x48>
 978:	asr	r1, r1, #2
 97c:	add	r3, pc, r3
 980:	add	r1, r1, r1, lsr #31
 984:	asrs	r1, r1, #1
 988:	bxeq	lr
 98c:	ldr	r2, [pc, #24]	; 9ac <register_tm_clones+0x4c>
 990:	ldr	r3, [r3, r2]
 994:	cmp	r3, #0
 998:	bxeq	lr
 99c:	bx	r3
 9a0:	.word	0x00011928
 9a4:	.word	0x00011924
 9a8:	.word	0x0001167c
 9ac:	.word	0x00000064

000009b0 <__do_global_dtors_aux>:
 9b0:	ldr	r3, [pc, #76]	; a04 <__do_global_dtors_aux+0x54>
 9b4:	ldr	r2, [pc, #76]	; a08 <__do_global_dtors_aux+0x58>
 9b8:	add	r3, pc, r3
 9bc:	add	r2, pc, r2
 9c0:	ldrb	r3, [r3]
 9c4:	cmp	r3, #0
 9c8:	bxne	lr
 9cc:	ldr	r3, [pc, #56]	; a0c <__do_global_dtors_aux+0x5c>
 9d0:	push	{r4, lr}
 9d4:	ldr	r3, [r2, r3]
 9d8:	cmp	r3, #0
 9dc:	beq	9ec <__do_global_dtors_aux+0x3c>
 9e0:	ldr	r3, [pc, #40]	; a10 <__do_global_dtors_aux+0x60>
 9e4:	ldr	r0, [pc, r3]
 9e8:	bl	868 <__cxa_finalize@plt>
 9ec:	bl	91c <deregister_tm_clones>
 9f0:	ldr	r3, [pc, #28]	; a14 <__do_global_dtors_aux+0x64>
 9f4:	mov	r2, #1
 9f8:	add	r3, pc, r3
 9fc:	strb	r2, [r3]
 a00:	pop	{r4, pc}
 a04:	.word	0x000118d8
 a08:	.word	0x0001163c
 a0c:	.word	0x0000004c
 a10:	.word	0x00011684
 a14:	.word	0x00011898

00000a18 <frame_dummy>:
 a18:	b	960 <register_tm_clones>

00000a1c <strip_unprintable>:
 a1c:	push	{r4, lr}
 a20:	mov	r2, r0
 a24:	mov	r3, r0
 a28:	mov	ip, #0
 a2c:	ldr	lr, [pc, #172]	; ae0 <strip_unprintable+0xc4>
 a30:	add	lr, pc, lr
 a34:	ldrb	r1, [r3]
 a38:	cmp	r1, #0
 a3c:	beq	acc <strip_unprintable+0xb0>
 a40:	cmp	r1, #3
 a44:	beq	a68 <strip_unprintable+0x4c>
 a48:	cmp	r1, #32
 a4c:	strbeq	r1, [r2], #1
 a50:	beq	ac4 <strip_unprintable+0xa8>
 a54:	cmp	r1, #31
 a58:	movhi	ip, r2
 a5c:	strbhi	r1, [ip], #1
 a60:	movhi	r2, ip
 a64:	b	ac4 <strip_unprintable+0xa8>
 a68:	ldr	r1, [pc, #116]	; ae4 <strip_unprintable+0xc8>
 a6c:	ldrb	r4, [r3, #1]
 a70:	ldr	r1, [lr, r1]
 a74:	ldr	r4, [r1, r4, lsl #2]
 a78:	tst	r4, #16
 a7c:	beq	ac4 <strip_unprintable+0xa8>
 a80:	ldrb	r4, [r3, #2]
 a84:	ldr	r4, [r1, r4, lsl #2]
 a88:	tst	r4, #16
 a8c:	addeq	r3, r3, #1
 a90:	addne	r3, r3, #2
 a94:	ldrb	r4, [r3, #1]
 a98:	cmp	r4, #44	; 0x2c
 a9c:	bne	ac4 <strip_unprintable+0xa8>
 aa0:	ldrb	r4, [r3, #2]
 aa4:	ldr	r4, [r1, r4, lsl #2]
 aa8:	tst	r4, #16
 aac:	beq	ac4 <strip_unprintable+0xa8>
 ab0:	ldrb	r4, [r3, #3]
 ab4:	ldr	r1, [r1, r4, lsl #2]
 ab8:	tst	r1, #16
 abc:	addeq	r3, r3, #2
 ac0:	addne	r3, r3, #3
 ac4:	adds	r3, r3, #1
 ac8:	bne	a34 <strip_unprintable+0x18>
 acc:	mov	r3, #0
 ad0:	cmp	ip, r3
 ad4:	strb	r3, [r2]
 ad8:	strbne	r3, [ip]
 adc:	pop	{r4, pc}
 ae0:	.word	0x000115c8
 ae4:	.word	0x0000005c

00000ae8 <me_roleplay>:
 ae8:	push	{r4, r5, lr}
 aec:	sub	sp, sp, #20
 af0:	mov	r5, r2
 af4:	ldr	r4, [sp, #32]
 af8:	ldr	r0, [r4, #4]
 afc:	bl	880 <find_channel@plt>
 b00:	subs	r2, r0, #0
 b04:	beq	b3c <me_roleplay+0x54>
 b08:	ldr	r3, [r4, #12]
 b0c:	mov	r1, #0
 b10:	mov	r0, r5
 b14:	str	r3, [sp, #12]
 b18:	ldr	r3, [r4, #4]
 b1c:	str	r3, [sp, #8]
 b20:	add	r3, r5, #88	; 0x58
 b24:	str	r3, [sp, #4]
 b28:	ldr	r3, [r4, #8]
 b2c:	str	r3, [sp]
 b30:	ldr	r3, [pc, #12]	; b44 <me_roleplay+0x5c>
 b34:	add	r3, pc, r3
 b38:	bl	838 <sendto_channel_local@plt>
 b3c:	add	sp, sp, #20
 b40:	pop	{r4, r5, pc}
 b44:	.word	0x00000472

00000b48 <_moddeinit>:
 b48:	mov	r0, #78	; 0x4e
 b4c:	b	8ec <cflag_orphan@plt>

00000b50 <_modinit>:
 b50:	ldr	r3, [pc, #48]	; b88 <_modinit+0x38>
 b54:	push	{r0, r1, r2, lr}
 b58:	mov	r0, #78	; 0x4e
 b5c:	ldr	r2, [pc, #40]	; b8c <_modinit+0x3c>
 b60:	add	r3, pc, r3
 b64:	ldr	r3, [r3, r2]
 b68:	mov	r1, r3
 b6c:	str	r3, [sp, #4]
 b70:	bl	850 <cflag_add@plt>
 b74:	clz	r0, r0
 b78:	lsr	r0, r0, #5
 b7c:	rsb	r0, r0, #0
 b80:	add	sp, sp, #12
 b84:	pop	{pc}		; (ldr pc, [sp], #4)
 b88:	.word	0x00011498
 b8c:	.word	0x00000054

00000b90 <m_displaymsg.isra.0>:
 b90:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
 b94:	sub	sp, sp, #1104	; 0x450
 b98:	mov	r4, r0
 b9c:	sub	sp, sp, #12
 ba0:	mov	r6, r1
 ba4:	add	sl, sp, #52	; 0x34
 ba8:	mov	r7, r2
 bac:	mov	r0, sl
 bb0:	mov	r2, #33	; 0x21
 bb4:	ldr	r1, [sp, #1152]	; 0x480
 bb8:	mov	r8, r3
 bbc:	bl	8d4 <rb_strlcpy@plt>
 bc0:	ldr	r1, [r4, #64]	; 0x40
 bc4:	mov	r3, #0
 bc8:	ldr	r9, [pc, #560]	; e00 <m_displaymsg.isra.0+0x270>
 bcc:	and	r2, r1, #256	; 0x100
 bd0:	orrs	r3, r2, r3
 bd4:	add	r9, pc, r9
 bd8:	bne	be4 <m_displaymsg.isra.0+0x54>
 bdc:	mov	r0, r4
 be0:	bl	8c8 <flood_endgrace@plt>
 be4:	mov	r0, r6
 be8:	bl	880 <find_channel@plt>
 bec:	subs	r5, r0, #0
 bf0:	bne	c18 <m_displaymsg.isra.0+0x88>
 bf4:	ldr	r2, [pc, #520]	; e04 <m_displaymsg.isra.0+0x274>
 bf8:	mov	r3, r6
 bfc:	movw	r1, #403	; 0x193
 c00:	add	r2, pc, r2
 c04:	mov	r0, r4
 c08:	bl	8a4 <sendto_one_numeric@plt>
 c0c:	add	sp, sp, #1104	; 0x450
 c10:	add	sp, sp, #12
 c14:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
 c18:	mov	r1, r4
 c1c:	bl	88c <find_channel_membership@plt>
 c20:	subs	fp, r0, #0
 c24:	bne	c3c <m_displaymsg.isra.0+0xac>
 c28:	ldr	r2, [pc, #472]	; e08 <m_displaymsg.isra.0+0x278>
 c2c:	movw	r1, #442	; 0x1ba
 c30:	ldr	r3, [r5, #236]	; 0xec
 c34:	add	r2, pc, r2
 c38:	b	c04 <m_displaymsg.isra.0+0x74>
 c3c:	ldr	r3, [pc, #456]	; e0c <m_displaymsg.isra.0+0x27c>
 c40:	ldr	r2, [r5, #12]
 c44:	ldr	r3, [r9, r3]
 c48:	ldr	r3, [r3, #312]	; 0x138
 c4c:	tst	r2, r3
 c50:	bne	c68 <m_displaymsg.isra.0+0xd8>
 c54:	ldr	r2, [pc, #436]	; e10 <m_displaymsg.isra.0+0x280>
 c58:	ldr	r3, [r5, #236]	; 0xec
 c5c:	add	r2, pc, r2
 c60:	movw	r1, #573	; 0x23d
 c64:	b	c04 <m_displaymsg.isra.0+0x74>
 c68:	mov	r2, fp
 c6c:	mov	r1, r4
 c70:	mov	r0, r5
 c74:	bl	844 <can_send@plt>
 c78:	cmp	r0, #0
 c7c:	ldr	r3, [r5, #236]	; 0xec
 c80:	ldreq	r2, [pc, #396]	; e14 <m_displaymsg.isra.0+0x284>
 c84:	addeq	r2, pc, r2
 c88:	beq	c60 <m_displaymsg.isra.0+0xd0>
 c8c:	mov	r2, r5
 c90:	mov	r1, r4
 c94:	mov	r0, #0
 c98:	bl	8e0 <flood_attack_channel@plt>
 c9c:	cmp	r0, #0
 ca0:	bne	c0c <m_displaymsg.isra.0+0x7c>
 ca4:	ldr	r3, [fp, #44]	; 0x2c
 ca8:	tst	r3, #3
 cac:	bne	cfc <m_displaymsg.isra.0+0x16c>
 cb0:	ldr	r3, [r4, #56]	; 0x38
 cb4:	tst	r3, #4096	; 0x1000
 cb8:	bne	cfc <m_displaymsg.isra.0+0x16c>
 cbc:	mov	r1, r5
 cc0:	mov	r0, r4
 cc4:	bl	8b0 <add_channel_target@plt>
 cc8:	cmp	r0, #0
 ccc:	bne	cfc <m_displaymsg.isra.0+0x16c>
 cd0:	ldr	r3, [pc, #320]	; e18 <m_displaymsg.isra.0+0x288>
 cd4:	mov	r0, r4
 cd8:	ldr	r1, [pc, #316]	; e1c <m_displaymsg.isra.0+0x28c>
 cdc:	ldr	r2, [r9, r3]
 ce0:	ldr	r3, [r5, #236]	; 0xec
 ce4:	add	r1, pc, r1
 ce8:	add	r2, r2, #88	; 0x58
 cec:	str	r3, [sp]
 cf0:	add	r3, r4, #88	; 0x58
 cf4:	bl	874 <sendto_one@plt>
 cf8:	b	c0c <m_displaymsg.isra.0+0x7c>
 cfc:	cmp	r7, #0
 d00:	mov	r0, sl
 d04:	add	r7, sp, #16
 d08:	beq	d44 <m_displaymsg.isra.0+0x1b4>
 d0c:	bl	a1c <strip_unprintable>
 d10:	ldr	r2, [pc, #264]	; e20 <m_displaymsg.isra.0+0x290>
 d14:	mov	r3, r0
 d18:	add	r2, pc, r2
 d1c:	mov	r1, #33	; 0x21
 d20:	mov	r0, r7
 d24:	bl	8bc <snprintf@plt>
 d28:	ldrb	r3, [sp, #52]	; 0x34
 d2c:	cmp	r3, #0
 d30:	bne	d58 <m_displaymsg.isra.0+0x1c8>
 d34:	ldr	r2, [pc, #232]	; e24 <m_displaymsg.isra.0+0x294>
 d38:	ldr	r3, [r5, #236]	; 0xec
 d3c:	add	r2, pc, r2
 d40:	b	c60 <m_displaymsg.isra.0+0xd0>
 d44:	bl	a1c <strip_unprintable>
 d48:	ldr	r2, [pc, #216]	; e28 <m_displaymsg.isra.0+0x298>
 d4c:	mov	r3, r0
 d50:	add	r2, pc, r2
 d54:	b	d1c <m_displaymsg.isra.0+0x18c>
 d58:	ldr	r2, [pc, #204]	; e2c <m_displaymsg.isra.0+0x29c>
 d5c:	add	fp, r4, #88	; 0x58
 d60:	add	sl, sp, #88	; 0x58
 d64:	mov	r1, #512	; 0x200
 d68:	mov	r0, sl
 d6c:	str	fp, [sp]
 d70:	ldr	r3, [sp, #1156]	; 0x484
 d74:	add	r2, pc, r2
 d78:	bl	8bc <snprintf@plt>
 d7c:	cmp	r8, #0
 d80:	mov	r3, sl
 d84:	add	r8, sp, #600	; 0x258
 d88:	beq	df4 <m_displaymsg.isra.0+0x264>
 d8c:	ldr	r2, [pc, #156]	; e30 <m_displaymsg.isra.0+0x2a0>
 d90:	add	r2, pc, r2
 d94:	mov	r1, #512	; 0x200
 d98:	mov	r0, r8
 d9c:	bl	8bc <snprintf@plt>
 da0:	ldr	r3, [pc, #140]	; e34 <m_displaymsg.isra.0+0x2a4>
 da4:	mov	r2, r5
 da8:	mov	r0, r4
 dac:	mov	r1, #0
 db0:	stm	sp, {r7, fp}
 db4:	str	r6, [sp, #8]
 db8:	str	r8, [sp, #12]
 dbc:	add	r3, pc, r3
 dc0:	bl	838 <sendto_channel_local@plt>
 dc4:	ldr	r3, [pc, #108]	; e38 <m_displaymsg.isra.0+0x2a8>
 dc8:	mov	r0, r4
 dcc:	ldr	r1, [pc, #104]	; e3c <m_displaymsg.isra.0+0x2ac>
 dd0:	ldr	r2, [r9, r3]
 dd4:	ldr	r3, [pc, #100]	; e40 <m_displaymsg.isra.0+0x2b0>
 dd8:	add	r1, pc, r1
 ddc:	add	r3, pc, r3
 de0:	stm	sp, {r3, r6, r7, r8}
 de4:	mov	r3, #0
 de8:	ldr	r2, [r2]
 dec:	bl	85c <sendto_match_servs@plt>
 df0:	b	c0c <m_displaymsg.isra.0+0x7c>
 df4:	ldr	r2, [pc, #72]	; e44 <m_displaymsg.isra.0+0x2b4>
 df8:	add	r2, pc, r2
 dfc:	b	d94 <m_displaymsg.isra.0+0x204>
 e00:	.word	0x00011424
 e04:	.word	0x000003d1
 e08:	.word	0x000003b1
 e0c:	.word	0x00000060
 e10:	.word	0x000003a8
 e14:	.word	0x000003b7
 e18:	.word	0x00000068
 e1c:	.word	0x00000373
 e20:	.word	0x00000379
 e24:	.word	0x0000035a
 e28:	.word	0x0000027e
 e2c:	.word	0x00000352
 e30:	.word	0x0000033e
 e34:	.word	0x000001ea
 e38:	.word	0x0000006c
 e3c:	.word	0x00000306
 e40:	.word	0x00000304
 e44:	.word	0x000001d6

00000e48 <m_scene>:
 e48:	push	{r0, r1, r2, lr}
 e4c:	mov	r0, r2
 e50:	ldr	r1, [sp, #16]
 e54:	ldr	r3, [r1, #8]
 e58:	str	r3, [sp, #4]
 e5c:	ldr	r3, [pc, #28]	; e80 <m_scene+0x38>
 e60:	add	r3, pc, r3
 e64:	str	r3, [sp]
 e68:	mov	r3, #0
 e6c:	ldr	r1, [r1, #4]
 e70:	mov	r2, r3
 e74:	bl	b90 <m_displaymsg.isra.0>
 e78:	add	sp, sp, #12
 e7c:	pop	{pc}		; (ldr pc, [sp], #4)
 e80:	.word	0x0000029b

00000e84 <m_fsay>:
 e84:	push	{r0, r1, r2, lr}
 e88:	mov	r0, r2
 e8c:	ldr	r1, [sp, #16]
 e90:	ldr	r3, [r1, #12]
 e94:	str	r3, [sp, #4]
 e98:	ldr	r3, [r1, #8]
 e9c:	str	r3, [sp]
 ea0:	mov	r3, #0
 ea4:	ldr	r1, [r1, #4]
 ea8:	mov	r2, r3
 eac:	bl	b90 <m_displaymsg.isra.0>
 eb0:	add	sp, sp, #12
 eb4:	pop	{pc}		; (ldr pc, [sp], #4)

00000eb8 <m_npc>:
 eb8:	push	{r0, r1, r2, lr}
 ebc:	mov	r0, r2
 ec0:	mov	r2, #1
 ec4:	ldr	r1, [sp, #16]
 ec8:	ldr	r3, [r1, #12]
 ecc:	str	r3, [sp, #4]
 ed0:	ldr	r3, [r1, #8]
 ed4:	str	r3, [sp]
 ed8:	mov	r3, #0
 edc:	ldr	r1, [r1, #4]
 ee0:	bl	b90 <m_displaymsg.isra.0>
 ee4:	add	sp, sp, #12
 ee8:	pop	{pc}		; (ldr pc, [sp], #4)

00000eec <m_faction>:
 eec:	push	{r0, r1, r2, lr}
 ef0:	mov	r0, r2
 ef4:	mov	r2, #0
 ef8:	ldr	r1, [sp, #16]
 efc:	ldr	r3, [r1, #12]
 f00:	str	r3, [sp, #4]
 f04:	ldr	r3, [r1, #8]
 f08:	str	r3, [sp]
 f0c:	mov	r3, #1
 f10:	ldr	r1, [r1, #4]
 f14:	bl	b90 <m_displaymsg.isra.0>
 f18:	add	sp, sp, #12
 f1c:	pop	{pc}		; (ldr pc, [sp], #4)

00000f20 <m_npca>:
 f20:	push	{r0, r1, r2, lr}
 f24:	mov	r0, r2
 f28:	ldr	r1, [sp, #16]
 f2c:	ldr	r3, [r1, #12]
 f30:	str	r3, [sp, #4]
 f34:	ldr	r3, [r1, #8]
 f38:	str	r3, [sp]
 f3c:	mov	r3, #1
 f40:	ldr	r1, [r1, #4]
 f44:	mov	r2, r3
 f48:	bl	b90 <m_displaymsg.isra.0>
 f4c:	add	sp, sp, #12
 f50:	pop	{pc}		; (ldr pc, [sp], #4)

Disassembly of section .fini:

00000f54 <_fini>:
 f54:	push	{r3, lr}
 f58:	pop	{r3, pc}
