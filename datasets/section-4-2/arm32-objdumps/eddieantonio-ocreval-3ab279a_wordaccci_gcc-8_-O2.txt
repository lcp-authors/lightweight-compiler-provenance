
../repos/eddieantonio-ocreval-3ab279a/wordaccci/wordaccci:     file format elf32-littlearm


Disassembly of section .init:

00010754 <.init>:
   10754:	push	{r3, lr}
   10758:	bl	1094c <abort@plt+0xb8>
   1075c:	pop	{r3, pc}

Disassembly of section .plt:

00010760 <calloc@plt-0x14>:
   10760:	push	{lr}		; (str lr, [sp, #-4]!)
   10764:	ldr	lr, [pc, #4]	; 10770 <calloc@plt-0x4>
   10768:	add	lr, pc, lr
   1076c:	ldr	pc, [lr, #8]!
   10770:	muleq	r1, r0, r8

00010774 <calloc@plt>:
   10774:	add	ip, pc, #0, 12
   10778:	add	ip, ip, #73728	; 0x12000
   1077c:	ldr	pc, [ip, #2192]!	; 0x890

00010780 <strcmp@plt>:
   10780:	add	ip, pc, #0, 12
   10784:	add	ip, ip, #73728	; 0x12000
   10788:	ldr	pc, [ip, #2184]!	; 0x888

0001078c <strtol@plt>:
   1078c:	add	ip, pc, #0, 12
   10790:	add	ip, ip, #73728	; 0x12000
   10794:	ldr	pc, [ip, #2176]!	; 0x880

00010798 <printf@plt>:
   10798:	add	ip, pc, #0, 12
   1079c:	add	ip, ip, #73728	; 0x12000
   107a0:	ldr	pc, [ip, #2168]!	; 0x878

000107a4 <fopen@plt>:
   107a4:	add	ip, pc, #0, 12
   107a8:	add	ip, ip, #73728	; 0x12000
   107ac:	ldr	pc, [ip, #2160]!	; 0x870

000107b0 <free@plt>:
   107b0:	add	ip, pc, #0, 12
   107b4:	add	ip, ip, #73728	; 0x12000
   107b8:	ldr	pc, [ip, #2152]!	; 0x868

000107bc <fgets@plt>:
   107bc:	add	ip, pc, #0, 12
   107c0:	add	ip, ip, #73728	; 0x12000
   107c4:	ldr	pc, [ip, #2144]!	; 0x860

000107c8 <strdup@plt>:
   107c8:	add	ip, pc, #0, 12
   107cc:	add	ip, ip, #73728	; 0x12000
   107d0:	ldr	pc, [ip, #2136]!	; 0x858

000107d4 <unlink@plt>:
   107d4:	add	ip, pc, #0, 12
   107d8:	add	ip, ip, #73728	; 0x12000
   107dc:	ldr	pc, [ip, #2128]!	; 0x850

000107e0 <__xstat@plt>:
   107e0:	add	ip, pc, #0, 12
   107e4:	add	ip, ip, #73728	; 0x12000
   107e8:	ldr	pc, [ip, #2120]!	; 0x848

000107ec <fwrite@plt>:
   107ec:	add	ip, pc, #0, 12
   107f0:	add	ip, ip, #73728	; 0x12000
   107f4:	ldr	pc, [ip, #2112]!	; 0x840

000107f8 <__libc_start_main@plt>:
   107f8:	add	ip, pc, #0, 12
   107fc:	add	ip, ip, #73728	; 0x12000
   10800:	ldr	pc, [ip, #2104]!	; 0x838

00010804 <__sysv_signal@plt>:
   10804:	add	ip, pc, #0, 12
   10808:	add	ip, ip, #73728	; 0x12000
   1080c:	ldr	pc, [ip, #2096]!	; 0x830

00010810 <__gmon_start__@plt>:
   10810:	add	ip, pc, #0, 12
   10814:	add	ip, ip, #73728	; 0x12000
   10818:	ldr	pc, [ip, #2088]!	; 0x828

0001081c <getpid@plt>:
   1081c:	add	ip, pc, #0, 12
   10820:	add	ip, ip, #73728	; 0x12000
   10824:	ldr	pc, [ip, #2080]!	; 0x820

00010828 <exit@plt>:
   10828:	add	ip, pc, #0, 12
   1082c:	add	ip, ip, #73728	; 0x12000
   10830:	ldr	pc, [ip, #2072]!	; 0x818

00010834 <strlen@plt>:
   10834:	add	ip, pc, #0, 12
   10838:	add	ip, ip, #73728	; 0x12000
   1083c:	ldr	pc, [ip, #2064]!	; 0x810

00010840 <fprintf@plt>:
   10840:	add	ip, pc, #0, 12
   10844:	add	ip, ip, #73728	; 0x12000
   10848:	ldr	pc, [ip, #2056]!	; 0x808

0001084c <sqrt@plt>:
   1084c:	add	ip, pc, #0, 12
   10850:	add	ip, ip, #73728	; 0x12000
   10854:	ldr	pc, [ip, #2048]!	; 0x800

00010858 <__isoc99_sscanf@plt>:
   10858:	add	ip, pc, #0, 12
   1085c:	add	ip, ip, #73728	; 0x12000
   10860:	ldr	pc, [ip, #2040]!	; 0x7f8

00010864 <fclose@plt>:
   10864:	add	ip, pc, #0, 12
   10868:	add	ip, ip, #73728	; 0x12000
   1086c:	ldr	pc, [ip, #2032]!	; 0x7f0

00010870 <fputc@plt>:
   10870:	add	ip, pc, #0, 12
   10874:	add	ip, ip, #73728	; 0x12000
   10878:	ldr	pc, [ip, #2024]!	; 0x7e8

0001087c <sprintf@plt>:
   1087c:	add	ip, pc, #0, 12
   10880:	add	ip, ip, #73728	; 0x12000
   10884:	ldr	pc, [ip, #2016]!	; 0x7e0

00010888 <strncmp@plt>:
   10888:	add	ip, pc, #0, 12
   1088c:	add	ip, ip, #73728	; 0x12000
   10890:	ldr	pc, [ip, #2008]!	; 0x7d8

00010894 <abort@plt>:
   10894:	add	ip, pc, #0, 12
   10898:	add	ip, ip, #73728	; 0x12000
   1089c:	ldr	pc, [ip, #2000]!	; 0x7d0

Disassembly of section .text:

000108a0 <error@@Base-0x818>:
   108a0:	ldr	r2, [pc, #96]	; 10908 <abort@plt+0x74>
   108a4:	mov	r3, #0
   108a8:	strd	r4, [sp, #-12]!
   108ac:	mov	r5, r1
   108b0:	str	lr, [sp, #8]
   108b4:	sub	sp, sp, #12
   108b8:	str	r0, [sp, #4]
   108bc:	add	r0, sp, #4
   108c0:	add	r2, pc, r2
   108c4:	bl	1129c <error@@Base+0x1e4>
   108c8:	ldr	r3, [sp, #4]
   108cc:	cmp	r3, #1
   108d0:	subgt	r5, r5, #4
   108d4:	movgt	r4, #0
   108d8:	ble	108fc <abort@plt+0x68>
   108dc:	ldr	r0, [r5, #4]!
   108e0:	add	r4, r4, #1
   108e4:	bl	10a00 <abort@plt+0x16c>
   108e8:	ldr	r3, [sp, #4]
   108ec:	cmp	r3, r4
   108f0:	bgt	108dc <abort@plt+0x48>
   108f4:	bl	10a68 <abort@plt+0x1d4>
   108f8:	bl	1103c <abort@plt+0x7a8>
   108fc:	ldr	r0, [pc, #8]	; 1090c <abort@plt+0x78>
   10900:	add	r0, pc, r0
   10904:	bl	110b8 <error@@Base>
   10908:	andeq	r1, r0, r8, ror #30
   1090c:	andeq	r1, r0, r8, asr pc
   10910:	mov	fp, #0
   10914:	mov	lr, #0
   10918:	pop	{r1}		; (ldr r1, [sp], #4)
   1091c:	mov	r2, sp
   10920:	push	{r2}		; (str r2, [sp, #-4]!)
   10924:	push	{r0}		; (str r0, [sp, #-4]!)
   10928:	ldr	ip, [pc, #16]	; 10940 <abort@plt+0xac>
   1092c:	push	{ip}		; (str ip, [sp, #-4]!)
   10930:	ldr	r0, [pc, #12]	; 10944 <abort@plt+0xb0>
   10934:	ldr	r3, [pc, #12]	; 10948 <abort@plt+0xb4>
   10938:	bl	107f8 <__libc_start_main@plt>
   1093c:	bl	10894 <abort@plt>
   10940:	andeq	r2, r1, r0, lsl #15
   10944:	andeq	r0, r1, r0, lsr #17
   10948:	andeq	r2, r1, r0, lsr #14
   1094c:	ldr	r3, [pc, #20]	; 10968 <abort@plt+0xd4>
   10950:	ldr	r2, [pc, #20]	; 1096c <abort@plt+0xd8>
   10954:	add	r3, pc, r3
   10958:	ldr	r2, [r3, r2]
   1095c:	cmp	r2, #0
   10960:	bxeq	lr
   10964:	b	10810 <__gmon_start__@plt>
   10968:	andeq	r2, r1, r4, lsr #13
   1096c:	andeq	r0, r0, ip, ror r0
   10970:	ldr	r0, [pc, #24]	; 10990 <abort@plt+0xfc>
   10974:	ldr	r3, [pc, #24]	; 10994 <abort@plt+0x100>
   10978:	cmp	r3, r0
   1097c:	bxeq	lr
   10980:	ldr	r3, [pc, #16]	; 10998 <abort@plt+0x104>
   10984:	cmp	r3, #0
   10988:	bxeq	lr
   1098c:	bx	r3
   10990:	andeq	r3, r2, ip, lsr #1
   10994:	andeq	r3, r2, ip, lsr #1
   10998:	andeq	r0, r0, r0
   1099c:	ldr	r0, [pc, #36]	; 109c8 <abort@plt+0x134>
   109a0:	ldr	r1, [pc, #36]	; 109cc <abort@plt+0x138>
   109a4:	sub	r1, r1, r0
   109a8:	asr	r1, r1, #2
   109ac:	add	r1, r1, r1, lsr #31
   109b0:	asrs	r1, r1, #1
   109b4:	bxeq	lr
   109b8:	ldr	r3, [pc, #16]	; 109d0 <abort@plt+0x13c>
   109bc:	cmp	r3, #0
   109c0:	bxeq	lr
   109c4:	bx	r3
   109c8:	andeq	r3, r2, ip, lsr #1
   109cc:	andeq	r3, r2, ip, lsr #1
   109d0:	andeq	r0, r0, r0
   109d4:	push	{r4, lr}
   109d8:	ldr	r4, [pc, #24]	; 109f8 <abort@plt+0x164>
   109dc:	ldrb	r3, [r4]
   109e0:	cmp	r3, #0
   109e4:	popne	{r4, pc}
   109e8:	bl	10970 <abort@plt+0xdc>
   109ec:	mov	r3, #1
   109f0:	strb	r3, [r4]
   109f4:	pop	{r4, pc}
   109f8:	strheq	r3, [r2], -r0
   109fc:	b	1099c <abort@plt+0x108>
   10a00:	strd	r4, [sp, #-24]!	; 0xffffffe8
   10a04:	mov	r1, r0
   10a08:	ldr	r4, [pc, #76]	; 10a5c <abort@plt+0x1c8>
   10a0c:	strd	r6, [sp, #8]
   10a10:	ldr	r3, [pc, #72]	; 10a60 <abort@plt+0x1cc>
   10a14:	str	r8, [sp, #16]
   10a18:	str	lr, [sp, #20]
   10a1c:	add	r4, pc, r4
   10a20:	ldr	r5, [r4, r3]
   10a24:	mov	r0, r5
   10a28:	ldrd	r6, [r5]
   10a2c:	bl	11c30 <error@@Base+0xb78>
   10a30:	ldr	r3, [pc, #44]	; 10a64 <abort@plt+0x1d0>
   10a34:	ldm	r5, {r1, r2}
   10a38:	ldr	r8, [sp, #16]
   10a3c:	ldr	r0, [r4, r3]
   10a40:	sub	r2, r2, r7
   10a44:	sub	r1, r1, r6
   10a48:	ldrd	r4, [sp]
   10a4c:	ldrd	r6, [sp, #8]
   10a50:	ldr	lr, [sp, #20]
   10a54:	add	sp, sp, #24
   10a58:	b	10b68 <abort@plt+0x2d4>
   10a5c:	ldrdeq	r2, [r1], -ip
   10a60:	andeq	r0, r0, r4, lsl #1
   10a64:	andeq	r0, r0, r8, lsl #1
   10a68:	strd	r4, [sp, #-12]!
   10a6c:	ldr	r4, [pc, #204]	; 10b40 <abort@plt+0x2ac>
   10a70:	str	lr, [sp, #8]
   10a74:	sub	sp, sp, #36	; 0x24
   10a78:	ldr	r3, [pc, #196]	; 10b44 <abort@plt+0x2b0>
   10a7c:	add	r2, sp, #24
   10a80:	add	r1, sp, #16
   10a84:	add	r4, pc, r4
   10a88:	ldr	r5, [r4, r3]
   10a8c:	mov	r0, r5
   10a90:	bl	10bcc <abort@plt+0x338>
   10a94:	ldr	r0, [pc, #172]	; 10b48 <abort@plt+0x2b4>
   10a98:	ldr	r1, [r5, #12]
   10a9c:	add	r0, pc, r0
   10aa0:	bl	10798 <printf@plt>
   10aa4:	ldr	r3, [pc, #160]	; 10b4c <abort@plt+0x2b8>
   10aa8:	ldr	r0, [pc, #160]	; 10b50 <abort@plt+0x2bc>
   10aac:	ldr	r4, [r4, r3]
   10ab0:	add	r0, pc, r0
   10ab4:	ldr	r1, [r4]
   10ab8:	bl	10798 <printf@plt>
   10abc:	ldr	r0, [pc, #144]	; 10b54 <abort@plt+0x2c0>
   10ac0:	ldr	r1, [r4, #4]
   10ac4:	add	r0, pc, r0
   10ac8:	bl	10798 <printf@plt>
   10acc:	ldr	r3, [r4]
   10ad0:	ldr	r2, [r4, #4]
   10ad4:	vldr	d5, [pc, #92]	; 10b38 <abort@plt+0x2a4>
   10ad8:	vmov	s15, r3
   10adc:	ldr	r0, [pc, #116]	; 10b58 <abort@plt+0x2c4>
   10ae0:	sub	r3, r3, r2
   10ae4:	vmov	s14, r3
   10ae8:	add	r0, pc, r0
   10aec:	vcvt.f64.s32	d6, s15
   10af0:	vcvt.f64.s32	d7, s14
   10af4:	vmul.f64	d7, d7, d5
   10af8:	vdiv.f64	d7, d7, d6
   10afc:	vmov	r2, r3, d7
   10b00:	bl	10798 <printf@plt>
   10b04:	ldr	r3, [pc, #80]	; 10b5c <abort@plt+0x2c8>
   10b08:	ldr	r0, [pc, #80]	; 10b60 <abort@plt+0x2cc>
   10b0c:	ldrd	r4, [sp, #24]
   10b10:	add	r3, pc, r3
   10b14:	add	r0, pc, r0
   10b18:	str	r3, [sp, #8]
   10b1c:	ldrd	r2, [sp, #16]
   10b20:	strd	r4, [sp]
   10b24:	bl	10798 <printf@plt>
   10b28:	add	sp, sp, #36	; 0x24
   10b2c:	ldrd	r4, [sp]
   10b30:	add	sp, sp, #8
   10b34:	pop	{pc}		; (ldr pc, [sp], #4)
   10b38:	andeq	r0, r0, r0
   10b3c:	subsmi	r0, r9, r0
   10b40:	andeq	r2, r1, r4, ror r5
   10b44:	andeq	r0, r0, r8, lsl #1
   10b48:	andeq	r1, r0, ip, ror #25
   10b4c:	andeq	r0, r0, r4, lsl #1
   10b50:	strdeq	r1, [r0], -r0
   10b54:	andeq	r1, r0, ip, ror #25
   10b58:	andeq	r1, r0, r0, ror #25
   10b5c:	andeq	r1, r0, r4, ror #25
   10b60:	andeq	r1, r0, r8, asr #25
   10b64:	andeq	r0, r0, r0
   10b68:	strd	r4, [sp, #-16]!
   10b6c:	mov	r4, r0
   10b70:	mov	r0, #1
   10b74:	str	r6, [sp, #8]
   10b78:	mov	r6, r1
   10b7c:	mov	r1, #32
   10b80:	mov	r5, r2
   10b84:	str	lr, [sp, #12]
   10b88:	bl	11114 <error@@Base+0x5c>
   10b8c:	mov	ip, r0
   10b90:	ldr	lr, [sp, #12]
   10b94:	mov	r0, r4
   10b98:	mov	r1, ip
   10b9c:	str	r6, [ip, #8]
   10ba0:	str	r5, [ip, #12]
   10ba4:	ldr	ip, [r4, #24]
   10ba8:	ldr	r3, [r4, #28]
   10bac:	add	ip, ip, r6
   10bb0:	ldr	r6, [sp, #8]
   10bb4:	add	r3, r3, r5
   10bb8:	str	ip, [r4, #24]
   10bbc:	str	r3, [r4, #28]
   10bc0:	ldrd	r4, [sp]
   10bc4:	add	sp, sp, #16
   10bc8:	b	12038 <error@@Base+0xf80>
   10bcc:	strd	r4, [sp, #-16]!
   10bd0:	str	r6, [sp, #8]
   10bd4:	str	lr, [sp, #12]
   10bd8:	sub	sp, sp, #24
   10bdc:	ldr	lr, [r0]
   10be0:	cmp	lr, #0
   10be4:	beq	10d98 <abort@plt+0x504>
   10be8:	mov	r3, lr
   10bec:	mov	r4, #0
   10bf0:	ldr	ip, [r3, #8]
   10bf4:	ldr	r3, [r3, #4]
   10bf8:	cmp	ip, #0
   10bfc:	addgt	r4, r4, #1
   10c00:	cmp	r3, #0
   10c04:	bne	10bf0 <abort@plt+0x35c>
   10c08:	cmp	r4, #1
   10c0c:	ble	10d98 <abort@plt+0x504>
   10c10:	vldr	d6, [pc, #400]	; 10da8 <abort@plt+0x514>
   10c14:	mov	ip, lr
   10c18:	ldr	r5, [r0, #24]
   10c1c:	ldr	r6, [r0, #28]
   10c20:	vldr	s9, [r0, #12]
   10c24:	vmov.f64	d1, d6
   10c28:	vmov	s15, r5
   10c2c:	vldr	d5, [pc, #380]	; 10db0 <abort@plt+0x51c>
   10c30:	sub	r3, r5, r6
   10c34:	vmov	s14, r3
   10c38:	vmov	r3, s9
   10c3c:	vcvt.f64.s32	d3, s9
   10c40:	vcvt.f64.s32	d2, s15
   10c44:	sub	r3, r3, #1
   10c48:	vcvt.f64.s32	d7, s14
   10c4c:	vmov	s8, r3
   10c50:	vmul.f64	d7, d7, d6
   10c54:	vcvt.f64.s32	d4, s8
   10c58:	vdiv.f64	d6, d7, d2
   10c5c:	vmul.f64	d2, d3, d6
   10c60:	vstr	d6, [r0, #32]
   10c64:	ldr	r3, [ip, #8]
   10c68:	ldr	r4, [ip, #12]
   10c6c:	sub	r3, r5, r3
   10c70:	sub	r4, r6, r4
   10c74:	vmov	s15, r3
   10c78:	sub	r3, r3, r4
   10c7c:	vmov	s14, r3
   10c80:	vcvt.f64.s32	d0, s15
   10c84:	vcvt.f64.s32	d7, s14
   10c88:	vmul.f64	d7, d7, d1
   10c8c:	vdiv.f64	d6, d7, d0
   10c90:	vmov.f64	d7, d2
   10c94:	vmls.f64	d7, d6, d4
   10c98:	vstr	d6, [ip, #16]
   10c9c:	vadd.f64	d5, d5, d6
   10ca0:	vstr	d7, [ip, #24]
   10ca4:	ldr	ip, [ip, #4]
   10ca8:	cmp	ip, #0
   10cac:	bne	10c64 <abort@plt+0x3d0>
   10cb0:	vmul.f64	d5, d5, d4
   10cb4:	vldr	d6, [pc, #244]	; 10db0 <abort@plt+0x51c>
   10cb8:	vdiv.f64	d7, d5, d3
   10cbc:	vsub.f64	d5, d2, d7
   10cc0:	vstr	d5, [r0, #40]	; 0x28
   10cc4:	vldr	d7, [lr, #24]
   10cc8:	ldr	lr, [lr, #4]
   10ccc:	vsub.f64	d7, d7, d5
   10cd0:	cmp	lr, #0
   10cd4:	vmla.f64	d6, d7, d7
   10cd8:	bne	10cc4 <abort@plt+0x430>
   10cdc:	vdiv.f64	d7, d6, d4
   10ce0:	vdiv.f64	d0, d7, d3
   10ce4:	vcmp.f64	d0, #0.0
   10ce8:	vsqrt.f64	d7, d0
   10cec:	vmrs	APSR_nzcv, fpscr
   10cf0:	bmi	10d74 <abort@plt+0x4e0>
   10cf4:	vldr	d4, [pc, #188]	; 10db8 <abort@plt+0x524>
   10cf8:	vldr	d6, [pc, #168]	; 10da8 <abort@plt+0x514>
   10cfc:	vmul.f64	d7, d7, d4
   10d00:	vsub.f64	d5, d5, d7
   10d04:	vcmpe.f64	d5, d6
   10d08:	vmrs	APSR_nzcv, fpscr
   10d0c:	vmovgt.f64	d5, d6
   10d10:	ble	10d60 <abort@plt+0x4cc>
   10d14:	vstr	d5, [r1]
   10d18:	vldr	d5, [r0, #40]	; 0x28
   10d1c:	vldr	d6, [pc, #132]	; 10da8 <abort@plt+0x514>
   10d20:	vadd.f64	d7, d7, d5
   10d24:	vcmpe.f64	d7, d6
   10d28:	vmrs	APSR_nzcv, fpscr
   10d2c:	vmovgt.f64	d7, d6
   10d30:	ble	10d4c <abort@plt+0x4b8>
   10d34:	vstr	d7, [r2]
   10d38:	add	sp, sp, #24
   10d3c:	ldrd	r4, [sp]
   10d40:	ldr	r6, [sp, #8]
   10d44:	add	sp, sp, #12
   10d48:	pop	{pc}		; (ldr pc, [sp], #4)
   10d4c:	vcmp.f64	d7, #0.0
   10d50:	vldr	d6, [pc, #88]	; 10db0 <abort@plt+0x51c>
   10d54:	vmrs	APSR_nzcv, fpscr
   10d58:	vmovmi.f64	d7, d6
   10d5c:	b	10d34 <abort@plt+0x4a0>
   10d60:	vcmp.f64	d5, #0.0
   10d64:	vldr	d6, [pc, #68]	; 10db0 <abort@plt+0x51c>
   10d68:	vmrs	APSR_nzcv, fpscr
   10d6c:	vmovmi.f64	d5, d6
   10d70:	b	10d14 <abort@plt+0x480>
   10d74:	vstr	d7, [sp]
   10d78:	strd	r0, [sp, #12]
   10d7c:	str	r2, [sp, #20]
   10d80:	bl	1084c <sqrt@plt>
   10d84:	vldr	d7, [sp]
   10d88:	ldrd	r0, [sp, #12]
   10d8c:	ldr	r2, [sp, #20]
   10d90:	vldr	d5, [r0, #40]	; 0x28
   10d94:	b	10cf4 <abort@plt+0x460>
   10d98:	ldr	r0, [pc, #32]	; 10dc0 <abort@plt+0x52c>
   10d9c:	add	r0, pc, r0
   10da0:	bl	110b8 <error@@Base>
   10da4:	nop	{0}
   10da8:	andeq	r0, r0, r0
   10dac:	subsmi	r0, r9, r0
	...
   10db8:			; <UNDEFINED> instruction: 0xf5c28f5c
   10dbc:	svccc	0x00ff5c28
   10dc0:	ldrdeq	r1, [r0], -r4
   10dc4:	ldr	r3, [pc, #96]	; 10e2c <abort@plt+0x598>
   10dc8:	strd	r4, [sp, #-16]!
   10dcc:	ldr	r2, [pc, #92]	; 10e30 <abort@plt+0x59c>
   10dd0:	str	r6, [sp, #8]
   10dd4:	mov	r6, r0
   10dd8:	str	lr, [sp, #12]
   10ddc:	sub	sp, sp, #112	; 0x70
   10de0:	add	r3, pc, r3
   10de4:	add	r4, sp, #12
   10de8:	ldr	r3, [r3, r2]
   10dec:	ldr	r5, [r3]
   10df0:	bl	1081c <getpid@plt>
   10df4:	ldr	r1, [pc, #56]	; 10e34 <abort@plt+0x5a0>
   10df8:	mov	r3, r0
   10dfc:	mov	r0, r4
   10e00:	str	r6, [sp]
   10e04:	mov	r2, r5
   10e08:	add	r1, pc, r1
   10e0c:	bl	1087c <sprintf@plt>
   10e10:	mov	r0, r4
   10e14:	bl	107c8 <strdup@plt>
   10e18:	add	sp, sp, #112	; 0x70
   10e1c:	ldrd	r4, [sp]
   10e20:	ldr	r6, [sp, #8]
   10e24:	add	sp, sp, #12
   10e28:	pop	{pc}		; (ldr pc, [sp], #4)
   10e2c:	andeq	r2, r1, r8, lsl r2
   10e30:	andeq	r0, r0, r0, lsl #1
   10e34:	andeq	r1, r0, r0, lsl #21
   10e38:	ldr	r3, [pc, #116]	; 10eb4 <abort@plt+0x620>
   10e3c:	mov	r6, r0
   10e40:	str	r7, [sp, #-8]!
   10e44:	ldr	r2, [pc, #108]	; 10eb8 <abort@plt+0x624>
   10e48:	str	lr, [sp, #4]
   10e4c:	add	r3, pc, r3
   10e50:	ldr	r3, [r3, r2]
   10e54:	ldr	r3, [r3]
   10e58:	cmp	r3, #0
   10e5c:	beq	10e64 <abort@plt+0x5d0>
   10e60:	blx	r3
   10e64:	ldr	r3, [pc, #80]	; 10ebc <abort@plt+0x628>
   10e68:	add	r3, pc, r3
   10e6c:	ldrsh	r2, [r3]
   10e70:	cmp	r2, #0
   10e74:	ble	10eac <abort@plt+0x618>
   10e78:	mov	r5, r3
   10e7c:	mov	r4, #1
   10e80:	mov	r0, r4
   10e84:	add	r4, r4, #1
   10e88:	bl	10dc4 <abort@plt+0x530>
   10e8c:	mov	r7, r0
   10e90:	sxth	r4, r4
   10e94:	bl	107d4 <unlink@plt>
   10e98:	mov	r0, r7
   10e9c:	bl	107b0 <free@plt>
   10ea0:	ldrsh	r3, [r5]
   10ea4:	cmp	r3, r4
   10ea8:	bge	10e80 <abort@plt+0x5ec>
   10eac:	mov	r0, r6
   10eb0:	bl	10828 <exit@plt>
   10eb4:	andeq	r2, r1, ip, lsr #3
   10eb8:	andeq	r0, r0, ip, lsl #1
   10ebc:	andeq	r2, r1, r2, asr #4
   10ec0:	ldrb	r3, [r0]
   10ec4:	ldrb	r2, [r1]
   10ec8:	cmp	r3, #0
   10ecc:	beq	10ef4 <abort@plt+0x660>
   10ed0:	cmp	r2, r3
   10ed4:	beq	10ee4 <abort@plt+0x650>
   10ed8:	b	10f00 <abort@plt+0x66c>
   10edc:	cmp	r3, r2
   10ee0:	bne	10f00 <abort@plt+0x66c>
   10ee4:	ldrb	r3, [r0, #1]!
   10ee8:	ldrb	r2, [r1, #1]!
   10eec:	cmp	r3, #0
   10ef0:	bne	10edc <abort@plt+0x648>
   10ef4:	cmp	r2, #0
   10ef8:	beq	10f10 <abort@plt+0x67c>
   10efc:	mov	r3, #0
   10f00:	cmp	r3, r2
   10f04:	mvncc	r0, #0
   10f08:	movcs	r0, #1
   10f0c:	bx	lr
   10f10:	mov	r0, r2
   10f14:	bx	lr
   10f18:	ldr	r3, [pc, #48]	; 10f50 <abort@plt+0x6bc>
   10f1c:	ldr	r1, [pc, #48]	; 10f54 <abort@plt+0x6c0>
   10f20:	add	r3, pc, r3
   10f24:	ldr	r1, [r3, r1]
   10f28:	ldr	r1, [r1]
   10f2c:	cmp	r1, r0
   10f30:	beq	10f4c <abort@plt+0x6b8>
   10f34:	ldr	r1, [pc, #28]	; 10f58 <abort@plt+0x6c4>
   10f38:	ldr	r3, [r3, r1]
   10f3c:	ldr	r3, [r3]
   10f40:	cmp	r3, r0
   10f44:	beq	10f4c <abort@plt+0x6b8>
   10f48:	b	10864 <fclose@plt>
   10f4c:	bx	lr
   10f50:	ldrdeq	r2, [r1], -r8
   10f54:	muleq	r0, r0, r0
   10f58:	muleq	r0, r4, r0
   10f5c:	push	{lr}		; (str lr, [sp, #-4]!)
   10f60:	sub	sp, sp, #92	; 0x5c
   10f64:	mov	r1, r0
   10f68:	mov	r2, sp
   10f6c:	mov	r0, #3
   10f70:	bl	107e0 <__xstat@plt>
   10f74:	clz	r0, r0
   10f78:	lsr	r0, r0, #5
   10f7c:	add	sp, sp, #92	; 0x5c
   10f80:	pop	{pc}		; (ldr pc, [sp], #4)
   10f84:	ldr	r2, [pc, #56]	; 10fc4 <abort@plt+0x730>
   10f88:	str	r4, [sp, #-8]!
   10f8c:	add	r2, pc, r2
   10f90:	ldrh	r3, [r2]
   10f94:	str	lr, [sp, #4]
   10f98:	add	r3, r3, #1
   10f9c:	sxth	r3, r3
   10fa0:	mov	r0, r3
   10fa4:	strh	r3, [r2]
   10fa8:	bl	10dc4 <abort@plt+0x530>
   10fac:	mov	r4, r0
   10fb0:	bl	107d4 <unlink@plt>
   10fb4:	mov	r0, r4
   10fb8:	ldr	r4, [sp]
   10fbc:	add	sp, sp, #4
   10fc0:	pop	{pc}		; (ldr pc, [sp], #4)
   10fc4:	andeq	r2, r1, lr, lsl r1
   10fc8:	str	r4, [sp, #-8]!
   10fcc:	mov	r4, r0
   10fd0:	str	lr, [sp, #4]
   10fd4:	bl	10834 <strlen@plt>
   10fd8:	uxth	r0, r0
   10fdc:	sub	r3, r0, #1
   10fe0:	sxth	r3, r3
   10fe4:	cmp	r3, #0
   10fe8:	blt	11028 <abort@plt+0x794>
   10fec:	ldrb	r2, [r4, r3]
   10ff0:	cmp	r2, #47	; 0x2f
   10ff4:	beq	11028 <abort@plt+0x794>
   10ff8:	sub	r0, r0, #2
   10ffc:	sxth	r3, r0
   11000:	add	r2, r3, #1
   11004:	add	r2, r4, r2
   11008:	b	1101c <abort@plt+0x788>
   1100c:	ldrb	r0, [r2, #-1]!
   11010:	cmp	r0, #47	; 0x2f
   11014:	beq	11028 <abort@plt+0x794>
   11018:	mov	r3, r1
   1101c:	tst	r3, #32768	; 0x8000
   11020:	sub	r1, r3, #1
   11024:	beq	1100c <abort@plt+0x778>
   11028:	add	r0, r3, #1
   1102c:	add	r0, r4, r0
   11030:	ldr	r4, [sp]
   11034:	add	sp, sp, #4
   11038:	pop	{pc}		; (ldr pc, [sp], #4)
   1103c:	mov	r0, #0
   11040:	str	r4, [sp, #-8]!
   11044:	str	lr, [sp, #4]
   11048:	bl	10e38 <abort@plt+0x5a4>
   1104c:	ldr	r2, [pc, #80]	; 110a4 <abort@plt+0x810>
   11050:	str	r4, [sp, #-8]!
   11054:	ldr	r1, [pc, #76]	; 110a8 <abort@plt+0x814>
   11058:	str	lr, [sp, #4]
   1105c:	add	r2, pc, r2
   11060:	ldr	r1, [r2, r1]
   11064:	ldr	r1, [r1]
   11068:	cmp	r1, #0
   1106c:	beq	11078 <abort@plt+0x7e4>
   11070:	blx	r1
   11074:	bl	1103c <abort@plt+0x7a8>
   11078:	mov	r3, r0
   1107c:	ldr	ip, [pc, #40]	; 110ac <abort@plt+0x818>
   11080:	ldr	r0, [pc, #40]	; 110b0 <abort@plt+0x81c>
   11084:	ldr	r1, [pc, #40]	; 110b4 <abort@plt+0x820>
   11088:	ldr	ip, [r2, ip]
   1108c:	ldr	r0, [r2, r0]
   11090:	add	r1, pc, r1
   11094:	ldr	r2, [ip]
   11098:	ldr	r0, [r0]
   1109c:	bl	10840 <fprintf@plt>
   110a0:	b	11074 <abort@plt+0x7e0>
   110a4:	muleq	r1, ip, pc	; <UNPREDICTABLE>
   110a8:	andeq	r0, r0, r4, ror r0
   110ac:	andeq	r0, r0, r0, lsl #1
   110b0:	andeq	r0, r0, r8, ror r0
   110b4:	andeq	r1, r0, r8, lsl #16

000110b8 <error@@Base>:
   110b8:	str	r4, [sp, #-8]!
   110bc:	mov	r3, r0
   110c0:	ldr	r4, [pc, #56]	; 11100 <error@@Base+0x48>
   110c4:	str	lr, [sp, #4]
   110c8:	ldr	r0, [pc, #52]	; 11104 <error@@Base+0x4c>
   110cc:	ldr	r2, [pc, #52]	; 11108 <error@@Base+0x50>
   110d0:	add	r4, pc, r4
   110d4:	ldr	r1, [pc, #48]	; 1110c <error@@Base+0x54>
   110d8:	ldr	ip, [r4, r0]
   110dc:	ldr	r0, [r4, r2]
   110e0:	add	r1, pc, r1
   110e4:	ldr	r2, [ip]
   110e8:	ldr	r0, [r0]
   110ec:	bl	10840 <fprintf@plt>
   110f0:	ldr	r3, [pc, #24]	; 11110 <error@@Base+0x58>
   110f4:	ldr	r3, [r4, r3]
   110f8:	ldr	r0, [r3]
   110fc:	bl	10e38 <abort@plt+0x5a4>
   11100:	andeq	r1, r1, r8, lsr #30
   11104:	andeq	r0, r0, r0, lsl #1
   11108:	andeq	r0, r0, r8, ror r0
   1110c:	andeq	r1, r0, r8, asr #15
   11110:	muleq	r0, r8, r0
   11114:	str	r4, [sp, #-8]!
   11118:	str	lr, [sp, #4]
   1111c:	bl	10774 <calloc@plt>
   11120:	cmp	r0, #0
   11124:	beq	11134 <error@@Base+0x7c>
   11128:	ldr	r4, [sp]
   1112c:	add	sp, sp, #4
   11130:	pop	{pc}		; (ldr pc, [sp], #4)
   11134:	ldr	r0, [pc, #4]	; 11140 <error@@Base+0x88>
   11138:	add	r0, pc, r0
   1113c:	bl	110b8 <error@@Base>
   11140:	andeq	r1, r0, r8, ror r7
   11144:	ldr	r3, [pc, #40]	; 11174 <error@@Base+0xbc>
   11148:	add	r3, pc, r3
   1114c:	ldrb	r2, [r3, #2]
   11150:	cmp	r2, #0
   11154:	bxne	lr
   11158:	ldr	r0, [pc, #24]	; 11178 <error@@Base+0xc0>
   1115c:	mov	r2, #1
   11160:	str	r4, [sp, #-8]!
   11164:	str	lr, [sp, #4]
   11168:	strb	r2, [r3, #2]
   1116c:	add	r0, pc, r0
   11170:	bl	110b8 <error@@Base>
   11174:	andeq	r1, r1, r2, ror #30
   11178:	andeq	r1, r0, r0, ror #14
   1117c:	ldr	r4, [pc, #68]	; 111c8 <error@@Base+0x110>
   11180:	mov	r3, r0
   11184:	push	{lr}		; (str lr, [sp, #-4]!)
   11188:	sub	sp, sp, #12
   1118c:	ldr	r0, [pc, #56]	; 111cc <error@@Base+0x114>
   11190:	ldr	r2, [pc, #56]	; 111d0 <error@@Base+0x118>
   11194:	add	r4, pc, r4
   11198:	ldr	ip, [r4, r0]
   1119c:	ldr	r0, [r4, r2]
   111a0:	str	r1, [sp]
   111a4:	ldr	r1, [pc, #40]	; 111d4 <error@@Base+0x11c>
   111a8:	ldr	r2, [ip]
   111ac:	ldr	r0, [r0]
   111b0:	add	r1, pc, r1
   111b4:	bl	10840 <fprintf@plt>
   111b8:	ldr	r3, [pc, #24]	; 111d8 <error@@Base+0x120>
   111bc:	ldr	r3, [r4, r3]
   111c0:	ldr	r0, [r3]
   111c4:	bl	10e38 <abort@plt+0x5a4>
   111c8:	andeq	r1, r1, r4, ror #28
   111cc:	andeq	r0, r0, r0, lsl #1
   111d0:	andeq	r0, r0, r8, ror r0
   111d4:	andeq	r1, r0, ip, lsr #14
   111d8:	muleq	r0, r8, r0
   111dc:	ldr	ip, [pc, #164]	; 11288 <error@@Base+0x1d0>
   111e0:	subs	r2, r0, #0
   111e4:	strd	r4, [sp, #-16]!
   111e8:	mov	r4, r1
   111ec:	str	r6, [sp, #8]
   111f0:	str	lr, [sp, #12]
   111f4:	add	ip, pc, ip
   111f8:	beq	11238 <error@@Base+0x180>
   111fc:	mov	r5, r2
   11200:	bl	107a4 <fopen@plt>
   11204:	cmp	r0, #0
   11208:	beq	1121c <error@@Base+0x164>
   1120c:	ldrd	r4, [sp]
   11210:	ldr	r6, [sp, #8]
   11214:	add	sp, sp, #12
   11218:	pop	{pc}		; (ldr pc, [sp], #4)
   1121c:	ldrb	r3, [r4]
   11220:	mov	r1, r5
   11224:	cmp	r3, #119	; 0x77
   11228:	beq	11260 <error@@Base+0x1a8>
   1122c:	ldr	r0, [pc, #88]	; 1128c <error@@Base+0x1d4>
   11230:	add	r0, pc, r0
   11234:	bl	1117c <error@@Base+0xc4>
   11238:	ldrb	r3, [r1]
   1123c:	cmp	r3, #114	; 0x72
   11240:	beq	1126c <error@@Base+0x1b4>
   11244:	ldr	r3, [pc, #68]	; 11290 <error@@Base+0x1d8>
   11248:	ldrd	r4, [sp]
   1124c:	ldr	r6, [sp, #8]
   11250:	add	sp, sp, #12
   11254:	ldr	r3, [ip, r3]
   11258:	ldr	r0, [r3]
   1125c:	pop	{pc}		; (ldr pc, [sp], #4)
   11260:	ldr	r0, [pc, #44]	; 11294 <error@@Base+0x1dc>
   11264:	add	r0, pc, r0
   11268:	bl	1117c <error@@Base+0xc4>
   1126c:	ldr	r3, [pc, #36]	; 11298 <error@@Base+0x1e0>
   11270:	ldrd	r4, [sp]
   11274:	ldr	r6, [sp, #8]
   11278:	add	sp, sp, #12
   1127c:	ldr	r3, [ip, r3]
   11280:	ldr	r0, [r3]
   11284:	pop	{pc}		; (ldr pc, [sp], #4)
   11288:	andeq	r1, r1, r4, lsl #28
   1128c:	ldrdeq	r1, [r0], -r4
   11290:	muleq	r0, r4, r0
   11294:	andeq	r1, r0, r8, lsl #13
   11298:	muleq	r0, r0, r0
   1129c:	strd	r4, [sp, #-36]!	; 0xffffffdc
   112a0:	strd	r6, [sp, #8]
   112a4:	mov	r6, r0
   112a8:	strd	r8, [sp, #16]
   112ac:	mov	r9, r1
   112b0:	mov	r8, r3
   112b4:	strd	sl, [sp, #24]
   112b8:	str	lr, [sp, #32]
   112bc:	sub	sp, sp, #20
   112c0:	ldr	r5, [pc, #600]	; 11520 <error@@Base+0x468>
   112c4:	str	r0, [sp]
   112c8:	ldr	r0, [r1]
   112cc:	str	r2, [sp, #12]
   112d0:	bl	10fc8 <abort@plt+0x734>
   112d4:	ldr	r3, [pc, #584]	; 11524 <error@@Base+0x46c>
   112d8:	add	r5, pc, r5
   112dc:	ldr	r4, [pc, #580]	; 11528 <error@@Base+0x470>
   112e0:	ldr	r3, [r5, r3]
   112e4:	add	r4, pc, r4
   112e8:	mov	r1, r4
   112ec:	str	r0, [r3]
   112f0:	mov	r0, #2
   112f4:	bl	10804 <__sysv_signal@plt>
   112f8:	mov	r1, r4
   112fc:	mov	r0, #15
   11300:	bl	10804 <__sysv_signal@plt>
   11304:	ldr	sl, [r6]
   11308:	cmp	sl, #1
   1130c:	beq	114e4 <error@@Base+0x42c>
   11310:	movle	r6, #0
   11314:	ble	1146c <error@@Base+0x3b4>
   11318:	ldr	r3, [pc, #524]	; 1152c <error@@Base+0x474>
   1131c:	mov	r7, #1
   11320:	mov	r6, #0
   11324:	mov	r4, r7
   11328:	add	r3, pc, r3
   1132c:	str	r3, [sp, #8]
   11330:	mov	r3, sl
   11334:	mov	sl, r9
   11338:	b	1135c <error@@Base+0x2a4>
   1133c:	add	r4, r4, #1
   11340:	add	r2, r6, #1
   11344:	str	r5, [sl, r6, lsl #2]
   11348:	sxth	r4, r4
   1134c:	sxth	r6, r2
   11350:	cmp	r4, r3
   11354:	mov	r7, r4
   11358:	bge	1146c <error@@Base+0x3b4>
   1135c:	ldr	r5, [sl, r4, lsl #2]
   11360:	lsl	r9, r4, #2
   11364:	ldrb	r2, [r5]
   11368:	cmp	r2, #45	; 0x2d
   1136c:	bne	1133c <error@@Base+0x284>
   11370:	ldrb	fp, [r5, #1]
   11374:	cmp	fp, #0
   11378:	beq	1133c <error@@Base+0x284>
   1137c:	mov	r0, r5
   11380:	str	r3, [sp, #4]
   11384:	bl	10834 <strlen@plt>
   11388:	mov	r2, r0
   1138c:	mov	r1, r5
   11390:	ldr	r0, [sp, #8]
   11394:	bl	10888 <strncmp@plt>
   11398:	cmp	r0, #0
   1139c:	beq	114f8 <error@@Base+0x440>
   113a0:	ldr	r3, [sp, #4]
   113a4:	add	r7, r7, #1
   113a8:	cmp	r7, r3
   113ac:	addlt	r9, sl, r9
   113b0:	movge	r0, #0
   113b4:	ldrlt	r0, [r9, #4]
   113b8:	cmp	r8, #0
   113bc:	beq	11400 <error@@Base+0x348>
   113c0:	ldrb	r2, [r8]
   113c4:	cmp	r2, #0
   113c8:	beq	11400 <error@@Base+0x348>
   113cc:	cmp	fp, r2
   113d0:	beq	11410 <error@@Base+0x358>
   113d4:	mov	r2, #0
   113d8:	b	113e4 <error@@Base+0x32c>
   113dc:	cmp	fp, ip
   113e0:	beq	11414 <error@@Base+0x35c>
   113e4:	add	r2, r2, #1
   113e8:	sxth	r2, r2
   113ec:	add	r1, r2, r2, lsl #1
   113f0:	ldrb	ip, [r8, r1, lsl #2]
   113f4:	add	r1, r8, r1, lsl #2
   113f8:	cmp	ip, #0
   113fc:	bne	113dc <error@@Base+0x324>
   11400:	ldr	r0, [pc, #296]	; 11530 <error@@Base+0x478>
   11404:	mov	r1, r5
   11408:	add	r0, pc, r0
   1140c:	bl	1117c <error@@Base+0xc4>
   11410:	mov	r1, r8
   11414:	ldr	r2, [r1, #4]
   11418:	cmp	r2, #0
   1141c:	beq	114a4 <error@@Base+0x3ec>
   11420:	ldrb	ip, [r5, #2]
   11424:	cmp	ip, #0
   11428:	bne	11490 <error@@Base+0x3d8>
   1142c:	cmp	r0, #0
   11430:	beq	11500 <error@@Base+0x448>
   11434:	ldr	r1, [r2]
   11438:	cmp	r1, #0
   1143c:	bne	11510 <error@@Base+0x458>
   11440:	str	r0, [r2]
   11444:	uxth	r2, r4
   11448:	ldrb	r1, [r5, #2]
   1144c:	add	r4, r2, #1
   11450:	sxth	r4, r4
   11454:	cmp	r1, #0
   11458:	addeq	r4, r2, #2
   1145c:	sxtheq	r4, r4
   11460:	cmp	r4, r3
   11464:	mov	r7, r4
   11468:	blt	1135c <error@@Base+0x2a4>
   1146c:	ldr	r3, [sp]
   11470:	str	r6, [r3]
   11474:	add	sp, sp, #20
   11478:	ldrd	r4, [sp]
   1147c:	ldrd	r6, [sp, #8]
   11480:	ldrd	r8, [sp, #16]
   11484:	ldrd	sl, [sp, #24]
   11488:	add	sp, sp, #32
   1148c:	pop	{pc}		; (ldr pc, [sp], #4)
   11490:	ldr	r1, [r2]
   11494:	cmp	r1, #0
   11498:	bne	11510 <error@@Base+0x458>
   1149c:	add	r0, r5, #2
   114a0:	b	11440 <error@@Base+0x388>
   114a4:	ldr	r3, [r1, #8]
   114a8:	cmp	r3, #0
   114ac:	beq	11400 <error@@Base+0x348>
   114b0:	ldrb	r2, [r5, #2]
   114b4:	cmp	r2, #0
   114b8:	bne	11400 <error@@Base+0x348>
   114bc:	ldrb	r2, [r3]
   114c0:	cmp	r2, #0
   114c4:	bne	11510 <error@@Base+0x458>
   114c8:	mov	r2, #1
   114cc:	add	r4, r4, #1
   114d0:	sxth	r4, r4
   114d4:	strb	r2, [r3]
   114d8:	ldr	r3, [sp]
   114dc:	ldr	r3, [r3]
   114e0:	b	11350 <error@@Base+0x298>
   114e4:	ldr	r3, [pc, #72]	; 11534 <error@@Base+0x47c>
   114e8:	ldr	r3, [r5, r3]
   114ec:	ldrb	r6, [r3]
   114f0:	cmp	r6, #0
   114f4:	beq	1146c <error@@Base+0x3b4>
   114f8:	ldr	r0, [sp, #12]
   114fc:	bl	1104c <abort@plt+0x7b8>
   11500:	ldr	r3, [r1, #8]
   11504:	cmp	r3, #0
   11508:	bne	114bc <error@@Base+0x404>
   1150c:	b	11400 <error@@Base+0x348>
   11510:	ldr	r0, [pc, #32]	; 11538 <error@@Base+0x480>
   11514:	mov	r1, r5
   11518:	add	r0, pc, r0
   1151c:	bl	1117c <error@@Base+0xc4>
   11520:	andeq	r1, r1, r0, lsr #26
   11524:	andeq	r0, r0, r0, lsl #1
   11528:			; <UNDEFINED> instruction: 0xfffffe58
   1152c:	strdeq	r1, [r0], -r0
   11530:	andeq	r1, r0, r8, lsl r5
   11534:	andeq	r0, r0, r0, ror r0
   11538:	andeq	r1, r0, r8, lsl r4
   1153c:	ldr	r2, [pc, #60]	; 11580 <error@@Base+0x4c8>
   11540:	mov	r3, r0
   11544:	push	{lr}		; (str lr, [sp, #-4]!)
   11548:	sub	sp, sp, #12
   1154c:	ldr	ip, [pc, #48]	; 11584 <error@@Base+0x4cc>
   11550:	ldr	r0, [pc, #48]	; 11588 <error@@Base+0x4d0>
   11554:	add	r2, pc, r2
   11558:	ldr	ip, [r2, ip]
   1155c:	ldr	r0, [r2, r0]
   11560:	str	r1, [sp]
   11564:	ldr	r1, [pc, #32]	; 1158c <error@@Base+0x4d4>
   11568:	ldr	r2, [ip]
   1156c:	ldr	r0, [r0]
   11570:	add	r1, pc, r1
   11574:	bl	10840 <fprintf@plt>
   11578:	add	sp, sp, #12
   1157c:	pop	{pc}		; (ldr pc, [sp], #4)
   11580:	andeq	r1, r1, r4, lsr #21
   11584:	andeq	r0, r0, r0, lsl #1
   11588:	andeq	r0, r0, r8, ror r0
   1158c:	andeq	r1, r0, ip, ror #6
   11590:	strd	r4, [sp, #-16]!
   11594:	mov	r2, r0
   11598:	mov	r5, r1
   1159c:	ldr	r4, [pc, #76]	; 115f0 <error@@Base+0x538>
   115a0:	mov	r1, #99	; 0x63
   115a4:	str	r6, [sp, #8]
   115a8:	str	lr, [sp, #12]
   115ac:	add	r4, pc, r4
   115b0:	mov	r0, r4
   115b4:	bl	107bc <fgets@plt>
   115b8:	cmp	r0, #0
   115bc:	beq	115e0 <error@@Base+0x528>
   115c0:	ldr	r1, [pc, #44]	; 115f4 <error@@Base+0x53c>
   115c4:	mov	r2, r5
   115c8:	mov	r0, r4
   115cc:	add	r1, pc, r1
   115d0:	bl	10858 <__isoc99_sscanf@plt>
   115d4:	sub	r0, r0, #1
   115d8:	clz	r0, r0
   115dc:	lsr	r0, r0, #5
   115e0:	ldrd	r4, [sp]
   115e4:	ldr	r6, [sp, #8]
   115e8:	add	sp, sp, #12
   115ec:	pop	{pc}		; (ldr pc, [sp], #4)
   115f0:	andeq	r1, r1, r4, lsl #22
   115f4:	andeq	r1, r0, ip, ror r3
   115f8:	strd	r4, [sp, #-16]!
   115fc:	mov	r5, r1
   11600:	mov	r1, #99	; 0x63
   11604:	ldr	r4, [pc, #84]	; 11660 <error@@Base+0x5a8>
   11608:	str	r6, [sp, #8]
   1160c:	mov	r6, r2
   11610:	mov	r2, r0
   11614:	str	lr, [sp, #12]
   11618:	add	r4, pc, r4
   1161c:	mov	r0, r4
   11620:	bl	107bc <fgets@plt>
   11624:	cmp	r0, #0
   11628:	beq	11650 <error@@Base+0x598>
   1162c:	ldr	r1, [pc, #48]	; 11664 <error@@Base+0x5ac>
   11630:	mov	r3, r6
   11634:	mov	r2, r5
   11638:	mov	r0, r4
   1163c:	add	r1, pc, r1
   11640:	bl	10858 <__isoc99_sscanf@plt>
   11644:	sub	r0, r0, #2
   11648:	clz	r0, r0
   1164c:	lsr	r0, r0, #5
   11650:	ldrd	r4, [sp]
   11654:	ldr	r6, [sp, #8]
   11658:	add	sp, sp, #12
   1165c:	pop	{pc}		; (ldr pc, [sp], #4)
   11660:	muleq	r1, r8, sl
   11664:	andeq	r1, r0, r8, lsl #6
   11668:	ldr	r0, [r0, #8]
   1166c:	ldr	r1, [r1, #8]
   11670:	b	10ec0 <abort@plt+0x62c>
   11674:	subs	ip, r1, #0
   11678:	mov	r3, r0
   1167c:	bne	11694 <error@@Base+0x5dc>
   11680:	ldr	r0, [pc, #72]	; 116d0 <error@@Base+0x618>
   11684:	mov	r2, #8
   11688:	mov	r1, #1
   1168c:	add	r0, pc, r0
   11690:	b	107ec <fwrite@plt>
   11694:	ldr	r3, [r2]
   11698:	vmov	s15, ip
   1169c:	vldr	d5, [pc, #36]	; 116c8 <error@@Base+0x610>
   116a0:	ldr	r1, [pc, #44]	; 116d4 <error@@Base+0x61c>
   116a4:	sub	r3, ip, r3
   116a8:	vmov	s14, r3
   116ac:	add	r1, pc, r1
   116b0:	vcvt.f64.s32	d6, s15
   116b4:	vcvt.f64.s32	d7, s14
   116b8:	vmul.f64	d7, d7, d5
   116bc:	vdiv.f64	d7, d7, d6
   116c0:	vmov	r2, r3, d7
   116c4:	b	10840 <fprintf@plt>
   116c8:	andeq	r0, r0, r0
   116cc:	subsmi	r0, r9, r0
   116d0:	andeq	r1, r0, r0, asr #5
   116d4:	andeq	r1, r0, ip, lsr #5
   116d8:	strd	r4, [sp, #-16]!
   116dc:	subs	r4, r1, #0
   116e0:	mov	r5, r0
   116e4:	str	r6, [sp, #8]
   116e8:	str	lr, [sp, #12]
   116ec:	beq	11738 <error@@Base+0x680>
   116f0:	ldr	r1, [pc, #92]	; 11754 <error@@Base+0x69c>
   116f4:	ldrd	r2, [r4]
   116f8:	add	r1, pc, r1
   116fc:	bl	10840 <fprintf@plt>
   11700:	mov	r2, r4
   11704:	mov	r0, r5
   11708:	ldr	r1, [r2], #4
   1170c:	bl	11674 <error@@Base+0x5bc>
   11710:	ldr	r0, [pc, #64]	; 11758 <error@@Base+0x6a0>
   11714:	mov	r3, r5
   11718:	mov	r2, #3
   1171c:	mov	r1, #1
   11720:	ldrd	r4, [sp]
   11724:	ldr	r6, [sp, #8]
   11728:	add	r0, pc, r0
   1172c:	ldr	lr, [sp, #12]
   11730:	add	sp, sp, #16
   11734:	b	107ec <fwrite@plt>
   11738:	mov	r3, r0
   1173c:	ldr	r0, [pc, #24]	; 1175c <error@@Base+0x6a4>
   11740:	mov	r2, #26
   11744:	mov	r1, #1
   11748:	add	r0, pc, r0
   1174c:	bl	107ec <fwrite@plt>
   11750:	b	11710 <error@@Base+0x658>
   11754:	andeq	r1, r0, r8, ror #4
   11758:	andeq	r1, r0, r0, ror #4
   1175c:	andeq	r1, r0, r4, lsr #4
   11760:	strd	r4, [sp, #-36]!	; 0xffffffdc
   11764:	mov	r5, r1
   11768:	ldr	r1, [pc, #340]	; 118c4 <error@@Base+0x80c>
   1176c:	strd	r6, [sp, #8]
   11770:	mov	r6, r0
   11774:	strd	r8, [sp, #16]
   11778:	mov	r9, r2
   1177c:	mov	r2, r3
   11780:	strd	sl, [sp, #24]
   11784:	str	lr, [sp, #32]
   11788:	sub	sp, sp, #4
   1178c:	ldrb	r8, [sp, #40]	; 0x28
   11790:	add	r1, pc, r1
   11794:	ldrb	sl, [sp, #44]	; 0x2c
   11798:	bl	10840 <fprintf@plt>
   1179c:	mov	r0, r6
   117a0:	mov	r1, #0
   117a4:	bl	116d8 <error@@Base+0x620>
   117a8:	cmp	r8, #0
   117ac:	bne	11854 <error@@Base+0x79c>
   117b0:	ldr	r2, [pc, #272]	; 118c8 <error@@Base+0x810>
   117b4:	add	r2, pc, r2
   117b8:	ldr	r1, [pc, #268]	; 118cc <error@@Base+0x814>
   117bc:	sub	fp, r9, #1
   117c0:	mov	r0, r6
   117c4:	uxth	fp, fp
   117c8:	mov	r4, #1
   117cc:	ldr	r7, [pc, #252]	; 118d0 <error@@Base+0x818>
   117d0:	add	fp, fp, #2
   117d4:	add	r1, pc, r1
   117d8:	bl	10840 <fprintf@plt>
   117dc:	add	r7, pc, r7
   117e0:	ldr	r3, [r5, r4, lsl #3]
   117e4:	mov	r0, r6
   117e8:	add	r1, r5, r4, lsl #3
   117ec:	cmp	r3, #0
   117f0:	ble	11808 <error@@Base+0x750>
   117f4:	bl	116d8 <error@@Base+0x620>
   117f8:	mov	r2, r4
   117fc:	mov	r1, r7
   11800:	mov	r0, r6
   11804:	bl	10840 <fprintf@plt>
   11808:	add	r4, r4, #1
   1180c:	cmp	fp, r4
   11810:	bne	117e0 <error@@Base+0x728>
   11814:	cmp	r8, #0
   11818:	beq	11830 <error@@Base+0x778>
   1181c:	add	r1, r9, #1
   11820:	ldr	r3, [r5, r1, lsl #3]
   11824:	add	r1, r5, r1, lsl #3
   11828:	cmp	r3, #0
   1182c:	bgt	11860 <error@@Base+0x7a8>
   11830:	cmp	sl, #0
   11834:	bne	11884 <error@@Base+0x7cc>
   11838:	add	sp, sp, #4
   1183c:	ldrd	r4, [sp]
   11840:	ldrd	r6, [sp, #8]
   11844:	ldrd	r8, [sp, #16]
   11848:	ldrd	sl, [sp, #24]
   1184c:	add	sp, sp, #32
   11850:	pop	{pc}		; (ldr pc, [sp], #4)
   11854:	ldr	r2, [pc, #120]	; 118d4 <error@@Base+0x81c>
   11858:	add	r2, pc, r2
   1185c:	b	117b8 <error@@Base+0x700>
   11860:	mov	r0, r6
   11864:	bl	116d8 <error@@Base+0x620>
   11868:	ldr	r1, [pc, #104]	; 118d8 <error@@Base+0x820>
   1186c:	mov	r2, r9
   11870:	mov	r0, r6
   11874:	add	r1, pc, r1
   11878:	bl	10840 <fprintf@plt>
   1187c:	cmp	sl, #0
   11880:	beq	11838 <error@@Base+0x780>
   11884:	mov	r1, r5
   11888:	mov	r0, r6
   1188c:	bl	116d8 <error@@Base+0x620>
   11890:	ldr	r0, [pc, #68]	; 118dc <error@@Base+0x824>
   11894:	mov	r3, r6
   11898:	mov	r2, #7
   1189c:	mov	r1, #1
   118a0:	add	r0, pc, r0
   118a4:	add	sp, sp, #4
   118a8:	ldrd	r4, [sp]
   118ac:	ldrd	r6, [sp, #8]
   118b0:	ldrd	r8, [sp, #16]
   118b4:	ldrd	sl, [sp, #24]
   118b8:	ldr	lr, [sp, #32]
   118bc:	add	sp, sp, #36	; 0x24
   118c0:	b	107ec <fwrite@plt>
   118c4:	andeq	r1, r0, ip, lsl #4
   118c8:	andeq	r1, r0, r0, ror #3
   118cc:	ldrdeq	r1, [r0], -r8
   118d0:	andeq	r1, r0, r8, asr #3
   118d4:	andeq	r1, r0, r4, lsr r1
   118d8:	andeq	r1, r0, ip, lsr r1
   118dc:	andeq	r1, r0, ip, lsl r1
   118e0:	strd	r4, [sp, #-24]!	; 0xffffffe8
   118e4:	add	r5, r1, #4096	; 0x1000
   118e8:	mov	r4, r2
   118ec:	strd	r6, [sp, #8]
   118f0:	mov	r6, r0
   118f4:	mov	r0, r1
   118f8:	str	r8, [sp, #16]
   118fc:	str	lr, [sp, #20]
   11900:	bl	12614 <error@@Base+0x155c>
   11904:	ldr	r2, [pc, #160]	; 119ac <error@@Base+0x8f4>
   11908:	ldr	r1, [r5, #3952]	; 0xf70
   1190c:	ldr	r0, [r5, #3956]	; 0xf74
   11910:	add	r2, pc, r2
   11914:	bl	12400 <error@@Base+0x1348>
   11918:	ldr	r1, [pc, #144]	; 119b0 <error@@Base+0x8f8>
   1191c:	mov	r2, r4
   11920:	mov	r0, r6
   11924:	add	r1, pc, r1
   11928:	bl	10840 <fprintf@plt>
   1192c:	mov	r0, r6
   11930:	mov	r1, #0
   11934:	bl	116d8 <error@@Base+0x620>
   11938:	mov	r1, r6
   1193c:	mov	r0, #10
   11940:	bl	10870 <fputc@plt>
   11944:	ldr	r3, [r5, #3956]	; 0xf74
   11948:	cmp	r3, #0
   1194c:	ble	11998 <error@@Base+0x8e0>
   11950:	ldr	r7, [pc, #92]	; 119b4 <error@@Base+0x8fc>
   11954:	mov	r4, #0
   11958:	add	r7, pc, r7
   1195c:	ldr	r3, [r5, #3952]	; 0xf70
   11960:	mov	r0, r6
   11964:	ldr	r1, [r3, r4, lsl #2]
   11968:	add	r1, r1, #12
   1196c:	bl	116d8 <error@@Base+0x620>
   11970:	ldr	r3, [r5, #3952]	; 0xf70
   11974:	mov	r1, r7
   11978:	mov	r0, r6
   1197c:	ldr	r3, [r3, r4, lsl #2]
   11980:	add	r4, r4, #1
   11984:	ldr	r2, [r3, #8]
   11988:	bl	10840 <fprintf@plt>
   1198c:	ldr	r3, [r5, #3956]	; 0xf74
   11990:	cmp	r3, r4
   11994:	bgt	1195c <error@@Base+0x8a4>
   11998:	ldrd	r4, [sp]
   1199c:	ldrd	r6, [sp, #8]
   119a0:	ldr	r8, [sp, #16]
   119a4:	add	sp, sp, #20
   119a8:	pop	{pc}		; (ldr pc, [sp], #4)
   119ac:			; <UNDEFINED> instruction: 0xfffffd50
   119b0:	andeq	r1, r0, r8, ror r0
   119b4:	andeq	r0, r0, r4, asr pc
   119b8:	ldr	ip, [r0]
   119bc:	ldr	r3, [r0, #4]
   119c0:	add	r1, ip, r1
   119c4:	add	r2, r3, r2
   119c8:	stm	r0, {r1, r2}
   119cc:	bx	lr
   119d0:	strd	r4, [sp, #-32]!	; 0xffffffe0
   119d4:	mov	r2, r0
   119d8:	mov	r5, r0
   119dc:	ldr	r4, [pc, #244]	; 11ad8 <error@@Base+0xa20>
   119e0:	strd	r6, [sp, #8]
   119e4:	mov	r6, r1
   119e8:	mov	r1, #99	; 0x63
   119ec:	strd	r8, [sp, #16]
   119f0:	str	sl, [sp, #24]
   119f4:	str	lr, [sp, #28]
   119f8:	sub	sp, sp, #8
   119fc:	add	r4, pc, r4
   11a00:	mov	r0, r4
   11a04:	bl	107bc <fgets@plt>
   11a08:	cmp	r0, #0
   11a0c:	beq	11ab4 <error@@Base+0x9fc>
   11a10:	mov	r0, r4
   11a14:	mov	r2, r5
   11a18:	mov	r1, #99	; 0x63
   11a1c:	bl	107bc <fgets@plt>
   11a20:	cmp	r0, #0
   11a24:	beq	11ab4 <error@@Base+0x9fc>
   11a28:	ldr	r4, [pc, #172]	; 11adc <error@@Base+0xa24>
   11a2c:	mov	sl, #0
   11a30:	add	r8, sp, #4
   11a34:	mov	r7, sp
   11a38:	ldr	r9, [pc, #160]	; 11ae0 <error@@Base+0xa28>
   11a3c:	add	r4, pc, r4
   11a40:	add	r4, r4, #29
   11a44:	add	r9, pc, r9
   11a48:	b	11a60 <error@@Base+0x9a8>
   11a4c:	ldr	r1, [sp]
   11a50:	add	r3, r6, r3, lsl #3
   11a54:	mov	r0, r3
   11a58:	ldr	r2, [sp, #4]
   11a5c:	bl	119b8 <error@@Base+0x900>
   11a60:	mov	r2, r8
   11a64:	mov	r1, r7
   11a68:	mov	r0, r5
   11a6c:	bl	115f8 <error@@Base+0x540>
   11a70:	mov	r1, #0
   11a74:	mov	r2, #10
   11a78:	cmp	r0, r1
   11a7c:	mov	r0, r4
   11a80:	beq	11ab8 <error@@Base+0xa00>
   11a84:	bl	1078c <strtol@plt>
   11a88:	subs	r3, r0, #0
   11a8c:	mov	r1, r9
   11a90:	mov	r0, r4
   11a94:	bne	11a4c <error@@Base+0x994>
   11a98:	bl	10780 <strcmp@plt>
   11a9c:	ldr	r1, [sp]
   11aa0:	cmp	r0, #0
   11aa4:	mov	r3, r6
   11aa8:	addne	r3, r6, #88	; 0x58
   11aac:	moveq	sl, r1
   11ab0:	b	11a54 <error@@Base+0x99c>
   11ab4:	mov	sl, #0
   11ab8:	mov	r0, sl
   11abc:	add	sp, sp, #8
   11ac0:	ldrd	r4, [sp]
   11ac4:	ldrd	r6, [sp, #8]
   11ac8:	ldrd	r8, [sp, #16]
   11acc:	ldr	sl, [sp, #24]
   11ad0:	add	sp, sp, #28
   11ad4:	pop	{pc}		; (ldr pc, [sp], #4)
   11ad8:			; <UNDEFINED> instruction: 0x000116b4
   11adc:	andeq	r1, r1, r4, ror r6
   11ae0:	andeq	r0, r0, r8, ror pc
   11ae4:	strd	r4, [sp, #-24]!	; 0xffffffe8
   11ae8:	mov	r5, r2
   11aec:	strd	r6, [sp, #8]
   11af0:	mov	r6, r3
   11af4:	mov	r7, r0
   11af8:	str	r8, [sp, #16]
   11afc:	mov	r8, r1
   11b00:	str	lr, [sp, #20]
   11b04:	bl	12480 <error@@Base+0x13c8>
   11b08:	subs	r4, r0, #0
   11b0c:	beq	11b34 <error@@Base+0xa7c>
   11b10:	mov	r2, r6
   11b14:	mov	r1, r5
   11b18:	ldrd	r6, [sp, #8]
   11b1c:	add	r0, r4, #12
   11b20:	ldrd	r4, [sp]
   11b24:	ldr	r8, [sp, #16]
   11b28:	ldr	lr, [sp, #20]
   11b2c:	add	sp, sp, #24
   11b30:	b	119b8 <error@@Base+0x900>
   11b34:	mov	r1, #20
   11b38:	mov	r0, #1
   11b3c:	bl	11114 <error@@Base+0x5c>
   11b40:	mov	r4, r0
   11b44:	mov	r0, r8
   11b48:	bl	107c8 <strdup@plt>
   11b4c:	mov	r1, r4
   11b50:	str	r0, [r4, #8]
   11b54:	mov	r0, r7
   11b58:	bl	1250c <error@@Base+0x1454>
   11b5c:	b	11b10 <error@@Base+0xa58>
   11b60:	strd	r4, [sp, #-32]!	; 0xffffffe0
   11b64:	mov	r2, r0
   11b68:	mov	r5, r0
   11b6c:	ldr	r4, [pc, #180]	; 11c28 <error@@Base+0xb70>
   11b70:	strd	r6, [sp, #8]
   11b74:	mov	r6, r1
   11b78:	mov	r1, #99	; 0x63
   11b7c:	strd	r8, [sp, #16]
   11b80:	str	sl, [sp, #24]
   11b84:	str	lr, [sp, #28]
   11b88:	sub	sp, sp, #8
   11b8c:	add	r4, pc, r4
   11b90:	mov	r0, r4
   11b94:	bl	107bc <fgets@plt>
   11b98:	cmp	r0, #0
   11b9c:	beq	11c0c <error@@Base+0xb54>
   11ba0:	mov	r0, r4
   11ba4:	mov	r2, r5
   11ba8:	mov	r1, #99	; 0x63
   11bac:	bl	107bc <fgets@plt>
   11bb0:	cmp	r0, #0
   11bb4:	beq	11c0c <error@@Base+0xb54>
   11bb8:	ldr	r4, [pc, #108]	; 11c2c <error@@Base+0xb74>
   11bbc:	add	r8, sp, #4
   11bc0:	mov	r7, sp
   11bc4:	mov	sl, #0
   11bc8:	add	r4, pc, r4
   11bcc:	add	r9, r4, #29
   11bd0:	b	11bf0 <error@@Base+0xb38>
   11bd4:	bl	10834 <strlen@plt>
   11bd8:	add	ip, r4, r0
   11bdc:	mov	r1, r9
   11be0:	ldrd	r2, [sp]
   11be4:	mov	r0, r6
   11be8:	strb	sl, [ip, #-1]
   11bec:	bl	11ae4 <error@@Base+0xa2c>
   11bf0:	mov	r2, r8
   11bf4:	mov	r1, r7
   11bf8:	mov	r0, r5
   11bfc:	bl	115f8 <error@@Base+0x540>
   11c00:	cmp	r0, #0
   11c04:	mov	r0, r4
   11c08:	bne	11bd4 <error@@Base+0xb1c>
   11c0c:	add	sp, sp, #8
   11c10:	ldrd	r4, [sp]
   11c14:	ldrd	r6, [sp, #8]
   11c18:	ldrd	r8, [sp, #16]
   11c1c:	ldr	sl, [sp, #24]
   11c20:	add	sp, sp, #28
   11c24:	pop	{pc}		; (ldr pc, [sp], #4)
   11c28:	andeq	r1, r1, r4, lsr #10
   11c2c:	andeq	r1, r1, r8, ror #9
   11c30:	strd	r4, [sp, #-20]!	; 0xffffffec
   11c34:	strd	r6, [sp, #8]
   11c38:	mov	r7, r1
   11c3c:	mov	r6, r0
   11c40:	mov	r0, r1
   11c44:	ldr	r1, [pc, #404]	; 11de0 <error@@Base+0xd28>
   11c48:	str	lr, [sp, #16]
   11c4c:	sub	sp, sp, #12
   11c50:	ldr	r5, [pc, #396]	; 11de4 <error@@Base+0xd2c>
   11c54:	add	r1, pc, r1
   11c58:	bl	111dc <error@@Base+0x124>
   11c5c:	add	r5, pc, r5
   11c60:	mov	r2, r0
   11c64:	mov	r4, r0
   11c68:	mov	r1, #99	; 0x63
   11c6c:	mov	r0, r5
   11c70:	bl	107bc <fgets@plt>
   11c74:	cmp	r0, #0
   11c78:	beq	11dbc <error@@Base+0xd04>
   11c7c:	ldr	r1, [pc, #356]	; 11de8 <error@@Base+0xd30>
   11c80:	mov	r2, #45	; 0x2d
   11c84:	mov	r0, r5
   11c88:	add	r1, pc, r1
   11c8c:	bl	10888 <strncmp@plt>
   11c90:	cmp	r0, #0
   11c94:	bne	11dbc <error@@Base+0xd04>
   11c98:	mov	r2, r4
   11c9c:	mov	r1, #99	; 0x63
   11ca0:	mov	r0, r5
   11ca4:	bl	107bc <fgets@plt>
   11ca8:	cmp	r0, #0
   11cac:	beq	11dbc <error@@Base+0xd04>
   11cb0:	ldr	r1, [pc, #308]	; 11dec <error@@Base+0xd34>
   11cb4:	mov	r0, r5
   11cb8:	add	r1, pc, r1
   11cbc:	bl	10780 <strcmp@plt>
   11cc0:	cmp	r0, #0
   11cc4:	bne	11dbc <error@@Base+0xd04>
   11cc8:	mov	r1, sp
   11ccc:	mov	r0, r4
   11cd0:	bl	11590 <error@@Base+0x4d8>
   11cd4:	cmp	r0, #0
   11cd8:	beq	11dbc <error@@Base+0xd04>
   11cdc:	add	r1, sp, #4
   11ce0:	mov	r0, r4
   11ce4:	bl	11590 <error@@Base+0x4d8>
   11ce8:	cmp	r0, #0
   11cec:	beq	11dbc <error@@Base+0xd04>
   11cf0:	mov	r2, r4
   11cf4:	mov	r1, #99	; 0x63
   11cf8:	mov	r0, r5
   11cfc:	bl	107bc <fgets@plt>
   11d00:	cmp	r0, #0
   11d04:	beq	11dbc <error@@Base+0xd04>
   11d08:	mov	r0, r5
   11d0c:	mov	r2, r4
   11d10:	mov	r1, #99	; 0x63
   11d14:	bl	107bc <fgets@plt>
   11d18:	cmp	r0, #0
   11d1c:	beq	11dbc <error@@Base+0xd04>
   11d20:	mov	r0, r6
   11d24:	ldm	sp, {r1, r2}
   11d28:	bl	119b8 <error@@Base+0x900>
   11d2c:	add	r1, r6, #8
   11d30:	mov	r0, r4
   11d34:	bl	119d0 <error@@Base+0x918>
   11d38:	mov	r7, r0
   11d3c:	add	r1, r6, #416	; 0x1a0
   11d40:	mov	r0, r4
   11d44:	bl	119d0 <error@@Base+0x918>
   11d48:	mov	r5, r0
   11d4c:	add	r1, r6, #824	; 0x338
   11d50:	mov	r0, r4
   11d54:	bl	119d0 <error@@Base+0x918>
   11d58:	ldr	r3, [sp]
   11d5c:	cmp	r3, #0
   11d60:	bgt	11d80 <error@@Base+0xcc8>
   11d64:	mov	r0, r4
   11d68:	bl	10f18 <abort@plt+0x684>
   11d6c:	add	sp, sp, #12
   11d70:	ldrd	r4, [sp]
   11d74:	ldrd	r6, [sp, #8]
   11d78:	add	sp, sp, #16
   11d7c:	pop	{pc}		; (ldr pc, [sp], #4)
   11d80:	add	r1, r6, #920	; 0x398
   11d84:	mov	r0, r4
   11d88:	bl	119d0 <error@@Base+0x918>
   11d8c:	cmp	r7, #0
   11d90:	ble	11da0 <error@@Base+0xce8>
   11d94:	add	r1, r6, #992	; 0x3e0
   11d98:	mov	r0, r4
   11d9c:	bl	11b60 <error@@Base+0xaa8>
   11da0:	cmp	r5, #0
   11da4:	ble	11d64 <error@@Base+0xcac>
   11da8:	add	r1, r6, #9024	; 0x2340
   11dac:	mov	r0, r4
   11db0:	add	r1, r1, #24
   11db4:	bl	11b60 <error@@Base+0xaa8>
   11db8:	b	11d64 <error@@Base+0xcac>
   11dbc:	cmp	r7, #0
   11dc0:	beq	11dd4 <error@@Base+0xd1c>
   11dc4:	ldr	r0, [pc, #36]	; 11df0 <error@@Base+0xd38>
   11dc8:	mov	r1, r7
   11dcc:	add	r0, pc, r0
   11dd0:	bl	1117c <error@@Base+0xc4>
   11dd4:	ldr	r7, [pc, #24]	; 11df4 <error@@Base+0xd3c>
   11dd8:	add	r7, pc, r7
   11ddc:	b	11dc4 <error@@Base+0xd0c>
   11de0:	andeq	r0, r0, r8, ror sp
   11de4:	andeq	r1, r1, r4, asr r4
   11de8:	andeq	r0, r0, r8, asr #26
   11dec:	andeq	r0, r0, r8, asr #26
   11df0:	andeq	r0, r0, r4, ror #24
   11df4:	andeq	r0, r0, ip, ror #23
   11df8:	mov	r3, r1
   11dfc:	ldr	r1, [pc, #404]	; 11f98 <error@@Base+0xee0>
   11e00:	strd	r4, [sp, #-28]!	; 0xffffffe4
   11e04:	mov	r5, r0
   11e08:	mov	r0, r3
   11e0c:	strd	r6, [sp, #8]
   11e10:	mov	r7, r5
   11e14:	mov	r6, #1
   11e18:	strd	r8, [sp, #16]
   11e1c:	mov	r8, r5
   11e20:	mov	r9, #0
   11e24:	str	lr, [sp, #24]
   11e28:	sub	sp, sp, #12
   11e2c:	add	r1, pc, r1
   11e30:	bl	111dc <error@@Base+0x124>
   11e34:	ldr	r3, [pc, #352]	; 11f9c <error@@Base+0xee4>
   11e38:	mov	r4, r0
   11e3c:	ldr	r2, [pc, #348]	; 11fa0 <error@@Base+0xee8>
   11e40:	ldr	r1, [pc, #348]	; 11fa4 <error@@Base+0xeec>
   11e44:	add	r3, pc, r3
   11e48:	add	r2, pc, r2
   11e4c:	add	r1, pc, r1
   11e50:	bl	10840 <fprintf@plt>
   11e54:	ldr	r1, [pc, #332]	; 11fa8 <error@@Base+0xef0>
   11e58:	mov	r0, r4
   11e5c:	ldr	r2, [r5]
   11e60:	add	r1, pc, r1
   11e64:	bl	10840 <fprintf@plt>
   11e68:	ldr	r1, [pc, #316]	; 11fac <error@@Base+0xef4>
   11e6c:	mov	r0, r4
   11e70:	ldr	r2, [r8, #4]!
   11e74:	add	r1, pc, r1
   11e78:	bl	10840 <fprintf@plt>
   11e7c:	mov	r2, r8
   11e80:	mov	r0, r4
   11e84:	ldr	r1, [r7], #8
   11e88:	bl	11674 <error@@Base+0x5bc>
   11e8c:	ldr	r8, [pc, #284]	; 11fb0 <error@@Base+0xef8>
   11e90:	mov	r3, r4
   11e94:	mov	r2, #12
   11e98:	mov	r1, r6
   11e9c:	ldr	r0, [pc, #272]	; 11fb4 <error@@Base+0xefc>
   11ea0:	add	r8, pc, r8
   11ea4:	add	r0, pc, r0
   11ea8:	bl	107ec <fwrite@plt>
   11eac:	mov	r1, r7
   11eb0:	mov	r0, r4
   11eb4:	str	r9, [sp]
   11eb8:	mov	r3, r8
   11ebc:	mov	r2, #50	; 0x32
   11ec0:	str	r6, [sp, #4]
   11ec4:	bl	11760 <error@@Base+0x6a8>
   11ec8:	ldr	r3, [pc, #232]	; 11fb8 <error@@Base+0xf00>
   11ecc:	add	r1, r5, #416	; 0x1a0
   11ed0:	mov	r0, r4
   11ed4:	mov	r2, #50	; 0x32
   11ed8:	str	r9, [sp]
   11edc:	str	r6, [sp, #4]
   11ee0:	add	r3, pc, r3
   11ee4:	bl	11760 <error@@Base+0x6a8>
   11ee8:	ldr	r3, [pc, #204]	; 11fbc <error@@Base+0xf04>
   11eec:	add	r1, r5, #824	; 0x338
   11ef0:	mov	r0, r4
   11ef4:	mov	r2, #10
   11ef8:	str	r6, [sp]
   11efc:	str	r6, [sp, #4]
   11f00:	add	r3, pc, r3
   11f04:	bl	11760 <error@@Base+0x6a8>
   11f08:	ldr	r3, [r5]
   11f0c:	cmp	r3, r9
   11f10:	bgt	11f34 <error@@Base+0xe7c>
   11f14:	mov	r0, r4
   11f18:	add	sp, sp, #12
   11f1c:	ldrd	r4, [sp]
   11f20:	ldrd	r6, [sp, #8]
   11f24:	ldrd	r8, [sp, #16]
   11f28:	ldr	lr, [sp, #24]
   11f2c:	add	sp, sp, #28
   11f30:	b	10f18 <abort@plt+0x684>
   11f34:	ldr	r3, [pc, #132]	; 11fc0 <error@@Base+0xf08>
   11f38:	mov	r2, #8
   11f3c:	add	r1, r5, #920	; 0x398
   11f40:	mov	r0, r4
   11f44:	str	r9, [sp]
   11f48:	str	r9, [sp, #4]
   11f4c:	add	r3, pc, r3
   11f50:	bl	11760 <error@@Base+0x6a8>
   11f54:	ldr	r3, [r5, #8]
   11f58:	cmp	r3, r9
   11f5c:	ble	11f70 <error@@Base+0xeb8>
   11f60:	mov	r2, r8
   11f64:	add	r1, r5, #992	; 0x3e0
   11f68:	mov	r0, r4
   11f6c:	bl	118e0 <error@@Base+0x828>
   11f70:	ldr	r3, [r5, #416]	; 0x1a0
   11f74:	cmp	r3, #0
   11f78:	ble	11f14 <error@@Base+0xe5c>
   11f7c:	ldr	r2, [pc, #64]	; 11fc4 <error@@Base+0xf0c>
   11f80:	add	r1, r5, #9024	; 0x2340
   11f84:	mov	r0, r4
   11f88:	add	r1, r1, #24
   11f8c:	add	r2, pc, r2
   11f90:	bl	118e0 <error@@Base+0x828>
   11f94:	b	11f14 <error@@Base+0xe5c>
   11f98:	andeq	r0, r0, r8, lsl ip
   11f9c:			; <UNDEFINED> instruction: 0x00000bbc
   11fa0:	andeq	r0, r0, r8, lsl #23
   11fa4:	strdeq	r0, [r0], -ip
   11fa8:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   11fac:	andeq	r0, r0, ip, ror #23
   11fb0:	andeq	r0, r0, r8, ror #23
   11fb4:	ldrdeq	r0, [r0], -r4
   11fb8:			; <UNDEFINED> instruction: 0x00000bb4
   11fbc:	andeq	r0, r0, r4, lsr #23
   11fc0:	andeq	r0, r0, r0, ror fp
   11fc4:	andeq	r0, r0, r8, lsl #22
   11fc8:	mov	r3, #0
   11fcc:	str	r3, [r0]
   11fd0:	str	r3, [r0, #4]
   11fd4:	str	r3, [r0, #8]
   11fd8:	str	r3, [r0, #12]
   11fdc:	bx	lr
   11fe0:	ldr	r3, [r0]
   11fe4:	mov	r2, #0
   11fe8:	str	r4, [sp, #-8]!
   11fec:	mov	r4, r0
   11ff0:	str	lr, [sp, #4]
   11ff4:	cmp	r3, r2
   11ff8:	strd	r2, [r1]
   11ffc:	str	r1, [r0]
   12000:	streq	r1, [r0, #4]
   12004:	ldr	r0, [r0, #8]
   12008:	strne	r1, [r3]
   1200c:	cmp	r0, #0
   12010:	beq	12020 <error@@Base+0xf68>
   12014:	bl	107b0 <free@plt>
   12018:	mov	r3, #0
   1201c:	str	r3, [r4, #8]
   12020:	ldr	r3, [r4, #12]
   12024:	add	r3, r3, #1
   12028:	str	r3, [r4, #12]
   1202c:	ldr	r4, [sp]
   12030:	add	sp, sp, #4
   12034:	pop	{pc}		; (ldr pc, [sp], #4)
   12038:	ldr	r3, [r0, #4]
   1203c:	mov	r2, #0
   12040:	str	r4, [sp, #-8]!
   12044:	mov	r4, r0
   12048:	str	lr, [sp, #4]
   1204c:	cmp	r3, r2
   12050:	str	r3, [r1]
   12054:	str	r2, [r1, #4]
   12058:	streq	r1, [r0]
   1205c:	ldr	r0, [r0, #8]
   12060:	strne	r1, [r3, #4]
   12064:	str	r1, [r4, #4]
   12068:	cmp	r0, #0
   1206c:	beq	1207c <error@@Base+0xfc4>
   12070:	bl	107b0 <free@plt>
   12074:	mov	r3, #0
   12078:	str	r3, [r4, #8]
   1207c:	ldr	r3, [r4, #12]
   12080:	add	r3, r3, #1
   12084:	str	r3, [r4, #12]
   12088:	ldr	r4, [sp]
   1208c:	add	sp, sp, #4
   12090:	pop	{pc}		; (ldr pc, [sp], #4)
   12094:	ldr	r3, [r2]
   12098:	str	r4, [sp, #-8]!
   1209c:	mov	r4, r0
   120a0:	str	lr, [sp, #4]
   120a4:	cmp	r3, #0
   120a8:	str	r3, [r1]
   120ac:	str	r2, [r1, #4]
   120b0:	streq	r1, [r0]
   120b4:	ldr	r0, [r0, #8]
   120b8:	strne	r1, [r3, #4]
   120bc:	str	r1, [r2]
   120c0:	cmp	r0, #0
   120c4:	beq	120d4 <error@@Base+0x101c>
   120c8:	bl	107b0 <free@plt>
   120cc:	mov	r3, #0
   120d0:	str	r3, [r4, #8]
   120d4:	ldr	r3, [r4, #12]
   120d8:	add	r3, r3, #1
   120dc:	str	r3, [r4, #12]
   120e0:	ldr	r4, [sp]
   120e4:	add	sp, sp, #4
   120e8:	pop	{pc}		; (ldr pc, [sp], #4)
   120ec:	ldr	r3, [r1, #4]
   120f0:	str	r4, [sp, #-8]!
   120f4:	mov	r4, r0
   120f8:	str	lr, [sp, #4]
   120fc:	cmp	r3, #0
   12100:	stm	r2, {r1, r3}
   12104:	str	r2, [r1, #4]
   12108:	streq	r2, [r0, #4]
   1210c:	ldr	r0, [r0, #8]
   12110:	strne	r2, [r3]
   12114:	cmp	r0, #0
   12118:	beq	12128 <error@@Base+0x1070>
   1211c:	bl	107b0 <free@plt>
   12120:	mov	r3, #0
   12124:	str	r3, [r4, #8]
   12128:	ldr	r3, [r4, #12]
   1212c:	add	r3, r3, #1
   12130:	str	r3, [r4, #12]
   12134:	ldr	r4, [sp]
   12138:	add	sp, sp, #4
   1213c:	pop	{pc}		; (ldr pc, [sp], #4)
   12140:	ldrd	r2, [r1]
   12144:	strd	r4, [sp, #-16]!
   12148:	mov	r4, r0
   1214c:	mov	r5, #0
   12150:	str	r6, [sp, #8]
   12154:	str	lr, [sp, #12]
   12158:	cmp	r2, #0
   1215c:	strne	r3, [r2, #4]
   12160:	ldrne	r3, [r1, #4]
   12164:	streq	r3, [r0]
   12168:	cmp	r3, #0
   1216c:	streq	r2, [r0, #4]
   12170:	ldr	r0, [r0, #8]
   12174:	strne	r2, [r3]
   12178:	str	r5, [r1]
   1217c:	str	r5, [r1, #4]
   12180:	cmp	r0, r5
   12184:	beq	12190 <error@@Base+0x10d8>
   12188:	bl	107b0 <free@plt>
   1218c:	str	r5, [r4, #8]
   12190:	ldr	r3, [r4, #12]
   12194:	ldr	r6, [sp, #8]
   12198:	sub	r3, r3, #1
   1219c:	str	r3, [r4, #12]
   121a0:	ldrd	r4, [sp]
   121a4:	add	sp, sp, #12
   121a8:	pop	{pc}		; (ldr pc, [sp], #4)
   121ac:	ldr	r3, [r0, #8]
   121b0:	cmp	r3, #0
   121b4:	bxne	lr
   121b8:	ldr	r3, [r0, #12]
   121bc:	cmp	r3, #0
   121c0:	bxeq	lr
   121c4:	mov	r1, #4
   121c8:	str	r4, [sp, #-8]!
   121cc:	mov	r4, r0
   121d0:	mov	r0, r3
   121d4:	str	lr, [sp, #4]
   121d8:	bl	11114 <error@@Base+0x5c>
   121dc:	ldr	r3, [r4]
   121e0:	str	r0, [r4, #8]
   121e4:	cmp	r3, #0
   121e8:	beq	12200 <error@@Base+0x1148>
   121ec:	sub	r0, r0, #4
   121f0:	str	r3, [r0, #4]!
   121f4:	ldr	r3, [r3, #4]
   121f8:	cmp	r3, #0
   121fc:	bne	121f0 <error@@Base+0x1138>
   12200:	ldr	r4, [sp]
   12204:	add	sp, sp, #4
   12208:	pop	{pc}		; (ldr pc, [sp], #4)
   1220c:	strd	r4, [sp, #-16]!
   12210:	ldr	r4, [r0]
   12214:	str	r6, [sp, #8]
   12218:	str	lr, [sp, #12]
   1221c:	cmp	r4, #0
   12220:	beq	1224c <error@@Base+0x1194>
   12224:	mov	r5, r0
   12228:	mov	r6, r1
   1222c:	mov	r1, r4
   12230:	mov	r0, r5
   12234:	bl	12140 <error@@Base+0x1088>
   12238:	mov	r0, r4
   1223c:	blx	r6
   12240:	ldr	r4, [r5]
   12244:	cmp	r4, #0
   12248:	bne	1222c <error@@Base+0x1174>
   1224c:	ldrd	r4, [sp]
   12250:	ldr	r6, [sp, #8]
   12254:	add	sp, sp, #12
   12258:	pop	{pc}		; (ldr pc, [sp], #4)
   1225c:	ldr	r3, [pc, #400]	; 123f4 <error@@Base+0x133c>
   12260:	strd	r4, [sp, #-36]!	; 0xffffffdc
   12264:	strd	r6, [sp, #8]
   12268:	ldr	r6, [pc, #392]	; 123f8 <error@@Base+0x1340>
   1226c:	strd	r8, [sp, #16]
   12270:	add	r3, pc, r3
   12274:	strd	sl, [sp, #24]
   12278:	str	lr, [sp, #32]
   1227c:	sub	sp, sp, #20
   12280:	add	r6, pc, r6
   12284:	str	r0, [sp]
   12288:	str	r3, [sp, #8]
   1228c:	lsl	r3, r1, #2
   12290:	str	r1, [sp, #4]
   12294:	str	r3, [sp, #12]
   12298:	ldr	r3, [sp]
   1229c:	ldr	r2, [sp, #4]
   122a0:	cmp	r3, r2
   122a4:	ldr	r2, [sp, #8]
   122a8:	ldr	r1, [r2]
   122ac:	ldr	r4, [r1, r3, lsl #2]
   122b0:	bge	123e4 <error@@Base+0x132c>
   122b4:	ldr	r5, [pc, #320]	; 123fc <error@@Base+0x1344>
   122b8:	ldm	sp, {r8, fp}
   122bc:	add	r5, pc, r5
   122c0:	mov	r0, r4
   122c4:	ldr	r1, [r1, fp, lsl #2]
   122c8:	lsl	r9, fp, #2
   122cc:	ldr	r3, [r5, #4]
   122d0:	blx	r3
   122d4:	cmp	r0, #0
   122d8:	bge	1236c <error@@Base+0x12b4>
   122dc:	sub	fp, fp, #1
   122e0:	ldr	r1, [r5]
   122e4:	cmp	r8, fp
   122e8:	lslge	r9, fp, #2
   122ec:	blt	122c0 <error@@Base+0x1208>
   122f0:	cmp	fp, r8
   122f4:	add	r7, r1, r9
   122f8:	beq	1237c <error@@Base+0x12c4>
   122fc:	ldr	r3, [r1, r9]
   12300:	add	sl, r8, #1
   12304:	lsl	r7, r8, #2
   12308:	cmp	fp, sl
   1230c:	str	r3, [r1, r8, lsl #2]
   12310:	bgt	12328 <error@@Base+0x1270>
   12314:	b	123c4 <error@@Base+0x130c>
   12318:	add	sl, sl, #1
   1231c:	ldr	r1, [r6]
   12320:	cmp	fp, sl
   12324:	beq	12374 <error@@Base+0x12bc>
   12328:	mov	r0, r4
   1232c:	ldr	r1, [r1, sl, lsl #2]
   12330:	lsl	r7, sl, #2
   12334:	ldr	r3, [r6, #4]
   12338:	blx	r3
   1233c:	cmp	r0, #0
   12340:	bgt	12318 <error@@Base+0x1260>
   12344:	ldr	r1, [r6]
   12348:	mov	r8, sl
   1234c:	add	r7, r1, r7
   12350:	ldr	r3, [r7]
   12354:	sub	fp, fp, #1
   12358:	cmp	fp, sl
   1235c:	str	r3, [r1, r9]
   12360:	bgt	122c0 <error@@Base+0x1208>
   12364:	add	r7, r1, fp, lsl #2
   12368:	b	12380 <error@@Base+0x12c8>
   1236c:	ldr	r1, [r5]
   12370:	b	122f0 <error@@Base+0x1238>
   12374:	add	r7, r1, r9
   12378:	mov	r8, fp
   1237c:	mov	fp, r8
   12380:	ldr	r3, [sp]
   12384:	sub	r1, fp, #1
   12388:	str	r4, [r7]
   1238c:	cmp	r3, r1
   12390:	blt	123d8 <error@@Base+0x1320>
   12394:	ldr	r2, [sp, #4]
   12398:	add	r3, r8, #1
   1239c:	str	r3, [sp]
   123a0:	cmp	r3, r2
   123a4:	blt	12298 <error@@Base+0x11e0>
   123a8:	add	sp, sp, #20
   123ac:	ldrd	r4, [sp]
   123b0:	ldrd	r6, [sp, #8]
   123b4:	ldrd	r8, [sp, #16]
   123b8:	ldrd	sl, [sp, #24]
   123bc:	add	sp, sp, #32
   123c0:	pop	{pc}		; (ldr pc, [sp], #4)
   123c4:	add	r7, r7, #4
   123c8:	add	r7, r1, r7
   123cc:	beq	12378 <error@@Base+0x12c0>
   123d0:	mov	r8, sl
   123d4:	b	12350 <error@@Base+0x1298>
   123d8:	mov	r0, r3
   123dc:	bl	1225c <error@@Base+0x11a4>
   123e0:	b	12394 <error@@Base+0x12dc>
   123e4:	ldm	sp, {r8, fp}
   123e8:	ldr	r3, [sp, #12]
   123ec:	add	r7, r1, r3
   123f0:	b	12380 <error@@Base+0x12c8>
   123f4:	andeq	r0, r1, r4, lsr #29
   123f8:	muleq	r1, r4, lr
   123fc:	andeq	r0, r1, r8, asr lr
   12400:	cmp	r0, #1
   12404:	mov	ip, r1
   12408:	ble	12428 <error@@Base+0x1370>
   1240c:	ldr	r3, [pc, #24]	; 1242c <error@@Base+0x1374>
   12410:	sub	r1, r0, #1
   12414:	mov	r0, #0
   12418:	add	r3, pc, r3
   1241c:	str	ip, [r3]
   12420:	str	r2, [r3, #4]
   12424:	b	1225c <error@@Base+0x11a4>
   12428:	bx	lr
   1242c:	strdeq	r0, [r1], -ip
   12430:	strd	r4, [sp, #-16]!
   12434:	add	r5, r0, #8000	; 0x1f40
   12438:	mov	r4, r0
   1243c:	add	r5, r5, #48	; 0x30
   12440:	str	r6, [sp, #8]
   12444:	mov	r6, r0
   12448:	str	lr, [sp, #12]
   1244c:	mov	r0, r4
   12450:	add	r4, r4, #16
   12454:	bl	11fc8 <error@@Base+0xf10>
   12458:	cmp	r4, r5
   1245c:	bne	1244c <error@@Base+0x1394>
   12460:	add	r6, r6, #4096	; 0x1000
   12464:	mov	r3, #0
   12468:	ldrd	r4, [sp]
   1246c:	str	r3, [r6, #3952]	; 0xf70
   12470:	str	r3, [r6, #3956]	; 0xf74
   12474:	ldr	r6, [sp, #8]
   12478:	add	sp, sp, #12
   1247c:	pop	{pc}		; (ldr pc, [sp], #4)
   12480:	strd	r4, [sp, #-16]!
   12484:	mov	r5, r1
   12488:	str	r6, [sp, #8]
   1248c:	str	lr, [sp, #12]
   12490:	ldrb	r3, [r1]
   12494:	cmp	r3, #0
   12498:	beq	124c8 <error@@Base+0x1410>
   1249c:	mov	r2, #0
   124a0:	add	r2, r2, r3
   124a4:	ldrb	r3, [r1, #1]!
   124a8:	cmp	r3, #0
   124ac:	bne	124a0 <error@@Base+0x13e8>
   124b0:	movw	r3, #20065	; 0x4e61
   124b4:	movt	r3, #33354	; 0x824a
   124b8:	movw	r1, #503	; 0x1f7
   124bc:	umull	ip, r3, r3, r2
   124c0:	lsr	r3, r3, #8
   124c4:	mls	r3, r1, r3, r2
   124c8:	ldr	r4, [r0, r3, lsl #4]
   124cc:	cmp	r4, #0
   124d0:	bne	124e4 <error@@Base+0x142c>
   124d4:	b	124f8 <error@@Base+0x1440>
   124d8:	ldr	r4, [r4, #4]
   124dc:	cmp	r4, #0
   124e0:	beq	124f8 <error@@Base+0x1440>
   124e4:	mov	r0, r5
   124e8:	ldr	r1, [r4, #8]
   124ec:	bl	10780 <strcmp@plt>
   124f0:	cmp	r0, #0
   124f4:	bne	124d8 <error@@Base+0x1420>
   124f8:	mov	r0, r4
   124fc:	ldrd	r4, [sp]
   12500:	ldr	r6, [sp, #8]
   12504:	add	sp, sp, #12
   12508:	pop	{pc}		; (ldr pc, [sp], #4)
   1250c:	ldr	r2, [r1, #8]
   12510:	str	r4, [sp, #-8]!
   12514:	mov	r4, r0
   12518:	str	lr, [sp, #4]
   1251c:	ldrb	r3, [r2]
   12520:	cmp	r3, #0
   12524:	beq	12558 <error@@Base+0x14a0>
   12528:	mov	r0, #0
   1252c:	add	r0, r0, r3
   12530:	ldrb	r3, [r2, #1]!
   12534:	cmp	r3, #0
   12538:	bne	1252c <error@@Base+0x1474>
   1253c:	movw	r3, #20065	; 0x4e61
   12540:	movt	r3, #33354	; 0x824a
   12544:	movw	r2, #503	; 0x1f7
   12548:	umull	ip, r3, r3, r0
   1254c:	lsr	r3, r3, #8
   12550:	mls	r0, r2, r3, r0
   12554:	add	r0, r4, r0, lsl #4
   12558:	add	r4, r4, #4096	; 0x1000
   1255c:	bl	11fe0 <error@@Base+0xf28>
   12560:	ldr	r0, [r4, #3952]	; 0xf70
   12564:	cmp	r0, #0
   12568:	beq	12578 <error@@Base+0x14c0>
   1256c:	bl	107b0 <free@plt>
   12570:	mov	r3, #0
   12574:	str	r3, [r4, #3952]	; 0xf70
   12578:	ldr	r3, [r4, #3956]	; 0xf74
   1257c:	add	r3, r3, #1
   12580:	str	r3, [r4, #3956]	; 0xf74
   12584:	ldr	r4, [sp]
   12588:	add	sp, sp, #4
   1258c:	pop	{pc}		; (ldr pc, [sp], #4)
   12590:	ldr	r2, [r1, #8]
   12594:	str	r4, [sp, #-8]!
   12598:	mov	r4, r0
   1259c:	str	lr, [sp, #4]
   125a0:	ldrb	r3, [r2]
   125a4:	cmp	r3, #0
   125a8:	beq	125dc <error@@Base+0x1524>
   125ac:	mov	r0, #0
   125b0:	add	r0, r0, r3
   125b4:	ldrb	r3, [r2, #1]!
   125b8:	cmp	r3, #0
   125bc:	bne	125b0 <error@@Base+0x14f8>
   125c0:	movw	r3, #20065	; 0x4e61
   125c4:	movt	r3, #33354	; 0x824a
   125c8:	movw	r2, #503	; 0x1f7
   125cc:	umull	ip, r3, r3, r0
   125d0:	lsr	r3, r3, #8
   125d4:	mls	r0, r2, r3, r0
   125d8:	add	r0, r4, r0, lsl #4
   125dc:	add	r4, r4, #4096	; 0x1000
   125e0:	bl	12140 <error@@Base+0x1088>
   125e4:	ldr	r0, [r4, #3952]	; 0xf70
   125e8:	cmp	r0, #0
   125ec:	beq	125fc <error@@Base+0x1544>
   125f0:	bl	107b0 <free@plt>
   125f4:	mov	r3, #0
   125f8:	str	r3, [r4, #3952]	; 0xf70
   125fc:	ldr	r3, [r4, #3956]	; 0xf74
   12600:	sub	r3, r3, #1
   12604:	str	r3, [r4, #3956]	; 0xf74
   12608:	ldr	r4, [sp]
   1260c:	add	sp, sp, #4
   12610:	pop	{pc}		; (ldr pc, [sp], #4)
   12614:	strd	r4, [sp, #-16]!
   12618:	str	r6, [sp, #8]
   1261c:	add	r6, r0, #4096	; 0x1000
   12620:	ldr	r4, [r6, #3952]	; 0xf70
   12624:	str	lr, [sp, #12]
   12628:	cmp	r4, #0
   1262c:	beq	12640 <error@@Base+0x1588>
   12630:	ldrd	r4, [sp]
   12634:	ldr	r6, [sp, #8]
   12638:	add	sp, sp, #12
   1263c:	pop	{pc}		; (ldr pc, [sp], #4)
   12640:	ldr	r3, [r6, #3956]	; 0xf74
   12644:	cmp	r3, #0
   12648:	beq	12630 <error@@Base+0x1578>
   1264c:	mov	r5, r0
   12650:	mov	r1, #4
   12654:	mov	r0, r3
   12658:	bl	11114 <error@@Base+0x5c>
   1265c:	mov	r2, r4
   12660:	mov	ip, r4
   12664:	str	r0, [r6, #3952]	; 0xf70
   12668:	movw	lr, #503	; 0x1f7
   1266c:	ldr	r3, [r5, ip, lsl #4]
   12670:	cmp	r3, #0
   12674:	beq	12690 <error@@Base+0x15d8>
   12678:	add	r1, r0, r2, lsl #2
   1267c:	str	r3, [r1], #4
   12680:	add	r2, r2, #1
   12684:	ldr	r3, [r3, #4]
   12688:	cmp	r3, #0
   1268c:	bne	1267c <error@@Base+0x15c4>
   12690:	add	ip, ip, #1
   12694:	cmp	ip, lr
   12698:	bne	1266c <error@@Base+0x15b4>
   1269c:	ldrd	r4, [sp]
   126a0:	ldr	r6, [sp, #8]
   126a4:	add	sp, sp, #12
   126a8:	pop	{pc}		; (ldr pc, [sp], #4)
   126ac:	strd	r4, [sp, #-24]!	; 0xffffffe8
   126b0:	add	r5, r0, #8000	; 0x1f40
   126b4:	mov	r4, r0
   126b8:	add	r5, r5, #48	; 0x30
   126bc:	strd	r6, [sp, #8]
   126c0:	mov	r7, r0
   126c4:	mov	r6, r1
   126c8:	str	r8, [sp, #16]
   126cc:	str	lr, [sp, #20]
   126d0:	mov	r0, r4
   126d4:	mov	r1, r6
   126d8:	add	r4, r4, #16
   126dc:	bl	1220c <error@@Base+0x1154>
   126e0:	cmp	r4, r5
   126e4:	bne	126d0 <error@@Base+0x1618>
   126e8:	add	r7, r7, #4096	; 0x1000
   126ec:	ldr	r0, [r7, #3952]	; 0xf70
   126f0:	cmp	r0, #0
   126f4:	beq	12704 <error@@Base+0x164c>
   126f8:	bl	107b0 <free@plt>
   126fc:	mov	r3, #0
   12700:	str	r3, [r7, #3952]	; 0xf70
   12704:	mov	r3, #0
   12708:	ldrd	r4, [sp]
   1270c:	ldr	r8, [sp, #16]
   12710:	str	r3, [r7, #3956]	; 0xf74
   12714:	ldrd	r6, [sp, #8]
   12718:	add	sp, sp, #20
   1271c:	pop	{pc}		; (ldr pc, [sp], #4)
   12720:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12724:	mov	r7, r0
   12728:	ldr	r6, [pc, #72]	; 12778 <error@@Base+0x16c0>
   1272c:	ldr	r5, [pc, #72]	; 1277c <error@@Base+0x16c4>
   12730:	add	r6, pc, r6
   12734:	add	r5, pc, r5
   12738:	sub	r6, r6, r5
   1273c:	mov	r8, r1
   12740:	mov	r9, r2
   12744:	bl	10754 <calloc@plt-0x20>
   12748:	asrs	r6, r6, #2
   1274c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   12750:	mov	r4, #0
   12754:	add	r4, r4, #1
   12758:	ldr	r3, [r5], #4
   1275c:	mov	r2, r9
   12760:	mov	r1, r8
   12764:	mov	r0, r7
   12768:	blx	r3
   1276c:	cmp	r6, r4
   12770:	bne	12754 <error@@Base+0x169c>
   12774:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12778:	andeq	r0, r1, ip, asr #15
   1277c:	andeq	r0, r1, r4, asr #15
   12780:	bx	lr

Disassembly of section .fini:

00012784 <.fini>:
   12784:	push	{r3, lr}
   12788:	pop	{r3, pc}
