
../repos/vis/vis-digraph:     file format elf32-littlearm


Disassembly of section .init:

000105c4 <.init>:
   105c4:	push	{r3, lr}
   105c8:	bl	106f8 <tcgetattr@plt+0x48>
   105cc:	pop	{r3, pc}

Disassembly of section .plt:

000105d0 <calloc@plt-0x14>:
   105d0:	push	{lr}		; (str lr, [sp, #-4]!)
   105d4:	ldr	lr, [pc, #4]	; 105e0 <calloc@plt-0x4>
   105d8:	add	lr, pc, lr
   105dc:	ldr	pc, [lr, #8]!
   105e0:	andeq	r5, r2, r4, asr #19

000105e4 <calloc@plt>:
   105e4:	add	ip, pc, #0, 12
   105e8:	add	ip, ip, #151552	; 0x25000
   105ec:	ldr	pc, [ip, #2500]!	; 0x9c4

000105f0 <strcmp@plt>:
   105f0:	add	ip, pc, #0, 12
   105f4:	add	ip, ip, #151552	; 0x25000
   105f8:	ldr	pc, [ip, #2492]!	; 0x9bc

000105fc <read@plt>:
   105fc:	add	ip, pc, #0, 12
   10600:	add	ip, ip, #151552	; 0x25000
   10604:	ldr	pc, [ip, #2484]!	; 0x9b4

00010608 <__stack_chk_fail@plt>:
   10608:	add	ip, pc, #0, 12
   1060c:	add	ip, ip, #151552	; 0x25000
   10610:	ldr	pc, [ip, #2476]!	; 0x9ac

00010614 <perror@plt>:
   10614:	add	ip, pc, #0, 12
   10618:	add	ip, ip, #151552	; 0x25000
   1061c:	ldr	pc, [ip, #2468]!	; 0x9a4

00010620 <putwchar@plt>:
   10620:	add	ip, pc, #0, 12
   10624:	add	ip, ip, #151552	; 0x25000
   10628:	ldr	pc, [ip, #2460]!	; 0x99c

0001062c <fwrite@plt>:
   1062c:	add	ip, pc, #0, 12
   10630:	add	ip, ip, #151552	; 0x25000
   10634:	ldr	pc, [ip, #2452]!	; 0x994

00010638 <tcsetattr@plt>:
   10638:	add	ip, pc, #0, 12
   1063c:	add	ip, ip, #151552	; 0x25000
   10640:	ldr	pc, [ip, #2444]!	; 0x98c

00010644 <__libc_start_main@plt>:
   10644:	add	ip, pc, #0, 12
   10648:	add	ip, ip, #151552	; 0x25000
   1064c:	ldr	pc, [ip, #2436]!	; 0x984

00010650 <__gmon_start__@plt>:
   10650:	add	ip, pc, #0, 12
   10654:	add	ip, ip, #151552	; 0x25000
   10658:	ldr	pc, [ip, #2428]!	; 0x97c

0001065c <strlen@plt>:
   1065c:	add	ip, pc, #0, 12
   10660:	add	ip, ip, #151552	; 0x25000
   10664:	ldr	pc, [ip, #2420]!	; 0x974

00010668 <__errno_location@plt>:
   10668:	add	ip, pc, #0, 12
   1066c:	add	ip, ip, #151552	; 0x25000
   10670:	ldr	pc, [ip, #2412]!	; 0x96c

00010674 <__fprintf_chk@plt>:
   10674:	add	ip, pc, #0, 12
   10678:	add	ip, ip, #151552	; 0x25000
   1067c:	ldr	pc, [ip, #2404]!	; 0x964

00010680 <setlocale@plt>:
   10680:	add	ip, pc, #0, 12
   10684:	add	ip, ip, #151552	; 0x25000
   10688:	ldr	pc, [ip, #2396]!	; 0x95c

0001068c <__wprintf_chk@plt>:
   1068c:	add	ip, pc, #0, 12
   10690:	add	ip, ip, #151552	; 0x25000
   10694:	ldr	pc, [ip, #2388]!	; 0x954

00010698 <strncmp@plt>:
   10698:	add	ip, pc, #0, 12
   1069c:	add	ip, ip, #151552	; 0x25000
   106a0:	ldr	pc, [ip, #2380]!	; 0x94c

000106a4 <abort@plt>:
   106a4:	add	ip, pc, #0, 12
   106a8:	add	ip, ip, #151552	; 0x25000
   106ac:	ldr	pc, [ip, #2372]!	; 0x944

000106b0 <tcgetattr@plt>:
   106b0:	add	ip, pc, #0, 12
   106b4:	add	ip, ip, #151552	; 0x25000
   106b8:	ldr	pc, [ip, #2364]!	; 0x93c

Disassembly of section .text:

000106bc <.text>:
   106bc:	mov	fp, #0
   106c0:	mov	lr, #0
   106c4:	pop	{r1}		; (ldr r1, [sp], #4)
   106c8:	mov	r2, sp
   106cc:	push	{r2}		; (str r2, [sp, #-4]!)
   106d0:	push	{r0}		; (str r0, [sp, #-4]!)
   106d4:	ldr	ip, [pc, #16]	; 106ec <tcgetattr@plt+0x3c>
   106d8:	push	{ip}		; (str ip, [sp, #-4]!)
   106dc:	ldr	r0, [pc, #12]	; 106f0 <tcgetattr@plt+0x40>
   106e0:	ldr	r3, [pc, #12]	; 106f4 <tcgetattr@plt+0x44>
   106e4:	bl	10644 <__libc_start_main@plt>
   106e8:	bl	106a4 <abort@plt>
   106ec:	andeq	r0, r1, r8, asr ip
   106f0:			; <UNDEFINED> instruction: 0x000108b4
   106f4:	strdeq	r0, [r1], -r8
   106f8:	ldr	r3, [pc, #20]	; 10714 <tcgetattr@plt+0x64>
   106fc:	ldr	r2, [pc, #20]	; 10718 <tcgetattr@plt+0x68>
   10700:	add	r3, pc, r3
   10704:	ldr	r2, [r3, r2]
   10708:	cmp	r2, #0
   1070c:	bxeq	lr
   10710:	b	10650 <__gmon_start__@plt>
   10714:	muleq	r2, ip, r8
   10718:	andeq	r0, r0, r4, asr r0
   1071c:	ldr	r0, [pc, #24]	; 1073c <tcgetattr@plt+0x8c>
   10720:	ldr	r3, [pc, #24]	; 10740 <tcgetattr@plt+0x90>
   10724:	cmp	r3, r0
   10728:	bxeq	lr
   1072c:	ldr	r3, [pc, #16]	; 10744 <tcgetattr@plt+0x94>
   10730:	cmp	r3, #0
   10734:	bxeq	lr
   10738:	bx	r3
   1073c:	andeq	r6, r3, r0
   10740:	andeq	r6, r3, r0
   10744:	andeq	r0, r0, r0
   10748:	ldr	r0, [pc, #36]	; 10774 <tcgetattr@plt+0xc4>
   1074c:	ldr	r1, [pc, #36]	; 10778 <tcgetattr@plt+0xc8>
   10750:	sub	r1, r1, r0
   10754:	asr	r1, r1, #2
   10758:	add	r1, r1, r1, lsr #31
   1075c:	asrs	r1, r1, #1
   10760:	bxeq	lr
   10764:	ldr	r3, [pc, #16]	; 1077c <tcgetattr@plt+0xcc>
   10768:	cmp	r3, #0
   1076c:	bxeq	lr
   10770:	bx	r3
   10774:	andeq	r6, r3, r0
   10778:	andeq	r6, r3, r0
   1077c:	andeq	r0, r0, r0
   10780:	push	{r4, lr}
   10784:	ldr	r4, [pc, #24]	; 107a4 <tcgetattr@plt+0xf4>
   10788:	ldrb	r3, [r4]
   1078c:	cmp	r3, #0
   10790:	popne	{r4, pc}
   10794:	bl	1071c <tcgetattr@plt+0x6c>
   10798:	mov	r3, #1
   1079c:	strb	r3, [r4]
   107a0:	pop	{r4, pc}
   107a4:	andeq	r6, r3, r4
   107a8:	b	10748 <tcgetattr@plt+0x98>
   107ac:	str	r4, [sp, #-8]!
   107b0:	str	lr, [sp, #4]
   107b4:	sub	sp, sp, #8
   107b8:	movw	r4, #24224	; 0x5ea0
   107bc:	movt	r4, #3
   107c0:	ldr	r3, [r4]
   107c4:	str	r3, [sp, #4]
   107c8:	movw	r2, #24644	; 0x6044
   107cc:	movt	r2, #3
   107d0:	mov	r1, #0
   107d4:	mov	r0, r1
   107d8:	bl	10638 <tcsetattr@plt>
   107dc:	ldr	r2, [sp, #4]
   107e0:	ldr	r3, [r4]
   107e4:	cmp	r2, r3
   107e8:	bne	107fc <tcgetattr@plt+0x14c>
   107ec:	add	sp, sp, #8
   107f0:	ldr	r4, [sp]
   107f4:	add	sp, sp, #4
   107f8:	pop	{pc}		; (ldr pc, [sp], #4)
   107fc:	bl	10608 <__stack_chk_fail@plt>
   10800:	strd	r4, [sp, #-24]!	; 0xffffffe8
   10804:	strd	r6, [sp, #8]
   10808:	str	r8, [sp, #16]
   1080c:	str	lr, [sp, #20]
   10810:	sub	sp, sp, #8
   10814:	mov	r6, r0
   10818:	mov	r8, r1
   1081c:	movw	r3, #24224	; 0x5ea0
   10820:	movt	r3, #3
   10824:	ldr	r3, [r3]
   10828:	str	r3, [sp, #4]
   1082c:	bl	1065c <strlen@plt>
   10830:	mov	r5, r0
   10834:	movw	r4, #3172	; 0xc64
   10838:	movt	r4, #1
   1083c:	mov	r2, r5
   10840:	mov	r1, r4
   10844:	mov	r0, r6
   10848:	bl	10698 <strncmp@plt>
   1084c:	cmp	r0, #0
   10850:	beq	10868 <tcgetattr@plt+0x1b8>
   10854:	ldrb	r3, [r4, #16]!
   10858:	cmp	r3, #0
   1085c:	bne	1083c <tcgetattr@plt+0x18c>
   10860:	mov	r0, #0
   10864:	b	10880 <tcgetattr@plt+0x1d0>
   10868:	ldr	r3, [r4, #8]
   1086c:	str	r3, [r8]
   10870:	ldrb	r3, [r4, r5]
   10874:	cmp	r3, #0
   10878:	moveq	r0, #1
   1087c:	mvnne	r0, #0
   10880:	movw	r3, #24224	; 0x5ea0
   10884:	movt	r3, #3
   10888:	ldr	r2, [sp, #4]
   1088c:	ldr	r3, [r3]
   10890:	cmp	r2, r3
   10894:	bne	108b0 <tcgetattr@plt+0x200>
   10898:	add	sp, sp, #8
   1089c:	ldrd	r4, [sp]
   108a0:	ldrd	r6, [sp, #8]
   108a4:	ldr	r8, [sp, #16]
   108a8:	add	sp, sp, #20
   108ac:	pop	{pc}		; (ldr pc, [sp], #4)
   108b0:	bl	10608 <__stack_chk_fail@plt>
   108b4:	strd	r4, [sp, #-32]!	; 0xffffffe0
   108b8:	strd	r6, [sp, #8]
   108bc:	strd	r8, [sp, #16]
   108c0:	str	sl, [sp, #24]
   108c4:	str	lr, [sp, #28]
   108c8:	sub	sp, sp, #24
   108cc:	mov	r8, r0
   108d0:	mov	r4, r1
   108d4:	movw	r3, #24224	; 0x5ea0
   108d8:	movt	r3, #3
   108dc:	ldr	r3, [r3]
   108e0:	str	r3, [sp, #20]
   108e4:	movw	r1, #19604	; 0x4c94
   108e8:	movt	r1, #2
   108ec:	mov	r0, #6
   108f0:	bl	10680 <setlocale@plt>
   108f4:	cmp	r8, #1
   108f8:	beq	109d0 <tcgetattr@plt+0x320>
   108fc:	movw	r1, #33492	; 0x82d4
   10900:	movt	r1, #1
   10904:	ldr	r0, [r4, #4]
   10908:	bl	105f0 <strcmp@plt>
   1090c:	subs	r5, r0, #0
   10910:	bne	10b20 <tcgetattr@plt+0x470>
   10914:	movw	r4, #24644	; 0x6044
   10918:	movt	r4, #3
   1091c:	mov	r1, r4
   10920:	bl	106b0 <tcgetattr@plt>
   10924:	movw	r2, #24584	; 0x6008
   10928:	movt	r2, #3
   1092c:	ldr	r3, [r4]
   10930:	ldr	r1, [r4, #4]
   10934:	str	r1, [r2, #4]
   10938:	ldrd	r0, [r4, #8]
   1093c:	strd	r0, [r2, #8]
   10940:	ldrd	r0, [r4, #16]
   10944:	strd	r0, [r2, #16]
   10948:	ldrd	r0, [r4, #24]
   1094c:	strd	r0, [r2, #24]
   10950:	ldrd	r0, [r4, #32]
   10954:	strd	r0, [r2, #32]
   10958:	ldrd	r0, [r4, #40]	; 0x28
   1095c:	strd	r0, [r2, #40]	; 0x28
   10960:	ldrd	r0, [r4, #48]	; 0x30
   10964:	strd	r0, [r2, #48]	; 0x30
   10968:	ldr	r1, [r4, #56]	; 0x38
   1096c:	str	r1, [r2, #56]	; 0x38
   10970:	bic	r3, r3, #1504	; 0x5e0
   10974:	bic	r3, r3, #10
   10978:	str	r3, [r2]
   1097c:	ldr	r3, [r2, #12]
   10980:	bic	r3, r3, #32768	; 0x8000
   10984:	bic	r3, r3, #75	; 0x4b
   10988:	str	r3, [r2, #12]
   1098c:	ldr	r3, [r2, #8]
   10990:	bic	r3, r3, #304	; 0x130
   10994:	orr	r3, r3, #48	; 0x30
   10998:	str	r3, [r2, #8]
   1099c:	mov	r3, #1
   109a0:	strb	r3, [r2, #23]
   109a4:	mov	r1, #0
   109a8:	mov	r0, r1
   109ac:	bl	10638 <tcsetattr@plt>
   109b0:	mov	r3, #0
   109b4:	str	r3, [sp, #12]
   109b8:	str	r3, [sp, #16]
   109bc:	add	r4, sp, #12
   109c0:	add	r9, sp, #19
   109c4:	mov	r8, #1
   109c8:	mov	r7, r3
   109cc:	b	10a48 <tcgetattr@plt+0x398>
   109d0:	movw	r4, #3172	; 0xc64
   109d4:	movt	r4, #1
   109d8:	movw	r5, #33532	; 0x82fc
   109dc:	movt	r5, #1
   109e0:	mov	r6, #1
   109e4:	ldr	r3, [r4, #12]
   109e8:	str	r3, [sp]
   109ec:	ldr	r3, [r4, #8]
   109f0:	mov	r2, r4
   109f4:	mov	r1, r5
   109f8:	mov	r0, r6
   109fc:	bl	1068c <__wprintf_chk@plt>
   10a00:	ldrb	r3, [r4, #16]!
   10a04:	cmp	r3, #0
   10a08:	bne	109e4 <tcgetattr@plt+0x334>
   10a0c:	mov	r5, #0
   10a10:	b	10ae8 <tcgetattr@plt+0x438>
   10a14:	add	r1, sp, #8
   10a18:	add	r0, sp, #12
   10a1c:	bl	10800 <tcgetattr@plt+0x150>
   10a20:	cmp	r0, #0
   10a24:	beq	10aa4 <tcgetattr@plt+0x3f4>
   10a28:	cmp	r6, #0
   10a2c:	cmneq	r0, #1
   10a30:	beq	10aa4 <tcgetattr@plt+0x3f4>
   10a34:	cmp	r0, #1
   10a38:	beq	10ad0 <tcgetattr@plt+0x420>
   10a3c:	add	r4, r4, #1
   10a40:	cmp	r4, r9
   10a44:	beq	10ae0 <tcgetattr@plt+0x430>
   10a48:	mov	sl, r4
   10a4c:	mov	r2, r8
   10a50:	mov	r1, sl
   10a54:	mov	r0, r7
   10a58:	bl	105fc <read@plt>
   10a5c:	mov	r6, r0
   10a60:	cmn	r0, #1
   10a64:	bne	10a14 <tcgetattr@plt+0x364>
   10a68:	bl	10668 <__errno_location@plt>
   10a6c:	ldr	r3, [r0]
   10a70:	cmp	r3, #4
   10a74:	beq	10a4c <tcgetattr@plt+0x39c>
   10a78:	bl	107ac <tcgetattr@plt+0xfc>
   10a7c:	movw	r3, #24576	; 0x6000
   10a80:	movt	r3, #3
   10a84:	ldr	r3, [r3]
   10a88:	mov	r2, #9
   10a8c:	mov	r1, #1
   10a90:	movw	r0, #33496	; 0x82d8
   10a94:	movt	r0, #1
   10a98:	bl	1062c <fwrite@plt>
   10a9c:	mov	r5, #3
   10aa0:	b	10ae8 <tcgetattr@plt+0x438>
   10aa4:	bl	107ac <tcgetattr@plt+0xfc>
   10aa8:	movw	r0, #24576	; 0x6000
   10aac:	movt	r0, #3
   10ab0:	add	r3, sp, #12
   10ab4:	movw	r2, #33508	; 0x82e4
   10ab8:	movt	r2, #1
   10abc:	mov	r1, #1
   10ac0:	ldr	r0, [r0]
   10ac4:	bl	10674 <__fprintf_chk@plt>
   10ac8:	mov	r5, #1
   10acc:	b	10ae8 <tcgetattr@plt+0x438>
   10ad0:	bl	107ac <tcgetattr@plt+0xfc>
   10ad4:	ldr	r0, [sp, #8]
   10ad8:	bl	10620 <putwchar@plt>
   10adc:	b	10ae8 <tcgetattr@plt+0x438>
   10ae0:	bl	107ac <tcgetattr@plt+0xfc>
   10ae4:	mov	r5, #1
   10ae8:	mov	r0, r5
   10aec:	movw	r3, #24224	; 0x5ea0
   10af0:	movt	r3, #3
   10af4:	ldr	r2, [sp, #20]
   10af8:	ldr	r3, [r3]
   10afc:	cmp	r2, r3
   10b00:	bne	10bf4 <tcgetattr@plt+0x544>
   10b04:	add	sp, sp, #24
   10b08:	ldrd	r4, [sp]
   10b0c:	ldrd	r6, [sp, #8]
   10b10:	ldrd	r8, [sp, #16]
   10b14:	ldr	sl, [sp, #24]
   10b18:	add	sp, sp, #28
   10b1c:	pop	{pc}		; (ldr pc, [sp], #4)
   10b20:	sub	sl, r8, #1
   10b24:	mov	r1, #4
   10b28:	mov	r0, sl
   10b2c:	bl	105e4 <calloc@plt>
   10b30:	subs	r9, r0, #0
   10b34:	beq	10bac <tcgetattr@plt+0x4fc>
   10b38:	cmp	r8, #1
   10b3c:	addgt	r4, r4, #4
   10b40:	movgt	r5, r9
   10b44:	movgt	r6, #1
   10b48:	ble	10b80 <tcgetattr@plt+0x4d0>
   10b4c:	mov	r7, r4
   10b50:	add	r4, r4, #4
   10b54:	mov	r1, r5
   10b58:	ldr	r0, [r7]
   10b5c:	bl	10800 <tcgetattr@plt+0x150>
   10b60:	cmp	r0, #0
   10b64:	beq	10bbc <tcgetattr@plt+0x50c>
   10b68:	cmn	r0, #1
   10b6c:	beq	10be4 <tcgetattr@plt+0x534>
   10b70:	add	r6, r6, #1
   10b74:	add	r5, r5, #4
   10b78:	cmp	r8, r6
   10b7c:	bne	10b4c <tcgetattr@plt+0x49c>
   10b80:	cmp	sl, #0
   10b84:	ble	10bec <tcgetattr@plt+0x53c>
   10b88:	sub	r4, r9, #4
   10b8c:	add	r8, r9, r8, lsl #2
   10b90:	sub	r8, r8, #8
   10b94:	ldr	r0, [r4, #4]!
   10b98:	bl	10620 <putwchar@plt>
   10b9c:	cmp	r4, r8
   10ba0:	bne	10b94 <tcgetattr@plt+0x4e4>
   10ba4:	mov	r5, #0
   10ba8:	b	10ae8 <tcgetattr@plt+0x438>
   10bac:	mov	r0, #0
   10bb0:	bl	10614 <perror@plt>
   10bb4:	mov	r5, #1
   10bb8:	b	10ae8 <tcgetattr@plt+0x438>
   10bbc:	movw	r0, #24576	; 0x6000
   10bc0:	movt	r0, #3
   10bc4:	ldr	r3, [r7]
   10bc8:	movw	r2, #33508	; 0x82e4
   10bcc:	movt	r2, #1
   10bd0:	mov	r1, #1
   10bd4:	ldr	r0, [r0]
   10bd8:	bl	10674 <__fprintf_chk@plt>
   10bdc:	mov	r5, #1
   10be0:	b	10ae8 <tcgetattr@plt+0x438>
   10be4:	mov	r5, #2
   10be8:	b	10ae8 <tcgetattr@plt+0x438>
   10bec:	mov	r5, #0
   10bf0:	b	10ae8 <tcgetattr@plt+0x438>
   10bf4:	bl	10608 <__stack_chk_fail@plt>
   10bf8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   10bfc:	mov	r7, r0
   10c00:	ldr	r6, [pc, #72]	; 10c50 <tcgetattr@plt+0x5a0>
   10c04:	ldr	r5, [pc, #72]	; 10c54 <tcgetattr@plt+0x5a4>
   10c08:	add	r6, pc, r6
   10c0c:	add	r5, pc, r5
   10c10:	sub	r6, r6, r5
   10c14:	mov	r8, r1
   10c18:	mov	r9, r2
   10c1c:	bl	105c4 <calloc@plt-0x20>
   10c20:	asrs	r6, r6, #2
   10c24:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   10c28:	mov	r4, #0
   10c2c:	add	r4, r4, #1
   10c30:	ldr	r3, [r5], #4
   10c34:	mov	r2, r9
   10c38:	mov	r1, r8
   10c3c:	mov	r0, r7
   10c40:	blx	r3
   10c44:	cmp	r6, r4
   10c48:	bne	10c2c <tcgetattr@plt+0x57c>
   10c4c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   10c50:	andeq	r5, r2, ip, lsl #5
   10c54:	andeq	r5, r2, r4, lsl #5
   10c58:	bx	lr

Disassembly of section .fini:

00010c5c <.fini>:
   10c5c:	push	{r3, lr}
   10c60:	pop	{r3, pc}
