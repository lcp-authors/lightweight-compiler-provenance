
../repos/inetutils/src/tftp:     file format elf32-littlearm


Disassembly of section .init:

00011194 <.init>:
   11194:	push	{r3, lr}
   11198:	bl	11584 <__assert_fail@plt+0x4c>
   1119c:	pop	{r3, pc}

Disassembly of section .plt:

000111a0 <fdopen@plt-0x14>:
   111a0:	push	{lr}		; (str lr, [sp, #-4]!)
   111a4:	ldr	lr, [pc, #4]	; 111b0 <fdopen@plt-0x4>
   111a8:	add	lr, pc, lr
   111ac:	ldr	pc, [lr, #8]!
   111b0:	andeq	sl, r1, r0, asr lr

000111b4 <fdopen@plt>:
   111b4:	add	ip, pc, #0, 12
   111b8:	add	ip, ip, #106496	; 0x1a000
   111bc:	ldr	pc, [ip, #3664]!	; 0xe50

000111c0 <calloc@plt>:
   111c0:	add	ip, pc, #0, 12
   111c4:	add	ip, ip, #106496	; 0x1a000
   111c8:	ldr	pc, [ip, #3656]!	; 0xe48

000111cc <fputs_unlocked@plt>:
   111cc:	add	ip, pc, #0, 12
   111d0:	add	ip, ip, #106496	; 0x1a000
   111d4:	ldr	pc, [ip, #3648]!	; 0xe40

000111d8 <strcmp@plt>:
   111d8:	add	ip, pc, #0, 12
   111dc:	add	ip, ip, #106496	; 0x1a000
   111e0:	ldr	pc, [ip, #3640]!	; 0xe38

000111e4 <strtol@plt>:
   111e4:	add	ip, pc, #0, 12
   111e8:	add	ip, ip, #106496	; 0x1a000
   111ec:	ldr	pc, [ip, #3632]!	; 0xe30

000111f0 <printf@plt>:
   111f0:	add	ip, pc, #0, 12
   111f4:	add	ip, ip, #106496	; 0x1a000
   111f8:	ldr	pc, [ip, #3624]!	; 0xe28

000111fc <read@plt>:
   111fc:	add	ip, pc, #0, 12
   11200:	add	ip, ip, #106496	; 0x1a000
   11204:	ldr	pc, [ip, #3616]!	; 0xe20

00011208 <longjmp@plt>:
   11208:	add	ip, pc, #0, 12
   1120c:	add	ip, ip, #106496	; 0x1a000
   11210:	ldr	pc, [ip, #3608]!	; 0xe18

00011214 <_setjmp@plt>:
   11214:	add	ip, pc, #0, 12
   11218:	add	ip, ip, #106496	; 0x1a000
   1121c:	ldr	pc, [ip, #3600]!	; 0xe10

00011220 <memmove@plt>:
   11220:	add	ip, pc, #0, 12
   11224:	add	ip, ip, #106496	; 0x1a000
   11228:	ldr	pc, [ip, #3592]!	; 0xe08

0001122c <strchrnul@plt>:
   1122c:	add	ip, pc, #0, 12
   11230:	add	ip, ip, #106496	; 0x1a000
   11234:	ldr	pc, [ip, #3584]!	; 0xe00

00011238 <free@plt>:
   11238:	add	ip, pc, #0, 12
   1123c:	add	ip, ip, #106496	; 0x1a000
   11240:	ldr	pc, [ip, #3576]!	; 0xdf8

00011244 <gai_strerror@plt>:
   11244:	add	ip, pc, #0, 12
   11248:	add	ip, ip, #106496	; 0x1a000
   1124c:	ldr	pc, [ip, #3568]!	; 0xdf0

00011250 <fgets@plt>:
   11250:	add	ip, pc, #0, 12
   11254:	add	ip, ip, #106496	; 0x1a000
   11258:	ldr	pc, [ip, #3560]!	; 0xde8

0001125c <strndup@plt>:
   1125c:	add	ip, pc, #0, 12
   11260:	add	ip, ip, #106496	; 0x1a000
   11264:	ldr	pc, [ip, #3552]!	; 0xde0

00011268 <memcpy@plt>:
   11268:	add	ip, pc, #0, 12
   1126c:	add	ip, ip, #106496	; 0x1a000
   11270:	ldr	pc, [ip, #3544]!	; 0xdd8

00011274 <signal@plt>:
   11274:	add	ip, pc, #0, 12
   11278:	add	ip, ip, #106496	; 0x1a000
   1127c:	ldr	pc, [ip, #3536]!	; 0xdd0

00011280 <fwrite_unlocked@plt>:
   11280:	add	ip, pc, #0, 12
   11284:	add	ip, ip, #106496	; 0x1a000
   11288:	ldr	pc, [ip, #3528]!	; 0xdc8

0001128c <sleep@plt>:
   1128c:	add	ip, pc, #0, 12
   11290:	add	ip, ip, #106496	; 0x1a000
   11294:	ldr	pc, [ip, #3520]!	; 0xdc0

00011298 <recvfrom@plt>:
   11298:	add	ip, pc, #0, 12
   1129c:	add	ip, ip, #106496	; 0x1a000
   112a0:	ldr	pc, [ip, #3512]!	; 0xdb8

000112a4 <alarm@plt>:
   112a4:	add	ip, pc, #0, 12
   112a8:	add	ip, ip, #106496	; 0x1a000
   112ac:	ldr	pc, [ip, #3504]!	; 0xdb0

000112b0 <realloc@plt>:
   112b0:	add	ip, pc, #0, 12
   112b4:	add	ip, ip, #106496	; 0x1a000
   112b8:	ldr	pc, [ip, #3496]!	; 0xda8

000112bc <strcasecmp@plt>:
   112bc:	add	ip, pc, #0, 12
   112c0:	add	ip, ip, #106496	; 0x1a000
   112c4:	ldr	pc, [ip, #3488]!	; 0xda0

000112c8 <funlockfile@plt>:
   112c8:	add	ip, pc, #0, 12
   112cc:	add	ip, ip, #106496	; 0x1a000
   112d0:	ldr	pc, [ip, #3480]!	; 0xd98

000112d4 <perror@plt>:
   112d4:	add	ip, pc, #0, 12
   112d8:	add	ip, ip, #106496	; 0x1a000
   112dc:	ldr	pc, [ip, #3472]!	; 0xd90

000112e0 <fwrite@plt>:
   112e0:	add	ip, pc, #0, 12
   112e4:	add	ip, ip, #106496	; 0x1a000
   112e8:	ldr	pc, [ip, #3464]!	; 0xd88

000112ec <ioctl@plt>:
   112ec:	add	ip, pc, #0, 12
   112f0:	add	ip, ip, #106496	; 0x1a000
   112f4:	ldr	pc, [ip, #3456]!	; 0xd80

000112f8 <strcpy@plt>:
   112f8:	add	ip, pc, #0, 12
   112fc:	add	ip, ip, #106496	; 0x1a000
   11300:	ldr	pc, [ip, #3448]!	; 0xd78

00011304 <gettimeofday@plt>:
   11304:	add	ip, pc, #0, 12
   11308:	add	ip, ip, #106496	; 0x1a000
   1130c:	ldr	pc, [ip, #3440]!	; 0xd70

00011310 <creat64@plt>:
   11310:	add	ip, pc, #0, 12
   11314:	add	ip, ip, #106496	; 0x1a000
   11318:	ldr	pc, [ip, #3432]!	; 0xd68

0001131c <error@plt>:
   1131c:	add	ip, pc, #0, 12
   11320:	add	ip, ip, #106496	; 0x1a000
   11324:	ldr	pc, [ip, #3424]!	; 0xd60

00011328 <open64@plt>:
   11328:	add	ip, pc, #0, 12
   1132c:	add	ip, ip, #106496	; 0x1a000
   11330:	ldr	pc, [ip, #3416]!	; 0xd58

00011334 <getenv@plt>:
   11334:	add	ip, pc, #0, 12
   11338:	add	ip, ip, #106496	; 0x1a000
   1133c:	ldr	pc, [ip, #3408]!	; 0xd50

00011340 <puts@plt>:
   11340:	add	ip, pc, #0, 12
   11344:	add	ip, ip, #106496	; 0x1a000
   11348:	ldr	pc, [ip, #3400]!	; 0xd48

0001134c <malloc@plt>:
   1134c:	add	ip, pc, #0, 12
   11350:	add	ip, ip, #106496	; 0x1a000
   11354:	ldr	pc, [ip, #3392]!	; 0xd40

00011358 <__libc_start_main@plt>:
   11358:	add	ip, pc, #0, 12
   1135c:	add	ip, ip, #106496	; 0x1a000
   11360:	ldr	pc, [ip, #3384]!	; 0xd38

00011364 <strerror@plt>:
   11364:	add	ip, pc, #0, 12
   11368:	add	ip, ip, #106496	; 0x1a000
   1136c:	ldr	pc, [ip, #3376]!	; 0xd30

00011370 <__ctype_tolower_loc@plt>:
   11370:	add	ip, pc, #0, 12
   11374:	add	ip, ip, #106496	; 0x1a000
   11378:	ldr	pc, [ip, #3368]!	; 0xd28

0001137c <__gmon_start__@plt>:
   1137c:	add	ip, pc, #0, 12
   11380:	add	ip, ip, #106496	; 0x1a000
   11384:	ldr	pc, [ip, #3360]!	; 0xd20

00011388 <mempcpy@plt>:
   11388:	add	ip, pc, #0, 12
   1138c:	add	ip, ip, #106496	; 0x1a000
   11390:	ldr	pc, [ip, #3352]!	; 0xd18

00011394 <__ctype_b_loc@plt>:
   11394:	add	ip, pc, #0, 12
   11398:	add	ip, ip, #106496	; 0x1a000
   1139c:	ldr	pc, [ip, #3344]!	; 0xd10

000113a0 <exit@plt>:
   113a0:	add	ip, pc, #0, 12
   113a4:	add	ip, ip, #106496	; 0x1a000
   113a8:	ldr	pc, [ip, #3336]!	; 0xd08

000113ac <feof@plt>:
   113ac:	add	ip, pc, #0, 12
   113b0:	add	ip, ip, #106496	; 0x1a000
   113b4:	ldr	pc, [ip, #3328]!	; 0xd00

000113b8 <strlen@plt>:
   113b8:	add	ip, pc, #0, 12
   113bc:	add	ip, ip, #106496	; 0x1a000
   113c0:	ldr	pc, [ip, #3320]!	; 0xcf8

000113c4 <strchr@plt>:
   113c4:	add	ip, pc, #0, 12
   113c8:	add	ip, ip, #106496	; 0x1a000
   113cc:	ldr	pc, [ip, #3312]!	; 0xcf0

000113d0 <fprintf@plt>:
   113d0:	add	ip, pc, #0, 12
   113d4:	add	ip, ip, #106496	; 0x1a000
   113d8:	ldr	pc, [ip, #3304]!	; 0xce8

000113dc <__errno_location@plt>:
   113dc:	add	ip, pc, #0, 12
   113e0:	add	ip, ip, #106496	; 0x1a000
   113e4:	ldr	pc, [ip, #3296]!	; 0xce0

000113e8 <getservbyname@plt>:
   113e8:	add	ip, pc, #0, 12
   113ec:	add	ip, ip, #106496	; 0x1a000
   113f0:	ldr	pc, [ip, #3288]!	; 0xcd8

000113f4 <strerror_r@plt>:
   113f4:	add	ip, pc, #0, 12
   113f8:	add	ip, ip, #106496	; 0x1a000
   113fc:	ldr	pc, [ip, #3280]!	; 0xcd0

00011400 <bind@plt>:
   11400:	add	ip, pc, #0, 12
   11404:	add	ip, ip, #106496	; 0x1a000
   11408:	ldr	pc, [ip, #3272]!	; 0xcc8

0001140c <memset@plt>:
   1140c:	add	ip, pc, #0, 12
   11410:	add	ip, ip, #106496	; 0x1a000
   11414:	ldr	pc, [ip, #3264]!	; 0xcc0

00011418 <strncpy@plt>:
   11418:	add	ip, pc, #0, 12
   1141c:	add	ip, ip, #106496	; 0x1a000
   11420:	ldr	pc, [ip, #3256]!	; 0xcb8

00011424 <write@plt>:
   11424:	add	ip, pc, #0, 12
   11428:	add	ip, ip, #106496	; 0x1a000
   1142c:	ldr	pc, [ip, #3248]!	; 0xcb0

00011430 <fileno@plt>:
   11430:	add	ip, pc, #0, 12
   11434:	add	ip, ip, #106496	; 0x1a000
   11438:	ldr	pc, [ip, #3240]!	; 0xca8

0001143c <memchr@plt>:
   1143c:	add	ip, pc, #0, 12
   11440:	add	ip, ip, #106496	; 0x1a000
   11444:	ldr	pc, [ip, #3232]!	; 0xca0

00011448 <fclose@plt>:
   11448:	add	ip, pc, #0, 12
   1144c:	add	ip, ip, #106496	; 0x1a000
   11450:	ldr	pc, [ip, #3224]!	; 0xc98

00011454 <fseeko64@plt>:
   11454:	add	ip, pc, #0, 12
   11458:	add	ip, ip, #106496	; 0x1a000
   1145c:	ldr	pc, [ip, #3216]!	; 0xc90

00011460 <sendto@plt>:
   11460:	add	ip, pc, #0, 12
   11464:	add	ip, ip, #106496	; 0x1a000
   11468:	ldr	pc, [ip, #3208]!	; 0xc88

0001146c <__overflow@plt>:
   1146c:	add	ip, pc, #0, 12
   11470:	add	ip, ip, #106496	; 0x1a000
   11474:	ldr	pc, [ip, #3200]!	; 0xc80

00011478 <setlocale@plt>:
   11478:	add	ip, pc, #0, 12
   1147c:	add	ip, ip, #106496	; 0x1a000
   11480:	ldr	pc, [ip, #3192]!	; 0xc78

00011484 <strrchr@plt>:
   11484:	add	ip, pc, #0, 12
   11488:	add	ip, ip, #106496	; 0x1a000
   1148c:	ldr	pc, [ip, #3184]!	; 0xc70

00011490 <vfprintf@plt>:
   11490:	add	ip, pc, #0, 12
   11494:	add	ip, ip, #106496	; 0x1a000
   11498:	ldr	pc, [ip, #3176]!	; 0xc68

0001149c <fputc@plt>:
   1149c:	add	ip, pc, #0, 12
   114a0:	add	ip, ip, #106496	; 0x1a000
   114a4:	ldr	pc, [ip, #3168]!	; 0xc60

000114a8 <putc@plt>:
   114a8:	add	ip, pc, #0, 12
   114ac:	add	ip, ip, #106496	; 0x1a000
   114b0:	ldr	pc, [ip, #3160]!	; 0xc58

000114b4 <flockfile@plt>:
   114b4:	add	ip, pc, #0, 12
   114b8:	add	ip, ip, #106496	; 0x1a000
   114bc:	ldr	pc, [ip, #3152]!	; 0xc50

000114c0 <vsnprintf@plt>:
   114c0:	add	ip, pc, #0, 12
   114c4:	add	ip, ip, #106496	; 0x1a000
   114c8:	ldr	pc, [ip, #3144]!	; 0xc48

000114cc <qsort@plt>:
   114cc:	add	ip, pc, #0, 12
   114d0:	add	ip, ip, #106496	; 0x1a000
   114d4:	ldr	pc, [ip, #3136]!	; 0xc40

000114d8 <freeaddrinfo@plt>:
   114d8:	add	ip, pc, #0, 12
   114dc:	add	ip, ip, #106496	; 0x1a000
   114e0:	ldr	pc, [ip, #3128]!	; 0xc38

000114e4 <getaddrinfo@plt>:
   114e4:	add	ip, pc, #0, 12
   114e8:	add	ip, ip, #106496	; 0x1a000
   114ec:	ldr	pc, [ip, #3120]!	; 0xc30

000114f0 <socket@plt>:
   114f0:	add	ip, pc, #0, 12
   114f4:	add	ip, ip, #106496	; 0x1a000
   114f8:	ldr	pc, [ip, #3112]!	; 0xc28

000114fc <isatty@plt>:
   114fc:	add	ip, pc, #0, 12
   11500:	add	ip, ip, #106496	; 0x1a000
   11504:	ldr	pc, [ip, #3104]!	; 0xc20

00011508 <strncmp@plt>:
   11508:	add	ip, pc, #0, 12
   1150c:	add	ip, ip, #106496	; 0x1a000
   11510:	ldr	pc, [ip, #3096]!	; 0xc18

00011514 <abort@plt>:
   11514:	add	ip, pc, #0, 12
   11518:	add	ip, ip, #106496	; 0x1a000
   1151c:	ldr	pc, [ip, #3088]!	; 0xc10

00011520 <getc@plt>:
   11520:	add	ip, pc, #0, 12
   11524:	add	ip, ip, #106496	; 0x1a000
   11528:	ldr	pc, [ip, #3080]!	; 0xc08

0001152c <close@plt>:
   1152c:	add	ip, pc, #0, 12
   11530:	add	ip, ip, #106496	; 0x1a000
   11534:	ldr	pc, [ip, #3072]!	; 0xc00

00011538 <__assert_fail@plt>:
   11538:	add	ip, pc, #0, 12
   1153c:	add	ip, ip, #106496	; 0x1a000
   11540:	ldr	pc, [ip, #3064]!	; 0xbf8

Disassembly of section .text:

00011548 <argp_failure@@Base-0x4550>:
   11548:	mov	fp, #0
   1154c:	mov	lr, #0
   11550:	pop	{r1}		; (ldr r1, [sp], #4)
   11554:	mov	r2, sp
   11558:	push	{r2}		; (str r2, [sp, #-4]!)
   1155c:	push	{r0}		; (str r0, [sp, #-4]!)
   11560:	ldr	ip, [pc, #16]	; 11578 <__assert_fail@plt+0x40>
   11564:	push	{ip}		; (str ip, [sp, #-4]!)
   11568:	ldr	r0, [pc, #12]	; 1157c <__assert_fail@plt+0x44>
   1156c:	ldr	r3, [pc, #12]	; 11580 <__assert_fail@plt+0x48>
   11570:	bl	11358 <__libc_start_main@plt>
   11574:	bl	11514 <abort@plt>
   11578:	andeq	sl, r1, r4, lsl r5
   1157c:	strdeq	r2, [r1], -ip
   11580:			; <UNDEFINED> instruction: 0x0001a4b4
   11584:	ldr	r3, [pc, #20]	; 115a0 <__assert_fail@plt+0x68>
   11588:	ldr	r2, [pc, #20]	; 115a4 <__assert_fail@plt+0x6c>
   1158c:	add	r3, pc, r3
   11590:	ldr	r2, [r3, r2]
   11594:	cmp	r2, #0
   11598:	bxeq	lr
   1159c:	b	1137c <__gmon_start__@plt>
   115a0:	andeq	sl, r1, ip, ror #20
   115a4:	andeq	r0, r0, ip, lsr r1
   115a8:	ldr	r0, [pc, #24]	; 115c8 <__assert_fail@plt+0x90>
   115ac:	ldr	r3, [pc, #24]	; 115cc <__assert_fail@plt+0x94>
   115b0:	cmp	r3, r0
   115b4:	bxeq	lr
   115b8:	ldr	r3, [pc, #16]	; 115d0 <__assert_fail@plt+0x98>
   115bc:	cmp	r3, #0
   115c0:	bxeq	lr
   115c4:	bx	r3
   115c8:	andeq	ip, r2, r4, asr #8
   115cc:	andeq	ip, r2, r4, asr #8
   115d0:	andeq	r0, r0, r0
   115d4:	ldr	r0, [pc, #36]	; 11600 <__assert_fail@plt+0xc8>
   115d8:	ldr	r1, [pc, #36]	; 11604 <__assert_fail@plt+0xcc>
   115dc:	sub	r1, r1, r0
   115e0:	asr	r1, r1, #2
   115e4:	add	r1, r1, r1, lsr #31
   115e8:	asrs	r1, r1, #1
   115ec:	bxeq	lr
   115f0:	ldr	r3, [pc, #16]	; 11608 <__assert_fail@plt+0xd0>
   115f4:	cmp	r3, #0
   115f8:	bxeq	lr
   115fc:	bx	r3
   11600:	andeq	ip, r2, r4, asr #8
   11604:	andeq	ip, r2, r4, asr #8
   11608:	andeq	r0, r0, r0
   1160c:	push	{r4, lr}
   11610:	ldr	r4, [pc, #24]	; 11630 <__assert_fail@plt+0xf8>
   11614:	ldrb	r3, [r4]
   11618:	cmp	r3, #0
   1161c:	popne	{r4, pc}
   11620:	bl	115a8 <__assert_fail@plt+0x70>
   11624:	mov	r3, #1
   11628:	strb	r3, [r4]
   1162c:	pop	{r4, pc}
   11630:	andeq	ip, r2, r0, ror #8
   11634:	b	115d4 <__assert_fail@plt+0x9c>
   11638:	str	r4, [sp, #-8]!
   1163c:	str	lr, [sp, #4]
   11640:	mov	r0, #0
   11644:	bl	113a0 <exit@plt>
   11648:	strd	r4, [sp, #-16]!
   1164c:	str	r6, [sp, #8]
   11650:	str	lr, [sp, #12]
   11654:	subs	r4, r0, #0
   11658:	beq	11690 <__assert_fail@plt+0x158>
   1165c:	cmp	r4, #118	; 0x76
   11660:	movne	r0, #7
   11664:	bne	11680 <__assert_fail@plt+0x148>
   11668:	movw	r3, #50276	; 0xc464
   1166c:	movt	r3, #2
   11670:	ldr	r2, [r3]
   11674:	add	r2, r2, #1
   11678:	str	r2, [r3]
   1167c:	mov	r0, #0
   11680:	ldrd	r4, [sp]
   11684:	ldr	r6, [sp, #8]
   11688:	add	sp, sp, #12
   1168c:	pop	{pc}		; (ldr pc, [sp], #4)
   11690:	mov	r0, r2
   11694:	mov	r5, r1
   11698:	ldr	r3, [r2, #20]
   1169c:	cmp	r3, #1
   116a0:	bhi	116b8 <__assert_fail@plt+0x180>
   116a4:	movw	r3, #49480	; 0xc148
   116a8:	movt	r3, #2
   116ac:	ldr	r3, [r3]
   116b0:	cmp	r3, #2
   116b4:	ble	116cc <__assert_fail@plt+0x194>
   116b8:	movw	r3, #50256	; 0xc450
   116bc:	movt	r3, #2
   116c0:	movw	r2, #262	; 0x106
   116c4:	ldr	r1, [r3]
   116c8:	bl	16eb8 <argp_state_help@@Base>
   116cc:	movw	r3, #49480	; 0xc148
   116d0:	movt	r3, #2
   116d4:	ldr	r2, [r3]
   116d8:	add	r1, r2, #1
   116dc:	str	r1, [r3]
   116e0:	add	r3, r3, r2, lsl #2
   116e4:	str	r5, [r3, #4]
   116e8:	mov	r0, r4
   116ec:	b	11680 <__assert_fail@plt+0x148>
   116f0:	rev16	r1, r1
   116f4:	strh	r1, [r0, #2]
   116f8:	bx	lr
   116fc:	str	r4, [sp, #-8]!
   11700:	str	lr, [sp, #4]
   11704:	movw	r3, #50276	; 0xc464
   11708:	movt	r3, #2
   1170c:	ldr	r1, [r3, #4]
   11710:	clz	r2, r1
   11714:	lsr	r2, r2, #5
   11718:	str	r2, [r3, #4]
   1171c:	movw	r2, #43784	; 0xab08
   11720:	movt	r2, #1
   11724:	movw	r3, #42356	; 0xa574
   11728:	movt	r3, #1
   1172c:	cmp	r1, #0
   11730:	moveq	r1, r2
   11734:	movne	r1, r3
   11738:	movw	r0, #42360	; 0xa578
   1173c:	movt	r0, #1
   11740:	bl	111f0 <printf@plt>
   11744:	ldr	r4, [sp]
   11748:	add	sp, sp, #4
   1174c:	pop	{pc}		; (ldr pc, [sp], #4)
   11750:	str	r4, [sp, #-8]!
   11754:	str	lr, [sp, #4]
   11758:	movw	r3, #50276	; 0xc464
   1175c:	movt	r3, #2
   11760:	ldr	r1, [r3]
   11764:	clz	r2, r1
   11768:	lsr	r2, r2, #5
   1176c:	str	r2, [r3]
   11770:	movw	r2, #43784	; 0xab08
   11774:	movt	r2, #1
   11778:	movw	r3, #42356	; 0xa574
   1177c:	movt	r3, #1
   11780:	cmp	r1, #0
   11784:	moveq	r1, r2
   11788:	movne	r1, r3
   1178c:	movw	r0, #42380	; 0xa58c
   11790:	movt	r0, #1
   11794:	bl	111f0 <printf@plt>
   11798:	ldr	r4, [sp]
   1179c:	add	sp, sp, #4
   117a0:	pop	{pc}		; (ldr pc, [sp], #4)
   117a4:	str	r4, [sp, #-8]!
   117a8:	str	lr, [sp, #4]
   117ac:	vpush	{d8}
   117b0:	sub	sp, sp, #8
   117b4:	mov	r4, r1
   117b8:	movw	r3, #51892	; 0xcab4
   117bc:	movt	r3, #2
   117c0:	vldr	s15, [r3]
   117c4:	vcvt.f64.s32	d6, s15
   117c8:	vldr	d5, [pc, #216]	; 118a8 <__assert_fail@plt+0x370>
   117cc:	ldr	r3, [r3, #4]
   117d0:	movw	r2, #46473	; 0xb589
   117d4:	movt	r2, #5368	; 0x14f8
   117d8:	smull	ip, r1, r2, r3
   117dc:	asr	r3, r3, #31
   117e0:	rsb	r3, r3, r1, asr #13
   117e4:	vmov	s15, r3
   117e8:	vcvt.f64.s32	d7, s15
   117ec:	vmla.f64	d7, d6, d5
   117f0:	vmov.f64	d6, d7
   117f4:	movw	r3, #51884	; 0xcaac
   117f8:	movt	r3, #2
   117fc:	vldr	s15, [r3]
   11800:	vcvt.f64.s32	d4, s15
   11804:	ldr	r3, [r3, #4]
   11808:	smull	r1, r2, r2, r3
   1180c:	asr	r3, r3, #31
   11810:	rsb	r3, r3, r2, asr #13
   11814:	vmov	s14, r3
   11818:	vcvt.f64.s32	d7, s14
   1181c:	vmla.f64	d7, d4, d5
   11820:	vsub.f64	d7, d6, d7
   11824:	vdiv.f64	d8, d7, d5
   11828:	vstr	d8, [sp]
   1182c:	mov	r2, r4
   11830:	mov	r1, r0
   11834:	movw	r0, #42400	; 0xa5a0
   11838:	movt	r0, #1
   1183c:	bl	111f0 <printf@plt>
   11840:	movw	r3, #50276	; 0xc464
   11844:	movt	r3, #2
   11848:	ldr	r3, [r3]
   1184c:	cmp	r3, #0
   11850:	bne	1187c <__assert_fail@plt+0x344>
   11854:	movw	r3, #50268	; 0xc45c
   11858:	movt	r3, #2
   1185c:	ldr	r1, [r3]
   11860:	mov	r0, #10
   11864:	bl	114a8 <putc@plt>
   11868:	add	sp, sp, #8
   1186c:	vpop	{d8}
   11870:	ldr	r4, [sp]
   11874:	add	sp, sp, #4
   11878:	pop	{pc}		; (ldr pc, [sp], #4)
   1187c:	vmov	s15, r4
   11880:	vcvt.f64.u32	d7, s15
   11884:	vldr	d6, [pc, #36]	; 118b0 <__assert_fail@plt+0x378>
   11888:	vmul.f64	d7, d7, d6
   1188c:	vdiv.f64	d7, d7, d8
   11890:	vmov	r2, r3, d7
   11894:	movw	r0, #42428	; 0xa5bc
   11898:	movt	r0, #1
   1189c:	bl	111f0 <printf@plt>
   118a0:	b	11854 <__assert_fail@plt+0x31c>
   118a4:	nop	{0}
   118a8:	andeq	r0, r0, r0
   118ac:	eormi	r0, r4, r0
   118b0:	andeq	r0, r0, r0
   118b4:	eormi	r0, r0, r0
   118b8:	str	r4, [sp, #-8]!
   118bc:	str	lr, [sp, #4]
   118c0:	movw	r3, #50276	; 0xc464
   118c4:	movt	r3, #2
   118c8:	ldr	r3, [r3, #8]
   118cc:	cmp	r3, #0
   118d0:	beq	11964 <__assert_fail@plt+0x42c>
   118d4:	movw	r3, #51904	; 0xcac0
   118d8:	movt	r3, #2
   118dc:	ldr	r1, [r3]
   118e0:	movw	r0, #42448	; 0xa5d0
   118e4:	movt	r0, #1
   118e8:	bl	111f0 <printf@plt>
   118ec:	movw	r3, #50276	; 0xc464
   118f0:	movt	r3, #2
   118f4:	ldr	ip, [r3]
   118f8:	movw	r2, #43784	; 0xab08
   118fc:	movt	r2, #1
   11900:	movw	r1, #42356	; 0xa574
   11904:	movt	r1, #1
   11908:	movw	r3, #50276	; 0xc464
   1190c:	movt	r3, #2
   11910:	ldr	lr, [r3, #4]
   11914:	mov	r3, r2
   11918:	cmp	lr, #0
   1191c:	moveq	r3, r1
   11920:	cmp	ip, #0
   11924:	moveq	r2, r1
   11928:	movw	r1, #51908	; 0xcac4
   1192c:	movt	r1, #2
   11930:	movw	r0, #42484	; 0xa5f4
   11934:	movt	r0, #1
   11938:	bl	111f0 <printf@plt>
   1193c:	movw	r3, #49480	; 0xc148
   11940:	movt	r3, #2
   11944:	ldr	r2, [r3, #16]
   11948:	ldr	r1, [r3, #20]
   1194c:	movw	r0, #42520	; 0xa618
   11950:	movt	r0, #1
   11954:	bl	111f0 <printf@plt>
   11958:	ldr	r4, [sp]
   1195c:	add	sp, sp, #4
   11960:	pop	{pc}		; (ldr pc, [sp], #4)
   11964:	movw	r0, #42468	; 0xa5e4
   11968:	movt	r0, #1
   1196c:	bl	11340 <puts@plt>
   11970:	b	118ec <__assert_fail@plt+0x3b4>
   11974:	strd	r4, [sp, #-24]!	; 0xffffffe8
   11978:	strd	r6, [sp, #8]
   1197c:	str	r8, [sp, #16]
   11980:	str	lr, [sp, #20]
   11984:	movw	r3, #51900	; 0xcabc
   11988:	movt	r3, #2
   1198c:	mov	r2, #0
   11990:	str	r2, [r3]
   11994:	movw	r3, #51940	; 0xcae4
   11998:	movt	r3, #2
   1199c:	ldrb	r3, [r3]
   119a0:	cmp	r3, r2
   119a4:	movweq	r5, #51408	; 0xc8d0
   119a8:	movteq	r5, #2
   119ac:	beq	119d4 <__assert_fail@plt+0x49c>
   119b0:	bl	11394 <__ctype_b_loc@plt>
   119b4:	movw	r5, #51408	; 0xc8d0
   119b8:	movt	r5, #2
   119bc:	movw	r3, #51940	; 0xcae4
   119c0:	movt	r3, #2
   119c4:	movw	r6, #51900	; 0xcabc
   119c8:	movt	r6, #2
   119cc:	mov	r7, #0
   119d0:	b	11a04 <__assert_fail@plt+0x4cc>
   119d4:	mov	r3, #0
   119d8:	str	r3, [r5]
   119dc:	ldrd	r4, [sp]
   119e0:	ldrd	r6, [sp, #8]
   119e4:	ldr	r8, [sp, #16]
   119e8:	add	sp, sp, #20
   119ec:	pop	{pc}		; (ldr pc, [sp], #4)
   119f0:	mov	r3, r2
   119f4:	strb	r7, [r3], #1
   119f8:	ldrb	r2, [r2, #1]
   119fc:	cmp	r2, #0
   11a00:	beq	119d4 <__assert_fail@plt+0x49c>
   11a04:	ldr	r4, [r0]
   11a08:	mov	r2, r3
   11a0c:	ldrb	r1, [r3], #1
   11a10:	lsl	ip, r1, #1
   11a14:	ldrh	lr, [r4, ip]
   11a18:	tst	lr, #8192	; 0x2000
   11a1c:	bne	11a08 <__assert_fail@plt+0x4d0>
   11a20:	cmp	r1, #0
   11a24:	beq	119d4 <__assert_fail@plt+0x49c>
   11a28:	str	r2, [r5], #4
   11a2c:	ldr	r3, [r6]
   11a30:	add	r3, r3, #1
   11a34:	str	r3, [r6]
   11a38:	ldr	r1, [r0]
   11a3c:	ldrh	r3, [r1, ip]
   11a40:	tst	r3, #8192	; 0x2000
   11a44:	bne	119f0 <__assert_fail@plt+0x4b8>
   11a48:	ldrb	r3, [r2, #1]!
   11a4c:	cmp	r3, #0
   11a50:	beq	119d4 <__assert_fail@plt+0x49c>
   11a54:	lsl	r3, r3, #1
   11a58:	ldrh	r3, [r1, r3]
   11a5c:	tst	r3, #8192	; 0x2000
   11a60:	beq	11a48 <__assert_fail@plt+0x510>
   11a64:	b	119f0 <__assert_fail@plt+0x4b8>
   11a68:	str	r4, [sp, #-8]!
   11a6c:	str	lr, [sp, #4]
   11a70:	mov	r1, r0
   11a74:	movw	r0, #51908	; 0xcac4
   11a78:	movt	r0, #2
   11a7c:	bl	112f8 <strcpy@plt>
   11a80:	movw	r3, #50276	; 0xc464
   11a84:	movt	r3, #2
   11a88:	ldr	r3, [r3]
   11a8c:	cmp	r3, #0
   11a90:	bne	11aa0 <__assert_fail@plt+0x568>
   11a94:	ldr	r4, [sp]
   11a98:	add	sp, sp, #4
   11a9c:	pop	{pc}		; (ldr pc, [sp], #4)
   11aa0:	movw	r1, #51908	; 0xcac4
   11aa4:	movt	r1, #2
   11aa8:	movw	r0, #42576	; 0xa650
   11aac:	movt	r0, #1
   11ab0:	bl	111f0 <printf@plt>
   11ab4:	b	11a94 <__assert_fail@plt+0x55c>
   11ab8:	str	r4, [sp, #-8]!
   11abc:	str	lr, [sp, #4]
   11ac0:	movw	r0, #42592	; 0xa660
   11ac4:	movt	r0, #1
   11ac8:	bl	11a68 <__assert_fail@plt+0x530>
   11acc:	ldr	r4, [sp]
   11ad0:	add	sp, sp, #4
   11ad4:	pop	{pc}		; (ldr pc, [sp], #4)
   11ad8:	str	r4, [sp, #-8]!
   11adc:	str	lr, [sp, #4]
   11ae0:	movw	r0, #42600	; 0xa668
   11ae4:	movt	r0, #1
   11ae8:	bl	11a68 <__assert_fail@plt+0x530>
   11aec:	ldr	r4, [sp]
   11af0:	add	sp, sp, #4
   11af4:	pop	{pc}		; (ldr pc, [sp], #4)
   11af8:	strd	r4, [sp, #-32]!	; 0xffffffe0
   11afc:	strd	r6, [sp, #8]
   11b00:	strd	r8, [sp, #16]
   11b04:	str	sl, [sp, #24]
   11b08:	str	lr, [sp, #28]
   11b0c:	mov	r6, r0
   11b10:	mov	r9, r1
   11b14:	mov	r8, r2
   11b18:	mov	r7, r3
   11b1c:	bl	113b8 <strlen@plt>
   11b20:	mov	r5, r0
   11b24:	movw	r4, #51940	; 0xcae4
   11b28:	movt	r4, #2
   11b2c:	mov	r1, r6
   11b30:	mov	r0, r4
   11b34:	bl	112f8 <strcpy@plt>
   11b38:	mov	r0, r4
   11b3c:	bl	113b8 <strlen@plt>
   11b40:	movw	r3, #42832	; 0xa750
   11b44:	movt	r3, #1
   11b48:	ldrh	r3, [r3]
   11b4c:	strh	r3, [r4, r0]
   11b50:	mov	r1, r9
   11b54:	movw	r0, #42612	; 0xa674
   11b58:	movt	r0, #1
   11b5c:	bl	111f0 <printf@plt>
   11b60:	movw	r3, #50264	; 0xc458
   11b64:	movt	r3, #2
   11b68:	add	r0, r5, #1
   11b6c:	ldr	r2, [r3]
   11b70:	rsb	r1, r5, #199	; 0xc7
   11b74:	add	r0, r4, r0
   11b78:	bl	11250 <fgets@plt>
   11b7c:	cmp	r0, #0
   11b80:	beq	11bbc <__assert_fail@plt+0x684>
   11b84:	bl	11974 <__assert_fail@plt+0x43c>
   11b88:	movw	r3, #51900	; 0xcabc
   11b8c:	movt	r3, #2
   11b90:	ldr	r3, [r3]
   11b94:	str	r3, [r8]
   11b98:	movw	r3, #51408	; 0xc8d0
   11b9c:	movt	r3, #2
   11ba0:	str	r3, [r7]
   11ba4:	ldrd	r4, [sp]
   11ba8:	ldrd	r6, [sp, #8]
   11bac:	ldrd	r8, [sp, #16]
   11bb0:	ldr	sl, [sp, #24]
   11bb4:	add	sp, sp, #28
   11bb8:	pop	{pc}		; (ldr pc, [sp], #4)
   11bbc:	ldr	r3, [r7]
   11bc0:	str	r6, [r3]
   11bc4:	mov	r3, #1
   11bc8:	str	r3, [r8]
   11bcc:	b	11ba4 <__assert_fail@plt+0x66c>
   11bd0:	strd	r4, [sp, #-16]!
   11bd4:	str	r6, [sp, #8]
   11bd8:	str	lr, [sp, #12]
   11bdc:	ldrsh	r4, [r1]
   11be0:	rev16	r4, r4
   11be4:	uxth	r4, r4
   11be8:	sub	r3, r4, #1
   11bec:	uxth	r3, r3
   11bf0:	cmp	r3, #4
   11bf4:	bls	11c1c <__assert_fail@plt+0x6e4>
   11bf8:	mov	r2, r4
   11bfc:	mov	r1, r0
   11c00:	movw	r0, #42616	; 0xa678
   11c04:	movt	r0, #1
   11c08:	bl	111f0 <printf@plt>
   11c0c:	ldrd	r4, [sp]
   11c10:	ldr	r6, [sp, #8]
   11c14:	add	sp, sp, #12
   11c18:	pop	{pc}		; (ldr pc, [sp], #4)
   11c1c:	mov	r5, r1
   11c20:	mov	r6, r2
   11c24:	movw	r3, #42276	; 0xa524
   11c28:	movt	r3, #1
   11c2c:	ldr	r2, [r3, r4, lsl #2]
   11c30:	mov	r1, r0
   11c34:	movw	r0, #42632	; 0xa688
   11c38:	movt	r0, #1
   11c3c:	bl	111f0 <printf@plt>
   11c40:	sub	r4, r4, #1
   11c44:	cmp	r4, #4
   11c48:	ldrls	pc, [pc, r4, lsl #2]
   11c4c:	b	11c0c <__assert_fail@plt+0x6d4>
   11c50:	andeq	r1, r1, r4, ror #24
   11c54:	andeq	r1, r1, r4, ror #24
   11c58:	andeq	r1, r1, ip, lsl #25
   11c5c:	andeq	r1, r1, ip, lsr #25
   11c60:	andeq	r1, r1, r8, asr #25
   11c64:	add	r5, r5, #2
   11c68:	mov	r0, r5
   11c6c:	bl	113b8 <strlen@plt>
   11c70:	add	r2, r0, #1
   11c74:	add	r2, r5, r2
   11c78:	mov	r1, r5
   11c7c:	movw	r0, #42640	; 0xa690
   11c80:	movt	r0, #1
   11c84:	bl	111f0 <printf@plt>
   11c88:	b	11c0c <__assert_fail@plt+0x6d4>
   11c8c:	ldrh	r1, [r5, #2]
   11c90:	rev16	r1, r1
   11c94:	sub	r2, r6, #4
   11c98:	uxth	r1, r1
   11c9c:	movw	r0, #42660	; 0xa6a4
   11ca0:	movt	r0, #1
   11ca4:	bl	111f0 <printf@plt>
   11ca8:	b	11c0c <__assert_fail@plt+0x6d4>
   11cac:	ldrh	r1, [r5, #2]
   11cb0:	rev16	r1, r1
   11cb4:	uxth	r1, r1
   11cb8:	movw	r0, #42684	; 0xa6bc
   11cbc:	movt	r0, #1
   11cc0:	bl	111f0 <printf@plt>
   11cc4:	b	11c0c <__assert_fail@plt+0x6d4>
   11cc8:	ldrsh	r1, [r5, #2]
   11ccc:	rev16	r1, r1
   11cd0:	add	r2, r5, #4
   11cd4:	uxth	r1, r1
   11cd8:	movw	r0, #42696	; 0xa6c8
   11cdc:	movt	r0, #1
   11ce0:	bl	111f0 <printf@plt>
   11ce4:	b	11c0c <__assert_fail@plt+0x6d4>
   11ce8:	strd	r4, [sp, #-20]!	; 0xffffffec
   11cec:	strd	r6, [sp, #8]
   11cf0:	str	lr, [sp, #16]
   11cf4:	sub	sp, sp, #172	; 0xac
   11cf8:	mov	r4, r0
   11cfc:	mov	r3, #0
   11d00:	str	r3, [sp, #12]
   11d04:	str	r3, [sp, #20]
   11d08:	str	r3, [sp, #24]
   11d0c:	str	r3, [sp, #28]
   11d10:	str	r3, [sp, #32]
   11d14:	str	r3, [sp, #36]	; 0x24
   11d18:	mov	r3, #2
   11d1c:	str	r3, [sp, #16]
   11d20:	mov	r3, #194	; 0xc2
   11d24:	str	r3, [sp, #8]
   11d28:	add	r3, sp, #4
   11d2c:	add	r2, sp, #8
   11d30:	movw	r1, #42716	; 0xa6dc
   11d34:	movt	r1, #1
   11d38:	bl	114e4 <getaddrinfo@plt>
   11d3c:	cmp	r0, #0
   11d40:	bne	11d74 <__assert_fail@plt+0x83c>
   11d44:	movw	r3, #49480	; 0xc148
   11d48:	movt	r3, #2
   11d4c:	ldr	r0, [r3, #24]
   11d50:	cmp	r0, #0
   11d54:	bge	11da4 <__assert_fail@plt+0x86c>
   11d58:	ldr	r4, [sp, #4]
   11d5c:	cmp	r4, #0
   11d60:	beq	11e7c <__assert_fail@plt+0x944>
   11d64:	movw	r6, #49480	; 0xc148
   11d68:	movt	r6, #2
   11d6c:	mov	r7, #128	; 0x80
   11d70:	b	11dd8 <__assert_fail@plt+0x8a0>
   11d74:	movw	r3, #50256	; 0xc450
   11d78:	movt	r3, #2
   11d7c:	ldr	r5, [r3]
   11d80:	bl	11244 <gai_strerror@plt>
   11d84:	mov	r3, r0
   11d88:	mov	r2, r4
   11d8c:	movw	r1, #42724	; 0xa6e4
   11d90:	movt	r1, #1
   11d94:	mov	r0, r5
   11d98:	bl	113d0 <fprintf@plt>
   11d9c:	mvn	r0, #0
   11da0:	b	11e90 <__assert_fail@plt+0x958>
   11da4:	bl	1152c <close@plt>
   11da8:	movw	r3, #49480	; 0xc148
   11dac:	movt	r3, #2
   11db0:	mvn	r2, #0
   11db4:	str	r2, [r3, #24]
   11db8:	b	11d58 <__assert_fail@plt+0x820>
   11dbc:	mov	r0, r5
   11dc0:	bl	1152c <close@plt>
   11dc4:	mvn	r3, #0
   11dc8:	str	r3, [r6, #24]
   11dcc:	ldr	r4, [r4, #28]
   11dd0:	cmp	r4, #0
   11dd4:	beq	11e7c <__assert_fail@plt+0x944>
   11dd8:	ldr	r2, [r4, #12]
   11ddc:	ldr	r1, [r4, #8]
   11de0:	ldr	r0, [r4, #4]
   11de4:	bl	114f0 <socket@plt>
   11de8:	mov	r5, r0
   11dec:	str	r0, [r6, #24]
   11df0:	cmp	r0, #0
   11df4:	blt	11dcc <__assert_fail@plt+0x894>
   11df8:	mov	r2, r7
   11dfc:	mov	r1, #0
   11e00:	add	r0, sp, #40	; 0x28
   11e04:	bl	1140c <memset@plt>
   11e08:	ldr	r3, [r4, #4]
   11e0c:	strh	r3, [sp, #40]	; 0x28
   11e10:	ldr	r2, [r4, #16]
   11e14:	add	r1, sp, #40	; 0x28
   11e18:	mov	r0, r5
   11e1c:	bl	11400 <bind@plt>
   11e20:	cmp	r0, #0
   11e24:	bne	11dbc <__assert_fail@plt+0x884>
   11e28:	ldr	r2, [r4, #16]
   11e2c:	movw	r5, #50276	; 0xc464
   11e30:	movt	r5, #2
   11e34:	str	r2, [r5, #12]
   11e38:	ldr	r1, [r4, #20]
   11e3c:	add	r0, r5, #16
   11e40:	bl	11268 <memcpy@plt>
   11e44:	mov	r3, #1
   11e48:	str	r3, [r5, #8]
   11e4c:	movw	r3, #51904	; 0xcac0
   11e50:	movt	r3, #2
   11e54:	ldr	r0, [r3]
   11e58:	bl	183ec <argp_parse@@Base+0xcd8>
   11e5c:	ldr	r0, [r4, #24]
   11e60:	cmp	r0, #0
   11e64:	movweq	r0, #42740	; 0xa6f4
   11e68:	movteq	r0, #1
   11e6c:	bl	18ec0 <argp_parse@@Base+0x17ac>
   11e70:	movw	r3, #51904	; 0xcac0
   11e74:	movt	r3, #2
   11e78:	str	r0, [r3]
   11e7c:	ldr	r0, [sp, #4]
   11e80:	bl	114d8 <freeaddrinfo@plt>
   11e84:	clz	r4, r4
   11e88:	lsr	r4, r4, #5
   11e8c:	rsb	r0, r4, #0
   11e90:	add	sp, sp, #172	; 0xac
   11e94:	ldrd	r4, [sp]
   11e98:	ldrd	r6, [sp, #8]
   11e9c:	add	sp, sp, #16
   11ea0:	pop	{pc}		; (ldr pc, [sp], #4)
   11ea4:	push	{lr}		; (str lr, [sp, #-4]!)
   11ea8:	sub	sp, sp, #12
   11eac:	str	r0, [sp, #4]
   11eb0:	str	r1, [sp]
   11eb4:	cmp	r0, #1
   11eb8:	ble	11ee4 <__assert_fail@plt+0x9ac>
   11ebc:	ldr	r3, [sp, #4]
   11ec0:	cmp	r3, #2
   11ec4:	beq	11f04 <__assert_fail@plt+0x9cc>
   11ec8:	ldr	r3, [sp]
   11ecc:	ldr	r1, [r3]
   11ed0:	movw	r0, #42776	; 0xa718
   11ed4:	movt	r0, #1
   11ed8:	bl	111f0 <printf@plt>
   11edc:	add	sp, sp, #12
   11ee0:	pop	{pc}		; (ldr pc, [sp], #4)
   11ee4:	mov	r3, sp
   11ee8:	add	r2, sp, #4
   11eec:	movw	r1, #42748	; 0xa6fc
   11ef0:	movt	r1, #1
   11ef4:	movw	r0, #42760	; 0xa708
   11ef8:	movt	r0, #1
   11efc:	bl	11af8 <__assert_fail@plt+0x5c0>
   11f00:	b	11ebc <__assert_fail@plt+0x984>
   11f04:	mov	r2, #10
   11f08:	mov	r1, #0
   11f0c:	ldr	r3, [sp]
   11f10:	ldr	r0, [r3, #4]
   11f14:	bl	111e4 <strtol@plt>
   11f18:	cmp	r0, #0
   11f1c:	movwge	r3, #49480	; 0xc148
   11f20:	movtge	r3, #2
   11f24:	strge	r0, [r3, #20]
   11f28:	bge	11edc <__assert_fail@plt+0x9a4>
   11f2c:	ldr	r3, [sp]
   11f30:	ldr	r1, [r3, #4]
   11f34:	movw	r0, #42796	; 0xa72c
   11f38:	movt	r0, #1
   11f3c:	bl	111f0 <printf@plt>
   11f40:	b	11edc <__assert_fail@plt+0x9a4>
   11f44:	push	{lr}		; (str lr, [sp, #-4]!)
   11f48:	sub	sp, sp, #12
   11f4c:	str	r0, [sp, #4]
   11f50:	str	r1, [sp]
   11f54:	cmp	r0, #1
   11f58:	ble	11f84 <__assert_fail@plt+0xa4c>
   11f5c:	ldr	r3, [sp, #4]
   11f60:	cmp	r3, #2
   11f64:	beq	11fa4 <__assert_fail@plt+0xa6c>
   11f68:	ldr	r3, [sp]
   11f6c:	ldr	r1, [r3]
   11f70:	movw	r0, #42776	; 0xa718
   11f74:	movt	r0, #1
   11f78:	bl	111f0 <printf@plt>
   11f7c:	add	sp, sp, #12
   11f80:	pop	{pc}		; (ldr pc, [sp], #4)
   11f84:	mov	r3, sp
   11f88:	add	r2, sp, #4
   11f8c:	movw	r1, #42748	; 0xa6fc
   11f90:	movt	r1, #1
   11f94:	movw	r0, #42812	; 0xa73c
   11f98:	movt	r0, #1
   11f9c:	bl	11af8 <__assert_fail@plt+0x5c0>
   11fa0:	b	11f5c <__assert_fail@plt+0xa24>
   11fa4:	mov	r2, #10
   11fa8:	mov	r1, #0
   11fac:	ldr	r3, [sp]
   11fb0:	ldr	r0, [r3, #4]
   11fb4:	bl	111e4 <strtol@plt>
   11fb8:	cmp	r0, #0
   11fbc:	movwge	r3, #49480	; 0xc148
   11fc0:	movtge	r3, #2
   11fc4:	strge	r0, [r3, #16]
   11fc8:	bge	11f7c <__assert_fail@plt+0xa44>
   11fcc:	ldr	r3, [sp]
   11fd0:	ldr	r1, [r3, #4]
   11fd4:	movw	r0, #42796	; 0xa72c
   11fd8:	movt	r0, #1
   11fdc:	bl	111f0 <printf@plt>
   11fe0:	b	11f7c <__assert_fail@plt+0xa44>
   11fe4:	str	r4, [sp, #-8]!
   11fe8:	str	lr, [sp, #4]
   11fec:	sub	sp, sp, #8
   11ff0:	str	r0, [sp, #4]
   11ff4:	str	r1, [sp]
   11ff8:	cmp	r0, #1
   11ffc:	ble	12078 <__assert_fail@plt+0xb40>
   12000:	ldr	r3, [sp, #4]
   12004:	sub	r3, r3, #2
   12008:	cmp	r3, #1
   1200c:	bhi	12098 <__assert_fail@plt+0xb60>
   12010:	ldr	r3, [sp]
   12014:	ldr	r0, [r3, #4]
   12018:	bl	11ce8 <__assert_fail@plt+0x7b0>
   1201c:	cmn	r0, #1
   12020:	beq	120ac <__assert_fail@plt+0xb74>
   12024:	ldr	r3, [sp, #4]
   12028:	cmp	r3, #3
   1202c:	beq	120bc <__assert_fail@plt+0xb84>
   12030:	movw	r1, #42896	; 0xa790
   12034:	movt	r1, #1
   12038:	movw	r0, #42716	; 0xa6dc
   1203c:	movt	r0, #1
   12040:	bl	113e8 <getservbyname@plt>
   12044:	subs	r4, r0, #0
   12048:	beq	1210c <__assert_fail@plt+0xbd4>
   1204c:	ldr	r3, [r4, #8]
   12050:	rev16	r3, r3
   12054:	uxth	r3, r3
   12058:	movw	r2, #50276	; 0xc464
   1205c:	movt	r2, #2
   12060:	str	r3, [r2, #144]	; 0x90
   12064:	movw	r3, #50276	; 0xc464
   12068:	movt	r3, #2
   1206c:	mov	r2, #1
   12070:	str	r2, [r3, #8]
   12074:	b	120ac <__assert_fail@plt+0xb74>
   12078:	mov	r3, sp
   1207c:	add	r2, sp, #4
   12080:	movw	r1, #42828	; 0xa74c
   12084:	movt	r1, #1
   12088:	movw	r0, #42836	; 0xa754
   1208c:	movt	r0, #1
   12090:	bl	11af8 <__assert_fail@plt+0x5c0>
   12094:	b	12000 <__assert_fail@plt+0xac8>
   12098:	ldr	r3, [sp]
   1209c:	ldr	r1, [r3]
   120a0:	movw	r0, #42844	; 0xa75c
   120a4:	movt	r0, #1
   120a8:	bl	111f0 <printf@plt>
   120ac:	add	sp, sp, #8
   120b0:	ldr	r4, [sp]
   120b4:	add	sp, sp, #4
   120b8:	pop	{pc}		; (ldr pc, [sp], #4)
   120bc:	mov	r2, #10
   120c0:	mov	r1, #0
   120c4:	ldr	r3, [sp]
   120c8:	ldr	r0, [r3, #8]
   120cc:	bl	111e4 <strtol@plt>
   120d0:	movw	r3, #50276	; 0xc464
   120d4:	movt	r3, #2
   120d8:	str	r0, [r3, #144]	; 0x90
   120dc:	cmp	r0, #0
   120e0:	bgt	12064 <__assert_fail@plt+0xb2c>
   120e4:	ldr	r3, [sp]
   120e8:	ldr	r1, [r3, #8]
   120ec:	movw	r0, #42872	; 0xa778
   120f0:	movt	r0, #1
   120f4:	bl	111f0 <printf@plt>
   120f8:	movw	r3, #50276	; 0xc464
   120fc:	movt	r3, #2
   12100:	mov	r2, #0
   12104:	str	r2, [r3, #8]
   12108:	b	120ac <__assert_fail@plt+0xb74>
   1210c:	movw	r2, #42900	; 0xa794
   12110:	movt	r2, #1
   12114:	mov	r1, #0
   12118:	mov	r0, #1
   1211c:	bl	1131c <error@plt>
   12120:	b	1204c <__assert_fail@plt+0xb14>
   12124:	strd	r4, [sp, #-24]!	; 0xffffffe8
   12128:	strd	r6, [sp, #8]
   1212c:	str	r8, [sp, #16]
   12130:	str	lr, [sp, #20]
   12134:	cmp	r0, #1
   12138:	ble	12214 <__assert_fail@plt+0xcdc>
   1213c:	mov	r7, r1
   12140:	cmp	r0, #2
   12144:	bne	12190 <__assert_fail@plt+0xc58>
   12148:	movw	r3, #49480	; 0xc148
   1214c:	movt	r3, #2
   12150:	ldr	r1, [r3, #28]
   12154:	cmp	r1, #0
   12158:	beq	12180 <__assert_fail@plt+0xc48>
   1215c:	ldr	r5, [r7, #4]
   12160:	add	r4, r3, #28
   12164:	mov	r0, r5
   12168:	bl	111d8 <strcmp@plt>
   1216c:	cmp	r0, #0
   12170:	beq	1222c <__assert_fail@plt+0xcf4>
   12174:	ldr	r1, [r4, #8]!
   12178:	cmp	r1, #0
   1217c:	bne	12164 <__assert_fail@plt+0xc2c>
   12180:	ldr	r1, [r7, #4]
   12184:	movw	r0, #42992	; 0xa7f0
   12188:	movt	r0, #1
   1218c:	bl	111f0 <printf@plt>
   12190:	ldr	r1, [r7]
   12194:	movw	r0, #42968	; 0xa7d8
   12198:	movt	r0, #1
   1219c:	bl	111f0 <printf@plt>
   121a0:	movw	r3, #49480	; 0xc148
   121a4:	movt	r3, #2
   121a8:	ldr	r2, [r3, #28]
   121ac:	cmp	r2, #0
   121b0:	beq	121f4 <__assert_fail@plt+0xcbc>
   121b4:	add	r5, r3, #28
   121b8:	movw	r4, #42832	; 0xa750
   121bc:	movt	r4, #1
   121c0:	movw	r7, #42980	; 0xa7e4
   121c4:	movt	r7, #1
   121c8:	movw	r6, #42928	; 0xa7b0
   121cc:	movt	r6, #1
   121d0:	mov	r1, r4
   121d4:	mov	r0, r7
   121d8:	bl	111f0 <printf@plt>
   121dc:	ldrb	r3, [r4]
   121e0:	cmp	r3, #32
   121e4:	moveq	r4, r6
   121e8:	ldr	r2, [r5, #8]!
   121ec:	cmp	r2, #0
   121f0:	bne	121d0 <__assert_fail@plt+0xc98>
   121f4:	movw	r0, #42988	; 0xa7ec
   121f8:	movt	r0, #1
   121fc:	bl	11340 <puts@plt>
   12200:	ldrd	r4, [sp]
   12204:	ldrd	r6, [sp, #8]
   12208:	ldr	r8, [sp, #16]
   1220c:	add	sp, sp, #20
   12210:	pop	{pc}		; (ldr pc, [sp], #4)
   12214:	movw	r1, #51908	; 0xcac4
   12218:	movt	r1, #2
   1221c:	movw	r0, #42932	; 0xa7b4
   12220:	movt	r0, #1
   12224:	bl	111f0 <printf@plt>
   12228:	b	12200 <__assert_fail@plt+0xcc8>
   1222c:	ldr	r0, [r4, #4]
   12230:	bl	11a68 <__assert_fail@plt+0x530>
   12234:	b	12200 <__assert_fail@plt+0xcc8>
   12238:	str	r4, [sp, #-8]!
   1223c:	str	lr, [sp, #4]
   12240:	mov	r1, #1
   12244:	mov	r0, #14
   12248:	bl	11274 <signal@plt>
   1224c:	mov	r0, #0
   12250:	bl	112a4 <alarm@plt>
   12254:	mvn	r1, #0
   12258:	movw	r0, #51488	; 0xc920
   1225c:	movt	r0, #2
   12260:	bl	11208 <longjmp@plt>
   12264:	str	r4, [sp, #-8]!
   12268:	str	lr, [sp, #4]
   1226c:	movw	r1, #51880	; 0xcaa8
   12270:	movt	r1, #2
   12274:	movw	r2, #49480	; 0xc148
   12278:	movt	r2, #2
   1227c:	ldr	r3, [r1]
   12280:	ldr	r0, [r2, #20]
   12284:	add	r3, r3, r0
   12288:	str	r3, [r1]
   1228c:	ldr	r2, [r2, #16]
   12290:	cmp	r3, r2
   12294:	blt	122b4 <__assert_fail@plt+0xd7c>
   12298:	movw	r0, #43012	; 0xa804
   1229c:	movt	r0, #1
   122a0:	bl	11340 <puts@plt>
   122a4:	mvn	r1, #0
   122a8:	movw	r0, #51488	; 0xc920
   122ac:	movt	r0, #2
   122b0:	bl	11208 <longjmp@plt>
   122b4:	mov	r1, #1
   122b8:	movw	r0, #51016	; 0xc748
   122bc:	movt	r0, #2
   122c0:	bl	11208 <longjmp@plt>
   122c4:	strd	r4, [sp, #-24]!	; 0xffffffe8
   122c8:	strd	r6, [sp, #8]
   122cc:	str	r8, [sp, #16]
   122d0:	str	lr, [sp, #20]
   122d4:	mov	r7, r1
   122d8:	mov	r6, r2
   122dc:	mov	r8, r3
   122e0:	rev16	r0, r0
   122e4:	mov	r5, r2
   122e8:	strh	r0, [r5], #2
   122ec:	mov	r0, r1
   122f0:	bl	113b8 <strlen@plt>
   122f4:	mov	r4, r0
   122f8:	movw	r2, #502	; 0x1f6
   122fc:	mov	r1, r7
   12300:	mov	r0, r5
   12304:	bl	11418 <strncpy@plt>
   12308:	movw	r3, #502	; 0x1f6
   1230c:	cmp	r4, r3
   12310:	movcc	r3, r4
   12314:	add	r4, r5, r3
   12318:	add	r4, r4, #1
   1231c:	mov	r7, #0
   12320:	strb	r7, [r5, r3]
   12324:	mov	r1, r8
   12328:	mov	r0, r4
   1232c:	bl	112f8 <strcpy@plt>
   12330:	mov	r0, r8
   12334:	bl	113b8 <strlen@plt>
   12338:	add	r3, r4, r0
   1233c:	strb	r7, [r4, r0]
   12340:	add	r0, r3, #1
   12344:	sub	r0, r0, r6
   12348:	ldrd	r4, [sp]
   1234c:	ldrd	r6, [sp, #8]
   12350:	ldr	r8, [sp, #16]
   12354:	add	sp, sp, #20
   12358:	pop	{pc}		; (ldr pc, [sp], #4)
   1235c:	strd	r4, [sp, #-12]!
   12360:	str	lr, [sp, #8]
   12364:	sub	sp, sp, #12
   12368:	movw	r3, #50496	; 0xc540
   1236c:	movt	r3, #2
   12370:	mov	r2, #0
   12374:	strb	r2, [r3]
   12378:	mov	r2, #5
   1237c:	strb	r2, [r3, #1]
   12380:	rev16	r2, r0
   12384:	strh	r2, [r3, #2]
   12388:	movw	r3, #49480	; 0xc148
   1238c:	movt	r3, #2
   12390:	ldr	r3, [r3, #76]	; 0x4c
   12394:	cmp	r0, r3
   12398:	movne	r2, #0
   1239c:	moveq	r2, #1
   123a0:	orrs	r2, r2, r3, lsr #31
   123a4:	bne	12450 <__assert_fail@plt+0xf18>
   123a8:	ldr	r4, [pc, #248]	; 124a8 <__assert_fail@plt+0xf70>
   123ac:	ldr	r3, [r4, #8]!
   123b0:	cmp	r3, r0
   123b4:	movne	r2, #0
   123b8:	moveq	r2, #1
   123bc:	orrs	r2, r2, r3, lsr #31
   123c0:	beq	123ac <__assert_fail@plt+0xe74>
   123c4:	cmp	r3, #0
   123c8:	blt	12458 <__assert_fail@plt+0xf20>
   123cc:	ldr	r5, [r4, #4]
   123d0:	mov	r0, r5
   123d4:	bl	113b8 <strlen@plt>
   123d8:	add	r4, r0, #4
   123dc:	add	r2, r0, #1
   123e0:	mov	r1, r5
   123e4:	ldr	r0, [pc, #192]	; 124ac <__assert_fail@plt+0xf74>
   123e8:	bl	11268 <memcpy@plt>
   123ec:	movw	r3, #50276	; 0xc464
   123f0:	movt	r3, #2
   123f4:	ldr	r3, [r3, #4]
   123f8:	cmp	r3, #0
   123fc:	bne	1247c <__assert_fail@plt+0xf44>
   12400:	movw	r0, #49480	; 0xc148
   12404:	movt	r0, #2
   12408:	movw	r3, #50276	; 0xc464
   1240c:	movt	r3, #2
   12410:	add	r2, r3, #16
   12414:	ldr	r3, [r3, #12]
   12418:	str	r3, [sp, #4]
   1241c:	str	r2, [sp]
   12420:	mov	r3, #0
   12424:	mov	r2, r4
   12428:	movw	r1, #50496	; 0xc540
   1242c:	movt	r1, #2
   12430:	ldr	r0, [r0, #24]
   12434:	bl	11460 <sendto@plt>
   12438:	cmp	r0, r4
   1243c:	bne	12498 <__assert_fail@plt+0xf60>
   12440:	add	sp, sp, #12
   12444:	ldrd	r4, [sp]
   12448:	add	sp, sp, #8
   1244c:	pop	{pc}		; (ldr pc, [sp], #4)
   12450:	ldr	r4, [pc, #80]	; 124a8 <__assert_fail@plt+0xf70>
   12454:	b	123c4 <__assert_fail@plt+0xe8c>
   12458:	sub	r0, r0, #100	; 0x64
   1245c:	bl	11364 <strerror@plt>
   12460:	str	r0, [r4, #4]
   12464:	movw	r3, #50496	; 0xc540
   12468:	movt	r3, #2
   1246c:	mov	r2, #0
   12470:	strb	r2, [r3, #2]
   12474:	strb	r2, [r3, #3]
   12478:	b	123cc <__assert_fail@plt+0xe94>
   1247c:	mov	r2, r4
   12480:	movw	r1, #50496	; 0xc540
   12484:	movt	r1, #2
   12488:	movw	r0, #43032	; 0xa818
   1248c:	movt	r0, #1
   12490:	bl	11bd0 <__assert_fail@plt+0x698>
   12494:	b	12400 <__assert_fail@plt+0xec8>
   12498:	movw	r0, #43040	; 0xa820
   1249c:	movt	r0, #1
   124a0:	bl	112d4 <perror@plt>
   124a4:	b	12440 <__assert_fail@plt+0xf08>
   124a8:	muleq	r2, r4, r1
   124ac:	andeq	ip, r2, r4, asr #10
   124b0:	strd	r4, [sp, #-16]!
   124b4:	str	r6, [sp, #8]
   124b8:	str	lr, [sp, #12]
   124bc:	mov	r4, r0
   124c0:	ldrb	r3, [r0]
   124c4:	cmp	r3, #0
   124c8:	beq	1250c <__assert_fail@plt+0xfd4>
   124cc:	mov	r5, #47	; 0x2f
   124d0:	mov	r6, #0
   124d4:	mov	r1, r5
   124d8:	mov	r0, r4
   124dc:	bl	11484 <strrchr@plt>
   124e0:	cmp	r0, #0
   124e4:	beq	1250c <__assert_fail@plt+0xfd4>
   124e8:	ldrb	r3, [r0, #1]
   124ec:	cmp	r3, #0
   124f0:	bne	12508 <__assert_fail@plt+0xfd0>
   124f4:	strb	r6, [r0]
   124f8:	ldrb	r3, [r4]
   124fc:	cmp	r3, #0
   12500:	bne	124d4 <__assert_fail@plt+0xf9c>
   12504:	b	1250c <__assert_fail@plt+0xfd4>
   12508:	add	r4, r0, #1
   1250c:	mov	r0, r4
   12510:	ldrd	r4, [sp]
   12514:	ldr	r6, [sp, #8]
   12518:	add	sp, sp, #12
   1251c:	pop	{pc}		; (ldr pc, [sp], #4)
   12520:	strd	r4, [sp, #-28]!	; 0xffffffe4
   12524:	strd	r6, [sp, #8]
   12528:	strd	r8, [sp, #16]
   1252c:	str	lr, [sp, #24]
   12530:	movw	r3, #49480	; 0xc148
   12534:	movt	r3, #2
   12538:	ldr	r2, [r3, #148]	; 0x94
   1253c:	cmp	r2, #0
   12540:	beq	125f4 <__assert_fail@plt+0x10bc>
   12544:	ldrb	lr, [r0]
   12548:	add	r4, r3, #148	; 0x94
   1254c:	mov	r5, #0
   12550:	mov	r7, r5
   12554:	mov	r8, r5
   12558:	mov	r9, lr
   1255c:	mov	r6, r4
   12560:	ldrb	r3, [r2], #1
   12564:	cmp	r3, lr
   12568:	bne	125a8 <__assert_fail@plt+0x1070>
   1256c:	cmp	lr, #0
   12570:	beq	12590 <__assert_fail@plt+0x1058>
   12574:	mov	r1, r0
   12578:	ldrb	r3, [r1, #1]!
   1257c:	ldrb	ip, [r2], #1
   12580:	cmp	ip, r3
   12584:	bne	125b0 <__assert_fail@plt+0x1078>
   12588:	cmp	r3, #0
   1258c:	bne	12578 <__assert_fail@plt+0x1040>
   12590:	mov	r0, r6
   12594:	ldrd	r4, [sp]
   12598:	ldrd	r6, [sp, #8]
   1259c:	ldrd	r8, [sp, #16]
   125a0:	add	sp, sp, #24
   125a4:	pop	{pc}		; (ldr pc, [sp], #4)
   125a8:	mov	r1, r0
   125ac:	mov	r3, r9
   125b0:	cmp	r3, #0
   125b4:	bne	125c8 <__assert_fail@plt+0x1090>
   125b8:	sub	r1, r1, r0
   125bc:	cmp	r1, r5
   125c0:	bgt	125e4 <__assert_fail@plt+0x10ac>
   125c4:	addeq	r7, r7, #1
   125c8:	ldr	r2, [r4, #12]!
   125cc:	cmp	r2, #0
   125d0:	bne	1255c <__assert_fail@plt+0x1024>
   125d4:	cmp	r7, #2
   125d8:	movlt	r6, r8
   125dc:	mvnge	r6, #0
   125e0:	b	12590 <__assert_fail@plt+0x1058>
   125e4:	mov	r5, r1
   125e8:	mov	r8, r6
   125ec:	mov	r7, #1
   125f0:	b	125c8 <__assert_fail@plt+0x1090>
   125f4:	mov	r6, r2
   125f8:	b	12590 <__assert_fail@plt+0x1058>
   125fc:	strd	r4, [sp, #-20]!	; 0xffffffec
   12600:	strd	r6, [sp, #8]
   12604:	str	lr, [sp, #16]
   12608:	sub	sp, sp, #12
   1260c:	mov	r6, r0
   12610:	mov	r5, r1
   12614:	ldr	r0, [r1]
   12618:	bl	18534 <argp_parse@@Base+0xe20>
   1261c:	movw	r1, #46732	; 0xb68c
   12620:	movt	r1, #1
   12624:	mov	r0, #6
   12628:	bl	11478 <setlocale@plt>
   1262c:	movw	r3, #53180	; 0xcfbc
   12630:	movt	r3, #2
   12634:	movw	r2, #43044	; 0xa824
   12638:	movt	r2, #1
   1263c:	str	r2, [r3]
   12640:	movw	r4, #42716	; 0xa6dc
   12644:	movt	r4, #1
   12648:	movw	r1, #50172	; 0xc3fc
   1264c:	movt	r1, #2
   12650:	mov	r0, r4
   12654:	bl	18300 <argp_parse@@Base+0xbec>
   12658:	mov	r3, #0
   1265c:	str	r3, [sp, #4]
   12660:	str	r3, [sp]
   12664:	mov	r2, r5
   12668:	mov	r1, r6
   1266c:	ldr	r0, [pc, #484]	; 12858 <__assert_fail@plt+0x1320>
   12670:	bl	17714 <argp_parse@@Base>
   12674:	movw	r1, #42896	; 0xa790
   12678:	movt	r1, #1
   1267c:	mov	r0, r4
   12680:	bl	113e8 <getservbyname@plt>
   12684:	cmp	r0, #0
   12688:	moveq	r3, #69	; 0x45
   1268c:	beq	1269c <__assert_fail@plt+0x1164>
   12690:	ldr	r3, [r0, #8]
   12694:	rev16	r3, r3
   12698:	uxth	r3, r3
   1269c:	movw	r4, #50276	; 0xc464
   126a0:	movt	r4, #2
   126a4:	str	r3, [r4, #144]	; 0x90
   126a8:	mov	r0, #0
   126ac:	bl	114fc <isatty@plt>
   126b0:	str	r0, [r4, #148]	; 0x94
   126b4:	movw	r3, #51908	; 0xcac4
   126b8:	movt	r3, #2
   126bc:	movw	r2, #42600	; 0xa668
   126c0:	movt	r2, #1
   126c4:	ldr	r0, [r2]
   126c8:	ldr	r1, [r2, #4]
   126cc:	str	r0, [r3]
   126d0:	str	r1, [r3, #4]
   126d4:	ldrb	r2, [r2, #8]
   126d8:	strb	r2, [r3, #8]
   126dc:	movw	r1, #8760	; 0x2238
   126e0:	movt	r1, #1
   126e4:	mov	r0, #2
   126e8:	bl	11274 <signal@plt>
   126ec:	movw	r3, #49480	; 0xc148
   126f0:	movt	r3, #2
   126f4:	ldr	r3, [r3]
   126f8:	cmp	r3, #1
   126fc:	ble	12730 <__assert_fail@plt+0x11f8>
   12700:	movw	r0, #51488	; 0xc920
   12704:	movt	r0, #2
   12708:	bl	11214 <_setjmp@plt>
   1270c:	cmp	r0, #0
   12710:	beq	1271c <__assert_fail@plt+0x11e4>
   12714:	mov	r0, #0
   12718:	bl	113a0 <exit@plt>
   1271c:	movw	r3, #49480	; 0xc148
   12720:	movt	r3, #2
   12724:	add	r1, r3, #4
   12728:	ldr	r0, [r3]
   1272c:	bl	11fe4 <__assert_fail@plt+0xaac>
   12730:	movw	r0, #51488	; 0xc920
   12734:	movt	r0, #2
   12738:	bl	11214 <_setjmp@plt>
   1273c:	cmp	r0, #0
   12740:	bne	127f0 <__assert_fail@plt+0x12b8>
   12744:	movw	r4, #50276	; 0xc464
   12748:	movt	r4, #2
   1274c:	movw	r6, #49480	; 0xc148
   12750:	movt	r6, #2
   12754:	movw	r5, #43068	; 0xa83c
   12758:	movt	r5, #1
   1275c:	ldr	r3, [r4, #148]	; 0x94
   12760:	cmp	r3, #0
   12764:	bne	12808 <__assert_fail@plt+0x12d0>
   12768:	movw	r3, #50264	; 0xc458
   1276c:	movt	r3, #2
   12770:	ldr	r2, [r3]
   12774:	mov	r1, #200	; 0xc8
   12778:	movw	r0, #51940	; 0xcae4
   1277c:	movt	r0, #2
   12780:	bl	11250 <fgets@plt>
   12784:	cmp	r0, #0
   12788:	beq	12818 <__assert_fail@plt+0x12e0>
   1278c:	movw	r3, #51940	; 0xcae4
   12790:	movt	r3, #2
   12794:	ldrb	r3, [r3]
   12798:	cmp	r3, #0
   1279c:	beq	1275c <__assert_fail@plt+0x1224>
   127a0:	bl	11974 <__assert_fail@plt+0x43c>
   127a4:	movw	r3, #51900	; 0xcabc
   127a8:	movt	r3, #2
   127ac:	ldr	r7, [r3]
   127b0:	cmp	r7, #0
   127b4:	beq	1275c <__assert_fail@plt+0x1224>
   127b8:	movw	r3, #51408	; 0xc8d0
   127bc:	movt	r3, #2
   127c0:	ldr	r0, [r3]
   127c4:	bl	12520 <__assert_fail@plt+0xfe8>
   127c8:	cmn	r0, #1
   127cc:	beq	12838 <__assert_fail@plt+0x1300>
   127d0:	cmp	r0, #0
   127d4:	beq	12848 <__assert_fail@plt+0x1310>
   127d8:	ldr	r3, [r0, #8]
   127dc:	movw	r1, #51408	; 0xc8d0
   127e0:	movt	r1, #2
   127e4:	mov	r0, r7
   127e8:	blx	r3
   127ec:	b	1275c <__assert_fail@plt+0x1224>
   127f0:	movw	r3, #50268	; 0xc45c
   127f4:	movt	r3, #2
   127f8:	ldr	r1, [r3]
   127fc:	mov	r0, #10
   12800:	bl	114a8 <putc@plt>
   12804:	b	12744 <__assert_fail@plt+0x120c>
   12808:	ldr	r1, [r6, #344]	; 0x158
   1280c:	mov	r0, r5
   12810:	bl	111f0 <printf@plt>
   12814:	b	12768 <__assert_fail@plt+0x1230>
   12818:	movw	r3, #50264	; 0xc458
   1281c:	movt	r3, #2
   12820:	ldr	r0, [r3]
   12824:	bl	113ac <feof@plt>
   12828:	cmp	r0, #0
   1282c:	beq	1275c <__assert_fail@plt+0x1224>
   12830:	mov	r0, #0
   12834:	bl	113a0 <exit@plt>
   12838:	movw	r0, #43076	; 0xa844
   1283c:	movt	r0, #1
   12840:	bl	11340 <puts@plt>
   12844:	b	1275c <__assert_fail@plt+0x1224>
   12848:	movw	r0, #43096	; 0xa858
   1284c:	movt	r0, #1
   12850:	bl	11340 <puts@plt>
   12854:	b	1275c <__assert_fail@plt+0x1224>
   12858:	andeq	ip, r2, r4, lsl #5
   1285c:	strd	r4, [sp, #-24]!	; 0xffffffe8
   12860:	strd	r6, [sp, #8]
   12864:	str	r8, [sp, #16]
   12868:	str	lr, [sp, #20]
   1286c:	cmp	r0, #1
   12870:	beq	12890 <__assert_fail@plt+0x1358>
   12874:	mov	r4, r0
   12878:	mov	r6, r1
   1287c:	movw	r7, #43204	; 0xa8c4
   12880:	movt	r7, #1
   12884:	movw	r8, #43176	; 0xa8a8
   12888:	movt	r8, #1
   1288c:	b	1290c <__assert_fail@plt+0x13d4>
   12890:	movw	r0, #43116	; 0xa86c
   12894:	movt	r0, #1
   12898:	bl	11340 <puts@plt>
   1289c:	movw	r3, #49480	; 0xc148
   128a0:	movt	r3, #2
   128a4:	ldr	r2, [r3, #148]	; 0x94
   128a8:	cmp	r2, #0
   128ac:	beq	128dc <__assert_fail@plt+0x13a4>
   128b0:	add	r4, r3, #148	; 0x94
   128b4:	movw	r5, #43164	; 0xa89c
   128b8:	movt	r5, #1
   128bc:	mov	r6, #8
   128c0:	ldr	r3, [r4, #4]
   128c4:	mov	r1, r6
   128c8:	mov	r0, r5
   128cc:	bl	111f0 <printf@plt>
   128d0:	ldr	r2, [r4, #12]!
   128d4:	cmp	r2, #0
   128d8:	bne	128c0 <__assert_fail@plt+0x1388>
   128dc:	ldrd	r4, [sp]
   128e0:	ldrd	r6, [sp, #8]
   128e4:	ldr	r8, [sp, #16]
   128e8:	add	sp, sp, #20
   128ec:	pop	{pc}		; (ldr pc, [sp], #4)
   128f0:	mov	r1, r5
   128f4:	mov	r0, r8
   128f8:	bl	111f0 <printf@plt>
   128fc:	b	1290c <__assert_fail@plt+0x13d4>
   12900:	mov	r1, r5
   12904:	mov	r0, r7
   12908:	bl	111f0 <printf@plt>
   1290c:	sub	r4, r4, #1
   12910:	cmp	r4, #0
   12914:	ble	128dc <__assert_fail@plt+0x13a4>
   12918:	ldr	r5, [r6, #4]!
   1291c:	mov	r0, r5
   12920:	bl	12520 <__assert_fail@plt+0xfe8>
   12924:	cmn	r0, #1
   12928:	beq	128f0 <__assert_fail@plt+0x13b8>
   1292c:	cmp	r0, #0
   12930:	beq	12900 <__assert_fail@plt+0x13c8>
   12934:	ldr	r0, [r0, #4]
   12938:	bl	11340 <puts@plt>
   1293c:	b	1290c <__assert_fail@plt+0x13d4>
   12940:	strd	r4, [sp, #-36]!	; 0xffffffdc
   12944:	strd	r6, [sp, #8]
   12948:	strd	r8, [sp, #16]
   1294c:	strd	sl, [sp, #24]
   12950:	str	lr, [sp, #32]
   12954:	sub	sp, sp, #196	; 0xc4
   12958:	mov	r4, r0
   1295c:	str	r1, [sp, #32]
   12960:	mov	r5, r2
   12964:	str	r2, [sp, #36]	; 0x24
   12968:	mov	r1, #0
   1296c:	movw	r0, #51884	; 0xcaac
   12970:	movt	r0, #2
   12974:	bl	11304 <gettimeofday@plt>
   12978:	bl	13828 <__assert_fail@plt+0x22f0>
   1297c:	str	r0, [sp, #188]	; 0xbc
   12980:	movw	r1, #44536	; 0xadf8
   12984:	movt	r1, #1
   12988:	mov	r0, r4
   1298c:	bl	111b4 <fdopen@plt>
   12990:	str	r0, [sp, #8]
   12994:	movw	r1, #42600	; 0xa668
   12998:	movt	r1, #1
   1299c:	mov	r0, r5
   129a0:	bl	111d8 <strcmp@plt>
   129a4:	clz	r0, r0
   129a8:	lsr	r0, r0, #5
   129ac:	str	r0, [sp, #176]	; 0xb0
   129b0:	mov	r3, #0
   129b4:	str	r3, [sp, #184]	; 0xb8
   129b8:	str	r3, [sp, #172]	; 0xac
   129bc:	movw	r1, #8804	; 0x2264
   129c0:	movt	r1, #1
   129c4:	mov	r0, #14
   129c8:	bl	11274 <signal@plt>
   129cc:	movw	r3, #50496	; 0xc540
   129d0:	movt	r3, #2
   129d4:	str	r3, [sp, #12]
   129d8:	movw	r3, #51880	; 0xcaa8
   129dc:	movt	r3, #2
   129e0:	str	r3, [sp, #16]
   129e4:	movw	r3, #50276	; 0xc464
   129e8:	movt	r3, #2
   129ec:	str	r3, [sp, #20]
   129f0:	movw	r2, #49480	; 0xc148
   129f4:	movt	r2, #2
   129f8:	str	r2, [sp, #24]
   129fc:	add	r3, r3, #16
   12a00:	str	r3, [sp, #28]
   12a04:	ldr	r3, [sp, #184]	; 0xb8
   12a08:	cmp	r3, #0
   12a0c:	bne	12ab4 <__assert_fail@plt+0x157c>
   12a10:	ldr	r3, [sp, #36]	; 0x24
   12a14:	ldr	r2, [sp, #188]	; 0xbc
   12a18:	ldr	r1, [sp, #32]
   12a1c:	mov	r0, #2
   12a20:	bl	122c4 <__assert_fail@plt+0xd8c>
   12a24:	sub	r0, r0, #4
   12a28:	str	r0, [sp, #180]	; 0xb4
   12a2c:	mov	r3, #0
   12a30:	ldr	r2, [sp, #16]
   12a34:	str	r3, [r2]
   12a38:	movw	r0, #51016	; 0xc748
   12a3c:	movt	r0, #2
   12a40:	bl	11214 <_setjmp@plt>
   12a44:	movw	r7, #43032	; 0xa818
   12a48:	movt	r7, #1
   12a4c:	movw	r5, #50496	; 0xc540
   12a50:	movt	r5, #2
   12a54:	ldr	r8, [sp, #12]
   12a58:	ldr	r9, [sp, #20]
   12a5c:	ldr	r4, [sp, #24]
   12a60:	ldr	sl, [sp, #28]
   12a64:	ldr	r3, [r9, #4]
   12a68:	cmp	r3, #0
   12a6c:	bne	12b10 <__assert_fail@plt+0x15d8>
   12a70:	ldr	r2, [sp, #180]	; 0xb4
   12a74:	ldr	r3, [r9, #12]
   12a78:	str	r3, [sp, #4]
   12a7c:	str	sl, [sp]
   12a80:	mov	r3, #0
   12a84:	add	r2, r2, #4
   12a88:	ldr	r1, [sp, #188]	; 0xbc
   12a8c:	ldr	r0, [r4, #24]
   12a90:	bl	11460 <sendto@plt>
   12a94:	ldr	r3, [sp, #180]	; 0xb4
   12a98:	add	r3, r3, #4
   12a9c:	cmp	r3, r0
   12aa0:	bne	12b28 <__assert_fail@plt+0x15f0>
   12aa4:	ldr	r1, [sp, #176]	; 0xb0
   12aa8:	ldr	r0, [sp, #8]
   12aac:	bl	13874 <__assert_fail@plt+0x233c>
   12ab0:	b	12b68 <__assert_fail@plt+0x1630>
   12ab4:	ldr	r2, [sp, #176]	; 0xb0
   12ab8:	add	r1, sp, #188	; 0xbc
   12abc:	ldr	r0, [sp, #8]
   12ac0:	bl	139b4 <__assert_fail@plt+0x247c>
   12ac4:	str	r0, [sp, #180]	; 0xb4
   12ac8:	ldr	r3, [sp, #180]	; 0xb4
   12acc:	cmp	r3, #0
   12ad0:	blt	12afc <__assert_fail@plt+0x15c4>
   12ad4:	ldr	r3, [sp, #188]	; 0xbc
   12ad8:	mov	r2, #0
   12adc:	strb	r2, [r3]
   12ae0:	mov	r2, #3
   12ae4:	strb	r2, [r3, #1]
   12ae8:	ldr	r3, [sp, #184]	; 0xb8
   12aec:	rev16	r3, r3
   12af0:	ldr	r2, [sp, #188]	; 0xbc
   12af4:	strh	r3, [r2, #2]
   12af8:	b	12a2c <__assert_fail@plt+0x14f4>
   12afc:	bl	113dc <__errno_location@plt>
   12b00:	ldr	r0, [r0]
   12b04:	add	r0, r0, #100	; 0x64
   12b08:	bl	1235c <__assert_fail@plt+0xe24>
   12b0c:	b	12bfc <__assert_fail@plt+0x16c4>
   12b10:	ldr	r2, [sp, #180]	; 0xb4
   12b14:	add	r2, r2, #4
   12b18:	ldr	r1, [sp, #188]	; 0xbc
   12b1c:	mov	r0, r7
   12b20:	bl	11bd0 <__assert_fail@plt+0x698>
   12b24:	b	12a70 <__assert_fail@plt+0x1538>
   12b28:	movw	r0, #43232	; 0xa8e0
   12b2c:	movt	r0, #1
   12b30:	bl	112d4 <perror@plt>
   12b34:	b	12bfc <__assert_fail@plt+0x16c4>
   12b38:	ldrsh	r3, [r8]
   12b3c:	rev16	r3, r3
   12b40:	sxth	r2, r3
   12b44:	strh	r3, [r8]
   12b48:	ldrh	r3, [r8, #2]
   12b4c:	rev16	r3, r3
   12b50:	uxth	r1, r3
   12b54:	strh	r3, [r8, #2]
   12b58:	cmp	r2, #5
   12b5c:	beq	12be8 <__assert_fail@plt+0x16b0>
   12b60:	cmp	r2, #4
   12b64:	beq	12c3c <__assert_fail@plt+0x1704>
   12b68:	ldr	r0, [r4, #20]
   12b6c:	bl	112a4 <alarm@plt>
   12b70:	mov	r6, #128	; 0x80
   12b74:	str	r6, [sp, #40]	; 0x28
   12b78:	add	r3, sp, #40	; 0x28
   12b7c:	str	r3, [sp, #4]
   12b80:	add	r3, sp, #44	; 0x2c
   12b84:	str	r3, [sp]
   12b88:	mov	r3, #0
   12b8c:	mov	r2, #516	; 0x204
   12b90:	mov	r1, r5
   12b94:	ldr	r0, [r4, #24]
   12b98:	bl	11298 <recvfrom@plt>
   12b9c:	cmp	r0, #0
   12ba0:	ble	12b74 <__assert_fail@plt+0x163c>
   12ba4:	mov	fp, r0
   12ba8:	mov	r0, #0
   12bac:	bl	112a4 <alarm@plt>
   12bb0:	ldrh	r1, [sp, #46]	; 0x2e
   12bb4:	rev16	r1, r1
   12bb8:	uxth	r1, r1
   12bbc:	mov	r0, sl
   12bc0:	bl	116f0 <__assert_fail@plt+0x1b8>
   12bc4:	ldr	r3, [r9, #4]
   12bc8:	cmp	r3, #0
   12bcc:	beq	12b38 <__assert_fail@plt+0x1600>
   12bd0:	mov	r2, fp
   12bd4:	mov	r1, r5
   12bd8:	movw	r0, #43248	; 0xa8f0
   12bdc:	movt	r0, #1
   12be0:	bl	11bd0 <__assert_fail@plt+0x698>
   12be4:	b	12b38 <__assert_fail@plt+0x1600>
   12be8:	ldr	r2, [pc, #244]	; 12ce4 <__assert_fail@plt+0x17ac>
   12bec:	sxth	r1, r1
   12bf0:	movw	r0, #43260	; 0xa8fc
   12bf4:	movt	r0, #1
   12bf8:	bl	111f0 <printf@plt>
   12bfc:	ldr	r0, [sp, #8]
   12c00:	bl	11448 <fclose@plt>
   12c04:	mov	r1, #0
   12c08:	movw	r0, #51892	; 0xcab4
   12c0c:	movt	r0, #2
   12c10:	bl	11304 <gettimeofday@plt>
   12c14:	ldr	r3, [sp, #172]	; 0xac
   12c18:	cmp	r3, #0
   12c1c:	bne	12cd0 <__assert_fail@plt+0x1798>
   12c20:	add	sp, sp, #196	; 0xc4
   12c24:	ldrd	r4, [sp]
   12c28:	ldrd	r6, [sp, #8]
   12c2c:	ldrd	r8, [sp, #16]
   12c30:	ldrd	sl, [sp, #24]
   12c34:	add	sp, sp, #32
   12c38:	pop	{pc}		; (ldr pc, [sp], #4)
   12c3c:	ldr	r3, [sp, #184]	; 0xb8
   12c40:	cmp	r1, r3
   12c44:	beq	12c8c <__assert_fail@plt+0x1754>
   12c48:	ldr	r0, [r4, #24]
   12c4c:	bl	13c10 <__assert_fail@plt+0x26d8>
   12c50:	subs	r1, r0, #0
   12c54:	beq	12c64 <__assert_fail@plt+0x172c>
   12c58:	ldr	r3, [r9, #4]
   12c5c:	cmp	r3, #0
   12c60:	bne	12c7c <__assert_fail@plt+0x1744>
   12c64:	ldr	r3, [sp, #184]	; 0xb8
   12c68:	ldrh	r2, [r8, #2]
   12c6c:	sub	r3, r3, #1
   12c70:	cmp	r2, r3
   12c74:	bne	12b68 <__assert_fail@plt+0x1630>
   12c78:	b	12a64 <__assert_fail@plt+0x152c>
   12c7c:	movw	r0, #43280	; 0xa910
   12c80:	movt	r0, #1
   12c84:	bl	111f0 <printf@plt>
   12c88:	b	12c64 <__assert_fail@plt+0x172c>
   12c8c:	ldr	r3, [sp, #184]	; 0xb8
   12c90:	cmp	r3, #0
   12c94:	ble	12ca8 <__assert_fail@plt+0x1770>
   12c98:	ldr	r3, [sp, #180]	; 0xb4
   12c9c:	ldr	r2, [sp, #172]	; 0xac
   12ca0:	add	r3, r3, r2
   12ca4:	str	r3, [sp, #172]	; 0xac
   12ca8:	ldr	r3, [sp, #184]	; 0xb8
   12cac:	add	r3, r3, #1
   12cb0:	str	r3, [sp, #184]	; 0xb8
   12cb4:	ldr	r3, [sp, #180]	; 0xb4
   12cb8:	cmp	r3, #512	; 0x200
   12cbc:	beq	12a04 <__assert_fail@plt+0x14cc>
   12cc0:	ldr	r3, [sp, #184]	; 0xb8
   12cc4:	cmp	r3, #1
   12cc8:	bne	12bfc <__assert_fail@plt+0x16c4>
   12ccc:	b	12a04 <__assert_fail@plt+0x14cc>
   12cd0:	ldr	r1, [sp, #172]	; 0xac
   12cd4:	movw	r0, #43304	; 0xa928
   12cd8:	movt	r0, #1
   12cdc:	bl	117a4 <__assert_fail@plt+0x26c>
   12ce0:	b	12c20 <__assert_fail@plt+0x16e8>
   12ce4:	andeq	ip, r2, r4, asr #10
   12ce8:	strd	r4, [sp, #-36]!	; 0xffffffdc
   12cec:	strd	r6, [sp, #8]
   12cf0:	strd	r8, [sp, #16]
   12cf4:	strd	sl, [sp, #24]
   12cf8:	str	lr, [sp, #32]
   12cfc:	sub	sp, sp, #20
   12d00:	str	r0, [sp, #12]
   12d04:	str	r1, [sp, #8]
   12d08:	mov	r4, r0
   12d0c:	cmp	r0, #1
   12d10:	ble	12da4 <__assert_fail@plt+0x186c>
   12d14:	ldr	r9, [sp, #8]
   12d18:	sub	r3, r4, #-1073741823	; 0xc0000001
   12d1c:	ldr	r7, [r9, r3, lsl #2]
   12d20:	mov	r1, #58	; 0x3a
   12d24:	mov	r0, r7
   12d28:	bl	113c4 <strchr@plt>
   12d2c:	subs	sl, r0, #0
   12d30:	beq	12e90 <__assert_fail@plt+0x1958>
   12d34:	cmp	r4, #2
   12d38:	ble	12d6c <__assert_fail@plt+0x1834>
   12d3c:	mov	r5, r9
   12d40:	sub	r6, r4, #1
   12d44:	mov	r4, #1
   12d48:	mov	r8, #58	; 0x3a
   12d4c:	mov	r1, r8
   12d50:	ldr	r0, [r5, #4]!
   12d54:	bl	113c4 <strchr@plt>
   12d58:	cmp	r0, #0
   12d5c:	bne	12df8 <__assert_fail@plt+0x18c0>
   12d60:	add	r4, r4, #1
   12d64:	cmp	r6, r4
   12d68:	bne	12d4c <__assert_fail@plt+0x1814>
   12d6c:	ldrb	r3, [r7]
   12d70:	cmp	r3, #91	; 0x5b
   12d74:	beq	12e38 <__assert_fail@plt+0x1900>
   12d78:	mov	r3, #0
   12d7c:	strb	r3, [sl], #1
   12d80:	ldrb	r3, [r7]
   12d84:	cmp	r3, #0
   12d88:	beq	12e8c <__assert_fail@plt+0x1954>
   12d8c:	mov	r0, r7
   12d90:	bl	11ce8 <__assert_fail@plt+0x7b0>
   12d94:	cmp	r0, #0
   12d98:	moveq	r7, sl
   12d9c:	beq	12e90 <__assert_fail@plt+0x1958>
   12da0:	b	12e1c <__assert_fail@plt+0x18e4>
   12da4:	add	r3, sp, #8
   12da8:	add	r2, sp, #12
   12dac:	movw	r1, #43312	; 0xa930
   12db0:	movt	r1, #1
   12db4:	movw	r0, #43320	; 0xa938
   12db8:	movt	r0, #1
   12dbc:	bl	11af8 <__assert_fail@plt+0x5c0>
   12dc0:	ldr	r4, [sp, #12]
   12dc4:	cmp	r4, #1
   12dc8:	bgt	12d14 <__assert_fail@plt+0x17dc>
   12dcc:	ldr	r3, [sp, #8]
   12dd0:	ldr	r4, [r3]
   12dd4:	mov	r1, r4
   12dd8:	movw	r0, #43328	; 0xa940
   12ddc:	movt	r0, #1
   12de0:	bl	111f0 <printf@plt>
   12de4:	mov	r1, r4
   12de8:	movw	r0, #43364	; 0xa964
   12dec:	movt	r0, #1
   12df0:	bl	111f0 <printf@plt>
   12df4:	b	12e1c <__assert_fail@plt+0x18e4>
   12df8:	ldr	r4, [r9]
   12dfc:	mov	r1, r4
   12e00:	movw	r0, #43328	; 0xa940
   12e04:	movt	r0, #1
   12e08:	bl	111f0 <printf@plt>
   12e0c:	mov	r1, r4
   12e10:	movw	r0, #43364	; 0xa964
   12e14:	movt	r0, #1
   12e18:	bl	111f0 <printf@plt>
   12e1c:	add	sp, sp, #20
   12e20:	ldrd	r4, [sp]
   12e24:	ldrd	r6, [sp, #8]
   12e28:	ldrd	r8, [sp, #16]
   12e2c:	ldrd	sl, [sp, #24]
   12e30:	add	sp, sp, #32
   12e34:	pop	{pc}		; (ldr pc, [sp], #4)
   12e38:	mov	r1, #93	; 0x5d
   12e3c:	mov	r0, r7
   12e40:	bl	113c4 <strchr@plt>
   12e44:	cmp	r0, #0
   12e48:	beq	12e1c <__assert_fail@plt+0x18e4>
   12e4c:	mov	r3, #0
   12e50:	strb	r3, [r0]
   12e54:	ldr	r3, [sp, #12]
   12e58:	sub	r3, r3, #-1073741823	; 0xc0000001
   12e5c:	ldr	r2, [sp, #8]
   12e60:	ldr	r7, [r2, r3, lsl #2]
   12e64:	ldrb	r3, [r0, #1]
   12e68:	cmp	r3, #58	; 0x3a
   12e6c:	bne	12e90 <__assert_fail@plt+0x1958>
   12e70:	add	r3, r7, #1
   12e74:	add	r7, r0, #2
   12e78:	cmp	r3, #0
   12e7c:	beq	12e90 <__assert_fail@plt+0x1958>
   12e80:	mov	sl, r7
   12e84:	mov	r7, r3
   12e88:	b	12d8c <__assert_fail@plt+0x1854>
   12e8c:	mov	r7, sl
   12e90:	movw	r3, #50276	; 0xc464
   12e94:	movt	r3, #2
   12e98:	ldr	r3, [r3, #8]
   12e9c:	cmp	r3, #0
   12ea0:	beq	12f14 <__assert_fail@plt+0x19dc>
   12ea4:	ldr	r3, [sp, #12]
   12ea8:	cmp	r3, #3
   12eac:	bgt	12f90 <__assert_fail@plt+0x1a58>
   12eb0:	cmp	r3, #2
   12eb4:	beq	12f24 <__assert_fail@plt+0x19ec>
   12eb8:	ldr	r3, [sp, #8]
   12ebc:	ldr	r4, [r3, #4]
   12ec0:	mov	r1, #0
   12ec4:	mov	r0, r4
   12ec8:	bl	11328 <open64@plt>
   12ecc:	subs	r5, r0, #0
   12ed0:	blt	12f34 <__assert_fail@plt+0x19fc>
   12ed4:	movw	r3, #50276	; 0xc464
   12ed8:	movt	r3, #2
   12edc:	ldr	r3, [r3]
   12ee0:	cmp	r3, #0
   12ee4:	bne	12f60 <__assert_fail@plt+0x1a28>
   12ee8:	movw	r0, #50276	; 0xc464
   12eec:	movt	r0, #2
   12ef0:	ldrh	r1, [r0, #144]	; 0x90
   12ef4:	add	r0, r0, #16
   12ef8:	bl	116f0 <__assert_fail@plt+0x1b8>
   12efc:	movw	r2, #51908	; 0xcac4
   12f00:	movt	r2, #2
   12f04:	mov	r1, r7
   12f08:	mov	r0, r5
   12f0c:	bl	12940 <__assert_fail@plt+0x1408>
   12f10:	b	12e1c <__assert_fail@plt+0x18e4>
   12f14:	movw	r0, #43416	; 0xa998
   12f18:	movt	r0, #1
   12f1c:	bl	11340 <puts@plt>
   12f20:	b	12e1c <__assert_fail@plt+0x18e4>
   12f24:	mov	r0, r7
   12f28:	bl	124b0 <__assert_fail@plt+0xf78>
   12f2c:	mov	r4, r0
   12f30:	b	12ec0 <__assert_fail@plt+0x1988>
   12f34:	movw	r3, #50256	; 0xc450
   12f38:	movt	r3, #2
   12f3c:	ldr	r3, [r3]
   12f40:	mov	r2, #6
   12f44:	mov	r1, #1
   12f48:	movw	r0, #43448	; 0xa9b8
   12f4c:	movt	r0, #1
   12f50:	bl	112e0 <fwrite@plt>
   12f54:	mov	r0, r4
   12f58:	bl	112d4 <perror@plt>
   12f5c:	b	12e1c <__assert_fail@plt+0x18e4>
   12f60:	movw	r2, #51904	; 0xcac0
   12f64:	movt	r2, #2
   12f68:	movw	r3, #51908	; 0xcac4
   12f6c:	movt	r3, #2
   12f70:	str	r3, [sp]
   12f74:	mov	r3, r7
   12f78:	ldr	r2, [r2]
   12f7c:	mov	r1, r4
   12f80:	movw	r0, #43456	; 0xa9c0
   12f84:	movt	r0, #1
   12f88:	bl	111f0 <printf@plt>
   12f8c:	b	12ee8 <__assert_fail@plt+0x19b0>
   12f90:	mov	r0, r7
   12f94:	bl	113b8 <strlen@plt>
   12f98:	add	r8, r7, r0
   12f9c:	add	r8, r8, #1
   12fa0:	mov	r3, #47	; 0x2f
   12fa4:	strb	r3, [r7, r0]
   12fa8:	ldr	r3, [sp, #12]
   12fac:	cmp	r3, #2
   12fb0:	ble	12e1c <__assert_fail@plt+0x18e4>
   12fb4:	mov	r4, #1
   12fb8:	movw	r5, #50276	; 0xc464
   12fbc:	movt	r5, #2
   12fc0:	add	r9, r5, #16
   12fc4:	movw	r6, #51908	; 0xcac4
   12fc8:	movt	r6, #2
   12fcc:	b	13030 <__assert_fail@plt+0x1af8>
   12fd0:	movw	r3, #50256	; 0xc450
   12fd4:	movt	r3, #2
   12fd8:	ldr	r3, [r3]
   12fdc:	mov	r2, #6
   12fe0:	mov	r1, #1
   12fe4:	movw	r0, #43448	; 0xa9b8
   12fe8:	movt	r0, #1
   12fec:	bl	112e0 <fwrite@plt>
   12ff0:	ldr	r3, [sp, #8]
   12ff4:	ldr	r0, [r3, r4, lsl #2]
   12ff8:	bl	112d4 <perror@plt>
   12ffc:	b	1301c <__assert_fail@plt+0x1ae4>
   13000:	ldrh	r1, [r5, #144]	; 0x90
   13004:	mov	r0, r9
   13008:	bl	116f0 <__assert_fail@plt+0x1b8>
   1300c:	mov	r2, r6
   13010:	mov	r1, r7
   13014:	mov	r0, fp
   13018:	bl	12940 <__assert_fail@plt+0x1408>
   1301c:	add	r4, r4, #1
   13020:	ldr	r3, [sp, #12]
   13024:	sub	r3, r3, #1
   13028:	cmp	r3, r4
   1302c:	ble	12e1c <__assert_fail@plt+0x18e4>
   13030:	lsl	sl, r4, #2
   13034:	ldr	r3, [sp, #8]
   13038:	ldr	r0, [r3, r4, lsl #2]
   1303c:	bl	124b0 <__assert_fail@plt+0xf78>
   13040:	mov	r1, r0
   13044:	mov	r0, r8
   13048:	bl	112f8 <strcpy@plt>
   1304c:	mov	r1, #0
   13050:	ldr	r3, [sp, #8]
   13054:	ldr	r0, [r3, r4, lsl #2]
   13058:	bl	11328 <open64@plt>
   1305c:	subs	fp, r0, #0
   13060:	blt	12fd0 <__assert_fail@plt+0x1a98>
   13064:	ldr	r3, [r5]
   13068:	cmp	r3, #0
   1306c:	beq	13000 <__assert_fail@plt+0x1ac8>
   13070:	movw	r2, #51904	; 0xcac0
   13074:	movt	r2, #2
   13078:	ldr	r3, [sp, #8]
   1307c:	ldr	r1, [r3, sl]
   13080:	str	r6, [sp]
   13084:	mov	r3, r7
   13088:	ldr	r2, [r2]
   1308c:	movw	r0, #43456	; 0xa9c0
   13090:	movt	r0, #1
   13094:	bl	111f0 <printf@plt>
   13098:	b	13000 <__assert_fail@plt+0x1ac8>
   1309c:	strd	r4, [sp, #-28]!	; 0xffffffe4
   130a0:	strd	r6, [sp, #8]
   130a4:	strd	r8, [sp, #16]
   130a8:	str	lr, [sp, #24]
   130ac:	sub	sp, sp, #204	; 0xcc
   130b0:	mov	r4, r0
   130b4:	str	r1, [sp, #32]
   130b8:	mov	r5, r2
   130bc:	str	r2, [sp, #36]	; 0x24
   130c0:	mov	r1, #0
   130c4:	movw	r0, #51884	; 0xcaac
   130c8:	movt	r0, #2
   130cc:	bl	11304 <gettimeofday@plt>
   130d0:	bl	137e0 <__assert_fail@plt+0x22a8>
   130d4:	str	r0, [sp, #196]	; 0xc4
   130d8:	movw	r1, #43484	; 0xa9dc
   130dc:	movt	r1, #1
   130e0:	mov	r0, r4
   130e4:	bl	111b4 <fdopen@plt>
   130e8:	str	r0, [sp, #12]
   130ec:	movw	r1, #42600	; 0xa668
   130f0:	movt	r1, #1
   130f4:	mov	r0, r5
   130f8:	bl	111d8 <strcmp@plt>
   130fc:	clz	r0, r0
   13100:	lsr	r0, r0, #5
   13104:	str	r0, [sp, #44]	; 0x2c
   13108:	mov	r3, #1
   1310c:	str	r3, [sp, #192]	; 0xc0
   13110:	str	r3, [sp, #184]	; 0xb8
   13114:	mov	r3, #0
   13118:	str	r3, [sp, #180]	; 0xb4
   1311c:	movw	r1, #8804	; 0x2264
   13120:	movt	r1, #1
   13124:	mov	r0, #14
   13128:	bl	11274 <signal@plt>
   1312c:	movw	r3, #50496	; 0xc540
   13130:	movt	r3, #2
   13134:	str	r3, [sp, #20]
   13138:	movw	r3, #50496	; 0xc540
   1313c:	movt	r3, #2
   13140:	str	r3, [sp, #16]
   13144:	movw	r3, #50276	; 0xc464
   13148:	movt	r3, #2
   1314c:	str	r3, [sp, #24]
   13150:	movw	r3, #49480	; 0xc148
   13154:	movt	r3, #2
   13158:	str	r3, [sp, #28]
   1315c:	ldr	r3, [sp, #184]	; 0xb8
   13160:	cmp	r3, #0
   13164:	bne	13214 <__assert_fail@plt+0x1cdc>
   13168:	mov	r3, #0
   1316c:	ldr	r2, [sp, #20]
   13170:	strb	r3, [r2]
   13174:	mov	r3, #4
   13178:	strb	r3, [r2, #1]
   1317c:	ldr	r3, [sp, #192]	; 0xc0
   13180:	rev16	r3, r3
   13184:	strh	r3, [r2, #2]
   13188:	mov	r3, #4
   1318c:	str	r3, [sp, #188]	; 0xbc
   13190:	ldr	r3, [sp, #192]	; 0xc0
   13194:	add	r3, r3, #1
   13198:	str	r3, [sp, #192]	; 0xc0
   1319c:	movw	r3, #51880	; 0xcaa8
   131a0:	movt	r3, #2
   131a4:	mov	r2, #0
   131a8:	str	r2, [r3]
   131ac:	movw	r0, #51016	; 0xc748
   131b0:	movt	r0, #2
   131b4:	bl	11214 <_setjmp@plt>
   131b8:	movw	r7, #43032	; 0xa818
   131bc:	movt	r7, #1
   131c0:	ldr	r9, [sp, #24]
   131c4:	ldr	r4, [sp, #28]
   131c8:	ldr	r3, [r9, #4]
   131cc:	cmp	r3, #0
   131d0:	bne	13238 <__assert_fail@plt+0x1d00>
   131d4:	ldr	r2, [sp, #188]	; 0xbc
   131d8:	ldr	r3, [r9, #12]
   131dc:	str	r3, [sp, #4]
   131e0:	ldr	r3, [pc, #688]	; 13498 <__assert_fail@plt+0x1f60>
   131e4:	str	r3, [sp]
   131e8:	mov	r3, #0
   131ec:	ldr	r1, [sp, #16]
   131f0:	ldr	r0, [r4, #24]
   131f4:	bl	11460 <sendto@plt>
   131f8:	ldr	r3, [sp, #188]	; 0xbc
   131fc:	cmp	r3, r0
   13200:	bne	1324c <__assert_fail@plt+0x1d14>
   13204:	ldr	r1, [sp, #44]	; 0x2c
   13208:	ldr	r0, [sp, #12]
   1320c:	bl	13a4c <__assert_fail@plt+0x2514>
   13210:	b	1329c <__assert_fail@plt+0x1d64>
   13214:	ldr	r3, [sp, #36]	; 0x24
   13218:	ldr	r2, [sp, #16]
   1321c:	ldr	r1, [sp, #32]
   13220:	mov	r0, #1
   13224:	bl	122c4 <__assert_fail@plt+0xd8c>
   13228:	str	r0, [sp, #188]	; 0xbc
   1322c:	mov	r3, #0
   13230:	str	r3, [sp, #184]	; 0xb8
   13234:	b	1319c <__assert_fail@plt+0x1c64>
   13238:	ldr	r2, [sp, #188]	; 0xbc
   1323c:	ldr	r1, [sp, #16]
   13240:	mov	r0, r7
   13244:	bl	11bd0 <__assert_fail@plt+0x698>
   13248:	b	131d4 <__assert_fail@plt+0x1c9c>
   1324c:	mov	r0, #0
   13250:	bl	112a4 <alarm@plt>
   13254:	movw	r0, #43232	; 0xa8e0
   13258:	movt	r0, #1
   1325c:	bl	112d4 <perror@plt>
   13260:	b	13330 <__assert_fail@plt+0x1df8>
   13264:	ldr	r2, [sp, #196]	; 0xc4
   13268:	ldrsh	r3, [r2]
   1326c:	rev16	r3, r3
   13270:	strh	r3, [r2]
   13274:	ldr	r2, [sp, #196]	; 0xc4
   13278:	ldrh	r3, [r2, #2]
   1327c:	rev16	r3, r3
   13280:	strh	r3, [r2, #2]
   13284:	ldr	r1, [sp, #196]	; 0xc4
   13288:	ldrsh	r3, [r1]
   1328c:	cmp	r3, #5
   13290:	beq	1331c <__assert_fail@plt+0x1de4>
   13294:	cmp	r3, #3
   13298:	beq	133d4 <__assert_fail@plt+0x1e9c>
   1329c:	ldr	r0, [r4, #20]
   132a0:	bl	112a4 <alarm@plt>
   132a4:	mov	r8, #128	; 0x80
   132a8:	add	r5, sp, #52	; 0x34
   132ac:	str	r8, [sp, #48]	; 0x30
   132b0:	add	r3, sp, #48	; 0x30
   132b4:	str	r3, [sp, #4]
   132b8:	str	r5, [sp]
   132bc:	mov	r3, #0
   132c0:	mov	r2, #516	; 0x204
   132c4:	ldr	r1, [sp, #196]	; 0xc4
   132c8:	ldr	r0, [r4, #24]
   132cc:	bl	11298 <recvfrom@plt>
   132d0:	cmp	r0, #0
   132d4:	ble	132ac <__assert_fail@plt+0x1d74>
   132d8:	mov	r6, r0
   132dc:	mov	r0, #0
   132e0:	bl	112a4 <alarm@plt>
   132e4:	ldrh	r1, [sp, #54]	; 0x36
   132e8:	rev16	r1, r1
   132ec:	uxth	r1, r1
   132f0:	ldr	r0, [pc, #416]	; 13498 <__assert_fail@plt+0x1f60>
   132f4:	bl	116f0 <__assert_fail@plt+0x1b8>
   132f8:	ldr	r3, [r9, #4]
   132fc:	cmp	r3, #0
   13300:	beq	13264 <__assert_fail@plt+0x1d2c>
   13304:	mov	r2, r6
   13308:	ldr	r1, [sp, #196]	; 0xc4
   1330c:	movw	r0, #43248	; 0xa8f0
   13310:	movt	r0, #1
   13314:	bl	11bd0 <__assert_fail@plt+0x698>
   13318:	b	13264 <__assert_fail@plt+0x1d2c>
   1331c:	add	r2, r1, #4
   13320:	ldrsh	r1, [r1, #2]
   13324:	movw	r0, #43260	; 0xa8fc
   13328:	movt	r0, #1
   1332c:	bl	111f0 <printf@plt>
   13330:	mov	r4, #0
   13334:	ldr	r2, [sp, #20]
   13338:	strb	r4, [r2]
   1333c:	mov	r3, #4
   13340:	strb	r3, [r2, #1]
   13344:	ldr	r3, [sp, #192]	; 0xc0
   13348:	rev16	r3, r3
   1334c:	strh	r3, [r2, #2]
   13350:	movw	r0, #49480	; 0xc148
   13354:	movt	r0, #2
   13358:	movw	r3, #50276	; 0xc464
   1335c:	movt	r3, #2
   13360:	add	r2, r3, #16
   13364:	ldr	r3, [r3, #12]
   13368:	str	r3, [sp, #4]
   1336c:	str	r2, [sp]
   13370:	mov	r3, r4
   13374:	mov	r2, #4
   13378:	movw	r1, #50496	; 0xc540
   1337c:	movt	r1, #2
   13380:	ldr	r0, [r0, #24]
   13384:	bl	11460 <sendto@plt>
   13388:	ldr	r1, [sp, #44]	; 0x2c
   1338c:	ldr	r5, [sp, #12]
   13390:	mov	r0, r5
   13394:	bl	13a4c <__assert_fail@plt+0x2514>
   13398:	mov	r0, r5
   1339c:	bl	11448 <fclose@plt>
   133a0:	mov	r1, r4
   133a4:	movw	r0, #51892	; 0xcab4
   133a8:	movt	r0, #2
   133ac:	bl	11304 <gettimeofday@plt>
   133b0:	ldr	r3, [sp, #180]	; 0xb4
   133b4:	cmp	r3, r4
   133b8:	bne	13484 <__assert_fail@plt+0x1f4c>
   133bc:	add	sp, sp, #204	; 0xcc
   133c0:	ldrd	r4, [sp]
   133c4:	ldrd	r6, [sp, #8]
   133c8:	ldrd	r8, [sp, #16]
   133cc:	add	sp, sp, #24
   133d0:	pop	{pc}		; (ldr pc, [sp], #4)
   133d4:	ldr	r3, [sp, #192]	; 0xc0
   133d8:	ldrh	r2, [r1, #2]
   133dc:	cmp	r2, r3
   133e0:	beq	1342c <__assert_fail@plt+0x1ef4>
   133e4:	ldr	r0, [r4, #24]
   133e8:	bl	13c10 <__assert_fail@plt+0x26d8>
   133ec:	subs	r1, r0, #0
   133f0:	beq	13400 <__assert_fail@plt+0x1ec8>
   133f4:	ldr	r3, [r9, #4]
   133f8:	cmp	r3, #0
   133fc:	bne	1341c <__assert_fail@plt+0x1ee4>
   13400:	ldr	r3, [sp, #192]	; 0xc0
   13404:	ldr	r2, [sp, #196]	; 0xc4
   13408:	ldrh	r2, [r2, #2]
   1340c:	sub	r3, r3, #1
   13410:	cmp	r2, r3
   13414:	bne	1329c <__assert_fail@plt+0x1d64>
   13418:	b	131c8 <__assert_fail@plt+0x1c90>
   1341c:	movw	r0, #43280	; 0xa910
   13420:	movt	r0, #1
   13424:	bl	111f0 <printf@plt>
   13428:	b	13400 <__assert_fail@plt+0x1ec8>
   1342c:	ldr	r3, [sp, #44]	; 0x2c
   13430:	sub	r2, r6, #4
   13434:	add	r1, sp, #196	; 0xc4
   13438:	ldr	r0, [sp, #12]
   1343c:	bl	13b70 <__assert_fail@plt+0x2638>
   13440:	str	r0, [sp, #188]	; 0xbc
   13444:	ldr	r3, [sp, #188]	; 0xbc
   13448:	cmp	r3, #0
   1344c:	blt	13470 <__assert_fail@plt+0x1f38>
   13450:	ldr	r3, [sp, #188]	; 0xbc
   13454:	ldr	r2, [sp, #180]	; 0xb4
   13458:	add	r3, r3, r2
   1345c:	str	r3, [sp, #180]	; 0xb4
   13460:	ldr	r3, [sp, #188]	; 0xbc
   13464:	cmp	r3, #512	; 0x200
   13468:	bne	13330 <__assert_fail@plt+0x1df8>
   1346c:	b	1315c <__assert_fail@plt+0x1c24>
   13470:	bl	113dc <__errno_location@plt>
   13474:	ldr	r0, [r0]
   13478:	add	r0, r0, #100	; 0x64
   1347c:	bl	1235c <__assert_fail@plt+0xe24>
   13480:	b	13330 <__assert_fail@plt+0x1df8>
   13484:	ldr	r1, [sp, #180]	; 0xb4
   13488:	movw	r0, #43488	; 0xa9e0
   1348c:	movt	r0, #1
   13490:	bl	117a4 <__assert_fail@plt+0x26c>
   13494:	b	133bc <__assert_fail@plt+0x1e84>
   13498:	andeq	ip, r2, r4, ror r4
   1349c:	strd	r4, [sp, #-32]!	; 0xffffffe0
   134a0:	strd	r6, [sp, #8]
   134a4:	strd	r8, [sp, #16]
   134a8:	str	sl, [sp, #24]
   134ac:	str	lr, [sp, #28]
   134b0:	sub	sp, sp, #16
   134b4:	str	r0, [sp, #12]
   134b8:	str	r1, [sp, #8]
   134bc:	mov	r6, r0
   134c0:	cmp	r0, #1
   134c4:	ble	13514 <__assert_fail@plt+0x1fdc>
   134c8:	movw	r3, #50276	; 0xc464
   134cc:	movt	r3, #2
   134d0:	ldr	r3, [r3, #8]
   134d4:	cmp	r3, #0
   134d8:	bne	13590 <__assert_fail@plt+0x2058>
   134dc:	ldr	r8, [sp, #8]
   134e0:	mov	r5, r8
   134e4:	mov	r4, #1
   134e8:	mov	r7, #58	; 0x3a
   134ec:	mov	r1, r7
   134f0:	ldr	r0, [r5, #4]!
   134f4:	bl	113c4 <strchr@plt>
   134f8:	cmp	r0, #0
   134fc:	beq	13568 <__assert_fail@plt+0x2030>
   13500:	add	r4, r4, #1
   13504:	cmp	r4, r6
   13508:	blt	134ec <__assert_fail@plt+0x1fb4>
   1350c:	mov	r5, #1
   13510:	b	13594 <__assert_fail@plt+0x205c>
   13514:	add	r3, sp, #8
   13518:	add	r2, sp, #12
   1351c:	movw	r1, #43500	; 0xa9ec
   13520:	movt	r1, #1
   13524:	movw	r0, #43512	; 0xa9f8
   13528:	movt	r0, #1
   1352c:	bl	11af8 <__assert_fail@plt+0x5c0>
   13530:	ldr	r6, [sp, #12]
   13534:	cmp	r6, #1
   13538:	bgt	134c8 <__assert_fail@plt+0x1f90>
   1353c:	ldr	r3, [sp, #8]
   13540:	ldr	r4, [r3]
   13544:	mov	r1, r4
   13548:	movw	r0, #43516	; 0xa9fc
   1354c:	movt	r0, #1
   13550:	bl	111f0 <printf@plt>
   13554:	mov	r1, r4
   13558:	movw	r0, #43560	; 0xaa28
   1355c:	movt	r0, #1
   13560:	bl	111f0 <printf@plt>
   13564:	b	13704 <__assert_fail@plt+0x21cc>
   13568:	ldr	r4, [r8]
   1356c:	mov	r1, r4
   13570:	movw	r0, #43516	; 0xa9fc
   13574:	movt	r0, #1
   13578:	bl	111f0 <printf@plt>
   1357c:	mov	r1, r4
   13580:	movw	r0, #43560	; 0xaa28
   13584:	movt	r0, #1
   13588:	bl	111f0 <printf@plt>
   1358c:	b	13704 <__assert_fail@plt+0x21cc>
   13590:	mov	r5, #1
   13594:	movw	r7, #50276	; 0xc464
   13598:	movt	r7, #2
   1359c:	add	r9, r7, #16
   135a0:	movw	r8, #51908	; 0xcac4
   135a4:	movt	r8, #2
   135a8:	b	13648 <__assert_fail@plt+0x2110>
   135ac:	mov	r1, #93	; 0x5d
   135b0:	mov	r0, r4
   135b4:	bl	113c4 <strchr@plt>
   135b8:	cmp	r0, #0
   135bc:	beq	136a0 <__assert_fail@plt+0x2168>
   135c0:	mov	r3, #0
   135c4:	strb	r3, [r0]
   135c8:	ldrb	r3, [r0, #1]
   135cc:	cmp	r3, #58	; 0x3a
   135d0:	addne	r4, r0, #1
   135d4:	addeq	r4, r0, #2
   135d8:	ldr	r3, [sp, #8]
   135dc:	ldr	r0, [r3, sl]
   135e0:	adds	r0, r0, #1
   135e4:	bne	13690 <__assert_fail@plt+0x2158>
   135e8:	ldr	r3, [sp, #12]
   135ec:	cmp	r3, #3
   135f0:	ble	136a8 <__assert_fail@plt+0x2170>
   135f4:	mov	r0, r4
   135f8:	bl	124b0 <__assert_fail@plt+0xf78>
   135fc:	mov	sl, r0
   13600:	mov	r1, #420	; 0x1a4
   13604:	bl	11310 <creat64@plt>
   13608:	subs	r6, r0, #0
   1360c:	blt	1378c <__assert_fail@plt+0x2254>
   13610:	ldr	r3, [r7]
   13614:	cmp	r3, #0
   13618:	bne	137b8 <__assert_fail@plt+0x2280>
   1361c:	ldrh	r1, [r7, #144]	; 0x90
   13620:	mov	r0, r9
   13624:	bl	116f0 <__assert_fail@plt+0x1b8>
   13628:	mov	r2, r8
   1362c:	mov	r1, r4
   13630:	mov	r0, r6
   13634:	bl	1309c <__assert_fail@plt+0x1b64>
   13638:	add	r5, r5, #1
   1363c:	ldr	r3, [sp, #12]
   13640:	cmp	r3, r5
   13644:	ble	13704 <__assert_fail@plt+0x21cc>
   13648:	lsl	sl, r5, #2
   1364c:	ldr	r3, [sp, #8]
   13650:	ldr	r4, [r3, r5, lsl #2]
   13654:	mov	r1, #58	; 0x3a
   13658:	mov	r0, r4
   1365c:	bl	113c4 <strchr@plt>
   13660:	subs	r6, r0, #0
   13664:	beq	135e8 <__assert_fail@plt+0x20b0>
   13668:	cmp	r4, r6
   1366c:	addeq	r4, r6, #1
   13670:	beq	135e8 <__assert_fail@plt+0x20b0>
   13674:	ldrb	r3, [r4]
   13678:	cmp	r3, #91	; 0x5b
   1367c:	beq	135ac <__assert_fail@plt+0x2074>
   13680:	mov	r3, #0
   13684:	strb	r3, [r6], #1
   13688:	mov	r0, r4
   1368c:	mov	r4, r6
   13690:	bl	11ce8 <__assert_fail@plt+0x7b0>
   13694:	cmp	r0, #0
   13698:	beq	135e8 <__assert_fail@plt+0x20b0>
   1369c:	b	13638 <__assert_fail@plt+0x2100>
   136a0:	mov	r4, r6
   136a4:	b	135e8 <__assert_fail@plt+0x20b0>
   136a8:	bne	13720 <__assert_fail@plt+0x21e8>
   136ac:	ldr	r3, [sp, #8]
   136b0:	ldr	r5, [r3, #8]
   136b4:	mov	r1, #420	; 0x1a4
   136b8:	mov	r0, r5
   136bc:	bl	11310 <creat64@plt>
   136c0:	subs	r6, r0, #0
   136c4:	blt	13730 <__assert_fail@plt+0x21f8>
   136c8:	movw	r3, #50276	; 0xc464
   136cc:	movt	r3, #2
   136d0:	ldr	r3, [r3]
   136d4:	cmp	r3, #0
   136d8:	bne	1375c <__assert_fail@plt+0x2224>
   136dc:	movw	r0, #50276	; 0xc464
   136e0:	movt	r0, #2
   136e4:	ldrh	r1, [r0, #144]	; 0x90
   136e8:	add	r0, r0, #16
   136ec:	bl	116f0 <__assert_fail@plt+0x1b8>
   136f0:	movw	r2, #51908	; 0xcac4
   136f4:	movt	r2, #2
   136f8:	mov	r1, r4
   136fc:	mov	r0, r6
   13700:	bl	1309c <__assert_fail@plt+0x1b64>
   13704:	add	sp, sp, #16
   13708:	ldrd	r4, [sp]
   1370c:	ldrd	r6, [sp, #8]
   13710:	ldrd	r8, [sp, #16]
   13714:	ldr	sl, [sp, #24]
   13718:	add	sp, sp, #28
   1371c:	pop	{pc}		; (ldr pc, [sp], #4)
   13720:	mov	r0, r4
   13724:	bl	124b0 <__assert_fail@plt+0xf78>
   13728:	mov	r5, r0
   1372c:	b	136b4 <__assert_fail@plt+0x217c>
   13730:	movw	r3, #50256	; 0xc450
   13734:	movt	r3, #2
   13738:	ldr	r3, [r3]
   1373c:	mov	r2, #6
   13740:	mov	r1, #1
   13744:	movw	r0, #43448	; 0xa9b8
   13748:	movt	r0, #1
   1374c:	bl	112e0 <fwrite@plt>
   13750:	mov	r0, r5
   13754:	bl	112d4 <perror@plt>
   13758:	b	13704 <__assert_fail@plt+0x21cc>
   1375c:	movw	r1, #51904	; 0xcac0
   13760:	movt	r1, #2
   13764:	movw	r3, #51908	; 0xcac4
   13768:	movt	r3, #2
   1376c:	str	r3, [sp]
   13770:	mov	r3, r5
   13774:	mov	r2, r4
   13778:	ldr	r1, [r1]
   1377c:	movw	r0, #43604	; 0xaa54
   13780:	movt	r0, #1
   13784:	bl	111f0 <printf@plt>
   13788:	b	136dc <__assert_fail@plt+0x21a4>
   1378c:	movw	r3, #50256	; 0xc450
   13790:	movt	r3, #2
   13794:	ldr	r3, [r3]
   13798:	mov	r2, #6
   1379c:	mov	r1, #1
   137a0:	movw	r0, #43448	; 0xa9b8
   137a4:	movt	r0, #1
   137a8:	bl	112e0 <fwrite@plt>
   137ac:	mov	r0, sl
   137b0:	bl	112d4 <perror@plt>
   137b4:	b	13638 <__assert_fail@plt+0x2100>
   137b8:	movw	r1, #51904	; 0xcac0
   137bc:	movt	r1, #2
   137c0:	str	r8, [sp]
   137c4:	mov	r3, sl
   137c8:	mov	r2, r4
   137cc:	ldr	r1, [r1]
   137d0:	movw	r0, #43604	; 0xaa54
   137d4:	movt	r0, #1
   137d8:	bl	111f0 <printf@plt>
   137dc:	b	1361c <__assert_fail@plt+0x20e4>
   137e0:	movw	r3, #50428	; 0xc4fc
   137e4:	movt	r3, #2
   137e8:	mov	r2, #0
   137ec:	str	r2, [r3]
   137f0:	movw	r1, #50180	; 0xc404
   137f4:	movt	r1, #2
   137f8:	mvn	r0, #0
   137fc:	str	r0, [r1]
   13800:	movw	r0, #52140	; 0xcbac
   13804:	movt	r0, #2
   13808:	mvn	r1, #2
   1380c:	str	r1, [r0]
   13810:	str	r2, [r3, #4]
   13814:	mvn	r1, #1
   13818:	str	r1, [r0, #520]	; 0x208
   1381c:	str	r2, [r3, #8]
   13820:	add	r0, r0, #4
   13824:	bx	lr
   13828:	movw	r3, #50428	; 0xc4fc
   1382c:	movt	r3, #2
   13830:	mov	r1, #0
   13834:	str	r1, [r3]
   13838:	movw	r2, #50180	; 0xc404
   1383c:	movt	r2, #2
   13840:	mvn	r0, #0
   13844:	str	r0, [r2]
   13848:	movw	r0, #52140	; 0xcbac
   1384c:	movt	r0, #2
   13850:	mvn	r2, #2
   13854:	str	r2, [r0]
   13858:	str	r1, [r3, #4]
   1385c:	mvn	r2, #1
   13860:	str	r2, [r0, #520]	; 0x208
   13864:	mov	r2, #1
   13868:	str	r2, [r3, #8]
   1386c:	add	r0, r0, #4
   13870:	bx	lr
   13874:	strd	r4, [sp, #-36]!	; 0xffffffdc
   13878:	strd	r6, [sp, #8]
   1387c:	strd	r8, [sp, #16]
   13880:	strd	sl, [sp, #24]
   13884:	str	lr, [sp, #32]
   13888:	sub	sp, sp, #4
   1388c:	movw	r3, #50428	; 0xc4fc
   13890:	movt	r3, #2
   13894:	ldr	r9, [r3, #8]
   13898:	movw	r3, #52140	; 0xcbac
   1389c:	movt	r3, #2
   138a0:	add	r2, r9, r9, lsl #6
   138a4:	ldr	r3, [r3, r2, lsl #3]
   138a8:	cmn	r3, #2
   138ac:	bne	13994 <__assert_fail@plt+0x245c>
   138b0:	mov	r8, r0
   138b4:	movw	r3, #50428	; 0xc4fc
   138b8:	movt	r3, #2
   138bc:	clz	r2, r9
   138c0:	lsr	r2, r2, #5
   138c4:	str	r2, [r3, #8]
   138c8:	add	r6, r9, r9, lsl #6
   138cc:	ldr	r3, [pc, #220]	; 139b0 <__assert_fail@plt+0x2478>
   138d0:	add	r6, r3, r6, lsl #3
   138d4:	cmp	r1, #0
   138d8:	beq	13900 <__assert_fail@plt+0x23c8>
   138dc:	add	fp, r6, #4
   138e0:	add	r6, r6, #516	; 0x204
   138e4:	mov	r4, fp
   138e8:	movw	r5, #50428	; 0xc4fc
   138ec:	movt	r5, #2
   138f0:	movw	r7, #50180	; 0xc404
   138f4:	movt	r7, #2
   138f8:	mov	sl, #1
   138fc:	b	13958 <__assert_fail@plt+0x2420>
   13900:	bl	11430 <fileno@plt>
   13904:	mov	r2, #512	; 0x200
   13908:	add	r1, r6, #4
   1390c:	bl	111fc <read@plt>
   13910:	movw	r3, #52140	; 0xcbac
   13914:	movt	r3, #2
   13918:	add	r9, r9, r9, lsl #6
   1391c:	str	r0, [r3, r9, lsl #3]
   13920:	b	13994 <__assert_fail@plt+0x245c>
   13924:	mov	r0, r8
   13928:	bl	11520 <getc@plt>
   1392c:	cmn	r0, #1
   13930:	beq	13980 <__assert_fail@plt+0x2448>
   13934:	cmp	r0, #13
   13938:	cmpne	r0, #10
   1393c:	bne	1394c <__assert_fail@plt+0x2414>
   13940:	str	r0, [r7]
   13944:	str	sl, [r5]
   13948:	mov	r0, #13
   1394c:	strb	r0, [r4], #1
   13950:	cmp	r4, r6
   13954:	beq	1397c <__assert_fail@plt+0x2444>
   13958:	ldr	r3, [r5]
   1395c:	cmp	r3, #0
   13960:	beq	13924 <__assert_fail@plt+0x23ec>
   13964:	ldr	r0, [r7]
   13968:	cmp	r0, #10
   1396c:	movne	r0, #0
   13970:	mov	r3, #0
   13974:	str	r3, [r5]
   13978:	b	1394c <__assert_fail@plt+0x2414>
   1397c:	mov	r4, r6
   13980:	movw	r3, #52140	; 0xcbac
   13984:	movt	r3, #2
   13988:	add	r9, r9, r9, lsl #6
   1398c:	sub	r4, r4, fp
   13990:	str	r4, [r3, r9, lsl #3]
   13994:	add	sp, sp, #4
   13998:	ldrd	r4, [sp]
   1399c:	ldrd	r6, [sp, #8]
   139a0:	ldrd	r8, [sp, #16]
   139a4:	ldrd	sl, [sp, #24]
   139a8:	add	sp, sp, #32
   139ac:	pop	{pc}		; (ldr pc, [sp], #4)
   139b0:			; <UNDEFINED> instruction: 0x0002cbb0
   139b4:	strd	r4, [sp, #-16]!
   139b8:	str	r6, [sp, #8]
   139bc:	str	lr, [sp, #12]
   139c0:	mov	r5, r1
   139c4:	movw	ip, #50428	; 0xc4fc
   139c8:	movt	ip, #2
   139cc:	ldr	r4, [ip, #4]
   139d0:	movw	r3, #52140	; 0xcbac
   139d4:	movt	r3, #2
   139d8:	add	lr, r4, r4, lsl #6
   139dc:	mvn	r6, #1
   139e0:	str	r6, [r3, lr, lsl #3]
   139e4:	clz	r4, r4
   139e8:	lsr	r4, r4, #5
   139ec:	str	r4, [ip, #4]
   139f0:	lsl	ip, r4, #6
   139f4:	add	ip, ip, r4
   139f8:	ldr	r3, [r3, ip, lsl #3]
   139fc:	cmp	r3, r6
   13a00:	beq	13a40 <__assert_fail@plt+0x2508>
   13a04:	lsl	r3, r4, #6
   13a08:	add	r3, r3, r4
   13a0c:	lsl	r3, r3, #3
   13a10:	add	r3, r3, #4
   13a14:	movw	r2, #52140	; 0xcbac
   13a18:	movt	r2, #2
   13a1c:	add	r3, r3, r2
   13a20:	str	r3, [r5]
   13a24:	lsl	r3, r4, #6
   13a28:	add	r4, r3, r4
   13a2c:	ldr	r0, [r2, r4, lsl #3]
   13a30:	ldrd	r4, [sp]
   13a34:	ldr	r6, [sp, #8]
   13a38:	add	sp, sp, #12
   13a3c:	pop	{pc}		; (ldr pc, [sp], #4)
   13a40:	mov	r1, r2
   13a44:	bl	13874 <__assert_fail@plt+0x233c>
   13a48:	b	13a04 <__assert_fail@plt+0x24cc>
   13a4c:	strd	r4, [sp, #-32]!	; 0xffffffe0
   13a50:	strd	r6, [sp, #8]
   13a54:	strd	r8, [sp, #16]
   13a58:	str	sl, [sp, #24]
   13a5c:	str	lr, [sp, #28]
   13a60:	sub	sp, sp, #8
   13a64:	movw	r3, #50428	; 0xc4fc
   13a68:	movt	r3, #2
   13a6c:	ldr	r3, [r3, #8]
   13a70:	movw	r2, #52140	; 0xcbac
   13a74:	movt	r2, #2
   13a78:	add	ip, r3, r3, lsl #6
   13a7c:	ldr	r9, [r2, ip, lsl #3]
   13a80:	cmn	r9, #1
   13a84:	movlt	r9, #0
   13a88:	blt	13af8 <__assert_fail@plt+0x25c0>
   13a8c:	mov	r6, r2
   13a90:	mvn	lr, #1
   13a94:	str	lr, [r6, ip, lsl #3]
   13a98:	add	r6, r6, ip, lsl #3
   13a9c:	movw	r2, #50428	; 0xc4fc
   13aa0:	movt	r2, #2
   13aa4:	clz	r3, r3
   13aa8:	lsr	r3, r3, #5
   13aac:	str	r3, [r2, #8]
   13ab0:	add	r5, r6, #8
   13ab4:	add	r6, r6, #4
   13ab8:	cmp	r9, #0
   13abc:	ble	13b68 <__assert_fail@plt+0x2630>
   13ac0:	mov	r8, r0
   13ac4:	cmp	r1, #0
   13ac8:	beq	13ae4 <__assert_fail@plt+0x25ac>
   13acc:	add	r3, r9, #4
   13ad0:	add	r6, r6, r3
   13ad4:	movw	r7, #50180	; 0xc404
   13ad8:	movt	r7, #2
   13adc:	mov	sl, #1
   13ae0:	b	13b44 <__assert_fail@plt+0x260c>
   13ae4:	bl	11430 <fileno@plt>
   13ae8:	mov	r2, r9
   13aec:	mov	r1, r5
   13af0:	bl	11424 <write@plt>
   13af4:	mov	r9, r0
   13af8:	mov	r0, r9
   13afc:	add	sp, sp, #8
   13b00:	ldrd	r4, [sp]
   13b04:	ldrd	r6, [sp, #8]
   13b08:	ldrd	r8, [sp, #16]
   13b0c:	ldr	sl, [sp, #24]
   13b10:	add	sp, sp, #28
   13b14:	pop	{pc}		; (ldr pc, [sp], #4)
   13b18:	str	sl, [sp]
   13b1c:	mvn	r2, #0
   13b20:	mvn	r3, #0
   13b24:	mov	r0, r8
   13b28:	bl	11454 <fseeko64@plt>
   13b2c:	mov	r1, r8
   13b30:	mov	r0, r4
   13b34:	bl	114a8 <putc@plt>
   13b38:	str	r4, [r7]
   13b3c:	cmp	r6, r5
   13b40:	beq	13af8 <__assert_fail@plt+0x25c0>
   13b44:	ldrb	r4, [r5], #1
   13b48:	ldr	r3, [r7]
   13b4c:	cmp	r3, #13
   13b50:	bne	13b2c <__assert_fail@plt+0x25f4>
   13b54:	cmp	r4, #10
   13b58:	beq	13b18 <__assert_fail@plt+0x25e0>
   13b5c:	cmp	r4, #0
   13b60:	bne	13b2c <__assert_fail@plt+0x25f4>
   13b64:	b	13b38 <__assert_fail@plt+0x2600>
   13b68:	mvn	r9, #0
   13b6c:	b	13af8 <__assert_fail@plt+0x25c0>
   13b70:	strd	r4, [sp, #-16]!
   13b74:	str	r6, [sp, #8]
   13b78:	str	lr, [sp, #12]
   13b7c:	mov	r5, r1
   13b80:	mov	r4, r2
   13b84:	movw	lr, #50428	; 0xc4fc
   13b88:	movt	lr, #2
   13b8c:	ldr	r2, [lr, #4]
   13b90:	movw	ip, #52140	; 0xcbac
   13b94:	movt	ip, #2
   13b98:	add	r6, r2, r2, lsl #6
   13b9c:	str	r4, [ip, r6, lsl #3]
   13ba0:	clz	r2, r2
   13ba4:	lsr	r2, r2, #5
   13ba8:	str	r2, [lr, #4]
   13bac:	lsl	lr, r2, #6
   13bb0:	add	r2, lr, r2
   13bb4:	ldr	r2, [ip, r2, lsl #3]
   13bb8:	cmn	r2, #2
   13bbc:	bne	13c04 <__assert_fail@plt+0x26cc>
   13bc0:	movw	r3, #50428	; 0xc4fc
   13bc4:	movt	r3, #2
   13bc8:	ldr	r1, [r3, #4]
   13bcc:	movw	r3, #52140	; 0xcbac
   13bd0:	movt	r3, #2
   13bd4:	lsl	r2, r1, #6
   13bd8:	add	r0, r2, r1
   13bdc:	mvn	ip, #2
   13be0:	str	ip, [r3, r0, lsl #3]
   13be4:	add	r3, r3, r0, lsl #3
   13be8:	add	r3, r3, #4
   13bec:	str	r3, [r5]
   13bf0:	mov	r0, r4
   13bf4:	ldrd	r4, [sp]
   13bf8:	ldr	r6, [sp, #8]
   13bfc:	add	sp, sp, #12
   13c00:	pop	{pc}		; (ldr pc, [sp], #4)
   13c04:	mov	r1, r3
   13c08:	bl	13a4c <__assert_fail@plt+0x2514>
   13c0c:	b	13bc0 <__assert_fail@plt+0x2688>
   13c10:	strd	r4, [sp, #-20]!	; 0xffffffec
   13c14:	strd	r6, [sp, #8]
   13c18:	str	lr, [sp, #16]
   13c1c:	sub	sp, sp, #668	; 0x29c
   13c20:	mov	r5, r0
   13c24:	mov	r4, #0
   13c28:	movw	r6, #21531	; 0x541b
   13c2c:	mov	r7, #128	; 0x80
   13c30:	add	r2, sp, #660	; 0x294
   13c34:	mov	r1, r6
   13c38:	mov	r0, r5
   13c3c:	bl	18504 <argp_parse@@Base+0xdf0>
   13c40:	ldr	r3, [sp, #660]	; 0x294
   13c44:	cmp	r3, #0
   13c48:	beq	13c7c <__assert_fail@plt+0x2744>
   13c4c:	add	r4, r4, #1
   13c50:	str	r7, [sp, #12]
   13c54:	add	r3, sp, #12
   13c58:	str	r3, [sp, #4]
   13c5c:	add	r3, sp, #16
   13c60:	str	r3, [sp]
   13c64:	mov	r3, #0
   13c68:	mov	r2, #516	; 0x204
   13c6c:	add	r1, sp, #144	; 0x90
   13c70:	mov	r0, r5
   13c74:	bl	11298 <recvfrom@plt>
   13c78:	b	13c30 <__assert_fail@plt+0x26f8>
   13c7c:	mov	r0, r4
   13c80:	add	sp, sp, #668	; 0x29c
   13c84:	ldrd	r4, [sp]
   13c88:	ldrd	r6, [sp, #8]
   13c8c:	add	sp, sp, #16
   13c90:	pop	{pc}		; (ldr pc, [sp], #4)
   13c94:	ldr	r3, [r0]
   13c98:	ldr	r2, [r0, #4]
   13c9c:	cmp	r2, #0
   13ca0:	beq	13cdc <__assert_fail@plt+0x27a4>
   13ca4:	add	r3, r3, #24
   13ca8:	b	13cb8 <__assert_fail@plt+0x2780>
   13cac:	add	r3, r3, #24
   13cb0:	subs	r2, r2, #1
   13cb4:	beq	13cd4 <__assert_fail@plt+0x279c>
   13cb8:	ldr	r0, [r3, #-24]	; 0xffffffe8
   13cbc:	cmp	r0, #0
   13cc0:	beq	13cac <__assert_fail@plt+0x2774>
   13cc4:	ldr	r1, [r3, #-12]
   13cc8:	tst	r1, #2
   13ccc:	bne	13cac <__assert_fail@plt+0x2774>
   13cd0:	bx	lr
   13cd4:	mov	r0, #0
   13cd8:	bx	lr
   13cdc:	mov	r0, #0
   13ce0:	b	13cd0 <__assert_fail@plt+0x2798>
   13ce4:	ldr	r2, [r0, #8]
   13ce8:	cmp	r2, #0
   13cec:	beq	13cf8 <__assert_fail@plt+0x27c0>
   13cf0:	mov	r0, #0
   13cf4:	bx	lr
   13cf8:	ldr	r2, [r1, #8]
   13cfc:	cmp	r2, #0
   13d00:	bne	13cf0 <__assert_fail@plt+0x27b8>
   13d04:	ldr	r2, [r0, #12]
   13d08:	ldr	r1, [r1, #12]
   13d0c:	orr	r2, r2, r1
   13d10:	tst	r2, #16
   13d14:	bne	13cf0 <__assert_fail@plt+0x27b8>
   13d18:	ldr	r1, [r0, #4]
   13d1c:	ldr	r2, [r3]
   13d20:	add	r0, r2, #1
   13d24:	str	r0, [r3]
   13d28:	strb	r1, [r2]
   13d2c:	b	13cf0 <__assert_fail@plt+0x27b8>
   13d30:	str	r4, [sp, #-8]!
   13d34:	str	lr, [sp, #4]
   13d38:	mov	r4, r0
   13d3c:	bl	11394 <__ctype_b_loc@plt>
   13d40:	ldr	r3, [r4]
   13d44:	ldrb	r2, [r3]
   13d48:	ldr	ip, [r0]
   13d4c:	lsl	r1, r2, #1
   13d50:	ldrh	r1, [ip, r1]
   13d54:	tst	r1, #8192	; 0x2000
   13d58:	beq	13d68 <__assert_fail@plt+0x2830>
   13d5c:	add	r3, r3, #1
   13d60:	str	r3, [r4]
   13d64:	b	13d40 <__assert_fail@plt+0x2808>
   13d68:	subs	ip, r2, #45	; 0x2d
   13d6c:	movne	ip, #1
   13d70:	cmp	r2, #0
   13d74:	beq	13da8 <__assert_fail@plt+0x2870>
   13d78:	tst	r1, #8
   13d7c:	bne	13da8 <__assert_fail@plt+0x2870>
   13d80:	add	r3, r3, #1
   13d84:	str	r3, [r4]
   13d88:	ldrb	r2, [r3]
   13d8c:	cmp	r2, #0
   13d90:	beq	13da8 <__assert_fail@plt+0x2870>
   13d94:	ldr	r1, [r0]
   13d98:	lsl	r2, r2, #1
   13d9c:	ldrh	r2, [r1, r2]
   13da0:	tst	r2, #8
   13da4:	beq	13d80 <__assert_fail@plt+0x2848>
   13da8:	mov	r0, ip
   13dac:	ldr	r4, [sp]
   13db0:	add	sp, sp, #4
   13db4:	pop	{pc}		; (ldr pc, [sp], #4)
   13db8:	strd	r4, [sp, #-16]!
   13dbc:	str	r6, [sp, #8]
   13dc0:	str	lr, [sp, #12]
   13dc4:	mov	r5, r0
   13dc8:	ldr	r0, [r0, #12]
   13dcc:	cmp	r0, #0
   13dd0:	beq	13de8 <__assert_fail@plt+0x28b0>
   13dd4:	ldr	r4, [r0, #24]
   13dd8:	bl	183ec <argp_parse@@Base+0xcd8>
   13ddc:	mov	r0, r4
   13de0:	cmp	r4, #0
   13de4:	bne	13dd4 <__assert_fail@plt+0x289c>
   13de8:	ldr	r3, [r5, #4]
   13dec:	cmp	r3, #0
   13df0:	bne	13e0c <__assert_fail@plt+0x28d4>
   13df4:	mov	r0, r5
   13df8:	bl	183ec <argp_parse@@Base+0xcd8>
   13dfc:	ldrd	r4, [sp]
   13e00:	ldr	r6, [sp, #8]
   13e04:	add	sp, sp, #12
   13e08:	pop	{pc}		; (ldr pc, [sp], #4)
   13e0c:	ldr	r0, [r5]
   13e10:	bl	183ec <argp_parse@@Base+0xcd8>
   13e14:	ldr	r0, [r5, #8]
   13e18:	bl	183ec <argp_parse@@Base+0xcd8>
   13e1c:	b	13df4 <__assert_fail@plt+0x28bc>
   13e20:	strd	r4, [sp, #-24]!	; 0xffffffe8
   13e24:	strd	r6, [sp, #8]
   13e28:	str	r8, [sp, #16]
   13e2c:	str	lr, [sp, #20]
   13e30:	mov	r6, r1
   13e34:	ldr	r7, [r0]
   13e38:	ldr	r3, [r0, #4]
   13e3c:	sub	r8, r3, #1
   13e40:	cmp	r3, #0
   13e44:	bne	13eb0 <__assert_fail@plt+0x2978>
   13e48:	mov	r7, #0
   13e4c:	b	13e88 <__assert_fail@plt+0x2950>
   13e50:	sub	r5, r5, #1
   13e54:	add	r4, r4, #24
   13e58:	cmn	r5, #1
   13e5c:	beq	13ea0 <__assert_fail@plt+0x2968>
   13e60:	ldr	r0, [r4, #-24]	; 0xffffffe8
   13e64:	cmp	r0, #0
   13e68:	beq	13e50 <__assert_fail@plt+0x2918>
   13e6c:	ldr	r3, [r4, #-12]
   13e70:	tst	r3, #2
   13e74:	bne	13e50 <__assert_fail@plt+0x2918>
   13e78:	mov	r1, r6
   13e7c:	bl	111d8 <strcmp@plt>
   13e80:	cmp	r0, #0
   13e84:	bne	13e50 <__assert_fail@plt+0x2918>
   13e88:	mov	r0, r7
   13e8c:	ldrd	r4, [sp]
   13e90:	ldrd	r6, [sp, #8]
   13e94:	ldr	r8, [sp, #16]
   13e98:	add	sp, sp, #20
   13e9c:	pop	{pc}		; (ldr pc, [sp], #4)
   13ea0:	add	r7, r7, #28
   13ea4:	sub	r8, r8, #1
   13ea8:	cmn	r8, #1
   13eac:	beq	13ecc <__assert_fail@plt+0x2994>
   13eb0:	ldr	r4, [r7]
   13eb4:	ldr	r3, [r7, #4]
   13eb8:	sub	r5, r3, #1
   13ebc:	cmp	r3, #0
   13ec0:	beq	13ea0 <__assert_fail@plt+0x2968>
   13ec4:	add	r4, r4, #24
   13ec8:	b	13e60 <__assert_fail@plt+0x2928>
   13ecc:	mov	r7, #0
   13ed0:	b	13e88 <__assert_fail@plt+0x2950>
   13ed4:	strd	r4, [sp, #-16]!
   13ed8:	str	r6, [sp, #8]
   13edc:	str	lr, [sp, #12]
   13ee0:	ldr	r4, [r0, #16]
   13ee4:	ldr	r0, [r0, #8]
   13ee8:	cmp	r0, #0
   13eec:	moveq	r5, #0
   13ef0:	beq	13f04 <__assert_fail@plt+0x29cc>
   13ef4:	mov	r1, #10
   13ef8:	bl	113c4 <strchr@plt>
   13efc:	adds	r5, r0, #0
   13f00:	movne	r5, #1
   13f04:	cmp	r4, #0
   13f08:	beq	13f2c <__assert_fail@plt+0x29f4>
   13f0c:	ldr	r0, [r4]
   13f10:	cmp	r0, #0
   13f14:	beq	13f2c <__assert_fail@plt+0x29f4>
   13f18:	bl	13ed4 <__assert_fail@plt+0x299c>
   13f1c:	add	r5, r5, r0
   13f20:	ldr	r0, [r4, #16]!
   13f24:	cmp	r0, #0
   13f28:	bne	13f18 <__assert_fail@plt+0x29e0>
   13f2c:	mov	r0, r5
   13f30:	ldrd	r4, [sp]
   13f34:	ldr	r6, [sp, #8]
   13f38:	add	sp, sp, #12
   13f3c:	pop	{pc}		; (ldr pc, [sp], #4)
   13f40:	strd	r4, [sp, #-16]!
   13f44:	str	r6, [sp, #8]
   13f48:	str	lr, [sp, #12]
   13f4c:	mov	r4, r0
   13f50:	subs	r5, r2, #0
   13f54:	beq	13f8c <__assert_fail@plt+0x2a54>
   13f58:	mov	r6, r1
   13f5c:	ldr	r2, [r5, #20]
   13f60:	cmp	r2, #0
   13f64:	beq	13f8c <__assert_fail@plt+0x2a54>
   13f68:	mov	r1, r3
   13f6c:	mov	r0, r5
   13f70:	bl	18268 <argp_parse@@Base+0xb54>
   13f74:	ldr	r3, [r5, #20]
   13f78:	mov	r2, r0
   13f7c:	mov	r1, r4
   13f80:	mov	r0, r6
   13f84:	blx	r3
   13f88:	mov	r4, r0
   13f8c:	mov	r0, r4
   13f90:	ldrd	r4, [sp]
   13f94:	ldr	r6, [sp, #8]
   13f98:	add	sp, sp, #12
   13f9c:	pop	{pc}		; (ldr pc, [sp], #4)
   13fa0:	strd	r4, [sp, #-36]!	; 0xffffffdc
   13fa4:	strd	r6, [sp, #8]
   13fa8:	strd	r8, [sp, #16]
   13fac:	strd	sl, [sp, #24]
   13fb0:	str	lr, [sp, #32]
   13fb4:	sub	sp, sp, #20
   13fb8:	ldr	r4, [r0]
   13fbc:	ldr	r9, [r0, #8]
   13fc0:	ldr	r6, [r0, #4]
   13fc4:	cmp	r6, #0
   13fc8:	beq	1401c <__assert_fail@plt+0x2ae4>
   13fcc:	str	r3, [sp, #12]
   13fd0:	str	r2, [sp, #8]
   13fd4:	str	r1, [sp, #4]
   13fd8:	mov	fp, r4
   13fdc:	mov	sl, #0
   13fe0:	b	1406c <__assert_fail@plt+0x2b34>
   13fe4:	and	r3, r5, #4
   13fe8:	cmp	r3, #0
   13fec:	moveq	fp, r4
   13ff0:	tst	r5, #2
   13ff4:	bne	14014 <__assert_fail@plt+0x2adc>
   13ff8:	ldr	r3, [sp, #12]
   13ffc:	ldr	r2, [sp, #8]
   14000:	mov	r1, fp
   14004:	mov	r0, r4
   14008:	ldr	ip, [sp, #4]
   1400c:	blx	ip
   14010:	mov	r7, r0
   14014:	add	r9, r9, #1
   14018:	b	1404c <__assert_fail@plt+0x2b14>
   1401c:	mov	r7, #0
   14020:	mov	r0, r7
   14024:	add	sp, sp, #20
   14028:	ldrd	r4, [sp]
   1402c:	ldrd	r6, [sp, #8]
   14030:	ldrd	r8, [sp, #16]
   14034:	ldrd	sl, [sp, #24]
   14038:	add	sp, sp, #32
   1403c:	pop	{pc}		; (ldr pc, [sp], #4)
   14040:	ldrb	r3, [r9]
   14044:	cmp	r3, r8
   14048:	beq	13fe4 <__assert_fail@plt+0x2aac>
   1404c:	add	r4, r4, #24
   14050:	subs	r6, r6, #1
   14054:	movne	r3, #1
   14058:	moveq	r3, #0
   1405c:	cmp	r7, #0
   14060:	movne	r3, #0
   14064:	cmp	r3, #0
   14068:	beq	14020 <__assert_fail@plt+0x2ae8>
   1406c:	ldr	r5, [r4, #12]
   14070:	ands	r7, r5, #8
   14074:	movne	r7, sl
   14078:	bne	1404c <__assert_fail@plt+0x2b14>
   1407c:	ldr	r8, [r4, #4]
   14080:	sub	r3, r8, #1
   14084:	cmp	r3, #254	; 0xfe
   14088:	bhi	1404c <__assert_fail@plt+0x2b14>
   1408c:	bl	11394 <__ctype_b_loc@plt>
   14090:	ldr	r2, [r0]
   14094:	lsl	r3, r8, #1
   14098:	ldrh	r3, [r2, r3]
   1409c:	tst	r3, #16384	; 0x4000
   140a0:	bne	14040 <__assert_fail@plt+0x2b08>
   140a4:	b	1404c <__assert_fail@plt+0x2b14>
   140a8:	strd	r4, [sp, #-36]!	; 0xffffffdc
   140ac:	strd	r6, [sp, #8]
   140b0:	strd	r8, [sp, #16]
   140b4:	strd	sl, [sp, #24]
   140b8:	str	lr, [sp, #32]
   140bc:	add	fp, sp, #32
   140c0:	sub	sp, sp, #20
   140c4:	ldr	r5, [r0, #4]
   140c8:	cmp	r5, #0
   140cc:	beq	14274 <__assert_fail@plt+0x2d3c>
   140d0:	str	r1, [fp, #-48]	; 0xffffffd0
   140d4:	mov	r6, r0
   140d8:	ldr	r0, [r0, #8]
   140dc:	bl	113b8 <strlen@plt>
   140e0:	add	r3, r0, #8
   140e4:	bic	r3, r3, #7
   140e8:	sub	sp, sp, r3
   140ec:	mov	r8, sp
   140f0:	str	r8, [fp, #-40]	; 0xffffffd8
   140f4:	ldr	r4, [r6]
   140f8:	movw	r7, #15588	; 0x3ce4
   140fc:	movt	r7, #1
   14100:	ldr	r2, [r4, #20]
   14104:	sub	r3, fp, #40	; 0x28
   14108:	ldr	r2, [r2, #24]
   1410c:	mov	r1, r7
   14110:	mov	r0, r4
   14114:	bl	13fa0 <__assert_fail@plt+0x2a68>
   14118:	add	r4, r4, #28
   1411c:	subs	r5, r5, #1
   14120:	bne	14100 <__assert_fail@plt+0x2bc8>
   14124:	ldr	r3, [fp, #-40]	; 0xffffffd8
   14128:	cmp	r3, r8
   1412c:	bhi	141a0 <__assert_fail@plt+0x2c68>
   14130:	ldr	r4, [r6]
   14134:	ldr	r5, [r6, #4]
   14138:	cmp	r5, #0
   1413c:	beq	14274 <__assert_fail@plt+0x2d3c>
   14140:	movw	r7, #17516	; 0x446c
   14144:	movt	r7, #1
   14148:	ldr	r2, [r4, #20]
   1414c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   14150:	ldr	r2, [r2, #24]
   14154:	mov	r1, r7
   14158:	mov	r0, r4
   1415c:	bl	13fa0 <__assert_fail@plt+0x2a68>
   14160:	add	r4, r4, #28
   14164:	subs	r5, r5, #1
   14168:	bne	14148 <__assert_fail@plt+0x2c10>
   1416c:	ldr	r7, [r6]
   14170:	ldr	r8, [r6, #4]
   14174:	cmp	r8, #0
   14178:	beq	14274 <__assert_fail@plt+0x2d3c>
   1417c:	add	r7, r7, #28
   14180:	movw	sl, #44156	; 0xac7c
   14184:	movt	sl, #1
   14188:	movw	r9, #44140	; 0xac6c
   1418c:	movt	r9, #1
   14190:	movw	r3, #44168	; 0xac88
   14194:	movt	r3, #1
   14198:	str	r3, [fp, #-52]	; 0xffffffcc
   1419c:	b	1425c <__assert_fail@plt+0x2d24>
   141a0:	add	r2, r3, #1
   141a4:	str	r2, [fp, #-40]	; 0xffffffd8
   141a8:	mov	r2, #0
   141ac:	strb	r2, [r3]
   141b0:	mov	r2, r8
   141b4:	movw	r1, #44132	; 0xac64
   141b8:	movt	r1, #1
   141bc:	ldr	r0, [fp, #-48]	; 0xffffffd0
   141c0:	bl	19734 <argp_parse@@Base+0x2020>
   141c4:	b	14130 <__assert_fail@plt+0x2bf8>
   141c8:	tst	r1, #16
   141cc:	bne	14200 <__assert_fail@plt+0x2cc8>
   141d0:	ldr	r3, [r6, #8]
   141d4:	cmp	r3, #0
   141d8:	bne	141ec <__assert_fail@plt+0x2cb4>
   141dc:	ldr	r1, [fp, #-52]	; 0xffffffcc
   141e0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   141e4:	bl	19734 <argp_parse@@Base+0x2020>
   141e8:	b	14200 <__assert_fail@plt+0x2cc8>
   141ec:	tst	r1, #1
   141f0:	movne	r1, r9
   141f4:	moveq	r1, sl
   141f8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   141fc:	bl	19734 <argp_parse@@Base+0x2020>
   14200:	add	r4, r4, #24
   14204:	subs	r5, r5, #1
   14208:	beq	14250 <__assert_fail@plt+0x2d18>
   1420c:	ldr	r2, [r4]
   14210:	cmp	r2, #0
   14214:	beq	14200 <__assert_fail@plt+0x2cc8>
   14218:	ldr	r1, [r4, #12]
   1421c:	and	r3, r1, #4
   14220:	cmp	r3, #0
   14224:	moveq	r6, r4
   14228:	tst	r1, #2
   1422c:	bne	14200 <__assert_fail@plt+0x2cc8>
   14230:	ldr	r3, [r4, #8]
   14234:	ldr	r0, [r6, #12]
   14238:	orr	r1, r1, r0
   1423c:	cmp	r3, #0
   14240:	beq	141c8 <__assert_fail@plt+0x2c90>
   14244:	tst	r1, #16
   14248:	beq	141ec <__assert_fail@plt+0x2cb4>
   1424c:	b	14200 <__assert_fail@plt+0x2cc8>
   14250:	add	r7, r7, #28
   14254:	subs	r8, r8, #1
   14258:	beq	14274 <__assert_fail@plt+0x2d3c>
   1425c:	ldr	r4, [r7, #-28]	; 0xffffffe4
   14260:	ldr	r5, [r7, #-24]	; 0xffffffe8
   14264:	cmp	r5, #0
   14268:	beq	14250 <__assert_fail@plt+0x2d18>
   1426c:	mov	r6, r4
   14270:	b	1420c <__assert_fail@plt+0x2cd4>
   14274:	sub	sp, fp, #32
   14278:	ldrd	r4, [sp]
   1427c:	ldrd	r6, [sp, #8]
   14280:	ldrd	r8, [sp, #16]
   14284:	ldrd	sl, [sp, #24]
   14288:	add	sp, sp, #32
   1428c:	pop	{pc}		; (ldr pc, [sp], #4)
   14290:	strd	r4, [sp, #-24]!	; 0xffffffe8
   14294:	strd	r6, [sp, #8]
   14298:	str	r8, [sp, #16]
   1429c:	str	lr, [sp, #20]
   142a0:	mov	r4, r0
   142a4:	mov	r5, r1
   142a8:	ldr	r3, [r0, #28]
   142ac:	ldr	r2, [r0, #24]
   142b0:	sub	r3, r3, r2
   142b4:	ldr	r2, [r0, #16]
   142b8:	cmp	r3, r2
   142bc:	bhi	142d8 <__assert_fail@plt+0x2da0>
   142c0:	ldr	r3, [r4, #20]
   142c4:	cmp	r3, #0
   142c8:	subge	r5, r5, r3
   142cc:	mov	r6, #32
   142d0:	mov	r7, #1
   142d4:	b	142f4 <__assert_fail@plt+0x2dbc>
   142d8:	bl	190bc <argp_parse@@Base+0x19a8>
   142dc:	b	142c0 <__assert_fail@plt+0x2d88>
   142e0:	ldr	r3, [r4, #28]
   142e4:	add	r2, r3, #1
   142e8:	str	r2, [r4, #28]
   142ec:	strb	r6, [r3]
   142f0:	sub	r5, r5, #1
   142f4:	cmp	r5, #0
   142f8:	ble	14324 <__assert_fail@plt+0x2dec>
   142fc:	ldr	r2, [r4, #28]
   14300:	ldr	r3, [r4, #32]
   14304:	cmp	r2, r3
   14308:	bcc	142e0 <__assert_fail@plt+0x2da8>
   1430c:	mov	r1, r7
   14310:	mov	r0, r4
   14314:	bl	19634 <argp_parse@@Base+0x1f20>
   14318:	cmp	r0, #0
   1431c:	bne	142e0 <__assert_fail@plt+0x2da8>
   14320:	b	142f0 <__assert_fail@plt+0x2db8>
   14324:	ldrd	r4, [sp]
   14328:	ldrd	r6, [sp, #8]
   1432c:	ldr	r8, [sp, #16]
   14330:	add	sp, sp, #20
   14334:	pop	{pc}		; (ldr pc, [sp], #4)
   14338:	strd	r4, [sp, #-16]!
   1433c:	str	r6, [sp, #8]
   14340:	str	lr, [sp, #12]
   14344:	ldr	r4, [r0, #12]
   14348:	ands	r4, r4, #8
   1434c:	movne	r4, #0
   14350:	bne	14380 <__assert_fail@plt+0x2e48>
   14354:	ldr	r5, [r0, #4]
   14358:	sub	r3, r5, #1
   1435c:	cmp	r3, #254	; 0xfe
   14360:	bhi	14380 <__assert_fail@plt+0x2e48>
   14364:	bl	11394 <__ctype_b_loc@plt>
   14368:	ldr	r2, [r0]
   1436c:	lsl	r3, r5, #1
   14370:	ldrh	r3, [r2, r3]
   14374:	and	r3, r3, #16384	; 0x4000
   14378:	cmp	r3, #0
   1437c:	movne	r4, r5
   14380:	mov	r0, r4
   14384:	ldrd	r4, [sp]
   14388:	ldr	r6, [sp, #8]
   1438c:	add	sp, sp, #12
   14390:	pop	{pc}		; (ldr pc, [sp], #4)
   14394:	strd	r4, [sp, #-16]!
   14398:	str	r6, [sp, #8]
   1439c:	str	lr, [sp, #12]
   143a0:	mov	r4, r0
   143a4:	mov	r5, r1
   143a8:	ldr	r3, [r0, #28]
   143ac:	ldr	r2, [r0, #24]
   143b0:	sub	r3, r3, r2
   143b4:	ldr	r2, [r0, #16]
   143b8:	cmp	r3, r2
   143bc:	bhi	1440c <__assert_fail@plt+0x2ed4>
   143c0:	ldr	r3, [r4, #20]
   143c4:	cmp	r3, #0
   143c8:	addge	r5, r5, r3
   143cc:	ldr	r3, [r4, #8]
   143d0:	cmp	r5, r3
   143d4:	bcc	1442c <__assert_fail@plt+0x2ef4>
   143d8:	ldr	r2, [r4, #28]
   143dc:	ldr	r3, [r4, #32]
   143e0:	cmp	r2, r3
   143e4:	bcs	14414 <__assert_fail@plt+0x2edc>
   143e8:	ldr	r3, [r4, #28]
   143ec:	add	r2, r3, #1
   143f0:	str	r2, [r4, #28]
   143f4:	mov	r2, #10
   143f8:	strb	r2, [r3]
   143fc:	ldrd	r4, [sp]
   14400:	ldr	r6, [sp, #8]
   14404:	add	sp, sp, #12
   14408:	pop	{pc}		; (ldr pc, [sp], #4)
   1440c:	bl	190bc <argp_parse@@Base+0x19a8>
   14410:	b	143c0 <__assert_fail@plt+0x2e88>
   14414:	mov	r1, #1
   14418:	mov	r0, r4
   1441c:	bl	19634 <argp_parse@@Base+0x1f20>
   14420:	cmp	r0, #0
   14424:	bne	143e8 <__assert_fail@plt+0x2eb0>
   14428:	b	143fc <__assert_fail@plt+0x2ec4>
   1442c:	ldr	r2, [r4, #28]
   14430:	ldr	r3, [r4, #32]
   14434:	cmp	r2, r3
   14438:	bcs	14454 <__assert_fail@plt+0x2f1c>
   1443c:	ldr	r3, [r4, #28]
   14440:	add	r2, r3, #1
   14444:	str	r2, [r4, #28]
   14448:	mov	r2, #32
   1444c:	strb	r2, [r3]
   14450:	b	143fc <__assert_fail@plt+0x2ec4>
   14454:	mov	r1, #1
   14458:	mov	r0, r4
   1445c:	bl	19634 <argp_parse@@Base+0x1f20>
   14460:	cmp	r0, #0
   14464:	bne	1443c <__assert_fail@plt+0x2f04>
   14468:	b	143fc <__assert_fail@plt+0x2ec4>
   1446c:	strd	r4, [sp, #-16]!
   14470:	str	r6, [sp, #8]
   14474:	str	lr, [sp, #12]
   14478:	ldr	r5, [r0, #8]
   1447c:	cmp	r5, #0
   14480:	beq	144c4 <__assert_fail@plt+0x2f8c>
   14484:	ldr	r2, [r0, #12]
   14488:	ldr	r1, [r1, #12]
   1448c:	orr	r2, r2, r1
   14490:	tst	r2, #16
   14494:	bne	144d0 <__assert_fail@plt+0x2f98>
   14498:	mov	r6, r3
   1449c:	mov	r4, r0
   144a0:	tst	r2, #1
   144a4:	beq	144e4 <__assert_fail@plt+0x2fac>
   144a8:	mov	r3, r5
   144ac:	ldr	r2, [r0, #4]
   144b0:	movw	r1, #44176	; 0xac90
   144b4:	movt	r1, #1
   144b8:	mov	r0, r6
   144bc:	bl	19734 <argp_parse@@Base+0x2020>
   144c0:	b	144d0 <__assert_fail@plt+0x2f98>
   144c4:	ldr	r5, [r1, #8]
   144c8:	cmp	r5, #0
   144cc:	bne	14484 <__assert_fail@plt+0x2f4c>
   144d0:	mov	r0, #0
   144d4:	ldrd	r4, [sp]
   144d8:	ldr	r6, [sp, #8]
   144dc:	add	sp, sp, #12
   144e0:	pop	{pc}		; (ldr pc, [sp], #4)
   144e4:	mov	r0, r5
   144e8:	bl	113b8 <strlen@plt>
   144ec:	add	r1, r0, #6
   144f0:	mov	r0, r6
   144f4:	bl	14394 <__assert_fail@plt+0x2e5c>
   144f8:	mov	r3, r5
   144fc:	ldr	r2, [r4, #4]
   14500:	movw	r1, #44188	; 0xac9c
   14504:	movt	r1, #1
   14508:	mov	r0, r6
   1450c:	bl	19734 <argp_parse@@Base+0x2020>
   14510:	b	144d0 <__assert_fail@plt+0x2f98>
   14514:	strd	r4, [sp, #-36]!	; 0xffffffdc
   14518:	strd	r6, [sp, #8]
   1451c:	strd	r8, [sp, #16]
   14520:	strd	sl, [sp, #24]
   14524:	str	lr, [sp, #32]
   14528:	sub	sp, sp, #28
   1452c:	str	r1, [sp, #8]
   14530:	mov	sl, r2
   14534:	mov	r4, r3
   14538:	ldr	r9, [sp, #64]	; 0x40
   1453c:	ldr	r6, [r2]
   14540:	str	r6, [sp, #20]
   14544:	ldr	r7, [r0, #16]
   14548:	ldr	r2, [r0, #8]
   1454c:	mov	ip, r2
   14550:	str	r2, [sp, #16]
   14554:	mov	r3, r1
   14558:	mov	r2, r0
   1455c:	mov	r1, #6
   14560:	movt	r1, #512	; 0x200
   14564:	mov	r0, ip
   14568:	bl	13f40 <__assert_fail@plt+0x2a08>
   1456c:	cmp	r0, #0
   14570:	str	r0, [sp, #12]
   14574:	beq	14704 <__assert_fail@plt+0x31cc>
   14578:	mov	r1, #10
   1457c:	bl	1122c <strchrnul@plt>
   14580:	mov	r5, r0
   14584:	ldrb	r3, [r0]
   14588:	cmp	r3, #0
   1458c:	beq	146d4 <__assert_fail@plt+0x319c>
   14590:	ldrb	fp, [r6]
   14594:	cmp	fp, #0
   14598:	ble	146cc <__assert_fail@plt+0x3194>
   1459c:	mov	r6, #0
   145a0:	add	r8, r0, #1
   145a4:	mov	r1, #10
   145a8:	mov	r0, r8
   145ac:	bl	1122c <strchrnul@plt>
   145b0:	add	r6, r6, #1
   145b4:	cmp	r6, fp
   145b8:	bne	145a0 <__assert_fail@plt+0x3068>
   145bc:	mov	r5, r0
   145c0:	ldr	r3, [sl]
   145c4:	add	r3, r3, #1
   145c8:	str	r3, [sl]
   145cc:	mov	fp, #1
   145d0:	add	r1, r5, #1
   145d4:	sub	r1, r1, r8
   145d8:	mov	r0, r9
   145dc:	bl	14394 <__assert_fail@plt+0x2e5c>
   145e0:	sub	r6, r5, r8
   145e4:	ldr	r3, [r9, #28]
   145e8:	add	r3, r3, r6
   145ec:	ldr	r2, [r9, #32]
   145f0:	cmp	r2, r3
   145f4:	bcs	1460c <__assert_fail@plt+0x30d4>
   145f8:	mov	r1, r6
   145fc:	mov	r0, r9
   14600:	bl	19634 <argp_parse@@Base+0x1f20>
   14604:	cmp	r0, #0
   14608:	beq	14628 <__assert_fail@plt+0x30f0>
   1460c:	mov	r2, r6
   14610:	mov	r1, r8
   14614:	ldr	r0, [r9, #28]
   14618:	bl	11268 <memcpy@plt>
   1461c:	ldr	r3, [r9, #28]
   14620:	add	r6, r3, r6
   14624:	str	r6, [r9, #28]
   14628:	ldr	r2, [sp, #16]
   1462c:	ldr	r3, [sp, #12]
   14630:	cmp	r2, r3
   14634:	bne	146e0 <__assert_fail@plt+0x31a8>
   14638:	cmp	r7, #0
   1463c:	beq	14678 <__assert_fail@plt+0x3140>
   14640:	ldr	r0, [r7]
   14644:	cmp	r0, #0
   14648:	beq	14678 <__assert_fail@plt+0x3140>
   1464c:	mov	r3, r4
   14650:	str	r9, [sp]
   14654:	mov	r2, sl
   14658:	ldr	r1, [sp, #8]
   1465c:	bl	14514 <__assert_fail@plt+0x2fdc>
   14660:	clz	r3, r0
   14664:	lsr	r3, r3, #5
   14668:	ldr	r0, [r7, #16]!
   1466c:	cmp	r0, #0
   14670:	bne	14650 <__assert_fail@plt+0x3118>
   14674:	mov	r4, r3
   14678:	cmp	r4, #0
   1467c:	moveq	fp, #0
   14680:	cmp	fp, #0
   14684:	beq	146a8 <__assert_fail@plt+0x3170>
   14688:	ldrb	r3, [r5]
   1468c:	cmp	r3, #0
   14690:	beq	146ec <__assert_fail@plt+0x31b4>
   14694:	ldr	r2, [sp, #20]
   14698:	ldrb	r3, [r2]
   1469c:	add	r3, r3, #1
   146a0:	strb	r3, [r2]
   146a4:	mov	r4, #0
   146a8:	clz	r0, r4
   146ac:	lsr	r0, r0, #5
   146b0:	add	sp, sp, #28
   146b4:	ldrd	r4, [sp]
   146b8:	ldrd	r6, [sp, #8]
   146bc:	ldrd	r8, [sp, #16]
   146c0:	ldrd	sl, [sp, #24]
   146c4:	add	sp, sp, #32
   146c8:	pop	{pc}		; (ldr pc, [sp], #4)
   146cc:	ldr	r8, [sp, #12]
   146d0:	b	145c0 <__assert_fail@plt+0x3088>
   146d4:	ldr	r8, [sp, #12]
   146d8:	mov	fp, #0
   146dc:	b	145d0 <__assert_fail@plt+0x3098>
   146e0:	mov	r0, r3
   146e4:	bl	183ec <argp_parse@@Base+0xcd8>
   146e8:	b	14638 <__assert_fail@plt+0x3100>
   146ec:	ldr	r2, [sp, #20]
   146f0:	ldrb	r3, [r2]
   146f4:	cmp	r3, #0
   146f8:	movne	r3, #0
   146fc:	strbne	r3, [r2]
   14700:	b	146a8 <__assert_fail@plt+0x3170>
   14704:	cmp	r7, #0
   14708:	beq	146a8 <__assert_fail@plt+0x3170>
   1470c:	ldr	r5, [sp, #12]
   14710:	mov	fp, #0
   14714:	b	14640 <__assert_fail@plt+0x3108>
   14718:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1471c:	strd	r6, [sp, #8]
   14720:	str	r8, [sp, #16]
   14724:	str	lr, [sp, #20]
   14728:	mov	r6, r0
   1472c:	mov	r4, r2
   14730:	ldr	r3, [r2, #16]
   14734:	mov	r2, r1
   14738:	mov	r1, #3
   1473c:	movt	r1, #512	; 0x200
   14740:	bl	13f40 <__assert_fail@plt+0x2a08>
   14744:	subs	r5, r0, #0
   14748:	beq	1485c <__assert_fail@plt+0x3324>
   1474c:	ldrb	r3, [r5]
   14750:	cmp	r3, #0
   14754:	beq	14850 <__assert_fail@plt+0x3318>
   14758:	ldr	r3, [r4, #8]
   1475c:	ldr	r3, [r3]
   14760:	cmp	r3, #0
   14764:	beq	14790 <__assert_fail@plt+0x3258>
   14768:	ldr	r7, [r4, #4]
   1476c:	ldr	r2, [r7, #28]
   14770:	ldr	r3, [r7, #32]
   14774:	cmp	r2, r3
   14778:	bcs	14880 <__assert_fail@plt+0x3348>
   1477c:	ldr	r3, [r7, #28]
   14780:	add	r2, r3, #1
   14784:	str	r2, [r7, #28]
   14788:	mov	r2, #10
   1478c:	strb	r2, [r3]
   14790:	movw	r8, #50184	; 0xc408
   14794:	movt	r8, #2
   14798:	ldr	r1, [r8, #24]
   1479c:	ldr	r0, [r4, #4]
   147a0:	bl	14290 <__assert_fail@plt+0x2d58>
   147a4:	ldr	r7, [r4, #4]
   147a8:	ldr	r8, [r8, #24]
   147ac:	ldr	r3, [r7, #28]
   147b0:	ldr	r2, [r7, #24]
   147b4:	sub	r3, r3, r2
   147b8:	ldr	r2, [r7, #16]
   147bc:	cmp	r3, r2
   147c0:	bhi	14898 <__assert_fail@plt+0x3360>
   147c4:	str	r8, [r7, #4]
   147c8:	ldr	r7, [r4, #4]
   147cc:	movw	r3, #50184	; 0xc408
   147d0:	movt	r3, #2
   147d4:	ldr	r8, [r3, #24]
   147d8:	ldr	r3, [r7, #28]
   147dc:	ldr	r2, [r7, #24]
   147e0:	sub	r3, r3, r2
   147e4:	ldr	r2, [r7, #16]
   147e8:	cmp	r3, r2
   147ec:	bhi	148a4 <__assert_fail@plt+0x336c>
   147f0:	str	r8, [r7, #12]
   147f4:	mov	r0, r5
   147f8:	bl	113b8 <strlen@plt>
   147fc:	subs	r7, r0, #0
   14800:	bne	148b0 <__assert_fail@plt+0x3378>
   14804:	ldr	r7, [r4, #4]
   14808:	ldr	r3, [r7, #28]
   1480c:	ldr	r2, [r7, #24]
   14810:	sub	r3, r3, r2
   14814:	ldr	r2, [r7, #16]
   14818:	cmp	r3, r2
   1481c:	bhi	148fc <__assert_fail@plt+0x33c4>
   14820:	mov	r3, #0
   14824:	str	r3, [r7, #4]
   14828:	ldr	r7, [r4, #4]
   1482c:	ldr	r2, [r7, #28]
   14830:	ldr	r3, [r7, #32]
   14834:	cmp	r2, r3
   14838:	bcs	14908 <__assert_fail@plt+0x33d0>
   1483c:	ldr	r3, [r7, #28]
   14840:	add	r2, r3, #1
   14844:	str	r2, [r7, #28]
   14848:	mov	r2, #10
   1484c:	strb	r2, [r3]
   14850:	ldr	r3, [r4, #8]
   14854:	mov	r2, #1
   14858:	str	r2, [r3, #4]
   1485c:	cmp	r6, r5
   14860:	beq	1486c <__assert_fail@plt+0x3334>
   14864:	mov	r0, r5
   14868:	bl	183ec <argp_parse@@Base+0xcd8>
   1486c:	ldrd	r4, [sp]
   14870:	ldrd	r6, [sp, #8]
   14874:	ldr	r8, [sp, #16]
   14878:	add	sp, sp, #20
   1487c:	pop	{pc}		; (ldr pc, [sp], #4)
   14880:	mov	r1, #1
   14884:	mov	r0, r7
   14888:	bl	19634 <argp_parse@@Base+0x1f20>
   1488c:	cmp	r0, #0
   14890:	bne	1477c <__assert_fail@plt+0x3244>
   14894:	b	14790 <__assert_fail@plt+0x3258>
   14898:	mov	r0, r7
   1489c:	bl	190bc <argp_parse@@Base+0x19a8>
   148a0:	b	147c4 <__assert_fail@plt+0x328c>
   148a4:	mov	r0, r7
   148a8:	bl	190bc <argp_parse@@Base+0x19a8>
   148ac:	b	147f0 <__assert_fail@plt+0x32b8>
   148b0:	ldr	r8, [r4, #4]
   148b4:	ldr	r3, [r8, #28]
   148b8:	add	r3, r3, r7
   148bc:	ldr	r2, [r8, #32]
   148c0:	cmp	r2, r3
   148c4:	bcs	148dc <__assert_fail@plt+0x33a4>
   148c8:	mov	r1, r7
   148cc:	mov	r0, r8
   148d0:	bl	19634 <argp_parse@@Base+0x1f20>
   148d4:	cmp	r0, #0
   148d8:	beq	14804 <__assert_fail@plt+0x32cc>
   148dc:	mov	r2, r7
   148e0:	mov	r1, r5
   148e4:	ldr	r0, [r8, #28]
   148e8:	bl	11268 <memcpy@plt>
   148ec:	ldr	r3, [r8, #28]
   148f0:	add	r7, r3, r7
   148f4:	str	r7, [r8, #28]
   148f8:	b	14804 <__assert_fail@plt+0x32cc>
   148fc:	mov	r0, r7
   14900:	bl	190bc <argp_parse@@Base+0x19a8>
   14904:	b	14820 <__assert_fail@plt+0x32e8>
   14908:	mov	r1, #1
   1490c:	mov	r0, r7
   14910:	bl	19634 <argp_parse@@Base+0x1f20>
   14914:	cmp	r0, #0
   14918:	bne	1483c <__assert_fail@plt+0x3304>
   1491c:	b	14850 <__assert_fail@plt+0x3318>
   14920:	strd	r4, [sp, #-24]!	; 0xffffffe8
   14924:	strd	r6, [sp, #8]
   14928:	str	r8, [sp, #16]
   1492c:	str	lr, [sp, #20]
   14930:	mov	r6, r0
   14934:	mov	r4, r1
   14938:	ldr	r3, [r1, #12]
   1493c:	cmp	r3, #0
   14940:	beq	14a74 <__assert_fail@plt+0x353c>
   14944:	ldr	r3, [r1, #8]
   14948:	ldr	r7, [r3]
   1494c:	ldr	r2, [r1]
   14950:	ldr	r5, [r2, #16]
   14954:	ldr	r3, [r3, #4]
   14958:	cmp	r3, #0
   1495c:	cmpne	r7, #0
   14960:	bne	14a14 <__assert_fail@plt+0x34dc>
   14964:	cmp	r5, #0
   14968:	beq	149ec <__assert_fail@plt+0x34b4>
   1496c:	ldr	r0, [r5]
   14970:	cmp	r0, #0
   14974:	beq	149ec <__assert_fail@plt+0x34b4>
   14978:	ldrb	r3, [r0]
   1497c:	cmp	r3, #0
   14980:	beq	149ec <__assert_fail@plt+0x34b4>
   14984:	cmp	r7, #0
   14988:	beq	149b8 <__assert_fail@plt+0x3480>
   1498c:	ldr	r3, [r7, #16]
   14990:	cmp	r3, r5
   14994:	beq	149ec <__assert_fail@plt+0x34b4>
   14998:	cmp	r3, #0
   1499c:	beq	149b8 <__assert_fail@plt+0x3480>
   149a0:	ldr	r3, [r3, #12]
   149a4:	cmp	r3, #0
   149a8:	cmpne	r5, r3
   149ac:	bne	149a0 <__assert_fail@plt+0x3468>
   149b0:	cmp	r5, r3
   149b4:	beq	149ec <__assert_fail@plt+0x34b4>
   149b8:	ldr	r3, [r4, #4]
   149bc:	ldr	r7, [r3, #12]
   149c0:	mov	r2, r4
   149c4:	ldr	r1, [r5, #16]
   149c8:	bl	14718 <__assert_fail@plt+0x31e0>
   149cc:	ldr	r5, [r4, #4]
   149d0:	ldr	r3, [r5, #28]
   149d4:	ldr	r2, [r5, #24]
   149d8:	sub	r3, r3, r2
   149dc:	ldr	r2, [r5, #16]
   149e0:	cmp	r3, r2
   149e4:	bhi	14a68 <__assert_fail@plt+0x3530>
   149e8:	str	r7, [r5, #12]
   149ec:	mov	r3, #0
   149f0:	str	r3, [r4, #12]
   149f4:	mov	r1, r6
   149f8:	ldr	r0, [r4, #4]
   149fc:	bl	14290 <__assert_fail@plt+0x2d58>
   14a00:	ldrd	r4, [sp]
   14a04:	ldrd	r6, [sp, #8]
   14a08:	ldr	r8, [sp, #16]
   14a0c:	add	sp, sp, #20
   14a10:	pop	{pc}		; (ldr pc, [sp], #4)
   14a14:	ldr	r2, [r2, #12]
   14a18:	ldr	r3, [r7, #12]
   14a1c:	cmp	r2, r3
   14a20:	beq	14964 <__assert_fail@plt+0x342c>
   14a24:	ldr	r8, [r1, #4]
   14a28:	ldr	r2, [r8, #28]
   14a2c:	ldr	r3, [r8, #32]
   14a30:	cmp	r2, r3
   14a34:	bcs	14a50 <__assert_fail@plt+0x3518>
   14a38:	ldr	r3, [r8, #28]
   14a3c:	add	r2, r3, #1
   14a40:	str	r2, [r8, #28]
   14a44:	mov	r2, #10
   14a48:	strb	r2, [r3]
   14a4c:	b	14964 <__assert_fail@plt+0x342c>
   14a50:	mov	r1, #1
   14a54:	mov	r0, r8
   14a58:	bl	19634 <argp_parse@@Base+0x1f20>
   14a5c:	cmp	r0, #0
   14a60:	bne	14a38 <__assert_fail@plt+0x3500>
   14a64:	b	14964 <__assert_fail@plt+0x342c>
   14a68:	mov	r0, r5
   14a6c:	bl	190bc <argp_parse@@Base+0x19a8>
   14a70:	b	149e8 <__assert_fail@plt+0x34b0>
   14a74:	ldr	r5, [r1, #4]
   14a78:	ldr	r3, [r5, #28]
   14a7c:	add	r3, r3, #2
   14a80:	ldr	r2, [r5, #32]
   14a84:	cmp	r2, r3
   14a88:	bcs	14aa0 <__assert_fail@plt+0x3568>
   14a8c:	mov	r1, #2
   14a90:	mov	r0, r5
   14a94:	bl	19634 <argp_parse@@Base+0x1f20>
   14a98:	cmp	r0, #0
   14a9c:	beq	149f4 <__assert_fail@plt+0x34bc>
   14aa0:	ldr	r2, [r5, #28]
   14aa4:	movw	r3, #44200	; 0xaca8
   14aa8:	movt	r3, #1
   14aac:	ldrh	r3, [r3]
   14ab0:	strh	r3, [r2]
   14ab4:	ldr	r3, [r5, #28]
   14ab8:	add	r3, r3, #2
   14abc:	str	r3, [r5, #28]
   14ac0:	b	149f4 <__assert_fail@plt+0x34bc>
   14ac4:	strd	r4, [sp, #-36]!	; 0xffffffdc
   14ac8:	strd	r6, [sp, #8]
   14acc:	strd	r8, [sp, #16]
   14ad0:	strd	sl, [sp, #24]
   14ad4:	str	lr, [sp, #32]
   14ad8:	sub	sp, sp, #28
   14adc:	mov	r8, r0
   14ae0:	str	r1, [sp, #12]
   14ae4:	str	r2, [sp, #8]
   14ae8:	mov	fp, r3
   14aec:	ldr	sl, [sp, #64]	; 0x40
   14af0:	ldr	r4, [sp, #68]	; 0x44
   14af4:	ldr	r6, [r0, #12]
   14af8:	ldr	r9, [r0, #16]
   14afc:	cmp	r6, #0
   14b00:	beq	14f7c <__assert_fail@plt+0x3a44>
   14b04:	mov	r5, r2
   14b08:	mov	r1, #11
   14b0c:	mov	r0, r6
   14b10:	bl	113c4 <strchr@plt>
   14b14:	cmp	r5, #0
   14b18:	beq	14b58 <__assert_fail@plt+0x3620>
   14b1c:	cmp	r0, #0
   14b20:	addne	r6, r0, #1
   14b24:	beq	14fc4 <__assert_fail@plt+0x3a8c>
   14b28:	ldr	r3, [r8, #20]
   14b2c:	cmp	r3, #0
   14b30:	beq	14fcc <__assert_fail@plt+0x3a94>
   14b34:	ldr	r1, [sp, #12]
   14b38:	mov	r0, r8
   14b3c:	bl	18268 <argp_parse@@Base+0xb54>
   14b40:	str	r0, [sp, #16]
   14b44:	ldr	r3, [r8, #20]
   14b48:	mov	r7, #0
   14b4c:	mov	r0, #2
   14b50:	movt	r0, #512	; 0x200
   14b54:	b	14ba4 <__assert_fail@plt+0x366c>
   14b58:	cmp	r0, #0
   14b5c:	beq	14fe8 <__assert_fail@plt+0x3ab0>
   14b60:	sub	r7, r0, r6
   14b64:	ldr	r3, [r8, #20]
   14b68:	cmp	r3, #0
   14b6c:	beq	14d8c <__assert_fail@plt+0x3854>
   14b70:	cmp	r7, #0
   14b74:	beq	14b88 <__assert_fail@plt+0x3650>
   14b78:	mov	r1, r7
   14b7c:	mov	r0, r6
   14b80:	bl	1125c <strndup@plt>
   14b84:	mov	r6, r0
   14b88:	ldr	r1, [sp, #12]
   14b8c:	mov	r0, r8
   14b90:	bl	18268 <argp_parse@@Base+0xb54>
   14b94:	str	r0, [sp, #16]
   14b98:	ldr	r3, [r8, #20]
   14b9c:	mov	r0, #1
   14ba0:	movt	r0, #512	; 0x200
   14ba4:	ldr	r2, [sp, #16]
   14ba8:	mov	r1, r6
   14bac:	blx	r3
   14bb0:	subs	r5, r0, #0
   14bb4:	beq	14e98 <__assert_fail@plt+0x3960>
   14bb8:	cmp	fp, #0
   14bbc:	bne	14d9c <__assert_fail@plt+0x3864>
   14bc0:	cmp	r5, r6
   14bc4:	movne	r3, #0
   14bc8:	moveq	r3, #1
   14bcc:	cmp	r7, #0
   14bd0:	moveq	r3, #0
   14bd4:	cmp	r3, #0
   14bd8:	beq	14ddc <__assert_fail@plt+0x38a4>
   14bdc:	ldr	r3, [r4, #28]
   14be0:	add	r3, r3, r7
   14be4:	ldr	r2, [r4, #32]
   14be8:	cmp	r2, r3
   14bec:	bcs	14c04 <__assert_fail@plt+0x36cc>
   14bf0:	mov	r1, r7
   14bf4:	mov	r0, r4
   14bf8:	bl	19634 <argp_parse@@Base+0x1f20>
   14bfc:	cmp	r0, #0
   14c00:	beq	14c20 <__assert_fail@plt+0x36e8>
   14c04:	mov	r2, r7
   14c08:	mov	r1, r6
   14c0c:	ldr	r0, [r4, #28]
   14c10:	bl	11268 <memcpy@plt>
   14c14:	ldr	r3, [r4, #28]
   14c18:	add	r3, r3, r7
   14c1c:	str	r3, [r4, #28]
   14c20:	ldr	r3, [r4, #28]
   14c24:	ldr	r2, [r4, #24]
   14c28:	sub	r3, r3, r2
   14c2c:	ldr	r2, [r4, #16]
   14c30:	cmp	r3, r2
   14c34:	bhi	14e3c <__assert_fail@plt+0x3904>
   14c38:	ldr	r3, [r4, #20]
   14c3c:	bic	r3, r3, r3, asr #31
   14c40:	ldr	r2, [r4, #4]
   14c44:	cmp	r2, r3
   14c48:	bcc	14e48 <__assert_fail@plt+0x3910>
   14c4c:	cmp	r5, r6
   14c50:	moveq	r5, #1
   14c54:	bne	14e88 <__assert_fail@plt+0x3950>
   14c58:	cmp	r6, #0
   14c5c:	cmpne	r7, #0
   14c60:	beq	14c78 <__assert_fail@plt+0x3740>
   14c64:	ldr	r3, [r8, #20]
   14c68:	cmp	r3, #0
   14c6c:	beq	14cfc <__assert_fail@plt+0x37c4>
   14c70:	mov	r0, r6
   14c74:	bl	183ec <argp_parse@@Base+0xcd8>
   14c78:	ldr	r3, [sp, #8]
   14c7c:	cmp	r3, #0
   14c80:	beq	14cfc <__assert_fail@plt+0x37c4>
   14c84:	ldr	r3, [r8, #20]
   14c88:	cmp	r3, #0
   14c8c:	beq	14cfc <__assert_fail@plt+0x37c4>
   14c90:	ldr	r2, [sp, #16]
   14c94:	mov	r1, #0
   14c98:	mov	r0, #4
   14c9c:	movt	r0, #512	; 0x200
   14ca0:	blx	r3
   14ca4:	subs	r6, r0, #0
   14ca8:	beq	14cfc <__assert_fail@plt+0x37c4>
   14cac:	orrs	r3, fp, r5
   14cb0:	bne	14ea0 <__assert_fail@plt+0x3968>
   14cb4:	mov	r0, r6
   14cb8:	bl	113b8 <strlen@plt>
   14cbc:	subs	r5, r0, #0
   14cc0:	bne	14ee0 <__assert_fail@plt+0x39a8>
   14cc4:	mov	r0, r6
   14cc8:	bl	183ec <argp_parse@@Base+0xcd8>
   14ccc:	ldr	r3, [r4, #28]
   14cd0:	ldr	r2, [r4, #24]
   14cd4:	sub	r3, r3, r2
   14cd8:	ldr	r2, [r4, #16]
   14cdc:	cmp	r3, r2
   14ce0:	bhi	14f28 <__assert_fail@plt+0x39f0>
   14ce4:	ldr	r3, [r4, #20]
   14ce8:	bic	r3, r3, r3, asr #31
   14cec:	ldr	r2, [r4, #4]
   14cf0:	cmp	r2, r3
   14cf4:	movcs	r5, #1
   14cf8:	bcc	14f34 <__assert_fail@plt+0x39fc>
   14cfc:	cmp	r9, #0
   14d00:	beq	14d6c <__assert_fail@plt+0x3834>
   14d04:	ldr	r0, [r9]
   14d08:	cmp	r0, #0
   14d0c:	beq	14d6c <__assert_fail@plt+0x3834>
   14d10:	clz	r6, sl
   14d14:	lsr	r6, r6, #5
   14d18:	cmp	sl, #0
   14d1c:	cmpne	r5, #0
   14d20:	bne	14d6c <__assert_fail@plt+0x3834>
   14d24:	orrs	r3, fp, r5
   14d28:	str	r4, [sp, #4]
   14d2c:	str	sl, [sp]
   14d30:	movne	r3, #1
   14d34:	moveq	r3, #0
   14d38:	ldr	r2, [sp, #8]
   14d3c:	ldr	r1, [sp, #12]
   14d40:	bl	14ac4 <__assert_fail@plt+0x358c>
   14d44:	orr	r5, r5, r0
   14d48:	ldr	r0, [r9, #16]
   14d4c:	cmp	r0, #0
   14d50:	beq	14d6c <__assert_fail@plt+0x3834>
   14d54:	add	r9, r9, #16
   14d58:	cmp	r5, #0
   14d5c:	movne	r3, r6
   14d60:	moveq	r3, #1
   14d64:	cmp	r3, #0
   14d68:	bne	14d24 <__assert_fail@plt+0x37ec>
   14d6c:	mov	r0, r5
   14d70:	add	sp, sp, #28
   14d74:	ldrd	r4, [sp]
   14d78:	ldrd	r6, [sp, #8]
   14d7c:	ldrd	r8, [sp, #16]
   14d80:	ldrd	sl, [sp, #24]
   14d84:	add	sp, sp, #32
   14d88:	pop	{pc}		; (ldr pc, [sp], #4)
   14d8c:	mov	r5, r6
   14d90:	mov	r3, #0
   14d94:	str	r3, [sp, #16]
   14d98:	b	14bb8 <__assert_fail@plt+0x3680>
   14d9c:	ldr	r2, [r4, #28]
   14da0:	ldr	r3, [r4, #32]
   14da4:	cmp	r2, r3
   14da8:	bcs	14dc4 <__assert_fail@plt+0x388c>
   14dac:	ldr	r3, [r4, #28]
   14db0:	add	r2, r3, #1
   14db4:	str	r2, [r4, #28]
   14db8:	mov	r2, #10
   14dbc:	strb	r2, [r3]
   14dc0:	b	14bc0 <__assert_fail@plt+0x3688>
   14dc4:	mov	r1, #1
   14dc8:	mov	r0, r4
   14dcc:	bl	19634 <argp_parse@@Base+0x1f20>
   14dd0:	cmp	r0, #0
   14dd4:	bne	14dac <__assert_fail@plt+0x3874>
   14dd8:	b	14bc0 <__assert_fail@plt+0x3688>
   14ddc:	mov	r0, r5
   14de0:	bl	113b8 <strlen@plt>
   14de4:	subs	r3, r0, #0
   14de8:	str	r3, [sp, #20]
   14dec:	beq	14c20 <__assert_fail@plt+0x36e8>
   14df0:	ldr	r3, [r4, #28]
   14df4:	mov	r1, r0
   14df8:	add	r3, r3, r0
   14dfc:	ldr	r2, [r4, #32]
   14e00:	cmp	r2, r3
   14e04:	bcs	14e18 <__assert_fail@plt+0x38e0>
   14e08:	mov	r0, r4
   14e0c:	bl	19634 <argp_parse@@Base+0x1f20>
   14e10:	cmp	r0, #0
   14e14:	beq	14c20 <__assert_fail@plt+0x36e8>
   14e18:	ldr	r2, [sp, #20]
   14e1c:	mov	r1, r5
   14e20:	ldr	r0, [r4, #28]
   14e24:	bl	11268 <memcpy@plt>
   14e28:	ldr	r3, [r4, #28]
   14e2c:	ldr	r2, [sp, #20]
   14e30:	add	r3, r3, r2
   14e34:	str	r3, [r4, #28]
   14e38:	b	14c20 <__assert_fail@plt+0x36e8>
   14e3c:	mov	r0, r4
   14e40:	bl	190bc <argp_parse@@Base+0x19a8>
   14e44:	b	14c38 <__assert_fail@plt+0x3700>
   14e48:	ldr	r2, [r4, #28]
   14e4c:	ldr	r3, [r4, #32]
   14e50:	cmp	r2, r3
   14e54:	bcs	14e70 <__assert_fail@plt+0x3938>
   14e58:	ldr	r3, [r4, #28]
   14e5c:	add	r2, r3, #1
   14e60:	str	r2, [r4, #28]
   14e64:	mov	r2, #10
   14e68:	strb	r2, [r3]
   14e6c:	b	14c4c <__assert_fail@plt+0x3714>
   14e70:	mov	r1, #1
   14e74:	mov	r0, r4
   14e78:	bl	19634 <argp_parse@@Base+0x1f20>
   14e7c:	cmp	r0, #0
   14e80:	bne	14e58 <__assert_fail@plt+0x3920>
   14e84:	b	14c4c <__assert_fail@plt+0x3714>
   14e88:	mov	r0, r5
   14e8c:	bl	183ec <argp_parse@@Base+0xcd8>
   14e90:	mov	r5, #1
   14e94:	b	14c58 <__assert_fail@plt+0x3720>
   14e98:	mov	r5, #0
   14e9c:	b	14c58 <__assert_fail@plt+0x3720>
   14ea0:	ldr	r2, [r4, #28]
   14ea4:	ldr	r3, [r4, #32]
   14ea8:	cmp	r2, r3
   14eac:	bcs	14ec8 <__assert_fail@plt+0x3990>
   14eb0:	ldr	r3, [r4, #28]
   14eb4:	add	r2, r3, #1
   14eb8:	str	r2, [r4, #28]
   14ebc:	mov	r2, #10
   14ec0:	strb	r2, [r3]
   14ec4:	b	14cb4 <__assert_fail@plt+0x377c>
   14ec8:	mov	r1, #1
   14ecc:	mov	r0, r4
   14ed0:	bl	19634 <argp_parse@@Base+0x1f20>
   14ed4:	cmp	r0, #0
   14ed8:	bne	14eb0 <__assert_fail@plt+0x3978>
   14edc:	b	14cb4 <__assert_fail@plt+0x377c>
   14ee0:	ldr	r3, [r4, #28]
   14ee4:	add	r3, r3, r5
   14ee8:	ldr	r2, [r4, #32]
   14eec:	cmp	r2, r3
   14ef0:	bcs	14f08 <__assert_fail@plt+0x39d0>
   14ef4:	mov	r1, r5
   14ef8:	mov	r0, r4
   14efc:	bl	19634 <argp_parse@@Base+0x1f20>
   14f00:	cmp	r0, #0
   14f04:	beq	14cc4 <__assert_fail@plt+0x378c>
   14f08:	mov	r2, r5
   14f0c:	mov	r1, r6
   14f10:	ldr	r0, [r4, #28]
   14f14:	bl	11268 <memcpy@plt>
   14f18:	ldr	r3, [r4, #28]
   14f1c:	add	r5, r3, r5
   14f20:	str	r5, [r4, #28]
   14f24:	b	14cc4 <__assert_fail@plt+0x378c>
   14f28:	mov	r0, r4
   14f2c:	bl	190bc <argp_parse@@Base+0x19a8>
   14f30:	b	14ce4 <__assert_fail@plt+0x37ac>
   14f34:	ldr	r2, [r4, #28]
   14f38:	ldr	r3, [r4, #32]
   14f3c:	cmp	r2, r3
   14f40:	bcs	14f60 <__assert_fail@plt+0x3a28>
   14f44:	ldr	r3, [r4, #28]
   14f48:	add	r2, r3, #1
   14f4c:	str	r2, [r4, #28]
   14f50:	mov	r2, #10
   14f54:	strb	r2, [r3]
   14f58:	mov	r5, #1
   14f5c:	b	14cfc <__assert_fail@plt+0x37c4>
   14f60:	mov	r1, #1
   14f64:	mov	r0, r4
   14f68:	bl	19634 <argp_parse@@Base+0x1f20>
   14f6c:	cmp	r0, #0
   14f70:	bne	14f44 <__assert_fail@plt+0x3a0c>
   14f74:	mov	r5, #1
   14f78:	b	14cfc <__assert_fail@plt+0x37c4>
   14f7c:	ldr	r3, [r0, #20]
   14f80:	cmp	r3, #0
   14f84:	moveq	r5, r6
   14f88:	beq	14fd0 <__assert_fail@plt+0x3a98>
   14f8c:	ldr	r1, [sp, #12]
   14f90:	mov	r0, r8
   14f94:	bl	18268 <argp_parse@@Base+0xb54>
   14f98:	str	r0, [sp, #16]
   14f9c:	ldr	r3, [r8, #20]
   14fa0:	mov	r7, #0
   14fa4:	mov	r0, #2
   14fa8:	movt	r0, #512	; 0x200
   14fac:	mov	r2, #1
   14fb0:	movt	r2, #512	; 0x200
   14fb4:	ldr	r1, [sp, #8]
   14fb8:	cmp	r1, r7
   14fbc:	moveq	r0, r2
   14fc0:	b	14ba4 <__assert_fail@plt+0x366c>
   14fc4:	mov	r6, r0
   14fc8:	b	14b28 <__assert_fail@plt+0x35f0>
   14fcc:	mov	r5, r6
   14fd0:	cmp	r5, #0
   14fd4:	streq	r5, [sp, #16]
   14fd8:	beq	14c78 <__assert_fail@plt+0x3740>
   14fdc:	mov	r7, #0
   14fe0:	str	r7, [sp, #16]
   14fe4:	b	14bb8 <__assert_fail@plt+0x3680>
   14fe8:	ldr	r3, [r8, #20]
   14fec:	cmp	r3, #0
   14ff0:	moveq	r5, r6
   14ff4:	beq	14fd0 <__assert_fail@plt+0x3a98>
   14ff8:	ldr	r1, [sp, #12]
   14ffc:	mov	r0, r8
   15000:	bl	18268 <argp_parse@@Base+0xb54>
   15004:	str	r0, [sp, #16]
   15008:	ldr	r3, [r8, #20]
   1500c:	mov	r7, #0
   15010:	mov	r0, #1
   15014:	movt	r0, #512	; 0x200
   15018:	b	14ba4 <__assert_fail@plt+0x366c>
   1501c:	ldr	r3, [r0, #12]
   15020:	ldr	r2, [r1, #12]
   15024:	cmp	r3, r2
   15028:	beq	15098 <__assert_fail@plt+0x3b60>
   1502c:	strd	r4, [sp, #-16]!
   15030:	str	r6, [sp, #8]
   15034:	str	lr, [sp, #12]
   15038:	mov	r5, r1
   1503c:	mov	r4, r0
   15040:	mov	r1, r2
   15044:	mov	r0, r3
   15048:	bl	1501c <__assert_fail@plt+0x3ae4>
   1504c:	subs	r3, r0, #0
   15050:	bne	15084 <__assert_fail@plt+0x3b4c>
   15054:	ldr	r0, [r4, #8]
   15058:	ldr	r3, [r5, #8]
   1505c:	mvn	r2, r3
   15060:	lsr	r2, r2, #31
   15064:	cmp	r2, r0, lsr #31
   15068:	subne	r3, r0, r3
   1506c:	subeq	r3, r3, r0
   15070:	cmp	r3, #0
   15074:	bne	15084 <__assert_fail@plt+0x3b4c>
   15078:	ldr	r3, [r5, #4]
   1507c:	ldr	r0, [r4, #4]
   15080:	sub	r3, r3, r0
   15084:	mov	r0, r3
   15088:	ldrd	r4, [sp]
   1508c:	ldr	r6, [sp, #8]
   15090:	add	sp, sp, #12
   15094:	pop	{pc}		; (ldr pc, [sp], #4)
   15098:	ldr	r2, [r0, #8]
   1509c:	ldr	r3, [r1, #8]
   150a0:	mvn	ip, r3
   150a4:	lsr	ip, ip, #31
   150a8:	cmp	ip, r2, lsr #31
   150ac:	subne	r3, r2, r3
   150b0:	subeq	r3, r3, r2
   150b4:	cmp	r3, #0
   150b8:	bne	150c8 <__assert_fail@plt+0x3b90>
   150bc:	ldr	r3, [r1, #4]
   150c0:	ldr	r0, [r0, #4]
   150c4:	sub	r3, r3, r0
   150c8:	mov	r0, r3
   150cc:	bx	lr
   150d0:	strd	r4, [sp, #-24]!	; 0xffffffe8
   150d4:	strd	r6, [sp, #8]
   150d8:	str	r8, [sp, #16]
   150dc:	str	lr, [sp, #20]
   150e0:	sub	sp, sp, #8
   150e4:	ldr	lr, [r0, #16]
   150e8:	cmp	lr, #0
   150ec:	movne	r3, lr
   150f0:	bne	15100 <__assert_fail@plt+0x3bc8>
   150f4:	ldr	ip, [r0, #12]
   150f8:	b	15110 <__assert_fail@plt+0x3bd8>
   150fc:	mov	r3, r2
   15100:	ldr	r2, [r3, #12]
   15104:	cmp	r2, #0
   15108:	bne	150fc <__assert_fail@plt+0x3bc4>
   1510c:	ldr	ip, [r3, #8]
   15110:	ldr	r5, [r1, #16]
   15114:	cmp	r5, #0
   15118:	movne	r3, r5
   1511c:	bne	1512c <__assert_fail@plt+0x3bf4>
   15120:	ldr	r4, [r1, #12]
   15124:	b	1513c <__assert_fail@plt+0x3c04>
   15128:	mov	r3, r2
   1512c:	ldr	r2, [r3, #12]
   15130:	cmp	r2, #0
   15134:	bne	15128 <__assert_fail@plt+0x3bf0>
   15138:	ldr	r4, [r3, #8]
   1513c:	mvn	r3, r4
   15140:	lsr	r3, r3, #31
   15144:	cmp	r3, ip, lsr #31
   15148:	subne	r4, ip, r4
   1514c:	subeq	r4, r4, ip
   15150:	cmp	r4, #0
   15154:	bne	15294 <__assert_fail@plt+0x3d5c>
   15158:	adds	r4, r5, #0
   1515c:	movne	r4, #1
   15160:	cmp	lr, #0
   15164:	rsbeq	r4, r4, #0
   15168:	rsbne	r4, r4, #1
   1516c:	cmp	r4, #0
   15170:	bne	15294 <__assert_fail@plt+0x3d5c>
   15174:	mov	r7, r1
   15178:	mov	r6, r0
   1517c:	cmp	lr, #0
   15180:	beq	15200 <__assert_fail@plt+0x3cc8>
   15184:	ldr	r1, [lr, #20]
   15188:	ldr	r2, [r5, #20]
   1518c:	cmp	r1, r2
   15190:	ble	151bc <__assert_fail@plt+0x3c84>
   15194:	ldr	lr, [lr, #12]
   15198:	ldr	r3, [lr, #20]
   1519c:	cmp	r2, r3
   151a0:	blt	15194 <__assert_fail@plt+0x3c5c>
   151a4:	mov	r1, r5
   151a8:	mov	r0, lr
   151ac:	bl	1501c <__assert_fail@plt+0x3ae4>
   151b0:	subs	r4, r0, #0
   151b4:	moveq	r4, #1
   151b8:	b	15294 <__assert_fail@plt+0x3d5c>
   151bc:	cmp	r1, r2
   151c0:	bge	151ec <__assert_fail@plt+0x3cb4>
   151c4:	ldr	r5, [r5, #12]
   151c8:	ldr	r3, [r5, #20]
   151cc:	cmp	r1, r3
   151d0:	blt	151c4 <__assert_fail@plt+0x3c8c>
   151d4:	mov	r1, r5
   151d8:	mov	r0, lr
   151dc:	bl	1501c <__assert_fail@plt+0x3ae4>
   151e0:	subs	r4, r0, #0
   151e4:	mvneq	r4, #0
   151e8:	b	15294 <__assert_fail@plt+0x3d5c>
   151ec:	mov	r1, r5
   151f0:	mov	r0, lr
   151f4:	bl	1501c <__assert_fail@plt+0x3ae4>
   151f8:	subs	r4, r0, #0
   151fc:	bne	15294 <__assert_fail@plt+0x3d5c>
   15200:	ldr	r3, [r6, #12]
   15204:	ldr	r4, [r7, #12]
   15208:	mvn	r2, r4
   1520c:	lsr	r2, r2, #31
   15210:	cmp	r2, r3, lsr #31
   15214:	subne	r4, r3, r4
   15218:	subeq	r4, r4, r3
   1521c:	cmp	r4, #0
   15220:	bne	15294 <__assert_fail@plt+0x3d5c>
   15224:	mov	r0, r6
   15228:	bl	13c94 <__assert_fail@plt+0x275c>
   1522c:	mov	r5, r0
   15230:	str	r0, [sp]
   15234:	mov	r0, r7
   15238:	bl	13c94 <__assert_fail@plt+0x275c>
   1523c:	str	r0, [sp, #4]
   15240:	ldr	r3, [r6]
   15244:	ldr	r0, [r3, #12]
   15248:	ubfx	r0, r0, #3, #1
   1524c:	cmp	r5, #0
   15250:	moveq	r0, #0
   15254:	cmp	r0, #0
   15258:	bne	152b0 <__assert_fail@plt+0x3d78>
   1525c:	ldr	r3, [r7]
   15260:	ldr	r3, [r3, #12]
   15264:	tst	r3, #8
   15268:	beq	152e8 <__assert_fail@plt+0x3db0>
   1526c:	ldr	r3, [sp, #4]
   15270:	cmp	r3, #0
   15274:	beq	152e8 <__assert_fail@plt+0x3db0>
   15278:	add	r0, sp, #4
   1527c:	bl	13d30 <__assert_fail@plt+0x27f8>
   15280:	adds	r3, r0, #0
   15284:	movne	r3, #1
   15288:	mov	r0, r4
   1528c:	subs	r4, r0, r3
   15290:	beq	152e8 <__assert_fail@plt+0x3db0>
   15294:	mov	r0, r4
   15298:	add	sp, sp, #8
   1529c:	ldrd	r4, [sp]
   152a0:	ldrd	r6, [sp, #8]
   152a4:	ldr	r8, [sp, #16]
   152a8:	add	sp, sp, #20
   152ac:	pop	{pc}		; (ldr pc, [sp], #4)
   152b0:	mov	r0, sp
   152b4:	bl	13d30 <__assert_fail@plt+0x27f8>
   152b8:	adds	r0, r0, #0
   152bc:	movne	r0, #1
   152c0:	ldr	r3, [r7]
   152c4:	ldr	r3, [r3, #12]
   152c8:	ands	r3, r3, #8
   152cc:	beq	1528c <__assert_fail@plt+0x3d54>
   152d0:	ldr	r3, [sp, #4]
   152d4:	cmp	r3, #0
   152d8:	moveq	r3, r4
   152dc:	beq	1528c <__assert_fail@plt+0x3d54>
   152e0:	mov	r4, r0
   152e4:	b	15278 <__assert_fail@plt+0x3d40>
   152e8:	ldr	r2, [r6, #20]
   152ec:	movw	r4, #17208	; 0x4338
   152f0:	movt	r4, #1
   152f4:	mov	r3, #0
   152f8:	ldr	r2, [r2, #24]
   152fc:	mov	r1, r4
   15300:	mov	r0, r6
   15304:	bl	13fa0 <__assert_fail@plt+0x2a68>
   15308:	mov	r5, r0
   1530c:	uxtb	r8, r0
   15310:	ldr	r2, [r7, #20]
   15314:	mov	r3, #0
   15318:	ldr	r2, [r2, #24]
   1531c:	mov	r1, r4
   15320:	mov	r0, r7
   15324:	bl	13fa0 <__assert_fail@plt+0x2a68>
   15328:	uxtb	r7, r0
   1532c:	cmp	r8, #0
   15330:	movne	r5, r8
   15334:	bne	15348 <__assert_fail@plt+0x3e10>
   15338:	ldr	r3, [sp]
   1533c:	cmp	r3, #0
   15340:	ldrbne	r5, [r3]
   15344:	moveq	r5, #0
   15348:	cmp	r7, #0
   1534c:	uxtbne	r6, r0
   15350:	bne	15364 <__assert_fail@plt+0x3e2c>
   15354:	ldr	r3, [sp, #4]
   15358:	cmp	r3, #0
   1535c:	ldrbne	r6, [r3]
   15360:	moveq	r6, #0
   15364:	bl	11370 <__ctype_tolower_loc@plt>
   15368:	ldr	r3, [r0]
   1536c:	ldr	r4, [r3, r5, lsl #2]
   15370:	ldr	r3, [r3, r6, lsl #2]
   15374:	subs	r4, r4, r3
   15378:	bne	15294 <__assert_fail@plt+0x3d5c>
   1537c:	subs	r4, r6, r5
   15380:	bne	15294 <__assert_fail@plt+0x3d5c>
   15384:	adds	r4, r7, #0
   15388:	movne	r4, #1
   1538c:	cmp	r8, #0
   15390:	rsbeq	r4, r4, #0
   15394:	rsbne	r4, r4, #1
   15398:	cmp	r4, #0
   1539c:	bne	15294 <__assert_fail@plt+0x3d5c>
   153a0:	cmp	r8, #0
   153a4:	bne	15294 <__assert_fail@plt+0x3d5c>
   153a8:	ldr	r0, [sp]
   153ac:	ldr	r1, [sp, #4]
   153b0:	adds	r4, r1, #0
   153b4:	movne	r4, #1
   153b8:	cmp	r0, #0
   153bc:	rsbeq	r4, r4, #0
   153c0:	rsbne	r4, r4, #1
   153c4:	cmp	r4, #0
   153c8:	bne	15294 <__assert_fail@plt+0x3d5c>
   153cc:	cmp	r0, #0
   153d0:	beq	15294 <__assert_fail@plt+0x3d5c>
   153d4:	bl	112bc <strcasecmp@plt>
   153d8:	mov	r4, r0
   153dc:	b	15294 <__assert_fail@plt+0x3d5c>
   153e0:	strd	r4, [sp, #-36]!	; 0xffffffdc
   153e4:	strd	r6, [sp, #8]
   153e8:	strd	r8, [sp, #16]
   153ec:	strd	sl, [sp, #24]
   153f0:	str	lr, [sp, #32]
   153f4:	sub	sp, sp, #52	; 0x34
   153f8:	str	r0, [sp, #12]
   153fc:	str	r1, [sp, #4]
   15400:	ldr	fp, [r0, #16]
   15404:	ldr	r4, [r0]
   15408:	mov	r0, #16
   1540c:	bl	18f8c <argp_parse@@Base+0x1878>
   15410:	subs	sl, r0, #0
   15414:	beq	15444 <__assert_fail@plt+0x3f0c>
   15418:	mov	r3, #0
   1541c:	str	r3, [sl, #4]
   15420:	str	r3, [sl, #12]
   15424:	cmp	r4, r3
   15428:	beq	15650 <__assert_fail@plt+0x4118>
   1542c:	ldr	r3, [r4, #12]
   15430:	tst	r3, #4
   15434:	bne	15464 <__assert_fail@plt+0x3f2c>
   15438:	add	r5, r4, #24
   1543c:	mov	r6, #0
   15440:	b	15488 <__assert_fail@plt+0x3f50>
   15444:	movw	r3, #43964	; 0xabbc
   15448:	movt	r3, #1
   1544c:	movw	r2, #450	; 0x1c2
   15450:	movw	r1, #44204	; 0xacac
   15454:	movt	r1, #1
   15458:	movw	r0, #44216	; 0xacb8
   1545c:	movt	r0, #1
   15460:	bl	11538 <__assert_fail@plt>
   15464:	movw	r3, #43964	; 0xabbc
   15468:	movt	r3, #1
   1546c:	mov	r2, #460	; 0x1cc
   15470:	movw	r1, #44204	; 0xacac
   15474:	movt	r1, #1
   15478:	movw	r0, #44220	; 0xacbc
   1547c:	movt	r0, #1
   15480:	bl	11538 <__assert_fail@plt>
   15484:	add	r5, r5, #24
   15488:	mov	r3, r5
   1548c:	ldr	r2, [r5, #-20]	; 0xffffffec
   15490:	cmp	r2, #0
   15494:	bne	154a4 <__assert_fail@plt+0x3f6c>
   15498:	ldr	r2, [r5, #-24]	; 0xffffffe8
   1549c:	cmp	r2, #0
   154a0:	beq	154f4 <__assert_fail@plt+0x3fbc>
   154a4:	ldr	r2, [r3, #-12]
   154a8:	tst	r2, #4
   154ac:	bne	154bc <__assert_fail@plt+0x3f84>
   154b0:	ldr	r2, [sl, #4]
   154b4:	add	r2, r2, #1
   154b8:	str	r2, [sl, #4]
   154bc:	ldr	r2, [r3, #-12]
   154c0:	tst	r2, #8
   154c4:	bne	15484 <__assert_fail@plt+0x3f4c>
   154c8:	ldr	r7, [r3, #-20]	; 0xffffffec
   154cc:	sub	r3, r7, #1
   154d0:	cmp	r3, #254	; 0xfe
   154d4:	bhi	15484 <__assert_fail@plt+0x3f4c>
   154d8:	bl	11394 <__ctype_b_loc@plt>
   154dc:	ldr	r3, [r0]
   154e0:	lsl	r7, r7, #1
   154e4:	ldrh	r3, [r3, r7]
   154e8:	tst	r3, #16384	; 0x4000
   154ec:	addne	r6, r6, #1
   154f0:	b	15484 <__assert_fail@plt+0x3f4c>
   154f4:	ldr	r2, [r5, #-8]
   154f8:	cmp	r2, #0
   154fc:	bne	154a4 <__assert_fail@plt+0x3f6c>
   15500:	ldr	r9, [r5, #-4]
   15504:	cmp	r9, #0
   15508:	bne	154a4 <__assert_fail@plt+0x3f6c>
   1550c:	ldr	r0, [sl, #4]
   15510:	rsb	r0, r0, r0, lsl #3
   15514:	lsl	r0, r0, #2
   15518:	bl	18f8c <argp_parse@@Base+0x1878>
   1551c:	str	r0, [sl]
   15520:	add	r0, r6, #1
   15524:	bl	18f8c <argp_parse@@Base+0x1878>
   15528:	mov	r5, r0
   1552c:	str	r0, [sl, #8]
   15530:	ldr	r7, [sl]
   15534:	cmp	r0, #0
   15538:	cmpne	r7, #0
   1553c:	beq	15564 <__assert_fail@plt+0x402c>
   15540:	movw	r3, #37449	; 0x9249
   15544:	movt	r3, #2340	; 0x924
   15548:	ldr	r2, [sl, #4]
   1554c:	cmp	r2, r3
   15550:	bhi	15584 <__assert_fail@plt+0x404c>
   15554:	add	r7, r7, #28
   15558:	str	fp, [sp, #8]
   1555c:	ldr	fp, [sp, #12]
   15560:	b	155d0 <__assert_fail@plt+0x4098>
   15564:	movw	r3, #43964	; 0xabbc
   15568:	movt	r3, #1
   1556c:	movw	r2, #474	; 0x1da
   15570:	movw	r1, #44204	; 0xacac
   15574:	movt	r1, #1
   15578:	movw	r0, #44236	; 0xaccc
   1557c:	movt	r0, #1
   15580:	bl	11538 <__assert_fail@plt>
   15584:	movw	r3, #43964	; 0xabbc
   15588:	movt	r3, #1
   1558c:	mov	r2, #476	; 0x1dc
   15590:	movw	r1, #44204	; 0xacac
   15594:	movt	r1, #1
   15598:	movw	r0, #44272	; 0xacf0
   1559c:	movt	r0, #1
   155a0:	bl	11538 <__assert_fail@plt>
   155a4:	ldr	r3, [r4, #4]
   155a8:	cmp	r3, #0
   155ac:	addeq	r9, r9, #1
   155b0:	b	15618 <__assert_fail@plt+0x40e0>
   155b4:	ldr	r3, [r4, #16]
   155b8:	cmp	r3, #0
   155bc:	bne	159f0 <__assert_fail@plt+0x44b8>
   155c0:	ldr	r3, [r4, #20]
   155c4:	cmp	r3, #0
   155c8:	bne	159f0 <__assert_fail@plt+0x44b8>
   155cc:	add	r7, r7, #28
   155d0:	ldr	r3, [r4, #4]
   155d4:	cmp	r3, #0
   155d8:	bne	155e8 <__assert_fail@plt+0x40b0>
   155dc:	ldr	r3, [r4]
   155e0:	cmp	r3, #0
   155e4:	beq	1562c <__assert_fail@plt+0x40f4>
   155e8:	mov	r8, r7
   155ec:	str	r4, [r7, #-28]	; 0xffffffe4
   155f0:	mov	r3, #0
   155f4:	str	r3, [r7, #-24]	; 0xffffffe8
   155f8:	str	r5, [r7, #-20]	; 0xffffffec
   155fc:	ldr	r3, [r4, #20]
   15600:	cmp	r3, #0
   15604:	movne	r9, r3
   15608:	bne	15618 <__assert_fail@plt+0x40e0>
   1560c:	ldr	r3, [r4]
   15610:	cmp	r3, #0
   15614:	beq	155a4 <__assert_fail@plt+0x406c>
   15618:	str	r9, [r8, #-16]
   1561c:	ldr	r3, [sp, #4]
   15620:	str	r3, [r8, #-12]
   15624:	str	fp, [r8, #-8]
   15628:	b	159fc <__assert_fail@plt+0x44c4>
   1562c:	ldr	r3, [r4, #16]
   15630:	cmp	r3, #0
   15634:	bne	155e8 <__assert_fail@plt+0x40b0>
   15638:	ldr	r3, [r4, #20]
   1563c:	cmp	r3, #0
   15640:	bne	155e8 <__assert_fail@plt+0x40b0>
   15644:	ldr	fp, [sp, #8]
   15648:	mov	r3, #0
   1564c:	strb	r3, [r5]
   15650:	cmp	fp, #0
   15654:	beq	15a74 <__assert_fail@plt+0x453c>
   15658:	ldr	r3, [fp]
   1565c:	cmp	r3, #0
   15660:	beq	15a74 <__assert_fail@plt+0x453c>
   15664:	movw	r3, #37449	; 0x9249
   15668:	movt	r3, #2340	; 0x924
   1566c:	str	r3, [sp, #32]
   15670:	b	156e4 <__assert_fail@plt+0x41ac>
   15674:	ldr	r1, [sp, #4]
   15678:	b	1575c <__assert_fail@plt+0x4224>
   1567c:	mov	r3, r2
   15680:	ldr	r2, [r3, #24]
   15684:	cmp	r2, #0
   15688:	bne	1567c <__assert_fail@plt+0x4144>
   1568c:	add	r3, r3, #24
   15690:	ldr	r2, [r5, #12]
   15694:	str	r2, [r3]
   15698:	mov	r1, #0
   1569c:	str	r1, [r5, #12]
   156a0:	ldr	r3, [r5, #4]
   156a4:	cmp	r3, r1
   156a8:	beq	156d0 <__assert_fail@plt+0x4198>
   156ac:	ldr	r2, [sl, #4]
   156b0:	cmp	r2, r1
   156b4:	bne	1577c <__assert_fail@plt+0x4244>
   156b8:	str	r3, [sl, #4]
   156bc:	ldr	r3, [r5]
   156c0:	str	r3, [sl]
   156c4:	ldr	r3, [r5, #8]
   156c8:	str	r3, [sl, #8]
   156cc:	str	r1, [r5, #4]
   156d0:	mov	r0, r5
   156d4:	bl	13db8 <__assert_fail@plt+0x2880>
   156d8:	ldr	r3, [fp, #16]!
   156dc:	cmp	r3, #0
   156e0:	beq	15a74 <__assert_fail@plt+0x453c>
   156e4:	mov	r5, fp
   156e8:	ldr	r6, [fp, #12]
   156ec:	cmp	r6, #0
   156f0:	bne	15700 <__assert_fail@plt+0x41c8>
   156f4:	ldr	r3, [fp, #8]
   156f8:	cmp	r3, #0
   156fc:	beq	15674 <__assert_fail@plt+0x413c>
   15700:	ldr	r7, [r5, #8]
   15704:	ldr	r8, [sp, #12]
   15708:	ldr	r4, [r8, #16]
   1570c:	mov	r0, #28
   15710:	bl	18f8c <argp_parse@@Base+0x1878>
   15714:	subs	r1, r0, #0
   15718:	beq	1575c <__assert_fail@plt+0x4224>
   1571c:	str	r6, [r1, #8]
   15720:	str	r7, [r1]
   15724:	sub	r4, r5, r4
   15728:	asr	r4, r4, #4
   1572c:	str	r4, [r1, #4]
   15730:	ldr	r3, [sp, #4]
   15734:	str	r3, [r1, #12]
   15738:	str	r8, [r1, #16]
   1573c:	cmp	r3, #0
   15740:	ldrne	r3, [r3, #20]
   15744:	addne	r3, r3, #1
   15748:	moveq	r3, #0
   1574c:	str	r3, [r1, #20]
   15750:	ldr	r3, [sl, #12]
   15754:	str	r3, [r1, #24]
   15758:	str	r1, [sl, #12]
   1575c:	ldr	r0, [r5]
   15760:	bl	153e0 <__assert_fail@plt+0x3ea8>
   15764:	mov	r5, r0
   15768:	ldr	r3, [sl, #12]
   1576c:	cmp	r3, #0
   15770:	bne	15680 <__assert_fail@plt+0x4148>
   15774:	add	r3, sl, #12
   15778:	b	15690 <__assert_fail@plt+0x4158>
   1577c:	add	r3, r3, r2
   15780:	str	r3, [sp, #24]
   15784:	rsb	r0, r3, r3, lsl #3
   15788:	lsl	r0, r0, #2
   1578c:	bl	18f8c <argp_parse@@Base+0x1878>
   15790:	mov	r4, r0
   15794:	str	r0, [sp, #20]
   15798:	ldr	r0, [sl, #8]
   1579c:	bl	113b8 <strlen@plt>
   157a0:	mov	r7, r0
   157a4:	ldr	r0, [r5, #8]
   157a8:	bl	113b8 <strlen@plt>
   157ac:	add	r0, r7, r0
   157b0:	add	r0, r0, #1
   157b4:	bl	18f8c <argp_parse@@Base+0x1878>
   157b8:	mov	r9, r0
   157bc:	cmp	r4, #0
   157c0:	cmpne	r0, #0
   157c4:	beq	15890 <__assert_fail@plt+0x4358>
   157c8:	ldr	r3, [sp, #24]
   157cc:	ldr	r2, [sp, #32]
   157d0:	cmp	r3, r2
   157d4:	bhi	158ac <__assert_fail@plt+0x4374>
   157d8:	ldr	r1, [sl]
   157dc:	str	r1, [sp, #28]
   157e0:	ldr	r4, [sl, #4]
   157e4:	rsb	r8, r4, r4, lsl #3
   157e8:	lsl	r8, r8, #2
   157ec:	mov	r2, r8
   157f0:	ldr	r0, [sp, #20]
   157f4:	bl	11388 <mempcpy@plt>
   157f8:	ldr	r3, [r5, #4]
   157fc:	str	r3, [sp, #16]
   15800:	rsb	r2, r3, r3, lsl #3
   15804:	lsl	r2, r2, #2
   15808:	ldr	r1, [r5]
   1580c:	bl	11268 <memcpy@plt>
   15810:	ldr	r6, [sl, #8]
   15814:	mov	r2, r7
   15818:	mov	r1, r6
   1581c:	mov	r0, r9
   15820:	bl	11268 <memcpy@plt>
   15824:	cmp	r4, #0
   15828:	beq	158c8 <__assert_fail@plt+0x4390>
   1582c:	ldr	r2, [sp, #20]
   15830:	ldr	r3, [r2, #8]
   15834:	sub	r3, r3, r6
   15838:	add	r3, r9, r3
   1583c:	str	r3, [r2, #8]
   15840:	add	r2, r2, #28
   15844:	subs	r4, r4, #1
   15848:	bne	15830 <__assert_fail@plt+0x42f8>
   1584c:	ldr	r3, [sp, #20]
   15850:	add	r4, r3, r8
   15854:	add	r3, r9, r7
   15858:	str	r3, [sp, #8]
   1585c:	ldr	r1, [r5, #8]
   15860:	ldr	r8, [sp, #16]
   15864:	cmp	r8, #0
   15868:	beq	1596c <__assert_fail@plt+0x4434>
   1586c:	add	r4, r4, #28
   15870:	sub	r2, r3, #1
   15874:	str	r2, [sp, #16]
   15878:	str	r5, [sp, #36]	; 0x24
   1587c:	str	fp, [sp, #40]	; 0x28
   15880:	mov	fp, r3
   15884:	str	sl, [sp, #44]	; 0x2c
   15888:	mov	sl, r1
   1588c:	b	15914 <__assert_fail@plt+0x43dc>
   15890:	ldr	r3, [pc, #508]	; 15a94 <__assert_fail@plt+0x455c>
   15894:	movw	r2, #970	; 0x3ca
   15898:	movw	r1, #44204	; 0xacac
   1589c:	movt	r1, #1
   158a0:	movw	r0, #44332	; 0xad2c
   158a4:	movt	r0, #1
   158a8:	bl	11538 <__assert_fail@plt>
   158ac:	ldr	r3, [pc, #480]	; 15a94 <__assert_fail@plt+0x455c>
   158b0:	mov	r2, #972	; 0x3cc
   158b4:	movw	r1, #44204	; 0xacac
   158b8:	movt	r1, #1
   158bc:	movw	r0, #44360	; 0xad48
   158c0:	movt	r0, #1
   158c4:	bl	11538 <__assert_fail@plt>
   158c8:	ldr	r4, [sp, #20]
   158cc:	b	15854 <__assert_fail@plt+0x431c>
   158d0:	ldr	r2, [sp, #8]
   158d4:	cmp	r9, r2
   158d8:	bcs	15974 <__assert_fail@plt+0x443c>
   158dc:	ldrb	r2, [r9]
   158e0:	cmp	r2, r3
   158e4:	beq	15978 <__assert_fail@plt+0x4440>
   158e8:	mov	r2, r9
   158ec:	ldr	r1, [sp, #16]
   158f0:	cmp	r1, r2
   158f4:	beq	15974 <__assert_fail@plt+0x443c>
   158f8:	ldrb	r1, [r2, #1]!
   158fc:	cmp	r1, r3
   15900:	bne	158ec <__assert_fail@plt+0x43b4>
   15904:	b	15978 <__assert_fail@plt+0x4440>
   15908:	add	r4, r4, #28
   1590c:	subs	r8, r8, #1
   15910:	beq	1592c <__assert_fail@plt+0x43f4>
   15914:	str	fp, [r4, #-20]	; 0xffffffec
   15918:	ldr	r5, [r4, #-24]	; 0xffffffe8
   1591c:	ldr	r6, [r4, #-28]	; 0xffffffe4
   15920:	cmp	r5, #0
   15924:	bne	15998 <__assert_fail@plt+0x4460>
   15928:	b	15908 <__assert_fail@plt+0x43d0>
   1592c:	ldr	r5, [sp, #36]	; 0x24
   15930:	mov	r3, fp
   15934:	ldr	fp, [sp, #40]	; 0x28
   15938:	ldr	sl, [sp, #44]	; 0x2c
   1593c:	mov	r2, #0
   15940:	strb	r2, [r3]
   15944:	ldr	r0, [sp, #28]
   15948:	bl	183ec <argp_parse@@Base+0xcd8>
   1594c:	ldr	r0, [sl, #8]
   15950:	bl	183ec <argp_parse@@Base+0xcd8>
   15954:	ldr	r3, [sp, #20]
   15958:	str	r3, [sl]
   1595c:	ldr	r3, [sp, #24]
   15960:	str	r3, [sl, #4]
   15964:	str	r9, [sl, #8]
   15968:	b	156d0 <__assert_fail@plt+0x4198>
   1596c:	ldr	r3, [sp, #8]
   15970:	b	1593c <__assert_fail@plt+0x4404>
   15974:	strb	r3, [fp], #1
   15978:	add	sl, sl, #1
   1597c:	b	1598c <__assert_fail@plt+0x4454>
   15980:	ldrb	r3, [sl]
   15984:	cmp	r3, r7
   15988:	beq	158d0 <__assert_fail@plt+0x4398>
   1598c:	add	r6, r6, #24
   15990:	subs	r5, r5, #1
   15994:	beq	15908 <__assert_fail@plt+0x43d0>
   15998:	ldr	r3, [r6, #12]
   1599c:	tst	r3, #8
   159a0:	bne	1598c <__assert_fail@plt+0x4454>
   159a4:	ldr	r7, [r6, #4]
   159a8:	sub	r3, r7, #1
   159ac:	cmp	r3, #254	; 0xfe
   159b0:	bhi	1598c <__assert_fail@plt+0x4454>
   159b4:	bl	11394 <__ctype_b_loc@plt>
   159b8:	ldr	r2, [r0]
   159bc:	lsl	r3, r7, #1
   159c0:	ldrh	r3, [r2, r3]
   159c4:	tst	r3, #16384	; 0x4000
   159c8:	bne	15980 <__assert_fail@plt+0x4448>
   159cc:	b	1598c <__assert_fail@plt+0x4454>
   159d0:	strb	r6, [r5], #1
   159d4:	add	r4, r4, #24
   159d8:	ldr	r3, [r4, #4]
   159dc:	cmp	r3, #0
   159e0:	bne	159f0 <__assert_fail@plt+0x44b8>
   159e4:	ldr	r3, [r4]
   159e8:	cmp	r3, #0
   159ec:	beq	155b4 <__assert_fail@plt+0x407c>
   159f0:	ldr	r3, [r4, #12]
   159f4:	tst	r3, #4
   159f8:	beq	155cc <__assert_fail@plt+0x4094>
   159fc:	ldr	r3, [r8, #-24]	; 0xffffffe8
   15a00:	add	r3, r3, #1
   15a04:	str	r3, [r8, #-24]	; 0xffffffe8
   15a08:	ldr	r3, [r4, #12]
   15a0c:	tst	r3, #8
   15a10:	bne	159d4 <__assert_fail@plt+0x449c>
   15a14:	ldr	r6, [r4, #4]
   15a18:	sub	r3, r6, #1
   15a1c:	cmp	r3, #254	; 0xfe
   15a20:	bhi	159d4 <__assert_fail@plt+0x449c>
   15a24:	bl	11394 <__ctype_b_loc@plt>
   15a28:	ldr	r2, [r0]
   15a2c:	lsl	r3, r6, #1
   15a30:	ldrh	r3, [r2, r3]
   15a34:	tst	r3, #16384	; 0x4000
   15a38:	beq	159d4 <__assert_fail@plt+0x449c>
   15a3c:	uxtb	r6, r6
   15a40:	ldr	r3, [sl, #8]
   15a44:	cmp	r3, r5
   15a48:	bcs	159d0 <__assert_fail@plt+0x4498>
   15a4c:	ldrb	r2, [r3]
   15a50:	cmp	r2, r6
   15a54:	beq	159d4 <__assert_fail@plt+0x449c>
   15a58:	sub	r2, r5, #1
   15a5c:	cmp	r3, r2
   15a60:	beq	159d0 <__assert_fail@plt+0x4498>
   15a64:	ldrb	r1, [r3, #1]!
   15a68:	cmp	r1, r6
   15a6c:	bne	15a5c <__assert_fail@plt+0x4524>
   15a70:	b	159d4 <__assert_fail@plt+0x449c>
   15a74:	mov	r0, sl
   15a78:	add	sp, sp, #52	; 0x34
   15a7c:	ldrd	r4, [sp]
   15a80:	ldrd	r6, [sp, #8]
   15a84:	ldrd	r8, [sp, #16]
   15a88:	ldrd	sl, [sp, #24]
   15a8c:	add	sp, sp, #32
   15a90:	pop	{pc}		; (ldr pc, [sp], #4)
   15a94:	andeq	sl, r1, r8, asr #23

00015a98 <argp_failure@@Base>:
   15a98:	push	{r3}		; (str r3, [sp, #-4]!)
   15a9c:	strd	r4, [sp, #-20]!	; 0xffffffec
   15aa0:	strd	r6, [sp, #8]
   15aa4:	str	lr, [sp, #16]
   15aa8:	sub	sp, sp, #200	; 0xc8
   15aac:	mov	r7, r1
   15ab0:	mov	r6, r2
   15ab4:	subs	r5, r0, #0
   15ab8:	beq	15c14 <argp_failure@@Base+0x17c>
   15abc:	ldr	r3, [r5, #16]
   15ac0:	tst	r3, #2
   15ac4:	bne	15bf8 <argp_failure@@Base+0x160>
   15ac8:	ldr	r4, [r5, #44]	; 0x2c
   15acc:	cmp	r4, #0
   15ad0:	beq	15bf8 <argp_failure@@Base+0x160>
   15ad4:	mov	r0, r4
   15ad8:	bl	114b4 <flockfile@plt>
   15adc:	ldr	r0, [r5, #40]	; 0x28
   15ae0:	mov	r1, r4
   15ae4:	bl	111cc <fputs_unlocked@plt>
   15ae8:	ldr	r3, [sp, #220]	; 0xdc
   15aec:	cmp	r3, #0
   15af0:	beq	15b4c <argp_failure@@Base+0xb4>
   15af4:	add	r3, sp, #224	; 0xe0
   15af8:	str	r3, [sp]
   15afc:	ldr	r3, [r4, #20]
   15b00:	ldr	r2, [r4, #24]
   15b04:	cmp	r3, r2
   15b08:	addcc	r2, r3, #1
   15b0c:	strcc	r2, [r4, #20]
   15b10:	movcc	r2, #58	; 0x3a
   15b14:	strbcc	r2, [r3]
   15b18:	bcs	15c40 <argp_failure@@Base+0x1a8>
   15b1c:	ldr	r3, [r4, #20]
   15b20:	ldr	r2, [r4, #24]
   15b24:	cmp	r3, r2
   15b28:	addcc	r2, r3, #1
   15b2c:	strcc	r2, [r4, #20]
   15b30:	movcc	r2, #32
   15b34:	strbcc	r2, [r3]
   15b38:	bcs	15c50 <argp_failure@@Base+0x1b8>
   15b3c:	ldr	r2, [sp]
   15b40:	ldr	r1, [sp, #220]	; 0xdc
   15b44:	mov	r0, r4
   15b48:	bl	11490 <vfprintf@plt>
   15b4c:	cmp	r6, #0
   15b50:	beq	15bb4 <argp_failure@@Base+0x11c>
   15b54:	ldr	r3, [r4, #20]
   15b58:	ldr	r2, [r4, #24]
   15b5c:	cmp	r3, r2
   15b60:	addcc	r2, r3, #1
   15b64:	strcc	r2, [r4, #20]
   15b68:	movcc	r2, #58	; 0x3a
   15b6c:	strbcc	r2, [r3]
   15b70:	bcs	15c60 <argp_failure@@Base+0x1c8>
   15b74:	ldr	r3, [r4, #20]
   15b78:	ldr	r2, [r4, #24]
   15b7c:	cmp	r3, r2
   15b80:	addcc	r2, r3, #1
   15b84:	strcc	r2, [r4, #20]
   15b88:	movcc	r2, #32
   15b8c:	strbcc	r2, [r3]
   15b90:	bcs	15c70 <argp_failure@@Base+0x1d8>
   15b94:	mov	r2, #200	; 0xc8
   15b98:	mov	r1, sp
   15b9c:	mov	r0, r6
   15ba0:	bl	113f4 <strerror_r@plt>
   15ba4:	cmp	r0, #0
   15ba8:	beq	15c80 <argp_failure@@Base+0x1e8>
   15bac:	mov	r1, r4
   15bb0:	bl	111cc <fputs_unlocked@plt>
   15bb4:	ldr	r3, [r4, #20]
   15bb8:	ldr	r2, [r4, #24]
   15bbc:	cmp	r3, r2
   15bc0:	addcc	r2, r3, #1
   15bc4:	strcc	r2, [r4, #20]
   15bc8:	movcc	r2, #10
   15bcc:	strbcc	r2, [r3]
   15bd0:	bcs	15c9c <argp_failure@@Base+0x204>
   15bd4:	mov	r0, r4
   15bd8:	bl	112c8 <funlockfile@plt>
   15bdc:	cmp	r7, #0
   15be0:	beq	15bf8 <argp_failure@@Base+0x160>
   15be4:	cmp	r5, #0
   15be8:	beq	15cac <argp_failure@@Base+0x214>
   15bec:	ldr	r3, [r5, #16]
   15bf0:	tst	r3, #32
   15bf4:	beq	15cac <argp_failure@@Base+0x214>
   15bf8:	add	sp, sp, #200	; 0xc8
   15bfc:	ldrd	r4, [sp]
   15c00:	ldrd	r6, [sp, #8]
   15c04:	ldr	lr, [sp, #16]
   15c08:	add	sp, sp, #20
   15c0c:	add	sp, sp, #4
   15c10:	bx	lr
   15c14:	movw	r3, #50256	; 0xc450
   15c18:	movt	r3, #2
   15c1c:	ldr	r4, [r3]
   15c20:	cmp	r4, #0
   15c24:	beq	15bf8 <argp_failure@@Base+0x160>
   15c28:	mov	r0, r4
   15c2c:	bl	114b4 <flockfile@plt>
   15c30:	movw	r3, #50248	; 0xc448
   15c34:	movt	r3, #2
   15c38:	ldr	r0, [r3]
   15c3c:	b	15ae0 <argp_failure@@Base+0x48>
   15c40:	mov	r1, #58	; 0x3a
   15c44:	mov	r0, r4
   15c48:	bl	1146c <__overflow@plt>
   15c4c:	b	15b1c <argp_failure@@Base+0x84>
   15c50:	mov	r1, #32
   15c54:	mov	r0, r4
   15c58:	bl	1146c <__overflow@plt>
   15c5c:	b	15b3c <argp_failure@@Base+0xa4>
   15c60:	mov	r1, #58	; 0x3a
   15c64:	mov	r0, r4
   15c68:	bl	1146c <__overflow@plt>
   15c6c:	b	15b74 <argp_failure@@Base+0xdc>
   15c70:	mov	r1, #32
   15c74:	mov	r0, r4
   15c78:	bl	1146c <__overflow@plt>
   15c7c:	b	15b94 <argp_failure@@Base+0xfc>
   15c80:	mov	r0, r6
   15c84:	bl	11364 <strerror@plt>
   15c88:	movw	r3, #44412	; 0xad7c
   15c8c:	movt	r3, #1
   15c90:	cmp	r0, #0
   15c94:	moveq	r0, r3
   15c98:	b	15bac <argp_failure@@Base+0x114>
   15c9c:	mov	r1, #10
   15ca0:	mov	r0, r4
   15ca4:	bl	1146c <__overflow@plt>
   15ca8:	b	15bd4 <argp_failure@@Base+0x13c>
   15cac:	mov	r0, r7
   15cb0:	bl	113a0 <exit@plt>
   15cb4:	strd	r4, [sp, #-36]!	; 0xffffffdc
   15cb8:	strd	r6, [sp, #8]
   15cbc:	strd	r8, [sp, #16]
   15cc0:	strd	sl, [sp, #24]
   15cc4:	str	lr, [sp, #32]
   15cc8:	add	fp, sp, #32
   15ccc:	sub	sp, sp, #124	; 0x7c
   15cd0:	str	r0, [fp, #-108]	; 0xffffff94
   15cd4:	str	r1, [fp, #-104]	; 0xffffff98
   15cd8:	str	r3, [fp, #-100]	; 0xffffff9c
   15cdc:	subs	r3, r2, #0
   15ce0:	str	r3, [fp, #-132]	; 0xffffff7c
   15ce4:	beq	16ccc <argp_failure@@Base+0x1234>
   15ce8:	mov	r0, r3
   15cec:	bl	114b4 <flockfile@plt>
   15cf0:	movw	r3, #50184	; 0xc408
   15cf4:	movt	r3, #2
   15cf8:	ldr	r9, [r3, #36]	; 0x24
   15cfc:	cmp	r9, #0
   15d00:	beq	15dd8 <argp_failure@@Base+0x340>
   15d04:	movw	r2, #50184	; 0xc408
   15d08:	movt	r2, #2
   15d0c:	mov	r3, #0
   15d10:	ldr	r2, [r2, #32]
   15d14:	mov	r1, r3
   15d18:	ldr	r0, [fp, #-132]	; 0xffffff7c
   15d1c:	bl	19024 <argp_parse@@Base+0x1910>
   15d20:	subs	sl, r0, #0
   15d24:	beq	161b4 <argp_failure@@Base+0x71c>
   15d28:	ldr	r3, [fp, #-100]	; 0xffffff9c
   15d2c:	tst	r3, #11
   15d30:	moveq	r3, #0
   15d34:	streq	r3, [fp, #-128]	; 0xffffff80
   15d38:	bne	161c0 <argp_failure@@Base+0x728>
   15d3c:	ldr	r3, [fp, #-100]	; 0xffffff9c
   15d40:	tst	r3, #3
   15d44:	moveq	r4, #0
   15d48:	bne	16250 <argp_failure@@Base+0x7b8>
   15d4c:	ldr	r3, [fp, #-100]	; 0xffffff9c
   15d50:	tst	r3, #16
   15d54:	bne	16474 <argp_failure@@Base+0x9dc>
   15d58:	ldr	r3, [fp, #-100]	; 0xffffff9c
   15d5c:	tst	r3, #4
   15d60:	bne	1649c <argp_failure@@Base+0xa04>
   15d64:	ldr	r3, [fp, #-100]	; 0xffffff9c
   15d68:	tst	r3, #8
   15d6c:	beq	16c58 <argp_failure@@Base+0x11c0>
   15d70:	ldr	r3, [fp, #-128]	; 0xffffff80
   15d74:	ldr	r3, [r3, #4]
   15d78:	cmp	r3, #0
   15d7c:	beq	16c58 <argp_failure@@Base+0x11c0>
   15d80:	cmp	r4, #0
   15d84:	bne	164bc <argp_failure@@Base+0xa24>
   15d88:	mov	r3, #0
   15d8c:	str	r3, [fp, #-88]	; 0xffffffa8
   15d90:	str	r3, [fp, #-84]	; 0xffffffac
   15d94:	str	r3, [fp, #-80]	; 0xffffffb0
   15d98:	ldr	r3, [fp, #-128]	; 0xffffff80
   15d9c:	ldr	r9, [r3]
   15da0:	ldr	r3, [r3, #4]
   15da4:	str	r3, [fp, #-116]	; 0xffffff8c
   15da8:	cmp	r3, #0
   15dac:	beq	16c54 <argp_failure@@Base+0x11bc>
   15db0:	movw	r3, #50184	; 0xc408
   15db4:	movt	r3, #2
   15db8:	str	r3, [fp, #-96]	; 0xffffffa0
   15dbc:	movw	r3, #44744	; 0xaec8
   15dc0:	movt	r3, #1
   15dc4:	str	r3, [fp, #-140]	; 0xffffff74
   15dc8:	movw	r3, #45248	; 0xb0c0
   15dcc:	movt	r3, #1
   15dd0:	str	r3, [fp, #-144]	; 0xffffff70
   15dd4:	b	16ad4 <argp_failure@@Base+0x103c>
   15dd8:	movw	r0, #44436	; 0xad94
   15ddc:	movt	r0, #1
   15de0:	bl	11334 <getenv@plt>
   15de4:	movw	r1, #50184	; 0xc408
   15de8:	movt	r1, #2
   15dec:	ldrd	r2, [r1]
   15df0:	strd	r2, [fp, #-76]	; 0xffffffb4
   15df4:	ldrd	r2, [r1, #8]
   15df8:	strd	r2, [fp, #-68]	; 0xffffffbc
   15dfc:	ldrd	r2, [r1, #16]
   15e00:	strd	r2, [fp, #-60]	; 0xffffffc4
   15e04:	ldrd	r2, [r1, #24]
   15e08:	strd	r2, [fp, #-52]	; 0xffffffcc
   15e0c:	ldrd	r2, [r1, #32]
   15e10:	strd	r2, [fp, #-44]	; 0xffffffd4
   15e14:	subs	r6, r0, #0
   15e18:	beq	15d04 <argp_failure@@Base+0x26c>
   15e1c:	movw	sl, #43964	; 0xabbc
   15e20:	movt	sl, #1
   15e24:	add	r8, sl, #168	; 0xa8
   15e28:	b	16084 <argp_failure@@Base+0x5ec>
   15e2c:	cmp	r0, #45	; 0x2d
   15e30:	cmpne	r0, #95	; 0x5f
   15e34:	moveq	r3, #1
   15e38:	movne	r3, #0
   15e3c:	ubfx	r1, r1, #3, #1
   15e40:	orrs	r3, r3, r1
   15e44:	beq	16e30 <argp_failure@@Base+0x1398>
   15e48:	mov	r4, r6
   15e4c:	ldrb	r3, [r4, #1]!
   15e50:	lsl	r1, r3, #1
   15e54:	ldrh	r1, [r2, r1]
   15e58:	ubfx	r1, r1, #3, #1
   15e5c:	cmp	r3, #95	; 0x5f
   15e60:	cmpne	r3, #45	; 0x2d
   15e64:	moveq	r3, #1
   15e68:	movne	r3, #0
   15e6c:	orrs	r3, r1, r3
   15e70:	bne	15e4c <argp_failure@@Base+0x3b4>
   15e74:	sub	r7, r4, r6
   15e78:	ldrb	r3, [r4]
   15e7c:	lsl	r1, r3, #1
   15e80:	ldrh	r1, [r2, r1]
   15e84:	tst	r1, #8192	; 0x2000
   15e88:	beq	15ea0 <argp_failure@@Base+0x408>
   15e8c:	ldrb	r3, [r4, #1]!
   15e90:	lsl	r1, r3, #1
   15e94:	ldrh	r1, [r2, r1]
   15e98:	tst	r1, #8192	; 0x2000
   15e9c:	bne	15e8c <argp_failure@@Base+0x3f4>
   15ea0:	cmp	r3, #44	; 0x2c
   15ea4:	cmpne	r3, #0
   15ea8:	beq	15f0c <argp_failure@@Base+0x474>
   15eac:	cmp	r3, #61	; 0x3d
   15eb0:	beq	15ed8 <argp_failure@@Base+0x440>
   15eb4:	ldrb	r3, [r4]
   15eb8:	lsl	r3, r3, #1
   15ebc:	ldrh	r3, [r2, r3]
   15ec0:	tst	r3, #2048	; 0x800
   15ec4:	streq	r9, [fp, #-96]	; 0xffffffa0
   15ec8:	streq	r9, [fp, #-112]	; 0xffffff90
   15ecc:	bne	15f70 <argp_failure@@Base+0x4d8>
   15ed0:	add	r5, sl, #24
   15ed4:	b	16018 <argp_failure@@Base+0x580>
   15ed8:	add	r1, r4, #1
   15edc:	ldrb	r3, [r4, #1]
   15ee0:	lsl	r3, r3, #1
   15ee4:	ldrh	r3, [r2, r3]
   15ee8:	tst	r3, #8192	; 0x2000
   15eec:	beq	15f68 <argp_failure@@Base+0x4d0>
   15ef0:	ldrb	r3, [r1, #1]!
   15ef4:	lsl	r3, r3, #1
   15ef8:	ldrh	r3, [r2, r3]
   15efc:	tst	r3, #8192	; 0x2000
   15f00:	bne	15ef0 <argp_failure@@Base+0x458>
   15f04:	mov	r4, r1
   15f08:	b	15eb4 <argp_failure@@Base+0x41c>
   15f0c:	cmp	r0, #110	; 0x6e
   15f10:	movne	r3, #1
   15f14:	strne	r3, [fp, #-96]	; 0xffffffa0
   15f18:	strne	r3, [fp, #-112]	; 0xffffff90
   15f1c:	bne	15ed0 <argp_failure@@Base+0x438>
   15f20:	ldrb	r3, [r6, #1]
   15f24:	cmp	r3, #111	; 0x6f
   15f28:	movne	r3, #1
   15f2c:	strne	r3, [fp, #-96]	; 0xffffffa0
   15f30:	strne	r3, [fp, #-112]	; 0xffffff90
   15f34:	bne	15ed0 <argp_failure@@Base+0x438>
   15f38:	ldrb	r3, [r6, #2]
   15f3c:	cmp	r3, #45	; 0x2d
   15f40:	movne	r3, #1
   15f44:	strne	r3, [fp, #-96]	; 0xffffffa0
   15f48:	strne	r3, [fp, #-112]	; 0xffffff90
   15f4c:	bne	15ed0 <argp_failure@@Base+0x438>
   15f50:	add	r6, r6, #3
   15f54:	sub	r7, r7, #3
   15f58:	str	r9, [fp, #-112]	; 0xffffff90
   15f5c:	mov	r3, #1
   15f60:	str	r3, [fp, #-96]	; 0xffffffa0
   15f64:	b	15ed0 <argp_failure@@Base+0x438>
   15f68:	mov	r4, r1
   15f6c:	b	15eb4 <argp_failure@@Base+0x41c>
   15f70:	mov	r2, #10
   15f74:	mov	r1, #0
   15f78:	mov	r0, r4
   15f7c:	bl	111e4 <strtol@plt>
   15f80:	str	r0, [fp, #-112]	; 0xffffff90
   15f84:	ldr	r2, [r5]
   15f88:	ldrb	r3, [r4]
   15f8c:	lsl	r3, r3, #1
   15f90:	ldrh	r3, [r2, r3]
   15f94:	tst	r3, #2048	; 0x800
   15f98:	beq	15fb0 <argp_failure@@Base+0x518>
   15f9c:	ldrb	r3, [r4, #1]!
   15fa0:	lsl	r3, r3, #1
   15fa4:	ldrh	r3, [r2, r3]
   15fa8:	tst	r3, #2048	; 0x800
   15fac:	bne	15f9c <argp_failure@@Base+0x504>
   15fb0:	ldrb	r3, [r4]
   15fb4:	lsl	r3, r3, #1
   15fb8:	ldrh	r3, [r2, r3]
   15fbc:	tst	r3, #8192	; 0x2000
   15fc0:	beq	15fe0 <argp_failure@@Base+0x548>
   15fc4:	ldrb	r3, [r4, #1]!
   15fc8:	lsl	r3, r3, #1
   15fcc:	ldrh	r3, [r2, r3]
   15fd0:	tst	r3, #8192	; 0x2000
   15fd4:	bne	15fc4 <argp_failure@@Base+0x52c>
   15fd8:	str	r9, [fp, #-96]	; 0xffffffa0
   15fdc:	b	15ed0 <argp_failure@@Base+0x438>
   15fe0:	str	r9, [fp, #-96]	; 0xffffffa0
   15fe4:	b	15ed0 <argp_failure@@Base+0x438>
   15fe8:	str	r6, [sp, #4]
   15fec:	str	r7, [sp]
   15ff0:	movw	r3, #44452	; 0xada4
   15ff4:	movt	r3, #1
   15ff8:	mov	r2, #0
   15ffc:	mov	r1, r2
   16000:	ldr	r0, [fp, #-104]	; 0xffffff98
   16004:	bl	15a98 <argp_failure@@Base>
   16008:	b	1606c <argp_failure@@Base+0x5d4>
   1600c:	add	r5, r5, #16
   16010:	cmp	r5, r8
   16014:	beq	16154 <argp_failure@@Base+0x6bc>
   16018:	mov	r0, r5
   1601c:	bl	113b8 <strlen@plt>
   16020:	cmp	r0, r7
   16024:	bne	1600c <argp_failure@@Base+0x574>
   16028:	mov	r2, r7
   1602c:	mov	r1, r5
   16030:	mov	r0, r6
   16034:	bl	11508 <strncmp@plt>
   16038:	cmp	r0, #0
   1603c:	bne	1600c <argp_failure@@Base+0x574>
   16040:	ldr	r3, [fp, #-96]	; 0xffffffa0
   16044:	cmp	r3, #0
   16048:	beq	16058 <argp_failure@@Base+0x5c0>
   1604c:	ldrb	r3, [r5, #14]
   16050:	cmp	r3, #0
   16054:	beq	15fe8 <argp_failure@@Base+0x550>
   16058:	ldrb	r3, [r5, #15]
   1605c:	sub	r2, fp, #36	; 0x24
   16060:	add	r3, r2, r3
   16064:	ldr	r2, [fp, #-112]	; 0xffffff90
   16068:	str	r2, [r3, #-40]	; 0xffffffd8
   1606c:	cmp	r5, r8
   16070:	beq	16154 <argp_failure@@Base+0x6bc>
   16074:	ldrb	r3, [r4]
   16078:	cmp	r3, #44	; 0x2c
   1607c:	addeq	r6, r4, #1
   16080:	movne	r6, r4
   16084:	ldrb	r3, [r6]
   16088:	cmp	r3, #0
   1608c:	beq	160e4 <argp_failure@@Base+0x64c>
   16090:	bl	11394 <__ctype_b_loc@plt>
   16094:	mov	r5, r0
   16098:	ldr	r2, [r0]
   1609c:	mov	r3, r6
   160a0:	mov	r6, r3
   160a4:	ldrb	r0, [r3], #1
   160a8:	lsl	r1, r0, #1
   160ac:	ldrh	r1, [r2, r1]
   160b0:	tst	r1, #8192	; 0x2000
   160b4:	bne	160a0 <argp_failure@@Base+0x608>
   160b8:	tst	r1, #1024	; 0x400
   160bc:	bne	15e2c <argp_failure@@Base+0x394>
   160c0:	cmp	r0, #0
   160c4:	beq	16084 <argp_failure@@Base+0x5ec>
   160c8:	str	r6, [sp]
   160cc:	movw	r3, #44540	; 0xadfc
   160d0:	movt	r3, #1
   160d4:	mov	r2, #0
   160d8:	mov	r1, r2
   160dc:	ldr	r0, [fp, #-104]	; 0xffffff98
   160e0:	bl	15a98 <argp_failure@@Base>
   160e4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   160e8:	ldr	r3, [pc, #3488]	; 16e90 <argp_failure@@Base+0x13f8>
   160ec:	add	r1, r3, #144	; 0x90
   160f0:	add	r3, r3, #16
   160f4:	cmp	r3, r1
   160f8:	beq	16178 <argp_failure@@Base+0x6e0>
   160fc:	ldrb	r2, [r3, #14]
   16100:	cmp	r2, #0
   16104:	bne	160f0 <argp_failure@@Base+0x658>
   16108:	ldrb	r2, [r3, #15]
   1610c:	cmp	r2, #32
   16110:	beq	160f0 <argp_failure@@Base+0x658>
   16114:	sub	ip, fp, #36	; 0x24
   16118:	add	r2, ip, r2
   1611c:	ldr	r2, [r2, #-40]	; 0xffffffd8
   16120:	cmp	r2, r0
   16124:	blt	160f0 <argp_failure@@Base+0x658>
   16128:	str	r3, [sp, #4]
   1612c:	movw	r3, #44624	; 0xae50
   16130:	movt	r3, #1
   16134:	str	r3, [sp]
   16138:	movw	r3, #44572	; 0xae1c
   1613c:	movt	r3, #1
   16140:	mov	r2, #0
   16144:	mov	r1, r2
   16148:	ldr	r0, [fp, #-104]	; 0xffffff98
   1614c:	bl	15a98 <argp_failure@@Base>
   16150:	b	15d04 <argp_failure@@Base+0x26c>
   16154:	str	r6, [sp, #4]
   16158:	str	r7, [sp]
   1615c:	movw	r3, #44500	; 0xadd4
   16160:	movt	r3, #1
   16164:	mov	r2, #0
   16168:	mov	r1, r2
   1616c:	ldr	r0, [fp, #-104]	; 0xffffff98
   16170:	bl	15a98 <argp_failure@@Base>
   16174:	b	16074 <argp_failure@@Base+0x5dc>
   16178:	movw	r1, #50184	; 0xc408
   1617c:	movt	r1, #2
   16180:	ldrd	r2, [fp, #-76]	; 0xffffffb4
   16184:	strd	r2, [r1]
   16188:	ldrd	r2, [fp, #-68]	; 0xffffffbc
   1618c:	strd	r2, [r1, #8]
   16190:	ldrd	r2, [fp, #-60]	; 0xffffffc4
   16194:	strd	r2, [r1, #16]
   16198:	ldrd	r2, [fp, #-52]	; 0xffffffcc
   1619c:	strd	r2, [r1, #24]
   161a0:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   161a4:	strd	r2, [r1, #32]
   161a8:	mov	r3, #1
   161ac:	str	r3, [r1, #36]	; 0x24
   161b0:	b	15d04 <argp_failure@@Base+0x26c>
   161b4:	ldr	r0, [fp, #-132]	; 0xffffff7c
   161b8:	bl	112c8 <funlockfile@plt>
   161bc:	b	16ccc <argp_failure@@Base+0x1234>
   161c0:	mov	r1, #0
   161c4:	ldr	r0, [fp, #-108]	; 0xffffff94
   161c8:	bl	153e0 <__assert_fail@plt+0x3ea8>
   161cc:	str	r0, [fp, #-128]	; 0xffffff80
   161d0:	movw	r1, #44632	; 0xae58
   161d4:	movt	r1, #1
   161d8:	bl	13e20 <__assert_fail@plt+0x28e8>
   161dc:	cmp	r0, #0
   161e0:	mvnne	r3, #0
   161e4:	strne	r3, [r0, #12]
   161e8:	movw	r1, #44640	; 0xae60
   161ec:	movt	r1, #1
   161f0:	ldr	r0, [fp, #-128]	; 0xffffff80
   161f4:	bl	13e20 <__assert_fail@plt+0x28e8>
   161f8:	cmp	r0, #0
   161fc:	mvnne	r3, #0
   16200:	strne	r3, [r0, #12]
   16204:	ldr	r0, [fp, #-128]	; 0xffffff80
   16208:	ldr	r3, [r0, #4]
   1620c:	cmp	r3, #0
   16210:	beq	15d3c <argp_failure@@Base+0x2a4>
   16214:	ldr	r2, [r0]
   16218:	mov	r3, #0
   1621c:	str	r3, [r2, #24]
   16220:	add	r3, r3, #1
   16224:	add	r2, r2, #28
   16228:	ldr	r1, [r0, #4]
   1622c:	cmp	r3, r1
   16230:	bcc	1621c <argp_failure@@Base+0x784>
   16234:	movw	r3, #20688	; 0x50d0
   16238:	movt	r3, #1
   1623c:	mov	r2, #28
   16240:	ldr	r0, [fp, #-128]	; 0xffffff80
   16244:	ldr	r0, [r0]
   16248:	bl	114cc <qsort@plt>
   1624c:	b	15d3c <argp_failure@@Base+0x2a4>
   16250:	ldr	r0, [fp, #-108]	; 0xffffff94
   16254:	bl	13ed4 <__assert_fail@plt+0x299c>
   16258:	mov	r2, r0
   1625c:	add	r3, r0, #7
   16260:	bic	r3, r3, #7
   16264:	sub	sp, sp, r3
   16268:	add	r9, sp, #8
   1626c:	mov	r1, #0
   16270:	mov	r0, r9
   16274:	bl	1140c <memset@plt>
   16278:	mov	r5, #1
   1627c:	movw	r4, #50184	; 0xc408
   16280:	movt	r4, #2
   16284:	movw	r3, #44664	; 0xae78
   16288:	movt	r3, #1
   1628c:	str	r3, [fp, #-116]	; 0xffffff8c
   16290:	movw	r8, #44656	; 0xae70
   16294:	movt	r8, #1
   16298:	str	r9, [fp, #-96]	; 0xffffffa0
   1629c:	ldr	r9, [fp, #-128]	; 0xffffff80
   162a0:	str	r8, [fp, #-112]	; 0xffffff90
   162a4:	ldr	r8, [fp, #-100]	; 0xffffff9c
   162a8:	b	16358 <argp_failure@@Base+0x8c0>
   162ac:	mov	r0, sl
   162b0:	bl	190bc <argp_parse@@Base+0x19a8>
   162b4:	b	16374 <argp_failure@@Base+0x8dc>
   162b8:	mov	r0, sl
   162bc:	bl	190bc <argp_parse@@Base+0x19a8>
   162c0:	b	163c0 <argp_failure@@Base+0x928>
   162c4:	mov	r1, sl
   162c8:	mov	r0, r9
   162cc:	bl	140a8 <__assert_fail@plt+0x2b70>
   162d0:	orr	r8, r8, #2
   162d4:	str	sl, [sp]
   162d8:	mov	r3, #1
   162dc:	sub	r2, fp, #76	; 0x4c
   162e0:	ldr	r1, [fp, #-104]	; 0xffffff98
   162e4:	ldr	r0, [fp, #-108]	; 0xffffff94
   162e8:	bl	14514 <__assert_fail@plt+0x2fdc>
   162ec:	mov	r6, r0
   162f0:	ldr	r3, [sl, #28]
   162f4:	ldr	r2, [sl, #24]
   162f8:	sub	r3, r3, r2
   162fc:	ldr	r2, [sl, #16]
   16300:	cmp	r3, r2
   16304:	bhi	16438 <argp_failure@@Base+0x9a0>
   16308:	str	r7, [sl, #12]
   1630c:	ldr	r3, [sl, #28]
   16310:	ldr	r2, [sl, #24]
   16314:	sub	r3, r3, r2
   16318:	ldr	r2, [sl, #16]
   1631c:	cmp	r3, r2
   16320:	bhi	16444 <argp_failure@@Base+0x9ac>
   16324:	str	r5, [sl, #4]
   16328:	ldr	r2, [sl, #28]
   1632c:	ldr	r3, [sl, #32]
   16330:	cmp	r2, r3
   16334:	bcs	16450 <argp_failure@@Base+0x9b8>
   16338:	ldr	r3, [sl, #28]
   1633c:	add	r2, r3, #1
   16340:	str	r2, [sl, #28]
   16344:	mov	r2, #10
   16348:	strb	r2, [r3]
   1634c:	mov	r5, #0
   16350:	cmp	r6, r5
   16354:	beq	16468 <argp_failure@@Base+0x9d0>
   16358:	ldr	r6, [r4, #28]
   1635c:	ldr	r3, [sl, #28]
   16360:	ldr	r2, [sl, #24]
   16364:	sub	r3, r3, r2
   16368:	ldr	r2, [sl, #16]
   1636c:	cmp	r3, r2
   16370:	bhi	162ac <argp_failure@@Base+0x814>
   16374:	ldr	r7, [sl, #12]
   16378:	str	r6, [sl, #12]
   1637c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   16380:	str	r3, [fp, #-76]	; 0xffffffb4
   16384:	cmp	r5, #0
   16388:	ldr	r3, [fp, #4]
   1638c:	movwne	r2, #44648	; 0xae68
   16390:	movtne	r2, #1
   16394:	ldreq	r2, [fp, #-116]	; 0xffffff8c
   16398:	ldr	r1, [fp, #-112]	; 0xffffff90
   1639c:	mov	r0, sl
   163a0:	bl	19734 <argp_parse@@Base+0x2020>
   163a4:	ldr	r6, [r4, #28]
   163a8:	ldr	r3, [sl, #28]
   163ac:	ldr	r2, [sl, #24]
   163b0:	sub	r3, r3, r2
   163b4:	ldr	r2, [sl, #16]
   163b8:	cmp	r3, r2
   163bc:	bhi	162b8 <argp_failure@@Base+0x820>
   163c0:	ldr	r5, [sl, #4]
   163c4:	str	r6, [sl, #4]
   163c8:	tst	r8, #2
   163cc:	beq	162c4 <argp_failure@@Base+0x82c>
   163d0:	ldr	r3, [r9, #4]
   163d4:	cmp	r3, #0
   163d8:	beq	162d4 <argp_failure@@Base+0x83c>
   163dc:	ldr	r3, [sl, #28]
   163e0:	add	r3, r3, #12
   163e4:	ldr	r2, [sl, #32]
   163e8:	cmp	r2, r3
   163ec:	bcs	16404 <argp_failure@@Base+0x96c>
   163f0:	mov	r1, #12
   163f4:	mov	r0, sl
   163f8:	bl	19634 <argp_parse@@Base+0x1f20>
   163fc:	cmp	r0, #0
   16400:	beq	162d4 <argp_failure@@Base+0x83c>
   16404:	ldr	r2, [sl, #28]
   16408:	movw	r3, #44672	; 0xae80
   1640c:	movt	r3, #1
   16410:	ldr	r0, [r3]
   16414:	ldr	r1, [r3, #4]
   16418:	str	r0, [r2]
   1641c:	str	r1, [r2, #4]
   16420:	ldr	r3, [r3, #8]
   16424:	str	r3, [r2, #8]
   16428:	ldr	r3, [sl, #28]
   1642c:	add	r3, r3, #12
   16430:	str	r3, [sl, #28]
   16434:	b	162d4 <argp_failure@@Base+0x83c>
   16438:	mov	r0, sl
   1643c:	bl	190bc <argp_parse@@Base+0x19a8>
   16440:	b	16308 <argp_failure@@Base+0x870>
   16444:	mov	r0, sl
   16448:	bl	190bc <argp_parse@@Base+0x19a8>
   1644c:	b	16324 <argp_failure@@Base+0x88c>
   16450:	mov	r1, #1
   16454:	mov	r0, sl
   16458:	bl	19634 <argp_parse@@Base+0x1f20>
   1645c:	cmp	r0, #0
   16460:	bne	16338 <argp_failure@@Base+0x8a0>
   16464:	b	1634c <argp_failure@@Base+0x8b4>
   16468:	str	r8, [fp, #-100]	; 0xffffff9c
   1646c:	mov	r4, #1
   16470:	b	15d4c <argp_failure@@Base+0x2b4>
   16474:	str	sl, [sp, #4]
   16478:	mov	r3, #1
   1647c:	str	r3, [sp]
   16480:	mov	r3, #0
   16484:	mov	r2, r3
   16488:	ldr	r1, [fp, #-104]	; 0xffffff98
   1648c:	ldr	r0, [fp, #-108]	; 0xffffff94
   16490:	bl	14ac4 <__assert_fail@plt+0x358c>
   16494:	orr	r4, r4, r0
   16498:	b	15d58 <argp_failure@@Base+0x2c0>
   1649c:	ldr	r3, [fp, #4]
   164a0:	mov	r2, r3
   164a4:	movw	r1, #44688	; 0xae90
   164a8:	movt	r1, #1
   164ac:	mov	r0, sl
   164b0:	bl	19734 <argp_parse@@Base+0x2020>
   164b4:	mov	r4, #1
   164b8:	b	15d64 <argp_failure@@Base+0x2cc>
   164bc:	ldr	r2, [sl, #28]
   164c0:	ldr	r3, [sl, #32]
   164c4:	cmp	r2, r3
   164c8:	bcs	164e4 <argp_failure@@Base+0xa4c>
   164cc:	ldr	r3, [sl, #28]
   164d0:	add	r2, r3, #1
   164d4:	str	r2, [sl, #28]
   164d8:	mov	r2, #10
   164dc:	strb	r2, [r3]
   164e0:	b	15d88 <argp_failure@@Base+0x2f0>
   164e4:	mov	r1, #1
   164e8:	mov	r0, sl
   164ec:	bl	19634 <argp_parse@@Base+0x1f20>
   164f0:	cmp	r0, #0
   164f4:	bne	164cc <argp_failure@@Base+0xa34>
   164f8:	b	15d88 <argp_failure@@Base+0x2f0>
   164fc:	mov	r0, sl
   16500:	bl	190bc <argp_parse@@Base+0x19a8>
   16504:	b	16af4 <argp_failure@@Base+0x105c>
   16508:	add	r3, r3, #24
   1650c:	subs	r2, r2, #1
   16510:	beq	16534 <argp_failure@@Base+0xa9c>
   16514:	ldr	r1, [r3, #-24]	; 0xffffffe8
   16518:	cmp	r1, #0
   1651c:	beq	16508 <argp_failure@@Base+0xa70>
   16520:	ldr	r1, [r3, #-12]
   16524:	tst	r1, #2
   16528:	bne	16508 <argp_failure@@Base+0xa70>
   1652c:	mov	r3, #1
   16530:	str	r3, [fp, #-112]	; 0xffffff90
   16534:	ldr	r3, [fp, #-96]	; 0xffffffa0
   16538:	ldr	r5, [r3, #8]
   1653c:	ldr	r3, [sl, #28]
   16540:	ldr	r2, [sl, #24]
   16544:	sub	r3, r3, r2
   16548:	ldr	r2, [sl, #16]
   1654c:	cmp	r3, r2
   16550:	bhi	16570 <argp_failure@@Base+0xad8>
   16554:	str	r5, [sl, #12]
   16558:	ldr	r6, [r9, #4]
   1655c:	cmp	r6, #0
   16560:	beq	16670 <argp_failure@@Base+0xbd8>
   16564:	mov	r5, r4
   16568:	str	r9, [fp, #-136]	; 0xffffff78
   1656c:	b	16e58 <argp_failure@@Base+0x13c0>
   16570:	mov	r0, sl
   16574:	bl	190bc <argp_parse@@Base+0x19a8>
   16578:	b	16554 <argp_failure@@Base+0xabc>
   1657c:	tst	r9, #2
   16580:	beq	1658c <argp_failure@@Base+0xaf4>
   16584:	add	r8, r8, #1
   16588:	b	16e4c <argp_failure@@Base+0x13b4>
   1658c:	sub	r1, fp, #76	; 0x4c
   16590:	ldr	r3, [fp, #-96]	; 0xffffffa0
   16594:	ldr	r0, [r3, #8]
   16598:	bl	14920 <__assert_fail@plt+0x33e8>
   1659c:	ldr	r2, [sl, #28]
   165a0:	ldr	r3, [sl, #32]
   165a4:	cmp	r2, r3
   165a8:	bcs	16628 <argp_failure@@Base+0xb90>
   165ac:	ldr	r3, [sl, #28]
   165b0:	add	r2, r3, #1
   165b4:	str	r2, [sl, #28]
   165b8:	mov	r2, #45	; 0x2d
   165bc:	strb	r2, [r3]
   165c0:	ldrb	r7, [r8]
   165c4:	ldr	r2, [sl, #28]
   165c8:	ldr	r3, [sl, #32]
   165cc:	cmp	r2, r3
   165d0:	bcs	16640 <argp_failure@@Base+0xba8>
   165d4:	ldr	r3, [sl, #28]
   165d8:	add	r2, r3, #1
   165dc:	str	r2, [sl, #28]
   165e0:	strb	r7, [r3]
   165e4:	ldr	r3, [fp, #-112]	; 0xffffff90
   165e8:	cmp	r3, #0
   165ec:	beq	16600 <argp_failure@@Base+0xb68>
   165f0:	ldr	r3, [fp, #-96]	; 0xffffffa0
   165f4:	ldr	r3, [r3]
   165f8:	cmp	r3, #0
   165fc:	beq	16658 <argp_failure@@Base+0xbc0>
   16600:	ldr	r2, [r4, #8]
   16604:	cmp	r2, #0
   16608:	beq	16584 <argp_failure@@Base+0xaec>
   1660c:	ldr	r3, [r4, #12]
   16610:	tst	r3, #1
   16614:	ldrne	r1, [fp, #-140]	; 0xffffff74
   16618:	ldreq	r1, [fp, #-144]	; 0xffffff70
   1661c:	mov	r0, sl
   16620:	bl	19734 <argp_parse@@Base+0x2020>
   16624:	b	16584 <argp_failure@@Base+0xaec>
   16628:	mov	r1, #1
   1662c:	mov	r0, sl
   16630:	bl	19634 <argp_parse@@Base+0x1f20>
   16634:	cmp	r0, #0
   16638:	bne	165ac <argp_failure@@Base+0xb14>
   1663c:	b	165c0 <argp_failure@@Base+0xb28>
   16640:	mov	r1, #1
   16644:	mov	r0, sl
   16648:	bl	19634 <argp_parse@@Base+0x1f20>
   1664c:	cmp	r0, #0
   16650:	bne	165d4 <argp_failure@@Base+0xb3c>
   16654:	b	165e4 <argp_failure@@Base+0xb4c>
   16658:	ldr	r3, [r4, #8]
   1665c:	cmp	r3, #0
   16660:	movne	r3, #1
   16664:	strne	r3, [fp, #-80]	; 0xffffffb0
   16668:	b	16584 <argp_failure@@Base+0xaec>
   1666c:	ldr	r9, [fp, #-136]	; 0xffffff78
   16670:	ldr	r3, [r4, #12]
   16674:	tst	r3, #8
   16678:	beq	16750 <argp_failure@@Base+0xcb8>
   1667c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   16680:	ldr	r5, [r3, #16]
   16684:	ldr	r3, [sl, #28]
   16688:	ldr	r2, [sl, #24]
   1668c:	sub	r3, r3, r2
   16690:	ldr	r2, [sl, #16]
   16694:	cmp	r3, r2
   16698:	bhi	166b4 <argp_failure@@Base+0xc1c>
   1669c:	str	r5, [sl, #12]
   166a0:	ldr	r6, [r9, #4]
   166a4:	cmp	r6, #0
   166a8:	beq	16818 <argp_failure@@Base+0xd80>
   166ac:	add	r5, r4, #24
   166b0:	b	166e8 <argp_failure@@Base+0xc50>
   166b4:	mov	r0, sl
   166b8:	bl	190bc <argp_parse@@Base+0x19a8>
   166bc:	b	1669c <argp_failure@@Base+0xc04>
   166c0:	mov	r2, r8
   166c4:	mov	r1, r7
   166c8:	ldr	r0, [sl, #28]
   166cc:	bl	11268 <memcpy@plt>
   166d0:	ldr	r3, [sl, #28]
   166d4:	add	r8, r3, r8
   166d8:	str	r8, [sl, #28]
   166dc:	add	r5, r5, #24
   166e0:	subs	r6, r6, #1
   166e4:	beq	16818 <argp_failure@@Base+0xd80>
   166e8:	ldr	r3, [r5, #-24]	; 0xffffffe8
   166ec:	cmp	r3, #0
   166f0:	beq	166dc <argp_failure@@Base+0xc44>
   166f4:	ldr	r3, [r5, #-12]
   166f8:	tst	r3, #2
   166fc:	bne	166dc <argp_failure@@Base+0xc44>
   16700:	sub	r1, fp, #76	; 0x4c
   16704:	ldr	r3, [fp, #-96]	; 0xffffffa0
   16708:	ldr	r0, [r3, #16]
   1670c:	bl	14920 <__assert_fail@plt+0x33e8>
   16710:	ldr	r7, [r5, #-24]	; 0xffffffe8
   16714:	mov	r0, r7
   16718:	bl	113b8 <strlen@plt>
   1671c:	subs	r8, r0, #0
   16720:	beq	166dc <argp_failure@@Base+0xc44>
   16724:	ldr	r3, [sl, #28]
   16728:	add	r3, r3, r8
   1672c:	ldr	r2, [sl, #32]
   16730:	cmp	r2, r3
   16734:	bcs	166c0 <argp_failure@@Base+0xc28>
   16738:	mov	r1, r8
   1673c:	mov	r0, sl
   16740:	bl	19634 <argp_parse@@Base+0x1f20>
   16744:	cmp	r0, #0
   16748:	beq	166dc <argp_failure@@Base+0xc44>
   1674c:	b	166c0 <argp_failure@@Base+0xc28>
   16750:	ldr	r3, [fp, #-96]	; 0xffffffa0
   16754:	ldr	r5, [r3, #12]
   16758:	ldr	r3, [sl, #28]
   1675c:	ldr	r2, [sl, #24]
   16760:	sub	r3, r3, r2
   16764:	ldr	r2, [sl, #16]
   16768:	cmp	r3, r2
   1676c:	bhi	1679c <argp_failure@@Base+0xd04>
   16770:	str	r5, [sl, #12]
   16774:	ldr	r6, [r9, #4]
   16778:	cmp	r6, #0
   1677c:	beq	16818 <argp_failure@@Base+0xd80>
   16780:	add	r5, r4, #24
   16784:	movw	r8, #44752	; 0xaed0
   16788:	movt	r8, #1
   1678c:	movw	r7, #44768	; 0xaee0
   16790:	movt	r7, #1
   16794:	str	r7, [fp, #-112]	; 0xffffff90
   16798:	b	167b4 <argp_failure@@Base+0xd1c>
   1679c:	mov	r0, sl
   167a0:	bl	190bc <argp_parse@@Base+0x19a8>
   167a4:	b	16770 <argp_failure@@Base+0xcd8>
   167a8:	add	r5, r5, #24
   167ac:	subs	r6, r6, #1
   167b0:	beq	16818 <argp_failure@@Base+0xd80>
   167b4:	ldr	r3, [r5, #-24]	; 0xffffffe8
   167b8:	cmp	r3, #0
   167bc:	beq	167a8 <argp_failure@@Base+0xd10>
   167c0:	ldr	r3, [r5, #-12]
   167c4:	tst	r3, #2
   167c8:	bne	167a8 <argp_failure@@Base+0xd10>
   167cc:	sub	r1, fp, #76	; 0x4c
   167d0:	ldr	r3, [fp, #-96]	; 0xffffffa0
   167d4:	ldr	r0, [r3, #12]
   167d8:	bl	14920 <__assert_fail@plt+0x33e8>
   167dc:	ldr	r2, [r5, #-24]	; 0xffffffe8
   167e0:	mov	r1, r8
   167e4:	mov	r0, sl
   167e8:	bl	19734 <argp_parse@@Base+0x2020>
   167ec:	ldr	r2, [r4, #8]
   167f0:	cmp	r2, #0
   167f4:	beq	167a8 <argp_failure@@Base+0xd10>
   167f8:	ldr	r3, [r4, #12]
   167fc:	tst	r3, #1
   16800:	movwne	r1, #44760	; 0xaed8
   16804:	movtne	r1, #1
   16808:	ldreq	r1, [fp, #-112]	; 0xffffff90
   1680c:	mov	r0, sl
   16810:	bl	19734 <argp_parse@@Base+0x2020>
   16814:	b	167a8 <argp_failure@@Base+0xd10>
   16818:	ldr	r3, [sl, #28]
   1681c:	ldr	r2, [sl, #24]
   16820:	sub	r3, r3, r2
   16824:	ldr	r2, [sl, #16]
   16828:	cmp	r3, r2
   1682c:	bhi	16898 <argp_failure@@Base+0xe00>
   16830:	mov	r3, #0
   16834:	str	r3, [sl, #4]
   16838:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1683c:	cmp	r3, #0
   16840:	beq	168a4 <argp_failure@@Base+0xe0c>
   16844:	ldr	r3, [r4, #12]
   16848:	tst	r3, #8
   1684c:	bne	16878 <argp_failure@@Base+0xde0>
   16850:	ldr	r5, [r4, #4]
   16854:	sub	r3, r5, #1
   16858:	cmp	r3, #254	; 0xfe
   1685c:	bhi	16878 <argp_failure@@Base+0xde0>
   16860:	bl	11394 <__ctype_b_loc@plt>
   16864:	ldr	r3, [r0]
   16868:	lsl	r5, r5, #1
   1686c:	ldrh	r3, [r3, r5]
   16870:	tst	r3, #16384	; 0x4000
   16874:	bne	16a80 <argp_failure@@Base+0xfe8>
   16878:	ldr	r3, [r4]
   1687c:	cmp	r3, #0
   16880:	bne	16a80 <argp_failure@@Base+0xfe8>
   16884:	sub	r2, fp, #76	; 0x4c
   16888:	ldr	r1, [r9, #20]
   1688c:	ldr	r0, [r4, #16]
   16890:	bl	14718 <__assert_fail@plt+0x31e0>
   16894:	b	16a7c <argp_failure@@Base+0xfe4>
   16898:	mov	r0, sl
   1689c:	bl	190bc <argp_parse@@Base+0x19a8>
   168a0:	b	16830 <argp_failure@@Base+0xd98>
   168a4:	ldr	r5, [r4, #16]
   168a8:	ldr	r3, [fp, #-104]	; 0xffffff98
   168ac:	ldr	r2, [r9, #20]
   168b0:	ldr	r1, [r4, #4]
   168b4:	mov	r0, r5
   168b8:	bl	13f40 <__assert_fail@plt+0x2a08>
   168bc:	subs	r4, r0, #0
   168c0:	beq	16a38 <argp_failure@@Base+0xfa0>
   168c4:	ldrb	r3, [r4]
   168c8:	cmp	r3, #0
   168cc:	beq	16a30 <argp_failure@@Base+0xf98>
   168d0:	ldr	r3, [sl, #28]
   168d4:	ldr	r2, [sl, #24]
   168d8:	sub	r3, r3, r2
   168dc:	ldr	r2, [sl, #16]
   168e0:	cmp	r3, r2
   168e4:	bhi	16990 <argp_failure@@Base+0xef8>
   168e8:	ldr	r6, [sl, #20]
   168ec:	bic	r6, r6, r6, asr #31
   168f0:	ldr	r3, [fp, #-96]	; 0xffffffa0
   168f4:	ldr	r7, [r3, #20]
   168f8:	str	r7, [sl, #4]
   168fc:	ldr	r3, [fp, #-96]	; 0xffffffa0
   16900:	ldr	r7, [r3, #20]
   16904:	ldr	r3, [sl, #28]
   16908:	ldr	r2, [sl, #24]
   1690c:	sub	r3, r3, r2
   16910:	ldr	r2, [sl, #16]
   16914:	cmp	r3, r2
   16918:	bhi	169cc <argp_failure@@Base+0xf34>
   1691c:	str	r7, [sl, #12]
   16920:	ldr	r3, [fp, #-96]	; 0xffffffa0
   16924:	ldr	r1, [r3, #20]
   16928:	add	r3, r1, #3
   1692c:	cmp	r6, r3
   16930:	bhi	169d8 <argp_failure@@Base+0xf40>
   16934:	cmp	r6, r1
   16938:	bcc	16a18 <argp_failure@@Base+0xf80>
   1693c:	ldr	r3, [sl, #28]
   16940:	add	r3, r3, #3
   16944:	ldr	r2, [sl, #32]
   16948:	cmp	r2, r3
   1694c:	bcs	16964 <argp_failure@@Base+0xecc>
   16950:	mov	r1, #3
   16954:	mov	r0, sl
   16958:	bl	19634 <argp_parse@@Base+0x1f20>
   1695c:	cmp	r0, #0
   16960:	beq	16a20 <argp_failure@@Base+0xf88>
   16964:	ldr	r2, [sl, #28]
   16968:	movw	r3, #44772	; 0xaee4
   1696c:	movt	r3, #1
   16970:	ldrh	r1, [r3]
   16974:	strh	r1, [r2]
   16978:	ldrb	r3, [r3, #2]
   1697c:	strb	r3, [r2, #2]
   16980:	ldr	r3, [sl, #28]
   16984:	add	r3, r3, #3
   16988:	str	r3, [sl, #28]
   1698c:	b	16a20 <argp_failure@@Base+0xf88>
   16990:	mov	r0, sl
   16994:	bl	190bc <argp_parse@@Base+0x19a8>
   16998:	ldr	r6, [sl, #20]
   1699c:	bic	r6, r6, r6, asr #31
   169a0:	ldr	r3, [fp, #-96]	; 0xffffffa0
   169a4:	ldr	r7, [r3, #20]
   169a8:	ldr	r3, [sl, #28]
   169ac:	ldr	r2, [sl, #24]
   169b0:	sub	r3, r3, r2
   169b4:	ldr	r2, [sl, #16]
   169b8:	cmp	r3, r2
   169bc:	bls	168f8 <argp_failure@@Base+0xe60>
   169c0:	mov	r0, sl
   169c4:	bl	190bc <argp_parse@@Base+0x19a8>
   169c8:	b	168f8 <argp_failure@@Base+0xe60>
   169cc:	mov	r0, sl
   169d0:	bl	190bc <argp_parse@@Base+0x19a8>
   169d4:	b	1691c <argp_failure@@Base+0xe84>
   169d8:	ldr	r2, [sl, #28]
   169dc:	ldr	r3, [sl, #32]
   169e0:	cmp	r2, r3
   169e4:	bcs	16a00 <argp_failure@@Base+0xf68>
   169e8:	ldr	r3, [sl, #28]
   169ec:	add	r2, r3, #1
   169f0:	str	r2, [sl, #28]
   169f4:	mov	r2, #10
   169f8:	strb	r2, [r3]
   169fc:	b	16a20 <argp_failure@@Base+0xf88>
   16a00:	mov	r1, #1
   16a04:	mov	r0, sl
   16a08:	bl	19634 <argp_parse@@Base+0x1f20>
   16a0c:	cmp	r0, #0
   16a10:	bne	169e8 <argp_failure@@Base+0xf50>
   16a14:	b	16a20 <argp_failure@@Base+0xf88>
   16a18:	mov	r0, sl
   16a1c:	bl	14290 <__assert_fail@plt+0x2d58>
   16a20:	mov	r0, r4
   16a24:	bl	113b8 <strlen@plt>
   16a28:	subs	r6, r0, #0
   16a2c:	bne	16b58 <argp_failure@@Base+0x10c0>
   16a30:	cmp	r5, r4
   16a34:	bne	16ba0 <argp_failure@@Base+0x1108>
   16a38:	ldr	r3, [sl, #28]
   16a3c:	ldr	r2, [sl, #24]
   16a40:	sub	r3, r3, r2
   16a44:	ldr	r2, [sl, #16]
   16a48:	cmp	r3, r2
   16a4c:	bhi	16bac <argp_failure@@Base+0x1114>
   16a50:	mov	r3, #0
   16a54:	str	r3, [sl, #4]
   16a58:	ldr	r2, [sl, #28]
   16a5c:	ldr	r3, [sl, #32]
   16a60:	cmp	r2, r3
   16a64:	bcs	16bb8 <argp_failure@@Base+0x1120>
   16a68:	ldr	r3, [sl, #28]
   16a6c:	add	r2, r3, #1
   16a70:	str	r2, [sl, #28]
   16a74:	mov	r2, #10
   16a78:	strb	r2, [r3]
   16a7c:	str	r9, [fp, #-88]	; 0xffffffa8
   16a80:	ldr	r3, [sl, #28]
   16a84:	ldr	r2, [sl, #24]
   16a88:	sub	r3, r3, r2
   16a8c:	ldr	r2, [sl, #16]
   16a90:	cmp	r3, r2
   16a94:	bhi	16bd0 <argp_failure@@Base+0x1138>
   16a98:	ldr	r3, [fp, #-120]	; 0xffffff88
   16a9c:	str	r3, [sl, #4]
   16aa0:	ldr	r3, [sl, #28]
   16aa4:	ldr	r2, [sl, #24]
   16aa8:	sub	r3, r3, r2
   16aac:	ldr	r2, [sl, #16]
   16ab0:	cmp	r3, r2
   16ab4:	bhi	16bdc <argp_failure@@Base+0x1144>
   16ab8:	ldr	r3, [fp, #-124]	; 0xffffff84
   16abc:	str	r3, [sl, #12]
   16ac0:	add	r9, r9, #28
   16ac4:	ldr	r3, [fp, #-116]	; 0xffffff8c
   16ac8:	subs	r3, r3, #1
   16acc:	str	r3, [fp, #-116]	; 0xffffff8c
   16ad0:	beq	16be8 <argp_failure@@Base+0x1150>
   16ad4:	ldr	r4, [r9]
   16ad8:	ldr	r8, [r9, #8]
   16adc:	ldr	r3, [sl, #28]
   16ae0:	ldr	r2, [sl, #24]
   16ae4:	sub	r3, r3, r2
   16ae8:	ldr	r2, [sl, #16]
   16aec:	cmp	r3, r2
   16af0:	bhi	164fc <argp_failure@@Base+0xa64>
   16af4:	ldr	r3, [sl, #4]
   16af8:	str	r3, [fp, #-120]	; 0xffffff88
   16afc:	mov	r3, #0
   16b00:	str	r3, [sl, #4]
   16b04:	ldr	r3, [sl, #12]
   16b08:	str	r3, [fp, #-124]	; 0xffffff84
   16b0c:	str	r9, [fp, #-76]	; 0xffffffb4
   16b10:	str	sl, [fp, #-72]	; 0xffffffb8
   16b14:	sub	r3, fp, #88	; 0x58
   16b18:	str	r3, [fp, #-68]	; 0xffffffbc
   16b1c:	mov	r3, #1
   16b20:	str	r3, [fp, #-64]	; 0xffffffc0
   16b24:	ldr	r3, [fp, #-104]	; 0xffffff98
   16b28:	str	r3, [fp, #-60]	; 0xffffffc4
   16b2c:	ldr	r3, [r4, #12]
   16b30:	ands	r3, r3, #8
   16b34:	str	r3, [fp, #-112]	; 0xffffff90
   16b38:	movne	r3, #0
   16b3c:	strne	r3, [fp, #-112]	; 0xffffff90
   16b40:	bne	16534 <argp_failure@@Base+0xa9c>
   16b44:	ldr	r2, [r9, #4]
   16b48:	cmp	r2, #0
   16b4c:	beq	16534 <argp_failure@@Base+0xa9c>
   16b50:	add	r3, r4, #24
   16b54:	b	16514 <argp_failure@@Base+0xa7c>
   16b58:	ldr	r3, [sl, #28]
   16b5c:	add	r3, r3, r6
   16b60:	ldr	r2, [sl, #32]
   16b64:	cmp	r2, r3
   16b68:	bcs	16b80 <argp_failure@@Base+0x10e8>
   16b6c:	mov	r1, r6
   16b70:	mov	r0, sl
   16b74:	bl	19634 <argp_parse@@Base+0x1f20>
   16b78:	cmp	r0, #0
   16b7c:	beq	16a30 <argp_failure@@Base+0xf98>
   16b80:	mov	r2, r6
   16b84:	mov	r1, r4
   16b88:	ldr	r0, [sl, #28]
   16b8c:	bl	11268 <memcpy@plt>
   16b90:	ldr	r3, [sl, #28]
   16b94:	add	r6, r3, r6
   16b98:	str	r6, [sl, #28]
   16b9c:	b	16a30 <argp_failure@@Base+0xf98>
   16ba0:	mov	r0, r4
   16ba4:	bl	183ec <argp_parse@@Base+0xcd8>
   16ba8:	b	16a38 <argp_failure@@Base+0xfa0>
   16bac:	mov	r0, sl
   16bb0:	bl	190bc <argp_parse@@Base+0x19a8>
   16bb4:	b	16a50 <argp_failure@@Base+0xfb8>
   16bb8:	mov	r1, #1
   16bbc:	mov	r0, sl
   16bc0:	bl	19634 <argp_parse@@Base+0x1f20>
   16bc4:	cmp	r0, #0
   16bc8:	bne	16a68 <argp_failure@@Base+0xfd0>
   16bcc:	b	16a7c <argp_failure@@Base+0xfe4>
   16bd0:	mov	r0, sl
   16bd4:	bl	190bc <argp_parse@@Base+0x19a8>
   16bd8:	b	16a98 <argp_failure@@Base+0x1000>
   16bdc:	mov	r0, sl
   16be0:	bl	190bc <argp_parse@@Base+0x19a8>
   16be4:	b	16ab8 <argp_failure@@Base+0x1020>
   16be8:	ldr	r3, [fp, #-80]	; 0xffffffb0
   16bec:	cmp	r3, #0
   16bf0:	beq	16c54 <argp_failure@@Base+0x11bc>
   16bf4:	movw	r3, #50184	; 0xc408
   16bf8:	movt	r3, #2
   16bfc:	ldr	r3, [r3, #4]
   16c00:	cmp	r3, #0
   16c04:	beq	16c54 <argp_failure@@Base+0x11bc>
   16c08:	ldr	r3, [fp, #-104]	; 0xffffff98
   16c0c:	cmp	r3, #0
   16c10:	ldrne	r2, [r3]
   16c14:	ldreq	r2, [fp, #-104]	; 0xffffff98
   16c18:	ldr	r3, [fp, #-104]	; 0xffffff98
   16c1c:	mov	r1, #5
   16c20:	movt	r1, #512	; 0x200
   16c24:	movw	r0, #44776	; 0xaee8
   16c28:	movt	r0, #1
   16c2c:	bl	13f40 <__assert_fail@plt+0x2a08>
   16c30:	subs	r4, r0, #0
   16c34:	beq	16c54 <argp_failure@@Base+0x11bc>
   16c38:	ldrb	r3, [r4]
   16c3c:	cmp	r3, #0
   16c40:	bne	16ce8 <argp_failure@@Base+0x1250>
   16c44:	movw	r3, #44776	; 0xaee8
   16c48:	movt	r3, #1
   16c4c:	cmp	r4, r3
   16c50:	bne	16dbc <argp_failure@@Base+0x1324>
   16c54:	mov	r4, #1
   16c58:	ldr	r3, [fp, #-100]	; 0xffffff9c
   16c5c:	tst	r3, #32
   16c60:	bne	16dc8 <argp_failure@@Base+0x1330>
   16c64:	ldr	r3, [fp, #-100]	; 0xffffff9c
   16c68:	tst	r3, #64	; 0x40
   16c6c:	beq	16ca8 <argp_failure@@Base+0x1210>
   16c70:	movw	r3, #53180	; 0xcfbc
   16c74:	movt	r3, #2
   16c78:	ldr	r3, [r3]
   16c7c:	cmp	r3, #0
   16c80:	beq	16ca8 <argp_failure@@Base+0x1210>
   16c84:	cmp	r4, #0
   16c88:	bne	16df0 <argp_failure@@Base+0x1358>
   16c8c:	movw	r3, #53180	; 0xcfbc
   16c90:	movt	r3, #2
   16c94:	ldr	r2, [r3]
   16c98:	movw	r1, #44892	; 0xaf5c
   16c9c:	movt	r1, #1
   16ca0:	mov	r0, sl
   16ca4:	bl	19734 <argp_parse@@Base+0x2020>
   16ca8:	ldr	r0, [fp, #-132]	; 0xffffff7c
   16cac:	bl	112c8 <funlockfile@plt>
   16cb0:	ldr	r3, [fp, #-128]	; 0xffffff80
   16cb4:	cmp	r3, #0
   16cb8:	beq	16cc4 <argp_failure@@Base+0x122c>
   16cbc:	mov	r0, r3
   16cc0:	bl	13db8 <__assert_fail@plt+0x2880>
   16cc4:	mov	r0, sl
   16cc8:	bl	195e8 <argp_parse@@Base+0x1ed4>
   16ccc:	sub	sp, fp, #32
   16cd0:	ldrd	r4, [sp]
   16cd4:	ldrd	r6, [sp, #8]
   16cd8:	ldrd	r8, [sp, #16]
   16cdc:	ldrd	sl, [sp, #24]
   16ce0:	add	sp, sp, #32
   16ce4:	pop	{pc}		; (ldr pc, [sp], #4)
   16ce8:	ldr	r2, [sl, #28]
   16cec:	ldr	r3, [sl, #32]
   16cf0:	cmp	r2, r3
   16cf4:	bcs	16d44 <argp_failure@@Base+0x12ac>
   16cf8:	ldr	r3, [sl, #28]
   16cfc:	add	r2, r3, #1
   16d00:	str	r2, [sl, #28]
   16d04:	mov	r2, #10
   16d08:	strb	r2, [r3]
   16d0c:	mov	r0, r4
   16d10:	bl	113b8 <strlen@plt>
   16d14:	subs	r5, r0, #0
   16d18:	bne	16d5c <argp_failure@@Base+0x12c4>
   16d1c:	ldr	r2, [sl, #28]
   16d20:	ldr	r3, [sl, #32]
   16d24:	cmp	r2, r3
   16d28:	bcs	16da4 <argp_failure@@Base+0x130c>
   16d2c:	ldr	r3, [sl, #28]
   16d30:	add	r2, r3, #1
   16d34:	str	r2, [sl, #28]
   16d38:	mov	r2, #10
   16d3c:	strb	r2, [r3]
   16d40:	b	16c44 <argp_failure@@Base+0x11ac>
   16d44:	mov	r1, #1
   16d48:	mov	r0, sl
   16d4c:	bl	19634 <argp_parse@@Base+0x1f20>
   16d50:	cmp	r0, #0
   16d54:	bne	16cf8 <argp_failure@@Base+0x1260>
   16d58:	b	16d0c <argp_failure@@Base+0x1274>
   16d5c:	ldr	r3, [sl, #28]
   16d60:	add	r3, r3, r5
   16d64:	ldr	r2, [sl, #32]
   16d68:	cmp	r2, r3
   16d6c:	bcs	16d84 <argp_failure@@Base+0x12ec>
   16d70:	mov	r1, r5
   16d74:	mov	r0, sl
   16d78:	bl	19634 <argp_parse@@Base+0x1f20>
   16d7c:	cmp	r0, #0
   16d80:	beq	16d1c <argp_failure@@Base+0x1284>
   16d84:	mov	r2, r5
   16d88:	mov	r1, r4
   16d8c:	ldr	r0, [sl, #28]
   16d90:	bl	11268 <memcpy@plt>
   16d94:	ldr	r3, [sl, #28]
   16d98:	add	r5, r3, r5
   16d9c:	str	r5, [sl, #28]
   16da0:	b	16d1c <argp_failure@@Base+0x1284>
   16da4:	mov	r1, #1
   16da8:	mov	r0, sl
   16dac:	bl	19634 <argp_parse@@Base+0x1f20>
   16db0:	cmp	r0, #0
   16db4:	bne	16d2c <argp_failure@@Base+0x1294>
   16db8:	b	16c44 <argp_failure@@Base+0x11ac>
   16dbc:	mov	r0, r4
   16dc0:	bl	183ec <argp_parse@@Base+0xcd8>
   16dc4:	b	16c54 <argp_failure@@Base+0x11bc>
   16dc8:	str	sl, [sp, #4]
   16dcc:	mov	r3, #0
   16dd0:	str	r3, [sp]
   16dd4:	mov	r3, r4
   16dd8:	mov	r2, #1
   16ddc:	ldr	r1, [fp, #-104]	; 0xffffff98
   16de0:	ldr	r0, [fp, #-108]	; 0xffffff94
   16de4:	bl	14ac4 <__assert_fail@plt+0x358c>
   16de8:	orr	r4, r4, r0
   16dec:	b	16c64 <argp_failure@@Base+0x11cc>
   16df0:	ldr	r2, [sl, #28]
   16df4:	ldr	r3, [sl, #32]
   16df8:	cmp	r2, r3
   16dfc:	bcs	16e18 <argp_failure@@Base+0x1380>
   16e00:	ldr	r3, [sl, #28]
   16e04:	add	r2, r3, #1
   16e08:	str	r2, [sl, #28]
   16e0c:	mov	r2, #10
   16e10:	strb	r2, [r3]
   16e14:	b	16c8c <argp_failure@@Base+0x11f4>
   16e18:	mov	r1, #1
   16e1c:	mov	r0, sl
   16e20:	bl	19634 <argp_parse@@Base+0x1f20>
   16e24:	cmp	r0, #0
   16e28:	bne	16e00 <argp_failure@@Base+0x1368>
   16e2c:	b	16c8c <argp_failure@@Base+0x11f4>
   16e30:	ldrb	r3, [r6]
   16e34:	mov	r4, r6
   16e38:	mov	r7, #0
   16e3c:	b	15ea0 <argp_failure@@Base+0x408>
   16e40:	ldrb	r3, [r8]
   16e44:	cmp	r3, r7
   16e48:	beq	1657c <argp_failure@@Base+0xae4>
   16e4c:	add	r5, r5, #24
   16e50:	subs	r6, r6, #1
   16e54:	beq	1666c <argp_failure@@Base+0xbd4>
   16e58:	ldr	r9, [r5, #12]
   16e5c:	tst	r9, #8
   16e60:	bne	16e4c <argp_failure@@Base+0x13b4>
   16e64:	ldr	r7, [r5, #4]
   16e68:	sub	r3, r7, #1
   16e6c:	cmp	r3, #254	; 0xfe
   16e70:	bhi	16e4c <argp_failure@@Base+0x13b4>
   16e74:	bl	11394 <__ctype_b_loc@plt>
   16e78:	ldr	r2, [r0]
   16e7c:	lsl	r3, r7, #1
   16e80:	ldrh	r3, [r2, r3]
   16e84:	tst	r3, #16384	; 0x4000
   16e88:	bne	16e40 <argp_failure@@Base+0x13a8>
   16e8c:	b	16e4c <argp_failure@@Base+0x13b4>
   16e90:	ldrdeq	sl, [r1], -r4

00016e94 <argp_help@@Base>:
   16e94:	push	{lr}		; (str lr, [sp, #-4]!)
   16e98:	sub	sp, sp, #12
   16e9c:	str	r3, [sp]
   16ea0:	mov	r3, r2
   16ea4:	mov	r2, r1
   16ea8:	mov	r1, #0
   16eac:	bl	15cb4 <argp_failure@@Base+0x21c>
   16eb0:	add	sp, sp, #12
   16eb4:	pop	{pc}		; (ldr pc, [sp], #4)

00016eb8 <argp_state_help@@Base>:
   16eb8:	strd	r4, [sp, #-12]!
   16ebc:	str	lr, [sp, #8]
   16ec0:	sub	sp, sp, #12
   16ec4:	mov	r5, r2
   16ec8:	subs	r4, r0, #0
   16ecc:	beq	16eec <argp_state_help@@Base+0x34>
   16ed0:	ldr	r3, [r4, #16]
   16ed4:	tst	r3, #2
   16ed8:	beq	16f2c <argp_state_help@@Base+0x74>
   16edc:	add	sp, sp, #12
   16ee0:	ldrd	r4, [sp]
   16ee4:	add	sp, sp, #8
   16ee8:	pop	{pc}		; (ldr pc, [sp], #4)
   16eec:	cmp	r1, #0
   16ef0:	beq	16edc <argp_state_help@@Base+0x24>
   16ef4:	movw	r3, #50248	; 0xc448
   16ef8:	movt	r3, #2
   16efc:	ldr	r3, [r3]
   16f00:	str	r3, [sp]
   16f04:	mov	r3, r2
   16f08:	mov	r2, r1
   16f0c:	mov	r1, #0
   16f10:	mov	r0, r1
   16f14:	bl	15cb4 <argp_failure@@Base+0x21c>
   16f18:	b	16f68 <argp_state_help@@Base+0xb0>
   16f1c:	movw	r3, #50224	; 0xc430
   16f20:	movt	r3, #2
   16f24:	ldr	r0, [r3]
   16f28:	bl	113a0 <exit@plt>
   16f2c:	cmp	r1, #0
   16f30:	beq	16edc <argp_state_help@@Base+0x24>
   16f34:	ldr	r3, [r4, #16]
   16f38:	tst	r3, #64	; 0x40
   16f3c:	orrne	r5, r5, #128	; 0x80
   16f40:	ldr	r3, [r4, #40]	; 0x28
   16f44:	str	r3, [sp]
   16f48:	mov	r3, r5
   16f4c:	mov	r2, r1
   16f50:	mov	r1, r4
   16f54:	ldr	r0, [r4]
   16f58:	bl	15cb4 <argp_failure@@Base+0x21c>
   16f5c:	ldr	r3, [r4, #16]
   16f60:	tst	r3, #32
   16f64:	bne	16edc <argp_state_help@@Base+0x24>
   16f68:	tst	r5, #256	; 0x100
   16f6c:	bne	16f1c <argp_state_help@@Base+0x64>
   16f70:	tst	r5, #512	; 0x200
   16f74:	beq	16edc <argp_state_help@@Base+0x24>
   16f78:	mov	r0, #0
   16f7c:	bl	113a0 <exit@plt>

00016f80 <argp_error@@Base>:
   16f80:	push	{r1, r2, r3}
   16f84:	strd	r4, [sp, #-12]!
   16f88:	str	lr, [sp, #8]
   16f8c:	sub	sp, sp, #8
   16f90:	subs	r5, r0, #0
   16f94:	beq	1706c <argp_error@@Base+0xec>
   16f98:	ldr	r3, [r5, #16]
   16f9c:	tst	r3, #2
   16fa0:	bne	17054 <argp_error@@Base+0xd4>
   16fa4:	ldr	r4, [r5, #44]	; 0x2c
   16fa8:	cmp	r4, #0
   16fac:	beq	17054 <argp_error@@Base+0xd4>
   16fb0:	mov	r0, r4
   16fb4:	bl	114b4 <flockfile@plt>
   16fb8:	add	r3, sp, #24
   16fbc:	str	r3, [sp, #4]
   16fc0:	ldr	r0, [r5, #40]	; 0x28
   16fc4:	mov	r1, r4
   16fc8:	bl	111cc <fputs_unlocked@plt>
   16fcc:	ldr	r3, [r4, #20]
   16fd0:	ldr	r2, [r4, #24]
   16fd4:	cmp	r3, r2
   16fd8:	addcc	r2, r3, #1
   16fdc:	strcc	r2, [r4, #20]
   16fe0:	movcc	r2, #58	; 0x3a
   16fe4:	strbcc	r2, [r3]
   16fe8:	bcs	170a0 <argp_error@@Base+0x120>
   16fec:	ldr	r3, [r4, #20]
   16ff0:	ldr	r2, [r4, #24]
   16ff4:	cmp	r3, r2
   16ff8:	addcc	r2, r3, #1
   16ffc:	strcc	r2, [r4, #20]
   17000:	movcc	r2, #32
   17004:	strbcc	r2, [r3]
   17008:	bcs	170b0 <argp_error@@Base+0x130>
   1700c:	ldr	r2, [sp, #4]
   17010:	ldr	r1, [sp, #20]
   17014:	mov	r0, r4
   17018:	bl	11490 <vfprintf@plt>
   1701c:	ldr	r3, [r4, #20]
   17020:	ldr	r2, [r4, #24]
   17024:	cmp	r3, r2
   17028:	addcc	r2, r3, #1
   1702c:	strcc	r2, [r4, #20]
   17030:	movcc	r2, #10
   17034:	strbcc	r2, [r3]
   17038:	bcs	170c0 <argp_error@@Base+0x140>
   1703c:	mov	r2, #260	; 0x104
   17040:	mov	r1, r4
   17044:	mov	r0, r5
   17048:	bl	16eb8 <argp_state_help@@Base>
   1704c:	mov	r0, r4
   17050:	bl	112c8 <funlockfile@plt>
   17054:	add	sp, sp, #8
   17058:	ldrd	r4, [sp]
   1705c:	ldr	lr, [sp, #8]
   17060:	add	sp, sp, #12
   17064:	add	sp, sp, #12
   17068:	bx	lr
   1706c:	movw	r3, #50256	; 0xc450
   17070:	movt	r3, #2
   17074:	ldr	r4, [r3]
   17078:	cmp	r4, #0
   1707c:	beq	17054 <argp_error@@Base+0xd4>
   17080:	mov	r0, r4
   17084:	bl	114b4 <flockfile@plt>
   17088:	add	r3, sp, #24
   1708c:	str	r3, [sp, #4]
   17090:	movw	r3, #50248	; 0xc448
   17094:	movt	r3, #2
   17098:	ldr	r0, [r3]
   1709c:	b	16fc4 <argp_error@@Base+0x44>
   170a0:	mov	r1, #58	; 0x3a
   170a4:	mov	r0, r4
   170a8:	bl	1146c <__overflow@plt>
   170ac:	b	16fec <argp_error@@Base+0x6c>
   170b0:	mov	r1, #32
   170b4:	mov	r0, r4
   170b8:	bl	1146c <__overflow@plt>
   170bc:	b	1700c <argp_error@@Base+0x8c>
   170c0:	mov	r1, #10
   170c4:	mov	r0, r4
   170c8:	bl	1146c <__overflow@plt>
   170cc:	b	1703c <argp_error@@Base+0xbc>
   170d0:	ldr	ip, [r0]
   170d4:	cmp	ip, #0
   170d8:	beq	17140 <argp_error@@Base+0x1c0>
   170dc:	strd	r4, [sp, #-16]!
   170e0:	str	r6, [sp, #8]
   170e4:	str	lr, [sp, #12]
   170e8:	mov	ip, r2
   170ec:	mov	r5, r1
   170f0:	mov	r4, r0
   170f4:	ldr	r2, [r0, #32]
   170f8:	str	r2, [r1, #36]	; 0x24
   170fc:	ldr	r2, [r0, #24]
   17100:	str	r2, [r1, #28]
   17104:	ldr	r2, [r0, #28]
   17108:	str	r2, [r1, #32]
   1710c:	ldr	r2, [r0, #12]
   17110:	str	r2, [r1, #20]
   17114:	ldr	r6, [r0]
   17118:	mov	r2, r1
   1711c:	mov	r1, r3
   17120:	mov	r0, ip
   17124:	blx	r6
   17128:	ldr	r3, [r5, #36]	; 0x24
   1712c:	str	r3, [r4, #32]
   17130:	ldrd	r4, [sp]
   17134:	ldr	r6, [sp, #8]
   17138:	add	sp, sp, #12
   1713c:	pop	{pc}		; (ldr pc, [sp], #4)
   17140:	mov	r0, #7
   17144:	bx	lr
   17148:	strd	r4, [sp, #-16]!
   1714c:	str	r6, [sp, #8]
   17150:	str	lr, [sp, #12]
   17154:	ldr	r5, [r0, #16]
   17158:	ldr	r3, [r0]
   1715c:	cmp	r3, #0
   17160:	beq	17178 <argp_error@@Base+0x1f8>
   17164:	ldr	r2, [r1, #8]
   17168:	add	r2, r2, #1
   1716c:	str	r2, [r1, #8]
   17170:	mov	r2, #0
   17174:	b	17198 <argp_error@@Base+0x218>
   17178:	ldr	r3, [r0, #4]
   1717c:	cmp	r3, #0
   17180:	beq	171e8 <argp_error@@Base+0x268>
   17184:	ldr	r3, [r1, #8]
   17188:	add	r3, r3, #1
   1718c:	str	r3, [r1, #8]
   17190:	b	171e8 <argp_error@@Base+0x268>
   17194:	add	r2, r2, #1
   17198:	add	r3, r3, #24
   1719c:	ldr	r0, [r3, #-20]	; 0xffffffec
   171a0:	cmp	r0, #0
   171a4:	bne	17194 <argp_error@@Base+0x214>
   171a8:	ldr	r0, [r3, #-24]	; 0xffffffe8
   171ac:	cmp	r0, #0
   171b0:	bne	17194 <argp_error@@Base+0x214>
   171b4:	ldr	r0, [r3, #-8]
   171b8:	cmp	r0, #0
   171bc:	bne	17194 <argp_error@@Base+0x214>
   171c0:	ldr	r0, [r3, #-4]
   171c4:	cmp	r0, #0
   171c8:	bne	17194 <argp_error@@Base+0x214>
   171cc:	add	r0, r2, r2, lsl #1
   171d0:	ldr	r3, [r1]
   171d4:	add	r3, r3, r0
   171d8:	str	r3, [r1]
   171dc:	ldr	r3, [r1, #4]
   171e0:	add	r2, r3, r2
   171e4:	str	r2, [r1, #4]
   171e8:	cmp	r5, #0
   171ec:	beq	17220 <argp_error@@Base+0x2a0>
   171f0:	ldr	r0, [r5]
   171f4:	cmp	r0, #0
   171f8:	beq	17220 <argp_error@@Base+0x2a0>
   171fc:	mov	r4, r1
   17200:	mov	r1, r4
   17204:	bl	17148 <argp_error@@Base+0x1c8>
   17208:	ldr	r3, [r4, #12]
   1720c:	add	r3, r3, #1
   17210:	str	r3, [r4, #12]
   17214:	ldr	r0, [r5, #16]!
   17218:	cmp	r0, #0
   1721c:	bne	17200 <argp_error@@Base+0x280>
   17220:	ldrd	r4, [sp]
   17224:	ldr	r6, [sp, #8]
   17228:	add	sp, sp, #12
   1722c:	pop	{pc}		; (ldr pc, [sp], #4)
   17230:	cmp	r0, #86	; 0x56
   17234:	beq	17240 <argp_error@@Base+0x2c0>
   17238:	mov	r0, #7
   1723c:	bx	lr
   17240:	str	r4, [sp, #-8]!
   17244:	str	lr, [sp, #4]
   17248:	mov	r4, r2
   1724c:	movw	r3, #50444	; 0xc50c
   17250:	movt	r3, #2
   17254:	ldr	r3, [r3]
   17258:	cmp	r3, #0
   1725c:	beq	17288 <argp_error@@Base+0x308>
   17260:	mov	r1, r2
   17264:	ldr	r0, [r2, #48]	; 0x30
   17268:	blx	r3
   1726c:	ldr	r3, [r4, #16]
   17270:	tst	r3, #32
   17274:	beq	172cc <argp_error@@Base+0x34c>
   17278:	mov	r0, #0
   1727c:	ldr	r4, [sp]
   17280:	add	sp, sp, #4
   17284:	pop	{pc}		; (ldr pc, [sp], #4)
   17288:	movw	r3, #53184	; 0xcfc0
   1728c:	movt	r3, #2
   17290:	ldr	r2, [r3]
   17294:	cmp	r2, #0
   17298:	beq	172b0 <argp_error@@Base+0x330>
   1729c:	movw	r1, #45588	; 0xb214
   172a0:	movt	r1, #1
   172a4:	ldr	r0, [r4, #48]	; 0x30
   172a8:	bl	113d0 <fprintf@plt>
   172ac:	b	1726c <argp_error@@Base+0x2ec>
   172b0:	movw	r2, #45192	; 0xb088
   172b4:	movt	r2, #1
   172b8:	movw	r1, #42612	; 0xa674
   172bc:	movt	r1, #1
   172c0:	mov	r0, r4
   172c4:	bl	16f80 <argp_error@@Base>
   172c8:	b	1726c <argp_error@@Base+0x2ec>
   172cc:	mov	r0, #0
   172d0:	bl	113a0 <exit@plt>
   172d4:	strd	r4, [sp, #-16]!
   172d8:	str	r6, [sp, #8]
   172dc:	str	lr, [sp, #12]
   172e0:	mov	r4, r2
   172e4:	cmn	r0, #3
   172e8:	beq	173a0 <argp_error@@Base+0x420>
   172ec:	mov	r5, r1
   172f0:	ble	1732c <argp_error@@Base+0x3ac>
   172f4:	cmn	r0, #2
   172f8:	beq	173b8 <argp_error@@Base+0x438>
   172fc:	cmp	r0, #63	; 0x3f
   17300:	movne	r0, #7
   17304:	bne	1731c <argp_error@@Base+0x39c>
   17308:	movw	r2, #634	; 0x27a
   1730c:	ldr	r1, [r4, #48]	; 0x30
   17310:	mov	r0, r4
   17314:	bl	16eb8 <argp_state_help@@Base>
   17318:	mov	r0, #0
   1731c:	ldrd	r4, [sp]
   17320:	ldr	r6, [sp, #8]
   17324:	add	sp, sp, #12
   17328:	pop	{pc}		; (ldr pc, [sp], #4)
   1732c:	cmn	r0, #4
   17330:	movne	r0, #7
   17334:	bne	1731c <argp_error@@Base+0x39c>
   17338:	movw	r0, #45228	; 0xb0ac
   1733c:	movt	r0, #1
   17340:	mov	r2, #10
   17344:	mov	r1, #0
   17348:	cmp	r5, r1
   1734c:	movne	r0, r5
   17350:	bl	111e4 <strtol@plt>
   17354:	movw	r3, #50440	; 0xc508
   17358:	movt	r3, #2
   1735c:	str	r0, [r3]
   17360:	ldr	r2, [r3]
   17364:	sub	r1, r2, #1
   17368:	str	r1, [r3]
   1736c:	cmp	r2, #0
   17370:	ble	17400 <argp_error@@Base+0x480>
   17374:	mov	r5, #1
   17378:	mov	r4, r3
   1737c:	mov	r0, r5
   17380:	bl	1128c <sleep@plt>
   17384:	ldr	r3, [r4]
   17388:	sub	r2, r3, #1
   1738c:	str	r2, [r4]
   17390:	cmp	r3, #0
   17394:	bgt	1737c <argp_error@@Base+0x3fc>
   17398:	mov	r0, #0
   1739c:	b	1731c <argp_error@@Base+0x39c>
   173a0:	movw	r2, #513	; 0x201
   173a4:	ldr	r1, [r4, #48]	; 0x30
   173a8:	mov	r0, r4
   173ac:	bl	16eb8 <argp_state_help@@Base>
   173b0:	mov	r0, #0
   173b4:	b	1731c <argp_error@@Base+0x39c>
   173b8:	movw	r3, #50252	; 0xc44c
   173bc:	movt	r3, #2
   173c0:	str	r1, [r3]
   173c4:	mov	r0, r1
   173c8:	bl	18328 <argp_parse@@Base+0xc14>
   173cc:	str	r0, [r4, #40]	; 0x28
   173d0:	movw	r3, #50248	; 0xc448
   173d4:	movt	r3, #2
   173d8:	str	r0, [r3]
   173dc:	ldr	r3, [r4, #16]
   173e0:	and	r3, r3, #3
   173e4:	cmp	r3, #1
   173e8:	movne	r0, #0
   173ec:	bne	1731c <argp_error@@Base+0x39c>
   173f0:	ldr	r3, [r4, #8]
   173f4:	str	r5, [r3]
   173f8:	mov	r0, #0
   173fc:	b	1731c <argp_error@@Base+0x39c>
   17400:	mov	r0, #0
   17404:	b	1731c <argp_error@@Base+0x39c>
   17408:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1740c:	strd	r6, [sp, #8]
   17410:	strd	r8, [sp, #16]
   17414:	strd	sl, [sp, #24]
   17418:	str	lr, [sp, #32]
   1741c:	sub	sp, sp, #36	; 0x24
   17420:	str	r0, [sp, #16]
   17424:	str	r1, [sp, #20]
   17428:	str	r2, [sp, #24]
   1742c:	str	r3, [sp, #8]
   17430:	ldr	r8, [sp, #72]	; 0x48
   17434:	ldr	r6, [r0]
   17438:	ldr	sl, [r0, #16]
   1743c:	cmp	r6, #0
   17440:	beq	1745c <argp_error@@Base+0x4dc>
   17444:	mov	r4, r6
   17448:	movw	r3, #36409	; 0x8e39
   1744c:	movt	r3, #14563	; 0x38e3
   17450:	str	r3, [sp, #12]
   17454:	str	sl, [sp, #28]
   17458:	b	174a0 <argp_error@@Base+0x520>
   1745c:	ldr	r3, [r0, #4]
   17460:	cmp	r3, #0
   17464:	bne	1762c <argp_error@@Base+0x6ac>
   17468:	ldr	r0, [sp, #8]
   1746c:	str	r6, [sp, #8]
   17470:	b	176b0 <argp_error@@Base+0x730>
   17474:	ldr	r0, [r7, #16]!
   17478:	cmp	r0, #0
   1747c:	beq	17580 <argp_error@@Base+0x600>
   17480:	mov	r1, r9
   17484:	bl	111d8 <strcmp@plt>
   17488:	cmp	r0, #0
   1748c:	bne	17474 <argp_error@@Base+0x4f4>
   17490:	sub	sl, r7, fp
   17494:	cmp	sl, #0
   17498:	blt	17580 <argp_error@@Base+0x600>
   1749c:	add	r4, r4, #24
   174a0:	ldr	r7, [r4, #4]
   174a4:	cmp	r7, #0
   174a8:	bne	174b8 <argp_error@@Base+0x538>
   174ac:	ldr	r3, [r4]
   174b0:	cmp	r3, #0
   174b4:	beq	17610 <argp_error@@Base+0x690>
   174b8:	ldr	r3, [r4, #12]
   174bc:	and	r2, r3, #4
   174c0:	cmp	r2, #0
   174c4:	moveq	r6, r4
   174c8:	ldr	r5, [r6, #12]
   174cc:	ands	r5, r5, #8
   174d0:	bne	1749c <argp_error@@Base+0x51c>
   174d4:	tst	r3, #8
   174d8:	bne	17558 <argp_error@@Base+0x5d8>
   174dc:	sub	r3, r7, #1
   174e0:	cmp	r3, #254	; 0xfe
   174e4:	bhi	17558 <argp_error@@Base+0x5d8>
   174e8:	bl	11394 <__ctype_b_loc@plt>
   174ec:	ldr	r2, [r0]
   174f0:	lsl	r3, r7, #1
   174f4:	ldrh	r3, [r2, r3]
   174f8:	tst	r3, #16384	; 0x4000
   174fc:	beq	17558 <argp_error@@Base+0x5d8>
   17500:	ldr	r3, [r8, #4]
   17504:	add	r2, r3, #1
   17508:	str	r2, [r8, #4]
   1750c:	strb	r7, [r3]
   17510:	ldr	r3, [r6, #8]
   17514:	cmp	r3, #0
   17518:	beq	1754c <argp_error@@Base+0x5cc>
   1751c:	ldr	r3, [r8, #4]
   17520:	add	r2, r3, #1
   17524:	str	r2, [r8, #4]
   17528:	mov	r1, #58	; 0x3a
   1752c:	strb	r1, [r3]
   17530:	ldr	r3, [r6, #12]
   17534:	tst	r3, #1
   17538:	beq	1754c <argp_error@@Base+0x5cc>
   1753c:	ldr	r3, [r8, #4]
   17540:	add	r2, r3, #1
   17544:	str	r2, [r8, #4]
   17548:	strb	r1, [r3]
   1754c:	ldr	r3, [r8, #4]
   17550:	mov	r2, #0
   17554:	strb	r2, [r3]
   17558:	ldr	r9, [r4]
   1755c:	cmp	r9, #0
   17560:	beq	1749c <argp_error@@Base+0x51c>
   17564:	ldr	r3, [r8]
   17568:	ldr	fp, [r3, #8]
   1756c:	ldr	r0, [fp]
   17570:	cmp	r0, #0
   17574:	beq	17580 <argp_error@@Base+0x600>
   17578:	mov	r7, fp
   1757c:	b	17480 <argp_error@@Base+0x500>
   17580:	ldr	r3, [r8, #8]
   17584:	str	r9, [r3]
   17588:	ldr	r3, [r6, #8]
   1758c:	cmp	r3, #0
   17590:	beq	175a8 <argp_error@@Base+0x628>
   17594:	ldr	r3, [r6, #12]
   17598:	and	r3, r3, #1
   1759c:	cmp	r3, #0
   175a0:	movne	r5, #2
   175a4:	moveq	r5, #1
   175a8:	ldr	r3, [r8, #8]
   175ac:	str	r5, [r3, #4]
   175b0:	ldr	r3, [r8, #8]
   175b4:	mov	r2, #0
   175b8:	str	r2, [r3, #8]
   175bc:	ldr	r3, [r4, #4]
   175c0:	cmp	r3, r2
   175c4:	ldreq	r3, [r6, #4]
   175c8:	bic	r2, r3, #-16777216	; 0xff000000
   175cc:	ldr	r1, [r8, #8]
   175d0:	ldr	r3, [r8]
   175d4:	ldr	r3, [r3, #48]	; 0x30
   175d8:	ldr	r0, [sp, #8]
   175dc:	sub	r3, r0, r3
   175e0:	asr	r3, r3, #2
   175e4:	ldr	r0, [sp, #12]
   175e8:	mul	r3, r0, r3
   175ec:	add	r3, r3, #1
   175f0:	add	r3, r2, r3, lsl #24
   175f4:	str	r3, [r1, #12]
   175f8:	ldr	r3, [r8, #8]
   175fc:	add	r2, r3, #16
   17600:	str	r2, [r8, #8]
   17604:	mov	r2, #0
   17608:	str	r2, [r3, #16]
   1760c:	b	1749c <argp_error@@Base+0x51c>
   17610:	ldr	r3, [r4, #16]
   17614:	cmp	r3, #0
   17618:	bne	174b8 <argp_error@@Base+0x538>
   1761c:	ldr	r3, [r4, #20]
   17620:	cmp	r3, #0
   17624:	bne	174b8 <argp_error@@Base+0x538>
   17628:	ldr	sl, [sp, #28]
   1762c:	ldr	r1, [sp, #16]
   17630:	ldr	r3, [r1, #4]
   17634:	ldr	r2, [sp, #8]
   17638:	str	r3, [r2]
   1763c:	str	r1, [r2, #4]
   17640:	ldr	r3, [r8, #4]
   17644:	str	r3, [r2, #8]
   17648:	mov	r3, #0
   1764c:	str	r3, [r2, #12]
   17650:	ldr	r1, [sp, #20]
   17654:	str	r1, [r2, #16]
   17658:	ldr	r1, [sp, #24]
   1765c:	str	r1, [r2, #20]
   17660:	str	r3, [r2, #24]
   17664:	str	r3, [r2, #32]
   17668:	str	r3, [r2, #28]
   1766c:	cmp	sl, r3
   17670:	beq	176a8 <argp_error@@Base+0x728>
   17674:	ldr	r3, [sl]
   17678:	cmp	r3, #0
   1767c:	beq	1770c <argp_error@@Base+0x78c>
   17680:	mov	r3, #0
   17684:	add	r3, r3, #1
   17688:	ldr	r2, [sl, r3, lsl #4]
   1768c:	cmp	r2, #0
   17690:	bne	17684 <argp_error@@Base+0x704>
   17694:	ldr	r2, [r8, #12]
   17698:	ldr	r1, [sp, #8]
   1769c:	str	r2, [r1, #28]
   176a0:	add	r3, r2, r3, lsl #2
   176a4:	str	r3, [r8, #12]
   176a8:	ldr	r3, [sp, #8]
   176ac:	add	r0, r3, #36	; 0x24
   176b0:	cmp	sl, #0
   176b4:	beq	176f0 <argp_error@@Base+0x770>
   176b8:	ldr	ip, [sl]
   176bc:	cmp	ip, #0
   176c0:	beq	176f0 <argp_error@@Base+0x770>
   176c4:	mov	r2, #0
   176c8:	add	r4, r2, #1
   176cc:	str	r8, [sp]
   176d0:	mov	r3, r0
   176d4:	ldr	r1, [sp, #8]
   176d8:	mov	r0, ip
   176dc:	bl	17408 <argp_error@@Base+0x488>
   176e0:	ldr	ip, [sl, r4, lsl #4]
   176e4:	mov	r2, r4
   176e8:	cmp	ip, #0
   176ec:	bne	176c8 <argp_error@@Base+0x748>
   176f0:	add	sp, sp, #36	; 0x24
   176f4:	ldrd	r4, [sp]
   176f8:	ldrd	r6, [sp, #8]
   176fc:	ldrd	r8, [sp, #16]
   17700:	ldrd	sl, [sp, #24]
   17704:	add	sp, sp, #32
   17708:	pop	{pc}		; (ldr pc, [sp], #4)
   1770c:	mov	r3, #0
   17710:	b	17694 <argp_error@@Base+0x714>

00017714 <argp_parse@@Base>:
   17714:	strd	r4, [sp, #-36]!	; 0xffffffdc
   17718:	strd	r6, [sp, #8]
   1771c:	strd	r8, [sp, #16]
   17720:	strd	sl, [sp, #24]
   17724:	str	lr, [sp, #32]
   17728:	add	fp, sp, #32
   1772c:	sub	sp, sp, #228	; 0xe4
   17730:	mov	r8, r0
   17734:	str	r1, [fp, #-240]	; 0xffffff10
   17738:	str	r2, [fp, #-232]	; 0xffffff18
   1773c:	mov	r7, r3
   17740:	tst	r3, #1
   17744:	bne	17770 <argp_parse@@Base+0x5c>
   17748:	movw	r3, #50252	; 0xc44c
   1774c:	movt	r3, #2
   17750:	ldr	r3, [r3]
   17754:	cmp	r3, #0
   17758:	beq	177c8 <argp_parse@@Base+0xb4>
   1775c:	movw	r3, #50248	; 0xc448
   17760:	movt	r3, #2
   17764:	ldr	r3, [r3]
   17768:	cmp	r3, #0
   1776c:	beq	177dc <argp_parse@@Base+0xc8>
   17770:	tst	r7, #16
   17774:	beq	177f8 <argp_parse@@Base+0xe4>
   17778:	str	r7, [fp, #-244]	; 0xffffff0c
   1777c:	mov	r3, #0
   17780:	str	r3, [fp, #-188]	; 0xffffff44
   17784:	str	r3, [fp, #-184]	; 0xffffff48
   17788:	str	r3, [fp, #-180]	; 0xffffff4c
   1778c:	str	r3, [fp, #-176]	; 0xffffff50
   17790:	str	r3, [fp, #-172]	; 0xffffff54
   17794:	str	r3, [fp, #-168]	; 0xffffff58
   17798:	str	r3, [fp, #-164]	; 0xffffff5c
   1779c:	ands	r2, r7, #4
   177a0:	str	r2, [fp, #-248]	; 0xffffff08
   177a4:	moveq	r2, #1
   177a8:	movne	r2, r3
   177ac:	str	r2, [fp, #-228]	; 0xffffff1c
   177b0:	str	r3, [fp, #-224]	; 0xffffff20
   177b4:	str	r3, [fp, #-220]	; 0xffffff24
   177b8:	str	r3, [fp, #-216]	; 0xffffff28
   177bc:	cmp	r8, r3
   177c0:	beq	178c4 <argp_parse@@Base+0x1b0>
   177c4:	b	178b8 <argp_parse@@Base+0x1a4>
   177c8:	ldr	r2, [r2]
   177cc:	movw	r3, #50252	; 0xc44c
   177d0:	movt	r3, #2
   177d4:	str	r2, [r3]
   177d8:	b	1775c <argp_parse@@Base+0x48>
   177dc:	ldr	r3, [fp, #-232]	; 0xffffff18
   177e0:	ldr	r0, [r3]
   177e4:	bl	18328 <argp_parse@@Base+0xc14>
   177e8:	movw	r3, #50248	; 0xc448
   177ec:	movt	r3, #2
   177f0:	str	r0, [r3]
   177f4:	b	17770 <argp_parse@@Base+0x5c>
   177f8:	sub	sp, sp, #64	; 0x40
   177fc:	add	r5, sp, #8
   17800:	sub	sp, sp, #32
   17804:	add	r4, sp, #8
   17808:	mov	r1, #0
   1780c:	str	r1, [r4]
   17810:	str	r1, [r4, #4]
   17814:	str	r1, [r4, #8]
   17818:	str	r1, [r4, #12]
   1781c:	str	r1, [r4, #20]
   17820:	str	r1, [r4, #24]
   17824:	str	r5, [r4, #16]
   17828:	mov	r2, #64	; 0x40
   1782c:	mov	r0, r5
   17830:	bl	1140c <memset@plt>
   17834:	cmp	r8, #0
   17838:	mov	r0, r5
   1783c:	strne	r8, [r0], #16
   17840:	movw	r3, #44912	; 0xaf70
   17844:	movt	r3, #1
   17848:	str	r3, [r0]
   1784c:	movw	r3, #53184	; 0xcfc0
   17850:	movt	r3, #2
   17854:	ldr	r3, [r3]
   17858:	cmp	r3, #0
   1785c:	beq	17a84 <argp_parse@@Base+0x370>
   17860:	add	r2, r0, #32
   17864:	ldr	r3, [pc, #2548]	; 18260 <argp_parse@@Base+0xb4c>
   17868:	str	r3, [r0, #16]
   1786c:	mov	r3, #0
   17870:	str	r3, [r2]
   17874:	str	r7, [fp, #-244]	; 0xffffff0c
   17878:	str	r3, [fp, #-188]	; 0xffffff44
   1787c:	str	r3, [fp, #-184]	; 0xffffff48
   17880:	str	r3, [fp, #-180]	; 0xffffff4c
   17884:	str	r3, [fp, #-176]	; 0xffffff50
   17888:	str	r3, [fp, #-172]	; 0xffffff54
   1788c:	str	r3, [fp, #-168]	; 0xffffff58
   17890:	str	r3, [fp, #-164]	; 0xffffff5c
   17894:	ands	r2, r7, #4
   17898:	str	r2, [fp, #-248]	; 0xffffff08
   1789c:	moveq	r2, #1
   178a0:	movne	r2, r3
   178a4:	str	r2, [fp, #-228]	; 0xffffff1c
   178a8:	str	r3, [fp, #-224]	; 0xffffff20
   178ac:	str	r3, [fp, #-220]	; 0xffffff24
   178b0:	str	r3, [fp, #-216]	; 0xffffff28
   178b4:	mov	r8, r4
   178b8:	sub	r1, fp, #228	; 0xe4
   178bc:	mov	r0, r8
   178c0:	bl	17148 <argp_error@@Base+0x1c8>
   178c4:	ldr	r4, [fp, #-220]	; 0xffffff24
   178c8:	add	r4, r4, #1
   178cc:	add	r4, r4, r4, lsl #3
   178d0:	lsl	r4, r4, #2
   178d4:	ldr	r3, [fp, #-216]	; 0xffffff28
   178d8:	lsl	r3, r3, #2
   178dc:	str	r3, [fp, #-236]	; 0xffffff14
   178e0:	add	r9, r3, r4
   178e4:	ldr	r5, [fp, #-224]	; 0xffffff20
   178e8:	add	r5, r5, #1
   178ec:	add	r5, r9, r5, lsl #4
   178f0:	ldr	r0, [fp, #-228]	; 0xffffff1c
   178f4:	add	r0, r0, #1
   178f8:	add	r0, r0, r5
   178fc:	bl	18f8c <argp_parse@@Base+0x1878>
   17900:	mov	r6, r0
   17904:	str	r0, [fp, #-40]	; 0xffffffd8
   17908:	cmp	r0, #0
   1790c:	moveq	r4, #12
   17910:	beq	18080 <argp_parse@@Base+0x96c>
   17914:	str	r0, [fp, #-112]	; 0xffffff90
   17918:	add	r4, r0, r4
   1791c:	str	r4, [fp, #-104]	; 0xffffff98
   17920:	add	r9, r0, r9
   17924:	str	r9, [fp, #-152]	; 0xffffff68
   17928:	add	sl, r0, r5
   1792c:	str	sl, [fp, #-156]	; 0xffffff64
   17930:	mov	r3, #1
   17934:	str	r3, [fp, #-196]	; 0xffffff3c
   17938:	str	r3, [fp, #-192]	; 0xffffff40
   1793c:	ldrd	r2, [fp, #-196]	; 0xffffff3c
   17940:	strd	r2, [fp, #-148]	; 0xffffff6c
   17944:	ldrd	r2, [fp, #-188]	; 0xffffff44
   17948:	strd	r2, [fp, #-140]	; 0xffffff74
   1794c:	ldrd	r2, [fp, #-180]	; 0xffffff4c
   17950:	strd	r2, [fp, #-132]	; 0xffffff7c
   17954:	ldrd	r2, [fp, #-172]	; 0xffffff54
   17958:	strd	r2, [fp, #-124]	; 0xffffff84
   1795c:	ldr	r3, [fp, #-164]	; 0xffffff5c
   17960:	str	r3, [fp, #-116]	; 0xffffff8c
   17964:	ldr	r2, [fp, #-236]	; 0xffffff14
   17968:	mov	r1, #0
   1796c:	mov	r0, r4
   17970:	bl	1140c <memset@plt>
   17974:	sub	r3, fp, #160	; 0xa0
   17978:	str	r3, [fp, #-212]	; 0xffffff2c
   1797c:	str	sl, [fp, #-208]	; 0xffffff30
   17980:	str	r9, [fp, #-204]	; 0xffffff34
   17984:	str	r4, [fp, #-200]	; 0xffffff38
   17988:	ldr	r3, [fp, #-244]	; 0xffffff0c
   1798c:	tst	r3, #8
   17990:	beq	17aa0 <argp_parse@@Base+0x38c>
   17994:	add	sl, sl, #1
   17998:	str	sl, [fp, #-208]	; 0xffffff30
   1799c:	mov	r3, #45	; 0x2d
   179a0:	strb	r3, [r6, r5]
   179a4:	mov	r3, #0
   179a8:	ldr	r2, [fp, #-208]	; 0xffffff30
   179ac:	strb	r3, [r2]
   179b0:	ldr	r2, [fp, #-204]	; 0xffffff34
   179b4:	str	r3, [r2]
   179b8:	str	r8, [fp, #-160]	; 0xffffff60
   179bc:	cmp	r8, r3
   179c0:	beq	17ac0 <argp_parse@@Base+0x3ac>
   179c4:	sub	r3, fp, #212	; 0xd4
   179c8:	str	r3, [sp]
   179cc:	ldr	r3, [fp, #-112]	; 0xffffff90
   179d0:	mov	r2, #0
   179d4:	mov	r1, r2
   179d8:	mov	r0, r8
   179dc:	bl	17408 <argp_error@@Base+0x488>
   179e0:	str	r0, [fp, #-108]	; 0xffffff94
   179e4:	mov	r2, #0
   179e8:	mov	r3, #0
   179ec:	strd	r2, [fp, #-76]	; 0xffffffb4
   179f0:	strd	r2, [fp, #-68]	; 0xffffffbc
   179f4:	strd	r2, [fp, #-60]	; 0xffffffc4
   179f8:	ldr	r3, [fp, #-160]	; 0xffffff60
   179fc:	str	r3, [fp, #-96]	; 0xffffffa0
   17a00:	ldr	r3, [fp, #-240]	; 0xffffff10
   17a04:	str	r3, [fp, #-92]	; 0xffffffa4
   17a08:	ldr	r3, [fp, #-232]	; 0xffffff18
   17a0c:	str	r3, [fp, #-88]	; 0xffffffa8
   17a10:	str	r7, [fp, #-80]	; 0xffffffb0
   17a14:	movw	r3, #50256	; 0xc450
   17a18:	movt	r3, #2
   17a1c:	ldr	r3, [r3]
   17a20:	str	r3, [fp, #-52]	; 0xffffffcc
   17a24:	movw	r3, #50268	; 0xc45c
   17a28:	movt	r3, #2
   17a2c:	ldr	r3, [r3]
   17a30:	str	r3, [fp, #-48]	; 0xffffffd0
   17a34:	mov	r3, #0
   17a38:	str	r3, [fp, #-84]	; 0xffffffac
   17a3c:	sub	r3, fp, #160	; 0xa0
   17a40:	str	r3, [fp, #-44]	; 0xffffffd4
   17a44:	mov	r3, #1
   17a48:	str	r3, [fp, #-100]	; 0xffffff9c
   17a4c:	ldr	r3, [fp, #-112]	; 0xffffff90
   17a50:	ldr	r2, [fp, #-108]	; 0xffffff94
   17a54:	cmp	r3, r2
   17a58:	bcs	17b6c <argp_parse@@Base+0x458>
   17a5c:	ldr	r2, [fp, #8]
   17a60:	str	r2, [r3, #24]
   17a64:	ldr	r5, [fp, #-112]	; 0xffffff90
   17a68:	ldr	r3, [fp, #-108]	; 0xffffff94
   17a6c:	cmp	r5, r3
   17a70:	bcs	17b6c <argp_parse@@Base+0x458>
   17a74:	mov	r6, #3
   17a78:	movt	r6, #256	; 0x100
   17a7c:	mov	r7, #0
   17a80:	b	17b08 <argp_parse@@Base+0x3f4>
   17a84:	movw	r3, #50444	; 0xc50c
   17a88:	movt	r3, #2
   17a8c:	ldr	r3, [r3]
   17a90:	cmp	r3, #0
   17a94:	addeq	r2, r0, #16
   17a98:	bne	17860 <argp_parse@@Base+0x14c>
   17a9c:	b	1786c <argp_parse@@Base+0x158>
   17aa0:	ldr	r3, [fp, #-248]	; 0xffffff08
   17aa4:	cmp	r3, #0
   17aa8:	beq	179a4 <argp_parse@@Base+0x290>
   17aac:	add	sl, sl, #1
   17ab0:	str	sl, [fp, #-208]	; 0xffffff30
   17ab4:	mov	r3, #43	; 0x2b
   17ab8:	strb	r3, [r6, r5]
   17abc:	b	179a4 <argp_parse@@Base+0x290>
   17ac0:	ldr	r3, [fp, #-112]	; 0xffffff90
   17ac4:	str	r3, [fp, #-108]	; 0xffffff94
   17ac8:	b	179e4 <argp_parse@@Base+0x2d0>
   17acc:	ldr	r3, [r5]
   17ad0:	cmp	r3, #0
   17ad4:	beq	17b28 <argp_parse@@Base+0x414>
   17ad8:	mov	r3, r7
   17adc:	mov	r2, r6
   17ae0:	sub	r1, fp, #96	; 0x60
   17ae4:	mov	r0, r5
   17ae8:	bl	170d0 <argp_error@@Base+0x150>
   17aec:	add	r5, r5, #36	; 0x24
   17af0:	ldr	r3, [fp, #-108]	; 0xffffff94
   17af4:	cmp	r5, r3
   17af8:	bcs	17b5c <argp_parse@@Base+0x448>
   17afc:	cmp	r0, #7
   17b00:	cmpne	r0, #0
   17b04:	bne	17b54 <argp_parse@@Base+0x440>
   17b08:	ldr	r3, [r5, #16]
   17b0c:	cmp	r3, #0
   17b10:	beq	17acc <argp_parse@@Base+0x3b8>
   17b14:	ldr	r2, [r5, #20]
   17b18:	ldr	r3, [r3, #28]
   17b1c:	ldr	r3, [r3, r2, lsl #2]
   17b20:	str	r3, [r5, #24]
   17b24:	b	17acc <argp_parse@@Base+0x3b8>
   17b28:	ldr	r3, [r5, #4]
   17b2c:	ldr	r3, [r3, #16]
   17b30:	cmp	r3, #0
   17b34:	beq	17ad8 <argp_parse@@Base+0x3c4>
   17b38:	ldr	r3, [r3]
   17b3c:	cmp	r3, #0
   17b40:	beq	17ad8 <argp_parse@@Base+0x3c4>
   17b44:	ldr	r3, [r5, #28]
   17b48:	ldr	r2, [r5, #24]
   17b4c:	str	r2, [r3]
   17b50:	b	17ad8 <argp_parse@@Base+0x3c4>
   17b54:	mov	r4, r0
   17b58:	b	18080 <argp_parse@@Base+0x96c>
   17b5c:	mov	r4, r0
   17b60:	cmp	r0, #7
   17b64:	cmpne	r0, #0
   17b68:	bne	18080 <argp_parse@@Base+0x96c>
   17b6c:	ldr	r3, [fp, #-80]	; 0xffffffb0
   17b70:	tst	r3, #2
   17b74:	moveq	r3, #1
   17b78:	streq	r3, [fp, #-144]	; 0xffffff70
   17b7c:	beq	17ba8 <argp_parse@@Base+0x494>
   17b80:	mov	r2, #0
   17b84:	str	r2, [fp, #-144]	; 0xffffff70
   17b88:	tst	r3, #1
   17b8c:	beq	17ba8 <argp_parse@@Base+0x494>
   17b90:	ldr	r3, [fp, #-88]	; 0xffffffa8
   17b94:	sub	r3, r3, #4
   17b98:	str	r3, [fp, #-88]	; 0xffffffa8
   17b9c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   17ba0:	add	r3, r3, #1
   17ba4:	str	r3, [fp, #-92]	; 0xffffffa4
   17ba8:	ldr	r3, [fp, #-88]	; 0xffffffa8
   17bac:	ldr	r2, [fp, #-232]	; 0xffffff18
   17bb0:	cmp	r2, r3
   17bb4:	beq	17bdc <argp_parse@@Base+0x4c8>
   17bb8:	movw	r3, #50248	; 0xc448
   17bbc:	movt	r3, #2
   17bc0:	ldr	r3, [r3]
   17bc4:	str	r3, [fp, #-56]	; 0xffffffc8
   17bc8:	movw	sl, #45240	; 0xb0b8
   17bcc:	movt	sl, #1
   17bd0:	mov	r9, #6
   17bd4:	movt	r9, #256	; 0x100
   17bd8:	b	17ca4 <argp_parse@@Base+0x590>
   17bdc:	ldr	r0, [r2]
   17be0:	cmp	r0, #0
   17be4:	beq	17bb8 <argp_parse@@Base+0x4a4>
   17be8:	bl	18328 <argp_parse@@Base+0xc14>
   17bec:	str	r0, [fp, #-56]	; 0xffffffc8
   17bf0:	b	17bc8 <argp_parse@@Base+0x4b4>
   17bf4:	ldr	r3, [fp, #-84]	; 0xffffffac
   17bf8:	str	r3, [fp, #-148]	; 0xffffff6c
   17bfc:	mvn	r3, #0
   17c00:	str	r3, [fp, #-140]	; 0xffffff74
   17c04:	ldr	r3, [fp, #-80]	; 0xffffffb0
   17c08:	tst	r3, #64	; 0x40
   17c0c:	beq	17d28 <argp_parse@@Base+0x614>
   17c10:	sub	r3, fp, #148	; 0x94
   17c14:	str	r3, [sp, #4]
   17c18:	mov	r3, #0
   17c1c:	str	r3, [sp]
   17c20:	ldr	r3, [fp, #-152]	; 0xffffff68
   17c24:	ldr	r2, [fp, #-156]	; 0xffffff64
   17c28:	ldr	r1, [fp, #-88]	; 0xffffffa8
   17c2c:	ldr	r0, [fp, #-92]	; 0xffffffa4
   17c30:	bl	184d0 <argp_parse@@Base+0xdbc>
   17c34:	mov	r5, r0
   17c38:	ldr	r4, [fp, #-148]	; 0xffffff6c
   17c3c:	str	r4, [fp, #-84]	; 0xffffffac
   17c40:	cmn	r5, #1
   17c44:	beq	17d54 <argp_parse@@Base+0x640>
   17c48:	cmp	r5, #63	; 0x3f
   17c4c:	beq	17d84 <argp_parse@@Base+0x670>
   17c50:	cmp	r5, #1
   17c54:	beq	17d00 <argp_parse@@Base+0x5ec>
   17c58:	ldr	r4, [fp, #-136]	; 0xffffff78
   17c5c:	asrs	r3, r5, #24
   17c60:	beq	17d94 <argp_parse@@Base+0x680>
   17c64:	ands	r1, r5, #8388608	; 0x800000
   17c68:	movne	r1, #-16777216	; 0xff000000
   17c6c:	bic	r2, r5, #-16777216	; 0xff000000
   17c70:	add	r0, r3, r3, lsl #3
   17c74:	lsl	r0, r0, #2
   17c78:	sub	r0, r0, #36	; 0x24
   17c7c:	mov	r3, r4
   17c80:	orr	r2, r2, r1
   17c84:	sub	r1, fp, #96	; 0x60
   17c88:	ldr	ip, [fp, #-112]	; 0xffffff90
   17c8c:	add	r0, ip, r0
   17c90:	bl	170d0 <argp_error@@Base+0x150>
   17c94:	cmp	r0, #7
   17c98:	beq	17f5c <argp_parse@@Base+0x848>
   17c9c:	cmp	r0, #0
   17ca0:	bne	17fe0 <argp_parse@@Base+0x8cc>
   17ca4:	ldr	r3, [fp, #-72]	; 0xffffffb8
   17ca8:	cmp	r3, #0
   17cac:	beq	17cc4 <argp_parse@@Base+0x5b0>
   17cb0:	ldr	r2, [fp, #-84]	; 0xffffffac
   17cb4:	cmp	r3, r2
   17cb8:	movgt	r3, #0
   17cbc:	strgt	r3, [fp, #-72]	; 0xffffffb8
   17cc0:	ble	17cd0 <argp_parse@@Base+0x5bc>
   17cc4:	ldr	r3, [fp, #-100]	; 0xffffff9c
   17cc8:	cmp	r3, #0
   17ccc:	bne	17bf4 <argp_parse@@Base+0x4e0>
   17cd0:	ldr	r3, [fp, #-84]	; 0xffffffac
   17cd4:	ldr	r2, [fp, #-92]	; 0xffffffa4
   17cd8:	cmp	r3, r2
   17cdc:	bge	18250 <argp_parse@@Base+0xb3c>
   17ce0:	ldr	r2, [fp, #-80]	; 0xffffffb0
   17ce4:	tst	r2, #4
   17ce8:	bne	18258 <argp_parse@@Base+0xb44>
   17cec:	add	r2, r3, #1
   17cf0:	str	r2, [fp, #-84]	; 0xffffffac
   17cf4:	ldr	r2, [fp, #-88]	; 0xffffffa8
   17cf8:	ldr	r3, [r2, r3, lsl #2]
   17cfc:	str	r3, [fp, #-136]	; 0xffffff78
   17d00:	ldr	r7, [fp, #-136]	; 0xffffff78
   17d04:	ldr	r4, [fp, #-84]	; 0xffffffac
   17d08:	sub	r4, r4, #1
   17d0c:	str	r4, [fp, #-84]	; 0xffffffac
   17d10:	ldr	r5, [fp, #-112]	; 0xffffff90
   17d14:	ldr	r3, [fp, #-108]	; 0xffffff94
   17d18:	cmp	r3, r5
   17d1c:	bls	17fd8 <argp_parse@@Base+0x8c4>
   17d20:	mov	r6, #0
   17d24:	b	17e54 <argp_parse@@Base+0x740>
   17d28:	sub	r3, fp, #148	; 0x94
   17d2c:	str	r3, [sp, #4]
   17d30:	mov	r3, #0
   17d34:	str	r3, [sp]
   17d38:	ldr	r3, [fp, #-152]	; 0xffffff68
   17d3c:	ldr	r2, [fp, #-156]	; 0xffffff64
   17d40:	ldr	r1, [fp, #-88]	; 0xffffffa8
   17d44:	ldr	r0, [fp, #-92]	; 0xffffffa4
   17d48:	bl	18474 <argp_parse@@Base+0xd60>
   17d4c:	mov	r5, r0
   17d50:	b	17c38 <argp_parse@@Base+0x524>
   17d54:	mov	r3, #0
   17d58:	str	r3, [fp, #-100]	; 0xffffff9c
   17d5c:	cmp	r4, #1
   17d60:	ble	17cd0 <argp_parse@@Base+0x5bc>
   17d64:	sub	r3, r4, #-1073741823	; 0xc0000001
   17d68:	mov	r1, sl
   17d6c:	ldr	r2, [fp, #-88]	; 0xffffffa8
   17d70:	ldr	r0, [r2, r3, lsl #2]
   17d74:	bl	111d8 <strcmp@plt>
   17d78:	cmp	r0, #0
   17d7c:	streq	r4, [fp, #-72]	; 0xffffffb8
   17d80:	b	17cd0 <argp_parse@@Base+0x5bc>
   17d84:	ldr	r3, [fp, #-140]	; 0xffffff74
   17d88:	cmn	r3, #1
   17d8c:	bne	18248 <argp_parse@@Base+0xb34>
   17d90:	ldr	r4, [fp, #-136]	; 0xffffff78
   17d94:	mov	r1, r5
   17d98:	ldr	r0, [fp, #-156]	; 0xffffff64
   17d9c:	bl	113c4 <strchr@plt>
   17da0:	subs	r1, r0, #0
   17da4:	beq	17df4 <argp_parse@@Base+0x6e0>
   17da8:	ldr	r0, [fp, #-112]	; 0xffffff90
   17dac:	ldr	r2, [fp, #-108]	; 0xffffff94
   17db0:	cmp	r2, r0
   17db4:	bls	17df4 <argp_parse@@Base+0x6e0>
   17db8:	ldr	r3, [r0, #8]
   17dbc:	cmp	r1, r3
   17dc0:	bcc	17ddc <argp_parse@@Base+0x6c8>
   17dc4:	add	r0, r0, #36	; 0x24
   17dc8:	cmp	r2, r0
   17dcc:	bls	17df4 <argp_parse@@Base+0x6e0>
   17dd0:	ldr	r3, [r0, #8]
   17dd4:	cmp	r1, r3
   17dd8:	bcs	17dc4 <argp_parse@@Base+0x6b0>
   17ddc:	mov	r3, r4
   17de0:	mov	r2, r5
   17de4:	sub	r1, fp, #96	; 0x60
   17de8:	bl	170d0 <argp_error@@Base+0x150>
   17dec:	cmp	r0, #7
   17df0:	bne	17c9c <argp_parse@@Base+0x588>
   17df4:	ldr	r3, [pc, #1128]	; 18264 <argp_parse@@Base+0xb50>
   17df8:	mov	r2, r5
   17dfc:	movw	r1, #45244	; 0xb0bc
   17e00:	movt	r1, #1
   17e04:	sub	r0, fp, #96	; 0x60
   17e08:	bl	16f80 <argp_error@@Base>
   17e0c:	b	17e94 <argp_parse@@Base+0x780>
   17e10:	ldr	r3, [fp, #-84]	; 0xffffffac
   17e14:	sub	r3, r3, #1
   17e18:	str	r3, [fp, #-84]	; 0xffffffac
   17e1c:	mov	r3, r6
   17e20:	mov	r2, r9
   17e24:	sub	r1, fp, #96	; 0x60
   17e28:	mov	r0, r5
   17e2c:	bl	170d0 <argp_error@@Base+0x150>
   17e30:	add	r5, r5, #36	; 0x24
   17e34:	ldr	r2, [fp, #-108]	; 0xffffff94
   17e38:	cmp	r5, r2
   17e3c:	movcs	r3, #0
   17e40:	movcc	r3, #1
   17e44:	cmp	r0, #7
   17e48:	movne	r3, #0
   17e4c:	cmp	r3, #0
   17e50:	beq	17f24 <argp_parse@@Base+0x810>
   17e54:	ldr	r3, [fp, #-84]	; 0xffffffac
   17e58:	add	r3, r3, #1
   17e5c:	str	r3, [fp, #-84]	; 0xffffffac
   17e60:	mov	r3, r7
   17e64:	mov	r2, r6
   17e68:	sub	r1, fp, #96	; 0x60
   17e6c:	mov	r0, r5
   17e70:	bl	170d0 <argp_error@@Base+0x150>
   17e74:	cmp	r0, #7
   17e78:	beq	17e10 <argp_parse@@Base+0x6fc>
   17e7c:	add	r5, r5, #36	; 0x24
   17e80:	cmp	r0, #0
   17e84:	beq	17f34 <argp_parse@@Base+0x820>
   17e88:	cmp	r0, #7
   17e8c:	bne	17c9c <argp_parse@@Base+0x588>
   17e90:	mov	r5, #1
   17e94:	add	r5, r5, #1
   17e98:	bics	r3, r5, #2
   17e9c:	moveq	r3, #1
   17ea0:	movne	r3, #0
   17ea4:	cmp	r3, #0
   17ea8:	beq	181ec <argp_parse@@Base+0xad8>
   17eac:	ldr	r3, [fp, #-84]	; 0xffffffac
   17eb0:	ldr	r2, [fp, #-92]	; 0xffffffa4
   17eb4:	cmp	r3, r2
   17eb8:	beq	180a0 <argp_parse@@Base+0x98c>
   17ebc:	ldr	r2, [fp, #4]
   17ec0:	cmp	r2, #0
   17ec4:	strne	r3, [r2]
   17ec8:	beq	181c4 <argp_parse@@Base+0xab0>
   17ecc:	ldr	r5, [fp, #-108]	; 0xffffff94
   17ed0:	sub	r5, r5, #36	; 0x24
   17ed4:	ldr	r3, [fp, #-112]	; 0xffffff90
   17ed8:	cmp	r5, r3
   17edc:	bcc	1822c <argp_parse@@Base+0xb18>
   17ee0:	mov	r6, #4
   17ee4:	movt	r6, #256	; 0x100
   17ee8:	mov	r7, #0
   17eec:	mov	r3, r7
   17ef0:	mov	r2, r6
   17ef4:	sub	r1, fp, #96	; 0x60
   17ef8:	mov	r0, r5
   17efc:	bl	170d0 <argp_error@@Base+0x150>
   17f00:	sub	r5, r5, #36	; 0x24
   17f04:	ldr	r3, [fp, #-112]	; 0xffffff90
   17f08:	cmp	r5, r3
   17f0c:	bcc	18204 <argp_parse@@Base+0xaf0>
   17f10:	cmp	r0, #7
   17f14:	cmpne	r0, #0
   17f18:	beq	17eec <argp_parse@@Base+0x7d8>
   17f1c:	mov	r4, r0
   17f20:	b	18214 <argp_parse@@Base+0xb00>
   17f24:	cmp	r0, #0
   17f28:	bne	17e88 <argp_parse@@Base+0x774>
   17f2c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   17f30:	str	r3, [fp, #-84]	; 0xffffffac
   17f34:	ldr	r3, [fp, #-84]	; 0xffffffac
   17f38:	cmp	r4, r3
   17f3c:	movge	r3, #1
   17f40:	strge	r3, [fp, #-100]	; 0xffffff9c
   17f44:	bge	17ca4 <argp_parse@@Base+0x590>
   17f48:	sub	r4, r3, r4
   17f4c:	ldr	r3, [r5, #-24]	; 0xffffffe8
   17f50:	add	r4, r3, r4
   17f54:	str	r4, [r5, #-24]	; 0xffffffe8
   17f58:	b	17ca4 <argp_parse@@Base+0x590>
   17f5c:	ldr	r3, [fp, #-152]	; 0xffffff68
   17f60:	ldr	r2, [r3, #12]
   17f64:	cmp	r2, r5
   17f68:	beq	17fa0 <argp_parse@@Base+0x88c>
   17f6c:	ldr	r2, [r3]
   17f70:	cmp	r2, #0
   17f74:	beq	17fcc <argp_parse@@Base+0x8b8>
   17f78:	add	r3, r3, #16
   17f7c:	ldr	r2, [r3, #12]
   17f80:	cmp	r5, r2
   17f84:	beq	17fa0 <argp_parse@@Base+0x88c>
   17f88:	ldr	r2, [r3]
   17f8c:	cmp	r2, #0
   17f90:	bne	17f78 <argp_parse@@Base+0x864>
   17f94:	movw	r2, #45236	; 0xb0b4
   17f98:	movt	r2, #1
   17f9c:	b	17fb4 <argp_parse@@Base+0x8a0>
   17fa0:	ldr	r2, [r3]
   17fa4:	movw	r3, #45236	; 0xb0b4
   17fa8:	movt	r3, #1
   17fac:	cmp	r2, #0
   17fb0:	moveq	r2, r3
   17fb4:	ldr	r3, [pc, #680]	; 18264 <argp_parse@@Base+0xb50>
   17fb8:	movw	r1, #45252	; 0xb0c4
   17fbc:	movt	r1, #1
   17fc0:	sub	r0, fp, #96	; 0x60
   17fc4:	bl	16f80 <argp_error@@Base>
   17fc8:	b	17e94 <argp_parse@@Base+0x780>
   17fcc:	movw	r2, #45236	; 0xb0b4
   17fd0:	movt	r2, #1
   17fd4:	b	17fb4 <argp_parse@@Base+0x8a0>
   17fd8:	mov	r5, #1
   17fdc:	b	17e94 <argp_parse@@Base+0x780>
   17fe0:	mov	r4, r0
   17fe4:	cmp	r4, #7
   17fe8:	beq	181ec <argp_parse@@Base+0xad8>
   17fec:	ldr	r5, [fp, #-112]	; 0xffffff90
   17ff0:	ldr	r3, [fp, #-108]	; 0xffffff94
   17ff4:	cmp	r5, r3
   17ff8:	bcs	1802c <argp_parse@@Base+0x918>
   17ffc:	mov	r6, #5
   18000:	movt	r6, #256	; 0x100
   18004:	mov	r7, #0
   18008:	mov	r3, r7
   1800c:	mov	r2, r6
   18010:	sub	r1, fp, #96	; 0x60
   18014:	mov	r0, r5
   18018:	bl	170d0 <argp_error@@Base+0x150>
   1801c:	add	r5, r5, #36	; 0x24
   18020:	ldr	r3, [fp, #-108]	; 0xffffff94
   18024:	cmp	r5, r3
   18028:	bcc	18008 <argp_parse@@Base+0x8f4>
   1802c:	ldr	r5, [fp, #-108]	; 0xffffff94
   18030:	sub	r5, r5, #36	; 0x24
   18034:	ldr	r3, [fp, #-112]	; 0xffffff90
   18038:	cmp	r3, r5
   1803c:	bhi	18070 <argp_parse@@Base+0x95c>
   18040:	mov	r6, #7
   18044:	movt	r6, #256	; 0x100
   18048:	mov	r7, #0
   1804c:	mov	r3, r7
   18050:	mov	r2, r6
   18054:	sub	r1, fp, #96	; 0x60
   18058:	mov	r0, r5
   1805c:	bl	170d0 <argp_error@@Base+0x150>
   18060:	sub	r5, r5, #36	; 0x24
   18064:	ldr	r3, [fp, #-112]	; 0xffffff90
   18068:	cmp	r5, r3
   1806c:	bcs	1804c <argp_parse@@Base+0x938>
   18070:	cmp	r4, #7
   18074:	moveq	r4, #22
   18078:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1807c:	bl	183ec <argp_parse@@Base+0xcd8>
   18080:	mov	r0, r4
   18084:	sub	sp, fp, #32
   18088:	ldrd	r4, [sp]
   1808c:	ldrd	r6, [sp, #8]
   18090:	ldrd	r8, [sp, #16]
   18094:	ldrd	sl, [sp, #24]
   18098:	add	sp, sp, #32
   1809c:	pop	{pc}		; (ldr pc, [sp], #4)
   180a0:	ldr	r6, [fp, #-112]	; 0xffffff90
   180a4:	ldr	r5, [fp, #-108]	; 0xffffff94
   180a8:	cmp	r5, r6
   180ac:	bls	18234 <argp_parse@@Base+0xb20>
   180b0:	mov	r4, #0
   180b4:	mov	r7, #2
   180b8:	movt	r7, #256	; 0x100
   180bc:	mov	r8, r4
   180c0:	mov	r0, r4
   180c4:	b	180e4 <argp_parse@@Base+0x9d0>
   180c8:	add	r6, r6, #36	; 0x24
   180cc:	ldr	r5, [fp, #-108]	; 0xffffff94
   180d0:	cmp	r6, r5
   180d4:	bcs	18120 <argp_parse@@Base+0xa0c>
   180d8:	cmp	r0, #7
   180dc:	cmpne	r0, #0
   180e0:	bne	18108 <argp_parse@@Base+0x9f4>
   180e4:	ldr	r3, [r6, #12]
   180e8:	cmp	r3, #0
   180ec:	bne	180c8 <argp_parse@@Base+0x9b4>
   180f0:	mov	r3, r8
   180f4:	mov	r2, r7
   180f8:	sub	r1, fp, #96	; 0x60
   180fc:	mov	r0, r6
   18100:	bl	170d0 <argp_error@@Base+0x150>
   18104:	b	180c8 <argp_parse@@Base+0x9b4>
   18108:	mov	r4, r0
   1810c:	sub	r5, r5, #36	; 0x24
   18110:	ldr	r3, [fp, #-112]	; 0xffffff90
   18114:	cmp	r3, r5
   18118:	bls	18134 <argp_parse@@Base+0xa20>
   1811c:	b	18180 <argp_parse@@Base+0xa6c>
   18120:	mov	r4, r0
   18124:	sub	r5, r5, #36	; 0x24
   18128:	ldr	r3, [fp, #-112]	; 0xffffff90
   1812c:	cmp	r3, r5
   18130:	bhi	181a8 <argp_parse@@Base+0xa94>
   18134:	cmp	r4, #7
   18138:	cmpne	r4, #0
   1813c:	bne	18180 <argp_parse@@Base+0xa6c>
   18140:	mov	r6, #1
   18144:	movt	r6, #256	; 0x100
   18148:	mov	r7, #0
   1814c:	mov	r3, r7
   18150:	mov	r2, r6
   18154:	sub	r1, fp, #96	; 0x60
   18158:	mov	r0, r5
   1815c:	bl	170d0 <argp_error@@Base+0x150>
   18160:	sub	r5, r5, #36	; 0x24
   18164:	ldr	r3, [fp, #-112]	; 0xffffff90
   18168:	cmp	r5, r3
   1816c:	bcc	181a4 <argp_parse@@Base+0xa90>
   18170:	cmp	r0, #7
   18174:	cmpne	r0, #0
   18178:	beq	1814c <argp_parse@@Base+0xa38>
   1817c:	mov	r4, r0
   18180:	ldr	r3, [fp, #4]
   18184:	cmp	r3, #0
   18188:	beq	18198 <argp_parse@@Base+0xa84>
   1818c:	ldr	r3, [fp, #-84]	; 0xffffffac
   18190:	ldr	r2, [fp, #4]
   18194:	str	r3, [r2]
   18198:	cmp	r4, #0
   1819c:	beq	17ecc <argp_parse@@Base+0x7b8>
   181a0:	b	17fe4 <argp_parse@@Base+0x8d0>
   181a4:	mov	r4, r0
   181a8:	cmp	r4, #7
   181ac:	bne	18180 <argp_parse@@Base+0xa6c>
   181b0:	ldr	r3, [fp, #4]
   181b4:	cmp	r3, #0
   181b8:	movne	r4, #0
   181bc:	bne	1818c <argp_parse@@Base+0xa78>
   181c0:	b	17ecc <argp_parse@@Base+0x7b8>
   181c4:	ldr	r3, [fp, #-80]	; 0xffffffb0
   181c8:	tst	r3, #2
   181cc:	bne	181ec <argp_parse@@Base+0xad8>
   181d0:	ldr	r0, [fp, #-52]	; 0xffffffcc
   181d4:	cmp	r0, #0
   181d8:	beq	181ec <argp_parse@@Base+0xad8>
   181dc:	ldr	r2, [fp, #-56]	; 0xffffffc8
   181e0:	movw	r1, #45264	; 0xb0d0
   181e4:	movt	r1, #1
   181e8:	bl	113d0 <fprintf@plt>
   181ec:	mov	r2, #260	; 0x104
   181f0:	ldr	r1, [fp, #-52]	; 0xffffffcc
   181f4:	sub	r0, fp, #96	; 0x60
   181f8:	bl	16eb8 <argp_state_help@@Base>
   181fc:	mov	r4, #7
   18200:	b	17fec <argp_parse@@Base+0x8d8>
   18204:	mov	r4, r0
   18208:	cmp	r0, #7
   1820c:	movne	r4, r0
   18210:	moveq	r4, #0
   18214:	ldr	r5, [fp, #-108]	; 0xffffff94
   18218:	sub	r5, r5, #36	; 0x24
   1821c:	ldr	r3, [fp, #-112]	; 0xffffff90
   18220:	cmp	r3, r5
   18224:	bls	18040 <argp_parse@@Base+0x92c>
   18228:	b	18078 <argp_parse@@Base+0x964>
   1822c:	mov	r4, #0
   18230:	b	18078 <argp_parse@@Base+0x964>
   18234:	sub	r5, r5, #36	; 0x24
   18238:	cmp	r5, r6
   1823c:	movcc	r4, #0
   18240:	bcs	18140 <argp_parse@@Base+0xa2c>
   18244:	b	18180 <argp_parse@@Base+0xa6c>
   18248:	mov	r3, #0
   1824c:	b	17ea4 <argp_parse@@Base+0x790>
   18250:	mov	r3, #1
   18254:	b	17ea4 <argp_parse@@Base+0x790>
   18258:	mov	r3, #1
   1825c:	b	17ea4 <argp_parse@@Base+0x790>
   18260:	andeq	sl, r1, ip, lsl #31
   18264:	andeq	sl, r1, r8, lsr #31
   18268:	cmp	r1, #0
   1826c:	beq	182b8 <argp_parse@@Base+0xba4>
   18270:	ldr	r2, [r1, #52]	; 0x34
   18274:	ldr	r3, [r2, #48]	; 0x30
   18278:	ldr	r1, [r2, #52]	; 0x34
   1827c:	cmp	r3, r1
   18280:	bcs	182c0 <argp_parse@@Base+0xbac>
   18284:	ldr	r2, [r3, #4]
   18288:	cmp	r0, r2
   1828c:	beq	182a8 <argp_parse@@Base+0xb94>
   18290:	add	r3, r3, #36	; 0x24
   18294:	cmp	r3, r1
   18298:	bcs	182b0 <argp_parse@@Base+0xb9c>
   1829c:	ldr	r2, [r3, #4]
   182a0:	cmp	r2, r0
   182a4:	bne	18290 <argp_parse@@Base+0xb7c>
   182a8:	ldr	r0, [r3, #24]
   182ac:	bx	lr
   182b0:	mov	r0, #0
   182b4:	bx	lr
   182b8:	mov	r0, r1
   182bc:	bx	lr
   182c0:	mov	r0, #0
   182c4:	bx	lr
   182c8:	push	{lr}		; (str lr, [sp, #-4]!)
   182cc:	sub	sp, sp, #12
   182d0:	movw	r1, #50448	; 0xc510
   182d4:	movt	r1, #2
   182d8:	ldr	r3, [r1, #4]
   182dc:	str	r3, [sp]
   182e0:	movw	r3, #45480	; 0xb1a8
   182e4:	movt	r3, #1
   182e8:	movw	r2, #45496	; 0xb1b8
   182ec:	movt	r2, #1
   182f0:	ldr	r1, [r1]
   182f4:	bl	1890c <argp_parse@@Base+0x11f8>
   182f8:	add	sp, sp, #12
   182fc:	pop	{pc}		; (ldr pc, [sp], #4)
   18300:	movw	r3, #50444	; 0xc50c
   18304:	movt	r3, #2
   18308:	movw	r2, #33480	; 0x82c8
   1830c:	movt	r2, #1
   18310:	str	r2, [r3]
   18314:	movw	r3, #50448	; 0xc510
   18318:	movt	r3, #2
   1831c:	str	r0, [r3]
   18320:	str	r1, [r3, #4]
   18324:	bx	lr
   18328:	ldrb	r3, [r0]
   1832c:	cmp	r3, #47	; 0x2f
   18330:	bne	18340 <argp_parse@@Base+0xc2c>
   18334:	ldrb	r3, [r0, #1]!
   18338:	cmp	r3, #47	; 0x2f
   1833c:	beq	18334 <argp_parse@@Base+0xc20>
   18340:	ldrb	r2, [r0]
   18344:	cmp	r2, #0
   18348:	bxeq	lr
   1834c:	push	{lr}		; (str lr, [sp, #-4]!)
   18350:	mov	r1, r0
   18354:	mov	r3, #0
   18358:	mov	lr, #1
   1835c:	mov	ip, r3
   18360:	b	1837c <argp_parse@@Base+0xc68>
   18364:	cmp	r3, #0
   18368:	movne	r0, r1
   1836c:	movne	r3, ip
   18370:	ldrb	r2, [r1, #1]!
   18374:	cmp	r2, #0
   18378:	beq	1838c <argp_parse@@Base+0xc78>
   1837c:	cmp	r2, #47	; 0x2f
   18380:	moveq	r3, lr
   18384:	bne	18364 <argp_parse@@Base+0xc50>
   18388:	b	18370 <argp_parse@@Base+0xc5c>
   1838c:	pop	{pc}		; (ldr pc, [sp], #4)
   18390:	str	r4, [sp, #-8]!
   18394:	str	lr, [sp, #4]
   18398:	mov	r4, r0
   1839c:	bl	113b8 <strlen@plt>
   183a0:	cmp	r0, #1
   183a4:	bls	183c4 <argp_parse@@Base+0xcb0>
   183a8:	add	r3, r4, r0
   183ac:	ldrb	r3, [r3, #-1]
   183b0:	cmp	r3, #47	; 0x2f
   183b4:	subeq	r0, r0, #2
   183b8:	addeq	r3, r4, r0
   183bc:	rsbeq	r1, r4, #1
   183c0:	beq	183d0 <argp_parse@@Base+0xcbc>
   183c4:	ldr	r4, [sp]
   183c8:	add	sp, sp, #4
   183cc:	pop	{pc}		; (ldr pc, [sp], #4)
   183d0:	add	r0, r1, r3
   183d4:	cmp	r3, r4
   183d8:	beq	183c4 <argp_parse@@Base+0xcb0>
   183dc:	ldrb	r2, [r3], #-1
   183e0:	cmp	r2, #47	; 0x2f
   183e4:	bne	183c4 <argp_parse@@Base+0xcb0>
   183e8:	b	183d0 <argp_parse@@Base+0xcbc>
   183ec:	strd	r4, [sp, #-12]!
   183f0:	str	lr, [sp, #8]
   183f4:	sub	sp, sp, #12
   183f8:	mov	r5, r0
   183fc:	bl	113dc <__errno_location@plt>
   18400:	mov	r4, r0
   18404:	ldr	r3, [r0]
   18408:	str	r3, [sp]
   1840c:	str	r3, [sp, #4]
   18410:	mov	r3, #0
   18414:	str	r3, [r0]
   18418:	mov	r0, r5
   1841c:	bl	11238 <free@plt>
   18420:	ldr	r3, [r4]
   18424:	clz	r3, r3
   18428:	lsr	r3, r3, #5
   1842c:	add	r2, sp, #8
   18430:	add	r3, r2, r3, lsl #2
   18434:	ldr	r3, [r3, #-8]
   18438:	str	r3, [r4]
   1843c:	add	sp, sp, #12
   18440:	ldrd	r4, [sp]
   18444:	add	sp, sp, #8
   18448:	pop	{pc}		; (ldr pc, [sp], #4)
   1844c:	push	{lr}		; (str lr, [sp, #-4]!)
   18450:	sub	sp, sp, #20
   18454:	mov	ip, #0
   18458:	str	ip, [sp, #8]
   1845c:	str	ip, [sp, #4]
   18460:	ldr	ip, [sp, #24]
   18464:	str	ip, [sp]
   18468:	bl	1a3d4 <argp_parse@@Base+0x2cc0>
   1846c:	add	sp, sp, #20
   18470:	pop	{pc}		; (ldr pc, [sp], #4)
   18474:	push	{lr}		; (str lr, [sp, #-4]!)
   18478:	sub	sp, sp, #20
   1847c:	mov	ip, #0
   18480:	str	ip, [sp, #12]
   18484:	ldr	lr, [sp, #28]
   18488:	str	lr, [sp, #8]
   1848c:	str	ip, [sp, #4]
   18490:	ldr	ip, [sp, #24]
   18494:	str	ip, [sp]
   18498:	bl	19e18 <argp_parse@@Base+0x2704>
   1849c:	add	sp, sp, #20
   184a0:	pop	{pc}		; (ldr pc, [sp], #4)
   184a4:	push	{lr}		; (str lr, [sp, #-4]!)
   184a8:	sub	sp, sp, #20
   184ac:	mov	ip, #0
   184b0:	str	ip, [sp, #8]
   184b4:	mov	ip, #1
   184b8:	str	ip, [sp, #4]
   184bc:	ldr	ip, [sp, #24]
   184c0:	str	ip, [sp]
   184c4:	bl	1a3d4 <argp_parse@@Base+0x2cc0>
   184c8:	add	sp, sp, #20
   184cc:	pop	{pc}		; (ldr pc, [sp], #4)
   184d0:	push	{lr}		; (str lr, [sp, #-4]!)
   184d4:	sub	sp, sp, #20
   184d8:	mov	ip, #0
   184dc:	str	ip, [sp, #12]
   184e0:	ldr	ip, [sp, #28]
   184e4:	str	ip, [sp, #8]
   184e8:	mov	ip, #1
   184ec:	str	ip, [sp, #4]
   184f0:	ldr	ip, [sp, #24]
   184f4:	str	ip, [sp]
   184f8:	bl	19e18 <argp_parse@@Base+0x2704>
   184fc:	add	sp, sp, #20
   18500:	pop	{pc}		; (ldr pc, [sp], #4)
   18504:	push	{r1, r2, r3}
   18508:	push	{lr}		; (str lr, [sp, #-4]!)
   1850c:	sub	sp, sp, #8
   18510:	add	r3, sp, #20
   18514:	str	r3, [sp, #4]
   18518:	ldr	r2, [sp, #16]
   1851c:	ldr	r1, [sp, #12]
   18520:	bl	112ec <ioctl@plt>
   18524:	add	sp, sp, #8
   18528:	pop	{lr}		; (ldr lr, [sp], #4)
   1852c:	add	sp, sp, #12
   18530:	bx	lr
   18534:	strd	r4, [sp, #-16]!
   18538:	str	r6, [sp, #8]
   1853c:	str	lr, [sp, #12]
   18540:	subs	r4, r0, #0
   18544:	beq	185e0 <argp_parse@@Base+0xecc>
   18548:	mov	r1, #47	; 0x2f
   1854c:	mov	r0, r4
   18550:	bl	11484 <strrchr@plt>
   18554:	subs	r5, r0, #0
   18558:	beq	185b8 <argp_parse@@Base+0xea4>
   1855c:	add	r6, r5, #1
   18560:	sub	r3, r6, r4
   18564:	cmp	r3, #6
   18568:	ble	185b8 <argp_parse@@Base+0xea4>
   1856c:	mov	r2, #7
   18570:	movw	r1, #45568	; 0xb200
   18574:	movt	r1, #1
   18578:	sub	r0, r5, #6
   1857c:	bl	11508 <strncmp@plt>
   18580:	cmp	r0, #0
   18584:	bne	185b8 <argp_parse@@Base+0xea4>
   18588:	mov	r2, #3
   1858c:	movw	r1, #45576	; 0xb208
   18590:	movt	r1, #1
   18594:	mov	r0, r6
   18598:	bl	11508 <strncmp@plt>
   1859c:	cmp	r0, #0
   185a0:	movne	r4, r6
   185a4:	bne	185b8 <argp_parse@@Base+0xea4>
   185a8:	add	r4, r5, #4
   185ac:	movw	r3, #50248	; 0xc448
   185b0:	movt	r3, #2
   185b4:	str	r4, [r3]
   185b8:	movw	r3, #50456	; 0xc518
   185bc:	movt	r3, #2
   185c0:	str	r4, [r3]
   185c4:	movw	r3, #50252	; 0xc44c
   185c8:	movt	r3, #2
   185cc:	str	r4, [r3]
   185d0:	ldrd	r4, [sp]
   185d4:	ldr	r6, [sp, #8]
   185d8:	add	sp, sp, #12
   185dc:	pop	{pc}		; (ldr pc, [sp], #4)
   185e0:	movw	r3, #50256	; 0xc450
   185e4:	movt	r3, #2
   185e8:	ldr	r3, [r3]
   185ec:	mov	r2, #55	; 0x37
   185f0:	mov	r1, #1
   185f4:	movw	r0, #45512	; 0xb1c8
   185f8:	movt	r0, #1
   185fc:	bl	112e0 <fwrite@plt>
   18600:	bl	11514 <abort@plt>
   18604:	strd	r4, [sp, #-16]!
   18608:	str	r6, [sp, #8]
   1860c:	str	lr, [sp, #12]
   18610:	sub	sp, sp, #32
   18614:	mov	r4, r0
   18618:	ldr	r5, [sp, #48]	; 0x30
   1861c:	ldr	r6, [sp, #52]	; 0x34
   18620:	cmp	r1, #0
   18624:	beq	186c0 <argp_parse@@Base+0xfac>
   18628:	str	r3, [sp]
   1862c:	mov	r3, r2
   18630:	mov	r2, r1
   18634:	movw	r1, #45580	; 0xb20c
   18638:	movt	r1, #1
   1863c:	bl	113d0 <fprintf@plt>
   18640:	movw	r3, #2022	; 0x7e6
   18644:	movw	r2, #45600	; 0xb220
   18648:	movt	r2, #1
   1864c:	movw	r1, #46368	; 0xb520
   18650:	movt	r1, #1
   18654:	mov	r0, r4
   18658:	bl	113d0 <fprintf@plt>
   1865c:	mov	r1, r4
   18660:	mov	r0, #10
   18664:	bl	1149c <fputc@plt>
   18668:	movw	r2, #45604	; 0xb224
   1866c:	movt	r2, #1
   18670:	movw	r1, #45640	; 0xb248
   18674:	movt	r1, #1
   18678:	mov	r0, r4
   1867c:	bl	113d0 <fprintf@plt>
   18680:	mov	r1, r4
   18684:	mov	r0, #10
   18688:	bl	1149c <fputc@plt>
   1868c:	cmp	r6, #9
   18690:	ldrls	pc, [pc, r6, lsl #2]
   18694:	b	188b8 <argp_parse@@Base+0x11a4>
   18698:	andeq	r8, r1, r4, ror #13
   1869c:	ldrdeq	r8, [r1], -r0
   186a0:	strdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   186a4:	andeq	r8, r1, r4, lsl r7
   186a8:	andeq	r8, r1, r8, lsr r7
   186ac:	andeq	r8, r1, r4, ror #14
   186b0:	muleq	r1, r8, r7
   186b4:	ldrdeq	r8, [r1], -r4
   186b8:	andeq	r8, r1, r8, lsl r8
   186bc:	andeq	r8, r1, r4, ror #16
   186c0:	movw	r1, #45592	; 0xb218
   186c4:	movt	r1, #1
   186c8:	bl	113d0 <fprintf@plt>
   186cc:	b	18640 <argp_parse@@Base+0xf2c>
   186d0:	ldr	r2, [r5]
   186d4:	movw	r1, #45812	; 0xb2f4
   186d8:	movt	r1, #1
   186dc:	mov	r0, r4
   186e0:	bl	113d0 <fprintf@plt>
   186e4:	add	sp, sp, #32
   186e8:	ldrd	r4, [sp]
   186ec:	ldr	r6, [sp, #8]
   186f0:	add	sp, sp, #12
   186f4:	pop	{pc}		; (ldr pc, [sp], #4)
   186f8:	ldr	r3, [r5, #4]
   186fc:	ldr	r2, [r5]
   18700:	movw	r1, #45828	; 0xb304
   18704:	movt	r1, #1
   18708:	mov	r0, r4
   1870c:	bl	113d0 <fprintf@plt>
   18710:	b	186e4 <argp_parse@@Base+0xfd0>
   18714:	ldr	r3, [r5, #8]
   18718:	str	r3, [sp]
   1871c:	ldr	r3, [r5, #4]
   18720:	ldr	r2, [r5]
   18724:	movw	r1, #45852	; 0xb31c
   18728:	movt	r1, #1
   1872c:	mov	r0, r4
   18730:	bl	113d0 <fprintf@plt>
   18734:	b	186e4 <argp_parse@@Base+0xfd0>
   18738:	ldr	r3, [r5, #12]
   1873c:	str	r3, [sp, #4]
   18740:	ldr	r3, [r5, #8]
   18744:	str	r3, [sp]
   18748:	ldr	r3, [r5, #4]
   1874c:	ldr	r2, [r5]
   18750:	movw	r1, #45880	; 0xb338
   18754:	movt	r1, #1
   18758:	mov	r0, r4
   1875c:	bl	113d0 <fprintf@plt>
   18760:	b	186e4 <argp_parse@@Base+0xfd0>
   18764:	ldr	r3, [r5, #16]
   18768:	str	r3, [sp, #8]
   1876c:	ldr	r3, [r5, #12]
   18770:	str	r3, [sp, #4]
   18774:	ldr	r3, [r5, #8]
   18778:	str	r3, [sp]
   1877c:	ldr	r3, [r5, #4]
   18780:	ldr	r2, [r5]
   18784:	movw	r1, #45912	; 0xb358
   18788:	movt	r1, #1
   1878c:	mov	r0, r4
   18790:	bl	113d0 <fprintf@plt>
   18794:	b	186e4 <argp_parse@@Base+0xfd0>
   18798:	ldr	r3, [r5, #20]
   1879c:	str	r3, [sp, #12]
   187a0:	ldr	r3, [r5, #16]
   187a4:	str	r3, [sp, #8]
   187a8:	ldr	r3, [r5, #12]
   187ac:	str	r3, [sp, #4]
   187b0:	ldr	r3, [r5, #8]
   187b4:	str	r3, [sp]
   187b8:	ldr	r3, [r5, #4]
   187bc:	ldr	r2, [r5]
   187c0:	movw	r1, #45948	; 0xb37c
   187c4:	movt	r1, #1
   187c8:	mov	r0, r4
   187cc:	bl	113d0 <fprintf@plt>
   187d0:	b	186e4 <argp_parse@@Base+0xfd0>
   187d4:	ldr	r3, [r5, #24]
   187d8:	str	r3, [sp, #16]
   187dc:	ldr	r3, [r5, #20]
   187e0:	str	r3, [sp, #12]
   187e4:	ldr	r3, [r5, #16]
   187e8:	str	r3, [sp, #8]
   187ec:	ldr	r3, [r5, #12]
   187f0:	str	r3, [sp, #4]
   187f4:	ldr	r3, [r5, #8]
   187f8:	str	r3, [sp]
   187fc:	ldr	r3, [r5, #4]
   18800:	ldr	r2, [r5]
   18804:	movw	r1, #45988	; 0xb3a4
   18808:	movt	r1, #1
   1880c:	mov	r0, r4
   18810:	bl	113d0 <fprintf@plt>
   18814:	b	186e4 <argp_parse@@Base+0xfd0>
   18818:	ldr	r3, [r5, #28]
   1881c:	str	r3, [sp, #20]
   18820:	ldr	r3, [r5, #24]
   18824:	str	r3, [sp, #16]
   18828:	ldr	r3, [r5, #20]
   1882c:	str	r3, [sp, #12]
   18830:	ldr	r3, [r5, #16]
   18834:	str	r3, [sp, #8]
   18838:	ldr	r3, [r5, #12]
   1883c:	str	r3, [sp, #4]
   18840:	ldr	r3, [r5, #8]
   18844:	str	r3, [sp]
   18848:	ldr	r3, [r5, #4]
   1884c:	ldr	r2, [r5]
   18850:	movw	r1, #46032	; 0xb3d0
   18854:	movt	r1, #1
   18858:	mov	r0, r4
   1885c:	bl	113d0 <fprintf@plt>
   18860:	b	186e4 <argp_parse@@Base+0xfd0>
   18864:	ldr	r3, [r5, #32]
   18868:	str	r3, [sp, #24]
   1886c:	ldr	r3, [r5, #28]
   18870:	str	r3, [sp, #20]
   18874:	ldr	r3, [r5, #24]
   18878:	str	r3, [sp, #16]
   1887c:	ldr	r3, [r5, #20]
   18880:	str	r3, [sp, #12]
   18884:	ldr	r3, [r5, #16]
   18888:	str	r3, [sp, #8]
   1888c:	ldr	r3, [r5, #12]
   18890:	str	r3, [sp, #4]
   18894:	ldr	r3, [r5, #8]
   18898:	str	r3, [sp]
   1889c:	ldr	r3, [r5, #4]
   188a0:	ldr	r2, [r5]
   188a4:	movw	r1, #46080	; 0xb400
   188a8:	movt	r1, #1
   188ac:	mov	r0, r4
   188b0:	bl	113d0 <fprintf@plt>
   188b4:	b	186e4 <argp_parse@@Base+0xfd0>
   188b8:	ldr	r3, [r5, #32]
   188bc:	str	r3, [sp, #24]
   188c0:	ldr	r3, [r5, #28]
   188c4:	str	r3, [sp, #20]
   188c8:	ldr	r3, [r5, #24]
   188cc:	str	r3, [sp, #16]
   188d0:	ldr	r3, [r5, #20]
   188d4:	str	r3, [sp, #12]
   188d8:	ldr	r3, [r5, #16]
   188dc:	str	r3, [sp, #8]
   188e0:	ldr	r3, [r5, #12]
   188e4:	str	r3, [sp, #4]
   188e8:	ldr	r3, [r5, #8]
   188ec:	str	r3, [sp]
   188f0:	ldr	r3, [r5, #4]
   188f4:	ldr	r2, [r5]
   188f8:	movw	r1, #46132	; 0xb434
   188fc:	movt	r1, #1
   18900:	mov	r0, r4
   18904:	bl	113d0 <fprintf@plt>
   18908:	b	186e4 <argp_parse@@Base+0xfd0>
   1890c:	strd	r4, [sp, #-12]!
   18910:	str	lr, [sp, #8]
   18914:	sub	sp, sp, #12
   18918:	ldr	r5, [sp, #24]
   1891c:	ldr	ip, [r5]
   18920:	cmp	ip, #0
   18924:	beq	1895c <argp_parse@@Base+0x1248>
   18928:	mov	lr, r5
   1892c:	mov	ip, #0
   18930:	add	ip, ip, #1
   18934:	ldr	r4, [lr, #4]!
   18938:	cmp	r4, #0
   1893c:	bne	18930 <argp_parse@@Base+0x121c>
   18940:	str	ip, [sp, #4]
   18944:	str	r5, [sp]
   18948:	bl	18604 <argp_parse@@Base+0xef0>
   1894c:	add	sp, sp, #12
   18950:	ldrd	r4, [sp]
   18954:	add	sp, sp, #8
   18958:	pop	{pc}		; (ldr pc, [sp], #4)
   1895c:	mov	ip, #0
   18960:	b	18940 <argp_parse@@Base+0x122c>
   18964:	strd	r4, [sp, #-12]!
   18968:	str	lr, [sp, #8]
   1896c:	sub	sp, sp, #52	; 0x34
   18970:	ldr	r5, [sp, #64]	; 0x40
   18974:	add	r4, sp, #8
   18978:	mov	ip, #0
   1897c:	ldr	lr, [r5], #4
   18980:	str	lr, [r4], #4
   18984:	cmp	lr, #0
   18988:	beq	18998 <argp_parse@@Base+0x1284>
   1898c:	add	ip, ip, #1
   18990:	cmp	ip, #10
   18994:	bne	1897c <argp_parse@@Base+0x1268>
   18998:	str	ip, [sp, #4]
   1899c:	add	ip, sp, #8
   189a0:	str	ip, [sp]
   189a4:	bl	18604 <argp_parse@@Base+0xef0>
   189a8:	add	sp, sp, #52	; 0x34
   189ac:	ldrd	r4, [sp]
   189b0:	add	sp, sp, #8
   189b4:	pop	{pc}		; (ldr pc, [sp], #4)
   189b8:	push	{r3}		; (str r3, [sp, #-4]!)
   189bc:	push	{lr}		; (str lr, [sp, #-4]!)
   189c0:	sub	sp, sp, #16
   189c4:	add	r3, sp, #24
   189c8:	str	r3, [sp, #12]
   189cc:	str	r3, [sp]
   189d0:	ldr	r3, [sp, #20]
   189d4:	bl	18964 <argp_parse@@Base+0x1250>
   189d8:	add	sp, sp, #16
   189dc:	pop	{lr}		; (ldr lr, [sp], #4)
   189e0:	add	sp, sp, #4
   189e4:	bx	lr
   189e8:	str	r4, [sp, #-8]!
   189ec:	str	lr, [sp, #4]
   189f0:	movw	r3, #50268	; 0xc45c
   189f4:	movt	r3, #2
   189f8:	ldr	r1, [r3]
   189fc:	mov	r0, #10
   18a00:	bl	1149c <fputc@plt>
   18a04:	movw	r1, #46192	; 0xb470
   18a08:	movt	r1, #1
   18a0c:	movw	r0, #46216	; 0xb488
   18a10:	movt	r0, #1
   18a14:	bl	111f0 <printf@plt>
   18a18:	movw	r2, #46236	; 0xb49c
   18a1c:	movt	r2, #1
   18a20:	movw	r1, #45496	; 0xb1b8
   18a24:	movt	r1, #1
   18a28:	movw	r0, #46276	; 0xb4c4
   18a2c:	movt	r0, #1
   18a30:	bl	111f0 <printf@plt>
   18a34:	movw	r1, #46296	; 0xb4d8
   18a38:	movt	r1, #1
   18a3c:	movw	r0, #46328	; 0xb4f8
   18a40:	movt	r0, #1
   18a44:	bl	111f0 <printf@plt>
   18a48:	ldr	r4, [sp]
   18a4c:	add	sp, sp, #4
   18a50:	pop	{pc}		; (ldr pc, [sp], #4)
   18a54:	str	r4, [sp, #-8]!
   18a58:	str	lr, [sp, #4]
   18a5c:	bl	18f8c <argp_parse@@Base+0x1878>
   18a60:	cmp	r0, #0
   18a64:	beq	18a74 <argp_parse@@Base+0x1360>
   18a68:	ldr	r4, [sp]
   18a6c:	add	sp, sp, #4
   18a70:	pop	{pc}		; (ldr pc, [sp], #4)
   18a74:	bl	18ee8 <argp_parse@@Base+0x17d4>
   18a78:	str	r4, [sp, #-8]!
   18a7c:	str	lr, [sp, #4]
   18a80:	bl	18f8c <argp_parse@@Base+0x1878>
   18a84:	cmp	r0, #0
   18a88:	beq	18a98 <argp_parse@@Base+0x1384>
   18a8c:	ldr	r4, [sp]
   18a90:	add	sp, sp, #4
   18a94:	pop	{pc}		; (ldr pc, [sp], #4)
   18a98:	bl	18ee8 <argp_parse@@Base+0x17d4>
   18a9c:	str	r4, [sp, #-8]!
   18aa0:	str	lr, [sp, #4]
   18aa4:	bl	18a54 <argp_parse@@Base+0x1340>
   18aa8:	ldr	r4, [sp]
   18aac:	add	sp, sp, #4
   18ab0:	pop	{pc}		; (ldr pc, [sp], #4)
   18ab4:	strd	r4, [sp, #-16]!
   18ab8:	str	r6, [sp, #8]
   18abc:	str	lr, [sp, #12]
   18ac0:	mov	r5, r0
   18ac4:	mov	r4, r1
   18ac8:	bl	18fc8 <argp_parse@@Base+0x18b4>
   18acc:	cmp	r0, #0
   18ad0:	beq	18ae4 <argp_parse@@Base+0x13d0>
   18ad4:	ldrd	r4, [sp]
   18ad8:	ldr	r6, [sp, #8]
   18adc:	add	sp, sp, #12
   18ae0:	pop	{pc}		; (ldr pc, [sp], #4)
   18ae4:	adds	r4, r4, #0
   18ae8:	movne	r4, #1
   18aec:	cmp	r5, #0
   18af0:	moveq	r4, #1
   18af4:	cmp	r4, #0
   18af8:	beq	18ad4 <argp_parse@@Base+0x13c0>
   18afc:	bl	18ee8 <argp_parse@@Base+0x17d4>
   18b00:	str	r4, [sp, #-8]!
   18b04:	str	lr, [sp, #4]
   18b08:	cmp	r1, #0
   18b0c:	orreq	r1, r1, #1
   18b10:	bl	18fc8 <argp_parse@@Base+0x18b4>
   18b14:	cmp	r0, #0
   18b18:	beq	18b28 <argp_parse@@Base+0x1414>
   18b1c:	ldr	r4, [sp]
   18b20:	add	sp, sp, #4
   18b24:	pop	{pc}		; (ldr pc, [sp], #4)
   18b28:	bl	18ee8 <argp_parse@@Base+0x17d4>
   18b2c:	strd	r4, [sp, #-16]!
   18b30:	str	r6, [sp, #8]
   18b34:	str	lr, [sp, #12]
   18b38:	mov	r4, r0
   18b3c:	mov	r6, r1
   18b40:	mov	r5, r2
   18b44:	bl	1a478 <argp_parse@@Base+0x2d64>
   18b48:	cmp	r0, #0
   18b4c:	beq	18b60 <argp_parse@@Base+0x144c>
   18b50:	ldrd	r4, [sp]
   18b54:	ldr	r6, [sp, #8]
   18b58:	add	sp, sp, #12
   18b5c:	pop	{pc}		; (ldr pc, [sp], #4)
   18b60:	cmp	r4, #0
   18b64:	beq	18b74 <argp_parse@@Base+0x1460>
   18b68:	cmp	r6, #0
   18b6c:	cmpne	r5, #0
   18b70:	beq	18b50 <argp_parse@@Base+0x143c>
   18b74:	bl	18ee8 <argp_parse@@Base+0x17d4>
   18b78:	str	r4, [sp, #-8]!
   18b7c:	str	lr, [sp, #4]
   18b80:	bl	18b2c <argp_parse@@Base+0x1418>
   18b84:	ldr	r4, [sp]
   18b88:	add	sp, sp, #4
   18b8c:	pop	{pc}		; (ldr pc, [sp], #4)
   18b90:	str	r4, [sp, #-8]!
   18b94:	str	lr, [sp, #4]
   18b98:	mov	ip, r1
   18b9c:	mov	r3, r2
   18ba0:	cmp	r2, #0
   18ba4:	cmpne	r1, #0
   18ba8:	moveq	r3, #1
   18bac:	moveq	ip, r3
   18bb0:	mov	r2, r3
   18bb4:	mov	r1, ip
   18bb8:	bl	1a478 <argp_parse@@Base+0x2d64>
   18bbc:	cmp	r0, #0
   18bc0:	beq	18bd0 <argp_parse@@Base+0x14bc>
   18bc4:	ldr	r4, [sp]
   18bc8:	add	sp, sp, #4
   18bcc:	pop	{pc}		; (ldr pc, [sp], #4)
   18bd0:	bl	18ee8 <argp_parse@@Base+0x17d4>
   18bd4:	str	r4, [sp, #-8]!
   18bd8:	str	lr, [sp, #4]
   18bdc:	mov	r2, r1
   18be0:	mov	r1, r0
   18be4:	mov	r0, #0
   18be8:	bl	18b2c <argp_parse@@Base+0x1418>
   18bec:	ldr	r4, [sp]
   18bf0:	add	sp, sp, #4
   18bf4:	pop	{pc}		; (ldr pc, [sp], #4)
   18bf8:	str	r4, [sp, #-8]!
   18bfc:	str	lr, [sp, #4]
   18c00:	mov	r2, r1
   18c04:	mov	r1, r0
   18c08:	mov	r0, #0
   18c0c:	bl	18b90 <argp_parse@@Base+0x147c>
   18c10:	ldr	r4, [sp]
   18c14:	add	sp, sp, #4
   18c18:	pop	{pc}		; (ldr pc, [sp], #4)
   18c1c:	strd	r4, [sp, #-16]!
   18c20:	str	r6, [sp, #8]
   18c24:	str	lr, [sp, #12]
   18c28:	mov	r5, r1
   18c2c:	ldr	r4, [r1]
   18c30:	cmp	r0, #0
   18c34:	beq	18c64 <argp_parse@@Base+0x1550>
   18c38:	lsr	r3, r4, #1
   18c3c:	add	r3, r3, #1
   18c40:	adds	r4, r4, r3
   18c44:	bcs	18c80 <argp_parse@@Base+0x156c>
   18c48:	mov	r1, r4
   18c4c:	bl	18b2c <argp_parse@@Base+0x1418>
   18c50:	str	r4, [r5]
   18c54:	ldrd	r4, [sp]
   18c58:	ldr	r6, [sp, #8]
   18c5c:	add	sp, sp, #12
   18c60:	pop	{pc}		; (ldr pc, [sp], #4)
   18c64:	cmp	r4, #0
   18c68:	bne	18c48 <argp_parse@@Base+0x1534>
   18c6c:	mov	r4, #64	; 0x40
   18c70:	udiv	r4, r4, r2
   18c74:	cmp	r2, #64	; 0x40
   18c78:	addhi	r4, r4, #1
   18c7c:	b	18c48 <argp_parse@@Base+0x1534>
   18c80:	bl	18ee8 <argp_parse@@Base+0x17d4>
   18c84:	str	r4, [sp, #-8]!
   18c88:	str	lr, [sp, #4]
   18c8c:	mov	r2, #1
   18c90:	bl	18c1c <argp_parse@@Base+0x1508>
   18c94:	ldr	r4, [sp]
   18c98:	add	sp, sp, #4
   18c9c:	pop	{pc}		; (ldr pc, [sp], #4)
   18ca0:	strd	r4, [sp, #-24]!	; 0xffffffe8
   18ca4:	strd	r6, [sp, #8]
   18ca8:	str	r8, [sp, #16]
   18cac:	str	lr, [sp, #20]
   18cb0:	mov	r5, r1
   18cb4:	ldr	lr, [sp, #24]
   18cb8:	ldr	ip, [r1]
   18cbc:	asr	r4, ip, #1
   18cc0:	adds	r4, ip, r4
   18cc4:	movvs	r1, #1
   18cc8:	movvc	r1, #0
   18ccc:	cmp	r1, #0
   18cd0:	mvnne	r4, #-2147483648	; 0x80000000
   18cd4:	mvn	r8, r3
   18cd8:	lsr	r8, r8, #31
   18cdc:	cmp	r3, r4
   18ce0:	movge	r1, #0
   18ce4:	andlt	r1, r8, #1
   18ce8:	cmp	r1, #0
   18cec:	movne	r4, r3
   18cf0:	smull	r6, r7, r4, lr
   18cf4:	asr	r1, r6, #31
   18cf8:	cmp	r1, r7
   18cfc:	bne	18d14 <argp_parse@@Base+0x1600>
   18d00:	mov	r1, r6
   18d04:	cmp	r6, #63	; 0x3f
   18d08:	movle	r1, #64	; 0x40
   18d0c:	ble	18d18 <argp_parse@@Base+0x1604>
   18d10:	b	18d24 <argp_parse@@Base+0x1610>
   18d14:	mvn	r1, #-2147483648	; 0x80000000
   18d18:	sdiv	r4, r1, lr
   18d1c:	mls	r6, lr, r4, r1
   18d20:	sub	r1, r1, r6
   18d24:	cmp	r0, #0
   18d28:	moveq	r6, #0
   18d2c:	streq	r6, [r5]
   18d30:	sub	r6, r4, ip
   18d34:	cmp	r6, r2
   18d38:	bge	18d70 <argp_parse@@Base+0x165c>
   18d3c:	adds	r2, ip, r2
   18d40:	mov	r4, r2
   18d44:	bvs	18d8c <argp_parse@@Base+0x1678>
   18d48:	cmp	r2, r3
   18d4c:	movle	r3, #0
   18d50:	andgt	r3, r8, #1
   18d54:	cmp	r3, #0
   18d58:	bne	18d8c <argp_parse@@Base+0x1678>
   18d5c:	smull	r2, r3, r2, lr
   18d60:	asr	ip, r2, #31
   18d64:	mov	r1, r2
   18d68:	cmp	ip, r3
   18d6c:	bne	18d8c <argp_parse@@Base+0x1678>
   18d70:	bl	18ab4 <argp_parse@@Base+0x13a0>
   18d74:	str	r4, [r5]
   18d78:	ldrd	r4, [sp]
   18d7c:	ldrd	r6, [sp, #8]
   18d80:	ldr	r8, [sp, #16]
   18d84:	add	sp, sp, #20
   18d88:	pop	{pc}		; (ldr pc, [sp], #4)
   18d8c:	bl	18ee8 <argp_parse@@Base+0x17d4>
   18d90:	str	r4, [sp, #-8]!
   18d94:	str	lr, [sp, #4]
   18d98:	bl	18f18 <argp_parse@@Base+0x1804>
   18d9c:	cmp	r0, #0
   18da0:	beq	18db0 <argp_parse@@Base+0x169c>
   18da4:	ldr	r4, [sp]
   18da8:	add	sp, sp, #4
   18dac:	pop	{pc}		; (ldr pc, [sp], #4)
   18db0:	bl	18ee8 <argp_parse@@Base+0x17d4>
   18db4:	str	r4, [sp, #-8]!
   18db8:	str	lr, [sp, #4]
   18dbc:	mov	r1, #1
   18dc0:	bl	18d90 <argp_parse@@Base+0x167c>
   18dc4:	ldr	r4, [sp]
   18dc8:	add	sp, sp, #4
   18dcc:	pop	{pc}		; (ldr pc, [sp], #4)
   18dd0:	str	r4, [sp, #-8]!
   18dd4:	str	lr, [sp, #4]
   18dd8:	bl	18f18 <argp_parse@@Base+0x1804>
   18ddc:	cmp	r0, #0
   18de0:	beq	18df0 <argp_parse@@Base+0x16dc>
   18de4:	ldr	r4, [sp]
   18de8:	add	sp, sp, #4
   18dec:	pop	{pc}		; (ldr pc, [sp], #4)
   18df0:	bl	18ee8 <argp_parse@@Base+0x17d4>
   18df4:	str	r4, [sp, #-8]!
   18df8:	str	lr, [sp, #4]
   18dfc:	mov	r1, #1
   18e00:	bl	18dd0 <argp_parse@@Base+0x16bc>
   18e04:	ldr	r4, [sp]
   18e08:	add	sp, sp, #4
   18e0c:	pop	{pc}		; (ldr pc, [sp], #4)
   18e10:	strd	r4, [sp, #-16]!
   18e14:	str	r6, [sp, #8]
   18e18:	str	lr, [sp, #12]
   18e1c:	mov	r5, r0
   18e20:	mov	r4, r1
   18e24:	mov	r0, r1
   18e28:	bl	18a54 <argp_parse@@Base+0x1340>
   18e2c:	mov	r2, r4
   18e30:	mov	r1, r5
   18e34:	bl	11268 <memcpy@plt>
   18e38:	ldrd	r4, [sp]
   18e3c:	ldr	r6, [sp, #8]
   18e40:	add	sp, sp, #12
   18e44:	pop	{pc}		; (ldr pc, [sp], #4)
   18e48:	strd	r4, [sp, #-16]!
   18e4c:	str	r6, [sp, #8]
   18e50:	str	lr, [sp, #12]
   18e54:	mov	r5, r0
   18e58:	mov	r4, r1
   18e5c:	mov	r0, r1
   18e60:	bl	18a78 <argp_parse@@Base+0x1364>
   18e64:	mov	r2, r4
   18e68:	mov	r1, r5
   18e6c:	bl	11268 <memcpy@plt>
   18e70:	ldrd	r4, [sp]
   18e74:	ldr	r6, [sp, #8]
   18e78:	add	sp, sp, #12
   18e7c:	pop	{pc}		; (ldr pc, [sp], #4)
   18e80:	strd	r4, [sp, #-16]!
   18e84:	str	r6, [sp, #8]
   18e88:	str	lr, [sp, #12]
   18e8c:	mov	r5, r0
   18e90:	mov	r4, r1
   18e94:	add	r0, r1, #1
   18e98:	bl	18a78 <argp_parse@@Base+0x1364>
   18e9c:	mov	r2, #0
   18ea0:	strb	r2, [r0, r4]
   18ea4:	mov	r2, r4
   18ea8:	mov	r1, r5
   18eac:	bl	11268 <memcpy@plt>
   18eb0:	ldrd	r4, [sp]
   18eb4:	ldr	r6, [sp, #8]
   18eb8:	add	sp, sp, #12
   18ebc:	pop	{pc}		; (ldr pc, [sp], #4)
   18ec0:	str	r4, [sp, #-8]!
   18ec4:	str	lr, [sp, #4]
   18ec8:	mov	r4, r0
   18ecc:	bl	113b8 <strlen@plt>
   18ed0:	add	r1, r0, #1
   18ed4:	mov	r0, r4
   18ed8:	bl	18e10 <argp_parse@@Base+0x16fc>
   18edc:	ldr	r4, [sp]
   18ee0:	add	sp, sp, #4
   18ee4:	pop	{pc}		; (ldr pc, [sp], #4)
   18ee8:	str	r4, [sp, #-8]!
   18eec:	str	lr, [sp, #4]
   18ef0:	movw	r3, #50228	; 0xc434
   18ef4:	movt	r3, #2
   18ef8:	ldr	r0, [r3]
   18efc:	movw	r3, #46416	; 0xb550
   18f00:	movt	r3, #1
   18f04:	movw	r2, #42612	; 0xa674
   18f08:	movt	r2, #1
   18f0c:	mov	r1, #0
   18f10:	bl	1131c <error@plt>
   18f14:	bl	11514 <abort@plt>
   18f18:	strd	r4, [sp, #-16]!
   18f1c:	str	r6, [sp, #8]
   18f20:	str	lr, [sp, #12]
   18f24:	cmp	r1, #0
   18f28:	cmpne	r0, #0
   18f2c:	beq	18f68 <argp_parse@@Base+0x1854>
   18f30:	mov	r2, r0
   18f34:	mov	r3, r1
   18f38:	umull	r4, r5, r0, r1
   18f3c:	adds	r1, r5, #0
   18f40:	movne	r1, #1
   18f44:	cmp	r4, #0
   18f48:	movlt	r1, #1
   18f4c:	cmp	r1, #0
   18f50:	beq	18f70 <argp_parse@@Base+0x185c>
   18f54:	bl	113dc <__errno_location@plt>
   18f58:	mov	r3, #12
   18f5c:	str	r3, [r0]
   18f60:	mov	r0, #0
   18f64:	b	18f7c <argp_parse@@Base+0x1868>
   18f68:	mov	r3, #1
   18f6c:	mov	r2, r3
   18f70:	mov	r1, r3
   18f74:	mov	r0, r2
   18f78:	bl	111c0 <calloc@plt>
   18f7c:	ldrd	r4, [sp]
   18f80:	ldr	r6, [sp, #8]
   18f84:	add	sp, sp, #12
   18f88:	pop	{pc}		; (ldr pc, [sp], #4)
   18f8c:	str	r4, [sp, #-8]!
   18f90:	str	lr, [sp, #4]
   18f94:	cmp	r0, #0
   18f98:	beq	18fb4 <argp_parse@@Base+0x18a0>
   18f9c:	bge	18fb8 <argp_parse@@Base+0x18a4>
   18fa0:	bl	113dc <__errno_location@plt>
   18fa4:	mov	r3, #12
   18fa8:	str	r3, [r0]
   18fac:	mov	r0, #0
   18fb0:	b	18fbc <argp_parse@@Base+0x18a8>
   18fb4:	mov	r0, #1
   18fb8:	bl	1134c <malloc@plt>
   18fbc:	ldr	r4, [sp]
   18fc0:	add	sp, sp, #4
   18fc4:	pop	{pc}		; (ldr pc, [sp], #4)
   18fc8:	str	r4, [sp, #-8]!
   18fcc:	str	lr, [sp, #4]
   18fd0:	cmp	r0, #0
   18fd4:	beq	18ff8 <argp_parse@@Base+0x18e4>
   18fd8:	cmp	r1, #0
   18fdc:	beq	19004 <argp_parse@@Base+0x18f0>
   18fe0:	cmp	r1, #0
   18fe4:	blt	19010 <argp_parse@@Base+0x18fc>
   18fe8:	bl	112b0 <realloc@plt>
   18fec:	ldr	r4, [sp]
   18ff0:	add	sp, sp, #4
   18ff4:	pop	{pc}		; (ldr pc, [sp], #4)
   18ff8:	mov	r0, r1
   18ffc:	bl	18f8c <argp_parse@@Base+0x1878>
   19000:	b	18fec <argp_parse@@Base+0x18d8>
   19004:	bl	183ec <argp_parse@@Base+0xcd8>
   19008:	mov	r0, #0
   1900c:	b	18fec <argp_parse@@Base+0x18d8>
   19010:	bl	113dc <__errno_location@plt>
   19014:	mov	r3, #12
   19018:	str	r3, [r0]
   1901c:	mov	r0, #0
   19020:	b	18fec <argp_parse@@Base+0x18d8>
   19024:	strd	r4, [sp, #-24]!	; 0xffffffe8
   19028:	strd	r6, [sp, #8]
   1902c:	str	r8, [sp, #16]
   19030:	str	lr, [sp, #20]
   19034:	mov	r8, r0
   19038:	mov	r7, r1
   1903c:	mov	r6, r2
   19040:	mov	r5, r3
   19044:	mov	r0, #36	; 0x24
   19048:	bl	18f8c <argp_parse@@Base+0x1878>
   1904c:	subs	r4, r0, #0
   19050:	beq	19094 <argp_parse@@Base+0x1980>
   19054:	str	r8, [r4]
   19058:	str	r7, [r4, #4]
   1905c:	str	r6, [r4, #8]
   19060:	str	r5, [r4, #12]
   19064:	mov	r3, #0
   19068:	str	r3, [r4, #20]
   1906c:	str	r3, [r4, #16]
   19070:	mov	r0, #200	; 0xc8
   19074:	bl	18f8c <argp_parse@@Base+0x1878>
   19078:	mov	r5, r0
   1907c:	str	r0, [r4, #24]
   19080:	cmp	r0, #0
   19084:	strne	r0, [r4, #28]
   19088:	addne	r5, r0, #200	; 0xc8
   1908c:	strne	r5, [r4, #32]
   19090:	beq	190ac <argp_parse@@Base+0x1998>
   19094:	mov	r0, r4
   19098:	ldrd	r4, [sp]
   1909c:	ldrd	r6, [sp, #8]
   190a0:	ldr	r8, [sp, #16]
   190a4:	add	sp, sp, #20
   190a8:	pop	{pc}		; (ldr pc, [sp], #4)
   190ac:	mov	r0, r4
   190b0:	bl	183ec <argp_parse@@Base+0xcd8>
   190b4:	mov	r4, r5
   190b8:	b	19094 <argp_parse@@Base+0x1980>
   190bc:	strd	r4, [sp, #-36]!	; 0xffffffdc
   190c0:	strd	r6, [sp, #8]
   190c4:	strd	r8, [sp, #16]
   190c8:	strd	sl, [sp, #24]
   190cc:	str	lr, [sp, #32]
   190d0:	sub	sp, sp, #20
   190d4:	mov	r4, r0
   190d8:	ldr	r5, [r0, #24]
   190dc:	ldr	r3, [r0, #16]
   190e0:	add	r5, r5, r3
   190e4:	mov	sl, #32
   190e8:	str	sl, [sp, #8]
   190ec:	b	191d4 <argp_parse@@Base+0x1ac0>
   190f0:	mov	r7, #0
   190f4:	ldr	r0, [r4]
   190f8:	ldr	r3, [r0, #20]
   190fc:	ldr	r2, [r0, #24]
   19100:	cmp	r3, r2
   19104:	addcc	r2, r3, #1
   19108:	strcc	r2, [r0, #20]
   1910c:	strbcc	sl, [r3]
   19110:	bcs	19240 <argp_parse@@Base+0x1b2c>
   19114:	add	r7, r7, #1
   19118:	cmp	r6, r7
   1911c:	bne	190f4 <argp_parse@@Base+0x19e0>
   19120:	str	r6, [r4, #20]
   19124:	ldr	r8, [r4, #28]
   19128:	sub	fp, r8, r5
   1912c:	mov	r2, fp
   19130:	mov	r1, #10
   19134:	mov	r0, r5
   19138:	bl	1143c <memchr@plt>
   1913c:	mov	r6, r0
   19140:	ldr	r3, [r4, #20]
   19144:	cmp	r3, #0
   19148:	movlt	r3, #0
   1914c:	strlt	r3, [r4, #20]
   19150:	cmp	r6, #0
   19154:	beq	1924c <argp_parse@@Base+0x1b38>
   19158:	ldr	r0, [r4, #20]
   1915c:	ldr	r9, [r4, #8]
   19160:	sub	r3, r6, r5
   19164:	add	r3, r3, r0
   19168:	cmp	r3, r9
   1916c:	movlt	r3, #0
   19170:	strlt	r3, [r4, #20]
   19174:	addlt	r5, r6, #1
   19178:	blt	191d4 <argp_parse@@Base+0x1ac0>
   1917c:	sub	r7, r9, #1
   19180:	ldr	r3, [r4, #12]
   19184:	str	r3, [sp, #4]
   19188:	cmp	r3, #0
   1918c:	bge	19278 <argp_parse@@Base+0x1b64>
   19190:	cmp	r8, r6
   19194:	bls	19308 <argp_parse@@Base+0x1bf4>
   19198:	sub	r0, r7, r0
   1919c:	sub	r2, r8, r6
   191a0:	mov	r1, r6
   191a4:	add	r0, r5, r0
   191a8:	bl	11220 <memmove@plt>
   191ac:	ldr	r3, [r4, #20]
   191b0:	sub	r7, r7, r3
   191b4:	add	r7, r5, r7
   191b8:	sub	r6, r7, r6
   191bc:	ldr	r3, [r4, #28]
   191c0:	sub	r6, r3, r6
   191c4:	str	r6, [r4, #28]
   191c8:	mov	r3, #0
   191cc:	str	r3, [r4, #20]
   191d0:	add	r5, r5, r9
   191d4:	ldr	r8, [r4, #28]
   191d8:	cmp	r8, r5
   191dc:	bls	19320 <argp_parse@@Base+0x1c0c>
   191e0:	ldr	r3, [r4, #20]
   191e4:	cmp	r3, #0
   191e8:	bne	19124 <argp_parse@@Base+0x1a10>
   191ec:	ldr	r6, [r4, #4]
   191f0:	cmp	r6, #0
   191f4:	beq	195cc <argp_parse@@Base+0x1eb8>
   191f8:	add	r3, r8, r6
   191fc:	ldr	r2, [r4, #32]
   19200:	cmp	r2, r3
   19204:	bls	190f0 <argp_parse@@Base+0x19dc>
   19208:	add	r7, r5, r6
   1920c:	sub	r2, r8, r5
   19210:	mov	r1, r5
   19214:	mov	r0, r7
   19218:	bl	11220 <memmove@plt>
   1921c:	ldr	r3, [r4, #28]
   19220:	add	r3, r3, r6
   19224:	str	r3, [r4, #28]
   19228:	mov	r2, r6
   1922c:	mov	r1, sl
   19230:	mov	r0, r5
   19234:	bl	1140c <memset@plt>
   19238:	mov	r5, r7
   1923c:	b	19120 <argp_parse@@Base+0x1a0c>
   19240:	ldr	r1, [sp, #8]
   19244:	bl	1146c <__overflow@plt>
   19248:	b	19114 <argp_parse@@Base+0x1a00>
   1924c:	ldr	r3, [r4, #20]
   19250:	add	r3, fp, r3
   19254:	ldr	r7, [r4, #8]
   19258:	cmp	r3, r7
   1925c:	bcc	19300 <argp_parse@@Base+0x1bec>
   19260:	sub	r7, r7, #1
   19264:	ldr	r3, [r4, #12]
   19268:	str	r3, [sp, #4]
   1926c:	cmp	r3, #0
   19270:	blt	19308 <argp_parse@@Base+0x1bf4>
   19274:	mov	r6, r8
   19278:	ldr	r3, [r4, #20]
   1927c:	rsb	r3, r3, #1
   19280:	add	r7, r3, r7
   19284:	adds	r7, r5, r7
   19288:	bcs	195c4 <argp_parse@@Base+0x1eb0>
   1928c:	bl	11394 <__ctype_b_loc@plt>
   19290:	ldr	r0, [r0]
   19294:	mov	r3, r7
   19298:	mov	r1, r3
   1929c:	sub	r3, r3, #1
   192a0:	ldrb	r2, [r1]
   192a4:	lsl	r2, r2, #1
   192a8:	ldrh	r2, [r0, r2]
   192ac:	tst	r2, #1
   192b0:	bne	1934c <argp_parse@@Base+0x1c38>
   192b4:	mov	r1, r3
   192b8:	cmp	r3, r5
   192bc:	bcs	19298 <argp_parse@@Base+0x1b84>
   192c0:	add	r9, r1, #1
   192c4:	cmp	r9, r5
   192c8:	bhi	19388 <argp_parse@@Base+0x1c74>
   192cc:	cmp	r6, r7
   192d0:	bhi	19424 <argp_parse@@Base+0x1d10>
   192d4:	cmp	r7, r6
   192d8:	beq	19464 <argp_parse@@Base+0x1d50>
   192dc:	bl	11394 <__ctype_b_loc@plt>
   192e0:	ldr	r2, [r0]
   192e4:	mov	r9, r7
   192e8:	ldrb	r3, [r9, #1]!
   192ec:	lsl	r3, r3, #1
   192f0:	ldrh	r3, [r2, r3]
   192f4:	tst	r3, #1
   192f8:	bne	192e8 <argp_parse@@Base+0x1bd4>
   192fc:	b	1938c <argp_parse@@Base+0x1c78>
   19300:	str	r3, [r4, #20]
   19304:	b	19320 <argp_parse@@Base+0x1c0c>
   19308:	ldr	r3, [r4, #20]
   1930c:	add	r3, fp, r3
   19310:	str	r3, [r4, #20]
   19314:	sub	r3, r7, r3
   19318:	add	r8, r8, r3
   1931c:	str	r8, [r4, #28]
   19320:	ldr	r3, [r4, #28]
   19324:	ldr	r2, [r4, #24]
   19328:	sub	r3, r3, r2
   1932c:	str	r3, [r4, #16]
   19330:	add	sp, sp, #20
   19334:	ldrd	r4, [sp]
   19338:	ldrd	r6, [sp, #8]
   1933c:	ldrd	r8, [sp, #16]
   19340:	ldrd	sl, [sp, #24]
   19344:	add	sp, sp, #32
   19348:	pop	{pc}		; (ldr pc, [sp], #4)
   1934c:	add	r9, r1, #1
   19350:	cmp	r9, r5
   19354:	bls	192cc <argp_parse@@Base+0x1bb8>
   19358:	cmp	r5, r1
   1935c:	bhi	19388 <argp_parse@@Base+0x1c74>
   19360:	sub	ip, r5, #1
   19364:	mov	r1, r3
   19368:	cmp	r3, ip
   1936c:	beq	19388 <argp_parse@@Base+0x1c74>
   19370:	sub	r3, r3, #1
   19374:	ldrb	r2, [r1]
   19378:	lsl	r2, r2, #1
   1937c:	ldrh	r2, [r0, r2]
   19380:	tst	r2, #1
   19384:	bne	19364 <argp_parse@@Base+0x1c50>
   19388:	add	r7, r1, #1
   1938c:	add	r3, fp, #1
   19390:	add	r3, r5, r3
   19394:	cmp	r9, r3
   19398:	beq	19474 <argp_parse@@Base+0x1d60>
   1939c:	add	r3, r7, #1
   193a0:	sub	r3, r9, r3
   193a4:	ldr	r2, [sp, #4]
   193a8:	cmp	r3, r2
   193ac:	bge	19488 <argp_parse@@Base+0x1d74>
   193b0:	cmp	r9, r8
   193b4:	bcs	19488 <argp_parse@@Base+0x1d74>
   193b8:	ldr	r3, [r4, #32]
   193bc:	sub	r3, r3, r8
   193c0:	ldr	r2, [sp, #4]
   193c4:	add	r2, r2, #1
   193c8:	cmp	r3, r2
   193cc:	bgt	19530 <argp_parse@@Base+0x1e1c>
   193d0:	ldr	r0, [r4, #24]
   193d4:	cmp	r0, r7
   193d8:	bcs	193ec <argp_parse@@Base+0x1cd8>
   193dc:	ldr	r3, [r4]
   193e0:	sub	r2, r7, r0
   193e4:	mov	r1, #1
   193e8:	bl	11280 <fwrite_unlocked@plt>
   193ec:	ldr	r0, [r4]
   193f0:	ldr	r3, [r0, #20]
   193f4:	ldr	r2, [r0, #24]
   193f8:	cmp	r3, r2
   193fc:	addcc	r2, r3, #1
   19400:	strcc	r2, [r0, #20]
   19404:	movcc	r2, #10
   19408:	strbcc	r2, [r3]
   1940c:	bcs	19570 <argp_parse@@Base+0x1e5c>
   19410:	ldr	r8, [r4, #24]
   19414:	sub	r5, r5, r8
   19418:	add	fp, fp, r5
   1941c:	mov	r5, r8
   19420:	b	19498 <argp_parse@@Base+0x1d84>
   19424:	add	r9, r7, #1
   19428:	str	r6, [sp, #12]
   1942c:	mov	r7, r9
   19430:	cmp	r9, r6
   19434:	beq	1945c <argp_parse@@Base+0x1d48>
   19438:	bl	11394 <__ctype_b_loc@plt>
   1943c:	add	r9, r9, #1
   19440:	ldrb	r3, [r7]
   19444:	ldr	r2, [r0]
   19448:	lsl	r3, r3, #1
   1944c:	ldrh	r3, [r2, r3]
   19450:	tst	r3, #1
   19454:	beq	1942c <argp_parse@@Base+0x1d18>
   19458:	b	192dc <argp_parse@@Base+0x1bc8>
   1945c:	ldr	r6, [sp, #12]
   19460:	b	192d4 <argp_parse@@Base+0x1bc0>
   19464:	mov	r3, #0
   19468:	str	r3, [r4, #20]
   1946c:	add	r5, r6, #1
   19470:	b	191d4 <argp_parse@@Base+0x1ac0>
   19474:	ldr	r3, [r4, #32]
   19478:	sub	r3, r3, r7
   1947c:	ldr	r2, [sp, #4]
   19480:	cmp	r3, r2
   19484:	ble	193b0 <argp_parse@@Base+0x1c9c>
   19488:	mov	r3, #10
   1948c:	strb	r3, [r7], #1
   19490:	mov	r8, r5
   19494:	mov	r5, r7
   19498:	ldr	r3, [r4, #12]
   1949c:	sub	r2, r9, r5
   194a0:	cmp	r2, r3
   194a4:	bge	1957c <argp_parse@@Base+0x1e68>
   194a8:	add	r2, fp, #1
   194ac:	add	r2, r8, r2
   194b0:	cmp	r9, r2
   194b4:	bne	194c8 <argp_parse@@Base+0x1db4>
   194b8:	ldr	r2, [r4, #32]
   194bc:	sub	r2, r2, r9
   194c0:	cmp	r3, r2
   194c4:	ble	1957c <argp_parse@@Base+0x1e68>
   194c8:	cmp	r3, #0
   194cc:	movgt	r6, #0
   194d0:	ble	19504 <argp_parse@@Base+0x1df0>
   194d4:	ldr	r0, [r4]
   194d8:	ldr	r3, [r0, #20]
   194dc:	ldr	r2, [r0, #24]
   194e0:	cmp	r3, r2
   194e4:	addcc	r2, r3, #1
   194e8:	strcc	r2, [r0, #20]
   194ec:	strbcc	sl, [r3]
   194f0:	bcs	195a0 <argp_parse@@Base+0x1e8c>
   194f4:	add	r6, r6, #1
   194f8:	ldr	r3, [r4, #12]
   194fc:	cmp	r3, r6
   19500:	bgt	194d4 <argp_parse@@Base+0x1dc0>
   19504:	cmp	r5, r9
   19508:	bcc	195ac <argp_parse@@Base+0x1e98>
   1950c:	sub	r9, r9, r8
   19510:	sub	fp, fp, r9
   19514:	add	fp, r5, fp
   19518:	str	fp, [r4, #28]
   1951c:	ldr	r3, [r4, #12]
   19520:	cmp	r3, #0
   19524:	mvneq	r3, #0
   19528:	str	r3, [r4, #20]
   1952c:	b	191d4 <argp_parse@@Base+0x1ac0>
   19530:	sub	r8, r8, r9
   19534:	mov	r0, r2
   19538:	mov	r2, r8
   1953c:	mov	r1, r9
   19540:	add	r0, r7, r0
   19544:	bl	11220 <memmove@plt>
   19548:	ldr	r9, [r4, #12]
   1954c:	add	r9, r9, #1
   19550:	add	r9, r7, r9
   19554:	add	r8, r9, r8
   19558:	sub	fp, r8, r5
   1955c:	mov	r3, #10
   19560:	strb	r3, [r7], #1
   19564:	mov	r8, r5
   19568:	mov	r5, r7
   1956c:	b	19498 <argp_parse@@Base+0x1d84>
   19570:	mov	r1, #10
   19574:	bl	1146c <__overflow@plt>
   19578:	b	19410 <argp_parse@@Base+0x1cfc>
   1957c:	cmp	r3, #0
   19580:	movgt	r3, #0
   19584:	ble	19504 <argp_parse@@Base+0x1df0>
   19588:	strb	sl, [r5], #1
   1958c:	add	r3, r3, #1
   19590:	ldr	r2, [r4, #12]
   19594:	cmp	r2, r3
   19598:	bgt	19588 <argp_parse@@Base+0x1e74>
   1959c:	b	19504 <argp_parse@@Base+0x1df0>
   195a0:	ldr	r1, [sp, #8]
   195a4:	bl	1146c <__overflow@plt>
   195a8:	b	194f4 <argp_parse@@Base+0x1de0>
   195ac:	add	r2, r8, fp
   195b0:	sub	r2, r2, r9
   195b4:	mov	r1, r9
   195b8:	mov	r0, r5
   195bc:	bl	11220 <memmove@plt>
   195c0:	b	1950c <argp_parse@@Base+0x1df8>
   195c4:	mov	r1, r7
   195c8:	b	192c0 <argp_parse@@Base+0x1bac>
   195cc:	sub	fp, r8, r5
   195d0:	mov	r2, fp
   195d4:	mov	r1, #10
   195d8:	mov	r0, r5
   195dc:	bl	1143c <memchr@plt>
   195e0:	mov	r6, r0
   195e4:	b	19150 <argp_parse@@Base+0x1a3c>
   195e8:	str	r4, [sp, #-8]!
   195ec:	str	lr, [sp, #4]
   195f0:	mov	r4, r0
   195f4:	bl	190bc <argp_parse@@Base+0x19a8>
   195f8:	ldr	r2, [r4, #28]
   195fc:	ldr	r0, [r4, #24]
   19600:	cmp	r2, r0
   19604:	bls	19618 <argp_parse@@Base+0x1f04>
   19608:	ldr	r3, [r4]
   1960c:	sub	r2, r2, r0
   19610:	mov	r1, #1
   19614:	bl	11280 <fwrite_unlocked@plt>
   19618:	ldr	r0, [r4, #24]
   1961c:	bl	183ec <argp_parse@@Base+0xcd8>
   19620:	mov	r0, r4
   19624:	bl	183ec <argp_parse@@Base+0xcd8>
   19628:	ldr	r4, [sp]
   1962c:	add	sp, sp, #4
   19630:	pop	{pc}		; (ldr pc, [sp], #4)
   19634:	ldr	r3, [r0, #32]
   19638:	ldr	r2, [r0, #28]
   1963c:	sub	r3, r3, r2
   19640:	cmp	r3, r1
   19644:	bcc	19650 <argp_parse@@Base+0x1f3c>
   19648:	mov	r0, #1
   1964c:	bx	lr
   19650:	strd	r4, [sp, #-16]!
   19654:	str	r6, [sp, #8]
   19658:	str	lr, [sp, #12]
   1965c:	mov	r5, r1
   19660:	mov	r4, r0
   19664:	bl	190bc <argp_parse@@Base+0x19a8>
   19668:	ldr	r0, [r4, #24]
   1966c:	ldr	r2, [r4, #28]
   19670:	ldr	r3, [r4]
   19674:	sub	r2, r2, r0
   19678:	mov	r1, #1
   1967c:	bl	11280 <fwrite_unlocked@plt>
   19680:	ldr	r2, [r4, #28]
   19684:	ldr	r3, [r4, #24]
   19688:	sub	r1, r2, r3
   1968c:	cmp	r1, r0
   19690:	bne	196d0 <argp_parse@@Base+0x1fbc>
   19694:	str	r3, [r4, #28]
   19698:	mov	r2, #0
   1969c:	str	r2, [r4, #16]
   196a0:	ldr	r1, [r4, #32]
   196a4:	sub	r1, r1, r3
   196a8:	cmp	r1, r5
   196ac:	movcs	r0, #1
   196b0:	bcs	196f8 <argp_parse@@Base+0x1fe4>
   196b4:	adds	r5, r1, r5
   196b8:	bcc	19708 <argp_parse@@Base+0x1ff4>
   196bc:	bl	113dc <__errno_location@plt>
   196c0:	mov	r3, #12
   196c4:	str	r3, [r0]
   196c8:	mov	r0, #0
   196cc:	b	196f8 <argp_parse@@Base+0x1fe4>
   196d0:	sub	r2, r2, r0
   196d4:	str	r2, [r4, #28]
   196d8:	ldr	r1, [r4, #16]
   196dc:	sub	r1, r1, r0
   196e0:	str	r1, [r4, #16]
   196e4:	sub	r2, r2, r3
   196e8:	add	r1, r3, r0
   196ec:	mov	r0, r3
   196f0:	bl	11220 <memmove@plt>
   196f4:	mov	r0, #0
   196f8:	ldrd	r4, [sp]
   196fc:	ldr	r6, [sp, #8]
   19700:	add	sp, sp, #12
   19704:	pop	{pc}		; (ldr pc, [sp], #4)
   19708:	mov	r1, r5
   1970c:	mov	r0, r3
   19710:	bl	18fc8 <argp_parse@@Base+0x18b4>
   19714:	cmp	r0, #0
   19718:	beq	196bc <argp_parse@@Base+0x1fa8>
   1971c:	str	r0, [r4, #24]
   19720:	add	r5, r0, r5
   19724:	str	r5, [r4, #32]
   19728:	str	r0, [r4, #28]
   1972c:	mov	r0, #1
   19730:	b	196f8 <argp_parse@@Base+0x1fe4>
   19734:	push	{r1, r2, r3}
   19738:	strd	r4, [sp, #-16]!
   1973c:	str	r6, [sp, #8]
   19740:	str	lr, [sp, #12]
   19744:	sub	sp, sp, #12
   19748:	mov	r5, r0
   1974c:	mov	r1, #150	; 0x96
   19750:	add	r6, sp, #32
   19754:	mov	r0, r5
   19758:	bl	19634 <argp_parse@@Base+0x1f20>
   1975c:	cmp	r0, #0
   19760:	beq	19794 <argp_parse@@Base+0x2080>
   19764:	str	r6, [sp, #4]
   19768:	ldr	r0, [r5, #28]
   1976c:	ldr	r4, [r5, #32]
   19770:	sub	r4, r4, r0
   19774:	mov	r3, r6
   19778:	ldr	r2, [sp, #28]
   1977c:	mov	r1, r4
   19780:	bl	114c0 <vsnprintf@plt>
   19784:	cmp	r0, r4
   19788:	bcc	197b4 <argp_parse@@Base+0x20a0>
   1978c:	add	r1, r0, #1
   19790:	b	19754 <argp_parse@@Base+0x2040>
   19794:	mvn	r0, #0
   19798:	add	sp, sp, #12
   1979c:	ldrd	r4, [sp]
   197a0:	ldr	r6, [sp, #8]
   197a4:	ldr	lr, [sp, #12]
   197a8:	add	sp, sp, #16
   197ac:	add	sp, sp, #12
   197b0:	bx	lr
   197b4:	ldr	r2, [r5, #28]
   197b8:	add	r3, r2, r0
   197bc:	str	r3, [r5, #28]
   197c0:	b	19798 <argp_parse@@Base+0x2084>
   197c4:	strd	r4, [sp, #-28]!	; 0xffffffe4
   197c8:	strd	r6, [sp, #8]
   197cc:	strd	r8, [sp, #16]
   197d0:	str	lr, [sp, #24]
   197d4:	ldr	r5, [r1, #28]
   197d8:	ldr	r6, [r1, #32]
   197dc:	ldr	r8, [r1]
   197e0:	add	r7, r0, r6, lsl #2
   197e4:	b	19814 <argp_parse@@Base+0x2100>
   197e8:	add	r3, r0, r5, lsl #2
   197ec:	add	r4, r9, r5
   197f0:	add	r4, r0, r4, lsl #2
   197f4:	mov	r2, r7
   197f8:	ldr	ip, [r3]
   197fc:	ldr	lr, [r2]
   19800:	str	lr, [r3], #4
   19804:	str	ip, [r2], #4
   19808:	cmp	r3, r4
   1980c:	bne	197f8 <argp_parse@@Base+0x20e4>
   19810:	add	r5, r5, r9
   19814:	cmp	r8, r6
   19818:	movle	r3, #0
   1981c:	movgt	r3, #1
   19820:	cmp	r5, r6
   19824:	movge	r3, #0
   19828:	cmp	r3, #0
   1982c:	beq	19870 <argp_parse@@Base+0x215c>
   19830:	sub	r9, r8, r6
   19834:	sub	r3, r6, r5
   19838:	cmp	r9, r3
   1983c:	ble	197e8 <argp_parse@@Base+0x20d4>
   19840:	add	r2, r0, r5, lsl #2
   19844:	sub	r9, r8, r3
   19848:	add	r3, r0, r9, lsl #2
   1984c:	add	r4, r0, r8, lsl #2
   19850:	ldr	ip, [r2]
   19854:	ldr	lr, [r3]
   19858:	str	lr, [r2], #4
   1985c:	str	ip, [r3], #4
   19860:	cmp	r3, r4
   19864:	bne	19850 <argp_parse@@Base+0x213c>
   19868:	mov	r8, r9
   1986c:	b	19814 <argp_parse@@Base+0x2100>
   19870:	ldr	r0, [r1]
   19874:	ldr	r3, [r1, #32]
   19878:	sub	r2, r0, r3
   1987c:	ldr	r3, [r1, #28]
   19880:	add	r3, r3, r2
   19884:	str	r3, [r1, #28]
   19888:	str	r0, [r1, #32]
   1988c:	ldrd	r4, [sp]
   19890:	ldrd	r6, [sp, #8]
   19894:	ldrd	r8, [sp, #16]
   19898:	add	sp, sp, #24
   1989c:	pop	{pc}		; (ldr pc, [sp], #4)
   198a0:	strd	r4, [sp, #-36]!	; 0xffffffdc
   198a4:	strd	r6, [sp, #8]
   198a8:	strd	r8, [sp, #16]
   198ac:	strd	sl, [sp, #24]
   198b0:	str	lr, [sp, #32]
   198b4:	sub	sp, sp, #52	; 0x34
   198b8:	str	r0, [sp, #32]
   198bc:	str	r1, [sp, #20]
   198c0:	str	r2, [sp, #28]
   198c4:	str	r3, [sp, #16]
   198c8:	ldr	fp, [sp, #96]	; 0x60
   198cc:	ldr	r9, [fp, #20]
   198d0:	ldrb	r3, [r9]
   198d4:	cmp	r3, #0
   198d8:	cmpne	r3, #61	; 0x3d
   198dc:	beq	19914 <argp_parse@@Base+0x2200>
   198e0:	mov	r8, r9
   198e4:	ldrb	r3, [r8, #1]!
   198e8:	cmp	r3, #0
   198ec:	cmpne	r3, #61	; 0x3d
   198f0:	bne	198e4 <argp_parse@@Base+0x21d0>
   198f4:	sub	r7, r8, r9
   198f8:	ldr	r5, [sp, #16]
   198fc:	ldr	sl, [r5]
   19900:	cmp	sl, #0
   19904:	beq	19dd8 <argp_parse@@Base+0x26c4>
   19908:	mov	r4, sl
   1990c:	mov	r6, #0
   19910:	b	1992c <argp_parse@@Base+0x2218>
   19914:	mov	r8, r9
   19918:	b	198f4 <argp_parse@@Base+0x21e0>
   1991c:	add	r6, r6, #1
   19920:	ldr	r4, [r5, #16]!
   19924:	cmp	r4, #0
   19928:	beq	19ddc <argp_parse@@Base+0x26c8>
   1992c:	str	r5, [sp, #12]
   19930:	mov	r2, r7
   19934:	mov	r1, r9
   19938:	mov	r0, r4
   1993c:	bl	11508 <strncmp@plt>
   19940:	cmp	r0, #0
   19944:	bne	1991c <argp_parse@@Base+0x2208>
   19948:	mov	r0, r4
   1994c:	bl	113b8 <strlen@plt>
   19950:	cmp	r0, r7
   19954:	bne	1991c <argp_parse@@Base+0x2208>
   19958:	cmp	r5, #0
   1995c:	beq	19de4 <argp_parse@@Base+0x26d0>
   19960:	ldr	r3, [fp]
   19964:	add	r2, r3, #1
   19968:	str	r2, [fp]
   1996c:	mov	r1, #0
   19970:	str	r1, [fp, #20]
   19974:	ldrb	r1, [r8]
   19978:	cmp	r1, #0
   1997c:	beq	19d2c <argp_parse@@Base+0x2618>
   19980:	ldr	r3, [sp, #12]
   19984:	ldr	r3, [r3, #4]
   19988:	cmp	r3, #0
   1998c:	beq	19cd8 <argp_parse@@Base+0x25c4>
   19990:	add	r8, r8, #1
   19994:	str	r8, [fp, #12]
   19998:	ldr	r3, [sp, #88]	; 0x58
   1999c:	cmp	r3, #0
   199a0:	strne	r6, [r3]
   199a4:	ldr	r2, [sp, #12]
   199a8:	ldr	r3, [r2, #8]
   199ac:	cmp	r3, #0
   199b0:	beq	19dc4 <argp_parse@@Base+0x26b0>
   199b4:	ldr	r2, [r2, #12]
   199b8:	str	r2, [r3]
   199bc:	mov	r0, #0
   199c0:	add	sp, sp, #52	; 0x34
   199c4:	ldrd	r4, [sp]
   199c8:	ldrd	r6, [sp, #8]
   199cc:	ldrd	r8, [sp, #16]
   199d0:	ldrd	sl, [sp, #24]
   199d4:	add	sp, sp, #32
   199d8:	pop	{pc}		; (ldr pc, [sp], #4)
   199dc:	ldr	r2, [sl, #8]
   199e0:	ldr	r3, [r9, #8]
   199e4:	cmp	r2, r3
   199e8:	bne	19aa8 <argp_parse@@Base+0x2394>
   199ec:	ldr	r2, [sl, #12]
   199f0:	ldr	r3, [r9, #12]
   199f4:	cmp	r2, r3
   199f8:	bne	19aa8 <argp_parse@@Base+0x2394>
   199fc:	b	19a60 <argp_parse@@Base+0x234c>
   19a00:	mov	r0, r6
   19a04:	bl	18f8c <argp_parse@@Base+0x1878>
   19a08:	subs	r3, r0, #0
   19a0c:	str	r3, [sp, #24]
   19a10:	beq	19ad8 <argp_parse@@Base+0x23c4>
   19a14:	mov	r2, r6
   19a18:	mov	r1, #0
   19a1c:	ldr	r7, [sp, #24]
   19a20:	mov	r0, r7
   19a24:	bl	1140c <memset@plt>
   19a28:	ldr	r2, [sp, #36]	; 0x24
   19a2c:	mov	r1, #1
   19a30:	strb	r1, [r7, r2]
   19a34:	ldr	r3, [sp, #44]	; 0x2c
   19a38:	str	r3, [sp, #40]	; 0x28
   19a3c:	b	19ac8 <argp_parse@@Base+0x23b4>
   19a40:	ldr	r3, [sp, #24]
   19a44:	cmp	r3, #0
   19a48:	moveq	r5, #1
   19a4c:	beq	19a60 <argp_parse@@Base+0x234c>
   19a50:	mov	r5, #1
   19a54:	b	19ac8 <argp_parse@@Base+0x23b4>
   19a58:	str	r4, [sp, #36]	; 0x24
   19a5c:	mov	sl, r9
   19a60:	add	r4, r4, #1
   19a64:	ldr	r0, [r9, #16]!
   19a68:	cmp	r0, #0
   19a6c:	beq	19ae0 <argp_parse@@Base+0x23cc>
   19a70:	ldr	r2, [sp, #12]
   19a74:	ldr	r1, [fp, #20]
   19a78:	bl	11508 <strncmp@plt>
   19a7c:	cmp	r0, #0
   19a80:	bne	19a60 <argp_parse@@Base+0x234c>
   19a84:	cmp	sl, #0
   19a88:	beq	19a58 <argp_parse@@Base+0x2344>
   19a8c:	ldr	r3, [sp, #92]	; 0x5c
   19a90:	cmp	r3, #0
   19a94:	bne	19aa8 <argp_parse@@Base+0x2394>
   19a98:	ldr	r2, [sl, #4]
   19a9c:	ldr	r3, [r9, #4]
   19aa0:	cmp	r2, r3
   19aa4:	beq	199dc <argp_parse@@Base+0x22c8>
   19aa8:	cmp	r5, #0
   19aac:	bne	19a60 <argp_parse@@Base+0x234c>
   19ab0:	ldr	r3, [sp, #100]	; 0x64
   19ab4:	cmp	r3, #0
   19ab8:	beq	19a40 <argp_parse@@Base+0x232c>
   19abc:	ldr	r3, [sp, #24]
   19ac0:	cmp	r3, #0
   19ac4:	beq	19a00 <argp_parse@@Base+0x22ec>
   19ac8:	ldr	r3, [sp, #24]
   19acc:	mov	r2, #1
   19ad0:	strb	r2, [r3, r4]
   19ad4:	b	19a60 <argp_parse@@Base+0x234c>
   19ad8:	mov	r5, #1
   19adc:	b	19a60 <argp_parse@@Base+0x234c>
   19ae0:	str	sl, [sp, #12]
   19ae4:	ldr	r3, [sp, #24]
   19ae8:	orrs	r3, r3, r5
   19aec:	bne	19b64 <argp_parse@@Base+0x2450>
   19af0:	ldr	r3, [sp, #12]
   19af4:	cmp	r3, #0
   19af8:	bne	19cd0 <argp_parse@@Base+0x25bc>
   19afc:	ldr	r3, [sp, #92]	; 0x5c
   19b00:	cmp	r3, #0
   19b04:	beq	19b38 <argp_parse@@Base+0x2424>
   19b08:	ldr	r3, [fp]
   19b0c:	ldr	r2, [sp, #20]
   19b10:	ldr	r3, [r2, r3, lsl #2]
   19b14:	ldrb	r3, [r3, #1]
   19b18:	cmp	r3, #45	; 0x2d
   19b1c:	beq	19b38 <argp_parse@@Base+0x2424>
   19b20:	ldr	r3, [fp, #20]
   19b24:	ldrb	r1, [r3]
   19b28:	ldr	r0, [sp, #28]
   19b2c:	bl	113c4 <strchr@plt>
   19b30:	cmp	r0, #0
   19b34:	bne	19dd0 <argp_parse@@Base+0x26bc>
   19b38:	ldr	r3, [sp, #100]	; 0x64
   19b3c:	cmp	r3, #0
   19b40:	bne	19ca0 <argp_parse@@Base+0x258c>
   19b44:	mov	r2, #0
   19b48:	str	r2, [fp, #20]
   19b4c:	ldr	r3, [fp]
   19b50:	add	r3, r3, #1
   19b54:	str	r3, [fp]
   19b58:	str	r2, [fp, #8]
   19b5c:	mov	r0, #63	; 0x3f
   19b60:	b	199c0 <argp_parse@@Base+0x22ac>
   19b64:	ldr	r3, [sp, #100]	; 0x64
   19b68:	cmp	r3, #0
   19b6c:	beq	19ba4 <argp_parse@@Base+0x2490>
   19b70:	cmp	r5, #0
   19b74:	beq	19be0 <argp_parse@@Base+0x24cc>
   19b78:	movw	r0, #50256	; 0xc450
   19b7c:	movt	r0, #2
   19b80:	ldr	r3, [fp, #20]
   19b84:	str	r3, [sp]
   19b88:	ldr	r3, [sp, #104]	; 0x68
   19b8c:	ldr	r2, [sp, #20]
   19b90:	ldr	r2, [r2]
   19b94:	movw	r1, #46436	; 0xb564
   19b98:	movt	r1, #1
   19b9c:	ldr	r0, [r0]
   19ba0:	bl	113d0 <fprintf@plt>
   19ba4:	ldr	r3, [sp, #40]	; 0x28
   19ba8:	cmp	r3, #0
   19bac:	bne	19c94 <argp_parse@@Base+0x2580>
   19bb0:	ldr	r4, [fp, #20]
   19bb4:	mov	r0, r4
   19bb8:	bl	113b8 <strlen@plt>
   19bbc:	add	r0, r4, r0
   19bc0:	str	r0, [fp, #20]
   19bc4:	ldr	r3, [fp]
   19bc8:	add	r3, r3, #1
   19bcc:	str	r3, [fp]
   19bd0:	mov	r3, #0
   19bd4:	str	r3, [fp, #8]
   19bd8:	mov	r0, #63	; 0x3f
   19bdc:	b	199c0 <argp_parse@@Base+0x22ac>
   19be0:	movw	r4, #50256	; 0xc450
   19be4:	movt	r4, #2
   19be8:	ldr	r0, [r4]
   19bec:	bl	114b4 <flockfile@plt>
   19bf0:	ldr	r3, [fp, #20]
   19bf4:	str	r3, [sp]
   19bf8:	ldr	r3, [sp, #104]	; 0x68
   19bfc:	ldr	r2, [sp, #20]
   19c00:	ldr	r2, [r2]
   19c04:	movw	r1, #46468	; 0xb584
   19c08:	movt	r1, #1
   19c0c:	ldr	r0, [r4]
   19c10:	bl	113d0 <fprintf@plt>
   19c14:	cmp	r6, #0
   19c18:	ble	19c74 <argp_parse@@Base+0x2560>
   19c1c:	ldr	r2, [sp, #24]
   19c20:	sub	r4, r2, #1
   19c24:	sub	r3, r6, #1
   19c28:	add	r8, r2, r3
   19c2c:	movw	r7, #46516	; 0xb5b4
   19c30:	movt	r7, #1
   19c34:	movw	r6, #50256	; 0xc450
   19c38:	movt	r6, #2
   19c3c:	ldr	r9, [sp, #16]
   19c40:	b	19c50 <argp_parse@@Base+0x253c>
   19c44:	add	r5, r5, #1
   19c48:	cmp	r8, r4
   19c4c:	beq	19c74 <argp_parse@@Base+0x2560>
   19c50:	ldrb	r3, [r4, #1]!
   19c54:	cmp	r3, #0
   19c58:	beq	19c44 <argp_parse@@Base+0x2530>
   19c5c:	ldr	r3, [r9, r5, lsl #4]
   19c60:	ldr	r2, [sp, #104]	; 0x68
   19c64:	mov	r1, r7
   19c68:	ldr	r0, [r6]
   19c6c:	bl	113d0 <fprintf@plt>
   19c70:	b	19c44 <argp_parse@@Base+0x2530>
   19c74:	movw	r4, #50256	; 0xc450
   19c78:	movt	r4, #2
   19c7c:	ldr	r1, [r4]
   19c80:	mov	r0, #10
   19c84:	bl	1149c <fputc@plt>
   19c88:	ldr	r0, [r4]
   19c8c:	bl	112c8 <funlockfile@plt>
   19c90:	b	19ba4 <argp_parse@@Base+0x2490>
   19c94:	ldr	r0, [sp, #24]
   19c98:	bl	183ec <argp_parse@@Base+0xcd8>
   19c9c:	b	19bb0 <argp_parse@@Base+0x249c>
   19ca0:	movw	r0, #50256	; 0xc450
   19ca4:	movt	r0, #2
   19ca8:	ldr	r3, [fp, #20]
   19cac:	str	r3, [sp]
   19cb0:	ldr	r3, [sp, #104]	; 0x68
   19cb4:	ldr	r2, [sp, #20]
   19cb8:	ldr	r2, [r2]
   19cbc:	movw	r1, #46524	; 0xb5bc
   19cc0:	movt	r1, #1
   19cc4:	ldr	r0, [r0]
   19cc8:	bl	113d0 <fprintf@plt>
   19ccc:	b	19b44 <argp_parse@@Base+0x2430>
   19cd0:	ldr	r6, [sp, #36]	; 0x24
   19cd4:	b	19960 <argp_parse@@Base+0x224c>
   19cd8:	ldr	r3, [sp, #100]	; 0x64
   19cdc:	cmp	r3, #0
   19ce0:	bne	19cf8 <argp_parse@@Base+0x25e4>
   19ce4:	ldr	r3, [sp, #12]
   19ce8:	ldr	r3, [r3, #12]
   19cec:	str	r3, [fp, #8]
   19cf0:	mov	r0, #63	; 0x3f
   19cf4:	b	199c0 <argp_parse@@Base+0x22ac>
   19cf8:	movw	r0, #50256	; 0xc450
   19cfc:	movt	r0, #2
   19d00:	ldr	r3, [sp, #12]
   19d04:	ldr	r3, [r3]
   19d08:	str	r3, [sp]
   19d0c:	ldr	r3, [sp, #104]	; 0x68
   19d10:	ldr	r2, [sp, #20]
   19d14:	ldr	r2, [r2]
   19d18:	movw	r1, #46556	; 0xb5dc
   19d1c:	movt	r1, #1
   19d20:	ldr	r0, [r0]
   19d24:	bl	113d0 <fprintf@plt>
   19d28:	b	19ce4 <argp_parse@@Base+0x25d0>
   19d2c:	ldr	r1, [sp, #12]
   19d30:	ldr	r1, [r1, #4]
   19d34:	cmp	r1, #1
   19d38:	bne	19998 <argp_parse@@Base+0x2284>
   19d3c:	ldr	r1, [sp, #32]
   19d40:	cmp	r2, r1
   19d44:	bge	19d60 <argp_parse@@Base+0x264c>
   19d48:	add	r3, r3, #2
   19d4c:	str	r3, [fp]
   19d50:	ldr	r3, [sp, #20]
   19d54:	ldr	r3, [r3, r2, lsl #2]
   19d58:	str	r3, [fp, #12]
   19d5c:	b	19998 <argp_parse@@Base+0x2284>
   19d60:	ldr	r3, [sp, #100]	; 0x64
   19d64:	cmp	r3, #0
   19d68:	bne	19d90 <argp_parse@@Base+0x267c>
   19d6c:	ldr	r3, [sp, #12]
   19d70:	ldr	r3, [r3, #12]
   19d74:	str	r3, [fp, #8]
   19d78:	ldr	r3, [sp, #28]
   19d7c:	ldrb	r3, [r3]
   19d80:	cmp	r3, #58	; 0x3a
   19d84:	moveq	r0, #58	; 0x3a
   19d88:	movne	r0, #63	; 0x3f
   19d8c:	b	199c0 <argp_parse@@Base+0x22ac>
   19d90:	movw	r0, #50256	; 0xc450
   19d94:	movt	r0, #2
   19d98:	ldr	r3, [sp, #12]
   19d9c:	ldr	r3, [r3]
   19da0:	str	r3, [sp]
   19da4:	ldr	r3, [sp, #104]	; 0x68
   19da8:	ldr	r2, [sp, #20]
   19dac:	ldr	r2, [r2]
   19db0:	movw	r1, #46604	; 0xb60c
   19db4:	movt	r1, #1
   19db8:	ldr	r0, [r0]
   19dbc:	bl	113d0 <fprintf@plt>
   19dc0:	b	19d6c <argp_parse@@Base+0x2658>
   19dc4:	ldr	r3, [sp, #12]
   19dc8:	ldr	r0, [r3, #12]
   19dcc:	b	199c0 <argp_parse@@Base+0x22ac>
   19dd0:	mvn	r0, #0
   19dd4:	b	199c0 <argp_parse@@Base+0x22ac>
   19dd8:	mov	r6, #0
   19ddc:	cmp	sl, #0
   19de0:	beq	19afc <argp_parse@@Base+0x23e8>
   19de4:	ldr	r9, [sp, #16]
   19de8:	mvn	r3, #0
   19dec:	str	r3, [sp, #36]	; 0x24
   19df0:	mov	r5, #0
   19df4:	str	r5, [sp, #40]	; 0x28
   19df8:	str	r5, [sp, #24]
   19dfc:	mov	r4, r5
   19e00:	mov	r3, #1
   19e04:	str	r3, [sp, #44]	; 0x2c
   19e08:	mov	r0, sl
   19e0c:	mov	sl, r5
   19e10:	str	r7, [sp, #12]
   19e14:	b	19a70 <argp_parse@@Base+0x235c>
   19e18:	strd	r4, [sp, #-36]!	; 0xffffffdc
   19e1c:	strd	r6, [sp, #8]
   19e20:	strd	r8, [sp, #16]
   19e24:	strd	sl, [sp, #24]
   19e28:	str	lr, [sp, #32]
   19e2c:	sub	sp, sp, #36	; 0x24
   19e30:	str	r3, [sp, #24]
   19e34:	ldr	r4, [sp, #80]	; 0x50
   19e38:	ldr	r8, [r4, #4]
   19e3c:	subs	r5, r0, #0
   19e40:	ble	1a37c <argp_parse@@Base+0x2c68>
   19e44:	mov	r9, r1
   19e48:	mov	r6, r2
   19e4c:	mov	r3, #0
   19e50:	str	r3, [r4, #12]
   19e54:	ldr	r3, [r4]
   19e58:	cmp	r3, #0
   19e5c:	beq	19e80 <argp_parse@@Base+0x276c>
   19e60:	ldr	r3, [r4, #16]
   19e64:	cmp	r3, #0
   19e68:	beq	19e88 <argp_parse@@Base+0x2774>
   19e6c:	ldrb	r3, [r2]
   19e70:	sub	r3, r3, #43	; 0x2b
   19e74:	tst	r3, #253	; 0xfd
   19e78:	addeq	r6, r2, #1
   19e7c:	b	19ee4 <argp_parse@@Base+0x27d0>
   19e80:	mov	r3, #1
   19e84:	str	r3, [r4]
   19e88:	ldr	r3, [r4]
   19e8c:	str	r3, [r4, #32]
   19e90:	str	r3, [r4, #28]
   19e94:	mov	r3, #0
   19e98:	str	r3, [r4, #20]
   19e9c:	ldrb	r3, [r6]
   19ea0:	cmp	r3, #45	; 0x2d
   19ea4:	moveq	r3, #2
   19ea8:	streq	r3, [r4, #24]
   19eac:	addeq	r6, r6, #1
   19eb0:	beq	19edc <argp_parse@@Base+0x27c8>
   19eb4:	cmp	r3, #43	; 0x2b
   19eb8:	moveq	r3, #0
   19ebc:	streq	r3, [r4, #24]
   19ec0:	addeq	r6, r6, #1
   19ec4:	beq	19edc <argp_parse@@Base+0x27c8>
   19ec8:	ldr	r3, [sp, #84]	; 0x54
   19ecc:	cmp	r3, #0
   19ed0:	beq	19fa4 <argp_parse@@Base+0x2890>
   19ed4:	mov	r3, #0
   19ed8:	str	r3, [r4, #24]
   19edc:	mov	r3, #1
   19ee0:	str	r3, [r4, #16]
   19ee4:	ldrb	r3, [r6]
   19ee8:	cmp	r3, #58	; 0x3a
   19eec:	moveq	r8, #0
   19ef0:	ldr	r3, [r4, #20]
   19ef4:	cmp	r3, #0
   19ef8:	beq	19f08 <argp_parse@@Base+0x27f4>
   19efc:	ldrb	r3, [r3]
   19f00:	cmp	r3, #0
   19f04:	bne	1a0a8 <argp_parse@@Base+0x2994>
   19f08:	ldr	r3, [r4]
   19f0c:	ldr	r2, [r4, #32]
   19f10:	cmp	r2, r3
   19f14:	strgt	r3, [r4, #32]
   19f18:	ldr	r2, [r4, #28]
   19f1c:	cmp	r3, r2
   19f20:	strlt	r3, [r4, #28]
   19f24:	ldr	r2, [r4, #24]
   19f28:	cmp	r2, #1
   19f2c:	beq	19fc4 <argp_parse@@Base+0x28b0>
   19f30:	ldr	r7, [r4]
   19f34:	cmp	r7, r5
   19f38:	beq	19f84 <argp_parse@@Base+0x2870>
   19f3c:	ldr	sl, [r9, r7, lsl #2]
   19f40:	movw	r1, #45240	; 0xb0b8
   19f44:	movt	r1, #1
   19f48:	mov	r0, sl
   19f4c:	bl	111d8 <strcmp@plt>
   19f50:	cmp	r0, #0
   19f54:	bne	1a38c <argp_parse@@Base+0x2c78>
   19f58:	add	r7, r7, #1
   19f5c:	str	r7, [r4]
   19f60:	ldr	r2, [r4, #28]
   19f64:	ldr	r3, [r4, #32]
   19f68:	cmp	r2, r3
   19f6c:	cmpne	r7, r3
   19f70:	bne	1a040 <argp_parse@@Base+0x292c>
   19f74:	cmp	r2, r3
   19f78:	streq	r7, [r4, #28]
   19f7c:	str	r5, [r4, #32]
   19f80:	str	r5, [r4]
   19f84:	ldr	r3, [r4, #28]
   19f88:	ldr	r2, [r4, #32]
   19f8c:	cmp	r3, r2
   19f90:	mvneq	r0, #0
   19f94:	beq	1a3b8 <argp_parse@@Base+0x2ca4>
   19f98:	str	r3, [r4]
   19f9c:	mvn	r0, #0
   19fa0:	b	1a3b8 <argp_parse@@Base+0x2ca4>
   19fa4:	movw	r0, #46644	; 0xb634
   19fa8:	movt	r0, #1
   19fac:	bl	11334 <getenv@plt>
   19fb0:	cmp	r0, #0
   19fb4:	bne	19ed4 <argp_parse@@Base+0x27c0>
   19fb8:	mov	r3, #1
   19fbc:	str	r3, [r4, #24]
   19fc0:	b	19edc <argp_parse@@Base+0x27c8>
   19fc4:	ldr	r2, [r4, #32]
   19fc8:	ldr	r1, [r4, #28]
   19fcc:	cmp	r1, r2
   19fd0:	cmpne	r3, r2
   19fd4:	bne	19ff4 <argp_parse@@Base+0x28e0>
   19fd8:	cmp	r3, r2
   19fdc:	strne	r3, [r4, #28]
   19fe0:	ldr	r3, [r4]
   19fe4:	cmp	r5, r3
   19fe8:	ble	1a038 <argp_parse@@Base+0x2924>
   19fec:	add	r1, r9, r3, lsl #2
   19ff0:	b	1a014 <argp_parse@@Base+0x2900>
   19ff4:	mov	r1, r4
   19ff8:	mov	r0, r9
   19ffc:	bl	197c4 <argp_parse@@Base+0x20b0>
   1a000:	b	19fe0 <argp_parse@@Base+0x28cc>
   1a004:	add	r3, r3, #1
   1a008:	str	r3, [r4]
   1a00c:	cmp	r3, r5
   1a010:	beq	1a034 <argp_parse@@Base+0x2920>
   1a014:	ldr	r2, [r1], #4
   1a018:	ldrb	r0, [r2]
   1a01c:	cmp	r0, #45	; 0x2d
   1a020:	bne	1a004 <argp_parse@@Base+0x28f0>
   1a024:	ldrb	r2, [r2, #1]
   1a028:	cmp	r2, #0
   1a02c:	beq	1a004 <argp_parse@@Base+0x28f0>
   1a030:	b	1a038 <argp_parse@@Base+0x2924>
   1a034:	mov	r3, r5
   1a038:	str	r3, [r4, #32]
   1a03c:	b	19f30 <argp_parse@@Base+0x281c>
   1a040:	mov	r1, r4
   1a044:	mov	r0, r9
   1a048:	bl	197c4 <argp_parse@@Base+0x20b0>
   1a04c:	b	19f7c <argp_parse@@Base+0x2868>
   1a050:	ldrb	r1, [sl, #1]
   1a054:	cmp	r1, #0
   1a058:	beq	1a398 <argp_parse@@Base+0x2c84>
   1a05c:	ldr	r3, [sp, #24]
   1a060:	cmp	r3, #0
   1a064:	beq	1a098 <argp_parse@@Base+0x2984>
   1a068:	cmp	r1, #45	; 0x2d
   1a06c:	beq	1a114 <argp_parse@@Base+0x2a00>
   1a070:	ldr	r3, [sp, #76]	; 0x4c
   1a074:	cmp	r3, #0
   1a078:	beq	1a098 <argp_parse@@Base+0x2984>
   1a07c:	ldrb	r3, [sl, #2]
   1a080:	cmp	r3, #0
   1a084:	bne	1a158 <argp_parse@@Base+0x2a44>
   1a088:	mov	r0, r6
   1a08c:	bl	113c4 <strchr@plt>
   1a090:	cmp	r0, #0
   1a094:	beq	1a158 <argp_parse@@Base+0x2a44>
   1a098:	ldr	r3, [r4]
   1a09c:	ldr	r3, [r9, r3, lsl #2]
   1a0a0:	add	r3, r3, #1
   1a0a4:	str	r3, [r4, #20]
   1a0a8:	ldr	sl, [r4, #20]
   1a0ac:	add	fp, sl, #1
   1a0b0:	str	fp, [r4, #20]
   1a0b4:	ldrb	r7, [sl]
   1a0b8:	str	r7, [sp, #28]
   1a0bc:	mov	r1, r7
   1a0c0:	mov	r0, r6
   1a0c4:	bl	113c4 <strchr@plt>
   1a0c8:	ldrb	r3, [sl, #1]
   1a0cc:	cmp	r3, #0
   1a0d0:	bne	1a0e0 <argp_parse@@Base+0x29cc>
   1a0d4:	ldr	r3, [r4]
   1a0d8:	add	r3, r3, #1
   1a0dc:	str	r3, [r4]
   1a0e0:	sub	r3, r7, #58	; 0x3a
   1a0e4:	uxtb	r3, r3
   1a0e8:	cmp	r0, #0
   1a0ec:	cmpne	r3, #1
   1a0f0:	bls	1a1a4 <argp_parse@@Base+0x2a90>
   1a0f4:	ldrb	r3, [r0]
   1a0f8:	cmp	r3, #87	; 0x57
   1a0fc:	beq	1a1e0 <argp_parse@@Base+0x2acc>
   1a100:	ldrb	r3, [r0, #1]
   1a104:	cmp	r3, #58	; 0x3a
   1a108:	beq	1a2b4 <argp_parse@@Base+0x2ba0>
   1a10c:	mov	r0, r7
   1a110:	b	1a3b8 <argp_parse@@Base+0x2ca4>
   1a114:	add	sl, sl, #2
   1a118:	str	sl, [r4, #20]
   1a11c:	movw	r3, #45240	; 0xb0b8
   1a120:	movt	r3, #1
   1a124:	str	r3, [sp, #16]
   1a128:	str	r8, [sp, #12]
   1a12c:	str	r4, [sp, #8]
   1a130:	ldr	r3, [sp, #76]	; 0x4c
   1a134:	str	r3, [sp, #4]
   1a138:	ldr	r3, [sp, #72]	; 0x48
   1a13c:	str	r3, [sp]
   1a140:	ldr	r3, [sp, #24]
   1a144:	mov	r2, r6
   1a148:	mov	r1, r9
   1a14c:	mov	r0, r5
   1a150:	bl	198a0 <argp_parse@@Base+0x218c>
   1a154:	b	1a3b8 <argp_parse@@Base+0x2ca4>
   1a158:	add	sl, sl, #1
   1a15c:	str	sl, [r4, #20]
   1a160:	movw	r3, #46660	; 0xb644
   1a164:	movt	r3, #1
   1a168:	str	r3, [sp, #16]
   1a16c:	str	r8, [sp, #12]
   1a170:	str	r4, [sp, #8]
   1a174:	ldr	r3, [sp, #76]	; 0x4c
   1a178:	str	r3, [sp, #4]
   1a17c:	ldr	r3, [sp, #72]	; 0x48
   1a180:	str	r3, [sp]
   1a184:	ldr	r3, [sp, #24]
   1a188:	mov	r2, r6
   1a18c:	mov	r1, r9
   1a190:	mov	r0, r5
   1a194:	bl	198a0 <argp_parse@@Base+0x218c>
   1a198:	cmn	r0, #1
   1a19c:	bne	1a3b8 <argp_parse@@Base+0x2ca4>
   1a1a0:	b	1a098 <argp_parse@@Base+0x2984>
   1a1a4:	cmp	r8, #0
   1a1a8:	bne	1a1bc <argp_parse@@Base+0x2aa8>
   1a1ac:	ldr	r3, [sp, #28]
   1a1b0:	str	r3, [r4, #8]
   1a1b4:	mov	r0, #63	; 0x3f
   1a1b8:	b	1a3b8 <argp_parse@@Base+0x2ca4>
   1a1bc:	movw	r0, #50256	; 0xc450
   1a1c0:	movt	r0, #2
   1a1c4:	ldr	r3, [sp, #28]
   1a1c8:	ldr	r2, [r9]
   1a1cc:	movw	r1, #46664	; 0xb648
   1a1d0:	movt	r1, #1
   1a1d4:	ldr	r0, [r0]
   1a1d8:	bl	113d0 <fprintf@plt>
   1a1dc:	b	1a1ac <argp_parse@@Base+0x2a98>
   1a1e0:	ldrb	r1, [r0, #1]
   1a1e4:	ldr	r2, [sp, #24]
   1a1e8:	cmp	r1, #59	; 0x3b
   1a1ec:	movne	r3, #0
   1a1f0:	moveq	r3, #1
   1a1f4:	cmp	r2, #0
   1a1f8:	moveq	r3, #0
   1a1fc:	cmp	r3, #0
   1a200:	beq	1a100 <argp_parse@@Base+0x29ec>
   1a204:	ldrb	r3, [sl, #1]
   1a208:	cmp	r3, #0
   1a20c:	strne	fp, [r4, #12]
   1a210:	bne	1a228 <argp_parse@@Base+0x2b14>
   1a214:	ldr	r3, [r4]
   1a218:	cmp	r3, r5
   1a21c:	beq	1a270 <argp_parse@@Base+0x2b5c>
   1a220:	ldr	r3, [r9, r3, lsl #2]
   1a224:	str	r3, [r4, #12]
   1a228:	ldr	r3, [r4, #12]
   1a22c:	str	r3, [r4, #20]
   1a230:	mov	r2, #0
   1a234:	str	r2, [r4, #12]
   1a238:	movw	r3, #46736	; 0xb690
   1a23c:	movt	r3, #1
   1a240:	str	r3, [sp, #16]
   1a244:	str	r8, [sp, #12]
   1a248:	str	r4, [sp, #8]
   1a24c:	str	r2, [sp, #4]
   1a250:	ldr	r3, [sp, #72]	; 0x48
   1a254:	str	r3, [sp]
   1a258:	ldr	r3, [sp, #24]
   1a25c:	mov	r2, r6
   1a260:	mov	r1, r9
   1a264:	mov	r0, r5
   1a268:	bl	198a0 <argp_parse@@Base+0x218c>
   1a26c:	b	1a3b8 <argp_parse@@Base+0x2ca4>
   1a270:	cmp	r8, #0
   1a274:	bne	1a290 <argp_parse@@Base+0x2b7c>
   1a278:	ldr	r3, [sp, #28]
   1a27c:	str	r3, [r4, #8]
   1a280:	ldrb	r0, [r6]
   1a284:	cmp	r0, #58	; 0x3a
   1a288:	movne	r0, #63	; 0x3f
   1a28c:	b	1a3b8 <argp_parse@@Base+0x2ca4>
   1a290:	movw	r0, #50256	; 0xc450
   1a294:	movt	r0, #2
   1a298:	ldr	r3, [sp, #28]
   1a29c:	ldr	r2, [r9]
   1a2a0:	movw	r1, #46692	; 0xb664
   1a2a4:	movt	r1, #1
   1a2a8:	ldr	r0, [r0]
   1a2ac:	bl	113d0 <fprintf@plt>
   1a2b0:	b	1a278 <argp_parse@@Base+0x2b64>
   1a2b4:	ldrb	r3, [r0, #2]
   1a2b8:	cmp	r3, #58	; 0x3a
   1a2bc:	beq	1a2e8 <argp_parse@@Base+0x2bd4>
   1a2c0:	ldrb	r3, [sl, #1]
   1a2c4:	cmp	r3, #0
   1a2c8:	beq	1a318 <argp_parse@@Base+0x2c04>
   1a2cc:	str	fp, [r4, #12]
   1a2d0:	ldr	r3, [r4]
   1a2d4:	add	r3, r3, #1
   1a2d8:	str	r3, [r4]
   1a2dc:	mov	r3, #0
   1a2e0:	str	r3, [r4, #20]
   1a2e4:	b	1a10c <argp_parse@@Base+0x29f8>
   1a2e8:	ldrb	r3, [sl, #1]
   1a2ec:	cmp	r3, #0
   1a2f0:	moveq	r3, #0
   1a2f4:	streq	r3, [r4, #12]
   1a2f8:	beq	1a30c <argp_parse@@Base+0x2bf8>
   1a2fc:	str	fp, [r4, #12]
   1a300:	ldr	r3, [r4]
   1a304:	add	r3, r3, #1
   1a308:	str	r3, [r4]
   1a30c:	mov	r3, #0
   1a310:	str	r3, [r4, #20]
   1a314:	b	1a10c <argp_parse@@Base+0x29f8>
   1a318:	ldr	r3, [r4]
   1a31c:	cmp	r3, r5
   1a320:	beq	1a338 <argp_parse@@Base+0x2c24>
   1a324:	add	r2, r3, #1
   1a328:	str	r2, [r4]
   1a32c:	ldr	r3, [r9, r3, lsl #2]
   1a330:	str	r3, [r4, #12]
   1a334:	b	1a2dc <argp_parse@@Base+0x2bc8>
   1a338:	cmp	r8, #0
   1a33c:	bne	1a358 <argp_parse@@Base+0x2c44>
   1a340:	ldr	r3, [sp, #28]
   1a344:	str	r3, [r4, #8]
   1a348:	ldrb	r7, [r6]
   1a34c:	cmp	r7, #58	; 0x3a
   1a350:	movne	r7, #63	; 0x3f
   1a354:	b	1a2dc <argp_parse@@Base+0x2bc8>
   1a358:	movw	r0, #50256	; 0xc450
   1a35c:	movt	r0, #2
   1a360:	ldr	r3, [sp, #28]
   1a364:	ldr	r2, [r9]
   1a368:	movw	r1, #46692	; 0xb664
   1a36c:	movt	r1, #1
   1a370:	ldr	r0, [r0]
   1a374:	bl	113d0 <fprintf@plt>
   1a378:	b	1a340 <argp_parse@@Base+0x2c2c>
   1a37c:	mvn	r0, #0
   1a380:	b	1a3b8 <argp_parse@@Base+0x2ca4>
   1a384:	mvn	r0, #0
   1a388:	b	1a3b8 <argp_parse@@Base+0x2ca4>
   1a38c:	ldrb	r3, [sl]
   1a390:	cmp	r3, #45	; 0x2d
   1a394:	beq	1a050 <argp_parse@@Base+0x293c>
   1a398:	ldr	r3, [r4, #24]
   1a39c:	cmp	r3, #0
   1a3a0:	beq	1a384 <argp_parse@@Base+0x2c70>
   1a3a4:	add	r3, r7, #1
   1a3a8:	str	r3, [r4]
   1a3ac:	ldr	r3, [r9, r7, lsl #2]
   1a3b0:	str	r3, [r4, #12]
   1a3b4:	mov	r0, #1
   1a3b8:	add	sp, sp, #36	; 0x24
   1a3bc:	ldrd	r4, [sp]
   1a3c0:	ldrd	r6, [sp, #8]
   1a3c4:	ldrd	r8, [sp, #16]
   1a3c8:	ldrd	sl, [sp, #24]
   1a3cc:	add	sp, sp, #32
   1a3d0:	pop	{pc}		; (ldr pc, [sp], #4)
   1a3d4:	strd	r4, [sp, #-12]!
   1a3d8:	str	lr, [sp, #8]
   1a3dc:	sub	sp, sp, #20
   1a3e0:	movw	r4, #50460	; 0xc51c
   1a3e4:	movt	r4, #2
   1a3e8:	movw	r5, #50232	; 0xc438
   1a3ec:	movt	r5, #2
   1a3f0:	ldr	ip, [r5]
   1a3f4:	str	ip, [r4]
   1a3f8:	ldr	ip, [r5, #4]
   1a3fc:	str	ip, [r4, #4]
   1a400:	ldr	ip, [sp, #40]	; 0x28
   1a404:	str	ip, [sp, #12]
   1a408:	str	r4, [sp, #8]
   1a40c:	ldr	ip, [sp, #36]	; 0x24
   1a410:	str	ip, [sp, #4]
   1a414:	ldr	ip, [sp, #32]
   1a418:	str	ip, [sp]
   1a41c:	bl	19e18 <argp_parse@@Base+0x2704>
   1a420:	ldr	r3, [r4]
   1a424:	str	r3, [r5]
   1a428:	movw	r3, #53188	; 0xcfc4
   1a42c:	movt	r3, #2
   1a430:	ldr	r2, [r4, #12]
   1a434:	str	r2, [r3]
   1a438:	ldr	r3, [r4, #8]
   1a43c:	str	r3, [r5, #8]
   1a440:	add	sp, sp, #20
   1a444:	ldrd	r4, [sp]
   1a448:	add	sp, sp, #8
   1a44c:	pop	{pc}		; (ldr pc, [sp], #4)
   1a450:	push	{lr}		; (str lr, [sp, #-4]!)
   1a454:	sub	sp, sp, #20
   1a458:	mov	r3, #1
   1a45c:	str	r3, [sp, #8]
   1a460:	mov	r3, #0
   1a464:	str	r3, [sp, #4]
   1a468:	str	r3, [sp]
   1a46c:	bl	1a3d4 <argp_parse@@Base+0x2cc0>
   1a470:	add	sp, sp, #20
   1a474:	pop	{pc}		; (ldr pc, [sp], #4)
   1a478:	str	r4, [sp, #-8]!
   1a47c:	str	lr, [sp, #4]
   1a480:	umull	r2, r3, r1, r2
   1a484:	cmp	r3, #0
   1a488:	bne	1a4a0 <argp_parse@@Base+0x2d8c>
   1a48c:	mov	r1, r2
   1a490:	bl	18fc8 <argp_parse@@Base+0x18b4>
   1a494:	ldr	r4, [sp]
   1a498:	add	sp, sp, #4
   1a49c:	pop	{pc}		; (ldr pc, [sp], #4)
   1a4a0:	bl	113dc <__errno_location@plt>
   1a4a4:	mov	r3, #12
   1a4a8:	str	r3, [r0]
   1a4ac:	mov	r0, #0
   1a4b0:	b	1a494 <argp_parse@@Base+0x2d80>
   1a4b4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1a4b8:	mov	r7, r0
   1a4bc:	ldr	r6, [pc, #72]	; 1a50c <argp_parse@@Base+0x2df8>
   1a4c0:	ldr	r5, [pc, #72]	; 1a510 <argp_parse@@Base+0x2dfc>
   1a4c4:	add	r6, pc, r6
   1a4c8:	add	r5, pc, r5
   1a4cc:	sub	r6, r6, r5
   1a4d0:	mov	r8, r1
   1a4d4:	mov	r9, r2
   1a4d8:	bl	11194 <fdopen@plt-0x20>
   1a4dc:	asrs	r6, r6, #2
   1a4e0:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1a4e4:	mov	r4, #0
   1a4e8:	add	r4, r4, #1
   1a4ec:	ldr	r3, [r5], #4
   1a4f0:	mov	r2, r9
   1a4f4:	mov	r1, r8
   1a4f8:	mov	r0, r7
   1a4fc:	blx	r3
   1a500:	cmp	r6, r4
   1a504:	bne	1a4e8 <argp_parse@@Base+0x2dd4>
   1a508:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1a50c:	andeq	r1, r1, r0, asr #20
   1a510:	andeq	r1, r1, r8, lsr sl
   1a514:	bx	lr

Disassembly of section .fini:

0001a518 <.fini>:
   1a518:	push	{r3, lr}
   1a51c:	pop	{r3, pc}
