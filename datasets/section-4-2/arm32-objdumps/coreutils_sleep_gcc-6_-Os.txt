
../repos/coreutils/src/sleep:     file format elf32-littlearm


Disassembly of section .init:

00010bc4 <.init>:
   10bc4:	push	{r3, lr}
   10bc8:	bl	110c4 <abort@plt+0x2a0>
   10bcc:	pop	{r3, pc}

Disassembly of section .plt:

00010bd0 <calloc@plt-0x14>:
   10bd0:	push	{lr}		; (str lr, [sp, #-4]!)
   10bd4:	ldr	lr, [pc, #4]	; 10be0 <calloc@plt-0x4>
   10bd8:	add	lr, pc, lr
   10bdc:	ldr	pc, [lr, #8]!
   10be0:	andeq	r4, r1, r0, lsr #8

00010be4 <calloc@plt>:
   10be4:	add	ip, pc, #0, 12
   10be8:	add	ip, ip, #20, 20	; 0x14000
   10bec:	ldr	pc, [ip, #1056]!	; 0x420

00010bf0 <fputs_unlocked@plt>:
   10bf0:	add	ip, pc, #0, 12
   10bf4:	add	ip, ip, #20, 20	; 0x14000
   10bf8:	ldr	pc, [ip, #1048]!	; 0x418

00010bfc <raise@plt>:
   10bfc:	add	ip, pc, #0, 12
   10c00:	add	ip, ip, #20, 20	; 0x14000
   10c04:	ldr	pc, [ip, #1040]!	; 0x410

00010c08 <strcmp@plt>:
   10c08:	add	ip, pc, #0, 12
   10c0c:	add	ip, ip, #20, 20	; 0x14000
   10c10:	ldr	pc, [ip, #1032]!	; 0x408

00010c14 <pause@plt>:
   10c14:	add	ip, pc, #0, 12
   10c18:	add	ip, ip, #20, 20	; 0x14000
   10c1c:	ldr	pc, [ip, #1024]!	; 0x400

00010c20 <fflush@plt>:
   10c20:	add	ip, pc, #0, 12
   10c24:	add	ip, ip, #20, 20	; 0x14000
   10c28:	ldr	pc, [ip, #1016]!	; 0x3f8

00010c2c <free@plt>:
   10c2c:	add	ip, pc, #0, 12
   10c30:	add	ip, ip, #20, 20	; 0x14000
   10c34:	ldr	pc, [ip, #1008]!	; 0x3f0

00010c38 <nanosleep@plt>:
   10c38:	add	ip, pc, #0, 12
   10c3c:	add	ip, ip, #20, 20	; 0x14000
   10c40:	ldr	pc, [ip, #1000]!	; 0x3e8

00010c44 <_exit@plt>:
   10c44:	add	ip, pc, #0, 12
   10c48:	add	ip, ip, #20, 20	; 0x14000
   10c4c:	ldr	pc, [ip, #992]!	; 0x3e0

00010c50 <memcpy@plt>:
   10c50:	add	ip, pc, #0, 12
   10c54:	add	ip, ip, #20, 20	; 0x14000
   10c58:	ldr	pc, [ip, #984]!	; 0x3d8

00010c5c <mbsinit@plt>:
   10c5c:	add	ip, pc, #0, 12
   10c60:	add	ip, ip, #20, 20	; 0x14000
   10c64:	ldr	pc, [ip, #976]!	; 0x3d0

00010c68 <memcmp@plt>:
   10c68:	add	ip, pc, #0, 12
   10c6c:	add	ip, ip, #20, 20	; 0x14000
   10c70:	ldr	pc, [ip, #968]!	; 0x3c8

00010c74 <fputc_unlocked@plt>:
   10c74:	add	ip, pc, #0, 12
   10c78:	add	ip, ip, #20, 20	; 0x14000
   10c7c:	ldr	pc, [ip, #960]!	; 0x3c0

00010c80 <dcgettext@plt>:
   10c80:	add	ip, pc, #0, 12
   10c84:	add	ip, ip, #20, 20	; 0x14000
   10c88:	ldr	pc, [ip, #952]!	; 0x3b8

00010c8c <realloc@plt>:
   10c8c:	add	ip, pc, #0, 12
   10c90:	add	ip, ip, #20, 20	; 0x14000
   10c94:	ldr	pc, [ip, #944]!	; 0x3b0

00010c98 <textdomain@plt>:
   10c98:	add	ip, pc, #0, 12
   10c9c:	add	ip, ip, #20, 20	; 0x14000
   10ca0:	ldr	pc, [ip, #936]!	; 0x3a8

00010ca4 <iswprint@plt>:
   10ca4:	add	ip, pc, #0, 12
   10ca8:	add	ip, ip, #20, 20	; 0x14000
   10cac:	ldr	pc, [ip, #928]!	; 0x3a0

00010cb0 <lseek64@plt>:
   10cb0:	add	ip, pc, #0, 12
   10cb4:	add	ip, ip, #20, 20	; 0x14000
   10cb8:	ldr	pc, [ip, #920]!	; 0x398

00010cbc <__ctype_get_mb_cur_max@plt>:
   10cbc:	add	ip, pc, #0, 12
   10cc0:	add	ip, ip, #20, 20	; 0x14000
   10cc4:	ldr	pc, [ip, #912]!	; 0x390

00010cc8 <__fpending@plt>:
   10cc8:	add	ip, pc, #0, 12
   10ccc:	add	ip, ip, #20, 20	; 0x14000
   10cd0:	ldr	pc, [ip, #904]!	; 0x388

00010cd4 <ferror_unlocked@plt>:
   10cd4:	add	ip, pc, #0, 12
   10cd8:	add	ip, ip, #20, 20	; 0x14000
   10cdc:	ldr	pc, [ip, #896]!	; 0x380

00010ce0 <mbrtowc@plt>:
   10ce0:	add	ip, pc, #0, 12
   10ce4:	add	ip, ip, #20, 20	; 0x14000
   10ce8:	ldr	pc, [ip, #888]!	; 0x378

00010cec <error@plt>:
   10cec:	add	ip, pc, #0, 12
   10cf0:	add	ip, ip, #20, 20	; 0x14000
   10cf4:	ldr	pc, [ip, #880]!	; 0x370

00010cf8 <malloc@plt>:
   10cf8:	add	ip, pc, #0, 12
   10cfc:	add	ip, ip, #20, 20	; 0x14000
   10d00:	ldr	pc, [ip, #872]!	; 0x368

00010d04 <__libc_start_main@plt>:
   10d04:	add	ip, pc, #0, 12
   10d08:	add	ip, ip, #20, 20	; 0x14000
   10d0c:	ldr	pc, [ip, #864]!	; 0x360

00010d10 <__freading@plt>:
   10d10:	add	ip, pc, #0, 12
   10d14:	add	ip, ip, #20, 20	; 0x14000
   10d18:	ldr	pc, [ip, #856]!	; 0x358

00010d1c <__gmon_start__@plt>:
   10d1c:	add	ip, pc, #0, 12
   10d20:	add	ip, ip, #20, 20	; 0x14000
   10d24:	ldr	pc, [ip, #848]!	; 0x350

00010d28 <getopt_long@plt>:
   10d28:	add	ip, pc, #0, 12
   10d2c:	add	ip, ip, #20, 20	; 0x14000
   10d30:	ldr	pc, [ip, #840]!	; 0x348

00010d34 <__ctype_b_loc@plt>:
   10d34:	add	ip, pc, #0, 12
   10d38:	add	ip, ip, #20, 20	; 0x14000
   10d3c:	ldr	pc, [ip, #832]!	; 0x340

00010d40 <exit@plt>:
   10d40:	add	ip, pc, #0, 12
   10d44:	add	ip, ip, #20, 20	; 0x14000
   10d48:	ldr	pc, [ip, #824]!	; 0x338

00010d4c <strlen@plt>:
   10d4c:	add	ip, pc, #0, 12
   10d50:	add	ip, ip, #20, 20	; 0x14000
   10d54:	ldr	pc, [ip, #816]!	; 0x330

00010d58 <__errno_location@plt>:
   10d58:	add	ip, pc, #0, 12
   10d5c:	add	ip, ip, #20, 20	; 0x14000
   10d60:	ldr	pc, [ip, #808]!	; 0x328

00010d64 <__cxa_atexit@plt>:
   10d64:	add	ip, pc, #0, 12
   10d68:	add	ip, ip, #20, 20	; 0x14000
   10d6c:	ldr	pc, [ip, #800]!	; 0x320

00010d70 <memset@plt>:
   10d70:	add	ip, pc, #0, 12
   10d74:	add	ip, ip, #20, 20	; 0x14000
   10d78:	ldr	pc, [ip, #792]!	; 0x318

00010d7c <__printf_chk@plt>:
   10d7c:	add	ip, pc, #0, 12
   10d80:	add	ip, ip, #20, 20	; 0x14000
   10d84:	ldr	pc, [ip, #784]!	; 0x310

00010d88 <strtod@plt>:
   10d88:	add	ip, pc, #0, 12
   10d8c:	add	ip, ip, #20, 20	; 0x14000
   10d90:	ldr	pc, [ip, #776]!	; 0x308

00010d94 <fileno@plt>:
   10d94:	add	ip, pc, #0, 12
   10d98:	add	ip, ip, #20, 20	; 0x14000
   10d9c:	ldr	pc, [ip, #768]!	; 0x300

00010da0 <__fprintf_chk@plt>:
   10da0:	add	ip, pc, #0, 12
   10da4:	add	ip, ip, #20, 20	; 0x14000
   10da8:	ldr	pc, [ip, #760]!	; 0x2f8

00010dac <fclose@plt>:
   10dac:	add	ip, pc, #0, 12
   10db0:	add	ip, ip, #20, 20	; 0x14000
   10db4:	ldr	pc, [ip, #752]!	; 0x2f0

00010db8 <fseeko64@plt>:
   10db8:	add	ip, pc, #0, 12
   10dbc:	add	ip, ip, #20, 20	; 0x14000
   10dc0:	ldr	pc, [ip, #744]!	; 0x2e8

00010dc4 <strtod_l@plt>:
   10dc4:	add	ip, pc, #0, 12
   10dc8:	add	ip, ip, #20, 20	; 0x14000
   10dcc:	ldr	pc, [ip, #736]!	; 0x2e0

00010dd0 <setlocale@plt>:
   10dd0:	add	ip, pc, #0, 12
   10dd4:	add	ip, ip, #20, 20	; 0x14000
   10dd8:	ldr	pc, [ip, #728]!	; 0x2d8

00010ddc <strrchr@plt>:
   10ddc:	add	ip, pc, #0, 12
   10de0:	add	ip, ip, #20, 20	; 0x14000
   10de4:	ldr	pc, [ip, #720]!	; 0x2d0

00010de8 <nl_langinfo@plt>:
   10de8:	add	ip, pc, #0, 12
   10dec:	add	ip, ip, #20, 20	; 0x14000
   10df0:	ldr	pc, [ip, #712]!	; 0x2c8

00010df4 <newlocale@plt>:
   10df4:	add	ip, pc, #0, 12
   10df8:	add	ip, ip, #20, 20	; 0x14000
   10dfc:	ldr	pc, [ip, #704]!	; 0x2c0

00010e00 <bindtextdomain@plt>:
   10e00:	add	ip, pc, #0, 12
   10e04:	add	ip, ip, #20, 20	; 0x14000
   10e08:	ldr	pc, [ip, #696]!	; 0x2b8

00010e0c <fputs@plt>:
   10e0c:	add	ip, pc, #0, 12
   10e10:	add	ip, ip, #20, 20	; 0x14000
   10e14:	ldr	pc, [ip, #688]!	; 0x2b0

00010e18 <strncmp@plt>:
   10e18:	add	ip, pc, #0, 12
   10e1c:	add	ip, ip, #20, 20	; 0x14000
   10e20:	ldr	pc, [ip, #680]!	; 0x2a8

00010e24 <abort@plt>:
   10e24:	add	ip, pc, #0, 12
   10e28:	add	ip, ip, #20, 20	; 0x14000
   10e2c:	ldr	pc, [ip, #672]!	; 0x2a0

Disassembly of section .text:

00010e30 <.text>:
   10e30:	push	{r4, r5, r6, r7, r8, lr}
   10e34:	vpush	{d8-d9}
   10e38:	mov	r6, r0
   10e3c:	ldr	r0, [r1]
   10e40:	mov	r4, r1
   10e44:	sub	sp, sp, #40	; 0x28
   10e48:	bl	116b8 <abort@plt+0x894>
   10e4c:	ldr	r1, [pc, #500]	; 11048 <abort@plt+0x224>
   10e50:	mov	r0, #6
   10e54:	bl	10dd0 <setlocale@plt>
   10e58:	ldr	r1, [pc, #492]	; 1104c <abort@plt+0x228>
   10e5c:	ldr	r0, [pc, #492]	; 11050 <abort@plt+0x22c>
   10e60:	bl	10e00 <bindtextdomain@plt>
   10e64:	ldr	r0, [pc, #484]	; 11050 <abort@plt+0x22c>
   10e68:	bl	10c98 <textdomain@plt>
   10e6c:	ldr	r0, [pc, #480]	; 11054 <abort@plt+0x230>
   10e70:	bl	14308 <abort@plt+0x34e4>
   10e74:	ldr	r3, [pc, #476]	; 11058 <abort@plt+0x234>
   10e78:	mov	r5, #1
   10e7c:	str	r3, [sp, #16]
   10e80:	ldr	r3, [pc, #468]	; 1105c <abort@plt+0x238>
   10e84:	mov	r7, #0
   10e88:	str	r3, [sp, #12]
   10e8c:	ldr	r3, [pc, #460]	; 11060 <abort@plt+0x23c>
   10e90:	str	r7, [sp, #20]
   10e94:	str	r3, [sp, #8]
   10e98:	ldr	r3, [pc, #452]	; 11064 <abort@plt+0x240>
   10e9c:	str	r5, [sp, #4]
   10ea0:	ldr	r2, [pc, #448]	; 11068 <abort@plt+0x244>
   10ea4:	ldr	r3, [r3]
   10ea8:	mov	r1, r4
   10eac:	str	r3, [sp]
   10eb0:	mov	r0, r6
   10eb4:	ldr	r3, [pc, #432]	; 1106c <abort@plt+0x248>
   10eb8:	bl	115f0 <abort@plt+0x7cc>
   10ebc:	cmp	r6, r5
   10ec0:	bne	10eec <abort@plt+0xc8>
   10ec4:	mov	r2, #5
   10ec8:	ldr	r1, [pc, #416]	; 11070 <abort@plt+0x24c>
   10ecc:	mov	r0, r7
   10ed0:	bl	10c80 <dcgettext@plt>
   10ed4:	mov	r1, r7
   10ed8:	mov	r2, r0
   10edc:	mov	r0, r7
   10ee0:	bl	10cec <error@plt>
   10ee4:	mov	r0, #1
   10ee8:	bl	111b0 <abort@plt+0x38c>
   10eec:	ldr	r3, [pc, #384]	; 11074 <abort@plt+0x250>
   10ef0:	vldr	d8, [pc, #328]	; 11040 <abort@plt+0x21c>
   10ef4:	ldr	r8, [pc, #380]	; 11078 <abort@plt+0x254>
   10ef8:	ldr	r7, [r3]
   10efc:	vmov.f64	d9, d8
   10f00:	add	r4, r4, r7, lsl #2
   10f04:	cmp	r7, r6
   10f08:	blt	10f4c <abort@plt+0x128>
   10f0c:	cmp	r5, #0
   10f10:	beq	10ee4 <abort@plt+0xc0>
   10f14:	vmov.f64	d0, d8
   10f18:	bl	136d8 <abort@plt+0x28b4>
   10f1c:	cmp	r0, #0
   10f20:	beq	11034 <abort@plt+0x210>
   10f24:	bl	10d58 <__errno_location@plt>
   10f28:	mov	r2, #5
   10f2c:	ldr	r1, [pc, #328]	; 1107c <abort@plt+0x258>
   10f30:	ldr	r4, [r0]
   10f34:	mov	r0, #0
   10f38:	bl	10c80 <dcgettext@plt>
   10f3c:	mov	r1, r4
   10f40:	mov	r2, r0
   10f44:	mov	r0, #1
   10f48:	bl	10cec <error@plt>
   10f4c:	ldr	r3, [pc, #300]	; 11080 <abort@plt+0x25c>
   10f50:	add	r2, sp, #32
   10f54:	add	r1, sp, #28
   10f58:	ldr	r0, [r4], #4
   10f5c:	bl	13768 <abort@plt+0x2944>
   10f60:	cmp	r0, #0
   10f64:	bne	10f78 <abort@plt+0x154>
   10f68:	bl	10d58 <__errno_location@plt>
   10f6c:	ldr	r3, [r0]
   10f70:	cmp	r3, #34	; 0x22
   10f74:	bne	10fbc <abort@plt+0x198>
   10f78:	vldr	d6, [sp, #32]
   10f7c:	vcmpe.f64	d6, d9
   10f80:	vmrs	APSR_nzcv, fpscr
   10f84:	blt	10fbc <abort@plt+0x198>
   10f88:	ldr	r2, [sp, #28]
   10f8c:	ldrb	r3, [r2]
   10f90:	cmp	r3, #0
   10f94:	beq	11008 <abort@plt+0x1e4>
   10f98:	ldrb	r2, [r2, #1]
   10f9c:	cmp	r2, #0
   10fa0:	bne	10fbc <abort@plt+0x198>
   10fa4:	cmp	r3, #104	; 0x68
   10fa8:	beq	11010 <abort@plt+0x1ec>
   10fac:	bhi	10ff4 <abort@plt+0x1d0>
   10fb0:	cmp	r3, #100	; 0x64
   10fb4:	moveq	r3, r8
   10fb8:	beq	11014 <abort@plt+0x1f0>
   10fbc:	mov	r2, #5
   10fc0:	ldr	r1, [pc, #188]	; 11084 <abort@plt+0x260>
   10fc4:	mov	r0, #0
   10fc8:	bl	10c80 <dcgettext@plt>
   10fcc:	mov	r5, r0
   10fd0:	ldr	r0, [r4, #-4]
   10fd4:	bl	12ce8 <abort@plt+0x1ec4>
   10fd8:	mov	r1, #0
   10fdc:	mov	r2, r5
   10fe0:	mov	r5, #0
   10fe4:	mov	r3, r0
   10fe8:	mov	r0, r1
   10fec:	bl	10cec <error@plt>
   10ff0:	b	11024 <abort@plt+0x200>
   10ff4:	cmp	r3, #109	; 0x6d
   10ff8:	moveq	r3, #60	; 0x3c
   10ffc:	beq	11014 <abort@plt+0x1f0>
   11000:	cmp	r3, #115	; 0x73
   11004:	bne	10fbc <abort@plt+0x198>
   11008:	mov	r3, #1
   1100c:	b	11014 <abort@plt+0x1f0>
   11010:	mov	r3, #3600	; 0xe10
   11014:	vmov	s15, r3
   11018:	vcvt.f64.s32	d7, s15
   1101c:	vmul.f64	d7, d7, d6
   11020:	vstr	d7, [sp, #32]
   11024:	vldr	d7, [sp, #32]
   11028:	add	r7, r7, #1
   1102c:	vadd.f64	d8, d8, d7
   11030:	b	10f04 <abort@plt+0xe0>
   11034:	add	sp, sp, #40	; 0x28
   11038:	vpop	{d8-d9}
   1103c:	pop	{r4, r5, r6, r7, r8, pc}
	...
   11048:			; <UNDEFINED> instruction: 0x000144b8
   1104c:	andeq	r4, r1, r2, lsl #12
   11050:	andeq	r4, r1, pc, asr r5
   11054:	andeq	r1, r1, r4, asr r4
   11058:	andeq	r4, r1, sl, lsl r6
   1105c:	andeq	r4, r1, r6, lsr #12
   11060:			; <UNDEFINED> instruction: 0x000111b0
   11064:	ldrdeq	r5, [r2], -ip
   11068:	andeq	r4, r1, r4, ror #6
   1106c:	andeq	r4, r1, fp, asr r5
   11070:	andeq	r4, r1, r3, lsr r6
   11074:	andeq	r5, r2, r0, lsr r1
   11078:	andeq	r5, r1, r0, lsl #3
   1107c:	andeq	r4, r1, ip, asr r6
   11080:			; <UNDEFINED> instruction: 0x000113bc
   11084:	andeq	r4, r1, r3, asr #12
   11088:	mov	fp, #0
   1108c:	mov	lr, #0
   11090:	pop	{r1}		; (ldr r1, [sp], #4)
   11094:	mov	r2, sp
   11098:	push	{r2}		; (str r2, [sp, #-4]!)
   1109c:	push	{r0}		; (str r0, [sp, #-4]!)
   110a0:	ldr	ip, [pc, #16]	; 110b8 <abort@plt+0x294>
   110a4:	push	{ip}		; (str ip, [sp, #-4]!)
   110a8:	ldr	r0, [pc, #12]	; 110bc <abort@plt+0x298>
   110ac:	ldr	r3, [pc, #12]	; 110c0 <abort@plt+0x29c>
   110b0:	bl	10d04 <__libc_start_main@plt>
   110b4:	bl	10e24 <abort@plt>
   110b8:	andeq	r4, r1, r4, lsl #6
   110bc:	andeq	r0, r1, r0, lsr lr
   110c0:	andeq	r4, r1, r4, lsr #5
   110c4:	ldr	r3, [pc, #20]	; 110e0 <abort@plt+0x2bc>
   110c8:	ldr	r2, [pc, #20]	; 110e4 <abort@plt+0x2c0>
   110cc:	add	r3, pc, r3
   110d0:	ldr	r2, [r3, r2]
   110d4:	cmp	r2, #0
   110d8:	bxeq	lr
   110dc:	b	10d1c <__gmon_start__@plt>
   110e0:	andeq	r3, r1, ip, lsr #30
   110e4:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   110e8:	ldr	r3, [pc, #28]	; 1110c <abort@plt+0x2e8>
   110ec:	ldr	r0, [pc, #28]	; 11110 <abort@plt+0x2ec>
   110f0:	sub	r3, r3, r0
   110f4:	cmp	r3, #6
   110f8:	bxls	lr
   110fc:	ldr	r3, [pc, #16]	; 11114 <abort@plt+0x2f0>
   11100:	cmp	r3, #0
   11104:	bxeq	lr
   11108:	bx	r3
   1110c:	andeq	r5, r2, r7, lsr #2
   11110:	andeq	r5, r2, r4, lsr #2
   11114:	andeq	r0, r0, r0
   11118:	ldr	r1, [pc, #36]	; 11144 <abort@plt+0x320>
   1111c:	ldr	r0, [pc, #36]	; 11148 <abort@plt+0x324>
   11120:	sub	r1, r1, r0
   11124:	asr	r1, r1, #2
   11128:	add	r1, r1, r1, lsr #31
   1112c:	asrs	r1, r1, #1
   11130:	bxeq	lr
   11134:	ldr	r3, [pc, #16]	; 1114c <abort@plt+0x328>
   11138:	cmp	r3, #0
   1113c:	bxeq	lr
   11140:	bx	r3
   11144:	andeq	r5, r2, r4, lsr #2
   11148:	andeq	r5, r2, r4, lsr #2
   1114c:	andeq	r0, r0, r0
   11150:	push	{r4, lr}
   11154:	ldr	r4, [pc, #24]	; 11174 <abort@plt+0x350>
   11158:	ldrb	r3, [r4]
   1115c:	cmp	r3, #0
   11160:	popne	{r4, pc}
   11164:	bl	110e8 <abort@plt+0x2c4>
   11168:	mov	r3, #1
   1116c:	strb	r3, [r4]
   11170:	pop	{r4, pc}
   11174:	andeq	r5, r2, r4, asr #2
   11178:	ldr	r0, [pc, #40]	; 111a8 <abort@plt+0x384>
   1117c:	ldr	r3, [r0]
   11180:	cmp	r3, #0
   11184:	bne	1118c <abort@plt+0x368>
   11188:	b	11118 <abort@plt+0x2f4>
   1118c:	ldr	r3, [pc, #24]	; 111ac <abort@plt+0x388>
   11190:	cmp	r3, #0
   11194:	beq	11188 <abort@plt+0x364>
   11198:	push	{r4, lr}
   1119c:	blx	r3
   111a0:	pop	{r4, lr}
   111a4:	b	11118 <abort@plt+0x2f4>
   111a8:	andeq	r4, r2, r4, lsl pc
   111ac:	andeq	r0, r0, r0
   111b0:	subs	r6, r0, #0
   111b4:	push	{r7, lr}
   111b8:	sub	sp, sp, #56	; 0x38
   111bc:	ldr	r4, [pc, #432]	; 11374 <abort@plt+0x550>
   111c0:	beq	111f8 <abort@plt+0x3d4>
   111c4:	ldr	r3, [pc, #428]	; 11378 <abort@plt+0x554>
   111c8:	mov	r2, #5
   111cc:	ldr	r1, [pc, #424]	; 1137c <abort@plt+0x558>
   111d0:	mov	r0, #0
   111d4:	ldr	r5, [r3]
   111d8:	bl	10c80 <dcgettext@plt>
   111dc:	ldr	r3, [r4]
   111e0:	mov	r1, #1
   111e4:	mov	r2, r0
   111e8:	mov	r0, r5
   111ec:	bl	10da0 <__fprintf_chk@plt>
   111f0:	mov	r0, r6
   111f4:	bl	10d40 <exit@plt>
   111f8:	mov	r2, #5
   111fc:	ldr	r1, [pc, #380]	; 11380 <abort@plt+0x55c>
   11200:	bl	10c80 <dcgettext@plt>
   11204:	ldr	r3, [r4]
   11208:	ldr	r5, [pc, #372]	; 11384 <abort@plt+0x560>
   1120c:	mov	r2, r3
   11210:	ldr	r8, [pc, #368]	; 11388 <abort@plt+0x564>
   11214:	mov	r7, r6
   11218:	mov	r1, r0
   1121c:	mov	r0, #1
   11220:	bl	10d7c <__printf_chk@plt>
   11224:	mov	r2, #5
   11228:	ldr	r1, [pc, #348]	; 1138c <abort@plt+0x568>
   1122c:	mov	r0, r6
   11230:	bl	10c80 <dcgettext@plt>
   11234:	ldr	r1, [r5]
   11238:	bl	10bf0 <fputs_unlocked@plt>
   1123c:	mov	r2, #5
   11240:	ldr	r1, [pc, #328]	; 11390 <abort@plt+0x56c>
   11244:	mov	r0, r6
   11248:	bl	10c80 <dcgettext@plt>
   1124c:	ldr	r1, [r5]
   11250:	bl	10bf0 <fputs_unlocked@plt>
   11254:	ldr	lr, [pc, #312]	; 11394 <abort@plt+0x570>
   11258:	mov	ip, sp
   1125c:	ldm	lr!, {r0, r1, r2, r3}
   11260:	stmia	ip!, {r0, r1, r2, r3}
   11264:	ldm	lr!, {r0, r1, r2, r3}
   11268:	stmia	ip!, {r0, r1, r2, r3}
   1126c:	ldm	lr!, {r0, r1, r2, r3}
   11270:	stmia	ip!, {r0, r1, r2, r3}
   11274:	ldm	lr, {r0, r1}
   11278:	stm	ip, {r0, r1}
   1127c:	ldr	r1, [sp, r7]
   11280:	add	r4, sp, r7
   11284:	cmp	r1, #0
   11288:	bne	1132c <abort@plt+0x508>
   1128c:	ldr	r4, [r4, #4]
   11290:	ldr	r7, [pc, #240]	; 11388 <abort@plt+0x564>
   11294:	cmp	r4, #0
   11298:	mov	r2, #5
   1129c:	ldr	r1, [pc, #244]	; 11398 <abort@plt+0x574>
   112a0:	mov	r0, #0
   112a4:	moveq	r4, r7
   112a8:	bl	10c80 <dcgettext@plt>
   112ac:	ldr	r3, [pc, #232]	; 1139c <abort@plt+0x578>
   112b0:	ldr	r2, [pc, #232]	; 113a0 <abort@plt+0x57c>
   112b4:	mov	r1, r0
   112b8:	mov	r0, #1
   112bc:	bl	10d7c <__printf_chk@plt>
   112c0:	mov	r1, #0
   112c4:	mov	r0, #5
   112c8:	bl	10dd0 <setlocale@plt>
   112cc:	cmp	r0, #0
   112d0:	bne	11344 <abort@plt+0x520>
   112d4:	mov	r2, #5
   112d8:	ldr	r1, [pc, #196]	; 113a4 <abort@plt+0x580>
   112dc:	mov	r0, #0
   112e0:	bl	10c80 <dcgettext@plt>
   112e4:	ldr	r3, [pc, #156]	; 11388 <abort@plt+0x564>
   112e8:	ldr	r2, [pc, #172]	; 1139c <abort@plt+0x578>
   112ec:	mov	r1, r0
   112f0:	mov	r0, #1
   112f4:	bl	10d7c <__printf_chk@plt>
   112f8:	mov	r2, #5
   112fc:	ldr	r1, [pc, #164]	; 113a8 <abort@plt+0x584>
   11300:	mov	r0, #0
   11304:	bl	10c80 <dcgettext@plt>
   11308:	ldr	r2, [pc, #156]	; 113ac <abort@plt+0x588>
   1130c:	cmp	r4, r7
   11310:	ldr	r3, [pc, #152]	; 113b0 <abort@plt+0x58c>
   11314:	moveq	r3, r2
   11318:	mov	r2, r4
   1131c:	mov	r1, r0
   11320:	mov	r0, #1
   11324:	bl	10d7c <__printf_chk@plt>
   11328:	b	111f0 <abort@plt+0x3cc>
   1132c:	mov	r0, r8
   11330:	bl	10c08 <strcmp@plt>
   11334:	add	r7, r7, #8
   11338:	cmp	r0, #0
   1133c:	bne	1127c <abort@plt+0x458>
   11340:	b	1128c <abort@plt+0x468>
   11344:	mov	r2, #3
   11348:	ldr	r1, [pc, #100]	; 113b4 <abort@plt+0x590>
   1134c:	bl	10e18 <strncmp@plt>
   11350:	cmp	r0, #0
   11354:	beq	112d4 <abort@plt+0x4b0>
   11358:	mov	r2, #5
   1135c:	ldr	r1, [pc, #84]	; 113b8 <abort@plt+0x594>
   11360:	mov	r0, #0
   11364:	bl	10c80 <dcgettext@plt>
   11368:	ldr	r1, [r5]
   1136c:	bl	10bf0 <fputs_unlocked@plt>
   11370:	b	112d4 <abort@plt+0x4b0>
   11374:	andeq	r5, r2, r0, asr r1
   11378:	andeq	r5, r2, r8, lsr r1
   1137c:	andeq	r4, r1, sl, ror #6
   11380:	muleq	r1, r1, r3
   11384:	andeq	r5, r2, ip, lsr r1
   11388:	andeq	r4, r1, r4, ror #6
   1138c:			; <UNDEFINED> instruction: 0x000144b9
   11390:	andeq	r4, r1, r6, ror #9
   11394:	andeq	r4, r1, ip, lsr #6
   11398:	andeq	r4, r1, ip, lsl r5
   1139c:	andeq	r4, r1, r3, lsr r5
   113a0:	andeq	r4, r1, fp, asr r5
   113a4:			; <UNDEFINED> instruction: 0x000145b4
   113a8:	andeq	r4, r1, pc, asr #11
   113ac:	muleq	r1, r3, r6
   113b0:			; <UNDEFINED> instruction: 0x000144b8
   113b4:	andeq	r4, r1, r9, ror #10
   113b8:	andeq	r4, r1, sp, ror #10
   113bc:	push	{r4, r5, r6, r7, lr}
   113c0:	vpush	{d8}
   113c4:	mov	r4, r1
   113c8:	mov	r7, r0
   113cc:	sub	sp, sp, #12
   113d0:	mov	r1, sp
   113d4:	bl	10d88 <strtod@plt>
   113d8:	ldr	r3, [sp]
   113dc:	ldrb	r3, [r3]
   113e0:	cmp	r3, #0
   113e4:	vmov.f64	d8, d0
   113e8:	beq	11418 <abort@plt+0x5f4>
   113ec:	bl	10d58 <__errno_location@plt>
   113f0:	add	r1, sp, #4
   113f4:	ldr	r6, [r0]
   113f8:	mov	r5, r0
   113fc:	mov	r0, r7
   11400:	bl	138f0 <abort@plt+0x2acc>
   11404:	ldm	sp, {r2, r3}
   11408:	cmp	r2, r3
   1140c:	strcc	r3, [sp]
   11410:	strcs	r6, [r5]
   11414:	vmovcc.f64	d8, d0
   11418:	cmp	r4, #0
   1141c:	vmov.f64	d0, d8
   11420:	ldrne	r3, [sp]
   11424:	strne	r3, [r4]
   11428:	add	sp, sp, #12
   1142c:	vpop	{d8}
   11430:	pop	{r4, r5, r6, r7, pc}
   11434:	ldr	r3, [pc, #4]	; 11440 <abort@plt+0x61c>
   11438:	str	r0, [r3]
   1143c:	bx	lr
   11440:	andeq	r5, r2, r8, asr #2
   11444:	ldr	r3, [pc, #4]	; 11450 <abort@plt+0x62c>
   11448:	strb	r0, [r3, #4]
   1144c:	bx	lr
   11450:	andeq	r5, r2, r8, asr #2
   11454:	ldr	r3, [pc, #192]	; 1151c <abort@plt+0x6f8>
   11458:	push	{r0, r1, r4, r5, r6, lr}
   1145c:	ldr	r0, [r3]
   11460:	bl	1395c <abort@plt+0x2b38>
   11464:	cmp	r0, #0
   11468:	beq	11500 <abort@plt+0x6dc>
   1146c:	ldr	r3, [pc, #172]	; 11520 <abort@plt+0x6fc>
   11470:	mov	r4, r3
   11474:	ldrb	r2, [r3, #4]
   11478:	cmp	r2, #0
   1147c:	beq	11490 <abort@plt+0x66c>
   11480:	bl	10d58 <__errno_location@plt>
   11484:	ldr	r3, [r0]
   11488:	cmp	r3, #32
   1148c:	beq	11500 <abort@plt+0x6dc>
   11490:	mov	r2, #5
   11494:	ldr	r1, [pc, #136]	; 11524 <abort@plt+0x700>
   11498:	mov	r0, #0
   1149c:	bl	10c80 <dcgettext@plt>
   114a0:	ldr	r4, [r4]
   114a4:	cmp	r4, #0
   114a8:	mov	r5, r0
   114ac:	beq	114e4 <abort@plt+0x6c0>
   114b0:	bl	10d58 <__errno_location@plt>
   114b4:	ldr	r6, [r0]
   114b8:	mov	r0, r4
   114bc:	bl	12b98 <abort@plt+0x1d74>
   114c0:	str	r5, [sp]
   114c4:	ldr	r2, [pc, #92]	; 11528 <abort@plt+0x704>
   114c8:	mov	r1, r6
   114cc:	mov	r3, r0
   114d0:	mov	r0, #0
   114d4:	bl	10cec <error@plt>
   114d8:	ldr	r3, [pc, #76]	; 1152c <abort@plt+0x708>
   114dc:	ldr	r0, [r3]
   114e0:	bl	10c44 <_exit@plt>
   114e4:	bl	10d58 <__errno_location@plt>
   114e8:	mov	r3, r5
   114ec:	ldr	r2, [pc, #60]	; 11530 <abort@plt+0x70c>
   114f0:	ldr	r1, [r0]
   114f4:	mov	r0, r4
   114f8:	bl	10cec <error@plt>
   114fc:	b	114d8 <abort@plt+0x6b4>
   11500:	ldr	r3, [pc, #44]	; 11534 <abort@plt+0x710>
   11504:	ldr	r0, [r3]
   11508:	bl	1395c <abort@plt+0x2b38>
   1150c:	cmp	r0, #0
   11510:	bne	114d8 <abort@plt+0x6b4>
   11514:	add	sp, sp, #8
   11518:	pop	{r4, r5, r6, pc}
   1151c:	andeq	r5, r2, ip, lsr r1
   11520:	andeq	r5, r2, r8, asr #2
   11524:	andeq	r4, r1, r5, ror #13
   11528:	strdeq	r4, [r1], -r1
   1152c:	andeq	r5, r2, r0, ror #1
   11530:	strdeq	r4, [r1], -r5
   11534:	andeq	r5, r2, r8, lsr r1
   11538:	ldr	ip, [pc, #156]	; 115dc <abort@plt+0x7b8>
   1153c:	push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
   11540:	cmp	r0, #2
   11544:	mov	r6, #0
   11548:	ldr	r7, [ip]
   1154c:	mov	r8, ip
   11550:	str	r6, [ip]
   11554:	bne	11588 <abort@plt+0x764>
   11558:	mov	r5, r3
   1155c:	mov	r4, r2
   11560:	str	r6, [sp]
   11564:	ldr	r3, [pc, #116]	; 115e0 <abort@plt+0x7bc>
   11568:	ldr	r2, [pc, #116]	; 115e4 <abort@plt+0x7c0>
   1156c:	bl	10d28 <getopt_long@plt>
   11570:	cmn	r0, #1
   11574:	beq	11588 <abort@plt+0x764>
   11578:	cmp	r0, #104	; 0x68
   1157c:	beq	115a0 <abort@plt+0x77c>
   11580:	cmp	r0, #118	; 0x76
   11584:	beq	115b0 <abort@plt+0x78c>
   11588:	ldr	r3, [pc, #88]	; 115e8 <abort@plt+0x7c4>
   1158c:	mov	r2, #0
   11590:	str	r7, [r8]
   11594:	str	r2, [r3]
   11598:	add	sp, sp, #16
   1159c:	pop	{r4, r5, r6, r7, r8, pc}
   115a0:	mov	r0, r6
   115a4:	ldr	r3, [sp, #44]	; 0x2c
   115a8:	blx	r3
   115ac:	b	11588 <abort@plt+0x764>
   115b0:	ldr	r0, [pc, #52]	; 115ec <abort@plt+0x7c8>
   115b4:	add	r3, sp, #48	; 0x30
   115b8:	str	r3, [sp]
   115bc:	str	r3, [sp, #12]
   115c0:	ldr	r0, [r0]
   115c4:	ldr	r3, [sp, #40]	; 0x28
   115c8:	mov	r2, r5
   115cc:	mov	r1, r4
   115d0:	bl	130f4 <abort@plt+0x22d0>
   115d4:	mov	r0, r6
   115d8:	bl	10d40 <exit@plt>
   115dc:	andeq	r5, r2, r0, asr #2
   115e0:	strdeq	r4, [r1], -r8
   115e4:	andeq	r4, r1, r8, lsr #14
   115e8:	andeq	r5, r2, r0, lsr r1
   115ec:	andeq	r5, r2, ip, lsr r1
   115f0:	push	{r4, r5, r6, r7, r8, r9, lr}
   115f4:	sub	sp, sp, #20
   115f8:	mov	r8, r3
   115fc:	ldrb	lr, [sp, #52]	; 0x34
   11600:	ldr	r3, [pc, #152]	; 116a0 <abort@plt+0x87c>
   11604:	mov	r4, #0
   11608:	ldr	ip, [pc, #148]	; 116a4 <abort@plt+0x880>
   1160c:	cmp	lr, r4
   11610:	mov	r7, r2
   11614:	mov	r2, #1
   11618:	ldr	r9, [r3]
   1161c:	mov	r5, r3
   11620:	str	r2, [r3]
   11624:	ldr	r2, [pc, #124]	; 116a8 <abort@plt+0x884>
   11628:	str	r4, [sp]
   1162c:	moveq	r2, ip
   11630:	ldr	r3, [pc, #116]	; 116ac <abort@plt+0x888>
   11634:	ldr	r6, [sp, #56]	; 0x38
   11638:	bl	10d28 <getopt_long@plt>
   1163c:	cmn	r0, #1
   11640:	beq	11668 <abort@plt+0x844>
   11644:	cmp	r0, #104	; 0x68
   11648:	beq	11660 <abort@plt+0x83c>
   1164c:	cmp	r0, #118	; 0x76
   11650:	beq	11674 <abort@plt+0x850>
   11654:	ldr	r3, [pc, #84]	; 116b0 <abort@plt+0x88c>
   11658:	ldr	r0, [r3]
   1165c:	b	11664 <abort@plt+0x840>
   11660:	mov	r0, r4
   11664:	blx	r6
   11668:	str	r9, [r5]
   1166c:	add	sp, sp, #20
   11670:	pop	{r4, r5, r6, r7, r8, r9, pc}
   11674:	ldr	r0, [pc, #56]	; 116b4 <abort@plt+0x890>
   11678:	add	r3, sp, #60	; 0x3c
   1167c:	str	r3, [sp]
   11680:	str	r3, [sp, #12]
   11684:	ldr	r0, [r0]
   11688:	ldr	r3, [sp, #48]	; 0x30
   1168c:	mov	r2, r8
   11690:	mov	r1, r7
   11694:	bl	130f4 <abort@plt+0x22d0>
   11698:	mov	r0, r4
   1169c:	bl	10d40 <exit@plt>
   116a0:	andeq	r5, r2, r0, asr #2
   116a4:	andeq	r4, r1, r8, lsr #14
   116a8:			; <UNDEFINED> instruction: 0x000144b8
   116ac:	strdeq	r4, [r1], -r8
   116b0:	andeq	r5, r2, r0, ror #1
   116b4:	andeq	r5, r2, ip, lsr r1
   116b8:	push	{r4, r5, r6, lr}
   116bc:	subs	r5, r0, #0
   116c0:	bne	116d8 <abort@plt+0x8b4>
   116c4:	ldr	r3, [pc, #124]	; 11748 <abort@plt+0x924>
   116c8:	ldr	r0, [pc, #124]	; 1174c <abort@plt+0x928>
   116cc:	ldr	r1, [r3]
   116d0:	bl	10e0c <fputs@plt>
   116d4:	bl	10e24 <abort@plt>
   116d8:	mov	r1, #47	; 0x2f
   116dc:	bl	10ddc <strrchr@plt>
   116e0:	cmp	r0, #0
   116e4:	addne	r4, r0, #1
   116e8:	moveq	r4, r5
   116ec:	sub	r3, r4, r5
   116f0:	cmp	r3, #6
   116f4:	ble	11734 <abort@plt+0x910>
   116f8:	mov	r2, #7
   116fc:	ldr	r1, [pc, #76]	; 11750 <abort@plt+0x92c>
   11700:	sub	r0, r4, #7
   11704:	bl	10e18 <strncmp@plt>
   11708:	cmp	r0, #0
   1170c:	bne	11734 <abort@plt+0x910>
   11710:	mov	r2, #3
   11714:	ldr	r1, [pc, #56]	; 11754 <abort@plt+0x930>
   11718:	mov	r0, r4
   1171c:	bl	10e18 <strncmp@plt>
   11720:	cmp	r0, #0
   11724:	movne	r5, r4
   11728:	ldreq	r3, [pc, #40]	; 11758 <abort@plt+0x934>
   1172c:	addeq	r5, r4, #3
   11730:	streq	r5, [r3]
   11734:	ldr	r3, [pc, #32]	; 1175c <abort@plt+0x938>
   11738:	str	r5, [r3]
   1173c:	ldr	r3, [pc, #28]	; 11760 <abort@plt+0x93c>
   11740:	str	r5, [r3]
   11744:	pop	{r4, r5, r6, pc}
   11748:	andeq	r5, r2, r8, lsr r1
   1174c:	andeq	r4, r1, r7, lsr r7
   11750:	andeq	r4, r1, pc, ror #14
   11754:	andeq	r4, r1, r7, ror r7
   11758:	andeq	r5, r2, r8, lsr #2
   1175c:	andeq	r5, r2, r0, asr r1
   11760:	andeq	r5, r2, ip, lsr #2
   11764:	push	{r4, r5, r6, lr}
   11768:	mov	r2, #48	; 0x30
   1176c:	mov	r5, r1
   11770:	mov	r1, #0
   11774:	mov	r4, r0
   11778:	bl	10d70 <memset@plt>
   1177c:	cmp	r5, #10
   11780:	bne	11788 <abort@plt+0x964>
   11784:	bl	10e24 <abort@plt>
   11788:	str	r5, [r4]
   1178c:	mov	r0, r4
   11790:	pop	{r4, r5, r6, pc}
   11794:	push	{r4, r5, r6, lr}
   11798:	mov	r4, r0
   1179c:	mov	r5, r1
   117a0:	bl	13c98 <abort@plt+0x2e74>
   117a4:	ldrb	r3, [r0]
   117a8:	bic	r3, r3, #32
   117ac:	cmp	r3, #85	; 0x55
   117b0:	bne	11820 <abort@plt+0x9fc>
   117b4:	ldrb	r3, [r0, #1]
   117b8:	bic	r3, r3, #32
   117bc:	cmp	r3, #84	; 0x54
   117c0:	bne	117f8 <abort@plt+0x9d4>
   117c4:	ldrb	r3, [r0, #2]
   117c8:	bic	r3, r3, #32
   117cc:	cmp	r3, #70	; 0x46
   117d0:	bne	117f8 <abort@plt+0x9d4>
   117d4:	ldrb	r3, [r0, #3]
   117d8:	cmp	r3, #45	; 0x2d
   117dc:	bne	117f8 <abort@plt+0x9d4>
   117e0:	ldrb	r3, [r0, #4]
   117e4:	cmp	r3, #56	; 0x38
   117e8:	bne	117f8 <abort@plt+0x9d4>
   117ec:	ldrb	r3, [r0, #5]
   117f0:	cmp	r3, #0
   117f4:	beq	1180c <abort@plt+0x9e8>
   117f8:	ldr	r1, [pc, #144]	; 11890 <abort@plt+0xa6c>
   117fc:	ldr	r0, [pc, #144]	; 11894 <abort@plt+0xa70>
   11800:	cmp	r5, #9
   11804:	movne	r0, r1
   11808:	pop	{r4, r5, r6, pc}
   1180c:	ldrb	r3, [r4]
   11810:	ldr	r1, [pc, #128]	; 11898 <abort@plt+0xa74>
   11814:	ldr	r0, [pc, #128]	; 1189c <abort@plt+0xa78>
   11818:	cmp	r3, #96	; 0x60
   1181c:	b	11804 <abort@plt+0x9e0>
   11820:	cmp	r3, #71	; 0x47
   11824:	bne	117f8 <abort@plt+0x9d4>
   11828:	ldrb	r3, [r0, #1]
   1182c:	bic	r3, r3, #32
   11830:	cmp	r3, #66	; 0x42
   11834:	bne	117f8 <abort@plt+0x9d4>
   11838:	ldrb	r3, [r0, #2]
   1183c:	cmp	r3, #49	; 0x31
   11840:	bne	117f8 <abort@plt+0x9d4>
   11844:	ldrb	r3, [r0, #3]
   11848:	cmp	r3, #56	; 0x38
   1184c:	bne	117f8 <abort@plt+0x9d4>
   11850:	ldrb	r3, [r0, #4]
   11854:	cmp	r3, #48	; 0x30
   11858:	bne	117f8 <abort@plt+0x9d4>
   1185c:	ldrb	r3, [r0, #5]
   11860:	cmp	r3, #51	; 0x33
   11864:	bne	117f8 <abort@plt+0x9d4>
   11868:	ldrb	r3, [r0, #6]
   1186c:	cmp	r3, #48	; 0x30
   11870:	bne	117f8 <abort@plt+0x9d4>
   11874:	ldrb	r3, [r0, #7]
   11878:	cmp	r3, #0
   1187c:	bne	117f8 <abort@plt+0x9d4>
   11880:	ldrb	r3, [r4]
   11884:	ldr	r1, [pc, #20]	; 118a0 <abort@plt+0xa7c>
   11888:	ldr	r0, [pc, #20]	; 118a4 <abort@plt+0xa80>
   1188c:	b	11818 <abort@plt+0x9f4>
   11890:	andeq	r4, r1, r1, ror #15
   11894:	ldrdeq	r4, [r1], -pc	; <UNPREDICTABLE>
   11898:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   1189c:	ldrdeq	r4, [r1], -r0
   118a0:	ldrdeq	r4, [r1], -ip
   118a4:	ldrdeq	r4, [r1], -r8
   118a8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   118ac:	sub	sp, sp, #108	; 0x6c
   118b0:	mov	r8, r0
   118b4:	str	r3, [sp, #36]	; 0x24
   118b8:	mov	r5, r1
   118bc:	str	r2, [sp, #44]	; 0x2c
   118c0:	ldr	sl, [sp, #144]	; 0x90
   118c4:	bl	10cbc <__ctype_get_mb_cur_max@plt>
   118c8:	ldr	r3, [sp, #148]	; 0x94
   118cc:	mov	r7, #0
   118d0:	str	r7, [sp, #48]	; 0x30
   118d4:	lsr	r6, r3, #1
   118d8:	and	r6, r6, #1
   118dc:	mov	r3, #1
   118e0:	str	r3, [sp, #72]	; 0x48
   118e4:	str	r7, [sp, #24]
   118e8:	str	r7, [sp, #32]
   118ec:	str	r7, [sp, #40]	; 0x28
   118f0:	str	r7, [sp, #60]	; 0x3c
   118f4:	str	r0, [sp, #76]	; 0x4c
   118f8:	cmp	sl, #10
   118fc:	ldrls	pc, [pc, sl, lsl #2]
   11900:	b	11b3c <abort@plt+0xd18>
   11904:	andeq	r1, r1, r0, lsr r9
   11908:	andeq	r2, r1, r4, asr #11
   1190c:	andeq	r1, r1, r8, lsl #22
   11910:	andeq	r1, r1, r4, asr fp
   11914:	andeq	r1, r1, r4, ror #21
   11918:	andeq	r1, r1, ip, lsr r9
   1191c:	andeq	r2, r1, r4, lsr #11
   11920:	andeq	r1, r1, r0, asr #22
   11924:	andeq	r1, r1, r4, lsr sl
   11928:	andeq	r1, r1, r4, lsr sl
   1192c:	andeq	r1, r1, r4, lsr sl
   11930:	mov	r6, #0
   11934:	mov	r4, #0
   11938:	b	11968 <abort@plt+0xb44>
   1193c:	cmp	r6, #0
   11940:	bne	11b64 <abort@plt+0xd40>
   11944:	cmp	r5, #0
   11948:	movne	r3, #34	; 0x22
   1194c:	strbne	r3, [r8]
   11950:	mov	r3, #1
   11954:	str	r3, [sp, #24]
   11958:	str	r3, [sp, #32]
   1195c:	mov	r4, #1
   11960:	ldr	r3, [pc, #3172]	; 125cc <abort@plt+0x17a8>
   11964:	str	r3, [sp, #40]	; 0x28
   11968:	mov	r9, r5
   1196c:	mov	r3, #0
   11970:	str	r7, [sp, #68]	; 0x44
   11974:	str	r3, [sp, #28]
   11978:	ldr	r3, [sp, #36]	; 0x24
   1197c:	cmn	r3, #1
   11980:	bne	12510 <abort@plt+0x16ec>
   11984:	ldr	r3, [sp, #44]	; 0x2c
   11988:	ldr	r2, [sp, #28]
   1198c:	ldrb	r3, [r3, r2]
   11990:	adds	r3, r3, #0
   11994:	movne	r3, #1
   11998:	str	r3, [sp, #52]	; 0x34
   1199c:	ldr	r3, [sp, #52]	; 0x34
   119a0:	cmp	r3, #0
   119a4:	bne	11b8c <abort@plt+0xd68>
   119a8:	sub	r2, sl, #2
   119ac:	clz	r2, r2
   119b0:	lsr	r2, r2, #5
   119b4:	and	r3, r6, r2
   119b8:	cmp	r4, #0
   119bc:	movne	r3, #0
   119c0:	andeq	r3, r3, #1
   119c4:	cmp	r3, #0
   119c8:	bne	11d54 <abort@plt+0xf30>
   119cc:	eor	r3, r6, #1
   119d0:	ands	r2, r2, r3
   119d4:	beq	12548 <abort@plt+0x1724>
   119d8:	ldr	r3, [sp, #68]	; 0x44
   119dc:	cmp	r3, #0
   119e0:	beq	12580 <abort@plt+0x175c>
   119e4:	ldr	r3, [sp, #72]	; 0x48
   119e8:	cmp	r3, #0
   119ec:	beq	12524 <abort@plt+0x1700>
   119f0:	ldr	r3, [sp, #160]	; 0xa0
   119f4:	ldr	r2, [sp, #44]	; 0x2c
   119f8:	str	r3, [sp, #16]
   119fc:	ldr	r3, [sp, #156]	; 0x9c
   11a00:	ldr	r1, [sp, #60]	; 0x3c
   11a04:	str	r3, [sp, #12]
   11a08:	ldr	r3, [sp, #152]	; 0x98
   11a0c:	str	r3, [sp, #8]
   11a10:	ldr	r3, [sp, #148]	; 0x94
   11a14:	str	r3, [sp, #4]
   11a18:	mov	r3, #5
   11a1c:	str	r3, [sp]
   11a20:	ldr	r3, [sp, #36]	; 0x24
   11a24:	mov	r0, r8
   11a28:	bl	118a8 <abort@plt+0xa84>
   11a2c:	mov	r4, r0
   11a30:	b	12574 <abort@plt+0x1750>
   11a34:	cmp	sl, #10
   11a38:	beq	11a94 <abort@plt+0xc70>
   11a3c:	ldr	r4, [pc, #2956]	; 125d0 <abort@plt+0x17ac>
   11a40:	mov	r2, #5
   11a44:	mov	r1, r4
   11a48:	mov	r0, #0
   11a4c:	bl	10c80 <dcgettext@plt>
   11a50:	cmp	r0, r4
   11a54:	str	r0, [sp, #156]	; 0x9c
   11a58:	bne	11a68 <abort@plt+0xc44>
   11a5c:	mov	r1, sl
   11a60:	bl	11794 <abort@plt+0x970>
   11a64:	str	r0, [sp, #156]	; 0x9c
   11a68:	ldr	r4, [pc, #2916]	; 125d4 <abort@plt+0x17b0>
   11a6c:	mov	r2, #5
   11a70:	mov	r1, r4
   11a74:	mov	r0, #0
   11a78:	bl	10c80 <dcgettext@plt>
   11a7c:	cmp	r0, r4
   11a80:	str	r0, [sp, #160]	; 0xa0
   11a84:	bne	11a94 <abort@plt+0xc70>
   11a88:	mov	r1, sl
   11a8c:	bl	11794 <abort@plt+0x970>
   11a90:	str	r0, [sp, #160]	; 0xa0
   11a94:	cmp	r6, #0
   11a98:	moveq	r4, r6
   11a9c:	beq	11ab4 <abort@plt+0xc90>
   11aa0:	mov	r4, #0
   11aa4:	b	11ac4 <abort@plt+0xca0>
   11aa8:	cmp	r5, r4
   11aac:	strbhi	r3, [r8, r4]
   11ab0:	add	r4, r4, #1
   11ab4:	ldr	r3, [sp, #156]	; 0x9c
   11ab8:	ldrb	r3, [r3, r4]
   11abc:	cmp	r3, #0
   11ac0:	bne	11aa8 <abort@plt+0xc84>
   11ac4:	ldr	r0, [sp, #160]	; 0xa0
   11ac8:	bl	10d4c <strlen@plt>
   11acc:	ldr	r3, [sp, #160]	; 0xa0
   11ad0:	str	r3, [sp, #40]	; 0x28
   11ad4:	mov	r3, #1
   11ad8:	str	r3, [sp, #24]
   11adc:	str	r0, [sp, #32]
   11ae0:	b	11968 <abort@plt+0xb44>
   11ae4:	mov	r3, #1
   11ae8:	cmp	r6, #0
   11aec:	streq	r3, [sp, #24]
   11af0:	beq	11b10 <abort@plt+0xcec>
   11af4:	str	r3, [sp, #32]
   11af8:	ldr	r3, [pc, #2772]	; 125d4 <abort@plt+0x17b0>
   11afc:	mov	r4, #0
   11b00:	str	r3, [sp, #40]	; 0x28
   11b04:	b	11b34 <abort@plt+0xd10>
   11b08:	cmp	r6, #0
   11b0c:	bne	11b7c <abort@plt+0xd58>
   11b10:	cmp	r5, #0
   11b14:	movne	r3, #39	; 0x27
   11b18:	strbne	r3, [r8]
   11b1c:	mov	r3, #1
   11b20:	str	r3, [sp, #32]
   11b24:	mov	r6, #0
   11b28:	ldr	r3, [pc, #2724]	; 125d4 <abort@plt+0x17b0>
   11b2c:	mov	r4, #1
   11b30:	str	r3, [sp, #40]	; 0x28
   11b34:	mov	sl, #2
   11b38:	b	11968 <abort@plt+0xb44>
   11b3c:	bl	10e24 <abort@plt>
   11b40:	mov	r6, #0
   11b44:	mov	r3, #1
   11b48:	str	r3, [sp, #24]
   11b4c:	mov	r4, r6
   11b50:	b	11968 <abort@plt+0xb44>
   11b54:	mov	r6, #1
   11b58:	str	r6, [sp, #24]
   11b5c:	str	r6, [sp, #32]
   11b60:	b	11af8 <abort@plt+0xcd4>
   11b64:	mov	r3, #1
   11b68:	str	r3, [sp, #32]
   11b6c:	ldr	r3, [pc, #2648]	; 125cc <abort@plt+0x17a8>
   11b70:	str	r6, [sp, #24]
   11b74:	str	r3, [sp, #40]	; 0x28
   11b78:	b	11934 <abort@plt+0xb10>
   11b7c:	mov	r3, #1
   11b80:	str	r3, [sp, #32]
   11b84:	ldr	r3, [pc, #2632]	; 125d4 <abort@plt+0x17b0>
   11b88:	b	11b74 <abort@plt+0xd50>
   11b8c:	ldr	r3, [sp, #32]
   11b90:	ldr	fp, [sp, #24]
   11b94:	cmp	sl, #2
   11b98:	moveq	fp, #0
   11b9c:	andne	fp, fp, #1
   11ba0:	adds	r5, r3, #0
   11ba4:	movne	r5, #1
   11ba8:	ands	r3, r5, fp
   11bac:	str	r3, [sp, #64]	; 0x40
   11bb0:	beq	11c80 <abort@plt+0xe5c>
   11bb4:	ldr	r2, [sp, #32]
   11bb8:	ldr	r3, [sp, #28]
   11bbc:	add	r7, r3, r2
   11bc0:	mov	r3, r2
   11bc4:	ldr	r2, [sp, #36]	; 0x24
   11bc8:	cmp	r3, #1
   11bcc:	movls	r3, #0
   11bd0:	movhi	r3, #1
   11bd4:	cmn	r2, #1
   11bd8:	movne	r3, #0
   11bdc:	cmp	r3, #0
   11be0:	beq	11bf0 <abort@plt+0xdcc>
   11be4:	ldr	r0, [sp, #44]	; 0x2c
   11be8:	bl	10d4c <strlen@plt>
   11bec:	str	r0, [sp, #36]	; 0x24
   11bf0:	ldr	r3, [sp, #36]	; 0x24
   11bf4:	cmp	r3, r7
   11bf8:	bcc	11c78 <abort@plt+0xe54>
   11bfc:	ldr	r3, [sp, #44]	; 0x2c
   11c00:	ldr	r0, [sp, #28]
   11c04:	ldr	r2, [sp, #32]
   11c08:	ldr	r1, [sp, #40]	; 0x28
   11c0c:	add	r0, r3, r0
   11c10:	bl	10c68 <memcmp@plt>
   11c14:	cmp	r0, #0
   11c18:	bne	11c78 <abort@plt+0xe54>
   11c1c:	cmp	r6, #0
   11c20:	beq	11c80 <abort@plt+0xe5c>
   11c24:	str	r6, [sp, #24]
   11c28:	ldr	r3, [sp, #24]
   11c2c:	ldr	r2, [sp, #44]	; 0x2c
   11c30:	cmp	sl, #2
   11c34:	movne	r3, #0
   11c38:	andeq	r3, r3, #1
   11c3c:	cmp	r3, #0
   11c40:	ldr	r3, [sp, #160]	; 0xa0
   11c44:	movne	sl, #4
   11c48:	str	r3, [sp, #16]
   11c4c:	ldr	r3, [sp, #156]	; 0x9c
   11c50:	str	sl, [sp]
   11c54:	str	r3, [sp, #12]
   11c58:	mov	r3, #0
   11c5c:	str	r3, [sp, #8]
   11c60:	ldr	r3, [sp, #148]	; 0x94
   11c64:	mov	r1, r9
   11c68:	bic	r3, r3, #2
   11c6c:	str	r3, [sp, #4]
   11c70:	ldr	r3, [sp, #36]	; 0x24
   11c74:	b	11a24 <abort@plt+0xc00>
   11c78:	mov	r3, #0
   11c7c:	str	r3, [sp, #64]	; 0x40
   11c80:	ldr	r2, [sp, #28]
   11c84:	ldr	r3, [sp, #44]	; 0x2c
   11c88:	add	r3, r3, r2
   11c8c:	str	r3, [sp, #80]	; 0x50
   11c90:	ldr	r3, [sp, #44]	; 0x2c
   11c94:	ldrb	r7, [r3, r2]
   11c98:	cmp	r7, #58	; 0x3a
   11c9c:	bhi	11e04 <abort@plt+0xfe0>
   11ca0:	cmp	r7, #43	; 0x2b
   11ca4:	bcs	11e58 <abort@plt+0x1034>
   11ca8:	cmp	r7, #32
   11cac:	beq	11eb0 <abort@plt+0x108c>
   11cb0:	bhi	11d5c <abort@plt+0xf38>
   11cb4:	cmp	r7, #9
   11cb8:	beq	12164 <abort@plt+0x1340>
   11cbc:	bhi	11d20 <abort@plt+0xefc>
   11cc0:	cmp	r7, #7
   11cc4:	beq	12210 <abort@plt+0x13ec>
   11cc8:	bhi	11ecc <abort@plt+0x10a8>
   11ccc:	cmp	r7, #0
   11cd0:	beq	11ee8 <abort@plt+0x10c4>
   11cd4:	ldr	r3, [sp, #76]	; 0x4c
   11cd8:	cmp	r3, #1
   11cdc:	bne	12254 <abort@plt+0x1430>
   11ce0:	bl	10d34 <__ctype_b_loc@plt>
   11ce4:	sxth	r3, r7
   11ce8:	lsl	r3, r3, #1
   11cec:	ldr	r2, [r0]
   11cf0:	ldrh	r5, [r2, r3]
   11cf4:	ldr	r3, [sp, #76]	; 0x4c
   11cf8:	str	r3, [sp, #56]	; 0x38
   11cfc:	lsr	r5, r5, #14
   11d00:	and	r5, r5, #1
   11d04:	ldr	r3, [sp, #24]
   11d08:	eor	fp, r5, #1
   11d0c:	and	fp, fp, r3
   11d10:	ands	fp, fp, #255	; 0xff
   11d14:	beq	1209c <abort@plt+0x1278>
   11d18:	mov	r5, #0
   11d1c:	b	12300 <abort@plt+0x14dc>
   11d20:	cmp	r7, #11
   11d24:	beq	1216c <abort@plt+0x1348>
   11d28:	bcc	12208 <abort@plt+0x13e4>
   11d2c:	cmp	r7, #12
   11d30:	beq	12218 <abort@plt+0x13f4>
   11d34:	cmp	r7, #13
   11d38:	moveq	r3, #114	; 0x72
   11d3c:	bne	11cd4 <abort@plt+0xeb0>
   11d40:	cmp	sl, #2
   11d44:	movne	r2, #0
   11d48:	andeq	r2, r6, #1
   11d4c:	cmp	r2, #0
   11d50:	beq	11ed0 <abort@plt+0x10ac>
   11d54:	mov	sl, #2
   11d58:	b	11c28 <abort@plt+0xe04>
   11d5c:	cmp	r7, #37	; 0x25
   11d60:	beq	11e58 <abort@plt+0x1034>
   11d64:	bhi	11d78 <abort@plt+0xf54>
   11d68:	cmp	r7, #35	; 0x23
   11d6c:	beq	11ea4 <abort@plt+0x1080>
   11d70:	mov	r5, #0
   11d74:	b	11eb4 <abort@plt+0x1090>
   11d78:	cmp	r7, #39	; 0x27
   11d7c:	bne	11d70 <abort@plt+0xf4c>
   11d80:	cmp	sl, #2
   11d84:	ldrne	r5, [sp, #52]	; 0x34
   11d88:	movne	r3, r5
   11d8c:	strne	r3, [sp, #68]	; 0x44
   11d90:	bne	11e5c <abort@plt+0x1038>
   11d94:	cmp	r6, #0
   11d98:	bne	11c28 <abort@plt+0xe04>
   11d9c:	ldr	r2, [sp, #60]	; 0x3c
   11da0:	adds	r3, r9, #0
   11da4:	movne	r3, #1
   11da8:	cmp	r2, #0
   11dac:	movne	r3, #0
   11db0:	cmp	r3, #0
   11db4:	strne	r9, [sp, #60]	; 0x3c
   11db8:	movne	r9, #0
   11dbc:	bne	11dcc <abort@plt+0xfa8>
   11dc0:	cmp	r9, r4
   11dc4:	movhi	r3, #39	; 0x27
   11dc8:	strbhi	r3, [r8, r4]
   11dcc:	add	r3, r4, #1
   11dd0:	cmp	r3, r9
   11dd4:	movcc	r2, #92	; 0x5c
   11dd8:	strbcc	r2, [r8, r3]
   11ddc:	add	r3, r4, #2
   11de0:	cmp	r3, r9
   11de4:	ldr	r5, [sp, #52]	; 0x34
   11de8:	movcc	r2, #39	; 0x27
   11dec:	strbcc	r2, [r8, r3]
   11df0:	add	r4, r4, #3
   11df4:	mov	fp, r6
   11df8:	str	r5, [sp, #68]	; 0x44
   11dfc:	str	r6, [sp, #48]	; 0x30
   11e00:	b	1209c <abort@plt+0x1278>
   11e04:	cmp	r7, #94	; 0x5e
   11e08:	beq	11d70 <abort@plt+0xf4c>
   11e0c:	bhi	11e64 <abort@plt+0x1040>
   11e10:	cmp	r7, #90	; 0x5a
   11e14:	bhi	11e4c <abort@plt+0x1028>
   11e18:	cmp	r7, #65	; 0x41
   11e1c:	bcs	11e58 <abort@plt+0x1034>
   11e20:	cmp	r7, #62	; 0x3e
   11e24:	bls	11d70 <abort@plt+0xf4c>
   11e28:	cmp	r7, #63	; 0x3f
   11e2c:	bne	11cd4 <abort@plt+0xeb0>
   11e30:	cmp	sl, #2
   11e34:	beq	11fd8 <abort@plt+0x11b4>
   11e38:	cmp	sl, #5
   11e3c:	beq	11fe8 <abort@plt+0x11c4>
   11e40:	mov	fp, #0
   11e44:	mov	r5, fp
   11e48:	b	1209c <abort@plt+0x1278>
   11e4c:	cmp	r7, #92	; 0x5c
   11e50:	beq	12174 <abort@plt+0x1350>
   11e54:	bls	11d70 <abort@plt+0xf4c>
   11e58:	ldr	r5, [sp, #52]	; 0x34
   11e5c:	mov	fp, #0
   11e60:	b	1209c <abort@plt+0x1278>
   11e64:	cmp	r7, #122	; 0x7a
   11e68:	bhi	11e88 <abort@plt+0x1064>
   11e6c:	cmp	r7, #97	; 0x61
   11e70:	bcs	11e58 <abort@plt+0x1034>
   11e74:	cmp	r7, #95	; 0x5f
   11e78:	beq	11e58 <abort@plt+0x1034>
   11e7c:	cmp	r7, #96	; 0x60
   11e80:	bne	11cd4 <abort@plt+0xeb0>
   11e84:	b	11d70 <abort@plt+0xf4c>
   11e88:	cmp	r7, #124	; 0x7c
   11e8c:	beq	11d70 <abort@plt+0xf4c>
   11e90:	bcc	12220 <abort@plt+0x13fc>
   11e94:	cmp	r7, #125	; 0x7d
   11e98:	beq	12220 <abort@plt+0x13fc>
   11e9c:	cmp	r7, #126	; 0x7e
   11ea0:	bne	11cd4 <abort@plt+0xeb0>
   11ea4:	ldr	r3, [sp, #28]
   11ea8:	cmp	r3, #0
   11eac:	bne	11fe0 <abort@plt+0x11bc>
   11eb0:	ldr	r5, [sp, #52]	; 0x34
   11eb4:	cmp	sl, #2
   11eb8:	movne	fp, #0
   11ebc:	andeq	fp, r6, #1
   11ec0:	cmp	fp, #0
   11ec4:	beq	1209c <abort@plt+0x1278>
   11ec8:	b	11d54 <abort@plt+0xf30>
   11ecc:	mov	r3, #98	; 0x62
   11ed0:	ldr	r2, [sp, #24]
   11ed4:	cmp	r2, #0
   11ed8:	beq	11fe0 <abort@plt+0x11bc>
   11edc:	mov	r7, r3
   11ee0:	mov	r5, #0
   11ee4:	b	120f4 <abort@plt+0x12d0>
   11ee8:	ldr	r3, [sp, #24]
   11eec:	cmp	r3, #0
   11ef0:	beq	11fbc <abort@plt+0x1198>
   11ef4:	cmp	r6, #0
   11ef8:	bne	11c24 <abort@plt+0xe00>
   11efc:	ldr	r3, [sp, #48]	; 0x30
   11f00:	eor	r2, r3, #1
   11f04:	cmp	sl, #2
   11f08:	movne	r2, #0
   11f0c:	andeq	r2, r2, #1
   11f10:	cmp	r2, #0
   11f14:	moveq	r3, r4
   11f18:	beq	11f50 <abort@plt+0x112c>
   11f1c:	cmp	r9, r4
   11f20:	movhi	r3, #39	; 0x27
   11f24:	strbhi	r3, [r8, r4]
   11f28:	add	r3, r4, #1
   11f2c:	cmp	r9, r3
   11f30:	movhi	r1, #36	; 0x24
   11f34:	strbhi	r1, [r8, r3]
   11f38:	add	r3, r4, #2
   11f3c:	cmp	r9, r3
   11f40:	movhi	r1, #39	; 0x27
   11f44:	strbhi	r1, [r8, r3]
   11f48:	add	r3, r4, #3
   11f4c:	str	r2, [sp, #48]	; 0x30
   11f50:	cmp	r9, r3
   11f54:	movhi	r2, #92	; 0x5c
   11f58:	strbhi	r2, [r8, r3]
   11f5c:	cmp	fp, #0
   11f60:	add	r4, r3, #1
   11f64:	beq	124f4 <abort@plt+0x16d0>
   11f68:	ldr	r2, [sp, #28]
   11f6c:	ldr	r1, [sp, #36]	; 0x24
   11f70:	add	r2, r2, #1
   11f74:	cmp	r1, r2
   11f78:	bls	11fb4 <abort@plt+0x1190>
   11f7c:	ldr	r1, [sp, #44]	; 0x2c
   11f80:	mov	r7, #48	; 0x30
   11f84:	ldrb	r2, [r1, r2]
   11f88:	sub	r2, r2, #48	; 0x30
   11f8c:	cmp	r2, #9
   11f90:	movhi	r5, r6
   11f94:	bhi	1209c <abort@plt+0x1278>
   11f98:	cmp	r9, r4
   11f9c:	add	r2, r3, #2
   11fa0:	strbhi	r7, [r8, r4]
   11fa4:	cmp	r9, r2
   11fa8:	add	r4, r3, #3
   11fac:	movhi	r1, #48	; 0x30
   11fb0:	strbhi	r1, [r8, r2]
   11fb4:	mov	r5, r6
   11fb8:	b	124fc <abort@plt+0x16d8>
   11fbc:	ldr	r3, [sp, #148]	; 0x94
   11fc0:	tst	r3, #1
   11fc4:	ldreq	r5, [sp, #24]
   11fc8:	beq	12508 <abort@plt+0x16e4>
   11fcc:	ldr	r3, [sp, #28]
   11fd0:	add	r3, r3, #1
   11fd4:	b	11974 <abort@plt+0xb50>
   11fd8:	cmp	r6, #0
   11fdc:	bne	11c28 <abort@plt+0xe04>
   11fe0:	mov	r5, #0
   11fe4:	b	11e5c <abort@plt+0x1038>
   11fe8:	ldr	r3, [sp, #148]	; 0x94
   11fec:	tst	r3, #4
   11ff0:	beq	11fe0 <abort@plt+0x11bc>
   11ff4:	ldr	r3, [sp, #28]
   11ff8:	add	r2, r3, #2
   11ffc:	ldr	r3, [sp, #36]	; 0x24
   12000:	cmp	r3, r2
   12004:	bls	11fe0 <abort@plt+0x11bc>
   12008:	ldr	r3, [sp, #44]	; 0x2c
   1200c:	ldr	r1, [sp, #28]
   12010:	add	r3, r3, r1
   12014:	ldrb	r0, [r3, #1]
   12018:	cmp	r0, #63	; 0x3f
   1201c:	bne	11fe0 <abort@plt+0x11bc>
   12020:	ldr	r3, [sp, #44]	; 0x2c
   12024:	ldrb	r1, [r3, r2]
   12028:	sub	r3, r1, #33	; 0x21
   1202c:	uxtb	r3, r3
   12030:	cmp	r3, #29
   12034:	bhi	12504 <abort@plt+0x16e0>
   12038:	mov	ip, #1
   1203c:	ldr	r5, [pc, #1428]	; 125d8 <abort@plt+0x17b4>
   12040:	ands	r5, r5, ip, lsl r3
   12044:	beq	11e5c <abort@plt+0x1038>
   12048:	cmp	r6, #0
   1204c:	bne	11c28 <abort@plt+0xe04>
   12050:	add	r3, r4, #1
   12054:	cmp	r9, r4
   12058:	strbhi	r0, [r8, r4]
   1205c:	cmp	r9, r3
   12060:	movhi	r0, #34	; 0x22
   12064:	strbhi	r0, [r8, r3]
   12068:	add	r3, r4, #2
   1206c:	cmp	r9, r3
   12070:	movhi	r0, #34	; 0x22
   12074:	strbhi	r0, [r8, r3]
   12078:	add	r3, r4, #3
   1207c:	cmp	r9, r3
   12080:	add	r4, r4, #4
   12084:	mov	r5, r6
   12088:	mov	fp, r6
   1208c:	mov	r7, r1
   12090:	movhi	r0, #63	; 0x3f
   12094:	strbhi	r0, [r8, r3]
   12098:	str	r2, [sp, #28]
   1209c:	ldr	r3, [sp, #24]
   120a0:	eor	r3, r3, #1
   120a4:	cmp	sl, #2
   120a8:	orreq	r3, r3, #1
   120ac:	eor	r3, r3, #1
   120b0:	orr	r3, r6, r3
   120b4:	tst	r3, #255	; 0xff
   120b8:	beq	120e8 <abort@plt+0x12c4>
   120bc:	ldr	r3, [sp, #152]	; 0x98
   120c0:	cmp	r3, #0
   120c4:	beq	120e8 <abort@plt+0x12c4>
   120c8:	lsr	r2, r7, #5
   120cc:	ldr	r1, [sp, #152]	; 0x98
   120d0:	uxtb	r2, r2
   120d4:	and	r3, r7, #31
   120d8:	ldr	r2, [r1, r2, lsl #2]
   120dc:	lsr	r3, r2, r3
   120e0:	tst	r3, #1
   120e4:	bne	120f4 <abort@plt+0x12d0>
   120e8:	ldr	r3, [sp, #64]	; 0x40
   120ec:	cmp	r3, #0
   120f0:	beq	1218c <abort@plt+0x1368>
   120f4:	cmp	r6, #0
   120f8:	bne	11c28 <abort@plt+0xe04>
   120fc:	ldr	r3, [sp, #48]	; 0x30
   12100:	eor	r3, r3, #1
   12104:	cmp	sl, #2
   12108:	movne	r3, #0
   1210c:	andeq	r3, r3, #1
   12110:	cmp	r3, #0
   12114:	beq	1214c <abort@plt+0x1328>
   12118:	cmp	r9, r4
   1211c:	movhi	r2, #39	; 0x27
   12120:	strbhi	r2, [r8, r4]
   12124:	add	r2, r4, #1
   12128:	cmp	r9, r2
   1212c:	movhi	r1, #36	; 0x24
   12130:	strbhi	r1, [r8, r2]
   12134:	add	r2, r4, #2
   12138:	cmp	r9, r2
   1213c:	add	r4, r4, #3
   12140:	movhi	r1, #39	; 0x27
   12144:	strbhi	r1, [r8, r2]
   12148:	str	r3, [sp, #48]	; 0x30
   1214c:	cmp	r9, r4
   12150:	movhi	r3, #92	; 0x5c
   12154:	strbhi	r3, [r8, r4]
   12158:	ldr	fp, [sp, #52]	; 0x34
   1215c:	add	r4, r4, #1
   12160:	b	1218c <abort@plt+0x1368>
   12164:	mov	r3, #116	; 0x74
   12168:	b	11d40 <abort@plt+0xf1c>
   1216c:	mov	r3, #118	; 0x76
   12170:	b	11ed0 <abort@plt+0x10ac>
   12174:	cmp	sl, #2
   12178:	bne	121e8 <abort@plt+0x13c4>
   1217c:	cmp	r6, #0
   12180:	bne	11c28 <abort@plt+0xe04>
   12184:	mov	r5, r6
   12188:	mov	fp, r6
   1218c:	ldr	r3, [sp, #48]	; 0x30
   12190:	eor	fp, fp, #1
   12194:	and	fp, fp, r3
   12198:	tst	fp, #255	; 0xff
   1219c:	beq	121c8 <abort@plt+0x13a4>
   121a0:	cmp	r9, r4
   121a4:	movhi	r3, #39	; 0x27
   121a8:	strbhi	r3, [r8, r4]
   121ac:	add	r3, r4, #1
   121b0:	cmp	r9, r3
   121b4:	movhi	r2, #39	; 0x27
   121b8:	add	r4, r4, #2
   121bc:	strbhi	r2, [r8, r3]
   121c0:	mov	r3, #0
   121c4:	str	r3, [sp, #48]	; 0x30
   121c8:	cmp	r9, r4
   121cc:	strbhi	r7, [r8, r4]
   121d0:	ldr	r3, [sp, #72]	; 0x48
   121d4:	cmp	r5, #0
   121d8:	moveq	r3, #0
   121dc:	add	r4, r4, #1
   121e0:	str	r3, [sp, #72]	; 0x48
   121e4:	b	11fcc <abort@plt+0x11a8>
   121e8:	ldr	r3, [sp, #24]
   121ec:	and	r3, r3, r6
   121f0:	tst	r5, r3
   121f4:	moveq	r3, r7
   121f8:	beq	11d40 <abort@plt+0xf1c>
   121fc:	mov	fp, #0
   12200:	mov	r5, fp
   12204:	b	1218c <abort@plt+0x1368>
   12208:	mov	r3, #110	; 0x6e
   1220c:	b	11d40 <abort@plt+0xf1c>
   12210:	mov	r3, #97	; 0x61
   12214:	b	11ed0 <abort@plt+0x10ac>
   12218:	mov	r3, #102	; 0x66
   1221c:	b	11ed0 <abort@plt+0x10ac>
   12220:	ldr	r3, [sp, #36]	; 0x24
   12224:	cmn	r3, #1
   12228:	bne	12248 <abort@plt+0x1424>
   1222c:	ldr	r3, [sp, #44]	; 0x2c
   12230:	ldrb	r3, [r3, #1]
   12234:	adds	r3, r3, #0
   12238:	movne	r3, #1
   1223c:	cmp	r3, #0
   12240:	bne	11fe0 <abort@plt+0x11bc>
   12244:	b	11ea4 <abort@plt+0x1080>
   12248:	ldr	r3, [sp, #36]	; 0x24
   1224c:	subs	r3, r3, #1
   12250:	b	12238 <abort@plt+0x1414>
   12254:	mov	r3, #0
   12258:	str	r3, [sp, #96]	; 0x60
   1225c:	str	r3, [sp, #100]	; 0x64
   12260:	ldr	r3, [sp, #36]	; 0x24
   12264:	cmn	r3, #1
   12268:	bne	12278 <abort@plt+0x1454>
   1226c:	ldr	r0, [sp, #44]	; 0x2c
   12270:	bl	10d4c <strlen@plt>
   12274:	str	r0, [sp, #36]	; 0x24
   12278:	ldr	r5, [sp, #52]	; 0x34
   1227c:	mov	r3, #0
   12280:	str	r3, [sp, #56]	; 0x38
   12284:	ldr	r3, [sp, #28]
   12288:	ldr	r2, [sp, #56]	; 0x38
   1228c:	ldr	r1, [sp, #36]	; 0x24
   12290:	add	r2, r3, r2
   12294:	ldr	r3, [sp, #44]	; 0x2c
   12298:	add	r0, sp, #92	; 0x5c
   1229c:	add	fp, r3, r2
   122a0:	sub	r2, r1, r2
   122a4:	add	r3, sp, #96	; 0x60
   122a8:	mov	r1, fp
   122ac:	bl	13ccc <abort@plt+0x2ea8>
   122b0:	subs	r2, r0, #0
   122b4:	beq	122f4 <abort@plt+0x14d0>
   122b8:	cmn	r2, #1
   122bc:	beq	124cc <abort@plt+0x16a8>
   122c0:	cmn	r2, #2
   122c4:	bne	1243c <abort@plt+0x1618>
   122c8:	ldr	r2, [sp, #56]	; 0x38
   122cc:	ldr	r3, [sp, #28]
   122d0:	add	r3, r3, r2
   122d4:	ldr	r2, [sp, #36]	; 0x24
   122d8:	cmp	r2, r3
   122dc:	bls	124cc <abort@plt+0x16a8>
   122e0:	ldr	r3, [sp, #80]	; 0x50
   122e4:	ldr	r2, [sp, #56]	; 0x38
   122e8:	ldrb	r5, [r3, r2]
   122ec:	cmp	r5, #0
   122f0:	bne	1242c <abort@plt+0x1608>
   122f4:	ldr	r3, [sp, #56]	; 0x38
   122f8:	cmp	r3, #1
   122fc:	bls	11d04 <abort@plt+0xee0>
   12300:	ldr	r2, [sp, #56]	; 0x38
   12304:	ldr	r3, [sp, #28]
   12308:	mov	fp, #0
   1230c:	add	r3, r3, r2
   12310:	ldr	r2, [sp, #24]
   12314:	str	r3, [sp, #52]	; 0x34
   12318:	eor	r3, r5, #1
   1231c:	and	r3, r3, r2
   12320:	mov	ip, #92	; 0x5c
   12324:	uxtb	r3, r3
   12328:	mov	r2, #39	; 0x27
   1232c:	cmp	r3, #0
   12330:	beq	124d4 <abort@plt+0x16b0>
   12334:	cmp	r6, #0
   12338:	bne	11c24 <abort@plt+0xe00>
   1233c:	ldr	r1, [sp, #48]	; 0x30
   12340:	eor	r1, r1, #1
   12344:	cmp	sl, #2
   12348:	movne	r1, #0
   1234c:	andeq	r1, r1, #1
   12350:	cmp	r1, #0
   12354:	beq	12384 <abort@plt+0x1560>
   12358:	add	r0, r4, #1
   1235c:	cmp	r9, r4
   12360:	strbhi	r2, [r8, r4]
   12364:	cmp	r9, r0
   12368:	movhi	lr, #36	; 0x24
   1236c:	strbhi	lr, [r8, r0]
   12370:	add	r0, r4, #2
   12374:	add	r4, r4, #3
   12378:	cmp	r9, r0
   1237c:	strbhi	r2, [r8, r0]
   12380:	str	r1, [sp, #48]	; 0x30
   12384:	add	r0, r4, #1
   12388:	cmp	r9, r4
   1238c:	strbhi	ip, [r8, r4]
   12390:	cmp	r9, r0
   12394:	lsrhi	r1, r7, #6
   12398:	addhi	r1, r1, #48	; 0x30
   1239c:	strbhi	r1, [r8, r0]
   123a0:	add	r0, r4, #2
   123a4:	cmp	r9, r0
   123a8:	lsrhi	r1, r7, #3
   123ac:	and	r7, r7, #7
   123b0:	andhi	r1, r1, #7
   123b4:	add	r4, r4, #3
   123b8:	add	r7, r7, #48	; 0x30
   123bc:	mov	fp, r3
   123c0:	addhi	r1, r1, #48	; 0x30
   123c4:	strbhi	r1, [r8, r0]
   123c8:	ldr	r1, [sp, #28]
   123cc:	ldr	r0, [sp, #52]	; 0x34
   123d0:	add	r1, r1, #1
   123d4:	cmp	r0, r1
   123d8:	bls	1218c <abort@plt+0x1368>
   123dc:	ldr	lr, [sp, #48]	; 0x30
   123e0:	eor	r0, fp, #1
   123e4:	and	r0, r0, lr
   123e8:	tst	r0, #255	; 0xff
   123ec:	beq	12410 <abort@plt+0x15ec>
   123f0:	add	r0, r4, #1
   123f4:	cmp	r9, r4
   123f8:	strbhi	r2, [r8, r4]
   123fc:	cmp	r9, r0
   12400:	add	r4, r4, #2
   12404:	strbhi	r2, [r8, r0]
   12408:	mov	r0, #0
   1240c:	str	r0, [sp, #48]	; 0x30
   12410:	ldr	r0, [sp, #44]	; 0x2c
   12414:	cmp	r9, r4
   12418:	strbhi	r7, [r8, r4]
   1241c:	str	r1, [sp, #28]
   12420:	add	r4, r4, #1
   12424:	ldrb	r7, [r0, r1]
   12428:	b	1232c <abort@plt+0x1508>
   1242c:	ldr	r3, [sp, #56]	; 0x38
   12430:	add	r3, r3, #1
   12434:	str	r3, [sp, #56]	; 0x38
   12438:	b	122c8 <abort@plt+0x14a4>
   1243c:	cmp	sl, #2
   12440:	movne	r3, #0
   12444:	andeq	r3, r6, #1
   12448:	cmp	r3, #0
   1244c:	movne	r1, #1
   12450:	bne	124ac <abort@plt+0x1688>
   12454:	ldr	r0, [sp, #92]	; 0x5c
   12458:	str	r2, [sp, #84]	; 0x54
   1245c:	bl	10ca4 <iswprint@plt>
   12460:	ldr	r3, [sp, #56]	; 0x38
   12464:	ldr	r2, [sp, #84]	; 0x54
   12468:	add	r3, r3, r2
   1246c:	str	r3, [sp, #56]	; 0x38
   12470:	cmp	r0, #0
   12474:	add	r0, sp, #96	; 0x60
   12478:	moveq	r5, #0
   1247c:	bl	10c5c <mbsinit@plt>
   12480:	cmp	r0, #0
   12484:	beq	12284 <abort@plt+0x1460>
   12488:	b	122f4 <abort@plt+0x14d0>
   1248c:	ldrb	r3, [fp, r1]
   12490:	cmp	r3, #94	; 0x5e
   12494:	beq	11d54 <abort@plt+0xf30>
   12498:	bhi	124b8 <abort@plt+0x1694>
   1249c:	sub	r3, r3, #91	; 0x5b
   124a0:	cmp	r3, #1
   124a4:	bls	11d54 <abort@plt+0xf30>
   124a8:	add	r1, r1, #1
   124ac:	cmp	r1, r2
   124b0:	bne	1248c <abort@plt+0x1668>
   124b4:	b	12454 <abort@plt+0x1630>
   124b8:	cmp	r3, #96	; 0x60
   124bc:	beq	11d54 <abort@plt+0xf30>
   124c0:	cmp	r3, #124	; 0x7c
   124c4:	bne	124a8 <abort@plt+0x1684>
   124c8:	b	11d54 <abort@plt+0xf30>
   124cc:	mov	r5, #0
   124d0:	b	122f4 <abort@plt+0x14d0>
   124d4:	ldr	r1, [sp, #64]	; 0x40
   124d8:	cmp	r1, #0
   124dc:	beq	123c8 <abort@plt+0x15a4>
   124e0:	cmp	r9, r4
   124e4:	strbhi	ip, [r8, r4]
   124e8:	str	r3, [sp, #64]	; 0x40
   124ec:	add	r4, r4, #1
   124f0:	b	123c8 <abort@plt+0x15a4>
   124f4:	mov	r5, fp
   124f8:	ldr	fp, [sp, #24]
   124fc:	mov	r7, #48	; 0x30
   12500:	b	1209c <abort@plt+0x1278>
   12504:	mov	r5, #0
   12508:	mov	fp, r5
   1250c:	b	1209c <abort@plt+0x1278>
   12510:	ldr	r3, [sp, #36]	; 0x24
   12514:	ldr	r2, [sp, #28]
   12518:	subs	r3, r3, r2
   1251c:	movne	r3, #1
   12520:	b	11998 <abort@plt+0xb74>
   12524:	ldr	r3, [sp, #60]	; 0x3c
   12528:	clz	r7, r9
   1252c:	cmp	r3, #0
   12530:	lsr	r7, r7, #5
   12534:	moveq	r7, #0
   12538:	cmp	r7, #0
   1253c:	mov	r5, r3
   12540:	bne	118f8 <abort@plt+0xad4>
   12544:	ldr	r3, [sp, #68]	; 0x44
   12548:	ldr	r2, [sp, #40]	; 0x28
   1254c:	cmp	r2, #0
   12550:	moveq	r3, #0
   12554:	andne	r3, r3, #1
   12558:	cmp	r3, #0
   1255c:	movne	r3, r2
   12560:	subne	r2, r3, #1
   12564:	bne	12594 <abort@plt+0x1770>
   12568:	cmp	r9, r4
   1256c:	movhi	r3, #0
   12570:	strbhi	r3, [r8, r4]
   12574:	mov	r0, r4
   12578:	add	sp, sp, #108	; 0x6c
   1257c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12580:	mov	r3, r2
   12584:	b	12548 <abort@plt+0x1724>
   12588:	cmp	r9, r4
   1258c:	strbhi	r3, [r8, r4]
   12590:	add	r4, r4, #1
   12594:	ldrb	r3, [r2, #1]!
   12598:	cmp	r3, #0
   1259c:	bne	12588 <abort@plt+0x1764>
   125a0:	b	12568 <abort@plt+0x1744>
   125a4:	ldr	r3, [pc, #32]	; 125cc <abort@plt+0x17a8>
   125a8:	mov	r6, #1
   125ac:	str	r6, [sp, #24]
   125b0:	str	r6, [sp, #32]
   125b4:	str	r3, [sp, #40]	; 0x28
   125b8:	mov	r4, #0
   125bc:	mov	sl, #5
   125c0:	b	11968 <abort@plt+0xb44>
   125c4:	mov	r6, #1
   125c8:	b	11b5c <abort@plt+0xd38>
   125cc:	ldrdeq	r4, [r1], -pc	; <UNPREDICTABLE>
   125d0:	andeq	r4, r1, r3, ror #15
   125d4:	andeq	r4, r1, r1, ror #15
   125d8:	stmdacc	r0, {r0, r6, r7, r8, ip, lr}
   125dc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   125e0:	sub	sp, sp, #52	; 0x34
   125e4:	mov	r6, r0
   125e8:	mov	r5, r3
   125ec:	mov	r8, r1
   125f0:	mov	r9, r2
   125f4:	bl	10d58 <__errno_location@plt>
   125f8:	ldr	r7, [pc, #380]	; 1277c <abort@plt+0x1958>
   125fc:	cmn	r6, #-2147483647	; 0x80000001
   12600:	ldr	r4, [r7]
   12604:	ldr	r3, [r0]
   12608:	str	r0, [sp, #24]
   1260c:	str	r3, [sp, #32]
   12610:	movne	r3, #0
   12614:	moveq	r3, #1
   12618:	orrs	r3, r3, r6, lsr #31
   1261c:	beq	12624 <abort@plt+0x1800>
   12620:	bl	10e24 <abort@plt>
   12624:	ldr	r2, [r7, #4]
   12628:	cmp	r6, r2
   1262c:	blt	1269c <abort@plt+0x1878>
   12630:	add	r1, sp, #48	; 0x30
   12634:	add	sl, r7, #8
   12638:	str	r2, [r1, #-4]!
   1263c:	cmp	r4, sl
   12640:	mov	r3, #8
   12644:	sub	r2, r6, r2
   12648:	movne	r0, r4
   1264c:	str	r3, [sp]
   12650:	add	r2, r2, #1
   12654:	mvn	r3, #-2147483648	; 0x80000000
   12658:	moveq	r0, #0
   1265c:	bl	13370 <abort@plt+0x254c>
   12660:	cmp	r4, sl
   12664:	ldr	r2, [sp, #44]	; 0x2c
   12668:	mov	fp, r0
   1266c:	str	r0, [r7]
   12670:	ldmeq	r4, {r0, r1}
   12674:	mov	r4, fp
   12678:	stmeq	fp, {r0, r1}
   1267c:	ldr	r0, [r7, #4]
   12680:	mov	r1, #0
   12684:	sub	r2, r2, r0
   12688:	add	r0, fp, r0, lsl #3
   1268c:	lsl	r2, r2, #3
   12690:	bl	10d70 <memset@plt>
   12694:	ldr	r3, [sp, #44]	; 0x2c
   12698:	str	r3, [r7, #4]
   1269c:	ldr	r3, [r5, #4]
   126a0:	add	sl, r4, r6, lsl #3
   126a4:	orr	r3, r3, #1
   126a8:	str	r3, [sp, #28]
   126ac:	add	r3, r5, #8
   126b0:	str	r3, [sp, #36]	; 0x24
   126b4:	ldr	r3, [r5, #44]	; 0x2c
   126b8:	ldr	fp, [r4, r6, lsl #3]
   126bc:	ldr	r7, [sl, #4]
   126c0:	str	r3, [sp, #16]
   126c4:	ldr	r3, [r5, #40]	; 0x28
   126c8:	mov	r2, r8
   126cc:	str	r3, [sp, #12]
   126d0:	add	r3, r5, #8
   126d4:	str	r3, [sp, #8]
   126d8:	ldr	r3, [sp, #28]
   126dc:	mov	r1, fp
   126e0:	str	r3, [sp, #4]
   126e4:	ldr	r3, [r5]
   126e8:	mov	r0, r7
   126ec:	str	r3, [sp]
   126f0:	mov	r3, r9
   126f4:	bl	118a8 <abort@plt+0xa84>
   126f8:	cmp	fp, r0
   126fc:	bhi	12764 <abort@plt+0x1940>
   12700:	ldr	r3, [pc, #120]	; 12780 <abort@plt+0x195c>
   12704:	add	fp, r0, #1
   12708:	cmp	r7, r3
   1270c:	str	fp, [r4, r6, lsl #3]
   12710:	beq	1271c <abort@plt+0x18f8>
   12714:	mov	r0, r7
   12718:	bl	13bb0 <abort@plt+0x2d8c>
   1271c:	mov	r0, fp
   12720:	bl	13228 <abort@plt+0x2404>
   12724:	ldr	r3, [r5, #44]	; 0x2c
   12728:	mov	r2, r8
   1272c:	mov	r1, fp
   12730:	str	r0, [sl, #4]
   12734:	str	r3, [sp, #16]
   12738:	ldr	r3, [r5, #40]	; 0x28
   1273c:	mov	r7, r0
   12740:	str	r3, [sp, #12]
   12744:	add	r3, r5, #8
   12748:	str	r3, [sp, #8]
   1274c:	ldr	r3, [sp, #28]
   12750:	str	r3, [sp, #4]
   12754:	ldr	r3, [r5]
   12758:	str	r3, [sp]
   1275c:	mov	r3, r9
   12760:	bl	118a8 <abort@plt+0xa84>
   12764:	ldr	r3, [sp, #24]
   12768:	ldr	r2, [sp, #32]
   1276c:	mov	r0, r7
   12770:	str	r2, [r3]
   12774:	add	sp, sp, #52	; 0x34
   12778:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1277c:	andeq	r5, r2, r4, ror #1
   12780:	andeq	r5, r2, r4, asr r1
   12784:	push	{r4, r5, r6, lr}
   12788:	mov	r5, r0
   1278c:	bl	10d58 <__errno_location@plt>
   12790:	cmp	r5, #0
   12794:	mov	r1, #48	; 0x30
   12798:	ldr	r6, [r0]
   1279c:	mov	r4, r0
   127a0:	ldr	r0, [pc, #12]	; 127b4 <abort@plt+0x1990>
   127a4:	movne	r0, r5
   127a8:	bl	13604 <abort@plt+0x27e0>
   127ac:	str	r6, [r4]
   127b0:	pop	{r4, r5, r6, pc}
   127b4:	andeq	r5, r2, r4, asr r2
   127b8:	ldr	r3, [pc, #12]	; 127cc <abort@plt+0x19a8>
   127bc:	cmp	r0, #0
   127c0:	moveq	r0, r3
   127c4:	ldr	r0, [r0]
   127c8:	bx	lr
   127cc:	andeq	r5, r2, r4, asr r2
   127d0:	ldr	r3, [pc, #12]	; 127e4 <abort@plt+0x19c0>
   127d4:	cmp	r0, #0
   127d8:	moveq	r0, r3
   127dc:	str	r1, [r0]
   127e0:	bx	lr
   127e4:	andeq	r5, r2, r4, asr r2
   127e8:	ldr	r3, [pc, #52]	; 12824 <abort@plt+0x1a00>
   127ec:	cmp	r0, #0
   127f0:	moveq	r0, r3
   127f4:	add	r3, r0, #8
   127f8:	push	{lr}		; (str lr, [sp, #-4]!)
   127fc:	lsr	lr, r1, #5
   12800:	and	r1, r1, #31
   12804:	ldr	ip, [r3, lr, lsl #2]
   12808:	lsr	r0, ip, r1
   1280c:	eor	r2, r2, r0
   12810:	and	r2, r2, #1
   12814:	and	r0, r0, #1
   12818:	eor	r1, ip, r2, lsl r1
   1281c:	str	r1, [r3, lr, lsl #2]
   12820:	pop	{pc}		; (ldr pc, [sp], #4)
   12824:	andeq	r5, r2, r4, asr r2
   12828:	ldr	r3, [pc, #16]	; 12840 <abort@plt+0x1a1c>
   1282c:	cmp	r0, #0
   12830:	movne	r3, r0
   12834:	ldr	r0, [r3, #4]
   12838:	str	r1, [r3, #4]
   1283c:	bx	lr
   12840:	andeq	r5, r2, r4, asr r2
   12844:	ldr	r3, [pc, #44]	; 12878 <abort@plt+0x1a54>
   12848:	cmp	r0, #0
   1284c:	moveq	r0, r3
   12850:	mov	r3, #10
   12854:	cmp	r2, #0
   12858:	cmpne	r1, #0
   1285c:	str	r3, [r0]
   12860:	bne	1286c <abort@plt+0x1a48>
   12864:	push	{r4, lr}
   12868:	bl	10e24 <abort@plt>
   1286c:	str	r1, [r0, #40]	; 0x28
   12870:	str	r2, [r0, #44]	; 0x2c
   12874:	bx	lr
   12878:	andeq	r5, r2, r4, asr r2
   1287c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12880:	sub	sp, sp, #24
   12884:	mov	sl, r3
   12888:	ldr	r4, [sp, #56]	; 0x38
   1288c:	ldr	r3, [pc, #100]	; 128f8 <abort@plt+0x1ad4>
   12890:	cmp	r4, #0
   12894:	moveq	r4, r3
   12898:	mov	r7, r0
   1289c:	mov	r8, r1
   128a0:	mov	r9, r2
   128a4:	bl	10d58 <__errno_location@plt>
   128a8:	ldr	r3, [r4, #44]	; 0x2c
   128ac:	mov	r2, r9
   128b0:	mov	r1, r8
   128b4:	ldr	r6, [r0]
   128b8:	str	r3, [sp, #16]
   128bc:	ldr	r3, [r4, #40]	; 0x28
   128c0:	mov	r5, r0
   128c4:	str	r3, [sp, #12]
   128c8:	add	r3, r4, #8
   128cc:	str	r3, [sp, #8]
   128d0:	ldr	r3, [r4, #4]
   128d4:	mov	r0, r7
   128d8:	str	r3, [sp, #4]
   128dc:	ldr	r3, [r4]
   128e0:	str	r3, [sp]
   128e4:	mov	r3, sl
   128e8:	bl	118a8 <abort@plt+0xa84>
   128ec:	str	r6, [r5]
   128f0:	add	sp, sp, #24
   128f4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   128f8:	andeq	r5, r2, r4, asr r2
   128fc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12900:	cmp	r3, #0
   12904:	sub	sp, sp, #44	; 0x2c
   12908:	ldr	r4, [pc, #188]	; 129cc <abort@plt+0x1ba8>
   1290c:	mov	r6, r2
   12910:	movne	r4, r3
   12914:	mov	sl, r1
   12918:	mov	r9, r0
   1291c:	bl	10d58 <__errno_location@plt>
   12920:	ldr	r5, [r4, #4]
   12924:	add	fp, r4, #8
   12928:	cmp	r6, #0
   1292c:	orreq	r5, r5, #1
   12930:	mov	r1, #0
   12934:	mov	r2, r9
   12938:	ldr	r3, [r0]
   1293c:	mov	r8, r0
   12940:	str	r3, [sp, #28]
   12944:	ldr	r3, [r4, #44]	; 0x2c
   12948:	mov	r0, r1
   1294c:	str	r3, [sp, #16]
   12950:	ldr	r3, [r4, #40]	; 0x28
   12954:	stmib	sp, {r5, fp}
   12958:	str	r3, [sp, #12]
   1295c:	ldr	r3, [r4]
   12960:	str	r3, [sp]
   12964:	mov	r3, sl
   12968:	bl	118a8 <abort@plt+0xa84>
   1296c:	add	r1, r0, #1
   12970:	mov	r7, r0
   12974:	mov	r0, r1
   12978:	str	r1, [sp, #36]	; 0x24
   1297c:	bl	13228 <abort@plt+0x2404>
   12980:	ldr	r3, [r4, #44]	; 0x2c
   12984:	mov	r2, r9
   12988:	str	r3, [sp, #16]
   1298c:	ldr	r3, [r4, #40]	; 0x28
   12990:	stmib	sp, {r5, fp}
   12994:	str	r3, [sp, #12]
   12998:	ldr	r3, [r4]
   1299c:	ldr	r1, [sp, #36]	; 0x24
   129a0:	str	r3, [sp]
   129a4:	mov	r3, sl
   129a8:	str	r0, [sp, #32]
   129ac:	bl	118a8 <abort@plt+0xa84>
   129b0:	ldr	r3, [sp, #28]
   129b4:	cmp	r6, #0
   129b8:	str	r3, [r8]
   129bc:	ldr	r0, [sp, #32]
   129c0:	strne	r7, [r6]
   129c4:	add	sp, sp, #44	; 0x2c
   129c8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   129cc:	andeq	r5, r2, r4, asr r2
   129d0:	mov	r3, r2
   129d4:	mov	r2, #0
   129d8:	b	128fc <abort@plt+0x1ad8>
   129dc:	push	{r4, r5, r6, r7, r8, lr}
   129e0:	mov	r6, #1
   129e4:	ldr	r4, [pc, #104]	; 12a54 <abort@plt+0x1c30>
   129e8:	ldr	r5, [r4]
   129ec:	add	r7, r5, #12
   129f0:	ldr	r3, [r4, #4]
   129f4:	add	r7, r7, #8
   129f8:	cmp	r6, r3
   129fc:	blt	12a44 <abort@plt+0x1c20>
   12a00:	ldr	r0, [r5, #4]
   12a04:	ldr	r6, [pc, #76]	; 12a58 <abort@plt+0x1c34>
   12a08:	cmp	r0, r6
   12a0c:	beq	12a20 <abort@plt+0x1bfc>
   12a10:	bl	13bb0 <abort@plt+0x2d8c>
   12a14:	mov	r3, #256	; 0x100
   12a18:	str	r3, [r4, #8]
   12a1c:	str	r6, [r4, #12]
   12a20:	ldr	r6, [pc, #52]	; 12a5c <abort@plt+0x1c38>
   12a24:	cmp	r5, r6
   12a28:	beq	12a38 <abort@plt+0x1c14>
   12a2c:	mov	r0, r5
   12a30:	bl	13bb0 <abort@plt+0x2d8c>
   12a34:	str	r6, [r4]
   12a38:	mov	r3, #1
   12a3c:	str	r3, [r4, #4]
   12a40:	pop	{r4, r5, r6, r7, r8, pc}
   12a44:	ldr	r0, [r7, #-8]
   12a48:	bl	13bb0 <abort@plt+0x2d8c>
   12a4c:	add	r6, r6, #1
   12a50:	b	129f0 <abort@plt+0x1bcc>
   12a54:	andeq	r5, r2, r4, ror #1
   12a58:	andeq	r5, r2, r4, asr r1
   12a5c:	andeq	r5, r2, ip, ror #1
   12a60:	ldr	r3, [pc, #4]	; 12a6c <abort@plt+0x1c48>
   12a64:	mvn	r2, #0
   12a68:	b	125dc <abort@plt+0x17b8>
   12a6c:	andeq	r5, r2, r4, asr r2
   12a70:	ldr	r3, [pc]	; 12a78 <abort@plt+0x1c54>
   12a74:	b	125dc <abort@plt+0x17b8>
   12a78:	andeq	r5, r2, r4, asr r2
   12a7c:	mov	r1, r0
   12a80:	mov	r0, #0
   12a84:	b	12a60 <abort@plt+0x1c3c>
   12a88:	mov	r2, r1
   12a8c:	mov	r1, r0
   12a90:	mov	r0, #0
   12a94:	b	12a70 <abort@plt+0x1c4c>
   12a98:	push	{r4, r5, lr}
   12a9c:	sub	sp, sp, #52	; 0x34
   12aa0:	mov	r5, r2
   12aa4:	mov	r4, r0
   12aa8:	mov	r0, sp
   12aac:	bl	11764 <abort@plt+0x940>
   12ab0:	mov	r3, sp
   12ab4:	mvn	r2, #0
   12ab8:	mov	r1, r5
   12abc:	mov	r0, r4
   12ac0:	bl	125dc <abort@plt+0x17b8>
   12ac4:	add	sp, sp, #52	; 0x34
   12ac8:	pop	{r4, r5, pc}
   12acc:	push	{r4, r5, r6, lr}
   12ad0:	sub	sp, sp, #48	; 0x30
   12ad4:	mov	r5, r2
   12ad8:	mov	r6, r3
   12adc:	mov	r4, r0
   12ae0:	mov	r0, sp
   12ae4:	bl	11764 <abort@plt+0x940>
   12ae8:	mov	r3, sp
   12aec:	mov	r2, r6
   12af0:	mov	r1, r5
   12af4:	mov	r0, r4
   12af8:	bl	125dc <abort@plt+0x17b8>
   12afc:	add	sp, sp, #48	; 0x30
   12b00:	pop	{r4, r5, r6, pc}
   12b04:	mov	r2, r1
   12b08:	mov	r1, r0
   12b0c:	mov	r0, #0
   12b10:	b	12a98 <abort@plt+0x1c74>
   12b14:	mov	r3, r2
   12b18:	mov	r2, r1
   12b1c:	mov	r1, r0
   12b20:	mov	r0, #0
   12b24:	b	12acc <abort@plt+0x1ca8>
   12b28:	push	{r4, r5, r6, lr}
   12b2c:	mov	r4, r0
   12b30:	ldr	lr, [pc, #80]	; 12b88 <abort@plt+0x1d64>
   12b34:	mov	r5, r1
   12b38:	mov	r6, r2
   12b3c:	ldm	lr!, {r0, r1, r2, r3}
   12b40:	sub	sp, sp, #48	; 0x30
   12b44:	mov	ip, sp
   12b48:	stmia	ip!, {r0, r1, r2, r3}
   12b4c:	ldm	lr!, {r0, r1, r2, r3}
   12b50:	stmia	ip!, {r0, r1, r2, r3}
   12b54:	ldm	lr, {r0, r1, r2, r3}
   12b58:	stm	ip, {r0, r1, r2, r3}
   12b5c:	mov	r1, r6
   12b60:	mov	r2, #1
   12b64:	mov	r0, sp
   12b68:	bl	127e8 <abort@plt+0x19c4>
   12b6c:	mov	r3, sp
   12b70:	mov	r2, r5
   12b74:	mov	r1, r4
   12b78:	mov	r0, #0
   12b7c:	bl	125dc <abort@plt+0x17b8>
   12b80:	add	sp, sp, #48	; 0x30
   12b84:	pop	{r4, r5, r6, pc}
   12b88:	andeq	r5, r2, r4, asr r2
   12b8c:	mov	r2, r1
   12b90:	mvn	r1, #0
   12b94:	b	12b28 <abort@plt+0x1d04>
   12b98:	mov	r1, #58	; 0x3a
   12b9c:	b	12b8c <abort@plt+0x1d68>
   12ba0:	mov	r2, #58	; 0x3a
   12ba4:	b	12b28 <abort@plt+0x1d04>
   12ba8:	push	{r4, r5, lr}
   12bac:	sub	sp, sp, #100	; 0x64
   12bb0:	mov	r4, r0
   12bb4:	mov	r0, sp
   12bb8:	mov	r5, r2
   12bbc:	bl	11764 <abort@plt+0x940>
   12bc0:	mov	ip, sp
   12bc4:	add	lr, sp, #48	; 0x30
   12bc8:	ldm	ip!, {r0, r1, r2, r3}
   12bcc:	stmia	lr!, {r0, r1, r2, r3}
   12bd0:	ldm	ip!, {r0, r1, r2, r3}
   12bd4:	stmia	lr!, {r0, r1, r2, r3}
   12bd8:	ldm	ip, {r0, r1, r2, r3}
   12bdc:	stm	lr, {r0, r1, r2, r3}
   12be0:	mov	r2, #1
   12be4:	mov	r1, #58	; 0x3a
   12be8:	add	r0, sp, #48	; 0x30
   12bec:	bl	127e8 <abort@plt+0x19c4>
   12bf0:	add	r3, sp, #48	; 0x30
   12bf4:	mvn	r2, #0
   12bf8:	mov	r1, r5
   12bfc:	mov	r0, r4
   12c00:	bl	125dc <abort@plt+0x17b8>
   12c04:	add	sp, sp, #100	; 0x64
   12c08:	pop	{r4, r5, pc}
   12c0c:	push	{r4, r5, r6, r7, lr}
   12c10:	mov	r4, r0
   12c14:	ldr	lr, [pc, #84]	; 12c70 <abort@plt+0x1e4c>
   12c18:	mov	r6, r1
   12c1c:	mov	r7, r2
   12c20:	mov	r5, r3
   12c24:	ldm	lr!, {r0, r1, r2, r3}
   12c28:	sub	sp, sp, #52	; 0x34
   12c2c:	mov	ip, sp
   12c30:	stmia	ip!, {r0, r1, r2, r3}
   12c34:	ldm	lr!, {r0, r1, r2, r3}
   12c38:	stmia	ip!, {r0, r1, r2, r3}
   12c3c:	ldm	lr, {r0, r1, r2, r3}
   12c40:	stm	ip, {r0, r1, r2, r3}
   12c44:	mov	r2, r7
   12c48:	mov	r1, r6
   12c4c:	mov	r0, sp
   12c50:	bl	12844 <abort@plt+0x1a20>
   12c54:	mov	r3, sp
   12c58:	ldr	r2, [sp, #72]	; 0x48
   12c5c:	mov	r1, r5
   12c60:	mov	r0, r4
   12c64:	bl	125dc <abort@plt+0x17b8>
   12c68:	add	sp, sp, #52	; 0x34
   12c6c:	pop	{r4, r5, r6, r7, pc}
   12c70:	andeq	r5, r2, r4, asr r2
   12c74:	mvn	ip, #0
   12c78:	push	{r0, r1, r2, lr}
   12c7c:	str	ip, [sp]
   12c80:	bl	12c0c <abort@plt+0x1de8>
   12c84:	add	sp, sp, #12
   12c88:	pop	{pc}		; (ldr pc, [sp], #4)
   12c8c:	mov	r3, r2
   12c90:	mov	r2, r1
   12c94:	mov	r1, r0
   12c98:	mov	r0, #0
   12c9c:	b	12c74 <abort@plt+0x1e50>
   12ca0:	push	{r0, r1, r2, lr}
   12ca4:	str	r3, [sp]
   12ca8:	mov	r3, r2
   12cac:	mov	r2, r1
   12cb0:	mov	r1, r0
   12cb4:	mov	r0, #0
   12cb8:	bl	12c0c <abort@plt+0x1de8>
   12cbc:	add	sp, sp, #12
   12cc0:	pop	{pc}		; (ldr pc, [sp], #4)
   12cc4:	ldr	r3, [pc]	; 12ccc <abort@plt+0x1ea8>
   12cc8:	b	125dc <abort@plt+0x17b8>
   12ccc:	strdeq	r5, [r2], -r4
   12cd0:	mov	r2, r1
   12cd4:	mov	r1, r0
   12cd8:	mov	r0, #0
   12cdc:	b	12cc4 <abort@plt+0x1ea0>
   12ce0:	mvn	r2, #0
   12ce4:	b	12cc4 <abort@plt+0x1ea0>
   12ce8:	mov	r1, r0
   12cec:	mov	r0, #0
   12cf0:	b	12ce0 <abort@plt+0x1ebc>
   12cf4:	push	{r4, r5, r6, lr}
   12cf8:	sub	sp, sp, #32
   12cfc:	cmp	r1, #0
   12d00:	mov	r5, r0
   12d04:	ldr	r4, [sp, #48]	; 0x30
   12d08:	ldr	r6, [sp, #52]	; 0x34
   12d0c:	beq	12dc0 <abort@plt+0x1f9c>
   12d10:	stm	sp, {r2, r3}
   12d14:	mov	r3, r1
   12d18:	ldr	r2, [pc, #860]	; 1307c <abort@plt+0x2258>
   12d1c:	mov	r1, #1
   12d20:	bl	10da0 <__fprintf_chk@plt>
   12d24:	mov	r2, #5
   12d28:	ldr	r1, [pc, #848]	; 13080 <abort@plt+0x225c>
   12d2c:	mov	r0, #0
   12d30:	bl	10c80 <dcgettext@plt>
   12d34:	ldr	r3, [pc, #840]	; 13084 <abort@plt+0x2260>
   12d38:	ldr	r2, [pc, #840]	; 13088 <abort@plt+0x2264>
   12d3c:	str	r3, [sp]
   12d40:	mov	r1, #1
   12d44:	mov	r3, r0
   12d48:	mov	r0, r5
   12d4c:	bl	10da0 <__fprintf_chk@plt>
   12d50:	mov	r1, r5
   12d54:	mov	r0, #10
   12d58:	bl	10c74 <fputc_unlocked@plt>
   12d5c:	mov	r2, #5
   12d60:	ldr	r1, [pc, #804]	; 1308c <abort@plt+0x2268>
   12d64:	mov	r0, #0
   12d68:	bl	10c80 <dcgettext@plt>
   12d6c:	mov	r1, #1
   12d70:	ldr	r3, [pc, #792]	; 13090 <abort@plt+0x226c>
   12d74:	mov	r2, r0
   12d78:	mov	r0, r5
   12d7c:	bl	10da0 <__fprintf_chk@plt>
   12d80:	mov	r1, r5
   12d84:	mov	r0, #10
   12d88:	bl	10c74 <fputc_unlocked@plt>
   12d8c:	cmp	r6, #9
   12d90:	ldrls	pc, [pc, r6, lsl #2]
   12d94:	b	13070 <abort@plt+0x224c>
   12d98:			; <UNDEFINED> instruction: 0x00012eb0
   12d9c:	ldrdeq	r2, [r1], -r8
   12da0:	andeq	r2, r1, r4, lsl #28
   12da4:	andeq	r2, r1, r8, lsr lr
   12da8:	andeq	r2, r1, r4, ror lr
   12dac:			; <UNDEFINED> instruction: 0x00012eb8
   12db0:	andeq	r2, r1, r0, lsl #30
   12db4:	andeq	r2, r1, r0, asr pc
   12db8:	andeq	r2, r1, r8, lsr #31
   12dbc:	andeq	r3, r1, r8
   12dc0:	str	r3, [sp]
   12dc4:	mov	r1, #1
   12dc8:	mov	r3, r2
   12dcc:	ldr	r2, [pc, #704]	; 13094 <abort@plt+0x2270>
   12dd0:	bl	10da0 <__fprintf_chk@plt>
   12dd4:	b	12d24 <abort@plt+0x1f00>
   12dd8:	mov	r2, #5
   12ddc:	ldr	r1, [pc, #692]	; 13098 <abort@plt+0x2274>
   12de0:	mov	r0, #0
   12de4:	bl	10c80 <dcgettext@plt>
   12de8:	ldr	r3, [r4]
   12dec:	mov	r1, #1
   12df0:	mov	r2, r0
   12df4:	mov	r0, r5
   12df8:	add	sp, sp, #32
   12dfc:	pop	{r4, r5, r6, lr}
   12e00:	b	10da0 <__fprintf_chk@plt>
   12e04:	mov	r2, #5
   12e08:	ldr	r1, [pc, #652]	; 1309c <abort@plt+0x2278>
   12e0c:	mov	r0, #0
   12e10:	bl	10c80 <dcgettext@plt>
   12e14:	ldr	r3, [r4, #4]
   12e18:	mov	r1, #1
   12e1c:	str	r3, [sp, #48]	; 0x30
   12e20:	ldr	r3, [r4]
   12e24:	mov	r2, r0
   12e28:	mov	r0, r5
   12e2c:	add	sp, sp, #32
   12e30:	pop	{r4, r5, r6, lr}
   12e34:	b	10da0 <__fprintf_chk@plt>
   12e38:	mov	r2, #5
   12e3c:	ldr	r1, [pc, #604]	; 130a0 <abort@plt+0x227c>
   12e40:	mov	r0, #0
   12e44:	bl	10c80 <dcgettext@plt>
   12e48:	ldr	r3, [r4, #8]
   12e4c:	mov	r1, #1
   12e50:	str	r3, [sp, #52]	; 0x34
   12e54:	ldr	r3, [r4, #4]
   12e58:	str	r3, [sp, #48]	; 0x30
   12e5c:	ldr	r3, [r4]
   12e60:	mov	r2, r0
   12e64:	mov	r0, r5
   12e68:	add	sp, sp, #32
   12e6c:	pop	{r4, r5, r6, lr}
   12e70:	b	10da0 <__fprintf_chk@plt>
   12e74:	mov	r2, #5
   12e78:	ldr	r1, [pc, #548]	; 130a4 <abort@plt+0x2280>
   12e7c:	mov	r0, #0
   12e80:	bl	10c80 <dcgettext@plt>
   12e84:	ldr	r3, [r4, #12]
   12e88:	mov	r1, #1
   12e8c:	str	r3, [sp, #8]
   12e90:	ldr	r3, [r4, #8]
   12e94:	str	r3, [sp, #4]
   12e98:	ldr	r3, [r4, #4]
   12e9c:	str	r3, [sp]
   12ea0:	ldr	r3, [r4]
   12ea4:	mov	r2, r0
   12ea8:	mov	r0, r5
   12eac:	bl	10da0 <__fprintf_chk@plt>
   12eb0:	add	sp, sp, #32
   12eb4:	pop	{r4, r5, r6, pc}
   12eb8:	mov	r2, #5
   12ebc:	ldr	r1, [pc, #484]	; 130a8 <abort@plt+0x2284>
   12ec0:	mov	r0, #0
   12ec4:	bl	10c80 <dcgettext@plt>
   12ec8:	ldr	r3, [r4, #16]
   12ecc:	mov	r1, #1
   12ed0:	str	r3, [sp, #12]
   12ed4:	ldr	r3, [r4, #12]
   12ed8:	str	r3, [sp, #8]
   12edc:	ldr	r3, [r4, #8]
   12ee0:	str	r3, [sp, #4]
   12ee4:	ldr	r3, [r4, #4]
   12ee8:	str	r3, [sp]
   12eec:	ldr	r3, [r4]
   12ef0:	mov	r2, r0
   12ef4:	mov	r0, r5
   12ef8:	bl	10da0 <__fprintf_chk@plt>
   12efc:	b	12eb0 <abort@plt+0x208c>
   12f00:	mov	r2, #5
   12f04:	ldr	r1, [pc, #416]	; 130ac <abort@plt+0x2288>
   12f08:	mov	r0, #0
   12f0c:	bl	10c80 <dcgettext@plt>
   12f10:	ldr	r3, [r4, #20]
   12f14:	mov	r1, #1
   12f18:	str	r3, [sp, #16]
   12f1c:	ldr	r3, [r4, #16]
   12f20:	str	r3, [sp, #12]
   12f24:	ldr	r3, [r4, #12]
   12f28:	str	r3, [sp, #8]
   12f2c:	ldr	r3, [r4, #8]
   12f30:	str	r3, [sp, #4]
   12f34:	ldr	r3, [r4, #4]
   12f38:	str	r3, [sp]
   12f3c:	ldr	r3, [r4]
   12f40:	mov	r2, r0
   12f44:	mov	r0, r5
   12f48:	bl	10da0 <__fprintf_chk@plt>
   12f4c:	b	12eb0 <abort@plt+0x208c>
   12f50:	mov	r2, #5
   12f54:	ldr	r1, [pc, #340]	; 130b0 <abort@plt+0x228c>
   12f58:	mov	r0, #0
   12f5c:	bl	10c80 <dcgettext@plt>
   12f60:	ldr	r3, [r4, #24]
   12f64:	mov	r1, #1
   12f68:	str	r3, [sp, #20]
   12f6c:	ldr	r3, [r4, #20]
   12f70:	str	r3, [sp, #16]
   12f74:	ldr	r3, [r4, #16]
   12f78:	str	r3, [sp, #12]
   12f7c:	ldr	r3, [r4, #12]
   12f80:	str	r3, [sp, #8]
   12f84:	ldr	r3, [r4, #8]
   12f88:	str	r3, [sp, #4]
   12f8c:	ldr	r3, [r4, #4]
   12f90:	str	r3, [sp]
   12f94:	ldr	r3, [r4]
   12f98:	mov	r2, r0
   12f9c:	mov	r0, r5
   12fa0:	bl	10da0 <__fprintf_chk@plt>
   12fa4:	b	12eb0 <abort@plt+0x208c>
   12fa8:	mov	r2, #5
   12fac:	ldr	r1, [pc, #256]	; 130b4 <abort@plt+0x2290>
   12fb0:	mov	r0, #0
   12fb4:	bl	10c80 <dcgettext@plt>
   12fb8:	ldr	r3, [r4, #28]
   12fbc:	mov	r1, #1
   12fc0:	str	r3, [sp, #24]
   12fc4:	ldr	r3, [r4, #24]
   12fc8:	str	r3, [sp, #20]
   12fcc:	ldr	r3, [r4, #20]
   12fd0:	str	r3, [sp, #16]
   12fd4:	ldr	r3, [r4, #16]
   12fd8:	str	r3, [sp, #12]
   12fdc:	ldr	r3, [r4, #12]
   12fe0:	str	r3, [sp, #8]
   12fe4:	ldr	r3, [r4, #8]
   12fe8:	str	r3, [sp, #4]
   12fec:	ldr	r3, [r4, #4]
   12ff0:	str	r3, [sp]
   12ff4:	ldr	r3, [r4]
   12ff8:	mov	r2, r0
   12ffc:	mov	r0, r5
   13000:	bl	10da0 <__fprintf_chk@plt>
   13004:	b	12eb0 <abort@plt+0x208c>
   13008:	ldr	r1, [pc, #168]	; 130b8 <abort@plt+0x2294>
   1300c:	mov	r2, #5
   13010:	mov	r0, #0
   13014:	bl	10c80 <dcgettext@plt>
   13018:	ldr	r3, [r4, #32]
   1301c:	mov	r1, #1
   13020:	str	r3, [sp, #28]
   13024:	ldr	r3, [r4, #28]
   13028:	str	r3, [sp, #24]
   1302c:	ldr	r3, [r4, #24]
   13030:	str	r3, [sp, #20]
   13034:	ldr	r3, [r4, #20]
   13038:	str	r3, [sp, #16]
   1303c:	ldr	r3, [r4, #16]
   13040:	str	r3, [sp, #12]
   13044:	ldr	r3, [r4, #12]
   13048:	str	r3, [sp, #8]
   1304c:	ldr	r3, [r4, #8]
   13050:	str	r3, [sp, #4]
   13054:	ldr	r3, [r4, #4]
   13058:	str	r3, [sp]
   1305c:	ldr	r3, [r4]
   13060:	mov	r2, r0
   13064:	mov	r0, r5
   13068:	bl	10da0 <__fprintf_chk@plt>
   1306c:	b	12eb0 <abort@plt+0x208c>
   13070:	mov	r2, #5
   13074:	ldr	r1, [pc, #64]	; 130bc <abort@plt+0x2298>
   13078:	b	13010 <abort@plt+0x21ec>
   1307c:	andeq	r4, r1, r3, lsr r8
   13080:	andeq	r4, r1, r6, asr #16
   13084:	andeq	r0, r0, r6, ror #15
   13088:	andeq	r4, r1, r4, lsl fp
   1308c:	andeq	r4, r1, sl, asr #16
   13090:	strdeq	r4, [r1], -r5
   13094:	andeq	r4, r1, pc, lsr r8
   13098:	andeq	r4, r1, r7, lsl r9
   1309c:	andeq	r4, r1, r7, lsr #18
   130a0:	andeq	r4, r1, lr, lsr r9
   130a4:	andeq	r4, r1, sl, asr r9
   130a8:	andeq	r4, r1, sl, ror r9
   130ac:	muleq	r1, lr, r9
   130b0:	andeq	r4, r1, r6, asr #19
   130b4:	strdeq	r4, [r1], -r2
   130b8:	andeq	r4, r1, r2, lsr #20
   130bc:	andeq	r4, r1, r6, asr sl
   130c0:	push	{r0, r1, r4, lr}
   130c4:	mov	ip, #0
   130c8:	ldr	lr, [sp, #16]
   130cc:	ldr	r4, [lr, ip, lsl #2]
   130d0:	cmp	r4, #0
   130d4:	bne	130ec <abort@plt+0x22c8>
   130d8:	str	ip, [sp, #4]
   130dc:	str	lr, [sp]
   130e0:	bl	12cf4 <abort@plt+0x1ed0>
   130e4:	add	sp, sp, #8
   130e8:	pop	{r4, pc}
   130ec:	add	ip, ip, #1
   130f0:	b	130cc <abort@plt+0x22a8>
   130f4:	push	{r4, r5, lr}
   130f8:	sub	sp, sp, #52	; 0x34
   130fc:	mov	ip, #0
   13100:	ldr	r5, [sp, #64]	; 0x40
   13104:	add	lr, sp, #8
   13108:	ldr	r4, [r5, ip, lsl #2]
   1310c:	cmp	r4, #0
   13110:	str	r4, [lr, ip, lsl #2]
   13114:	beq	13124 <abort@plt+0x2300>
   13118:	add	ip, ip, #1
   1311c:	cmp	ip, #10
   13120:	bne	13108 <abort@plt+0x22e4>
   13124:	str	ip, [sp, #4]
   13128:	str	lr, [sp]
   1312c:	bl	12cf4 <abort@plt+0x1ed0>
   13130:	add	sp, sp, #52	; 0x34
   13134:	pop	{r4, r5, pc}
   13138:	push	{r3}		; (str r3, [sp, #-4]!)
   1313c:	push	{r0, r1, r2, r3, lr}
   13140:	add	r3, sp, #24
   13144:	str	r3, [sp, #12]
   13148:	str	r3, [sp]
   1314c:	ldr	r3, [sp, #20]
   13150:	bl	130f4 <abort@plt+0x22d0>
   13154:	add	sp, sp, #16
   13158:	pop	{lr}		; (ldr lr, [sp], #4)
   1315c:	add	sp, sp, #4
   13160:	bx	lr
   13164:	ldr	r3, [pc, #116]	; 131e0 <abort@plt+0x23bc>
   13168:	push	{r4, lr}
   1316c:	mov	r0, #10
   13170:	ldr	r1, [r3]
   13174:	bl	10c74 <fputc_unlocked@plt>
   13178:	mov	r2, #5
   1317c:	ldr	r1, [pc, #96]	; 131e4 <abort@plt+0x23c0>
   13180:	mov	r0, #0
   13184:	bl	10c80 <dcgettext@plt>
   13188:	ldr	r2, [pc, #88]	; 131e8 <abort@plt+0x23c4>
   1318c:	mov	r1, r0
   13190:	mov	r0, #1
   13194:	bl	10d7c <__printf_chk@plt>
   13198:	mov	r2, #5
   1319c:	ldr	r1, [pc, #72]	; 131ec <abort@plt+0x23c8>
   131a0:	mov	r0, #0
   131a4:	bl	10c80 <dcgettext@plt>
   131a8:	ldr	r3, [pc, #64]	; 131f0 <abort@plt+0x23cc>
   131ac:	ldr	r2, [pc, #64]	; 131f4 <abort@plt+0x23d0>
   131b0:	mov	r1, r0
   131b4:	mov	r0, #1
   131b8:	bl	10d7c <__printf_chk@plt>
   131bc:	mov	r2, #5
   131c0:	ldr	r1, [pc, #48]	; 131f8 <abort@plt+0x23d4>
   131c4:	mov	r0, #0
   131c8:	bl	10c80 <dcgettext@plt>
   131cc:	ldr	r2, [pc, #40]	; 131fc <abort@plt+0x23d8>
   131d0:	pop	{r4, lr}
   131d4:	mov	r1, r0
   131d8:	mov	r0, #1
   131dc:	b	10d7c <__printf_chk@plt>
   131e0:	andeq	r5, r2, ip, lsr r1
   131e4:	muleq	r1, r2, sl
   131e8:	andeq	r4, r1, r6, lsr #21
   131ec:			; <UNDEFINED> instruction: 0x00014abc
   131f0:	andeq	r4, r1, r3, lsr r5
   131f4:	andeq	r4, r1, fp, asr r5
   131f8:	ldrdeq	r4, [r1], -r0
   131fc:	strdeq	r4, [r1], -r7
   13200:	push	{r4, lr}
   13204:	bl	13854 <abort@plt+0x2a30>
   13208:	cmp	r0, #0
   1320c:	popne	{r4, pc}
   13210:	bl	13694 <abort@plt+0x2870>
   13214:	push	{r4, lr}
   13218:	bl	13854 <abort@plt+0x2a30>
   1321c:	cmp	r0, #0
   13220:	popne	{r4, pc}
   13224:	bl	13694 <abort@plt+0x2870>
   13228:	b	13200 <abort@plt+0x23dc>
   1322c:	push	{r4, r5, r6, lr}
   13230:	mov	r5, r0
   13234:	mov	r4, r1
   13238:	bl	13894 <abort@plt+0x2a70>
   1323c:	cmp	r0, #0
   13240:	popne	{r4, r5, r6, pc}
   13244:	adds	r4, r4, #0
   13248:	movne	r4, #1
   1324c:	cmp	r5, #0
   13250:	orreq	r4, r4, #1
   13254:	cmp	r4, #0
   13258:	popeq	{r4, r5, r6, pc}
   1325c:	bl	13694 <abort@plt+0x2870>
   13260:	push	{r4, lr}
   13264:	cmp	r1, #0
   13268:	orreq	r1, r1, #1
   1326c:	bl	13894 <abort@plt+0x2a70>
   13270:	cmp	r0, #0
   13274:	popne	{r4, pc}
   13278:	bl	13694 <abort@plt+0x2870>
   1327c:	push	{r4, r5, r6, lr}
   13280:	mov	r6, r0
   13284:	mov	r5, r1
   13288:	mov	r4, r2
   1328c:	bl	13d1c <abort@plt+0x2ef8>
   13290:	cmp	r0, #0
   13294:	popne	{r4, r5, r6, pc}
   13298:	cmp	r6, #0
   1329c:	beq	132ac <abort@plt+0x2488>
   132a0:	cmp	r5, #0
   132a4:	cmpne	r4, #0
   132a8:	popeq	{r4, r5, r6, pc}
   132ac:	bl	13694 <abort@plt+0x2870>
   132b0:	b	1327c <abort@plt+0x2458>
   132b4:	cmp	r2, #0
   132b8:	cmpne	r1, #0
   132bc:	moveq	r2, #1
   132c0:	moveq	r1, r2
   132c4:	push	{r4, lr}
   132c8:	bl	13d1c <abort@plt+0x2ef8>
   132cc:	cmp	r0, #0
   132d0:	popne	{r4, pc}
   132d4:	bl	13694 <abort@plt+0x2870>
   132d8:	mov	r2, r1
   132dc:	mov	r1, r0
   132e0:	mov	r0, #0
   132e4:	b	1327c <abort@plt+0x2458>
   132e8:	mov	r2, r1
   132ec:	mov	r1, r0
   132f0:	mov	r0, #0
   132f4:	b	132b4 <abort@plt+0x2490>
   132f8:	push	{r4, r5, r6, r7, r8, lr}
   132fc:	subs	r7, r0, #0
   13300:	mov	r5, r1
   13304:	mov	r6, r2
   13308:	ldr	r4, [r1]
   1330c:	bne	13348 <abort@plt+0x2524>
   13310:	cmp	r4, #0
   13314:	bne	13330 <abort@plt+0x250c>
   13318:	mov	r1, r2
   1331c:	mov	r0, #64	; 0x40
   13320:	bl	13e48 <abort@plt+0x3024>
   13324:	cmp	r0, #0
   13328:	movne	r4, r0
   1332c:	addeq	r4, r0, #1
   13330:	mov	r2, r6
   13334:	mov	r1, r4
   13338:	mov	r0, r7
   1333c:	bl	1327c <abort@plt+0x2458>
   13340:	str	r4, [r5]
   13344:	pop	{r4, r5, r6, r7, r8, pc}
   13348:	lsr	r2, r4, #1
   1334c:	add	r3, r2, #1
   13350:	mvn	r3, r3
   13354:	cmp	r4, r3
   13358:	addls	r4, r4, #1
   1335c:	addls	r4, r4, r2
   13360:	bls	13330 <abort@plt+0x250c>
   13364:	bl	13694 <abort@plt+0x2870>
   13368:	mov	r2, #1
   1336c:	b	132f8 <abort@plt+0x24d4>
   13370:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13374:	mov	sl, r0
   13378:	ldr	r8, [r1]
   1337c:	mov	fp, r1
   13380:	mov	r5, r2
   13384:	asrs	r4, r8, #1
   13388:	mov	r9, r3
   1338c:	ldr	r7, [sp, #48]	; 0x30
   13390:	bpl	1342c <abort@plt+0x2608>
   13394:	rsb	r2, r4, #-2147483648	; 0x80000000
   13398:	cmp	r8, r2
   1339c:	movge	r2, #0
   133a0:	movlt	r2, #1
   133a4:	mvn	r3, r9
   133a8:	cmp	r2, #0
   133ac:	lsr	r3, r3, #31
   133b0:	addeq	r4, r4, r8
   133b4:	mvnne	r4, #-2147483648	; 0x80000000
   133b8:	mov	r0, r3
   133bc:	cmp	r9, r4
   133c0:	movge	r0, #0
   133c4:	andlt	r0, r0, #1
   133c8:	cmp	r0, #0
   133cc:	str	r3, [sp, #4]
   133d0:	bne	135a0 <abort@plt+0x277c>
   133d4:	cmp	r7, #0
   133d8:	bge	134ec <abort@plt+0x26c8>
   133dc:	cmp	r4, #0
   133e0:	bge	13444 <abort@plt+0x2620>
   133e4:	mov	r1, r7
   133e8:	mvn	r0, #-2147483648	; 0x80000000
   133ec:	bl	14054 <abort@plt+0x3230>
   133f0:	cmp	r0, r4
   133f4:	movle	r0, #0
   133f8:	movgt	r0, #1
   133fc:	cmp	r0, #0
   13400:	mvnne	r6, #-2147483648	; 0x80000000
   13404:	beq	13454 <abort@plt+0x2630>
   13408:	mov	r1, r7
   1340c:	mov	r0, r6
   13410:	bl	14054 <abort@plt+0x3230>
   13414:	mov	r1, r7
   13418:	mov	r4, r0
   1341c:	mov	r0, r6
   13420:	bl	14274 <abort@plt+0x3450>
   13424:	sub	r1, r6, r1
   13428:	b	13464 <abort@plt+0x2640>
   1342c:	mvn	r2, #-2147483648	; 0x80000000
   13430:	sub	r2, r2, r4
   13434:	cmp	r8, r2
   13438:	movle	r2, #0
   1343c:	movgt	r2, #1
   13440:	b	133a4 <abort@plt+0x2580>
   13444:	cmn	r7, #1
   13448:	movne	r1, r7
   1344c:	movne	r0, #-2147483648	; 0x80000000
   13450:	bne	135b8 <abort@plt+0x2794>
   13454:	mul	r1, r7, r4
   13458:	cmp	r1, #63	; 0x3f
   1345c:	movle	r6, #64	; 0x40
   13460:	ble	13408 <abort@plt+0x25e4>
   13464:	cmp	sl, #0
   13468:	sub	r2, r4, r8
   1346c:	streq	sl, [fp]
   13470:	cmp	r2, r5
   13474:	bge	13548 <abort@plt+0x2724>
   13478:	cmp	r5, #0
   1347c:	bge	13514 <abort@plt+0x26f0>
   13480:	rsb	r2, r5, #-2147483648	; 0x80000000
   13484:	cmp	r8, r2
   13488:	movge	r2, #0
   1348c:	movlt	r2, #1
   13490:	cmp	r2, #0
   13494:	bne	134e8 <abort@plt+0x26c4>
   13498:	ldr	r0, [sp, #4]
   1349c:	add	r5, r8, r5
   134a0:	cmp	r9, r5
   134a4:	movge	r0, #0
   134a8:	andlt	r0, r0, #1
   134ac:	cmp	r0, #0
   134b0:	mov	r4, r5
   134b4:	bne	134e8 <abort@plt+0x26c4>
   134b8:	cmp	r7, #0
   134bc:	bge	1355c <abort@plt+0x2738>
   134c0:	cmp	r5, #0
   134c4:	bge	13534 <abort@plt+0x2710>
   134c8:	mov	r1, r7
   134cc:	mvn	r0, #-2147483648	; 0x80000000
   134d0:	bl	14054 <abort@plt+0x3230>
   134d4:	cmp	r5, r0
   134d8:	movge	r0, #0
   134dc:	movlt	r0, #1
   134e0:	cmp	r0, #0
   134e4:	beq	13544 <abort@plt+0x2720>
   134e8:	bl	13694 <abort@plt+0x2870>
   134ec:	beq	13454 <abort@plt+0x2630>
   134f0:	cmp	r4, #0
   134f4:	bge	135b0 <abort@plt+0x278c>
   134f8:	cmn	r4, #1
   134fc:	beq	13454 <abort@plt+0x2630>
   13500:	mov	r1, r4
   13504:	mov	r0, #-2147483648	; 0x80000000
   13508:	bl	14054 <abort@plt+0x3230>
   1350c:	cmp	r7, r0
   13510:	b	133f4 <abort@plt+0x25d0>
   13514:	cmp	r8, #0
   13518:	blt	13498 <abort@plt+0x2674>
   1351c:	mvn	r2, #-2147483648	; 0x80000000
   13520:	sub	r2, r2, r5
   13524:	cmp	r8, r2
   13528:	movle	r2, #0
   1352c:	movgt	r2, #1
   13530:	b	13490 <abort@plt+0x266c>
   13534:	cmn	r7, #1
   13538:	movne	r1, r7
   1353c:	movne	r0, #-2147483648	; 0x80000000
   13540:	bne	13594 <abort@plt+0x2770>
   13544:	mul	r1, r5, r7
   13548:	mov	r0, sl
   1354c:	bl	1322c <abort@plt+0x2408>
   13550:	str	r4, [fp]
   13554:	add	sp, sp, #12
   13558:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1355c:	beq	13544 <abort@plt+0x2720>
   13560:	cmp	r5, #0
   13564:	movge	r1, r7
   13568:	mvnge	r0, #-2147483648	; 0x80000000
   1356c:	bge	13594 <abort@plt+0x2770>
   13570:	cmn	r5, #1
   13574:	beq	13544 <abort@plt+0x2720>
   13578:	mov	r1, r5
   1357c:	mov	r0, #-2147483648	; 0x80000000
   13580:	bl	14054 <abort@plt+0x3230>
   13584:	cmp	r7, r0
   13588:	movle	r0, #0
   1358c:	movgt	r0, #1
   13590:	b	134e0 <abort@plt+0x26bc>
   13594:	bl	14054 <abort@plt+0x3230>
   13598:	cmp	r5, r0
   1359c:	b	13588 <abort@plt+0x2764>
   135a0:	cmp	r7, #0
   135a4:	mov	r4, r9
   135a8:	blt	13444 <abort@plt+0x2620>
   135ac:	beq	13454 <abort@plt+0x2630>
   135b0:	mov	r1, r7
   135b4:	mvn	r0, #-2147483648	; 0x80000000
   135b8:	bl	14054 <abort@plt+0x3230>
   135bc:	cmp	r0, r4
   135c0:	movge	r0, #0
   135c4:	movlt	r0, #1
   135c8:	b	133fc <abort@plt+0x25d8>
   135cc:	push	{r4, lr}
   135d0:	bl	1380c <abort@plt+0x29e8>
   135d4:	cmp	r0, #0
   135d8:	popne	{r4, pc}
   135dc:	bl	13694 <abort@plt+0x2870>
   135e0:	mov	r1, #1
   135e4:	b	135cc <abort@plt+0x27a8>
   135e8:	push	{r4, lr}
   135ec:	bl	1380c <abort@plt+0x29e8>
   135f0:	cmp	r0, #0
   135f4:	popne	{r4, pc}
   135f8:	bl	13694 <abort@plt+0x2870>
   135fc:	mov	r1, #1
   13600:	b	135e8 <abort@plt+0x27c4>
   13604:	push	{r4, r5, r6, lr}
   13608:	mov	r4, r1
   1360c:	mov	r5, r0
   13610:	mov	r0, r1
   13614:	bl	13200 <abort@plt+0x23dc>
   13618:	mov	r2, r4
   1361c:	mov	r1, r5
   13620:	pop	{r4, r5, r6, lr}
   13624:	b	10c50 <memcpy@plt>
   13628:	push	{r4, r5, r6, lr}
   1362c:	mov	r4, r1
   13630:	mov	r5, r0
   13634:	mov	r0, r1
   13638:	bl	13214 <abort@plt+0x23f0>
   1363c:	mov	r2, r4
   13640:	mov	r1, r5
   13644:	pop	{r4, r5, r6, lr}
   13648:	b	10c50 <memcpy@plt>
   1364c:	push	{r4, r5, r6, lr}
   13650:	mov	r5, r0
   13654:	add	r0, r1, #1
   13658:	mov	r4, r1
   1365c:	bl	13214 <abort@plt+0x23f0>
   13660:	mov	r2, #0
   13664:	mov	r1, r5
   13668:	strb	r2, [r0, r4]
   1366c:	mov	r2, r4
   13670:	pop	{r4, r5, r6, lr}
   13674:	b	10c50 <memcpy@plt>
   13678:	push	{r4, lr}
   1367c:	mov	r4, r0
   13680:	bl	10d4c <strlen@plt>
   13684:	add	r1, r0, #1
   13688:	mov	r0, r4
   1368c:	pop	{r4, lr}
   13690:	b	13604 <abort@plt+0x27e0>
   13694:	ldr	r3, [pc, #44]	; 136c8 <abort@plt+0x28a4>
   13698:	push	{r4, lr}
   1369c:	mov	r2, #5
   136a0:	ldr	r1, [pc, #36]	; 136cc <abort@plt+0x28a8>
   136a4:	mov	r0, #0
   136a8:	ldr	r4, [r3]
   136ac:	bl	10c80 <dcgettext@plt>
   136b0:	ldr	r2, [pc, #24]	; 136d0 <abort@plt+0x28ac>
   136b4:	mov	r1, #0
   136b8:	mov	r3, r0
   136bc:	mov	r0, r4
   136c0:	bl	10cec <error@plt>
   136c4:	bl	10e24 <abort@plt>
   136c8:	andeq	r5, r2, r0, ror #1
   136cc:	andeq	r4, r1, r3, asr #22
   136d0:	strdeq	r4, [r1], -r5
   136d4:	andeq	r0, r0, r0
   136d8:	vldr	d7, [pc, #128]	; 13760 <abort@plt+0x293c>
   136dc:	push	{r4, r5, lr}
   136e0:	vpush	{d8}
   136e4:	vmov.f64	d8, d0
   136e8:	vcmpe.f64	d0, d7
   136ec:	sub	sp, sp, #12
   136f0:	vmrs	APSR_nzcv, fpscr
   136f4:	bge	13744 <abort@plt+0x2920>
   136f8:	vmov.f64	d0, d8
   136fc:	mov	r0, sp
   13700:	bl	139d0 <abort@plt+0x2bac>
   13704:	bl	10d58 <__errno_location@plt>
   13708:	mov	r5, #0
   1370c:	mov	r4, r0
   13710:	str	r5, [r4]
   13714:	mov	r1, sp
   13718:	mov	r0, sp
   1371c:	bl	10c38 <nanosleep@plt>
   13720:	cmp	r0, #0
   13724:	beq	13738 <abort@plt+0x2914>
   13728:	ldr	r3, [r4]
   1372c:	bics	r3, r3, #4
   13730:	beq	13710 <abort@plt+0x28ec>
   13734:	mvn	r0, #0
   13738:	add	sp, sp, #12
   1373c:	vpop	{d8}
   13740:	pop	{r4, r5, pc}
   13744:	bl	10c14 <pause@plt>
   13748:	bl	10d58 <__errno_location@plt>
   1374c:	ldr	r3, [r0]
   13750:	cmp	r3, #4
   13754:	beq	13744 <abort@plt+0x2920>
   13758:	b	136f8 <abort@plt+0x28d4>
   1375c:	nop			; (mov r0, r0)
   13760:	andeq	r0, r0, r0
   13764:	mvnmi	r0, r0
   13768:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
   1376c:	mov	r7, r0
   13770:	mov	r9, r3
   13774:	mov	r5, r1
   13778:	mov	r8, r2
   1377c:	bl	10d58 <__errno_location@plt>
   13780:	mov	r4, #0
   13784:	add	r1, sp, #4
   13788:	str	r4, [r0]
   1378c:	mov	r6, r0
   13790:	mov	r0, r7
   13794:	blx	r9
   13798:	ldr	r3, [sp, #4]
   1379c:	cmp	r7, r3
   137a0:	beq	137d0 <abort@plt+0x29ac>
   137a4:	cmp	r5, r4
   137a8:	bne	137d8 <abort@plt+0x29b4>
   137ac:	ldrb	r2, [r3]
   137b0:	cmp	r2, r4
   137b4:	movne	r0, r5
   137b8:	bne	13800 <abort@plt+0x29dc>
   137bc:	vcmp.f64	d0, #0.0
   137c0:	vmrs	APSR_nzcv, fpscr
   137c4:	bne	137e8 <abort@plt+0x29c4>
   137c8:	mov	r0, #1
   137cc:	b	13800 <abort@plt+0x29dc>
   137d0:	mov	r0, r4
   137d4:	b	137f4 <abort@plt+0x29d0>
   137d8:	vcmp.f64	d0, #0.0
   137dc:	vmrs	APSR_nzcv, fpscr
   137e0:	moveq	r0, #1
   137e4:	beq	137fc <abort@plt+0x29d8>
   137e8:	ldr	r0, [r6]
   137ec:	subs	r0, r0, #34	; 0x22
   137f0:	movne	r0, #1
   137f4:	cmp	r5, #0
   137f8:	beq	13800 <abort@plt+0x29dc>
   137fc:	str	r3, [r5]
   13800:	vstr	d0, [r8]
   13804:	add	sp, sp, #12
   13808:	pop	{r4, r5, r6, r7, r8, r9, pc}
   1380c:	cmp	r1, #0
   13810:	cmpne	r0, #0
   13814:	moveq	r1, #1
   13818:	moveq	r0, r1
   1381c:	umull	r2, r3, r0, r1
   13820:	adds	r3, r3, #0
   13824:	movne	r3, #1
   13828:	cmp	r2, #0
   1382c:	blt	1383c <abort@plt+0x2a18>
   13830:	cmp	r3, #0
   13834:	bne	1383c <abort@plt+0x2a18>
   13838:	b	10be4 <calloc@plt>
   1383c:	push	{r4, lr}
   13840:	bl	10d58 <__errno_location@plt>
   13844:	mov	r3, #12
   13848:	str	r3, [r0]
   1384c:	mov	r0, #0
   13850:	pop	{r4, pc}
   13854:	cmp	r0, #0
   13858:	mov	r3, #0
   1385c:	moveq	r0, #1
   13860:	adds	r3, r3, #0
   13864:	movne	r3, #1
   13868:	cmp	r0, #0
   1386c:	blt	1387c <abort@plt+0x2a58>
   13870:	cmp	r3, #0
   13874:	bne	1387c <abort@plt+0x2a58>
   13878:	b	10cf8 <malloc@plt>
   1387c:	push	{r4, lr}
   13880:	bl	10d58 <__errno_location@plt>
   13884:	mov	r3, #12
   13888:	str	r3, [r0]
   1388c:	mov	r0, #0
   13890:	pop	{r4, pc}
   13894:	cmp	r0, #0
   13898:	push	{r4, lr}
   1389c:	mov	r4, r1
   138a0:	bne	138b0 <abort@plt+0x2a8c>
   138a4:	mov	r0, r1
   138a8:	pop	{r4, lr}
   138ac:	b	13854 <abort@plt+0x2a30>
   138b0:	cmp	r1, #0
   138b4:	bne	138c4 <abort@plt+0x2aa0>
   138b8:	bl	13bb0 <abort@plt+0x2d8c>
   138bc:	mov	r0, #0
   138c0:	pop	{r4, pc}
   138c4:	cmp	r1, #0
   138c8:	blt	138d8 <abort@plt+0x2ab4>
   138cc:	mov	r3, #0
   138d0:	cmp	r3, r3
   138d4:	beq	138e8 <abort@plt+0x2ac4>
   138d8:	bl	10d58 <__errno_location@plt>
   138dc:	mov	r3, #12
   138e0:	str	r3, [r0]
   138e4:	b	138bc <abort@plt+0x2a98>
   138e8:	pop	{r4, lr}
   138ec:	b	10c8c <realloc@plt>
   138f0:	push	{r4, r5, r6, lr}
   138f4:	mov	r6, r0
   138f8:	ldr	r4, [pc, #80]	; 13950 <abort@plt+0x2b2c>
   138fc:	mov	r5, r1
   13900:	ldr	r2, [r4]
   13904:	cmp	r2, #0
   13908:	bne	1391c <abort@plt+0x2af8>
   1390c:	ldr	r1, [pc, #64]	; 13954 <abort@plt+0x2b30>
   13910:	ldr	r0, [pc, #64]	; 13958 <abort@plt+0x2b34>
   13914:	bl	10df4 <newlocale@plt>
   13918:	str	r0, [r4]
   1391c:	ldr	r2, [r4]
   13920:	cmp	r2, #0
   13924:	bne	13938 <abort@plt+0x2b14>
   13928:	cmp	r5, #0
   1392c:	strne	r6, [r5]
   13930:	vldr	d0, [pc, #16]	; 13948 <abort@plt+0x2b24>
   13934:	pop	{r4, r5, r6, pc}
   13938:	mov	r1, r5
   1393c:	mov	r0, r6
   13940:	pop	{r4, r5, r6, lr}
   13944:	b	10dc4 <strtod_l@plt>
	...
   13950:	andeq	r5, r2, r4, lsl #5
   13954:	andeq	r4, r1, r4, asr fp
   13958:			; <UNDEFINED> instruction: 0x00001fbf
   1395c:	push	{r4, r5, r6, lr}
   13960:	mov	r4, r0
   13964:	bl	10cc8 <__fpending@plt>
   13968:	mov	r5, r0
   1396c:	mov	r0, r4
   13970:	bl	10cd4 <ferror_unlocked@plt>
   13974:	mov	r6, r0
   13978:	mov	r0, r4
   1397c:	bl	13ab8 <abort@plt+0x2c94>
   13980:	cmp	r6, #0
   13984:	mov	r4, r0
   13988:	bne	139b4 <abort@plt+0x2b90>
   1398c:	cmp	r0, #0
   13990:	beq	139ac <abort@plt+0x2b88>
   13994:	cmp	r5, #0
   13998:	bne	139c4 <abort@plt+0x2ba0>
   1399c:	bl	10d58 <__errno_location@plt>
   139a0:	ldr	r4, [r0]
   139a4:	subs	r4, r4, #9
   139a8:	mvnne	r4, #0
   139ac:	mov	r0, r4
   139b0:	pop	{r4, r5, r6, pc}
   139b4:	cmp	r0, #0
   139b8:	bne	139c4 <abort@plt+0x2ba0>
   139bc:	bl	10d58 <__errno_location@plt>
   139c0:	str	r4, [r0]
   139c4:	mvn	r4, #0
   139c8:	b	139ac <abort@plt+0x2b88>
   139cc:	andeq	r0, r0, r0
   139d0:	vldr	d7, [pc, #192]	; 13a98 <abort@plt+0x2c74>
   139d4:	push	{r4, r5, r6, lr}
   139d8:	mov	r4, r0
   139dc:	vpush	{d8}
   139e0:	vcmpe.f64	d0, d7
   139e4:	vmrs	APSR_nzcv, fpscr
   139e8:	movle	r3, #-2147483648	; 0x80000000
   139ec:	strle	r3, [r0]
   139f0:	movle	r3, #0
   139f4:	ble	13a14 <abort@plt+0x2bf0>
   139f8:	vldr	d7, [pc, #160]	; 13aa0 <abort@plt+0x2c7c>
   139fc:	vcmpe.f64	d0, d7
   13a00:	vmrs	APSR_nzcv, fpscr
   13a04:	bmi	13a24 <abort@plt+0x2c00>
   13a08:	mvn	r3, #-2147483648	; 0x80000000
   13a0c:	str	r3, [r0]
   13a10:	ldr	r3, [pc, #152]	; 13ab0 <abort@plt+0x2c8c>
   13a14:	str	r3, [r4, #4]
   13a18:	vpop	{d8}
   13a1c:	mov	r0, r4
   13a20:	pop	{r4, r5, r6, pc}
   13a24:	vcvt.s32.f64	s16, d0
   13a28:	ldr	r1, [pc, #132]	; 13ab4 <abort@plt+0x2c90>
   13a2c:	vcvt.f64.s32	d7, s16
   13a30:	vsub.f64	d0, d0, d7
   13a34:	vldr	d7, [pc, #108]	; 13aa8 <abort@plt+0x2c84>
   13a38:	vmul.f64	d0, d0, d7
   13a3c:	vcvt.s32.f64	s15, d0
   13a40:	vcvt.f64.s32	d6, s15
   13a44:	vmov	r3, s15
   13a48:	vcmpe.f64	d0, d6
   13a4c:	vmrs	APSR_nzcv, fpscr
   13a50:	movgt	r6, #1
   13a54:	movle	r6, #0
   13a58:	add	r6, r3, r6
   13a5c:	mov	r0, r6
   13a60:	bl	14054 <abort@plt+0x3230>
   13a64:	vmov	r3, s16
   13a68:	ldr	r1, [pc, #68]	; 13ab4 <abort@plt+0x2c90>
   13a6c:	add	r5, r0, r3
   13a70:	mov	r0, r6
   13a74:	bl	14274 <abort@plt+0x3450>
   13a78:	cmp	r1, #0
   13a7c:	addlt	r1, r1, #998244352	; 0x3b800000
   13a80:	addlt	r1, r1, #1753088	; 0x1ac000
   13a84:	sublt	r5, r5, #1
   13a88:	addlt	r1, r1, #2560	; 0xa00
   13a8c:	str	r5, [r4]
   13a90:	str	r1, [r4, #4]
   13a94:	b	13a18 <abort@plt+0x2bf4>
   13a98:	andeq	r0, r0, r0
   13a9c:	mvngt	r0, r0
   13aa0:	andeq	r0, r0, r0
   13aa4:	mvnmi	r0, r0
   13aa8:	andeq	r0, r0, r0
   13aac:	bicmi	ip, sp, r5, ror #26
   13ab0:	blcc	fe6c62b4 <opterr@@GLIBC_2.4+0xfe6a1174>
   13ab4:	blcc	fe6c62bc <opterr@@GLIBC_2.4+0xfe6a117c>
   13ab8:	push	{r0, r1, r2, r4, r5, lr}
   13abc:	mov	r4, r0
   13ac0:	bl	10d94 <fileno@plt>
   13ac4:	cmp	r0, #0
   13ac8:	mov	r0, r4
   13acc:	bge	13adc <abort@plt+0x2cb8>
   13ad0:	add	sp, sp, #12
   13ad4:	pop	{r4, r5, lr}
   13ad8:	b	10dac <fclose@plt>
   13adc:	bl	10d10 <__freading@plt>
   13ae0:	cmp	r0, #0
   13ae4:	bne	13b20 <abort@plt+0x2cfc>
   13ae8:	mov	r0, r4
   13aec:	bl	13b60 <abort@plt+0x2d3c>
   13af0:	cmp	r0, #0
   13af4:	bne	13b54 <abort@plt+0x2d30>
   13af8:	mov	r5, #0
   13afc:	mov	r0, r4
   13b00:	bl	10dac <fclose@plt>
   13b04:	cmp	r5, #0
   13b08:	beq	13b18 <abort@plt+0x2cf4>
   13b0c:	bl	10d58 <__errno_location@plt>
   13b10:	str	r5, [r0]
   13b14:	mvn	r0, #0
   13b18:	add	sp, sp, #12
   13b1c:	pop	{r4, r5, pc}
   13b20:	mov	r0, r4
   13b24:	bl	10d94 <fileno@plt>
   13b28:	mov	r3, #1
   13b2c:	str	r3, [sp]
   13b30:	mov	r2, #0
   13b34:	mov	r3, #0
   13b38:	bl	10cb0 <lseek64@plt>
   13b3c:	mvn	r3, #0
   13b40:	mvn	r2, #0
   13b44:	cmp	r1, r3
   13b48:	cmpeq	r0, r2
   13b4c:	bne	13ae8 <abort@plt+0x2cc4>
   13b50:	b	13af8 <abort@plt+0x2cd4>
   13b54:	bl	10d58 <__errno_location@plt>
   13b58:	ldr	r5, [r0]
   13b5c:	b	13afc <abort@plt+0x2cd8>
   13b60:	push	{r0, r1, r4, lr}
   13b64:	subs	r4, r0, #0
   13b68:	bne	13b7c <abort@plt+0x2d58>
   13b6c:	mov	r0, r4
   13b70:	add	sp, sp, #8
   13b74:	pop	{r4, lr}
   13b78:	b	10c20 <fflush@plt>
   13b7c:	bl	10d10 <__freading@plt>
   13b80:	cmp	r0, #0
   13b84:	beq	13b6c <abort@plt+0x2d48>
   13b88:	ldr	r3, [r4]
   13b8c:	tst	r3, #256	; 0x100
   13b90:	beq	13b6c <abort@plt+0x2d48>
   13b94:	mov	r3, #1
   13b98:	str	r3, [sp]
   13b9c:	mov	r2, #0
   13ba0:	mov	r3, #0
   13ba4:	mov	r0, r4
   13ba8:	bl	13c04 <abort@plt+0x2de0>
   13bac:	b	13b6c <abort@plt+0x2d48>
   13bb0:	push	{r0, r1, r2, r4, r5, lr}
   13bb4:	mov	r5, r0
   13bb8:	bl	10d58 <__errno_location@plt>
   13bbc:	ldr	r3, [r0]
   13bc0:	mov	r4, r0
   13bc4:	str	r3, [sp]
   13bc8:	str	r3, [sp, #4]
   13bcc:	mov	r3, #0
   13bd0:	str	r3, [r0]
   13bd4:	mov	r0, r5
   13bd8:	bl	10c2c <free@plt>
   13bdc:	ldr	r3, [r4]
   13be0:	add	r2, sp, #8
   13be4:	cmp	r3, #0
   13be8:	moveq	r3, #4
   13bec:	movne	r3, #0
   13bf0:	add	r3, r2, r3
   13bf4:	ldr	r3, [r3, #-8]
   13bf8:	str	r3, [r4]
   13bfc:	add	sp, sp, #12
   13c00:	pop	{r4, r5, pc}
   13c04:	push	{r0, r1, r4, r5, r6, r7, r8, lr}
   13c08:	mov	r4, r0
   13c0c:	ldmib	r0, {ip, lr}
   13c10:	ldr	r8, [sp, #32]
   13c14:	cmp	lr, ip
   13c18:	bne	13c84 <abort@plt+0x2e60>
   13c1c:	ldr	lr, [r0, #20]
   13c20:	ldr	ip, [r0, #16]
   13c24:	cmp	lr, ip
   13c28:	bne	13c84 <abort@plt+0x2e60>
   13c2c:	ldr	r5, [r0, #36]	; 0x24
   13c30:	cmp	r5, #0
   13c34:	bne	13c84 <abort@plt+0x2e60>
   13c38:	mov	r6, r2
   13c3c:	mov	r7, r3
   13c40:	bl	10d94 <fileno@plt>
   13c44:	mov	r2, r6
   13c48:	mov	r3, r7
   13c4c:	str	r8, [sp]
   13c50:	bl	10cb0 <lseek64@plt>
   13c54:	mvn	r3, #0
   13c58:	mvn	r2, #0
   13c5c:	cmp	r1, r3
   13c60:	cmpeq	r0, r2
   13c64:	mvneq	r0, #0
   13c68:	ldrne	r3, [r4]
   13c6c:	strdne	r0, [r4, #80]	; 0x50
   13c70:	movne	r0, r5
   13c74:	bicne	r3, r3, #16
   13c78:	strne	r3, [r4]
   13c7c:	add	sp, sp, #8
   13c80:	pop	{r4, r5, r6, r7, r8, pc}
   13c84:	str	r8, [sp, #32]
   13c88:	mov	r0, r4
   13c8c:	add	sp, sp, #8
   13c90:	pop	{r4, r5, r6, r7, r8, lr}
   13c94:	b	10db8 <fseeko64@plt>
   13c98:	push	{r4, lr}
   13c9c:	mov	r0, #14
   13ca0:	bl	10de8 <nl_langinfo@plt>
   13ca4:	ldr	r3, [pc, #24]	; 13cc4 <abort@plt+0x2ea0>
   13ca8:	cmp	r0, #0
   13cac:	moveq	r0, r3
   13cb0:	ldr	r3, [pc, #16]	; 13cc8 <abort@plt+0x2ea4>
   13cb4:	ldrb	r2, [r0]
   13cb8:	cmp	r2, #0
   13cbc:	moveq	r0, r3
   13cc0:	pop	{r4, pc}
   13cc4:			; <UNDEFINED> instruction: 0x000144b8
   13cc8:	andeq	r4, r1, r6, asr fp
   13ccc:	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   13cd0:	subs	r5, r0, #0
   13cd4:	addeq	r5, sp, #4
   13cd8:	mov	r0, r5
   13cdc:	mov	r7, r2
   13ce0:	mov	r6, r1
   13ce4:	bl	10ce0 <mbrtowc@plt>
   13ce8:	cmp	r7, #0
   13cec:	cmnne	r0, #3
   13cf0:	mov	r4, r0
   13cf4:	bls	13d10 <abort@plt+0x2eec>
   13cf8:	mov	r0, #0
   13cfc:	bl	13d68 <abort@plt+0x2f44>
   13d00:	cmp	r0, #0
   13d04:	moveq	r4, #1
   13d08:	ldrbeq	r3, [r6]
   13d0c:	streq	r3, [r5]
   13d10:	mov	r0, r4
   13d14:	add	sp, sp, #12
   13d18:	pop	{r4, r5, r6, r7, pc}
   13d1c:	push	{r4, r5, r6, lr}
   13d20:	subs	r4, r2, #0
   13d24:	mov	r6, r0
   13d28:	mov	r5, r1
   13d2c:	beq	13d44 <abort@plt+0x2f20>
   13d30:	mov	r1, r4
   13d34:	mvn	r0, #0
   13d38:	bl	13e48 <abort@plt+0x3024>
   13d3c:	cmp	r0, r5
   13d40:	bcc	13d54 <abort@plt+0x2f30>
   13d44:	mul	r1, r5, r4
   13d48:	mov	r0, r6
   13d4c:	pop	{r4, r5, r6, lr}
   13d50:	b	13894 <abort@plt+0x2a70>
   13d54:	bl	10d58 <__errno_location@plt>
   13d58:	mov	r3, #12
   13d5c:	str	r3, [r0]
   13d60:	mov	r0, #0
   13d64:	pop	{r4, r5, r6, pc}
   13d68:	push	{lr}		; (str lr, [sp, #-4]!)
   13d6c:	sub	sp, sp, #268	; 0x10c
   13d70:	ldr	r2, [pc, #64]	; 13db8 <abort@plt+0x2f94>
   13d74:	add	r1, sp, #4
   13d78:	bl	13dc4 <abort@plt+0x2fa0>
   13d7c:	cmp	r0, #0
   13d80:	movne	r0, #0
   13d84:	bne	13db0 <abort@plt+0x2f8c>
   13d88:	ldr	r1, [pc, #44]	; 13dbc <abort@plt+0x2f98>
   13d8c:	add	r0, sp, #4
   13d90:	bl	10c08 <strcmp@plt>
   13d94:	cmp	r0, #0
   13d98:	beq	13db0 <abort@plt+0x2f8c>
   13d9c:	ldr	r1, [pc, #28]	; 13dc0 <abort@plt+0x2f9c>
   13da0:	add	r0, sp, #4
   13da4:	bl	10c08 <strcmp@plt>
   13da8:	adds	r0, r0, #0
   13dac:	movne	r0, #1
   13db0:	add	sp, sp, #268	; 0x10c
   13db4:	pop	{pc}		; (ldr pc, [sp], #4)
   13db8:	andeq	r0, r0, r1, lsl #2
   13dbc:	andeq	r4, r1, r4, asr fp
   13dc0:	andeq	r4, r1, ip, asr fp
   13dc4:	push	{r4, r5, r6, lr}
   13dc8:	mov	r5, r1
   13dcc:	mov	r1, #0
   13dd0:	mov	r4, r2
   13dd4:	bl	10dd0 <setlocale@plt>
   13dd8:	subs	r6, r0, #0
   13ddc:	bne	13df0 <abort@plt+0x2fcc>
   13de0:	cmp	r4, #0
   13de4:	strbne	r6, [r5]
   13de8:	mov	r0, #22
   13dec:	pop	{r4, r5, r6, pc}
   13df0:	bl	10d4c <strlen@plt>
   13df4:	cmp	r4, r0
   13df8:	bls	13e14 <abort@plt+0x2ff0>
   13dfc:	add	r2, r0, #1
   13e00:	mov	r1, r6
   13e04:	mov	r0, r5
   13e08:	bl	10c50 <memcpy@plt>
   13e0c:	mov	r0, #0
   13e10:	pop	{r4, r5, r6, pc}
   13e14:	cmp	r4, #0
   13e18:	beq	13e38 <abort@plt+0x3014>
   13e1c:	sub	r4, r4, #1
   13e20:	mov	r2, r4
   13e24:	mov	r1, r6
   13e28:	mov	r0, r5
   13e2c:	bl	10c50 <memcpy@plt>
   13e30:	mov	r3, #0
   13e34:	strb	r3, [r5, r4]
   13e38:	mov	r0, #34	; 0x22
   13e3c:	pop	{r4, r5, r6, pc}
   13e40:	mov	r1, #0
   13e44:	b	10dd0 <setlocale@plt>
   13e48:	subs	r2, r1, #1
   13e4c:	bxeq	lr
   13e50:	bcc	14028 <abort@plt+0x3204>
   13e54:	cmp	r0, r1
   13e58:	bls	1400c <abort@plt+0x31e8>
   13e5c:	tst	r1, r2
   13e60:	beq	14018 <abort@plt+0x31f4>
   13e64:	clz	r3, r0
   13e68:	clz	r2, r1
   13e6c:	sub	r3, r2, r3
   13e70:	rsbs	r3, r3, #31
   13e74:	addne	r3, r3, r3, lsl #1
   13e78:	mov	r2, #0
   13e7c:	addne	pc, pc, r3, lsl #2
   13e80:	nop			; (mov r0, r0)
   13e84:	cmp	r0, r1, lsl #31
   13e88:	adc	r2, r2, r2
   13e8c:	subcs	r0, r0, r1, lsl #31
   13e90:	cmp	r0, r1, lsl #30
   13e94:	adc	r2, r2, r2
   13e98:	subcs	r0, r0, r1, lsl #30
   13e9c:	cmp	r0, r1, lsl #29
   13ea0:	adc	r2, r2, r2
   13ea4:	subcs	r0, r0, r1, lsl #29
   13ea8:	cmp	r0, r1, lsl #28
   13eac:	adc	r2, r2, r2
   13eb0:	subcs	r0, r0, r1, lsl #28
   13eb4:	cmp	r0, r1, lsl #27
   13eb8:	adc	r2, r2, r2
   13ebc:	subcs	r0, r0, r1, lsl #27
   13ec0:	cmp	r0, r1, lsl #26
   13ec4:	adc	r2, r2, r2
   13ec8:	subcs	r0, r0, r1, lsl #26
   13ecc:	cmp	r0, r1, lsl #25
   13ed0:	adc	r2, r2, r2
   13ed4:	subcs	r0, r0, r1, lsl #25
   13ed8:	cmp	r0, r1, lsl #24
   13edc:	adc	r2, r2, r2
   13ee0:	subcs	r0, r0, r1, lsl #24
   13ee4:	cmp	r0, r1, lsl #23
   13ee8:	adc	r2, r2, r2
   13eec:	subcs	r0, r0, r1, lsl #23
   13ef0:	cmp	r0, r1, lsl #22
   13ef4:	adc	r2, r2, r2
   13ef8:	subcs	r0, r0, r1, lsl #22
   13efc:	cmp	r0, r1, lsl #21
   13f00:	adc	r2, r2, r2
   13f04:	subcs	r0, r0, r1, lsl #21
   13f08:	cmp	r0, r1, lsl #20
   13f0c:	adc	r2, r2, r2
   13f10:	subcs	r0, r0, r1, lsl #20
   13f14:	cmp	r0, r1, lsl #19
   13f18:	adc	r2, r2, r2
   13f1c:	subcs	r0, r0, r1, lsl #19
   13f20:	cmp	r0, r1, lsl #18
   13f24:	adc	r2, r2, r2
   13f28:	subcs	r0, r0, r1, lsl #18
   13f2c:	cmp	r0, r1, lsl #17
   13f30:	adc	r2, r2, r2
   13f34:	subcs	r0, r0, r1, lsl #17
   13f38:	cmp	r0, r1, lsl #16
   13f3c:	adc	r2, r2, r2
   13f40:	subcs	r0, r0, r1, lsl #16
   13f44:	cmp	r0, r1, lsl #15
   13f48:	adc	r2, r2, r2
   13f4c:	subcs	r0, r0, r1, lsl #15
   13f50:	cmp	r0, r1, lsl #14
   13f54:	adc	r2, r2, r2
   13f58:	subcs	r0, r0, r1, lsl #14
   13f5c:	cmp	r0, r1, lsl #13
   13f60:	adc	r2, r2, r2
   13f64:	subcs	r0, r0, r1, lsl #13
   13f68:	cmp	r0, r1, lsl #12
   13f6c:	adc	r2, r2, r2
   13f70:	subcs	r0, r0, r1, lsl #12
   13f74:	cmp	r0, r1, lsl #11
   13f78:	adc	r2, r2, r2
   13f7c:	subcs	r0, r0, r1, lsl #11
   13f80:	cmp	r0, r1, lsl #10
   13f84:	adc	r2, r2, r2
   13f88:	subcs	r0, r0, r1, lsl #10
   13f8c:	cmp	r0, r1, lsl #9
   13f90:	adc	r2, r2, r2
   13f94:	subcs	r0, r0, r1, lsl #9
   13f98:	cmp	r0, r1, lsl #8
   13f9c:	adc	r2, r2, r2
   13fa0:	subcs	r0, r0, r1, lsl #8
   13fa4:	cmp	r0, r1, lsl #7
   13fa8:	adc	r2, r2, r2
   13fac:	subcs	r0, r0, r1, lsl #7
   13fb0:	cmp	r0, r1, lsl #6
   13fb4:	adc	r2, r2, r2
   13fb8:	subcs	r0, r0, r1, lsl #6
   13fbc:	cmp	r0, r1, lsl #5
   13fc0:	adc	r2, r2, r2
   13fc4:	subcs	r0, r0, r1, lsl #5
   13fc8:	cmp	r0, r1, lsl #4
   13fcc:	adc	r2, r2, r2
   13fd0:	subcs	r0, r0, r1, lsl #4
   13fd4:	cmp	r0, r1, lsl #3
   13fd8:	adc	r2, r2, r2
   13fdc:	subcs	r0, r0, r1, lsl #3
   13fe0:	cmp	r0, r1, lsl #2
   13fe4:	adc	r2, r2, r2
   13fe8:	subcs	r0, r0, r1, lsl #2
   13fec:	cmp	r0, r1, lsl #1
   13ff0:	adc	r2, r2, r2
   13ff4:	subcs	r0, r0, r1, lsl #1
   13ff8:	cmp	r0, r1
   13ffc:	adc	r2, r2, r2
   14000:	subcs	r0, r0, r1
   14004:	mov	r0, r2
   14008:	bx	lr
   1400c:	moveq	r0, #1
   14010:	movne	r0, #0
   14014:	bx	lr
   14018:	clz	r2, r1
   1401c:	rsb	r2, r2, #31
   14020:	lsr	r0, r0, r2
   14024:	bx	lr
   14028:	cmp	r0, #0
   1402c:	mvnne	r0, #0
   14030:	b	14294 <abort@plt+0x3470>
   14034:	cmp	r1, #0
   14038:	beq	14028 <abort@plt+0x3204>
   1403c:	push	{r0, r1, lr}
   14040:	bl	13e48 <abort@plt+0x3024>
   14044:	pop	{r1, r2, lr}
   14048:	mul	r3, r2, r0
   1404c:	sub	r1, r1, r3
   14050:	bx	lr
   14054:	cmp	r1, #0
   14058:	beq	14264 <abort@plt+0x3440>
   1405c:	eor	ip, r0, r1
   14060:	rsbmi	r1, r1, #0
   14064:	subs	r2, r1, #1
   14068:	beq	14230 <abort@plt+0x340c>
   1406c:	movs	r3, r0
   14070:	rsbmi	r3, r0, #0
   14074:	cmp	r3, r1
   14078:	bls	1423c <abort@plt+0x3418>
   1407c:	tst	r1, r2
   14080:	beq	1424c <abort@plt+0x3428>
   14084:	clz	r2, r3
   14088:	clz	r0, r1
   1408c:	sub	r2, r0, r2
   14090:	rsbs	r2, r2, #31
   14094:	addne	r2, r2, r2, lsl #1
   14098:	mov	r0, #0
   1409c:	addne	pc, pc, r2, lsl #2
   140a0:	nop			; (mov r0, r0)
   140a4:	cmp	r3, r1, lsl #31
   140a8:	adc	r0, r0, r0
   140ac:	subcs	r3, r3, r1, lsl #31
   140b0:	cmp	r3, r1, lsl #30
   140b4:	adc	r0, r0, r0
   140b8:	subcs	r3, r3, r1, lsl #30
   140bc:	cmp	r3, r1, lsl #29
   140c0:	adc	r0, r0, r0
   140c4:	subcs	r3, r3, r1, lsl #29
   140c8:	cmp	r3, r1, lsl #28
   140cc:	adc	r0, r0, r0
   140d0:	subcs	r3, r3, r1, lsl #28
   140d4:	cmp	r3, r1, lsl #27
   140d8:	adc	r0, r0, r0
   140dc:	subcs	r3, r3, r1, lsl #27
   140e0:	cmp	r3, r1, lsl #26
   140e4:	adc	r0, r0, r0
   140e8:	subcs	r3, r3, r1, lsl #26
   140ec:	cmp	r3, r1, lsl #25
   140f0:	adc	r0, r0, r0
   140f4:	subcs	r3, r3, r1, lsl #25
   140f8:	cmp	r3, r1, lsl #24
   140fc:	adc	r0, r0, r0
   14100:	subcs	r3, r3, r1, lsl #24
   14104:	cmp	r3, r1, lsl #23
   14108:	adc	r0, r0, r0
   1410c:	subcs	r3, r3, r1, lsl #23
   14110:	cmp	r3, r1, lsl #22
   14114:	adc	r0, r0, r0
   14118:	subcs	r3, r3, r1, lsl #22
   1411c:	cmp	r3, r1, lsl #21
   14120:	adc	r0, r0, r0
   14124:	subcs	r3, r3, r1, lsl #21
   14128:	cmp	r3, r1, lsl #20
   1412c:	adc	r0, r0, r0
   14130:	subcs	r3, r3, r1, lsl #20
   14134:	cmp	r3, r1, lsl #19
   14138:	adc	r0, r0, r0
   1413c:	subcs	r3, r3, r1, lsl #19
   14140:	cmp	r3, r1, lsl #18
   14144:	adc	r0, r0, r0
   14148:	subcs	r3, r3, r1, lsl #18
   1414c:	cmp	r3, r1, lsl #17
   14150:	adc	r0, r0, r0
   14154:	subcs	r3, r3, r1, lsl #17
   14158:	cmp	r3, r1, lsl #16
   1415c:	adc	r0, r0, r0
   14160:	subcs	r3, r3, r1, lsl #16
   14164:	cmp	r3, r1, lsl #15
   14168:	adc	r0, r0, r0
   1416c:	subcs	r3, r3, r1, lsl #15
   14170:	cmp	r3, r1, lsl #14
   14174:	adc	r0, r0, r0
   14178:	subcs	r3, r3, r1, lsl #14
   1417c:	cmp	r3, r1, lsl #13
   14180:	adc	r0, r0, r0
   14184:	subcs	r3, r3, r1, lsl #13
   14188:	cmp	r3, r1, lsl #12
   1418c:	adc	r0, r0, r0
   14190:	subcs	r3, r3, r1, lsl #12
   14194:	cmp	r3, r1, lsl #11
   14198:	adc	r0, r0, r0
   1419c:	subcs	r3, r3, r1, lsl #11
   141a0:	cmp	r3, r1, lsl #10
   141a4:	adc	r0, r0, r0
   141a8:	subcs	r3, r3, r1, lsl #10
   141ac:	cmp	r3, r1, lsl #9
   141b0:	adc	r0, r0, r0
   141b4:	subcs	r3, r3, r1, lsl #9
   141b8:	cmp	r3, r1, lsl #8
   141bc:	adc	r0, r0, r0
   141c0:	subcs	r3, r3, r1, lsl #8
   141c4:	cmp	r3, r1, lsl #7
   141c8:	adc	r0, r0, r0
   141cc:	subcs	r3, r3, r1, lsl #7
   141d0:	cmp	r3, r1, lsl #6
   141d4:	adc	r0, r0, r0
   141d8:	subcs	r3, r3, r1, lsl #6
   141dc:	cmp	r3, r1, lsl #5
   141e0:	adc	r0, r0, r0
   141e4:	subcs	r3, r3, r1, lsl #5
   141e8:	cmp	r3, r1, lsl #4
   141ec:	adc	r0, r0, r0
   141f0:	subcs	r3, r3, r1, lsl #4
   141f4:	cmp	r3, r1, lsl #3
   141f8:	adc	r0, r0, r0
   141fc:	subcs	r3, r3, r1, lsl #3
   14200:	cmp	r3, r1, lsl #2
   14204:	adc	r0, r0, r0
   14208:	subcs	r3, r3, r1, lsl #2
   1420c:	cmp	r3, r1, lsl #1
   14210:	adc	r0, r0, r0
   14214:	subcs	r3, r3, r1, lsl #1
   14218:	cmp	r3, r1
   1421c:	adc	r0, r0, r0
   14220:	subcs	r3, r3, r1
   14224:	cmp	ip, #0
   14228:	rsbmi	r0, r0, #0
   1422c:	bx	lr
   14230:	teq	ip, r0
   14234:	rsbmi	r0, r0, #0
   14238:	bx	lr
   1423c:	movcc	r0, #0
   14240:	asreq	r0, ip, #31
   14244:	orreq	r0, r0, #1
   14248:	bx	lr
   1424c:	clz	r2, r1
   14250:	rsb	r2, r2, #31
   14254:	cmp	ip, #0
   14258:	lsr	r0, r3, r2
   1425c:	rsbmi	r0, r0, #0
   14260:	bx	lr
   14264:	cmp	r0, #0
   14268:	mvngt	r0, #-2147483648	; 0x80000000
   1426c:	movlt	r0, #-2147483648	; 0x80000000
   14270:	b	14294 <abort@plt+0x3470>
   14274:	cmp	r1, #0
   14278:	beq	14264 <abort@plt+0x3440>
   1427c:	push	{r0, r1, lr}
   14280:	bl	1405c <abort@plt+0x3238>
   14284:	pop	{r1, r2, lr}
   14288:	mul	r3, r2, r0
   1428c:	sub	r1, r1, r3
   14290:	bx	lr
   14294:	push	{r1, lr}
   14298:	mov	r0, #8
   1429c:	bl	10bfc <raise@plt>
   142a0:	pop	{r1, pc}
   142a4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   142a8:	mov	r7, r0
   142ac:	ldr	r6, [pc, #72]	; 142fc <abort@plt+0x34d8>
   142b0:	ldr	r5, [pc, #72]	; 14300 <abort@plt+0x34dc>
   142b4:	add	r6, pc, r6
   142b8:	add	r5, pc, r5
   142bc:	sub	r6, r6, r5
   142c0:	mov	r8, r1
   142c4:	mov	r9, r2
   142c8:	bl	10bc4 <calloc@plt-0x20>
   142cc:	asrs	r6, r6, #2
   142d0:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   142d4:	mov	r4, #0
   142d8:	add	r4, r4, #1
   142dc:	ldr	r3, [r5], #4
   142e0:	mov	r2, r9
   142e4:	mov	r1, r8
   142e8:	mov	r0, r7
   142ec:	blx	r3
   142f0:	cmp	r6, r4
   142f4:	bne	142d8 <abort@plt+0x34b4>
   142f8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   142fc:	andeq	r0, r1, r4, asr ip
   14300:	andeq	r0, r1, ip, asr #24
   14304:	bx	lr
   14308:	ldr	r3, [pc, #12]	; 1431c <abort@plt+0x34f8>
   1430c:	mov	r1, #0
   14310:	add	r3, pc, r3
   14314:	ldr	r2, [r3]
   14318:	b	10d64 <__cxa_atexit@plt>
   1431c:	andeq	r0, r1, r0, asr #27

Disassembly of section .fini:

00014320 <.fini>:
   14320:	push	{r3, lr}
   14324:	pop	{r3, pc}
