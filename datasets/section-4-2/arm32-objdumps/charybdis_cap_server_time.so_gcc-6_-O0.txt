
../repos/charybdis/modules/.libs/cap_server_time.so:     file format elf32-littlearm


Disassembly of section .init:

00000418 <_init>:
 418:	push	{r3, lr}
 41c:	bl	480 <call_weak_fn>
 420:	pop	{r3, pc}

Disassembly of section .plt:

00000424 <.plt>:
 424:	push	{lr}		; (str lr, [sp, #-4]!)
 428:	ldr	lr, [pc, #4]	; 434 <.plt+0x10>
 42c:	add	lr, pc, lr
 430:	ldr	pc, [lr, #8]!
 434:	.word	0x00010bcc

00000438 <__cxa_finalize@plt>:
 438:	add	ip, pc, #0, 12
 43c:	add	ip, ip, #16, 20	; 0x10000
 440:	ldr	pc, [ip, #3020]!	; 0xbcc

00000444 <rb_snprintf_append@plt>:
 444:	add	ip, pc, #0, 12
 448:	add	ip, ip, #16, 20	; 0x10000
 44c:	ldr	pc, [ip, #3012]!	; 0xbc4

00000450 <strftime@plt>:
 450:	add	ip, pc, #0, 12
 454:	add	ip, ip, #16, 20	; 0x10000
 458:	ldr	pc, [ip, #3004]!	; 0xbbc

0000045c <__gmon_start__@plt>:
 45c:	add	ip, pc, #0, 12
 460:	add	ip, ip, #16, 20	; 0x10000
 464:	ldr	pc, [ip, #2996]!	; 0xbb4

00000468 <gmtime@plt>:
 468:	add	ip, pc, #0, 12
 46c:	add	ip, ip, #16, 20	; 0x10000
 470:	ldr	pc, [ip, #2988]!	; 0xbac

00000474 <rb_gettimeofday@plt>:
 474:	add	ip, pc, #0, 12
 478:	add	ip, ip, #16, 20	; 0x10000
 47c:	ldr	pc, [ip, #2980]!	; 0xba4

Disassembly of section .text:

00000480 <call_weak_fn>:
 480:	ldr	r3, [pc, #20]	; 49c <call_weak_fn+0x1c>
 484:	ldr	r2, [pc, #20]	; 4a0 <call_weak_fn+0x20>
 488:	add	r3, pc, r3
 48c:	ldr	r2, [r3, r2]
 490:	cmp	r2, #0
 494:	bxeq	lr
 498:	b	45c <__gmon_start__@plt>
 49c:	.word	0x00010b70
 4a0:	.word	0x00000030

000004a4 <deregister_tm_clones>:
 4a4:	ldr	r3, [pc, #52]	; 4e0 <deregister_tm_clones+0x3c>
 4a8:	ldr	r0, [pc, #52]	; 4e4 <deregister_tm_clones+0x40>
 4ac:	add	r3, pc, r3
 4b0:	add	r0, pc, r0
 4b4:	add	r3, r3, #3
 4b8:	sub	r3, r3, r0
 4bc:	cmp	r3, #6
 4c0:	ldr	r3, [pc, #32]	; 4e8 <deregister_tm_clones+0x44>
 4c4:	add	r3, pc, r3
 4c8:	bxls	lr
 4cc:	ldr	r2, [pc, #24]	; 4ec <deregister_tm_clones+0x48>
 4d0:	ldr	r3, [r3, r2]
 4d4:	cmp	r3, #0
 4d8:	bxeq	lr
 4dc:	bx	r3
 4e0:	.word	0x00010bec
 4e4:	.word	0x00010be8
 4e8:	.word	0x00010b34
 4ec:	.word	0x00000028

000004f0 <register_tm_clones>:
 4f0:	ldr	r1, [pc, #56]	; 530 <register_tm_clones+0x40>
 4f4:	ldr	r0, [pc, #56]	; 534 <register_tm_clones+0x44>
 4f8:	add	r1, pc, r1
 4fc:	add	r0, pc, r0
 500:	sub	r1, r1, r0
 504:	ldr	r3, [pc, #44]	; 538 <register_tm_clones+0x48>
 508:	asr	r1, r1, #2
 50c:	add	r3, pc, r3
 510:	add	r1, r1, r1, lsr #31
 514:	asrs	r1, r1, #1
 518:	bxeq	lr
 51c:	ldr	r2, [pc, #24]	; 53c <register_tm_clones+0x4c>
 520:	ldr	r3, [r3, r2]
 524:	cmp	r3, #0
 528:	bxeq	lr
 52c:	bx	r3
 530:	.word	0x00010ba0
 534:	.word	0x00010b9c
 538:	.word	0x00010aec
 53c:	.word	0x00000038

00000540 <__do_global_dtors_aux>:
 540:	ldr	r3, [pc, #76]	; 594 <__do_global_dtors_aux+0x54>
 544:	ldr	r2, [pc, #76]	; 598 <__do_global_dtors_aux+0x58>
 548:	add	r3, pc, r3
 54c:	add	r2, pc, r2
 550:	ldrb	r3, [r3]
 554:	cmp	r3, #0
 558:	bxne	lr
 55c:	ldr	r3, [pc, #56]	; 59c <__do_global_dtors_aux+0x5c>
 560:	push	{r4, lr}
 564:	ldr	r3, [r2, r3]
 568:	cmp	r3, #0
 56c:	beq	57c <__do_global_dtors_aux+0x3c>
 570:	ldr	r3, [pc, #40]	; 5a0 <__do_global_dtors_aux+0x60>
 574:	ldr	r0, [pc, r3]
 578:	bl	438 <__cxa_finalize@plt>
 57c:	bl	4a4 <deregister_tm_clones>
 580:	ldr	r3, [pc, #28]	; 5a4 <__do_global_dtors_aux+0x64>
 584:	mov	r2, #1
 588:	add	r3, pc, r3
 58c:	strb	r2, [r3]
 590:	pop	{r4, pc}
 594:	.word	0x00010b50
 598:	.word	0x00010aac
 59c:	.word	0x00000024
 5a0:	.word	0x00010ac0
 5a4:	.word	0x00010b10

000005a8 <frame_dummy>:
 5a8:	ldr	r0, [pc, #56]	; 5e8 <frame_dummy+0x40>
 5ac:	ldr	r3, [pc, #56]	; 5ec <frame_dummy+0x44>
 5b0:	add	r0, pc, r0
 5b4:	ldr	r2, [r0]
 5b8:	add	r3, pc, r3
 5bc:	cmp	r2, #0
 5c0:	bne	5c8 <frame_dummy+0x20>
 5c4:	b	4f0 <register_tm_clones>
 5c8:	ldr	r2, [pc, #32]	; 5f0 <frame_dummy+0x48>
 5cc:	ldr	r3, [r3, r2]
 5d0:	cmp	r3, #0
 5d4:	beq	5c4 <frame_dummy+0x1c>
 5d8:	push	{r4, lr}
 5dc:	blx	r3
 5e0:	pop	{r4, lr}
 5e4:	b	4f0 <register_tm_clones>
 5e8:	.word	0x00010944
 5ec:	.word	0x00010a40
 5f0:	.word	0x00000034

000005f4 <msgbuf_append_tag>:
 5f4:	push	{fp}		; (str fp, [sp, #-4]!)
 5f8:	add	fp, sp, #0
 5fc:	sub	sp, sp, #20
 600:	str	r0, [fp, #-8]
 604:	str	r1, [fp, #-12]
 608:	str	r2, [fp, #-16]
 60c:	str	r3, [fp, #-20]	; 0xffffffec
 610:	ldr	r3, [fp, #-8]
 614:	ldr	r3, [r3]
 618:	cmp	r3, #14
 61c:	bhi	6b8 <msgbuf_append_tag+0xc4>
 620:	ldr	r3, [fp, #-8]
 624:	ldr	r2, [r3]
 628:	ldr	r1, [fp, #-8]
 62c:	mov	r3, r2
 630:	lsl	r3, r3, #1
 634:	add	r3, r3, r2
 638:	lsl	r3, r3, #2
 63c:	add	r3, r1, r3
 640:	add	r3, r3, #4
 644:	ldr	r2, [fp, #-12]
 648:	str	r2, [r3]
 64c:	ldr	r3, [fp, #-8]
 650:	ldr	r2, [r3]
 654:	ldr	r1, [fp, #-8]
 658:	mov	r3, r2
 65c:	lsl	r3, r3, #1
 660:	add	r3, r3, r2
 664:	lsl	r3, r3, #2
 668:	add	r3, r1, r3
 66c:	add	r3, r3, #8
 670:	ldr	r2, [fp, #-16]
 674:	str	r2, [r3]
 678:	ldr	r3, [fp, #-8]
 67c:	ldr	r2, [r3]
 680:	ldr	r1, [fp, #-8]
 684:	mov	r3, r2
 688:	lsl	r3, r3, #1
 68c:	add	r3, r3, r2
 690:	lsl	r3, r3, #2
 694:	add	r3, r1, r3
 698:	add	r3, r3, #12
 69c:	ldr	r2, [fp, #-20]	; 0xffffffec
 6a0:	str	r2, [r3]
 6a4:	ldr	r3, [fp, #-8]
 6a8:	ldr	r3, [r3]
 6ac:	add	r2, r3, #1
 6b0:	ldr	r3, [fp, #-8]
 6b4:	str	r2, [r3]
 6b8:	nop			; (mov r0, r0)
 6bc:	add	sp, fp, #0
 6c0:	pop	{fp}		; (ldr fp, [sp], #4)
 6c4:	bx	lr

000006c8 <cap_server_time_process>:
 6c8:	push	{r4, fp, lr}
 6cc:	add	fp, sp, #8
 6d0:	sub	sp, sp, #28
 6d4:	str	r0, [fp, #-32]	; 0xffffffe0
 6d8:	ldr	r4, [pc, #212]	; 7b4 <cap_server_time_process+0xec>
 6dc:	add	r4, pc, r4
 6e0:	ldr	r3, [fp, #-32]	; 0xffffffe0
 6e4:	ldr	r3, [r3, #4]
 6e8:	str	r3, [fp, #-16]
 6ec:	sub	r3, fp, #24
 6f0:	mov	r1, #0
 6f4:	mov	r0, r3
 6f8:	bl	474 <rb_gettimeofday@plt>
 6fc:	mov	r3, r0
 700:	cmp	r3, #0
 704:	bne	7ac <cap_server_time_process+0xe4>
 708:	sub	r3, fp, #24
 70c:	mov	r0, r3
 710:	bl	468 <gmtime@plt>
 714:	mov	r3, r0
 718:	ldr	r2, [pc, #152]	; 7b8 <cap_server_time_process+0xf0>
 71c:	add	r2, pc, r2
 720:	mov	r1, #512	; 0x200
 724:	ldr	r0, [pc, #144]	; 7bc <cap_server_time_process+0xf4>
 728:	add	r0, pc, r0
 72c:	bl	450 <strftime@plt>
 730:	mov	r3, r0
 734:	cmp	r3, #0
 738:	beq	7a0 <cap_server_time_process+0xd8>
 73c:	ldr	r3, [fp, #-20]	; 0xffffffec
 740:	ldr	r2, [pc, #120]	; 7c0 <cap_server_time_process+0xf8>
 744:	smull	r1, r2, r2, r3
 748:	asr	r2, r2, #6
 74c:	asr	r3, r3, #31
 750:	sub	r3, r2, r3
 754:	ldr	r2, [pc, #104]	; 7c4 <cap_server_time_process+0xfc>
 758:	add	r2, pc, r2
 75c:	mov	r1, #512	; 0x200
 760:	ldr	r0, [pc, #96]	; 7c8 <cap_server_time_process+0x100>
 764:	add	r0, pc, r0
 768:	bl	444 <rb_snprintf_append@plt>
 76c:	mov	r3, r0
 770:	cmp	r3, #0
 774:	blt	7a8 <cap_server_time_process+0xe0>
 778:	ldr	r3, [pc, #76]	; 7cc <cap_server_time_process+0x104>
 77c:	ldr	r3, [r4, r3]
 780:	ldr	r3, [r3]
 784:	ldr	r2, [pc, #68]	; 7d0 <cap_server_time_process+0x108>
 788:	add	r2, pc, r2
 78c:	ldr	r1, [pc, #64]	; 7d4 <cap_server_time_process+0x10c>
 790:	add	r1, pc, r1
 794:	ldr	r0, [fp, #-16]
 798:	bl	5f4 <msgbuf_append_tag>
 79c:	b	7ac <cap_server_time_process+0xe4>
 7a0:	nop			; (mov r0, r0)
 7a4:	b	7ac <cap_server_time_process+0xe4>
 7a8:	nop			; (mov r0, r0)
 7ac:	sub	sp, fp, #8
 7b0:	pop	{r4, fp, pc}
 7b4:	.word	0x0001091c
 7b8:	.word	0x00000104
 7bc:	.word	0x00010978
 7c0:	.word	0x10624dd3
 7c4:	.word	0x000000dc
 7c8:	.word	0x0001093c
 7cc:	.word	0x0000002c
 7d0:	.word	0x00010918
 7d4:	.word	0x000000ac

Disassembly of section .fini:

000007d8 <_fini>:
 7d8:	push	{r3, lr}
 7dc:	pop	{r3, pc}
